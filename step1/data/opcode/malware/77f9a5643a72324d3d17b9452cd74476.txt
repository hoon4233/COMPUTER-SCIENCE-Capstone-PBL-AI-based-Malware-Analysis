mov
add
add
sub
mov
sbb
pop
sub
mov
movs
mov
imul
pushf
sti
fstp
xchg
pop
jnp
pop
jge
dec
inc
dec
mul
jo
mov
jle
int
daa
mov
mov
in
(bad)
pop
int3
pop
icebp
sbb
jle
cld
xchg
cld
sbb
push
and
push
push
iret
push
cmp
cmps
enter
mov
mov
jae
addr16
shr
cmc
xchg
cmp
xchg
out
out
adc
mov
ja
jae
fwait
repnz
or
dec
fst
mov
inc
xor
data16
jmp
and
sbb
(bad)
mov
jns
idiv
enter
cmps
in
xor
cmp
cmp
cmp
cmp
or
lods
das
inc
(bad)
cmp
mov
fs
gs
aad
adc
push
daa
sbb
loope
push
bound
xchg
out
loop
inc
sub
cmp
xchg
in
stos
shl
addr16
(bad)
in
movs
stos
adc
mov
(bad)
fwait
bnd
push
test
sbb
jne
ss
mov
ror
xchg
pop
add
scas
xor
das
pusha
dec
out
xchg
add
cmp
lahf
sbb
jns
imul
(bad)
jecxz
mov
mov
sub
push
and
ret
dec
ret
and
adc
jmp
icebp
push
push
sbb
or
adc
sub
ss
mov
lock
out
shr
idiv
jmp
push
arpl
ret
dec
jmp
pop
ds
loope
in
cmps
ds
shl
lahf
loope
xchg
lea
popf
(bad)
daa
xchg
lods
inc
jecxz
sub
xor
mov
test
inc
jne
mov
adc
dec
in
test
sub
xchg
rcr
sbb
cdq
(bad)
test
leave
push
mov
inc
add
stc
and
xlat
outs
ins
(bad)
fst
sti
and
sbb
daa
push
inc
repnz
dec
loope
sub
vpshlb
out
xor
mov
sbb
jne
mov
xchg
mov
mov
addr16
sub
cs
retf
dec
push
clc
test
sub
lods
xchg
inc
or
not
aad
xchg
in
ins
jne
lods
xchg
mov
xchg
jno
add
pop
aam
sbb
in
mov
retf
sub
add
dec
std
lds
mov
jmp
push
pushf
mov
mov
lock
push
add
xor
adc
inc
nop
mov
jb
mul
in
add
jecxz
xor
fadd
js
cwde
push
xor
jmp
push
or
test
xor
jae
xchg
je
dec
test
retf
fimul
or
sub
add
es
je
ret
cld
div
test
mov
leave
lea
js
ins
repnz
dec
lea
cmp
sahf
jno
pop
pusha
or
xchg
jae
jnp
mov
mov
aas
enter
lock
dec
sbb
aaa
mov
movs
cdq
cli
sub
rcr
test
fsub
pop
sub
nop
cld
ret
loopne
push
into
sar
cmp
lock
sub
aad
mov
mov
sbb
std
imul
stos
not
(bad)
cwde
sbb
add
mov
inc
mov
ret
ja
aad
adc
pushf
mov
or
mov
jle
rol
cmp
cmps
push
loopne
dec
xor
cs
mov
pop
iret
fwait
jno
mov
mov
int3
jne
daa
add
scas
in
lock
xchg
dec
(bad)
mov
repz
ja
mov
aaa
aam
sub
mov
test
retf
dec
and
cmp
mov
daa
push
in
pop
aam
mov
xchg
pusha
sub
mov
fld
mov
xchg
push
and
pop
gs
outs
pop
xchg
cmps
or
adc
stos
sbb
test
stc
sbb
jmp
inc
sbb
addr16
stc
sbb
fst
(bad)
cld
jbe
(bad)
adc
and
inc
push
cmp
push
adc
inc
icebp
mov
ins
popa
cmc
movs
fs
(bad)
bswap
or
dec
bound
aas
push
sbb
repz
cwde
adc
or
fisttp
stos
iret
dec
mov
sbb
xlat
nop
push
mov
adc
sbb
js
(bad)
dec
inc
int
mov
das
lea
mov
cmp
popa
sub
cmp
lds
scas
aad
mov
pop
xchg
pushf
ret
push
mov
dec
lods
dec
ja
(bad)
cld
and
pop
adc
iret
xor
call
mov
or
out
add
mov
jae
mov
hlt
hlt
mov
or
sbb
stos
retf
mov
call
dec
retf
cmp
cmp
in
push
das
out
ins
test
lds
add
add
out
cs
(bad)
sub
mov
scas
xchg
in
mov
cld
aad
push
ret
sbb
call
ror
das
dec
in
int3
hlt
test
out
sbb
and
and
mov
jno
rcr
jle
test
jmp
daa
lods
in
sub
inc
inc
outs
sbb
(bad)
bound
sub
jb
mov
mov
ret
or
iret
mov
enter
inc
add
test
call
and
jp
mov
shr
add
stc
dec
mov
loop
jo
sub
out
lock
jne
lahf
mov
ins
ins
bnd
mov
sbb
test
pop
push
add
xchg
pop
adc
fadd
ja
add
sub
repnz
icebp
pop
jne
test
inc
iret
lds
in
push
cmp
jl
call
(bad)
mov
lds
add
push
mov
test
and
xor
adc
(bad)
hlt
aaa
cmp
xchg
test
push
mov
xor
addr16
and
push
inc
es
loopne
dec
movs
addps
or
loopne
aam
jmp
adc
daa
mov
adc
shr
imul
cmp
fisubr
mov
cmp
cmc
(bad)
mov
fcomip
test
dec
enter
sbb
and
retf
dec
sbb
pop
mov
shr
or
and
adc
sbb
adc
(bad)
daa
sahf
stos
xor
aad
sub
add
dec
call
jae
jns
iret
mov
aaa
inc
imul
test
aas
pop
data16
fisubr
pusha
(bad)
jmp
mov
sub
pushf
out
sbb
sbb
outs
rol
xchg
push
ins
xor
jl
int
fcmovnu
lods
dec
ins
je
inc
pop
out
es
cld
lahf
fmul
test
retf
xchg
jnp
mov
fst
xor
shl
in
sar
sahf
out
lods
sbb
movs
iret
test
or
cdq
imul
test
stos
jns
xor
popa
leave
and
push
fs
test
iret
sub
sub
push
pop
leave
outs
ror
and
lock
jle
mov
sub
push
ret
jp
mov
ror
fldenv
fld
enter
xlat
ret
ja
cmp
ss
xchg
mov
inc
test
cli
xchg
cmp
push
xor
and
outs
xor
sub
nop
pop
scas
outs
mov
jae
cdq
mov
jbe
imul
xchg
jns
push
fbstp
mov
aad
adc
push
dec
push
add
sti
popa
inc
dec
mov
out
inc
div
mov
cmp
mov
pushf
mov
sub
and
inc
mov
adc
mov
sub
outs
and
lds
into
test
ficom
cdq
pop
and
pop
es
pop
(bad)
xor
xor
and
idiv
nop
xor
mov
mov
inc
sahf
ror
adc
adc
retf
popa
inc
sbb
xchg
ja
pop
ins
jp
sub
and
pop
rcr
sahf
mov
es
mov
ins
cli
xchg
and
je
xchg
jns
jmp
push
mov
mov
xor
std
lock
cmp
adc
xor
cs
es
out
pop
pop
and
cmp
movs
xor
addr16
test
std
push
mov
aaa
pop
lahf
inc
sub
imul
pop
adc
jb
jle
sbb
sub
fdecstp
jge
out
xchg
adc
fcmovne
not
xor
jb
adc
xchg
ret
out
push
push
(bad)
clc
xchg
(bad)
es
dec
test
aam
push
dec
dec
sbb
dec
fstp
aas
push
xchg
in
add
cdq
push
dec
hlt
or
inc
jle
push
(bad)
je
xor
xchg
int
movs
shl
sbb
push
out
imul
inc
sbb
xor
or
pop
jo
es
push
pop
movs
xchg
xchg
test
add
dec
pop
xor
cdq
inc
jne
jmp
mov
lods
sub
lods
out
inc
cwde
inc
push
nop
and
jmp
lock
retf
cwde
mov
xchg
sbb
xchg
xchg
mov
stos
jmp
outs
sti
scas
lods
fild
arpl
push
(bad)
fwait
mov
aas
adc
ja
mov
jb
fs
sahf
test
mov
in
sbb
fwait
loope
xchg
xchg
mov
rol
cdq
xchg
cs
push
push
push
ret
jns
mov
sbb
jecxz
outs
mov
cwde
add
sub
add
cmp
lds
sbb
retf
aaa
ds
lahf
scas
idiv
cld
sbb
fwait
call
ret
adc
and
pop
xor
or
fnstenv
dec
fsub
pop
mov
mov
inc
fwait
(bad)
cwde
test
leave
jp
mov
mov
or
stos
dec
pop
js
sahf
push
aad
xor
cmp
aad
or
movs
xor
or
mov
cmp
or
imul
or
sub
or
rcr
cli
pop
mov
dec
push
popa
add
into
cmp
xchg
or
out
ja
(bad)
dec
test
jns
xor
dec
dec
icebp
out
lea
adc
xchg
dec
scas
je
cmp
ja
cmp
cmp
inc
lods
adc
jns
ret
push
sbb
ins
movs
or
fisttp
lods
das
gs
add
pop
dec
dec
sbb
les
into
fwait
outs
ffree
inc
iret
ins
(bad)
int
inc
ss
lock
out
in
inc
mov
sub
mov
iret
mov
xor
in
test
push
call
mov
inc
mov
sbb
int
test
test
popf
sti
add
leave
dec
jge
(bad)
xor
ss
daa
xor
push
mov
jnp
inc
jge
push
inc
mov
push
ins
jo
add
push
ret
and
ret
sbb
push
repz
xchg
cwde
jmp
sahf
repnz
jmp
dec
fsubr
sub
pop
and
cs
fbld
imul
jge
pop
cmp
push
push
pop
fmul
push
sbb
ins
inc
leave
call
sub
pop
inc
and
stos
pop
cld
mov
lahf
mov
push
bound
adc
xlat
xor
xor
jecxz
dec
push
outs
mov
retf
add
test
outs
pop
out
inc
pop
mov
sbb
jle
cmc
ss
pop
retf
js
cmp
call
add
mov
test
test
mov
es
(bad)
aaa
dec
adc
adc
dec
jp
je
nop
adc
add
les
add
jp
sbb
ror
(bad)
adc
test
sbb
jno
push
into
ficomp
ins
xchg
div
fidiv
fstp
jne
xlat
loop
shl
and
adc
xor
inc
dec
adc
inc
sub
pop
pop
hlt
xor
fistp
ret
adc
sbb
lods
jne
push
adc
cmps
sbb
leave
push
movs
jo
les
mov
neg
pusha
mov
imul
mov
mov
and
pop
icebp
sahf
mov
mov
les
out
jae
stos
cmp
cmps
bswap
in
iret
xchg
push
sti
dec
scas
inc
mov
jmp
xor
mov
pop
add
out
cdq
adc
and
cwde
xor
adc
and
push
fcmovu
outs
hlt
popa
out
pop
sub
add
xor
stos
push
cmp
pusha
push
sub
mov
jmp
mul
fsubr
fld
imul
das
and
inc
div
out
jb
xchg
mov
clc
inc
or
jl
mov
sbb
shr
jns
pop
dec
lods
test
mov
(bad)
sti
outs
cmp
mov
arpl
push
sub
lock
mov
pop
mov
pop
add
dec
cdq
loopne
dec
mov
outs
out
jge
pop
in
sub
push
mov
cmp
scas
call
cmps
imul
in
xor
lods
lds
cwde
xchg
outs
outs
out
mov
leave
mov
add
or
push
mov
lock
retf
or
and
cli
(bad)
aam
lds
loopne
enter
push
dec
mov
movs
add
iret
xor
dec
and
imul
ficom
aas
std
fsqrt
or
mov
sahf
add
push
daa
(bad)
mov
cwde
popf
sub
pop
rol
xor
jnp
bsr
repz
dec
push
xchg
aas
mov
gs
mov
jmp
inc
add
cld
cmps
add
rcr
push
inc
sub
mov
sub
push
pop
cdq
outs
cmc
daa
mov
xchg
fmul
pop
and
adc
les
ret
cmp
push
xor
aad
ret
in
or
jb
push
or
fdiv
pop
fs
fld
jae
xchg
fidivr
xchg
jnp
and
nop
pushf
retf
jne
mov
mov
cmp
xor
mov
mov
push
js
loop
aaa
stos
sub
repnz
cmp
js
xchg
dec
mov
or
jmp
aad
pop
xchg
add
(bad)
retf
jge
loope
push
jecxz
scas
(bad)
shl
xor
call
call
mov
inc
lock
dec
adc
popa
push
(bad)
(bad)
adc
mov
xchg
je
push
ins
rcl
jle
cld
test
out
pop
(bad)
out
cmp
pusha
fidiv
sub
addr16
jbe
xlat
lahf
sbb
jno
punpckhdq
(bad)
lock
ins
mov
out
in
retf
in
test
(bad)
cmp
out
pop
pop
jo
dec
test
dec
xchg
nop
cmp
pushf
inc
imul
mov
jb
sub
mov
mov
out
or
adc
push
fldenv
or
xchg
into
loopne
and
push
mov
xchg
pop
pop
stc
and
out
pushf
sbb
cwde
out
sub
dec
enter
popf
cs
fmul
loope
in
pop
movs
inc
push
sub
dec
into
outs
xchg
loope
fnstsw
push
ins
and
mov
jge
(bad)
mov
sti
das
outs
scas
pop
out
push
mov
inc
mov
and
ret
fdivr
pusha
dec
jp
and
jmp
out
and
loopne
push
jno
ins
xchg
sub
(bad)
add
xlat
xor
loop
add
sub
sbb
push
lods
jbe
movs
in
mov
xchg
fcom
xchg
aaa
xchg
sbb
xor
daa
adc
daa
pop
push
inc
xor
ficom
test
push
push
and
xor
cmp
adc
xchg
sbb
push
mov
ins
mov
cmp
adc
aam
aaa
repnz
fcom
mov
jae
sub
sbb
jl
pop
push
fisub
xchg
add
add
ret
pop
sub
sub
outs
(bad)
fisub
fchs
mov
cdq
arpl
mov
ffreep
out
jmp
popa
icebp
mov
dec
neg
rcl
pop
xor
mov
xlat
add
fild
ja
or
jno
pop
sar
lods
jmp
inc
cs
sub
fidiv
jg
stos
sub
mov
hlt
jge
xchg
inc
mov
mov
dec
imul
test
mov
push
repnz
jecxz
je
push
stos
inc
push
xchg
and
test
jno
xchg
pop
repnz
add
stos
sub
jg
jo
loop
add
ret
dec
dec
push
loop
ficomp
push
retf
stos
enter
les
loope
scas
or
das
jae
scas
cld
ja
mov
push
ror
cld
stc
push
inc
cmp
xor
mov
xchg
nop
mov
or
sub
cli
scas
ror
out
int3
adc
dec
in
dec
push
pop
push
pop
pusha
mov
lds
sbb
(bad)
out
dec
pop
je
gs
sub
pushf
inc
add
xor
ins
lods
sti
jae
in
sbb
pop
data16
test
stos
bound
fcmovu
dec
xlat
jns
popf
fmul
cmp
retf
test
stos
mov
dec
xchg
and
xor
daa
sub
and
outs
test
out
add
outs
aam
not
sbb
sbb
jne
mov
out
out
cmp
sbb
pop
rcr
stos
mov
push
(bad)
cmp
(bad)
retf
aam
jmp
test
pop
div
xchg
push
fidivr
std
ja
stc
sub
dec
mov
push
loopne
div
push
cs
ins
jge
sbb
mov
stos
movs
mov
loope
pop
repnz
mov
jmp
sbb
mov
lahf
dec
inc
sahf
adc
adc
ror
push
ja
jmp
call
out
outs
xchg
stos
sti
stos
fs
imul
jo
adc
(bad)
sub
sub
jle
inc
les
loope
push
cmc
and
jae
jae
das
or
retf
and
jb
lds
in
pushf
jge
jns
nop
rol
push
and
mov
scas
movs
stos
fcomp
(bad)
push
pop
adc
jns
xchg
or
mov
inc
retf
ins
sub
jmp
and
cli
xchg
jmp
stos
lock
adc
pop
mov
scas
pop
ret
cmp
hlt
icebp
repz
arpl
jmp
sub
cs
icebp
push
loope
inc
ret
hlt
repnz
loope
push
mov
or
(bad)
cmps
scas
mov
ret
test
xchg
pop
push
vmovdqa
xchg
lods
pop
add
mov
dec
pop
in
push
pop
aad
sub
cmp
pop
and
mov
push
enter
inc
int
inc
xchg
mov
dec
call
inc
std
xchg
xor
iret
aam
and
imul
sahf
div
dec
sbb
inc
lea
push
sahf
aaa
rcl
mov
mov
retf
mov
xchg
out
daa
adc
xor
mov
and
test
pop
out
jae
xchg
mov
ss
inc
mov
cmp
fiadd
cmp
push
jbe
xor
outs
ficomp
mov
js
clc
cmps
xor
(bad)
jmp
and
lea
ret
xchg
imul
stos
fisttp
call
pop
es
aaa
cli
inc
call
mov
in
pop
cli
test
neg
cwde
jbe
xor
nop
and
jne
adc
stc
aaa
inc
mov
jge
add
in
inc
jg
dec
ret
les
push
call
ror
xlat
dec
mov
jp
mov
fwait
ja
push
inc
dec
xchg
pusha
cmova
and
shl
inc
int
scas
cmp
std
sbb
inc
ins
pop
jecxz
(bad)
sub
mov
(bad)
fisub
ficom
cmps
mov
je
stc
retf
call
sub
sub
pop
jmp
mov
jmp
gs
xor
mov
ret
and
mov
sub
pop
or
adc
xchg
mov
jmp
jbe
retf
shl
loop
mov
sahf
inc
lock
cld
cdq
ds
pop
cmp
jg
xor
daa
loope
cmp
or
test
xor
jle
jae
fnsave
out
out
or
pop
sub
pushf
movs
cwde
jl
ret
push
mov
out
jns
mov
push
shr
sbb
call
push
shl
or
popa
adc
pop
into
push
fwait
loopne
adc
in
nop
out
es
xchg
mov
sub
cmps
or
or
scas
dec
add
out
fwait
and
and
xor
mov
inc
scas
cmps
cmovb
cmp
mov
repnz
jg
hlt
shl
pop
mov
fbstp
inc
lods
js
push
push
out
jns
test
dec
cmp
xchg
int
dec
enter
xor
fbstp
frstor
sti
mov
and
or
ins
mov
pop
in
lea
dec
test
fcomp
sub
mov
pop
(bad)
sub
(bad)
aas
(bad)
adc
aad
inc
and
retf
repz
pop
adc
xchg
not
cmp
and
xchg
test
mov
inc
in
mov
pusha
adc
mov
jne
ror
clc
popf
ret
jecxz
int3
cli
cmp
mov
lea
fsub
fdiv
xchg
or
rcr
push
fld
addr16
stos
push
in
int
ficom
or
sbb
ror
push
(bad)
ficom
sti
inc
call
lahf
fild
xor
mov
and
into
cmps
popa
xor
dec
or
test
sbb
mov
lea
sbb
sbb
mov
jl
test
and
xor
int
push
and
imul
ret
xor
retf
inc
int
xchg
cmps
dec
clc
push
add
out
addr16
cmp
inc
or
or
jmp
sbb
int3
dec
and
jno
push
in
loope
push
stos
pop
(bad)
call
pop
xor
neg
mov
cmp
push
sub
and
pop
mov
xchg
cmp
ror
pop
dec
adc
lods
xlat
and
inc
jbe
push
shl
sub
sub
and
in
sbb
jne
sar
cli
loop
push
(bad)
icebp
push
jmp
cwde
xchg
(bad)
jmp
bnd
lods
and
jnp
in
lea
pop
inc
xlat
test
sbb
arpl
ja
test
mov
sbb
sbb
clc
call
mov
jb
mov
cdq
xor
jg
mov
das
jecxz
adc
test
push
sub
iret
xchg
adc
sbb
and
sbb
jns
inc
sbb
push
cmp
pop
pop
dec
mov
shl
mov
arpl
cs
fist
adc
mov
mov
jmp
scas
mov
ds
jbe
xor
repnz
gs
mov
cld
and
xor
dec
mov
sub
je
inc
inc
xchg
xor
xchg
daa
push
add
dec
data16
jb
mov
mov
sub
cmps
mov
adc
push
aad
fisub
int
int3
test
or
push
out
pop
scas
adc
frstor
fisttp
fsub
mov
sub
mov
xor
fnsave
(bad)
pop
inc
mov
dec
test
inc
outs
shl
mov
or
rcr
cmp
call
or
div
(bad)
fnstenv
and
jmp
mov
inc
dec
aam
mov
mov
dec
inc
mov
sbb
data16
leave
mov
fadd
cmps
push
inc
pop
(bad)
and
loopne
rcr
fmul
imul
pushf
mov
cmp
call
sbb
sahf
pop
dec
inc
out
pop
hlt
in
jns
mov
shr
sub
out
outs
out
cmc
out
push
rcl
inc
push
xor
je
and
ins
and
out
sbb
aam
jle
movs
or
pop
rcl
stos
fisttp
dec
fsubp
cmps
push
mov
js
xchg
mov
jne
jns
(bad)
push
fstp
jbe
test
mov
xlat
ror
icebp
mov
bound
sbb
xchg
jno
jmp
scas
daa
jne
dec
call
in
js
pop
sub
arpl
add
outs
xchg
pop
xchg
inc
cmp
retf
mov
test
sub
lds
dec
pop
shl
lods
xchg
ret
ss
dec
clc
fadd
push
repz
out
push
xchg
out
clc
out
mov
mov
dec
into
dec
call
sub
pop
push
jecxz
mov
scas
not
pop
(bad)
(bad)
xor
and
xor
jle
fsubr
in
imul
movs
jno
pop
or
addr16
push
push
fdivr
mov
(bad)
pop
push
push
cmp
jbe
adc
jmp
neg
cmps
cmp
rcl
or
push
pop
xor
aaa
icebp
and
sub
out
mov
mov
cmps
lock
sbb
xor
xlat
cmp
outs
lea
jno
je
xchg
test
sub
and
adc
mov
lds
test
stos
mov
push
sbb
es
jge
in
popf
sub
mov
out
inc
xchg
mov
adc
xchg
std
es
xchg
push
mov
or
sbb
cli
ins
arpl
dec
fidiv
sub
imul
(bad)
(bad)
adc
inc
or
push
div
sar
es
movs
jnp
lods
cmp
and
scas
je
pop
inc
or
imul
and
adc
stos
(bad)
imul
and
and
jne
fidiv
mov
and
gs
or
sbb
imul
cs
inc
enter
jmp
pop
and
leave
jl
mov
add
daa
jae
movs
lods
jns
xchg
mov
in
lods
push
gs
push
mov
test
sbb
loopne
fnstsw
pop
pop
pop
sbb
das
rcr
cmp
lea
das
fidivr
jbe
cmp
xchg
cdq
repz
inc
xor
cmp
xor
mov
jmp
mov
jp
or
or
in
enter
inc
xchg
cmp
nop
daa
cs
and
cmps
sti
dec
jmp
imul
pop
and
mov
scas
xchg
hlt
lods
and
jmp
mov
vpacksswb
test
loopne
adc
push
into
xchg
popf
das
(bad)
icebp
cmp
arpl
fstp
pop
dec
dec
ins
dec
fisubr
(bad)
inc
out
cmps
mov
adc
adc
popa
mov
pop
mov
rol
ins
iret
or
mov
cdq
or
lods
das
les
lods
mov
cli
(bad)
xchg
int
mov
ret
cmp
icebp
sbb
daa
(bad)
imul
adc
mov
sub
add
or
loope
cld
shr
sub
div
cmp
xchg
rol
sub
mov
mov
sbb
lods
sbb
mov
fadd
push
inc
fwait
ret
scas
push
lahf
punpckldq
retf
dec
dec
push
jo
shl
test
mov
mov
jo
ret
inc
(bad)
neg
or
xchg
scas
mov
pop
jmp
(bad)
mov
fs
scas
test
cmp
xlat
leave
and
js
dec
repz
(bad)
jle
push
inc
add
cmp
arpl
sbb
mov
fimul
pop
sar
jne
in
push
icebp
daa
inc
mov
or
call
push
aam
loope
push
mov
add
mov
repnz
addr16
jmp
xor
aas
lds
mov
in
(bad)
movs
jle
add
ret
adc
jge
jnp
ror
fist
clc
movs
loopne
js
addr16
jns
fsubp
call
aad
nop
push
mov
lods
addr16
sar
sti
xchg
std
jp
lock
dec
idiv
or
mov
and
ss
mov
jge
ffreep
fld
cli
add
inc
jmp
cld
sbb
push
push
mov
or
jl
lods
rcr
ins
sub
jmp
aas
mov
rcl
jb
and
loopne
xchg
mov
and
std
sub
mov
xor
les
or
pushf
xchg
dec
in
(bad)
fs
leave
(bad)
xchg
mov
cld
push
push
test
and
dec
fsub
pop
ds
xchg
push
imul
mov
imul
xchg
cdq
js
clc
push
es
xor
push
(bad)
test
ja
push
xor
test
call
imul
repnz
es
lods
in
bound
jno
sahf
inc
mov
call
jo
in
aam
push
(bad)
mov
rcr
cmps
pop
inc
push
add
xchg
jmp
mov
imul
pushf
push
sbb
pop
stos
test
icebp
in
pop
xchg
pop
xchg
add
ja
cdq
xchg
xchg
cs
shr
push
fsubr
xchg
sbb
push
mov
cmp
and
stos
xchg
pop
push
lods
inc
push
xor
dec
xor
lock
retf
rcr
cmp
push
push
stos
push
sbb
cmp
inc
daa
or
pop
cmp
adc
test
loope
push
xor
cdq
cmps
xchg
dec
fstp
pop
sub
cli
out
scas
mov
xor
stc
and
pop
ins
add
ftst
ins
dec
and
call
dec
and
mov
add
mov
dec
fmul
dec
aad
out
call
retf
and
inc
jl
fst
push
adc
dec
int3
push
or
or
pushf
jne
sbb
out
stos
jg
into
cmp
arpl
jns
dec
push
outs
mov
fldenv
xchg
pop
xchg
fwait
pop
jle
stos
push
out
push
xor
in
popa
std
fdiv
push
out
cli
mov
aaa
or
mov
lds
pop
xor
push
xor
daa
std
or
jge
(bad)
or
repz
mov
sbb
sar
mov
jbe
adc
dec
ret
mov
xlat
push
int
sub
clc
pop
repnz
jnp
test
jb
ficom
lea
and
adc
retf
add
and
lods
pusha
in
xchg
daa
jl
clc
imul
scas
mov
idiv
nop
out
pop
adc
lea
jp
dec
mov
rcl
fs
sbb
fdivr
mov
(bad)
fwait
cmp
mov
cmc
jns
mov
hlt
in
test
xchg
push
stos
push
dec
jecxz
or
or
das
mov
sub
xor
xchg
ret
pop
int
and
(bad)
in
push
inc
sbb
push
aas
mov
fisttp
lods
sub
clc
movs
mov
cmp
jle
in
ins
inc
jbe
cmps
mov
test
sub
and
inc
push
xor
lahf
sub
pop
dec
mov
xchg
imul
inc
and
add
mov
daa
pop
leave
ficomp
add
sub
push
dec
add
xchg
push
jns
nop
add
sub
mov
or
dec
mov
add
dec
data16
sbb
mov
out
int3
(bad)
adc
pop
inc
dec
cmps
loope
cdq
aas
repnz
into
aad
pop
test
push
xchg
(bad)
jp
lods
frstor
inc
sti
mov
jecxz
jg
loopne
les
push
lods
movs
xlat
mov
aaa
and
in
mov
rcr
push
xlat
out
or
leave
test
bound
fs
inc
fiadd
add
fs
sar
mov
mov
jo
mov
or
sub
out
pusha
or
xor
cmp
les
shl
push
in
test
jmp
mul
call
je
sti
enter
fs
lods
je
(bad)
popf
mov
cmp
or
stc
fsub
or
mov
lahf
mov
inc
jl
sar
loop
hlt
imul
fld
or
jp
mov
dec
cmp
xor
test
pop
stc
push
inc
dec
or
adc
adc
xchg
stos
aaa
push
ja
out
out
sub
outs
pusha
daa
outs
fcomp
add
push
mov
jecxz
lock
push
pop
cmc
pop
add
mov
pop
cmp
jecxz
inc
popf
cmp
in
dec
and
int
dec
loop
and
sbb
sub
and
aas
dec
gs
aas
push
mov
icebp
mov
inc
pop
cmp
jp
or
dec
jae
push
dec
mov
nop
and
xor
cli
mov
cmp
shr
inc
add
push
sbb
mov
xor
or
mov
shl
or
les
jle
mov
mov
hlt
int
pop
xor
mov
push
jmp
retf
aaa
pop
mov
in
addr16
loop
xchg
sub
fistp
icebp
dec
into
movsx
in
mov
mov
adc
ret
jle
adc
test
outs
xchg
lock
in
or
setge
ret
in
xchg
fild
cmps
leave
cmc
ins
push
int3
jecxz
xor
pop
sbb
das
mov
dec
repnz
adc
or
sti
sti
mov
fadd
lahf
inc
jge
lock
int
cmp
rcl
or
add
lods
iret
(bad)
cdq
int3
cmp
movs
movs
mov
rol
mov
std
sbb
inc
inc
and
xlat
fst
cmps
sbb
fisub
mov
sbb
dec
mov
or
xchg
test
test
mov
add
into
cmp
push
dec
adc
push
mov
xor
adc
dec
out
jnp
push
jg
ret
shl
adc
or
(bad)
cmp
or
(bad)
xchg
in
pop
in
sub
imul
out
test
retf
js
out
sbb
loope
dec
loop
mov
mov
rcr
mov
sub
cld
jb
lahf
add
pusha
iret
dec
repz
out
test
or
xchg
mov
lods
xchg
outs
retf
xchg
or
test
popf
cld
sbb
(bad)
xchg
dec
fwait
jmp
pusha
jb
xchg
(bad)
shr
stos
xchg
sub
push
call
sub
mov
loop
fist
jmp
pop
and
mov
sub
cmc
xor
stos
xor
ss
outs
mov
ins
mov
enter
pop
addr16
retf
je
jp
icebp
pop
fcomp
mov
and
cld
fs
out
ins
mov
jo
jae
jns
cmp
inc
call
xchg
scas
xchg
xchg
in
in
add
(bad)
sti
sub
xchg
in
sahf
dec
and
xchg
into
in
mov
mov
or
fld
jmp
jmp
std
outs
mov
dec
loope
dec
retf
mov
mov
movs
cmp
les
aaa
leave
push
cmp
xor
push
scas
xor
adc
jmp
loop
adc
rol
sbb
sub
and
out
jg
and
pop
leave
pushf
jne
aam
fsub
push
xchg
dec
fldenv
add
call
jmp
inc
mov
jl
adc
pop
lock
push
xlat
(bad)
mov
call
mov
mov
out
mov
dec
add
cld
adc
sbb
jle
leave
inc
jle
inc
lods
xor
test
icebp
ror
pusha
push
mov
call
daa
mov
xchg
push
mov
cdq
cdq
add
push
(bad)
fisubr
jle
mov
lods
mov
dec
jne
mov
std
hlt
xchg
das
mov
bound
or
mov
mov
pop
test
adc
pop
inc
sub
or
rcl
repz
jmp
adc
add
and
dec
les
add
leave
sbb
jp
je
repnz
sar
outs
sbb
dec
xor
cmps
dec
hlt
fcmovnb
cld
xor
or
enter
mov
add
ins
test
inc
rcr
pushf
iret
nop
push
fcomp
mov
loopne
pushf
cld
dec
adc
inc
test
fld
xchg
ss
mov
jnp
sti
mov
push
push
or
mov
inc
sbb
dec
xchg
dec
jmp
out
sbb
jmp
pop
or
stc
aas
adc
bound
push
and
out
jmp
or
inc
in
cwde
loop
lds
retf
add
sub
pop
inc
(bad)
mov
sar
add
xchg
inc
inc
pop
push
es
daa
xchg
xor
sbb
xor
mov
lahf
cwde
out
and
sbb
pop
xchg
inc
xchg
mov
fmul
jns
cld
adc
jg
push
jno
lds
std
call
jo
mov
repnz
clc
or
ja
(bad)
movs
adc
mov
sub
mov
jmp
(bad)
sbb
jp
cld
sbb
add
sbb
inc
je
and
and
dec
outs
sub
int
cdq
fmul
popa
add
jnp
cmps
or
lds
xlat
lods
or
popw
cmps
mov
dec
cld
sbb
dec
push
ins
aam
add
in
(bad)
(bad)
add
sub
jb
or
das
xchg
xor
push
inc
inc
sub
mov
test
cmp
sub
nop
add
out
push
ja
rol
jne
clc
lahf
jl
jl
pop
sub
mov
xlat
fst
sbb
mov
nop
mov
out
xchg
(bad)
cwde
jl
jns
ins
(bad)
or
mov
(bad)
aad
jmp
lods
sbb
bound
fistp
mov
inc
jp
jnp
stos
and
and
and
loopne
outs
cld
loopne
adc
dec
inc
xor
in
adc
mov
sub
repnz
js
pushf
ss
sar
cdq
pop
mov
dec
(bad)
sub
jg
repz
and
shl
pushf
push
data16
cmp
pop
das
imul
ret
out
xor
shr
adc
ror
stc
jno
cmps
dec
jle
outs
(bad)
pop
mov
mov
loope
cmp
add
add
jnp
and
jbe
into
dec
pop
push
sbb
mov
fmul
xor
pusha
jo
cmps
fisttp
mov
and
(bad)
cdq
pop
push
fcmovu
push
out
cmp
push
(bad)
fwait
test
jne
cmp
(bad)
(bad)
jmp
inc
(bad)
fiadd
cmps
or
mov
xchg
and
mov
cmp
sub
repz
enter
dec
mov
into
iret
test
xor
in
ins
enter
dec
or
rcl
inc
fs
xchg
mov
scas
mov
scas
pop
sahf
ret
xchg
xor
or
(bad)
imul
sub
inc
jecxz
inc
lods
or
(bad)
retf
push
mov
jne
jmp
xchg
jb
sub
pop
mov
daa
fisttp
xchg
mov
lea
or
jge
fisttp
add
addr16
popa
cmp
je
cmp
test
mov
inc
leave
ret
sti
and
call
movs
xchg
mov
xchg
mov
mov
xlat
cmp
mov
call
cmp
cmp
aaa
aas
ds
(bad)
xchg
push
sbb
sbb
aas
mov
sub
or
lods
hlt
rol
lds
add
ss
jl
jecxz
leave
mov
adc
jne
mov
cmps
xchg
and
dec
mov
cld
movs
mov
repz
cmp
pop
xor
sbb
jp
into
cs
pop
test
push
lock
shr
and
jns
sbb
pop
xor
xchg
movs
sub
cmc
(bad)
mov
add
lea
inc
fdiv
push
test
mov
sub
xor
mov
push
cmp
scas
and
les
clc
sub
mul
call
push
mov
push
xor
mov
jo
movs
adc
out
ins
mov
or
cmp
jo
mov
dec
dec
push
icebp
mov
ret
stc
test
or
mul
pop
icebp
shl
or
jmp
and
push
jmp
mov
push
mov
nop
dec
arpl
aas
outs
das
xchg
imul
pop
mov
xor
aam
lea
or
xlat
into
mov
mov
cs
cli
or
mov
fcmovb
dec
cmp
pop
and
mov
jp
sbb
sub
xchg
jbe
adc
in
inc
arpl
addr16
xchg
lahf
push
xor
sbb
int3
div
idiv
stos
adc
mov
lods
imul
xchg
add
popf
xchg
mov
repnz
jmp
sbb
scas
adc
sbb
mov
mov
das
mov
nop
call
sbb
cmps
dec
(bad)
push
xlat
int
arpl
dec
out
sahf
mov
adc
cwde
mov
mov
dec
jne
daa
adc
movs
and
adc
mov
or
rcr
mov
sbb
sbb
mov
js
pushf
xor
sub
jp
pop
cmp
inc
cwde
sub
les
test
cmp
push
jecxz
inc
(bad)
sar
add
xor
ror
jecxz
cs
test
bound
fmul
dec
mov
mov
sub
lahf
inc
jle
pop
fnstcw
add
sbb
repnz
jno
pop
daa
cmp
cdq
xor
xchg
and
cmp
scas
es
xchg
lods
cmp
fimul
fwait
mov
stos
in
xlat
inc
xor
loope
or
inc
adc
mov
jbe
retf
fistp
lods
jb
sahf
adc
outs
add
into
lods
and
cmp
aaa
cmp
imul
test
cwde
cmps
mov
movs
jb
in
sahf
and
ret
push
adc
shl
push
cmps
or
pop
jecxz
pop
or
dec
jge
pop
mov
mov
push
mov
jo
enter
das
enter
cwde
push
rcl
scas
push
fldenvw
punpckhwd
adc
scas
je
sti
adc
or
xor
ins
xchg
sbb
popa
stos
mov
imul
xlat
inc
outs
ss
dec
sbb
jbe
int3
les
and
aaa
jno
xchg
fdiv
jo
pop
jae
(bad)
push
out
outs
imul
imul
push
cmps
mov
lods
or
adc
xor
test
mov
pop
lea
add
aas
mov
mov
and
mov
add
repz
hlt
clc
inc
int3
mov
mov
hlt
mov
fnsave
sahf
dec
xor
je
das
or
push
addr16
jne
dec
movs
aaa
mov
push
rol
(bad)
jb
xchg
mov
and
inc
ret
outs
sbb
lds
lahf
add
out
cwde
stos
mov
pop
push
dec
or
fbstp
push
jae
push
je
jno
jns
pop
repz
push
lahf
scas
mov
call
inc
and
inc
test
lds
repnz
ins
xor
and
and
jge
adc
mov
lea
jmp
mov
or
movs
push
dec
shl
outs
jns
sub
and
ja
jns
daa
js
sbb
test
cwde
ret
inc
movs
cld
gs
adc
cmp
adc
add
jecxz
ss
xchg
in
test
pop
pop
imul
jl
mov
scas
adc
mov
stc
cmps
cmp
pop
movs
mov
fisubr
mov
mov
cmp
push
push
jl
adc
xchg
xlat
sub
mov
vcomisd
cmp
daa
cmp
mov
sub
enter
sub
mov
mov
fstp
mov
adc
cmc
mov
lods
cmp
test
outs
xor
pop
jae
movs
xchg
and
leave
adc
int
mov
xor
js
cmp
sahf
xor
sub
inc
cmp
mov
std
jl
sti
push
and
fcomp
arpl
sub
test
push
mov
cmp
gs
jb
sub
test
push
inc
(bad)
sbb
inc
jle
setbe
out
mov
repz
push
inc
pop
push
je
lea
or
jns
sub
sub
or
mov
jnp
outs
shl
jmp
test
add
test
std
ins
add
and
add
sub
outs
ror
int3
mov
mov
lahf
sbb
adc
ror
sub
cmp
fwait
jns
xor
cmp
shl
das
js
ins
js
rol
sbb
pop
bound
mov
mov
add
mov
outs
add
into
cmp
retf
lds
in
adc
retf
retf
add
inc
sbb
lahf
cmp
xor
mov
xchg
hlt
stc
test
jne
jae
scas
mov
pop
ret
and
data16
jmp
data16
xchg
pop
pop
inc
into
or
cdq
pop
mov
jo
xchg
mov
cmp
fwait
ins
add
inc
ins
jae
cmp
nop
bound
push
daa
push
dec
mov
rol
test
stos
inc
xor
test
sbb
addr16
pop
xor
cdq
ins
inc
nop
into
add
or
sub
bswap
push
mov
stos
dec
jmp
outs
inc
inc
pusha
jnp
(bad)
clc
or
in
iret
shl
movs
mov
imul
popa
add
push
fbld
pop
inc
ins
inc
sti
sbb
lock
in
adc
dec
xor
aad
hlt
ds
jl
or
mov
(bad)
dec
sub
outs
rol
pop
xchg
je
jne
in
(bad)
popa
clts
mov
push
inc
cld
push
pop
add
sar
daa
sub
test
push
push
cmp
adc
sbb
pop
mov
pop
das
mov
mov
dec
call
dec
imul
dec
and
and
sahf
fild
fnstsw
cmp
push
scas
dec
add
push
cmp
inc
js
mov
rcr
xchg
(bad)
xor
sub
call
fst
test
mov
mov
test
jnp
xchg
cmp
dec
mov
cmp
sbb
sub
push
xor
cdq
cmps
add
xchg
cmps
adc
test
sti
sub
xchg
fsub
test
rcl
adc
adc
(bad)
adc
cmp
mov
cmp
lods
int
ins
(bad)
adc
jp
div
fwait
xchg
adc
jl
sub
scas
stc
mov
mov
mov
mov
(bad)
mov
addr16
jecxz
xchg
sbb
push
push
sub
sbb
mov
mov
pusha
outs
xor
xchg
inc
stc
fisub
(bad)
std
cld
and
movs
or
jle
iret
pop
div
mov
mov
pop
sahf
xchg
shl
ret
jmp
dec
push
sbb
pop
lods
sbb
mov
or
push
shr
cmps
(bad)
xchg
fiadd
inc
(bad)
popa
inc
aaa
retf
mov
popf
add
xchg
or
loop
and
int3
xor
sbb
movs
add
mov
sub
pop
or
and
mov
outs
xor
adc
(bad)
sub
xchg
push
inc
jno
sbb
int3
and
dec
jmp
mov
es
jno
sub
call
clc
rcl
xchg
clc
xor
ret
push
nop
js
mov
adc
fbld
adc
pop
pop
rol
js
jg
push
out
mov
xchg
mov
retf
call
xchg
mov
daa
adc
mov
xchg
jmp
or
out
or
int3
cld
or
fwait
pop
stos
in
fwait
popf
and
movs
outs
jnp
fisubr
call
jmp
nop
call
sahf
or
or
or
repnz
sbb
(bad)
imul
mov
call
cmp
mov
in
xchg
pop
aas
push
sbb
dec
sar
lds
leave
fidivr
inc
iret
xor
sub
dec
sbb
rcr
into
int
ror
fs
inc
or
and
int
sti
ret
pop
push
xor
pop
dec
mov
dec
mov
aam
shr
iret
add
inc
out
fsub
add
enter
lds
or
adc
mov
add
mov
pop
mov
stc
dec
jmp
mov
pop
jns
and
ret
jmp
sbb
(bad)
inc
enter
enter
push
xchg
aad
pop
and
and
mov
arpl
mov
jns
dec
adc
cmps
loopne
mov
mov
bound
stos
pusha
pop
add
mov
je
je
arpl
(bad)
aam
push
(bad)
jae
enter
xor
scas
ins
(bad)
cli
mov
lahf
scas
push
leave
imul
aas
adc
jae
sbb
daa
or
pop
rol
(bad)
sbb
xchg
cwde
packsswb
or
mov
pop
push
repz
add
or
and
jmp
hlt
enter
shl
pop
(bad)
repz
pop
cli
sbb
jl
and
sub
sub
xchg
sbb
shl
cmp
cwde
call
mov
je
mov
and
dec
icebp
mov
jg
pusha
add
iret
xor
dec
pop
inc
outs
icebp
loop
aad
sti
mov
fwait
pop
and
xor
push
inc
(bad)
mov
or
adc
aaa
gs
ret
or
dec
cmps
xchg
fdivr
retf
pop
ror
mov
loop
sbb
adc
les
xchg
dec
cdq
push
sub
lods
mov
xor
fnstsw
or
lods
(bad)
cmps
shl
mov
push
jbe
leave
sbb
dec
lds
ret
(bad)
pop
into
ins
sahf
cmp
or
sbb
(bad)
std
jmp
mov
xor
jmp
mov
ret
div
jecxz
adc
rol
jo
jmp
leave
mov
add
ja
cmps
imul
rcr
inc
popf
test
inc
jo
dec
xor
sbb
rcr
ins
mov
ret
dec
mov
stos
mov
mov
mov
dec
int
popf
fcomp
push
out
jg
push
aaa
call
sub
pop
pop
mov
ss
inc
jnp
jns
loope
xchg
jae
add
lds
ja
add
aaa
mov
xchg
in
lahf
add
cmp
lods
hlt
jae
(bad)
adc
in
repz
ja
or
cmp
outs
push
out
leave
inc
sbb
pop
pop
sbb
dec
enter
sbb
cmps
xor
cmp
loop
adc
inc
imul
call
jle
sbb
inc
out
mov
push
arpl
push
dec
aas
ror
cwde
rol
lahf
dec
adc
ret
mov
pop
inc
push
push
fnstenv
add
pop
leave
pop
push
cdq
ret
push
dec
dec
add
cli
mov
icebp
or
aad
loope
jo
shl
inc
lock
mov
cli
(bad)
es
mov
and
cmp
jmp
mov
ret
xor
jne
arpl
jae
leave
jmp
icebp
push
xlat
and
pushf
xor
add
cmc
jo
inc
in
dec
(bad)
cmps
aam
xchg
stos
cmp
and
lods
retf
sar
adc
xchg
clc
(bad)
sar
scas
jmp
pop
fld
test
mov
jno
sahf
sub
sbb
jp
imul
mov
cmps
movs
and
(bad)
push
rol
call
push
js
in
out
daa
ja
jbe
and
mov
pop
(bad)
ins
aad
add
sti
rcl
ja
sbb
sub
popf
or
xchg
bnd
and
jb
xchg
test
cmps
ror
jo
fist
dec
sahf
jns
outs
mov
adc
ret
(bad)
rcl
movs
push
int
push
sub
rcr
ins
std
in
jbe
aas
xchg
jae
and
(bad)
mov
mov
(bad)
arpl
xor
(bad)
push
es
jne
sti
mov
and
shl
sbb
enter
lods
mov
(bad)
stc
fcomp
daa
div
mov
in
pop
leave
jge
sbb
mov
in
pop
rcr
out
cmp
pop
dec
inc
and
cmp
sbb
call
sub
mov
lods
aam
dec
lea
xchg
fisub
inc
pop
and
inc
stos
std
test
and
dec
(bad)
lea
popa
fucom
inc
ins
cmp
mov
pop
jnp
sbb
cmc
std
(bad)
nop
std
int3
sub
jbe
xor
mov
or
(bad)
xchg
sub
fcomp
rcr
mov
jns
scas
sub
inc
test
dec
div
cld
mov
xchg
mov
adc
xor
inc
xlat
dec
repnz
and
and
mov
pusha
stc
sub
xor
retf
sub
jl
das
movs
pop
mov
mov
mov
cwde
test
fcmovne
push
jbe
sysenter
xor
data16
dec
(bad)
jae
jmp
ret
jno
cwde
js
into
jle
pop
in
mov
js
enter
adc
int3
and
aaa
out
and
scas
rcl
dec
push
push
sahf
test
sbb
rcl
jae
add
int
movs
out
mov
jae
push
add
lods
push
cs
mov
daa
mov
push
test
loope
xor
js
inc
fistp
cwde
cmpps
add
adc
dec
retf
sbb
test
icebp
jmp
xchg
inc
cmp
push
sbb
fisub
adc
sbb
hlt
je
dec
(bad)
pop
jg
mov
xlat
bswap
jmp
(bad)
mov
adc
pop
push
push
sahf
scas
movs
test
and
mov
or
lods
hlt
xchg
stos
inc
dec
int3
aad
mov
rol
jb
jb
push
movs
bound
pop
pop
popa
and
div
sbb
inc
ds
push
ret
test
movd
sub
outs
mov
jmp
add
pop
lds
inc
mov
repnz
cmp
adc
lahf
or
cmc
stos
dec
inc
push
test
popa
mov
in
add
xchg
jp
in
or
(bad)
dec
lock
and
ret
xchg
dec
sub
dec
xlat
out
mov
lahf
jno
jle
imul
nop
(bad)
xor
clc
clc
call
dec
push
test
enter
ror
outs
add
js
push
cmp
aam
jle
fdiv
pop
test
xchg
(bad)
xchg
xor
enter
pop
mov
pop
cs
addr16
or
pop
in
jp
(bad)
lahf
cmps
push
pop
xchg
and
adc
cs
add
mov
or
xor
repnz
and
adc
jge
xor
lahf
pop
fdivr
fistp
ss
jns
test
fnstsw
aam
xchg
sub
xchg
inc
pop
cmp
and
pop
mov
call
lahf
lds
pop
pop
adc
sbb
dec
gs
add
xlat
cmp
nop
call
xchg
xor
push
frstor
pop
call
inc
pop
mov
or
mov
mov
lds
adc
pop
fldcw
sbb
jmp
mov
inc
ror
popa
cmc
sbb
cmp
push
dec
sbb
inc
je
in
jecxz
aad
mov
mov
sbb
dec
out
mov
pop
ins
sub
fst
rol
sub
pop
pop
add
xchg
rol
test
jae
or
stos
xlat
out
push
lods
imul
xchg
fld
cmp
cmp
retf
push
xchg
popa
fwait
dec
rcl
mov
mov
mov
mov
enter
jns
out
mov
fsubr
sub
sbb
sar
rcr
hlt
and
cmp
std
cmp
push
aas
or
es
adc
test
sub
test
out
jl
nop
sbb
inc
adc
out
add
scas
fld
mov
cmp
js
cs
aam
adc
push
push
pop
cmp
shr
push
outs
fimul
jl
adc
sub
and
jo
pusha
mov
push
das
push
cmp
and
xchg
sub
mov
es
add
imul
cmp
cmp
mov
xor
js
call
push
aam
jbe
icebp
lods
lahf
pop
mov
loope
(bad)
jb
mov
imul
daa
jmp
push
imul
mov
jmp
and
cmp
inc
ins
pop
stc
aad
jmp
push
shl
cmps
xor
fcomp
in
lea
lods
cmp
ds
mov
sub
adc
scas
dec
addr16
out
adc
jne
imul
xchg
jo
mov
dec
in
push
jecxz
cmp
xor
mov
imul
xchg
aaa
bound
hlt
pop
scas
add
lods
nop
xor
mov
push
loop
cmp
pop
cmp
fwait
jmp
dec
dec
inc
int3
or
aaa
add
pop
or
(bad)
fcomp
stc
jnp
sahf
int
mov
rol
test
cmps
repnz
dec
hlt
lds
or
push
xchg
jo
outs
push
das
push
mov
xor
bound
mov
lods
pop
mov
xchg
mov
push
xor
lock
daa
(bad)
cmp
lahf
imul
sar
fiadd
pop
repnz
addr16
mov
pushf
enter
sbb
jns
retf
adc
mov
je
(bad)
dec
loope
ret
fsubr
sub
adc
pop
xor
xchg
push
data16
sub
sar
jmp
mov
sub
sar
dec
xchg
add
test
jp
add
or
out
mov
sbb
cmps
mov
xor
(bad)
popf
push
retf
bound
sbb
scas
call
loope
or
int3
jns
pop
mov
adc
lock
aad
out
les
push
push
sbb
pop
mov
ret
pop
jl
push
push
mov
pop
jbe
mov
sub
adc
ret
and
dec
cmp
mov
jmp
pushf
aam
xchg
imul
pushf
ret
xor
int
jl
mov
pusha
daa
or
dec
(bad)
js
adc
push
or
ja
aas
xchg
pop
push
test
jbe
xchg
pop
iret
ja
test
imul
xchg
fsubr
adc
mov
jne
or
xchg
sub
adc
jg
inc
mov
mov
aaa
add
adc
cmps
and
mov
mov
lock
(bad)
cmp
add
or
in
test
xor
cmp
push
cmp
dec
mov
ret
fucomp
adc
mov
and
add
mov
jo
jge
mov
cwde
mov
sbb
jbe
cmps
in
inc
pop
aam
data16
cmps
push
call
ja
adc
cmp
xchg
imul
push
nop
jmp
pop
cmp
es
popf
mov
out
bound
pushf
popf
and
pop
jne
mov
cld
jmp
xor
mov
fs
add
push
fcomp
cmp
push
lods
xchg
scas
mov
lahf
jno
or
sbb
out
sbb
icebp
mov
mov
xor
into
(bad)
fsubr
jmp
jb
stos
mov
dec
jne
pushf
adc
dec
push
jecxz
in
aam
push
mov
pop
and
or
movs
repnz
mov
movs
in
jbe
pop
xor
mov
jb
ins
jbe
add
outs
loopne
push
sub
cwde
inc
stc
fwait
popf
cld
je
xchg
ja
call
ficomp
xor
sub
push
jo
icebp
inc
add
mov
inc
dec
jg
xchg
fcomip
das
inc
mov
push
retf
in
jnp
and
or
mov
jp
xor
mov
sahf
mov
mov
sub
cli
sub
retf
mov
push
in
add
xor
jnp
adc
inc
mov
mov
pop
bound
lods
dec
fwait
call
retf
stos
es
push
mov
daa
add
dec
xchg
jg
and
cdq
add
xchg
lods
inc
mov
out
and
cmp
in
sub
loop
sub
dec
retf
imul
push
jmp
icebp
inc
in
mov
pop
sbb
imul
stos
mov
cmp
dec
pop
xchg
test
test
jb
mov
pop
ja
jge
enter
pop
es
test
inc
cwde
inc
int3
cli
cmc
jmp
pop
pop
cmps
dec
dec
cmp
mov
xchg
push
ret
xor
imul
pop
jp
xor
bound
aas
push
mov
xor
push
and
aam
xchg
mov
imul
cmp
loop
in
pop
clc
fiadd
lea
dec
or
inc
push
arpl
adc
pusha
jl
aas
push
jne
dec
fucomi
pop
movs
bound
sar
fld
cmp
shr
aad
es
lahf
not
imul
outs
cdq
push
pop
push
push
push
adc
iret
call
mov
xor
or
sahf
test
sbb
fwait
dec
adc
(bad)
xchg
ins
mov
pop
mov
push
push
add
mov
outs
inc
and
or
jge
mov
mov
inc
xchg
mov
jmp
repnz
cmps
push
pop
inc
lds
mov
jno
aaa
retf
outs
or
pop
sub
hlt
add
adc
(bad)
cmp
xchg
xor
mov
ds
add
add
mov
pop
sub
adc
rcl
or
mov
xor
add
xchg
aaa
add
dec
nop
mov
ss
inc
add
xchg
inc
nop
es
push
iret
and
fwait
or
mov
scas
pop
pop
adc
jle
or
mov
jnp
ds
adc
adc
div
mov
data16
mov
adc
push
hlt
lea
out
inc
xor
push
popa
cli
inc
cmp
adc
ins
xchg
fadd
inc
aad
jae
imul
xlat
or
push
ret
push
fs
inc
mov
sub
or
mov
in
shl
(bad)
mov
mov
inc
mov
push
adc
pop
mov
xchg
rol
sar
retf
hlt
cwde
or
sbb
add
dec
cmp
out
or
sub
int3
stos
aam
jo
in
cmps
dec
add
jae
call
stos
pop
lods
enter
add
pop
call
test
jb
daa
xchg
xor
cmp
xchg
pop
fwait
nop
leave
jae
retf
icebp
inc
scas
mov
sbb
stos
scas
sar
test
int3
ins
sbb
push
ret
mov
loope
mov
ret
xor
lds
scas
sub
add
pusha
out
sub
inc
out
push
outs
ins
fs
cdq
sub
jmp
cs
fs
addr16
cmc
mov
pusha
xlat
jmp
popf
and
pop
test
ins
jmp
add
xor
or
mov
mov
das
iret
out
ror
nop
inc
push
fcomp
les
popf
mov
push
or
mov
inc
push
push
pop
fdivr
inc
call
outs
(bad)
adc
and
add
cmc
inc
mov
std
xor
push
push
jmp
cdq
imul
jl
stc
mov
pop
or
add
jns
sar
pop
xchg
fs
xor
in
das
and
inc
push
bound
in
mov
fs
jae
les
stos
jle
push
ret
sbb
das
pop
scas
sbb
mov
call
xor
jae
dec
(bad)
retf
stc
retf
inc
adc
or
movs
mov
fwait
(bad)
outs
jmp
xor
adc
or
in
sub
and
call
sbb
and
mov
mov
xchg
sub
inc
aad
cwde
iret
sub
(bad)
and
fcom
push
or
cmc
jae
sub
jns
les
aaa
popa
jge
hlt
not
push
jg
or
icebp
or
sbb
jbe
cli
mul
in
push
cmp
in
xor
pop
in
push
xor
inc
lods
in
(bad)
push
shl
daa
xor
fwait
movs
inc
in
push
jo
sti
mov
daa
movs
loop
je
sub
(bad)
fidivr
(bad)
aam
dec
loop
jno
inc
out
xchg
(bad)
stos
sub
pusha
sbb
jecxz
test
in
xchg
inc
bound
cmp
xchg
push
jmp
push
fcom
mov
inc
lahf
xor
mov
mov
dec
add
or
adc
sbb
ret
aam
test
enter
add
test
jmp
outs
push
pop
jmp
jmp
daa
inc
in
cmps
loop
cdq
push
xor
loopne
clc
test
add
fstp
nop
jmp
jae
es
das
add
or
mov
setp
movs
push
pusha
test
lock
mov
xchg
loope
jnp
fldenv
ret
out
push
sbb
rcl
mov
stos
bound
loop
add
xchg
in
xor
dec
and
push
hlt
push
scas
mov
scas
sbb
push
call
in
add
dec
test
dec
cmps
mov
pop
sahf
xlat
ds
sub
jno
test
mov
imul
sti
out
jb
inc
inc
ss
xchg
into
and
inc
pop
push
sub
shl
hlt
ds
hlt
gs
jmp
inc
inc
inc
out
mov
xchg
jg
push
dec
xor
js
pop
jmp
mov
shl
nop
jp
scas
push
adc
xchg
loopne
adc
retf
dec
scas
add
leave
push
pop
cmp
jb
lahf
dec
out
mov
mov
mov
adc
js
mov
push
push
jns
sub
push
push
stos
pop
mov
popf
mov
(bad)
mov
jmp
mov
sti
push
sbb
(bad)
cmp
xlat
cmc
aad
xchg
mov
inc
adc
xor
xor
es
in
push
cmp
loop
pop
sub
cs
and
mov
xor
push
mov
(bad)
mov
cmc
mov
sar
cmp
sahf
inc
pop
push
icebp
gs
cli
outs
push
bnd
ins
fcmovne
jb
fwait
stos
mov
hlt
cmp
out
out
aam
lock
loopne
inc
das
shr
or
inc
sbb
or
ins
inc
out
call
ret
jo
push
jp
imul
jle
ds
push
sub
jnp
vpmullw
inc
jo
dec
and
or
xchg
pop
icebp
mov
push
loope
mov
xor
mov
test
daa
or
outs
int3
cld
idiv
push
nop
sbb
ja
leave
pop
dec
fstp
or
test
mov
test
push
pop
adc
xor
mov
enter
sub
bound
movs
imul
jmp
pop
fadd
aaa
jae
sub
sub
and
mov
push
fimul
inc
xchg
or
adc
mov
cwde
ror
pop
lea
js
inc
scas
dec
stos
and
pop
jmp
mov
or
lods
arpl
pop
inc
fs
xchg
push
adc
movs
mov
inc
cs
sahf
es
push
rcl
ret
mov
mov
mov
mov
je
and
dec
int
retf
test
inc
add
push
cmp
pop
dec
pop
push
cmps
mov
pop
mov
cmp
xlat
mov
movs
mov
mov
cmp
popa
sbb
or
jns
pop
pop
ret
scas
ss
pop
sub
addr16
rcl
mov
pop
dec
inc
es
mov
ins
push
sti
xchg
pop
jp
mov
mov
dec
mov
push
sbb
mov
arpl
scas
sub
js
(bad)
out
dec
inc
aam
pop
ret
and
mov
cli
repz
mov
iret
jmp
mov
jnp
dec
jae
add
sbb
cmp
sub
push
cdq
(bad)
pusha
xor
mov
sbb
xchg
mov
dec
dec
mov
adc
xchg
dec
outs
pop
outs
cmp
rcl
in
and
push
cmp
xchg
bound
add
pop
sahf
xor
pop
mov
(bad)
mov
push
call
fs
loopne
xor
pop
lods
push
jg
jns
enter
sub
jns
and
mov
jle
pop
jne
mov
sbb
stos
addr16
jecxz
xor
dec
pop
not
sbb
call
mov
jp
xchg
jge
call
pop
pop
mov
je
mov
mov
xor
xor
mov
xor
aaa
aaa
pop
pcmpeqd
out
mov
jge
in
jge
sub
inc
mov
ins
pop
cmps
dec
aas
cmp
or
pop
std
and
mov
jnp
inc
fyl2xp1
sub
imul
ds
fcomp
jge
call
inc
and
dec
sbb
pop
dec
xlat
sbb
popa
fmul
lods
inc
push
sub
add
sub
(bad)
mov
fmul
dec
adc
in
xchg
cmp
mov
aaa
out
stos
(bad)
ror
imul
repz
and
xor
imul
sbb
mov
sub
mov
daa
fwait
jecxz
or
comiss
clc
aad
lds
or
in
mov
add
ret
stos
dec
mov
push
rcl
jo
add
cdq
lea
add
pop
retf
sti
mov
scas
fstp
data16
addr16
shr
inc
push
repnz
jle
xchg
adc
test
push
mov
and
fdivp
xchg
(bad)
xchg
retf
inc
mov
or
sub
adc
adc
add
call
push
repnz
cmps
(bad)
addr16
ss
loope
or
in
mov
fs
cmps
and
mov
sub
popf
dec
xor
xchg
imul
dec
or
les
std
pop
gs
xor
mov
push
dec
neg
outs
mov
and
out
or
(bad)
aad
push
xchg
adc
fs
nop
lods
mov
dec
mov
or
xor
(bad)
fld
mov
mov
call
in
push
jg
fdivr
add
jge
scas
aas
cwde
jns
ds
cwde
adc
jne
imul
ret
pop
lock
mov
je
(bad)
(bad)
mov
pop
pop
xchg
dec
fbld
fidivr
dec
popf
scas
call
and
sbb
dec
cmps
fdivrp
call
inc
sub
int
push
repz
fisttp
imul
adc
push
mov
aad
jecxz
jb
inc
and
aad
inc
jmp
fnsave
dec
dec
jne
and
inc
xor
xor
movs
sub
lds
mov
lea
cmps
fst
sahf
or
inc
lods
aaa
fsubrp
mov
ins
stos
test
jmp
call
and
pop
in
sub
scas
fiadd
inc
(bad)
sbb
ror
push
les
es
div
inc
mov
loopne
(bad)
dec
xlat
push
loopne
retf
jp
mov
pusha
and
or
ins
outs
cmp
jg
mov
int
cld
ins
sti
xchg
jb
pop
pusha
test
or
mov
inc
(bad)
push
in
mov
fmul
dec
adc
test
cmp
dec
pop
js
sbb
mov
popa
ins
sbb
fst
outs
mov
daa
mov
inc
push
sub
mov
gs
call
push
ret
or
(bad)
sub
push
in
pop
movs
xchg
fld
enter
xor
es
clc
dec
pop
xor
mov
into
mov
or
cwde
push
sbb
(bad)
mov
pushf
div
inc
loope
retf
push
push
das
inc
add
pop
dec
mov
inc
call
inc
inc
enter
sub
dec
jecxz
int3
ficomp
(bad)
sub
int
fwait
dec
cmp
adc
inc
fadd
adc
ins
imul
add
pop
mov
sub
outs
and
adc
je
or
lock
ins
adc
push
lahf
add
bound
cmps
push
std
iret
fidivr
daa
push
adc
push
shl
fisubr
push
sbb
pop
lahf
and
jecxz
pop
push
fdiv
(bad)
pop
pop
jno
aaa
inc
shl
imul
addr16
test
or
pop
inc
(bad)
dec
xchg
(bad)
dec
xor
mov
aam
cmp
pop
jno
js
or
mov
cld
lods
es
fldl2e
adc
sbb
ror
repz
(bad)
addr16
mov
and
mov
sbb
mov
jmp
sub
rol
imul
cdq
(bad)
neg
les
inc
jno
inc
ss
mov
mov
ins
in
cmps
arpl
inc
xor
bound
and
xchg
out
ret
test
mov
jb
cld
push
mov
sbb
mov
pop
inc
sub
inc
sbb
imul
test
sub
cwde
dec
pushf
mov
pop
aad
cmp
xchg
xchg
pop
fisttp
adc
sar
cmp
jb
retf
icebp
pop
mov
mov
fstp
dec
push
mov
pop
and
mov
sub
cmc
imul
mov
adc
add
lds
pop
push
dec
inc
inc
mov
pop
and
pop
sub
xor
es
sbb
xchg
jb
pop
cmp
rcl
sti
pop
add
das
loop
mov
xchg
movs
jmp
(bad)
movs
ins
fs
mov
and
pop
mov
stos
mov
das
call
mov
jecxz
stc
xchg
jge
push
mov
leave
and
mov
mov
mov
(bad)
gs
mov
adc
dec
xor
pop
pop
push
loope
push
leave
outs
and
jne
dec
jnp
arpl
lahf
fxsave
push
pop
pop
lock
push
icebp
mov
in
ja
(bad)
and
mov
aam
movs
xor
ins
mov
js
jb
fdiv
fsubr
xchg
adc
xor
icebp
dec
push
repnz
popa
mov
mov
movs
retf
leave
sahf
push
div
lahf
xor
xchg
mov
cmp
ror
pop
cdq
jp
push
jb
out
pop
adc
inc
mov
ror
pop
les
sub
dec
rcr
sub
dec
out
scas
fmul
jge
pop
test
int3
jne
push
xchg
fsub
test
jle
retf
mov
and
xchg
jmp
icebp
imul
imul
sub
in
shr
dec
adc
adc
shl
movs
add
adc
test
enter
cs
cld
aaa
push
in
mov
hlt
stos
scas
ins
adc
xor
jge
aam
jns
sbb
fcomp
sbb
jg
into
sbb
fs
dec
sub
aad
mov
xor
jl
jmp
test
or
xchg
sub
call
imul
jbe
adc
and
std
aas
pop
jae
sbb
xchg
mov
xor
sub
cdq
mov
das
mov
outs
outs
jle
cld
and
push
dec
xor
cs
cmp
fnsave
rol
cmp
or
int
add
ins
retf
cmp
cmp
cli
push
mov
pusha
adc
mov
cwde
in
and
out
add
in
test
push
add
adc
les
test
sub
fwait
cdq
or
xchg
div
in
scas
pop
sbb
fwait
inc
imul
pop
mov
add
arpl
xor
cmp
push
xchg
mov
cmps
leave
push
or
popf
xchg
ret
jne
mov
sbb
in
das
and
jne
fdivr
dec
push
jp
xlat
push
jnp
and
ins
scas
stc
inc
ss
movs
stos
loopne
dec
je
fmul
sub
adc
cmp
cmp
ret
push
mov
outs
or
adc
add
call
in
aam
sbb
xor
fist
popf
mov
imul
mov
cmp
sub
(bad)
repz
xchg
(bad)
dec
adc
jne
adc
pop
xlat
sbb
inc
sbb
test
outs
loop
and
lock
mov
push
xchg
call
add
popa
test
mov
cmp
pop
cmps
into
mov
dec
adc
add
mov
mov
test
not
(bad)
cmc
mov
push
shr
mov
sar
inc
popa
cld
xchg
inc
and
and
ror
and
or
mov
adc
in
pop
test
or
int
mov
and
or
test
push
sbb
sub
add
mov
jp
pop
(bad)
test
mov
jge
dec
into
push
retf
dec
loop
mov
mov
dec
mov
push
push
fs
push
(bad)
mov
pop
movzx
lds
fdivr
or
xor
and
aad
cmps
adc
loop
xor
and
cdq
mov
sub
out
jbe
das
mov
jo
repnz
arpl
xchg
pop
mov
cmp
ds
sbb
cmc
icebp
aam
mov
dec
call
popf
xchg
dec
mov
js
jae
pop
pop
imul
cmps
push
data16
jo
xor
pop
cli
pop
rcr
and
xor
adc
xor
ss
sar
retf
test
call
call
pop
jb
push
xchg
(bad)
fs
or
ss
pop
sbb
push
out
push
inc
push
xchg
jle
or
push
mov
cmps
or
fdivr
dec
arpl
add
repz
lock
iret
and
pop
sub
add
xor
adc
call
push
inc
mov
fsub
not
xor
jae
loop
ret
sbb
fwait
mov
(bad)
call
mov
(bad)
fsub
inc
ror
call
pusha
sbb
pop
clc
in
jo
syscall
nop
push
scas
div
fmul
mov
ins
icebp
jmp
and
add
es
jae
jle
pop
mov
or
sub
int3
imul
das
into
xchg
xchg
mov
daa
adc
clc
ret
jg
inc
leave
scas
jnp
test
cmp
xchg
mov
(bad)
pop
ds
adc
pop
or
inc
ins
cs
test
ins
mov
and
popf
push
push
add
(bad)
pop
mov
pop
mov
call
push
leave
test
xor
inc
(bad)
mov
leave
dec
stos
mov
(bad)
xor
cmp
push
push
and
fwait
adc
movhps
lods
mov
(bad)
xor
mov
inc
popf
sbb
xor
lds
push
inc
cmp
jae
mov
(bad)
sbb
jg
adc
sub
push
test
das
daa
mov
mov
push
je
ret
les
adc
(bad)
push
jbe
into
mov
lahf
in
xchg
push
sbb
jbe
fidiv
adc
jmp
adc
test
and
jp
clc
daa
fcmovu
mov
sbb
(bad)
outs
mov
sbb
in
cdq
inc
mov
pop
lock
(bad)
pop
adc
add
icebp
jmp
push
sub
lock
cmp
and
aas
repnz
cmp
mov
les
xchg
nop
xchg
add
pushf
cmps
out
push
loopne
mov
inc
pop
inc
rcl
fstp
mov
or
retf
lahf
dec
jne
inc
fisttp
inc
mov
or
jo
push
sub
outs
push
(bad)
and
ins
or
les
int
adc
and
jp
xlat
popa
cmpps
and
out
hlt
or
imul
mov
mov
mov
ret
repz
and
push
fcmovnb
imul
mov
pop
dec
or
mov
jge
pop
gs
mov
xor
push
test
mov
sub
(bad)
hlt
aad
imul
push
and
jo
cwde
call
jge
mov
jl
enter
jl
cs
mov
push
and
popa
mov
pop
mov
cs
sub
mul
mov
jge
sbb
bound
(bad)
mov
add
imul
sar
ins
push
mov
in
sub
push
scas
pop
cli
mov
pop
cmp
ja
mov
sbb
pop
adc
dec
adc
ss
(bad)
mov
bound
out
and
xor
lahf
push
imul
and
dec
sahf
xchg
loop
mov
cmp
lds
das
popa
int3
jo
dec
push
fisttp
icebp
push
outs
pop
adc
mov
mov
jne
xchg
scas
into
push
mov
inc
cmp
push
cmps
retf
repz
(bad)
add
cli
pop
push
jl
jnp
mov
sbb
movs
dec
jnp
inc
shl
or
mov
imul
in
xlat
ds
std
jp
or
pushf
mov
es
xor
(bad)
pusha
lahf
mov
adc
aam
aas
lods
aaa
aas
jg
or
sub
add
jge
fbstp
loopne
inc
inc
enter
movs
inc
lea
in
mov
adc
fs
fsubr
lods
mov
lahf
cmp
fsubr
ret
mov
or
in
add
mov
fst
(bad)
xchg
xchg
ds
mov
sbb
sbb
test
sar
loop
ret
dec
mov
or
mov
sahf
push
and
jnp
adc
pop
adc
call
imul
cmp
inc
xor
adc
(bad)
aad
mov
retf
test
and
fs
leave
js
sti
rol
ins
or
push
es
mov
repz
and
aad
xchg
into
outs
xchg
popa
adc
mov
mov
in
jp
out
pop
cs
jnp
mov
(bad)
lock
movntps
(bad)
stc
mov
inc
add
fisubr
jecxz
cmp
ud1
scas
xor
cmps
sbb
or
or
adc
arpl
pop
cmp
test
xchg
retf
(bad)
cmp
or
and
pop
fbld
mov
xlat
sar
mov
call
sbb
js
bound
mul
dec
inc
dec
inc
add
add
call
xchg
pop
(bad)
(bad)
loop
jecxz
add
ror
inc
popa
retf
mov
jmp
les
repz
into
aaa
hlt
dec
imul
sbb
sub
imul
in
jae
popf
repnz
pop
mov
pop
sub
aam
cmp
idiv
xlat
xchg
in
adc
adc
(bad)
je
mov
push
sub
cdq
in
lock
jno
das
adc
ds
add
popf
leave
lods
pop
shl
mov
sbb
lods
imul
sub
fcom
dec
inc
ficomp
std
adc
dec
cmps
loope
mov
or
sub
bound
xor
test
sub
rcr
dec
inc
sbb
cmp
adc
(bad)
outs
and
(bad)
retf
aad
xlat
dec
adc
dec
dec
sub
(bad)
fdiv
xor
cmp
imul
cmp
test
stos
cmp
mov
dec
retf
mov
sub
cmps
ja
mov
xor
ret
push
scas
mov
mov
sar
and
push
push
stos
fs
hlt
pop
shl
jl
push
or
dec
xor
sub
or
mov
mov
cmps
xchg
cmp
pop
sti
push
mov
(bad)
cmp
pop
test
dec
(bad)
mov
repz
xor
adc
repz
mov
js
pop
popa
aad
inc
out
lea
vxorps
and
outs
lea
cdq
in
neg
push
scas
inc
leave
mov
jmp
les
ins
scas
test
mov
adc
rcr
pop
in
shl
ds
lods
cwde
sub
xchg
pop
in
or
daa
mov
mov
adc
popf
push
mov
xchg
mov
push
lahf
dec
jbe
cli
xor
dec
and
clc
xor
mov
sub
sbb
and
(bad)
ja
into
jl
push
add
fwait
add
adc
push
pop
mov
movs
push
retf
or
jno
fisub
push
(bad)
data16
fsubr
mov
lds
mov
sbb
ficom
cmps
push
adc
mov
or
lods
jb
loopne
dec
lahf
dec
push
pop
and
pop
jecxz
adc
mov
test
xlat
mov
sub
xor
mov
test
das
xor
inc
loop
push
add
std
xchg
popa
dec
inc
mov
rcl
rol
loope
lods
rol
xor
add
add
ins
aas
jg
inc
or
inc
test
mov
inc
mov
pop
lods
and
jmp
pop
or
scas
inc
fstp
jns
mov
(bad)
(bad)
mov
cld
imul
fcmovnbe
push
lock
hlt
icebp
push
pop
fimul
retf
ins
mov
test
xor
push
stos
sti
mov
ds
adc
lock
std
sub
adc
int
push
xchg
and
and
sbb
frstor
mov
test
cs
fistp
sbb
loope
push
imul
push
cmps
sbb
imul
pop
push
addr16
mov
mov
mov
inc
and
mov
retf
push
mov
jp
adc
sahf
(bad)
cmp
mov
iret
sub
and
xchg
lahf
jg
jl
jnp
pop
push
clc
mov
(bad)
pop
(bad)
ret
ds
ss
fild
(bad)
jmp
jns
xchg
daa
mov
loope
icebp
cld
aas
retf
call
out
mov
arpl
xchg
and
pusha
sub
repnz
mov
jmp
xor
push
pop
inc
pop
jae
mov
out
scas
ins
add
cmp
sbb
dec
sbb
pop
pusha
mov
sbb
aam
out
push
push
xlat
add
das
push
js
in
les
inc
mov
jge
or
in
push
call
xchg
loope
outs
pop
push
fnstsw
push
sbb
(bad)
mov
xor
inc
pop
mov
rcl
imul
jp
cdq
cmc
aad
or
data16
(bad)
pop
adc
arpl
jmp
mov
mov
test
push
cmp
xchg
sub
loope
xor
outs
aam
mov
push
or
mov
dec
inc
push
xchg
xchg
cmps
mov
dec
pop
lods
cmp
mov
jmp
xchg
es
xchg
sub
mov
pop
cmp
mov
inc
ins
pop
in
jne
sub
or
in
add
sbb
mov
call
in
inc
cmp
ins
gs
test
sbb
mov
pop
cmp
imul
in
jmp
mov
and
inc
into
lea
and
jo
hlt
mov
mov
je
push
(bad)
push
sbb
mov
adc
pop
fimul
jle
movs
imul
xchg
imul
stos
mov
cdq
push
pop
bound
pop
push
jge
mov
ret
adc
push
call
dec
or
mov
xor
(bad)
out
push
jg
mov
(bad)
adc
out
pop
push
xchg
jb
pushf
pop
xchg
lds
int3
in
loop
sub
mov
mov
loope
out
mov
jl
cmp
xchg
shr
stos
shl
js
cli
lock
out
call
or
(bad)
sub
cmps
mov
into
jmp
outs
rcl
xchg
ffreep
leave
clc
pusha
xor
dec
sub
cmp
push
outs
add
out
out
in
adc
popf
not
cmp
sbb
inc
xchg
ficom
int
icebp
mov
out
add
movs
out
jb
cmp
repz
aam
mov
jne
push
mov
test
pop
stc
stos
adc
rcl
and
push
stc
jle
pop
add
push
int3
pop
mov
scas
mov
mov
xor
xchg
mov
push
pop
push
dec
jbe
fild
sbb
mov
mov
push
outs
or
xchg
cmp
push
das
sbb
mov
mov
jl
rcr
dec
jecxz
jae
aas
stos
js
or
repnz
push
lea
sbb
push
lock
push
jle
cwde
xor
minps
cmc
js
ret
sbb
std
push
inc
adc
lds
inc
out
or
test
(bad)
lods
push
cmp
pop
mov
mov
xlat
jle
xor
push
call
(bad)
adc
jne
(bad)
into
dec
push
cmp
cdq
mov
lods
adc
rcl
xor
popf
xor
aaa
(bad)
push
cmp
mov
sti
pop
into
lea
mov
sub
dec
jmp
shl
std
hlt
es
movs
ds
out
pop
jg
xchg
mov
rol
outs
lahf
dec
jge
daa
mov
ja
not
xchg
sub
cmp
mov
adc
fimul
outs
adc
addr16
sbb
sbb
sub
push
jno
inc
imul
mov
cmp
sbb
push
stos
icebp
cwde
push
and
dec
out
in
xor
inc
(bad)
mov
pop
popa
test
fs
adc
aam
cmps
pop
and
and
and
xchg
ins
lahf
psraw
ret
jge
aad
and
clc
test
sub
cmps
nop
xor
mov
mov
fmul
cmp
fistp
in
xor
jle
aas
arpl
mov
sbb
xchg
test
mov
xor
repz
movs
or
lea
add
jno
arpl
sahf
or
add
push
(bad)
jae
ret
cmp
fidivr
or
cmp
cmps
cli
mov
mov
cmp
pop
scas
push
hlt
cmp
add
repnz
test
sbb
sbb
mov
cwde
inc
inc
ins
xchg
mov
dec
jo
mov
fist
loopne
and
in
cmp
jp
add
leave
cmc
mov
mov
fnstenv
xchg
jp
movs
sub
test
adc
int3
pop
xchg
pop
add
inc
fwait
or
adc
jbe
add
sbb
lea
aas
dec
retf
rcr
mov
gs
pusha
xchg
xor
xor
pop
inc
retf
adc
loope
ret
out
and
pop
repz
ffree
jae
ins
mov
pop
adc
test
loope
das
lods
mov
test
mov
jae
dec
cmp
cwde
push
sub
pop
pop
test
and
adc
in
pop
dec
push
jmp
mov
add
xor
in
pop
sub
mov
into
push
sub
dec
int
outs
and
js
mov
push
pop
xchg
dec
mov
dec
movs
dec
and
je
cmp
in
mov
sub
movs
dec
adc
sbb
jns
stc
fcom
popf
jge
ficomp
lds
rcr
les
push
dec
dec
mov
pop
div
inc
mov
imul
or
xchg
inc
or
sub
mov
enter
lds
stc
adc
mov
popa
pop
fidiv
xchg
xchg
add
pop
(bad)
push
ds
xchg
add
pop
js
pop
retf
mov
out
out
sub
inc
jmp
cmp
adc
std
and
dec
dec
inc
inc
inc
popf
jns
ror
or
rol
pushf
repnz
aam
(bad)
and
fs
out
lock
jecxz
or
xchg
idiv
pop
mov
cmps
xchg
pop
in
mov
mov
jo
sub
mov
fwait
addr16
push
inc
dec
pop
idiv
push
daa
sti
mov
movs
and
call
jb
sub
jb
fcmovnu
or
lea
ins
pop
or
jb
dec
pop
push
mov
cmp
fisttp
iret
push
inc
pop
jne
les
cmp
mov
stos
cmp
sbb
add
mov
cmp
fwait
adc
pop
sbb
int
mov
idiv
outs
mov
and
fcom
sub
das
pop
das
mov
mov
inc
cs
mov
pusha
push
out
fiadd
or
lods
lods
std
jmp
mov
inc
jecxz
adc
xchg
mov
xor
xchg
cli
dec
add
js
dec
cmc
push
inc
mov
popf
jmp
paddd
stos
ja
mov
add
je
test
xchg
add
dec
pop
aam
jmp
mov
dec
mov
aas
xor
nop
popa
sub
mov
adc
aas
cmp
ds
mov
jno
(bad)
mov
sbb
lds
sti
imul
sbb
(bad)
mov
adc
xor
inc
cmp
sub
(bad)
jp
mov
ret
add
add
cwde
retf
mov
and
fdiv
dec
or
sbb
sub
stos
nop
fnstenv
sub
or
mov
dec
dec
push
fs
enter
in
push
fstp
xchg
mov
jg
mov
and
leave
add
fistp
sub
mov
nop
sar
pusha
dec
int
add
mov
(bad)
pop
(bad)
dec
xchg
sub
ss
(bad)
cmps
cli
xor
push
jl
icebp
mov
sbb
dec
and
(bad)
sbb
scas
retf
add
repnz
sbb
(bad)
inc
fs
dec
jl
les
imul
lahf
mov
jmp
inc
ret
pusha
jbe
mov
mov
adc
ror
push
lods
mov
mov
out
pusha
ins
lds
push
pop
rcr
cmc
cmp
sbb
lea
shr
movs
daa
dec
push
mov
pushf
and
cdq
mov
out
out
xor
jmp
addr16
aad
fs
sub
ja
cmps
cmp
mov
lock
xchg
cld
xchg
add
fnstcw
icebp
test
or
mov
jle
aad
adc
mov
push
inc
xor
xchg
cmps
cs
push
add
mov
push
jmp
retf
retf
test
mov
push
cmps
and
pop
loope
sbb
outs
and
(bad)
pop
rcr
ret
enter
push
call
pop
xlat
xor
dec
xor
cmp
leave
xchg
movs
jle
and
or
test
repz
mov
mov
icebp
inc
shl
repz
add
aad
ds
mov
mov
ss
xchg
pusha
add
cmp
outs
lds
jae
pcmpgtb
mov
repz
inc
mov
xchg
inc
les
jg
and
adc
lahf
sub
pop
popf
or
jbe
in
push
jp
push
in
sahf
lock
popa
dec
js
das
push
dec
into
jmp
mov
mov
repnz
mov
cmp
mov
inc
jl
scas
mov
cmp
out
mov
out
or
or
es
into
movs
lds
pop
adc
add
sbb
int3
ret
or
rcr
mov
mov
int3
ret
or
out
xchg
push
mov
jp
cmp
and
adc
jmp
sbb
mov
push
jae
sbb
xchg
daa
movs
sbb
call
jnp
in
cmps
cwde
dec
dec
cmp
pop
sbb
(bad)
fidivr
sub
cmp
sub
clc
sub
dec
sahf
fwait
das
bound
adc
jle
add
lea
add
aam
xchg
mov
mov
cli
and
push
or
xlat
retf
ins
outs
pop
jg
rol
sar
or
lods
push
in
into
cld
ins
mov
imul
loope
pop
inc
xor
inc
xchg
lds
lahf
or
retf
aad
popa
nop
and
ffreep
xchg
repnz
mov
jo
inc
pop
in
fisttp
lods
or
arpl
repz
out
icebp
push
je
(bad)
adc
xor
nop
cmp
movs
xchg
pop
ret
pop
shr
mov
inc
fwait
push
stos
cwde
iret
sbb
cmp
push
nop
xchg
mov
xor
stc
add
cld
out
hlt
cmc
pusha
pop
cld
in
clc
cmp
aam
push
xchg
jns
ins
xor
xlat
dec
xor
adc
push
leave
sub
pop
xor
fidiv
(bad)
push
call
je
int3
outs
repnz
loopne
loopne
div
inc
jl
xchg
xor
in
pop
lahf
cwde
lea
pop
jo
mov
add
or
packssdw
loop
cmp
rcl
fsubr
cwde
aaa
fwait
shl
xchg
inc
mov
add
and
ja
(bad)
ror
pop
inc
dec
ja
add
and
imul
or
mov
xchg
outs
out
mov
jle
adc
cmc
sub
pop
jno
sbb
and
mov
call
and
xchg
inc
jno
dec
stos
mov
mov
test
xor
fistp
mov
xlat
pop
lahf
push
retf
push
adc
iret
jl
add
(bad)
push
cmc
(bad)
das
inc
cmp
lods
out
cmps
adc
inc
pusha
or
ins
test
fldenv
mov
mov
sahf
popa
sub
mov
cwde
mov
inc
sti
mov
mov
pop
jo
lahf
sbb
imul
das
loope
test
sub
(bad)
pop
xor
inc
fs
mov
in
sbb
test
jns
mov
jno
mov
movs
arpl
mov
jl
stc
(bad)
cmp
mov
jbe
pop
add
add
add
das
ret
cli
stos
(bad)
outs
rol
sbb
push
movs
sub
retf
out
in
outs
push
xor
ret
pop
adc
es
mov
mov
sbb
sti
cmc
(bad)
mov
dec
and
popa
stos
mov
leave
mov
in
xlat
aad
jae
fstp
sub
lea
loop
(bad)
or
add
cwde
call
loopne
mov
arpl
js
cmp
jne
clc
call
inc
push
or
ror
sbb
mov
test
loopne
inc
dec
ja
mov
adc
imul
push
call
shl
cmp
mov
dec
or
sbb
movs
or
aam
rcr
mov
dec
call
shl
bound
adc
inc
popa
or
test
cmp
not
out
cmc
imul
cmp
fsubr
movs
(bad)
jmp
push
das
leave
or
cmp
stc
push
push
sahf
sti
not
ds
jo
inc
mov
push
bound
rcr
scas
sti
sub
pusha
inc
lods
(bad)
push
(bad)
mov
fild
pusha
push
jb
scas
mov
sub
sbb
cs
mov
lock
adc
and
inc
sahf
nop
lds
or
xlat
jns
rcr
ds
js
adc
push
inc
fdiv
arpl
mov
sbb
mov
adc
mov
test
imul
mov
cmps
sti
outs
and
cmp
ss
mov
xor
mov
or
dec
inc
or
add
aad
fstp
add
jnp
test
inc
cmp
je
aad
int
lods
pop
xchg
mov
lds
lahf
mov
test
pop
xor
loop
jmp
es
popf
ds
out
sub
fs
adc
nop
sbb
clc
movs
inc
stos
jbe
cmps
sahf
in
add
xchg
ja
and
xor
aam
mov
sbb
inc
jp
ret
adc
mov
enter
mov
adc
and
gs
mov
sbb
mov
add
sti
shl
lds
retf
in
push
js
mov
xor
mov
sbb
sub
out
and
add
inc
dec
mov
test
test
hlt
pop
test
mov
sub
mov
cmp
sar
adc
imul
loop
imul
fimul
hlt
das
push
dec
fsub
outs
sbb
jl
imul
cmp
mov
cwde
cmp
bswap
mov
iret
cmp
mov
and
pushf
(bad)
retf
jmp
mov
rol
xchg
push
sahf
fwait
push
mov
cmps
lods
cmp
pop
hlt
out
sbb
pop
add
in
add
(bad)
push
sub
inc
(bad)
frstor
lock
cli
hlt
xchg
and
mov
adc
sub
stos
inc
push
cmp
jno
rcl
sub
nop
stc
push
mov
push
les
scas
pop
int
arpl
jmp
jp
not
sbb
inc
adc
jle
outs
pop
xor
sbb
mov
movs
jb
leave
out
cmp
lahf
cmp
jge
adc
or
mov
pop
xlat
sub
mov
pop
jo
repnz
push
mov
pop
cmp
pop
cwde
cmps
cli
or
out
sub
inc
add
sbb
inc
pop
mov
dec
push
and
loope
pushf
bound
pop
jb
dec
addr16
sub
ret
dec
data16
push
aam
push
les
sar
fsubr
sub
sub
add
mov
sahf
push
gs
test
adc
jnp
mov
fs
add
nop
xchg
ins
popa
retf
sub
sbb
gs
js
movs
sub
iret
imul
les
jecxz
out
sub
mov
aas
sar
inc
fstp
push
xor
stc
int3
xchg
les
inc
cdq
pop
cmp
jo
enter
xor
or
jecxz
jmp
fsub
scas
pop
shl
cld
enter
loope
inc
ds
sbb
inc
test
in
push
cli
or
jge
scas
or
scas
outs
call
mov
jno
repnz
mov
loop
mov
int3
movs
inc
cdq
lds
out
xchg
jns
mov
sbb
out
retf
mov
cld
stc
sar
cmp
xor
fsub
pop
fwait
stos
sub
aad
mov
(bad)
leave
push
mov
scas
jmp
or
in
ret
jge
icebp
int
dec
xchg
sbb
sti
add
push
ds
imul
xor
inc
xchg
jmp
and
mov
jecxz
inc
ss
xchg
test
icebp
mov
add
jecxz
add
js
and
pop
test
mov
pushf
push
lods
nop
icebp
mov
and
inc
jns
cmp
vmovntpd
jbe
enter
inc
daa
push
and
in
shr
xor
jle
leave
pop
add
stc
cwde
mov
mov
in
jmp
es
sahf
jnp
into
adc
sbb
xchg
push
sub
push
adc
ret
or
jnp
movs
mov
xchg
dec
fs
fwait
jecxz
popa
stc
ficom
mov
push
das
test
ror
xchg
mov
xor
js
out
jno
sub
and
add
sub
repnz
dec
cmp
iret
rcr
jmp
daa
(bad)
(bad)
or
movs
(bad)
repz
imul
das
mov
inc
sbb
xor
push
(bad)
cld
push
cmps
jecxz
clc
ret
pop
arpl
sbb
bound
add
popf
push
cmc
jno
aas
cmp
and
jp
mov
movs
pop
jg
lds
add
mov
mov
sbb
jp
inc
les
(bad)
ds
sti
in
push
out
mov
out
xchg
mov
sbb
dec
shl
cli
sbb
idiv
jo
sbb
pop
pop
add
inc
pop
bnd
pusha
lds
fs
cmp
enter
cmp
test
ja
or
retf
and
(bad)
sbb
push
push
inc
cmp
fs
pop
jns
jbe
fwait
dec
or
clc
jecxz
rcl
push
retf
std
mov
xchg
mov
inc
sbb
pop
xor
call
idiv
cmp
adc
call
cmp
or
jecxz
jae
mov
mov
popf
out
fwait
ret
call
pop
sbb
xor
mov
call
sbb
fnstenv
adc
fmul
mov
test
fadd
cmps
jb
and
push
outs
adc
ds
shr
stos
popa
jle
sub
cmps
jl
adc
cmc
add
in
iret
jle
or
(bad)
sbb
dec
repnz
jb
ss
ret
inc
fimul
repz
jmp
dec
outs
jmp
mov
jge
rcl
xchg
ret
xchg
movs
cs
xchg
dec
(bad)
jae
push
xor
shr
cmps
cmp
clc
imul
inc
pop
sbb
iret
xlat
call
adc
xchg
xchg
mov
xchg
(bad)
imul
pop
or
pop
out
dec
outs
div
repz
push
mov
pop
push
xchg
or
les
and
mov
js
rcl
add
cmc
ret
out
adc
mov
js
mov
adc
sub
xchg
or
mov
jmp
xor
setno
mov
aaa
ror
adc
or
dec
call
push
cmp
cwde
in
or
cmp
in
jge
pop
jne
sar
in
hlt
popf
cwde
sbb
fldcw
xchg
mov
gs
stos
sbb
mov
leave
fistp
ins
inc
jbe
cvtpi2ps
mov
jmp
or
jecxz
popa
adc
add
mov
inc
icebp
lahf
mov
in
inc
xchg
clc
jecxz
mov
sti
in
xor
pop
enter
cwde
(bad)
aas
cli
or
jg
sub
mov
cmps
adc
vmovhpd
push
je
inc
mov
jns
shr
lahf
adc
sbb
out
xor
mov
jle
repnz
ds
jmp
clc
xchg
adc
(bad)
test
call
retf
adc
aas
dec
mov
ja
pop
mov
mov
leave
lods
fistp
pusha
scas
shr
mov
mov
loope
mov
push
push
and
in
mov
mov
adc
fisttp
mov
pop
dec
and
enter
ret
mov
out
ficom
push
cwde
mov
retf
or
fadd
lods
mov
mov
xchg
dec
ud1
and
mov
add
arpl
xor
loop
pop
sub
xchg
lods
out
and
mov
aad
dec
lods
aas
mov
dec
mov
pushf
loop
shr
push
(bad)
mov
mov
inc
pop
cmp
xor
retf
movs
aad
sbb
adc
xchg
nop
jp
pop
call
pop
dec
push
pusha
call
or
int3
or
aas
das
xchg
(bad)
in
pop
hlt
xchg
in
repnz
into
outs
or
fadd
mov
push
and
mov
scas
mov
aad
dec
add
mov
mov
sub
and
fidivr
sbb
add
mov
sbb
dec
pop
dec
adc
xor
call
lods
mov
cdq
xchg
push
out
data16
add
scas
and
call
mov
int3
jge
or
add
ror
jo
or
sbb
aas
pop
xchg
lock
dec
mov
loope
dec
xor
movs
xchg
mov
push
jns
cmc
mov
outs
mov
addps
push
sbb
test
or
mov
adc
fbstp
add
mov
jae
dec
pmaxub
inc
push
add
(bad)
stc
pop
or
gs
mov
jbe
or
add
dec
or
mov
sub
adc
sub
addr16
int
nop
mov
movs
pop
dec
mov
aam
mov
adc
test
outs
push
xchg
add
mov
std
test
add
xchg
arpl
test
fisttp
out
(bad)
cdq
pop
xchg
mov
push
xchg
js
ror
inc
hlt
pop
stos
popf
jae
cmps
hlt
movs
xchg
movs
sbb
popf
(bad)
cdq
or
mov
inc
call
add
push
push
lea
retf
mov
aad
gs
(bad)
lds
loop
push
pop
mov
push
enter
pop
mov
jne
mov
push
loopne
fist
mov
fnstsw
lods
aas
cmps
pop
xor
fwait
out
ss
sub
or
(bad)
scas
cmp
dec
aas
les
inc
fistp
aam
jge
mov
jmp
mov
push
xor
clc
add
shl
cmp
je
scas
xchg
mov
gs
mov
push
shl
pusha
pop
xchg
adc
dec
mov
stos
xchg
mov
iret
cdq
bound
jo
test
add
ror
rcr
in
mov
pop
mov
push
mov
dec
outs
push
repz
xchg
popa
mov
mov
xor
dec
fsubr
arpl
add
scas
pop
xchg
sub
mov
mov
sub
loopne
xchg
dec
dec
mov
retf
jo
test
dec
sbb
je
dec
mov
and
mov
push
pop
inc
rol
adc
call
inc
out
popf
or
jmp
or
fnsave
and
push
out
pop
idiv
or
je
xor
pop
dec
mov
leave
cwde
sar
or
arpl
lds
out
or
mov
(bad)
push
dec
fsubr
mov
pop
jno
stos
mov
mov
jns
jmp
fwait
scas
loope
les
mov
push
sahf
xor
loopne
pop
xchg
inc
inc
ins
sub
jno
cmps
push
sbb
jl
xor
stos
add
nop
movs
fwait
clc
push
hlt
mov
pop
xchg
pop
xchg
xchg
push
nop
leave
mov
jnp
sub
int
into
push
adc
test
lea
sar
sub
fxch
dec
data16
mov
push
shr
inc
sbb
es
icebp
and
sub
int
divps
cmp
xor
dec
and
pop
mov
and
jl
dec
rol
movs
imul
sbb
mov
jb
pop
in
mov
int3
jg
(bad)
sar
fisubr
fdiv
(bad)
bswap
sar
mov
xchg
int
daa
in
sub
in
and
lods
xor
mov
mov
or
jg
pop
stos
out
mul
xchg
adc
shl
dec
sbb
ja
pop
and
inc
(bad)
jmp
push
xchg
xchg
xchg
cmp
cmp
out
sar
sbb
loopne
test
jg
inc
ja
push
pop
push
and
pop
pop
(bad)
sbb
ret
fs
dec
mov
cwde
dec
push
repnz
lods
call
pop
iret
test
lods
and
or
sbb
or
les
dec
adc
cmc
stos
movs
dec
lahf
cwde
or
mov
and
inc
sub
xor
and
stos
pop
sti
and
aam
cdq
jmp
cmps
popf
xor
jge
xchg
pop
adc
shr
xchg
xchg
sbb
mov
pushf
(bad)
pop
gs
sbb
sub
bound
test
movs
imul
cmp
fst
test
aaa
dec
dec
jbe
neg
repnz
fidiv
popa
jno
test
sti
into
je
sbb
ja
cmps
stc
outs
inc
mov
sub
cmp
dec
into
and
outs
hlt
int
sub
js
test
scas
bound
scas
xor
mov
loop
dec
imul
lods
in
pusha
sahf
jne
pop
gs
(bad)
pop
jae
scas
daa
add
dec
push
imul
outs
inc
sub
fnstenv
inc
ror
push
jmp
mov
xor
mov
aaa
fist
movs
dec
add
jb
sub
sub
mov
fnstcw
adc
pop
adc
lahf
mov
hlt
jmp
clc
jl
icebp
mov
lods
sahf
outs
sbb
int3
movs
je
cmp
sbb
nop
xlat
fs
dec
mov
xor
sbb
ret
sahf
pop
cld
imul
mov
in
adc
dec
dec
aas
jle
repnz
jno
cmps
and
pop
xor
out
cli
mov
mov
icebp
jno
mov
jo
push
fisubr
push
sbb
std
sbb
pop
sub
mov
outs
data16
push
ja
xchg
sub
rcr
sbb
adc
lds
adc
test
cmp
call
pop
or
das
sub
les
daa
bound
jne
mov
popa
adc
adc
aaa
test
aas
xor
adc
nop
inc
inc
imul
mov
lds
jnp
iret
xchg
push
add
scas
ins
jp
push
add
jg
(bad)
out
pop
outs
inc
rcr
test
test
ins
sbb
ret
cmp
ins
xchg
retf
add
sub
cli
les
push
dec
in
cld
shr
inc
mov
mov
in
push
sar
out
sbb
adc
nop
shl
cli
xor
rol
add
sub
inc
mov
sub
lea
or
js
mov
sbb
sbb
shl
dec
stos
(bad)
jp
loopne
add
mov
xor
sbb
sbb
sbb
xchg
pop
sub
pop
call
sbb
inc
fdivr
outs
(bad)
lock
test
xor
bound
xor
xor
in
rol
push
jnp
sub
shl
sub
and
cmp
cmp
xchg
jns
fidiv
cmc
dec
retf
out
xor
aaa
push
pop
sti
dec
push
shl
pop
cmp
jae
arpl
mov
fstp
popf
repz
test
dec
pop
ds
aam
hlt
mov
mov
adc
add
bound
pop
sahf
mov
push
push
adc
mov
faddp
out
xor
pop
pop
cmc
mov
int
or
pop
push
jmp
mov
fwait
test
stos
push
push
mov
add
inc
jno
push
mov
imul
movs
jmp
shr
fisub
das
aas
arpl
mov
xor
out
fstp
aaa
dec
sbb
cmp
test
shl
dec
mov
in
and
push
add
ja
sar
add
adc
inc
scas
xor
fld
outs
sbb
mov
popf
je
das
mov
mul
inc
pop
xchg
retf
rcr
xchg
or
mov
into
adc
and
loop
retf
xchg
pop
shl
(bad)
into
iret
stos
test
cdq
pop
cmp
out
cmc
xor
push
mov
ret
jecxz
ret
pop
(bad)
pusha
fnstenv
icebp
fcomp
jbe
mov
rol
mov
mov
add
pop
xlat
cs
test
mov
stc
push
outs
iret
or
aad
sub
into
pop
(bad)
ret
lock
dec
test
jp
adc
push
hlt
jecxz
cmp
cmc
dec
int3
fwait
sub
cmp
push
xor
scas
rol
loope
outs
adc
repnz
fs
mov
jmp
and
xchg
mov
jmp
jne
mov
and
mov
mov
dec
jmp
mov
or
je
push
pop
sbb
mov
popa
call
ret
outs
xchg
sbb
idiv
arpl
pop
iret
fwait
retf
or
das
test
push
stos
fwait
and
shl
jo
dec
jecxz
scas
and
out
jg
std
stc
pop
jns
mov
pop
or
sub
push
imul
push
stos
mov
xor
pop
mov
jp
loope
dec
pop
std
ret
jae
or
or
mov
jle
fs
push
aad
repnz
xor
jbe
call
adc
hlt
mov
mov
and
clc
or
icebp
push
dec
mov
jmp
mov
inc
adc
pop
outs
mov
loop
dec
dec
jmp
mov
setns
sti
movs
xchg
mov
dec
mov
sub
pop
pop
rol
pushf
push
test
leave
mov
mov
jg
cmp
jecxz
inc
int3
repnz
mov
xchg
inc
and
xchg
je
pop
fild
push
cmc
test
pop
inc
mov
dec
ds
sbb
add
aam
jg
sub
clc
inc
aam
into
int3
mov
lds
xchg
inc
movs
inc
fs
jns
(bad)
push
fld
pop
sub
std
mov
scas
test
pop
not
mov
push
popa
lods
push
or
xchg
sbb
jmp
mov
add
fiadd
cmp
lock
outs
dec
ds
cmps
xchg
mov
retf
hlt
mov
and
test
hlt
shl
mov
dec
icebp
jecxz
jb
pop
inc
mov
int3
and
repz
or
dec
paddb
pop
mov
pop
das
pushf
mov
into
mov
xor
pop
mov
sbb
sbb
xchg
addr16
gs
jmp
lods
cmc
repz
cmp
adc
and
sahf
or
scas
fwait
or
sub
add
fwait
pop
ds
cld
lods
scas
in
enter
in
push
bound
xchg
stos
clc
mov
dec
adc
add
fwait
nop
std
(bad)
pop
xor
xor
mov
sar
pop
fisttp
fwait
dec
add
out
test
test
adc
pop
(bad)
push
xchg
shl
mov
leave
dec
push
dec
xchg
push
and
imul
jb
adc
pop
mov
mov
dec
pop
aaa
xor
mov
stc
faddp
ret
sub
push
cs
mov
push
je
ja
out
das
pop
mov
sub
not
xchg
cmp
jmp
xor
dec
push
and
push
cmps
dec
push
in
mov
or
pop
pop
xor
inc
adc
imul
cwde
mov
retf
dec
add
lods
adc
inc
mov
call
mov
and
xchg
repz
loope
jnp
mov
sahf
stos
fisttp
jnp
add
cdq
jnp
imul
cmps
outs
inc
popf
mov
dec
sahf
mov
push
or
mov
adc
sbb
leave
mov
dec
outs
test
inc
call
movs
xchg
imul
cld
jne
mov
fstp
sub
pop
leave
cmp
pop
cmp
sub
popa
push
retf
out
mov
add
cmp
mov
jl
mov
mov
pop
(bad)
adc
jecxz
iret
xor
xor
inc
fimul
mov
(bad)
enter
ss
push
push
rcr
mov
adc
enter
aaa
fld
cmp
enter
nop
jbe
xchg
xchg
mov
cmp
xlat
and
cld
scas
nop
mov
xchg
aas
push
xchg
mov
jle
inc
jo
inc
ss
cmp
ret
push
rcl
xchg
(bad)
jo
jmp
cmp
hlt
xor
pop
pop
inc
sbb
test
rol
paddb
shl
sti
rol
inc
lods
push
inc
inc
fdivp
outs
imul
xchg
leave
outs
mov
add
imul
mov
sbb
cli
add
stc
cdq
rcr
(bad)
mov
ret
mov
dec
jno
cmp
jl
hlt
adc
and
add
mov
inc
in
and
push
stos
(bad)
rol
dec
adc
popa
push
clc
push
inc
(bad)
fidiv
rol
xor
xor
movs
cmps
(bad)
movs
add
sub
cmp
es
push
(bad)
push
jb
icebp
mov
call
mov
scas
xchg
and
movs
add
xlat
add
push
push
pop
sub
ja
mov
add
jmp
imul
in
mov
data16
xchg
clc
imul
sbb
popf
xchg
mov
mov
adc
mov
aam
sbb
mov
mov
dec
out
ins
movs
fwait
mov
adc
clc
mov
leave
test
imul
pushf
shl
cs
dec
loope
jns
mov
hlt
sub
movs
loopne
sbb
inc
inc
jl
fimul
inc
icebp
mov
lahf
and
push
cs
dec
adc
cmp
aam
pop
add
retf
mov
sub
mov
pop
or
inc
(bad)
sar
aad
pop
es
pop
mov
inc
pop
data16
mov
repnz
pop
popf
and
mov
xchg
xor
inc
cld
inc
mov
iret
nop
arpl
fs
mov
mov
ins
mov
mov
js
cmps
jge
outs
xchg
add
xchg
rcl
inc
adc
cdq
ja
adc
add
sbb
pop
shr
dec
in
sbb
adc
sti
push
mov
sub
(bad)
int
xor
cmps
ja
push
inc
leave
fsub
ds
in
dec
add
scas
and
imul
xor
stos
imul
loop
loope
pushf
inc
call
ret
xor
scas
jb
adc
repz
clc
test
lods
icebp
pop
fidivr
add
dec
add
jo
xor
cmp
lahf
sub
idiv
(bad)
sub
and
shl
mov
cmp
push
pop
or
push
jno
pop
jae
pop
pushf
adc
je
cld
mov
pop
call
ror
aaa
sub
dec
xchg
inc
xor
(bad)
pop
xor
pop
push
sbb
xchg
out
ins
lahf
ins
cld
add
movs
dec
xchg
lods
add
xchg
mov
sbb
fdiv
in
pop
push
popf
movs
out
hlt
sti
add
movs
cmp
cdq
jns
mov
test
lds
dec
push
mov
lods
ss
sub
mov
shl
jge
push
adc
mov
mov
cmp
dec
fild
ds
stos
inc
stos
loopne
dec
aad
outs
push
pop
mul
stos
(bad)
pusha
out
push
or
mov
xchg
mov
xchg
daa
lds
xor
in
xchg
xor
inc
dec
test
daa
dec
ins
test
push
shl
fmul
jp
pusha
lods
mov
push
cwde
lahf
cmp
mov
xchg
rcr
clc
fnsave
out
jle
(bad)
nop
enter
retf
adc
not
add
push
in
sub
jg
jns
pop
arpl
jg
(bad)
xlat
sub
jle
xchg
mov
repnz
in
push
rcr
adc
enter
inc
inc
retf
xchg
xor
or
and
ret
outs
xor
test
jl
fldenv
out
lahf
push
dec
test
jae
mov
rcr
leave
mov
adc
xchg
psraw
fwait
div
push
xchg
cmp
out
ja
push
addr16
cmps
sbb
inc
call
sbb
sbb
add
xor
inc
div
movs
jns
sti
xor
inc
mov
push
adc
shr
push
das
mov
cmc
mov
iret
sbb
adc
jae
addr16
movs
sbb
mov
mov
fstp
or
or
pop
mov
retf
jle
jbe
mov
mov
call
pop
pop
ins
xchg
jo
shl
inc
sbb
js
push
stc
jl
sar
jae
les
sbb
add
push
ret
call
adc
dec
jmp
xchg
or
in
ret
pop
les
dec
inc
push
jnp
xor
adc
mov
(bad)
lock
inc
push
pop
rol
sbb
test
mov
cmps
cmc
sbb
sbb
xchg
icebp
test
or
(bad)
lahf
dec
jl
jmp
leave
ja
mov
sbb
push
sar
dec
clc
inc
sbb
out
xor
sub
push
mov
hlt
cmp
cmc
int3
imul
test
std
mov
add
add
add
sahf
clc
aad
cmc
cmps
mov
xchg
or
cmps
(bad)
mov
xor
sbb
mov
jae
or
jnp
dec
sub
mov
sti
call
movs
inc
int3
lock
lods
mov
retf
or
xchg
mov
jle
inc
pop
push
lds
xor
push
iret
int3
sbb
int3
test
inc
xchg
sbb
mov
push
adc
inc
dec
cdq
loope
inc
dec
xor
jle
aad
mov
inc
retf
stos
jne
sti
les
inc
inc
pop
aam
dec
into
jbe
and
pop
dec
repnz
cdq
push
xchg
cmp
adc
imul
push
pop
retf
pop
pop
pop
jae
xchg
inc
or
push
in
(bad)
pop
hlt
idiv
mov
pop
test
popa
mov
pop
add
push
(bad)
jmp
push
fcmovnu
sbb
push
in
mov
mov
xchg
jmp
ror
jnp
add
sbb
xor
fisub
(bad)
repnz
lods
imul
mov
nop
cli
adc
jo
push
je
dec
mov
lods
mov
ret
sar
mov
inc
int
(bad)
push
(bad)
inc
stos
pop
dec
xlat
fwait
jecxz
imul
leave
push
pop
or
loopne
dec
mov
sub
sub
sbb
add
jmp
add
stos
es
sar
popf
test
(bad)
push
sub
xlat
int3
popf
sahf
addr16
push
nop
rcr
push
adc
les
mov
and
xchg
sub
bound
or
xor
imul
dec
inc
adc
out
lock
popa
es
jae
iret
jmp
sbb
pop
jg
repz
pop
sbb
jne
(bad)
sbb
(bad)
cld
cdq
shl
stos
sub
lods
sub
or
cmp
ret
fisttp
pop
mov
outs
xor
jne
jb
mov
popf
or
jecxz
lock
cmp
scas
and
in
push
push
addr16
and
fadd
icebp
mov
add
retf
xchg
adc
pusha
cmp
mov
add
fs
mov
cmp
dec
jne
ins
cmp
adc
push
repz
sub
xlat
mov
loop
sbb
fwait
adc
test
jmp
cmps
xchg
pop
mov
fs
and
mov
jbe
sub
mul
repz
mov
aad
xchg
push
js
(bad)
jnp
aaa
rcr
dec
mov
jmp
cli
mov
xor
les
mov
std
pop
retf
inc
dec
bound
jae
jp
mov
push
add
mov
sbb
test
out
cmp
in
test
outs
mov
ins
push
or
push
adc
shr
das
jno
das
data16
jo
or
lea
xchg
or
inc
clc
enter
pop
or
xchg
(bad)
repnz
sub
xchg
push
sti
lods
push
pop
dec
popf
lock
jo
mov
mov
xchg
cmp
xor
sbb
cmps
sub
mov
cmp
stc
call
fisttp
sti
lods
retf
jb
xchg
and
ficomp
int3
adc
dec
jmp
aas
xor
fstp
mov
aas
jnp
jne
pop
fst
mov
push
cmp
pop
xor
(bad)
mov
dec
mov
pop
repz
imul
push
mov
cmp
sub
ficom
cmc
fst
cmc
xlat
test
jmp
movs
mov
lods
sbb
add
call
aad
or
or
push
xor
mov
jmp
xor
adc
inc
repnz
push
cwde
cmp
imul
mov
dec
mov
mov
cs
data16
imul
repz
cmp
je
add
call
sbb
stos
ja
in
pop
add
mov
mov
in
ins
pop
sbb
xchg
and
movs
push
mov
in
xor
fs
out
jns
pop
sbb
out
cmps
and
aaa
das
pop
int
(bad)
sar
arpl
stos
sub
fld
jbe
pop
mov
jmp
mov
aad
in
fcom
out
push
iret
ins
stos
call
(bad)
ds
leave
inc
lahf
dec
leave
dec
pushf
fcomp
mov
or
mov
mov
(bad)
(bad)
enter
mov
inc
mov
or
pop
retf
arpl
dec
mov
sbb
ds
dec
jmp
movs
test
ss
retf
xchg
add
push
call
push
fimul
mov
pop
addr16
aam
xchg
push
jge
(bad)
mov
dec
cdq
adc
sub
xor
jno
mov
inc
daa
lahf
popa
xchg
aas
imul
pop
jl
adc
pop
add
sub
jmp
mov
mov
dec
test
sbb
jge
pop
fcmovbe
nop
mov
call
adc
mov
es
loope
dec
xchg
stos
pop
(bad)
pop
sub
(bad)
fdivr
inc
pop
(bad)
adc
add
xchg
outs
adc
iret
sub
inc
ret
shl
loopne
hlt
sbb
fcomp
loopne
dec
fsub
out
cmps
jle
mov
mov
pop
sbb
or
sbb
(bad)
jmp
fwait
ret
adc
pop
add
ror
lds
loop
(bad)
sub
sti
loopne
cmps
movs
push
add
call
jns
mov
mov
imul
ds
scas
mov
gs
(bad)
fldcw
fidiv
mov
mov
test
jge
clc
gs
call
jo
leave
fdiv
fsubr
popf
call
ret
and
mov
dec
test
mov
sub
xlat
fcomp
(bad)
jae
jmp
dec
mov
fwait
mov
repnz
dec
mov
fbld
push
mov
inc
call
jnp
pop
xlat
(bad)
jno
enter
add
add
iret
jg
mov
out
aas
xchg
neg
cmp
(bad)
rol
neg
(bad)
in
and
out
mov
push
les
cdq
retf
xlat
gs
inc
ds
xchg
(bad)
out
push
adc
sub
pop
jo
shr
xor
stos
mov
lods
mul
inc
xchg
rep
je
and
into
xor
mov
(bad)
push
in
jne
mov
fistp
fidiv
sbb
sbb
cli
jne
scas
fild
push
aad
sar
adc
dec
stos
cmps
jl
loope
push
mov
mov
dec
test
(bad)
rcl
call
lahf
xchg
mul
fadd
in
mov
test
pop
sub
das
mov
lods
push
cld
(bad)
(bad)
or
hlt
arpl
sub
pop
or
pop
mov
rol
and
push
aaa
cdq
jno
clc
inc
sub
rcr
push
pop
add
dec
mov
fisub
shl
das
pop
xor
add
add
in
arpl
dec
out
into
jmp
pop
jmp
inc
lods
imul
cmp
rol
xor
xchg
gs
(bad)
test
mov
dec
dec
lds
inc
loopne
inc
out
mov
aad
fisub
jne
aad
cmp
dec
lods
es
loop
daa
xor
and
test
daa
shr
(bad)
sti
jmp
sub
int
push
clc
inc
xor
mov
or
inc
(bad)
jle
or
add
jbe
jmp
ds
lock
push
aam
pusha
daa
fcomp
xor
in
pop
pushf
cmp
pop
sbb
aam
dec
add
fxch
repnz
inc
rcl
xchg
push
sbb
xchg
jb
in
outs
(bad)
pop
and
shl
sbb
lahf
ja
or
lock
mov
mov
and
mov
fld
loop
jl
jno
and
xchg
sub
jmp
clc
cmc
call
mov
jb
repnz
aas
shl
push
inc
into
sbb
mov
jnp
jmp
fimul
ror
scas
or
jecxz
je
std
and
sub
mov
cld
push
jno
mov
test
inc
pop
je
or
xor
sbb
(bad)
movs
ja
clc
mov
pusha
mov
add
mov
push
sahf
inc
fsubr
in
jg
je
popf
cmc
add
(bad)
jmp
out
or
push
cmps
inc
dec
xchg
mov
into
xchg
or
push
jo
xor
stc
push
push
cmc
or
into
dec
data16
and
ins
xchg
add
hlt
add
mov
sbb
jecxz
mov
rcl
mov
loope
jp
adc
fld
cmp
sti
xchg
xchg
daa
xor
pop
imul
mov
out
stos
mov
or
rcl
jge
stos
and
repnz
sub
mov
inc
inc
aaa
sar
sbb
sub
retf
push
lods
retf
push
das
arpl
and
stos
dec
ds
xor
stos
cs
lds
push
pop
cmp
or
aam
pop
lea
fdivr
pop
fstp
mov
test
sbb
xor
dec
mov
sar
push
adc
test
xchg
inc
aad
pop
cmp
push
pop
and
mov
pop
mov
call
push
lock
fs
aad
outs
pushf
and
mov
sti
fs
test
add
pop
xor
pop
cmp
sar
or
lahf
sbb
adc
test
pop
aam
mov
inc
pop
mov
push
mov
scas
jmp
pop
mov
cmp
retf
cs
xor
cmp
fldln2
adc
mov
int
xchg
mov
push
int
call
loope
shl
sub
jp
xor
cmps
mov
xchg
stos
jmp
imul
cmp
call
inc
sbb
(bad)
jle
mov
mov
rcr
push
xor
shl
fisubr
(bad)
leave
pop
pop
fdivr
fwait
or
stos
or
jmp
pop
pop
stc
mov
ins
adc
sbb
test
fcom
fstp
mov
mov
xlat
popa
mov
sub
push
mov
add
dec
push
push
cli
jb
(bad)
xchg
lea
sbb
cmp
iret
(bad)
pop
gs
or
bound
neg
sbb
pusha
xlat
cmp
in
out
imul
jp
outs
dec
out
cs
sbb
cld
sub
bound
jno
movs
mov
sbb
jnp
test
inc
fadd
mov
pop
int
dec
mov
ja
test
pop
stos
enter
cmps
ss
arpl
scas
out
push
xor
clc
xor
mov
idiv
xor
ins
or
inc
int
iret
fild
mov
cmp
push
stos
adc
add
ret
repnz
push
ins
gs
mov
out
adc
push
fwait
sbb
movs
shl
cmc
fsubp
lods
add
int
and
adc
jne
jnp
(bad)
cmp
jmp
loopne
cli
lea
mov
adc
stos
aad
push
mov
dec
sub
jae
scas
ror
pop
xchg
adc
(bad)
push
and
aas
pop
push
or
lock
mov
push
clc
jno
vmread
stc
cwde
icebp
fwait
or
ficom
je
repnz
and
shl
clc
ins
push
lea
rcl
aas
sbb
xchg
cmps
aam
out
stos
mul
leave
xchg
sbb
jecxz
dec
int3
cmc
push
ret
cmc
jmp
push
add
mov
cmc
xor
jl
adc
sbb
and
jnp
and
outs
cmps
jbe
test
out
(bad)
cmp
and
jno
cmps
test
les
jbe
and
add
mov
push
xchg
jbe
aaa
imul
out
xchg
jae
jl
and
dec
movs
push
push
cmps
outs
push
sub
gs
shl
and
dec
inc
jecxz
jne
sub
cs
inc
ins
push
sbb
stc
add
ret
sbb
jecxz
jbe
push
rcr
pusha
test
mov
mov
mov
sub
outs
mov
fdivr
jnp
sub
shr
adc
xlat
(bad)
adc
in
inc
jg
clc
sbb
lods
jne
xor
jle
cmp
movs
dec
dec
push
jno
mov
push
inc
int3
mov
pushf
loopne
out
popf
mov
cs
ins
aas
repz
icebp
push
xor
clc
jae
std
stos
xchg
jne
test
sub
sbb
lods
movs
sub
sahf
into
lods
mov
lods
pop
add
or
hlt
push
sahf
cs
sub
dec
push
cmps
jp
inc
jbe
cmc
cmps
rol
ror
push
jg
imul
xchg
or
les
movs
in
gs
mov
cmps
sar
inc
imul
fisttp
mov
sbb
xor
add
xchg
sahf
fs
stc
dec
or
xor
and
cmp
je
pop
inc
pop
xchg
inc
sub
mov
xchg
cmp
cmps
enter
test
fcomi
stc
inc
or
jl
jb
je
idiv
pop
enter
add
test
fist
adc
xchg
lahf
sar
xor
out
call
mov
fst
leave
repz
sbb
push
jae
inc
inc
xchg
xchg
push
inc
pop
xchg
movs
and
pop
loop
rcr
sub
in
push
mov
dec
pop
aad
(bad)
adc
outs
push
dec
ss
pop
cwde
mov
cdq
bound
into
push
lods
jle
mov
fwait
je
pushf
push
push
mov
icebp
fs
inc
push
sub
aam
mov
aad
and
dec
jg
dec
dec
das
pop
xchg
inc
popf
out
dec
cdq
aam
dec
mov
aam
sub
(bad)
pop
jp
push
cmp
cmp
xchg
jns
pop
xchg
inc
mov
int3
jnp
int
ret
sti
rol
push
leave
ja
sbb
inc
aas
test
add
enter
lahf
ins
jb
(bad)
pop
mov
vphaddudq
test
and
sbb
cmp
inc
or
call
mov
xchg
xchg
add
enter
or
sub
popa
mov
les
addr16
jae
mov
popf
xchg
or
jb
mov
sahf
int3
ins
and
pop
lds
xchg
cmps
jecxz
cmc
out
add
fsub
test
dec
push
or
mov
mul
lods
inc
aad
mov
mov
mov
xchg
pop
(bad)
jmp
xchg
sbb
dec
aam
stc
inc
mov
or
and
sbb
fsub
imul
test
rol
or
(bad)
pop
retf
pusha
pop
jl
popa
enter
or
mov
xchg
jmp
sub
or
jmp
pop
xchg
pop
dec
in
cmp
sbb
dec
xchg
mov
imul
adc
pop
mov
retf
pop
jp
push
movs
js
push
das
push
ficomp
push
add
test
aad
test
mov
xor
les
mov
cli
btc
dec
jl
dec
loop
mov
push
dec
cmp
mov
inc
mov
adc
dec
jecxz
inc
push
jmp
(bad)
jns
add
ds
mov
xchg
daa
outs
jg
lahf
rcl
mov
sub
cmp
inc
sti
ins
stos
xchg
sbb
dec
xor
sbb
mov
mov
mov
aad
ficomp
adc
push
push
sub
ret
test
mov
ret
xchg
jecxz
in
fmul
in
xor
lock
je
aad
pusha
into
cmp
jl
movsx
ret
loope
adc
inc
ss
fwait
xor
jge
mov
mov
and
shl
aaa
std
imul
jns
in
xor
std
ja
adc
ss
or
popf
pop
loope
scas
ss
add
lods
imul
jmp
loopne
jmp
or
cmp
inc
into
fs
mov
out
sub
retf
sub
mov
scas
sbb
movs
jle
lds
pop
xchg
test
adc
shl
mov
push
jae
cmp
test
aaa
retf
ds
inc
mov
sbb
mov
jns
inc
mov
mov
lea
cld
pop
nop
sub
ss
stc
clc
jmp
xchg
pushf
dec
mov
fcomp
cmp
xchg
mov
or
std
fcom
fld
fyl2xp1
out
cmp
xor
aas
sahf
jecxz
xchg
add
lock
(bad)
fs
xor
dec
jne
sbb
aad
jp
mov
fild
retf
sbb
into
std
mov
mov
data16
xchg
sbb
pop
mov
addr16
repnz
outs
cmps
(bad)
mov
inc
lds
dec
sub
push
sub
lea
mov
sub
addr16
sbb
test
jmp
sub
sub
dec
push
mov
test
dec
adc
adc
pop
pushf
ret
rcr
hlt
out
movs
retf
push
or
mov
dec
xchg
push
test
sbb
and
rol
mov
push
cmp
bound
(bad)
data16
data16
sahf
mov
or
clc
xor
fisttp
push
fwait
jne
mov
xlat
mov
jnp
fucomi
add
repz
scas
inc
mov
add
or
gs
ror
int
cs
xchg
hlt
movs
mov
loop
sbb
mov
push
test
outs
push
add
rcl
cmps
adc
jno
data16
imul
bound
xchg
fidiv
pop
pop
idiv
fdiv
in
mov
jp
outs
in
adc
std
(bad)
cmc
xchg
sub
adc
data16
pop
lock
push
lahf
and
and
dec
add
add
ins
fldenv
pop
mov
scas
xor
xchg
xor
pop
fild
repnz
xor
imul
xor
lods
adc
sbb
or
cmp
jecxz
jge
out
jge
and
push
dec
call
icebp
push
xor
inc
adc
sub
push
call
mov
lock
cmc
repnz
aaa
and
das
add
es
je
pusha
mov
pop
pop
or
pop
les
pop
push
in
jbe
out
or
in
push
rol
push
sbb
ins
popf
test
xchg
xor
xchg
in
or
in
or
push
inc
retf
cmp
or
add
pop
shl
call
add
mov
scas
push
sbb
rep
lea
xor
ja
std
inc
test
add
jl
push
in
out
icebp
add
movs
pop
pop
leave
clc
inc
adc
sbb
cld
add
xchg
mov
cmp
mov
pusha
mov
rcl
fisttp
adc
arpl
xchg
bound
jns
sar
addr16
dec
call
cmps
sar
ret
popf
clc
pop
es
or
pop
sbb
inc
add
pop
stos
adc
inc
mov
das
ss
add
pop
(bad)
out
cmp
hlt
push
into
cmp
mov
into
push
stos
push
and
mov
cld
inc
add
push
lods
(bad)
mov
xchg
push
adc
(bad)
xchg
xor
arpl
dec
pop
out
mov
out
mov
push
inc
xor
call
fwait
call
cwde
xchg
push
shl
data16
lods
dec
adc
or
rol
out
sub
stc
xor
sbb
cmps
shl
int3
test
inc
jg
lahf
scas
pop
inc
xlat
add
add
dec
cmp
and
rcl
leave
lea
and
sub
arpl
inc
popa
les
jle
enter
out
mov
jmp
jmp
(bad)
sub
test
ret
neg
jno
and
pop
es
popf
mov
imul
shl
sbb
pop
dec
test
pusha
dec
ret
movs
jecxz
jno
jge
sub
retf
xlat
inc
mov
dec
test
mov
nop
je
retf
lock
xchg
add
pushfw
(bad)
sti
je
add
sbb
retf
(bad)
and
adc
pop
fs
pop
xchg
adc
scas
(bad)
ds
xor
pop
or
push
test
inc
push
js
out
sar
(bad)
cmp
scas
xor
fnstenv
pop
add
popa
mov
out
in
push
in
aad
adc
push
ins
cmp
cmps
sbb
adc
lds
xchg
inc
sbb
mov
jne
(bad)
sub
adc
mov
loope
xchg
cwde
lods
repnz
mov
das
sbb
fdiv
div
mov
popf
xchg
call
add
fnstsw
adc
xor
mov
mov
(bad)
fst
pushf
add
nop
std
(bad)
rcr
clc
cmp
aam
or
pop
cmps
and
test
lahf
adc
mov
inc
xor
mov
sbb
mov
jle
mov
imul
test
repz
repnz
out
popf
jb
xchg
push
loopne
fsub
dec
sbb
xchg
cmp
pop
retf
jae
and
ret
test
adc
cmp
jmp
cdq
sub
(bad)
xchg
xchg
mov
nop
mov
mov
sub
adc
sti
enter
aas
mov
push
dec
sub
lahf
add
dec
inc
dec
repz
pusha
jl
dec
es
push
div
dec
test
mov
adc
xchg
shr
jb
push
repz
stos
adc
arpl
inc
pop
push
cmpxchg
dec
int
inc
jae
cli
jmp
mov
pop
adc
xchg
add
dec
jns
in
mov
outs
jecxz
pop
sbb
stos
fist
cmps
adc
fcom
fs
lahf
(bad)
ret
xchg
mov
mov
mov
fistp
ror
movs
int3
dec
jmp
out
sbb
cli
cmp
jg
push
sbb
fisttp
ds
pop
scas
call
jae
mov
repnz
mov
loopne
cmp
dec
cdq
fistp
imul
mov
dec
and
adc
aaa
movs
and
dec
ret
lods
xchg
cmp
push
out
pop
jne
dec
out
pop
out
jmp
sub
(bad)
aaa
hlt
pop
cmps
push
mov
or
push
mov
shr
ret
cmps
mov
and
bound
sar
out
adc
in
xchg
ins
mov
repz
pop
(bad)
imul
retf
imul
lock
or
sub
clc
adc
into
in
(bad)
test
or
dec
cmp
pop
icebp
data16
sbb
in
clc
int3
mov
or
aas
mov
mov
xchg
mov
sbb
xchg
leave
push
test
mov
and
into
push
(bad)
and
gs
std
push
or
xchg
xchg
push
lds
inc
jbe
xchg
pop
nop
stos
mov
adc
push
les
push
xor
jecxz
in
sbb
mov
dec
dec
popa
jmp
push
cmp
ss
push
jle
or
or
hlt
add
je
xchg
xlat
fsubr
(bad)
(bad)
call
jmp
push
cmp
fld
add
inc
jl
ficomp
stos
add
add
dec
mov
jno
js
xor
pop
inc
dec
cmp
enter
shl
pop
xchg
add
mov
div
cs
push
or
or
pop
xor
stos
test
dec
aaa
ins
aaa
ror
jg
retf
mov
push
push
pop
sub
cmp
inc
mov
pop
add
ret
push
addr16
xchg
xchg
jmp
out
cwde
push
mov
mov
xor
clc
lahf
jo
(bad)
test
ins
add
mov
gs
add
fcmovnbe
ins
inc
cmp
sbb
icebp
out
dec
or
fs
movs
je
mov
out
mov
cmp
push
and
add
mov
aaa
hlt
sub
call
xchg
adc
cld
out
imul
and
jmp
mov
daa
mov
aad
push
hlt
cli
cmp
data16
add
mov
repz
retf
push
ja
(bad)
pusha
into
adc
add
jo
call
add
pop
fs
xor
jbe
xchg
retf
dec
in
mov
fwait
xchg
ror
lahf
pop
mov
xor
das
div
outs
lods
mov
bound
adc
hlt
inc
xor
fs
jns
xor
test
ficom
pop
and
xchg
add
sbb
data16
mov
cmc
pusha
cdq
fsub
hlt
ss
sahf
cmp
std
jbe
dec
sbb
fbstp
cmp
ret
sub
fsub
lock
or
dec
shl
jo
sbb
aam
rol
icebp
push
dec
or
push
jmp
sub
cmc
jp
mov
sub
mov
mov
je
sbb
lahf
neg
aad
inc
shr
aaa
aaa
or
mov
fdivp
int
add
pop
ret
mov
popf
inc
and
xor
nop
xor
push
iret
jge
inc
imul
out
call
add
cmp
xchg
mov
lea
jmp
jmp
mov
lock
fwait
dec
gs
loope
leave
aam
mov
les
mov
lea
sbb
rcl
xchg
icebp
ins
push
xchg
xchg
fwait
xchg
sbb
scas
dec
jb
mov
shl
jno
and
ins
xchg
sar
call
push
sub
adc
das
ins
cwde
aas
data16
aas
xor
sub
sbb
or
push
dec
fistp
nop
dec
jo
jmp
mov
or
aaa
push
movs
adc
loopne
jp
push
in
adc
mul
jg
push
nop
icebp
nop
daa
pop
push
test
mov
fs
pop
mov
cmp
push
enter
pop
cmp
dec
xchg
es
push
inc
jns
retf
test
sbb
xchg
call
mov
jo
ds
loopne
aaa
mov
movsx
mov
jnp
jbe
dec
sbb
xchg
(bad)
adc
dec
data16
dec
in
xchg
dec
push
jmp
test
fbld
or
jmp
jg
cld
pop
je
xchg
es
jo
push
mov
popf
retf
leave
lods
in
xchg
add
aam
sahf
popa
xchg
cdq
push
pop
sub
cmp
mov
out
xor
ja
mov
jbe
sub
fdiv
and
or
pop
ins
(bad)
jo
setp
push
jp
xor
adc
js
jmp
lea
jo
int3
xchg
xor
stc
add
sub
pop
and
sbb
sti
sub
push
xor
add
js
rcr
xor
pop
mov
(bad)
je
sbb
or
dec
inc
or
imul
(bad)
repz
push
push
pop
ret
(bad)
mov
(bad)
in
mov
bound
aam
sbb
mov
popa
in
cwde
jge
sahf
push
cmp
(bad)
ins
pop
cmp
dec
xor
(bad)
out
xchg
sti
dec
sub
mov
inc
sub
and
mov
fsub
shufps
and
mov
sub
push
add
lahf
rcl
pop
in
in
rol
aas
sbb
or
iret
add
dec
std
dec
adc
cmc
push
sbb
adc
sbb
dec
pop
retf
sub
fs
xor
mov
or
jae
outs
mov
ds
and
test
pop
and
das
adc
inc
add
push
jle
xor
add
inc
fisub
data16
out
(bad)
cli
inc
rcr
cmc
mov
mov
push
add
stos
jg
repz
in
aad
enter
imul
xlat
xchg
push
or
xchg
rol
jge
loope
mov
dec
adc
enter
stos
and
outs
movs
jl
vmwrite
idiv
mov
add
je
xchg
cmps
push
aam
sbb
lea
ror
cli
mov
sbb
push
stos
add
into
ret
or
cld
mov
jmp
and
mov
xor
xor
inc
(bad)
mov
add
cmp
loop
fldenv
mov
pop
nop
xchg
inc
jmp
inc
adc
std
xlat
xchg
xlat
(bad)
repnz
test
mov
mov
in
xor
nop
popf
int
sub
sbb
leave
jmp
sub
and
fistp
mov
add
mov
out
inc
je
daa
ret
popf
xor
int
dec
shr
sub
sbb
add
mov
jae
jno
ror
jle
add
popf
xor
mov
pop
fsubr
dec
movs
movs
repz
sub
leave
mov
shl
jae
int
jmp
or
dec
jge
ds
sub
jge
aam
sbb
mov
push
std
(bad)
(bad)
data16
icebp
popa
aad
pop
jl
out
add
push
sub
fwait
in
add
push
and
mov
(bad)
mov
jno
fdiv
jo
cmps
jmp
mov
aam
cmc
shl
mov
mov
fcmovnb
shr
bound
push
push
les
mov
scas
or
push
leave
lods
dec
inc
xchg
or
dec
out
imul
or
jle
jne
pop
and
mov
stc
sbb
mov
out
imul
mov
ret
cdq
inc
jmp
cmps
dec
mov
and
adc
ret
mov
mov
rcl
fnstsw
mov
in
dec
add
pop
add
(bad)
jl
jo
inc
arpl
xor
ss
test
nop
dec
shl
xchg
pop
push
das
pop
push
add
(bad)
es
(bad)
aad
mov
push
adc
aaa
mov
and
or
call
sbb
pop
mov
xor
out
jae
inc
mov
sbb
dec
add
inc
or
(bad)
stos
jo
movs
cmp
sub
xor
jne
sbb
sub
sbb
or
mov
out
seto
sub
adc
lock
mov
pop
jae
sti
aad
xor
(bad)
jns
mov
pcmpeqb
(bad)
jp
lock
mov
dec
nop
test
rcr
out
icebp
sub
jl
int
mov
inc
rol
inc
ja
(bad)
scas
cmp
adc
adc
std
cmp
gs
shl
out
xlat
adc
shl
fadd
daa
repnz
scas
pop
hlt
push
fwait
not
mov
neg
mov
adc
mov
mov
jno
ins
dec
ret
gs
sub
(bad)
call
jo
call
aas
mov
xchg
push
sub
cmp
sbb
gs
leave
pop
jmp
push
sbb
neg
frstor
repnz
je
push
jge
or
xchg
xchg
int
(bad)
fidivr
or
stos
cmp
xchg
loope
inc
add
lods
sub
sbb
cmp
ins
out
add
aas
imul
imul
cmp
lock
scas
(bad)
mov
mov
icebp
daa
mov
jmp
loope
mov
dec
movs
jmp
mov
sbb
sub
ins
push
les
mov
aam
or
mov
mov
cmp
jae
sti
mov
mov
push
fisubr
and
pop
popf
jo
jle
daa
cld
sub
or
arpl
mov
adc
pop
add
cdq
and
stos
mov
rol
mov
mov
sbb
push
sub
das
dec
jg
mov
push
and
shl
or
pop
nop
xchg
out
mov
adc
stc
stos
call
ins
ja
jecxz
js
retf
cmp
jno
mov
push
mov
add
clc
jmp
out
mov
pop
frstor
imul
aam
inc
jb
cmp
mov
sbb
in
adc
popa
cmp
push
cwde
mov
pop
ds
xor
pop
sbb
mov
add
mov
push
outs
xor
scas
mov
sub
addr16
pop
adc
xor
retf
fwait
mov
call
ss
scas
stos
ins
xchg
iret
aaa
push
inc
sub
retf
sub
int3
push
and
jecxz
fbld
inc
mov
sbb
mov
syscall
out
push
sbb
out
scas
add
fsub
cld
lahf
fld
imul
mov
or
popf
fiadd
mov
and
imul
shl
add
mov
mov
sub
or
frstor
sub
scas
es
sbb
pop
in
dec
jo
(bad)
pop
fstp
inc
ins
out
sbb
sub
rcr
xchg
push
jp
xchg
mov
mov
xor
rol
mov
xchg
bound
cwde
adc
je
mov
mov
inc
icebp
mov
sbb
xchg
jl
mov
js
fsub
(bad)
movs
mov
sub
cmps
adc
out
scas
enter
movs
mov
adc
pop
sub
jo
mov
jle
stos
(bad)
out
jmp
cmp
call
inc
mov
mov
and
mov
cmp
in
iret
retf
mov
pushf
in
test
xchg
fadd
xor
test
sbb
jns
lahf
adc
ror
jb
push
xchg
ret
dec
es
pop
cmp
inc
dec
into
test
loopne
xlat
mov
mov
cdq
cs
jl
pop
stos
nop
pop
mov
ret
xchg
int
(bad)
out
sub
xlat
lea
add
pop
mov
inc
xchg
frstor
enter
clc
adc
loopne
test
aad
or
mov
in
adc
pop
dec
xor
std
imul
jno
or
adc
pop
pop
ret
stc
inc
and
bnd
add
cmps
cwde
call
mov
es
(bad)
(bad)
lods
dec
repz
sbb
xor
lahf
xchg
cmp
inc
sub
mov
mov
lock
jnp
mov
lods
rcr
ja
xor
nop
inc
xchg
cli
sti
pop
(bad)
xor
push
call
(bad)
adc
arpl
add
retf
xchg
daa
push
cmp
pop
inc
jns
das
out
imul
mov
mov
inc
push
push
pop
cmp
mov
call
outs
mov
xchg
jo
test
mov
mov
(bad)
dec
sbb
dec
sub
icebp
arpl
push
jp
imul
in
pop
js
ins
inc
cmp
push
clc
pop
sub
add
aam
shl
das
sub
pop
mov
mov
cmp
dec
jp
outs
mov
xlat
sbb
out
sar
fs
popa
test
test
mov
fdiv
pop
pop
xor
retf
cmp
dec
call
xlat
jl
ds
call
pop
cmp
fdivr
sar
inc
mov
out
loopne
pushf
push
rcr
add
sub
(bad)
mov
pop
ret
and
mov
push
dec
mov
pop
clc
xchg
cmp
clc
sbb
shl
inc
sbb
mov
mov
cmp
jo
in
inc
lods
popa
neg
cld
fs
cdq
dec
mov
popf
int
out
test
das
mov
xchg
pop
xchg
outs
(bad)
cmps
jmp
pusha
pop
inc
mov
into
test
outs
inc
lds
cld
jbe
cmp
scas
cmp
hlt
pop
nop
(bad)
loop
lahf
xchg
push
pop
xchg
lock
enter
rcr
mov
xchg
dec
stc
add
push
hlt
fwait
sub
out
fwait
push
dec
ja
push
mul
add
ins
fst
mov
mov
jge
cmp
push
pop
bound
leave
inc
nop
jne
fist
jp
mov
add
pop
sbb
jge
cwde
jns
out
add
jg
call
push
leave
dec
pop
cdq
cmps
rol
and
add
ret
popf
mov
lds
inc
lock
mov
mov
xchg
sbb
mov
sbb
jae
add
dec
arpl
xchg
in
nop
push
inc
jo
sahf
sub
lods
loopne
cmp
sub
jae
call
mov
xor
outs
inc
sub
xchg
mov
jnp
pop
imul
movs
cmps
jge
xchg
xor
sbb
in
mov
ret
mov
xor
mov
inc
add
test
ret
jle
add
rol
jl
pop
cld
dec
or
fmul
fs
adc
mov
adc
hlt
sbb
inc
(bad)
test
aad
push
je
pushf
popa
jbe
fs
in
add
popf
and
mov
xor
or
jle
in
dec
jbe
sbb
inc
add
in
mov
pop
add
add
(bad)
dec
adc
xchg
je
lds
jo
test
lods
mov
shr
aam
dec
js
push
jns
cmp
xor
xchg
cmp
clc
dec
cmp
jle
or
pop
sbb
mov
pop
(bad)
cli
add
(bad)
pop
lock
adc
push
sub
imul
ds
mov
stos
fsub
mov
mov
pop
iret
push
out
jecxz
je
add
sub
es
nop
int3
sti
ror
inc
jp
iret
outs
xor
dec
adc
dec
retf
jno
push
inc
sub
ds
xor
test
inc
xchg
aam
fldcw
lods
jno
and
inc
jge
cmp
mov
xchg
mov
cmc
js
fld
fidiv
push
aad
mov
and
mov
popa
popa
imul
sar
jmp
cmps
mov
(bad)
xor
movs
shl
dec
test
pop
xchg
cmp
sbb
icebp
pop
sub
aam
fisub
cmps
or
jmp
pop
int
imul
cmc
lock
or
gs
fsub
shl
out
test
pop
jne
sub
mov
xlat
icebp
mov
and
cdq
mov
jle
xchg
cmp
arpl
push
outs
jg
retf
nop
daa
mov
xchg
idiv
dec
and
aas
pop
loop
sbb
and
test
fld
sbb
dec
push
iret
icebp
mov
jg
outs
jbe
lahf
mov
int
icebp
lods
neg
(bad)
sub
xor
mov
call
jg
xlat
push
dec
jns
inc
aas
mov
mov
(bad)
xchg
sub
mov
ss
push
mov
jb
mov
push
je
mov
idiv
test
mov
lock
fimul
dec
xchg
test
je
rcr
in
loopne
xlat
sub
xchg
sbb
push
mov
aad
adc
aas
dec
ins
aam
mov
xchg
lock
add
sbb
test
mov
cli
in
cld
cld
mov
stos
cwde
xchg
push
sbb
push
pop
xchg
sbb
pushf
jp
in
xchg
xchg
movs
repnz
xchg
scas
push
mov
das
lahf
or
aam
int
std
mov
jecxz
sbb
add
or
mov
scas
mov
jbe
mov
inc
dec
mov
scas
js
push
js
push
mov
xchg
scas
popf
popa
pop
mov
imul
cmps
call
mov
retf
popf
inc
jae
popf
fld
push
inc
pop
scas
je
js
fcmove
ret
int
inc
in
sahf
lea
add
sub
sub
xchg
shr
imul
dec
stos
setae
lds
dec
add
mov
(bad)
cwde
std
add
shl
mov
das
cmp
fcomp
and
jmp
xchg
dec
in
sub
jp
icebp
jnp
test
aad
movs
or
ins
add
fwait
leave
cs
push
add
(bad)
xor
cmp
add
in
clc
movs
lds
leave
xchg
cmp
stos
jno
or
nop
imul
fidivr
daa
cwde
or
mov
addr16
cmp
mov
inc
(bad)
out
or
push
jp
les
test
stos
pop
jne
daa
outs
xor
mov
xor
jno
jp
sub
add
(bad)
jno
popa
cs
lods
cmps
cs
scas
call
jnp
das
je
sahf
nop
test
mov
xor
mov
xor
vcvttss2si
sub
xor
inc
out
outs
add
gs
popa
mov
mov
sub
ds
arpl
out
and
ins
fstp
lods
rol
into
push
and
outs
mov
add
sti
or
push
or
mov
inc
sti
mov
popf
xor
and
sbb
jp
xchg
mov
or
mov
ss
aam
adc
xchg
mov
jnp
push
pop
pop
je
adc
ins
mov
or
addr16
icebp
out
and
out
aas
icebp
push
data16
push
shl
int
or
out
jecxz
xor
adc
lds
lea
add
leave
je
jmp
addr16
mov
jl
fidivr
and
xchg
pop
ret
cmps
(bad)
aaa
cs
jne
sbb
call
(bad)
or
pop
mov
push
jns
jns
mov
(bad)
push
stos
ja
jbe
ret
ins
cmp
out
lods
mov
fwait
sub
sbb
and
or
xchg
sti
hlt
jbe
xchg
test
cld
jae
dec
jo
add
pop
xchg
sahf
or
(bad)
push
mov
and
add
mov
mov
jo
test
js
fs
in
inc
(bad)
gs
nop
enter
add
sbb
stos
fdivr
xchg
mov
jp
sbb
cmp
imul
leave
and
mov
sbb
or
mov
cmp
pop
adc
xchg
in
push
lds
enter
addr16
adc
fiadd
inc
cmp
out
rcr
push
jmp
pop
rcl
or
inc
sbb
jmp
je
inc
into
and
or
inc
cmc
loop
sbb
jge
pop
hlt
jo
mov
ins
adc
xor
in
sbb
dec
jge
movs
mov
and
hlt
jmp
stc
rcr
mov
jmp
je
pop
jg
jl
add
retf
cli
xchg
(bad)
(bad)
jb
xor
mov
ds
mov
ds
xchg
mov
pusha
sub
outs
mov
pop
pop
push
es
jne
and
jl
imul
leave
test
(bad)
sub
add
cld
aad
mov
cmp
xor
sub
frstor
jae
cmp
js
test
pop
enter
sbb
stos
(bad)
in
test
repz
adc
pop
mov
stc
xchg
cld
into
add
jno
addr16
int3
xchg
mov
shl
aaa
punpckhwd
cmp
dec
xor
xchg
addr16
leave
std
pop
shl
push
int
pop
inc
push
and
pop
pop
lea
add
sub
push
shl
in
adc
xchg
fdiv
jb
movs
cmp
retf
or
cdq
xor
and
sti
jbe
scas
pusha
mov
dec
xor
xor
mov
pop
inc
fistp
adc
jle
and
movs
inc
movs
inc
ret
inc
neg
in
mov
out
call
push
push
cmp
and
fs
dec
lock
dec
dec
mov
inc
sbb
jne
outs
mov
jb
push
cdq
retf
sub
into
dec
or
xchg
in
xchg
fiadd
dec
mov
je
and
nop
adc
sar
sbb
test
mov
and
test
add
pusha
fisubr
add
(bad)
xor
popa
xchg
pop
mov
call
pop
or
test
clc
idiv
sub
xchg
jge
push
dec
add
adc
(bad)
(bad)
(bad)
test
fs
and
dec
repz
div
mov
cmc
mov
scas
xor
xlat
xor
add
je
loope
pop
adc
sar
gs
je
mov
lahf
out
mov
gs
add
mov
(bad)
jmp
imul
dec
fdivr
xchg
cmp
sub
jmp
loopne
dec
sbb
pop
pop
mov
fst
rcr
jbe
sbb
inc
test
xchg
pop
sbb
or
cmc
test
lods
fiadd
cmp
inc
inc
outs
(bad)
jbe
in
xlat
enter
sub
dec
leave
push
dec
pop
push
push
mov
sub
inc
cmp
stc
mov
cdq
dec
pop
ins
(bad)
leave
or
sbb
adc
fsubr
jnp
(bad)
cmp
inc
sbb
mov
jmp
jbe
xchg
push
push
push
in
bt
sbb
loope
clc
jb
ja
fwait
inc
jmp
pop
test
xchg
xor
mov
retf
push
pop
int3
cmp
jo
test
sub
ret
imul
js
outs
fcmove
les
cld
out
mov
push
ins
bound
push
mov
xchg
rol
daa
jo
xchg
stos
clc
scas
movs
sbb
add
xor
dec
push
lock
or
xlat
in
add
cmp
and
or
mov
out
rcr
push
out
das
adc
mov
xchg
fisubr
sub
imul
and
cmp
lahf
inc
inc
in
lods
fmulp
mul
les
mov
scas
scas
pop
mov
inc
lods
mov
mov
sub
les
mov
fiadd
sbb
jae
retf
arpl
push
sub
mov
jecxz
pop
addr16
sahf
jns
(bad)
iret
shl
repnz
push
rcl
add
and
out
jnp
test
ss
outs
in
lds
test
ins
bound
jbe
push
mov
fisub
or
ins
(bad)
push
and
lods
fld
test
repnz
scas
cli
mov
aaa
xchg
js
sub
(bad)
xchg
test
xchg
stc
movs
mov
ja
dec
sbb
mov
lods
sub
lahf
dec
and
loopne
call
pop
pop
ret
out
cmps
inc
mov
jecxz
mov
mov
out
xor
je
or
cmp
adc
dec
adc
or
int3
dec
cli
cmp
je
mov
xor
xor
xchg
loopne
shr
sub
in
jmp
test
ss
das
dec
ret
mov
(bad)
mov
mov
xor
mov
adc
and
outs
lahf
(bad)
mov
lock
sbb
loope
cwde
xchg
pop
sub
and
(bad)
mov
cmp
pop
repz
push
loopne
(bad)
cmp
pop
sub
pushf
mov
lods
(bad)
scas
inc
ds
into
int3
sahf
inc
add
not
push
movs
sahf
cmp
ins
adc
out
pop
xchg
add
inc
js
xchg
call
mov
mov
pop
add
das
(bad)
sbb
movs
inc
mov
xor
out
dec
mov
mov
nop
sub
and
push
mov
nop
mov
inc
ins
or
int3
pop
mov
(bad)
jg
ds
xchg
adc
dec
repz
adc
sti
fst
loopne
mov
lock
js
jno
hlt
aam
into
sub
sbb
movs
pop
sbb
inc
aad
xor
xor
ds
fimul
pop
cmp
ja
jmp
and
inc
cmp
inc
xor
retf
ins
pop
dec
xor
push
jns
fnstcw
out
out
mov
mov
mov
mov
sub
jle
xlat
shl
sub
je
sub
icebp
sub
imul
inc
mov
xor
call
out
mov
jb
pop
ficomp
push
jae
sub
ret
mov
fcom
fld
test
mov
sti
loope
jb
jnp
mov
pushf
fsubr
push
cmp
mov
sbb
add
out
aas
in
jno
fsubrp
mov
lods
dec
add
andnps
outs
cmps
pop
xor
std
js
mov
jbe
or
iret
push
xchg
daa
sub
daa
xchg
test
aas
xchg
mov
xchg
cmp
dec
movs
inc
push
sub
xor
lods
inc
test
popf
jmp
cmp
movs
xor
pop
jnp
jp
pop
movs
(bad)
cmp
add
lds
gs
xor
add
neg
add
mov
and
loope
pop
push
pop
cmps
lock
or
mov
mov
fisubr
(bad)
fnstcw
mov
aam
dec
repz
loopne
inc
xchg
add
dec
repnz
(bad)
push
repnz
push
xor
sbb
cli
and
movs
xchg
daa
add
sar
pop
sbb
stos
adc
xchg
push
stos
or
les
pop
mov
jnp
or
mov
(bad)
sub
gs
xlat
pop
(bad)
push
mov
push
mov
cmp
adc
mov
iret
pop
jnp
mov
push
push
bnd
xchg
adc
xlat
retf
cld
out
push
pop
out
xchg
or
and
push
mov
stc
push
sub
fadd
bound
mov
or
xchg
imul
inc
xor
fldcw
add
sbb
pop
cmp
mov
dec
jb
pop
mov
xchg
(bad)
das
dec
outs
les
xchg
ja
stos
xor
mov
mov
mov
ins
icebp
dec
out
dec
or
cmp
repz
jmp
sbb
movs
aas
dec
mov
fdiv
iret
xchg
leave
dec
fiadd
pop
daa
int3
mov
sub
fsubr
loopne
pop
jle
les
jmp
lods
jno
dec
popa
movs
dec
inc
ss
mov
mov
push
call
rcl
fmulp
jmp
lods
inc
fwait
nop
mov
jge
pushf
pop
cdq
mov
add
mov
cld
xor
scas
in
jmp
mov
(bad)
aad
ja
div
psrlw
cmp
sar
scas
sub
imul
xor
sub
in
movs
inc
push
les
dec
stos
aam
ins
shl
ret
test
inc
rcl
(bad)
dec
cmp
call
mov
cwde
xor
mov
jno
push
dec
mov
shl
jle
xor
test
jecxz
fs
mov
jmp
icebp
pslld
fwait
add
mov
cmc
cmp
add
clc
ja
pop
pmaddwd
fldcw
dec
push
stos
out
sbb
pop
in
in
push
ins
rcl
fbld
or
xchg
inc
(bad)
xchg
jmp
cli
popf
xchg
xchg
(bad)
xor
cwde
push
push
dec
inc
push
mov
mov
daa
fldcw
icebp
(bad)
out
scas
cmps
fisub
addr16
jg
mov
pop
lds
sar
(bad)
push
xor
sbb
fcom
dec
fxch
out
jl
int
(bad)
dec
ja
jecxz
scas
out
cmp
pop
nop
frstor
dec
push
xor
pop
mov
sbb
out
xchg
arpl
mov
(bad)
add
shl
rcr
movs
mov
jnp
pop
inc
rol
(bad)
jbe
mov
es
jae
lds
fldenv
icebp
adc
add
push
adc
es
xchg
ins
mov
out
inc
(bad)
popa
stos
pop
mov
dec
test
pop
mov
or
sbb
aam
mov
inc
jnp
pop
mov
lds
cmp
js
or
call
jb
inc
dec
push
sbb
div
ret
xchg
call
xchg
fnstenv
push
adc
retf
scas
pop
mov
inc
daa
rol
sub
bound
aad
pop
push
call
ss
xchg
sbb
mov
mul
xchg
sub
pop
mov
test
jnp
pusha
add
mov
push
and
mov
mov
mov
jg
fcom
add
hlt
add
or
adc
cmp
loope
xor
cmp
jg
push
pop
out
std
sub
push
xchg
clc
mov
int3
cmp
stc
loopne
outs
mov
or
sar
mov
mov
movs
mov
(bad)
fwait
call
pop
outs
movs
cmps
lea
mov
xchg
and
fcmovb
leave
leave
(bad)
pop
(bad)
(bad)
mov
icebp
loopne
mov
sti
in
sbb
dec
inc
int
xor
xor
les
sar
jle
inc
push
jae
dec
rol
mov
inc
sar
push
xchg
dec
xchg
jno
add
mov
repz
dec
jle
add
mov
and
stos
cdq
mov
cmp
pop
cmp
adc
add
test
xor
mov
mov
mov
inc
push
jmp
cmp
xor
xchg
pop
shr
and
jmp
(bad)
xor
mov
and
out
jno
pop
cmps
mov
scas
out
cmp
jmp
dec
(bad)
movs
dec
cwde
mov
push
dec
push
xchg
shl
pop
xchg
cs
sbb
pop
cmp
mov
mov
or
mov
or
out
cmp
xchg
out
push
dec
lods
loop
pusha
cs
adc
sub
xchg
inc
push
pusha
mov
adc
cmp
jno
pop
fs
test
jbe
bound
sub
add
int3
xchg
jbe
cmp
push
push
xor
push
pop
stos
mov
push
outs
test
cmc
sub
mov
dec
out
nop
int
stc
inc
jns
sbb
mov
and
shl
loopne
xor
jg
loopne
sbb
inc
push
dec
sub
push
adc
dec
or
mov
movs
ss
or
scas
mov
pop
out
sub
cmp
dec
cmp
int
test
and
ror
inc
add
adc
jg
dec
lods
or
das
mov
jle
icebp
push
cld
(bad)
loop
ret
ffree
addr16
xchg
inc
dec
cmp
add
mov
push
rol
jnp
pop
sbb
js
mov
sub
(bad)
rcl
sbb
outs
pop
lods
jne
das
cs
imul
xor
cdq
dec
lds
sub
dec
cmps
pop
cmp
test
test
and
(bad)
fist
push
jo
push
push
sub
idiv
push
mov
sbb
and
sahf
push
popw
popf
jmp
sbb
out
test
ret
test
lods
jo
sbb
dec
popa
stos
cmps
popa
adc
add
sub
push
hlt
adc
and
rol
xchg
dec
stos
mov
sti
icebp
ds
jo
loopne
dec
sub
popf
xchg
sbb
jno
out
sub
pop
xchg
in
rcr
and
pusha
shl
(bad)
xor
cld
xor
(bad)
mov
add
xor
scas
sbb
jns
add
in
jo
in
and
sbb
or
pop
mov
je
jo
std
dec
adc
cdq
jmp
(bad)
adc
icebp
(bad)
mov
les
dec
jae
cwde
pop
inc
(bad)
cmovge
icebp
jmp
pop
leave
xchg
and
dec
mov
sbb
inc
mov
cld
mov
scas
call
mov
gs
or
mov
mov
xchg
icebp
cmps
and
sub
das
sbb
in
jns
repnz
adc
retf
lahf
ror
stos
inc
add
or
(bad)
xchg
inc
loop
stos
test
pop
neg
inc
in
xor
loope
sahf
mov
jg
ret
adc
or
add
mov
add
stos
jmp
cmp
out
call
mov
aas
(bad)
jno
xor
and
sbb
push
dec
daa
pop
xor
repz
mov
adc
xor
div
aad
xchg
les
jl
push
add
mov
aad
mov
pop
xor
mov
sbb
mov
cdq
jmp
loope
das
cmp
ss
add
add
pop
xchg
cmps
retf
push
dec
pop
xchg
fldenv
inc
add
xchg
lock
shr
jmp
lock
jbe
xchg
sub
aas
test
(bad)
cmps
mov
pop
cmp
xor
adc
push
(bad)
aaa
ss
fs
into
jmp
lock
repnz
popa
cmps
scas
jmp
inc
ret
pushf
xchg
movs
div
(bad)
mov
rcr
mov
aam
shl
xor
fild
dec
mov
shr
cmps
xchg
ret
add
add
lahf
leave
mov
pop
fsub
fdivr
ficomp
mov
jbe
inc
pop
imul
test
pop
cwde
dec
scas
inc
call
jle
push
int
cmps
imul
xor
rcl
stos
stos
mov
out
jecxz
cmp
push
jnp
mov
shr
movs
ss
mov
xor
int
mov
push
cmp
lahf
jecxz
fyl2xp1
inc
xlat
daa
iret
xlat
cwde
inc
jmp
xor
sub
adc
jno
(bad)
nop
fnstcw
stc
fdiv
jge
int3
mov
cmp
ror
fiadd
scas
ja
aaa
add
std
adc
inc
test
dec
outs
mov
push
(bad)
hlt
fild
ret
pop
ror
mov
leave
fcom
xchg
arpl
xchg
inc
xchg
adc
pop
jno
lods
inc
fstp
daa
lea
and
lock
outs
xchg
xor
loopne
pop
xchg
shl
shl
clc
and
cmps
mov
push
cli
stos
jl
arpl
(bad)
pop
pusha
rol
and
jae
int3
test
push
and
mov
int
adc
fsubr
push
mov
repnz
jae
mov
in
in
jle
adc
xchg
out
mov
daa
and
fisttp
jne
cmc
fcom
sbb
clc
daa
and
ss
push
xchg
pop
or
dec
int3
xchg
fisub
inc
(bad)
movs
mov
pop
push
jno
aas
mov
leave
loopne
mov
add
sbb
xchg
pop
xchg
icebp
into
push
jnp
adc
push
das
nop
xchg
dec
fs
rcr
pop
jne
loopne
and
mov
or
les
jnp
addr16
pop
shl
add
popf
shl
int
retf
mov
mov
add
bound
push
inc
jo
scas
popf
pop
xchg
mov
inc
xor
mov
inc
mov
cwde
dec
scas
push
xchg
adc
jae
or
(bad)
into
mov
jp
mov
xchg
add
mov
outs
jmp
jmp
push
lock
lock
fwait
shl
mov
lods
mov
and
fimul
mov
inc
mov
fisub
xor
pop
mov
or
jle
(bad)
icebp
adc
mov
out
add
dec
retf
mov
add
pop
in
mov
inc
sbb
mov
inc
sbb
dec
(bad)
xor
jo
jo
jo
jge
cli
mov
jb
in
mov
out
int
add
in
popa
scas
sbb
in
pushf
ret
mov
add
push
push
imul
sub
mov
cs
xlat
iret
xor
pusha
inc
sbb
ins
fld
sbb
clc
push
std
test
ss
sbb
sbb
outs
jg
xor
inc
adc
sbb
scas
mov
xor
push
sbb
dec
pop
sub
stos
adc
jno
daa
mov
das
jbe
inc
loop
icebp
mov
retf
jmp
call
dec
adc
sub
pop
nop
das
xchg
bound
xchg
jbe
aas
jg
lahf
push
push
nop
nop
cmps
sub
pop
jbe
add
sbb
fadd
push
outs
hlt
xlat
mov
jo
sbb
xchg
adc
mov
add
aad
jg
lahf
push
jno
mul
(bad)
into
mov
retf
mov
dec
div
int
std
shl
and
arpl
ds
je
retf
sbb
inc
(bad)
lea
adc
lock
(bad)
mov
cmps
ror
mov
add
test
(bad)
and
gs
pop
mov
stos
add
add
outs
clc
clc
push
pushf
pop
mov
sbb
xchg
jmp
mov
jge
in
nop
(bad)
xchg
mov
add
mov
xor
nop
pop
sub
or
pusha
popa
xor
dec
adc
stos
out
outs
xor
int
test
stos
pop
addr16
jmp
jmp
jne
mov
dec
sbb
arpl
sbb
(bad)
ret
loope
xor
dec
pop
hlt
jg
cwde
cmps
mov
xchg
sbb
hlt
pusha
or
pop
enter
gs
nop
in
adc
lods
jbe
inc
inc
scas
sub
repz
push
int
dec
(bad)
pop
sub
pop
xchg
lea
cmp
dec
enter
mov
cmc
mov
dec
cli
sti
jne
ud2
sub
pop
fdivp
outs
mov
repnz
mov
not
fsubr
loop
pop
jmp
aad
sar
mov
daa
mov
mov
mov
je
imul
jnp
pop
push
(bad)
cwde
cli
xor
cld
jo
adc
in
fcomi
data16
mov
pop
adc
cli
neg
movs
jae
jb
in
jae
inc
inc
aas
lds
cmp
and
mov
gs
dec
lods
outs
pop
icebp
lods
(bad)
(bad)
in
push
ror
stc
mov
aas
adc
push
mov
neg
fcom
lea
shl
lock
in
ja
pushf
cwde
dec
jne
sbb
and
imul
ds
add
cmps
or
inc
stos
das
mov
sub
(bad)
and
repz
sub
push
dec
lea
or
mov
xchg
call
push
xchg
pop
je
mov
mov
(bad)
out
lods
adc
pop
jmp
popf
and
or
mov
imul
hlt
xor
fist
nop
cmp
jl
sbb
xor
jbe
out
jo
mov
aas
xchg
push
mov
sub
add
sbb
hlt
ret
dec
sub
and
inc
push
test
xor
enter
(bad)
mov
push
inc
mov
jle
or
push
jge
push
jns
mov
dec
movs
jle
inc
and
dec
and
push
push
repz
push
add
shl
xor
xor
mov
(bad)
icebp
bnd
test
les
outs
iret
pop
adc
(bad)
fistp
add
push
mov
cmp
add
div
mov
stos
cmps
(bad)
int3
mov
push
loopne
cdq
cmc
xor
test
loope
mov
push
stos
or
mov
mov
(bad)
pop
jle
push
mov
add
mov
push
dec
(bad)
test
sbb
mov
(bad)
movs
xor
icebp
(bad)
and
outs
icebp
scas
shr
les
cmp
pop
das
inc
cmp
mov
and
mov
cmp
mov
(bad)
adc
xchg
clc
push
cmp
adc
popf
out
jo
or
mov
adc
cmp
pop
add
test
test
outs
inc
dec
jle
mov
pop
push
add
push
adc
inc
mov
inc
or
retf
lods
push
fcmove
push
xchg
ss
pusha
push
mov
in
xchg
lock
pop
xchg
cmp
mov
mov
retf
stos
(bad)
or
mov
stos
cmps
fldcw
rol
sbb
sti
mov
adc
ret
jns
jge
xor
cdq
add
ins
xor
mov
jae
adc
jae
xchg
xchg
sub
xlat
mov
pop
cmp
in
int
ins
mov
mov
lock
push
dec
mov
lahf
mov
cmp
loopne
xchg
pushf
mov
ret
lods
or
sbb
fwait
cmps
shl
js
xchg
add
in
inc
inc
jle
repnz
pop
in
push
retf
and
in
push
out
dec
or
test
outs
pop
dec
add
cwde
arpl
sbb
inc
push
clc
and
div
or
pusha
std
cmp
pop
in
call
nop
and
lds
and
rcl
pop
stos
gs
mov
sub
add
add
outs
sub
lea
scas
or
pushf
int3
mov
xchg
adc
sbb
add
sar
jmp
enter
or
leave
lods
push
jp
dec
inc
mov
pop
fmul
push
cmps
mov
push
push
hlt
pop
or
cmp
dec
xor
adc
sub
jmp
adc
ror
out
je
sub
scas
ffreep
add
loop
add
adc
pusha
ret
or
out
lds
stos
jae
stos
(bad)
mov
(bad)
(bad)
dec
test
xor
jne
xor
add
and
dec
sar
pop
rcl
cmp
and
pushf
cmp
in
inc
cmp
dec
mul
mov
cmp
pop
xchg
ret
adc
ins
or
push
and
pop
cmp
mov
aad
push
frstor
ja
test
inc
dec
sub
out
call
in
pop
push
jl
adc
mov
sbb
xchg
fbstp
sti
dec
test
push
push
popa
adc
mov
(bad)
dec
and
pop
std
scas
popa
mov
lods
xchg
outs
inc
cmc
inc
stos
push
sar
lock
clc
cmp
mov
add
test
dec
dec
add
mov
(bad)
nop
into
test
nop
inc
push
sub
and
xor
cmp
xchg
bound
or
cmps
and
dec
lahf
jmp
leave
es
ins
push
sar
dec
sbb
mov
mov
sbb
inc
in
jmp
cmp
push
mov
push
mov
lds
lahf
fidiv
push
loopne
cli
mov
int3
mov
in
jle
aas
sub
dec
test
cs
jbe
dec
mov
nop
sub
add
xor
loop
add
cmc
xchg
add
jns
ins
gs
test
fist
cwde
in
sbb
fidiv
into
mov
(bad)
or
push
pop
aad
retf
mov
cmp
ret
or
jl
stc
retf
pop
imul
shr
(bad)
jbe
cli
out
into
test
sub
sbb
jnp
mov
enter
imul
add
and
inc
add
pusha
jmp
mov
and
pushf
cld
movs
outs
jb
lods
popa
inc
(bad)
into
push
mov
hlt
xchg
push
mov
xor
cmp
sub
pop
iret
aam
sbb
pop
dec
sub
push
sub
aas
ds
or
add
aas
mov
mov
ss
fwait
(bad)
mov
mov
and
xchg
xchg
aad
adc
imul
retf
inc
(bad)
fild
xor
xor
push
jp
mov
jge
mov
push
or
mov
lea
popf
jbe
aam
mov
xchg
hlt
test
mov
mov
movs
inc
pop
push
arpl
mov
mov
fldcw
ret
fdiv
add
jge
mov
xor
js
push
in
sahf
push
dec
into
loope
and
mov
call
jp
inc
sub
mov
mov
dec
movs
fdiv
ins
mov
and
or
cmp
adc
xor
adc
and
cs
push
xchg
xchg
mov
xchg
add
(bad)
ins
rol
ret
mov
iret
jge
jbe
jb
pop
add
mov
in
sub
test
sub
out
je
sbb
xor
mov
inc
dec
shl
sub
test
jno
adc
xor
sbb
and
push
pop
cld
arpl
xor
ret
ins
lock
mov
scas
loop
push
mov
xor
mov
cmp
mov
cmp
scas
fild
pushf
xor
xlat
ja
xchg
pop
or
(bad)
jle
jl
jge
ja
xchg
jge
les
mov
in
jne
das
sub
aad
push
pop
xchg
push
imul
popf
mov
fdivr
cld
push
xor
push
fwait
dec
out
enter
icebp
push
jmp
cdq
or
or
jne
mov
stos
rol
rcr
cmp
mov
push
aad
jge
fcomp
leave
cmps
pop
mov
lahf
daa
sahf
out
outs
retf
iret
cmps
(bad)
out
lea
into
in
inc
or
xchg
and
(bad)
push
mov
mov
xchg
push
sbb
frstor
retf
adc
shl
jb
push
push
xor
fistp
xchg
jno
fidiv
cs
call
sbb
stos
xor
jno
or
mov
int
push
xchg
pushf
or
push
mov
test
out
lods
dec
popa
pop
add
pop
ror
ret
outs
loope
push
xchg
leave
cmc
mov
dec
xor
stc
and
outs
ja
cmps
push
imul
mov
adc
push
cmp
mov
mov
cwde
cmps
or
mov
cmp
pusha
add
gs
mov
idiv
out
jbe
xchg
(bad)
push
sub
push
sbb
mov
lds
sbb
call
stc
jg
sbb
lods
push
mov
and
jmp
cmp
mov
arpl
xor
aas
int3
or
(bad)
xor
(bad)
jmp
fwait
neg
hlt
xor
fnstsw
jmp
(bad)
mov
push
inc
das
jne
cmp
sub
push
stos
mov
fld
outs
mov
dec
icebp
dec
jb
clc
push
mov
out
mov
dec
xchg
mov
push
jmp
and
ins
mov
xchg
cld
pop
inc
dec
inc
cmp
cmp
repz
pushf
and
sub
enter
int
dec
inc
adc
shld
das
add
xchg
adc
inc
or
gs
or
leave
or
xchg
mov
out
jbe
das
push
push
pop
ficomp
and
push
inc
movq
push
pop
lds
pop
mov
rcr
push
mov
(bad)
or
inc
add
push
ins
push
mov
test
test
ja
xchg
dec
push
(bad)
jmp
icebp
or
int3
in
ror
or
sub
lds
mov
mov
lahf
outs
or
dec
ret
dec
xor
call
(bad)
push
int3
sahf
adc
cdq
aaa
dec
mov
out
sub
sbb
mov
mov
aad
pop
int3
in
sub
pop
cmps
jge
daa
cmc
pop
sub
xchg
xchg
pop
mov
retf
add
or
sbb
push
aaa
out
dec
push
or
sbb
fcomi
shr
pop
cmc
ror
jae
std
loope
mov
dec
push
sub
pop
test
push
push
rcr
mov
push
sbb
sub
pushf
lods
lods
mov
jmp
cmps
ins
ret
rcl
pushf
and
cmp
push
and
sbb
jb
jmp
fwait
jmp
mov
pop
cmp
dec
out
push
and
cs
mov
mov
and
sub
xor
and
cmp
rcl
nop
iret
mov
cmp
and
pop
push
dec
xor
push
imul
pop
(bad)
in
sub
inc
sbb
(bad)
sar
jl
loopne
push
add
dec
es
push
push
int
cmp
cli
mov
pop
xor
loope
sbb
or
(bad)
dec
inc
sbb
(bad)
aaa
xor
push
pop
mov
sub
fist
test
aam
(bad)
jnp
rcl
int
inc
xchg
mov
fld
xor
cli
lock
pop
pop
push
jmp
and
lds
sbb
mov
aas
push
pop
shufps
lods
les
stos
xchg
outs
in
sbb
inc
mov
inc
ss
or
pop
mov
mov
neg
aas
int3
and
jecxz
popa
repz
pop
lods
test
xor
dec
jmp
aam
rcl
gs
ror
mov
(bad)
sar
fwait
les
inc
mov
ror
cmp
mov
cmp
fmul
mov
mov
mov
xlat
xor
and
mov
lahf
push
lea
shl
mov
and
sbb
es
mov
mov
sub
iret
stos
mov
push
push
or
adc
scas
fwait
(bad)
push
loope
cmc
ins
mov
mov
jno
cli
mov
pop
and
daa
mov
xchg
dec
xor
cmp
outs
fdivr
inc
call
and
ins
inc
jl
es
data16
adc
test
ja
clc
mov
call
xor
pop
dec
es
and
xchg
xchg
repnz
pusha
in
add
mov
das
sub
push
xchg
lahf
dec
and
les
sar
out
cmc
sti
mov
aaa
addr16
adc
cs
cmp
jbe
dec
ret
cwde
popf
mov
mov
mov
mov
and
jne
int
iret
ja
push
dec
rcr
jbe
push
add
sub
stos
jne
mov
sub
xor
cmp
aas
or
sbb
fwait
dec
out
jo
test
loop
mov
and
shr
rcl
add
lahf
loopne
xor
xchg
mov
adc
jmp
push
ret
iret
lock
jge
shr
sub
sbb
xor
mov
mov
mov
mov
(bad)
cdq
xchg
pop
ins
pop
(bad)
push
mov
(bad)
push
mov
out
arpl
cwde
mov
leave
lods
pop
jns
cmp
lods
movs
aaa
dec
pop
mov
retf
(bad)
fcom
jmp
jle
movs
push
cmp
int3
jecxz
jmp
cmp
xchg
movd
fwait
pop
das
ins
and
add
scas
pusha
pop
loopne
pop
push
or
sub
dec
pusha
jne
and
inc
jp
fidivr
add
in
inc
xlat
test
cmp
iret
aad
add
jb
pop
retf
stc
push
xor
(bad)
jmp
ret
sbb
mov
pop
xor
data16
call
pop
sub
dec
imul
jge
scas
xchg
add
jnp
mov
gs
sbb
push
push
add
lahf
pop
test
into
push
(bad)
popa
push
scas
mov
lods
enter
jae
rcr
popa
xchg
push
sub
cmps
outs
mov
mov
xchg
mov
xchg
dec
ds
adc
mov
sbb
adc
outs
movs
imul
les
inc
mov
hlt
mov
sahf
(bad)
movs
jecxz
or
repz
dec
adc
sub
cdq
mov
sbb
hlt
mov
mov
inc
je
pop
loop
mov
iret
jns
xor
push
inc
retf
scas
call
out
jmp
in
sub
in
and
add
xor
xchg
in
cdq
outs
out
aam
inc
enter
mov
and
jmp
stos
adc
(bad)
push
ins
xlat
inc
popf
movs
inc
mov
jl
test
fmul
in
not
cdq
shl
mov
out
js
sbb
or
mov
cmp
aad
add
pop
sbb
movs
outs
test
push
push
pop
push
data16
nop
aaa
sbb
xor
ror
xchg
adc
ins
in
loope
scas
in
and
mov
fiadd
add
cmc
ja
pop
sbb
call
ins
mov
pop
ins
push
daa
cmp
(bad)
or
xor
leave
test
and
and
(bad)
in
(bad)
les
mov
sahf
pusha
xchg
jl
test
xchg
mov
pop
sbb
push
or
adc
jne
pop
stos
fnstsw
or
(bad)
sbb
inc
xlat
and
xchg
ja
jl
jl
push
jb
(bad)
movs
fdiv
jmp
pop
push
call
jo
push
cli
fnsave
mov
dec
in
xchg
sub
jne
pop
sar
add
test
push
jmp
ret
inc
shr
pop
mov
inc
jecxz
lock
nop
jle
push
inc
inc
stc
cmps
les
ss
xchg
retf
jns
int
dec
dec
pop
sti
push
mov
or
fwait
sub
addr16
and
leave
jmp
outs
out
(bad)
cld
mov
aad
test
mov
stos
jle
lock
std
repz
mov
(bad)
fistp
jmp
cmps
aaa
loopne
mov
mov
add
push
sahf
aad
movs
lahf
scas
fistp
push
adc
bound
push
cld
sar
mov
mov
xchg
pop
stos
js
pusha
sub
fucomi
push
imul
pop
push
dec
scas
cmp
or
mov
mov
ins
ja
pop
stc
nop
cmp
mov
call
bound
mov
jmp
push
or
push
jmp
and
fldcw
data16
stos
not
sti
movs
stos
cmps
push
xchg
(bad)
mov
mov
cs
sub
stc
imul
movs
daa
outs
aad
sub
xchg
sbb
cmp
retf
pop
or
mul
sub
rol
xor
call
or
mov
xor
push
retf
mov
lods
retf
ja
out
pusha
push
or
cmp
aaa
mov
pop
js
in
fild
nop
out
scas
popa
lea
mov
add
imul
push
sub
pop
repnz
adc
or
outs
ins
(bad)
push
rcl
test
movs
sub
(bad)
iret
fs
cwde
pusha
hlt
in
xchg
push
add
jge
fidiv
sub
pop
test
pop
mov
mov
add
adc
jmpw
(bad)
xchg
fnstenv
mov
xchg
fadd
push
test
scas
cmps
nop
xor
sbb
out
test
es
in
stc
scas
cld
(bad)
scas
dec
sbb
fild
shl
mov
cmps
and
loopne
inc
inc
popf
cmp
imul
fxch
adc
sar
add
mov
push
(bad)
sub
cwde
add
cmps
mov
jne
inc
pop
adc
rcr
in
push
rol
jmp
sbb
jecxz
ja
mov
xchg
in
movs
cwde
cmps
xchg
pusha
pop
push
out
or
sahf
cmps
adc
inc
sbb
icebp
mov
xor
cld
xchg
jb
ins
xchg
push
sub
pop
rol
jg
in
into
mov
into
out
cmp
cld
jecxz
jb
movs
into
jge
mov
xlat
fwait
sub
mov
pop
hlt
add
sub
fs
test
pop
mov
jmp
lds
cdq
out
xlat
dec
mov
jmp
shr
inc
es
jb
or
outs
mov
jmp
hlt
lahf
push
adc
xchg
icebp
mov
(bad)
jne
cmc
test
sub
cs
inc
cmps
movs
movs
repz
push
add
imul
aad
in
mov
jbe
dec
jmp
out
cmp
mov
adc
in
jnp
inc
inc
imul
sar
jns
aas
in
xor
loopne
cmps
or
sub
test
adc
xchg
mov
lahf
dec
pushf
or
nop
mov
pushf
in
lahf
mov
push
push
xor
mov
pop
ss
std
mov
aaa
sar
lods
inc
adc
ss
xor
and
dec
sub
inc
jne
add
xor
stos
in
add
xchg
pop
xchg
fcomp
ret
leave
je
(bad)
(bad)
adc
xchg
test
imul
and
and
lahf
dec
out
mov
fcom
add
or
jae
sub
(bad)
cmp
(bad)
cli
dec
add
cmp
inc
stos
and
fimul
out
test
stos
outs
fadd
sub
inc
cmp
aad
sbb
and
mov
scas
and
int
popa
push
aas
bound
inc
mov
mov
stc
sbb
sub
inc
cmp
mov
jmp
sub
dec
add
or
mov
mov
jl
in
std
pop
and
xor
cld
xor
mov
mov
clc
xchg
or
fist
add
mov
and
mov
or
or
mov
scas
mov
jmp
mov
neg
push
daa
lods
in
sbb
js
data16
push
jl
pop
enter
fist
jge
xchg
mov
call
loopne
jb
or
into
cmp
lahf
shl
outs
sbb
sub
pop
ror
dec
ins
inc
sbb
push
es
push
arpl
lds
int
clc
cld
cmp
test
inc
mov
out
adc
arpl
ror
mov
jae
dec
imul
xlat
dec
or
or
xchg
bound
int3
xor
pop
aaa
adc
pusha
leave
push
push
dec
fwait
mov
dec
inc
ins
mov
cmp
mov
push
adc
adc
jbe
sbb
rcr
pop
xor
retf
cmps
aad
pop
ja
jg
adc
adc
jp
dec
xchg
mov
ss
cmps
(bad)
mov
cmp
out
dec
imul
shr
pop
(bad)
std
inc
imul
xchg
add
jbe
loope
add
(bad)
retf
lods
xchg
lock
add
rcl
add
sub
clc
xchg
jmp
lea
dec
mov
adc
mov
inc
aas
or
popf
pop
inc
fs
lods
dec
inc
pop
lea
jecxz
lods
adc
enter
pop
cmps
sbb
inc
popa
scas
sbb
leave
inc
cmps
push
loop
ja
in
cs
adc
dec
xchg
in
inc
stc
dec
(bad)
sahf
xlat
adc
test
stos
fidiv
sbb
xchg
sbb
mov
sbb
rol
mov
sub
inc
mov
pop
xchg
xor
xchg
mov
inc
cld
push
and
daa
jg
inc
xor
or
pop
dec
pop
mov
je
mov
in
pop
sbb
iret
repnz
adc
xchg
test
or
dec
das
mov
xchg
mov
xor
(bad)
out
lahf
push
enter
pushf
fimul
jmp
mov
jg
sub
loop
pusha
cli
sar
pop
jg
cld
sub
ret
xchg
or
and
loopne
idiv
push
retf
dec
xor
dec
xor
ficom
lds
sub
popf
jge
mov
jge
les
add
ja
mov
ins
in
mov
div
jno
jno
pop
es
mov
xor
sub
push
xor
mov
cwde
push
in
ds
jno
out
push
push
stc
xor
adc
and
xchg
rcl
sub
int3
bound
scas
test
xchg
jmp
adc
pop
push
gs
jae
sar
and
mov
call
das
in
ja
add
add
in
test
loope
dec
retf
or
mov
dec
addr16
daa
pop
shr
stos
je
mov
jno
xchg
test
push
xchg
mov
sub
xchg
movs
icebp
jle
pop
xchg
sbb
sbb
push
(bad)
mov
lods
mov
nop
add
ja
fcmove
repz
lods
cmp
mov
sbb
or
sbb
cwde
test
pop
push
and
mov
xor
xor
scas
iret
retf
mov
and
mov
stos
iret
into
and
popa
cwde
clc
jle
adc
into
add
add
and
ret
mov
fsubr
daa
jne
outs
jb
sub
arpl
cmc
sbb
push
mov
rol
or
cmc
and
daa
cmp
int3
mov
dec
shr
fcmovnb
retf
lods
popa
xor
xchg
popa
inc
and
dec
and
adc
mov
mov
or
shl
in
popa
pop
mov
inc
sbb
imul
rcl
push
push
jg
(bad)
sbb
iret
push
xor
jmp
repz
adc
fwait
mov
or
jle
pop
je
int
xor
gs
icebp
ss
sub
or
pop
mov
push
and
cdq
into
sbb
and
sub
jmp
adc
adc
ror
xchg
jb
ret
leave
jbe
and
lods
push
ror
mov
(bad)
lods
mov
xchg
mov
push
aad
mov
enter
aas
movhps
or
(bad)
jmp
jno
xchg
shl
scas
stos
sti
cs
xor
dec
fwait
das
aad
sahf
and
(bad)
mov
sbb
imul
scas
mov
mov
imul
sub
arpl
and
bound
mov
mov
dec
or
fadd
dec
test
int
div
jg
cli
push
push
mov
call
xlat
int
data16
sbb
(bad)
push
add
ret
cmc
sub
lock
jns
cld
cmp
in
arpl
stos
mov
call
cmp
xchg
xor
out
ja
fcomp
push
(bad)
cmc
jae
scas
ret
cdq
adc
in
mov
push
adc
call
idiv
cld
pop
xchg
push
mov
pop
outs
ret
ss
and
jge
dec
aad
add
fnstcw
and
sar
cmp
inc
fs
loope
xor
out
xor
push
adc
gs
jge
adc
movs
test
push
loopne
mov
idiv
push
cmc
aad
jns
sub
push
int
jle
shl
sub
dec
sub
cld
inc
das
mov
sbb
sub
mov
pop
fld
in
mov
add
jecxz
inc
add
pop
sbb
(bad)
mov
ss
pop
(bad)
int
lods
push
gs
pusha
scas
leave
fadd
bound
(bad)
jecxz
mov
push
dec
xchg
std
sub
lea
(bad)
repz
adc
ret
movs
xor
mov
test
in
push
jmp
xchg
push
cmp
and
pop
dec
add
lahf
movs
mov
jmp
xor
dec
or
adc
jmp
ja
repnz
push
or
retf
mov
jl
jge
test
mov
push
mov
into
mov
mov
adc
inc
sbb
in
sti
js
mov
into
sbb
dec
mov
and
ds
xchg
(bad)
dec
push
or
cmp
fwait
ds
cmp
int3
stos
imul
push
sbb
outs
clc
or
adc
push
retf
lock
icebp
ins
inc
pop
lock
imul
fldcw
add
dec
mov
and
int3
inc
or
out
lock
in
enter
sbb
mov
fidiv
add
into
add
sbb
out
test
test
ja
add
xchg
jecxz
je
adc
push
fild
ins
push
repz
ds
push
sbb
push
adc
pop
and
sar
js
add
or
mov
pop
rol
lds
or
pop
aam
out
retf
(bad)
in
dec
cmps
sti
mov
sbb
adc
cmps
adc
repnz
cmc
arpl
nop
iret
rcr
sub
jae
cmp
push
gs
sbb
or
icebp
fldcw
fdiv
repnz
cmp
cmp
sahf
test
pop
xchg
jge
xor
dec
dec
cs
mov
sbb
sub
call
lahf
jbe
test
mov
xor
sar
xchg
psllq
inc
sbb
icebp
cld
fldenv
xlat
mov
mov
bnd
pusha
imul
int
inc
test
and
int
cs
pop
call
xchg
push
cmp
test
adc
jne
inc
adc
sbb
inc
jb
mov
xchg
idiv
push
add
cwde
ret
push
pop
push
add
ret
add
push
loope
lock
jp
mov
(bad)
ficom
sub
inc
add
sbb
pop
loope
cli
cmc
inc
outs
inc
xor
dec
push
sahf
xor
std
jnp
fldenv
ret
lods
push
popf
mov
bound
add
in
jno
retf
lahf
inc
retf
jmp
push
stos
push
call
popf
mov
ror
mov
jne
(bad)
rcr
pop
jge
mov
or
inc
fimul
sbb
fcmovu
adc
hlt
(bad)
pop
stos
mov
fwait
dec
xchg
cmp
mov
inc
sbb
and
cmp
arpl
scas
jle
popa
ret
sub
lds
push
adc
or
(bad)
test
jbe
jp
pop
jmp
dec
cwde
push
sti
mov
not
jmp
xchg
aam
js
mov
xchg
pop
sar
daa
mov
out
ss
scas
test
mov
sar
push
xchg
adc
call
data16
mov
neg
adc
or
pushf
test
ja
and
ret
ss
dec
call
out
dec
mov
lea
and
ja
or
aam
out
jle
mov
mov
scas
push
fild
pop
and
loope
popa
sub
jns
sar
xchg
xchg
out
fnsave
mov
fucom
lds
cs
aaa
out
xlat
mov
fist
add
int
stos
std
jo
inc
punpckldq
sub
xchg
(bad)
jnp
and
imul
xor
ret
pop
scas
adc
and
sub
inc
fwait
cld
jns
cld
cwde
pop
xchg
pop
in
mov
jo
add
or
sbb
fstp
jecxz
shl
aaa
mov
cmp
mov
dec
lahf
ror
xor
int
adc
adc
xor
das
mov
test
aaa
mov
adc
jbe
js
es
jge
xchg
mov
stos
push
dec
repnz
adc
sti
jns
inc
push
jg
aam
pusha
test
sti
loope
pushw
xchg
daa
popa
cs
fldenv
test
or
jmp
push
dec
jl
movs
inc
pusha
loop
sub
xlat
in
cmp
xor
sub
jecxz
dec
push
dec
push
inc
and
mov
and
imul
sbb
movd
out
or
mov
int3
out
jecxz
pop
or
sub
mov
ds
sbb
ins
enter
mov
mov
outs
cmp
mov
xchg
fwait
aam
push
inc
(bad)
imul
ins
push
sbb
rcl
jne
adc
aad
sub
cli
imul
add
std
int3
mov
sub
dec
lods
(bad)
mov
bound
fimul
mov
mov
cmp
add
mov
test
scas
mov
pop
fwait
cmp
aas
pop
dec
adc
sub
stos
lods
in
aaa
push
and
(bad)
pop
sbb
add
aaa
arpl
fadd
jmp
imul
mov
inc
cmp
sar
xchg
movs
pop
xchg
test
mov
jmp
jmp
jae
es
adc
sub
mov
push
cmc
mov
scas
in
cli
std
push
arpl
(bad)
mov
push
pop
cmps
dec
aas
jo
out
mov
(bad)
cli
sbb
test
and
cmps
in
pop
les
cmps
jae
sub
mov
xor
xlat
sbb
mov
xchg
add
jnp
bound
jmp
dec
scas
mov
sbb
call
imul
jmp
cmps
mov
imul
(bad)
cmp
fidiv
push
stos
xor
popa
xchg
pop
bound
adc
sub
movs
add
daa
cmp
out
sbb
rcr
mov
rol
push
shr
out
ret
xor
sbb
rol
pop
jno
sub
std
into
xchg
in
imul
push
adc
xor
adc
popa
cld
mov
mov
rcr
push
aad
jg
pop
xchg
mov
mov
mov
pop
inc
test
adc
push
out
gs
add
mov
aam
push
daa
mov
inc
adc
cld
or
adc
pop
sbb
fxam
fcom
or
mov
std
fcomp
test
mov
cmp
daa
and
adc
jg
js
pop
adc
push
stc
pop
cmc
jp
neg
cmp
les
popf
xor
or
and
lock
jbe
jmp
addr16
imul
mov
push
inc
jge
sub
cmp
int
mov
and
pusha
xlat
int3
sbb
pop
mov
jb
scas
movs
(bad)
fbld
jne
cdq
rcr
jle
movs
loope
pop
lds
lock
out
outs
(bad)
sbb
imul
aaa
cmps
pop
xchg
sbb
and
jae
ins
xchg
sbb
mov
lea
mov
jo
repz
fmul
not
test
enter
and
jns
test
loope
xor
retf
pushf
xchg
out
sub
cdq
(bad)
mov
jb
cmps
xlat
and
or
jl
mov
cmc
(bad)
mov
mov
dec
sbb
dec
pushf
ins
mov
cdq
add
jl
ror
out
scas
(bad)
cld
jp
or
or
in
sbb
bnd
push
rcl
or
xchg
nop
and
adc
add
jp
jno
(bad)
mov
inc
sbb
call
pop
pop
jp
inc
pushf
mov
adc
mul
pop
sbb
rcr
cli
enter
(bad)
or
mov
mov
pop
mov
fld1
loop
loope
cmp
lods
mov
cmp
ret
mov
xchg
int
push
nop
mov
mov
outs
mov
lock
add
sub
cmc
jae
or
mov
xor
xor
dec
aas
icebp
pop
sbb
sbb
lods
and
jae
push
xchg
dec
into
gs
aam
lahf
loop
mov
sbb
or
retf
mov
adc
mov
in
push
call
int3
add
mov
xlat
xchg
pop
or
cwde
and
push
cli
adc
cmp
xor
daa
jne
mov
in
xchg
sahf
sbb
clc
xor
xchg
cli
sub
out
call
(bad)
and
mov
outs
push
add
adc
inc
sub
ret
mov
outs
imul
xchg
xchg
arpl
pusha
aas
(bad)
cmp
outs
push
push
dec
ror
icebp
shr
aas
or
ss
in
lods
xchg
data16
js
retf
mov
aas
xor
mov
jb
sub
pop
or
nop
lock
(bad)
lods
push
sbb
mov
retf
test
popf
test
hlt
adc
mov
into
idiv
nop
lahf
cmp
retf
adc
fdivr
leave
mov
cmc
mov
rcl
lock
mov
pop
sub
fimul
pop
sahf
movs
pop
inc
inc
je
iret
outs
pusha
jmp
imul
mov
jo
and
std
inc
mov
adc
mov
sbb
fstp
adc
xchg
sub
ins
mov
out
iret
fs
add
xchg
sar
popa
push
js
fdiv
loope
add
repz
ins
lds
or
aas
jmp
(bad)
cmp
push
xchg
adc
adc
sbb
jne
push
mov
sub
push
adc
clc
push
cmp
pop
push
je
mov
xor
outs
mov
add
das
jbe
adc
mov
mov
mov
push
pop
mov
mov
test
(bad)
es
daa
pop
pushf
rcl
ins
adc
icebp
jmp
jae
jbe
fcom
xor
cmp
and
fimul
push
gs
icebp
sbb
xchg
mov
sbb
jp
adc
pop
out
mov
jb
add
int
jnp
arpl
sbb
lods
fld
mov
sbb
test
rol
jp
popf
in
pop
xchg
push
jp
or
in
into
js
mov
aad
call
int3
xchg
ror
push
int
mov
inc
jmp
dec
aad
cmc
or
push
lds
call
sub
adc
inc
cwde
cdq
leave
inc
or
add
dec
push
ins
enter
adc
fisubr
push
mov
aam
xchg
aaa
pop
mov
mov
imul
xchg
jb
sub
adc
sub
add
jb
adc
xor
push
out
inc
adc
aam
fcomp
test
int3
cmps
jb
fwait
and
adc
xchg
cs
jg
cmp
inc
sub
xor
push
inc
jbe
adc
and
stos
pusha
test
mov
mov
aad
(bad)
addr16
rol
inc
shr
jp
ror
xlat
and
mov
lea
dec
inc
retf
jb
pop
scas
retf
mov
add
push
icebp
pop
jmp
mov
or
xor
mov
test
xchg
test
lock
xchg
mov
xlat
gs
fisttp
sti
cmc
mov
fiadd
sub
out
jne
sub
sbb
inc
xchg
mov
push
jmp
jl
mov
or
sub
fist
addr16
mov
stos
and
push
test
stos
cld
xchg
mov
xchg
pop
inc
jae
or
sbb
js
loope
shr
lahf
mov
hlt
xchg
inc
imul
jne
pop
add
mov
aaa
pop
push
and
ds
call
stos
cmp
dec
cmp
jmp
in
(bad)
mov
pop
sub
scas
push
cmp
outs
pusha
adc
xchg
mov
cdq
push
adc
cmc
outs
ss
and
cmp
cmps
push
and
pand
inc
aaa
sub
sar
sti
lea
jp
sub
jmp
jns
mov
fisttp
dec
mov
int3
cmp
sbb
push
rol
jmp
aas
lahf
xchg
test
jne
jo
push
repz
push
sbb
mov
iret
pusha
outs
dec
cmps
and
inc
or
sbb
push
je
cmp
(bad)
mov
fmul
adc
mov
mov
out
xchg
sbb
xor
dec
in
sub
push
xor
test
std
iret
pushf
xlat
push
sub
cmp
cmp
mov
cmp
mov
add
jmp
push
adc
sti
adc
sahf
or
lods
cld
push
fs
mov
xlat
pop
cmp
adc
iretw
xchg
loop
mov
jmp
fst
inc
mov
ins
nop
push
jl
rol
sbb
jmp
mov
ficomp
dec
sub
lea
or
out
add
push
rcl
repz
push
retf
addr16
pop
jne
push
div
les
into
pop
sbb
ja
push
xchg
(bad)
test
xor
push
jno
dec
into
jmp
sub
inc
mov
mov
ror
fdiv
sbb
cli
push
lods
xor
cld
sub
(bad)
outs
cld
ret
push
mov
js
test
stos
mov
(bad)
pop
push
lock
sbb
lea
(bad)
test
adc
jecxz
adc
sub
mov
fsub
nop
fnsave
cmps
jns
sahf
mov
adc
pop
lock
push
adc
fstp
fpatan
jmp
cmps
mov
imul
or
dec
pushf
lds
jno
lods
outs
int3
sbb
in
pop
lods
das
sub
inc
inc
in
jns
loope
out
cmp
pop
int
jp
loop
ret
adc
inc
adc
test
out
ret
cmp
mov
inc
jl
cmp
loop
mov
push
mov
mov
(bad)
fmul
fmul
ja
cwde
pop
js
mov
xchg
adc
cmps
repz
out
shl
fsub
adc
sti
iret
mov
sar
rol
sub
push
std
sbb
mov
dec
pop
jnp
test
sub
addr16
pop
cdq
or
out
adc
jmp
aaa
and
dec
sub
mov
test
popa
shl
loope
das
daa
ins
cmc
cwde
les
mov
shl
adc
retf
daa
and
dec
enter
pushf
cli
adc
test
cmps
adc
mov
xor
or
je
add
sahf
ret
xchg
loop
lea
mov
mov
and
jnp
les
mov
sub
mov
ja
outs
out
pop
pop
push
aad
in
daa
xlat
adc
pop
shr
fstp
or
mov
call
cmp
(bad)
jp
(bad)
je
mov
rol
xchg
stos
ss
xchg
dec
into
jno
into
mov
int3
xor
pushf
inc
cmp
add
mov
xchg
fistp
ficomp
test
xlat
lods
ds
or
fcmove
fbstp
mov
jbe
xor
push
sub
mov
cmc
inc
test
dec
cmp
sti
retf
fisubr
dec
cmp
pusha
out
push
dec
sbb
add
mov
mov
les
push
and
mov
je
fcmovnu
test
je
iret
into
cmps
repnz
add
test
dec
pop
mov
jb
xlat
lods
(bad)
inc
jae
fsubr
xor
shl
pusha
fwait
xchg
stc
stc
sbb
cmp
mov
cmps
retf
out
into
loop
push
mov
ins
mov
jle
sbb
mov
stos
in
jmp
lea
dec
ds
xchg
add
test
or
ret
data16
fwait
push
(bad)
pop
call
xchg
jmp
or
les
lods
outs
mov
mov
pop
mov
es
test
xchg
out
xor
fst
ficomp
test
fsubr
jno
jns
adc
pop
lods
fadd
inc
loop
jle
sub
xor
test
popf
add
xchg
popf
jno
neg
xchg
xor
sahf
dec
or
inc
es
pushf
sub
cmp
pop
jecxz
imul
adc
out
scas
and
shr
cmc
sub
imul
jo
add
pop
fs
fsub
adc
jl
sub
and
gs
mov
mov
movs
cwde
push
cmp
sbb
pop
adc
adc
cmp
adc
popf
mov
mov
in
fwait
add
push
cmc
push
in
jnp
(bad)
push
scas
ficomp
fist
movs
shr
sub
out
push
rcl
jno
ret
(bad)
fadd
dec
adc
icebp
or
movs
rol
fnsave
xor
cmp
fnstsw
fnstsw
push
cmp
push
inc
pop
into
lahf
movs
xchg
sahf
fwait
xor
mov
fisub
lahf
les
jg
adc
in
stc
repnz
push
retf
cmp
addr16
call
das
mov
push
or
mov
sub
mov
mov
fwait
je
push
cli
xchg
lock
(bad)
xor
aas
les
ret
rol
xchg
sbb
lea
mov
nop
fadd
dec
in
and
jne
add
jo
pop
out
cmps
and
xor
loop
scas
or
jne
iret
dec
push
mov
ror
jb
sub
aaa
outs
out
inc
rcl
push
in
loopne
outs
leave
adc
mov
jge
pop
dec
and
jl
mov
adc
imul
dec
jae
adc
sub
and
jno
fwait
icebp
cld
push
call
jmp
(bad)
movs
pop
addr16
cmp
sar
std
add
mov
adc
and
loopne
jb
mov
push
imul
sbb
mov
inc
outs
std
nop
or
and
ret
ret
dec
rcl
adc
inc
es
inc
(bad)
shl
idiv
xor
inc
aaa
pop
mov
rcl
sbb
(bad)
pop
or
sbb
dec
sbb
(bad)
dec
mov
mov
mov
scas
stc
iret
pop
mov
mov
push
cmp
movs
in
add
cdq
out
xchg
mov
call
pop
xchg
dec
xchg
test
xlat
pop
or
cmp
loop
sub
xor
xchg
inc
cmps
loopne
data16
dec
push
xor
xor
cwde
dec
jecxz
cwde
ds
outs
jmp
in
or
daa
icebp
push
icebp
std
mov
cmp
daa
pop
(bad)
retf
mov
adc
cmps
push
mov
in
test
mov
mov
jns
sbb
ret
push
inc
push
je
jmp
outs
inc
sub
xchg
cwde
int3
or
dec
jno
xor
jb
mov
sub
and
in
inc
push
ja
lock
push
mov
push
aaa
jmp
clc
sub
pop
cmp
mov
pop
push
dec
test
jnp
mov
mov
jmp
ja
out
jecxz
jbe
lods
ss
pop
(bad)
in
shr
addr16
ins
imul
mov
cmp
dec
sbb
or
cmps
cmps
mov
jecxz
mov
sbb
iret
cli
ins
pop
push
push
jp
iret
js
(bad)
(bad)
pop
ins
inc
push
mov
sbb
sub
ss
mov
popf
stos
jb
out
adc
popf
in
in
sub
and
cmc
retf
aad
stc
push
or
bound
std
jbe
pop
shl
(bad)
xchg
sbb
lods
cmps
ss
jae
mov
add
jmp
test
retf
repnz
inc
invd
cli
push
call
rcr
mov
pop
xchg
add
add
push
pop
lds
push
dec
pusha
sub
lahf
adc
mov
add
inc
dec
and
push
and
adc
cmp
dec
es
and
mov
pop
or
sbb
ins
das
or
aad
or
push
mov
xor
pop
and
movs
mov
mov
mov
loop
lahf
sbb
adc
adc
cmp
mov
and
retf
mov
cmp
lock
dec
inc
mov
shr
pop
cld
loope
add
pop
fwait
mov
adc
jp
std
mov
scas
cmps
data16
mov
pushf
aas
xchg
jg
fdiv
bound
xchg
mov
movs
sti
push
fisubr
ja
in
clc
ret
imul
adc
jecxz
sub
dec
jns
aas
ror
(bad)
sub
add
xchg
scas
ficomp
adc
retf
xor
imul
sbb
dec
imul
pop
jmp
popa
pop
(bad)
imul
and
fwait
add
cwde
adc
dec
add
jg
or
or
mov
pop
inc
loope
mov
mov
push
add
nop
mov
shl
imul
mov
add
cmp
adc
xchg
cmp
inc
dec
jbe
mov
aas
repnz
inc
inc
ret
ja
jl
js
jp
lods
jmp
mov
jg
cli
stc
clc
dec
retf
sbb
ja
fs
sub
ss
cmp
push
pop
test
ss
movs
(bad)
sub
mov
out
fsub
ja
(bad)
test
imul
sub
push
adc
fisttp
bswap
mov
pusha
sub
or
cmp
or
imul
js
or
loope
push
pop
cmc
mov
retf
xor
mov
addr16
test
ins
mov
scas
or
test
push
ret
add
cmp
retf
into
scas
fmulp
leave
pop
(bad)
test
xor
scas
ds
mov
push
push
imul
out
dec
(bad)
xor
stos
pop
sbb
adc
mov
mov
call
scas
cmp
fbld
mov
fisttp
xchg
cdq
dec
lods
mov
xchg
retf
adc
(bad)
cwde
imul
fcmovbe
jns
push
xchg
mov
cmc
xchg
inc
scas
push
imul
dec
inc
add
clc
adc
jp
mov
cwde
bound
sar
adc
jecxz
stos
xor
xchg
out
mov
(bad)
adc
cdq
(bad)
xchg
mov
jp
sbb
lods
cmp
push
rol
push
lods
mov
mov
sub
push
fbld
mov
mov
pop
imul
repnz
(bad)
cmp
mov
cmp
rcr
lods
cmp
cli
pop
sub
mov
mov
inc
call
xchg
test
pop
movs
push
pop
icebp
test
push
fst
cdq
push
xor
outs
adc
sub
mov
data16
jbe
and
add
adc
mov
ins
cld
test
dec
push
dec
fnstcw
xor
dec
fnsave
call
dec
mov
loope
and
inc
cmc
mov
mov
js
sub
and
leave
movs
jg
les
frstor
jl
sbb
mov
(bad)
jmp
xchg
fimul
pop
push
fidiv
cmps
popa
outs
sar
push
ffree
inc
out
cmp
add
adc
or
ss
push
sub
lods
xchg
adc
ret
or
pop
int
mov
outs
or
call
mov
dec
jo
or
push
test
inc
popa
mov
mov
cdq
ja
inc
daa
mov
dec
or
mov
inc
sti
sahf
jmp
jb
mov
mov
daa
dec
mov
idiv
dec
movs
and
in
in
cmp
cmp
loope
fdivr
jno
mov
adc
pushf
movs
fsubr
and
pushf
xlat
dec
outs
es
or
or
test
wbinvd
sar
inc
jb
jns
dec
inc
call
xchg
imul
cld
(bad)
xor
push
add
sub
push
xchg
loopne
jmp
(bad)
imul
(bad)
sub
daa
loop
pushf
and
imul
call
sbb
inc
adc
xor
jle
fcmovb
int3
mov
test
popf
lock
pop
movs
or
or
cmp
cmp
and
sub
push
sbb
loopne
push
enter
push
jecxz
popa
xor
sub
daa
outs
mov
int
jns
sbb
cmc
cmp
clc
or
je
pop
in
mov
int
(bad)
adc
xor
push
jbe
mov
cmps
jae
xchg
or
sar
dec
cmp
jbe
xor
repz
(bad)
ja
stos
aam
jbe
xor
mov
cmp
sar
mov
jl
sub
sahf
fadd
push
jp
push
and
mov
scas
out
shr
pop
inc
xor
or
fld
popa
cld
adc
ins
and
aad
xlat
mov
jb
jecxz
lea
ficom
cmps
je
inc
mov
test
or
pop
xor
(bad)
jo
in
jmp
pop
movs
xor
sbb
xor
and
jo
dec
or
adc
shl
xor
or
imul
data16
add
dec
loope
popf
ror
pop
es
dec
jmp
add
or
xchg
ds
sti
pop
aas
sub
sar
sar
call
mov
mov
imul
xchg
jle
aas
dec
int3
loope
cmp
lods
mov
jp
das
cmps
xor
enter
mov
jne
int3
add
push
mov
and
mov
sub
es
iret
xchg
loop
int3
enter
xlat
pusha
mov
js
and
mul
jmp
loop
add
ss
in
jmp
adc
out
mov
enter
xor
shl
dec
cld
addr16
test
sahf
jnp
inc
gs
jmp
xchg
bnd
add
sub
mov
ffree
pushf
jns
mov
and
lock
cli
cmc
jmp
and
pop
loopne
lods
pop
fnsave
jmp
(bad)
in
jno
mov
push
retf
pop
push
mov
add
iret
push
retf
sbb
adc
xchg
mov
or
ja
push
leave
xchg
push
sahf
cmp
mov
jp
jmp
cld
cmc
sub
(bad)
lds
icebp
sbb
inc
in
test
or
fcomp
setl
das
popa
sbb
out
neg
fstp
push
sti
lahf
pop
(bad)
ja
xor
sbb
sbb
mov
push
ds
or
push
push
rcr
addr16
cmp
outs
popf
fisubr
pop
dec
adc
aam
mov
push
lods
hlt
(bad)
jbe
test
pop
push
fnstsw
jns
xor
div
repnz
sub
pusha
jne
outs
inc
dec
pop
test
imul
aad
cmp
(bad)
cli
neg
fsubrp
push
cmp
pop
outs
sbb
movs
popf
cdq
dec
ret
jb
mov
cli
call
int3
dec
dec
adc
into
scas
pop
adc
out
cs
jmp
or
mov
retf
mov
push
bound
stc
push
push
pop
jns
or
pushf
mov
popw
ficom
ins
pop
jmp
loopne
mov
ret
sti
loope
fwait
rcr
rol
jp
pop
pop
push
cmp
jle
adc
jl
(bad)
push
repz
ret
xor
push
mov
pop
popf
ret
cs
fs
popa
jecxz
xor
bound
ja
adc
add
outs
dec
mov
and
or
shl
inc
mov
clc
or
scas
in
push
jns
adc
push
test
(bad)
sbb
mov
rol
or
sahf
mov
rcl
cwde
xchg
cdq
sub
movs
jno
loop
mov
push
ror
mov
pop
mov
sbb
dec
retf
cwde
into
test
and
xchg
aad
adc
outs
and
stos
sar
fcmove
push
dec
aad
and
sar
test
lods
ret
sti
aam
push
jbe
inc
iret
pop
cmp
xor
mov
inc
outs
repnz
pushf
fcomp
pusha
cmp
pop
xchg
cmp
pop
inc
sub
loope
pusha
pop
ja
sbb
mov
jnp
or
repnz
sub
addr16
out
jge
test
and
scas
push
add
in
not
add
stc
mov
popf
aas
xor
jge
add
popa
inc
leave
dec
popa
sbb
jb
lods
and
fimul
int3
mov
adc
fs
cmps
or
cmp
push
cld
push
scas
inc
mov
out
jecxz
sub
jns
cli
adc
movq
hlt
sbb
aas
add
aam
dec
cmps
test
cmp
aaa
xchg
mov
sbb
ss
(bad)
fs
movs
mov
ins
dec
xor
shr
mov
outs
add
pop
addr16
sub
ror
add
loopne
mov
jmp
les
imul
jae
xor
xor
sahf
push
jp
(bad)
dec
jnp
test
sub
out
cmp
sbb
in
mov
cmp
dec
adc
in
sbb
fist
les
lea
fsubr
(bad)
fcmove
in
push
xchg
in
sar
repz
or
and
jle
xchg
mov
aas
in
in
call
add
mov
dec
cli
cmp
mov
add
xor
repz
inc
sbb
push
popa
mov
add
inc
aaa
mov
adc
mov
pushf
icebp
out
mov
imul
dec
popf
or
cs
pop
fdivr
ins
sbb
out
test
sar
mov
jecxz
dec
(bad)
sahf
in
inc
mov
sbb
nop
xor
into
xor
shl
sbb
ret
mov
adc
xlat
icebp
fwait
arpl
gs
jl
jg
jl
or
push
lea
mov
dec
movs
xor
mov
add
push
mov
retf
clc
sar
mov
jmp
test
mov
arpl
push
ss
push
pushf
ret
jo
dec
cmp
mov
sub
cs
retf
mov
or
inc
mov
rcl
test
ror
scas
xchg
dec
jmp
sahf
adc
sbb
add
out
mov
mov
sbb
retf
lea
push
lock
push
push
fiadd
sar
and
cmp
sti
dec
das
dec
xchg
in
lahf
fidivr
bound
mov
xlat
add
xor
sub
or
pushf
pop
inc
fisubr
(bad)
push
inc
test
ret
jle
aaa
sub
jg
pushf
inc
push
es
out
cmp
test
pop
sbb
fstp
and
pushf
test
jne
cli
out
pop
add
xchg
and
pop
jb
sbb
xchg
dec
stc
gs
lods
js
pop
ja
and
mov
pop
ins
in
dec
or
pushf
pop
shl
sub
movs
push
out
mov
add
inc
ds
add
mov
push
push
aam
std
pop
sub
add
scas
dec
cmp
or
pop
mov
or
or
jo
mov
sbb
sbb
cmp
cmps
cmp
xchg
adc
jno
dec
jge
jo
mov
rcr
xchg
and
nop
mov
jecxz
pop
mov
test
mov
xchg
xor
xor
dec
leave
xor
imul
xchg
aas
aaa
(bad)
mov
dec
(bad)
in
aam
or
sahf
push
mov
(bad)
dec
sar
fs
movs
iret
jb
daa
push
test
(bad)
adc
fsubp
addr16
mov
mov
or
jle
jns
sbb
repz
vpcmpgtb
mov
and
js
es
leave
pop
xor
call
test
shl
add
add
push
fdivp
mov
cli
pop
arpl
outs
nop
pop
cmc
dec
aaa
into
jle
shl
ret
cmp
mov
cmps
and
jmp
int
push
addr16
out
inc
(bad)
xchg
pop
lods
adc
xchg
dec
inc
and
xor
cmps
xchg
aam
aas
test
adc
rol
fadd
lahf
dec
dec
sbb
sar
adc
pop
out
ds
jmp
jne
adc
nop
in
ins
dec
mov
jo
jecxz
or
sub
aaa
push
bnd
mov
or
push
cmp
imul
cwde
mov
inc
clc
cdq
mov
fs
adc
pop
mov
iret
pop
loope
xor
pop
mov
sub
fiadd
retf
test
scas
dec
jb
mov
jnp
mov
ds
xchg
jge
dec
sbb
mov
inc
add
cmp
gs
dec
rol
movs
ins
lods
out
dec
or
or
push
inc
xchg
jae
test
rcr
rcr
xor
inc
xchg
adc
arpl
xchg
and
clc
sti
daa
pop
ja
and
pop
xchg
adc
and
rcr
movs
mov
dec
aas
jne
cmp
imul
adc
jmp
and
icebp
das
fsub
lds
pop
es
retw
loope
xchg
adc
outs
(bad)
jmp
sub
jmp
enter
mov
pop
in
cs
lea
inc
sub
and
cmp
cmp
test
popf
inc
sti
inc
sub
aaa
out
or
mov
dec
(bad)
mov
jbe
push
lahf
jae
jg
mov
ins
sbb
or
pushf
sub
pop
retf
and
jmp
push
mov
aas
in
fdivr
sbb
jmp
aad
and
inc
mov
in
cmps
xchg
and
xchg
cmps
dec
add
jbe
sub
xchg
mov
mov
pushf
pop
std
stc
dec
push
lock
sbb
push
sub
or
sub
or
inc
jno
test
cmp
adc
sub
rol
mov
sbb
xchg
pop
sub
adc
mov
add
fadd
add
(bad)
(bad)
(bad)
stos
or
les
push
pop
dec
mov
cmp
xchg
jmp
loopne
dec
repnz
xor
pusha
dec
ins
aas
test
push
xor
shr
mov
jge
lock
pop
or
rcl
mov
cs
and
test
xor
js
mov
xchg
(bad)
pushf
ret
mov
sbb
repz
(bad)
sub
xchg
push
mov
cmp
outs
arpl
xchg
pop
loope
inc
adc
fdivrp
scas
int3
xor
les
push
inc
mov
mov
retf
jmp
sub
outs
cs
xor
mov
ins
sub
daa
aaa
adc
cmp
cmps
in
push
inc
cmps
pop
add
push
test
inc
pop
mov
inc
xchg
je
dec
jno
imul
mov
ds
sbb
or
fisubr
dec
(bad)
push
lods
(bad)
jns
add
fdivr
push
mov
mov
fimul
loop
mov
pop
jae
out
sti
nop
lock
cmp
mov
jns
aam
daa
xor
mov
pop
pop
sar
xor
loope
sar
mov
xor
adc
mov
daa
xchg
arpl
scas
mov
lods
ins
mov
sbb
adc
or
popa
mov
retf
shl
pop
sbb
mov
out
call
scas
inc
or
xchg
sub
jbe
mov
jmp
xchg
sbb
jp
xchg
push
bound
cmp
icebp
nop
sbb
popa
ja
adc
(bad)
(bad)
sub
mov
retf
sub
in
lods
in
add
push
outs
in
ins
mov
push
jns
jo
call
stos
adc
loope
mov
pop
adc
cmp
dec
pop
xor
repnz
sub
(bad)
jae
stos
fcomp
jl
xchg
jg
xor
outs
outs
daa
cld
xor
or
xchg
cld
adc
dec
mov
add
aad
clc
fs
imul
pop
or
mov
and
dec
sub
mov
xor
out
jno
xchg
mov
xor
fcmovu
jg
call
out
jmp
and
jmp
jmp
push
loope
pushf
(bad)
xor
pop
mov
stos
xchg
pop
jb
mov
dec
imul
inc
int
lahf
mov
inc
mov
test
scas
push
push
cli
fisubr
cmp
stos
dec
add
(bad)
repnz
loop
(bad)
out
mov
xchg
mov
push
test
arpl
pop
mov
mov
mov
add
test
xor
imul
push
jns
leave
sub
and
cmp
push
xchg
mov
int
js
push
ror
shl
mov
jae
mov
daa
ja
xor
jp
cwde
cmp
rol
cmp
(bad)
pop
adc
dec
mov
cmp
sar
popa
sub
mov
mov
repz
pop
ret
ins
fs
fwait
test
jg
adc
mov
add
dec
add
popa
add
xor
in
sub
fstp
dec
add
mov
jmp
imul
popf
ja
adc
xchg
sub
xor
xchg
dec
dec
add
add
sbb
push
sub
and
xor
fsubr
in
dec
stc
pop
addr16
sbb
enter
js
test
jg
cmp
gs
aas
call
cwde
push
or
call
fld
push
out
mov
add
sbb
and
pop
pop
in
adc
ficom
pop
sbb
xchg
arpl
mov
frstor
mov
in
dec
cmp
cmp
jecxz
iret
stc
call
loopne
out
mov
lds
sti
outs
push
jbe
mov
adc
adc
mov
dec
cwde
ins
inc
sar
sub
sbb
xchg
dec
jmp
jg
jge
rcl
jb
sar
jmp
lock
push
xchg
lods
xor
dec
jno
out
pushf
call
xchg
xchg
sub
sub
imul
cmp
inc
mov
cmp
stos
or
mov
retf
dec
(bad)
jg
jp
imul
sbb
xor
push
push
stos
leave
adc
aas
mov
aas
pop
adc
jne
fwait
test
je
loop
xchg
inc
jns
dec
mov
xor
(bad)
ret
sub
nop
xchg
jle
adc
xor
nop
cmp
cmp
mov
pusha
cmp
sbb
inc
test
mov
sbb
loope
fcomi
aas
sbb
sar
or
push
in
mov
popf
inc
stc
daa
mov
xor
sub
or
std
mov
aam
cli
cmp
ins
pop
mov
cmp
(bad)
lods
(bad)
pushf
inc
sar
test
push
in
adc
sbb
icebp
jnp
in
xchg
retf
fbld
xor
mov
sub
enter
jmp
scas
repnz
cmp
adc
mov
push
iret
mov
inc
mov
jecxz
sahf
aam
bound
sti
and
xor
sbb
inc
fnsave
cmp
or
iret
clc
xchg
xor
(bad)
sub
push
es
sbb
fdivr
test
repnz
mov
and
mov
lods
(bad)
mov
jo
pop
sahf
jo
push
arpl
jae
aas
ret
jo
data16
xor
ss
mov
repnz
popf
leave
imul
adc
mov
fwait
inc
jo
jge
inc
test
add
dec
cdq
mov
out
bound
es
mov
add
sahf
(bad)
out
test
and
push
imul
jmp
std
jne
pop
sbb
dec
push
pop
rol
xchg
lods
enter
push
push
in
push
inc
hlt
dec
pop
adc
mov
add
in
imul
stos
sbb
mov
mov
mov
and
loop
loope
and
dec
loopne
addr16
jle
pop
mov
(bad)
imul
inc
sub
pop
cdq
push
or
sti
std
push
call
sbb
fisub
add
imul
or
or
cmp
mov
stc
push
jo
cmp
mov
hlt
cmps
mov
push
shl
mov
dec
mov
retf
sbb
mov
push
mov
enter
cdq
lods
stc
push
jbe
inc
mov
int
xor
dec
pop
sahf
xchg
dec
adc
sbb
imul
mov
bound
cmp
adc
jl
mov
sub
mov
sbb
dec
pop
and
or
jo
lock
add
je
add
xchg
imul
cmp
sub
dec
jns
xchg
test
pop
jmp
and
add
pop
xchg
cld
inc
add
jno
shl
fsub
adc
dec
in
jmp
imul
nop
or
rol
inc
fiadd
pop
xchg
push
imul
xor
mov
test
push
sbb
sub
pop
fld
shl
mov
mov
xor
mov
jmp
mov
push
int3
fnstcw
push
xchg
bound
xor
sub
inc
(bad)
call
jmp
push
mov
xlat
dec
not
mov
mov
mov
adc
xchg
pushf
sahf
aam
pop
adc
dec
and
mov
daa
add
js
sub
pop
ins
int
and
push
sub
(bad)
sbb
scas
pop
pop
mov
sub
shl
ins
retf
sub
xor
lea
xor
xchg
mov
mov
mov
push
out
mov
pop
xor
js
mov
sti
sbb
mov
sub
mov
xor
cmc
iret
pop
imul
fs
rcl
arpl
ds
scas
aas
jnp
repnz
movs
dec
xor
pushf
movs
and
xchg
mov
dec
dec
cmp
mov
inc
xor
or
(bad)
or
push
mov
inc
pop
mov
int3
scas
call
fdivr
rcl
ins
xor
and
in
fbld
(bad)
test
bound
adc
aas
popa
std
push
ss
and
mov
push
or
adc
retf
int
mov
sub
lods
in
out
div
js
sar
sub
xchg
jnp
adc
out
lods
shr
push
add
icebp
popf
lock
push
push
data16
inc
mov
aaa
cmp
xchg
pusha
lods
aad
scas
sti
xchg
in
pop
jl
movs
mov
jecxz
cmp
es
rol
lods
ds
sub
bound
xchg
inc
jo
pop
jmp
int3
xor
lahf
in
xor
bound
call
mov
clc
cmps
aam
inc
inc
aam
adc
sahf
fimul
retf
retf
sub
push
or
or
ds
stos
fbstp
xchg
retf
mov
add
jae
mov
(bad)
repnz
out
ret
in
and
fstp
mov
mov
mov
sub
push
add
pop
push
test
dec
in
cli
add
mov
or
repz
lds
cwde
xchg
test
fsub
add
mov
aam
inc
sar
daa
imul
adc
iret
retf
add
mov
pop
imul
cmp
test
jg
mov
jb
push
pop
and
shl
mov
dec
shl
jnp
mov
aad
jo
mov
and
sbb
inc
inc
inc
repnz
cmps
nop
or
pop
(bad)
fidiv
sub
mov
imul
sub
ja
loope
ret
fst
xchg
jo
aad
jnp
iret
jae
call
arpl
and
test
jb
cmc
and
in
xor
cmp
dec
push
jnp
ds
and
(bad)
or
add
retf
xchg
cmc
inc
loope
fs
enter
jmp
pop
shl
and
lods
pop
mov
clc
test
cmp
inc
or
in
dec
sar
xor
cmp
test
cli
cmp
imul
and
in
(bad)
aad
outs
imul
adc
cmp
mov
mov
cmp
jnp
test
lahf
ins
pop
xchg
ficom
xor
rcl
mov
dec
rcr
jmp
pusha
fisubr
repnz
(bad)
gs
pop
mov
pop
or
mov
jmp
repz
mov
adc
xchg
push
push
mov
and
fld
jge
add
imul
pushf
and
mov
sbb
xchg
fbstp
test
sub
cmp
rol
xchg
mov
cmp
sbb
pop
imul
jnp
jmp
dec
mov
test
imul
xor
xor
out
fnstcw
push
jnp
loope
inc
mov
fidiv
inc
out
mov
pop
(bad)
push
or
adc
mov
xchg
add
int3
retf
fs
add
push
pop
repnz
sub
mov
adc
cmp
sub
or
dec
add
mov
js
std
in
mov
and
adc
stos
lods
bound
cmp
or
cmps
dec
test
imul
gs
adc
mov
cmp
xchg
inc
ds
ror
ins
cmps
dec
rcr
cmp
jg
fbstp
pop
xor
mov
sbb
fnstsw
cmp
imul
in
test
je
std
je
mov
push
scas
adc
jmp
mov
mov
call
mov
or
push
fcmovnb
add
scas
mov
cli
sar
dec
aas
jbe
es
cmp
mov
mov
adc
add
push
jae
mov
outs
aaa
jmp
outs
call
push
inc
pop
add
out
js
mov
into
mov
js
adc
sbb
stos
or
(bad)
xrelease
cdq
ja
sub
push
std
mov
sub
aam
(bad)
sbb
push
xchg
lods
loopne
mov
popa
xchg
aam
cmp
or
retf
adc
sub
pop
jecxz
mov
shl
push
push
or
stc
in
lods
cmps
pushf
das
dec
push
jle
xchg
dec
cwde
outs
push
jmp
mov
xchg
stc
rol
xlat
in
xor
pop
inc
mov
(bad)
cmc
scas
push
frstor
fdivp
test
sub
lds
jbe
pop
sahf
adc
fild
cld
pop
int3
push
mov
sahf
push
(bad)
jmp
xor
(bad)
cmps
mov
stos
jno
pop
mov
xchg
push
into
ja
jno
jmp
nop
fist
sub
adc
xchg
and
sub
sbb
imul
mov
loop
xor
cli
mov
out
lock
xchg
rcr
(bad)
jmp
cs
lds
imul
jae
pop
jne
push
bound
add
dec
call
cs
sub
jecxz
or
cli
mov
sbb
xchg
jne
mov
jns
inc
out
addr16
popf
or
mov
sbb
pop
int3
xchg
dec
mov
out
leave
or
push
stos
mov
call
or
aam
pop
clc
imul
(bad)
test
xchg
or
sub
fcom
mov
cmps
xchg
pop
inc
push
in
in
es
lea
xlat
std
sbb
test
shl
out
mov
fcmovb
xchg
push
scas
add
push
inc
mov
xlat
jmp
pop
jmp
mov
ja
arpl
(bad)
cmp
loopne
inc
in
and
jno
out
jp
pop
call
push
out
pop
add
mov
pop
xor
cmc
lods
cmpxchg
sbb
scas
or
aam
nop
ret
jno
das
inc
loopne
arpl
and
std
dec
retf
cmp
cmps
(bad)
lea
fist
mov
stos
cmp
or
mov
call
mov
ja
(bad)
xchg
jbe
das
pusha
dec
stos
xchg
mov
and
ss
inc
cmp
das
ja
add
call
cmp
idiv
inc
shl
pop
fs
cdq
test
inc
in
lods
into
ret
pusha
mov
mov
or
and
inc
push
jns
popf
stos
nop
cmp
mov
and
sbb
pop
call
test
push
mov
leave
cmps
(bad)
mov
pop
sub
pop
cld
aad
(bad)
inc
imul
aam
inc
adc
into
hlt
adc
adc
and
ror
and
and
push
fmul
(bad)
xlat
or
add
inc
mov
xchg
adc
adc
fsub
pop
loope
ffreep
pushf
push
sahf
fcom
mov
pop
inc
ins
sbb
ret
fsubr
jnp
gs
sbb
ss
lds
loopne
dec
loope
ins
mov
clc
retf
inc
ror
dec
adc
cmps
lock
jecxz
loopne
inc
xor
or
push
cmp
(bad)
test
jmp
sbb
xchg
and
shl
lods
out
imul
push
xchg
rcr
fwait
jp
cli
(bad)
das
daa
mov
icebp
pop
jmp
mov
(bad)
gs
test
push
inc
imul
mov
mov
sub
ins
lock
pop
jmp
imul
and
jnp
js
pop
sub
inc
jno
mov
xchg
push
popf
imul
jns
adc
inc
or
mov
pop
nop
mov
mov
or
xchg
mov
jle
das
and
xor
adc
je
in
movs
add
and
or
dec
fidiv
inc
int
push
pop
dec
cmps
and
mov
pop
popa
jl
aaa
push
test
pop
mov
jnp
xchg
inc
daa
pop
sub
xor
lock
fld
and
pop
addr16
arpl
js
cmps
adc
(bad)
and
xchg
rol
cmps
pop
ds
sbb
(bad)
icebp
cmc
ja
aas
cmps
add
xor
dec
sbb
sub
stos
xchg
arpl
dec
add
enterw
jle
out
sbb
sub
push
and
mov
sbb
or
fdivr
retf
inc
das
mov
in
pop
sbb
inc
data16
fs
sub
pop
lahf
sub
test
cld
out
sbb
(bad)
ins
sbb
cmp
test
pop
fcmovu
or
and
dec
aad
dec
adc
cmp
sub
add
xchg
add
out
gs
sub
(bad)
pop
out
or
add
leave
loope
cs
inc
xchg
xor
mov
out
xor
adc
jecxz
xchg
out
sbb
xchg
inc
dec
cmps
scas
sub
mov
mov
jns
add
inc
mov
test
jmp
cmp
js
push
sub
aas
mov
daa
in
mov
dec
pop
sbb
inc
stc
jns
mov
adc
in
gs
test
fst
mov
sub
rcl
xor
push
pop
jno
jno
loop
pop
cli
je
push
or
push
out
sahf
inc
(bad)
push
or
pop
pop
out
sar
inc
ins
mov
mov
fadd
cmp
in
(bad)
pop
loopne
dec
push
fdivp
pop
ret
pop
rol
repnz
sahf
add
les
sbb
imul
scas
retf
sbb
jmp
xor
xlat
ds
jge
mov
push
push
cli
adc
adc
daa
rcl
rol
or
push
scas
mov
dec
sbb
dec
(bad)
movs
pop
mov
jae
ret
adc
outs
mov
popf
sub
pusha
dec
xchg
bound
mov
mov
push
mov
add
adc
(bad)
adc
cli
ins
enter
sub
inc
jmp
push
mov
adc
sti
lods
pop
or
xchg
xor
cdq
and
shl
test
jae
adc
loop
iret
mov
pop
rcl
push
dec
out
push
sub
and
cli
cmp
data16
jae
jge
mov
push
enter
and
mov
xor
push
jnp
stos
or
sub
out
bnd
(bad)
adc
pop
cmp
repz
push
dec
mov
fwait
mov
add
ja
fcom
jmp
daa
jecxz
fadd
inc
dec
sub
xchg
outs
xor
arpl
adc
mov
and
push
gs
test
aam
mov
fiadd
pushf
adc
mul
and
mov
or
imul
test
dec
cmp
jne
test
cwde
lahf
ja
test
xor
and
adc
in
data16
in
jge
sub
aas
stos
push
xlat
mov
lea
lods
cmp
test
stos
push
sub
dec
dec
cli
xor
jne
into
test
repnz
xchg
mov
mov
stc
sbb
push
mov
jne
stos
jp
movs
mov
loopne
data16
cmp
(bad)
cmp
imul
add
pop
push
or
jnp
sub
push
test
ja
stos
mov
aad
jb
in
call
rol
(bad)
js
mov
gs
sub
add
sbb
push
push
into
repz
sbb
sbb
mov
repnz
cmc
mov
pop
mov
fisub
rcl
hlt
sbb
aad
in
xchg
scas
fiadd
push
and
push
jmp
div
lods
push
jecxz
rcpps
cmp
inc
je
in
inc
cdq
cmp
leave
cld
sub
push
fsubr
cmp
sahf
mov
inc
fld
mov
jns
ins
xchg
stos
clc
pop
mov
sub
xor
mov
xchg
pop
and
or
adc
int
or
mov
xlat
adc
aam
rcr
sub
pop
ret
icebp
pop
add
dec
(bad)
jmp
add
xchg
into
cli
aam
dec
outs
jnp
inc
mov
sub
lahf
pop
ror
scas
cmp
lock
shl
xlat
add
loop
fsubrp
jne
dec
scas
add
mov
gs
jecxz
(bad)
pop
jno
mov
out
adc
cdq
je
push
sub
mov
arpl
jmp
nop
or
int
adc
lahf
push
sbb
xchg
in
popa
(bad)
pushf
mov
sub
jnp
xor
ret
inc
push
xchg
lods
or
jecxz
cmp
push
sub
adc
mov
repnz
cmc
and
sbb
mov
mov
(bad)
retf
push
sbb
icebp
shl
test
ror
repnz
dec
cmp
shl
dec
out
nop
fadd
jl
mov
lock
in
inc
inc
fmul
sub
mov
not
fsubp
mov
pop
aad
ret
mov
xor
inc
sbb
dec
mov
lds
stos
daa
jae
mov
(bad)
movs
add
add
(bad)
mov
inc
(bad)
or
mov
leave
adc
pop
data16
sub
pop
push
iret
push
les
leave
xor
lea
loop
jno
and
sub
jle
cmp
xor
jmp
sbb
jle
jmp
lods
jp
in
mov
mov
pop
aas
movs
dec
dec
sbb
(bad)
sub
jno
femms
sub
aaa
test
iret
retf
test
mov
fmulp
jae
dec
sbb
das
cmp
dec
push
add
adc
int3
or
test
mov
cld
push
and
jno
lods
adc
sub
cmps
daa
out
stc
call
cld
aam
fistp
cwde
push
pop
arpl
ins
xor
inc
bound
in
aas
out
nop
jp
xchg
or
xor
jmp
push
arpl
stos
rcl
xchg
push
(bad)
and
cmps
cmp
loope
sub
shl
jnp
pusha
dec
pop
adc
ja
lahf
jge
push
loope
imul
out
movs
push
push
push
jno
mov
jmp
cmp
push
pop
add
push
repnz
mov
stos
cld
push
stc
jge
cmp
mov
mov
out
mov
iret
mov
in
cld
popa
xchg
pop
fisttp
sub
out
jmp
xchg
mov
sbb
jae
shl
test
and
add
aam
cmp
xchg
inc
add
push
(bad)
mov
or
loopne
mov
dec
sbb
or
adc
icebp
ds
test
mov
movs
cmp
and
inc
std
stos
add
inc
or
sub
sub
retf
into
js
cdq
xor
add
or
fistp
fiadd
xor
sti
xchg
sbb
test
test
add
test
fcmovb
ins
clc
out
out
cmps
inc
jmp
xchg
fwait
cdq
sub
push
push
sbb
sahf
cmps
movs
iret
outs
call
or
lahf
mov
cmp
cmp
loopne
sub
jo
in
enter
(bad)
mov
(bad)
or
pop
nop
push
push
mov
ja
cmps
fisttp
and
push
xor
pop
sbb
mov
pusha
(bad)
(bad)
mov
cld
and
and
(bad)
data16
in
mov
retf
fidivr
les
xor
cmp
call
rcl
adc
jl
out
dec
ror
data16
xor
leave
pop
hlt
push
in
inc
fst
mov
ja
mov
nop
mov
cmc
lods
imul
dec
sub
mov
shl
mov
add
push
fild
add
push
mov
and
(bad)
(bad)
xor
lock
fild
gs
repz
shl
gs
out
ins
jne
push
pusha
cmps
lahf
adc
mov
cs
test
(bad)
jp
sub
aam
pushf
sbb
repz
push
cmp
test
test
jmp
jnp
cmps
jno
gs
fwait
aam
push
inc
pop
mov
push
adc
adc
dec
ss
cmps
jg
jo
imul
test
in
pop
and
pop
addr16
sbb
inc
retf
leave
cmp
ja
loope
dec
add
pop
data16
cmp
daa
inc
or
cmp
sub
xor
jecxz
out
jne
and
sbb
xchg
sub
std
ss
and
fisubr
test
xor
jbe
add
ss
dec
int3
js
nop
jmp
push
shl
push
pop
jle
popa
push
jge
lock
jg
sub
mul
in
cmc
addr16
or
inc
lahf
iret
jbe
pop
je
outs
or
mov
cmp
js
sub
mov
adc
(bad)
mov
jne
fsubrp
mov
jecxz
push
sbb
sahf
je
mov
sbb
sbb
xor
pop
les
push
(bad)
clc
mov
not
std
fwait
xlat
outs
xchg
dec
mov
cs
cmps
jmp
cmp
loop
int
aad
mov
adc
jmp
adc
cmc
mov
lds
ficomp
pushf
cmovne
push
push
outs
aad
cmp
pop
aas
adc
dec
inc
adc
aaa
mov
add
mov
mov
loopne
test
cli
outs
cli
je
jae
int
pop
bound
push
sub
dec
out
pop
arpl
in
sbb
jnp
out
loop
mov
stc
add
sub
aam
xor
aas
js
int
js
pop
sar
mov
clc
cs
adc
cmps
out
mov
cmp
sbb
inc
xlat
pop
mov
xchg
ret
addr16
shl
lds
fucomip
mov
clc
add
imul
push
dec
and
xchg
add
test
scas
movs
jnp
leave
xchg
cmp
sbb
sub
aaa
xchg
jl
stos
mov
mov
xchg
pop
jns
popa
inc
mov
and
cmps
out
inc
and
in
and
inc
inc
cmp
push
retf
jns
push
fldz
retf
push
push
jbe
sub
cmc
ret
pop
pushf
(bad)
in
sub
outs
cmp
test
jbe
jne
and
inc
xchg
xor
aam
mov
int
loope
lods
push
shr
cmps
outs
das
stc
sub
fidivr
push
stc
cmp
addr16
push
cmp
cmps
test
push
jg
jne
scas
fmul
jo
jbe
add
sbb
or
ja
out
dec
jae
push
cmps
sti
ds
ret
into
out
cmp
int3
mov
out
or
pop
push
cwde
and
jnp
cdq
enter
sbb
pop
mov
je
mov
sub
imul
xchg
arpl
shl
pop
stos
cmp
jle
inc
xchg
fsubp
sbb
iret
into
xchg
(bad)
enter
and
je
hlt
lds
mov
in
inc
stc
scas
cmp
add
xchg
aam
mov
out
(bad)
repnz
sbb
mov
inc
lea
sbb
int3
lods
mov
xchg
xchg
iret
ins
add
mov
movs
stc
out
xchg
xor
jo
cli
sbb
sar
mov
inc
or
pop
arpl
pop
dec
sbb
or
push
bound
push
fdivr
ror
cs
std
ficomp
xor
ins
mov
xchg
xchg
pushf
xor
mov
in
jl
xchg
mov
jbe
sbb
jge
dec
test
xchg
test
mov
hlt
in
and
cmp
aam
mov
adc
shr
mov
int3
jp
add
dec
std
pop
inc
(bad)
stos
repnz
sbb
push
sbb
dec
inc
add
pop
les
inc
adc
cmps
cs
fs
pop
mov
or
jg
sar
icebp
mov
les
rcr
adc
jae
pop
jb
cmp
push
xchg
and
sbb
cmp
aaa
xor
nop
out
je
out
adc
pusha
mov
sti
mov
pop
ins
stc
loopne
(bad)
push
adc
fisttp
xlat
cmp
test
movs
jnp
dec
and
sbb
add
mov
xor
dec
and
aad
fdiv
pop
sub
jge
sub
out
popf
(bad)
xor
test
jbe
sub
rcl
or
iret
test
cmps
sbb
xchg
(bad)
fwait
pop
xchg
(bad)
xchg
push
fbstp
and
int
mov
cwde
outs
call
mov
push
pop
cs
or
mov
sbb
shr
push
sbb
pop
ret
jge
and
iret
dec
xchg
cmp
mov
out
ffreep
xchg
inc
cmp
test
push
cmps
cli
ja
sub
call
fs
not
retf
dec
cmp
clc
and
cmc
ss
jg
scas
dec
mov
add
out
cmp
xor
dec
dec
sbb
pushf
nop
adc
sahf
dec
outs
pop
or
sbb
or
mov
push
push
push
movs
push
jp
pop
call
clc
jno
sub
and
dec
or
rol
pop
pop
mov
mov
jnp
outs
fsubrp
cmc
jle
sub
mov
loope
push
and
or
jno
add
sub
or
jmp
dec
sahf
ret
or
cmpxchg
(bad)
aam
cmp
mov
jmp
mov
push
ret
jnp
jecxz
ret
jg
xchg
jl
sbb
adc
xadd
shr
lahf
xchg
sahf
mov
pop
(bad)
and
add
loopne
sub
pop
outs
(bad)
retf
out
add
sub
imul
mov
and
or
jle
jne
fsub
adc
cmp
fsubrp
fmul
stos
or
ror
test
pop
sti
retf
test
fwait
pop
add
mov
mov
cmp
gs
aaa
sub
push
sbb
ret
mov
repnz
mov
mov
cmp
scas
dec
sar
adc
rcr
outs
pop
sahf
pop
dec
dec
add
aam
jecxz
xlat
cwde
adc
adc
test
ja
sub
les
(bad)
dec
repz
loope
mov
ror
jmp
mov
dec
out
xlat
in
idiv
xor
sbb
lods
jne
xor
mov
outs
into
mov
cmp
das
dec
cli
mov
dec
mov
enter
xor
sti
movs
ss
push
cmc
mov
xor
mov
(bad)
dec
push
jns
mov
rol
push
mov
aas
jo
sbb
movs
pop
or
xchg
ss
leave
shr
leave
adc
sbb
dec
(bad)
adc
push
leave
mov
repz
cmp
inc
popa
adc
ret
or
pop
add
push
and
inc
int
cmps
out
mwait
sbb
movs
jae
or
push
dec
test
sbb
popf
xor
jp
pop
fist
or
out
jmp
out
popf
lds
fld
jle
push
shl
pop
and
jae
les
pop
and
sbb
jmp
retf
and
(bad)
cmp
jle
pop
and
pop
rol
push
inc
stc
and
pushf
stos
(bad)
push
popa
popf
push
xor
inc
or
mov
xchg
(bad)
jae
and
movs
jne
push
outs
popf
inc
xchg
int
scas
jnp
retf
outs
dec
rcr
scas
pop
mov
jb
fst
loop
hlt
fst
dec
or
aad
movs
xchg
pop
scas
push
add
cmp
in
js
dec
or
xchg
dec
pop
into
cdq
push
cmp
pusha
jbe
retf
rol
mov
push
retf
sub
jecxz
add
cwde
aam
in
daa
daa
inc
in
popa
sbb
mov
sbb
lods
inc
jns
or
mov
test
pop
cld
lds
rol
xlat
jno
js
mov
mov
shl
in
push
cmp
push
sbb
add
push
mov
in
jmp
jo
cmp
(bad)
(bad)
shl
int3
mov
cmp
mov
test
mov
(bad)
not
sub
pop
mov
xchg
push
cmp
popa
jne
call
mov
pop
pop
mov
lea
sbb
clc
push
ret
or
pop
fmulp
and
pop
stc
aad
and
inc
mov
inc
sub
loop
loop
dec
jge
retf
add
jnp
push
fwait
ret
and
(bad)
sub
xchg
shl
and
fld
add
pop
add
cmps
imul
and
xchg
or
int
mov
fadd
dec
nop
int
call
sar
iret
mov
ins
add
mov
(bad)
loope
push
jnp
pop
(bad)
and
scas
loope
jg
scas
(bad)
xor
push
cld
and
in
pop
into
aad
pop
lods
mov
fbstp
ret
js
mov
push
pop
inc
and
loopne
pop
and
aam
mov
fxch
inc
mov
mov
jbe
or
lods
jge
outs
jle
dec
mov
cmp
adc
fild
aaa
cmp
loopne
adc
clc
sbb
pop
sti
int3
add
jge
xchg
add
js
mov
mov
stos
cld
fs
xor
cmp
call
push
sbb
or
enter
lahf
pop
bound
or
push
jg
shl
push
mov
mov
daa
test
adc
loopne
inc
dec
jge
(bad)
pop
(bad)
test
pop
mov
adc
call
mov
movs
je
retf
loop
cmp
ror
add
sbb
pop
imul
lods
push
sbb
ds
aaa
mov
and
ss
test
mov
add
push
add
aad
add
cwde
cmps
scas
mov
dec
into
and
adc
loop
sbb
or
out
cs
xor
das
mov
jns
nop
loope
loop
data16
or
lods
cmp
fild
xchg
int
lods
xor
sbb
pop
aaa
cwde
and
cmp
sub
test
pop
sub
sub
enter
mov
daa
addr16
push
retf
ficomp
add
test
and
mov
(bad)
ja
in
ins
nop/reserved
xchg
dec
icebp
xor
sahf
idiv
test
sub
repnz
push
out
fldcw
pushf
mov
mov
and
inc
adc
enter
dec
pusha
inc
cmps
cmp
ss
movs
push
lea
div
sub
imul
mov
xchg
push
out
and
jmp
sar
fst
add
test
mov
pop
fcomp
mov
popf
push
xor
(bad)
repnz
mov
ret
gs
dec
push
aaa
or
jecxz
push
ss
push
pop
jle
jmp
cmp
push
cmp
rol
ja
aas
jecxz
test
jns
xor
sub
popf
mov
cld
push
push
stos
mov
push
xor
xchg
scas
outs
add
dec
int
(bad)
jp
mov
lods
iret
dec
xchg
call
test
adc
fadd
pop
or
aad
cs
jb
sbb
fnsave
fild
xor
fsub
fmul
cmps
mov
jmp
(bad)
out
inc
shr
or
dec
mov
dec
or
jae
int
push
je
mov
push
jo
xchg
mov
mov
not
mov
outs
test
cs
dec
mov
xor
pop
int3
dec
test
push
out
sar
mov
sbb
fs
mov
neg
(bad)
icebp
pop
mov
fdivr
out
pusha
daa
xor
mov
sahf
aad
mov
cmps
add
daa
mov
cmps
inc
and
push
push
pop
sbb
shr
jbe
sti
jg
pusha
fisttp
icebp
jb
push
cmp
lahf
cmp
dec
xor
and
popa
out
lahf
and
xchg
or
test
jo
enter
ds
imul
add
jecxz
push
ss
rcr
or
bound
sbb
add
or
or
jmp
xchg
add
cli
std
add
pop
sbb
xchg
mov
jmp
iret
test
in
and
pop
mov
cmp
enter
or
sbb
aas
test
(bad)
mov
inc
in
and
and
loop
hlt
shl
mov
outs
push
aaa
ret
retf
mov
ja
fs
bound
pop
ror
xchg
cmp
mov
mov
mov
(bad)
icebp
xor
imul
mov
rol
adc
fdiv
mov
or
loopne
sub
in
mov
xor
xchg
sbb
add
xchg
dec
and
inc
cmp
rcr
das
mov
push
sar
retf
jne
and
in
jnp
mov
fdiv
jb
jmp
pushf
cmp
(bad)
cwde
out
push
aam
mov
mov
or
cmps
sbb
mov
sub
cmps
jge
xor
test
rcl
mov
mov
pop
(bad)
jmp
mov
xor
(bad)
jl
dec
jne
jns
arpl
push
dec
mov
or
xor
retf
jmp
mov
sub
or
push
dec
icebp
es
fidivr
dec
mov
popf
loop
fisttp
sub
ja
add
out
jmp
sbb
test
das
xor
retf
data16
pop
shr
stos
xchg
sub
jne
cwde
scas
cwde
js
fwait
in
jae
fwait
add
pop
inc
pop
retf
ja
xchg
mov
int3
dec
es
inc
ss
jecxz
xor
cmp
inc
mov
les
add
jl
test
popf
sbb
loopne
jbe
lahf
in
fwait
out
jo
out
and
push
aaa
mul
mov
xchg
les
aas
jge
xchg
pop
imul
jnp
mov
ja
sbb
outs
dec
cmp
add
out
push
xor
push
in
inc
sbb
pop
push
inc
sbb
mov
leave
xchg
retf
div
inc
xchg
mov
int
and
push
jmp
sub
cwde
xor
mov
imul
push
fadd
adc
or
xchg
or
or
iret
(bad)
sbb
push
mov
(bad)
std
xchg
xor
rol
push
mov
sbb
jae
cli
sti
push
das
xchg
sub
mov
scas
stos
stc
pusha
fild
rcl
rcr
ficom
xor
ror
and
push
(bad)
int3
or
mov
jno
xchg
mov
nop
test
lahf
push
add
mov
pop
inc
pop
in
add
add
adc
push
mov
push
jne
mov
test
and
add
fist
jecxz
jg
out
dec
inc
sub
adc
fwait
movs
add
por
adc
jnp
movs
enter
test
clc
rcr
(bad)
xchg
adc
add
sub
(bad)
and
mov
outs
pusha
enter
fldcw
mov
mov
push
inc
jnp
ror
pop
mov
scas
xlat
xchg
call
xor
dec
pop
mov
call
push
pop
jle
ret
pushf
fstp
sub
aam
dec
into
and
cdq
cs
rol
or
adc
dec
cmp
daa
adc
cmc
xchg
(bad)
jecxz
jle
jmp
jbe
data16
mov
jmp
push
add
cli
adc
sahf
mov
out
pop
(bad)
imul
xchg
cmp
add
mov
or
jmp
hlt
xchg
mov
fisttp
push
pop
xor
mov
pop
sbb
inc
sbb
popf
outs
in
inc
adc
adc
out
int
cmp
ins
pop
mul
xchg
mov
mov
fimul
mov
sbb
clc
into
add
test
jmp
sub
les
dec
test
push
jl
int
retf
inc
dec
inc
rcr
and
into
movs
imul
push
dec
std
aas
sbb
adc
or
stos
inc
push
call
pop
or
inc
jp
fstp
mov
shl
jns
mov
nop
mov
pop
leave
cmp
hlt
xor
dec
lahf
in
mov
jne
push
or
iret
mov
mov
mov
sbb
pop
push
out
sbb
jecxz
(bad)
(bad)
lahf
lahf
fwait
or
addr16
daa
aas
mov
xchg
ins
data16
cli
movs
fmulp
imul
outs
(bad)
add
push
or
pushf
dec
mov
pop
sub
scas
adc
jge
push
je
addr16
push
ror
hlt
or
xlat
add
or
push
dec
fnstcw
and
inc
inc
inc
or
lods
pop
xor
pop
mov
stos
or
dec
icebp
push
sbb
test
dec
imul
jge
sbb
je
gs
adc
add
retf
jb
xor
fmul
fnstcw
pop
movs
js
outs
push
into
fnstsw
movs
cld
pop
lods
cmp
sub
push
xchg
sbb
cdq
and
and
(bad)
cmc
xchg
cmp
(bad)
clc
and
call
stos
inc
add
or
das
test
xchg
(bad)
pushf
iret
fstp
daa
mov
xchg
mov
mov
jge
mul
fld
scas
mov
dec
cdq
rcr
call
mov
idiv
cmps
stc
iret
mov
add
aaa
sbb
mov
sbb
call
mov
mov
sbb
aas
ret
cld
clc
or
aam
test
and
imul
addr16
dec
cld
ret
sar
xor
or
mov
stos
add
jno
mov
dec
mov
mov
dec
xchg
(bad)
dec
inc
push
inc
shl
repnz
lds
test
lock
imul
push
add
add
jp
push
outs
or
repnz
retf
pop
mov
jmp
out
add
cmc
or
push
hlt
in
pushf
xor
aad
jbe
les
mov
push
push
cli
fnstenv
and
pop
je
or
addr16
add
pop
pop
enter
xchg
retf
or
mov
enter
mov
xor
hlt
cld
jb
or
movs
adc
mov
fisub
nop
jmp
clc
sub
fadd
aas
mov
mov
or
and
out
lods
and
or
les
adc
inc
and
jmp
(bad)
mov
xchg
fmul
dec
mov
retf
(bad)
mov
shl
loop
jmp
mov
(bad)
hlt
test
pushf
inc
fidivr
dec
call
(bad)
cmp
jnp
xchg
push
xchg
push
xchg
sbb
sbb
mov
scas
(bad)
js
mov
inc
inc
jno
(bad)
fsub
jmp
push
mov
outs
lea
jl
and
xchg
push
xchg
inc
xchg
xor
push
pop
cmp
aas
ret
idiv
loope
loop
adc
je
je
xchg
push
adc
mov
cmp
call
jl
scas
push
cmp
repnz
xchg
pop
push
inc
cmp
mov
sbb
daa
iret
fisubr
xchg
pop
cwde
fsubrp
cdq
ret
cmp
fucomi
cld
(bad)
jbe
mul
xchg
fist
and
lds
jnp
sar
aaa
inc
mov
cmp
in
push
inc
inc
xchg
aam
retf
shl
adc
sub
mov
cmp
add
inc
movs
mov
repz
pushf
lds
mov
xchg
out
xor
sub
retf
sbb
ds
pusha
add
ins
mov
mov
push
pop
faddp
test
fisttp
and
pop
lods
jb
and
adc
xor
dec
pop
inc
inc
je
inc
or
jae
test
push
div
rep
add
mov
loope
push
aaa
jle
loopne
pop
xchg
sub
and
pop
sbb
sub
inc
and
inc
sub
jbe
mov
push
inc
dec
fs
push
test
add
dec
cmp
clc
cs
mov
cld
add
fnstsw
push
(bad)
mov
fsubr
sub
push
push
and
xlat
lods
sub
pop
mov
mov
je
mov
or
lahf
and
loope
sti
and
pop
iret
aaa
xchg
lods
pop
mov
dec
sbb
sbb
fdivr
stc
mov
shr
(bad)
jno
jne
xor
rcr
test
out
js
in
shr
int
fcmovu
mov
mov
fwait
dec
xchg
push
pop
pop
mov
xor
hlt
mov
jg
arpl
dec
aaa
ins
push
hlt
imul
push
cmp
cs
into
loopne
inc
fcmovb
aas
xor
xchg
mov
jae
xor
(bad)
cld
mov
or
and
daa
outs
cs
mov
push
pusha
add
xlat
mov
popa
add
bound
xchg
out
popa
jb
lock
rcr
cmps
inc
retf
jns
sub
fsubr
or
pop
out
hlt
cmp
ficomp
sbb
cld
pop
and
nop
aam
mov
test
cmp
shr
pop
stos
imul
fsubr
cld
int3
or
or
cmp
jle
retf
ror
inc
and
(bad)
icebp
xlat
lock
inc
pop
sbb
(bad)
cmc
add
or
or
xor
scas
xlat
imul
fwait
cdq
arpl
push
addr16
xchg
stos
add
hlt
rol
xchg
movzx
div
test
sbb
rcr
mov
push
xchg
sub
sar
jge
into
int
loope
mov
jb
stc
out
cwde
out
(bad)
imul
loop
pop
fwait
mov
dec
or
in
ds
inc
movs
daa
push
xlat
push
or
mov
jecxz
and
sbb
in
out
and
out
jmp
sbb
sub
das
jb
in
loop
cmc
mov
loope
rcr
mov
push
push
pusha
cld
jno
sti
pushf
push
pop
neg
pop
mov
mov
leave
jge
inc
mov
aaa
sar
xor
push
push
bound
push
pop
dec
imul
jmp
icebp
mov
loopne
repnz
test
xchg
arpl
cmps
xchg
cmc
popf
and
mov
aas
jnp
inc
retf
div
add
jnp
jp
idiv
xchg
fist
xor
iret
rcr
into
cdq
movs
(bad)
xor
push
dec
cmp
js
sbb
imul
test
inc
push
cmp
icebp
rcr
dec
pop
fidiv
push
and
cwde
sub
(bad)
sbb
dec
les
and
aam
adc
mov
add
and
int
ficom
sahf
adc
xor
test
xchg
or
pop
daa
aas
mov
sbb
jmp
mov
scas
mov
rcr
or
mov
mov
rol
fwait
inc
add
push
out
cmc
and
dec
mov
adc
pop
push
push
icebp
addr16
in
cmp
inc
out
and
push
lock
jg
fsubrp
je
stc
mov
or
and
pop
movs
and
jbe
mov
mov
cdq
jmp
aad
jp
retf
and
xchg
sbb
leave
out
loope
das
pop
test
sub
addr16
pop
or
or
xor
pop
daa
mov
aaa
movs
inc
leave
jns
push
push
pop
repz
pop
movs
add
pop
cmps
aad
fwait
mov
inc
jo
inc
mov
push
mov
sub
(bad)
jp
jl
mov
push
ret
js
inc
imul
mov
pusha
scas
sar
mov
push
push
iret
push
xchg
adc
xchg
add
les
mov
out
or
add
retf
(bad)
cmp
cmp
jg
out
test
icebp
xchg
sahf
sub
mov
adc
nop
std
stc
cmps
in
leave
clc
addr16
js
jmp
xchg
cwde
pop
ins
aas
mov
dec
in
mov
mov
mov
cmp
jb
add
jge
push
add
pop
inc
int
mov
out
xor
pop
fs
std
xchg
movs
inc
sub
in
jns
dec
pop
sub
sbb
xchg
repz
ja
xor
push
andnps
adc
mov
jbe
cmps
(bad)
es
aam
jg
mov
mov
neg
mov
fsubr
fstp
sub
out
inc
dec
ror
scas
fld
jo
jecxz
in
cmps
sub
and
push
jecxz
bound
pop
pop
adc
in
das
clc
movs
push
arpl
add
jnp
adc
inc
jmp
dec
pop
lods
jae
ds
iret
xlat
push
add
mov
xchg
push
fcomp
aad
addr16
and
das
adc
movs
add
mov
nop
(bad)
push
gs
in
inc
cs
aaa
push
mov
xchg
pop
xor
mov
inc
mov
cwde
push
xchg
cmp
imul
push
cdq
dec
cld
das
sub
mov
inc
pop
inc
and
popf
icebp
jnp
or
mov
imul
ficomp
stos
(bad)
jle
add
push
push
dec
gs
jle
pop
test
out
mov
outs
xlat
sub
scas
mov
sub
(bad)
and
jne
les
std
test
mov
outs
adc
shr
cmp
call
repz
lahf
(bad)
sub
(bad)
out
bound
out
and
cmp
sbb
jb
and
into
fldcw
outs
xchg
mov
fs
sub
mov
jbe
aad
sub
jmp
xor
pop
add
cwde
sbb
arpl
fidivr
popa
or
ret
mov
nop
mov
sub
dec
shr
xchg
mov
sahf
add
push
jl
repnz
(bad)
cmp
ret
push
adc
mov
arpl
mov
pop
int
cmp
sub
inc
outs
dec
rcl
add
ficom
cmps
and
pop
pop
inc
movs
jne
icebp
scas
sbb
ss
or
in
push
pop
dec
rol
mov
leave
pop
pop
out
jo
outs
mov
or
into
jbe
push
inc
fwait
(bad)
push
fst
push
stos
cmp
push
pop
stos
das
mov
xlat
inc
movs
dec
pop
or
loop
imul
mov
xchg
out
sahf
xchg
or
cmps
mov
es
xchg
push
ret
(bad)
push
mov
adc
inc
push
sti
jmp
sti
mov
pusha
cmp
cld
push
adc
cdq
pop
inc
adc
fimul
retf
rcr
sbb
fisttp
jb
jae
rcl
push
adc
arpl
xor
xor
xor
sahf
fs
dec
mov
cmp
adc
fldlg2
sub
push
jbe
or
cwde
xor
rol
movs
adc
fimul
popa
xchg
(bad)
fisubr
ds
mov
hlt
push
fisttp
xchg
jmp
dec
jae
mov
cmp
push
aas
dec
cmp
dec
mov
mov
aaa
mov
sub
lea
in
inc
xchg
cs
dec
test
es
mov
dec
enter
jp
dec
or
mov
cdq
jg
mov
js
jno
mov
jmp
(bad)
push
repz
ins
add
push
ss
push
mov
sub
outs
sar
inc
clc
inc
out
ins
or
or
je
push
neg
or
retf
push
mov
loope
xor
add
inc
jae
cmp
repnz
cli
sbb
mov
(bad)
jmp
call
rcr
xchg
mov
in
push
mov
addr16
and
cli
std
loop
repz
sbb
data16
and
inc
imul
aad
repz
scas
dec
test
fisub
bound
shl
adc
mov
cmp
rcr
jae
(bad)
fimul
popf
or
sub
add
mov
jmp
or
jmp
(bad)
retf
js
add
cld
stos
add
add
inc
arpl
pop
dec
mov
sbb
jae
mov
das
and
aas
cmp
mov
pop
ret
mov
arpl
int
rcl
shl
mov
mov
sbb
dec
out
add
pop
popf
jp
xor
xor
popa
mov
xchg
push
stos
fabs
mov
pusha
sahf
popf
push
sar
test
and
jl
lds
mov
pushf
repz
mov
mov
loopne
inc
lods
xor
std
addr16
dec
pushf
fadd
in
fdiv
add
fbld
xchg
pop
(bad)
xor
xchg
mov
xchg
or
jl
mov
mov
push
adc
loopne
(bad)
scas
pop
imul
sbb
xlat
pop
aam
shr
jae
xor
icebp
sbb
push
rol
imul
lea
inc
jb
sbb
cmp
sbb
jle
or
xor
div
loop
dec
mov
ja
cdq
mov
pop
add
in
xor
fist
into
adc
mov
outs
int3
adc
and
or
sti
inc
adc
add
xor
jno
(bad)
jge
xor
jmp
mov
(bad)
sti
jl
int3
test
jl
idiv
fcom
sub
popa
mov
pusha
xor
js
pop
push
call
mov
add
ja
mov
ins
int
xchg
sub
test
out
pushf
sub
push
mov
push
(bad)
mov
or
mov
push
jg
mov
sbb
rcr
pushw
sbb
jns
pop
popf
bound
xchg
sbb
adc
pop
clc
nop
mov
add
not
dec
test
int
outs
bound
mov
cmps
sbb
sbb
cmps
fld
outs
(bad)
out
pushf
fmul
shr
or
dec
imul
adc
or
std
xor
xor
mov
and
stc
push
inc
mov
xor
or
cmp
mov
or
sbb
shl
cdq
cmp
or
jmp
pop
cdq
scas
or
shl
jg
sahf
push
push
and
adc
inc
in
arpl
jno
jmp
and
mov
inc
(bad)
mov
sbb
ror
or
pop
div
push
nop
xor
mov
jne
jle
push
es
(bad)
mov
sub
dec
test
dec
loope
iret
cmp
mov
xchg
dec
cmp
jmp
repz
aam
mov
dec
in
repz
popa
push
movs
pop
call
add
rol
xor
mov
cmp
es
popf
pop
call
sbb
mov
cmp
pop
test
cmps
std
cmps
fild
jo
adc
repz
fnstcw
add
push
xor
and
sub
aad
mov
sbb
pop
sti
ja
mov
cmps
adc
call
test
(bad)
imul
add
fist
cmp
and
stc
or
stc
push
test
jle
mov
xor
and
mov
or
scas
(bad)
jle
mov
cmc
cmp
mov
inc
retf
xchg
sbb
scas
sbb
ins
jmp
sbb
cmps
xchg
movs
add
mov
jbe
pop
pop
fdivr
pop
in
cmps
jmp
mov
ja
push
clc
xor
outs
jp
or
add
pshufw
mov
enter
stc
jge
add
cmps
fucomip
repz
cli
sbb
cmp
(bad)
cmp
fisttp
mov
cld
cmp
aam
dec
sub
je
xchg
repnz
into
test
xchg
push
cmp
mov
paddq
icebp
movs
push
inc
mov
icebp
call
lahf
(bad)
ins
mov
mov
dec
or
inc
mov
mov
mul
mov
and
out
mov
xchg
push
lea
je
(bad)
mov
fs
mov
ss
push
push
dec
inc
jns
outs
out
xchg
imul
(bad)
add
sub
call
jge
cld
es
(bad)
lds
sub
push
pop
mov
fwait
sub
jae
dec
cmc
(bad)
inc
pop
xchg
pusha
lock
mov
loopne
xor
out
xchg
mov
dec
mov
or
enter
or
mov
out
jmp
pop
hlt
pop
lods
pop
sub
inc
aad
push
sbb
loop
adc
xchg
mov
sti
addr16
rcl
xchg
popf
xchg
cmp
cmp
lea
imul
jmp
push
pop
imul
addr16
xchg
jp
pop
mov
in
and
mov
cmp
cdq
add
add
add
adc
mul
push
in
movs
ins
imul
scas
cmps
push
out
mov
cdq
in
stos
clc
sbb
sub
sar
mov
outs
sahf
movs
or
imul
or
add
pop
dec
sbb
call
jge
fwait
movs
push
test
fsub
test
lods
jnp
inc
fst
dec
fdivr
out
imul
inc
push
mov
out
(bad)
jg
shr
push
fst
pop
retf
fisub
fisubr
call
or
cdq
(bad)
and
in
outs
mov
xchg
je
ret
aaa
jmp
out
push
int3
data16
adc
mov
mov
xor
imul
xchg
jnp
(bad)
jne
std
imul
inc
ja
jno
or
and
inc
lods
jecxz
push
dec
test
add
cs
mov
mov
rcl
scas
(bad)
int3
lds
mov
mov
push
push
jae
retf
xchg
in
xchg
xchg
mov
pop
sbb
mov
and
popa
mov
mov
(bad)
dec
cmp
cs
shl
mov
repnz
mov
icebp
or
or
fldenv
sar
mov
cwde
push
and
lods
jb
or
adc
call
push
inc
in
les
and
leave
in
out
cmps
cmp
ins
inc
ds
rol
jecxz
imul
ins
mov
mov
test
outs
pop
fstp
xor
ins
gs
or
popf
shl
cmps
inc
xchg
adc
(bad)
std
push
fsub
imul
mov
xchg
clc
mov
add
jns
mov
mov
shl
xor
retf
xor
stos
jo
ret
inc
(bad)
scas
jmp
in
jo
leave
lods
aas
or
xor
popa
inc
aaa
adc
pop
add
dec
inc
cmp
(bad)
or
adc
shr
retf
adc
pop
jle
sub
sbb
jae
sub
ror
cmps
xor
loopne
mov
jp
ds
push
and
and
dec
movs
cwde
mov
xor
neg
out
inc
mov
test
ror
data16
xchg
sbb
adc
stos
or
jo
aas
cli
addr16
leave
adc
and
pop
mov
ja
fidiv
adc
cmp
inc
sub
push
or
dec
mov
mov
nop
into
int
jmp
sahf
mov
and
sbb
cmp
sbb
sub
arpl
xor
vpcomq
mov
hlt
or
xchg
cmp
jecxz
lds
out
aaa
lods
ffree
dec
int
push
jnp
add
in
inc
fstp
cs
ds
fsubp
iret
cmp
lods
ins
das
push
enter
sbb
lea
jae
cmp
mov
int
mov
or
push
aam
and
lahf
das
(bad)
and
pop
mov
sub
push
rcl
gs
ins
mov
inc
push
outs
xor
test
sbb
jmp
call
and
cmp
shl
ror
fstp
ret
inc
mov
ret
shl
xor
fwait
pop
mov
fcomp
pop
rcl
inc
push
gs
imul
or
ficom
imul
sahf
loop
outs
les
mov
test
cdq
pop
popf
mov
push
sbb
mov
jb
push
pop
sbb
cli
cmp
push
adc
popa
jl
cmp
mov
cmp
mov
cwde
imul
ficomp
jl
das
mov
and
rol
leave
inc
push
sub
inc
ja
test
jecxz
jle
pop
mov
push
xchg
into
fwait
les
lods
or
pop
push
add
sbb
out
mov
and
push
aas
pusha
push
dec
(bad)
aam
mov
xchg
mov
inc
sub
adc
jns
xlat
fsubr
mov
dec
repz
inc
shl
mov
out
nop
pop
(bad)
jge
int
call
daa
jae
ror
push
jl
(bad)
inc
push
xor
xchg
pop
push
add
cmp
mov
sbb
shr
shr
in
inc
mov
pushf
cmp
fisub
fistp
(bad)
retf
xor
jns
xchg
mov
rcr
cdq
mov
call
mov
daa
movs
xchg
xor
xchg
jae
jmp
enter
jmp
push
out
ins
sbb
adc
xchg
push
sub
jae
push
mov
adc
jp
lods
scas
mov
outs
rcr
pushf
inc
mov
or
xor
shr
cmps
aam
pop
jg
jae
fstp
xor
or
cmc
int
imul
ds
aas
fstp
(bad)
or
jno
sbb
loop
test
test
rcr
outs
and
or
repnz
xchg
dec
lahf
fs
cmps
(bad)
call
out
push
mov
mov
jmp
retf
cld
push
inc
stos
push
adc
inc
cmps
jae
jns
dec
pop
or
xchg
xor
and
imul
push
or
push
nop
adc
dec
mov
movs
adc
dec
fld
imul
jecxz
push
fisubr
lea
fld
push
inc
lods
test
push
shl
lods
adc
cdq
loop
in
push
lods
sbb
sbb
cmps
cmp
movs
inc
aaa
jmp
fsubr
pop
and
jbe
mul
or
jae
fiadd
adc
sub
fistp
push
pop
adc
ja
(bad)
jmp
xchg
ror
cmc
or
sub
mov
pop
sub
dec
jo
inc
in
xlat
int3
fidivr
test
push
dec
sbb
and
inc
sub
push
dec
adc
adc
dec
stos
xor
cli
push
lock
xor
fdivr
call
shl
fnstcw
out
add
adc
bound
imul
(bad)
mov
sub
xchg
push
test
xor
and
xchg
dec
jmp
loope
cs
into
test
adc
or
ins
fmul
cmp
cmp
retf
inc
out
xchg
jb
and
mov
ficom
sbb
mov
cmp
or
xchg
retf
sub
jne
mov
enter
push
loopne
mov
imul
add
mov
jg
aam
sub
adc
call
add
leave
jmp
iret
mov
cmp
inc
ror
ret
cdq
iret
cdq
dec
outs
pop
and
xor
mov
call
or
mov
dec
pop
lods
aas
jo
mov
push
adc
pop
and
mov
icebp
dec
idiv
pop
std
dec
add
or
or
lods
hlt
retf
mov
movs
repz
pop
das
ret
mov
out
dec
cmp
add
cmp
retf
pop
inc
cmps
ja
xchg
and
aas
and
mov
(bad)
in
dec
test
fs
and
xor
sub
xchg
lea
dec
xchg
fild
stos
adc
add
mov
cdq
in
mov
mov
ror
(bad)
(bad)
dec
push
jle
pop
mov
cld
mov
fstp
hlt
lea
xchg
retf
inc
add
cmps
js
in
inc
or
stos
push
outs
xlat
jbe
xchg
out
adc
sbb
xor
inc
dec
into
bound
rcl
out
xchg
mov
int
bound
test
lock
loop
xchg
ret
cmc
mov
sahf
mov
into
mov
xchg
ret
sub
outs
enter
dec
cld
xchg
xor
out
and
call
xor
int
or
adc
leave
pop
cdq
add
pop
icebp
int
out
cwde
mov
into
das
ins
add
jb
mov
pop
jg
and
ret
push
out
std
push
pusha
add
cmp
cmp
mov
ret
dec
adc
jp
cmp
out
dec
adc
test
cli
sub
mov
inc
jno
fwait
inc
push
int
sub
dec
or
inc
push
sbb
inc
ja
mov
(bad)
jnp
sub
xchg
pop
stc
mov
sub
in
pusha
sub
ja
cmps
test
push
ja
fst
xor
pop
inc
dec
rol
dec
popf
xlat
loopne
stos
xchg
bnd
or
jns
mov
xchg
js
xor
stc
outs
mov
jbe
lods
inc
imul
inc
or
mov
xor
fld
cmc
dec
call
cmp
cwde
xchg
retf
cld
leave
dec
fidivr
ret
sbb
pop
lods
mov
inc
sub
sbb
test
out
ret
rcl
cmp
cmp
push
lds
mov
cmp
mov
add
xor
loop
setno
sbb
test
cld
mov
xor
sbb
sti
xchg
sub
shl
adc
adc
ret
xchg
or
push
lock
les
pop
test
cdq
sub
mov
push
lods
test
call
cmp
sbb
jge
loop
pop
jmp
xchg
sbb
ds
fwait
add
daa
or
not
xlat
pop
mov
and
movs
ret
mov
jp
lods
sub
rol
mov
inc
jecxz
inc
cmp
fwait
add
ret
jmp
inc
sbb
fist
in
sbb
movs
or
inc
jl
pop
jmp
mov
movs
int3
pop
pop
inc
push
rcr
sbb
jmp
jno
repnz
daa
cs
ss
imul
mov
or
xor
jg
lds
pop
xor
cmp
add
gs
ss
jne
rcr
scas
shl
add
ss
add
pop
mov
fsubrp
imul
add
xchg
mov
pop
ret
pop
inc
xchg
xor
push
hlt
sbb
mov
lds
pop
pop
leave
mov
mov
lea
data16
lock
fld
xchg
in
fs
fldenv
call
push
xor
pop
lock
mov
cmps
inc
push
mov
loope
in
add
sahf
call
inc
jmp
jb
push
jno
ror
add
in
add
es
mov
or
sbb
mov
jno
clc
mov
push
push
and
shl
(bad)
adc
(bad)
xlat
add
call
or
mov
mov
mov
sub
mov
les
push
cmp
or
hlt
pop
push
adc
(bad)
or
jmp
les
push
xor
js
dec
cmp
mov
js
retf
mov
std
hlt
sbb
lea
add
dec
dec
(bad)
jae
mov
or
cwde
(bad)
lock
div
movs
and
scas
mov
ds
pop
stos
mov
leave
mov
mov
mov
popa
pop
mov
icebp
addr16
add
adc
shr
jns
nop
dec
mov
push
imul
movs
adc
mov
cmp
pop
jns
or
(bad)
lods
nop
test
mov
pop
lds
add
inc
xchg
xlat
fwait
xor
lock
pop
popa
div
adc
add
sub
mov
popa
lods
xor
adc
mov
icebp
cmps
loopne
loope
mov
xchg
mov
dec
leave
cdq
and
js
mov
repz
xlat
dec
xor
sub
stos
fisttp
fimul
leave
jne
push
mov
inc
push
jmp
mov
adc
fwait
xor
call
or
repnz
dec
dec
or
dec
pop
mov
stc
ficomp
mov
mov
inc
(bad)
sahf
movs
hlt
repz
sub
add
sbb
mov
fs
sub
mov
mov
shl
push
push
push
addr16
mov
mov
sbb
or
mov
cmp
mov
jbe
aaa
mov
xor
stos
test
mov
adc
out
or
cmps
pop
les
xor
sub
dec
or
bound
sti
pminsw
fsubr
lds
pmuludq
lock
pop
popa
dec
imul
hlt
jae
mov
and
push
and
and
xchg
add
mov
inc
leave
pusha
jno
pusha
cli
sub
lods
mov
les
cmp
push
aam
imul
mov
out
icebp
ins
mov
sbb
cmc
xchg
xor
test
pop
push
fisubr
out
jbe
sub
in
and
stos
inc
leave
xchg
cmps
xchg
pop
jp
jnp
cdq
adc
lahf
retf
sbb
xchg
add
mov
es
mov
cs
test
loop
sbb
push
cmp
and
dec
jge
mov
dec
shl
add
mov
mov
icebp
push
inc
add
and
mov
mov
push
in
in
(bad)
sbb
fwait
inc
cld
adc
or
jno
pop
push
in
and
cmp
mov
popa
push
call
arpl
les
fwait
push
inc
mov
push
clc
sbb
jno
sub
(bad)
pusha
jae
or
pushf
jb
arpl
jae
mov
outs
inc
cli
xchg
mov
mov
call
retf
frstor
push
mov
cmp
push
in
push
cli
fild
cmps
shl
xor
inc
mov
xlat
stc
cld
loope
cmp
mov
out
sbb
imul
inc
out
dec
ds
aad
int
and
sbb
repnz
cmc
adc
fwait
test
cmp
mov
sbb
sub
mov
adc
cli
lds
ss
pop
sub
sub
cmps
(bad)
adc
aad
icebp
mov
adc
iret
pushf
or
jge
mov
mov
lock
repz
cmp
sahf
pop
adc
orps
gs
addr16
dec
fisttp
clc
jns
xlat
cmp
idiv
inc
ficomp
daa
iret
add
mov
and
sub
je
add
xor
nop
imul
add
adc
mov
sub
pop
sbb
jo
mov
loope
push
cdq
inc
lea
cmc
or
int
fucomip
in
and
xor
adc
mov
add
xchg
fmul
pop
mov
hlt
mov
out
mov
push
xor
clc
sbb
stc
(bad)
clc
ins
stos
gs
bts
and
xor
lock
mov
int
xor
inc
(bad)
jge
pop
push
mov
cmc
ins
movs
stos
in
stos
jae
dec
aas
xchg
xchg
mov
ret
mov
sbb
call
cmp
cdq
mov
cmp
mov
xor
dec
pop
sahf
(bad)
lea
daa
xor
fidiv
jo
jae
sbb
into
pusha
mov
fwait
sub
push
or
jecxz
add
int3
push
add
test
loope
sbb
nop
ror
mov
or
(bad)
xchg
mov
into
arpl
in
inc
xor
add
mov
addr16
adc
and
and
loop
ins
pop
mov
retf
test
xchg
loop
daa
jns
ror
lahf
jg
aad
adc
adc
and
movs
mov
fwait
das
jnp
pop
out
mov
cmc
sbb
sti
and
out
mov
mov
jge
fwait
cld
inc
in
gs
dec
xor
fcomp
mov
in
stc
pop
jecxz
xchg
leave
mov
movs
enter
and
inc
xor
mov
jmp
fisubr
pop
leave
gs
aas
clc
add
cmp
jge
and
xor
pop
pop
push
inc
mov
ja
stc
sbb
inc
out
dec
cs
xchg
and
mov
in
mov
test
(bad)
outs
dec
js
out
hlt
(bad)
xchg
pop
push
inc
adc
mov
xchg
movs
mov
sub
mov
enter
neg
int
movs
les
dec
pushf
shl
add
popf
hlt
add
repnz
out
popf
mov
fcom
aaa
ins
cdq
ret
retf
and
or
push
pop
adc
pop
jne
and
gs
lds
imul
pop
xchg
dec
lods
mov
mov
enter
jno
mov
test
ret
mov
scas
and
push
dec
outs
loopne
cld
adc
push
test
(bad)
cmps
icebp
mov
in
fwait
stos
jne
int3
sub
xchg
adc
pop
jo
das
mov
repz
js
add
mov
test
adc
in
and
stos
mov
cmc
cmps
rol
cmc
cld
enter
xchg
enter
cli
arpl
adc
out
out
inc
mov
ins
add
fisttp
jmp
mov
sub
movs
ss
jne
sub
outs
sbb
in
mov
mov
imul
ret
xchg
xor
push
push
cmp
xor
retf
loop
cmp
int
pop
call
and
ficom
cmp
dec
repnz
add
push
xchg
into
loop
fdiv
repnz
out
jmp
repz
push
stos
jcxz
mov
xchg
pop
dec
jae
and
and
iret
out
mov
sbb
dec
mov
loope
retf
ins
inc
test
mov
cmp
mov
add
dec
sbb
mov
mov
cli
push
sbb
das
retf
dec
xor
(bad)
movs
or
pop
jp
jae
push
(bad)
std
repnz
(bad)
and
mov
mov
mov
or
iret
(bad)
cmps
mov
inc
into
push
push
call
xor
scas
call
or
pop
push
sbb
out
cld
fwait
stos
push
ret
std
inc
test
in
sub
adc
pop
call
test
dec
mov
and
loope
or
sbb
loopne
sbb
mov
dec
pop
dec
jg
xchg
clc
aaa
addr16
aaa
outs
mov
popa
test
js
(bad)
fs
add
cmp
test
sbb
mov
mov
add
push
xchg
jb
mov
inc
int3
ret
sbb
add
mov
imul
mov
jp
movs
adc
das
or
push
sbb
cs
(bad)
shr
jge
test
sub
imul
icebp
xor
mov
inc
(bad)
shl
mov
xchg
jae
aas
iret
dec
call
test
sub
mov
mov
xchg
out
sub
shr
mov
pop
loop
js
dec
test
jo
mov
in
xor
adc
and
(bad)
and
(bad)
adc
push
push
enter
or
fist
pop
jnp
or
inc
aaa
ja
mov
inc
add
push
jp
and
mov
loop
lock
xchg
inc
push
mov
dec
in
sub
sbb
dec
cmp
inc
push
jnp
movs
std
mov
dec
and
pushf
adc
aaa
lea
mov
mov
mov
lods
or
mov
fwait
test
ret
dec
and
dec
mov
loope
sbb
fst
in
mov
jp
stos
or
movs
ins
add
cwde
mov
(bad)
dec
mov
mov
mov
push
das
dec
jl
aam
push
rol
and
sti
add
call
fild
test
lahf
add
jle
mov
loope
and
fild
mov
xchg
lds
adc
mov
sti
mov
popf
or
retf
jbe
xor
inc
jns
add
cld
mov
pop
cli
sbb
call
mov
dec
scas
je
push
sub
sbb
xlat
stc
int
inc
jb
mov
data16
(bad)
pop
repz
jecxz
movs
push
data16
xchg
xor
pop
inc
pop
out
inc
and
cdq
ds
in
ss
dec
and
daa
lods
push
sbb
scas
out
add
jmp
test
cs
ror
bt
mov
test
fs
cmp
pop
or
test
jmp
test
addr16
loopne
pusha
dec
ss
into
push
out
xchg
imul
ins
jb
cdq
cmp
sbb
mov
jmp
ss
and
stc
(bad)
cmp
push
je
add
and
xchg
js
in
(bad)
fimul
cmps
and
retf
frstor
std
pop
aad
clc
add
cwde
std
stc
out
pop
lahf
dec
xchg
ret
dec
mov
xchg
cmp
mov
gs
pop
dec
mov
mov
ret
sub
add
into
dec
push
sahf
stc
std
cmc
clc
call
mov
mov
(bad)
mov
scas
pop
push
fdivr
jge
cmp
cmps
lock
or
pop
push
sbb
add
push
div
in
sbb
pop
retf
mov
jecxz
rcr
pop
dec
sub
mov
std
xchg
xchg
repnz
push
cmps
and
dec
mov
jb
or
into
sub
ret
cmp
mov
test
cmp
or
aam
dec
mov
stos
push
adc
movs
(bad)
sti
xchg
outs
sbb
(bad)
in
(bad)
xlat
inc
mov
sub
imul
fisttp
dec
pop
cs
ins
push
push
sub
xchg
add
jg
jle
push
add
adc
pop
pop
sub
cdq
push
mov
fbld
jae
dec
xchg
sub
pop
cmps
call
lahf
push
fldenv
mov
adc
cmp
out
int3
dec
push
mov
fwait
fwait
jne
in
hlt
ins
mov
dec
mov
cmp
jg
fadd
icebp
bound
mov
stos
inc
sar
out
sub
bound
jae
sbb
test
dec
pop
in
add
aam
aad
cld
xor
and
cmp
clc
sub
fmulp
xor
adc
mov
out
adc
lods
pop
pop
(bad)
daa
add
mov
stos
jle
rol
cmp
ss
mov
out
sar
inc
popf
push
popa
out
fiadd
xchg
pop
cmc
imul
pushf
push
ins
mov
outs
in
repz
aad
(bad)
mov
jg
adc
mov
out
in
push
jecxz
sbb
ss
outs
push
or
loope
jo
setnp
clc
push
jmp
dec
fcom
in
fild
popa
pop
inc
or
cmps
jle
es
jbe
or
or
xchg
fs
int3
(bad)
shr
adc
inc
mov
dec
and
adc
(bad)
jmp
xor
dec
fdivrp
mov
iret
push
xor
je
test
inc
fwait
push
rcl
add
push
test
xchg
fdivr
xchg
mov
jae
mov
push
push
lods
je
push
shr
call
cmps
outs
stc
inc
xchg
mov
mov
mov
add
pop
push
fsubrp
pop
int
or
popf
popf
cli
xor
nop
mov
pop
cmp
mov
jmp
loope
cld
loop
rcl
fst
mov
pop
push
(bad)
fcmovnb
push
cdq
push
scas
jmp
jb
(bad)
push
les
pop
stc
stos
shl
and
sbb
jno
icebp
bnd
lahf
cmc
daa
aas
or
jo
js
outs
push
adc
and
sub
aaa
scas
and
xlat
pop
cmps
repz
add
push
ficom
mov
in
cmp
mov
fdiv
mov
cmp
pop
add
dec
jp
(bad)
stos
aam
test
aad
mov
mov
stos
cmps
pop
dec
jne
jle
jbe
and
inc
ja
dec
popa
pop
cmc
test
addr16
sbb
sbb
out
out
cwde
mov
xor
ins
enter
xchg
stos
push
ret
lds
cwde
jl
xor
scas
or
pop
inc
mov
push
aas
xor
retf
aam
mov
adc
imul
jmp
lds
(bad)
fadd
pop
fwait
imul
jg
inc
(bad)
mov
les
mov
or
cmp
jbe
fsubr
jle
lock
stc
sar
sub
jnp
sbb
and
add
dec
int3
inc
(bad)
and
call
sub
mov
push
test
jno
cmp
jne
pop
addr16
push
adc
fs
push
jb
mov
fs
xchg
fsub
inc
call
add
jle
test
call
in
(bad)
mov
jo
arpl
scas
dec
repnz
xchg
dec
add
sub
sub
and
mov
and
loop
and
push
scas
sub
jle
cmp
fidivr
movs
clc
clc
int3
(bad)
aaa
xchg
mul
aaa
add
and
int3
(bad)
ins
push
pushf
jmp
xchg
push
test
ja
pop
dec
cmp
mov
push
test
mov
(bad)
int3
lods
jns
mov
arpl
mov
stos
cwde
rcr
mov
cmp
icebp
fidivr
mov
jl
pushf
sbb
mov
ret
aaa
mov
xchg
push
stc
xor
(bad)
push
sub
push
inc
pusha
inc
dec
popa
add
in
(bad)
pop
mov
sbb
outs
retf
mov
jp
adc
lds
clc
xchg
test
jmp
pop
sar
mov
xor
call
pop
sub
mov
popf
fadd
inc
mov
cmps
(bad)
mov
shl
stos
mov
enter
ss
xacquire
mov
es
or
mov
sub
pop
ss
sbb
inc
out
push
cmp
mov
dec
aad
sub
lock
jmp
pop
scas
clc
loope
jmp
mov
cmp
xor
das
mov
in
pop
loopne
push
in
and
in
or
inc
adc
jge
jno
in
mov
jo
test
cmp
sub
cmp
into
pop
fisttp
mov
(bad)
mov
imul
xor
js
sbb
mov
int3
rcl
adc
add
lahf
mov
adc
cdq
mov
sub
addr16
mov
or
rol
mov
test
lahf
mov
lods
div
fiadd
clc
jno
push
mov
or
mov
out
inc
xchg
outs
aaa
cmc
xor
mov
fs
pop
jbe
std
push
addr16
outs
add
mul
sub
push
hlt
in
jle
inc
jl
psubw
lds
cmp
and
das
int3
js
jae
movs
popa
addr16
div
cmp
fidiv
sbb
(bad)
into
jae
fadd
dec
lods
aas
ret
aas
stc
test
repz
push
add
mov
aam
jne
sar
jmp
sub
and
push
sbb
inc
adc
mov
cmps
jge
daa
test
inc
add
shl
imul
pop
mov
out
inc
cmp
es
gs
ja
mov
jno
push
adc
fs
in
jp
push
xchg
shl
adc
(bad)
test
mov
inc
(bad)
or
test
rol
sub
in
int
cwde
push
push
push
push
jl
sbb
cmps
adc
cmps
sqrtps
xchg
loope
mov
cmc
jnp
loop
sahf
loope
jns
jge
push
dec
aam
mov
inc
inc
test
xor
xchg
push
lock
dec
mov
dec
or
movs
xor
cli
sub
lods
and
pop
inc
pop
test
ficomp
push
loop
mov
mov
ins
sahf
mov
lods
sbb
ins
rol
cld
mov
push
ret
fadd
ret
sbb
adc
mov
push
cmp
retf
retfw
nop
dec
mov
mov
sub
push
push
inc
mov
fcom
xlat
call
imul
cwde
fstp
xchg
xchg
sub
int
push
shr
jns
xor
outs
out
aam
mov
and
and
cmps
cmp
push
clc
inc
retf
cmp
push
pop
xchg
dec
add
ds
jno
cwde
dec
hlt
je
nop
mov
xlat
xchg
sbb
lods
mov
cmc
std
sub
mul
mov
push
and
movs
arpl
test
add
jae
js
push
int
cmp
push
add
push
sbb
loope
(bad)
lahf
int3
arpl
dec
adc
(bad)
mov
repz
retf
aas
mov
jo
sub
cdq
pop
js
and
out
xchg
ror
lds
mov
mov
popa
fld
push
or
add
clc
cli
loopne
lods
mov
test
add
les
in
jmp
int
pop
ror
sti
cld
cmps
mov
(bad)
mov
imul
push
jae
sahf
fnsave
in
iret
pop
jg
and
ror
aad
das
fidivr
in
jg
adc
cwde
xchg
(bad)
mov
xchg
add
mov
jecxz
cmps
bound
adc
neg
lock
inc
mov
cs
lods
retf
jecxz
adc
leave
cmc
xchg
aam
js
push
mov
push
sbb
jmp
scas
push
adc
pop
(bad)
mov
test
ins
add
lea
add
call
inc
jne
imul
rep
inc
xor
inc
movs
add
fwait
xchg
in
mov
sub
dec
popa
out
push
inc
mov
iret
push
iret
test
mov
mov
jl
outs
jmp
cli
adc
mov
mov
pop
imul
inc
enter
sub
jmp
mov
out
cld
sar
(bad)
jmp
pop
in
xchg
aad
xchg
fild
daa
popf
jno
add
loope
(bad)
fcomp
imul
int
fld
sbb
outs
dec
add
fnstenv
icebp
cmp
push
daa
mov
(bad)
test
ins
std
nop
push
stos
mov
fisttp
push
mov
xor
inc
imul
add
push
sbb
pop
jns
xchg
(bad)
js
inc
xor
mov
repnz
cmp
(bad)
add
fstp
scas
clc
pop
jns
sub
ss
fist
stos
push
out
jmp
xor
call
fcomp
ret
ins
cmps
aam
out
leave
repnz
xchg
mov
(bad)
mov
sub
stos
shl
fcmovnbe
inc
in
retf
sbb
push
popa
jle
popa
test
dec
adc
cmps
cmp
inc
xor
jne
loopne
ins
inc
scas
lahf
int
shr
jmp
call
arpl
push
jb
inc
int
in
out
outs
aam
fld
jge
dec
loopne
inc
inc
bound
or
jb
xchg
test
jne
push
pop
and
cld
imul
movs
movs
test
adc
cs
inc
add
mov
outs
out
rol
in
repz
enter
mov
jo
inc
shr
xchg
push
inc
aaa
mov
xchg
sbb
jecxz
scas
jbe
loope
pop
dec
out
mov
scas
lods
push
push
in
pop
mov
(bad)
stos
test
lods
sbb
push
int3
scas
ins
dec
stos
sub
aas
sub
sbb
pop
jecxz
or
jmp
test
xlat
test
adc
fadd
dec
mov
in
leave
mov
cli
add
inc
ja
test
add
je
sbb
adc
shl
test
js
leave
mov
mov
jge
icebp
scas
push
into
and
popf
repnz
ins
cld
pop
fimul
mov
or
mov
out
sbb
add
int
out
pushf
mov
pop
cmps
or
cmps
loopne
jl
push
retf
xor
mov
das
adc
push
and
dec
dec
fistp
stos
cs
imul
mov
pop
sti
call
mov
repz
addr16
ret
cmps
jmp
imul
cmp
stos
mov
loope
out
sub
jp
and
xlat
retf
lea
jg
out
cmp
xor
jecxz
mov
popa
mov
mov
stos
or
test
pop
fdivr
push
call
popf
push
and
mov
or
push
retf
mov
shl
(bad)
pop
add
mov
pop
mov
lahf
(bad)
std
sbb
mov
jmp
retf
imul
into
push
sbb
popf
jge
fld
pop
gs
xor
sahf
aaa
adc
popa
test
lods
xchg
and
or
sbb
ficom
int3
movs
add
call
lock
push
data16
mov
cmps
or
cdq
mov
xchg
lahf
adc
dec
pop
cmp
dec
inc
icebp
shl
xchg
or
test
push
stos
les
sub
js
loop
cmp
cmp
jp
or
jns
rcr
inc
stc
sahf
sub
mov
dec
icebp
inc
pop
xor
inc
or
arpl
mov
pusha
fst
mov
test
ins
repz
int
xchg
in
mov
stc
inc
add
jp
xor
mov
mov
loope
adc
in
xchg
ins
add
add
pop
(bad)
mov
call
(bad)
fdiv
add
xchg
aad
xchg
aad
pusha
ins
in
sbb
pushf
dec
cmp
pop
push
retf
jp
in
addr16
mov
fidivr
cdq
mov
mov
push
fidivr
mov
lea
push
ss
pushf
cmp
push
and
mov
or
fiadd
jl
outs
outs
stos
xchg
and
inc
mov
sahf
(bad)
fcomp
sti
test
jbe
lods
adc
and
fsub
rcr
ins
out
aad
clc
stos
adc
in
mov
aas
pusha
mov
je
outs
mov
mov
xchg
popa
mov
popf
das
jmp
loopne
pop
imul
push
lea
clc
dec
ss
jmp
arpl
mov
or
mov
mov
adc
jb
movs
shl
shl
pop
lods
ror
aam
test
(bad)
mov
ins
cs
stos
ror
imul
(bad)
cli
inc
pop
lods
xor
das
mov
nop
adc
dec
sar
mov
loope
ds
retf
mov
ret
mov
bound
xchg
in
(bad)
mov
cmp
fist
sub
sub
dec
leave
fucomip
jno
inc
fwait
mov
iret
outs
cdq
dec
inc
xchg
sub
push
mov
mov
sub
mov
xchg
mov
mov
pushf
sbb
add
inc
pmaxsw
inc
repnz
je
repz
mov
in
loope
pop
mov
xchg
mov
ja
in
sub
jmp
xor
mov
sub
in
pop
xchg
lds
mov
mov
cdq
jp
jnp
and
jp
inc
lods
fmul
mov
stos
test
imul
(bad)
fwait
aaa
push
jecxz
repz
ins
inc
fs
mov
mov
out
mov
mov
push
icebp
call
dec
data16
dec
mov
test
arpl
mov
jns
add
sahf
clc
push
xchg
bound
mov
call
push
adc
pop
fistp
not
xchg
add
and
or
je
fisttp
in
xchg
sub
inc
leave
mov
jno
pop
retf
lods
(bad)
fidivr
jmp
(bad)
out
out
xchg
sbb
mov
fidiv
or
sub
pop
aaa
sahf
jle
cmps
(bad)
or
shl
jne
and
and
add
and
test
mov
dec
sub
push
popf
add
pop
call
sbb
in
popa
ss
xchg
call
aaa
enter
je
not
mov
lds
mov
shl
cmps
adc
jo
hlt
mov
(bad)
js
ror
xchg
js
cmps
pop
rcl
or
and
sub
add
sub
pusha
call
test
lock
cwde
jge
xor
div
sub
sti
fucomi
dec
mov
scas
call
mov
loopne
mov
dec
rcr
sbb
mov
test
out
mov
mov
cmc
je
fistp
rcl
mov
dec
aam
ret
(bad)
ret
or
pushf
test
sbb
outs
jg
xor
(bad)
xor
lods
mov
loop
sub
mov
imul
or
mov
dec
xchg
cmp
push
mov
retf
dec
inc
cmp
mov
cmp
enter
test
clc
retf
data16
daa
data16
push
jp
mov
pop
fld
xchg
mov
dec
pop
sub
ins
pop
aas
cmp
lahf
dec
jno
lock
push
sub
push
js
out
nop
and
jmp
ins
and
push
loop
mov
and
or
xchg
ss
xchg
sub
mov
aaa
rol
xor
sbb
adc
loope
test
fild
(bad)
call
jle
add
or
xchg
mov
test
out
and
(bad)
fild
push
xchg
movs
in
add
cmp
and
fidiv
into
push
xor
das
push
xchg
in
aad
and
and
add
add
pop
lds
adc
xor
sbb
aad
jns
fwait
sar
xor
dec
jle
dec
lock
sub
mov
sbb
fwait
xor
cmps
mov
cli
dec
sbb
cmp
ror
movs
sbb
shr
adc
add
cmp
popf
jns
add
dec
and
push
aam
test
out
fld
or
sbb
jg
sti
aaa
cmp
and
adc
inc
outs
loopne
fdiv
cmp
pop
and
aad
mov
adc
stos
retf
jne
mov
das
sub
ret
dec
mov
sub
into
jge
in
dec
pusha
push
cmp
add
sbb
adc
arpl
cs
loope
mov
out
out
or
xchg
loopne
xchg
sub
sbb
and
(bad)
(bad)
scas
outs
xchg
fs
or
and
ficom
push
aad
pop
push
pop
pushf
sahf
outs
dec
push
(bad)
jmp
addr16
sbb
sub
rol
inc
cmp
fcmove
repz
scas
int
scas
inc
xchg
sbb
mov
cmp
sbb
loope
push
xlat
sub
push
sub
jle
xchg
push
push
cld
retf
ret
cmp
pop
cld
scas
(bad)
dec
call
imul
hlt
xor
jle
out
lds
pop
push
dec
xchg
adc
add
push
sbb
inc
retf
test
xlat
cmc
iret
outs
jne
dec
or
push
inc
mov
mov
test
ror
inc
or
(bad)
sub
xchg
mov
icebp
adc
test
ret
mov
xor
lods
mov
pop
shr
std
repnz
sub
push
xchg
daa
lahf
sub
or
xchg
jnp
call
add
(bad)
out
sbb
test
xchg
mov
gs
test
dec
clc
mov
add
cwde
inc
pop
popf
adc
and
outs
sub
push
jns
sub
sbb
movs
inc
mov
xor
and
stos
mov
in
lods
jp
cmps
dec
lds
ins
xchg
push
pop
push
jecxz
mov
push
add
ficomp
inc
or
push
sbb
xchg
cmp
leave
jno
in
mov
or
inc
or
sbb
jo
test
dec
(bad)
jecxz
sbb
idiv
push
add
out
and
ja
call
mov
cmp
mov
shr
and
gs
es
dec
push
mov
dec
or
jne
cmp
test
ins
test
pop
sbb
int
xchg
les
mov
xchg
cld
jl
out
ficomp
adc
pop
sbb
bound
mov
(bad)
call
ret
enter
and
add
daa
aas
hlt
arpl
mov
imul
cmp
inc
popa
push
push
dec
and
fwait
jmp
inc
mov
out
jecxz
xchg
jg
rcr
mov
lods
or
xchg
in
js
sub
cmp
mov
mov
inc
jle
rcr
pop
inc
arpl
push
pop
xchg
cmp
por
push
mov
xchg
(bad)
stc
cdq
mov
pop
sbb
imul
ret
retf
xor
in
push
jecxz
leave
aas
stos
addr16
cmp
shl
aaa
xchg
mov
lods
sbb
lock
aaa
push
sbb
or
add
adc
das
sahf
jnp
cmp
xchg
sbb
jmp
mov
pop
inc
outs
add
jle
cli
dec
inc
inc
mov
sti
mov
call
sar
dec
daa
scas
jle
nop
fisub
imul
lods
enter
mov
mov
pop
push
push
out
gs
mov
mov
pop
mov
xlat
fistp
stos
loop
outs
xchg
js
retf
inc
mov
cmc
call
sub
out
xor
fwait
leave
fisub
or
jns
test
mov
mov
mov
test
push
jmp
fs
dec
sub
outs
sbb
pop
xor
sub
xchg
dec
xchg
jo
test
adc
add
add
repz
cmp
imul
push
lods
xchg
(bad)
iret
adc
imul
xor
out
jecxz
dec
jns
enter
sub
push
cmp
fild
loope
mov
fs
cmc
mov
inc
and
xor
lahf
pop
out
push
mov
mov
fs
xor
inc
addr16
add
push
repz
cmp
loope
and
or
les
fld
inc
leave
push
jo
into
fs
fsubr
mov
ret
or
push
sub
cmp
push
add
mov
lods
movs
push
popa
xor
cmp
loope
nop
jns
sbb
cmovle
sbb
push
out
pop
cmp
adc
xchg
cwde
int
cmp
test
(bad)
(bad)
leave
inc
adc
mov
xor
mov
mov
pop
dec
outs
popf
loopne
mov
mov
jg
xor
mov
movs
popa
hlt
inc
stc
sub
cmc
add
mov
loopne
repnz
test
sbb
test
ins
daa
xchg
sbb
das
ret
push
xchg
stos
sub
loop
addr16
dec
sub
ret
cmps
(bad)
push
inc
add
repz
jb
pop
adc
or
mov
or
popa
in
into
mov
shr
rcr
push
jne
adc
cmp
cld
fwait
and
jmp
push
je
xchg
fiadd
add
pop
push
xchg
adc
mov
fs
in
inc
clc
stc
jno
jns
push
sub
jmp
(bad)
pushf
leave
pop
addr16
push
ret
jle
lea
rol
icebp
sbb
mov
xor
mov
out
push
loopne
mov
in
repz
push
ficomp
aam
mov
rcr
push
mov
movs
sub
mov
(bad)
pop
push
jo
mov
cmp
mov
rol
push
stos
int3
push
inc
test
adc
(bad)
fmul
sub
lods
jae
xor
loope
rcr
and
aaa
(bad)
repnz
les
pop
pop
enter
pop
into
mov
frstor
(bad)
rcr
mov
call
adc
(bad)
js
sub
dec
jmp
jecxz
jnp
dec
adc
pop
sahf
mov
or
xchg
(bad)
lahf
fs
bound
call
(bad)
jmp
lods
mov
int
inc
neg
retf
push
(bad)
ror
xor
daa
es
fstp
xadd
push
lock
adc
or
sub
retf
mov
std
or
or
push
cmp
push
int3
rol
retf
sar
adc
test
inc
fld
jmp
xor
xchg
add
outs
int3
sbb
xor
lods
xchg
sub
fs
stos
shl
cld
jbe
js
in
rol
jo
inc
sub
and
jbe
mov
xor
cs
mov
jge
add
cmp
out
xlat
cs
xchg
sbb
inc
sbb
mov
or
in
push
sub
rcl
inc
loope
stc
inc
xor
mov
dec
in
mov
sub
cwde
adc
jecxz
dec
call
dec
jmp
xor
iret
cmp
add
cmps
mov
repz
fisttp
ficomp
movs
or
push
mov
je
ret
call
xor
push
icebp
int3
adc
xchg
cli
(bad)
frstor
and
fs
neg
mov
mov
popa
or
mov
jmp
jbe
jle
mov
pushf
mov
sahf
cs
cmps
mov
push
add
mov
xchg
jb
jle
add
sbb
sub
out
jecxz
push
and
fsub
ss
lods
dec
inc
xchg
sub
aad
pop
sbb
cmp
popa
pop
retf
jnp
cmps
push
cmp
cmp
dec
mov
mov
xchg
jmp
mov
arpl
push
push
aaa
outs
cmps
xor
adc
in
outs
ins
imul
retf
sbb
dec
ja
rcr
jl
pusha
cmp
jnp
adc
xlat
push
lds
fistp
int3
lea
ret
jae
inc
out
jecxz
and
out
(bad)
sbb
test
mov
int
dec
cmp
jecxz
add
gs
shl
js
je
pop
mov
xor
cli
lock
in
sbb
iret
inc
cmps
push
add
dec
loope
mov
aas
mov
pop
enter
std
call
dec
sti
adc
retf
pop
(bad)
push
mov
push
inc
push
and
(bad)
fst
das
jmp
mov
mov
pop
sub
dec
jp
dec
xor
xchg
mov
cli
clc
loop
jle
adc
in
mov
adc
pop
ja
cdq
sahf
outs
dec
jecxz
inc
jp
cs
pop
inc
lods
fs
push
inc
test
sub
test
int3
les
arpl
out
(bad)
mov
addr16
cmp
mov
push
pop
ins
lahf
shl
(bad)
int
ss
iret
arpl
shl
dec
loop
lds
xor
call
cmp
les
gs
in
mov
mov
sub
pop
js
enter
call
dec
or
push
call
out
in
pop
jge
inc
pop
shl
stos
mov
cmp
mov
xchg
xor
jnp
or
leave
(bad)
ins
cmp
sbb
mov
xchg
(bad)
sti
push
cmps
push
cmps
push
sub
repz
pop
cmp
out
in
repnz
xchg
push
outs
mov
fwait
push
sar
test
nop
xchg
sub
push
rcr
enter
push
(bad)
xlat
sub
mov
fadd
hlt
fwait
lds
mov
xchg
hlt
mov
(bad)
(bad)
(bad)
pop
sub
sbb
popf
enter
mov
push
mov
xor
repz
(bad)
push
stos
cwde
imul
retf
bound
push
fbld
lods
cdq
call
xchg
push
aaa
xchg
xchg
aaa
and
mov
sub
inc
cwde
jo
adc
jmp
fdivr
mov
cmp
imul
mov
outs
fcom
aaa
jge
ret
ficom
retf
push
data16
push
pushf
add
test
das
stos
or
xor
dec
lods
int3
add
(bad)
jp
mov
mov
shl
popf
loope
mov
add
ja
push
sahf
sub
mov
je
or
scas
fwait
sahf
pop
rcl
pushf
sub
cmp
sub
je
dec
in
mov
(bad)
sub
pop
loopne
mov
mov
xor
cmps
arpl
mov
or
ins
jns
pop
cmc
(bad)
imul
clc
and
mov
jmp
sbb
pusha
(bad)
enter
ret
clc
clc
mov
jbe
or
outs
jne
test
pop
imul
add
neg
jg
(bad)
push
push
(bad)
sbb
jp
(bad)
aad
jecxz
rcr
cmp
add
sahf
push
dec
sti
repz
mov
sbb
imul
mov
jmp
inc
push
test
(bad)
test
jno
mov
pop
(bad)
fbstp
cs
or
inc
nop
push
pusha
mov
jmp
mov
mov
add
sbb
mov
inc
iret
add
test
retf
pop
nop
dec
arpl
adc
adc
mov
ja
fcmovu
fwait
dec
idiv
out
pop
push
frstor
pop
mov
jle
inc
adc
test
pusha
mov
lods
cli
sub
addr16
and
popf
mov
pop
jp
lahf
mov
dec
jp
sar
push
out
xchg
popa
fmul
fist
push
jle
mov
call
int
repnz
jg
jmp
test
mov
push
inc
aaa
repnz
nop
pop
cli
mov
mov
push
in
xor
pop
mov
rcl
sar
push
stos
in
dec
out
inc
xchg
or
cmp
retf
jb
jae
jne
sbb
xchg
rcl
mov
inc
mov
retf
int3
mov
dec
sbb
(bad)
aas
je
mov
xor
bound
adc
rcl
jo
xor
fdiv
pusha
cmp
push
aaa
fsubr
pushf
jmp
jmp
push
frstor
push
sub
xor
xchg
sti
push
stc
inc
add
mov
mov
out
dec
pop
cmp
inc
scas
push
rcl
fs
pop
adc
jmp
dec
mov
add
mov
mov
mov
cmps
sub
inc
pop
cli
fimul
sbb
(bad)
lahf
xlat
or
call
mov
xor
loopne
es
cs
imul
adc
cmp
inc
aad
push
mov
cs
lahf
fcomp
aam
cwde
test
push
inc
fimul
or
cmc
test
lock
add
jmp
ins
xor
fisub
call
and
test
fadd
fsubr
dec
mov
outs
scas
ja
inc
mov
jmp
adc
add
xchg
add
in
cmps
cli
pop
mov
bound
sti
inc
sbb
stos
xchg
xor
retf
shl
dec
jmp
je
loop
scas
push
pop
lods
test
fstp
in
popf
stos
mov
out
into
push
aaa
mov
loop
shl
mov
dec
mov
rcr
gs
dec
inc
imul
cli
mov
xchg
and
ficomp
ins
push
lea
sbb
enter
mov
pop
mov
mov
add
cmp
lods
xor
call
push
icebp
in
push
aam
not
or
xor
jecxz
nop
(bad)
rol
push
dec
push
mov
push
(bad)
test
repnz
call
dec
data16
ss
push
lahf
inc
inc
dec
mov
dec
dec
pop
cmps
dec
mov
je
dec
arpl
fwait
test
aad
pushf
fmul
stc
adc
iret
xchg
xor
mov
xchg
(bad)
pop
xlat
or
in
cs
mov
lds
cmp
fwait
inc
lea
out
mov
pop
jb
xor
xor
push
jecxz
sub
pop
rol
mov
aaa
mov
popa
push
cmc
push
ret
mov
cmp
sub
inc
test
retf
cld
mov
inc
repz
push
pop
pop
jecxz
out
push
lock
dec
cdq
jg
int3
mov
popa
jb
mov
and
cmp
lods
je
jne
and
and
cmp
xchg
hlt
lock
xor
stc
adc
mov
xchg
push
and
lock
jmp
vsqrtss
or
jp
xchg
loope
or
js
push
cli
push
ja
jne
push
mov
mov
dec
gs
mul
fdivr
xchg
pop
sub
sbb
xrelease
aam
cli
and
mov
adc
mov
shl
pop
push
jecxz
inc
aam
sub
inc
adc
mov
cwde
loop
stc
es
cmp
push
sub
jmp
cmc
lea
call
ret
inc
push
sub
push
push
jecxz
xor
je
adc
add
inc
jmp
icebp
addr16
jg
add
mov
cs
imul
call
stos
push
fistp
push
xor
popa
fsubrp
ret
ins
loop
imul
push
push
jl
cmp
push
inc
push
rol
fisub
hlt
mov
repnz
ret
jno
xchg
loop
dec
mov
movs
add
addr16
jne
adc
out
aad
loopne
pop
fcomp
jl
leave
retf
in
inc
jl
cmp
jle
mov
lahf
rol
or
int
sahf
cwde
pop
and
iret
dec
jmp
cmps
call
push
jne
sub
fwait
xor
bound
call
pop
out
sub
subps
pop
push
cmp
mov
xlat
sub
xchg
fnstenv
leave
sub
or
xor
outs
and
(bad)
or
inc
add
sbb
fisttp
xchg
and
iret
iret
adc
push
pop
sub
xor
jmp
(bad)
jge
dec
dec
xor
popf
or
iret
mov
test
in
mov
add
and
hlt
mov
add
dec
fdivr
pop
push
mov
and
fldenv
and
sbb
(bad)
jnp
cmp
sbb
clc
outs
cmp
mov
ins
repz
inc
xlat
mov
dec
rcr
retf
lods
(bad)
repz
pop
and
and
pop
pop
in
and
nop
and
dec
fwait
pop
mov
sub
ret
sbb
mov
imul
iret
mov
mov
(bad)
pop
push
pusha
pop
leave
pop
lock
dec
loop
xchg
mov
not
cmc
dec
not
cmp
push
call
cli
lods
adc
call
cmp
adc
dec
retf
pop
ins
lds
jecxz
adc
jge
jb
sbb
push
mov
sbb
mov
ror
jl
adc
pop
ins
jmp
lea
push
pop
lods
xor
call
or
ror
sar
add
div
mov
xor
xor
loop
push
mov
jecxz
push
adc
push
jmp
push
adc
add
ror
ret
in
pusha
sub
test
loope
dec
test
mov
mov
jge
adc
loop
es
mov
jbe
enter
inc
std
push
sbb
dec
inc
ror
fst
push
inc
jae
jmp
test
test
mov
mov
pop
xchg
mov
jb
rcl
inc
sub
cs
add
les
xchg
int3
nop
cmp
(bad)
nop
pop
add
push
js
dec
fcomp
xor
jp
repz
popa
ret
adc
push
push
lock
dec
ss
in
ficomp
mov
jb
inc
lods
pop
adc
cmp
mov
jmp
inc
mov
mov
mov
xchg
hlt
add
jb
mov
and
lods
mov
lahf
lahf
jmp
adc
(bad)
xlat
daa
xchg
neg
test
jo
jg
dec
mov
adc
push
sti
cs
mov
or
cmpxchg8b
(bad)
retf
xor
inc
sub
je
outs
outs
cld
and
(bad)
xchg
push
adc
and
mov
(bad)
mov
rcl
sbb
xchg
in
push
in
fwait
mov
dec
jno
inc
xchg
mov
inc
dec
xlat
loopne
pop
dec
hlt
out
mov
or
div
xchg
stos
cld
push
lds
mov
ins
inc
mov
jle
sbb
sub
mov
cld
arpl
mov
scas
sbb
movs
inc
aam
(bad)
push
and
jns
inc
mov
les
test
sahf
or
sbb
add
mov
cmp
into
rol
cmp
inc
cwde
cmp
sub
push
outs
popa
jmp
popa
cli
pop
xchg
inc
sar
mov
or
dec
out
loopne
mov
cmp
js
xor
mov
push
jb
jmp
pop
xor
adc
shl
mov
mov
pop
gs
cmps
mov
add
jae
cmc
inc
cmps
pop
xchg
mov
pop
mov
arpl
mov
jae
mov
cmp
cs
dec
jl
and
xlat
mov
shr
icebp
data16
and
dec
push
or
xchg
in
cmp
mov
enterw
jo
sbb
and
stos
push
push
popa
(bad)
jae
out
lods
jmp
mov
neg
xchg
lahf
icebp
push
inc
xchg
pusha
adc
and
mov
pusha
dec
mov
adc
sbb
lock
push
jmp
dec
es
and
fwait
pop
mov
imul
mov
xchg
fs
sbb
loop
mov
mov
test
cmp
enter
loope
mov
cmps
jp
dec
pop
cmp
mov
ins
mov
mov
add
imul
adc
sbb
ror
fwait
pusha
or
mov
lock
js
neg
icebp
mov
loopne
jle
sti
mov
clc
cmp
les
jb
and
cmp
jno
add
fild
dec
xchg
mov
inc
and
mov
inc
mov
xchg
sub
adc
mov
add
cwde
pushf
add
sub
outs
sahf
mov
cmp
jmp
mov
push
mov
xor
cdq
cmp
mov
jo
retf
loopne
clc
int3
bound
loop
movs
enter
repnz
ret
push
in
cmc
mov
and
mov
or
jmp
repnz
xor
neg
add
leave
push
adc
add
inc
popa
push
pop
add
ret
adc
dec
dec
stc
xor
adc
push
daa
cmps
xchg
mov
sub
scas
mov
les
(bad)
mov
sub
or
imul
dec
dec
shl
(bad)
jae
call
xor
addr16
aas
or
push
dec
pusha
sub
sub
js
pop
enter
mov
(bad)
bnd
movs
mov
into
add
mov
(bad)
enter
imul
sub
push
cmp
scas
cs
jle
xchg
xchg
daa
ret
sbb
aaa
ret
xchg
dec
xchg
cld
sbb
pop
xchg
or
inc
jge
cmp
stos
pop
mov
out
add
xchg
les
aad
arpl
xchg
push
mov
popf
loope
cmp
fcomp
push
pop
dec
idiv
retf
or
rcl
sub
js
jbe
dec
xchg
in
fldcw
and
imul
jecxz
jl
scas
inc
call
sub
xchg
ins
cmp
std
mov
fs
jbe
int3
lock
jle
icebp
nop
es
xchg
mov
repz
xchg
inc
jl
cmps
xor
in
adc
ja
js
sbb
(bad)
out
jmp
popa
mov
dec
cmp
push
scas
retf
jae
fwait
adc
cli
pop
mov
test
mov
popf
xchg
arpl
outs
pop
aas
lahf
aaa
vpsadbw
fstp
jno
lahf
imul
jl
js
std
test
mov
inc
mov
add
cli
push
pop
das
mov
sbb
sub
xchg
mov
mov
dec
pop
fnstcw
sub
(bad)
jne
test
dec
mov
dec
fwait
imul
adc
mov
or
int
jne
aas
in
shr
jns
daa
pop
(bad)
sbb
les
mul
and
sbb
in
and
push
mov
(bad)
and
cmps
inc
add
xor
sbb
xchg
bound
fstp
fldl2t
pop
ror
jne
xchg
movs
rcl
add
loop
call
icebp
mov
push
pop
push
push
ja
and
dec
shl
push
cmp
xor
test
jp
dec
and
jle
mov
pop
arpl
fisubr
add
push
cmps
shl
test
jns
jl
in
pop
lss
or
mov
fnstsw
xor
inc
mov
test
mov
push
mov
rol
sub
mov
js
mov
push
inc
fadd
xchg
mov
push
test
inc
aad
adc
mov
mov
cdq
jb
xor
jmp
push
in
loopne
lods
and
loope
jmp
add
call
mov
out
add
lea
jnp
cmp
jmp
push
les
mov
in
xor
push
push
outs
xchg
repz
cmps
or
and
mov
jb
into
or
call
or
mov
imul
add
dec
mov
loope
add
sar
cmp
sub
mov
add
out
mov
ds
jae
pop
add
jns
inc
jno
andps
inc
les
xor
and
jno
adc
adc
mov
rcl
sub
fdivr
inc
mov
out
push
pop
in
out
fisttp
jmp
jbe
inc
dec
movs
xchg
xor
jl
not
retf
sbb
cmc
push
pop
addr16
imul
add
je
jl
in
mov
push
ja
or
inc
in
or
adc
dec
cmp
add
gs
mov
cmovp
das
jbe
pop
jae
mov
int3
dec
ds
ja
xor
jmp
fidiv
je
push
mov
jae
cmp
mov
cwde
ja
jb
ret
retf
sub
out
jae
xor
mov
nop
enter
(bad)
and
dec
jmp
dec
aas
add
test
pop
loope
iret
ins
xor
retf
mov
mov
and
imul
mov
sub
mov
jecxz
and
add
or
pop
(bad)
out
(bad)
push
ds
mov
dec
cmp
scas
aam
ja
add
and
add
sub
inc
pop
(bad)
cli
xlat
repz
xor
mov
loop
pop
inc
imul
clc
scas
retf
mov
test
jnp
nop
sahf
daa
sar
mov
jbe
int
mov
add
imul
push
movs
ret
imul
xor
ss
adc
dec
pop
int3
ins
jp
out
push
sbb
add
cmc
sbb
shr
jmp
pop
dec
pop
push
xor
test
push
push
cmp
lahf
dec
jle
inc
mov
mov
pop
into
mov
cmp
add
cmp
pushf
leave
dec
addr16
retf
retf
mov
scas
mul
ret
movs
xor
ret
dec
cmp
jl
out
aam
fldcw
test
iret
sub
xchg
sub
pop
cmp
sbb
fisub
dec
add
(bad)
xor
ror
dec
sub
xchg
sub
inc
int
ja
and
jmp
cmc
clc
mov
imul
ins
jo
ret
mov
mov
dec
outs
mov
adc
enter
in
sti
in
in
add
pop
adc
(bad)
xor
sbb
inc
into
sub
xor
ins
jae
iret
aas
test
imul
or
xchg
scas
sahf
sbb
sbb
pop
rcl
mov
movs
les
pop
cmps
pop
pop
and
hlt
cwde
pop
fisttp
xchg
jbe
pop
int
addr16
or
pop
mov
dec
div
xchg
push
adc
push
jb
cmp
enter
push
mov
xchg
(bad)
fmul
addr16
xchg
lea
lds
dec
mov
shr
mov
push
jae
sbb
mov
mov
jp
pusha
fdivr
data16
(bad)
in
jge
add
sub
call
dec
call
mov
mov
add
jne
inc
fs
out
ret
iret
push
nop
and
std
jbe
mov
std
movs
and
lods
mov
push
push
js
rol
add
sbb
adc
adc
mov
mov
arpl
repz
jg
inc
movs
pop
xchg
in
mov
xchg
and
scas
fdivr
mov
retf
rol
and
js
adc
or
sub
sbb
mov
pop
jb
mov
sbb
and
cmp
mov
(bad)
pop
neg
adc
pop
or
scas
and
sti
shl
push
int3
sti
and
pop
adc
cmp
mov
xchg
cwde
int3
sahf
mov
fwait
mov
sbb
lahf
pop
push
je
inc
mov
inc
shl
mov
sti
mov
scas
xor
mov
push
out
mov
adc
nop
inc
lds
sbb
stc
inc
add
(bad)
push
pop
xchg
jbe
das
pop
data16
xchg
add
movs
xchg
adc
mov
(bad)
ficom
sub
call
push
gs
jae
xor
dec
inc
cld
outs
pop
xor
adc
adc
daa
add
xchg
jae
popf
fwait
scas
enter
mov
daa
mov
mov
cmp
call
prefetcht0
loopne
cmps
in
daa
outs
mov
inc
fmul
xchg
or
add
xchg
stos
jmp
push
test
(bad)
out
fs
je
push
cmp
test
cwde
jo
sbb
xchg
jmp
inc
xchg
inc
stc
add
jecxz
cmps
xchg
xor
pop
dec
hlt
sub
push
popf
mov
js
xchg
jne
inc
mov
add
mov
adc
gs
xor
push
push
dec
or
xchg
jae
retf
rcr
xor
adc
sub
outs
xchg
mov
test
cmp
cmovge
add
je
addr16
push
push
outs
pop
push
enter
add
and
sbb
jno
or
lods
dec
cmp
and
bound
fmul
scas
retf
xor
cmps
out
data16
dec
adc
xchg
sar
adc
cdq
xchg
add
or
int
jae
or
in
es
popa
ret
loopne
mov
inc
xchg
sahf
adc
jns
nop
add
mov
mov
mov
mov
stos
es
shl
ds
push
(bad)
lahf
leave
jl
das
mov
(bad)
jp
mov
inc
mov
ds
movs
adc
ftst
sbb
adc
push
mov
ror
sti
adc
pusha
xor
add
cwde
shr
mov
retf
sub
enter
pop
out
push
mov
xor
aam
pop
pop
push
test
jb
scas
stc
(bad)
xchg
nop
adc
arpl
(bad)
cwde
mov
pop
inc
add
shl
cmps
xchg
jg
cmp
pop
or
(bad)
dec
fsubr
sbb
movs
or
dec
xor
inc
dec
stos
pop
fwait
xor
mov
lods
ds
test
cdq
es
lds
mov
je
pop
in
das
adc
(bad)
or
sub
mov
out
jl
popa
adc
in
xchg
sbb
in
mov
sub
inc
fwait
mov
(bad)
sbb
inc
adc
push
lods
mov
xor
(bad)
xlat
js
enter
test
sub
ret
dec
mov
fs
pop
mov
xor
or
lock
test
fld
outs
fcmovnb
call
int3
push
adc
push
sti
ins
jle
clc
mov
scas
cmps
in
mov
out
outs
aam
and
xchg
inc
mov
jno
jnp
mov
cmp
pop
xor
cs
mov
fisubr
ds
lods
adc
inc
mov
pop
jo
lock
std
sbb
ins
stc
mov
mov
cmp
push
sub
cmc
dec
ds
fldcw
pop
sbb
sbb
jno
mov
push
lods
pop
inc
icebp
sub
div
inc
(bad)
leave
mov
mov
xchg
and
fiadd
fisttp
cmp
imul
scas
mov
and
retf
push
fs
aaa
stos
mov
stc
inc
in
pop
rcr
outs
jae
jecxz
mov
push
adc
arpl
daa
fimul
(bad)
cmps
push
(bad)
in
movs
and
in
outs
jno
(bad)
mov
sbb
loope
out
jno
add
jae
mov
adc
enter
pop
mov
fist
xchg
push
loopne
sbb
mov
sbb
sbb
add
add
push
and
ja
cmp
xor
mov
push
sub
adc
cmp
mov
in
addr16
mov
jae
mov
xchg
call
int
mov
pusha
ror
adc
jne
in
xchg
cmp
adc
pop
pop
xchg
mov
les
adc
leave
dec
test
push
mov
pop
loope
cs
out
hlt
pop
stc
push
ja
popa
(bad)
cmps
imul
imul
mov
jecxz
sub
ret
lea
pop
push
xchg
(bad)
sub
push
and
xor
test
rol
jne
and
mov
fbstp
or
mov
movs
fiadd
xlat
shl
cmc
xchg
pop
cmc
mov
and
mov
cmp
sub
arpl
pushf
retf
imul
mov
jp
or
test
xchg
xchg
sub
cld
mov
and
sbb
mov
hlt
aaa
or
jnp
ins
jns
push
cmp
pop
int
imul
hlt
adc
leave
push
push
cmp
mov
dec
stos
test
push
cmps
mov
or
jmp
dec
pop
std
cmp
or
loope
sub
xlat
jno
fnstcw
cli
sbb
fisub
fnsetpm(287
push
ficomp
mov
idiv
shl
xchg
sub
cmp
jmp
push
ins
sub
sbb
out
pop
(bad)
sub
pop
cmp
xor
dec
jns
mov
ret
in
and
lahf
aad
sbb
stos
icebp
(bad)
cs
mov
and
jecxz
xor
sti
push
es
mov
mov
xor
xor
arpl
push
mov
in
call
sub
call
sub
sbb
mov
inc
scas
inc
jg
iret
xchg
xchg
loope
(bad)
js
mov
sub
mov
or
xchg
pop
es
jmp
add
push
adc
adc
test
pop
jecxz
mov
dec
int3
pop
ror
mov
mov
(bad)
mov
xchg
mov
sbb
test
sbb
jmp
mov
rol
pop
inc
inc
repz
in
xchg
cmp
or
jle
dec
data16
leave
cmp
mov
jno
jnp
daa
retf
xchg
repnz
inc
loope
pushf
pop
(bad)
ror
int3
enter
fimul
cmps
loope
mov
outs
pop
add
fnstcw
xchg
mov
rcr
jno
mov
ins
push
enter
push
sbb
pop
jecxz
inc
sar
or
or
hlt
adc
sbb
pusha
add
sub
sbb
jl
and
mov
stos
jbe
ret
pop
retf
mov
sbb
imul
jo
jp
movs
inc
mov
pop
lea
lods
pop
adc
scas
cs
xor
mov
xchg
sbb
repz
mov
out
and
test
std
mov
and
dec
lahf
movs
push
jmp
push
iret
ins
sar
push
mov
movs
lock
add
out
fwait
or
jae
icebp
pop
mov
leave
push
xchg
jp
(bad)
mov
push
xor
cld
rcr
or
popa
ds
call
mov
jae
and
std
ret
retf
mov
and
mov
sbb
adc
and
repz
(bad)
dec
aaa
jae
in
das
stos
xchg
ror
xor
xlat
mov
xor
mov
sbb
inc
arpl
mov
stc
dec
push
lock
jge
adc
sahf
jmp
push
rcr
(bad)
dec
mov
stc
jno
mov
(bad)
aaa
mov
(bad)
cmps
xchg
jmp
enter
pop
xor
push
or
jp
add
(bad)
mov
or
gs
lea
pop
push
adc
loopne
pusha
sahf
pop
imul
and
int3
and
mov
call
xor
cmps
and
into
(bad)
sbb
xor
test
or
and
fnstsw
push
rol
mov
and
fdiv
push
aas
adc
pop
(bad)
fidiv
sub
push
call
or
into
jbe
sub
cmp
sbb
(bad)
aad
call
inc
pop
add
or
fwait
inc
mov
cmp
in
push
cmp
ins
int
scas
fadd
out
xor
inc
aam
stc
xchg
rol
xor
pop
push
call
mov
in
cmp
paddsb
iret
outs
sti
fadd
pop
jmp
or
sahf
loope
mov
aam
sub
jb
pop
stos
lods
inc
ja
imul
retf
lock
mov
js
xchg
fild
or
jg
dec
sub
jge
loope
std
inc
dec
jne
imul
mov
dec
mov
(bad)
cmp
add
cmp
add
xor
xor
sahf
cmps
out
sub
mov
pop
loopne
ror
inc
pop
mov
lods
adc
xlat
shl
sub
(bad)
dec
cld
xchg
push
retf
and
pusha
jecxz
std
or
push
repz
pop
cdq
dec
pusha
icebp
fld
adc
std
jne
push
push
jae
or
pop
test
push
shl
cmovo
popf
or
(bad)
sbb
adc
rol
dec
mov
dec
adc
and
dec
shr
pusha
push
aam
push
int
mov
movs
rcr
lods
ins
push
sbb
push
pop
jnp
fwait
rcl
xor
outs
shl
fsubp
mov
jg
aaa
aad
test
mov
sub
call
mov
loope
xor
repnz
adc
movs
ficomp
or
sub
xor
fild
out
inc
sbb
(bad)
icebp
xchg
xchg
rcl
ret
mov
add
push
ins
and
imul
xor
mov
pop
push
and
ret
adc
push
add
cdq
scas
pop
stos
lods
pop
xor
fcmovnbe
inc
bound
aad
lea
adc
mov
pop
pop
fs
pop
add
sub
repnz
jg
jae
sbb
test
jae
jo
rcl
mov
pop
jo
leave
mov
leave
or
shr
cli
adc
mov
fucom
popa
jno
xor
cld
mov
aad
popf
pop
adc
loope
add
repz
push
ret
jmp
push
and
xchg
mov
mov
fs
xor
repz
cmp
popf
lock
mov
out
and
jo
lds
int3
fstp
adc
dec
dec
in
fild
in
cmp
pop
adc
jae
mov
jnp
add
je
inc
jnp
outs
mov
ret
aam
scas
hlt
pop
in
cld
jnp
mov
mov
pop
sub
out
mov
inc
test
sub
and
arpl
shl
dec
out
jmp
pop
mov
add
cdq
mov
cmp
pop
cmovs
out
test
inc
arpl
das
pop
test
dec
mov
stos
push
retf
icebp
fwait
sub
mov
push
les
mov
daa
shl
test
stc
pop
ss
xor
cmp
fwait
scas
scas
neg
adc
sub
div
cdq
mov
sub
cmp
mov
jmp
sub
pop
mov
xchg
mov
dec
jmp
aaa
jl
mov
adc
sub
loopne
repnz
loopne
add
jle
and
gs
xor
not
rcr
mov
cli
sahf
adc
outs
push
loopne
xor
lea
(bad)
aad
retf
test
enter
aam
fs
pusha
movs
es
out
push
mov
sar
rcr
cmp
out
mov
add
jno
sub
mov
jae
pusha
fistp
or
cmp
inc
(bad)
fld
inc
and
cmp
cmc
inc
sbb
in
test
mov
dec
and
test
mov
fmul
pop
fld
sahf
shr
xor
or
or
test
adc
xor
cmps
retf
xor
(bad)
fmulp
mov
lods
rol
cmp
imul
pop
and
inc
or
movhps
cs
mov
or
les
and
jmp
in
inc
mov
scas
enter
xor
pop
mov
mov
mov
sub
test
inc
sbb
les
sar
aad
rol
push
gs
cld
imul
inc
rol
das
aad
push
pop
fst
pop
out
dec
pop
test
icebp
xor
in
mov
jb
jmp
movs
icebp
(bad)
jecxz
mov
or
ss
ins
imul
jp
add
pop
aaa
stc
lods
rcr
inc
lahf
jbe
jae
dec
addr16
push
pop
push
jbe
cmps
ins
in
stos
jno
imul
je
jmp
jne
xchg
adc
test
lea
cvtps2pd
sbb
ins
mov
cmps
sahf
pop
aas
sub
hlt
or
mov
in
sub
cdq
out
lods
add
fnstcw
sbb
stos
loopne
fdiv
std
(bad)
cmps
in
or
aaa
cdq
cmp
mov
data16
pop
pushf
aad
cmp
jae
je
and
and
or
inc
loop
adc
push
xchg
adc
(bad)
out
sti
pop
push
push
fdiv
jge
and
cmp
or
inc
sbb
inc
push
movs
js
repz
cmp
jmp
(bad)
int3
pop
push
sub
ret
shl
sub
sub
push
pop
jns
repnz
mov
in
test
retf
movs
popf
mov
sbb
mov
pushf
aaa
xor
add
adc
ret
adc
out
jo
fadd
mov
cmps
adc
shl
fidivr
loopne
sbb
imul
xchg
test
(bad)
call
rol
adc
jl
pop
hlt
lods
test
jb
add
push
ins
xchg
fsubr
jmp
xchg
and
fwait
xor
cmps
xor
sbb
pusha
push
mov
lea
mov
gs
lock
jmp
(bad)
aas
push
mov
fmul
sahf
ds
movs
outs
movs
and
jg
mov
cmp
(bad)
sub
pop
iret
rcr
jmp
xor
arpl
inc
mov
mov
pop
sub
stc
(bad)
cld
shr
sbb
jb
out
lahf
shr
adc
aad
pop
fsub
mov
xor
hlt
xchg
int3
clc
sbb
push
mov
jecxz
cli
retf
inc
jl
call
push
jnp
scas
xchg
xlat
aad
fwait
ins
adc
nop
push
jge
les
sar
mov
xchg
pop
test
mov
sbb
pushf
fistp
ins
into
mov
dec
jbe
cmp
cmc
pop
call
jl
sub
mov
stos
adc
dec
lahf
enter
and
ds
dec
fwait
aas
xor
dec
repnz
and
adc
jmp
sbb
lods
lea
pop
inc
push
loop
scas
sbb
adc
shl
pop
mov
sbb
pop
inc
pop
retf
aam
ds
jno
and
pop
popa
fnstsw
push
adc
imul
repnz
sub
push
inc
enter
je
movhlps
arpl
or
xor
pop
mov
mov
jmp
push
mov
mov
retf
ja
xchg
test
jae
lahf
jno
jbe
dec
or
xor
jmp
and
adc
mov
or
fidivr
(bad)
pop
sbb
out
and
cmp
mov
ins
dec
dec
daa
mov
cmc
and
ret
jno
mov
inc
inc
icebp
push
cld
pop
or
add
cld
shl
rcl
aaa
stc
push
rcl
pop
icebp
xor
cpuid
data16
mov
inc
inc
jb
dec
sub
movs
pop
sbb
stc
push
cmp
adc
test
cmps
mov
xchg
mov
adc
mov
inc
fisttp
pop
mov
mov
leave
fwait
adc
lods
xor
cmp
fmul
into
cmp
jge
fmulp
xor
push
or
inc
dec
dec
fwait
xchg
mov
xchg
xchg
dec
retf
mov
sbb
or
xor
outs
jl
pop
cmp
std
jo
jmp
es
out
cmp
lods
adc
lahf
jno
outs
sbb
ds
or
xchg
ja
xchg
mov
shl
loope
sar
mov
pusha
mov
mov
push
mov
pop
mov
test
jg
leave
fmul
je
push
xor
and
lods
inc
inc
pop
pop
mov
sbb
outs
pop
fscale
aad
test
cmps
dec
in
stc
inc
mov
pop
xchg
mov
mov
lock
pop
movs
adc
inc
or
push
xchg
iret
int3
push
push
xchg
icebp
aam
xor
jbe
lods
test
in
lahf
mov
hlt
les
push
pop
test
movs
cmp
out
add
pop
ja
cld
and
and
fnsave
mov
sub
cmps
and
pusha
jmp
push
stos
je
mov
rcl
aam
mov
clc
fsubr
fiadd
rcr
dec
jecxz
dec
cmp
jb
sub
xlat
sbb
adc
imul
and
test
and
(bad)
mov
inc
int
adc
xor
(bad)
div
adc
fadd
mov
nop
loopne
in
daa
xchg
mov
cmp
loope
push
call
cwde
out
movs
cld
mov
mov
sbb
ins
ins
mov
xlat
movs
cs
adc
dec
cwde
xchg
rep
jecxz
mov
adc
outs
das
cs
pop
movs
ret
cmps
mov
add
(bad)
fbld
out
int3
call
shr
add
inc
in
mov
imul
push
mov
ds
and
pop
repnz
rcr
dec
ds
jnp
sub
xlat
push
fld
in
int
and
fcomp
mov
scas
out
ret
je
in
gs
popf
icebp
shr
frstor
out
or
imul
dec
lock
dec
push
add
lea
pop
push
call
test
inc
sbb
inc
aaa
in
xor
ucomiss
les
cmp
inc
(bad)
fld
xor
movs
inc
pop
mov
jmp
inc
cmps
or
in
scas
sbb
xchg
or
int3
inc
fcom
les
aam
out
jmp
jge
psllw
or
fiadd
arpl
dec
addr16
std
xlat
fld
adc
and
sub
mov
jmp
pop
dec
shl
aad
fcom
ss
fxch
cld
test
mov
(bad)
cmp
sbb
nop
js
dec
in
cmp
stos
in
das
into
add
inc
fisttp
jg
add
jecxz
or
push
xor
mov
int3
or
mov
movs
outs
lds
and
das
aas
inc
lock
hlt
neg
repz
add
cmps
push
and
push
add
xchg
sbb
pop
xor
aaa
mov
test
sbb
mov
cmps
fadd
sub
repz
xor
daa
pusha
pop
ja
dec
neg
push
je
or
cdq
nop
add
pusha
ins
sub
fild
cmp
pop
movs
rcl
inc
pop
inc
out
sbb
dec
jb
dec
out
popa
mov
ins
(bad)
movs
push
inc
xor
push
jmp
cmp
lock
cmps
cmp
fsub
inc
ret
shl
out
addr16
out
dec
fwait
std
mov
and
xchg
jae
scas
push
xlat
aaa
stos
addr16
cmp
sahf
ret
stos
bound
mov
cmp
add
jge
je
xor
or
pushf
mov
icebp
mov
or
jb
jmp
cmp
mov
jb
lods
pop
ds
aam
mov
shl
stos
das
(bad)
sbb
pop
pushw
add
dec
jge
mov
(bad)
and
into
push
cmp
adc
pop
mov
rol
ficom
mov
pop
gs
jnp
aam
sub
pop
(bad)
scas
pusha
sbb
popa
mov
cmp
cmps
adc
je
fwait
lods
dec
push
sbb
inc
pop
xchg
fnstenv
add
je
push
push
push
mov
dec
inc
mov
mov
adc
dec
aad
(bad)
ins
movs
pop
mov
add
scas
sar
dec
call
sbb
adc
fdivr
mov
out
mov
in
rcl
mov
pop
xor
rdpmc
test
mov
lea
icebp
xchg
adc
inc
add
push
fdivrp
and
inc
test
pop
inc
inc
inc
stos
cmps
fistp
sub
repz
cmp
out
inc
lods
dec
(bad)
mov
in
into
xchg
dec
inc
sbb
jg
push
sbb
inc
(bad)
out
push
or
(bad)
mov
in
jmp
inc
test
xchg
fcmove
and
data16
cwde
cmp
adc
mov
sub
cld
jl
sub
movs
sbb
loopne
repz
mov
movs
cmp
adc
cld
mov
imul
out
mov
das
dec
repz
lock
and
cld
xor
clc
xor
inc
push
pop
js
mov
mov
xchg
pop
sbb
shl
mov
retf
xlat
xchg
and
inc
sub
xchg
jo
push
fst
mov
call
pop
adc
push
dec
jae
lea
jno
packuswb
pop
adc
mov
jns
mov
scas
jns
cli
rcr
pop
mov
pop
retf
cmp
dec
(bad)
inc
cmp
out
mov
jecxz
sub
popa
inc
fcomp
sub
ds
xchg
xlat
daa
mov
xor
push
pop
push
adc
mov
mov
and
jge
mov
loope
outs
jb
sti
inc
cmp
mov
in
shl
retf
lock
mov
cmp
shl
jp
jb
mov
or
dec
rcr
pop
test
mov
nop
out
adc
sub
movs
dec
jbe
or
jnp
test
mov
gs
xchg
push
add
out
test
stos
mov
lahf
xchg
adc
sar
ss
shl
std
aas
sbb
xchg
adc
xchg
std
adc
mov
sub
clc
jp
sbb
mov
fstp
push
mov
sbb
pshufw
xchg
stc
push
mov
sub
bound
mov
lods
and
bound
cmp
ret
xchg
cmp
mov
mov
pop
jns
pop
add
pop
mov
loope
add
and
pop
test
enter
aaa
dec
fnstcw
imul
cmps
pop
mov
fnstenv
and
inc
add
movs
xchg
inc
inc
push
repnz
(bad)
repz
and
in
mov
rcr
test
pop
imul
xor
cdq
sbb
retf
and
aad
cmps
leave
mov
mov
loop
cwde
pop
imul
jge
and
jb
js
pop
mov
fistp
stos
adc
mov
(bad)
cmc
jbe
push
lds
pop
loopne
inc
rol
in
ss
sub
xchg
outs
jo
lods
sub
push
arpl
inc
or
and
hlt
mov
ins
jo
cld
stos
popf
out
lahf
cmp
ins
sub
jmp
mov
inc
push
imul
xor
push
adc
bound
mov
pusha
adc
cmps
push
test
aam
xor
mov
aam
rol
pop
movs
in
inc
jmp
aas
sbb
rol
jne
inc
leave
mov
mov
fnstenv
xchg
fmul
xchg
jg
add
cmc
test
jmp
cmps
and
adc
mov
ss
inc
rol
or
lock
scas
sbb
test
push
aas
js
mov
xchg
sbb
jo
bound
push
cdq
sub
imul
pop
scas
lock
jbe
xchg
pop
jb
mov
aas
add
stos
push
hlt
dec
and
dec
mov
int
int3
lods
aas
cmc
test
jge
test
mov
fs
mov
cdq
js
xchg
scas
addr16
push
ja
mov
cmps
add
test
pop
sahf
test
lea
sbb
sub
cmp
or
adc
and
jl
sbb
inc
jo
xchg
in
leave
scas
mov
mov
inc
pop
or
stos
cld
xchg
adc
test
sar
outs
push
push
pop
or
lods
cli
push
mov
push
inc
dec
movs
ins
sbb
clc
xor
mov
dec
enter
in
push
mov
ror
data16
div
jne
les
jge
int
mov
push
mov
imul
lea
es
inc
rol
add
sub
jecxz
sub
or
xchg
hlt
pop
inc
sub
or
cmps
sahf
pop
push
ins
dec
mov
ss
dec
pop
xlat
aas
add
sbb
bound
cmps
pop
test
ficom
xor
pop
sub
pop
popf
adc
scas
aas
data16
stc
push
pushf
out
mov
xchg
pop
xor
or
xor
hlt
int
pop
fwait
jg
sub
aam
movs
mov
or
push
adc
mov
sti
or
aas
mov
adc
loopne
iret
add
ss
mov
arpl
out
push
or
icebp
(bad)
xchg
aaa
cmp
retf
cmp
(bad)
pop
cdq
jge
jne
rcl
test
mov
sbb
cmps
dec
add
add
(bad)
fistp
jmp
mov
imul
retf
sti
popa
enter
adc
lock
mov
popa
jmp
adc
ret
push
adc
aaa
in
xor
push
repz
fidivr
adc
inc
sahf
shr
mov
and
bound
rol
lahf
fisubr
sub
mov
int
xchg
inc
outs
(bad)
and
enter
inc
jmp
in
jbe
push
cmp
push
mov
sbb
imul
cmp
int3
ficomp
pop
jg
rol
add
fcmovnu
into
lock
stc
jl
push
fstp
or
stos
call
mov
add
int3
fcmove
out
add
sub
pop
push
adc
ja
les
push
aam
xchg
lahf
je
jbe
enter
pop
dec
ficomp
jmp
xor
mov
jmp
jae
out
retf
pop
add
imul
and
out
mov
mov
inc
loopne
imul
daa
cdq
cli
imul
mov
imul
jmp
out
mov
push
fnstcw
pop
or
jae
and
mov
and
ror
test
mov
mov
ret
ss
adc
ss
push
adc
daa
adc
add
loop
mov
inc
push
ins
cmovns
sbb
out
sbb
retf
mov
or
inc
(bad)
fwait
idiv
push
adc
mov
mov
mov
mov
add
sub
jge
adc
loopne
inc
pop
cmp
dec
lock
scas
in
cmps
fnstenv
cmp
or
mov
js
nop
and
scas
gs
or
cld
sbb
ins
mov
dec
out
hlt
pop
rcr
adc
cmps
add
shl
repz
movs
stc
mov
loope
es
mov
or
stc
cs
sbb
in
jecxz
out
movs
out
add
test
mov
std
mov
(bad)
push
sbb
jecxz
push
mov
outs
fild
cmp
xor
loope
xor
lock
cmp
daa
cmp
or
pop
xchg
cli
shr
sub
and
(bad)
iret
xchg
cmp
les
sahf
sub
dec
loop
test
inc
cld
dec
or
sub
mov
mov
jmp
pop
push
mov
out
out
retf
mov
mov
sbb
repz
xchg
pop
std
add
sbb
idiv
test
shl
or
mov
sub
dec
sub
adc
push
or
lahf
push
outs
dec
call
adc
outs
jb
cmps
push
nop
adc
in
fist
xor
fisubr
mov
aad
popa
loop
cmps
lods
loop
adc
inc
ret
stos
das
shl
dec
sub
not
add
xchg
inc
fldl2t
test
push
je
sbb
dec
push
inc
jb
and
imul
jl
add
call
lods
and
lds
jns
jecxz
or
push
sbb
and
ffree
fist
ins
sub
loop
(bad)
addr16
mov
int
and
ret
add
call
jbe
lods
xchg
cli
cmp
idiv
sti
dec
(bad)
jg
and
add
inc
mov
jle
sti
fidiv
dec
lds
mov
leave
fsub
pushf
cmps
add
mov
cmp
jmp
sti
pop
lds
in
(bad)
add
or
sub
fcom
mov
sti
jo
mov
xlat
cli
movs
in
es
mov
stos
dec
bt
pop
test
mov
mov
mov
mov
mov
adc
adc
ja
push
clc
mov
ret
xor
out
inc
mov
xor
into
outs
mul
jne
fist
loop
mov
rol
or
adc
adc
inc
outs
mov
(bad)
shl
rcl
(bad)
cmps
scas
and
jle
stos
in
call
sub
scas
mov
cmp
sub
xor
sub
call
xlat
lds
mov
retf
lods
(bad)
shl
pop
jle
leave
adc
jns
loopne
cmp
dec
jo
mov
push
mov
xor
mov
cmp
vmread
mov
aad
inc
jo
mov
mov
fisttp
addr16
jle
jmp
mov
aam
loopne
sbb
mov
sahf
sub
cmps
xchg
cmp
inc
in
enter
les
push
sbb
xlat
jge
inc
jbe
adc
rcl
mov
scas
push
(bad)
pop
push
jo
mov
std
mov
ss
nop
out
test
fs
nop
nop
push
inc
cli
mov
jmp
shl
push
jp
ja
sub
inc
sub
cli
mov
xor
push
stos
or
outs
repz
retf
inc
adc
inc
mov
fbstp
test
es
addr16
push
sub
mov
push
add
test
sub
aad
add
(bad)
xor
fneni(8087
push
movs
ins
fbstp
push
xchg
test
inc
stos
lds
pop
pop
pop
repnz
pushf
aad
mov
lds
das
in
jae
imul
mov
inc
jmp
hlt
call
xlat
hlt
and
mov
cmps
fiadd
and
push
leave
jecxz
mov
cdq
jne
jmp
sahf
mov
adc
add
sar
jno
outs
xor
imul
repz
stos
mov
inc
fist
xor
int
jns
(bad)
mov
repz
in
(bad)
mov
jmp
xlat
adc
or
rcl
xor
push
jp
add
pop
loopne
stc
mov
out
mov
out
push
inc
test
ss
sbb
jno
xchg
in
jmp
hlt
or
in
js
jge
fbld
retf
pop
fwait
outs
push
inc
imul
das
add
sub
inc
mov
in
cmps
or
fwait
sbb
fwait
cli
es
clc
(bad)
and
lock
imul
jp
sbb
lea
xlat
in
in
movs
test
jecxz
(bad)
xor
inc
ja
push
cmps
jecxz
je
and
or
and
ins
lods
mov
xchg
pusha
mov
mov
(bad)
in
mov
enter
inc
fwait
adc
mov
out
je
sar
jbe
out
and
out
ficomp
adc
or
xchg
fidiv
jo
push
pop
mov
jbe
shrd
ds
je
(bad)
mov
mov
add
and
cmp
lahf
pop
xor
add
sahf
iret
add
setno
sbb
int
and
pop
daa
xchg
xchg
add
sub
inc
xor
push
or
adc
push
or
cmp
int3
aam
popa
jnp
imul
(bad)
loope
rol
sub
mov
pop
outs
addr16
mov
jmp
jmp
mov
cmp
adc
lods
cmp
adc
xchg
sbb
xchg
das
(bad)
out
mov
pop
jb
jmp
mov
adc
xchg
push
neg
xchg
or
or
cmp
pop
mov
retf
out
or
adc
cmp
inc
mov
sbb
pop
jl
test
jbe
fidiv
pop
(bad)
or
enter
xchg
icebp
int
cs
xchg
shl
mov
and
xchg
stos
in
sub
push
lock
or
movs
mov
jne
ror
fistp
shl
rcl
(bad)
out
jl
jg
int3
pop
fcom
and
sub
xor
jge
imul
fstp
dec
fbstp
stos
inc
jb
inc
mov
cmp
push
inc
loopne
daa
or
cld
or
aas
and
mov
div
push
fsub
or
push
adc
add
jmp
push
sbb
inc
retf
adc
pop
or
fsub
pusha
and
dec
ja
xor
std
into
ret
fs
sbb
xchg
xor
and
mov
(bad)
test
lock
pop
sbb
pop
int
mov
dec
dec
xchg
gs
mov
xor
fld
sbb
mov
jae
inc
dec
pop
imul
inc
adc
jmp
fild
cmps
or
ins
dec
mov
jl
mov
call
ds
push
out
setb
inc
lock
inc
dec
sbb
sahf
or
mov
xor
mov
pop
nop
fbstp
fistp
ret
xor
or
imul
jbe
inc
sahf
jb
fldlg2
push
cmp
dec
pop
xchg
icebp
mov
inc
add
xchg
into
cmp
lods
pop
push
jnp
mov
mov
sub
pop
cmp
push
add
int3
sub
imul
shl
inc
(bad)
mov
mov
addr16
fisttp
or
xor
jmp
sbb
jp
mov
jmp
jbe
dec
out
xor
inc
push
enter
hlt
jecxz
ror
stos
mov
cdq
test
punpckhbw
movs
cmp
jmp
out
scas
mov
int3
ror
cmps
jmp
or
add
push
xchg
loop
xor
aad
int
shr
jo
sbb
pop
fist
jmp
ret
and
imul
mov
shl
xor
pavgb
cld
pop
fwait
xchg
lods
push
jae
cdq
out
mov
dec
jmp
jo
test
outs
inc
std
push
mov
jne
(bad)
jp
mov
out
and
jg
movs
(bad)
sub
not
sub
cdq
retf
sahf
cmp
jb
lock
jne
add
and
jg
jecxz
mov
xor
xchg
sbb
(bad)
in
mov
push
xchg
add
or
pop
jmp
(bad)
imul
xlat
loope
xchg
enter
fld
lock
add
cmps
mov
arpl
cwde
lods
lods
inc
mov
dec
addr16
pop
adc
push
inc
and
int3
push
mov
xchg
mov
das
pusha
xor
out
jno
scas
das
add
stc
and
jmp
movs
repz
ficomp
mov
(bad)
fcom
int
js
out
bound
clc
cmp
stc
icebp
rol
mov
imul
sub
mov
mov
aas
cs
xchg
mov
xchg
xchg
mov
and
dec
gs
adc
push
ds
daa
fsub
aas
push
pop
cdq
shl
lock
rol
(bad)
jmp
and
in
arpl
(bad)
cli
push
int3
add
mov
mov
(bad)
fistp
outs
aad
pop
cld
jns
out
es
sbb
in
sbb
xchg
jmp
mov
dec
ins
popf
iret
pop
xchg
dec
scas
jns
xor
push
pop
lahf
inc
jmp
adc
cdq
aam
mov
adc
mov
imul
push
jne
jecxz
push
cs
and
xchg
ins
movs
call
aas
iret
xor
mov
loope
fwait
jae
sbb
imul
mov
jo
mov
or
xchg
test
mov
test
call
or
into
ss
lea
into
jmp
int
scas
inc
push
jmp
xor
stc
movs
cld
not
lea
iret
dec
push
popa
xchg
into
ret
jl
add
jne
fidivr
test
sbb
movs
dec
or
dec
gs
fld
aas
jns
outs
jmp
and
push
mov
stos
xchg
push
mov
and
mov
dec
and
inc
data16
push
cld
(bad)
fcom
in
repnz
jb
push
jmp
fwait
and
and
outs
data16
fcomp
iret
(bad)
shr
and
ret
push
xor
lods
and
pop
xchg
jae
mov
mov
xchg
xchg
test
adc
xor
inc
imul
js
paddsb
push
or
pop
int3
out
pop
data16
xor
pop
cmps
dec
xchg
out
mov
addr16
loop
in
mov
hlt
xor
push
sub
dec
rcl
mov
or
cwde
mov
out
mov
ss
mov
aam
push
enter
push
pop
ins
stos
retf
lds
div
jl
xchg
mov
sub
sti
xchg
cmp
int3
popf
sbb
cli
cli
gs
imul
xor
imul
mov
mov
inc
pusha
mov
jmp
push
mov
mov
xor
retf
mov
pop
mov
stos
and
enter
repnz
sub
leave
xlat
fiadd
and
ins
fnstsw
sbb
mov
pop
jg
faddp
repz
mov
jnp
addr16
dec
xchg
ror
into
mov
cli
mov
lods
je
shl
add
sbb
(bad)
mov
retf
in
dec
ret
js
sti
(bad)
sbb
pop
es
cmp
pop
mov
scas
and
add
add
aad
cs
addr16
cmps
(bad)
stc
inc
call
cmps
adc
popf
inc
add
xchg
sub
cmps
test
and
(bad)
dec
inc
repz
pusha
shr
pop
adc
xchg
adc
(bad)
and
lock
dec
or
jno
cmp
shl
popf
adc
cmp
mov
xor
push
in
div
aaa
test
and
cwde
test
(bad)
lods
inc
mov
jge
and
jbe
(bad)
cs
mov
mov
scas
inc
cmp
out
loope
(bad)
gs
mov
repnz
cmc
fmul
mov
sub
inc
sub
cs
fld1
clc
xlat
retf
aad
loop
xlat
pop
ret
or
fsubrp
or
shl
mov
rcl
loop
popf
loop
push
xchg
(bad)
in
xor
adc
mov
push
je
inc
imul
add
gs
idiv
adc
cwde
movs
xchg
movs
adc
inc
cmp
arpl
pop
jmp
or
nop
aad
out
push
rcr
mov
inc
outs
sub
mov
fld
xchg
pop
pop
xor
std
mov
and
ss
icebp
sbb
dec
xchg
dec
je
push
xor
loopne
and
ins
movs
addr16
(bad)
pop
ins
hlt
popf
rcr
aad
stos
into
dec
lock
adc
sbb
cmps
retf
pop
scas
fcom
add
xor
pop
stc
cdq
dec
cli
call
iret
sar
repnz
loopne
mov
nop
movs
xor
add
aaa
mov
std
xor
sub
movs
inc
int3
(bad)
jmp
pop
add
jle
sbb
sub
inc
(bad)
jnp
jbe
adc
fnstsw
iret
add
jnp
adc
mov
enter
sub
mov
push
(bad)
or
xor
cwde
mov
jnp
fcomip
movs
mov
dec
add
cmp
push
inc
and
shr
idiv
xor
cmps
or
xchg
cdq
mov
mov
outs
jne
mov
test
add
pop
fst
in
iret
xor
adc
mov
pop
push
push
jns
dec
xor
gs
push
in
clc
test
pusha
or
jb
fisttp
popa
jg
call
or
push
cwde
addr16
push
jmp
sub
xor
jb
adc
cmp
in
sbb
jo
pusha
(bad)
jp
retf
cmp
adc
sbb
cmps
aad
scas
cmc
bound
imul
push
fwait
outs
(bad)
aaa
dec
add
xchg
sbb
cmps
out
and
fidivr
xchg
pop
inc
es
repz
gs
mov
(bad)
dec
in
add
sbb
sbb
and
in
inc
xchg
jns
test
sbb
je
jle
bound
dec
jmp
in
outs
jnp
mov
call
popf
and
(bad)
cmps
ret
and
sbb
data16
loope
xchg
xor
aas
inc
pop
loop
mov
pop
enter
and
iret
(bad)
sar
xor
sbb
xchg
cmps
mov
(bad)
mov
cmp
loope
add
retf
push
int
fstp
iret
ret
pusha
retf
mov
cmps
ja
mov
mov
pop
adc
cmp
nop
ds
adc
sub
(bad)
aaa
cmp
movs
mov
daa
lds
mov
push
push
ficomp
adc
pop
xchg
std
out
or
xchg
clc
dec
aam
movs
in
mov
out
xlat
mov
aaa
outs
jmp
inc
fcomp
je
not
cmps
mov
mov
sub
jo
xchg
out
lock
dec
sub
xchg
fsub
mov
je
xor
or
shr
out
mov
push
lea
out
test
(bad)
push
push
js
lods
sub
xor
push
ror
aam
loope
stos
and
mov
sbb
xchg
test
pop
xor
inc
pop
push
xlat
aaa
setge
push
mov
xchg
jne
imul
sub
and
data16
mov
pushf
gs
mov
jge
in
movd
imul
jno
pop
js
sbb
jmp
add
mov
adc
dec
xlat
in
push
mov
jp
movs
push
not
in
xchg
and
and
xchg
dec
rol
push
dec
fld
ins
xchg
xor
sbb
in
adc
xor
fucomip
jno
shl
mov
xor
mov
xchg
inc
pop
icebp
dec
cmp
in
xchg
retf
mov
test
dec
pop
pop
fwait
sbb
pop
xchg
push
out
hlt
call
dec
xchg
dec
dec
ficom
ret
pop
jns
cs
sbb
sbb
pop
repnz
mov
dec
(bad)
test
(bad)
and
loop
sbb
hlt
rcl
jl
adc
pushf
adc
sub
stos
test
adc
push
fbstp
inc
fs
adc
jp
jg
push
xchg
cmp
jle
ds
cmp
lock
icebp
inc
enter
jae
scas
pop
sar
ds
xchg
push
and
mov
and
xchg
pop
mov
les
xchg
(bad)
je
inc
jae
inc
das
ja
repnz
adc
mov
loopne
or
push
adc
out
cmp
cld
lods
iret
add
ins
ins
retf
pop
fadd
pop
rcl
mov
pop
xchg
iret
cs
pop
cmp
or
xor
loopne
mov
mov
aas
dec
add
xchg
icebp
scas
inc
(bad)
retf
adc
loopne
pusha
clc
vpacksswb
dec
in
mov
mov
inc
jp
ficom
xor
add
test
and
jns
and
xchg
outs
pop
pop
imul
rcr
and
shr
sub
jae
arpl
mov
adc
(bad)
and
xchg
repnz
imul
(bad)
xor
jne
or
mov
out
mov
pop
xlat
sub
fst
jge
jne
sub
mov
and
or
mov
scas
jg
repz
in
je
or
movs
sub
aas
xor
rcr
mov
jns
popf
cmp
das
ds
mov
cdq
lock
mov
mov
icebp
mulps
push
sbb
test
add
and
dec
adc
fstp
in
adc
add
in
gs
mov
push
dec
scas
imul
xchg
fild
cli
setnp
sbb
mov
xlat
mov
push
test
jo
test
mov
sar
or
imul
pop
cmp
sbb
and
jg
cmp
cdq
iret
inc
push
pop
adc
mov
dec
gs
(bad)
dec
test
inc
add
xchg
shr
and
xor
inc
repz
retf
jl
aaa
mov
jge
sahf
sub
mov
or
or
dec
inc
in
sub
or
loope
pushf
std
cmp
cmp
mov
dec
jo
pop
aam
and
(bad)
into
aaa
pop
aam
sbb
cmp
add
test
cld
cmps
sub
out
imul
sbb
mov
xlat
mov
ret
pop
and
mov
jo
inc
push
sub
mov
fst
dec
sub
jge
icebp
push
not
sahf
push
into
test
push
test
or
inc
test
cmc
and
mov
mov
je
out
push
adc
idiv
add
adc
ja
ror
dec
imul
dec
mov
xchg
icebp
mov
jmp
mov
(bad)
xor
jbe
ja
adc
stos
dec
sub
fwait
adc
fsin
mul
mov
sbb
nop
adc
adc
imul
pop
xor
mov
cmps
in
sti
add
inc
rol
fiadd
ret
xchg
sub
inc
pop
adc
lods
aas
cmp
push
pop
xchg
movs
mov
push
mov
es
xor
cmp
and
add
jmp
cld
sbb
sbb
in
fdiv
cmp
pop
shl
or
xchg
inc
sbb
out
pop
in
pop
cmp
push
into
push
pop
adc
push
xchg
sub
call
mov
cmp
cli
sub
test
mov
cmp
adc
outs
and
push
leave
add
bound
xchg
pop
rol
ret
test
xlat
jo
jmp
aad
test
aam
mov
sub
fcomp
cmp
or
aaa
cmp
lahf
not
in
adc
cmp
or
ins
movs
inc
push
cmp
cld
cld
jmp
imul
cmp
pop
cmps
(bad)
in
and
cdq
jae
shl
inc
xchg
sbb
ins
mov
push
or
cld
arpl
hlt
rcr
rcr
mov
ds
retf
push
sahf
cmp
jg
cmp
push
jo
mov
xchg
mov
mov
mov
adc
mov
lahf
xor
fdivr
sub
addr16
xor
xor
in
sub
popa
ja
dec
add
xchg
enter
xchg
mov
push
lock
add
jo
icebp
mov
add
jno
fild
xor
push
mov
xchg
scas
cmp
ror
es
shl
shr
push
xchg
push
adc
adc
cmp
mov
push
fwait
mov
out
jecxz
dec
dec
cmp
aaa
inc
xor
pop
push
int
inc
xchg
repz
xchg
pop
(bad)
or
cs
dec
adc
fadd
dec
or
pop
add
sub
xchg
(bad)
mov
pusha
xor
or
and
or
stc
(bad)
rol
push
lods
mov
xor
jp
je
arpl
jecxz
(bad)
dec
daa
inc
fbstp
sbb
sub
pushf
arpl
sbb
push
gs
dec
scas
ds
xor
jl
cmp
cwde
mov
scas
add
mov
(bad)
(bad)
sub
cmp
push
sbb
out
push
or
int3
mov
scas
fbstp
jae
movs
call
aam
lds
dec
dec
sar
test
inc
xor
adc
bound
movs
push
pop
imul
xchg
xlat
dec
push
jmp
sbb
sub
ja
rcl
sub
xchg
sbb
pop
fadd
iret
lahf
mov
jmp
xchg
mov
mov
cdq
add
dec
adc
pop
ds
jo
inc
sub
(bad)
mov
repnz
fnop
sbb
ret
enter
cmp
pop
cmp
cmps
dec
xor
in
loope
fwait
ins
sub
mov
xor
push
dec
aad
mov
add
mov
sub
push
iret
div
popa
push
sbb
jl
pop
xor
mov
pop
push
cli
jae
add
rcl
repz
imul
pop
mov
or
arpl
push
pop
aam
push
pop
lds
out
xor
ror
cs
mov
inc
pop
retf
test
inc
ficom
mov
cmp
sbb
dec
sub
inc
mov
icebp
arpl
dec
jle
clc
xor
lock
mov
ret
and
cmps
and
stc
mov
jecxz
mov
pop
jb
sahf
aaa
or
bound
sub
jl
ret
(bad)
call
sub
lea
jmp
scas
test
gs
xchg
int3
js
mov
lock
xchg
adc
mov
(bad)
fisttp
data16
mov
and
fimul
adc
rcr
jno
retf
jle
mov
pop
mov
out
inc
ret
cmp
add
pop
ins
and
adc
push
mov
sbb
into
xlat
outs
mov
cmp
adc
ins
out
mov
sar
lock
imul
ret
lds
jo
cli
sahf
and
mov
sub
nop
dec
enter
or
mov
and
ror
sub
sbb
sti
sub
sub
das
lock
loope
inc
dec
and
fldenv
rcr
gs
jbe
in
sub
and
(bad)
clc
dec
bound
pop
cmp
pop
or
push
int
jg
xchg
fidiv
in
jb
scas
es
popa
jae
sbb
adc
shl
mov
push
add
xor
int
cdq
jle
inc
pusha
and
shl
xor
movs
aam
mov
hlt
test
stos
btc
ja
aam
imul
in
dec
and
adc
scas
aam
sbb
rcr
sub
xchg
fwait
or
mov
rcl
cmp
or
mov
pop
leave
mov
jp
(bad)
imul
pop
sub
daa
sub
add
hlt
mov
shl
cmp
jae
rcr
push
sti
ret
push
mov
cmps
mov
std
lock
mov
nop
sub
mov
mov
mov
mov
mov
and
stos
repz
pop
jnp
into
repz
mov
(bad)
jo
sti
dec
cmp
and
(bad)
(bad)
loopne
(bad)
in
inc
pop
push
push
repz
ret
jne
mov
scas
sub
inc
repz
scas
mov
movs
sti
jl
ret
jecxz
adc
adc
mov
mov
(bad)
jge
adc
mov
out
pop
add
sbb
mov
fiadd
pop
adc
nop
push
shl
sbb
add
inc
and
lods
ins
shr
jle
xchg
rcr
retf
leave
push
popa
sub
je
or
mov
(bad)
dec
out
push
pusha
lods
cmp
jp
(bad)
daa
adc
shl
aas
ftst
imul
adc
add
xchg
(bad)
add
inc
jle
fistp
test
mov
aam
push
shl
enter
dec
je
cmp
fistp
inc
xor
into
cs
fs
call
cmp
push
add
fist
and
push
rcr
int3
mov
adc
pusha
sti
icebp
xor
cmp
xor
xor
(bad)
mov
sbb
adc
repz
xlat
shl
mov
sti
cmc
int3
nop
push
pop
repnz
psadbw
cli
xlat
jmp
sub
push
adc
addr16
add
xor
out
aaa
mov
cmp
test
das
push
test
pop
mov
lahf
dec
aaa
inc
jge
cmp
sbb
outs
leave
sbb
fnsave
dec
push
popf
mov
mov
cmp
cs
mov
aam
mov
push
cmp
mov
and
adc
fs
mov
(bad)
jb
adc
les
into
mov
inc
cld
or
and
cmp
adc
pop
and
add
add
fst
cmp
and
(bad)
lods
wbinvd
mov
dec
shl
mov
inc
aad
pop
fsub
retf
cmp
dec
mov
mov
loop
es
ficomp
hlt
je
add
shl
mov
inc
jl
js
inc
int3
sub
push
and
xor
xchg
rol
sub
push
mov
and
cwde
mov
inc
mov
push
inc
add
movs
pusha
jnp
scas
inc
ds
sub
ja
nop
cs
shl
pop
enter
mov
fstp
aaa
xchg
sbb
ja
(bad)
cmp
xor
mov
nop
daa
mov
out
add
(bad)
test
mov
imul
mov
daa
sbb
push
cs
add
push
inc
add
xchg
ror
jb
push
movs
inc
fstp
add
mov
and
mov
xor
clc
hlt
jge
sbb
push
fstp
test
cmp
xor
pop
std
adc
(bad)
in
adc
add
mov
or
pop
push
dec
push
aam
out
mov
rcl
out
scas
push
jne
jno
arpl
inc
mov
mov
scas
cmp
ins
and
sbb
sahf
jae
jg
pop
lea
mov
mov
ret
inc
add
aas
aas
pop
xchg
dec
aam
mov
jl
fcomp
(bad)
lds
mov
fmul
and
test
jecxz
(bad)
jle
popa
push
mov
arpl
ja
sbb
cmp
out
inc
lds
jno
js
sub
gs
jb
ret
cdq
retw
repnz
push
push
mov
xchg
leave
loopne
xchg
(bad)
(bad)
call
adc
aad
xor
rcl
stc
push
int
scas
push
ds
pop
fnclex
sub
pop
cmp
ret
jb
dec
sbb
inc
test
(bad)
mov
mov
loop
mov
lock
in
aaa
push
lock
cs
and
dec
inc
jge
outs
push
popa
adc
stc
xor
xor
adc
(bad)
std
jo
mov
in
adc
cdq
gs
sub
(bad)
shl
mov
stos
jle
enter
(bad)
icebp
pop
adc
inc
rcr
pop
jmp
cmp
fdivr
pop
pop
(bad)
sub
push
mov
imul
mov
xor
ins
test
mov
sbb
ss
adc
sub
scas
xor
sbb
mov
mov
xor
xchg
mov
xor
in
dec
add
push
aam
sub
dec
sub
std
mov
fistp
mov
dec
xor
mov
call
sti
mov
repnz
or
jnp
nop
pop
lds
loopne
mov
and
pusha
cmovb
mov
sub
xor
inc
les
in
ds
imul
lea
jae
push
jmp
loop
mov
push
mov
mov
adc
xchg
mov
leave
jg
mov
test
cmp
mov
mov
inc
add
pushf
jge
jo
sbb
sti
xchg
loop
jg
mov
movs
sub
loope
xchg
das
xor
adc
repz
stos
inc
das
iret
xor
xor
xchg
fnstenv
scas
cmp
add
lahf
jns
jp
stos
fisttp
dec
cli
ret
jae
or
fdiv
sti
imul
add
test
xchg
aad
loope
shr
add
mov
and
jmp
shl
ret
dec
sbb
push
and
mov
add
push
cdq
addr16
jb
adc
sub
lahf
jmp
mov
inc
cmp
mov
adc
aad
xor
fist
push
mov
xchg
cmps
xlat
xor
rol
mov
data16
pop
int
stc
pop
cmps
and
lods
jmp
xor
fisubr
sar
fdiv
pop
sbb
push
cwde
or
add
push
fs
dec
jge
or
jmp
inc
push
cmps
push
fs
mov
adc
xchg
mov
mov
(bad)
leave
icebp
fwait
cdq
mov
xor
pop
movs
mov
sub
scas
sbb
xor
bound
push
mov
cmp
push
sahf
icebp
xor
add
or
cmps
push
stos
mov
ret
or
bound
mov
lods
shl
mov
outs
repnz
les
cmp
es
push
jb
mov
clc
adc
push
aas
pop
xchg
cld
mov
ins
and
push
loopne
clc
(bad)
sub
push
outs
mov
jmp
xchg
push
movs
mov
add
shl
in
pop
ds
cmc
int3
mov
jmp
sub
fdivr
out
idiv
gs
retf
mov
push
adc
cmp
pop
icebp
push
sub
(bad)
pop
sahf
ja
cmp
pushf
mov
jecxz
icebp
push
dec
push
add
cld
shr
pop
shl
je
dec
pop
jecxz
push
iret
mov
jbe
icebp
sbb
cmps
ret
jne
xor
std
lea
add
in
xchg
add
cld
mov
pop
mov
adc
popa
inc
out
cwde
aam
pop
inc
push
fwait
mov
jmp
push
and
fs
rcl
(bad)
into
xor
sub
out
repz
fdiv
push
jmp
pop
scas
push
xor
pop
into
dec
pop
jno
mov
dec
adc
fwait
xor
idiv
nop
jg
xchg
xchg
shl
loop
add
sbb
cmps
in
icebp
xor
push
ins
outs
pop
(bad)
dec
retf
pushf
imul
and
mov
movs
push
sbb
dec
jl
es
int
out
pop
popf
xor
xor
jecxz
fcomp
test
mov
stos
test
cmp
pop
loop
cmp
(bad)
sub
mov
test
(bad)
dec
gs
aad
cmp
add
lods
sbb
xchg
or
fnstenv
bound
out
push
xor
mov
dec
inc
rcl
das
dec
sub
xor
test
in
and
dec
push
or
sub
adc
test
lods
dec
adc
test
push
or
retf
outs
icebp
sbb
pop
push
jecxz
add
mov
shl
aad
pop
fsub
and
xor
pop
mov
push
inc
jp
test
sub
jp
jae
xchg
(bad)
add
out
int3
es
or
pop
and
(bad)
test
pop
sub
fs
jl
movs
ret
or
in
mov
jmp
pusha
popa
retf
cdq
pop
push
shl
xor
sar
dec
pop
(bad)
xchg
sbb
jle
iret
mov
ds
jae
jno
add
dec
movs
mov
js
dec
ret
and
or
mov
inc
sbb
into
adc
add
and
aam
inc
mov
cs
or
or
add
add
add
cmp
data16
mov
add
fwait
or
pop
popf
repz
test
mov
jns
xor
dec
xchg
ret
jno
jae
(bad)
imul
dec
mov
retf
xor
loopne
arpl
mov
into
out
jno
xchg
push
mov
int3
ins
inc
sahf
sub
push
mov
ret
leave
dec
lds
mov
jecxz
push
jg
xchg
sbb
jmp
call
fs
xor
jle
adc
push
sub
fstp
out
sub
loope
pushf
mov
out
je
mov
inc
and
jp
int3
jo
icebp
dec
sub
cmp
dec
mov
pop
xlat
setbe
mov
shl
sahf
jp
maskmovq
imul
fprem
inc
jno
mov
push
mov
push
outs
cwde
mov
sti
jno
js
lock
js
cld
outs
neg
xchg
in
add
scas
or
mov
xor
xor
jae
or
jg
js
int
push
stos
daa
mov
call
inc
into
mov
test
pop
xchg
add
push
add
or
pushf
js
inc
jnp
cwde
out
mov
pop
cmc
dec
dec
aaa
popf
ret
adc
jle
jno
loop
fs
xlat
(bad)
adc
out
ret
shl
in
mov
out
sbb
lods
pop
mov
jmp
xor
test
cld
jl
loop
mov
repz
test
aas
pop
add
pushf
sar
xchg
dec
imul
adc
xchg
xor
ja
or
dec
xchg
inc
dec
xchg
xor
clc
fwait
mov
pop
xor
pop
hlt
sbb
aam
fs
push
jnp
and
stc
dec
push
cmps
pop
sbb
addr16
iret
cmp
gs
jns
cmps
or
jae
rcl
jmp
xor
(bad)
hlt
or
xor
rcr
inc
cmc
mov
in
mov
push
cmc
sti
ror
mov
adc
push
repz
xor
icebp
and
jbe
aas
fdiv
push
add
icebp
push
pop
scas
sbb
icebp
lods
shl
jge
lods
cmp
inc
repz
scas
jmp
pop
inc
arpl
push
fdivp
sar
stos
push
cs
rcl
add
xor
cs
fld
or
dec
mov
mov
adc
jne
movs
cmp
or
repnz
xchg
pop
cmp
fcom
xor
js
popa
popa
jl
jle
mov
jmp
aad
movs
icebp
push
in
mov
enter
int3
jo
cmps
push
or
hlt
push
gs
out
es
cmp
xor
add
mov
push
mov
sbb
test
or
ins
push
or
push
pop
pusha
std
out
inc
mov
dec
adc
outs
pop
retf
mov
aas
mov
add
jmp
daa
mov
mov
or
mov
push
cdq
inc
les
and
ja
sti
mov
(bad)
bound
(bad)
or
inc
mov
xchg
adc
in
pop
inc
sbb
push
jp
jge
pop
es
and
mov
das
shr
call
mov
gs
mov
xor
mov
pop
fcmovnb
mov
cwde
shr
mov
and
push
test
cs
addr16
pushf
mov
adc
xchg
xchg
mov
movs
adc
stc
and
stos
jbe
leave
mov
push
inc
popa
or
out
or
mov
lahf
sub
stos
jmp
add
mov
aas
xchg
or
xor
mov
int
fisub
jno
in
pop
bound
test
arpl
xor
arpl
cmp
and
cmp
pusha
inc
sub
cmp
or
pop
pop
ret
fadd
jecxz
sbb
outs
jl
mov
jne
scas
xor
push
or
hlt
lock
xchg
mov
dec
scas
aaa
dec
push
jnp
mov
ds
xchg
jae
push
pusha
cmp
imul
jb
movs
in
mov
rol
shr
retf
mov
pop
(bad)
mov
mov
lds
outs
or
sbb
mov
cmp
add
lahf
fdivr
pop
retf
sub
xor
pandn
mov
and
movs
(bad)
fcmovbe
jmp
js
cmps
leave
cmps
mov
test
jae
mov
adc
xchg
lods
dec
fidivr
jnp
sbb
xchg
dec
xchg
xor
fbstp
pop
or
aad
mov
inc
sub
sub
addr16
addr16
add
rcr
cmps
xchg
test
jle
sub
adc
mov
stc
add
xchg
icebp
jns
jle
cmp
mov
leave
pop
(bad)
fdivp
hlt
push
ficomp
iret
add
clc
mov
les
test
les
mov
pop
and
sbb
sbb
push
lds
call
fist
adc
stc
or
pusha
retf
loop
inc
out
dec
mov
cmps
mov
lods
mov
cmp
sub
mov
sbb
mov
cmp
push
push
cdq
mov
stos
(bad)
fsubr
inc
jo
mov
xor
inc
cwde
cmps
xchg
or
cmp
aad
cmps
lock
xchg
dec
(bad)
mov
sub
in
jle
cwde
(bad)
adc
sub
int
pop
scas
add
out
icebp
xor
fldcw
mov
mov
ss
pop
into
out
rcr
test
push
in
inc
mov
cmc
loop
loopne
sub
imul
mov
sbb
mov
and
aad
xchg
dec
and
adc
inc
fdivr
lods
add
ret
push
sub
shl
xchg
add
lock
push
mov
test
movs
xor
inc
and
(bad)
in
pop
fsub
sub
pop
cdq
mov
enter
mov
sbb
add
rcr
(bad)
popf
punpcklbw
cmp
push
jge
loopne
nop
gs
mov
and
(bad)
jecxz
aam
shl
xor
(bad)
jb
pop
shl
shl
jmp
mov
mov
out
sbb
das
xchg
nop
cmps
enter
pop
mov
sub
cmp
pop
sub
(bad)
fimul
repz
mov
fistp
mov
mov
cs
xor
mov
nop
jne
push
add
jno
inc
adc
inc
retf
ror
scas
mov
and
sub
and
retf
xlat
sbb
out
mov
cmp
and
sub
(bad)
repnz
push
pop
add
add
das
jle
cmp
add
fnsave
adc
fcmove
pop
push
cwde
jl
in
jb
jl
test
in
mov
jmp
or
jne
bound
adc
inc
lods
xor
and
adc
rcl
xlat
dec
cmp
sub
fsubr
dec
rcl
push
ficomp
dec
fcmovnu
sahf
call
sbb
scas
js
or
push
xlat
mov
dec
fistp
jg
pop
inc
daa
adc
movs
lds
and
push
bound
inc
xlat
add
sub
pop
xor
mov
xor
daa
xchg
scas
or
sub
aam
or
mov
repnz
mov
cmc
(bad)
adc
out
or
aad
dec
cmp
pop
jbe
rcr
mov
push
cmp
adc
cmp
int3
stos
jp
adc
ss
adc
mov
push
cld
xlat
test
les
ins
loop
(bad)
or
jp
rcl
std
inc
sbb
in
shl
ror
jae
bound
mov
adc
mov
pop
dec
cs
mov
and
sbb
outs
add
xlat
data16
leave
or
inc
pop
xchg
dec
cmp
out
popa
imul
jb
bound
ins
mov
shl
mov
mov
int
fadd
cmc
ret
js
push
clc
or
out
mov
sub
lds
cli
sub
mov
(bad)
mov
mov
cmp
cmp
popf
in
inc
data16
loop
pop
adc
and
inc
rcr
or
cmp
ja
cmp
mov
movs
jg
and
popf
jg
loopne
daa
outs
out
pop
ins
and
push
pop
in
cli
ror
push
clc
push
mov
(bad)
adc
and
cmps
dec
pop
or
jae
cmc
sbb
dec
push
xchg
dec
mov
dec
arpl
mov
inc
sbb
test
jmp
cdq
add
retf
or
stos
fadd
xchg
sub
jnp
popa
mov
xchg
retw
test
dec
(bad)
fist
clc
leave
mov
repnz
icebp
cmp
adc
mov
adc
fwait
ds
in
or
lods
sub
jg
repnz
scas
push
adc
add
or
lods
add
ficom
dec
out
add
add
pop
jnp
(bad)
adc
iret
add
mov
int3
daa
daa
jmp
xchg
pop
dec
leave
or
out
outs
xchg
xor
cs
inc
push
adc
das
out
cli
or
dec
daa
arpl
push
push
xchg
nop
sbb
inc
std
xlat
mov
fnsave
push
pop
xchg
data16
ja
cdq
ja
aaa
mov
mov
and
addr16
push
loopne
stos
sub
ret
stos
das
out
jnp
and
scas
mov
sbb
mov
ror
lds
mov
add
inc
cdq
call
cli
push
retf
sbb
mov
fld
push
enter
or
sbb
test
ret
sbb
dec
pop
and
test
xor
cmp
outs
jmp
ds
idiv
ret
xor
and
push
je
popa
mov
mov
aam
daa
dec
mov
ins
fcomp
(bad)
out
mov
(bad)
jp
mov
cs
and
pushf
sbb
xor
daa
cwde
dec
cmc
out
push
popf
fidivr
out
pop
sbb
lock
jno
pop
push
or
sub
sub
adc
pop
xchg
js
hlt
mov
in
dec
push
xor
push
xor
push
bnd
xor
mov
or
ret
dec
das
xchg
loopne
inc
rcl
cmp
adc
adc
adc
(bad)
and
jbe
fmulp
retf
(bad)
imul
stc
aam
mov
pop
sbb
idiv
inc
mov
dec
push
inc
pusha
rcl
push
xchg
pop
jnp
mov
and
cwde
cwde
or
sbb
mov
xchg
lods
push
xchg
ffreep
mov
ins
out
dec
mov
neg
jle
xchg
and
aas
mov
and
jno
pop
push
imul
inc
cwde
xor
fcom
xor
mov
sub
ror
stc
pop
dec
cmps
dec
xchg
inc
out
push
or
xchg
in
iret
adc
movs
std
adc
jg
fwait
mov
sbb
sub
stc
rcr
push
ins
adc
(bad)
cld
enter
lds
shl
ds
stos
jo
inc
lods
outs
sbb
in
(bad)
push
xchg
or
cmps
mov
fs
movs
sub
mov
mov
sub
lds
jns
adc
into
test
mov
icebp
gs
arpl
hlt
daa
push
out
imul
test
and
mov
fwait
jle
xchg
rcr
mov
push
mov
ror
mov
add
jg
mov
xchg
in
push
cmp
sub
lock
pop
mov
pop
push
sbb
mov
rcl
retf
sbb
(bad)
adc
fldenv
push
fsub
pop
xchg
rol
std
adc
(bad)
or
test
jbe
(bad)
(bad)
ins
or
xchg
retf
(bad)
retf
cmp
inc
js
jb
adc
in
jnp
fdiv
inc
mov
dec
push
jecxz
popf
call
inc
and
push
hlt
pop
jle
adc
add
pusha
ins
sbb
inc
mov
out
or
jmp
jp
loopne
jl
xor
sbb
mov
fistp
imul
into
xchg
xchg
pop
in
pop
movs
cdq
leave
(bad)
into
add
lahf
mov
test
pop
ja
add
pinsrw
sbb
mov
xchg
dec
add
ss
shl
into
out
call
mov
pop
xchg
test
lahf
jae
cli
pop
imul
mov
rcl
leave
ror
pop
into
jge
push
sbb
aas
imul
jecxz
cmp
(bad)
fucomi
enter
jge
jmp
pop
out
imul
int3
sbb
stc
jge
aam
adc
sahf
sub
xchg
sub
ds
ds
mov
sbb
iret
(bad)
mov
div
int
cdq
les
in
sub
call
xchg
jge
dec
or
push
dec
push
mov
and
mov
cmp
mov
mov
stos
add
jmp
add
scas
sti
lea
ror
ins
cmp
mov
sub
aaa
pop
inc
add
pop
stc
(bad)
cmp
fmul
int
loope
(bad)
je
or
pop
push
scas
dec
sub
push
mov
cwde
mov
loopne
stos
lods
inc
jnp
pop
lods
mov
div
xchg
sbb
cs
push
pop
cmp
push
xlat
add
mov
xchg
je
xor
dec
(bad)
or
push
push
inc
call
adc
mov
and
test
push
in
pop
xchg
ret
add
pop
inc
loop
xchg
jo
rcr
mov
jp
cmp
fucomi
jg
ret
jb
ss
and
cdq
pop
sub
xor
mov
or
add
rcl
sbb
or
mov
imul
or
nop
cli
fild
jp
test
cli
adc
push
push
xlat
mov
pop
inc
daa
pop
sub
mov
int
inc
mov
inc
loope
retf
sub
retf
push
fwait
mov
cdq
sbb
adc
mul
dec
icebp
sbb
aam
inc
ss
xchg
adc
inc
dec
jnp
inc
test
xor
fwait
dec
pop
test
sbb
inc
imul
in
sub
dec
adc
pop
loope
(bad)
or
fstp
sbb
cmp
sub
adc
mov
jl
dec
sub
outs
retf
adc
xlat
ins
xchg
cmp
push
leave
loopne
lea
jmp
data16
xor
adc
sub
stos
mov
sbb
or
add
rcr
aam
push
mov
mov
cmps
adc
cld
inc
mov
arpl
inc
(bad)
sbb
cmp
add
mov
add
rol
inc
scas
popa
out
sub
xchg
mov
(bad)
clc
jg
push
pop
xchg
lods
fld
sbb
les
dec
ja
fsub
in
or
(bad)
nop
clc
sbb
in
into
push
imul
mov
push
or
push
pop
retf
jnp
daa
icebp
inc
xchg
add
aas
sub
pop
pop
xchg
out
in
sub
pop
cmp
pusha
cmp
push
loope
mov
bound
(bad)
(bad)
mov
xor
mov
imul
stc
mov
sub
je
dec
daa
pop
pop
sub
mov
cdq
cmp
cs
dec
dec
ds
dec
cmp
jnp
jle
jo
ror
jle
dec
xor
mov
scas
push
loopne
or
bound
repz
out
sbb
dec
shl
test
adc
add
cwde
push
int
sub
fs
xchg
inc
adc
fmul
scas
sub
stos
mov
neg
pusha
cmc
mov
xchg
arpl
add
pop
std
jge
sar
cmp
inc
push
aaa
ds
loop
jo
int3
jne
adc
cdq
pop
xor
out
push
div
xchg
xor
xlat
push
adc
push
outs
inc
and
mov
mov
cmp
and
mov
add
and
imul
jmp
jb
aas
lds
repnz
lods
sub
or
out
arpl
ja
pop
push
stc
mov
test
jo
cmp
(bad)
mov
loop
scas
and
nop
mov
clc
jmp
arpl
xchg
jmp
(bad)
or
adc
loope
mov
jmp
aad
mov
xchg
jae
sbb
out
mov
pop
jg
test
bnd
fadd
out
(bad)
and
(bad)
pop
fwait
mov
or
dec
scas
ins
(bad)
scas
jg
cld
cli
fs
js
ret
fs
imul
leave
bound
push
ss
ja
xchg
sbb
jmp
or
lahf
shr
push
nop
scas
jmp
imul
rcl
sbb
inc
adc
or
in
mov
sub
xchg
jnp
or
clc
mov
ror
lock
inc
xor
adc
inc
icebp
mov
adc
(bad)
(bad)
pop
jge
std
js
fld
push
or
or
scas
or
mov
jno
add
retf
test
xor
add
jecxz
mov
sbb
stos
or
(bad)
aad
daa
scas
pop
pushf
xor
test
retf
push
test
ja
push
cmps
sub
scas
mov
jp
in
popa
push
pusha
adc
pop
in
sub
lea
fidivr
cmps
int3
xchg
and
push
xchg
or
inc
or
xchg
add
jl
cwde
push
pop
ss
call
adc
mov
or
js
test
outs
in
or
adc
fdiv
xlat
dec
loope
int
cmp
dec
les
shl
fsubr
cld
pop
jb
scas
call
pop
int3
pop
inc
push
test
(bad)
in
sbb
lahf
call
loope
aam
ins
dec
retf
fstp
out
es
jns
or
sub
mov
pushf
sub
enter
xchg
mov
shl
shr
iret
enter
inc
pushf
dec
out
mov
mov
push
xor
imul
test
add
mov
xor
and
arpl
dec
mov
mov
push
mov
inc
lea
test
pop
mov
daa
test
pop
out
cmps
(bad)
xchg
in
pop
xor
out
jmp
addr16
popa
daa
test
daa
aaa
ja
imul
pop
push
cs
mov
push
xor
or
cmp
ficomp
xchg
(bad)
sbb
cmp
mov
add
dec
push
mov
cli
in
adc
cmc
ret
retf
xor
fisubr
or
sbb
xchg
xchg
xor
dec
nop
into
push
nop
mov
mov
shl
cmp
push
sub
(bad)
sbb
push
xchg
sbb
out
inc
sub
sbb
jmp
std
mov
adc
nop
cmp
pop
jmp
dec
push
ffreep
pushf
mov
xchg
mov
inc
retf
xchg
pop
push
pushf
adc
inc
push
fstp
xor
mov
xchg
jmp
mov
(bad)
pushw
cdq
cmp
and
inc
add
cld
add
mov
mov
sahf
ss
sahf
jmp
xor
inc
jp
cmp
inc
dec
jle
jmp
scas
mov
push
ja
mov
pop
aaa
loopne
sbb
xlat
cmp
jle
(bad)
push
mov
add
xor
popf
sti
mov
cmp
jg
inc
outs
push
cmp
inc
sahf
add
ins
lods
adc
inc
and
dec
add
scas
(bad)
rol
push
popa
lds
mov
push
jbe
xor
and
dec
and
xor
sbb
jns
inc
mov
in
jns
lahf
je
sahf
in
aad
loope
leave
xchg
cmp
test
pop
cmp
ret
push
cli
mov
mov
inc
pop
xor
arpl
and
dec
sti
adc
loope
push
push
mov
pop
pop
mov
aad
mov
dec
or
cld
scas
(bad)
cmc
xchg
jg
cwde
fwait
in
cmp
xchg
lods
jae
je
dec
xor
add
cmp
cmp
pushf
xor
jno
adc
and
and
ret
lea
daa
cmp
and
xchg
out
sbb
mov
les
or
push
stc
bound
mov
cmc
and
imul
mov
cmc
std
xchg
jg
sbb
loopne
add
aad
mov
pop
push
pop
xor
push
sub
clc
pop
test
shl
push
xchg
dec
stc
dec
jle
inc
lock
ins
fidivr
jno
dec
lea
repnz
sbb
pop
outs
mov
popf
ds
call
or
sub
aaa
xchg
xchg
add
test
outs
nop
or
retf
xor
add
imul
jae
data16
push
fldcw
cmp
jmp
lods
push
mov
out
mov
retf
sub
dec
jbe
ins
stc
sbb
test
inc
adc
dec
and
in
xchg
in
inc
mov
pop
push
shr
popa
mov
xor
leave
jbe
hlt
rcr
cmp
jmp
lods
test
jmp
fwait
aam
repz
cmc
add
adc
xlat
lea
cmp
mov
ret
test
clc
(bad)
hlt
adc
ds
in
xchg
xchg
mov
je
bound
add
pushw
sbb
mov
shl
sbb
xchg
mov
rol
lods
ret
popa
iret
hlt
mov
sbb
cmp
test
and
jbe
add
dec
xchg
pop
movs
scas
adc
aaa
in
lods
add
push
sbb
sub
cmps
adc
or
repz
sbb
ja
loope
fidiv
sahf
and
jns
mov
sbb
daa
test
sbb
xchg
(bad)
xchg
aam
inc
push
je
xchg
or
lods
lock
gs
push
pop
mov
jle
outs
out
int3
mov
or
xchg
je
(bad)
aad
jle
pop
pop
rcl
inc
mov
push
(bad)
jbe
rcl
push
loopne
sti
(bad)
cmp
add
dec
ja
lods
into
(bad)
jns
push
stc
pushf
ret
sub
mov
inc
jne
movs
retf
lock
rep
mov
cmp
test
arpl
jle
inc
ds
mov
dec
dec
pop
test
jle
out
xchg
xor
out
(bad)
push
sbb
imul
rol
and
mov
(bad)
jne
or
mov
sbb
mov
lea
pop
adc
test
pop
sbb
pop
jl
fs
clc
inc
inc
imul
mov
pop
adc
call
xor
data16
xor
loop
ja
sub
xchg
push
dec
mov
or
(bad)
jno
sub
test
outs
pop
jp
fwait
rcr
and
fcomp
xchg
and
push
xchg
mov
inc
and
push
aad
fidivr
inc
mov
lea
pop
aam
jle
xchg
sti
adc
popa
fisub
jo
pop
repnz
mov
adc
cli
push
and
jbe
lock
or
(bad)
repnz
inc
int3
cwde
dec
xor
mov
add
xor
pusha
lea
jecxz
mov
inc
add
fmulp
pop
sbb
mov
sub
cld
js
pop
inc
loopne
lds
stos
into
ins
imul
xor
or
fs
add
inc
(bad)
jecxz
and
aad
int3
sub
test
xchg
xchg
stos
outs
pop
cwde
and
xor
mov
(bad)
fwait
push
clc
inc
out
(bad)
ret
and
cmps
add
or
adc
daa
jo
dec
int3
mov
cwde
pushf
into
stos
cdq
fldcw
xlat
popf
xlat
shl
inc
fidiv
popa
mov
xchg
lahf
xor
sub
add
add
adc
sub
jns
(bad)
lds
jnp
push
pop
jmp
ins
cmp
mov
popa
adc
push
mov
mov
jmp
and
jnp
dec
cmps
pop
shr
xor
pop
push
rcl
test
pop
inc
lock
mov
shl
mov
xlat
ins
ds
out
pop
dec
les
xchg
pusha
jnp
jg
xchg
js
sbb
retfw
add
popf
pop
repnz
pop
mov
bound
(bad)
jecxz
push
loop
repnz
ror
inc
xchg
or
movs
ret
dec
nop
sar
icebp
jnp
xor
mov
sub
pop
fisttp
pop
ins
add
ret
jge
and
push
mov
lods
xlat
and
jecxz
sbb
mov
cmp
leave
sub
xor
xor
dec
arpl
pusha
push
add
push
sar
jae
daa
shr
fsubr
clc
pop
fwait
inc
jb
adc
cmovo
pop
(bad)
pop
inc
jmp
dec
cld
xchg
xchg
sbb
inc
inc
push
jl
fcom
mov
inc
jbe
movs
gs
jle
jnp
movs
cmp
jae
(bad)
and
cmc
adc
outs
jb
dec
in
dec
sub
pusha
aas
cmps
add
outs
push
repz
mov
test
sti
imul
pushf
stos
mov
xchg
fwait
into
add
fstp
mov
out
fadd
jecxz
mov
jmp
imul
pop
mov
mov
pop
(bad)
stc
(bad)
daa
pop
or
xor
jo
push
enter
cmp
sub
test
retf
call
aas
cmp
mov
lahf
sahf
out
mov
pop
jb
jg
pop
fmul
or
dec
nop
adc
xchg
movs
jo
lods
and
cmps
cmp
fld
mov
int3
push
jl
call
xchg
retf
outs
push
or
inc
call
ret
or
loop
push
stc
lea
mov
mov
out
push
dec
repz
xchg
(bad)
and
adc
sub
pop
push
shl
push
push
daa
sbb
out
dec
adc
push
push
adc
imul
aam
pop
jle
mov
out
xor
shl
cld
data16
and
ficomp
(bad)
lds
add
mov
arpl
aam
push
enter
sbb
add
call
das
xor
into
sub
xchg
cmp
pop
scas
and
xchg
out
outs
push
inc
std
push
mov
dec
bound
adc
leave
mov
xchg
jne
loop
inc
loopne
xchg
retf
add
out
sbb
int
cmp
add
enter
(bad)
sahf
push
cwde
push
xchg
jne
aas
pop
ins
test
shl
push
test
add
push
popa
sbb
(bad)
or
mov
call
lods
dec
dec
dec
cmps
cmp
and
rcr
enter
pop
fdivr
and
test
xor
stos
jmp
mov
in
jmp
add
dec
sub
and
jne
push
and
inc
adc
mov
jb
mov
inc
jne
adc
sbb
mov
popf
inc
ss
sbb
mov
rol
adc
jl
sbb
push
inc
dec
xor
sbb
call
jmp
and
fst
int3
pop
aam
outs
adc
pop
inc
push
jo
mov
or
xchg
cdq
add
(bad)
repz
mov
xor
xchg
cmp
cli
jp
int3
fwait
out
xor
add
push
(bad)
sar
xchg
fld
lods
sub
clc
add
inc
scas
and
mov
jmp
sub
cmp
pop
xor
pushf
nop
inc
mov
jmp
adc
cdq
enter
cmp
rcr
jbe
jbe
mov
fwait
dec
mov
push
or
aam
pop
in
(bad)
fisttp
mov
pop
test
call
pop
xor
(bad)
outs
pop
iret
or
in
test
adc
popf
cmp
sbb
fcomp
movs
test
dec
cmps
retf
add
cmp
dec
jmp
or
cmp
das
ins
mov
pop
add
mov
sub
mov
mov
fbstp
mov
inc
jecxz
or
inc
outs
scas
in
cmc
xor
jle
jns
jo
dec
push
mov
add
jo
inc
(bad)
xlat
push
ins
push
xor
xchg
rcl
xchg
ror
add
mov
(bad)
cmp
das
adc
das
cli
mov
in
adc
rol
fcom
pushf
leave
jle
jecxz
mov
addr16
push
in
push
dec
in
cs
sub
xchg
cs
inc
in
push
cwde
mov
push
test
fisub
clc
inc
xlat
fcmovne
xchg
inc
mov
rcr
pop
shl
stos
sub
mov
xrelease
sbb
cmp
jp
and
sub
adc
pop
loopne
mov
add
mov
jae
dec
test
test
mov
mov
sti
mov
bound
or
imul
cmp
mov
mov
sub
ins
pop
out
repnz
pushf
jp
sub
cmp
inc
into
pushf
or
ds
jmp
jge
jecxz
or
mov
cmp
test
sahf
pop
jno
pop
xchg
jbe
cwde
fs
bound
push
out
jecxz
hlt
xlat
mov
cmps
mov
inc
add
pop
mov
(bad)
les
adc
imul
ja
mov
out
sbb
mov
pushf
xchg
sbb
(bad)
cld
das
add
lea
pop
in
movs
fwait
push
repz
mov
call
leave
xor
out
aaa
mov
push
enter
mov
in
adc
cmp
ret
gs
jns
xchg
or
shr
mov
lsl
pop
(bad)
not
cmp
or
sub
into
jo
dec
mov
cmp
shl
lahf
adc
addr16
mov
mov
mov
adc
jns
dec
inc
rol
(bad)
fnsave
(bad)
leave
xchg
adc
pop
and
and
mov
psubd
adc
sub
in
pop
dec
gs
std
scas
sub
sub
push
pop
stc
push
and
in
dec
cmp
stos
lahf
inc
push
out
and
mov
add
mov
add
jne
retf
call
mov
(bad)
retf
pop
dec
popa
in
out
mov
xor
je
xor
dec
pop
ins
sti
adc
les
sbb
(bad)
ins
sbb
dec
test
test
into
dec
pop
jb
push
push
sti
inc
pusha
loopne
inc
call
cmp
xchg
cli
adc
stos
push
lods
imul
in
rcl
or
pop
sti
movs
bnd
fs
cmp
fstp
cmp
jae
mov
cmp
loopne
pop
mov
stos
jge
mov
add
mov
clc
mov
jbe
rol
dec
outs
mov
scas
lahf
and
push
pop
aaa
loop
sbb
xlat
xor
mov
popa
hlt
pop
hlt
push
xchg
stos
into
movs
jmp
lea
pop
xor
mov
fcom
jmp
mov
adc
lock
mov
rep
mov
js
loope
inc
test
lods
fdivr
rol
inc
(bad)
fld
push
sbb
push
mov
aaa
into
out
cwde
mov
pop
cwde
mov
repz
in
movs
and
js
dec
cdq
data16
jp
mov
pop
hlt
popa
and
pop
push
xor
pop
std
fs
and
xor
dec
mov
addr16
xor
cdq
test
dec
(bad)
xchg
xchg
inc
dec
and
enter
sub
mov
jnp
dec
or
jnp
mov
bnd
dec
inc
dec
icebp
shr
gs
add
push
or
cld
or
dec
shl
mov
pop
addr16
and
push
es
arpl
in
fadd
int
lea
retf
cmp
jmp
rcl
scas
outs
xor
sbb
jne
jecxz
inc
pop
or
jbe
dec
adc
gs
test
mov
inc
cs
push
aad
sbb
bound
popf
cmps
and
xchg
xchg
dec
jo
add
shl
gs
mov
dec
scas
out
sbb
rol
mov
aaa
lea
(bad)
(bad)
jp
jne
fwait
push
mov
mov
div
xchg
dec
fnsave
jp
or
std
adc
fcmovne
mov
out
imul
add
adc
or
je
xchg
cmp
and
and
shr
js
push
into
and
push
or
stos
shr
adc
pusha
and
mov
leave
or
adc
pop
mov
jne
lahf
mov
in
movs
lea
add
scas
popf
lahf
test
loop
mov
je
(bad)
in
sbb
in
clc
mov
test
lea
sbb
sub
dec
mov
mov
(bad)
bound
pop
call
in
xor
xor
std
(bad)
sbb
cwde
pop
outs
fist
pop
mov
adc
movs
sub
or
jns
test
repnz
jl
cs
sub
dec
mov
sbb
sub
sub
sub
mov
call
add
repz
outs
popf
push
fdivr
bound
or
or
xchg
hlt
xchg
shr
push
cwde
shl
sub
imul
in
movs
lods
popf
iret
xor
adc
add
sbb
jbe
push
adc
or
jmp
sub
add
icebp
scas
cmp
cld
add
push
fsub
mov
cmps
mov
cmp
add
div
push
sub
arpl
inc
push
in
push
icebp
inc
lods
pop
test
cmps
ss
mov
sbb
sbb
imul
adc
sub
(bad)
fsub
pop
xchg
sbb
add
loop
mov
lds
loopne
fstp
call
outs
pop
stc
in
in
add
cmp
adc
mov
jns
cwde
test
push
popf
aam
mov
aad
sbb
jmp
xchg
and
popf
clc
fimul
pop
pop
sub
je
push
mov
or
and
jae
(bad)
or
mov
pop
mov
add
fucomp
and
psadbw
add
dec
mov
(bad)
jae
push
gs
sar
mov
jmp
push
xchg
push
pop
std
mov
mov
sub
adc
test
mov
shr
stc
(bad)
sub
lahf
hlt
pop
in
movs
lods
mov
repnz
xchg
(bad)
in
mov
dec
xchg
hlt
fadd
dec
pop
xchg
pop
mov
ss
rcr
repnz
(bad)
out
rcr
inc
mov
or
bound
adc
adc
and
jo
loop
and
sub
(bad)
test
and
pop
popa
fld
mov
cmp
dec
or
dec
adc
jne
mov
mov
pushf
push
jecxz
test
retf
jmp
jecxz
mov
sti
and
xchg
stc
das
push
in
lea
jmp
and
and
arpl
gs
mov
push
mov
aam
pop
jmp
shr
adc
push
or
shr
addr16
repnz
mov
outs
or
pop
jp
test
jo
pop
popa
test
ror
xchg
adc
das
outs
scas
icebp
fs
jo
fild
jg
cs
fistp
jmp
dec
pop
rol
int
in
stos
sbb
jg
test
sub
push
jecxz
mov
mov
clc
cmp
lds
movs
out
sti
ss
std
xchg
int3
mov
mov
(bad)
push
mov
scas
dec
cmp
mov
mov
data16
loope
outs
sub
(bad)
inc
xchg
xor
dec
icebp
mov
dec
fadd
leave
into
bound
cmp
sub
hlt
mov
(bad)
(bad)
fldcw
fdivr
xor
jecxz
stc
xchg
mov
jae
dec
fld
inc
sti
inc
or
jmp
psubusw
sub
popf
data16
aas
add
pop
jp
xchg
sub
(bad)
lods
push
pop
test
iret
jmp
jnp
pop
inc
pop
and
retf
rcr
shr
mul
cmp
mov
in
pop
push
xchg
mov
adc
je
cwde
int3
and
das
pop
inc
retf
mov
fisub
mov
call
push
mov
(bad)
xor
lods
push
xor
xor
out
lods
add
push
xchg
sub
and
push
pop
je
add
mov
ret
sbb
call
icebp
jne
xor
xchg
pop
lea
sub
mov
sbb
dec
dec
inc
out
loope
icebp
cmp
out
cmp
imul
xor
fwait
leave
mov
adc
fwait
push
push
sbb
mov
rol
inc
lea
jne
(bad)
mov
add
push
stos
xor
or
mov
aaa
mov
cdq
push
mov
push
loopne
inc
jae
xchg
push
add
push
adc
test
mov
rol
mov
add
(bad)
mov
lock
loope
adc
or
and
in
iret
pop
cmp
loope
cmp
cmp
push
jle
shr
cmp
(bad)
addr16
out
clc
push
xchg
xchg
clc
ret
lahf
imul
mov
mov
inc
xchg
mov
mov
cld
test
pop
inc
clc
add
lods
mov
das
adc
xchg
dec
push
out
pop
mov
cld
ja
inc
mov
adc
enter
and
push
mov
(bad)
sub
lea
mov
imul
sub
jmp
call
mov
sub
sbb
jne
dec
push
aaa
fs
push
or
jmp
sub
sub
xor
add
push
les
test
repz
mov
ja
jle
jle
jecxz
push
sub
mul
in
sub
mov
stos
test
data16
fcomp
cmp
in
pop
cli
mov
mov
into
into
std
in
pop
inc
leave
sbb
iret
mov
into
(bad)
cs
xchg
shr
inc
xchg
xchg
cmc
fucomip
sub
loope
push
into
jb
jbe
fistp
jns
into
fstp
add
stc
dec
out
cmp
sbb
in
loope
add
push
test
lods
xchg
mov
inc
dec
fisubr
jmp
hlt
aad
addr16
jle
jno
addr16
xor
pop
jl
repz
imul
aam
fucomi
dec
bound
pop
sbb
je
lahf
stos
sub
xchg
iret
mov
adc
movs
cmp
clc
jmp
fistp
sbb
mov
or
sub
jecxz
and
sub
mov
mov
scas
sbb
xchg
fiadd
test
and
pop
sub
daa
mov
outs
cwde
and
test
sub
push
(bad)
cmc
xchg
in
cmp
and
int
sti
pop
pop
pop
(bad)
aas
xchg
mov
popa
scas
adc
lahf
jp
movs
cmp
xor
outs
les
and
lods
ret
mov
fcmovu
enter
pushf
and
sbb
add
jae
mov
fmul
in
gs
es
enter
xchg
pusha
std
in
mov
ret
rcr
mov
xchg
ja
movlps
jecxz
dec
fcom
sub
sub
ins
mov
shl
(bad)
test
sub
mov
sbb
out
xchg
je
ror
push
dec
push
ficom
into
cs
inc
mov
imul
aaa
clc
fs
aad
into
hlt
pusha
ja
fld
mov
xchg
push
adc
pop
mov
les
xchg
xchg
xchg
add
dec
les
test
gs
add
lds
xor
lds
test
sbb
ja
adc
pusha
xchg
sar
xchg
jecxz
fcmovu
sti
sti
inc
sbb
mov
(bad)
lods
mov
outs
pop
adc
sub
clc
clc
mov
shr
das
mov
pop
pop
cmp
mov
jb
or
rcr
es
lea
ret
jae
outs
jp
mov
addr16
jns
xchg
push
mov
(bad)
loop
ficomp
cmps
xchg
bound
pop
lock
(bad)
(bad)
adc
or
out
lahf
dec
cmp
sahf
and
mov
inc
inc
mov
das
xchg
sub
pushf
pop
daa
xchg
inc
es
(bad)
push
pushf
xchg
xlat
lahf
add
and
(bad)
sbb
ins
icebp
xchg
fild
loopne
cmp
sbb
aad
inc
mov
popa
jb
push
aad
in
lock
push
movs
fdiv
xor
sbb
xor
cmc
dec
push
or
mov
push
jg
rol
sbb
ror
aas
in
(bad)
fld
jg
repnz
jg
out
in
cs
mov
test
leave
add
retf
dec
int
jmp
and
add
inc
sti
aaa
jmp
and
dec
punpckhdq
push
fidivr
test
arpl
xor
fwait
movs
push
lods
jmp
into
pushf
(bad)
xor
out
mov
repz
adc
jl
pop
lds
cli
xchg
inc
xchg
dec
or
xchg
inc
or
ds
xchg
test
mov
or
or
sbb
push
and
lods
test
pop
cdq
xchg
xor
fwait
cmp
cmps
leave
xchg
jb
mov
popa
shr
add
sub
shl
ret
xor
xchg
cmp
sbb
and
ss
idiv
xchg
jbe
dec
cmp
xor
mov
jb
jl
and
mov
sahf
aaa
sbb
xchg
mov
fld
pop
call
sar
pop
xchg
xchg
adc
imul
mov
cmp
pop
jbe
cmp
push
inc
cmp
aaa
pop
mov
dec
jl
test
and
bound
cld
imul
gs
mov
jo
lahf
mov
mov
cmp
xor
cmp
jo
outs
pop
imul
stos
neg
jg
ss
sub
mov
nop
pop
lock
repnz
arpl
cmp
adc
repz
loop
ret
mov
(bad)
and
test
jno
mov
add
jno
lods
push
pop
pushf
adc
jnp
jg
mov
mov
(bad)
sahf
push
adc
cs
stc
mov
in
stc
arpl
pop
lods
popa
mov
xor
js
out
jge
mov
sub
jbe
mov
cdq
fidiv
xlat
sbb
lods
jle
mov
leavew
(bad)
je
inc
ins
sbb
inc
sbb
jecxz
pop
fldln2
mov
add
outs
sahf
xor
xor
adc
loope
mov
inc
pop
sub
jb
push
mov
shl
push
jg
jp
push
xchg
push
retf
rcr
mov
push
sbb
mov
add
fwait
xor
add
int
scas
xor
dec
mov
push
dec
adc
lea
(bad)
pop
pushf
lods
push
mov
pop
jp
mov
push
pusha
test
sub
fldenv
lds
jmp
push
(bad)
sub
cmps
lods
xor
pop
int3
cmp
xchg
mov
iret
xor
push
mov
mov
inc
lahf
(bad)
pop
adc
popa
retf
mov
mov
jmp
mov
(bad)
sti
stos
xchg
popf
mov
test
ja
mov
outs
inc
movs
mov
add
sub
es
pop
push
push
mov
xlat
jge
pusha
or
mov
scas
sbb
repz
mov
inc
scas
data16
int
jp
cmp
sub
fwait
and
jb
jae
shr
mov
lea
mov
mov
pop
push
frstor
ja
mov
pop
cmp
jno
jge
xchg
xchg
ret
sub
in
cmp
popf
mov
mov
(bad)
xor
xchg
xchg
xor
adc
lods
test
and
cli
adc
ins
ins
jg
pusha
jecxz
cmp
enter
je
stos
dec
(bad)
stc
stos
addr16
call
sub
mov
mov
outs
pop
xchg
ret
hlt
sahf
push
shl
push
out
mov
sub
test
icebp
sti
push
jnp
cmp
jnp
mov
adc
sbb
inc
mov
sub
scas
aam
fisub
mov
mov
mov
pop
imul
(bad)
pop
sub
pop
push
jnp
xchg
cmc
rcl
hlt
or
jo
fisubr
push
psubq
fcomp
xor
enter
fst
outs
(bad)
ja
int3
aad
ss
mov
loope
jb
test
gs
test
push
jmp
fs
dec
pushf
ret
mov
sub
sub
mov
push
mov
xor
mov
das
aad
sub
nop
(bad)
lock
out
inc
addr16
bound
xor
lahf
pop
icebp
mov
push
push
dec
loopne
les
cmp
test
lods
es
std
mov
outs
pusha
into
cmp
out
and
fild
xor
and
leave
add
cdq
loope
pop
xor
stos
pop
inc
cs
rcl
sub
mov
call
repz
fcomp
(bad)
aad
(bad)
shl
popa
rcl
push
js
sub
mov
cmp
rol
dec
fsubr
pusha
xor
mov
out
scas
sbb
vpshuflw
pop
lea
push
ins
sar
push
lea
add
scas
cmp
mov
mov
push
loop
mov
and
or
pop
adc
cmc
clc
mov
jns
cmp
int3
loopne
sub
outs
push
sub
ins
push
mov
pop
cmp
add
pop
arpl
mov
mov
jb
and
aad
sub
jmp
push
out
scas
aaa
pusha
xor
mov
jle
std
bound
fdiv
jno
mov
jmp
add
shr
push
push
test
sub
mov
cli
enter
test
ror
(bad)
scas
(bad)
enter
dec
inc
or
jmp
push
icebp
or
pop
int3
dec
add
cld
daa
scas
pop
sahf
pop
adc
jns
cmp
jmp
lods
mov
ja
or
outs
icebp
lds
js
push
jo
(bad)
popf
xchg
ret
sub
fist
add
pusha
xchg
mov
test
xchg
dec
dec
mov
push
test
gs
stos
push
out
iret
lods
mov
aam
scas
movs
inc
sbb
or
adc
pop
mov
pop
and
add
ins
gs
push
adc
pushf
dec
mov
push
(bad)
mov
add
inc
adc
jecxz
cmps
inc
pop
out
mov
ror
cmp
fdiv
(bad)
arpl
push
fisub
fsubp
and
ja
retf
ja
mov
in
jbe
es
jmp
sbb
pop
stos
mov
or
mov
cmp
push
pusha
jge
xor
pop
in
dec
inc
(bad)
lahf
retf
cmp
popf
push
cmps
inc
out
aas
(bad)
jl
pop
or
arpl
pop
inc
mov
push
push
cs
pop
mov
aaa
test
add
mov
push
cld
jge
or
icebp
mov
popa
xchg
add
arpl
sub
sub
push
movs
out
sub
fcom
pop
mov
ins
in
sahf
dec
dec
mov
inc
push
jecxz
jns
pop
mov
pop
(bad)
push
push
and
or
sbb
jmp
lods
push
dec
jae
mov
leave
aam
sub
adc
dec
sub
leave
add
jne
adc
mov
add
sbb
aad
das
fidiv
inc
pop
xchg
out
test
pop
mov
dec
jae
mov
hlt
add
xor
push
popf
test
das
ds
push
jle
push
jmp
test
fisubr
stc
sub
mov
lods
ss
mov
mov
into
test
sbb
adc
adc
sub
(bad)
fnstsw
cs
(bad)
mov
sbb
inc
xchg
clc
inc
push
push
dec
leave
inc
or
ret
popa
pop
push
mov
mov
addr16
daa
push
inc
adc
sub
push
loope
addr16
ficomp
sub
stc
add
pop
jnp
lock
rcl
mov
je
fisttp
not
fstp
ins
sahf
push
adc
hlt
sub
lahf
icebp
fild
xor
mov
ja
mov
cmp
lea
add
sti
push
inc
sbb
lods
stos
dec
fld
cmc
pop
in
add
popf
iret
dec
test
fs
(bad)
mov
mov
call
frstpm(287
aad
call
inc
mov
ins
inc
add
out
mov
add
clc
repnz
ds
jmp
test
ins
inc
nop
xchg
shr
push
daa
pop
jmp
xchg
les
cmps
aam
push
dec
inc
push
aaa
aam
mov
or
adc
int3
mov
sub
leave
pop
mov
retf
pop
rcr
ret
addr16
sbb
lods
sbb
fimul
pop
lea
rol
or
push
jo
movs
cmp
adc
aas
arpl
pop
mov
and
js
push
outs
mul
mov
hlt
push
or
aad
fild
pop
inc
push
push
hlt
pop
cmps
mov
mov
pop
mov
mov
cmp
xlat
add
icebp
xor
ds
movs
push
add
inc
out
push
test
scas
xlat
daa
jg
int3
push
fs
cmc
jg
sar
push
lods
out
test
sub
dec
dec
in
mov
mov
adc
mov
and
sbb
cmps
xchg
and
sbb
mov
mov
xor
les
jge
pushf
repnz
mov
xchg
and
dec
pushf
xchg
mov
nop
ins
sar
pushf
xchg
sub
repnz
je
sbb
ins
jp
inc
mov
ret
mov
dec
push
jb
push
inc
inc
rcr
dec
rol
cmp
popa
mov
out
jbe
lock
fnsave
and
xchg
dec
(bad)
mov
lods
lock
xor
stos
retf
out
and
call
mov
mov
rcl
or
cli
sbb
mov
xor
pop
xchg
movs
inc
loopne
imul
aam
cmp
push
pop
inc
and
push
add
lock
cdq
cmp
sbb
inc
adc
cmc
test
push
call
adc
xor
push
(bad)
repz
mov
lock
add
sti
pop
inc
xchg
inc
test
aam
ss
loope
xchg
mov
and
iret
fcom
shr
fsubr
(bad)
jge
imul
dec
mov
mov
adc
cwde
cmps
mov
add
iret
cmp
stc
push
shr
sbb
mov
add
pop
shr
sub
lahf
pop
aam
jnp
mov
push
pop
clc
add
inc
cmp
xor
hlt
adc
aam
out
out
sub
mov
push
xchg
pop
jmp
xchg
push
mov
mov
lds
iret
stos
xor
fwait
inc
xor
pop
inc
xchg
mov
jo
fsubr
xchg
stc
xchg
mov
inc
in
xor
mov
mov
xchg
inc
pop
pmaddwd
xchg
mov
(bad)
xchg
and
jmp
out
sub
mov
or
push
xchg
mov
jns
xor
xlat
ins
push
mov
xor
mov
in
rcr
es
or
shl
xchg
sub
pop
movs
mov
arpl
sub
js
push
lods
mov
mov
sub
pop
xor
or
jecxz
bound
fcmovnu
dec
mov
fwait
dec
icebp
jecxz
adc
mov
mov
adc
call
or
dec
mov
jge
imul
push
mov
mov
in
xchg
gs
les
ja
jecxz
gs
pop
mov
cmps
(bad)
push
mov
int3
pop
cwde
sub
and
cmps
and
aas
add
int3
adc
mov
mov
inc
xchg
scas
add
cmp
sub
sub
retf
jns
sbb
cs
sub
into
pop
dec
dec
mov
sbb
pop
mov
imul
adc
repnz
test
xchg
or
jns
iret
sub
stos
test
scas
xor
(bad)
jb
cli
add
pop
push
adc
call
cmp
ja
lahf
sbb
in
ja
xor
mov
loopne
pop
dec
add
scas
add
xchg
stc
mov
stc
mov
mov
jp
jb
nop
stc
and
popf
xor
sbb
rcl
xor
loopne
jb
jne
jne
es
mov
xor
(bad)
mov
dec
lds
cmps
and
cmps
neg
cmps
mov
pop
jno
(bad)
mov
pop
lea
arpl
ins
push
pop
push
ret
adc
dec
jmp
in
outs
sbb
pop
mov
inc
ret
xor
jae
sub
xchg
test
pop
ret
inc
retf
test
xor
fnstsw
cmp
movs
(bad)
out
scas
push
cmp
fnstenv
and
sahf
sbb
rcl
out
and
push
jmp
outs
sub
adc
pop
pop
retf
or
lock
shl
mov
xchg
and
out
jns
push
popf
mov
dec
mov
rcr
ins
lock
shr
pop
adc
sbb
ror
dec
scas
xchg
pop
out
mov
pop
lea
out
cmp
out
pop
fcomp
sbb
mov
dec
pop
aas
inc
xchg
lahf
jp
(bad)
sbb
push
cmp
xchg
inc
mov
cmps
xchg
inc
aaa
xchg
call
lods
mov
inc
cld
mov
jae
sub
mov
cmp
mov
(bad)
mov
or
jnp
mov
sbb
fadd
outs
pop
ss
add
add
xor
out
ins
int
push
xor
jo
stc
icebp
pusha
cmp
ror
xchg
test
scas
(bad)
std
stos
je
mov
imul
push
push
and
in
jg
cmp
pop
mov
add
jg
into
sbb
jo
push
or
jb
fcomp
in
mov
push
mov
(bad)
iret
mov
aaa
ins
jno
cmp
rol
or
cmp
push
adc
ror
dec
push
inc
nop
fnsave
push
rcl
iret
and
push
mov
adc
lds
ss
scas
push
cld
hlt
jns
cmc
xchg
dec
push
mov
jne
push
arpl
push
sahf
cmp
mov
(bad)
sti
shl
xor
jb
dec
fld
ret
sub
movzx
dec
shr
call
dec
push
test
inc
mov
xchg
cmp
in
retf
xor
shr
push
or
int
repnz
dec
mov
mov
adc
fdivr
fs
push
push
repz
xor
cli
neg
bnd
mov
aaa
pop
or
mov
mov
or
pop
adc
retf
int
xchg
loopne
cmp
sar
sti
jecxz
pop
xchg
leave
add
fsubr
mov
push
pop
pop
shl
mov
pop
push
xor
xor
dec
mov
or
cmp
cmps
(bad)
ds
push
cmp
pop
sub
cmp
mov
je
cmp
xlat
arpl
(bad)
jl
mov
je
dec
pop
mov
loopne
loopne
fnsave
cmp
pop
xchg
std
adc
outs
sub
xchg
pop
cs
hlt
ror
nop
sbb
ror
jbe
adc
pop
lds
(bad)
or
mov
cmps
sub
mov
dec
test
icebp
cmp
sub
xchg
jg
pop
sbb
mov
pop
pop
xchg
js
fld
cdq
jnp
dec
test
(bad)
scas
pop
cld
js
test
shl
(bad)
mov
and
cmc
fisubr
ror
mov
pushf
fcmovne
out
ret
sub
pop
lahf
hlt
jbe
or
test
iret
sbb
mov
rol
pop
lahf
xchg
ins
(bad)
data16
in
fsubr
jmp
xchg
mov
in
in
jno
repz
lods
and
ret
callw
ja
mov
jnp
fucom
and
pushf
sar
outs
cmp
pop
outs
hlt
pop
iret
lods
iret
xchg
mov
(bad)
adc
inc
pop
push
add
icebp
das
pop
cmps
dec
mov
je
sub
les
and
or
sti
outs
or
mov
xchg
inc
or
movs
popa
jle
push
mov
fnstcw
icebp
push
stc
pop
jl
xchg
ins
pop
loop
rcr
xor
aaa
fcomp
ror
lds
mov
gs
fcomi
adc
hlt
xor
adc
adc
(bad)
js
and
sti
int
lds
cld
push
hlt
push
(bad)
shl
(bad)
repz
adc
cmp
cmp
sub
sbb
inc
xor
loop
loope
dec
xor
retf
xlat
adc
fcomip
sub
lods
(bad)
aas
sub
shr
ins
call
xchg
xlat
cld
cmp
add
jmp
jb
xor
in
xor
aaa
movs
sub
inc
repz
jle
mov
sub
dec
sub
pop
cli
bound
add
aas
sbb
xchg
arpl
shl
dec
lahf
xor
jmp
adc
xchg
loop
(bad)
mov
mov
jl
sub
retf
(bad)
into
aad
dec
lea
lods
sbb
inc
jl
outs
mov
(bad)
mov
ins
rol
jae
(bad)
cdq
sbb
xchg
xchg
sbb
fs
es
cwde
loopne
mov
icebp
xor
sbb
cmp
loop
sub
inc
in
sbb
or
jge
imul
movs
jne
inc
and
mov
je
push
out
int
leave
jl
pusha
shl
xchg
loop
xchg
fs
(bad)
js
fcmovnb
push
add
pop
jmp
sub
leave
mov
inc
push
in
int
mov
adc
xchg
lods
or
mov
pop
aad
icebp
les
sub
and
mov
pop
xchg
dec
pop
out
pop
inc
icebp
inc
jge
xchg
repz
mov
jecxz
xlat
rcl
mov
mov
mov
cmps
ds
and
mov
add
mov
jb
stc
lds
jns
inc
rcr
stc
mov
jne
push
daa
cs
xchg
mov
shl
stos
mov
adc
cmp
shr
in
test
or
pop
aaa
sbb
mov
repz
xor
push
jg
and
fiadd
jge
jmp
movs
not
jg
push
jg
pop
int
cmc
in
or
retf
jle
rol
pop
cli
push
add
icebp
xor
cmp
pop
das
adc
in
jmp
clc
push
fdivp
popf
add
adc
and
mov
mov
adc
push
mov
dec
test
adc
int3
jno
rol
inc
out
rol
jmp
jae
mul
xor
or
movs
sub
mov
and
pop
lock
jl
xlat
pushf
mov
pushf
mul
test
mov
jnp
mov
cmps
or
mov
pop
daa
push
enter
sbb
ds
pop
(bad)
outs
pop
in
out
ffreep
cmps
mov
adc
push
xchg
mov
sub
xor
and
add
mov
icebp
loopne
addr16
xchg
and
das
adc
mov
adc
mov
mov
sti
jne
mov
cdq
lock
mov
jl
lock
adc
pop
ins
mov
stos
and
mov
pop
jmp
mov
jg
ds
or
push
je
cmps
mov
cmp
and
(bad)
sahf
or
mov
mov
pop
xor
fist
aas
aam
aaa
xor
aad
arpl
inc
jmp
pop
inc
fld
adc
xchg
mov
add
add
les
inc
std
mov
cdq
out
cmps
sub
mov
out
mov
pop
imul
je
push
mov
retf
mov
(bad)
adc
xchg
mov
es
xchg
mov
sub
lea
bound
inc
and
int3
in
or
ins
shl
mov
sub
es
dec
in
mov
sub
adc
push
aad
movs
xor
add
shr
sbb
call
xchg
into
sbb
icebp
je
cmp
mov
stc
fadd
cmp
sub
fs
mov
lea
and
repz
ins
mov
mov
dec
cmps
je
add
cdq
out
mov
inc
mov
jno
or
xor
dec
and
push
or
inc
mov
sub
add
icebp
popf
call
out
mov
pusha
add
cmp
ficom
jno
add
pusha
inc
lods
xchg
dec
adc
mov
int3
sbb
push
(bad)
in
fcom
mov
in
mov
pop
cld
jne
jecxz
scas
jg
lods
ret
out
arpl
mov
cmp
cmp
out
sbb
push
imul
mov
(bad)
xor
adc
mov
pop
cwde
fsubr
sbb
sub
jle
movs
push
jbe
mov
imul
inc
shl
(bad)
jge
nop
jb
jne
inc
xor
mov
retf
dec
mov
sbb
adc
(bad)
jle
or
pop
(bad)
imul
sub
add
or
das
mov
or
sbb
iret
addr16
dec
xor
loop
jmp
mov
shl
bound
xchg
jne
retf
xor
pop
and
loopne
or
scas
iret
pop
fmul
ret
cld
dec
adc
push
ret
int3
fild
jecxz
jne
dec
push
iret
stos
(bad)
sub
and
mov
rol
mov
or
fs
pop
add
mov
xchg
(bad)
scas
ins
js
shr
pop
mov
call
mov
sub
xchg
rol
inc
jae
setge
enter
dec
mov
or
add
sub
push
aaa
sub
mov
call
mov
and
fdiv
or
sar
(bad)
jecxz
jmp
xchg
dec
cs
mov
mov
push
in
xor
call
push
ret
jp
adc
mov
push
add
ins
mov
je
retf
pop
sub
aaa
push
dec
je
dec
mov
lods
xchg
(bad)
hlt
jno
es
lods
mov
aam
sbb
xchg
mov
(bad)
xchg
call
push
jmp
jnp
out
lahf
jbe
dec
inc
and
mov
mov
push
push
movs
xchg
sahf
xchg
sbb
or
call
repnz
jp
xchg
into
pop
pop
xor
iret
popf
lea
aaa
xchg
test
jmp
xor
call
pop
dec
dec
mov
xchg
dec
or
push
sbb
cli
outs
sti
jne
in
jo
ins
xchg
inc
std
or
xor
in
add
imul
aad
test
ss
jl
mov
test
mul
xchg
ds
mov
mov
inc
imul
outs
pop
jg
sbb
xor
aad
and
add
and
les
jl
test
shl
cs
cmp
xor
inc
pop
adc
imul
dec
test
fstp
add
mov
xor
pusha
fs
jl
push
xchg
adc
fidivr
popf
imul
xchg
pop
test
or
loop
mov
cmc
add
xchg
lods
push
test
mov
ins
leave
cwde
sti
iret
add
dec
cmc
movs
not
pop
inc
jbe
ret
mov
push
repnz
ins
inc
in
ret
cmps
mov
and
inc
stc
movs
neg
mov
pop
mov
mov
repz
inc
sbb
fcmovnu
imul
neg
test
xchg
mov
xor
add
push
stc
sub
sbb
jmp
sbb
mov
fld
xchg
or
xor
dec
ret
xor
push
push
cli
adc
pop
mov
xchg
add
sbb
cmp
rol
jecxz
xchg
loope
stc
(bad)
leave
jmp
mov
push
(bad)
sbb
jae
mov
add
imul
sar
push
mov
inc
jmp
popf
iret
loop
retf
aam
jb
push
push
lea
and
add
hlt
mov
sub
pushf
or
push
or
or
mov
cmp
xor
call
sbb
or
jb
jne
fdiv
leave
mov
mov
xor
mov
ins
inc
pop
inc
loop
ds
es
cmp
(bad)
cmp
sbb
push
movs
mov
mov
jg
ja
pushf
mov
les
mov
mov
outs
cmc
and
xchg
or
add
pop
out
scas
cmp
inc
call
mov
(bad)
mov
xlat
or
movs
push
pusha
sbb
shl
dec
push
sub
pop
cdq
xor
jg
or
or
inc
push
mov
in
push
mov
test
push
data16
movs
mov
ds
addr16
inc
cmp
add
test
inc
adc
sub
add
add
sbb
cmc
mov
test
inc
add
mov
into
dec
fld
inc
sub
out
popa
enter
sub
ins
or
push
jmp
mov
int3
and
shl
ss
pop
sbb
aam
cld
sub
adc
mov
jne
lods
movs
add
and
mov
or
sbb
add
fisubr
xor
(bad)
clc
stc
repz
mov
mov
push
stc
mov
inc
shl
xor
(bad)
lods
cmps
fmul
push
rcr
mov
pushf
in
jmp
stos
ss
adc
pop
inc
cmc
(bad)
push
fs
nop
cmp
mov
gs
ja
pop
pop
pop
out
pop
sub
fistp
in
call
mov
fsub
jne
arpl
jecxz
test
fadd
xor
cwde
lods
add
test
and
out
pop
sbb
data16
adc
jl
jo
and
daa
icebp
sbb
cld
gs
add
push
in
sub
(bad)
mov
fs
push
out
add
fmul
test
stos
pop
ficomp
xor
inc
inc
cmps
lods
push
push
jl
aam
or
fnstsw
fwait
mov
adc
gs
mov
push
(bad)
neg
xchg
loopne
sub
mov
xor
or
cmp
pop
add
sbb
aas
push
mov
nop
daa
nop
fmul
pop
bound
mul
xchg
mov
mov
cwde
jnp
scas
cld
add
outs
dec
mov
and
dec
adc
ficomp
xchg
in
sub
cli
addr16
and
sbb
xor
cs
sbb
cwde
jbe
jmp
fs
(bad)
ror
test
adc
fistp
out
cmp
dec
xchg
and
mov
inc
or
xchg
lock
dec
mov
sbb
lahf
and
push
push
and
loope
test
pop
mov
jmp
pop
lods
pop
in
aaa
retf
clc
lock
stos
outs
(bad)
into
cmp
xchg
repz
pop
xchg
push
mov
mov
(bad)
jle
scas
mov
daa
inc
xchg
loopne
jne
ds
ins
test
daa
pusha
clc
adc
mov
pushf
int3
aaa
mov
dec
pushf
mov
push
xlat
cmp
stos
sar
pop
jle
out
fisubr
out
add
pop
dec
jno
in
mov
mov
out
dec
stos
mov
pop
jae
(bad)
and
test
ret
pop
fld
jne
call
xchg
ins
(bad)
sbb
xchg
outs
sbb
adc
cmps
aaa
iret
icebp
add
and
add
xlat
pop
mov
ret
aas
push
jbe
rcl
out
(bad)
push
sub
out
je
loop
adc
(bad)
sbb
and
dec
outs
les
dec
sub
adc
stos
mov
pop
lock
loopne
popf
sbb
loope
xlat
pop
in
movs
sub
xor
inc
outs
js
cmp
lods
out
stos
sub
repz
(bad)
(bad)
sbb
popf
push
xor
push
lahf
ror
aad
add
shl
mov
xchg
xchg
push
mov
cmp
sub
push
loope
scas
xchg
rol
loope
jmp
adc
ds
daa
mov
sbb
mov
daa
test
in
pushf
(bad)
test
add
inc
(bad)
jl
jmp
mov
pop
sbb
call
mov
jbe
in
inc
pop
mov
inc
retf
xchg
add
iret
mov
inc
lods
jmp
in
add
xchg
adc
jle
xchg
lea
add
retf
push
adc
sbb
inc
nop
push
sbb
xor
sti
out
push
rep
pop
pop
js
enter
ja
lea
jg
inc
add
xor
jnp
mov
sbb
push
ins
clc
rep
dec
push
push
fadd
aad
sub
lea
dec
ds
test
loop
mov
mov
pop
jecxz
ss
movs
cmp
push
das
jl
(bad)
xchg
xchg
jl
sbb
lea
test
aaa
in
pop
movs
mov
mov
and
inc
mov
int3
and
ins
out
pop
ss
repnz
data16
into
sub
or
cmp
mov
out
push
sbb
xchg
jo
sbb
adc
mov
push
sbb
fsubr
push
fisttp
enter
imul
adc
std
outs
in
pop
xchg
bound
xor
fwait
sbb
scas
push
and
mov
push
bswap
lock
daa
das
lea
sub
jne
jnp
leave
lds
push
std
hlt
dec
(bad)
aad
ret
test
sub
cmp
jno
xchg
push
icebp
sub
mov
mov
pop
jmp
pop
dec
daa
mov
push
xchg
ficom
test
adc
mov
xchg
jne
outs
sbb
mov
lods
aam
push
and
mov
or
mov
mov
rol
jmp
sahf
je
mov
outs
sbb
add
mov
js
mov
adc
leave
or
cmp
cmp
repz
aam
sub
loop
es
mov
push
push
sub
mov
fdivr
add
pushf
sub
push
cmp
ds
test
add
sbb
retf
push
dec
ficom
mov
mov
push
gs
jg
stos
(bad)
mov
or
lea
adc
inc
jle
pop
mov
(bad)
ret
adc
xor
cld
scas
sbb
mov
inc
out
outs
ins
dec
or
adc
jb
lods
mov
bsf
(bad)
je
stc
je
or
add
sti
inc
aas
stos
xchg
mov
jns
jmp
and
sub
dec
jnp
inc
push
call
adc
or
mov
sub
pusha
adc
cmp
inc
inc
add
sub
inc
xchg
repnz
adc
ret
dec
dec
daa
cmps
retf
cwde
jg
dec
jns
mov
dec
or
repz
xchg
sbb
std
or
jmp
retf
mov
mov
icebp
(bad)
xlat
inc
mov
jmp
and
pushf
inc
jp
rcr
outs
add
sub
retf
dec
adc
and
add
fimul
push
test
fwait
punpckhwd
leave
sbb
cmp
pop
pop
jecxz
(bad)
out
push
stc
out
shl
xor
outs
and
lahf
jp
adc
mov
out
dec
aad
mov
imul
aas
jns
mov
iret
push
aad
inc
loop
dec
mov
iret
mov
sbb
xor
loop
mov
push
push
jb
dec
arpl
fdivr
and
mov
mov
stos
mov
inc
jecxz
mov
adc
add
ss
jecxz
push
push
mov
mov
out
mov
popa
xchg
sub
dec
adc
in
sbb
mov
dec
or
mov
inc
in
jp
pop
inc
js
retf
shl
lea
clc
aas
jl
lods
lea
sti
movs
push
cmp
push
ror
mov
or
pusha
test
and
shl
mov
adc
mov
outs
cmps
xor
jmp
repnz
mov
out
inc
jb
jl
add
ins
xchg
xchg
jp
(bad)
out
jbe
loopne
pop
mov
lods
or
xor
jg
and
addr16
adc
jl
adc
sub
or
mov
cli
test
enter
dec
retf
(bad)
adc
pop
cs
xchg
push
xchg
jmp
adc
pop
or
movs
ins
mov
(bad)
(bad)
out
dec
add
ret
leave
movs
mov
or
retf
cmp
cld
jle
sbb
xchg
adc
pop
pop
dec
inc
dec
cmp
adc
mov
mov
jns
sub
jns
push
sbb
ret
lds
xchg
aaa
mov
int3
jo
pop
inc
mov
aaa
(bad)
fldpi
iret
fimul
scas
es
inc
sub
pop
imul
das
ins
cmp
jecxz
and
adc
daa
ret
cmps
pop
adc
call
mov
imul
jno
pop
movs
fmul
dec
xlat
cmps
cli
out
mov
retf
add
sbb
data16
les
mov
or
jg
sti
pusha
jp
adc
adc
cwde
call
jne
mov
sub
call
jl
cmp
cld
xchg
xchg
cmp
mul
sub
or
xor
cmp
jmp
cld
adc
imul
(bad)
jle
icebp
out
call
(bad)
pop
(bad)
sti
call
xor
ins
sbb
repz
movs
call
imul
in
push
jecxz
xchg
adc
sahf
cs
lea
das
adc
sub
fs
inc
sbb
sub
dec
in
dec
stos
xchg
mov
leave
inc
aad
les
sbb
mov
push
mov
daa
xor
jbe
pusha
mov
sub
mov
xchg
pop
repnz
outs
ss
es
pop
add
jne
jbe
idiv
mov
push
push
inc
xor
jne
les
jl
loopne
jle
jg
jg
jbe
mov
scas
cmc
xchg
adc
push
js
add
and
sub
mov
ins
ret
shr
ror
hlt
movs
test
fistp
je
mov
xchg
sub
int
hlt
add
test
inc
jmp
loopne
or
jbe
pop
add
outs
(bad)
mov
push
mov
cli
loope
into
sub
movs
cmp
push
xchg
loop
jl
popa
push
test
add
dec
mov
adc
push
addr16
jae
push
popf
pop
adc
ret
hlt
and
mov
sub
stos
jmp
cs
fisttp
js
pop
(bad)
lods
or
cli
or
or
test
adc
iret
sub
xchg
lea
das
daa
sti
je
lods
repnz
jg
jmp
sbb
scas
rcr
icebp
mov
dec
pop
fwait
retf
les
jmp
hlt
cmps
push
or
adc
or
(bad)
sbb
in
inc
sbb
xchg
pop
mov
sub
stos
xor
sbb
adc
aas
pop
rol
ror
ror
xchg
adc
rol
pop
jae
pop
or
xlat
das
push
retf
sub
cs
jmp
movs
lods
cmp
ds
pop
sbb
xor
in
sub
das
call
sub
loop
and
scas
jae
adc
dec
push
sub
add
fnstcw
loopne
lock
or
mov
cs
(bad)
or
pop
add
aaa
xchg
ficom
sbb
mov
push
das
icebp
adc
jecxz
mov
lea
inc
in
mov
loopne
xor
mov
mov
(bad)
pop
icebp
jae
mov
je
fisub
dec
xchg
cld
cwde
out
sub
in
pop
jp
push
inc
js
push
data16
sahf
cmp
pop
mov
cmp
inc
(bad)
cli
loope
sbb
mov
push
mov
push
jae
repnz
add
outs
fiadd
add
adc
mov
add
add
inc
xor
or
pop
or
inc
in
dec
stos
mov
xor
xor
cli
jle
lea
retf
jl
or
cli
rcl
add
movs
push
push
frstor
bound
mov
xor
jnp
fist
cdq
add
sar
mov
int
aas
mov
ret
and
sbb
or
jmp
sbb
iret
xor
stc
jecxz
repz
inc
pop
(bad)
pop
xor
dec
ficomp
call
sbb
(bad)
pop
out
es
cmps
das
pop
pop
popa
xchg
arpl
jmp
fcmovnu
sub
jae
xor
dec
retf
aam
(bad)
xchg
dec
(bad)
js
pop
aam
mov
or
push
icebp
push
adc
xchg
pop
xor
inc
sahf
or
dec
cmp
pusha
jge
stos
mov
cmps
mov
rcl
jge
lahf
jg
dec
mov
push
mov
xchg
das
sub
mov
mov
xlat
aad
push
cmp
cld
pusha
push
mov
pop
cmp
dec
jg
sub
sbb
adc
ds
scas
xor
das
sti
outs
ficom
and
xchg
push
stc
xchg
add
mov
or
cld
enter
push
sub
sub
jns
out
jp
mov
xchg
inc
movs
stos
add
inc
fwait
(bad)
les
test
ds
dec
loopne
sbb
pop
mov
mov
(bad)
mov
or
cmp
push
inc
aad
jno
nop
jae
xchg
push
pop
ins
or
movs
nop
loop
movs
mov
leave
xchg
push
fucompp
jns
jmp
or
cmp
push
push
mov
cli
mov
sbb
lahf
pop
pop
mov
outs
addr16
adc
stc
pop
cld
xchg
cmp
in
inc
add
dec
inc
sub
sbb
fld
and
call
pop
test
push
iret
clc
add
mov
cld
xchg
mov
stos
fs
outs
and
out
pop
jmp
dec
mov
xchg
loop
pop
scas
pop
or
ins
jg
pop
push
inc
jae
setb
pop
call
mov
sbb
cmp
(bad)
retf
mov
mov
imul
pusha
cmps
jg
dec
test
ins
xchg
jbe
xchg
mov
add
repz
mov
icebp
out
push
or
fcomp
mov
mov
fsub
loop
add
lahf
jmp
pusha
fmul
aad
lods
mov
push
aaa
int
arpl
ins
cmp
nop
ja
mov
add
sbb
in
xchg
push
in
and
or
bound
retf
sbb
inc
mov
dec
xor
loop
out
fbstp
das
clc
loope
jmp
push
ja
xchg
out
packsswb
pop
jo
shl
fidiv
pusha
inc
adc
xchg
ret
add
pop
addr16
mov
mov
cdq
pop
movs
jno
adc
push
jmp
mov
and
sbb
dec
loop
aas
and
or
gs
xlat
pusha
lods
jle
jns
or
adc
mov
aad
outs
int3
push
push
imul
mov
cli
test
dec
inc
xor
pop
ins
(bad)
xor
push
adc
mov
sbb
or
sub
xchg
mov
sbb
or
push
push
(bad)
cmc
test
test
jb
xchg
inc
mov
mov
loop
jg
add
into
push
in
fmul
jge
bound
dec
mov
inc
lds
out
inc
dec
xor
daa
jecxz
lea
dec
cmp
retf
je
pop
aam
repz
data16
pop
ja
pop
lahf
neg
addr16
pop
mov
in
lds
sub
or
scas
int3
(bad)
sahf
mov
mov
je
jl
pop
in
jge
loopne
rcl
dec
rcr
mov
sahf
aam
pop
(bad)
mov
jmp
repz
sbb
fisttp
sbb
xchg
in
or
js
pop
daa
sub
mov
lea
mov
jns
or
das
lds
aad
add
test
jecxz
or
test
(bad)
call
cld
dec
mov
push
ja
ror
imul
in
jno
int
xor
inc
mov
sahf
je
call
mov
push
push
stc
aad
mov
mov
mov
adc
mov
dec
div
sub
jo
es
sub
enter
mov
ret
mov
sbb
pop
sar
mov
push
sub
jns
retf
fdivr
mov
jp
bound
out
adc
cdq
and
mov
jae
mov
add
lahf
mov
pop
inc
and
cmp
sub
adc
movs
jnp
pop
or
pop
jmp
dec
(bad)
das
iret
pop
(bad)
lods
lods
retf
and
(bad)
adc
add
in
push
or
out
aaa
pusha
pop
mov
(bad)
hlt
adc
pop
xchg
les
cld
push
inc
and
xor
pop
mov
ficom
rcr
adc
adc
mov
mov
aad
mov
sub
jbe
lods
xlat
lea
outs
cmovns
call
and
add
add
clc
jmp
push
dec
xchg
fsubrp
push
outs
retf
mov
hlt
dec
inc
sbb
aad
inc
test
add
jg
fnstsw
jp
rcl
in
out
(bad)
es
iret
(bad)
icebp
cli
dec
retf
sti
mov
jle
sub
sbb
xor
in
mov
xchg
push
rcl
arpl
ficom
mov
es
xor
retf
xor
jae
ss
mov
sub
jmp
adc
mov
call
jne
jecxz
iret
jnp
jns
mov
rcr
stos
movs
fisubr
dec
xor
push
and
ss
xor
loopne
pop
clc
cmp
mov
into
rcl
sbb
adc
stos
test
shr
stc
xor
stc
mov
add
push
imul
inc
mov
sar
mov
xchg
jno
aam
std
push
or
and
pop
xor
ficom
mov
sbb
ret
lods
xor
mov
loopne
sub
imul
imul
pop
pop
and
push
fdivr
std
xor
and
stc
xchg
out
clc
pop
ficom
or
add
inc
inc
ja
inc
or
adc
sbb
movs
stc
call
das
lds
addr16
sub
leave
inc
hlt
pop
pop
xlat
pop
mov
dec
repz
push
push
in
popa
lods
(bad)
arpl
push
xchg
imul
lock
cmps
dec
or
or
add
jle
cmps
add
adc
fcomp
xchg
jecxz
sahf
cmc
mov
xor
in
adc
dec
mov
mov
push
add
mov
inc
sbb
xchg
sub
xor
out
xor
pop
sti
ja
add
xor
or
dec
ficomp
jae
int
xor
cmp
jp
mov
nop
xchg
outs
inc
cmps
xor
(bad)
out
(bad)
enter
xlat
pop
jl
adc
inc
test
fist
adc
jno
iret
add
es
test
xchg
mov
add
inc
or
jns
mov
jl
inc
xchg
jp
test
mov
outs
clc
(bad)
mov
jns
int3
sub
pop
iret
xchg
or
inc
imul
mov
fcmovb
sbb
jl
in
or
push
xchg
push
push
push
(bad)
or
jg
mov
adc
mov
cmp
or
movs
ror
mov
iret
mov
test
movs
push
xor
mov
rcr
add
bound
clc
inc
movs
jl
adc
imul
fisttp
xor
push
rcl
(bad)
div
lods
imul
xor
nop
test
mov
imul
mov
add
adc
mov
sti
cdq
(bad)
ret
int
cmp
movs
(bad)
inc
mul
outs
inc
clc
sub
pop
jno
push
aas
xchg
pop
xchg
sbb
out
cwde
dec
cmp
mov
rol
je
ds
pop
and
or
mov
push
stc
mov
mov
and
xlat
dec
dec
sbb
mov
test
and
movs
shr
call
jbe
sbb
iret
imul
loopne
or
mov
mov
outs
jns
inc
push
stos
repz
call
mov
fwait
sub
je
stos
fcmovnu
ja
fnstcw
cdq
jno
(bad)
or
push
int
mov
shr
mov
rcl
repz
jmp
sub
inc
push
inc
retf
ins
sbb
push
mov
stos
scas
mov
sbb
xlat
pop
and
add
inc
or
and
pop
dec
jge
mov
mov
adc
inc
mov
add
jle
sti
imul
jne
adc
sbb
into
sbb
out
sbb
xchg
add
imul
and
jbe
fsubr
xchg
xor
dec
pop
cmps
mov
inc
enter
mov
mov
adc
sbb
sub
add
mov
cmp
sub
mov
and
sub
cwde
popf
fstp
jmp
leave
js
jmp
xor
pop
pop
popa
xor
stos
inc
stos
fs
cmp
sbb
jae
xchg
push
loopne
sar
mov
mov
mov
leave
jns
adc
scas
add
aaa
call
mov
pop
add
gs
cwde
pop
inc
fst
mov
xchg
mov
jl
jmp
mov
clc
push
imul
push
mov
stc
aam
je
mov
mov
loop
and
pop
scas
push
mov
and
repz
mov
out
ja
and
sbb
jp
ret
(bad)
test
cmps
cmp
mov
mov
stos
aad
and
pop
pop
lods
test
and
or
enter
xor
jnp
into
or
es
call
add
out
into
jmp
jg
sbb
hlt
dec
int
verw
sar
sbb
pop
push
icebp
retf
test
nop
fwait
inc
mov
xor
cmp
mov
stc
loopne
sbb
fcomp
test
scas
popa
push
into
in
jno
lds
fld
sbb
test
jge
cld
mov
sub
inc
lods
jae
into
outs
lea
and
xchg
or
jb
mov
fcmovb
imul
sub
mov
mov
ret
sbb
pop
ins
mov
mov
icebp
inc
mov
pop
mov
cmps
adc
adc
sbb
jae
(bad)
xor
sbb
push
pop
arpl
mov
push
sbb
movs
fnsave
fwait
add
int3
cdq
sub
dec
pop
xor
cld
push
scas
jbe
jl
retf
mov
call
sub
aam
push
shr
xor
lahf
shr
or
pop
sbb
data16
outs
adc
push
mov
jo
div
push
ror
movs
aas
push
push
inc
or
retf
fcmovne
out
xchg
lock
rcr
mov
inc
inc
cmp
hlt
jns
cmp
mov
dec
inc
adc
xor
add
cmp
cmp
into
in
inc
nop
sub
adc
mov
inc
cmp
and
je
lods
popf
adc
pop
in
mov
adc
(bad)
imul
stos
loope
shr
cmps
ret
mov
jae
mov
mov
jo
sar
aam
(bad)
jle
adc
cli
aad
mov
adc
aad
jecxz
mov
inc
fwait
imul
sbb
outs
xchg
stos
push
int3
sub
jmp
int3
inc
and
shr
pop
es
mov
dec
cmps
imul
ret
lea
pop
pop
lahf
and
pop
arpl
pop
jecxz
fnstsw
bound
(bad)
js
and
adc
inc
add
pop
inc
dec
or
sub
pop
or
inc
cmp
xor
sar
xchg
idiv
retf
adc
cmp
test
dec
mov
mov
xor
(bad)
in
cdq
mov
jle
inc
rcl
sub
ret
jecxz
sub
mov
jle
adc
xor
and
scas
in
in
mov
add
push
xor
lock
xor
xor
fwait
xchg
ret
aas
add
xchg
cmp
(bad)
inc
rol
fwait
adc
jle
in
sbb
ret
sti
inc
cs
jne
retf
jl
pusha
adc
call
mov
inc
mov
pushf
dec
or
out
les
aam
mov
push
push
(bad)
jmp
jle
fwait
hlt
push
cs
sub
push
fimul
jbe
in
and
into
adc
leave
sub
movs
arpl
push
in
outs
xor
jge
imul
jo
jmp
xor
or
gs
iret
and
stc
push
popa
in
jne
push
(bad)
dec
out
pop
imul
pop
sub
into
fild
pop
dec
fnstenv
mov
sub
(bad)
cdq
adc
jns
mov
mov
lock
jae
idiv
or
pop
xor
inc
xchg
pop
jb
test
xor
mov
push
jo
mov
out
mov
or
cwde
(bad)
sbb
mov
jb
mov
(bad)
adc
mov
jp
jne
dec
imul
adc
mov
outs
sub
cmp
jae
fdiv
gs
scas
pushf
punpcklwd
adc
mov
mov
clc
jmp
das
icebp
scas
inc
cmc
pop
repnz
inc
retf
xor
mov
adc
imul
adc
(bad)
jmp
xlat
mov
sbb
mov
mov
shl
and
lea
xor
mov
les
cmp
or
cmps
or
int
jecxz
loope
push
mov
jmp
pop
in
aam
stos
xlat
movs
mov
pop
fstp
(bad)
ins
inc
jne
stos
push
sbb
xchg
(bad)
mov
jmp
fidivr
test
fcomp
loopne
retf
jbe
cmp
sbb
repnz
loopne
and
jge
inc
dec
fcom
inc
xchg
outs
inc
inc
sbb
scas
xor
ud1
dec
das
and
mov
mov
ja
(bad)
(bad)
fisttp
icebp
cmp
xchg
pop
or
sub
(bad)
mov
addr16
xor
adc
pop
rcl
mov
cmp
pop
and
dec
(bad)
int
or
push
aas
lahf
fst
imul
lods
mov
je
dec
aaa
call
fwait
and
jo
call
rol
dec
in
inc
das
js
ror
push
addr16
rol
inc
mov
test
fs
cmp
inc
xlat
fnstenv
inc
bound
or
aad
cmp
aad
mov
jbe
imul
fnstsw
clc
in
mov
pushf
int
fist
daa
repnz
loope
add
std
or
and
xor
sub
xor
xor
or
test
cmp
stc
sub
xor
cld
mov
or
inc
test
int
iret
or
cmp
into
dec
inc
pop
jl
cmps
pusha
jmp
mov
hlt
int
or
and
aad
lds
jno
pop
je
and
not
sti
mov
lods
jo
mov
data16
cmp
xchg
sbb
jo
scas
mov
xor
mov
scas
add
add
xor
arpl
cld
ins
ins
rol
ret
outs
jle
pop
mov
shl
cmp
sub
push
fwait
or
mov
jne
pop
loope
push
loope
icebp
push
inc
sub
shl
mov
xor
add
sahf
not
dec
mov
out
je
sbb
dec
iret
pop
adc
rcr
sbb
div
cmp
jl
(bad)
dec
dec
xor
and
inc
inc
shl
inc
ins
add
ret
int
lods
pop
gs
push
in
or
std
cmps
inc
fdivr
pop
add
mov
clc
jmp
cmc
rcr
ja
cmps
cwde
xor
lahf
mov
mov
or
bound
push
mov
inc
inc
test
std
sub
push
mov
sbb
icebp
pop
pushf
mov
scas
mov
mov
test
xor
pop
test
add
dec
ins
mov
cs
dec
cwde
pop
(bad)
iret
xor
pop
(bad)
shr
xchg
ins
ss
outs
jle
lds
mov
shl
ror
test
iret
jecxz
mov
aam
mov
pop
loopne
inc
pop
ret
jae
pusha
adc
push
dec
mov
jle
sub
inc
out
shl
cmp
jb
or
inc
(bad)
jb
adc
cmp
sbb
mov
hlt
push
or
cmp
shl
and
fisubr
sub
into
leave
imul
popa
std
push
pop
mov
push
mov
rol
mov
sub
dec
push
das
call
and
ret
mov
add
in
cdq
fiadd
stc
jecxz
stos
nop
cmp
dec
rcr
les
enter
cmp
or
jnp
(bad)
aam
sub
mov
frstor
out
inc
inc
push
xor
lahf
adc
pusha
icebp
inc
scas
in
pop
adc
fild
out
cmp
call
int3
xor
pop
cmps
mov
add
jmp
xchg
inc
mov
jg
mov
xor
pop
into
push
test
lods
mov
shr
sbb
jle
lds
inc
add
jno
in
(bad)
jns
data16
dec
inc
in
cmc
cdq
xchg
mov
xor
push
and
test
push
ret
test
int
sub
cmp
(bad)
sbb
xor
dec
stc
mov
shr
mov
clc
popf
shl
sbb
lea
fs
dec
adc
stc
xor
daa
adc
loopne
call
fs
sbb
or
pop
xor
js
neg
fsubr
dec
xlat
xchg
stos
cwde
push
sub
xor
sbb
sub
test
(bad)
cmc
jp
iret
shl
out
inc
cmps
inc
xchg
sahf
nop
inc
retf
mov
popf
dec
fwait
pop
sbb
mov
jg
pusha
movs
mov
xor
or
dec
xchg
push
push
push
and
retf
and
xchg
adc
cmp
mov
repnz
nop
shl
jns
fnstcw
movs
out
push
jle
call
mov
mov
popa
mov
iret
pop
imul
or
jmp
jge
push
and
clc
std
arpl
pop
and
inc
push
cld
jne
dec
call
pop
xor
mov
xchg
movs
bound
dec
mov
jl
mov
mov
adc
xor
popa
add
adc
pop
fcom
jbe
sbb
mov
push
ror
fild
adc
adc
mov
imul
cmp
mov
pop
enter
mov
or
pop
enter
and
mov
outs
call
jmp
mov
dec
sub
mov
or
(bad)
fdivr
dec
and
cdq
push
push
pop
sub
cld
ret
cs
and
aam
outs
call
lds
push
lds
push
fxtract
dec
mov
push
(bad)
shr
movs
dec
xlat
adc
push
push
leave
mov
hlt
jno
xor
cmp
mov
jo
mov
inc
inc
fcmovnu
pop
lea
jb
(bad)
sub
mov
mov
jmp
cmp
repnz
xchg
sub
jmp
jns
stc
mov
inc
inc
xlat
add
dec
push
mov
leave
outs
pop
sbb
ret
mov
imul
push
(bad)
jecxz
int3
mov
stc
icebp
aad
add
mul
jb
jo
cli
xor
loop
test
loopne
xchg
or
and
xlat
adc
popf
mov
push
push
xor
lods
lods
mov
cmp
leave
sub
repz
mov
out
inc
fadd
add
adc
push
jmp
add
out
ins
and
ja
xor
pop
xor
pop
(bad)
iret
jle
adc
mov
mov
sub
cmp
hlt
sub
xlat
or
mov
push
clc
mov
lock
icebp
sub
mov
mov
hlt
rcr
mov
call
scas
gs
sub
inc
cdq
jae
movd
hlt
int
sub
int
push
pop
pop
dec
test
clc
stos
mov
xchg
out
sti
fist
outs
jp
push
cdq
push
ret
xchg
push
adc
out
retf
xor
dec
es
push
ror
and
mov
sbb
dec
sbb
add
adc
enter
mov
in
in
or
(bad)
xor
imul
je
push
adc
push
call
in
mov
add
mov
mov
xchg
jmp
pop
sbb
repz
cmp
fisttp
inc
in
shl
aaa
mov
repz
and
xor
sbb
mov
inc
or
inc
vpmovzxbd
hlt
pop
shl
mov
and
push
stos
data16
jge
mov
jmp
sar
jecxz
sti
jge
movs
sahf
fisubr
imul
cwde
lea
adc
jg
lods
stc
cwde
jmp
push
js
mov
mov
cli
ficomp
js
rcl
inc
stos
int3
xor
or
push
lea
pop
mov
fisttp
xchg
inc
sar
and
dec
movs
cmp
mov
push
mov
mul
cmp
mov
or
sbb
adc
mov
jl
into
mov
aam
jbe
jne
jp
xchg
in
pusha
push
popa
and
sub
iret
sbb
mov
test
fst
ret
pop
lods
retf
or
lea
push
xor
sbb
add
(bad)
mov
xor
mov
push
hlt
xchg
dec
mov
adc
(bad)
mov
cdq
arpl
sahf
pop
addr16
fisubr
push
pop
cmp
sub
sti
cmc
scas
inc
cmps
sub
mov
inc
test
xor
ins
adc
lahf
mov
cmp
daa
push
ss
and
inc
fdiv
leave
int
dec
pop
fld
aas
inc
int
push
mov
or
xchg
mov
or
mov
gs
sub
mov
jo
ja
pop
mov
out
push
mov
mov
pushf
jo
int
and
sub
mov
mov
lea
pushf
pop
fs
cmp
push
bound
pusha
dec
mov
adc
xor
nop
fiadd
aam
dec
pop
cmp
or
ins
retf
icebp
imul
sbb
aaa
xchg
fsubrp
and
inc
mov
in
(bad)
cs
into
inc
xchg
add
sub
pop
pusha
mov
loopne
and
pop
mov
push
es
jmp
pop
adc
rol
popa
pop
inc
sub
call
gs
cld
jns
ret
ficom
or
out
pop
(bad)
test
fisub
push
loopne
in
and
(bad)
cmp
int
jle
pop
lahf
out
out
mov
jmp
xchg
mov
nop
dec
cmp
push
fwait
sub
stos
mov
xor
stc
aad
pop
lds
mov
(bad)
dec
push
push
fstp
and
in
mov
mov
call
mov
and
ds
cs
jno
test
cmp
add
inc
xchg
and
lods
mov
sbb
mov
cdq
lods
sbb
add
mov
mov
dec
adc
jns
or
sbb
push
icebp
jle
add
inc
mov
enter
dec
adc
(bad)
in
dec
jecxz
sbb
call
dec
ret
cmp
or
sub
(bad)
and
pop
adc
call
and
pop
lods
or
loope
cmp
bound
mov
jge
mov
ret
ins
cdq
in
movs
clc
adc
std
push
sub
test
cmp
out
rcr
gs
loopne
push
sbb
mov
sti
xor
cmp
dec
out
inc
(bad)
xor
lock
inc
mov
jns
cli
mov
xchg
xor
sbb
aad
fnstcw
popa
arpl
inc
cs
mov
aam
movs
or
call
pop
adc
lds
pop
ja
inc
fsubr
int
sub
hlt
aam
jecxz
mov
sub
popa
les
cld
pop
dec
loop
outs
sbb
lods
mov
adc
xchg
adc
les
int
mov
sub
out
lahf
or
mov
outs
add
sub
jl
xor
daa
xchg
mov
xchg
cmps
pop
xadd
cmp
or
mov
(bad)
add
push
adc
rcl
(bad)
add
or
jecxz
shl
jnp
push
sti
ds
ds
push
add
xchg
(bad)
jle
cmp
gs
pop
inc
jmp
pop
adc
cmp
pop
rol
sti
in
es
xor
addr16
div
mov
stos
pusha
and
add
sub
lock
mov
pop
inc
shl
xchg
es
and
lock
adc
enter
add
pop
popa
sbb
push
bound
fdivrp
dec
inc
pop
jnp
in
dec
xchg
jb
cmc
jb
dec
xor
test
and
push
pop
sbb
xchg
push
popa
pop
cmp
cwde
sub
pop
enter
lds
push
int3
mov
xor
mov
iret
aad
jno
imul
mov
jmp
lds
out
inc
jmp
cld
fisub
inc
sub
pushf
pop
arpl
lods
lock
out
lds
js
enter
bound
das
push
jp
mov
inc
ss
push
sti
xor
inc
inc
or
and
test
add
or
xor
lahf
cdq
sahf
sub
jo
pop
aas
cmp
or
mov
ret
and
mov
sbb
push
into
sbb
(bad)
mov
loopne
inc
call
inc
mov
add
add
js
std
xor
add
ror
push
repnz
adc
and
jmp
xor
add
ret
lahf
xchg
sbb
aam
or
xlat
xor
sub
sub
(bad)
lock
(bad)
(bad)
mov
mov
push
sahf
fdivr
sub
push
mov
jmp
push
test
mov
daa
movs
inc
dec
jge
lods
xor
bound
or
in
test
xor
test
pushf
or
inc
stc
mov
pop
mov
call
sbb
and
imul
stc
pop
aam
cmp
push
arpl
fbstp
lea
jmp
sbb
add
and
or
cmc
pop
out
jae
xchg
push
pop
cmp
gs
rol
mov
adc
xchg
sub
xchg
call
sbb
and
setnp
pop
(bad)
sbb
jo
cld
popf
adc
push
mov
inc
and
ret
add
sar
out
not
mov
test
inc
mov
call
inc
lods
inc
cmps
mov
xchg
sar
daa
add
jns
xor
fmul
jbe
jmp
test
lods
fadd
push
push
pusha
hlt
(bad)
push
retf
dec
je
adc
mov
sbb
jge
data16
and
jg
in
sub
movs
jg
or
jp
fld
add
push
test
and
and
mov
jecxz
fidivr
and
fistp
cmp
std
xchg
pop
ss
push
mov
mov
or
adc
mov
mov
sahf
mov
dec
push
aam
adc
xchg
fdiv
pop
mov
or
es
nop
jb
mov
xchg
mov
mov
adc
(bad)
scas
lea
xor
adc
and
xchg
fs
jb
(bad)
dec
sbb
or
(bad)
pop
push
sbb
addr16
das
sbb
mov
cmc
adc
jle
jmp
ret
mov
outs
or
xchg
sub
pusha
mov
nop
push
xchg
movlhps
sahf
gs
cld
mov
push
ins
int3
xchg
push
adc
xchg
in
xor
jmp
movs
add
enter
fs
scas
lds
shl
(bad)
mov
fld
jnp
mov
add
cmp
mov
rol
daa
mov
mov
mov
xchg
neg
jmp
lea
sbb
lds
test
cmp
pop
sub
mov
jmp
xor
cli
adc
jmp
push
aas
push
xchg
dec
cmp
mov
stos
mov
test
xor
push
ss
mov
fldl2t
add
mov
pop
adc
pop
inc
femms
(bad)
inc
xlat
jbe
xchg
mov
in
neg
sub
cmps
int
ret
mov
dec
jmp
cmp
in
xchg
adc
sub
lahf
dec
aas
and
ret
fs
enter
cwde
cli
stos
shr
inc
push
xchg
mov
lock
inc
loope
cmp
and
cli
daa
push
cld
test
cld
mov
out
aas
in
adc
xchg
push
ficom
(bad)
mov
push
mov
(bad)
mov
mov
movs
rol
loopne
jo
sub
in
pop
and
cmp
test
xchg
xchg
cmp
push
mov
mov
int3
mov
push
cli
xchg
mov
fwait
or
ret
sbb
(bad)
fcomp
mov
inc
fsubr
add
xchg
repnz
inc
mov
call
xor
inc
test
das
or
out
in
cmp
clc
leave
stos
sub
std
or
in
into
dec
int
mov
je
fsubr
call
shl
out
mov
out
popf
lods
xor
ja
mov
stos
xchg
sub
xor
(bad)
pop
punpckldq
in
(bad)
sub
gs
div
jo
jns
ins
dec
lds
into
int
movs
iret
add
mov
in
pushf
inc
and
mov
cmp
sub
leave
cmp
cmp
add
fsubr
fidiv
sub
shl
lods
iret
cmps
mov
ins
pop
repz
mov
aad
inc
pushf
shr
ret
pop
ret
fsubr
sbb
icebp
pop
fldcw
test
mov
loop
sbb
popf
pop
jne
sbb
test
pushf
push
add
jne
int3
or
pop
xchg
in
xor
(bad)
retf
pop
clc
(bad)
cmp
fs
adc
mov
dec
mov
(bad)
(bad)
std
jecxz
jb
add
jno
push
stos
and
aas
pop
cdq
jle
(bad)
fisubr
mov
movs
inc
jno
mov
jmp
iret
jmp
aas
loop
mov
inc
daa
xchg
repnz
data16
les
add
rcr
cli
ins
jmp
pop
int
stc
mov
retf
ja
loope
test
mov
out
(bad)
mov
shr
or
mov
jecxz
sbb
mov
fxch
xor
pop
xor
jle
lock
cli
shl
pop
xor
sti
scas
jmp
dec
jp
dec
add
xchg
mov
push
sub
mov
(bad)
or
mov
fldenv
jns
icebp
sti
les
aam
mov
cli
retf
cmp
fucomip
sub
xchg
cmp
dec
mov
stc
outs
dec
xor
ret
xor
sub
lahf
js
adc
cmp
add
jns
loope
and
pop
imul
jle
mov
or
shl
aaa
je
jmp
sbb
neg
mov
push
lock
jecxz
stc
std
pop
jle
or
data16
jmp
out
das
or
ret
aas
test
mov
cmp
mov
jg
jle
pop
pop
xchg
fsubr
push
jne
outs
jecxz
sbb
cli
aam
mov
inc
mov
iret
sub
adc
add
push
sahf
add
and
jp
push
inc
dec
enter
loope
xor
fild
jae
and
sub
inc
repnz
(bad)
mov
pop
and
cmp
lods
mov
adc
fdivr
aas
repnz
and
push
scas
push
mov
mov
or
stos
ds
es
push
sub
or
mov
pusha
cwde
cmp
inc
adc
(bad)
xor
retf
pop
neg
push
fs
xchg
push
push
stc
ror
std
jmp
sbb
dec
(bad)
and
jns
xchg
jmp
dec
add
push
jle
clc
push
add
pop
sub
add
jno
retf
adc
test
in
call
pop
(bad)
dec
and
or
cwde
cwde
jge
imul
sbb
dec
in
mov
data16
fsubr
xchg
test
add
call
xor
mov
xchg
std
in
sub
shl
dec
cmp
lds
arpl
dec
and
loop
icebp
mov
ds
cmps
inc
add
rol
or
inc
repz
and
outs
gs
xor
in
add
fcomp
xchg
popa
push
sub
inc
aas
das
mov
test
repnz
inc
pop
hlt
cs
cmp
pop
jb
mov
fadd
in
inc
push
fisub
or
mov
jb
mov
out
mov
mov
xor
idiv
pushf
xchg
and
cmp
adc
cmp
or
and
pop
(bad)
call
xor
cmc
inc
pop
mov
fadd
test
mov
inc
pushf
in
dec
add
sub
int
and
sub
cmps
lods
xchg
xchg
outs
out
sub
xchg
fwait
push
push
jne
pop
leave
pop
fild
add
pop
sahf
pop
sub
add
mov
push
fwait
add
pop
sub
xor
jecxz
push
sub
push
mov
hlt
aam
movs
fcomp
or
and
movs
add
into
push
shl
sbb
test
(bad)
aad
jb
aaa
rcl
xchg
adc
add
pop
test
xchg
icebp
sti
xlat
push
and
pop
and
popa
add
mov
dec
enter
enter
add
nop
push
loop
or
cmps
pop
inc
mov
add
add
ds
or
mov
scas
dec
push
sbb
mov
mov
pop
shl
loope
out
mov
inc
mov
mov
sar
cli
push
adc
and
test
jecxz
test
xlat
pop
xchg
jmp
xchg
add
pop
aad
and
jge
add
mov
inc
mov
fadd
das
jp
xchg
fsqrt
cmp
mov
mov
aad
(bad)
xor
xor
and
or
and
lea
btr
cmps
div
popa
pop
sub
scas
push
mov
icebp
outs
cmp
inc
fidivr
rcl
loopne
(bad)
int
rcr
popf
(bad)
call
andps
pushf
and
pop
sbb
out
and
out
das
mov
jle
mov
add
mov
std
hlt
mov
inc
sbb
mov
sub
out
call
mov
bound
cmp
ror
ja
xor
mov
sub
lods
add
pop
xlat
add
fst
mov
cld
mov
daa
fwait
adc
hlt
push
sub
jb
test
mov
lea
loop
push
ret
add
clc
dec
das
and
pop
xchg
icebp
or
imul
or
push
daa
fdivr
(bad)
mov
gs
dec
arpl
dec
xor
cmp
xchg
cmps
(bad)
or
dec
cli
mov
or
jb
imul
rcl
ficomp
enter
xor
inc
push
out
fistp
nop
test
loope
and
push
inc
(bad)
loopne
xor
daa
inc
jl
pop
or
inc
adc
idiv
sub
fcmovne
sub
cmp
pop
sahf
push
dec
push
cvtps2pi
sbb
(bad)
mov
add
adc
sub
jb
push
cmc
add
adc
addr16
cmp
sub
mov
jecxz
mov
xor
out
dec
lahf
movs
data16
pop
or
sub
sahf
and
and
jns
cmp
out
jp
sbb
lods
sbb
mov
sti
mov
lds
(bad)
adc
xchg
mov
dec
adc
push
test
cmps
nop
pop
inc
sti
mov
dec
xchg
fisub
js
stos
scas
jnp
cmps
xchg
idiv
addr16
(bad)
aad
mov
pop
pop
sub
imul
rol
push
pop
adc
(bad)
adc
mov
dec
jl
cwde
ins
dec
mov
pop
mov
sbb
or
sub
mov
dec
test
ror
cli
fist
cdq
xor
pop
imul
pop
ret
dec
cdq
aas
mov
push
repnz
int
movs
or
lds
jns
sbb
inc
ins
xor
es
pop
dec
shl
and
jno
movs
sub
dec
mov
pop
inc
out
push
sub
xchg
mov
pop
sti
dec
pusha
idiv
movs
cmp
jne
sbb
pusha
add
(bad)
xchg
mov
dec
adc
cld
cmps
or
sub
mov
pusha
sbb
ins
jns
(bad)
adc
push
adc
sub
pop
sbb
mov
ret
popf
sub
sub
sbb
call
bound
out
rcr
adc
mov
dec
jns
int3
or
ins
js
sbb
dec
push
xchg
shr
mov
jbe
outs
and
pop
cmps
cs
push
imul
cmp
adc
jmp
cmp
cmc
shl
cmp
scas
jbe
jge
icebp
cs
add
mov
ror
out
fcomp
sbb
jg
int3
icebp
push
cmc
loopne
out
aas
xchg
jmp
add
and
or
pop
cmp
mov
call
fwait
and
cmp
shr
sub
in
aam
mov
add
js
lahf
xor
scas
and
sbb
and
push
push
dec
std
out
dec
jmp
mov
mov
dec
clc
mov
ror
push
cmp
mov
jp
jbe
mov
xchg
and
mov
push
dec
and
push
sub
dec
addr16
cmps
sub
mov
xchg
mov
jp
dec
and
sti
sar
inc
stos
push
daa
popa
test
cmp
push
call
call
jmp
pop
or
nop
mov
daa
js
push
mov
mov
push
jmp
xchg
cmc
push
stc
and
dec
cmp
js
jge
adc
stc
jae
in
out
xor
out
mov
mov
adc
mov
or
push
fidiv
jmp
jno
mov
add
push
cmp
xchg
(bad)
pusha
mov
(bad)
xchg
cli
sbb
or
fstp
pop
lock
jns
ror
repnz
xor
mov
aad
(bad)
bound
xchg
push
(bad)
jno
stos
fistp
mov
or
pop
ret
js
push
adc
xor
lock
mov
mov
fwait
xchg
sub
enter
imul
fist
fld
dec
push
dec
add
cmc
mov
(bad)
popf
addr16
es
cs
dec
adc
jns
dec
inc
call
aad
(bad)
rcl
ficom
push
imul
dec
imul
sahf
fnstcw
lea
xlat
or
push
lds
mov
addr16
sub
pop
push
stos
rcr
push
or
mov
in
loop
aaa
mov
xchg
es
cs
std
jnp
loopne
push
sbb
ins
hlt
clc
int
lods
outs
inc
push
and
cmp
pop
imul
fs
call
js
add
js
jge
jmp
dec
fdiv
fcomi
test
test
mov
jo
adc
bnd
pusha
(bad)
stc
mov
cmp
dec
mov
ret
shl
test
aaa
sbb
fwait
dec
xor
dec
sub
cmp
cmp
int
movs
(bad)
cli
inc
push
mov
fstp
inc
adc
test
gs
int3
mov
(bad)
jge
test
mov
push
pop
dec
repz
retf
je
xor
es
adc
inc
repnz
fwait
jle
xor
popf
pop
popf
mov
pop
pop
sub
or
mov
pop
mov
mov
cmc
mov
les
sbb
sbb
arpl
jge
mov
jae
jae
ret
lock
pop
mov
add
fidivr
pop
dec
add
mov
mov
sbb
cwde
ficom
push
fst
stos
mov
mov
pop
jmp
js
cdq
dec
mov
mov
mov
jne
add
xchg
dec
pop
jl
jl
mov
loop
pusha
mov
outs
retf
and
xchg
int3
daa
xlat
mov
fsub
addr16
daa
or
mov
aad
in
sub
ins
add
push
xor
sahf
or
fs
or
gs
frstpm(287
adc
push
in
adc
call
mov
xchg
test
test
jb
adc
sub
adc
fwait
movs
clc
(bad)
rol
and
pusha
ficomp
xchg
jae
fisttp
sbb
mov
xor
jmp
cmp
or
(bad)
and
(bad)
in
jp
or
mov
in
sar
jo
(bad)
pop
je
sub
call
xchg
mov
lods
push
ins
mov
clc
push
adc
fwait
retf
add
iret
dec
outs
xor
mov
ret
imul
xor
jmp
inc
sub
mov
xor
not
pop
fs
out
add
(bad)
jp
mov
xlat
rcl
outs
push
imul
and
pop
jl
inc
pusha
push
pop
call
popa
dec
or
into
jecxz
test
xor
shr
push
dec
and
sbb
push
rcl
mov
sar
adc
les
mov
enter
ins
sub
sub
xchg
neg
imul
cwde
xor
fdivr
push
or
out
push
retf
std
dec
fwait
aad
in
push
cmp
lods
imul
mov
mul
adc
mov
and
sub
jb
mov
mov
cmp
pop
sub
aaa
pop
fild
gs
adc
push
jae
xchg
or
push
adc
xchg
(bad)
jb
pop
sar
pop
push
cmp
cmp
mov
mov
inc
enter
add
inc
jmp
js
xor
xor
dec
(bad)
mov
rcl
retf
fxch
and
hlt
pushf
push
daa
cmp
shl
lock
popf
jbe
loopne
inc
xlat
ins
test
xchg
jne
cmp
jmp
idiv
div
in
les
mov
sbb
mov
inc
pop
inc
mov
xchg
xchg
in
add
fwait
stos
mov
sub
dec
rcr
dec
jb
mov
(bad)
repz
cdq
sbb
test
jo
adc
jne
push
cmp
and
sti
retf
cdq
jo
mov
jnp
sbb
lods
cmp
hlt
cmp
ret
jbe
adc
jl
cli
jmp
push
repz
inc
test
ins
add
push
push
mov
arpl
inc
repz
stc
movs
or
mov
sub
inc
scas
js
dec
loopne
push
inc
adc
cmp
test
jmp
cmp
nop
mov
ja
jnp
shl
mov
push
shl
adc
xchg
repz
mov
mov
pop
imul
or
lods
imul
ds
push
mov
fwait
pop
mov
and
xor
addr16
cmp
fucompp
shl
push
icebp
ja
fld
retf
sub
sub
ss
out
inc
jg
ins
push
in
cmp
shl
les
(bad)
fsubr
pop
fwait
in
push
jg
js
inc
pop
mov
inc
pmaddwd
cmp
loop
or
xor
mov
or
pop
pop
out
hlt
out
xchg
mov
daa
ds
repz
out
jb
xchg
and
sbb
inc
and
xchg
push
push
sti
mov
imul
(bad)
pushf
mov
loopne
dec
xor
arpl
mov
mov
lahf
mov
hlt
add
inc
pop
(bad)
xor
adc
adc
js
jb
mul
repnz
inc
lods
int
(bad)
xor
jno
retf
push
add
and
mov
test
loopne
pop
nop
fwait
jle
adc
jl
cmps
xor
addr16
xor
xchg
add
cmps
xor
sub
les
leave
out
sbb
cli
(bad)
pop
inc
call
lea
fiadd
add
xor
or
(bad)
mov
mov
div
push
push
out
pop
into
sub
jbe
shl
add
mov
xchg
loope
fcomp
lods
dec
mov
(bad)
push
int3
(bad)
loope
adc
popf
mov
adc
pop
push
ja
(bad)
push
jmp
inc
idiv
or
lock
pop
out
push
push
inc
mov
in
adc
ins
mov
call
cmp
sbb
dec
test
cmp
ins
sbb
dec
mov
push
aam
mov
ror
sti
test
cmp
xor
stos
cmp
call
jmp
data16
and
push
mov
push
hlt
js
outs
fcom
pop
cmc
(bad)
aaa
add
xor
xor
int
mov
test
cmp
idiv
dec
sub
scas
popa
dec
push
mov
jno
push
lds
test
jmp
ss
cs
loopne
lds
or
mov
clts
pop
cli
int
pop
aad
xor
jne
ret
(bad)
mov
mov
inc
adc
lea
ret
sub
jl
and
xchg
add
push
inc
ror
sbb
xor
xchg
add
adc
jno
outs
sub
or
ins
mov
stos
xor
mov
add
inc
jnp
js
popf
sub
sbb
fldenvw
movs
inc
mov
clc
call
pop
dec
and
fxch
int3
gs
inc
dec
stos
dec
fsubr
mov
repnz
xchg
jbe
pusha
push
mov
adc
push
retf
jmp
push
sbb
dec
inc
push
imul
inc
not
and
push
dec
or
add
sub
and
sub
adc
inc
mov
lds
jle
adc
sbb
or
ret
les
push
repz
stos
cs
ins
iret
jecxz
fadd
shl
call
pop
inc
fsub
jae
pop
int
clc
mov
leave
xor
cwde
inc
mov
fld
lea
inc
push
dec
cmc
xchg
cmp
fnsave
dec
jnp
fnsave
aam
sahf
inc
mov
mov
sub
popa
xacquire
pop
sbb
sub
ja
mov
mov
adc
mov
call
jae
test
shl
arpl
mov
out
lahf
xchg
js
mov
mov
popa
cwde
cmps
jno
adc
movs
and
aam
les
add
data16
xchg
jle
fldenv
sub
jmp
xor
ins
xor
add
ss
pop
mov
cmc
sar
pop
and
cld
dec
icebp
xchg
mov
dec
xchg
adc
push
out
mov
idiv
push
inc
mov
jmp
mov
fs
and
dec
lock
cmp
xchg
nop
es
jg
sub
xchg
jbe
imul
xor
sbb
mov
mov
xchg
and
shl
inc
push
sar
and
mov
fst
aas
ss
add
enter
pop
jae
dec
xchg
test
xor
and
(bad)
mov
adc
pop
cdq
pusha
xchg
mov
push
(bad)
cs
imul
push
mov
lods
xchg
pop
pop
xchg
dec
ss
repz
sub
test
jnp
push
cli
mov
adc
cld
addr16
dec
out
xlat
(bad)
ret
imul
es
sbb
cmps
push
test
jle
sub
bound
icebp
jge
cmp
xor
jecxz
nop
adc
sti
lods
mov
lods
jbe
push
mov
loopne
cmp
push
(bad)
aas
shl
rcr
pop
clc
pop
ins
jb
and
ins
pop
nop
pop
xchg
rol
js
inc
outs
movs
jne
sbb
or
pop
cmps
jns
clc
push
stc
cmc
adc
test
(bad)
push
ds
mov
enter
add
mov
dec
icebp
fadd
lahf
inc
fcomp
out
test
lods
arpl
inc
loop
jmp
push
mov
fs
neg
fstp
pop
loope
add
es
and
cmp
jge
daa
jge
inc
mov
mov
hlt
imul
call
pushf
jge
stc
cdq
retf
sti
sbb
adc
daa
adc
dec
sub
fadd
aad
fst
sub
pop
fnstsw
(bad)
sbb
mov
cmps
cmp
sub
sub
lods
jns
inc
test
jae
icebp
(bad)
jmp
xchg
cli
jg
stos
repz
repz
xor
push
jmp
test
in
das
mov
jl
repnz
ret
mov
iret
adc
dec
cwde
inc
mov
stos
scas
xor
push
loop
adc
jae
fcmovb
add
add
and
int
sub
fnstcw
mov
pop
cmps
pusha
fwait
jmp
sahf
mov
icebp
sub
(bad)
gs
aas
jo
xchg
unpcklps
xchg
stc
(bad)
adc
cs
shr
cmps
in
fwait
scas
test
adc
retf
mov
xor
add
mov
lock
loopne
in
and
mov
xor
test
jb
adc
(bad)
out
or
sbb
cmps
push
or
add
push
dec
pop
repz
fucomi
lock
add
push
mov
ss
cmp
test
add
imul
pop
pop
je
mov
fsub
push
push
xchg
jnp
iret
xchg
loope
dec
bound
adc
xchg
jmp
inc
sub
mov
out
(bad)
(bad)
pop
jne
mov
sub
add
ret
push
loope
sub
mul
pop
mov
movs
outs
inc
inc
mov
mov
adc
in
mov
jge
pop
lock
iret
jbe
xor
imul
adc
xchg
adc
fild
cmp
sbb
jns
inc
pushf
scas
mov
pop
stos
ja
add
ficom
popa
ret
xchg
jnp
or
sub
mov
pop
xor
adc
xchg
out
shld
call
popf
aam
fstp
js
cmp
cmc
sub
mov
pop
nop
shr
mov
sub
test
jnp
lds
daa
jmp
les
je
mov
addr16
cmps
xchg
inc
adc
cs
push
pusha
cmp
sub
fs
sub
pop
push
inc
shl
ins
pop
popa
out
jge
and
fwait
rcr
xor
push
sub
jle
sub
push
dec
cmp
mov
enter
sbb
rcl
push
(bad)
repnz
popa
and
bound
cmp
shl
scas
push
add
xor
sub
sbb
outs
pop
and
inc
gs
push
aaa
inc
sbb
lahf
aas
adc
dec
aad
or
mov
stos
jle
add
shl
jae
pop
movs
dec
clc
and
inc
sbb
aad
pop
pop
xchg
leave
xor
sbb
cdq
pop
and
cmp
sar
or
adc
and
mov
pop
inc
rcr
(bad)
pause
(bad)
loope
jmp
mov
js
repz
dec
push
add
fdivr
adc
ret
pop
call
lock
pop
faddp
test
sbb
pop
adc
test
sahf
fisubr
mov
inc
pop
into
adc
pop
fdiv
(bad)
out
movs
inc
jb
inc
jmp
pop
(bad)
fidivr
(bad)
fsubrp
add
out
inc
ret
(bad)
lea
sar
jl
sti
jle
sbb
ins
xchg
ds
jmp
xchg
out
jle
inc
ror
inc
push
aad
jnp
jg
mov
std
fcmovne
and
shl
jp
sbb
popa
xor
jne
push
hlt
in
inc
jae
rcl
or
pushf
adc
(bad)
enter
out
stos
aaa
hlt
fbld
and
std
inc
adc
and
mov
mov
sub
dec
dec
sbb
mov
and
pop
push
mov
fldcw
cmp
inc
mov
mov
pop
aad
cmp
cdq
div
shl
xchg
scas
dec
sbb
icebp
sbb
fnsave
jl
xchg
cld
adc
xor
fistp
ins
movs
cmc
into
mov
leave
leave
loope
(bad)
mov
xor
mov
cmp
inc
pop
ficom
in
mov
outs
sub
xor
sti
cmp
lods
and
lds
ret
icebp
and
mov
(bad)
jecxz
mov
xor
mov
jmp
hlt
mov
(bad)
sbb
daa
int3
mov
inc
cmps
jb
jl
push
add
or
sub
out
mov
mov
mov
shr
(bad)
(bad)
pop
mov
cmp
fndisi(8087
ja
(bad)
cmc
sub
shr
pop
fsubr
daa
xlat
fxtract
cmp
les
arpl
pop
adc
mov
loope
mov
xchg
test
xor
loop
gs
lss
or
mov
out
loop
std
mov
jge
jl
mov
jmp
clc
btr
add
xor
out
sub
push
stos
mov
inc
clc
xor
jmp
sbb
mov
retf
loop
sbb
push
ret
cmp
mov
or
ret
add
cli
cmps
sahf
mov
push
xchg
add
cmc
xchg
fdiv
adc
jge
sbb
mov
sbb
fistp
push
das
cmp
add
pop
cmp
in
dec
dec
jmp
mov
fdivr
add
cwde
push
xor
pop
xchg
push
cmc
inc
test
cmps
cld
loope
jb
in
and
(bad)
cdq
movs
in
cwde
ffreep
call
mov
cmp
mov
cdq
mov
mov
pop
stc
inc
pop
mov
aad
cmp
out
outs
pop
ja
enter
mov
pop
inc
pop
xchg
aam
pop
sbb
adc
mov
mov
es
xor
jae
int3
xchg
mov
dec
jbe
sub
add
cmp
cs
push
out
shl
adc
push
idiv
mov
nop
out
sbb
movs
and
and
and
call
jb
repnz
jo
in
iret
rcr
push
mov
cld
mov
push
add
mov
pop
sbb
retf
jae
ds
inc
mov
add
popa
pop
mov
out
add
rcl
aam
inc
cmp
(bad)
push
(bad)
push
adc
ins
fcom
retf
jg
mov
mov
inc
mov
dec
adc
aam
cmp
pop
or
mov
dec
jno
enter
xor
sbb
imul
add
xchg
mov
cmp
cli
fcmovnbe
popa
aaa
fldcw
lock
xchg
stos
fwait
xlat
mov
nop
push
jmp
rol
jns
dec
add
xor
push
test
jg
cld
popf
mov
dec
jae
jns
pusha
imul
int
xchg
and
push
or
jbe
mov
push
jle
stos
je
pop
cmp
cmc
adc
adc
or
mov
mov
lods
pop
fnstsw
mov
jne
or
mov
jmp
inc
mov
and
in
push
sub
inc
add
cmp
pop
or
or
jb
cld
retf
mov
jne
repnz
stc
imul
dec
cmp
retf
or
ss
xchg
loop
aaa
xchg
mul
cmp
mov
pop
scas
lods
in
adc
and
mov
mov
push
dec
call
fstp
fwait
imul
or
jno
jp
sbb
mov
mov
or
imul
push
mov
rcl
lea
and
inc
gs
std
lea
xchg
push
(bad)
pushf
lods
sbb
test
xchg
popf
sbb
rcl
jge
cwde
loopne
mov
push
mov
sub
cmps
mov
mov
dec
push
out
les
ss
stc
mov
inc
in
rcl
cdq
mov
dec
bound
pop
mov
add
cmp
jg
lock
jle
out
hlt
gs
cli
pop
and
jle
into
push
dec
push
mov
and
mov
int3
and
(bad)
sbb
movs
or
sub
in
xchg
sar
push
ror
bound
icebp
std
lods
inc
jmp
popa
cmp
in
push
add
or
and
popf
jecxz
imul
push
out
add
jmp
jnp
popa
in
arpl
sbb
ins
cdq
loopne
in
cmp
mov
add
xchg
pop
adc
int3
mul
int
push
cmp
xor
sub
shl
ret
mov
xor
sti
push
inc
ss
das
jns
fwait
inc
aad
ret
push
push
aaa
mov
mov
sub
jns
clc
cmps
not
pop
in
int3
mov
hlt
sub
jmp
push
xchg
jmp
jmp
cwde
mov
test
aaa
push
mov
fwait
jmp
push
inc
or
into
pop
or
rcl
int
mov
xchg
in
or
add
dec
sub
push
mov
loopne
retf
push
aaa
adc
pop
or
(bad)
ds
daa
mov
imul
shl
pop
rcl
test
lock
in
push
push
test
or
mov
loop
ins
dec
add
cmp
jge
retf
adc
popf
or
or
push
mov
xchg
cmc
sbb
adc
and
jo
sub
sti
or
imul
aam
test
mov
mov
xchg
inc
mov
in
mov
add
(bad)
jmp
dec
mov
inc
cmp
sub
jbe
push
int
call
mov
push
rcr
and
mov
xchg
dec
cmp
in
jge
add
stos
jnp
cmps
jnp
mov
in
ret
out
mov
mov
lsl
jb
lahf
(bad)
adc
cmp
es
cmp
xchg
pop
in
cmc
jmp
mov
add
imul
mov
push
cmp
shl
loop
sub
push
aaa
ret
dec
mov
lods
xchg
jmp
ret
popf
dec
mov
add
pop
push
adc
cmp
jbe
push
dec
lock
xchg
sbb
add
call
push
and
ins
in
pop
or
or
add
mov
ins
pop
dec
jmp
cmp
jae
add
adc
sahf
scas
mov
aaa
pop
sub
outs
pop
stos
lock
es
jecxz
test
sti
jne
stos
xor
cmps
inc
mov
mov
std
mov
aas
js
fist
in
fsub
xchg
cwde
iret
pop
sub
push
push
inc
outs
adc
mov
scas
jnp
xor
or
mov
xchg
xor
sahf
and
xchg
rcr
in
rcr
and
scas
aad
push
call
popa
popf
lea
hlt
or
ret
test
mov
test
(bad)
ins
inc
mov
jbe
mov
add
inc
imul
add
aad
dec
cmp
daa
fnstsw
fdivp
ins
stc
sub
sbb
cmp
test
cmp
out
(bad)
cmp
xor
cwde
xchg
cmp
test
mov
inc
out
fnstenv
loop
pop
push
dec
jno
ja
sub
outs
cmp
or
inc
mov
xor
arpl
push
jmp
movs
das
xchg
sbb
and
pop
(bad)
mov
je
rol
std
retf
pop
push
popf
pop
call
xchg
mov
iret
push
fistp
fisubr
or
imul
jae
inc
mov
mov
(bad)
xchg
mov
cmps
xor
dec
inc
dec
xchg
cmps
mov
add
sbb
adc
ror
pop
sbb
jmp
xchg
sbb
imul
leave
and
test
mov
cmp
inc
enter
imul
sti
les
push
(bad)
mov
js
ret
jo
fwait
in
ja
dec
inc
add
xor
and
xchg
hlt
cmp
jle
(bad)
jmp
add
fcmovne
fstp
push
sbb
popa
mov
and
dec
loopne
cdq
xor
scas
dec
imul
jae
dec
out
outs
pop
ret
cli
mov
mov
jno
and
sub
dec
adc
stos
pop
inc
xchg
and
mov
jmp
jmp
pop
mov
xor
cmc
(bad)
movs
sbb
rol
add
xchg
(bad)
jns
cmp
(bad)
mov
inc
lods
inc
cwde
and
xlat
imul
push
mov
inc
adc
push
je
mov
inc
data16
xor
jo
jno
mov
lock
jle
pop
in
dec
(bad)
icebp
aaa
(bad)
push
xor
ins
sbb
in
push
push
dec
mov
(bad)
adc
pusha
mov
(bad)
ror
lds
loop
ss
movs
in
cmps
stos
retf
in
adc
pop
xor
mov
push
pop
fild
xchg
ret
scas
push
mov
lock
repnz
sbb
scas
adc
or
inc
retf
test
mov
sub
out
sbb
add
and
clc
cmp
outs
pop
add
adc
sub
mov
test
pop
stc
dec
jo
inc
and
cmps
movs
bound
out
lods
fldcw
cmp
sbb
jmp
mov
sbb
sbb
jnp
fistp
loop
mov
inc
xchg
popf
pop
push
add
paddsw
popa
sbb
cmc
lds
mov
jae
(bad)
mov
cdq
push
cmp
inc
and
fldenv
leave
push
push
cmp
sti
jle
and
ret
imul
add
xchg
sbb
mov
add
jecxz
mov
cmc
cld
je
add
nop
mov
addr16
popa
mov
or
lods
push
inc
dec
push
repnz
adc
(bad)
loope
out
inc
jp
mov
in
sbb
neg
mov
xchg
nop
pop
cdq
iret
(bad)
jns
in
adc
mov
mov
jns
mov
jne
pop
mov
cmp
shl
in
jno
in
dec
or
sar
mov
cli
push
call
cmp
loop
imul
sti
fdivr
add
lods
je
push
xchg
xor
cmps
xor
cmps
sbb
or
ins
adc
adc
out
test
adc
inc
inc
js
je
sahf
test
and
dec
es
mov
gs
push
repnz
or
mov
pop
sbb
push
scas
and
cmp
mov
inc
mov
sahf
les
int3
inc
mov
out
or
shl
push
ins
inc
mov
push
xor
pushf
mov
push
dec
lds
bswap
cmp
xchg
xchg
push
mov
popa
dec
scas
imul
mov
aad
fidiv
aaa
mov
jo
cmp
mov
and
mov
(bad)
pop
ins
aad
inc
jno
or
ins
(bad)
cdq
sub
add
push
push
(bad)
sahf
jge
and
and
mov
stc
in
imul
pop
cmp
add
cmp
inc
popa
ret
mov
aas
ds
or
cmp
push
rcl
ds
bound
xchg
pushf
mov
shl
inc
adc
mov
xchg
mov
ret
mov
outs
inc
dec
or
and
gs
nop
jle
jne
jp
jmp
out
sub
gs
aam
lods
bound
js
or
mov
mov
jb
retf
add
cmp
imul
jbe
call
jb
mov
test
jmp
repnz
dec
popa
sbb
jno
fild
imul
push
iret
add
mov
not
frstor
leave
mov
icebp
jns
xchg
aad
jg
test
xor
jg
stc
xchg
hlt
aaa
fwait
adc
cld
pop
lds
xlat
pop
push
lahf
lahf
add
adc
sbb
adc
add
loope
add
repz
cmp
jge
xlat
les
loope
rcl
jg
xlat
fadd
pop
sub
(bad)
fucomi
dec
jmp
neg
repz
cmp
aas
int
loope
ret
adc
fst
push
imul
pop
imul
sbb
mov
movs
or
fstp
aad
add
jmp
and
xchg
adc
mov
clc
cs
push
xchg
adc
movzx
fwait
dec
in
sub
fild
(bad)
test
popf
(bad)
in
rcr
(bad)
int
mov
dec
test
mov
mov
cmp
inc
xor
or
or
iret
and
ins
mov
sub
ins
call
in
xor
test
pop
adc
cwde
dec
mov
inc
xor
sbb
push
cmp
dec
scas
stc
dec
and
inc
xor
sub
inc
xchg
nop
and
pop
cmp
out
cwde
loope
scas
je
dec
ins
and
pop
lods
mov
scas
gs
rcr
mov
push
lds
test
jo
mov
lods
outs
hlt
in
lods
(bad)
cmp
int
xor
aas
mov
fucomi
and
mov
adc
mov
sbb
push
push
movs
dec
or
push
inc
xor
cwde
loop
mov
(bad)
adc
mov
inc
push
xor
pusha
add
shl
mov
push
pop
cmps
mov
push
nop
ror
mov
loopne
mov
shl
dec
jle
retf
aaa
pop
dec
in
xor
addr16
mov
push
jmp
(bad)
sar
adc
sub
push
pandn
mov
out
xlat
and
popf
or
jno
xor
push
add
sbb
and
and
lds
nop
sub
lea
xor
jo
hlt
xchg
mov
jmp
push
retf
sub
stos
cmp
mov
fs
jmp
aaa
xchg
jne
jb
retf
fs
fidivr
movs
jbe
xlat
inc
test
push
imul
clc
call
pop
aam
adc
pop
sti
in
cld
(bad)
add
sub
sar
scas
push
call
inc
retf
mov
inc
jo
adc
je
mov
std
sbb
test
dec
or
shl
ds
push
cs
dec
sbb
adc
test
mul
push
lock
cmc
cmp
cmps
inc
cli
outs
or
sub
push
sbb
js
ja
jle
mov
pop
shl
fwait
jo
jae
loop
push
in
push
sub
jmp
xchg
scas
call
mov
xchg
jmp
push
int3
cmc
ss
jmp
jne
inc
xor
inc
int3
cmc
setae
sbb
lock
or
ss
jmp
mov
cli
or
pop
jne
mov
rcr
sub
das
leave
ins
mov
jmp
enter
je
cmp
and
mov
dec
lahf
jmp
xor
mov
test
in
pop
cmp
xchg
push
stos
push
xor
xchg
lea
aas
mov
ins
adc
mov
xor
jmp
fwait
add
mov
inc
fs
mov
arpl
push
pop
leave
loop
test
data16
retf
xchg
inc
jecxz
or
jae
push
jae
push
adc
adc
adc
scas
or
repnz
cmp
push
mov
icebp
xchg
je
rcr
jno
lds
cwde
mov
mov
call
ror
cmp
std
push
mov
bound
mov
add
xchg
in
in
sub
imul
xor
jns
or
xchg
iret
iret
jne
sub
push
xlat
pop
fist
loop
and
mov
fadd
sbb
mov
xlat
sub
mov
jl
ret
shr
pop
out
lds
fisttp
push
cmp
in
cld
loope
or
mov
shr
jg
pop
add
das
ffree
adc
rep
push
or
(bad)
add
pop
dec
sub
sbb
rcl
les
sti
sub
ds
pop
mov
pop
fsubr
aam
jns
out
xor
icebp
shl
or
or
sar
adc
fistp
das
repnz
pop
sar
leave
mov
sbb
sbb
(bad)
cmp
shr
inc
push
(bad)
aam
push
retf
mov
inc
(bad)
push
cmp
push
xor
fwait
test
enter
lds
rcr
jno
popa
hlt
sub
xor
icebp
add
(bad)
test
movs
or
adc
cmc
shl
mov
scas
fwait
test
mov
ror
mov
cdq
sets
jecxz
or
and
jns
dec
xor
out
(bad)
cli
call
mov
inc
push
or
fxtract
add
lds
or
jecxz
pop
cmp
xlat
push
push
push
xor
ds
sub
es
jecxz
ret
in
mov
and
imul
popf
movs
jbe
push
hlt
outs
dec
mov
imul
in
cmps
jle
pop
leave
jb
(bad)
imul
cwde
lods
stc
popa
mov
call
ja
mov
mov
jl
jb
pminsw
and
add
xor
fwait
push
or
xlat
adc
xchg
mov
pop
aad
xor
into
cmp
jmp
int
push
add
inc
push
in
push
mov
pop
aam
int3
xchg
(bad)
pop
(bad)
outs
scas
gs
xor
sbb
mov
dec
loopne
enter
arpl
and
repnz
clc
adc
cli
pop
sbb
push
rol
dec
sbb
push
xchg
inc
mov
and
rol
adc
movs
add
ins
pop
mov
xchg
dec
cmp
out
mov
jo
jmp
(bad)
and
dec
imul
(bad)
out
mov
lea
cmp
mov
sub
or
pop
lds
rcr
jb
push
mov
repnz
aaa
icebp
push
out
sbb
fist
clc
jno
pop
icebp
mov
lods
jbe
iret
jmp
mov
mov
mov
retf
add
or
sub
fucom
add
repnz
popf
(bad)
xchg
xchg
cmps
ja
cli
ins
push
clc
pop
fild
arpl
scas
inc
aas
and
scas
adc
shl
mov
pusha
mov
pop
xchg
sbb
lahf
call
xchg
pusha
dec
adc
inc
fs
xor
and
icebp
mov
pushf
fwait
xchg
aaa
mov
les
repz
in
push
sub
stos
movs
out
cmp
mov
adc
inc
or
pusha
mov
sbb
xchg
add
cmp
mov
sub
jno
ficom
or
rol
jbe
mov
mov
inc
(bad)
repnz
pop
push
dec
into
push
xor
fdivr
ffreep
pop
inc
push
jg
cmps
push
mov
xchg
ret
or
pop
sub
sbb
add
pop
fxch
call
sub
cmp
or
pop
pushf
push
(bad)
mov
out
mov
xor
repnz
xchg
inc
aad
sbb
in
in
push
cli
pop
mov
aad
and
cmp
add
add
fidiv
test
(bad)
pop
jl
xchg
sub
ror
lods
scas
daa
retf
mov
movs
dec
lock
xor
and
add
retf
push
retf
inc
clc
lea
rol
inc
ret
fsubr
je
xchg
push
push
fisttp
dec
or
cmp
mov
cli
(bad)
jnp
or
fild
inc
xor
pusha
in
movs
shl
or
push
mov
(bad)
clc
adc
lods
sbb
pusha
ins
mov
push
ins
and
sbb
mov
xchg
cmp
icebp
cld
pop
movs
xlat
pop
sbb
shr
clc
je
out
xlat
or
adc
and
cli
lods
lahf
cs
xor
not
in
mov
std
jmp
xor
aas
retf
(bad)
adc
push
outs
stos
push
inc
dec
add
cmp
ds
mul
leave
xchg
sub
stos
cmp
sub
fiadd
or
mov
in
cli
push
cmp
sub
test
jecxz
sub
enter
push
js
mov
stos
fwait
stos
loopne
pop
xchg
ss
fsubr
test
(bad)
dec
cmovg
(bad)
daa
push
clc
sahf
int
push
sub
mov
ficom
pop
mov
jnp
mov
lahf
js
nop
sub
fs
mov
out
jmp
inc
pop
mov
repnz
ret
push
fistp
(bad)
jecxz
(bad)
push
(bad)
cli
jle
or
add
inc
and
sbb
jle
mov
add
xor
sbb
cmp
jae
imul
hlt
add
test
dec
inc
fucomp
jae
cmp
inc
stos
mov
xor
push
mov
aaa
test
test
js
enter
dec
ficomp
popa
repnz
adc
sub
jb
add
pop
sub
adc
adc
push
jno
ficom
not
movs
inc
jmp
sahf
mov
test
xor
add
lods
fwait
xor
xor
out
adc
stos
stc
pop
fldcw
ja
cmp
xchg
xchg
or
nop
sub
cmp
pop
xchg
movs
loop
repz
push
repz
clc
and
mul
arpl
pop
mov
mov
cwde
adc
xor
inc
movs
push
es
and
jle
in
xor
sbb
enter
dec
and
arpl
popa
sbb
sahf
cdq
mov
aad
add
cmp
add
inc
cmps
pop
hlt
xlat
jecxz
lods
lock
cmc
inc
pop
sahf
cdq
add
add
mov
mov
test
scas
sbb
pop
cmp
es
push
pop
mov
out
mov
fs
test
jmp
cmps
sbb
hlt
push
mov
icebp
or
inc
lods
(bad)
jno
adc
fs
ficomp
out
dec
popa
mov
faddp
in
cs
cmp
retf
mov
jecxz
pop
inc
fild
push
fidivr
push
(bad)
sar
xor
and
mov
(bad)
fisttp
jmp
enter
mov
cmps
lahf
xchg
aad
ds
shl
(bad)
out
jl
adc
(bad)
in
inc
push
(bad)
clc
mov
lahf
imul
aad
movs
mov
and
mov
inc
rol
and
adc
leave
mov
stos
dec
push
test
sub
and
xor
mov
fstp
xor
jl
mov
push
add
jnp
cmp
cwde
cdq
xchg
bound
test
and
loope
xchg
xchg
add
(bad)
call
mov
repz
in
jl
cmp
dec
repz
jmp
dec
in
in
cmp
lds
rcr
ficomp
mov
cli
gs
and
jge
fld
xchg
mov
iret
xor
shl
xchg
out
sti
jo
fisubr
xchg
sbb
jle
fwait
mov
jnp
add
mov
mov
in
xchg
or
aaa
adc
mov
retf
pop
mov
(bad)
jmp
in
add
in
ins
pop
clc
jge
jmp
mov
add
mov
ja
jecxz
cdq
cmp
in
xor
call
or
pusha
test
icebp
or
fs
push
call
fadd
int3
int
jp
lea
leave
sbb
das
dec
xor
jns
push
and
sbb
pop
push
fnsave
adc
test
cmps
stos
sbb
(bad)
xor
clc
int
pop
je
movs
push
pusha
imul
les
jmp
fcomip
sbb
mov
mov
mov
inc
aam
mov
push
and
(bad)
adc
fisttp
movaps
xchg
movs
cli
(bad)
sub
aas
into
movs
shr
fdivr
std
out
push
in
mov
push
ja
mov
jns
fistp
stc
in
out
fcom
adc
js
mov
or
enter
in
and
sbb
lods
pushf
jmp
(bad)
aas
dec
pop
and
sub
push
jl
lods
int3
inc
adc
add
dec
jp
lds
mov
xor
shl
cmp
icebp
inc
loop
cwde
dec
mov
xchg
dec
stos
add
shr
jae
jne
sub
jl
mov
jbe
fnstcw
iret
stos
vsqrtss
mov
fiadd
test
rcr
pop
pop
movs
outs
jg
fist
and
mov
mov
xor
call
jp
mov
daa
xchg
add
adc
dec
add
mov
ret
sar
hlt
xor
ins
push
xor
add
jp
inc
inc
js
ins
and
js
and
xchg
popf
and
stc
popf
jg
cmps
mov
sti
mov
dec
(bad)
and
repz
das
push
shr
xchg
pop
out
in
push
retf
test
rcr
sub
mov
arpl
ja
dec
cmp
mov
(bad)
pop
and
push
fild
xchg
jecxz
sub
(bad)
repz
scas
cmp
ss
fld
adc
add
jmp
lds
cli
mov
adc
cmp
mov
sbb
cmp
cmc
cwde
sti
pop
dec
dec
out
std
sub
push
xchg
daa
outs
shr
dec
push
or
sub
and
push
dec
mov
inc
call
bound
fld
cmc
in
shl
shl
addr16
es
jge
aad
sbb
sbb
rcl
out
aad
xchg
lods
mov
bound
pop
ret
fidiv
dec
mov
add
fs
cdq
fist
sub
dec
jg
pop
(bad)
das
and
push
jmp
and
add
rcl
scas
jmp
jb
xor
pop
mov
(bad)
sub
add
stc
mov
adc
std
pop
push
cmp
sub
idiv
or
leave
test
adc
nop
mov
in
pop
mov
xchg
dec
outs
jmp
stc
sbb
mov
dec
lea
das
adc
fiadd
xchg
and
push
mov
push
pusha
cmc
int
out
ds
dec
pop
mov
iret
xor
popa
cwde
mov
add
dec
fist
jbe
movs
out
cli
pop
(bad)
inc
lods
mov
mov
dec
clc
std
inc
inc
cld
sub
in
push
push
(bad)
clc
push
scas
sbb
or
shl
popa
ja
mov
test
add
out
pop
mov
stos
dec
loopne
xchg
in
imul
push
lock
pushf
hlt
jbe
das
inc
outs
pop
pop
ins
mov
cdq
xchg
pop
adc
jp
adc
inc
icebp
ins
xor
rcr
popa
and
fimul
fxch
sub
inc
rcl
adc
mov
lahf
sahf
push
adc
dec
out
mov
sbb
jne
scas
xchg
daa
test
push
jo
pop
xor
inc
mov
pop
inc
out
add
sar
fimul
ffree
adc
dec
js
mov
adc
aam
ins
retf
fcomp
clc
pop
shl
aaa
fidiv
sbb
cmp
cli
ja
sbb
jnp
adc
cmp
add
or
outs
repnz
js
imul
ffree
cmp
dec
jbe
mov
jge
xchg
add
inc
sar
test
push
cmp
jnp
adc
sub
xchg
cmc
push
js
dec
in
out
shr
xchg
cmps
add
stos
pop
mov
push
movs
adc
mov
mov
fs
xchg
int
stos
jns
mov
vmovddup
pop
repz
jge
xlat
cmp
or
pop
cmp
and
push
xor
aad
jp
cdq
pop
pop
xchg
(bad)
(bad)
jb
out
jns
push
mov
fstp
rol
loop
xchg
inc
mov
pop
in
adc
sahf
pop
inc
iret
jl
xchg
pop
push
sti
push
pusha
inc
mov
pop
cli
add
ins
pushf
push
ds
hlt
lods
adc
pop
cmps
repnz
pop
xlat
mov
mov
or
jnp
cmc
stos
jns
fwait
and
popa
inc
mov
or
out
adc
popf
jne
sub
iret
push
cmp
or
add
out
loope
mov
sub
ret
jecxz
xchg
hlt
mov
lods
pop
jae
sbb
inc
sbb
pop
xor
aaa
bound
out
inc
(bad)
fst
call
lea
pop
aam
cmps
nop
(bad)
pop
jmp
xor
loope
(bad)
jmp
and
sbb
ds
(bad)
jg
imul
ja
push
ds
pop
rcr
shr
mov
mov
clc
xor
lods
push
sub
movs
cmp
out
push
mov
sub
jmp
lahf
enter
mov
pop
and
cmp
sub
aaa
js
xchg
jae
data16
fwait
(bad)
fs
xor
scas
sub
mov
mov
ret
or
shl
cmps
jecxz
jp
mov
dec
add
rcr
jle
test
jbe
push
pop
jmp
push
idiv
outs
push
sub
popa
sbb
jns
pushf
ret
xchg
call
std
cdq
mov
sub
inc
jp
sbb
popa
push
sbb
aaa
add
in
xor
sbb
ja
out
inc
jns
mov
and
sub
dec
dec
adc
clc
mov
ror
pop
jmp
sub
xor
jb
fistp
jno
push
fs
jns
inc
lea
or
pushf
push
iret
outs
fwait
(bad)
jno
ds
test
bnd
sbb
out
adc
cld
out
js
loope
test
xor
mov
jmp
sbb
mov
aam
arpl
sbb
push
sbb
inc
sti
sti
push
(bad)
int3
ins
call
adc
ins
mov
lea
cmc
movs
jne
inc
fisub
test
mov
cwde
fwait
jl
cli
sbb
jle
rol
xchg
xchg
hlt
cld
mov
or
sub
retf
inc
jmp
dec
call
imul
stc
mov
outs
(bad)
push
(bad)
ror
cmp
jg
add
rcl
mov
dec
cmp
xor
mov
jo
xor
jb
xchg
in
cmp
jecxz
outs
xor
cs
mov
jl
pop
xchg
test
mov
mov
bound
sub
mov
fwait
div
imul
pop
xchg
jmp
cmp
mov
ja
mov
jge
loop
mov
push
sbb
popf
imul
pop
push
cmps
mov
call
mov
jl
pop
cli
pop
nop
enter
into
dec
jo
inc
inc
mov
sbb
pop
inc
mov
mov
cmps
ss
loop
sub
ficomp
loope
sbb
adc
fsub
push
add
xchg
add
int3
sbb
xchg
out
pop
outs
xchg
call
inc
pop
cs
out
xchg
(bad)
sbb
ja
dec
cwde
cmp
sbb
(bad)
mov
lea
adc
jge
cld
shl
aas
loope
int3
dec
adc
fiadd
or
mov
adc
imul
adc
cmc
fwait
(bad)
jmp
repnz
into
cld
ins
add
fldcw
mov
cmc
push
pop
jb
int
and
outs
pop
pushf
jo
loope
push
mov
sbb
adc
rcr
in
adc
dec
test
ins
mov
sub
cs
inc
dec
out
inc
clc
test
fisttp
jns
and
sar
push
mov
ins
adc
jns
sbb
mov
xor
and
sub
cs
ret
scas
jo
daa
inc
mov
or
push
leave
iret
int3
popa
movs
pop
and
lods
inc
jb
jne
dec
mov
adc
push
pop
xchg
js
pop
cdq
cwde
test
ss
push
loop
(bad)
adc
dec
jmp
xchg
cmp
pop
inc
push
sbb
imul
xor
in
iret
test
adc
pushf
xchg
cmp
or
(bad)
es
ja
hlt
push
or
xchg
jl
dec
dec
outs
sahf
scas
sahf
outs
sub
stc
sbb
push
stos
dec
xor
ficomp
fst
retf
add
(bad)
aad
xor
scas
icebp
sbb
cs
jns
xor
retf
loop
xchg
xchg
pusha
inc
or
mov
scas
jnp
loope
pop
lahf
es
mov
stos
jmp
sub
retf
arpl
mov
lods
ins
mov
mov
adc
xchg
push
mov
mov
popa
xchg
jmp
jmp
dec
dec
xor
sbb
dec
lods
mov
call
ret
fdiv
inc
xchg
aas
push
or
jle
bndstx
push
clc
push
stos
pop
test
int3
ret
shl
fwait
inc
popf
das
dec
rcr
xor
repz
pop
mov
jle
add
push
inc
ja
sub
(bad)
xchg
add
outs
in
int
mov
inc
mov
(bad)
sar
mov
mov
mov
push
xchg
cmps
aad
push
ret
(bad)
push
xchg
lahf
test
dec
loop
loope
and
mov
push
outs
shl
xor
ins
mov
es
test
and
daa
pop
rol
mov
stc
or
cmp
push
lds
push
aad
jno
stos
and
loopne
daa
jns
test
(bad)
xchg
mov
push
dec
in
xchg
popa
shl
pop
call
or
push
push
lock
stos
(bad)
arpl
std
loopne
outs
inc
add
jmp
call
(bad)
(bad)
cmp
(bad)
(bad)
in
jne
mov
(bad)
loopne
shr
test
xchg
or
ins
lods
fwait
lods
mov
xchg
and
adc
mov
cmp
ja
push
jb
and
ret
sbb
ret
xor
inc
in
sub
and
outs
mov
mov
dec
shl
cs
lods
retf
fisubr
adc
cmp
mov
into
ins
std
inc
jecxz
mov
jbe
add
pop
(bad)
sub
jp
jno
out
in
pop
cmp
dec
xlat
les
fist
out
push
cld
or
xchg
cmp
out
xor
fnstcw
addr16
jnp
pop
out
jle
dec
jbe
sbb
add
jg
jg
add
sbb
mov
add
dec
push
into
mov
inc
pusha
lds
out
stc
loop
sub
xor
sub
xlat
push
and
jnp
fldenv
imul
sbb
adc
sub
jmp
mov
xchg
mov
shl
ja
inc
inc
ret
iret
xor
or
mov
mov
in
mov
je
xor
push
pop
sub
cld
sub
leave
push
add
jmp
mov
aaa
mov
sbb
cs
pop
std
mov
inc
arpl
addr16
or
cwde
ds
jae
sbb
inc
xor
mov
push
out
sbb
scas
test
out
push
das
cld
or
stos
mov
loopne
aad
int
leave
jo
jg
inc
add
adc
cmp
movs
cwde
xchg
outs
xchg
sub
add
ds
rol
fbld
outs
std
push
(bad)
hlt
jge
cmp
pop
sub
dec
inc
sub
jge
mov
stos
sti
pop
lahf
(bad)
mov
mov
pop
push
dec
pop
pop
or
mov
mov
cmp
add
and
xchg
jae
in
les
test
test
ret
pusha
(bad)
fiadd
je
ret
push
sbb
add
inc
dec
pop
int
cmp
and
xchg
cld
jnp
adc
sbb
call
clc
out
mov
stos
mov
mov
dec
dec
and
mov
push
test
lahf
xchg
and
sti
dec
pop
in
adc
mov
xlat
lahf
jmp
or
div
adc
mov
lods
call
lahf
sbb
call
and
pop
int3
inc
sbb
bound
(bad)
ins
aam
icebp
xchg
or
pop
adc
add
ret
pushf
and
mov
mov
gs
sub
ret
retf
jp
push
movs
ins
jecxz
push
xchg
xchg
xor
dec
jge
dec
mov
xchg
dec
sub
pushf
das
out
call
mov
(bad)
adc
mov
sbb
out
cmp
loopne
pop
pusha
jo
fdivr
push
loopne
pop
adc
dec
data16
pop
add
daa
lea
hlt
pop
xlat
repz
aas
or
jne
clc
adc
inc
ret
loope
sub
div
sti
xchg
aad
dec
repnz
cld
pop
cld
inc
sub
ret
lahf
mov
fst
add
add
scas
fsubrp
js
fcmovbe
or
lahf
in
xlat
and
shr
push
or
inc
inc
xchg
sub
ins
call
fs
mov
xor
loope
(bad)
jle
inc
fistp
xchg
dec
mov
test
pop
mov
cmp
adc
in
hlt
sbb
arpl
xor
xor
imul
or
cdq
enter
inc
xor
cmp
mov
sbb
xchg
fldenv
sbb
or
cmp
mov
or
mov
mov
mov
aam
push
mov
jnp
ins
mov
scas
and
cmp
retf
out
in
adc
push
clc
mov
jecxz
sub
in
rcr
inc
xchg
mov
bound
mov
xchg
(bad)
sub
int
mov
adc
lods
cmps
mov
arpl
and
mov
ss
addr16
ret
mov
xchg
nop
pushf
call
call
data16
lahf
xor
dec
scas
sahf
cld
lahf
dec
jo
sbb
add
sub
les
(bad)
jmp
pushf
pop
xlat
pop
test
inc
mov
sbb
pop
push
outs
sub
test
repnz
das
gs
jge
cli
iret
loop
popf
ss
ins
into
push
jb
ficomp
push
add
retf
and
sbb
mov
mov
xchg
pop
adc
dec
and
int3
aas
xchg
and
jecxz
mov
add
fiadd
add
aam
cmps
fcom
(bad)
cs
xor
imul
mov
int3
mov
xchg
div
jge
ds
or
sub
jge
add
push
or
xchg
test
push
xor
pop
mov
pop
daa
sub
and
sahf
test
dec
and
call
call
movs
dec
and
push
xchg
int
enter
mov
cdq
cld
mov
lds
sub
sub
jns
lods
fisub
xor
mov
je
rcr
ins
lahf
jae
out
nop
xchg
sar
das
mov
movs
pop
xchg
pop
and
jmp
outs
(bad)
mov
imul
and
gs
aam
cs
push
lods
mov
and
outs
scas
int3
mov
daa
xor
mov
pop
jae
or
imul
retf
xchg
nop
das
pop
push
rcr
idiv
dec
inc
inc
push
mov
pop
sbb
arpl
adc
in
jne
dec
jge
lds
add
test
(bad)
pop
mov
ret
int3
les
jbe
int3
pop
mov
push
and
pop
(bad)
cmps
inc
inc
fcomp
retf
jmp
adc
scas
repnz
movs
cmp
leave
aaa
mov
cmp
lahf
adc
jp
in
mov
xchg
in
mov
mov
push
aas
sbb
inc
cmp
pop
mov
push
push
lds
inc
jbe
adc
icebp
ins
pop
dec
xor
cmp
pop
stos
or
push
push
fimul
cmp
cmp
cmp
or
das
dec
test
dec
add
pop
fwait
movs
dec
stos
imul
hlt
mov
xchg
mov
(bad)
(bad)
(bad)
push
(bad)
and
(bad)
mov
dec
fstp
sub
dec
icebp
sbb
lods
test
mov
repz
fwait
push
cli
inc
mov
shr
cli
inc
les
fmul
mov
jns
ja
mov
ds
imul
in
ja
pop
rol
cmps
cwde
loop
push
mov
loope
popf
pop
xlat
or
cmps
sbb
rcr
fcmovbe
jl
mov
(bad)
pop
pop
jno
jne
sar
and
jne
adc
pop
xchg
stc
lods
mov
mov
jle
fs
in
cmps
(bad)
nop
cmp
push
pop
or
pop
cmp
mov
and
lds
mov
fsub
sbb
dec
mov
mov
hlt
cmps
scas
repz
lock
cmp
mov
push
jns
ficom
int3
in
div
mov
loop
out
rcr
adc
out
ja
inc
fsubr
sub
cmps
cs
pusha
jmp
test
push
sahf
stos
inc
std
mov
adc
and
push
in
das
aam
and
gs
jnp
mov
add
push
xchg
jle
pop
inc
pop
xchg
shl
inc
fstp
fnsave
sbb
daa
aad
push
fdiv
sahf
aam
pop
mov
xchg
mov
icebp
daa
add
enter
adc
test
das
or
push
mov
push
dec
push
ins
pop
je
pusha
test
mov
lahf
test
jnp
mov
mov
shr
leave
scas
jo
jno
(bad)
cmp
pop
xchg
scas
cdq
dec
cmp
xchg
ss
enter
mov
add
ja
cmp
retf
mov
movs
call
std
daa
and
das
enter
cmp
sub
(bad)
into
retf
or
cmc
idiv
fmul
ins
jno
dec
stos
cmc
inc
ror
ins
mov
jno
xor
(bad)
jnp
ret
jle
outs
mov
pop
imul
in
js
adc
push
pop
jp
mov
mov
clc
dec
mov
rcr
pop
inc
sub
xor
shl
mov
mov
jmp
pushf
call
jo
xchg
loopne
pop
mov
and
or
jg
enter
mov
mov
arpl
add
or
pushf
sbb
call
xchg
ins
bound
in
mov
daa
add
jbe
rcl
movs
xchg
lds
ins
jnp
xor
ret
pop
jbe
xchg
fxch
push
call
popa
pop
in
in
mov
imul
jge
adc
xchg
(bad)
push
add
push
clc
jg
jg
jmp
push
bound
xor
xor
leave
(bad)
push
xor
mov
jbe
push
lock
sti
shl
mov
scas
(bad)
cdq
xor
jae
xor
mov
xchg
shl
lods
adc
pushf
sahf
mov
mov
jg
cld
pop
inc
clc
inc
mov
jnp
sbb
fnstcw
pop
and
lods
popa
imul
add
xchg
mov
mov
pop
(bad)
push
jecxz
stc
or
(bad)
in
call
lods
xor
push
fst
xchg
jno
sub
rcl
adc
mov
pop
es
and
cmp
mov
repz
or
mov
dec
fs
pop
fisubr
fcomp
or
jp
xor
jnp
add
pop
xchg
mul
push
add
mov
cli
das
pop
test
out
mov
repnz
inc
dec
mov
mov
std
ret
sbb
ds
lods
dec
call
retf
xor
cmps
inc
adc
icebp
out
xor
inc
adc
imul
cmp
sub
cmc
fstp
int
les
jg
fs
in
jne
dec
mov
xchg
sub
sub
sub
aas
stc
stos
test
leave
idiv
or
pusha
sbb
inc
inc
push
shr
mul
push
push
(bad)
in
mov
sub
stc
xor
(bad)
add
dec
out
enter
xchg
movs
jge
xlat
lock
fwait
cmc
cmp
jbe
neg
nop
xor
jl
mov
and
test
push
push
and
cmps
scas
aad
lods
fdivr
aad
movs
jle
mov
out
mov
or
leave
imul
mov
push
jns
xor
enter
loopne
xchg
cmps
enter
fidivr
cmp
push
adc
jnp
jns
lahf
pop
sbb
aad
sbb
adc
icebp
dec
inc
mov
mov
push
lahf
test
sub
bound
add
mov
and
inc
je
xchg
loope
rcl
leave
in
inc
push
sahf
inc
sub
dec
test
push
mov
pop
or
xchg
or
push
xchg
iret
pop
repz
jmp
add
cmp
lods
xchg
and
sub
out
cdq
pusha
mov
mov
icebp
pop
xor
ins
iret
cld
rol
jle
popf
es
sub
dec
push
lods
sahf
and
test
adc
into
sbb
mov
lods
and
cwde
xchg
dec
mov
and
lods
jnp
enter
jg
add
mov
(bad)
mov
mov
(bad)
nop
push
out
push
mov
and
mov
jne
dec
push
xor
pop
xor
pop
mov
xor
push
rcr
cmp
rcl
int
sbb
in
pop
mov
or
in
in
fidiv
jbe
lds
pop
add
xchg
cs
outs
inc
dec
test
gs
sbb
pusha
xchg
jae
shr
add
or
fldcw
and
mov
adc
inc
(bad)
jl
arpl
sub
(bad)
jns
ret
dec
push
int
in
test
cmp
(bad)
jne
mov
xor
sahf
mov
push
imul
xchg
retf
mov
and
mov
sub
jp
cdq
jl
in
int
xchg
inc
push
mov
aas
loop
repz
xor
pop
inc
call
ins
xor
test
jns
cmp
inc
es
xchg
mov
mov
push
inc
cmp
test
pop
mov
adc
xchg
loop
popf
scas
cld
add
or
and
pop
jge
jmp
in
outs
cld
xchg
sub
stc
cli
jnp
inc
repnz
jecxz
add
fmul
jmp
mov
ror
add
retf
dec
mov
out
cdq
mov
inc
pop
sbb
data16
ds
inc
mov
push
mov
in
ins
adc
fst
cwde
xor
dec
shl
jg
sub
lods
arpl
scas
and
cmps
outs
and
or
pop
cdq
cmp
xchg
in
aas
adc
adc
cs
and
adc
inc
cdq
gs
jg
push
mov
mov
popa
mov
fs
push
into
cmova
dec
imul
push
out
inc
nop
pusha
sbb
out
icebp
out
call
cmp
mov
das
rdmsr
addr16
push
fild
cmp
(bad)
cli
aam
outs
movs
sti
mov
stc
dec
xchg
(bad)
loop
adc
mov
sar
into
(bad)
cdq
mov
into
xor
inc
(bad)
jmp
lea
clc
fmul
or
out
in
retf
in
gs
adc
loope
sbb
mov
sbb
dec
outs
add
pop
stc
jb
loop
or
add
scas
push
dec
xchg
inc
mov
nop
nop
jns
mov
(bad)
cwde
jecxz
jge
adc
inc
inc
ss
(bad)
call
bound
popa
fist
or
jne
test
mov
mov
jbe
xor
push
mul
xor
ins
mov
psubb
stos
outs
idiv
aam
test
push
fcmove
out
jns
dec
out
popf
sbb
int3
mov
daa
add
push
xchg
sti
dec
and
pop
movs
mov
mov
loopne
ss
rcr
loopne
outs
sar
and
push
mov
scas
jp
ins
dec
jle
mov
mov
repnz
mov
jbe
fsubp
stc
pop
xchg
jb
xor
(bad)
js
xchg
inc
jbe
xchg
fs
and
sbb
add
jg
lock
mov
fldl2e
xor
shl
call
loopne
mov
popa
(bad)
lock
cli
add
ins
ja
ins
mov
fcom
retf
and
loopne
std
cwde
lahf
pop
sar
data16
aaa
sahf
mov
aam
xchg
movs
lea
dec
mov
dec
cs
fimul
and
pop
sahf
mov
retf
push
jmp
mov
xor
pop
das
sbb
sahf
dec
imul
in
inc
(bad)
out
les
push
div
push
dec
inc
fcom
imul
dec
pop
jmp
cmp
(bad)
loopne
in
adc
mov
lahf
lahf
xchg
loopne
or
pusha
cmp
arpl
mov
daa
mov
ret
or
les
bound
sub
pushf
(bad)
mov
cmp
ss
or
mov
fld
outs
xchg
mov
mov
jge
mov
imul
add
in
jne
in
(bad)
adc
stos
test
dec
and
xchg
pop
sbb
cmp
ret
inc
push
pushf
je
sub
fist
loopne
repnz
movs
rcl
outs
mov
outs
mov
cmp
or
cmp
inc
inc
pop
pop
or
jno
mov
imul
push
mov
nop
dec
dec
xchg
(bad)
xor
aam
ins
fs
pop
mov
jmp
mov
pushf
in
jmp
push
(bad)
out
pop
loope
fldl2t
das
fstp
xor
jno
or
retf
(bad)
xor
jno
xchg
xchg
mov
mov
lods
and
dec
into
fs
jmp
movs
mov
pusha
test
das
shr
aas
push
bound
(bad)
fild
pushf
pop
add
or
(bad)
push
popf
mov
out
(bad)
xchg
(bad)
cmp
cmp
ds
push
mov
pusha
inc
adc
add
add
lods
call
jmp
adc
shl
leave
jo
daa
adc
add
pop
cmp
retf
enter
inc
(bad)
(bad)
mov
movs
popf
bound
cmp
(bad)
mov
shl
mov
jb
sar
add
pusha
loopne
ja
stos
ds
push
in
push
sbb
or
dec
aaa
mov
xor
jg
stos
mov
fimul
mov
lods
pmulhw
push
jno
push
jle
dec
mov
push
pop
int
jae
mov
add
ret
push
dec
pusha
pop
lock
jp
sub
push
add
popf
or
mov
test
stos
daa
push
rol
stc
js
fdivr
pop
scas
dec
jb
cld
imul
and
inc
jbe
jecxz
mov
rol
stos
pusha
pop
fndisi(8087
push
outs
lahf
shr
or
or
xor
popa
ret
xchg
sbb
je
ror
push
dec
or
sbb
inc
xor
inc
fistp
jo
(bad)
out
call
pop
add
rcl
adc
add
mov
xlat
fisttp
jmp
add
or
retf
cs
loopne
outs
sar
push
cli
cmps
mov
nop
pop
and
js
or
ret
(bad)
push
dec
dec
push
dec
jne
mov
cmp
cmps
pop
(bad)
mov
cwde
std
(bad)
frstor
call
dec
mov
add
cmc
adc
push
iret
sub
pop
sub
test
sub
xlat
retf
arpl
and
nop
test
shl
test
inc
mov
es
push
sar
js
mov
sub
adc
xor
int
fcom
add
aas
xor
adc
aas
adc
sbb
sbb
imul
xchg
ret
into
aad
xor
loope
push
inc
add
pop
xchg
dec
mov
scas
(bad)
pusha
mov
xor
xchg
push
ins
std
sbb
leave
sub
movs
(bad)
fcmovnbe
pushf
add
xor
mov
xchg
and
std
xor
imul
test
push
mov
push
mov
test
jp
mov
xchg
push
pop
call
fmul
xchg
push
test
(bad)
fst
js
xor
sbb
inc
ret
in
mov
xlat
mov
pop
sub
icebp
ins
mov
inc
jb
mov
cmc
xchg
retf
call
mov
ficom
inc
mov
and
ins
clc
dec
(bad)
sbb
cmp
loop
push
push
imul
sub
add
in
pop
lods
popf
(bad)
cmp
mov
cdq
dec
cwde
and
jmp
lea
jg
call
ds
sub
gs
cs
lds
pop
shr
call
ficomp
adc
outs
call
add
popa
sbb
aas
into
add
push
loope
dec
dec
adc
xor
std
test
ins
xchg
pop
in
inc
mov
les
aam
adc
mov
lods
int
int3
or
in
push
inc
sahf
cmp
and
test
stc
and
loopne
or
repz
pop
int
fsub
mov
xor
adc
mov
movs
ss
ret
mov
jl
fist
dec
cmp
or
mov
popa
in
mov
in
loop
pop
push
pop
mov
cmp
sub
mov
arpl
cmp
loope
and
aaa
test
jnp
je
dec
dec
(bad)
ins
inc
pop
adc
inc
fmul
mov
inc
push
xchg
sbb
out
pop
xchg
push
std
ror
sub
fsub
sub
xor
(bad)
loop
ins
add
add
sub
enter
sbb
leave
scas
outs
xchg
test
push
retf
js
jecxz
in
cmp
test
jecxz
cmp
(bad)
dec
scas
jnp
jge
or
mov
fdivr
push
jle
dec
leave
jno
int3
shl
xchg
lods
and
out
add
cld
lahf
dec
push
inc
lods
or
cmp
and
(bad)
sbb
out
jmp
ror
inc
and
cwde
adc
aam
push
and
int3
sahf
jmp
push
aam
cmp
and
add
addr16
push
xor
jbe
fisttp
rcl
pusha
(bad)
and
jno
inc
push
sub
mov
xchg
mov
dec
jbe
pop
jmp
scas
cmp
adc
mov
add
daa
fcomp
loope
scas
das
loopne
nop
xchg
adc
cld
daa
sub
xor
mov
and
ret
mov
lock
dec
dec
inc
inc
adc
daa
mov
aaa
movs
scas
inc
repnz
fldenv
cmp
pusha
cmp
or
mov
jnp
mov
jmp
sbb
leave
(bad)
pop
push
pop
jns
fstp
cmp
mov
xor
add
daa
lea
add
mov
scas
inc
and
sbb
hlt
adc
retf
sbb
stos
push
sahf
inc
mov
cmps
daa
pop
fdivr
movs
and
jge
pop
jo
sbb
sar
jbe
jle
ret
mov
cmc
adc
mov
push
outs
enter
mov
jnp
(bad)
shl
add
ins
push
fwait
mov
aas
aas
sbb
popa
sti
retf
adc
mov
mov
repnz
les
jmp
fimul
out
std
and
arpl
mov
loopne
rcl
sbb
add
push
cmp
mov
jle
ficomp
ja
sub
shl
push
rol
lea
(bad)
(bad)
mov
adc
inc
cdq
outs
and
dec
xchg
push
scas
jbe
rcr
in
xchg
inc
lock
outs
test
cmp
push
leave
mov
sub
into
mov
push
std
jnp
pop
xchg
outs
sub
cli
sub
xor
rcl
cwde
pop
and
iret
mov
arpl
jo
adc
pop
dec
stos
and
fs
dec
push
fnsave
out
fwait
ret
loope
jecxz
(bad)
mov
dec
sub
movs
mov
pop
inc
xchg
cmp
inc
jae
jge
fld
xor
int3
mov
rcr
lods
and
dec
aaa
xor
jne
jo
sbb
bnd
js
mov
std
dec
imul
lods
div
(bad)
push
xchg
dec
mov
xor
mov
mov
lods
dec
aas
outs
lods
mov
jmp
and
ins
or
mov
pop
popa
push
imul
inc
cwde
inc
dec
fst
adc
or
scas
pop
and
cmps
sub
jp
outs
loop
cli
pusha
cmp
sbb
sub
(bad)
jp
adc
shr
jmp
aam
adc
fnstenv
fs
mov
out
xor
pusha
jae
push
(bad)
int
ror
mov
push
retf
mov
loopne
dec
(bad)
cmp
call
(bad)
into
jge
inc
cwde
and
(bad)
xchg
int3
enter
mov
fwait
sub
call
xchg
xor
aam
mov
cmc
mov
mov
aaa
inc
idiv
add
stos
shr
imul
cmp
aam
mov
mov
imul
arpl
mov
jmp
xchg
out
stos
xchg
inc
jmp
xchg
mov
call
ret
push
adc
jge
cmp
jge
outs
jmp
jno
out
push
test
mov
scas
stos
pop
stos
cmp
mov
mov
jno
retf
mov
xor
hlt
sbb
dec
jno
push
jle
in
fimul
add
mov
inc
test
lahf
xchg
loopne
cdq
retf
stos
or
aas
push
sbb
sbb
pop
jmp
(bad)
push
bound
fdivr
lea
hlt
das
push
imul
pop
mov
outs
mov
loop
in
pushf
loope
js
pop
or
mov
popf
jo
sub
ret
xchg
aas
fstp
xor
jnp
and
inc
out
jecxz
out
dec
adc
dec
scas
ficomp
fsubr
pop
aad
sbb
daa
pop
test
div
pop
and
sbb
lahf
nop
outs
adc
jmp
cdq
sub
cwde
pop
icebp
mov
fcomp
xchg
or
pop
mov
jl
fbstp
mov
dec
and
out
out
(bad)
aaa
test
dec
add
daa
mov
jno
sub
pop
mov
sub
fnsave
push
jb
test
pop
retf
into
popa
call
rol
xchg
mov
popa
or
xor
test
push
mov
cli
sbb
jne
and
mov
fs
cmp
es
pop
sbb
pop
lods
hlt
or
std
(bad)
cmps
mov
mov
mov
sbb
pop
fs
sbb
cwde
adc
ja
cld
sti
out
or
data16
sub
add
fs
out
es
aas
and
inc
dec
dec
mov
xor
(bad)
cmp
jle
dec
mov
jmp
mov
inc
imul
mov
sahf
pop
mov
inc
push
scas
lds
mov
sub
jg
pop
scas
data16
retf
push
jns
out
fild
xchg
xlat
(bad)
and
shl
ja
mov
call
cmp
cmp
aas
mov
in
mov
repz
das
xchg
mov
cmp
mov
jns
loope
xor
xor
loopne
(bad)
adc
(bad)
inc
add
xchg
out
mov
dec
or
js
adc
add
xor
loop
rcl
sti
xlat
or
or
and
jmp
bound
add
in
imul
in
fs
(bad)
mov
sub
repnz
push
push
sub
cmp
(bad)
fcomip
inc
inc
loop
or
pop
pusha
fcom
popa
or
mov
add
aas
sbb
arpl
scas
adc
xchg
sub
mov
lea
push
aad
fsubr
sar
mov
adc
jno
sub
mov
out
mov
ret
mov
stos
stos
outs
sub
repnz
in
cmovae
mov
xlat
push
dec
adc
jno
out
dec
enter
inc
call
inc
pop
sub
mov
cmc
xor
xor
rol
xchg
pop
pop
xor
arpl
leave
mov
push
dec
(bad)
xor
arpl
out
rcl
cdq
add
pop
cli
out
out
gs
or
xor
pop
lea
aaa
push
sub
mov
scas
nop
xchg
pop
mov
cmp
rcl
mov
pop
(bad)
mov
dec
mov
int
jne
and
jo
retf
hlt
loopne
push
loope
xchg
in
enter
(bad)
cmp
push
shl
mov
fbld
fcomp
fcom
popf
and
xchg
pop
sub
ja
cld
xor
div
sbb
ins
push
push
fistp
jnp
cdq
or
or
dec
xor
push
scas
adc
xor
mov
xor
push
push
add
out
aas
cs
fld
stos
cmp
pop
sub
fst
inc
sbb
mov
cwde
mov
data16
ret
or
movs
jmp
jl
inc
fs
mov
inc
xor
push
cmp
outs
sti
jle
xlat
fbld
jecxz
adc
repnz
aam
loop
pop
fdivr
and
or
and
fadd
rcl
retf
vpcmpeqw
stos
ins
outs
div
dec
in
shr
add
dec
cmp
and
jp
inc
xchg
inc
adc
jae
aaa
mov
pushf
mov
mov
es
aaa
je
call
xchg
inc
iret
stc
mov
xlat
xchg
pop
dec
sbb
pushf
(bad)
fwait
addr16
add
mov
mov
sti
xchg
cmp
(bad)
fisub
nop
stc
out
adc
add
push
cwde
sub
adc
pop
xchg
or
pop
mov
nop
fdiv
pop
dec
repnz
aam
mov
mov
shl
ja
pusha
retf
je
mov
loopne
movs
aad
in
mov
mov
(bad)
cmp
outs
(bad)
pop
and
xchg
or
(bad)
jno
cmp
mov
add
stc
add
sbb
pop
cmp
retf
sti
je
aam
cmp
jecxz
inc
ret
(bad)
adc
jmp
mov
aam
push
stc
jge
in
call
out
jnp
mov
sbb
jo
dec
sbb
adc
test
fwait
mov
sub
fisttp
lds
ins
mov
inc
inc
hlt
rol
or
ret
xchg
inc
xchg
mov
sbb
shr
mov
fxch
mov
lahf
retf
or
inc
daa
xor
sub
mov
pop
je
cmp
ret
jle
xor
mov
addr16
lea
pop
push
scas
inc
push
adc
mov
lea
test
stos
inc
sbb
loop
pop
(bad)
mov
call
imul
add
test
lods
movs
pop
pop
pushf
or
in
push
pop
repnz
out
es
out
sub
xchg
stos
imul
push
outs
sbb
inc
aaa
leave
retf
mov
nop
sub
sar
into
ins
inc
ds
dec
loop
in
push
xchg
sub
sbb
xchg
adc
std
sar
es
pop
ret
cli
popa
mov
mov
out
fidivr
hlt
sub
or
sbb
sbb
jns
neg
(bad)
shr
fimul
xlat
adc
jb
test
ins
outs
test
pop
call
xor
ds
scas
hlt
mov
mov
add
pop
jnp
dec
aam
les
sub
sub
addr16
call
jmp
aas
aas
popf
mov
push
imul
sub
cmp
das
or
add
arpl
mov
push
adc
sti
xlat
adc
add
jnp
lods
fbld
jne
adc
jbe
arpl
and
icebp
test
jae
mov
cmp
scas
jle
mov
pop
pop
mov
(bad)
mov
mov
inc
mov
or
mov
outs
add
dec
data16
mov
xor
add
int3
movs
xlat
or
ds
jbe
aad
xor
sbb
ja
std
jge
pop
pop
dec
inc
inc
aas
inc
and
shr
mov
das
ror
pop
jmp
mov
and
repnz
test
jbe
pop
sbb
mov
jg
sti
mov
adc
pop
adc
hlt
add
in
ins
mul
out
test
fwait
sysret
das
sar
(bad)
fbstp
das
mov
sub
xor
ret
mov
fisub
xor
jmp
test
loopne
(bad)
movs
int
aad
jp
aas
sbb
lods
jne
mov
push
push
(bad)
xor
out
aas
mov
xchg
fild
movs
inc
or
sar
movs
loope
xchg
mov
dec
cli
lea
test
lahf
and
pushf
push
sub
int
(bad)
call
nop
sub
pop
xor
retf
stc
xor
int
xchg
or
ret
push
xlat
mov
icebp
sub
mov
jmp
jae
and
rcr
pop
ins
ror
mov
mov
test
jae
jecxz
mov
fnstsw
push
je
fwait
(bad)
and
inc
loop
or
sub
sbb
pop
popf
xchg
lods
pop
test
and
movs
xchg
add
hlt
add
mov
rcl
je
and
in
enter
cwde
inc
scas
stos
scas
adc
jnp
lods
push
dec
mov
dec
(bad)
cdq
out
lock
aaa
cdq
jmp
lea
outs
inc
jecxz
xor
sahf
ins
jmp
add
xchg
sbb
call
dec
or
je
fisttp
jl
repz
mov
add
mov
aaa
test
scas
rol
add
out
xor
inc
iret
test
pop
addr16
mov
cmp
dec
cmp
call
sbb
push
add
add
cmp
add
cmp
mov
fist
(bad)
or
mov
imul
or
pushf
jbe
mov
add
inc
sti
hlt
int3
shr
push
fmul
clc
push
sbb
xchg
mulps
fidiv
xor
sub
adc
mov
rcl
push
sub
test
std
add
pop
dec
inc
into
xchg
addr16
test
mov
cmp
addr16
adc
les
and
push
ret
sbb
mov
push
and
shl
ins
push
or
mov
lock
add
call
jge
mov
push
ror
jbe
xchg
ds
das
aam
shl
gs
fs
cmp
mov
jecxz
loop
and
jge
push
jo
shl
cdq
fsub
sub
add
cwde
and
pop
test
add
arpl
push
mov
js
mov
mov
jae
sub
add
les
bound
sub
into
into
mov
sub
jmp
mov
or
push
dec
in
inc
jbe
mov
inc
xor
(bad)
out
ins
and
mov
xchg
addr16
cmp
out
bound
pop
jge
cli
pop
and
dec
pop
lahf
lds
dec
rcl
not
dec
fist
mov
in
ret
in
mov
jge
shr
aam
push
inc
jnp
loop
sub
out
arpl
mov
mov
outs
div
dec
cmp
into
and
pop
jns
mov
add
adc
cmp
dec
fisttp
dec
add
dec
xchg
xor
movs
inc
cmps
iret
int
push
inc
call
les
fild
mov
fidivr
mov
cdq
in
mov
xor
xchg
scas
jle
sahf
adc
aas
cmp
aas
popf
bound
inc
fisub
repz
rcl
jmp
sbb
push
push
(bad)
pusha
sub
jge
lods
push
imul
mov
xor
es
ret
mov
and
push
arpl
inc
or
jle
es
push
jmp
add
mov
mov
lock
jo
xor
adc
les
mov
aaa
mov
add
xchg
imul
add
jae
pop
sbb
pusha
and
sub
inc
push
cmc
ret
ds
test
pop
adc
mov
sub
icebp
adc
clc
loop
add
mov
je
mov
ja
sub
xor
fst
ss
or
(bad)
cmp
call
mov
lahf
(bad)
(bad)
fdiv
inc
mov
clc
and
dec
sbb
or
xchg
mov
inc
jbe
jp
dec
jle
sub
scas
mov
mov
inc
cwde
iret
sbb
xchg
out
dec
das
sbb
rcr
imul
ins
mov
iret
gs
pusha
les
push
imul
xchg
or
cmp
arpl
cld
(bad)
int
mov
scas
rcr
fadd
in
js
push
mov
mov
hlt
stc
cld
and
xor
jecxz
lods
test
in
jbe
jl
pop
imul
jb
xor
pop
test
ss
sbb
xchg
popf
dec
clc
jmp
xlat
data16
(bad)
mov
and
jle
scas
add
fdiv
scas
loop
jp
fcom
dec
jne
dec
jl
push
mov
and
les
sub
mov
adc
rcl
scas
add
push
arpl
xchg
ja
mov
dec
lods
(bad)
je
add
dec
retw
push
inc
lds
es
dec
addr16
jl
fwait
std
ret
mov
push
je
mov
or
jnp
lds
dec
nop
inc
dec
inc
pop
outs
sbb
xor
xor
je
mov
jge
lahf
imul
push
(bad)
cs
enter
or
mov
pop
xor
lock
daa
jl
test
xchg
icebp
rol
repz
call
add
and
ror
fchs
or
nop
outs
xor
iret
cli
jnp
loopne
add
and
mov
inc
shr
jp
dec
mov
fild
scas
icebp
dec
ins
es
aam
loop
(bad)
cld
jns
mov
xor
ins
imul
cmp
test
test
cmp
sbb
ja
or
fcom
inc
repnz
out
add
add
ror
pop
neg
test
sbb
imul
mov
sbb
fcos
pop
jmp
xchg
mov
jmp
cmp
jl
mov
mov
xchg
jge
sub
jmp
ins
cmps
pop
pushf
jmp
or
hlt
test
addr16
push
pop
push
fld
push
mov
mov
loopne
inc
repz
fwait
stc
add
ret
and
jmp
sar
and
dec
sbb
jp
outs
gs
lea
fwait
pop
call
rcl
mov
pop
add
jecxz
arpl
inc
std
outs
xchg
cmp
sbb
retf
mov
lock
xchg
rol
mov
test
and
imul
or
je
xchg
inc
rcr
jae
pop
add
call
bound
iret
pop
inc
movs
push
sub
and
cmp
sbb
(bad)
(bad)
fucomp
inc
lea
cli
cld
cmps
loopne
sar
loopne
push
shl
pusha
out
mov
stos
xor
cmp
jecxz
in
(bad)
in
fwait
pop
xchg
xor
push
jns
and
in
push
out
sbb
jbe
(bad)
cmp
dec
les
sbb
(bad)
shl
mov
lods
test
jl
sub
bound
repnz
arpl
xchg
fstp
push
movs
and
rol
fstp
adc
jmp
xor
jmp
int
stos
pop
jae
adc
inc
adc
rcl
mov
aad
test
test
aam
jbe
inc
sub
in
test
pop
push
fdivr
loop
mov
fsubr
add
sub
ins
repnz
add
pop
aas
inc
sub
aam
test
movs
sbb
scas
push
mov
fldcw
iret
sbb
hlt
push
shr
fnstcw
enter
(bad)
setnp
int
pop
mov
lock
mov
push
mov
inc
jmp
adc
push
cmp
hlt
shr
pop
fsub
xchg
test
std
dec
push
inc
mov
lock
sbb
jno
or
aas
jmp
out
out
shl
jmp
test
loop
jecxz
jnp
jl
aam
call
(bad)
cmp
clc
aam
cmp
daa
sub
rcl
iret
(bad)
cmps
inc
adc
repnz
stos
ret
outs
push
aas
sahf
adc
push
or
mov
xchg
add
add
xor
lahf
pop
mov
adc
inc
retf
sub
and
je
jecxz
jno
inc
fldcw
and
xor
sti
jle
das
popf
sub
push
cpuid
push
adc
inc
pop
xor
adc
sbb
pop
mov
retf
movs
dec
xchg
lods
dec
(bad)
fisub
mov
mov
mov
cmp
fnstcw
mov
icebp
test
adc
or
mov
push
push
xchg
pop
sub
dec
scas
aad
(bad)
xor
fiadd
inc
xacquire
xor
push
dec
pop
jp
xor
xchg
push
xchg
into
and
sbb
movs
arpl
outs
or
mov
dec
add
sbb
or
and
jmp
mov
cmp
out
sbb
add
sahf
pcmpgtb
ja
int
call
sbb
mov
inc
pop
out
pop
je
push
and
mov
push
int3
jl
ins
sub
cdq
fdivr
jns
push
xchg
cmp
stos
push
push
sar
test
xchg
push
scas
ins
jnp
(bad)
xchg
es
sub
leave
out
push
pop
les
or
mov
adc
xor
sahf
add
push
inc
push
jecxz
lods
cmps
ja
mov
ret
not
mov
xlat
cmp
ja
mov
sbb
jne
pop
lock
jmp
es
dec
add
cmp
jmp
push
mov
adc
cmp
xchg
call
stos
aam
stos
cmps
pop
retf
add
les
int3
xchg
cmp
and
je
mov
push
je
mov
loopne
mov
jno
jo
bound
scas
add
cmc
mov
xor
sbb
stos
add
sbb
jns
cld
and
cmp
js
pop
popa
inc
test
jp
retf
mov
stc
mov
cmps
adc
xor
pop
ret
shl
mov
mov
adc
and
mov
jl
cmc
mov
test
clc
mov
add
cdq
mov
mov
movs
shl
std
lahf
pop
pop
jne
pushf
int
or
clc
lahf
adc
mov
retf
scas
mov
idiv
pop
les
(bad)
call
mov
pop
mov
mov
(bad)
cld
int
lods
pop
adc
jno
in
test
ins
and
loope
add
inc
stos
bound
pop
adc
xor
cmps
lea
cmp
lods
dec
nop
hlt
cmp
xchg
jae
arpl
add
stos
aam
fwait
aam
je
stos
jo
ds
inc
mov
movs
neg
fiadd
aad
lods
mov
into
dec
stos
int3
mov
retf
(bad)
test
out
xor
clc
test
dec
cmp
aam
mov
adc
push
mov
(bad)
cmp
pop
sbb
mov
test
imul
adc
mov
mov
rcr
inc
push
push
and
ss
dec
imul
push
mov
xor
clc
lods
adc
xchg
push
mov
push
adc
test
add
or
bound
popf
int
shl
loop
out
das
cmps
mov
sub
or
pop
bound
mov
in
(bad)
mov
dec
outs
cmp
mov
call
sar
sub
xor
sbb
cmp
or
pop
out
cwde
cmp
in
(bad)
rcl
adc
cld
mov
mov
add
push
repz
pop
rcr
push
push
call
push
iret
into
ficomp
inc
ja
fndisi(8087
not
cmps
dec
mov
retf
call
push
add
test
mov
jle
jno
and
push
xchg
and
out
ficomp
jnp
mov
pop
rcr
test
push
push
bound
ins
fld
add
test
add
mov
out
lods
imul
jl
xchg
retf
push
or
fsubr
jmp
add
or
and
adc
adc
std
cmps
test
sti
test
or
adc
scas
pop
or
aad
and
fistp
add
sbb
out
pop
test
out
xchg
push
dec
rcl
dec
inc
mov
dec
cld
aad
push
icebp
mov
xchg
je
push
sti
fcmove
adc
lahf
jmp
ds
fild
ret
fisub
dec
vminsd
jnp
fild
daa
enter
lds
test
test
jmp
das
sub
xor
enter
inc
pop
push
fidivr
out
push
dec
push
mov
sbb
pop
adc
repz
cmc
es
mov
sahf
nop
jp
jge
push
push
jle
pop
les
add
mov
xchg
dec
pop
cmp
ret
ret
es
shr
mov
pop
(bad)
stos
push
add
je
mov
push
adc
cmc
(bad)
dec
xchg
shl
and
adc
sbb
fucomip
stos
push
pop
sbb
aam
mov
aam
outs
jns
xor
pop
xor
hlt
idiv
push
hlt
jbe
inc
aas
xor
ins
adc
(bad)
push
adc
push
retf
mov
push
inc
dec
mov
or
mov
pop
mov
(bad)
mov
in
xchg
push
mov
cmp
xchg
rcr
ja
push
and
cdq
dec
jp
loopne
add
xor
push
mov
dec
jecxz
rcl
jne
fiadd
mov
clc
call
inc
data16
push
scas
sbb
dec
ret
cmp
ret
sti
add
retf
sub
repz
xor
adc
push
mov
pop
cmp
dec
retf
repnz
dec
fld
xor
cmp
add
jne
scas
cs
call
lds
(bad)
punpckhwd
push
mov
(bad)
int
lock
jecxz
dec
jp
outs
movs
mul
jg
xchg
sub
xor
ss
add
cdq
or
jl
jecxz
ins
or
ds
outs
adc
lea
call
mov
leave
mov
jo
pop
xor
jbe
loopne
pop
test
dec
sbb
fbld
mov
inc
mov
pop
pop
and
xor
push
into
lods
push
or
aaa
sar
dec
popf
mov
mov
retf
pop
sbb
in
jnp
fmulp
cmp
add
out
sbb
and
(bad)
cmp
pop
adc
push
sub
jo
or
and
fiadd
cdq
mov
std
cmp
leave
movs
xchg
or
xchg
mov
push
inc
jns
mov
cmc
push
push
stos
gs
xor
mov
xchg
cwde
dec
xchg
cmp
outs
les
dec
retf
adc
shl
int3
push
loope
ret
pop
adc
loope
ret
pop
aaa
and
loopne
sbb
xchg
and
xchg
ins
nop
ss
dec
fisub
mov
loop
jmp
pop
ins
mov
sbb
xor
mov
mov
and
mov
cmp
(bad)
or
dec
push
xor
out
repz
dec
jnp
xchg
iret
aam
call
fsub
xrstor
cdq
xor
les
push
sbb
adc
inc
pusha
out
jo
test
dec
adc
add
daa
cmp
or
ficomp
xchg
inc
fnsave
pop
test
popf
xor
sub
pop
cs
outs
test
imul
lahf
aad
mov
fsubr
(bad)
dec
fst
dec
jle
ds
or
push
scas
inc
test
gs
jnp
add
cmp
push
xor
in
(bad)
fidivr
pop
(bad)
jnp
xchg
push
aas
outs
jmp
fs
shl
sub
and
bswap
fsubr
jmp
jbe
loope
jl
ret
das
inc
data16
pop
js
add
mov
test
fucom
std
pop
xor
daa
je
xor
test
dec
pusha
jne
jb
(bad)
rol
mov
cmp
cmps
fist
adc
xchg
shl
inc
ins
out
fisttp
xor
mov
ja
mov
xor
mov
in
add
(bad)
jl
std
or
cmp
inc
in
std
cmps
push
xchg
lock
jmp
mov
dec
xchg
call
push
mov
lea
dec
xchg
icebp
or
xchg
pusha
or
sbb
popa
rcr
icebp
add
and
cmp
stc
gs
lock
push
fldcw
jmp
popa
xchg
dec
mov
mov
clc
clc
sbb
test
ja
inc
jbe
jno
or
(bad)
cmp
repz
add
sub
sub
fcomp
loopne
xchg
loopne
cdq
inc
pop
pop
repnz
fs
ret
inc
clc
retf
mov
add
add
fnstcw
xchg
mov
push
sahf
stos
sar
shl
clc
xchg
push
cmc
cmp
mov
test
es
imul
xor
out
sbb
data16
fild
adc
out
mov
mov
inc
adc
aam
inc
imul
mov
scas
or
mov
cmp
das
sbb
or
sahf
cmc
(bad)
bound
pop
and
outs
push
inc
jmp
ss
mov
test
out
xchg
scas
(bad)
je
push
cmp
movs
icebp
mov
inc
jmp
jb
dec
inc
addr16
popa
sub
rcr
jecxz
nop
pop
pushf
pop
push
add
ss
jb
jno
retf
ins
jmp
pop
xchg
js
pushf
(bad)
sahf
test
ja
adc
xor
dec
push
inc
mov
sti
push
adc
dec
fimul
ret
sub
clc
mov
rcl
inc
jno
and
inc
int3
jp
jbe
or
aaa
mov
mov
stos
test
sbb
sub
xchg
inc
pop
sti
adc
inc
dec
iret
inc
movs
and
mov
test
pop
ret
loopne
mov
cli
retf
test
cmp
fcmovnbe
pop
adc
push
mov
mov
bswap
mov
rol
sahf
mov
ror
clc
in
ret
pop
ss
fwait
mov
movs
xchg
fild
sub
into
pop
idiv
fild
sbb
mov
cmp
adc
aaa
loop
test
gs
dec
ds
jl
call
xor
mov
clc
ds
iret
jnp
cmps
lahf
jecxz
add
movs
lods
jmp
xchg
pop
test
mov
bound
push
shr
(bad)
aas
sub
xchg
fnstsw
test
cdq
push
lahf
fnstsw
fadd
and
sbb
sub
or
mov
fwait
xchg
sub
cmp
mov
daa
adc
test
stos
add
loop
sub
std
mov
jge
or
dec
lea
pop
js
and
add
dec
dec
jle
movs
adc
arpl
scas
aad
in
add
cmp
xchg
pop
ss
(bad)
mov
into
bound
mov
neg
pop
mov
mov
jmp
xor
es
sub
add
mov
adc
dec
sbb
and
scas
enter
sub
lds
call
aas
and
es
xor
mov
pop
jp
imul
outs
and
hlt
jns
gs
mov
pop
mov
fild
sbb
mov
jae
sti
mov
imul
or
(bad)
inc
test
mov
mov
xchg
pop
stc
mov
push
inc
sub
icebp
int
push
mov
dec
fcompp
pop
(bad)
hlt
cmp
pop
sbb
mov
movs
cmp
aaa
jne
test
fwait
sbb
movs
fdiv
cmp
or
retf
dec
lea
mov
out
sub
sub
call
lahf
lods
sbb
adc
pop
xor
pop
jge
push
xchg
jo
mov
add
cmps
inc
pop
ds
cmp
xlat
in
mov
mov
and
mov
mov
jo
cmp
push
push
repnz
cmp
ss
aaa
mov
jge
or
and
push
xchg
cmp
pusha
jbe
in
dec
movs
inc
mov
rcr
xchg
sub
and
scas
dec
pop
stos
cmp
push
out
test
(bad)
xlat
sub
mov
(bad)
mov
push
push
lock
adc
or
add
push
imul
add
sub
xor
(bad)
and
push
and
cli
inc
ins
aad
jg
inc
sar
push
js
add
call
(bad)
jno
scas
pusha
jmp
(bad)
jle
inc
mov
cmp
fisub
nop
and
jge
pop
ins
fldcw
das
mov
retf
iret
ret
cmp
jl
and
leave
out
dec
add
repz
dec
cwde
repnz
in
into
adc
push
xchg
and
mov
stc
push
retf
mov
push
je
imul
xor
mov
fnstsw
adc
iret
call
jbe
aad
repz
loopne
(bad)
(bad)
mov
cwde
int
push
test
test
mov
push
jbe
popf
xchg
sub
clc
cmc
add
loope
jo
adc
mov
and
ret
fisub
ins
rol
loopne
jne
movs
mov
movs
ror
add
and
mov
int
arpl
outs
jns
sub
fdivrp
push
add
pop
adc
adc
dec
out
pop
and
jge
sub
int
xchg
xchg
adc
fwait
mov
movs
adc
ret
jle
sti
cmp
push
(bad)
sti
outs
cmc
xor
jns
mov
or
xchg
or
dec
mov
(bad)
clc
(bad)
adc
mov
ja
movs
loope
push
rcr
aam
dec
cmp
loop
jns
push
mov
dec
addr16
bound
pop
retf
out
add
aas
rcl
mov
ins
fcomp
adc
loope
add
pop
cmps
xor
popf
adc
inc
inc
push
lods
test
xchg
mov
inc
xchg
mov
sub
aad
mov
adc
(bad)
jle
mov
push
aam
push
lods
mov
cmp
inc
push
popf
mov
sbb
jecxz
lss
nop
push
ja
add
dec
std
push
mov
pop
pcmpgtd
push
push
into
dec
sahf
jmp
jnp
pop
sub
outs
xchg
rol
push
cmp
fnstsw
pop
fdivr
pop
in
jo
jb
ja
jle
fidivr
jl
or
sub
arpl
aam
movs
pop
push
mov
cs
inc
ins
xor
(bad)
push
fiadd
fidivr
xor
adc
pop
sbb
(bad)
popf
shl
clc
sbb
pop
dec
xor
pop
data16
pop
dec
adc
push
enter
xchg
lds
pop
xchg
jae
cld
mov
loopne
pop
popf
scas
sbb
push
pop
xchg
sbb
lds
sub
inc
out
test
loop
popa
sub
jmp
cmc
jo
and
fiadd
mov
js
mov
outs
aam
aad
pop
sbb
inc
ins
mov
hlt
aaa
out
adc
dec
push
(bad)
test
lods
retf
fild
mov
or
xchg
ds
gs
in
cmp
out
xchg
or
test
fdiv
xchg
(bad)
int
inc
push
mov
pop
stos
rcr
rcl
pop
in
sub
outs
mov
call
jno
push
dec
xor
mov
push
or
enter
sub
fs
in
lock
mov
jmp
std
fld
jb
maxps
cdq
xor
xchg
int
jp
inc
xchg
dec
sbb
lods
push
loop
jbe
loopne
cmp
fld
adc
btc
cmp
int
inc
sbb
and
icebp
fstp
stos
adc
dec
push
lea
inc
mov
sub
mov
dec
inc
jecxz
stos
mov
stc
(bad)
dec
hlt
xchg
call
ret
call
out
adc
lock
jbe
dec
mov
pop
and
enter
cmp
mov
push
daa
mov
fisttp
scas
push
add
imul
movs
cmc
in
xchg
jp
fldenv
mov
pop
xor
out
mov
push
pop
cmps
cmp
test
adc
mov
xlat
cmp
and
es
test
(bad)
js
mov
cmc
mov
xchg
xchg
push
icebp
loopne
add
mov
out
xchg
dec
movs
add
hlt
scas
out
lds
push
daa
jmp
in
clc
mov
ja
and
inc
lods
mov
xor
adc
out
inc
ja
push
inc
(bad)
sbb
dec
pop
pop
adc
add
adc
adc
adc
in
or
xor
jns
jp
fidiv
rcr
pop
dec
push
in
sub
(bad)
pusha
xchg
mov
sub
pop
ror
cmp
ret
push
in
or
jb
repz
psllw
adc
arpl
xor
sahf
cwde
or
nop
pop
push
out
test
push
retf
xchg
xor
adc
pop
cmps
jp
lods
repz
sub
pop
scas
mov
push
or
or
into
dec
outs
outs
ins
mov
not
push
cmps
fisub
push
pop
cld
cs
dec
loope
mov
pop
pusha
(bad)
push
sub
ins
pop
fmul
stc
add
jg
ss
rol
mov
mov
(bad)
mov
pop
xchg
(bad)
movs
push
jo
(bad)
les
sub
movs
inc
std
sbb
jnp
or
inc
or
sbb
ins
les
or
(bad)
ror
jns
ss
push
xlat
fdivr
jge
enter
jmp
adc
sahf
aaa
pop
std
iret
inc
ret
push
shr
cmp
add
push
push
push
data16
mov
popa
imul
mov
push
loope
lods
sub
shr
cli
(bad)
aaa
lahf
mov
test
and
jnp
adc
sub
sti
pop
js
pushf
and
call
mov
mov
js
mov
dec
scas
mov
lods
das
cmp
dec
xchg
pushf
cmp
shl
stos
rol
cmps
shr
add
jg
mov
into
arpl
pop
dec
xchg
test
out
inc
(bad)
hlt
and
arpl
cli
pop
cmp
std
mov
pop
push
stos
repnz
cmps
xchg
push
xchg
xor
or
ins
and
xchg
inc
shr
jecxz
jmp
outs
push
xor
xchg
mov
mov
push
repnz
mov
push
xchg
imul
icebp
cs
pop
dec
lods
sbb
mov
cld
scas
ins
std
sub
in
adc
xchg
aam
mov
lods
daa
into
int3
dec
adc
daa
dec
jno
or
jmp
add
dec
(bad)
jns
imul
in
mov
mov
jl
push
mov
lods
pop
dec
mov
fsub
inc
mov
lods
sbb
into
xchg
add
cmp
jno
push
(bad)
push
mov
pop
cmp
dec
sbb
add
out
cld
(bad)
scas
pop
sbb
out
mov
xchg
and
(bad)
jle
ins
add
sbb
loop
and
jl
nop
xchg
xchg
push
hlt
jp
push
sub
not
into
movs
jmp
inc
je
retf
jae
pop
xor
sbb
cmp
test
mov
push
cmp
jmp
cli
jecxz
and
cmps
ror
pop
jno
repnz
ins
inc
sub
fcomp
mov
pop
and
les
mov
mov
enter
sub
mov
out
and
(bad)
push
jmp
xchg
inc
mov
mov
dec
addr16
push
push
mov
pop
add
jo
push
aas
or
jg
out
inc
es
repz
test
js
push
lods
test
fld
pop
shl
popf
cmps
or
scas
ins
jo
inc
push
cdq
mov
repnz
mov
pop
shl
adc
in
xchg
and
adc
and
cmp
cmp
and
mov
loope
cmp
adc
imul
cmp
(bad)
sbb
inc
ret
jle
or
fdivr
retf
dec
inc
cmp
push
(bad)
cmp
dec
inc
retfw
mov
push
push
or
(bad)
aam
(bad)
and
fcmove
pop
inc
mov
add
not
pop
arpl
test
adc
sub
xchg
xor
and
push
call
add
mov
mov
add
retf
push
cdq
in
xor
add
jge
fnstcw
xlat
addr16
outs
and
xchg
mov
cmp
out
loop
sahf
cmp
sub
ror
mov
xchg
pop
jmp
int
or
sbb
inc
into
clc
jno
inc
call
add
and
xchg
outs
inc
push
(bad)
loope
std
aas
push
arpl
cmp
loop
jg
xchg
cmp
es
and
outs
jg
xchg
lds
test
or
and
test
or
mov
pop
xchg
ins
mov
xor
mov
xor
cwde
pop
or
and
(bad)
and
mov
push
mov
mov
sbb
mov
movs
inc
fwait
pop
pop
(bad)
and
jbe
rcr
lahf
dec
shl
fucomi
call
sbb
sub
in
push
repnz
add
mov
push
adc
mov
adc
out
or
ss
in
popa
inc
dec
and
nop
daa
cmp
in
ds
pop
pop
and
jb
mov
jle
pop
dec
stc
jne
cmp
ret
dec
fisubr
mov
mov
sbb
repz
mov
fadd
clc
shl
cmp
push
nop
push
fcmovu
jno
out
call
pop
pop
xor
cmps
movs
dec
xchg
repnz
dec
jmp
add
and
jae
jo
repz
dec
mov
xchg
fistp
pop
pop
call
mov
adc
mov
push
sbb
mov
popa
dec
cmc
cli
call
(bad)
inc
or
sbb
ret
fbld
popf
out
adc
mov
push
call
stos
(bad)
outs
sbb
fld
pop
add
sub
nop
mov
push
xchg
jne
ror
mov
adc
pop
jmp
dec
sub
icebp
xchg
jmp
sbb
movs
outs
mov
das
sar
cmp
daa
addr16
fidivr
inc
cmps
xchg
mov
cmps
inc
push
(bad)
push
mov
int
daa
lods
sahf
mov
sub
jmp
int
adc
xchg
sub
xchg
imul
pop
xlat
nop
lods
fistp
xchg
in
mov
jb
or
adc
std
out
push
hlt
es
ret
adc
mov
mov
mul
mov
pop
mov
test
push
ficom
and
iret
mov
mov
out
aam
add
mov
ficomp
or
xlat
shr
fwait
pusha
sbb
inc
clc
xor
movs
jmp
jge
sub
out
lods
xchg
pcmpgtd
dec
ret
and
sub
pop
sub
cmps
les
rcl
push
jmp
dec
addr16
mov
mov
(bad)
into
mov
stos
out
out
stos
cmp
lea
repz
(bad)
and
adc
sahf
mov
push
cmps
das
pusha
std
mov
adc
mov
sub
mov
mov
mov
js
push
fsubr
ss
sub
mov
mov
loope
shr
xchg
lea
fisub
ror
aas
push
xor
shl
je
dec
xor
inc
xchg
push
jmp
imul
hlt
and
sub
jp
sbb
fwait
in
or
dec
fs
pop
(bad)
es
mov
inc
mov
inc
cmp
cmc
aas
push
cdq
pop
jmp
out
mov
pusha
xor
mov
fisttp
xor
iret
sub
and
fs
popa
pop
(bad)
mov
push
and
sbb
in
mov
stos
bound
or
adc
cwde
mov
sub
es
sbb
xchg
cmp
pop
xor
add
inc
mov
push
mov
pop
or
movs
(bad)
movs
push
in
add
fst
fwait
lea
aaa
enter
cli
mov
cwde
ret
rcl
sbb
mov
movs
inc
inc
enter
ss
inc
jge
sbb
popa
fs
push
cmp
dec
add
int3
sahf
xor
cld
sub
xchg
in
xlat
add
addr16
xchg
int
retf
add
stc
adc
not
jle
dec
sub
bound
sub
add
add
loopne
mov
test
adc
(bad)
mov
popf
jle
gs
xor
bound
jecxz
adc
xchg
dec
cmp
aaa
in
sbb
movs
fild
in
and
dec
sbb
test
inc
cmp
mov
sbb
sub
and
inc
gs
sbb
lods
test
popf
shl
es
cmp
pop
gs
push
cmp
adc
or
or
fnstenv
lds
pushf
pop
mov
push
inc
loop
inc
test
mov
inc
je
or
test
xchg
bound
fs
sahf
sub
movs
pop
(bad)
leave
retf
mov
push
pusha
mov
mov
in
iret
adc
sbb
(bad)
mov
jo
mov
lea
push
dec
adc
cmps
stc
mov
xchg
jg
mov
shl
inc
pop
imul
not
jns
mov
mov
and
clc
sbb
sub
xchg
xchg
mov
sbb
adc
ror
cli
fmul
mov
(bad)
add
das
cs
pop
or
xor
adc
cmps
pop
cdq
fld
xchg
in
jl
imul
in
cli
cmp
shr
repz
add
dec
daa
sub
cwde
pop
in
mov
mov
pop
sbb
dec
mov
cmp
sbb
stos
jp
and
std
adc
xlat
jb
sub
addr16
arpl
inc
sbb
or
outs
xor
call
stos
dec
jp
les
dec
cmp
jle
aas
inc
rcr
sub
sbb
hlt
jecxz
and
push
retf
mov
in
push
(bad)
pop
inc
push
hlt
cdq
sar
imul
cmc
imul
movs
ins
rcl
ret
loope
loopne
jmp
pop
mov
pop
xor
adc
mov
sub
adc
adc
xchg
in
push
inc
imul
push
mov
inc
je
fst
pop
not
mov
data16
cwde
jns
dec
ret
stos
fsub
shl
push
mov
fadd
xchg
out
outs
pusha
sub
xchg
cmp
lea
jp
xor
std
fisubr
aas
es
and
mov
lods
add
and
sub
cmp
xlat
scas
and
mov
cmp
shr
push
mov
jno
daa
jp
lock
int3
je
cwde
xlat
aaa
mov
adc
pop
jmp
and
out
or
daa
fisttp
enter
(bad)
xchg
pusha
aaa
cmp
rol
clc
jle
fdiv
and
push
loop
xchg
xor
push
loope
pushf
push
daa
mov
repz
(bad)
adc
fwait
ds
push
push
adc
rcr
in
mov
xchg
inc
jecxz
ins
ins
clc
movs
inc
popa
jne
mov
xor
in
push
mov
inc
(bad)
and
sub
fst
inc
js
out
cmp
mov
inc
inc
pop
sub
sub
mov
out
fbstp
fwait
cmp
cmc
ret
xor
push
jmp
xor
mov
jecxz
xchg
retf
lods
jne
pop
cmp
in
add
rcl
icebp
dec
push
lds
mov
mov
mov
push
cdq
push
icebp
push
retf
add
pop
push
enter
mov
mov
add
cmc
dec
adc
push
pop
adc
adc
and
sbb
mov
cmp
cmp
test
sub
pop
xchg
fs
ins
xchg
nop
jmp
sbb
in
ja
xlat
dec
iret
in
xchg
(bad)
mov
out
cmps
hlt
popa
pop
fwait
xchg
nop
hlt
(bad)
aas
dec
or
mov
dec
xchg
lds
dec
test
test
inc
loopne
mov
xchg
cmp
jo
leave
sbb
and
xchg
pop
fistp
push
call
adc
jcxz
and
inc
adc
push
mov
sbb
mov
push
retf
xchg
shl
imul
dec
pop
jmp
loop
mov
lahf
stos
xchg
mov
aad
jbe
jne
adc
cmp
jge
mov
(bad)
push
mov
lds
stos
rcl
mov
stc
es
fcmovb
popa
xlat
repz
nop
sbb
pushf
shl
jg
pop
imul
add
(bad)
pop
or
das
fdiv
add
mov
and
sbb
(bad)
and
es
daa
(bad)
fld
mov
push
dec
xchg
jg
add
cld
loope
ss
jns
adc
mov
lock
div
push
rol
dec
push
test
imul
sub
pop
dec
jecxz
mov
data16
mov
cwde
(bad)
int3
jno
cmp
jb
dec
push
std
ja
inc
out
mov
jno
div
dec
dec
cdq
sub
mov
cmp
cmp
stc
and
push
pop
add
jno
push
stc
imul
dec
mov
push
cmp
add
cmc
aam
pusha
pop
inc
jge
fdiv
push
jecxz
jmp
push
mov
mov
icebp
adc
sub
xor
push
cmp
adc
xor
retf
shl
push
icebp
mov
or
arpl
iret
cmp
hlt
push
popa
mov
scas
push
jmp
lds
sti
jmp
out
push
fucom
or
or
xor
xor
mov
fstp
popa
mov
popf
ss
or
ja
push
jl
pop
mov
outs
xor
stos
repnz
fdiv
push
xchg
sbb
pop
mov
icebp
inc
cmc
jbe
call
pop
ror
out
jg
(bad)
mov
les
add
jecxz
xlat
dec
push
sub
jo
ds
sbb
aam
xor
shl
push
inc
in
xchg
je
(bad)
fsub
mov
pop
or
push
(bad)
xchg
sub
ret
outs
outs
or
sub
sub
jno
ficomp
pop
xchg
outs
cmp
mov
jmp
lock
mov
aam
loop
cmp
cmc
scas
pop
jb
mov
aas
sbb
adc
nop
and
inc
je
fwait
arpl
sti
or
adc
retf
sbb
cld
popfw
ja
lock
push
leave
fs
aam
cdq
shl
and
fldcw
cli
les
inc
inc
mov
call
outs
jp
outs
or
mov
test
mov
inc
(bad)
ret
and
iret
cmp
in
push
loope
inc
data16
rcl
sbb
in
stos
cmp
push
inc
in
loopne
jnp
cdq
or
mov
ret
clc
(bad)
pusha
jns
sti
inc
mov
ss
jo
pop
sahf
xor
mov
and
imul
aam
jbe
inc
mov
(bad)
fadd
jae
sub
xchg
addr16
lds
cmp
pop
add
sub
in
dec
mov
and
imul
inc
ret
sub
(bad)
cli
mov
aaa
mov
jmp
cmp
mov
test
cdq
push
loope
(bad)
xchg
aas
mov
pop
fwait
js
push
test
jle
xchg
js
xor
out
pop
push
inc
aad
cmps
dec
loop
add
sbb
setp
call
mov
jmp
fwait
sbb
xor
cmp
call
aad
inc
inc
mov
xchg
jo
jg
dec
mov
test
dec
pop
sbb
push
fst
and
push
adc
mov
cmp
enter
test
cmps
cmc
jmp
je
int3
popf
movs
loopne
cs
mov
mov
mov
aaa
push
dec
push
stos
test
(bad)
out
push
in
xchg
jmp
sbb
sbb
adc
imul
and
sti
aas
mov
pop
and
shl
cmp
pop
enter
adc
mov
imul
(bad)
leave
xor
mov
jo
pop
sahf
pusha
jne
loopne
inc
jb
ss
jle
(bad)
mov
xchg
sbb
adc
or
mov
xor
xchg
cwde
pop
sbb
xor
call
arpl
xor
icebp
xchg
scas
into
jns
sub
sub
sbb
pop
arpl
cld
add
cmp
lahf
data16
sar
fisub
into
pop
push
shr
rcl
inc
hlt
js
daa
push
movs
xor
or
test
les
mov
imul
xor
xchg
aad
lods
xor
adc
mov
add
xchg
push
dec
push
stos
mov
mov
sbb
rcl
xchg
push
dec
out
dec
shl
loop
xlat
xchg
mov
mov
inc
xchg
or
push
mov
cwde
mov
dec
bound
fsub
test
xor
push
ins
mov
js
inc
dec
ins
icebp
sbb
inc
stos
sbb
test
dec
xchg
ins
jmp
and
into
adc
ins
sub
in
dec
mov
ins
cmp
loop
mov
sbb
sete
adc
dec
push
add
loop
out
(bad)
rol
jns
dec
retf
test
outs
sub
and
cmp
inc
sub
lods
cmps
out
pop
sar
sahf
push
mov
jne
ins
pop
repz
rcr
inc
or
cmp
pop
add
out
(bad)
dec
ds
xor
push
push
ret
ret
xchg
repnz
aam
pop
aad
inc
jg
lahf
outs
es
fwait
retf
movs
gs
leave
jge
cmp
or
adc
pop
dec
sti
scas
cmp
sbb
add
(bad)
pop
test
call
icebp
pop
repz
sti
stc
cmp
stos
or
mov
cdq
jno
cmp
stc
gs
ins
mov
and
ins
sub
push
sub
xor
call
mov
or
call
addr16
aam
pop
push
mov
and
xchg
fld
pusha
add
int3
pop
push
(bad)
jne
into
jmp
fs
mov
jb
lock
icebp
mov
dec
scas
xlat
sbb
fsubr
push
daa
dec
aaa
pop
jmp
inc
fidivr
in
mov
mov
adc
pop
push
test
shl
push
add
inc
shl
ds
xor
test
inc
and
sbb
lods
push
dec
out
inc
pop
(bad)
jg
aaa
fcos
arpl
xchg
mov
popf
mov
xchg
pop
mov
push
fisubr
mov
in
xchg
inc
dec
xchg
in
mov
pop
dec
cmp
ret
push
pop
int
dec
pop
xchg
das
mov
xchg
ja
pop
add
adc
push
adc
jp
les
out
push
leave
cmp
(bad)
into
je
dec
sbb
pop
ds
movs
cs
(bad)
aas
ror
sub
repz
mov
jns
or
retf
in
(bad)
imul
clc
retf
add
aas
mov
sub
xchg
xchg
dec
adc
mov
xlat
or
mov
sub
sub
or
and
jg
xchg
push
cmps
jle
or
inc
mov
adc
sbb
(bad)
test
and
mov
mov
hlt
push
mul
mov
jae
xchg
shrd
bound
sub
dec
push
int3
in
cmp
cmps
push
jmp
in
dec
bound
dec
imul
ds
jg
mov
jl
cld
mov
ins
push
mov
sub
hlt
lea
scas
sti
ret
ins
sbb
mov
mov
je
sbb
push
aaa
jle
aaa
rcl
in
mov
shl
int
stos
and
cmps
mov
ins
add
push
cs
stos
call
neg
fistp
sbb
and
cmp
iret
outs
push
inc
xor
xor
mul
sub
push
lahf
cmp
or
sbb
add
aaa
inc
xor
outs
mov
shl
movsx
push
leave
adc
mov
mov
enter
pop
xchg
and
sahf
ficomp
jmp
lahf
movs
cmp
mov
adc
dec
pop
and
push
mov
and
and
add
aad
pop
mov
mov
or
add
je
and
fimul
mov
fbstp
(bad)
or
cli
xchg
sbb
sub
mov
loop
cmp
mov
mov
enter
dec
xchg
jo
ret
adc
pop
xchg
fsubr
jne
stos
mov
fs
inc
inc
push
ss
aaa
adc
xchg
mov
clc
adc
or
xlat
sub
jp
imul
fs
adc
mov
and
add
inc
mov
iret
shr
scas
repz
ror
fcmovne
jnp
sub
mov
enter
test
sbb
pusha
dec
mov
addr16
inc
fidivr
xor
adc
imul
inc
out
mov
dec
lock
fimul
or
sbb
mov
mov
push
stos
retf
mov
sbb
mov
(bad)
adc
mov
jb
scas
mov
jle
movs
lods
or
add
inc
cmps
in
ins
lahf
xchg
movs
mov
sub
(bad)
mov
cmps
mov
ror
fistp
jo
aas
xor
enter
js
jmp
clc
lods
arpl
lock
enter
jl
fnstcw
mov
inc
aad
pop
int3
sub
jp
ds
cmc
mov
popf
int
test
mov
xor
loop
jl
add
sar
xchg
inc
inc
inc
mov
(bad)
mov
stc
pop
mov
jnp
add
(bad)
push
out
mov
jbe
int3
jmp
in
sbb
and
(bad)
push
movs
repnz
cdq
cmps
data16
jge
push
add
popa
call
xchg
stos
(bad)
imul
leave
xor
(bad)
cli
out
xchg
(bad)
shl
and
ja
sbb
sbb
loope
add
dec
in
xchg
push
pop
(bad)
adc
dec
addr16
in
ja
sahf
pop
outs
mov
cmps
call
(bad)
cmp
pop
clc
movs
sbb
add
sub
xor
je
dec
or
xor
(bad)
jge
push
push
lahf
push
cmp
mov
mov
jmp
and
fsubp
loop
jbe
out
sbb
aam
add
pop
sbb
inc
xchg
pop
in
clc
sbb
pop
dec
pop
stos
jno
enter
jo
stc
and
jns
dec
mov
jmp
sahf
xchg
ins
pushf
xor
call
gs
and
data16
xchg
inc
js
imul
gs
in
xchg
mov
out
cmp
sar
ja
add
stc
push
out
out
ret
pushw
mov
mov
stos
push
sbb
(bad)
movs
stc
stc
in
xchg
pop
pop
add
push
or
movs
popa
or
sar
xor
fstp
dec
and
jp
aaa
mov
pop
inc
movs
cmp
(bad)
idiv
les
jmp
cmp
pop
jno
push
sbb
das
jecxz
and
jle
mov
and
clc
mov
jmp
dec
mov
(bad)
out
push
jbe
mov
or
inc
or
dec
add
scas
push
(bad)
jg
popa
push
push
sti
lods
push
out
out
cmp
jo
loopne
or
addr16
xor
jl
mov
dec
mov
and
add
xor
dec
xlat
in
es
enter
push
cmp
out
mov
daa
and
outs
out
jle
xor
popf
jns
neg
push
cmovo
pop
cwde
shr
in
psubw
sub
xchg
sub
push
out
xchg
hlt
add
cld
pushf
test
dec
jae
mov
lods
test
xchg
add
and
inc
lods
push
dec
loope
adc
leave
ds
xrelease
mov
push
jo
dec
add
lahf
inc
in
and
sbb
cmc
xor
bound
(bad)
retf
inc
mov
sar
pop
and
jle
or
xchg
add
rcl
sahf
dec
mov
jg
outs
into
imul
sub
cmp
stos
xrelease
mov
jbe
in
mov
lods
inc
call
inc
sub
or
and
mov
xchg
popf
(bad)
repnz
(bad)
sti
pop
repz
push
adc
xchg
(bad)
sbb
lea
sbb
test
adc
ins
xchg
ins
fucomp
inc
jl
scas
xchg
popf
repnz
mov
or
mov
jno
push
sbb
jnp
outs
pop
dec
sub
js
fwait
cmp
cli
fs
imul
sti
jle
cmps
sbb
fld
into
pusha
push
inc
(bad)
mov
out
pop
or
fdiv
dec
pop
cmp
call
sbb
xchg
mov
fisttp
sub
shr
push
(bad)
jmp
mov
dec
dec
loopne
add
(bad)
pushf
mov
loope
cmps
push
sahf
xchg
fcmove
cmp
div
dec
add
(bad)
mov
mov
mov
pop
out
xlat
add
(bad)
sti
xchg
aad
push
mov
push
sahf
sbb
std
jb
adc
mov
sbb
or
cmp
push
int
add
add
loopne
sahf
jmp
jns
ss
jecxz
mov
loope
pop
jmp
stos
pop
(bad)
xchg
(bad)
adc
mov
sbb
mov
inc
call
clc
mov
jno
push
pop
addr16
xor
sub
sub
push
mov
pop
mov
add
pop
fld
mov
sbb
popf
cmp
or
hlt
xor
aas
adc
adc
retf
outs
add
or
leave
xchg
dec
movs
mov
jp
arpl
fwait
call
ja
sbb
pop
stos
dec
in
mov
test
std
imul
push
test
pop
in
jmp
cmp
mov
cmp
dec
add
ret
test
mov
(bad)
daa
scas
and
test
sbb
sub
int3
sahf
cmps
lds
xchg
cmp
(bad)
fcmovnu
nop
mov
jle
(bad)
lea
sar
and
or
sub
cmp
push
lds
leave
in
(bad)
repz
adc
push
into
fcom
mov
ins
pop
dec
sub
sbb
pop
inc
pushf
imul
cmp
in
lods
and
retf
inc
mov
add
cmp
sbb
loope
outs
in
add
int3
mov
movs
cmps
add
shr
pusha
std
rol
scas
jle
test
test
test
mov
in
dec
test
ja
xor
clc
popf
and
sbb
push
popa
enter
sub
fucom
sub
mov
inc
pop
mov
push
mov
mov
xor
sub
adc
jae
pushf
test
xor
or
out
pop
xor
dec
outs
push
aam
iret
cmc
mov
and
cld
out
sub
(bad)
popf
fdiv
jmp
push
fisub
repnz
xchg
scas
or
jns
popf
cmps
daa
pop
add
sbb
dec
pushf
xor
mov
xor
fld
adc
and
imul
mov
out
lock
adc
or
sar
(bad)
add
(bad)
cli
inc
inc
ins
rcr
mov
sub
xor
mov
push
retf
push
repz
adc
mov
sar
lock
cmp
mov
arpl
jmp
ret
adc
pop
adc
aad
cmp
int3
test
mov
inc
sub
mov
mov
aad
fstp
fsubr
(bad)
lods
pop
scas
cdq
cdq
push
mov
mov
pop
pop
retf
je
jae
mov
fdivr
adc
aam
sbb
ja
inc
addr16
push
test
jae
or
in
push
and
lahf
(bad)
push
ret
sub
adc
push
rcl
push
and
test
pop
add
jo
cmp
xchg
mov
sub
test
xor
mov
cli
fisttp
pop
and
(bad)
scas
aaa
leave
in
cld
or
mov
(bad)
and
add
mov
aaa
nop
sbb
test
inc
repz
ss
scas
inc
jmp
call
push
cmps
xor
dec
or
push
sbb
nop
ror
mov
in
cld
cmp
into
jge
fdiv
fnsave
test
call
std
movs
std
mov
sti
clc
jle
test
pushf
pop
and
xchg
and
push
mov
push
cmp
jmp
xchg
dec
jmp
sahf
dec
out
fs
aam
ret
jmp
enter
adc
aaa
mov
and
(bad)
fndisi(8087
push
imul
mov
mov
(bad)
fnstenv
jbe
mov
xchg
inc
mov
fldenv
das
out
pop
sub
pop
das
or
lds
adc
mov
lds
int
push
mov
mov
pop
es
add
and
movs
fisubr
and
pop
ffreep
loop
ret
jg
pop
arpl
push
pop
sbb
mov
add
mov
mov
xor
mov
jg
push
sahf
pop
push
mov
sahf
scas
popa
xchg
dec
in
push
shl
jne
test
inc
or
inc
sar
mov
sub
stc
cmp
jns
jbe
sub
inc
push
xor
call
sub
jg
fidiv
pushf
(bad)
shl
add
push
dec
movs
lahf
jecxz
mov
jae
mov
je
dec
pop
sbb
sti
add
inc
out
xor
cld
inc
or
jl
(bad)
mov
repz
mov
xchg
fsubr
xchg
xchg
inc
ds
jmp
ins
mov
xchg
push
enter
iret
mov
or
std
test
or
(bad)
aad
xchg
push
shl
retf
fwait
movs
int
popa
mov
mov
pop
call
stc
es
shl
out
mov
ss
es
ret
xchg
data16
mov
cmps
jo
mov
aam
inc
enter
inc
mov
push
and
nop
retf
outs
lahf
leave
pop
mov
xchg
push
jmp
push
ret
or
dec
xor
lods
push
sub
xor
(bad)
jns
ins
inc
add
lds
sub
movs
dec
xchg
cwde
(bad)
sti
popf
or
push
sbb
sbb
and
cld
add
(bad)
mov
mov
fld
pop
hlt
fnstsw
or
jg
add
xchg
js
fmul
pop
mov
sbb
add
imul
jno
xchg
and
xchg
fidivr
pop
adc
pop
pop
mov
cmp
mov
outs
outs
and
scas
mov
jle
(bad)
in
dec
xor
jns
mov
addr16
cmp
imul
add
jg
or
cwde
jns
cmp
adc
mov
leave
pusha
test
out
test
pop
gs
xlat
adc
repz
bound
retf
inc
out
add
(bad)
into
out
das
dec
xor
hlt
fwait
pop
xchg
(bad)
ins
iret
cs
int3
loopne
sub
push
dec
cmp
ins
jae
inc
arpl
(bad)
mov
test
mov
fisub
daa
mov
xchg
xchg
retf
adc
mov
ret
jp
xchg
arpl
xchg
lahf
jge
add
dec
ret
xchg
mov
fiadd
movs
pop
pusha
ror
rcr
loope
rcl
cld
mov
loopne
and
dec
add
mov
push
cmc
std
add
iret
sub
cli
ficom
movs
push
jb
(bad)
ja
mov
sub
inc
out
dec
(bad)
fs
add
jno
fist
cld
dec
push
das
add
push
cs
sti
jecxz
lea
sbb
ret
cmps
pop
icebp
ins
outs
xor
mov
fnstsw
aaa
aaa
loope
pop
repnz
mov
ins
retf
(bad)
xchg
inc
arpl
dec
add
xor
shr
inc
icebp
jg
aas
test
std
pop
mov
mov
pop
cdq
lods
aas
sbb
xchg
or
dec
cwde
pusha
in
pop
add
popf
sahf
fst
sub
stos
hlt
add
or
out
jg
and
icebp
xchg
sbb
cmps
clc
dec
pop
push
jbe
sbb
inc
shl
sbb
mov
sub
cmp
mov
fstp
xor
dec
into
mov
pop
je
xor
clc
or
(bad)
adc
das
ret
xchg
(bad)
retf
icebp
popf
sahf
outs
dec
pop
aam
loope
mov
cdq
mov
sbb
cli
bound
ret
xor
loope
pop
sbb
cmp
and
repnz
jns
imul
lahf
xchg
mov
mov
mov
adc
push
loopne
inc
shr
out
addr16
rcl
xchg
ins
add
or
ret
cmp
in
pop
outs
jo
loope
in
jo
add
ror
fistp
ret
les
push
sbb
cmps
fmul
push
pop
addr16
ds
movs
repnz
xchg
dec
pop
push
rcl
cmp
xor
inc
sub
mul
arpl
adc
ja
mov
jge
ficom
sub
jl
push
aam
lods
rol
js
sbb
arpl
call
enter
daa
mov
add
sahf
mov
int
cmp
adc
xchg
push
stos
mov
retf
dec
fwait
das
rol
outs
push
mov
outs
scas
xor
add
jbe
int3
stos
pop
es
jnp
inc
or
popa
inc
imul
aas
jmp
aad
mov
mov
mov
cmc
iret
jno
fiadd
mov
inc
mov
inc
cmp
int
cmp
jecxz
test
adc
adc
int3
or
bound
dec
mov
push
cmp
scas
add
pop
mov
xor
dec
or
lahf
aam
out
dec
cmc
and
jl
jne
or
add
bound
xchg
sbb
cmps
add
out
in
sti
jg
daa
fdivr
test
adc
nop
sbb
retf
jae
fldcw
(bad)
mov
push
in
jne
mov
pop
cmp
les
push
daa
lods
fs
inc
int3
sub
pop
cld
data16
sub
fwait
push
vpmuludq
fst
mov
xchg
push
(bad)
lahf
sti
jecxz
pop
int
adc
ss
clts
xor
mov
rcl
mov
loopne
xor
aas
ds
xchg
fmul
pop
or
(bad)
scas
mov
sar
dec
adc
dec
sub
pushf
mov
add
or
jge
hlt
inc
xchg
pop
dec
jge
ficom
pusha
ins
mov
fwait
mov
cmp
pop
ins
call
xor
aam
out
xchg
adc
pop
bound
and
and
xchg
adc
jae
xchg
bound
push
dec
xlat
mov
and
mov
out
mov
out
xchg
xchg
fadd
stos
jne
add
aaa
(bad)
hlt
(bad)
mov
push
inc
sub
dec
adc
in
out
push
test
test
mov
and
jo
cdq
ja
test
sbb
mov
movs
(bad)
fistp
mov
into
sub
pop
cmp
and
in
call
pop
push
icebp
mov
ret
nop
pop
push
mov
sbb
xchg
pushf
pop
nop
add
je
jo
pop
fst
sub
fdivr
addr16
out
mov
mov
rcl
ret
jmp
test
(bad)
mov
das
sub
aad
(bad)
xlat
cwde
mov
mov
inc
adc
in
jp
or
data16
mov
cli
movs
cmps
pop
cmps
lock
xchg
pop
push
sbb
sbb
imul
leave
test
enter
cli
mov
mov
fnstsw
fs
lods
(bad)
and
ficom
pop
fmul
imul
cdq
push
jo
add
jecxz
lods
adc
sub
mul
add
lods
retf
int
loope
add
loope
inc
pop
cmp
and
sbb
jmp
push
cmp
fisttp
cli
bound
cmp
xchg
aam
sbb
mov
fisubr
stc
inc
(bad)
retf
lods
lods
sbb
es
and
mov
ret
mov
mov
cli
or
jbe
mov
sbb
push
push
mov
jmp
jo
or
mov
int3
xor
gs
call
mov
pop
add
or
(bad)
cs
mov
jmp
jl
shl
test
mov
ret
xchg
dec
sbb
imul
push
loope
pop
and
repnz
pop
inc
in
scas
push
and
mov
retf
icebp
jb
sbb
bound
add
lds
mov
imul
(bad)
(bad)
cmp
sar
mov
xchg
out
je
pop
add
push
test
mov
xchg
push
into
and
mov
ins
imul
mov
sbb
(bad)
mov
adc
std
into
dec
std
cmp
call
cwde
jmp
(bad)
push
dec
call
inc
dec
jge
out
sub
add
dec
lods
call
push
mov
xchg
or
ins
sar
(bad)
inc
mov
push
bound
shl
xchg
mov
ret
dec
xchg
movs
cmp
loop
mov
xchg
inc
out
add
ins
test
les
stc
daa
xor
stos
shl
movs
mov
test
imul
repnz
lea
mov
shr
pop
mov
add
or
jp
jg
sub
out
adc
jb
dec
pop
sar
cld
cli
dec
mov
fldcw
pop
push
in
cmps
dec
pop
xchg
add
pop
push
ja
push
and
daa
test
fadd
inc
call
xor
scas
outs
rol
cmp
test
xchg
cmps
mov
shl
xor
push
push
lods
mov
xor
sbb
mov
fsub
pop
loopne
rol
xchg
icebp
pop
test
cdq
jmp
sbb
xor
xchg
leave
mov
pop
mov
int3
xchg
push
add
jl
dec
ret
jecxz
stos
scas
sub
fwait
scas
scas
jnp
dec
mov
sbb
hlt
fsub
mov
xchg
push
dec
or
cs
adc
mov
repz
jno
adc
pop
rol
popa
sbb
adc
dec
(bad)
xchg
cmp
or
push
rcr
in
push
add
sub
cmp
test
int
add
or
sub
adc
mov
adc
cwde
cwde
(bad)
jge
mov
cmp
or
cmp
(bad)
push
aam
or
jbe
mov
imul
dec
in
int
iret
add
pop
int3
xor
jle
mov
out
sbb
in
scas
outs
push
(bad)
and
add
aad
mov
or
repnz
sub
rol
pop
push
mov
das
pusha
dec
shl
jmp
and
mov
fadd
xor
das
add
push
into
scas
cmp
mov
and
daa
call
das
fstp
sub
in
jl
dec
(bad)
dec
fisttp
movs
jae
pop
call
jle
mov
iret
inc
stc
xor
mov
jns
mov
scas
and
dec
test
je
out
push
in
jns
jo
push
adc
inc
mov
fimul
and
test
xor
in
push
push
(bad)
dec
jae
push
stos
push
sub
pop
pop
cmp
or
ja
sub
dec
dec
inc
mov
mov
jmp
sub
cs
xor
pop
retf
stos
cmp
push
and
xor
xor
push
pmullw
movs
aaa
rcr
jo
in
rcr
adc
push
jge
mov
sbb
jl
ss
sub
test
icebp
loope
sti
popf
and
call
dec
mov
test
pushf
or
mov
inc
movs
pop
retf
xchg
enter
push
les
jmp
fldenv
mov
sar
or
loop
dec
test
push
xchg
adc
mov
add
shl
jle
or
xchg
out
popf
push
or
jmp
lods
add
ret
cli
push
or
test
pop
loopne
stos
clc
idiv
inc
push
pop
in
sti
(bad)
in
ret
sbb
mov
in
xchg
bound
fld
xlat
sbb
(bad)
pusha
xchg
and
sub
sub
adc
mov
out
mov
and
jns
add
test
xchg
mov
dec
xchg
and
dec
mov
cmp
fist
xlat
mov
push
dec
pop
mov
popa
iret
repnz
sbb
inc
cmp
sub
jl
sub
or
(bad)
jmp
clc
mov
scas
shr
xrelease
push
(bad)
sbb
outs
xor
(bad)
das
xor
jo
push
mov
push
mov
mov
loop
test
cmp
movs
cmp
jmp
movs
pusha
cmp
mov
mov
or
cdq
mov
test
jl
idiv
push
jo
mov
xchg
mov
jnp
cmps
sub
pop
mov
push
xor
push
popf
push
cs
jl
and
dec
addr16
ds
push
loope
aas
push
fwait
pop
jno
imul
dec
mov
int
(bad)
iret
mov
fcomp
mov
mov
mov
fst
out
stc
in
inc
mov
add
and
das
cmp
in
clc
jecxz
repnz
and
push
retf
sub
inc
push
call
cmp
in
outs
lahf
leave
or
jecxz
sub
lds
jecxz
dec
xor
push
jmp
dec
mov
and
add
push
adc
lods
jne
sti
or
ds
ret
xor
inc
loope
fnstsw
push
add
inc
out
mov
lods
bnd
retf
cmp
stos
ins
xchg
jge
fmul
sub
out
out
sub
ja
mov
jae
xchg
cmp
mov
gs
sub
movs
loopne
adc
(bad)
retf
mov
jo
fist
(bad)
pop
scas
sub
push
cmp
repnz
push
mov
mov
into
loopne
or
inc
mov
dec
mov
(bad)
popa
daa
jo
xchg
test
into
mov
aam
mov
push
ja
ror
in
and
inc
push
sub
inc
sub
dec
(bad)
push
outs
mov
fucomip
sahf
ficomp
dec
pop
loopne
scas
pop
and
rcr
pushf
push
cmp
sub
mov
pop
pop
fiadd
(bad)
ss
in
pop
retf
push
push
(bad)
rcr
cdq
fs
pop
pop
push
sbb
adc
stos
imul
lods
mov
js
stos
pextrw
dec
les
fwait
into
adc
cmp
mov
xor
es
enter
cmp
xor
lods
jb
loope
xchg
mov
jg
or
push
mov
cwde
repz
mov
pop
pop
icebp
enter
mov
mov
inc
mov
test
or
ret
or
imul
fdiv
cmps
mov
pop
rol
cli
in
mov
cmps
mov
push
popa
retf
push
mov
sub
adc
dec
xchg
cmp
loopne
in
es
mov
inc
push
and
out
shl
mov
xor
add
adc
pop
jmp
stos
pop
sbb
mov
je
inc
sub
data16
fiadd
mov
ret
dec
ss
mov
psubq
mov
ret
xor
mov
cld
clc
xchg
push
jns
pop
and
aas
xor
movs
jnp
fidivr
mov
xor
jg
sub
add
and
(bad)
mov
outs
add
not
movs
movs
int
and
sub
push
push
call
adc
out
sbb
and
cmc
and
pusha
(bad)
xchg
imul
out
mov
push
xor
push
inc
push
mov
xchg
pushf
shr
xor
ret
retf
lock
adc
mov
cli
psrlw
lea
pop
js
ret
push
lahf
scas
xor
fiadd
push
push
xor
or
sbb
scas
inc
icebp
and
scas
stc
xor
outs
cdq
sub
cmp
xor
sub
sub
(bad)
lock
pop
jmp
pop
test
mov
dec
pop
jmp
into
lods
inc
inc
add
sbb
pop
sbb
inc
int
stos
jle
adc
fdivr
inc
jo
sbb
or
outs
dec
outs
out
adc
jmp
push
sub
pop
mov
int
xor
gs
mov
jbe
mov
fiadd
xchg
hlt
or
retf
inc
pop
mov
sti
je
adc
xchg
mov
hlt
and
cmc
stc
mov
in
in
loopne
mov
sub
xor
xchg
mov
sub
or
add
jmp
or
mov
cmps
aaa
add
fld
jns
pop
setae
xchg
stos
mov
inc
sub
loope
lea
repz
sub
std
xor
mov
sti
sub
or
xchg
test
daa
pop
call
and
mov
push
mov
jle
inc
mov
mov
stos
int3
pop
leave
jl
jecxz
mov
mov
mov
call
mov
sub
call
cmps
adc
into
pop
js
loop
ins
add
retf
xchg
ins
hlt
pushf
adc
xor
push
add
inc
xchg
repnz
(bad)
les
popf
enter
jno
mov
adc
xor
mov
sti
outs
mov
inc
jmp
in
(bad)
jmp
sti
aam
or
pop
or
cmps
xchg
xchg
(bad)
sub
push
xchg
xchg
and
mov
out
not
shl
xchg
inc
stc
xadd
pusha
push
sbb
test
cmps
mov
push
fnstsw
or
pushf
sbb
ret
jl
shr
sub
out
pop
cmps
xchg
into
pop
shl
mov
fisubr
sub
or
js
(bad)
imul
hlt
mov
pushf
cld
ss
xor
or
xlat
xor
aaa
cmp
jecxz
cmc
xor
imul
jmp
add
lock
bound
bound
hlt
mov
mov
xchg
sbb
ret
cwde
stos
sub
dec
xor
mov
enter
mov
sbb
stos
mov
jns
add
data16
or
ret
xor
push
lock
iret
iret
icebp
xchg
call
mov
adc
and
mov
shl
leave
sbb
mov
and
push
mov
loope
dec
daa
sbb
pop
push
and
jg
xchg
enter
sbb
jp
push
cmp
sbb
pushf
outs
xchg
push
aad
(bad)
push
lahf
es
(bad)
xor
xlat
out
xchg
out
cmp
pushf
jbe
lahf
push
stos
dec
sub
cli
add
cmps
mov
ret
sub
pop
mov
pop
push
inc
jbe
inc
scas
vandnps
sbb
ds
fdivr
(bad)
fwait
dec
adc
call
jb
dec
aad
fstp
js
or
mov
dec
pop
test
stc
cmp
jl
in
push
cmp
xchg
xchg
or
mov
sub
mov
ret
push
stc
out
cmp
retf
inc
sbb
ds
pop
xchg
mov
dec
mov
stos
fs
add
and
pop
or
push
loope
jp
push
sub
into
mov
or
(bad)
(bad)
xor
sbb
mov
rcr
ins
aaa
sbb
pop
pop
sbb
mov
test
and
sub
cwde
rol
mov
std
or
cmps
mov
xor
aam
cs
fidivr
cmc
cmps
xchg
fsubr
in
sbb
jno
xor
test
xchg
cmp
sbb
arpl
jb
jg
ret
aas
ret
and
stos
out
pop
inc
adc
or
loopne
mov
mov
mov
ds
push
mov
test
hlt
bound
call
call
mov
ins
inc
stc
adc
push
cli
out
fst
call
std
dec
(bad)
retf
ins
arpl
sbb
outs
scas
inc
mov
jle
fisttp
pop
add
imul
hlt
cwde
mov
xor
arpl
je
jns
stos
(bad)
cmp
repnz
push
mov
(bad)
push
xor
jle
(bad)
mov
mov
ror
sub
adc
inc
movs
jecxz
jg
xchg
movs
sbb
imul
mov
mov
aad
mov
ret
inc
loop
retf
xchg
pop
lahf
stos
bound
popf
out
jge
neg
xlat
(bad)
pop
fisttp
jae
jle
cli
xchg
test
and
pop
or
sahf
dec
adc
jg
push
in
xchg
cmps
aaa
repnz
jmp
mov
mov
cld
mov
out
mov
mov
stc
call
mov
or
imul
pushf
lea
pop
xchg
or
inc
outs
cmps
xor
mov
(bad)
mov
repnz
push
pop
inc
stos
mov
cmp
clc
not
iret
jge
dec
enter
xor
ins
and
inc
in
popa
and
lea
dec
add
xchg
jbe
push
push
inc
and
fisttp
int3
dec
repnz
pop
stos
jnp
aaa
mov
sbb
mov
test
sub
mov
out
outs
bound
sub
dec
xchg
sub
retf
ja
pop
pop
mov
mov
daa
mov
out
jecxz
fwait
test
je
xchg
xchg
adc
out
jno
mov
inc
imul
gs
inc
inc
bound
xor
or
jbe
mov
(bad)
loope
int
sbb
hlt
dec
jl
and
push
push
cmc
xchg
mov
mov
jge
retf
lods
pop
in
rcr
add
out
jecxz
inc
or
push
shr
cmps
cmp
scas
push
push
inc
or
ret
push
mov
xchg
mul
fcomp
sub
sar
cs
loope
call
test
fbstp
iret
add
out
imul
jg
xchg
xchg
adc
cmp
inc
jmp
(bad)
sti
mov
mov
mov
jecxz
mov
fld
(bad)
mov
iret
push
mov
cdq
(bad)
mov
imul
mov
test
popf
addr16
cmp
sahf
scas
xchg
shl
sub
lock
jae
into
xchg
not
mov
inc
enter
mov
or
jp
fidivr
fnsave
ins
sub
cmp
inc
push
or
int3
popa
and
daa
out
fisub
test
popf
mov
xor
pushf
jmp
nop
or
adc
inc
int3
mov
leave
mov
sub
iret
aad
iret
rol
adc
mov
loope
frstor
mov
(bad)
ins
nop
inc
outs
sahf
sub
out
xchg
xchg
aad
scas
aam
aaa
mov
jns
sub
in
or
repnz
icebp
sbb
mov
sub
add
fmul
push
xor
or
dec
pop
push
loopne
test
jg
cli
mov
and
add
mov
pushf
scas
mov
xchg
inc
aam
lock
ins
sub
inc
inc
imul
lods
movs
jmp
stc
mov
imul
stc
(bad)
push
push
inc
mov
dec
mov
mov
fldenv
pop
xchg
out
pop
mov
mov
xchg
sub
fstp
xor
fisub
jmp
sub
or
sbb
xor
movs
xor
clc
fwait
dec
add
and
in
xlat
(bad)
dec
push
mov
test
jecxz
ret
cli
outs
and
lods
aaa
xor
pop
dec
aaa
mov
lods
pop
add
lods
inc
mov
fbstp
cli
and
fucompp
cmp
ja
cwde
bound
in
jl
cmp
add
push
sar
cmp
lahf
push
cmps
jecxz
pop
jae
mul
dec
div
inc
std
sbb
lock
sbb
dec
cmp
lods
imul
push
leave
xor
pushf
(bad)
retf
sub
sti
sub
iret
mov
sbb
jmp
xchg
or
in
pushf
sub
dec
scas
mov
scas
inc
jmp
in
in
mov
js
in
cwde
cwde
pop
sahf
call
or
loope
push
and
cmp
jg
mov
adc
mov
sub
pop
adc
mov
arpl
out
jg
enter
add
add
imul
inc
mov
hlt
dec
push
outs
loop
cmps
or
ins
jp
inc
mov
jmp
or
cmp
(bad)
inc
mov
jp
sti
retf
or
or
jb
jp
xchg
push
add
push
sbb
lock
push
lahf
inc
add
dec
jnp
mov
fdivr
into
push
imul
jns
popa
shl
cwde
ins
in
xor
rcr
pushf
call
or
mov
and
jge
icebp
pop
cmp
xchg
cmps
mov
sar
xchg
and
inc
inc
mov
ror
inc
sub
mov
cmps
mov
into
cmp
xor
xchg
lahf
into
(bad)
in
js
loopne
fiadd
ins
jmp
add
pop
jl
icebp
retf
xor
lock
jbe
pop
sbb
repnz
aaa
push
out
pop
rcl
js
add
add
add
sub
loope
inc
in
and
fdivrp
jae
out
cmps
fwait
xchg
jo
cs
aaa
sbb
repz
fisub
out
in
dec
test
scas
cld
inc
xchg
xor
fsubr
lds
sbb
jns
pop
cwde
add
cmp
push
shr
add
inc
and
hlt
xchg
dec
stc
sub
mov
cld
add
fimul
mov
(bad)
mov
or
jmp
mov
inc
cld
fild
nop
jmp
cmp
rol
mov
inc
or
movs
jmp
ret
retf
aam
xchg
mov
pusha
sbb
scas
imul
ss
in
outs
stc
ins
add
test
pop
xor
sbb
xchg
sti
adc
repnz
aam
clc
cmp
dec
imul
aaa
push
fstp
dec
out
push
xchg
mov
loopne
(bad)
outs
and
enter
sub
pop
and
cmp
scas
push
fcmovbe
jl
jbe
loope
cmc
fincstp
ins
mov
(bad)
rcl
push
test
cdq
inc
lock
adc
dec
nop
dec
jo
push
cld
xor
(bad)
cs
movs
jo
sub
hlt
sbb
adc
ins
fcom
div
jp
xlat
std
inc
and
mov
xlat
pop
add
and
scas
pop
push
fwait
addr16
push
jb
and
cmp
pushf
dec
mov
mov
pop
mov
mov
push
push
xlat
inc
inc
adc
pop
mov
out
call
js
lock
imul
out
mov
loopne
std
es
jmp
pop
mov
inc
lahf
je
add
mov
data16
xor
sbb
pusha
mov
repnz
pop
mov
loope
jae
xchg
int3
push
cli
into
adc
mov
(bad)
jae
(bad)
xrelease
xchg
leave
ror
sahf
rcl
add
retf
xchg
cdq
mov
xchg
mov
fcom
mov
dec
xlat
sahf
xor
push
or
aad
xchg
aas
(bad)
dec
cmps
push
lock
cmc
inc
cli
popf
retf
and
es
dec
sbb
cmp
dec
or
in
imul
pop
xchg
xchg
jmp
scas
jp
fwait
push
enter
push
pop
mov
fdivr
stos
iret
xchg
out
test
retf
jmp
call
pop
test
sub
xor
scas
(bad)
test
xlat
cmps
out
pusha
adc
xchg
sub
push
xor
pop
mov
and
retf
inc
clc
inc
fdivr
icebp
and
lods
push
daa
xchg
imul
dec
in
inc
jmp
nop
push
shr
pop
popa
mov
cmp
fiadd
mov
and
jae
xchg
xchg
jmp
enter
call
test
mov
mov
ror
jbe
xor
iret
lahf
inc
or
fisubr
inc
push
mov
cmp
and
or
sub
sub
mov
xlat
jno
cmp
and
or
cli
loop
out
test
pop
mov
pop
fs
dec
cmc
or
retf
dec
pushf
fdivr
mov
dec
sub
xor
mov
add
pusha
(bad)
lea
jmp
fs
jp
push
mov
cmp
and
inc
movs
inc
mov
push
add
ss
dec
mov
mov
(bad)
mov
adc
push
popf
add
mov
sar
int
push
push
push
cli
or
outs
dec
xchg
pop
imul
aad
sbb
xchg
ret
sub
js
jg
sub
mov
scas
xor
add
xor
scas
sahf
or
push
add
push
add
add
adc
repnz
leave
xchg
cmp
in
adc
lahf
inc
das
or
xchg
fstp
test
div
out
shr
ss
pop
out
outs
ja
xor
sbb
shl
mov
scas
pop
inc
mov
jbe
int
scas
add
sbb
iret
dec
inc
test
out
mov
(bad)
sbb
jnp
mov
daa
cmps
in
fcom
dec
push
cli
xchg
pop
sbb
fbld
sbb
sbb
sub
lods
and
sub
xor
retf
push
push
inc
lea
scas
mov
pop
xor
psllq
mov
das
mov
pop
test
push
jns
loop
inc
xchg
dec
jne
add
mul
in
test
cmp
ins
cs
js
jo
mov
retf
loope
ja
jbe
jl
dec
into
fild
call
pushf
scas
push
adc
loop
dec
push
and
jl
dec
cmp
ins
mov
test
cwde
ret
test
es
adc
push
sbb
cs
aad
addr16
out
sbb
xchg
mov
ins
and
or
inc
or
stc
add
push
stos
mov
out
xchg
ss
jb
int3
outs
jge
add
inc
push
cwde
lea
pusha
mov
mov
mov
sbb
mov
push
out
repz
mov
mov
hlt
adc
or
cld
sub
xchg
and
sbb
out
xchg
push
jno
test
inc
aas
mov
leave
or
mov
add
es
jne
dec
or
and
dec
repz
jmp
lods
gs
mov
jnp
enter
test
movs
lock
mov
add
or
outs
jg
repz
cmp
sbb
pop
or
adc
test
adc
mov
sbb
inc
rcl
fcmovnb
arpl
inc
iret
lahf
jne
les
inc
popf
(bad)
arpl
(bad)
mov
dec
ror
or
fadd
push
test
rcl
mov
retf
imul
bound
adc
jo
sub
push
push
sub
retf
mov
pushf
repnz
adc
aaa
jno
in
sti
es
fidivr
inc
sbb
xor
xor
aaa
mov
push
and
xchg
add
sbb
xor
sbb
pop
add
ins
inc
sbb
pushf
fsub
cmp
pop
lock
and
inc
inc
jl
ss
dec
and
arpl
fstp
or
scas
es
hlt
mov
inc
das
test
loop
or
sub
sbb
xchg
mov
mov
jb
into
add
daa
mov
xchg
inc
loopne
pop
test
fisttp
sub
(bad)
jns
mov
sbb
loopne
aad
fld
or
sub
sbb
jns
(bad)
inc
imul
jecxz
mov
xlat
pop
gs
shr
inc
pop
gs
sub
mov
cwde
sbb
(bad)
cmp
pusha
adc
inc
lahf
mov
loope
pop
or
cmp
mov
or
call
in
dec
xchg
outs
push
jecxz
mov
dec
push
das
dec
adc
xor
das
mov
bound
pop
nop
test
enter
stc
xor
or
scas
leave
loope
mov
sti
xchg
imul
jne
mov
inc
cmps
or
add
cmp
cmc
ret
xchg
cli
pop
lahf
xor
mov
aad
or
jecxz
out
lods
mov
enter
push
jl
or
adc
push
push
shr
int
cli
sub
cmps
sub
push
bound
pop
(bad)
sbb
dec
jg
mov
test
test
shl
push
in
mov
jbe
and
movs
xor
sub
pop
jmp
jecxz
xchg
cmp
push
adc
shrd
mov
dec
xchg
iret
int
adc
jne
(bad)
iret
xor
jae
xchg
mov
js
shl
push
add
inc
cld
pop
pcmpeqb
inc
sub
and
or
ins
stc
test
xor
bound
sub
mov
and
inc
das
cld
mov
pop
dec
rol
lea
jo
add
in
adc
pop
aas
mov
pop
mov
adc
and
(bad)
test
push
pushf
int
outs
sbb
daa
mov
push
and
mov
leave
adc
or
push
in
sti
jmp
mov
jp
mov
iret
cmp
arpl
out
lods
jb
push
(bad)
sub
jg
(bad)
jg
in
inc
dec
and
test
push
(bad)
sbb
stos
enter
ret
jle
js
into
mov
and
xchg
les
out
xchg
push
nop
lock
mov
pop
xor
test
push
je
repnz
imul
sub
sbb
mov
fst
imul
dec
cmp
repz
xor
sbb
das
or
or
stos
(bad)
aas
inc
iret
into
mov
push
mov
xchg
in
xor
aaa
fdivr
(bad)
gs
outs
fsub
mov
cmp
retf
add
fadd
lods
(bad)
jae
cdq
adc
mov
mov
push
jmp
das
adc
xor
pslld
test
xchg
ficomp
mov
mov
cmp
outs
push
mov
pop
add
fiadd
in
(bad)
push
in
push
mov
gs
xlat
ins
addr16
or
les
dec
repz
lahf
jl
int3
enter
pop
pop
add
jne
mov
mov
push
mov
mov
xchg
inc
jmp
jb
push
adc
sub
rcr
pop
fidivr
jmp
or
into
push
cmp
stos
int3
push
and
sub
xchg
xor
jmp
cmc
and
mov
test
lahf
test
adc
test
jmp
pop
aad
mov
sbb
scas
jns
pop
mov
int
into
jnp
sub
and
xor
std
add
mov
mov
out
lods
(bad)
push
jne
clc
movs
inc
sub
std
rcr
loopne
cs
movs
push
xor
(bad)
cmp
push
or
movs
inc
inc
xchg
mov
mov
cmc
sub
jmp
pop
lods
pushf
test
cmp
jg
daa
add
dec
push
add
push
jnp
je
lds
xchg
in
fiadd
push
adc
xor
pop
scas
or
adc
loopne
sti
adc
sub
ins
ret
loope
test
test
xchg
in
movs
pop
or
xchg
xor
movs
sub
fbld
push
mov
mov
push
mov
sbb
mov
push
mov
jno
clc
jp
xchg
pop
ror
fs
and
cld
sbb
push
sbb
mov
jp
mov
fild
jp
pop
mov
out
cli
mov
mov
jge
int
ss
out
jno
ds
repz
test
cli
fisttp
pushf
xor
dec
ja
dec
push
sub
lods
jge
push
cmp
adc
aam
mov
in
push
(bad)
inc
xchg
mov
(bad)
and
js
pop
fs
test
dec
dec
cmp
dec
sub
gs
cpuid
shr
(bad)
jmp
pop
rcr
xchg
in
pop
dec
mov
mov
or
adc
sbb
shl
test
cmp
add
inc
and
mov
out
fist
ret
or
cmc
xor
adc
cs
fdivr
stos
adc
inc
mov
enter
jecxz
mov
xor
neg
repz
mov
rcr
shr
loop
adc
test
xchg
sar
dec
sub
mov
or
mov
arpl
and
add
vmovlps
pop
or
call
mov
or
xchg
mul
aam
pop
sahf
adc
or
cli
and
ins
out
sub
arpl
pop
pop
mov
and
rol
xchg
jg
aas
push
pop
push
add
inc
jne
std
add
jae
xlat
arpl
mov
sub
retf
test
push
and
mov
cs
sbb
dec
sub
or
js
data16
stos
xchg
or
cmp
icebp
addr16
int3
jbe
sbb
pop
enter
jge
and
xchg
push
fnsave
or
or
lea
lods
adc
dec
pop
daa
bound
loopne
ror
push
movs
retf
mov
retf
shl
stos
push
mov
mov
and
call
sbb
jbe
mov
ficom
fstp
(bad)
call
cli
(bad)
cmp
push
nop
xor
mov
in
jl
(bad)
pop
call
add
in
ds
cld
sbb
sbb
jg
loope
mov
push
fcomp
lds
and
push
mov
pop
movs
in
(bad)
in
movs
dec
ds
(bad)
ds
mov
nop
adc
icebp
xchg
mov
mov
cmp
les
fs
add
ins
outs
mov
hlt
leave
std
int
sti
out
mov
mov
shr
retf
push
and
sbb
sub
xor
(bad)
aad
jb
inc
test
xlat
mov
mov
xor
out
mov
jns
or
xor
sub
push
sbb
xchg
pop
push
and
jecxz
repz
cmp
mov
pop
imul
ficom
push
sub
sub
shl
mov
not
stos
jno
test
inc
jb
daa
mov
push
(bad)
retf
jg
sub
mov
imul
cwde
sti
xchg
pusha
je
fild
(bad)
xor
fstp
in
mov
enter
jbe
out
mov
push
psubw
aas
push
sbb
adc
dec
mov
add
in
xchg
add
jmp
jle
movs
sbb
push
in
pop
sbb
add
pop
sub
mov
fist
sub
adc
int3
popa
jmp
push
out
cwde
add
pop
jb
cld
leave
pusha
or
adc
adc
(bad)
fiadd
push
retf
push
rol
inc
repz
in
popa
cmp
adc
cmps
sub
(bad)
in
adc
sub
int3
cld
rcr
std
jle
call
mov
cmp
lods
mov
loop
cmps
jns
call
out
pop
push
popa
lahf
mov
out
mov
push
out
inc
push
loop
sbb
clc
push
movs
rcr
std
sub
or
jnp
or
in
and
sar
adc
pop
sub
xchg
mov
not
xchg
adc
ds
dec
sbb
test
lods
jmp
xchg
mov
add
or
jnp
sbb
call
inc
dec
mov
and
push
int
in
(bad)
ins
cli
mov
inc
cmp
xor
popf
call
sub
cmp
mov
pushf
ror
dec
jg
sbb
jmp
repz
sbb
or
fs
sbb
mov
mov
and
inc
inc
sbb
xchg
push
xchg
fucomi
xor
lahf
iret
xchg
adc
inc
mov
loope
cmc
mov
push
mov
sbb
and
pop
std
adc
xchg
call
inc
pop
or
push
inc
xchg
mov
and
add
xor
fidivr
das
inc
mov
fsubr
loope
ret
movs
sub
ret
or
outs
pop
lods
cld
pop
cld
dec
outs
stos
cmps
das
cmc
mov
xchg
and
xchg
or
pop
cmp
idiv
or
cld
(bad)
mov
pop
mov
lods
out
fistp
lods
push
cmp
mov
arpl
ins
fstp
mov
je
lds
shl
xchg
cmp
sbb
pusha
push
ret
or
xlat
pop
movs
nop
cmp
xchg
push
mov
fmul
mov
jnp
fimul
sub
stc
outs
mov
int3
sub
inc
inc
imul
push
push
test
inc
loope
xor
mov
sub
test
mov
mov
sbb
jle
(bad)
ret
add
mov
mov
mov
ins
rcr
and
jge
mov
inc
push
test
push
call
mov
push
cmc
(bad)
repnz
inc
jecxz
ret
xchg
sub
adc
lock
jl
sub
xchg
adc
push
xor
leave
and
dec
sahf
aaa
push
mov
inc
outs
or
push
out
sub
or
dec
xor
js
mov
pop
sbb
ins
xchg
call
stos
jmp
mov
fwait
ins
(bad)
mov
pop
andps
call
imul
shr
shr
adc
push
fdivr
pop
add
in
and
add
jnp
iret
xchg
xor
or
dec
xchg
into
in
jne
out
clc
ss
sti
pop
push
adc
dec
sub
icebp
repz
mov
add
sbb
lea
lds
adc
adc
stos
test
sahf
adc
mov
pusha
or
neg
push
imul
ins
aad
xchg
dec
dec
sbb
adc
jbe
ins
int3
int3
pushf
imul
fcomp
arpl
in
fiadd
faddp
fsubr
int
idiv
jg
jb
or
mov
xor
rcl
mov
ror
rcl
(bad)
stc
(bad)
xchg
mov
mov
or
push
jb
jbe
neg
js
and
mov
fstp
sbb
ins
xchg
xor
cmp
imul
imul
cwde
test
sbb
mov
fild
jmp
adc
inc
adc
xlat
lods
pushf
repnz
add
sbb
push
adc
jmp
xor
ins
outs
lock
out
sbb
pusha
(bad)
fistp
(bad)
repz
add
(bad)
sbb
cmps
sbb
cmp
jmp
dec
mov
lods
fstp
(bad)
jnp
sub
or
jecxz
push
pushf
inc
sub
adc
stc
out
or
lahf
pop
pop
sub
sbb
ins
lock
push
sbb
inc
mov
pop
add
shr
xor
cmp
cmp
dec
mov
add
mov
cmp
dec
mov
xchg
mov
jg
std
imul
imul
pop
adc
bound
sub
repz
cmp
fwait
xor
inc
push
es
aam
and
repnz
je
sub
and
pop
daa
lahf
sub
push
mov
mov
adc
xor
icebp
retf
sar
push
or
sbb
sbb
arpl
sbb
cmps
jmp
stc
(bad)
gs
dec
mov
in
xchg
cmp
add
jno
lds
test
sbb
jbe
mov
je
or
retf
cmp
stos
(bad)
retf
xor
gs
jge
pop
mov
out
and
dec
out
daa
xor
std
int3
nop
ror
out
in
outs
pop
js
xchg
jbe
jb
cmps
(bad)
stc
test
test
(bad)
mov
inc
or
mov
and
mov
mov
cs
leave
in
popf
test
and
test
lds
push
loopne
push
imul
aaa
mov
mov
mov
mov
add
adc
add
mov
xchg
push
adc
mov
sbb
pop
sub
(bad)
bound
or
pop
ss
mov
(bad)
rcl
loop
stos
adc
cmp
ret
cmc
inc
dec
and
aaa
call
jmp
stc
sar
(bad)
enter
push
fsubrp
mov
fidiv
cmp
popf
shr
fsub
fs
cmp
jg
or
outs
movs
(bad)
(bad)
out
or
(bad)
js
lea
mov
jnp
sub
jp
xchg
xchg
jl
jo
addr16
mov
int
dec
lea
nop
int
lods
and
fild
and
stc
push
call
xchg
popa
cbw
int
cmp
call
cmp
ja
mov
push
retf
int
mov
jnp
mov
adc
imul
jge
lahf
adc
dec
xchg
or
jle
ins
loope
ja
pop
cmp
clc
dec
das
xor
xchg
mov
sbb
into
in
adc
rol
sbb
retf
xchg
mov
jecxz
pop
imul
dec
sub
sub
mov
push
push
adc
jle
add
jno
push
and
retf
mov
sar
cmp
mov
push
cli
add
jmp
imul
add
inc
(bad)
inc
jae
nop
sti
std
call
push
ds
(bad)
sahf
fdivr
daa
mov
add
test
cmp
(bad)
pop
cmp
ret
rcl
loop
loop
mov
leave
sti
cmp
sar
xlat
inc
(bad)
repz
popf
xchg
fmul
mov
(bad)
sub
sub
arpl
push
jecxz
xchg
ret
aam
loopne
mov
or
sub
pop
jmp
xor
and
add
push
push
mov
jg
cmp
adc
loopne
pop
and
push
add
dec
hlt
pop
sub
mov
dec
pop
adc
add
ror
or
xor
add
xchg
cli
mul
iret
lods
xchg
cmp
pushf
fsub
sbb
push
mov
xchg
push
xchg
call
push
jae
loope
mov
mov
test
popa
jb
pop
mov
cmp
pop
loope
into
pop
enter
test
jg
sub
push
push
scas
mov
int3
ds
stc
mov
sti
ins
repz
call
repz
fsubp
(bad)
icebp
mov
aam
popa
in
adc
mov
arpl
in
xchg
in
xchg
sub
dec
rol
lods
mov
clc
and
(bad)
jg
inc
aaa
test
popa
or
or
ja
mov
scas
mov
jne
iret
loop
mov
mov
cli
ret
jns
jmp
and
jnp
fmulp
cmp
dec
in
nop
pop
sbb
ds
imul
jecxz
icebp
pop
(bad)
adc
bound
fisubr
or
cmps
in
jne
bound
jne
sbb
mov
and
and
push
push
call
sti
or
inc
aaa
pusha
and
inc
imul
mov
test
add
(bad)
sbb
repnz
cwde
mov
shl
add
jl
add
push
jp
inc
mov
xchg
test
je
jo
in
mov
pop
fwait
xchg
dec
jmp
aaa
fs
in
fimul
lods
fbstp
imul
inc
dec
xor
lods
int3
jmp
add
push
shl
xchg
jmp
dec
xchg
mov
dec
cwde
clc
in
mov
lods
(bad)
in
sbb
out
jmp
in
sub
push
(bad)
xor
(bad)
pop
cwde
mov
inc
stc
add
retf
test
(bad)
pop
aam
sub
test
mov
(bad)
cdq
pop
call
xchg
das
cmp
pop
fidiv
and
jno
out
xor
sbb
inc
pop
xchg
dec
cmp
inc
xor
in
(bad)
push
cmp
movs
or
add
or
dec
lea
cdq
mov
ficom
mov
add
popa
imul
test
add
pop
cmp
mov
mov
cs
sbb
pop
daa
aad
pop
push
and
jmp
leave
mov
xchg
cmp
push
jp
std
int3
cwde
pop
pushf
dec
ret
shr
add
sub
cmp
cmps
aas
xor
lock
or
cmp
inc
sub
cdq
ror
int
rol
fsubr
inc
ja
es
iret
(bad)
sti
xor
movs
repz
xor
jbe
dec
scas
sub
xor
bound
ret
sbb
leave
inc
stos
ja
fcomip
sub
xor
movs
retf
xor
sub
arpl
nop
mul
cdq
xor
test
xchg
rcr
xchg
jns
dec
cld
sub
add
scas
(bad)
clc
push
rcl
pop
xchg
push
call
inc
ja
mov
mov
sahf
mov
sar
int3
xor
test
mov
adc
inc
pop
pop
jle
mov
or
ficomp
nop
loope
sar
int
punpckldq
mov
iret
movs
imul
pop
test
data16
xlat
fstp
adc
mov
xor
adc
dec
adc
stc
mov
cld
imul
rcr
jle
xor
cmp
sub
(bad)
xor
lods
(bad)
xchg
mov
addr16
(bad)
outs
or
call
xlat
mov
sbb
retf
pop
ret
push
add
repz
out
shr
addr16
xchg
xchg
(bad)
out
scas
dec
add
pop
cmp
or
cmp
xor
dec
push
ds
cmp
or
jnp
packuswb
push
push
cwde
test
mov
mov
fldpi
pop
jbe
jge
adc
or
or
cmps
add
mov
std
xchg
mov
mov
enter
sub
ss
enter
sahf
das
jae
push
mov
nop
retf
pop
fisubr
mov
dec
bound
rol
inc
std
pop
(bad)
in
cld
cmps
aas
(bad)
jmp
cmp
stc
dec
loop
in
jbe
push
cmp
inc
add
dec
sbb
fld
xor
test
lahf
inc
push
and
mov
je
sub
hlt
mov
sbb
cmp
xchg
lds
add
popa
(bad)
pop
sub
mov
pop
mov
mov
xchg
in
jo
scas
push
retf
loope
push
dec
in
mov
enter
dec
add
xor
iret
iret
rol
shl
test
jg
adc
pop
ins
fistp
cmps
shl
sub
test
pop
jbe
add
ret
mov
ins
movntq
mov
aaa
hlt
sti
push
(bad)
mov
adc
(bad)
aad
jle
mov
cmc
out
outs
sub
loopne
or
mov
xor
adc
and
cmp
in
cld
xchg
rcl
mov
dec
mov
cmp
movs
pop
ins
sub
cmp
or
(bad)
stos
sahf
add
fsubr
push
or
mov
cmc
nop
inc
arpl
and
cmps
cdq
sbb
jg
loopne
popa
adc
sub
adc
test
(bad)
push
ss
fild
and
bound
dec
inc
nop
out
or
(bad)
push
xchg
dec
mov
cmp
adc
loope
sbb
(bad)
(bad)
mov
in
adc
xor
nop
les
dec
clc
(bad)
add
xor
scas
jg
push
fisttp
jecxz
sbb
mov
inc
gs
pop
pop
or
cdq
jb
fdiv
lods
pop
or
ins
xor
xlat
test
sbb
sar
sbb
mov
mov
sub
mov
sub
xor
jbe
icebp
jmp
sub
sbb
sbb
pop
dec
pop
ret
icebp
add
loope
out
or
jecxz
push
xchg
idiv
rcl
repnz
push
dec
cdq
lock
dec
enter
jmp
cli
dec
aaa
shl
(bad)
(bad)
push
inc
push
imul
fnstenv
inc
ds
in
ror
cli
mov
pop
shr
xchg
mov
pop
dec
jl
and
jmp
adc
inc
jb
ficomp
arpl
sbb
test
jno
add
push
fiadd
adc
push
pushf
jle
hlt
retf
push
jmp
fnstcw
mov
shr
ret
pop
stos
sub
shl
jnp
call
ficom
adc
int3
cli
jecxz
or
xchg
or
mov
jbe
aam
jae
adc
shl
cmp
pop
xchg
adc
nop
stc
or
dec
rcr
call
js
and
xor
(bad)
fwait
mov
hlt
test
mov
es
mov
jae
cmp
ds
push
jae
jl
call
mov
mov
or
sti
sbb
push
int
xchg
and
loopne
jle
mov
test
xchg
inc
aas
sar
mov
bound
test
add
mov
lds
dec
sub
stc
fist
add
nop
jp
lods
pop
call
mov
xchg
push
mov
leave
mov
dec
push
scas
xlat
(bad)
ds
inc
sti
or
add
fistp
jns
or
dec
mov
pushf
fst
push
sub
adc
shl
jmp
je
mov
pop
jmp
das
xor
test
mov
push
arpl
popa
pop
bound
fdiv
inc
mov
jbe
(bad)
xchg
adc
test
pop
imul
mov
out
clc
ret
imul
cmps
xchg
hlt
xchg
sar
test
fisub
and
cmp
mov
mov
jecxz
add
not
hlt
or
pop
inc
out
or
ret
outs
inc
test
sbb
repnz
sbb
sub
sub
inc
ror
cli
xor
retf
pop
into
fnstsw
jge
cmc
push
in
cwde
retf
in
xor
fstp
pop
adc
mov
jp
pop
call
cmp
dec
xchg
mov
push
mov
aad
into
and
call
inc
xor
(bad)
dec
mov
xor
ss
inc
jg
fisubr
(bad)
push
jmp
add
sbb
adc
push
fadd
sub
movs
stos
rol
sub
sub
mov
ins
adc
cwde
ret
test
pop
mov
popf
or
repz
cmp
rol
and
rcl
mov
dec
ret
rol
dec
mov
std
retf
push
outs
add
popa
xchg
xor
retf
imul
or
cmp
mov
adc
aam
pop
mov
sub
inc
inc
imul
fnstenv
jae
xor
jmp
test
imul
adc
stc
stos
or
popf
mul
jae
push
and
(bad)
out
pop
xchg
jle
aas
clc
jmp
dec
idiv
clc
mov
push
int3
dec
rcl
push
hlt
daa
and
fsubrp
pop
dec
xor
pop
lds
in
jl
fist
pushf
es
movs
ins
mov
es
mov
and
cmovae
cdq
mov
out
xchg
mov
or
jo
add
pop
add
frstor
stos
(bad)
es
cli
imul
les
fimul
mov
and
pop
and
mov
jp
pop
ror
jg
pop
sub
lods
and
ins
stos
jmp
mov
inc
ret
hlt
jecxz
aas
xchg
fisub
fisubr
add
mov
cmp
push
cmp
xchg
out
loope
mov
push
inc
leave
mov
dec
sub
push
mov
cli
and
cmp
or
mov
imul
rcl
sti
nop
dec
jmp
jmp
cmc
cdq
lea
xchg
mov
and
scas
sbb
xor
jbe
push
push
and
xchg
mov
(bad)
call
mov
sti
push
scas
gs
in
mov
or
and
test
inc
mov
jae
xor
inc
iret
push
shl
loopne
dec
loop
push
push
inc
stos
clc
mov
cmps
dec
aas
js
dec
arpl
pop
jmp
pusha
add
outs
js
jmp
in
js
add
scas
sub
popa
call
add
push
dec
xor
lahf
mov
sub
dec
dec
ja
fist
inc
(bad)
shr
push
into
mov
fidivr
retf
aam
add
or
sbb
sbb
stc
iret
xlat
push
dec
cmps
cmc
pop
mov
sub
lods
xchg
jno
(bad)
pop
out
stos
es
data16
idiv
or
ins
xlat
ja
inc
dec
add
push
cmps
mov
pop
clc
ficomp
test
sbb
rcr
xchg
call
cwde
lds
cmp
lahf
dec
xchg
popf
push
in
sub
cs
lods
in
pop
retf
xor
enter
int3
dec
jo
mov
test
bound
jmp
mov
inc
loop
or
cmp
push
imul
cmp
stos
cmc
loopne
xor
loopne
call
add
pushf
xor
cdq
js
sbb
sbb
jb
lahf
sub
jmp
lods
mov
pop
stc
out
xor
xor
jo
and
jecxz
xlat
pause
mov
xchg
add
push
pusha
mov
(bad)
bound
sahf
cmp
sub
int3
inc
xlat
inc
push
lea
in
xchg
xor
repnz
and
xchg
fidivr
add
cmp
sbb
add
(bad)
xchg
pusha
pop
fcmovnu
mov
mov
mov
push
into
sbb
test
test
sbb
aam
jl
sub
inc
xor
adc
shl
ja
xor
add
jnp
mov
jecxz
xor
jg
popf
ret
es
std
pusha
cwde
outs
fistp
xor
mov
es
xchg
jo
mov
push
jns
push
push
je
jae
pop
xchg
xor
out
pop
jbe
mov
out
jl
hlt
jae
or
push
inc
daa
enter
lods
cwde
add
loope
(bad)
add
cmp
lods
call
push
jo
es
outs
cmps
ficom
addr16
ss
jl
scas
lea
xchg
gs
jmp
dec
jmp
inc
sahf
out
movs
cs
xor
and
cmc
ins
adc
es
add
sbb
in
mov
stc
aad
movs
mov
fwait
inc
in
push
sbb
int3
arpl
cs
jno
out
out
jno
mov
pusha
xor
jns
xor
mov
(bad)
(bad)
xor
mov
test
mov
in
inc
pop
loope
loop
inc
sub
pop
jle
imul
mov
jmp
sbb
inc
cmp
movs
icebp
push
jo
cdq
jbe
enter
jbe
sbb
jmp
sbb
es
shl
cdq
cmc
popa
push
imul
cmp
adc
jg
movs
sub
jnp
or
add
jmp
sbb
int
adc
and
shr
mov
mov
pop
xor
(bad)
in
shl
cmp
cmps
stos
xor
inc
out
shr
out
leave
aad
or
aam
pop
pop
in
xchg
lods
push
in
cmp
adc
scas
and
cli
inc
les
lahf
push
mov
rcr
mov
push
arpl
call
mov
fsub
jns
stos
test
add
das
out
sbb
mov
xor
out
jge
xchg
cmp
fwait
aam
lds
dec
mov
xor
mov
add
inc
push
xor
adc
fld
jecxz
cmc
call
ins
(bad)
out
mov
xchg
leave
outs
jle
and
neg
ss
cmp
aas
ds
test
inc
and
push
pop
xchg
or
adc
outs
add
(bad)
dec
sub
leave
cmc
jmp
xchg
adc
lds
jmp
dec
movs
adc
dec
test
inc
stos
and
adc
es
sahf
or
cmp
ret
pushf
ja
fidivr
sub
inc
xchg
outs
or
mov
cmps
loop
push
hlt
jge
xchg
es
mov
jg
(bad)
xor
and
cmc
fxch
aaa
jge
cli
dec
data16
dec
jl
adc
cmps
enter
jbe
arpl
cmp
cmp
jb
xor
add
and
and
dec
rcr
jmp
add
adc
xor
iret
mov
xchg
sub
jecxz
mov
inc
jnp
nop
cmps
jb
pushf
push
dec
cmc
pop
neg
shl
xor
(bad)
loopne
mov
jmp
mov
xor
add
stc
add
or
add
out
jns
sti
js
push
cmp
outs
lds
(bad)
and
cmps
mov
cmp
mov
cmps
add
push
xchg
jmp
xchg
out
fldcw
pop
mov
xor
shr
ins
xor
jnp
nop
pop
setns
push
dec
push
(bad)
clc
int
add
ret
aas
jecxz
popa
movs
add
pop
stos
jp
out
jbe
jle
div
mov
mov
cdq
sar
xor
xchg
std
in
xchg
add
aaa
addr16
xchg
and
inc
xor
or
inc
movs
sub
mov
addr16
mov
or
add
mov
jmp
loope
jp
pushaw
repnz
inc
nop
in
sti
sbb
and
xchg
xchg
or
pop
cmp
inc
shl
sub
jno
fcomip
cli
cmp
outs
pop
aam
and
and
and
sbb
scas
pushf
bound
in
sbb
mov
bound
fidivr
cmps
nop
mov
push
jb
jo
xchg
cmp
jno
std
or
inc
mov
sub
push
push
popa
repz
movs
test
jmp
jne
jbe
mov
pop
or
adc
pusha
imul
mov
jle
mov
cmp
adc
ja
jns
or
sub
mov
addr16
bound
out
loop
cmp
xor
mov
rcl
xchg
les
call
sub
mov
sub
xchg
icebp
dec
jmp
cmp
int
inc
inc
lods
dec
into
outs
or
or
and
and
call
xchg
fucom
jnp
mov
pop
pop
test
or
xor
jbe
cmp
xor
xor
scas
mov
xchg
mov
sbb
loop
mov
pop
ins
not
sahf
mov
fucomp
jno
sub
pusha
pop
daa
and
push
outs
test
xchg
ret
outs
data16
pop
or
out
dec
cmp
add
mov
lahf
xor
std
sub
int
fsubr
sub
lahf
or
(bad)
mov
ror
retf
push
aad
cmp
jno
push
in
adc
push
add
xchg
inc
jmp
and
adc
adc
dec
stos
loopne
pop
push
fstp
mov
scas
rcr
or
mov
repz
das
push
ret
or
jb
sbb
mov
test
std
pop
add
and
or
loop
push
int
sbb
retf
pop
mov
add
mov
sbb
push
cmps
ficomp
mov
(bad)
int3
adc
daa
push
mov
pop
scas
fidiv
push
scas
sub
sahf
mov
dec
xor
pop
(bad)
pop
stc
je
push
pop
or
fcom
int3
sub
scas
jnp
mov
movs
push
xor
arpl
jmp
call
mov
pop
scas
mov
push
lock
adc
mov
rcl
int3
xor
mov
mov
mov
pusha
aas
int3
je
pop
xor
mov
cmps
push
adc
or
cmp
or
push
inc
adc
sub
rcr
stos
sub
jecxz
and
(bad)
rcr
fisub
out
out
into
xlat
scas
fwait
or
scas
mov
popa
loop
xor
sbb
jns
push
sbb
sbb
dec
cld
sar
addr16
cmp
sbb
iret
or
xor
xor
add
fdivr
stos
xchg
test
fcomp
in
mov
dec
inc
sbb
popa
std
ffreep
ss
fstp
ror
cmps
sub
pop
lods
push
sar
or
jbe
movs
lock
repnz
mov
out
lods
xchg
pop
sbb
pop
and
je
(bad)
fild
fisub
jge
mov
mov
test
push
pop
cmp
sub
pop
in
into
push
js
imul
xor
push
mov
(bad)
push
pop
das
push
inc
mov
xchg
aaa
jns
inc
inc
icebp
std
add
sub
cdq
jmp
push
mov
sbb
jmp
popf
cmps
xchg
jge
mov
jae
jne
ins
mov
retf
call
dec
pop
push
add
int3
adc
sbb
nop
sar
lds
inc
mov
lods
xor
or
out
rol
mov
movs
inc
outs
mov
jmp
push
scas
push
mov
cdq
repz
adc
sbb
loop
mov
daa
jecxz
xchg
les
lahf
ficom
mov
test
mov
mov
inc
mov
stos
sub
and
les
loopne
dec
cld
inc
ror
popa
mov
aam
clc
push
dec
cmp
mov
ja
push
or
mov
fist
nop
cmp
push
cld
or
cwde
mov
retf
inc
ficomp
push
xlat
mov
dec
add
mov
and
sub
rcl
mov
dec
xor
push
add
sahf
int3
dec
loope
scas
int3
repnz
jmp
or
add
inc
mov
mov
cmc
push
repnz
call
pop
xchg
int
test
rcl
cmp
xchg
dec
dec
mov
sub
test
jge
pop
bound
cli
or
in
ins
scas
fdecstp
or
imul
push
loope
repnz
fnstsw
or
lods
test
jmp
push
test
cli
(bad)
ficomp
add
pop
es
fisub
xchg
nop
push
inc
shl
cmps
mov
outs
aad
cmp
lods
ret
pop
cwde
sbb
call
add
jb
arpl
push
pop
out
dec
push
fistp
je
adc
jne
loop
call
xchg
iret
pop
push
in
lods
xchg
fsubr
dec
enter
dec
iret
push
jg
adc
arpl
mov
xor
and
mov
pop
pushf
dec
or
movs
xor
jp
cli
xchg
pop
sub
movs
cdq
sub
js
fwait
test
outs
xor
dec
push
push
test
adc
int
sub
ins
gs
push
outs
dec
pop
imul
ja
push
sbb
cdq
push
sub
xchg
and
cmc
test
cmc
or
scas
jbe
and
mov
ds
jge
retf
inc
rol
shr
jbe
cmp
inc
cmp
fdiv
pop
and
stos
jl
sub
or
mov
or
ret
nop
dec
push
(bad)
mov
dec
ret
mov
arpl
jge
push
in
xlat
jg
inc
push
mov
das
pop
loop
into
jmp
xlat
repz
into
mov
fcomp
mov
test
enter
mov
pop
fldcw
cli
jle
and
(bad)
jbe
ja
lea
sbb
jl
mov
and
sbb
or
mov
loope
cli
bound
adc
ds
fisub
and
mov
mov
fwait
out
test
push
mov
jne
jg
inc
mov
(bad)
cmp
sbb
iret
xor
ds
arpl
mov
add
retf
jb
inc
into
dec
adc
aam
movs
mov
push
icebp
xor
fdivr
fmul
sub
sub
xor
sub
xchg
test
mov
daa
std
jle
stc
lahf
(bad)
(bad)
mov
cdq
cmp
jecxz
retf
inc
imul
push
sub
sbb
sbb
cmc
movs
or
dec
pop
lds
icebp
xor
xchg
jb
mov
std
loope
adc
mov
ret
arpl
cmp
das
fwait
clc
ins
dec
out
jmp
sar
or
aas
add
sbb
(bad)
add
jmp
xchg
xchg
sbb
mov
sub
gs
adc
in
mov
call
mov
cdq
mov
dec
pop
int
ins
nop
je
adc
jecxz
sbb
sbb
add
jo
in
lods
repz
aad
ja
outs
out
jo
nop
push
(bad)
add
add
inc
jo
imul
stos
(bad)
push
iret
loope
inc
mov
xchg
fdivr
or
xchg
push
sti
mov
mov
sbb
mov
dec
push
push
sar
add
jmp
pop
cmp
test
mov
cld
add
jp
clc
movs
inc
in
aaa
xchg
jns
mov
lods
mov
sbb
push
inc
pop
mov
pop
pop
push
repnz
xlat
jb
jb
(bad)
or
or
ret
out
fucomip
loope
inc
fild
ffree
das
sub
or
pop
push
(bad)
add
test
and
xor
(bad)
xor
jno
enter
out
lahf
jle
adc
repz
ret
daa
ffree
adc
push
mov
jbe
jo
dec
gs
or
int
leave
cs
adc
icebp
or
cmp
pop
jmp
fcom
push
test
dec
outs
pop
xor
cmp
or
jbe
inc
call
inc
es
mov
inc
pop
fcomp
cmp
mov
pop
clc
fucom
jle
mov
jne
pop
arpl
scas
add
loope
jge
mov
in
cdq
loope
mov
xor
es
repz
jmp
mov
dec
add
movs
pop
mov
lock
xchg
mov
xchg
jae
test
mov
sar
imul
mov
jnp
repz
or
jnp
cmp
push
xor
and
ja
inc
cmp
lea
add
and
add
add
cld
sbb
inc
push
mov
sahf
sbb
pop
outs
call
inc
mov
cmp
dec
add
add
scas
les
xchg
adc
(bad)
push
ds
jp
jecxz
mov
clc
or
xchg
dec
int3
xchg
jg
stc
mov
shl
pop
adc
mov
daa
(bad)
fucomp
xchg
fnsave
xchg
fadd
(bad)
fsubp
or
clc
adc
pop
mov
mov
repz
aad
cs
jbe
leave
sub
mov
das
mov
sbb
push
shr
xor
test
call
inc
mov
dec
mov
lds
in
push
xchg
sbb
mov
mov
shl
pop
inc
into
dec
lock
xor
sub
pop
mov
and
loope
lea
cdq
hlt
and
fist
test
cmps
lds
shl
sti
imul
or
mov
je
xor
cli
inc
xor
cdq
push
out
push
fcomip
push
(bad)
loop
add
ja
lea
push
(bad)
ins
ficomp
jge
cmps
stc
mov
sbb
das
clc
lea
sub
mov
data16
sub
out
sub
mov
inc
dec
mov
fld1
iret
mov
inc
xlat
lahf
sar
mov
fstp
jae
xchg
ds
iret
mov
packsswb
hlt
minps
inc
data16
call
cs
lds
mov
cmp
leave
inc
xchg
loop
ins
dec
or
cmp
cmp
and
push
xor
fist
mov
pop
lahf
cmps
sbb
scas
(bad)
or
jle
call
gs
adc
jge
mov
aam
inc
call
cmp
pop
dec
cmp
dec
xlat
movs
push
xor
into
test
push
cmps
mov
mov
xacquire
shl
jmp
ins
outs
mul
stos
loopne
push
inc
fwait
lods
(bad)
scas
in
outs
mov
shl
xchg
out
dec
retf
mov
cmps
jl
loopne
pop
repnz
fidivr
cmp
mov
push
mov
outs
mov
repz
push
test
mov
in
sbb
scas
mov
lods
mov
addr16
into
aad
rol
ins
jb
mov
sbb
imul
adc
int3
xor
fwait
xchg
pop
dec
xlat
push
popa
sbb
xchg
push
cmp
retf
daa
ja
arpl
push
sub
in
jge
sahf
cmp
adc
int
aad
sub
fs
mov
or
outs
jge
ss
xchg
inc
cmp
test
lds
and
sub
jns
jge
jle
mov
stos
es
test
stc
xor
aaa
out
pop
or
dec
mov
inc
sub
repz
xor
pusha
pop
push
sub
out
mov
jg
test
fucomip
call
adc
fcomp
sbb
pop
add
ds
outs
outs
in
mov
into
dec
daa
loope
fdiv
dec
or
sub
repnz
or
or
pop
mov
sbb
ret
sub
pop
sar
das
lods
popa
imul
jnp
add
fistp
xor
or
adc
(bad)
sbb
dec
(bad)
mov
test
or
ret
xchg
lods
(bad)
sbb
aam
mov
pop
inc
xor
mov
pop
dec
pop
push
aas
rcr
ins
scas
rdpmc
jecxz
sar
add
pop
cmp
add
test
xor
xchg
mov
nop
and
movs
jbe
xor
mov
dec
jo
sub
daa
das
clts
inc
pop
xor
pop
or
rol
jle
mov
mov
out
(bad)
mov
push
fsub
jl
mov
loop
dec
cdq
sbb
daa
in
adc
lahf
mov
adc
ss
ret
imul
cmp
jg
sahf
and
icebp
jmp
cld
jne
jno
retf
jns
jne
pop
daa
inc
sahf
jo
or
int
xchg
cdq
std
or
imul
adc
loop
test
jb
shr
push
icebp
xor
push
leave
pusha
mov
imul
test
ficomp
mov
xor
add
cmp
xchg
pop
fimul
mov
xor
enter
mov
xor
add
(bad)
sbb
xchg
mov
sub
movs
addr16
clc
xchg
pop
scas
pop
(bad)
out
fldenv
retf
mov
xlat
mov
and
sar
loop
inc
add
int
iret
mov
add
xor
stos
pop
adc
rcl
inc
sbb
idiv
mov
ret
mov
retf
nop
repnz
mov
iret
mov
dec
or
mov
loopne
sub
scas
sub
std
xchg
rol
xchg
fisttp
xor
add
in
sub
rol
dec
and
in
jno
push
mov
pop
inc
cmp
fcom
jb
pop
cmp
stc
rep
or
mov
and
rcr
cmp
fs
shr
scas
repnz
push
imul
xchg
sub
test
xchg
cmp
lods
in
rcr
sti
and
popa
(bad)
mov
inc
push
sub
fisttp
mov
sar
add
dec
push
scas
rcl
stc
hlt
in
cs
stos
pop
fdiv
call
dec
pop
(bad)
outs
xor
sub
inc
jg
scas
push
in
mov
cs
repz
movs
jbe
ja
pop
ins
cmp
retf
out
jmp
jb
ds
repnz
cdq
lock
iret
xor
xlat
sbb
or
xlat
sub
shr
(bad)
int
sbb
mov
aaa
je
push
cmp
hlt
into
aas
stc
push
movs
mov
adc
jae
add
iret
or
jg
jmp
jae
std
loope
jg
leave
cmps
or
push
and
fnop
fistp
pop
pop
jb
aas
xor
adc
dec
sbb
retf
pop
sti
mov
retf
push
or
jle
or
fnsave
mov
lahf
pop
mov
movs
and
mov
sub
sub
fild
and
mov
pop
mov
xor
push
jne
shl
lahf
imul
jle
and
lds
mov
pop
repnz
sub
push
mov
pop
or
into
sti
adc
call
aam
add
mov
jne
sar
jecxz
je
test
pop
push
and
movs
ret
push
retf
push
and
cmp
and
push
shr
adc
cmp
inc
sub
repnz
push
(bad)
lahf
xor
jecxz
jg
cwde
pop
fld
pop
jecxz
mov
cmp
retf
sysenter
jmp
xchg
fsubrp
inc
fadd
pop
inc
mov
jl
mov
xchg
in
fsub
movs
inc
out
ins
std
inc
push
inc
into
push
out
xlat
shl
stos
jg
daa
addr16
les
dec
inc
(bad)
lds
ret
sahf
pop
(bad)
lahf
inc
(bad)
aas
adc
pop
les
gs
lea
aas
mov
leave
pusha
add
out
out
pop
mov
pop
retf
es
sar
jp
inc
add
cmp
mov
and
sbb
out
push
cmc
xchg
retf
pop
pop
inc
fwait
jo
ret
cwde
out
fsubrp
push
fiadd
mov
push
xchg
ins
jg
test
jnp
int
dec
popa
repz
adc
push
adc
jae
push
jecxz
aad
shl
aas
pushf
jns
outs
xchg
and
mov
jge
and
(bad)
xor
xchg
dec
cmp
int3
push
aas
pop
and
pop
xlat
call
mul
mov
test
lods
movs
and
fstp
xlat
js
cmp
fcom
mov
sbb
and
sub
ins
push
repnz
imul
jp
stos
sbb
pop
jg
adc
mov
jbe
mov
mov
sbb
dec
push
(bad)
or
inc
xlat
add
cmp
push
sub
xor
fwait
jl
xlat
cmp
xchg
js
push
pop
mov
std
and
int3
test
mov
adc
enter
mov
jb
out
mov
(bad)
movs
(bad)
xchg
pop
dec
or
enter
imul
js
sti
lock
in
ins
bound
push
fild
ret
sub
add
daa
xchg
mov
retf
and
xchg
adc
xchg
mov
mov
movs
repnz
xor
mov
hlt
cdq
adc
xchg
int3
jno
cmp
cmp
pop
mov
or
sbb
aaa
xor
sub
lock
aad
jmp
add
aas
adc
add
pop
test
out
lock
inc
f2xm1
inc
shl
xchg
lods
pushf
rol
fdivr
mov
iret
repnz
pop
test
inc
stos
stc
push
ja
xor
xor
pushf
int3
lock
aam
imul
xchg
arpl
adc
dec
call
mov
and
or
lds
cmp
add
mov
jmp
and
aad
js
(bad)
push
sbb
xor
inc
ffreep
jle
iret
sbb
dec
lods
(bad)
xor
pop
jbe
jge
icebp
jbe
jmp
mov
aas
mov
loope
pop
cmp
das
std
and
dec
inc
leave
cmp
pop
xchg
mov
sbb
retf
and
pop
dec
mov
movs
jo
ja
fs
aad
fdivr
ret
ror
out
adc
fidivr
fistp
loop
xchg
out
sub
neg
dec
loop
std
pop
sahf
jl
imul
and
loopne
scas
(bad)
push
jmp
aad
in
cmp
xchg
shl
and
test
in
or
sub
xchg
mov
jns
and
inc
mov
jns
in
xchg
test
nop
daa
out
pusha
mov
jp
jns
or
dec
ins
call
fnstcw
adc
inc
ds
mov
mov
push
jbe
inc
fiadd
inc
xchg
adc
inc
hlt
inc
daa
ds
mov
and
push
push
pop
scas
in
mov
push
lea
or
jo
in
rcr
pop
arpl
(bad)
stos
ret
or
icebp
add
lahf
inc
(bad)
call
sti
ss
fist
pop
sahf
daa
mov
retf
and
rcr
cmp
(bad)
fcmove
je
cmc
xor
fdivr
ja
jmp
pop
ret
movs
test
sbb
or
inc
mov
bnd
pop
mov
cmps
out
ret
stc
ds
mov
(bad)
cld
data16
fdivr
in
inc
ja
(bad)
movs
pop
xor
push
jnp
dec
pusha
je
sub
sbb
hlt
mov
pop
retf
fdiv
xchg
sub
ja
mov
xor
sub
iret
test
xchg
and
adc
aad
and
mov
prefetchwt1
or
repnz
push
adc
xchg
movs
fucom
inc
sub
out
in
pushf
mov
aad
addr16
loope
mov
enter
jns
movs
shl
clc
pop
into
loope
xor
pusha
call
lods
call
inc
jp
push
push
test
leave
jne
hlt
scas
ja
fild
fnstenv
loopne
popa
push
jp
sub
xor
sub
jae
jg
int3
(bad)
loop
and
mov
jbe
or
pop
jae
aad
add
mov
fild
push
mov
push
xlat
or
jmp
ss
fmul
idiv
xchg
mov
js
mov
jmp
mov
jbe
cdq
fbstp
jmp
xchg
add
sbb
push
fcmove
ret
push
retf
(bad)
jp
jl
fnstsw
retf
ja
scas
jecxz
dec
pop
sub
push
cmp
enterw
sar
sbb
cdq
mov
jne
js
inc
mov
mov
jl
sbb
sub
mov
dec
and
fdiv
iret
in
mov
ins
call
bound
adc
mov
sahf
adc
mov
repz
mov
cmp
add
(bad)
adc
sub
inc
or
lea
sbb
imul
sub
and
push
test
inc
out
push
mov
lea
xor
pop
sbb
cmc
dec
inc
pop
cmps
int
cmp
sub
bound
(bad)
das
cld
and
pop
xchg
loope
jle
cli
xor
in
inc
in
adc
push
add
mov
add
cmp
data16
push
(bad)
jno
std
push
lods
push
sar
push
lds
stos
mov
setns
movs
rol
sbb
shr
jnp
jbe
adc
aad
mov
fs
mov
ins
clc
into
pop
mov
and
push
jno
jmp
sub
sahf
sbb
xor
ret
std
lods
fcomp
fcomp
jne
and
mov
push
cmp
test
rcr
pusha
daa
or
pop
repnz
sub
inc
aaa
cmp
cli
pusha
mov
repz
cmp
(bad)
ror
push
inc
out
and
fistp
dec
jne
iret
and
retf
or
mov
or
dec
sub
add
push
lock
stc
int3
and
inc
arpl
sub
(bad)
shr
ror
mov
and
sub
jmp
shl
shl
inc
and
mov
pushf
fisubr
popf
xor
ss
jo
out
dec
or
pop
xor
jge
push
jmp
xchg
mov
loopne
test
jmp
push
clc
jae
stos
sbb
or
inc
pop
push
pop
call
inc
xchg
fcmovnbe
(bad)
outs
sbb
or
jnp
pop
in
je
or
mov
shl
fist
pop
pop
(bad)
stc
ror
lock
aam
stos
cli
sub
mov
cmp
paddusw
cmp
mov
add
xchg
popf
cmp
cmps
(bad)
mov
in
ins
nop
xchg
pop
jno
les
inc
sub
push
cld
stos
dec
cmp
push
sub
cmp
push
cmp
push
add
sub
sub
xor
mov
jge
ret
jno
cmp
push
xor
jnp
out
or
xchg
xor
sub
jle
dec
jo
ja
int3
mov
sbb
aaa
aaa
cld
pusha
push
(bad)
js
lods
nop
mov
stos
aam
cmps
cld
pop
out
or
loop
emms
jb
loope
mov
stos
mov
ins
inc
rcpps
xchg
or
cmp
jp
fld
iret
shr
dec
cmp
popa
push
adc
add
aaa
add
int
xor
or
mov
hlt
jmp
pop
jl
mov
ret
sub
add
or
ror
fs
xchg
add
add
stc
or
jbe
push
dec
mov
sub
xor
fnstenv
jge
adc
fisubr
sub
jo
rcr
hlt
xor
mov
fcom
pushf
cmp
(bad)
lea
cmp
lods
(bad)
and
je
mov
and
nop
mov
retfw
test
inc
in
mov
ss
ret
mov
ins
xor
sub
jge
sbb
mov
cmc
aaa
mov
sub
je
sub
movs
(bad)
bound
inc
in
aad
pop
std
ja
pop
mov
jle
push
or
aaa
or
icebp
cmp
or
ret
mov
loop
fld
and
int
mov
loopne
dec
cmp
mov
mov
jge
push
dec
xor
mul
mov
cmp
lods
fcom
sbb
(bad)
pop
or
cmp
lods
jmp
(bad)
jbe
test
cdq
adc
mov
sar
data16
push
ja
out
dec
loopne
pushf
retf
(bad)
mov
mov
mov
enter
(bad)
cdq
(bad)
mov
outs
xor
xchg
loope
cld
cmp
adc
das
loopne
mov
xor
ror
push
sub
or
jecxz
mov
dec
xchg
sbb
rcr
icebp
popf
add
inc
stos
or
dec
aam
sub
pusha
repnz
out
test
aad
xor
retf
inc
shl
lahf
cmp
fcomp
jno
add
loope
cld
push
and
sub
data16
stc
add
bound
out
mov
ds
adc
jl
adc
daa
xor
sbb
and
push
inc
jbe
dec
mov
xchg
push
adc
sub
or
movs
dec
pop
call
add
ss
pop
jb
shl
int
in
jmp
or
jnp
jle
jge
pop
push
pushf
jns
dec
sbb
leave
push
dec
mov
aam
push
add
and
js
mov
or
(bad)
inc
xor
test
(bad)
jns
xor
or
sub
xor
shl
test
(bad)
neg
jp
cmp
jbe
mov
pushf
stos
xchg
mov
and
mov
rol
aam
push
lahf
and
cmp
dec
cmp
cmps
arpl
mov
pop
push
shr
mov
and
or
xchg
and
mov
sbb
popf
inc
jle
mov
or
jns
mov
pop
dec
cmps
cmp
or
test
inc
cmp
int
aad
mov
rep
fadd
repz
xchg
cld
outs
xchg
sahf
ret
stc
icebp
sbb
or
fsub
aaa
push
outs
xor
bound
std
pop
and
mov
fcom
nop
and
inc
in
sub
xor
jnp
jl
(bad)
arpl
or
call
pop
and
mov
jno
jbe
mov
out
imul
dec
outs
xor
dec
mov
inc
and
(bad)
sub
sub
push
inc
xchg
popa
add
jne
add
fwait
in
mov
repz
loopne
push
pop
daa
sbb
xchg
adc
push
mov
add
retf
mov
cmps
mov
mov
mov
mov
dec
inc
push
add
popa
mov
js
jl
sbb
mov
cmps
ins
mov
mov
loopne
mov
xchg
fsubr
or
paddusb
pop
ins
in
or
jo
add
mov
into
fiadd
(bad)
retf
in
loop
fst
repz
inc
in
fs
cli
out
cmp
inc
repnz
mov
jbe
mov
neg
mov
in
stos
retf
pop
mov
jecxz
pusha
mov
add
pop
sub
stc
ja
(bad)
cmp
jl
sbb
and
cmp
cmp
pop
push
jp
ret
mov
call
push
jg
test
xor
jp
rcl
cmps
adc
xor
cmp
test
sub
xchg
jp
cli
mov
sbb
cmps
sahf
inc
inc
rcr
mov
cld
dec
stos
pop
dec
aam
clc
je
sub
popa
aas
pop
push
fs
jp
bound
mov
xchg
inc
daa
lods
pop
nop
and
adc
test
mov
mov
test
les
dec
rsqrtps
mov
aas
mov
jo
xchg
jnp
jmp
xlat
das
fcomp
sub
sub
jb
call
dec
pop
push
mov
call
out
adc
fstp
sbb
fstp
xor
stos
fdivr
cmc
push
scas
ins
stos
and
addr16
mov
ss
out
mov
inc
ja
cdq
sub
sbb
pop
aaa
dec
pop
mov
in
pop
mov
cmps
out
shl
add
pop
lds
sbb
aam
div
mov
fadd
sub
mov
xor
addps
or
jne
dec
(bad)
cmp
jae
lahf
mov
outs
ret
or
sbb
dec
aas
bound
pop
mov
mov
pop
das
sbb
pop
adc
mov
push
imul
call
into
lods
or
sub
aaa
popa
ds
aaa
mov
fstp
jb
jp
add
xchg
aaa
mov
clc
jmp
inc
imul
lods
outs
sti
inc
imul
pop
or
jmp
movs
jmp
and
(bad)
std
pop
adc
stc
(bad)
call
xor
enter
adc
cmps
cmp
sti
push
lock
sub
push
xchg
scas
mov
xor
dec
and
fwait
lock
popf
xor
hlt
sbb
cmc
addr16
sub
repz
cdq
sbb
dec
js
aad
pop
add
iret
inc
add
or
leave
test
inc
repz
std
push
cld
jp
loopne
xchg
mov
pop
pushf
or
mov
dec
xchg
inc
cmp
ror
rol
pop
mov
movs
jl
mov
arpl
pop
or
inc
adc
xor
jo
xchg
in
shr
or
cli
call
push
in
inc
popa
jle
mov
sbb
call
imul
lock
(bad)
adc
test
cs
test
pop
mul
pop
cmc
jmp
sti
mov
push
cmps
daa
jg
mov
inc
(bad)
imul
add
sbb
xchg
pop
not
add
mov
and
dec
mov
xchg
pusha
rol
test
push
mov
addr16
pushf
sbb
test
(bad)
imul
jb
popf
mov
shl
jecxz
test
ins
retf
push
ret
mov
push
pop
cs
inc
repnz
repnz
mov
xchg
push
enter
inc
add
push
mov
push
inc
pusha
or
add
(bad)
adc
jg
xor
enter
pop
cli
xor
iret
adc
sbb
xor
or
dec
retf
repz
adc
cmp
fdiv
in
hlt
add
or
cli
stc
add
jecxz
lahf
(bad)
or
(bad)
lock
xor
daa
adc
loop
dec
pop
pop
data16
ret
inc
sub
scas
popf
fist
pop
jecxz
jnp
mov
ret
add
loopne
add
pop
add
push
jnp
int
outs
mov
icebp
(bad)
scas
ss
mov
cs
and
inc
push
test
ja
lahf
sti
test
mov
jg
div
fnstsw
xor
xor
popa
(bad)
fdivr
add
pmaddwd
lods
mov
ins
push
or
mov
cmc
pop
fistp
outs
or
sbb
inc
push
jmp
fsubr
and
mov
add
inc
xchg
fistp
aas
jnp
lock
and
imul
jg
cwde
pop
mov
pop
ret
out
jecxz
gs
popa
jne
xor
and
nop
xchg
std
popf
cmc
or
dec
sbb
rol
push
retf
mov
jbe
add
shr
mov
xor
rcl
adc
jp
adc
mov
cmc
pop
xchg
loopne
cmp
inc
mov
pop
mov
add
addr16
push
dec
rol
mov
ins
ror
or
mov
sub
sti
into
mov
inc
pop
mov
cmps
add
cli
xchg
call
sbb
repnz
ret
retf
(bad)
mov
cli
cmc
or
or
pop
pop
jnp
dec
xchg
cwde
pop
mov
pop
ins
pop
pop
nop
repnz
xor
mov
jl
mov
leave
ins
and
clc
pop
fist
jo
retf
cmps
jle
or
dec
push
je
mov
in
mov
and
(bad)
push
xchg
(bad)
sbb
inc
sub
sub
jmp
stos
(bad)
fld
imul
sub
push
jae
test
mov
out
retf
pop
repnz
sbb
mov
pop
cli
inc
or
iret
or
ds
add
xor
ret
cmp
into
mov
out
and
pop
psllw
iret
mov
(bad)
sbb
pushf
popf
fcomp
cli
xlat
jl
ret
xchg
push
or
shl
hlt
push
and
or
dec
lock
ret
inc
fwait
inc
retf
sbb
sti
push
ins
xor
pop
repnz
sbb
mov
adc
loope
int3
movs
lods
sti
inc
xor
pop
xchg
aam
pop
stos
int
xor
sub
out
ins
xchg
test
cmps
and
jecxz
sub
leave
fdivrp
les
push
or
fsub
stc
push
or
mov
jb
cmc
mov
lahf
add
xor
mov
cmps
sbb
lahf
sub
or
jnp
adc
cs
xchg
and
sub
push
jae
xchg
pop
xchg
add
dec
sub
jl
inc
xor
xchg
dec
bound
push
sub
(bad)
jg
shl
and
jmp
add
movs
hlt
es
jl
jp
push
cmp
add
jns
and
lahf
test
mul
xor
not
dec
xchg
mov
add
addr16
and
cmc
(bad)
out
add
in
in
sub
jg
inc
ss
cli
pop
jne
sahf
in
mov
push
jae
pop
stc
nop
std
adc
loop
popa
into
inc
leave
mov
ret
jge
daa
into
cld
inc
imul
adc
pop
mov
ficom
jmp
mov
loope
in
mov
mov
out
aad
mov
xchg
movs
enter
(bad)
mov
and
and
add
mov
ror
jle
or
cmp
mov
(bad)
nop
jnp
ins
inc
xchg
xchg
jle
jno
rol
repnz
mov
mov
cli
in
das
test
cdq
fiadd
mov
cmp
mov
jmp
(bad)
mov
pop
test
call
ja
iret
add
(bad)
cmp
inc
push
or
pop
addr16
mov
jg
ror
sahf
add
rol
xchg
sbb
fs
rcr
dec
retf
jae
popf
rol
push
cmp
out
pop
sub
inc
sbb
data16
inc
pop
jnp
or
cmp
pop
dec
imul
adc
mov
mov
xchg
rol
sbb
jecxz
push
xchg
inc
outs
test
mov
pop
fucomip
mov
sub
pop
cmps
inc
push
int
cdq
jg
addr16
xchg
adc
dec
sbb
jmp
push
or
pop
inc
popf
movs
cld
jbe
sbb
mov
inc
sbb
and
cmc
test
dec
mov
pop
mov
mov
shr
out
icebp
mov
xchg
retf
hlt
loope
jg
mov
inc
fild
test
into
addr16
mov
test
mov
xor
add
imul
rol
and
retf
jnp
push
pand
jbe
adc
cs
test
fwait
int
je
push
nop
fadd
jge
into
pusha
push
ret
mov
mov
out
ins
enter
repnz
cmp
and
or
jne
add
sar
imul
(bad)
sbb
jg
xor
clc
add
pop
mov
(bad)
jl
sahf
shl
push
push
add
or
jae
fist
popf
test
stos
push
sub
fst
and
jge
or
mov
test
or
aas
fcomp
cld
out
adc
or
fwait
pop
sbb
dec
cmp
push
mov
pop
idiv
int3
pusha
out
repz
hlt
shl
xchg
or
scas
inc
pop
push
adc
test
dec
adc
cmp
jge
inc
push
mov
jnp
jne
xchg
pop
setnp
rcl
jne
add
int3
outs
mov
mov
imul
cmp
loope
inc
push
js
jmp
pop
sbb
adc
mov
sbb
cmp
add
push
or
aaa
inc
add
and
or
add
jnp
mov
fnsave
xor
mov
jle
inc
cmps
idiv
push
test
dec
or
adc
cmp
mov
shr
dec
jno
in
push
adc
xor
int
into
or
dec
dec
dec
and
adc
loope
mov
aaa
mov
ret
jb
push
adc
mov
in
pushf
int
or
mov
pushf
and
inc
push
jl
ins
jns
cmps
jp
pop
call
xlat
dec
jl
pop
fs
xchg
push
stos
jne
or
int3
and
lods
je
in
mov
test
ret
ret
arpl
pusha
push
(bad)
in
add
push
mov
jnp
clc
dec
cmp
ins
fcmovnb
and
pop
add
popa
inc
stos
fldcw
stos
div
pop
lods
push
ret
call
add
test
les
int3
adc
hlt
fiadd
ret
or
jae
ret
lock
cwde
aaa
xlat
cmc
dec
aam
dec
mov
in
int
leave
mov
or
hlt
daa
int3
jno
sub
xchg
(bad)
adc
arpl
push
fistp
(bad)
pop
cs
mov
cld
sar
and
fisttp
out
xchg
jbe
lock
cmp
js
pop
xor
mov
std
xor
cmp
mov
inc
nop
pop
mov
out
and
jp
in
ret
mov
popf
mov
push
lock
mov
xchg
or
jnp
std
or
jl
cwde
jmp
adc
sbb
retf
jnp
xor
dec
add
xor
mov
pop
imul
lea
div
push
(bad)
ret
mov
or
dec
retf
xchg
aas
sub
jno
xchg
movs
push
jae
inc
pop
jno
sbb
pop
jmp
adc
inc
mov
js
pop
push
movs
mov
adc
inc
lods
inc
out
push
push
dec
xor
addr16
cmp
mov
out
xchg
push
repz
jo
push
inc
loop
je
mov
xor
js
dec
and
ret
sub
repnz
mov
mov
neg
or
and
jae
or
fdivp
fld
cs
dec
sub
data16
dec
cmp
inc
fisttp
push
leave
mov
rcr
stc
fld
xchg
scas
fnstsw
cmp
adc
xchg
or
and
sti
sti
lods
outs
sbb
dec
fisttp
xor
xchg
lods
add
jp
xor
xchg
test
pop
cmps
xchg
adc
xor
adc
dec
loopne
mov
and
mov
mov
dec
movs
inc
inc
mov
dec
cmp
xchg
adc
int
pop
fwait
pop
inc
das
shl
mov
mov
sbb
addr16
jb
js
pusha
xor
mov
and
aas
jmp
lods
xchg
jne
mov
in
aam
push
add
sar
jge
pop
imul
(bad)
or
leave
outs
call
jmp
pop
xchg
mov
mov
push
daa
dec
xor
fld
loop
mov
rcr
sbb
jge
sbb
or
nop
mov
mov
mov
jmp
and
aam
mov
adc
enter
pusha
test
and
mov
sub
xchg
push
add
imul
inc
jb
loopne
pop
push
jge
fcomp
pop
mov
jo
and
push
cwde
xchg
cmps
cli
mov
(bad)
aas
or
movs
(bad)
popf
xor
repnz
jle
out
sbb
aaa
fcom
push
retf
jmp
and
mov
movs
xchg
push
sub
mov
or
(bad)
mov
jg
mov
fs
arpl
adc
xor
arpl
xchg
lock
ds
out
iret
out
fadd
adc
sub
jae
jl
sub
mov
mov
mov
dec
out
mov
or
push
inc
ins
rol
mov
(bad)
cld
mov
ret
or
cmp
mov
push
fldcw
mov
fild
cwde
lock
popa
mov
mov
popf
frstor
loope
push
dec
pushf
bnd
mov
or
aas
add
xchg
mov
enter
push
inc
adc
retf
lock
lea
lods
push
iret
cmp
test
xchg
shr
imul
push
cld
push
daa
call
idiv
push
mov
cli
inc
cmps
nop
lahf
xchg
adc
popf
or
lock
and
or
(bad)
in
adc
mov
mov
arpl
jmp
idiv
adc
dec
(bad)
out
inc
jbe
push
cmps
fdivr
sbb
push
mov
sub
sub
aad
cld
xor
(bad)
shl
in
pushf
mov
int
aas
imul
cmp
ror
dec
sub
push
test
cmp
test
retf
mov
ss
adc
(bad)
es
mov
push
ret
dec
mov
cld
mov
sub
xchg
repz
cmp
lods
jnp
rol
mov
fiadd
mov
test
push
pop
push
jnp
xor
jne
mov
loop
int3
mov
mov
neg
repz
adc
test
leave
loope
ins
mov
fucom
idiv
stos
adc
push
data16
mov
gs
jnp
mov
ins
fwait
cmp
dec
sub
mov
mov
sbb
add
aas
pop
sbb
or
rcr
arpl
call
mov
xor
mov
mov
loop
loope
xor
rcr
test
xor
xor
daa
inc
out
shl
jo
je
add
sub
or
inc
pushf
push
fwait
retf
rep
cmp
test
push
mov
sub
pop
xor
cmp
xchg
jo
mov
into
sbb
(bad)
retf
inc
cmp
scas
adc
or
and
dec
fdivr
and
xor
push
icebp
xchg
mov
je
sbb
or
cmp
loop
fsub
lds
sbb
inc
push
fnsave
pop
fcom
stos
jmp
adc
and
mov
jecxz
cmp
stos
stc
xor
rcr
or
mov
cmp
test
jmp
ror
xchg
cmp
mov
mov
mov
or
push
xor
pop
cmp
out
mov
inc
push
push
sbb
test
loop
add
jae
sub
add
arpl
inc
pop
sbb
xor
jmp
frstor
les
xchg
add
sti
adc
ss
push
rol
gs
mov
dec
fs
call
les
jns
xchg
imul
adc
adc
and
mov
jp
lock
adc
sub
shr
cdq
out
mov
xor
and
cwde
bound
and
add
pop
xchg
mov
hlt
add
dec
popa
pusha
push
iret
or
inc
in
inc
cmps
ins
and
into
mov
psubusb
mov
sbb
pushf
pop
cmp
jae
dec
push
pushf
mov
jmp
jne
pop
ins
push
inc
adc
aam
inc
in
mov
out
dec
jnp
aad
and
cdq
xchg
test
scas
(bad)
and
cwde
jp
movs
cdq
jl
test
and
ficom
int
fdivr
arpl
cli
es
loopne
push
ins
or
xchg
adc
pop
mov
movs
xchg
pop
in
cmps
cmp
jo
pop
mov
dec
sbb
enter
ins
retf
xchg
mov
jb
jl
mov
push
xchg
mov
jbe
xor
je
push
nop
bnd
mov
cli
pushf
fisttp
jp
jmp
(bad)
jmp
inc
call
jp
adc
xchg
repnz
ret
cdq
mov
inc
xchg
aas
cmp
cmp
ficomp
idiv
(bad)
push
out
sar
sbb
jns
mov
imul
mov
push
cmps
pop
dec
pop
and
add
outs
pop
pop
(bad)
cwde
arpl
sub
cmps
jbe
and
and
in
mov
mov
jno
push
shr
cmp
sar
dec
jae
xchg
cmp
repz
das
retf
jne
aad
mov
mov
test
sbb
xchg
or
add
mov
cmp
outs
stc
addr16
mov
cwde
sar
pop
ja
pop
pop
sbb
mov
inc
cld
jmp
mov
mov
jno
enter
fsub
inc
xor
jg
inc
hlt
adc
push
xchg
mov
push
pop
loope
popa
enter
(bad)
int
mov
call
jmp
inc
xchg
sbb
mov
stos
stos
movs
push
in
and
ror
arpl
stc
out
adc
jns
mov
icebp
out
jne
(bad)
movs
dec
addr16
test
xchg
cmp
pop
stc
mov
cld
call
or
or
and
mov
aad
mov
pop
cdq
inc
add
sub
aad
sahf
xlat
add
scas
iret
inc
add
xchg
mov
mov
in
add
and
inc
idiv
jle
inc
or
shl
jb
mov
mov
xchg
dec
mov
adc
cmp
ret
sub
sub
sbb
xchg
inc
fidivr
pop
pop
inc
jae
sbb
mov
test
outs
in
cdq
add
xchg
fadd
xor
std
arpl
pop
sub
dec
(bad)
cmps
jp
sub
dec
and
mov
shl
stos
cwde
cdq
pop
jnp
jle
add
sahf
test
inc
mov
pop
sub
imul
inc
and
repnz
cmp
icebp
mov
in
dec
iret
ja
clc
lea
out
and
xchg
add
sbb
xchg
dec
scas
push
sub
add
dec
loopne
push
retf
push
add
xchg
adc
cmp
ins
(bad)
das
stos
fcom
and
xchg
push
rcr
out
or
test
sbb
push
bound
inc
push
fwait
cmp
jmp
bnd
fldenv
outs
mov
ret
xchg
or
and
pusha
ret
scas
je
mov
cmp
pusha
jbe
rcr
je
dec
cmp
in
movs
sbb
sbb
dec
jbe
push
je
iret
push
and
repz
shr
mov
cwde
adc
sbb
sahf
cmc
mov
ins
pop
jne
out
mov
cld
dec
out
(bad)
or
loope
cdq
mov
adc
xchg
mov
cmps
popf
adc
dec
pop
cmp
mov
inc
xor
jl
xor
clc
pop
sbb
dec
movs
mov
mov
push
shr
and
mov
outs
jmp
inc
cmp
xor
gs
cli
pop
mov
xor
push
sbb
adc
add
cld
cmc
jo
push
lods
and
std
cmps
ds
ins
and
xchg
fcomp
sub
pop
mov
jmp
dec
imul
repnz
dec
inc
popa
mov
ds
sbb
mov
xchg
mov
sahf
sahf
lds
data16
pop
int3
xchg
push
rol
and
iret
fnstenv
mov
mov
jbe
enter
cmps
inc
mov
sti
pop
lock
or
fcmovnu
outs
std
adc
loope
imul
push
push
lods
outs
fld
mov
ins
jmp
pop
pop
jmp
jno
mov
int3
xor
dec
(bad)
mov
jecxz
add
pop
add
jnp
call
repz
mov
jmp
jl
bound
cwde
xchg
cs
loope
cmp
daa
loop
cmps
sub
sub
dec
outs
or
div
ret
add
xchg
les
push
iret
std
sbb
pop
xor
dec
daa
sbb
bound
pop
movs
sub
out
mov
cmp
push
jne
ret
mov
push
pop
mov
add
add
sub
push
addr16
ss
xchg
mov
pushf
push
mov
adc
dec
jns
outs
inc
dec
rcl
pop
xlat
pop
movs
(bad)
jo
xor
mov
push
sub
cmps
mov
cmp
fwait
mov
leave
lods
mov
jb
inc
add
dec
or
ja
adc
pop
jne
inc
xchg
adc
mov
cmp
retf
je
xchg
add
add
and
jb
push
add
mov
push
mov
sbb
xor
sub
jb
mov
ror
loop
push
cli
mov
(bad)
loopne
cmp
push
stc
test
sub
jne
ins
sbb
xor
repz
cmps
jp
scas
fcom
aad
ret
(bad)
daa
loope
xchg
js
sbb
jne
mov
cmp
call
pop
aas
jle
fidiv
(bad)
jb
sub
popf
sbb
es
(bad)
cmp
dec
inc
xor
mov
hlt
stos
jae
int3
scas
dec
push
iret
scas
in
jmp
ins
es
test
jl
add
lock
out
cld
xor
cwde
call
dec
inc
push
add
sbb
(bad)
mov
lock
ss
fwait
jo
push
bound
jne
sub
ins
daa
jecxz
sub
mov
add
bound
pop
or
xchg
fiadd
xor
(bad)
mov
or
adc
out
mov
ror
inc
sub
cmc
shl
test
or
dec
lds
stos
or
ss
sar
inc
mov
icebp
retf
fs
mov
jb
adc
je
inc
aas
xchg
mov
add
inc
cwde
fmul
jb
and
jmp
push
out
jmp
stos
mov
add
inc
lahf
ds
in
inc
add
sbb
push
jp
std
jecxz
adc
hlt
test
jne
cmp
movs
nop
cmps
test
xor
les
jecxz
add
into
mov
add
repz
test
mov
push
shr
sbb
jnp
into
sub
xor
leave
std
jo
fadd
push
outs
xor
arpl
int
sbb
inc
xchg
and
fstp
fisttp
out
in
mov
mov
lahf
test
out
js
xchg
test
fisttp
rcl
sbb
inc
mov
jae
retf
add
sub
fldenv
sub
push
sbb
rcl
scas
cli
pushf
sub
mov
pop
pop
outs
inc
sub
das
sub
leave
iret
inc
call
(bad)
lahf
sbb
aad
popf
xchg
add
dec
into
loop
or
lock
sbb
jns
test
push
addr16
aad
mov
cmp
fcmovnbe
add
xchg
jae
dec
(bad)
pop
addr16
ror
xchg
push
sub
into
outs
xor
sub
sub
gs
out
mov
dec
retf
dec
inc
cmps
jae
int
adc
push
cwde
jecxz
mov
mov
xchg
pop
push
sub
mov
and
sbb
adc
dec
cmp
jb
dec
das
call
pop
or
inc
mov
cmp
inc
sub
movs
xor
mov
mov
adc
imul
sub
mov
cmp
fs
cmp
jecxz
inc
sbb
mov
bound
sub
inc
and
mov
jp
xchg
pop
int
push
or
int
inc
xor
in
icebp
add
and
int
repnz
test
pop
mov
and
add
jno
rcl
imul
shl
mov
sub
push
xchg
(bad)
ds
mov
loop
stc
jo
leave
nop
inc
mov
mov
push
idiv
xor
sbb
add
add
dec
test
fiadd
stos
xor
lock
jns
jp
push
pusha
xchg
sbb
push
cmp
sub
push
into
fild
enter
and
mov
mov
in
cdq
pop
mov
rcl
in
push
loop
inc
cs
adc
adc
jb
out
fld
cmp
cmp
gs
repz
sbb
cmps
xor
jno
jbe
mov
mov
push
and
mov
test
retf
ror
data16
shr
loopne
mov
mov
pop
inc
std
or
dec
enter
loope
retf
jne
hlt
xor
jge
jae
dec
sub
aad
jmp
sbb
jg
push
mov
bound
jp
jp
aam
adc
in
mov
cmp
inc
inc
call
cmps
(bad)
test
shl
dec
push
leave
fsubr
xor
cmp
dec
adc
les
push
push
stc
mov
lea
stc
jae
jl
loopne
sti
mov
inc
jecxz
or
(bad)
sub
pushf
pop
push
jnp
inc
adc
cmc
or
jl
lds
lahf
(bad)
fadd
add
js
(bad)
ins
cmp
cs
test
repz
inc
mov
and
mov
xor
bound
xchg
pop
and
sub
jno
mov
mov
cmp
pusha
ins
ja
test
loopne
das
cmp
stc
arpl
data16
fistp
shl
clc
lahf
cmp
(bad)
mov
ret
(bad)
fstp
(bad)
ficom
ins
push
push
mov
popf
jecxz
movs
jmp
mov
cwde
add
and
nop
stos
push
movs
fcom
imul
cdq
sub
arpl
push
jge
out
mov
xchg
pop
out
in
jnp
mov
mov
lods
popf
xchg
repnz
nop
sbb
dec
sub
add
iret
loop
fdiv
fsub
movs
push
aad
push
pop
in
call
push
mov
jo
push
push
sbb
out
sub
jg
inc
mov
push
sbb
mov
shl
es
xchg
(bad)
pop
xor
adc
cmc
mov
xchg
mov
jl
(bad)
or
adc
xchg
cmp
jl
pop
int
ins
test
xadd
sbb
sti
xchg
push
cdq
xchg
xchg
jmp
sbb
jo
stos
int
loopne
stos
movs
dec
retw
arpl
cmp
outs
(bad)
dec
(bad)
sbb
or
icebp
cmovs
mov
gs
inc
mov
scas
pop
cwde
push
popf
repnz
das
sub
adc
ins
mov
xchg
pop
xor
add
sbb
adc
xchg
or
xchg
push
jge
mov
xchg
dec
inc
and
mov
jle
daa
daa
mov
sbb
mov
sbb
push
ss
add
dec
lahf
pop
sub
idiv
push
ficom
cmc
inc
push
sub
in
call
sub
inc
icebp
je
add
std
push
xchg
out
(bad)
pusha
push
sub
add
and
cmps
lods
retf
(bad)
out
jp
retf
cmp
jge
inc
add
cmp
cmp
or
dec
sub
retf
imul
test
(bad)
test
idiv
icebp
movs
sub
adc
push
lods
sub
xchg
shl
or
jge
jb
cmp
pop
pop
and
es
lock
fcmovne
or
je
outs
mov
adc
pop
xchg
push
and
shl
jmp
repz
shl
cwde
sub
xor
inc
shr
mov
xor
es
les
sub
sub
stc
pop
fucomp
(bad)
std
outs
inc
and
in
fild
aas
call
(bad)
push
pop
aaa
pop
sahf
test
scas
mov
mov
mov
or
leave
pushf
jmp
aas
and
adc
pusha
push
stc
stos
dec
ror
das
lock
ret
mov
scas
add
imul
repz
and
adc
mov
ds
adc
push
in
dec
aad
scas
mov
mov
adc
mov
mov
in
ss
adc
popf
movs
js
pop
xor
lahf
rcr
retf
mov
cmps
mov
test
aas
sbb
int
and
or
call
inc
or
mov
daa
add
push
add
repz
aas
stos
retf
or
stos
clc
sub
push
jp
jg
jb
push
or
mov
movs
sbb
sbb
xchg
mov
push
in
jns
mov
mov
mov
test
sub
pop
das
inc
repz
jl
adc
mov
sahf
add
push
fxch
ret
mov
repz
int3
sub
iret
mov
js
push
aad
stc
and
pop
add
in
sbb
and
cwde
fnsave
or
int
int
pop
cmp
loope
mov
adc
fdiv
jg
cmp
stos
add
pop
ins
in
stc
dec
cmp
adc
test
shl
or
inc
or
pop
mov
fs
sahf
ret
pop
retf
pop
mov
sar
int
sti
inc
out
mov
scas
scas
movs
fsub
sbb
push
mov
push
repnz
std
or
nop
neg
cmp
mov
jp
push
and
and
inc
aaa
sbb
mov
jb
movs
stos
pop
mov
push
loope
scas
and
jmp
cwde
adc
retf
out
fild
jp
xchg
rcl
jecxz
mov
out
sub
and
test
push
or
ss
jge
mov
mov
xchg
add
sbb
in
pop
das
(bad)
jge
retf
fild
mov
test
ret
int3
and
push
xchg
retf
into
dec
and
mov
fs
sti
mov
test
mov
xor
jne
in
es
sub
mov
lock
dec
(bad)
pop
cmp
test
ror
data16
aaa
(bad)
and
or
pop
icebp
xchg
inc
xlat
scas
imul
jmp
scas
mov
or
ret
jecxz
imul
dec
pushf
mov
je
rcl
mov
push
in
ins
fist
inc
lods
popf
jne
and
lods
adc
hlt
jmp
adc
lods
adc
dec
in
sub
lock
adc
fcmovbe
fcomp
out
ja
xchg
lds
dec
push
mov
dec
arpl
mov
xor
ror
gs
fs
cmp
inc
push
jmp
mov
mov
cmc
jmp
jne
push
adc
xor
repnz
xor
aad
sbb
out
mov
mov
add
fdivr
sub
sbb
and
xor
inc
adc
popf
mov
retf
mov
jns
ins
sbb
jns
fmul
rcl
mov
lock
dec
jns
inc
test
xchg
push
push
ss
cwde
sub
mov
push
sbb
enter
lods
div
pop
dec
pop
push
sub
fs
xchg
or
les
(bad)
loopne
mov
cmp
leave
in
out
jp
sbb
sub
fwait
mov
and
inc
ret
fbld
inc
repnz
fimul
fnstenv
cmp
std
dec
ror
into
dec
in
ret
int3
sbb
(bad)
movs
int
loopne
ins
jge
and
xchg
cwde
aas
sub
inc
ds
popf
ficom
inc
and
mov
adc
or
dec
out
pushf
cld
aas
adc
inc
xadd
jmp
das
xchg
cmps
push
inc
sub
mov
jge
push
rol
sbb
and
pop
sti
mov
jecxz
pop
jmp
mov
mov
mov
jmp
test
add
pop
sbb
jl
push
xchg
mov
sub
cmps
sub
mov
imul
in
mov
lods
xchg
or
mov
movs
les
shr
(bad)
outs
sbb
push
jle
sti
retf
sub
(bad)
aad
or
aad
aas
rcr
in
je
or
hlt
xor
jne
scas
push
xor
mov
mov
lods
cmps
cmp
es
push
fdivr
je
mov
leave
mov
ins
ds
jmp
out
mov
and
cwde
data16
lea
les
push
lods
cli
jmp
mov
leave
(bad)
(bad)
in
mul
gs
push
aaa
jecxz
jne
push
int
out
jno
popa
jmp
push
in
xor
jmp
sahf
mov
in
mov
daa
adc
adc
in
std
mov
cmp
pusha
dec
aas
xor
pop
not
int3
mov
es
sbb
jge
dec
push
lods
inc
jg
xor
push
and
sub
fs
aas
shr
cmp
dec
mov
leave
xor
jg
add
ins
sub
jnp
icebp
clc
mov
addr16
adc
and
xor
jo
dec
and
and
cld
xor
dec
ins
retf
push
push
cli
mov
add
sub
sbb
adc
mov
ins
or
ss
cdq
mov
gs
mov
pop
rcl
add
adc
dec
rcl
outs
cmps
rol
pop
add
xor
inc
sub
mov
and
push
lahf
cmps
adc
test
sar
inc
push
movs
outs
shl
jnp
pop
retf
in
mov
fdivr
std
icebp
ret
(bad)
shl
ja
xor
jmp
call
aas
lds
scas
loope
pop
mov
sbb
mov
test
arpl
cmp
scas
fsub
icebp
lds
push
push
outs
jge
sbb
mov
and
mov
pop
shr
loope
rol
fisub
test
scas
sub
pop
adc
dec
push
jne
inc
pushf
clc
hlt
or
nop
push
hlt
cmp
aad
or
xchg
or
loop
mov
ss
jge
mov
cwde
xchg
dec
inc
mov
cli
mov
outs
mov
xor
xor
ror
imul
push
cmps
inc
push
dec
test
aam
out
hlt
mov
jp
mov
sbb
cmp
out
adc
xchg
scas
jp
push
mov
push
mov
mov
sti
mov
xchg
out
or
mov
mov
jno
add
test
push
sbb
push
push
cmp
dec
mov
aad
imul
mov
in
sbb
ins
jne
xor
fwait
or
repz
mov
mov
pushf
pusha
pop
je
(bad)
xchg
push
repnz
cwde
dec
mov
jl
xchg
add
test
push
cs
jae
pop
inc
lods
outs
scas
popa
add
je
mov
fisttp
lds
stos
inc
jns
sbb
data16
pop
pop
or
cld
sub
jmp
pop
dec
ds
(bad)
in
test
int
xor
mov
sar
mov
movs
test
xor
jmp
fsin
lea
mov
push
cmps
inc
inc
outs
lods
mov
stos
jne
or
rep
mov
push
jns
test
outs
add
mov
in
rol
in
imul
pop
xchg
jg
xor
push
push
out
aaa
inc
push
sub
and
rol
(bad)
mov
pop
rcl
hlt
mov
mov
mov
pushf
jb
jb
test
push
pusha
jle
sahf
cwde
int3
lods
mov
fsubp
mov
(bad)
ins
jne
cld
push
xlat
cmc
shr
loop
arpl
dec
jns
dec
(bad)
out
push
fldenv
push
repnz
jns
or
inc
xor
push
daa
mov
scas
add
adc
ror
mov
(bad)
or
inc
jns
stos
and
inc
jmp
div
sbb
inc
cli
add
dec
xor
and
(bad)
outs
mov
je
sbb
sub
mov
push
add
xor
sub
mov
jecxz
sbb
jmp
(bad)
and
call
sub
mov
adc
xchg
iret
scas
arpl
push
mov
popa
sub
inc
mov
imul
je
test
mov
addr16
pop
imul
adc
ds
lea
push
mov
fsub
pusha
xchg
repnz
pop
in
clc
and
or
jbe
add
(bad)
inc
repnz
je
sbb
popa
mov
fcomp
jns
cs
jno
clc
sbb
xlat
nop
fdivr
sbb
push
cmp
fwait
pushf
mov
lock
hlt
add
fcomp
adc
xor
push
add
adc
aas
daa
mov
add
mov
jns
lods
ret
cmp
cmp
cld
and
xor
mov
mov
ds
sub
movs
outs
iret
dec
imul
adc
pop
imul
sbb
clc
sub
shl
movs
retf
shr
js
jmp
sbb
aas
clc
adc
pushf
inc
mov
in
xor
nop
sub
stos
xchg
ins
nop
add
cmp
mov
je
fdivr
test
inc
cdq
cmp
mov
test
test
pop
sahf
dec
aam
ins
jl
(bad)
sub
jo
fdivr
dec
or
or
mov
xchg
loope
ins
loop
push
stos
push
loopne
pop
inc
pop
cmp
jno
xchg
dec
or
pushf
ss
xor
scas
push
push
adc
and
cmp
xchg
mov
(bad)
cmp
mov
fisttp
(bad)
es
xor
add
mov
retf
repnz
mov
mov
add
xlat
xor
pop
loop
lahf
lods
cmp
sti
out
add
outs
ss
pop
inc
cmp
xor
ret
mov
mov
and
cmp
nop
add
popa
inc
(bad)
mov
add
sub
cld
xchg
into
dec
ins
lea
pop
xchg
mov
fwait
push
ja
jecxz
aas
divps
out
mov
mov
sub
lea
sbb
push
add
inc
movs
ret
dec
push
xchg
icebp
inc
retf
mov
sahf
shr
or
push
retf
int3
mov
fdiv
hlt
pop
bound
adc
lods
outs
jecxz
call
jge
mov
scas
add
sub
js
push
add
push
(bad)
fdivp
es
mov
and
es
add
mov
cmp
sub
jmp
pusha
pop
mov
and
scas
sbb
adc
adc
ret
or
xchg
mov
or
push
cli
sbb
or
es
das
add
pop
xchg
cmp
call
sahf
xor
xor
adc
imul
xchg
adc
jle
xor
mov
outs
test
in
scas
dec
f2xm1
xlat
es
enter
jns
xchg
ja
push
jno
nop
dec
sub
sub
jle
les
mov
ds
loope
cdq
pop
add
aaa
mov
jb
and
movs
xor
out
mov
icebp
sbb
push
push
ins
push
aam
jo
or
jnp
inc
outs
shl
mov
stc
lods
fimul
sti
mov
mov
xchg
test
mov
adc
xchg
pop
aaa
jecxz
popf
mov
outs
pop
bswap
sub
mov
mov
shl
out
dec
aas
jp
mov
dec
pop
mov
jmp
aad
sbb
or
pushf
sub
shl
fisttp
add
pusha
cld
fld
lahf
int3
stc
push
pusha
ins
cmps
xor
push
xchg
sahf
hlt
pop
and
call
ret
push
mov
mov
das
mov
jmp
aas
(bad)
mov
rcr
pop
dec
add
xchg
pop
fistp
pop
sub
in
retf
cmp
shl
cmp
fnstcw
fst
repnz
repnz
mov
scas
(bad)
pushf
pop
sub
test
adc
ins
and
mov
inc
mov
or
mov
enter
idiv
cmps
rcr
fwait
shl
cmps
xchg
loope
imul
push
add
test
outs
sahf
xchg
mov
mov
mov
and
lods
cmps
adc
mov
out
test
and
add
sbb
and
out
popa
aaa
xor
sbb
(bad)
or
(bad)
push
mov
shl
mov
inc
imul
sub
add
test
and
enter
xor
mov
cli
and
mov
movs
mov
cs
cmp
aas
shl
pop
(bad)
sub
cmps
scas
cmps
icebp
fcom
test
test
mov
sub
inc
xchg
inc
xchg
sbb
mov
sbb
cld
loop
inc
jbe
pop
je
add
gs
dec
xlat
push
add
loope
ror
icebp
rcl
cld
jno
enter
es
pop
sbb
or
repz
(bad)
sbb
xchg
inc
(bad)
adc
or
dec
fadd
pop
mov
add
inc
inc
sub
xor
or
mov
xor
icebp
(bad)
jae
jle
or
fidiv
scas
in
jp
pop
jg
mov
sti
adc
out
scas
pop
ins
movs
mov
je
arpl
ficom
adc
in
mov
cmp
lea
xor
data16
shr
jbe
ins
cmp
fstp
inc
retf
pop
loopne
jl
and
push
jle
aad
imul
stc
xlat
mov
repz
in
xchg
or
dec
daa
xlat
imul
mov
sub
sahf
(bad)
jp
je
int
adc
shr
aad
mov
inc
aaa
daa
js
mov
xor
pop
and
aam
pop
lock
fucomi
fistp
add
pop
ins
call
rcl
pop
dec
cmp
(bad)
mov
lods
stc
jmp
rcr
sub
fs
(bad)
pop
dec
stc
push
inc
xchg
cmp
mov
cmp
dec
enter
mov
jmp
ja
test
lods
jl
ja
aaa
int
push
pop
sub
mov
ret
enter
mov
or
add
inc
jl
mov
jge
pusha
outs
(bad)
outs
movs
inc
scas
dec
adc
jo
imul
bound
shl
adc
mov
xor
lahf
cmc
mov
addr16
in
or
push
mov
fbstp
fdiv
cli
arpl
xchg
retf
mov
test
ins
push
sahf
dec
pop
mov
and
pushf
jns
int
or
call
inc
inc
dec
mov
and
out
sar
jle
jb
retf
pop
ret
push
xchg
sub
jo
mov
out
dec
jnp
daa
outs
push
mov
fwait
pop
jae
pop
push
ret
gs
sub
(bad)
and
outs
retf
xchg
inc
mov
test
sbb
cli
pop
mov
sar
les
or
pop
sbb
sbb
mov
fs
fisttp
mov
sbb
xchg
imul
test
adc
dec
adc
arpl
add
cli
int3
inc
cdq
das
jno
ss
mov
aad
mov
rol
push
nop
xchg
aad
movs
test
inc
inc
ret
cdq
dec
sar
xchg
push
add
or
add
or
dec
iret
inc
cmp
outs
adc
fistp
scas
cmps
push
and
push
sbb
test
and
inc
dec
repnz
fsubr
and
inc
jmp
jle
mov
xchg
xor
loope
push
in
stos
jno
sub
pop
ins
sbb
pop
push
aas
cmp
mov
add
push
cmc
movs
push
dec
mov
(bad)
into
jge
stc
sbb
mov
sbb
or
mov
bound
out
xor
pop
dec
jg
push
dec
nop
or
mov
sbb
or
lea
xor
daa
mov
and
stos
mov
push
xchg
xor
call
xchg
mov
fsub
stc
cmp
cmps
sub
push
sbb
cmp
call
pop
jb
arpl
ret
fimul
test
add
(bad)
dec
jecxz
xchg
imul
loop
or
jmp
test
(bad)
(bad)
mov
(bad)
push
jne
mov
loop
dec
push
jg
imul
pusha
pop
fadd
cmp
pusha
adc
mov
shl
jmp
mov
in
mov
push
mov
(bad)
jb
pop
dec
cmp
xor
arpl
mov
push
jae
stos
mov
clc
jne
sub
mov
xchg
out
dec
retf
rcl
mov
mov
dec
xchg
rcl
stos
shl
ficomp
add
xor
jns
fild
mov
or
(bad)
cmp
mov
bound
and
stc
test
cld
jns
out
pop
mov
shl
es
scas
inc
jl
xchg
add
and
jbe
mov
jp
jo
mov
call
gs
and
mov
push
pop
cmp
dec
jbe
adc
pop
dec
inc
bound
dec
outs
jb
in
ret
rol
out
pusha
xor
xor
push
adc
add
fcom
mov
fs
mov
lods
cmc
fwait
call
or
add
mov
xor
sub
mov
inc
jnp
out
xor
arpl
or
or
sub
outs
retf
pop
and
push
inc
ds
in
lahf
mov
cmovne
aaa
and
or
repz
sahf
out
inc
adc
adc
(bad)
jne
in
mov
ret
jg
pop
jge
inc
and
stos
js
leave
(bad)
jno
mov
ds
inc
(bad)
pop
mov
cld
inc
daa
xchg
daa
pop
stos
sub
cmps
push
adc
popf
lahf
and
and
in
(bad)
mov
and
out
and
or
ror
pop
aaa
push
(bad)
sbb
repnz
loope
in
stos
mov
cmc
outs
push
lods
sbb
bound
mov
and
(bad)
repz
adc
and
lea
repnz
push
jnp
pushf
int3
aad
fild
sub
scas
stos
mov
mov
push
out
out
in
retf
push
fild
adc
jns
lea
dec
xor
pushf
int3
and
sbb
mov
scas
or
bound
retf
dec
mov
sub
stc
push
std
js
pop
jg
lock
call
mov
call
imul
int3
xor
stos
stos
inc
inc
sub
or
iret
mov
sub
int3
dec
jae
sbb
pop
(bad)
jae
mov
pushf
mov
loopne
out
int3
lods
push
iret
scas
dec
mov
in
dec
add
pop
int3
dec
mov
xchg
jl
(bad)
mov
in
adc
aam
fistp
jg
sti
sub
push
dec
into
sbb
jno
mov
mov
outs
cmp
pop
sub
cs
adc
outs
aas
adc
or
inc
pop
add
adc
mov
loop
scas
cmp
mov
mov
test
pop
xchg
into
inc
ss
dec
cld
xchg
das
push
(bad)
(bad)
repz
pop
ss
std
push
lods
lahf
mov
stos
cld
and
sbb
into
imul
xor
fild
pop
sbb
dec
cmp
daa
xor
(bad)
xchg
inc
aad
inc
sub
add
pop
repnz
or
lea
jb
movs
mov
icebp
je
inc
scas
jl
aad
pop
nop
inc
xchg
stos
pusha
fnstenv
les
es
pop
fs
out
or
mov
inc
rcr
retf
leavew
jae
std
push
add
imul
push
in
rol
jmp
gs
cli
inc
mov
mul
mov
jg
sub
into
xor
adc
pop
cdq
hlt
(bad)
xlat
fistp
push
jp
inc
mov
or
cmps
lods
mov
push
call
cwde
dec
mov
push
imul
push
fs
fist
dec
push
fistp
jp
lahf
test
enter
mov
push
int3
xchg
adc
and
data16
call
dec
cmps
jmp
jle
aam
add
dec
inc
mov
jle
aam
sub
jmp
test
jno
pop
cwde
dec
sub
rol
dec
mov
dec
shl
retf
movs
mov
aam
call
imul
jno
xor
sub
inc
jp
(bad)
repnz
cs
leave
pop
jecxz
and
push
repnz
pop
stc
lea
sub
nop
(bad)
pusha
inc
sti
aas
fnstsw
jmp
mov
retf
push
mov
addr16
(bad)
jo
adc
js
daa
mov
fs
(bad)
hlt
and
cwde
pop
pusha
pop
inc
and
fsubr
jno
xor
and
out
bound
into
rcl
add
movs
add
or
bnd
sbb
stc
dec
into
cmc
fidivr
popf
jnp
ror
jnp
arpl
mov
loop
fidivr
test
xchg
mov
lock
mov
sbb
push
adc
addr16
inc
leave
mov
fldcw
or
and
jl
adc
mov
(bad)
add
popa
or
addr16
aaa
movs
xchg
sub
iret
mov
(bad)
xchg
fcomp
fs
xchg
pop
pop
adc
jecxz
fild
mov
sub
cdq
addr16
les
test
xchg
adc
in
push
mov
mov
push
pusha
loope
stc
xchg
outs
xor
stos
dec
push
dec
mov
xchg
push
ds
and
out
popa
sbb
xor
xor
mov
and
mov
scas
gs
int3
mov
sub
inc
pop
lods
sub
xchg
mov
push
inc
xor
fwait
(bad)
or
ja
das
and
mov
leave
hlt
fwait
xchg
fnstenv
ss
es
sbb
jmp
mov
mov
sbb
loop
test
cmp
loopne
add
out
stos
jo
cmp
push
lock
sbb
dec
or
outs
daa
fdivr
cmp
dec
add
push
push
push
push
xchg
sbb
inc
movs
push
mov
ins
pop
push
add
mov
nop
icebp
rol
mov
sub
inc
mov
or
mov
fdivrp
inc
shr
mov
leave
mov
movs
mov
xor
loope
pop
loopne
movs
ins
and
mov
movs
sti
dec
(bad)
mov
in
push
push
sbb
aad
(bad)
sub
mov
and
cmp
mov
jge
nop
das
and
or
pop
inc
loopne
mov
enter
in
inc
test
call
xchg
bound
inc
jecxz
inc
adc
push
ror
mov
fs
cwde
sahf
(bad)
enter
xor
stc
or
and
stos
jge
fstp
sub
fwait
pop
repnz
push
dec
pop
std
xchg
or
mov
push
shl
xchg
stos
pop
xchg
gs
aad
iret
repz
sub
loop
push
iret
imul
adc
adc
mov
sub
mov
loope
cmc
xchg
sbb
sub
mov
push
gs
fwait
dec
mul
mov
cli
mov
inc
daa
push
jge
imul
fist
adc
imul
cld
xchg
ret
jae
test
fst
cmp
mov
push
cmp
std
cmp
mov
pop
inc
or
out
sub
sbb
mov
dec
cld
je
inc
or
mov
or
sahf
cs
shr
adc
btr
and
scas
pop
movs
vpmulhuw
inc
jl
stos
inc
icebp
icebp
inc
je
call
movs
dec
jmp
stos
sub
adc
sub
(bad)
dec
xor
add
addr16
adc
aaa
test
add
mov
test
xor
pop
out
push
dec
clc
inc
push
repnz
cli
dec
mov
das
inc
push
scas
cmp
sbb
push
cli
jbe
mov
nop
jp
cmc
xor
xchg
inc
ud0
add
dec
pop
imul
arpl
movs
sbb
rcr
jmp
add
cdq
loop
or
in
xchg
pop
pusha
or
xchg
mov
xchg
adc
xor
ins
mov
loopne
jns
and
xor
fdivr
jns
inc
dec
and
inc
cmp
mov
adc
jo
mov
js
lea
test
inc
cmp
pop
jg
scas
cs
outs
xor
and
mov
adc
adc
adc
inc
icebp
push
mov
movs
cdq
movs
add
push
je
pop
call
mov
hlt
sbb
imul
outs
and
lods
lds
mov
mov
xchg
mov
ds
and
pop
pop
ficomp
mov
xchg
lods
sbb
mov
fmul
xchg
popa
pushf
cs
mov
cdq
cmp
(bad)
mov
sti
mov
jmp
leave
repz
mov
dec
outs
js
xor
inc
repnz
sub
mov
nop
mov
sub
add
sar
mov
push
int3
call
aam
inc
push
sub
and
(bad)
dec
loope
not
sub
cmc
push
pop
jo
and
adc
aaa
out
dec
jmp
cmps
ja
ins
sub
(bad)
dec
adc
sahf
push
pop
mov
xchg
sbb
and
jno
pop
push
outs
imul
or
cmc
test
inc
sar
xchg
in
and
xlat
xchg
out
sbb
int3
js
and
in
(bad)
std
mov
rcl
push
mov
add
sub
add
bound
bound
cmps
jno
ins
and
inc
fsub
inc
push
and
ja
fist
or
shl
mov
push
adc
mov
sub
test
cmp
or
push
add
xchg
mov
jecxz
rcl
dec
inc
adc
daa
sbb
dec
mov
inc
jo
cdq
fsincos
xchg
cmp
lds
cmp
xchg
jb
movs
push
pop
js
cmp
(bad)
xchg
push
clc
enter
adc
xchg
mov
ds
sti
cld
mov
std
das
pushf
jae
xchg
js
and
add
ds
cmps
mov
dec
mov
push
jae
or
sub
fmul
sbb
jl
lods
sub
push
(bad)
repnz
fcom
fdiv
sahf
push
xchg
inc
sub
mov
or
ror
pop
jmp
pop
sti
pop
popa
out
mov
cmp
and
xchg
fisubr
lea
xor
adc
xchg
imul
jl
jbe
loop
xchg
or
sub
jns
and
xchg
xor
push
cmp
adc
push
add
das
and
imul
ror
inc
iret
in
and
sbb
mov
adc
cmp
fsubr
add
ret
sub
fild
add
cmc
inc
sbb
aam
xor
push
cld
adc
bound
pop
adc
mov
xchg
inc
mov
(bad)
mov
push
aaa
sbb
mov
out
dec
daa
sbb
mov
sahf
mov
adc
lds
test
imul
mov
and
or
iret
and
ds
int
pop
das
scas
in
mov
ss
jo
clc
or
xchg
mov
sbb
lock
push
std
ins
outs
mov
jp
xchg
pop
jmp
mov
retf
mul
aas
and
cs
xor
je
mov
aaa
xor
push
mov
or
int3
shr
imul
mov
pop
mov
call
sub
inc
inc
inc
cmp
and
pop
mov
aad
sti
sti
jmp
scas
rcr
push
xor
sub
jno
or
dec
mov
sbb
jp
push
data16
mov
sub
call
mov
lods
test
mov
mov
jo
lods
add
xor
add
push
cld
cmps
mov
push
lods
loopne
push
in
lods
outs
(bad)
cmp
or
out
pop
pusha
jbe
adc
cmp
repnz
repnz
ror
and
rcr
int3
push
loope
pushf
xchg
jmp
fistp
lods
pop
cmc
sbb
call
cmps
ss
lods
ss
paddusw
fild
jl
cli
inc
sbb
mov
cmp
out
out
jbe
sbb
cmp
xchg
lods
enter
(bad)
mov
cli
in
jmp
push
push
mov
xor
push
push
dec
add
and
cmp
fcom
test
mov
sbb
xor
xor
mov
mov
data16
gs
push
cmp
jp
loop
popf
pusha
pop
jecxz
retf
push
or
sbb
pop
sbb
push
fld
mov
aam
(bad)
xor
push
add
mov
test
push
adc
xor
xor
shl
sbb
jle
add
push
adc
jmp
pop
sub
cwde
mov
ja
sbb
pushf
cli
xor
rcr
dec
test
lock
push
inc
pushf
mov
into
xchg
push
fiadd
cdq
mov
movs
mov
jno
mov
fwait
xchg
shl
nop
out
loope
loop
(bad)
(bad)
jg
fild
sti
cmc
repnz
js
xchg
in
and
div
push
call
rcl
mov
xor
mov
rcr
leave
mov
mov
cmp
aad
jmp
stos
mov
xlat
shl
push
pushf
(bad)
cld
or
dec
in
(bad)
mov
aam
addr16
inc
pop
outs
out
jb
push
inc
mov
jmp
fld
jl
hlt
dec
leave
pusha
das
out
ret
pop
inc
mov
jns
ret
push
outs
rol
xor
(bad)
mov
fwait
inc
outs
retf
lods
jmp
mov
pop
into
repnz
jo
loop
jbe
add
and
jno
inc
cmp
mov
push
jo
lahf
push
cwde
js
mov
rol
push
or
repnz
imul
cmp
mov
nop
xor
add
mov
int
cmp
or
fiadd
imul
fstp
fwait
dec
push
dec
push
jo
cld
sub
add
mov
push
cld
sbb
jge
mov
data16
addr16
mov
cli
inc
inc
fcmovnbe
pushf
adc
outs
clc
loop
pop
sub
add
dec
and
push
adc
jmp
or
pop
inc
cmp
std
sti
mov
xchg
inc
lock
push
jmp
push
repz
xor
or
sbb
or
sub
adc
sub
stos
inc
retf
fcmovb
push
push
xor
mov
add
xor
inc
jb
loope
sub
cmp
out
cs
sbb
or
cmps
mov
enter
rol
cmp
inc
stc
add
lds
sub
retf
test
mov
inc
ss
leave
mov
adc
xor
inc
mov
cs
cmc
shr
cwde
repnz
add
sub
sti
cli
or
add
jno
xor
sar
mov
pmaddwd
xchg
in
push
in
cmps
int3
cli
jnp
jb
stos
lds
and
call
call
dec
and
add
xchg
xchg
or
stos
mov
mov
and
hlt
inc
mov
div
push
lds
ffree
int
pop
inc
inc
fnstsw
dec
or
mov
(bad)
adc
out
xchg
mov
adc
pop
push
cmc
js
and
and
mov
cmp
ss
push
pop
pop
jmp
jns
ins
push
fcomp
cmps
jns
push
mov
call
xor
jnp
mov
add
add
repnz
add
or
fdiv
jg
or
inc
cmp
push
jge
les
jmp
jae
mov
fdivr
xchg
cmp
mov
mov
push
cmps
sbb
scas
(bad)
adc
out
(bad)
loope
cmp
jae
mov
imul
jmp
loope
mov
cli
xchg
imul
pop
xchg
imul
xor
jl
test
sub
adc
cdq
fs
ds
xor
lea
xor
sub
(bad)
sub
adc
jns
and
dec
das
lea
retf
mov
mov
ficom
ins
pop
fcomp
dec
add
jl
add
out
hlt
clc
jbe
in
pusha
mov
retf
inc
jp
jns
sub
pop
xchg
cmp
(bad)
hlt
ret
data16
sbb
mov
inc
mov
xchg
pop
cmp
test
jmp
retf
in
pop
icebp
icebp
jbe
jmp
mov
leave
xchg
inc
adc
and
aad
xor
std
mov
ins
xchg
in
lds
test
jge
(bad)
mov
div
xor
iret
aam
add
sbb
jbe
cmp
jno
sub
repz
ja
xor
leave
aas
pop
rcr
not
adc
outs
addr16
and
dec
xchg
xor
mov
sub
xchg
xor
push
sar
pop
jge
call
out
inc
dec
mov
xor
aas
sub
movs
cdq
cwde
sbb
jle
cmps
adc
mov
ja
or
xchg
fnstcw
lods
out
xchg
push
std
std
ror
outs
fcom
mov
loop
mov
xchg
jb
add
mov
rol
out
and
and
out
mov
xor
pop
jge
test
xor
mov
imul
movs
inc
into
int3
adc
jle
add
sub
sub
jecxz
xlat
ret
lods
or
inc
inc
jbe
add
adc
inc
sub
leave
mov
fdiv
hlt
mov
fs
mov
cld
sub
sahf
fisttp
push
and
int
jno
adc
dec
out
push
(bad)
arpl
or
and
loop
js
sbb
jp
mov
mov
jge
sub
mov
ins
ret
fucomp
jae
fild
in
test
aas
pop
je
lock
dec
imul
imul
sub
or
mov
or
pop
mov
add
imul
es
cmp
cmp
mov
stos
cmc
and
out
cdq
jecxz
retf
daa
xchg
inc
jmp
xor
push
cmp
mov
daa
mov
mov
adc
std
rol
and
cmp
or
jmp
arpl
movs
mov
pop
or
ror
mov
or
mov
scas
and
cmp
push
popa
inc
xor
cmc
push
stc
dec
cmc
lock
push
or
ret
dec
mov
pusha
cld
xor
sub
jne
adc
gs
and
add
cmp
push
and
lods
cmp
lods
das
mov
(bad)
cmp
mov
inc
popa
jmp
popf
es
fwait
xor
lahf
sbb
mov
add
ret
js
mov
mov
and
daa
dec
(bad)
mul
add
push
aas
call
or
xchg
cmps
je
pusha
sub
loope
(bad)
inc
add
push
xchg
cli
xor
ficomp
into
(bad)
(bad)
mov
daa
enter
inc
mov
cmp
xchg
fs
xor
lea
mov
adc
and
in
jae
je
push
enter
ret
cmps
mov
and
add
rcr
addr16
xor
shr
call
movs
fisttp
mov
dec
add
cmp
and
inc
dec
xor
xor
jnp
cs
mov
push
clc
(bad)
stc
arpl
leave
mov
cmp
retf
mov
retf
lea
mov
or
mov
dec
or
cmp
retf
cmp
adc
jmp
adc
outs
xor
push
jg
lahf
in
ret
leave
lods
movs
mov
jnp
mov
sahf
lods
stc
addr16
je
adc
movs
in
xchg
xor
test
(bad)
clc
and
add
idiv
jns
sbb
jo
stos
jbe
xchg
cmp
inc
mov
es
call
lock
or
jmp
jnp
jp
inc
sbb
(bad)
cld
addr16
(bad)
retf
inc
icebp
sub
add
mov
fsub
mov
add
xor
or
sti
jbe
inc
fs
mov
hlt
and
mov
aas
loopne
mov
sbb
(bad)
retf
push
pushf
sbb
push
fdivr
mov
mov
and
and
cmps
add
cmps
ss
or
fst
inc
jge
clc
pop
push
call
icebp
lods
xlat
out
inc
dec
sub
xchg
add
adc
and
daa
scas
(bad)
sub
pop
or
outs
dec
adc
cmp
nop
cmp
rcl
ins
pusha
mov
mov
ja
(bad)
jb
add
dec
xor
dec
(bad)
or
xor
cmp
ins
nop
dec
or
pop
cmp
mov
pushf
dec
inc
ret
or
js
shr
add
mov
add
(bad)
push
ret
imul
dec
in
sub
pop
jb
mov
jne
jg
ss
xlat
mov
mov
stc
push
cdq
icebp
call
clc
cwde
or
push
pop
ds
mov
out
sub
(bad)
aam
inc
jge
and
loopne
or
sahf
mov
or
and
rcl
push
push
daa
mov
add
adc
into
loopne
xchg
jg
cld
inc
js
or
(bad)
jae
aad
neg
or
push
and
pop
pusha
xchg
stos
pushf
mov
mov
leave
and
cmp
dec
sub
cmp
fdiv
cdq
clc
or
fwait
xchg
in
mov
dec
movs
in
sti
mov
cmc
daa
and
xchg
lock
cmp
repz
fst
xchg
mov
mov
mov
inc
and
out
push
cmp
dec
in
push
jp
gs
pop
mov
mov
or
repnz
inc
pop
jae
not
jl
mov
pop
add
xor
fild
inc
sub
push
in
ins
iret
movs
xchg
mov
int3
(bad)
adc
fcom
mov
shl
cmp
out
cmp
or
sub
mov
out
fld
in
pop
dec
sub
lock
add
into
lahf
imul
mov
and
jle
test
add
ret
sbb
pop
mov
aad
(bad)
push
or
mov
dec
pop
jp
je
jp
mov
or
mov
cmp
and
stos
mov
idiv
dec
cld
test
fs
sub
rcl
and
add
neg
gs
popf
out
int3
adc
cmp
dec
mov
pop
dec
or
repz
cmp
sbb
mov
aaa
lods
push
popa
out
dec
xlat
or
xor
scas
bswap
shl
(bad)
retf
mov
mov
pop
shl
loopne
cmp
repz
push
adc
jmp
in
dec
or
xor
fisttp
mov
jecxz
fidivr
fisub
mov
retf
add
add
dec
cdq
xlat
(bad)
fbstp
or
fisubr
mov
dec
mov
dec
push
mov
(bad)
bound
std
stc
jb
test
mov
mov
dec
sub
ins
popf
pop
or
cmp
pop
jbe
int
mov
into
xchg
scas
mov
test
jl
call
rcl
out
lods
ret
add
add
xchg
(bad)
adc
gs
jo
es
or
in
cmps
and
outs
push
cmp
jle
pop
pop
mov
rol
dec
sbb
cwde
es
sbb
fst
mov
jmp
call
leave
addr16
mul
sqrtps
add
mov
mov
(bad)
mov
pop
push
sub
shr
in
data16
cmp
loope
fld
cdq
mov
jmp
call
xor
mov
enter
xchg
je
pusha
push
or
adc
pop
fwait
xor
scas
xchg
xchg
pop
hlt
test
test
cmp
stos
or
mov
sbb
gs
sti
js
mov
dec
popa
dec
push
or
mov
add
aad
push
aaa
inc
mov
mov
call
xchg
mov
or
sbb
jmp
idiv
mov
data16
xchg
daa
(bad)
pop
pop
gs
scas
bound
(bad)
cmp
pop
ret
xor
daa
je
scas
das
push
imul
enter
mov
sub
dec
rcr
ins
jmp
cld
je
cmps
ret
icebp
add
cli
cmps
xchg
lea
in
dec
aas
pmullw
and
(bad)
xlat
fistp
inc
jnp
test
xchg
jmp
test
mov
es
das
test
das
fwait
es
pop
fsub
or
dec
sub
or
or
mov
xchg
sub
daa
mov
shl
or
add
mov
dec
adc
jl
or
pushf
mov
mov
push
mov
adc
sub
movs
mov
push
push
dec
test
stos
dec
imul
scas
mov
pop
jmp
sahf
aam
das
sbb
mov
in
test
xchg
stos
repnz
adc
add
shl
sub
stos
sbb
dec
addr16
adc
or
leave
fidivr
sub
std
adc
ins
cld
stos
loope
pop
retf
push
sbb
sbb
cmp
mov
pop
inc
xchg
imul
inc
loop
js
push
cmp
push
pop
call
xor
lahf
icebp
ret
out
fisub
sub
xchg
pop
sub
aas
push
xchg
push
mov
xchg
int3
and
push
in
sahf
outs
or
mov
push
pop
dec
or
cmp
test
adc
sub
push
scas
mov
push
add
mov
add
inc
stos
sbb
jne
and
leave
clc
(bad)
jne
out
cmp
retf
pop
dec
cli
popa
mov
inc
and
inc
imul
push
inc
xor
fisttp
mov
push
shl
mov
mov
inc
and
pop
mov
(bad)
(bad)
or
pusha
jl
or
adc
pop
cwde
jnp
mov
and
in
je
loope
ds
inc
or
xor
push
fadd
test
cmps
cmps
test
outs
shr
pop
mov
(bad)
dec
mov
(bad)
outs
popa
sub
cwde
cmp
sub
jg
jge
data16
inc
sbb
rcr
rcr
dec
aas
push
push
test
icebp
ret
push
cmp
in
sar
xor
xor
imul
(bad)
jge
push
push
int3
rcl
jmp
pusha
push
idiv
inc
shl
adc
xchg
push
test
cld
or
mov
pushf
rcl
sbb
ret
movs
out
jbe
push
mov
pop
push
jp
xor
jl
(bad)
ds
sub
xchg
xor
fidivr
lock
dec
cmp
push
pop
(bad)
call
pop
xor
enter
pop
xchg
ret
mov
sbb
sbb
lods
cmp
jp
jecxz
pushf
aaa
imul
scas
sub
adc
pop
lahf
xchg
mov
leave
sub
sar
xchg
mov
cs
mov
cwde
xlat
outs
mov
cmp
adc
adc
jae
mov
mov
mov
cld
movs
lods
dec
mov
shl
(bad)
xor
lods
hlt
fcmove
adc
jne
dec
mov
dec
mov
cmps
lods
outs
ins
dec
or
stos
test
in
pusha
dec
aad
cli
into
(bad)
cmp
adc
sub
enter
add
pop
and
xchg
sar
dec
ins
push
test
mov
fwait
mov
inc
aas
push
pop
push
pop
je
dec
sbb
rcl
adc
adc
mov
(bad)
sahf
(bad)
lock
mov
icebp
lahf
lahf
or
imul
cs
fisttp
lods
add
int3
loop
in
fisttp
and
or
rcr
cmp
lea
or
js
and
xor
mov
xor
cmp
mov
aaa
and
mov
cmp
adc
or
adc
je
xchg
mov
mov
add
aaa
xchg
mov
xchg
xor
jmp
or
lods
xchg
or
push
rcl
push
pop
into
call
leave
push
lods
pusha
rcr
mov
addr16
sahf
ins
xlat
cmc
sbb
xchg
cmp
jl
jne
mov
push
aam
sbb
sub
push
packsswb
mov
mov
xchg
mov
xchg
push
or
bound
mov
aam
ds
sub
inc
jle
adc
dec
lds
fs
aaa
sub
push
bound
jl
test
add
pop
loope
xor
mov
or
push
mov
jmp
jg
xor
or
push
jns
xchg
push
xor
in
cmc
sar
ficom
push
pop
shr
std
mov
ror
jne
cmp
inc
idiv
jno
pop
inc
adc
call
push
(bad)
fs
imul
stos
fs
sbb
jne
mov
mov
mov
jae
cmp
and
icebp
popa
sahf
adc
sbb
cmp
sbb
inc
pop
mov
jns
xor
xor
jecxz
and
xlat
jmp
iret
outs
adc
pop
xor
(bad)
and
adc
popf
pop
pop
psubw
sub
mov
in
jp
lods
pop
push
and
out
ja
adc
cs
scas
cmp
icebp
push
ja
ss
mov
pop
out
leave
mov
int3
dec
stos
push
cmp
retf
pop
add
js
(bad)
and
imul
out
cmp
popf
mov
mov
lahf
in
cwde
add
fcom
add
popf
jg
fs
stos
sub
sti
push
sub
adc
(bad)
call
mov
(bad)
out
in
imul
out
dec
sar
aaa
sahf
not
rcl
inc
rcr
ins
imul
cs
pusha
sbb
xor
jb
sub
cmp
push
inc
dec
(bad)
cmp
push
nop
xor
ret
imul
push
mov
ret
bt
pop
mov
ror
stos
pop
or
cmc
bound
int
test
sub
retf
mov
nop
push
popa
enter
mul
sub
fdivr
pop
adc
cdq
ror
icebp
outs
out
mov
xor
and
cdq
jge
cmps
and
ret
js
push
jb
cmps
jo
fimul
xchg
ret
mov
stos
jecxz
mov
add
xchg
loop
xchg
add
mov
test
ror
out
push
add
fwait
cmp
aam
stc
les
inc
dec
pop
cdq
pop
sbb
daa
test
add
xchg
int3
add
cs
pop
(bad)
push
fistp
bound
mov
(bad)
mov
clc
jmp
jmp
xor
lea
aas
fwait
add
daa
repz
test
mov
pusha
(bad)
ins
not
sub
adc
jecxz
cmp
out
cmp
sbb
mov
mov
imul
jns
adc
stos
int
adc
pop
cdq
fisttp
dec
push
push
and
xor
jne
enter
fldcw
into
xchg
adc
fbstp
(bad)
loop
sbb
cmps
popa
aas
adc
cli
cmc
fisttp
in
(bad)
sub
and
es
jne
fs
cmp
imul
pop
in
xchg
data16
ins
stc
xchg
mov
cmp
fmul
push
mov
xchg
mov
loope
push
sbb
test
icebp
(bad)
ins
popf
inc
sbb
imul
push
lods
cmc
rcr
dec
mul
mov
add
inc
out
dec
adc
into
cmc
enter
jle
mov
add
test
jecxz
lods
lds
adc
outs
cmp
and
fstp
dec
out
or
retf
fwait
push
stos
(bad)
(bad)
or
shl
test
xor
sub
cmps
ret
push
and
imul
xchg
test
jne
imul
mov
fcom
xchg
fldenv
ins
and
lock
into
xor
(bad)
mov
(bad)
cmp
push
pop
pusha
mov
mov
mov
jecxz
fwait
push
aam
ret
pushf
add
jge
std
push
mov
jge
test
inc
iret
clc
mov
sub
xchg
cmp
dec
push
cmc
mov
inc
mul
or
push
loop
add
push
rol
mov
pop
adc
xchg
cmp
aas
into
js
cmp
leave
cmc
lahf
pushf
repnz
arpl
push
add
inc
(bad)
jae
mov
sub
(bad)
sbb
outs
xchg
std
shr
scas
jmp
sbb
xor
mov
(bad)
xlat
nop
sbb
mov
cs
sub
es
jg
stos
ror
out
repnz
sub
or
inc
mov
jp
iret
or
mov
in
js
add
imul
es
pop
mov
dec
xlat
add
shr
mov
dec
and
bound
rcr
jno
neg
loopne
mov
pop
dec
sub
xchg
adc
movs
jg
jae
std
pushf
push
movs
inc
push
ret
rol
out
adc
mov
mov
jmp
in
repnz
mov
rcr
sub
push
mov
lds
jns
das
jl
add
nop
test
cmp
sbb
or
jo
(bad)
outs
jbe
cdq
sbb
je
push
shr
sbb
out
or
gs
ss
adc
jl
sti
xchg
fs
dec
pop
je
cld
fld
sbb
imul
inc
movs
xchg
dec
mov
jno
idiv
in
cmc
imul
xor
sbb
clc
xchg
dec
adc
adc
es
sbb
and
fisttp
pop
pop
xor
inc
test
mov
push
inc
imul
pop
movs
and
sub
pop
pop
inc
jne
cmps
jno
popa
outs
aam
cmp
inc
pop
inc
push
or
mov
and
xor
ffree
or
jae
jno
ror
ins
sbb
dec
fdivrp
aas
inc
jbe
cmps
xor
jns
cmp
push
xor
dec
lahf
inc
sub
jo
fstp
jmp
push
cld
scas
and
in
mov
jmp
dec
mov
test
add
cs
xchg
pop
clc
dec
fadd
add
test
push
icebp
cs
dec
jno
out
xor
push
push
cld
adc
jne
add
fs
test
les
push
push
movs
adc
add
cmps
jp
sub
sub
pop
pop
call
pop
xor
mov
dec
das
mov
inc
pop
mov
or
cmp
outs
out
xlat
je
popa
ss
cmp
inc
push
pop
fst
sbb
ss
jl
iret
sub
fld
in
pop
cdq
jae
aad
and
ins
mov
xchg
(bad)
bound
sub
push
(bad)
rcr
cmps
dec
sahf
sbb
inc
xor
repnz
sub
out
sti
adc
loop
dec
sub
aad
int
and
xchg
(bad)
cwde
icebp
inc
sbb
icebp
inc
jecxz
in
fidivr
inc
push
enter
push
inc
pop
adc
mov
inc
imul
inc
rcl
std
repz
pop
int3
pop
xchg
and
adc
movs
out
std
mov
call
js
xchg
and
inc
addr16
add
je
xor
cmp
iret
sbb
icebp
push
movs
xchg
std
xchg
js
xor
sub
push
and
jae
popa
popa
mov
into
pusha
std
stc
loopne
inc
scas
out
adc
(bad)
mov
xor
inc
mov
mov
jmp
stos
dec
jle
ins
test
out
or
and
pop
inc
js
mov
sub
dec
mov
hlt
(bad)
aaa
jo
ins
pop
xor
pop
or
cmp
test
mov
stos
mov
imul
pushf
xlat
dec
div
nop
or
or
out
test
jb
jecxz
bound
pop
cmp
push
add
(bad)
hlt
mul
xor
add
mov
jge
sub
dec
test
adc
jmp
jecxz
inc
jecxz
dec
mov
aad
xor
add
cmp
ror
adc
jo
fisttp
pop
dec
dec
ins
rol
stc
in
mov
mov
xchg
adc
cli
mov
cmp
jp
enter
xchg
ins
push
lods
ror
cwde
lea
retf
xor
or
jmp
mov
xor
dec
or
push
adc
mov
push
and
adc
adc
sub
sub
xor
retf
jb
ret
fs
pusha
xor
out
push
out
dec
rcl
mov
and
(bad)
inc
movs
push
sbb
pop
out
out
je
jne
dec
push
mov
scas
xchg
sub
jne
or
pop
sbb
xchg
out
mov
xlat
mov
sub
int
mov
pop
sbb
gs
mov
adc
fs
pusha
and
mov
loop
test
mov
(bad)
mov
push
sub
sbb
in
ret
pop
rcr
in
mov
and
cmc
in
out
jns
movs
push
movs
or
mov
push
(bad)
or
loope
movs
ss
xchg
dec
sub
dec
mov
sti
cmp
mov
mov
retf
call
jmp
repz
pop
xlat
cmp
int3
or
push
sar
ins
add
xchg
fstp
cmp
scas
jnp
dec
jge
xchg
test
(bad)
and
or
cmp
mov
sbb
retf
lock
mov
cld
dec
pop
and
shr
xor
jnp
retf
das
mov
cmp
push
in
or
mov
pop
adc
xchg
inc
(bad)
jo
cmp
ins
fwait
xchg
add
sub
jmp
loope
pop
xchg
jb
clc
outs
dec
and
shl
push
es
mov
int3
test
les
sub
in
cmc
inc
cdq
data16
sbb
nop
sub
(bad)
pop
cli
adc
push
retf
pop
arpl
adc
cmps
push
retf
fs
mov
xlat
fwait
dec
pop
adc
call
dec
and
dec
mov
mov
cwde
inc
sar
add
icebp
or
cmp
push
and
daa
or
xor
lods
popf
in
pop
sar
test
fist
sbb
pop
aam
pop
mov
jle
imul
das
bound
pop
pop
dec
mov
mov
ds
pushf
cmp
xor
js
jbe
std
movs
in
mov
icebp
int3
dec
aas
pusha
enter
in
(bad)
in
push
jmp
arpl
fsubrp
aam
cmc
ret
mov
int3
push
(bad)
pop
js
pop
push
dec
push
dec
mov
xchg
dec
ds
push
xchg
fst
(bad)
cwde
stos
mov
pusha
jae
adc
push
cwde
pushf
jp
pop
xchg
xor
mov
or
leave
cwde
mov
inc
mov
cmp
add
xor
rcl
test
or
push
jmp
pop
push
cmp
mov
dec
xor
jp
add
lods
out
add
pop
and
fadd
outs
prefetchw
sub
mov
or
inc
(bad)
jno
lods
xchg
hlt
cld
lds
push
popf
movs
and
sbb
(bad)
daa
fld
mov
xchg
mov
ret
or
xor
add
cwde
lods
xchg
loopne
dec
push
fld
jge
idiv
test
bound
and
test
sbb
cmp
sub
(bad)
idiv
fist
push
jbe
dec
jle
sbb
mov
jle
sar
aaa
cs
stos
xchg
retf
jmp
mov
clc
outs
mov
pop
xor
fdiv
mov
pop
sbb
or
xor
mov
rcr
scas
pop
mov
sub
mov
push
outs
push
cmp
and
add
outs
and
or
popa
dec
push
ror
add
pop
inc
loop
jmp
lods
test
mov
iret
sbb
(bad)
ret
daa
retf
dec
mov
mov
jne
pop
fcom
bound
sbb
lock
jg
pop
ror
lds
popf
mov
mov
push
stc
loope
sbb
out
sub
fstp
(bad)
pop
mov
fstp
mov
lea
clc
call
push
sbb
adc
fs
sub
imul
daa
push
popf
jo
aas
xchg
arpl
cmp
dec
sub
mul
xor
(bad)
mov
into
and
lock
dec
gs
cmp
cmp
jg
icebp
pop
shl
mov
dec
pop
xchg
ds
je
or
lock
pop
adc
mov
mov
imul
cmp
sbb
adc
ret
add
xchg
sub
xor
idiv
scas
stos
(bad)
es
jmp
das
lock
jne
lds
jge
or
add
data16
fcomp
cmp
jle
jbe
call
call
inc
push
movs
push
mov
mov
hlt
jbe
ins
stc
(bad)
sbb
loopne
push
pop
retf
xchg
jnp
pop
add
mov
inc
inc
push
pushf
xchg
jbe
adc
mov
fsincos
stos
sti
mov
aaa
xor
inc
jmp
add
cli
ins
mov
lahf
out
call
mov
xor
jecxz
jmp
je
pushf
or
jmp
xchg
xchg
jp
cmp
inc
jno
in
or
pop
ins
popf
add
jbe
call
lock
dec
fisttp
inc
pop
pop
mov
adc
xchg
mov
fdivr
jle
or
shr
psrlq
xchg
ja
bound
jp
stos
inc
inc
jl
sub
sbb
jl
scas
xchg
sub
cld
(bad)
clc
pop
sbb
adc
jne
aas
mov
or
xchg
arpl
mov
shr
sbb
adc
jbe
icebp
jne
pop
and
pop
fbld
stos
jb
adc
sti
dec
xlat
sub
and
inc
pop
add
sahf
lods
xor
ret
call
shl
lods
sbb
pop
pusha
lds
inc
data16
nop
pop
cmps
push
or
dec
sahf
inc
(bad)
push
mov
mov
sub
sbb
pop
dec
jne
leave
mov
movs
js
mov
cmp
and
fnstcw
out
loope
and
ret
gs
jmp
rcr
xor
push
(bad)
sbb
jns
lods
jg
push
int3
ja
out
dec
test
add
sbb
or
nop
dec
and
test
pop
mov
ds
fisttp
(bad)
rcr
dec
jno
lahf
aaa
gs
mov
mov
loopne
adc
push
pop
test
mov
(bad)
inc
sub
dec
(bad)
daa
jns
sahf
sub
loopne
fidivr
mov
mov
test
popf
sub
stos
adc
psrlw
inc
ret
icebp
fs
(bad)
inc
cmps
dec
push
push
mov
fsubr
outs
stos
xor
inc
cld
stc
lds
les
jo
push
outs
xlat
or
in
and
rcl
cmp
dec
(bad)
jp
dec
xor
adc
or
inc
(bad)
push
sub
mov
in
sahf
jnp
xor
ja
inc
or
and
lds
fistp
mov
jae
dec
mov
inc
rcl
jg
push
adc
adc
dec
pop
movs
dec
push
mov
sub
jns
fadd
sub
inc
cwde
mov
and
sub
(bad)
loope
das
loopne
ret
jecxz
xor
jl
movs
popf
dec
mov
push
pusha
shl
jle
aam
test
ins
jp
cmp
mov
pop
js
sub
fs
mov
hlt
mov
sahf
je
fbstp
iret
dec
leave
adc
adc
repz
sub
cmp
push
push
pop
jle
xchg
add
mov
jle
mov
add
scas
mov
cdq
fidivr
xor
cmp
in
shl
cmp
fsub
sbb
xchg
(bad)
loope
lea
int
sbb
cwde
sti
jbe
add
adc
inc
clc
popa
push
dec
cld
jmp
pop
dec
and
popf
sub
out
jecxz
cdq
and
pop
movs
mov
out
fwait
adc
fcom
std
sbb
mov
and
mov
jmp
dec
mul
dec
jg
xor
adc
or
xchg
add
ret
fmul
in
loope
cmps
clc
lahf
fcmovu
popa
cmp
sahf
inc
or
push
stos
stos
cmps
sub
ins
leave
sbb
lock
clc
scas
push
rcl
pusha
rol
lahf
xor
add
sbb
or
xchg
(bad)
adc
repz
pop
stos
stos
push
pop
cmp
rol
sahf
xor
(bad)
leave
js
test
outs
xchg
jnp
shl
jmp
xor
mov
jne
sbb
les
cmps
mov
add
rol
es
in
mov
test
retf
in
std
iret
push
inc
out
push
push
sub
(bad)
outs
pusha
cmp
cli
xchg
mov
xchg
mov
mov
sbb
pusha
and
sub
push
push
push
xchg
in
sub
js
loopne
mov
ja
fwait
mov
jg
cmp
ins
push
out
add
sahf
fnstenv
xor
or
pop
lods
stos
fisubr
sbb
(bad)
in
cmps
out
pop
mov
cwde
cmp
jmp
(bad)
xchg
mov
sub
mov
sar
inc
arpl
mov
mov
sar
loope
sbb
ret
mov
jle
addr16
push
(bad)
and
mov
mov
repnz
aam
push
sub
dec
xchg
and
lahf
scas
je
mov
cmc
retf
sar
mov
aam
xchg
pop
in
mov
fild
outs
or
adc
xchg
aaa
pop
adc
cmp
add
into
outs
and
lock
push
(bad)
sti
frstor
jb
call
es
ret
jae
int
jb
cmps
ret
push
and
mov
jmp
mov
scas
(bad)
div
pop
xor
or
les
add
xchg
repnz
ret
inc
in
dec
inc
adc
push
stos
shl
jecxz
or
adc
push
jnp
cmp
inc
add
inc
stos
adc
xchg
xchg
push
scas
fxtract
mov
cld
ret
retf
ret
pop
jne
and
mov
cmp
dec
mov
sub
loop
cmp
stos
dec
clc
sbb
push
jnp
add
rcl
push
mov
and
(bad)
jne
push
mov
sbb
aad
sti
mov
push
ret
dec
test
out
in
repz
movs
push
stc
push
pop
lods
pop
push
mov
add
adc
sbb
or
clc
sbb
imul
gs
aaa
loop
dec
mov
or
(bad)
inc
icebp
ror
ds
adc
lods
push
sahf
sbb
sti
int3
imul
push
dec
inc
inc
je
mov
nop
popf
pop
por
popa
int3
loopne
es
mov
sub
xchg
jae
mul
sub
adc
mov
shl
pop
rcr
lods
mov
cmp
inc
pop
lock
jno
sbb
add
scas
ret
fmul
pop
jge
jge
push
xchg
inc
mov
mov
rol
push
jmp
pushf
out
nop
sub
push
js
fnstenv
cmps
xchg
inc
cmp
aad
xchg
push
mov
popf
push
bound
adc
inc
cld
in
xchg
pop
aaa
push
sar
sbb
or
xchg
imul
call
(bad)
mov
jmp
sbb
call
(bad)
xor
sub
mov
pop
inc
pusha
ja
inc
sbb
stos
movs
jns
xchg
stos
fidivr
lahf
xchg
xchg
popa
mov
pop
pushf
mov
mov
jle
out
mov
ret
iret
sar
movs
mov
jns
inc
inc
ret
and
adc
and
or
add
pop
jno
outs
sub
rol
(bad)
lock
or
dec
rol
jns
cli
mov
sub
test
xchg
and
adc
sbb
sub
ds
jle
xchg
pop
stos
les
or
pop
xor
inc
mov
jmp
add
push
ret
jp
fiadd
cmps
sbb
pop
xchg
fisub
xor
je
(bad)
cmc
ins
sub
sub
aam
repnz
push
xchg
jmp
call
cli
sti
repz
jbe
int3
push
jmp
mov
jb
retf
pop
(bad)
jbe
lock
ins
pop
pop
adc
xor
adc
push
sub
int
mov
xor
and
sbb
jo
aas
ret
fstp
jb
gs
in
loopne
inc
mov
or
fs
sbb
push
out
gs
cmps
stc
es
or
mov
push
mov
fs
jbe
test
imul
jmp
pop
imul
sbb
fstp
mul
xchg
sbb
sbb
scas
frstor
popa
shl
cmp
mov
jl
add
adc
aad
call
jb
in
cs
xor
xchg
xlat
lea
push
add
outs
test
add
fadd
xor
xchg
inc
mov
push
out
mov
mov
rol
cmps
les
inc
arpl
leave
mov
test
mov
jg
mov
add
inc
int3
pop
adc
inc
(bad)
je
or
xchg
xor
sub
aaa
addr16
dec
cmp
xchg
aaa
sub
call
(bad)
xchg
adc
jae
mov
fs
push
inc
adc
inc
les
or
pusha
mov
dec
inc
fiadd
cmp
inc
cmps
xor
sub
push
pop
lock
push
(bad)
push
rcl
jge
in
mov
ins
cmp
xor
xchg
je
or
(bad)
jno
or
xor
pop
aaa
and
dec
adc
jbe
add
inc
push
inc
sub
adc
pop
xchg
aas
fs
ret
mov
outs
scas
lock
sbb
imul
inc
pop
dec
and
fcom
(bad)
jb
scas
lmsw
xchg
and
jne
mov
adc
leave
mov
sbb
xchg
and
mov
jne
jmp
cwde
mov
mov
jl
int
xor
jmp
adc
push
pusha
cmp
xchg
jns
add
aad
into
out
mov
movs
push
jle
xor
xchg
sub
aas
aaa
dec
inc
cmp
sbb
pop
mov
dec
lds
js
or
mov
mov
ja
pop
xlat
push
mov
pop
ret
dec
xor
cmps
icebp
or
add
mov
sub
pop
aas
ins
add
loop
cmps
cs
cmp
jp
push
mov
stos
or
out
ficomp
shl
fbld
mov
movs
test
pop
or
and
jae
pop
mov
cld
setns
aam
ror
sub
jle
or
xchg
or
pop
inc
adc
pop
add
(bad)
(bad)
imul
sar
sbb
popf
mov
and
xchg
and
inc
mov
push
aad
arpl
mov
xchg
add
test
cmp
or
fs
movs
fiadd
es
cmp
or
cli
out
cld
retf
jge
mov
xchg
jo
(bad)
jbe
fcom
sub
inc
add
scas
int3
xlat
call
push
inc
lods
inc
std
fsubr
mov
in
scas
mov
mov
mov
clc
pop
cmp
in
cmps
sbb
lds
jb
jp
push
ficomp
push
xchg
add
cmp
and
sar
aad
mov
add
mov
dec
pop
fucomip
mov
nop
in
mov
xor
mov
mov
cwde
shl
mov
sar
add
mov
dec
fdivr
or
xor
pop
push
dec
adc
pop
dec
popf
mov
call
inc
sbb
shl
dec
outs
sub
pop
cmp
and
jmp
aad
add
cdq
add
adc
mov
(bad)
out
(bad)
push
pop
mov
imul
icebp
pop
mov
imul
mov
add
mov
out
outs
mov
fldenv
mov
scas
pop
cmp
push
xchg
cmp
loope
xlat
(bad)
fistp
mov
jno
outs
mov
cld
sub
push
mov
cli
jb
pop
idiv
sub
mov
mov
icebp
repz
xchg
xchg
pop
sbb
(bad)
jecxz
or
pop
add
jnp
je
xchg
nop
pop
xor
jecxz
ret
idiv
(bad)
sbb
addr16
fcmovnbe
scas
inc
scas
div
call
ja
jge
mov
fwait
sub
mov
xchg
mov
adc
xchg
pop
push
popa
cli
mov
mov
jge
jecxz
int3
mov
cld
xchg
mov
jb
inc
into
mov
into
jno
ds
jbe
rcl
inc
xchg
inc
xchg
loopne
out
fs
and
stos
idiv
leave
push
adc
pop
push
call
test
daa
into
sub
imul
imul
or
inc
rcr
cld
cmp
in
jge
aam
push
shl
mov
ss
cmp
inc
xor
jbe
jle
test
(bad)
rol
mov
cmp
retf
pop
sub
xor
inc
mov
pop
popa
stos
cmp
test
mov
xchg
arpl
sub
adc
adc
inc
pusha
inc
test
pop
jg
xchg
fs
enter
inc
lock
sub
fld
lea
fcmovne
push
fnsave
push
sahf
xchg
sar
cdq
mov
scas
pop
repz
jae
mov
enter
or
stc
ret
pushf
je
ss
pop
add
ss
push
inc
cmp
cmp
push
stc
xchg
jle
data16
ins
sbb
rol
popa
fcom
mov
js
inc
jo
movs
pop
ins
imul
inc
cmc
out
add
or
xlat
or
adc
adc
ret
in
repnz
mov
mov
mov
imul
jecxz
leave
cmp
pushf
movs
imul
arpl
std
mov
add
xchg
adc
jl
(bad)
lods
cwde
sub
xor
sbb
pusha
cld
mov
sbb
stos
inc
jnp
sub
int
ja
xchg
xchg
into
push
outs
fild
out
js
adc
int
out
dec
jbe
jno
ins
lods
push
lods
push
pushf
(bad)
mov
sbb
cld
mov
push
push
sti
dec
int
fchs
sbb
mov
inc
jb
sbb
pop
pop
jl
outs
mov
pusha
cmp
repnz
ss
dec
sub
sub
xchg
xchg
jbe
jne
push
jmp
adc
out
leave
movsx
sub
fwait
mov
pushf
test
out
psrld
cmp
mov
repnz
aaa
sbb
in
dec
pop
nop
mov
(bad)
scas
and
adc
addr16
in
cmc
xchg
call
shl
cmc
iret
retf
(bad)
es
mov
or
into
push
sub
cmp
idiv
fiadd
rcr
stc
fld
imul
js
push
mov
inc
pusha
cld
adc
dec
das
popf
fwait
push
arpl
outs
loopne
mov
jg
addr16
adc
enter
push
dec
mov
mov
inc
out
jb
loopne
pop
or
stc
pop
fcom
dec
ja
out
ja
and
cli
and
mov
movs
dec
pusha
outs
jno
(bad)
or
mov
dec
jmp
mov
mov
rcl
aas
scas
pop
nop
sub
icebp
cld
jbe
cwde
repnz
fimul
in
push
(bad)
in
test
mov
push
ins
into
push
ins
sub
jbe
cmp
call
rcl
and
mov
(bad)
fs
js
xor
sbb
int3
push
push
cli
mov
mov
mov
stc
jno
inc
jmp
sub
aaa
out
mov
cwde
jp
xchg
test
aas
cwde
adc
icebp
popf
outs
clc
dec
dec
shl
in
(bad)
mov
mov
fcomp
sbb
sub
pop
sbb
adc
cli
sbb
mov
ds
mov
sub
mov
int
call
jns
add
push
jne
loope
or
rcr
movs
cmps
jmp
inc
bound
push
test
or
mov
popa
mov
int3
fdivrp
int
sub
or
je
outs
mov
lock
aaa
nop/reserved
dec
dec
mov
pusha
xor
test
mov
hlt
test
mov
pop
jp
jae
cmp
in
into
repz
mov
cmc
push
fwait
mov
push
enter
xlat
clc
mov
popa
cmp
xor
stc
ss
div
mov
(bad)
push
push
cld
mov
mov
jne
mov
stos
jne
inc
or
cmp
jns
movs
icebp
mov
punpckhbw
in
outs
int3
mov
jmp
retf
popa
cmp
stos
aaa
sbb
mov
sbb
ror
xchg
fimul
push
jmp
sub
jo
mov
repz
jb
cdq
lds
mov
cdq
adc
jnp
iret
push
movzx
push
test
mul
in
xchg
es
cmps
arpl
popa
neg
dec
sbb
clc
outs
add
(bad)
jns
push
push
imul
dec
xchg
cli
stos
lea
push
xor
add
jno
or
dec
dec
dec
mov
xor
dec
pop
sub
adc
inc
xchg
fnsave
xchg
jle
pop
mov
inc
mov
int3
or
ss
jmp
fldl2t
mov
gs
stos
sub
aaa
xlat
push
scas
mov
pop
inc
fild
dec
mov
sti
aaa
pop
cwde
pop
repz
dec
cli
jns
push
jmp
xor
mov
imul
repnz
aas
lahf
or
call
test
mov
dec
push
mov
stc
mov
xchg
dec
push
mov
cld
in
adc
rol
jno
sub
or
cmps
mov
clc
dec
call
sbb
into
jecxz
out
js
push
lds
and
sbb
xchg
cmp
cmp
push
ret
and
mov
outs
mov
push
sub
adc
jne
in
cdq
xor
adc
data16
cmps
pop
push
dec
cmp
in
mov
out
rol
jae
imul
rcr
push
imul
addr16
inc
rol
(bad)
test
dec
arpl
ins
xchg
test
test
mov
inc
outs
xor
jmp
aam
add
pop
pop
frstor
cmp
faddp
aad
call
or
mov
shr
cwde
jns
mov
jg
jle
repz
xchg
push
pushf
mov
pop
push
test
rol
mov
jo
aad
mov
js
pop
push
ror
jmp
ins
jge
rcl
push
into
clc
enter
sub
repz
into
dec
xchg
mov
pop
push
loop
es
inc
lahf
cdq
add
xchg
jge
repz
cmp
aam
outs
cld
jnp
je
sub
popa
dec
cmp
iret
hlt
je
xchg
adc
(bad)
call
dec
ins
xor
xchg
xchg
lods
inc
add
inc
jecxz
mov
sbb
nop
jmp
add
stc
(bad)
loopne
inc
pop
jnp
leave
std
inc
cli
adc
mov
fistp
cmp
fs
xchg
adc
xor
sbb
sub
fisubr
test
dec
ss
lds
add
mov
sub
pop
dec
dec
push
push
mov
sysret
pop
adc
push
mov
push
mov
aam
mov
push
imul
push
dec
lods
dec
jae
inc
movs
pop
jge
jmp
jne
push
out
ret
mov
or
push
add
out
out
sbb
pop
jbe
es
or
retf
mov
daa
sub
sti
pop
add
call
daa
clc
xchg
les
sbb
iret
daa
jecxz
outs
sar
jb
ins
cmp
in
cmps
sub
outs
loop
dec
inc
adc
or
das
clc
mov
(bad)
mov
xchg
(bad)
mov
daa
xor
das
pop
scas
push
fcom
pop
mov
xor
push
add
mov
adc
pop
fisub
std
push
dec
leave
retf
sti
bound
data16
loop
loope
jno
push
call
leave
cmps
shl
out
ss
dec
push
aas
lea
xchg
inc
mov
aam
push
dec
push
mov
xchg
test
clc
xlat
xor
pop
mov
sahf
inc
leave
js
xor
adc
jl
and
sti
lods
cmp
shl
ror
push
or
pop
adc
loopne
adc
(bad)
jge
gs
fs
xchg
inc
xchg
lock
call
pop
dec
cmp
lahf
rcr
cmp
ds
pushf
cmp
jge
popa
daa
fldcw
sbb
xchg
movs
ja
jg
in
aaa
ja
shl
leave
movs
push
repnz
push
inc
mov
push
rcl
enter
pushf
cmc
sbb
mov
mov
std
mov
mov
test
(bad)
mov
in
test
cmp
fidivr
lods
jae
repz
outs
fiadd
xor
push
inc
ins
popf
ja
scas
and
call
jecxz
nop
ss
or
push
pop
or
jae
das
les
out
popa
jno
loopne
leave
sbb
jmp
imul
and
adc
fmul
inc
(bad)
adc
enter
mov
mov
cmp
xchg
add
mov
pop
xor
cmc
retf
mov
xchg
mov
lahf
mov
fwait
sahf
pop
jne
fcom
sub
inc
repz
enter
dec
xchg
repnz
xor
xchg
and
push
jo
inc
dec
in
sbb
sbb
in
ja
mov
enter
iret
mov
lds
sbb
fmul
pop
cld
dec
sbb
xchg
pop
les
pop
cmps
lds
xor
into
and
xor
das
mov
push
ins
pushf
push
add
adc
sbb
(bad)
js
push
or
push
jns
cmp
dec
repnz
pop
neg
dec
pop
sbb
jbe
mov
push
push
les
fisub
bound
or
call
jp
data16
sbb
(bad)
fistp
ret
rcl
or
or
mov
aaa
ret
in
pop
sbb
cmps
jg
xchg
push
daa
mov
adc
cmp
and
lahf
and
sub
imul
mov
mov
fyl2xp1
inc
jne
cmp
jnp
lea
out
add
adc
es
int3
xchg
cmp
push
jo
sub
xchg
sbb
push
push
es
les
out
ss
and
lods
mov
mov
enter
push
or
fidiv
sahf
jmp
(bad)
cmp
adc
mov
inc
js
cmps
push
xchg
pop
fsub
call
jg
jg
pushf
out
sbb
imul
cmps
cs
test
inc
int
lods
imul
test
jae
mov
adc
push
cwde
out
xchg
xor
out
outs
pop
dec
dec
out
xchg
mov
mov
popf
nop
data16
data16
(bad)
mov
in
jns
(bad)
adc
(bad)
div
cs
mov
push
mov
mov
dec
xchg
mov
sub
lods
cdq
cdq
cmps
push
inc
cli
pop
popa
dec
dec
push
xchg
seta
and
bound
daa
in
dec
psrld
test
cmps
jno
call
adc
scas
out
xchg
(bad)
cld
fstp
mov
inc
cmp
pop
xchg
cmps
mov
ins
pop
lock
mov
repz
adc
mov
mov
ret
pusha
or
shl
sub
push
mov
ja
bound
xchg
cmp
div
clc
xor
inc
cs
jge
and
fisttp
jb
iret
push
or
fbstp
or
pushf
xchg
jecxz
mov
mov
sbb
ss
pop
imul
mov
push
arpl
mov
test
aaa
sbb
mov
dec
add
les
scas
ds
je
popa
inc
xchg
and
mov
mov
inc
popf
push
jl
jnp
jno
out
xlat
or
shl
cmp
ins
dec
pop
iret
cdq
jp
xor
jmp
mov
sbb
pop
dec
push
cmp
inc
sbb
push
jno
outs
hlt
adc
ds
repnz
sbb
iret
push
shr
test
pop
xlat
xlat
xor
cmp
xor
push
loope
dec
int3
xlat
sub
sti
jecxz
jb
es
mov
aad
ins
lods
dec
popw
ja
jge
sbb
invd
dec
(bad)
mov
adc
imul
out
xor
mov
lods
fisttp
cdq
stos
pop
pop
inc
fild
jbe
retf
push
pop
in
adc
mov
pop
push
hlt
pusha
sbb
call
xor
mov
inc
popf
nop
scas
les
ss
xor
add
stos
push
aas
pop
scas
retf
out
out
mov
ror
es
mov
push
jmp
fbld
loopne
jne
and
push
int3
push
mov
mov
or
sbb
in
(bad)
fiadd
test
out
arpl
and
lods
mov
and
jg
scas
fdivr
inc
mov
fsub
es
rcl
xchg
sbb
cmp
rol
je
cmp
push
pop
fucom
pop
mov
adc
add
test
add
or
cmps
add
mov
pop
inc
and
pop
imul
ins
(bad)
mov
mov
add
sub
cs
xchg
jmp
outs
cmp
je
cmp
sbb
(bad)
enter
clc
jo
jg
outs
cld
arpl
test
dec
cdq
adc
(bad)
adc
sbb
and
outs
or
mov
inc
dec
movs
outs
cmp
xor
mov
mov
js
cmp
add
inc
cwde
leave
cmp
(bad)
cmp
imul
test
push
push
fucomp
dec
repz
mov
cmp
rol
pushw
jle
dec
and
std
dec
xor
dec
dec
lods
pop
xchg
jno
cmc
lds
cmp
xchg
aad
rcr
or
or
mov
sbb
jbe
cmp
rcl
adc
sub
add
(bad)
out
rcl
pop
mov
pop
cmps
mov
pop
(bad)
mov
shl
shl
dec
mov
and
xor
lods
dec
sbb
adc
mov
fistp
int3
adc
pop
xchg
fs
jecxz
cmps
std
repz
(bad)
adc
push
or
jecxz
pop
push
mov
addr16
mov
mov
pop
imul
inc
je
pop
test
leave
hlt
ret
cli
push
xor
out
scas
cld
clc
out
or
sub
stos
movd
aam
or
popa
jno
nop
fiadd
(bad)
fadd
adc
movs
mov
pop
repnz
stos
stos
ins
sbb
outs
mov
dec
sub
int
inc
std
dec
inc
sbb
loopne
in
mov
hlt
test
cmps
repz
pop
aad
pop
sbb
xchg
jl
mov
pop
outs
add
push
cmp
test
out
xchg
xchg
cmp
xchg
stc
mov
call
fwait
std
lahf
dec
retf
iret
inc
je
retf
push
mov
iret
jne
xchg
sbb
push
fwait
add
xor
push
hlt
sbb
add
stc
std
pop
mov
ins
jp
movs
stc
imul
mov
icebp
dec
sbb
fild
and
enter
dec
shl
and
xchg
aad
(bad)
mov
inc
jge
jmp
lods
sbb
gs
(bad)
pop
mov
sbb
inc
clts
loope
add
ror
mov
dec
retf
mov
test
xor
or
sbb
daa
add
xchg
sub
int
push
aad
cli
adc
enter
or
push
jle
adc
pop
inc
fdivrp
pop
ins
clc
xor
cdq
pop
pop
mov
mov
movs
push
inc
xor
mov
inc
cs
sti
inc
cs
jae
stc
and
push
data16
xchg
adc
jnp
push
pop
sbb
test
or
iret
imul
add
dec
aaa
push
out
pop
sbb
fld
mul
scas
cmps
xlat
arpl
push
pop
sahf
fiadd
mov
or
sub
adc
in
cmp
cdq
pop
pop
push
xchg
(bad)
repnz
lea
pushf
sbb
xchg
sbb
adc
mov
fild
retf
push
(bad)
mov
mov
outs
fmul
ja
jmp
repnz
aaa
test
sbb
or
sbb
mov
jl
stc
mov
sbb
shr
js
jno
mov
adc
xchg
mov
push
shr
mov
push
push
in
push
jge
xchg
xchg
push
jmp
push
fbstp
aaa
push
iret
fs
out
or
iret
mov
jecxz
out
sbb
dec
pop
xchg
mov
jp
lahf
cdq
pop
ins
mov
int3
cmp
dec
sub
jg
cmp
jge
nop
pop
sahf
lahf
add
jne
arpl
scas
in
(bad)
and
lods
stc
(bad)
jne
cdq
(bad)
pushf
pop
sbb
xchg
xchg
shr
fistp
push
mov
lock
loope
push
(bad)
mov
aam
clc
and
imul
push
xor
popa
movs
scas
sbb
outs
cmps
ins
(bad)
pushf
jne
or
inc
in
rol
add
xchg
sbb
mov
adc
int
movs
add
or
pop
lods
(bad)
rcl
xor
cld
cmp
adc
shl
retf
pop
xor
cmp
sbb
fdiv
call
sub
in
and
xchg
mov
cmp
daa
mov
gs
push
xchg
pop
fwait
push
push
pop
pop
xor
dec
dec
sbb
and
add
test
cld
push
sbb
imul
shr
inc
cmp
xchg
clc
pop
into
sbb
dec
jmp
lods
add
cmp
in
jo
mov
sub
repnz
in
sub
adc
mov
adc
mov
shl
clc
vmovhpd
sbb
inc
jbe
div
scas
cmps
dec
mov
cli
cli
mov
pop
adc
fadd
aad
ja
ss
cld
ss
lods
xchg
dec
dec
or
stos
in
fwait
sub
cs
test
movs
mov
push
and
imul
xchg
retf
retf
sub
(bad)
retf
cmp
inc
dec
mov
fwait
imul
xchg
sbb
out
les
out
into
(bad)
in
out
jl
nop
je
push
and
cmp
push
fcom
movs
fstp
fs
ss
btr
pop
retf
sub
sti
xor
sahf
add
retf
repz
enter
pushf
cli
std
xchg
pushf
cdq
fcomip
xchg
adc
add
dec
pushf
push
pop
pop
cli
cwde
cmp
sub
test
mov
hlt
pop
fdiv
cmp
fisttp
stos
push
xor
in
aaa
add
aam
addr16
shl
daa
popf
cwde
std
shl
(bad)
pop
mov
outs
and
jl
mul
fldenv
bound
xor
ret
add
push
or
je
sbb
in
inc
cli
adc
pop
or
xor
cli
inc
pandn
in
fmul
xor
mov
inc
mov
sbb
jg
mov
xlat
inc
nop
pop
xor
inc
push
je
sub
mov
adc
(bad)
cli
loope
jne
pop
das
fdiv
int
or
(bad)
jecxz
jmp
adc
cmp
rol
inc
inc
imul
cmp
inc
and
adc
popf
(bad)
mov
ja
adc
std
call
imul
pop
(bad)
fnstcw
das
push
xchg
cld
xor
and
scas
mov
sbb
dec
hlt
pushf
in
mov
cmp
jb
push
sbb
aam
pop
mov
icebp
jbe
mov
movs
pop
push
jp
add
inc
jns
push
push
ror
repz
xlat
into
mov
adc
cmp
fisubr
ss
add
sbb
or
mov
push
jmp
rcr
fnstcw
pop
dec
lds
js
sbb
int3
xchg
ror
test
xchg
mov
adc
shl
aad
push
push
shl
ins
into
adc
mov
cmps
dec
and
xchg
mov
cld
pop
sahf
push
add
outs
fbstp
jne
ret
jns
push
mov
out
shr
fs
xor
ds
mov
hlt
lea
pusha
pushf
sbb
out
cmp
and
rol
xchg
push
clc
push
mov
jg
push
push
mov
dec
mov
outs
ror
add
fisubr
out
lock
pop
pop
jecxz
inc
jmp
ds
or
out
fdivr
repnz
(bad)
std
or
cmp
int
adc
cmp
and
popa
inc
lea
loope
fild
push
cmp
not
add
fild
movq
dec
ds
cmps
xchg
pop
and
lds
sub
push
sti
cmp
inc
in
add
and
or
lahf
hlt
mov
cmp
push
fdiv
and
or
pop
xchg
pop
mov
jno
mov
loope
lock
fwait
sub
xchg
or
push
popf
inc
shl
xchg
pop
xchg
jmp
add
mov
or
sbb
mov
ja
ins
lahf
pop
es
(bad)
das
xchg
fdivp
jns
cmps
push
std
jns
mov
das
push
mov
push
adc
dec
add
push
data16
loope
stos
imul
in
xor
sbb
clc
mov
sub
das
add
fs
lods
leave
cmps
out
mov
dec
into
or
loopne
xchg
jp
ins
jno
cmc
mov
lods
xor
aam
mov
test
mov
(bad)
imul
add
pop
xchg
in
or
or
xlat
int3
inc
mov
mov
and
movs
(bad)
lods
(bad)
xor
retf
bound
lods
ret
mov
sub
lock
sbb
mov
imul
xchg
jp
mov
xchg
sbb
fwait
stos
in
add
sar
iret
in
jbe
sub
in
(bad)
(bad)
jno
pop
fcmovnb
scas
out
jmp
push
mov
dec
loop
xor
xchg
jle
sub
(bad)
leave
xchg
pop
popa
aaa
mov
and
dec
jmp
xchg
push
fwait
and
fisub
ds
inc
gs
cmp
test
imul
into
mov
and
cmp
or
bound
fdiv
sbb
ror
inc
stos
mov
out
jo
movs
rol
enter
stc
sbb
in
outs
aas
add
aaa
sbb
jae
jnp
and
aad
ror
mov
mov
(bad)
data16
cmp
push
or
in
pop
sti
mov
pop
mov
push
aad
call
inc
adc
and
outs
xor
mov
sbb
mov
sti
mov
push
sub
shl
mov
sbb
hlt
ds
mov
outs
(bad)
push
adc
or
lods
sub
daa
sbb
jnp
push
add
mov
pop
dec
fwait
cs
sbb
int3
aad
cld
shl
(bad)
dec
retf
add
lds
rcl
mov
jbe
jl
and
sub
adc
jp
cmc
sbb
cli
mov
stos
outs
fs
push
fisttp
ins
dec
pop
inc
or
rcl
mov
jbe
xchg
sbb
enter
mov
xchg
jmp
out
ret
push
out
dec
fistp
sbb
mov
sbb
lds
sbb
mov
call
fwait
adc
mov
dec
test
sbb
in
xlat
gs
(bad)
shl
xor
or
loopne
fiadd
int3
and
jmp
mov
or
std
mov
jle
mov
push
out
jns
mov
add
jmp
in
xor
outs
lahf
enter
fsubr
sbb
nop
mov
jnp
xor
(bad)
sub
mov
pop
arpl
jns
scas
test
hlt
inc
push
mov
sti
shl
jo
sbb
push
cli
in
mov
adc
mov
movs
call
push
pop
retf
xchg
lock
sti
test
mov
sub
lods
cdq
add
xor
and
pop
pop
je
and
xor
and
mov
xchg
lock
in
and
push
xchg
fimul
jl
and
stc
daa
call
sub
inc
aad
pop
jmp
fcom
push
jmp
fmul
push
das
shl
imul
std
jns
jne
mov
fisttp
stc
inc
dec
out
xchg
into
mov
mov
test
dec
arpl
dec
adc
xor
inc
je
sbb
xlat
jge
push
stos
cmp
xchg
push
inc
std
mov
xchg
add
pop
dec
xchg
movs
scas
push
test
mov
jb
les
orps
pushf
iret
inc
loop
pop
fs
test
mov
out
popa
add
movs
mov
cmp
mov
ror
inc
pop
sti
callw
add
and
xchg
mov
es
cwde
inc
in
inc
imul
scas
clc
cwde
aaa
add
xchg
jge
frstor
pop
sbb
sahf
shl
mov
pusha
jmp
test
iret
push
loope
ret
mov
ror
xchg
(bad)
scas
(bad)
jecxz
mov
call
div
fistp
test
push
adc
retf
cmp
mov
sbb
les
mov
jmp
xor
ins
push
push
inc
mov
and
pop
adc
adc
dec
mov
es
movs
pop
stc
fwait
inc
(bad)
icebp
inc
xchg
test
sub
sbb
int
push
xor
push
xchg
jl
fiadd
xor
in
dec
retf
cmp
jns
push
pop
inc
pop
xchg
pop
daa
add
aam
xor
iret
test
data16
xor
xor
int3
adc
xchg
pop
ins
sbb
mov
mov
add
(bad)
out
push
fwait
(bad)
and
fadd
outs
in
mov
mov
xchg
mov
stos
adc
sbb
imul
dec
sub
sub
jae
push
jle
movs
inc
mov
aaa
cmp
in
jge
push
cmps
pushf
jmp
shl
xchg
jb
fldln2
popf
xchg
mov
or
sbb
fisubr
fcmovnu
add
aas
jo
sub
mov
push
in
xchg
xor
out
and
and
jle
out
leave
ds
mov
div
fs
or
and
mov
mov
lds
jnp
popf
jns
adc
std
jnp
jge
scas
and
loope
inc
fisttp
mov
adc
xchg
icebp
popf
and
mov
mov
fmul
aaa
out
pushf
push
scas
stc
xor
push
ret
std
push
mov
sub
xor
fld
jno
push
sbb
cwde
in
sub
je
cmp
jbe
inc
popa
add
xlat
push
xor
sbb
rcr
inc
stc
jle
jne
xchg
push
or
(bad)
(bad)
stc
sbb
(bad)
(bad)
pop
call
adc
test
xchg
xchg
adc
mov
jge
pop
adc
cld
pop
scas
test
out
push
rcr
bound
sbb
pusha
lods
xchg
mov
cmps
jle
cmp
xlat
stos
shr
mov
jmp
pop
push
push
stos
xor
push
adc
or
push
adc
aam
fucomip
jbe
cmp
jb
sti
fld
aam
dec
sti
inc
test
jl
in
jmp
sub
pop
cmps
fcomp
inc
jbe
and
jo
adc
and
push
dec
adc
js
and
cmp
lods
aaa
mov
gs
mov
mov
out
mov
mov
aam
out
add
jmp
in
int3
push
ins
ja
xchg
xchg
jecxz
push
inc
mov
clc
dec
pop
add
fidiv
or
jle
out
add
ins
es
pusha
loope
frstor
push
push
std
iret
call
push
iret
mov
jecxz
add
pop
outs
lods
jae
pop
mov
cmp
adc
cmp
lods
add
jg
pop
(bad)
call
pusha
inc
scas
sbb
mov
mov
rcl
mov
or
pop
mov
icebp
pop
fcom
mov
ror
mov
push
imul
iret
sbb
fisttp
adc
inc
inc
inc
push
and
jo
jne
mov
jl
jecxz
(bad)
int3
inc
repnz
mov
loop
cmp
js
je
mov
cs
cmp
add
and
mov
push
xchg
(bad)
sbb
imul
(bad)
fmul
movs
xor
cmp
cmps
inc
je
mov
inc
pop
sbb
push
mov
shl
inc
(bad)
mov
cmp
mov
sbb
dec
mov
xchg
stos
iret
push
mov
(bad)
loop
pushf
sbb
jbe
ins
fsub
pushf
cmp
sti
inc
(bad)
frstor
or
mov
cmp
and
and
ret
push
lods
cmp
mov
or
fmul
xor
(bad)
shl
adc
mov
enter
cld
lahf
daa
inc
retf
lahf
adc
push
scas
jmp
push
retf
push
or
int3
mov
sahf
cmp
jmp
inc
mov
je
push
dec
pop
sbb
jbe
int
sar
leave
rcl
fnstenv
jp
inc
xchg
daa
adc
inc
jb
mov
cli
mov
fldl2t
out
dec
in
in
mul
jno
add
jnp
mov
adc
push
pop
cmps
call
sub
xor
jge
add
add
jne
arpl
xchg
sbb
or
mov
mov
or
repz
jb
push
outs
jne
retf
fisub
(bad)
jo
jae
dec
das
fs
test
add
sbb
adc
inc
push
aaa
jmp
and
add
add
popf
sub
sbb
jns
cmp
cdq
test
bswap
xchg
pop
jl
inc
lods
jb
mov
add
xor
pop
xor
stos
ret
(bad)
jg
inc
fwait
not
push
add
mov
jns
and
sub
or
out
movs
mov
jo
pop
push
push
push
pop
pop
es
cmp
mov
popf
test
bound
aaa
call
loope
xchg
nop
cmp
xchg
out
inc
xor
jmp
out
stos
cmp
mov
out
icebp
push
and
cs
dec
es
sub
test
out
mov
movs
cmps
cld
xchg
jecxz
in
repz
leave
pop
push
loope
sar
out
mov
ins
mov
jg
int3
mov
lds
fdiv
pop
stos
(bad)
push
(bad)
xor
ds
mov
push
outs
movs
iret
out
add
inc
xchg
mov
lods
cmp
or
hlt
ins
mov
cmp
imul
repnz
sti
movs
xchg
adc
(bad)
jbe
pop
cs
shl
cmps
ds
fucomi
data16
stos
iret
in
mov
fldl2t
neg
mov
xor
addr16
lahf
cmps
pop
lea
mov
mov
fisttp
dec
cmp
cmps
xchg
mov
cmc
outs
ins
aas
push
aam
jne
sti
in
lahf
mov
fwait
lahf
dec
push
push
xor
cmp
jnp
pop
loope
ret
inc
pushf
shl
scas
fs
ins
outs
icebp
dec
inc
xor
push
mov
cmp
pop
cmp
je
push
mov
add
jp
lea
rcl
je
(bad)
iret
inc
mov
stc
or
cmovbe
ss
in
jns
test
mov
xchg
mov
xlat
test
mov
push
test
stc
popf
mov
icebp
arpl
dec
mov
sbb
cmp
xor
rol
xor
test
push
pop
inc
xchg
push
icebp
xor
fistp
int3
cmc
jne
add
dec
test
es
pushf
loopne
icebp
js
mov
add
test
and
inc
cmp
mov
or
out
xchg
xor
pop
daa
pushf
fld
jge
xchg
call
fimul
addr16
pusha
lock
rcl
add
loop
mov
inc
fbstp
pusha
pop
cmp
test
fistp
stos
sub
or
in
arpl
push
mov
pop
lds
sub
xchg
pushf
sbb
int
dec
lods
xor
or
jg
pushf
dec
in
pop
add
mov
lahf
jo
or
and
daa
push
sub
mov
sar
push
(bad)
test
adc
inc
cwde
sbb
add
lds
xchg
es
stc
push
mov
push
cwde
test
xchg
inc
adc
ins
xor
aad
sbb
cmc
repnz
aas
mov
mov
(bad)
sub
add
fsubrp
add
or
mov
std
xor
sbb
push
cmp
xchg
stc
and
dec
mov
and
int
pusha
mov
popf
loop
out
and
xor
clc
push
stc
or
jne
push
push
add
scas
mov
packsswb
jno
dec
jb
pop
push
jns
mov
dec
(bad)
cmps
jg
cs
push
out
adc
cli
or
test
inc
movs
cmps
push
cli
imul
scas
mov
jp
movs
sbb
in
and
fld
loop
pop
adc
fwait
cmp
mov
mov
pop
fisttp
mov
xor
mov
stos
lods
cmp
cmp
cmc
cmp
movs
mov
xlat
dec
sbb
and
mov
jmp
push
push
add
mov
fnstsw
push
(bad)
icebp
pushf
test
cmc
cmc
aaa
sbb
das
pusha
push
or
aad
sar
int
pop
dec
xchg
mov
or
(bad)
cmp
mov
enter
test
sahf
dec
loope
movs
lea
jl
push
push
loopne
jmp
int3
pushf
out
loop
(bad)
fdivr
sti
xchg
retf
data16
cmc
out
out
test
push
cmp
sbb
pop
add
fnsave
imul
popf
ja
dec
push
mov
mov
cs
mov
and
shl
push
fs
stos
inc
int3
mov
sub
xor
jne
add
(bad)
clc
xor
scas
adc
and
ja
std
cmp
pop
cwde
xchg
inc
add
fild
add
mov
and
sbb
push
iret
push
xor
xor
mov
div
cmp
adc
dec
jecxz
(bad)
in
jge
cmps
push
push
mov
xor
cmps
stc
xchg
cmp
outs
or
mov
stos
in
test
pop
sub
dec
cld
jnp
and
push
clc
add
inc
jmp
push
mov
or
daa
and
cmp
pop
pusha
mov
fs
mov
lahf
in
push
cs
mov
std
add
mov
jo
push
je
out
pop
ret
dec
jp
xchg
adc
outs
ja
cwde
xchg
sbb
mov
fist
and
pop
gs
loop
test
xor
gs
loop
adc
jb
test
ja
stos
jp
add
mov
cmp
inc
cmp
push
ds
jmp
imul
xor
push
mov
or
cmp
adc
rol
ja
pop
jmp
add
pop
jne
(bad)
(bad)
pop
stos
jns
pop
addr16
sub
nop
movs
lea
out
or
les
adc
lock
addr16
xor
jo
test
mov
loopne
in
xor
cmp
or
fbstp
xchg
mov
mov
mov
xor
cmc
sahf
jo
or
clc
pop
jmp
xor
add
push
cdq
popa
jecxz
jmp
les
test
(bad)
add
mov
addr16
and
sti
pop
inc
retf
mov
std
shl
mov
mov
das
rcl
sub
push
les
aas
xlat
dec
aad
cli
sbb
mov
cmps
sti
jecxz
fcmovne
sub
jg
arpl
mov
pop
mov
aas
fwait
add
(bad)
cmc
dec
test
dec
inc
jmp
dec
in
push
test
(bad)
aad
push
retf
mov
cmp
dec
ficom
add
enter
cmc
sbb
loopne
xchg
imul
and
mov
add
dec
inc
into
mov
pop
popf
push
adc
iret
push
xor
xchg
(bad)
retf
dec
fiadd
out
scas
sar
mov
out
sbb
mov
mov
xchg
(bad)
jge
pusha
cmp
das
sub
in
icebp
mov
retf
sbb
xchg
fisub
dec
test
mov
retf
addr16
mov
jae
jmp
xchg
sbb
adc
in
pop
xor
fdivr
inc
xchg
dec
movs
lahf
gs
xor
call
sub
lods
sbb
out
repnz
fadd
out
dec
add
sar
out
into
inc
ficom
std
adc
(bad)
jne
mov
push
ja
and
jmp
retf
xchg
daa
and
mov
pop
mov
sbb
push
movs
not
mov
or
imul
mov
js
inc
adc
clc
cmps
jb
icebp
jmp
or
into
push
data16
adc
or
xchg
cmp
mov
call
mov
jecxz
ds
loopne
xor
int3
jns
cmp
retf
lds
jns
js
sbb
mov
dec
test
dec
ins
out
ss
add
pop
pop
push
in
imul
adc
adc
pop
dec
addr16
xlat
inc
std
std
or
jecxz
and
mov
push
sbb
int
sbb
cmp
(bad)
fwait
push
jbe
mov
(bad)
mov
into
xchg
pop
aad
mov
rcr
inc
in
mov
or
test
adc
in
mov
cmp
lds
and
or
cld
push
jg
add
fisttp
add
add
enter
mov
(bad)
loope
push
neg
loope
jg
push
cmp
clc
shl
jns
dec
das
stos
mov
lock
pushf
popf
pop
adc
mov
inc
push
mov
add
xor
push
pop
mov
popf
sbb
push
in
push
push
cs
dec
jle
in
sahf
xchg
xchg
mov
mov
mov
push
mov
xor
(bad)
dec
pop
scas
mov
arpl
sub
mov
cmc
inc
push
mov
inc
lods
test
pop
adc
inc
and
jo
dec
mov
rol
sti
pop
clc
pusha
xchg
dec
xlat
mov
es
fistp
das
stc
push
xor
inc
xor
pop
pusha
pop
pusha
in
mov
pusha
mov
mov
cmp
out
cli
push
fs
sub
scas
jnp
int3
inc
shr
sub
(bad)
jmp
push
xchg
lahf
shl
cld
sti
mov
loope
in
aaa
out
lods
add
cmc
cld
mov
out
(bad)
ror
loop
sub
int3
call
pop
loope
cld
pushf
cmp
jg
aaa
sub
xchg
mov
sbb
fisttp
inc
retf
push
lods
mov
mov
sub
cmp
ins
clc
dec
loope
(bad)
add
cld
ss
xchg
pop
lods
dec
mov
ins
cmps
pop
adc
add
push
jae
sub
nop
jne
shl
stc
ficomp
shl
and
jmp
dec
xchg
push
arpl
add
pushf
and
dec
scas
adc
mov
xor
cwde
xor
mov
js
jl
scas
pusha
retf
sbb
retf
adc
push
adc
scas
int3
jb
lahf
movs
(bad)
sub
xchg
xlat
lock
ss
xor
(bad)
dec
stc
mov
mov
sub
lods
jp
xchg
xchg
movs
ja
dec
mov
jnp
das
jnp
pop
ror
push
xor
dec
sub
loop
je
leave
js
jae
repnz
sub
cdq
jno
lea
loop
mov
inc
xor
lods
data16
cdq
xor
rcl
iret
test
and
in
clc
dec
xchg
mov
popf
xor
fsub
scas
fisub
(bad)
dec
lds
ins
mov
ds
pop
sub
mov
jmp
xor
or
jmp
popa
jbe
xor
out
leave
or
fidivr
jecxz
mov
aam
rcl
mov
js
mov
or
jmp
daa
push
out
xlat
mov
out
and
xchg
jbe
jmp
andps
(bad)
and
test
(bad)
pushf
add
lods
mov
arpl
scas
push
adc
es
jp
mov
fs
cwde
in
jmp
ds
retf
push
mov
fs
jmp
mov
outs
test
or
sahf
pop
push
or
push
lock
sbb
mov
div
inc
fdivr
jns
inc
(bad)
ins
cmps
adc
and
adc
adc
sub
add
xchg
(bad)
adc
lods
push
outs
push
jp
cmp
push
fwait
retf
pushf
xchg
adc
jns
(bad)
push
pop
std
rol
push
(bad)
les
imul
cmp
lock
jp
xor
call
jne
or
xchg
push
mov
and
push
mov
and
add
ficomp
popf
scas
les
ins
and
aad
xchg
mov
jne
pop
inc
dec
sbb
xlat
push
cmp
mov
sbb
psrld
inc
mov
xor
ds
shr
jo
outs
mov
sub
mov
addr16
fisubr
cld
scas
add
rcr
aam
push
ss
jbe
popa
(bad)
adc
mov
jmp
and
loope
cmp
pop
in
pop
inc
daa
sahf
daa
adc
shl
(bad)
mov
imul
mov
inc
stos
push
and
retf
xchg
add
xor
call
shl
dec
bswap
mov
cmp
pop
out
inc
or
out
xchg
cmc
ss
mov
xchg
xor
bound
adc
loopne
or
mov
outs
(bad)
call
adc
fadd
fbstp
and
push
ja
sub
jns
lds
jecxz
adc
or
mov
push
jb
inc
dec
cmp
lods
mov
and
push
lea
xchg
xchg
jns
mov
fwait
adc
dec
jle
ja
xor
jno
xchg
sbb
and
ss
xor
(bad)
pushf
mov
in
and
inc
aas
sbb
adc
mov
sbb
sbb
push
int
enter
adc
stos
rcr
(bad)
pop
jb
jecxz
cmp
mov
into
cld
or
cli
or
movs
adc
jbe
loope
add
mov
sub
std
enter
jl
loop
jp
xor
in
dec
cmp
lds
retf
dec
test
or
call
push
arpl
outs
mov
dec
js
fidiv
jge
and
adc
sub
popf
lea
jmp
shr
cmp
(bad)
jl
adc
cdq
cmp
jmp
mov
and
sub
leave
mov
icebp
add
mov
cmp
call
xlat
clc
and
pop
cdq
jns
mov
cmc
(bad)
leave
stos
sub
jl
(bad)
jbe
inc
pop
sbb
arpl
mov
test
jnp
pop
loopne
ucomiss
shr
imul
mov
xchg
and
push
(bad)
test
fidivr
sub
test
push
mov
or
cmc
pop
push
(bad)
xchg
fs
lds
sbb
ror
loope
bound
pop
add
mov
push
dec
ret
jno
jns
jne
cmps
pop
adc
mov
icebp
mov
mov
sub
push
cli
xor
mov
das
nop
push
repnz
sub
jmp
stos
add
jecxz
(bad)
sar
mov
mov
popf
lods
mov
lods
daa
inc
jp
sbb
fnstcw
and
mov
ja
(bad)
(bad)
out
pop
mov
fisub
popf
adc
les
test
inc
(bad)
mov
mov
call
sub
cli
add
cmps
or
out
sahf
jmp
aam
neg
paddb
push
cmps
fs
retf
push
ins
ret
xor
adc
sbb
dec
mov
arpl
jmp
sub
pop
or
mov
mov
ins
retf
mov
ja
push
psraw
push
in
xchg
mov
pop
stos
mov
fisttp
mov
jle
ins
inc
div
mov
std
stos
or
cwde
push
shl
cmps
les
fisttp
xchg
loopne
or
and
add
adc
xlat
xchg
dec
push
inc
xchg
dec
mov
xchg
out
imul
inc
inc
outs
mov
lock
popa
jmp
into
shr
or
test
ins
ret
mov
ins
jo
outs
hlt
enter
and
add
cdq
sub
mov
xchg
sub
lods
test
cmps
add
gs
mov
jmp
pop
out
sbb
icebp
or
jne
data16
or
jle
lahf
sub
outs
sbb
xor
test
fs
loop
jge
test
and
cmc
movs
push
cwde
ins
(bad)
push
lods
out
lock
cli
rcr
ret
fst
add
popa
repnz
dec
and
aas
outs
mov
xchg
inc
mov
out
iret
mov
add
out
add
in
cmp
(bad)
jnp
int3
ret
dec
out
xchg
push
inc
icebp
inc
mov
fadd
aad
stos
std
jmp
outs
sbb
mov
cld
js
cmp
or
dec
ja
xchg
scas
out
push
popa
das
sti
and
add
repnz
pop
dec
jmp
fisttp
cmps
pushf
lea
or
cwde
pop
or
inc
(bad)
out
xchg
not
push
ficom
jbe
stos
outs
mov
cli
lods
push
fadd
rep
sbb
mov
xchg
pusha
cmps
sub
xchg
sub
mov
and
js
mov
scas
movs
or
jg
mov
mov
nop
mov
push
ins
or
loope
imul
bound
pop
add
loop
push
sbb
ss
mov
shr
shl
mov
stos
add
push
in
psrld
adc
pop
mov
ja
mov
clc
push
dec
mov
test
mov
push
sub
jo
popf
iret
int
xor
xor
and
bound
jge
xchg
(bad)
push
adc
cwde
jg
jnp
sti
les
ss
cdq
pop
or
in
loopne
popf
js
pop
popf
adc
lods
imul
mov
cmps
aad
icebp
inc
ja
and
xor
adc
ins
dec
pop
daa
xor
lock
adc
hlt
inc
pop
lods
(bad)
ins
fisubr
aam
mov
mov
dec
push
cmp
mov
xchg
gs
add
dec
and
xchg
jae
fadd
jae
or
mov
test
out
dec
test
push
push
rcr
fwait
push
rcr
mov
and
test
and
push
xchg
mov
ret
rcr
repz
stos
push
clc
or
loope
adc
pop
sub
aaa
(bad)
mov
or
xor
test
add
push
test
in
jae
mov
inc
aam
dec
aam
adc
jns
or
fbld
jno
cmp
pop
xchg
jno
and
rcr
pop
xor
mov
in
aaa
addr16
pcmpeqb
in
std
retf
push
xchg
jg
ins
retf
jge
(bad)
push
cmp
xor
lods
lahf
lods
les
mov
push
mov
pop
daa
ret
prefetch
stos
adc
mov
pop
pusha
jbe
call
xchg
xchg
(bad)
mov
(bad)
pushf
and
mov
ficomp
add
std
movs
push
add
push
daa
jp
pop
dec
(bad)
mov
mov
and
dec
pop
xchg
dec
les
ss
add
push
mov
push
rcl
out
shl
jmp
cwde
sub
pop
aas
mov
daa
jbe
mov
jne
shr
inc
out
pop
je
fs
jnp
repz
fcmove
mov
jno
out
or
or
repnz
or
repz
mov
test
jb
xlat
popf
mov
xlat
rcl
test
pop
add
cmps
test
xor
push
xchg
retf
pop
mov
cwde
jle
rcr
dec
and
mov
hlt
loopne
dec
call
sub
jns
dec
rcr
or
mov
fs
arpl
push
and
das
and
ins
mov
or
mov
pusha
dec
sbb
jne
inc
lods
or
test
call
cmc
sub
fsubr
xor
les
outs
int3
sub
outs
les
sub
mov
push
test
mov
mov
sub
cdq
scas
push
clc
mov
adc
jecxz
retf
mov
fisubr
iret
in
ds
imul
int
retf
mov
mov
popf
lahf
xchg
aaa
push
cld
ret
cmps
add
mov
pop
aam
sahf
mov
sbb
cli
mov
xor
mov
sbb
aas
jno
dec
repz
push
xor
fldcw
and
mov
into
shl
push
sbb
pop
or
loop
adc
mov
ret
mov
and
adc
jb
es
fisub
sbb
int
xchg
in
aam
pushf
add
out
xor
mov
or
cmp
data16
cdq
push
sbb
ins
mov
cdq
ss
sbb
sbb
mov
adc
sub
mov
in
sub
pop
jp
loop
les
ja
scas
or
xchg
sti
test
test
nop
and
jmp
xor
mul
vmovaps
(bad)
push
inc
stc
adc
cmps
push
sbb
call
xchg
push
add
jbe
add
sub
sti
gs
jg
pop
mov
jbe
dec
cld
pop
and
jmp
rcr
loop
mov
cmps
cwde
cs
test
in
fwait
dec
imul
jg
fs
or
jmp
cmp
push
pop
lea
repnz
pop
mov
movs
dec
mov
sub
jmp
sahf
pop
mov
xor
pop
fiadd
jecxz
pop
cli
scas
or
mov
in
jno
das
cdq
inc
dec
repnz
out
jmp
pop
jbe
xor
test
ret
push
sub
bound
jg
out
ins
std
loopne
loop
mov
les
ss
mov
xchg
aam
fs
(bad)
cmc
jne
mov
lds
scas
iret
stos
hlt
fiadd
cli
and
test
call
aad
mov
cmp
data16
test
xor
push
adc
cdq
ins
outs
inc
repz
fistp
push
(bad)
mov
xchg
sub
jle
jp
jne
push
icebp
out
or
sbb
jp
test
outs
cmp
in
outs
xor
in
cmp
test
pop
into
jp
mov
(bad)
dec
jnp
jecxz
fcmovbe
or
aam
sbb
cmp
sbb
scas
fstp
and
adc
add
imul
dec
inc
xor
or
lea
cmp
out
dec
repz
mov
test
sbb
ins
dec
sbb
test
out
push
fs
xchg
push
aad
adc
outs
push
push
or
xlat
dec
xchg
push
mov
sub
jnp
fs
adc
ret
outs
icebp
mov
jp
popa
mov
push
je
mov
xchg
xor
nop
jnp
mov
mov
dec
std
mov
mov
sbb
adc
mov
in
dec
mov
loop
sub
xlat
inc
add
fwait
sbb
pop
out
xchg
inc
(bad)
ja
mov
imul
cmp
out
cmps
jae
inc
pop
and
or
jmp
retf
lahf
push
jecxz
bound
lds
aas
mov
outs
adc
jne
mov
popfw
sbb
dec
push
lods
sbb
ins
(bad)
fwait
imul
mov
sub
xchg
sbb
push
rcl
cmps
aam
xor
int
imul
mov
arpl
jns
jmp
repz
mov
out
inc
fs
dec
xchg
dec
xchg
or
loope
jg
(bad)
retf
(bad)
sbb
mov
jno
fdivr
fst
mov
mov
lahf
repz
lods
dec
sub
adc
xor
push
in
in
retf
or
mov
jecxz
addr16
pop
inc
mov
outs
inc
jp
cmp
adc
fwait
imul
jb
xor
cld
fwait
lahf
sub
js
dec
or
call
lea
sub
jg
mov
outs
ret
pop
push
jno
or
iret
push
mov
push
and
retf
lods
or
inc
sbb
lahf
test
dec
lea
push
adc
push
out
aam
sub
or
jne
cli
out
stc
add
inc
cmp
enter
test
iret
mov
jmp
cmp
jb
dec
clc
mov
(bad)
cld
cli
icebp
outs
cmp
sbb
stos
jge
icebp
pop
cmc
cwde
daa
adc
pushf
imul
jne
inc
test
ds
(bad)
movs
add
je
dec
and
out
mov
sbb
dec
sbb
jmp
movs
adc
push
test
jg
and
jmp
ss
sub
dec
jb
in
(bad)
bound
pusha
dec
daa
fwait
cdq
add
int
adc
mov
arpl
xchg
pusha
push
and
ins
sub
push
loopne
sub
ror
cmps
or
dec
pusha
xchg
inc
hlt
mov
sub
ret
mov
cmp
inc
scas
cmp
mov
lahf
xor
or
adc
inc
in
inc
pop
mov
hlt
icebp
cmovl
pop
mov
push
mov
cmp
cmps
cmp
jp
mov
aaa
mov
mov
pop
fdivr
test
movs
ret
cmp
pop
mov
xor
in
cli
sbb
xor
lods
sahf
and
ret
(bad)
sbb
sbb
jne
leave
popa
loop
push
and
int3
mov
idiv
jmp
mov
xor
shl
ins
stc
push
adc
inc
adc
pop
inc
daa
jp
fstp
jno
adc
(bad)
imul
push
jmp
push
sti
xlat
das
push
out
or
pop
push
popw
cmp
adc
xor
or
cs
rcr
jmp
push
jecxz
mov
sub
mov
sbb
sar
ss
pop
das
mov
jne
add
push
ret
cmp
dec
sub
add
sbb
fisub
adc
leave
ret
outs
test
inc
gs
or
or
mov
lods
repnz
fstp
add
inc
aam
aad
sbb
dec
push
arpl
push
xchg
out
dec
sar
dec
out
push
fldcw
rol
sub
sti
lock
and
sbb
repnz
adc
jns
data16
mov
jmp
cld
inc
sbb
js
and
repz
mov
push
out
sub
cs
sti
adc
retf
jbe
aam
mov
pop
sub
mov
addr16
mov
jae
repnz
xchg
push
inc
jo
and
fsubr
sbb
xor
push
iret
pop
inc
jge
data16
cmp
sub
bound
sbb
fs
(bad)
or
jbe
mov
pop
pop
add
or
ins
xchg
cdq
in
mov
adc
cmc
stos
enter
shr
mov
arpl
jbe
into
pop
(bad)
and
inc
dec
and
mov
bnd
ja
sbb
jl
push
cmps
add
or
out
and
pusha
ja
dec
cmp
popa
push
inc
xchg
shl
iret
je
push
bound
int3
test
pop
pop
dec
push
dec
xchg
imul
push
dec
and
int
outs
fsubr
retf
dec
pop
inc
cmp
mov
int
div
add
jmp
test
shl
lock
mov
push
movs
aaa
ret
push
add
rol
cmp
and
push
loope
or
or
inc
or
push
adc
not
popa
or
sar
dec
adc
jmp
cmp
out
pusha
xchg
cmp
xor
pop
sbb
pop
mov
fcomp
cs
mov
push
mov
cmps
cs
push
loope
push
xor
cs
out
aaa
daa
in
push
ins
inc
cmp
xchg
lods
cmp
xor
loop
mov
aam
pop
lahf
enter
loop
std
rcl
ja
or
sar
addr16
mov
jle
stc
mov
push
arpl
jno
jge
xchg
jge
test
push
in
cwde
ffreep
pop
pop
fcmovb
int
dec
xchg
arpl
inc
xchg
mov
pusha
call
stc
rcr
mov
or
push
jecxz
ins
inc
or
sti
mov
adc
out
cmp
push
inc
ds
xchg
nop
mov
psubd
ins
je
xchg
outs
sub
(bad)
add
adc
setg
popa
cli
fst
rcl
xchg
jno
xor
sub
aas
mov
or
fs
add
xor
sti
mov
aam
enter
fnstsw
clc
cdq
fdiv
in
(bad)
mov
or
loop
inc
adc
aas
cld
mov
push
pop
jmp
fwait
add
data16
cmp
push
xchg
shl
iret
ja
push
mov
push
outs
arpl
xchg
push
cmp
sahf
push
pop
and
or
stc
jecxz
les
cmps
rcr
add
mov
xchg
in
test
test
xor
jmp
lahf
lock
or
repnz
cmp
retf
adc
jne
pop
(bad)
sbb
xchg
aaa
pop
jne
jmp
ja
sub
add
or
inc
bound
mov
cdq
push
in
xor
cmc
shl
adc
mov
loope
cli
addr16
push
and
in
cmp
lds
pop
int
out
dec
cmc
stos
loope
xchg
pushf
imul
pop
aad
dec
mov
gs
lods
call
add
call
xchg
mov
jg
jecxz
imul
les
in
jg
xchg
dec
(bad)
in
push
test
das
nop
mov
(bad)
fnstcw
jg
push
sbb
mov
push
adc
add
imul
daa
out
call
shl
add
cmp
sbb
adc
xchg
rcl
adc
add
push
mov
sbb
fisttp
dec
mov
pop
cmps
xchg
sahf
add
imul
popf
or
aaa
mov
hlt
(bad)
xor
pop
mov
add
retf
and
sbb
push
fwait
add
dec
push
pop
and
push
sub
push
pushf
pop
add
xchg
sar
loop
sar
sbb
or
sub
pop
call
stc
not
push
mov
adc
lahf
and
fld
xlat
lods
jnp
cld
mov
dec
sub
popa
cli
mov
cmp
es
mov
cmps
iret
push
or
(bad)
xor
mov
out
sub
aaa
xchg
inc
inc
iret
fbld
iret
out
push
pop
js
xchg
in
push
xchg
mov
pop
jnp
fld
cmp
jl
sub
int3
lahf
push
sbb
out
push
pop
sbb
ins
clc
push
xor
movs
sub
sahf
xor
pop
stos
sti
fidivr
popf
inc
xchg
xor
sub
ss
push
in
cmps
mov
(bad)
and
dec
dec
pop
cmp
sbb
jo
(bad)
push
cs
pop
call
leave
pop
fiadd
xchg
lds
(bad)
push
mov
xchg
sub
repz
mov
or
adc
pmaxub
jl
mov
jge
loope
dec
jae
shl
mov
ins
fsub
outs
mov
daa
int
(bad)
movs
jmp
repz
jle
clc
test
pop
ins
jl
pop
ret
enter
xor
mov
or
push
cmps
xchg
rol
ret
enter
ret
les
not
cld
div
jp
(bad)
call
jmp
jns
push
sbb
into
xor
dec
loope
jbe
push
fs
dec
cmps
sbb
push
xchg
inc
lea
neg
mov
pop
mov
jecxz
(bad)
or
mov
add
rcl
hlt
mov
xor
push
add
out
(bad)
fdivrp
ja
push
(bad)
stos
push
jecxz
pop
dec
and
popa
mov
inc
cmp
and
jg
test
mov
adc
icebp
mov
jmp
sub
or
jo
xchg
(bad)
and
xor
xor
sbb
sub
jbe
mov
in
leave
sbb
aaa
lods
xchg
loopne
dec
jbe
pusha
sub
scas
xor
add
lea
outs
sub
bnd
stc
dec
mov
xchg
xchg
(bad)
push
jmp
add
push
push
jbe
ret
xchg
inc
dec
out
pushf
sbb
call
xor
dec
addr16
sub
push
jle
call
push
or
sub
xchg
inc
xchg
push
(bad)
shr
rcr
pusha
or
cmp
movq
stos
in
and
mov
out
lea
cmps
jns
movs
cwde
bound
ds
jmp
xor
in
in
int3
lahf
ins
test
aam
icebp
xchg
xchg
inc
adc
ds
and
repnz
in
rol
bound
push
iret
xor
fsubr
test
dec
loopne
dec
ins
xor
cmc
add
push
popa
jmp
lods
dec
and
and
movs
into
add
push
xor
xor
adc
ret
addr16
xor
and
xchg
xor
mul
mov
popa
movs
fistp
add
jno
stos
arpl
jne
jg
js
dec
daa
fld
dec
es
fst
loopne
xor
adc
test
jo
jge
push
sbb
cli
js
xor
pusha
cmp
mov
outs
imul
movs
inc
icebp
jnp
fist
xor
mov
outs
cmps
sbb
lahf
push
jg
xchg
lds
mov
jae
inc
ss
lds
jl
call
test
jae
pop
or
imul
mov
add
sbb
push
sbb
add
xor
in
lods
rcr
and
call
loopne
mov
lock
je
paddw
cs
aad
mov
cmp
mov
pusha
gs
mov
mov
cmc
pop
or
push
cmp
or
pusha
(bad)
sbb
sbb
push
fwait
daa
sub
lea
jle
xor
ins
ja
push
or
imul
xchg
fcmovbe
xchg
ins
mov
mov
cli
in
lock
sbb
dec
mov
adc
inc
repz
push
fs
jp
scas
xchg
jge
(bad)
jae
stos
dec
rcl
inc
in
push
push
adc
dec
repnz
daa
(bad)
sbb
call
cld
out
fstp
jae
mov
das
fwait
mov
add
nop
ins
fmul
sub
sbb
sahf
push
xchg
clc
lods
jmp
imul
cld
fisubr
iret
cwde
pusha
scas
jmp
dec
push
push
js
popa
push
adc
jmp
jnp
pop
in
(bad)
mov
xlat
mov
jmp
inc
jne
sub
jo
adc
pop
outs
cmp
xchg
loopne
cmp
mov
test
pop
jp
add
push
and
xchg
call
enter
test
out
outs
out
stos
hlt
movs
data16
pop
call
mov
out
mov
mov
inc
jmp
in
push
sbb
add
adc
mov
sbb
or
mov
in
sbb
mov
cld
aad
out
in
lahf
jp
cmp
mov
adc
adc
cmc
cs
jnp
sub
fadd
stc
mov
sti
inc
scas
fadd
inc
xor
pop
adc
add
aad
push
inc
jae
or
ja
lods
xchg
sar
in
sub
sahf
(bad)
(bad)
(bad)
adc
sub
lods
popa
out
test
inc
pop
xchg
add
pop
(bad)
jne
cli
movs
in
jmp
sbb
(bad)
lods
sbb
add
and
jp
push
xchg
and
loopne
iret
dec
add
mov
aam
push
sub
jne
retf
hlt
into
rcr
stc
rcr
inc
dec
test
pop
loope
cdq
pop
retf
nop
out
push
pop
and
cmps
ss
dec
jnp
mov
push
scas
jo
scas
push
fild
sti
imul
jge
jne
or
sub
or
add
jno
lahf
sbb
jle
jg
out
sbb
fld
rol
xchg
popa
cmp
adc
mov
push
outs
mov
jge
das
hlt
repz
sub
add
popa
iret
arpl
sub
jl
sbb
test
aam
(bad)
dec
lahf
pop
inc
add
xor
cld
fsub
inc
mov
pop
or
movs
xchg
jp
arpl
mov
ret
cmp
xchg
mov
adc
inc
cmp
test
and
(bad)
aas
push
dec
inc
or
leave
cwde
and
cmp
movs
pop
jmp
or
sbb
sti
pop
sbb
mov
rol
sub
call
pop
mov
gs
fwait
jl
ss
idiv
jg
jo
push
cwde
xor
adc
xor
cmps
cmp
addr16
mov
dec
sub
leave
idiv
dec
and
in
int
adc
pop
dec
daa
mov
cld
repnz
addr16
outs
in
jmp
dec
xor
out
mov
mov
add
mov
jo
mov
inc
ret
pop
cmc
imul
cmps
call
(bad)
imul
aad
mov
test
mov
test
cwde
ds
sar
je
imul
(bad)
cmc
(bad)
jl
ret
pop
xchg
dec
loope
add
js
mov
push
lahf
test
aaa
stos
and
xor
mov
sub
out
push
cmp
push
lds
jae
jmp
scas
sub
cmps
cmp
pop
cmp
fwait
pop
sbb
stc
(bad)
gs
jp
movs
cwde
push
test
cmc
and
dec
test
movs
movs
fdiv
loopne
dec
aad
(bad)
push
pushf
aad
cs
loope
test
(bad)
retf
aad
movs
pop
(bad)
inc
mov
cwde
mov
inc
(bad)
loope
lods
test
add
xor
enter
idiv
cmp
aad
pop
pop
add
mov
repz
dec
xlat
and
inc
jecxz
mov
mov
add
pop
adc
ret
(bad)
imul
mov
cdq
iret
mov
xor
mov
sub
enter
jg
mov
sbb
in
fs
aaa
sbb
test
rol
push
fisub
jp
in
fidiv
shl
sahf
stos
adc
adc
dec
xor
push
mov
mov
or
adc
sbb
movs
dec
cwde
test
cmc
xchg
sbb
or
iret
ins
sub
fimul
sbb
dec
mov
mov
jge
js
aad
cmc
and
add
fsub
and
cmps
shr
fucomp
not
push
xor
mov
jmp
mov
nop
xlat
jmp
xor
xor
cld
cmc
stos
loope
fidiv
dec
out
xchg
push
push
cmp
mov
mov
scas
xor
rcr
jg
inc
jb
icebp
sbb
pop
scas
clc
cmp
fist
mov
push
xor
push
push
push
test
sti
aas
lahf
test
mov
dec
ret
mov
sub
mov
jnp
push
adc
outs
sbb
or
xchg
cmps
cmps
nop
repz
jae
inc
(bad)
loope
jae
not
loop
(bad)
aam
xchg
mov
add
push
gs
leave
leave
in
loopne
push
out
int
cmp
cmp
jmp
push
mov
ret
jns
loopne
pop
mov
(bad)
mov
or
lods
mov
cmc
ret
cmc
adc
div
ret
retf
push
(bad)
push
dec
xchg
mov
bound
dec
pop
bound
pop
sub
mov
sbb
je
mov
mov
in
lods
xor
add
test
cmp
mov
stos
fdivp
ror
mov
mov
xor
push
xchg
(bad)
mov
jb
mov
leave
popf
sbb
pop
scas
(bad)
jmp
push
jb
ss
lods
pop
pop
cmp
add
(bad)
xlat
or
mov
jae
mov
lock
mov
inc
cli
jo
ins
cmps
or
push
mov
lock
and
pop
shl
push
cld
and
mov
xor
or
fxch
jbe
aas
in
leave
and
cmp
jge
push
mov
add
fidiv
add
mov
fsubr
(bad)
pop
pushf
jmp
push
mov
mov
fwait
call
mov
arpl
sar
mov
or
xchg
mov
mov
push
rcr
cmps
mov
inc
movs
test
das
or
rcl
pushf
add
cli
mov
push
cmps
add
or
mov
sub
cs
xor
std
cmp
cmp
movs
mov
or
dec
(bad)
push
sub
mov
adc
fimul
(bad)
sbb
push
lahf
out
jmp
push
push
adc
pop
ret
addr16
or
dec
adc
mov
jge
push
daa
movs
dec
ja
dec
jl
clc
call
adc
mov
push
sbb
adc
inc
and
lods
leave
and
pop
sbb
(bad)
(bad)
shl
and
out
pop
jle
mov
jmp
xor
ss
(bad)
(bad)
movs
add
pop
int3
and
mov
or
(bad)
sbb
(bad)
xchg
cmp
aad
pop
fcmovnb
or
repnz
fidiv
or
jmp
test
and
or
pop
xchg
jne
ret
jo
and
addr16
mov
cmp
dec
out
cmp
call
sub
jo
ins
add
jmp
push
retf
(bad)
mov
sbb
jbe
lods
stc
outs
xchg
xchg
rol
push
cs
mov
mov
inc
(bad)
xor
jmp
lods
shl
xlat
mov
(bad)
adc
mov
pop
sbb
pushf
mov
adc
pop
mov
xchg
mov
jne
in
xchg
push
xchg
sub
adc
call
mov
fwait
scas
push
adc
mov
test
cmps
push
lods
inc
inc
push
and
cmp
ins
ret
and
movs
ja
fstp
sar
call
sbb
out
mov
sbb
aad
sahf
inc
xlat
fmul
mov
scas
rcr
ret
jne
loopne
pop
test
or
jae
in
mov
retf
rol
popa
jns
cmp
aaa
cld
outs
push
dec
aas
cld
mov
(bad)
clc
pop
ds
(bad)
bound
lock
mov
adc
adc
pop
cmp
ficom
es
xor
mov
clc
sub
(bad)
cmp
mov
add
pop
test
in
adc
sahf
mov
xchg
sbb
out
jge
ins
je
retf
les
std
sbb
mov
mov
mov
outs
inc
pusha
mov
xchg
scas
lock
cmc
out
jns
push
jns
jb
into
add
aas
repz
mov
or
mov
pop
pusha
xlat
pop
xchg
out
xlat
loop
mov
cwde
out
pop
dec
cvttps2pi
lods
or
imul
ret
(bad)
pop
jp
mov
inc
(bad)
repnz
mov
mov
outs
ins
out
mov
adc
out
iret
test
dec
push
in
dec
push
inc
or
rcl
lock
retf
dec
test
lods
dec
jp
push
add
retf
dec
cmp
fild
shl
shl
imul
add
inc
mov
cld
rol
inc
cwde
mov
inc
fwait
sahf
mov
sub
stc
add
jne
dec
inc
or
adc
xchg
mov
pop
inc
sahf
int3
dec
cmps
pop
retf
test
push
ftst
fsub
mov
xchg
push
push
and
call
mov
mov
add
movs
xchg
jb
jmp
add
fild
and
repnz
jl
loop
or
adc
sbb
cmp
loopne
inc
mov
retf
bound
mov
in
ret
cmp
lahf
addr16
lods
je
scas
push
cwde
xchg
js
dec
jnp
mov
fst
xchg
or
jle
xor
movs
pushf
nop
je
xchg
jno
jb
jmp
shl
daa
sbb
aaa
cmp
sub
cs
inc
(bad)
lods
pop
dec
mov
cwde
cli
div
jle
and
inc
test
push
inc
and
ret
shr
cmp
mov
outs
ins
and
cmps
call
movs
mov
cmc
loopne
cld
call
or
cmp
add
mov
cmc
push
xor
or
imul
sbb
or
frstor
adc
rcr
ja
sub
adc
in
lea
mov
xchg
mov
jl
sbb
test
push
ss
pop
xor
pusha
cmps
(bad)
leave
fxch
adc
xchg
inc
dec
push
pop
mov
and
std
daa
pop
pop
pop
mov
data16
shr
ss
pop
test
xor
ja
lea
push
adc
push
or
loopne
add
jbe
dec
ror
js
push
enter
retf
and
lods
shr
pop
fisttp
call
fwait
pop
adc
and
outs
loope
out
mov
mov
cmp
lahf
in
and
sub
pop
pop
outs
mov
clc
pop
sub
test
lds
js
jb
fcom
mov
repnz
push
aaa
outs
popa
mov
stos
mov
sbb
mov
ins
or
imul
or
mov
push
adc
mov
cdq
enter
mov
aad
add
shr
push
mov
in
(bad)
jl
mov
push
or
inc
xor
adc
es
shr
lods
jmp
movs
call
mov
mov
sub
fcomip
pop
arpl
call
dec
jbe
dec
cs
cwde
int
hlt
jne
jmp
dec
hlt
jl
aaa
stos
into
dec
call
xor
push
add
xor
mov
sbb
adc
mov
mov
inc
push
aad
mov
sahf
loop
imul
fidiv
or
(bad)
fmul
sar
and
push
fidivr
xchg
dec
test
outs
pop
call
mov
mov
add
adc
mov
call
dec
ret
adc
sbb
lds
cmps
push
(bad)
mov
and
addr16
popf
inc
pop
into
pop
fucomi
dec
push
aad
mov
inc
in
inc
xchg
xlat
in
lods
push
loope
sbb
fcom
fwait
add
and
push
jp
test
push
shl
dec
sbb
mov
sub
push
add
and
add
push
add
mov
je
inc
enter
pop
movs
push
pop
xor
xor
ss
pop
call
mov
cmp
mov
pop
hlt
adc
adc
sub
hlt
pop
mov
arpl
(bad)
stc
mov
stos
push
cdq
jge
jmp
icebp
jbe
mov
adc
dec
add
dec
xor
in
dec
cmp
neg
or
cmps
xchg
int
push
jbe
idiv
mov
call
dec
loop
test
in
add
mov
je
out
aas
xchg
mov
loope
or
push
cmp
out
enter
out
out
push
mov
std
stos
cwde
neg
test
fnstenv
jae
mov
pop
and
mov
test
sahf
pop
int
movs
push
adc
cmp
push
std
mov
add
jle
fld
jb
rcr
retf
lea
push
xchg
lock
rcl
push
nop
cmps
inc
sbb
fdiv
out
(bad)
cmp
jnp
sbb
(bad)
(bad)
xchg
ds
call
(bad)
test
jecxz
adc
pop
cmp
pop
inc
js
and
pop
mov
fdivr
or
lahf
stos
(bad)
movs
inc
or
xor
add
stos
cs
pop
or
or
div
adc
popf
popf
out
loopne
dec
jns
jns
pop
sub
mov
adc
mov
fs
ret
sub
lods
mov
cmp
shr
cli
add
adc
inc
pop
xchg
add
jge
mov
mov
dec
stc
aam
pop
or
push
and
fisub
test
in
(bad)
(bad)
stos
jmp
jne
mov
cmps
lahf
and
mov
pusha
test
out
leave
cmp
cmp
jnp
mov
cmc
outs
ds
ret
test
push
xchg
adc
inc
jb
sbb
mov
pop
add
jae
push
push
test
cwde
sbb
dec
push
mov
xlat
xor
jmp
(bad)
div
sub
mov
(bad)
fcom
mov
mov
mov
sub
retf
popf
pop
push
add
and
sti
pop
jae
scas
xchg
rcr
xchg
jns
xchg
mov
xor
mov
pop
sbb
and
test
shr
adc
cli
xor
or
mov
mov
push
cmp
pop
pop
dec
adc
ficom
fld
mov
push
retf
aaa
ja
rcr
xor
(bad)
jge
push
push
mov
mov
mov
sub
in
(bad)
xchg
gs
cmc
hlt
mov
xor
jecxz
gs
(bad)
ins
mov
fisttp
pop
ret
adc
adc
mov
dec
outs
xor
dec
into
mov
loopne
jecxz
push
dec
xchg
cli
dec
out
add
inc
popa
je
mov
push
or
sbb
ja
inc
or
loope
push
xchg
into
lock
fsqrt
dec
hlt
cmp
pop
ins
int
in
repnz
inc
call
call
call
pop
jecxz
jge
jmp
add
or
leave
xor
outs
fwait
push
cmp
cdq
mov
add
jnp
retf
push
add
faddp
and
aam
pop
rcr
les
adc
jb
mov
int
dec
dec
ret
or
js
adc
pushf
mov
(bad)
dec
mov
jle
mov
jb
xor
in
push
inc
icebp
sbb
call
arpl
jae
cmp
(bad)
mov
es
repnz
mov
mov
addr16
inc
mov
int
dec
xchg
inc
dec
ins
xor
(bad)
xor
sub
xchg
jmp
xor
push
fmul
and
das
and
shr
(bad)
sub
adc
mov
ins
mov
fwait
test
jns
fmul
daa
(bad)
xchg
sar
cmc
fnstsw
sbb
jmp
ror
lods
sbb
cli
loope
cmp
popf
movs
push
js
cli
push
pop
iret
loope
js
cmp
stc
pop
jae
pop
mov
repz
adc
or
and
mov
adc
in
add
lods
loope
jns
cdq
jge
mov
jno
jb
cmp
adc
or
sub
mov
les
ror
je
sub
sbb
vpsrad
mov
iret
call
out
or
mov
aas
cmps
daa
sahf
in
inc
stos
mov
nop
ficomp
sbb
imul
jo
pop
mov
fidivr
dec
pop
dec
scas
jnp
mov
std
pop
loop
mov
mov
dec
dec
push
mov
sub
or
addr16
mov
xor
es
sub
lods
xchg
mov
mov
dec
jb
(bad)
mov
(bad)
clc
add
push
imul
scas
frstor
ins
push
pop
sbb
jecxz
mov
enter
xchg
imul
mov
sub
mov
sbb
cmps
fs
scas
divps
adc
xor
pop
push
gs
mov
fcomip
add
call
call
std
out
xchg
add
lock
pop
ds
aaa
imul
xor
int3
scas
xor
dec
mov
jl
or
hlt
mov
inc
mov
test
fcmovb
cmps
int
push
out
adc
adc
and
mov
cli
movs
(bad)
in
jg
div
fwait
and
mov
push
neg
nop
cmp
cmp
lods
xor
sub
cmp
and
adc
sbb
xchg
jns
jns
lods
int
inc
xchg
pop
hlt
out
not
xor
bound
push
adc
idiv
(bad)
lds
cdq
mov
(bad)
push
xor
lea
popa
dec
ins
in
in
dec
xchg
scas
test
stos
pusha
ret
stos
jne
sbb
pushf
cwde
lods
pop
in
aam
sub
mov
(bad)
or
push
iret
movs
mov
adc
push
jns
dec
mov
sub
mov
pop
jne
and
cmps
add
jmp
sub
sbb
push
mov
xor
xor
jb
and
mov
pop
int
xchg
dec
(bad)
sbb
test
xor
mov
or
ins
sahf
sbb
lds
xor
xchg
loope
or
xor
cmp
mov
out
xchg
inc
cmp
in
imul
js
addr16
(bad)
rol
push
repz
cdq
cmp
jo
cld
aad
scas
daa
cmp
cwde
cmp
adc
mov
cld
lock
ret
sbb
xor
ret
int3
fbld
mov
and
or
or
mov
aas
aad
inc
jb
inc
rcl
aaa
test
out
shr
aas
jnp
or
stos
adc
(bad)
shl
mov
adc
adc
adc
clc
ss
stc
jnp
fldcw
sbb
outs
int3
test
out
jecxz
xor
ja
fmul
pop
mul
adc
pop
mov
xor
pushf
xchg
sahf
rcr
xchg
and
fnstenv
into
outs
aas
shr
mov
das
xchg
das
add
scas
sub
xor
and
lea
in
fiadd
and
addr16
add
push
xor
shl
outs
lahf
idiv
(bad)
movs
xor
adc
mov
mov
leave
pop
sbb
rol
dec
mov
lea
or
xchg
sub
shr
xor
cmc
inc
dec
fdivr
push
and
into
cdq
mov
or
push
mov
mov
inc
add
(bad)
retf
ins
sbb
cwde
bound
xchg
cmp
jno
js
rcl
and
cmps
fdivp
daa
jmp
xor
cmp
scas
bound
xchg
inc
cld
add
dec
mov
mov
int3
out
cli
xchg
push
or
stc
mov
test
xchg
shl
xor
(bad)
xor
rcl
lods
xchg
cmp
xchg
test
jb
retf
fwait
mov
cdq
xchg
sbb
(bad)
int3
mov
repnz
dec
mov
xchg
mov
pop
(bad)
mov
sbb
clc
push
(bad)
xor
fmul
pop
or
fwait
aaa
popa
dec
outs
xchg
fidiv
xchg
mov
mov
push
test
das
mov
push
adc
pusha
fst
sub
punpckldq
lods
test
movs
loope
mov
and
enter
or
mov
pushf
pop
jle
sbb
cmp
mov
aam
fist
mov
shl
mov
cmp
inc
pop
push
pop
mov
dec
movs
jecxz
int3
add
push
mov
dec
fisub
push
mov
jnp
(bad)
adc
mov
xchg
test
nop
int3
xchg
lock
fld
das
jb
pop
add
adc
mov
push
cmc
jle
push
lods
enter
jno
mul
and
clc
clc
inc
ret
inc
out
ror
fisttp
adc
xchg
setbe
in
movs
mov
push
push
popa
fadd
loop
jg
push
je
mov
jle
cmp
loop
and
hlt
add
mov
xor
cmps
and
fwait
lock
into
rcl
or
mov
test
(bad)
jp
cli
inc
iret
addr16
icebp
mov
scas
sub
add
stos
call
mov
push
jns
mov
xlat
dec
xchg
sahf
(bad)
(bad)
sti
icebp
xor
sbb
ja
xchg
xchg
mov
ins
xor
sbb
or
retf
xchg
xor
leave
and
and
rep
fiadd
cdq
push
sub
cmp
test
and
dec
popf
mov
outs
dec
jns
sbb
xchg
into
xchg
cmp
dec
xor
xchg
stos
fmul
enter
jmp
out
repnz
mov
scas
retf
sub
pop
popf
xchg
mov
mov
out
push
dec
mov
sbb
pop
jmp
inc
cmp
push
fcomp
int3
add
push
(bad)
addr16
je
adc
cmp
pop
mov
scas
or
inc
mov
sbb
xor
mov
jmp
mov
sbb
data16
push
in
add
adc
sub
dec
mov
xor
out
inc
mov
dec
call
icebp
shr
enter
lods
leave
imul
adc
dec
push
cdq
adc
loop
or
push
add
mov
out
arpl
popf
popf
imul
pop
jmp
xchg
mov
push
jl
cs
dec
(bad)
sub
inc
xchg
push
and
push
inc
fadd
in
push
adc
in
ins
aas
leave
inc
dec
and
mov
in
and
std
cmp
aaa
loopne
mov
sub
push
inc
jecxz
push
retf
push
xchg
pop
pusha
dec
xor
jecxz
sbb
pop
pop
xchg
xchg
lods
repz
js
jmp
(bad)
jl
inc
fiadd
lea
cmp
je
push
shl
out
out
adc
mov
pop
cmp
fisubr
ror
adc
in
jecxz
ror
dec
xchg
cmp
aas
pop
movd
adc
xlat
sbb
sbb
in
loop
sub
hlt
stos
das
ror
sub
hlt
dec
cmp
push
out
sbb
jns
inc
pop
call
mov
call
(bad)
pop
(bad)
mov
sbb
retf
mov
or
in
repnz
xchg
sbb
out
ret
pop
push
pop
ret
dec
pop
in
xchg
push
lea
mov
iret
mov
out
mov
test
js
(bad)
outs
mov
aam
fbld
sbb
push
xchg
fist
adc
daa
xor
mov
(bad)
jge
iret
sbb
mov
or
mov
call
add
outs
add
cmps
test
out
mov
int3
fild
sbb
sbb
and
mov
fcomp
mov
add
jg
jmp
cmp
mov
sub
call
in
jns
sub
test
shl
movs
sahf
add
pop
fimul
fdiv
push
pop
icebp
cwde
popa
fcmove
dec
mov
cli
mov
jae
pushf
cmc
push
lods
jmp
mov
push
cwde
sub
xchg
popa
xor
jnp
sub
xchg
adc
aad
ss
out
or
cmp
pop
adc
inc
vcvttss2si
xlat
popf
pop
cmp
fcmovne
xchg
sub
out
bts
outs
cwde
cdq
fimul
mov
mov
xor
dec
les
mov
add
loop
sbb
out
adc
add
mov
sub
sar
sub
sub
jle
stos
xor
pop
cmp
mov
xchg
xchg
ins
fwait
sbb
and
push
mov
jns
mov
out
inc
pop
xor
push
xchg
iret
std
xchg
jl
xchg
mov
xor
cmp
inc
adc
data16
dec
arpl
and
stos
test
bound
out
data16
(bad)
add
cs
cli
sub
jp
mov
xchg
pop
add
xchg
rcl
or
inc
mov
jb
adc
in
adc
jno
xlat
mov
xchg
cmps
into
loop
int3
fsub
fisub
pusha
shl
dec
ds
mov
fwait
push
fcom
leave
loopne
mov
shl
xor
adc
cwde
mov
cmps
(bad)
mov
add
js
mov
lods
lahf
dec
imul
mov
es
es
loopne
sar
cmp
movs
in
mov
sub
inc
(bad)
push
and
jl
xchg
pop
xchg
mov
xchg
test
sub
test
pop
ret
dec
lahf
movs
mov
cmp
pop
mov
jo
shl
sbb
mov
xchg
aaa
int
loop
mov
push
pop
inc
stos
not
xor
fwait
aam
loope
test
imul
in
arpl
call
push
int3
cmp
add
mov
cmps
sub
add
push
fnstenv
and
adc
mov
cmp
inc
xchg
and
inc
mov
dec
mov
jnp
jp
not
(bad)
xchg
stos
das
cmp
leave
es
or
adc
jnp
lea
jbe
mov
adc
in
cmp
fldenv
ss
test
inc
inc
out
cmc
enter
add
add
outs
jp
push
data16
stos
aaa
retf
ja
inc
fdivp
bound
jmp
mov
or
ficomp
hlt
stos
in
xchg
push
inc
pop
repnz
popa
frstor
sub
retf
add
or
ds
mov
mov
add
cmp
aam
cs
dec
pop
lock
fwait
jbe
inc
mov
or
xor
or
mov
jl
inc
je
xchg
pop
stos
add
pop
mov
mov
jecxz
(bad)
pop
int
lea
jge
xchg
test
leave
and
rcr
arpl
xor
into
jo
jg
loope
cmp
mov
or
xor
pop
mov
cmps
loope
shl
stos
out
add
jle
xchg
sbb
scas
cmps
jno
push
and
into
cmp
mov
mov
arpl
jbe
fbld
sub
je
(bad)
scas
mov
adc
pop
fistp
mov
arpl
call
mov
addr16
aas
clc
in
test
aaa
stos
mov
dec
add
sub
cld
xchg
jl
pop
icebp
lods
neg
fisub
cmp
push
push
push
dec
mov
imul
das
movs
retf
call
stc
stos
lods
mov
icebp
xor
and
jo
add
repnz
jle
pop
cli
mov
xor
cmps
sub
or
and
adc
add
mov
test
nop
push
in
mov
into
popa
inc
lahf
xor
loop
aad
xor
jo
xchg
js
sbb
fcomip
jb
mov
gs
cmp
pop
pusha
or
dec
fdiv
ss
adc
fld
jmp
pop
movs
mov
xchg
xor
pop
in
lods
xor
jnp
or
dec
div
sub
pop
mov
jecxz
mov
adc
mov
shr
dec
sub
aas
jmp
jp
jle
hlt
bound
(bad)
fs
nop
mov
and
dec
mul
dec
gs
mov
xchg
cmp
popf
movs
popf
jp
add
push
xchg
int
inc
inc
sub
add
call
mov
idiv
xor
inc
js
xor
xor
sbb
mov
sbb
lock
mov
xor
cmc
cmp
xchg
(bad)
dec
scas
mov
loope
jle
enter
xchg
cmps
xchg
pusha
cdq
push
mov
shr
add
adc
push
mov
push
push
inc
jb
xor
pop
outs
jo
jmp
mov
sub
inc
jb
xchg
sub
xchg
dec
jb
nop
dec
(bad)
(bad)
imul
idiv
sub
dec
jmp
xchg
jb
pop
dec
loopne
cmp
fild
mov
push
push
das
(bad)
cmp
xor
inc
sub
test
aaa
loop
addr16
icebp
dec
sub
pop
pop
mov
push
jg
push
jae
cmp
add
sbb
push
(bad)
out
cwde
(bad)
es
mov
mov
repnz
pop
aas
movs
fwait
out
and
sbb
or
jp
pop
mov
mov
mov
cmp
xchg
jnp
je
or
hlt
jns
or
daa
fwait
jle
lods
push
sti
pusha
sahf
adc
jg
fwait
js
retf
pop
aam
(bad)
shl
sar
sar
cwde
jg
and
sub
adc
cmp
jo
mov
dec
inc
lea
pop
add
adc
adc
jae
shl
jg
ja
pop
or
pop
sbb
frstor
mov
add
mov
fbstp
stos
inc
(bad)
mov
push
pop
pop
mov
gs
mov
jnp
icebp
jl
mov
lea
or
(bad)
adc
shr
push
and
hlt
xor
add
mov
lds
aad
sbb
test
xor
(bad)
leave
cmp
jne
xchg
and
repnz
cdq
cwde
push
xchg
pop
jbe
(bad)
xchg
iret
scas
dec
retf
sub
outs
mov
push
ja
int
adc
mov
lahf
sti
sub
in
(bad)
xor
sub
stos
pop
jno
adc
sbb
scas
int3
push
std
cld
pop
nop
imul
cmp
stc
addr16
sub
jecxz
xchg
sti
mov
mov
jbe
sahf
ret
adc
in
sbb
in
ins
test
jnp
out
mov
inc
jmp
push
fldenv
std
xchg
cmps
mov
dec
sbb
out
std
or
mov
out
loopne
mov
loope
push
fst
xor
scas
(bad)
mov
jae
aas
jmp
imul
jl
(bad)
outs
rcl
mov
lods
out
(bad)
mov
test
mov
and
push
jmp
sbb
push
mov
enter
push
sahf
mov
dec
xchg
adc
inc
aam
xor
in
outs
mov
jbe
stos
inc
mov
enter
add
dec
call
sar
hlt
out
clc
retf
imul
mov
sbb
pop
and
pop
outs
inc
scas
repnz
inc
ss
mov
inc
push
or
and
call
pop
dec
cmp
inc
ja
xor
mov
pop
mov
(bad)
cmp
cs
push
idiv
nop
dec
addr16
push
fs
and
repz
mov
mov
fstp
mov
stos
in
dec
xor
sar
mov
imul
mov
jns
jmp
in
mov
xchg
or
jbe
inc
sub
iret
cwde
or
loop
popf
pop
or
out
push
jge
sbb
sbb
sub
cmc
setno
sbb
add
stc
push
ja
jbe
or
hlt
inc
sub
adc
adc
loope
stc
mov
xchg
shl
mov
dec
jmp
ins
mov
mov
jno
or
lods
xor
rcr
add
adc
sar
out
push
ds
push
dec
inc
ficom
xor
cs
cmps
rcr
jne
push
or
outs
cdq
pushf
sub
jo
jge
arpl
sbb
int
(bad)
mov
jne
fwait
jl
ss
mov
inc
mov
dec
mov
les
xor
push
sbb
or
lods
jmp
ins
cmp
jo
mul
scas
ins
add
retf
xor
and
ins
sub
pop
lds
aam
add
mov
pusha
xor
inc
repnz
ins
sahf
mov
sbb
neg
inc
call
lahf
stos
sti
mov
pop
stos
(bad)
adc
cmps
fistp
mov
mov
fdivr
out
pop
(bad)
jmp
jmp
mov
lea
dec
fsub
shl
in
add
(bad)
lea
inc
icebp
pop
jg
retf
lods
sub
loop
out
(bad)
lock
xor
push
clc
aad
leave
add
in
mov
sbb
and
jmp
mov
(bad)
xchg
aam
popa
xchg
or
jmp
ja
iret
sbb
imul
retf
rol
daa
ja
pop
add
adc
je
(bad)
out
mov
movs
mov
inc
sbb
sbb
bound
inc
inc
dec
ja
repz
jne
sub
test
(bad)
adc
sub
mov
imul
adc
add
lods
mov
test
ss
shl
pop
fs
cmc
fnstsw
call
inc
out
(bad)
xchg
jnp
mov
xchg
in
jno
popf
xchg
or
hlt
iret
mov
fist
je
stos
outs
hlt
dec
mov
es
(bad)
inc
add
or
add
jno
sbb
lahf
pop
mov
arpl
icebp
sbb
fsubr
out
jge
call
inc
sub
or
dec
movs
rol
inc
pusha
out
ins
leave
div
or
adc
pusha
(bad)
out
fisttp
xchg
repz
jnp
dec
sub
das
addr16
mov
shr
jmp
arpl
sahf
test
cmp
(bad)
pop
adc
mov
jae
push
cmp
inc
sti
mov
rcr
cld
mov
pusha
out
aam
mov
dec
mov
mov
sahf
mov
inc
shr
iret
std
sub
(bad)
iret
(bad)
das
cmc
sub
jmp
shr
dec
inc
jb
jb
mov
iret
cmp
mov
mov
aam
je
cld
icebp
or
mov
inc
push
out
or
mov
adc
mov
scas
mov
mov
cmps
dec
les
sbb
xchg
and
(bad)
xor
shl
mov
fcmovnbe
pop
js
add
xchg
jae
scas
aam
cld
nop
mov
and
jbe
mov
or
mov
sbb
loop
aad
xchg
pusha
cmp
xchg
and
enter
pop
loopne
nop
les
fimul
push
push
scas
test
push
mov
xor
mov
(bad)
in
stos
and
pop
les
xchg
push
pop
test
xchg
shl
push
mov
mov
pop
or
push
cmp
add
pop
imul
rcl
push
jae
cmp
pop
repz
enter
stos
cmp
int3
sbb
addr16
dec
xor
clc
cmps
fsubr
mov
rol
xchg
inc
(bad)
ror
lods
test
mov
aaa
js
inc
inc
icebp
mov
cmp
retf
outs
xor
xchg
or
cmp
pop
xlat
repnz
push
into
icebp
or
xchg
mov
pushf
test
shr
mov
loopne
xchg
cmp
ret
mov
test
sub
jae
pusha
out
push
and
xchg
mov
jnp
int3
jo
pop
sub
mov
jnp
mov
rol
sub
leave
ss
add
ins
mov
push
adc
cwde
cmps
out
retf
jmp
cld
js
mov
or
mov
xor
mov
ds
mov
cmps
movs
jbe
and
(bad)
jno
push
ins
jp
fs
or
in
jg
push
dec
sub
inc
mov
xor
lods
pusha
xchg
in
mov
cmp
pusha
enter
movs
scas
mov
jle
and
push
rcr
inc
test
popa
mov
dec
jmp
pop
inc
adc
ror
push
sbb
outs
mov
xchg
out
inc
sub
(bad)
ja
movs
jo
(bad)
mov
cmps
jmp
test
mov
xor
ss
and
mov
dec
int3
cwde
push
cmp
div
or
scas
je
pop
mov
mov
mov
adc
loope
lock
cli
loopne
jbe
sub
sar
mov
inc
add
inc
inc
pop
mov
inc
push
movs
jmp
dec
inc
sub
push
into
inc
clc
sahf
and
and
call
inc
(bad)
push
sub
retf
movq
adc
or
or
enter
push
sti
ja
out
inc
jl
pusha
lods
in
ror
lods
in
aam
adc
sti
inc
in
pop
dec
mov
hlt
stos
mov
fwait
(bad)
nop
cmp
pop
test
jne
add
lahf
mov
mov
push
nop
and
outs
or
sbb
jmp
sbb
loope
sahf
xor
adc
inc
lock
neg
inc
or
inc
int
fstp
inc
pop
sbb
add
jae
repnz
mov
pop
dec
push
(bad)
rcl
outs
add
sar
movs
test
repz
adc
mov
cli
(bad)
jmp
(bad)
(bad)
jmp
stos
cwde
gs
std
out
mov
(bad)
ins
icebp
or
and
shl
movs
push
push
outs
pop
adc
or
sub
add
push
add
jecxz
loop
adc
jne
movs
scas
ins
in
(bad)
rcl
pop
pop
jg
retf
mov
adc
sbb
add
mov
lods
pop
ds
xor
sbb
test
mov
in
fsub
fnsave
xor
test
ja
sub
push
shr
and
ss
mov
aas
mov
jo
daa
imul
push
ja
ins
adc
lahf
out
clc
(bad)
movs
aam
sub
fidivr
inc
repz
push
jnp
fwait
pop
add
xchg
cmp
fcmovb
xchg
jmp
daa
xchg
loope
call
mov
dec
push
es
sbb
mov
aas
adc
inc
call
cmc
mov
jmp
data16
sbb
push
loop
mov
jnp
mov
(bad)
loopne
push
or
mov
jg
shl
cmp
add
icebp
mov
js
add
xchg
mov
inc
adc
sbb
lods
es
cli
dec
call
(bad)
inc
push
jo
dec
mov
retf
fisubr
lods
inc
cmp
es
les
push
mov
xchg
shr
jbe
xor
das
pop
(bad)
inc
ror
mov
xchg
add
lods
cdq
cmp
mov
(bad)
lock
popa
mov
fs
xchg
cdq
xchg
pop
std
pop
jp
cmp
addr16
int3
sbb
repz
mov
popa
cmp
shl
cmp
sbb
xor
int3
std
gs
fcomip
jns
add
cwde
enter
dec
stos
pop
and
add
pop
(bad)
test
sub
test
xchg
popf
cmp
inc
sub
das
add
push
and
cdq
retf
jo
xor
adc
adc
or
outs
pop
ja
lahf
leave
aas
cld
addr16
jle
fsubr
daa
sub
(bad)
or
test
leave
ret
pushf
mov
aam
imul
bound
fdiv
call
mov
pusha
test
sbb
dec
and
xchg
out
or
data16
enter
inc
sub
lds
pop
inc
inc
pop
mov
js
cdq
jo
xchg
(bad)
and
loope
pop
xor
fsubr
cmp
mov
mov
push
inc
(bad)
push
or
clc
daa
test
mov
outs
loopne
adc
cmps
scas
or
clc
pop
mov
jl
adc
xchg
mov
xchg
pop
push
loope
fsubr
outs
cmp
add
pop
stos
cs
sar
adc
add
adc
mov
cld
bound
ret
mov
and
and
adc
(bad)
jns
mov
je
push
lods
imul
adc
idiv
cvtpi2ps
popa
fldcw
adc
jl
aaa
jo
and
pop
es
mov
retf
jbe
cmp
sti
adc
mov
or
cmp
sbb
in
cwde
mov
dec
mov
push
adc
pop
sub
mov
es
cmp
xor
adc
adc
and
jmp
xlat
cmp
cld
shl
test
lods
popf
xchg
jle
sub
pop
mul
retf
cdq
pop
push
and
out
push
(bad)
les
cmp
mov
jle
pop
les
sub
sar
retf
sub
mov
pop
repz
test
lods
daa
imul
push
scas
sar
(bad)
jo
adc
bound
push
ror
jne
pusha
fisubr
(bad)
sbb
cmps
mov
push
push
aaa
and
sbb
addr16
stos
fstp
mov
mov
test
jp
cmps
pop
or
xchg
je
jecxz
test
jg
push
out
outs
(bad)
data16
cli
pop
jecxz
or
cmp
push
ret
sbb
mov
sbb
sub
call
cmp
sub
mov
mov
mov
sub
or
sub
fstp
adc
xor
add
or
jnp
hlt
sub
adc
xchg
xchg
out
jecxz
pushf
test
jmp
cdq
fisub
fwait
repnz
aas
aam
std
in
stos
pop
dec
mov
leave
mov
aad
jmp
mov
ret
xchg
fist
mov
cmp
push
push
sub
aas
test
inc
std
jae
fisubr
test
pop
cmp
xor
adc
jecxz
or
aad
push
test
ss
jl
aad
jge
js
and
je
cmp
xor
stos
pop
add
retf
out
nop
inc
jle
jo
and
xor
xor
ror
jo
sbb
sbb
push
push
movs
ret
loope
adc
mov
cld
mov
dec
out
lds
out
inc
bound
stc
pop
hlt
push
mov
fs
std
mov
mov
inc
jb
cdq
add
pusha
jno
addr16
rcl
jne
mov
je
sub
fcomip
(bad)
adc
mov
(bad)
mov
leave
jnp
and
add
sbb
xor
sti
inc
repz
loope
pushf
aam
repnz
push
or
mov
push
iret
jp
scas
ror
test
sub
mov
mov
xor
pusha
retf
sub
mov
push
mov
clc
sub
repz
fnstenv
pop
out
sbb
adc
js
imul
add
push
add
mov
mov
ins
dec
xor
dec
jmp
xchg
push
int3
lods
clc
ins
add
cmp
cmp
adc
lea
inc
or
xchg
cmp
add
mov
into
and
ret
xlat
pop
out
jb
test
push
mov
iret
js
pop
test
cs
(bad)
mov
clc
test
out
and
push
retf
(bad)
push
sbb
in
(bad)
iret
pop
stos
jne
pushf
cmp
add
mov
(bad)
pop
jno
add
es
sub
sti
sbb
or
add
push
call
mov
or
inc
ds
or
sub
mov
mov
xchg
loope
in
outs
mov
push
out
pop
pop
std
mov
imul
loop
mov
pop
adc
inc
mov
loopne
in
push
adc
rol
adc
aaa
mov
test
adc
out
sbb
adc
(bad)
repz
add
push
mov
pop
loopne
ficomp
mov
(bad)
stc
inc
popf
lds
adc
lods
xchg
jbe
(bad)
enter
push
(bad)
xor
jno
xor
popa
cmp
jns
push
es
retf
fs
cli
pop
mov
les
xor
and
cdq
repz
adc
jge
icebp
clc
dec
mov
inc
jo
cvtps2pd
and
push
mov
int3
movs
pop
mov
jl
outs
inc
retf
or
enter
ins
adc
repz
inc
je
stos
lods
jmp
cli
nop
gs
xchg
mov
mov
adc
ror
(bad)
push
xchg
shl
fnstsw
sbb
mov
add
test
fdivp
ins
dec
sub
jecxz
jo
call
xchg
add
inc
and
pop
scas
cli
out
fild
jg
ja
movs
xchg
xchg
hlt
mov
inc
fdiv
ret
and
push
mov
mov
fsubr
inc
jno
into
push
inc
enter
lea
int3
daa
pop
jl
outs
jmp
pop
mov
xor
loopne
in
jae
ror
mov
mov
add
jo
cmp
fnstsw
(bad)
inc
shr
psadbw
call
in
call
mov
jg
mov
bound
ds
add
add
cmp
mov
pop
fsubr
jns
dec
test
jae
sub
push
in
mov
sbb
and
das
sub
lods
jge
and
mov
cmp
jp
out
sahf
mov
sbb
inc
sub
push
retf
mov
sbb
sub
dec
dec
cmp
mov
jecxz
sub
ret
rol
xchg
xchg
loopne
sbb
lock
hlt
add
ss
or
push
and
sbb
add
test
cmps
sub
sar
push
mov
je
ret
int
jecxz
dec
or
inc
ja
and
push
mov
or
pop
mov
retf
jns
or
inc
inc
mov
cli
iret
jg
aam
sbb
push
cld
add
dec
push
xor
popf
mov
aaa
pop
fmul
inc
mov
fldenv
scas
jo
cmp
sbb
pop
call
repnz
leave
pop
ss
ins
pop
push
enter
add
mov
sub
dec
push
call
imul
mov
sub
jo
out
xor
inc
sar
fsub
mov
jae
cmp
cmps
enter
lds
les
sub
scas
inc
or
in
sbb
or
sbb
pop
mov
popa
mov
push
lahf
aam
sbb
in
mov
inc
add
inc
add
dec
aas
push
jg
sub
sub
icebp
cli
in
fnstcw
cmp
ret
outs
pop
rcr
ins
in
push
aam
dec
arpl
imul
mov
sbb
sar
aam
mov
lods
dec
mov
xor
dec
retf
mov
jb
aad
mov
and
jecxz
mov
inc
enter
push
cs
inc
popf
aad
pop
sub
sahf
je
ins
jbe
sub
sbb
inc
cld
sub
and
and
shl
push
pop
xlat
sub
and
out
or
arpl
xchg
pop
adc
pop
sahf
push
pop
fnstenv
mov
(bad)
cld
ds
or
jmp
ret
pushf
aas
test
add
mov
cmp
pop
int3
or
in
ret
sbb
lock
pop
cld
jne
in
daa
add
jle
push
mov
jge
mov
mov
add
test
mov
sub
inc
repz
push
sub
adc
ror
retf
shr
outs
clc
gs
movs
fsub
ins
pusha
mov
mov
aad
cmp
jo
xchg
cmc
mov
(bad)
std
pop
or
mov
push
cdq
xor
(bad)
in
lds
sbb
mov
cmp
popf
call
ret
or
loope
fwait
or
adc
cmp
sub
cli
mov
inc
movs
rcl
dec
js
fwait
inc
cld
lods
sahf
pop
aad
mov
loopne
mov
add
cmp
dec
mul
mov
xor
adc
ss
mov
cld
test
outs
xor
cmp
add
cs
in
and
fwait
inc
cli
xchg
xor
mov
out
loope
shl
sub
lods
popa
add
les
lods
das
xchg
pop
fprem1
sbb
lock
imul
dec
xchg
pop
pop
pop
cmps
cmp
adc
repz
xchg
test
dec
cld
call
mov
or
sub
adc
sbb
mov
xchg
popf
push
sbb
xchg
adc
out
cmps
bound
(bad)
daa
out
add
fiadd
adc
cmp
mov
hlt
cdq
int
jmp
and
cmp
fidivr
enter
ficomp
imul
add
shl
cmp
std
dec
ret
hlt
in
mov
jo
or
stos
sbb
cmc
ja
push
out
push
(bad)
adc
rcr
xor
mov
pop
ret
das
add
cwde
jmp
je
div
mov
lods
dec
lea
cmp
scas
inc
inc
add
jmp
xchg
sbb
das
lods
cld
jl
shl
push
fmul
or
push
nop
mov
enter
bts
add
test
data16
(bad)
sbb
mov
dec
in
push
int3
jo
mov
push
jno
pop
mov
lods
dec
adc
jae
sub
jmp
iret
daa
pop
test
int
sub
sub
mov
pop
xchg
rol
or
loopne
jnp
sub
sbb
test
add
push
cmp
pop
sub
push
cdq
rol
into
add
js
add
movs
adc
cmp
mov
seto
icebp
xchg
mov
xchg
and
or
sbb
pop
mov
mov
repz
loopne
or
call
or
rol
call
adc
pop
rol
repz
jbe
xchg
inc
mov
xor
and
sar
dec
push
sbb
jl
adc
push
je
sbb
aas
cmp
add
and
adc
out
(bad)
mov
dec
xchg
pop
outs
cli
lock
je
mov
(bad)
(bad)
nop
xor
cmp
sub
shl
dec
mov
fimul
dec
or
pop
adc
or
test
push
repnz
movs
dec
sti
and
inc
aam
dec
inc
dec
xor
pushf
push
or
jg
leave
adc
and
scas
fbstp
fstp
pop
mov
push
dec
xchg
lahf
stos
aad
test
arpl
inc
outs
(bad)
(bad)
aas
mov
mov
mov
inc
add
jl
cmc
sbb
jno
outs
add
jne
xor
fsub
stc
mov
js
mov
mov
inc
mov
out
fldenv
ds
mov
mov
inc
adc
aaa
xchg
fcmovu
and
mov
sub
xchg
xor
arpl
mov
retf
test
mov
adc
jmp
out
adc
adc
cmps
xchg
jo
or
arpl
xchg
mov
out
and
mov
xchg
adc
sbb
mov
cmp
pop
dec
lods
test
sbb
mov
ret
mov
leave
xchg
mov
dec
movs
pop
sbb
inc
cmp
movs
mov
mov
dec
cmps
stos
xor
mov
adc
loop
inc
push
jne
lods
retf
stc
popa
jo
inc
jmp
jae
and
stos
not
jb
nop
xor
fcom
repnz
pop
pushf
jle
cmp
call
outs
push
fadd
push
mov
(bad)
fsub
test
push
mov
popa
mov
mov
add
sub
cld
ins
mov
xlat
cdq
push
fs
mov
push
xor
shl
mov
cmp
add
sbb
lea
bound
mov
not
push
in
icebp
ja
js
int
retf
scas
ds
mov
fcom
shl
adc
js
leave
out
mov
jns
pop
mov
mov
je
inc
mov
push
in
imul
shr
and
push
dec
add
sbb
sub
mov
mov
(bad)
std
mov
jae
and
jge
pop
inc
mov
mov
cmp
xor
lods
sbb
pop
mov
in
mov
aaa
stos
stos
jmp
xor
lea
out
adc
cdq
jl
into
out
xchg
push
aaa
push
jns
cs
jbe
and
pop
push
pop
aam
je
pusha
loop
and
lock
xor
aas
arpl
dec
mov
and
pop
sub
dec
jp
int
xchg
push
push
loop
inc
or
mov
mov
in
push
cmp
jge
bnd
(bad)
dec
jno
stc
jp
xor
pop
into
test
jmp
mov
scas
jmp
cli
inc
inc
inc
push
cmp
sub
xor
mov
dec
cmp
cmp
mov
add
add
test
imul
inc
inc
jl
leave
jge
mov
icebp
inc
lahf
clc
jecxz
lahf
or
dec
das
sbb
inc
sbb
jbe
pusha
push
je
sbb
jmp
addr16
out
das
sbb
jmp
push
nop
sub
in
sbb
inc
iret
das
fidivr
and
push
aam
(bad)
aad
movs
shl
mov
and
bound
push
pop
(bad)
pop
mov
xlat
fdivr
push
scas
dec
test
mov
mov
cmp
push
loop
int
xor
xor
stos
add
in
int
ror
in
addr16
cld
push
jg
push
cmp
loop
dec
or
fnstcw
repnz
xor
push
(bad)
or
in
cmp
add
test
ss
xor
cmp
(bad)
mov
shr
xchg
cld
xlat
dec
xchg
es
jge
jmp
xchg
mov
adc
fidivr
inc
or
or
fadd
nop
ja
mov
test
pop
and
retf
(bad)
(bad)
enter
push
mov
jbe
jge
out
iret
test
xchg
aas
out
mov
rol
dec
mov
mov
mov
adc
push
div
inc
retf
jo
dec
je
xor
inc
fdivr
sbb
sahf
mov
scas
push
aas
xor
jb
das
pop
sbb
xchg
push
push
adc
sbb
sub
(bad)
fnstenv
jb
mov
in
sub
pop
xor
inc
ins
repnz
pop
pushf
xchg
sti
iret
xchg
lds
and
mov
mov
sbb
cmp
push
daa
fiadd
fild
cdq
dec
pop
cli
punpcklwd
repz
sysexit
(bad)
mov
lock
js
out
jmp
inc
adc
icebp
push
inc
mov
push
imul
xor
or
ret
push
test
pop
push
in
pop
mov
jle
das
inc
mov
aas
and
sub
ret
sbb
mov
pop
outs
push
shr
mov
push
sahf
adc
mov
or
and
cmp
xchg
retf
les
scas
adc
pop
fist
arpl
pop
mov
sub
sbb
out
ret
popa
jp
jbe
data16
int
cmp
ret
daa
scas
push
pop
xor
call
test
pusha
inc
add
ins
adc
xchg
mov
repz
jl
push
cmp
push
out
repz
inc
or
clc
xchg
mov
jbe
mov
lahf
push
adc
ja
daa
movs
rol
ja
out
pop
inc
das
pop
mov
popa
push
add
sub
add
aam
ss
shl
jmp
and
and
mov
mov
xchg
xor
mov
dec
push
dec
mov
dec
xlat
test
ins
dec
ror
lock
push
pop
cli
cmovge
hlt
movs
and
sbb
pop
in
and
inc
lea
retf
mov
popa
shl
jge
sti
pop
popa
lahf
push
leave
ja
call
push
sub
or
mov
fidiv
jmp
jns
jne
jp
mov
mov
pop
mov
dec
repz
into
hlt
pop
xor
stc
jo
not
imul
add
(bad)
test
clc
pushf
popf
fist
retf
leave
pop
int3
sbb
jp
test
ins
daa
sbb
jmp
sub
fadd
pop
or
retf
sub
jl
xlat
cmp
mov
out
add
jnp
movs
fimul
in
les
ret
js
dec
sbb
scas
scas
jge
popf
pop
jb
inc
(bad)
sahf
rcl
mov
ret
int3
lea
addr16
mov
xlat
xor
jb
cmp
mov
fdiv
push
sbb
outs
mov
test
lock
adc
jmp
aad
stos
repz
cmp
ret
pop
retf
push
sub
push
call
sub
ret
fmul
jbe
sub
or
rcl
jnp
popa
test
ins
sub
jae
lds
dec
test
jnp
outs
rol
inc
add
jmp
push
pop
sub
cld
in
jb
sub
dec
add
push
jmp
or
mov
push
sub
ins
push
mov
xchg
and
je
jmp
mov
xchg
pop
mov
ds
push
rcr
sbb
adc
inc
dec
clc
int3
fs
jl
dec
ja
cmp
inc
popa
inc
imul
xchg
ss
xchg
mov
movs
retf
sbb
dec
and
adc
jle
js
xchg
test
jns
(bad)
mov
call
xor
stos
cmp
repz
cmps
call
stos
cmp
dec
sub
push
fld
push
mov
aaa
jmp
jns
sbb
dec
ret
mov
xchg
inc
in
fwait
lock
das
sbb
sbb
aam
daa
lods
outs
dec
pushw
fcom
cmp
push
pop
popf
test
jno
and
cmps
das
inc
add
jg
sahf
ret
jmp
out
jecxz
(bad)
mov
mov
or
adc
sbb
jns
push
cdq
cmp
imul
scas
push
xchg
mov
inc
test
dec
push
push
loope
or
call
lods
inc
mov
pop
in
scas
lea
adc
ss
dec
push
shr
ins
js
(bad)
mov
mov
add
sbb
sbb
call
addr16
aad
loope
sub
lds
jmp
sub
mov
loop
inc
add
shl
cdq
pop
ret
xchg
xchg
retf
sbb
test
cdq
sbb
cwde
mov
icebp
xchg
(bad)
adc
loop
cmp
sbb
lea
addr16
cmp
xchg
stos
jno
stos
and
leave
or
or
dec
or
ss
rol
sub
pop
cld
inc
imul
sub
or
sbb
or
retf
call
imul
cmps
inc
add
movs
fst
ins
pop
push
xchg
mov
mov
rcr
xor
dec
and
pop
inc
cs
inc
pop
xchg
push
call
mov
lds
mov
sbb
ins
jnp
inc
(bad)
gs
push
and
adc
das
jecxz
inc
cld
add
(bad)
sbb
xchg
pop
shr
test
out
sub
xchg
imul
(bad)
cld
out
push
jbe
jp
sbb
aas
aas
fld
pushf
jno
rcl
sub
(bad)
cli
and
sti
cs
add
pop
mov
dec
push
mov
xchg
pop
bound
adc
pop
mov
movs
dec
inc
adc
loop
mov
call
mov
cmp
cmc
addr16
inc
or
inc
push
test
cmp
and
mov
inc
leave
dec
mov
repnz
adc
mov
out
fidiv
popf
popf
mov
or
repz
add
sbb
push
pop
clc
mov
inc
mov
lock
jns
jne
pusha
mov
mov
les
retf
push
stc
pop
arpl
jae
bound
pop
sbb
pushf
xor
adc
repz
xchg
xchg
mov
mov
add
sahf
inc
ins
stos
fidiv
jmp
adc
push
stos
mov
movzx
xchg
push
push
fcom
xor
popa
jecxz
ror
rcl
add
ret
mov
xchg
fnstcw
js
enter
loop
sub
inc
mov
add
retf
sbb
pop
push
sub
mov
jno
mov
add
cmps
adc
ror
jp
fst
xor
hlt
push
cmc
mov
mov
jb
and
mov
jno
adc
bts
jl
sar
add
or
jg
mov
pop
cmc
in
adc
pop
rcr
in
inc
(bad)
mov
out
xor
xor
repnz
jmp
push
mov
in
shr
loope
hlt
adc
test
inc
push
jae
sub
inc
outs
inc
out
hlt
dec
lahf
hlt
and
sbb
and
mov
sbb
jb
jle
xor
(bad)
pop
sub
shl
pop
stos
jl
sti
ret
fcomp
mov
sbb
mov
mov
and
lea
jle
dec
mov
sbb
ret
test
popa
sbb
push
mov
ret
lea
xor
dec
sti
bound
push
mov
mov
cmps
lahf
adc
or
fucomi
outs
js
or
inc
add
push
ret
iret
jge
cmp
outs
pop
xchg
push
add
jno
sbb
push
cli
sbb
(bad)
jg
inc
push
adc
pop
cmp
sbb
push
adc
daa
add
add
mov
inc
sbb
push
loop
inc
or
test
adc
scas
arpl
mov
mov
inc
push
jb
cdq
ret
call
stc
repnz
jne
and
lahf
push
mov
in
mov
pop
lock
rcr
jmp
fs
int
ins
mov
and
movs
ins
inc
sub
fwait
repz
lahf
or
test
sti
inc
pop
(bad)
mov
xchg
popf
adc
or
out
sbb
xchg
mov
(bad)
cmc
pop
push
int
mov
dec
loop
cmp
jne
push
popf
mov
rol
xlat
jp
sar
cmc
repnz
in
jnp
inc
rcr
adc
mov
and
in
mov
pushf
xchg
imul
imul
cld
mov
ss
mov
ror
pop
inc
jmp
and
cmp
push
loop
sti
mov
xlat
sub
(bad)
hlt
je
das
loope
(bad)
mov
lds
imul
stos
inc
mov
pop
jge
inc
jmp
dec
xchg
popa
xchg
xor
call
cmp
hlt
pop
ins
xlat
(bad)
xor
ins
lock
sar
mov
stc
aad
leave
or
mov
cdq
add
rcl
xchg
or
mov
pop
inc
test
cmp
and
mov
or
dec
push
inc
call
cli
adc
dec
cdq
(bad)
mov
addr16
test
mov
inc
cdq
and
jl
or
pop
mov
sub
stos
jns
scas
ret
(bad)
xor
scas
loop
call
aam
loopne
lea
dec
cmp
xlat
inc
out
and
jb
push
in
(bad)
clc
push
pop
cdq
(bad)
fdivr
je
push
adc
(bad)
and
(bad)
retf
std
lds
sbb
adc
sub
es
dec
push
pop
jmp
cld
xor
pop
xchg
inc
mov
adc
push
(bad)
fiadd
inc
xchg
out
sar
enter
mov
lods
mov
mov
mov
scas
dec
popa
movs
fdiv
lahf
sub
or
sar
cmc
and
dec
adc
push
fisttp
sahf
rcl
sti
scas
and
adc
add
cmp
imul
mov
sbb
psrld
cmp
cmp
or
cld
sti
add
test
sub
pop
fstp
iret
jle
pop
loop
(bad)
loop
ror
inc
inc
in
cmp
jg
test
outs
lock
lock
mov
and
ficom
outs
call
mov
push
add
scas
adc
addr16
adc
retf
mov
or
sub
push
inc
aaa
xor
push
inc
shr
aad
inc
sub
ret
out
outs
(bad)
push
inc
pop
sbb
ret
sbb
(bad)
out
mov
pop
push
ret
mov
xor
fstp
popa
pushf
pusha
inc
(bad)
jmp
xchg
dec
ss
lea
and
les
sub
push
ins
loopne
or
loopne
sbb
mov
and
sub
adc
stos
test
xlat
jmp
shr
dec
hlt
sub
pop
cmp
and
sub
retf
fcom
das
add
(bad)
jge
(bad)
jge
fnstsw
loopne
imul
out
add
add
lods
jnp
call
sbb
jb
dec
in
cmps
cmp
addr16
icebp
push
ficom
imul
pop
outs
or
(bad)
or
inc
loopne
ficom
ret
ins
mov
jp
add
jg
or
jmp
mov
icebp
addr16
adc
ja
push
lds
xchg
mov
mov
pop
add
mov
repz
dec
fcomp
push
adc
sbb
dec
push
aaa
mov
inc
js
adc
xchg
cli
pop
aaa
pop
cmp
push
jb
lock
(bad)
loopne
ins
pop
test
lds
les
stos
movs
dec
mov
pushf
popa
in
jle
cmp
rol
test
(bad)
xchg
outs
test
enter
dec
(bad)
adc
ja
pusha
in
mov
cs
sbb
pop
popf
ja
push
ret
mov
jne
adc
mov
sti
hlt
hlt
mov
stos
retf
popa
sub
jb
lahf
push
mov
mov
ja
call
push
fistp
xlat
(bad)
aaa
mov
xor
outs
loop
retf
std
not
mov
pop
mov
cli
sub
xchg
and
pop
ret
ins
clc
sbb
(bad)
or
test
adc
lods
fldcw
imul
mov
(bad)
sbb
xchg
shr
ret
daa
(bad)
mov
outs
xchg
ret
push
mov
neg
test
imul
leave
es
std
sbb
pop
adc
and
add
bound
js
cmp
movlhps
imul
mov
add
(bad)
sti
mov
mov
cmp
movs
mov
sbb
outs
push
fiadd
enter
inc
imul
fwait
xchg
arpl
jmp
pusha
imul
out
mov
and
mov
add
and
pop
call
sub
shl
iret
rol
stos
jmp
jecxz
or
mov
ret
je
imul
dec
xor
dec
bound
xlat
enter
hlt
mov
jmp
mov
fild
mov
test
sub
inc
sti
jp
mov
(bad)
out
xor
sub
test
jg
sbb
dec
cld
movs
mov
inc
mov
stc
dec
and
jge
outs
pop
pop
ret
xchg
nop
setne
mov
xlat
dec
pop
popf
sub
sub
lods
mov
mov
xor
int
shr
and
xchg
repnz
jp
jp
test
jmp
lock
mov
sbb
jns
movs
jp
test
inc
jge
or
mov
xor
mov
imul
les
test
dec
sub
add
adc
add
sub
jge
inc
jbe
add
inc
inc
cmp
push
sti
sub
cwde
dec
cmp
mov
sub
imul
retf
inc
jo
xlat
repnz
jb
mov
(bad)
sahf
inc
popf
adc
and
jns
leave
pop
shr
add
jmp
adc
fucomip
push
and
push
ror
data16
lods
rol
adc
ret
jle
paddq
fwait
or
cli
(bad)
mov
ret
jmp
or
bound
add
jge
inc
test
jge
std
into
cmp
mov
(bad)
sub
cmp
xchg
adc
dec
retf
sbb
cli
mov
inc
add
stos
pop
sub
pop
enter
lock
sahf
mov
loope
int3
addr16
dec
xor
push
cdq
adc
or
adc
push
xchg
dec
repz
fisubr
neg
popa
ror
or
movs
(bad)
adc
or
and
sub
loope
jbe
in
pop
popf
and
cmp
mov
inc
add
cmps
mov
jnp
fs
test
leave
xchg
(bad)
xlat
test
out
sub
add
adc
xchg
dec
mov
popa
sbb
push
lock
push
test
xor
imul
mov
mov
mov
ins
xchg
stos
xchg
jno
inc
addr16
fs
sbb
iret
scas
or
sahf
lahf
bnd
jno
and
in
int
inc
test
mov
scas
mov
into
and
fsubrp
push
or
dec
fwait
mov
lods
inc
pop
mov
mov
cmp
and
lock
sbb
cld
sub
test
mov
cli
cmc
les
es
imul
out
sti
icebp
ret
jbe
sub
fisttp
cmp
mov
into
mov
stc
mov
int3
mov
imul
pop
push
test
rol
and
inc
je
arpl
sbb
pop
adc
dec
ins
cmps
jmp
xchg
and
mov
push
add
sub
sub
icebp
mov
cmp
pop
mov
mov
xor
xlat
mov
stos
xor
es
mov
fcomp
jg
sbb
mov
sti
xchg
(bad)
and
adc
rcl
cs
jp
mov
and
or
std
aaa
xchg
stos
mov
or
jns
test
inc
cs
xor
into
sbb
mov
jmp
push
in
cmp
clc
fs
bound
mov
scas
(bad)
cmc
cmc
test
push
popf
lods
addr16
cmp
cmp
mov
aam
in
mov
cmps
out
push
test
dec
xchg
xor
ds
imul
movs
inc
mov
cmp
push
rep
retf
ret
loope
push
out
scas
mov
xchg
and
arpl
lds
push
arpl
jmp
fwait
in
pop
mov
dec
lea
sbb
dec
jle
pop
xchg
outs
repz
sbb
arpl
fnsave
cmp
ret
push
or
retf
(bad)
pop
stc
sbb
push
mov
cmp
xchg
iret
vcmpeq_osss
push
in
mov
ins
js
inc
xchg
repnz
mov
mov
shl
repnz
dec
sahf
int
gs
fild
sbb
icebp
mov
ins
sbb
mov
jmp
repnz
cmc
frstor
pop
xor
mov
cmc
push
nop
sahf
fbstp
test
mov
mov
pop
scas
(bad)
clc
dec
sub
aam
ss
inc
xor
arpl
push
dec
aaa
jge
scas
add
dec
dec
fild
repnz
cwde
lea
cwde
add
adc
mov
in
dec
fstp
sub
and
outs
js
push
sbb
adc
fcomp
aam
in
adc
scas
rol
fbstp
nop
dec
inc
dec
scas
adc
mov
(bad)
adc
sub
push
cli
and
sub
jl
mov
lea
clc
pusha
lds
in
sub
mov
cmp
sub
fmul
xchg
test
int3
push
cld
sub
hlt
mov
nop
popa
es
stos
(bad)
(bad)
in
fs
and
push
(bad)
(bad)
mov
xlat
fst
aas
in
mov
mov
xchg
sahf
aad
jmp
sbb
inc
mov
in
jns
faddp
loopne
addr16
pushf
retf
imul
mov
xor
sbb
push
and
(bad)
mov
dec
(bad)
mov
fadd
sahf
mov
inc
imul
das
xchg
shr
loop
mov
and
shl
jbe
leave
sbb
cs
(bad)
fcomp
mov
imul
in
pop
lea
push
jg
push
in
adc
inc
pop
dec
push
test
mov
iret
cmp
add
out
(bad)
push
pmullw
popf
div
xor
add
es
or
aam
push
sub
jg
push
mov
pop
adc
mov
mov
int
cmp
mov
xlat
sub
pop
mov
fistp
add
stc
mov
scas
gs
mov
mov
and
repz
sbb
mov
pushf
pop
push
xor
mov
imul
and
out
mov
sub
stos
icebp
neg
mov
or
js
adc
mov
jb
xor
mov
bound
jmp
das
(bad)
adc
ror
xor
(bad)
idiv
popf
sahf
pop
cmp
pop
test
clc
jns
mov
jns
outs
xor
retf
push
int3
jg
push
mov
pop
test
ds
rcr
in
inc
pusha
adc
or
mov
call
imul
sbb
lahf
inc
ss
hlt
inc
rcl
cmps
test
dec
sar
lds
loopne
push
mov
xchg
dec
and
out
or
rcl
lds
and
icebp
cli
out
dec
mov
jle
shl
jno
clc
jae
loop
xlat
sbb
dec
jge
xor
loopne
push
hlt
mov
jno
scas
loopne
xchg
(bad)
sbb
inc
int3
push
pusha
clc
daa
pop
pop
jmp
mov
push
test
bound
ret
sub
add
mov
gs
sbb
inc
adc
sti
mov
and
cmps
nop
sub
ss
mov
push
inc
(bad)
mov
rol
fwait
rcl
addr16
loope
std
cdq
call
pop
pop
cmp
adc
addr16
adc
call
das
mov
into
and
add
iret
and
xor
mov
in
add
call
cwde
xor
xor
xchg
mov
ja
fst
xor
or
sub
pushf
xchg
xor
jmp
pop
mov
(bad)
mov
in
push
sub
pop
sub
mov
sahf
jb
fs
pop
sbb
pop
cs
cmp
(bad)
push
add
and
cmps
add
bt
pop
pop
outs
sub
push
shr
arpl
and
sub
das
mov
add
sbb
cmp
jbe
or
xchg
adc
out
push
stos
xor
xchg
inc
jge
addr16
push
mov
jl
cmp
mov
test
mov
ja
aaa
adc
cmp
xchg
mov
xchg
adc
mov
xchg
cld
sbb
bound
out
and
out
repnz
movs
xor
cmp
test
fld
fst
xchg
xchg
sbb
mov
popa
sbb
es
xor
push
dec
in
movs
clc
dec
sar
or
data16
rcl
fcom
jo
add
fwait
mov
jg
mov
ror
mov
sub
mov
add
icebp
rol
mov
dec
das
jns
inc
sub
cmp
clc
(bad)
out
pop
push
or
stos
inc
hlt
popa
pop
les
movs
add
mov
shl
ss
sbb
pop
cli
sbb
sub
addr16
adc
cmp
cmp
imul
aam
cmc
xchg
outs
shl
pop
adc
mov
sbb
das
bound
adc
imul
push
add
out
leave
dec
idiv
mov
inc
(bad)
clc
aam
nop
sti
or
(bad)
cmp
mov
and
jle
das
xor
or
push
mov
js
ins
rcr
pop
mov
arpl
inc
cmps
ss
mov
cmp
movs
mov
push
sar
xchg
inc
and
aam
and
cmp
int
jecxz
(bad)
sar
mov
ror
daa
loop
cmps
ins
pop
jecxz
neg
int
cmps
pop
xchg
jo
jmp
mov
cmp
retf
mov
lods
dec
fdiv
jge
icebp
fstp
jae
add
retf
dec
xor
push
mov
test
outs
cmp
pop
fdivr
push
loop
lahf
adc
ins
pop
sbb
inc
test
or
push
(bad)
lods
clflush
xchg
scas
nop
add
add
mov
mov
mov
push
and
mov
or
xor
pop
xor
retf
sbb
add
pop
enter
push
and
xchg
push
or
sbb
je
xor
xchg
mov
mov
(bad)
fmul
cmp
sub
and
shl
push
jl
int3
add
ja
jb
add
les
or
xor
sahf
mov
jle
or
sub
ds
and
sbb
adc
fnstenv
jp
xlat
int
movs
imul
sti
inc
push
iret
int
lods
jbe
fsubr
xor
pop
push
xor
(bad)
jge
ds
xchg
(bad)
and
in
clc
jmp
push
xor
push
out
mov
sub
xchg
jns
ds
retf
cld
cld
pop
or
xor
push
int3
clc
adc
jmp
or
mov
cmps
gs
je
add
mov
int3
ins
dec
test
mov
pop
cli
cmp
shl
rcl
mov
rol
adc
retf
xchg
in
jle
mov
add
mov
adc
push
daa
stc
(bad)
fcomip
call
cmp
cmp
xchg
sub
cmps
lods
and
add
inc
ss
inc
arpl
sub
xlat
ret
int3
cmp
fwait
mov
not
or
mov
fnstcw
jp
cmps
sub
mov
sar
jnp
mov
retf
xchg
sub
inc
movs
nop
xor
sbb
add
mov
or
push
pop
ja
lea
lods
inc
cmps
or
ins
cmps
or
out
push
stc
pop
mov
cdq
push
dec
xor
jb
inc
jp
xor
pop
jbe
sbb
add
cmp
mul
fisttp
xchg
xlat
push
sbb
lahf
adc
imul
push
imul
pop
push
or
mov
(bad)
fcom
(bad)
jne
call
ja
fcom
hlt
mov
ror
sub
jbe
cmps
xor
stos
add
ja
pop
ss
xor
or
sbb
mov
jb
mov
test
aaa
(bad)
xchg
into
loope
test
inc
in
iret
pop
mov
fs
mov
mov
inc
test
fnstcw
lock
js
retf
(bad)
in
mov
or
cmp
and
gs
scas
pop
ins
dec
dec
inc
fldcw
lds
loopne
cmps
push
mov
mov
add
fbld
dec
jmp
leave
ret
dec
ret
mov
xor
cmps
push
adc
fst
push
addr16
ficom
and
pusha
cmp
xchg
sti
lods
sbb
sbb
shr
or
(bad)
cmp
imul
sub
dec
aas
adc
cdq
jnp
imul
or
gs
mov
sub
add
xchg
scas
outs
cwde
dec
pushf
mov
mov
scas
pop
imul
cmp
je
inc
int
mov
fs
xor
xchg
jmp
ret
iret
jmp
lods
icebp
mov
data16
pushf
xlat
jnp
adc
ret
out
ror
repnz
add
xchg
xor
stc
jmp
sbb
dec
fwait
pop
inc
xchg
and
xchg
cdq
push
repz
dec
(bad)
inc
sub
push
loope
ret
lods
add
pop
and
sbb
mov
cmps
dec
enter
lods
dec
loope
sub
test
mov
xchg
sub
or
xchg
fst
jo
sti
ror
mov
popf
(bad)
pop
jb
int
mov
adc
das
mov
add
cdq
scas
inc
inc
xchg
pop
push
fs
jae
(bad)
jmp
and
dec
dec
xor
xchg
sub
inc
mov
ds
push
or
push
cmps
push
xor
ds
call
add
sbb
test
jge
pop
ins
test
dec
jmp
xlat
repnz
movs
push
(bad)
adc
inc
push
iret
out
inc
xchg
outs
inc
dec
fadd
jge
call
aaa
dec
or
retfw
loop
push
cwde
or
aad
push
xchg
pop
shr
cmps
ja
jne
ja
jo
xchg
mov
(bad)
test
fisttp
bound
call
retf
test
int
and
clc
cwde
(bad)
mov
sti
inc
jo
or
adc
or
clc
test
mov
mov
mov
adc
and
mov
sub
sub
gs
icebp
in
jae
cmc
cmp
sbb
jge
cmps
push
xchg
sub
ins
sub
dec
lahf
movs
xchg
inc
daa
jbe
mov
mov
xchg
adc
cmps
jns
mov
jle
inc
add
pop
outs
scas
mov
fdivr
and
popa
aas
frstor
mov
or
cmp
(bad)
mov
xchg
xchg
shr
push
xchg
pop
lahf
sbb
fistp
test
cmp
xchg
retf
cdq
push
mov
iret
aaa
aad
test
fild
push
call
(bad)
daa
shl
mov
out
pop
inc
and
jmp
aam
sub
add
retf
mov
shl
dec
ins
rcl
fxch
out
data16
push
fstp
pop
inc
inc
pop
xchg
xchg
or
imul
retf
push
call
adc
cld
inc
xchg
inc
cld
std
imul
jnp
ret
sbb
jge
mov
sbb
neg
jp
rol
pop
imul
sbb
repz
mov
int3
loop
mov
in
dec
inc
movs
push
je
jno
cmc
mov
fistp
dec
pop
pop
mov
mov
out
pop
jge
cwde
sub
pusha
and
mov
jl
jp
popf
and
adc
mov
adc
mov
and
pop
sbb
aas
mov
xchg
mov
jo
(bad)
cmp
outs
mov
xor
leave
adc
cmp
aas
mov
pop
aas
js
and
xchg
popf
dec
or
repnz
stc
in
dec
jns
add
mov
push
dec
call
pop
out
dec
push
aad
add
shr
push
sbb
mov
jmp
add
shl
push
sub
cmps
mov
(bad)
jbe
add
mov
mov
or
push
cld
xchg
icebp
ds
or
pop
les
ja
cmc
into
push
push
and
je
cmp
icebp
out
rcr
push
add
inc
push
dec
dec
push
fsub
addr16
sub
jnp
inc
dec
das
and
push
stos
jecxz
js
sub
iret
nop
cmp
sbb
not
mov
cli
cmp
out
jle
imul
adc
pop
retf
call
jb
sahf
xchg
cs
popa
mov
lods
loop
dec
jle
push
jne
mov
pop
or
mov
xchg
movs
repz
pop
push
fucomp
cmps
pop
sti
pop
(bad)
cmc
sar
sub
lods
pop
mov
and
ret
fcom
cmp
mov
(bad)
pop
test
xchg
push
cmc
clc
icebp
jnp
mov
mov
aas
or
sbb
cmc
mov
xor
test
clc
in
loopne
rol
mov
dec
stos
push
ret
repz
and
and
loope
dec
lahf
in
inc
mov
in
retf
(bad)
mov
mov
cli
and
sti
repz
mov
ret
bound
out
xor
inc
pop
sub
sahf
mov
lahf
cmp
movs
cmp
mov
or
pushf
enter
pop
cld
sbb
pop
adc
outs
cmp
dec
pop
idiv
inc
lods
repz
mov
int3
into
fnsetpm(287
mov
dec
pop
call
xchg
pop
pop
jmp
cdq
es
push
xor
lods
jae
sbb
pushf
ret
push
sbb
jne
jge
hlt
push
push
jle
jmp
rol
jecxz
movs
mov
or
adc
sub
and
pop
test
shl
sub
or
shr
outs
mov
lods
mov
dec
imul
movs
sub
pop
push
rcr
cmp
mov
jp
(bad)
fstp
dec
or
cli
ins
and
stc
mov
pop
in
cs
es
sbb
aam
loopne
sub
push
mov
sar
mov
xchg
xchg
jp
clc
pop
jae
ror
push
inc
mov
bound
and
hlt
lahf
and
xor
jae
(bad)
gs
sti
not
into
hlt
icebp
xor
mov
push
out
inc
shr
dec
pop
out
jnp
sbb
jb
pushf
cmps
fbstp
xchg
cmc
and
adc
dec
inc
mov
pop
jecxz
cmps
pop
imul
sub
scas
cmp
dec
inc
shr
dec
sti
add
sub
aam
lea
jmp
xor
mov
mov
out
mov
dec
pop
(bad)
sub
fisubr
mov
mov
scas
xchg
in
(bad)
out
mov
(bad)
mov
push
push
push
mov
imul
in
test
aas
std
pusha
bound
call
std
mov
daa
push
add
and
pusha
shr
mov
pop
mov
out
ret
outs
mov
fidiv
dec
pop
outs
ror
push
push
push
cmp
ss
adc
jmp
sub
sub
xchg
cmp
jge
in
sub
out
pop
sbb
int
cmp
mov
mov
inc
and
or
mov
jmp
pop
push
mov
xor
jl
daa
(bad)
mov
mov
adc
adc
cmp
or
fwait
jge
ret
inc
push
idiv
mov
fs
jo
pop
xor
ds
mov
fcmovnbe
fdivr
aam
outs
push
sbb
sbb
adc
arpl
pop
jae
push
in
int
cld
or
pushf
out
rcl
je
inc
inc
out
sbb
jl
mov
cli
jg
or
pushf
mov
jle
mov
daa
aas
inc
sub
ins
jge
sbb
sbb
imul
lea
pop
call
xchg
loop
inc
in
cmp
xor
es
enter
dec
xor
add
and
jge
mov
xchg
pop
sbb
pop
or
fld
pop
pop
dec
push
imul
cdq
rol
clc
cmps
xchg
or
mov
movs
push
dec
mov
dec
pop
xchg
add
iret
sbb
jnp
cmp
jb
(bad)
scas
sub
mov
aad
inc
xor
mov
mov
je
mov
inc
xchg
push
movs
mov
(bad)
jecxz
cmp
mov
mov
iret
add
pushf
pop
outs
stos
movs
pop
sbb
sub
std
jns
scas
adc
sbb
shl
push
cmps
arpl
mov
add
sbb
add
xchg
sahf
and
sahf
dec
ins
jae
push
fild
mov
and
dec
xchg
xor
jae
fisubr
mov
dec
ds
pop
sub
test
jg
push
mov
outs
mul
nop
lds
ret
cmps
fsubr
cmp
pop
data16
inc
fcom
repz
jo
pop
or
ret
mov
xchg
aam
sbb
clc
shl
ss
push
out
rcl
scas
aad
xchg
cmp
inc
popf
fwait
jb
pop
mov
or
repz
jecxz
pop
jl
int
sbb
arpl
adc
cmp
or
dec
pop
(bad)
lds
add
gs
xchg
shr
out
sub
jp
dec
ret
dec
repz
xor
lea
sar
push
(bad)
adc
cmp
jne
add
mov
jne
sub
push
sbb
mov
iret
fadd
cdq
lea
add
cmc
outs
xchg
(bad)
jl
fistp
sbb
pusha
loop
pop
and
inc
cmp
(bad)
sub
jne
cmp
mov
int
pop
sbb
sbb
adc
jge
cli
sub
retf
ins
or
fbstp
push
gs
mov
cmp
jmp
sub
ins
pushf
mov
ss
aam
std
into
(bad)
inc
add
or
add
dec
or
mov
cld
ss
xchg
mov
sub
cmps
cli
mov
xor
call
sbb
mov
push
in
stos
shl
fdivr
or
xor
scas
mov
push
jp
xor
sbb
mov
fist
aaa
mov
cld
call
lea
push
and
cmp
dec
loope
mov
jb
out
mov
call
lahf
lock
jmp
sub
jg
aad
cs
xor
mov
pop
in
test
mov
sub
sbb
movs
gs
sub
xor
and
mov
test
mov
ret
dec
dec
sahf
mov
stos
ins
shr
mov
add
ja
movs
jg
loopne
das
lar
add
ins
push
or
into
mov
xor
xchg
mov
mov
xchg
imul
hlt
and
outs
scas
jge
inc
fild
jne
cmp
mov
(bad)
popf
mov
sub
dec
mov
rcl
sub
dec
je
imul
push
mov
je
jae
mov
jg
jp
jg
push
repz
loop
data16
xor
fstp
mov
test
out
and
or
in
pop
push
or
gs
dec
mov
xor
adc
xor
sbb
ins
ret
and
mov
push
jne
stos
mov
push
jb
dec
mov
ret
out
lahf
add
xor
arpl
add
jmp
gs
rcl
mov
enter
sahf
ret
ror
and
inc
fwait
mov
dec
repz
adc
(bad)
push
pop
iret
lock
push
xor
jmp
lahf
or
jle
je
fdiv
loop
daa
out
inc
les
out
aad
cmc
fldl2t
jle
sti
jns
and
fwait
adc
or
pop
adc
dec
inc
cld
popf
lea
dec
das
test
add
sub
sub
or
std
mov
pop
movs
xor
lahf
xchg
loopne
sub
repnz
test
xchg
jno
fnstsw
lds
jbe
cmp
into
out
xchg
jns
repz
test
sti
pop
ins
shr
and
jmp
mov
cmp
jg
loopne
retf
out
pop
push
pop
(bad)
leave
jmp
sub
pop
mov
or
(bad)
cmp
push
jne
adc
jp
lahf
lock
repz
xchg
mov
rcr
pop
and
fld
push
loop
pop
cmp
sub
jo
idiv
cmp
and
int
sbb
jbe
jnp
cmps
ins
(bad)
cdq
gs
mov
inc
sub
test
nop
xor
dec
lods
or
movs
cdq
mov
lods
pop
jl
int
movs
cmp
cli
shr
loop
repz
inc
jle
lds
xor
nop
sbb
pushf
(bad)
repnz
ret
inc
adc
lods
stos
push
push
cli
neg
xchg
lock
(bad)
push
pop
mov
stc
into
push
fidiv
mov
xchg
repz
fiadd
jmp
neg
nop
ds
mov
xchg
or
nop
xchg
cmps
aas
movs
add
inc
sbb
adc
and
inc
adc
jne
mov
outs
adc
push
into
mov
mov
dec
cmps
adc
stos
enter
frstor
bound
inc
cmps
jmp
push
inc
xchg
jb
sbb
int3
out
inc
xor
imul
fiadd
out
mov
scas
movs
push
xchg
das
sub
or
fbstp
xor
jne
test
jns
shr
fadd
ror
pop
mov
loop
xor
xor
iret
xchg
fiadd
aas
(bad)
mov
ja
inc
xor
xchg
cmp
inc
js
xchg
adc
repz
ss
cmp
jmp
mov
pop
cld
leave
add
mov
fist
mov
dec
and
push
and
xlat
jbe
inc
out
mov
out
inc
jp
ret
shr
mov
jne
jo
add
and
xchg
das
nop
dec
retf
repz
dec
jne
inc
test
inc
pop
xchg
aad
(bad)
xor
cld
aas
xchg
adc
lahf
pop
fnsave
call
cli
cmp
cmp
push
and
(bad)
pop
cs
nop
push
inc
clc
inc
xchg
fld
fwait
repz
push
dec
repnz
rcl
mov
je
in
lahf
lock
neg
aas
sahf
fldenv
call
push
cwde
xchg
movs
scas
call
das
mov
lahf
(bad)
push
dec
inc
xchg
pop
adc
or
bound
jbe
dec
dec
and
push
mov
dec
gs
movs
sub
adc
mov
sub
jmp
mov
inc
jge
xchg
push
xor
fnstenv
stc
or
cmp
out
jmp
jo
xchg
lahf
cmp
dec
jbe
sbb
js
push
fwait
icebp
dec
imul
cli
fnstsw
test
or
fdivrp
mov
fdiv
shr
cmc
push
not
lods
out
xchg
jp
cld
xchg
push
rol
xchg
mov
push
push
push
cmp
cmp
inc
adc
mov
mov
imul
adc
add
ins
mov
mov
ins
inc
jmp
dec
cli
pop
push
stos
inc
fs
pop
in
movs
sti
xchg
mov
ins
cmps
in
stc
mov
sub
in
(bad)
popa
cmp
inc
out
dec
cli
arpl
inc
les
xchg
adc
add
in
ds
leave
lds
add
and
mov
and
stos
mov
imul
xchg
mov
mov
xor
jb
jmp
sbb
dec
jns
xor
jge
(bad)
fnstcw
or
mov
push
adc
cld
and
stc
mov
inc
push
les
clc
push
mov
test
pop
call
fisub
adc
or
and
fwait
push
and
xchg
sub
pop
fld
ja
add
(bad)
push
inc
inc
out
jns
test
adc
mov
jno
add
mov
ss
xor
push
add
jle
aad
or
inc
jmp
and
mov
pop
inc
xchg
cmc
pop
pusha
jnp
and
jmp
js
pop
push
std
mov
jg
mov
scas
sbb
lods
rcr
xchg
test
lods
dec
add
outs
mov
pop
ins
inc
mov
mov
repnz
sub
jne
inc
mov
call
std
and
test
sti
adc
or
mov
(bad)
sti
dec
xor
sub
pop
pop
or
and
dec
stos
mov
inc
or
mov
and
adc
outs
fld
inc
cmp
sbb
int3
leave
xchg
ret
repz
xchg
mov
scas
sbb
sahf
ins
xor
push
push
sbb
pusha
lods
lock
into
retf
test
sub
xchg
aam
sub
arpl
out
bound
pop
cmp
sbb
ror
pop
fs
cli
sub
pop
and
arpl
jl
xor
mov
(bad)
in
or
ins
mov
sub
movs
jecxz
pusha
pop
rcl
fadd
jns
(bad)
out
nop
xchg
push
mov
xor
pop
ja
or
push
or
push
(bad)
ja
dec
dec
pusha
mov
int3
push
stos
fimul
mov
js
hlt
or
retf
xor
pop
push
mov
xchg
stc
outs
jl
les
idiv
lds
add
jecxz
int3
mov
arpl
lds
pop
or
mov
ficom
sbb
neg
fnstenv
mov
(bad)
mov
not
rcr
sbb
hlt
fdivrp
jae
fs
fiadd
std
pushf
dec
in
rcr
mov
dec
scas
loopne
sbb
dec
push
sub
mov
adc
xchg
aam
pop
push
cmp
in
cmps
stos
jl
push
ds
nop
(bad)
fist
sub
and
add
cli
(bad)
retf
dec
fimul
repnz
dec
cmps
mov
mov
mov
xchg
adc
push
jno
cmc
mov
rcr
xor
adc
and
sbb
add
xor
mov
inc
xlat
dec
fidivr
add
fidivr
push
xchg
shr
fcom
jo
sar
stc
aas
push
pusha
ret
rcr
retf
mov
xor
mov
inc
xchg
fst
or
xchg
push
add
retf
ds
sbb
adc
pop
sbb
in
jmp
xor
mov
jo
sbb
aam
fucom
cmps
test
xchg
adc
into
in
add
loop
lahf
mov
or
fdiv
fidivr
ins
scas
sub
dec
xchg
sub
jg
call
mov
jp
inc
hlt
jnp
aaa
test
mov
fiadd
enter
ins
jb
pop
inc
cmps
push
mov
jnp
jecxz
(bad)
sbb
aam
sub
mov
sbb
and
loop
inc
mov
jmp
add
sbb
stc
scas
addr16
mov
xor
dec
sbb
rcr
or
or
inc
or
jno
mov
cdq
pop
pop
stos
jp
shl
femms
add
sbb
nop
fist
lds
out
dec
jmp
dec
add
cld
mov
sti
dec
and
sub
mov
pop
xchg
pop
lods
hlt
push
mov
ret
xor
and
(bad)
stc
or
add
pop
xchg
jb
xchg
rcr
stos
jmp
ins
mov
jg
jae
dec
push
mov
cmp
or
fdivr
dec
xchg
js
scas
push
(bad)
adc
clc
pop
(bad)
out
(bad)
mov
pop
les
xchg
lods
stos
cmp
retf
push
in
pop
dec
mov
cld
or
mov
pop
sbb
pop
test
movs
push
jmp
sbb
iret
inc
mov
loopne
push
pop
push
inc
pop
jmp
sbb
fstp
mov
inc
jb
js
out
inc
push
mov
sub
scas
jnp
jnp
mov
pop
pop
out
in
in
ins
aas
ret
add
rcl
xor
xlat
adc
jle
and
and
push
repz
sbb
call
sbb
mov
mov
js
int3
test
sbb
adc
xchg
add
cli
sub
mov
in
add
cwde
and
cmp
xchg
push
repz
lahf
sar
out
stc
int3
pushf
scas
stos
stos
stos
and
and
mov
or
cmp
cdq
add
outs
mov
xchg
(bad)
xlat
repz
sbb
jo
cld
out
push
imul
push
jo
cwde
mov
mov
cwde
cmp
cdq
cs
rcr
xchg
or
push
or
inc
jbe
sahf
add
and
xor
test
loopne
xchg
rcr
xor
sub
and
sti
lds
int3
div
dec
adc
dec
jmp
imul
pop
push
(bad)
imul
ret
mov
dec
add
test
in
aas
inc
cmp
xchg
dec
into
inc
ss
push
cmps
mov
popa
popa
test
pushf
test
push
jne
rol
mov
inc
out
cmps
push
ret
sub
movs
in
ins
les
aam
add
mov
pusha
std
popf
and
mov
mov
lea
test
or
clc
or
imul
in
inc
out
xor
pop
sbb
mov
movs
and
xchg
xchg
ja
nop
mov
jae
adc
sbb
addr16
in
sbb
pop
pop
daa
and
je
xor
xchg
adc
and
jg
xor
ins
in
cmps
popa
xchg
jb
inc
into
daa
fcmovnb
or
jb
arpl
pop
mov
scas
ins
jbe
inc
out
xchg
sbb
cdq
lods
mov
mov
pop
retf
push
dec
mov
xlat
pop
lahf
or
adc
push
ins
push
or
jg
pop
fistp
test
xchg
fwait
jae
mov
ret
pop
rol
cdq
mov
movs
nop
mov
das
ss
out
arpl
call
pop
push
inc
or
std
adc
dec
inc
jae
jnp
mov
sub
iret
sub
or
xor
mov
test
test
xchg
fmul
popa
aad
pop
jle
mov
add
and
xchg
adc
mov
(bad)
int3
adc
push
add
cwde
cli
and
fidivr
push
scas
fwait
jge
(bad)
inc
fmul
cs
scas
dec
gs
jle
fcmovne
add
and
inc
push
jae
push
add
data16
xor
sbb
retf
jl
xchg
xchg
dec
inc
ja
rol
aad
mov
dec
popf
add
dec
mov
scas
cmc
ror
and
push
cmps
xchg
xchg
xor
add
xchg
add
mov
(bad)
or
xor
mov
es
inc
push
sbb
jge
jg
sar
daa
dec
loopne
add
mov
pop
test
cmp
pop
xchg
lds
bound
inc
or
addr16
sbb
xor
(bad)
test
scas
dec
mov
xchg
sub
push
das
out
sub
retf
scas
out
or
or
mov
xor
stos
push
add
movs
push
and
push
repnz
leave
mov
shl
clc
and
sub
in
xor
in
push
loop
cmp
(bad)
sysexit
pop
dec
stos
inc
clc
dec
enter
or
out
adc
les
cmp
ror
sub
push
adc
daa
dec
fimul
lea
cmp
(bad)
sub
xchg
shl
and
or
out
and
cmc
arpl
out
add
cmp
inc
xchg
sub
fstp
in
and
das
rcr
xchg
push
fnsave
sbb
mov
sub
or
pop
mov
mov
mov
scas
lahf
ret
mov
int
or
xchg
mov
lds
jns
xor
es
add
aas
lea
ss
add
scas
mov
leave
dec
loop
add
enter
outs
retf
dec
scas
cmc
xchg
not
in
xor
jmp
inc
and
xor
lahf
mov
mov
push
pop
jecxz
dec
retf
adc
outs
xchg
jne
mov
mov
push
(bad)
mov
fadd
pop
rol
xlat
pop
cdq
fwait
add
(bad)
aas
not
and
dec
pop
(bad)
into
je
xchg
jmp
jmp
push
adc
cmp
ss
mov
fcomp
aaa
push
pop
push
popf
in
ret
and
cmp
jbe
out
movs
nop
loopne
arpl
xor
cmp
xchg
arpl
les
sub
rol
xchg
and
or
shld
aaa
mov
inc
ret
ins
xchg
push
mov
lods
push
imul
mov
sbb
cld
cmp
xor
xor
cmc
mov
sbb
fimul
inc
xor
jb
int
sbb
stos
dec
test
dec
cwde
fs
mov
scas
inc
rcr
(bad)
mov
or
sub
cmps
and
cmc
lock
cmp
sub
jno
pop
mov
mov
sub
pushf
ficom
xlat
pop
inc
(bad)
aad
inc
frstor
jp
(bad)
gs
enter
int3
aad
lods
add
pop
xchg
and
or
call
frstor
(bad)
push
and
inc
pushf
jb
add
bound
repz
inc
and
loop
pop
fild
sub
mov
jmp
cld
lock
mov
loope
pop
inc
ror
adc
and
test
lahf
fbld
mov
adc
push
aaa
push
pop
cmp
ss
adc
clc
mov
xchg
fist
inc
xor
jmp
repz
jge
repnz
adc
test
jne
jno
ds
xor
mov
sbb
or
dec
push
dec
repnz
(bad)
lock
test
movs
mov
cmp
in
adc
data16
push
jno
lods
call
cmps
lods
xor
call
test
imul
push
jg
imul
sub
mov
mov
(bad)
rol
fs
or
mov
adc
mov
dec
cmp
(bad)
jns
lahf
cld
hlt
daa
repnz
push
jmp
pop
mov
out
in
arpl
cwde
mov
test
or
ret
fld
div
in
rol
and
sbb
mov
xor
aam
push
jecxz
xor
jb
jle
xchg
repnz
lock
ds
jnp
ret
cmp
popa
adc
pop
dec
sbb
inc
cmp
stos
ins
ds
mov
add
mov
lods
mov
repnz
into
mov
cld
retf
pop
mov
add
pop
aam
mov
add
add
shr
push
adc
mov
xor
push
sbb
sub
sub
mov
scas
mov
cmp
in
jl
sbb
xchg
popf
inc
scas
ins
cmc
ins
mov
pop
js
xor
icebp
pop
push
mov
mov
jmp
mov
dec
jne
dec
inc
xchg
sub
div
sbb
js
or
cmp
popa
jmp
jnp
cmc
mov
mov
adc
sub
mov
std
or
div
and
sub
sbb
push
sub
xor
sbb
sub
pop
div
arpl
mov
cmp
stos
and
and
adc
xor
xchg
test
imul
into
imul
jno
mov
into
arpl
data16
mov
xchg
sti
mov
data16
pop
call
push
in
or
sbb
mov
scas
out
shl
sub
lds
push
loopne
xor
mov
ret
outs
repnz
call
add
or
mov
shr
sub
out
xchg
and
mov
lds
push
lods
jno
sub
add
sbb
mov
sub
mov
sbb
and
mov
xchg
jmp
scas
dec
jb
cmp
out
clc
and
xlat
stos
enter
aaa
pushf
inc
and
push
push
clc
jnp
or
push
mov
(bad)
mov
out
shr
inc
jb
outs
add
xor
movs
pop
rol
fsub
xchg
mov
pusha
leave
cdq
dec
adc
in
mov
cdq
dec
lahf
lds
or
in
adc
add
in
fist
push
xchg
in
stos
xchg
cmp
pop
leave
pushf
bound
xchg
inc
or
add
cmp
ja
sbb
jns
and
pop
movs
sub
sti
adc
aam
sbb
jge
jle
xchg
push
xor
push
jae
and
lahf
bound
jb
cdq
fsub
push
jns
mov
loopne
int3
aas
pop
sar
pop
sub
cwde
lock
add
das
pusha
aaa
inc
(bad)
pop
sbb
hlt
or
pop
arpl
adc
jp
daa
dec
jne
sbb
mov
pop
iret
add
push
repz
shl
ss
rol
hlt
dec
push
xor
pop
pop
fld1
fsub
outs
dec
mov
ja
pop
rcl
out
pop
xchg
outs
jne
xchg
(bad)
push
out
mov
out
dec
inc
mov
clc
call
movsx
(bad)
movs
pop
cmp
pop
cmp
ret
(bad)
sbb
aam
mov
repnz
cld
mov
jg
in
pop
cs
out
int
stc
in
pushf
inc
ins
popa
outs
fisttp
(bad)
and
fwait
adc
fwait
movs
cmps
jmp
fisubr
push
es
dec
jmp
push
mov
pop
xchg
sti
stc
jge
dec
and
mov
sbb
xchg
pusha
call
mov
cmp
aaa
push
add
ss
shl
and
fstp
ins
xor
pushf
fild
sub
dec
cmp
sub
repz
sub
hlt
fcom
mov
mov
cmp
hlt
mov
mul
mov
loopne
pushf
mov
dec
add
mov
in
clc
push
sub
add
sbb
jnp
rcr
pusha
jmp
aam
test
add
nop
sub
mov
or
pop
dec
pop
in
scas
mov
add
lock
(bad)
or
dec
or
push
in
dec
push
call
rcr
mov
movs
push
fsubr
pop
ja
int3
(bad)
call
and
xor
outs
xlat
sti
cmp
sahf
aas
push
inc
pop
add
das
aaa
cmp
and
popf
jb
movs
jg
aaa
mov
ja
and
pop
xor
jmp
call
mov
pop
push
xlat
xor
imul
sbb
fwait
mov
sbb
cli
lods
sub
cld
repnz
ss
cmp
or
inc
xor
mov
xor
sub
or
cwde
mov
pop
retf
out
(bad)
(bad)
dec
mov
and
dec
loop
adc
lods
popa
xlat
xor
rcr
dec
lahf
ret
stc
pop
inc
fstp
cmp
out
mov
mov
sbb
(bad)
popa
call
cmps
mov
or
mov
sar
push
out
mov
cmp
mov
adc
daa
fs
icebp
or
jle
fdiv
loope
fdivr
xchg
push
dec
inc
lahf
cmp
call
mov
outs
outs
and
add
add
add
mov
xchg
sub
cmp
or
jbe
(bad)
rol
into
lock
dec
and
rcr
mov
lods
mov
test
mov
xchg
repnz
add
or
mov
cdq
jl
jae
adc
(bad)
mov
jl
jb
popa
movs
mov
nop
ja
mov
inc
in
jecxz
popa
xchg
into
outs
inc
mov
mov
(bad)
retf
push
popa
rol
sub
les
and
mov
and
jne
dec
xor
out
pop
and
xchg
mov
ins
sar
pop
mov
icebp
mov
mov
mov
pushf
(bad)
aaa
rcl
inc
sahf
fwait
daa
xchg
jg
add
(bad)
mov
ret
mov
stos
jmp
int
test
or
and
aam
adc
add
xchg
lds
inc
ins
mov
add
push
push
fild
stos
push
test
mov
mov
scas
lahf
ins
inc
add
sbb
xchg
mov
out
inc
fstp
rol
lock
scas
aam
mov
retf
shr
push
xchg
adc
sub
pop
adc
(bad)
fimul
shl
jmp
sbb
pop
xchg
mov
aad
outs
sub
and
das
imul
push
pop
push
add
lahf
test
jge
xor
inc
pop
adc
cmp
mov
push
cld
outs
clc
sti
mov
sbb
gs
pop
sub
fs
cmp
cmc
cmps
dec
lds
adc
lods
jbe
enter
dec
out
fs
push
stos
adc
ins
imul
mov
jp
mov
jne
mov
pop
scas
jno
mov
xchg
xor
loop
loopne
out
or
aam
cmp
aad
test
xchg
and
pushf
(bad)
pop
jge
into
out
movs
loope
fsubr
cwde
cmp
aas
cdq
xor
retf
xchg
fnstsw
jmp
sub
push
sub
sub
rcl
and
dec
pop
inc
ficomp
sub
sbb
call
and
dec
inc
clc
xchg
mov
hlt
loopne
fcom
sub
add
shr
rcr
or
mov
scas
adc
addr16
cmp
cmp
or
mov
mov
pop
mov
sub
push
daa
mul
or
js
in
xor
gs
dec
jno
xchg
fild
add
xchg
mov
sub
push
xchg
mov
out
inc
or
popa
jg
xchg
and
mov
mov
mov
adc
adc
mov
pushf
jne
fsqrt
in
mov
xchg
or
push
pushf
xlat
in
cmp
cmp
mov
inc
in
adc
sub
sub
iret
(bad)
mov
xchg
cmp
xchg
sub
inc
mov
int3
xor
mov
or
test
add
in
mov
es
jle
arpl
in
push
shl
in
popa
scas
jns
test
sub
sbb
in
mov
bound
shl
les
jno
std
pop
mov
retf
std
(bad)
inc
std
mov
mov
push
inc
in
jl
cmps
mov
(bad)
sub
add
mov
adc
cwde
imul
mov
cli
aaa
gs
(bad)
jge
or
lahf
sub
ins
jbe
scas
or
aad
add
lods
mov
lds
retf
ins
mov
xor
retf
mov
add
dec
inc
cmp
inc
cmp
inc
and
pop
cmps
ret
sbb
dec
cmp
mov
dec
push
rcr
or
mov
mov
pop
push
lock
push
mov
fwait
shr
in
mov
mov
aas
jg
pusha
in
jo
add
lahf
mov
std
xor
fcomp
inc
xchg
cmps
icebp
dec
(bad)
sar
outs
sti
leave
fiadd
push
sti
pop
fcomi
arpl
ret
push
mov
in
ret
push
mov
into
movs
in
punpcklwd
es
cmp
pop
loop
adc
into
clc
inc
inc
xchg
jge
inc
or
push
push
and
test
ins
movs
loopne
sub
add
jl
xor
das
sti
mov
lds
add
xor
xlat
inc
fidiv
jnp
gs
repz
ins
inc
mov
(bad)
movs
sahf
pushf
(bad)
out
jb
mov
dec
add
xchg
fild
jl
pop
mov
iret
inc
dec
daa
adc
fcom
test
mov
mov
inc
popf
call
fwait
in
pop
pop
xor
sub
jmp
(bad)
in
fist
ret
or
cmp
dec
retf
fsub
or
xchg
dec
push
popf
mov
or
cli
scas
add
shl
sub
imul
mov
push
das
cs
mov
xchg
das
inc
stos
or
icebp
cmp
stos
sbb
sub
loop
nop
inc
repz
cli
lods
xchg
pop
jge
jne
and
xor
cmp
or
xchg
out
sub
push
(bad)
xor
jl
iret
movs
jl
pop
sub
and
ss
(bad)
xchg
retf
in
adc
pushf
mov
sub
jecxz
ret
mov
mul
das
rol
pop
mov
in
add
add
fst
pushf
pop
pop
add
cmp
jl
sbb
js
cmp
jmp
std
jle
int3
xchg
jl
dec
adc
mov
jl
xchg
mov
push
jnp
jnp
xor
imul
bound
xchg
(bad)
les
pop
je
push
loope
add
pop
xor
outs
cmp
jno
les
and
test
and
popa
lea
mov
pop
inc
ret
int3
pop
mov
test
je
cmps
stc
mov
call
jmp
or
outs
lock
and
jge
and
fst
dec
(bad)
iret
daa
sub
xchg
add
out
dec
push
xor
shl
(bad)
sub
jnp
push
mov
mov
add
jmp
dec
iret
out
xchg
lods
popf
push
hlt
add
mov
scas
push
mov
ins
les
lahf
daa
cli
push
repz
mov
xor
gs
ins
clc
out
inc
mov
and
inc
pop
mov
psrld
aam
outs
xchg
adc
fimul
dec
das
sub
inc
pop
leave
xor
(bad)
push
frstor
test
stos
dec
test
mov
mov
xchg
xlat
ds
inc
cld
leave
add
jmp
add
loop
mov
rcr
xchg
jnp
lods
cmp
fwait
lahf
and
loope
dec
push
(bad)
jmp
fiadd
retf
cwde
xchg
lods
push
and
cwde
sub
sar
add
movs
mov
shr
xchg
cmp
mov
rol
mov
inc
dec
scas
test
mov
sub
dec
ins
mov
in
and
call
dec
mov
test
mov
outs
(bad)
jecxz
jle
cmp
repnz
cld
jno
aam
aam
pop
cdq
push
dec
(bad)
fadd
call
sar
dec
xchg
call
ror
ins
ja
sbb
cmp
mov
int
xor
jmp
pop
jmp
add
xchg
fs
pop
pop
fwait
and
push
or
xor
outs
inc
nop
sbb
cmps
clc
ror
xor
(bad)
in
lods
sub
cdq
mov
sub
dec
sub
push
ds
inc
cmp
dec
pop
jmp
add
lds
pop
rcl
push
fidiv
dec
xor
ss
retf
mov
(bad)
push
mov
loop
sub
cmps
jecxz
cmps
(bad)
mov
and
push
mov
or
xor
sbb
addr16
mov
lahf
imul
scas
(bad)
sub
adc
push
rol
sub
nop
push
cmp
pop
je
add
cli
rcr
ds
ss
jbe
or
pop
in
sbb
inc
jmp
call
scas
mov
pop
out
adc
jp
out
adc
icebp
retf
aam
xchg
mov
xchg
cwde
inc
mov
dec
in
add
cmp
sbb
fwait
inc
jnp
fidivr
dec
add
adc
stos
cwde
pusha
lods
xor
cmp
pop
push
(bad)
xchg
mov
dec
xor
dec
jmp
xor
xchg
or
sub
daa
mov
xchg
icebp
mov
inc
call
data16
jp
sti
ret
xor
loopne
cld
in
jne
(bad)
repz
movs
jne
push
cmp
cmp
jg
int
mov
or
mov
cmp
out
cld
add
sbb
jno
pop
ins
clc
out
addr16
cmc
(bad)
out
scas
cmp
out
inc
xchg
je
stos
or
xchg
mov
movs
sub
mov
jmp
mov
mov
test
in
jle
pop
cmp
xchg
xchg
mov
mov
imul
and
mov
fsubr
cmps
retf
test
call
pop
pop
lods
dec
stos
pop
xchg
mov
lea
shl
sbb
fld
lahf
loopne
push
push
xor
mov
out
adc
push
jle
sar
test
jp
scas
in
scas
jae
retf
js
cmc
jno
js
jo
pop
and
push
dec
inc
mov
adc
and
int3
add
nop
jno
mov
jns
sbb
mov
jo
inc
(bad)
xor
or
inc
or
lahf
fsubr
mov
pop
sub
fldenv
mov
mov
call
jne
cmp
xchg
mov
das
(bad)
shl
dec
cmp
mov
push
add
push
jl
shl
outs
dec
xor
mov
loop
mov
push
out
(bad)
in
mov
test
pop
lods
arpl
mov
js
xor
jmp
pop
sub
sbb
mov
dec
xchg
push
or
fsubr
adc
jmp
jp
dec
add
xor
mov
lock
(bad)
(bad)
push
ror
adc
mov
cdq
mov
mov
xchg
movs
pop
push
add
and
jg
movs
pop
imul
cli
xchg
add
pop
hlt
hlt
and
dec
not
pop
dec
test
dec
and
push
dec
les
push
call
mov
icebp
daa
or
js
mov
inc
pop
mov
data16
aaa
sahf
sbb
xchg
(bad)
lahf
es
pop
cs
or
repz
inc
mov
xor
arpl
into
jb
cmp
or
cmp
lea
adc
cvtdq2ps
jl
cli
bound
adc
pop
fcomp
movs
sbb
jmp
mov
aaa
or
inc
imul
jno
sahf
push
mov
mov
and
test
jl
mov
fidiv
mov
sbb
ror
ds
scas
cwde
add
out
jo
pop
mov
lea
sub
(bad)
shrd
ins
sti
jb
jmp
ror
jne
in
xchg
stos
sar
fs
sub
adc
imul
pop
cmc
call
mov
movs
scas
add
fisub
cmc
ds
sbb
imul
jl
(bad)
mov
stos
loope
mov
push
xchg
add
push
xchg
jl
pop
call
inc
(bad)
push
gs
xor
fld
mov
dec
je
cld
sub
pusha
mov
es
lahf
arpl
jge
cmp
adc
inc
jo
in
xchg
scas
jns
ins
gs
adc
imul
mov
pop
lods
hlt
je
test
pop
mov
xchg
cmps
shl
nop
pusha
dec
xchg
out
sbb
daa
cmp
mov
jle
mov
arpl
(bad)
ja
jno
pop
push
cld
sub
sub
jge
mul
dec
popf
pop
pop
adc
push
mul
jne
leave
mov
retf
cmps
cmp
jne
lds
outs
scas
jmp
je
loope
xchg
fsubr
imul
jns
fs
adc
pop
or
xor
imul
cli
sbb
test
outs
sbb
test
jp
pop
pushf
and
in
das
pop
pop
push
(bad)
dec
test
popa
test
xor
and
loop
stos
add
daa
popa
dec
fisttp
enter
fisub
jae
repz
jle
stos
pop
(bad)
mov
mov
push
mov
xor
xor
sbb
out
ja
arpl
xchg
int
jno
das
cmp
adc
retf
in
mov
xchg
lahf
ins
lods
and
clc
xor
jg
es
loop
outs
inc
or
xor
imul
fcom
sub
mov
pop
dec
enter
and
mov
arpl
(bad)
out
mov
jae
mov
push
push
jnp
out
and
(bad)
mov
add
outs
mov
pop
outs
(bad)
jg
pop
iret
ins
add
movs
xor
dec
in
into
jl
jle
test
mov
sub
dec
stos
out
sub
lds
test
mov
sahf
push
sti
js
test
push
js
push
sub
mov
inc
(bad)
xlat
push
(bad)
and
je
jnp
dec
shl
js
dec
sub
dec
out
xchg
daa
es
test
xchg
ss
add
adc
out
mov
sub
push
std
hlt
and
sahf
pop
into
leave
add
add
pop
push
jno
clc
ss
in
cli
jge
aas
or
test
xchg
mov
sub
movs
mov
and
cmps
mov
popf
std
repnz
inc
push
es
scas
imul
cmp
fisttp
adc
cmp
xchg
add
out
pop
in
in
dec
sbb
add
retf
sub
xor
fstp
imul
js
fiadd
je
leave
outs
inc
mov
sbb
cmp
pop
out
pop
call
push
jno
sahf
mov
dec
xchg
fcom
lea
cli
test
adc
push
inc
adc
sub
xchg
mov
push
fldcw
inc
or
ds
popf
cmp
mov
pushf
fstp
scas
adc
push
std
ja
inc
and
cmc
and
jmp
lds
call
outs
mov
stos
dec
pop
call
stc
mov
fcomp
adc
les
mov
jbe
popa
dec
dec
loopne
sbb
add
popa
sub
pop
mov
inc
and
fucomi
or
sbb
sbb
mov
xor
mov
inc
xor
(bad)
sbb
push
add
mov
xchg
test
outs
sbb
push
out
outs
push
fisttp
(bad)
sub
out
inc
repnz
push
sub
jae
lahf
outs
in
xchg
out
das
sub
jecxz
xor
push
xchg
mov
lock
xor
mov
lahf
push
rcr
outs
dec
inc
jo
inc
or
push
ins
adc
cmp
xor
mov
mov
sbb
pop
mov
mov
add
imul
jg
mov
adc
inc
xchg
sbb
nop
int
in
shr
adc
push
fild
ret
leave
and
dec
xor
rcr
ins
cmp
lock
push
mov
mov
pop
dec
es
(bad)
outs
and
and
inc
or
(bad)
mov
out
adc
(bad)
dec
pushf
push
xchg
shr
out
sbb
or
scas
or
inc
mov
inc
cmp
movs
cmc
lock
arpl
fwait
retf
test
fs
mov
out
(bad)
dec
dec
adc
mov
jmp
stos
lds
outs
ret
sbb
sub
int
push
sbb
std
in
les
hlt
sub
std
mov
inc
inc
pop
fisub
jae
push
dec
ins
fsubr
int
add
scas
call
pop
and
and
stos
push
mov
test
push
sub
stos
pop
sub
or
ja
mov
adc
cmp
mov
lahf
mov
fwait
xchg
inc
dec
repz
mov
add
call
(bad)
mov
movs
in
jp
outs
das
lods
rcl
xchg
cmc
xchg
adc
rcr
xchg
push
adc
push
das
hlt
inc
jae
fadd
ins
scas
push
cli
test
icebp
imul
mov
(bad)
cmp
je
outs
jnp
xor
mov
inc
mov
cmps
mov
sbb
adc
jae
push
scas
repz
call
aam
mov
(bad)
mov
data16
call
add
xor
jge
sbb
add
call
movs
jle
xchg
loop
aas
lds
lods
adc
gs
mov
das
mov
jb
cmp
test
fisub
sub
clc
ja
dec
cli
(bad)
je
movs
aam
or
mov
pop
adc
and
pop
mov
dec
ret
ja
ja
dec
pop
adc
and
jg
mov
cld
and
shl
cld
fmul
jne
mov
sbb
mov
jmp
not
call
xor
pop
cmp
mul
arpl
addr16
inc
jb
sahf
push
lods
ret
adc
lods
imul
inc
ss
push
(bad)
adc
test
imul
mov
mov
sbb
push
icebp
inc
ficom
mov
(bad)
cs
xlat
jmp
popa
clc
(bad)
je
dec
push
or
jmp
push
jae
xlat
out
or
stc
pusha
cs
xor
xlat
jge
cwde
dec
int3
fist
sub
fld
aam
and
popf
call
test
mov
in
fdiv
or
sub
(bad)
xchg
jbe
gs
mov
sbb
push
test
jno
mov
mov
xchg
out
jns
push
add
lock
int3
fmul
call
push
jge
inc
lea
or
loop
arpl
aad
pop
mov
sub
cmp
add
call
rcr
and
or
stc
dec
xchg
jmp
sbb
or
rcl
adc
add
arpl
int
inc
pop
jge
cwde
test
int
inc
ror
xor
aaa
sub
jecxz
in
jb
into
mov
lds
mov
mov
or
(bad)
or
dec
arpl
cmp
or
cld
arpl
push
add
hlt
cmp
xchg
inc
adc
psubusw
loopne
dec
mov
je
mov
mov
test
popf
repnz
test
shl
fstp
xor
shr
mov
mov
ror
sti
out
add
inc
aas
pop
xchg
fimul
dec
pop
xor
xor
jg
call
mov
mov
in
jae
add
movs
int
verr
xchg
adc
or
sbb
jmp
adc
loope
xor
and
xor
mov
pop
jecxz
mov
shr
dec
cmp
jns
dec
frstor
call
push
adc
fs
and
bound
dec
and
out
leave
test
iret
outs
sub
mov
push
out
cmp
in
adc
cmp
dec
int
das
xchg
retf
jne
mov
fs
sar
push
mov
leave
or
adc
jmp
ins
cmp
gs
sbb
leave
aad
inc
outs
jmp
inc
sub
fcomp
jnp
dec
pop
dec
jecxz
call
in
fs
pop
push
add
popa
lods
rcl
add
imul
inc
lahf
shr
dec
inc
cmp
jae
scas
xor
adc
pop
inc
push
js
push
(bad)
mov
hlt
call
cmp
ret
adc
sub
mov
push
xor
pop
ins
cli
sbb
loopne
push
out
dec
mov
pop
inc
xchg
xor
cmp
pusha
push
movs
loope
and
dec
sub
fist
add
push
dec
mov
std
shl
jl
loopne
repnz
xor
pop
inc
cmp
and
jle
test
push
push
test
mov
cmc
pop
sbb
jo
adc
mov
sbb
adc
pushf
adc
xchg
lahf
mov
fcomi
punpcklbw
(bad)
mov
lds
fst
fwait
sub
pop
adc
jl
push
inc
or
cli
push
scas
mov
les
jp
dec
pop
push
adc
aaa
xor
jl
shr
or
into
into
aad
ror
or
mov
jmp
movs
std
das
in
stc
and
inc
or
sti
lock
pop
cmp
dec
dec
outs
in
adc
jns
adc
mov
cmp
cdq
cmp
and
mov
loope
mov
pop
mov
(bad)
clc
jne
call
dec
stos
xor
scas
(bad)
(bad)
jl
(bad)
jecxz
lock
fchs
in
int
mov
sbb
mov
aaa
and
push
out
xchg
jae
mov
xchg
sub
push
lods
and
(bad)
pop
adc
or
cmp
inc
jnp
sti
or
es
inc
outs
push
mov
jmp
nop
pop
sub
inc
add
shl
cmps
popa
cs
sub
sbb
sub
jno
inc
fild
inc
(bad)
out
fistp
sti
xor
call
call
xchg
pop
dec
movs
or
outs
out
inc
and
cmps
xor
sub
dec
inc
bound
test
jl
in
xor
jl
push
dec
test
call
sbb
push
addr16
in
pop
adc
arpl
and
fld
xor
pushw
sahf
and
addr16
repz
dec
cmc
stos
mov
push
lea
xchg
add
xor
lea
add
mov
mul
jge
js
mov
cmp
xchg
ins
sbb
sbb
sar
add
inc
icebp
add
adc
or
jl
push
mov
xchg
ins
inc
dec
retf
shl
(bad)
or
add
xor
push
neg
and
mov
xor
into
movs
jmp
mov
rcl
lea
lds
dec
call
outs
mov
ficom
mov
push
pop
mov
add
outs
sub
aaa
nop
push
push
shl
in
leave
popf
fs
stos
mov
pusha
add
(bad)
cli
retf
pusha
push
ins
scas
sahf
pop
movs
push
test
retf
(bad)
nop
jnp
inc
ds
jmp
out
inc
fidiv
fld
fs
cmp
test
pop
jle
add
aaa
sub
push
loopne
mov
xchg
leave
enter
or
cmp
dec
dec
mov
lods
je
jecxz
push
xor
mov
mov
or
push
jno
pop
jmp
(bad)
lds
jge
mov
(bad)
call
pop
das
inc
in
stos
inc
inc
push
jbe
mov
fldenv
sub
xchg
jmp
(bad)
cmp
bnd
mov
xlat
dec
mov
ss
out
adc
xor
sbb
fistp
ins
aad
fnstenv
xchg
(bad)
push
mov
push
jnp
arpl
and
push
jne
pop
jge
stos
imul
mov
icebp
daa
and
and
jp
or
imul
retf
sub
dec
fnstcw
fnstsw
scas
xchg
sub
push
ja
cmp
and
jp
inc
cmp
addps
or
inc
jne
jmp
dec
adc
adc
pushf
fsub
mov
clc
shl
mov
or
ds
jecxz
ficomp
xor
into
retf
inc
aad
dec
test
movs
pop
push
xchg
push
xchg
lahf
shl
cmp
push
mov
cs
lods
icebp
out
cmc
sub
iret
dec
pop
call
pop
inc
ds
shl
jo
fwait
mov
mov
dec
fwait
test
mov
xchg
dec
cmc
repz
fs
and
fiadd
call
dec
cwde
xchg
add
push
loop
ins
mov
movs
pop
outs
add
push
stos
or
jns
leave
cmps
jmp
dec
retf
mov
mov
in
xchg
les
mov
jg
test
mov
jb
push
fidiv
lea
pop
test
scas
hlt
xor
mov
call
mov
xchg
enter
fwait
loopne
pop
pop
mov
div
pushf
fcmovbe
mov
fnstsw
xor
in
mov
xchg
stc
imul
inc
dec
std
scas
mov
dec
inc
fidivr
call
dec
or
adc
in
xchg
xchg
xor
jmp
jmp
cmp
lds
xchg
out
test
or
rol
pusha
test
jae
addr16
test
popf
mov
and
test
jnp
xor
jns
es
xchg
movs
add
into
inc
mov
cwde
or
or
outs
jbe
call
(bad)
lods
jno
fwait
mov
push
push
mov
dec
sbb
inc
imul
pop
js
jmp
cmp
mov
pop
fs
fst
adc
loope
ins
push
push
mov
pop
dec
xchg
pop
ins
dec
inc
xlat
lock
mov
fdiv
push
loopne
sub
pop
dec
imul
fisubr
sub
or
push
shr
pmuludq
cmc
lahf
and
in
inc
fld
into
jno
mov
pop
jns
sahf
pop
mov
inc
hlt
xchg
into
push
cmp
or
imul
sbb
adc
mov
mov
ret
sahf
aas
ins
call
sub
dec
xor
push
jo
fisubr
or
jmp
mov
mov
mov
dec
dec
enter
(bad)
and
imul
(bad)
js
pop
sbb
adc
pop
addr16
stos
scas
mov
push
iret
mov
test
pop
mov
nop
mov
mov
shl
mov
push
mov
in
call
int
int3
or
or
inc
enter
xor
int
and
xchg
gs
nop
fild
shl
xchg
or
retf
repnz
mov
aaa
not
mov
jo
jb
in
mov
jge
inc
pusha
push
imul
test
in
sub
int
push
pop
fisttp
mov
jns
into
sub
sbb
leave
push
mov
test
cdq
push
adc
rol
loopne
ins
pop
sahf
mov
(bad)
and
fwait
push
or
xchg
(bad)
in
jae
push
loope
sti
mov
add
push
(bad)
xlat
and
inc
jbe
mov
(bad)
push
ficomp
sbb
mov
jg
inc
push
push
xor
aam
jns
mov
xor
add
ins
test
aam
inc
push
pop
out
jno
or
bound
adc
cmp
xchg
scas
inc
mov
mov
bnd
mov
jp
lods
mov
sti
inc
xchg
addr16
xchg
lds
(bad)
fild
es
mov
popf
mov
js
or
cs
fs
xor
pop
popa
jnp
repnz
mov
fdiv
mov
leave
cwde
and
sub
ficom
pushf
xor
or
sahf
dec
or
in
inc
ja
test
jns
mov
ud1
sub
xchg
mov
mov
cs
sbb
in
call
stos
sbb
add
cwde
and
cli
scas
aas
xor
mov
jmp
push
cs
add
cs
mov
bound
xor
mov
pushf
inc
lahf
dec
dec
mov
ss
pop
inc
sub
push
rol
mov
sub
cwde
in
and
sbb
cmp
mov
popf
jmp
and
jg
inc
dec
inc
dec
and
jae
add
gs
xchg
cmp
jge
les
jmp
inc
nop
pop
xchg
jae
mov
popa
dec
mov
inc
in
movs
js
imul
(bad)
daa
cmps
mov
jne
popa
jmp
and
jo
ja
pusha
mov
cmp
push
xchg
mov
xchg
push
pop
mov
gs
inc
dec
(bad)
repz
adc
pop
(bad)
jo
scas
lods
mov
dec
mov
test
xor
sub
inc
add
push
mov
xlat
popa
push
and
xchg
adc
out
pop
dec
mov
pop
or
xchg
aam
fstp
imul
retf
xchg
xchg
pop
dec
push
jecxz
pusha
(bad)
pop
lock
in
rcl
push
mov
dec
adc
mov
sub
dec
je
push
movs
fisttp
loopne
sahf
ret
push
jns
jns
aaa
push
data16
dec
lea
xchg
int3
mov
push
sub
repz
(bad)
jmp
jno
sub
pop
xchg
push
pop
dec
retf
daa
xchg
aad
sub
pop
scas
add
mov
sbb
sbb
mov
pushf
and
stc
or
pop
out
pop
pop
add
sbb
fst
repz
pop
jo
outs
es
xchg
es
dec
add
or
test
loopne
jle
adc
and
shr
jmp
fwait
cmp
(bad)
out
xchg
fdivr
or
mov
push
mov
pop
xor
mov
inc
scas
cmc
xor
repz
jno
mov
retf
pop
ret
adc
xchg
sub
scas
cs
shr
repnz
jnp
popf
push
inc
enter
repz
(bad)
das
inc
push
popf
leave
or
fs
mov
retf
fstp
imul
ret
out
cmp
daa
xor
sbb
add
data16
cmps
inc
cmp
mov
lahf
mov
pop
bound
dec
push
mov
aad
cdq
dec
push
cmps
mov
addr16
rcl
cdq
mov
int3
push
je
daa
cmp
out
movs
sub
xchg
(bad)
cwde
cmp
dec
outs
jecxz
cmc
and
(bad)
mov
xchg
imul
adc
xor
in
ss
and
xchg
xor
cmc
cmp
scas
loop
adc
(bad)
int
sub
or
add
jl
mov
fnstsw
dec
or
mov
pop
scas
xchg
test
xchg
push
cld
pop
push
mov
(bad)
int3
xlat
mov
ret
xlat
ret
push
loopne
mov
add
ficomp
jmp
mov
push
push
scas
dec
jge
cmp
cmps
movs
xor
das
jle
(bad)
xchg
pop
leave
or
lods
stc
xchg
out
jb
ds
push
(bad)
arpl
adc
les
and
shl
inc
(bad)
and
fdiv
push
pusha
adc
add
xchg
pop
or
pop
scas
out
cmp
pop
cmps
mov
pop
push
inc
loop
adc
stos
ficom
jae
mov
pop
dec
xchg
jle
mov
das
out
(bad)
mov
iret
mov
aas
int
stos
mov
mov
fstp
cmps
mov
add
out
push
dec
mov
rcl
lea
sub
cmp
cmpxchg
dec
stos
mov
dec
sbb
js
movs
cmps
dec
cmps
adc
repz
adc
mov
jno
lock
loope
or
or
in
scas
loopne
add
xor
test
pop
jnp
(bad)
sbb
loope
or
aam
les
xlat
es
jp
imul
into
std
cmc
or
test
jbe
icebp
pop
int3
or
sbb
test
inc
cs
jnp
nop
(bad)
pop
inc
(bad)
and
adc
push
or
inc
sbb
or
push
jbe
ins
mov
jmp
jl
scas
fidivr
mov
repnz
(bad)
out
or
inc
je
rol
mov
mov
push
and
jne
pop
out
fistp
add
xor
fidiv
adc
stos
inc
add
fiadd
dec
popa
cmps
pop
sbb
and
gs
dec
popf
psllw
daa
mov
je
jle
mov
mov
sbb
sbb
arpl
scas
push
leave
sub
outs
in
lds
cwde
jo
inc
cmp
and
dec
lods
stos
xor
mov
push
dec
(bad)
jge
nop
mov
push
pop
in
test
mov
ins
push
or
jno
push
mov
fnstsw
loop
push
inc
and
sar
xchg
(bad)
fdiv
out
inc
inc
xor
sub
aas
cli
stc
xchg
sahf
cdq
std
ja
call
jge
retf
jle
or
icebp
nop
(bad)
daa
mov
call
ror
add
arpl
mov
mov
pop
fsub
shl
adc
mov
lahf
pop
jb
jmp
xchg
jbe
xchg
(bad)
rcr
ins
dec
xor
loop
push
or
cwde
mov
pop
adc
pop
in
mov
adc
inc
cmp
xchg
bound
push
or
addr16
ds
imul
rcl
jecxz
pusha
or
ret
and
pop
adc
bound
push
aam
cmp
mov
jl
xchg
shl
jbe
ret
add
adc
cmp
xchg
sub
xchg
sar
cmps
add
inc
pushf
inc
shl
out
jns
adc
add
sub
fcomi
cmps
xchg
stos
inc
outs
xor
loop
icebp
popa
fcmovnb
pop
jno
or
scas
adc
movs
clc
adc
fisttp
fist
inc
mov
test
sbb
adc
mov
cmp
retf
mov
fwait
sar
and
outs
mov
daa
cwde
dec
lods
mov
dec
sbb
push
mov
and
cmc
dec
pop
pushf
mov
mov
push
xor
push
push
sbb
push
pshufw
pop
lahf
pop
or
retf
or
cmp
mov
push
push
scas
aam
cs
idiv
ja
jae
cmc
(bad)
and
(bad)
dec
rcr
adc
push
arpl
push
bound
cdq
sbb
xor
test
std
adc
mov
retf
xchg
(bad)
imul
dec
and
push
jp
aaa
cmp
sbb
lds
push
and
fsub
and
repnz
jne
ret
lods
mov
(bad)
sbb
mov
jg
mov
cmp
jg
push
pop
jo
sbb
xor
xchg
rcl
adc
shl
and
imul
test
push
dec
int
mov
add
pop
mov
push
enter
mov
jb
mov
out
xor
jbe
pop
jg
sbb
lea
fimul
daa
sub
popa
cld
std
and
sbb
push
mov
clc
mov
add
mov
fidivr
cli
(bad)
jmp
cmp
pushf
xor
pop
mov
pushf
or
cmp
out
sub
jb
mul
jns
mov
ret
shl
mov
dec
imul
(bad)
hlt
pop
imul
add
sbb
mov
out
cmp
aaa
into
out
pushf
jg
dec
add
out
add
in
xor
in
test
sub
frstor
pop
xchg
retf
inc
cli
mov
mov
daa
lock
and
jmp
nop
add
daa
(bad)
cmc
cmps
adc
push
and
cmp
sbb
in
inc
push
fistp
sbb
mov
cmp
pop
mov
les
ins
pushf
mov
cmp
pop
int3
xchg
xchg
mov
sar
cmp
retf
not
jg
mov
not
(bad)
mov
das
ss
sbb
inc
pop
fwait
adc
pop
retf
mov
inc
into
popf
call
nop
cmps
pop
adc
sub
sahf
jo
inc
xchg
mov
or
mov
pop
sub
repz
ins
sar
xchg
fsub
jecxz
dec
arpl
ret
fs
inc
mov
ror
push
and
out
scas
mov
cwde
cs
cld
sbb
mov
cmp
pushf
rcr
inc
and
mov
icebp
iret
sub
push
inc
leave
loopne
xchg
repnz
inc
pop
jns
addr16
leave
xchg
inc
jmp
jno
sbb
aaa
stos
sti
mov
xor
fucom
adc
push
loope
int
clc
cmp
test
xchg
in
mov
jecxz
mov
fidiv
das
(bad)
jecxz
stc
fidivr
jnp
dec
push
call
lea
dec
jg
xchg
mov
sub
idiv
repnz
push
shl
out
shl
(bad)
test
sbb
push
adc
xchg
or
mov
cmp
shr
jb
neg
push
jo
or
or
lds
push
cmp
daa
test
mov
add
cli
fs
movs
jg
sub
jle
es
mov
push
shl
outs
cmp
cmp
cwde
lods
or
jns
dec
pushf
adc
popaw
mov
jg
imul
lock
sbb
cmp
xor
dec
imul
shr
fwait
mov
jle
out
rcl
mov
mov
jp
pop
mov
xor
xchg
popa
adc
mov
sub
hlt
inc
mov
or
sti
je
(bad)
xlat
xor
lahf
data16
lods
mov
ds
ret
hlt
lods
call
xor
out
je
mov
push
test
or
sub
shr
daa
add
jp
push
push
dec
bnd
and
lock
lods
leave
push
popa
repnz
out
jnp
mov
push
add
les
jmp
cwde
cdq
std
mov
jns
cmp
mov
cli
not
(bad)
outs
fwait
jbe
stc
mov
jmp
loopne
test
inc
jnp
mov
adc
pop
daa
les
(bad)
stc
xor
es
and
or
call
add
js
retf
push
or
jno
fstp
jne
cmp
inc
aaa
sub
iret
xor
adc
clc
ror
ja
in
loope
mov
xor
dec
xor
mov
push
ss
scas
sbb
xor
sar
and
les
dec
mov
mov
enter
sti
das
sub
cmp
jmp
into
push
out
adc
fild
add
aaa
data16
sbb
sbb
ffreep
int
lock
cli
mov
jge
pop
mov
sub
jl
lods
push
sub
mov
in
dec
pop
xchg
cmp
aaa
jne
out
(bad)
out
mov
adc
aas
(bad)
repnz
push
out
xor
cs
and
mov
mul
mov
enter
cmp
cmp
sub
push
pop
cld
mov
inc
dec
mov
js
jmp
repnz
sub
ficom
pop
xlat
call
push
or
fst
pop
pop
mov
pop
aas
scas
pop
adc
add
addr16
cmps
mov
ja
nop
cmps
adc
adc
iret
mov
cdq
mov
cmc
mov
out
mov
div
xlat
push
jmp
loope
out
aaa
repnz
fldcw
(bad)
adc
sti
cmp
pop
ins
imul
popa
lods
test
inc
icebp
(bad)
mov
outs
shl
push
mov
xor
add
pop
pop
ret
test
in
xor
sahf
lock
dec
cmp
mov
cdq
mov
inc
cmp
pushf
pop
mov
adc
sbb
and
jo
sahf
add
pusha
ss
loop
sub
push
xor
cmp
nop
mov
icebp
adc
aam
mov
xor
mul
pushw
dec
jl
sbb
fidiv
es
dec
mov
xchg
(bad)
cs
bound
sbb
push
jb
jbe
jne
fstp
in
pop
mov
inc
loopne
scas
dec
mov
sbb
push
lds
fdivr
(bad)
cmp
jo
mov
imul
mov
aas
cmp
push
retf
and
lods
inc
mov
sbb
xchg
sti
aam
mov
inc
out
ss
xchg
sbb
add
les
dec
add
inc
and
push
pop
add
ffree
loopne
cli
shr
sub
fst
xor
retf
sbb
and
add
inc
les
jae
xchg
and
cmp
jmp
adc
add
gs
pop
inc
cmc
add
xor
dec
fidiv
mov
xor
xchg
push
sub
clc
mov
int
test
sbb
cli
stos
xchg
pop
lods
sahf
push
sub
mov
stc
loop
fild
clc
fmul
in
push
mov
lahf
xlat
movs
call
out
mov
or
test
jge
out
or
test
jge
cmp
cmps
retf
stos
dec
adc
xchg
fiadd
stc
scas
add
ret
(bad)
push
inc
dec
mov
mov
aad
in
(bad)
out
inc
mov
xor
pop
leave
aad
sub
daa
jle
mov
retf
xchg
outs
jge
mov
and
add
mov
sbb
nop
lds
dec
push
pop
mov
cli
stos
xor
mov
pop
mov
mov
test
out
rol
and
and
inc
lods
pop
add
sbb
popf
imul
mov
test
inc
mov
es
retf
mov
adc
dec
sbb
retf
call
pop
or
and
fsub
aad
dec
(bad)
cmp
xchg
add
inc
and
xchg
bound
sar
stos
push
aam
in
sub
(bad)
push
xor
xchg
repnz
(bad)
lds
pop
jnp
push
push
sar
in
test
push
ret
lds
mov
rcl
mov
lds
aad
aas
lea
lods
out
stos
mov
out
and
and
repnz
sbb
push
daa
sub
xor
bound
add
xchg
outs
int3
push
add
sti
scas
shr
mov
das
mov
shl
mov
mov
sbb
xor
jb
mov
ds
xor
call
jb
pusha
mul
add
int
aas
pop
jecxz
dec
test
ins
js
or
std
in
xchg
fwait
mov
fcmovne
sub
push
xor
sub
dec
in
push
icebp
dec
loopne
(bad)
dec
jbe
out
or
dec
pop
xchg
ror
mov
imul
or
cwde
add
(bad)
fbstp
mov
push
jecxz
es
and
mov
add
inc
fimul
xchg
dec
lods
and
mov
scas
in
and
mov
aaa
jle
scas
ins
sti
mov
dec
scas
outs
daa
mov
cmps
cmps
lods
xlat
je
or
or
clc
jl
sub
lahf
dec
inc
push
jle
push
mov
sar
lds
pusha
js
loope
pop
cmp
shl
jne
bound
ins
cli
test
xor
outs
stos
push
in
xchg
add
push
inc
xor
mov
into
pop
cmps
out
(bad)
fidiv
leave
xor
jp
cmp
mov
iret
pop
retf
sub
dec
js
jmp
xor
into
ss
cs
dec
enter
mov
adc
pop
jp
retf
pop
sub
xor
pop
retf
xchg
xchg
dec
pop
jae
jb
leave
popa
xchg
sti
dec
inc
arpl
shl
xor
ja
fld
or
mov
add
ficomp
das
or
shr
dec
or
ror
ret
jl
mov
ds
(bad)
mov
sbb
cmps
das
gs
arpl
lock
push
loope
loope
int
cs
cmp
push
pop
and
mov
movs
jb
jle
jl
and
inc
in
sahf
(bad)
mov
xor
out
test
ins
mov
cmp
imul
enter
loop
sub
adc
adc
pop
addr16
(bad)
jmp
mov
scas
dec
sbb
out
fsubr
push
mov
sub
adc
pusha
aam
(bad)
in
push
nop
fnstcw
imul
xor
gs
sbb
jge
je
loopne
test
daa
pop
popa
sti
sar
jecxz
mov
test
mov
add
xor
mov
(bad)
test
retf
mov
shl
mov
and
ins
add
(bad)
push
mov
mov
mov
xchg
sub
mov
cli
add
mov
lods
jo
sub
(bad)
adc
cdq
mul
mov
mov
inc
neg
test
pop
iret
mov
cmp
add
push
cmp
mov
fs
sbb
mov
mov
fs
ret
sbb
loopne
inc
ret
(bad)
ins
sub
mov
add
mov
cs
clc
(bad)
dec
psrld
fidivr
mov
jge
inc
out
and
inc
xlat
pop
iret
mov
(bad)
jle
push
test
sar
jle
jo
or
pop
pusha
mov
xchg
xlat
lahf
test
inc
sub
push
mov
loop
adc
jg
xor
aas
xlat
lds
pusha
sahf
jmp
mov
pop
daa
push
sub
push
nop
adc
cmp
lahf
repnz
xchg
push
sbb
addr16
push
jne
cmc
(bad)
outs
gs
push
adc
fld
je
div
call
xchg
push
xor
jmp
mov
js
sub
rcl
pop
stos
mov
jg
mov
pop
int
and
pop
fidiv
mov
mov
mov
mov
or
sub
div
aad
mov
not
fstp
sbb
add
out
jne
dec
inc
imul
sbb
(bad)
cmp
mov
fldcw
mov
push
shl
add
dec
call
cmps
xchg
xor
xchg
popa
call
or
arpl
fisubr
inc
inc
in
push
leave
out
cmp
adc
call
sbb
(bad)
fadd
xor
out
or
adc
pop
ror
mov
xlat
sbb
and
mov
loopne
fs
shl
mov
xor
pop
mov
mov
pop
hlt
(bad)
sbb
sti
imul
cmc
sub
mov
inc
push
xchg
mov
cs
inc
pop
js
in
sbb
push
(bad)
or
into
mov
clc
nop
fxch
retf
outs
mov
je
pop
repnz
inc
fdiv
xchg
mov
xor
inc
sub
dec
mov
inc
idiv
jecxz
call
adc
scas
push
mov
jl
je
push
adc
or
bound
cmp
mov
sub
call
add
stc
cli
test
dec
movs
jae
jae
dec
out
dec
pop
push
mov
scas
jl
mov
cmp
jns
into
jg
dec
gs
aam
es
pushf
add
sub
frstor
sub
fnsave
jge
call
or
stos
mov
adc
adc
repz
mov
test
adc
mov
and
adc
xor
addr16
pop
js
and
xor
inc
jb
popf
sar
xchg
mov
aaa
sbb
push
outs
and
shl
daa
scas
sahf
jmp
push
ror
arpl
jae
mov
shr
inc
adc
xchg
jns
in
outs
clc
inc
fsub
add
mov
mov
sbb
(bad)
mov
ret
or
outs
jae
cmp
nop
sub
ins
push
sahf
outs
ret
mov
std
add
jae
ja
xor
ja
fld
mov
neg
out
cli
xlat
test
ror
ins
clc
add
and
shl
pop
imul
jmp
dec
icebp
test
movs
pop
test
out
adc
and
sbb
mov
jo
mov
sub
jbe
pushf
mov
sub
xchg
xor
jl
hlt
in
sbb
mov
test
fwait
mov
stos
jmp
and
cmp
sub
sub
test
sub
pop
inc
test
div
imul
jne
sahf
stc
and
and
(bad)
mov
jge
pusha
das
sub
ins
dec
sbb
pusha
cvtpi2ps
lea
mov
push
push
pop
and
out
dec
mov
mov
psrlw
ds
adc
bound
es
in
cs
pop
packssdw
fldenv
mov
in
shl
sbb
jp
xor
xor
ret
imul
push
mov
xchg
dec
int3
push
in
in
call
cmps
or
pop
adc
cmp
outs
sbb
call
xor
daa
cmp
loop
adc
imul
in
retf
into
fcom
(bad)
pop
push
jle
call
das
mov
ins
stos
retf
aam
push
shl
call
fsubr
and
test
stos
jb
mov
ret
mov
inc
out
fistp
inc
jbe
xchg
repnz
sbb
dec
pop
loope
ret
bound
cmp
pop
and
les
cmp
push
sti
lgs
loope
dec
sbb
pop
mov
sahf
lahf
and
xchg
cld
jle
push
pop
mov
cmp
(bad)
and
jnp
movs
jl
mov
jmp
or
movs
ret
ficom
adc
dec
push
sub
jbe
cmps
test
inc
adc
(bad)
mov
int3
nop
adc
adc
jmp
cmp
push
dec
jae
icebp
cmp
test
and
xor
(bad)
mov
rcr
enter
out
retf
out
ror
lahf
bound
add
jnp
xchg
dec
cmp
jb
ins
lods
or
cmp
retf
adc
ds
mov
jge
and
lock
mov
sbb
cmc
in
xchg
and
dec
in
fistp
inc
pop
neg
and
les
xchg
aam
bound
sub
imul
add
(bad)
cdq
(bad)
fsub
cmc
mov
scas
daa
mov
or
dec
call
mov
cmp
mov
sti
xor
call
scas
cdq
inc
out
sbb
sub
les
mov
xlat
cli
add
adc
inc
mov
lock
pop
(bad)
sbb
daa
cdq
pusha
sbb
stos
push
dec
dec
fucomi
outs
in
cmp
sti
outs
jnp
push
mov
gs
sbb
jbe
mov
dec
mov
mov
ss
(bad)
rol
cmp
(bad)
sub
xchg
jae
sbb
fisub
arpl
cmp
cmp
ins
xor
sbb
add
add
xchg
jl
mov
pop
and
stos
inc
adc
push
dec
push
xor
dec
jne
mov
push
mov
mov
xor
inc
push
pusha
fs
shl
sti
pop
push
push
pusha
ins
fcomp
and
xchg
dec
jo
jns
jo
fcompp
repnz
and
cmp
xor
pop
inc
out
mov
shl
loopne
repz
xor
hlt
outs
loopne
jge
ret
lahf
sahf
cmp
retf
mov
xor
sub
dec
mov
mov
in
adc
fs
mov
mov
fdivr
rol
jns
jb
fstp
mov
imul
push
xor
ins
scas
and
div
in
pop
clc
pop
shr
xor
jmp
mov
in
xchg
leave
movs
adc
(bad)
xchg
call
addr16
adc
inc
push
push
mov
xlat
div
fcomp
sbb
inc
sbb
or
aad
(bad)
cli
repz
pop
aas
lahf
sub
dec
push
xchg
xchg
cmp
mov
mov
xchg
and
sti
dec
call
adc
xchg
xchg
sbb
pusha
pop
(bad)
or
jmp
inc
movs
jno
ins
lahf
or
scas
push
cs
pusha
int
sbb
pop
out
sub
out
sbb
cwde
cmp
out
xchg
imul
(bad)
pop
(bad)
xchg
repz
fucomip
daa
push
jmp
bnd
adc
sub
mov
fsubp
push
xor
mov
out
mov
xor
cmps
mov
jp
stc
pop
inc
jno
ds
lods
std
scas
adc
test
xor
cdq
rcl
outs
neg
(bad)
or
(bad)
push
jo
xchg
popf
aaa
int
retf
aad
push
adc
mov
into
xchg
add
invd
sti
inc
push
mov
jmp
js
out
cmps
loope
mov
inc
adc
jbe
mov
test
(bad)
mov
pop
out
jmp
mov
fmul
lea
pop
mov
mov
call
adc
lahf
xlat
ficom
(bad)
mov
mov
xchg
sub
popf
adc
xchg
stos
(bad)
(bad)
mov
mov
push
mov
xor
add
push
xchg
adc
mov
pop
add
addr16
dec
rol
xchg
fsubr
mov
mov
dec
adc
adc
(bad)
adc
jecxz
sbb
dec
call
cmps
shl
mov
sar
cmp
rcl
jb
mov
dec
xchg
xor
dec
lods
sbb
jb
clc
push
jne
adc
jbe
and
ja
sub
mov
push
test
mov
mov
pop
jo
adc
out
inc
ins
addr16
mul
xchg
sbb
and
scas
sub
and
(bad)
sar
pusha
into
cwde
xchg
push
das
mov
adc
aas
mov
in
(bad)
mov
pusha
mov
inc
scas
xor
dec
addr16
push
dec
cmp
xchg
or
fdiv
xor
or
loop
and
lahf
dec
pop
mov
lods
popf
jmp
aad
or
scas
cmp
or
es
popa
xchg
pushf
test
inc
sbb
jb
jnp
out
pop
test
mov
loope
mov
js
sub
inc
icebp
ins
cmp
dec
add
int
call
mov
add
dec
fnstcw
sbb
outs
fcom
neg
repnz
cmp
or
sbb
cmp
shl
jp
adc
je
call
pop
pop
call
int3
int3
js
pusha
lahf
imul
lods
out
sub
aad
out
pop
sub
mov
push
cmp
jmp
pushf
sbb
aam
push
movs
sahf
or
push
mov
mov
stos
cs
cmps
inc
xchg
js
mul
jb
pop
mov
vpavgw
pmaxsw
cmp
mov
xor
adc
fstp
pusha
cmc
ds
popa
(bad)
mov
pushf
cmp
in
ror
dec
loop
pop
ror
mov
movs
sar
sbb
xor
fwait
shl
data16
sub
scas
int
sub
sbb
xor
into
push
lahf
xchg
and
add
mov
les
xor
inc
jns
out
push
and
xchg
ins
pop
rol
cmp
out
fidiv
adc
(bad)
jp
repz
lock
cs
inc
stos
out
mov
jns
cwde
stc
outs
mov
mov
mov
ss
je
mov
mov
ret
pop
int
std
cmp
adc
xchg
cwde
adc
and
push
push
cld
sbb
xor
sub
mov
xchg
inc
(bad)
push
sbb
jnp
out
out
adc
mov
add
sub
outs
xor
add
or
pop
push
movs
bound
jae
int
addr16
push
adc
into
adc
and
icebp
cli
imul
test
cmps
cdq
and
test
sbb
lds
push
or
and
es
stos
xor
mov
push
adc
jbe
not
dec
js
sub
jo
inc
nop
mov
shl
sbb
and
xor
xchg
jo
fwait
jge
xor
pop
(bad)
fdivr
and
mov
adc
pop
dec
lods
aas
inc
mov
adc
daa
aaa
dec
dec
dec
movs
push
mov
add
jo
dec
mov
dec
push
ds
push
jp
xchg
cmc
nop
dec
cmp
or
and
mov
ret
pop
int3
stos
(bad)
fdiv
jge
jno
jne
jmp
xchg
repnz
adc
mov
jns
xor
push
leave
aas
jnp
stos
mul
call
xor
xchg
cmp
inc
jecxz
pop
jo
pop
xor
iret
and
mov
fcmovnbe
(bad)
les
and
arpl
pop
jbe
in
std
mov
jns
bnd
xor
cmc
loope
(bad)
(bad)
cmp
xchg
stos
jge
sub
je
les
gs
int
cli
sbb
lea
lock
sub
addr16
ds
dec
cmp
arpl
jo
ret
test
popa
inc
push
sbb
les
pop
lds
jo
addr16
sahf
add
push
lods
nop
xchg
jae
into
add
mov
mov
fild
or
pop
mov
dec
out
mov
and
int
dec
sub
and
mov
inc
dec
fisub
jecxz
lock
shl
cmc
push
iret
mov
mov
call
call
pushf
fld
scas
jno
pop
jae
shl
aad
dec
dec
fdivrp
mov
or
fist
(bad)
jecxz
xchg
daa
pop
ret
ss
in
adc
sub
mov
test
mov
inc
add
xor
call
jecxz
arpl
cs
leave
mov
or
jmp
mov
pop
add
push
leave
fs
inc
lea
out
fldlg2
inc
add
rol
dec
jmp
cli
or
ret
leave
test
iret
bound
cmp
loope
mov
mov
mov
add
call
bound
mov
or
mov
jl
cmp
imul
clc
or
dec
aad
fistp
cdq
dec
pxor
out
dec
clc
repnz
call
sub
push
jg
(bad)
push
jae
dec
inc
push
dec
int3
mov
retf
(bad)
dec
and
cmp
mov
pop
push
fisttp
imul
pop
(bad)
mov
sti
ins
push
aad
sub
or
jecxz
js
in
cld
outs
xor
push
xor
pop
mov
jmp
push
and
rcl
push
add
into
add
inc
and
jnp
mov
mov
mov
push
inc
aaa
fistp
fninit
mov
hlt
arpl
sbb
into
ficom
mov
test
test
outs
shl
inc
jg
arpl
jo
jae
ror
imul
adc
adc
dec
push
movnti
inc
rol
and
add
xor
mov
mov
retf
test
sti
jge
pop
pop
ss
xchg
xchg
push
aad
mov
add
iret
div
ss
clc
movs
loope
repnz
lds
dec
adc
xchg
mov
or
outs
loopne
aas
adc
pop
and
out
fwait
popf
sahf
js
sbb
outs
out
test
xchg
ss
jg
mov
mov
dec
push
in
in
and
inc
lahf
lea
cmove
pop
mov
cmp
dec
or
lods
repnz
lea
push
dec
cwde
mov
mov
mov
xor
push
pop
pop
aaa
dec
or
adc
dec
dec
rcl
xchg
enter
hlt
(bad)
cmp
cmp
dec
ins
xor
mov
(bad)
or
mov
cmc
fild
cli
xor
push
es
call
cwde
movs
and
ss
out
sahf
pushf
loopne
iret
arpl
leave
loopne
xor
addr16
cmp
hlt
inc
inc
sub
pop
lods
push
dec
inc
dec
ins
xchg
bound
outs
sbb
sbb
shl
aam
push
ja
add
icebp
or
push
cmp
loopne
mov
fwait
leave
sub
mov
jne
mov
out
nop
sub
cdq
xor
inc
mov
adc
popf
imul
dec
xchg
or
pop
adc
imul
sub
aad
inc
jno
mov
push
outs
hlt
mov
inc
xor
pop
cli
stos
aas
lods
hlt
push
sub
pop
adc
rol
jl
cli
mov
adc
jns
int
pop
cmp
sbb
fwait
push
fild
fs
(bad)
inc
and
and
sahf
stos
inc
jne
push
adc
pop
mov
jns
mov
test
aaa
xchg
adc
dec
push
out
aam
aaa
test
mov
das
not
xlat
mov
push
push
imul
popf
pop
sbb
and
mov
in
push
popa
mov
xlat
inc
sub
mov
mov
gs
jl
int
test
lods
scas
dec
(bad)
jp
xchg
jb
push
stos
lock
inc
clc
nop
inc
scas
movs
xor
repz
and
push
inc
and
and
rcl
cmps
fs
movs
dec
bound
(bad)
xor
jne
retf
push
sti
xor
adc
mov
or
iret
push
jno
sbb
aas
jns
je
and
adc
(bad)
cmc
inc
shl
pushf
mov
xchg
cmps
push
inc
shl
xchg
inc
pushf
mov
or
or
or
adc
pop
loop
mov
mov
iret
ss
out
dec
and
outs
nop
imul
leave
gs
in
xchg
dec
jne
clc
sbb
popa
jmp
lods
add
cld
sub
cmp
call
mov
ss
xor
in
jecxz
sbb
or
adc
sub
retf
call
addr16
movs
pushf
adc
(bad)
mov
mov
mov
pop
pusha
push
xchg
jle
jbe
dec
sbb
cwde
popf
cld
retf
xor
jle
lods
xchg
out
jno
call
inc
retf
cmp
sub
jmp
icebp
push
gs
dec
mov
mov
(bad)
xor
or
arpl
fadd
inc
mov
mov
jns
jle
xchg
shr
cmps
pushf
or
das
ror
nop
in
into
shl
dec
test
stos
xchg
cli
sbb
pusha
repz
inc
movs
xchg
jne
std
mov
gs
jecxz
inc
out
sti
mov
inc
mov
jle
retf
cmp
mov
cmps
sbb
and
jecxz
into
inc
push
test
pop
and
add
leave
and
cs
or
push
sbb
adc
add
icebp
ins
fcomp
call
xor
icebp
xchg
pop
add
pop
call
bound
jecxz
shr
xchg
jp
cwde
xchg
cmp
dec
cmp
je
jne
fwait
and
lahf
mov
out
icebp
jb
mov
inc
jns
mov
js
cwde
mov
push
or
call
xor
inc
cmp
clc
or
outs
mov
jg
fbld
in
add
jbe
stos
es
lods
push
adc
cdq
ss
ficomp
mov
pop
pop
lods
imul
daa
aaa
out
fidivr
and
popa
leave
lea
and
add
xchg
(bad)
jnp
inc
shr
retf
cmp
ins
xor
icebp
out
xchg
and
inc
mov
cmps
hlt
(bad)
cmc
adc
jmp
out
(bad)
iret
xchg
jmp
xchg
inc
add
rol
or
aad
push
push
je
mov
xor
(bad)
repnz
dec
xchg
repnz
adc
dec
cmp
int3
in
push
xchg
(bad)
dec
rcr
lea
cmp
jp
out
(bad)
or
(bad)
sub
push
mov
add
jne
or
sub
jnp
cmp
mov
lds
jg
inc
in
add
xchg
in
jmp
arpl
push
push
pop
mov
retf
jne
pop
jle
fisttp
mov
out
imul
bound
jmp
or
dec
or
mov
ret
xchg
test
and
iret
push
popf
add
push
sahf
in
popf
adc
and
push
mov
mov
retf
popf
jmp
mov
xchg
ss
call
xchg
fnstsw
int3
aaa
adc
ja
or
aad
mov
retf
jb
sbb
imul
sub
das
jmp
gs
add
pop
in
push
ins
mov
add
cmp
cs
fiadd
mov
sbb
cmp
sub
fs
push
mov
lock
or
out
rcr
adc
pop
call
adc
cld
loope
in
mov
add
test
dec
pop
jle
les
sub
fadd
inc
outs
dec
adc
mov
jns
repnz
and
and
mov
mov
pop
in
nop
or
leave
sub
xchg
push
xchg
or
push
div
fistp
pop
mov
inc
aam
loope
repz
test
test
or
inc
rcr
xor
cld
add
retf
push
xchg
adc
dec
ins
cwde
adc
out
push
mov
xor
dec
sub
add
pop
iret
imul
inc
and
lods
fcomp
and
call
cdq
cmp
mov
out
int3
push
lahf
or
push
ins
jp
dec
xchg
adc
hlt
push
lock
xchg
int
idiv
cld
cmc
outs
push
jne
loopne
and
mov
(bad)
fistp
div
jl
mov
cs
pop
inc
retf
outs
and
les
out
fwait
pop
xchg
test
mul
inc
fiadd
mov
out
ss
mov
retf
pop
jecxz
pushf
retf
jmp
in
push
dec
in
mov
seta
jae
shr
and
dec
cli
dec
xor
aas
xchg
mov
imul
adc
ja
mov
dec
lahf
and
lahf
enter
je
mov
sbb
imul
jge
mov
sbb
cs
pop
jo
ret
pusha
loopne
xchg
out
sub
xchg
xor
pop
mov
pop
rdmsr
popa
call
push
push
dec
in
lods
push
mov
or
mov
jl
push
imul
call
jns
dec
inc
movs
lea
xchg
jmp
jb
popa
mov
leave
aam
mov
xchg
popa
hlt
gs
xchg
adc
mov
mov
xchg
test
jo
adc
xchg
sub
dec
pop
xchg
dec
ror
mov
imul
and
mov
cmps
es
push
and
aas
test
outs
nop
stos
sub
push
mov
shl
clc
and
sahf
dec
jbe
int3
scas
xor
sub
jno
jl
cmp
xchg
and
dec
push
repz
jae
lea
hlt
or
mov
std
mov
imul
mov
inc
xlat
test
mov
je
inc
outs
adc
int3
jnp
mov
pop
inc
sahf
push
mov
add
stos
mov
(bad)
out
ret
gs
lahf
adc
imul
cmp
pop
mov
(bad)
xchg
pusha
push
js
stos
add
jno
movs
retf
loopne
sti
outs
addr16
xor
movs
adc
test
xchg
stos
xlat
ja
add
push
imul
mov
ds
mov
inc
dec
retf
add
add
adc
int
sbb
inc
jg
adc
mov
inc
jnp
mov
push
mov
jmp
aam
dec
ret
xchg
leave
pop
retf
outs
int
jbe
fdiv
or
sbb
or
pusha
mov
xor
outs
jnp
or
int3
adc
lea
push
in
outs
mov
sub
xchg
retf
and
xchg
test
add
mov
sbb
pop
je
jbe
dec
cmp
jnp
jb
ror
xor
stc
out
pop
shl
inc
mov
adc
xchg
push
and
mov
ror
sub
(bad)
js
push
add
xchg
sbb
call
scas
mov
sub
int3
mov
pop
adc
adc
imul
mov
mov
lahf
std
ja
jge
dec
mov
loop
(bad)
fadd
lahf
cmc
or
inc
push
xchg
xor
pushf
adc
frstor
ss
push
je
mov
jno
cmp
test
popf
pop
leave
mov
cmps
stc
in
rcr
cli
jge
lea
je
fcom
jno
pop
inc
aas
or
das
mov
adc
clc
test
cmps
popa
lea
mov
dec
push
call
imul
ins
into
in
mov
imul
adc
push
stos
jge
and
pop
pop
cmc
cmps
xchg
fst
cs
mov
iret
jge
movs
ss
push
popa
mov
jmp
adc
sbb
cmps
test
iret
pop
pop
cmp
mov
mov
mov
cdq
ficomp
xor
fmul
pop
test
mov
inc
and
fdivp
sub
mov
dec
lahf
xchg
dec
lea
add
popf
pusha
xor
aad
and
dec
leave
cli
and
sub
(bad)
popa
test
mov
inc
fst
push
fucom
inc
jl
dec
mov
inc
in
push
retf
dec
pop
movs
xor
add
repnz
xor
mov
mov
pop
jge
stos
mov
jne
xor
mov
xchg
jle
mov
outs
push
js
lea
in
ins
xchg
leave
fld
test
inc
push
sbb
add
cwde
jb
pmaxub
rcl
bound
pop
xor
dec
hlt
bound
movs
jmp
rcl
jge
ret
popa
and
lahf
enter
jmp
pop
stos
jl
add
in
xchg
jne
mov
mov
xlat
or
sub
sub
loop
retf
and
dec
lahf
inc
sub
or
es
shl
lds
in
cmp
sub
gs
and
pop
mov
out
aaa
addr16
test
add
div
(bad)
mov
xchg
fucom
js
add
push
test
pusha
sbb
cmc
into
clc
cdq
icebp
mov
pop
gs
loop
adc
inc
push
mov
dec
addr16
xor
or
push
push
sub
(bad)
inc
das
inc
sahf
mov
(bad)
xor
push
mov
rcl
arpl
sti
aad
push
mov
lahf
int3
mov
sbb
sbb
inc
push
ins
nop
dec
push
(bad)
mov
test
test
cwde
or
inc
das
mov
in
adc
ficomp
xlat
adc
or
inc
or
shl
test
push
test
xchg
fidivr
add
jl
lea
sbb
fs
lock
push
jmp
sub
outs
push
sub
or
std
xor
push
jl
clc
(bad)
(bad)
imul
lahf
dec
and
push
cmp
sbb
lahf
scas
xchg
pop
or
mov
sbb
push
cmc
xchg
xor
cmc
out
mov
adc
jb
push
retf
pop
add
stos
inc
inc
rol
test
adc
or
lds
or
push
adc
fcmovnb
outs
(bad)
mov
dec
sbb
aas
cmp
rol
dec
(bad)
push
pop
es
cwde
not
and
rol
leave
pop
xor
lea
sbb
ins
cmp
std
pop
lahf
adc
in
add
pop
jmp
loope
popf
out
xchg
std
xor
stc
sbb
dec
and
sbb
or
jmp
xor
adc
sbb
rol
jmp
push
sub
loope
inc
sub
jl
outs
xchg
out
fnstcw
mov
jge
test
js
inc
push
inc
push
jbe
cld
push
hlt
pop
sub
call
popf
mov
aaa
call
xchg
in
dec
jne
in
push
movs
jnp
lods
out
int3
ret
sbb
dec
jmp
cmps
(bad)
outs
pop
lods
inc
scas
jno
movs
loope
ja
(bad)
clc
fwait
cdq
fist
(bad)
sti
ins
sbb
imul
add
push
push
pop
push
jmp
ds
pop
push
rcr
xchg
pop
pop
shl
add
loope
stos
mov
mov
mul
pop
jp
jo
push
pop
imul
and
loopne
xor
ror
mov
mov
xchg
out
jp
xchg
rcl
xor
and
cmp
xchg
xchg
cdq
and
loop
push
(bad)
or
and
ror
out
call
add
or
scas
fdiv
addr16
ret
and
push
rcl
sub
and
cmp
adc
mov
ficom
or
push
dec
jmp
rol
loope
sti
dec
ss
stc
pop
sub
std
cmps
pop
call
push
cli
jo
out
bndldx
out
push
sub
call
mov
jmp
mov
push
and
addr16
sub
imul
gs
call
push
fistp
sub
shl
sub
aas
lods
imul
add
(bad)
dec
je
ret
xchg
das
add
repnz
jnp
loope
and
test
(bad)
inc
dec
cmps
dec
icebp
cmp
add
sub
loopne
cwde
pop
inc
imul
or
xchg
cs
pop
sub
mov
stos
sub
mov
psllw
mov
mov
(bad)
jl
in
pop
fsubr
mov
outs
test
sub
cmp
pushf
ds
aas
test
iret
je
sbb
mov
mov
dec
aaa
push
out
pop
cmp
cmps
data16
push
xor
mov
addr16
(bad)
(bad)
cmps
arpl
pop
xchg
adc
scas
rcl
cli
lahf
push
inc
inc
int3
cmp
fcom
cwde
ins
(bad)
inc
and
push
outs
jge
out
jbe
ficom
leave
out
xor
mov
cmp
dec
loope
mov
aaa
or
mov
xchg
hlt
xchg
icebp
mov
sahf
repnz
jl
xor
test
mov
repz
call
dec
push
add
sbb
push
stos
sub
shl
push
inc
pop
sbb
je
pop
ins
loopne
nop
fist
dec
les
movs
pop
pop
jne
and
xor
push
sbb
fdivr
sbb
clc
or
jae
add
dec
sti
mov
je
ja
xchg
mov
shl
inc
leave
aaa
xchg
add
(bad)
nop
fild
xchg
mov
add
push
dec
cli
ret
inc
push
add
ret
pop
ret
jnp
cld
push
pusha
lods
xchg
in
xor
fs
call
pshufw
xchg
lods
popf
dec
xchg
into
jne
lea
stc
xchg
mov
(bad)
test
adc
or
dec
cmp
pop
ja
xor
idiv
adc
xchg
add
adc
jo
sbb
ret
mov
xor
movs
js
adc
mov
call
dec
test
(bad)
imul
inc
in
pushf
in
jne
inc
(bad)
movs
loope
lock
lock
cmp
inc
aas
xchg
mov
push
xchg
cmp
cdq
mov
jge
dec
mov
test
mov
test
cmp
inc
imul
out
push
push
sub
adc
(bad)
sub
add
and
std
push
or
loope
fadd
xor
into
push
push
push
xor
inc
jp
shr
inc
in
xlat
cmps
mov
xlat
or
shr
dec
inc
int3
mov
and
les
imul
cmp
mov
test
fist
test
add
cdq
mov
cmps
and
dec
sar
test
ins
jno
adc
adc
mov
loope
les
fimul
lock
xchg
sbb
ds
adc
inc
mov
out
in
retf
call
mov
mov
fist
xchg
sub
mov
jecxz
push
push
mov
mov
fidiv
in
pushf
std
aaa
mov
(bad)
mov
sub
retf
ficom
loopne
jae
shl
cld
lods
push
pop
mov
inc
xor
push
mov
mov
adc
lods
shr
scas
mov
inc
inc
jns
(bad)
jge
(bad)
mov
mov
dec
mov
mov
(bad)
mov
dec
dec
scas
cmps
out
sbb
mov
repnz
outs
mov
ficom
mov
xchg
xor
xor
or
ins
inc
test
jb
mov
pop
ss
popa
retf
or
push
xor
call
fwait
jns
jmp
loopne
jmp
push
mov
cwde
mov
outs
inc
pushf
iret
sbb
cld
jle
add
and
lods
or
es
dec
jg
push
mov
cmp
xlat
mov
push
cdq
pop
addr16
sbb
inc
jne
or
stc
cmp
xchg
jae
ret
jle
xor
popf
sub
mov
in
and
xor
mov
xlat
sub
into
aad
jns
sbb
xchg
call
ss
pop
add
sub
jmp
push
push
adc
add
xchg
aaa
outs
into
test
cmp
retf
aaa
inc
dec
mov
ret
add
push
jne
rcr
pop
push
mov
fnstenv
test
cmc
jmp
addr16
and
outs
add
push
pop
and
cmc
xor
xor
xchg
xor
nop
in
dec
and
sub
xchg
test
pushw
jg
les
outs
jns
jo
fdivr
jmp
pop
mov
loopne
fisttp
das
push
sbb
push
test
jle
xchg
jp
sub
cwde
fiadd
lss
xor
jne
(bad)
ja
pusha
movs
mov
push
or
lock
pandn
inc
adc
test
cmp
mov
dec
dec
jl
mov
inc
imul
sti
dec
repnz
sub
mov
aad
jmp
push
add
repnz
jmp
xchg
dec
out
loope
pop
jecxz
inc
sbb
outs
xor
add
in
mov
(bad)
pop
cmp
xchg
repz
aad
bound
cmp
hlt
out
data16
mov
scas
jo
mov
or
pop
inc
mov
mov
dec
add
mov
ins
sbb
jge
sbb
adc
pop
cmp
hlt
movs
pop
mov
in
push
ins
daa
ins
sbb
daa
mov
inc
fimul
xor
sub
fwait
clc
lds
retf
xchg
jp
jne
ins
xor
xchg
pop
aas
dec
or
push
fmul
aaa
pusha
inc
or
fimul
sub
call
pop
les
test
adc
jbe
cwde
mov
loop
loop
lods
shl
aas
std
jns
sahf
outs
mov
fidivr
sub
pop
popa
in
repz
or
or
cwde
mov
pop
push
add
xor
mul
adc
jle
xchg
sub
mov
push
sbb
and
sbb
push
cmp
loope
add
test
jnp
mov
retf
jns
add
add
fmul
adc
shl
inc
push
inc
fpatan
add
ffree
int
jne
movs
inc
popf
cvtps2pi
jns
xor
pop
jb
popa
(bad)
movs
mul
scas
xchg
xchg
enter
sub
mov
jl
push
retf
or
cld
or
pop
loop
jecxz
out
pop
push
aaa
adc
enter
xchg
mov
scas
sbb
hlt
mov
sti
and
add
cmps
arpl
lock
mov
pop
and
sub
jae
xchg
enter
mov
jge
lahf
sbb
stc
stos
arpl
sbb
inc
or
faddp
scas
inc
cwde
push
loop
mov
pop
inc
test
xchg
popf
or
cmp
jmp
in
or
add
jmp
xor
mov
xchg
es
or
shl
xor
adc
inc
sbb
sub
inc
cmp
sub
xor
jb
cmp
pop
(bad)
in
ret
cdq
xlat
or
jns
mov
lods
cwde
mov
mov
call
mov
inc
fstp
lahf
out
test
jl
xchg
xor
call
jmp
bound
in
or
xor
fldcw
xor
mov
lock
(bad)
or
jnp
xor
into
das
outs
cwde
add
icebp
rep
cmps
into
stos
or
ror
push
jmp
jbe
ficom
sbb
sbb
dec
push
xchg
cmp
mov
imul
jo
int
fcmovb
popa
repz
out
sbb
inc
fmul
ja
adc
call
pop
mov
fidiv
out
int
or
dec
sbb
inc
sbb
test
ret
fld
pop
aaa
dec
fadd
mov
and
fidivr
out
aam
out
jge
aad
push
shl
adc
xchg
cmp
push
loop
mov
outs
jns
xchg
jl
nop
cmp
mov
call
xchg
jge
push
cmps
sub
outs
aas
out
dec
fidivr
adc
ror
push
pop
retf
leave
icebp
adc
mov
es
div
add
mov
int
stc
jmp
mul
cdq
repnz
lahf
jbe
mov
mul
les
and
in
mov
ja
(bad)
ficomp
outs
mov
mov
jmp
jg
and
jo
imul
repnz
(bad)
push
enter
lahf
mov
jnp
std
daa
and
dec
jge
and
loopne
ds
sbb
xchg
imul
fiadd
ja
and
xchg
ret
movs
shl
iret
in
xor
jns
jo
xchg
retf
cmps
(bad)
repnz
scas
in
pop
cmc
jecxz
in
(bad)
xchg
and
scas
jne
leave
scas
shr
fidiv
popa
lods
mov
ins
ss
push
call
ins
adc
inc
sahf
nop
and
(bad)
(bad)
pop
push
or
loop
mov
cdq
sbb
xchg
sti
int
add
(bad)
ss
push
mov
adc
push
xchg
jno
das
jo
lock
mov
push
out
test
clc
mov
add
or
sub
int3
or
sub
mov
xlat
outs
fst
out
les
push
pop
and
and
mov
call
mov
(bad)
out
mov
in
and
in
into
mov
and
scas
loope
shl
cmp
pop
aam
int3
mov
mov
jmp
cmp
cmc
or
push
jnp
arpl
aas
dec
mov
xlat
retf
xchg
fwait
sbb
and
mov
and
idiv
inc
jp
jb
jecxz
(bad)
je
in
fwait
test
cmp
retf
add
int3
sub
mov
jne
adc
dec
dec
push
cwde
jmp
pop
mov
cdq
outs
stos
cmps
push
push
pop
mov
mov
(bad)
add
mov
jno
pop
test
sbb
dec
cmps
jbe
add
inc
sbb
pusha
add
xor
(bad)
shr
jo
and
stos
pmaxsw
jmp
pop
mov
out
and
ret
aam
mov
and
in
scas
daa
imul
dec
leave
out
jno
jb
inc
xor
mov
stc
aam
adc
or
adc
jb
pusha
stos
jo
xor
add
mov
ret
push
sbb
outs
jo
mov
inc
dec
sub
sbb
push
test
iret
or
sbb
cld
sub
adc
loopne
xchg
test
mov
shl
jg
cld
sub
jo
aam
imul
cmp
outs
jmp
into
scas
mov
mov
(bad)
fisubr
pop
lods
adc
test
adc
inc
dec
mov
cmp
and
jnp
sbb
in
adc
jl
fistp
push
repnz
push
psadbw
cdq
push
or
bound
out
inc
xor
lods
mov
out
jmp
mov
mov
push
xchg
scas
add
sbb
sub
int3
adc
sub
ret
sti
mov
sub
fchs
inc
mov
imul
mov
stc
neg
call
and
mov
xor
(bad)
pop
or
fadd
mov
loope
mov
cli
jl
sub
jg
mov
jo
stos
rol
test
mov
mul
pop
or
imul
je
xor
mov
ins
cmp
push
ret
or
int3
in
mov
lahf
es
ss
jmp
pop
call
push
inc
mov
mov
and
stc
or
cmp
jmp
xchg
out
cmps
int3
inc
xor
stc
cli
adc
xchg
dec
fdiv
cwde
cs
and
push
mov
jp
mov
push
ret
mov
rol
test
dec
(bad)
movs
dec
imul
call
ins
jmp
push
mov
push
lods
lods
repnz
mov
cdq
push
sar
movs
jg
scas
std
pop
xchg
(bad)
xchg
pushf
or
out
repz
mov
mov
pop
movs
sub
outs
push
cmc
pusha
cmp
xor
push
adc
mov
lahf
retf
mov
push
or
mov
cmc
mov
push
test
mov
push
inc
adc
outs
popf
add
ficomp
std
dec
ja
stc
iret
jne
mov
push
jne
gs
jnp
dec
mov
imul
sub
jmp
cmp
and
sbb
in
shl
fsubr
mov
(bad)
or
and
in
pop
addr16
js
jns
and
sub
inc
mov
sbb
push
fisttp
or
inc
out
jmp
test
sbb
pop
test
mov
mov
sub
jo
jmp
mov
xchg
retf
pop
jle
push
mov
shl
popa
cmps
sbb
and
(bad)
imul
mov
ja
jge
push
lods
inc
adc
(bad)
pop
or
push
outs
mul
add
push
dec
in
xchg
add
mov
jnp
add
pop
mov
sbb
fist
mov
xor
inc
ins
clc
push
popa
xor
push
std
es
jl
out
adc
inc
das
in
and
mov
pop
fs
iret
push
jne
icebp
scas
es
jp
dec
xchg
pushf
adc
dec
(bad)
in
pop
push
add
fiadd
push
dec
sti
jmp
movs
xchg
test
aam
sub
mov
clc
call
iret
(bad)
sub
jmp
mov
leave
daa
sbb
inc
xor
sub
fsub
pop
(bad)
sub
movs
inc
xchg
and
pop
and
js
sbb
clc
(bad)
lea
dec
mov
pop
test
cld
bound
dec
out
jb
(bad)
adc
inc
and
sbb
cs
icebp
sub
jecxz
out
or
jecxz
aad
dec
call
in
in
scas
and
jecxz
inc
arpl
mov
mov
ds
xchg
mov
sti
js
rol
xor
cs
add
loopne
mov
push
cmps
and
inc
and
or
dec
xor
ds
mov
dec
cwde
fiadd
sub
shr
aad
in
cmp
shr
fs
retf
xor
test
sbb
sub
(bad)
or
pop
cmp
jae
in
(bad)
cld
ja
jge
icebp
push
cli
popf
add
xchg
and
sbb
imul
loopne
and
pop
repz
ins
dec
jg
scas
pop
(bad)
daa
or
add
arpl
inc
call
jmp
fs
popa
ret
out
and
retf
push
test
adc
div
mov
sbb
inc
add
shl
dec
inc
inc
call
xor
lahf
out
sub
xchg
jb
xor
cmp
outs
mov
daa
add
js
out
test
jbe
xor
jmp
mov
std
mov
rol
cs
add
clc
push
lds
push
mov
int3
int3
pop
pop
lock
int
das
in
retf
adc
int3
push
pop
loop
ins
dec
sub
lahf
push
mov
mov
add
jge
mov
shl
mov
es
jp
push
das
sbb
stos
aaa
xor
add
aam
cdq
lock
mov
cmp
add
test
xchg
and
dec
in
mov
sub
clc
or
jno
fstp
loop
add
dec
sti
inc
or
xchg
int3
mov
add
test
mov
sbb
ins
dec
nop
cmp
and
jns
fiadd
dec
sti
mov
popf
pop
sahf
push
sahf
scas
cmp
mov
mov
pop
(bad)
(bad)
xor
cmp
rsqrtps
inc
xor
test
cmps
cwde
not
and
sbb
mov
leave
adc
lods
or
retf
aad
pop
mov
xor
(bad)
mov
sub
push
loopne
int3
lods
push
loope
pop
and
adc
cwde
or
movs
jb
jge
stc
jle
loop
aam
movs
in
sbb
and
xchg
push
sbb
aad
push
mov
or
or
xchg
rol
xor
mov
sub
adc
call
mov
push
jg
sbb
sbb
retf
mov
jnp
stos
cdq
das
out
aas
cmps
or
adc
jp
add
or
or
dec
rol
retf
sub
enter
pop
or
push
and
push
gs
adc
addr16
mov
cmp
add
add
in
test
iret
jecxz
ja
int3
in
pop
mov
mov
push
adc
cmps
push
inc
aas
dec
adc
out
in
cli
lahf
imul
sahf
jno
test
dec
cld
xchg
push
push
out
cmp
dec
pusha
sar
add
test
std
mov
(bad)
out
jmp
push
xchg
lods
and
call
mov
(bad)
jne
push
icebp
jge
(bad)
or
cmp
inc
cwde
ss
ds
mov
out
repz
dec
pop
sbb
dec
jo
adc
dec
or
popa
jmp
sbb
sbb
mov
push
dec
stc
ins
(bad)
sbb
push
dec
les
lods
jae
jo
push
aad
ja
js
mov
cmp
cs
outs
xor
xor
cwde
int
addr16
pop
out
xchg
ret
or
pushf
loopne
enter
icebp
sbb
add
cmps
sbb
inc
repz
push
in
cmps
xchg
jno
call
adc
sub
stos
push
icebp
lock
mov
xchg
in
dec
xchg
cmp
push
mul
mov
xchg
rcr
mul
sbb
in
loopne
je
cmp
lock
psrlw
stc
sbb
out
adc
dec
push
adc
loope
cs
jl
daa
mov
stos
jb
nop
lods
jmp
push
(bad)
shl
add
mov
or
stos
imul
sbb
adc
je
mov
lahf
jbe
loop
test
pop
push
or
jmp
fiadd
dec
aaa
(bad)
loope
lahf
in
xchg
mov
inc
mov
cmovl
js
pop
rol
popa
or
add
xor
sbb
imul
xor
stc
nop
push
adc
mov
mov
jl
and
mov
(bad)
js
lahf
cmp
pop
mov
inc
or
xchg
pop
fwait
push
dec
int3
add
movs
adc
test
mov
(bad)
adc
div
cli
xor
stc
dec
jle
retf
cmp
ret
sub
loop
fwait
lods
cmp
sub
mov
into
shr
test
cmps
lock
fidivr
repz
test
stos
(bad)
ss
and
test
into
mov
in
push
sar
mov
arpl
(bad)
push
js
outs
xchg
pop
je
mov
in
mov
data16
pop
cld
test
repz
xchg
(bad)
in
ror
sbb
xchg
mov
or
xor
dec
cmp
(bad)
(bad)
cld
sub
lock
adc
sbb
adc
out
fsub
mov
mov
out
jge
pop
and
lods
sub
cmp
cmc
(bad)
sub
sub
sub
test
add
mov
std
rcr
mov
loope
cmc
push
add
sar
fild
xchg
inc
lea
adc
mov
aam
cmp
lock
lds
inc
movs
and
cmp
jp
mov
push
jg
dec
adc
push
mov
dec
sub
mov
test
mov
jne
xor
inc
mov
jns
mov
icebp
mov
loopne
iret
push
mov
dec
xor
push
pop
mov
lahf
rcr
sub
dec
adc
xchg
jecxz
push
mov
jbe
and
mov
sub
aad
dec
dec
push
or
js
(bad)
mov
push
pop
shl
inc
cmps
and
push
daa
ret
aaa
jb
daa
loopne
xchg
adc
movs
dec
lock
push
add
test
nop
inc
lds
(bad)
jge
dec
push
idiv
inc
test
push
mov
repnz
mov
inc
dec
inc
(bad)
hlt
push
ss
lds
pusha
lods
sub
clc
aas
shl
lods
retf
mov
push
pop
push
(bad)
jnp
ret
and
mov
cmps
add
add
push
jno
outs
shl
outs
pop
dec
sub
and
test
push
jg
xor
push
xchg
cld
aad
mov
xor
loopne
je
in
(bad)
jg
fsubr
cmp
xchg
and
(bad)
push
pop
push
adc
push
das
gs
(bad)
adc
mov
sub
pop
shl
mov
adc
jecxz
jl
xchg
add
xchg
gs
mov
cdq
pop
xchg
push
imul
push
mov
cmps
sbb
scas
test
mov
cs
lock
inc
xchg
sub
pop
icebp
or
jno
push
(bad)
repz
stc
enter
lock
xchg
or
lods
fadd
push
sub
mov
das
push
idiv
repnz
sbb
pop
les
das
sbb
int3
out
mov
jnp
sub
fcom
mov
(bad)
sub
adc
mov
lock
push
mov
jns
mov
sbb
in
ret
inc
push
add
add
mov
inc
jge
aam
je
ja
push
(bad)
mov
repz
popf
mov
push
lea
repz
push
call
adc
data16
clc
arpl
cmps
push
pop
push
mov
loopne
push
xor
lahf
fwait
call
retf
mov
xchg
or
sbb
push
pop
sti
cmp
shl
hlt
add
cli
dec
sbb
retf
js
jge
inc
outs
add
mov
(bad)
cmps
cwde
inc
outs
pop
call
popa
mov
jmp
pusha
loopne
mov
xchg
jg
and
and
push
jnp
(bad)
or
sbb
mov
jbe
retf
jno
sub
cwde
ds
repnz
cmp
repz
int3
loopne
mov
or
and
retf
mov
pop
pop
frstor
call
outs
popa
push
cmp
icebp
mov
cmp
inc
mov
push
mov
cmp
pusha
mov
in
dec
(bad)
inc
sbb
add
xchg
in
jns
jmp
neg
cmp
sub
into
stos
pushf
das
mov
add
mov
out
sbb
cmp
jno
mov
and
mov
loope
push
inc
jno
shl
add
fistp
jmp
daa
or
inc
jg
fadd
scas
ror
ret
pop
xchg
or
xchg
mov
dec
push
fs
clc
lahf
sbb
retf
in
push
push
popa
(bad)
iret
popa
adc
push
leave
adc
sbb
jmp
cdq
(bad)
sub
(bad)
jbe
movs
aaa
sub
and
in
jns
xchg
pop
popa
lock
and
data16
push
sbb
test
popa
mov
test
sub
pop
mov
inc
cdq
jne
int
iret
mov
push
test
icebp
and
outs
arpl
rcr
jns
pop
mov
retf
mov
add
or
test
sub
xchg
mov
push
pop
push
mov
scas
add
movs
and
mov
call
mov
xchg
jmp
pop
leave
sbb
(bad)
shl
icebp
mov
out
cmp
gs
shl
or
pusha
iret
mov
or
mov
sub
and
stos
push
or
adc
fxam
cmp
in
test
inc
xor
pop
sbb
inc
imul
movs
nop
mov
mov
icebp
test
lahf
push
adc
cli
ret
rol
cdq
dec
int
and
pop
adc
retf
test
jl
idiv
adc
sahf
lods
popa
jge
lea
cwde
xchg
and
sahf
or
jo
movs
mov
bswap
fbld
scas
dec
push
push
or
and
jmp
or
movs
inc
jae
xchg
pop
jbe
add
ss
sbb
lods
ss
cmp
jg
xor
test
xor
cdq
cmp
in
add
cwde
push
(bad)
sbb
xchg
(bad)
mov
in
mov
int3
fld
xchg
addr16
ss
std
adc
jbe
cmp
les
aas
rcl
lds
ret
xchg
mov
shl
out
pop
mov
xor
aaa
sub
mov
fsub
jb
sbb
scas
icebp
jnp
xchg
test
or
fnsave
(bad)
cmp
loope
int3
mov
inc
repz
out
ret
cmc
lds
add
or
fwait
xor
sbb
fnstsw
ds
push
rol
pop
arpl
push
add
addr16
cmps
fist
stos
jle
sahf
lods
imul
and
xor
popf
stos
enter
loopne
pop
dec
cmp
pop
hlt
fucomi
iret
pop
fwait
test
mov
sbb
(bad)
dec
and
test
xchg
xchg
clc
sbb
push
adc
js
popa
cmp
cwde
outs
je
sbb
add
out
xchg
xchg
pop
fwait
adc
shr
daa
adc
inc
pop
add
adc
and
pop
cmps
loope
lds
in
sub
repnz
outs
jb
std
cmc
(bad)
jp
in
out
sub
fdivr
adc
movs
rcl
lahf
mov
rol
jmp
xchg
gs
mov
inc
out
mov
outs
cli
xchg
mov
call
cmp
cmps
pop
sub
(bad)
int
jl
ss
icebp
retf
cmp
mov
mov
movs
sar
sbb
dec
jge
div
jae
jbe
xchg
aas
hlt
and
add
dec
cmps
inc
pop
js
xchg
push
sahf
mov
leave
add
push
adc
popf
arpl
pop
or
and
cmp
and
jecxz
imul
scas
jne
addr16
push
cmp
fs
out
xchg
out
adc
cmps
push
clc
dec
fimul
lea
push
stc
push
adc
pop
ret
add
push
sbb
jle
cmc
sbb
xlat
das
xlat
out
scas
pop
jl
std
mov
sti
jno
into
xchg
inc
cli
sahf
scas
jle
cmps
jecxz
movs
jmp
fldenv
test
adc
mov
fild
call
mov
push
inc
inc
and
xchg
cmp
js
pushf
or
test
mov
aad
xor
add
fs
sbb
gs
rol
sub
inc
js
pop
cmp
jmp
xchg
cdq
rcl
pop
mov
sahf
aas
inc
inc
scas
pop
ret
fimul
cmp
cmp
fs
jg
or
push
pushf
jle
jg
fucomp
aas
(bad)
mov
dec
ss
ins
pusha
shl
in
or
lahf
lods
pop
xor
mov
cld
out
into
push
or
push
sbb
mov
xlat
test
in
push
(bad)
aaa
loope
mov
gs
loopne
mov
mov
call
fsubr
out
push
out
mov
lock
push
outs
cdq
sar
enter
mov
jmp
(bad)
jp
lahf
mov
xor
ins
lahf
cmps
ins
nop
mov
cmp
adc
out
lds
fisttp
xchg
arpl
cmps
mov
cs
fdiv
cdq
jns
ins
sbb
lahf
push
pop
pop
cs
test
mov
mov
mov
pushf
xor
aam
mov
jns
movs
lods
cmp
data16
rcl
leave
repz
out
jo
jmp
jge
jo
test
add
xchg
pop
mov
nop
sahf
popa
cmps
mov
xchg
cmp
stos
rol
push
hlt
mov
ds
into
test
adc
inc
in
dec
cmp
(bad)
mov
or
mov
movq
mov
aaa
(bad)
push
inc
lock
and
or
in
repz
dec
mov
add
mov
cli
jb
arpl
pop
and
jns
call
popf
xor
into
std
dec
jge
js
cdq
cwde
bound
mov
dec
daa
sub
mov
mov
or
fstp
nop
movs
xor
push
fcmovb
fwait
push
in
out
push
es
(bad)
gs
in
jecxz
and
add
fnstcw
and
xchg
jecxz
into
adc
mov
gs
out
aas
mov
and
sbb
retf
jnp
lods
lahf
push
jae
lahf
or
add
inc
in
mov
faddp
mov
dec
inc
shr
outs
cmp
test
add
iret
rol
inc
xchg
div
inc
into
adc
xchg
ins
push
call
adc
int3
jmp
push
fimul
stc
loop
and
in
push
jbe
push
push
or
jbe
cmps
retf
cmp
das
or
ins
loopne
hlt
or
in
inc
pop
les
sub
sbb
push
xchg
in
jmp
mov
inc
sub
or
in
pop
pop
sbb
out
icebp
das
call
rol
lock
mov
lods
aaa
sub
daa
and
data16
sbb
into
adc
add
mov
cdq
enter
add
outs
dec
cld
xchg
in
pop
loopne
sub
push
mov
jge
dec
pop
push
cmc
pop
out
mov
call
sbb
inc
sbb
sbb
push
mov
mov
dec
cmps
shl
call
pop
cmp
loopne
les
cmp
fwait
mov
movs
dec
push
ror
sbb
xor
inc
xor
and
mov
and
jbe
in
lea
out
aam
daa
call
mov
sub
dec
rcl
leave
shl
rol
stos
gs
scas
sub
(bad)
aas
add
or
add
popf
rol
add
cdq
mov
push
jmp
arpl
jmp
(bad)
loop
popa
sti
mov
add
add
mov
inc
xchg
or
outs
pop
xor
mov
jmp
aam
xchg
into
dec
cmps
sbb
or
or
setne
aas
push
adc
fmul
lea
sub
mov
movs
pop
cmp
xor
and
loopne
jmp
pop
xchg
sbb
jecxz
mov
aam
cmp
jmp
bnd
shl
jmp
inc
or
addr16
adc
sahf
adc
sti
jl
jae
mov
jecxz
jecxz
out
add
jnp
add
push
or
lock
sbb
xor
imul
jno
mov
xchg
shr
pop
sbb
xor
and
jle
add
aas
(bad)
pusha
(bad)
imul
add
cli
jge
xor
or
xchg
jnp
data16
in
push
imul
cmp
mov
(bad)
in
rol
or
cmp
pop
xchg
outs
push
jbe
clc
out
stos
mov
cmp
daa
adc
popa
ins
out
push
cli
in
dec
js
jp
cs
sti
jmp
jp
in
inc
mov
jecxz
bound
das
push
dec
addr16
pop
lahf
mov
es
and
in
xchg
dec
popa
retf
or
cmc
mov
adc
enter
sbb
pop
out
iret
xor
mul
and
xchg
sar
mov
xor
cli
ins
adc
(bad)
sub
push
mov
xchg
std
add
push
js
cmp
add
dec
aam
cmps
sbb
jg
xlat
push
rcr
cmp
imul
xor
fdiv
fild
xor
add
test
add
xchg
push
pop
out
xchg
scas
jae
call
sar
inc
jbe
lods
xor
fs
mov
push
mov
outs
sbb
sub
clc
fwait
pop
hlt
sahf
jp
dec
(bad)
stc
(bad)
test
fimul
les
jmp
push
cmp
sbb
pop
rcr
inc
ror
outs
in
xor
adc
ins
mov
cmp
pop
sbb
push
add
int3
neg
cs
and
adc
add
xor
dec
fdivr
je
bound
and
jecxz
sub
addr16
(bad)
cmp
scas
aam
cwde
cwde
pop
jno
adc
mov
ss
mov
jmp
jbe
lods
es
mov
iret
sbb
rcr
mov
xchg
mov
mov
cmp
pop
xchg
inc
ret
sahf
shr
pop
adc
add
pop
dec
shr
ins
and
cdq
add
retf
add
sub
mov
pop
xchg
aad
pop
mov
(bad)
(bad)
mov
fisubr
and
cwde
repz
and
cmc
retf
aaa
mov
dec
push
fdivr
or
pop
fistp
scas
sub
das
jge
sub
rol
xor
inc
inc
inc
fist
push
ret
sar
push
scas
adc
cdq
lods
shl
cmp
nop
push
mov
sbb
xchg
mov
push
adc
sti
pop
xor
add
repz
adc
in
or
add
jecxz
cld
out
loop
fbstp
retf
dec
add
dec
mov
pop
in
call
les
pop
cs
add
clc
xchg
xchg
sub
push
std
jmp
daa
jbe
jle
dec
and
lock
sub
das
or
pop
xchg
bswap
stc
in
loop
test
(bad)
fidivr
pop
gs
cmps
xchg
or
jmp
and
xchg
mov
jge
pushf
inc
into
dec
xchg
ins
fadd
test
out
stc
fs
push
pop
ja
call
pop
test
jno
xchg
cdq
cmc
cmc
and
inc
dec
addr16
sti
out
retf
sbb
jle
sub
xchg
lea
or
les
adc
pop
xchg
stc
xchg
ins
and
lods
mov
sbb
retf
retf
pop
clc
fcomi
es
jg
xor
scas
cld
mov
mov
push
add
mov
push
sub
iret
mov
outs
push
pop
call
xor
aaa
mov
jnp
push
sub
cdq
pushf
and
dec
sub
hlt
xor
sub
not
xor
push
cmp
pop
push
jge
das
mov
cld
scas
mov
pop
jmp
dec
out
cmp
adc
jb
leave
and
jo
cmp
je
xor
pop
fwait
add
comiss
add
cmovbe
fidiv
xor
int
sub
enter
inc
cld
scas
add
add
lea
pshufw
jmp
out
cdq
mov
jmp
(bad)
jnp
add
out
sahf
jno
(bad)
stos
jl
dec
cs
popa
jmp
sub
outs
xchg
movs
xor
stos
add
xchg
ret
cmps
adc
in
jnp
push
inc
movs
mov
inc
cs
cmps
inc
push
pop
xchg
jns
bound
cmps
loope
or
add
aam
xchg
cmp
imul
cs
fimul
outs
xor
in
mov
xor
out
nop
jge
cmp
push
(bad)
pop
jmp
nop
push
aad
mov
jo
out
ret
push
fsub
pop
cdq
cmp
dec
in
in
leave
cmp
dec
pop
adc
sahf
push
loop
pop
loop
sub
jo
dec
daa
push
cli
push
outs
aam
and
stos
imul
out
lods
sahf
in
or
and
jb
mov
call
push
bound
push
pusha
mov
fistp
and
stos
dec
inc
icebp
inc
sbb
div
js
movs
xchg
adc
xchg
sar
ins
sub
mov
cmps
ret
pop
js
jmp
and
pusha
sub
cmp
xchg
adc
mov
inc
int
inc
push
mov
pop
jnp
sar
les
cdq
pop
push
pop
add
(bad)
mov
sbb
(bad)
push
pop
popa
xchg
xchg
jge
xor
ds
repz
popf
cmc
sbb
mov
das
(bad)
mov
inc
cmp
(bad)
int3
xor
mov
shl
and
imul
jbe
sahf
jne
xor
xor
loope
cmp
js
mov
cmp
test
mov
mov
mov
mov
pop
stos
jae
jne
mov
or
inc
dec
add
outs
push
pop
daa
loop
sbb
cmp
inc
ja
fcom
loope
xor
sbb
stc
add
lds
lahf
push
adc
aas
movs
sub
hlt
je
rcr
mov
pop
mov
movs
mov
and
cdq
xchg
jl
mov
scas
(bad)
int3
(bad)
and
pop
movs
pop
cmp
add
lahf
add
jno
mov
inc
sub
fwait
push
sub
dec
std
push
cmp
or
loope
das
lods
adc
inc
jmp
mov
inc
mov
mov
fisub
mov
or
fnstcw
scas
inc
cmps
inc
push
mov
mov
aam
sbb
pop
xlat
mov
cwde
fdivr
mov
ins
shl
mov
imul
(bad)
aas
adc
xchg
cmp
and
jnp
or
and
sub
fld
mov
bound
loopne
std
ins
xor
arpl
pop
stc
sbb
mov
addr16
sub
mov
int
sbb
nop
lods
das
retf
sbb
jecxz
xor
pop
mov
popf
xchg
add
(bad)
xlat
cmc
fistp
lock
in
cli
fwait
je
jbe
and
outs
inc
lock
pop
mov
dec
dec
sub
or
pop
pop
dec
cmp
and
in
(bad)
jmp
test
mov
xchg
movs
aas
scas
cmps
cmps
cmp
int
movntq
out
fstp
rcl
popa
mov
(bad)
(bad)
sbb
es
mov
add
inc
and
je
mov
pop
mov
and
jle
add
stc
xchg
jl
push
stos
not
mov
jo
in
stos
and
push
add
adc
dec
xor
sub
mov
sbb
xchg
inc
pop
outs
xchg
imul
mov
adc
dec
dec
mov
fwait
push
jb
mov
adc
ins
xchg
sbb
jl
repnz
inc
mov
xchg
in
aam
adc
bound
lahf
dec
mov
ror
loopne
xor
shl
sub
aad
sbb
std
es
xchg
add
mov
pop
mov
in
cmp
and
mov
sub
adc
xchg
xchg
inc
test
aad
push
cwde
mov
and
aas
(bad)
rcr
loopne
mov
std
test
ror
push
or
inc
lds
fldcw
sbb
lock
or
stos
adc
jmp
sub
push
cwde
cmp
call
ins
loopne
sbb
mov
mov
not
fistp
xor
loope
pop
stos
sub
inc
jmp
mov
xchg
dec
xor
sti
add
fdivr
add
retf
mov
int
cmp
pop
and
pop
lods
push
sbb
cmp
jmp
mov
xchg
(bad)
sbb
cdq
mov
adc
mov
mov
(bad)
js
cmps
mov
pop
ror
adc
or
or
jbe
dec
pop
and
(bad)
jle
dec
push
cmp
cmp
mov
sahf
je
int3
push
mov
adc
push
push
retf
das
sub
xor
imul
icebp
mov
jecxz
cmps
pop
cmp
clc
inc
daa
dec
fbstp
jge
pusha
sbb
xchg
int
mov
movs
loope
push
hlt
xor
cdq
xchg
outs
mov
enter
(bad)
scas
(bad)
and
and
fwait
popa
cmp
fst
ins
stos
inc
es
repz
jge
adc
outs
popf
sbb
mov
scas
repnz
dec
sub
ins
mov
xor
retf
mov
cmps
and
stc
add
fcomp
add
movs
in
fcomp
fbstp
mov
sbb
lahf
xchg
adc
add
rcl
xor
setb
mov
pmaxsw
ss
cmps
sub
int3
inc
clc
ins
cmp
ret
push
(bad)
add
push
(bad)
dec
ret
out
test
mov
jno
or
add
out
scas
and
xor
and
icebp
leave
repz
pop
and
sbb
mov
pop
or
test
out
push
sub
js
xor
test
xor
das
push
cmp
sub
loop
rcl
sbb
push
mov
cmp
cs
ja
fucom
sbb
movs
rcl
and
(bad)
mov
shr
icebp
or
mov
inc
xchg
(bad)
fcomi
jge
push
mov
jg
imul
ins
ror
push
xchg
inc
push
scas
or
int
lds
or
inc
push
add
cmp
sti
push
push
and
test
mov
push
sub
jecxz
rcl
(bad)
clc
test
ja
xor
mov
xchg
hlt
mov
xor
adc
ror
in
test
add
or
cs
pop
adc
enterw
adc
pop
fld
dec
iret
push
icebp
aas
or
cmc
mov
inc
cmp
jge
fsin
and
sbb
mov
call
dec
in
or
shl
fucomp
nop
and
(bad)
dec
cli
faddp
mov
pop
in
ret
int3
mov
arpl
sar
xchg
sar
xlat
loop
fmulp
adc
aas
stos
mov
adc
or
or
or
dec
fild
icebp
and
loope
loopne
in
scas
data16
gs
jno
outs
pop
jae
inc
dec
ja
fldenv
aam
scas
xlat
adc
mov
ins
sar
lock
loop
aad
inc
mov
popf
ret
dec
or
mul
xor
pop
push
fstp
sbb
push
pushf
mov
movs
addr16
leave
jmp
mov
test
cmp
call
sbb
inc
sub
outs
cmp
test
outs
ds
pop
fwait
repz
sar
dec
inc
outs
jns
in
push
push
adc
test
sbb
inc
mov
mov
pop
adc
call
adc
add
(bad)
push
(bad)
xor
jmp
mov
rcr
mov
push
sub
or
popa
xchg
mov
xor
out
fwait
imul
(bad)
(bad)
call
iret
cmp
lods
out
out
into
xchg
test
mov
push
loope
movs
and
jbe
fcomip
fld
ds
pop
dec
inc
inc
mov
js
sti
mov
jae
cld
movs
inc
mov
ret
and
add
mov
sub
hlt
mov
(bad)
and
jns
nop
xchg
aaa
mov
sbb
sar
call
mov
call
lahf
lds
aas
not
adc
lahf
leave
cmp
pusha
out
push
add
cmp
movs
xchg
xor
js
leave
test
dec
jle
and
aas
dec
inc
dec
(bad)
pop
mov
mov
pop
inc
int
fldenv
(bad)
jmp
enter
jno
push
xchg
cld
xlat
lock
(bad)
fcom
cmp
push
jp
int3
aam
loopne
jmp
test
xor
(bad)
mov
cmp
popf
push
popf
rcl
test
shr
mov
shl
xor
sbb
jnp
sahf
cmp
jmp
add
dec
mov
and
sub
in
fucom
xchg
lahf
(bad)
stc
and
not
pop
push
xchg
ds
mov
or
add
in
out
adc
mov
leave
aas
jb
cmps
lock
mov
push
lahf
xchg
sbb
lods
jl
movs
repz
xor
pop
xlat
pop
adc
lds
aad
jae
out
xchg
jmp
xchg
iret
xchg
jl
mov
int3
test
push
xor
xor
fucomp
cmps
xchg
or
sub
lods
or
cmp
gs
add
mov
shr
mov
in
aad
popa
je
(bad)
shl
sbb
in
or
dec
push
loop
stos
sbb
add
push
fst
sbb
out
fstp
ret
or
cli
push
lahf
call
cmc
test
jmp
push
scas
movs
pop
sbb
out
ret
retf
imul
push
jp
dec
inc
mov
inc
inc
mov
mov
ds
jle
mov
mov
aam
dec
cdq
iret
pop
retf
fcomp
scas
outs
mov
loop
and
lock
lock
(bad)
dec
es
add
mov
jecxz
(bad)
xor
sar
dec
inc
loop
sub
xor
inc
sub
mov
inc
pop
pushf
cmp
add
jp
test
add
fidiv
dec
loope
mov
push
out
call
scas
les
enter
dec
sub
das
call
aad
xchg
lock
pop
push
lock
mov
jb
mov
or
es
add
push
pop
push
pop
mov
sbb
xchg
mov
stc
sub
into
and
mov
or
retf
pop
xlat
aam
(bad)
pusha
(bad)
movs
mov
push
mov
mov
das
stos
imul
loopne
mov
lds
xor
xor
clc
cld
sbb
fbld
iret
rol
movs
fmul
shl
push
test
mov
jns
shl
or
cmp
ja
adc
fs
add
enter
fadd
js
les
sub
cmp
and
je
cmp
xor
inc
push
mul
loopne
cmp
dec
or
or
sub
sub
mov
push
or
push
adc
cmp
jecxz
pop
mov
sub
fnstenv
sbb
les
fwait
lock
cld
ins
ja
inc
test
cmp
clc
inc
fld
arpl
(bad)
fisub
std
clc
sbb
std
in
jg
pop
div
int3
mov
call
es
dec
mov
in
sbb
dec
imul
jo
jmp
iret
adc
hlt
aas
lds
jbe
js
mov
pop
std
mov
aad
pop
aaa
lea
leave
aad
in
dec
push
scas
push
adc
dec
jmp
dec
pop
jmp
jge
sahf
inc
push
cmp
cld
popa
inc
push
jnp
int
adc
inc
adc
xor
sti
dec
adc
jmp
xor
(bad)
in
push
aam
clc
mov
aas
dec
pop
stos
xor
dec
mov
(bad)
js
sti
mov
ins
sbb
mov
out
in
neg
ret
ret
jl
cmps
gs
sub
inc
fst
push
outs
push
jae
loop
dec
xchg
mov
add
ins
mov
sbb
out
std
cli
inc
fwait
and
mov
sub
push
mov
rcl
lahf
dec
ins
(bad)
sbb
pop
pushf
inc
mov
xchg
es
fdiv
and
adc
test
loop
leave
lock
addps
jbe
icebp
mov
ror
cmp
sub
hlt
stos
mov
xor
imul
lock
(bad)
ret
pusha
mov
and
mov
inc
mov
scas
cmp
icebp
jmp
jge
or
je
in
jecxz
mov
nop
mov
pop
iret
ror
push
outs
and
std
cmp
test
loop
xor
idiv
push
or
mov
xlat
loopne
in
add
enter
je
es
jmp
cmps
xchg
mov
fs
mov
mov
mov
xchg
dec
gs
xchg
cmp
sahf
pusha
hlt
test
fs
rcr
test
push
mov
dec
pop
pop
lahf
sub
lock
inc
xor
idiv
sub
test
scas
aam
sahf
inc
in
fadd
arpl
jle
sahf
icebp
push
dec
mov
div
bound
ror
jo
jns
adc
dec
repnz
mov
push
xchg
shl
out
into
xchg
jo
sar
mov
aam
stos
cmps
or
pop
mov
stos
jmp
xchg
inc
lea
fwait
inc
fwait
push
sti
test
sbb
out
push
sahf
jmp
call
and
and
cmp
pusha
stos
(bad)
adc
sub
sub
mov
sub
ret
test
imul
xchg
cli
in
mov
mov
mov
in
or
cwde
je
sbb
jmp
mov
mov
int3
(bad)
pushf
jmp
fidivr
out
add
jg
fbld
sub
cdq
push
pop
dec
scas
sbb
mov
clc
lds
and
test
add
xor
push
xchg
xchg
sub
fwait
lods
jle
pop
add
add
mov
mov
imul
les
js
jmp
out
stos
sub
sub
test
or
jbe
ds
ret
mov
icebp
pop
loope
push
shl
cmps
sbb
test
inc
aam
(bad)
or
clc
cs
sbb
icebp
lea
in
mov
add
adc
cmp
jae
dec
push
pop
fcomp
mov
xchg
jmp
retf
inc
pop
xor
scas
push
adc
sub
inc
jecxz
inc
inc
idiv
fsubrp
mov
mov
jb
popf
(bad)
imul
aad
mov
bound
and
cmp
(bad)
out
mov
std
int
inc
jmp
xor
mov
outs
xchg
fs
jb
mov
movs
int3
cmp
cmp
test
movs
mov
push
dec
and
shl
cmp
rol
ss
push
sub
mov
cmps
daa
xchg
(bad)
lds
aas
push
cmp
or
sbb
and
xchg
cmp
mov
ret
test
in
dec
dec
sub
jne
rol
movs
add
test
js
nop
pusha
mov
jl
arpl
push
jns
inc
sbb
push
sub
scas
pop
movs
dec
call
imul
or
add
sub
test
stc
idiv
sub
dec
scas
mov
les
and
jmp
pop
or
add
mov
xor
lahf
mov
retf
int3
(bad)
mov
dec
sbb
push
add
mov
dec
mov
shrd
loopne
jle
inc
addr16
popa
(bad)
lock
sbb
add
imul
dec
fldl2e
int3
fimul
or
aas
xchg
or
(bad)
and
es
hlt
hlt
jge
iret
fild
and
ins
in
loope
test
in
and
inc
test
and
(bad)
sub
test
in
jnp
pusha
pop
pop
xchg
arpl
pop
mov
es
mov
imul
cli
xor
cmp
cld
pop
out
cdq
mov
mov
outs
pop
ret
dec
lea
(bad)
jl
push
xchg
stos
sahf
(bad)
in
ja
mov
test
gs
or
arpl
pop
pop
in
leave
movs
mov
push
popf
xchg
dec
xchg
fs
mov
(bad)
push
dec
ret
imul
loop
cmp
fnstenv
xchg
sub
test
inc
dec
push
jae
int3
or
xor
mov
mov
mov
push
mov
and
test
fistp
mov
test
xchg
in
fistp
push
xlat
repz
sbb
btc
push
pop
pop
and
(bad)
ins
sub
popa
cmp
pop
imul
outs
mov
inc
lods
out
xor
outs
test
mov
dec
adc
movs
xchg
dec
dec
out
push
mov
mov
gs
jns
loope
inc
jae
clc
mov
(bad)
cmc
jp
xor
stc
mov
sub
std
xchg
neg
lahf
aaa
aaa
sub
lds
inc
push
mov
mov
int3
push
add
repnz
push
gs
jp
lock
pusha
xor
das
cwde
push
loop
lea
lock
lock
push
and
and
clc
js
leave
test
xlat
mov
dec
dec
push
or
adc
and
push
jecxz
cmp
(bad)
push
push
fcmovu
xchg
mov
lea
mov
pusha
aad
push
mov
xor
mov
fisttp
sbb
shl
movs
(bad)
dec
aad
arpl
repz
mov
lods
sahf
jmp
inc
fyl2x
dec
jmp
mov
outs
stc
fild
cmps
jno
out
loopne
or
pushf
out
je
lahf
mov
xchg
xor
lfs
push
into
mov
imul
ret
jl
rol
outs
repnz
ret
or
mov
jge
xlat
pushf
sbb
aas
mov
out
xchg
neg
fld
pop
push
outs
push
inc
mov
add
aas
sbb
aaa
icebp
loop
dec
addr16
jmp
leave
dec
push
call
sti
fsub
sti
outs
mov
push
jo
or
cwde
sub
stc
inc
js
sbb
lods
mov
inc
es
mov
xor
cmp
and
mov
inc
sub
push
shl
jnp
fyl2xp1
ins
pop
xchg
rol
aaa
adc
shl
cs
mov
pop
inc
pop
es
stos
je
xor
data16
sar
sub
mov
ds
clc
dec
jle
cs
inc
xor
push
into
mov
and
lds
lods
and
jecxz
pusha
dec
popf
call
xor
idiv
dec
fdiv
movs
jo
call
adc
inc
dec
dec
lods
ffreep
outs
rol
inc
aad
push
daa
mov
(bad)
lods
add
mov
sbb
sub
inc
(bad)
cwde
dec
mov
pop
ret
fist
into
lds
fdivr
fistp
jbe
out
sub
test
imul
vpaddb
mov
mov
pushf
fcom
out
ins
div
stos
lods
jo
arpl
je
jg
dec
inc
arpl
pop
in
xor
ja
mov
jecxz
dec
test
lock
sbb
mov
dec
and
cmp
or
mov
out
jmp
fdiv
(bad)
pop
adc
je
xor
jne
pop
gs
pop
aaa
and
sub
(bad)
mov
scas
and
mov
sub
sbb
cmp
pop
xadd
stc
ret
jle
xor
test
sub
ds
add
out
imul
and
mov
lods
and
aam
ficomp
into
xchg
mov
in
inc
sbb
jnp
sub
test
enter
in
pop
mov
je
repnz
arpl
adc
mov
fidivr
push
cmps
adc
jmp
mov
push
mov
add
sbb
fisttp
jg
mov
sbb
add
(bad)
out
ror
mov
jb
mov
cli
dec
cmps
dec
lds
mov
inc
jbe
lds
aaa
lea
pop
inc
std
das
pop
scas
or
inc
rol
jo
clc
cmp
mov
in
mov
retf
lods
jmp
test
or
push
pop
lods
ret
mov
int
push
mov
(bad)
xlat
(bad)
ss
cld
imul
cli
dec
cmp
xchg
jge
xor
pop
hlt
dec
jmp
dec
pop
les
jb
jp
fxch
pop
popa
pop
dec
cwde
inc
xor
xor
adc
fmulp
out
mov
xor
jmp
mov
sub
sahf
int3
mov
mov
test
sbb
les
shr
sbb
les
and
inc
int
pusha
add
jl
push
cs
(bad)
icebp
push
shl
in
mov
mov
idiv
xorps
in
movs
hlt
(bad)
push
mov
push
dec
sub
imul
inc
sub
nop
xor
cmp
js
pop
jle
js
(bad)
(bad)
mov
mov
sub
imul
shl
cmp
push
add
stos
xor
std
enter
sub
repnz
and
out
jnp
push
(bad)
dec
inc
or
pop
jl
fldcw
sbb
mov
hlt
push
xchg
repz
(bad)
mov
mov
(bad)
hlt
shl
cdq
push
pop
sbb
cmp
pop
daa
lds
or
add
(bad)
ja
pop
stos
in
inc
fiadd
mov
jl
sub
sahf
jge
add
adc
xchg
mov
pop
add
and
dec
push
xor
aas
pop
mov
xlat
and
scas
data16
retf
and
fadd
push
jo
int3
mov
(bad)
adc
dec
mov
push
add
hlt
push
sbb
jcxz
daa
ja
sahf
adc
repz
xchg
push
xor
jnp
dec
add
or
repz
stos
inc
lea
retf
mov
inc
lods
adc
sbb
mov
push
rol
cmp
or
cmp
and
mov
xor
adc
(bad)
sbb
pop
fsub
xor
repz
into
cmp
jne
pop
dec
lods
or
dec
push
std
cmc
mov
retf
xor
jnp
fcomp
mov
out
and
shr
enter
mov
add
sbb
dec
mov
mov
xchg
sahf
das
dec
jmp
sbb
aaa
int
cwde
jno
mov
fisttp
mov
out
and
ret
lods
ret
and
call
adc
mov
mov
xor
cmp
ss
loopne
xchg
push
push
mov
stc
ret
or
push
lea
jb
cdq
push
mov
das
retf
and
stos
xchg
push
and
loopne
add
repz
mov
cmp
mov
ins
mov
arpl
cs
andps
mov
fs
inc
adc
stos
mov
daa
xchg
imul
loopne
leave
in
xor
es
pushf
inc
inc
add
mov
int
fdiv
test
jns
call
scas
add
xchg
sub
jecxz
cmc
lea
push
jp
mov
in
retf
mov
fwait
inc
stos
cmps
jb
mov
push
scas
test
aas
mov
mov
push
mov
push
lods
es
jecxz
stos
cmps
mov
cmp
push
jecxz
mov
inc
cmp
xchg
paddsb
xlat
jns
sahf
ds
repz
mov
push
pop
push
sahf
cwde
dec
fisub
je
lahf
mov
push
pop
outs
jp
out
mov
or
dec
out
xor
or
and
and
popa
ds
jle
lea
int3
hlt
jbe
(bad)
mov
ret
cwde
cmp
mov
and
(bad)
stc
mov
push
mov
fwait
lods
lea
out
lods
xchg
out
dec
imul
loop
outs
dec
sub
xchg
dec
mov
ins
xor
pusha
mov
mov
ficom
or
test
pop
and
xchg
dec
xor
imul
dec
jmp
stc
retf
sbb
xor
xchg
pusha
shr
push
(bad)
cli
xchg
adc
add
loop
xchg
enter
jne
jne
vpsrlw
mov
jle
jne
add
mov
popf
cld
sbb
jle
push
push
retf
push
pop
mov
cmp
xor
adc
mov
aas
pop
sahf
mov
pop
cmp
mov
or
xacquire
ja
xor
xor
push
jl
pusha
sbb
adc
dec
add
jmp
push
mov
in
gs
retf
fst
cmp
mov
sbb
fnstsw
pop
dec
jecxz
mov
fdivr
iret
and
mov
push
jecxz
daa
lods
xchg
inc
lds
ds
mov
scas
out
sbb
xor
dec
xchg
mov
repnz
and
push
and
clc
inc
push
push
sub
ss
mov
aad
rcl
jge
add
test
cmpps
stc
cwde
mov
pop
nop
shr
stos
imul
cmps
jo
ja
outs
push
movs
pop
in
fadd
ret
stos
and
mov
inc
fcomp
cld
pop
(bad)
ds
packuswb
or
or
push
gs
xchg
mov
popa
adc
xchg
aas
mov
addr16
inc
mov
mov
dec
push
xchg
cld
add
int3
clc
data16
or
jb
fild
sti
add
xchg
cmps
jmp
or
imul
jbe
in
mov
jecxz
retf
bswap
sbb
ror
inc
popa
adc
xor
pusha
int
pushw
or
in
cdq
mov
sbb
jle
inc
addr16
test
aas
stc
jg
imul
sbb
cmc
mov
mul
mov
push
pop
les
mov
sbb
sbb
icebp
mov
ins
mov
pushw
sbb
fild
sub
pop
fidiv
iret
mov
mov
rcl
cdq
jo
pop
jecxz
inc
cli
das
mov
dec
shl
test
int3
sbb
mov
cmp
je
clc
or
jb
push
repz
jge
inc
retf
mov
or
or
sub
adc
push
ins
push
leave
mov
js
nop
sub
call
pushw
mov
sub
fstp
repnz
in
mov
push
popf
fstp
dec
popa
enter
inc
xchg
addr16
sti
sbb
mov
mov
enter
(bad)
stos
xchg
out
ins
sub
call
leave
xchg
(bad)
aaa
adc
push
jnp
out
mov
scas
pop
xchg
push
pusha
xchg
or
repz
enter
mov
xchg
and
js
push
(bad)
xchg
pop
jmp
mov
ins
scas
sbb
mov
shr
add
aas
push
test
lea
js
mov
sbb
jmp
iret
dec
mov
sti
mov
lods
sbb
mov
pop
fst
pusha
push
(bad)
mov
idiv
mov
sbb
sti
out
mov
in
mov
repnz
adc
inc
ret
mov
xor
pop
call
jbe
cs
push
xlat
sub
xlat
imul
shl
int3
(bad)
hlt
and
mov
xchg
(bad)
and
mov
sti
dec
adc
je
je
sub
sbb
jnp
enter
push
test
mov
fcmovne
sbb
int3
xor
loop
jmp
and
movs
mov
pop
inc
jmp
clc
cli
pop
call
cmps
sub
add
lea
push
sti
push
aaa
jo
inc
nop
retf
adc
pop
or
shl
xor
mov
test
inc
pop
hlt
retf
call
jnp
xchg
hlt
mov
sub
test
sbb
mov
mov
hlt
aas
sbb
push
cli
gs
lahf
jle
loopne
mov
sbb
ror
mov
push
xor
mov
in
mov
mov
add
add
scas
xchg
jge
cmp
xlat
ds
push
push
nop
retf
xchg
cld
loope
pop
push
lea
and
pcmpgtw
sub
sbb
repz
add
or
fistp
mov
jecxz
xor
cli
sub
push
(bad)
ret
jg
std
aam
clc
inc
test
mov
fild
loop
mov
cld
stos
mov
cwde
shl
sahf
push
xor
cmps
or
mov
aaa
fcmovne
push
sub
test
retf
adc
xchg
iret
xchg
fwait
out
(bad)
mov
dec
cs
xchg
add
xchg
test
(bad)
fdiv
sbb
jns
mov
mov
sbb
xchg
add
shl
inc
push
dec
pushf
xor
cmp
mov
ret
mov
(bad)
push
(bad)
and
nop
inc
stc
(bad)
pusha
xchg
xchg
sbb
clc
dec
and
xchg
mov
enter
rol
mov
pop
js
sti
lods
push
in
and
add
mov
mov
lds
push
pushf
rcr
imul
data16
addr16
enter
outs
sbb
jbe
imul
call
sbb
and
xchg
push
mov
sub
outs
xchg
mov
dec
and
xor
jmp
retf
inc
adc
lahf
loopne
add
div
ins
out
movs
aad
pop
imul
mov
mov
mov
pop
dec
jmp
cmc
dec
test
mov
pop
ds
and
fdivr
dec
inc
outs
jle
dec
repnz
pop
fistp
test
cvttps2pi
jl
fbld
lahf
jne
(bad)
frstpm(287
imul
jecxz
call
ss
test
aad
rcr
or
not
mov
xchg
push
cmps
jge
rcr
xor
daa
cmp
mov
shl
and
xlat
rdpmc
cmps
inc
cdq
mov
retf
in
adc
xchg
pop
cli
inc
mov
push
fisub
add
lock
cmp
aad
xchg
mov
push
int
ror
gs
mov
mov
(bad)
repnz
test
inc
shl
outs
adc
nop
pushf
xor
nop
and
stc
in
fiadd
scas
enter
cmps
dec
retf
(bad)
ds
or
ds
push
pop
arpl
xchg
mov
(bad)
es
stos
and
fisubr
and
and
pop
movd
fisubr
sub
mov
lods
shl
sbb
push
shl
std
pushf
mov
(bad)
mov
imul
jge
sub
jmp
or
xchg
or
xchg
xor
jno
xor
cmp
mov
adc
fistp
popa
sub
call
push
pop
mov
mov
rcr
jnp
aad
call
data16
call
neg
in
aam
adc
sbb
add
mov
cmc
cmp
or
retf
sub
arpl
loopne
bound
gs
adc
jmp
pop
jnp
je
(bad)
arpl
stos
icebp
aad
aaa
mov
inc
into
jl
mov
(bad)
int3
adc
cwde
mov
movsx
xor
leave
bound
lock
data16
out
xchg
mov
add
(bad)
aad
cli
xlat
xchg
ficom
jbe
xor
jne
xlat
fwait
loope
sub
call
in
sbb
cmp
pushf
push
stos
jmp
cmp
(bad)
mul
fwait
test
mov
int3
mul
jge
retf
push
rcl
or
in
mov
cmps
jb
cli
rol
xchg
pop
fistp
adc
mov
inc
xchg
dec
mov
jecxz
test
mov
jae
push
fild
sub
clc
popa
es
mov
pop
jnp
mov
pop
pop
test
xor
leave
dec
repnz
or
or
mov
mov
js
xlat
out
cmp
lods
pusha
leave
pushf
hlt
add
shl
cmps
in
xchg
fmul
out
sub
push
jns
cmp
(bad)
nop
stos
jmp
push
and
jmp
ret
addr16
scas
ficomp
inc
push
pushf
mov
fstp
sbb
and
mov
cwde
add
out
imul
fadd
sbb
cmp
dec
pop
sti
sub
xchg
out
push
fdiv
(bad)
sbb
push
jb
(bad)
jp
pop
int3
jae
sbb
or
dec
and
sbb
cmps
ja
mov
imul
xchg
enter
adc
stos
jo
pop
into
jns
sbb
lods
cmp
pop
ins
fstp
shl
xor
jns
sbb
popa
stos
sahf
ja
push
inc
addr16
gs
xchg
bound
movs
lahf
lods
cmp
(bad)
loopne
loop
push
pop
icebp
jne
add
pop
push
fadd
add
pop
mov
test
sbb
pusha
pop
aad
mov
xor
arpl
repz
mov
adc
shl
mov
dec
loope
pop
out
dec
pop
mov
cmp
mov
jnp
(bad)
out
mov
repz
cmp
fdiv
sbb
jle
pop
dec
xor
xor
ja
mov
enter
inc
pop
adc
mov
outs
rcr
xchg
aaa
loope
mov
adc
push
xchg
or
and
cmp
std
xor
fidivr
movs
xchg
push
jne
js
pop
pop
jle
mov
call
cld
sub
lods
inc
(bad)
je
rcl
call
mov
out
bound
sbb
shr
mov
and
adc
sub
dec
and
xor
jle
mov
lahf
push
and
retf
repnz
add
repnz
fcmovnb
add
push
pop
out
dec
das
inc
inc
arpl
cmp
hlt
stc
jnp
sbb
jb
mov
jo
test
(bad)
aaa
fwait
popa
xchg
add
ret
ret
(bad)
pushf
or
pop
je
mov
jae
cmp
cdq
push
cmp
stos
xor
lods
mov
xor
jg
outs
addr16
in
out
pop
inc
inc
mov
push
jo
xchg
add
dec
pushf
fldenv
lds
jecxz
sbb
outs
jbe
add
jp
sbb
jnp
mov
in
arpl
mov
out
test
sub
xor
or
cmp
mov
mov
cmc
xlat
and
and
jne
cmps
aad
scas
xor
or
shl
jne
push
jp
int3
popa
lods
jle
ins
adc
dec
jg
xor
pop
xchg
int3
aas
call
call
leave
xchg
sub
shr
cmp
in
sahf
and
dec
mov
imul
popf
push
mov
cwde
mov
dec
mov
xor
mov
call
xor
test
xchg
retf
pop
mov
xchg
pop
into
pushf
or
lea
je
fcom
jns
aam
add
cmps
fistp
mov
imul
int
mov
and
les
mov
fist
sub
xor
sbb
fld
aam
mov
jle
add
xor
(bad)
cmp
mov
stos
ss
rol
add
test
loopne
out
push
stc
stos
out
cmp
rcr
cld
in
mov
xlat
test
mov
push
fistp
pop
into
pusha
pop
xchg
arpl
add
repnz
jecxz
cdq
push
sti
imul
pop
iret
jb
xor
or
test
jae
cmps
shr
out
das
(bad)
xchg
inc
inc
enter
xor
pop
test
(bad)
jns
leave
push
mov
repz
jmp
cmp
enter
mov
es
sbb
xchg
arpl
test
pop
xor
push
leave
test
push
lds
rol
das
mov
cld
push
int
push
adc
push
pushf
(bad)
aam
mov
popa
dec
cmp
mov
cli
hlt
push
les
jge
js
sbb
jno
mov
and
push
mov
inc
adc
repnz
mov
jnp
outs
cli
add
shl
cmp
in
sahf
xchg
push
adc
pop
xchg
(bad)
ins
mov
xchg
out
pop
xchg
or
add
imul
mov
test
cwde
xor
sub
imul
jmp
pop
mov
test
mov
inc
and
add
icebp
jne
(bad)
popf
push
push
in
add
inc
or
push
inc
scas
mov
sahf
mov
test
pop
mov
das
movs
js
mov
mov
sub
mov
repnz
mov
sbb
xchg
imul
dec
fild
retf
add
ja
in
mov
add
cmp
sti
cmp
aam
shl
ins
dec
sbb
lahf
mov
ret
stos
mov
call
or
adc
call
fcmovne
push
inc
push
call
xor
pop
std
adc
rcl
jg
jge
mov
sbb
cmp
punpckhwd
inc
fsubp
xchg
clc
sbb
add
add
in
sidtd
jb
mov
or
jo
xchg
jecxz
shl
mov
adc
outs
cmp
add
mov
retf
mov
jae
inc
push
adc
mov
adc
push
cld
jae
and
ret
dec
fdiv
cli
jno
loope
mov
out
pop
inc
add
aam
imul
jge
sbb
xlat
jne
and
jb
lock
adc
push
xchg
aaa
addr16
mov
ret
movs
aas
pop
xor
push
lock
(bad)
popf
jmp
push
repnz
in
mov
dec
push
out
loopne
mov
mov
mul
aas
out
add
mov
sub
(bad)
cmps
xor
popf
scas
inc
gs
dec
jo
fwait
push
inc
jmp
xor
mov
stc
and
mov
scas
in
arpl
push
mov
mov
fimul
fs
cdq
xor
test
xlat
leave
cld
aas
cli
scas
repz
jge
push
outs
stos
imul
ret
imul
cld
add
idiv
inc
aam
bound
scas
xchg
data16
xchg
mov
addr16
sbb
fnstcw
mov
lds
and
mov
adc
xor
cmps
stos
in
cli
pop
pop
xor
or
pop
ins
pop
xor
or
sbb
es
int3
fcom
lods
cld
stos
shr
and
xchg
xchg
fwait
sub
dec
stos
xchg
int
sub
or
arpl
xor
mov
outs
sub
push
shl
pushf
retf
(bad)
sub
retf
arpl
test
fbstp
in
cwde
imul
aad
shl
mov
les
shl
and
clc
stos
out
fistp
gs
cmp
dec
aam
jae
xlat
mov
cmp
cmp
mov
mov
fdivr
add
idiv
mov
fidivr
dec
sbb
mov
mov
dec
into
sub
and
and
cmps
sbb
adc
mov
inc
popa
mov
or
push
xor
ins
inc
movs
pusha
xchg
arpl
stc
cdq
in
xor
cwde
cmp
jo
loope
sahf
outs
addr16
jno
fcomp
fmul
push
xchg
cmp
sub
jecxz
sub
ins
push
(bad)
dec
stc
outs
imul
sahf
arpl
cld
jae
sbb
mov
cmp
inc
push
push
call
jb
jmp
fwait
inc
das
sub
fistp
movs
aaa
in
ror
mov
jg
daa
jmp
push
stos
or
inc
imul
and
scas
shr
imul
lock
jne
and
mov
and
or
cmp
dec
(bad)
sub
ret
daa
std
and
jecxz
mov
sbb
dec
dec
push
pop
movs
mov
pop
aas
mov
cmps
jb
push
frstor
mov
scas
popf
(bad)
loope
lods
shr
push
arpl
std
inc
mov
jns
sbb
lods
mov
inc
xchg
test
and
jg
pusha
jb
(bad)
jmp
and
fmul
fwait
cli
sub
and
pop
retf
jo
in
cmp
adc
sub
pop
dec
aas
or
add
not
in
into
mov
mov
jb
jmp
mov
add
adc
popf
xchg
mov
xor
or
test
js
push
pusha
adc
pop
(bad)
retf
cs
fist
adc
(bad)
jo
or
jge
adc
and
mov
and
shl
shl
cmp
and
fst
test
es
cmp
sub
mov
loop
or
jbe
add
lock
xchg
xor
das
imul
cmps
fs
ficom
cmp
dec
xchg
int3
nop
in
add
mov
fild
pop
int
pusha
lods
aad
loop
aaa
in
stc
frstor
xor
cmc
mov
jo
push
jmp
adc
call
and
pusha
cli
xchg
push
cs
inc
push
shl
jl
in
dec
cmps
sbb
xor
xchg
sub
test
pop
inc
stos
nop
dec
ret
pushf
fistp
jge
cli
push
xchg
stos
ins
ds
pop
leave
fs
sub
or
dec
lods
mov
jl
stos
retf
push
mov
test
fidiv
inc
push
loopne
sar
dec
mov
lahf
xor
lods
cmps
adc
jmp
daa
stos
(bad)
enter
or
icebp
cmc
(bad)
aam
int3
add
lods
pop
inc
dec
retf
out
lock
jns
add
mov
sub
pop
call
icebp
shl
mov
jno
xchg
mov
or
movs
mov
pop
lahf
sub
mov
push
add
push
push
add
ja
dec
jmp
push
out
mov
sub
mov
fiadd
daa
add
cmp
jge
jne
outs
jne
(bad)
rcl
and
adc
int
enter
fwait
add
cwde
inc
mov
neg
fs
aas
add
mov
xchg
xchg
dec
xchg
retf
cdq
call
outs
xchg
jge
mov
xor
and
mov
icebp
xchg
push
dec
jno
test
fldenv
adc
pop
outs
mov
add
mov
jmp
ins
icebp
cmp
or
sbb
or
push
lods
aam
ror
fidiv
push
jbe
cmp
imul
add
dec
lock
adc
fs
sbb
inc
cdq
jp
cmp
adc
sbb
or
movs
and
xor
sub
sbb
xchg
lods
xchg
sti
add
loope
mov
aaa
dec
add
cmps
xor
(bad)
xor
jmp
aas
inc
push
pushf
test
(bad)
mov
popa
bound
cmp
adc
orps
outs
push
(bad)
les
out
cdq
aad
and
dec
cwde
pop
xor
push
jb
cmp
jmp
jne
xchg
push
ds
add
push
mov
xor
and
mov
(bad)
lods
call
or
mov
mov
or
out
aaa
xchg
in
adc
stc
adc
mov
sbb
and
mov
adc
jb
mov
loop
cmp
out
lods
cli
scas
and
sub
clc
inc
repz
(bad)
movs
outs
js
jg
ja
in
push
rcl
imul
clc
fst
dec
dec
hlt
icebp
lods
call
repz
xor
or
and
lahf
jne
sub
inc
mov
mov
mov
xchg
push
test
or
rol
stc
stos
push
push
shr
je
mov
clc
pop
cmp
sbb
test
out
jecxz
popa
push
cmc
aas
enter
pop
xchg
hlt
and
push
pushf
push
xor
jge
and
stc
icebp
lea
imul
fcom
repnz
cmps
popa
dec
or
loop
inc
sahf
sbb
adc
pop
repnz
jecxz
pushf
in
sahf
mov
pop
(bad)
jno
cmc
sbb
clc
dec
mov
in
sahf
xchg
out
add
cmp
dec
push
cld
mov
jo
adc
inc
sbb
test
std
imul
lock
retf
mov
movs
fwait
mov
fbld
fiadd
xchg
push
jecxz
out
pop
pop
daa
int3
cli
imul
inc
jg
dec
shl
cmp
and
out
jecxz
push
cmp
push
sbb
dec
inc
jbe
imul
rcl
in
xchg
cmps
mov
pop
xchg
int3
popa
fidivr
nop
stos
cmc
imul
jae
jo
or
mov
xchg
jne
jno
pshufw
mov
inc
loop
mov
jmp
push
add
movs
es
dec
(bad)
mov
retf
lea
mov
cmps
mov
pop
leave
pop
fld
or
inc
xchg
aas
cmps
mov
mov
xchg
das
outs
fistp
xchg
(bad)
push
inc
addr16
cmc
(bad)
and
xchg
test
mov
aaa
and
mov
and
pushf
sub
xchg
xor
aas
and
and
add
adc
push
fcomi
popf
ds
push
and
push
clc
neg
jne
adc
leave
xchg
mov
ja
and
mov
add
pop
aad
xchg
pop
and
and
ret
xchg
dec
dec
push
sbb
paddd
or
mov
xchg
cmps
pop
push
call
rcr
fisubr
fstp
loopne
loop
xor
jbe
jnp
imul
and
ins
lds
arpl
xchg
imul
mov
adc
pop
push
fistp
cld
jecxz
adc
(bad)
ins
add
mov
sbb
jl
popf
pusha
stos
push
es
(bad)
cmp
sbb
in
mov
xchg
and
sbb
std
sbb
mov
test
or
fstp
adc
inc
cdq
pop
sub
ror
pop
loop
shl
movsx
inc
cmps
arpl
jp
inc
push
cmps
jbe
retf
scas
jbe
inc
sub
mov
jns
pop
loope
lock
sbb
pushf
dec
mov
xchg
test
(bad)
lods
ret
dec
jnp
mov
push
addr16
imul
outs
je
fnstcw
cmp
(bad)
pop
fs
xchg
(bad)
ins
out
or
and
inc
push
mov
imul
add
pop
mov
les
and
hlt
fisttp
pop
loope
sbb
mov
add
popa
js
jnp
sbb
mov
aas
adc
imul
stos
retf
div
ret
out
mov
mov
daa
(bad)
push
stos
fldcw
push
out
ror
inc
fs
je
cmp
jle
adc
pop
sbb
sub
and
dec
pop
fmul
sti
mov
xor
jbe
push
adc
jl
sub
les
mov
lods
sub
inc
ret
sti
xchg
xchg
pop
stos
and
jg
ins
sub
sbb
bound
hlt
mov
xchg
dec
ret
and
popa
pusha
dec
xchg
cmp
ins
aam
add
cmp
test
hlt
ds
push
xchg
fwait
sbb
pusha
(bad)
mov
mov
jmp
pop
dec
stc
sbb
sub
lahf
push
dec
inc
pop
rol
sti
sub
mov
enter
cmc
push
lsl
mov
adc
cmps
inc
mov
dec
fdiv
call
xchg
inc
mov
fldenv
and
push
iret
xor
sbb
cmp
test
push
push
jns
inc
mov
and
push
into
call
mov
push
cmc
cli
mov
lds
dec
sar
in
mov
std
inc
adc
out
or
mov
mov
jmp
out
adc
ror
mov
jo
jne
inc
push
and
inc
fwait
push
pop
ss
daa
fst
(bad)
sbb
mov
rol
sub
xchg
mov
jmp
and
leave
pop
dec
push
pop
(bad)
cmp
mov
fcmovnb
jl
das
jmp
pop
shr
repz
jl
loopne
xlat
xor
pushf
mov
cmp
faddp
out
dec
inc
jb
retf
adc
xor
lods
shl
pusha
mov
cld
fwait
pop
mov
cmps
add
enter
fwait
pop
cmp
(bad)
in
pop
fist
retf
(bad)
icebp
repnz
daa
and
mov
out
jle
arpl
cld
jae
xchg
xchg
xor
and
fild
inc
mov
fdiv
loope
inc
addr16
test
les
mov
pop
jge
mov
call
xor
scas
mov
test
dec
dec
mov
data16
pop
in
je
nop
inc
aam
cmp
dec
or
and
and
bound
add
rol
in
xchg
mov
xchg
outs
inc
and
fdivrp
push
lock
pop
jbe
jbe
dec
sub
and
inc
fwait
inc
mov
jb
fnstenv
mov
add
(bad)
push
ss
leave
ins
cli
mov
test
mov
(bad)
into
mov
or
add
sbb
jge
pop
sub
cld
mov
ret
or
test
dec
jns
aaa
xor
mov
loope
cmp
jl
lods
mov
cwde
pop
mov
in
mov
lods
inc
daa
and
dec
cmps
stos
arpl
mov
pusha
setp
callw
test
aam
sbb
clc
inc
sbb
test
mov
int3
jo
dec
test
in
pop
mov
and
pop
cmp
jbe
loopne
les
repnz
mov
xor
jne
ror
repnz
clc
pop
daa
fisttp
fsubr
mov
xchg
cld
jo
jae
das
call
mov
dec
js
jns
jmp
scas
and
outs
pusha
jle
push
cmp
aas
mov
and
xchg
xchg
push
cmps
bound
mov
rcr
lods
xlat
je
pusha
push
cwde
ret
fsub
mov
movs
adc
push
nop
sbb
bound
clc
pop
call
out
out
and
mov
mov
in
pop
dec
fwait
mov
jl
or
cs
jnp
mov
ins
test
pop
push
push
imul
push
test
pop
das
leave
inc
add
clc
pop
sbb
out
mov
jae
mov
movntq
add
pop
iret
xchg
add
ds
sbb
cmp
outs
mov
cmp
push
fisubr
pop
stc
test
pop
mov
mov
push
mov
add
mov
and
add
daa
adc
jmp
mov
inc
test
adc
lea
into
dec
sub
push
jno
mul
out
and
je
jecxz
push
lods
nop
dec
js
mov
and
imul
mov
hlt
imul
out
inc
inc
cmp
out
xor
fnsave
jns
aam
mov
mov
cmp
(bad)
or
sbb
loope
ss
lahf
in
push
push
push
and
(bad)
or
push
pop
inc
push
cmps
adc
inc
sbb
mov
ja
pusha
loop
mov
push
shr
stc
ins
sbb
mov
loope
xor
xchg
in
aad
(bad)
fcomp
dec
mov
loop
sbb
xor
outs
out
popa
shr
test
retf
das
cmp
or
jnp
xchg
push
mov
mov
jg
inc
cs
pop
sti
and
push
(bad)
adc
lock
cmps
mov
sub
mov
ja
fcom
fsubr
sbb
mov
jmp
and
sbb
into
test
outs
sub
cmp
mov
mov
(bad)
(bad)
(bad)
daa
push
sub
call
retf
aam
inc
les
cwde
out
mov
add
(bad)
(bad)
mov
jmp
test
or
jae
mov
sub
cs
push
dec
arpl
in
in
xor
lahf
lods
pop
mov
ds
mov
mov
sub
arpl
jns
popa
enter
enter
push
in
addr16
dec
in
jno
mov
loope
jno
frstor
mov
lods
sub
xchg
sub
out
xor
sbb
sahf
test
into
mov
in
scas
jmp
aam
sahf
iret
dec
inc
sub
test
jecxz
test
or
mov
cmp
shl
movs
push
sub
mov
dec
ret
arpl
lods
mov
mov
out
push
adc
mov
aaa
loopne
and
outs
outs
sub
icebp
scas
add
sub
dec
ins
repnz
dec
cmc
push
xchg
aam
fcmovu
(bad)
cmp
enter
mov
std
(bad)
loop
and
and
cmps
jmp
clc
jl
dec
and
push
mov
std
in
outs
mov
pop
xor
add
repnz
and
imul
mov
jmp
jno
pop
xchg
scas
dec
pop
ret
mov
mul
push
outs
sub
mov
mov
mov
mov
xchg
inc
push
les
rcr
stos
fcomp
jbe
js
les
jge
jb
(bad)
sbb
ret
adc
add
sub
scas
out
scas
punpckhbw
std
scas
ins
loope
push
sub
jb
out
ret
rcr
(bad)
movs
ja
push
sahf
ss
cmp
dec
pop
inc
arpl
push
std
mov
faddp
jle
mov
pop
jo
mov
retf
loopne
and
cdq
stc
mov
test
mov
js
mov
out
imul
into
xchg
aaa
iret
in
aam
xor
mov
scas
enter
adc
and
popa
outs
pop
inc
daa
mov
cmp
cmp
ss
in
mov
iret
inc
adc
sub
std
cmp
stos
cwde
xchg
push
call
jne
test
mov
inc
mov
popf
jne
xchg
lock
inc
cmp
add
lds
cmp
test
out
ss
sbb
or
loopne
pop
mov
sbb
inc
jne
in
push
push
xchg
inc
add
scas
sub
sahf
inc
test
enter
div
jno
icebp
loop
xor
inc
dec
inc
and
sub
in
mov
pop
popa
call
test
(bad)
aaa
adc
mov
pop
cmc
(bad)
push
lock
add
inc
(bad)
retf
sbb
jb
jae
cs
outs
std
xor
mov
js
mov
pushf
pop
mov
js
scas
and
jbe
xor
cmp
pop
cmps
pop
ss
fwait
sbb
test
imul
loope
inc
test
data16
cdq
mov
gs
(bad)
lahf
push
jmp
ins
test
rcr
in
mov
(bad)
out
sti
xchg
mov
xlat
stc
push
pop
add
inc
push
js
jmp
and
out
hlt
fs
cmp
jnp
out
push
mov
fist
pop
mov
(bad)
xchg
pop
test
outs
pop
out
ja
mov
dec
xor
in
fwait
ins
cld
ds
push
jle
dec
pop
jge
jnp
pushf
(bad)
pop
icebp
inc
jecxz
in
dec
leave
icebp
sbb
lea
icebp
pop
call
icebp
out
mov
mov
pop
out
cmc
lea
lods
jecxz
sahf
cli
test
movs
sub
shl
popf
es
jge
xor
and
imul
shl
ins
not
sahf
push
sub
jns
jmp
inc
out
jmp
ds
mov
add
les
pop
adc
and
sbb
test
ret
fld
pop
and
xlat
inc
lea
not
cld
(bad)
test
jne
push
xor
(bad)
and
fnstcw
repnz
lds
stos
mov
(bad)
ins
std
sub
scas
lods
add
mov
mov
ficomp
xor
inc
mov
icebp
mov
jge
ds
jae
jle
dec
sub
pop
icebp
adc
mov
sahf
(bad)
push
repnz
das
mov
inc
pop
gs
mov
push
push
loopne
ror
dec
pop
add
test
and
fsub
xchg
cli
cli
mov
mov
popa
std
mov
xlat
xor
enter
jbe
sub
mov
sbb
xor
mov
ror
pop
inc
inc
pop
inc
(bad)
adc
cwde
fist
das
mov
cmps
repnz
mov
cld
push
pop
ins
jecxz
imul
aad
icebp
xorps
lea
aas
sahf
push
iret
cmps
(bad)
fild
mov
pop
mov
pop
dec
ret
sbb
fistp
pop
push
pushf
mov
idiv
bound
dec
es
cs
cdq
xor
sar
cmp
outs
pop
pop
pop
pop
mov
das
mov
sub
pop
inc
je
jno
jecxz
mov
(bad)
gs
fsubr
mov
bnd
xchg
fimul
gs
popf
imul
sub
shl
es
ret
and
cwde
push
enter
fcomip
sub
jne
mov
ins
int
pop
jl
int
addr16
and
push
mov
mov
popa
mov
or
adc
ror
pop
mov
shr
xchg
mov
movs
jmp
movs
retf
(bad)
lock
aas
fcomp
pop
and
test
jno
js
mov
stos
jl
sub
xchg
sbb
mov
mov
mov
dec
push
pop
sbb
out
jbe
inc
or
inc
adc
push
xchg
sbb
loopne
sub
mov
push
mov
stos
xlat
mov
jp
div
dec
repnz
pusha
cli
mov
jo
faddp
test
dec
out
lock
push
(bad)
push
sbb
mov
retf
fs
push
ja
or
or
popf
inc
or
test
loop
mov
std
das
or
iret
repnz
es
push
mov
retf
test
out
cwde
sub
sbb
sbb
mov
pop
bound
mov
and
or
cdq
xchg
mov
mov
stc
mov
sbb
cmp
in
pop
cli
adc
ins
gs
ss
out
and
js
and
mov
sub
mov
lea
into
mov
jns
jmp
sbb
sub
shr
push
mov
jp
icebp
jl
mov
arpl
fidiv
daa
push
cs
mov
ds
cmp
test
mov
retf
mov
xrelease
cmp
dec
cmp
inc
(bad)
in
fsub
pop
loop
pop
push
or
sar
mov
aas
adc
and
lods
data16
cli
inc
cmc
aad
lahf
dec
xchg
in
out
add
jecxz
movs
and
lea
and
sar
lea
sti
icebp
movs
nop
test
mov
pop
ret
cmc
aaa
push
outs
inc
sbb
mov
popf
cld
dec
push
and
lds
stos
sbb
xchg
pop
les
jmp
fwait
and
sbb
rol
ret
pop
sub
adc
or
rol
cmp
jmp
push
and
sbb
(bad)
sub
icebp
push
jge
push
ins
repnz
cmp
push
sbb
addr16
fwait
push
ins
aas
and
xor
leave
push
pop
pusha
xchg
(bad)
hlt
in
pop
cmp
pop
test
xor
cmp
imul
ja
imul
(bad)
push
adc
cmp
rcr
arpl
call
mov
fwait
push
xchg
mov
mov
xor
stos
fsubr
outs
jae
scas
(bad)
fsubr
mov
jbe
jl
adc
sahf
jb
adc
xor
jl
jnp
cmp
mov
retf
and
xchg
pop
scas
mov
int3
add
sbb
cdq
jecxz
inc
sub
rcr
daa
fisub
xchg
add
ja
stos
jmp
enter
ret
popf
shl
sub
inc
test
cmp
sbb
(bad)
cmp
inc
mov
sub
sbb
sub
xor
daa
retf
xor
add
pop
stc
ins
mov
cld
stc
sti
fstp
xchg
xchg
jl
sub
loop
adc
test
mov
adc
mov
sti
ror
push
hlt
push
mov
les
inc
bound
test
into
popa
add
pop
xchg
xchg
sub
inc
into
imul
mov
ins
and
push
sbb
mov
repz
mov
inc
mov
js
retf
push
ret
sub
int3
stos
ss
retf
out
push
test
cld
mov
pop
in
in
(bad)
cld
mov
hlt
pushf
imul
adc
mov
mov
adc
inc
dec
jl
and
mov
cwde
or
cdq
push
daa
xor
ret
fcomi
fwait
aam
(bad)
imul
sub
push
and
test
or
xlat
fcomp
add
push
inc
add
and
and
cwde
aaa
jmp
std
stc
jp
adc
dec
and
cmp
fwait
outs
and
mov
xlat
jg
xor
mov
adc
xor
push
xchg
lods
xor
push
mov
iret
je
adc
or
jmp
cmp
sub
pop
mov
sbb
ins
mov
outs
fistp
or
mov
and
push
iret
adc
inc
sbb
out
je
add
inc
dec
retf
div
test
cdq
jecxz
or
cs
pop
push
pop
push
fs
das
mov
mov
mov
out
add
mov
adc
jp
dec
and
and
fldenv
inc
mov
and
in
jno
sbb
div
push
mov
or
sub
test
not
mov
jae
outs
dec
push
cwde
inc
pushf
int3
in
fs
fmul
stc
cwde
lds
adc
stc
outs
pop
dec
inc
jnp
test
loope
dec
int3
inc
daa
(bad)
aaa
cmp
cmp
ins
out
inc
mov
xchg
pop
fmul
out
cmp
fwait
sub
js
xchg
xor
pop
pop
in
push
(bad)
mov
sub
aam
in
ins
xor
push
jg
mov
sub
js
xor
cmps
pop
and
les
mov
fild
jle
repz
cmps
mov
cmc
test
mov
xor
(bad)
xlat
fwait
pop
and
es
cmp
arpl
mov
std
pop
add
add
jae
retf
dec
cmps
inc
push
or
xor
movs
cmp
dec
dec
movs
pop
add
pop
(bad)
cld
fstp
cmps
mov
push
fnstcw
(bad)
gs
in
and
jmp
push
iret
push
push
call
add
adc
aaa
ins
shl
stos
(bad)
cli
(bad)
in
dec
sub
mov
dec
sub
mov
jns
scas
stos
xor
mov
cmp
outs
fcomip
mov
inc
(bad)
jle
scas
pop
push
and
mov
ret
idiv
push
imul
mul
xchg
push
cmp
es
xchg
stc
and
push
pop
call
popf
push
jg
out
mov
add
bound
and
push
xor
popf
cmp
dec
adc
mov
mov
and
nop
push
mov
add
(bad)
idiv
jb
in
dec
test
ja
pop
enter
jecxz
mov
mov
shl
ficomp
sar
push
push
je
les
(bad)
test
fild
inc
sbb
dec
push
sahf
jmp
in
ficom
out
out
jae
pop
(bad)
aad
movs
shl
dec
and
add
sub
mov
out
mov
retf
pop
ds
inc
inc
out
mov
mov
jbe
(bad)
addr16
pushf
mov
inc
inc
adc
add
ds
dec
in
mov
mov
xor
nop
cmp
jp
jecxz
sti
je
add
arpl
dec
btc
add
pushf
mov
enter
cmovns
ret
aas
fild
dec
cli
adc
jg
sub
cmc
mov
fdiv
mov
fcom
jp
idiv
clc
xor
adc
js
xchg
xor
adc
xchg
pop
mov
loop
sar
retf
cdq
lods
and
lods
xor
sub
jmp
or
jno
lds
cmp
sub
rcl
sbb
pusha
clc
cmp
rol
mov
mov
adc
jbe
je
mov
cmps
ret
xchg
mov
xchg
(bad)
int3
add
test
cwde
lea
je
movs
pushf
mov
into
inc
mov
nop
test
data16
xor
outs
and
mov
inc
fwait
dec
adc
xor
push
pop
(bad)
call
cld
mul
add
test
dec
or
es
push
sbb
(bad)
mov
xchg
xchg
data16
loop
(bad)
push
(bad)
pop
push
fcmovne
ins
and
in
push
in
pushf
push
push
call
jl
pop
rcl
sub
adc
iret
sti
iret
cmp
(bad)
or
mov
xchg
pop
lods
loop
xor
and
pop
ins
jmp
jmp
jae
cmc
mov
xor
mov
cli
jecxz
jae
xchg
push
xchg
std
pop
cmps
cmp
cs
cs
fcmovne
add
mov
jmp
inc
pop
fdiv
dec
loopne
ins
into
fidiv
push
mov
xchg
leave
sub
mov
dec
mov
push
or
sbb
push
or
stc
das
mov
cmps
push
sbb
mov
loop
int
xchg
imul
(bad)
or
mov
adc
cmp
or
mov
xchg
xor
xchg
lods
icebp
xchg
xor
xchg
mov
push
add
jl
inc
pop
pop
(bad)
xchg
adc
popf
cli
mov
fs
mov
mov
bound
xor
enter
dec
jne
loop
mov
js
xchg
mov
das
mov
lods
and
mov
adc
jge
mov
xchg
lods
mov
lahf
test
add
stos
inc
sbb
cmp
mov
sub
jae
aaa
shl
pop
fcom
and
add
push
sbb
push
bound
icebp
push
cs
outs
pop
dec
mov
lods
dec
stc
jbe
mov
ins
imul
rol
adc
adc
leave
int
ins
xchg
(bad)
dec
inc
adc
sbb
mov
cmp
and
outs
pminsw
cmp
aas
or
inc
out
jno
sbb
mov
bound
xor
push
push
jne
adc
cli
pop
inc
xor
sub
push
loop
mov
in
add
idiv
cmp
fimul
dec
cmp
movs
pushf
es
retf
jbe
shl
fmul
arpl
sub
daa
pushf
out
cld
jle
mov
inc
dec
int
add
in
cmp
mov
inc
mov
and
mov
int3
outs
call
and
adc
xor
dec
shr
sahf
xchg
test
xchg
fldenv
jecxz
mov
cmp
or
(bad)
fmul
sbb
fstp
xor
push
int
in
mov
sub
or
test
cwde
iret
add
xor
and
push
je
mov
jmp
dec
cmp
jno
(bad)
sar
pop
cld
iret
(bad)
push
out
enter
sub
popf
jbe
sti
cmp
lds
test
mov
inc
mov
aaa
sbb
xchg
push
je
jmp
call
arpl
sar
aam
pusha
lods
nop
fst
repnz
ret
jp
jmp
mov
push
mov
cmp
jecxz
movs
cld
xchg
fdiv
pop
sub
bound
sbb
enter
jmp
cmps
dec
and
sbb
add
je
retf
ds
add
retf
add
pop
adc
mov
test
cmps
xchg
jb
add
retf
aad
or
mov
add
das
mov
adc
jecxz
mov
mov
gs
scas
(bad)
cmp
lods
sbb
and
sbb
shl
push
into
lods
cmp
ds
call
sbb
stc
cld
sbb
xor
pop
shr
inc
leave
mov
dec
pop
hlt
xchg
push
movs
loope
push
cmps
push
imul
test
fbld
into
aas
mov
fsubr
fisub
mov
cmp
cmp
mov
cmp
fnstenv
icebp
out
aas
dec
mov
sub
mov
call
ins
jge
es
dec
pushf
mov
xor
mov
push
jo
sbb
sbb
sub
push
add
daa
mov
add
retf
fld
jae
push
sar
lds
inc
xchg
cmp
or
push
test
mov
in
mov
mov
aas
xor
retf
mov
mov
xchg
dec
inc
cli
lea
cmp
add
mov
xchg
sbb
shr
mov
iret
lods
pop
jae
sbb
(bad)
in
sub
sbb
mov
and
push
jns
lods
movs
add
retf
rol
add
test
sbb
(bad)
outs
mov
xor
xchg
push
cmc
or
adc
push
mov
scas
inc
inc
fwait
and
imul
(bad)
pop
stos
mov
outs
xchg
mov
mov
jnp
or
mov
mov
in
test
loopne
cmp
lock
xchg
adc
pop
dec
mov
or
ins
or
outs
in
jmp
and
jne
cmp
ret
lods
adc
imul
mov
push
cmc
cmp
pop
push
test
dec
mov
xchg
or
jbe
mov
fdivp
in
dec
cmp
cmc
(bad)
cmp
xchg
ss
jns
jge
es
cs
mov
cmp
dec
gs
add
ficom
popa
(bad)
(bad)
out
(bad)
dec
xchg
mov
push
dec
fsubr
push
or
fucom
adc
push
shl
push
add
and
lods
cmp
loop
sahf
(bad)
cmp
je
sbb
in
inc
rcr
repz
or
jne
inc
cmp
sahf
xor
adc
mov
cwde
test
cwde
fsqrt
xchg
aam
dec
mov
jecxz
cmp
pop
out
leave
mov
cli
mov
push
bound
jp
push
sti
xchg
fnstsw
mov
cdq
jns
xlat
jne
lods
out
sub
xor
leave
jmp
sub
mov
popa
(bad)
cmp
push
mov
mov
jne
inc
mov
add
cmps
xchg
imul
scas
sbb
xor
out
dec
jge
and
or
neg
sbb
fild
push
cmps
push
dec
add
outs
mov
or
push
hlt
jg
adc
cmp
or
lds
sub
add
jmp
jnp
imul
(bad)
das
fcom
cwde
mov
adc
push
jge
in
mov
loopne
mov
mov
ror
mov
cmp
icebp
stc
xor
inc
mov
cdq
pop
(bad)
loope
js
add
dec
mov
mov
xchg
inc
ins
push
adc
jne
or
mov
and
ins
and
loopne
cld
lds
push
shr
lea
inc
call
mov
pop
hlt
fwait
imul
adc
jmp
cmp
lods
lds
pop
outs
add
mov
inc
mov
loop
sti
add
jp
std
and
in
sbb
mov
retf
cmp
call
pusha
mov
push
jnp
in
aaa
scas
cmp
cmp
mov
sbb
sbb
sub
int
pop
pop
xchg
push
and
jmp
push
pop
xchg
adc
jg
leave
mov
pop
loop
(bad)
jmp
jb
push
jecxz
popf
out
imul
or
fild
js
ins
jecxz
push
cli
inc
pop
cdq
sub
stc
jg
sbb
inc
daa
out
stos
pop
fmulp
dec
lods
pop
aam
scas
lods
ja
pop
cmp
or
inc
cmp
pop
outs
dec
mov
mov
ins
xchg
cdq
sub
arpl
es
xchg
(bad)
or
pop
test
fisttp
jle
sbb
sub
test
imul
cmp
test
lds
inc
sub
pop
loopne
push
(bad)
movnti
aam
dec
xchg
fwait
(bad)
jp
inc
cmp
(bad)
scas
pop
inc
sbb
push
mov
and
and
outs
cmps
fs
add
pop
jae
rcr
movs
sbb
fld
(bad)
out
sub
lahf
(bad)
arpl
cmc
mov
cmp
in
mov
cmp
and
scas
pop
ss
inc
add
js
(bad)
iret
cld
sbb
or
mov
xchg
loope
ins
sbb
test
add
lods
repnz
inc
shl
add
xchg
(bad)
sti
mov
sar
shl
and
movs
inc
mov
jnp
mov
sbb
mov
in
call
pop
movs
movs
pop
leave
mov
and
cmp
ret
push
or
sbb
sbb
mov
xor
push
sar
adc
aam
add
jmp
mov
rol
mov
xchg
mov
sbb
lahf
lods
adc
cmp
std
cmp
push
test
push
fs
sbb
xchg
mov
(bad)
mov
repnz
test
push
rol
ficomp
in
or
and
movs
mov
or
jp
pop
mov
or
daa
push
pop
inc
ror
cmps
test
jno
ret
add
pop
inc
and
inc
mov
gs
fnstsw
aam
repz
xchg
and
out
outs
cmp
in
stc
jmp
sub
int3
xor
mov
xor
loope
daa
pop
mov
pop
jmp
pop
and
ins
xor
aas
outs
lds
xchg
ins
popa
out
ficomp
mov
hlt
push
jo
js
movs
push
mov
popf
or
mov
aaa
je
cld
outs
or
out
xchg
or
(bad)
(bad)
imul
add
pop
jae
ds
call
inc
std
pop
jno
add
dec
cld
push
adc
repz
pop
push
mov
(bad)
and
leave
std
loopne
cdq
js
mov
and
sbb
mov
aad
mov
gs
xchg
fiadd
cmps
and
push
sbb
stos
lds
mov
inc
daa
out
aam
pop
mov
sub
fisubr
rol
ss
mov
in
jns
in
sar
fadd
or
leave
dec
sbb
lahf
test
sbb
dec
or
pop
(bad)
mov
imul
cli
pop
mul
add
call
call
cmp
pop
mov
pop
cmps
ret
cmp
cmp
lods
(bad)
fst
loopne
mov
jg
div
mov
cld
cli
mov
sti
out
cmp
pop
mov
ss
mov
sbb
shl
push
cld
(bad)
out
sbb
push
mov
cld
lods
xchg
cmp
in
add
(bad)
adc
loope
sbb
and
clc
dec
in
test
aam
std
xchg
jae
xlat
xchg
retf
(bad)
stc
ss
mov
stos
adc
and
shl
inc
xchg
mov
jl
cmp
dec
mov
xchg
jae
inc
std
lock
ins
clc
cdq
in
popa
movs
fisttp
push
shl
cli
retf
and
stc
push
retf
int3
and
add
fstp
and
pusha
sar
ret
ins
xchg
(bad)
jb
cmc
dec
inc
movs
cld
push
pop
aas
aam
(bad)
inc
mul
popf
push
shr
dec
push
in
push
push
sub
dec
pop
jge
or
rol
ror
outs
push
dec
call
retf
je
xor
pop
dec
pop
cmp
pop
adc
ret
test
or
movs
test
outs
add
out
cs
push
imul
iret
sub
mov
out
fsubr
sub
outs
mov
in
jnp
std
sub
add
sbb
sbb
xor
cs
rol
mov
das
imul
mov
loopne
or
add
sbb
mov
pop
dec
out
cli
push
loopne
cmp
mov
outs
jg
test
(bad)
idiv
loop
call
dec
inc
nop
out
xchg
push
inc
jae
sbb
push
sbb
dec
sub
int3
ins
jle
sbb
and
push
lds
jnp
icebp
cmp
out
(bad)
rcl
mov
inc
and
into
cs
lods
sbb
inc
gs
scas
pushf
neg
adc
pushf
pushf
fwait
push
imul
or
repnz
(bad)
int
cmp
mov
push
xchg
mov
outs
mov
dec
xchg
xchg
aaa
cmps
das
dec
or
xchg
ins
shl
mov
push
xchg
dec
fcmovnu
mov
(bad)
pop
jp
pushf
ins
jg
add
cmps
cld
ins
dec
pop
retf
es
retf
push
adc
lods
das
mov
fld
xchg
mov
sbb
mov
loop
xor
and
lock
pop
(bad)
fwait
inc
rcr
(bad)
dec
mov
xor
sar
pop
cmc
sbb
fwait
or
sbb
mov
fs
fs
call
mov
jns
xor
mov
idiv
stos
stos
jne
repnz
das
movs
ror
bound
std
das
ret
jmp
xchg
xchg
into
pop
mov
ds
fs
in
pop
adc
jg
mov
dec
out
xchg
jge
and
and
js
mov
adc
cmp
mov
dec
adc
cmp
test
mov
add
stc
fist
out
cld
mov
je
push
pop
shl
pusha
xchg
fadd
in
xchg
call
or
adc
ficomp
xchg
xchg
mov
pop
and
sti
adc
cmps
loope
inc
int3
dec
out
data16
dec
or
jg
(bad)
lock
mov
sbb
unpckhps
mov
cdq
clc
sbb
fmul
jge
inc
add
xor
fmul
mov
sbb
je
mov
stos
adc
or
jg
cwde
jle
adc
je
adc
push
pop
cmps
and
es
fwait
sbb
adc
lea
hlt
retf
scas
nop
aam
shl
fsubr
(bad)
cmp
or
mov
and
mov
or
dec
mov
sahf
cmp
xchg
sub
pop
mov
ds
xor
fwait
dec
fcmovnu
pusha
out
stos
add
inc
jne
push
stos
sbb
bound
jmp
js
lahf
lods
xchg
aad
arpl
rol
push
call
out
push
xchg
inc
pop
loope
push
call
sub
mov
cmp
jbe
sbb
cs
jp
xchg
mov
pop
into
shl
cmp
popa
test
xchg
(bad)
push
jl
pop
jp
das
push
cmp
mov
inc
sub
inc
pusha
inc
pop
aaa
mov
fs
pusha
mov
rcl
jle
imul
and
(bad)
sbb
les
shr
xor
cmps
mov
std
add
pop
push
inc
sub
push
test
add
pop
and
outs
cmovle
sub
in
add
pop
pop
push
xchg
sbb
jp
int3
sbb
icebp
adc
int
xchg
adc
jne
push
lahf
into
adc
mov
xor
ins
test
xor
mov
inc
ret
xor
inc
dec
dec
dec
add
xchg
cwde
pusha
or
mov
in
icebp
mov
pop
cmps
dec
sbb
test
scas
push
or
pop
gs
fcomp
xor
in
loop
ss
jp
jb
add
pop
lods
daa
fidiv
sub
ret
lahf
pushf
dec
mov
mov
push
sub
mov
mov
daa
cmp
dec
jg
pusha
test
lods
je
adc
dec
je
les
push
hlt
nop
cwde
pop
mov
(bad)
pop
inc
jbe
(bad)
adc
(bad)
jp
lds
icebp
stos
jno
enter
mov
arpl
sub
(bad)
jmp
push
mov
add
repnz
xchg
fisubr
out
xchg
xchg
pop
mov
mov
and
ins
inc
cmc
jle
inc
out
lods
xor
cmc
and
cmp
dec
xor
cmps
pop
pop
sbb
ins
adc
fsub
push
xchg
rol
movs
aaa
push
out
jg
aam
imul
gs
and
cdq
mov
xor
sbb
sbb
and
add
mov
push
aad
inc
lea
loopne
xor
sar
out
sar
xor
(bad)
(bad)
cmp
stc
push
jg
mov
jno
pop
dec
add
jbe
sbb
jo
push
inc
mov
lock
add
cmps
cmp
and
out
ret
daa
or
cmp
xchg
cdq
std
push
or
push
cs
shl
mov
scas
dec
mov
scas
xor
lahf
xchg
xor
xor
ffreep
mov
jnp
cmc
push
ja
xor
aad
push
jno
pop
mov
cmc
jnp
cdq
stos
adc
sets
out
(bad)
imul
push
into
(bad)
sahf
mov
iret
mov
mov
xor
inc
aam
mov
sub
(bad)
shl
rol
cmc
xor
fidivr
push
jp
fs
sbb
loope
rcr
fcomp
xor
inc
pop
mov
jns
inc
loope
xchg
add
shl
fcomp
not
lds
aam
retf
lods
repnz
lahf
(bad)
popf
xchg
jae
(bad)
ret
or
shl
cmp
jnp
xchg
jmp
push
inc
imul
add
push
jl
mov
bound
add
stc
(bad)
sub
hlt
push
mov
adc
sahf
inc
aam
push
(bad)
(bad)
pop
sub
jmp
(bad)
mov
cli
dec
clc
int3
cmps
(bad)
fild
cmp
sti
cmc
mov
jg
daa
sti
shl
(bad)
(bad)
inc
stc
xlat
dec
dec
test
pusha
or
jg
add
stc
js
mov
jle
aaa
out
scas
xchg
inc
jle
pop
test
into
and
ror
repz
retf
es
stos
add
inc
xchg
push
or
xor
aas
lahf
das
stos
arpl
movs
add
shl
retf
cmc
push
movs
pop
outs
xchg
push
pop
xor
mov
push
push
shr
xchg
mov
(bad)
fmul
jg
ins
scas
jecxz
fld
icebp
scas
and
push
test
pop
dec
test
xchg
mov
movs
xchg
sar
sub
(bad)
out
pop
cmp
mov
cmps
mov
je
inc
inc
leave
out
xor
out
rol
pusha
mov
cmps
(bad)
add
push
fwait
clc
es
xor
fcmovnb
popa
stc
int
xchg
pop
adc
push
add
jbe
mov
cmp
and
and
pushf
call
push
ror
cmp
dec
repz
pop
imul
pop
sbb
inc
in
(bad)
mov
imul
pushf
out
mov
lods
or
mov
mov
and
in
and
pusha
out
push
test
lock
pusha
sub
adc
dec
cmp
jnp
cdq
mov
rol
loope
int3
out
lock
cmp
add
hlt
push
call
hlt
xor
sbb
fnsave
xor
es
dec
fcomp
inc
jne
(bad)
clc
cli
jg
sub
jge
(bad)
scas
mov
sbb
xor
dec
xchg
ror
jno
mov
inc
xor
arpl
in
or
jmp
cli
xchg
retf
pop
mov
rcr
mov
loop
cmps
xchg
cmp
pop
mov
xchg
add
mov
lods
adc
ds
mov
xor
loop
ret
loopne
xor
and
loope
aas
mov
or
mov
aam
cli
scas
stos
push
popf
jl
sbb
mov
jp
jne
add
mov
and
add
mov
outs
push
rcr
lods
out
cli
addr16
dec
dec
xchg
(bad)
push
and
sub
rcr
stc
mov
(bad)
fld
inc
push
adc
pop
jecxz
mov
(bad)
jns
jg
mov
pop
mov
dec
fst
dec
inc
pop
pop
pop
shl
and
inc
sub
sbb
cmp
xchg
mov
out
popa
mov
imul
pop
dec
pop
outs
shl
aaa
jp
dec
mov
test
mov
dec
data16
jbe
push
mov
pop
mov
in
imul
jo
jmp
add
sbb
(bad)
mov
adc
mov
out
aaa
mov
(bad)
mov
lock
arpl
js
dec
or
pop
idiv
xor
inc
jnp
into
pop
cmc
imul
aad
dec
retf
pushf
push
jmp
mov
sbb
loopne
(bad)
or
(bad)
stos
pusha
enter
pop
int
cmp
mov
cwde
mov
out
lea
das
mov
adc
das
out
sahf
imul
dec
push
xor
cmp
or
xlat
pop
mov
jmp
fidivr
dec
inc
das
lods
pusha
jecxz
xchg
add
push
sbb
cmc
sub
mov
mov
cmp
iret
sbb
add
dec
int
fwait
imul
in
adc
fdiv
imul
jae
pushf
rcr
fwait
pop
scas
sbb
mov
sbb
xlat
inc
div
popf
pop
ins
push
inc
fs
daa
cmp
and
imul
test
psllw
div
repz
push
mov
ss
mov
jmp
je
ja
sub
stc
shr
jb
(bad)
push
dec
loop
and
push
add
not
jmp
iret
(bad)
sbb
test
cmp
inc
cmps
aas
lods
outs
mov
(bad)
pop
jne
fwait
shl
push
lds
sub
es
pop
xor
jge
retf
leave
sbb
cld
cmps
inc
push
xor
cmp
mov
mov
jp
push
cld
(bad)
xor
push
xor
pop
repz
jns
cs
adc
jp
pop
sbb
jl
adc
mov
add
stc
call
out
das
sub
xchg
int3
fst
popf
xor
pop
popa
jb
mov
rcl
js
(bad)
fistp
aam
test
out
cmps
lods
mov
movs
xchg
addr16
sub
fsub
mov
outs
test
push
sub
je
ja
das
enter
mov
mov
mov
jmp
adc
sub
mov
leave
mov
cmc
adc
lods
xor
pop
ins
sar
ja
aaa
push
arpl
mov
mov
and
iret
mov
cs
pop
aad
adc
mov
mov
(bad)
and
adc
dec
mov
jne
mov
movs
adc
pop
mov
and
pop
pop
mov
xchg
adc
cdq
sub
inc
rcl
jge
mov
retf
add
or
dec
aam
xchg
cmp
(bad)
rol
call
retf
add
adc
shl
fstp
jns
lahf
mov
outs
lods
dec
sti
stos
or
xchg
mov
sbb
adc
push
pop
xchg
icebp
int
mov
push
stc
and
jl
ret
cmp
sbb
push
lods
xchg
mov
mov
xchg
ja
inc
sub
iret
std
jnp
and
cmp
test
inc
retf
sub
pop
push
add
shr
inc
aam
cmc
repz
mov
test
loopne
shr
inc
test
icebp
and
xor
jg
pop
scas
jne
pop
fcmovb
dec
test
mov
mov
inc
inc
es
into
outs
sahf
inc
push
pusha
push
cmp
sbb
xchg
inc
mov
sub
ret
arpl
jae
mov
jmp
cmp
inc
in
dec
inc
aad
hlt
inc
(bad)
mov
mov
cs
(bad)
or
out
jge
add
imul
push
fdiv
xchg
jmp
(bad)
mov
add
or
daa
sub
xchg
ror
inc
xor
jmp
les
call
leave
je
and
pop
arpl
and
dec
pop
(bad)
hlt
daa
pop
adc
aad
pop
scas
xor
mov
add
mov
repz
ret
dec
pushf
test
inc
fadd
daa
mov
packsswb
mov
cmp
sub
xor
popa
stos
sub
pop
jo
sbb
fadd
pop
ror
mov
loop
leave
add
mov
pop
out
jno
jnp
lods
arpl
icebp
xor
scas
lods
into
and
fiadd
cmp
mov
and
dec
mov
or
out
xchg
inc
jnp
in
or
and
les
cmp
cmp
pop
fisubr
sub
jns
cmp
es
call
pop
icebp
xchg
data16
retf
push
pop
adc
adc
xchg
mov
push
rcr
add
jmp
out
movs
(bad)
sub
pop
sbb
retf
cdq
(bad)
in
adc
sub
mov
cmp
and
mov
adc
adc
retf
inc
mov
pop
sub
dec
add
xor
fs
mov
addps
and
cmp
dec
jge
test
lahf
push
mov
(bad)
jns
mov
cmp
mov
test
adc
push
pop
and
or
jo
or
push
lds
mov
icebp
lods
add
neg
pusha
mov
cdq
sbb
xchg
jg
mov
arpl
inc
sbb
ins
unpcklps
or
adc
in
hlt
(bad)
add
xor
je
mov
sub
fs
ds
dec
idiv
xchg
cld
dec
jp
mov
aad
mov
gs
sbb
xchg
(bad)
push
shrd
cmp
mov
fistp
rcl
fdivr
in
lods
pushf
jo
adc
jp
pop
adc
ret
mov
inc
outs
inc
cmc
sbb
repz
movs
rcl
inc
das
jmp
pop
es
fs
mov
jno
jg
loope
jae
sub
iret
push
sbb
xor
push
enter
pop
imul
mov
in
xchg
ss
mov
mov
repnz
push
sub
jne
or
sbb
mov
jecxz
scas
push
call
sbb
pop
or
clc
fwait
jge
hlt
jo
aaa
ins
mov
push
cwde
mov
cmc
ret
test
mov
call
int3
add
xchg
outs
retf
jbe
jb
mov
fidivr
inc
mov
stos
jp
push
push
jecxz
dec
adc
mov
pop
jle
jo
test
outs
(bad)
icebp
jmp
in
mov
dec
loop
popa
cmp
mov
cld
adc
and
stos
pusha
mov
jb
mov
in
or
xchg
cs
repnz
mov
daa
xchg
fadd
arpl
ret
jp
or
pop
sbb
pusha
inc
ds
mov
imul
ret
xchg
popa
movs
cmp
or
out
ffree
cmp
(bad)
fs
ja
mul
mov
je
shl
das
stc
sbb
and
cwde
fwait
xchg
sbb
mov
aas
repnz
mov
jl
movs
sub
fidiv
mov
sahf
and
fwait
mov
cdq
sbb
inc
jl
je
cwde
ret
ins
js
push
ror
(bad)
std
jle
lock
aam
lods
sub
mov
movs
mov
dec
jmp
xor
es
add
out
rol
add
call
cmc
xchg
mov
sbb
fxtract
push
test
mov
mov
imul
cmps
ja
test
push
out
cmps
movs
add
mov
xor
push
mov
jns
das
js
dec
mov
jmp
ds
mov
mov
fs
xor
xchg
dec
pushf
call
and
push
pushf
das
mov
enter
and
int3
push
jmp
mov
(bad)
mov
jg
loope
lock
mov
and
mov
ja
cdq
sbb
cmp
push
dec
add
xchg
ja
es
addr16
mov
pmulhw
pop
push
inc
sbb
push
adc
xchg
or
push
jmp
push
push
outs
outs
xor
in
push
jmp
ss
jmp
mov
arpl
neg
std
or
mov
and
pop
rol
(bad)
sub
pusha
or
jne
inc
and
lea
push
loopne
or
(bad)
sti
xchg
aaa
sbb
retf
push
adc
pop
cwde
aaa
dec
retf
clc
fisub
jbe
jl
xchg
cmps
sti
xlat
jmp
mov
cmp
retf
fbld
dec
in
sub
pop
ins
scas
mov
(bad)
cmp
hlt
mov
jns
pop
xchg
pop
dec
mov
sub
inc
xor
rol
sbb
pop
imul
cdq
adc
mov
retf
shl
fs
or
shr
movs
mov
leave
imul
es
xchg
mov
arpl
rcr
push
add
aas
test
mov
imul
test
push
call
iret
adc
icebp
aaa
aas
push
mov
cmp
pusha
fsub
mov
lahf
sub
mov
adc
hlt
int3
(bad)
test
jo
popa
(bad)
fdivr
sub
sub
inc
xor
or
ror
pop
inc
pushf
jge
mov
ins
fistp
pop
pop
retf
sbb
pop
dec
cmp
push
outs
in
or
(bad)
fcomp
xor
mov
inc
add
cmp
mov
ja
stos
fs
cld
icebp
inc
test
inc
out
fucomi
ret
dec
push
jmp
out
cdq
mov
mov
add
dec
and
fmul
push
outs
pop
xchg
inc
call
cwde
push
push
mov
in
xchg
cmp
(bad)
or
cmp
fdivr
call
jmp
and
hlt
ins
js
add
xchg
fimul
add
not
movs
mov
jecxz
dec
pop
cmps
and
xor
leave
add
cmp
dec
push
mov
and
test
mov
pop
fsub
clc
jae
jmp
imul
and
mov
sbb
push
and
inc
or
movs
retf
lods
popa
inc
pop
into
(bad)
or
int
cmp
xor
js
add
rcl
lods
adc
jmp
mov
mov
mov
ins
cmp
(bad)
scas
dec
arpl
push
test
into
cmp
out
pushf
jecxz
mov
retf
dec
add
sub
and
je
fs
in
add
int3
out
cmps
xor
push
push
or
loopne
rcr
leave
jge
ficomp
aam
xor
or
pop
inc
sub
sbb
test
(bad)
popf
test
psrlw
push
and
sahf
cmp
mov
xlat
xchg
xor
mov
mov
inc
sbb
pop
inc
add
mov
and
ficomp
ret
pop
ins
stos
mov
jecxz
into
in
iret
cld
mov
movs
aad
adc
cmp
mov
test
test
sbb
and
mov
retf
mov
stos
adc
shr
pop
mov
out
jge
jno
fwait
test
jge
jl
cmp
sub
pop
retf
pop
jnp
push
movs
sti
inc
xchg
pop
mov
daa
dec
jg
cwde
add
stos
ror
pop
sub
mov
stc
dec
inc
jmp
aad
mov
repz
popf
pop
bnd
sar
inc
pushf
cmp
idiv
mov
push
ror
(bad)
fldenv
cs
movs
mov
dec
cmps
outs
pop
movs
retf
ss
fbld
push
pop
adc
sub
or
enter
call
xchg
fsubr
lahf
das
jno
sbb
dec
push
push
add
pop
xor
or
or
test
sbb
and
inc
xchg
adc
fbstp
cmc
loopne
in
push
(bad)
lds
in
or
sub
mov
movs
stos
fild
cmps
push
adc
sub
ret
popf
ja
xchg
sub
shl
(bad)
fldenv
jge
rol
push
fnstenv
dec
mov
test
into
lds
hlt
es
sub
mov
rcr
adc
dec
adc
or
sub
mov
adc
vmwrite
push
sbb
movs
jge
cwde
mov
pop
sub
add
xlat
stos
loop
dec
adc
lahf
stos
sub
mov
push
dec
cmp
rcr
add
sub
aas
dec
movs
sbb
sub
push
ret
inc
gs
pop
hlt
or
sbb
jmp
xchg
adc
idiv
fcmovu
cmp
das
arpl
jnp
sub
jns
outs
mov
pop
mov
mov
dec
dec
sbb
inc
cdq
sub
or
mov
xchg
sub
or
sbb
push
(bad)
pop
push
cs
jmp
leave
out
(bad)
fxch
and
(bad)
mov
mov
pop
add
xchg
ja
(bad)
mov
jle
xchg
(bad)
sub
fs
push
xor
fsubr
retf
jmp
sar
jp
enter
cmps
test
leave
sbb
inc
inc
or
or
or
test
sbb
push
mov
cmp
inc
icebp
and
dec
xlat
pop
cmp
(bad)
loope
cmps
dec
mov
inc
mov
and
sbb
int3
mov
and
mov
jmp
imul
lds
ds
xchg
cmp
pop
inc
xchg
jecxz
cmp
xchg
mov
and
imul
jmp
outs
pop
xchg
loopne
adc
out
push
jge
xor
daa
and
sbb
add
mov
add
xchg
(bad)
pop
push
add
inc
mov
aad
mov
pop
xchg
and
mov
sbb
ror
jg
int
popf
push
in
fistp
test
push
xor
ds
mov
icebp
jno
dec
lea
iret
jb
jl
clc
sti
push
adc
arpl
mov
sub
mov
int3
jl
adc
mov
jb
jns
call
and
out
dec
mov
adc
push
xchg
test
imul
(bad)
mov
push
movs
and
xor
add
call
out
outs
stos
jo
mov
mov
jb
sar
dec
(bad)
push
xlat
xor
and
lds
inc
mov
push
mov
jns
push
jmp
leave
mov
or
add
xor
and
sti
dec
dec
push
sub
fs
sub
fs
pop
dec
pop
int3
dec
cmps
fidiv
sbb
jns
cmp
int
add
stos
inc
jnp
adc
cmp
jbe
call
and
inc
cmc
pop
mov
call
sbb
lock
cmp
inc
mov
ficom
lds
ins
jae
scas
call
(bad)
icebp
(bad)
out
ret
(bad)
cmp
add
inc
push
sbb
mov
out
sub
inc
retf
sahf
jbe
bound
jmp
pop
pop
clc
xchg
(bad)
mov
mov
dec
int
xchg
push
sub
pcmpgtd
ins
push
fwait
add
int
push
cld
out
test
push
jnp
in
jne
mov
push
test
jno
inc
push
push
add
(bad)
jb
or
pop
jb
xor
fnstsw
lock
ja
in
mov
sub
or
jle
fdiv
(bad)
add
add
inc
push
pop
mov
test
jl
mov
(bad)
int3
pusha
push
pop
ja
xchg
hlt
inc
and
cli
in
cld
cmp
push
or
adc
sbb
outs
adc
int
(bad)
loopne
pop
sub
loopne
lds
xchg
movs
and
jb
add
lods
jne
ja
cmps
adc
daa
test
xor
js
nop
cli
adc
jnp
std
adc
mov
cli
lock
ret
cmps
retf
das
mov
push
cmp
push
and
fisub
lods
dec
arpl
pop
loope
adc
or
cmp
pxor
enter
sub
push
push
test
in
and
jp
lods
cli
imul
push
jmp
mov
cmp
pop
xor
pop
xchg
scas
test
outs
addr16
xchg
jb
adc
sub
fdivr
dec
mov
adc
mov
into
out
inc
cmp
inc
std
or
or
sub
loope
dec
addr16
inc
fadd
xchg
xor
stos
jle
push
test
cli
xchg
sbb
push
in
out
mov
dec
leave
jmp
jmp
mov
iret
cmp
sbb
loope
sbb
dec
stc
add
stc
mov
and
and
dec
xchg
adc
loope
and
pusha
fsubr
inc
shl
mov
pusha
not
pop
in
sub
or
or
push
inc
sbb
(bad)
loopne
jae
clc
fidiv
movs
add
jno
mov
adc
movs
inc
xchg
aam
pop
inc
lds
stos
(bad)
pop
sbb
xchg
enter
add
jae
pop
nop
iret
add
aad
shr
and
or
push
enter
pop
adc
rcr
fadd
int
push
sub
jle
rcl
fmulp
sar
lods
dec
xchg
or
pop
lahf
dec
mov
mov
xchg
int3
fucom
stos
data16
sti
in
ja
enter
xchg
jo
mov
dec
mov
jle
daa
push
pop
(bad)
or
ja
inc
pop
repnz
xor
js
stc
(bad)
jmp
fcmovu
xlat
mov
sar
(bad)
pop
cs
mov
cmp
or
jmp
mov
mov
cmp
mov
out
add
fstp
mov
mov
jb
arpl
dec
inc
and
or
pop
xchg
(bad)
adc
dec
aad
adc
aas
push
imul
dec
rcr
cld
retf
(bad)
test
and
xchg
and
stc
xor
add
push
iret
jp
pop
cmps
mov
sub
int
mov
cmp
loope
loopne
sar
(bad)
sbb
stc
jmp
ficom
xchg
and
xchg
xor
add
inc
or
inc
mov
test
in
aas
mov
or
dec
push
nop
or
shl
cld
lock
jp
jg
add
add
cdq
pop
cmp
jbe
ss
push
mov
sbb
mov
mov
pop
ja
cld
pusha
xchg
add
xchg
fiadd
daa
pop
jmp
out
push
shl
test
arpl
xchg
mov
movs
pop
jno
scas
pop
into
stos
xchg
ret
iret
enter
cli
jecxz
dec
jl
add
mov
adc
inc
int
ret
shl
hlt
retf
xchg
push
cmp
popf
jmp
dec
xor
mov
pop
or
icebp
leave
retf
in
into
sbb
call
mov
add
imul
sub
jmp
jbe
cmps
and
sbb
shr
push
pop
lods
cwde
jl
rcl
movs
dec
outs
out
inc
sub
fxch
or
sub
inc
sbb
stc
(bad)
dec
out
leave
mov
icebp
sub
dec
adc
ret
dec
ret
test
cs
test
je
mov
iret
or
or
iret
cwde
jns
mov
push
push
repz
inc
retf
add
add
push
in
xor
xor
rcr
loop
inc
inc
fcomp
sbb
stc
sti
(bad)
adc
dec
sbb
mov
ds
pop
mov
lea
jle
xchg
dec
nop
mov
cdq
out
(bad)
cmc
stos
mov
lods
xlat
(bad)
sbb
lock
and
aaa
into
stos
sbb
outs
jecxz
fwait
mov
lea
std
sub
push
cmp
push
bound
fld
inc
xchg
ficomp
sbb
ret
hlt
xchg
loopne
(bad)
mov
fnstenv
retf
mov
movs
adc
xor
cli
push
push
pop
add
adc
sar
rol
mul
lock
cmps
inc
push
inc
push
mov
clc
bound
cmp
push
mov
pop
xchg
mov
xchg
adc
mov
add
and
outs
imul
mov
or
sbb
push
or
pop
sbb
out
aaa
loopne
jno
xor
sbb
xlat
leave
sti
nop
mov
ror
(bad)
or
repz
pop
push
inc
bound
mov
push
mov
add
inc
and
jo
aad
in
rcl
shl
jl
adc
push
sbb
imul
mov
push
mov
in
(bad)
(bad)
aaa
inc
div
(bad)
sbb
adc
cld
jb
cmp
cmp
jmp
jnp
pop
or
rol
sahf
gs
fcomp
sub
xchg
jl
and
das
mov
inc
sub
push
jmp
stos
(bad)
pop
push
arpl
movs
mov
test
fst
xor
out
sti
mov
leave
cmp
cmp
inc
jg
retf
fbstp
sar
outs
je
retf
idiv
stos
inc
inc
add
mov
stos
jg
in
shl
mov
addr16
enter
call
mov
(bad)
leave
sbb
rcl
inc
or
jp
(bad)
mov
loope
sbb
dec
fistp
pusha
cmp
pslld
push
cmp
or
lds
in
(bad)
xor
fsubr
jl
mov
push
cwde
sub
sub
arpl
cmc
into
(bad)
fwait
cmp
(bad)
rcl
add
rcl
mov
scas
mov
mov
dec
test
xchg
js
add
xlat
js
add
imul
fsubrp
cdq
fadd
in
rcr
jae
cmp
adc
imul
jmp
adc
in
inc
lods
popa
ins
stc
(bad)
lea
cmpxchg
push
jp
aam
or
out
xor
in
mov
scas
adc
xchg
call
mov
sar
lods
gs
mov
clc
out
cmp
rep
dec
pop
add
and
dec
cld
dec
mov
shl
sar
or
fdivr
jmp
push
retf
rol
adc
mov
shl
not
mov
inc
mov
arpl
lds
cmp
fwait
les
nop
ret
push
mov
push
dec
adc
scas
outs
mov
repz
adc
in
ret
pop
cli
push
jns
mov
pop
mov
dec
or
push
dec
enter
movs
jecxz
mov
nop
xchg
sub
adc
ja
cmp
ins
xchg
jo
out
enter
pushf
in
pop
lods
xchg
arpl
push
ja
sub
xchg
sub
and
and
imul
push
test
or
hlt
scas
mov
(bad)
call
imul
xor
mov
(bad)
inc
inc
inc
shr
lss
push
xchg
adc
test
sbb
(bad)
ins
pop
mov
loope
iret
sub
sti
add
fwait
and
ds
dec
in
test
jmp
das
jmp
movd
stc
push
hlt
addr16
mov
mov
xor
in
ret
jae
or
xchg
and
sti
dec
(bad)
in
xchg
cdq
pop
rcr
cmp
in
aam
xchg
xchg
mov
scas
jl
(bad)
push
(bad)
jo
dec
out
pop
xchg
push
scas
inc
loopne
lahf
adc
test
fst
cmp
mov
in
loopne
cmp
les
pusha
leave
addr16
mov
xor
mov
ret
mov
mov
jle
xor
(bad)
(bad)
hlt
les
pop
mov
or
out
cwde
xchg
dec
mov
sti
mov
(bad)
mov
dec
(bad)
bound
imul
jb
push
pop
push
mov
mov
fs
imul
dec
push
aad
data16
push
gs
retf
sbb
mov
adc
push
push
les
jg
aas
fucom
mov
mov
aad
sub
mov
push
xchg
fstp
jae
ja
cmps
scas
mov
pop
pop
lahf
pop
(bad)
enter
mov
cmp
mov
pusha
iret
dec
mov
cmp
jb
cmps
or
aad
xor
ins
outs
test
not
inc
push
or
add
xor
retf
mov
inc
jecxz
imul
cli
pop
rol
imul
inc
fsqrt
mov
mov
aas
pop
aas
dec
xchg
stos
retf
scas
push
ss
mov
sar
add
mov
sbb
sbb
push
ror
mov
jp
adc
sbb
in
sbb
or
sti
xchg
pop
mul
test
jg
sub
cmp
sub
ins
out
xchg
je
sub
scas
or
pop
pop
mov
or
ins
xchg
mov
aas
mov
mov
mov
fs
test
xchg
outs
mov
repnz
ins
pop
sbb
xchg
mov
sbb
ds
mov
das
ins
(bad)
out
scas
mov
lock
sbb
inc
pop
push
mov
mul
(bad)
ins
pop
scas
ret
cmps
xchg
add
lods
dec
lds
mov
xchg
cdq
sbb
and
sub
retf
pop
jns
cmp
pusha
gs
jl
pop
ins
imul
pop
sbb
les
inc
xchg
xchg
jne
ds
(bad)
mov
sbb
pop
cli
fdiv
mov
push
lea
pop
push
int
or
pusha
sub
push
je
adc
inc
gs
and
jmp
call
inc
stos
scas
loope
scas
sbb
sub
div
nop
fistp
pop
leave
xor
lds
lds
dec
cld
push
out
mov
cmp
push
inc
pushf
pop
test
adc
xchg
aad
cmp
mov
fs
jnp
cmp
inc
push
pop
jp
ja
out
jo
icebp
mov
jns
(bad)
(bad)
in
inc
inc
jecxz
and
loop
add
inc
xchg
add
mov
push
fdiv
iret
popa
jp
je
cmp
cmp
xor
pop
fsubr
cmc
dec
cmp
mov
stos
cld
retf
mov
push
sub
pop
push
push
movs
pusha
push
xchg
push
retf
adc
dec
pop
add
lahf
fistp
mov
(bad)
(bad)
les
xchg
(bad)
outs
inc
cmp
mov
cmp
mov
aas
movs
mov
push
push
test
xor
mov
mov
aas
xacquire
scas
test
outs
inc
add
adc
xor
arpl
mov
pop
dec
add
mov
push
fiadd
dec
js
aad
pop
xchg
ror
xchg
xchg
cmps
xor
imul
jl
je
mov
into
xchg
fsubr
mov
xor
sbb
pop
push
xor
test
dec
pop
sub
xchg
and
daa
ins
ret
or
jle
adc
adc
push
out
and
rcl
pop
out
fadd
mov
xlat
inc
cld
call
or
push
inc
int
mov
aad
push
sub
leave
jecxz
leave
and
retf
aam
jmp
fstp
lds
(bad)
push
adc
pop
imul
jg
cmps
sub
inc
mov
or
stc
test
xor
sbb
aas
call
inc
rcl
adc
pop
push
mov
fadd
sbb
xchg
aad
add
cmps
fidivr
push
xor
lods
pop
cwde
jl
push
test
fcomp
mov
or
aas
mov
shr
out
and
mov
and
pop
(bad)
lock
mov
mov
xchg
mov
aam
cld
xchg
mov
cwde
aaa
inc
fild
jmp
les
retf
retf
out
stos
dec
data16
xor
and
lods
(bad)
pop
pop
in
pop
or
ret
out
nop
mov
xor
jns
not
lea
mov
sub
mov
jb
xchg
rcr
xlat
fild
mov
loopne
sub
dec
pop
xor
fcomp
sti
sbb
cs
(bad)
lahf
aad
mov
movs
mov
fstp
mov
loopne
popf
xchg
out
add
xchg
xor
(bad)
jmp
jge
dec
add
xchg
dec
xor
sub
add
xchg
push
mov
push
sbb
and
push
clc
add
out
outs
ror
pop
dec
fsubr
jno
pop
inc
or
ret
sub
in
shl
cmps
mov
push
pop
ja
popf
sti
popf
add
dec
jg
push
outs
fsub
pushf
dec
sbb
ret
rcr
dec
cmp
cmps
(bad)
ret
lods
fstp
push
sti
sbb
push
or
movs
sbb
ins
(bad)
pop
xchg
fmul
xor
shr
mov
out
add
test
xchg
sahf
outs
movs
inc
cmp
inc
mov
mov
in
adc
mov
pop
inc
scas
inc
pavgb
mov
cmps
sbb
inc
into
push
test
std
add
leave
mov
jb
mov
sub
sub
xor
(bad)
ins
adc
ins
and
add
inc
push
fsub
pop
fcmovbe
cmp
sbb
jne
jns
sbb
mov
call
mov
pop
xchg
fild
push
clc
jb
sbb
mov
jg
sub
inc
inc
idiv
aam
ret
mov
push
mov
mov
inc
hlt
retf
not
enter
pop
bound
aam
sbb
stos
add
fwait
pop
mov
pop
push
repz
gs
sahf
int3
pop
hlt
mov
in
mov
data16
and
xor
jmp
xchg
sbb
dec
rcr
jo
ss
mov
sub
mov
mov
pusha
adc
xor
and
movs
dec
xor
and
in
push
and
sar
rcr
add
lods
cdq
pop
jmp
jecxz
push
sbb
cmp
sub
int
xor
jnp
cwde
leave
cld
fsubr
or
(bad)
mov
xor
outs
sbb
fidivr
in
sub
fistp
jp
add
sbb
int
lock
sahf
and
mov
cmps
jge
jae
push
fdiv
lea
repz
sbb
mov
ins
dec
stos
je
xchg
inc
add
pop
xor
outs
cmp
vpsrld
and
lahf
fdivr
sub
aam
inc
loope
mov
jae
popf
retf
aad
loop
push
push
sahf
inc
test
pop
sbb
rol
xchg
xor
or
fwait
ins
dec
jns
les
or
fwait
push
(bad)
(bad)
ins
ins
cmp
sub
adc
scas
mov
inc
inc
xchg
addr16
xchg
adc
and
inc
ret
inc
(bad)
jg
addr16
dec
imul
ficom
pop
and
and
(bad)
repz
xor
jno
pop
mov
mov
mov
push
shl
enter
aas
outs
jnp
out
fisubr
xchg
and
retf
adc
pop
aam
mov
pop
jge
popa
(bad)
popf
fcomp
jg
(bad)
lock
jge
iret
cmp
bound
mov
movs
nop
in
data16
mov
xor
daa
sbb
stc
xchg
pop
bound
mov
mov
setl
cdq
(bad)
jno
es
inc
cdq
or
jg
cs
push
mov
jo
ror
cs
cmp
sbb
mov
div
jo
add
jns
test
in
and
pop
(bad)
rcr
movs
test
add
jge
jne
in
(bad)
and
std
mov
sbb
xor
pop
jmp
jo
mov
xchg
enter
cmps
adc
xor
and
mul
mov
scas
ret
fwait
push
push
adc
lea
mov
cmps
sbb
mov
cmp
je
sub
push
sar
icebp
cmps
iret
dec
cwde
or
(bad)
pop
push
out
mov
or
iret
call
jnp
test
xchg
dec
sbb
and
jno
mov
push
in
cld
push
pop
adc
add
mov
add
push
mov
ret
lock
lock
das
dec
cs
es
call
pop
ins
rcl
mov
dec
retf
sub
ret
lahf
mov
fsubr
in
xor
push
fcomp
jb
js
cwde
mov
test
cmp
dec
mov
xor
test
dec
xor
lods
jmp
mov
fsub
xlat
mov
cmp
int3
pushf
ja
jmp
dec
push
xor
mov
sbb
outs
pop
lods
pusha
xchg
dec
in
push
int3
and
dec
fs
stos
push
mov
ins
xor
lds
aaa
frndint
dec
fcmovnu
add
xchg
jl
(bad)
popf
xlat
adc
cli
mov
mov
push
adc
pop
add
(bad)
xchg
sub
fiadd
cmp
loope
out
jno
mov
xchg
das
sbb
xchg
in
jg
aad
cmc
mov
or
mov
sbb
push
mov
cmp
(bad)
sub
mov
pop
adc
pop
xchg
into
addr16
rol
lock
in
mov
scas
dec
inc
pop
jp
rcl
push
inc
in
jo
jge
scas
cmp
xchg
pop
int3
sub
xchg
and
sbb
pop
lea
bnd
dec
fs
fst
cli
mov
out
push
dec
ins
pop
inc
pop
out
js
pop
std
xadd
pop
dec
ins
cmp
inc
(bad)
inc
cmps
xor
dec
fucomi
std
adc
rol
outs
es
dec
mov
movs
push
sbb
fstp
dec
cmp
cld
arpl
popa
xchg
je
xchg
cmp
bound
adc
lods
adc
adc
clc
repz
ds
mov
xchg
cmps
movs
push
pop
shl
dec
ror
or
fild
ja
pop
jmp
fist
and
loope
push
lahf
mov
lahf
and
cmc
xchg
ins
mov
sahf
shl
popf
dec
lahf
pop
ret
call
pop
fst
jp
loopne
and
rol
mov
mov
js
ja
push
push
push
out
mov
outs
pop
fdiv
add
xor
inc
sub
arpl
and
push
jo
loop
or
shr
push
jge
loopne
sub
lods
daa
dec
(bad)
sbb
push
and
stos
xchg
aam
hlt
ror
repnz
sub
sub
push
in
out
cdq
in
xor
cmp
in
push
and
mov
jle
inc
adc
rcl
int3
mov
mov
xor
test
adc
mov
push
fild
mov
jns
(bad)
into
dec
mov
in
cmps
in
sbb
jnp
test
adc
fdiv
and
jmp
outs
mov
push
outs
lods
xor
or
in
mov
out
sub
cmp
cmps
pop
push
outs
cmc
cmp
push
adc
sub
jecxz
imul
(bad)
dec
mov
xor
sub
imul
cs
push
rol
pop
mov
pop
movs
test
in
push
fldcw
ins
push
and
mov
(bad)
icebp
inc
loop
push
cli
mov
inc
sub
aas
out
retf
jmp
sbb
add
and
outs
stos
sbb
in
adc
sbb
xor
movs
aaa
mov
dec
stos
jb
mov
outs
stos
xchg
mov
ins
cmp
inc
gs
fdivr
sbb
jge
cdq
and
(bad)
and
sub
pop
stos
sub
ss
movs
push
cli
ds
jo
xor
add
cmps
push
inc
or
cmovge
lds
out
lock
cmp
jb
les
inc
push
cmp
dec
fstp
push
xchg
add
mov
push
stos
sbb
jo
mov
ss
retf
cli
call
push
pop
or
mov
data16
jno
lock
pop
arpl
pop
xor
sub
mov
mov
or
fistp
dec
icebp
sar
add
jmp
cmp
(bad)
fsubr
call
jmp
mov
loope
aas
call
cli
add
sbb
je
jno
imul
xor
jns
popa
mov
call
ret
aas
adc
jae
cwde
test
je
gs
call
fsubr
sub
test
test
cld
mov
out
push
xchg
bound
mov
push
xor
sar
adc
mov
in
push
mov
or
pop
in
sahf
inc
loopne
fstp
push
lock
push
jl
cli
enter
and
and
mov
call
sub
dec
cmp
push
and
icebp
push
mov
test
loopne
jne
mov
and
sbb
add
push
xchg
fnstcw
stos
mov
(bad)
jns
mov
movs
mov
fisttp
imul
pop
xchg
leave
rcr
dec
dec
cli
push
adc
retf
fidiv
dec
aam
dec
adc
call
icebp
ins
pop
fisttp
ret
fs
jmp
push
in
out
add
sbb
adc
add
sbb
lock
inc
push
mov
cdq
fisttp
cli
arpl
xlat
mov
sub
popf
icebp
fadd
push
sub
mov
and
mov
mov
push
mov
cmp
and
repnz
addr16
out
stos
cli
sbb
sub
in
mov
dec
leave
jp
aad
ffreep
and
adc
in
push
xchg
hlt
mov
pop
imul
xor
mov
mov
scas
movs
jae
jo
push
iret
mov
hlt
movs
push
call
sbb
xchg
ins
sbb
add
mov
call
repnz
mov
mov
and
movs
adc
sti
jbe
or
inc
jae
ret
push
pop
inc
sub
(bad)
jmp
jmp
adc
push
xor
push
iret
gs
fwait
mov
test
sbb
cmps
ret
cmp
lock
data16
mov
dec
test
xor
mov
mov
lock
pop
repz
push
stos
xchg
sub
push
ins
xor
cmp
retf
mov
test
sub
mov
jecxz
int3
sbb
sbb
sub
test
aam
add
pop
sub
outs
sub
mov
call
inc
push
imul
add
xlat
pushf
dec
(bad)
sub
mov
cdq
pop
mov
jp
test
adc
test
fcmovnb
mov
or
pop
mov
add
gs
sbb
hlt
xor
sbb
mov
scas
test
ss
test
stc
sub
outs
add
cmp
push
add
push
(bad)
push
pop
jmp
pop
test
xchg
sub
jl
mov
mov
aas
mov
out
sahf
xchg
push
fscale
and
jmp
cmps
pop
push
jns
addr16
pop
hlt
or
mov
adc
outs
add
or
in
xchg
add
in
dec
cmps
xlat
xchg
and
ret
jbe
add
fld
cmp
adc
test
out
fsub
nop
or
fstp
ins
push
mov
mov
fst
sub
mov
movs
mov
(bad)
mov
push
xlat
pop
inc
fs
fcomp
jno
pop
repz
pushf
lods
xor
mov
push
push
jo
cmp
mov
clc
sti
popa
dec
mov
jp
sbb
bound
inc
outs
aas
xor
pop
iret
adc
(bad)
je
fcom
mov
xchg
aam
mov
pop
sbb
enter
cmp
ret
icebp
icebp
jg
std
push
and
(bad)
fisubr
dec
add
test
outs
push
lods
xchg
das
imul
cmp
mov
ins
jle
push
outs
push
data16
test
dec
jbe
inc
ins
in
out
mov
push
add
mov
pop
pop
not
sbb
mov
fdivr
ficom
dec
xchg
or
cmc
add
xor
nop
int3
sahf
add
not
aaa
dec
ds
rcr
lahf
rcr
js
jg
jo
push
nop
inc
cmc
push
call
jno
push
lods
fwait
mov
shl
mov
addr16
mov
xor
adc
pop
xchg
dec
jg
retf
retf
pop
sti
xor
rol
mov
xor
sahf
imul
rcr
add
(bad)
fcom
enter
(bad)
ds
bnd
call
xor
int3
imul
cmp
cmp
xchg
gs
cmps
and
xor
xchg
inc
inc
cdq
fadd
lock
adc
int
push
inc
mov
xchg
mov
sbb
(bad)
retf
fisub
jg
jae
mov
xchg
pop
ficom
lds
push
test
pop
jge
jl
in
xchg
leave
into
mov
mov
dec
scas
scas
aaa
icebp
pusha
pusha
stc
mov
xlat
mov
mov
or
mov
into
mov
mov
add
add
jne
stc
leave
aaa
cmp
jo
cmps
rcl
daa
push
push
cmp
inc
sbb
mov
aas
push
leave
dec
and
mov
dec
int
cwde
int
dec
out
shl
mov
mov
call
sub
ins
jno
sbb
jl
pop
push
outs
outs
icebp
cmp
pop
pop
jo
dec
out
aaa
mov
pop
add
aaa
je
imul
push
stos
ret
test
mov
sti
add
stos
xchg
out
cld
in
push
enter
push
xor
and
or
xchg
pushf
push
jae
dec
fimul
push
mov
jb
jae
and
mov
xchg
pop
repz
inc
sub
cld
sub
lock
outs
pop
dec
loop
inc
in
or
mov
xchg
mov
out
popa
cmp
dec
mul
std
jge
mov
mov
add
cs
mov
cmp
dec
adc
iret
icebp
ins
push
jae
lds
out
shl
sbb
movs
jle
sbb
cmp
(bad)
mov
xchg
xchg
(bad)
repz
pop
pop
push
retf
sub
jmp
das
in
inc
(bad)
aam
sbb
cmp
xchg
push
and
cmps
push
jae
lock
pop
fsubr
pop
pop
adc
pusha
(bad)
sbb
(bad)
sbb
jle
push
hlt
mov
jmp
in
dec
push
fnstsw
into
jbe
dec
div
(bad)
aad
add
fs
and
xchg
xchg
and
fistp
push
clc
jmp
mul
lahf
cmps
jo
pop
cmp
retf
jecxz
cmp
dec
shr
jno
xchg
retf
sub
outs
loopne
jp
pusha
dec
push
sti
sti
js
or
add
adc
push
and
cmp
jl
mov
fidivr
out
imul
jg
leave
xor
push
std
jnp
cmp
outs
dec
push
push
mov
dec
push
lods
(bad)
mov
dec
pop
cmp
pop
pushf
mov
dec
lea
lods
pop
cmp
jns
pop
push
mov
imul
cmc
mov
mov
pop
mov
xchg
call
ret
or
push
sbb
shl
xlat
push
cmp
call
add
pop
add
stos
int
and
retf
mov
pop
stos
shl
sbb
lock
movs
xchg
jmp
fistp
fidivr
test
or
cmp
imul
inc
mov
fs
cdq
setno
idiv
jnp
stos
test
push
mov
repnz
in
in
inc
pop
lods
mov
mov
fistp
pop
jecxz
(bad)
mov
jle
outs
ror
rcl
xchg
clc
cmc
(bad)
fcomi
inc
xor
xor
in
out
mov
and
retf
push
or
bound
adc
xor
cmp
xor
aaa
xchg
sub
or
inc
cli
cmps
mov
std
(bad)
shl
add
les
sbb
(bad)
into
es
lds
push
sub
inc
push
xchg
sbb
cld
xor
mov
mov
pushf
xchg
mov
mov
jge
mov
movs
and
dec
(bad)
sub
rol
aam
fwait
in
fstp
cmp
in
mov
pushf
fild
daa
sub
push
jno
in
lods
std
and
mov
(bad)
enter
(bad)
lods
push
lahf
in
popa
xchg
ja
imul
movs
jg
idiv
inc
inc
and
fistp
mov
scas
call
sbb
ss
rcl
add
push
sbb
inc
fwait
lods
add
rcl
xchg
push
push
cmp
cmovb
mov
xor
ror
sahf
dec
mov
and
icebp
or
jae
xor
push
jno
xchg
test
(bad)
aad
dec
jbe
mov
mov
push
adc
pop
adc
fldcw
add
push
mov
mov
xchg
mov
push
movs
popf
sbb
mov
add
shl
push
sub
pinsrw
mov
outs
into
pop
add
mov
mov
inc
jmp
sub
jb
sar
arpl
jae
sbb
(bad)
adc
dec
and
fdiv
or
push
das
mov
imul
les
pop
stos
sub
add
stc
rcl
or
add
popa
push
mov
push
sbb
pop
(bad)
pop
jmp
bound
sub
gs
clc
arpl
inc
neg
dec
xor
int
ss
enter
rol
sbb
ss
scas
and
(bad)
aad
xchg
or
pop
in
inc
cwde
cmp
std
pusha
mov
add
out
sahf
push
stos
sbb
in
push
(bad)
push
bound
and
lahf
cli
mov
cmps
or
and
(bad)
sub
out
mov
mov
push
call
stos
mov
sbb
aad
mov
idiv
nop
int
and
loop
jbe
in
and
xchg
jle
push
jo
jae
push
pop
sti
pop
and
enter
lahf
adc
bound
mov
xor
cmc
fnstenv
cdq
imul
loop
xor
add
add
adc
xchg
(bad)
call
icebp
test
push
cmps
loopne
fldenv
inc
cmp
stos
and
inc
mov
stc
sub
lea
and
(bad)
fdiv
sub
and
cmp
adc
mov
jmp
shl
cdq
ror
into
xchg
in
cmc
mov
cmp
pop
pop
jecxz
fdiv
mov
mov
cmps
push
popa
jp
sub
outs
outs
scas
pop
jle
dec
addr16
shr
dec
push
pop
mov
and
adc
fld
push
push
in
or
or
xchg
fcomi
xchg
shr
jp
xor
cwde
inc
int3
sbb
call
lods
push
mov
push
sbb
(bad)
clc
std
mov
sar
jmp
data16
repnz
fwait
stc
pop
jmp
pop
cs
mov
(bad)
jmp
or
jp
jg
ds
inc
in
mov
sahf
loope
push
adc
xchg
xchg
dec
call
test
jno
iret
sbb
test
sbb
(bad)
das
or
call
scas
sub
enter
mov
jp
int3
dec
shl
xor
add
dec
arpl
(bad)
mov
push
jp
adc
fbstp
xlat
fsubr
add
cmp
int3
fmul
sub
retf
outs
add
or
fdivr
das
jnp
fnsave
in
push
daa
sub
push
dec
cmps
call
jle
sub
push
aam
fnstcw
push
dec
daa
push
and
(bad)
push
mov
sbb
int3
cwde
xchg
mov
jmp
jecxz
xchg
aad
mov
add
sbb
cmp
jbe
adc
sbb
ins
and
(bad)
jecxz
inc
cmps
sbb
mov
xlat
mov
sbb
aam
push
call
inc
aad
shl
movs
je
sub
in
sar
iret
repnz
add
or
lods
add
xor
inc
xor
mov
add
iret
movs
hlt
(bad)
adc
push
(bad)
push
jmp
or
mov
aad
fmul
dec
push
neg
adc
pushw
jno
std
dec
mov
xchg
gs
(bad)
pop
mov
ds
jl
into
leave
sub
(bad)
cmps
add
xchg
mov
arpl
and
addr16
lds
push
dec
mov
jne
pop
push
mov
(bad)
out
out
popa
aas
add
repz
ret
fisubr
rcl
(bad)
(bad)
ret
inc
out
dec
adc
jno
lea
popw
fimul
gs
push
retf
in
and
pslld
push
sub
iret
stc
(bad)
adc
shr
gs
loopne
inc
push
and
xor
push
out
mov
jne
(bad)
xor
adc
rol
sub
xor
xor
clc
iret
and
cmp
mov
scas
fmul
test
aas
sbb
cmp
retf
loop
jne
sbb
push
adc
mov
xlat
fstp
xor
add
mov
push
icebp
cmp
test
xor
cmp
xchg
cmps
mov
jmp
xchg
sbb
and
pop
xor
cmp
jbe
mov
fwait
movs
add
out
lahf
jmp
fnstsw
test
pop
(bad)
in
fistp
iret
pop
lahf
dec
stc
enter
push
cwde
enter
jmp
cmp
shr
in
cmc
adc
cmps
adc
lahf
mov
test
mov
sar
gs
enter
jbe
cmp
add
iret
ins
sub
int
cmp
push
add
ds
in
sahf
add
mov
push
push
cli
mov
pushf
aam
push
pop
cmps
fwait
stc
scas
jmp
mov
mov
lods
inc
sbb
test
out
and
jns
adc
mov
rol
sub
sbb
and
and
xor
ret
mov
sub
add
je
js
xlat
stos
cmp
xchg
push
popa
lds
sbb
pop
and
xchg
and
dec
je
add
sar
hlt
pop
test
dec
fild
inc
mov
inc
outs
xchg
push
cmp
loopne
sbb
in
cmp
das
sbb
ret
jb
out
mov
iret
jno
add
inc
push
xchg
cli
adc
sbb
xor
or
sar
add
popf
hlt
adc
dec
sbb
iret
jo
jne
dec
dec
out
inc
mov
fisttp
daa
xchg
jmp
test
dec
dec
cwde
mov
iret
(bad)
adc
add
mov
push
cs
pop
lock
icebp
mov
popa
inc
fs
cli
test
inc
mov
cmp
mov
and
mov
(bad)
jae
pop
jl
(bad)
test
mov
cld
push
xlat
js
scas
dec
cmp
inc
xchg
sub
out
ss
inc
pop
add
lahf
dec
call
pop
cmp
outs
or
cmp
push
bound
sti
dec
fstp
xchg
mov
cmp
dec
scas
add
xchg
in
cld
in
fst
mov
lds
cwde
aas
daa
test
add
push
icebp
mov
xchg
and
jns
mov
in
inc
and
adc
and
popa
dec
adc
ins
arpl
mov
aad
and
push
jno
int
pop
test
push
addr16
ins
xchg
cwde
sub
test
ror
or
xchg
fstp
xor
and
dec
popa
rcr
les
ds
test
leave
sar
pop
pusha
cmp
mov
cdq
jbe
in
mov
stos
push
arpl
std
add
cmps
adc
push
inc
mov
xlat
rdmsr
enter
pop
daa
mov
fldl2e
popa
or
ds
xchg
mov
jg
(bad)
dec
jge
outs
mov
jnp
leave
or
or
mov
stos
pop
push
cmps
jge
ss
xor
fnstsw
sub
pop
(bad)
data16
mov
fs
xchg
es
push
outs
aaa
pop
or
add
xor
ret
push
aas
dec
repz
es
mov
pusha
xchg
cwde
(bad)
jle
mov
daa
popa
in
cmc
ror
rcl
sbb
clc
mov
(bad)
push
push
fidiv
call
sub
daa
cmp
enter
cmp
pop
xor
sub
push
adc
dec
rol
repz
mov
push
xchg
or
rcr
pop
pop
mov
popf
shl
sbb
inc
scas
outs
xlat
dec
jne
fadd
fcmovu
push
les
stos
cmp
into
lea
fwait
stos
and
mov
fwait
inc
push
clc
mov
outs
xchg
push
in
shr
movs
popa
adc
jb
jo
mov
sub
adc
sbb
popa
es
call
fs
ja
push
repnz
fxam
dec
mov
mov
ror
pop
(bad)
pop
cmps
push
in
in
cmp
sub
call
frstor
add
sub
mov
adc
fstp
add
or
outs
inc
sbb
sub
fdivrp
std
icebp
dec
movs
loope
ret
mov
arpl
rcr
fwait
ins
pop
les
add
add
inc
mov
mov
stos
aaa
js
mov
out
cmps
sbb
or
push
movs
sbb
xor
cwde
ret
jg
add
mov
int3
arpl
mov
mov
imul
ja
pop
xchg
outs
outs
stos
mov
leave
jno
inc
jmp
js
das
outs
cmp
repz
xchg
lock
pop
mov
jg
dec
cmps
or
sbb
fcmovu
and
adc
fiadd
adc
cmps
rep
mov
pop
int3
fstp
sbb
jle
dec
xor
in
std
xor
xchg
mov
or
cli
mov
stc
sbb
mov
mov
jp
sbb
retf
idiv
jmp
pop
xchg
ds
push
xchg
popa
xchg
addr16
dec
pop
xchg
out
out
cli
fwait
call
les
or
and
mov
mov
add
ret
mov
test
cmc
adc
pop
sub
add
mov
jg
adc
(bad)
jl
jle
adc
adc
inc
call
cmp
ss
fidivr
fldenv
adc
int
imul
sbb
test
in
and
in
xchg
xor
leave
jae
dec
out
rcr
shr
xor
sub
punpcklwd
in
es
xlat
mov
hlt
push
rcl
lds
fdivr
movs
cmp
mov
jb
fistp
clc
jp
and
stos
pop
aas
(bad)
cmps
pushf
and
inc
int3
mov
push
mov
mov
ret
not
sbb
lds
ds
and
test
jb
pop
mov
adc
jecxz
fadd
dec
cli
cdq
or
es
jp
or
add
mov
and
out
pop
sti
xor
add
scas
mov
ret
ins
pop
and
aaa
cmp
inc
repnz
dec
xchg
push
mov
xor
pop
gs
add
ins
mov
adc
pop
xlat
cmp
push
push
xor
pop
out
mov
mov
mov
cs
mov
pusha
fisub
sbb
jl
adc
sti
dec
repnz
mov
cdq
push
fild
pop
std
sbb
aad
je
and
mov
mov
in
push
in
xchg
mov
fstp
fstp
sbb
pop
pop
mov
je
(bad)
(bad)
and
sbb
int
bound
jne
icebp
aas
gs
dec
sbb
pushf
je
sub
jecxz
push
cmps
sub
sar
loope
sbb
pop
sub
sar
pop
xor
aaa
xor
lds
fcomi
sbb
dec
dec
cld
adc
fldcw
pop
or
push
or
and
mov
add
pop
dec
(bad)
mul
mov
into
dec
and
push
mov
xchg
sub
add
jl
mov
xchg
and
cmp
add
jno
jae
scas
adc
mov
and
cld
fwait
add
push
lods
aad
lahf
mul
add
stc
fild
cmp
cmps
shl
jmp
jo
mov
fs
out
and
xchg
dec
jno
(bad)
jg
cmp
xchg
mov
cmp
(bad)
sub
hlt
(bad)
hlt
jnp
mov
and
imul
es
cdq
outs
(bad)
retf
les
adc
add
cmp
js
jle
enter
std
outs
(bad)
rol
jae
add
dec
push
sbb
cmp
jl
xchg
push
(bad)
(bad)
add
pop
popa
nop
add
pop
push
(bad)
mov
(bad)
jmp
and
cli
imul
push
jns
fs
retf
movs
sbb
js
sbb
or
jge
nop
js
scas
je
jae
cli
sbb
iret
mov
dec
pop
mov
jbe
mov
xlat
dec
and
cld
ror
imul
add
pusha
div
mov
jg
jecxz
push
popa
mov
adc
xor
mov
jecxz
call
mov
dec
(bad)
rol
sub
fcmovb
mov
out
xchg
(bad)
sti
push
pop
lods
out
aaa
cmp
adc
cmp
or
dec
jns
in
pop
xor
arpl
in
push
or
jmp
cli
nop
out
xor
sub
lock
pop
ins
adc
movs
xchg
cld
mov
sub
shl
inc
fsub
loope
repz
xor
pop
in
add
(bad)
dec
xchg
in
mov
sti
pop
xor
inc
mov
xchg
dec
inc
movs
test
mov
pop
and
dec
(bad)
mov
sbb
rol
lods
dec
cdq
fwait
dec
test
repnz
lock
js
mov
popa
repz
loop
xor
shl
lahf
out
sub
(bad)
mov
movs
pop
mov
ror
pop
(bad)
push
fcomp
pusha
push
adc
push
aam
push
xchg
lods
cmp
add
outs
push
jno
xor
int
in
mov
or
mov
sub
call
xor
xchg
jno
sahf
xchg
repz
out
(bad)
aas
push
adc
sar
popf
xor
cmp
dec
mov
xchg
push
pop
ret
dec
loope
push
mov
xchg
inc
push
xchg
aaa
int3
pusha
inc
call
pop
out
or
sbb
int3
cmp
rol
sub
adc
(bad)
push
add
mov
enter
mov
movs
cmp
aad
cmps
jp
jg
shl
scas
mov
dec
rcl
shl
cwde
and
ror
mov
popf
es
mov
add
mov
lods
push
mov
sbb
test
lahf
pop
jle
mov
and
push
aad
js
rcr
push
mov
mov
xchg
mov
and
and
pop
dec
push
xchg
pop
sbb
sahf
imul
pop
ds
inc
mov
out
je
dec
and
pop
jg
xchg
loope
daa
adc
stos
cmp
xchg
mov
sub
imul
jecxz
stos
sbb
iret
inc
sbb
push
das
sbb
nop
mov
imul
adc
in
and
mov
(bad)
xchg
xor
fs
into
dec
xchg
xchg
scas
(bad)
mov
xor
int3
xor
adc
xor
rep
ss
and
dec
sub
cmp
xor
pop
xor
xor
and
outs
pop
pushf
push
adc
cmp
sub
xchg
test
jmp
mov
stos
pop
into
ret
or
not
(bad)
adc
mov
add
aas
xchg
xchg
ins
scas
jns
movs
jne
cmps
(bad)
push
lahf
pushf
adc
lods
sbb
mov
xchg
ds
mul
fisubr
add
sub
xlat
and
and
into
fsub
jmp
fnstcw
je
mov
xchg
retf
int3
cmp
leave
test
(bad)
(bad)
cmp
cs
push
pop
psrld
adc
test
xlat
cmp
ss
mov
jecxz
aad
test
jmp
xor
fnsave
ins
and
jnp
retf
xchg
fdiv
adc
lea
sub
idiv
adc
and
ss
pop
inc
pop
cs
or
fcmovnbe
jnp
adc
sahf
je
mov
cld
mov
dec
or
xchg
pushf
inc
mov
jg
pop
inc
cmp
in
cmp
icebp
ret
and
and
xor
in
push
mov
jp
push
mov
dec
inc
movs
movs
dec
addr16
mov
jl
mov
cwde
in
mov
add
scas
shl
mov
add
sbb
pop
push
push
out
add
mov
movs
push
push
sahf
call
lahf
mov
pushf
ja
leave
not
push
push
inc
adc
outs
pop
clc
repz
daa
loop
and
push
dec
add
mov
mov
and
pop
adc
jns
jo
rcl
aad
(bad)
(bad)
mov
mov
shr
inc
pushf
mul
or
xor
out
(bad)
scas
dec
stos
rol
int3
inc
fs
xor
cwde
fiadd
and
test
inc
imul
bound
fist
adc
aad
sahf
outs
repnz
aaa
sub
mov
daa
jne
mov
out
and
pop
inc
or
mov
(bad)
pop
pop
or
les
xlat
jns
(bad)
out
jl
cmp
imul
call
push
add
(bad)
ins
jecxz
mov
xchg
and
repz
pop
push
mov
lods
out
pop
cmp
jg
xchg
and
xchg
push
popa
aam
rcl
leave
repz
je
sar
push
cli
cs
loopne
inc
and
add
mov
mov
gs
and
jl
std
fsub
scas
(bad)
push
into
xchg
adc
inc
popf
xlat
div
call
cs
mov
in
xlat
or
je
popf
push
pusha
repz
cmp
mov
call
out
sbb
mov
cld
adc
(bad)
adc
nop
loope
(bad)
call
les
mov
sub
inc
add
pop
daa
push
aam
jno
push
or
mov
call
sub
sbb
dec
fmul
ins
pop
jo
rcl
ins
stos
cwde
mov
mov
and
pop
ins
icebp
xchg
dec
fwait
daa
sbb
jo
jns
or
idiv
push
adc
hlt
push
adc
sbb
jo
adc
mov
mov
sbb
cmps
add
fistp
cmps
add
jl
imul
and
mov
jp
stc
mul
lea
lahf
mov
push
mov
shr
xor
lods
add
pop
add
jae
sbb
repnz
call
aas
(bad)
das
push
iret
cmc
mov
xchg
imul
mov
std
retf
mov
mov
mov
(bad)
in
cmps
adc
sub
sbb
nop
(bad)
(bad)
pop
mov
xor
mov
dec
cmps
mov
adc
sbb
js
shr
and
inc
mov
push
imul
mov
jmp
fstp
or
adc
bound
call
add
sti
adc
shl
mov
lock
mov
out
cld
repnz
mov
mov
jge
add
xchg
ins
out
push
in
adc
cmp
add
mov
call
push
add
cmps
mov
mov
sbb
and
xchg
cmp
xor
(bad)
call
ror
xchg
call
call
mov
xlat
mov
adc
test
cmp
pop
sbb
scas
icebp
jae
dec
push
push
mov
call
sbb
fist
inc
and
icebp
or
popa
adc
mov
arpl
loop
inc
dec
jp
push
inc
inc
push
sbb
scas
dec
int3
xor
hlt
xchg
ud2
jbe
call
mov
xchg
mov
push
jmp
mov
cmp
in
jmp
movs
mov
out
test
jne
dec
scas
dec
xchg
test
mov
in
repz
mov
xor
sub
push
jae
pop
cmp
xor
pop
push
mov
sbb
pop
leave
push
dec
inc
xchg
jg
cs
mov
xchg
pushf
(bad)
jne
fmul
daa
ficom
dec
xor
sti
jo
jge
fwait
lock
cmp
cmp
push
mov
daa
imul
std
cmp
fimul
call
dec
pop
enter
out
bound
fwait
mov
cmp
and
cld
jle
stos
int
paddq
fwait
in
js
outs
dec
mov
mov
loop
push
clc
mov
retf
pop
sbb
inc
mov
(bad)
fsub
mov
or
mov
sbb
mov
fnsave
jo
mov
push
sti
stos
bound
popa
lds
gs
outs
pushf
jl
inc
aam
dec
aam
inc
push
int
sub
push
xor
add
dec
mov
test
movs
pushf
loope
cmp
daa
aaa
or
and
imul
add
imul
sbb
popa
in
mov
xchg
gs
adc
xchg
add
iret
push
dec
lods
cmp
lods
xchg
cmp
sub
push
ret
and
mov
xor
push
ins
repz
loopne
movs
mov
push
lea
mov
nop
in
fs
xchg
lock
jbe
call
dec
imul
jmp
aam
mov
sub
(bad)
xor
pop
sub
mov
dec
cmp
nop
adc
call
dec
lock
push
mov
adc
and
arpl
dec
aam
push
push
xor
bound
sbb
sub
mov
cmps
inc
xlat
pop
outs
or
out
xor
sbb
mov
sti
mov
sbb
cmp
out
sub
and
(bad)
loop
cmps
mov
and
xchg
repz
out
pop
popa
out
ja
sbb
lods
inc
test
sar
lods
das
fcom
std
retf
pop
pop
ds
cmp
xor
jecxz
inc
xchg
adc
mov
int
adc
cmps
stos
pop
jnp
dec
add
cmps
aaa
fisttp
pusha
push
push
arpl
inc
sub
mov
push
or
std
mov
sti
stos
out
pushf
(bad)
les
cmps
daa
sub
cwde
into
pop
sub
pop
jno
add
pop
mov
jno
inc
ins
loopne
sub
adc
das
loopne
std
mov
push
iret
push
adc
or
daa
mov
jne
add
inc
mov
or
inc
test
push
pop
push
cmp
add
pop
push
xchg
cmp
mov
cli
lods
iret
fiadd
cli
xchg
xor
jne
neg
inc
ins
mov
cld
sbb
push
push
movs
out
outs
outs
xor
cmp
fldcw
inc
push
push
dec
cmc
push
sbb
test
inc
push
push
mov
int
rcl
pop
xor
adc
movs
sbb
cdq
stos
dec
std
adc
inc
shr
les
jo
adc
adc
or
jne
and
call
mov
aas
or
jp
fidiv
inc
push
mov
mov
inc
mov
cmps
icebp
sub
outs
(bad)
test
inc
or
pop
fldenv
xchg
lock
enter
test
jb
out
ss
pop
adc
imul
push
fild
js
mov
pop
shl
jp
xchg
out
loop
xchg
fcom
ds
leave
mov
sub
or
push
cli
std
into
pop
(bad)
mov
cs
xchg
dec
ret
pop
loope
add
cmp
adc
adc
cdq
sub
outs
inc
xchg
out
in
fs
std
dec
jmp
push
xor
push
fisttp
sbb
repnz
mov
outs
dec
aad
sbb
hlt
xor
aam
fdiv
aam
jl
sub
jge
dec
mov
mov
movs
xor
mov
sub
dec
pop
inc
xchg
jle
sti
mov
cmp
leave
rcr
fst
xor
mov
cdq
push
ret
fs
lahf
pop
hlt
dec
inc
pop
mov
xor
sub
mov
in
mov
jno
clc
jns
xor
stos
bound
sbb
hlt
sub
dec
jmp
shl
xchg
sbb
mov
lods
in
(bad)
fsubr
ja
jae
fist
fs
cmp
int
cmp
pop
ret
sbb
sub
movs
pop
xchg
test
repz
or
cmp
dec
je
repz
pusha
mov
jbe
add
cdq
inc
and
xchg
je
jmp
(bad)
rcr
ror
or
push
and
test
movs
fs
mov
into
jbe
cmp
sar
sub
push
push
sbb
mov
mov
pop
pop
mov
jmp
add
sub
dec
mov
popa
push
in
cli
rcr
fsubr
sbb
jg
sbb
mov
cwde
ss
pop
ja
mov
mov
pop
clc
pop
adc
movs
(bad)
add
push
mov
or
inc
shl
sbb
into
sbb
mov
shl
(bad)
(bad)
sti
cdq
stc
cli
pop
jecxz
mov
pop
(bad)
sub
adc
and
retf
movs
pop
pcmpgtb
aad
add
and
push
test
ret
dec
into
xchg
rcr
in
add
out
retf
outs
loopne
not
ss
xchg
push
mov
mov
repz
cli
mov
mov
ja
(bad)
stc
fnstcw
clc
jmp
cmps
loope
rcr
xchg
jb
mov
sub
push
repnz
sub
jne
or
cmp
mov
cmp
cmp
nop
stc
dec
or
xchg
pop
and
add
jne
inc
stos
ja
leave
fucom
xchg
xchg
xor
rcr
cld
stos
inc
or
popf
mov
and
shl
mov
pushf
jns
push
cmc
stos
ja
mov
das
jne
iret
or
aad
movs
fcom
cmps
push
(bad)
fstp
les
fcom
test
jmp
push
stos
inc
test
ret
shl
mov
pushf
(bad)
sbb
rcl
cli
int3
sbb
pop
add
mov
js
retf
aas
out
push
arpl
(bad)
pop
gs
ret
cli
in
sub
hlt
adc
call
or
call
fistp
jbe
jae
jo
retf
xor
xor
aam
ret
cmc
xor
add
mov
xchg
jecxz
arpl
push
push
dec
sub
mov
stc
xchg
fsub
out
xor
in
and
push
lods
stos
pmaxub
jp
loope
push
cmp
mov
icebp
xor
ret
mov
fwait
push
cmc
push
jnp
jle
shl
shr
call
or
cdq
retfw
sbb
leave
mov
adc
mov
mov
cmps
sub
aam
(bad)
je
pushf
mov
(bad)
pop
ja
cmp
lods
jbe
pop
int
and
pop
aaa
ret
add
xor
mov
aad
lea
sbb
(bad)
shr
hlt
daa
or
pop
outs
pop
push
lods
sar
sub
(bad)
jo
adc
test
fcomp
pop
jo
(bad)
out
or
sub
adc
js
fnstsw
add
mov
or
add
sub
out
push
xchg
jb
inc
xlat
mov
test
(bad)
je
mov
aas
cmp
jae
ffree
push
jge
jp
fs
add
mov
in
stos
(bad)
nop
sete
imul
(bad)
stos
mov
shld
push
loopne
outs
movs
inc
mov
and
xchg
xlat
jp
cmp
fimul
or
mov
push
leave
or
mov
les
enter
nop
xchg
inc
lds
cld
jmp
xor
ja
or
pop
pop
shr
jno
out
mov
xor
sbb
ret
jge
fmul
cmp
cmp
inc
mov
xchg
mov
ins
xchg
adc
shr
(bad)
clc
ins
(bad)
sub
adc
mov
cmp
int3
pusha
rcr
xchg
out
xchg
stos
in
loope
or
pop
icebp
push
iret
pop
push
fs
outs
(bad)
imul
outs
add
pop
add
mov
dec
sbb
das
adc
or
jmp
cmp
inc
scas
xacquire
nop
sbb
cmc
inc
lea
inc
ds
dec
mov
dec
aas
adc
push
jno
jns
in
adc
fldcw
xor
js
lahf
sti
ins
xchg
jne
and
or
pop
(bad)
in
ds
and
inc
sbb
sub
adc
sub
imul
enter
stos
push
inc
xchg
mov
adc
mov
push
aaa
adc
sub
xchg
dec
cmps
pop
in
(bad)
(bad)
int
lods
into
and
and
and
ins
outs
cmp
call
div
fmulp
mov
out
sub
in
pop
cmp
jle
and
test
pop
adc
mov
fcom
sub
shl
cmps
mov
adc
pop
es
inc
sbb
ret
mov
faddp
inc
mov
ins
mov
movs
mov
xchg
mov
mov
dec
mov
jae
pop
ror
pop
xor
xchg
add
jnp
mov
in
push
ficom
jnp
mov
inc
jbe
mov
jo
out
pushf
repnz
adc
and
jmp
call
pop
jle
fisubr
mov
or
addr16
mov
bound
rol
push
out
xor
mov
mov
add
int
pop
imul
and
and
mov
sbb
pop
inc
arpl
push
daa
mov
sub
mov
sahf
and
retf
sub
out
adc
push
push
dec
xor
jno
xlat
push
(bad)
mov
push
test
aaa
or
imul
inc
pop
gs
stos
stos
cmp
loopne
inc
xchg
jle
cmp
nop
adc
sbb
repz
jge
adc
mov
test
nop
sub
adc
sahf
hlt
dec
and
popf
fwait
loope
ja
fwait
xchg
push
push
clc
aam
arpl
sbb
mov
lahf
ss
retf
xor
leave
rcl
mov
enter
lahf
cmp
dec
cmc
push
sbb
adc
or
movs
mov
mov
or
or
ss
add
lds
dec
lock
daa
aas
sbb
(bad)
pop
mov
inc
jb
push
gs
fiadd
push
sahf
push
push
addr16
ret
mulps
dec
pop
xchg
psrld
sbb
and
jnp
xor
popa
add
xor
mov
repnz
gs
mov
mov
adc
mov
or
cmps
enter
jnp
(bad)
in
stos
out
push
rcl
cmps
jae
(bad)
dec
mov
in
int3
pop
pusha
in
out
add
ins
les
clc
sub
ja
call
test
js
xchg
stos
jae
dec
neg
ins
jns
xchg
mov
and
dec
lods
enter
aad
idiv
mov
cmp
(bad)
pushf
lahf
fnstenv
ins
and
dec
xor
dec
fwait
or
dec
test
leave
fisubr
mov
fsubr
dec
mov
dec
push
cld
in
inc
ds
not
div
or
mov
movs
mov
imul
clc
sbb
shl
mov
jns
fidiv
pop
pop
repz
jmp
imul
mov
pop
aad
movs
daa
popf
frstor
lods
pop
sbb
popf
(bad)
cwde
xchg
inc
mov
push
call
or
push
(bad)
sub
movs
pop
fdiv
adc
rcl
test
iret
gs
movs
mov
mov
and
xor
ds
cdq
sbb
xlat
aas
out
dec
dec
jns
in
aad
(bad)
cmp
fcmovnb
mov
test
xor
call
bound
inc
test
xchg
mov
out
pop
(bad)
aaa
dec
push
jbe
(bad)
jecxz
jb
or
xchg
in
xchg
xchg
idiv
jno
dec
fst
test
mov
xor
jle
aas
nop
jmp
ins
clc
sub
inc
inc
clc
mov
lahf
push
and
adc
int
mov
mov
jae
jg
jecxz
aas
sub
arpl
push
push
add
inc
in
in
call
into
lahf
outs
pop
sub
dec
mov
jge
and
xchg
fwait
shl
fmulp
mov
rcr
mov
and
imul
fs
push
cmp
ror
dec
loop
xchg
bound
(bad)
call
cmps
and
mov
in
rcl
pop
in
xchg
sti
add
and
xor
fisub
and
xor
mov
mov
scas
sbb
cmc
mov
xor
(bad)
cwde
and
aas
loop
add
mov
fbld
(bad)
enter
xchg
cmp
inc
std
bound
pop
ret
ror
jmp
jge
not
adc
cmps
push
adc
leave
add
pushf
(bad)
daa
add
push
mov
cmp
ret
(bad)
push
pop
jnp
mov
in
adc
push
pop
adc
mov
pop
adc
mov
ret
imul
enter
lea
stc
sbb
cli
data16
adc
sbb
dec
xor
int
mov
lds
imul
add
aaa
cli
push
lods
pop
loop
js
inc
pop
xchg
pop
fs
stos
cmp
jae
xchg
xor
popa
push
sbb
iret
sbb
rcl
cmp
mov
cs
jmp
inc
stos
shr
loop
addr16
out
mov
call
ret
inc
pop
mov
rcl
push
int
ret
test
(bad)
popf
cmc
iret
int
pop
mov
out
cmps
or
mov
call
int3
imul
pusha
dec
mov
xor
clc
imul
leave
in
out
and
cli
cmp
ret
mov
iret
loope
dec
aad
push
mov
scas
push
mov
fisttp
cmps
or
add
jbe
in
xchg
mov
leave
mov
pop
push
xor
or
aad
and
inc
dec
inc
cmps
jb
ins
mov
outs
popa
sahf
push
in
imul
lahf
or
ror
add
and
dec
or
rcr
cmp
xor
aad
and
dec
mov
repz
leave
fstp
xchg
(bad)
or
ss
sub
add
ret
and
and
push
call
cmp
push
inc
or
push
mov
pop
sbb
sahf
lods
mov
call
xor
mov
call
pop
push
scas
dec
mov
test
cld
or
dec
movs
stos
cs
adc
dec
(bad)
fiadd
xor
in
ret
hlt
jge
mov
inc
mov
(bad)
shl
pusha
xchg
retf
or
adc
mov
(bad)
cld
fs
out
adc
in
jne
and
mov
push
push
mov
hlt
scas
in
jmp
push
dec
(bad)
xlat
ret
je
nop
sbb
jns
pop
cmp
fwait
pop
or
das
xor
cmp
pop
ins
jbe
pop
and
mov
das
hlt
out
aam
mov
push
retf
sbb
inc
(bad)
icebp
out
loop
and
xor
mov
lahf
adc
jno
dec
movs
cli
lds
xor
inc
push
push
mov
xor
(bad)
cmp
iret
imul
jge
pop
mov
scas
hlt
stc
dec
in
out
test
test
idiv
stos
dec
fisub
jge
outs
inc
push
enter
in
test
scas
push
mov
fdiv
jmp
inc
stos
adc
jae
movs
lahf
and
adc
push
xchg
push
push
(bad)
in
xchg
cmc
in
ss
mov
ins
adc
loope
fistp
push
mov
lahf
jp
xor
sub
mov
push
out
or
push
test
and
mov
inc
into
inc
test
push
ins
jmp
aad
jp
add
shl
fiadd
jnp
jp
icebp
les
repnz
inc
ds
mov
fwait
mov
movs
push
sub
out
cmp
sbb
add
push
mov
ret
push
xchg
(bad)
repz
jbe
add
mov
int3
test
push
scas
xlat
das
push
or
lahf
mov
adc
fimul
enter
nop
jmp
cli
mov
sub
stos
int3
sub
mov
mov
movs
cmp
lock
push
(bad)
jb
repnz
daa
xor
fisttp
add
add
xchg
push
xlat
and
fdivr
cld
sbb
mov
or
mov
mov
add
xchg
bound
cs
jecxz
adc
pusha
out
or
shl
test
xor
retf
imul
bound
cs
sbb
push
out
mov
cmp
sub
fimul
sub
xlat
xor
enter
sbb
and
call
mov
add
and
pushf
outs
in
cmp
mov
mov
dec
fs
dec
jge
mov
mul
pop
pop
call
dec
out
pop
mov
(bad)
push
out
mov
ins
pushf
jb
mov
mov
mov
sbb
jle
or
fwait
or
jge
push
xor
mov
inc
cmc
and
cmp
cwde
mov
push
mov
cdq
bound
jne
xlat
mov
fmulp
nop
jns
xchg
sub
push
mov
or
jecxz
retf
push
inc
enter
cwde
xchg
jge
xchg
repnz
icebp
cdq
lock
push
(bad)
mov
jmp
dec
push
dec
mov
mov
mov
ret
and
push
cwde
mov
pusha
(bad)
(bad)
out
cmp
in
outs
inc
ret
and
inc
in
dec
sbb
mov
cmps
add
das
jle
sub
mov
push
aam
mov
rcr
xchg
xchg
pushf
xlat
sbb
mov
pusha
xor
dec
movs
loope
fdivr
push
(bad)
xor
(bad)
sub
lock
xor
popa
pushf
push
and
xchg
mov
fdiv
mov
xchg
ret
sub
add
mov
ficomp
cmp
lahf
jecxz
jno
or
or
xchg
call
pop
or
rcr
push
jp
stc
mov
sbb
push
fstp
adc
and
or
(bad)
xor
fistp
dec
xor
inc
sub
outs
add
jb
cmc
jmp
cli
xor
xlat
cmp
cmp
and
cmps
adc
rcl
push
rol
or
push
mov
not
repnz
xchg
adc
sub
mov
add
and
push
cmp
cwde
push
jnp
fwait
inc
lea
lahf
xor
jge
mov
cli
lods
cmp
pushf
dec
test
inc
stos
and
stos
push
cdq
shl
idiv
leave
inc
cmp
mov
pop
mov
cli
ss
out
dec
dec
xchg
jo
sub
push
mov
xor
in
jg
fwait
push
int
or
mov
adc
pop
jge
daa
or
mov
(bad)
xchg
fs
xchg
inc
mov
mov
repz
or
(bad)
aad
dec
xor
div
push
popa
mov
xor
bswap
pop
out
push
lods
push
sbb
fst
dec
idiv
iret
mov
cmps
scas
cld
push
push
mov
mov
cmp
std
fadd
mov
sbb
cmps
out
stos
mov
int3
sbb
adc
cmp
jno
sbb
in
retf
jno
dec
mov
adc
sbb
repnz
jb
addr16
cmp
outs
enter
xor
mov
loop
cmp
push
xchg
jae
sbb
xchg
mov
aad
pop
rcl
dec
out
iret
cmp
lds
(bad)
cdq
jne
mov
imul
retf
push
fsubr
and
aas
sbb
cmp
pop
stos
sbb
mov
icebp
inc
add
adc
and
cmc
add
push
mov
lods
and
call
or
and
out
jo
jmp
xchg
dec
pop
mov
pop
out
cmp
test
inc
mov
arpl
xchg
cmp
pop
inc
jl
dec
sub
fdivrp
out
popa
mov
adc
dec
jecxz
aad
jne
loop
stos
jmp
in
in
cs
(bad)
xchg
ins
in
ficom
sub
xor
inc
sbb
and
je
jmp
cmp
adc
inc
dec
fwait
out
xchg
nop
xchg
cld
das
jge
xchg
mov
add
sbb
add
lods
jo
pusha
icebp
ja
sub
add
inc
xor
(bad)
push
inc
ss
dec
shl
adc
dec
inc
jns
dec
fsubr
(bad)
push
xor
sbb
fcom
loopne
mov
call
call
lahf
out
fcom
int3
add
shl
icebp
mov
cmc
and
mov
xlat
add
test
ds
adc
or
mov
aad
dec
retf
or
lock
sbb
aad
ins
xlat
call
loop
mov
fcom
aam
xor
pop
mov
jg
cmp
test
push
mov
mov
mov
jb
movs
mov
sbb
pop
push
sbb
call
lahf
sub
pop
mov
and
sbb
pop
int3
fs
cmc
ins
ret
jecxz
ins
dec
and
add
int
mov
js
loopne
push
mov
ins
mov
mov
inc
(bad)
push
mov
inc
sahf
mov
out
shl
test
fwait
mov
mov
jmp
push
shl
(bad)
mov
mov
fisttp
xchg
pop
mov
pop
push
ret
push
add
mov
jns
lods
imul
push
push
iret
push
in
sub
push
mov
sbb
jb
enter
cli
out
in
mov
jbe
jle
sub
mov
jp
push
add
fs
lods
add
pushf
lods
sub
retf
fs
out
(bad)
aas
ins
xchg
enter
ss
xchg
adc
jns
loopne
and
jmp
inc
push
inc
arpl
and
add
cmps
ins
xchg
gs
(bad)
and
icebp
imul
aaa
jg
fdivr
ror
jmp
sahf
sbb
addr16
in
mov
out
jle
add
inc
sub
push
cmp
(bad)
test
fwait
xor
mov
mov
mov
jbe
out
inc
bound
and
lock
psrlq
stc
pop
mov
(bad)
push
sti
jmp
jecxz
or
sub
aaa
xchg
and
or
push
cmp
sbb
xor
push
push
out
inc
bnd
and
repz
fisubr
jmp
lea
sub
inc
cmp
push
inc
jp
das
pushf
pop
xchg
inc
and
(bad)
sbb
popa
cwde
jecxz
cld
and
push
jp
rol
scas
daa
xor
mov
pop
sbb
sbb
adc
das
inc
sbb
sbb
inc
test
fcmove
or
aas
xchg
cmp
aad
sub
mov
mov
das
out
pop
push
out
push
xor
mov
adc
xlat
aas
mov
push
sahf
adc
(bad)
cmc
push
sti
sub
out
adc
into
nop
and
movs
push
xor
sbb
mov
outs
cmp
into
ret
add
in
sbb
les
sbb
push
inc
mov
neg
daa
in
leave
adc
jle
cmp
sbb
sbb
mov
jge
cwde
mov
or
cld
and
mov
jg
sar
add
das
inc
vhaddpd
psubw
adc
in
push
inc
mov
inc
mov
or
hlt
lea
sbb
imul
sbb
gs
in
cmps
out
xchg
data16
inc
fdiv
stc
ja
add
cmp
xchg
inc
in
leave
xchg
jb
xchg
pop
test
scas
fwait
stc
jnp
iret
mov
mov
addr16
call
iret
ja
sbb
hlt
xor
cwde
mov
(bad)
sbb
mov
adc
fmul
mov
enter
mov
test
ret
mov
les
xchg
push
cdq
adc
jg
sub
pop
mov
out
in
call
dec
cmp
bound
xchg
stos
hlt
jnp
mov
fisubr
xchg
mov
or
xchg
xor
test
lds
leave
dec
xor
ja
dec
mov
mov
adc
stos
dec
(bad)
cmp
mov
cld
outs
fsubr
mov
test
int3
fsubp
(bad)
cmp
push
fdivr
in
xchg
sbb
xor
ret
cmc
out
out
mov
aas
xchg
in
cs
inc
dec
cmp
jl
(bad)
cmc
movs
(bad)
aas
mov
push
cmp
ror
mov
pop
pop
jb
(bad)
jae
addr16
scas
inc
or
mov
call
adc
mov
sbb
sbb
loopne
stos
xor
mov
jns
dec
pop
mov
xor
cs
call
pop
sti
cmc
mov
push
pusha
push
aam
arpl
out
push
push
call
cmp
retf
loop
test
dec
add
mov
cmp
inc
cmps
fldcw
pop
cld
xor
add
mov
jae
xchg
aas
pusha
jle
dec
addr16
mov
and
xchg
cmp
call
cmp
cmps
icebp
pop
int
mov
call
xor
jns
xchg
dec
sbb
mov
mov
cmp
jp
pop
in
repz
out
fld
mov
out
mov
addr16
movs
fsub
loope
xchg
pop
mov
xchg
sbb
xor
lea
cs
movs
push
mov
xor
inc
les
jecxz
xor
mov
add
pop
aas
test
out
lock
cmp
mov
xor
call
ror
daa
xchg
jmp
adc
adc
retf
dec
pop
dec
jno
xchg
jns
mov
mov
fdivp
pop
cld
inc
push
dec
sub
push
pop
mov
dec
mov
shl
aam
frstor
sbb
aaa
xor
or
ret
mov
stc
push
pop
push
mov
inc
jge
adc
dec
pop
xor
ret
fcomp
and
xor
cmp
jp
mov
es
sub
cwde
cli
fld
call
lods
ins
add
add
inc
add
pop
push
pop
sub
xor
adc
mov
mov
mov
mov
outs
out
(bad)
dec
jae
jns
nop
push
int
lock
or
and
push
out
inc
push
adc
call
cmps
inc
jne
movs
cmp
or
jno
fs
leave
dec
adc
enter
inc
sub
dec
(bad)
icebp
lock
mov
ret
dec
inc
xchg
adc
and
adc
push
pop
icebp
xor
sbb
push
enter
out
fnsave
fisubr
leave
push
jns
lahf
adc
lods
aad
adc
and
mov
scas
lock
or
ss
(bad)
jmp
movs
sbb
test
cmp
ret
popa
inc
adc
cs
inc
or
pop
pop
xchg
mov
xchg
in
sar
jns
mov
lea
call
xchg
xchg
cmp
push
in
ret
and
fbstp
fdiv
add
xor
dec
mov
add
adc
mov
fcmovnu
mov
fsubr
aad
sbb
arpl
data16
frstor
imul
inc
jl
(bad)
int
mov
mov
add
retf
add
mov
imul
dec
push
call
ds
jb
shl
push
mov
scas
in
dec
test
aam
pop
mov
cs
sub
pop
pop
jno
pop
js
cmps
or
mul
mov
sub
xor
push
call
cmp
out
adc
pop
sub
ffreep
jb
cmp
jg
cdq
cmps
push
retf
lds
in
cs
movs
sub
jp
jecxz
retf
inc
push
add
push
jge
or
enter
leave
xchg
xor
cmp
fs
js
jnp
test
jno
stos
xor
lea
neg
cld
cs
and
or
outs
dec
ins
dec
jmp
mov
jle
push
mov
adc
push
gs
dec
clc
mov
push
cmps
cmp
xchg
inc
mov
movs
cmp
push
shl
adc
dec
cmp
inc
test
test
xchg
xchg
or
and
jp
jbe
jmp
shl
(bad)
ins
dec
in
jl
movs
sbb
cmp
pop
dec
iret
stos
and
lods
enter
mov
repnz
push
xor
clc
je
dec
jne
movs
cdq
sub
push
sbb
cdq
jl
das
daa
or
retf
sbb
outs
and
or
jno
hlt
not
sahf
sbb
pop
push
add
push
cmps
mov
mov
stos
jl
xor
sbb
popf
mov
ins
mov
outs
mov
popa
pop
js
inc
inc
hlt
rcl
xor
jb
xchg
cwde
repnz
dec
inc
and
mov
(bad)
out
mov
sub
mov
call
mov
xchg
das
lds
rcr
mov
jmp
aaa
stc
mov
adc
jge
mov
in
mov
jmp
add
adc
jae
enter
inc
mov
dec
sbb
push
sbb
jnp
outs
and
jg
dec
loopne
out
ins
movs
pop
std
xchg
test
out
mov
pop
mov
add
inc
add
(bad)
aad
xor
adc
adc
pop
cmp
mov
daa
ja
div
dec
into
mov
cmp
mov
out
test
rcr
jno
push
jecxz
mov
mov
and
repnz
xor
call
mov
mov
dec
jnp
dec
movs
pusha
cmp
dec
cmp
les
jo
sub
pop
aam
pop
cli
loope
mov
or
jbe
jne
enter
in
mov
xchg
xchg
jb
mov
aam
pop
daa
cmps
int
xor
daa
dec
ret
jne
ror
mov
hlt
dec
dec
jo
cld
xor
push
loope
fild
dec
cmp
dec
fistp
sbb
mov
dec
inc
cmps
fdiv
add
cmps
popf
aaa
bound
das
cs
jb
push
popa
std
or
and
cmps
in
fsubr
ss
repz
leave
imul
push
pop
mov
xor
pop
aaa
rol
outs
les
leave
fsubr
inc
daa
retf
cmc
(bad)
out
hlt
jmp
cmp
push
push
enter
jo
push
jo
push
addr16
test
iret
push
pop
jg
add
inc
into
jmp
pop
cwde
adc
out
std
pavgw
(bad)
arpl
mov
or
adc
dec
jns
movs
nop
stos
stos
icebp
gs
sbb
fisttp
repz
xor
imul
ret
xchg
sub
jp
clc
fld
int3
in
mov
data16
std
or
sahf
je
cmp
fiadd
(bad)
pop
imul
pop
es
clc
and
pop
inc
retf
inc
aad
cmc
cld
test
cs
add
inc
xchg
stos
push
aaa
stos
loop
retf
or
xor
popf
push
fstp
xchg
jbe
bound
xchg
test
out
mov
jae
test
xchg
xchg
xchg
add
call
adc
(bad)
sbb
movs
sbb
adc
aad
xor
fld
xor
sahf
psrld
or
dec
pop
push
fisttp
push
retf
mul
pop
add
push
stos
sbb
cdq
mov
add
call
in
add
les
xlat
mov
jb
pop
mov
adc
call
cmp
stos
sub
movs
cmp
sbb
lea
and
(bad)
push
xor
stos
mov
sbb
ror
mov
les
retf
sbb
jns
sets
out
pushf
sbb
mov
sbb
jo
adc
out
push
dec
ins
push
rol
imul
les
out
arpl
xor
bound
and
pusha
xor
dec
out
push
fisub
fwait
mov
call
pop
rol
mov
loope
ds
std
push
stc
or
push
lds
and
(bad)
aad
(bad)
scas
mov
pop
sub
jmp
cld
cmc
inc
and
bound
not
ds
inc
lock
inc
or
dec
cmp
loop
nop
xlat
xchg
shl
mov
pop
cmp
mov
dec
mov
xchg
or
shl
in
push
add
or
push
in
push
in
push
cdq
xchg
mov
aas
cmp
int
and
arpl
fdivr
jns
std
scas
push
or
xor
in
clc
out
pop
cmp
cmc
push
sub
mov
fldcw
pop
cmp
or
fs
cli
int3
and
xchg
jl
mov
mov
add
fnstcw
push
ret
data16
call
(bad)
xor
ins
(bad)
fisub
or
in
mov
adc
std
ins
cli
mul
xchg
xor
mov
js
mov
fucomp
push
xchg
inc
pushf
mov
or
jno
ja
data16
inc
call
xchg
or
in
sub
or
in
or
repz
inc
mov
retf
sbb
outs
pop
sub
jmp
leave
loopne
jecxz
out
into
sbb
jp
repnz
inc
sub
dec
mov
mov
test
push
sbb
sub
or
add
mov
or
fs
sbb
xchg
sub
pop
dec
arpl
je
or
push
xor
in
sbb
outs
add
test
out
dec
dec
jp
sbb
in
inc
ja
nop
inc
jb
stc
inc
mov
lea
out
ds
xor
pop
sub
das
mov
sub
dec
mov
into
and
inc
jmp
sub
dec
add
xchg
lock
mov
mov
bound
mov
and
jae
dec
jb
jmp
sbb
in
xchg
xor
mov
pop
mov
leave
cmps
jbe
add
mov
icebp
jp
add
jmp
xor
loopne
cmps
sub
icebp
inc
lds
xchg
cmp
xor
mov
loope
adc
push
outs
mov
sahf
je
xor
jo
loope
pop
xor
test
addr16
hlt
sbb
sbb
sar
imul
fdivr
inc
xor
cmp
sub
inc
in
adc
mov
pop
cmp
cld
push
ror
cwde
dec
imul
movs
lock
mov
push
aaa
and
dec
in
xlat
ins
or
in
jecxz
pop
lock
inc
(bad)
popf
pop
xchg
mov
or
push
pop
xchg
jnp
mov
push
cmp
sub
test
fisttp
ret
test
ins
mov
pop
sub
movs
in
nop
mov
adc
pop
(bad)
icebp
fisubr
ror
push
jmp
jns
fcmovne
push
mov
lock
adc
int
in
pop
mov
cld
out
sub
xchg
outs
xlat
jle
fdiv
cmps
xchg
test
xchg
lods
sbb
lods
adc
lea
xor
and
(bad)
mov
ins
test
sub
mov
ret
inc
xchg
sbb
jnp
rcl
fistp
in
stos
mov
cmps
rcr
dec
jbe
in
mov
bound
jae
pop
push
inc
sahf
(bad)
dec
xchg
stos
sahf
pop
div
mov
push
or
mov
pop
lods
es
sub
cdq
sar
mov
aam
in
arpl
and
inc
adc
aas
push
dec
inc
inc
push
out
dec
xor
out
xchg
dec
jg
mov
out
adc
ss
imul
sbb
movs
icebp
mov
mov
lods
leave
scas
or
ror
sbb
ror
cmps
and
sub
inc
mov
in
ror
xor
xchg
push
dec
and
pop
mov
or
or
repz
sub
add
out
xlat
(bad)
fst
push
pop
mov
fwait
ins
adc
cmp
inc
cmp
js
mov
push
out
and
add
pop
jecxz
push
push
das
xchg
mov
sahf
stos
jl
int
in
or
jg
mov
inc
sub
test
dec
daa
sbb
ror
adc
adc
pop
cmovs
(bad)
outs
add
mov
jns
loope
mov
popf
repnz
cmc
add
loop
sub
(bad)
sub
psubusw
lds
inc
dec
lods
jae
repz
xor
pushf
sbb
shl
cmps
js
daa
cli
push
out
xchg
mov
inc
pop
xchg
add
dec
loopne
out
jns
movs
cmp
xor
mov
push
imul
push
cs
jecxz
pop
mov
mov
mov
xor
jo
sti
in
popf
into
in
push
jge
xchg
mov
fisub
test
hlt
and
inc
sub
lock
bound
jo
ins
push
push
sub
mov
xor
leave
xchg
iret
loop
in
pushf
int
xchg
dec
lds
aaa
loop
mov
mov
in
adc
push
jl
call
dec
dec
mov
jp
cmc
adc
inc
mov
mov
xor
jnp
data16
outs
imul
mov
cli
mov
pop
mov
xchg
sub
lahf
repz
pop
sbb
mov
push
adc
adc
pop
pop
cs
and
mov
xchg
mov
fild
das
leave
sub
dec
pop
or
shl
loope
scas
sbb
in
adc
fcomp
pop
sub
leave
mov
rol
int3
push
mov
out
mov
or
das
mov
pop
and
inc
sbb
dec
fwait
mov
popf
push
shl
sbb
not
mov
out
cmp
push
add
cld
jmp
arpl
inc
std
jecxz
fidivr
xchg
jae
dec
in
repnz
or
xor
repz
loope
test
push
and
jnp
ret
jge
rcr
outs
mov
sub
push
inc
es
cli
vmread
mov
add
add
sub
dec
call
xchg
shl
(bad)
adc
js
pcmpgtd
mov
or
das
and
cmp
xor
jge
ds
sbb
std
mov
mov
xchg
mov
ret
lock
inc
std
imul
call
lea
sbb
mov
ss
pusha
movs
xor
fsubr
push
mov
(bad)
sub
sub
(bad)
std
fs
cmp
inc
mov
js
xchg
sahf
stc
out
push
fidivr
jge
(bad)
cmps
ret
jo
leave
jae
add
fidivr
lahf
mov
jle
pop
dec
mov
add
lds
pop
sar
push
mov
les
(bad)
cmp
cs
aad
push
les
scas
fs
hlt
scas
add
cmc
sbb
sbb
jnp
fdiv
es
in
jne
iret
cmp
leave
enter
stos
les
call
mov
nop
dec
(bad)
or
and
neg
inc
jmp
inc
in
test
pop
js
cdq
push
clc
push
mov
mov
cdq
cmc
xor
nop
sub
loopne
rol
movs
ins
or
fnsave
sti
mov
loope
sub
or
adc
in
test
ja
adc
cmps
pop
fld
ss
outs
cmp
rol
es
xchg
int
fsubr
fnstcw
out
into
pop
int
ror
cmps
xchg
scas
sbb
and
fistp
cld
out
adc
cdq
inc
pop
div
stos
adc
shl
in
jne
add
cli
dec
xor
jne
sbb
and
mov
pop
xchg
icebp
pop
mov
mov
pop
xor
clc
iret
jg
aaa
fdiv
or
jb
inc
push
rcl
mov
fidivr
sbb
shl
adc
jmp
jae
push
clc
mov
(bad)
mov
adc
bound
sbb
rol
inc
shl
mov
mov
xor
lds
adc
test
cdq
test
jp
addr16
push
ss
movs
arpl
add
fimul
lock
xor
std
xchg
fmul
sbb
fcos
inc
pop
pop
cwde
fnstcw
repz
jecxz
je
and
cmp
or
out
sbb
adc
add
fwait
inc
xchg
xchg
or
jmp
sbb
dec
repnz
mov
in
add
mov
lds
stos
xor
imul
into
xchg
inc
mov
add
cmp
adc
xchg
clc
loop
mov
inc
ret
push
imul
fst
sahf
sub
xchg
stos
sbb
in
sbb
push
out
push
rol
pop
xor
fs
jb
(bad)
or
cdq
clc
adc
test
xchg
ss
adc
or
enter
jmp
fwait
or
cmp
sub
bound
aaa
adc
sbb
(bad)
pop
and
inc
mov
(bad)
dec
cmps
or
adc
push
fstp
sti
lock
cmp
addr16
aam
retf
push
pop
sbb
push
in
jne
fadd
push
retf
scas
stos
test
xchg
jno
popf
adc
pop
data16
imul
(bad)
pusha
(bad)
pop
jae
std
clc
adc
jmp
xchg
jnp
cmp
dec
push
fwait
aas
(bad)
jne
add
movs
(bad)
addr16
(bad)
fxch
add
jnp
in
mov
mov
cs
test
cld
or
adc
aas
(bad)
or
std
mov
(bad)
pop
mov
push
push
and
mov
dec
mov
xchg
mov
aam
nop
mov
js
and
stos
mov
es
test
dec
xor
mov
add
sub
mov
dec
dec
not
in
scas
mov
xchg
dec
retf
add
rcr
push
aam
loopne
sbb
pushf
mov
mov
in
test
test
mov
shl
lea
mov
jmp
cwde
ds
dec
fwait
out
mov
adc
sbb
jge
test
loop
sbb
lock
push
mov
dec
repnz
pop
sub
mov
add
cdq
push
(bad)
cmc
adc
jns
les
aam
xor
test
and
stos
data16
add
sub
jbe
std
jb
mov
out
sub
mov
mov
leave
hlt
fild
add
mov
or
jb
or
jb
dec
push
add
push
icebp
sub
in
repz
mov
push
repnz
dec
cs
push
xor
jle
dec
or
lea
cdq
inc
cmp
call
or
dec
jge
add
cmp
lea
rep
outs
(bad)
pushf
leave
cmp
fnstenv
mov
inc
add
into
ds
ds
fistp
test
call
cmps
daa
bound
(bad)
jmp
call
fs
ins
jo
or
movs
pop
mov
ds
push
mov
add
ja
sbb
cmp
sbb
mov
js
jp
mov
and
loop
dec
push
jno
mov
sub
and
fisubr
adc
and
ins
jecxz
and
inc
push
(bad)
fcom
ins
stos
mov
adc
inc
enter
lds
mov
shr
out
pusha
xchg
jbe
dec
hlt
and
std
in
push
test
jnp
dec
pop
xchg
jnp
push
out
leave
push
sbb
xor
out
xchg
je
test
sub
nop
add
shl
scas
sahf
in
ror
stos
enter
ins
or
(bad)
xchg
push
std
add
sub
and
sub
call
or
sub
mov
aaa
std
ror
fdiv
add
mov
jmp
or
mov
inc
and
sbb
popf
sbb
mov
rol
jbe
mov
arpl
pop
cmp
out
ror
lods
pop
(bad)
shl
cmp
lock
jge
or
mov
pop
inc
push
pop
mov
jne
xor
fidiv
mov
out
push
int3
cdq
std
xchg
rcr
sub
das
cmps
ror
add
(bad)
sbb
dec
rcl
out
not
test
xchg
mov
bound
push
cmp
ins
xchg
fdivr
xchg
movs
mov
in
stos
mov
sar
cmp
fld
cmp
mov
cli
mov
jo
std
inc
pop
xchg
push
int3
xchg
aam
push
pop
arpl
ds
jno
call
loope
clc
mov
sub
sbb
xchg
repz
adc
mov
cmps
idiv
mov
push
sti
sub
mov
imul
fwait
inc
imul
sub
lea
enter
xlat
mov
mov
cmp
push
daa
test
add
cwde
out
and
loop
stos
push
dec
and
repnz
or
push
mov
(bad)
test
and
lea
inc
push
aad
fiadd
dec
xchg
sbb
shl
stos
jb
cmp
hlt
cmp
daa
iret
idiv
imul
sbb
cli
aas
push
mov
or
bswap
dec
mov
lods
push
dec
lahf
fcom
push
xlat
xlat
add
jmp
sbb
shl
loop
rcl
popa
in
jae
pop
call
mov
cli
adc
sub
ja
mov
and
ins
xchg
xchg
fwait
mov
mov
inc
mov
add
fisubr
or
in
pop
xchg
inc
out
xor
mov
xchg
inc
mov
cmp
and
retf
xchg
and
mov
push
jp
out
add
icebp
jge
add
ss
push
into
xor
in
pop
dec
mov
dec
test
xchg
or
adc
in
es
imul
pop
jmp
fcomip
pop
jl
mov
je
mov
jge
sti
sbb
inc
fadd
hlt
mov
xchg
and
and
(bad)
mov
ficom
adc
sbb
popa
mov
pushf
jbe
ret
mov
inc
jns
shl
or
xor
popa
add
dec
cmp
(bad)
mov
cmp
pop
dec
ficom
movs
jmp
pop
pop
jle
adc
jno
into
fs
xchg
or
ds
out
fistp
push
fisttp
out
(bad)
xor
and
mov
enter
and
mov
loope
jne
cmp
xchg
imul
pop
mov
add
dec
mov
dec
clc
fldcw
jnp
popf
stc
adc
jbe
push
movs
inc
sub
push
loope
mov
inc
std
or
or
repz
xor
(bad)
and
jecxz
jle
push
bound
es
pop
mov
in
jmp
jno
aam
cdq
imul
and
jle
(bad)
xchg
inc
jmp
sbb
pushf
dec
shr
cmp
push
add
test
mov
mov
xor
and
mov
dec
mov
mov
pushf
leave
loopne
repnz
inc
test
mov
and
mov
push
lock
(bad)
mov
xchg
es
mov
mov
sbb
or
lock
fld
push
daa
and
es
scas
mov
xchg
cwde
mov
xlat
fst
outs
jecxz
adc
lea
ror
add
jo
xchg
jb
pop
inc
mov
aaa
ins
clc
mov
repnz
loopne
scas
cmp
test
mov
sub
and
(bad)
adc
test
or
cmp
adc
test
xchg
and
dec
iret
ret
xchg
scas
ds
mov
push
adc
xchg
push
cdq
pop
inc
and
inc
ds
cmps
lods
or
push
aaa
mov
inc
mov
enter
sbb
sub
jg
or
cld
(bad)
xor
dec
xor
movs
xor
xor
dec
or
(bad)
and
push
addr16
push
mov
cmp
sub
jp
das
out
xor
arpl
sar
cmps
dec
mov
pop
shr
je
(bad)
jns
(bad)
pop
hlt
retf
or
mov
push
sub
cs
or
popf
enter
fucomi
stos
jmp
or
mov
mov
mov
out
test
fldcw
xor
xor
(bad)
(bad)
xchg
jge
fmulp
inc
loope
jmp
and
jg
xor
pop
pop
mov
sbb
repnz
or
retf
ss
in
outs
sahf
mov
mov
xor
sub
ins
data16
dec
nop
jb
mov
pop
outs
xchg
ins
test
jmp
scas
cmp
in
icebp
sahf
cwde
out
pop
sar
jnp
shr
dec
sub
jno
xlat
sbb
dec
fwait
imul
pop
(bad)
sub
cmp
lods
iret
sti
push
repnz
xlat
xchg
lds
push
out
sbb
or
ja
and
xchg
test
jle
repz
pop
fs
push
(bad)
mov
test
shl
push
fnsave
pop
imul
mov
mov
push
cmps
sub
adc
repnz
push
jne
in
cmp
out
test
mov
outs
loopne
lods
fsubr
sbb
mov
mov
(bad)
fdivr
leave
fistp
imul
sti
adc
jp
or
jecxz
sbb
xchg
cs
sbb
sub
push
or
jae
int3
ret
pop
inc
mov
and
pop
lsl
pop
clc
inc
xchg
imul
retf
bound
sti
inc
int
sub
inc
adc
imul
das
push
push
lea
popa
in
fnstcw
aad
adc
jo
sbb
or
mov
daa
out
fnstsw
xchg
not
jmp
mov
dec
sub
fisttp
ins
clc
mov
call
ja
mov
div
xor
test
(bad)
dec
add
adc
stos
fdivr
mov
in
in
pop
push
cmp
jo
pop
pop
mov
cwde
mov
lahf
retf
jae
jnp
or
adc
mov
and
push
pop
sar
jnp
adc
xchg
push
in
fistp
sub
fcom
cmc
pusha
and
push
sbb
addr16
in
ss
out
sub
or
imul
int3
pop
shr
and
pop
(bad)
mov
sub
call
aas
cli
pop
mov
out
data16
and
inc
inc
adc
mov
inc
sub
je
adc
ins
sbb
pop
inc
(bad)
cmp
or
push
push
push
rcr
(bad)
jbe
data16
inc
dec
add
fcmovu
mov
xor
jecxz
pop
jge
jno
fwait
mov
dec
rcr
dec
cmp
pop
dec
retf
(bad)
std
sbb
and
or
cdq
cwde
(bad)
movs
push
(bad)
mov
ins
ins
out
out
in
cmp
inc
xchg
and
(bad)
jo
in
jg
mov
out
int
adc
arpl
iret
ja
call
outs
xchg
inc
mov
data16
outs
mov
fsub
inc
imul
and
mov
dec
retf
dec
fisubr
pop
je
xor
cmp
in
pop
mul
push
test
rcl
jmp
adc
fadd
and
and
xchg
lahf
add
jno
loopne
add
(bad)
out
int3
pop
or
and
dec
pop
nop
mov
xor
and
inc
pop
pop
jp
sub
fld
loop
ret
jnp
imul
xchg
cli
xor
add
cmc
or
cli
hlt
jnp
add
loope
movs
mov
shl
leave
jo
lods
xchg
lds
fmul
pushf
adc
scas
cwde
mov
and
push
inc
jle
in
lods
push
rdtsc
mov
mov
in
scas
dec
outs
pushf
lods
out
mov
(bad)
out
std
xchg
lea
scas
xchg
mov
jns
mov
pop
add
cmp
add
jg
or
mov
movs
sub
mov
jnp
sbb
sbb
les
out
adc
pop
addr16
mov
popa
in
sbb
adc
ror
iret
mov
test
mov
(bad)
call
jge
sbb
int
xchg
fnstsw
pop
sbb
mov
adc
jl
jno
fcmovnb
ss
scas
pop
cwde
add
aas
pop
xlat
ret
aaa
jecxz
outs
(bad)
xor
dec
dec
dec
jle
and
inc
cli
sbb
mov
fst
pop
test
pop
mov
dec
out
xcrypt-ecb
cmps
or
inc
lea
cmp
(bad)
mov
cmps
inc
mov
dec
xor
dec
clc
or
ror
inc
lahf
std
movs
shr
movs
xchg
ja
outs
xchg
pop
jo
cmp
ins
gs
in
popa
push
xchg
(bad)
xchg
mov
sbb
adc
inc
dec
inc
xchg
(bad)
icebp
shr
sub
xchg
adc
add
(bad)
retf
push
stos
xchg
push
retf
mov
adc
mov
retf
jg
cwde
jl
outs
ins
fsubr
mov
std
test
shr
inc
paddsb
jb
rol
pop
add
xchg
mov
adc
xor
aaa
in
cmp
jl
mov
mov
jmp
das
(bad)
sbb
fimul
mov
std
lock
js
or
hlt
sbb
das
push
dec
ja
add
lock
inc
sub
jae
xchg
les
movs
fmul
sub
stc
push
push
sbb
mov
dec
(bad)
sahf
retf
add
push
xchg
xchg
fisub
jecxz
fwait
sbb
sbb
pop
inc
pushf
pop
and
retf
fld
sti
jmp
clc
sbb
fcomp
out
xchg
sbb
and
mov
mov
add
push
jg
popa
xor
sub
xchg
bound
mov
push
or
jmp
fs
sbb
mov
stos
leave
das
sub
push
daa
stc
mov
mov
push
int
mov
adc
xchg
leave
mov
adc
fstp
cmps
jge
(bad)
cmp
adc
popf
ja
and
call
mov
pop
not
repnz
outs
adc
xor
push
sahf
dec
hlt
mov
push
test
mov
xor
jp
fs
dec
add
mov
jge
pop
jl
or
ret
shl
jns
add
ja
(bad)
sbb
mov
pop
mov
das
and
jl
inc
call
test
push
mov
je
cwde
dec
mov
mov
in
daa
mov
cmc
xor
movs
jmp
inc
retf
retf
in
push
push
mov
adc
adc
sub
loopne
fmul
imul
imul
test
jns
xor
xchg
test
scas
outs
xchg
enter
out
sbb
or
pop
jnp
pop
inc
xlat
rcr
mov
xchg
and
sbb
mov
lods
aaa
jbe
xchg
ja
rcl
cmp
mov
sbb
adc
pop
aaa
call
mov
(bad)
aad
sbb
arpl
mov
retf
adc
inc
and
and
inc
inc
(bad)
(bad)
loopne
leave
out
cmc
out
sti
xor
test
(bad)
in
out
mov
lods
iret
scas
js
loopne
sbb
fwait
mov
add
rol
cld
stos
test
xor
cld
sbb
cli
push
int3
mov
sbb
mov
shl
(bad)
rcl
enter
inc
test
sbb
movs
xchg
fdivrp
push
xlat
mov
push
into
pop
add
xchg
pop
test
inc
(bad)
std
fstp
adc
imul
sub
fidivr
rcl
or
inc
and
mov
in
mov
sub
aaa
xchg
mov
dec
pop
jp
push
jne
(bad)
test
sub
ss
scas
jg
mov
sbb
fstp
xor
mul
lea
mov
xchg
nop
jmp
aam
fnsave
jecxz
enter
not
es
loop
jecxz
push
mov
inc
test
outs
cwde
dec
cli
mov
xor
sbb
out
inc
popa
adc
lods
fs
sub
sbb
imul
mov
push
or
outs
ret
cmps
cmc
sahf
shr
mov
popf
rcr
xor
jp
nop
sbb
pop
fld
jmp
push
dec
cmp
xchg
xchg
mov
(bad)
aam
xor
inc
inc
mov
cmp
push
inc
sahf
push
xor
cmp
cmp
(bad)
hlt
cmp
test
and
xor
fild
or
in
and
push
sbb
pop
aas
sbb
mov
jb
mov
inc
sbb
lea
mov
mul
sub
push
test
dec
mov
or
inc
mov
fidivr
pop
and
mov
inc
add
jl
ror
ss
adc
dec
cdq
imul
dec
dec
add
bound
test
pop
adc
sub
lea
xchg
jp
inc
retf
repz
sub
out
ret
loopne
outs
cli
daa
sbb
imul
out
loopne
add
pop
fs
ins
sbb
repz
mov
loope
fisubr
stos
adc
scas
mov
daa
and
call
mov
jmp
repz
push
pop
fs
or
rcl
fisttp
inc
mov
aas
nop
sub
fisub
sub
imul
cmp
cwde
and
lock
mov
and
movs
mov
and
fwait
mov
lahf
mov
sub
das
test
or
in
out
movlps
add
pop
fistp
xchg
loopne
cmc
mov
std
out
sahf
dec
lods
das
jge
ins
js
or
push
fidivr
enter
fistp
dec
stos
retf
fcmovne
adc
aad
or
adc
nop
xchg
push
sub
adc
sub
dec
mov
adc
repnz
pop
inc
push
jle
sbb
push
(bad)
pop
adc
dec
push
fs
call
shr
cmc
out
or
mov
xchg
mov
into
dec
les
sbb
test
pop
inc
cdq
push
adc
inc
cmp
jg
rcr
nop
jnp
lds
cmp
mov
push
test
and
call
xor
inc
aad
push
add
xchg
scas
dec
stos
xlat
mov
in
mov
pop
lock
cmp
addr16
out
adc
(bad)
cld
fild
jno
sbb
and
mov
push
rcr
lea
div
sub
out
ret
scas
movs
sbb
xor
iret
push
cwde
sar
sbb
(bad)
loope
aam
pop
or
mov
pusha
mov
mov
dec
scas
pause
cmp
push
dec
daa
stc
outs
scas
xor
cmp
inc
sub
cmp
test
sbb
sub
add
pusha
das
nop
mov
sbb
js
(bad)
sub
adc
xchg
cmc
test
outs
mov
mov
mov
clc
imul
xlat
jbe
push
(bad)
adc
into
mov
int3
out
aaa
mov
sahf
xor
(bad)
cmp
retf
add
out
rol
inc
dec
xor
(bad)
cmps
retf
pop
mov
or
inc
outs
test
lods
mov
mov
jnp
cmpxchg
fucomi
jne
xor
mov
inc
cmp
jecxz
pop
push
mov
jle
cmp
es
add
inc
imul
in
in
dec
pop
stos
(bad)
cmp
(bad)
inc
ret
push
int3
mov
enter
dec
pop
adc
out
or
add
rcl
fs
or
xlat
or
imul
shr
sti
adc
fdiv
xchg
clc
add
and
call
sub
int
aam
mov
fsubr
inc
or
dec
pop
jle
push
or
in
mov
cmp
jecxz
cmp
mov
and
and
call
outs
sub
test
sub
mov
ret
je
xor
pop
cmps
test
test
ret
xor
add
push
out
jge
fidiv
scas
(bad)
and
adc
mov
pop
sub
xor
sub
jbe
push
jbe
test
pop
stc
fstp
ja
xchg
gs
push
test
xor
cmp
add
(bad)
fstp
xor
mov
popa
lods
mov
mov
lods
and
gs
mov
or
inc
cmp
bound
ret
call
xchg
or
hlt
retf
fdivr
rol
sbb
and
dec
xchg
scas
sbb
iret
pop
aad
adc
add
aaa
jns
mov
cld
mov
cmps
mov
jnp
jb
test
sbb
and
test
aas
xor
ror
fbstp
ret
aaa
ins
rcr
sbb
fs
ret
jmp
stos
and
sub
mov
out
add
dec
fstsw
xchg
ins
adc
sub
mov
shl
sahf
inc
lock
xchg
iret
retf
imul
cmc
add
mov
test
(bad)
dec
jmp
cmp
pop
call
das
scas
call
lock
push
dec
hlt
das
scas
pop
xor
test
sti
ret
adc
mov
sub
sbb
sbb
clc
aam
jbe
adc
pop
mov
inc
jp
fcomp
out
outs
(bad)
mul
test
in
pop
or
xor
lahf
loop
int
adc
adc
pop
adc
or
and
out
and
imul
add
jecxz
dec
mov
aad
xchg
and
add
dec
retf
inc
or
and
dec
pop
bound
les
adc
jns
in
push
nop
fsub
and
cmps
or
aam
pop
lahf
inc
and
shl
fist
mov
inc
and
daa
arpl
imul
dec
mov
mov
fild
xor
out
(bad)
cld
pop
pop
fist
xchg
and
inc
shr
dec
scas
push
std
aad
daa
repnz
push
bound
pop
daa
btr
adc
or
dec
iret
mov
stc
jmp
jmp
add
dec
add
xchg
push
(bad)
fstp
sti
adc
sbb
pop
scas
mov
mov
mov
fcmovbe
or
adc
mov
or
(bad)
in
hlt
int3
pop
les
pop
jbe
ret
xchg
xchg
cmps
dec
jle
jg
ins
mov
push
dec
jp
lds
jmp
movs
mov
popa
dec
push
jmp
movs
push
jno
test
mov
add
(bad)
leave
cmp
test
fdiv
cmp
test
xchg
cwde
lea
add
imul
push
and
pop
mov
fst
cmp
loop
cmp
rol
pop
jl
or
out
imul
test
jmp
sub
pop
push
sbb
xchg
fsubr
push
cld
cmc
(bad)
pop
mov
pop
scas
cdq
mov
jae
mov
movs
in
pop
pop
sub
out
pop
mov
lods
jbe
ins
or
call
or
rcl
test
add
ret
jne
sbb
cmp
pop
xor
sahf
lods
inc
ja
add
add
jno
xchg
adc
cmp
jge
adc
test
cmp
jg
int
fld
neg
inc
scas
outs
pop
cdq
push
mov
(bad)
rol
sub
xor
aad
in
or
sbb
push
fwait
xchg
push
ret
shl
xor
xchg
daa
jne
ror
in
adc
jne
das
xor
(bad)
adc
add
sbb
jmp
les
fadd
jp
push
adc
test
adc
and
test
push
gs
fdiv
lahf
test
mov
mov
aaa
xchg
jno
xchg
cmp
xor
pop
je
stos
jp
iret
inc
jae
popa
jbe
or
outs
lahf
mov
jecxz
jg
adc
shl
sub
(bad)
dec
scas
mov
into
aad
mov
stc
ds
pushf
mov
mov
loope
(bad)
dec
or
shr
cdq
arpl
dec
push
jnp
lock
nop
into
dec
mov
int3
push
repnz
dec
fldenv
adc
add
das
(bad)
imul
pop
jmp
inc
mov
pop
dec
je
jg
cmp
(bad)
mov
sti
ret
ja
cmp
cmps
das
arpl
inc
jo
lahf
jbe
out
jg
fwait
push
lahf
jl
and
xlat
and
stos
gs
icebp
fsub
in
mov
nop
sub
cdq
jecxz
push
mov
cmp
xchg
mov
mov
mov
(bad)
sbb
fdivr
cmp
dec
push
push
xchg
pop
mov
movs
or
ins
jnp
and
add
loopne
inc
loop
call
push
and
mov
pusha
push
mov
mov
xchg
or
ins
test
cmps
shl
and
adc
and
(bad)
mov
pop
dec
into
test
call
pop
or
jnp
out
sbb
push
pushf
xchg
sub
int3
sar
mov
rcl
aad
jb
xchg
jmp
or
das
dec
mov
cli
xchg
sub
(bad)
(bad)
xor
jmp
xor
fstp
pop
jl
push
fmul
lahf
jl
je
sub
and
cs
bnd
or
test
push
out
cmp
in
ds
loope
fstp
loopne
bound
add
imul
call
and
jns
fs
jmp
sbb
jecxz
mov
dec
mov
test
adc
cmp
xchg
jmp
sbb
mov
inc
movs
arpl
test
dec
xor
int3
sbb
mov
xor
mov
fcom
adc
lods
jo
test
adc
in
data16
xchg
and
push
mov
sbb
mov
push
sub
adc
cmp
test
icebp
mov
les
cmp
daa
jp
test
sub
push
(bad)
fcom
hlt
push
sub
sti
dec
xchg
mov
mov
xchg
xor
and
push
push
mov
pop
add
sub
ss
(bad)
jmp
test
jp
mov
icebp
push
pop
(bad)
mov
(bad)
pop
cmps
out
out
cmps
mov
bound
mov
pushf
jne
mov
das
push
pop
pop
shr
push
call
dec
jae
xor
sbb
add
out
mov
aas
das
cdq
xor
sub
jo
mov
sub
fadd
retf
cdq
mov
cwde
jae
push
and
sar
jo
fistp
mov
adc
mov
jecxz
iret
sbb
call
(bad)
xchg
dec
sbb
mov
test
cmps
sub
jmp
(bad)
fdivr
call
shr
pusha
inc
xor
cmp
retf
loopne
push
push
push
jp
stc
push
aam
jno
lods
mov
or
addr16
stos
push
dec
(bad)
(bad)
outs
lods
je
call
mov
add
pop
js
sub
push
and
fdiv
bound
mov
out
sbb
sub
push
out
(bad)
jns
mov
les
fs
add
out
gs
mov
enter
jo
inc
bound
fmul
dec
cdq
or
sub
xor
inc
xor
add
xchg
xor
stos
stos
dec
jecxz
outs
jnp
fcmovnu
mul
inc
push
pop
mov
mov
mov
cmps
inc
(bad)
shr
pop
inc
stc
int
inc
jmp
mov
jle
sub
pop
cmp
mov
push
inc
pop
scas
inc
jb
add
xchg
popf
mov
in
push
sub
aam
cwde
das
mov
push
clc
mov
pop
ds
inc
xchg
repz
repz
lea
xchg
adc
pop
std
iret
int
outs
repnz
xchg
or
out
add
xor
test
sbb
inc
hlt
cmp
pop
mov
les
push
test
and
(bad)
(bad)
dec
out
frstor
mov
in
sahf
mov
mul
(bad)
xchg
nop
retf
sbb
jnp
mov
push
xchg
loopne
fmul
mov
jae
pusha
add
pop
sub
xchg
cs
fadd
fwait
(bad)
outs
dec
lahf
loope
push
ret
xor
cwde
adc
mov
adc
cmp
mov
jae
call
xchg
sbb
dec
pop
mov
cwde
test
outs
xor
xchg
(bad)
sbb
mov
shl
pop
int3
cld
lds
fild
or
xor
scas
and
dec
jge
sahf
and
or
and
xor
ret
lea
xor
pop
inc
dec
mov
jp
addr16
nop
das
add
push
jge
js
mov
test
mov
movs
fcmovnb
arpl
adc
xlat
dec
jecxz
test
sbb
and
jmp
and
dec
adc
pop
loope
xor
ret
jmp
mov
sub
push
push
inc
lds
ror
loopne
mov
sbb
jmp
inc
out
push
int
sub
jg
lods
xchg
sub
cmc
push
test
neg
pop
fcomip
push
push
sahf
data16
loop
pop
ss
(bad)
mov
dec
data16
jb
add
fdiv
imul
and
lea
pop
cmc
add
aad
xchg
add
sbb
ja
xchg
dec
and
cmp
and
loopne
push
fsub
outs
outs
test
ja
adc
cli
(bad)
jle
cmps
hlt
pop
sbb
cmp
(bad)
xor
aad
scas
dec
add
push
test
retf
or
(bad)
lahf
lea
mov
mov
adc
(bad)
cmp
nop
retf
es
inc
sbb
mov
xchg
mov
mov
inc
fsubp
push
sbb
rcr
(bad)
push
leave
mov
push
(bad)
das
push
test
jl
push
lods
adc
les
mov
jne
or
xchg
ror
or
lods
mov
iret
scas
sti
push
stc
dec
inc
sbb
sbb
fs
pop
test
dec
stos
jns
cmc
sub
(bad)
jmp
icebp
in
xchg
movs
pushf
scas
clc
stos
movs
adc
fbld
dec
add
repnz
mov
movs
in
lods
fcomp
outs
(bad)
cld
add
inc
fsub
sub
test
in
cwde
icebp
(bad)
mov
lock
jge
(bad)
mov
add
out
inc
retf
jmp
scas
stos
adc
loop
xor
dec
into
(bad)
out
addr16
aam
outs
dec
popa
pushf
cmps
arpl
lea
ins
test
xor
gs
jmp
fsubr
clts
inc
nop
cdq
inc
inc
jge
xchg
lds
mov
fsub
cmp
pop
in
aas
je
or
dec
sar
xor
pop
mov
bound
sub
mov
add
out
or
icebp
inc
mov
lods
retf
push
push
(bad)
repnz
in
mov
jae
fisttp
xchg
enter
sub
movs
dec
fsub
sti
dec
icebp
add
fldcw
fsubr
dec
inc
mov
jg
stos
add
jle
adc
sbb
pop
add
dec
movs
cmp
sbb
test
dec
aad
out
leave
jae
dec
dec
popa
xchg
mov
xor
pop
jmp
mov
jmp
xor
dec
xchg
lahf
or
inc
jg
movs
mov
cld
outs
fcomp
daa
enter
cmp
xchg
push
add
sub
sbb
mov
or
push
je
xor
mov
pop
xlat
lods
and
xchg
dec
ja
jmp
movs
cwde
add
pop
outs
pop
imul
cs
sub
mov
mov
jmp
jge
push
jmp
das
inc
push
and
sub
jg
xchg
neg
mov
clc
cmp
cdq
xor
adc
js
jl
iret
mov
daa
sub
mov
test
push
push
les
aam
and
xor
imul
call
push
push
clc
xchg
shl
stos
push
ret
cmp
imul
sbb
cmp
fwait
mov
jmp
mov
xchg
test
push
dec
xchg
cmp
popf
fnsave
out
or
aad
push
in
sub
push
adc
mov
mov
fidiv
xor
pop
out
in
push
or
rep
mov
mov
push
xchg
pop
cmp
xor
xor
xchg
mov
xchg
sbb
or
pusha
shr
arpl
add
xchg
je
inc
outs
(bad)
js
repz
sar
sub
push
mov
shl
mov
cmp
adc
sqrtps
sahf
call
popa
cwde
pop
mov
ja
pop
gs
mov
in
into
xor
aaa
pop
jg
cmp
add
jne
add
mov
mov
ins
mov
fild
in
push
jmp
push
sub
pop
and
and
mov
jo
sub
addr16
sbb
sub
mov
mov
int3
sub
scas
out
cmp
dec
loop
aas
js
sbb
cs
test
jae
add
gs
pop
test
in
xchg
scas
sbb
mov
add
add
adc
mov
out
jo
imul
pop
ds
push
pop
js
retf
push
test
xchg
les
jae
push
sub
scas
cmp
ret
les
mov
imul
pop
fild
dec
adc
xor
add
daa
dec
sbb
fsubr
movs
and
mov
xchg
mov
sar
nop
movs
jnp
mov
xor
jecxz
pushf
xchg
outs
adc
xchg
xor
mov
test
mov
and
(bad)
es
imul
sub
cmp
test
aaa
xlat
pop
cmp
(bad)
push
fmul
push
ror
xor
(bad)
dec
fdivr
cwde
shl
cmp
pusha
push
adc
cs
xchg
psubq
or
in
add
or
jbe
add
cs
daa
xor
shl
lock
je
mov
push
dec
loopne
fs
popa
call
sub
sub
pop
add
inc
cdq
mov
inc
fnstcw
mov
dec
stc
sbb
adc
inc
xchg
xor
xchg
jge
inc
mov
je
(bad)
dec
aad
sbb
cmp
fldenv
add
cmps
rcl
adc
xchg
adc
lods
mov
test
push
add
inc
mov
add
in
inc
add
fldenv
sub
jno
jmp
ficom
xchg
and
lock
scas
stc
xchg
adc
cmps
out
mov
push
cmp
sbb
movs
adc
fild
test
mov
(bad)
pop
div
int
or
push
jb
sbb
ins
mov
loop
pop
cwde
xchg
sub
cwde
push
repnz
adc
lock
sar
mov
call
sbb
test
mov
imul
(bad)
cld
enter
test
fsubr
dec
xchg
pop
mov
sbb
xchg
in
cld
retf
jns
retf
cwde
aas
data16
addr16
je
popf
add
push
adc
jo
loop
push
or
adc
pop
and
inc
test
loop
pop
mov
or
lds
sub
retf
adc
mov
and
adc
cmp
add
gs
push
sub
leave
stc
sti
mov
push
xchg
aas
mov
dec
sbb
ja
int
mov
int3
push
inc
inc
pop
repnz
jmp
sub
sbb
pop
aaa
add
cli
inc
sti
scas
sti
adc
or
jnp
dec
jne
dec
xchg
shl
inc
push
adc
ins
mov
bound
xor
sbb
or
fmul
xchg
jmp
inc
and
enter
bound
aam
mov
add
xor
push
bound
iret
adc
int
push
(bad)
pop
or
test
xchg
mov
mov
and
cli
fsubr
popa
mov
lahf
pop
in
mov
dec
outs
xchg
cmp
ror
cs
nop
push
push
inc
fwait
sub
aad
jge
jecxz
fdiv
mov
repz
test
jg
sub
inc
pop
lahf
leave
or
daa
fadd
stos
fmul
leave
and
cwde
in
cmps
and
int
mov
sub
sub
inc
addr16
or
sbb
pusha
xchg
fs
test
loopne
jg
aam
popf
sti
mov
xor
add
imul
mov
scas
std
push
retf
xchg
mov
(bad)
jmp
call
call
jns
fwait
ds
out
xchg
inc
inc
popa
push
clc
outs
jns
retf
push
add
bound
xchg
ss
jns
mov
ja
test
jp
or
fsubr
js
mov
and
sar
pop
sbb
repz
cmps
inc
or
inc
out
(bad)
mov
cmc
or
lds
mov
sub
mov
mov
aas
pop
and
scas
dec
mov
rcr
ror
adc
and
pusha
enter
mov
pop
and
xchg
call
mov
lods
pushf
pusha
sar
adc
ins
sub
cmp
in
dec
jbe
jle
ins
into
retf
jmp
outs
sbb
bound
js
cmp
pop
in
mov
sbb
xchg
clc
xchg
mov
pop
daa
mov
xchg
nop
push
stos
aaa
in
pop
and
(bad)
std
bnd
and
mov
push
mov
sbb
mov
das
or
sysret
jmp
and
mov
ss
shl
(bad)
icebp
lahf
and
dec
std
cs
addr16
imul
daa
pop
push
mov
mov
inc
fstp
push
jno
cmp
jne
lahf
jecxz
jno
std
sub
loopne
test
push
xlat
gs
call
bound
jb
fs
and
xchg
je
arpl
cld
jle
push
xchg
jl
xlat
mov
shr
inc
dec
mov
jecxz
inc
or
xchg
push
add
pop
mov
leave
fs
add
cmp
dec
xchg
adc
lods
or
outs
ror
cmp
movs
xchg
test
xchg
push
cmp
jge
add
stos
add
xor
test
cmp
jmp
jecxz
adc
js
stc
sbb
jno
mov
cwde
mov
cld
ds
arpl
in
and
mov
adc
inc
ds
push
add
mov
addr16
daa
or
ja
inc
fild
lahf
sar
push
das
loop
push
sub
sub
jle
leave
xor
ja
mov
sbb
mov
in
mov
mov
ficomp
dec
pop
cdq
stc
ret
out
xor
adc
xor
adc
fcmovnbe
jbe
mov
outs
push
sbb
sbb
sar
pop
test
cmp
push
lea
imul
loope
out
sub
out
dec
or
retf
cmc
jns
sub
or
(bad)
add
cmps
mov
jle
ret
lea
gs
in
adc
lods
add
sub
inc
jo
add
push
out
mov
adc
aaa
fstp
sahf
mov
push
sub
cs
cmps
call
ja
nop
popf
pop
fwait
adc
inc
int
scas
mov
dec
ja
mov
call
int3
xchg
or
lahf
xchg
mov
cmp
dec
adc
stc
gs
in
add
and
jb
jb
mov
mov
clc
cmp
mov
mov
sub
xor
add
test
inc
out
push
adc
fs
add
adc
loop
pop
cmp
out
pop
aas
jne
les
fs
sub
(bad)
adc
js
dec
in
fcomp
or
dec
or
xor
and
sbb
cmp
loope
push
mov
sub
pop
int3
ins
aas
mov
int3
mov
jns
push
sub
in
test
jg
push
jo
lahf
xchg
imul
mov
push
pop
mov
mov
push
int
xor
sar
and
movs
pop
out
sahf
loopne
pop
(bad)
hlt
sub
dec
sar
aad
push
cmps
cmc
cdq
test
popf
mov
mov
aaa
je
(bad)
scas
xchg
or
shl
cs
mov
mov
repnz
hlt
push
mov
mov
push
mov
test
sub
hlt
xchg
add
scas
rol
aam
mov
ss
movs
ja
xchg
mov
leave
and
stc
jae
mov
loope
jmp
pop
pusha
mov
jg
int
pop
rcl
not
movs
inc
daa
shl
push
popa
xor
out
sbb
cmp
mov
pushf
inc
pop
fist
mov
ret
shl
aam
jmp
icebp
jp
push
lea
xor
nop
pop
rcl
cwde
sbb
int
fsub
push
jmp
(bad)
push
fisubr
xor
inc
iret
cdq
cmp
call
enter
xor
xchg
test
stos
loop
pop
push
push
adc
das
shl
cdq
push
mov
shr
cmp
pop
nop
xor
sar
lods
or
cmp
les
add
pop
icebp
pop
call
pop
cmps
inc
hlt
out
mov
out
aam
rcr
hlt
out
movs
xchg
cmp
push
pop
scas
pop
aam
adc
pop
popa
jle
cmps
cdq
cwde
inc
or
adc
retf
test
xchg
jae
xchg
cli
mov
xor
stos
mov
push
movs
or
cdq
fwait
inc
mov
xor
aad
xchg
and
stos
test
aad
xchg
aad
dec
inc
fiadd
cld
dec
xor
enter
push
jb
pop
fdivr
leave
in
and
push
imul
mov
out
mov
push
inc
(bad)
and
sub
sub
xor
outs
(bad)
cs
(bad)
and
scas
xor
std
test
in
ja
imul
adc
dec
or
adc
bound
jmp
ins
pushaw
xor
dec
pop
jne
dec
sbb
lahf
xlat
repnz
test
bound
mov
int3
int
pop
hlt
mov
and
addr16
cmps
cmps
(bad)
ficom
mov
push
aas
lods
arpl
rol
mov
jmp
test
(bad)
movs
pusha
ret
hlt
neg
cmps
rcl
mov
sub
push
mov
add
mov
fcompp
sub
sar
mov
xchg
sbb
ret
inc
jle
xor
out
mov
dec
inc
mov
pop
adc
in
test
jns
icebp
dec
add
adc
shl
imul
pop
aas
jno
data16
mov
push
mov
dec
xchg
sub
push
xchg
dec
imul
into
push
mov
(bad)
addr16
movs
hlt
fstp
mov
xchg
xlat
cmp
hlt
inc
nop
cmp
retf
cmp
ss
push
mov
mov
jecxz
xor
cli
push
xchg
lock
shl
mov
adc
ja
sub
loopne
cli
sub
(bad)
loopne
sbb
xchg
or
fs
mov
pop
mov
mov
xchg
adc
(bad)
fdiv
repnz
pop
xor
mov
xchg
ss
sub
cmp
fidivr
sub
mov
mov
push
repz
dec
bound
jns
adc
or
or
ret
std
or
xor
mov
cmp
in
je
scas
loopne
test
sti
pop
push
ss
push
mov
call
push
push
in
dec
push
stos
or
xchg
or
jae
adc
add
bound
das
or
xor
sub
or
scas
mov
movnti
out
dec
or
xor
and
fcmovnu
and
cmp
mov
aas
retf
lods
push
jno
jne
sahf
test
cli
xchg
dec
xchg
jno
call
push
sub
dec
jo
sbb
push
jge
xchg
(bad)
xchg
sti
cwde
pop
fs
stc
dec
or
xchg
das
popa
dec
cmpxchg
cli
sub
fs
sbb
jmp
imul
test
call
cwde
mov
push
cmp
inc
sbb
loope
int3
mov
cmp
fwait
repz
dec
pusha
fisubr
ss
div
aad
and
test
jle
inc
mov
call
aad
inc
popa
cmps
es
pop
(bad)
je
das
dec
cld
pusha
dec
mov
dec
int3
cdq
pop
dec
or
push
aad
jbe
or
js
lods
xchg
addr16
push
fimul
sub
sub
cs
and
scas
mov
gs
and
and
repnz
repz
ret
shl
mov
les
arpl
xchg
fcomip
inc
push
aaa
fnstenv
cmps
test
or
hlt
imul
test
repz
inc
or
in
rcr
lods
add
cmp
sub
dec
inc
in
outs
add
int
pushf
ret
mov
mov
or
push
jp
sbb
and
xor
mov
xchg
add
js
and
pop
aad
int
add
out
xchg
inc
or
sbb
pusha
pop
adc
(bad)
in
mov
call
sahf
adc
xor
mov
(bad)
adc
xchg
add
sub
fnsave
loopne
dec
inc
mov
arpl
leave
jbe
pushf
(bad)
je
jp
pop
test
scas
add
das
imul
xor
(bad)
pop
(bad)
fsincos
push
fnclex
mov
add
mov
ins
into
aas
or
xchg
sbb
int3
sahf
and
setg
or
jo
and
clc
pop
pop
add
inc
aad
xchg
xor
or
mov
dec
retf
loop
adc
or
retf
mov
adc
(bad)
popa
pop
lea
pop
aad
mov
xchg
push
cmp
test
inc
std
lods
icebp
(bad)
sub
mov
movs
push
xchg
fwait
sbb
cdq
cmp
popa
std
out
xchg
aaa
addr16
xchg
push
sub
ins
push
cmps
adc
pop
je
inc
mov
pop
pushf
add
xchg
inc
pop
xchg
jecxz
bound
repnz
sub
pushf
lods
and
mov
scas
cmp
jnp
aas
mov
add
test
mov
and
sub
or
push
add
lock
imul
and
fs
cmp
inc
lods
xchg
sahf
fs
retf
mov
and
ins
mov
mov
sbb
daa
cmc
ret
fimul
push
sbb
mov
cmc
sbb
out
adc
jmp
gs
dec
js
dec
or
mov
xor
das
cvtpi2ps
jp
jmp
fld
pop
std
loop
push
push
lods
xchg
ds
lahf
cmp
dec
test
pop
jmp
pop
pop
mov
addr16
mov
les
call
cmp
in
iret
xchg
lds
ror
mov
jno
fwait
ss
sub
mov
add
and
mov
retf
mov
push
fst
icebp
dec
add
sbb
sub
sbb
pusha
jle
aad
push
adc
cmc
or
sbb
icebp
xchg
in
les
sbb
jmp
(bad)
cmp
stos
jb
cmp
shl
stc
inc
mov
int
inc
mov
cwde
push
dec
mov
inc
jno
and
dec
sbb
jae
pop
inc
inc
xchg
adc
popf
xor
les
js
imul
xchg
cmp
and
mov
and
scas
jmp
das
pop
sub
ja
gs
xor
mov
mov
sbb
sbb
fiadd
cmps
sbb
sub
(bad)
int
jecxz
daa
mov
aaa
int
fsubr
out
lahf
pop
call
mov
dec
push
mov
adc
daa
test
mov
(bad)
fwait
xor
xchg
xchg
sbb
fidiv
sub
sbb
lock
mov
(bad)
imul
or
shl
jns
dec
dec
mov
pusha
add
(bad)
mov
jl
jbe
out
pop
push
sub
sub
mov
(bad)
pop
jae
sbb
mov
adc
cli
retf
dec
not
aas
push
xor
push
jg
ins
sub
cmp
xchg
rol
xchg
jg
push
xchg
mov
repnz
stc
int
std
imul
inc
xor
leave
lea
fsub
cmp
cmp
aas
enter
sbb
inc
iret
mov
jbe
xor
dec
push
js
pop
mov
ja
rcl
add
into
addps
push
mov
mov
push
or
and
and
in
adc
outs
inc
in
xor
stos
fs
cwde
push
mov
ins
jae
mov
lea
mov
xchg
sub
mov
sbb
sbb
aad
push
nop
cli
push
in
sub
or
push
jg
jecxz
mov
jnp
jl
sbb
movs
add
xchg
in
push
adc
test
cli
or
xor
fild
push
(bad)
shr
cli
ror
dec
mov
push
sbb
mov
ins
mov
repnz
xchg
inc
mov
les
outs
or
popf
jno
add
movs
or
pop
inc
jmp
jle
xchg
call
add
sub
sbb
add
jle
dec
test
jne
jmp
lods
dec
xor
into
(bad)
jl
cmc
or
mov
sbb
mov
xchg
jmp
xchg
sub
test
ja
daa
inc
pusha
push
sbb
push
push
cmps
repz
test
pop
sub
mov
mov
jle
inc
inc
mov
push
inc
retf
jns
sti
es
or
mov
xchg
ss
rcr
xlat
jg
ins
cmc
jno
push
dec
fnsave
mov
jb
retf
hlt
retf
movs
jmp
push
cmp
jp
xchg
cmps
lahf
pop
popa
int3
dec
push
adc
ret
sub
aas
or
inc
jae
daa
xchg
sub
xor
adc
cmps
aas
daa
cwde
dec
and
out
or
mov
sub
imul
(bad)
loop
push
jecxz
addr16
mov
mov
ins
xor
movs
jnp
cdq
js
fs
outs
movs
sub
repz
cli
hlt
mov
mov
xchg
adc
(bad)
add
or
(bad)
jle
mov
and
popf
popf
pop
cwde
add
movs
sbb
inc
jne
mov
push
and
hlt
shl
push
in
loopne
xchg
fsub
and
adc
dec
(bad)
out
jns
aaa
push
mov
fcom
dec
loopne
mov
sbb
stc
popf
ds
into
mov
mov
dec
es
pop
inc
push
mov
addr16
mov
sbb
nop
movs
dec
or
lds
lahf
lea
fisttp
pop
push
jmp
loopne
outs
cmp
cli
call
enter
inc
(bad)
jne
mov
call
mov
lods
and
movs
fmul
or
mov
cmp
jp
jge
sbb
jg
cwde
(bad)
cmp
fisttp
push
(bad)
add
jns
and
inc
mov
push
fwait
sub
cmp
jnp
lods
and
mov
xlat
repz
into
jl
cmc
mov
sbb
pusha
(bad)
loope
dec
xor
lods
iret
adc
add
sub
idiv
ret
pop
sub
pop
movs
dec
loop
adc
vorps
pushf
dec
les
lods
push
fcom
gs
cwde
cmp
mov
inc
and
jbe
push
mov
aad
xor
jbe
adc
pop
test
xchg
dec
sbb
out
inc
mov
ret
mov
pop
rcr
or
push
jb
sbb
pusha
sbb
xchg
in
jno
pop
dec
sub
popf
data16
xchg
jbe
xchg
int
test
leave
mov
dec
mov
je
scas
inc
fisubr
xor
mov
rep
rcr
or
stos
or
int3
xor
xchg
ror
ficom
clc
shr
(bad)
adc
dec
fimul
sbb
adc
jge
(bad)
(bad)
jl
dec
add
inc
mov
cmp
daa
aam
xchg
inc
iret
loope
test
and
cdq
out
xor
or
or
ins
arpl
push
jae
pusha
int3
xchg
dec
push
jb
ss
loop
or
sub
mov
xchg
in
cwde
lahf
out
(bad)
sub
data16
mov
ins
test
nop
lods
ss
inc
pop
push
sub
out
jle
xchg
mov
jo
out
loop
pop
mov
rcr
mul
mul
les
cmp
jmp
or
adc
xor
sahf
les
cdq
pop
enter
xchg
dec
and
mov
stc
stc
jmp
mov
pop
lods
repz
enter
test
adc
sub
(bad)
retf
fs
or
data16
push
mov
pop
ret
(bad)
cmp
inc
jb
ss
inc
in
(bad)
push
push
(bad)
movs
xor
push
lods
pmullw
jecxz
inc
iret
aas
test
dec
or
jne
das
jg
mov
adc
repz
mov
int3
pop
popa
or
cmc
and
ins
mov
mov
push
xlat
and
scas
push
pop
adc
sbb
in
test
add
lea
ret
mov
(bad)
(bad)
jge
div
ror
dec
loop
imul
cmp
jae
aad
ss
mov
inc
add
lods
jo
test
push
mov
in
mov
or
jo
sbb
sub
in
or
gs
ins
jnp
sub
nop
lea
mov
call
xor
xor
fsub
mov
(bad)
loopne
jg
jbe
test
(bad)
inc
xchg
cmp
fwait
add
std
cmps
or
jnp
(bad)
cmp
(bad)
dec
cmp
outs
test
imul
push
push
jne
xchg
(bad)
mov
dec
(bad)
jp
dec
sbb
mov
(bad)
mov
mov
mov
cmp
ja
je
cmp
xor
das
adc
mov
jecxz
movs
inc
dec
mul
jno
mov
mov
fdivr
enter
inc
or
and
ins
mov
test
jnp
cdq
xchg
leave
inc
data16
test
push
sub
in
dec
js
in
in
jp
clc
shr
adc
mov
sub
sub
fwait
jbe
ret
(bad)
xchg
dec
dec
stos
xchg
enter
add
scas
fwait
addr16
and
cs
add
stos
cmp
lods
imul
clc
sahf
rcl
jne
ds
(bad)
jne
test
fsubr
inc
and
pusha
sahf
stos
xchg
jmp
lods
(bad)
movs
jg
(bad)
jecxz
repz
mov
movs
lds
popa
cmc
xchg
mov
jle
imul
add
dec
mov
cmps
mov
lds
or
and
jno
push
cmp
fdiv
inc
add
add
int3
sbb
fs
sub
fwait
push
hlt
jo
ja
pop
pop
push
out
pop
stos
fmul
ficomp
aas
aaa
jp
xchg
bound
arpl
inc
xchg
mov
ins
sub
push
ja
ja
clc
test
loopne
dec
jo
pop
loopne
or
rcr
xchg
jb
jnp
movs
jno
add
dec
test
sub
mov
sub
xlat
mov
fstp
and
in
ret
cmc
mov
retf
stos
jmp
mov
ret
sbb
lods
shl
cmp
or
rol
mov
cmps
xor
inc
push
fnstsw
nop
into
pop
int3
pusha
dec
daa
and
repz
pop
cdq
pop
mov
(bad)
jl
xchg
add
jmp
sbb
push
fdivp
shl
(bad)
sub
loopne
or
mov
ja
out
ret
inc
ror
dec
and
dec
mov
mov
xor
inc
push
and
push
mov
mov
fcmovnu
(bad)
sub
imul
call
adc
inc
ja
test
sbb
sub
je
sbb
test
jmp
fisttp
inc
test
inc
sub
jno
out
cmp
mov
lock
aaa
adc
xchg
inc
cmp
ror
fs
ror
retf
mov
mov
int3
inc
fs
push
loop
int3
iret
das
arpl
xor
(bad)
or
xchg
out
xor
fwait
nop
rol
add
mov
loop
adc
jno
mov
(bad)
shl
mov
out
popa
call
fiadd
ret
hlt
rcr
fwait
mov
pushf
add
adc
mov
out
mov
test
pop
out
outs
or
mov
xchg
mov
movs
pop
pushf
retf
mov
mov
cmps
xor
lods
cmps
pop
lods
add
push
sub
shr
sahf
mov
sbb
fucomp
xchg
adc
fdivrp
enter
mov
or
mov
mov
xor
inc
fimul
jnp
and
int
inc
mov
in
dec
cdq
pushf
inc
out
loop
stc
loop
jmp
out
lds
and
push
cld
jns
jbe
ss
xchg
leave
pop
cmp
add
pushf
adc
mov
mov
arpl
data16
push
and
aaa
adc
pop
xchg
test
stc
lea
sbb
jne
sbb
jmp
mov
dec
das
sbb
repz
mov
sti
xor
shl
push
call
cmps
sub
sahf
jmp
cmp
(bad)
int
and
mov
outs
sbb
movs
popf
cmp
push
pop
push
js
sub
pop
jg
xor
xor
jbe
adc
loopne
aas
sub
push
mov
jne
and
xchg
fadd
pop
popa
sub
ret
stos
mov
arpl
aam
fld
(bad)
ins
xchg
les
push
sub
mov
pop
add
nop
add
fiadd
out
cli
daa
in
add
inc
repnz
sbb
mov
cmps
dec
jmp
mov
imul
lds
ins
xchg
hlt
inc
dec
inc
push
ins
mov
into
int
push
dec
enter
jg
or
stos
iret
addr16
or
movs
push
sub
aad
or
lahf
dec
outs
movs
mov
cmps
fwait
cmp
and
xor
jb
fistp
mov
outs
fst
aam
lock
(bad)
repnz
mov
cmp
adc
jmp
inc
or
adc
mov
pop
jl
pand
mov
inc
into
imul
pop
out
xor
mov
mov
shl
mov
or
cmp
add
out
jge
sbb
fwait
xchg
or
add
push
movs
mov
xchg
jb
imul
xlat
fsubr
or
mul
pop
mov
test
sub
hlt
and
adc
call
out
cmp
or
vrsqrtss
cmp
imul
push
add
dec
test
cmps
pop
pop
and
jne
retf
adc
retf
push
add
(bad)
and
scas
ins
daa
jae
pop
lahf
ins
or
aas
or
xor
or
add
sbb
sbb
shr
ins
pop
inc
sbb
aad
stc
sar
stos
cmp
ds
icebp
pop
pop
js
pop
and
ins
icebp
das
sahf
cwde
fsubr
in
or
test
sub
gs
loope
imul
(bad)
nop
loopne
xchg
imul
ret
mov
and
fcomp
ret
push
cmps
mov
dec
cmp
and
adc
jb
std
rcr
cmp
sub
xor
inc
ss
push
jnp
clc
inc
out
outs
shl
mov
lods
add
pop
faddp
arpl
stos
dec
push
pushf
les
mov
(bad)
jnp
mov
addr16
or
gs
xchg
xchg
push
mov
jmp
ss
fidivr
sub
mov
xchg
sub
mov
dec
aam
arpl
cmp
xor
adc
xchg
xchg
popf
sub
lods
pop
sahf
or
into
int
int
scas
mov
push
pop
cmp
leave
shl
cmp
aad
mov
fdiv
cmc
pop
hlt
pop
xchg
lods
(bad)
imul
mov
mov
adc
jl
jns
add
fldpi
mov
mov
iret
stos
rcl
repz
adc
xchg
cld
into
(bad)
call
xor
mov
jecxz
jmp
jmp
dec
add
mov
cmp
pop
rcr
jmp
test
mov
cwde
dec
(bad)
inc
jmp
adc
xlat
dec
stc
loop
jo
dec
es
jb
dec
hlt
cwde
call
iret
or
mov
jge
(bad)
xchg
push
jge
push
int3
int3
and
xor
cmps
mov
xchg
adc
test
dec
inc
rcl
mov
xchg
xchg
das
out
push
jno
aad
neg
popa
or
add
add
stos
cmps
and
dec
pop
cmp
int3
sbb
fs
outs
int
push
popa
(bad)
mov
mov
ins
mov
shl
sub
and
outs
std
jo
cmps
pop
ja
cdq
movs
xchg
jmp
movs
sub
adc
outs
mov
les
push
jge
data16
scas
or
mov
stc
(bad)
std
(bad)
mov
pop
ret
test
sti
fsubr
push
push
sub
sahf
adc
xor
jmp
daa
repz
shr
dec
jge
call
and
mov
push
mov
cmps
lods
mov
imul
shr
sbb
push
es
leave
mov
fcomip
add
xor
int
hlt
imul
or
test
xchg
inc
lea
movs
shl
jnp
pop
sbb
aam
and
mov
mov
sbb
pop
aaa
cmp
add
cmp
dec
mov
mov
or
mov
mov
jae
dec
add
and
push
push
out
out
ja
mov
push
out
dec
pop
mov
(bad)
cmp
imul
clc
sbb
fwait
xchg
xchg
adc
ds
sar
ss
data16
sahf
inc
(bad)
imul
xor
jnp
pop
dec
stc
dec
pop
dec
push
popa
ja
in
sbb
jl
mov
or
xchg
add
add
xchg
js
pop
or
dec
push
xchg
arpl
pop
xor
lock
clc
lds
cmp
(bad)
out
add
mov
xchg
jmp
in
ficomp
in
mov
add
dec
adc
lods
dec
clc
sbb
(bad)
(bad)
dec
cli
adc
and
pop
icebp
jns
xchg
je
adc
addr16
xchg
cmp
fcmovbe
jno
and
(bad)
fsub
dec
mov
mov
aad
xor
lods
(bad)
mov
mov
pop
cwde
jmp
xor
cmp
into
iret
scas
cmp
div
sub
out
or
dec
test
in
cmc
and
data16
or
sti
aad
or
int3
aam
push
fsubr
sub
mov
jnp
movs
ret
fild
sub
adc
mov
lods
fucomip
xchg
adc
aaa
sub
push
aaa
lock
aam
jg
dec
inc
cmp
lock
(bad)
movaps
cmp
out
out
sbb
test
rcl
jle
mov
arpl
or
jne
pop
adc
mov
fnsave
and
xchg
sub
sub
jnp
imul
or
mov
cmp
mov
out
pop
dec
sbb
jnp
pop
inc
leave
lahf
sbb
movs
pop
push
cmp
popf
inc
sbb
cmp
test
lds
ret
push
sub
scas
test
sub
ret
push
addr16
ins
inc
pop
call
mov
sti
pop
or
(bad)
leave
popa
sbb
jo
pop
dec
inc
and
in
enter
fld
ret
jo
jbe
inc
or
cmp
or
sbb
into
aas
xlat
mov
mov
inc
inc
mov
sbb
adc
mov
xor
pop
mov
or
leave
cmps
xor
das
cmps
mov
dec
or
bound
shl
xchg
jecxz
xor
and
outs
xchg
lahf
ret
call
fwait
or
adc
jo
fisub
xchg
push
push
neg
dec
xchg
pusha
loope
mov
jge
jmp
retf
adc
jns
jo
adc
hlt
adc
stos
mov
fiadd
inc
mov
int3
mov
sar
sbb
shl
ds
sar
fnsetpm(287
ror
ins
imul
jnp
lahf
(bad)
out
pop
stos
add
int3
pop
aaa
and
push
cld
cmp
mov
cmp
in
mov
and
push
xor
xchg
mov
daa
fwait
in
mov
ret
adc
mov
add
and
daa
add
jns
popf
cld
mov
push
add
fnsave
fld
loope
jbe
adc
es
pop
aam
fidivr
sbb
xor
call
sub
xor
add
sub
les
push
or
movs
pop
inc
call
pop
out
out
jp
(bad)
stc
xchg
and
dec
or
or
(bad)
shl
fucomip
mov
inc
add
rol
or
lea
cmp
xchg
outs
shl
jmp
int3
sbb
sub
rcl
out
sbb
cmp
out
push
sti
(bad)
(bad)
and
and
fisttp
sub
mov
sti
arpl
stos
in
cs
jo
sub
repz
xchg
out
push
ror
xor
cmp
xchg
adc
dec
jecxz
fist
jns
pop
push
pop
pop
mov
push
adc
mov
pop
enter
xor
popf
pop
std
and
inc
fisttp
je
das
aam
inc
cmp
jp
sub
(bad)
jae
sbb
sbb
rep
repz
std
sbb
and
sti
xor
bound
xor
adc
mov
sar
call
cld
cmp
pop
fcmove
daa
pop
or
scas
jo
pop
or
add
cmp
dec
mov
enter
es
gs
pop
adc
retf
cdq
(bad)
fs
ror
test
sti
pop
shl
pop
test
dec
add
(bad)
adc
lods
sbb
push
dec
adc
adc
loopne
jp
or
jmp
jg
cwde
inc
add
aam
inc
pop
inc
lock
daa
inc
stc
jmp
cmp
pusha
pop
fild
dec
sti
sbb
adc
clc
xor
mov
loope
shl
push
mov
int
and
fcmovbe
out
cmp
pushf
into
xor
fcom
xor
enter
pop
sbb
movs
(bad)
retf
retf
lahf
jnp
xchg
add
dec
hlt
in
fs
sar
inc
rcr
(bad)
scas
lock
cli
imul
jmp
xlat
inc
mov
fsub
int
je
outs
dec
aaa
ja
jge
es
mov
cmp
std
cmp
jnp
xchg
loope
test
inc
dec
adc
or
jno
fcom
adc
scas
mov
mov
sbb
stc
aaa
sub
stos
or
dec
in
cdq
idiv
or
inc
into
or
add
push
dec
jo
call
and
fldlg2
jae
rcr
je
jmp
test
lea
(bad)
shl
push
fbstp
or
xchg
inc
sub
push
ja
cmc
in
out
and
enter
adc
jae
mov
inc
icebp
adc
mov
(bad)
(bad)
jmp
sub
mov
add
add
jl
xor
add
sbb
xchg
adc
loop
fdivrp
push
add
cmc
call
and
sbb
nop
in
ja
movs
jbe
iret
sub
enter
or
fidiv
retf
xor
sar
adc
scas
mov
gs
int
jmp
adc
inc
xchg
jge
push
mov
cmp
or
test
fnstcw
movs
mov
test
sbb
push
xchg
out
aad
xor
sub
cmp
ss
loopne
sub
or
popf
jle
in
sub
push
pop
and
repnz
cmp
xor
pop
arpl
cmp
push
dec
es
in
add
xchg
jnp
jmp
xchg
sub
mov
and
ins
and
out
test
es
nop
push
out
mov
int3
int
rcr
rol
stc
cmp
loope
mov
add
pop
or
ins
pop
push
out
ret
call
dec
jns
sbb
fisubr
pop
fst
jns
bound
push
fndisi(8087
test
jmp
mov
pop
or
push
repz
fisub
test
pop
inc
addr16
ret
push
or
cmp
mov
cwde
adc
sub
mov
aaa
or
jno
loop
pop
cmp
(bad)
fwait
loope
in
repnz
int3
pop
imul
pusha
mov
cmp
push
dec
cmps
push
sbb
cmp
sub
sbb
lea
inc
sub
jne
daa
in
mov
mov
or
sub
mov
cmp
lahf
mov
test
pop
outs
dec
adc
dec
lahf
add
xchg
cmp
xchg
jmp
fs
dec
inc
fstp
pop
inc
mov
sti
xor
cmc
cmp
adc
sbb
aam
mov
jb
movs
popf
xchg
nop
call
stos
ss
lods
hlt
cmp
or
pop
std
mov
xchg
sub
ret
mov
(bad)
lock
jmp
and
das
(bad)
repnz
(bad)
lahf
bound
(bad)
movs
cmp
add
adc
imul
xchg
out
xchg
or
inc
ret
bound
xlat
pusha
mov
mov
loope
int3
jae
mov
fwait
mov
dec
retf
add
and
(bad)
ins
mov
push
(bad)
pop
lock
adc
ins
inc
jnp
(bad)
jb
dec
sar
xchg
xor
repnz
retf
jnp
mov
adc
and
dec
push
data16
es
and
test
xor
dec
call
sahf
cli
mov
in
fs
daa
sub
push
stos
sub
dec
jo
or
sti
cmp
in
xor
or
sbb
(bad)
movs
inc
ins
fs
ficom
out
call
xor
cs
lods
retf
dec
jg
pop
in
jo
sahf
inc
aad
shr
mov
ins
add
dec
les
fsubr
ins
mov
(bad)
mov
call
pushf
jg
jnp
rcr
inc
dec
out
pop
lds
jnp
addr16
add
movs
mov
in
jmp
jg
cmp
cmp
jne
mov
cmp
popa
(bad)
pop
mov
std
mov
dec
add
add
stc
mov
sub
push
push
popa
fs
lds
test
dec
or
push
push
test
push
fistp
out
add
test
lds
mov
pusha
test
push
repnz
mov
ja
js
inc
inc
ins
mov
ja
mov
out
mov
push
icebp
retf
aaa
add
cmp
call
(bad)
retf
push
mov
shr
test
push
fnstcw
dec
jmp
pop
pushf
test
test
jo
jmp
out
sbb
jmp
pop
(bad)
imul
jns
mov
push
sbb
mov
dec
xchg
mov
cmc
out
mov
mov
push
les
or
sti
sub
push
inc
test
dec
mov
sahf
mov
push
inc
inc
ja
xlat
sub
mov
outs
pop
pop
repz
sbb
sub
loop
mov
and
xor
arpl
sahf
mov
aaa
pop
dec
std
mov
popa
push
fisttp
sub
test
mov
mov
dec
lods
faddp
dec
enter
pop
or
sbb
stos
ja
repz
sbb
fst
push
sbb
mov
into
arpl
push
pop
cmp
lea
dec
inc
cmp
pop
aad
inc
stos
int3
push
retfw
or
jl
xor
ret
out
outs
sub
sub
pop
mov
xor
inc
cs
mov
call
and
sbb
or
pop
mov
mov
movs
lods
sub
jle
ret
sub
sbb
in
inc
sete
daa
push
dec
cs
inc
les
push
mov
adc
popa
push
push
test
fstp
inc
gs
pop
sub
jle
push
pop
or
call
sbb
dec
push
cmp
push
cdq
mov
add
inc
(bad)
jp
in
stos
and
inc
jbe
xor
rol
sbb
jecxz
rcl
xor
sar
inc
mov
out
push
jle
jae
sub
mov
sub
mov
and
xchg
pop
push
gs
div
outs
or
(bad)
pop
push
and
shl
(bad)
repz
push
add
push
or
dec
jecxz
xor
in
sar
sbb
popf
icebp
add
push
rcr
dec
push
sbb
adc
or
fnsave
outs
inc
mov
test
xchg
and
pop
jbe
fldenv
inc
xchg
ss
das
dec
inc
outs
xchg
jle
retf
dec
ret
daa
clc
adc
out
add
or
lods
lds
icebp
shl
outs
or
movs
mov
stos
xor
into
sub
les
or
mov
xlat
inc
call
(bad)
dec
jle
jecxz
lds
pop
adc
fcmovne
cdq
sub
into
mov
outs
aad
pushf
push
push
out
in
retf
jns
frstor
xor
retf
mov
xlat
push
(bad)
jnp
loop
sbb
mov
xor
popf
aad
repnz
adc
xor
out
inc
jb
dec
xchg
inc
fdiv
inc
movs
add
div
jmp
and
xor
adc
jno
xchg
repnz
xchg
adc
outs
scas
add
push
rcr
mov
pop
js
inc
jnp
(bad)
int
mov
xor
lds
mov
or
dec
cmp
and
dec
xchg
or
xchg
xchg
call
gs
sub
mov
mov
es
out
ins
xchg
pusha
push
cmp
and
add
lock
xchg
lods
jno
ret
jo
dec
mov
(bad)
daa
test
dec
mov
fdiv
mov
stos
cmps
xchg
push
std
jo
outs
loop
xchg
dec
pop
mov
movs
sub
arpl
xchg
sbb
and
daa
xchg
retf
and
stos
pop
clc
cmp
sar
movs
hlt
repz
sbb
push
mov
(bad)
pop
sbb
sub
sbb
lods
cmp
cmp
adc
aas
pusha
push
push
out
jecxz
dec
jecxz
enter
and
xchg
sub
add
mov
lods
mov
sahf
outs
push
out
push
aaa
cmp
push
inc
in
aaa
aas
mov
pop
add
jmp
rcl
push
xchg
or
addr16
rol
test
xor
mov
pop
out
mov
shr
cmp
push
ins
xchg
sub
cmp
dec
jl
or
and
add
in
shl
xor
scas
repz
jle
mov
or
push
mov
lods
popa
or
dec
sbb
out
mov
hlt
mov
sti
cmp
and
paddd
pop
mov
(bad)
xchg
call
inc
xchg
ss
xor
cmp
movs
imul
jge
pop
loopne
fsubr
mov
aad
or
dec
movs
es
retf
inc
idiv
cmp
shl
mov
xchg
mov
jne
add
fistp
cmc
rol
outs
dec
sbb
push
add
js
loopne
out
jg
test
in
pop
shl
stc
adc
mov
popf
or
ins
adc
scas
dec
rcr
sub
popa
push
mov
and
clc
movs
rcl
sahf
neg
jo
add
cmc
cs
or
loope
pop
and
popa
in
pusha
push
push
pop
lahf
(bad)
jg
push
cmps
pop
cmp
(bad)
jle
sar
lock
push
mov
icebp
fidivr
dec
mov
ds
mov
lods
dec
adc
ror
stos
imul
shr
ja
mov
outs
and
mov
cmps
shr
add
xor
cmp
adc
mov
adc
inc
fdivr
fiadd
pop
into
icebp
jo
fcom
mov
and
and
jmp
mov
repnz
adc
and
(bad)
cmp
sbb
enter
lock
mov
mov
cmc
pop
loopne
mov
xor
icebp
mov
out
aas
mov
mov
jnp
ins
add
das
push
int3
inc
fimul
(bad)
cmp
js
mov
mov
dec
push
scas
imul
inc
in
sub
inc
lods
into
xor
(bad)
sub
cmp
cmc
dec
ins
and
mov
inc
pop
movs
push
pushf
mov
mov
enter
fidivr
adc
or
(bad)
les
jl
sub
mov
xor
out
sub
f2xm1
and
push
je
icebp
es
jecxz
sar
cmc
xor
push
adc
sahf
jecxz
cmps
aad
neg
or
nop
jae
or
pop
push
add
cmp
dec
out
fbld
mov
retf
cmc
rol
add
es
les
push
fst
mov
lock
xor
jb
sub
add
jg
adc
dec
push
push
vmovq
neg
inc
and
cmps
inc
inc
ficom
push
mov
mov
(bad)
xchg
cmp
add
int
dec
aaa
sub
das
and
inc
enter
sbb
sbb
cmp
or
(bad)
sbb
or
cmp
jno
cmp
sbb
push
test
adc
mov
cmps
call
cmp
cmp
sar
mov
mov
lahf
sbb
add
shl
add
mov
into
add
iret
out
inc
sbb
addr16
out
lods
jb
jnp
xchg
mov
push
sub
in
xchg
or
out
in
mov
push
lea
int
enter
rcr
mov
cmp
xchg
loopne
cdq
(bad)
fs
or
mov
das
(bad)
ins
jbe
pop
push
inc
jge
rcl
or
out
inc
cmc
cmp
adc
fwait
push
imul
push
jbe
xchg
retf
add
enter
stc
fisttp
sub
adc
frstor
mov
pop
test
cmp
mov
clc
pop
fstp
ins
loope
out
scas
mov
addr16
adc
stc
mov
lea
dec
pop
push
adc
push
add
pop
dec
push
fldenv
pop
jnp
and
mov
(bad)
mov
leave
dec
mov
pop
xor
pop
rcl
push
enter
cli
and
les
cmp
xlat
in
imul
mov
out
leave
cmp
sub
fwait
or
dec
ficomp
lods
shl
ja
add
mov
rol
mov
iret
add
imul
ret
mov
popa
add
clc
mov
jo
xchg
imul
(bad)
fldcw
jle
sub
int
sub
data16
or
cmps
mov
ret
sbb
shl
mov
imul
and
mov
or
data16
pop
add
pop
add
sar
fcmovnb
sti
mov
outs
xchg
loop
inc
xchg
pusha
loop
je
sbb
test
mov
arpl
inc
das
pop
mov
mov
in
push
int
scas
cmp
pop
push
mov
pop
int
inc
adc
movs
daa
hlt
out
rcr
es
inc
mov
adc
inc
enter
inc
mov
adc
test
outs
mov
addr16
jne
cmp
clc
and
inc
jmp
jecxz
adc
pop
sub
in
lods
ret
(bad)
xor
sbb
xor
dec
jmp
xlat
cmp
xchg
pop
enter
or
and
scas
and
or
ss
cmp
xor
add
pop
mov
(bad)
push
cwde
mul
ss
push
loop
push
sub
cmp
mov
sub
leave
xchg
retf
inc
ins
cmps
pop
jno
or
or
popf
repz
xchg
mov
push
nop
sub
frstor
dec
xchg
xchg
repnz
int3
fidivr
pop
aam
cmc
adc
push
loopne
lds
repz
inc
movs
pop
lea
imul
sbb
jbe
scas
mov
jmp
push
call
mov
pop
ins
xor
int3
mov
sbb
sahf
into
inc
aam
cmp
fnstsw
gs
and
xchg
std
test
cld
ins
gs
sub
retf
imul
dec
xor
int3
mov
cmp
iret
xchg
sbb
push
arpl
div
shl
jg
xchg
pop
inc
xchg
inc
xor
in
daa
xchg
or
ror
int
ror
imul
fist
imul
and
or
outs
sub
ds
sub
push
outs
cld
out
inc
mov
adc
inc
sbb
cmps
repnz
push
jmp
enter
rcl
cli
movs
jg
rcl
xchg
das
inc
inc
leave
in
dec
xor
fstp
mov
push
inc
mov
fmul
int3
lods
dec
mov
movs
mov
movs
(bad)
xor
jbe
loop
jbe
inc
(bad)
sbb
mov
inc
cwde
push
sahf
test
pop
fisub
sbb
jle
in
add
mov
(bad)
bound
scas
xor
or
(bad)
push
xor
inc
das
or
dec
dec
addr16
cmc
test
pop
(bad)
lods
dec
stos
retf
or
retf
pop
adc
out
dec
arpl
cmp
ficomp
jp
add
lock
inc
or
retf
push
int3
add
repz
and
icebp
xchg
push
das
fsubrp
and
lods
cmps
push
or
jmp
mov
adc
test
add
cld
xchg
mov
mov
pop
mov
adc
and
mov
icebp
pop
jb
movs
xchg
push
sahf
call
or
into
hlt
ds
inc
dec
ss
jg
push
sar
popa
xchg
lea
scas
dec
test
mov
test
mov
in
pop
out
push
sahf
ins
sbb
stos
cld
outs
inc
movs
cdq
int3
xor
test
ror
movs
add
pop
pop
rol
ins
out
jns
pop
or
shl
or
imul
(bad)
xchg
adc
mov
adc
gs
xor
aas
push
sbb
ret
int
dec
mov
imul
pop
pop
test
sbb
pushf
mov
xchg
in
idiv
push
loop
repnz
int
or
enter
cmps
sbb
xor
adc
jbe
ror
pop
mov
mov
xor
cwde
dec
and
xor
mov
ins
hlt
sub
in
repz
fwait
rol
out
mov
fnstsw
push
pop
push
cvtps2pd
mov
lods
adc
jb
xchg
gs
adc
or
mov
adc
out
ffree
lahf
mov
loopne
mov
ins
rcr
outs
or
sbb
in
inc
push
leave
xchg
lea
iret
call
mov
ins
adc
push
das
fwait
movs
lahf
pushf
sub
movs
xor
add
mov
jmp
pop
pop
inc
(bad)
movs
mov
cmp
mov
cmp
pop
add
in
sbb
test
shr
push
ins
dec
cld
out
mov
sahf
fsubr
iret
sub
mov
popf
imul
xor
xor
add
je
sti
add
mov
push
test
cmp
mov
shufps
and
ret
fstp
cld
xor
and
sub
in
pop
bound
jns
rcr
sbb
mov
mov
pop
xor
(bad)
push
or
icebp
loop
jns
xchg
sub
inc
adc
xchg
pop
cmc
scas
loope
inc
mov
push
arpl
out
cs
mov
or
movs
mov
xchg
sbb
mov
mov
shr
mov
inc
adc
repz
ret
fmul
mov
sub
fld
adc
xor
pop
push
int
mov
or
(bad)
cmp
ins
mov
cmp
jecxz
adc
shl
inc
cwde
sub
movs
adc
aad
dec
stc
fs
pushf
sub
mov
(bad)
cmp
push
lods
loopne
and
pushf
fcomp
and
fist
pop
rol
scas
xchg
pusha
mov
out
xor
out
mov
dec
cs
add
sub
sub
xchg
pushf
loopne
sti
fucomip
in
arpl
mov
mov
gs
int3
xor
xchg
xor
pop
hlt
push
pop
mov
rcl
(bad)
add
xor
stos
sub
imul
lods
daa
cmps
mov
sbb
sbb
cmp
jmp
loop
add
adc
ret
cmp
inc
fwait
jmp
mov
jle
mov
pop
popa
je
mov
xchg
out
fiadd
add
adc
and
mov
js
sub
scas
in
xchg
or
and
ss
xchg
push
sub
les
es
pop
mov
or
iret
mov
stos
add
sar
adc
mov
lahf
iretw
mov
cwde
(bad)
cld
movs
mov
cmp
fisub
add
mov
ins
cld
scas
imul
push
cmp
xchg
push
fst
dec
repz
mov
test
jmp
cmp
arpl
mov
je
pop
and
ins
outs
call
add
xchg
inc
gs
pop
adc
or
scas
es
mov
inc
or
jge
jp
dec
dec
sub
jb
jl
inc
xchg
add
jl
cmc
sub
jno
sub
push
pop
add
dec
xor
aaa
out
mov
das
loop
int
push
and
dec
dec
push
mov
inc
sti
pop
adc
inc
mov
inc
call
mov
xor
sbb
fcmovnb
cmp
das
sub
loopne
mov
sub
xor
stos
ja
xchg
test
cmp
(bad)
leave
imul
push
ds
push
fcmove
mov
aas
repnz
pop
add
adc
nop
mov
mov
pop
iret
(bad)
adc
fmul
sub
cwde
xchg
out
lfs
inc
cmps
ficomp
sbb
mov
stos
xchg
or
icebp
movs
sub
in
int3
sub
xchg
xchg
arpl
stos
mov
add
mov
jbe
mov
test
nop
sub
sub
or
mov
wrmsr
cmp
lods
cwde
stc
int
sub
jecxz
adc
fdivp
and
pusha
jmp
inc
into
rcr
jmp
push
mov
xor
stos
arpl
and
inc
mov
outs
mov
aas
ffreep
test
push
clc
ss
jbe
sbb
popw
cmp
int3
or
mov
lahf
arpl
sbb
mov
arpl
sar
lods
xor
aas
mov
inc
pop
mov
in
lock
mov
nop
test
and
(bad)
push
shl
or
scas
mov
pop
and
lock
iret
repz
xchg
push
xor
dec
mov
out
or
and
in
retf
(bad)
xor
stc
jbe
repnz
fidivr
or
mov
xchg
mov
mov
mov
jns
jmp
xchg
mov
cmp
inc
je
inc
fmul
mov
pusha
in
jmp
xlat
inc
hlt
xchg
inc
test
stc
dec
mov
mov
lock
ins
int
ds
cmps
das
(bad)
xchg
test
enter
push
in
cmp
cmp
jl
cli
pop
std
in
mov
mov
add
lods
fucompp
ins
mov
in
and
outs
test
imul
arpl
dec
mul
push
neg
push
jne
pop
pop
enter
rcr
sub
mov
dec
mov
jbe
and
shl
push
jae
xor
mov
adc
mov
adc
adc
sbb
ret
xor
xor
lods
add
gs
cmp
jmp
mov
add
loopne
stc
nop
jge
mul
sub
sbb
xchg
mov
arpl
pop
cmp
repnz
sub
cmp
test
xor
gs
push
xor
inc
scas
sar
mov
retf
mov
xor
jmp
popf
in
pop
icebp
jb
xchg
jbe
call
lods
fldcw
rcr
imul
or
push
adc
inc
les
sub
pop
push
and
int3
mov
sub
cmp
cmps
iret
aam
jb
aam
mov
and
(bad)
sbb
sbb
and
sbb
xchg
sub
jge
cmps
cmp
xchg
mov
mul
add
sbb
push
mov
daa
add
dec
jp
popf
jo
mov
push
jl
mov
inc
repz
pop
mov
test
or
pop
add
pop
rol
sbb
push
sbb
ja
je
les
mov
cld
mov
inc
mov
jbe
pop
and
inc
in
and
pop
add
sbb
ret
mov
xor
mov
adc
add
outs
sahf
aam
sbb
mov
int3
movs
adc
dec
mov
jnp
dec
adc
data16
fwait
cld
fcomp
lds
push
lods
mov
dec
(bad)
gs
adc
sahf
pusha
adc
cmp
out
jns
sub
sub
pop
aaa
daa
mov
add
push
add
xchg
repnz
adc
mov
fldcw
push
xchg
cmp
rcl
aas
inc
xchg
in
cs
(bad)
push
xchg
cmp
cli
arpl
push
xor
jne
mov
mov
xchg
(bad)
imul
mov
popf
mov
lahf
xor
bound
jo
pop
enter
test
adc
movs
inc
movs
mov
pop
ins
lahf
sbb
imul
jle
inc
test
and
enter
push
cmp
ss
fst
cdq
jb
fisubr
in
pop
push
mov
push
jnp
fwait
mov
mov
sbb
test
mov
cmp
sar
mov
nop
push
xor
je
lods
pop
or
(bad)
movs
xor
inc
sbb
push
adc
sbb
pop
fmulp
jmp
stos
mov
add
pop
dec
test
(bad)
jno
jge
fcom
retf
jmp
add
nop
pop
mov
pop
outs
jl
mov
xchg
les
push
dec
(bad)
cli
mov
add
inc
ja
loope
(bad)
jno
pop
aaa
jle
and
pop
pop
les
std
jb
inc
rcl
into
loop
popf
sti
(bad)
mov
rcr
daa
mov
jb
sub
lds
jp
push
mov
pop
sbb
pusha
hlt
ror
arpl
or
ret
add
xchg
mov
lea
aas
inc
jmp
les
retf
jle
(bad)
ds
mov
push
lahf
(bad)
or
(bad)
cmp
jns
xchg
fmul
arpl
movhps
sub
fild
mov
cmp
(bad)
(bad)
mov
(bad)
pop
sar
jp
sub
pop
push
pop
scas
jp
stos
ret
mov
and
mov
test
sti
push
pop
push
in
call
mov
pushf
fistp
mov
loopne
push
fnstsw
into
xchg
add
push
cmp
or
sbb
mov
xor
loopne
(bad)
jo
jmp
mov
jmp
push
cmp
inc
lahf
dec
cmp
sub
and
fwait
mov
cmc
outs
mul
lahf
and
dec
ret
jecxz
icebp
rcl
xchg
mov
cmp
sbb
out
out
sub
aas
jne
mov
add
outs
mov
push
push
aam
push
loope
inc
shr
inc
pop
daa
int
jge
mov
(bad)
daa
mov
jo
ins
inc
dec
adc
(bad)
jge
leave
movs
lea
pop
in
mov
test
lods
jl
dec
test
dec
jle
es
out
rcl
fwait
in
aad
pushf
bound
push
jge
mov
retf
add
or
and
movs
out
fld
cdq
stc
inc
adc
xchg
jbe
xchg
mov
xor
jg
test
cmp
pop
call
outs
xor
out
fnsave
push
pusha
mov
pop
mov
xchg
ss
sub
xchg
mov
sbb
jb
or
sbb
and
jae
mov
mov
shr
inc
pop
mov
loopne
jecxz
lock
pop
pop
shl
push
push
xchg
sub
xor
lods
sub
cmps
xchg
fsub
sahf
dec
sbb
push
imul
imul
fs
mov
ret
push
sub
mov
push
out
movs
add
sbb
pop
fwait
sub
mov
rol
sub
dec
xor
addr16
inc
outs
rcr
inc
cdq
sar
(bad)
and
ins
and
cmp
jge
retf
aad
adc
mov
mov
xchg
xchg
pop
dec
cdq
pop
jecxz
cmp
aad
retf
mov
iret
repz
(bad)
and
jnp
lea
imul
mov
jecxz
out
adc
mov
stos
mov
mov
pop
cmp
or
nop
mov
add
fldcw
xchg
test
popa
mov
int3
mov
jb
sbb
call
adc
xlat
pop
mov
jne
popa
mov
sub
fist
cwde
repnz
inc
popf
cdq
mov
out
and
push
sub
dec
mov
in
push
mov
mov
or
mov
jmp
in
xor
pop
scas
mov
leave
pop
push
jb
addr16
loope
xchg
jge
imul
sbb
fbstp
sub
shl
ffree
imul
lea
inc
cmp
dec
out
int3
dec
stos
retf
into
loop
(bad)
or
fnsave
mov
xor
dec
push
xor
jmp
cwde
je
xchg
movs
cli
jmp
xchg
cmps
fisubr
int3
mov
fstp
sub
xchg
stos
test
fild
shl
sbb
cdq
(bad)
lea
rcl
fnstsw
xchg
add
pop
cmc
js
adc
push
ds
data16
xchg
(bad)
out
push
test
push
arpl
out
adc
adc
into
aad
cmc
cli
pushaw
lock
retf
scas
dec
aad
dec
mov
mov
dec
xor
(bad)
ja
adc
inc
fbstp
sbb
mov
inc
inc
iret
cli
xor
pop
pop
sahf
xor
lea
in
scas
(bad)
dec
mov
dec
or
push
cmp
sbb
dec
dec
ins
cmp
sub
or
div
xor
cmp
or
pop
out
xchg
and
cld
push
daa
cmp
shl
dec
xchg
pop
sahf
bound
repz
sbb
inc
adc
rol
xchg
xchg
call
scas
pop
mov
das
inc
and
rcr
mov
pop
cli
jne
ror
(bad)
fcom
xor
fcomi
sahf
fcom
shr
adc
mov
xchg
cmp
and
fnsave
mov
push
dec
iret
add
jmp
or
scas
icebp
xchg
arpl
or
mov
mov
add
adc
repz
ret
int3
in
in
inc
pop
dec
sbb
jno
xchg
sub
stos
fcmovne
mov
adc
mov
outs
in
mov
outs
(bad)
pop
stc
mov
test
lahf
popa
or
inc
cdq
mov
dec
lock
xchg
push
mov
push
test
les
fwait
or
mov
pop
push
loopne
lods
cmp
xchg
push
cmp
das
sub
pop
test
test
add
cli
xchg
sbb
das
and
in
nop
in
pop
cmp
ss
inc
xrelease
xchg
mov
mov
pop
arpl
and
mov
cmp
mov
idiv
pusha
dec
das
push
outs
cmps
xor
xlat
mov
cld
out
pop
push
xchg
jb
mov
mov
jg
mov
pop
test
aaa
mov
xor
jno
jae
jo
ja
popf
imul
lds
mov
pusha
dec
mov
icebp
cmc
jmp
inc
fucomp
pop
sub
aas
jbe
cmp
movs
fisubr
push
pop
lds
shr
lods
or
nop
pop
inc
sub
or
adc
cmp
xor
and
mov
add
imul
fisubr
idiv
add
pop
jp
jno
(bad)
mov
loopne
xlat
outs
pushf
push
sub
xchg
xor
inc
xchg
jge
jmp
add
adc
hlt
cmp
mov
fs
add
shr
je
or
dec
adc
push
push
mov
les
and
adc
shr
retf
and
mov
fbld
fbstp
jmp
jo
mov
in
pop
mov
jo
fild
jb
cmp
mov
mov
xchg
adc
mov
ss
or
stos
out
movs
xchg
iret
xor
pop
pop
mov
jp
sbb
mov
pop
test
push
push
fsubr
pushf
xchg
add
mov
outs
mov
and
and
xor
inc
adc
xor
jecxz
mov
ins
pop
xchg
xchg
imul
jg
shl
or
std
pop
or
repz
stos
xchg
sbb
push
call
in
push
cmps
mov
jns
inc
jb
and
xchg
ret
push
inc
mov
push
out
ret
jo
loop
out
dec
add
pop
repz
sub
mov
mov
sbb
movs
shr
sbb
xchg
fisttp
loope
sub
fldenv
jmp
sub
cdq
outs
out
push
sub
jne
inc
jb
daa
movs
movs
sub
mov
test
jne
dec
aaa
jbe
pop
popa
mov
push
outs
add
lea
mov
sbb
ds
sar
mov
data16
lahf
lods
sbb
sti
hlt
repz
dec
clc
xchg
retf
push
push
add
out
and
dec
add
call
cmp
mov
mov
test
dec
pop
add
cmp
in
(bad)
ds
or
shl
stc
(bad)
icebp
lock
cmp
sub
cdq
mov
jmp
sbb
test
xor
loope
dec
pop
jmp
les
shl
stos
outs
sahf
outs
push
add
fwait
adc
call
jl
pop
cmc
fcom
loopne
ja
les
push
aas
fdiv
adc
mov
loopne
not
test
loope
mov
(bad)
and
jp
fiadd
jb
pop
in
push
in
dec
rcl
aam
dec
sbb
jo
push
cs
ins
sub
in
dec
mov
loop
rsm
push
bnd
mov
add
mov
outs
test
mov
or
sbb
mov
rol
adc
(bad)
sbb
call
push
popa
jae
add
popa
lahf
cmp
in
cmp
jecxz
lods
sar
mov
imul
xor
imul
adc
pop
(bad)
cmp
sub
(bad)
and
adc
sub
or
out
jnp
hlt
pop
shr
pop
and
inc
sar
jmp
popf
repz
push
sahf
jae
in
sbb
mov
cmp
out
pop
push
mov
pop
leave
xchg
add
mov
scas
mov
test
adc
mov
mov
cli
and
sub
pop
sbb
cmp
cmp
xor
mov
mov
mov
ret
scas
cmps
mov
add
das
mov
ror
mov
jae
lds
and
in
lods
repz
fdivr
mov
pop
add
out
aad
adc
mov
pop
mov
cwde
out
xor
stc
add
push
in
and
inc
ins
cdq
js
arpl
pop
loope
sbb
call
jle
sub
stos
in
and
mov
inc
pop
test
rcr
out
dec
jbe
xchg
mov
xor
mov
jmp
add
pushw
or
cwde
pushf
aaa
int
or
jmp
push
repz
xchg
add
jmp
push
dec
cmp
mov
lods
arpl
inc
sbb
pop
in
mov
sbb
stc
push
(bad)
call
add
call
xchg
popa
icebp
sub
push
mov
iret
cmp
or
jae
jmp
jns
add
xchg
cmp
jmp
jne
add
movs
xor
inc
nop
leave
jb
xchg
fiadd
das
xchg
mov
(bad)
adc
cs
mov
iret
out
adc
leave
js
outs
sbb
ror
jle
test
sbb
fidivr
sub
pusha
scas
(bad)
mov
or
dec
mov
int
stc
xor
rcl
sbb
and
cmc
test
xchg
mov
push
mov
movs
jl
stos
(bad)
sub
in
fdiv
fadd
dec
pop
mov
sub
enter
test
push
mov
push
popf
and
and
fwait
aaa
retf
pop
in
lds
loope
adc
inc
test
in
lahf
xchg
xor
pop
add
dec
add
jns
repz
int3
xchg
jl
xchg
xor
mov
movs
mov
call
retf
int
jg
inc
sbb
ds
ins
loope
jbe
add
push
jo
int
cmps
retf
xor
and
mov
xor
enter
test
mov
mov
inc
addr16
cmps
or
pop
pushf
call
mov
cmps
dec
push
jbe
push
cdq
test
dec
jp
scas
int
inc
push
jg
pop
xor
test
or
test
sub
les
or
mov
sbb
pop
bound
cmp
jmp
scas
cwde
ja
and
mov
jbe
pop
inc
add
inc
fs
adc
inc
ret
(bad)
and
test
imul
jmp
int
sbb
sub
in
add
scas
gs
sub
push
mov
mov
push
xchg
outs
gs
(bad)
jne
push
xchg
mov
retf
aam
push
pop
pop
inc
xlat
push
mov
xchg
pop
push
test
les
add
inc
jge
lods
lahf
push
adc
inc
aam
mov
pop
jp
cli
fisub
xchg
mov
mov
mov
push
aad
fs
movs
lods
stos
enter
hlt
inc
jg
push
jmp
mov
inc
jae
mov
cli
and
sub
jne
cmps
or
cmp
fist
mov
pop
inc
and
sbb
mov
jbe
jl
jl
mov
dec
fwait
mov
jecxz
shl
arpl
mov
cmp
(bad)
xor
pop
jno
push
fsub
sub
repnz
lock
or
push
push
jne
xchg
sar
and
inc
mov
ror
mov
dec
push
mov
clc
adc
pop
xchg
rcl
retf
fcom
fldcw
adc
shl
outs
scas
mov
xchg
fisttp
xor
add
mov
cmp
mov
mov
and
stos
inc
dec
rcl
out
jne
jnp
gs
dec
or
cmps
loopne
dec
retf
int3
jmp
(bad)
xchg
pop
adc
aam
xor
lods
push
adc
jg
mov
add
lea
push
out
ds
jns
sbb
sbb
mov
mov
loope
fdiv
mov
call
mov
mov
in
les
inc
and
scas
sub
push
retf
loopne
popa
outs
or
mov
xchg
push
mov
push
add
hlt
ss
idiv
lea
or
mov
pop
push
retf
dec
push
dec
repz
sub
stos
repz
sbb
icebp
jb
shl
ret
xchg
add
push
int
jb
jo
outs
dec
je
inc
pushf
xchg
sub
push
icebp
leave
jne
push
push
in
xchg
bound
push
mov
sub
jp
xor
push
shr
adc
push
jae
and
out
in
jo
pop
and
pop
push
ins
imul
mov
xlat
dec
dec
xchg
sbb
in
popf
mov
data16
sub
mov
rcr
div
inc
or
movs
inc
aas
daa
xchg
inc
add
mov
mov
mov
ja
adc
shl
dec
pop
or
in
fistp
pop
mov
or
fs
fdivr
mov
lock
pop
in
leave
sub
(bad)
out
push
dec
ret
mov
add
daa
push
sbb
imul
and
out
or
push
inc
mov
jo
jb
fisub
in
inc
mov
fsub
inc
jmp
xor
jae
lahf
retf
sbb
mov
(bad)
in
rol
int3
jo
adc
mov
jno
lds
push
xchg
into
sub
cmp
mov
rcl
aaa
pushf
repnz
dec
xchg
fild
and
aas
mov
out
stc
add
cmc
mov
inc
sbb
pusha
mov
jge
sub
pusha
or
pop
ror
jno
aad
bnd
movs
(bad)
mov
sbb
mov
or
cmp
xchg
xchg
cmps
xor
sub
inc
jae
cmp
stos
fiadd
je
stos
mov
cmp
sbb
push
dec
popa
xchg
in
push
test
mov
push
fwait
xchg
pushf
push
shl
mov
adc
arpl
dec
sar
jge
daa
das
xor
push
or
cld
popa
lods
and
jbe
jo
adc
scas
adc
inc
std
and
jge
cmps
popf
imul
jae
ret
xchg
xor
add
jne
sahf
fwait
call
pop
add
pushf
fild
jmp
stc
ret
xor
xor
mov
les
sahf
imul
js
sti
mov
jmp
dec
ins
or
sub
inc
or
xchg
push
das
aas
push
dec
adc
mov
ret
pop
call
and
(bad)
xor
add
push
mov
push
in
cmps
xchg
xchg
test
cmp
dec
adc
ret
pushf
sbb
nop
cmp
push
lods
imul
sbb
aad
adc
and
cmps
push
bound
call
cmps
movs
nop
mov
test
jno
cmps
repnz
mov
out
inc
nop
jg
inc
push
pop
xchg
loope
fild
xlat
xor
inc
sub
jno
pop
inc
ret
inc
mov
sub
xor
sub
mov
mov
add
mov
in
mov
cmp
outs
in
push
jno
ret
mov
int
mov
mov
add
popf
cwde
shl
into
fild
and
fimul
cs
mov
repz
dec
mov
jmp
xchg
out
addr16
sbb
cmp
(bad)
xor
sub
inc
mov
mov
fld
mov
rol
pop
mov
in
setae
adc
or
or
ror
call
or
mov
clc
mov
int
pop
enter
ror
in
mov
dec
jno
sub
mov
sbb
fmul
sbb
lods
sub
test
or
jge
cmps
sub
aaa
jb
outs
mov
push
(bad)
out
xchg
pusha
shl
mov
inc
inc
sub
scas
aaa
xlat
xchg
dec
(bad)
dec
and
adc
add
fdivr
mov
sti
jecxz
cwde
cmp
lock
adc
dec
inc
xor
cmp
movs
test
mov
jecxz
mov
pop
jbe
call
retfw
xlat
push
jge
lea
mov
(bad)
push
xor
scas
dec
inc
test
sbb
(bad)
enter
ficomp
mov
or
dec
mov
add
nop
les
fwait
outs
xchg
dec
xor
mov
mov
outs
xchg
aas
int
cwde
lock
fndisi(8087
inc
cwde
fcomp
aaa
mov
push
push
into
cmp
xchg
sar
or
sar
ja
aam
gs
cmp
ret
push
xchg
sub
shl
dec
cmp
mov
imul
xchg
and
and
sub
mov
xor
sub
sbb
mov
sbb
mov
pop
pop
and
shl
(bad)
out
mov
push
in
inc
hlt
jmp
cmp
call
clc
mov
sbb
fdiv
mov
out
push
inc
push
loop
jle
pop
add
xchg
jp
and
and
js
mov
sbb
aam
lods
xor
mov
imul
ret
sub
xchg
xchg
inc
les
rcl
daa
les
and
inc
std
shr
int3
and
test
pop
sbb
pop
dec
push
xchg
inc
inc
es
(bad)
cmp
addr16
lock
and
and
jle
push
fbstp
pusha
dec
into
in
xor
sub
or
cmp
sub
adc
stc
cld
dec
xchg
jbe
pop
jp
shr
fisubr
xchg
shl
pop
je
icebp
mov
pop
dec
in
loop
lds
mov
push
inc
push
cmp
cmp
adc
inc
mov
cld
mov
sub
jecxz
cmp
mov
movs
cld
test
xchg
mov
mov
or
jnp
jge
pop
out
popf
and
shl
cmps
std
out
out
inc
ret
aad
call
ins
sub
inc
in
mov
jle
mov
hlt
adc
pop
jno
inc
iret
clc
ror
not
outs
mov
adc
sti
push
inc
pop
cmp
mov
(bad)
cmp
test
neg
add
test
push
and
xchg
cmp
fisttp
(bad)
jnp
call
mov
ins
push
add
jge
idiv
es
and
cmp
sub
inc
mov
or
lock
inc
scas
add
adc
mov
shl
or
mov
mov
sbb
sub
jmp
and
add
in
adc
lods
fisub
and
sub
inc
in
xchg
sub
aas
fcmovbe
xor
xchg
or
dec
inc
xchg
xor
xchg
sub
adc
stos
cli
ins
jmp
out
pop
mov
cwde
push
mov
mov
loop
push
sbb
and
mov
mov
inc
ror
in
adc
jge
xchg
cmp
stc
sub
out
repnz
jecxz
cmp
call
mov
pushf
adc
or
jle
and
mov
jo
and
mov
and
sbb
pushf
or
in
cli
adc
mov
popf
lahf
jmp
mov
dec
cmc
daa
fcomp
push
xor
(bad)
in
sub
xchg
(bad)
push
jmp
(bad)
call
mov
sub
xchg
inc
and
pop
fbld
add
dec
test
cli
pop
out
jle
je
or
or
push
repnz
or
cli
scas
sbb
and
jp
lock
add
jecxz
lock
cmps
pop
jns
outs
adc
add
sbb
sbb
mov
cmp
xchg
xchg
lahf
cli
shl
sbb
mov
push
xor
int
cmp
retf
and
dec
fldcw
fisttp
arpl
pop
call
xor
xor
inc
cmp
mov
loope
mov
mov
and
adc
fmul
pop
inc
fcomip
sbb
dec
icebp
aas
mov
fcmovb
xchg
aad
sbb
push
push
cwde
xor
xor
pop
cmc
test
stos
or
push
enter
imul
jmp
xor
iret
sbb
cmp
pusha
or
mov
outs
aaa
xor
aad
push
xor
popa
call
xor
push
push
or
inc
pop
sbb
push
jno
pop
gs
ror
mov
aaa
mov
push
outs
mov
pop
mov
pop
or
fbstp
scas
stc
cmp
push
adc
ja
pop
pop
push
sti
fisub
add
push
(bad)
out
(bad)
cmp
lea
sub
inc
fimul
and
cdq
and
xchg
aaa
pushf
imul
(bad)
fstp
xchg
and
popf
jl
lds
(bad)
stc
push
aas
jb
mov
loope
add
cdq
aam
popa
dec
and
jle
push
lods
and
icebp
outs
or
cmp
test
sbb
xchg
mov
pop
fwait
lods
adc
cmp
inc
lea
ficom
bound
popf
push
sar
retf
mov
int3
mov
pop
dec
bnd
cmp
and
and
out
int3
or
dec
push
mov
push
dec
(bad)
sahf
cmc
jne
into
scas
or
xchg
xor
mov
test
pop
repz
fs
ins
ret
mov
push
pop
cli
xor
push
adc
leave
jo
sbb
icebp
mov
test
jmp
jb
cmps
adc
stos
adc
retf
cld
cmp
cmp
(bad)
fidiv
adc
or
pop
cmc
sets
clc
xchg
sbb
push
hlt
mov
jns
adc
lea
push
fld
add
arpl
dec
push
or
fwait
adc
pop
test
mov
lods
cwde
stos
mov
add
jne
call
xor
lds
cmp
mov
aad
inc
loopne
pop
push
or
ffree
cli
sbb
cmps
repnz
add
bound
pop
stos
(bad)
stc
add
sub
scas
test
jb
mov
or
cwde
mov
lea
lds
sub
pop
dec
cmps
jecxz
mov
jo
sub
and
xchg
pop
xchg
aad
mov
add
enter
in
ret
ins
mov
(bad)
aad
add
lea
dec
data16
and
loop
mov
jb
pusha
in
sub
dec
sub
lahf
mov
(bad)
fcmove
aas
add
int
mov
ror
daa
scas
nop
inc
push
mov
jg
test
mov
or
imul
dec
jl
cmp
lea
mov
outs
mov
ficom
popf
and
in
gs
mov
lods
fstp
(bad)
adc
repnz
dec
mov
mov
jge
rcl
call
jno
xchg
clc
mov
inc
fsub
sub
mov
test
mov
fwait
nop
arpl
jle
into
in
iret
dec
sub
sbb
lahf
adc
mov
mov
enter
shl
addr16
xchg
mov
mov
mov
push
adc
xor
xor
jo
fwait
repz
es
in
enter
mov
mov
or
out
jle
or
enter
(bad)
mov
push
and
clc
push
fdivp
inc
inc
into
lods
das
pop
or
inc
jmp
mov
das
push
in
adc
ja
call
jnp
jbe
xchg
gs
push
push
pop
retf
or
pusha
or
adc
adc
push
in
mov
call
mov
jae
mov
hlt
fild
pushf
cmp
inc
jbe
cmp
jl
push
or
mov
(bad)
int
ja
xlat
mov
sbb
sub
xchg
sub
test
pop
test
fisub
ret
jns
cmp
add
test
std
out
fs
sub
adc
mov
adc
pop
fs
mov
(bad)
push
and
inc
outs
imul
fbld
xchg
xor
fwait
pop
mov
pop
and
jbe
test
and
pop
pusha
xor
and
pop
mov
call
inc
mov
mov
and
pop
sub
frstor
lahf
or
mov
jge
or
nop
fist
pop
pop
inc
push
mov
(bad)
cli
or
or
cmp
mov
fstp
dec
lods
fwait
test
(bad)
jne
dec
mov
arpl
mov
add
std
sbb
shr
mov
jg
enter
pop
popa
retf
add
jne
mov
push
sub
retf
call
push
ss
cwde
push
adc
mov
rol
or
fucomp
dec
(bad)
jmp
fs
cmp
dec
push
inc
pusha
(bad)
fimul
inc
push
sbb
xchg
mov
cdq
or
sbb
inc
dec
in
aaa
cmp
shr
inc
sub
fbstp
iret
loopne
pop
mov
enter
mov
sub
or
sar
adc
out
dec
jp
sub
ins
call
das
mov
jne
pop
into
push
rcr
cmp
inc
lods
xchg
fs
ret
arpl
ins
xlat
mov
fmul
jmp
jnp
or
dec
repz
pop
sbb
(bad)
daa
mov
gs
lea
push
sbb
sar
push
mov
adc
repnz
repz
mov
fistp
jae
cwde
xchg
or
cwde
inc
pop
pop
or
mov
test
push
jmp
clc
xor
movs
pop
ins
jge
mov
lock
adc
sbb
sub
cmp
jnp
and
inc
out
add
xor
pop
mov
mov
adc
push
xor
mov
cmc
xchg
or
mov
enter
sbb
xor
(bad)
pushf
pop
pusha
ins
and
fcmovb
push
pop
arpl
sbb
arpl
jb
in
imul
xchg
mov
dec
xor
lds
stc
xlat
mov
ror
fadd
cmp
xchg
push
inc
mov
xchg
ret
and
or
mov
ret
in
adc
jmp
dec
(bad)
retf
adc
cmp
and
lds
cmp
mov
mov
(bad)
mov
cwde
push
jne
jne
jmp
push
rcl
xor
jns
clc
ins
imul
fidivr
sar
pop
sub
sbb
bound
and
scas
rcl
pushf
je
hlt
push
and
jae
sub
lock
mov
pop
push
dec
fidivr
mov
pop
push
fucomip
inc
out
pop
sub
xor
icebp
jecxz
call
jns
js
imul
(bad)
jbe
pop
sbb
jmp
out
sub
or
test
scas
mov
sbb
sbb
rcr
sbb
add
cmps
shl
out
mov
test
xor
xchg
lock
jl
retf
jecxz
inc
fwait
ins
dec
jo
xchg
fild
push
shl
push
push
fs
cmp
out
stos
xchg
or
sbb
icebp
test
mov
mov
mov
add
dec
inc
mov
test
clc
mov
mov
and
push
mov
ins
xchg
icebp
fild
xchg
loop
sub
push
add
add
add
and
dec
jmp
call
and
outs
rcl
js
cwde
lods
push
fisub
dec
jge
mov
add
hlt
ja
in
jo
hlt
pushf
jbe
push
in
dec
and
inc
and
sti
int
and
mov
int
outs
add
adc
cld
cmps
js
arpl
add
jae
add
jle
imul
push
cmp
loopne
clc
xor
stos
sub
dec
imul
mov
push
ins
out
sub
fstp
jp
dec
mov
aad
xchg
cdq
dec
ror
iret
pop
mov
jmp
jbe
inc
es
nop
mov
ret
imul
jae
(bad)
movd
out
mov
jmp
mov
lock
inc
mov
mul
push
xor
das
jno
data16
popa
sbb
xor
repz
pushf
adc
dec
(bad)
push
push
sub
fstp
jnp
push
imul
dec
scas
imul
popf
mov
aaa
hlt
(bad)
(bad)
scas
fs
dec
hlt
pop
push
sbb
inc
push
dec
and
stos
push
dec
stos
jmp
jnp
pop
and
xor
neg
cs
jb
mov
fimul
jecxz
push
cmp
adc
shl
clc
or
and
scas
arpl
xor
mov
lods
outs
jg
jg
cmps
xchg
pop
lods
pop
rol
sti
mov
push
mov
pop
adc
call
les
iret
mov
cmp
xor
call
out
not
pop
loope
fdiv
xchg
dec
mov
out
fdiv
outs
pop
sbb
js
lahf
adc
mov
inc
aaa
imul
(bad)
mov
add
jb
push
lds
pop
scas
clc
sbb
js
jge
(bad)
outs
ror
cmovns
sbb
sbb
and
sub
push
sub
mov
push
push
outs
xchg
push
lahf
cmp
adc
push
and
sahf
pop
sbb
outs
pop
add
ins
sbb
out
and
leave
sub
(bad)
jo
out
test
mul
sbb
lahf
daa
clc
push
out
push
test
lock
sub
pop
enter
xchg
jle
sar
adc
sub
sbb
push
inc
and
cmp
mov
pop
pop
cld
sub
cdq
ins
add
add
push
and
mov
repz
ins
sbb
leave
lea
ds
(bad)
fsubr
movs
add
lods
fsubr
cmp
lahf
imul
add
sbb
popf
addr16
mov
aaa
sahf
enter
in
neg
lock
aad
pop
mov
lock
push
enter
nop
jbe
or
fs
fcom
adc
out
jne
mov
cmps
push
outs
mov
sbb
add
push
inc
movs
jo
pcmpgtw
mov
xlat
imul
pop
push
pop
add
imul
repz
cmps
in
or
stos
jae
hlt
fwait
les
imul
jl
mov
xchg
cmp
call
push
jp
pop
cdq
popa
emms
call
adc
fst
inc
je
popf
dec
test
xchg
sub
cmp
jp
cld
mov
add
out
out
lods
shl
(bad)
add
outs
leave
out
sahf
mov
dec
xchg
cmp
pop
movq
fcom
sub
inc
aas
push
sub
or
sub
lods
shl
cmps
cmp
mov
xor
arpl
and
inc
mov
fwait
xor
repz
cmp
adc
cmp
or
jg
iret
mov
cli
sar
lods
(bad)
push
xor
aaa
mov
push
jnp
call
jne
stos
lahf
push
xor
xor
sub
out
add
sbb
inc
mov
outs
popf
in
mov
sub
sbb
cmp
cmp
pop
ss
and
or
shr
jnp
adc
shl
jl
aas
movs
mov
cmp
xchg
sbb
push
and
outs
ret
test
addr16
idiv
ss
sub
fmul
out
cmp
pop
dec
ret
fndisi(8087
or
int
pop
xchg
pop
jb
pop
js
int3
es
cdq
pusha
ret
inc
jle
inc
sub
push
sbb
pop
push
in
jmp
fnsave
dec
movs
xchg
aas
inc
jp
loop
or
adc
sbb
jno
sub
mov
fcomp
push
std
xchg
(bad)
(bad)
push
loop
dec
push
push
mov
and
sub
mov
outs
jge
jle
scas
push
push
sbb
pop
inc
or
push
push
push
lea
jge
add
addr16
cmp
xor
inc
cld
and
xchg
out
mov
lea
test
mov
adc
inc
call
cs
mov
push
ret
adc
mov
or
aaa
or
mov
stos
xchg
cmc
out
and
jne
dec
push
adc
daa
sbb
pusha
scas
popa
outs
in
adc
sbb
adc
ret
push
xchg
leave
or
sub
stos
loopne
enter
mov
imul
pop
pusha
sub
sbb
dec
push
ss
rcr
mov
loope
retf
xor
adc
sbb
ret
lds
add
or
mov
jge
scas
and
test
lods
mov
ret
js
stos
or
fmul
jle
mov
shl
push
push
in
jnp
adc
adc
mov
in
add
pop
leave
inc
rcr
mov
pop
cmp
ror
lods
out
stos
dec
jmp
ror
add
or
(bad)
push
rcl
call
addr16
loop
adc
pop
cmc
xor
xor
sub
lsl
imul
addr16
jnp
ja
test
dec
adc
inc
or
ror
mov
push
gs
ret
movs
adc
repz
dec
push
jae
pop
aad
(bad)
dec
mov
xchg
fldcw
mov
sbb
add
mov
push
xchg
pop
adc
out
(bad)
inc
jnp
cmc
pop
daa
mov
(bad)
or
imul
add
pop
int3
aaa
mov
fistp
jmp
test
das
xor
dec
imul
out
adc
retf
sbb
xchg
arpl
out
dec
add
inc
sub
sbb
mov
repnz
ja
push
in
sbb
sar
nop
xor
ins
ret
jno
add
mov
mov
mov
retf
ins
add
mov
xchg
push
sub
adc
jp
push
add
repz
sar
cmp
fstp
(bad)
push
rcl
sbb
sbb
les
retf
in
shl
push
mov
xchg
popa
pushw
mov
cmps
outs
das
dec
repnz
push
pop
jb
xor
jp
add
sub
ds
imul
adc
inc
ror
(bad)
es
iret
cs
xchg
ins
mov
inc
inc
cmp
mov
popf
pop
dec
push
add
iret
jmp
sbb
mov
push
xlat
enter
sbb
sti
inc
das
push
cwde
inc
and
test
retf
add
add
sub
test
fldenv
sub
xchg
leave
mov
fdiv
sub
push
push
addr16
ror
adc
mov
(bad)
xor
leave
fiadd
sar
pop
int
push
cmp
dec
aad
jp
pop
mov
ficomp
mov
xor
add
in
jb
out
jl
adc
pop
sub
jne
lds
rcl
sbb
in
push
jae
push
xchg
pop
test
xchg
or
mov
mov
jmp
dec
test
fs
popa
push
mov
jnp
pop
(bad)
xchg
ja
shl
push
ja
mov
sbb
loope
fdivr
sbb
xchg
je
cmc
in
mov
movs
mov
out
add
or
scas
adc
mov
push
sbb
xor
and
add
(bad)
jg
pop
nop
lods
add
stos
mov
daa
mov
mov
sti
xchg
cld
lds
ret
imul
shl
cmp
mov
jge
jno
and
out
sbb
inc
(bad)
mov
xor
inc
adc
pusha
cmp
fnstsw
bound
mov
ret
inc
jns
jmp
in
xor
leave
mov
jle
loopne
cmp
push
ss
(bad)
xchg
(bad)
out
in
ss
mov
jbe
xchg
mov
adc
jle
test
cs
leave
repnz
or
sub
(bad)
cmp
fsubp
pop
sub
push
int
xor
cmp
or
xor
sub
daa
inc
dec
das
sbb
xlat
stc
or
and
jns
sbb
mov
cli
push
jmp
(bad)
jbe
pop
dec
scas
std
je
adc
inc
call
mov
pop
push
and
add
dec
push
jo
add
pop
jp
xor
pop
mov
xor
nop
or
sub
mov
nop
xor
pop
inc
pop
leave
pop
mov
inc
addr16
adc
outs
popa
rcr
pop
and
les
lea
pop
in
mov
in
and
dec
rcr
je
or
pop
(bad)
and
into
test
enter
push
jmp
iret
popf
clc
outs
xchg
mov
fnstenv
pop
pop
inc
dec
add
push
retf
pop
rol
jns
jmp
loop
out
cmp
adc
xchg
xor
imul
(bad)
les
int
sahf
xchg
int
out
neg
adc
jno
add
iret
xor
adc
xchg
jmp
push
ret
inc
ds
push
pop
jno
xchg
in
mov
sub
daa
xor
sti
es
push
push
adc
mov
push
sbb
hlt
loope
sub
cmc
jo
adc
mov
push
test
in
dec
sbb
lock
iret
mov
pop
jmp
jns
mov
fwait
xchg
rol
adc
and
daa
jnp
xor
movs
mov
push
pop
jae
or
(bad)
mov
or
sub
cmps
test
in
das
pop
call
or
movs
xchg
adc
in
jmp
mov
push
call
(bad)
sbb
mov
jo
mov
gs
push
mov
inc
call
add
pop
(bad)
push
pushf
mov
or
dec
(bad)
stc
dec
in
in
xor
sbb
sub
jg
xchg
mov
ficom
sbb
scas
std
mov
mov
fldcw
sub
pop
push
movs
aas
xchg
jne
mov
cmp
dec
js
test
stc
sub
int
push
jge
xlat
pop
call
fadd
lahf
bound
xchg
and
fs
add
sub
imul
dec
lock
int
jne
push
clc
test
jle
push
lea
ss
or
shr
sbb
in
out
cmp
fst
mov
rcl
xor
adc
adc
(bad)
pop
sbb
add
fidivr
adc
ror
shl
adc
sbb
xchg
add
and
out
adc
shl
(bad)
loope
dec
mov
jns
mov
add
adc
push
cwde
and
adc
push
loope
and
fidiv
in
xchg
popf
mov
es
out
and
pop
mov
addr16
xchg
jo
icebp
popf
jb
ss
pop
shl
mov
out
into
iret
pop
shrd
out
fcom
fidivr
mov
sbb
(bad)
mov
cli
pop
dec
push
sbb
cld
pop
stos
cmp
adc
pop
sub
pop
cmps
dec
mov
(bad)
sbb
sub
jo
mov
jmp
out
fcomi
test
dec
shld
fidivr
jmp
es
shr
xor
xchg
cld
leave
out
sub
mov
jmp
push
pop
mov
mov
jecxz
pop
sub
mov
cmp
push
in
test
pop
mov
cmp
fwait
or
push
stos
inc
add
mov
xchg
push
add
push
aad
or
and
loop
xor
iret
data16
fdiv
lahf
scas
pop
cmp
xor
xlat
xchg
js
int
cmp
pop
or
test
gs
sub
push
mov
add
out
js
sbb
iret
jno
jg
out
pusha
sbb
leave
out
lea
in
cwde
cdq
in
loope
push
sub
mov
sahf
cmp
xor
sahf
inc
leave
fild
aaa
(bad)
dec
mov
aam
and
jle
push
mov
fdivr
sti
adc
ror
xor
(bad)
jmp
or
cmp
stos
and
push
out
dec
iret
jecxz
adc
adc
int3
pop
xchg
pop
push
pushf
aad
inc
cdq
das
adc
je
cmps
dec
cdq
xchg
imul
fnsave
das
cwde
rcr
dec
iret
xor
cmps
aaa
js
stos
out
dec
push
push
mov
adc
int
in
clc
sbb
push
repz
dec
push
fmul
jbe
loope
push
nop
or
pop
push
sahf
and
pop
outs
xchg
out
fs
out
inc
jmp
cmp
mov
sbb
mov
jne
arpl
adc
aas
mov
xlat
js
xchg
ret
and
das
sbb
into
add
jmp
repz
cmp
pop
add
add
cwde
nop
pop
mov
in
retf
pop
test
repz
dec
ret
imul
mov
movs
(bad)
sar
ins
xlat
pop
mov
mov
sbb
sub
xor
push
cld
mov
fsubr
pop
popf
js
jns
pop
add
and
repz
xchg
loopne
fwait
mov
dec
adc
ret
adc
das
or
ret
sub
das
add
popf
mov
pop
cmp
xchg
rcr
mov
xor
pop
jae
imul
inc
mov
rol
push
popf
ret
xor
int3
fidivr
(bad)
rcr
fs
aad
jg
cmp
add
inc
neg
xchg
pop
mov
and
dec
sar
call
dec
sub
(bad)
jl
pop
xchg
lds
idiv
call
add
imul
test
inc
or
ins
inc
jg
inc
pop
pop
xchg
add
mov
mov
adc
into
jp
push
and
mov
jbe
push
cmp
xor
inc
ret
hlt
mov
popf
dec
mov
pop
mov
arpl
dec
inc
shl
out
pop
cli
movs
aaa
sbb
scas
in
sbb
sti
jae
cli
sbb
cwde
and
and
sahf
jno
inc
jl
pop
jae
sbb
outs
inc
xchg
movs
stos
xchg
or
mov
sub
dec
inc
cmp
inc
fdivrp
mov
push
fist
cs
lock
rcl
mov
jp
iret
movs
cmc
cld
mov
and
(bad)
xchg
das
test
pop
push
lahf
dec
mov
dec
sbb
lods
push
outs
cli
adc
jnp
sub
add
add
and
(bad)
repz
push
mov
aas
mov
arpl
in
scas
cmps
jns
hlt
iret
addr16
adc
add
push
dec
mov
bound
jg
jge
fs
pop
mov
call
add
mov
cmp
add
pop
daa
arpl
call
ror
test
and
out
sbb
pop
mov
scas
inc
fcom
stos
shl
imul
jne
cmps
inc
ss
mov
jnp
movs
jo
sub
test
xor
mov
aaa
lods
jb
pusha
dec
and
and
(bad)
sbb
int3
and
or
push
fcmovbe
push
mov
das
jo
mov
pop
xlat
or
mov
in
inc
pusha
and
es
lahf
movs
and
imul
and
xor
repnz
in
or
ret
cli
repz
loope
xor
stc
out
mov
adc
in
cmp
shr
pop
int
mov
ror
aam
sbb
jl
sub
mov
aad
test
fs
lods
ds
mov
test
outs
jno
push
push
imul
inc
xchg
dec
mov
jmp
dec
xlat
jbe
aaa
loopne
sar
rol
dec
jae
jns
mov
cmp
or
(bad)
mov
push
xchg
mov
ds
lds
dec
jb
rcr
das
mov
pop
jecxz
(bad)
out
out
mov
mov
inc
cmc
jno
push
ins
(bad)
sti
pop
dec
and
inc
fnstenv
cmps
sub
jne
stc
ret
cs
or
rcl
aam
xchg
or
je
push
push
into
push
add
lods
lea
shl
and
inc
mov
std
cmp
(bad)
iret
dec
lahf
shl
pop
xchg
add
hlt
xlat
jge
cmc
out
(bad)
test
inc
cmc
ror
jbe
push
scas
inc
inc
fsubp
cmc
adc
add
retf
xor
retf
leave
movs
pop
test
sbb
nop
mov
dec
(bad)
sbb
daa
call
push
imul
jg
outs
sahf
adc
mov
or
inc
fdiv
and
nop
jb
cmp
js
enter
sub
es
cmp
xor
mov
(bad)
mov
mov
aad
lahf
leave
cmp
adc
(bad)
leave
push
mov
cs
sub
inc
shr
fldenv
and
inc
or
pop
mov
pop
xchg
rol
out
ja
dec
cs
jle
add
and
popa
(bad)
call
jle
js
int
xor
fistp
add
inc
add
mov
fs
mov
fmulp
retf
or
int3
enter
stos
sbb
(bad)
cmp
sbb
loop
scas
into
push
data16
or
push
std
push
xor
retf
movs
push
das
xchg
push
movs
xlat
sub
mov
cs
jp
stc
cmps
mov
pop
xchg
cwde
cmp
cmp
shl
and
and
(bad)
imul
test
sub
pop
cld
sahf
cmps
lds
inc
popf
push
xchg
(bad)
pop
xchg
test
adc
ss
push
dec
clc
jbe
out
call
adc
push
popa
movs
inc
sub
or
xchg
or
(bad)
push
dec
shl
inc
gs
or
in
call
test
stc
and
fst
stos
or
mov
cdq
pop
fild
addr16
cmc
sub
mov
cmp
xchg
ins
add
jo
jle
dec
or
fisub
stos
iret
retf
dec
test
or
add
or
xchg
dec
iret
loopne
ret
imul
daa
jmp
push
or
int
mov
and
int3
out
dec
in
stos
mov
data16
sub
popf
cmps
repz
mov
jnp
outs
fisubr
fstp
pop
mov
aaa
es
lods
push
cdq
inc
sub
mov
and
xor
aas
jle
mov
adc
dec
gs
into
and
(bad)
cmp
leave
dec
fsub
jp
cdq
sub
ds
jno
and
imul
into
daa
cmps
push
gs
mov
outs
push
aaa
cmp
xchg
adc
push
sbb
fwait
mov
in
inc
sub
loop
clc
cdq
push
movs
xchg
pop
lods
jmp
cmp
fimul
jmp
loope
mov
mov
mov
(bad)
xchg
xchg
adc
xor
(bad)
int3
xlat
cli
push
pop
dec
pop
mov
fild
enter
add
jge
loope
das
popa
inc
push
lds
xlat
mov
popf
aam
sbb
aaa
(bad)
mov
adc
pop
imul
pop
cli
cdq
dec
mov
cli
clc
mov
cld
in
inc
in
es
and
leave
pop
xchg
push
or
mov
sub
shl
xlat
into
int3
mov
and
inc
je
push
mov
push
dec
mov
mov
lds
test
fadd
mov
and
inc
fsubrp
add
cli
xor
sub
imul
outs
cmp
pop
add
and
daa
js
paddd
pop
in
sub
icebp
or
add
bound
in
push
ficom
mov
pop
push
adc
mov
jp
mov
mov
ja
or
and
inc
iret
stos
xor
mov
jecxz
xchg
lods
mov
push
aad
mov
in
jno
gs
inc
or
sbb
stc
add
jmp
movs
lea
pop
in
lds
fdivrp
jo
arpl
add
scas
mov
outs
push
jle
in
aam
std
test
js
ins
fadd
xor
scas
in
in
rol
xor
jge
or
mov
adc
inc
and
rol
shl
clc
mov
clc
call
pushf
scas
mov
or
pop
fwait
push
sbb
scas
jmp
(bad)
xor
pop
dec
xchg
sub
push
push
sbb
(bad)
test
mov
xchg
mov
in
ror
mov
js
(bad)
ret
test
pop
push
es
xchg
pop
jo
sbb
cmp
inc
adc
and
pop
lods
mov
mov
fcmovu
test
movs
scas
inc
push
fist
mov
fld
inc
ins
xor
imul
mov
cmps
ins
push
push
ret
jno
pop
inc
sub
add
test
push
out
(bad)
repz
int
popa
data16
mov
and
xchg
stos
(bad)
sub
js
scas
add
lea
push
dec
cmp
enter
lods
or
sub
and
(bad)
fstp
mov
les
jbe
push
test
cmp
(bad)
jl
or
pop
jns
int
aaa
inc
addr16
adc
retf
fldcw
xchg
adc
mov
fild
jae
sbb
push
or
push
retf
mov
pop
pusha
adc
pop
dec
fwait
or
gs
mov
imul
pushf
mov
pop
out
sub
imul
js
lahf
jo
std
add
jp
mov
(bad)
es
and
lds
mov
dec
loopne
sti
mov
dec
mov
jmp
sub
fiadd
call
jmp
repz
shl
inc
xchg
outs
and
movs
movs
adc
push
cmp
xor
jmp
dec
repnz
and
mov
sub
xor
retf
xchg
mov
push
loope
int
pop
popf
xor
lock
outs
iret
sub
sahf
mov
jg
sbb
adc
daa
or
cmp
outs
into
inc
out
fimul
push
xor
push
mov
xor
int3
mov
shl
clc
inc
cs
push
cmp
ror
inc
popa
inc
jecxz
(bad)
pop
pop
ins
mov
pop
mov
loop
add
cdq
inc
and
xchg
inc
ins
adc
jl
(bad)
cmps
stos
xor
xchg
sbb
sbb
stos
sbb
rcr
push
je
cmp
xor
jb
popf
dec
outs
jnp
aas
mov
(bad)
icebp
mov
jmp
mov
jl
mov
fisttp
add
push
addr16
retf
cmp
test
jae
mov
shr
mov
ficom
adc
jle
jne
sbb
retf
ds
aam
and
add
ins
ins
in
daa
sahf
mov
in
outs
pop
sbb
pop
jb
add
cmps
mov
or
hlt
stos
ret
adc
ja
xchg
sub
nop
dec
ss
fstp
dec
js
xor
xor
cmp
inc
adc
les
jmp
aad
call
jp
jge
mov
pop
scas
xchg
jp
xor
popf
repz
cmp
mov
inc
aad
retf
xchg
outs
add
xchg
jb
sub
mov
add
test
int
in
enter
sub
ja
aam
and
out
mov
enter
add
outs
stos
xchg
add
jmp
leave
and
rol
sub
scas
std
sahf
(bad)
not
pop
jno
idiv
fild
inc
shl
cmp
xchg
mov
loop
xchg
out
sub
xchg
div
addr16
pop
mov
xchg
xchg
aad
dec
or
adc
push
push
std
push
jb
xchg
push
scas
and
push
fld
imul
push
push
mov
fstp
scas
pop
hlt
clc
nop
sub
mov
out
mov
es
scas
and
pushf
and
sub
sbb
xlat
in
into
dec
fild
inc
lds
call
dec
cmps
sbb
pop
mov
xor
cmc
hlt
lahf
inc
scas
ror
loope
mov
jbe
add
and
sbb
dec
add
pop
imul
jp
sbb
(bad)
mov
push
fild
sbb
cld
xor
sbb
dec
fadd
add
cmp
jbe
in
jne
hlt
dec
test
push
sbb
outs
adc
push
fwait
xor
and
cli
cmps
lahf
jmp
xchg
fidiv
fld
jo
(bad)
movs
jg
mov
add
add
stos
xchg
retf
nop
rcr
ja
cmps
stc
push
jnp
rsqrtps
push
popa
movs
mov
icebp
xchg
or
bound
in
or
pop
movs
sti
shl
inc
sbb
pop
push
repnz
fbstp
mov
mov
mov
cli
in
out
test
cli
sbb
cmp
sbb
outs
pop
ror
pop
add
jl
movs
add
mov
les
jns
jl
and
sahf
jge
sbb
popa
addr16
push
and
adc
add
sbb
jl
arpl
and
pop
sahf
sub
leave
mov
das
ret
push
sub
mov
jmp
mov
and
jge
leave
(bad)
retf
scas
xchg
bound
fsub
sbb
xchg
or
push
mov
pop
stc
mov
fwait
adc
test
clc
cmp
sbb
xchg
cmc
lds
pop
ins
mov
mov
xchg
sti
sbb
push
stos
movs
shl
imul
aad
inc
sub
icebp
lods
(bad)
cmc
ins
sbb
movs
xlat
je
dec
sbb
in
adc
push
neg
mov
dec
mov
adc
mov
inc
add
shl
daa
pop
xchg
call
push
fwait
cmp
fcmovnbe
cwde
cmp
jae
ds
repz
loop
xor
imul
out
in
fsubr
add
pop
lods
jp
addr16
lahf
fnstcw
inc
mov
xchg
and
and
ja
ins
(bad)
push
fdivr
lea
retf
adc
sub
push
push
ja
and
mov
push
lock
loopne
loopne
rcl
pop
pop
ins
jmp
mov
jno
fisub
inc
(bad)
out
(bad)
bound
or
pop
enter
fwait
popf
repz
std
rcl
test
icebp
push
sbb
jmp
ror
xchg
out
push
std
add
xchg
pop
test
test
xor
les
add
add
shl
mov
sbb
cdq
push
dec
in
push
std
add
stc
das
stos
adc
inc
cld
data16
cmp
cmp
and
inc
shr
retf
inc
(bad)
mov
sti
pop
inc
ret
mov
xchg
add
push
jne
mov
adc
dec
aad
(bad)
aaa
mov
cmp
ret
test
xor
outs
bound
repz
dec
mov
cmp
lahf
xchg
jg
sub
(bad)
test
cdq
cwde
jno
ins
mov
cmp
pop
ins
or
(bad)
es
gs
add
psadbw
xchg
add
sbb
jne
adc
movs
dec
dec
pop
fidivr
fisubr
jae
retf
dec
jb
fbld
cmp
mov
aaa
addr16
fisttp
out
call
pop
mov
enter
fnstcw
dec
mov
xlat
or
xchg
jnp
test
sti
bound
(bad)
mov
mov
test
mov
mov
hlt
(bad)
into
pushf
jecxz
sbb
fcmovu
icebp
sahf
xor
mov
lock
xor
xor
cld
rep
inc
sub
jbe
mov
mov
push
push
loop
jmp
rcr
mov
jmp
rcr
xor
cmp
ficom
xchg
(bad)
xor
pusha
cmps
push
data16
cmp
ret
xchg
pusha
push
or
inc
xor
or
sub
ins
push
cmp
(bad)
mov
jmp
fidiv
push
inc
out
scas
shr
lea
jbe
push
arpl
loopne
mov
popa
repz
mov
dec
shl
mov
jmp
cmp
hlt
mov
lahf
cdq
lods
xchg
clc
fimul
fild
jg
adc
imul
not
or
mov
iret
aas
ja
stos
push
inc
inc
rcr
int3
cmps
cmp
and
in
mov
push
(bad)
out
aaa
push
push
dec
push
dec
cwde
pop
push
pop
push
cwde
jmp
push
pop
xor
xchg
call
push
enter
jecxz
movs
sbb
or
shl
sbb
push
and
pop
push
ds
loope
(bad)
xchg
push
repz
enter
repnz
adc
inc
les
jae
pop
ret
loop
pop
mov
push
daa
sub
cld
mov
cmp
push
jl
loopne
mul
fistp
ficom
xchg
pop
push
stos
cmps
mov
mov
pusha
fwait
push
xor
pop
loope
imul
adc
mov
ret
into
and
adc
mov
inc
bswap
push
jge
outs
and
loopne
test
test
mov
xor
aam
xchg
call
movs
inc
test
mov
jnp
pop
push
rep
cmp
xor
(bad)
out
xchg
out
out
neg
out
and
jmp
scas
dec
rcl
jmp
sbb
push
adc
xchg
xor
in
inc
retf
dec
out
inc
mov
and
sub
push
call
xchg
mov
ffreep
push
and
mov
mov
xchg
sbb
call
mov
and
scas
xor
cmp
inc
ficomp
dec
(bad)
pushf
hlt
dec
pop
scas
sahf
jnp
leave
mov
sub
js
dec
push
fsub
xor
leave
pop
leave
mov
fld
xor
jae
pop
retf
jne
cmps
pop
mov
dec
xchg
repnz
or
in
pop
xchg
add
cmp
jl
add
(bad)
shl
mov
xor
xchg
push
adc
or
addr16
mov
mov
(bad)
mov
push
aad
inc
cmps
dec
xor
fs
lock
inc
test
jle
das
push
jmp
jbe
or
je
mov
dec
dec
imul
inc
and
fs
jns
or
and
gs
mov
(bad)
pop
aaa
loop
(bad)
cmp
test
clc
mov
ins
fidiv
mov
ins
mov
(bad)
fmul
xor
shr
pop
mov
sbb
ins
nop
cwde
mov
scas
mov
ret
xchg
mov
add
repz
ins
sub
pop
dec
add
and
shr
or
shl
push
pop
inc
cmps
adc
imul
das
arpl
ins
mov
cwde
leave
push
ins
mov
ins
lock
(bad)
xchg
movaps
hlt
imul
pusha
(bad)
sbb
sub
push
mov
or
popf
inc
and
into
jns
or
scas
pop
xchg
ss
cdq
sub
or
jo
push
push
push
rcl
mov
repnz
jo
pop
sbb
imul
xchg
call
cmp
inc
mov
movs
cld
cli
sub
xor
xor
movs
gs
pop
mov
xor
aad
out
outs
fcomp
ja
mov
test
ins
fwait
mov
push
mov
fucomi
lds
mov
jge
mov
pushf
fistp
sbb
wbinvd
(bad)
mov
aaa
cli
jo
inc
jo
mov
(bad)
fadd
aaa
inc
or
mov
jae
fidiv
jg
push
std
push
outs
out
test
push
adc
mov
retf
fwait
movs
in
dec
sub
mov
mov
xchg
jecxz
cs
jmp
sbb
xchg
xor
pop
sbb
xchg
shl
sub
stos
ins
out
or
sti
xchg
or
sbb
pop
push
movs
cmp
jle
clc
cmps
jns
jns
ror
aad
push
stos
sub
jl
(bad)
jb
push
loopne
or
jg
push
jp
dec
les
ret
iret
clc
into
push
cwde
sub
adc
jo
or
inc
out
xor
cmp
ret
stc
aam
lods
test
mov
pusha
pop
(bad)
mov
sbb
pop
mov
jne
lods
fisttp
mov
sti
jbe
rol
jne
ret
or
sub
jb
ja
(bad)
scas
shl
jae
or
mov
mov
loop
dec
stos
jnp
pop
lods
dec
xchg
sti
leave
js
(bad)
sti
mov
stos
sub
int
adc
mov
sbb
test
outs
pusha
inc
dec
and
sbb
mov
(bad)
sbb
xchg
xchg
ror
ins
cmc
gs
xchg
cwde
push
dec
outs
inc
push
cwde
js
sbb
popf
sub
mov
mov
jle
mov
mov
sub
int
pop
in
addr16
pop
pop
dec
dec
sbb
pop
pop
lahf
adc
in
mov
loop
imul
(bad)
mov
ins
inc
xchg
dec
push
ret
repnz
ins
jns
out
scas
shr
inc
mov
movs
ins
pop
inc
xor
push
mov
popa
mov
fisub
in
aaa
xor
inc
clc
sti
dec
aaa
(bad)
jo
sbb
stos
jmp
lods
pop
and
lock
and
and
stos
shl
mov
add
pop
das
sub
test
lock
jmp
dec
stc
or
cli
mov
fadd
cmps
sahf
out
mov
jge
xchg
js
xchg
test
jmp
pop
and
or
bnd
jno
xchg
ror
sub
mov
idiv
enter
inc
mov
pop
ret
enter
xchg
repz
(bad)
shl
cmp
xchg
fs
ret
sub
add
mov
ret
or
loope
xchg
xor
loopne
js
and
imul
das
cmp
and
ja
inc
call
dec
or
shl
ja
scas
not
pop
push
ret
push
push
pop
clc
cs
sbb
mov
push
pop
mov
scas
mov
stos
jge
and
scas
addr16
xchg
dec
jg
mov
repz
(bad)
mov
sub
and
jmp
dec
and
jns
inc
(bad)
push
(bad)
jle
and
int
outs
xchg
pop
out
jne
test
add
add
mov
fs
hlt
cmp
imul
fxtract
push
inc
or
sbb
inc
sbb
and
push
and
enter
mov
jle
or
retf
stos
or
lods
mov
dec
(bad)
dec
clc
add
iret
pusha
sbb
aaa
inc
jo
and
ja
sbb
or
test
mov
cmc
xchg
and
pop
bound
(bad)
loope
call
inc
pusha
shr
mov
ins
jb
dec
lahf
cwde
mov
pop
push
stc
pop
sub
jmp
xchg
scas
or
test
test
cwde
lods
test
rcl
pop
cmc
fs
fs
outs
mov
or
popf
(bad)
leave
aam
sbb
inc
mov
cmp
xor
test
pop
or
fcom
inc
sub
ins
outs
mov
cli
or
sti
xlat
push
in
cld
aaa
and
push
xor
dec
adc
sub
inc
ja
cmc
or
push
popf
loop
retf
icebp
js
push
pop
pop
adc
mov
push
xchg
adc
call
mov
xchg
add
cmps
push
arpl
fcmovnbe
or
dec
clc
loopne
pop
sbb
pop
push
stc
sar
inc
inc
sbb
dec
neg
jno
jno
nop
jge
pop
fild
hlt
pusha
push
cli
loop
cdq
ja
add
fistp
popw
jo
xchg
fisub
and
aam
sbb
add
sub
and
cmp
mov
test
xor
sbb
jmp
jge
jecxz
movs
add
scas
pop
lds
fimul
xchg
sbb
and
jno
test
pop
xchg
sbb
int
ja
mov
or
inc
xchg
xor
and
pop
pop
cmp
mov
into
(bad)
movs
sar
ds
lods
int
movs
mov
sbb
not
xor
(bad)
pop
dec
jg
in
icebp
ds
adc
cmp
out
sbb
pop
sub
dec
adc
pop
sub
leave
xchg
inc
mov
push
jg
cld
(bad)
das
add
leave
lock
sbb
lods
faddp
adc
outs
xchg
loopne
lods
cmp
test
add
inc
imul
fsub
push
mov
test
rcr
jge
call
pop
enter
xor
imul
fisttp
aaa
mov
adc
ret
pop
cmp
cdq
les
int
pop
(bad)
(bad)
xchg
mov
retf
lods
int
mov
ins
add
pop
inc
fldcw
sbb
in
rcl
jl
stc
inc
pop
aam
call
mov
iret
mov
shr
das
inc
dec
out
das
pusha
and
stc
cmp
sbb
sub
(bad)
jns
push
dec
cmp
mov
or
inc
xchg
mov
stos
adc
mov
imul
jae
fistp
ja
sbb
pop
(bad)
inc
mov
push
cmp
in
ins
lods
xchg
pop
and
and
outs
push
retf
out
cmp
popf
mov
dec
add
loope
icebp
fdivr
xchg
js
hlt
repnz
mov
call
pop
cld
scas
jnp
push
push
fwait
lock
fidivr
jbe
stos
test
out
or
xchg
inc
pop
jmp
(bad)
leave
and
(bad)
jno
add
add
xor
wbinvd
mov
test
(bad)
jmp
cli
sbb
ror
jns
xchg
stos
cmp
or
mov
(bad)
mov
bswap
adc
pop
xchg
pushf
retf
xchg
push
daa
jmp
outs
test
enter
jg
retf
lock
outs
fnstsw
lock
call
mov
aaa
cmps
fs
pop
and
sbb
mov
mov
sub
mov
aam
mov
jnp
xor
addr16
push
sub
fs
or
call
aaa
push
jno
add
adc
jb
mov
or
fiadd
and
pushf
or
mov
sub
or
fld
rcl
dec
lods
cld
sub
inc
and
cmp
sub
std
addr16
cmp
loopne
rcr
push
mov
dec
xchg
scas
fidivr
sbb
(bad)
loop
dec
iret
test
jns
push
or
xchg
std
cwde
jle
inc
movs
jecxz
pop
movs
or
jge
test
mov
(bad)
arpl
or
xor
fld
or
hlt
jno
retf
mov
mov
pop
sub
xchg
mov
and
imul
push
cdq
inc
push
and
test
and
sub
aaa
push
inc
pop
lahf
sub
imul
into
int
xlat
mov
leave
aas
and
push
cmc
or
out
or
xor
ins
or
pop
loope
sti
mov
sub
addr16
pop
jnp
adc
push
push
mov
mov
push
inc
jge
inc
cmp
cmp
sub
dec
cld
cdq
sbb
jmp
(bad)
outs
lds
add
repz
loop
mov
push
rcr
aas
std
in
xor
or
rcl
in
test
xchg
push
and
inc
mov
pusha
mov
push
cdq
push
cdq
lahf
aaa
xchg
ret
push
mov
dec
jle
push
cmp
add
fdivr
dec
fisubr
push
adc
cmc
into
add
add
cmp
pop
call
jno
mov
test
ja
out
fild
adc
call
aam
or
push
adc
cmp
enter
aas
ds
stos
jbe
inc
int3
fmul
pop
adc
mov
mov
dec
(bad)
sahf
dec
jp
or
popa
and
xor
outs
inc
adc
pop
(bad)
nop
cmp
fstp
add
imul
stos
sahf
scas
nop
in
test
das
sub
movs
push
hlt
push
mov
xor
scas
mov
jo
sbb
(bad)
aam
fcomp
cs
and
fucomp
repnz
repz
mov
int
icebp
jnp
into
jb
dec
lods
xor
daa
lahf
xor
add
ja
inc
jge
or
(bad)
xchg
stos
dec
push
int
int
gs
loop
xchg
push
or
adc
movs
and
pushf
mov
xchg
lahf
clc
rcr
cmp
imul
mov
mov
sub
pop
dec
add
int3
sbb
das
rcr
push
dec
add
mov
lea
and
adc
jmp
in
mov
movs
js
pop
and
and
loop
xchg
xchg
mov
jns
test
ins
mov
stc
push
dec
jns
scas
sahf
and
cmps
test
nop
add
pop
mov
mov
adc
jne
imul
sub
inc
add
inc
js
mov
leave
inc
outs
mov
fs
pop
jae
adc
add
outs
(bad)
pop
stos
scas
popa
lahf
sub
mov
pop
cmp
xchg
ret
(bad)
mov
loopne
hlt
or
sbb
cmps
inc
and
mov
jg
out
pop
inc
mov
pop
shl
push
repnz
xor
jns
or
lahf
or
add
pop
loop
mov
mov
jle
cli
push
ret
enter
aam
push
retf
sar
jnp
lahf
pop
fisub
mov
adc
cld
outs
movs
pop
int3
push
mov
cmp
movs
addr16
sahf
arpl
push
push
nop
inc
pop
aaa
push
mov
fwait
adc
push
pop
mov
es
sbb
and
lods
popf
(bad)
cmp
sub
cmp
push
in
inc
(bad)
dec
test
push
mov
pop
jno
mov
or
inc
xchg
and
loopne
mov
imul
pop
cmp
loopne
or
inc
xchg
fadd
nop
js
int
cmp
sti
pop
cmp
inc
mov
pop
rol
aas
adc
addr16
imul
sbb
adc
mul
add
ret
fdivr
dec
lahf
jae
push
sub
push
mov
mov
gs
dec
enter
push
add
iret
adc
popa
xor
adc
push
sub
sar
lds
sbb
lods
cmp
cmp
sar
adc
sbb
xchg
mov
call
out
mov
xor
mov
jns
dec
inc
mov
or
or
(bad)
jns
or
jnp
iret
jle
xchg
dec
cwde
dec
xchg
aam
cmps
clc
pop
push
cmp
or
jmp
and
leave
mov
mov
push
jecxz
jl
jo
and
dec
aam
pop
ret
ins
bound
retf
or
inc
cmp
shr
jnp
fwait
push
push
leave
mov
xor
std
sub
call
mov
mov
imul
enter
aad
push
cvtps2pd
mov
mov
stos
ret
inc
xchg
inc
fld
shl
pop
mov
int3
and
adc
test
dec
sahf
jecxz
pop
retf
sahf
xchg
mov
cmps
mov
pop
mov
and
loopne
pop
sbb
and
or
and
imul
mov
enter
or
movs
dec
(bad)
ins
scas
ret
push
mov
in
ins
test
fs
xor
out
movs
fadd
nop
retf
xchg
icebp
pop
add
xchg
fsubr
je
jno
adc
(bad)
pop
bound
and
xor
test
daa
mov
ins
test
fsubr
gs
and
mov
popa
sub
ja
mov
add
in
imul
sbb
add
mov
cmp
arpl
shr
sub
and
stos
push
ror
xor
jae
add
sub
jo
scas
pcmpgtb
pop
mov
call
xlat
mov
stc
or
cmps
neg
lock
sub
pop
push
xor
push
jnp
push
stc
es
test
imul
mov
pop
(bad)
jl
xor
xor
mov
adc
addr16
inc
mov
(bad)
jb
test
push
push
retf
das
xor
jg
(bad)
xor
inc
xchg
int3
or
test
imul
sbb
inc
and
lods
dec
ret
sbb
stos
out
xor
out
sub
xchg
cmp
pop
sbb
aad
or
ja
(bad)
(bad)
xchg
jle
retf
push
jnp
icebp
cmc
jns
(bad)
xor
mov
dec
inc
and
mov
cmps
out
jo
test
sahf
daa
retf
push
xor
xchg
inc
les
mov
sahf
daa
xlat
fisubr
nop
aas
push
loopne
jmp
repnz
and
fdivrp
sub
test
jbe
dec
cwde
or
xchg
les
inc
imul
adc
fucomi
push
ficom
ins
xchg
cmp
mov
int
jo
fwait
sti
inc
cmps
sahf
(bad)
pusha
sar
jecxz
fwait
sbb
ret
mov
sub
ss
pop
mov
add
mov
pushf
dec
int
xchg
xor
fdivr
sub
(bad)
jae
jecxz
in
inc
push
adc
and
outs
jno
pop
xor
cmp
icebp
pop
jbe
clc
scas
add
stos
cdq
imul
jl
cli
push
test
pop
mov
imul
jmp
cs
push
jl
call
inc
sbb
or
pushf
arpl
dec
pop
push
cmp
test
push
xchg
movs
inc
cmp
push
adc
ins
(bad)
out
cmp
ror
(bad)
out
pop
xchg
outs
or
dec
fnstenv
adc
add
test
mov
sar
fsubr
or
neg
inc
je
imul
or
push
loop
jg
push
inc
xchg
dec
sub
mov
repz
dec
sbb
retf
xchg
add
mov
(bad)
push
inc
(bad)
das
inc
mov
lods
push
add
int
mov
sbb
push
in
dec
cmp
pavgb
inc
mov
cmp
movs
push
mov
pop
inc
pop
pop
jmp
shl
or
or
mov
mov
test
sub
div
sub
bound
dec
rol
imul
loope
js
jno
int3
lock
loope
jae
fdivp
pushf
int3
or
loope
jle
mov
pop
jg
dec
fwait
xor
call
mov
ror
mov
or
test
cli
mov
mov
stos
cmps
ds
das
sbb
fsubr
fiadd
bound
xchg
in
test
sub
pop
jns
fistp
test
push
fdiv
out
fdivr
mov
ins
movs
and
fucomp
add
movs
aam
imul
mov
xor
push
cmps
xlat
ins
jecxz
mov
mov
inc
test
jne
xor
and
cmc
mov
mov
pop
or
adc
push
mov
sub
inc
int3
or
pop
lahf
(bad)
cli
test
xor
mov
sub
pop
cmp
jp
jecxz
pop
sbb
aad
pushf
and
test
xor
int3
or
das
loopne
mov
lahf
lds
retf
clc
mov
je
mov
int3
or
pop
clc
pop
jg
jge
push
xor
sub
retf
out
and
mov
adc
mov
aad
mov
pop
jbe
xor
daa
mov
(bad)
fisub
adc
std
or
mov
pop
cld
inc
out
pop
cmp
jmp
loope
es
pushf
dec
adc
cmc
add
push
add
sbb
jp
and
ret
aam
mov
push
int3
ja
sub
retf
cdq
gs
repnz
xor
call
arpl
push
adc
cmp
nop
imul
fldcw
jnp
sub
mov
fnsave
scas
mov
dec
xchg
sub
mov
and
out
in
inc
or
leave
outs
add
mov
mov
mov
inc
jmp
xchg
pop
jno
sbb
sti
rcr
xchg
push
mov
aas
mov
mov
fcom
push
dec
mov
mov
xor
jmp
xchg
and
cmp
mov
mov
mov
mov
add
icebp
daa
ins
cmps
lods
enter
mov
push
pop
jge
jmp
cmp
xchg
outs
jnp
sar
in
retf
es
shr
(bad)
mov
bound
cmp
movs
pop
sti
add
dec
dec
push
adc
loop
mov
inc
movs
mov
mov
out
fist
(bad)
ds
dec
mov
dec
or
jbe
ffreep
nop
or
js
mov
outs
in
and
cli
or
mov
stos
out
in
mov
loope
adc
sbb
push
lods
cmc
xchg
movs
rcl
cmps
inc
fucomp
aaa
sub
inc
es
sbb
xchg
push
jnp
sahf
sbb
add
mov
fwait
out
bound
push
sub
xchg
loop
sub
int
sbb
outs
xor
adc
aaa
lock
pop
xor
pop
mov
es
cld
jmp
inc
mov
loop
fnstenv
push
mov
jne
inc
mov
ret
loope
cli
popa
push
jecxz
push
sbb
stos
ins
cli
clc
dec
loopne
mov
or
and
jp
addr16
sub
jae
fwait
imul
jge
std
fs
add
loop
inc
xor
lds
scas
std
push
(bad)
pop
and
gs
jmp
xchg
inc
push
or
ins
jne
push
jg
mov
sar
pusha
mov
jge
inc
fwait
scas
adc
mov
sti
fild
or
push
daa
mov
daa
(bad)
hlt
hlt
xor
xchg
dec
shl
mov
push
pop
push
ret
and
mov
xchg
stos
xor
xor
adc
retf
fstp
(bad)
test
adc
cmp
pop
push
pop
fist
add
mov
xor
fs
int
sbb
or
call
out
cmp
neg
xor
out
hlt
mov
pop
popf
adc
sbb
jb
push
mov
and
aam
pop
fisttp
lock
ins
add
xor
xor
pushf
jne
add
xchg
inc
sbb
out
push
jge
cmp
loop
mov
mov
cmp
mov
(bad)
fprem
ss
jnp
in
scas
add
inc
test
dec
aad
xor
mov
ja
and
inc
cmp
js
movs
pop
mov
scas
inc
js
xor
aaa
mov
inc
dec
test
push
lock
outs
push
in
(bad)
cmp
pop
jge
ss
call
test
add
or
inc
add
push
stos
lds
in
dec
xchg
mov
pop
jb
fldz
sbb
pop
pusha
int
lods
test
loopne
mov
imul
es
test
dec
sar
sub
movs
iret
dec
(bad)
mov
add
arpl
jg
inc
pop
adc
push
cli
and
cld
mov
retf
push
mov
(bad)
mov
push
stc
xor
hlt
push
push
inc
mov
aad
jge
push
nop
pop
arpl
into
inc
das
sub
mov
mov
pop
jo
je
pop
mov
sbb
js
cdq
sub
fadd
and
ins
push
push
adc
jp
ss
and
loop
xchg
push
fs
ja
cmps
sub
xlat
sar
xchg
mov
js
aaa
mov
leave
out
dec
push
sbb
arpl
std
addr16
dec
aad
xchg
in
push
inc
cmp
enter
xor
mov
mov
and
and
imul
mov
out
inc
repz
aas
add
paddb
mov
push
ss
push
mov
push
adc
lds
sbb
mov
call
mov
in
mov
movs
push
(bad)
cmp
cmp
popf
cwde
shld
dec
ins
fnstsw
jle
repnz
ficom
cmp
cs
ret
pop
ins
jb
cwde
adc
add
jbe
inc
dec
addr16
ret
cmp
stc
test
fld
adc
add
stc
movs
and
ja
popf
rol
pushf
(bad)
jmp
dec
dec
loopne
add
loopne
imul
dec
lods
xchg
xor
or
sbb
hlt
int
mov
call
ror
jge
adc
ud2
adc
retf
std
xor
enter
shr
mov
js
adc
je
scas
(bad)
dec
das
scas
(bad)
(bad)
pop
add
aad
fdiv
out
into
in
pushf
jns
xor
(bad)
fdivrp
add
fs
adc
lods
into
jg
nop
pop
retf
pop
and
inc
lods
xchg
out
push
shl
rcl
aad
test
pop
push
sub
mov
and
pop
std
std
inc
cmps
iret
jbe
or
mul
data16
push
mov
xchg
(bad)
mov
sub
aaa
push
das
retf
rol
dec
frstor
add
xchg
cld
lods
push
int3
dec
adc
add
outs
nop
dec
arpl
jp
sub
jl
bnd
push
mov
add
xchg
jl
cmp
stos
es
jle
add
jmp
inc
fcom
paddd
adc
jp
or
ds
mov
js
out
ret
out
push
xchg
popa
inc
clc
xlat
aas
push
in
sti
ret
add
in
sub
fwait
gs
mov
jge
sub
add
cwde
icebp
ins
pop
lock
cdq
mov
push
mov
addr16
popf
stos
jmp
inc
jg
xchg
fidivr
stc
cmp
cmp
js
in
inc
icebp
bound
outs
repnz
push
lock
mov
addr16
or
das
retf
out
inc
js
adc
js
shl
addr16
pop
rcl
loope
fistp
mov
hlt
mov
fucomip
mov
dec
xor
fadd
push
stc
mov
test
pop
xchg
fist
xor
ror
test
push
cmps
lods
rcl
inc
sbb
xchg
mov
xor
loop
dec
mov
cs
mov
fld
sbb
pop
fst
sub
xchg
int3
clc
jns
stos
mov
(bad)
stc
mov
mov
and
out
stos
ins
pusha
ret
mov
das
xchg
push
add
ins
sbb
mov
adc
rcr
xchg
jp
inc
jmp
cmp
cwde
shl
sbb
cmp
mov
xor
das
jecxz
fst
jmp
cmp
pushf
aaa
cmp
popf
xchg
das
ins
adc
ret
(bad)
scas
sbb
mov
loop
jl
ins
dec
sbb
(bad)
xchg
adc
jg
hlt
psrlq
inc
pop
mov
lods
addr16
std
daa
sub
gs
fsubr
pop
or
cmc
retf
sti
lods
push
js
imul
push
aad
enter
xor
out
push
(bad)
imul
pop
or
mov
popa
jb
add
(bad)
ret
cmp
stc
dec
mov
and
sahf
push
cmp
sbb
push
add
sbb
dec
repnz
inc
icebp
xor
mov
cmp
ror
aaa
mov
clc
add
retf
xchg
clc
dec
icebp
lods
jle
dec
mov
sbb
sbb
pusha
add
xchg
cmp
adc
xchg
add
pop
and
and
adc
dec
dec
sub
sub
mov
lds
adc
loopne
add
pop
das
or
mov
mov
movs
jle
test
call
push
adc
cli
jns
daa
mov
jb
adc
push
imul
and
sub
cmp
push
adc
pop
xchg
dec
mov
enter
pmaxub
or
pop
aam
and
push
add
xor
fdivrp
in
xchg
rep
cmps
pop
inc
push
jmp
out
and
into
push
jbe
rcr
mov
xor
dec
cmps
lahf
mov
mov
int
repz
cwde
(bad)
jo
inc
xor
addr16
daa
in
push
mov
lea
fstp
scas
add
lea
pop
call
out
dec
test
test
cwde
sbb
jnp
and
ss
push
sbb
cmp
inc
inc
mov
movs
cmps
ss
retf
push
ds
cmp
jmp
shl
adc
in
ins
cmps
mov
fcmovnbe
lahf
adc
les
sbb
lock
repnz
add
dec
push
jp
mov
cli
enter
sbb
sub
int3
pop
mov
push
mov
or
aad
mov
mov
nop
js
dec
nop
mov
sub
cmp
fisubr
xor
jecxz
push
add
push
div
sbb
test
xchg
jbe
retf
dec
jp
out
xchg
sub
std
push
pop
popf
cmp
ret
push
add
jp
xor
mov
mov
(bad)
sbb
push
jmp
pop
shl
and
jbe
xor
lods
dec
inc
sub
cmp
jbe
scas
mov
inc
dec
(bad)
pop
mov
daa
xor
aam
jnp
xor
aas
inc
mov
leave
in
mov
scas
hlt
push
inc
pusha
xor
ins
and
add
clc
xchg
ret
sub
cmp
imul
inc
cmp
into
shl
sub
test
dec
xchg
push
ins
cli
mov
mov
jno
fcom
lock
jmp
lods
out
xchg
jecxz
test
mov
sbb
jb
or
fs
or
xchg
out
lds
aad
xchg
push
(bad)
cmp
xchg
and
push
sub
xor
push
inc
xchg
jne
repnz
lock
loope
sub
cs
outs
cmp
sti
and
mov
rol
arpl
les
or
and
scas
imul
call
mov
test
mov
dec
das
pop
dec
mov
push
je
repz
or
test
jmp
sub
aam
cwde
popa
xchg
and
xor
push
stc
sub
sbb
dec
mov
add
scas
pop
sbb
stos
jp
add
es
push
mov
pop
push
xchg
sub
sbb
mov
shr
sub
xchg
mov
jbe
jno
pop
or
js
int3
ret
adc
cmp
mov
mov
jge
xchg
inc
aam
push
popa
enter
div
retf
add
inc
dec
mov
popa
cdq
lods
jmp
or
aam
das
lds
imul
shl
push
jb
js
cli
dec
mov
(bad)
dec
sub
add
movs
dec
pop
push
loop
icebp
in
loop
inc
adc
sbb
sub
fstp
lahf
adc
push
add
test
rcr
rol
xchg
push
ss
iret
dec
mov
pop
or
jae
std
pop
pushf
pop
cmp
int3
pop
(bad)
hlt
mov
xchg
mov
add
mov
add
(bad)
stos
push
and
js
inc
dec
jle
inc
inc
or
mov
push
fucomi
call
(bad)
jle
pop
mov
pop
pushf
lock
leave
lds
clc
pop
cld
add
setns
outs
mov
xchg
adc
jmp
jl
dec
and
jge
pushf
mov
xchg
stc
and
adc
jbe
add
popf
not
xlat
and
lods
loopne
iret
mov
test
and
imul
xor
and
and
(bad)
jnp
or
imul
dec
xchg
out
mov
fdiv
mov
out
int3
aaa
mov
jno
xor
mov
mov
add
xchg
loopne
lods
inc
push
shl
sbb
and
mov
and
js
adc
sbb
mov
cdq
and
out
inc
adc
ja
jb
dec
and
fcmovnu
cmps
pop
dec
rcl
xlat
and
fimul
lods
cmp
push
(bad)
jns
(bad)
cli
lods
pop
jae
push
cdq
mov
test
push
out
fwait
mov
inc
inc
in
and
xor
push
rol
pop
cmp
out
arpl
sub
adc
sub
rol
test
jge
fisub
pop
in
pushf
mov
dec
iret
inc
add
in
mov
mov
into
popf
mov
ins
jno
fdivr
cmp
sub
xchg
outs
jmp
cwd
pop
ret
and
fisubr
inc
push
jmp
fld
adc
mov
mov
pusha
push
add
xlat
mov
jecxz
pushf
push
mov
push
arpl
inc
jl
int
in
call
inc
ins
inc
fdiv
icebp
inc
xor
ja
jge
and
mov
ins
dec
out
(bad)
(bad)
test
lods
mov
loopne
push
xor
dec
push
ins
mov
ds
pusha
push
add
stos
mov
push
outs
inc
jecxz
xor
jno
inc
aad
or
jge
fucomp
imul
aad
lock
mov
xchg
dec
das
add
sahf
xlat
shld
dec
push
adc
call
aad
add
sub
or
sub
push
lods
jmp
push
mov
test
loopne
push
inc
ss
pop
jle
pusha
xchg
sbb
mov
pushf
fwait
pop
mov
(bad)
(bad)
shr
outs
jae
jge
xchg
fbld
jbe
cs
cmp
inc
call
sbb
stos
in
dec
dec
in
ja
js
push
and
sub
dec
stos
fdiv
cmps
leave
mov
leave
ins
out
(bad)
push
xor
ret
xchg
sbb
leave
int3
fist
sbb
add
loope
ret
adc
and
(bad)
mov
ficomp
lahf
push
mov
and
add
(bad)
push
mov
xor
push
mov
sub
push
adc
push
mov
ret
sbb
jmp
sbb
add
nop
iret
cmp
movs
xor
shl
sub
and
psubsb
jge
fst
push
mov
into
fmul
pop
(bad)
lock
push
mov
push
icebp
sub
mov
push
(bad)
call
inc
fs
add
and
or
jne
std
repz
outs
add
sbb
call
cmp
xor
dec
inc
mov
(bad)
jmp
loop
mov
pop
pusha
mov
inc
lahf
pop
ins
xor
xor
push
xchg
xchg
push
push
push
push
cmp
(bad)
call
fldenv
lods
or
jmp
cmps
mov
call
xchg
inc
popa
fdiv
adc
push
sbb
cmps
enter
out
jno
add
test
adc
jne
inc
jp
sbb
lahf
xchg
jmp
inc
out
sub
jp
adc
popf
xchg
leave
hlt
xchg
into
inc
out
pop
push
int
fisubr
int3
je
cmps
mov
sub
out
mov
retf
mov
mov
mov
mov
add
inc
cmc
aas
pusha
mov
std
aad
into
mov
mov
mov
nop
cld
adc
lods
mov
jns
mov
dec
inc
retf
(bad)
push
ss
rol
push
mov
aaa
sbb
out
out
jmp
gs
cmp
ds
cdq
mov
mov
or
cmp
rcr
or
adc
fwait
lock
retf
(bad)
sbb
mov
popa
push
jg
ret
inc
jb
pop
push
or
std
(bad)
fwait
inc
das
retf
dec
mov
movs
and
xchg
jo
and
(bad)
(bad)
fstp
pusha
or
cmp
fcomp
stos
xchg
(bad)
std
imul
jge
enter
ins
adc
pop
xlat
sbb
jmp
ins
push
xor
aaa
push
cld
cmps
sbb
(bad)
rcr
ret
and
dec
push
xchg
stos
sar
pop
jecxz
inc
addr16
cld
loope
jnp
pop
pop
adc
std
ret
or
lahf
(bad)
jp
jge
xchg
enter
xchg
adc
push
or
ds
mov
adc
xchg
xor
add
mov
dec
mov
sbb
jle
or
push
mov
inc
adc
cmps
and
add
sbb
cmp
cli
daa
daa
jle
addr16
jo
xor
and
ret
lea
sbb
scas
sbb
retf
fwait
add
fwait
jns
add
mov
xchg
outs
std
daa
mov
xchg
lock
out
enter
out
pusha
popf
movs
adc
push
and
adc
adc
into
mov
imul
ins
mov
shl
in
jbe
out
inc
push
mov
add
ficomp
xor
lds
retf
cmp
cmp
nop
push
pop
(bad)
add
cmp
(bad)
cs
gs
es
push
inc
(bad)
pop
test
push
cmp
(bad)
xchg
lea
fsin
cmc
and
xor
xchg
not
inc
dec
clc
fcmovnb
pop
jne
sahf
sahf
mov
mov
rol
icebp
call
retf
push
in
es
mov
aas
mov
mov
pop
mov
iret
ret
pop
(bad)
arpl
cmp
mov
push
pop
jg
add
adc
ins
div
mov
clc
cwde
sub
mov
add
jg
jo
out
mov
inc
(bad)
mov
jno
pop
push
inc
sub
mov
xchg
stos
mov
inc
sbb
imul
jbe
mov
adc
mov
addr16
fs
les
sbb
pop
push
sbb
in
fld
(bad)
popf
in
or
jl
ds
or
mov
pop
adc
aaa
loope
jnp
cmp
mov
cdq
fs
sub
adc
ret
xchg
stos
(bad)
call
mov
fwait
pop
xchg
adc
stos
scas
mov
scas
aam
daa
and
inc
pop
sbb
sti
fndisi(8087
or
iret
sbb
fs
rol
jb
out
popa
vcvtsi2ss
mov
das
sub
pop
mov
xchg
jecxz
fdivr
int
and
loopne
das
mov
sbb
jge
addr16
pop
sahf
mov
sbb
jmp
cwde
in
jecxz
sti
and
jl
not
and
cmp
stc
cmp
ret
int
bound
push
inc
mov
push
mov
scas
enter
cmp
push
cdq
mov
mov
aas
or
push
(bad)
lods
adc
bnd
fwait
mov
add
cld
mov
jg
push
fistp
pop
xchg
adc
mov
cmp
or
pop
push
dec
hlt
sub
addr16
std
iret
clc
cmp
add
xchg
dec
inc
jae
ja
fs
adc
data16
push
fld
mov
sub
pop
add
loopne
stos
out
mov
popa
push
push
ins
iret
loopne
mov
fidivr
xlat
pop
push
or
xchg
lahf
and
ins
test
xor
jl
popa
sbb
xchg
pop
mov
mov
addr16
outs
mov
sbb
mov
clc
adc
sbb
outs
or
cmp
(bad)
mov
fld
movs
add
fsub
jae
leave
es
inc
sti
call
pop
or
jmp
pusha
lods
out
je
or
or
xchg
imul
add
popa
retf
adc
mov
sbb
(bad)
out
and
sub
test
std
jecxz
push
mov
and
push
das
cli
fldcw
(bad)
pusha
xchg
cmp
push
daa
into
cmps
xor
sahf
sbb
xchg
cmp
lea
div
mov
(bad)
fild
adc
ins
test
inc
dec
adc
cwde
adc
clc
nop
push
sbb
add
push
repz
jle
fcmovnbe
pop
sub
shr
pop
out
mov
stos
scas
sub
mov
mov
add
stc
mov
mov
jmp
pusha
scas
xchg
pop
xchg
jg
ficomp
xchg
popa
jns
icebp
or
movs
in
jnp
mov
inc
cmc
cmp
js
loop
lahf
test
mov
pop
test
repz
and
test
dec
repnz
in
or
mov
sub
stos
sbb
ins
(bad)
cmc
das
sbb
lea
iret
scas
mov
cld
outs
enter
cmps
jp
jmp
loope
cdq
imul
leave
sbb
addr16
push
inc
in
enter
cmp
mov
push
leave
add
xor
sbb
adc
(bad)
repnz
pop
into
in
mov
dec
icebp
jp
push
out
push
inc
mov
imul
mov
mov
mov
imul
syscall
and
sub
and
hlt
mov
adc
pop
push
add
aas
int
loopne
mov
xor
push
out
daa
adc
ficomp
push
jbe
jno
(bad)
das
jecxz
(bad)
sub
neg
or
jb
and
sbb
jo
fadd
jecxz
int3
fst
xchg
mov
out
in
ds
mov
nop
xlat
aaa
or
fdiv
test
jmp
ror
pushf
out
and
out
lods
dec
mov
adc
ret
mov
icebp
push
cmc
and
fsubr
dec
pusha
fild
cmp
hlt
mov
cmp
clc
ret
test
hlt
mov
aaa
pop
(bad)
sahf
push
shr
push
xchg
and
rcr
xchg
loop
mov
cmps
and
push
stos
dec
out
popa
inc
push
mov
jb
(bad)
adc
cli
push
mov
(bad)
ret
sbb
js
mov
jo
xchg
mov
iret
(bad)
(bad)
xchg
cmps
jecxz
out
cld
adc
pop
mov
sbb
push
fucom
pop
inc
jo
dec
retf
jno
movs
ins
adc
pop
jmp
xchg
pop
jmp
imul
shl
outs
push
jl
mov
or
fisttp
rol
(bad)
(bad)
jae
pop
mov
inc
lock
in
outs
es
in
cli
and
add
jbe
icebp
lock
ins
or
ins
(bad)
jl
inc
call
mov
xchg
dec
jecxz
xor
mov
sub
loope
or
test
scas
ins
and
adc
sub
jae
rol
in
aam
(bad)
jae
and
push
call
mov
jg
jne
inc
out
pop
xchg
daa
xchg
xchg
sahf
mov
mov
nop
adc
data16
push
xor
test
sbb
jns
cwde
not
add
xchg
adc
stos
iret
inc
(bad)
imul
repz
loop
es
cmp
fld
imul
pop
jmp
and
push
test
adc
and
enter
shl
cmp
fldcw
shl
sti
(bad)
std
and
jae
scas
and
shr
xor
(bad)
lahf
xor
iret
mov
cmp
lods
scas
loop
jns
ds
sahf
cdq
adc
xor
int
repz
dec
mov
mov
cmc
ret
out
les
es
sahf
call
arpl
imul
mov
fcomip
test
in
xor
bound
sub
inc
aad
mov
pusha
mov
movs
jno
pop
and
adc
in
ins
movs
jb
sti
cwde
mov
adc
adc
nop
icebp
xchg
push
push
xor
xor
add
in
clc
sub
mov
push
sub
(bad)
icebp
or
dec
sbb
mov
popa
fmul
xor
push
mov
sub
sbb
sbb
inc
mov
hlt
and
mov
cdq
mov
test
sub
enter
or
mov
cmps
mov
push
cmp
int3
stc
out
add
mov
dec
sub
out
sti
pop
inc
fdiv
adc
icebp
mov
addr16
pop
aaa
lock
aad
mov
or
popa
or
jmp
loopne
and
cmp
ss
ficomp
pop
add
js
push
and
add
ss
dec
clc
and
push
sub
mov
xchg
and
sub
cmpxchg
or
add
dec
ins
cmc
rol
shr
arpl
mov
pop
mov
cdq
outs
ret
push
cmp
pop
mov
js
adc
ds
imul
dec
(bad)
jnp
scas
push
push
cmc
inc
sahf
cmps
bound
das
sub
xor
not
cmp
retf
jmp
jge
mov
jp
jns
es
add
adc
or
jno
in
mov
in
jnp
pop
dec
push
dec
or
popf
je
fwait
mov
jne
mov
fdivrp
fisubr
(bad)
dec
sbb
and
shl
dec
popf
inc
inc
movs
push
movs
push
into
and
sbb
jnp
repz
mov
pop
jl
mov
out
(bad)
sbb
es
adc
test
mov
idiv
arpl
xchg
movs
adc
out
sbb
addr16
daa
lods
dec
loopne
outs
pop
jl
fstp
sbb
pop
scas
bound
ja
or
add
jge
cmps
xchg
xchg
popf
out
mov
out
(bad)
adc
xchg
jo
lds
inc
add
shl
out
hlt
mov
mov
push
or
lds
shr
in
shl
pusha
out
jl
sub
jae
add
pusha
and
sbb
push
xchg
jg
fsub
scas
pusha
cmp
mov
push
imul
out
jge
cmp
iret
jmp
add
sub
mov
loopne
mov
jbe
fs
cmps
icebp
pop
inc
nop
pop
dec
jmp
out
cli
pop
bound
sub
push
mov
pushf
lods
out
ja
xor
push
pushf
or
fcmovnbe
jg
pop
imul
ins
ins
jnp
sub
mov
mov
xchg
mov
(bad)
je
push
pop
push
mov
xchg
and
mov
add
jmp
and
into
test
and
push
js
mov
xchg
outs
aam
sub
push
gs
arpl
les
and
pushf
outs
pop
fucomi
push
enter
adc
pop
int3
mov
push
sahf
xor
add
inc
mov
add
pop
icebp
cmp
push
cdq
popa
arpl
sub
fs
sti
aam
cmp
shl
cmp
call
ds
fisttp
mul
mov
or
int
pop
and
inc
add
push
push
addr16
inc
mov
cmp
ret
jbe
xchg
loopne
pop
jg
xor
sub
out
outs
dec
lods
mov
xor
add
mov
or
pushf
jmp
add
fstp
in
aas
pop
inc
cmp
mov
push
(bad)
out
daa
cld
lea
mov
sub
popf
mov
cmp
add
push
not
lds
js
jns
(bad)
data16
add
pop
xchg
(bad)
shl
out
arpl
fiadd
push
out
out
pusha
test
data16
xchg
mov
mov
test
dec
ret
sbb
pop
mov
inc
sub
pop
xor
and
aas
jmp
xchg
add
clc
loop
mov
inc
push
mov
cdq
mov
push
(bad)
mov
jl
sar
xor
test
arpl
sbb
mov
cmp
mov
maskmovq
sub
aad
jne
sbb
dec
inc
cmc
stc
lahf
push
leave
ins
cli
xor
pop
inc
movs
pushf
push
push
cs
fdivr
ror
xchg
fcomp
or
iret
dec
loopne
(bad)
inc
enter
jmp
lock
ds
jb
mov
dec
jl
nop
adc
shl
xor
push
xlat
push
adc
adc
dec
call
iret
stc
xchg
pop
xchg
add
and
retf
shr
ret
jg
(bad)
out
jmp
sahf
mov
adc
pusha
mov
cmps
lock
push
ret
fcom
jmp
jae
aas
cmp
mov
inc
sub
jle
or
(bad)
adc
cmp
bound
jecxz
xor
lds
cmp
(bad)
cmp
jmp
ret
cdq
sub
in
fist
int
stos
and
ret
adc
and
sbb
xchg
ficom
shr
ss
fst
mov
pop
mov
or
xor
cmp
pushf
cwde
in
xchg
imul
inc
daa
mov
jns
ds
or
ror
stos
lahf
jb
stos
fdivrp
sub
and
xchg
jle
test
enter
dec
jb
mov
lods
adc
cmp
cdq
or
ror
inc
loopne
pop
jmp
push
test
xchg
xor
mov
jp
int
imul
icebp
(bad)
es
cs
or
inc
(bad)
mov
test
clc
scas
imul
lea
sub
shl
mov
adc
inc
jl
push
icebp
ds
into
mov
push
mov
and
repnz
in
(bad)
sbb
popa
jbe
adc
repz
cld
(bad)
adc
xchg
xchg
push
and
xchg
or
ja
jns
cmp
cmps
lock
rcr
mov
mov
cwde
repnz
and
test
std
adc
or
or
lds
add
sub
or
stc
sar
(bad)
jge
xchg
add
nop
xchg
dec
cli
push
cdq
xor
xchg
stc
out
xor
push
dec
mov
cmp
add
push
xor
mov
mov
mov
nop
mov
push
ret
into
pop
(bad)
lock
call
push
dec
add
add
jns
cmp
jnp
es
dec
jg
cmp
jecxz
sub
add
xor
xchg
in
jle
and
inc
xor
(bad)
mov
repnz
jae
sbb
jmp
imul
les
xor
mov
fistp
inc
push
xchg
inc
xchg
int3
ja
push
and
xchg
cmp
jno
(bad)
fiadd
pusha
cmps
in
jns
pop
jnp
aam
dec
dec
adc
stos
and
frstor
sub
iret
mov
popf
dec
push
push
icebp
mov
jmp
sub
jo
mov
mov
ret
mov
sub
jge
test
mov
mov
test
jmp
cli
and
pushf
fwait
lods
int3
jbe
or
leave
ret
mov
jno
xor
shl
or
mov
loopne
mov
imul
mov
xchg
in
int
bound
cmp
stos
mov
adc
sub
mov
mov
outs
imul
xchg
dec
daa
xor
call
push
je
clc
in
(bad)
test
scas
addr16
dec
or
and
mov
and
pop
das
fisttp
(bad)
xchg
pop
shr
rol
scas
mov
push
js
pop
mov
movs
das
cmps
mov
cmp
mov
inc
aad
enter
mov
fucomi
addr16
and
and
mov
push
neg
add
mov
(bad)
in
sub
jne
sub
js
mov
ror
jecxz
sbb
add
xor
dec
lods
xchg
pop
movs
in
loopne
lods
sahf
shl
pop
push
jmp
movs
mov
arpl
enter
les
outs
add
call
adc
pop
inc
add
xor
lods
test
mov
mov
test
inc
les
nop
push
int3
and
fidiv
pop
daa
jno
cmps
mov
sbb
pop
div
stc
ins
outs
mov
or
ins
adc
adc
pop
sub
adc
jg
outs
pop
cmp
xor
stos
mov
jno
mov
sbb
scas
jmp
jle
cli
mov
imul
fmul
fwait
inc
out
dec
dec
aad
dec
test
shl
aaa
rcl
mov
pushf
imul
xchg
outs
fsubr
loopne
fst
jmp
jmp
cwde
cs
(bad)
aad
pop
sbb
push
int3
addr16
test
and
sub
(bad)
xchg
push
inc
push
(bad)
aaa
fwait
int3
ret
test
jge
xor
and
sbb
(bad)
das
pop
xchg
cmc
sub
cmp
mov
lods
pop
and
hlt
ss
(bad)
mov
mov
push
inc
jecxz
mov
dec
pop
or
sbb
adc
adc
xchg
fmul
(bad)
inc
mov
lock
xchg
data16
movs
retf
mov
sar
mov
mov
mov
shl
mov
stc
mov
js
mov
inc
inc
cdq
xchg
xor
movs
mov
rcr
pop
cmps
es
lods
and
fild
sti
adc
xchg
loopne
xlat
mov
(bad)
sub
into
ror
jl
push
adc
pop
das
and
push
pop
add
pop
call
mov
and
fld
add
out
xchg
mov
movs
mov
xchg
cmp
js
mov
xchg
sub
sbb
inc
fcom
or
enter
inc
sub
outs
cmps
mov
mov
repz
ja
push
gs
inc
lods
out
ret
jg
int3
ret
loope
cmps
jmp
mov
add
xor
jb
mov
call
test
int
pop
sbb
in
pop
sbb
mov
nop
cmp
call
aas
cwde
stc
out
inc
stc
out
cmp
adc
xchg
xchg
inc
int3
movs
in
pop
mov
daa
sbb
jmp
sbb
das
mov
xchg
inc
push
mov
dec
adc
popf
mov
sub
mov
pop
sub
in
mov
rol
pop
pop
or
fcomp
adc
mov
ins
das
mov
mov
iret
jno
sub
sbb
bound
jmp
cli
adc
xor
aas
fist
retf
and
imul
lock
cmp
mov
sub
mov
cs
cmp
mov
xlat
lds
push
xchg
rcr
addr16
pop
icebp
jae
mov
inc
mov
nop
stos
and
mov
sbb
jb
sub
mov
and
jge
xor
movs
or
out
xchg
lahf
jb
shr
data16
xchg
leave
mov
rep
scas
sbb
pop
mov
mov
out
lahf
loop
jb
sbb
int
xchg
mov
cwde
sbb
jl
shl
pop
aad
cmc
dec
push
sub
lock
hlt
fnsave
or
lahf
ins
fld
mov
in
inc
push
dec
(bad)
fcom
fwait
cs
hlt
mov
es
pop
push
hlt
jbe
dec
std
data16
sub
jle
xor
iret
fneni(8087
js
jge
pop
imul
cmp
or
popa
popf
pop
dec
dec
xor
push
stos
arpl
mov
les
lea
mov
pop
or
adc
enter
fdiv
pop
pop
inc
mov
adc
lods
inc
inc
imul
ins
fistp
jns
cmp
push
lods
pop
xchg
dec
jns
xor
dec
dec
mov
cmp
sub
mov
imul
cwde
xor
daa
cld
rep
xor
or
fwait
dec
add
inc
xor
loopne
inc
adc
jbe
dec
stc
jb
shl
push
ins
or
and
ja
inc
repnz
adc
dec
mov
call
dec
int
sbb
add
inc
adc
xor
popa
loopne
dec
loopne
mov
adc
je
pop
dec
and
and
icebp
fwait
popa
sbb
imul
dec
in
sbb
inc
jbe
xchg
sub
inc
xchg
cmp
enter
out
sbb
das
aam
jmp
and
movs
loop
inc
shr
iret
inc
push
sbb
pushf
or
jmp
pusha
xchg
jge
outs
mov
xchg
dec
xor
push
out
stc
and
pop
outs
aam
xchg
in
or
(bad)
or
test
call
sahf
ud1
xor
and
fucomi
sub
sub
aam
pop
xchg
jb
or
in
je
mov
ds
cli
sbb
int
adc
sti
int
lea
mov
neg
shl
test
sub
das
mov
push
test
loop
inc
add
bound
push
ss
and
aad
ret
stos
add
inc
pop
add
fild
fist
sub
mov
add
enter
ins
ss
inc
in
xlat
mov
inc
jp
jmp
cmp
push
xchg
jg
and
scas
pop
inc
mov
scas
xchg
arpl
push
(bad)
push
dec
fldcw
mov
int
xchg
push
adc
pop
arpl
mov
iret
jae
daa
scas
ins
or
adc
cmp
cmc
in
mov
lea
jae
sbb
je
inc
imul
mov
cmp
movs
lea
pop
psubd
cmps
idiv
push
pop
fidivr
mov
pop
cmp
and
mov
sbb
cwde
std
call
ficomp
mov
(bad)
icebp
mov
rcr
je
push
sub
xchg
cmp
loope
sti
fst
dec
mov
out
out
and
mov
or
cmp
fisubr
mov
cmp
ins
ret
mov
jo
lds
mov
scas
cmp
fstp
ja
xchg
or
mov
mov
(bad)
jg
add
sbb
mov
cmp
cld
add
shl
test
dec
xchg
shl
and
das
inc
xlat
int
push
cmc
and
cmp
cmp
push
mov
xchg
xchg
dec
add
inc
add
mov
fist
cmps
jp
push
add
xor
das
neg
and
jno
cmp
pop
xor
(bad)
icebp
rcl
jae
call
das
out
jae
fwait
xchg
gs
mov
(bad)
loop
(bad)
ret
jne
mov
add
out
xchg
mov
mov
ror
and
test
arpl
scas
ins
outs
pusha
dec
scas
inc
push
(bad)
int3
adc
add
add
push
adc
sub
cmps
mov
rcl
mov
push
pushf
ror
pop
ret
pop
jne
fnstsw
mov
push
cmp
test
gs
mov
dec
sub
test
sar
in
jp
ins
mov
xor
popa
stos
add
dec
xchg
jmp
retf
mov
dec
mov
and
mov
stos
cmp
js
sub
lock
repz
outs
jbe
fadd
xchg
test
mov
pop
mov
ins
lods
jle
fbstp
scas
jle
xchg
int
jb
mov
nop
xchg
retf
xchg
mov
pop
push
cmps
cmp
cli
xor
pop
loopne
repz
push
sbb
cmp
(bad)
pop
fisub
sbb
adc
push
jle
movs
enter
jae
(bad)
aad
xchg
daa
jns
ror
push
outs
out
cmp
fisubr
mov
xchg
inc
out
inc
jmp
mov
arpl
add
or
in
les
xor
and
fnsetpm(287
and
mov
loopne
mov
shl
mov
shr
sub
aam
bound
pop
push
cli
xor
stos
adc
or
inc
push
sbb
imul
pop
and
push
rcr
popf
popa
mov
mov
gs
popf
call
das
push
inc
mov
push
or
loop
ds
inc
shr
pop
sub
daa
dec
fwait
jp
fidiv
js
cmp
leave
test
call
dec
and
sbb
pop
das
fwait
or
or
jp
daa
mov
sub
dec
cmp
clc
add
inc
mov
mov
aam
movs
ins
cmps
push
inc
xor
mov
jbe
and
sbb
push
ret
sub
in
int
shr
cwde
sub
leave
mov
or
dec
inc
inc
fstp
pop
nop
cmp
fisub
and
push
sbb
cmp
xchg
adc
mov
daa
push
js
mov
cmps
pop
test
dec
ss
push
adc
shl
mov
(bad)
mov
leave
lods
test
xor
imul
xchg
jmp
sbb
push
rcl
(bad)
lods
call
pop
sub
ja
in
retf
pop
movs
ins
push
imul
(bad)
cli
inc
mov
(bad)
fisub
in
sahf
push
sub
fisttp
push
mov
mov
aam
ds
inc
pusha
pop
sub
push
add
mov
add
sub
jg
adc
leave
jnp
cld
ja
and
mov
cmp
gs
inc
loope
into
sub
sub
adc
movs
sbb
mov
pop
pop
sub
out
push
shr
xchg
mov
add
jg
jecxz
(bad)
ficom
pop
dec
sub
mov
imul
ja
sub
push
movd
cmp
adc
inc
pop
jae
in
xchg
mov
sbb
int
retf
sahf
fcom
push
ffreep
ret
pop
push
push
out
sbb
setb
cmp
std
mov
in
int3
dec
cmovp
mov
adc
ins
push
cmps
xor
addr16
ins
sub
shl
adc
mov
mov
sbb
adc
dec
xlat
jmp
outs
mov
ret
push
neg
(bad)
mov
sbb
and
mov
mov
retf
mov
xor
sub
dec
xor
rcr
ret
cmp
dec
mov
out
hlt
(bad)
cmps
add
mov
mov
rep
push
hlt
mov
int
sub
sub
mov
inc
popa
not
mov
movs
les
or
out
xchg
in
movs
sub
xchg
out
push
loopne
test
stos
cld
sahf
inc
(bad)
jl
leave
stos
add
mov
ja
pop
(bad)
in
sbb
mov
test
or
popa
lock
(bad)
fcmovu
pop
aam
hlt
fdivr
ins
xor
adc
out
(bad)
xor
dec
jno
jmp
pop
out
add
sbb
addr16
fdivr
fsub
or
and
sti
pop
movs
xchg
fnstcw
lds
push
mov
xor
cmp
ffreep
jl
lahf
mov
jne
in
add
cmp
(bad)
mov
mov
outs
dec
or
push
and
(bad)
dec
pop
cwde
xor
mov
mov
movs
shl
or
int
and
sbb
mov
or
int3
sub
mov
repz
mov
xor
and
dec
pop
rol
pop
and
xchg
fldenv
in
xlat
jno
mov
or
je
or
mov
mov
cmc
or
icebp
stos
xchg
(bad)
sbb
retf
add
push
icebp
push
pop
popa
xchg
adc
lods
icebp
test
or
icebp
shl
jb
enter
mov
sub
fs
cs
shl
push
dec
push
fwait
jge
arpl
hlt
sub
mov
inc
popa
aad
mov
(bad)
cld
inc
xchg
inc
fdiv
(bad)
fdivr
(bad)
(bad)
outs
out
xchg
fsubr
mov
test
jbe
pop
inc
call
cmp
add
test
das
mov
xor
xor
icebp
jecxz
xlat
lds
jo
fadd
push
pop
popa
out
add
mov
and
outs
adc
inc
inc
jnp
jmp
mov
test
mov
xchg
pop
shr
ins
sub
movs
push
mov
dec
adc
cmps
adc
or
nop
push
mov
xor
push
cs
das
(bad)
std
in
or
sti
lea
in
cmps
pop
lds
nop
jbe
dec
add
fcmove
aad
mov
(bad)
aam
mov
retf
push
jb
(bad)
dec
lahf
cmps
cmc
mov
sub
sar
push
cmp
inc
stos
cmp
pop
cmp
(bad)
xchg
cli
mov
(bad)
adc
dec
and
sbb
in
mov
pop
enter
test
cmp
jl
rol
jbe
xor
arpl
xchg
push
push
and
or
cmp
pop
enter
retf
and
push
daa
add
mov
ins
cs
ror
arpl
or
out
fst
mov
rcr
adc
lds
pop
adc
cmp
adc
mov
dec
fwait
inc
(bad)
mov
jne
cmp
mov
sbb
hlt
xchg
sbb
push
clc
xchg
pop
cwde
jmp
daa
mov
xchg
and
adc
int
or
cmp
sbb
stos
adc
mov
mov
and
mov
je
adc
fs
add
(bad)
stos
xchg
sbb
jl
mov
out
push
sbb
cmps
mov
add
sub
popf
inc
outs
lea
or
ins
rdmsr
mov
push
scas
pop
inc
jl
das
sbb
rcl
sbb
push
inc
std
add
xor
pushf
ds
(bad)
loop
add
push
and
loope
pop
xor
pop
xchg
sub
sti
push
iret
imul
push
lds
mov
ror
loopne
and
lds
movs
dec
loop
in
scas
inc
add
xor
int
mov
fxch
adc
in
and
mov
jle
xchg
dec
xor
(bad)
push
test
clc
sti
mov
cli
repz
mov
repnz
leave
cmc
ja
push
pop
mov
adc
or
test
je
int3
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
mov
push
call
push
