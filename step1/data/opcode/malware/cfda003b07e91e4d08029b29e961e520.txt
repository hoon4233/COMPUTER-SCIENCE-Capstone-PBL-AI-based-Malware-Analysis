xor
inc
ret
push
push
call
xor
push
call
cmp
jne
mov
add
cmp
jne
movzx
cmp
je
cmp
je
mov
jmp
cmp
jbe
xor
cmp
jmp
cmp
jbe
xor
cmp
setne
mov
mov
push
call
pop
or
or
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
push
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
push
push
push
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmp
jne
push
call
call
or
mov
call
ret
jmp
jmp
cmp
jne
jmp
push
push
push
call
add
ret
push
call
neg
sbb
neg
pop
dec
ret
push
push
call
mov
cmp
jae
and
mov
mov
test
je
call
jmp
xor
inc
ret
mov
or
add
jmp
call
ret
push
push
call
mov
cmp
jae
and
mov
mov
test
je
call
jmp
xor
inc
ret
mov
or
add
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
mov
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
add
ret
jmp
jmp
add
ret
ret
xor
ret
xchg
add
xchg
ret
add
pop
push
mov
mov
push
xchg
add
push
pop
xchg
xor
xchg
xchg
xor
xchg
mov
push
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
mov
ret
pop
push
xchg
ret
push
pop
ret
push
pop
push
xchg
add
mul
push
pop
push
pop
push
add
pop
ret
mov
ret
push
pop
ret
push
add
pop
ret
push
pop
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
push
call
push
call
push
push
call
call
push
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
push
push
call
pop
push
xchg
push
push
push
push
call
push
push
call
push
push
call
push
call
push
push
push
push
call
push
cmp
jae
ret
add
call
push
loope
cmp
daa
push
mov
cdq
aad
data16
aas
dec
add
mov
cmp
add
inc
push
inc
loop
out
mov
(bad)
shl
push
cmp
popf
adc
jle
call
add
fsubr
cmps
(bad)
mov
nop
mov
stos
jo
adc
popa
scas
add
jb
xor
add
mov
sub
pop
sbb
aaa
cmps
dec
shr
pop
inc
jecxz
add
sbb
adc
(bad)
jmp
arpl
iret
ds
pop
daa
scas
aam
loop
mov
adc
iret
adc
lea
daa
or
sahf
ins
and
jbe
add
mov
dec
mov
fild
dec
daa
fcmovu
iret
xchg
pusha
pop
int
pop
imul
add
sbb
hlt
pop
sub
cmps
jg
push
cmp
xor
mov
ja
sub
add
mov
mov
in
jae
add
mov
adc
es
out
sbb
mov
jl
ror
test
ret
push
(bad)
cmc
clc
push
sbb
mov
xchg
sub
push
xlat
sahf
repz
xchg
sub
cmp
push
cld
sbb
pusha
jecxz
sbb
jns
push
sbb
leave
popa
fist
push
push
cmp
or
enter
in
in
mov
xchg
arpl
jne
xor
fs
popf
cld
push
dec
dec
push
push
scas
cmps
and
repnz
adc
ins
std
adc
das
xor
mov
jl
sub
add
cdq
cmp
mov
push
pop
cmp
push
rol
push
outs
outs
sbb
(bad)
cmp
mov
imul
ins
das
fmul
cmp
sbb
adc
rcl
push
or
dec
xor
mov
adc
sbb
adc
loop
pushf
iret
sub
clc
sar
push
mov
cmp
jge
lds
sub
test
cwde
inc
inc
push
xlat
in
int
bound
cli
out
fs
div
in
or
icebp
adc
rol
std
(bad)
cld
and
jle
mov
add
or
or
mov
pushf
dec
push
add
cmp
cmp
sub
sahf
sub
enter
cmps
call
fbstp
cwde
out
mov
loope
dec
pop
aaa
out
xlat
data16
dec
add
xor
or
iret
test
stos
(bad)
mov
mov
pop
int
pop
stos
daa
sub
add
mov
mov
mov
sbb
jo
xor
sbb
fnstcw
lock
into
into
(bad)
cmp
push
lods
sub
test
mov
pop
pushf
inc
jp
fsubr
mov
xor
test
sub
mov
call
out
ss
add
xchg
jle
xchg
popa
out
fwait
stos
or
pop
arpl
mov
mov
outs
inc
dec
mov
sbb
xor
icebp
adc
mov
lods
pop
mov
int3
xor
mov
lods
lock
mov
push
ficomp
or
cwde
lahf
sub
sbb
and
and
mov
shr
jl
int3
cwde
adc
cdq
cdq
mov
ret
xchg
pop
aad
xor
mov
xchg
vcmppd
fsub
in
cmc
push
xlat
mov
pop
(bad)
mov
repnz
les
jnp
pop
push
adc
jg
(bad)
call
in
cs
sub
repnz
scas
int3
outs
mov
mov
cmp
test
stc
jns
sti
push
sbb
loopne
das
mov
ret
outs
dec
sbb
icebp
mov
mov
lock
push
hlt
sub
push
cld
push
int3
mov
mov
aas
(bad)
retf
push
ins
js
add
pop
mov
(bad)
cmp
push
cmp
movs
pushf
mov
add
cmps
scas
sbb
lahf
mov
rol
inc
arpl
push
sbb
jb
repz
mul
adc
push
mov
xchg
sbb
std
xlat
adc
fwait
test
sahf
jo
shl
icebp
je
movs
sbb
lea
jg
jecxz
adc
adc
lock
lahf
int3
mov
in
cdq
addr16
jp
es
xor
sub
(bad)
jnp
mov
pop
jecxz
add
mov
ficomp
std
icebp
inc
cli
xchg
or
xor
push
jle
fcmovne
call
and
fmul
(bad)
sub
pop
ficomp
push
mov
cmp
mov
sbb
add
or
jmp
push
xchg
stos
scas
sub
mov
sti
sub
les
xor
test
xlat
jl
mov
ret
inc
out
mov
mov
and
aas
daa
sub
and
cmp
pushf
adc
movs
sub
outs
and
cmc
mov
or
daa
pop
xor
adc
nop
jle
cmps
cmp
mov
mov
stos
or
xchg
xchg
aad
(bad)
lods
mov
jae
mov
xchg
adc
(bad)
je
(bad)
adc
rcl
pop
movs
dec
test
imul
(bad)
fidiv
dec
sbb
push
mov
lock
xchg
push
enter
dec
xchg
aaa
ret
push
imul
mov
lods
xor
ss
xchg
mov
xchg
into
fsincos
shl
out
lock
leave
push
or
add
in
mov
(bad)
lea
pop
setg
and
adc
loope
sbb
jbe
sbb
bound
pop
call
sub
lahf
jmp
and
push
xchg
jge
xor
cmp
add
adc
mov
fcomp
jle
aam
ins
push
nop
cmp
ins
add
push
lods
test
cmp
jns
sub
retf
push
jl
push
hlt
mov
or
lds
(bad)
cld
clc
rcr
sar
push
out
inc
ds
pop
xor
popf
or
cmp
ds
inc
mov
out
cmc
sbb
int
aad
push
mov
cdq
enter
xor
or
mov
sbb
loop
xor
cmps
cmps
enter
loop
xor
lods
retf
push
mov
in
mov
fsubrp
gs
fist
ins
aam
div
sub
jg
mov
mov
mov
push
push
cmp
call
mov
jge
xchg
sub
sub
and
std
hlt
repnz
xor
fild
xchg
test
enter
and
fcmovnb
lods
int
add
jbe
xchg
sub
shl
ins
mov
adc
sar
ins
push
clc
shr
and
dec
dec
mov
cmp
retf
daa
es
xor
sub
movs
sub
addr16
js
xchg
and
jmp
pcmpeqw
cld
mov
mov
ins
sub
pop
sbb
stos
pushf
push
mov
inc
dec
test
lods
mov
leave
sbb
in
pop
pop
mov
pop
sbb
add
das
fwait
call
jle
cmp
call
outs
push
aas
in
mov
out
test
xor
sub
or
sub
mov
popa
test
jae
jl
push
das
lock
mov
popf
fistp
out
pop
mov
idiv
cwde
mov
lods
xor
mov
add
fadd
test
inc
add
neg
mov
pop
jae
inc
xchg
in
xchg
outs
inc
fst
xchg
out
mov
jge
les
sbb
mov
add
xor
clc
or
push
and
leave
test
pop
int
jl
pop
mov
pop
pop
mov
mov
rcl
jmp
(bad)
retf
sbb
gs
xchg
(bad)
out
call
ret
adc
pop
popf
jo
(bad)
mov
cmps
outs
push
cmps
popa
stos
mov
cli
pop
xchg
aam
out
loopne
cmp
aad
cmp
cli
mov
xchg
mov
pop
add
push
push
or
imul
test
ins
ret
mov
or
xchg
sahf
adc
vsubps
sbb
add
lahf
dec
popa
mov
add
mov
in
cld
sbb
aam
xlat
daa
sti
ret
(bad)
cmp
test
fsubr
dec
mov
and
or
pop
dec
mov
mov
inc
es
fidiv
jp
dec
sti
cmps
and
sub
ja
xchg
outs
mov
loop
mov
jp
test
cmp
inc
out
ror
int
mov
cli
jmp
dec
fmul
dec
mov
cmps
loope
jl
popa
stos
leave
sbb
(bad)
jmp
pop
mov
fnstsw
(bad)
jmp
sti
out
call
rcl
dec
adc
icebp
cwde
int
out
movs
test
xchg
fs
inc
push
jae
das
adc
push
cmp
or
sbb
pop
mov
mov
jne
mov
bswap
jno
sub
pushf
test
pop
lahf
xchg
pop
sbb
cmc
fcomp
sub
out
out
cmp
js
mov
xor
mov
ins
mov
out
(bad)
les
arpl
mov
pop
es
imul
stos
pop
or
es
test
add
push
jnp
and
leave
stos
addr16
loopne
xor
dec
sbb
(bad)
and
mov
fwait
xchg
int
out
cmps
mov
pop
shl
bound
(bad)
ja
and
rcl
retf
scas
aaa
(bad)
inc
xchg
ja
jno
std
or
lods
mov
nop
mov
dec
gs
lods
jmp
pop
popa
lds
loop
loop
test
arpl
jmp
xchg
iret
(bad)
out
clc
outs
jl
xor
shl
rcr
xchg
retf
imul
jno
clc
(bad)
jns
jo
jmp
call
cmp
add
je
mov
push
iret
pop
and
pop
fst
pop
sbb
push
add
cli
imul
xchg
push
add
push
push
push
adc
push
and
shr
cdq
or
imul
scas
cli
and
stos
repz
scas
push
and
dec
sub
mov
jne
ds
cmp
pop
fwait
imul
sub
pop
xchg
and
(bad)
jecxz
mov
xchg
mov
lods
pop
retf
add
jae
bound
cmp
lea
jno
and
adc
inc
push
shl
pop
dec
scas
pop
movs
mov
icebp
fwait
dec
push
shl
lea
fwait
popf
(bad)
retf
das
test
jo
dec
push
mov
shl
jle
or
bound
jmp
adc
scas
dec
add
mov
(bad)
cmps
add
mov
fisttp
ror
cmp
or
in
adc
test
mov
mov
int3
dec
test
dec
xchg
cmp
das
gs
mov
cli
stos
cdq
pop
rcr
fchs
sahf
inc
aam
push
(bad)
lods
mov
jmp
or
and
and
cmps
sbb
mov
and
and
stc
hlt
div
pop
pop
push
stos
hlt
sahf
xchg
std
push
inc
xor
ret
xchg
dec
mov
das
(bad)
rcl
(bad)
mov
jmp
shl
add
xor
push
xor
iret
xchg
imul
sub
inc
in
inc
sub
fnstcw
mov
imul
iret
out
xchg
adc
push
and
jnp
mov
imul
push
in
adc
hlt
mov
in
test
add
and
ret
xor
adc
inc
lahf
mov
out
jb
sar
xchg
sub
mov
shl
or
inc
cmp
sub
sbb
fdiv
mov
sbb
cmps
sub
test
movs
lods
in
dec
fsubrp
cmps
add
mov
mov
fimul
sbb
sbb
pop
in
adc
aad
(bad)
movs
inc
sub
or
aam
push
lds
scas
push
into
fimul
mov
push
popa
or
xchg
cli
sub
dec
je
jmp
pop
aas
loopne
movs
dec
jmp
mov
dec
hlt
jg
pop
fwait
outs
xor
aam
mov
clc
popa
int
push
push
mov
sub
ret
push
xor
xchg
addr16
ret
jge
test
inc
lahf
fisttp
mov
xchg
add
sbb
push
cmp
dec
jns
aas
ficom
mov
cmp
repz
mov
movs
mov
lahf
popf
das
fimul
lahf
jecxz
or
aad
xchg
mov
test
(bad)
fcom
mov
sbb
dec
jl
ficom
iret
adc
xchg
pop
or
push
mov
lahf
lods
inc
pop
out
mov
mov
pop
pavgw
push
pop
push
dec
sbb
sar
lahf
(bad)
jns
fistp
sub
das
mov
lods
mov
pop
fisub
(bad)
jl
mov
lods
in
xor
clc
mov
sbb
test
sub
(bad)
in
jmp
in
stos
rcl
lods
mov
inc
mov
xchg
sub
jmp
jns
idiv
xchg
pusha
or
cmp
cmps
fcom
xchg
mov
cwde
and
mov
into
or
aad
mov
(bad)
out
jg
sub
push
mov
pop
jns
lea
and
cmp
pop
std
stos
stos
xchg
iret
or
test
pop
xchg
(bad)
sar
shl
clc
loope
call
sti
dec
test
cli
aam
cmps
enter
icebp
sbb
lods
mov
xchg
int3
pop
xchg
xchg
cld
lock
mov
inc
rol
mov
movs
dec
sbb
pop
sbb
or
mov
(bad)
cmps
cmp
pop
out
inc
cdq
cmp
add
dec
xchg
ror
mov
js
shl
xchg
add
test
adc
stos
dec
push
cmp
int
sub
jb
sbb
in
or
lahf
out
out
xchg
ins
mov
xlat
clc
mov
nop
lods
out
dec
std
sti
and
inc
(bad)
pop
adc
imul
mov
std
sub
xor
js
mov
in
xor
and
clc
daa
and
(bad)
repz
call
jge
daa
lock
stos
mov
jl
xchg
popf
xchg
rcl
cmps
cwde
int3
fdivr
(bad)
movs
sbb
aad
dec
scas
retf
inc
into
movhps
aas
ins
push
das
adc
cmp
mov
ror
call
xchg
clc
pop
dec
and
cmp
icebp
dec
add
imul
inc
cmp
push
sbb
or
jmp
sbb
pop
dec
mov
push
and
cmp
jo
test
push
out
scas
pusha
and
add
pop
mov
push
jbe
iret
xchg
mov
rcl
add
ds
std
lahf
lds
and
test
pop
shr
jnp
adc
jne
push
cmp
pushf
xor
les
loop
inc
jp
sub
inc
jb
push
or
pop
adc
mov
mov
std
shl
jp
jecxz
jno
cmp
aas
out
sub
int3
clc
pusha
test
fs
mov
push
adc
xchg
dec
cmp
add
xor
xor
ss
sub
inc
adc
jnp
push
cmp
fwait
inc
dec
call
or
mov
test
pop
or
out
push
dec
cmp
jae
fisub
cmp
test
adc
nop
cli
inc
out
(bad)
and
pop
pop
mov
in
jg
cdq
jo
push
retf
mov
(bad)
lock
inc
and
retf
push
adc
jmp
mov
cmc
outs
push
xor
(bad)
out
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
add
dec
xlat
(bad)
mov
pop
call
dec
into
jl
stc
sub
ret
mov
retf
dec
ins
dec
inc
retf
lds
sbb
mov
cmps
daa
sub
pop
lea
and
test
inc
pop
add
ret
push
es
fcomp
sub
inc
pushf
adc
ficom
dec
inc
push
mov
sub
cmp
and
ss
scas
xor
movs
ds
(bad)
test
push
fistp
jmp
sub
outs
add
adc
and
iret
or
fmul
inc
rcl
cli
cmp
nop
dec
jno
mov
mov
cmc
dec
xchg
mov
ret
add
sub
push
test
mov
dec
lea
xor
fdivr
add
jo
rol
sub
ss
mov
arpl
sbb
popa
and
push
rcl
adc
dec
in
inc
sub
fld
jb
mov
adc
mov
mov
jnp
pop
xchg
inc
inc
jb
fbld
add
call
aaa
mov
mov
test
imul
jle
retf
sub
mov
jae
jl
mov
lea
xor
mov
std
jne
mov
imul
hlt
out
cmp
adc
icebp
shr
xchg
lds
call
cmp
sub
pop
mov
and
xlat
gs
je
xor
fwait
repz
movups
mov
iret
iret
jl
xor
jbe
or
lods
push
mov
es
pop
push
stos
stos
mov
sub
std
jmp
dec
mov
add
push
mov
jnp
jb
in
xor
jno
mov
sbb
add
out
cmp
mov
retf
jnp
out
(bad)
into
lea
pop
aam
por
mov
out
call
(bad)
cli
mov
pop
cdq
sbb
test
jne
cmc
imul
jbe
adc
lahf
push
in
out
push
ins
adc
dec
or
mov
ret
and
fstp
inc
and
mov
sub
and
das
dec
jp
push
in
dec
mov
rcl
dec
push
dec
out
cdq
push
inc
(bad)
xor
add
test
mov
or
jns
nop
xor
dec
push
sub
mov
iret
and
jp
dec
inc
rcr
sbb
ror
or
pop
pop
xchg
(bad)
pop
dec
inc
mov
stos
jno
dec
pop
ret
pop
ins
ja
mov
call
(bad)
pop
add
cs
das
lea
movs
shr
repz
shr
jne
stc
mov
stc
repnz
das
cmp
mov
push
pop
xor
repz
mov
daa
es
push
sub
sbb
pop
loop
arpl
test
pop
sub
shl
cmps
jo
sub
push
adc
stc
fwait
and
sahf
xlat
cmp
cmps
sub
push
ror
das
xlat
cli
stos
lock
cli
pop
mov
rcr
(bad)
cmps
mov
fwait
clc
es
push
xlat
xor
inc
(bad)
leave
test
sub
es
lods
mov
out
rcr
ret
(bad)
data16
mov
loop
cmps
es
sub
rdpmc
lahf
ss
xor
aas
add
or
scas
sub
sbb
call
not
jmp
(bad)
aaa
xlat
lea
icebp
add
or
mov
push
jno
inc
scas
push
add
lods
push
cmp
stos
add
std
and
jae
jb
addr16
xor
dec
push
pushf
shl
fcomp
sub
mov
jns
into
push
mov
in
and
lds
xlat
and
or
add
fadd
lock
cmp
cmp
inc
push
xchg
stos
call
shl
imul
(bad)
loopne
mov
leave
push
add
ret
or
add
enter
xor
sbb
int
out
and
mov
sbb
sar
and
fadd
add
sbb
dec
mov
addr16
cmps
inc
jns
jl
or
mov
rcl
mov
shl
gs
hlt
pop
mov
sub
iret
push
lea
enter
sub
xor
mov
mov
pop
hlt
cwde
cmp
js
jp
retf
ins
jmp
cmps
popa
pop
jo
sub
sbb
mov
mov
push
(bad)
mov
movs
fldcw
mov
scas
jl
push
popa
(bad)
xor
xor
mov
out
es
test
std
push
and
jl
lahf
(bad)
inc
rep
sub
movs
mov
adc
push
cdq
or
inc
inc
adc
push
test
xor
das
sti
out
and
dec
das
mov
mov
xchg
(bad)
(bad)
ficom
cmp
mov
push
dec
aad
dec
and
out
mov
mov
pop
or
mov
push
popa
ror
into
popf
lods
add
jno
bound
cmp
stos
cmp
mov
xor
movs
push
sub
sahf
xchg
mov
sub
fnstsw
push
cmp
cmp
loope
dec
das
int
or
cmp
adc
pop
and
or
sti
das
inc
icebp
inc
enter
mov
pop
nop
call
test
sbb
jg
daa
test
xor
popa
push
jg
sub
or
sbb
xchg
add
cld
or
cmp
xchg
and
and
pop
es
jmp
cli
push
xchg
dec
jbe
push
(bad)
jb
xlat
jge
xor
(bad)
sahf
mov
or
lock
fidivr
sbb
int
adc
in
mov
fwait
add
fdiv
loopne
xchg
out
dec
fistp
xor
nop
mov
repnz
add
repz
adc
fsubr
stc
in
push
xchg
pop
leave
call
dec
or
ins
es
add
je
(bad)
jmp
sbb
test
stos
push
sub
inc
and
ds
test
sar
mov
adc
shr
push
fs
test
jno
pop
sub
loope
stos
pop
rol
ds
iret
gs
and
in
addr16
xor
jmp
dec
bound
dec
loop
and
jno
mov
cmps
and
mov
call
and
rol
or
nop
lods
mov
mov
jne
ds
bound
sub
into
stos
ins
add
inc
sbb
fwait
scas
not
(bad)
fs
pop
js
and
jecxz
pop
dec
adc
bound
cmp
fistp
jns
scas
sti
cmp
sahf
pop
push
pop
mov
fldcw
sbb
fstp
pop
arpl
push
das
xor
push
fstp
aas
push
sti
and
(bad)
outs
in
and
das
das
sahf
cwde
cld
in
cmps
pop
mov
mov
lds
jl
push
add
mov
stos
ds
add
add
jl
xor
fnsave
or
push
mov
jecxz
sub
xchg
pop
sbb
jo
dec
mov
xchg
add
mov
mov
sti
out
mov
movs
add
xchg
fs
(bad)
sub
aas
push
inc
push
push
adc
fs
mov
pop
mov
adc
movzx
and
pop
call
int
lds
cmp
add
push
and
ins
test
loopne
cs
loop
aam
lea
jmp
push
xchg
or
xor
mov
adc
push
je
sub
sbb
jl
adc
push
mov
inc
jecxz
or
shr
(bad)
push
mov
sbb
xchg
adc
mov
jbe
push
fild
cmp
fld
dec
jae
arpl
imul
xor
mov
cmp
xchg
pusha
sbb
sub
jecxz
jle
mov
sbb
pop
mov
cs
mov
push
dec
jb
and
sbb
nop
push
and
mov
hlt
sbb
cs
mov
sub
dec
repnz
mov
icebp
mov
jg
xchg
cmp
fs
test
movs
mov
in
sbb
jg
call
rol
cmp
(bad)
je
pop
adc
out
(bad)
out
shr
jbe
out
arpl
sbb
xchg
shl
mov
jle
and
sbb
jb
lods
mov
push
xchg
push
shl
xchg
xchg
fcmove
cmp
jae
(bad)
out
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
mov
cwde
test
jmp
leave
mov
pop
pop
test
daa
repnz
leave
jnp
fstp
paddsb
push
scas
adc
scas
sti
mov
retf
adc
cmp
shr
and
or
mov
jge
sbb
jnp
pop
cs
push
mov
dec
lock
jg
adc
cli
imul
lds
push
pop
inc
sub
push
fisub
and
outs
dec
and
(bad)
dec
clc
mov
pushf
push
out
test
sti
jmp
adc
shl
add
inc
mov
mov
stc
or
out
adc
mov
lahf
sbb
pop
inc
test
and
(bad)
fsubr
(bad)
ds
mul
and
cs
mov
cmc
cwde
cmc
inc
cmp
in
push
xor
mov
mov
adc
and
sbb
mov
ss
push
js
rcl
inc
mov
sti
out
inc
fisubr
sub
push
mov
mov
rcr
stc
xlat
js
dec
jmp
mov
mov
or
pushw
mov
adc
test
pop
leave
clc
push
and
bound
mov
jle
scas
ja
ins
stos
xor
imul
add
xor
xchg
or
pop
xchg
(bad)
sub
pop
mov
loop
ret
and
xchg
sbb
push
xchg
xchg
cmp
out
fwait
(bad)
out
fidiv
mov
retf
fs
shl
outs
cli
or
pop
wrmsr
in
call
or
mov
or
shl
dec
sahf
jl
or
lods
jb
loop
pop
inc
jecxz
push
push
ja
data16
adc
push
push
loop
jae
inc
ret
mov
lea
(bad)
in
sub
sub
mov
jl
jbe
jmp
sub
pop
int3
(bad)
push
add
clc
pushf
cld
pop
push
int3
(bad)
sti
ret
ins
fdiv
int
out
jnp
or
movs
push
dec
(bad)
lock
add
push
fwait
je
sar
dec
push
cli
lods
jecxz
dec
adc
cmp
jp
add
xor
rol
sub
jbe
(bad)
aas
(bad)
(bad)
gs
inc
fcom
(bad)
mov
adc
stos
fs
mov
ds
cmps
fsubr
(bad)
std
mov
pop
repz
jns
xor
xor
in
dec
add
shr
adc
xchg
not
push
mov
inc
sub
add
lods
movs
cwde
push
(bad)
fcom
loopne
daa
pop
test
addr16
jg
stc
adc
mov
repnz
nop
ret
or
lock
lahf
and
fs
xor
popf
inc
cmp
sub
jnp
popf
jmp
dec
xchg
fcmove
inc
mov
and
les
into
fidiv
mov
stos
sbb
pop
test
push
test
cdq
stc
and
pop
mov
inc
stos
(bad)
cmp
hlt
aad
xor
cmp
dec
pop
cmp
add
shr
sub
cmp
jg
daa
adc
add
xchg
inc
sub
push
cmp
jmp
fs
add
push
jle
xlat
aas
int3
in
add
sbb
cmps
mov
ins
adc
mov
das
aam
addr16
inc
push
push
mov
ret
pop
lahf
adc
dec
movs
or
outs
movs
test
mov
or
mov
sub
jp
int3
pusha
push
push
xlat
rcl
add
dec
jne
into
daa
push
mov
scas
cmps
loopne
xchg
aaa
sub
xchg
and
aas
mov
cld
xchg
cmp
jnp
push
sbb
mov
jl
dec
cmp
inc
int
test
xchg
push
inc
xor
jb
adc
xlat
ret
jbe
je
lds
inc
adc
add
xchg
icebp
call
push
and
adc
jne
idiv
adc
je
adc
push
add
fcmovnu
scas
xchg
jns
xchg
mov
out
push
aas
pop
push
mov
and
shl
popa
lods
aad
sbb
and
lahf
fdiv
addr16
dec
mov
ret
sbb
add
add
push
adc
xchg
dec
jo
(bad)
in
sub
test
jno
mov
sbb
int3
mov
cmp
or
jg
not
xlat
adc
jo
or
mov
sub
jecxz
push
loope
add
pop
(bad)
mov
aaa
std
xor
adc
(bad)
xor
xchg
lods
xchg
jmp
mov
out
retf
aad
ds
adc
jnp
test
jp
js
jne
stos
test
pop
pop
scas
mov
add
xchg
sub
ret
jmp
daa
dec
icebp
adc
pop
mov
mov
adc
fcomp
in
xor
and
pop
(bad)
push
push
pop
shl
(bad)
mov
or
add
xor
xor
cwde
ja
fdivr
cmp
jl
popf
inc
or
or
adc
jl
cmp
xchg
push
call
cs
cld
ins
je
and
mov
loopne
add
pop
pop
xor
mov
(bad)
or
retf
or
push
push
adc
mov
fistp
cmc
cdq
lods
adc
popf
xchg
and
dec
fs
cmc
inc
dec
sbb
sbb
mul
paddsw
sar
inc
pop
leave
dec
mov
jecxz
leave
inc
into
int
jo
push
int
pusha
push
mov
and
xlat
jb
dec
movs
or
xchg
cli
ss
and
in
pusha
xor
(bad)
leave
or
cld
sub
mov
xor
sbb
fsubr
xor
mov
dec
out
fldenv
inc
or
cmp
jp
dec
lahf
in
inc
mov
inc
pop
rcr
mov
hlt
jle
add
jnp
fld
call
and
(bad)
gs
xchg
dec
nop
add
sub
data16
sub
sbb
arpl
adc
jmp
pop
je
mov
out
bswap
jns
dec
mov
and
mov
cmc
mov
loop
retf
pop
fsubrp
cmc
leave
mov
fcom
movs
adc
jae
mov
xchg
jns
mov
jae
aas
loop
stos
ret
or
adc
add
popa
push
mov
(bad)
stc
xchg
jecxz
mov
cmp
pop
out
jns
test
cmp
icebp
inc
push
movs
ret
mov
in
repnz
stc
jge
and
loopne
sahf
push
arpl
iret
sbb
outs
pop
push
and
pop
jne
imul
xor
repz
scas
jmp
xchg
mov
std
cmp
in
cmp
mov
loop
mov
aaa
sbb
push
jecxz
ret
xchg
push
dec
adc
or
or
push
xlat
js
jae
js
sub
adc
adc
sbb
inc
ret
(bad)
stc
push
mov
push
into
mov
pop
scas
jae
ficomp
cmp
cmps
sub
je
pop
mov
or
iret
jmp
and
cmp
test
in
cmp
sti
or
pop
xchg
jo
jbe
cmps
xchg
jg
fistp
mov
push
jbe
leave
mov
das
pop
into
retf
les
fdivrp
mov
sbb
pushf
std
arpl
and
cmp
sub
mov
daa
mov
mov
jne
mov
popa
fadd
nop
lea
inc
sbb
mov
(bad)
xor
mov
fwait
rcl
ins
adc
ret
imul
cmp
aad
push
jae
jo
sbb
(bad)
(bad)
dec
in
mov
push
sub
push
sub
popa
mov
or
aaa
push
push
push
pop
sti
cmp
aaa
jbe
fidivr
mov
pop
fwait
mov
add
cli
xchg
push
push
mov
xchg
mov
jno
sbb
test
pop
fistp
inc
retf
and
xchg
mov
push
repz
les
dec
sub
loope
pop
mov
repnz
ins
lods
sub
(bad)
and
pop
ins
(bad)
jno
cmp
push
movs
sbb
cwde
xor
(bad)
in
xor
mov
dec
in
imul
push
outs
push
mov
xchg
fs
out
(bad)
or
push
cmp
in
xchg
sub
mov
movs
and
sbb
pop
pop
xor
sub
ret
data16
cli
push
push
dec
pop
jle
mov
sub
shr
jnp
jo
sbb
je
outs
idiv
andps
sar
outs
cld
mov
pop
shl
(bad)
fist
mov
and
fisttp
into
or
popf
aad
mov
jl
(bad)
pushf
mov
ins
jnp
mov
pop
stc
jno
repnz
xor
xor
cld
xor
jne
adc
into
fs
inc
jo
stos
sub
in
xor
jae
xchg
and
xlat
bound
push
js
outs
lea
mov
add
xchg
xor
jbe
xchg
mov
mov
dec
ret
movs
or
leave
mov
add
adc
sub
sub
pop
adc
outs
fisttp
and
in
ds
xchg
jecxz
pusha
cli
jle
lea
ins
dec
call
cmp
jmp
std
(bad)
mov
hlt
or
or
add
lock
mov
mov
dec
shl
pop
data16
enter
popa
mov
(bad)
retf
test
dec
xor
mov
cmp
jnp
cmp
(bad)
cmc
xchg
data16
into
sbb
in
or
mov
push
push
and
js
push
lods
pop
sbb
adc
push
push
or
pop
add
shl
arpl
inc
(bad)
jge
inc
call
(bad)
data16
cmp
fistp
and
add
mov
ds
dec
push
inc
jb
fisub
jae
gs
dec
out
rol
pop
mov
scas
push
adc
imul
pop
dec
hlt
xchg
clc
and
and
jae
imul
repnz
pop
mov
mov
not
stos
retf
xor
mov
scas
and
pop
fwait
push
dec
leave
push
(bad)
mov
aaa
cs
movs
repnz
mov
mov
mov
(bad)
idiv
mov
jge
xchg
and
test
jecxz
out
jno
into
jnp
(bad)
nop
dec
xchg
add
out
add
dec
and
jne
dec
lds
mov
add
add
idiv
xchg
outs
xor
std
or
and
add
pop
loop
sub
hlt
pop
movs
cmp
mov
ret
dec
sti
mov
dec
call
jne
and
ja
push
addr16
(bad)
mov
pop
neg
adc
jo
sub
inc
(bad)
jmp
repnz
fcmovu
lahf
jge
(bad)
arpl
out
xor
outs
add
out
sub
or
cmps
mov
mov
retf
xor
iret
dec
aam
inc
repnz
call
movs
adc
mov
push
cmp
mov
jle
call
pushf
cmps
out
xchg
js
sahf
das
push
dec
das
in
sbb
pushf
or
and
cmp
scas
sar
test
sbb
and
lock
outs
jae
fwait
xchg
(bad)
mov
enter
clc
jl
add
fbld
and
inc
dec
nop
and
ins
push
jne
sub
jg
fwait
in
add
pop
jno
loop
test
fild
lahf
jno
stos
or
jmp
lahf
push
cmp
popa
xchg
addr16
fidiv
push
iret
xchg
std
lock
sbb
aam
call
repz
shl
and
popa
(bad)
adc
ror
in
pusha
and
in
jmp
sar
rol
je
gs
shr
jl
dec
ins
or
adc
lods
adc
fild
shr
or
sti
sbb
nop
aam
ret
mov
enter
(bad)
rol
sti
(bad)
into
jae
cmps
call
jnp
dec
cmps
push
jmp
inc
pop
cmp
cmp
cmps
push
cmp
cld
lock
xor
inc
leave
add
shl
pop
cmps
repz
loop
mov
cmp
stc
or
test
sbb
cmps
outs
or
jmp
shl
rcl
dec
mov
dec
ret
or
je
mov
(bad)
mov
and
adc
sar
cmps
ss
test
je
(bad)
dec
pop
and
jecxz
icebp
sub
pop
loope
sbb
(bad)
mov
jbe
pop
in
scas
pushf
cwde
stos
xor
and
fnstenv
fldcw
jmp
cwde
lahf
xlat
cmp
bound
les
mov
mov
popf
mov
mov
test
dec
adc
hlt
xor
lods
aas
ret
xlat
jns
mov
mov
movs
int
sbb
inc
xor
adc
ret
int3
jmp
jmp
mov
pop
pop
cli
xor
sbb
xlat
sub
mov
xor
popa
push
retf
inc
mov
pop
in
push
mov
lods
push
dec
or
dec
je
(bad)
mov
in
mov
sub
clc
dec
sub
lods
shl
test
out
adc
out
arpl
sub
sub
mov
mov
push
sub
popf
sar
dec
push
add
data16
mov
sbb
sbb
psubusw
pop
lods
outs
in
ins
ret
xor
dec
sti
add
call
lahf
or
inc
or
faddp
and
cwde
pop
cli
movs
aad
xchg
test
loopne
mov
mov
out
push
lods
outs
jmp
push
mov
sbb
push
popa
jne
rcr
clc
sub
inc
xchg
fdiv
cs
bound
cdq
(bad)
sbb
icebp
mov
ins
cmp
xchg
je
xchg
pop
xchg
mov
aam
mov
and
push
shl
repz
xor
xor
gs
ins
in
int3
mov
push
add
mov
sti
sub
gs
gs
xchg
vfmaddss
lahf
push
loop
clc
cmc
sbb
or
push
pop
fcom
pop
mov
leave
jl
sbb
data16
dec
cwde
(bad)
inc
and
imul
jbe
or
push
jl
jecxz
xchg
push
inc
add
mov
push
or
ffree
cwde
inc
jns
stos
mov
stos
cmp
cmp
fstp
cmp
adc
daa
mov
push
mov
xor
inc
aam
or
pop
push
adc
cmp
jge
out
adc
add
in
jne
xlat
push
add
(bad)
dec
pop
mov
mov
mov
mov
ficomp
aad
call
cld
nop
mov
fisttp
and
outs
dec
aam
loopne
ss
mov
inc
cs
cmp
inc
mov
ins
pop
rol
xor
test
stc
stos
mul
pop
xchg
mov
(bad)
pop
mov
inc
push
lds
jmp
jmp
stos
add
mov
cdq
inc
add
add
rol
sbb
daa
test
clc
(bad)
mov
mov
inc
jg
cmp
mov
cwde
xchg
dec
xor
adc
dec
js
mov
mov
dec
xor
adc
dec
ins
pop
int3
(bad)
outs
jno
pop
scas
in
fsubr
clc
loopne
popa
movs
jmp
inc
mov
in
sbb
pop
mov
jmp
mov
xchg
and
mov
pop
sbb
lahf
add
mov
int
dec
out
jnp
jb
pusha
imul
mov
data16
cld
xchg
push
pop
loop
test
or
clc
mov
inc
hlt
cmp
xchg
mov
int
mov
cmc
frstor
(bad)
sbb
not
xchg
push
adc
cmp
stc
in
rcl
arpl
jae
cmp
dec
into
fistp
repnz
adc
(bad)
mov
lods
daa
sbb
ror
fisub
out
jge
inc
addr16
jb
or
(bad)
popa
in
sbb
out
mov
or
test
mov
xchg
cwde
int
(bad)
loope
daa
push
bound
inc
cmp
sar
cmp
pop
mul
cmp
push
mov
mov
xchg
fwait
sbb
sub
inc
movs
sub
xchg
lock
sub
cmp
cmps
mov
mov
xchg
push
and
and
jge
pop
fwait
inc
les
(bad)
ja
jb
dec
loopne
loop
(bad)
inc
ins
arpl
push
pop
push
dec
dec
push
pushf
loope
cmp
inc
inc
clc
outs
cmp
mov
movs
fcom
int3
hlt
addr16
or
es
push
fwait
and
in
xchg
lahf
cwde
adc
mov
cwde
jmp
push
jge
lock
push
addr16
sub
push
ins
inc
iret
sub
mov
(bad)
rol
dec
pusha
bound
add
loop
pop
xlat
mov
dec
cmp
mov
xchg
cmp
sar
lds
pop
outs
rol
dec
dec
or
inc
mov
and
in
lds
jl
lods
sub
cmps
mov
cld
rcl
add
push
(bad)
mov
leave
adc
mov
pop
mov
push
call
adc
loopne
fst
push
adc
dec
leave
sub
mov
outs
stos
stos
leave
les
jg
in
pop
mul
hlt
fsub
fldenv
xor
es
jae
pop
lahf
clc
push
mov
bound
pop
aad
arpl
in
sbb
inc
xchg
dec
ins
dec
stos
adc
sti
cs
les
fsub
xchg
jno
inc
mov
test
push
es
or
jecxz
in
(bad)
enter
add
shl
fnstenv
es
adc
mov
inc
sbb
pop
mov
fdiv
push
mov
ins
cmps
out
loopne
retf
push
dec
pushf
push
sub
jae
shr
in
stc
and
and
sbb
(bad)
fwait
mov
jns
dec
jmp
loopne
cwde
enter
ret
mov
int3
retf
jnp
sbb
ret
dec
jo
cmp
jle
mov
xchg
inc
imul
gs
fbld
or
lods
sub
sbb
xor
ins
call
push
pop
arpl
rcr
inc
shr
sbb
fwait
push
(bad)
mov
daa
sub
pop
jnp
inc
or
out
push
ins
sub
add
or
sbb
inc
repz
pop
loop
ret
inc
xchg
dec
inc
ins
iret
jl
sbb
mov
scas
push
rcr
ins
pop
aad
sub
or
mov
adc
and
mov
ficom
jno
xchg
iret
scas
les
sub
fnstsw
test
movs
xchg
call
sbb
pop
push
mov
aaa
fdivr
dec
cmp
pop
cdq
pop
lea
xchg
ss
in
lock
cmps
mov
and
ins
lahf
and
shr
inc
mov
fs
cmp
cld
mov
mov
jns
outs
mov
sbb
and
xchg
and
mov
outs
fisub
or
std
xchg
add
mov
push
xlat
adc
inc
(bad)
dec
cmp
inc
xor
add
inc
mov
or
(bad)
push
inc
cs
sbb
xor
(bad)
fild
into
xchg
fdiv
shl
movs
sbb
jle
xlat
sbb
xchg
mov
jl
ret
ja
jl
inc
dec
fimul
mov
pop
adc
dec
mov
cs
ins
outs
inc
or
in
and
nop
dec
pop
dec
das
(bad)
sub
fdivr
mov
ins
clc
cli
pop
fisttp
nop
out
outs
outs
cmps
mov
sar
cdq
sub
mov
inc
add
xlat
shl
mov
ja
movs
mov
rcl
data16
pop
lock
inc
shl
clc
adc
jmp
mov
mov
sbb
clc
loope
out
dec
imul
push
mov
scas
es
nop
push
inc
cmp
inc
inc
fstp
int
imul
jmp
lds
retf
daa
sub
xchg
pushf
pop
jle
sub
jae
xor
mov
xchg
(bad)
jl
xchg
mov
das
and
sbb
jns
scas
jnp
bound
jg
mov
clc
daa
sub
clc
pop
or
or
pushf
loope
xor
jo
inc
adc
(bad)
dec
push
pop
test
repz
sub
jmp
fimul
cmc
pop
loopne
bound
and
mov
call
adc
and
mov
dec
or
jecxz
or
and
imul
and
adc
mov
aas
(bad)
inc
fist
adc
mov
mov
add
ret
sbb
dec
cmp
mov
inc
adc
xor
imul
fidivr
jae
push
push
dec
mov
data16
mov
adc
mov
aam
ror
mov
sbb
ficomp
bound
in
leave
loopne
sbb
nop
call
fadd
xor
adc
push
mov
mov
stos
cs
or
sub
mov
xchg
int3
cmc
pop
jns
jne
sbb
cld
push
shl
jmp
pop
enter
out
mov
(bad)
push
xchg
inc
mov
fcmovnbe
jbe
sbb
dec
wbinvd
inc
cmp
xchg
and
es
xchg
push
test
mov
iret
bound
jmp
call
shr
pusha
and
xor
adc
dec
lods
(bad)
repz
adc
call
dec
out
jp
mov
push
jne
mov
adc
xchg
leave
test
jecxz
hlt
cmps
fcom
mov
test
movs
fnstcw
in
adc
(bad)
call
or
(bad)
jnp
sub
jmp
mov
xchg
int3
ds
int3
lahf
or
or
sub
fs
or
mov
cwde
add
jae
pop
ret
xchg
jns
dec
cli
pop
lods
fst
xor
sbb
test
push
inc
sub
mov
shl
cmps
inc
test
retf
jge
nop
in
jnp
adc
adc
push
cmps
out
xor
loop
or
fld
pop
shl
cs
sti
mov
iret
pop
dec
jnp
pop
or
aam
imul
or
or
outs
pop
cmp
stos
xlat
mov
out
movs
or
retf
push
inc
sub
test
fwait
movs
xor
jns
push
mov
fadd
xchg
jmp
dec
dec
outs
dec
xchg
fs
cli
mov
adc
cmc
sahf
xchg
inc
rcl
ret
enter
sub
or
add
pop
movs
jg
inc
push
xor
(bad)
ficomp
fwait
xor
stos
adc
icebp
(bad)
aaa
mov
mov
fs
scas
shl
je
test
adc
xchg
xor
xchg
movs
cmp
fsub
bound
sub
and
xchg
sti
push
xor
add
jle
daa
mov
rcl
mov
out
jb
mov
sub
stos
cmp
sahf
mov
out
sbb
push
btc
jl
cmps
mov
enter
or
arpl
(bad)
adc
popa
jecxz
test
jecxz
cld
js
or
mov
je
fmul
dec
dec
sbb
pop
sub
mov
inc
fxch
adc
into
and
jg
cmp
std
xchg
xchg
call
outs
dec
fs
sar
mov
and
ss
cwde
(bad)
in
arpl
jp
pushf
in
rol
pop
in
test
loop
ficom
adc
in
hlt
adc
mov
pop
in
mov
dec
add
cmp
and
xchg
push
push
inc
out
jge
sbb
sbb
or
adc
jns
and
or
pop
add
movs
mov
ins
cmc
add
bound
cmp
ins
cs
fild
mov
aas
mov
xchg
daa
nop
into
jle
fisttp
pop
jl
cdq
test
scas
shr
pop
test
pop
and
jo
aad
daa
adc
sbb
sub
(bad)
pop
frstor
shl
xor
popf
lds
mov
or
dec
or
xchg
dec
fdivr
xor
shl
mov
clc
or
shl
mov
pop
das
jg
(bad)
adc
dec
pop
out
stc
(bad)
mov
cmc
mov
dec
xlat
sub
icebp
dec
xchg
fcmove
inc
test
inc
xchg
adc
dec
lea
pop
xchg
jecxz
lahf
push
inc
icebp
jp
sub
fstp
mov
stos
test
les
(bad)
jmp
sbb
pop
mov
adc
(bad)
iret
gs
fld
neg
stos
dec
iret
nop
and
push
mov
inc
fistp
scas
outs
aaa
jne
fwait
inc
outs
div
bound
mov
(bad)
daa
aaa
shl
jle
push
sbb
mov
popa
hlt
dec
jle
sub
xchg
aaa
dec
dec
arpl
push
leave
int3
ins
cmp
lds
out
xchg
mov
ss
movs
mov
xor
test
inc
rcr
inc
dec
pop
arpl
lahf
mov
sub
enter
inc
int3
jbe
lgdtd
mov
nop
repz
(bad)
jle
sbb
xor
xor
inc
bound
test
add
push
mov
mov
pop
in
inc
shld
dec
fsubr
aad
imul
or
pop
adc
jmp
xchg
adc
xchg
xchg
push
jae
jnp
xchg
call
and
sti
adc
stos
arpl
call
mov
sbb
dec
xchg
inc
push
inc
adc
cmp
ret
cmp
dec
add
mov
mov
sub
jb
cld
pop
in
inc
enter
out
and
sub
xchg
pop
rcr
sbb
or
xor
(bad)
(bad)
outs
aaa
rcl
push
jmp
inc
dec
scas
repnz
push
xchg
jl
and
inc
add
idiv
inc
out
xchg
or
in
(bad)
sbb
pop
int
xchg
adc
stos
aam
popf
fwait
jmp
add
into
and
popf
fwait
nop
imul
pop
mov
lods
dec
(bad)
xchg
jp
xchg
dec
jns
dec
jbe
jmp
mov
adc
pop
mov
cmp
sbb
shr
out
dec
(bad)
xor
or
sbb
(bad)
jmp
pop
mov
xchg
aaa
hlt
test
inc
imul
ins
push
cs
dec
repz
(bad)
ss
pop
sbb
lahf
xchg
shr
push
inc
xor
inc
in
xor
sub
imul
or
jne
jle
leave
hlt
pop
cwde
fidivr
stc
js
retf
and
lock
lods
push
(bad)
or
ds
rcl
(bad)
mov
call
ret
add
and
pop
pop
add
jb
fsubr
into
lds
xor
out
mov
pop
mov
cs
xchg
out
hlt
outs
cmp
cwde
dec
xor
and
mov
outs
leave
push
cmp
fsub
dec
mov
(bad)
(bad)
ins
push
icebp
fidivr
xor
mov
mov
das
in
pop
in
adc
inc
lea
fisttp
ins
stos
pusha
xor
cld
retf
inc
xchg
push
nop
outs
out
outs
in
push
ins
adc
mov
pop
or
jno
mov
je
lea
jecxz
fs
or
aad
lods
sub
sub
add
iret
mov
jp
adc
mov
sbb
(bad)
je
xor
push
jb
gs
mov
inc
(bad)
push
ja
(bad)
sbb
or
inc
std
js
retf
nop
cmps
jne
cmc
cmp
aad
add
inc
hlt
jo
test
cs
dec
pusha
and
mov
loopne
inc
and
and
inc
cmp
int
cld
mov
bound
xchg
sahf
pop
mov
adc
jno
push
in
test
push
std
push
xor
push
dec
aam
xor
cmp
jne
pop
xor
add
iret
lahf
jb
idiv
(bad)
aad
cmps
loop
lods
pop
ss
pmaxsw
pusha
mov
sub
mov
not
es
mul
call
movs
test
leave
and
mov
sar
or
inc
mov
dec
push
xchg
mov
fstp
or
adc
push
popf
(bad)
sbb
fiadd
loopne
popf
mov
cli
sbb
mov
cs
mov
dec
sub
xchg
dec
mov
stos
mov
push
sti
push
push
dec
std
dec
fimul
cmp
lock
std
sub
cs
push
stos
cmps
adc
clc
dec
xchg
inc
mov
cmps
test
dec
xor
xchg
imul
mov
out
add
mov
adc
or
test
inc
ret
movs
in
add
cmc
or
hlt
jecxz
repz
mov
inc
out
sti
stos
mov
neg
leave
lods
dec
aad
je
fs
pop
dec
icebp
dec
xchg
fcmove
inc
cmc
test
sub
pop
jecxz
movs
push
sar
movs
mov
mov
stc
xor
repz
dec
out
cli
and
aam
push
jne
inc
xchg
mul
mov
jbe
int3
mov
pop
iret
sbb
mov
xchg
sub
mov
fcmovbe
mov
mov
adc
jmp
push
pop
dec
retf
dec
add
xchg
outs
ins
nop
xchg
or
test
pop
fnstenv
in
pop
icebp
imul
push
push
cmc
lods
js
push
(bad)
sub
(bad)
stc
pop
xchg
je
mov
mov
mov
add
sub
out
shl
test
mov
das
or
sub
test
pop
cmp
ins
stos
stc
jbe
(bad)
sbb
(bad)
xchg
cld
xor
imul
fst
int3
jae
push
repz
std
or
push
into
cmp
aaa
add
sbb
push
dec
jbe
mov
mov
mov
sbb
xchg
mov
cmp
push
fisub
jne
sub
add
bound
xor
repz
test
jae
xor
cmp
mov
shr
cmp
rcl
push
sbb
dec
fcomp
lods
pop
(bad)
xchg
int
pop
xor
repz
(bad)
fstp
add
push
xchg
fldcw
mov
and
add
push
cmp
jecxz
or
push
stc
mov
xor
pop
ror
ins
xor
cdq
mov
iret
retf
loop
mov
push
lahf
sti
lea
xlat
xor
inc
fwait
inc
push
hlt
push
inc
lods
xor
and
retf
jns
inc
std
jo
in
xor
lea
jg
and
or
cmp
out
pop
(bad)
push
lock
dec
adc
sbb
loopne
sbb
imul
add
jge
scas
dec
or
stc
add
push
or
call
or
iret
pop
cs
push
aaa
popa
and
or
add
mov
add
nop
mov
adc
int3
cmp
popa
addr16
mov
call
test
mov
add
xor
mov
sar
jmp
add
neg
inc
xchg
mov
xor
clc
add
scas
xor
sub
jp
xor
sub
add
adc
jl
mov
gs
(bad)
dec
jp
lods
sub
mov
xchg
cs
jmp
lds
mov
cld
pushf
pop
push
mov
inc
jg
jg
push
adc
rcr
sbb
mov
cs
vdivpd
inc
xchg
(bad)
cmps
sti
jge
sub
and
mov
cmp
pop
xchg
je
in
sub
inc
(bad)
push
sub
jno
mov
imul
outs
adc
imul
shl
test
mov
jp
imul
(bad)
lahf
out
ss
test
sub
sub
sahf
jo
fs
sahf
jg
fdivrp
cmp
inc
test
jne
aad
je
stos
adc
fcom
arpl
aas
sbb
sub
jo
in
and
sar
jae
daa
out
loopne
ins
xchg
cmp
out
stos
cmp
(bad)
hlt
rcl
(bad)
fdivr
sbb
loopne
and
ss
jp
or
pop
data16
fsqrt
jne
sub
retf
mov
xchg
mov
push
mov
pop
inc
add
mov
out
mov
xor
jge
adc
adc
int3
cwde
adc
cdq
call
xor
dec
nop
into
or
sbb
data16
mov
out
jnp
jmp
sbb
aaa
xchg
ins
data16
cs
repz
aas
movs
ins
mov
lds
in
aam
jb
out
sar
xor
xlat
adc
xchg
icebp
mov
add
loope
sbb
lahf
addr16
mov
rcr
aaa
fdivr
aas
iret
dec
mov
inc
ret
fmul
sbb
stos
int
pop
addr16
cmc
out
xor
add
adc
adc
out
fbld
repz
sub
pop
ss
mov
movs
loop
test
lds
iret
das
stos
cmp
in
clc
stos
xchg
cmp
pop
mov
mov
sbb
repnz
xchg
retf
and
jge
inc
jns
icebp
pop
out
movs
ins
or
xchg
jo
xchg
out
and
ds
(bad)
bound
out
adc
push
lahf
jbe
pop
jb
inc
inc
iret
jl
add
mov
aaa
jge
(bad)
in
push
xor
das
pop
cmp
aam
pop
ret
std
mov
pop
push
jnp
imul
int3
rcl
dec
cmp
xchg
sbb
push
(bad)
fldcw
and
adc
cmp
daa
ja
in
clc
cmps
and
rcl
sub
add
push
inc
mov
cmp
mov
(bad)
mov
pushf
sub
mov
nop
fisttp
in
ins
outs
jmp
xchg
fwait
or
mov
xlat
or
pusha
dec
inc
mov
push
add
out
imul
or
inc
out
(bad)
lods
jne
xor
leave
add
retf
mov
dec
shl
cld
std
add
and
sub
xchg
inc
mov
mov
cmp
mov
inc
retf
pusha
xor
cli
inc
mov
mul
add
ret
pop
mov
adc
ins
inc
into
jp
jecxz
inc
pusha
call
(bad)
das
imul
xor
push
aas
add
mov
fcmovb
sbb
js
jne
mov
(bad)
or
iret
add
fist
push
loope
jmp
mov
movs
mov
mov
int
dec
xchg
repz
mov
(bad)
shr
in
dec
jmp
xchg
push
cmp
pop
test
test
cmp
push
test
mov
mov
xchg
jnp
mov
mov
dec
int
pushf
push
xor
sbb
and
rol
adc
les
add
ds
add
fld
inc
mov
xchg
(bad)
mov
in
push
ss
popf
cmp
mov
mov
sbb
jmp
push
jge
sbb
push
push
inc
fidiv
mov
test
nop
mov
push
int3
jp
popf
pop
xchg
ss
or
call
ds
movs
mov
(bad)
fldenv
fwait
aaa
mov
mov
ror
test
adc
mov
call
add
xchg
das
data16
pop
push
cwde
push
dec
xchg
movs
imul
aas
jge
or
imul
je
das
xchg
mov
jmp
xchg
adc
sti
push
jecxz
add
lds
fwait
mov
sbb
mov
xchg
add
bswap
jmp
jae
adc
frstor
movs
popf
xchg
inc
rcr
outs
mov
mov
psubusb
inc
shl
inc
sbb
adc
jnp
retf
jne
pop
cmp
and
sbb
pop
mov
xor
imul
jo
pop
stos
leave
aaa
ds
mov
jae
inc
mov
push
out
loop
dec
pop
mov
sub
push
push
and
mov
mov
les
or
fbld
jno
in
mov
dec
retf
pop
jnp
or
popf
inc
sar
and
int3
mov
jmp
lds
repz
cmc
mov
mov
stos
ss
aad
adc
rcl
pop
jecxz
pop
mov
jb
dec
pop
(bad)
and
dec
jnp
inc
dec
and
xchg
pop
fs
sahf
(bad)
jmp
pop
mov
add
pop
mov
(bad)
std
xchg
adc
or
pop
outs
enter
cmp
ficom
jmp
in
or
rcr
call
xchg
mov
xor
mov
dec
mov
repz
mov
jb
or
popa
test
stos
stos
in
daa
and
scas
push
inc
pushf
popf
scas
test
leave
inc
jb
imul
xlat
inc
iret
pushf
imul
dec
sti
xchg
jle
jg
ror
xchg
gs
shufps
jge
mov
and
pop
cli
les
test
movs
push
stos
es
jae
xor
int
out
sbb
jo
add
dec
or
pushf
cwde
mov
xchg
ins
cmp
pop
fwait
cmp
jecxz
xchg
test
stos
ret
mov
into
or
test
fbld
or
sbb
xor
fwait
or
jne
jge
out
scas
mov
sbb
and
jl
jmp
and
xchg
repnz
fist
and
dec
sbb
movs
push
(bad)
cmps
out
(bad)
test
lods
jb
sar
sub
mov
jl
test
icebp
fwait
jno
adc
push
in
in
push
out
std
add
jmp
xor
add
jp
sub
add
pop
sub
pop
add
xchg
out
lahf
inc
jnp
mov
xor
mov
ficom
pop
cmps
add
adc
stc
xchg
idiv
int
mov
fnsave
test
xchg
test
cmps
push
push
lods
test
cs
jae
pop
push
mov
iret
out
or
push
sbb
cwde
or
pushf
jmp
sbb
xchg
test
or
lds
in
(bad)
xchg
mov
addr16
loop
dec
inc
xor
add
lea
xor
add
sub
or
mov
repz
sbb
daa
aam
ss
cmps
jae
pop
xchg
jns
mov
inc
(bad)
fcmovb
sar
inc
ja
pop
xchg
cmp
lahf
push
adc
sbb
or
shl
imul
(bad)
(bad)
jecxz
push
or
in
lahf
ins
out
sub
jl
ins
fs
stos
mov
mov
mov
call
jp
inc
add
push
mov
add
cmp
pusha
jp
das
or
adc
sbb
int3
adc
mov
sub
repnz
mov
sbb
jns
outs
retf
daa
mov
mov
xor
sbb
lahf
dec
nop
mov
jo
sbb
sbb
cmp
push
xchg
cwde
mov
push
out
aad
push
mov
outs
int
or
adc
inc
aas
cmps
outs
jg
lods
xchg
push
pop
lahf
xchg
cmp
jbe
retf
jnp
xchg
outs
mov
icebp
(bad)
(bad)
or
pop
pop
and
ja
dec
imul
movs
fidivr
pop
mov
out
fdiv
xor
(bad)
xchg
out
mov
jnp
xor
inc
addr16
xor
xchg
dec
pop
mov
push
je
fs
jns
sub
xchg
mov
ins
xchg
out
jmp
lock
jp
and
pop
cwde
arpl
lock
arpl
(bad)
out
jmp
aaa
pop
mov
jmp
sbb
push
stos
not
cmp
fisubr
and
mov
bound
out
xchg
aad
stc
jle
ins
fist
add
jb
mov
call
cmp
iret
ins
pop
mov
out
adc
sub
jg
mov
out
repz
jns
cli
and
das
inc
loope
xchg
test
pop
adc
inc
sbb
jae
jnp
fwait
lahf
bound
pop
test
jmp
loopne
mov
cmp
lods
(bad)
lods
pop
xor
cli
rol
fisubr
js
push
retf
imul
ja
lods
and
mov
dec
(bad)
dec
mov
stos
sub
cmps
sar
push
sbb
cmc
fidiv
pop
cmps
cli
repz
lds
sbb
stc
frstor
test
retf
mov
pusha
dec
inc
push
mov
ins
xchg
inc
inc
add
stos
xchg
or
sbb
popa
inc
fs
repnz
sbb
dec
sub
scas
std
das
jns
ja
jnp
(bad)
pop
or
adc
jg
shr
jg
sub
push
inc
xchg
aad
inc
pusha
std
and
push
and
jne
mov
dec
push
leave
mov
mov
pop
(bad)
sahf
xor
call
inc
mov
xor
mov
push
mov
xlat
(bad)
out
les
cmp
sti
xchg
inc
mov
dec
mov
inc
sub
fidiv
mov
(bad)
xchg
icebp
sbb
aaa
jmp
jnp
shl
retf
mov
movs
dec
dec
xchg
sahf
mov
mov
mov
fsub
pop
lea
push
punpcklwd
push
jp
repnz
pop
and
xchg
xchg
or
inc
sahf
test
cwde
inc
(bad)
jnp
outs
idiv
push
cmp
adc
jns
sbb
loopne
pusha
adc
or
xor
aas
mov
or
mov
and
cmc
fiadd
mov
dec
arpl
sahf
call
les
sar
mov
fs
je
add
mov
stos
pop
ficom
bnd
mov
or
cli
fcmovu
imul
add
and
and
lock
ret
shl
xor
sub
push
hlt
(bad)
outs
mov
(bad)
push
xor
push
cmp
ds
retf
stos
sub
push
cmp
into
pop
mov
push
or
repnz
fwait
bound
xchg
(bad)
cmc
dec
dec
fs
aad
xchg
pop
mov
xchg
sar
mov
dec
mov
sbb
pop
popa
or
aad
and
xor
add
xor
enter
(bad)
adc
ret
cwde
fs
idiv
jecxz
out
repz
add
inc
fdivr
pop
inc
jnp
int3
shr
jge
jns
push
sbb
out
les
adc
sub
ss
mov
or
xchg
rcl
jo
add
gs
cmps
dec
(bad)
repnz
fucomi
add
mov
xor
sub
shr
into
pop
rol
add
jmp
pusha
leave
dec
in
xor
inc
movs
sbb
in
mov
and
or
adc
clc
push
and
jbe
push
xchg
icebp
or
(bad)
aas
or
(bad)
fs
add
or
cld
push
je
cmp
sbb
mov
hlt
mov
daa
arpl
add
and
push
enter
fdivp
sub
aaa
inc
std
mov
cmc
dec
std
pop
mov
pushf
ja
dec
retf
rcr
or
mov
jo
es
sub
loopne
pop
dec
cdq
jecxz
fnsave
fcomp
sbb
repnz
sbb
call
mov
push
pop
pushf
xchg
mov
inc
stos
popf
push
ret
jl
mov
xchg
pop
leave
jb
sbb
xor
jnp
jb
not
cmps
and
imul
stos
mov
mov
inc
or
js
les
sti
ins
push
or
sbb
adc
push
jp
sub
adc
adc
xor
jmp
xchg
pop
and
dec
cmp
je
cli
or
aam
retf
hlt
ja
xchg
mov
mov
adc
xlat
hlt
in
fistp
aas
(bad)
fnstsw
retf
repz
(bad)
jb
popf
xchg
add
jecxz
xor
cmp
ss
out
push
pop
cmps
mov
adc
orps
jge
out
cmc
and
push
push
xchg
nop
retf
jge
sbb
out
push
pop
dec
xchg
adc
scas
fidivr
xchg
and
jle
pop
cld
scas
xchg
lock
daa
sub
les
add
(bad)
(bad)
xchg
push
xchg
pop
mov
imul
add
in
push
mov
repz
popf
out
cld
xchg
or
in
lods
repz
shr
sub
lea
ret
sbb
sbb
leave
inc
inc
(bad)
mov
test
fsub
sub
stos
cmp
sub
lock
sbb
scas
in
rcl
iret
lea
adc
(bad)
scas
ret
add
dec
mov
cli
nop
rcl
mov
pop
or
pop
nop
or
xor
scas
jmp
xchg
jns
int
pop
adc
xlat
ja
sub
scas
jns
loope
pop
scas
fstp
mov
mov
push
data16
das
pushf
into
or
mov
add
xor
cdq
sbb
(bad)
pop
or
aam
xor
outs
faddp
fbld
sbb
sub
mov
daa
adc
or
pop
in
aas
out
popf
cmp
add
sahf
and
cmp
repz
inc
dec
mov
mov
aad
pusha
mov
mov
xchg
xor
lahf
stos
push
in
(bad)
movs
jg
pop
out
sbb
fprem1
xor
adc
leave
je
cdq
jl
add
mul
or
int3
js
mov
jne
inc
out
fmul
clc
stc
call
mov
jno
dec
jne
jb
mov
cmp
mov
sub
add
or
and
xchg
push
xchg
ret
add
cmps
xor
pushf
inc
fcomp
out
mov
retf
adc
xor
add
jb
push
test
and
into
nop
movs
pop
out
dec
dec
xchg
lds
ds
in
mov
inc
add
xor
repnz
das
dec
sub
pop
ins
hlt
arpl
jbe
lods
rcr
pop
pop
cmp
xchg
jne
xor
cmp
sub
mov
cmp
add
add
jbe
dec
pop
enter
xchg
or
imul
fs
push
dec
sub
inc
xor
fwait
pop
inc
popf
xchg
push
xlat
add
xchg
mov
test
mov
mov
push
mov
dec
sahf
sub
push
in
gs
pop
in
jns
aad
(bad)
jns
leave
std
xor
daa
popf
push
in
cld
jmp
jne
lods
sub
je
jle
(bad)
mov
and
loope
pop
aad
mov
in
and
sbb
test
rcl
jbe
leave
mov
sahf
movs
or
xor
aas
icebp
fcom
mov
cmp
repnz
sub
cmp
sbb
(bad)
and
jnp
inc
pushf
jae
shl
sbb
sbb
dec
outs
mov
sub
inc
xchg
mov
cli
ins
add
repnz
pusha
inc
mov
icebp
pop
je
xchg
rol
and
lock
repnz
jne
out
jb
xor
sub
push
aaa
jmp
rol
pop
mov
aas
mov
pop
pop
or
imul
(bad)
je
sub
inc
xchg
retf
mov
push
xchg
ja
and
pop
sbb
pop
mov
xchg
xchg
inc
add
fisub
test
push
cmp
leave
sub
das
lock
add
xor
dec
(bad)
jle
xchg
dec
cdq
ja
retf
mov
sti
push
dec
and
or
cmp
xchg
mov
test
pop
fcomp
(bad)
mov
mov
lahf
lds
pop
lods
cmp
sbb
mov
xor
lods
ror
sbb
inc
arpl
pop
(bad)
dec
aas
and
adc
cmove
retf
js
add
push
jl
or
cmp
call
xchg
aam
adc
mov
popa
scas
sbb
push
popf
not
scas
pop
cmc
repz
lahf
cmp
dec
mov
es
into
jns
adc
mov
fst
loop
mov
pop
mov
(bad)
out
push
rcl
mov
repnz
inc
fs
(bad)
int3
in
test
cmc
cmp
shl
and
(bad)
in
retf
sahf
lock
pop
sbb
(bad)
dec
jb
pop
pop
pop
mov
adc
test
mov
fimul
iret
cmp
retf
fwait
jnp
cld
and
mov
movs
cmp
mov
in
jbe
mov
gs
mov
pop
mov
(bad)
stc
xchg
les
sti
neg
jbe
leave
mov
inc
inc
call
and
aam
ret
push
enter
test
rol
pop
sbb
lds
div
stos
inc
or
mov
call
sahf
sahf
or
fiadd
xchg
aas
ret
pushfw
push
iret
dec
scas
pop
mov
jg
jbe
sbb
cmp
ss
stos
push
sbb
shl
(bad)
pop
pmulhw
dec
and
xchg
mov
add
fcmovbe
mov
mov
hlt
out
cdq
dec
aad
(bad)
loopne
les
cmps
scas
cld
xchg
das
popf
in
repz
add
cli
fs
pusha
or
add
mov
cwde
add
adc
lock
jmp
imul
int
cmps
cmc
inc
daa
ja
inc
jle
xlat
ds
movzx
mov
cmp
pop
cmp
movs
dec
xchg
and
je
jnp
sub
pop
ds
cs
mov
mov
rcl
(bad)
pushf
mov
int
stc
cwde
adc
xchg
fadd
add
cmp
fst
ins
bound
fs
dec
fs
mov
dec
mov
jp
in
push
jns
popa
icebp
mov
and
repnz
jmp
push
cmp
pop
(bad)
enter
bound
retf
mov
mov
jmp
lods
lds
dec
ret
dec
and
xor
daa
sti
dec
xor
call
or
test
sbb
fist
jg
je
(bad)
mov
retf
xchg
xchg
shr
gs
sbb
jg
fistp
mov
mov
stc
stos
cmp
inc
ds
xor
sar
outs
jns
jmp
inc
popa
ret
dec
mov
dec
xchg
lahf
shr
cmp
jge
mov
jae
div
and
mov
xchg
cld
cs
(bad)
bound
push
push
push
jge
mov
fistp
scas
(bad)
retf
xchg
xor
int3
test
add
mov
xor
ror
ret
cmp
jno
std
mov
pushf
sub
add
fsubr
arpl
push
movs
pop
mov
imul
xor
cmp
jo
int3
lock
xchg
push
scas
dec
add
cmp
(bad)
or
out
dec
ins
fstp
int
mov
mov
cmc
pop
cdq
xchg
or
aaa
(bad)
cld
adc
loop
cmp
rol
rcl
sahf
pop
xchg
adc
push
pop
(bad)
adc
pop
and
scas
xchg
sti
out
and
xor
retf
xchg
stos
push
cs
xchg
mov
jmp
sub
gs
imul
imul
out
mov
cmp
cmp
jnp
iret
pop
pop
sub
lds
repz
xor
sbb
xor
push
dec
add
xor
pop
in
add
xchg
ror
mov
js
inc
or
das
pop
add
arpl
push
mov
xor
sbb
pushf
add
mov
xor
jae
pusha
inc
mov
inc
cmc
sub
iret
retf
xor
test
dec
jge
(bad)
in
std
lock
adc
les
scas
or
push
inc
test
sub
push
cmp
xchg
dec
sar
cmps
loope
(bad)
(bad)
and
cld
retf
shl
loop
dec
mov
mov
add
sar
bound
pop
aas
mov
arpl
out
mov
sub
inc
dec
test
aam
sti
jg
sbb
inc
jae
add
push
es
push
ds
sbb
aas
add
mov
popf
rol
test
or
cmp
xor
lods
ret
stc
fcmovnu
aaa
cld
sahf
or
mov
cmp
sahf
adc
lahf
sub
nop
aad
adc
loope
push
retf
pop
jge
push
movs
out
mov
jae
adc
mov
pusha
lea
or
jecxz
push
push
addr16
pop
mov
sbb
cwde
push
lds
jno
jns
arpl
jecxz
stos
pop
add
out
xlat
outs
inc
ds
pop
aad
dec
xchg
stos
(bad)
retf
mov
sbb
bswap
loope
or
sahf
into
mov
stc
mov
loopne
ret
xchg
lods
inc
cmp
inc
idiv
aam
cld
shl
fild
xchg
lock
jno
mov
or
inc
adc
push
xchg
in
sub
jg
xor
dec
sub
loope
sbb
jmp
or
mov
popa
add
lock
movs
mov
pop
inc
jmp
and
sub
jl
pop
cmp
dec
mov
sub
dec
mov
jno
jno
adc
add
pusha
in
repz
imul
fs
imul
lods
cmp
adc
lock
and
movs
outs
pop
hlt
loope
sub
mov
or
popa
addr16
cld
mov
xchg
or
xor
aam
xchg
add
les
inc
cmp
and
push
mov
aas
mov
(bad)
mov
mov
push
add
inc
out
pop
or
push
xor
cmp
pop
shl
xor
std
cmp
inc
mov
jl
inc
out
fidiv
jge
outs
inc
int3
scas
adc
dec
xor
in
ror
mov
(bad)
cmp
ficom
enter
xchg
mov
xchg
xchg
fcmove
xchg
mul
xor
mov
fcomp
xchg
xor
scas
fbld
xor
fdiv
add
add
pushf
test
pop
ds
loop
pop
jne
pop
imul
das
jb
and
jmp
inc
adc
arpl
jb
fsub
inc
pop
rol
jmp
push
push
retf
dec
sub
call
xchg
test
or
sahf
push
ja
or
fsub
popa
jp
in
pop
ret
and
pop
push
inc
stos
sti
adc
leave
cld
sub
add
push
lds
in
out
or
cmps
jbe
retf
movs
jp
imul
retf
cs
inc
rep
outs
mov
lods
js
fsubr
fs
or
and
retf
shl
bswap
(bad)
mov
leave
pop
pusha
in
pop
enter
push
test
inc
data16
mov
mov
pop
dec
sbb
sbb
mov
sbb
stos
sbb
ja
(bad)
jge
arpl
dec
ret
addr16
into
test
lahf
cmp
popa
and
and
push
push
ret
pop
xchg
and
pusha
mov
mov
ins
jle
jmp
popa
inc
mov
xchg
scas
les
dec
xchg
cmc
push
das
xor
ss
addr16
scas
ret
push
cmp
(bad)
push
mov
add
pop
sbb
js
popf
xor
clc
mov
jbe
retf
mov
xchg
push
xor
cmp
std
sub
shl
and
les
dec
cdq
es
loop
or
push
popf
std
adc
test
sbb
xchg
loop
or
jo
outs
rcr
xor
pusha
sti
mov
pop
and
ror
mov
(bad)
sti
sti
sbb
cmp
loop
pop
(bad)
mov
bound
push
aad
jno
mov
add
dec
jl
popa
mov
xchg
loopne
in
pop
pop
imul
lods
xor
call
dec
fcom
mov
and
or
es
cdq
push
mov
data16
sub
cwde
enter
int3
das
imul
cmp
push
sub
addr16
(bad)
sub
dec
in
(bad)
or
ins
dec
ds
repz
mov
xor
jmp
and
imul
add
mov
cmp
je
mov
xlat
xchg
xor
adc
out
mov
mov
dec
das
adc
jmp
lahf
shl
clc
and
xchg
xchg
pslld
add
fst
sub
shl
push
and
ins
(bad)
jl
pop
inc
jmp
mov
adc
arpl
es
mov
mov
(bad)
test
popa
push
mov
cs
dec
push
cmps
fisttp
ins
xchg
mov
xchg
addr16
mov
in
or
or
jne
lea
test
dec
inc
(bad)
aam
sti
adc
adc
adc
iret
jo
in
stc
add
xor
push
aad
xor
ret
in
loope
test
call
std
push
xchg
ja
fs
addr16
sbb
sbb
xor
mov
jg
dec
and
inc
or
dec
sbb
out
xchg
or
call
add
outs
imul
stos
lock
dec
jle
jle
sub
loop
cld
aad
add
cmp
out
js
mov
and
cld
mov
lods
add
xchg
xchg
daa
inc
popa
sar
and
ror
sub
fsubr
xor
lahf
sub
in
xor
daa
daa
or
stos
test
xchg
pop
push
mov
pop
(bad)
xlat
iret
icebp
mov
cmp
push
cmps
dec
push
push
lods
xchg
arpl
mov
mov
hlt
repz
pushf
and
enter
repnz
push
cmp
stc
pop
jl
call
cwde
jbe
pushf
cmp
sbb
jle
jp
rcl
movs
fnstsw
hlt
mov
js
mov
call
mov
push
mov
cmp
inc
repnz
mov
(bad)
cmp
and
sbb
nop
push
lods
loope
jmp
jno
stos
sub
mov
scas
add
ins
test
sbb
adc
mov
fld
es
adc
cmp
(bad)
out
retf
les
ss
jmp
pop
sahf
je
pop
std
add
nop
imul
sbb
fisub
push
sbb
push
inc
stos
loop
mov
enter
shl
aaa
sub
and
in
cmp
call
add
cmps
xor
mov
les
cmp
adc
pushf
jmp
loopne
pop
cli
cs
and
lods
inc
fwait
popa
pop
jno
mov
sahf
rcr
mov
les
mov
push
fidivr
mov
leave
push
fadd
stc
jle
scas
adc
dec
mov
pushf
inc
mov
pop
and
jle
icebp
push
clc
inc
aam
xor
retf
in
or
imul
movs
add
lahf
bnd
add
nop
fstp
nop
in
mov
inc
cmps
xchg
pop
dec
in
movs
sti
int3
lods
sub
adc
and
popa
cmp
outs
retf
mov
jecxz
dec
sub
bound
in
inc
leave
mov
adc
cli
dec
inc
retf
adc
pop
dec
xor
sbb
dec
mov
stos
pop
fild
inc
addr16
rol
mov
les
sahf
rol
dec
pop
cmps
and
mov
shr
jl
pushf
mov
bnd
(bad)
ds
stc
push
dec
ins
iret
cmps
push
xchg
mov
retf
test
jbe
aas
call
jbe
outs
imul
icebp
mov
scas
dec
cli
add
adc
add
aas
xchg
pop
push
bound
mov
cmp
cwde
scas
cmp
dec
cwde
rol
mov
sbb
repz
and
and
mov
ret
in
fistp
sbb
cwde
sbb
(bad)
mov
push
or
push
mov
mov
and
adc
pusha
inc
add
jmp
in
inc
repnz
add
xchg
or
shl
adc
pop
mov
imul
leave
pop
mov
int
or
aas
mov
mov
add
clc
fcom
hlt
xchg
xor
cmps
and
js
pop
mov
dec
out
sub
mov
aas
mov
dec
xchg
push
dec
cmp
cli
mov
sti
jp
retf
cmps
lds
xchg
inc
adc
adc
mov
into
cmc
cmp
add
jle
(bad)
nop
xchg
mov
ja
jns
lahf
mov
pop
ins
aaa
test
adc
pop
pop
cmps
das
adc
loopne
mov
call
mov
fs
push
in
movs
outs
pop
fnstcw
or
movs
pop
sbb
mov
cmp
pusha
mov
je
pop
xchg
mov
std
adc
sahf
pop
xchg
ds
int
xchg
outs
xchg
pop
push
jb
nop
mov
jbe
cmp
or
leave
pop
test
fbstp
ds
inc
xor
das
ret
pop
inc
sub
in
les
fistp
dec
mov
int
xor
test
mov
cld
rcl
and
ret
pop
and
jecxz
in
lods
test
outs
es
repnz
pop
enter
push
pop
xlat
pop
dec
lods
adc
pop
mov
int
push
xchg
mov
adc
xchg
scas
scas
mov
inc
pop
dec
enter
pop
movs
out
and
fs
or
movs
pop
pop
movs
and
dec
or
pop
sahf
xchg
jmp
push
fidivr
pop
mov
xlat
adc
dec
mov
mov
movs
fiadd
sahf
fdivr
fistp
in
(bad)
jg
jmp
xchg
and
xlat
pop
add
jmp
inc
stc
imul
iret
mov
pop
push
add
sub
jmp
out
jb
mov
retf
xor
inc
mov
mov
push
jmp
ds
inc
xor
addr16
sub
sti
adc
in
cmp
or
and
pusha
mov
out
jo
pop
sar
fs
jg
and
(bad)
push
arpl
xchg
and
dec
cdq
out
jle
add
dec
push
inc
mov
mul
in
stc
dec
cmp
jle
fcomi
retf
xor
jae
arpl
cmp
cmp
cmps
mul
ficom
imul
add
hlt
xlat
xlat
cmp
mov
fiadd
cmp
inc
shr
add
and
pop
pop
or
in
mov
out
xchg
out
mov
setb
fimul
push
aam
jne
mov
mov
mov
dec
cld
pop
inc
sub
jno
nop
xor
pop
mov
mov
cmp
test
out
add
pop
(bad)
outs
mov
push
add
call
pusha
inc
test
scas
cdq
loope
xchg
jb
sub
hlt
daa
mov
mov
sub
(bad)
stos
mov
mov
dec
push
jmp
loope
cmp
adc
(bad)
inc
(bad)
jo
std
inc
mov
mov
cmp
add
aas
hlt
add
jb
(bad)
arpl
das
mov
and
and
mov
(bad)
cmp
push
cs
adc
inc
stos
je
adc
dec
outs
push
jmp
cmp
cmp
jmp
cmp
push
xchg
clc
aad
pop
xchg
pop
sbb
rcl
pop
retf
pop
xor
cmp
cmp
popa
jl
cmc
sbb
and
sbb
xor
and
lea
jg
out
sub
outs
dec
or
mov
inc
xor
test
(bad)
leave
and
mov
add
pop
mov
(bad)
or
pop
push
xchg
fidiv
fucomip
jno
mov
out
add
ja
popf
aad
(bad)
retf
add
or
aaa
mov
imul
xchg
addps
xchg
sub
lock
aad
sbb
and
ror
icebp
xor
repz
push
gs
call
in
in
das
cmps
mov
in
mov
inc
sti
mov
into
repz
popa
pop
xchg
and
wrmsr
std
cmps
(bad)
adc
and
scas
(bad)
(bad)
cmp
(bad)
arpl
and
cmps
push
out
retf
jp
dec
mov
mov
out
or
gs
into
icebp
sub
into
in
fisub
jg
xchg
jmp
retf
jmp
scas
(bad)
out
and
cdq
mov
sti
sbb
add
out
sub
es
dec
or
jae
cmp
js
adc
out
movs
fnclex
es
bound
cmp
push
jmp
jle
aaa
jmp
ret
es
repnz
push
adc
mov
outs
mov
enter
cmp
push
push
push
lock
or
add
mov
repz
leave
dec
daa
stc
sahf
por
je
jns
aaa
xchg
cs
js
cmp
out
mov
pop
hlt
in
cli
inc
push
and
or
int
ror
mov
sub
pop
les
mov
cmp
xor
rcr
rcl
mov
int3
cvtps2pd
dec
sahf
cmps
jle
arpl
jmp
push
rcl
mov
scas
mov
mov
push
jno
xor
jmp
out
mov
and
retf
daa
arpl
int
jg
push
push
aas
dec
aas
push
cli
cs
sbb
jae
cdq
and
dec
jbe
xor
pop
outs
mov
mov
and
xchg
sub
stos
in
mov
test
xor
jns
dec
jb
std
sub
je
push
xchg
outs
test
jp
push
sbb
pushf
lods
push
lock
jecxz
hlt
xor
jne
jno
shr
fiadd
xchg
xor
out
cmp
test
sbb
test
rcr
mov
sub
sub
inc
enter
aas
push
and
rcl
xor
mov
dec
push
cmp
pop
mov
test
pop
or
aam
rol
inc
or
int3
hlt
and
push
inc
jmp
sbb
xchg
or
push
sahf
aaa
(bad)
xor
add
bound
mov
stos
push
mov
xchg
cmp
mov
jmp
and
mov
add
mov
mov
(bad)
test
aaa
(bad)
mov
push
inc
mov
pop
jnp
fs
or
or
xor
arpl
pop
hlt
mov
mov
xchg
dec
lods
jns
or
add
hlt
scas
push
sub
push
loop
xor
push
push
inc
imul
mov
fstp
iret
repz
inc
clc
mov
mov
cs
shr
mov
lahf
push
sub
int3
test
push
mov
and
and
ret
(bad)
mov
push
xor
sub
bound
add
sbb
sbb
fcmovu
jne
addr16
adc
xor
mov
scas
ror
(bad)
adc
xchg
sub
cmp
pop
and
cmps
push
int3
and
fistp
push
adc
dec
jb
(bad)
push
xchg
lds
mov
fld
cmps
add
inc
xor
in
jecxz
and
fiadd
imul
ret
mov
sbb
mov
sub
cld
mov
movs
cmp
push
sub
cld
cdq
push
aad
ret
mov
mov
rcl
fmul
cmc
loop
ret
mov
mov
out
xlat
mov
mov
and
jg
inc
dec
test
das
inc
sti
mov
iret
shr
push
repz
jbe
xlat
push
sub
inc
jp
xchg
(bad)
add
push
mov
sbb
and
adc
mov
jl
inc
std
push
retf
enter
fist
lock
shl
imul
pop
or
ret
mov
xchg
add
fwait
push
int3
mov
mov
sbb
fild
push
mov
or
js
mov
lods
mov
fcom
fistp
mov
ror
(bad)
cld
je
iret
call
nop
xchg
or
dec
push
mov
(bad)
push
test
push
jecxz
add
sbb
push
dec
adc
mov
xor
adc
jg
and
dec
mov
js
xchg
repnz
pop
lock
sbb
fwait
sahf
adc
mov
sahf
rcl
retf
imul
lsl
aas
add
or
in
dec
cmp
mov
mov
pop
fimul
cmp
add
or
xor
add
push
push
dec
xchg
jbe
inc
aas
out
mov
sub
sbb
push
push
and
jl
adc
std
leave
cmc
push
cdq
ins
adc
jae
mov
push
lods
and
inc
jg
shl
cmps
bound
stos
(bad)
xor
inc
lds
xchg
call
mov
imul
sti
outs
loope
and
fist
scas
add
sar
stos
push
call
mov
jge
push
dec
xchg
call
je
push
push
(bad)
(bad)
ins
je
push
adc
je
jmp
adc
loope
jecxz
cmp
mov
retf
and
scas
jo
lods
xchg
pop
mov
jg
call
jg
push
sbb
adc
push
test
sub
inc
scas
dec
rol
icebp
jge
sti
xchg
jb
push
stos
aaa
daa
mov
mov
cmp
sub
sahf
xchg
in
movs
cmp
xchg
(bad)
(bad)
out
push
ret
ret
xchg
mov
(bad)
sbb
push
mov
xchg
fld
test
pop
push
cmp
cmp
jo
mov
inc
hlt
bound
daa
data16
enter
cmp
or
sub
out
xchg
jb
bound
sub
push
mov
sbb
jne
sub
dec
repnz
sbb
arpl
jne
sti
fistp
inc
in
adc
and
jmp
jge
aam
inc
mov
cmp
sahf
and
int3
mov
sahf
dec
inc
bound
jno
mov
or
hlt
add
push
lods
xor
mov
adc
test
in
fs
aas
in
sub
inc
sbb
adc
mov
fdiv
add
add
jecxz
inc
push
out
pop
mov
jl
movs
fisttp
cmp
xor
loop
jb
lds
mov
and
test
push
xchg
push
sub
shr
retf
push
out
and
push
pop
outs
movs
jge
arpl
inc
fnstenv
adc
xchg
fnstenv
add
and
inc
stos
test
popf
push
xchg
and
or
cmp
pop
mov
cli
shl
lods
cmp
pop
fild
imul
(bad)
ja
je
sahf
sub
imul
mov
sub
nop
ret
cli
retf
aaa
fs
scas
mov
add
cli
lahf
dec
xchg
or
jmp
ror
adc
and
leave
int
xor
call
test
push
mov
mov
arpl
je
std
cmps
out
mov
cdq
mov
jecxz
mov
(bad)
outs
and
mov
inc
stos
and
pop
inc
mov
and
pop
stc
int
mov
retf
sahf
enter
mov
cmps
mov
or
cmps
jge
cmp
ins
out
cld
sub
imul
(bad)
into
mov
sbb
inc
xchg
dec
out
xchg
lock
jno
fnstsw
push
mov
jg
or
cmp
jo
xor
jns
cdq
jne
pop
sbb
pop
pop
mov
popf
adc
fdiv
push
int
lods
test
and
pop
adc
bound
mov
cld
cwde
aaa
cmp
mov
fcom
mov
test
adc
in
retf
das
mov
(bad)
rcl
repnz
cmc
cdq
sub
nop
push
adc
jne
rcr
test
xchg
iret
sar
mov
xchg
xchg
aas
cwde
jg
scas
mov
push
repnz
retf
dec
test
scas
pop
dec
jge
jg
movs
sub
pop
push
mov
mov
xor
dec
in
add
inc
test
clc
push
adc
mov
or
repnz
out
inc
or
cmp
pop
push
repnz
lods
mov
repz
jge
sbb
call
loop
inc
inc
cmp
xor
out
pop
test
es
enter
lds
lahf
lods
ja
cld
les
dec
mov
xchg
add
cli
shr
or
or
mov
lea
jmp
jnp
ins
daa
ins
xor
and
test
loopne
or
mov
inc
not
mov
call
push
arpl
test
movs
sbb
hlt
aaa
mov
int
sub
adc
jecxz
cmp
mov
add
cmp
jle
xor
mov
lahf
rcr
sub
pop
in
inc
cdq
call
mov
icebp
adc
push
add
in
ins
xchg
call
mov
aad
or
pop
or
outs
je
mov
pop
xchg
fsub
ja
inc
das
fistp
mov
push
jmp
or
and
sub
je
out
jno
mov
arpl
push
scas
repz
xor
dec
iret
sbb
push
fwait
gs
push
xchg
mov
jne
sub
out
ss
scas
mov
popf
lock
inc
shr
jge
test
and
test
fstp
push
inc
mov
mov
dec
inc
jecxz
stc
adc
aaa
dec
in
movzx
daa
in
cmp
xchg
adc
pop
or
sub
xor
ret
dec
rcr
repz
push
add
fst
jns
lock
enter
ja
inc
dec
and
cmps
pop
inc
push
inc
aad
add
gs
pop
(bad)
xor
lahf
cwde
icebp
inc
popf
sub
nop
faddp
jge
(bad)
sti
adc
cmp
lock
lock
cld
or
ins
jb
lea
mov
fist
sti
ret
xchg
shl
or
jo
shl
mov
dec
sti
popa
mov
rcr
(bad)
adc
leave
cmp
cmp
xchg
fdiv
mov
mov
push
xor
pop
jge
mov
sahf
sbb
lods
push
ss
mov
xchg
or
adc
or
xchg
ds
pushf
or
push
psubusb
jl
repz
add
inc
mov
iret
push
jae
or
lods
movs
inc
jo
sbb
sbb
shl
sub
es
pop
dec
or
pop
mov
push
call
aas
icebp
and
ja
pop
fisubr
inc
test
mov
mov
loop
jnp
clc
xor
push
pop
sub
vshufps
loop
push
daa
mov
or
jp
pushf
push
aas
loop
cmp
push
push
inc
mov
pop
add
test
in
gs
sbb
mov
and
test
arpl
out
xor
push
pop
xchg
push
in
ja
pop
jo
pop
test
fstp
inc
scas
jle
daa
add
adc
sbb
xor
lea
mov
fbstp
push
add
dec
dec
jns
inc
mov
jecxz
push
xor
jg
ja
inc
or
add
add
pop
pop
das
addr16
sub
retf
ret
jmp
mov
xor
imul
pop
sbb
in
mov
mov
mov
xor
cmps
imul
adc
js
stc
xchg
and
dec
scas
jmp
add
mov
fdivr
test
test
dec
sar
push
retf
fisttp
stc
cmps
add
cs
cld
imul
push
inc
inc
popa
cli
and
mov
jle
push
bndldx
repz
retfw
inc
push
sub
gs
push
jnp
push
xchg
push
dec
or
mov
sahf
xchg
cld
inc
jmp
or
push
pushf
test
mov
scas
scas
imul
mov
loopne
out
retf
mov
mov
stos
mov
fcomp
popf
imul
mov
dec
push
(bad)
and
(bad)
and
call
aam
arpl
sbb
in
shr
mov
and
push
scas
lock
repnz
xor
in
daa
arpl
hlt
(bad)
mov
out
mov
int
mov
push
test
mov
ins
outs
xor
inc
pop
cmc
xchg
sub
mov
xchg
sbb
cmp
sbb
fst
aaa
and
mov
mul
pop
mov
ds
mov
add
ins
cmp
out
es
sbb
int
popf
mov
add
pusha
popa
xor
scas
leave
add
lea
out
or
shr
jnp
test
into
or
dec
pop
add
push
repz
jo
call
ins
xor
mov
fisttp
outs
mov
mov
test
arpl
mov
mov
mov
pop
pop
loope
test
jae
dec
ror
in
(bad)
push
pop
dec
push
push
leave
xchg
cmps
and
loopne
retf
stos
xchg
mov
ins
mov
popf
scas
call
lods
fisttp
pop
mov
fist
in
inc
push
cs
cwde
dec
sub
dec
std
mov
pop
(bad)
sbb
pop
ss
inc
pop
and
pushf
xor
jle
mov
cmps
gs
xor
sub
and
lock
retf
mov
push
mov
ins
fmul
arpl
mov
mov
leave
cmp
add
jge
or
rol
cmp
mov
ja
imul
jp
stc
cld
mov
arpl
sbb
lea
test
pop
push
test
dec
pop
and
outs
pop
sahf
out
cmps
sbb
inc
pop
xchg
out
adc
dec
fwait
push
add
push
jbe
cmc
dec
lea
fcmovnbe
xlat
ret
adc
cmp
xchg
in
retf
or
popa
test
outs
imul
jbe
jne
out
mov
or
aad
hlt
add
cmp
jmp
push
sbb
(bad)
out
addr16
sub
sub
jns
lds
inc
mov
mov
jl
xchg
scas
rol
cmc
mov
add
sub
sbb
and
mov
sahf
test
lea
mov
aam
sbb
cmp
cwde
inc
lods
int
call
sub
aaa
or
mov
jbe
adc
loopne
and
sub
xchg
iret
loopne
nop
iret
inc
imul
out
or
mov
xor
pop
sti
mov
push
adc
(bad)
xchg
jg
nop
and
jns
add
cs
sbb
push
xor
out
fst
psubusw
hlt
adc
mov
fadd
mov
add
clc
adc
bound
mov
cmps
mov
xchg
cmps
retf
pop
jle
inc
push
mov
leave
or
out
(bad)
adc
inc
cmp
cmps
cdq
xchg
lock
mov
leave
popf
jns
dec
inc
sub
xchg
lods
mov
es
jb
or
movs
shr
retf
inc
mov
jp
sti
in
xor
div
xor
hlt
push
icebp
xchg
dec
cmp
pop
ror
imul
add
pop
repnz
ss
out
jo
jnp
mov
sti
dec
pusha
outs
outs
adc
fnstsw
add
and
stos
push
ds
lock
mov
inc
dec
and
scas
push
adc
mov
shr
dec
cld
fs
sbb
jbe
aam
push
and
jmp
jmp
xchg
inc
cmps
out
cmp
jo
stos
mov
mov
jp
sub
mov
inc
fsub
cmps
adc
xor
pusha
jecxz
inc
push
dec
mov
lahf
loopne
bound
sub
sbb
sbb
mov
push
push
push
dec
pop
jne
pop
inc
aad
test
test
clc
test
hlt
cmps
fcomip
loop
xchg
mov
jno
arpl
add
jne
and
in
mov
push
push
icebp
push
leave
jbe
into
mov
sbb
frstor
(bad)
gs
retf
call
cmp
and
hlt
mov
inc
shl
out
out
loop
or
mov
mov
jns
mov
mov
dec
xchg
push
and
test
sub
push
xchg
mov
cs
sub
movs
or
retf
inc
cwde
clc
(bad)
push
xchg
jmp
movs
icebp
xchg
ror
loop
fcmovne
pop
aad
pop
sbb
ficomp
ret
(bad)
std
pop
adc
cmp
enter
lock
call
imul
pop
scas
popa
fld
call
ret
inc
bound
cli
xchg
sbb
into
outs
or
sbb
push
repz
push
xchg
sbb
jl
xchg
sbb
bound
aaa
scas
es
nop
sbb
ins
inc
mov
test
xchg
jae
pop
mov
mov
jmp
inc
or
push
push
mov
dec
mul
inc
xlat
aam
movs
addr16
adc
push
out
(bad)
fistp
push
imul
mov
sbb
inc
stos
mov
push
sbb
fcmovb
xor
cwde
icebp
(bad)
ficomp
mov
into
pop
xchg
in
adc
loopne
clc
push
ds
mov
and
aaa
pop
xchg
and
movs
test
or
adc
test
or
(bad)
mov
and
outs
in
das
jp
aam
pop
ja
mov
xchg
inc
sbb
pop
loop
ror
sub
sub
xor
dec
pop
jl
loop
(bad)
jne
int
inc
enter
push
and
push
xor
retf
inc
(bad)
sub
iret
lds
pop
pop
jnp
cmc
lods
sbb
ret
push
push
cs
inc
int3
aaa
dec
loope
push
rcr
mov
cmc
mov
bound
xchg
push
loopne
bound
cmp
div
pop
outs
jne
dec
popf
cmp
rcr
jle
call
sbb
add
outs
or
retf
cwde
add
and
mov
pop
push
retf
xor
cld
jg
sbb
idiv
mov
cli
mov
ror
test
ret
inc
aaa
into
movs
test
in
int
clc
dec
pop
rol
dec
mov
add
inc
aam
test
cwde
fidiv
cmps
cmps
xor
mov
cmc
mov
inc
cmps
loop
inc
(bad)
popa
jp
xlat
popf
xchg
in
sahf
outs
xor
adc
jmp
pushf
repnz
shl
std
add
repz
mov
and
fidiv
rol
push
dec
or
pop
or
push
xor
pop
pop
pop
repz
dec
movs
inc
sub
add
push
mov
imul
add
pop
xchg
jg
inc
(bad)
fcom
or
mov
pop
iret
faddp
aad
adc
adc
aad
cli
cmp
and
loop
xchg
jne
cdq
mov
mov
retf
frstor
popa
in
pop
mov
pop
xor
iret
fwait
jmp
pop
mov
hlt
gs
xchg
leave
mov
xchg
ss
aas
int
int
out
in
pop
push
cmp
sub
adc
cli
pop
xchg
bnd
mov
je
push
cmp
jle
pop
ret
lods
dec
into
xchg
or
ins
mov
mov
jmp
sbb
xchg
pop
rcl
ins
cmps
push
mov
or
loopne
fcmovbe
xchg
out
xor
sub
mov
repz
js
mov
xchg
in
retf
dec
push
or
push
sub
clc
outs
shr
fcomp
fnstcw
lahf
fbstp
mov
mov
loopne
xor
mov
sbb
mov
mov
retf
sub
fs
out
not
aad
xor
add
dec
jle
sbb
xor
in
add
push
mov
xor
arpl
dec
int
mov
xchg
lods
loopne
addr16
push
ins
sahf
enter
xchg
xchg
fld
inc
scas
mov
daa
dec
mov
loop
int3
(bad)
jp
movs
jae
les
(bad)
jge
xchg
pop
mov
repz
bound
add
dec
ss
or
sahf
test
pop
mov
pusha
mov
add
stos
xchg
jmp
mov
retf
sub
inc
mov
mov
sub
mov
ficom
jmp
jecxz
lock
push
fild
in
fdivr
movs
or
mov
mov
cmp
rcl
aas
sub
inc
lods
sbb
addr16
test
push
test
jno
sub
and
jno
mov
mov
test
jno
fadd
fisttp
jnp
ret
mov
stos
sbb
xor
sbb
inc
and
out
lock
ins
fwait
jp
pop
mov
xchg
mov
push
mov
repnz
pop
xchg
fs
retf
and
dec
push
and
stos
sub
movs
push
inc
sub
ds
retf
xchg
mov
(bad)
mov
mov
outs
and
hlt
call
sub
push
sub
fidivr
and
dec
adc
add
dec
retf
pop
mov
outs
dec
sub
jl
je
mov
shr
rol
call
mov
(bad)
mov
ss
retf
jmp
mov
xor
sub
mov
out
(bad)
int
ins
sti
jno
and
cmc
or
mov
adc
test
hlt
scas
pop
push
loop
cmp
test
cdq
pop
mov
stos
push
adc
xor
inc
inc
repz
push
pop
sbb
and
jge
lods
or
mov
and
pop
jb
dec
pusha
push
mov
dec
mov
jmp
cwde
mov
push
loopne
mov
jne
or
add
mov
pop
cmp
data16
jmp
push
jo
sub
mov
out
imul
ins
adc
hlt
add
repz
or
lahf
call
inc
ficomp
and
jecxz
dec
mov
xchg
push
mov
cwde
out
add
push
loope
in
outs
ret
pop
mov
in
les
rcl
stos
jo
and
daa
mov
pop
std
add
mov
retf
pop
das
mov
movs
push
test
cmp
shl
cli
mov
pop
dec
xchg
nop
xchg
xchg
sub
mov
mov
push
and
dec
repz
shr
call
xchg
xor
jns
nop
shl
pop
xor
out
test
xor
xor
jbe
mov
imul
inc
mov
int3
lods
aaa
adc
lahf
lds
dec
cmps
pop
or
jp
and
jle
stos
je
retf
jbe
sub
jne
jmp
repnz
sti
add
ror
imul
iret
mov
shl
adc
and
adc
pop
or
pop
iret
pop
mov
idiv
lock
jne
and
shl
ret
cmp
mov
(bad)
dec
mov
test
jl
and
push
(bad)
or
sub
movs
movs
test
cld
mov
fist
pushf
test
gs
in
cdq
ins
add
test
dec
scas
push
rcr
es
jle
add
inc
test
sar
mov
dec
repnz
push
or
push
jae
sub
dec
pop
mov
in
mov
dec
xor
push
cmp
aaa
dec
jmp
test
loopne
jp
fucomp
hlt
pop
xchg
xor
xchg
jmp
aaa
xchg
push
xor
jl
sub
in
xchg
mov
dec
xor
pop
push
iret
in
ror
cmc
jg
inc
loopne
cmps
scas
daa
inc
call
retf
in
mov
stos
jmp
add
jmp
mov
dec
jmp
sbb
add
jp
ret
std
jecxz
adc
(bad)
loope
sub
cmp
xchg
in
cmp
sbb
pop
jbe
xchg
push
jns
xchg
cmp
or
ja
es
fimul
add
call
loope
cmps
inc
stc
jo
xchg
or
fs
in
jae
mov
adc
mov
cmc
push
xor
push
sahf
dec
or
ret
add
xlat
jne
js
sbb
dec
int
sbb
aaa
jl
mov
and
cmps
inc
(bad)
dec
lock
push
inc
cmp
mov
shl
sub
dec
push
inc
xlat
sub
push
pushf
pop
and
imul
aas
std
call
stos
jecxz
in
repz
or
xchg
pop
ins
sub
dec
out
and
cdq
xchg
ss
add
test
push
jne
leave
outs
(bad)
xchg
xor
mov
sbb
aas
inc
pop
jbe
add
mov
pop
lods
stos
or
sub
xchg
stos
add
popf
(bad)
scas
cmovs
add
or
xchg
jge
or
add
fisub
pop
inc
cmp
ins
movs
pop
xchg
cwde
sbb
mov
fadd
or
(bad)
je
into
loop
fsub
ror
sub
dec
mov
ret
cmp
pop
sub
test
cmp
jbe
mov
das
popf
push
cmp
adc
xchg
xor
inc
pop
rcl
bound
adc
gs
shr
rol
cmp
jmp
jg
jnp
cmps
fsubr
inc
push
std
repnz
shl
push
xor
jb
popf
mov
iret
(bad)
jle
xchg
fmul
icebp
push
sbb
xchg
mov
push
sar
pop
scas
js
sar
rep
add
lods
ja
mov
enter
daa
lods
jecxz
lock
pop
call
add
adc
adc
test
jle
add
xor
rol
jge
mov
push
jb
js
adc
adc
dec
lds
cmp
pop
sbb
mov
mov
inc
jns
test
sub
mov
adc
fucomi
test
cmp
fist
push
dec
jns
sbb
into
mov
jae
sub
hlt
(bad)
in
and
push
cmp
jbe
popf
mov
mov
jmp
cli
mov
dec
sub
cmp
shl
pop
xor
scas
xchg
cmp
in
and
shr
ins
push
inc
pop
mov
cdq
fucomip
std
and
xchg
jmp
pusha
jge
add
fstp
sub
pop
mov
pushf
jge
jb
mov
scas
inc
rol
xchg
xor
xlat
xchg
pop
push
push
push
ficomp
inc
aaa
xor
mov
popf
ret
jmp
movs
cmps
es
sub
xchg
leave
adc
fbstp
mov
inc
in
aam
xor
adc
mov
mov
shr
sbb
popf
ret
inc
out
dec
arpl
adc
mov
sub
fst
xor
or
push
sub
lahf
pop
sbb
mov
sub
jmp
ret
fs
and
nop
das
cmp
popf
xor
pop
leave
jg
scas
jno
push
mov
mov
cmps
inc
xchg
xchg
xchg
xchg
gs
pop
xchg
(bad)
popf
repnz
loope
enter
psubb
or
push
call
sbb
jns
sti
push
xlat
mov
xchg
push
stc
std
xor
inc
les
adc
mov
ja
mov
sub
push
in
add
out
cmp
cmps
xor
das
xlat
sbb
xor
mov
dec
mov
mov
fld
dec
push
xor
inc
loopne
jae
add
fisubr
sub
enter
jnp
out
or
(bad)
mov
xchg
inc
push
repz
mov
adc
xor
mov
push
mov
xor
mov
mov
push
or
and
cmp
or
retf
fidivr
das
push
push
rcl
scas
inc
fcomp
or
xor
sbb
iret
fnstsw
jb
loope
hlt
mov
push
movs
cmc
push
pop
or
fisttp
adc
pushf
xchg
repz
jge
add
pop
mov
shl
pop
jo
arpl
inc
inc
movs
adc
and
movs
das
mov
les
inc
es
mov
add
sbb
mov
aam
fs
jbe
mov
leave
jge
xchg
pop
sahf
fs
mov
inc
je
cmp
xor
loope
mov
loop
cmp
call
xchg
or
call
or
ins
xchg
jmp
sub
dec
je
addr16
stos
push
mov
dec
in
sub
add
and
stos
shl
inc
cwde
pop
movs
cmps
lahf
or
mov
cld
or
add
jns
sub
imul
int
jmp
cmp
stos
stc
sbb
out
xchg
data16
inc
(bad)
lock
mov
xchg
mov
fwait
rcl
shl
shl
add
mov
mov
cmps
xor
lds
push
rcl
aas
inc
mov
push
adc
add
jge
out
(bad)
jg
add
adc
jge
(bad)
xor
js
push
push
das
adc
ror
leave
mov
mov
shl
fnsave
lahf
iret
pop
cmp
mov
rcr
dec
jge
and
repnz
sbb
ds
mov
xor
cmps
or
dec
pusha
(bad)
call
dec
sbb
(bad)
aad
ror
dec
mov
add
xor
jae
mov
jp
dec
cmp
mov
ins
mov
or
mov
pop
pop
(bad)
not
pop
jg
mov
jne
dec
ror
xor
sar
inc
push
xchg
sbb
adc
mov
xor
xor
fild
stos
xchg
stos
xor
dec
ins
pop
test
gs
stos
std
xor
jmp
pop
adc
gs
push
gs
cmp
cmps
push
xor
mov
push
mov
in
and
add
in
in
xchg
cmp
aad
ds
mov
cwde
push
int
mov
dec
add
in
push
sti
xchg
jns
es
xchg
fmul
popa
mov
popa
cmp
add
mov
pop
rcl
mov
sub
add
in
in
leave
adc
mov
xor
stos
dec
or
test
retf
add
and
test
outs
js
cli
leave
adc
jge
repnz
and
add
in
cmps
loop
jb
jnp
or
mov
sahf
add
ret
push
mov
dec
inc
cmp
cs
ins
sbb
cmc
jns
movs
dec
ds
lods
into
cmp
cdq
fst
adc
pop
gs
sbb
jbe
sub
push
popf
or
mov
cmp
call
in
adc
mov
fs
js
ins
sub
jne
(bad)
(bad)
(bad)
xchg
(bad)
mov
cs
popa
jo
inc
lock
aam
test
mov
mov
push
pop
fst
inc
call
loopne
fs
cmc
enter
xchg
and
iret
mov
mov
pushf
cmp
xor
inc
in
and
movs
inc
push
(bad)
std
xchg
lods
cmp
xor
or
jmp
mov
xor
imul
scas
hlt
ror
loope
stc
adc
push
je
rcl
aaa
xchg
es
mov
cmps
ja
movs
add
(bad)
push
ficom
xor
mov
push
repz
push
icebp
outs
and
cld
and
lds
mov
dec
mov
cmc
fwait
inc
push
xor
aaa
int3
mov
xchg
sar
xchg
push
sar
js
pushf
or
out
or
sahf
dec
int
xor
add
daa
test
adc
xchg
clc
mov
loop
fcmovnb
iret
mov
js
cs
inc
int
cmp
mov
mov
fidivr
mov
jb
shl
mov
clc
xor
push
and
iret
dec
bound
jge
cmp
loop
add
mul
jo
out
stos
add
cmp
mov
push
imul
xchg
into
stos
fadd
jp
xchg
jae
jl
int
sub
aad
hlt
das
and
stos
(bad)
ss
dec
xlat
scas
push
ins
mov
jg
adc
xchg
sub
jae
xchg
sti
jp
xchg
push
stos
fnstenv
or
pusha
js
push
or
mov
sahf
mov
mov
mov
in
push
in
repz
xor
fst
adc
mov
stos
sbb
clc
jl
popf
fild
enter
stos
mov
push
sub
xor
xchg
rcl
in
pop
jecxz
inc
adc
or
cmp
ss
shl
outs
mov
fisubr
leave
adc
jbe
and
scas
mov
or
cli
pop
mov
movs
xchg
rcl
sub
rcr
mov
(bad)
mov
fisttp
mov
scas
add
popf
ret
arpl
dec
mov
mov
xor
js
lds
inc
push
gs
push
adc
addr16
sbb
dec
fcomp
pop
adc
dec
inc
lahf
xor
mul
inc
dec
sbb
or
out
pop
(bad)
sar
in
push
sub
push
imul
sbb
ins
iret
add
jne
lods
(bad)
sbb
ja
push
lahf
stos
pop
stos
adc
jmp
push
jmp
gs
jbe
mov
jmp
xor
popf
cwd
push
cmp
dec
jecxz
xchg
push
das
or
or
stos
cmp
pop
and
pop
add
pop
add
mov
daa
mov
fadd
push
dec
push
and
add
xchg
sub
mov
jp
out
fwait
dec
push
push
xlat
sbb
mov
push
sub
push
or
mov
mov
adc
cmps
out
rcr
pusha
test
out
(bad)
aam
xchg
pop
rcl
adc
sahf
movs
push
pusha
out
inc
sub
push
in
js
inc
inc
push
jl
pop
jecxz
test
popf
xor
outs
sub
mov
mov
jle
pop
in
mov
push
jo
sti
sbb
sub
(bad)
aam
out
push
push
ja
(bad)
jnp
xor
mov
push
mov
mov
xor
cmc
sbb
icebp
dec
or
(bad)
mov
mov
std
and
adc
add
scas
or
cli
das
out
add
or
hlt
dec
add
sahf
int
loop
xor
fimul
addr16
push
shr
adc
fild
repz
add
aas
inc
(bad)
out
pushf
lea
pushf
cmp
xchg
jg
dec
dec
(bad)
dec
adc
jl
mov
bound
int3
jl
fcmovnb
movs
mov
or
ret
test
popf
mov
call
sbb
call
pop
shl
mov
ins
aam
mov
mov
mov
and
sbb
test
or
add
lahf
xchg
xchg
(bad)
pop
lds
adc
inc
jecxz
xor
xlat
aam
rcr
pop
outs
add
leave
enter
cs
xchg
mov
repz
dec
test
jns
leave
adc
xchg
and
cmps
(bad)
push
sbb
rcr
dec
cli
mov
and
inc
add
dec
mov
fild
cmps
cmp
mov
leave
jle
adc
(bad)
cld
pop
loop
ret
jae
imul
out
mov
push
add
push
popa
dec
xor
cmp
sti
int
xor
xchg
stos
lds
popa
into
cmp
aaa
ss
xor
or
mov
push
imul
(bad)
fsubp
xchg
mov
stos
aas
mov
xchg
aam
pop
jmp
inc
inc
push
dec
(bad)
les
popf
adc
mov
in
into
fisubr
fwait
pop
mov
dec
call
cmp
lods
xlat
shl
test
scas
xchg
sahf
imul
clc
pop
out
iret
push
cs
ins
es
and
mov
ins
sub
pop
add
fld
push
(bad)
cmc
aad
prefetch
or
jo
mov
aas
mov
xchg
adc
jb
mov
repnz
(bad)
ror
dec
(bad)
aad
imul
mov
xor
mov
pop
shr
add
pop
mov
sar
push
movs
enter
div
pop
(bad)
dec
enter
and
repz
scas
pushf
jae
lock
in
mov
pop
cmps
fist
push
sbb
add
outs
fs
movhps
fidivr
mov
test
jle
clc
fcmovnbe
sub
mov
pop
loope
(bad)
(bad)
sub
mov
xor
jg
add
push
sub
aad
push
cmc
mov
adc
inc
scas
sbb
pop
scas
stos
jl
in
mov
pop
mov
adc
push
pop
sub
sub
pop
ins
push
aam
cmp
in
xor
mov
icebp
mov
lock
jle
dec
xor
mov
scas
(bad)
leave
xchg
and
movs
test
push
jne
fidiv
out
fidiv
(bad)
fimul
aam
jae
pop
in
add
sti
inc
and
or
push
lods
sub
mov
and
pop
push
stos
add
data16
pop
mov
call
mov
lds
not
xchg
mov
pop
loopne
and
in
les
cwde
mov
out
rcl
xchg
out
(bad)
or
aam
cli
ret
sbb
shl
bound
fcmovbe
mov
dec
jbe
sbb
and
mov
adc
bound
sbb
test
push
jg
jne
fwait
into
push
cmp
jns
or
lea
add
cmp
push
dec
xor
and
pushf
inc
xchg
aad
adc
sbb
mov
repz
mov
xor
das
es
jno
adc
push
lahf
aaa
test
sub
mov
adc
stos
lds
and
mov
cmp
add
arpl
push
add
jle
(bad)
fwait
add
inc
mov
fcomp
lods
jb
push
out
data16
sbb
call
repnz
inc
sub
int3
push
loop
daa
jmp
mov
xchg
loopne
mov
loope
or
adc
dec
out
mov
push
ins
sbb
mov
adc
add
retf
push
hlt
mov
in
adc
jbe
and
popa
mov
test
loop
mov
ins
inc
pushf
cmps
jo
push
dec
xchg
cmp
(bad)
(bad)
sti
mov
(bad)
ret
or
adc
jg
bound
enter
push
data16
xor
in
test
pushf
lea
jmp
lods
(bad)
fstp
sub
inc
jnp
xor
jnp
mov
push
pop
cdq
jno
test
data16
xchg
add
jg
clc
rcr
pop
shl
imul
cmp
in
mov
mov
jmp
sahf
push
mov
push
add
adc
xchg
mov
cdq
cmp
and
fwait
or
xchg
frstor
inc
in
xor
outs
in
rol
xor
leave
add
mov
mov
data16
xchg
sbb
mov
pop
inc
fs
xchg
or
mov
stos
push
popa
(bad)
in
mov
or
or
movs
sub
mov
iret
push
sbb
sbb
adc
hlt
sahf
scas
pop
call
scas
scas
int3
xor
test
out
test
cmps
add
or
je
and
loopne
out
and
lock
scas
les
movs
push
lea
int
sbb
ja
xor
xor
pop
fisub
xor
push
test
add
div
popa
adc
cld
mov
push
push
pop
pop
inc
scas
shr
int3
pop
pop
aad
outs
push
jge
bound
xchg
adc
inc
push
test
adc
jb
push
test
mov
int
jmp
xor
jo
adc
pop
pop
add
add
test
aad
sbb
xor
mov
pop
out
not
scas
adc
inc
mov
int
fimul
jo
or
inc
imul
mov
neg
mov
sub
adc
movs
sti
jmp
or
repz
pop
mov
jno
jns
push
pop
xchg
xchg
cmp
mov
cli
xor
lock
cs
jecxz
daa
fsubrp
mov
adc
adc
(bad)
cmp
mov
jmp
scas
push
mov
(bad)
sub
loope
mov
(bad)
test
int
sub
pop
out
out
mov
xchg
lds
pop
jno
jge
jb
xchg
push
dec
mov
pop
xchg
adc
inc
add
or
repnz
rcl
mov
pop
es
dec
dec
in
cdq
add
sub
xor
add
xchg
das
retf
mov
(bad)
retf
fwait
repnz
rcl
push
mov
es
mov
outs
test
add
lods
or
inc
cmp
and
adc
pop
sbb
sbb
loop
dec
pop
sub
cmp
add
mov
push
data16
push
nop
shl
jae
mov
gs
xchg
sub
pop
movs
jb
xor
add
mov
imul
shl
jmp
xchg
dec
sar
popf
and
pop
add
pop
mov
test
and
sub
popf
sub
mov
pop
jo
xchg
xor
sbb
cmp
add
jo
sub
mov
mov
jp
daa
cmps
dec
push
bound
movs
adc
imul
jne
cld
ja
adc
mov
mov
std
es
pop
pop
sbb
mov
cld
lods
addr16
mov
out
inc
inc
popf
inc
cwde
rcl
push
neg
es
adc
test
in
xor
mov
inc
lea
mov
repz
jge
mov
sar
ror
sub
pop
retf
popa
(bad)
out
fisubr
sub
arpl
jle
test
adc
outs
cmp
or
inc
test
jl
jne
in
data16
icebp
and
je
jne
fmul
es
fdivr
inc
mov
cmp
rol
in
jl
or
xchg
or
xor
or
push
popf
adc
jns
jecxz
sbb
xchg
mov
stos
pop
nop
hlt
cmp
jb
sbb
add
std
mov
sbb
xor
mov
ja
aas
repz
sbb
sub
xchg
inc
xor
scas
adc
popa
lahf
mov
repz
adc
(bad)
in
mov
adc
pop
pop
or
out
dec
fbld
shr
adc
cwde
sbb
aad
in
out
das
sub
arpl
lods
jbe
outs
xor
push
popf
js
sub
fwait
les
mov
shl
push
stos
lods
jbe
cmp
shr
push
dec
fucomp
jae
bound
and
mov
shl
or
mov
push
neg
pop
pop
mov
adc
cld
nop
ficom
and
sbb
test
hlt
pop
hlt
lods
scas
xor
aaa
test
call
mov
and
xchg
mov
jmp
in
(bad)
adc
into
adc
push
test
mov
movs
mov
pop
lods
xchg
mov
push
popa
mov
xor
into
(bad)
mov
rol
test
(bad)
and
cdq
ss
ret
imul
call
(bad)
movs
in
aas
adc
mov
mov
lahf
pop
or
fld
loope
out
in
push
push
repz
cwde
inc
stos
add
test
cmp
dec
pop
xor
xor
jmp
mov
push
sbb
dec
cmps
sub
push
lds
cld
push
jle
movs
sub
stc
ja
and
xor
sub
mov
sub
int
aas
rol
pop
es
jb
xchg
shr
xlat
adc
shl
push
lds
lea
pop
mov
jae
pushf
fldcw
sub
xlat
call
es
pushf
mov
cmp
inc
pop
or
sbb
and
inc
jno
sub
sti
ficomp
ss
adc
loopne
sbb
fsubr
pop
add
mov
ja
mov
fucom
dec
jnp
xchg
xor
das
cs
mov
gs
dec
mov
adc
inc
sub
(bad)
retf
ret
mov
adc
leave
std
xor
lds
or
push
pop
xor
int
test
pop
mov
mov
bound
mov
iret
cmp
jl
inc
(bad)
xchg
shr
lds
aas
cmp
mov
outs
add
adc
mov
sar
cwde
imul
(bad)
sbb
fstp
daa
mov
rcr
cli
and
in
jg
ins
xchg
iret
mov
lahf
or
in
push
scas
ror
imul
ret
sar
in
push
ficomp
scas
cmp
jecxz
xchg
mov
fadd
push
xchg
xchg
mov
cmps
inc
(bad)
cli
add
mov
jmp
pusha
and
out
enter
mov
sbb
sbb
adc
scas
sbb
test
adc
lock
test
cs
clc
and
xchg
test
scas
aas
clc
adc
add
mov
xchg
hlt
or
adc
fidiv
mov
aaa
cdq
lea
xor
addr16
mov
jmp
(bad)
pusha
dec
test
sbb
popa
push
fld
mov
gs
sbb
and
loopne
hlt
lahf
sub
mov
neg
cmps
mov
jo
imul
mov
xchg
jle
es
fcomp
jb
movs
cmps
xchg
cmp
ins
pop
pusha
rcr
test
in
add
test
xor
movs
dec
movs
lahf
sub
push
shr
fstp
push
js
mov
(bad)
cmps
cmp
xor
adc
into
jno
xchg
(bad)
sbb
dec
or
int3
rol
fimul
stos
ja
jae
ret
mov
jmp
jns
fld
cmp
or
(bad)
shl
cld
cmp
aad
iret
pop
test
mov
fstp
ss
scas
call
lea
addr16
(bad)
lea
mov
cli
cmc
inc
popf
and
gs
std
es
jno
repz
adc
push
daa
or
dec
or
jl
jno
rcl
movs
outs
in
movs
push
jg
mov
mov
adc
dec
dec
jle
sbb
mov
xchg
dec
jb
xchg
mov
jmp
shl
jl
out
sbb
enter
mov
fadd
mov
jmp
lods
push
xor
mov
mov
mov
dec
dec
lods
cmp
xor
dec
int3
jmp
aaa
sahf
pop
or
mov
retf
push
es
mov
mov
outs
jae
adc
(bad)
nop
xchg
jecxz
dec
scas
fldenv
je
sub
movs
jmp
add
adc
pop
dec
sbb
test
imul
jnp
(bad)
sbb
pop
mov
cmps
lahf
sti
cmc
xchg
or
add
mov
inc
pop
lahf
inc
mov
icebp
dec
rcl
xchg
mov
adc
or
jns
repz
aas
outs
inc
sub
xchg
into
inc
cli
movs
pop
pop
out
dec
pop
ud2
sub
mov
push
retf
rcl
jbe
adc
int
and
pusha
movs
pop
cmp
inc
clc
sahf
sbb
xchg
call
push
in
add
push
push
mov
lea
(bad)
rcl
cld
imul
test
add
imul
stos
(bad)
out
outs
xor
ret
je
adc
mov
popa
cmp
pop
dec
dec
iret
jle
shl
aas
hlt
stc
cmp
adc
dec
scas
mov
add
loopne
xor
sub
add
test
rcl
ins
sub
mov
jns
and
aaa
ins
mov
adc
icebp
movs
sti
test
ret
out
fisttp
dec
clc
push
or
repnz
jno
hlt
div
jmp
popa
adc
(bad)
mov
scas
adc
cli
mov
sahf
cmp
rol
or
mov
xchg
cmc
aad
mov
inc
pop
bound
push
sub
mov
rcr
mov
std
add
call
mov
sub
inc
iret
(bad)
enter
out
das
xor
cwde
push
imul
popw
or
mov
xlat
push
inc
sahf
lods
(bad)
xor
aaa
mov
push
arpl
mov
fdiv
fisubr
in
dec
xchg
cmp
jae
popf
scas
push
cs
pop
(bad)
xchg
push
fist
pop
popf
or
sub
or
cmp
add
call
inc
push
(bad)
pop
mov
dec
jne
adc
add
jns
ins
xchg
pop
fistp
(bad)
repz
bound
push
sbb
fld
and
iret
sub
inc
xchg
push
push
dec
ja
ror
imul
dec
and
inc
add
or
nop
push
cs
aam
popa
cmps
sar
mov
mov
sete
or
mov
loopne
test
sub
loope
int3
add
xchg
mov
adc
sbb
sub
addr16
pop
repnz
pop
je
adc
(bad)
cld
push
out
mov
ins
pop
loopne
fcmovnb
nop
jg
cmp
dec
dec
push
retf
push
and
gs
(bad)
(bad)
mov
jg
or
push
add
cmp
in
cli
push
sbb
push
cmps
lds
mov
(bad)
pop
out
sub
or
add
jns
add
imul
cwde
sub
xchg
jp
cmp
jmp
dec
imul
fcomi
data16
inc
call
or
iret
and
adc
and
shl
call
test
mov
(bad)
repz
xchg
inc
mov
(bad)
cwde
inc
nop
ins
cli
push
sbb
rol
pop
out
dec
xor
push
fnstsw
lods
mov
cmp
arpl
jo
lods
add
inc
mov
xor
pop
adc
aad
inc
fcmove
jo
jne
out
sbb
mov
retf
mov
cmc
xchg
mov
in
ja
or
bound
(bad)
xchg
imul
iret
mov
sbb
xor
xchg
shl
popa
inc
pop
mov
xchg
jge
mov
popa
movs
fnsave
xor
enter
push
les
inc
inc
fcom
sahf
push
sub
aam
xor
mov
stos
popa
and
ins
loopne
fwait
mov
dec
push
mov
mov
inc
mov
hlt
js
dec
sub
jns
and
mov
sbb
or
inc
xor
sub
movs
imul
dec
add
pop
lds
cdq
out
nop
sbb
dec
rol
cli
mov
mov
imul
and
mov
out
or
dec
sar
xor
(bad)
loop
push
mov
into
push
ss
mov
mov
int3
fmul
xor
dec
lods
push
call
push
inc
mov
loopne
je
mov
gs
add
cld
mov
push
lock
movs
cmp
jbe
dec
dec
adc
cmp
jns
in
mov
adc
xor
mov
sbb
jnp
cmp
pop
inc
pop
test
fstp
adc
popa
repnz
(bad)
push
int
cmp
jne
pop
addr16
add
jb
jmp
arpl
mov
dec
push
fpatan
lahf
xor
out
imul
(bad)
mov
dec
dec
cmc
pop
mov
imul
sbb
push
sub
pop
test
hlt
stos
lahf
inc
rol
or
fdivr
retf
adc
sub
and
add
scas
or
push
daa
adc
dec
sub
jne
ror
test
and
outs
rcr
dec
cmp
or
or
jp
cmp
inc
jbe
and
push
icebp
not
outs
fld
mov
mov
jae
aas
xor
fsub
dec
mov
sbb
imul
push
xor
jge
cmp
arpl
mov
nop
in
mov
mov
adc
out
(bad)
fnstcw
adc
inc
jno
ret
stc
xor
(bad)
clc
icebp
adc
leave
xlat
mov
jno
and
sbb
mov
mov
cmp
push
repz
adc
rol
fld
addr16
loop
add
fst
stc
idiv
jae
mov
iret
mov
jmp
cmp
arpl
lahf
adc
loop
mov
test
int3
loop
dec
repnz
iret
lods
lahf
pop
and
jns
inc
fistp
dec
lds
mov
pop
inc
outs
fldenv
jo
mov
clc
mov
mov
push
pop
mov
ror
adc
ss
sbb
mov
fidiv
call
jle
fcomip
push
fsubr
push
arpl
stos
sbb
(bad)
pop
icebp
push
lea
add
mov
mov
and
or
scas
pusha
in
mov
shl
pop
inc
jo
and
in
sub
xchg
test
fisubr
cmps
sbb
jnp
iret
std
jae
pop
hlt
rol
mov
rol
nop
(bad)
push
push
cli
dec
adc
clc
push
nop
loope
mov
dec
mov
adc
pop
sbb
hlt
push
ss
loopne
dec
shl
jae
test
iret
ds
pushf
jno
and
in
xlat
mov
jb
pop
pop
inc
xlat
int3
add
scas
add
rol
test
inc
je
aaa
ficom
and
mov
pop
inc
mov
or
leave
(bad)
ret
mov
xor
jl
inc
repz
dec
out
mov
cmps
out
retf
repnz
pop
outs
ja
mov
mov
jmp
in
push
cwde
and
stos
cmp
cmp
dec
lahf
push
sbb
mov
dec
lods
xor
ror
sar
mov
ret
fcom
cmp
mov
add
stc
arpl
int3
adc
sbb
test
and
scas
xor
enter
mov
movs
icebp
push
and
add
dec
test
mov
not
test
xchg
test
enter
scas
pop
jp
xchg
mov
add
mov
cmp
gs
push
adc
inc
or
mov
stc
mov
pop
loope
add
jb
add
jo
fwait
data16
jmp
or
xor
push
repnz
fstp
pop
sbb
ret
inc
sti
xor
fnstenv
outs
adc
mov
xchg
mov
pop
xchg
or
rol
mov
pop
inc
push
dec
or
movs
inc
dec
ds
aas
test
dec
dec
cmp
mov
adc
mov
cwde
inc
jle
jo
jg
mov
mov
pop
inc
popf
rcr
push
popa
dec
sub
mov
jge
pop
mov
sbb
dec
popa
sub
jae
out
bound
inc
push
cdq
xor
(bad)
out
call
aas
jo
sbb
leave
push
das
sub
in
jno
imul
inc
cmp
mov
xlat
sub
mov
push
pop
jo
or
mov
and
dec
pop
aas
mov
ficom
mov
loopne
sub
dec
aas
mov
push
inc
cld
jb
idiv
clc
xchg
mov
cmp
shr
(bad)
(bad)
adc
push
mov
cmp
je
call
call
test
(bad)
test
not
mov
jmp
daa
jbe
aas
enter
xor
adc
daa
test
rol
dec
rol
and
mov
stc
fstp
std
sub
cld
cmp
test
pop
sbb
xor
jo
jg
int3
not
xchg
mov
inc
ror
loopne
xor
fadd
and
and
dec
fistp
jp
jbe
push
popa
xor
cmp
sahf
jecxz
(bad)
pop
mov
pop
bound
loope
je
jne
iret
sti
inc
mov
lahf
push
iret
loope
lahf
ret
and
push
cs
pop
pop
repz
push
jp
mov
mov
out
loope
push
and
dec
inc
aad
push
jae
add
popf
psrlw
push
add
mov
leave
jge
les
cmp
and
mov
hlt
scas
clc
data16
test
jo
sbb
or
xor
sub
add
mov
xor
mov
stos
stc
hlt
push
clc
and
in
mov
add
(bad)
mov
retf
mov
mov
outs
shl
call
mov
jns
pop
cmp
inc
xchg
add
cmps
mov
test
mov
mov
cmc
pop
jae
pusha
mov
sub
adc
cmp
inc
mov
or
icebp
or
das
mov
pop
iret
out
mov
aad
hlt
out
ins
cmp
pusha
and
retf
dec
enter
push
(bad)
mov
mov
stc
leave
pop
mov
jl
jnp
jp
inc
(bad)
mov
out
inc
dec
xor
scas
retf
sbb
data16
mov
psraw
or
mov
xchg
adc
mov
pop
push
xor
add
lock
dec
inc
(bad)
(bad)
cld
jno
imul
stos
mov
test
inc
(bad)
hlt
cmp
push
lock
jnp
ret
aaa
imul
loopne
aad
hlt
adc
(bad)
and
es
and
jmp
push
pop
cmp
mov
adc
aad
pop
mov
inc
dec
adc
or
or
or
inc
aaa
xor
retf
jmp
imul
test
fild
pop
retf
cmps
mov
shl
lea
jp
or
add
loopne
outs
test
mov
xchg
jmp
mov
add
in
prefetch
mov
mov
test
jnp
push
popf
sbb
bound
mov
outs
jb
cmp
call
int
mov
mov
jmp
hlt
nop
in
mov
pop
cmps
movs
push
enter
pop
movs
ins
jae
enter
xor
jge
stc
mov
mov
or
(bad)
mov
mov
aas
sub
pushf
jmp
mov
bound
pushf
push
mov
jmp
pop
xchg
push
dec
or
jmp
js
loopne
push
pop
xchg
scas
xchg
call
xor
jae
fcmovnu
and
inc
and
sbb
adc
adc
mov
cs
mov
mov
push
sbb
test
sbb
inc
ret
push
mov
inc
jbe
aas
call
outs
pop
mov
shl
add
lea
in
xchg
(bad)
or
jmp
inc
add
loop
adc
ins
xor
test
adc
imul
je
imul
call
xor
loopne
ja
cdq
mov
into
mov
mov
div
adc
jmp
imul
push
pop
fwait
sub
(bad)
dec
jnp
xchg
and
mov
mov
icebp
inc
ins
push
xor
in
push
scas
out
hlt
add
movs
or
rcr
dec
imul
jnp
scas
jle
pop
std
adc
push
jmp
popf
xor
pop
mov
jle
mov
sub
aaa
pop
es
stos
adc
imul
aas
test
retf
mov
or
or
jecxz
pop
xor
push
pop
gs
mov
ins
div
lahf
xor
out
xlat
aad
xchg
mov
ret
rcl
mov
jb
pop
das
sub
rol
mov
stos
pop
mov
pop
inc
pop
xlat
jle
jp
(bad)
aas
cmp
ss
into
es
dec
fcom
std
xchg
out
and
(bad)
or
xor
cwde
ds
push
xchg
jp
leave
and
mov
dec
dec
jmp
fnsave
sbb
cwde
cdq
jle
jo
pop
into
nop
adc
enter
jae
pop
sbb
movs
nop
test
outs
sbb
fdivr
stc
mov
xchg
lock
iret
xchg
das
fst
lods
sbb
jle
out
mov
outs
mov
popf
sub
pop
(bad)
fcomp
(bad)
adc
mov
xchg
std
cdq
mov
adc
div
add
inc
and
inc
rcl
pop
sbb
dec
xchg
mov
(bad)
shl
es
scas
cli
add
imul
mov
pop
js
cs
mov
cmps
(bad)
adc
adc
call
sub
scas
stc
xor
adc
stos
cwde
aam
pushf
push
mov
adc
arpl
data16
icebp
dec
rcl
inc
(bad)
movs
test
(bad)
adc
test
nop
add
out
jbe
jmp
pop
jle
fdivrp
mov
in
ficom
mov
fimul
adc
(bad)
adc
retf
lods
ret
jae
and
xchg
movs
xor
pop
ja
add
pop
adc
es
cs
shl
cmp
pop
cmp
add
sbb
sub
mov
inc
lahf
cs
dec
enter
mov
xchg
push
addr16
add
jnp
gs
hlt
cmps
adc
cmp
add
jl
dec
push
xor
scas
adc
cwde
push
sub
std
stos
push
xor
or
add
ret
or
clc
in
or
mov
xchg
(bad)
jmp
scas
nop
hlt
or
inc
xchg
cwde
xlat
adc
pop
jno
aas
clc
mov
out
jp
pop
add
mov
sbb
mov
xor
cmp
sbb
dec
jecxz
mov
or
xor
cmc
xchg
dec
faddp
jno
call
dec
sub
mov
cmp
mov
or
paddusb
fnclex
stos
shr
sub
sbb
add
cmp
loopne
push
push
adc
adc
std
fnstenv
dec
fcmove
fwait
push
xlat
push
push
fidivr
sti
or
loope
inc
call
iret
(bad)
and
call
sub
push
jmp
mov
lahf
cmp
cli
jp
adc
cmp
sbb
cdq
leave
(bad)
push
cmp
or
stos
mov
cmps
mov
pop
mov
int
and
push
in
mov
pop
add
or
and
or
push
out
(bad)
sbb
xor
ja
sbb
(bad)
pop
cmp
adc
cld
shr
addr16
sub
lock
repz
aaa
cmp
pop
outs
or
mov
pushf
lahf
dec
mov
daa
push
sub
pusha
xor
jp
add
or
adc
or
push
dec
sub
xchg
jmp
ror
fwait
pop
out
cli
call
pop
add
gs
or
push
xchg
pop
arpl
mul
and
bound
cmps
adc
je
das
mov
cmp
iret
sbb
push
or
scas
mov
shl
mov
gs
mov
pop
dec
scas
mov
dec
(bad)
sbb
add
in
jae
or
loopne
cs
inc
ror
fwait
add
out
mov
outs
rcr
loopne
ss
jbe
int3
mov
test
arpl
hlt
lahf
ins
cmps
mov
mov
jb
outs
ins
push
pop
pop
xchg
cs
sti
and
mov
scas
shl
sub
cli
stos
mov
ret
fs
arpl
mov
cdq
ror
mov
aas
or
inc
jg
repz
(bad)
icebp
div
mov
dec
mov
in
test
sub
xchg
jmp
xor
lods
loop
dec
loop
or
in
or
or
cmp
xor
les
inc
(bad)
pop
push
ficomp
(bad)
jne
call
add
sbb
add
push
adc
nop
inc
(bad)
aas
or
rcr
mov
pusha
push
(bad)
rcr
cmp
pushf
ins
scas
jb
add
mov
cmc
mov
outs
sub
or
add
lods
ret
pop
inc
enter
mov
aad
rcr
dec
and
aas
or
mov
sar
pop
je
cmove
xchg
jbe
adc
jb
mov
cdq
or
mov
ret
pop
shl
outs
stc
sar
loop
mov
mov
xchg
add
ds
cwde
movs
lods
enter
loope
inc
add
and
repnz
test
lods
shl
push
test
add
jp
inc
sub
sti
retf
lahf
xchg
cdq
rcl
test
imul
leave
jae
cmp
jg
cmp
retf
xor
inc
mov
hlt
xor
(bad)
out
push
pusha
add
pop
fidiv
inc
inc
xor
pusha
mov
fcomp
ins
dec
or
lock
fs
inc
(bad)
and
std
aas
jmp
shl
push
xchg
jno
cmps
popf
enter
jmp
xlat
sub
mov
push
adc
add
sub
mov
popa
cmc
cmp
mov
inc
popa
add
retf
jg
add
mov
stos
push
hlt
adc
add
jo
push
xor
out
mov
test
imul
cmp
in
or
movs
and
in
push
sub
outs
enter
fisubr
xor
ins
mov
arpl
bound
fucomp
dec
xchg
push
lds
and
aam
pop
in
mov
mov
mov
xchg
sub
xor
jmp
pop
inc
inc
adc
cdq
outs
jmp
ret
in
fdivp
call
dec
dec
outs
mov
mov
sbb
dec
call
xor
xchg
mov
movs
imul
movs
push
dec
cmps
push
fsub
in
cwde
ins
(bad)
stos
or
aam
aaa
and
mov
test
shl
(bad)
call
mul
movs
xor
cmp
in
mov
retf
cmp
xchg
mov
mov
mov
pop
push
stos
call
cld
repz
leave
adc
jl
xchg
jmp
jl
in
stos
mov
pop
pop
sahf
or
cmp
add
jge
movs
(bad)
mov
cmp
push
loopne
mov
dec
js
jg
mov
rol
mov
add
push
sbb
jp
loope
das
gs
aad
adc
in
mov
xchg
stos
repnz
mov
cmp
test
sbb
cli
shl
add
loop
mov
sub
sub
int
rcl
mov
shl
aaa
sbb
mov
icebp
dec
and
fild
pop
push
xchg
push
mov
push
pop
mov
add
xchg
movs
scas
mov
aaa
pop
xchg
mov
mov
(bad)
lds
or
fnstcw
pop
div
push
adc
jbe
inc
scas
push
cmps
mov
enter
push
(bad)
push
and
jmp
jmp
std
or
adc
xlat
fxch
sub
(bad)
jns
leave
and
sub
fadd
jge
mov
es
aad
stos
not
or
inc
shr
stc
in
into
jnp
in
mov
and
sbb
sub
mov
and
push
inc
jae
xchg
mov
leave
ror
movs
(bad)
mov
mov
mov
mov
xor
mov
cmp
mov
mov
and
sahf
push
cdq
xchg
cld
jbe
mov
adc
movs
bound
jns
xor
pop
(bad)
or
push
mov
sbb
or
jmp
adc
jbe
dec
sbb
jo
mov
xchg
mov
addr16
and
jl
out
arpl
jp
xchg
js
inc
jg
xor
mov
into
pop
jmp
(bad)
ja
sti
mov
push
cld
xchg
popa
inc
ja
pop
add
cmc
ror
cmp
xor
sahf
pusha
add
push
sub
out
xor
mov
xchg
pop
xchg
iret
imul
ror
mov
mov
jmp
div
cmp
pop
int
sub
jmp
lds
sbb
fadd
jge
(bad)
repz
fbld
das
and
jg
xchg
xlat
sub
xor
dec
add
pop
or
pop
out
out
mov
icebp
popf
pusha
stc
test
daa
out
push
mov
(bad)
out
shr
scas
ret
daa
test
out
xchg
jae
cmp
xchg
pop
add
aam
inc
ins
loopne
cmps
stos
dec
test
fidivr
mov
mov
addr16
push
xor
jb
push
lock
cmp
sub
rcl
lock
and
mov
dec
dec
call
mov
test
mov
adc
adc
push
retf
or
js
sub
stc
inc
xchg
xor
cli
push
mov
jbe
add
jae
shl
xchg
stos
or
push
shl
inc
pop
and
mov
adc
ss
outs
popa
test
rcr
and
retf
inc
xchg
pop
(bad)
pop
ja
movs
jnp
fwait
int3
push
inc
(bad)
cmp
(bad)
in
scas
push
and
out
sar
mov
jbe
repnz
in
sub
cmp
push
imul
jmp
jbe
mov
fnstenv
pop
fdivr
dec
jbe
sbb
sub
imul
popf
mov
adc
cmp
push
sti
mov
push
jg
xor
push
sub
and
mov
and
test
mov
push
in
jle
test
fist
adc
fiadd
popf
mov
cmp
mov
jecxz
aas
lds
loope
xlat
cmp
mov
movs
in
cli
mov
pop
retf
xchg
xor
inc
inc
push
inc
mov
enter
scas
in
bsr
mov
jg
dec
sar
fldenv
out
movs
popf
xor
mov
ret
pop
cmp
addr16
cmps
movs
jne
or
retf
mov
inc
outs
sub
inc
fidiv
shl
xchg
imul
xchg
mov
inc
xchg
out
retf
aam
outs
lods
ins
idiv
cli
(bad)
push
jae
not
and
dec
mov
dec
aaa
ret
sar
lds
push
inc
arpl
jne
in
ss
mov
daa
icebp
out
and
or
mov
into
std
jo
out
add
adc
enter
fidiv
sbb
xchg
push
fdivr
dec
(bad)
lahf
mov
cmp
std
dec
ss
mov
pusha
ret
mov
jo
push
dec
aad
mov
inc
cmp
aas
pop
mov
sbb
add
and
and
(bad)
loopne
fcmovb
test
ror
nop
scas
sbb
or
imul
pslld
pop
inc
inc
xchg
test
fisubr
mov
and
je
and
movs
in
test
dec
mov
jecxz
mov
sbb
gs
and
push
push
mov
cs
fst
and
sbb
cmps
and
fs
sub
repnz
jno
dec
dec
sar
sbb
push
or
ja
pop
dec
test
sub
pop
imul
pop
pop
bound
mov
loope
outs
inc
pop
cs
cdq
adc
pop
arpl
mov
push
or
scas
neg
dec
jl
pop
arpl
adc
fistp
push
adc
cmps
jnp
int
(bad)
fistp
clc
mov
bnd
sbb
test
xchg
popf
xor
test
ror
mov
js
fisubr
out
xor
inc
outs
pop
mov
xchg
out
cmp
arpl
dec
(bad)
movs
xor
out
add
mov
mov
movs
dec
mov
inc
sub
push
fbld
cmp
mov
dec
adc
xor
imul
xchg
rcl
hlt
lods
out
dec
cli
jecxz
movs
add
mov
ds
fdivp
stc
dec
jo
mov
sub
sti
stc
add
mov
in
sahf
ret
pop
pop
sbb
inc
rcr
rcr
add
adc
das
push
push
add
cmc
pop
pop
adc
cwde
and
test
jl
inc
jge
popf
shl
shl
pushf
sub
push
outs
sahf
adc
ret
icebp
in
std
test
les
shr
jbe
mov
loope
jb
sbb
push
mov
je
outs
cmp
and
pop
or
rol
inc
das
dec
adc
lahf
mov
mov
or
vinsertf32x4
cli
jle
pop
rcr
xchg
pop
(bad)
sbb
cmp
outs
push
push
cli
sub
ret
jp
and
inc
test
(bad)
push
sub
pop
lods
cdq
xchg
or
jecxz
addr16
inc
mov
mov
inc
mov
mov
pop
mov
cmp
retf
pushf
out
dec
mov
clc
pop
aas
xchg
xchg
jmp
jmp
mov
fsubr
push
cmp
(bad)
inc
push
jmp
or
jae
loop
and
aam
add
sar
loop
mov
push
je
shl
retf
popf
adc
cmp
cdq
test
add
xor
pop
dec
in
push
pushf
cmp
(bad)
cmp
jns
jge
add
sub
loope
push
dec
dec
shl
pushf
cmps
jns
icebp
retf
pusha
(bad)
add
(bad)
push
nop
lods
test
das
stos
stc
inc
cwde
lds
jmp
mov
(bad)
xchg
inc
add
test
out
xchg
jae
mov
jo
fmul
or
add
es
or
mov
int
scas
jnp
dec
lea
arpl
push
cmc
xchg
lock
fcom
sbb
or
mov
jle
je
icebp
adc
stos
in
cmps
popa
fimul
mov
sub
mov
or
inc
push
add
mov
lds
sub
inc
mov
xchg
mov
mov
push
js
jmp
push
outs
or
(bad)
movs
inc
adc
nop
push
cmc
ins
cmp
icebp
fcom
mov
xchg
add
fstp
and
cld
repnz
adc
in
inc
mov
cmps
add
dec
sub
cs
js
dec
jecxz
mov
ficom
fwait
in
mov
jmp
xlat
cwde
shl
add
test
ficomp
push
(bad)
xor
arpl
fmul
jne
dec
scas
jnp
mov
mov
stc
mov
call
pop
dec
mov
and
sahf
test
or
mov
js
or
pop
and
xor
in
sbb
inc
cmp
pop
pop
inc
js
jecxz
xchg
xor
js
sub
sub
adc
mov
stc
pop
ins
cmp
test
jb
(bad)
rcr
(bad)
mov
and
pop
sti
out
cdq
lea
or
fucomip
push
push
pop
ins
hlt
jae
xor
adc
mov
push
xor
loop
adc
cwde
cmp
xchg
lea
loope
pop
iret
push
movs
mov
sbb
push
mov
(bad)
mov
dec
lock
cmps
bound
xor
jne
rcr
or
ins
scas
int3
pop
(bad)
iret
nop
jle
rcr
lea
ficomp
push
mov
jno
ds
sub
dec
addr16
add
scas
add
daa
fild
stc
stos
loop
xchg
retf
xor
loop
dec
pop
pop
lods
not
in
xchg
adc
mov
imul
push
mov
push
add
loopne
mov
fadd
vunpckhps
push
sbb
call
sbb
push
cmc
int
in
xchg
dec
loop
xchg
inc
cmps
adc
xor
add
popf
int3
cmp
mov
movs
int3
cmc
outs
popf
bound
add
es
enter
mov
mov
inc
clc
add
adc
not
aam
or
(bad)
adc
mov
mov
xchg
test
xchg
jmp
push
imul
pop
ja
push
ret
arpl
test
leave
sbb
fsub
adc
popf
test
lahf
jl
ja
ss
call
shl
push
sub
jnp
adc
add
sub
pop
mov
sub
push
push
ror
bound
lods
out
(bad)
sbb
je
out
aad
mov
dec
xor
push
mov
sub
arpl
jmp
add
pushf
add
call
mov
outs
sub
jbe
xchg
xchg
(bad)
jge
les
icebp
push
rep
pusha
or
cwde
nop
cmp
push
or
jmp
aad
push
aad
pop
movs
push
addr16
not
or
psrld
fs
cwde
cmp
imul
or
push
xor
mov
jmp
call
and
call
mov
shr
adc
push
add
cmp
dec
js
mov
bound
bound
imul
or
mov
sahf
push
push
xchg
fistp
inc
push
push
sub
pop
xchg
test
out
fadd
mov
xlat
jle
mov
ins
pop
xor
pop
jl
in
xor
xor
xor
jbe
(bad)
int
into
out
dec
(bad)
retf
cmp
out
ffreep
movs
or
fidiv
pusha
push
popa
cs
pop
and
adc
adc
lods
inc
pop
imul
push
mov
fldlg2
pop
cmp
jecxz
adc
sti
aad
js
dec
fwait
or
sbb
(bad)
icebp
les
scas
movs
and
push
jl
test
xor
sub
add
push
jp
int
gs
cs
sub
call
leave
mov
push
pop
movs
aad
mov
mov
rcl
call
jns
inc
pop
fimul
leave
dec
xor
mov
out
jns
push
out
in
jb
xchg
and
int3
push
clc
das
aad
mov
dec
push
add
mov
push
sub
(bad)
jmp
aam
out
jno
ins
shl
jno
jb
inc
daa
pop
das
aam
loopne
adc
pop
mov
adc
push
pop
mov
push
repz
sub
push
into
lea
xor
enter
pop
sub
xchg
mov
cwde
adc
cmp
and
and
jge
outs
push
jno
mov
sti
out
or
cmp
push
lock
je
mov
jne
pop
pop
pop
in
xchg
push
test
pop
sar
mov
sub
mov
into
xor
movs
add
xor
cmps
data16
(bad)
sbb
(bad)
sbb
cmp
lods
cli
adc
out
je
xchg
cli
call
mov
inc
add
pusha
sar
ret
jnp
sub
rcr
sub
cmps
int3
cdq
pop
mov
mov
push
xor
in
dec
fs
mov
imul
mov
inc
scas
mov
and
sub
mov
jl
mov
push
push
jne
cmp
and
dec
popa
pop
and
pop
ins
popf
loop
jp
xor
cmp
pop
pop
and
xor
cmp
ret
int3
scas
add
out
test
dec
in
lds
lock
push
test
push
jns
push
cmp
jns
xchg
cmp
into
data16
or
movs
(bad)
out
pop
jae
xchg
out
aad
or
adc
xchg
cmp
(bad)
cld
xchg
ins
pop
std
aad
jno
jecxz
or
jge
int3
jno
pop
clc
xchg
xchg
mov
pop
inc
or
enter
xchg
dec
icebp
std
out
js
mov
iret
jle
daa
inc
adc
sub
mov
inc
fstp
lds
lods
xor
ins
xor
leave
xlat
sub
leave
mov
push
in
cmp
icebp
mov
cld
gs
mov
test
dec
xchg
push
sbb
fwait
pop
rol
int3
cmp
imul
add
popf
jge
xchg
sar
repz
sub
scas
stc
xor
or
or
retf
cmp
jp
retf
add
vpmaxub
push
aas
fmul
mov
cmc
push
loope
sub
or
cdq
fstp
test
mov
(bad)
pop
es
push
dec
add
call
js
sbb
sahf
or
push
cmp
pop
dec
inc
jle
lock
adc
fild
mov
mov
(bad)
gs
cmp
cli
xchg
and
push
xchg
xchg
mov
mov
mov
fdiv
xor
test
jb
test
iret
xchg
jmp
ins
(bad)
pop
sbb
and
dec
inc
add
daa
push
jnp
in
imul
mov
push
stos
ds
int3
sbb
vpmulhw
mov
sub
loopne
and
push
repz
mov
push
mov
neg
pcmpgtb
sbb
fisubr
sub
clc
push
add
(bad)
mov
xor
rcr
mov
mov
es
aad
and
mov
add
cmps
sub
sub
xor
rep
and
and
ret
movs
xor
cmp
mov
mov
push
stos
mov
push
jae
mov
or
cmp
xchg
shl
jno
lea
ret
mov
pop
jmp
mov
sub
frstor
mov
inc
ins
in
pop
ss
outs
cmp
outs
push
mov
dec
jne
mov
push
inc
in
stos
ins
cmp
mov
outs
mov
xor
sub
jb
outs
adc
dec
jle
nop
out
cmps
enter
pop
and
das
cmp
int
xor
sbb
inc
xlat
call
xchg
(bad)
sbb
enter
shl
jns
inc
sub
and
dec
sub
loop
sub
cmp
out
jmp
sti
sti
leave
pop
push
stos
push
out
ins
add
dec
mov
add
add
inc
div
mov
ja
sbb
out
jbe
mov
enter
mul
sar
movs
rcr
push
or
sahf
icebp
sbb
ds
ins
mov
int
mov
or
xor
mov
sub
push
push
js
cli
mov
dec
jno
push
popf
leave
das
sbb
les
retf
jo
jecxz
(bad)
call
and
in
mov
scas
pop
jmp
call
xor
adc
mov
ds
mov
lock
int
add
in
mov
mov
pop
mov
call
cli
sub
xor
and
cld
and
jg
imul
xchg
add
sahf
cmp
sub
call
jg
fstp
inc
(bad)
cdq
ds
pop
cli
int
sub
pop
call
inc
ror
mov
inc
dec
movs
sub
daa
in
cwde
adc
cmp
jl
fbstp
or
jmp
push
jnp
test
mov
xor
shr
dec
fs
xchg
mov
jae
or
push
adc
push
push
test
mov
in
movs
or
imul
xor
adc
ins
data16
mov
dec
cmp
lahf
add
cmp
loop
scas
loopne
shr
mov
ror
gs
shr
xor
xchg
aad
enter
test
mov
xchg
ds
adc
cwde
adc
ror
fiadd
ins
inc
loopne
pop
dec
int3
in
pop
jns
fwait
loopne
jae
pop
xlat
jo
adc
cs
shl
and
std
push
jne
adc
popa
loop
pusha
repnz
sub
and
jns
leave
test
mov
xchg
or
in
popf
push
mov
sub
xor
js
jmp
dec
jge
mov
loope
push
clc
jecxz
jns
mov
shr
jo
arpl
mov
jle
js
imul
iret
into
in
add
imul
lods
inc
xor
xor
call
xlat
push
(bad)
(bad)
fdivr
mov
rcr
(bad)
popf
ret
inc
adc
loop
dec
and
xor
dec
test
or
lahf
lods
jle
xchg
pop
push
sbb
sbb
dec
addr16
dec
xor
jb
aas
scas
or
repz
pop
ds
fsub
jg
iret
das
sbb
xor
(bad)
mov
cmp
push
mov
push
xchg
fisubr
sar
imul
sub
sbb
movs
mov
clc
call
or
pop
pop
fwait
push
and
(bad)
cmp
xor
sti
xchg
pop
out
cli
retf
mov
or
mov
xor
in
xchg
pop
pushf
ds
push
add
pusha
sbb
es
out
sbb
inc
xchg
int3
cmp
dec
pushw
and
push
dec
ffree
mov
(bad)
mov
sub
and
stos
das
lahf
adc
xlat
mov
dec
leave
in
pop
inc
cdq
or
lods
mov
and
xchg
jle
xor
push
sahf
pop
dec
inc
add
sti
das
or
mov
jle
test
jmp
btc
jns
add
pushf
add
cmp
fwait
hlt
and
popf
xor
daa
jp
mov
sbb
jmp
sti
jl
mov
xchg
loop
push
icebp
imul
pushf
icebp
cmp
pop
clc
xor
mov
jle
fwait
add
adc
mov
fsub
inc
lods
into
(bad)
into
cs
jge
retf
mov
push
cwde
and
les
pushf
sub
pop
jbe
push
cs
sbb
dec
and
lods
cmp
and
aaa
cmps
cld
pushf
push
int3
jmp
or
cs
sbb
arpl
ficom
cdq
cmp
adc
div
gs
sbb
xchg
fbstp
movs
mov
and
or
dec
(bad)
xor
outs
lahf
mov
xor
mov
dec
dec
mov
out
xor
sub
bound
push
dec
sub
sbb
inc
in
inc
inc
sbb
mov
cmp
adc
lods
adc
dec
outs
pop
jns
(bad)
mov
fdivr
sar
pushf
push
mul
mov
cdq
scas
cdq
pop
outs
out
push
or
out
jmp
jle
jl
mov
cmc
dec
into
inc
dec
push
sahf
xchg
cmp
nop
aas
mov
mov
mov
dec
dec
cmp
test
ffreep
test
jecxz
div
sbb
pop
ja
popa
mov
out
xchg
aam
pop
adc
cmp
iret
imul
mov
outs
jl
inc
jne
ja
pop
adc
into
jb
ret
rcl
inc
mov
lds
rcr
stos
adc
iret
add
out
jbe
fistp
stos
mov
mov
mov
aad
add
pop
pop
aam
fld
(bad)
loope
pop
lods
cmp
out
sti
fadd
rcl
cmp
mov
pusha
cmps
jne
icebp
ret
or
mov
and
push
repnz
int3
or
int3
lods
lods
mov
shl
cmp
test
cmp
xor
add
test
sub
mov
cmp
push
jb
jae
cmp
push
pop
xchg
mov
add
les
call
hlt
test
fisubr
repnz
retf
aas
adc
pop
xor
dec
inc
cmp
scas
es
mov
dec
scas
out
xor
cdq
dec
push
adc
adc
mov
(bad)
xor
scas
out
push
sub
inc
pop
mov
jmp
mov
outs
call
retf
call
sysret
ret
mov
lods
xor
and
adc
mov
int3
cld
je
es
fist
xchg
jmp
outs
mov
aad
fist
(bad)
stos
out
in
shl
mov
mov
cmp
mov
lds
jns
cmp
or
adc
imul
fs
lods
data16
xchg
dec
add
int3
ror
inc
pop
add
cmp
xchg
pop
xchg
aas
dec
repnz
inc
and
mov
xor
cmps
push
retf
mov
sub
enter
jbe
jnp
les
(bad)
ja
adc
movs
push
in
inc
bound
or
mov
mov
jmp
popf
loopne
push
scas
push
data16
and
mov
mov
inc
jge
mov
xchg
and
scas
xchg
and
std
jnp
xlat
xchg
sub
(bad)
int
mov
stos
lods
add
loope
cmp
ror
mov
fild
lods
jp
cmp
cmps
mov
cwde
call
dec
push
add
jae
cmp
xor
fisub
sbb
cmp
xchg
repnz
inc
push
outs
sar
xor
lods
jb
adc
pop
repnz
adc
call
jl
retf
and
or
mov
(bad)
(bad)
hlt
and
adc
stos
pop
ins
xor
add
or
or
mov
xor
test
sub
mov
jmp
in
(bad)
sbb
or
(bad)
adc
cmp
in
pop
add
add
imul
imul
pop
mov
fwait
or
pop
or
ret
push
(bad)
push
adc
or
add
stc
das
in
lods
xor
ds
mov
xchg
add
lods
sub
mov
mov
out
jge
sub
mov
sbb
or
dec
jno
ret
sbb
(bad)
pop
popa
test
in
inc
xchg
cmps
pushf
push
in
sbb
sar
push
jns
sub
test
outs
xchg
xchg
aaa
push
cmp
stc
sbb
leave
data16
dec
daa
dec
sbb
scas
pop
shl
jmp
sbb
mov
push
pop
(bad)
test
mov
ss
push
xor
stos
data16
jge
jnp
lock
gs
outs
push
cmp
scas
dec
adc
fsub
(bad)
std
call
call
aas
pop
ret
out
fcomp
sbb
and
cmp
mov
mov
ret
push
ror
or
sbb
add
dec
icebp
mov
sbb
push
inc
cmps
xchg
stos
iret
fdiv
fnstcw
ds
pop
ds
mov
test
mov
in
push
iret
cdq
test
xchg
dec
and
mov
mov
and
xor
pop
cmp
xchg
shr
ja
popa
push
lds
adc
sub
adc
lahf
stos
aas
push
push
stos
jmp
out
dec
ja
frstpm(287
bound
add
or
loope
mov
mov
sub
(bad)
(bad)
jp
or
movs
push
out
xor
adc
mov
jp
add
in
sahf
inc
repz
addr16
movs
xor
mov
jle
mov
inc
aaa
shl
icebp
xlat
adc
sbb
push
inc
test
mov
retf
push
push
xor
outs
fdivr
cmc
cmp
pop
les
(bad)
stos
cmps
mov
test
push
dec
imul
add
push
(bad)
cmp
into
mov
cwde
pop
lods
daa
jp
inc
adc
and
dec
push
xchg
or
mov
test
mul
or
pop
bound
push
scas
xchg
mov
sbb
imul
sbb
fiadd
push
es
jae
ror
xor
and
mov
lods
ja
sbb
and
(bad)
lods
std
xchg
xor
bound
push
pop
sti
fild
mov
stos
jg
aas
call
push
(bad)
sti
push
(bad)
stos
mov
icebp
xor
cmp
movs
push
out
dec
xchg
retf
mov
cmp
push
cmps
int
push
cmp
adc
pop
inc
sub
inc
into
stos
out
push
lods
cmps
jbe
test
sar
jmp
popa
or
(bad)
adc
pop
inc
cmp
ins
or
adc
sbb
mov
sbb
sbb
xor
fist
xor
sub
or
in
cmps
pop
sbb
mov
aam
cwde
sbb
lods
(bad)
jl
add
dec
loopne
(bad)
sar
loope
mov
push
cmp
icebp
stos
popa
sbb
in
jg
sbb
stc
cld
popf
adc
ins
xchg
movs
test
int
jge
jns
mov
or
jle
sub
jb
(bad)
lods
js
fcom
dec
cmps
add
pop
fmul
call
js
push
cmp
inc
cmc
lahf
stos
rol
bound
adc
mov
(bad)
lahf
cli
scas
mov
(bad)
jno
xchg
sbb
jmp
rol
cmps
rol
je
mov
jne
stc
sahf
jo
outs
push
in
push
fcom
stos
push
(bad)
mov
repnz
mov
fisttp
sub
lods
popf
mov
enter
or
(bad)
sar
xor
lds
adc
(bad)
std
aad
popf
jmp
lds
gs
out
(bad)
sub
adc
test
or
and
in
sar
jge
adc
dec
dec
mov
and
data16
mov
(bad)
cmp
xchg
pop
xchg
jns
fs
lods
add
adc
fst
push
or
sbb
ins
ss
inc
out
outs
jb
mov
pop
jp
add
add
sbb
stos
cwde
mov
dec
add
imul
loop
pop
cmc
add
push
out
scas
gs
rcr
jmp
xlat
sti
aas
in
fsqrt
data16
lock
aad
data16
je
popa
mov
ret
add
or
cmp
inc
xor
loopne
mov
dec
mov
mov
jmp
scas
mov
pop
sub
in
(bad)
pop
into
nop
in
mov
cmp
test
rcl
push
repz
dec
retf
cmps
mov
or
or
xchg
movups
xor
and
mov
mov
xchg
das
call
jnp
mov
iret
vhaddpd
aaa
mov
fst
(bad)
mov
and
mov
cld
adc
sbb
movs
push
repz
push
sub
addr16
add
fdiv
scas
mov
rcl
test
pop
inc
mov
sbb
jmp
mov
pop
adc
leave
retf
lds
pop
dec
pop
push
cmp
or
fmulp
lds
sub
arpl
sbb
inc
add
add
arpl
and
fcmovb
lds
lahf
mov
xor
rcr
and
pushf
or
ins
cdq
cld
sub
and
(bad)
out
jl
fisub
xchg
sbb
dec
lods
dec
gs
push
pop
jae
sub
pop
pop
bound
jle
loop
push
(bad)
pop
aas
xor
jmp
add
loopne
(bad)
das
sbb
add
jbe
jns
lock
(bad)
fst
mov
xor
jle
icebp
push
lods
cdq
rol
xchg
push
mov
lods
mov
outs
jne
int
push
cmp
cmps
cli
fdivrp
fbld
sahf
cwde
xchg
xchg
mov
seto
cmps
dec
jle
ret
fisub
and
mov
cmps
out
adc
jbe
dec
push
mov
ja
pushf
sub
les
loope
test
iret
(bad)
cdq
rep
and
js
test
cdq
fcom
mov
xchg
and
push
lock
int3
xlat
lock
inc
add
xor
and
jbe
cli
clc
inc
sar
jl
and
test
lea
inc
xchg
adc
dec
mov
std
dec
push
jmp
jb
popf
scas
inc
out
cmp
jne
jno
mov
iret
shl
push
jo
and
jns
mov
gs
outs
add
mov
ret
sbb
(bad)
out
jnp
push
out
rep
cmp
pop
ficom
fwait
push
or
(bad)
mov
xor
push
mov
enter
cdq
(bad)
jmp
loopne
mov
outs
(bad)
popf
in
and
jnp
mov
(bad)
mov
jne
cmps
cli
js
popf
add
lock
pop
mov
imul
adc
jmp
add
xor
push
push
test
cmp
jmp
fst
popa
outs
dec
pand
cwde
push
lods
fbld
daa
retf
fistp
mov
or
pop
movs
xchg
push
mov
dec
xchg
push
sub
dec
addr16
enter
hlt
push
mov
in
mov
dec
je
data16
add
add
xor
cwde
int3
or
ffreep
xchg
lds
lock
add
imul
out
mov
pop
xor
push
(bad)
(bad)
and
push
cmp
xor
xchg
dec
xchg
or
xor
fs
ins
mov
scas
iret
pop
pop
push
cld
mov
mov
adc
xor
neg
jns
das
hlt
mov
iret
mov
push
je
xchg
sti
pop
aaa
inc
lods
fcomp
out
sbb
xchg
shl
test
sbb
mov
fstp
stos
clc
jnp
xchg
sub
fsubr
pusha
sub
in
mov
pop
xchg
cmp
add
test
sahf
inc
pop
mov
cmps
loopne
lods
clc
loope
repnz
xchg
push
push
jecxz
test
out
inc
loope
jmp
inc
and
mov
inc
retf
loop
into
cmp
dec
shl
and
data16
(bad)
jae
call
cmp
or
mov
adc
dec
jns
inc
sbb
xchg
mov
daa
dec
sub
mov
rol
pop
fidivr
icebp
ror
cld
add
sbb
cli
cmp
pop
test
xchg
add
mov
inc
dec
dec
hlt
out
push
push
mov
inc
call
add
add
cwde
jbe
jg
mov
(bad)
xor
sbb
cmp
pop
shl
cmp
jno
mov
and
xchg
sub
jmp
inc
pop
rol
inc
in
dec
push
add
pushf
inc
mov
ret
xchg
add
inc
push
dec
mov
mov
xchg
cwde
sub
ja
scas
js
sbb
imul
or
cmps
shr
sar
ss
lds
mov
in
and
(bad)
or
pop
sbb
retf
fs
loopne
jge
add
sbb
xor
dec
add
shl
btr
fsubr
mov
sub
outs
xor
repnz
iret
xchg
loope
fnsave
cld
inc
data16
cs
fld
nop
repnz
call
repz
xor
jl
clc
jb
or
push
test
dec
xchg
or
int
xor
jne
xor
and
push
jae
adc
mov
jge
sub
test
(bad)
xchg
lods
mov
sub
xor
mov
stc
sbb
sbb
leave
pusha
mov
adc
or
call
(bad)
ss
push
add
pop
(bad)
repz
xchg
and
and
mov
out
mov
push
inc
ret
and
sbb
imul
retf
cmp
mov
jp
adc
test
(bad)
aaa
jmp
dec
mov
or
adc
mov
xor
inc
xchg
mov
sbb
adc
adc
dec
iret
xchg
xchg
push
xchg
sub
add
jl
sub
mov
adc
enter
mov
dec
mov
cs
fld
loopne
and
mov
ret
lods
sar
data16
icebp
mov
jl
push
adc
mov
pop
push
in
call
ja
dec
stos
jmp
in
adc
push
or
push
adc
cmp
lds
stc
push
movs
adc
pop
push
into
test
push
xor
cmp
sbb
mov
xchg
popa
call
fadd
sub
int3
or
push
push
push
push
xlat
movs
dec
mov
call
outs
jb
loop
arpl
mul
icebp
test
adc
je
add
rcr
jbe
(bad)
sbb
ret
mov
cwde
mov
sub
and
mov
mov
xchg
movs
jae
cdq
jne
jmp
adc
mov
pop
sub
push
popa
mov
out
push
inc
xchg
movs
retf
push
mov
and
cmp
mov
dec
lea
jmp
inc
push
repz
setb
mov
mov
mov
or
adc
pop
inc
sub
jnp
lds
or
xor
sub
xchg
(bad)
sbb
ret
stc
mov
sbb
outs
add
jp
iret
pop
ss
pop
lock
bound
jnp
mov
pop
xor
mov
mov
mov
mov
mov
(bad)
xor
ins
or
xchg
cmpps
pop
mov
cdq
aaa
(bad)
fnstsw
movs
jnp
inc
shl
aad
les
fcmovu
loope
(bad)
xor
add
add
cwde
das
mov
add
das
xchg
xor
das
sbb
sar
outs
push
stos
mov
sahf
pop
call
adc
aam
mov
int
aam
sbb
lods
cmp
pop
mov
cmp
mov
je
sti
ja
push
push
mov
add
test
jl
bound
outs
nop
in
jecxz
(bad)
and
xchg
dec
push
scas
cmps
loopne
cmps
xchg
sbb
es
arpl
inc
xlat
dec
sub
out
mov
outs
ds
xor
mov
dec
push
ds
mov
mov
inc
test
and
ret
lahf
mov
mov
jecxz
mov
pop
enter
scas
mov
gs
ficomp
mov
loop
and
aam
xchg
sub
xchg
shl
adc
add
cmp
cmp
jp
inc
fs
jo
mov
add
mov
ja
mov
cmp
ret
mov
in
jmp
pop
mov
mov
cmp
xchg
mov
and
push
mov
inc
push
cmps
xchg
dec
repz
clc
das
es
aad
icebp
or
dec
mov
cmp
inc
fsub
stos
scas
sbb
and
adc
jmp
push
lea
fisttp
xor
pop
(bad)
mov
sbb
inc
sub
cmc
adc
mov
jmp
repnz
in
jnp
mov
dec
adc
dec
fs
sub
lahf
popf
adc
adc
dec
add
lods
in
dec
inc
neg
cmp
je
ret
and
xchg
xor
rcl
and
ret
add
lods
jp
jo
push
mov
xor
loop
mov
push
or
xor
cmps
pop
add
ds
jp
out
or
sub
and
dec
pop
pop
cmps
jo
lds
lea
xchg
and
mov
movs
ins
fadd
mov
(bad)
xchg
mov
stc
pop
sar
jne
jl
pop
movs
push
add
cmp
add
clc
add
shl
pop
fstp
add
sub
inc
das
data16
dec
push
inc
jbe
add
jecxz
mov
jge
cwde
xchg
mov
std
pop
sub
aad
pop
arpl
fld
repnz
iret
bound
scas
push
xor
pop
xchg
pop
sbb
(bad)
pushf
mov
aad
into
ins
xchg
outs
mov
pushf
movs
mov
test
pop
cs
sbb
loopne
sub
das
push
mov
push
cmps
outs
addr16
cli
or
or
arpl
xchg
ret
aad
fld
fsub
std
ret
lods
sub
dec
(bad)
push
sub
dec
mov
mov
pop
cmp
popf
rcl
jbe
push
push
fwait
lea
daa
rcl
add
mov
or
inc
mov
mov
sub
out
push
and
faddp
mov
stc
sub
pop
mov
jb
jns
(bad)
pop
dec
inc
mov
cmp
mov
ja
int3
or
int
fistp
fmul
inc
es
push
mov
inc
xchg
ja
jmp
mov
nop
stos
sar
mov
cmp
mov
xchg
push
mov
mov
xor
lods
ja
sti
int3
push
inc
xlat
cdq
push
sbb
adc
xchg
mov
pusha
rcr
adc
std
stos
cwde
pop
fcmovne
adc
mov
xchg
xor
stos
add
mov
add
mov
push
call
mov
rcr
sub
push
call
pusha
(bad)
stc
mov
adc
and
(bad)
icebp
into
xor
je
sbb
hlt
add
push
inc
xchg
push
stos
rcr
outs
inc
xor
arpl
mov
pop
dec
mov
dec
inc
stos
lods
(bad)
inc
sbb
add
dec
push
jns
or
lock
add
clc
xor
lods
int
pusha
or
sbb
mov
daa
and
movs
jnp
mov
xor
call
or
icebp
into
addr16
stc
inc
fwait
dec
mov
fst
pop
scas
mov
push
dec
dec
test
loop
cmp
clc
fs
call
jne
sub
icebp
pusha
or
sub
and
call
(bad)
push
dec
stos
test
push
mov
pushf
add
es
shr
pop
ss
pop
or
xchg
fwait
mov
jle
clc
test
jo
inc
cmp
dec
or
ins
(bad)
(bad)
aad
pop
ret
fxch
jno
xchg
call
xor
inc
adc
dec
mov
add
jl
rcr
retf
mov
(bad)
rcl
adc
dec
xchg
push
add
xchg
pusha
fldpi
adc
mov
repz
mov
xor
ret
mov
test
imul
add
outs
mov
(bad)
shl
push
jge
jmp
icebp
pop
bound
cmps
mov
xor
retf
cli
push
scas
pop
and
(bad)
push
test
push
aam
inc
and
gs
shl
test
add
aad
iret
popfw
jno
xchg
js
dec
ds
inc
push
cmps
call
imul
fs
push
fstp
(bad)
ds
mov
out
add
pop
push
xor
push
bound
cmp
lds
add
mov
fiadd
rol
popf
imul
mov
and
mov
(bad)
mov
lea
pop
mov
mov
cdq
popa
mov
push
gs
pop
hlt
out
mov
or
cmps
sbb
aad
bnd
jb
pop
xchg
repz
sbb
mov
js
mov
jmp
into
in
hlt
int3
stos
sbb
or
(bad)
adc
jbe
sbb
pop
pop
xchg
pop
fs
xchg
enter
(bad)
mov
xor
mov
call
mov
lods
std
jmp
pusha
jle
clc
repz
jmp
pop
pop
xchg
xor
sti
ins
or
ret
pop
cwde
(bad)
aaa
inc
adc
pop
nop
retf
imul
jbe
lea
ret
push
fs
jne
scas
fdiv
inc
movs
jmp
mov
out
jo
adc
retf
in
mov
xchg
push
ds
in
jbe
icebp
adc
pop
mul
daa
cmp
push
jecxz
sbb
fiadd
mov
les
adc
daa
xchg
jne
sar
xchg
xchg
jle
sub
aaa
pop
aam
dec
sub
mov
fld
add
mov
mov
adc
test
xchg
jns
or
sbb
je
fiadd
xchg
call
mov
push
enter
sar
adc
push
cmp
out
and
or
adc
or
adc
push
push
ins
inc
imul
push
add
fidiv
(bad)
xchg
xor
ficomp
hlt
inc
mov
push
scas
leave
les
popa
out
imul
movs
jmp
mov
or
pop
mov
sar
cmp
and
out
fwait
or
lods
pop
int3
lahf
or
lods
call
or
and
imul
sbb
pop
inc
mov
int3
(bad)
cli
test
jae
in
xchg
push
cmp
mov
mov
dec
sete
test
jne
xchg
sbb
or
loopne
and
(bad)
xor
jecxz
dec
push
adc
dec
js
push
and
xchg
daa
jmp
test
fbld
scas
xor
mov
jmp
(bad)
mul
nop
push
imul
pop
sub
das
dec
(bad)
scas
cmps
fs
pop
xor
aad
push
push
pop
sbb
pop
sub
daa
push
lea
sar
pop
adc
mov
js
push
pop
iret
sub
mov
ss
rol
adc
fstp
xor
lds
aam
icebp
sbb
sub
mov
sar
pusha
cs
xor
push
sub
mov
mov
mov
mul
hlt
mov
jge
xchg
inc
rcr
cmps
sahf
pusha
in
dec
ins
nop
jbe
fs
rcl
into
in
(bad)
jo
inc
xor
mov
hlt
pop
das
(bad)
sub
dec
addr16
jle
rcl
jl
xchg
inc
push
push
sbb
xor
(bad)
call
or
adc
or
jmp
jge
mov
bound
mov
dec
inc
add
mov
and
das
test
stos
sub
stc
mov
(bad)
in
sbb
pop
lock
call
jbe
(bad)
xchg
imul
pop
gs
ins
sub
jb
int3
or
cmp
cmps
imul
imul
inc
out
stos
lea
or
aas
cmp
(bad)
std
and
in
push
sbb
pop
jle
dec
mov
push
xchg
push
aaa
fdivr
add
enter
and
and
sub
(bad)
pop
adc
cmc
cmp
daa
dec
and
daa
mov
je
pop
test
cld
(bad)
mov
xchg
pushf
pushf
adc
fucomp
(bad)
les
and
add
adc
jmp
repnz
xchg
pop
(bad)
sahf
mov
arpl
addr16
xor
push
adc
test
push
adc
adc
mov
cmp
inc
pop
pushf
rol
push
ins
push
push
jo
mov
jae
out
mov
push
mov
fdiv
outs
adc
adc
jmp
retf
js
fcomip
in
cs
add
je
rol
dec
mov
js
jecxz
in
sub
adc
loop
dec
cmps
dec
sbb
leave
std
gs
add
retw
aad
lds
push
pop
jge
cmp
cmp
inc
gs
repnz
int3
test
mov
xor
popf
sbb
and
fcom
jecxz
xchg
in
mov
push
scas
adc
push
(bad)
pop
ror
pushf
lods
stos
loopne
push
cmp
(bad)
in
aad
movs
cdq
pop
and
cmps
icebp
popf
sbb
and
(bad)
mov
ror
sar
ret
jg
add
in
xchg
cdq
mov
fimul
stos
or
jge
xchg
jo
sbb
cmps
shl
clc
div
test
sbb
outs
xor
js
cdq
sti
sub
jb
sbb
mov
aaa
je
in
shr
xchg
xchg
dec
stos
ss
inc
iret
jne
mov
out
and
push
leave
xchg
test
inc
idiv
lock
movs
std
push
sahf
cmp
cmps
loope
cmps
in
and
pop
inc
call
push
pop
and
add
add
jbe
popa
mov
test
lock
cmp
nop
or
mov
jg
inc
mov
add
enter
and
into
adc
cmp
nop
outs
icebp
into
push
das
out
ret
ins
jne
in
sub
mov
mov
xor
mov
add
jne
iret
dec
jge
cld
xor
mov
dec
aas
js
push
loop
ja
inc
arpl
es
div
aas
inc
inc
pop
stos
jle
jbe
movs
push
out
rcr
sar
pusha
jle
mov
lods
outs
mov
aas
push
xor
add
jecxz
arpl
inc
xor
mov
aaa
push
cmc
dec
es
adc
dec
mov
adc
xor
adc
(bad)
pop
pop
sbb
xor
inc
repnz
out
adc
fdiv
clc
mov
xchg
sahf
cmp
popf
test
jno
jl
jge
rcl
sub
cmc
inc
cmps
mov
and
cmps
(bad)
fsub
and
or
add
xchg
xor
push
int
aam
push
add
push
sbb
fild
outs
push
dec
loope
rcl
ficomp
es
pop
xchg
and
mov
mov
(bad)
and
and
loop
mov
add
imul
icebp
cdq
xlat
mov
ja
sbb
sti
jmp
pushf
mov
popf
sbb
lock
arpl
pop
lahf
mov
push
int
movs
cmp
adc
and
rcl
mov
add
xchg
or
jge
sbb
(bad)
xchg
xlat
mov
adc
(bad)
push
xor
push
sar
xor
or
repz
sbb
xor
or
and
loop
hlt
mov
sbb
inc
cmps
ins
mov
dec
in
jo
mov
scas
fcom
mov
inc
test
mov
int
cmp
bound
pop
add
ja
loopne
inc
into
fwait
and
mov
cmps
(bad)
(bad)
movs
loopne
sbb
mov
mov
shr
push
xor
nop
sub
test
dec
or
fcomp
popa
(bad)
xchg
adc
or
xor
pop
inc
test
ror
popa
mov
push
aaa
in
lea
jp
inc
add
add
scas
loopne
inc
aaa
pop
push
mov
imul
imul
mov
cmp
cmp
addr16
cli
jns
adc
das
les
jbe
pop
lea
je
cwde
sbb
std
or
xor
jnp
jge
mov
(bad)
out
sbb
xor
and
ret
jne
or
adc
pop
jmp
icebp
mov
sub
dec
(bad)
jae
jl
jl
(bad)
sub
imul
mov
push
(bad)
jmp
loop
das
push
mov
pusha
imul
cmp
test
call
mov
sbb
ja
dec
jae
retf
pop
jp
jae
adc
sbb
pop
pop
inc
inc
xor
xor
outs
mov
sbb
cwde
jae
ror
push
inc
div
pop
adc
dec
or
(bad)
push
ror
dec
push
or
pop
sti
pop
mov
mov
sahf
jl
inc
sbb
sbb
rcl
inc
ss
or
mov
xchg
and
rcl
out
jge
cli
ffreep
out
in
jne
mov
sub
xchg
cmp
xchg
imul
push
inc
push
je
pop
arpl
inc
xchg
push
test
mov
fiadd
adc
add
jg
out
inc
jb
xor
or
call
mov
les
adc
pop
mov
push
sub
leave
ret
iret
dec
cwde
sub
cs
scas
shl
and
push
pop
repnz
jmp
add
test
jo
push
in
leave
sub
xchg
ja
lods
movs
jecxz
idiv
mov
aas
outs
outs
(bad)
jnp
fdivr
push
mov
jns
ret
arpl
out
mov
add
mov
popf
int
imul
leave
std
push
or
cmp
popf
cmps
mov
cmp
or
test
loopne
loop
cmp
pop
arpl
xchg
add
xchg
repz
pop
stos
xchg
mov
test
mov
ins
cmps
lods
test
mov
repz
jae
(bad)
jg
jae
test
cwde
add
inc
arpl
inc
cdq
jnp
int3
aad
scas
and
mov
aas
sub
pop
sbb
mov
sbb
push
dec
hlt
jl
jo
leave
and
xor
loope
cdq
xlat
jno
ror
sti
mov
loope
sbb
sub
addr16
sbb
(bad)
ret
xchg
xor
inc
add
(bad)
daa
add
popf
test
mov
out
lds
cmp
sub
adc
mov
and
call
in
push
or
js
push
repnz
js
and
and
mov
cwde
dec
cmc
je
inc
sub
pushf
loop
mov
(bad)
push
jmp
addr16
mov
cmp
neg
xchg
inc
out
dec
cs
(bad)
aad
sbb
(bad)
mov
adc
mov
ins
(bad)
mov
fimul
out
fwait
mov
(bad)
aas
pop
jmp
jp
sbb
jl
jns
or
jecxz
adc
cmp
mov
and
sub
loope
mov
push
mov
sub
or
push
add
mov
out
test
mov
xchg
dec
aad
aaa
sub
mov
jbe
and
xor
xor
sbb
sahf
clc
sbb
lods
mov
sbb
inc
pop
mov
and
or
jl
sar
dec
adc
jnp
cmc
dec
neg
ficomp
jb
jnp
stc
push
fiadd
xchg
fs
test
inc
inc
cld
mov
mov
xchg
js
mov
neg
ds
les
bound
sbb
cmps
(bad)
(bad)
push
push
mov
add
cdq
outs
test
ret
push
sbb
add
mov
shl
cmp
mov
ja
daa
cmp
sbb
call
mov
inc
cmp
movs
cmps
pop
iret
(bad)
inc
dec
fild
jmp
call
repnz
or
into
rol
cmp
scas
test
and
mov
mov
rol
test
dec
inc
mov
and
jne
pop
sbb
mov
pop
ds
mov
cmc
jecxz
cmps
adc
xor
fs
adc
test
push
test
mov
jmp
push
sti
int
push
in
mov
aad
jne
adc
ds
inc
loop
cmps
xchg
xor
push
test
xor
inc
cmp
sub
cmp
pusha
int3
test
cli
cs
mov
jb
or
stos
shl
sub
inc
cmps
(bad)
adc
inc
shl
cmp
cs
(bad)
mov
ror
aaa
mov
xor
push
lods
pop
not
xchg
rol
and
outs
shl
jg
loope
fcomp
icebp
sti
mov
xchg
cmps
push
inc
sub
mov
cmp
mov
lea
aam
push
pop
mov
call
fsub
outs
xchg
retf
iret
and
sbb
inc
adc
jne
or
xchg
mov
mov
stc
rcl
cmp
pop
imul
leave
iret
pop
mov
xor
cmc
fwait
adc
jle
inc
push
add
push
movs
hlt
cwde
aad
rcr
nop
in
dec
xchg
movs
stos
inc
dec
(bad)
in
or
inc
sbb
lahf
cmc
sti
adc
mov
out
mov
imul
(bad)
out
mov
adc
add
mov
mov
cli
adc
loop
in
mov
dec
cmp
jp
icebp
lock
mov
lods
outs
and
popf
in
fucomp
inc
lds
sbb
outs
mov
sbb
push
shr
(bad)
jmp
nop
adc
scas
xchg
sub
mov
cmp
enter
(bad)
fwait
or
mov
jg
adc
and
das
add
jbe
mov
out
xchg
sti
xor
inc
and
xlat
jmp
js
sub
push
popf
sbb
push
ret
mov
jns
mov
enter
dec
std
hlt
iret
test
hlt
call
lds
paddd
adc
das
pusha
sar
into
cmp
add
retf
mov
lea
push
jo
xlat
cmp
mov
inc
int3
repnz
or
jmp
adc
pop
cdq
add
pop
cmps
pop
sub
jmp
popa
scas
xor
aas
outs
fwait
mov
pushf
outs
stos
mov
push
inc
addr16
push
dec
mov
jp
dec
xor
push
mov
retf
cmovg
retf
out
and
test
jae
mov
sub
push
xchg
fcom
jbe
lods
and
ss
and
inc
lods
fprem1
or
rcl
push
std
rcl
jle
test
test
scas
sub
ja
mov
arpl
call
mov
imul
xor
movs
loop
test
call
jp
jge
rcl
adc
lods
cmp
ficom
cmp
xor
(bad)
nop
dec
xchg
lock
jo
enter
xchg
lock
sub
in
sub
mov
xchg
jno
sar
xchg
cs
call
lahf
inc
into
fisttp
(bad)
stc
cli
fldcw
push
gs
mov
xlat
jecxz
test
and
sti
push
sbb
mov
mov
and
stc
sbb
lds
fwait
rcr
rdtsc
bound
cmc
scas
stos
fninit
add
out
dec
mov
mov
and
nop
std
mov
xor
adc
ret
adc
xor
pop
sub
pop
lods
push
push
xchg
idiv
xchg
ds
mov
sbb
in
shl
xor
inc
data16
inc
fld
xchg
je
cmp
and
or
push
call
sub
je
cmp
loop
mov
inc
and
(bad)
mov
aam
std
in
adc
mov
mov
xlat
ss
scas
sub
xchg
push
call
repz
retf
sahf
xor
into
xchg
aas
test
pop
int
mov
gs
mov
jmp
sbb
stc
or
ret
(bad)
jns
adc
js
jb
inc
mov
shr
and
repz
ja
fiadd
push
and
dec
scas
mov
nop
dec
xchg
in
dec
(bad)
icebp
mov
cmp
inc
data16
das
mov
out
ins
pop
push
sahf
call
je
(bad)
mov
push
daa
sbb
rcl
jl
sar
enter
dec
pop
mov
cmp
or
stos
cli
lea
out
repnz
push
jmp
inc
cmp
and
test
clc
xchg
xchg
fimul
or
shr
repz
cli
sub
push
dec
stos
std
cli
outs
xor
mov
jno
(bad)
inc
jo
loope
or
sub
xchg
aaa
inc
call
cmp
inc
adc
push
push
xchg
xchg
dec
movs
dec
cmp
out
push
in
xchg
movs
fiadd
mov
jp
ret
add
lods
aaa
fdiv
pop
popf
es
pop
sub
jmp
mov
addr16
inc
sub
lock
mov
or
mov
jl
xor
popf
mov
std
bound
add
mov
ins
test
imul
mov
mov
xchg
out
stc
in
cmp
add
lahf
inc
push
ds
sub
(bad)
push
add
pop
(bad)
xor
pop
or
lock
call
scas
cdq
mov
jecxz
out
imul
sub
pushf
fild
jno
pop
sti
mov
cmp
xchg
adc
(bad)
jo
and
adc
xor
clc
lea
push
(bad)
sbb
call
jb
sub
mov
fidiv
jge
(bad)
xor
aam
dec
sub
test
mov
mov
inc
mov
sub
ret
push
int
pop
push
xor
push
cmp
out
gs
xchg
inc
popf
cmp
mov
pop
or
xor
je
push
sar
retw
add
aaa
mov
adc
sbb
into
mov
dec
dec
xchg
mov
arpl
mov
or
pop
rol
sbb
pop
aad
lock
mov
xchg
pop
(bad)
cs
dec
sbb
xchg
mov
mov
jecxz
mov
jl
xchg
xchg
sahf
jecxz
pop
or
mov
pop
xor
push
and
leave
xchg
ret
fistp
mov
pop
fstp
ja
or
icebp
xchg
jo
scas
dec
call
dec
mov
pop
call
test
push
out
cmp
movs
mov
call
cmp
cmp
xor
adc
mov
cmps
test
mov
call
sub
inc
movs
lods
int3
xchg
cld
sar
push
mov
retf
fsub
sar
das
lock
hlt
in
es
mov
cmp
cmps
cli
repnz
dec
popa
shr
xor
out
inc
and
repz
sbb
add
xor
outs
xchg
sbb
push
xchg
arpl
cmp
dec
cmps
fsubr
ja
test
call
and
mov
out
(bad)
fisub
scas
cmp
in
js
test
leave
mov
jb
ret
add
aam
mov
sub
inc
sbb
add
aam
jecxz
adc
sbb
pop
jl
out
sbb
out
dec
sar
xor
fnstenv
mov
in
loopne
cld
into
adc
pop
sub
stos
mov
jnp
fwait
lods
shr
(bad)
clc
daa
push
clc
call
repz
xlat
test
mov
xor
or
pop
ins
movs
pop
imul
in
inc
xor
xor
sbb
test
adc
lds
outs
out
test
aas
and
hlt
or
popa
pop
xor
mov
cmps
jb
adc
xor
xor
push
pop
ficomp
and
cmc
hlt
outs
ja
aad
add
mov
add
or
test
cwde
or
push
cld
push
enter
add
(bad)
lock
xor
adc
ror
sbb
mov
xchg
pop
inc
add
and
in
(bad)
jb
mov
pop
cmp
(bad)
lea
sub
sub
sbb
xchg
mov
jnp
rcr
mov
fs
jae
repnz
mov
pop
xor
repnz
(bad)
out
ins
mov
xchg
adc
push
cmp
xlat
outs
or
fxch
xchg
inc
xchg
sahf
iret
imul
cs
in
call
mov
loope
xor
mov
gs
mov
(bad)
sar
popa
adc
lock
mov
mov
sbb
mov
sub
call
aas
jns
dec
iret
test
dec
xor
jb
push
cs
aam
sub
add
push
and
inc
add
cmp
add
add
scas
enter
into
aaa
jl
ficom
and
imul
sbb
add
mov
add
lock
mov
outs
jp
adc
push
fistp
cmp
and
stc
jb
or
cmp
ret
push
cmps
sbb
pop
mov
sub
fbstp
inc
push
lock
cmp
pop
es
mov
push
and
mov
jge
movs
sub
bound
and
pop
(bad)
pop
push
cmp
xor
pop
jecxz
cli
daa
push
scas
cli
inc
div
out
add
fcmovbe
mov
mov
retf
dec
(bad)
xor
pop
or
popf
xchg
mov
lahf
or
cli
lods
out
ret
sub
hlt
outs
mov
jnp
mov
nop
pop
out
fistp
popa
sbb
movs
ret
cmp
inc
jo
(bad)
dec
pop
mov
pop
cmp
cdq
push
fcomp
inc
sbb
std
pop
mov
adc
mov
(bad)
(bad)
mov
fwait
call
add
imul
hlt
idiv
bound
add
in
in
fnop
pop
jns
mov
mov
mov
jae
xchg
imul
int
sub
cmc
mov
xchg
int3
les
dec
movs
in
scas
mov
adc
mov
cdq
mov
shl
in
cmps
enter
rcr
adc
mov
mov
retf
ins
fisubr
into
outs
test
fild
mov
push
shl
mov
sub
shl
sbb
or
pop
sbb
mov
or
(bad)
int3
sub
inc
nop
add
fld
pusha
cmp
popa
push
std
(bad)
out
sub
in
xchg
fidiv
mov
aad
inc
out
mov
push
cdq
je
aam
add
dec
mov
call
test
lods
or
call
jmp
pop
sar
lahf
add
dec
xor
sbb
sub
push
mov
pop
jbe
dec
or
sbb
fcom
or
movs
cmps
addr16
jno
mov
nop
cmp
mov
movs
sbb
jmp
inc
fwait
mul
fmul
out
xchg
mov
fnstsw
call
pop
sar
out
and
jnp
icebp
ficom
jbe
out
mov
fwait
mov
pop
inc
and
imul
inc
fiadd
mov
call
movs
sbb
es
in
leave
lods
loopne
ds
push
xor
jp
fcom
inc
or
xchg
push
icebp
imul
popa
mov
shl
iret
lahf
popf
and
pop
pusha
test
pop
adc
pop
iret
(bad)
std
lods
out
scas
addr16
ret
(bad)
cld
add
out
sub
pop
loope
jp
sbb
pushf
jl
scas
test
xor
repnz
ss
and
pop
push
pop
fs
retf
jbe
xor
mov
add
mov
imul
pop
call
pop
mov
mov
(bad)
push
out
scas
into
dec
shr
inc
jmp
les
push
(bad)
arpl
xchg
pop
sub
call
fnstcw
test
retf
inc
jnp
jecxz
lods
out
sbb
adc
test
mov
mov
cmp
pop
pop
add
in
ins
mov
leave
ja
out
jl
pusha
imul
and
pushf
mov
out
popa
mov
cmps
jp
cmp
jnp
jmp
int3
mov
call
test
cmp
(bad)
ins
movs
arpl
in
inc
xor
stc
stos
ret
movs
fnsave
push
int
dec
rcr
js
xor
arpl
mov
mov
js
pop
and
call
movs
push
cmp
es
inc
inc
das
mov
test
mov
push
mov
add
(bad)
xchg
das
or
ins
adc
pushf
daa
inc
outs
mov
sub
mov
packsswb
ins
mov
and
ds
sbb
cmp
std
pusha
or
pop
leave
sbb
cmc
xchg
inc
push
adc
pop
xor
sti
repnz
mov
mov
nop
inc
or
scas
cmp
clc
sbb
xchg
rcr
gs
pop
in
cmp
fcmovu
cmp
pop
retf
push
iret
sub
and
retf
push
ins
(bad)
data16
sub
lock
mov
sbb
cld
ffree
pop
cmc
idiv
cmp
shr
imul
push
movs
ja
ror
jns
imul
outs
and
sbb
pop
jne
les
icebp
sahf
mov
jno
dec
into
cdq
or
xor
cmp
icebp
jae
cvtps2pd
push
and
mov
out
neg
cmp
mov
xlat
sti
mov
mov
jne
push
add
fimul
xchg
mov
mov
rcl
div
or
lock
and
sub
mov
xor
into
xor
stos
mov
mov
shl
sub
adc
gs
sahf
not
clc
repz
jns
js
outs
ins
pop
scas
mov
call
push
inc
jmp
add
cmp
xchg
in
inc
shl
push
cmp
pop
call
mov
and
loop
call
ficom
faddp
fs
jge
enter
push
add
imul
xchg
test
xchg
lock
out
and
mov
jne
jp
sahf
add
scas
cmp
ja
test
jg
call
outs
jb
adc
in
add
xchg
cdq
inc
push
inc
mov
fadd
adc
and
imul
cld
sahf
mov
mov
aad
jnp
shl
dec
xor
loop
(bad)
pop
or
ret
int3
push
push
call
cdq
jo
(bad)
addr16
mov
mov
xchg
aaa
icebp
jae
into
leave
lock
frstor
jle
xor
sub
cmp
jl
pop
out
imul
aam
cdq
int
bound
mov
fist
cli
push
xchg
xor
(bad)
push
pop
pop
mov
dec
hlt
pop
clc
jne
ffree
scas
stos
sub
ror
stos
pop
arpl
stos
mov
xchg
cmp
btr
repnz
addr16
pop
popf
scas
es
(bad)
stc
lods
ret
dec
cmc
shr
mov
popf
mov
adc
sti
int
lahf
xchg
rcr
ss
jb
xchg
je
pop
(bad)
xchg
out
xchg
or
stos
repz
xabort
jae
or
pop
call
mov
stos
mov
and
fs
adc
mov
push
cmp
imul
adc
mul
mov
inc
pop
pop
lds
push
push
xchg
push
mov
add
mov
popf
cmps
repz
pop
inc
cli
jg
sbb
xchg
jecxz
inc
iret
xchg
lds
rcl
je
pop
ins
adc
sub
dec
lock
fucomp
xchg
stc
sbb
retf
mov
mov
cmp
push
lods
push
push
fbstp
xor
ins
inc
sti
or
bound
repnz
test
test
fiadd
xchg
test
sbb
inc
ret
mov
inc
pmaxub
jmp
div
sbb
(bad)
out
hlt
out
movs
adc
outs
aaa
sbb
je
inc
or
inc
iret
pop
and
dec
sub
ins
push
push
and
cmps
dec
add
inc
(bad)
push
lods
adc
adc
cmc
or
iret
dec
loopne
jnp
mov
cli
mov
icebp
ret
test
lahf
xchg
cdq
jmp
popa
sub
pop
pop
pop
and
mov
xchg
push
out
mov
sti
cmp
fs
pop
shr
xor
mov
call
dec
dec
xchg
int3
push
pop
mov
cmc
dec
push
mov
or
push
jmp
pop
adc
rcr
inc
push
(bad)
out
xchg
pop
(bad)
scas
xchg
adc
xchg
jmp
mov
jecxz
pushf
pop
popf
pop
ror
jmp
ret
push
mov
fwait
inc
(bad)
cmovnp
(bad)
and
test
int
cmp
and
mulps
jmp
inc
fld
gs
iret
test
lahf
or
call
or
add
loope
adc
(bad)
jo
inc
jno
push
call
mov
mov
or
pop
cmp
mov
(bad)
outs
cmp
movs
into
pop
ds
xor
jbe
aam
cdq
(bad)
add
lock
sbb
loope
das
mov
repz
pop
mov
cmp
pop
iret
ss
mov
div
lea
repnz
movs
or
pop
lods
xchg
push
sbb
pop
jecxz
xchg
dec
cmp
loope
les
les
xor
jmp
ja
ins
call
enter
sbb
(bad)
inc
or
cli
cld
push
jns
jae
xchg
jp
sbb
add
in
sbb
sar
add
into
popf
jbe
inc
pslld
mov
(bad)
ret
lahf
icebp
movs
adc
sahf
dec
mov
mov
push
mov
xchg
push
and
retf
cmp
fild
dec
push
mul
loope
push
xchg
fwait
movs
mov
sub
repz
add
cld
inc
push
jl
rcl
mov
(bad)
xor
and
cmp
retf
cmc
pop
ds
push
mov
push
mov
(bad)
outs
in
mov
xchg
inc
or
mov
inc
pop
outs
xor
cmp
cmp
jmp
bound
mov
dec
jae
ret
jge
lock
je
std
in
inc
mov
lock
push
pop
idiv
mov
sub
and
sub
test
dec
push
mov
test
pop
ds
mov
jnp
imul
cmp
sub
je
mov
xchg
push
lahf
jno
aad
sub
out
sub
fwait
push
call
adc
pushf
push
js
or
dec
loopne
pushf
jbe
xchg
add
mov
enter
stc
call
setp
xchg
xchg
out
gs
dec
push
pop
sub
(bad)
(bad)
mov
and
sbb
ja
mov
aas
popa
cmps
out
retf
in
jg
ret
fsubr
outs
aam
lahf
clc
sbb
cli
push
movs
iret
push
hlt
or
loopne
sub
push
or
dec
adc
xor
cmp
inc
pop
and
fimul
mov
add
sahf
mov
sbb
cld
out
cmp
xor
sti
and
call
add
xor
ss
cmc
cmc
mov
popa
sbb
cmc
or
sbb
out
push
mov
add
inc
add
mov
into
push
ret
ss
sbb
dec
ins
pop
mov
mov
or
jo
mov
nop
icebp
sti
inc
repz
es
jle
pop
add
pop
jg
clc
arpl
cmps
cmp
into
or
mov
adc
and
cmp
adc
in
out
jb
sti
lods
pop
ss
add
or
jmp
cmp
or
retf
sub
inc
and
mov
int
icebp
iret
lods
and
cmp
jg
and
mov
dec
dec
mov
jbe
popf
mov
and
arpl
cmps
xchg
xchg
push
add
lock
aam
out
jae
test
jg
mov
mov
inc
jg
cwde
push
cmps
jecxz
sbb
fsubr
jl
push
or
xchg
xchg
(bad)
loopne
and
push
pop
sbb
dec
add
cmp
jb
and
rcr
nop
push
pop
xchg
outs
jne
outs
dec
cmps
push
push
out
rcl
scas
popa
cmp
sub
sbb
sub
or
movs
ror
inc
std
dec
jle
js
arpl
clc
or
sbb
xor
das
xchg
in
sbb
adc
loopne
scas
mov
test
push
in
int
jle
dec
int3
mov
jl
fidivr
jl
mov
and
scas
out
jno
hlt
pop
pop
lods
add
stos
pop
test
xor
push
jmp
ja
outs
stos
out
jge
mov
mov
fimul
cmp
mov
fcmovne
mov
lahf
aaa
pusha
adc
push
sbb
xchg
(bad)
(bad)
mov
rol
bound
pop
xchg
call
jmp
movs
les
outs
fwait
cmp
inc
jno
call
std
sti
inc
or
loope
jp
test
mov
mov
mov
pop
test
xor
repz
sbb
ret
aaa
and
psadbw
jb
fwait
aad
retf
sbb
shr
sub
dec
push
clc
stc
ja
lahf
lods
push
adc
(bad)
out
xor
cmp
daa
adc
scas
mov
and
ja
sbb
sar
int3
arpl
retf
jl
dec
cmp
jg
jecxz
lea
fcom
daa
cmp
xor
movs
in
xchg
mov
gs
cmp
out
mov
xor
not
repnz
rcl
sub
test
es
or
outs
cmp
jae
data16
aam
arpl
pop
or
push
int
push
std
pop
pusha
div
dec
fnstsw
into
ins
into
sar
outs
jae
fidiv
pop
add
inc
out
iret
sub
sub
jno
xchg
lods
push
pop
test
jmp
retf
pop
xchg
sub
push
in
test
cli
gs
jne
aad
adc
into
jnp
pop
push
cmps
(bad)
pop
test
mov
pop
jg
mov
xor
or
mov
leave
fistp
addr16
add
mov
pop
jp
in
sbb
scas
mov
stos
std
(bad)
sti
inc
add
clc
into
dec
push
jbe
dec
mov
into
loope
sub
xor
(bad)
mov
inc
xor
pop
xchg
mov
lods
inc
mov
aas
out
jo
imul
xor
hlt
jns
lock
mov
aad
adc
fbld
mov
mov
mov
add
inc
mov
push
out
jo
popf
call
fdiv
outs
mov
ins
and
data16
xchg
and
out
xor
dec
cmp
stos
cs
push
movs
and
inc
xchg
pop
mov
pop
xchg
mov
pop
mov
adc
mov
int
jp
cmp
nop
inc
imul
inc
in
ret
sbb
push
add
cmp
fst
mov
and
mov
shr
fistp
xor
test
mov
mov
push
cli
test
pop
movs
popf
inc
out
push
adc
enter
popa
out
repz
jge
xor
and
xchg
(bad)
addr16
js
add
or
data16
add
sbb
add
mov
lds
call
dec
mov
sbb
pop
cmps
mov
int3
dec
aad
xor
test
or
add
mov
aam
add
jge
push
xchg
fld
pop
xor
clc
(bad)
push
and
(bad)
cmps
cmc
std
std
cmc
test
sti
dec
jae
inc
imul
jmp
jno
hlt
sub
sbb
bound
inc
out
cmp
dec
cmc
out
je
add
pushf
or
xchg
int
and
out
jnp
aad
shl
addr16
fdiv
sbb
mov
sub
mov
cmp
movups
sbb
add
mov
retf
jo
ror
imul
ins
adc
aad
stos
sbb
add
and
scas
call
add
inc
jl
sbb
pushf
cdq
fisub
pop
dec
aad
or
fs
xlat
push
xchg
les
mov
lds
sbb
rcr
out
in
pop
rol
cmps
in
mov
add
push
clc
pop
pusha
pop
inc
fs
cmp
pop
cmc
das
add
js
pop
cmp
test
sub
sbb
in
ss
xchg
cmps
sub
mov
jbe
lahf
(bad)
xor
js
pop
cmp
(bad)
pusha
sbb
cwde
xor
rcr
imul
adc
dec
dec
cmps
or
jecxz
adc
jns
adc
mov
push
out
xchg
xchg
ja
in
pop
mov
or
sbb
sar
je
dec
or
or
cmp
ins
mov
test
and
mov
out
mov
out
dec
sub
mov
mov
sbb
dec
hlt
es
imul
or
lahf
ret
adc
xchg
jg
xor
jle
mov
push
lods
fdecstp
mov
push
movs
out
push
loopne
int
inc
in
(bad)
xchg
(bad)
sbb
out
pusha
jl
pop
leave
xlat
test
sbb
je
dec
push
fisttp
xchg
jae
push
iret
bswap
xchg
fwait
ss
js
cmc
sbb
push
cmp
push
sbb
jecxz
and
adc
and
fnstsw
cwde
lods
push
lods
(bad)
(bad)
in
aad
jns
mov
add
xor
outs
std
push
je
push
fld
pop
out
ret
mov
mov
add
and
in
imul
xchg
inc
jno
aas
(bad)
xor
ror
mov
jmp
jbe
pop
cld
cmp
repz
xlat
mov
ins
rcl
sbb
fst
cld
imul
jmp
inc
inc
aas
dec
and
jecxz
sar
adc
push
add
push
push
cwde
aam
shl
lahf
ret
lds
add
and
pop
sbb
and
lahf
inc
sbb
add
mov
outs
mov
xchg
out
or
add
cmp
mov
pusha
push
lahf
dec
rol
mov
push
out
sbb
movs
xchg
xchg
dec
xchg
(bad)
lock
push
ret
dec
pop
scas
sub
js
mov
sti
loope
inc
das
fprem1
jp
cli
mov
add
mov
(bad)
jne
pop
lods
(bad)
das
mov
aam
sub
jmp
xor
pop
push
out
jmp
ins
mov
mov
jbe
cmp
retf
mov
or
inc
pusha
mov
jmp
or
or
xor
push
repnz
pop
adc
fidiv
jle
loopne
loopne
xlat
dec
jmp
pop
fs
loop
xchg
sahf
shl
xchg
es
lahf
sar
icebp
(bad)
mov
fidiv
mov
mov
cli
int3
inc
call
jle
sub
jne
sub
mov
mov
fist
xchg
ds
jb
push
inc
mov
in
xlat
iret
rcr
mov
pusha
adc
mov
jae
dec
pop
sbb
ds
inc
loop
test
adc
cdq
inc
out
imul
les
repz
mov
in
fwait
mov
aad
in
xchg
sub
push
movs
mov
daa
lods
inc
inc
in
fstp
rcl
lds
cld
jmp
mov
and
iret
sub
retf
sbb
sub
mov
dec
inc
push
into
fimul
sbb
fidivr
and
mov
ud0
ret
test
jb
into
mov
mov
repz
(bad)
call
dec
or
out
mov
cmp
xor
sub
out
or
pushf
xor
cmp
mov
mov
sti
out
rcr
sti
pushf
daa
pop
pop
sets
mov
cli
cdq
sub
gs
sar
pusha
mov
arpl
imul
mov
fadd
sbb
cmps
mov
cli
cmp
cmp
cmp
out
and
jecxz
hlt
mov
or
cmc
mov
inc
fsub
cmp
inc
ins
in
out
lds
cmp
stos
add
fcmovnb
(bad)
sbb
ret
or
cmp
mov
xchg
arpl
mov
test
test
retf
sub
push
pop
mov
pop
shr
xlat
popa
pop
jecxz
or
dec
mov
icebp
jl
leave
aam
inc
enter
addps
loope
pop
pop
iret
sahf
and
out
into
jl
rcl
mov
ret
mov
push
and
pop
add
jg
mov
cld
push
xchg
mov
xlat
sub
scas
sub
push
jmp
dec
xchg
std
adc
enter
int3
and
xchg
movs
mov
cmp
mov
dec
in
mov
fs
lods
dec
imul
cld
dec
(bad)
mov
or
cmps
rcr
jecxz
push
retf
cmc
les
xchg
lods
fwait
jmp
or
ficomp
dec
lahf
(bad)
(bad)
retf
aas
movs
mov
and
add
jge
out
int3
retfw
cwde
push
in
adc
sub
les
rcl
retf
aaa
push
ror
xchg
xor
add
pop
cwde
sbb
aam
add
enter
aad
and
mov
js
lock
cld
je
or
lock
nop
outs
jbe
cwde
inc
mov
xor
add
call
pop
test
js
fwait
sub
push
fld
das
mov
mov
rcr
hlt
in
cwde
and
inc
jne
je
ss
aam
pop
xchg
xor
or
out
test
xor
fisttp
out
inc
test
fild
aas
lds
sub
push
ret
xchg
imul
icebp
add
mov
ds
mov
out
pop
not
sub
xor
fsub
pushf
sti
out
xchg
mov
adc
jns
imul
pop
sar
push
das
out
xor
cmps
icebp
test
movs
fstp
shr
adc
sbb
pop
sti
xchg
inc
in
push
pop
and
adc
mov
in
rol
(bad)
push
cli
outs
inc
(bad)
mov
mov
xchg
add
movs
cmp
lea
es
push
mov
outs
cmp
xchg
cmp
push
xchg
cmps
imul
fisubr
push
fild
or
dec
aam
xor
fwait
mov
aas
pop
add
repz
and
mov
shl
xchg
fstp
popf
enter
cmp
(bad)
fmul
popf
fld
fistp
or
clc
mov
lahf
adc
add
(bad)
cli
pop
lock
sub
(bad)
mov
dec
adc
sbb
clc
cmp
jmp
or
inc
hlt
imul
(bad)
mov
fbld
jmp
hlt
movs
adc
dec
sti
(bad)
adc
dec
les
daa
sbb
xchg
lock
push
mov
or
jp
icebp
retf
call
sbb
xor
(bad)
jne
aas
rcl
test
cs
push
(bad)
stos
fisttp
sub
ror
pop
repnz
stc
or
popa
add
cmp
jmp
mov
adc
js
cmp
push
lahf
ja
push
dec
outs
test
pop
pop
(bad)
das
push
cmp
mov
xor
es
sbb
scas
pop
adc
inc
aam
xchg
call
outs
cmp
mov
adc
cmp
or
sub
pop
jecxz
loope
repnz
not
pop
lea
fisubr
sahf
jge
rol
aam
xor
fidiv
movs
jp
icebp
nop
xchg
fistp
push
mov
push
mov
mov
or
cmp
xchg
mov
les
movs
lahf
sbb
sbb
sub
sbb
jnp
push
sub
scas
out
(bad)
add
fsub
pop
pop
stc
xor
dec
outs
stc
xor
sub
mov
clc
cvttps2pi
dec
mov
repnz
ss
test
push
popf
xchg
aad
(bad)
leave
xchg
pop
pusha
xchg
test
jecxz
cs
and
jp
xlat
pop
jns
push
push
inc
fs
mov
xor
or
hlt
jnp
pop
mov
pop
or
test
jmp
mov
cmps
xor
(bad)
adc
lods
test
loopne
aam
dec
xchg
push
iret
adc
inc
div
dec
cdq
xlat
sbb
(bad)
dec
adc
jae
fcom
push
lds
dec
push
jne
call
je
movs
repz
add
rcr
and
aaa
adc
xchg
cmc
ss
or
in
jmp
sub
retf
test
stos
push
mov
mov
push
mov
scas
(bad)
fist
and
imul
add
mov
mov
sub
push
dec
mov
jmp
and
lods
push
cdq
cmp
and
jb
jno
add
movs
sbb
shl
cs
mov
jecxz
jo
pop
xchg
mov
xchg
mov
test
popf
xor
lock
adc
push
add
fnsave
xchg
inc
pop
dec
pusha
int3
sar
jle
loope
in
into
dec
sti
rcl
pop
lahf
or
jecxz
out
xchg
push
xchg
dec
xlat
call
sbb
les
push
dec
xchg
(bad)
call
je
sub
xchg
jno
sahf
icebp
daa
adc
stos
and
cmp
xor
mov
dec
fs
pop
sbb
rol
fnstcw
sbb
and
cmp
xor
dec
mov
push
les
ins
test
shr
mov
enter
sub
add
bound
jge
sub
lahf
mov
mov
bound
cmp
mov
jae
std
sub
sub
adc
sti
add
pop
aam
aad
rcr
cdq
lods
leave
movs
add
xor
inc
outs
or
arpl
cmps
adc
lock
(bad)
scas
jo
mov
adc
mov
mov
fisub
xchg
ror
xor
movs
ins
shr
sti
jae
adc
sub
imul
stos
push
add
dec
stos
aaa
sbb
adc
sbb
call
outs
and
(bad)
rcr
xchg
mov
imul
xchg
(bad)
es
std
out
jg
dec
out
add
daa
fidiv
cmp
xchg
ja
sbb
stc
mov
inc
xor
retf
call
inc
adc
fisttp
lahf
daa
imul
sub
or
inc
pop
int3
jecxz
xor
push
sub
mov
daa
test
pop
ds
and
arpl
or
pop
cmps
jns
scas
imul
iret
lock
inc
ror
push
scas
outs
in
jmp
adc
mov
sbb
sub
jge
out
ins
sub
and
repnz
xchg
lds
jge
add
gs
xchg
(bad)
push
or
dec
mov
cld
test
in
xor
cld
shl
adc
dec
mov
and
mov
pop
jecxz
out
and
jne
push
or
movs
call
test
xchg
test
push
cmps
jmp
loope
das
lods
cdq
inc
xchg
test
mov
inc
je
test
pop
dec
sub
jne
xchg
mov
pushf
xchg
(bad)
dec
mov
jns
sbb
pop
jmp
push
stc
mov
movs
outs
nop
repz
out
fist
sbb
sub
int
es
lds
outs
dec
std
xor
lods
jns
hlt
cmp
push
and
movs
fs
dec
push
dec
cmp
xor
mov
mov
mov
jge
pop
int
fs
and
mov
test
jecxz
fmul
or
retf
fadd
jns
push
sti
adc
or
sbb
mov
std
shl
inc
outs
xchg
icebp
out
cs
les
lahf
test
psadbw
(bad)
fsubp
bound
pusha
jge
not
mov
mov
xchg
inc
lea
xchg
jns
in
add
sbb
pop
inc
call
inc
add
push
loope
cld
mov
stc
ret
sbb
inc
pushf
in
mov
or
mov
xor
sub
xchg
xor
cli
and
mov
popf
out
jle
mov
fcomp
push
daa
mov
bound
pusha
adc
into
dec
loope
mov
(bad)
pop
aam
jbe
jmp
fwait
sar
cmp
ret
rol
ins
mov
ret
dec
std
mov
(bad)
bound
jmp
mov
pop
lods
mov
push
sar
std
repz
add
ror
out
mov
imul
cmps
test
rcr
cmps
cmp
out
dec
shl
adc
jo
call
cmp
xchg
dec
mov
mov
int3
xor
movs
sbb
push
jl
xchg
test
xor
sahf
mov
scas
adc
mov
jl
(bad)
outs
dec
and
rcr
adc
fistp
fdiv
in
xchg
cwde
push
inc
sub
cmps
hlt
icebp
sbb
xchg
scas
jns
sar
stc
je
cmp
test
or
loope
cs
xor
jb
xchg
aaa
xchg
(bad)
nop
pop
cwde
and
test
cmps
xor
lea
xchg
push
push
mov
ins
ins
hlt
mov
fs
shl
in
xor
jno
enter
xor
sbb
test
xchg
rol
js
loop
xor
ret
inc
dec
mov
cwde
int
jp
jle
rcr
daa
cmp
sub
scas
pop
out
jp
sub
lahf
xchg
stos
in
xchg
sbb
hlt
xchg
retf
push
int3
daa
out
imul
jae
xchg
inc
push
outs
jg
pushf
mov
ds
xchg
push
cld
jmp
(bad)
cli
imul
fstp
or
push
mov
scas
fld
das
cmp
rol
fisubr
or
mov
sbb
or
imul
imul
pop
std
and
pop
arpl
pushf
outs
aaa
pop
mov
(bad)
mov
jne
and
ins
xor
stos
push
and
ja
scas
mov
stos
mov
pusha
add
test
or
ror
dec
adc
push
push
sub
outs
pusha
(bad)
mov
jb
sbb
movs
test
dec
xor
xchg
int3
repnz
mov
dec
and
shl
stc
fwait
cmp
add
inc
inc
inc
mov
cmp
inc
fldenv
jae
repz
dec
or
inc
jge
wbinvd
aas
cmp
imul
fidiv
pop
es
dec
and
or
xlat
(bad)
and
xor
shl
xor
aas
movs
mov
sbb
lahf
inc
sahf
daa
xrelease
xchg
ja
pop
mov
jg
mov
cmp
add
repnz
cmps
cmps
push
aas
mov
dec
cmps
push
repnz
or
adc
and
mov
dec
sbb
cmp
dec
cmp
or
push
mov
adc
clc
dec
ja
cmp
jo
iret
cmps
test
mov
cld
pop
lods
pop
hlt
loop
xchg
mov
test
cmp
jg
in
inc
popa
ret
cdq
repz
cld
jg
cmps
jbe
push
jmp
pop
out
test
lea
push
or
mov
or
cli
mov
sbb
fucomip
leave
ret
js
sahf
push
test
and
iret
retf
mov
inc
fcmovu
inc
fnstsw
xchg
shl
cmps
and
mov
pop
(bad)
push
sbb
pop
mov
mov
mov
pop
jmp
xchg
aad
mov
mov
push
cli
jbe
stos
sub
push
adc
outs
jl
loope
mov
cmp
cmp
lods
sbb
stos
nop
cmp
mov
mov
inc
pushaw
push
add
es
les
outs
or
cli
push
mov
jne
out
mov
retf
push
sub
fidiv
scas
pop
push
xchg
cmp
ret
repnz
inc
pop
mov
repnz
add
xor
aas
test
lock
add
mov
add
aad
xchg
(bad)
aas
and
jg
jbe
movs
mov
push
mov
sub
mov
sub
icebp
test
js
aas
(bad)
or
out
fdivr
dec
aam
sub
retf
add
or
jmp
nop
neg
(bad)
or
(bad)
js
jns
mov
aad
retf
je
sub
(bad)
mov
add
push
pop
sub
es
adc
cmp
sub
and
ins
jns
lahf
pop
mov
in
pop
pop
add
inc
push
mov
jbe
fisub
movs
retf
dec
jecxz
or
push
push
mov
movs
pop
loope
(bad)
scas
fsub
cld
stos
out
mov
iret
stc
mov
xchg
mov
test
test
dec
jmp
popf
stc
adc
jp
hlt
and
sbb
xor
les
addr16
push
cmp
or
push
mov
add
xchg
shl
pop
xchg
adc
cmova
push
push
xchg
(bad)
jmp
and
push
and
daa
cmps
mov
ins
cdq
push
aaa
and
and
pop
adc
xor
mov
pushf
jne
pop
or
push
adc
loopne
cmps
push
dec
push
cmp
mov
pop
dec
add
cli
popf
les
mov
jp
mov
mov
repz
sbb
in
cdq
sub
ja
in
cmp
les
sub
dec
bound
cmp
xor
inc
lea
cs
xor
hlt
xor
stc
and
idiv
adc
stos
retf
adc
(bad)
cmp
dec
cmp
jne
aaa
nop
inc
fcmovb
js
xor
mov
shl
sbb
in
sbb
retf
ret
jnp
jl
and
fsubr
xchg
jecxz
sbb
push
movs
aas
shl
ds
std
loope
jle
pop
sub
jne
bound
mov
or
fwait
sbb
and
clc
inc
in
mov
push
sbb
sub
(bad)
mov
push
mov
mov
add
aas
cmp
data16
adc
xor
fisubr
int
mov
pop
enter
pop
stos
fiadd
inc
xchg
aad
adc
loop
mov
rcl
push
mov
stc
dec
cmc
retf
add
scas
iret
jecxz
push
or
adc
push
or
inc
in
lds
ja
test
dec
or
jp
out
neg
mov
rcr
push
mov
das
mov
add
xor
mov
ret
jb
xor
xchg
xchg
jbe
movs
aas
retf
dec
xor
push
xchg
dec
cmp
in
jmp
jnp
jae
fcmovu
(bad)
std
adc
xor
xor
xor
aad
xor
fwait
or
add
cmps
mov
xchg
bound
push
fcmovu
add
fwait
cld
repnz
fst
xchg
add
fst
mov
pop
add
push
mov
das
mov
nop
fbld
add
push
aas
fistp
adc
jbe
lea
jb
xchg
or
lock
push
or
dec
inc
aad
push
cmc
aas
mov
and
dec
push
add
rcr
lods
mov
ror
jmp
sbb
inc
out
sahf
sahf
cmp
mov
jp
inc
add
cmp
(bad)
daa
aaa
mov
scas
repz
cmp
sub
stos
xor
dec
mov
add
retf
lds
and
add
in
cdq
xor
mov
and
shr
or
ja
mov
xchg
ret
and
add
and
aad
ins
inc
outs
jno
ds
fidiv
and
in
push
pop
ret
dec
cmps
lea
pop
cdq
(bad)
xchg
pop
and
icebp
inc
ss
call
xor
inc
aas
out
pop
je
sub
xlat
mov
lods
aas
stc
or
jp
mov
fst
lds
jle
mov
es
push
xchg
adc
es
mov
jecxz
add
ret
adc
adc
ja
mov
sbb
mov
xor
add
and
push
xchg
int3
inc
mov
dec
imul
mov
iret
in
add
mov
fild
cmp
inc
pop
xchg
inc
adc
stc
fs
mov
add
sbb
pop
jmp
cmp
cmp
std
int
dec
jnp
push
test
ds
es
mov
and
push
ja
stos
fisubr
mov
mov
xchg
jge
in
inc
xor
pop
push
sbb
or
mov
pop
mov
dec
sub
mov
scas
shr
push
ror
jns
retf
mov
(bad)
xor
out
inc
sub
iret
bound
push
xor
cmps
inc
xor
and
inc
push
push
sti
retf
xchg
cdq
call
in
and
fsubr
cmp
(bad)
push
push
outs
in
pusha
shr
addr16
sbb
mov
jnp
or
test
mov
push
jns
sbb
jp
sbb
iret
push
jge
out
jo
aas
add
inc
ret
pushf
out
dec
cld
xchg
gs
sbb
fdivr
add
daa
ret
test
lea
or
push
retf
stos
mov
lock
fisub
int3
xchg
mov
idiv
sbb
retf
das
mov
mov
test
gs
pop
pop
pop
aaa
ficomp
jecxz
rcl
inc
inc
dec
in
and
jp
jmp
mov
cli
jmp
jne
in
test
xlat
xchg
arpl
cmp
and
std
lock
mov
or
and
adc
neg
xchg
xlat
cli
dec
cmc
addr16
pop
ficom
and
and
inc
xchg
mov
cmp
dec
ror
pop
jb
mov
js
addr16
mov
fnstsw
fldcw
push
mov
cmps
lds
mov
cmp
sub
mov
test
and
rcl
jmp
cmp
push
ja
mov
xor
pop
cwde
ss
sub
addr16
mov
in
and
jg
add
cs
inc
sub
ret
les
pop
mov
call
mov
in
pop
xchg
ja
cmp
inc
mov
inc
inc
mul
inc
jecxz
mov
jecxz
test
jecxz
push
mov
inc
loop
push
or
inc
push
pop
imul
bound
pop
mov
push
outs
(bad)
fcmovnu
aam
push
scas
or
xor
dec
adc
icebp
not
or
jb
mov
jae
loope
or
mov
dec
lea
xchg
dec
cwde
sub
add
das
adc
jge
lock
out
jp
std
enter
into
inc
jne
mov
ror
dec
pushf
cld
push
mov
je
repz
lods
push
mov
mov
lea
minps
xchg
xlat
mov
cmp
jnp
xor
das
mov
ffree
mov
push
sub
inc
rcr
sbb
into
adc
or
shl
cs
mul
mov
and
pop
fidiv
das
pusha
hlt
cmp
cmc
and
mov
cs
jae
fldcw
adc
call
(bad)
rcl
test
ins
jl
cdq
xchg
add
(bad)
xor
xchg
xchg
mov
lds
out
popf
addr16
mov
or
mov
jno
mov
inc
or
jns
cwde
cmps
fsubrp
jmp
sbb
in
mov
cmp
fidivr
xor
or
int3
push
push
xchg
mov
cmps
lods
xchg
sub
xchg
test
cli
push
push
div
sar
cmps
popf
xchg
cmp
cmp
mov
jp
push
stos
dec
ins
jg
inc
cmp
dec
shl
daa
sbb
daa
mov
sub
adc
scas
mov
in
xor
repz
jp
cmp
outs
hlt
call
and
sbb
into
mov
xchg
test
push
add
cmp
xchg
inc
outs
pop
cmps
(bad)
das
pop
iret
inc
aad
bound
pop
push
je
mov
ret
cmp
gs
lea
xchg
int
adc
add
dec
bound
push
fwait
pop
ds
movs
jmp
inc
add
gs
mov
rcl
test
call
sub
loopne
pop
mov
fxch
outs
jmp
dec
and
push
cmp
gs
stos
clc
scas
jns
lea
or
sahf
clc
jge
pusha
xchg
mov
push
inc
in
mov
push
sub
cmps
inc
scas
pop
adc
pop
ds
int
jns
jno
(bad)
push
cdq
xchg
daa
dec
pop
popf
xor
jo
test
fwait
enter
xor
jnp
cmp
pop
dec
retf
add
cli
jmp
fwait
jmp
jmp
mov
add
into
xor
ins
jle
mov
popa
inc
fld
and
(bad)
sbb
and
dec
and
push
push
les
cmp
jnp
in
push
out
in
out
stc
dec
aas
dec
imul
or
add
mov
bnd
clc
outs
xchg
xor
mov
movs
popf
in
pop
(bad)
(bad)
std
sbb
(bad)
mov
jnp
and
std
dec
scas
scas
pushf
stc
push
mov
adc
fwait
jle
mov
add
(bad)
stos
xlat
imul
je
cmp
in
clc
push
xchg
int3
xor
das
xor
xor
and
jne
jp
xor
stos
jb
sbb
daa
pop
das
xchg
push
fs
pop
push
sbb
out
je
and
pop
xor
or
repnz
ins
clc
and
mov
das
adc
in
cmp
mov
dec
pop
lods
mov
mov
pop
adc
fisttp
inc
add
movs
sub
(bad)
adc
fcomp
and
int3
push
in
int3
adc
ins
or
test
or
fdiv
mov
mov
adc
test
(bad)
pop
arpl
mov
loopne
shr
fnstcw
cdq
mov
and
mov
mov
out
pop
int3
aam
pop
push
adc
add
repnz
adc
push
out
shr
sti
push
xchg
es
xor
push
fist
in
inc
xor
pop
mov
jno
(bad)
sbb
scas
stos
stos
retf
push
or
mov
mov
or
ja
mov
xchg
lahf
cmps
cmp
(bad)
outs
mov
cmp
fwait
ins
lock
jmp
stos
ror
psrad
gs
adc
xchg
push
pop
lea
stos
frstor
jne
mov
cdq
sub
inc
addr16
stos
(bad)
(bad)
std
mov
mov
or
in
mov
je
jmp
cld
lock
into
popa
sahf
stos
and
int3
rol
mov
inc
aam
inc
out
add
popf
lods
daa
int3
push
jle
jae
imul
add
push
fs
add
ins
cmp
xor
push
sahf
ins
push
movs
xchg
out
add
and
dec
and
mov
enter
push
mov
and
pop
pushf
aaa
mov
dec
into
sahf
inc
imul
ja
cs
aad
je
cli
sbb
das
inc
jo
jno
leave
mov
ret
add
movs
hlt
cmp
ss
icebp
sahf
aas
cmp
gs
(bad)
popa
cmps
push
sahf
push
adc
sbb
xlat
loopne
pop
(bad)
test
adc
retf
out
stos
in
dec
mov
mov
xchg
xor
mov
push
arpl
repnz
adc
test
nop
stos
lds
pop
neg
hlt
mov
bound
rol
movs
jecxz
cmp
pop
hlt
xor
and
dec
or
and
stos
stc
(bad)
mov
or
mov
push
bound
mov
fdiv
scas
xlat
or
aas
into
mov
cmp
shl
jne
mov
adc
and
jae
mov
movs
add
mov
jno
xchg
xlat
mov
and
jae
test
sub
ret
lea
fcom
push
stos
ret
jne
call
mov
call
add
pop
cs
add
jp
ja
cmps
xor
and
popa
sub
cld
ins
sbb
cmp
pop
xchg
dec
popa
mov
imul
icebp
stos
outs
loop
mov
sub
inc
adc
sbb
icebp
cmp
jl
ds
fnstsw
xlat
imul
sbb
jmp
or
push
sbb
cmp
loopne
arpl
cmp
jmp
test
push
dec
adc
xor
and
mov
cmp
mov
les
cmp
xchg
adc
aad
mov
das
gs
cdq
mov
das
data16
repnz
int3
mov
cdq
cmps
add
adc
mov
ins
ds
cwde
imul
shr
jl
jmp
xchg
pop
mov
mov
inc
push
lods
push
mov
in
mov
(bad)
div
inc
mov
dec
cmp
jnp
mov
cmp
cmp
test
xlat
mov
mov
aaa
pop
inc
cmp
lea
cli
push
ins
jne
mov
fist
shr
cwde
pop
(bad)
push
sbb
jnp
add
fsub
sbb
out
pop
addr16
mov
add
dec
jb
scas
or
mov
pop
pop
adc
cdq
mov
xchg
dec
popa
nop
lock
loop
ret
(bad)
pushf
xor
pop
daa
pop
xor
pop
cld
xchg
scas
push
mov
test
adc
mov
data16
loopne
mov
sbb
mov
jne
lahf
enter
mov
es
aad
xchg
push
mov
fwait
adc
pop
jge
shr
mov
push
stos
lods
test
or
fwait
aam
adc
mov
mov
xlat
mov
mov
mov
sbb
push
imul
lods
or
addr16
push
cwde
shl
jnp
iret
and
gs
leave
(bad)
mov
fdivp
add
ss
ret
scas
fwait
shl
cld
fsubrp
mov
daa
xor
sbb
pop
inc
jmp
loopne
bnd
stos
xchg
adc
rcr
sbb
retf
dec
pushf
pushf
jmp
xchg
or
mov
inc
dec
pop
cmps
push
ins
sbb
stos
(bad)
xor
add
add
jg
das
and
add
add
adc
push
dec
xchg
leave
jle
mov
loopne
std
clc
movs
es
or
ins
mov
mov
ror
push
out
in
int
outs
lea
pop
enter
mov
add
fstp
sahf
ret
xor
mov
inc
dec
pop
mov
ret
std
ins
movs
out
jbe
test
jo
loopne
fidivr
inc
cmp
jbe
mov
jb
or
adc
adc
xchg
(bad)
js
jp
dec
pusha
jg
mov
mov
xchg
pxor
inc
push
retf
clc
sbb
jl
adc
inc
xchg
gs
and
xchg
neg
pop
sbb
test
push
dec
sti
mov
and
idiv
lds
sub
retf
cs
inc
leave
imul
cs
fisubr
les
dec
pop
xor
pop
(bad)
out
mov
adc
xor
or
cmp
out
mov
and
jle
out
jne
cmps
ins
in
or
cmp
rcr
push
fmul
movs
dec
push
mov
sbb
mov
in
movs
popa
pop
pop
xor
mov
xor
hlt
cmp
ss
inc
sbb
int3
or
pusha
add
jo
stc
push
sub
mov
jge
int
movs
cmps
xlat
dec
cmp
xor
cmp
or
fwait
mov
pop
out
inc
sbb
outs
call
int
and
mov
push
mov
push
inc
loop
xor
addr16
mov
mov
cmp
sub
inc
pop
stc
inc
fistp
sub
inc
fisub
aas
xor
mov
xchg
mov
pop
inc
push
repnz
loopne
mov
out
add
adc
xchg
out
push
sub
cmp
test
push
call
out
mov
push
push
(bad)
nop
outs
adc
popf
jnp
and
xor
scas
sub
(bad)
loopne
das
or
cdq
in
pop
loopne
retf
pop
inc
xor
or
sub
stos
dec
sbb
call
(bad)
cmp
xor
and
sbb
mov
mov
xor
sub
sbb
adc
mov
jg
or
(bad)
xor
shl
in
mov
out
not
ins
pop
std
enter
add
cmp
dec
jno
(bad)
in
ins
(bad)
and
sahf
clc
sub
imul
mov
pop
adc
popf
test
xor
cmps
(bad)
in
in
push
mov
call
outs
fs
(bad)
xchg
jb
popf
jne
add
fld
frstor
mov
xlat
jecxz
pop
jns
adc
sar
inc
sbb
sbb
in
iret
adc
adc
fbstp
in
push
fadd
addr16
mov
arpl
jg
test
inc
mov
push
cld
pop
or
bnd
cwde
rcl
pop
and
aaa
aas
cld
or
jle
daa
rol
in
inc
xchg
and
dec
mov
adc
frstor
push
es
jns
and
xchg
lods
adc
fst
dec
cmp
retf
shl
aas
int3
add
and
push
pop
dec
mov
lods
push
jle
cmp
xor
sbb
push
sti
jne
enter
jne
rcr
sub
fcomi
jmp
mov
ins
dec
les
cli
cmc
jecxz
mov
in
(bad)
dec
dec
push
ins
idiv
ds
loop
sub
sti
xor
cwde
sahf
mov
jmp
movs
enter
daa
adc
and
inc
movs
inc
retf
test
xchg
push
fisub
adc
or
je
xor
sbb
mov
dec
stc
push
pop
aad
loopne
das
and
repz
sbb
or
and
pop
jg
loopne
and
push
inc
xchg
int3
stos
movs
jge
xor
xchg
ror
jb
sbb
or
mov
jle
push
or
popa
pop
mov
push
int3
or
dec
idiv
inc
mov
jge
pop
das
jbe
sbb
ret
push
(bad)
adc
icebp
cmps
adc
lods
add
pop
stos
push
inc
fisub
dec
in
sbb
sbb
inc
ins
pop
loopne
cmps
lods
in
movs
xchg
add
pop
xchg
and
inc
xchg
imul
push
or
fdiv
mov
jnp
call
shl
mov
inc
mov
fsubr
int
cmp
lods
pop
sahf
sub
pop
dec
or
lods
push
pop
cmp
js
inc
dec
lea
xchg
fidivr
cmp
sbb
push
or
sub
xchg
jns
iret
sahf
ss
outs
sahf
fdivr
mov
pushf
into
mov
inc
cs
cmps
pop
pop
adc
retfw
cmp
stos
pop
int
pusha
in
ss
ds
or
movs
lock
pop
pop
mov
xor
sbb
xor
pop
out
pop
xchg
out
dec
retf
in
enter
fimul
adc
xchg
ret
dec
repz
jae
mov
mov
mov
jbe
popf
popa
test
call
into
daa
xlat
repnz
pop
pop
mov
pop
dec
popa
xchg
xlat
ja
out
sbb
and
ins
lods
ret
(bad)
jbe
adc
jmp
adc
pop
in
add
mov
popf
js
ins
mov
mov
lahf
xchg
jbe
jmp
dec
in
pop
pop
jae
ror
cmps
and
test
sub
jmp
jg
mov
push
aaa
addr16
push
lock
mov
sbb
out
dec
push
cli
ss
jle
shr
repnz
xchg
movs
out
and
xor
les
dec
xchg
out
sub
pop
bt
mov
mov
mov
fnsave
and
push
mov
ret
or
sbb
or
xor
add
leave
loope
popa
loop
push
or
pop
xchg
cdq
add
clc
test
icebp
jle
es
inc
stos
push
mov
in
mov
ins
test
push
(bad)
in
mov
daa
fbstp
loop
test
call
aam
or
pop
xchg
pushf
push
(bad)
adc
mov
pop
mov
outs
mov
iret
lds
inc
and
dec
test
fistp
in
pop
retf
sbb
cwde
daa
(bad)
imul
es
stos
(bad)
aad
add
pop
dec
retf
out
sub
hlt
or
inc
popa
sti
inc
xchg
fwait
mov
push
cmp
or
in
adc
or
(bad)
jnp
iret
fcmovb
movs
push
xlat
adc
(bad)
sbb
popf
ins
into
dec
and
jne
(bad)
loopne
dec
into
jge
fcmovnbe
es
repnz
pop
ss
pop
push
dec
jmp
mov
mov
test
(bad)
xlat
aad
pop
icebp
push
add
sub
shl
(bad)
mov
outs
js
xchg
inc
sub
cli
es
add
adc
out
movs
mov
push
fadd
add
sub
shl
mov
add
outs
fidiv
dec
aam
fwait
ja
mov
adc
mov
add
inc
ror
enter
into
pop
or
mov
test
cmps
push
les
icebp
ret
and
or
loope
pop
out
sub
add
retf
cmps
xchg
add
imul
sti
std
fmul
inc
arpl
pmuludq
outs
iret
mov
dec
mov
ins
repnz
inc
cmc
pop
jmp
ja
aam
jb
pop
retf
push
and
xchg
dec
fist
inc
scas
jns
sbb
jnp
stc
fisttp
pusha
adc
addr16
xchg
xlat
add
iret
inc
daa
mov
bnd
cld
(bad)
mov
int3
xchg
cdq
adc
test
cmps
fiadd
ror
sub
enter
pop
mov
icebp
sub
(bad)
and
lea
das
cmps
lock
lods
adc
sti
and
inc
ss
push
and
sub
mov
cmp
mov
and
mov
mov
adc
daa
shl
dec
xor
xchg
dec
jne
mov
push
data16
call
or
jb
mov
shl
cmp
arpl
push
pop
jmp
cmp
cmps
pop
sub
pop
(bad)
mov
mov
and
lds
scas
call
jge
push
fcom
cmp
mov
inc
or
adc
dec
inc
xor
int
mov
or
lock
nop
fild
clc
ins
and
mov
sub
sub
pop
push
nop
ja
out
jecxz
xor
mov
mov
fild
add
bound
add
cmc
jmp
retf
fs
(bad)
cmc
inc
stos
pop
jmp
stos
lea
cld
add
in
jmp
scas
inc
nop
lds
adc
xor
add
push
adc
scas
nop
xchg
fnstcw
test
inc
xor
cmp
arpl
or
cdq
cmps
and
sbb
add
dec
xchg
and
add
fistp
xor
inc
dec
mov
mov
add
adc
sbb
push
fimul
mov
mov
sub
cs
sbb
dec
pushf
in
add
inc
cmps
and
into
pop
push
or
aaa
aam
ret
into
retf
test
loope
ror
and
(bad)
jp
push
jmp
aaa
dec
lods
mov
push
push
sub
aam
and
sub
jg
sbb
call
mov
scas
fcmovnb
adc
ret
fprem1
out
sub
mov
idiv
xchg
in
mov
inc
data16
(bad)
mov
xor
xchg
dec
cmps
dec
xor
xchg
sti
loope
inc
sub
iret
and
lds
out
icebp
gs
sub
xor
icebp
add
cwde
xchg
or
call
mov
or
imul
adc
aaa
or
mov
(bad)
out
les
mov
sub
shr
stc
outs
aas
in
mov
xor
cmp
pop
into
sub
lea
cmps
add
mov
push
mov
sub
cmp
call
out
ins
push
ret
add
movs
jg
ss
loopne
mov
add
movs
cmc
mov
and
cmp
test
div
repz
mov
and
stos
addr16
pop
mov
jmp
mov
mov
and
sbb
shr
sub
(bad)
sub
and
push
xchg
les
xor
adc
xor
retf
pop
cdq
in
fsubr
and
dec
push
mov
sbb
mov
loopne
cmp
pop
addr16
(bad)
test
mov
test
cmp
pop
aam
fsubp
in
adc
mov
pop
sbb
and
ret
in
sbb
and
fsubr
repz
idiv
adc
arpl
mov
(bad)
into
dec
test
stos
call
mov
dec
leave
outs
imul
pop
shr
push
or
or
jmp
(bad)
test
data16
outs
xchg
xchg
or
or
test
inc
or
in
out
retf
cmp
push
mov
mov
lds
jne
jp
into
xchg
sub
or
inc
push
fadd
dec
jmp
mov
inc
dec
retf
fdiv
and
jb
int
pop
out
and
xchg
arpl
fist
adc
pop
jbe
loope
mov
mov
sbb
mov
inc
inc
jge
push
sub
and
add
(bad)
clc
(bad)
das
pop
xchg
retf
sub
sahf
(bad)
mov
xor
xchg
lock
addr16
or
push
cmps
jbe
and
(bad)
pop
ins
adc
cmp
mov
mov
ja
mov
daa
(bad)
xchg
ss
xor
aad
sar
xchg
xor
mov
js
inc
and
add
pop
js
dec
dec
and
ret
sti
mov
xchg
inc
push
lahf
das
pushf
mov
mov
imul
sub
mov
cld
std
and
or
mov
call
adc
loopne
ins
hlt
jnp
pop
fbstp
mov
cmp
mov
mov
inc
cmp
lds
(bad)
adc
dec
stos
repz
test
clc
mov
dec
outs
jo
frstor
push
sub
pop
inc
xchg
jp
dec
inc
sahf
aad
mov
movs
mov
sub
std
mov
cmp
scas
pop
repnz
stc
fisttp
push
inc
xchg
and
cld
sti
xor
int
dec
dec
imul
push
ds
sub
adc
xlat
mov
imul
cmp
pop
(bad)
idiv
or
pop
int
push
pop
les
cmp
dec
pop
add
adc
daa
xchg
push
mov
pop
xchg
push
ret
pop
pop
sbb
adc
push
push
inc
cmc
mov
loopne
mov
das
inc
adc
lds
xchg
xchg
nop
mov
jb
push
xchg
cmp
cmp
mov
push
jnp
clc
shl
jnp
data16
mov
xchg
mov
add
inc
xchg
sbb
movs
dec
inc
sbb
mov
imul
std
nop
retf
int
pop
sbb
xor
push
sbb
push
out
call
pop
stos
rcl
push
dec
call
lahf
repz
es
movs
fs
add
push
push
sahf
inc
dec
gs
push
jecxz
dec
gs
or
stc
jmp
jmp
enter
(bad)
dec
mov
popf
adc
jno
aad
sub
mov
test
test
fisttp
adc
sti
dec
cld
push
cwde
stos
outs
cmp
jge
adc
pop
js
int3
rol
or
mov
rol
sbb
adc
fbld
push
jmp
pop
das
mov
in
ret
mov
mov
(bad)
loopne
jl
add
mov
dec
xchg
in
adc
lock
sahf
ret
enter
scas
stos
out
out
imul
test
pushf
add
std
mov
sub
shl
lock
pop
(bad)
cmc
add
pusha
mov
sti
cwde
inc
inc
fs
out
ja
jle
or
xlat
lahf
aam
or
ror
pop
push
(bad)
pop
pop
mov
adc
push
or
add
cmp
sbb
cmp
fs
mov
pop
fs
cli
aam
adc
xchg
lock
ret
iret
sub
add
xchg
pop
cdq
ret
in
xchg
pop
push
loop
pop
arpl
and
pop
pop
in
aas
push
xor
xchg
xchg
imul
bound
ja
adc
cmps
ins
call
cmp
mov
and
test
fs
cwde
fst
adc
mov
clc
pusha
pop
mov
sbb
(bad)
stos
sahf
stos
sub
mov
test
pop
cdq
pop
sub
mov
inc
push
mov
ret
dec
mov
mov
mov
hlt
ss
and
sbb
out
and
(bad)
cli
sub
cmp
popa
int
hlt
enter
push
es
mov
shl
mov
cdq
dec
mov
movs
mov
stos
loop
push
loop
call
lahf
cmc
mov
mov
push
mov
cwde
xor
lods
lods
ret
push
jo
stc
sub
cld
add
lods
hlt
or
mov
dec
sar
fnstenv
mov
call
ret
into
mov
lods
test
in
jnp
jmp
into
leave
pop
push
xchg
rcr
movs
fnstenv
sub
pop
paddusb
scas
or
jl
xor
push
add
enter
ds
enter
or
cmp
or
mov
mov
xor
jg
or
loopne
inc
or
pop
rol
test
aam
in
in
gs
sbb
es
test
lock
or
aas
out
xor
out
adc
lods
mov
xor
and
mov
sub
pop
imul
into
test
xor
mov
adc
sub
adc
ret
push
jle
cmps
xor
shl
rcr
dec
jp
push
outs
cmp
inc
cmp
call
dec
mov
rcr
jg
jp
mov
dec
adc
shr
rcr
push
arpl
pusha
daa
in
pop
shl
iret
push
sbb
jae
in
xchg
pop
into
data16
sbb
adc
pop
jle
dec
popf
pop
dec
pop
xchg
(bad)
push
loop
mov
(bad)
out
jae
cmp
fnsave
loopne
add
fstp
call
and
adc
call
sbb
(bad)
and
std
test
(bad)
sbb
jnp
mov
stc
pop
adc
mov
pop
ret
mov
test
adc
int3
jmp
dec
pop
neg
scas
sbb
xchg
adc
enter
dec
lods
and
xlat
dec
mov
call
cwde
sub
sub
mov
cwde
sbb
cdq
mov
mov
out
inc
sub
mov
ret
test
sahf
pushf
jns
adc
out
mov
outs
repz
dec
fsub
add
out
rcl
inc
and
arpl
inc
adc
fs
in
adc
out
jmp
xor
aas
inc
jge
or
push
mov
mov
push
imul
call
call
iret
mov
xor
div
ret
cmp
push
call
add
test
iret
inc
sub
cwde
outs
dec
adc
xor
fs
jle
add
adc
mov
rcl
cdq
dec
xor
xchg
and
or
push
aas
inc
lea
in
shr
int
push
xor
(bad)
or
in
push
xchg
pop
jnp
in
pop
lods
jle
cmp
in
and
xor
inc
je
add
jp
dec
js
push
bound
dec
inc
cmp
add
jnp
mov
js
dec
rcr
lea
xlat
and
dec
xor
or
pushf
and
pushf
inc
adc
gs
lea
and
out
ret
ficom
(bad)
lea
mov
popa
mov
jge
jle
shl
es
xchg
dec
adc
shl
mov
xchg
or
call
fcom
vmovaps
gs
out
ss
aam
addr16
(bad)
call
fild
jle
ins
lods
out
outs
cli
outs
psraw
jge
pop
cdq
imul
out
ss
lock
pop
push
jge
pop
jge
xchg
out
add
dec
arpl
dec
out
jo
mov
mov
test
loop
and
loop
fcom
mov
fisub
shl
ret
mov
in
movs
movs
add
into
pop
or
xchg
pop
ds
jmp
lods
leave
push
jmp
data16
and
es
lods
push
daa
(bad)
jg
sti
pop
retf
shl
add
push
outs
jge
aad
mov
rol
aad
je
out
or
xchg
push
xchg
call
test
scas
sbb
sbb
ss
daa
cs
repnz
pushf
outs
mov
popf
test
jp
cmps
push
mov
add
push
lods
repnz
pop
test
xchg
push
into
call
fcomi
inc
or
pop
add
mov
shl
and
imul
dec
ds
into
mov
fld
mov
push
call
cwde
stos
xchg
rcr
test
jecxz
push
call
out
cdq
jecxz
lock
ret
and
adc
jno
push
mov
rcr
test
add
cmp
aad
adc
jg
mov
mov
aaa
jmp
hlt
sahf
int3
dec
xor
jo
shl
leave
fwait
xchg
xor
enter
jbe
clc
and
xor
cmps
push
scas
gs
xchg
retf
scas
into
je
in
xchg
inc
loop
push
das
(bad)
inc
jmp
mov
pop
cli
xchg
sub
ror
xor
test
xchg
retf
sti
or
arpl
enter
fldenv
je
sub
mov
xor
(bad)
jmp
cmp
xchg
mov
xchg
retf
add
shl
inc
repnz
mov
and
test
jmp
fisub
pop
mov
lock
add
rcr
jecxz
(bad)
cld
or
lods
ja
popf
xor
add
pop
jnp
xchg
sahf
movs
iret
xor
cli
jb
vandps
mov
sbb
jmp
mov
movs
fcom
sub
push
loopne
pop
retf
sbb
out
mov
jp
ret
outs
pop
or
in
xchg
cld
or
xchg
sbb
test
jg
nop
call
sbb
sub
outs
hlt
add
adc
outs
xchg
retf
pop
ret
mov
xor
mov
inc
push
xchg
jo
lock
mov
and
fcom
xor
stos
push
in
(bad)
out
out
aas
test
fisub
movs
outs
dec
retf
imul
repnz
adc
retf
shl
fnsave
push
test
dec
jmp
xor
mov
mov
xchg
mov
or
jp
xchg
jge
out
add
sti
adc
adc
mov
(bad)
xchg
adc
dec
fwait
mov
imul
cmp
rol
retf
sub
test
outs
popf
jle
jg
out
int3
popf
(bad)
in
stos
jae
push
cmp
movs
int3
dec
into
cmp
jbe
pop
out
mov
pop
les
in
push
movs
nop
ja
movs
(bad)
imul
dec
pop
fist
ja
or
mov
in
cdq
mov
pop
iret
dec
push
leave
loop
adc
xlat
test
ds
xor
ret
mov
push
mov
mov
push
sbb
mov
sub
aaa
xor
add
cmps
dec
(bad)
data16
std
push
xlat
and
into
mov
rcr
into
or
push
pop
ja
mov
jne
les
dec
xchg
stos
dec
jno
add
ds
dec
in
mov
mov
inc
push
rcr
fdivr
pop
sbb
dec
aad
leave
es
popf
lock
sahf
jbe
mov
shr
jecxz
outs
or
lods
dec
mov
inc
stc
repnz
(bad)
rcl
or
sbb
rcr
outs
mov
adc
dec
out
ret
imul
xchg
into
fimul
and
scas
inc
pop
xlat
sbb
aad
aaa
or
retf
cld
cs
call
clc
cmp
or
push
mov
loope
icebp
imul
cmps
fnclex
push
js
out
(bad)
int
push
mov
sbb
adc
mov
xor
push
aam
inc
xor
mov
clc
xchg
pop
push
push
sub
inc
push
gs
jg
and
fwait
gs
std
scas
imul
out
jae
sbb
ja
(bad)
mov
retf
or
std
jae
xchg
xchg
xchg
call
jns
sub
push
cmp
clc
add
mov
mov
or
adc
bound
nop
sub
mov
and
das
int3
mov
int3
out
mov
dec
jecxz
jnp
mov
lods
or
ja
jge
add
das
fidiv
cmp
lea
dec
mov
mov
adc
leave
idiv
movs
adc
cli
sbb
sbb
adc
popa
test
jmp
fisubr
lahf
jecxz
cmp
dec
in
repnz
in
pop
mov
jmp
enter
call
les
mov
adc
fs
ss
stos
push
sbb
adc
mov
jns
pop
sbb
rcl
jno
and
cmc
sub
or
pop
shl
push
out
sbb
aad
mov
(bad)
mov
sub
lds
sbb
aaa
add
pushf
jne
iret
mov
(bad)
popa
jmp
jae
adc
clc
lods
nop
aaa
xor
sub
mov
pop
cmp
dec
iret
ins
mov
or
cmps
sub
jns
xor
mov
xchg
call
(bad)
mov
mov
call
jmp
in
or
add
out
sti
sbb
movs
dec
(bad)
jp
lods
rcr
ins
vpmacswd
jo
xchg
mov
jl
imul
enter
movs
in
xor
jno
xchg
ja
inc
ror
lods
retf
and
in
loop
cmc
cmp
jle
or
icebp
jle
sbb
xacquire
fnsave
loope
aad
(bad)
lods
inc
inc
outs
cmp
data16
mov
push
pop
in
adc
jmp
mov
and
xor
inc
jne
add
jg
fnstsw
cmp
cdq
cmp
fcom
xor
jbe
stos
int3
fs
cmp
in
jge
dec
pop
inc
(bad)
mov
shrd
movs
shr
xchg
fistp
movs
shl
push
jbe
or
cli
or
ds
inc
dec
in
out
sub
ds
pop
ss
hlt
mov
sub
arpl
and
xchg
jnp
jbe
push
inc
pop
mul
es
adc
cmp
push
lods
or
call
mov
inc
into
inc
in
jne
xchg
stos
aas
xor
pop
pushf
dec
(bad)
push
adc
out
adc
inc
dec
es
test
push
push
int
sub
fdiv
sub
add
pop
icebp
mov
sti
or
xchg
mov
mov
pop
add
clc
xchg
stc
jp
call
pop
ja
adc
fld
loopne
nop
adc
push
xor
dec
mov
add
out
xlat
retf
and
outs
loope
stc
xchg
in
jae
jns
xchg
mov
out
sub
push
mul
sub
sub
out
xor
mov
int
sbb
inc
pusha
xchg
shr
and
stos
sbb
ins
and
jne
sahf
jb
mov
or
int
out
je
in
ret
sbb
lds
jb
movs
pop
pop
pop
cs
sub
mov
std
call
mov
es
mov
je
or
push
jg
dec
shr
inc
mov
and
mov
inc
sahf
nop
shl
add
xchg
pop
leave
xor
cli
jmp
pop
(bad)
les
add
xor
call
(bad)
push
xor
sbb
mov
cmp
not
xlat
cdq
out
retf
sar
jns
fiadd
enter
les
mov
pop
inc
push
or
ret
out
aas
inc
cdq
out
jo
or
pusha
dec
arpl
push
mov
std
icebp
cmp
sub
inc
cmc
xor
ins
mov
and
fcom
or
retf
xchg
sub
sar
jmp
test
sub
push
lahf
rcl
mov
(bad)
leave
sahf
mov
cdq
sub
popf
or
push
int3
inc
cld
jp
xor
sub
jecxz
pop
bound
mov
cmp
in
push
(bad)
fld
lods
arpl
xor
mov
in
push
pop
push
mov
test
xchg
sub
adc
(bad)
sti
sahf
pop
xchg
out
mov
repnz
fsub
mov
sub
lds
movs
push
add
rcl
inc
aas
shl
lahf
rol
pop
stc
loop
stos
push
loopne
jmp
and
inc
movs
push
jne
aam
pop
add
pop
iret
and
sub
pop
ja
dec
imul
and
mov
dec
xor
pop
adc
and
(bad)
jmp
out
lahf
ror
and
and
loope
inc
mov
dec
xchg
retf
push
enter
xor
repz
pop
retf
push
mov
mov
cli
js
sub
mov
pop
mov
push
cdq
inc
fsubr
ins
mov
cmp
dec
push
test
push
mov
lahf
add
jecxz
mov
ret
ret
les
and
loop
pop
add
inc
fiadd
push
cmp
mov
pop
sub
loopne
jecxz
pop
push
test
jmp
mov
mov
retf
pop
push
les
mov
mov
outs
sar
in
aaa
add
push
sar
mov
pop
stc
pusha
daa
(bad)
je
jbe
add
xor
mov
test
push
fcomp
fst
dec
xchg
movs
add
js
xchg
lock
js
dec
jmp
jmp
fisub
mov
popf
and
add
sub
in
(bad)
mov
sbb
into
xor
test
shl
mov
cli
shl
pop
xchg
fst
(bad)
es
xchg
js
add
mov
xor
adc
repz
popa
push
aas
(bad)
and
retf
pop
fidiv
xchg
jae
fcomp
imul
cmp
hlt
mov
gs
adc
inc
(bad)
lods
jmp
jg
sbb
fucomp
sbb
fidivr
jecxz
sbb
mov
aad
dec
(bad)
(bad)
jnp
fsubp
(bad)
dec
xor
dec
loop
es
xchg
adc
in
outs
cld
jg
push
and
dec
cmovno
aad
bound
adc
xor
mov
push
inc
scas
and
and
xchg
mov
push
mov
sbb
mov
enter
test
ins
mov
out
hlt
std
test
test
(bad)
jge
fmul
test
out
mov
push
in
jmp
jmp
mov
mov
or
xor
xchg
lds
jo
pop
push
iret
xchg
jnp
jmp
jno
popf
inc
out
(bad)
mul
cmps
inc
out
ins
jb
inc
pushf
jb
pop
mov
push
mov
outs
ins
add
jbe
ja
cs
das
jno
jmp
mov
mov
ds
sub
adc
repz
jae
pause
das
(bad)
jle
push
das
push
ins
test
add
js
pop
shl
mov
dec
inc
xor
in
jns
push
lds
dec
enter
pop
mov
mov
mov
ret
sub
push
or
loopne
jb
mov
shr
dec
sub
loope
mov
sbb
(bad)
sar
inc
and
lahf
dec
dec
jl
int3
sub
inc
dec
jns
mov
and
test
mov
pop
addr16
inc
scas
ret
(bad)
add
jge
cmps
push
cmc
cwde
dec
xchg
or
adc
adc
jbe
dec
mov
hlt
push
dec
loop
(bad)
inc
jne
and
push
sub
lahf
pop
es
enter
inc
seto
sbb
popf
dec
fadd
and
cld
packsswb
mov
cmp
in
lahf
inc
mov
mov
cmp
xchg
lock
imul
sub
mov
sub
and
jge
cs
loopne
ins
movs
not
sbb
les
(bad)
call
inc
dec
repnz
xchg
mov
pop
add
daa
sbb
cmp
fdiv
mov
pop
mov
xor
push
cmp
sub
adc
(bad)
out
mov
pop
loop
mov
jge
ja
out
jae
sub
in
mov
push
hlt
ja
movs
cmp
mov
mov
push
add
bound
mov
imul
(bad)
sti
(bad)
aaa
pop
mov
stos
inc
cmp
sbb
xor
shr
shl
cs
pop
push
adc
call
fdiv
addr16
ins
out
aaa
push
or
cmp
mov
lods
out
push
loop
jmp
cmp
arpl
mov
(bad)
icebp
mov
retf
or
xor
ins
xor
pop
xor
sti
retf
ss
out
cmp
mov
sub
pop
into
xchg
mov
jg
test
aad
xchg
jne
xlat
xchg
lock
call
cld
mov
out
cmp
aaa
xchg
adc
lahf
jb
xchg
or
xor
cmp
sbb
lahf
pushf
mov
jecxz
mov
push
jecxz
(bad)
push
jl
or
ins
scas
ja
xor
pop
and
cdq
push
inc
push
xchg
mov
xchg
aaa
cmp
scas
loopne
inc
into
sub
sti
mov
repz
xor
mov
xchg
fstp
popa
cmp
xchg
jp
cmp
and
adc
push
fwait
cmp
jne
das
mov
imul
lds
mov
mov
pop
push
out
xor
shl
push
ror
push
cdq
lods
mov
sbb
mov
jb
jne
pop
dec
aaa
mov
movs
fsubr
jmp
outs
fidivr
mov
jae
ins
inc
push
push
push
add
pop
hlt
inc
adc
int3
jns
shl
cmps
sysenter
dec
jno
inc
ret
cs
lahf
jmp
dec
jno
rcl
fist
cdq
lahf
movs
fwait
lea
das
in
retf
adc
repnz
sub
dec
retf
and
xor
inc
jo
jecxz
or
push
xchg
adc
test
fcom
xchg
xor
loop
fadd
add
(bad)
into
xchg
mov
in
pusha
call
addr16
inc
adc
jg
rcl
cli
adc
sbb
into
fcom
(bad)
cwde
xlat
mov
xor
mov
pop
sub
sahf
mov
push
stc
aad
test
inc
jae
ret
std
clc
mov
ret
jno
xchg
inc
stos
outs
mov
xchg
aad
pop
jb
addr16
dec
clc
mov
(bad)
and
push
(bad)
gs
inc
sbb
push
out
pop
pop
xor
nop
pusha
jmp
push
jg
sub
imul
push
ret
xor
lods
adc
addr16
cmp
mov
sbb
adc
fsub
push
test
jge
ficomp
jmp
push
push
inc
popa
or
push
clc
mov
jle
test
jl
mov
cwde
sbb
hlt
clc
movs
mov
cmps
mov
loopne
mov
mov
xchg
pushf
dec
scas
popa
not
dec
pop
mov
mov
sub
shr
fwait
test
inc
daa
inc
jmp
in
mov
dec
xor
jg
inc
push
shl
jb
out
loope
and
shr
imul
pop
xchg
push
out
mov
mov
push
popa
inc
inc
sub
sbb
xchg
adc
inc
mov
cld
xchg
std
add
mov
sbb
jae
sub
xor
mov
in
and
imul
xchg
out
or
jge
add
inc
or
stc
fucomip
ja
mov
add
fadd
ror
jmp
mov
imul
jbe
mov
push
(bad)
dec
into
js
xchg
loopne
loop
fcomp
sub
fs
cld
test
or
jbe
nop
sahf
(bad)
cmps
jmp
idiv
ins
xlat
lods
mov
adc
icebp
int
jne
ret
adc
sub
ins
or
inc
push
in
in
mov
mov
enter
mov
data16
test
fsub
inc
dec
es
loopne
cmp
hlt
and
in
jle
call
adc
out
adc
adc
xor
pusha
xor
mov
pusha
(bad)
cmp
pop
jmp
inc
inc
mov
mov
icebp
jge
xchg
ins
das
hlt
sbb
ficom
leave
dec
scas
push
sub
mov
stc
ret
sbb
mov
sar
and
mov
inc
fsubr
dec
js
ficomp
lods
ds
jecxz
push
(bad)
push
jmp
mov
int
aaa
scas
push
jbe
(bad)
test
scas
loope
xor
push
loop
das
(bad)
xor
pop
and
mov
add
sbb
mov
repz
(bad)
add
xchg
push
retf
adc
lahf
cmp
das
push
popf
jnp
das
pop
xchg
enter
fcomip
enter
cmp
sbb
std
xor
and
std
mov
movs
jg
leave
xchg
adc
(bad)
fmul
jo
adc
out
enter
inc
popf
pop
push
loope
call
aad
jecxz
sub
je
mov
cmp
(bad)
fs
jl
mov
mov
test
jmp
sbb
cwde
outs
xor
mov
push
loop
out
mov
mov
imul
jge
cmp
movs
mov
cmp
sar
rcr
je
pop
mov
cmp
cmp
inc
add
inc
out
int
(bad)
pop
(bad)
stos
pushf
pop
movs
std
std
mov
cdq
inc
push
leave
neg
into
lock
cmp
push
ret
repz
jl
pop
loope
stos
pop
adc
pop
jnp
arpl
adc
xor
cmc
nop
xor
pop
push
inc
push
in
inc
(bad)
mov
ret
sbb
add
cmp
xchg
adc
int
or
jl
xor
es
in
je
cli
fdiv
mov
push
mov
out
pop
test
repz
(bad)
repnz
fwait
and
push
(bad)
and
and
ret
xchg
sbb
pushf
and
stos
lock
add
stos
fnstenv
sbb
push
and
hlt
sahf
xlat
scas
rol
inc
(bad)
cmps
xchg
rcr
gs
movs
sbb
inc
(bad)
fs
loope
cmp
sar
test
push
cli
xor
pusha
push
sub
loope
or
popa
mov
jg
jmp
adc
je
and
popa
in
dec
es
popf
push
pushf
or
dec
mov
sub
add
xor
aas
stc
push
jmp
sub
aad
cmp
popa
jge
cmp
sub
mov
leave
jbe
cmp
pop
movs
sbb
pop
add
in
mov
sub
(bad)
push
movs
ret
mov
dec
data16
sbb
adc
dec
sbb
mov
aam
xlat
inc
loope
mov
push
sbb
and
out
cmps
fisubr
jno
jbe
(bad)
add
dec
add
or
mov
or
xchg
inc
fist
mov
or
adc
dec
rcl
pop
daa
in
pop
mov
or
cmp
scas
xchg
mov
cmp
jl
movs
jns
push
movs
retf
mov
adc
in
pop
mov
stc
jge
cmp
lea
dec
mov
mov
xor
out
scas
or
mov
cmp
sbb
outs
fidivr
arpl
loop
and
push
sub
mov
int
int3
or
inc
sub
xor
call
mov
xchg
push
mov
shr
mov
inc
repnz
pop
mov
popf
fisttp
mov
and
and
sbb
ret
xlat
fadd
fild
sbb
sbb
pop
sbb
lods
mov
ins
sbb
add
sar
cmp
xchg
mov
cs
inc
out
adc
mov
hlt
add
stos
xchg
sub
fwait
ret
shl
pop
sbb
scas
mov
adc
in
popf
fucomp
test
add
adc
pop
iret
sub
or
jo
aas
adc
xchg
xor
mov
repnz
loope
or
xchg
enter
rol
rcr
outs
pop
popa
aas
inc
jl
movs
cld
jno
(bad)
sub
lock
imul
(bad)
pop
lods
sbb
mov
mov
jl
fld
sbb
adc
cmp
mov
inc
pop
fmul
adc
shr
repz
rcl
push
cs
or
xor
dec
push
mov
arpl
out
cmp
or
mov
and
and
sahf
cli
pop
out
movs
mov
outs
pop
lock
cli
icebp
out
test
xchg
or
loop
(bad)
mov
scas
mov
xchg
out
loop
push
or
dec
and
daa
xor
es
sbb
(bad)
shl
xor
sbb
or
dec
in
inc
sbb
or
mov
push
pop
scas
push
cs
les
mov
xor
xor
stos
adc
call
jmp
mov
scas
xchg
aad
dec
xchg
call
lods
sbb
gs
mov
ret
adc
in
retf
aad
movs
ror
mov
mov
int3
scas
xor
sbb
mov
push
mov
stc
push
sbb
pop
mov
dec
ins
ins
shr
inc
sar
adc
pop
mov
out
verr
mov
push
jmp
inc
mov
sbb
in
jle
push
dec
cmp
iret
mov
xor
test
mov
xchg
cmps
cmp
or
dec
ja
iret
jns
scas
cld
mov
add
aaa
mov
and
test
mov
and
test
mov
and
test
mov
and
test
xor
adc
dec
push
in
hlt
jbe
sub
jle
add
cld
xchg
mov
jne
ja
xchg
fucompp
mov
rcr
adc
fs
cwde
inc
add
push
dec
pop
imul
add
enter
cmp
rcl
cmps
sub
js
mov
lods
lock
sbb
sub
lahf
sub
and
and
xor
adc
ja
loope
sbb
jmp
clc
rcl
jecxz
gs
rcl
(bad)
pop
fldlg2
ds
add
mov
repnz
call
pop
(bad)
fild
mov
xor
div
in
pop
mov
int3
lahf
mov
call
ins
push
xchg
fcmovbe
jo
xor
(bad)
call
sub
push
in
rcl
sbb
jbe
dec
sbb
imul
rcr
push
ja
jo
inc
inc
xchg
push
push
sub
int
scas
cs
sub
cmp
dec
fiadd
in
sti
or
bound
pop
or
jb
dec
out
mov
in
mov
rcr
fldcw
sub
iret
ror
dec
sub
xor
retf
jo
add
pop
and
in
push
xchg
stos
adc
nop
jb
jle
mov
sbb
loopne
push
ss
mov
xor
xchg
test
imul
dec
dec
pop
xlat
cmps
pop
pop
(bad)
ffreep
mov
pop
out
xor
fadd
pop
mov
shl
sti
mov
js
dec
lahf
dec
cld
mov
fadd
sbb
loopne
pop
xchg
jo
mov
pop
(bad)
mov
dec
sub
inc
adc
pop
mov
push
sub
xor
scas
mov
in
sbb
in
xchg
jge
ret
pushf
xchg
jo
cmp
mov
adc
dec
or
mov
shr
cwde
pop
dec
xor
mov
test
sbb
repz
scas
movs
cmps
enter
repnz
push
jge
repnz
xchg
pusha
or
add
arpl
mov
jnp
mov
cmp
scas
jmp
das
add
out
sbb
jmp
ins
sbb
push
mov
jmp
xchg
xchg
icebp
lahf
outs
stos
jne
test
in
pop
jno
sub
pop
shl
popf
sti
pop
ss
pop
(bad)
scas
ror
cld
ds
push
cli
lock
in
dec
add
jl
popf
jnp
add
push
adc
xchg
inc
add
inc
outs
xchg
int3
lods
or
es
mov
mov
fcmove
xchg
mov
xor
jmp
mov
rol
rcr
inc
std
imul
lahf
fisttp
mov
cmp
mov
ret
adc
sbb
and
mov
fimul
or
mov
in
test
stos
xchg
mov
jge
(bad)
ds
add
xlat
lods
and
cld
out
ins
add
dec
pop
dec
inc
mul
cli
and
aam
retf
cmc
sti
jmp
inc
in
stos
iret
and
jns
out
cld
or
inc
call
xor
scas
in
loopne
adc
pop
cmp
ret
push
in
xchg
dec
int3
adc
mov
rcr
shr
aaa
je
popa
hlt
jmp
push
mov
call
mov
fsubr
lea
jbe
fcomp
cmp
out
adc
inc
pop
sub
rcl
xchg
dec
cdq
jmp
add
test
sub
test
cdq
push
retf
stos
jecxz
sti
gs
push
(bad)
loopne
aaa
push
mov
shr
or
ficomp
adc
inc
in
lea
lods
adc
mov
fild
pop
mov
or
push
cmp
adc
push
call
jo
pop
inc
xchg
push
mov
cmp
sub
sbb
cmp
adc
test
xor
jg
mov
or
rol
ss
add
ins
mov
in
push
arpl
push
ja
sar
jle
sahf
stc
xor
icebp
or
jmp
sub
sbb
(bad)
mov
jmp
pop
pop
arpl
and
add
inc
mov
dec
mov
jmp
mov
xor
inc
fldenv
cmp
int
sbb
mov
sub
xor
mov
adc
cmps
dec
mov
jle
ja
sub
xchg
dec
xchg
ficom
add
lea
mov
je
jp
fcomp
xchg
xor
push
scas
mov
ja
or
cmp
loop
xor
pcmpgtw
jmp
jle
ss
aad
dec
sbb
std
inc
push
rcr
popf
out
clc
jle
test
lock
adc
test
add
jbe
ret
pushf
rcr
jecxz
inc
pushf
clc
mov
jo
cdq
cli
push
xchg
or
in
mov
leave
mov
cmp
jo
mov
daa
in
jmp
push
rcr
mov
xchg
cmc
xchg
(bad)
xor
loop
test
stos
hlt
xor
cs
test
or
add
fisubr
and
add
jne
lds
inc
push
mov
jnp
xor
or
xchg
mov
jnp
aam
cmp
rcr
mov
les
jg
jmp
call
pushf
mov
push
aam
or
pushf
repz
or
mov
sahf
add
outs
int3
xchg
cmps
xor
adc
sub
je
jb
lods
cmp
int
(bad)
lock
xchg
push
mov
popf
jl
pushf
or
jle
jae
mov
aam
dec
enter
sub
sub
mov
pop
adc
push
inc
pop
out
or
cmps
ins
mov
xchg
ins
clc
sar
cdq
ror
pop
pop
scas
mov
dec
int3
inc
gs
dec
sbb
dec
mov
mov
clc
jne
mov
rol
mov
mov
xchg
jnp
xor
pushf
call
jne
pop
mov
inc
mov
(bad)
adc
aaa
mov
mov
mov
loop
xchg
fistp
and
fcomi
or
dec
adc
pop
das
adc
ja
or
pop
icebp
jmp
sbb
psubq
icebp
(bad)
fsub
sub
movs
sub
push
mov
in
(bad)
mov
add
xor
sub
cli
cmps
sbb
loopne
mov
sbb
push
test
in
in
gs
or
test
sar
ds
sub
cmp
xor
add
mov
inc
xchg
xchg
das
cmp
call
pop
push
lahf
and
ret
jno
jae
sub
jnp
sbb
sub
sbb
cmp
jb
daa
mov
push
or
xlat
addr16
(bad)
loopne
sub
jl
jbe
mov
addr16
lahf
pop
loopne
test
dec
pop
xor
stc
sar
push
into
in
pop
test
imul
mov
mov
mov
fscale
fbstp
push
pop
in
push
or
aas
mov
sub
and
and
add
inc
leave
sub
pop
mov
inc
xor
and
fisub
(bad)
dec
pop
dec
ins
(bad)
leave
mov
jnp
test
jp
in
inc
scas
movs
sbb
sbb
mov
in
test
mov
jmp
inc
aas
adc
(bad)
xor
jge
jl
fnstcw
cmps
mov
cmc
xor
pop
mov
jo
iret
clc
jmp
mov
js
lds
xchg
xlat
sub
xchg
jnp
(bad)
xchg
dec
test
and
fisttp
ins
cmps
push
fcmove
and
mov
scas
push
imul
pop
inc
(bad)
into
mov
mov
ins
or
add
ja
cmp
mov
sub
(bad)
mov
mov
mov
mov
mov
rcl
loopne
sbb
imul
or
inc
mov
pusha
ret
stos
arpl
push
repnz
mov
retf
arpl
jge
out
lgs
and
add
addr16
in
inc
dec
mov
inc
and
aas
and
js
(bad)
pop
or
dec
mov
cmp
push
je
jbe
sub
mov
pop
sub
xor
mov
div
sbb
or
(bad)
data16
add
sbb
ffreep
in
pop
pop
fcomp
jne
movs
mov
sahf
call
in
xchg
and
ss
jbe
xchg
out
jl
daa
cmp
call
jmp
xor
push
sti
and
mov
sbb
imul
or
and
push
and
test
imul
test
pop
inc
dec
pop
xchg
adc
fsub
scas
add
mov
inc
retf
rcl
cmp
or
daa
fwait
sti
loop
add
mov
test
dec
push
popa
(bad)
jo
mov
cli
sbb
js
and
mov
mov
outs
shr
daa
ror
stos
mul
push
inc
push
clc
jne
fstp
add
cmc
jecxz
retf
add
fstp
fadd
cmc
inc
mov
pop
xor
mov
aad
ja
pop
movs
into
mov
xor
or
and
pusha
push
pop
sbb
mov
out
pop
sub
js
hlt
movs
and
ja
jb
fcom
sbb
xor
mov
cld
mov
jg
sub
pop
rcl
(bad)
(bad)
pop
cmp
outs
addr16
mov
or
jns
jmp
xchg
fwait
jp
sbb
add
inc
mov
inc
pop
xchg
and
(bad)
mov
outs
inc
fsubr
add
into
mov
stos
dec
jbe
pop
adc
lock
(bad)
stc
inc
aad
aad
test
ja
and
cwde
sub
push
xor
hlt
or
(bad)
enter
and
icebp
add
aam
mov
adc
mov
retf
shr
dec
xchg
inc
xor
int
mov
xchg
push
lods
outs
xchg
in
clc
push
xchg
addr16
in
push
or
mov
or
movs
sbb
mov
jmp
inc
ins
push
pop
lods
inc
aam
sbb
dec
loopne
cmp
popa
pop
test
imul
iret
mov
jae
ss
pop
xchg
or
shr
or
jae
ss
xor
std
shl
(bad)
push
inc
mov
fnstsw
(bad)
pop
outs
mov
pop
mov
add
pop
mov
mov
pop
fisub
imul
(bad)
mov
xchg
jo
jb
push
(bad)
cwde
push
mov
rol
into
je
sti
lock
adc
icebp
jecxz
and
jne
and
fscale
pop
jmp
add
lahf
not
inc
retf
aad
or
bound
jns
jecxz
(bad)
xor
mov
xchg
fs
in
push
ret
push
push
xchg
lods
imul
push
dec
sub
add
cmp
or
xchg
lods
cmps
adc
push
lock
hlt
jmp
clc
movs
pop
push
push
mov
cs
fdivr
xchg
cmp
or
sti
sbb
jbe
ins
in
xchg
dec
ficomp
or
mov
inc
adc
inc
sbb
repnz
iret
hlt
ins
fist
mov
sbb
mov
js
ret
xchg
inc
les
and
cmc
jle
stc
pop
adc
cmps
add
adc
adc
mov
sar
add
dec
push
out
xchg
sbb
loope
fist
js
sub
jae
fbstp
pop
pop
jnp
mov
cmp
sub
lea
into
sub
or
scas
ins
jg
inc
sbb
cdq
call
sub
gs
mov
retf
inc
es
out
cmp
pop
lods
xor
loopne
loop
sbb
xor
test
mov
sub
sub
sar
cdq
out
outs
push
mov
mov
pop
outs
mov
mov
call
add
(bad)
ins
sbb
jns
add
outs
inc
jl
cld
add
fdivrp
jne
outs
out
mov
loop
into
adc
adc
jmp
jmp
stos
fwait
(bad)
in
sub
daa
mov
nop
into
pop
push
ins
scas
and
jge
xchg
push
jbe
adc
jmp
mov
ss
push
inc
or
pop
inc
das
inc
xchg
rcr
push
or
fcomp
jmp
xor
push
leave
or
inc
push
lea
ret
jl
xor
pop
mov
jne
inc
lods
cwde
repnz
jp
ret
call
xor
and
or
outs
mov
sbb
inc
mov
leave
gs
or
lods
add
and
push
push
jo
movs
jae
sbb
push
mov
jmp
xchg
sbb
jge
xchg
push
fwait
cmp
das
aam
mov
xchg
mov
jg
loop
mov
push
rol
push
lock
pop
rcl
cld
sub
add
dec
ret
iret
and
xchg
(bad)
cli
push
xchg
(bad)
pop
adc
enter
js
mov
jbe
jae
je
(bad)
cs
test
jne
ins
xor
sbb
xchg
dec
xchg
xchg
sar
ror
mov
dec
scas
xor
sub
cmp
out
cmc
sub
mov
jo
inc
or
push
push
cmp
xchg
ds
cmp
je
dec
mov
test
add
scas
cwde
mov
xor
adc
mov
cmp
inc
fimul
push
adc
aad
push
fidivr
and
jmp
or
rcl
popa
jmp
mov
cmps
xchg
out
enter
cld
mov
fcmovu
cmp
addr16
sbb
pop
dec
loop
stos
xchg
or
mov
in
jmp
call
bound
sub
dec
es
push
call
fimul
mov
test
ret
mov
pop
and
adc
addr16
nop
daa
pop
inc
es
fld
push
pusha
movs
data16
inc
dec
dec
outs
bound
sbb
inc
pop
pop
or
(bad)
das
bound
fs
xchg
js
(bad)
lock
int
adc
enter
push
cmp
sbb
mov
dec
sub
cmp
lock
sub
jmp
(bad)
mov
shl
out
jecxz
mov
sub
fsub
inc
(bad)
cld
and
pop
std
pop
sub
sbb
cld
pop
mov
fwait
xor
test
loope
or
into
mov
sldt
aad
cwde
sub
(bad)
and
out
bt
lods
ins
fs
or
in
inc
xor
js
pop
in
and
bound
inc
aas
icebp
xor
xor
sbb
cmp
in
and
add
fsubr
mov
sub
es
or
lock
push
mov
int3
pusha
add
sbb
mov
push
ret
out
jmp
xchg
sub
sub
sub
cmc
cdq
pop
pushf
out
fidivr
fadd
push
dec
not
repnz
mov
ficomp
jb
jge
sahf
out
in
ins
push
xchg
jmp
or
inc
sub
xchg
movs
lods
jmp
jo
xor
rcl
arpl
sar
xchg
push
sub
adc
mov
inc
fwait
adc
sbb
xor
pop
cmps
mov
imul
push
add
scas
xor
sub
or
les
pop
ds
les
push
sbb
push
(bad)
or
aam
sahf
mov
fs
stos
hlt
mov
lods
xor
add
cmp
pusha
jmp
(bad)
comiss
retf
sti
fisttp
sar
add
xchg
mov
ins
inc
jnp
adc
push
dec
push
stos
push
pop
pop
sahf
shr
xor
xor
jo
xchg
sub
pop
cmp
or
scas
cmp
mov
push
(bad)
mov
fdivr
xchg
push
xchg
int
adc
lock
push
add
dec
retf
movs
adc
adc
sbb
sbb
repnz
xchg
addr16
mov
rcl
aas
mov
push
mov
test
rcl
mov
outs
push
movs
xchg
dec
imul
add
pop
shl
jecxz
sub
pop
out
xlat
add
cmps
dec
dec
shr
out
sbb
shl
mov
jbe
fisubr
push
jmp
pop
aas
pusha
fnstsw
jnp
popf
repnz
stos
xor
sub
fiadd
sub
xor
push
or
fdiv
add
sub
mov
lods
idiv
xchg
(bad)
cmp
les
in
push
and
hlt
cmps
into
cmp
sub
add
test
out
int3
adc
jp
cmp
pop
(bad)
sti
push
xor
data16
(bad)
das
lea
or
sar
mov
hlt
nop
xchg
mov
test
cmps
(bad)
push
dec
mov
fdivr
push
test
or
loope
lods
cwde
fcmovb
xlat
in
(bad)
ins
cmp
add
inc
imul
mov
dec
adc
fild
ins
(bad)
xor
sbb
inc
(bad)
in
cmp
adc
sub
xor
sbb
dec
loope
test
mov
into
outs
and
dec
add
mov
sub
cmp
sbb
inc
stc
dec
sbb
xchg
or
mov
retf
push
adc
sub
in
sub
shl
mov
loopne
cmp
jge
xchg
or
mov
or
out
loop
add
in
and
fscale
cmp
dec
inc
push
adc
fwait
add
mov
jae
mov
jg
test
add
int3
xchg
mov
lods
stos
scas
iret
test
adc
mov
in
sahf
imul
sub
cmp
or
out
aad
pop
sub
or
jne
mov
test
sub
cmp
pop
adc
out
pop
cld
push
push
jecxz
sahf
and
aaa
repz
mov
mov
pop
(bad)
(bad)
mov
(bad)
dec
sub
jnp
push
(bad)
clc
xor
xchg
sub
cwde
ror
inc
or
jb
push
cmp
loop
adc
jmp
int3
cmp
pop
jge
or
mov
(bad)
and
jl
jnp
xlat
mov
ficomp
div
aam
lea
jmp
sub
mov
mov
call
loopne
adc
pop
dec
out
out
push
lds
out
pop
jo
sub
call
xchg
iret
sbb
popf
pop
sub
dec
sub
or
fdiv
mov
and
aaa
js
adc
push
cwde
and
loop
dec
retf
outs
push
gs
mov
test
ret
test
mov
addr16
sub
push
mov
adc
cwde
adc
icebp
mov
jecxz
dec
mov
cmp
or
xor
add
adc
icebp
push
pop
sbb
scas
fs
cmp
cmps
out
jp
dec
dec
aad
xor
ror
es
mov
mov
and
clc
in
enter
xchg
inc
in
sbb
or
pop
mov
hlt
cmps
mov
xchg
push
int
sub
aam
div
outs
dec
daa
js
aaa
pop
xchg
mov
dec
shr
mov
adc
mov
xchg
jge
mov
sar
lea
push
clc
jge
jno
loopne
daa
lds
out
mov
adc
lock
fdivr
int3
sub
loopne
inc
(bad)
push
sbb
daa
nop
clc
mov
shr
jmp
xchg
cmp
cmc
xchg
mov
or
xor
inc
jle
mov
into
jbe
push
into
(bad)
shr
jge
out
sbb
fild
sti
adc
repz
or
xchg
retf
xchg
sub
fcom
xor
jmp
(bad)
iret
test
mov
mov
(bad)
fisub
icebp
mov
adc
mov
and
xor
or
ret
repnz
int
test
inc
or
xor
popf
xor
dec
sahf
mov
add
lds
mov
add
pop
mov
pusha
pop
(bad)
gs
cmp
sub
cdq
sbb
pop
dec
ror
cmps
fsub
js
mov
mov
mul
in
fld
imul
cmp
mov
push
mov
in
inc
or
pushf
add
mov
fs
cmps
mov
pop
movs
out
xor
xor
xchg
aaa
lods
call
add
cmp
xor
xchg
stos
cmp
sbb
xlat
jle
jecxz
push
addr16
xchg
imul
inc
pusha
sar
iret
shl
aas
push
out
int3
jg
and
adc
jbe
mov
loope
add
inc
enter
ja
(bad)
sbb
imul
fsub
addr16
and
cmp
push
iret
ins
es
mov
add
mov
mov
mov
addr16
mov
mov
js
fsubr
cmp
push
leave
add
jb
mov
sub
cmps
repz
imul
and
add
jns
outs
mov
ret
popf
shr
mov
xchg
out
jle
sbb
enter
test
add
lds
sbb
pop
add
push
(bad)
shl
and
out
pop
xchg
xor
push
data16
xor
scas
pushf
push
repnz
ds
int3
imul
sub
cli
sbb
nop
stc
ss
pop
repz
test
sub
sbb
mov
adc
fimul
mov
mov
adc
pop
mov
mov
dec
xor
pop
mov
jmp
and
fnstsw
and
or
pop
sbb
push
inc
(bad)
pop
cwde
call
adc
ja
rol
sub
jne
xchg
and
cmp
xchg
mov
std
inc
sbb
dec
pop
retf
jle
sbb
leave
inc
jp
call
mov
mov
jp
add
and
pop
sbb
rcl
jbe
scas
sbb
xchg
dec
test
inc
adc
test
ins
sbb
mov
adc
call
das
loope
jg
pop
mov
popf
adc
add
cmp
xor
cmp
sbb
cmp
or
or
rcr
ins
repnz
cli
xor
xor
jp
clc
aas
mov
(bad)
js
inc
inc
ins
and
jl
jb
add
mov
repnz
icebp
jne
add
fistp
adc
add
add
push
dec
adc
mov
push
xor
and
shl
push
push
in
rol
loop
and
adc
mul
sbb
repz
outs
imul
in
xor
xchg
pop
sbb
cmp
jmp
enter
xchg
mov
movs
enter
(bad)
jmp
out
jne
stos
push
pop
push
jmp
jo
mov
cmp
mov
jg
ret
not
mov
sub
mov
call
dec
loopne
jecxz
dec
test
sbb
and
cmp
data16
and
bound
nop
leave
scas
(bad)
fst
sub
push
rcl
out
xor
xchg
xor
sub
aaa
out
xchg
cmc
push
add
pop
cdq
cwde
push
dec
sahf
adc
arpl
into
pop
(bad)
mov
xor
stc
pop
repnz
and
mov
(bad)
fsub
addr16
cmps
push
movs
dec
jp
les
loopne
dec
mov
dec
sbb
inc
mov
scas
shl
jbe
clc
cld
pop
sbb
mov
push
and
jecxz
sub
pop
cmps
sub
mov
jo
xchg
add
xor
fstp
add
mov
cmp
sar
js
or
mov
ins
sbb
mov
xor
stos
sub
lahf
stos
xchg
jns
pop
je
aas
cmps
cmps
mov
outs
push
push
add
pop
mov
inc
sub
ins
(bad)
loope
push
icebp
cmp
js
ror
mov
mov
outs
push
inc
mov
xor
mov
call
sub
(bad)
nop
test
sahf
mov
or
xor
mov
stc
sub
sub
fs
mov
cmp
movs
jl
dec
retf
sub
mov
in
out
mov
jecxz
push
pop
jle
xor
sub
test
hlt
or
hlt
or
retf
cmp
or
sub
cmp
and
jb
(bad)
out
cwde
mov
cmp
inc
iret
les
(bad)
(bad)
jmp
and
cmc
std
mov
stos
pop
aas
dec
in
xor
icebp
mov
movs
dec
gs
fpatan
gs
or
cmp
xor
xchg
ins
cmp
jno
dec
dec
adc
push
inc
xlat
fs
or
push
stos
xchg
ds
mov
sbb
retf
xchg
cmp
adc
rcr
push
or
scas
xchg
add
pusha
xchg
add
inc
repz
(bad)
in
jae
in
add
sbb
js
cmp
(bad)
shl
lods
outs
icebp
cmp
out
sbb
jg
nop
inc
mov
dec
cs
jae
xchg
daa
fdiv
popa
pop
pop
out
cmc
mov
outs
adc
das
push
out
add
xchg
stos
push
xor
sub
pop
jle
hlt
mov
in
push
nop
fs
jg
mov
adc
mov
aam
xor
pushf
jg
pop
add
scas
mov
pop
dec
sbb
cmps
add
fwait
mov
pop
push
cli
jae
dec
push
inc
in
int
push
and
mov
mov
scas
sbb
and
stos
xchg
mov
cmps
ins
ins
fwait
ror
add
cld
xchg
loopne
scas
shl
(bad)
add
ss
sub
cs
in
(bad)
fsub
sub
ss
sbb
imul
(bad)
jae
shl
cmp
dec
mov
cli
dec
add
int
test
push
mov
jnp
or
pop
movs
in
sub
jb
mov
repnz
out
sbb
mov
into
add
add
cmps
add
or
ffree
and
mov
jecxz
dec
cld
cmps
ins
jecxz
loope
sbb
pop
sbb
out
stos
scas
stos
(bad)
and
mov
jecxz
jae
pop
and
cmp
shl
jns
sar
mov
sbb
fwait
jo
dec
into
push
imul
arpl
pushf
or
push
mov
lea
popf
inc
ret
lock
sbb
lds
mov
cmp
movs
ins
adc
cmp
push
ins
dec
loope
out
test
push
jp
stos
sub
ror
pusha
out
xchg
sub
mov
lock
arpl
dec
mov
xor
popf
mov
std
and
cmp
(bad)
sbb
ds
dec
imul
mov
sbb
inc
inc
stos
inc
out
or
mov
inc
shl
rcl
mov
add
inc
push
pop
cli
popa
ret
jmp
inc
inc
jnp
fadd
popf
int3
rol
or
xchg
dec
lods
sbb
(bad)
mov
pop
nop
mov
push
mov
mov
add
mov
sub
pop
jbe
mov
cmps
sub
stos
cwde
int3
call
cmc
adc
or
dec
adc
dec
or
push
(bad)
sub
rcl
cmp
in
stos
add
add
out
add
lea
stc
mov
xor
mov
imul
ficomp
(bad)
fnstsw
das
js
xchg
jno
sar
in
push
mov
jnp
mov
cmp
cmc
cmp
jae
in
sbb
cmps
mov
loopne
outs
xor
xor
mov
mov
xchg
int3
inc
fidivr
(bad)
aas
add
enter
inc
repz
lock
lock
sbb
pop
pop
out
pop
in
adc
lock
or
jae
dec
mov
xchg
fbld
outs
xchg
loopne
xor
dec
test
xchg
mov
or
ret
rcr
es
pop
and
sbb
sti
sbb
scas
daa
xchg
push
push
pop
not
ds
sti
shl
fld
ds
pop
pop
dec
cmp
imul
nop
scas
les
icebp
adc
or
push
jmp
cmp
arpl
cmps
test
mov
cmp
fsub
call
mov
fld
scas
popf
(bad)
jne
or
mov
add
sbb
sub
xor
fdiv
cld
das
icebp
fs
lods
add
mov
cli
pop
cmp
(bad)
push
fdivp
sbb
fisub
sbb
ror
add
mov
lods
mov
sub
imul
cmp
add
imul
push
pop
daa
jp
test
xor
ds
int3
add
and
(bad)
ins
mov
jo
push
sar
xchg
sar
xchg
push
popa
in
jmp
jnp
retf
xchg
mov
fild
movs
sub
mov
inc
sub
or
sub
ja
adc
xchg
std
add
movs
scas
cmc
inc
sbb
(bad)
pop
fsubr
aaa
hlt
xchg
xchg
inc
sbb
dec
jne
ror
daa
fist
repz
(bad)
jmp
es
mov
mov
sbb
jmp
cs
into
adc
jno
pop
ficom
js
push
pop
(bad)
xor
jg
xchg
test
out
retf
xchg
mov
mov
mov
and
adc
fbld
and
mov
pop
jns
ror
dec
adc
mov
jg
fsubrp
sub
jmp
frstor
rcl
cmp
adc
pop
sahf
xor
sahf
xchg
dec
pop
out
adc
lds
add
aaa
xor
adc
in
jb
sbb
sub
push
sbb
push
das
(bad)
aad
sti
mov
or
in
xor
add
ss
adc
push
add
fucomip
mov
mov
inc
jmp
xchg
jmp
jp
pop
cmps
jmp
mov
ins
jne
push
xor
das
inc
xor
out
add
rol
push
test
pop
cld
push
fimul
mov
aad
sti
push
imul
jp
hlt
dec
shr
out
mov
cmp
jo
cmp
fistp
jne
ja
and
or
mov
cmc
add
fidivr
fsubr
aas
frstor
gs
dec
inc
push
sbb
loop
repnz
scas
and
imul
das
jnp
adc
imul
repz
push
jecxz
enter
fcomp
in
mov
cld
mov
adc
scas
ror
or
jmp
imul
dec
adc
jmp
jno
or
ds
jle
cs
mov
ret
outs
cmp
sbb
adc
fdiv
jo
jecxz
xchg
mov
jbe
clc
mov
dec
cmp
add
repnz
xor
icebp
mov
push
bnd
(bad)
lds
xor
aas
xchg
ficomp
mov
scas
mov
mov
or
mov
pusha
dec
scas
mov
sbb
xchg
push
(bad)
addr16
daa
out
ins
out
xchg
pop
and
fist
and
bound
xor
ins
test
jmp
mov
add
jmp
test
and
loopne
jecxz
call
xchg
or
cmp
sahf
mov
or
shl
jl
mov
pop
sub
or
mov
retf
leave
(bad)
call
xor
pop
dec
jo
mov
dec
retf
dec
adc
inc
cmp
sub
dec
frstor
lahf
cmp
ret
movs
or
fadd
popa
ss
jae
out
rcl
adc
jnp
jne
out
js
adc
mov
xor
mov
cmp
dec
jecxz
xchg
stos
xchg
sbb
pop
mov
add
sar
imul
push
push
push
mov
loop
fs
leave
dec
das
add
add
mov
movs
ins
jne
imul
jg
xchg
xor
adc
inc
shr
xchg
ror
shl
add
repnz
retf
pop
mov
not
lds
and
xchg
pusha
xchg
(bad)
pop
lock
imul
mov
jbe
push
xor
pop
cwde
imul
xchg
mov
and
mov
outs
and
ins
mov
enter
adc
mov
push
sub
sbb
call
mov
leave
inc
jge
mov
mov
push
xchg
loopne
inc
lods
adc
sub
adc
mov
aad
mov
retf
jo
dec
in
js
mov
retf
sbb
rcl
xor
outs
sub
mov
test
bound
xlat
cwde
test
inc
adc
push
call
xchg
icebp
mov
cli
shl
adc
or
jecxz
cwde
icebp
adc
call
xchg
popa
imul
daa
les
rol
fistp
lds
jg
mov
sub
(bad)
in
daa
fcom
cmp
and
mov
gs
repnz
xor
gs
or
mov
inc
das
fmul
sub
sbb
outs
xor
cmp
icebp
jl
push
mov
dec
(bad)
mov
out
push
loop
out
adc
cmp
cmp
push
hlt
dec
inc
add
jp
not
js
loop
sub
inc
inc
sahf
sbb
cmps
push
retf
jne
jl
test
sti
jns
cmps
aaa
and
ins
xor
dec
sub
cld
adc
push
sub
xchg
jmp
ror
(bad)
loopne
mov
pop
xor
jmp
or
and
aam
aam
enter
movs
and
xor
mov
mov
inc
mov
enter
imul
out
cdq
cmc
cmp
and
data16
jmp
dec
xor
loop
mov
xlat
or
mov
enter
int
mov
psubusb
in
mov
stos
daa
add
pop
adc
push
mov
sahf
ins
adc
push
fimul
inc
fsubr
xchg
xchg
and
ja
mov
into
add
push
pusha
arpl
std
mov
pop
ror
pop
or
add
jge
mov
fadd
(bad)
mov
dec
fisttp
mov
inc
push
and
fldcw
push
jg
ds
cmc
cmps
test
or
adc
out
jmp
icebp
mov
mov
cmc
xchg
(bad)
mov
out
jnp
push
(bad)
repz
mov
loopne
jmp
mov
mov
pop
pop
cmp
adc
sub
xchg
sub
inc
jecxz
jle
mov
jns
cmp
jnp
add
repnz
sub
lods
scas
cmp
cmps
les
scas
mov
test
push
xor
or
cmps
scas
loop
xor
inc
adc
add
mov
stos
fbld
leave
call
jnp
add
adc
test
jo
test
jl
ret
out
mov
jl
mov
mov
stos
int
jp
lahf
lods
sbb
add
push
shl
outs
out
cwde
sbb
div
add
dec
nop
(bad)
dec
push
push
popa
jmp
movs
inc
jo
inc
mov
ja
add
dec
ret
push
mov
in
jns
adc
mov
or
mov
sbb
add
and
stc
icebp
cmp
xlat
sbb
scas
adc
cmps
mov
cli
sbb
xchg
hlt
inc
jl
nop
inc
push
lds
or
pop
aaa
pop
adc
mov
jecxz
(bad)
leave
or
test
(bad)
sbb
sbb
xchg
sub
pop
repnz
inc
xor
fs
mov
xchg
cmp
jmp
in
mov
lea
repz
pop
out
cdq
inc
and
sti
mov
xor
mov
cmp
push
cmp
adc
fidivr
and
pop
adc
jne
push
jp
or
adc
jo
mov
hlt
rcl
loopne
sbb
arpl
stc
dec
mov
inc
mov
mov
push
std
mov
mov
daa
jecxz
cli
jae
jg
adc
fimul
js
jb
adc
andps
bound
fidiv
scas
nop
cmp
pop
push
leave
inc
aam
pop
inc
loopne
lock
mul
fimul
mov
dec
add
adc
enter
leave
inc
shr
bound
sub
and
fs
int3
sub
mov
jge
movs
test
mov
sahf
icebp
cmc
mov
cmc
aad
call
call
xor
xor
loopne
dec
xor
jmp
inc
xchg
ror
mov
(bad)
out
mov
cmc
push
add
pop
and
mov
icebp
push
pusha
jae
xor
jbe
scas
or
mov
aas
outs
out
cld
jmp
cmps
shl
dec
push
sbb
cli
push
outs
dec
std
fs
xor
add
xchg
jmp
mov
mov
pop
int3
jae
mov
dec
xor
jmp
ret
xchg
add
btr
shl
pop
xchg
sub
cmp
aam
popa
sbb
xor
lods
(bad)
mov
pop
stos
dec
add
out
mov
pop
pushw
xor
ds
out
sbb
les
das
ficom
pop
ins
push
inc
jl
or
mov
cmp
dec
ins
xor
fcom
ficomp
adc
xor
jg
movs
(bad)
jge
shl
pop
mov
fild
xchg
inc
(bad)
or
stc
inc
in
fst
sbb
gs
mov
push
scas
mov
cwd
mov
and
pusha
stos
fcom
mov
(bad)
ja
into
fisttp
out
xlat
push
test
inc
jns
jmp
xor
inc
ins
stc
fdivp
jno
ds
and
std
arpl
dec
mov
movs
in
and
stc
pop
loopne
dec
xchg
mov
repnz
out
adc
popf
sbb
std
jb
lods
push
cmp
aam
and
sub
fnsave
push
xchg
icebp
shl
cs
jp
add
aaa
jp
xor
fnsave
test
fisttp
sub
jmp
inc
mov
imul
and
je
stos
test
(bad)
cmp
jno
mov
push
or
cli
ret
pop
in
xor
repnz
out
test
mov
push
lock
push
push
jmp
retf
cmps
loop
lods
mov
add
mov
outs
aad
or
shl
mul
mov
push
jl
inc
ss
repz
xor
jmp
lods
or
test
and
fnstenv
mov
aaa
push
stos
xchg
dec
mov
add
loopne
cmc
add
ins
aas
xchg
retf
test
mov
jne
cmps
and
jle
mov
fild
outs
add
cmp
jmp
jo
adc
jne
or
pop
xchg
add
fld
xchg
push
rol
fdiv
mov
mov
adc
pop
adc
lods
and
cmp
pusha
cdq
adc
push
shl
push
mov
out
adc
mov
ins
xchg
das
imul
and
daa
pop
xor
or
fs
in
mov
and
ja
sbb
cmps
xor
cmp
int3
mov
ds
adc
mov
ret
test
call
jb
jp
push
xchg
outs
cs
call
mov
push
adc
adc
mov
sub
(bad)
imul
not
aas
lock
xor
mov
(bad)
cmp
jp
sbb
and
mov
dec
in
jge
fcomp
sub
sbb
cmps
sti
call
fst
popf
xor
cli
mov
pop
mov
pop
xchg
sub
sahf
popf
mov
movs
test
add
ficom
lea
int3
fidivr
in
mov
das
movs
cwde
retf
add
push
daa
or
mov
sbb
xchg
aam
push
push
pop
pop
jnp
sbb
or
pop
(bad)
push
mov
mov
stc
jo
ds
aad
adc
outs
jnp
inc
out
cmp
and
lods
push
xor
or
std
loop
int3
or
les
xchg
mov
mov
or
loop
cwde
push
xchg
jle
mov
sbb
add
push
shr
pop
cmp
xor
xchg
mov
push
test
cmp
popf
add
aaa
arpl
stos
mov
popa
nop
sub
cmc
setle
inc
lds
jmp
sbb
jle
jmp
push
cli
push
call
mul
add
lock
push
dec
loop
fwait
cwde
dec
pop
push
jne
icebp
dec
(bad)
out
push
jecxz
clc
cmps
mov
into
fs
retf
call
movs
outs
push
jnp
mov
icebp
shl
adc
xor
aas
ds
sub
into
jno
inc
popf
cmp
shr
mov
inc
loopne
fwait
outs
stc
hlt
in
aaa
out
adc
jmp
aam
bound
jno
adc
mov
loop
or
lods
stos
dec
xor
enter
lods
scas
es
shl
mov
xor
les
je
sub
ja
popa
pop
lds
cmp
xchg
and
xchg
xor
inc
dec
ficomp
pop
inc
or
xor
ss
stc
mov
scas
push
cmp
loop
cmp
imul
icebp
and
mov
mov
arpl
ins
retf
nop
ss
pop
ret
pop
inc
jb
xchg
cld
inc
aam
movs
push
(bad)
cdq
mov
xchg
fwait
add
das
jge
test
rol
mov
adc
inc
movs
sub
pop
ds
push
retf
test
mov
xor
call
mov
xor
mov
imul
mov
xor
mov
(bad)
addr16
js
(bad)
mov
das
mov
inc
outs
mov
leave
sub
gs
sar
mov
iret
jmp
mov
std
push
push
xchg
int
pop
cmp
mov
or
add
push
fld
outs
shl
in
xchg
xor
ja
push
sub
sbb
pop
in
jno
or
test
jmp
push
and
sbb
retf
out
dec
xchg
lea
ins
test
inc
icebp
adc
je
mov
mov
push
xor
iret
stos
stos
test
popa
loope
jmp
cmps
test
bound
sbb
and
ins
leave
xchg
or
sub
aad
pop
sub
ror
(bad)
fmul
call
pop
xor
mov
leave
mov
push
sub
icebp
dec
loopne
mov
and
clc
inc
stos
adc
jmp
and
hlt
in
neg
pop
cdq
dec
rcl
retf
xchg
mov
les
and
sub
xor
js
js
xchg
cmp
xor
jl
sbb
dec
adc
sbb
cmp
push
btc
loopne
test
push
cli
inc
xchg
xor
outs
jmp
jl
int3
jmp
ret
and
xor
int3
iret
and
push
(bad)
sub
stos
cmp
aad
pusha
ror
pop
lds
jg
add
out
and
mov
lea
(bad)
and
cwde
or
imul
hlt
lea
in
aas
movs
inc
xor
shr
and
xor
sub
sbb
pop
idiv
sub
mov
jb
stc
pop
or
or
mov
xlat
push
sbb
jmp
div
or
fsub
push
rcr
sbb
(bad)
mul
dec
push
or
fmul
xor
movs
aam
(bad)
jne
xadd
mov
hlt
jmp
xchg
jmp
pushf
mov
or
inc
out
sbb
mov
arpl
gs
sti
int3
mov
inc
sub
movs
addr16
repz
jno
xlat
jl
push
icebp
pop
addr16
adc
push
nop
pop
push
ficom
fstp
sub
pop
cmp
std
sub
les
imul
sub
mov
sub
sub
cmp
cwde
mov
jecxz
sahf
mov
jecxz
arpl
imul
out
bound
cmp
pop
cmc
clc
gs
push
mov
(bad)
loope
or
inc
popa
lock
sub
add
fwait
sti
push
icebp
aam
shl
movs
dec
test
and
inc
fsubr
popa
jnp
js
push
mov
leave
xor
imul
std
inc
cwde
mov
jl
into
push
inc
out
fwait
mov
(bad)
mov
test
int
daa
js
fsubr
dec
jbe
mov
add
pop
xor
or
jmp
fdiv
pop
inc
ret
adc
movs
icebp
pop
push
pop
es
ficomp
in
lods
(bad)
xchg
sbb
mov
mov
xlat
cmp
or
mov
addr16
and
shl
mov
pop
xchg
sub
shr
sub
push
das
or
dec
mov
stc
push
pop
cmp
hlt
addr16
jnp
neg
out
fidiv
dec
addr16
(bad)
pop
test
dec
clc
js
mov
not
dec
jb
xor
jp
cld
or
push
xchg
ror
cmp
aaa
inc
iret
test
test
or
adc
pusha
pusha
jp
mov
out
xor
dec
out
mov
sub
adc
lods
or
adc
and
mov
outs
sub
sbb
and
jg
xor
jge
call
mov
mov
inc
arpl
xor
xor
test
mov
fiadd
add
pop
leave
xchg
jle
mov
inc
sub
xchg
dec
or
in
add
cmps
pusha
imul
das
xor
jmp
dec
xor
mov
hlt
pusha
dec
sub
sbb
test
and
jecxz
bound
add
jbe
or
loop
fnstcw
jne
pop
push
sbb
shl
ror
adc
scas
ins
mov
or
pop
cmps
push
cmps
popf
jmp
or
jnp
mov
shl
gs
mov
sub
stc
inc
repnz
dec
mov
jmp
add
xor
adc
sub
fisubr
in
outs
mov
scas
popa
retf
cld
sti
cmp
sti
fsub
ins
or
add
ret
push
hlt
lods
cmp
jmp
out
sub
dec
sub
jnp
mov
or
push
icebp
adc
pop
cdq
xor
pop
and
scas
and
xchg
mov
sub
xor
dec
(bad)
sub
pop
cmp
sbb
retf
mov
arpl
lds
pavgw
imul
push
and
cmps
dec
xchg
(bad)
rol
mov
sbb
enter
(bad)
mov
push
(bad)
pop
in
cmp
mov
jo
cmp
pop
mul
repnz
mov
mov
pop
adc
test
cmps
dec
(bad)
ja
sub
gs
shl
adc
xchg
jbe
xchg
stos
inc
push
in
jmp
sbb
push
add
inc
inc
xchg
jmp
ja
leave
fadd
lds
xchg
std
pop
cmps
imul
imul
addr16
xor
mov
inc
iret
mov
repz
test
and
xchg
push
bnd
hlt
push
arpl
das
addr16
pop
retf
test
(bad)
in
cmp
xchg
add
jb
sub
dec
sub
repnz
xor
xchg
fisub
xchg
int3
and
or
out
push
xchg
cmp
inc
xor
scas
scas
inc
inc
lods
mov
and
push
ds
push
jl
fisttp
sbb
cmp
test
imul
xlat
shl
or
imul
outs
dec
mov
movs
adc
mov
lods
adc
jno
jae
dec
xor
les
adc
cli
into
(bad)
jle
jns
or
sbb
jp
or
mov
mov
mov
out
jp
or
pop
lds
and
cmp
xor
ins
pop
pop
das
stc
inc
xchg
lods
ss
adc
mov
cmp
cmp
clc
fldcw
mov
push
jo
pop
dec
cmp
sahf
shr
out
sti
cmp
rcl
xor
pop
popf
movs
test
sub
cld
jno
dec
retf
(bad)
jmp
adc
pop
ss
mov
pop
add
ds
add
or
add
int3
and
inc
pop
mov
imul
mov
adc
and
out
xor
xchg
test
sub
aad
lods
pop
mov
jge
sub
jmp
xchg
mov
mov
retf
pop
mov
(bad)
outs
pop
clc
mov
shl
mov
cmps
and
mov
xchg
and
or
mov
ja
jle
movs
cmp
aam
xchg
xor
sbb
sahf
inc
pop
cld
dec
mov
inc
adc
dec
adc
int
adc
xor
arpl
cmp
fwait
data16
sub
cmps
inc
pop
imul
and
adc
jle
scas
pop
lods
pop
lods
out
pop
ret
cmp
dec
cmc
mov
push
repz
jnp
sbb
dec
call
mov
mov
cli
pop
ret
mov
int3
(bad)
enter
sbb
or
imul
jns
das
das
imul
test
pop
sub
fisub
pop
rcr
or
mov
push
enter
mov
jg
and
or
mov
imul
test
push
push
adc
sub
pop
and
mov
in
or
push
or
push
pusha
(bad)
addr16
in
test
mov
es
xchg
mov
sbb
cmps
imul
rcl
rol
or
fld
mov
mov
fdiv
mov
ja
cmp
inc
lods
(bad)
neg
sahf
lahf
in
jns
repnz
shr
inc
mov
test
dec
pop
mov
add
jb
out
ret
jnp
test
shl
push
add
ror
int
mov
push
cmps
cdq
cmps
cmp
push
fbstp
pop
sbb
and
jg
stos
or
mov
stos
fcomip
sbb
outs
jne
xlat
mov
push
jb
shr
jmp
fdiv
inc
test
out
xor
fsubr
xor
or
cmp
cmps
ret
xor
push
stc
push
dec
adc
in
cmp
add
data16
bound
call
sub
in
add
push
push
(bad)
xchg
jb
outs
daa
outs
pop
outs
pop
daa
push
imul
xlat
push
lock
sbb
imul
sub
adc
(bad)
lock
cmp
out
in
jp
xchg
or
add
je
push
pop
shr
xchg
push
fimul
push
and
aad
in
sar
dec
fsub
sbb
pusha
les
push
sub
mov
ror
dec
push
lds
dec
xchg
and
adc
mov
popf
sbb
sub
lods
inc
xchg
dec
(bad)
sbb
mov
cmp
inc
fstp
stos
jne
data16
push
arpl
cmp
fwait
pop
addr16
or
xchg
cmp
outs
add
out
mov
inc
jmp
imul
add
jns
idiv
xchg
pop
hlt
aad
inc
xchg
mov
add
sbb
mov
jle
xchg
pop
dec
daa
push
stos
call
mov
jns
lahf
stos
pop
lahf
sub
arpl
sar
push
es
in
pop
popa
pop
pop
mov
popf
adc
sbb
mov
adc
sbb
enter
fdivr
sbb
(bad)
mov
nop
adc
inc
leave
out
inc
push
mov
sub
rol
jp
inc
mov
(bad)
push
ret
mov
jae
dec
push
jnp
mov
lahf
xchg
retf
test
sub
sbb
repz
idiv
cmc
ret
pxor
inc
nop
mov
inc
mov
retf
add
fsubr
mov
mov
call
dec
jecxz
sub
fcom
iret
xchg
aam
test
iret
fwait
sbb
cmp
jnp
arpl
std
je
dec
scas
sbb
inc
xchg
ror
sbb
mov
rol
add
push
ds
aas
sbb
test
jbe
jmp
mov
pusha
stc
loopne
cli
(bad)
xchg
lods
jmp
mov
inc
push
and
mov
and
cmp
movs
xchg
xchg
data16
lock
jmp
out
mov
mov
cmp
sbb
call
std
mov
xor
inc
jns
ficomp
es
pop
jp
test
movs
repnz
inc
inc
cmp
fistp
retf
jae
mov
mov
push
pop
dec
scas
sub
lods
mov
cmp
pop
mov
push
dec
cmc
pusha
add
out
push
cdq
dec
fsubr
rcr
clc
lods
out
cmc
aaa
cld
test
shl
add
lds
inc
shl
je
cwde
dec
cmp
xchg
xchg
mov
test
test
js
xor
bnd
les
dec
loope
rcr
call
daa
pop
xchg
mov
cmps
inc
(bad)
test
adc
into
loopne
inc
sbb
xor
rcr
shl
outs
mov
and
in
xor
ret
xchg
pushf
bound
iret
jl
jge
jae
pushf
test
scas
repz
mov
add
mov
mov
and
adc
mov
in
test
push
sbb
retf
cmp
cmp
repz
addr16
and
jmp
xchg
(bad)
xchg
xchg
cmc
inc
loopne
or
test
cmp
inc
hlt
jmp
popf
mov
(bad)
dec
and
out
xor
ror
scas
repz
je
inc
sahf
push
xchg
rcr
std
inc
aad
in
mov
call
push
(bad)
cmc
or
sbb
ja
movs
sbb
or
xlat
outs
mov
xchg
out
aaa
pop
mov
xrelease
push
jle
xchg
cdq
or
ins
dec
cmp
icebp
ja
shl
stos
cmp
and
add
sbb
nop
jge
xchg
loopne
lock
jnp
ret
cmps
(bad)
and
sub
add
and
ror
cld
pop
and
dec
inc
hlt
push
pushf
loope
adc
jnp
jns
lods
push
movs
stos
mov
outs
inc
dec
sti
arpl
je
sbb
(bad)
cmp
daa
xchg
jecxz
out
sub
bound
fcomp
xchg
out
mov
paddw
sbb
jmp
fs
vmovaps
pushf
out
sbb
gs
cs
inc
into
mov
fmul
pop
fmul
test
test
loop
jmp
mov
and
(bad)
stos
rcr
shl
dec
xchg
(bad)
push
inc
stos
push
aad
repnz
inc
adc
mov
inc
enter
bound
sti
push
dec
xor
dec
mov
sub
loope
ins
jbe
vpshaq
cmp
es
and
xlat
jo
xor
sti
jno
pop
sub
addr16
into
xlat
mov
gs
lods
fimul
pop
popa
gs
mov
cmp
movs
bnd
lea
inc
and
aad
push
jmp
push
add
cli
(bad)
imul
push
rol
rcl
mov
mov
and
add
into
mov
sub
xchg
outs
shl
dec
aam
push
xchg
fcmovnbe
fsub
fild
jle
jp
in
rcl
push
pushw
movs
test
push
je
pop
fist
mov
ja
arpl
fidivr
cmp
push
(bad)
bound
mov
mov
xchg
or
cmc
pop
dec
add
push
call
popf
sbb
mov
add
mov
push
fwait
mov
sahf
jne
iret
xlat
das
pop
lahf
pop
add
or
retf
das
sbb
adc
imul
movs
out
pusha
shl
aad
scas
dec
pop
sub
in
aad
mov
jno
push
fst
stc
and
and
bound
retf
cmp
mov
cwde
push
ret
daa
daa
push
in
fwait
(bad)
cmp
jg
mov
inc
pop
xchg
adc
lods
in
mov
(bad)
or
popa
mov
popa
out
jg
pop
fild
lahf
mov
retf
jbe
xchg
xchg
aad
push
push
shl
add
scas
adc
lods
mov
lds
in
sbb
dec
adc
mov
mov
xchg
or
cwde
lock
and
mov
add
je
mov
pop
dec
push
cld
cmp
xchg
je
loop
sub
(bad)
stos
std
xlat
inc
mov
in
shl
and
xor
push
inc
sbb
mov
imul
cld
sub
xor
inc
xchg
sub
sub
inc
data16
sbb
sti
hlt
mov
mov
fstp
push
jns
addr16
pop
je
pushf
cdq
jb
xchg
rcl
daa
add
push
dec
or
push
aaa
cli
xor
adc
lods
(bad)
mov
outs
dec
mov
push
sub
sbb
push
xor
movs
dec
pop
shl
sbb
sbb
and
xor
or
add
aaa
movs
jp
sbb
pusha
sbb
fld
cmp
(bad)
lock
sar
push
xchg
xor
addr16
mov
mov
or
mov
into
div
in
nop
test
and
mov
jo
mov
push
scas
adc
ret
shr
xor
add
lds
xchg
jno
hlt
test
repz
add
in
pop
arpl
sbb
jns
mov
bound
dec
daa
mov
jmp
sub
(bad)
movs
scas
or
xor
js
pop
mov
dec
mov
pop
cs
mov
lea
fnstcw
jmp
test
add
push
push
mov
fdivr
push
xchg
inc
xor
mov
iret
leave
mov
mov
push
add
jne
(bad)
mov
push
out
movs
lds
xchg
fld
int
or
sbb
sti
mov
pop
jb
call
data16
jne
mov
mov
sbb
jbe
pop
sar
adc
out
inc
fmul
mov
int
shl
adc
inc
call
pop
push
xor
out
fsub
cmps
or
call
fcom
loop
in
ds
pop
pop
push
pop
xlat
sub
jno
cli
xor
cmps
int3
call
int
jl
dec
jle
in
lock
push
pop
test
(bad)
dec
fiadd
ins
shl
mov
dec
in
pop
mov
js
fistp
push
arpl
push
xchg
outs
(bad)
mov
mov
mov
(bad)
xchg
mov
sub
loopne
cmp
call
cdq
fnclex
xor
into
mov
clc
xor
cmp
call
out
fdiv
cmp
or
push
inc
mov
mov
pusha
or
out
nop
pop
dec
mov
aad
out
outs
jl
jne
mov
jb
add
xchg
mov
data16
mov
(bad)
mov
and
mov
push
dec
jecxz
repnz
aad
mov
mov
fild
pop
cmp
or
movs
(bad)
in
cmp
test
mov
push
mov
daa
jmp
push
xor
aaa
push
(bad)
and
push
addr16
xchg
dec
lods
xor
mov
call
daa
mov
jmp
sbb
cdq
gs
xor
out
dec
aaa
inc
push
jae
adc
stos
aas
xchg
imul
imul
fnsave
out
add
jp
sub
sbb
leave
adc
fcmovb
jl
lods
push
pop
cmp
xchg
lea
lea
mov
pop
or
pop
cld
fstp
(bad)
inc
xor
or
daa
dec
rol
cmp
cmp
add
aaa
test
add
add
xchg
sbb
jo
and
sub
enter
faddp
jbe
je
add
xchg
add
stos
push
(bad)
loop
jno
adc
fs
in
push
push
aad
pop
inc
rcr
mov
ss
icebp
gs
xchg
or
mov
dec
test
hlt
push
jp
clc
test
popf
std
lods
js
add
push
cwde
add
bound
mov
inc
rcr
jnp
adc
loope
test
loop
gs
dec
pop
stc
mov
lock
pusha
lahf
jmp
sbb
xor
call
test
outs
cmp
stc
movs
test
pop
retf
add
in
daa
test
imul
cmps
push
pop
inc
(bad)
sbb
fwait
test
sbb
push
aaa
sub
lea
mov
push
and
lock
mov
dec
cs
xchg
inc
cmp
mov
xchg
mov
jl
adc
dec
mov
dec
inc
pusha
xor
lea
xor
mov
cwde
int3
or
mov
xlat
cmp
popa
movs
imul
pop
aad
lahf
data16
cmp
fdivr
je
jl
inc
push
clc
and
adc
imul
shl
test
pop
pop
mov
(bad)
mov
mov
pop
cmp
fdivr
sahf
cmp
in
cmps
mov
rep
jbe
aam
and
mov
mov
jmp
sbb
out
into
jns
enter
test
outs
icebp
ret
mov
sbb
mov
lods
cmp
or
xchg
add
push
pop
cld
(bad)
mov
inc
fs
add
cmp
add
es
imul
cmc
cmp
loopne
fild
push
sbb
dec
cwde
jne
cmp
mov
mov
test
fimul
mov
retf
and
gs
xchg
mul
mov
icebp
and
xchg
sbb
ffree
push
outs
stos
inc
cmp
retf
mov
sub
or
cmc
pop
shl
fnsave
or
lea
xlat
cmp
xchg
mov
mov
jg
ins
mov
sbb
test
icebp
inc
rol
imul
bound
or
les
mov
inc
data16
mov
fcomp
push
addr16
repz
loop
inc
inc
add
cmp
out
(bad)
(bad)
sar
nop
sub
jo
xchg
outs
adc
shr
add
pop
ror
pop
call
ds
add
cmps
xlat
add
lea
or
sbb
cmp
and
jg
clc
xor
fs
data16
xor
fadd
ins
(bad)
stc
arpl
in
push
adc
in
fild
fs
inc
pop
and
push
imul
shr
inc
xor
div
adc
cdq
sub
mov
(bad)
div
xor
(bad)
frstor
dec
iret
push
int
idiv
cmp
and
jge
(bad)
sbb
xadd
loopne
rol
jl
sahf
inc
mov
into
pop
stos
lahf
aam
inc
mov
sbb
inc
push
pop
out
pushf
retf
loop
(bad)
ins
inc
lds
stc
nop
ficom
sub
xchg
cmc
movs
inc
pop
sti
dec
sar
xlat
and
outs
outs
fnstcw
lds
cdq
sub
loop
cdq
pop
fwait
or
cmp
dec
cdq
sub
fnstsw
ret
or
cmps
aam
adc
(bad)
mov
addr16
xor
add
sbb
scas
sbb
iretw
retf
out
fdivr
jle
adc
mov
and
cmp
out
xor
pop
mov
cli
sar
mov
fcomp
sahf
daa
jp
call
aad
adc
bound
add
retf
mov
sub
jae
scas
sub
jmp
push
jne
xor
test
and
pop
or
push
js
sbb
jns
xchg
in
add
and
sar
movs
add
mov
ror
push
lods
outs
sti
xor
out
mov
mov
outs
aas
rcl
push
clc
push
repnz
ja
enter
push
push
pop
mov
jb
dec
dec
sbb
imul
xchg
mov
sub
pop
push
dec
das
dec
sbb
movs
gs
lea
sub
cmps
push
push
jmp
imul
loopne
inc
dec
popa
scas
iret
sar
mov
push
neg
mov
inc
addr16
push
sbb
mov
mov
imul
ret
es
xor
jb
lea
pop
shr
mov
ret
jg
push
dec
adc
inc
mov
cwde
or
dec
cs
fimul
push
pop
or
pusha
outs
jnp
sub
push
sub
push
stos
stc
and
jne
jg
outs
add
aas
lods
mov
sub
jnp
sbb
or
or
mov
ins
outs
out
and
pop
add
imul
mov
xchg
xor
or
pop
xchg
(bad)
jae
rcl
sub
sub
xor
add
xor
cmp
retf
iret
ror
jns
sbb
mov
xor
int3
xor
push
push
mov
call
xor
xchg
inc
jmp
repz
mov
dec
xor
jb
aad
aaa
das
mov
and
imul
push
repz
les
mov
int3
ins
push
jle
setle
sbb
lahf
loop
and
pushf
fs
sahf
push
ret
dec
push
jmp
retf
rcl
fxch
(bad)
jg
mov
stc
jmp
jns
add
clc
cwde
xchg
or
push
lods
(bad)
mov
neg
push
rol
jbe
clc
jno
add
jmp
jecxz
push
push
cmp
mov
(bad)
sti
mov
xlat
sbb
add
xlat
mov
jb
loope
cdq
stos
xor
cmp
(bad)
cdq
mov
lea
xchg
xor
jb
pop
and
je
(bad)
or
mov
or
clc
sub
sub
repnz
into
test
addr16
cdq
and
jecxz
bound
je
inc
imul
movs
mov
(bad)
sub
addr16
mov
adc
dec
xor
nop
jge
es
js
aad
jo
pop
lahf
lock
cmc
retf
inc
mov
imul
cld
fstp
(bad)
sub
push
jo
mov
shl
dec
movs
ret
outs
lods
(bad)
add
pop
out
push
bound
cld
jb
leave
sbb
mov
mov
pushf
in
data16
stos
sub
pop
cmp
and
push
stc
(bad)
sub
addr16
xchg
call
popf
jmp
mov
jge
into
xchg
add
cmp
pushf
sbb
enter
mov
cmp
pop
pop
dec
and
add
sbb
sbb
scas
test
or
sti
imul
xlat
sub
cs
cdq
iret
popa
sti
cld
or
pop
mov
bnd
std
test
repz
stos
xor
lahf
pop
pushf
rol
test
test
ror
(bad)
mov
jno
mov
cmps
retf
add
outs
xchg
les
jns
adc
int
inc
test
push
fdiv
sahf
imul
sar
mov
mov
mov
lahf
bound
push
das
inc
loop
repnz
retf
fisubr
mov
popa
imul
cdq
cmp
sbb
imul
xchg
push
mov
sub
adc
add
out
push
sti
mov
aaa
and
sbb
dec
test
dec
cmp
and
cmp
cmps
push
mov
mov
cld
stos
add
pushfw
jg
pop
(bad)
das
pusha
cmp
jo
stos
call
mov
jmp
jecxz
aaa
cmp
adc
push
ret
daa
inc
daa
add
das
jp
pop
stos
ins
mov
mov
and
cmp
pop
adc
arpl
int
push
dec
push
scas
call
lds
sbb
call
mov
mov
loopne
sub
mov
cmp
and
imul
fwait
push
fstp
int3
jbe
inc
arpl
sti
bound
call
lahf
gs
mov
jmp
or
jle
pop
test
loopne
lea
mov
mov
jecxz
lods
push
jmp
loopne
sti
div
in
jno
mov
movs
push
mov
mov
cmp
xor
cmps
jne
dec
fs
xchg
ficomp
movs
fs
mov
loope
xchg
sbb
mov
push
sbb
push
push
mov
loop
push
cmp
dec
sti
cwde
mov
bound
jmp
push
clc
inc
sub
xor
mov
mov
xor
js
icebp
stc
cmp
les
jbe
sub
pusha
cmp
sub
lea
mov
in
fnsave
xchg
in
mov
rcl
(bad)
mov
jbe
jo
sbb
lods
mov
inc
inc
mov
jl
pop
clc
and
cmp
outs
jae
in
outs
pop
ret
iret
icebp
scas
jae
loopne
cmp
mov
xor
sub
rcr
push
push
int
getsec
add
fild
push
ficomp
stc
mov
fnstcw
clc
sub
das
and
loop
inc
mov
ficom
dec
push
aaa
aad
fs
pop
jp
or
adc
inc
(bad)
sub
cmp
mov
mov
push
imul
jp
into
inc
lods
pusha
push
mov
popf
ffree
adc
mov
xchg
mov
cs
jmp
cdq
aam
add
xlat
call
lea
add
stc
ss
or
test
push
mov
pop
fist
xchg
push
fcmovnb
stos
stos
out
(bad)
cmc
retf
fcom
mov
cmp
dec
out
jl
out
sbb
fmul
or
sbb
xchg
aas
data16
mov
lahf
lds
xchg
fimul
int3
pop
jmp
mov
fimul
cmp
cmps
mov
in
mov
pop
cmp
sar
(bad)
or
lea
call
fwait
push
out
mov
jp
jle
ret
mov
push
loope
icebp
lods
jnp
sbb
icebp
xchg
lods
arpl
adc
or
cmp
aam
cmp
stos
nop
call
(bad)
lahf
sub
mov
out
add
or
out
out
lock
and
sbb
cmps
dec
jnp
jge
inc
hlt
fsub
cmp
movs
or
js
jno
pop
adc
lahf
sub
pusha
inc
cmp
inc
adc
xor
dec
aas
add
pop
push
adc
dec
arpl
(bad)
xor
push
adc
daa
dec
les
mov
mov
hlt
stc
xor
jl
and
adc
jns
(bad)
out
and
aas
(bad)
cli
in
retf
(bad)
xor
dec
lods
into
sar
xchg
outs
out
jle
popf
outs
in
(bad)
adc
leave
sbb
or
pop
xor
jns
retf
mov
cmp
inc
add
je
pop
inc
push
test
xchg
pop
int3
repnz
lods
cmp
call
das
jle
mov
jo
push
aam
xor
push
dec
xchg
fwait
in
(bad)
mov
aas
aam
adc
out
or
in
dec
stos
xchg
mov
imul
xchg
loopne
adc
push
sub
xor
loope
pop
(bad)
or
jecxz
xor
cmps
xchg
mov
push
pop
sub
jmp
ins
cmp
pop
loope
mov
push
push
pop
scas
inc
icebp
imul
daa
cmp
hlt
mov
mov
sub
je
rcr
fsub
mov
sbb
in
pop
loopne
ffreep
mov
in
sbb
lods
mov
cmps
sub
call
movs
mov
inc
jns
add
pop
push
fwait
ins
mov
adc
push
cmp
hlt
arpl
and
pop
movs
push
mov
pusha
pushf
fisttp
xor
mov
inc
cmp
inc
lock
addr16
jne
mov
mov
jmp
inc
lock
clc
jnp
adc
cmp
add
(bad)
cmps
ja
xlat
pop
mov
loope
push
and
stc
mov
into
push
or
retf
or
add
pop
sbb
int
add
lods
repz
xor
add
addr16
(bad)
adc
ja
add
repnz
jbe
shr
jl
dec
sub
into
jge
pushf
sub
das
xchg
cli
ins
or
cmp
sbb
cmp
push
(bad)
in
popa
es
jne
hlt
cli
lods
loope
fs
cmp
mov
mov
ins
outs
and
movs
jmp
pop
in
dec
daa
xor
pop
cmps
jp
rol
xor
call
and
and
leave
rcl
dec
pop
mov
and
mov
dec
cs
push
sub
inc
jle
fisttp
lahf
les
jno
push
or
shl
(bad)
xor
mov
xchg
add
repnz
mov
or
fwait
sbb
xchg
loope
fadd
popa
inc
inc
and
(bad)
cld
mov
outs
inc
jmp
or
aas
cmp
dec
xlat
adc
lea
or
rol
xor
xchg
stos
dec
ja
rcr
dec
shr
mov
lock
mov
retf
cmp
ret
pop
xchg
sub
add
mov
aaa
push
int3
mov
mov
jb
cld
adc
(bad)
fistp
or
int
hlt
jle
js
pop
cs
int3
movs
rol
adc
arpl
lods
enter
daa
and
push
push
xor
jecxz
mov
pop
or
xchg
scas
add
xchg
mov
outs
pushf
push
xchg
jnp
add
mov
ja
pop
and
add
push
push
cmp
pop
inc
pop
and
push
inc
mov
popa
push
das
ficom
xor
sub
mov
xchg
push
repz
loopne
sar
icebp
fisub
mov
sbb
in
mov
ins
rol
push
sbb
push
(bad)
sbb
jo
mov
mov
jge
les
sub
cwde
dec
jbe
inc
inc
sbb
sbb
into
fadd
mov
dec
cmp
(bad)
pop
mov
sbb
in
enter
mov
add
loope
retf
ss
es
jmp
cmp
repnz
jle
and
cmps
mov
jo
and
jg
adc
and
pop
jno
adc
sti
jmp
rol
das
loop
xor
cmp
pop
mov
xor
and
push
cmps
arpl
xor
movs
adc
and
mov
dec
sbb
stos
arpl
rol
add
scas
and
(bad)
jecxz
and
push
lods
sar
or
and
fst
pop
mov
push
mov
cld
test
ja
adc
dec
data16
pop
mov
adc
or
inc
mov
pop
xchg
or
lea
(bad)
in
nop
test
xchg
sbb
iret
jmp
(bad)
aad
xchg
in
push
ins
cwde
mov
xor
cld
jns
jnp
jp
mov
jmp
adc
sbb
add
xchg
and
sbb
mov
add
(bad)
out
dec
or
cli
loopne
pop
mov
cld
in
sar
cmps
mov
add
shl
stos
xor
ror
adc
jbe
jo
add
cmc
dec
dec
ror
scas
sbb
sub
int3
cmps
mov
sub
inc
push
sbb
dec
mov
xchg
hlt
sub
or
cmp
and
xchg
mov
dec
div
imul
sub
icebp
sbb
mov
popf
xor
cmp
jmp
dec
jbe
ss
xor
arpl
clc
nop
aas
cmp
jp
daa
loope
pop
xchg
sub
push
aam
sub
xchg
rol
xchg
mov
in
imul
(bad)
outs
(bad)
cdq
mov
fs
add
shl
and
cmp
and
push
mov
pop
xor
xchg
xchg
les
sahf
sub
movs
fwait
test
les
or
jo
jns
or
dec
xor
ret
sbb
cdq
data16
dec
xor
repz
repnz
call
mov
sar
adc
xchg
lock
lahf
mov
xchg
or
fs
dec
daa
popf
push
sub
imul
in
addr16
xor
aaa
data16
dec
sbb
mov
or
jnp
fsub
stc
mov
inc
(bad)
jnp
daa
inc
fld
jmp
xor
jne
or
repnz
push
in
dec
jns
in
jp
dec
xor
jno
xor
(bad)
pop
test
jle
loope
in
(bad)
hlt
retf
int3
outs
cmc
pop
cmp
clc
mov
jno
call
adc
xchg
push
jle
cmp
jle
mov
shl
mov
sbb
into
mov
in
rol
(bad)
mov
fs
hlt
jg
fisub
imul
or
out
int3
lods
sti
push
pop
arpl
xchg
jbe
repz
add
sub
xchg
push
xor
and
jmp
test
push
scas
mov
push
add
mov
cmp
xchg
sbb
lods
jmp
and
jecxz
cdq
add
mov
mov
cmp
dec
mov
add
daa
sbb
gs
jmp
int3
dec
mov
repz
loope
lahf
fadd
fcom
or
mov
test
pop
(bad)
enter
mov
cmp
and
and
jb
push
bound
stos
div
in
mov
or
jl
xchg
icebp
out
enter
push
sti
jl
adc
jo
clc
popf
pop
rcl
or
sbb
jne
cmps
aas
pop
mov
leave
shl
pop
and
adc
retf
dec
pop
fwait
dec
push
and
js
mov
pop
xchg
inc
out
jg
imul
and
(bad)
xor
cmp
mov
ret
(bad)
out
sub
les
pusha
lock
sub
icebp
cwde
dec
push
ret
repnz
jns
(bad)
cmp
sbb
fisub
aad
clc
sub
xchg
or
push
test
inc
arpl
retf
cmc
cmps
icebp
xor
aam
or
fwait
xor
jp
inc
xor
inc
sub
sbb
aad
xor
add
outs
stc
jge
and
int
pop
push
or
cmp
push
ror
fwait
mov
iret
cmp
aam
push
imul
dec
aad
inc
jno
clc
add
test
sbb
repnz
test
inc
into
add
cmp
push
sahf
rcl
cli
imul
dec
xchg
ins
scas
dec
pop
fs
test
daa
adc
sub
jle
popf
inc
ret
out
cmp
ficom
xchg
out
cmp
movs
adc
pop
xor
xor
jge
sub
push
sub
stos
out
push
push
movs
mov
in
adc
jnp
and
jl
pop
sti
jge
adc
int3
xor
cmp
pop
xchg
cmps
(bad)
shl
aad
push
add
unpckhps
(bad)
dec
xchg
js
push
icebp
outs
adc
mov
jmp
sbb
cli
sub
push
adc
jp
jmp
loop
dec
sti
cmc
pop
addr16
ins
pop
outs
mov
les
jecxz
or
test
jns
mov
and
jmp
call
push
hlt
mov
pop
xchg
sar
aam
xchg
clc
jae
lahf
jns
jno
outs
xor
mov
jnp
(bad)
ret
or
rcr
mov
xchg
fsub
jmp
sub
stc
xor
push
xchg
jb
out
and
pop
in
jbe
aas
mov
jp
jns
mov
repz
fst
test
in
mov
mov
mov
hlt
xor
mov
repnz
mov
pop
or
push
jmp
(bad)
sbb
jmp
(bad)
add
jo
je
call
mov
dec
in
aad
into
mov
stos
jg
ss
push
jecxz
push
sbb
adc
das
sub
arpl
imul
push
jnp
inc
dec
mov
icebp
or
movs
inc
xor
rcr
mov
xchg
inc
mov
(bad)
mov
call
inc
xchg
imul
int
or
lock
sub
mov
repnz
int3
lock
push
call
dec
push
or
adc
movs
mov
aad
test
nop
and
scas
cmp
or
sbb
push
aas
and
fimul
in
ins
movzx
xchg
push
(bad)
repz
or
inc
pop
or
pusha
add
es
xor
out
xor
cmp
pop
call
adc
test
xlat
call
push
fisttp
ss
pop
repnz
inc
loopne
dec
(bad)
mov
add
shr
adc
mov
out
jns
sub
enter
imul
cmp
arpl
scas
jb
xchg
ret
sub
cld
jmp
ret
inc
ss
mov
js
mov
das
mov
mov
enter
data16
data16
sahf
std
int3
(bad)
imul
loopne
sub
out
or
sub
cdq
add
(bad)
clc
sub
scas
hlt
hlt
push
vmwrite
xchg
mov
enter
and
pop
push
mov
push
mov
iret
push
sbb
sub
loopne
fwait
inc
imul
jg
jo
(bad)
js
xor
test
sahf
and
aad
mov
enter
ins
mov
fnstenv
push
or
jecxz
outs
sub
cwde
inc
push
std
cmc
leave
jb
inc
cdq
or
movs
psllq
xor
mov
push
out
test
sub
in
mov
mov
fiadd
jge
pushf
out
pop
pop
stc
push
cmp
rol
xchg
daa
mov
bound
or
jecxz
pop
push
nop
dec
shr
fisub
dec
test
xchg
in
sbb
scas
sahf
mov
push
sar
mov
jae
and
sub
jno
mov
in
mov
jecxz
inc
ja
jmp
dec
mov
add
iret
cmp
pop
lock
arpl
retf
cdq
stos
and
or
out
jmp
les
les
sub
mov
aad
push
or
cmps
or
adc
sub
icebp
inc
loopne
pusha
mov
test
mov
mov
add
pop
clc
pop
push
inc
fsub
cmp
scas
cmp
mov
call
mov
das
fbld
dec
dec
xchg
inc
pop
pop
lahf
or
dec
jl
push
jmp
and
and
add
mov
dec
rol
in
mov
icebp
pop
mov
jne
mov
jmp
out
jg
es
mov
rol
rcr
data16
sbb
push
aaa
stc
fdiv
mov
lods
dec
fistp
push
dec
mov
fsub
out
popa
mov
pop
mov
pop
add
call
cli
and
imul
adc
jge
xchg
dec
mov
test
in
add
push
lods
scas
push
lock
stos
cmp
fbstp
add
lds
std
add
cmp
xchg
or
scas
dec
and
lock
adc
sbb
inc
mov
leave
shl
xchg
adc
in
pop
jae
xor
test
dec
in
cmp
sub
retf
adc
inc
test
ror
stos
call
jae
mov
wbinvd
or
push
and
mov
xchg
icebp
int3
xor
and
(bad)
or
in
fwait
cld
fdivr
(bad)
mov
(bad)
fimul
and
div
shl
(bad)
sbb
jle
mov
cmp
icebp
shr
add
adc
pop
retf
ret
and
mov
in
loopne
(bad)
cmp
cmc
xchg
xchg
mov
dec
cld
aam
xor
pop
xchg
dec
jns
sub
into
mov
sbb
pop
and
jmp
or
mov
dec
repz
or
aaa
(bad)
jle
lahf
pop
retf
test
add
or
sbb
inc
outs
push
stos
(bad)
call
cmc
dec
ins
popa
fwait
das
ds
outs
adc
cmps
jl
add
in
or
push
add
fisttp
movs
dec
pop
adc
cs
pop
cld
adc
fsub
add
or
lea
inc
cmp
jle
cmc
sti
orps
dec
inc
jns
adc
aaa
and
popa
xor
mov
out
pop
leave
in
push
(bad)
jb
pop
mov
fldpi
mov
cmp
mov
mov
push
push
mov
or
adc
inc
mov
dec
(bad)
leave
push
fwait
xor
lock
sub
push
mov
mov
pop
pop
jbe
push
jae
push
pop
scas
leave
and
mov
rcl
pop
test
dec
or
popa
pop
shr
sbb
xor
pop
ret
(bad)
pop
pop
clc
or
jl
mov
mov
mov
cmp
inc
mov
jns
in
pop
mov
into
adc
cmps
(bad)
jecxz
ror
xor
imul
add
adc
dec
jg
loope
das
idiv
jne
clc
dec
aam
mov
mov
add
mov
jecxz
xlat
xor
aas
(bad)
pop
mov
xchg
test
xchg
jp
and
repz
push
lock
inc
push
(bad)
popa
in
jg
popa
inc
sub
in
add
sub
mov
xchg
scas
arpl
aas
add
data16
daa
add
jo
in
adc
aam
adc
sub
shl
cmp
iret
jne
xchg
sahf
add
mov
rep
cld
add
inc
out
or
daa
js
imul
jl
or
push
mov
jmp
popf
sub
mov
jp
ins
cdq
push
jbe
mov
xor
dec
ins
sub
int
push
ins
push
fdiv
mov
in
cs
pusha
jnp
mov
dec
jmp
(bad)
mov
fdivr
cmp
sbb
nop
and
mov
nop
aaa
sub
iret
xor
repnz
xchg
cmp
shr
jb
in
fistp
ss
sti
push
pop
icebp
lahf
push
mov
test
ret
sbb
lea
inc
mov
mov
pop
cmc
pushf
push
cs
and
sti
cmp
call
bound
and
(bad)
bts
hlt
push
fist
punpckhwd
les
not
shl
cmp
addr16
xor
xor
sbb
retf
cmps
lods
movs
cmp
aas
xor
pop
mov
pop
inc
fwait
pop
jae
push
leave
lock
mov
fs
inc
push
lahf
xor
xchg
adc
xor
pop
cwde
jns
xor
(bad)
(bad)
jmp
movs
push
dec
xchg
dec
ret
in
mov
dec
and
cmc
xor
call
int
adc
adc
sbb
adc
sbb
popf
repz
es
inc
lods
test
jmp
outs
push
inc
mov
mov
sbb
jb
dec
out
mov
dec
ss
js
and
in
xchg
and
aaa
retf
aaa
sub
adc
xor
(bad)
xor
ja
mov
stc
repz
retf
xchg
scas
pop
or
imul
rcl
pusha
mov
in
fwait
cmp
mov
arpl
stos
jmp
in
mov
xor
popf
jg
gs
mov
cdq
xchg
inc
aad
jge
cmp
cmps
push
jnp
mov
shl
or
mov
fsub
sbb
or
cmps
jo
loope
cmps
cld
push
jecxz
ret
and
dec
ds
test
jmp
sub
jecxz
fstp
fnstsw
pushf
ins
xor
jnp
das
out
hlt
pop
lods
leave
outs
xchg
push
dec
movs
jl
jae
into
call
or
push
outs
xor
jecxz
xlat
push
popf
(bad)
pop
les
dec
fs
scas
add
in
dec
cmp
add
dec
inc
xchg
add
scas
and
retf
or
ds
sahf
or
push
fwait
test
xor
repz
scas
jmp
icebp
mov
les
pusha
push
dec
pop
iret
dec
adc
push
pushf
sub
inc
push
or
xadd
xchg
xchg
outs
aas
xchg
popf
fldl2e
rcr
imul
pushf
push
in
add
fmul
cmp
aaa
dec
jg
and
inc
xchg
xor
cmp
cmp
jecxz
out
xchg
dec
fidivr
push
ret
sbb
and
lea
sbb
iret
ds
add
inc
mov
adc
jb
bound
call
fsub
xor
out
call
dec
aam
loop
and
retf
mov
mov
fidivr
cmp
push
and
das
inc
repz
add
adc
jno
les
pusha
sti
in
sbb
adc
sar
cmp
xchg
fstp
addr16
xchg
cmc
ret
pushf
push
and
fadd
in
inc
nop
out
lahf
in
hlt
retf
sahf
fbld
adc
outs
jbe
mov
add
ja
movs
ret
push
adc
jmp
mov
jns
outs
cmp
(bad)
or
gs
or
lods
mov
mov
sub
sbb
mov
xchg
cmp
mov
out
mov
mov
jns
std
out
xchg
mov
push
cmp
loope
jmp
add
fild
push
xchg
cwde
pop
mov
mov
mov
in
lds
pop
dec
xchg
aas
das
repz
out
inc
xchg
(bad)
retf
xor
add
loope
push
xor
cdq
and
or
push
xchg
add
and
out
inc
or
xor
pop
out
pop
sar
retf
xchg
dec
call
push
in
lahf
cmp
repz
push
xor
sub
cmp
cmp
fwait
loopne
lea
call
xchg
ins
mov
movzx
fiadd
(bad)
push
jnp
pop
mov
or
lds
scas
not
in
cmp
ret
lods
and
fidivr
xor
xor
rcl
stos
jnp
out
cmp
adc
leave
(bad)
clc
js
inc
inc
sti
sbb
fs
int
movs
sub
pushf
mov
pop
int3
rcr
test
gs
fsubr
xor
icebp
add
popa
and
jns
xor
mov
scas
and
inc
jmp
scas
push
adc
rcr
mov
fnstenv
enter
daa
sti
retf
xchg
add
clc
or
std
xlat
adc
fist
or
xchg
sub
popa
push
dec
nop
das
mov
cmc
jbe
adc
imul
cmc
cdq
arpl
shl
shr
cmc
fnsave
xlat
xor
fild
ins
cdq
std
imul
cmp
jg
mov
lea
mov
das
out
test
push
sub
sub
push
mov
rol
das
push
std
call
add
mov
(bad)
sti
cmp
push
fsub
push
bound
sti
imul
out
inc
jae
and
dec
sbb
jmp
call
int3
cmp
cmp
es
cld
mov
lods
mov
stc
or
pusha
ret
push
(bad)
repz
and
mov
or
add
stos
xchg
push
or
stc
add
add
jo
push
rcl
aam
(bad)
jmp
popa
es
xchg
fwait
jns
inc
sbb
loop
call
dec
and
inc
mov
fcomp
repnz
inc
scas
jmp
adc
pop
movs
call
pop
lahf
sub
mov
rcl
xchg
cmp
rol
xchg
jl
cmp
xlat
test
in
ffreep
loope
fisub
dec
fld
mov
fcomp
jbe
ret
inc
js
dec
aam
mov
neg
push
sbb
arpl
inc
out
call
adc
xor
scas
mul
mov
dec
repz
fwait
lods
cwde
jp
sbb
jmp
je
retf
nop
jp
gs
iret
xor
ins
adc
pminub
bound
jp
mov
das
xchg
fwait
xchg
add
mov
inc
aaa
xchg
hlt
pop
imul
aad
out
adc
pop
cli
fadd
adc
add
sub
dec
cli
add
and
or
out
call
add
add
add
add
add
add
add
clc
mov
cmc
push
shl
(bad)
push
adc
outs
jae
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
xadd
inc
xchg
aaa
les
add
add
add
add
add
xor
add
iret
ja
mov
pusha
add
pusha
add
add
add
add
xor
add
mov
add
or
add
add
jae
adc
add
inc
add
add
add
cli
add
add
jno
add
mov
add
outs
call
inc
add
inc
add
add
mov
add
add
add
je
add
adc
pop
add
add
in
push
ror
jmp
xor
movs
call
movs
xchg
popf
clc
test
and
(bad)
push
or
aaa
ins
lds
in
mov
push
repz
and
xor
(bad)
push
add
and
pop
dec
or
xor
push
cmp
(bad)
dec
ret
xor
(bad)
lods
leave
aad
(bad)
retf
cs
cmps
cmp
rol
jecxz
pop
xchg
push
fistp
fiadd
adc
jl
retf
push
aaa
sbb
stos
pop
xlat
mov
push
fsubrp
mov
dec
jecxz
aaa
or
clc
mov
dec
es
scas
add
sub
dec
lods
and
jnp
adc
stos
dec
mov
mov
sub
mov
outs
jno
js
movs
xchg
outs
cmc
xchg
pusha
pop
div
cmc
jo
add
lods
mul
bound
call
inc
(bad)
cmp
jmp
repnz
aaa
xchg
cmp
imul
add
arpl
push
sbb
hlt
sbb
dec
mov
xchg
test
mov
cs
dec
popa
xor
pop
jmp
dec
call
jne
or
sbb
fadd
sbb
int3
inc
push
cmp
(bad)
mov
jmp
jle
movs
sub
loope
mov
pop
and
outs
pushf
iret
fistp
scas
outs
and
xchg
movs
mov
popf
or
aam
ins
jp
and
push
or
sub
push
mov
js
clc
pushw
mov
xor
addr16
rol
adc
and
fldcw
ds
int3
loope
cvttps2pi
in
mov
fsincos
mov
and
pop
in
and
or
test
jnp
cmps
pushw
into
add
mov
inc
imul
dec
mov
jb
jle
dec
jnp
jmp
icebp
fld
mov
sti
and
dec
pop
pop
jb
sbb
xchg
pop
jne
push
inc
cwde
jp
dec
leave
push
sbb
(bad)
mov
sbb
lock
mov
fadd
add
xor
retf
lahf
int3
push
mov
adc
xchg
inc
das
pusha
and
mov
enter
cwde
pop
js
pop
cmp
fs
mov
mov
test
mov
xor
cmps
pop
sbb
jp
mov
push
sbb
xchg
call
(bad)
iret
out
shl
cmp
jge
push
jle
mov
pop
inc
add
sub
fcomp
sub
xchg
inc
dec
cwde
popf
ins
xlat
into
jp
into
inc
lock
(bad)
aam
rcr
cdq
jmp
push
call
enter
cwde
lods
cwde
mov
sub
fist
or
fild
mov
jnp
test
jl
fisub
lock
xchg
or
arpl
or
pop
fnsave
sub
cli
jmp
call
adc
jnp
out
mov
sbb
ss
xchg
xchg
mov
mov
xlat
test
lds
(bad)
jmp
dec
xchg
outs
inc
xor
cwde
jle
in
mov
mov
sahf
test
mov
jge
outs
or
add
xor
and
jmp
inc
in
xchg
scas
pop
push
(bad)
pop
repnz
push
das
mov
leave
jg
imul
fdivr
jo
sub
pop
aaa
cdq
jmp
sub
xor
cld
inc
push
rcr
xor
je
in
dec
cdq
sub
frstor
cmp
push
sub
stc
xor
add
les
dec
ins
add
sub
fwait
mov
lock
jl
xor
or
add
xchg
pushf
(bad)
test
in
cld
cmp
xchg
ror
jno
xchg
push
mov
das
cmp
lock
push
gs
and
scas
clc
rol
xchg
push
aam
push
les
int
imul
add
push
inc
or
xor
mov
and
pop
les
jbe
aaa
imul
into
xchg
cmps
lea
and
daa
aam
xlat
xchg
xchg
test
pop
sub
mov
std
daa
dec
cmps
cdq
sahf
push
aad
adc
mov
dec
xchg
loop
push
cmps
jmp
mov
mov
sbb
jg
jmp
(bad)
arpl
or
inc
sbb
outs
add
jo
movs
mov
push
mov
and
adc
imul
mov
icebp
sub
cs
sbb
sub
sub
cs
push
je
test
inc
xor
sub
leave
cmp
mov
out
into
out
mov
mov
dec
icebp
sbb
inc
scas
pop
or
mov
nop
sub
or
mov
lods
inc
mov
xlat
retf
shr
add
inc
mov
xor
push
push
cdq
(bad)
mov
pop
xor
sti
xchg
ja
int
repz
inc
add
adc
sub
leave
cmps
cmp
js
add
push
jnp
dec
push
sub
sbb
scas
sahf
data16
mov
pusha
xchg
add
mov
aas
or
jae
(bad)
(bad)
pop
leave
test
pop
jns
xor
lahf
jl
out
or
push
int
out
imul
xor
xor
jae
int
lock
cmc
jge
push
and
mov
ret
mov
js
imul
or
xchg
mov
aaa
test
mov
test
outs
mov
ret
mov
icebp
cmp
cmp
movs
pop
cwde
test
and
imul
fld
scas
fnsave
int
xor
mov
aas
(bad)
and
sbb
lea
xor
adc
scas
mov
push
sbb
add
rcr
idiv
inc
mov
xchg
mov
lds
add
add
(bad)
lds
mov
sahf
pop
ror
cmp
add
call
dec
sbb
mov
dec
mov
sbb
test
arpl
fbstp
rol
aad
dec
iret
mov
sub
icebp
fstp
pop
jne
leave
cld
call
bound
inc
mov
mov
push
adc
outs
jae
enter
sbb
mov
pop
sub
mov
les
xor
push
in
imul
sti
adc
sub
pusha
movs
scas
xlat
adc
push
iret
sub
rcl
inc
or
jl
mov
stos
or
jecxz
pop
and
inc
jae
nop
xor
dec
xchg
inc
test
jg
jbe
inc
lods
and
xchg
mov
pop
and
js
cli
rcr
sub
test
mov
movs
pop
in
xchg
into
xchg
inc
or
xor
jmp
mov
mov
push
in
push
dec
pushf
fcom
xchg
outs
paddusw
aad
mov
add
pop
jne
aas
in
pop
jecxz
lds
fcomp
aad
jle
repnz
jl
mov
out
mov
es
out
jecxz
cmp
std
adc
in
mov
mov
pop
cmps
movs
rol
cld
out
xchg
push
stos
mov
add
cmp
lods
mov
scas
sbb
je
pusha
sbb
sbb
retf
inc
push
daa
jne
test
or
dec
pop
lods
pop
xor
mov
lahf
push
les
mov
dec
sub
dec
jb
and
sub
cld
in
pushf
ins
sub
test
cdq
sbb
push
or
sbb
out
push
test
sub
test
(bad)
clc
or
pop
popa
fucom
add
xchg
stos
add
push
adc
dec
popa
mov
adc
sub
pop
test
in
xchg
(bad)
popf
xchg
imul
out
jg
mov
dec
scas
cmp
sbb
xor
jbe
adc
add
mov
adc
mov
jmp
xlat
mov
dec
cmp
pushf
shl
xchg
movs
mov
test
sar
sahf
mov
adc
in
int3
fs
shl
sahf
lds
fwait
inc
xchg
fld
cmp
shr
cdq
ja
mov
xchg
mov
xchg
push
or
in
cwde
and
push
aad
add
pop
aaa
xchg
nop
fisttp
lods
sahf
pushf
xchg
ins
int
popf
dec
(bad)
rol
std
fldcw
int3
jmp
jno
out
js
jo
pushf
pop
ins
ins
outs
jle
dec
out
mov
mov
inc
sbb
push
jbe
sub
jl
mov
jns
sbb
sbb
pop
movs
dec
popa
dec
ins
retf
jb
xor
sahf
xor
retf
xlat
inc
ficom
sbb
mov
aam
dec
icebp
fdivr
xchg
repnz
dec
add
inc
push
imul
xchg
or
movs
push
(bad)
bound
mov
cmp
push
mov
mov
pop
jne
adc
aad
lock
(bad)
push
shr
(bad)
sbb
inc
(bad)
mov
das
je
push
cmps
sub
clc
cmc
bound
pop
mov
(bad)
outs
fwait
sbb
int3
adc
xchg
enter
retf
add
imul
xchg
push
push
mov
scas
les
mov
mov
lahf
cmp
mov
div
daa
jno
mov
fnstenv
pop
jmp
std
loopne
sbb
loope
pop
and
call
add
push
adc
add
in
mov
xchg
dec
pop
cmp
retf
test
mov
in
dec
mov
ds
cwde
inc
mov
ins
mov
or
icebp
movs
xchg
(bad)
adc
rcl
sub
add
enter
and
call
sub
jl
jl
inc
mov
dec
dec
loope
push
aam
ror
sbb
dec
pop
mov
sbb
xor
cmps
xor
push
or
loopne
xchg
aad
push
push
mov
cdq
jmp
inc
fimul
mov
mov
stos
std
push
stc
mov
inc
sub
cmp
popa
std
xor
loop
xor
cmp
adc
fimul
(bad)
(bad)
dec
mov
sbb
scas
sub
and
aas
push
(bad)
sti
xchg
sub
int
(bad)
stc
in
sbb
mov
lock
mov
dec
xor
or
mov
xor
xor
add
dec
mov
jle
shr
cld
sahf
sbb
xor
leave
add
xchg
mov
sbb
dec
call
shl
push
pop
dec
into
fdiv
sub
scas
or
fidiv
loop
mov
mov
movs
shl
in
add
fimul
pop
in
push
test
sub
xor
sbb
cmp
sub
call
push
fadd
push
hlt
xchg
cmc
mov
dec
inc
icebp
icebp
xchg
inc
adc
push
xchg
out
dec
inc
pop
or
shr
jno
mul
xor
mov
ret
push
int3
mov
loopne
popf
push
sbb
cmp
fst
scas
mov
aaa
test
pop
mul
mov
cmc
mov
fs
fs
(bad)
push
aam
ds
adc
xor
mov
fisub
cmp
fstp
cmp
cmp
inc
enter
push
fst
xor
jp
mov
outs
and
mov
(bad)
frstor
or
pop
ja
imul
pop
pop
sub
ret
xchg
(bad)
dec
jne
jp
(bad)
pop
dec
dec
jo
push
push
or
fcom
outs
movs
in
pop
js
gs
fwait
test
adc
and
add
xlat
imul
or
ins
cmps
push
mov
mov
scas
mov
xor
sti
(bad)
jecxz
jmp
mov
and
push
xor
loop
jle
fsub
fidivr
xchg
xor
fidiv
dec
jno
and
push
mov
adc
das
xchg
rcr
pop
mov
add
jne
call
stc
xor
inc
outs
cmp
popa
cwde
sti
hlt
add
int3
and
cmp
jb
pop
mov
test
hlt
cmps
test
shl
aaa
sbb
adc
xchg
test
add
dec
stos
lods
pop
pop
mov
sub
out
test
inc
mov
mov
pop
jns
jp
retf
jmp
cs
pop
mov
fdivr
fcom
lahf
inc
push
or
popf
push
push
test
nop
sbb
pop
inc
pop
shr
mov
movs
cmps
pop
popf
adc
or
div
sbb
outs
xchg
xchg
or
jns
mov
iret
stos
dec
push
mov
out
pop
lahf
push
xchg
test
mov
int
lock
sub
dec
int3
or
cmp
pop
adc
scas
push
inc
into
jbe
sbb
aaa
cmp
dec
arpl
repz
mov
fidivr
js
in
clc
psubsb
lahf
sbb
std
xor
loop
xor
mov
clc
xchg
xchg
jmp
pop
push
ja
daa
push
and
mov
iret
test
push
dec
(bad)
imul
rcl
loopne
push
xor
call
je
cmp
mov
mov
mov
repnz
in
js
stos
adc
and
xor
mov
push
movs
add
loop
sub
add
clc
cmp
imul
or
dec
jno
xchg
or
enter
stos
(bad)
dec
scas
mov
mov
inc
cmps
call
inc
dec
cmp
pop
inc
(bad)
clc
arpl
aad
test
repnz
lea
add
add
jne
aam
out
cdq
mov
cmp
imul
std
inc
aad
xchg
push
scas
cmp
cmp
and
fmul
add
xchg
lods
fdiv
cmps
add
push
jecxz
gs
mov
or
pop
(bad)
mov
int3
pop
ja
js
cmp
push
inc
not
cmp
xchg
stos
mov
in
and
pushf
pop
div
repz
ins
push
sub
rol
fidivr
test
mov
sub
daa
movs
movs
cmp
cli
jmp
and
or
fldenv
push
add
mov
call
fstp
mov
and
pusha
addr16
in
lock
mov
arpl
xchg
dec
dec
das
nop
into
sbb
jo
adc
mov
sub
adc
adc
dec
or
push
in
out
nop
adc
pop
in
rcr
rol
mov
adc
jbe
cmps
cmp
daa
push
xchg
xchg
into
bound
in
movs
int
cdq
pop
ja
xor
fld
out
sbb
or
das
push
mov
in
add
mov
push
ins
or
mov
mov
pop
loopne
sahf
es
fsub
jns
jg
or
cs
xor
inc
adc
xchg
mov
jle
inc
mov
enter
inc
pop
jg
add
shl
fcmovu
push
out
jne
or
(bad)
jae
lock
jle
stos
sbb
loope
xor
jg
fbstp
scas
js
in
lahf
inc
push
enter
mov
inc
fidiv
jmp
(bad)
neg
lds
scas
pop
cli
sub
out
sub
out
jno
push
add
xor
data16
dec
mov
cmp
cli
aaa
test
movs
call
movs
mov
scas
mov
mov
aaa
cmp
shl
out
dec
dec
adc
popa
aas
daa
cmp
xchg
mov
mov
add
icebp
xchg
and
jle
push
sub
jno
int
or
sub
les
scas
repz
in
shl
mov
sub
shl
add
movs
mov
jbe
call
cmp
fucomp
mov
mov
mov
ret
pop
fist
fistp
inc
dec
pop
inc
add
(bad)
mov
sub
add
out
dec
imul
repnz
inc
xchg
aas
mov
xchg
popf
inc
mov
movs
cmp
repz
mov
ja
and
call
push
test
ss
or
ret
add
add
cli
jge
in
es
imul
arpl
not
adc
push
int3
xchg
cli
xchg
nop
daa
inc
add
sub
or
sub
ret
dec
(bad)
out
(bad)
fnstsw
fdivr
ins
sti
(bad)
cdq
jno
xchg
add
iret
sbb
pop
cmps
push
inc
frstor
in
mov
pop
movs
push
cmp
add
xor
inc
jnp
or
(bad)
inc
dec
aam
(bad)
push
dec
ror
out
push
into
xchg
inc
outs
adc
adc
bound
nop
jg
push
lods
cdq
hlt
push
je
cmps
mov
push
push
jle
int3
outs
shl
and
adc
or
sub
cwde
daa
mov
dec
sub
bound
mov
loopne
sub
(bad)
sub
and
jp
lods
mov
scas
adc
test
lods
dec
xor
scas
mov
shl
jp
(bad)
push
lods
outs
sbb
ficom
or
push
xchg
js
or
xchg
xlat
inc
daa
xchg
scas
iret
or
cmp
push
jo
jae
add
ds
stc
ds
mov
push
push
dec
dec
push
add
out
adc
dec
pop
call
adc
int
out
out
retf
jle
sbb
loopne
adc
pop
pop
jae
xchg
xchg
fistp
cmp
inc
mov
fisttp
shl
cmp
mov
lea
ret
aaa
stos
dec
xor
mov
push
(bad)
and
jge
and
mov
xor
cmp
(bad)
jl
das
pop
scas
call
(bad)
dec
xchg
cmps
pop
scas
and
inc
jmp
dec
cli
outs
in
push
push
jp
iret
dec
adc
dec
fwait
out
imul
mov
push
shl
mov
sbb
neg
and
mov
ret
dec
and
adc
pop
inc
out
test
add
sbb
sub
stos
xor
addr16
push
sbb
push
sbb
iret
pop
movs
into
cs
repz
xchg
bound
dec
and
retf
lahf
(bad)
or
out
cmp
(bad)
xor
mov
cwde
xchg
loop
pop
pop
cmp
in
xchg
add
adc
dec
in
mov
mov
das
out
sub
mov
dec
pop
pop
pusha
add
add
inc
dec
sbb
or
and
or
aaa
push
mov
(bad)
mov
cmp
dec
push
je
imul
dec
test
mov
fst
inc
in
nop
in
fdivr
ret
sub
movs
(bad)
xchg
in
add
fbld
inc
dec
dec
fidiv
js
mov
outs
xchg
jno
daa
mov
inc
unpckhps
jne
es
in
fs
sbb
ret
pop
jg
xor
dec
repz
icebp
fisub
adc
scas
cmp
std
ss
and
pop
dec
add
mov
pop
js
ret
out
popa
mov
sub
test
dec
clc
test
mov
popf
pop
nop
and
fisub
retf
mov
mov
fs
push
jl
jns
(bad)
mov
shl
lods
pop
add
shl
fidiv
pop
push
leave
mov
pand
push
push
pop
es
cdq
shr
cmp
lahf
jbe
mov
push
loopne
push
push
adc
mov
in
cmp
js
rcr
bound
jecxz
mov
pop
(bad)
pop
sub
sbb
jns
fsubr
mov
cmps
(bad)
call
cli
push
je
xchg
pop
mov
movs
dec
cdq
pop
or
loopne
push
or
das
rcr
shr
fldln2
jmp
fidiv
nop
and
retf
scas
pop
and
sbb
fucomi
jp
test
xchg
loop
sbb
xor
mov
shl
pop
push
and
pop
mov
sar
fnsave
inc
cdq
cmp
jp
ins
or
mov
int
imul
inc
sbb
scas
and
mul
push
and
fwait
or
or
call
add
hlt
loop
mov
mov
pop
dec
add
dec
add
aaa
aaa
ja
xor
fwait
(bad)
addr16
int
mov
je
std
mov
fdivr
mov
and
int3
out
jmp
stos
fild
arpl
std
out
mov
lock
sub
push
stc
(bad)
jns
inc
adc
ss
(bad)
mov
loop
das
enter
loop
inc
dec
pop
mov
jge
mov
aaa
adc
cli
call
cmp
and
arpl
sbb
xchg
cmp
test
pop
cmc
retf
dec
or
mov
cmp
fisttp
sub
pop
repz
stc
cmp
cmp
repz
jl
sbb
and
xor
clc
push
dec
xor
jae
push
sbb
add
xchg
push
xchg
mov
adc
aas
arpl
rcl
xlat
es
(bad)
add
mov
add
je
das
cmp
add
pop
inc
inc
ficomp
mov
mov
stos
jnp
pop
mov
fwait
lahf
or
call
cmp
lock
or
mov
dec
(bad)
push
add
push
cmc
dec
(bad)
pop
xor
inc
sub
retf
sti
cmp
out
(bad)
pop
jecxz
add
cmp
clc
inc
cld
xchg
repnz
cmp
jl
push
aas
pop
rcl
inc
jmp
into
xor
fisub
arpl
cmp
movs
cmps
popa
jle
dec
fisubr
inc
movs
xchg
push
jb
cs
les
xor
sub
adc
pop
movs
sbb
push
add
sub
hlt
in
imul
sbb
and
aaa
ror
jo
ds
mov
fs
and
or
(bad)
test
(bad)
in
mov
or
push
inc
pop
xchg
dec
xor
data16
stos
mov
aas
scas
sub
test
add
or
cmp
into
fwait
cmp
cmp
pop
jne
sub
repz
mov
adc
dec
(bad)
dec
xor
ficom
adc
cmp
shr
(bad)
call
stos
and
jno
jbe
xor
test
(bad)
in
jmp
iret
mov
jo
mov
sub
jg
jae
or
hlt
(bad)
(bad)
mov
jp
xor
out
xchg
outs
mov
stos
repz
sub
call
nop
mov
cli
dec
(bad)
sti
inc
imul
dec
xor
cmp
cmps
jne
das
sbb
lods
inc
mov
scas
xchg
pop
xor
dec
adc
pop
sar
cmp
cmps
nop
outs
xchg
iret
pop
mov
jo
lea
adc
jnp
shr
mov
aas
sar
mov
dec
jno
movsx
push
lods
pop
jecxz
not
shl
and
mov
add
xchg
std
add
iret
and
into
repz
in
mov
out
fisubr
push
scas
and
adc
push
rcr
mov
sbb
dec
mov
fcomp
mov
pop
add
(bad)
adc
aad
jmp
js
pop
pop
pop
test
ret
cmps
pop
lea
fisttp
pushf
xchg
push
push
mov
push
mov
sbb
mov
sub
xchg
les
nop
adc
adc
xor
lods
lods
out
clc
cwde
or
lds
imul
push
adc
jle
pop
xchg
call
into
add
iret
lods
inc
jnp
inc
dec
cs
pop
inc
xacquire
push
outs
adc
jb
pop
xchg
adc
xor
sub
jl
and
sbb
cbw
xchg
dec
das
out
scas
dec
xchg
retf
scas
mov
jnp
mov
push
aas
imul
in
add
pop
pop
pop
imul
mov
or
dec
push
fdivr
lods
cmp
out
pop
sbb
mov
hlt
fbld
pushf
adc
add
xchg
outs
inc
xchg
loop
cmp
push
fcmovnu
leave
(bad)
nop
ds
push
push
popa
pop
cli
test
inc
daa
jmp
jo
pop
les
add
pavgw
xchg
push
sahf
bound
clc
cmp
pop
adc
jecxz
sub
sbb
or
jbe
cmp
cmp
dec
or
sbb
mov
jo
xchg
add
xor
cmp
das
push
and
out
jns
xchg
jne
xor
push
aaa
repz
dec
and
in
cwde
jnp
aas
push
cs
xchg
loop
nop
jmp
cmp
add
jl
mov
cli
lods
je
lds
and
sbb
mov
lods
and
div
add
repz
jp
adc
(bad)
mov
int
jb
pop
cmps
mov
nop
int3
mov
and
or
jmp
pop
jmp
cmp
imul
and
leave
jmp
arpl
push
(bad)
icebp
dec
cmp
or
mov
popa
mov
pop
push
push
into
pop
lock
cli
jnp
test
scas
cmp
arpl
sub
and
std
cli
inc
xor
push
fdivr
sub
shr
pop
pop
jge
and
sbb
adc
retf
push
retf
fst
test
test
jg
jnp
mov
stc
daa
inc
xor
mov
adc
xlat
dec
mov
in
mov
ret
dec
mov
mov
mov
adc
(bad)
mov
es
sub
adc
ror
aam
movs
jg
stos
clc
fisubr
mov
cmps
xor
out
mov
mov
dec
sbb
(bad)
fldenv
mov
movs
pop
es
mov
pop
add
popf
into
iret
cmps
adc
(bad)
cmp
mov
ds
inc
sbb
dec
or
xchg
sub
ret
in
(bad)
sub
fild
or
into
and
mov
scas
stc
xchg
mov
cmp
pop
repnz
in
mov
sbb
jl
out
sub
aad
xchg
(bad)
adc
jp
inc
call
dec
lea
shl
or
sub
dec
in
sar
int
cmc
pop
retf
das
sbb
or
mov
xchg
mov
jle
lods
push
xchg
cs
js
add
nop
xchg
or
or
cdq
jg
std
clc
add
inc
dec
jb
nop
mov
sub
ret
mov
les
lea
add
rcl
hlt
ss
popf
mov
mov
cmp
outs
jmp
outs
in
mov
inc
sbb
mov
adc
mov
call
xchg
imul
xor
sbb
xchg
call
int3
ins
ret
sub
push
(bad)
jns
out
mov
mov
cmp
inc
jns
shl
xchg
fadd
mov
xchg
gs
stos
jb
leave
out
sti
in
push
dec
add
jg
cmps
inc
jmp
mov
xor
and
xchg
mov
enter
xor
imul
cli
(bad)
mov
xchg
loope
ins
cmp
xchg
jb
jl
jle
add
mov
push
lods
sbb
xchg
popa
mov
jns
mov
(bad)
out
(bad)
fwait
mov
adc
or
lahf
pop
inc
lock
inc
cmp
pop
mov
xor
cdq
cdq
inc
loop
data16
shl
inc
push
sub
pop
jecxz
in
das
gs
adc
push
mov
mov
mov
fmul
mov
in
daa
mov
lea
jmp
push
ss
or
xchg
repz
stos
test
xor
mov
stos
mov
mov
out
in
fisub
xchg
stc
mov
adc
pop
js
xchg
ja
pop
mov
leave
dec
mov
xchg
jmp
mov
cmps
cmp
(bad)
lods
mov
or
xchg
sub
xchg
inc
inc
dec
mov
sub
scas
jb
jns
pop
jecxz
add
inc
and
scas
(bad)
jmp
or
or
add
(bad)
out
dec
or
not
pop
ror
retf
add
or
push
xor
jnp
jg
fist
pop
jbe
and
cmps
adc
mov
sbb
push
gs
iret
sahf
xchg
das
mov
cmp
mov
adc
cmp
push
retf
shr
dec
lods
shl
sbb
jno
mov
ins
loop
sbb
jno
arpl
push
cmp
adc
out
push
xchg
xchg
hlt
pop
in
jmp
xchg
xchg
xor
stos
iret
gs
je
add
jmp
push
inc
(bad)
(bad)
jns
add
xor
jnp
cmp
pop
ins
in
pop
imul
mov
and
push
jecxz
aam
(bad)
mov
mov
test
loop
adc
test
imul
xor
inc
fwait
inc
mov
pushf
pop
jbe
push
or
je
cli
mov
push
repnz
or
cs
adc
or
scas
mov
add
out
push
push
or
inc
mov
adc
mov
std
mov
xchg
jbe
and
mov
push
jne
push
repz
mov
mov
or
cmp
jne
mov
out
addr16
test
and
stos
xchg
cs
and
mov
inc
aas
outs
sub
pop
and
sbb
out
cli
mov
enter
or
pop
cmp
lods
sbb
fwait
fwait
sub
xchg
in
retf
jne
mov
ja
dec
cmp
in
and
push
sub
push
inc
push
push
mov
inc
mov
and
lods
adc
ret
add
push
and
push
or
arpl
scas
mov
jge
popf
mov
push
cmp
push
int
mov
gs
sbb
xor
push
mov
mov
nop
in
imul
popa
fwait
shl
dec
pop
mov
dec
sbb
les
movs
push
in
cmps
aad
dec
push
jne
test
dec
aam
loopne
xchg
iret
inc
repz
push
test
outs
ds
xor
pusha
lods
ja
call
cmc
stos
sub
jmp
int
pop
mov
std
loopne
push
cli
mov
test
out
or
lods
xchg
sub
pop
ret
pop
sahf
mov
push
cmp
addr16
ss
scas
(bad)
fimul
scas
pop
mov
movs
push
jnp
js
fmulp
in
jno
lahf
rcr
and
xchg
fcom
or
bound
push
jl
aam
popf
push
(bad)
(bad)
xor
aas
mov
in
dec
pop
adc
xchg
cli
xlat
xor
cli
fnstenv
inc
sub
inc
and
jl
pop
ja
aad
and
icebp
cld
fwait
loop
test
fwait
mov
jl
inc
mov
lds
adc
xchg
cmps
outs
and
sub
(bad)
xor
and
dec
xor
or
cmovno
inc
push
and
call
enter
sbb
mov
add
mov
add
test
aaa
mov
pusha
or
loop
ss
loopne
rol
(bad)
in
mov
mov
jnp
call
xor
xchg
(bad)
repnz
xchg
mov
out
cwde
out
lds
xchg
cld
jmp
sbb
test
out
retf
sti
lock
adc
fidivr
mov
add
xor
xor
nop
out
xchg
cmp
inc
dec
pop
pop
push
or
ror
sbb
ret
add
xchg
add
mov
mov
(bad)
fld
jmp
fimul
cmp
add
mov
je
xchg
(bad)
nop
inc
js
movs
and
sbb
sbb
adc
pop
xor
sub
push
pop
call
add
out
jo
sub
mov
dec
outs
call
ins
(bad)
lea
mov
or
jns
pop
test
sbb
aas
arpl
imul
ret
pop
inc
dec
pop
aad
into
ins
ffree
int3
and
adc
sahf
je
arpl
xchg
jbe
mov
lea
sbb
(bad)
mov
push
xor
mov
dec
sahf
xchg
adc
sar
test
scas
jmp
push
js
inc
test
enter
lock
fsub
jnp
xchg
xor
sbb
jmp
cmp
jne
sub
cmp
and
test
xchg
daa
lahf
xchg
les
popf
push
jp
in
xor
stos
sbb
ins
sbb
or
cld
lea
xlat
xlat
hlt
test
repnz
mov
gs
in
mov
mov
in
push
popa
lods
pop
jns
enter
aaa
lea
lock
add
jecxz
(bad)
mov
inc
xor
repz
push
mov
sub
mov
sub
sbb
dec
shr
lock
inc
cmps
fnsave
cli
leave
sbb
jecxz
jae
out
mov
popf
nop
xor
dec
sub
sbb
and
fcomp
pop
mov
popa
outs
fs
and
sub
mov
mov
pop
pop
fcomp
loopne
xlat
pop
jae
fs
in
dec
pop
loop
jb
inc
dec
pop
out
mov
icebp
xlat
loop
aaa
or
or
daa
or
out
mov
(bad)
push
(bad)
sti
sbb
push
pop
dec
imul
clc
mov
mov
jno
lods
lds
pop
pusha
sub
jl
stos
fsub
int
pop
js
cmp
mov
mov
ficom
xchg
pop
test
xchg
rol
pop
aas
xchg
ror
shl
imul
pop
mov
rol
xor
cmp
jb
xchg
movs
add
sub
mov
iret
pop
pop
push
xor
inc
arpl
daa
or
in
mov
lds
jp
scas
add
movs
jle
mov
inc
mov
ds
pop
xchg
(bad)
out
lds
dec
nop
retf
rol
mov
adc
add
cmp
cs
in
jne
mov
aaa
pop
outs
jle
in
pushf
add
repz
mov
jmp
mov
sbb
jnp
sbb
mov
(bad)
pop
add
sub
gs
mov
(bad)
mov
push
dec
pusha
jae
imul
cdq
xchg
or
jae
mov
add
out
inc
mov
sub
inc
int
das
adc
mov
call
mov
mov
enter
out
xor
int
add
retf
addr16
xchg
mov
data16
leave
lds
pop
sbb
inc
cmp
shr
cmp
call
outs
sub
dec
xchg
data16
cs
jns
inc
loop
or
aad
push
or
es
cdq
mov
scas
repnz
or
pop
dec
rol
paddusb
dec
xchg
cmps
sub
jns
rcl
lea
pop
cmp
add
cmp
jmp
mov
repnz
mov
jne
pop
sub
cmp
les
sub
fisub
sub
xchg
jns
jecxz
mov
call
cmp
int
inc
mov
xchg
mov
pop
push
inc
add
imul
jns
test
mul
aad
mov
cmp
les
sbb
cmps
shr
lods
or
push
ror
test
lahf
pop
fdiv
dec
adc
pop
mov
push
mov
cmp
shr
dec
rcr
aas
jb
cmp
fldcw
mov
and
fild
push
fidiv
or
inc
jne
or
rcl
cmp
dec
popa
cmp
repnz
mov
sub
rcr
inc
cmc
cmp
adc
outs
mov
es
mov
inc
or
cld
mov
leave
xchg
inc
dec
mov
neg
cmp
loopne
or
les
(bad)
push
bound
pop
js
int3
and
adc
inc
xor
lods
jmp
idiv
cmp
cmps
das
mov
inc
bound
fiadd
repz
mov
dec
test
lock
push
cmp
and
add
cmp
pop
mov
xor
pop
(bad)
mov
jmp
popa
mov
xor
pminsw
pop
xlat
mov
in
mov
or
and
test
jmp
jmp
push
std
(bad)
bound
push
es
retf
nop
push
fnstsw
xchg
nop
out
es
or
mov
popf
mov
inc
cmp
or
pop
add
xlat
aam
out
inc
mov
cmp
cld
int
fs
sub
and
sub
mov
addr16
pop
call
xchg
mov
ja
adc
add
xor
fbld
xchg
ss
adc
in
add
sbb
retf
or
push
je
data16
xchg
lock
xor
(bad)
mov
push
inc
sar
jbe
pop
dec
movs
mov
les
imul
dec
cmps
sub
add
pop
mov
inc
mov
jo
and
mov
dec
in
outs
retf
mov
xchg
not
scas
jmp
jle
je
fwait
cmp
mov
sub
pop
cmp
jb
enter
mov
xchg
pop
dec
xchg
ret
jge
cmp
sti
jecxz
pop
sbb
pop
sbb
dec
jmp
pop
fs
jmp
sub
mov
add
fist
rcr
dec
push
fwait
jle
push
mov
mov
xchg
ficomp
fimul
xchg
popf
mov
out
jbe
popf
inc
adc
dec
jb
out
cmp
mov
ret
xchg
loop
les
out
cli
addr16
cmp
test
fiadd
xchg
mov
nop
ja
test
call
out
lock
push
popf
mov
lds
enter
xchg
mov
inc
jle
shl
fwait
push
dec
mov
pushf
loopne
rol
aaa
dec
mov
stc
jp
xor
es
out
mov
movs
fwait
out
ja
popf
popf
push
pop
ss
inc
sbb
or
sbb
hlt
por
adc
jne
jns
lods
cwde
and
sub
sbb
sub
popf
(bad)
cmc
fcmove
mov
int
fld
or
mov
arpl
cld
fisub
inc
cmps
inc
stos
ss
mov
iret
xchg
mov
imul
mov
mov
add
adc
mov
xor
xor
aas
loopne
sahf
std
mov
test
inc
test
and
mov
and
and
cmp
jecxz
js
jle
adc
add
repz
jne
sbb
icebp
mov
test
test
inc
mov
sbb
cmp
rcr
lds
jne
push
fist
mov
dec
out
push
loopne
jb
dec
out
(bad)
dec
je
ins
ins
xor
cmps
sbb
jg
and
pop
mov
or
in
loop
stos
push
pusha
mov
xor
push
ret
xchg
in
mov
stc
pop
outs
jae
scas
popa
dec
cmp
dec
call
jno
inc
and
and
aas
ror
mov
xor
push
sbb
mov
dec
mov
cmp
stc
adc
in
dec
lods
je
call
repnz
ja
pop
inc
repnz
arpl
mov
add
pop
cld
fwait
inc
push
dec
and
cmp
scas
push
repnz
push
dec
jecxz
mov
lods
and
fst
dec
in
sbb
repz
pop
fidiv
imul
sub
mov
sub
call
and
test
lea
mov
fsubr
js
push
add
mov
xchg
daa
ret
nop
pusha
in
mov
jbe
or
push
clc
push
ss
inc
jecxz
es
pop
xor
and
fsubr
imul
xor
fidiv
dec
dec
jp
(bad)
and
cmp
and
jle
cs
pop
in
jno
das
inc
ja
cmp
and
pop
xchg
lds
nop
dec
sub
ficom
jnp
dec
mov
inc
call
shr
test
vcvtsi2ss
jl
cwde
dec
pop
mov
retf
mov
cld
sti
fnstenv
imul
ss
push
jbe
mov
sbb
scas
cmp
jb
sub
mov
mov
and
js
mov
pop
push
jle
ss
std
or
push
das
dec
mov
js
mov
cmc
pop
cmp
fsub
jbe
imul
adc
mov
fistp
mov
adc
cs
jmp
fst
jmp
cmp
xchg
xor
jns
pop
inc
retf
ins
xchg
retf
iret
gs
cmps
push
and
jmp
out
(bad)
les
pop
cmp
sbb
and
sar
shl
mov
jge
int3
loopne
dec
push
call
ss
pop
mov
mov
fnsave
in
mov
and
xchg
xchg
adc
and
jmp
xchg
dec
movs
fnstenv
fnsetpm(287
ds
(bad)
imul
jg
ficomp
pop
dec
xchg
je
dec
rol
add
nop
dec
add
sbb
aam
fsubrp
xchg
sbb
in
mov
js
mov
out
dec
cdq
loope
push
mov
jl
xchg
fmul
aas
push
adc
jmp
xchg
push
pop
mov
xchg
bound
sbb
inc
fcom
push
or
mov
pushf
enter
mov
add
test
retf
bswap
xchg
adc
dec
les
xchg
aam
aaa
aaa
add
pop
dec
sbb
repz
xor
pop
mov
jmp
movs
adc
ret
pop
jnp
ja
mov
xchg
jp
mov
xlat
jo
lods
scas
push
rol
ficom
jbe
xchg
aam
xchg
push
mov
lds
repnz
sub
(bad)
pop
or
aad
xor
xchg
cmp
dec
and
pop
outs
ret
adc
dec
push
sub
pop
test
cmps
sbb
mov
mov
inc
mov
cmp
xor
cmp
xchg
imul
or
mov
cdq
jle
jns
out
(bad)
icebp
xor
xchg
pop
lahf
pop
into
jp
dec
ret
stc
xchg
sbb
cmp
lods
aaa
xor
cli
push
dec
sahf
sbb
int
jp
inc
mov
pop
sbb
pop
lods
cmp
xor
sbb
mov
sbb
lock
cmps
mov
cmps
pop
push
call
fist
scas
jns
push
push
(bad)
aas
jge
cdq
stos
aas
mov
mov
lahf
mov
xor
ins
jmp
add
das
icebp
out
and
add
test
xor
push
cmp
and
imul
cmp
ret
outs
mov
repz
dec
inc
fs
sar
cs
repnz
cli
dec
xor
xchg
gs
push
add
sub
mov
arpl
xchg
sbb
aam
xchg
popf
jbe
les
in
dec
or
xchg
add
pop
xchg
imul
adc
cmp
jns
jmp
jmp
cdq
jns
sbb
cwde
jb
push
pushf
repnz
dec
xor
imul
inc
push
adc
and
daa
adc
popf
outs
daa
addr16
mov
leave
ins
xchg
ins
ret
repnz
pushf
pop
add
es
nop
dec
idiv
jecxz
ret
push
dec
ret
mov
mov
mov
repz
jp
je
ret
pop
imul
movs
pop
(bad)
xadd
arpl
dec
into
jmp
mov
jbe
loope
inc
scas
xor
pop
mov
mov
(bad)
js
not
into
mov
jo
stos
dec
int3
fmul
test
movs
lock
or
push
nop
scas
xor
out
leave
xchg
call
lock
rcl
pop
sbb
arpl
clts
(bad)
or
sti
cmp
outs
xlat
push
popa
xor
ret
lds
popf
aam
outs
outs
mov
imul
test
xor
nop
cmp
test
jmp
xor
pop
cmp
rcl
nop
pushf
or
aad
cli
out
dec
shl
mov
and
add
ins
scas
dec
dec
cmps
stc
push
movs
adc
inc
shl
data16
mov
scas
outs
add
lahf
push
adc
gs
adc
mov
jle
jp
js
mov
js
ins
sbb
cmps
pushf
mov
test
dec
in
and
aas
sub
jae
add
cmp
test
and
jae
shl
inc
mov
sub
(bad)
pop
mov
(bad)
mov
into
retf
adc
adc
lods
shl
push
test
push
in
lods
into
and
inc
cmp
cmps
das
inc
lea
imul
mov
cmps
add
mov
dec
and
dec
or
cwde
std
jmp
sbb
gs
mov
jb
cmps
nop
push
ja
jno
jmp
ficomp
sbb
inc
mov
pop
inc
jecxz
mov
push
push
push
add
jbe
adc
int
(bad)
aas
push
push
cmp
cdq
push
mov
dec
adc
add
dec
push
jg
push
movs
cmp
xchg
test
mov
fldcw
or
mov
movs
mov
nop
repz
fisub
(bad)
sub
sub
imul
xchg
jg
or
leave
aaa
and
nop
or
xor
xchg
daa
jecxz
int3
mov
pop
imul
out
ficomp
pop
mov
cli
cmps
idiv
test
shl
push
out
add
retf
lods
cmp
add
sbb
test
cmp
adc
jmp
pop
sahf
cmps
push
cmps
mov
retf
push
jbe
cmps
enter
cwde
jae
mov
jne
adc
das
rcl
out
movs
or
or
out
ss
shl
outs
pop
out
mov
outs
ret
popa
mov
adc
dec
aaa
popf
sub
repnz
mov
lds
sub
sahf
dec
adc
pop
xchg
and
jle
fldcw
sbb
retf
cmp
icebp
adc
ins
jnp
dec
outs
jle
mov
and
aaa
or
sbb
inc
cmp
mov
inc
inc
in
sbb
dec
loope
(bad)
in
adc
cmps
push
in
pop
mov
xlat
into
int3
(bad)
addr16
cmp
add
test
aaa
sub
pop
loop
xor
jge
movs
popf
out
cs
arpl
movs
dec
pusha
xchg
es
cld
pop
xlat
add
fwait
call
cmp
sbb
mov
fstp
jp
fimul
inc
xchg
sbb
rol
inc
ds
sbb
repnz
cwde
aad
stc
push
and
and
cmp
mov
pop
push
sub
mov
jae
ins
enter
cli
sbb
jmp
xlat
jecxz
jp
mov
enter
loopne
popf
dec
jp
idiv
in
lea
mov
push
out
dec
sbb
out
dec
std
shl
pop
test
mov
sub
fisubr
sub
aad
xchg
mov
mov
outs
ret
pop
mov
or
inc
loope
mov
and
mov
outs
je
mov
bound
push
gs
lods
lock
sub
imul
js
nop
add
cmp
mov
and
jne
nop
mov
mov
pop
popf
cmp
sub
vshufpd
into
push
(bad)
stc
je
pop
sbb
mov
add
pushf
arpl
popf
dec
xchg
mov
fwait
imul
loopne
dec
cmc
fcomp
xchg
sbb
add
in
or
enter
int
lods
push
dec
loopne
sbb
call
cmc
jmp
jp
jge
adc
xchg
mov
out
mov
push
in
cmp
rcl
lods
ret
repnz
popa
dec
cmp
xchg
mov
retf
or
mov
rol
xchg
mov
pop
pop
or
imul
mov
(bad)
sbb
mov
inc
loop
and
fxch
sub
jns
push
jg
push
call
sub
inc
add
fcomp
das
cwde
dec
inc
mov
sar
xor
pop
test
lea
ins
add
je
shl
cmp
mov
adc
xchg
cmp
cmp
add
jns
fist
jp
and
fistp
dec
test
or
xchg
sbb
(bad)
lock
xchg
fndisi(8087
xchg
ins
dec
jecxz
test
push
mov
pop
adc
cli
dec
out
xor
push
xchg
outs
mov
sti
mov
jmp
mov
jae
outs
outs
xchg
mov
bound
ins
or
mov
xchg
call
pop
mov
cs
sahf
and
mov
stos
jp
sbb
xchg
mov
mov
fidiv
or
out
sub
jb
push
imul
pop
cmp
test
push
in
cli
or
pop
lds
inc
mov
sar
jl
int3
stos
add
push
aam
clc
lds
pop
jne
pop
ss
push
xor
xor
dec
xchg
mov
lock
push
and
test
pop
int3
leave
cwde
cdq
mov
xchg
sub
pop
pushf
js
push
add
pushf
nop
pop
bound
ret
test
mov
push
push
push
jne
or
mov
sub
out
ficomp
sub
nop
sbb
push
dec
outs
pop
dec
adc
sbb
stc
push
push
js
cmp
jg
mov
pop
scas
ins
jp
cmp
push
push
in
daa
lea
(bad)
push
mov
cwde
xor
or
cmp
mov
scas
ja
add
cmp
lods
stos
movs
mov
fdivr
ficom
sub
mov
mov
push
pop
in
sbb
pop
imul
sub
addr16
ficomp
paddw
dec
call
push
inc
test
mov
xchg
stos
(bad)
movs
push
test
cwde
and
adc
pop
fnstcw
push
mov
dec
push
and
popa
mov
or
jge
pop
fwait
call
std
inc
jmp
lods
in
mov
aaa
mov
mov
nop
addr16
and
or
iret
shl
das
out
ret
mov
es
nop
cmp
or
cmps
pop
pushf
retf
push
cwde
ficom
stos
add
retf
pop
cmc
fisttp
fld
(bad)
ds
cmp
jno
or
and
loop
adc
lods
test
pop
rol
ret
mov
pop
pop
and
int
aam
mov
mov
push
xchg
or
pop
das
iret
xchg
cmps
jne
push
add
sub
int3
mov
inc
sub
(bad)
jmp
mov
jecxz
in
sub
ins
jecxz
pop
xchg
dec
ficomp
dec
loopne
xlat
je
xchg
dec
ret
mov
sub
sbb
jno
pop
mov
mov
adc
pop
lods
jecxz
sar
push
fwait
xchg
mov
adc
das
mov
push
int3
mov
pop
jp
mov
or
jl
and
mov
inc
mov
xchg
addr16
cmp
xchg
loop
jle
adc
pop
xor
in
sub
push
and
jnp
and
mov
imul
and
inc
cmp
rcr
les
push
and
jge
xchg
lea
sub
inc
jbe
fwait
in
div
mov
inc
or
frstor
mov
sahf
cmp
outs
cld
sar
cmp
outs
ret
cmp
jge
push
xor
adc
aas
(bad)
adc
mov
dec
mov
das
sbb
lock
ror
inc
pop
popa
mov
ja
out
inc
or
xchg
fs
dec
fs
into
add
fidiv
mov
and
mov
xchg
test
xchg
mov
repz
retf
pop
cmp
test
mov
(bad)
or
mov
shl
xchg
dec
pushf
sbb
inc
mov
pop
push
mov
pop
imul
jl
retf
repnz
fwait
ret
mov
fnstenv
push
xor
clc
shr
aam
jb
pusha
dec
push
cmps
mov
daa
pusha
fwait
jb
pop
inc
jmp
das
push
or
outs
inc
bound
dec
stos
pushf
retf
inc
test
and
lods
cmp
pop
inc
mov
lods
ror
jl
arpl
add
cwde
lock
stc
movs
mov
mov
push
adc
mov
mov
lahf
push
lods
mov
adc
and
dec
aas
icebp
pop
aad
push
mov
or
loop
adc
mov
popa
aad
jle
sub
jns
mov
mov
ret
adc
sar
sub
scas
dec
mov
or
xchg
add
xor
aaa
fs
rol
inc
push
(bad)
popa
loopne
shl
pusha
fcmovnbe
adc
(bad)
loopne
dec
and
xchg
popf
push
adc
out
xchg
push
add
push
gs
push
mov
mov
mov
pop
jmp
retf
and
inc
jmp
lea
cmp
mov
cld
pop
mov
push
outs
pop
div
dec
or
daa
icebp
(bad)
mov
adc
mov
xchg
or
cmp
dec
fild
mov
sub
mov
cmp
int
rcr
imul
jns
dec
mov
jmp
loope
sbb
push
mov
push
sub
gs
sbb
test
sub
add
scas
dec
in
stos
and
sub
sbb
faddp
outs
push
imul
inc
daa
pop
popf
stc
ss
dec
mov
sbb
mov
aas
adc
pushf
push
daa
in
scas
nop
mov
cld
outs
xchg
not
push
xor
shl
xlat
in
in
and
mov
sub
push
jno
mov
xchg
adc
inc
je
fild
out
fstp
arpl
mov
lods
sbb
(bad)
arpl
ss
xor
mul
push
push
cmc
xchg
je
neg
cmp
shl
add
fs
push
or
aaa
lock
push
idiv
sub
std
dec
mov
jbe
adc
out
mov
mov
inc
xchg
and
inc
js
add
pop
or
mov
jle
mov
popa
xor
push
scas
add
out
and
dec
ins
xor
pop
add
lock
cmp
lods
jae
push
xor
(bad)
imul
call
push
jb
cmp
fwait
push
cli
aam
(bad)
vzeroall
(bad)
lahf
cmp
cmp
inc
enter
cmps
mov
ficomp
sub
push
add
push
fist
fwait
xchg
adc
mov
test
clc
adc
dec
lea
addr16
pop
icebp
lahf
xchg
mov
test
out
push
inc
push
sub
adc
mov
push
or
cmp
sbb
sbb
pop
xor
pop
xchg
cmp
int
repz
cs
pushf
sbb
pop
sub
test
ja
fs
clc
imul
std
dec
xchg
or
test
inc
inc
jl
or
cmp
aaa
xchg
iret
cwde
loope
pop
(bad)
mov
cmp
mov
pop
inc
sbb
cmps
scas
or
rcl
mov
sub
mov
jo
sub
jg
das
adc
xor
inc
ja
and
jb
in
dec
cmp
push
push
sbb
mov
scas
inc
add
out
popa
xchg
imul
xchg
shr
sub
iret
fild
add
outs
shl
inc
shl
shr
dec
dec
adc
xchg
inc
std
cmps
lods
icebp
and
lds
movs
(bad)
fstp
or
sti
sbb
les
jmp
and
or
push
bound
fdivp
mov
or
jl
mov
xchg
scas
sub
cmp
push
pop
add
test
stc
add
mov
mov
inc
ja
stos
or
lahf
arpl
rol
sub
cmp
(bad)
rcl
cs
jno
pop
sbb
data16
sar
test
call
bound
push
push
and
js
scas
cmps
repz
scas
push
pop
xchg
lock
mov
fstp
out
scas
repz
in
xchg
sub
int3
sub
shl
fiadd
mov
fist
mov
test
gs
inc
dec
dec
pop
js
sbb
scas
dec
ins
test
push
jne
jmp
xchg
scas
cmps
dec
jnp
add
fwait
fwait
aam
push
repnz
cmps
and
jl
push
es
pusha
cmp
add
jb
or
mov
pop
es
or
xor
mov
push
sub
sbb
push
jbe
out
sbb
inc
sbb
or
and
mov
enter
dec
in
pop
ins
cdq
mov
mov
cwde
out
and
cmp
cmps
sub
test
call
jle
sub
in
xor
fmul
dec
and
retf
sbb
xchg
gs
ds
push
mov
cmc
push
pushf
leave
push
xchg
sbb
mov
js
ss
mov
(bad)
fpatan
hlt
sbb
push
cmc
jmp
mov
test
fmul
in
in
pop
cmps
add
arpl
cmp
and
pop
pop
pop
out
js
push
jle
add
xor
or
mov
or
mov
hlt
pop
mov
(bad)
jb
inc
jb
shl
scas
xchg
adc
in
xchg
scas
dec
cmp
aad
shl
adc
pop
ds
clc
inc
loop
pusha
mov
push
imul
(bad)
and
mov
jmp
daa
shl
fwait
out
push
frstor
mov
psubsb
out
pop
not
add
xchg
(bad)
push
paddw
sbb
xchg
int3
shl
sbb
adc
lods
cmp
cmps
sub
mov
mul
in
not
sti
mov
call
push
stos
aas
in
sbb
mov
xor
gs
jg
xor
js
pop
dec
shr
popa
sub
ret
mov
push
xchg
(bad)
xor
cld
jae
and
clc
sub
gs
and
fisub
retf
push
xchg
jae
mov
mov
hlt
sub
sub
mov
daa
inc
and
adc
int3
add
sbb
aas
(bad)
pop
hlt
lea
(bad)
jmp
arpl
idiv
retf
ins
push
push
call
xchg
retf
(bad)
out
dec
repnz
add
sbb
jb
(bad)
gs
das
neg
aad
leave
jbe
test
dec
push
adc
cmp
rcr
popa
push
es
xlat
inc
(bad)
test
inc
pop
pushf
icebp
add
and
cli
icebp
xchg
mov
add
rcl
xchg
jmp
sub
std
sbb
and
mov
mov
ror
fiadd
repnz
push
jbe
jmp
call
mov
sbb
and
xor
lods
push
sbb
fcmovnb
xchg
stos
add
outs
mov
repnz
ret
pop
sub
add
push
data16
(bad)
in
dec
jns
and
into
cmc
mov
mov
ret
std
popf
mov
xor
mov
nop
inc
cmp
jle
xor
pop
cmps
xor
or
push
aad
daa
dec
xchg
jge
dec
test
loopne
or
shr
add
pusha
loope
(bad)
ja
mov
cmp
add
and
jmp
push
call
into
aam
mov
sub
(bad)
xchg
outs
in
fbld
xlat
popf
in
xchg
pop
cmps
pop
cmp
in
or
out
pop
mov
inc
mov
mov
jno
stc
cmp
sbb
inc
mov
ror
xor
sti
ret
xchg
jge
imul
nop
out
xchg
popf
aaa
jno
xchg
xor
pop
test
cmp
push
xor
or
dec
fldenv
mov
pop
movs
mov
and
ds
lock
and
jbe
repz
loopne
imul
ins
cli
fld
rcr
push
pop
sub
ja
ins
ja
je
cwde
sub
repz
test
mov
pop
in
mov
test
pop
call
dec
inc
cmp
pop
and
jne
mov
mov
cmc
xor
fisttp
fnstenv
sub
lods
or
es
sbb
push
aad
xchg
mov
js
movs
jmp
xchg
popf
xlat
and
add
fdivr
sar
aad
les
mov
xor
mov
mov
clc
dec
cmp
cmp
aas
fsubr
mov
mov
mov
cdq
jl
lds
mov
pop
jae
loop
test
ins
cmp
pcmpeqd
enter
push
xor
in
inc
push
inc
dec
pop
aad
mov
rcl
clc
sub
xor
test
xchg
cmp
jecxz
dec
mov
call
or
arpl
dec
mov
mov
adc
rcl
addr16
inc
inc
and
push
mov
fucom
imul
mov
hlt
test
pop
(bad)
cs
addr16
mov
inc
push
sub
inc
push
push
dec
push
xchg
mov
hlt
push
adc
test
xor
retf
ret
adc
out
lods
(bad)
pop
outs
lods
fwait
dec
cdq
xchg
xchg
call
pop
mov
pop
fidiv
pop
hlt
cmp
cmp
jp
das
outs
stc
or
dec
xor
cmps
sar
adc
pop
ss
int3
dec
pop
xor
xlat
mov
jmp
and
pop
mov
(bad)
dec
jmp
mov
popf
out
mov
dec
push
add
repz
das
mov
jae
test
mov
pop
push
push
xor
sub
inc
jb
cmc
movs
push
addr16
mov
imul
rcl
push
mov
adc
push
pop
push
xor
push
cwde
dec
mov
js
xor
cmp
mov
call
les
push
ss
out
cmp
xchg
scas
pop
es
inc
xor
ret
push
or
rcr
dec
xchg
adc
mov
pop
in
cwde
push
enter
mov
ja
pop
adc
sub
add
and
jg
cmc
xor
(bad)
sbb
ds
adc
jns
cdq
xor
jl
pop
cmc
jp
mov
icebp
pusha
daa
add
sbb
jecxz
(bad)
sbb
retf
cmp
inc
fcmovnbe
mov
int
sar
push
imul
pop
sub
fild
cmps
xchg
cmp
ret
lock
mov
xchg
push
lahf
dec
cmp
dec
lds
mov
loopne
sbb
ins
aad
lods
repnz
mov
pushf
sar
test
sbb
ja
sub
xchg
in
and
add
imul
leave
mov
(bad)
pop
pop
push
sub
add
(bad)
lods
push
mov
call
int
aaa
int
dec
push
addr16
push
sub
loope
and
jno
or
ins
push
bound
loopne
cmp
cwde
cmp
fs
mov
icebp
pop
dec
jne
pusha
call
call
mov
fidiv
dec
cld
xlat
mov
pop
adc
mov
test
xchg
mov
cmp
int
sti
or
inc
push
sub
adc
popf
aas
lods
ret
adc
pusha
loopne
jl
add
ins
dec
cmp
push
inc
push
stc
call
push
jnp
popa
test
cs
(bad)
mov
js
inc
dec
cmc
mul
mov
fwait
test
pop
mov
dec
lds
or
dec
pop
cmp
shl
iret
inc
test
pop
call
push
repnz
call
lock
test
test
stc
mov
add
popf
mov
pop
(bad)
cmp
aas
jo
inc
out
test
cmp
imul
sti
adc
and
mov
stos
inc
add
call
xor
mov
mov
ror
pop
inc
dec
dec
jmp
retf
ins
cmc
imul
or
push
adc
and
sbb
xchg
or
leave
xchg
dec
xchg
fs
call
push
dec
adc
mov
inc
pop
daa
int
adc
hlt
and
push
test
mov
dec
sbb
add
loope
add
push
rcr
loop
push
sub
mul
cmp
xchg
daa
out
mov
(bad)
mov
add
int
ret
sahf
and
and
and
cmp
ds
lahf
xor
outs
bound
pop
sbb
jl
(bad)
fsubr
push
fucomip
xor
cmps
inc
mov
es
bound
xor
aaa
mov
cmp
dec
jnp
in
dec
addr16
fistp
rcr
pop
sub
test
test
jmp
xchg
sbb
cld
adc
(bad)
pop
pop
or
repz
sub
cmps
xor
std
inc
push
(bad)
jne
add
mov
inc
stos
retf
pop
rcl
mov
pop
mov
fiadd
imul
pop
jge
in
(bad)
adc
bound
push
xor
test
xor
mov
aaa
ds
mov
inc
arpl
cdq
xchg
add
(bad)
sti
shr
dec
repnz
sbb
push
pop
cmp
int
ficom
ins
imul
stos
push
in
xor
mov
add
dec
push
cmp
xor
dec
repnz
xchg
es
push
ins
or
sbb
loope
fs
sub
retf
add
shl
mov
mov
mov
or
or
stos
mov
call
jno
iret
pop
xor
cdq
pop
lock
ds
cmp
xacquire
shr
sub
xchg
adc
sub
out
add
xor
or
ret
leave
mov
stos
pushf
and
daa
inc
cmp
xor
xchg
push
push
test
cwde
jge
lock
cld
xchg
sahf
repz
xchg
inc
sar
and
adc
cdq
in
jns
aaa
dec
pop
jb
mov
pop
or
xchg
fidiv
or
jp
(bad)
ds
int
sub
inc
mov
ror
xchg
ss
repz
jne
aad
xchg
mov
(bad)
(bad)
movs
jmp
add
lahf
fild
jns
ins
rcr
push
jl
ins
adc
pushf
mov
syscall
bnd
fmul
xor
dec
data16
lahf
mov
jmp
add
call
mov
ss
ficomp
mov
shr
add
add
or
clc
xlat
int3
add
call
cmp
sahf
xchg
imul
xlat
cmp
pop
cmc
rol
in
rcr
sbb
push
test
adc
hlt
mov
rcl
cmp
xor
pop
pusha
cmps
dec
adc
not
movs
ret
mov
mov
cli
mov
pop
shl
dec
mov
enter
or
pop
add
mov
jne
cld
in
cdq
call
out
add
sub
(bad)
xor
push
ds
das
shl
icebp
xchg
inc
clc
inc
inc
add
sbb
jo
or
stos
mov
mov
stos
adc
leave
adc
mov
scas
shl
pop
rcl
inc
xchg
es
popa
mov
addr16
in
pop
ds
not
ja
mov
aas
mov
loopne
enter
dec
push
jae
retf
cmps
cwde
outs
dec
out
mov
mov
ffree
inc
cmp
pop
stos
ret
hlt
mov
dec
sti
add
ds
push
add
cmp
xchg
gs
and
mov
idiv
scas
mov
xchg
in
xchg
daa
loopne
daa
ins
(bad)
(bad)
call
push
inc
cmp
sar
jmp
out
sbb
jbe
sub
ins
icebp
sub
or
sbb
and
cwde
cmp
fcomp
mov
in
imul
arpl
mov
arpl
nop
stc
scas
mov
xchg
test
cwde
out
loope
loope
or
nop
repnz
dec
imul
cmp
pop
or
inc
mov
and
in
fst
out
lahf
adc
mov
mov
cdq
mov
xchg
pop
movs
jnp
sbb
ror
popf
jge
push
(bad)
mov
sahf
xchg
xchg
movs
scas
repnz
sbb
retf
in
ret
and
shl
es
mov
add
pop
shr
or
ja
loop
mov
add
aam
dec
dec
ror
fstp
daa
jb
cli
inc
mov
ins
dec
xor
add
mov
jnp
nop
add
sbb
cwde
sub
fistp
dec
xchg
icebp
and
(bad)
imul
cmc
cmp
add
mov
imul
into
loop
pop
test
xchg
sbb
fdiv
ins
(bad)
aas
push
push
int
sbb
mov
cmp
cmps
push
xchg
clc
and
dec
add
popf
mov
jae
aaa
fcmovb
add
mov
fsub
inc
dec
cmp
push
mov
xchg
or
xchg
inc
mov
out
mov
push
fs
inc
int3
int3
dec
pop
es
or
jae
push
dec
mov
lea
xchg
dec
cmp
ret
fcmovu
cmp
mov
(bad)
or
adc
ret
(bad)
xacquire
sbb
cmps
inc
test
or
mov
test
gs
cmp
shl
shl
rol
ret
arpl
sub
pop
stos
dec
(bad)
outs
arpl
int3
leave
clc
shl
push
popf
fadd
retf
lods
jg
imul
shl
sbb
mov
out
add
fcomip
mov
imul
pop
jnp
cmps
std
dec
add
push
pusha
cwde
push
xchg
jmp
retf
pop
xchg
add
pop
xor
mov
idiv
ja
(bad)
jae
inc
xchg
adc
push
jo
test
mov
(bad)
fnsave
push
or
out
mov
cmps
push
or
clc
leave
mov
in
cmc
jae
les
test
jne
jl
push
fisttp
cdq
call
push
mov
mov
jb
jmp
std
or
stc
jmp
and
xor
out
xlat
add
mov
popa
mov
xchg
pop
sbb
aad
and
mov
fst
fadd
scas
ror
pop
ret
sub
inc
ja
mov
push
jle
mov
xlat
shl
jmp
jns
jmp
aam
cmp
les
idiv
and
add
lds
enter
xor
test
dec
sbb
aad
jecxz
mov
cwde
movs
mov
cmp
jbe
enter
sub
mov
xor
push
push
adc
pop
in
test
addr16
retf
dec
int
dec
in
push
cld
dec
pop
imul
push
push
dec
fdivr
xchg
mov
mov
inc
mov
enter
pop
mov
mov
pop
push
mov
movs
int3
dec
lock
dec
fld
push
push
inc
aas
sbb
ror
adc
mov
xor
dec
cdq
out
jbe
(bad)
inc
jne
jmp
jne
stos
icebp
inc
out
cmp
jnp
pop
mov
dec
out
push
xchg
jae
mov
mov
(bad)
mov
cmp
popa
cmp
aas
std
add
sbb
jb
jg
sub
push
stc
cmp
jmp
popa
das
jp
jo
ja
push
std
xchg
cmp
dec
cs
dec
and
repnz
jge
repz
aam
push
stos
aaa
out
jl
pop
push
xchg
or
cmp
adc
scas
inc
xor
out
ret
mov
adc
sub
sub
mov
cdq
and
iret
out
fistp
popf
inc
sub
aam
and
and
and
shl
xchg
or
neg
add
bound
jo
push
adc
scas
pop
clc
leave
test
xor
imul
jnp
pop
adc
sbb
fild
icebp
inc
and
inc
cdq
ret
fnstenv
mov
xlat
pop
jg
xor
rol
mov
sub
pop
jl
enter
lea
cmp
fld
dec
test
cmps
push
xchg
aad
or
mov
push
nop
adc
pop
cmp
xor
lea
pop
call
loop
dec
shl
mul
sbb
cmps
ds
mov
aad
fs
mov
add
or
movs
out
cmp
ret
adc
(bad)
dec
xor
or
movs
jns
jb
mov
jecxz
fstp
cld
cld
movs
scas
xchg
xor
cmc
int3
pop
xor
ds
icebp
sub
cli
in
xor
mov
les
cwde
pop
ret
pop
push
pop
nop
xchg
lea
sbb
cld
push
repnz
xlat
(bad)
retf
inc
adc
nop
sbb
mov
xchg
sub
in
test
pop
sub
call
inc
xchg
outs
xchg
push
cli
int3
arpl
mov
imul
repz
loope
sbb
(bad)
or
cli
dec
scas
imul
mov
jecxz
lahf
add
mov
out
addr16
imul
out
es
pushf
js
popf
mov
cmp
mov
xlat
mov
aaa
cdq
adc
std
imul
sub
not
leave
adc
fwait
inc
jnp
or
mov
(bad)
sbb
dec
test
rcr
rol
cmp
push
cmp
ret
add
dec
add
jne
adc
mov
mov
sbb
or
jp
dec
shl
popa
lock
ds
sar
jae
add
or
aam
gs
mov
clc
jl
push
aaa
and
and
test
xchg
push
das
push
imul
cwde
lahf
sbb
mov
pop
fsub
inc
(bad)
loopne
push
pop
es
cwde
mov
mov
(bad)
fstp
arpl
dec
dec
sub
cmp
test
dec
pop
jl
pusha
pop
div
cmp
mov
push
mov
out
mov
sub
clc
mov
mov
stc
movs
xchg
in
pushf
fisttp
ins
es
pop
xchg
cmp
in
sbb
(bad)
gs
push
inc
mov
jl
xchg
ror
aad
jns
scas
jb
pop
jle
and
faddp
lahf
and
xor
sub
inc
mov
stc
cmp
pop
adc
jge
in
rol
or
pop
push
call
push
jo
call
sbb
arpl
mov
pop
test
pop
dec
sbb
cli
mov
fisub
jbe
xor
(bad)
cmc
pop
bound
popf
(bad)
(bad)
loop
sub
xchg
mov
sbb
add
pop
xor
adc
sbb
out
dec
ja
inc
into
imul
cdq
sub
mov
aaa
pop
das
mov
jp
in
xchg
dec
lds
retf
lds
cmps
dec
ficom
int
retf
xor
inc
hlt
pop
cmp
aad
ds
mov
js
mov
bnd
jns
fcom
fcomp
not
lds
out
adc
ret
sub
bound
(bad)
add
clc
sub
mov
outs
(bad)
xchg
jnp
jl
and
outs
cmp
sub
rcr
xor
div
xchg
add
jnp
pop
or
xor
daa
pop
pushf
(bad)
leave
push
mov
imul
push
jmp
cmp
in
fs
xlat
mov
jl
lods
in
push
add
mov
ret
retf
adc
ins
(bad)
xor
inc
sub
movs
(bad)
out
sti
(bad)
cld
cmp
in
imul
adc
mov
(bad)
aam
push
inc
or
ds
(bad)
daa
sub
mov
mov
imul
aaa
repz
mov
and
outs
xchg
ins
push
jmp
in
mov
pop
or
daa
mov
rcr
(bad)
jmp
mov
lea
mov
pop
mov
dec
inc
iret
ret
sbb
cmp
lods
loopne
lahf
ret
aam
cmp
mov
jmp
ins
pop
push
jge
mov
imul
mov
xchg
add
jns
pop
shr
xchg
jns
add
sbb
fnstcw
pop
sahf
loopne
sahf
mov
cwde
ja
aaa
pop
mov
loop
cmc
push
test
shl
mov
inc
push
sbb
and
in
and
int
es
test
xchg
jg
sbb
popf
arpl
adc
push
iret
mov
mov
xlat
arpl
(bad)
fstp
jmp
rol
pop
ret
ja
ja
lea
lahf
jae
and
icebp
xchg
jp
fwait
cmp
or
fild
loope
xor
hlt
ror
mov
jle
loopne
pop
and
rcl
pop
push
jmp
clc
mov
scas
inc
fadd
retf
arpl
pop
inc
cmc
aam
dec
mov
mov
jmp
push
cli
xor
(bad)
imul
pop
pop
or
xor
shl
icebp
cs
xchg
inc
inc
test
in
(bad)
daa
ins
sub
or
mov
pop
or
iret
scas
cmp
jl
retf
mov
mov
imul
xor
jge
sub
sbb
xchg
pop
ficomp
repnz
test
ror
xor
mov
or
enter
push
push
retf
jg
rcl
mov
sbb
adc
mov
loope
shl
into
(bad)
leave
dec
xchg
test
pop
pop
lock
js
push
in
mov
inc
lock
adc
xchg
or
sbb
out
cmp
and
aam
push
or
fwait
test
mov
or
add
loope
and
or
popf
cmp
lea
mov
mov
sub
xor
pop
or
das
out
pop
xchg
sub
xchg
cs
fstp
inc
xor
cdq
call
sbb
test
dec
mov
jecxz
add
or
jo
sahf
test
or
ins
and
mov
jl
stos
mov
sahf
dec
adc
movs
imul
fcomip
ss
mov
mov
movs
sub
mov
sbb
daa
nop
inc
jg
push
mov
dec
rcl
adc
dec
into
sub
gs
xor
push
jo
int3
and
ss
sbb
pop
call
lods
and
push
int
and
push
sbb
aas
adc
dec
dec
inc
pop
xor
jns
arpl
idiv
outs
ds
cmps
fwait
repnz
cmps
jg
loop
shl
int
mov
add
fisttp
clc
pusha
ja
xchg
jmp
sti
jb
imul
push
les
mov
pop
mov
jle
js
jns
pop
xchg
mov
pop
add
lods
xchg
fisttp
lock
shl
and
sbb
mov
jbe
jecxz
jp
(bad)
cmp
sub
ficom
dec
dec
xor
sub
add
push
cmp
inc
mov
iret
mov
sub
loope
xor
add
sub
push
gs
or
xor
aas
daa
or
test
jl
call
outs
inc
cmc
repz
and
add
into
into
sub
pop
das
call
sbb
cli
daa
sti
in
icebp
(bad)
xlat
xchg
sub
inc
dec
mov
and
jb
test
and
jle
icebp
or
and
pushf
lahf
clc
adc
inc
int3
sub
or
std
mov
aam
out
ins
push
mov
rep
mov
call
movs
jo
shl
pop
jle
xlat
(bad)
jmp
dec
jno
enter
xor
jne
(bad)
adc
add
jge
jl
sti
cmp
xor
xor
rcl
add
mov
inc
out
rcl
inc
repz
xor
(bad)
add
fistp
adc
fmul
ss
pusha
xchg
sub
sbb
add
ret
sbb
jecxz
pop
mov
aas
and
push
sbb
stc
rol
sbb
mov
ins
mov
test
push
push
into
cmc
or
dec
pop
xor
jecxz
ret
cld
cmc
jo
fsub
jne
cld
je
jl
mov
sub
jp
sub
mov
or
xchg
push
mov
xchg
(bad)
jp
popa
test
addr16
les
(bad)
in
dec
movs
cmp
arpl
clc
pushw
lahf
inc
xor
imul
mov
push
and
outs
repnz
push
(bad)
cli
jp
dec
shr
(bad)
ss
jmp
(bad)
hlt
push
call
xchg
pop
dec
pusha
jmp
push
sub
rol
gs
xlat
jmp
loop
cmp
icebp
add
cs
xor
stc
ror
shl
nop
imul
jg
mov
cdq
int
stos
push
paddsb
jno
sti
sbb
(bad)
test
sub
pushf
out
iret
loop
and
dec
(bad)
ja
nop
xor
sub
dec
cmp
addr16
fbstp
sub
cmp
pusha
inc
cdq
xchg
(bad)
loope
cmp
hlt
add
int
sbb
mov
movs
dec
push
pop
inc
mov
jne
enter
imul
lock
cmp
xchg
aas
iret
inc
les
nop
mov
loopne
mov
sub
test
inc
addr16
stc
and
sub
imul
retf
xor
scas
adc
mov
cld
jecxz
ret
loop
cmps
sbb
in
dec
loop
lods
out
xchg
inc
(bad)
cld
clc
mov
adc
je
mov
sbb
sub
dec
jmp
xor
(bad)
aas
xchg
loope
fiadd
pop
inc
fldcw
mov
repnz
jae
cmp
repnz
pop
cmp
and
sub
mov
inc
in
daa
and
fldcw
pop
push
data16
sub
aad
xchg
inc
xor
(bad)
pop
add
stos
fdecstp
ror
jnp
test
inc
cwde
mov
in
jle
or
lock
lea
jns
jmp
pop
mov
cmps
cmp
jb
shl
jmp
dec
lods
xchg
dec
add
repz
adc
lea
stos
mov
push
jle
inc
jecxz
lea
push
push
test
fstp
aaa
inc
push
arpl
hlt
xor
jge
inc
imul
mov
push
fcmovnbe
in
movs
dec
push
fbstp
inc
js
jns
inc
int
push
xchg
jecxz
ret
mov
fs
sub
out
jne
ss
pop
mov
mov
cmp
(bad)
in
inc
mov
sbb
xchg
xor
loopne
cmp
fwait
push
call
loop
pop
or
es
ud1
xor
stos
dec
xor
jnp
pop
and
xor
std
adc
jg
arpl
mov
xchg
mov
inc
add
repnz
jle
inc
push
add
enter
jmp
cmp
jl
jmp
jo
movs
clc
sbb
pop
xchg
and
(bad)
ins
ret
imul
(bad)
(bad)
int
test
xchg
imul
mov
imul
jnp
int
pusha
dec
stos
mov
jnp
fcom
dec
jbe
push
hlt
inc
and
rcl
sbb
push
xor
js
xchg
add
shr
dec
retf
(bad)
sub
ret
xor
mov
cli
inc
sub
or
ret
cmp
xor
push
loope
lahf
add
mov
fstp
mov
jle
scas
xchg
dec
mov
hlt
scas
int
leave
mov
cmp
xchg
cmp
imul
mov
int3
int
loop
lds
cmp
adc
cmps
sub
cli
jecxz
push
ja
dec
cmp
(bad)
jbe
or
inc
add
cmp
jg
mov
clc
lea
outs
cs
enter
in
movs
jmp
fistp
stos
outs
bound
sub
or
sbb
cmp
sar
dec
int3
in
fisubr
mov
jmp
fist
lahf
xchg
scas
ds
sub
jne
lahf
aaa
out
mov
std
jp
call
jmp
shl
jmp
popf
push
out
(bad)
pop
push
iret
std
push
dec
lahf
and
stos
adc
sbb
jecxz
adc
mov
shl
push
adc
or
lea
jp
mov
jns
xchg
fist
les
or
pop
cli
daa
pop
and
stos
retf
loopne
ds
repz
jp
pusha
mov
and
jbe
loopne
fldpi
add
ja
leave
cs
lods
xor
mov
popf
stos
rol
js
ss
daa
pop
xor
push
das
fiadd
jns
idiv
in
jmp
(bad)
adc
dec
push
sub
outs
inc
adc
retf
fld
idiv
mov
fiadd
mov
sahf
xor
popa
jb
xor
pushf
xor
mov
out
loopne
imul
or
sbb
outs
mov
sub
cwde
and
test
shl
sub
dec
mov
cmp
xchg
cmp
lock
mov
iret
movs
mov
lahf
xchg
inc
ins
xchg
es
repz
or
in
adc
mov
sub
mov
sub
(bad)
jnp
out
sub
add
and
cmc
cmc
ret
stos
sbb
mov
sbb
dec
mov
retf
adc
mov
ins
jnp
fs
push
push
mov
popf
push
cld
cdq
int
nop
cs
jmp
(bad)
cmp
sub
or
add
xor
bound
add
loop
or
cmps
and
sub
nop
xor
cmps
push
jmp
mov
retf
sbb
fwait
lea
xlat
add
ja
cs
or
test
fcom
fdiv
or
xchg
jns
dec
neg
adc
jp
hlt
ja
pop
inc
jge
(bad)
fstp
jl
dec
or
pop
fdiv
mov
xor
ja
enter
call
lahf
gs
rcr
daa
and
mov
ja
fld
stos
cmps
adc
fadd
push
sbb
ja
inc
movs
int3
cdq
aam
rep
adc
inc
fbld
mov
push
jp
lahf
add
rcl
and
sub
call
int
push
das
jle
and
out
mov
fistp
(bad)
into
inc
inc
cmp
mov
and
and
fistp
xchg
sub
ret
test
sub
xchg
in
or
push
pop
sbb
cli
rol
iret
xchg
jmp
stos
leave
int
push
inc
cs
cmp
mov
out
mov
inc
je
stos
cmp
mov
push
sbb
int
jb
mov
mov
pop
std
iret
add
pop
hlt
inc
mov
repz
jecxz
cmc
add
gs
repz
inc
repnz
inc
rcl
and
xchg
inc
mov
hlt
out
add
loop
mov
mov
pop
mov
inc
add
loope
sbb
out
ret
pop
(bad)
pop
jle
cmps
xchg
fbstp
aad
addr16
pop
xlat
inc
sub
jecxz
fiadd
pop
cld
cmp
push
pop
call
inc
add
inc
outs
clc
pop
xor
clc
pushf
cmc
pop
or
outs
adc
mov
stos
or
push
sub
enter
(bad)
adc
inc
lods
das
aad
mov
fwait
das
add
add
bound
sahf
out
daa
cmovae
ret
(bad)
pusha
and
pop
fcmovb
cmp
mov
outs
test
imul
scas
aaa
hlt
sysenter
repnz
nop
mov
loopne
mov
mov
xchg
imul
and
mov
xchg
or
or
xchg
mov
add
pop
and
je
es
pop
adc
aas
in
jecxz
test
ss
fisttp
mov
mov
cmc
aad
pushf
xchg
pop
clc
retf
push
adc
mov
mov
popa
jle
xchg
cmp
pusha
movs
or
pop
cmps
sar
aam
jo
cmp
lods
dec
cli
jmp
retf
mov
int3
jns
sbb
test
sti
fwait
repz
mov
push
pop
cmps
inc
imul
(bad)
clc
mov
in
jno
sub
nop
retf
ins
xchg
pop
(bad)
xchg
js
rcl
aam
stos
rcr
retf
outs
nop
jnp
fdivr
fdiv
mov
xor
mov
sub
sti
cli
or
lds
leave
test
dec
jl
sbb
fwait
inc
adc
jl
ja
ret
push
out
mov
jns
rcl
repz
bound
mov
or
inc
inc
out
jmp
xor
jmp
addr16
iret
sbb
pop
mov
and
push
ret
(bad)
pop
xor
jmp
js
mov
stos
mov
or
adc
retf
xor
ror
mov
lds
cmp
xchg
xchg
(bad)
(bad)
fst
jp
add
jle
out
ficomp
push
mov
repnz
push
inc
cs
stos
mov
es
sub
inc
and
push
outs
je
sub
xchg
leave
mov
pop
push
xlat
mov
hlt
dec
sub
cmp
sar
test
movs
test
sub
sahf
mov
out
enter
xor
fisttp
sub
mov
call
inc
pop
jne
inc
mov
jl
and
and
xor
dec
aaa
and
xor
fs
test
cwde
jae
and
addr16
stc
jbe
mov
cmps
dec
enter
jb
mov
jno
bound
xor
(bad)
loop
ds
loope
(bad)
and
add
and
in
test
pop
add
sub
leave
pop
dec
mov
pop
shr
cld
lods
out
cs
imul
out
(bad)
sub
test
popa
jb
mov
hlt
adc
mov
enter
sar
inc
sub
aad
push
adc
sahf
sub
cmp
add
xchg
mov
and
xchg
mov
aad
aad
fwait
mov
(bad)
xlat
sbb
fsub
retf
test
jno
jns
jge
mov
xlat
jle
lods
test
rcr
pop
pusha
push
sbb
cld
lods
sub
inc
fdiv
jne
loope
adc
dec
aad
cld
jae
adc
das
shl
js
jl
js
popf
sub
iret
daa
sbb
ds
shl
push
dec
(bad)
xor
out
mov
xlat
pop
push
and
inc
js
jbe
mov
loop
popa
dec
lods
shl
pop
sar
inc
xchg
xor
inc
aam
mov
jbe
retf
add
les
ror
mov
push
xchg
push
movs
imul
pop
ror
(bad)
add
mov
fldcw
pop
aas
movs
(bad)
push
and
leave
or
es
ficom
jmp
mov
mov
int
shr
movs
xchg
ins
mov
xor
pop
call
add
stos
sbb
aad
mov
jge
movs
dec
out
iret
or
xchg
dec
pop
ss
add
(bad)
shl
mov
mov
mov
push
popa
loopne
pop
mov
push
popa
dec
test
lahf
fldenv
test
pop
dec
aas
adc
fwait
xor
sbb
mov
inc
pop
dec
mul
cmp
out
into
fimul
jmp
xor
ror
xor
sti
pop
test
icebp
ja
pop
lods
mov
out
and
cmp
cli
inc
jl
cwde
fistp
mov
push
mov
cmp
in
loopne
inc
and
xor
xor
mov
push
jb
test
pop
add
bound
icebp
dec
fiadd
mov
popf
mov
retf
dec
and
out
stos
inc
rcl
stos
hlt
ret
and
xor
or
add
xchg
pop
xchg
imul
shl
loop
xchg
pop
mov
push
out
and
xchg
jp
dec
mov
push
jecxz
sbb
jne
ror
fidiv
inc
aas
cmc
adc
cmps
cli
mov
repz
add
add
sbb
cmps
hlt
cdq
adc
imul
int
add
push
mov
sbb
jne
jg
popf
out
pop
dec
jae
jl
(bad)
popf
test
and
aam
fdiv
push
aas
hlt
jl
push
rcr
adc
add
pop
pop
jbe
rcl
mov
adc
cmp
xchg
jecxz
sbb
in
jmp
inc
inc
xchg
pop
cmp
loopne
mov
pop
icebp
inc
xor
lds
ret
out
mov
in
movs
mov
push
jb
sbb
aas
out
sub
retf
mov
add
sub
xor
inc
dec
xchg
test
mov
xchg
jg
cmp
or
fstp
sbb
and
jp
mov
leave
in
iret
jb
add
scas
xor
dec
popf
jae
ja
call
in
mov
into
cmp
jae
pop
mov
sub
and
inc
aas
and
xchg
cmc
jno
jbe
adc
int3
je
dec
std
cmps
xor
push
xchg
push
mov
fs
jns
xor
les
inc
imul
pop
fld
shr
and
xchg
scas
add
xor
js
mov
enter
mov
adc
or
mov
adc
inc
pop
cdq
jmp
jp
add
jge
sahf
or
shl
retf
sar
dec
in
mov
cmp
test
sbb
sbb
mov
shr
int3
sbb
mov
sbb
iret
neg
jo
add
jne
or
(bad)
repnz
pop
lods
jmp
repz
xchg
xchg
inc
mov
cmps
inc
ins
rcr
mov
fld
inc
popf
icebp
inc
ins
(bad)
pop
leave
cmp
(bad)
stos
lock
out
fcomp
xlat
pop
aad
pop
dec
cs
lods
aas
xchg
xchg
cdq
push
daa
mov
xchg
adc
sub
xlat
mov
inc
fucomip
and
mov
jmp
jecxz
sub
sub
fadd
sbb
and
int
or
xor
xchg
mov
mov
add
aaa
xchg
cmc
call
cmp
cmp
repnz
jb
movs
push
outs
jle
jo
imul
mov
cmc
jmp
dec
fsubr
sbb
adc
je
inc
int
rcl
dec
mov
mov
xchg
xor
mov
inc
out
lea
das
lods
mov
or
cld
push
retf
loop
add
outs
push
mov
push
(bad)
mov
out
vmread
and
fimul
pop
cli
sbb
xor
div
mov
mov
shl
std
inc
sahf
or
fild
or
mov
daa
sar
pop
mov
repnz
xchg
pushf
sub
test
sar
and
out
retf
fwait
stc
inc
popa
pusha
repz
cwde
push
(bad)
lahf
je
cmps
mov
adc
in
cmp
pop
jmp
or
jl
lock
mov
pop
or
dec
xor
jmp
dec
sbb
mov
out
add
mov
and
push
sahf
inc
jno
ror
pop
ja
xor
loope
iret
stc
pop
aas
inc
pop
retf
sbb
sub
xchg
adc
and
adc
cld
scas
pop
mov
div
ss
push
test
ds
cmp
jge
cld
sub
sahf
sbb
mov
stos
inc
fisubr
(bad)
stc
jg
(bad)
aam
add
(bad)
add
int3
shr
cmp
xchg
aaa
add
idiv
push
test
mov
mov
nop
pop
push
push
popf
xor
in
fcomp
pop
ror
mov
jg
jle
cld
lods
test
int
mov
pop
lea
loope
push
std
sbb
aam
inc
jno
lock
or
adc
icebp
clc
test
mov
movs
jmp
dec
mov
inc
and
shl
xchg
or
or
adc
push
out
and
cmp
push
stos
jne
mov
adc
adc
fstp
clc
fistp
adc
movs
outs
push
xor
or
repnz
ins
fwait
lods
std
mov
mov
push
jns
pop
outs
cdq
xor
hlt
mov
cmc
stc
sbb
jno
or
ret
aas
ror
pop
or
mul
fwait
and
fs
ss
pop
dec
push
sbb
mov
xchg
push
(bad)
jo
mov
loope
(bad)
xlat
mov
pop
jp
lds
sbb
int
pop
loop
aam
jg
pop
mov
pop
addr16
cmps
sbb
pop
mov
dec
mov
loop
fcmovu
push
xor
jecxz
mov
mov
rcl
out
xor
xor
add
mov
ret
shl
xor
mov
xor
out
add
xchg
mov
rol
mov
pop
rcr
inc
pop
sub
test
shld
pushf
sbb
jne
fstp
sub
stc
stos
xchg
loop
xchg
test
pop
dec
(bad)
cdq
gs
es
(bad)
mov
xchg
adc
icebp
(bad)
mov
xor
add
rol
icebp
pop
fcmovne
mov
(bad)
xchg
fstp
push
adc
les
sbb
dec
sbb
push
movs
xor
xchg
movs
mov
idiv
sbb
int3
nop
cwde
out
cmp
sahf
push
mov
ret
adc
dec
(bad)
mov
aas
mov
ret
repnz
xor
fnstcw
xchg
mov
pop
push
ret
div
add
(bad)
imul
pop
fsin
xor
hlt
add
mov
cmp
call
addr16
mov
daa
xchg
aad
adc
fs
mov
xchg
shl
(bad)
out
jecxz
test
(bad)
mov
sbb
xor
push
dec
clc
or
fimul
inc
(bad)
push
mov
int
loope
pop
popf
pop
adc
dec
fbstp
fs
xchg
stos
retf
mov
sti
out
pop
stc
mov
push
int
out
out
dec
fcomp
test
xchg
pop
pop
in
pop
mov
jae
jae
dec
mov
jnp
push
call
aad
jae
rol
int
in
pop
ja
in
cwde
sbb
cmp
jns
in
cmp
add
jb
pop
(bad)
daa
out
adc
leave
push
mov
adc
or
mov
push
mov
mov
(bad)
(bad)
push
out
fadd
jecxz
jmp
mov
nop
cli
lds
pop
mov
or
push
xor
sub
mov
ds
aam
popa
lock
sahf
xor
pop
in
jb
(bad)
mov
cld
(bad)
out
mov
lahf
jp
dec
xor
gs
inc
push
push
jnp
lahf
add
mov
fld
in
mov
sub
les
or
je
adc
popa
cdq
jmp
mov
ror
adc
or
out
mov
scas
imul
sbb
jp
pop
inc
sar
ret
jne
sahf
mov
xor
sbb
ror
push
imul
and
int3
sbb
xor
fistp
icebp
lea
scas
jae
mov
rol
push
out
repz
cmp
xlat
xor
sub
push
pop
lods
sub
cmp
jo
push
pop
lahf
mul
add
(bad)
loopne
stc
lds
bnd
pop
aas
mov
aad
mov
pop
adc
movs
(bad)
or
cwde
pop
sbb
sub
jecxz
dec
nop
inc
sbb
in
fcmovu
gs
das
cli
inc
dec
mov
inc
add
imul
mov
(bad)
lods
pop
cli
div
mov
or
mov
sbb
jbe
inc
sbb
cmp
dec
popa
dec
sub
sbb
clc
mov
adc
dec
cwde
pop
bound
xor
jmp
in
xchg
push
aam
hlt
scas
fistp
bound
ja
xor
jmpw
cmp
push
mov
jle
push
pusha
mov
call
js
cmp
xor
xor
pushf
mov
stos
mov
loopne
mov
push
imul
pusha
dec
call
push
scas
or
mov
cmps
xchg
mov
(bad)
lds
mov
imul
pop
stc
out
outs
(bad)
xor
push
gs
xchg
ret
sar
cmp
push
cmp
push
dec
fcom
(bad)
test
pop
(bad)
push
adc
mov
jbe
fcom
or
ja
mov
stos
dec
lahf
push
enter
xchg
dec
xchg
xchg
sbb
fidiv
bound
or
dec
or
in
stos
addr16
or
ret
jae
pop
xor
mov
sub
icebp
ret
cwde
fidiv
xchg
int3
nop
jne
retf
jmp
retf
pop
stc
sbb
pushf
cmp
gs
pop
in
push
cmp
cmp
in
mov
push
pop
(bad)
mov
(bad)
in
(bad)
adc
(bad)
adc
lods
in
in
adc
cmp
sub
mov
dec
mov
shl
inc
stos
fcom
cmps
ins
fadd
jne
imul
ja
out
adc
mov
cli
imul
xchg
push
jecxz
cdq
adc
(bad)
jbe
cld
sbb
jbe
add
dec
bound
cmc
dec
test
and
ins
mul
pop
(bad)
sbb
int
adc
mov
xchg
ds
or
mov
stos
enter
es
xchg
or
js
xchg
ins
call
(bad)
paddw
jl
out
sbb
fwait
adc
sahf
push
or
addr16
hlt
adc
shl
add
cmp
jnp
or
outs
ret
in
jne
dec
dec
push
dec
inc
dec
dec
lods
inc
std
(bad)
adc
mov
movs
clc
mov
cmc
clc
mov
cmc
dec
rcr
das
mov
dec
and
or
nop
cmp
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
loopne
add
dec
scas
ficomp
mov
popa
das
gs
icebp
out
jb
or
mov
push
(bad)
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
clc
mov
cmc
into
aam
inc
popa
.byte
scas
dec
