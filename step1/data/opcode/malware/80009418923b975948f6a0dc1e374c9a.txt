sbb
add
push
or
sbb
xor
ja
arpl
and
cdq
mov
ins
hlt
jg
std
cmps
cli
mov
in
mov
rol
and
out
retf
enter
ins
or
(bad)
popf
mov
or
lds
pushf
imul
dec
mov
shl
xor
idiv
and
adc
mov
cmp
add
lods
rol
daa
xor
dec
shr
mov
jle
add
lahf
out
icebp
cvttps2pi
rol
cmp
mov
cmps
jge
pop
je
jmp
mov
dec
mov
push
adc
mov
sti
jmp
sbb
pop
fcomp
and
test
cmps
adc
ret
out
lock
fild
fucom
push
cmp
test
and
jmp
mov
shl
sbb
push
dec
push
inc
mov
sub
cwde
dec
aas
hlt
dec
shr
mov
test
cmp
push
mov
sbb
fld
cdq
popf
popf
fs
mov
sahf
xchg
lahf
inc
sub
push
cmc
sub
fldlg2
mov
inc
and
jmp
jae
into
call
popf
outs
cmp
xchg
pusha
ror
lods
sub
sbb
cld
repnz
shr
cmp
movs
mov
xor
or
jp
lds
repz
mov
inc
repz
les
ret
jns
les
mov
xchg
fistp
xor
sti
jg
rcl
dec
cmp
cld
sahf
cld
and
lock
pop
fs
mov
xchg
cmp
sbb
dec
in
data16
dec
inc
mov
and
std
push
ret
mov
xor
jmp
push
out
ror
test
jecxz
outs
imul
cmp
(bad)
test
in
cld
fld
pop
push
sbb
dec
add
or
push
aas
fdiv
add
add
(bad)
mov
mov
push
jne
add
mov
gs
mov
sbb
fidivr
cdq
xchg
mov
out
sbb
scas
sbb
push
and
xor
jecxz
inc
or
and
fmul
mov
or
pop
cdq
bound
shr
aam
adc
out
mov
call
pop
int
jns
js
enter
pusha
jl
ins
js
and
out
les
test
push
mov
je
rcl
push
adc
mov
stc
test
loopne
in
inc
cmp
neg
stos
add
sbb
mov
pop
test
cmp
(bad)
dec
test
dec
and
je
pop
cdq
inc
jnp
sub
push
dec
movs
mov
xlat
mov
mov
inc
das
sub
(bad)
pop
repnz
in
mov
fsubr
icebp
inc
adc
add
push
ret
stc
in
mov
add
imul
stc
outs
xchg
bound
nop
cld
xchg
adc
out
(bad)
std
jle
cmp
or
mov
xor
xor
sub
ins
rcl
jmp
fst
inc
pop
aas
inc
mov
mov
jbe
aam
in
mov
adc
cmp
adc
pop
and
arpl
mov
mov
ret
xor
jmp
neg
adc
(bad)
test
xchg
pop
repz
mov
call
push
add
cmps
int3
fisubr
enter
loopne
xchg
pop
mov
rcl
ret
repz
popa
(bad)
pop
or
pop
sub
sbb
dec
(bad)
lock
hlt
add
jle
(bad)
loope
cld
inc
jns
in
test
jbe
cmp
int3
jl
add
mov
nop
mov
imul
and
(bad)
jns
sub
mov
push
pop
jno
repnz
stos
adc
sub
xchg
test
outs
movs
lock
out
inc
or
dec
jle
sub
jle
push
sbb
and
rcr
iret
iret
fistp
ss
xor
jecxz
push
out
inc
jge
ficomp
add
movs
cs
iret
and
push
xchg
jle
and
sbb
and
(bad)
xchg
scas
test
and
addr16
mov
lds
pusha
nop
mov
sar
mov
sbb
js
repz
mov
cmp
add
mov
repnz
out
fs
pop
push
cmc
scas
xchg
push
mov
cmc
or
les
lds
adc
jno
iret
inc
add
in
push
dec
jmp
in
sub
jge
sbb
and
sbb
pop
sbb
stos
retf
popa
repz
sbb
pop
sbb
adc
or
and
push
enter
lahf
mov
pop
repnz
loope
xchg
inc
call
mov
out
out
js
test
inc
dec
jmp
fwait
arpl
dec
cdq
in
mov
rol
mov
test
(bad)
or
movs
inc
hlt
or
xchg
push
in
icebp
repnz
xchg
out
cs
(bad)
jmp
mov
mov
lock
fwait
nop
jle
inc
jp
stos
sub
out
dec
cmp
jae
mov
popf
xchg
mov
out
cwde
scas
inc
xchg
fcom
lods
jge
push
shr
push
push
(bad)
std
or
inc
outs
sub
ja
sub
mov
cmp
leave
or
ret
out
hlt
push
out
fsub
sbb
stos
into
fistp
sub
shl
push
adc
test
jge
sub
mov
sub
push
jg
fcmove
xchg
call
retf
mov
cmp
xchg
retf
mov
jge
arpl
cwde
and
pop
ins
ret
ins
loope
test
fidivr
push
jne
xchg
inc
adc
in
jp
jne
inc
cwde
and
inc
mov
rol
dec
pop
or
dec
push
inc
test
cmp
fs
xchg
add
jb
cmps
outs
in
leave
sbb
icebp
pop
sbb
ret
adc
(bad)
fsub
mov
add
sbb
aad
xlat
rol
or
jo
fnsave
jmp
and
cmc
cwde
mov
mov
dec
push
and
or
lock
mov
std
cmp
inc
xor
(bad)
movs
xchg
dec
cli
out
arpl
mov
push
inc
xor
adc
cmp
cwde
repz
ror
xchg
xchg
gs
retf
retf
loop
arpl
mov
inc
cmp
dec
out
cmp
inc
out
int
call
out
push
push
js
fcomp
lock
mov
mov
add
stc
lahf
gs
scas
pushf
sti
jl
dec
repnz
(bad)
push
pop
icebp
arpl
and
pop
jg
push
add
push
test
or
mov
jecxz
xadd
std
pop
popf
dec
push
push
call
lea
cmp
in
xchg
(bad)
es
or
fild
or
add
call
js
fild
clc
xchg
daa
sub
loope
jg
xlat
inc
fst
dec
dec
das
pop
jg
lock
int
rol
fldcw
ret
mov
in
push
and
sbb
jb
mov
mov
arpl
out
push
jne
shl
sub
push
push
aam
in
std
push
cwde
ins
(bad)
not
cs
pop
pop
leave
mov
sub
cmc
daa
pop
adc
mov
lahf
mov
jp
(bad)
(bad)
out
add
jmp
(bad)
jno
hlt
adc
mov
adc
mov
mov
ret
into
and
stos
leave
pop
mov
fwait
mov
jle
pop
push
(bad)
out
into
push
jnp
xchg
mov
loope
and
int3
push
sub
cmp
add
push
(bad)
fs
add
leave
movs
shl
mov
sahf
ret
jnp
jecxz
fs
inc
fiadd
test
repnz
mov
lds
xchg
inc
test
mov
cmp
scas
xchg
pushf
rol
fidivr
pop
out
mul
outs
lahf
(bad)
in
int3
pop
retf
pop
lods
data16
mov
je
bound
sub
pop
adc
jmp
rol
(bad)
mov
xchg
xor
sub
aaa
shl
jns
inc
cwde
mov
mov
jno
or
sar
add
int3
(bad)
xlat
rcr
popf
push
and
and
popa
adc
xor
push
xor
dec
mov
sub
out
sub
pop
int3
jle
pop
aaa
or
es
push
push
shl
dec
mov
mov
mov
sbb
inc
mov
inc
mov
mov
fcomi
jb
in
sbb
les
add
inc
lods
dec
ret
jle
inc
or
jmp
call
push
push
or
and
call
aas
xor
push
sbb
(bad)
and
jl
add
rcl
mov
mov
fld
iret
into
jg
mov
cmp
(bad)
jmp
jl
lock
mov
and
mov
push
inc
imul
push
or
into
aas
pop
pop
cmp
leave
loopne
pop
mov
aaa
or
cwde
shr
fidivr
push
dec
loope
ret
ds
fisubr
ficom
loop
sbb
add
retf
mov
push
imul
add
call
test
pop
xchg
sbb
mov
sub
pushf
es
jmp
cmp
push
pop
retf
bound
ret
(bad)
xor
push
ficomp
int3
(bad)
push
aad
push
mov
xchg
jmp
pop
mov
and
push
call
ins
or
push
xchg
ror
lahf
psraw
inc
mov
mov
in
mov
shl
xchg
shl
call
xchg
call
inc
mov
sar
jmp
lock
(bad)
jle
jmp
sub
adc
fs
(bad)
sub
mov
jnp
sub
stos
adc
xchg
cli
mov
std
ja
inc
pop
cmp
mov
push
in
je
std
mov
push
sbb
or
sbb
out
mov
cmc
jle
dec
xchg
push
sub
xor
push
cmps
mov
out
mov
adc
(bad)
mov
outs
xchg
or
xchg
call
jecxz
add
data16
mov
ss
test
(bad)
int
loopne
iret
sbb
push
ds
ins
mul
or
dec
clc
repnz
sbb
repnz
mov
psllw
pop
push
repz
iret
(bad)
xor
stc
lods
push
fisub
leave
dec
int
mov
xchg
test
inc
and
cwde
cmc
gs
daa
adc
aad
sbb
jb
movs
or
movs
retf
lock
adc
lahf
or
lds
ds
in
inc
mov
and
ror
outs
mov
push
lea
aaa
cmp
mov
push
nop
movs
out
sub
fist
and
sbb
and
jmp
mov
pop
lods
js
and
mov
js
retf
xchg
fbstp
je
mov
ins
rol
imul
mov
fstp
ret
push
fdiv
stos
cmp
popf
push
pop
xchg
leave
adc
dec
mov
test
xchg
sbb
call
inc
and
(bad)
ss
mov
inc
lds
or
shl
and
push
pop
sub
pop
call
xchg
xor
xor
repz
jo
jecxz
cmp
jl
outs
push
cld
mov
dec
mov
retf
pop
in
into
and
push
mov
in
imul
ds
data16
retf
and
pushf
(bad)
scas
xor
pop
push
fstp
ss
imul
cmps
loopne
xchg
push
fistp
push
dec
jb
daa
pop
xor
pop
stos
ret
mov
rcl
(bad)
lods
popa
nop
push
int
ret
sbb
test
xchg
and
mov
sub
pop
or
mov
inc
daa
inc
daa
fdivr
push
jmp
mov
dec
lea
mov
scas
cmp
js
ret
push
lods
lea
scas
(bad)
jns
hlt
jmp
xor
push
shr
icebp
popf
aad
pusha
xchg
bound
scas
retf
xchg
add
add
fs
mov
idiv
pop
mov
sub
jns
and
hlt
(bad)
mov
add
das
adc
repnz
leave
rcr
dec
divps
in
icebp
lods
ja
inc
fimul
sti
inc
xchg
(bad)
in
aaa
lods
sub
movs
retf
dec
cld
sar
mov
inc
inc
inc
xor
gs
(bad)
in
push
in
lahf
test
jp
repz
jecxz
fstp
hlt
ret
dec
add
xor
repz
dec
adc
(bad)
mov
repnz
(bad)
hlt
mov
loop
jl
popf
xchg
cld
and
pop
in
add
imul
dec
pushf
pushf
(bad)
jno
dec
out
xchg
xor
cmp
outs
jmp
out
xlat
movs
jecxz
stc
ret
aam
lahf
mov
cmp
or
movs
dec
ja
stc
scas
repnz
imul
out
push
jbe
fisttp
test
mov
movs
ins
hlt
enter
mov
mov
(bad)
(bad)
mov
mov
outs
inc
adc
xlat
cli
fld
ret
stc
ds
sti
out
push
repnz
loopne
mov
and
ficomp
xor
xor
cmp
loopne
xor
add
lock
out
mov
push
jnp
adc
jg
add
repnz
mov
loopne
gs
xchg
cmps
jne
sub
and
mov
mov
fimul
pop
dec
(bad)
icebp
loopne
bound
dec
(bad)
repnz
or
inc
xor
dec
xchg
into
dec
cli
movs
inc
and
mov
repnz
xchg
pushf
and
push
shl
(bad)
mov
mov
push
and
cli
rcl
(bad)
push
push
outs
stos
pop
adc
or
xor
daa
mov
push
dec
xchg
mov
out
sbb
and
aad
retf
mov
daa
fld
repz
push
(bad)
pop
ins
retf
sub
cmc
leave
jns
addr16
sbb
test
sub
fbld
pop
arpl
pop
dec
ret
and
cmp
lock
push
inc
es
sub
pusha
jnp
lock
arpl
loope
pop
aam
(bad)
icebp
add
icebp
mov
mov
mov
outs
dec
cld
adc
xor
pop
jo
adc
data16
popa
mov
sub
xor
bound
mov
adc
(bad)
nop
shr
sbb
sbb
inc
push
sbb
inc
sahf
fstp
mov
mov
sti
ja
aaa
mov
xor
cmc
push
and
daa
mul
mov
push
ret
sbb
mov
cmp
mov
das
pop
mov
or
or
outs
adc
push
fbstp
mov
es
ins
mov
adc
popf
jno
add
call
or
pop
cmp
mov
inc
dec
xchg
sbb
leave
das
mov
jle
sub
sub
mov
imul
sub
push
hlt
add
mov
in
xchg
dec
outs
xor
cmp
mov
cmp
xchg
pop
scas
xchg
jmp
pop
rcl
loop
lods
pop
jge
mov
test
push
ds
ds
sub
push
aaa
push
dec
popa
mov
fisttp
div
scas
(bad)
(bad)
dec
xchg
xlat
les
jp
cld
sub
aaa
loop
test
icebp
dec
(bad)
push
add
mov
jno
mov
mov
cli
add
add
push
enter
sti
mov
push
aaa
push
push
aad
(bad)
cmp
jle
mov
xor
jns
xchg
fadd
sbb
push
and
sub
push
jae
clc
adc
loop
ss
sbb
sub
movs
data16
xor
and
jo
and
fdiv
cli
jge
or
sbb
out
pop
sar
jb
mov
sub
pop
shl
jnp
xchg
in
out
push
jecxz
pop
sbb
in
inc
cmp
call
adc
sub
outs
fst
repz
rol
daa
sub
inc
xchg
(bad)
jb
or
rcl
mov
das
pop
or
adc
mov
iret
loope
popa
repz
stos
pop
dec
arpl
pop
test
scas
lds
js
push
icebp
pop
hlt
push
dec
fwait
mov
push
out
pop
mov
add
push
es
cwde
push
mov
dec
pop
mov
or
nop
mov
inc
scas
jne
rcr
adc
xchg
je
cmps
inc
call
adc
imul
dec
ds
dec
mov
int
inc
inc
pop
jne
dec
jmp
or
ins
inc
dec
xchg
inc
sbb
jecxz
cmp
rol
movs
out
mov
pop
sbb
adc
inc
pop
mov
into
test
dec
addr16
push
outs
xor
mov
sbb
into
outs
or
stc
repnz
dec
aas
dec
and
cmp
sub
jae
mov
outs
xchg
sub
or
and
cmp
retf
neg
xchg
fwait
sub
loope
outs
sbb
test
adc
adc
test
test
das
mov
sub
mov
or
stos
in
jne
lods
jo
push
int3
or
inc
in
in
adc
sbb
or
call
int3
jns
(bad)
xor
pop
xchg
add
lods
cli
xchg
xchg
mov
int3
mov
mov
dec
cmp
test
ins
pop
pop
sbb
xchg
push
in
xor
mov
mov
xor
icebp
retf
dec
data16
pop
pop
push
ret
lea
adc
outs
addr16
icebp
stos
daa
jns
add
repz
push
ins
fiadd
ret
jno
push
je
jbe
dec
xchg
clc
sub
xchg
lock
out
mov
clc
ss
push
(bad)
push
add
mov
jae
loope
and
sar
dec
jge
jg
cmp
xlat
push
xchg
mov
xchg
and
cmc
sbb
mov
inc
xor
mov
fldcw
shl
adc
adc
test
aam
adc
sbb
and
shl
sub
adc
daa
lock
mov
shl
dec
pop
adc
mov
sbb
out
scas
cmps
ror
xchg
imul
cmp
addr16
in
shr
sub
iret
stc
pushf
xchg
cmp
mov
fld
out
jecxz
sbb
xchg
gs
popf
jge
int
lods
mov
sbb
jmp
pusha
lahf
cmc
shr
xchg
xchg
xchg
dec
mov
retf
xchg
retf
pop
cwde
xor
and
sbb
(bad)
cmp
push
loopne
xchg
add
in
cmps
test
es
inc
in
not
fdivr
lods
bound
xchg
push
mov
iret
stos
mov
jb
xchg
sub
popf
cmc
inc
fld
fmul
fidivr
xor
or
xchg
mov
cli
push
xor
adc
xchg
arpl
ja
in
add
sub
stc
sub
aad
push
popf
mov
fs
mov
aam
inc
ficomp
imul
(bad)
hlt
inc
hlt
cli
xor
mov
scas
clc
in
arpl
fs
or
add
popw
pop
xlat
mov
and
gs
jmp
ss
mov
jmp
mov
rol
fistp
clc
test
test
fistp
pop
cmp
mov
(bad)
repnz
mov
add
add
mov
loopne
add
mov
icebp
in
fdiv
outs
imul
aaa
movs
jle
jmp
fild
inc
repnz
aaa
lahf
cmp
xchg
dec
xchg
das
sub
enter
ret
into
or
leave
stos
jno
out
push
fwait
shl
ja
out
stos
inc
jmp
push
jge
div
mov
jnp
lock
shr
inc
inc
or
gs
mov
jbe
push
cmp
jle
(bad)
out
hlt
xchg
and
inc
mov
mov
call
push
mov
add
jle
retf
out
jb
adc
outs
inc
rol
dec
hlt
dec
sar
loope
inc
inc
ret
mov
jmp
mov
sahf
cmp
neg
cmp
sahf
popa
shl
mov
clc
or
in
movs
cmp
out
fs
movs
jns
mov
(bad)
jmp
push
mov
jno
sub
neg
fnsave
push
ins
movs
fs
mov
imul
jmp
add
and
scas
sub
imul
xchg
and
fsubr
jb
cdq
ror
adc
dec
es
jb
push
jno
(bad)
bound
cwde
sbb
outs
inc
xchg
pop
inc
sbb
inc
fisubr
pop
vaddsubpd
loopne
sar
arpl
jg
into
aad
mov
outs
adc
and
cmp
or
jp
xor
push
stc
dec
test
fld
lods
jg
jnp
mov
jb
out
xchg
pop
pop
hlt
sub
aad
fwait
adc
in
jae
imul
in
add
inc
ins
sti
ins
mov
ja
cmps
mov
jp
fdivr
popa
or
sub
jmp
ret
pop
mov
mov
cmc
sub
pop
dec
es
fldenv
(bad)
adc
mov
aas
rcr
inc
loopne
iret
or
push
mov
fild
loop
shr
jle
gs
fisub
scas
mul
xor
push
lea
cmp
fmul
sub
movs
outs
or
call
jmp
fs
adc
inc
add
adc
cmp
pop
aad
sti
gs
push
lock
jge
aaa
lods
jae
pop
push
clc
les
adc
cdq
mov
cmp
sub
ins
cmps
add
in
repz
stos
or
jmp
(bad)
mov
mov
stos
cmps
add
add
push
jp
icebp
call
jmp
mov
xor
fistp
or
xlat
out
xor
mov
pop
pop
mov
adc
je
push
pop
cmp
shr
pop
jecxz
push
std
lods
push
mov
les
xchg
sub
ins
mov
scas
aaa
in
xlat
neg
lahf
rcr
in
dec
(bad)
cmp
dec
leave
push
push
pop
adc
loopne
push
or
neg
sahf
rcl
xchg
lea
je
add
ret
pop
dec
pop
aaa
lods
cmp
push
sbb
sbb
je
div
inc
push
add
popa
push
gs
cdq
in
push
push
aad
ss
outs
jecxz
push
or
xor
adc
jecxz
fdecstp
inc
xchg
call
leave
mov
or
movs
loop
fcomp
out
mov
gs
mov
loopne
sub
jno
pop
mov
leave
mov
ret
cmp
arpl
mov
enter
gs
mov
and
imul
cmp
sti
aas
push
mov
add
xchg
adc
xor
or
ins
lds
mov
mov
and
imul
sub
fcom
pushf
jo
ret
push
mov
cmp
push
outs
dec
fisubr
je
jbe
hlt
cwde
call
icebp
jb
xchg
inc
mov
xchg
sahf
dec
sub
int
jb
ds
dec
adc
sbb
xlat
jns
fmul
and
movs
mov
pop
push
sub
in
mov
xchg
xor
dec
push
movs
ficomp
arpl
xchg
(bad)
push
enter
xlat
fild
and
mov
add
(bad)
mov
push
add
fwait
sub
in
cmps
inc
mov
in
jno
pop
pop
in
mov
mov
cld
pop
and
fcomp
pop
mov
xor
fild
sbb
mov
imul
sbb
faddp
inc
repnz
aad
xchg
adc
push
and
sub
cmp
or
and
add
je
dec
xlat
daa
jo
rcr
sub
xor
js
cmps
and
add
outs
jle
imul
mov
outs
les
cmp
mov
sbb
mov
outs
(bad)
(bad)
fisubr
into
or
push
(bad)
leave
mov
inc
dec
mul
mov
pop
sub
mov
jbe
(bad)
loope
shr
jb
adc
jns
sub
pusha
shr
bound
stc
jle
(bad)
stos
xor
shl
ins
pop
and
push
into
test
(bad)
pop
xor
pushf
dec
push
imul
cmp
sbb
test
cdq
lds
cmp
and
(bad)
into
sub
push
nop
cmp
mov
or
sub
stc
inc
ja
adc
fst
xchg
leave
jp
and
movs
jno
pushf
pushf
and
sub
sti
push
pop
pusha
repnz
add
into
lock
pop
mov
repz
or
mov
stc
sub
jb
cmp
(bad)
push
mov
shr
dec
add
enter
mov
pop
cmp
mov
lods
sbb
pusha
call
pop
rcr
push
jecxz
sub
into
gs
into
xor
call
nop
or
mov
repnz
add
das
xchg
loope
daa
outs
sbb
mov
sbb
xor
in
shr
push
adc
cli
lods
mov
jns
icebp
repz
pop
js
inc
rol
les
retf
addr16
sub
gs
jmp
sbb
jne
pop
push
int
mov
cwde
sub
pop
movs
in
dec
pushf
and
clc
inc
(bad)
sbb
add
ds
pop
call
hlt
jns
jne
sbb
and
or
sbb
lods
call
jge
xchg
jg
jecxz
retf
mov
test
stc
jl
mov
mov
xchg
adc
pop
enter
inc
jnp
pop
test
jne
das
imul
pop
pop
mov
jnp
stc
mov
cmps
bound
pop
pop
arpl
push
or
daa
mov
sub
jb
xchg
cld
inc
dec
mov
out
inc
push
jnp
cs
push
xchg
dec
push
rcl
jno
addr16
(bad)
test
ret
adc
jne
(bad)
inc
or
adc
mov
scas
shld
in
mov
ins
pop
lods
push
dec
scas
and
dec
pop
mov
pop
mov
gs
xchg
ds
out
dec
in
scas
ds
adc
je
adc
imul
or
imul
sub
add
fbld
or
outs
jo
loop
cdq
mov
inc
xchg
sbb
les
adc
cmc
pusha
fwait
xchg
mov
xor
cdq
scas
jp
push
or
aaa
in
lods
sbb
cwde
movs
mov
sbb
xor
lods
xor
sbb
js
rcl
jmp
inc
or
cmp
ror
mov
mov
loope
fcomip
(bad)
mov
jmp
lods
and
add
xchg
pop
mov
and
jbe
jecxz
mov
out
les
jnp
lods
pop
test
sbb
xchg
mov
outs
or
das
add
xlat
cmp
cli
retf
add
mov
jb
movhlps
jp
inc
jg
mov
fstp
inc
or
lds
and
retf
add
retf
push
(bad)
cli
pop
inc
loope
jbe
xchg
push
mov
pop
dec
xor
imul
push
sbb
test
cwde
mov
out
fisttp
or
sbb
pop
jne
cmp
mov
loope
dec
sub
repnz
mov
add
xchg
fwait
in
in
or
add
xchg
ins
dec
jmp
aas
cmps
pop
add
and
out
out
xor
ror
loop
call
inc
jo
enter
pushf
aam
retf
scas
pop
or
in
lds
pop
pushf
arpl
xor
push
inc
cli
xor
imul
sbb
push
fiadd
addr16
data16
inc
imul
ss
lahf
lock
test
scas
dec
mov
jnp
imul
int3
std
jg
xchg
les
outs
scas
add
mov
ret
daa
ret
movs
fsub
push
les
mov
jo
xchg
sbb
jecxz
clc
repz
jo
icebp
mov
mov
adc
fidivr
not
adc
mov
xchg
jle
sub
sbb
call
xor
mov
or
pop
outs
and
icebp
mov
jmp
sub
(bad)
mov
inc
sbb
loope
pop
sbb
mov
addr16
movs
inc
and
dec
outs
fisub
cmp
pop
repnz
xor
jmp
fs
movs
(bad)
lock
pop
sti
in
mov
loope
shl
fst
shl
sbb
lea
or
inc
mov
rcl
push
cmc
xor
es
jae
mov
shr
or
dec
mov
stos
rol
cmps
or
pop
fcom
push
mov
cld
call
sub
push
and
std
push
dec
inc
mov
push
pop
ds
mov
shl
nop
dec
cs
or
ficomp
neg
or
mov
in
pop
(bad)
into
test
scas
hlt
pushf
jge
jno
hlt
(bad)
and
cmp
mov
cmps
xchg
or
nop
addr16
cli
mov
stc
daa
push
fwait
jbe
pop
or
cwde
mov
inc
pop
pushf
pop
js
pop
xchg
dec
je
inc
test
mov
bound
arpl
pop
jl
inc
mov
clc
pop
or
(bad)
and
movs
add
push
arpl
xchg
push
data16
mov
scas
mov
jl
adc
inc
shl
lahf
add
cmp
xlat
sahf
mov
lock
mov
movs
and
jo
pop
popa
and
xor
cs
cmp
in
sar
mov
cdq
sbb
push
mov
mov
mov
rcr
les
mov
sub
mov
mov
xor
movs
fsubr
arpl
aad
inc
ins
ja
jns
xchg
mov
mov
jb
xor
ds
mov
lahf
and
fidiv
xor
pop
jge
and
mov
ins
or
xor
inc
fmul
mov
sti
sub
push
sar
sbb
pop
int3
xor
lods
push
das
adc
inc
xor
mov
sub
xchg
dec
dec
sub
cmp
sbb
or
into
cmp
xor
pushf
adc
dec
test
es
sub
adc
pop
rcl
lea
pop
lea
loop
and
pusha
data16
ds
movs
mov
sbb
adc
dec
aad
test
fadd
add
retf
jg
adc
call
mov
ror
mov
pusha
loope
int3
call
ss
dec
sbb
push
nop
sbb
mov
cmp
sahf
mov
push
sub
mov
and
iret
push
mov
mov
ret
cdq
popf
pop
adc
mov
ins
les
jge
fcmovnbe
je
xor
ret
adc
repnz
inc
mov
add
iret
cmp
push
pop
retf
fadd
(bad)
inc
int
and
add
in
aam
push
lods
(bad)
cmp
or
jmp
pop
mov
shl
sub
fiadd
sar
jle
xchg
jns
sbb
dec
push
lock
or
stos
adc
aam
mov
lock
lea
push
adc
mov
repz
inc
xchg
push
les
push
jns
xor
outs
add
or
inc
fcmovnu
(bad)
inc
pop
mov
or
outs
loope
sahf
push
or
or
daa
(bad)
xor
sub
js
pop
push
not
or
mov
cli
fistp
jno
mov
enter
or
ins
pop
ret
loopne
repz
push
mov
aaa
cmc
ficom
clc
mov
hlt
pushf
fistp
int3
sbb
and
shl
sbb
loop
(bad)
fld
lods
push
bndldx
dec
scas
mov
pop
cwde
cld
xor
imul
pop
or
xchg
sub
loop
dec
sbb
dec
cdq
and
mov
lds
inc
and
shl
jb
std
mov
xchg
mov
movs
push
sbb
xor
test
data16
inc
inc
and
xor
loop
jecxz
ds
pop
jmp
inc
dec
test
mov
cmc
dec
xlat
dec
cmps
iret
cwde
add
xchg
pop
std
or
loopne
jmp
sbb
jb
loop
data16
sbb
jl
mov
ss
push
ret
(bad)
xor
push
(bad)
repnz
out
xor
mov
sub
xor
xchg
out
xor
sbb
adc
lds
cmp
stos
cmps
test
or
jno
push
aam
push
lods
xor
stos
mov
nop
cmp
dec
sti
add
cwde
jno
mov
das
test
push
inc
mov
mov
jge
aam
and
leave
xchg
adc
add
div
inc
cmc
fild
neg
test
xor
xchg
push
push
sbb
pop
push
inc
ja
call
hlt
dec
and
mov
cmp
xchg
xor
xchg
in
mov
mov
jo
(bad)
call
mov
lods
loopne
jo
mov
fmul
mov
jne
jle
mov
lock
mov
pushf
std
sub
outs
dec
cmp
push
lahf
sub
aad
pop
push
(bad)
and
and
mov
pop
dec
retf
jo
mov
into
push
fstp
into
pop
sub
mov
sahf
sub
(bad)
cli
adc
cmp
inc
and
sbb
cmp
sbb
popf
stos
lods
div
pop
leave
(bad)
mov
jl
adc
popf
lods
sti
int3
push
(bad)
in
cmps
jne
sbb
mov
sbb
or
cmp
cmp
mov
xchg
fsub
fs
call
add
sbb
mov
pop
ins
lahf
adc
ror
xchg
mov
jg
outs
mov
ja
jmp
lahf
repnz
popf
jae
shl
sub
jbe
inc
mov
xchg
loop
lods
js
add
repnz
adc
jnp
cmp
sti
xlat
pop
loopne
iret
mov
or
bound
lahf
call
xchg
cdq
and
xor
push
stos
mov
aaa
adc
push
sub
ins
jecxz
push
or
jo
data16
lds
mov
movs
not
push
sbb
outs
(bad)
and
pop
jge
push
sbb
add
cmps
mov
xlat
mov
aad
xchg
xchg
aam
xchg
inc
cmps
test
mov
retf
push
(bad)
test
push
and
inc
movs
add
or
ret
test
and
add
enter
cwde
mov
test
lods
lods
pop
mov
lds
mov
jmp
dec
mov
pusha
xor
jns
push
jecxz
dec
mov
(bad)
xor
push
or
lds
dec
push
test
mov
enter
(bad)
sbb
in
gs
fdivr
sub
adc
cmp
push
push
xchg
retf
rol
out
outs
and
or
repnz
adc
std
fmul
mov
int
loope
cmp
imul
(bad)
clc
jge
ror
add
and
sar
jg
xchg
adc
inc
and
add
push
adc
or
mov
pushf
out
push
movs
stos
inc
jmp
in
mov
loop
jmp
xor
mov
std
mov
popa
dec
out
aaa
dec
mov
aas
les
scas
out
xchg
ret
lea
out
fdivr
add
ror
mov
mov
and
inc
loope
arpl
jb
mov
in
outs
mov
sbb
push
das
bound
mov
arpl
mov
jmp
arpl
xchg
push
ja
mov
sbb
xchg
test
arpl
adc
outs
mov
imul
and
jp
scas
and
adc
fucomi
(bad)
mov
ss
push
out
test
sub
pop
push
sub
cli
xor
pushf
(bad)
imul
or
jne
fimul
mov
adc
mov
leave
movs
cmp
or
popf
dec
xchg
adc
cmp
imul
or
pop
jp
adc
outs
jae
into
int
cmp
dec
mov
adc
lds
or
loope
jp
inc
jg
leave
leave
mov
out
in
outs
ret
or
pop
sub
or
inc
(bad)
jl
xchg
jecxz
int
lds
(bad)
mov
(bad)
cmp
retf
inc
nop
xchg
xlat
inc
out
sbb
sahf
cmp
inc
sti
fisttp
(bad)
fst
cmp
mov
dec
xlat
jbe
cmp
push
call
rcl
lea
test
test
jae
dec
mov
retf
mov
jae
dec
ja
adc
bt
bound
hlt
inc
call
cmps
stos
ins
or
fidivr
push
(bad)
pop
jle
mov
jno
jge
arpl
cmp
cmps
xchg
and
ins
push
and
push
retf
dec
push
cmp
shl
push
ret
push
jg
lods
jb
mov
aam
jle
adc
fwait
clc
mov
mov
jmp
sbb
push
mov
pop
lahf
cmp
fisubr
push
pop
mul
mov
loop
add
push
aam
mov
into
sub
jne
jne
(bad)
xchg
loop
and
push
mov
out
xlat
jnp
inc
lahf
or
inc
jae
mov
scas
sbb
movhps
jmp
jae
and
mov
sbb
add
add
mov
int
rol
dec
sub
into
xor
jo
jl
pop
loope
sub
xor
aad
movs
cmp
jae
rol
push
xor
ret
test
jp
jne
push
jl
test
mov
bound
dec
sbb
int
sub
dec
movs
mov
addr16
stos
jle
scas
loope
mov
and
jne
or
push
dec
cli
(bad)
clc
pop
fsubr
ins
jae
add
add
dec
pushf
data16
jo
minps
dec
sahf
data16
jbe
xlat
ja
pop
or
sub
mov
ficomp
adc
sti
ret
sahf
cmp
dec
inc
scas
jge
out
jae
mov
(bad)
sub
les
cmp
call
adc
or
cmp
jmp
mov
imul
out
push
loop
mov
push
cmps
(bad)
loope
push
out
add
imul
movs
std
lds
loope
inc
aas
xchg
cmps
(bad)
fild
pop
pop
jecxz
cwde
int3
retf
jno
enter
cmp
add
dec
mov
loop
add
or
jns
popa
cmc
std
jo
in
fcomp
mov
mov
xor
pop
and
mov
jns
mov
mov
mov
das
in
mov
test
cmps
push
jae
inc
cmp
sbb
mov
dec
outs
(bad)
xor
dec
bound
xchg
cmp
inc
iret
fwait
imul
scas
ret
js
iret
inc
pop
cmp
stc
mov
icebp
mul
fld
push
xor
cdq
push
cdq
cs
mulps
call
adc
das
sbb
jecxz
js
stc
pop
mov
xchg
adc
les
(bad)
in
xchg
inc
bnd
mov
or
and
sbb
mov
addr16
or
lea
int
push
stos
and
dec
cmp
sub
daa
jae
iret
push
ja
fidiv
inc
out
push
test
and
pop
mov
sub
nop
xor
into
imul
cmp
js
mov
cld
jae
dec
cmp
dec
ins
(bad)
xchg
mov
mov
xchg
jecxz
xchg
mov
cld
jns
ss
mov
(bad)
ins
test
pop
sahf
fistp
push
test
fidivr
adc
aas
sbb
fistp
mov
adc
repnz
and
fs
push
repz
inc
cli
dec
cmp
mov
test
push
aas
fiadd
aaa
iret
xor
mov
add
xor
call
hlt
scas
scas
cld
fild
jo
out
not
mov
inc
lods
xor
outs
ficom
inc
jae
mov
cli
push
dec
xor
retf
arpl
scas
int3
xor
(bad)
jo
adc
loopne
bound
fwait
push
ins
and
xor
or
dec
loop
sub
jp
jge
pop
push
(bad)
lods
xor
adc
cmp
iret
icebp
clc
jnp
mov
in
push
jmp
pop
push
push
xor
sbb
mov
ins
push
cdq
push
inc
mov
pop
cmp
loopne
jecxz
call
push
push
pop
mov
leave
or
add
sbb
retf
fsubr
aam
xor
into
retf
cmp
aad
shr
ret
fistp
push
test
mov
jmp
pop
cmp
inc
add
ror
mov
dec
div
dec
mov
push
pop
inc
cmps
mov
mov
idiv
cmps
les
mov
test
aam
pop
fs
mov
xchg
out
or
sub
in
lahf
(bad)
mov
loopne
hlt
inc
(bad)
fidiv
adc
mov
or
js
xchg
and
ins
daa
fcomp
jmp
or
push
mov
sbb
clc
inc
fiadd
je
add
std
pop
out
sub
sub
cmp
scas
xchg
loop
push
sub
stos
cmp
scas
lea
daa
pop
loop
mov
mov
push
bound
dec
adc
inc
bound
(bad)
push
fcomp
inc
jecxz
or
push
ss
jge
add
retf
test
(bad)
std
xchg
push
test
popf
and
hlt
lahf
hlt
xor
push
loope
push
rcr
in
cwde
xchg
test
jmp
mov
jno
popa
cdq
push
out
imul
jo
ja
xlat
sub
pusha
test
inc
lods
leave
std
sti
in
call
jbe
dec
cmps
fiadd
fdivp
inc
push
jo
sub
mov
aas
sbb
and
test
push
or
adc
inc
fsub
sub
jmp
mov
test
bndldx
stc
aam
jns
fcmovnu
push
push
push
adc
push
out
retf
(bad)
xor
or
call
pop
loop
inc
xor
sbb
iret
pop
ins
pop
call
add
dec
rcr
jno
xchg
sub
adc
sub
ss
adc
xchg
sbb
sbb
mov
mov
lods
leave
int3
inc
cmp
popf
idiv
in
stos
shl
push
or
xor
repnz
retf
mov
popa
scas
test
xor
push
repnz
jo
(bad)
jmp
cmps
ret
je
pushf
daa
sti
pop
ds
cdq
xor
imul
xor
std
enter
dec
arpl
mov
mov
in
push
retf
or
pop
inc
sbb
pop
popa
mov
fs
daa
stc
xchg
cdq
enter
cmp
lods
add
xchg
enter
out
and
fild
cmp
jae
loope
lods
mov
mov
shl
inc
pusha
adc
xchg
mov
push
jae
shl
and
or
sbb
and
pop
sbb
jns
push
xchg
xchg
sub
test
fiadd
scas
leave
push
mov
dec
imul
pop
dec
es
push
push
hlt
pusha
pushf
stos
jmp
rcl
and
or
jno
js
jbe
pop
or
rcl
jecxz
movs
xor
loope
xor
movs
lock
cs
or
into
leave
cli
cdq
mov
cmp
lods
jo
test
outs
mov
or
movs
inc
jl
mov
mov
xchg
popf
mov
cmp
mov
mov
pop
mov
xchg
mov
sub
movs
cmp
cmp
test
enter
(bad)
pusha
mov
cli
xlat
xor
loope
jmp
sbb
repz
push
sbb
add
ds
in
test
pusha
inc
mov
scas
popa
stos
sahf
dec
or
or
xor
aaa
iret
jecxz
sbb
push
push
jo
lods
daa
adc
sub
push
mov
mov
mov
mov
mov
movs
dec
dec
sub
js
mov
jl
fimul
in
mov
sbb
fistp
xor
gs
pusha
arpl
mov
xchg
mov
retf
push
and
adc
cmps
cmp
idiv
jle
push
push
and
sub
pop
xor
popf
sub
and
add
cdq
call
repnz
mov
xchg
cmp
push
xchg
jge
inc
inc
stos
aaa
dec
mov
cmp
sub
push
mov
iret
lahf
pushf
pop
ret
cdq
jg
and
and
imul
sub
push
cmc
bound
rcl
push
mov
add
sbb
xor
and
mov
add
mov
(bad)
gs
(bad)
jmp
mov
std
pop
lahf
stc
xchg
xor
popa
mov
sub
mov
lods
add
xchg
mov
retf
sub
or
and
mov
jnp
pop
cmp
out
xchg
add
push
scas
jge
mov
push
jmp
test
(bad)
outs
xchg
ins
push
arpl
add
add
inc
mov
(bad)
mov
idiv
in
pusha
sbb
(bad)
adc
shl
addr16
lea
xchg
sub
and
arpl
jg
fistp
pop
in
add
int
in
lahf
sbb
out
jle
adc
inc
fcomp
fld
jb
fistp
xor
fst
inc
add
les
out
mov
inc
std
test
es
mov
int3
xchg
adc
cdq
pushf
pop
push
mov
push
leave
sub
add
popa
stos
push
mov
push
add
test
and
fdiv
sti
lock
pop
dec
dec
mov
test
jge
push
adc
test
leave
adc
pop
imul
jg
into
mov
mov
and
sbb
es
test
in
(bad)
lock
movs
inc
jl
xchg
xchg
mov
sub
mov
imul
ret
sub
loope
cld
mov
jge
inc
xchg
dec
sti
das
push
sbb
rcl
cld
inc
inc
sub
aaa
stc
popf
xor
or
int
mov
fld
sub
push
or
ins
jo
add
push
jg
xchg
(bad)
or
lahf
cmps
push
and
or
lds
cwde
xor
mov
ret
mov
mov
adc
scas
sbb
out
enter
mov
push
mov
addr16
out
inc
sahf
push
cmp
sbb
push
loop
and
lds
dec
int
inc
pop
fld
ds
push
(bad)
xlat
pushf
add
cmp
push
push
ret
call
int3
retf
arpl
jg
adc
xchg
leave
fisttp
inc
dec
mov
dec
cmp
imul
dec
out
fistp
mov
std
sbb
sub
shl
test
imul
lods
xchg
(bad)
sbb
dec
cmps
pusha
xor
adc
add
sti
dec
cmp
cli
inc
scas
ja
sar
jle
repnz
mov
inc
adc
enter
pushf
test
push
ret
pushf
iret
add
arpl
ins
dec
iret
mov
mov
sbb
xchg
and
sbb
xor
popf
mov
push
add
aam
inc
and
daa
xchg
dec
cvtdq2ps
fmul
loopne
xchg
icebp
pop
add
shr
mov
xchg
call
mov
sbb
icebp
jecxz
cld
sbb
arpl
cmp
mov
pop
cmp
rcr
ss
cmp
cld
movs
scas
std
cmc
setbe
je
xor
movs
or
jno
mov
fdivr
and
ror
mov
fbld
add
xor
test
pop
pop
mov
mov
cmps
jbe
call
inc
sar
fld
jo
inc
in
mov
mov
hlt
push
adc
xor
lock
mov
data16
popa
mov
or
push
adc
neg
sub
lods
mov
pop
lahf
idiv
ds
mov
mov
cwde
rcl
xchg
cmps
test
xor
or
div
inc
cmps
(bad)
aaa
xor
jmp
leave
mov
xor
mov
fdivr
(bad)
dec
jmp
mov
pop
push
call
add
xchg
pop
mov
hlt
xor
jmp
fisub
lahf
icebp
adc
or
push
or
sti
mov
adc
inc
push
out
out
inc
out
mov
imul
add
aad
push
neg
pop
(bad)
xchg
int3
fild
loope
bound
pop
push
adc
sbb
and
cmp
in
js
(bad)
lods
fwait
cmp
mov
mov
mov
mov
mov
enter
xor
out
loop
js
mov
sbb
and
push
fs
sub
mov
retf
mov
sbb
push
aam
xchg
cmovb
cmp
(bad)
sahf
push
adc
mov
fwait
add
jmp
pop
pop
adc
jle
lea
sti
(bad)
(bad)
loop
je
lock
sub
ja
out
adc
mov
aad
xchg
jmp
loopne
push
out
mov
sbb
(bad)
fst
fucomi
fstp
popf
push
xchg
retf
adc
sti
leave
mov
xchg
push
in
sub
jge
sbb
rol
mov
gs
(bad)
out
mov
shl
xor
dec
cmps
cmp
cmp
ins
fidivr
inc
jo
dec
push
xor
stos
nop
jb
xchg
or
js
(bad)
test
adc
fisubr
xchg
jno
(bad)
sar
lahf
retf
pop
xchg
cld
jmp
enter
cmp
xchg
or
pop
mov
sub
push
rcr
inc
add
mov
loope
add
xlat
leave
mov
ins
adc
add
inc
and
mov
jns
add
jle
push
pop
repnz
inc
pop
mov
mov
out
leave
jo
nop
cli
fsub
push
sub
or
xor
jne
xchg
aad
push
int
repnz
fcomp
pop
pop
push
iret
leave
loop
popf
pop
inc
inc
xchg
push
(bad)
xchg
jmp
int
pop
jo
sahf
popa
sbb
and
bound
mov
push
jmp
cdq
sub
push
mov
mov
push
pop
dec
cli
inc
jl
test
(bad)
loop
arpl
call
cmp
sub
fnstsw
pop
or
neg
push
mov
jp
adc
scas
inc
loopne
jnp
icebp
xchg
inc
retf
js
xor
mov
push
mov
stos
sbb
mov
stc
jmp
pop
jno
jb
aam
xchg
je
cmc
loop
fiadd
imul
inc
cmps
daa
fs
cmp
jb
push
enter
ss
cld
mov
sub
sub
ret
(bad)
mov
mov
push
add
mov
in
cmp
(bad)
into
sbb
fwait
push
jns
and
adc
inc
scas
mov
pop
out
and
jl
je
jmp
inc
pop
les
cmps
pop
icebp
in
push
aam
mov
xor
cwde
in
sub
pop
and
cmp
inc
xchg
mov
jnp
scas
dec
jcxz
inc
hlt
sti
inc
dec
xor
out
pop
ds
pusha
jne
ins
push
cmc
mov
arpl
sub
ins
arpl
jno
sbb
inc
aad
jg
mov
xor
and
into
or
aam
adc
popa
or
pop
icebp
test
ins
dec
sti
fwait
mov
ins
imul
aaa
in
scas
(bad)
add
out
push
ds
xchg
sub
xchg
sub
imul
push
lock
cmp
in
jne
fld
adc
mov
push
cmp
mov
(bad)
rcl
xchg
mov
or
or
pop
sbb
mov
ss
stos
or
ror
inc
popa
xor
jp
fmul
call
sbb
jnp
cmc
enter
xor
push
sahf
(bad)
ret
sub
push
(bad)
jne
jmp
dec
bnd
mov
push
xchg
mov
js
cmp
outs
mov
fxch
dec
call
adc
inc
jns
sbb
(bad)
sbb
push
cmc
ficom
adc
sbb
mov
inc
push
cli
cwde
jp
add
mov
mov
xchg
aad
js
mov
push
inc
xor
ds
jns
clc
outs
push
push
xor
es
nop
lods
mov
(bad)
das
(bad)
loop
cmp
sub
add
jbe
push
pop
in
popf
fild
cli
scas
ret
push
xchg
jae
int
sbb
mov
and
push
shr
push
mov
shl
jns
shr
sbb
jmp
and
pop
sub
mov
and
dec
push
ret
idiv
jae
jnp
dec
int3
mov
mov
push
mov
adc
sbb
jge
xchg
push
inc
xchg
ss
push
dec
ins
or
sahf
ins
(bad)
jnp
and
jne
call
nop
dec
jno
movntq
xlat
fwait
mov
(bad)
popa
xor
retf
ja
and
lods
cmp
test
cmp
fsub
loope
pop
inc
jle
fist
dec
sbb
rcl
mov
ficom
ds
in
loope
es
test
mov
aaa
jnp
push
mov
dec
test
fstp
and
stos
int3
pop
pop
mov
xchg
push
loopne
mov
ret
pop
push
push
sub
xor
movs
cmp
inc
imul
ins
enter
es
mov
xor
ror
sub
cmps
cwde
retf
in
push
sbb
repz
(bad)
cmps
lods
ror
xor
xor
fbld
xor
jns
jae
add
popf
jmp
test
addr16
std
sub
dec
ins
or
mov
inc
or
pop
push
stos
lea
clc
shl
ss
cmps
dec
fwait
sbb
daa
icebp
les
pop
and
jo
nop
sar
imul
(bad)
sub
sub
adc
jmp
adc
retf
add
jb
or
mov
mov
sub
and
push
pop
(bad)
adc
inc
fadd
pop
nop
aaa
imul
imul
inc
das
push
or
(bad)
cdq
call
push
cwde
rcr
ins
popa
or
loopne
in
mov
fist
sbb
mov
jmp
fcmovnu
dec
call
and
stc
imul
mov
and
gs
add
imul
leave
pop
jle
xchg
push
lea
rcr
pop
shl
fild
dec
fild
cmp
pop
pop
movs
mov
daa
jb
iret
lea
in
(bad)
cmp
jmp
repz
mov
std
xor
imul
je
mov
in
les
sub
adc
(bad)
fist
fst
cmps
scas
push
outs
(bad)
jne
and
inc
sub
mov
fucomip
mov
clc
dec
inc
sub
fsub
mov
(bad)
std
xor
push
add
out
mul
jne
cld
(bad)
scas
push
push
mov
or
add
dec
lds
movs
fisttp
jo
xchg
fist
cmps
out
dec
lock
retf
and
jecxz
ja
shl
sub
ja
(bad)
test
jmp
ss
jmp
pop
(bad)
cdq
loopne
xchg
push
jo
mov
add
push
jge
mov
sub
inc
pop
xchg
shr
dec
pop
push
jecxz
cwde
jge
xchg
movzx
inc
cmp
mov
sub
mov
hlt
sub
push
ins
test
dec
shr
test
dec
and
sub
iret
mov
adc
jecxz
pop
and
jmp
pop
inc
in
and
sub
dec
dec
fld
adc
cmp
xchg
xchg
pop
pop
sbb
mov
or
jmp
xchg
sbb
std
fs
pop
jb
dec
cmp
(bad)
enter
and
mov
bound
inc
cs
adc
mov
retf
setp
mov
(bad)
aaa
mov
jge
dec
fidivr
cli
test
dec
iret
xor
mov
call
in
sub
xor
leave
mov
mov
out
test
pop
popa
push
jae
mov
jp
xchg
jne
dec
push
dec
jl
fsubr
mov
sbb
scas
addr16
ja
cld
jp
fmul
inc
dec
mov
arpl
mov
stc
dec
sub
outs
pop
cwde
retf
rol
lock
pop
int3
mov
ins
out
das
sbb
mov
push
stc
hlt
mov
sbb
add
sbb
pop
ja
sub
or
xor
mov
(bad)
cmc
lds
dec
xchg
adc
(bad)
lock
push
enter
add
push
cli
iret
push
sub
xor
sar
outs
add
outs
sbb
pop
or
mov
jno
xor
retf
push
push
pop
addr16
pop
fcomp
cmc
or
adc
test
inc
int3
lea
lock
inc
add
js
repnz
ss
push
out
test
(bad)
push
pop
and
mov
(bad)
pop
pop
cmp
push
call
pop
test
and
not
ror
dec
and
push
mov
dec
mov
cmps
adc
cmp
test
or
sub
aas
jmp
mov
mov
and
sub
ins
sub
sbb
(bad)
mov
add
addr16
push
(bad)
dec
gs
stc
jge
fsubrp
into
xchg
push
mov
call
fdiv
test
addr16
push
push
imul
cdq
pop
pop
cli
or
dec
loop
stos
loop
push
adc
jae
mov
enter
imul
je
je
sbb
sub
pop
movs
into
jmp
pusha
pop
jmp
int
fs
aam
cdq
sub
cmp
xchg
aam
lahf
bound
test
dec
inc
lods
xlat
cwde
sti
sbb
push
cs
sub
mov
js
push
ja
mul
mov
xor
pop
or
jmp
lods
ja
jle
psubb
out
adc
and
sar
pop
and
push
retf
push
push
shl
sbb
sub
pop
pop
hlt
bound
fiadd
push
push
and
xchg
sbb
sub
push
(bad)
cmps
and
in
pop
ret
out
ret
aas
call
std
lock
push
add
arpl
dec
enter
jmp
test
rcr
loopne
in
mov
cmp
mov
in
test
push
inc
enter
(bad)
je
outs
sub
adc
stos
adc
jns
or
icebp
push
cld
add
js
and
mov
pop
mov
dec
mov
das
aam
sub
add
rol
outs
pop
jp
fs
dec
push
xor
adc
mov
hlt
ja
mov
test
jb
mov
add
fisub
mov
inc
adc
pusha
jmp
mov
lds
fisttp
mov
shl
mov
or
sub
loopne
rcr
movs
div
movs
pushf
or
mov
into
rcl
inc
loope
xor
sub
jo
test
retf
(bad)
in
in
dec
in
mov
test
pusha
cmp
jo
test
adc
xchg
pop
cmp
inc
ja
pop
pop
popa
or
pop
jb
inc
and
pushf
jle
sar
jbe
or
add
mov
cmc
fnstsw
cmp
int
xchg
dec
push
add
add
aaa
popf
add
les
sub
repnz
inc
push
out
push
mov
add
int
das
clc
(bad)
loopne
push
(bad)
hlt
js
inc
ins
pop
dec
cmp
into
hlt
adc
add
cmp
enter
test
sbb
dec
jo
std
mov
in
dec
add
dec
or
jae
add
test
pushf
sbb
movs
mov
(bad)
jle
outs
bound
(bad)
(bad)
jmp
loopne
lods
daa
inc
mov
push
jb
lahf
sbb
loop
jge
repz
mov
or
mov
stc
mov
adc
ds
js
imul
jmp
je
jge
adc
pop
cli
mov
out
in
mov
mov
cmp
pop
test
pop
add
jnp
push
or
push
out
addr16
pop
cs
xor
jle
cmp
xor
mov
lock
es
cs
sbb
sahf
add
into
jae
inc
and
cmps
(bad)
sub
xor
push
out
inc
(bad)
push
mov
rcl
nop
push
pusha
dec
std
push
xchg
pushf
maskmovq
idiv
loopne
mov
loopne
and
jecxz
ins
mov
pop
or
data16
shl
mov
and
inc
xchg
jno
sub
(bad)
shl
sbb
inc
mov
addr16
mov
dec
cmc
pusha
adc
mov
neg
adc
mov
fbstp
outs
ds
dec
mov
fisttp
xor
xchg
in
or
in
sub
pop
xchg
ja
sbb
sub
(bad)
adc
push
add
inc
test
mov
(bad)
cmp
and
stos
jno
shl
adc
or
and
mov
hlt
or
(bad)
fcomip
imul
out
movs
pusha
pop
shl
sbb
xor
retf
imul
cmp
out
xor
adc
lock
jbe
hlt
mov
idiv
and
inc
mov
sbb
cmp
ds
ffree
and
sar
pop
sbb
cmc
dec
mov
imul
imul
cs
mov
pop
retf
lods
aas
xor
and
push
and
lods
dec
hlt
xor
(bad)
(bad)
jmp
sbb
scas
(bad)
stos
inc
mov
mov
(bad)
fistp
and
mov
mov
das
ja
inc
jmp
add
adc
out
or
lock
pop
dec
test
sub
or
jnp
sbb
jl
cmp
test
xor
ins
pop
js
dec
push
add
loope
icebp
mov
mov
stc
out
jle
mov
jb
clc
sub
jge
mov
and
add
mov
std
xchg
pop
emms
xor
sub
xchg
sbb
daa
addr16
pop
jbe
xor
inc
jo
ret
push
loopne
adc
jl
scas
gs
push
mov
int3
(bad)
cmp
xchg
push
mov
xor
cdq
mov
lahf
adc
loope
mov
test
inc
adc
rcr
pcmpeqb
daa
mov
sbb
add
imul
xor
ss
jmp
nop
and
sbb
lds
xor
xchg
xchg
add
(bad)
jg
mov
es
scas
pop
jle
push
sub
mov
xor
popa
mov
push
mov
(bad)
cmp
shr
jge
mov
or
sbb
xor
shl
mov
cdq
imul
or
xchg
jae
cwde
sub
inc
add
pop
push
adc
pushf
ins
outs
push
mov
stos
dec
xor
cmp
cmps
stos
mov
mov
mov
fucomp
fsubr
and
out
xchg
mov
cdq
test
mov
div
test
dec
sub
push
push
mov
inc
dec
xor
dec
push
fwait
test
cmp
aam
sbb
add
pop
jp
xchg
jae
xor
fcmovnbe
and
mov
(bad)
iret
lods
(bad)
jmp
jne
and
mov
xlat
shl
jne
lea
imul
dec
pop
xlat
xor
jp
or
inc
dec
dec
pop
xchg
mov
lock
cld
add
fwait
clc
sbb
add
or
ins
jle
mov
inc
lods
movs
sar
(bad)
pusha
fdiv
inc
xchg
sbb
rcl
ins
lods
mov
arpl
std
jae
adc
mov
sub
xor
clc
les
out
in
aaa
in
jmp
pop
in
jmp
pop
div
sub
mov
pop
ds
shl
mov
xchg
dec
shl
dec
popa
xchg
push
mov
js
adc
mov
ds
sub
out
in
popfw
cmp
cli
std
cld
pop
aam
mov
ret
pop
fcom
push
and
in
cmp
jmp
push
rol
pop
jecxz
clc
std
mov
in
jnp
jle
cdq
add
(bad)
test
not
sub
jo
adc
adc
or
and
sub
push
retf
inc
ret
xchg
xor
sbb
push
pushf
in
dec
sar
mov
cmp
outs
ret
or
and
dec
es
icebp
fdiv
jno
addr16
push
lods
outs
xor
inc
cmp
or
cdq
retf
fadd
bound
or
pop
mov
pop
ins
popa
sahf
pop
inc
adc
inc
call
fmul
loope
fistp
jmp
(bad)
dec
or
jno
and
fwait
mov
test
push
jo
jmp
and
out
add
out
pop
pop
cmps
jns
fimul
mul
or
into
int
add
(bad)
into
icebp
lock
movs
pop
repnz
gs
and
div
fadd
pop
rcl
dec
test
ins
mov
imul
stc
xlat
sub
or
add
repnz
out
call
inc
pop
jno
(bad)
out
scas
out
mov
jns
inc
rcr
or
repnz
lods
stos
lods
mul
in
mov
scas
fs
(bad)
test
into
or
xchg
sti
add
sub
fwait
ss
stc
dec
inc
mov
inc
ins
and
ror
add
xchg
xor
add
cmps
shr
daa
push
popf
xor
mov
sbb
cmp
cdq
adc
ins
movs
fistp
sahf
cld
inc
repnz
fstp
aaa
lods
inc
mov
(bad)
cmc
arpl
push
cmps
int
cmp
mov
mov
das
cli
(bad)
sar
sbb
fwait
mov
sar
cld
mov
dec
imul
jae
adc
inc
leave
xchg
iret
adc
xor
(bad)
jecxz
inc
call
inc
jb
jecxz
add
inc
cmp
sbb
(bad)
mov
xchg
jns
cmp
xchg
call
push
call
push
or
loop
inc
lea
dec
call
push
ja
inc
adc
les
xor
push
iret
push
mov
cmp
xchg
mov
shr
out
and
jns
sti
jo
or
ret
pop
xlat
jnp
(bad)
adc
iret
call
dec
(bad)
mov
xor
sub
cld
xchg
enter
cmps
inc
int
or
sbb
leave
jmp
push
shl
mov
stc
fstp
xchg
jge
add
xor
mov
cld
mov
shr
retf
out
mov
in
push
inc
(bad)
fwait
pop
stc
(bad)
or
and
sub
sub
repz
in
adc
cdq
or
rcr
shr
dec
mov
lds
adc
rcl
pop
cmps
sbb
mov
mov
mov
lock
std
fild
shr
repz
pop
imul
sar
jno
pop
movs
fld
mov
fwait
aas
adc
popf
ret
mov
mov
stos
dec
pop
repnz
sar
cmp
sbb
ffreep
mov
or
sbb
mov
bound
mov
push
push
cmp
daa
cli
mov
imul
cmp
sub
jmp
add
add
adc
in
xor
test
repz
pushf
add
fs
jmp
dec
cmp
scas
cmc
push
cmp
mov
cs
lea
addr16
and
inc
xor
jo
(bad)
jb
aaa
test
retf
xchg
nop
lods
pop
mov
mov
xor
mov
mov
js
stc
mov
popf
mov
inc
xchg
adc
inc
push
lods
xor
ins
inc
arpl
int
and
sbb
out
pusha
enter
inc
ja
ficomp
jmp
inc
enter
push
jno
outs
sub
dec
xchg
and
test
std
jbe
cmp
shl
jae
sbb
adc
sub
inc
add
xor
pop
pop
mov
adc
mov
aad
aaa
imul
sti
xchg
cli
fisttp
xchg
mov
push
mov
ja
mov
ret
or
add
loop
dec
mov
int3
pop
xor
popa
mov
movs
sbb
mov
not
popa
mov
add
rcr
dec
and
pop
inc
mov
popa
or
adc
cmp
xchg
(bad)
xor
rol
adc
(bad)
in
nop
cmpps
movs
inc
cwde
(bad)
xchg
mov
int
sub
mov
ror
jl
push
call
loope
mov
cmp
inc
sub
gs
mul
mov
lods
sti
enter
inc
and
mov
adc
adc
aas
sub
pop
adc
jb
push
jg
lea
inc
(bad)
dec
add
jg
pop
inc
xchg
in
cwde
dec
test
sbb
or
and
mov
jno
xor
pop
push
xchg
pop
dec
push
cmp
jnp
ret
pop
push
sbb
stos
sbb
ja
adc
test
and
xor
popf
(bad)
lods
fdiv
outs
inc
mov
xor
inc
mov
mov
jmp
push
adc
xchg
leave
xchg
jp
and
rol
fs
mov
jge
jmp
jns
sbb
dec
out
adc
push
retf
jl
(bad)
aam
sar
pop
mov
mov
js
aaa
mov
int3
daa
push
pop
add
pop
mov
lahf
ds
or
dec
sbb
lea
mov
jnp
mov
adc
add
ins
sub
xchg
add
lock
or
mov
(bad)
in
xor
cmps
jmp
loop
mov
hlt
ret
in
pop
bound
sbb
jg
mov
xchg
xor
jb
xor
fdiv
xor
sub
inc
or
data16
mov
push
jmp
ins
das
cmps
dec
shl
mov
add
pop
add
sub
ds
fisttp
dec
ret
leave
fwait
sbb
sti
cld
pop
jecxz
call
cs
(bad)
test
lods
sub
ss
ins
xor
fnstsw
or
or
dec
sbb
add
mov
mov
mov
push
pushf
dec
and
jb
mov
pop
or
and
sbb
add
xchg
ja
add
push
mov
dec
inc
punpckhwd
mov
push
ds
sbb
int3
dec
mov
stos
nop
es
popa
mov
push
mov
pop
jle
jne
dec
sub
xchg
dec
gs
cwde
adc
mov
ror
jmp
fld
mov
add
and
test
rol
mov
cmc
adc
jb
rcr
push
mov
adc
cmps
add
pusha
in
cmp
loope
and
daa
xchg
push
movs
and
jmp
cmp
dec
pop
test
add
in
loope
test
lock
mov
or
pop
daa
xchg
dec
cwde
mov
push
std
and
mov
out
xor
jnp
push
mov
mov
repz
scas
and
mov
lds
in
mov
pop
imul
xchg
mov
mov
out
scas
aam
xchg
int3
xchg
out
int3
test
inc
push
mov
xchg
arpl
fnsave
lahf
outs
(bad)
dec
mov
fimul
fs
pop
shl
push
rol
adc
cmp
sbb
adc
sub
lods
sahf
ins
inc
into
lods
hlt
outs
ss
xlat
xlat
inc
xchg
shl
cmp
(bad)
(bad)
pop
xchg
stc
movs
scas
cwde
outs
jno
sub
outs
pushf
call
ret
jmp
in
stos
push
add
push
or
outs
push
test
pop
push
ret
bound
jecxz
push
std
shl
into
lds
daa
pop
pusha
ss
jmp
jmp
pop
add
jmp
ret
daa
lods
dec
cs
mov
cmc
xor
jl
xchg
in
cmps
fnsetpm(287
push
cmp
aad
cmp
dec
and
(bad)
mov
dec
cmp
push
test
enter
or
test
lods
dec
aas
fucomi
(bad)
icebp
fadd
lock
into
into
pop
xchg
xchg
xchg
or
jmp
mov
dec
xor
mov
repz
mov
in
xchg
mov
std
loop
push
clc
and
dec
mov
inc
dec
div
cmp
sbb
jl
(bad)
not
mov
in
test
sbb
pushf
jmp
push
mov
cs
or
and
stc
mov
mov
pop
fld
fucomp
xchg
(bad)
das
retf
xchg
add
push
mov
adc
xchg
pop
into
enter
sub
call
xchg
ret
stos
adc
cs
mov
hlt
lea
ss
fwait
sub
ret
mov
icebp
arpl
add
(bad)
push
cmp
push
jbe
mov
call
dec
xor
add
sub
push
mov
adc
leave
mov
or
dec
rcl
outs
or
daa
rcl
sar
dec
add
xchg
cld
dec
cmp
leave
mov
fs
or
jge
cmp
cmc
mov
adc
mov
sbb
into
sbb
mov
mov
into
out
aad
dec
xchg
adc
jae
cmp
enter
xchg
mul
mov
pop
jns
pop
cmpps
scas
sbb
push
repz
cmps
dec
inc
sub
cld
and
adc
sub
xor
sbb
cmp
push
jnp
push
std
inc
push
hlt
fwait
sub
pop
es
sub
fcmovbe
sub
cmp
movs
xor
shr
aad
lds
movs
pop
push
test
sub
jle
call
and
cmps
mov
xor
push
jle
rcl
das
xchg
or
push
pop
retf
outs
inc
stc
(bad)
mov
ja
mov
xchg
xor
out
pop
inc
cwde
mov
and
xlat
cmp
mov
stc
and
retf
dec
clc
pop
jl
push
cwde
add
sbb
pop
fidivr
hlt
pop
or
jo
aam
mov
dec
mov
sbb
xchg
rol
inc
cmp
inc
jbe
mov
cli
cmps
(bad)
cdq
push
movs
mov
frstor
cvtpi2ps
fwait
push
jbe
je
inc
and
sti
outs
ror
jae
(bad)
loop
ror
jo
es
imul
inc
ins
and
daa
xchg
or
call
xor
push
pop
cvtps2pd
pop
popa
inc
add
sbb
fsubrp
sub
dec
test
ss
mov
pop
lahf
push
xor
push
xchg
scas
mov
repnz
dec
and
rcl
xchg
or
xor
bound
sub
jnp
cmps
imul
clc
mov
push
scas
lods
xor
push
pop
(bad)
cmp
cmp
lock
cs
push
mov
call
jne
ins
and
repz
ins
pop
push
pop
push
adc
je
xchg
out
aaa
pop
xchg
sub
fcmovnu
pop
mov
popf
psllw
aam
xchg
gs
sbb
push
pop
pop
inc
jmp
cmc
pop
(bad)
mov
cmp
mov
dec
push
push
and
mov
cmp
dec
and
dec
pop
sub
pminsw
retf
push
mov
adc
cdq
and
cmps
push
xor
add
xchg
sub
fcmovne
xchg
add
jmp
sub
mov
push
sub
mov
scas
lock
and
mov
jge
mov
add
push
and
aam
(bad)
(bad)
iret
jo
dec
ja
mov
dec
lds
adc
into
loop
daa
mov
movs
clc
js
das
sahf
cli
push
sub
jbe
sub
xchg
sub
rol
mov
jne
sbb
pop
in
mov
scas
jbe
sbb
mov
jbe
or
retf
or
push
sbb
mov
push
sbb
ret
ins
sbb
mov
fwait
cmp
mov
retf
mov
movs
mov
outs
push
ja
add
clc
pushf
pop
retf
cdq
aad
push
loopne
pop
int
push
cmp
out
ds
mov
pop
test
mov
jnp
mov
(bad)
xchg
xor
leave
or
dec
or
aas
push
retf
push
cli
ja
xlat
mov
dec
mov
xchg
ja
or
fcmovnu
push
out
dec
jecxz
(bad)
xchg
cmp
sbb
inc
(bad)
mov
jae
and
and
int3
and
mov
iret
pop
lds
push
adc
and
jge
inc
arpl
out
in
shr
xchg
mov
aaa
mov
jne
push
ss
in
cmp
call
mov
inc
cmc
stos
push
push
or
adc
int3
sbb
test
mov
outs
or
inc
xor
cdq
add
push
ret
sub
adc
cmp
inc
cmc
ror
pop
es
test
pop
lds
dec
ss
add
xor
scas
and
movs
data16
(bad)
ficomp
call
xchg
das
imul
jp
and
pop
push
fistp
jmp
inc
or
out
jl
cmp
scas
cmp
icebp
cmps
sbb
xor
js
pop
mov
loop
jle
repnz
cwde
addr16
jne
jbe
sub
cmp
int3
mov
leave
push
bound
pop
test
inc
push
or
xchg
in
jno
add
test
xor
repnz
push
test
xor
mov
xor
xchg
or
xchg
jae
mov
inc
sti
dec
ror
mov
lahf
fs
xchg
addr16
xor
or
xor
push
jle
jno
mov
inc
or
pusha
mov
cmp
fs
les
inc
lock
jns
inc
mov
add
test
cmc
pop
and
daa
pop
lock
push
imul
ins
or
aaa
cmp
scas
pop
adc
cmps
scas
push
or
mov
retf
adc
cmp
addr16
xlat
ja
je
or
out
ffree
(bad)
dec
cwde
fistp
jle
xchg
sbb
pop
xor
(bad)
push
or
xchg
pop
clc
jae
int3
sbb
add
mov
mov
(bad)
leave
fidiv
sbb
int
(bad)
rcl
jle
and
dec
jp
sbb
nop
jne
fistp
imul
das
fisub
js
push
aam
xchg
push
scas
jmp
or
adc
push
repnz
aam
jecxz
lods
lea
and
or
cli
inc
cmps
lds
jbe
mov
and
cwde
dec
stos
nop
adc
adc
push
loopne
aas
call
jns
xchg
adc
jo
dec
mov
mov
retf
mov
adc
outs
xor
in
cwde
add
xchg
sbb
icebp
push
(bad)
stos
jae
push
xchg
ss
popf
cld
(bad)
rcr
scas
pop
div
ins
inc
jge
or
mov
and
enter
or
pop
test
mov
enter
fisttp
mov
and
jnp
ror
jecxz
in
xor
xor
dec
jp
push
add
sbb
cmp
lods
(bad)
cdq
outs
xchg
repnz
hlt
out
stos
pop
(bad)
std
xor
and
mov
mov
xchg
cwde
lea
stos
mov
dec
inc
sub
sub
fwait
bound
test
xchg
inc
lds
xlat
cmp
mov
push
hlt
bound
mov
inc
sbb
ins
movs
mov
inc
leave
and
aad
sub
mov
(bad)
sahf
dec
cdq
mov
or
fwait
movs
inc
out
out
(bad)
rol
jns
fs
push
data16
mov
add
sti
or
push
xor
sub
or
jecxz
add
sbb
sub
in
loop
jmp
cmp
xchg
mov
inc
xchg
ror
hlt
inc
ja
push
adc
out
fwait
mov
push
dec
jg
mov
dec
ret
jae
ds
out
or
ss
jae
mov
add
fbld
and
mul
dec
jl
cmp
lock
popf
cmp
std
pop
pop
mov
sbb
mov
or
(bad)
sub
push
push
test
dec
retf
mov
int
pushf
add
adc
or
inc
sbb
ja
(bad)
jmp
xchg
add
sub
fwait
lahf
and
mov
(bad)
inc
xor
sahf
mov
dec
cmp
jae
call
adc
xchg
sahf
xor
clc
scas
ret
cmp
(bad)
sar
in
daa
xchg
adc
or
sub
inc
mov
loopne
push
sub
mov
jle
xchg
icebp
mov
lock
dec
mov
dec
mov
inc
mov
in
fsub
mov
pop
rcr
mov
fld
push
sub
add
sub
mov
adc
out
rcr
js
cmp
jne
xchg
pushf
(bad)
sub
add
fdivr
pusha
aad
stos
(bad)
loop
cmps
shl
dec
jmp
test
push
jmp
in
and
popf
mov
add
jecxz
jnp
retf
cmps
nop
cmp
mov
mov
sbb
sti
mov
rol
jg
fnstsw
(bad)
pushf
or
imul
sub
jnp
mov
push
push
mov
in
mov
push
and
push
aad
movs
out
dec
and
xor
mov
fld
std
sbb
push
cmps
jo
sti
mov
in
pop
leave
popa
mov
scas
and
ja
push
fwait
jae
in
mov
dec
cmp
jae
push
(bad)
mov
rcr
pushw
scas
jnp
rcr
repnz
popa
push
scas
rol
lds
das
inc
js
xlat
dec
dec
inc
repz
fisub
loope
pop
les
push
xchg
add
iret
mov
adc
(bad)
rcr
push
mov
xchg
fidivr
xchg
jae
popf
mov
cli
(bad)
push
ja
call
jg
icebp
in
xchg
xchg
xor
bound
cmp
pop
retf
jb
into
inc
aaa
dec
fs
add
(bad)
movs
dec
pop
ffree
in
cwde
lock
int
repnz
shr
in
repz
in
popf
repz
scas
mov
movs
lds
ds
and
mov
push
test
fld
(bad)
jle
xlat
push
mov
mov
inc
dec
imul
outs
sti
out
iret
mov
push
sahf
push
mov
rol
fwait
dec
std
or
and
sub
in
aas
cmp
nop
lock
pusha
inc
sahf
pop
out
(bad)
cmp
pop
mov
and
in
arpl
jmp
es
mov
cmp
cli
cli
ret
idiv
int
in
imul
xlat
pandn
and
pop
jo
jmp
repz
(bad)
out
mov
lods
ss
jns
jbe
or
xchg
ficom
cmp
mov
inc
(bad)
jne
nop
mov
sbb
xchg
(bad)
repz
and
mov
jno
(bad)
int3
jnp
fdivr
daa
std
add
mov
or
adc
inc
sub
jmp
(bad)
inc
jge
(bad)
dec
xor
icebp
mov
sub
xchg
mov
(bad)
xchg
fsubr
sub
push
cs
push
or
movs
mov
mov
arpl
inc
mov
xor
mov
ret
rcr
repnz
inc
jbe
mov
imul
push
retf
dec
adc
rcl
push
xor
stc
(bad)
rol
rcr
push
outs
mov
or
lods
jne
movs
dec
mov
mov
jns
cs
cmps
push
xor
adc
mov
pushf
inc
mov
retf
outs
sub
mov
leave
mov
stc
jp
adc
mov
and
lods
imul
and
or
jb
pusha
or
mov
in
add
pop
movs
mov
xorps
push
loope
add
scas
outs
int
lahf
jmp
jle
pop
jge
loope
jp
mov
pusha
xchg
push
icebp
inc
adc
adc
jne
jmp
ret
bound
daa
rol
xchg
aam
mov
jge
mov
ud1
push
mov
lds
add
in
mov
mov
frstor
cmp
mov
push
push
clc
pop
imul
ds
mov
inc
pop
push
gs
jb
aaa
adc
int
add
sbb
sbb
mov
push
cwde
loop
sbb
ror
cld
or
stos
inc
dec
xor
movs
pop
jb
or
sbb
ds
sub
jo
repnz
enter
cmp
test
sbb
dec
or
xchg
sbb
mov
cdq
xlat
cmp
ret
inc
xchg
fdivp
lods
gs
xor
inc
inc
jmp
js
fst
mov
cli
ss
and
jb
je
pop
mov
in
lds
or
gs
rcr
pop
jmp
mov
mov
les
push
jl
xchg
(bad)
int
into
sbb
daa
in
add
fidivr
fnstcw
jle
sbb
cmp
mov
inc
imul
mov
add
dec
add
in
inc
add
and
xor
daa
imul
sbb
lahf
lea
sbb
dec
ja
xor
mov
pop
sub
xchg
cwde
(bad)
pushf
lahf
ins
nop
mov
out
leave
adc
jmp
mov
(bad)
icebp
mov
pop
cdq
loopne
js
mov
fst
mov
and
jnp
repnz
push
cmp
sub
xchg
sbb
loope
and
jae
dec
repz
lods
gs
popf
neg
ins
adc
cdq
ret
outs
popa
inc
mov
xor
test
sbb
cmp
and
ds
push
mov
(bad)
dec
test
shl
jae
jecxz
mov
and
push
cmp
test
mov
jnp
mov
cmp
iret
adc
call
scas
push
xchg
mov
dec
sahf
(bad)
cmp
int
xchg
std
iret
pop
dec
sahf
cld
movs
ins
pop
inc
retf
sub
pop
icebp
and
outs
sbb
std
lods
inc
sbb
fist
and
and
pop
inc
jnp
call
mov
mov
es
out
dec
add
ror
adc
xchg
lods
fidivr
mov
popf
cmp
push
fstp
fcmove
fnstcw
jb
mov
fsubr
mov
sbb
call
fucomip
push
jmp
fsubr
loop
mov
cmc
sti
into
lods
jmp
ins
inc
jo
fs
pop
icebp
leave
jl
dec
adc
cmp
scas
pop
dec
clc
sahf
pushf
sub
jo
xchg
jns
fmul
adc
pop
js
sahf
jno
cmp
ret
push
iret
or
repz
dec
sub
frndint
sahf
xlat
pop
xchg
fisub
enter
mov
mov
mov
xchg
sub
add
pop
call
push
pop
not
les
out
mov
pop
addr16
aaa
dec
scas
rol
jae
mov
pusha
jbe
jl
mov
cs
retf
xchg
xchg
out
into
loop
lea
push
rol
aam
call
adc
sbb
int3
jge
mov
cmp
test
pop
imul
(bad)
rcl
aas
scas
neg
dec
mov
jne
mov
aaa
rol
movs
and
retf
pop
mov
jns
scas
mov
pop
nop
adc
hlt
mov
cmps
jo
popf
test
test
sub
test
aaa
lahf
xor
xchg
js
xlat
xor
shl
xchg
xor
add
cmp
nop
hlt
jl
or
cdq
in
add
xchg
js
dec
push
push
pusha
mov
fwait
test
stos
pop
jbe
aam
sub
outs
dec
loopne
(bad)
js
retf
sbb
pushf
mov
in
addr16
xor
inc
jmp
xlat
pop
pop
mov
ins
pop
cmp
addr16
mov
int3
xchg
xor
inc
mov
sahf
aaa
das
xor
jo
test
and
mov
pop
cmp
pop
inc
pop
dec
xchg
lods
ins
push
clc
ret
push
jo
pop
mov
mov
imul
mov
add
xor
mov
mov
in
inc
adc
movs
call
pop
cmps
jne
(bad)
scas
out
cmp
das
mov
stos
xor
push
outs
jmp
add
push
inc
dec
sbb
mov
or
icebp
call
mov
fadd
in
xchg
jl
push
out
scas
inc
mov
fwait
pop
test
pop
xor
int
das
mov
jge
cmps
popa
cmp
in
xchg
dec
cmps
or
and
xchg
div
lock
inc
and
add
xchg
test
scas
inc
out
aam
pop
cmps
fwait
adc
adc
cmp
mov
mov
daa
sbb
std
sub
push
mov
std
fcom
inc
cwde
inc
inc
rcl
jb
xchg
xor
xchg
test
dec
cmps
or
int
inc
jge
enter
mov
mov
mov
nop
pop
mov
(bad)
add
pop
inc
(bad)
mov
and
jb
add
cmp
add
cmp
jge
mov
mov
pop
sti
xor
arpl
ficom
mov
push
mov
rcl
ins
arpl
dec
loop
leave
fs
fstp
push
or
push
mov
test
mov
sbb
xchg
or
pushf
(bad)
std
mov
cmp
jp
fidiv
inc
adc
idiv
sti
xchg
adc
cs
cmp
inc
pop
lahf
push
out
or
inc
jne
adc
fild
sbb
sub
shl
mov
dec
push
pusha
inc
add
hlt
cwde
and
sub
ret
fist
push
in
lea
ins
cli
dec
cld
mov
push
push
aad
out
mov
in
sub
sbb
pop
mov
les
jmp
sub
cmp
imul
(bad)
pop
cmp
cmps
retf
and
aas
not
cmps
xchg
movs
push
mov
add
cmps
cdq
int
xchg
test
sub
mov
icebp
mov
lahf
iret
nop
xor
inc
xchg
cmps
mov
bound
lods
daa
aas
popf
(bad)
mov
cmp
movs
ja
pop
push
inc
aaa
cmp
shl
inc
jecxz
sub
std
inc
repnz
jae
ja
fisub
mov
mov
call
outs
push
nop
add
jle
xor
les
fs
sbb
cli
xchg
cmc
arpl
addr16
mov
movs
xlat
push
xchg
xor
ds
cwde
lods
in
xor
jge
add
lods
sbb
inc
jmp
dec
ror
pop
test
imul
mov
mov
or
int
(bad)
xor
leave
jge
sbb
imul
xor
loopne
dec
call
jmp
clc
sbb
js
out
fnstenv
inc
inc
pop
add
scas
cmps
xchg
je
mov
jecxz
pop
repnz
push
pop
cmc
inc
adc
movs
mov
movs
int
xor
or
(bad)
sub
cmp
sbb
inc
or
test
nop
test
push
sub
scas
repnz
and
and
dec
frstor
jp
cdq
data16
cs
das
ja
pop
sti
sar
and
mov
dec
repz
cmp
mul
mov
leavew
push
sbb
iret
loopne
or
mov
dec
jl
repnz
dec
dec
aam
mov
mov
test
outs
and
fsin
mov
add
pop
rcl
paddusw
mov
fistp
test
xchg
mov
sub
cmp
push
cmps
cmp
pop
out
int
pop
lods
imul
push
lods
dec
push
(bad)
pop
cmps
les
aad
or
dec
imul
in
jae
outs
sbb
dec
sar
(bad)
lods
adc
or
loope
popf
mov
jbe
ins
mov
stos
push
add
pop
jmp
sti
(bad)
int3
mov
loopne
push
fsubr
xor
adc
popa
lods
loope
(bad)
adc
(bad)
cmps
sbb
mov
xor
movs
ja
popf
ins
(bad)
neg
pop
rol
fidiv
lods
jge
int3
mov
xchg
add
pop
test
sar
fwait
and
int3
popa
mov
lea
aaa
mov
pop
retf
cmp
dec
mov
jp
lods
rol
cmp
sbb
xchg
pop
lds
mov
jmp
sub
mov
hlt
jo
sbb
scas
es
or
xchg
jnp
cmp
jb
int
and
and
push
push
mov
sbb
(bad)
jle
lods
je
fsub
mov
bound
addr16
lods
add
in
mov
cmc
dec
dec
test
lahf
and
sbb
sub
inc
dec
xor
cmp
inc
or
mov
jmp
push
adc
sbb
out
stos
sub
inc
loope
xor
int3
repz
dec
shl
lds
pop
in
jmp
mov
lods
gs
retf
pushf
ja
into
dec
xchg
adc
out
cli
test
aas
lock
or
fs
add
push
push
cwde
lods
es
xor
pushf
ret
aas
push
mov
cmp
ror
sbb
pop
scas
les
sub
fidiv
pop
cli
mov
cmps
pop
pop
mov
(bad)
cld
nop
out
std
sbb
ss
jns
jg
mov
mov
(bad)
or
push
xchg
pop
daa
cmp
mov
(bad)
scas
or
sub
stos
mov
sub
sub
std
pop
inc
cmps
pop
sbb
adc
sub
gs
vpsllq
es
sub
pop
aas
fs
aaa
int3
jnp
pop
mov
mov
xor
pop
aad
and
test
push
sbb
(bad)
int
sbb
xor
out
dec
mov
jmp
xor
out
sbb
std
bound
and
inc
sbb
in
ins
aaa
nop
inc
push
inc
dec
fwait
sbb
and
mov
ffree
cld
push
mov
cld
mul
sub
cmps
pop
pop
jnp
jno
outs
push
fdiv
mov
xor
cmps
aam
out
inc
fst
jb
add
mov
or
sbb
add
jb
in
inc
je
cmc
(bad)
retf
call
pop
and
ror
push
or
ins
xor
jg
mov
enter
js
pushf
mov
add
pop
in
inc
push
mov
lods
sar
fs
jnp
fstcw
test
mov
popa
mov
mov
mov
(bad)
sub
jnp
fild
pop
fwait
imul
imul
sub
clc
(bad)
outs
mov
cld
and
shl
mov
xchg
cwde
je
fwait
xor
xchg
jns
ror
movs
cmp
sub
jbe
repnz
dec
sbb
pop
adc
movs
jo
mov
pop
and
and
dec
adc
pop
lds
mov
cmp
fiadd
jbe
dec
pop
ret
xchg
retf
cmp
shl
dec
pop
mov
leave
xchg
pop
mov
xor
sbb
movq
ins
ror
push
ds
fs
inc
scas
movs
xchg
sbb
sub
ins
dec
and
je
out
push
lds
pop
jbe
nop
sub
cmc
xchg
xor
pop
in
xor
dec
jns
cmp
in
or
lods
or
or
add
loope
inc
pop
imul
push
in
add
sbb
movs
ret
mov
xor
repz
adc
or
hlt
mov
nop
pop
cld
in
dec
aas
and
jae
adc
iret
add
loope
mov
jl
fwait
retf
push
repnz
addr16
mov
sbb
(bad)
in
cdq
mov
jg
mov
cmp
add
sub
out
cmp
outs
sub
(bad)
rcr
scas
cdq
or
add
xchg
sub
and
dec
neg
pop
or
push
gs
or
je
mov
inc
mov
pop
or
(bad)
out
cmp
push
jp
fldcw
cld
outs
adc
inc
cmp
mov
popa
out
xor
hlt
pop
dec
je
lock
cmp
mov
dec
cld
lods
xchg
pop
sub
mov
je
jl
add
cmp
mov
mov
push
mov
fimul
(bad)
hlt
gs
inc
fs
cmps
jl
fcmovu
sbb
push
addr16
out
nop
arpl
inc
sub
in
fmul
(bad)
push
mov
xchg
out
dec
cmps
bound
mov
not
mov
movs
repnz
dec
xchg
push
xchg
push
lahf
call
xor
jmp
test
and
test
xor
outs
pop
adc
shl
xchg
inc
ret
cdq
neg
mul
gs
es
inc
xchg
inc
loopne
in
cli
loope
es
jl
pushf
inc
call
mov
jl
fdiv
or
in
xchg
lea
sbb
mov
pop
lock
or
sub
ins
aad
hlt
xchg
xor
imul
jbe
clc
pop
fidivr
pop
mov
mov
dec
mov
push
xchg
rcl
fld
aaa
pushf
pop
enter
sbb
rcl
mov
add
aas
mov
mul
jb
ror
hlt
adc
and
sub
lock
pop
mov
or
pop
mov
shl
or
mov
std
jae
mov
inc
(bad)
sar
jle
cmp
(bad)
jmp
stos
inc
dec
sbb
div
sysenter
lds
aas
lock
jl
fwait
xchg
xor
push
jecxz
or
das
mov
inc
mov
pop
push
bound
sbb
into
push
test
dec
ins
xchg
xor
loop
pop
pop
add
push
mov
fwait
fwait
sbb
inc
aam
fisubr
dec
push
xor
mov
or
shl
mov
stos
lods
fld
or
aad
sahf
ds
movs
sub
in
cmp
sti
frstor
sti
xor
(bad)
jle
test
add
xchg
xor
cmp
and
aas
cmp
inc
ins
adc
bound
hlt
xchg
cmovnp
push
aas
add
jb
out
push
add
ins
test
repz
xor
mov
in
mov
repnz
mov
dec
and
out
retf
dec
lods
cmp
clc
ins
clc
sbb
ss
xor
neg
pop
xor
(bad)
fisttp
cmp
mov
pushf
je
cdq
push
nop
nop
push
xchg
and
cli
pop
pop
lahf
push
lds
or
shl
cmps
retf
mov
stc
repz
dec
xchg
jmp
dec
mov
mov
rcr
out
jae
in
(bad)
fisubr
fs
(bad)
or
jbe
jb
jl
call
inc
out
iret
jp
in
push
fisubr
pop
inc
aad
pop
xchg
xor
cmp
mov
loop
popf
lock
pop
in
inc
dec
ins
jns
dec
jl
cmps
sahf
lds
gs
cld
and
mov
das
mov
and
push
dec
xchg
inc
xchg
add
pop
test
hlt
push
inc
ret
cmps
pusha
iret
inc
and
clc
loope
cmps
jle
in
ss
inc
hlt
out
dec
or
arpl
pop
enterw
dec
clc
mov
dec
xor
arpl
adc
sub
jmp
fidiv
pop
sbb
xor
imul
add
push
adc
pop
popa
iret
data16
dec
idiv
pop
push
xchg
mov
and
pop
je
mov
dec
sbb
jbe
cwde
mov
int3
ss
pmullw
mov
mov
arpl
stc
mov
and
mov
mov
pop
hlt
cmp
(bad)
fdivr
and
sahf
xchg
mov
and
loopne
push
mov
int
jbe
fchs
sub
xchg
and
dec
les
push
loop
xchg
arpl
les
cld
jle
into
jae
jae
mov
adc
mov
adc
cmp
jl
out
xchg
ins
inc
fimul
ins
jno
inc
push
repz
jno
jl
jecxz
inc
imul
mov
scas
jp
fistp
inc
mov
int3
push
iret
jp
dec
mov
pop
es
xchg
aaa
sbb
pop
pop
ja
push
adc
jl
jge
dec
pop
inc
xchg
lods
test
loopne
loop
pop
lods
fistp
dec
call
test
push
out
add
sti
push
mov
add
lods
xchg
(bad)
jmp
fld
xchg
(bad)
nop
inc
pop
test
mov
out
rcr
out
sbb
pop
js
sbb
icebp
mov
mov
and
cwde
jae
nop
outs
retf
call
inc
pushf
push
adc
pop
or
das
pusha
in
xchg
es
cmp
inc
mul
(bad)
std
jg
mov
retf
out
or
inc
jl
xchg
xchg
inc
mov
xchg
pop
xor
pop
adc
add
aaa
inc
fisttp
jmp
cs
jne
xchg
lea
ins
lock
das
pop
fcmovb
scas
in
mov
stos
repnz
cld
xlat
cmpps
inc
xchg
cld
push
es
outs
xchg
test
test
daa
cs
fmul
cdq
xchg
push
dec
xchg
hlt
shl
lock
sbb
popf
mov
cdq
daa
or
jne
inc
mov
cmp
pop
ja
adc
clc
lods
sbb
xor
pop
cmp
dec
icebp
shl
daa
sbb
(bad)
pushf
cmps
xchg
pop
rcl
fs
jb
(bad)
ret
dec
push
fs
pop
sti
jno
retf
inc
cmp
aas
push
add
mov
vmread
sti
jl
inc
movs
push
fld
jecxz
push
mov
and
out
mov
mov
or
xor
out
loope
or
mov
xor
into
mov
fwait
ins
push
icebp
sub
outs
xchg
popa
fld
or
push
and
jns
jl
xchg
push
(bad)
xor
sahf
push
jb
test
gs
retf
adc
loopne
(bad)
out
jg
popa
or
add
cld
mov
imul
test
push
lea
pop
inc
fmul
in
add
and
rol
test
xor
(bad)
cwde
add
or
or
shl
dec
inc
out
mov
cwde
mov
push
and
xor
ret
data16
movsx
push
in
sar
aas
ret
push
loop
shl
retf
push
dec
test
mov
or
retf
fst
sbb
pop
test
aam
push
into
sub
shl
sar
mov
adc
test
inc
mov
jno
retf
xor
sub
dec
sbb
into
nop
test
icebp
xchg
(bad)
test
inc
cmp
push
or
mov
clc
fstp
retf
movs
mov
sub
cmp
out
xor
add
lea
out
dec
dec
sbb
xchg
sar
mov
(bad)
call
push
rcr
nop
jo
xor
push
dec
push
cmp
mov
jp
pusha
mov
xchg
cli
loopne
call
repnz
iret
sub
bound
dec
bswap
popf
mov
ffree
out
pop
jecxz
fwait
push
stos
xlat
dec
xchg
xchg
adc
push
in
mov
jae
fpatan
and
arpl
and
call
outs
loopne
mov
add
push
push
cmovb
mov
aas
test
rol
stos
into
sub
xchg
mov
xor
mov
push
push
movups
push
jge
lea
xchg
sbb
jg
inc
pop
inc
lods
jno
or
sahf
add
push
add
and
leave
call
pop
mov
int
push
mov
push
aas
repnz
ins
adc
scas
mov
outs
mov
repnz
retf
mov
push
mov
imul
fs
cdq
adc
movs
mov
fcomp
retf
(bad)
jnp
xchg
jp
daa
scas
lods
popa
sbb
mov
ss
mov
enter
call
xor
push
jmp
movs
popa
lea
loop
mov
fcom
dec
mov
sbb
xor
inc
bound
dec
cs
scas
cmps
mov
xor
cld
adc
lds
pop
(bad)
stos
les
out
outs
into
in
xchg
nop
(bad)
mov
sbb
lock
and
into
mov
mov
mov
iret
pop
mov
cmc
outs
js
mov
jp
jmp
jl
mov
(bad)
(bad)
aad
xlat
test
jb
test
or
push
mov
sbb
push
ret
mov
push
test
ja
push
jmp
sub
mov
mov
test
test
cdq
jecxz
xchg
mov
or
outs
cmp
sub
adc
stc
jae
xchg
cmp
sbb
xor
sbb
cmp
xchg
(bad)
pop
inc
sar
xchg
mov
rcl
pop
inc
stos
in
add
push
pop
daa
fiadd
sub
jae
add
jp
mov
js
in
sahf
std
pusha
mov
mov
jle
xchg
aam
push
push
xor
push
sbb
dec
xchg
enter
xor
pop
popf
xlat
mov
leave
jmp
push
mov
add
xor
pop
push
test
xor
mov
xchg
test
or
mov
pop
scas
pushf
xor
ja
pusha
push
xor
mov
sbb
pop
fwait
clc
std
mov
out
add
sbb
test
call
xor
add
pop
fimul
popa
jle
pop
xlat
aaa
out
adc
call
retf
jmp
add
loope
add
mov
push
test
push
mov
out
imul
lds
ja
cmp
cmp
or
pop
or
mov
xor
xchg
std
sbb
fwait
imul
add
test
add
cmp
jle
nop
cld
pop
xchg
and
cwde
jae
repz
pushf
leave
out
sub
mov
out
push
fcmovu
ret
das
mov
mov
mov
jp
ins
repnz
shr
rol
retf
lea
sub
pop
and
cmp
cmp
mov
sub
hlt
gs
pop
icebp
lock
push
add
cmps
sbb
(bad)
in
stos
mov
inc
test
jno
(bad)
fidivr
test
outs
push
mov
mov
pop
std
push
cdq
push
sbb
ins
push
das
lock
cmp
mov
adc
cmps
push
cmp
or
(bad)
sbb
cmp
(bad)
mov
leave
inc
adc
or
push
rcr
daa
cmp
out
stos
outs
mov
dec
and
sahf
ins
ja
push
test
aam
enter
xchg
cmp
and
test
cmps
push
lahf
cwde
cmp
add
into
jle
adc
mov
daa
jmp
ins
out
shl
mov
(bad)
(bad)
in
sbb
mov
jle
fcomp
retf
dec
lahf
sub
pop
mov
xlat
add
xor
aam
retw
mov
mov
stos
dec
add
(bad)
test
cmc
out
pop
pop
(bad)
retf
outs
ja
ss
(bad)
clc
pop
lock
cmp
jge
jge
ins
xchg
pop
and
icebp
imul
pop
cdq
xor
add
aam
push
mov
push
std
xor
inc
in
push
xchg
not
dec
mov
mov
pusha
lods
lea
or
aas
movs
fcmovnb
push
lods
dec
push
adc
ss
push
xchg
pusha
xor
out
xchg
pop
ds
stos
fbstp
sbb
inc
xchg
ja
inc
xchg
push
fucomp
xchg
fs
rcl
fadd
mov
loope
sub
leave
mov
push
outs
shr
and
hlt
sbb
es
sub
sbb
int3
pop
pop
add
sbb
sar
fisub
sbb
out
dec
shr
movs
inc
push
lods
cmovne
push
add
jmp
inc
aaa
sub
jno
sbb
ret
jae
mov
fwait
test
out
mov
sbb
or
stos
or
jns
xor
xor
inc
xor
cmp
ss
(bad)
dec
in
addr16
mov
stos
cmp
aad
sar
jmp
pop
sub
or
dec
xor
movs
sub
loopne
push
mov
adc
sbb
pop
inc
sbb
jmp
sti
(bad)
mov
rcr
ror
jne
lock
(bad)
(bad)
inc
add
pusha
and
add
aad
jle
pop
pop
jle
adc
dec
call
es
ret
jmp
les
outs
sub
and
pop
fldpi
mov
iret
ret
adc
cmp
out
imul
call
scas
retf
sbb
xchg
add
cmp
xor
bnd
mov
xlat
push
ds
imul
jge
out
(bad)
enter
or
outs
imul
sahf
out
dec
retf
push
dec
mov
jge
push
data16
push
pop
in
mov
jge
and
jno
pop
rcl
mov
add
jp
jbe
test
cwde
cmp
jp
fidiv
outs
out
aas
jns
mov
pop
int
and
lods
mov
scas
aaa
leave
push
cmp
retf
jo
or
stos
ret
pop
xchg
out
pushf
jns
adc
in
jle
mov
xor
lock
push
dec
xchg
cmp
mov
enter
das
addr16
push
ret
cld
jecxz
mov
cwde
mov
xor
inc
in
jmp
jmp
idiv
call
jns
inc
outs
sub
adc
das
pusha
sub
stc
and
sbb
sti
mov
xor
test
shr
sti
inc
pop
test
and
(bad)
ins
test
mov
ins
fiadd
fstp
jle
data16
push
mov
sub
ss
in
fbstp
loopne
(bad)
iret
sbb
mov
adc
cmp
ret
sahf
call
mov
cmp
into
sbb
pop
cli
xchg
and
movs
and
sub
inc
fwait
jae
lods
sub
push
fs
xor
pop
jmp
in
pop
mov
xor
js
pop
fbstp
je
fdivr
ret
das
call
pop
sahf
out
stos
and
inc
dec
xchg
or
sbb
rcr
jecxz
or
pop
jl
mov
xlat
mov
adc
dec
push
fdiv
test
pop
bound
jae
mov
(bad)
bound
scas
in
stos
cdq
dec
les
in
mov
adc
ins
test
lock
clc
test
stc
adc
xchg
aaa
mov
out
jge
(bad)
out
fs
lea
push
mov
sub
ins
push
sbb
pop
fxch
jp
gs
adc
movs
jae
jb
(bad)
arpl
jmp
int3
cmp
mov
(bad)
fst
ja
inc
das
(bad)
push
int
jp
jl
add
(bad)
daa
mov
xchg
cli
add
(bad)
xchg
jb
dec
pop
fsub
mov
scas
div
dec
jae
movs
xchg
ds
aam
sub
movs
add
adc
lock
sbb
ror
or
inc
xchg
cmps
iret
pop
mov
jae
repnz
mov
loope
shr
lahf
(bad)
xor
and
repnz
call
repnz
adc
xor
int3
mov
add
test
test
sub
(bad)
mov
inc
mov
pop
(bad)
sub
xor
sbb
shl
jmp
xchg
xchg
into
jne
and
(bad)
ret
in
jl
setae
jne
mov
out
rcl
aaa
lock
dec
(bad)
popf
jcxz
push
and
add
call
scas
jo
adc
sti
hlt
inc
pop
int3
and
fist
fild
scas
shl
or
inc
into
sbb
popf
clc
fs
inc
ror
inc
aad
pop
or
ins
cmps
inc
out
xor
dec
nop
lea
push
adc
into
leave
mov
jmp
(bad)
stos
cmp
or
xor
sub
push
inc
repnz
(bad)
aas
pop
lea
pop
imul
add
lods
xchg
push
daa
test
aad
dec
or
mov
getsec
loopne
push
xchg
jmp
es
dec
rcl
movs
fs
cmps
push
inc
sub
inc
adc
jp
jne
or
aas
pop
xor
icebp
mov
dec
adc
xor
gs
out
and
jge
retf
or
sbb
mov
sub
dec
and
inc
out
in
(bad)
das
ror
mov
xchg
(bad)
popf
xchg
out
loopne
outs
(bad)
out
push
pxor
inc
inc
shl
not
inc
xlat
shl
push
fwait
pop
pop
ret
fld
adc
bound
cs
dec
lods
dec
cmps
jle
sbb
dec
and
xor
fistp
shr
test
and
xchg
adc
push
icebp
test
push
jo
pop
fbld
imul
mov
cwde
scas
out
push
mov
adc
imul
rcl
leave
cmp
dec
push
xor
ins
sub
lahf
nop
xchg
mov
push
call
fmul
and
mov
cmp
pusha
(bad)
xor
fndisi(8087
aas
enter
outs
inc
icebp
inc
mov
out
cmp
jle
jle
add
retf
mov
aaa
in
cs
in
mov
call
in
or
xor
cmp
test
cmps
sar
(bad)
fs
repz
or
into
test
mov
mov
ins
je
dec
adc
mov
shl
mov
sbb
or
fidivr
push
jnp
jmp
adc
jl
in
xor
test
xchg
stos
mov
shl
jl
out
mov
popf
cmp
leave
iret
jb
dec
mov
adc
push
sahf
cld
pop
mov
fidiv
lods
popaw
stos
sbb
in
pusha
push
sub
into
jp
and
rep
(bad)
or
mov
dec
fdivr
outs
or
outs
mov
and
dec
loope
jmp
xchg
pop
dec
scas
pusha
mov
movs
into
push
and
cs
enter
cli
mov
mov
mov
mov
jmp
in
not
sub
loope
out
inc
std
icebp
adc
xor
pop
fiadd
dec
add
mov
lds
cs
fwait
ins
and
cmp
repnz
loop
push
int3
sub
mov
ret
jecxz
repz
inc
sahf
cdq
in
sbb
shr
pushf
pop
out
mov
popa
dec
xor
outs
repz
retf
xor
sub
cmp
adc
sub
dec
xchg
xor
popf
xchg
cs
call
out
mov
inc
movs
mov
clc
ret
ds
outs
ins
call
imul
jo
out
test
inc
add
(bad)
sti
mov
xchg
int3
cmp
(bad)
repz
cmps
pop
mov
and
mov
xchg
jno
fisubr
nop
sub
cmp
push
xor
dec
cmps
ss
movs
pop
cmp
push
sbb
daa
bound
mov
ja
fwait
mov
repnz
dec
shl
sti
jno
mov
pop
gs
pop
test
mov
mov
mov
push
pop
sub
movs
inc
xchg
xchg
sahf
sti
aas
cmc
inc
push
dec
in
popf
mov
int
hlt
push
in
add
fnstcw
fmul
push
sbb
clc
or
rep
mov
and
adc
lods
add
mov
cmp
in
xchg
or
jbe
xchg
out
dec
cli
in
(bad)
jmp
in
push
vdivpd
ds
ins
pop
mov
fwait
(bad)
fstp
aam
imul
xor
test
mov
jo
mov
pop
jae
mov
inc
adc
std
push
sub
add
inc
int
mov
(bad)
mov
xchg
cdq
sti
jp
imul
dec
enter
dec
pushf
xchg
cmps
xor
pop
cmps
je
fstp
mov
rol
scas
sbb
fcom
add
jecxz
cmps
mov
out
xor
scas
es
xor
ret
and
stos
mov
test
mov
add
cmc
fild
mov
pop
fs
fs
xchg
movs
sub
rcr
add
pop
or
mov
fcmovne
xor
dec
ret
adc
fistp
fcom
sub
sbb
in
retf
xchg
cwde
mov
sub
pop
mov
adc
push
in
pop
sahf
loope
inc
nop
lods
push
or
mov
adc
aam
aam
adc
cld
call
cmp
cmp
xchg
adc
and
scas
jp
push
fcmovbe
push
mov
sahf
ret
push
xor
ror
mov
and
ret
inc
in
jecxz
sbb
push
and
cli
and
lods
pop
jle
pop
ds
outs
xchg
adc
mov
jge
lahf
jns
jne
arpl
popf
daa
popf
test
mov
loop
or
push
fsubr
shr
js
inc
dec
ds
out
push
dec
retf
jo
and
ret
xchg
xlat
and
add
in
push
into
xor
call
add
mov
push
je
pushf
sbb
cmp
mov
cmps
sbb
iret
mov
ins
out
cmp
(bad)
jmp
mov
cmp
pop
iret
movs
(bad)
pop
repz
jmp
jecxz
inc
and
and
xor
scas
pcmpeqw
stos
mov
xchg
push
jmp
push
(bad)
or
pop
inc
jno
xor
stos
(bad)
(bad)
adc
(bad)
in
in
js
data16
and
dec
jbe
fnstcw
mov
cwde
xor
std
ja
popa
add
out
int3
ret
xchg
(bad)
fild
test
movups
dec
xchg
outs
pop
or
cmp
lahf
pop
push
mov
pop
pusha
mov
clc
fisub
pop
xlat
or
add
pop
out
mov
lea
push
aad
or
lahf
mov
cmp
mov
jae
inc
mov
jo
sub
pop
shl
xchg
cmp
xor
inc
add
pushf
icebp
iret
fnstsw
mov
or
xlat
jmp
ror
test
and
or
push
fdivrp
shl
xor
cdq
push
(bad)
xlat
lods
cmp
jno
xchg
nop
jmp
(bad)
aam
xor
popf
push
or
push
jbe
les
cmp
jbe
xchg
div
mov
into
ins
or
ja
jae
rcl
jo
aas
jp
mov
test
adc
cld
(bad)
pop
test
xchg
js
movs
xchg
pop
aam
mov
mov
jo
inc
out
(bad)
inc
cdq
xor
pop
push
push
dec
inc
xlat
mov
stos
(bad)
call
xchg
jmp
bound
dec
pop
pop
std
jl
or
jp
shl
fdivr
cs
fwait
xchg
sti
mov
xor
mov
mov
aam
pop
imul
pushf
sub
sub
std
adc
in
mov
cmp
mov
cmc
adc
jmp
retf
xor
sbb
addr16
pop
mov
sbb
xlat
push
cmps
les
adc
pop
(bad)
into
mov
ds
cmp
popa
sub
jne
into
cld
sbb
sbb
rol
call
push
call
or
enter
lea
pop
jmp
fild
mov
mov
mov
dec
in
mov
pop
mov
lods
jp
(bad)
retf
pop
ja
pop
and
fmul
sub
(bad)
fwait
cld
das
sbb
cmp
jnp
aam
out
and
inc
jge
adc
rcl
outs
in
rcl
out
jmp
inc
ins
dec
movs
xlat
das
mov
sub
adc
lods
popa
and
mov
xor
mov
mov
imul
pushf
clc
and
mov
fisubr
mov
or
adc
and
pop
sbb
add
mov
and
test
cmps
sub
jo
xor
popf
push
fiadd
dec
enter
aam
mov
adc
push
mov
or
adc
mov
cmp
push
daa
sbb
pop
mov
shl
ss
adc
jmp
dec
out
cmp
call
push
pop
pop
mov
aaa
rol
adc
jae
or
add
dec
(bad)
cmp
loopne
popf
cld
scas
out
(bad)
(bad)
in
xchg
sbb
loope
pushf
shl
mov
push
das
inc
dec
pop
fwait
scas
out
adc
pop
cmps
cli
inc
or
inc
pop
jnp
pushf
movs
inc
out
jp
fwait
xor
dec
arpl
call
jmp
jbe
aaa
inc
jb
sbb
xor
mov
dec
sub
push
fstp
xchg
jbe
sub
dec
rcr
pop
push
cmps
pushf
sub
cmps
cmp
mov
xor
pop
arpl
mov
outs
mov
ror
fwait
inc
imul
pop
push
frstorw
pop
arpl
mov
outs
leave
test
ror
(bad)
xor
aam
arpl
sbb
loope
sti
push
mov
imul
mov
or
into
add
cmp
mov
fwait
push
dec
mov
(bad)
loop
pop
and
cmps
ret
push
sbb
lahf
(bad)
mov
jns
mov
dec
jmp
(bad)
and
std
out
push
add
stos
push
call
inc
fadd
pop
mov
ja
xchg
scas
cmp
retf
(bad)
ficomp
push
lahf
outs
iret
cmps
xchg
jle
mov
push
cmps
jns
out
push
dec
aad
xchg
adc
call
cmp
sub
push
jns
cmp
push
xchg
call
mov
xchg
mov
or
neg
icebp
sbb
xchg
add
in
or
push
lods
xlat
pop
aam
push
pop
cld
dec
jl
pusha
inc
or
or
shl
aam
cmp
and
jns
jmp
cli
add
dec
leave
mov
push
inc
es
mov
pop
(bad)
js
mov
add
pop
into
scas
fcom
xor
add
(bad)
mov
mov
push
cs
jae
mul
dec
push
(bad)
pop
fs
xchg
xchg
dec
out
sbb
das
inc
pop
add
repnz
inc
jb
or
call
jmp
mov
ret
jno
test
shr
push
mov
dec
fsubr
rcr
adc
adc
jl
xchg
xchg
sbb
cmps
aas
and
mov
lods
pop
sub
jbe
dec
mov
xor
dec
push
daa
push
dec
adc
fucom
lahf
mov
sti
and
sub
xchg
cmps
repz
pusha
iret
icebp
jno
cmp
xor
pop
and
push
dec
ret
inc
sar
sbb
mov
ds
sbb
ss
cmc
jmp
mov
call
in
lea
jb
adc
ja
repz
ds
call
lea
ja
inc
leave
pop
aad
add
sbb
and
sbb
push
xchg
xlat
cmp
scas
call
push
ret
xchg
enter
(bad)
shl
retf
or
jb
xor
retf
sbb
ins
jbe
xchg
sbb
retf
pop
into
cmp
fsub
dec
fwait
mov
dec
mov
pop
pop
shr
inc
cli
push
dec
inc
xchg
clc
out
add
iret
pop
clc
mov
jbe
xchg
mov
cmp
sub
test
sar
mov
mov
popf
adc
lahf
aad
addr16
mov
adc
in
test
mov
push
je
xchg
inc
(bad)
adc
out
mov
mov
cmp
ret
inc
xlat
aas
jmp
in
call
(bad)
mov
fs
add
push
sub
xchg
fild
and
jmp
neg
iret
fwait
std
mov
mov
cmp
jg
xchg
and
sbb
jp
sti
jne
mov
sub
shl
sub
inc
jne
jle
rcl
xchg
outs
enter
mov
js
sub
shl
adc
and
out
mov
add
test
nop
jmp
retf
cld
sbb
push
stos
or
test
ins
jmp
neg
jae
cwde
jbe
sub
sahf
mov
push
sub
ins
repz
xor
pop
es
ror
fs
fwait
or
popa
(bad)
pop
retf
test
cmps
xchg
mov
dec
pop
out
(bad)
dec
fld
mov
mov
loope
push
pop
xor
pop
(bad)
jo
cmp
inc
sub
and
lea
ror
scas
inc
dec
add
inc
popa
mov
(bad)
jecxz
dec
jae
and
xor
retf
xlat
inc
int3
push
(bad)
call
push
xchg
dec
cmp
cmp
xor
dec
sahf
sub
aad
cmps
icebp
dec
cli
mov
or
fs
push
out
push
jge
push
jnp
xorps
sub
push
and
aad
fucomp
sbb
aad
pop
xchg
out
test
cdq
and
sub
push
inc
mov
rcr
jno
pop
lea
test
mov
lahf
cwde
xchg
out
cmp
fst
adc
sub
aam
push
xlat
cld
(bad)
dec
jo
push
fs
movs
out
test
mov
sahf
adc
add
mov
and
mov
push
adc
jge
xor
out
je
call
xchg
xlat
cmps
sar
sub
or
sbb
push
ret
sub
push
pop
lock
xchg
mov
sahf
inc
jle
jmp
adc
dec
sub
aas
in
jle
pop
and
ja
push
inc
clc
cmp
jae
test
sbb
ins
in
mov
sbb
out
movs
xchg
xchg
add
or
gs
leave
pop
jp
sub
xor
push
ins
shr
jmp
adc
lds
pop
lahf
sbb
xor
shr
xchg
jecxz
scas
movs
xchg
lods
mov
movs
nop
pop
inc
push
pop
dec
mov
adc
aad
(bad)
push
jo
js
clc
fs
inc
pop
ins
sub
add
enter
xor
pop
xor
lock
and
test
addr16
xlat
ds
xchg
in
rcl
xor
bound
pusha
xor
cdq
sub
jnp
dec
sahf
push
cs
stc
push
or
mov
std
ficomp
push
mov
mov
rcr
mov
popf
cmp
fild
add
xchg
adc
pop
xor
cdq
mov
sbb
xlat
inc
sub
pop
mov
dec
jb
dec
dec
fwait
push
push
sbb
sub
mov
jp
xchg
aaa
mov
(bad)
sub
retf
xchg
daa
push
sub
imul
or
xor
loopne
mov
test
mov
jg
sub
sti
push
div
pop
push
fstp
clc
sti
mov
cmp
mov
ret
das
mov
sub
jbe
sub
push
pop
leave
retf
les
loope
mov
clc
loope
fimul
inc
sbb
std
mov
or
inc
jb
mov
cmps
push
mov
cli
xor
int
fst
lahf
pop
inc
lea
sub
adc
xor
jl
mov
shl
jmp
out
(bad)
jns
lahf
icebp
pushf
dec
movs
ins
int3
and
retf
ret
pop
out
push
jns
out
fst
fs
gs
sbb
arpl
push
dec
mov
dec
ins
js
sub
clc
pop
arpl
pop
sub
mov
cwde
int3
or
jle
scas
sub
scas
mov
add
and
pop
push
ds
retf
cs
jle
(bad)
std
add
outs
daa
sbb
adc
jmp
push
imul
gs
push
push
stos
pop
retf
test
mov
xor
add
jp
neg
rcr
stc
arpl
add
adc
dec
mov
jmp
and
fidiv
int3
shl
loopne
cli
sub
in
sti
dec
mov
mov
fisubr
jnp
jae
pop
or
mov
add
nop
pusha
icebp
stc
je
xchg
ret
cli
sbb
pushf
xchg
mov
add
adc
arpl
data16
sar
jle
idiv
jno
dec
or
iret
sub
js
adc
inc
pop
push
shl
mov
je
jmp
aad
daa
pop
dec
sub
cmp
fistp
pop
arpl
mov
jae
mov
movs
adc
mov
sub
dec
cmc
mov
sub
push
sti
jnp
in
mov
xor
call
outs
ret
out
imul
push
sbb
loope
xchg
and
inc
inc
pop
jmp
sbb
adc
mov
loopne
push
les
fistp
shr
mov
adc
jnp
(bad)
dec
aam
or
lds
push
retf
enter
and
xor
lock
inc
loope
adc
sbb
adc
(bad)
call
cmp
cdq
jmp
(bad)
test
mov
lock
call
iret
jg
pop
push
sbb
ins
sar
(bad)
fistp
cld
enter
push
icebp
jge
dec
mov
adc
sub
dec
movs
mov
push
shr
mov
push
loope
fwait
pop
xor
aam
out
mov
in
test
mov
xor
cmps
loope
sub
jecxz
add
jmp
mov
mov
mov
lods
cmc
lods
test
std
nop
sub
or
sub
and
push
mov
add
adc
and
ins
std
xor
test
and
out
jg
repz
jge
int3
and
dec
ds
imul
mov
repz
jp
mov
fnstcw
sbb
std
daa
fimul
mov
jae
jns
push
push
mov
pop
les
sbb
mov
push
and
or
ror
je
test
xchg
sub
loopne
sbb
xor
ds
push
inc
jns
in
in
jnp
lods
and
(bad)
daa
jp
mov
xchg
fld
cmps
jle
fild
movs
inc
cmps
push
jl
sbb
imul
jle
and
sub
(bad)
xchg
mov
sar
inc
leave
imul
enter
jnp
push
mov
into
pop
ja
jo
js
stc
cmps
push
and
add
call
add
movs
cld
scas
hlt
jb
repnz
pop
sub
neg
sbb
inc
(bad)
bound
(bad)
xchg
shl
das
ins
shr
xchg
mov
(bad)
dec
mov
gs
std
into
popf
cmps
mov
bound
icebp
sbb
(bad)
mov
(bad)
adc
and
sbb
push
xchg
jp
test
xchg
mov
adc
inc
xor
setnp
test
push
lds
dec
add
push
sub
mov
add
iret
jmp
adc
out
mov
arpl
xchg
mov
iret
adc
(bad)
adc
dec
popa
cmps
xchg
rcl
out
js
adc
shr
add
cwde
xor
lahf
cld
inc
mov
xor
dec
daa
dec
mov
in
or
mov
sub
icebp
pop
shr
jle
cmp
dec
xchg
ja
imul
mov
xor
push
lds
and
push
jo
pop
pop
mov
jl
loop
mov
cli
add
in
fdivr
outs
shl
shl
mov
fld
fnstsw
sub
mov
push
repz
jb
and
and
adc
xchg
dec
movs
adc
mov
sahf
pop
mov
xchg
es
out
test
xchg
xchg
loopne
lods
inc
mov
or
fwait
aaa
pop
jno
lea
inc
sar
sbb
fisttp
sbb
add
rcr
arpl
sar
push
sbb
test
iret
jp
pop
loopne
xor
in
and
mov
imul
mov
ds
ror
inc
int3
icebp
ret
dec
sahf
aaa
sbb
lock
je
cmps
xor
or
cwde
mov
js
cmovl
add
jp
add
add
xchg
pushf
test
in
lds
movs
add
ds
mov
mov
xor
cmp
not
xchg
mov
pop
add
int3
aas
mov
add
pop
loope
gs
(bad)
retf
daa
arpl
cmp
rcl
pusha
inc
outs
(bad)
xor
aad
ja
sbb
ds
mov
mov
lds
ins
es
fcomp
(bad)
add
sub
adc
repz
(bad)
fbld
imul
lods
xchg
mov
int
push
dec
jae
mov
xor
fnsetpm(287
es
sub
lods
imul
push
fstp
dec
sbb
inc
or
xor
xor
mov
nop
add
movs
fcmovb
gs
mov
fcom
shl
pop
sub
sbb
dec
inc
dec
inc
mov
and
test
adc
out
mov
retf
jmp
adc
xor
(bad)
repz
or
jae
sahf
or
rol
fcomp
jmp
imul
cld
stc
cwde
push
ret
push
outs
or
lahf
enter
sub
fstp
xchg
js
std
rcr
add
cli
cmc
jmp
loope
imul
fisttp
mov
or
out
and
mov
adc
jg
(bad)
stc
idiv
pop
test
pop
cmp
in
in
xchg
or
jmp
ror
movs
and
mov
shl
pop
cmps
fwait
ror
pusha
movs
loopne
dec
lea
fidivr
sahf
fdivr
std
jg
movs
fs
arpl
leave
stos
mov
idiv
jns
push
mov
add
loopne
cld
aas
pop
cmp
cld
sbb
test
jo
inc
(bad)
addr16
ret
imul
iret
pusha
dec
mov
enter
pop
fld
cmp
add
push
ins
aas
mov
adc
fisub
loopne
push
call
push
jmp
in
xor
retf
scas
push
aad
sub
outs
cmovns
ins
and
imul
fist
enter
jge
push
aad
repnz
cmp
cli
or
fxch
sbb
or
mov
in
jb
jl
or
pop
popa
xor
lds
outs
popf
add
xchg
jp
cmp
sub
std
in
loope
inc
mov
push
fiadd
leave
call
mov
xor
test
cwde
pop
imul
inc
stos
out
mov
retf
shl
push
push
push
xchg
aad
ret
pushf
xchg
sbb
lahf
repz
jl
test
ins
dec
mov
fmul
mov
jns
outs
push
scas
fcomi
fnstenv
adc
ret
pop
sub
inc
enter
mov
cdq
out
fidiv
outs
sbb
in
inc
pop
inc
mov
jb
lods
shl
add
mov
mov
xchg
dec
mov
dec
push
loope
pushf
dec
mov
loop
(bad)
in
data16
push
xchg
lahf
cli
xchg
cld
mov
jne
and
mov
jne
adc
pop
xchg
push
and
imul
and
cdq
cmp
pop
xlat
mov
bound
stc
movs
loopne
fimul
ficomp
(bad)
xor
neg
fisubr
mov
cwde
ror
xor
dec
pop
std
gs
mov
xchg
int3
and
xor
(bad)
ins
mov
fisub
mov
clc
out
dec
sbb
sahf
inc
pop
aad
jge
cmps
push
xor
lea
pusha
mov
xor
inc
pop
cli
mov
push
push
jns
mov
loope
pop
sbb
push
sbb
cmp
leave
cmp
mov
(bad)
mov
dec
ret
xchg
ret
mov
cmp
push
mov
cs
add
inc
ficomp
dec
call
xor
call
push
int
int3
add
and
jl
es
jl
xchg
sar
mov
dec
mov
push
inc
pop
adc
push
xor
push
jl
inc
and
dec
mov
dec
adc
sbb
std
scas
lea
das
and
sahf
and
mov
fwait
aas
inc
jg
stos
icebp
pop
retf
xchg
push
mov
int3
cmps
jl
lods
fild
lds
jp
cmp
pop
jae
sbb
cmp
pop
test
jmp
jnp
dec
push
je
je
mov
pop
test
dec
cli
xor
fstp
lock
sub
out
arpl
dec
mov
or
adc
div
leave
pop
ins
retf
or
(bad)
jmp
data16
cmc
xchg
mov
clc
mul
mov
enter
fld
mov
pop
loop
shl
clc
jp
retf
xor
and
cmps
add
(bad)
lock
or
shr
sbb
or
outs
test
dec
fwait
mov
and
leave
in
repz
mov
push
inc
pop
mov
mov
xlat
push
pop
es
scas
cmp
xor
int3
call
js
xchg
add
cmps
sub
mov
mov
sbb
mov
mov
in
jno
test
mov
sub
mov
cs
adc
mov
in
(bad)
fdivr
add
jmp
pusha
sub
jmp
cdq
imul
pop
add
outs
(bad)
mov
mov
aas
adc
mov
daa
cmp
loope
popf
ret
out
push
inc
mov
shl
jp
push
shl
xor
std
int3
jge
push
(bad)
sbb
shl
jbe
out
pop
lock
adc
push
js
inc
inc
stc
inc
cld
test
mov
mov
and
dec
mov
cmp
call
adc
add
pop
fs
push
xlat
pushf
gs
cmps
mov
in
ds
inc
adc
cmc
stc
pop
loop
inc
cmp
pop
pop
add
inc
cld
ins
ret
ret
inc
fadd
push
jmp
mov
add
fwait
stc
fist
sbb
sbb
or
inc
push
push
arpl
popf
scas
mov
push
cmc
push
cmp
cmc
dec
mov
adc
iret
call
sub
push
ss
retf
inc
xor
ret
shl
jmp
jmp
lea
mov
sahf
clc
pop
add
mov
jbe
pop
sar
cmp
sub
mov
xor
push
sub
xchg
dec
push
ds
adc
add
outs
sbb
add
xchg
cmp
loop
ficomp
push
lods
and
push
pop
xchg
test
jge
or
repnz
in
fidivr
mov
popf
sbb
pop
pop
mov
es
pop
arpl
std
xlat
pop
je
pop
or
dec
cmp
pop
mov
out
xlat
or
xchg
sub
cmc
cs
int3
and
mov
or
shl
and
mov
push
in
std
pop
gs
and
aad
inc
leave
push
mov
sbb
sti
mov
add
mov
push
cwde
and
ins
cwde
fimul
lahf
mul
loop
inc
mov
xchg
daa
cmp
push
cmp
sbb
xchg
jg
mov
fcomp
and
inc
and
push
jns
(bad)
loope
adc
inc
test
adc
(bad)
sbb
xor
(bad)
cs
sub
test
and
sub
pop
shl
lds
scas
sub
adc
jo
(bad)
cld
xor
ja
cwde
(bad)
mov
test
lock
xchg
sahf
jge
pop
pop
and
jmp
mov
inc
(bad)
xchg
in
stc
mov
pop
jbe
cmc
lea
hlt
adc
scas
cdq
fdivr
mov
sub
cmp
xor
push
cli
pusha
and
push
pop
add
pop
js
inc
int3
les
cmp
mov
mov
mov
nop
sub
inc
pushf
lahf
add
jae
outs
push
int3
inc
ss
pop
out
sbb
scas
mov
adc
pop
pinsrw
xor
cmp
mov
push
stc
div
and
ds
mul
mov
push
and
push
cmp
xchg
inc
lock
das
mov
cmps
mov
add
loopne
sti
hlt
cmp
fbld
fmul
fld
mov
push
cmp
(bad)
lods
jb
call
cli
dec
sbb
jno
repnz
and
mov
xor
or
xor
push
cs
call
and
xchg
mov
(bad)
jle
jg
push
lea
sub
jl
mov
cmps
pop
mov
cmps
movs
call
mov
bound
sub
inc
jl
xchg
and
cmc
mov
sbb
mov
xchg
xor
std
loope
outs
mov
out
cmps
dec
arpl
sub
ja
psrad
adc
fidivr
lea
ret
test
ret
mov
sub
adc
cmc
mov
pop
adc
dec
cdq
outs
xor
push
ret
mov
lahf
(bad)
hlt
sub
mov
push
in
fadd
sub
or
jbe
mov
xchg
sbb
mov
dec
rcr
imul
and
inc
jp
sbb
(bad)
add
xchg
cmp
push
jmp
stc
popf
test
les
lods
mov
aad
aam
pop
push
jns
data16
jle
add
xchg
lds
xchg
mov
aas
iret
test
je
call
mov
jle
icebp
cli
or
inc
fwait
jne
daa
inc
sahf
add
pop
out
add
or
loope
shr
add
leave
mov
jmp
xchg
je
xor
repnz
ret
cmp
sbb
in
out
aam
aad
xchg
rcr
sti
mov
(bad)
hlt
icebp
retf
xor
adc
sub
retf
rep
sub
shl
and
push
(bad)
push
cmp
sub
out
xchg
push
mov
xor
rol
mov
mov
lods
inc
out
sbb
test
jp
cdq
cmc
test
add
push
outs
sahf
push
das
bound
nop
dec
das
xchg
cmp
xor
mov
jge
test
call
jg
shl
cld
xchg
mov
pop
inc
cdq
push
pop
out
imul
jle
push
inc
nop
dec
lods
sar
or
jne
jno
push
out
leave
in
cld
jle
clc
pop
and
rcr
outs
and
(bad)
jl
clc
cmp
inc
les
pcmpgtw
retf
sub
test
inc
imul
iret
mov
outs
or
push
ficomp
jns
rol
dec
rcl
rcr
cs
dec
test
int3
loope
adc
sbb
leave
sti
xchg
pop
ss
dec
ins
mov
ss
fwait
mov
(bad)
pop
mov
push
jae
jno
pop
mov
stc
xor
pop
rol
jg
popw
aad
das
ins
in
ins
cld
jns
xor
(bad)
adc
or
mov
mov
mov
pop
jecxz
dec
mov
dec
mov
xor
push
xor
sub
or
test
addr16
stos
in
(bad)
sbb
or
inc
stos
(bad)
push
shl
call
rol
shl
sbb
xchg
xchg
mov
push
xor
jle
ds
fwait
jmp
int3
or
sti
sbb
dec
mov
inc
(bad)
jns
and
sbb
pushf
xor
out
retf
sub
sub
dec
frstor
(bad)
loopne
push
dec
outs
mov
push
inc
jle
adc
adc
xlat
cmp
sar
mov
mov
adc
xchg
(bad)
sub
lds
int
sbb
je
push
push
push
call
std
(bad)
in
mov
aas
jge
cmp
arpl
inc
imul
pop
dec
or
retf
xor
fucomi
fidiv
mov
movlps
adc
push
jp
icebp
mov
or
mov
mov
cmps
cmp
fcomp
into
and
sub
sub
mov
sbb
movs
pop
xchg
push
neg
in
jnp
mov
mov
adc
sbb
fldenv
add
xchg
data16
fistp
cld
mov
cs
daa
dec
mov
dec
js
pop
mov
push
adc
imul
lods
dec
jne
mov
test
add
ret
jle
std
jno
or
es
ins
and
jecxz
cmc
hlt
add
mov
popf
call
test
test
in
aaa
mov
arpl
dec
xor
call
add
push
and
jno
sub
cmp
aas
add
jg
pushf
mov
and
movs
lods
mov
test
cmp
daa
fld
mov
int
sub
add
ds
jbe
or
sbb
pop
push
pminsw
xchg
inc
inc
jp
pop
std
and
dec
and
push
sub
arpl
mov
sahf
xchg
push
or
mov
stc
mov
jmp
sub
data16
or
dec
push
mov
adc
mov
(bad)
mov
repz
inc
lock
dec
fldcw
ret
je
or
xor
outs
xchg
inc
adc
xor
push
cmp
addr16
(bad)
jp
repz
repz
test
xchg
push
jne
xchg
cmps
nop
movs
xchg
pop
xchg
jp
or
lea
mov
xchg
cdq
gs
pushf
out
idiv
mov
je
out
xor
fwait
ss
sahf
mov
jl
xchg
outs
cld
lds
xor
push
dec
push
dec
fsubrp
call
retf
loop
xor
pop
lods
aaa
sub
dec
ja
and
pop
xor
pusha
add
cdq
lds
push
outs
jnp
xchg
inc
add
ror
pop
pop
inc
sub
std
(bad)
rol
retf
xor
test
adc
mov
fucom
lods
shl
ror
rcl
jmp
rcl
out
xor
mov
jns
or
gs
ds
shl
loop
pop
mov
movs
iret
sub
pop
shl
addr16
pop
mov
mov
mul
dec
cwde
or
xor
dec
rcr
xchg
add
sbb
xchg
xchg
mov
jmp
xchg
sbb
(bad)
inc
jge
xchg
imul
and
les
push
ret
jbe
inc
imul
enter
retf
cdq
test
call
xor
add
lds
mov
mov
data16
fs
xchg
test
inc
in
dec
sbb
call
adc
sub
dec
cmp
push
test
jp
test
and
mov
push
lds
xchg
xchg
mov
inc
push
push
call
jle
jo
inc
push
and
add
lds
ficomp
mov
inc
pop
mov
stos
dec
daa
ror
mov
cmps
sbb
jne
cmps
lock
ins
clc
sub
mov
lds
mov
add
cmps
jb
(bad)
xchg
sti
add
pop
sar
xchg
cwde
test
(bad)
test
daa
pop
push
fcomp
cmps
lods
inc
add
aam
push
ins
mov
iret
fst
inc
(bad)
iret
inc
pop
dec
cmp
xchg
ret
fsubp
mov
or
aas
adc
mov
(bad)
pusha
ror
and
test
inc
mov
push
jnp
dec
in
pop
(bad)
div
and
enter
xlat
sbb
imul
inc
add
pop
sub
inc
test
and
mov
pop
dec
movs
nop
mov
xchg
push
xlat
xchg
(bad)
jg
nop
inc
xor
loope
out
or
cmp
movs
push
fiadd
inc
adc
sbb
xor
jo
add
sub
leave
inc
mov
jecxz
inc
add
out
je
adc
mov
dec
push
or
mov
mov
mov
add
fwait
(bad)
adc
add
sbb
inc
fldcw
inc
jae
div
cmp
cmp
iret
or
cld
sysexit
jns
loopne
call
sub
sub
ficom
inc
lahf
loope
repz
or
xor
xchg
add
push
cmps
mov
bound
sahf
lock
idiv
push
das
and
rcr
pop
cmc
xor
cmp
mov
repz
jnp
jnp
pusha
in
std
adc
push
std
retf
sub
pop
loopne
adc
push
aad
jmp
and
mov
(bad)
mov
push
aas
sub
repz
and
dec
je
pop
adc
cdq
scas
and
pusha
fstp
popa
leave
das
or
and
nop
lea
xchg
ins
xor
pusha
dec
pop
scas
xchg
sbb
sbb
mov
pop
sbb
fsub
xor
shr
popa
ror
mov
inc
pop
pop
ficomp
jbe
int
or
out
icebp
jmp
or
lock
(bad)
cmc
or
std
loope
xor
scas
xor
push
int3
aaa
movs
hlt
popa
outs
out
mov
jb
imul
fdiv
mov
ds
ins
cld
jmp
xchg
(bad)
cmp
outs
mov
cmp
pop
jno
cs
sub
xor
jne
pusha
mov
leave
adc
into
xor
push
add
out
or
xor
and
cli
ss
sbb
push
(bad)
lods
dec
sub
adc
xchg
rcl
fs
fcom
les
adc
pusha
mov
adc
or
popf
fisubr
sub
and
(bad)
fidivr
ror
das
int
loop
push
cmp
sub
icebp
shl
and
or
dec
sbb
movs
sbb
bound
cmp
jbe
out
pop
nop
fsub
movaps
push
fcom
push
xchg
addr16
enterw
addr16
sbb
enter
jmp
push
adc
pop
ins
stos
xchg
popa
fnsave
and
jns
pop
enter
adc
inc
outs
stos
pop
pushf
mov
inc
fucom
mov
ins
mov
popa
jg
call
add
call
and
pop
push
(bad)
jmp
test
cmp
pop
inc
mov
jno
sub
mov
mov
fdiv
imul
fstp
dec
mov
dec
dec
cli
sbb
jge
sub
xchg
aas
dec
jl
rcl
inc
pushf
sar
pop
repnz
jge
xchg
sbb
adc
mov
and
call
sbb
outs
je
test
into
push
std
xor
outs
leave
ret
push
pop
test
icebp
in
inc
cli
aad
jg
pop
lahf
daa
or
addr16
jne
imul
cwde
lahf
mov
adc
mov
ret
lahf
in
adc
mov
inc
jmp
test
sbb
xlat
(bad)
cdq
jl
push
inc
shr
retf
pop
int3
push
jns
daa
xor
in
xor
jbe
sbb
jmp
or
cmp
dec
xchg
adc
fs
in
inc
add
mov
dec
ret
sbb
dec
out
cmp
fimul
aas
outs
sub
(bad)
ror
mov
fsubr
push
dec
or
test
jl
xchg
gs
in
aad
inc
shr
test
lds
xor
outs
imul
and
iret
pop
add
lods
xor
or
push
int
adc
loopne
xlat
dec
sub
add
std
ins
push
add
arpl
arpl
popa
das
push
sbb
lods
push
out
bnd
std
ds
in
xchg
mov
jno
aad
ror
arpl
xchg
xor
ret
dec
mov
out
retf
int
das
(bad)
sbb
daa
sbb
out
sahf
repnz
retf
rcl
push
scas
push
add
dec
nop
sar
and
sub
cmp
out
sub
and
repz
enter
pop
jl
inc
pop
jbe
mov
pop
mov
mov
retf
outs
das
mov
loope
push
or
pop
int3
mov
test
ret
adc
dec
stos
repz
iret
push
pop
mov
test
mov
jbe
or
dec
inc
cmp
mov
xor
bound
xlat
sub
sub
shl
call
sub
xchg
scas
adc
and
js
stc
sub
sbb
rol
inc
aas
nop
push
fcomp
xor
pusha
mov
out
xchg
sbb
adc
ds
out
pop
jecxz
dec
int
pop
mov
aaa
gs
rcl
add
xor
mov
call
leave
dec
enter
into
imul
lods
popf
out
jge
sub
pop
jmp
mov
out
outs
pop
inc
out
mov
add
mov
xchg
pop
push
xchg
sub
in
cld
fs
test
xor
repz
adc
js
mov
or
cmps
ja
cmp
xor
mov
pop
in
cmp
lock
dec
pop
and
sahf
in
pop
enter
sub
fldenv
test
setne
lock
outs
cmp
sbb
inc
iret
ret
ficom
dec
test
(bad)
xor
aas
clc
jl
cmc
pop
fst
jge
pop
and
icebp
add
rcl
add
rcl
dec
sub
cdq
mov
mov
xor
retf
mov
sub
dec
mov
movs
in
push
mov
xor
das
jne
xor
loopne
xchg
dec
push
cmc
daa
movs
and
sub
sysretw
sbb
out
mov
rcr
adc
mov
inc
mov
xor
hlt
mov
lea
pop
xchg
pop
lods
mov
scas
bound
das
fs
or
inc
xlat
mov
adc
jb
out
aas
xor
scas
xor
out
sti
push
ds
sti
xacquire
dec
jae
pop
xchg
mov
ret
(bad)
pop
or
daa
adc
cmps
add
popf
push
shl
in
mov
push
pop
jmp
inc
daa
cmp
clc
push
mov
lahf
dec
sub
cmp
or
int3
xchg
jbe
bound
mov
mov
stos
(bad)
mov
adc
mov
mov
inc
cs
or
adc
mov
push
add
xor
pop
xor
jbe
push
repnz
icebp
sub
mov
ja
ret
add
imul
adc
cdq
mov
outs
pop
dec
or
pop
xchg
out
es
xor
int
and
sbb
mov
sub
jmp
xchg
jmp
rcl
outs
push
les
out
cwde
jmp
mov
call
jg
ja
pop
mov
fs
mov
or
or
jle
mov
pushf
xchg
rol
adc
bswap
sub
js
push
inc
xchg
call
inc
movs
sar
sbb
ins
sar
je
cld
aaa
sbb
adc
and
jg
ins
dec
push
sub
fwait
ds
(bad)
neg
jmp
in
in
aad
jle
xor
mov
add
in
outs
rcr
jno
fisttp
push
pop
out
in
jg
xchg
xor
(bad)
call
cdq
loopne
loop
mov
add
or
adc
jmp
jnp
xchg
arpl
retf
mov
sbb
pop
xor
call
mov
repnz
adc
sahf
sub
inc
sub
mov
sub
push
push
fidivr
mov
sahf
mov
not
mov
mov
lea
out
sbb
jo
jo
xor
retw
das
and
retf
lds
and
pusha
in
push
xchg
in
ror
movs
sub
dec
lock
inc
inc
bnd
push
ret
ret
mov
or
mov
loopne
adc
cmp
cdq
aam
shr
stos
push
out
add
out
js
mov
test
pmullw
hlt
push
xor
jge
xor
pop
or
cwde
or
je
inc
ficom
mov
mov
or
push
jecxz
mov
jo
mov
xor
das
mov
mov
xor
adc
loop
pop
loop
mov
mov
xlat
inc
jecxz
imul
mov
xchg
or
lahf
push
nop
adc
es
(bad)
(bad)
push
(bad)
int3
out
inc
aam
loopne
mov
loopne
mov
sub
cwde
ins
and
ret
dec
xorps
sti
sub
or
outs
fldcw
fidivr
cs
push
rcl
pop
xor
outs
push
xor
mov
sub
mov
nop
test
sbb
dec
leave
mov
call
aad
iret
adc
sub
xchg
push
popf
xchg
aam
(bad)
sbb
jae
pop
shr
out
mov
adc
ss
push
or
xor
pop
xchg
xchg
out
test
push
cld
mov
add
mov
(bad)
call
retf
out
dec
sbb
xchg
or
dec
add
popf
test
mov
push
sbb
xchg
(bad)
cmc
fsub
mov
jbe
pop
imul
jo
inc
clc
push
dec
hlt
jbe
xchg
in
push
daa
cmp
xor
mov
les
cmp
fs
dec
xor
xchg
inc
movs
aas
fld
fstp
mov
sbb
sub
pop
std
cmp
lods
sar
int
push
fistp
jg
mov
fwait
cmp
fiadd
(bad)
pop
loopne
cmp
push
mov
rcr
add
jecxz
inc
inc
xor
punpckhdq
mov
aad
sub
sbb
mov
xchg
cmp
push
pop
cld
leave
test
mov
xacquire
jp
push
ss
push
mov
mov
pop
fwait
gs
push
iret
std
shr
fldlg2
mov
push
scas
cmp
mov
bswap
mov
inc
ins
sti
cdq
fild
je
mov
sub
imul
(bad)
mov
push
pushw
fldln2
push
(bad)
mov
sahf
add
jl
leave
mov
xchg
mov
jno
shl
inc
sbb
clc
repnz
xor
push
aas
cdq
retf
xchg
push
pop
(bad)
jb
xchg
inc
inc
ja
mov
adc
add
mov
sub
mov
les
add
mov
dec
daa
mov
push
outs
js
and
push
adc
movs
in
test
hlt
dec
mov
dec
pop
lods
pop
adc
dec
cmp
mov
or
in
mov
jnp
sub
(bad)
jge
push
pop
cmc
pop
mov
fs
lods
jge
xor
pop
add
scas
cmp
jecxz
xchg
inc
xchg
pop
icebp
jns
scas
push
sti
mov
jmp
dec
pushf
in
das
fimul
fcomp
repnz
rcr
xor
es
popf
dec
sub
inc
lea
dec
aam
retf
(bad)
sahf
dec
fcomi
or
adc
and
dec
or
inc
(bad)
movs
dec
and
mov
fwait
aam
cld
idiv
add
fisub
push
push
add
out
jmp
stc
cwde
xchg
addr16
mov
mov
sub
adc
push
or
stos
mov
cmc
adc
out
pop
jl
(bad)
xchg
adc
das
into
in
cld
or
pusha
xor
mov
shr
popa
mov
arpl
iret
retf
repnz
neg
mov
stos
fs
dec
fdivr
(bad)
jmp
xor
(bad)
push
loope
iret
adc
jbe
imul
xor
push
test
movs
icebp
hlt
jnp
jge
loop
dec
pop
xor
pop
std
aad
push
add
nop
jmp
inc
mov
repz
aaa
sbb
jecxz
lods
push
or
out
bound
mov
pop
mov
adc
mov
(bad)
push
inc
dec
shl
movs
pop
xchg
icebp
fbstp
mov
push
lea
pop
aam
call
jge
(bad)
jbe
test
sbb
icebp
dec
mov
cdq
out
cmp
adc
sbb
xlat
call
sub
xchg
adc
fldcw
fs
pop
out
dec
mov
or
push
jae
das
dec
inc
cdq
lock
inc
jl
rcl
movs
cmp
pop
push
cmp
cli
sub
lock
loop
call
ret
sbb
into
scas
fistp
add
push
cwde
in
stos
sbb
inc
imul
push
aas
fadd
out
loop
pop
test
dec
mov
fistp
cmp
imul
mov
xchg
inc
add
jecxz
jne
jo
push
lea
inc
int3
cmp
(bad)
daa
sbb
aas
shl
(bad)
mul
mov
out
push
outs
pop
xlat
dec
dec
dec
gs
je
cld
add
jg
arpl
in
(bad)
sub
out
loope
daa
imul
(bad)
mov
xchg
ds
xor
rcl
mov
dec
xor
enter
mov
mov
sub
mov
rcl
xor
pop
mov
inc
jbe
arpl
fstp
in
movs
(bad)
sbb
lods
and
mov
and
xor
jmp
dec
pop
ret
lds
add
jns
(bad)
aad
jae
shr
adc
xor
sti
mov
scas
jb
jbe
jmp
xor
loopne
sahf
out
add
xchg
jg
cmp
fsub
dec
nop
pop
adc
ret
mov
push
xchg
jmp
or
retf
popa
fisubr
sub
mov
mov
xchg
(bad)
loopne
aaa
push
pop
aad
jb
sub
not
addr16
mov
xor
fisttp
lods
outs
pop
mov
mov
sti
cmc
xlat
cwde
adc
sti
fwait
mov
pusha
fwait
call
xchg
push
sub
pop
sbb
pusha
cmp
hlt
inc
(bad)
pop
push
jae
enter
sar
sbb
dec
jmp
xchg
jnp
movs
xor
pop
push
xor
sub
test
lods
push
xor
pop
push
ds
rol
xchg
outs
pop
loopne
and
out
cwde
pop
retf
int
xchg
sbb
fwait
lahf
sub
add
xchg
jne
jbe
or
leave
push
or
or
imul
or
imul
and
mov
fild
cmps
into
sub
xchg
scas
jno
mov
scas
inc
inc
or
repz
xchg
mov
xchg
or
cmp
scas
fmulp
xchg
jne
cmp
jno
inc
or
sub
imul
jns
test
xchg
cs
loop
push
xchg
cmp
dec
jb
int3
test
int3
inc
mov
stos
repz
push
jb
xor
jl
mov
or
dec
mov
ja
or
int
inc
shl
movs
out
mov
and
nop
mov
(bad)
dec
in
call
lds
push
out
(bad)
pop
and
add
dec
cmps
dec
or
push
cmp
xor
scas
rcl
sbb
sbb
sub
inc
inc
jo
dec
mov
push
(bad)
pop
out
jmp
stos
ja
in
hlt
pusha
mov
pusha
ins
mov
sub
das
das
stos
cmp
push
fstp
loopne
add
xchg
dec
add
sbb
inc
xchg
aam
fdivrp
fstp
lahf
jmp
imul
push
sbb
xor
ror
xchg
jg
jmp
fwait
mov
cld
cmc
pop
or
jae
jp
mov
jmp
push
or
or
xchg
ds
dec
fdiv
mov
jle
inc
mov
popf
jle
cmovno
mov
pop
mov
push
add
cwde
mov
lds
inc
cmp
sub
push
lods
aaa
adc
sub
jae
rcl
mov
pop
dec
ja
jne
push
bound
out
cmp
push
ins
mov
cmp
xor
mul
arpl
popf
mov
or
add
inc
push
icebp
(bad)
cmp
fmulp
mov
or
cmps
pop
add
fisubr
dec
jle
and
mov
es
mov
push
xor
and
ror
jle
fdiv
stc
mov
movs
pop
fist
jg
and
cmps
inc
les
pusha
lahf
mov
(bad)
shl
cs
and
mov
pshufw
fimul
mov
repz
sbb
and
inc
cmps
daa
sbb
cmc
jmp
mov
(bad)
out
test
mov
faddp
lock
dec
sbb
push
cmp
add
fcmovbe
ret
jecxz
cld
push
ja
jmp
mov
dec
jge
psubsw
bound
bound
adc
shl
or
sub
push
push
movs
movs
sbb
or
xchg
out
cld
mov
out
jecxz
push
ror
sub
xor
pop
xchg
mov
rcr
daa
(bad)
in
fisttp
loop
push
sub
sbb
(bad)
pop
(bad)
mov
mov
cmp
mov
pusha
sub
inc
arpl
jl
fisttp
pop
fbstp
pop
in
enter
sbb
js
xor
sub
mov
inc
pop
imul
test
mov
cli
inc
gs
std
mov
and
or
cld
sbb
xchg
cmp
xor
js
jmp
movs
mov
mov
leave
ss
int3
adc
mov
inc
push
in
(bad)
(bad)
jnp
or
rep
push
adc
push
jno
xchg
and
cli
xor
loope
push
and
pop
cmps
cld
mov
jae
scas
dec
fidiv
bound
and
push
mov
mov
ins
not
call
pop
add
mov
gs
ret
fidivr
adc
fwait
retf
je
test
xchg
adc
cmp
dec
xor
out
(bad)
out
jecxz
dec
in
and
dec
addr16
pusha
mov
push
cwde
sub
(bad)
pop
je
xchg
dec
ret
sub
sub
in
fwait
rcl
int3
xor
inc
out
pop
lahf
cmp
jne
lock
or
jns
mov
sub
add
sbb
loop
sub
imul
aas
pop
push
into
push
sbb
mov
in
scas
mov
add
push
mov
popa
mov
jae
push
(bad)
int
fs
mov
(bad)
or
lahf
(bad)
in
sub
clc
cdq
dec
cmp
mov
jmp
ja
xor
ret
retf
scas
outs
neg
test
cmp
pop
add
jno
adc
xor
ds
int
pop
mov
popf
adc
ret
ins
mov
dec
jl
mov
mov
loopne
aaa
cwde
cmp
inc
fbld
out
lods
outs
fmul
cmp
icebp
scas
lock
sub
dec
mov
mov
xchg
mov
lock
aas
xchg
mov
push
stc
aaa
outs
in
pop
je
mov
xor
or
inc
push
adc
hlt
cld
and
jns
jmp
lea
cmp
and
idiv
inc
dec
xor
cld
jmp
repz
dec
push
mov
cmp
mov
mov
imul
cmc
out
out
daa
repnz
adc
movs
jae
xor
xor
adc
pushf
clc
sbb
jecxz
or
rol
jae
out
lea
lock
jae
adc
xchg
popa
inc
sbb
mov
das
mov
sbb
call
std
xor
outs
ret
scas
fistp
fnstenv
movsx
sub
push
inc
movs
out
dec
jnp
adc
mov
mov
aam
leave
mov
mov
mov
adc
jns
cdq
std
mov
sub
call
je
push
stc
in
dec
outs
xchg
dec
mov
xor
push
inc
xchg
mov
add
mov
movs
lea
sbb
in
sti
xchg
push
jne
sbb
jns
std
in
push
js
cmp
mov
nop
test
ret
cmp
gs
repz
movs
rcl
loope
das
(bad)
jmp
xchg
inc
xchg
add
jmp
lds
push
add
retf
push
mov
sbb
push
ret
pushf
mov
sub
mov
adc
mov
xchg
fsubp
cmp
cwde
clc
sbb
mov
pop
jecxz
popa
ins
inc
test
nop
aaa
pop
pop
or
pop
lods
jo
cmp
out
repnz
inc
(bad)
in
jl
ficom
test
push
push
int3
loope
int
sti
das
sub
jne
jmp
mov
mov
adc
jnp
pop
inc
add
adc
mov
pop
cmps
icebp
jmp
movs
pop
xor
repz
fwait
xchg
icebp
mov
repz
cmp
popf
les
xchg
jge
add
movs
cmp
mov
call
xchg
cmc
jnp
je
sahf
test
loopne
daa
jb
mov
call
and
data16
mov
dec
add
shl
ds
std
xchg
dec
dec
fisttp
(bad)
frstor
lahf
or
(bad)
ret
sbb
or
pop
sti
in
add
sbb
retf
call
adc
(bad)
mov
les
xor
jl
scas
or
xlat
rol
lds
(bad)
ficom
loope
cmps
sbb
icebp
fadd
mov
jl
or
enter
pushf
xchg
imul
xchg
mov
jae
push
loop
add
test
repz
cmp
nop
dec
xor
clc
leave
ret
push
retfw
sti
adc
mov
stc
push
lods
inc
add
and
fsubr
dec
jmp
lods
pop
imul
lods
add
fstp
jns
mov
fs
push
mov
movs
xchg
add
pop
loope
xor
in
stos
add
pop
aaa
adc
sbb
pop
pop
loop
loopne
push
xchg
pop
xchg
dec
and
and
dec
test
jg
jbe
xlat
mov
push
lods
push
jge
les
cdq
ret
pop
push
inc
xor
cmps
or
mov
jmp
push
push
sbb
add
adc
pop
mov
xchg
push
sub
push
pop
and
neg
sahf
adc
sub
out
mov
test
fmul
hlt
in
add
sub
ins
and
xchg
mov
dec
cli
dec
sub
sbb
cmp
sub
ficomp
mov
jae
rol
dec
scas
jns
xchg
xchg
hlt
mov
jecxz
pop
arpl
adc
push
adc
sbb
mov
inc
ret
ins
jmp
lock
mov
mov
lds
mov
rcr
dec
pop
(bad)
ja
cdq
xor
mov
mov
test
icebp
retf
test
into
cld
mov
push
jns
cmps
cmp
mov
cmp
(bad)
jno
add
sti
mov
jmp
pop
jg
dec
mov
(bad)
sub
xor
scas
ret
in
in
imul
cwde
add
daa
jle
push
dec
inc
pop
(bad)
in
fs
ss
or
rcr
fdivp
inc
or
bound
push
enter
sbb
mov
xlat
xchg
dec
out
adc
fidiv
xchg
push
fsubr
mov
push
dec
mov
fsubp
dec
sub
loop
(bad)
jnp
sbb
pop
movs
mov
mov
xchg
xchg
mov
sub
hlt
shl
jb
sub
dec
aaa
xor
dec
mov
jle
xchg
int
repnz
test
stos
jns
cs
test
call
test
push
and
mov
adc
je
xor
ins
ja
fdiv
int3
inc
(bad)
mov
stos
inc
mov
repz
mov
loope
xor
iret
inc
mov
das
sbb
add
cmp
je
pop
outs
mov
out
and
addr16
sub
div
push
fisttp
jmp
in
movnti
ins
popa
dec
out
(bad)
cmp
xor
cwde
fmul
mov
test
fucom
mov
gs
sbb
xor
sbb
inc
movs
sbb
cld
xor
jno
sahf
jb
jno
out
jb
xchg
retf
retf
sub
ficom
lods
xchg
push
mov
xor
iret
push
stos
xchg
sbb
sub
jle
xchg
lods
cld
retf
cmps
enter
ret
pop
add
nop
fwait
jl
xchg
idiv
stos
and
sbb
icebp
sub
ret
rcr
mov
arpl
cmps
loopne
or
fwait
daa
sbb
mov
inc
fistp
dec
cld
enter
and
sti
cli
jns
je
inc
fadd
xor
leave
add
outs
jge
add
je
ins
and
cs
jge
cmp
dec
ins
push
inc
mov
mov
adc
rol
add
jnp
xor
neg
neg
xchg
push
dec
cmp
outs
out
scas
jl
push
movs
sbb
int3
xchg
cmc
mov
lahf
xor
fistp
ja
neg
popa
xchg
dec
imul
push
sahf
movs
cld
jb
pop
dec
pop
push
sub
mov
(bad)
cmc
ins
aas
scas
mov
jle
xchg
adc
ret
loop
or
jns
vmovmskps
sti
and
mov
sbb
arpl
out
and
sub
and
cli
ret
pop
cmps
mov
or
ins
mov
mov
int
mov
ins
jo
push
dec
data16
xchg
scas
nop
xor
xchg
inc
xor
jmp
pop
out
push
sub
or
mov
and
js
mov
ins
stc
add
out
push
pop
movs
rcl
jae
ret
out
sub
add
out
xor
and
neg
push
push
pop
xlat
popa
stos
mov
push
out
call
bound
test
or
xor
cmp
jns
bound
out
adc
add
loope
inc
xchg
or
in
shl
test
lea
mov
fild
dec
jecxz
ret
lock
jmp
imul
psubq
inc
dec
lock
cmc
fwait
jg
xor
movs
adc
adc
xchg
sbb
sub
dec
pop
std
push
fist
pop
and
xor
dec
cmp
push
fucomip
test
mov
xor
(bad)
enter
ja
xor
inc
mov
fs
hlt
test
sub
dec
(bad)
and
outs
fwait
daa
call
ret
lock
jbe
gs
pusha
mov
scas
jb
fiadd
adc
mov
cdq
xor
xor
xor
jo
shl
add
ja
add
mov
adc
sbb
data16
mov
dec
jmp
jbe
jne
and
mov
sub
sbb
scas
inc
loopne
and
retf
mov
push
mov
es
sbb
imul
sbb
gs
std
mov
pusha
inc
(bad)
push
fwait
sbb
jl
xchg
mov
lock
push
out
adc
mov
cmp
sbb
push
add
retf
dec
imul
ret
sub
mov
cmp
xchg
nop
cmps
mov
enter
sub
test
inc
mov
(bad)
shr
adc
and
or
stos
not
out
jb
lods
push
je
push
xor
mov
pop
xchg
lds
xchg
stos
pop
mov
add
fstp
std
(bad)
shr
lods
cmp
lahf
test
out
popa
popa
sub
push
pop
cmp
mov
popf
xlat
pusha
inc
sbb
jp
lea
push
xlat
cwde
outs
jns
inc
add
pop
and
cmp
add
xchg
imul
out
movs
or
inc
xor
int3
inc
dec
jmp
cwde
xchg
fild
(bad)
cmp
pop
sahf
jle
push
sbb
cmps
add
xor
mov
push
xchg
xchg
int
xchg
mov
enter
cmp
mov
pop
test
sub
xor
inc
sbb
sbb
shl
jae
lods
xor
ins
imul
shl
mov
(bad)
push
cmc
jb
inc
fwait
movs
cmps
adc
jo
push
loop
jp
test
mov
inc
and
bound
aad
cmps
jp
adc
fmul
xchg
out
push
sbb
fwait
arpl
push
cs
vunpcklps
sbb
sbb
sbb
shr
sub
lock
aas
sti
int
int
push
test
or
push
add
adc
ja
sbb
push
fiadd
scas
and
adc
xor
lahf
dec
stc
shl
push
inc
dec
bound
mov
stos
shr
and
dec
fistp
jbe
out
mov
(bad)
push
mov
loope
loopne
cld
das
lock
mov
rcl
push
ins
or
outs
js
jne
adc
lahf
push
fwait
das
jns
dec
faddp
mov
xchg
cmp
mov
pop
div
inc
sub
push
movs
jne
or
scas
call
fidivr
mov
inc
mov
mov
xchg
inc
mov
sbb
push
mul
out
int
js
dec
pop
(bad)
(bad)
mov
vshufps
outs
addr16
js
sbb
and
jge
lods
sub
ins
(bad)
les
mov
and
shl
imul
imul
sbb
ucomiss
movs
jmp
punpckldq
jb
pop
js
sbb
jbe
inc
ret
test
push
sahf
jecxz
sbb
rcr
xor
call
mov
lds
and
push
in
call
arpl
ins
inc
push
and
xor
xor
scas
rcl
imul
fmul
mov
adc
cmp
fbld
jb
das
arpl
cmp
inc
int
call
ret
cs
sub
test
out
xchg
fimul
sub
movs
inc
pop
or
pop
and
lock
push
sbb
jo
and
adc
jl
and
test
xor
icebp
ret
imul
jmp
cwde
mov
ja
xor
stos
outs
cs
mov
and
xchg
test
outs
cmps
std
jne
in
fldenv
sbb
sti
jnp
stc
xor
icebp
mov
sbb
dec
inc
cmp
mov
shl
add
pop
mov
aaa
mov
inc
out
int3
dec
sub
jecxz
aas
xchg
je
pop
bound
popf
das
inc
cmp
pop
or
mov
mov
sahf
icebp
shl
(bad)
pop
mov
or
fptan
dec
mov
xor
push
ja
fwait
dec
adc
cmc
push
scas
sbb
fsub
or
jmp
shr
in
and
pop
jg
mov
dec
sub
loope
nop
stos
push
(bad)
dec
xor
mov
or
int3
fmul
inc
rcl
jmp
pop
stos
mov
repnz
sbb
outs
loope
fninit
shl
sub
push
or
mov
bound
ins
pop
aas
dec
stos
dec
gs
sbb
jp
pushf
(bad)
fisubr
js
aad
daa
add
stos
push
sar
pop
lahf
dec
iret
sub
repz
push
jae
add
jp
sbb
fs
stc
pop
ins
int
stos
mov
ins
mov
dec
jbe
mov
mov
xlat
xlat
sub
int3
jne
paddsw
inc
mov
mov
pop
fnstcw
pushf
xor
retf
ss
mov
mov
out
mov
fcom
mov
jecxz
aas
std
daa
outs
cdq
arpl
dec
cmp
mov
icebp
pop
cwde
popa
jo
cmps
movs
loopne
xor
rcl
jmp
sub
repnz
rcl
out
fdiv
repnz
pop
mov
mul
sub
mov
jg
shl
mov
movs
scas
mov
jmp
popa
pop
sub
sbb
(bad)
ror
lods
hlt
mov
sub
icebp
outs
clc
dec
mov
hlt
mov
cmc
cmp
jg
outs
lahf
xor
sti
inc
add
jno
dec
cmp
cmp
retf
push
jbe
arpl
mov
push
xchg
rcr
cmp
sub
(bad)
cmp
push
adc
aad
dec
jnp
sbb
push
inc
rcr
cmp
fmul
push
repz
or
xlat
cmp
mov
rcl
or
sbb
xchg
cmp
push
dec
std
push
push
push
and
je
stos
lahf
sbb
add
xor
sbb
cdq
jecxz
popa
dec
inc
js
mov
gs
aas
jae
and
and
out
or
push
shl
lock
xor
cwde
(bad)
mov
in
fstp
inc
daa
jns
shl
cmp
cmp
sub
out
popa
js
adc
lahf
and
(bad)
shr
cmps
ds
cs
rol
and
fld
xchg
mov
sbb
mov
jae
xor
lods
xchg
popf
and
xor
sbb
gs
sub
test
cs
cmp
test
jmp
pop
mov
mov
call
addr16
xor
enter
je
lds
ins
sahf
and
inc
jo
fwait
jecxz
cdq
ficom
(bad)
and
sbb
inc
push
inc
pop
push
std
sbb
nop
data16
jne
and
xor
ficomp
or
fdiv
js
mov
sbb
je
sbb
mov
dec
call
adc
xor
gs
dec
jnp
add
and
jbe
imul
jae
mov
inc
add
push
ret
push
ficomp
ja
pop
loopne
not
xchg
mov
cmp
js
and
or
push
jp
inc
jbe
(bad)
and
(bad)
int
adc
cmc
cmps
jg
pop
loop
in
xor
test
ss
mov
scas
adc
dec
sbb
mov
sub
ror
adc
enter
xor
dec
out
xor
out
lods
jb
push
xchg
les
mov
outs
or
fild
gs
stos
add
inc
sti
mov
xor
jp
add
mov
popa
add
mov
fisubr
add
dec
mov
js
push
aad
cli
pop
cmp
ficomp
mov
push
xor
loope
rol
sbb
and
inc
f2xm1
jno
pop
push
inc
scas
mov
sbb
pop
into
push
sbb
sbb
xchg
or
xor
test
xchg
shr
ja
popa
or
shl
mov
sldt
cmp
(bad)
xor
jb
(bad)
fmul
into
dec
icebp
or
push
mov
push
pop
inc
sbb
add
add
push
xchg
cdq
add
out
cmps
sbb
jae
sbb
sar
movs
out
cld
mov
dec
mov
sub
es
jmp
cmp
out
xchg
mov
retf
mov
ss
jnp
fisttp
repnz
cmp
push
cmp
popa
cld
sub
xchg
loopne
mov
xor
adc
xrelease
adc
fisub
dec
mov
adc
dec
mov
mov
je
and
mov
jb
inc
push
jbe
cmp
cmp
cmp
mov
jecxz
je
clc
mov
xor
mov
push
sbb
(bad)
mov
or
and
mov
xor
mov
xchg
add
push
pop
fsubr
aaa
mov
push
(bad)
div
and
test
or
push
pop
lock
push
mov
and
cwde
jbe
mov
fcomi
sahf
retf
dec
fild
loop
cs
mov
or
pop
test
xor
adc
jae
call
not
push
inc
int
jns
xchg
test
xchg
and
sbb
inc
ins
push
mov
dec
lea
jle
add
ret
out
mov
test
push
mov
jae
dec
adc
bound
mov
std
sub
(bad)
or
call
push
dec
pusha
add
cmp
aas
jmp
out
stos
adc
xor
sub
imul
mov
mov
jno
sar
enter
jb
xchg
test
mov
nop
pop
jecxz
pop
call
int3
int3
ins
addr16
mov
pop
je
mov
cld
mov
add
enter
lods
inc
clc
(bad)
adc
neg
and
loop
mov
add
popa
mov
fistp
shr
or
dec
dec
xchg
adc
out
data16
adc
test
push
fadd
sbb
push
sbb
pushf
in
push
ret
shl
cmp
mov
sub
cmp
push
mov
into
mov
ret
addr16
or
push
int
xor
inc
mov
sub
lds
movs
int
or
out
or
jmp
out
cmp
mov
push
test
adc
test
and
pop
xchg
scas
arpl
pop
ja
push
scas
cmp
dec
mov
enter
cs
add
sahf
sbb
mov
loope
rcr
in
push
pop
lea
jle
outs
repz
xchg
xchg
stos
xor
or
mov
rcr
pop
inc
sub
imul
into
sub
cmps
scas
arpl
inc
jecxz
push
cld
leave
sbb
pop
push
int
lds
dec
stos
sbb
shl
pop
inc
es
pop
ss
mov
imul
gs
fisub
lock
or
int3
and
les
mov
(bad)
and
jmp
daa
(bad)
icebp
mov
jb
sbb
xchg
hlt
and
adc
daa
and
and
sar
call
div
inc
std
(bad)
call
fucomp
jne
xchg
mov
xchg
lods
mov
(bad)
shl
cli
push
das
aam
not
mov
dec
outs
shr
dec
repnz
fisttp
les
mov
fsubr
sub
loop
pop
adc
cs
mov
push
sbb
adc
jmp
mov
aad
pop
test
imul
mov
cmp
pop
push
prefetch
hlt
out
mov
lock
adc
push
push
xchg
jnp
ret
cmp
xor
ins
push
lds
cli
xchg
imul
or
mov
inc
test
pop
dec
inc
xchg
mov
cli
sub
repnz
cmp
call
cmp
mov
dec
sbb
inc
sub
pop
dec
ins
imul
sub
or
lock
mov
xor
mov
mov
xor
cmps
int3
push
cwde
add
sub
stos
add
xlat
aaa
in
push
inc
loope
mov
shl
stos
mov
repnz
or
adc
and
push
fdivr
repnz
iret
sub
add
movs
mov
ins
sub
ret
xchg
mov
es
not
pop
xor
ret
or
in
sub
or
push
popa
push
and
jno
dec
or
xchg
pop
dec
fstp
ss
xlat
inc
scas
cmp
dec
inc
cmp
out
and
jae
sbb
jmp
ja
xchg
xchg
sti
sub
test
mov
push
outs
or
outs
or
stos
mov
dec
mov
sub
pushf
loopne
inc
test
adc
push
xchg
push
xchg
inc
out
outs
sub
mov
movs
loop
xchg
mov
sbb
cwde
push
clc
inc
mov
or
push
ss
xchg
fsubrp
ins
rol
jno
fisub
jge
jmp
sbb
lar
xchg
fdiv
imul
daa
aaa
test
pop
or
xor
call
sbb
add
out
jmp
mov
addr16
lea
popa
icebp
loopne
test
fs
xchg
cwde
iret
mov
push
jo
lods
jns
stos
std
(bad)
or
out
push
lods
stos
inc
mov
mov
out
in
stc
and
push
adc
xchg
dec
stos
and
int3
call
pop
shl
sub
mov
push
gs
and
shr
fisttp
(bad)
cmp
inc
xor
mov
xor
outs
lods
xchg
sahf
(bad)
loopne
das
sbb
mov
in
in
call
pop
inc
add
(bad)
push
push
into
pop
sub
adc
out
aas
dec
repz
adc
cmps
jnp
cmc
fisttp
and
dec
(bad)
(bad)
dec
out
mov
shr
or
out
sub
add
mov
popf
outs
and
sub
sahf
fwait
add
(bad)
test
mov
fsubr
dec
sar
dec
xchg
int
pushf
sti
add
rcl
lock
and
outs
jns
fstp
dec
test
test
bound
mov
(bad)
fild
dec
jmp
cdq
mov
jne
aam
daa
cmps
dec
(bad)
and
push
push
dec
mov
adc
call
cmp
push
push
sub
mov
ret
xchg
and
test
les
pop
pop
popf
xchg
mov
push
xchg
dec
mov
rcl
adc
je
shl
dec
add
mul
jno
rcl
inc
retf
stos
cmp
jle
pop
add
adc
jl
mov
xchg
out
mov
and
(bad)
imul
mov
pop
not
nop
mov
dec
(bad)
daa
stc
lock
outs
(bad)
add
cmp
jmp
sbb
inc
shr
popa
int3
cdq
xchg
xchg
xchg
mov
jge
jbe
fdivr
aad
jno
rcl
adc
or
loope
sub
push
push
fwait
adc
push
loopne
mov
push
sub
mov
imul
or
scas
rcl
lock
dec
pop
data16
cmp
hlt
mov
pop
and
stos
xor
mov
mov
pop
outs
and
cmp
idiv
xlat
push
ror
test
cmp
mov
push
aad
scas
sahf
xor
(bad)
ins
sbb
imul
jmp
outs
xor
sar
jl
push
add
xchg
xchg
pop
cmp
fsub
ret
into
js
mov
and
std
leave
test
aad
jo
ja
cmovp
dec
pushf
clc
xor
pop
nop
das
stc
hlt
retf
jb
xor
xchg
xchg
push
sub
mov
jno
add
pop
cmp
dec
cs
fucomp
mov
sub
sbb
adc
retf
jmp
xchg
mov
stc
mov
test
push
xor
mov
inc
fadd
inc
(bad)
data16
mov
fst
cmp
push
pop
xchg
mov
add
or
sub
xor
cmp
mov
add
stc
sbb
ror
jbe
pushf
mov
jge
(bad)
jne
gs
cmp
ret
into
add
ficomp
int
sub
and
cmps
push
lods
sbb
xchg
fwait
sub
daa
mov
fstp
pop
cmc
nop
ins
das
sub
xchg
pop
scas
and
cmc
xchg
fst
sub
imul
shl
rcr
dec
jb
mov
das
nop
mov
mov
jmp
out
ja
and
jmp
push
ins
outs
xor
sti
jecxz
jl
movs
or
sub
mov
push
lock
sub
scas
mov
cmp
push
imul
inc
mov
jno
fbld
inc
or
iret
js
add
add
inc
je
test
dec
(bad)
mov
sbb
sub
loop
imul
pop
out
stos
fidiv
sbb
push
inc
aaa
sahf
fistp
mov
sub
ja
inc
outs
pushf
add
jmp
xchg
add
aas
cwde
mov
pop
shl
dec
mov
arpl
aas
push
cdq
ds
add
lods
fwait
inc
sar
and
pop
shl
cmc
dec
in
mov
test
push
xor
(bad)
pop
sub
pop
call
retf
cmp
mov
xchg
fild
in
addr16
aam
ds
adc
inc
dec
adc
mov
mov
lahf
dec
jns
pusha
pop
sbb
lods
push
mov
fnstcw
pop
mov
xor
mov
in
cmp
pop
idiv
xchg
mov
retf
movs
mov
pop
adc
and
hlt
test
push
outs
push
mov
mov
les
sub
jmp
push
cld
ret
fdivr
push
or
out
imul
lock
iret
not
mov
mov
retf
repz
jae
movs
aaa
cld
aad
or
push
pop
cs
mov
mov
mov
(bad)
cmp
xor
(bad)
mov
lds
fst
xor
push
jno
aas
mov
xchg
dec
or
inc
dec
add
xchg
pushf
stos
or
sub
lahf
sbb
push
ds
mov
and
aam
fxch
movs
(bad)
fbstp
sar
pop
cmp
push
push
mov
add
dec
push
ins
jns
sub
push
ins
and
stos
adc
cmp
jno
sbb
cmp
pop
mov
jbe
(bad)
cli
pusha
das
xchg
inc
shl
mul
aad
add
xchg
and
outs
js
sbb
rol
xor
cld
shr
mov
inc
into
addr16
aas
aaa
es
or
jo
add
scas
jp
push
and
sub
inc
ret
xchg
dec
mov
ds
enter
sub
(bad)
in
test
loope
lds
jl
test
ins
xor
imul
add
leave
retf
jb
mov
add
push
cs
out
mov
into
enter
lahf
imul
pop
iret
jle
xchg
or
xchg
and
and
mov
push
fidivr
or
xor
lods
add
fmul
sbb
ror
adc
shl
fs
bound
xchg
xor
out
ds
mov
test
adc
rcl
das
or
mov
pop
or
push
(bad)
cmp
dec
sbb
fistp
inc
mov
dec
inc
loope
imul
cmp
ss
fidivr
fiadd
jbe
pop
sbb
int3
outs
test
idiv
(bad)
call
js
push
movs
int
mov
or
cmps
imul
ud0
es
jae
popa
jne
inc
xor
int3
add
out
sti
out
je
cwde
int
push
sbb
ficomp
dec
call
shl
add
das
xor
pop
test
pushf
popf
sar
push
in
or
cmp
sbb
dec
push
scas
sub
cld
and
mov
imul
inc
inc
popa
cmp
or
in
push
ds
push
test
mov
add
in
cmps
mov
and
sub
mov
mov
je
pusha
lock
pop
mov
imul
fcomp
out
mov
mov
dec
mov
sti
out
xor
sbb
inc
pop
add
jb
(bad)
inc
out
mov
popf
(bad)
loopne
push
cmc
lods
push
sbb
pop
gs
jno
and
shl
add
iret
in
jmp
int3
adc
clc
outs
movs
dec
(bad)
shl
rcr
mov
ret
adc
bound
sub
repnz
push
arpl
mov
inc
shr
and
add
and
ja
xchg
aaa
in
and
movs
xchg
lahf
jne
cli
or
cmps
outs
mov
mov
mov
pop
in
jo
std
pushf
xchg
aad
xor
enter
je
ror
sbb
and
mov
mov
pop
and
mov
pop
pop
sbb
mov
add
xchg
pop
ds
jns
daa
in
fbstp
sbb
cli
ja
loop
je
ret
or
out
sub
push
(bad)
fcomp
xor
xchg
je
push
mov
jno
xor
(bad)
hlt
in
jecxz
xlat
jne
(bad)
push
xlat
loop
aad
pop
(bad)
push
add
adc
xor
adc
dec
bound
leave
cmp
loope
sahf
or
inc
jne
call
and
fwait
mov
popf
bnd
pop
int
dec
xlat
fyl2x
in
sub
push
int3
jmp
mov
repnz
inc
xchg
pusha
sub
xor
add
imul
inc
sub
or
push
inc
pop
addr16
and
mov
jecxz
mov
ret
jae
(bad)
mov
xchg
lds
and
push
jne
jno
js
mov
mov
fisttp
int
popw
call
sub
jae
cmp
call
mov
loop
sbb
hlt
div
aad
test
mov
inc
ja
add
sbb
aam
test
popf
cdq
std
push
mov
mov
push
mov
cmp
jae
ret
pop
sahf
dec
jecxz
sub
(bad)
(bad)
shr
aam
and
(bad)
adc
jl
mov
xor
and
shr
or
ins
or
jge
mov
cmp
les
sbb
pop
xchg
mov
hlt
jle
dec
mov
inc
sti
inc
and
mov
out
jecxz
cmp
lahf
cmps
or
jmp
mov
xchg
stc
rol
xchg
jne
shl
add
out
in
push
cmp
ror
jmp
cmp
(bad)
stos
repz
cmp
pusha
aaa
repz
outs
jge
fisubr
jecxz
ret
cmp
cli
adc
clc
mov
das
pop
hlt
ret
jle
loope
inc
sahf
sbb
mov
push
dec
out
(bad)
je
fcom
aaa
cmps
rcr
popa
and
pop
ins
jno
loope
das
retf
sub
mov
cmp
out
pop
jl
xchg
mov
fs
imul
sub
fdivr
outs
pop
sub
jno
mov
shl
ror
data16
sahf
adc
inc
nop
xor
adc
pop
out
(bad)
pop
icebp
push
sbb
lahf
retf
jo
test
push
jns
adc
cwde
push
and
mov
ret
lea
xor
xchg
cdq
out
or
adc
fcmovne
mov
inc
add
hlt
sar
jnp
add
adc
xor
cmc
fisubr
int3
rcl
mov
jp
outs
jmp
int
mov
movsx
movs
rcr
pop
jne
mov
sbb
shl
mov
adc
jbe
xor
scas
pop
mov
jnp
outs
adc
push
js
loope
cli
push
ret
lahf
dec
scas
mov
dec
cli
shl
and
dec
mov
cdq
nop
fst
test
shl
xchg
std
in
fistp
inc
dec
add
add
test
movs
push
aas
loope
iret
jbe
out
scas
movs
lods
and
fisttp
rol
mov
retf
aas
push
or
adc
xor
test
movs
sbb
jo
cwde
cdq
add
sub
jno
add
jae
jnp
ins
mov
or
and
stos
cmp
xchg
ins
fsub
adc
vcvttpd2dq
push
popf
cmp
adc
shl
out
sub
dec
lods
(bad)
imul
out
sbb
ffreep
and
sub
jmp
sub
xor
repnz
sub
xchg
jmp
std
push
jae
mov
or
(bad)
sti
or
fadd
or
jmp
ins
sbb
xchg
mov
in
inc
fdivr
in
xchg
or
add
ficom
lods
mov
scas
pop
xchg
or
fst
xor
mov
inc
sub
push
fadd
inc
jmp
aad
aam
inc
cmp
cld
jb
mov
mov
test
mov
outs
inc
and
push
inc
retf
xchg
fdivr
fwait
push
fs
and
mov
imul
shr
jmp
jmp
lods
add
mov
xor
cmp
mov
push
xchg
pop
adc
jnp
jmp
add
(bad)
xchg
or
pop
dec
lock
or
loop
imul
xchg
out
and
jecxz
out
jae
popf
jbe
jne
sub
stos
(bad)
out
test
icebp
inc
fmul
jle
sub
and
stos
sbb
jl
test
bnd
in
popa
add
add
outs
adc
mov
cmc
adc
add
mov
dec
in
test
jmp
mov
mov
daa
(bad)
mov
dec
adc
jmp
xchg
sbb
xchg
ret
xchg
add
(bad)
push
mov
cmp
fst
scas
dec
rcr
ret
dec
enter
mov
cwde
cmp
sub
out
stos
stos
xchg
or
push
jle
sub
ins
xlat
out
add
sub
cmp
pop
mov
test
clc
push
fldcw
or
ds
(bad)
leave
push
dec
repnz
sbb
and
push
or
test
test
inc
jnp
mov
out
sti
scas
enter
cmp
aam
mov
int
xchg
in
mov
aaa
xor
jecxz
jns
in
add
or
jp
adc
aam
mov
imul
lea
cmp
in
icebp
rcr
data16
inc
add
aad
jl
aam
out
jae
aas
push
cmp
mov
cmc
dec
in
cmp
pop
push
je
nop
out
ret
int
popa
call
push
into
stc
scas
or
dec
mov
add
dec
or
mov
pop
or
(bad)
scas
psubsw
xor
lea
push
push
adc
fdivr
loope
(bad)
cmp
push
jg
clc
or
xchg
icebp
cmps
sub
jo
gs
mov
and
lahf
adc
dec
inc
out
movs
cmp
cdq
inc
inc
sbb
xchg
ds
push
push
movs
xor
add
jo
out
push
scas
mov
mov
push
int
(bad)
sbb
and
sbb
je
cmp
out
jg
out
ss
sub
push
sub
fwait
push
into
cmp
nop
dec
add
test
push
add
nop
inc
or
jne
adc
pop
fst
nop
ret
pop
add
int3
out
pushf
popf
jo
(bad)
cmp
xor
jne
test
lea
pop
loopne
sub
lahf
jnp
sti
bound
or
add
push
mov
jg
mov
pusha
sbb
pop
(bad)
bound
add
data16
xchg
pop
rcr
(bad)
push
xor
out
(bad)
cli
cmp
push
das
dec
cmps
rol
pop
mov
test
push
test
adc
cmps
push
pop
dec
lgs
pop
movs
pandn
leave
lock
fs
and
rcr
or
pop
xchg
push
jg
fistp
xchg
jae
ror
jmp
xchg
scas
push
into
jns
lea
xchg
aas
xchg
iret
push
aam
out
dec
mov
(bad)
cdq
adc
pop
mov
scas
or
push
sar
(bad)
jns
sar
dec
mov
sbb
(bad)
shl
(bad)
in
pop
xchg
es
gs
pop
scas
push
jecxz
mov
sbb
pop
add
mov
and
adc
and
(bad)
(bad)
retf
inc
jnp
jg
test
jle
add
pop
mov
add
mov
es
out
sub
hlt
dec
outs
add
fninit
cmps
xor
or
dec
arpl
imul
and
into
push
sbb
gs
mov
mov
sahf
mov
pop
xor
mov
xchg
sbb
mov
add
dec
jns
sub
stos
add
fsub
inc
out
aam
retf
adc
jmp
inc
fstp
or
arpl
es
push
mov
xor
clc
addr16
pop
mov
dec
enter
retf
xchg
inc
sbb
hlt
inc
imul
in
and
jbe
jle
jmp
mov
pushf
inc
div
out
mov
sbb
adc
fdiv
pop
cmp
lods
jle
mov
adc
bound
cmc
adc
ja
hlt
(bad)
aam
mov
xor
xchg
lea
sti
pop
xor
out
pop
mov
das
loope
jle
call
sbb
add
xchg
stos
dec
int
or
dec
cmp
dec
mov
movs
add
and
fidiv
or
iret
fldenv
test
pminub
and
mov
or
movs
pop
cmp
push
sti
(bad)
pop
aas
in
and
std
loop
inc
and
loope
stos
lahf
adc
pop
add
arpl
inc
mov
mov
aaa
jecxz
add
sub
jmp
and
mov
push
mov
movs
cdq
pusha
sbb
int3
add
pusha
dec
fnstsw
sbb
inc
sbb
out
xchg
fs
and
add
outs
inc
mov
addr16
pop
pop
daa
inc
ins
jmp
cmp
jo
inc
out
jmp
into
repnz
add
mov
cs
xor
add
jl
mov
jne
mov
aas
rcr
cmp
mov
xchg
enter
xchg
xchg
and
jne
int3
rcr
jo
jbe
loope
ror
cmp
push
bound
add
adc
sbb
dec
mov
mov
test
call
xchg
ror
loope
sbb
jmp
mov
pop
jno
mov
xor
iret
adc
mov
xor
je
fiadd
(bad)
pop
push
fild
ins
iret
inc
jbe
mov
mov
js
add
adc
pop
stos
nop
mov
push
mov
mov
dec
xchg
cmp
push
in
das
xor
push
sbb
mov
xchg
sub
cld
mov
(bad)
push
push
mov
xchg
addr16
js
fstp
jmp
in
jmp
leave
pop
xor
mov
fidiv
push
push
rcl
sbb
shr
mov
or
xor
mov
scas
mov
cmp
and
xor
xchg
jecxz
push
xor
mov
das
sbb
rcl
and
pop
inc
sub
les
add
inc
jno
jg
enter
in
jnp
add
push
outs
out
int3
push
pushf
dec
push
stos
mov
mov
dec
mov
and
sbb
sub
retf
push
int3
sub
dec
and
pop
adc
jnp
sbb
les
pop
aad
and
out
pop
das
jp
sbb
ja
mov
popf
fcmovne
jnp
pop
fmul
or
mov
jle
arpl
div
shr
xor
(bad)
sbb
imul
push
xor
imul
icebp
inc
fsubr
outs
dec
mov
pop
xchg
mov
cmp
cmps
lahf
popf
sub
mov
call
inc
xor
push
cmp
dec
data16
mov
repnz
or
sub
sbb
jmp
je
jecxz
daa
shr
das
ins
aam
sbb
sbb
pusha
aam
sahf
lahf
adc
out
sub
ins
aas
fcom
sub
dec
iret
std
xlat
mov
fistp
sbb
lods
push
mov
out
enter
je
mov
push
xchg
inc
stos
pop
mov
dec
sub
stos
bound
or
adc
xor
xchg
cmps
nop
retf
cmp
sub
dec
aad
sti
xor
call
pop
pop
call
seta
outs
jl
(bad)
pop
mov
push
mov
jmp
aas
cmp
imul
dec
mov
cmps
lahf
xchg
leave
enter
shr
push
cmc
in
dec
sti
cld
dec
add
fmul
scas
dec
and
aas
jno
push
aam
das
push
ja
bound
sub
push
fisttp
or
add
push
add
loopne
add
movs
or
add
enter
outs
das
mov
rol
xchg
inc
jbe
mov
lods
movs
fcmove
jno
pop
or
fwait
mov
mov
push
lds
xor
shl
andps
popa
das
fistp
push
fs
loope
inc
repnz
cmp
push
jae
(bad)
hlt
adc
lock
dec
sub
test
dec
and
cmc
push
mov
ja
nop
and
fimul
bound
icebp
xchg
aaa
neg
pop
inc
pop
push
imul
mov
cmp
xor
mov
and
sti
push
jbe
adc
add
xor
adc
outs
bound
popa
sub
in
aaa
dec
in
shl
xor
mov
rcr
sub
sbb
fldenv
les
push
push
rol
movs
sub
cld
aam
lock
and
outs
dec
xor
cmp
xor
jb
push
jg
mov
cmp
jmp
out
aas
data16
jecxz
xor
jnp
mov
xor
pop
(bad)
mov
adc
sbb
stc
inc
jmp
into
mov
sub
mov
sbb
ss
sub
pop
xor
push
sbb
cmps
adc
cmp
into
inc
sbb
adc
pusha
cmp
xchg
xchg
jp
adc
mov
xchg
pop
int3
ror
(bad)
push
cwde
(bad)
jnp
fild
pop
sbb
jno
ret
shl
ins
ja
xchg
aad
pushw
dec
int3
mov
popa
imul
mov
mov
or
mov
push
aas
(bad)
sub
in
shl
or
ror
mov
(bad)
pop
xor
les
push
xchg
cdq
sbb
dec
call
pop
sbb
cmp
push
jmp
adc
mov
sub
push
mov
lods
ins
imul
(bad)
push
xchg
call
fs
xor
or
dec
jno
int3
ja
adc
pop
xor
mov
jns
call
into
out
popa
and
mov
sbb
xor
dec
lock
es
mov
adc
imul
pop
call
mov
fimul
lods
sbb
ficomp
aam
(bad)
xor
les
adc
pushf
adc
je
fimul
xchg
loopne
pop
or
mov
and
jmp
aaa
retf
retf
jnp
jno
pop
cmc
fist
and
(bad)
das
fimul
pushf
lea
mov
dec
imul
data16
dec
ss
dec
sbb
(bad)
rcl
aad
push
out
in
pop
pop
and
and
xchg
hlt
and
and
in
mov
mov
loopne
ss
enter
jb
push
fs
push
inc
fcomp
es
test
dec
inc
stos
cmp
inc
jg
fiadd
adc
jns
pop
cmp
adc
scas
jne
push
cmp
dec
je
cmp
cmp
fidiv
jl
loope
jno
mov
or
fdivr
call
jno
mov
in
ins
out
and
clc
je
test
jbe
in
add
xchg
or
pop
mov
xlat
adc
xchg
dec
nop
shr
dec
pop
add
push
inc
out
inc
mov
mov
data16
sbb
jno
cmp
bound
(bad)
xor
scas
aaa
sbb
dec
scas
sub
mov
mov
pop
xchg
mov
mov
jmp
sar
daa
mov
(bad)
mov
test
sbb
jno
sub
sahf
mov
hlt
jge
(bad)
ins
loopne
sbb
lock
sub
mov
add
imul
cmp
sbb
out
sbb
jne
inc
mov
cmp
int3
fsub
mov
mov
call
repnz
aas
sub
and
xchg
test
dec
add
xor
lods
mov
jo
(bad)
xor
leave
mov
and
ja
or
int
jg
lahf
add
ja
je
lods
addr16
lods
adc
sar
xchg
rcl
inc
pushf
pop
and
mov
imul
int
xor
mov
ror
ins
mov
sbb
popa
pop
sub
or
xlat
pushf
jns
rol
shl
push
sub
xchg
jmp
pushf
mov
adc
sbb
fadd
push
pusha
sub
mov
mov
cmps
push
inc
out
into
inc
je
cld
pop
dec
sbb
cmps
movs
adc
clc
pop
mov
rol
or
scas
shl
cmp
pop
loopne
imul
and
jb
adc
inc
mov
mov
dec
sbb
xor
addr16
or
lea
test
lahf
loope
mov
and
xchg
and
das
loop
adc
mov
mov
xor
mov
pop
outs
lahf
ds
fwait
xchg
test
mov
out
ret
out
xchg
icebp
les
and
gs
mov
mov
popa
clc
sub
lods
sbb
sbb
mov
aas
mov
(bad)
call
shl
push
push
mov
outs
cmp
jmp
xlat
stos
push
mov
cs
ficom
xchg
inc
sub
jecxz
out
mov
mov
mov
xchg
fldcw
mov
jmp
fbld
rcl
xchg
idiv
and
(bad)
jnp
push
push
pop
sub
shl
out
fiadd
arpl
(bad)
sbb
xchg
jecxz
cmp
dec
test
mov
and
mov
xchg
outs
pop
sbb
mov
addr16
imul
(bad)
leave
xor
fsubr
sbb
fstp
mov
ja
out
push
movs
scas
(bad)
xor
(bad)
lock
mov
fs
mov
outs
repnz
push
fld
repz
inc
push
pushf
mov
int3
stos
push
xchg
push
stos
neg
add
inc
ins
xlat
(bad)
sub
in
sbb
jo
sar
or
push
bound
dec
cs
fisubr
clc
mov
pop
sbb
ss
sar
xor
sbb
pop
push
fldenv
adc
mov
adc
jmp
mov
jne
(bad)
jge
pop
pop
mov
into
fisttp
inc
mov
xchg
push
push
pop
mov
aam
sahf
shl
mov
xchg
dec
fidivr
stc
ret
pop
push
and
out
stos
pop
xchg
xor
clc
gs
xchg
ins
jp
pop
aaa
mov
mov
repnz
pop
dec
inc
ret
cli
and
dec
in
mov
ficom
sub
stos
bound
add
clc
outs
mov
das
(bad)
mov
xchg
or
fwait
inc
dec
pop
push
mov
out
jle
repz
sbb
jecxz
push
add
add
movs
dec
fld
jp
int3
adc
push
cdq
shl
addr16
sbb
(bad)
in
add
retf
push
jle
aad
arpl
and
ud0
loopne
mov
push
push
cdq
loope
fnsave
stos
sbb
out
adc
cwde
push
ret
jge
fadd
and
xor
jnp
inc
ret
inc
fwait
movs
fsubr
leave
ja
lea
adc
inc
mov
pop
nop
cmp
adc
xchg
jae
lahf
jecxz
push
cmps
scas
pop
mov
mov
push
fisttp
movq
test
mov
shl
mov
rcr
cli
jg
xchg
cmp
scas
xchg
xor
(bad)
jno
sub
and
aaa
rcr
(bad)
arpl
xchg
or
push
ret
in
test
pop
mov
jae
inc
ja
in
push
mov
and
inc
sbb
leave
fdivr
shl
fild
jb
test
or
add
test
(bad)
dec
xor
pop
scas
fdiv
enter
or
xchg
stos
pop
sub
push
adc
sub
mov
lock
xchg
(bad)
xchg
imul
sub
jl
and
dec
jmp
(bad)
sbb
mov
or
in
aam
stos
mov
ds
ror
xor
outs
add
ret
xchg
sub
or
leave
mov
sub
sbb
ins
mov
pop
xchg
xor
dec
push
pushf
sbb
div
pop
(bad)
ins
pop
pop
fld
mov
jmp
fmul
rcr
imul
jecxz
push
sbb
loopne
rol
cmp
push
dec
ror
stc
add
popa
mov
xchg
jns
jg
jo
sbb
add
jmp
jbe
mov
cmp
rep
adc
out
pop
in
pop
and
retf
pop
add
cli
movs
call
div
xchg
xor
(bad)
mov
outs
fidivr
ret
lds
outs
rcr
sar
add
mov
hlt
das
push
or
jle
xor
out
imul
xchg
mov
imul
test
fld
jmp
inc
outs
rcr
pop
sbb
movs
pop
loope
(bad)
lods
cmp
(bad)
push
sub
jb
sbb
xor
push
lods
jmp
ss
cmp
adc
adc
push
popf
sbb
cdq
xchg
jmp
cmp
mov
xchg
nop
sub
loopne
psraw
mov
push
or
sub
mov
call
mov
addr16
sub
pop
pop
jmp
cmps
repnz
xor
ja
hlt
push
shl
xchg
or
clc
mov
aam
dec
sub
popf
in
dec
xchg
into
mov
in
xchg
stos
sub
dec
inc
mov
int3
dec
sahf
pop
adc
lds
adc
mov
dec
sahf
add
imul
or
ror
add
(bad)
cmp
in
sub
call
jo
pop
loopne
pop
jl
rcl
sub
addr16
mov
mov
mov
xchg
rcr
cld
in
fmulp
jbe
and
jge
push
mov
int
push
rol
sbb
dec
xlat
ret
mov
loopne
(bad)
xor
inc
cmp
loopne
jnp
mov
aam
cld
add
fdiv
cmp
push
cli
lods
cmps
or
jmp
retf
(bad)
(bad)
mov
jmp
jmp
aas
sbb
jp
in
(bad)
(bad)
sub
movs
and
mov
push
movs
(bad)
vpunpckhwd
adc
jl
pushf
enter
ficomp
pusha
mov
adc
stos
scas
rcr
outs
and
pop
shl
pop
leave
sbb
push
inc
movs
or
out
adc
pop
sbb
loop
fdivr
sub
mov
call
push
test
call
xor
mov
out
das
dec
std
xchg
hlt
mov
aaa
jnp
and
jns
dec
xlat
movs
fld
mov
or
xchg
mov
cs
fnstcw
es
jns
cmp
cmp
sbb
les
cmp
vpmaxub
repz
xchg
xchg
xchg
sti
mov
mov
fwait
pop
ror
sub
outs
mov
ss
nop
xchg
inc
pop
ss
push
inc
inc
sub
jg
add
les
or
jle
adc
jge
aad
ins
(bad)
sar
cmp
lods
iret
adc
and
addr16
(bad)
fnclex
mov
fwait
mov
xchg
lea
dec
mov
je
aad
das
dec
jp
lods
mov
mov
and
es
je
out
inc
adc
dec
div
(bad)
add
mov
inc
rol
fcomp
sbb
mov
aas
mov
sbb
jb
and
ja
pushf
cmp
mov
clc
movs
push
xchg
dec
adc
pop
pusha
inc
add
mov
or
fld
sub
ret
pop
mov
gs
inc
xor
push
pusha
(bad)
outs
shl
add
int3
cmp
mov
loope
enter
test
cmp
fnsave
xor
fld
jo
adc
(bad)
test
adc
jo
lods
cmp
(bad)
pop
hlt
push
imul
ficomp
(bad)
movs
scas
outs
sub
sbb
popf
xchg
scas
aam
adc
retf
add
aaa
or
adc
sbb
inc
imul
mov
cmp
sbb
aaa
dec
xchg
movs
push
mov
inc
xlat
and
or
mov
jg
std
adc
lahf
repz
pop
test
dec
lock
cli
fcom
jmp
cld
ret
ins
jge
lods
cwde
rcl
mov
jne
xor
mov
(bad)
div
add
cmps
das
dec
push
or
pop
fadd
adc
jbe
es
pop
ficomp
mov
sub
popa
jo
or
movs
call
xchg
out
cwde
das
fld
mov
xchg
push
cs
arpl
adc
xchg
add
in
or
fidivr
mov
inc
shr
push
dec
inc
cli
(bad)
scas
fisttp
xchg
jne
sub
std
push
dec
shl
cdq
cmp
ins
fwait
test
in
pusha
scas
adc
mov
std
cmp
and
in
arpl
push
mov
push
int3
jb
xchg
retf
adc
sub
or
stos
cmp
mov
outs
cmp
jnp
(bad)
fstp
push
nop
xor
mov
lods
push
push
cmc
fdivp
ss
pop
push
inc
fucomp
hlt
into
dec
leave
clc
aam
push
(bad)
call
push
mov
loop
ins
and
mov
(bad)
fstp
inc
mov
mov
imul
cld
add
sub
stc
fdiv
push
jg
retf
shl
xor
pop
ins
cmp
or
mov
into
jb
in
mov
and
mov
adc
je
or
ror
data16
fst
fcom
xor
xchg
scas
mov
cmp
mov
ja
into
mul
sti
push
ja
push
imul
out
ja
arpl
test
dec
or
fisttp
stos
mov
mov
lahf
mov
sti
lods
(bad)
push
in
int3
rcr
hlt
sbb
ja
pop
lock
into
out
(bad)
aad
pop
adc
fstp
inc
shl
sbb
repz
call
sub
std
jle
gs
xor
and
sub
mov
jns
jecxz
adc
xor
and
mov
retf
call
xchg
mov
jmp
adc
in
in
cwde
add
add
sahf
pusha
or
xchg
pop
lods
lock
jge
or
fnstsw
retf
retf
xchg
dec
pop
mov
inc
mov
sbb
push
mov
retf
pop
adc
jns
inc
sbb
mov
ss
iret
inc
ror
fidivr
xchg
arpl
dec
dec
jp
jbe
xor
or
jmp
sar
enter
je
pop
pushf
cs
push
sbb
push
sbb
add
xchg
jmp
in
hlt
jne
sub
jp
lods
pusha
jmp
adc
leave
xor
cmp
cmp
inc
fist
fdiv
lods
pop
mov
add
in
jp
adc
sbb
jmp
adc
fwait
addr16
hlt
mov
sbb
rol
fdiv
aaa
aas
test
in
(bad)
fstp
das
inc
mov
fild
xchg
xor
movs
std
enter
sti
mov
push
push
xchg
jle
mov
sbb
sbb
mov
out
das
or
inc
shl
cmps
aad
lods
inc
cmc
sub
dec
(bad)
sbb
push
ins
retf
std
xchg
mov
pushf
jmp
sbb
add
ror
sbb
jb
push
jg
xchg
add
xchg
pop
or
inc
and
scas
scas
or
jl
scas
push
jno
xor
adc
cli
push
test
cmp
jecxz
sbb
movs
cwde
lds
sbb
outs
out
sub
mov
jno
dec
fucomi
push
or
mov
xchg
(bad)
lds
jecxz
pop
icebp
or
cmp
(bad)
push
mov
fdivrp
push
jge
fwait
aaa
and
out
mov
cmp
lock
pop
or
jno
test
in
jae
add
cmc
es
xchg
mov
inc
sti
jns
fld
mul
popa
mov
dec
fdiv
inc
xchg
mov
mov
(bad)
fmul
sub
xchg
(bad)
jne
inc
xor
pop
inc
(bad)
pushf
int
enter
xchg
std
test
mov
sub
popa
std
aas
ja
clc
xchg
jmp
push
lds
sub
call
or
sahf
or
icebp
(bad)
sbb
xlat
cmp
push
jecxz
ret
ret
sbb
mov
push
pop
sbb
push
jecxz
push
adc
std
(bad)
sub
lea
outs
fs
fnsave
mov
jp
aas
adc
mov
jle
imul
test
xchg
inc
loop
jno
movs
iret
push
lods
dec
jp
fisub
cmp
mov
aaa
xor
fxam
xchg
sub
sub
mov
(bad)
mov
mov
in
xor
mov
sbb
sbb
push
inc
popf
and
pop
(bad)
cwde
mov
cs
arpl
and
loopne
popa
mov
ret
cwde
lock
and
test
ror
jecxz
add
cmp
pop
cwde
fs
imul
out
outs
fnstsw
cmp
push
xchg
clc
in
cmp
mov
mov
imul
sahf
and
sub
and
cmp
sub
inc
xchg
aas
push
das
jl
cli
(bad)
enter
mov
jno
mov
adc
jne
mov
leave
adc
jmp
mov
fs
lods
and
ret
dec
dec
faddp
das
push
aaa
xlat
jb
ds
xchg
bound
test
jbe
repnz
sub
aam
cmc
(bad)
popf
ins
fnstsw
pop
pop
adc
adc
ds
xchg
pop
cmovl
and
mov
shl
sub
adc
(bad)
xchg
mov
cmps
hlt
ds
jno
inc
jae
add
mov
sti
stos
sahf
dec
mov
ins
mov
aad
mov
aad
test
inc
add
and
pop
dec
int3
mul
test
repnz
pusha
mov
cdq
lock
arpl
(bad)
cmp
mov
jg
test
movs
fcom
imul
cmp
out
ds
hlt
loopne
daa
ja
aaa
and
cmp
stc
retf
adc
mov
mov
ins
inc
adc
lahf
loop
sbb
and
jecxz
xor
cmp
aad
movs
dec
pop
popf
dec
add
xor
mov
push
ret
es
call
(bad)
loopne
jbe
add
mov
add
sub
pop
outs
pushf
daa
movs
(bad)
mov
sahf
loop
rcl
clc
fisub
or
or
and
xor
and
cmps
push
outs
xchg
cmpxchg
movs
je
jp
mov
iret
pop
sbb
movs
dec
retf
ret
mov
or
cmc
mov
sub
jmp
add
jecxz
or
into
repnz
pop
mov
cvttps2pi
cmp
push
xchg
push
sub
div
test
push
ret
mov
data16
and
inc
imul
mov
adc
lahf
push
jne
(bad)
gs
adc
lds
xor
xor
sbb
cli
in
out
icebp
mov
jnp
jae
push
sahf
shl
repnz
inc
pop
mov
sub
cmp
xchg
xchg
add
push
or
int3
(bad)
sub
fadd
ret
out
cld
inc
pop
dec
jge
scas
or
shr
xchg
fidivr
cs
inc
lods
pop
enter
cmp
in
popf
hlt
pop
mov
popa
(bad)
ja
je
popf
jo
inc
test
scas
xor
das
jge
fsubr
mov
jns
dec
mov
and
xor
or
inc
mov
iret
lea
fild
fwait
jns
es
jnp
loope
xor
xor
mov
jns
cmc
xor
sbb
mov
je
jmp
sub
fwait
lds
retf
and
pushf
sahf
cmp
mov
leave
rol
in
sub
and
push
hlt
pop
es
xchg
mov
icebp
pop
sub
test
or
lods
in
test
cmp
mov
sti
rep
inc
repnz
neg
ficom
mov
retf
xor
in
mov
rep
out
mov
in
scas
popf
call
sbb
add
cmp
in
enter
pushf
or
xor
ja
cmp
mov
mov
and
dec
movs
out
mov
out
(bad)
(bad)
push
cdq
jbe
cmps
cmc
cmp
or
add
mov
push
mov
xlat
imul
add
or
inc
sub
jo
daa
loop
xlat
jmp
push
shl
adc
add
push
cmp
stos
or
push
rcr
push
xchg
shl
(bad)
pop
test
das
inc
cli
lods
sbb
mov
mov
pop
xlat
scas
jb
mov
test
retf
dec
add
test
add
and
mov
inc
rcl
pop
dec
dec
or
fcmovne
call
aas
push
cmp
ror
movs
outs
dec
data16
das
aad
or
cmp
and
test
add
jnp
popf
push
rcr
dec
enter
mov
and
(bad)
hlt
mov
in
psubq
addr16
repnz
xor
test
outs
push
scas
inc
xchg
cmp
arpl
repnz
cmp
pop
inc
mov
dec
test
pop
sbb
xlat
mov
add
scas
pop
push
xchg
add
push
retf
addr16
pop
dec
add
adc
stos
out
inc
jl
(bad)
in
cmp
sti
mov
fild
and
mov
and
ret
mov
cli
sbb
outs
push
sbb
mov
sub
mov
inc
jne
inc
repz
push
and
ret
pop
and
sbb
sub
mov
push
mov
scas
call
dec
outs
mov
loop
in
arpl
fld
push
or
or
retf
mov
mov
push
mov
je
adc
jb
cmp
add
cdq
cmc
arpl
cdq
mov
pop
(bad)
push
repnz
mov
pusha
mov
xor
xchg
scas
movs
ret
mov
aas
pop
jp
clc
xchg
jle
out
jmp
je
stc
(bad)
fbstp
xlat
xlat
(bad)
mov
stos
sub
fisubr
loope
test
xor
out
ss
icebp
push
aad
or
fst
(bad)
fimul
scas
mov
jae
xor
mov
mul
aaa
adc
popa
dec
mov
jg
pop
jle
jle
fs
and
arpl
push
nop
push
aad
or
push
test
xadd
popf
int
test
push
cmp
sub
mov
mov
cmc
xor
rol
int
out
dec
enter
jbe
mov
dec
aas
jbe
and
jmp
shr
mov
sbb
ins
ret
pop
cmp
je
jmp
imul
(bad)
loope
pop
imul
std
iret
jmp
data16
popa
adc
xor
xchg
sub
es
or
cld
pop
lods
inc
leave
outs
ss
xchg
dec
into
xor
fisub
(bad)
pop
mov
outs
aaa
stos
pop
cmp
pop
jbe
add
jae
mov
lods
mov
aam
js
dec
xchg
mov
jns
cmp
je
jl
jo
das
inc
lds
cmps
rcr
push
cmps
or
mov
sbb
dec
mov
xchg
jmp
repnz
or
cld
or
stc
scas
push
shl
ret
jae
cmc
add
dec
clc
push
icebp
imul
je
std
idiv
adc
pop
inc
adc
mov
push
inc
mov
and
shl
jg
sbb
sub
fst
pop
pop
mov
adc
push
into
xor
push
(bad)
fisub
sbb
pop
test
jne
push
mov
pop
es
mov
push
add
inc
jnp
cdq
(bad)
cli
sbb
mov
clc
inc
inc
jns
stc
pop
ds
movs
test
mov
pop
push
daa
xor
xor
(bad)
fidiv
call
mov
ins
sti
mov
xchg
push
ror
cwde
retf
sbb
in
ret
icebp
jecxz
cld
imul
fstp
repnz
mov
jo
stos
stc
test
push
(bad)
pop
dec
test
ss
jecxz
push
(bad)
xchg
data16
fcmove
xor
dec
xchg
jmp
ror
inc
mov
xlat
pop
push
jo
or
shr
mov
inc
dec
repz
mov
mov
out
fcomp
dec
ja
push
sbb
push
fcomi
scas
retf
outs
data16
sub
sahf
mov
sahf
and
aad
mov
push
dec
ror
mov
or
pop
out
jne
xchg
dec
inc
jmp
xchg
jne
fs
lock
aaa
scas
jne
add
cmp
hlt
pop
popf
jbe
cdq
idiv
push
clc
xchg
xchg
(bad)
adc
pop
inc
mov
pop
ja
cmp
push
mov
hlt
xchg
sahf
ret
in
jg
pop
fcmovb
ret
xor
pop
sbb
cmps
in
sub
fist
add
jge
cmp
sbb
test
mov
and
jl
out
jmp
xor
adc
imul
dec
mov
outs
retf
adc
mov
mov
jo
inc
inc
cmp
cdq
pop
jmp
(bad)
stos
call
xchg
cld
sub
push
or
cmc
cmps
stos
and
in
psllq
(bad)
jae
jg
lods
(bad)
aam
mov
xchg
not
xchg
fidivr
cmps
iret
mov
mov
jnp
adc
adc
rcr
push
out
fist
dec
int
fldcw
xchg
mov
iret
mov
int
sub
push
adc
mov
sub
sbb
pop
retf
idiv
ror
into
mov
loopne
dec
cmp
sbb
retf
aam
pop
or
pop
cmp
cmc
fdivr
mov
sahf
ss
and
mov
out
add
lea
jnp
ret
(bad)
js
inc
div
out
ffreep
push
cmp
push
dec
mov
mov
outs
lock
fadd
xor
(bad)
lods
sub
sbb
xchg
mov
inc
sub
sti
fldenv
scas
mov
mov
lds
fs
xchg
fsub
clc
mov
repz
psubsb
xor
push
mov
dec
rcr
mov
shl
xchg
mov
ds
mov
loop
jno
shr
jo
cli
inc
mov
pop
and
xchg
(bad)
ja
sbb
sub
xchg
cmp
movs
mov
push
jp
sub
je
ins
xor
repz
sub
push
mov
and
sub
pop
retf
jnp
jb
cmp
xor
sbb
mov
daa
and
loope
dec
sub
xor
pushf
imul
hlt
iret
xchg
je
xor
sbb
dec
xchg
fistp
or
jle
(bad)
mov
mov
ja
out
jl
mov
cmp
jnp
jle
cmps
mov
loop
ret
pop
cmp
xchg
test
mov
cmp
retf
xchg
jmp
stos
adc
daa
outs
rcl
retf
popa
movs
cmps
lods
mov
dec
arpl
pop
add
add
push
xchg
fild
fmulp
lods
mov
jge
movs
or
or
pushf
xor
ret
or
scas
sbb
sbb
push
shr
jbe
sbb
adc
mov
sbb
scas
sbb
pop
dec
in
call
fcmovb
cdq
retf
enter
rol
loopne
mov
jb
jl
mov
adc
(bad)
mov
jbe
pop
outs
retf
mov
jmp
mov
fs
mov
jne
add
pop
dec
mov
xor
jo
or
loop
(bad)
movs
mov
pusha
adc
scas
jnp
push
jg
(bad)
int3
gs
mov
dec
fwait
or
sub
inc
cmp
adc
ins
call
xchg
pushf
jb
mov
mov
cwde
sub
cld
imul
push
xor
mov
inc
mov
mov
cmps
jne
scas
movs
outs
leave
aaa
ror
pop
jecxz
jmp
std
jno
cmp
jl
out
jns
push
sbb
jns
sub
xlat
push
xchg
pop
retf
lds
add
cmps
popa
daa
xchg
fwait
jg
retf
xchg
mov
adc
pop
js
fsubr
popa
adc
jno
and
add
std
ins
add
or
jnp
(bad)
cmp
sub
mov
ficom
mov
mov
sub
sub
mov
shl
inc
sub
stc
and
call
out
inc
xor
push
sub
fs
jg
push
jg
cld
nop
jns
dec
mov
aad
daa
into
mov
jl
bound
dec
sbb
jnp
jnp
mov
ja
pop
fs
push
into
stos
sub
adc
test
sbb
mov
ins
fadd
push
push
jmp
sbb
das
neg
lds
push
xchg
inc
push
inc
add
inc
(bad)
xor
mov
fisttp
xchg
inc
fisubr
sar
je
or
ins
test
sub
stos
or
dec
out
fisttp
(bad)
test
and
xchg
sahf
sbb
cmp
pop
sbb
repnz
mov
pop
mov
rcl
mov
neg
sbb
popa
xor
(bad)
sub
add
stos
in
cld
in
inc
pop
iret
xchg
jae
jp
mov
jbe
push
or
mov
or
mov
scas
or
cmp
mov
neg
rol
in
arpl
mov
js
ja
push
or
cmps
das
(bad)
pusha
movs
fmul
ja
xor
pop
dec
inc
push
pop
add
nop
push
xor
jne
mov
cmp
int3
(bad)
clc
shufps
push
les
cdq
jmp
mov
stc
jmp
and
mov
dec
cwde
push
inc
repz
sbb
xchg
sbb
call
in
and
dec
cmc
sub
pop
cmp
adc
pushf
jno
test
call
ret
mov
(bad)
jnp
sbb
ret
pusha
sbb
xchg
push
les
stc
out
pop
lahf
retf
mov
push
and
xor
ins
lds
ror
and
stc
sbb
inc
inc
cmp
xchg
and
in
clc
dec
jns
lds
jl
dec
xchg
data16
sbb
push
ficomp
jno
add
or
call
outs
mov
mov
and
stos
pop
(bad)
out
cmp
into
stos
dec
stc
not
push
imul
sbb
pop
into
movs
scas
(bad)
and
sbb
enter
adc
or
jge
sbb
jbe
scas
lods
dec
adc
jge
sub
sub
dec
mov
mov
aam
dec
pop
jbe
mov
and
out
out
ret
sub
bnd
lods
outs
or
fcmovnu
(bad)
stos
clc
mov
jns
cmp
xchg
repz
add
jl
and
test
enter
push
ficom
dec
scas
jmp
mov
dec
push
pop
cmp
mov
lods
mov
and
mov
ins
jmp
jmp
cld
mov
mov
and
fidiv
dec
mov
sbb
pop
add
pop
and
mov
push
icebp
cmp
mov
jp
movs
pop
sbb
vdivsd
pop
call
dec
pavgb
adc
(bad)
adc
dec
mov
je
mov
pop
pop
int
ror
mov
mov
ins
paddw
push
xchg
repz
mov
adc
and
cli
sub
jnp
(bad)
pop
cmp
or
movs
add
adc
add
adc
in
popa
mov
rcl
pop
mov
sbb
(bad)
leave
or
and
adc
add
sub
in
fnstsw
adc
add
mov
fdivp
cmp
imul
fisubr
xchg
and
or
call
add
push
add
xchg
add
inc
cs
pop
ins
cdq
add
ins
fld
vprotd
stos
outs
push
cmps
jmp
push
das
in
js
mov
xchg
add
pusha
mov
jb
cld
cmps
mov
cmp
daa
js
push
scas
mov
shr
jmp
movs
ret
and
dec
(bad)
jne
inc
popa
sbb
fidiv
pop
ror
iret
jp
cli
push
push
pop
call
gs
jl
aam
mov
pop
jmp
imul
cmps
add
pop
cwde
inc
and
dec
push
and
in
sbb
(bad)
jno
jno
adc
push
sbb
sbb
mov
push
std
lahf
cdq
loopne
stos
inc
xchg
sbb
leave
repnz
fdiv
sbb
xchg
add
in
push
popa
sbb
sbb
sbb
cmp
scas
and
sub
jle
sbb
pop
push
and
jne
mov
(bad)
dec
xor
data16
and
push
adc
pop
and
add
in
iret
adc
dec
mov
pop
mov
(bad)
dec
pmuludq
out
mov
xor
retf
jo
aam
jns
mov
push
in
bound
adc
jo
or
icebp
add
dec
ja
aaa
fimul
xchg
cmps
mov
cwde
pusha
add
sahf
rcr
sahf
rol
scas
loopne
repz
scas
and
inc
outs
and
push
jne
pop
inc
imul
sub
ror
out
out
mov
inc
cmp
dec
out
inc
mov
or
jmp
mov
or
mov
and
push
pop
ins
and
scas
(bad)
popa
int3
ss
enter
cmp
sbb
dec
mov
and
loopne
pop
cmps
sbb
ins
push
inc
pop
mov
mov
stos
jne
cmp
arpl
cmp
rcr
mov
mov
test
popa
add
int
out
sbb
frstor
cld
mov
xchg
xchg
push
xor
cld
push
fcomp
into
cmps
jb
je
jb
xor
lds
ret
adc
rol
int3
sbb
and
mov
(bad)
mov
cli
test
movs
addr16
leave
in
adc
push
imul
push
sub
jge
clc
xor
cdq
pop
and
sub
mov
add
cmp
leave
pop
xor
jae
mov
sbb
xchg
mov
mov
mov
test
addr16
xchg
adc
ja
nop
iret
imul
mov
xor
xchg
shl
pushf
sbb
in
push
mov
test
pop
in
into
ret
dec
stos
xor
mov
int
imul
add
mov
inc
jns
cld
pop
jno
int3
inc
addr16
enter
jmp
add
xchg
dec
imul
push
int
xor
neg
adc
and
jmp
jnp
jns
and
(bad)
jnp
push
cmps
mov
popa
ret
lock
pop
out
out
fmul
xchg
enter
jbe
add
(bad)
mov
shl
je
mov
pop
mov
cmc
cwde
or
cmp
dec
cmp
sbb
cmps
xlat
rcl
mov
lock
pop
dec
mov
jae
test
cmps
mov
mov
stos
in
ds
sbb
inc
mov
pop
xchg
or
adc
cmc
stos
add
sbb
movs
lea
mov
ins
(bad)
pop
push
int3
fdivr
sub
mov
and
mov
rol
imul
mov
aaa
iret
imul
add
push
jge
mov
daa
sub
ins
inc
leave
icebp
loopne
dec
(bad)
ficomp
std
(bad)
pop
jb
cmc
pop
push
jne
arpl
(bad)
popa
xchg
repnz
xchg
and
xor
loopne
das
inc
adc
scas
(bad)
xchg
aad
(bad)
and
mov
lods
loop
push
in
and
sbb
scas
xor
cmp
js
push
sahf
pop
ds
int
jg
aam
aam
push
mov
outs
imul
test
mov
xchg
scas
js
dec
jno
mov
add
cdq
jb
xchg
or
dec
push
dec
dec
push
cli
pop
call
fdiv
add
fidiv
cli
fiadd
push
lock
(bad)
mov
push
ss
daa
sbb
mov
gs
cdq
inc
xor
in
imul
add
or
sub
popf
(bad)
cs
push
xchg
fdiv
mov
lea
push
jg
int3
fcomp
sbb
mov
cmp
mov
push
sbb
pop
repz
retf
mov
cmc
and
and
mov
cmp
mov
add
adc
and
aam
iret
mov
ds
lea
ja
jb
imul
inc
scas
pop
dec
and
int
adc
pop
mov
shl
push
movs
adc
out
(bad)
mov
out
sbb
in
pop
xchg
ror
push
pushf
and
dec
je
or
pop
in
mov
xor
jp
sahf
xor
push
sti
sub
mov
xlat
jg
pop
data16
fnstenv
push
out
enter
xchg
aas
cmp
push
xchg
or
out
aam
cwde
inc
sub
out
not
xchg
stc
mov
in
out
movs
mov
mov
dec
cli
mov
sar
out
mov
(bad)
fwait
inc
mov
lahf
fdivr
add
and
aas
or
sti
mov
cmp
jle
(bad)
xor
dec
sbb
imul
push
xor
mov
mov
xchg
sbb
lds
dec
push
fadd
ins
xor
ret
popf
adc
jae
imul
sbb
jmp
out
fnsave
outs
mul
jbe
imul
cmp
cmp
mov
sub
(bad)
(bad)
adc
shr
test
stos
out
cld
sub
xor
(bad)
lea
test
iret
aam
mov
inc
push
ror
fcmovbe
scas
loopne
push
pop
aaa
(bad)
pop
ret
inc
pushf
mov
sub
xor
call
sbb
pop
in
scas
inc
into
fcom
xlat
cmps
sbb
icebp
test
ja
push
jbe
out
cs
mov
xchg
jg
pop
arpl
outs
aam
pusha
sbb
jge
sbb
pop
cmp
test
data16
adc
movs
clc
push
mov
in
inc
cs
xor
adc
iret
dec
xchg
int3
mov
call
in
mov
pushf
push
jge
cld
lods
cwde
pop
push
adc
dec
add
jg
cmps
push
pop
test
dec
aam
out
outs
mov
inc
fdivr
sti
mov
mov
pop
clc
sub
inc
adc
mov
xchg
fadd
adc
es
gs
cmp
adc
mov
fwait
or
sbb
div
dec
je
adc
xchg
xor
aaa
xchg
add
push
(bad)
repz
jmp
xchg
int3
jno
fnstsw
aaa
int3
cmc
mov
push
int3
in
(bad)
sub
push
sbb
sbb
mov
mov
cmp
mov
cdq
or
inc
test
and
rcl
es
iret
cld
and
jecxz
push
pop
cdq
adc
dec
pop
retf
in
pop
movs
fsubp
jmp
not
fidivr
xchg
pushf
sub
ds
or
mov
(bad)
push
add
(bad)
push
mov
pop
data16
push
pop
jnp
stos
adc
dec
movs
push
and
jmp
xchg
cmc
sub
loope
sub
jmp
stos
and
mov
jo
fmul
inc
rcr
fsub
push
loopne
in
jl
mov
xlat
lds
jne
in
inc
mov
pop
cs
(bad)
and
enter
dec
(bad)
movs
sub
popa
repnz
ins
daa
mov
dec
mov
sub
ss
mov
jle
inc
cmps
jno
dec
and
jmp
cwde
bound
cmps
(bad)
in
jp
call
gs
sbb
push
mov
fs
push
pop
in
push
add
pop
push
or
or
retf
movs
lds
add
(bad)
(bad)
cmp
clc
or
adc
or
je
(bad)
enter
out
in
cmp
jle
xchg
cmp
scas
jp
inc
imul
pop
mov
mov
(bad)
push
test
cli
repz
fcom
cmp
sti
in
movs
loop
add
dec
mov
dec
arpl
jmp
jb
arpl
(bad)
pop
out
lods
(bad)
jmp
jo
pop
lods
aas
outs
jp
pop
clc
gs
xor
lds
add
das
sete
sbb
cli
mov
and
push
clc
scas
clc
and
jo
iret
jmp
jmp
stos
xchg
rol
xor
in
jp
jo
xchg
out
retf
out
scas
sbb
sbb
ins
mov
pop
dec
rcl
cld
inc
xchg
xchg
jbe
(bad)
fiadd
add
inc
cmpps
mov
push
imul
mov
jmp
xchg
inc
(bad)
scas
push
mov
scas
dec
pop
mov
xor
push
inc
jle
imul
das
xchg
cmp
sub
adc
fisttp
xchg
mov
jno
xchg
adc
mov
jmp
adc
fs
pop
ins
and
leave
into
adc
movs
jnp
sbb
repnz
jns
sub
jl
call
or
dec
test
xor
pop
and
jmp
sbb
fstp
movs
xchg
pusha
push
xor
mov
iret
pop
xchg
dec
mov
in
add
sbb
xor
xchg
sti
mov
rcl
mov
sub
(bad)
push
jo
and
jecxz
xor
shl
xor
pop
jle
into
cmc
das
out
push
lahf
and
gs
sahf
xlat
adc
(bad)
retf
mov
inc
call
and
add
sbb
fadd
xchg
lds
adc
mov
push
push
test
push
addr16
xchg
xchg
jne
je
lahf
dec
ret
repnz
or
jb
pop
mov
xchg
adc
add
fimul
(bad)
cmp
or
mov
push
xchg
sub
shl
lock
sbb
sbb
cld
xor
clc
cmps
sahf
sub
cdq
fidivr
dec
js
ja
inc
(bad)
cmp
enter
mov
jmp
inc
cmp
mov
jnp
sbb
lds
push
fsub
stc
movs
fidivr
fs
inc
outs
cmps
push
js
add
call
rcl
in
or
mov
ja
(bad)
clc
je
mov
(bad)
xchg
xchg
push
adc
pslld
jecxz
movs
or
jmp
push
jle
outs
and
or
in
push
xchg
daa
daa
add
lea
adc
lahf
push
mov
dec
sti
jnp
mov
ret
xor
fdivr
or
cmp
neg
ds
sbb
popa
xor
movs
fnsave
in
push
fst
fwait
shl
test
push
out
xlat
xor
or
mov
pop
push
sbb
hlt
cmps
mov
cmc
jmp
xchg
add
sti
push
lds
pop
imul
outs
pusha
dec
fdiv
outs
cmp
test
jle
xor
lahf
mov
jo
push
sbb
dec
mov
and
mov
xchg
ret
xor
neg
sbb
or
fdiv
inc
out
jae
scas
sub
adc
mov
pop
pop
and
sub
xchg
xor
dec
and
push
cmc
add
xchg
and
mov
adc
sub
xchg
movs
add
or
sti
(bad)
cli
out
add
imul
xchg
clc
dec
ins
(bad)
xlat
inc
mov
xchg
rcr
leave
push
mov
mov
push
cmp
(bad)
fldcw
adc
(bad)
mov
cs
cwde
fimul
loope
mov
jno
fstp
cs
add
push
cmps
mov
fisttp
xchg
je
addr16
push
loop
sub
lahf
mov
or
pmulhw
add
mov
inc
or
outs
ss
add
push
test
loopne
jmp
loop
inc
arpl
push
jle
hlt
lahf
(bad)
leave
(bad)
out
inc
lds
xchg
hlt
adc
cmp
jae
xlat
push
movs
inc
push
xchg
call
cs
call
bound
mov
out
(bad)
(bad)
or
push
add
shr
inc
mov
jl
mov
fmul
out
fsub
outs
icebp
rcl
xlat
dec
xor
ror
fs
ret
dec
inc
mov
push
mov
pop
ja
ins
mov
xlat
sbb
mov
pop
sub
test
inc
add
jl
movs
inc
enter
mov
lods
retf
imul
jne
mov
outs
movq
jecxz
ins
sbb
fwait
shr
and
std
in
inc
pop
and
scas
mov
cdq
iret
xchg
mov
fs
(bad)
fldcw
pop
cmp
xor
into
jp
fisttp
sar
pop
rcr
js
das
sbb
stos
or
stos
aas
dec
out
hlt
and
pop
push
shr
scas
shl
push
add
jb
xor
sub
enter
xchg
sub
lods
cmp
hlt
retf
pop
ins
jno
jno
push
call
add
pop
jle
xor
pop
jg
sbb
push
lock
in
and
jl
fstp
in
aad
lods
xchg
dec
jmp
push
push
fidivr
adc
test
ds
sub
fst
and
mov
addr16
aaa
push
repz
lds
lock
test
or
test
repz
pushf
dec
sbb
sbb
sti
sbb
or
fsubr
in
aam
cmp
jle
cwde
es
inc
push
es
and
push
int
and
dec
les
dec
pop
scas
loopne
rcr
enter
push
data16
push
call
jg
test
mov
push
or
jmp
push
aaa
push
mov
cmp
jle
cmp
adc
arpl
and
and
data16
jbe
loopne
out
or
push
lods
jge
mov
xor
outs
fmul
sti
cmps
popa
pop
xor
movs
test
xchg
mov
cmp
xor
sbb
(bad)
iret
sar
fstp
fucomip
cdq
pop
pop
iret
loopne
mov
ins
cmps
sbb
xlat
jno
int3
push
out
ret
js
das
sub
mov
pop
sbb
xchg
inc
ins
inc
xor
pop
je
cdq
repz
fs
shl
fwait
repnz
mov
push
adc
inc
lods
xchg
jbe
lods
outs
mov
jge
jb
jnp
pop
cmp
(bad)
ins
inc
(bad)
push
sbb
cmp
cs
xchg
or
sbb
(bad)
mov
xlat
pop
jbe
mov
adc
pop
push
jmp
mov
mov
or
(bad)
dec
pop
adc
out
lds
xchg
push
loope
sub
cli
fdiv
retf
dec
push
clc
push
ins
std
dec
lods
pop
pop
movhps
and
arpl
les
call
enter
pusha
scas
mov
sbb
in
jb
cmp
pop
xor
neg
inc
sub
cmps
push
jmp
xchg
movs
jns
dec
leave
dec
pop
xor
fs
rol
ret
fwait
(bad)
(bad)
fst
(bad)
and
sbb
mov
sbb
adc
push
not
ret
(bad)
sub
test
dec
jne
dec
and
mul
cmp
sahf
adc
and
inc
push
pop
imul
ret
(bad)
lea
popa
and
aas
rol
adc
mov
nop
xor
inc
pop
mov
xchg
adc
xchg
jle
popf
mov
test
jmp
int
addr16
adc
neg
repz
jbe
adc
adc
adc
int
xor
push
push
push
in
icebp
movs
inc
scas
sahf
add
mov
or
inc
int3
pop
inc
stc
dec
jmp
cwde
out
add
cmp
ret
imul
adc
pop
movs
mov
test
dec
bound
int3
(bad)
repz
in
xchg
adc
xchg
xchg
add
push
jle
pop
ss
add
add
mov
fstp
aaa
adc
pop
cmp
xchg
bound
add
and
push
push
push
push
int
in
push
sbb
lock
sub
fsubrp
push
pop
cmp
mov
in
(bad)
sbb
vpsrlw
sbb
sbb
push
mov
push
push
sahf
add
xor
rcl
jbe
ret
je
mov
fs
leave
loopne
or
call
pop
popf
test
inc
cmp
xchg
into
xor
or
or
push
mov
push
cmp
test
frstor
mov
and
pop
mov
or
std
sbb
add
or
push
cmc
imul
mov
mov
ret
retf
xor
mov
out
add
sbb
dec
inc
std
mov
lahf
xor
cwde
jl
push
out
push
and
bound
sti
xor
movs
mov
(bad)
fdivrp
andps
data16
xor
lods
dec
les
int3
pop
mov
xchg
call
dec
sub
cli
sub
jbe
mov
and
sub
xlat
cmc
sub
pop
lds
gs
fmul
cld
mov
mov
out
mov
es
cmp
jecxz
cs
cmp
sahf
pop
cmp
mov
jge
xor
inc
in
push
add
xchg
cmp
fistp
cmps
xchg
pop
mov
mov
xor
shr
xor
xchg
add
lea
aam
cmp
fs
xchg
ja
jne
add
cdq
dec
or
mov
(bad)
jecxz
sbb
jmp
push
or
mov
cmp
adc
call
rcr
jmp
lds
inc
cmp
rol
in
xchg
ror
mov
sub
jo
cmp
mov
fwait
pop
pop
xchg
ins
aad
cmp
lds
jbe
arpl
clc
(bad)
push
sub
add
jmp
mov
(bad)
lea
jnp
iret
pop
push
inc
cli
jecxz
jg
fdiv
leave
in
into
sub
or
retf
mov
aam
stos
pop
adc
mov
mov
dec
ins
xor
lahf
or
mov
adc
mov
jnp
sub
(bad)
ins
push
inc
je
popa
shl
arpl
mov
(bad)
ret
aad
fucomi
int3
mov
or
jmp
retf
push
inc
push
repnz
stos
mov
pop
int3
addr16
cs
loope
jo
enter
rdtsc
mov
rcr
icebp
xchg
push
rcl
push
push
enter
mov
xchg
push
adc
out
outs
fsub
stc
out
pop
or
mov
add
stc
add
test
cmp
idiv
xchg
cs
lahf
or
sbb
dec
sub
xlat
mov
retf
and
mov
and
xor
dec
shl
mov
jge
sub
cld
and
lea
mov
popa
jmp
daa
pop
jnp
lock
test
(bad)
nop
pushf
push
dec
push
ds
nop
xchg
dec
sbb
xor
mov
cmps
xor
sbb
and
ins
jne
mov
adc
xchg
ja
(bad)
pop
not
ins
repz
or
jbe
push
stos
mov
jg
cmp
sbb
mov
push
xlat
(bad)
push
call
mov
push
jbe
xlat
(bad)
lds
mov
xchg
shl
sbb
cmp
test
test
ins
push
in
outs
fisttp
imul
or
lods
outs
cld
lods
mov
fwait
call
jbe
retf
pop
xor
and
enter
jbe
adc
out
lods
jbe
jl
and
dec
sbb
addr16
xlat
dec
pop
int
cmps
les
leave
inc
out
vrcpss
jmp
cmps
ins
mov
xchg
shr
adc
cmc
xchg
in
and
pop
sub
and
or
test
imul
fsub
in
imul
call
sub
dec
and
inc
mov
icebp
enter
adc
or
push
push
push
in
sbb
add
je
mov
add
or
leave
pop
lea
shl
sub
movs
push
imul
cmc
mov
cmp
out
sbb
call
jp
cmp
iret
or
repz
test
xchg
sub
repz
xchg
je
cli
fwait
mov
inc
(bad)
lock
push
mov
sbb
mov
fmul
or
fidivr
inc
nop
in
mov
inc
cmp
push
xor
addr16
outs
inc
in
shr
pusha
enter
lahf
dec
push
repz
adc
daa
inc
arpl
dec
inc
inc
pushf
fistp
mov
into
mov
ins
frstor
or
lock
add
inc
cmps
mov
or
mov
stc
stc
dec
jb
iret
sub
pusha
out
dec
xor
xchg
mov
dec
retf
shl
jle
stos
xor
mov
lock
inc
loope
ret
push
fadd
(bad)
mov
sub
lods
push
and
pop
xlat
sub
js
push
cmps
pop
stos
jnp
mov
inc
fimul
clc
jle
gs
xlat
repnz
push
inc
pushf
cmc
xchg
(bad)
das
imul
imul
inc
mov
sbb
xlat
vmulps
stos
cmps
xchg
xchg
mov
and
sub
cld
xchg
pop
mov
adc
sti
fdiv
adc
lock
(bad)
push
adc
mov
xchg
out
jp
addr16
cs
(bad)
das
into
in
sub
stos
add
pusha
cmp
xchg
sub
xchg
xchg
shl
add
mov
xchg
and
xchg
movs
aaa
dec
mov
mov
dec
inc
movs
aas
xchg
and
xor
adc
inc
ss
push
pop
jcxz
mov
aaa
sbb
push
call
pop
fadd
stc
jbe
fmul
std
and
push
fstp
adc
das
rcl
pop
mov
sbb
or
push
loop
adc
dec
loop
mov
mov
(bad)
iret
cmps
enter
xchg
sub
and
adc
add
jno
or
mov
jmp
cli
test
push
cmp
inc
test
es
push
mov
mov
jnp
mov
push
and
inc
aad
adc
call
leave
push
mov
std
push
push
dec
data16
movs
popf
loopne
or
je
repz
scas
xchg
cwde
nop
adc
jg
mov
stos
rcl
lds
(bad)
cli
sar
or
xlat
mov
test
out
loopne
sbb
mov
dec
push
in
mov
cdq
xchg
gs
scas
pop
int3
cli
mov
cmp
mov
dec
and
les
sbb
pop
sti
shl
sbb
stos
out
popa
pop
cwde
call
call
dec
fbld
aad
jnp
mov
push
jae
scas
xchg
xor
stos
xchg
xor
ins
sbb
push
inc
mov
dec
(bad)
mov
movs
test
xchg
popa
mov
xchg
test
jle
mov
dec
sub
jne
lahf
jmp
pop
add
pop
adc
loop
mov
cmp
mov
mov
inc
mov
cmp
rol
mov
popa
outs
jmp
fcmovne
jne
adc
xchg
sbb
mov
push
aad
push
xor
fsubr
mov
cli
xor
xchg
stc
inc
ins
mov
or
add
jnp
ss
sub
dec
pop
rcl
sbb
shr
jo
cmps
adc
clc
ins
jmp
mov
mov
cmp
aaa
sub
add
repz
xchg
xchg
or
mov
inc
and
lahf
pushf
out
add
or
adc
add
ja
jo
lods
call
sbb
bound
jp
push
js
jns
cmp
in
and
mov
ins
dec
add
fisubr
retf
mov
sbb
mov
jb
mov
fld
scas
jg
push
in
out
test
xor
add
clc
mov
inc
push
mov
pop
jmp
jge
aad
dec
sub
sub
stos
and
adc
dec
fimul
xchg
xor
frstor
dec
inc
sub
sar
push
not
sahf
pop
popa
cmp
fsubr
and
dec
pop
cmc
rcr
sti
dec
iret
aas
dec
pusha
stos
pop
xchg
les
test
(bad)
sub
popa
fcomip
ins
dec
and
sti
sbb
pop
test
dec
add
imul
mov
and
pop
(bad)
jp
xor
imul
stos
dec
mov
mov
std
test
pop
push
mov
sbb
xchg
cli
inc
repz
ret
mov
ficom
or
xchg
add
aam
or
dec
pushf
xchg
inc
sbb
jbe
pop
shl
or
sar
mov
pop
jnp
dec
mov
jle
push
jl
pop
adc
mov
lea
sub
xchg
neg
push
stc
or
imul
test
fistp
sub
pop
je
xor
movs
mov
or
je
cmp
test
cmp
adc
push
ins
pop
adc
into
mov
bound
fiadd
lock
lea
in
jge
daa
popf
mov
ins
pusha
ds
popf
(bad)
mov
push
push
jg
inc
pop
stc
cmp
xchg
cdq
pop
movs
cmp
add
lods
ja
cdq
les
jge
stos
pop
xor
pop
mov
adc
nop
packsswb
ja
lahf
idiv
cli
div
mov
and
in
adc
fst
cwde
pop
mov
adc
aas
cld
mov
cmp
sbb
push
mov
shl
(bad)
pusha
jb
test
in
(bad)
or
cmps
mov
neg
ss
mov
or
out
jae
ffreep
shl
cmp
add
dec
pop
inc
daa
out
test
push
ss
daa
loop
(bad)
stos
sbb
xchg
mov
xchg
jle
lahf
pushf
fld
mov
and
pop
in
pop
arpl
test
ds
pop
mov
out
xchg
mov
dec
loope
(bad)
xor
sub
test
cmp
(bad)
call
repz
jnp
or
out
mov
dec
lahf
inc
test
mov
add
jae
or
xchg
ss
leave
jae
mov
(bad)
daa
aam
pop
std
xor
aad
add
mov
jp
cmps
stos
xchg
std
add
dec
xchg
inc
aas
imul
push
retf
test
add
pop
push
mov
js
mov
inc
call
cmp
mov
sbb
mov
lods
repz
mov
pop
aas
cmovp
and
fcom
ins
sub
scas
xor
mov
push
ds
push
inc
imul
int3
push
sub
adc
adc
fldcw
mov
je
outs
movs
mov
adc
sub
sub
adc
outs
xchg
jno
pop
arpl
sbb
mov
fwait
dec
push
xchg
sbb
bound
add
aaa
and
pushf
fdivp
hlt
jecxz
pop
in
cmps
adc
out
jecxz
test
ret
int
or
rcr
fucomp
xchg
test
sti
cli
lods
mov
mov
fst
pop
or
shr
dec
jmp
shl
sub
(bad)
out
shr
repz
hlt
jge
lock
sbb
mov
mov
cld
fwait
push
mov
mov
xor
not
sbb
in
sti
push
rcl
sbb
pop
ror
shl
jne
cdq
mov
pop
dec
sub
xchg
test
faddp
scas
dec
pop
std
jbe
fs
xchg
and
and
sbb
repz
cmp
in
mov
pusha
popf
popf
les
lds
fld
jg
das
add
or
repnz
inc
dec
add
xor
jo
sbb
and
stos
inc
or
out
aam
movs
pop
sbb
dec
lock
mov
xchg
out
mul
add
ret
jb
loope
sahf
add
push
mov
and
or
(bad)
adc
inc
dec
dec
xlat
pop
fadd
or
je
jl
(bad)
nop
das
out
nop
loope
popf
push
adc
test
jl
stos
iret
or
(bad)
outs
fdivr
leave
push
mov
ror
mov
jbe
mov
(bad)
mov
loope
xor
idiv
xchg
sub
sub
mov
mov
lahf
jg
jp
stc
repz
clc
test
jo
lahf
mov
ret
pop
jge
sbb
xchg
pop
mov
push
dec
jmp
jg
lock
lods
sti
jmp
arpl
dec
cmp
fmul
out
adc
scas
and
xabort
inc
or
test
popa
in
and
fmul
cmp
mov
and
movs
sbb
(bad)
adc
out
cmp
sub
and
mov
hlt
movs
js
inc
(bad)
test
mov
in
sbb
sbb
pushf
loopne
cmp
pop
pop
add
ja
mov
je
mov
out
adc
xchg
xchg
mov
push
inc
pop
addr16
lock
dec
sbb
mov
retf
test
jmp
sbb
pusha
add
push
in
cmp
xor
call
loopne
inc
in
add
loope
es
shr
in
xor
jl
pop
lahf
repnz
gs
jmp
dec
fidivr
sbb
dec
xchg
adc
sahf
das
movs
jb
jno
adc
pop
jmp
dec
jo
pop
in
push
lock
mov
int
cli
loope
push
push
cmp
out
nop
and
push
add
dec
scas
jne
loope
mov
mov
loope
or
popf
mov
sub
mov
jo
adc
loope
pop
pop
cdq
rcl
repnz
les
ins
jp
push
adc
popf
add
dec
arpl
mov
sub
imul
jp
sti
rcl
(bad)
xor
cmp
pop
(bad)
jne
and
jge
je
int3
and
and
xchg
aam
push
fld
cmp
movs
std
mov
inc
fidivr
xchg
fs
and
fst
out
cmp
adc
pop
in
cmps
dec
and
and
push
into
ret
popa
cld
in
jno
xor
add
add
not
dec
or
call
inc
add
jp
mov
int3
(bad)
stos
cmp
sbb
xor
adc
push
push
repnz
inc
mov
fwait
shl
xchg
sti
je
call
adc
into
and
mov
or
or
mov
dec
dec
repz
jmp
mov
shl
sbb
mov
cld
add
addr16
jbe
xchg
jns
and
push
sar
sbb
shl
inc
mov
in
jae
mov
dec
xchg
dec
dec
sub
mov
sub
xchg
loope
xor
adc
or
xchg
in
lods
js
call
je
outs
dec
fstp
fist
xor
xchg
movs
inc
add
rol
cld
mov
push
fsub
mov
sub
xchg
mov
sub
xor
mov
lds
inc
je
mov
xchg
out
repz
call
cmps
out
sbb
push
cmp
inc
xor
lods
xor
int3
dec
add
cld
xchg
or
outs
or
outs
scas
call
add
sub
sbb
cli
pushf
test
xor
xor
ja
out
ja
arpl
xor
rcr
movs
xor
fnstenv
or
repnz
out
(bad)
xchg
xor
retf
repnz
ror
push
sub
inc
fisttp
push
ret
pop
xchg
popa
inc
(bad)
cmp
xchg
and
loope
scas
aas
sbb
inc
test
out
daa
in
test
(bad)
sar
jo
mov
js
rsqrtps
in
or
pop
addr16
push
rol
sub
cmp
jns
data16
push
in
mov
jnp
ins
sub
xor
cmp
jmp
cmp
mov
imul
sbb
or
jbe
dec
add
dec
mov
repnz
mov
push
lds
and
mov
jp
adc
scas
jo
mov
imul
call
or
into
jmp
add
mov
mov
mov
cmps
cs
(bad)
lahf
cwde
cmp
xor
ins
pop
sbb
fcomp
out
sbb
pop
pop
fwait
push
cwde
jecxz
int3
in
mov
fcom
xor
ds
les
jmp
dec
mov
push
cmps
jecxz
dec
cmp
jecxz
(bad)
dec
push
movs
inc
push
and
mov
stos
loope
adc
repnz
and
or
cs
inc
mov
repnz
mov
mov
pop
pop
push
add
pop
rol
ret
rcr
xchg
sbb
pop
xchg
mov
add
sbb
or
add
fcom
fld
test
dec
cmp
test
cmp
mov
ja
ss
fmul
hlt
lock
(bad)
jnp
sbb
inc
inc
ja
mov
cld
push
mov
push
sub
arpl
mov
and
xlat
mov
mov
lahf
sub
jge
(bad)
outs
mov
sub
inc
xchg
retf
push
je
movs
push
repnz
(bad)
addr16
xchg
push
(bad)
std
movs
mov
pop
jnp
sub
int3
xchg
mov
ins
popf
sub
mov
pushf
jg
add
out
adc
mov
scas
xchg
or
dec
push
nop
sbb
out
popa
jno
push
lock
cmp
rcr
push
ja
mov
fcom
push
loop
js
dec
cdq
fs
pop
mov
pop
xchg
jae
imul
pop
movs
out
cmp
lods
test
xchg
or
push
adc
data16
xchg
cli
jmp
inc
or
and
lea
dec
sub
shr
sbb
scas
pop
push
adc
dec
aaa
div
inc
nop
inc
cdq
xor
push
cwde
cld
mov
iret
int
push
sbb
das
popa
add
in
loope
ss
mov
into
addr16
pop
sahf
cmp
cmp
dec
daa
add
dec
inc
and
add
cmps
pop
sub
ror
jae
into
push
mov
inc
ficom
(bad)
pushf
and
ret
adc
gs
mov
jb
scas
xor
ins
lods
cwde
dec
xchg
mov
(bad)
retf
enter
es
(bad)
clc
aad
and
xor
mov
inc
inc
or
in
sbb
and
sub
cli
mov
push
out
and
push
outs
jecxz
mov
mov
ret
mov
push
es
iret
fwait
push
jecxz
push
int3
(bad)
cmc
mov
and
repnz
mul
in
clc
mov
xchg
mov
pusha
lods
pop
sbb
sub
lods
cld
retf
mov
cmp
xor
dec
pop
pop
or
sar
enter
sub
jecxz
fs
and
in
inc
cli
cmp
test
mov
adc
adc
pop
aam
xchg
jmp
sub
pop
mov
push
jo
fsub
adc
adc
imul
fcomp
fwait
int
sbb
push
fadd
jmp
xor
arpl
ss
test
push
call
test
sahf
mov
inc
out
lds
add
or
mov
or
ds
jecxz
ds
call
fnsave
and
rcl
pop
aas
and
icebp
inc
popa
int3
jp
mov
movs
push
or
pop
push
add
adc
test
stos
xor
pop
dec
inc
cs
in
imul
sbb
daa
and
test
test
ret
imul
jbe
(bad)
xor
lods
mov
sbb
retf
cmp
sub
xor
ja
cmp
push
retf
stos
dec
ret
pop
push
add
push
stos
cmp
push
bound
or
add
mov
outs
mov
push
pop
push
aam
int3
xchg
dec
push
push
adc
das
push
sub
add
popf
mov
pop
inc
stos
push
test
push
sti
ror
jne
dec
or
imul
or
push
lahf
int
mov
ror
mov
jle
push
inc
push
into
jno
lods
add
daa
ja
inc
rcr
jmp
sbb
jbe
dec
out
mov
call
cmp
sti
fs
pop
mov
call
jb
adc
pop
(bad)
mov
ins
push
push
pop
sbb
adc
fsub
add
ds
and
pop
inc
mov
xchg
or
dec
pop
jl
shl
out
dec
or
jno
aam
mov
les
push
xchg
iret
pop
push
pop
mov
sub
clc
push
cwde
mov
outs
cmps
mov
mov
enter
xor
mov
push
in
sub
xchg
fiadd
inc
sub
pop
mov
and
inc
sbb
fwait
dec
mov
(bad)
rcl
push
jnp
jg
xchg
mov
xor
fnsave
fmul
fistp
jl
or
and
(bad)
scas
(bad)
fcmovnbe
add
or
jl
cmc
pushf
push
xor
inc
in
repnz
pop
retf
repnz
xchg
inc
sbb
sti
shl
popa
mov
jns
pop
retf
cmp
aad
hlt
mov
push
stos
lods
fwait
arpl
sbb
mov
cs
xlat
push
aad
imul
out
add
jmp
mov
or
dec
mov
xchg
push
jp
sbb
(bad)
imul
fidivr
lods
dec
aad
pop
ret
shl
xor
outs
fsub
ss
cmp
xor
adc
repz
push
adc
loope
dec
dec
ins
adc
sub
pop
es
(bad)
mov
xor
jne
mul
(bad)
xor
push
xchg
ret
fistp
out
cwd
(bad)
mov
pop
dec
add
sub
cmps
daa
push
jns
rol
neg
mov
ds
sbb
in
and
mov
les
push
push
retf
ret
aaa
lock
pop
sub
mov
ins
inc
aas
inc
mov
xchg
imul
push
add
outs
mov
cmps
jmp
mov
mov
les
(bad)
js
cld
shl
and
mov
mov
test
sbb
push
(bad)
and
sahf
(bad)
out
enter
pop
cmp
out
das
out
mov
inc
scas
ins
jnp
inc
movs
js
dec
sub
repz
(bad)
rcl
retf
dec
adc
out
xchg
in
pop
cdq
or
inc
pop
mov
(bad)
jl
in
xchg
sub
movs
out
lahf
jmp
rol
retf
push
shr
mov
jmp
lea
or
in
pop
out
nop
mov
jg
sub
inc
ret
cmp
push
addr16
fisttp
test
(bad)
mov
sahf
sahf
clc
jae
nop
ror
test
push
jmp
push
retf
jno
hlt
arpl
sar
sbb
mov
xchg
sar
pop
push
fwait
das
es
ret
pop
in
outs
mov
mov
call
lds
xchg
inc
and
cmp
loope
dec
mov
aam
mov
hlt
neg
fist
ja
lods
mov
or
adc
pop
in
mov
sahf
xchg
mov
test
inc
jb
imul
sti
jbe
or
mov
adc
add
stc
mov
sti
push
outs
gs
push
push
cdq
or
cli
in
shr
xchg
loope
rcr
sbb
das
std
add
cld
push
or
imul
sub
int3
fidiv
and
std
dec
push
sub
pop
movs
in
int3
or
aam
xor
das
retf
mov
not
mov
and
and
jge
lock
xor
and
xchg
jg
psubd
ss
mov
xor
test
push
(bad)
adc
out
mov
stc
inc
es
imul
hlt
imul
leave
repnz
xor
pop
cmp
xchg
lods
hlt
xchg
mov
add
jne
cld
cmp
cmp
imul
and
and
pop
out
or
cmp
pop
dec
push
or
pop
xchg
mov
fs
scas
aas
aam
pop
aas
xor
mov
push
xchg
mov
jl
in
or
test
pusha
div
xor
adc
es
mov
inc
fnstenv
jb
imul
adc
mov
aad
push
pop
inc
aaa
aaa
in
xor
pop
loop
push
outs
xchg
and
xor
inc
mov
inc
aad
in
cwde
adc
test
jp
das
push
inc
inc
stc
jne
clc
or
dec
mov
in
or
mov
jg
out
jae
loopne
cdq
stos
add
sub
(bad)
cmc
leave
sbb
cmp
sub
sub
xchg
or
add
push
stos
fidivr
aaa
sub
fsubr
into
cwde
mov
cmp
aas
xor
into
scas
ins
rcl
mov
adc
jl
mov
jns
cmps
repz
fld
shl
fldenv
imul
int
pop
mov
or
cmp
xchg
jb
jge
xor
xchg
lock
or
xor
add
les
lods
jae
std
aam
jnp
inc
out
add
sbb
sub
push
ss
push
adc
jb
dec
test
je
test
sub
aas
mov
xchg
cdq
push
repnz
inc
or
movs
cli
loope
dec
push
jmp
mov
shl
mov
retf
pop
xchg
out
sbb
xor
ficomp
xchg
pushf
lds
cmps
je
popa
icebp
stos
repz
fs
push
pop
jns
and
jge
scas
xor
xchg
xor
movs
test
outs
adc
xor
xchg
mov
fist
push
push
jo
jno
test
in
or
jle
and
jns
hlt
and
jmp
out
jle
mov
push
mov
inc
pop
fbld
enter
loope
fdivp
sub
inc
jecxz
nop
ins
imul
icebp
add
mov
dec
jae
lods
or
(bad)
das
jmp
inc
ins
js
adc
jmp
and
xchg
or
or
push
sti
or
sar
xlat
adc
in
jmp
shl
cli
out
(bad)
mov
dec
cmc
jno
jns
cli
fwait
sbb
xor
push
mov
repz
pop
mov
mov
test
sbb
and
aam
pop
xor
jp
and
lds
sub
push
pop
in
out
ja
push
add
imul
pushf
or
pop
mov
mov
mov
adc
in
stc
jb
mov
(bad)
das
ja
xor
mov
mov
pop
mov
dec
xchg
mov
or
cdq
xor
pop
pop
lock
lods
inc
cli
lds
push
jnp
jmp
stc
mov
leave
lahf
pop
adc
add
mov
adc
xchg
inc
mov
pop
jmp
and
out
and
enter
sub
aam
xchg
ins
xchg
mov
mov
ins
mov
shr
mov
(bad)
xor
inc
pop
(bad)
push
pusha
dec
jns
sub
stos
rcr
sub
aad
rcr
sbb
push
aaa
popa
inc
movs
into
aad
mov
adc
push
inc
pop
leave
mov
jle
cld
adc
xchg
and
scas
retf
loopne
sbb
xchg
scas
adc
aas
dec
and
jbe
aas
fld
aaa
jmp
push
push
les
add
inc
ret
nop
jl
fild
mov
(bad)
xor
pop
add
cs
les
test
test
sub
pop
adc
sbb
sbb
push
scas
sbb
sub
pop
pop
xchg
shl
dec
sub
gs
in
mov
neg
add
jb
and
pop
outs
das
fcom
(bad)
fcom
dec
shr
push
lods
mov
fidivr
test
adc
out
aad
pop
mov
pop
in
mov
mov
shl
push
pusha
dec
xor
test
mov
rol
or
adc
xchg
push
sub
ret
adc
inc
mov
aam
mov
shl
div
dec
inc
xchg
pop
cmp
sbb
or
jg
xor
xor
pop
das
pop
or
int3
les
mov
pop
sbb
cmp
mov
out
mov
cmps
bound
jmp
fnstsw
lea
mov
xor
rol
xchg
aaa
test
jae
adc
jbe
add
push
or
add
into
stc
push
push
xchg
jne
inc
(bad)
jle
ret
jg
lods
cli
scas
mov
jmp
aam
std
ror
pusha
dec
dec
(bad)
fcomp
stc
mov
pop
imul
(bad)
xchg
push
cmp
gs
test
sub
dec
or
rol
mov
push
fwait
mov
clc
mov
arpl
xchg
pop
cmp
or
fisub
mov
ins
adc
cmps
jge
jns
add
das
xchg
mov
and
pop
inc
add
sbb
sub
xchg
mov
loope
leave
popf
xchg
movs
lods
popf
pushf
ja
cmps
test
mov
int3
push
shl
ret
test
dec
shr
jge
or
shr
popa
sub
pusha
stos
ds
pop
push
mov
or
adc
sahf
mov
sbb
pop
popa
gs
out
in
cmps
out
sub
dec
imul
mov
cmps
fld
pop
inc
mov
cmc
or
pop
stc
sub
int
sub
dec
retf
addr16
lea
or
in
stos
and
dec
icebp
sbb
sub
pushf
xchg
sub
call
movs
xchg
in
lods
arpl
jns
cmp
pushf
dec
lods
icebp
(bad)
call
sar
int
xchg
lahf
test
xor
dec
into
push
xor
cwde
sbb
sbb
push
pop
jp
sahf
adc
test
pop
xor
dec
jb
jle
hlt
push
ror
cmps
add
add
stc
cld
imul
xchg
xor
mov
sbb
not
cdq
or
mov
(bad)
xor
jns
fisttp
ds
enter
push
pop
push
pushf
aad
cmp
retf
cld
lea
push
dec
ficomp
adc
xor
adc
sub
inc
or
lock
xchg
fadd
fcmovnb
sbb
pop
or
mov
jae
and
movs
push
clc
mov
or
pop
inc
sbb
pushf
mov
mov
or
cmp
mov
xor
pop
lds
mov
sub
or
inc
aaa
or
push
cmp
sbb
loop
repnz
add
jp
mov
lds
pusha
push
inc
fistp
std
jae
add
adc
push
dec
sahf
sti
jbe
or
mov
sbb
xor
mov
fucomp
mov
test
sbb
pop
sbb
sub
cdq
div
ds
(bad)
mov
push
gs
fstp
outs
pop
in
mov
repz
mov
or
or
out
iret
cmps
xor
xor
push
call
arpl
pop
(bad)
(bad)
mov
inc
and
nop
(bad)
jae
pop
mul
push
adc
mov
je
test
inc
movs
pop
unpcklps
pop
std
and
mov
sub
sub
adc
mov
jmp
enter
(bad)
pop
mov
jb
mov
shl
lods
xchg
xor
or
push
fnsave
icebp
leave
imul
xchg
loopne
(bad)
(bad)
sbb
das
dec
inc
add
inc
mov
and
push
jg
dec
clc
or
mov
rcr
xchg
mov
cmp
mov
cmp
dec
mov
push
jecxz
out
push
xchg
adc
xchg
retf
push
fwait
inc
pop
push
mov
icebp
push
xchg
xchg
adc
rol
inc
cmp
sbb
test
and
push
pop
js
pop
sub
aaa
iret
lods
ins
jl
xor
push
je
lahf
push
pop
adc
out
movs
sub
xor
(bad)
pop
pop
or
push
ret
daa
pop
dec
xchg
adc
ficom
(bad)
and
mov
stc
and
ja
je
xchg
mov
mov
xchg
sar
xchg
in
jo
popf
sar
jmp
sbb
mov
add
mov
jo
fidiv
push
or
mov
sub
mov
aas
retf
stos
in
pop
and
mov
mov
in
or
fsubr
add
xchg
adc
movs
mov
jmp
xor
dec
or
mov
enter
xor
in
lds
push
inc
adc
test
and
push
mov
add
aas
icebp
jl
in
push
sahf
push
adc
mov
push
jge
adc
shr
dec
into
jne
adc
inc
add
xchg
(bad)
pop
sbb
push
mov
pop
jl
out
jge
scas
sbb
or
scas
(bad)
sub
stc
icebp
and
mov
pop
mov
mov
inc
repz
out
das
(bad)
imul
dec
imul
push
xchg
or
xchg
and
mov
(bad)
lods
dec
pop
out
cmp
sti
push
add
jns
mov
out
(bad)
sti
sub
and
mov
adc
imul
xor
ins
cmp
out
and
pop
arpl
mov
pop
hlt
sbb
and
call
xchg
sbb
and
and
pop
mov
push
hlt
push
xor
adc
mov
lods
jmp
call
cmp
js
imul
mov
mov
pop
sub
jne
cmp
and
dec
mov
jmp
jmp
sub
hlt
mov
xchg
cld
pop
mov
inc
sar
retf
jo
inc
stos
jb
test
push
cmp
cld
mov
rcl
inc
jmp
movs
les
fnsave
mov
mov
and
je
pop
push
icebp
xchg
mov
add
in
(bad)
mov
aam
enter
mov
add
and
scas
pop
and
push
mov
add
pop
outs
xchg
dec
lock
jmp
add
jns
xchg
and
jle
xor
lock
push
pop
mov
aam
xor
call
mov
mov
pop
push
iret
int3
mov
leave
rcr
cld
enter
mul
sar
mov
je
into
int
pop
sbb
mov
data16
daa
addr16
and
xor
and
push
scas
pop
pop
lahf
sub
mov
push
lds
jno
neg
adc
inc
inc
pop
je
pop
adc
xchg
mov
into
mov
div
xchg
jae
stos
gs
sahf
dec
mov
push
fstp
dec
movs
adc
psubsb
pop
xchg
push
icebp
push
mov
cmps
or
cdq
sahf
leave
adc
sti
scas
cmc
sub
retf
push
pop
pop
sbb
mov
pop
add
call
aad
sbb
push
cmp
fcmovbe
ret
mov
mov
test
pop
popa
sub
and
sti
adc
push
cmp
jb
add
out
gs
cmc
mov
dec
ss
pop
inc
out
xor
mov
in
inc
rcl
cmp
call
adc
hlt
inc
icebp
dec
sbb
xchg
mov
idiv
mov
pop
inc
push
pushf
push
and
rcl
imul
xor
xchg
shr
xor
dec
jns
adc
retf
sti
push
add
xchg
adc
cmps
not
les
iret
sub
and
sbb
add
lods
xor
movs
dec
ins
xchg
push
pop
push
adc
iret
popa
mov
push
test
fsub
jnp
mov
sub
xchg
fld
stc
data16
pop
sbb
and
out
push
daa
jge
jae
sbb
mov
sar
fwait
das
and
test
stos
sub
ds
jp
dec
jnp
jl
dec
xchg
retf
inc
push
push
imul
xchg
dec
rcr
push
xchg
dec
daa
cs
mov
push
lds
mov
int
mov
into
icebp
dec
pushf
rcl
fs
sbb
adc
xchg
enter
retf
fld
mov
(bad)
cmp
rol
push
mov
lods
mov
into
mov
cmp
cmp
ds
pop
(bad)
xor
xchg
add
push
pop
popa
inc
(bad)
dec
inc
addr16
xchg
jne
jae
icebp
xor
push
and
or
or
ret
movs
mov
or
sbb
pop
ss
mov
mov
es
push
clc
or
pop
mov
jne
(bad)
jns
popf
mov
cmps
es
mov
fcmovu
and
add
and
cmp
dec
out
cmp
or
test
iret
adc
fcomp
push
aaa
(bad)
aaa
xchg
sub
in
repnz
jmp
pop
sub
leave
push
xchg
push
idiv
cli
jno
mov
int3
push
sbb
pop
sbb
or
iret
add
call
or
push
sbb
lods
xor
stos
pop
mov
bound
cmp
(bad)
or
mov
popa
or
fmul
xchg
cwde
mov
or
out
(bad)
xor
xor
addr16
repz
enter
mov
cdq
jp
jne
mov
iret
or
ins
or
nop
sub
test
adc
jle
inc
in
js
push
cmp
(bad)
jae
adc
lahf
gs
fs
inc
es
sub
je
xor
outs
shl
cmps
sbb
sub
dec
or
or
imul
imul
movs
inc
adc
stc
rcl
mov
in
add
sub
cwde
sub
cmps
mov
mov
stc
test
mov
fwait
popf
call
mov
dec
fisubr
push
jmp
mov
ins
out
call
(bad)
enter
icebp
stos
jmp
jbe
jp
push
jmp
mov
(bad)
aad
add
xor
mov
xor
in
jne
and
xchg
scas
mov
dec
push
retf
mov
mov
div
push
outs
std
xor
mov
or
loope
mov
pop
pushf
fstp
inc
dec
inc
inc
movs
pop
int
out
mov
dec
dec
fidiv
mov
test
js
call
sbb
and
xchg
adc
dec
mov
dec
bound
movs
mov
ret
jp
rcl
push
sbb
xor
ja
sbb
cmp
mov
cmp
jp
movs
xchg
or
push
cmps
dec
rcr
or
shl
rcl
dec
ins
imul
sub
xchg
cmp
mov
loopne
not
fdivr
sti
in
enter
pop
sbb
sbb
add
icebp
jns
lock
pop
outs
pop
les
add
sub
lods
in
xchg
das
cwde
push
jmp
(bad)
call
jecxz
sbb
retf
imul
mov
push
lds
inc
jns
xchg
nop
data16
shl
idiv
or
and
inc
mov
mov
xor
pop
mov
pushf
and
mov
retf
sbb
xor
(bad)
or
xchg
mov
icebp
dec
imul
xor
inc
jg
sbb
dec
add
jmp
jp
gs
and
jbe
stos
pop
adc
mov
jno
xor
jno
stc
int3
repz
(bad)
jle
fidiv
retf
outs
ret
mov
gs
xor
adc
inc
xor
or
leave
mov
in
js
stc
inc
cli
jmp
pop
jne
inc
cmp
push
jg
xchg
sbb
cmp
cld
retf
xchg
cmp
sbb
mov
xchg
sub
xor
rcr
cmp
cmp
inc
rcl
mov
xchg
in
movs
je
sbb
hlt
out
int3
add
repnz
ror
sbb
fnstcw
xchg
inc
inc
adc
mov
ins
adc
push
jno
push
ficomp
mov
cmps
pop
dec
pop
mov
dec
add
mov
xchg
lods
stc
int3
or
daa
(bad)
sahf
in
pop
jge
mov
sub
push
sub
lahf
scas
and
cmps
pop
jg
ret
add
ins
call
lock
jns
or
or
pop
lahf
mov
xor
and
xchg
sbb
daa
nop
ret
jbe
cwde
fwait
mov
xor
sbb
or
shl
inc
cmps
fucompp
ins
repz
cwde
sti
out
call
push
repz
pop
adc
jg
cdq
sub
sbb
test
loope
xchg
jecxz
ss
sub
ds
cli
mov
adc
jg
hlt
(bad)
aam
dec
jl
dec
mov
or
hlt
scas
mul
jns
dec
pop
push
mov
aad
aam
push
in
arpl
popa
movs
xlat
pop
and
sahf
mov
dec
cmpxchg
sub
sbb
je
addr16
mov
dec
ficom
shl
xchg
jns
mov
xlat
call
mov
and
cmp
jecxz
cmp
jmp
mov
(bad)
mov
mov
push
repz
push
push
mov
and
xlat
(bad)
and
lahf
xlat
pop
das
ror
enter
inc
push
outs
mov
data16
lahf
out
pop
cmps
in
lods
add
cs
and
inc
jge
jb
sbb
(bad)
test
jle
outs
jo
cmp
jae
hlt
stos
or
les
fdiv
loopne
lds
push
adc
sub
aam
or
aas
and
sahf
aad
ins
inc
out
int3
jl
mov
pop
pop
xchg
push
mov
inc
es
add
xchg
pop
and
les
(bad)
sbb
mov
add
xchg
push
sub
jp
sub
jp
xchg
ret
pop
(bad)
cmps
jge
xchg
xchg
test
adc
mov
jmp
jge
sub
imul
jge
js
psrlq
fisttp
inc
cmp
in
inc
jmp
ja
dec
jnp
or
and
loop
jmp
mov
scas
imul
addr16
jmp
mov
pushf
cmp
or
sbb
cmps
cs
xchg
fcomi
mov
adc
and
xchg
xchg
test
mov
cdq
and
pusha
add
dec
ins
xor
xchg
loopne
jecxz
retf
cmp
jp
scas
and
popa
movs
stos
push
cmps
and
movs
cmp
outs
movs
fwait
out
int3
xor
add
xor
pop
xor
and
icebp
cli
inc
push
cmp
fnstsw
hlt
or
xor
mov
lahf
mov
lods
add
mov
xchg
xor
ja
(bad)
out
in
jge
sbb
popa
sbb
push
cmp
imul
cld
(bad)
jo
int3
add
sti
jle
clc
inc
mov
mov
inc
imul
js
jne
lock
and
popf
push
out
or
jb
arpl
sbb
enter
in
cmp
(bad)
mov
xchg
aaa
dec
cmp
cmp
mov
imul
push
hlt
clc
jb
mov
cdq
icebp
cmc
jmp
sub
inc
inc
dec
es
xor
test
jb
fld
je
pop
mov
push
(bad)
xor
movs
(bad)
sub
in
xor
push
jns
mov
push
mov
push
ins
(bad)
in
xchg
xchg
inc
mov
xor
enter
ins
hlt
xchg
das
cs
ss
daa
in
cs
ret
jns
or
and
shl
cmp
inc
pop
sbb
daa
pop
lea
int3
je
and
adc
ss
mov
fimul
jae
lea
xchg
jmp
sbb
add
add
hlt
(bad)
out
cmp
sub
imul
fdivr
sub
inc
movs
lods
pop
add
or
pop
push
lahf
(bad)
pushf
adc
pop
cld
adc
dec
mov
lock
xchg
cmp
sbb
fst
mov
jmp
xchg
sbb
jmp
shl
inc
mov
iret
adc
js
call
xor
inc
hlt
addr16
loope
jecxz
mov
in
loopne
pop
jns
or
dec
or
inc
add
mov
out
addr16
and
jmp
pop
or
in
jno
jg
xlat
imul
jno
stos
cmc
push
inc
cs
adc
inc
pop
addr16
cmp
int
popf
mov
loop
test
imul
std
xor
outs
out
jae
int3
and
and
pop
bound
cdq
bound
aas
mov
fmul
not
cmp
adc
mov
xor
ins
xlat
mov
jmp
das
gs
add
gs
mov
movs
mov
mov
(bad)
stos
js
outs
hlt
repz
dec
xor
dec
mov
(bad)
rcr
cmps
dec
fild
add
shl
jo
adc
int
sub
es
sar
add
test
cmc
pop
mov
call
pop
lock
or
sbb
add
(bad)
fwait
lahf
pop
pop
xchg
into
mov
cmp
ss
or
xor
jo
pop
cmp
test
mov
out
inc
test
jle
arpl
ror
repz
(bad)
outs
dec
and
lods
add
cmp
xchg
push
pop
mov
pop
sub
ss
fstp
cmps
lock
(bad)
pop
mov
out
mov
adc
(bad)
pop
cli
hlt
in
enter
xchg
retf
dec
mov
adc
xor
adc
out
stos
pop
inc
imul
jl
dec
nop
inc
aad
jg
mov
jo
sub
mov
enter
in
cmp
and
pop
dec
cmps
imul
bound
outs
sub
fwait
push
jo
outs
(bad)
out
mov
jns
and
jo
push
shl
outs
add
(bad)
cmps
ret
leave
fsubp
mov
add
loop
xor
xchg
mov
push
and
pop
or
adc
jno
jmp
ins
or
shl
sub
out
fs
xor
outs
lock
lds
mov
adc
sti
(bad)
rcr
xchg
cmps
repnz
add
test
push
mov
mov
les
and
sbb
sti
sbb
sub
inc
popa
jmp
push
jge
repz
shl
jg
or
loopne
ja
leave
imul
movs
push
mov
out
jmp
mov
pop
xchg
sbb
out
cmp
mov
add
fisttp
mov
mov
mov
retf
aad
mov
(bad)
mov
push
dec
pop
fadd
dec
adc
sub
inc
jl
test
cmp
jge
out
lea
mov
pushf
call
inc
shr
bnd
imul
pop
xchg
loopne
lods
aad
and
lahf
outs
jecxz
mov
popf
mov
add
stos
push
xor
jo
sahf
pop
sti
enter
or
into
dec
sub
(bad)
and
xor
push
aad
rol
aaa
lods
add
mov
push
cmp
aam
popa
dec
fmul
pop
lods
push
scas
gs
jp
fcom
neg
mov
hlt
push
mov
xor
shr
mov
or
adc
imul
into
lock
mov
pop
jb
fstp
je
ret
inc
call
mov
sahf
test
fist
fmul
test
nop
or
mov
mov
xchg
and
mov
sbb
test
inc
rcr
and
es
sbb
pop
mov
push
sub
addr16
sub
mov
ins
dec
jl
(bad)
retf
cs
out
and
dec
xchg
je
jmp
push
aas
out
pop
xor
dec
cmp
adc
mov
std
cli
sub
and
ss
mov
pushf
inc
lods
les
mov
mov
int3
xor
adc
cmp
jbe
movs
push
and
fsub
xchg
or
or
into
push
cmp
push
inc
sub
pop
out
shl
stos
(bad)
add
shl
inc
je
call
and
and
aas
scas
pop
loopne
(bad)
(bad)
stc
pop
ins
fistp
fs
test
pop
push
pop
into
(bad)
adc
fcmovne
mov
mov
cli
mov
leave
jne
add
xchg
lahf
test
test
jp
mov
arpl
sbb
push
pushf
xchg
ret
popa
jl
jge
and
sub
mov
in
cmp
inc
sub
popf
mov
or
inc
add
gs
fisub
mov
mov
imul
test
jge
imul
jmp
and
push
sub
jp
jae
in
cli
fnsave
mov
fwait
rcl
dec
pop
mov
mov
fistp
movs
gs
push
mov
cld
xchg
dec
mov
rcl
int
les
icebp
mov
xchg
ja
in
or
jo
dec
mov
add
push
lds
jnp
mov
inc
das
cld
mov
repz
adc
fiadd
push
and
jnp
fst
push
jmp
repnz
sbb
pop
mov
(bad)
je
fimul
(bad)
sbb
out
test
and
jecxz
cmp
adc
imul
test
jbe
mov
adc
mov
pusha
enter
mov
push
cmps
push
cdq
into
sub
or
ror
outs
lahf
or
push
cmp
cmp
stos
inc
adc
pop
adc
ret
fwait
inc
mov
daa
call
cwde
out
and
cmp
mov
shr
or
ja
cmps
cmps
jmp
or
scas
inc
pop
(bad)
push
xchg
jge
or
sbb
lock
lds
jb
push
ins
test
mov
lods
fcomp
cmp
cmp
dec
(bad)
ret
js
retf
inc
bnd
pushf
je
push
(bad)
(bad)
aas
or
int3
xchg
xor
ret
adc
xor
js
(bad)
jle
shr
aaa
mov
pop
sbb
cmp
cmps
jecxz
(bad)
stos
bound
cwde
adc
in
mov
jmp
mov
sub
aam
test
loopne
and
adc
pop
shl
pop
or
inc
jo
data16
mov
push
push
test
mov
ret
push
ss
mov
push
mov
in
push
stc
(bad)
loope
xchg
fcom
sub
and
inc
js
ds
pushf
mov
cmp
stos
mov
pop
rol
and
pop
xor
not
inc
fistp
cmp
inc
in
mov
push
rcr
xlat
or
dec
xor
shr
mov
xor
pop
mov
ret
xchg
cmp
enter
loop
push
dec
retf
fidiv
mov
cmp
xor
mov
mov
add
jecxz
aaa
dec
sub
movs
jmp
iret
(bad)
rol
out
jno
mov
push
push
mov
jl
mov
(bad)
stos
push
jmp
mov
adc
movs
xchg
lock
call
(bad)
dec
pop
adc
(bad)
pop
sar
inc
dec
inc
lahf
pop
inc
test
ret
fidiv
pop
call
push
push
push
mov
xor
jecxz
cmp
test
xchg
xor
xor
out
xchg
push
mov
pop
mov
inc
mov
fsub
test
lea
cmp
ficom
xchg
in
jae
fidivr
into
jbe
mov
test
call
into
mov
sub
int3
xchg
js
inc
pop
loopne
mov
xchg
icebp
or
(bad)
and
push
push
into
nop
test
fnsave
(bad)
test
es
push
inc
sbb
dec
scas
sar
int
push
cmp
cwde
add
ja
imul
push
out
lds
std
dec
dec
jne
hlt
mov
add
nop
mov
out
loope
and
sbb
cmp
push
sub
or
cmps
es
inc
test
sub
sbb
mov
mov
jmp
int
cmp
cmp
dec
fld
popa
or
jns
pop
inc
div
(bad)
std
xchg
les
fs
mov
dec
out
aas
ds
lahf
pop
xchg
cmps
test
and
sbb
pop
adc
mov
ins
pop
or
ret
int3
imul
ss
xchg
pop
jmp
pop
jecxz
cmp
adc
cwde
test
in
xchg
repz
cmps
pop
mov
ficomp
imul
and
std
lahf
aas
in
outs
bound
jp
ja
or
mov
hlt
mov
xlat
repz
shl
loope
pop
rcr
jnp
rcr
test
jp
jp
cld
cs
inc
gs
xchg
mov
adc
bound
xor
ficomp
pusha
pop
(bad)
aam
retf
sar
out
call
aaa
cmps
outs
or
(bad)
sbb
mov
ins
shr
(bad)
out
jmp
ror
push
repnz
in
adc
daa
or
xchg
out
fs
and
outs
retf
jno
push
jg
add
rol
xor
dec
enter
aam
mov
ins
add
cmp
push
xchg
cmp
lods
les
pop
cmp
xor
xchg
call
push
daa
mov
cmp
call
and
jns
jle
sbb
mov
repz
imul
xor
inc
jge
inc
adc
mov
cld
fadd
add
cwde
loope
or
and
xchg
into
pop
pop
dec
in
xchg
or
jp
mov
jmp
xor
aam
out
inc
addr16
or
int3
adc
mov
cmp
xchg
stos
adc
xlat
popa
mul
mov
inc
cmp
imul
push
pop
pushf
lds
jnp
out
jmp
out
sbb
cld
xor
or
cli
fisttp
fldpi
pop
add
jl
mov
aam
stc
cli
and
inc
or
cmps
push
xor
iret
inc
jnp
mov
cld
jb
push
ss
mov
mov
cmps
test
cmp
or
xor
and
pop
or
ins
pop
mov
stc
jbe
lods
mov
dec
arpl
mov
fdiv
adc
xchg
cwde
loop
push
mov
mov
push
xchg
stc
in
scas
xor
adc
dec
jb
loope
cmp
(bad)
shl
aad
mov
push
lods
addr16
add
adc
cmp
ins
inc
repnz
add
hlt
mov
data16
rol
push
mov
jb
adc
mov
cmps
inc
das
loope
push
iret
mov
mov
fsubr
inc
retf
rcr
ret
cld
xchg
jns
add
and
xchg
dec
sahf
lahf
scas
bound
xor
test
push
mov
loop
push
push
mov
repz
cmp
lds
nop
or
xchg
cmp
xor
fs
mov
cmp
cs
mov
add
adc
rol
rcl
and
lea
imul
sbb
or
aas
cld
leave
add
enter
sub
push
push
jne
sbb
cmc
movs
jecxz
cmps
cwde
xchg
and
stc
call
int3
addr16
fiadd
call
add
fcomp
xor
nop
push
movs
fst
sbb
add
ins
je
fld
pop
test
in
enter
pop
dec
xor
scas
out
js
jle
dec
push
sub
jp
es
sub
std
aas
mov
and
fisttp
nop
pop
ret
icebp
addr16
std
dec
icebp
scas
push
popa
push
loope
adc
pop
push
(bad)
je
cmp
lea
mov
cli
inc
cmp
cli
js
jo
fwait
jno
stos
xchg
xchg
or
add
loopne
jne
(bad)
jne
mov
sub
cmp
retf
addr16
inc
mov
dec
cli
stos
adc
add
into
je
sbb
cmp
ins
mov
pop
xor
push
pop
jae
out
outs
stos
dec
ja
jo
lods
enter
mov
inc
in
jnp
jne
loopne
jo
es
sub
or
jnp
in
and
mov
or
mov
in
push
sub
ret
pop
adc
mov
mov
outs
cmp
mov
add
(bad)
push
out
call
mov
dec
call
mov
es
adc
pop
out
xor
xor
pop
neg
ja
pop
or
dec
(bad)
cli
add
adc
jo
mov
dec
inc
mov
stos
jmp
sahf
jg
cmp
mov
fadd
aam
add
dec
push
out
(bad)
aaa
dec
dec
add
clc
cli
sub
ret
fistp
mov
jbe
bound
inc
sbb
arpl
movs
jge
jb
mov
mov
mov
cmp
and
push
addr16
cs
rcl
retf
loope
xor
inc
mov
add
mov
mov
mov
mov
sub
popa
mov
into
sbb
enter
jp
push
shr
lods
or
push
adc
push
inc
jmp
pop
or
jmp
ret
in
xchg
add
cmc
dec
das
fwait
xor
inc
data16
jle
dec
rol
sbb
mov
jns
pop
xor
pop
shr
jmp
jo
pop
sbb
jl
pop
scas
adc
repz
lea
out
shl
ins
xchg
mov
std
scas
les
jb
sbb
mov
sbb
push
mov
rcr
jge
mov
imul
mov
xchg
or
shl
shr
inc
data16
add
and
ins
icebp
or
inc
bound
add
jbe
pop
mov
outs
pop
sub
pop
fsubr
or
ret
inc
jmp
jge
adc
jae
sahf
mov
(bad)
inc
pop
or
xchg
or
das
jmp
test
push
scas
inc
stc
mov
add
fwait
jmp
jge
xchg
mov
arpl
aaa
sub
aam
sbb
fs
fimul
ret
mov
sbb
mov
xchg
sub
cmp
leave
aam
das
cmc
xor
mov
xchg
jne
jb
xchg
je
mov
outs
sub
xchg
mov
dec
sub
mov
cmps
mov
mov
pusha
fnstsw
xor
xor
or
clc
in
ror
mov
imul
aam
pop
idiv
xor
jno
dec
pop
and
push
out
dec
gs
mov
mov
inc
call
mov
out
aas
jge
xor
push
adc
inc
sbb
cmps
add
les
cmps
rcr
push
iret
mov
or
and
cmp
mov
mov
adc
cmp
call
or
loopne
aam
mov
pusha
or
loopne
mov
mov
hlt
repz
mov
adc
retf
sbb
pop
sbb
inc
jecxz
loopne
and
into
fld
(bad)
rol
in
popa
and
jecxz
pop
mov
outs
jne
(bad)
jnp
pop
xchg
jmp
int
div
pop
adc
pop
ret
mov
(bad)
ror
push
mov
fldenv
push
int3
sbb
int
add
sbb
out
inc
sbb
cmp
pop
ja
add
sahf
pop
and
mov
sbb
cmp
add
jnp
cld
scas
inc
jmp
xlat
stos
mov
iret
nop
into
lock
jl
cmp
push
mov
addr16
sbb
test
scas
ret
out
mov
mov
imul
aad
test
and
es
and
mov
dec
jbe
pop
out
ret
sbb
pop
in
and
mov
fistp
push
cmp
sbb
repz
jg
xchg
sub
dec
bound
cmp
jmp
iret
xchg
push
cdq
icebp
iret
mov
jo
pop
out
jmp
jmp
sub
in
xchg
xor
xor
sbb
test
scas
pop
jbe
shl
sahf
inc
push
xor
inc
idiv
sti
(bad)
inc
aad
pop
sti
fcom
stos
sbb
les
out
clc
xchg
out
push
movs
add
mov
add
inc
sub
arpl
add
pusha
jmp
push
(bad)
xlat
in
ins
inc
scas
cmp
push
pop
jmp
daa
movs
mov
cmps
or
test
pusha
sub
cld
jmp
shr
adc
pop
cmc
fld
stc
outs
add
lds
cmp
(bad)
ds
mov
es
pop
loope
xchg
test
add
movs
and
xor
fcmovbe
pop
jb
fst
mov
inc
std
cmp
movs
mov
inc
cmc
pop
ret
sahf
adc
ret
bound
jle
pop
out
aam
pop
enter
adc
pusha
es
ss
shl
dec
ret
js
inc
xchg
and
inc
movs
push
mov
mov
mov
mov
cmp
sbb
pop
dec
lods
cmp
xchg
jb
dec
movs
xchg
or
add
clc
push
lods
ds
and
add
outs
jmp
dec
movd
(bad)
into
pop
retf
and
push
movs
mov
in
mov
mov
clc
sar
mov
adc
lahf
cmp
add
das
mov
fsubr
ins
mov
lahf
fwait
cmps
jbe
jg
or
xchg
inc
sbb
jg
mov
dec
sbb
dec
and
int
jmp
shl
in
pop
pop
sub
in
add
cmp
repz
data16
or
fsub
daa
mov
mov
mov
scas
mov
test
aaa
ss
and
ja
mov
xor
es
sahf
ret
mov
xor
mov
pop
je
cmps
loope
mov
test
in
inc
mov
xor
imul
shl
mov
fiadd
call
jne
mov
shr
(bad)
mov
pop
outs
(bad)
daa
stc
add
retf
test
xchg
int
jmp
push
mov
divps
mov
jg
jmp
mov
ror
repz
aas
xlat
adc
dec
leave
popa
sub
mov
je
arpl
je
xchg
into
and
out
mov
outs
test
xor
sbb
adc
loop
lock
jge
fist
add
xor
outs
dec
mov
sbb
add
pusha
test
mov
mov
push
out
fs
jo
pop
je
jno
stc
fidivr
xchg
mov
bound
dec
dec
pop
mov
out
cmp
inc
rcl
inc
rcl
das
repnz
xchg
mov
inc
jns
or
ss
shl
ror
or
jbe
xchg
jmp
fisub
call
add
cmp
mov
loop
ds
inc
sbb
ror
test
or
int3
mov
xchg
shl
xchg
pusha
push
or
fisubr
add
lahf
jae
push
mov
adc
add
inc
stc
mov
mov
stc
sbb
rol
cs
aaa
test
mov
fist
cmps
out
push
xchg
mov
stos
sub
gs
scas
ret
sbb
xchg
pusha
inc
pop
bound
scas
xchg
xchg
add
push
inc
adc
jl
xchg
and
xchg
pop
xchg
rcl
call
out
(bad)
mov
dec
xchg
inc
sahf
cmp
jns
xor
dec
xchg
inc
add
xor
add
outs
push
in
jno
loop
dec
sub
mov
and
or
rcl
imul
mov
pop
push
aas
ins
int3
add
add
scas
clc
mov
sbb
inc
outs
(bad)
xchg
mov
ror
ds
mov
sahf
out
xlat
mov
fiadd
push
gs
aaa
leave
mov
jmp
mov
in
jmp
mov
mov
inc
dec
fcom
inc
loop
cmp
jg
inc
inc
push
mov
push
cmps
mov
outs
jl
or
push
inc
dec
stc
mov
test
jae
cli
cmp
bswap
mov
xchg
inc
aam
adc
(bad)
push
adc
cli
shr
pop
pop
or
sbb
aam
pushf
popf
or
pop
mov
imul
movs
dec
stc
and
pop
inc
inc
or
and
shl
push
lods
dec
fidiv
cmps
and
cli
sub
inc
rcr
push
es
cmp
sbb
ins
xchg
jg
sbb
loop
inc
pushf
pop
mov
outs
repnz
dec
cmps
imul
ss
test
inc
mov
and
pop
xlat
cs
xchg
sub
sti
sbb
rcl
lahf
xchg
xor
popa
dec
mov
and
out
push
jle
call
imul
ror
call
pusha
dec
cmps
(bad)
jmp
or
xor
das
test
inc
jae
mov
lods
popa
data16
sbb
and
push
jge
inc
out
lods
jnp
cwde
jmp
add
jbe
push
add
es
jbe
sub
sbb
jmp
(bad)
pop
pushf
add
xlat
dec
fld
jb
xchg
dec
inc
arpl
popa
push
data16
dec
push
outs
je
adc
std
jno
and
iret
lahf
dec
push
in
inc
push
pop
cmp
aaa
mov
sub
ds
mov
sbb
or
xchg
repnz
hlt
mov
sbb
(bad)
cwde
mov
jo
push
int3
or
paddsw
or
out
add
stos
stos
data16
xor
cmps
cmc
(bad)
and
and
test
daa
stos
hlt
xchg
pop
std
pop
pop
jbe
lea
stc
dec
ret
aam
aad
cmps
jp
and
adc
push
ins
or
mov
repz
fsubp
add
nop
je
loop
leave
and
fild
xor
int
ret
xchg
retf
sti
test
int
mul
stos
sbb
dec
jecxz
dec
sub
mov
sub
adc
in
mov
and
adc
clc
sub
cmp
loopne
pop
mov
sub
lds
and
aaa
inc
sbb
popa
xor
mov
imul
inc
mov
retf
cli
sbb
or
mov
loopne
fneni(8087
mov
mov
cmp
jnp
adc
xor
pop
add
jb
hlt
jne
aas
and
in
sbb
mov
mov
scas
push
xor
sbb
rol
jecxz
add
int3
adc
fs
mov
sub
(bad)
push
imul
jmp
(bad)
sbb
sahf
xlat
movs
push
fadd
xchg
stc
retf
cmp
add
(bad)
sub
sbb
cmp
out
mov
nop
jnp
fbstp
cmp
in
dec
pop
dec
and
mov
in
cwde
aaa
fild
mov
movs
cmp
js
pop
aam
dec
inc
inc
out
sub
out
sub
fwait
inc
inc
call
lods
repz
(bad)
mov
xor
mov
aas
push
(bad)
xchg
retf
repz
mov
out
push
scas
pop
cmp
mov
out
or
inc
sbb
add
stos
adc
aaa
sbb
(bad)
jp
sub
push
xchg
jo
jnp
jecxz
cmp
and
cmps
or
jmp
jae
push
pushf
sub
push
int
(bad)
stc
xchg
adc
imul
jo
mov
ins
outs
or
jae
aas
jecxz
inc
add
or
pop
mov
(bad)
fdivp
jo
loop
arpl
retf
shl
arpl
dec
mov
in
xchg
imul
dec
fadd
int3
and
bound
xor
sbb
pop
out
pop
fs
pop
pop
clc
cmp
add
jle
jnp
stos
push
and
js
dec
lods
or
ret
mov
mov
pop
das
ja
retfw
add
out
jge
pushf
dec
popf
out
iret
sahf
add
pop
lds
dec
xchg
aad
lods
jp
lods
data16
add
shr
cli
push
sahf
imul
xor
ss
cmp
xchg
sbb
push
shl
adc
(bad)
iret
stos
(bad)
std
add
inc
je
movups
pop
outs
pop
dec
mov
xor
test
(bad)
cmp
scas
cmps
cmp
nop
movs
xor
push
xlat
repnz
pop
fstp
pop
pop
scas
je
enter
jo
aas
imul
xchg
jmp
retf
dec
sbb
jno
icebp
mov
xchg
call
xchg
push
xor
mov
lea
movs
fbld
fyl2x
xchg
jbe
mov
ret
mov
or
scas
popf
pushf
shl
mov
aaa
adc
xchg
fsub
lds
cmps
jmp
iret
movs
cmp
add
(bad)
in
daa
loop
leave
outs
lahf
loop
daa
push
jb
(bad)
in
cmp
adc
push
arpl
cdq
ss
adc
jns
aaa
and
push
mov
lods
idiv
aad
imul
in
inc
jecxz
stos
xor
ds
shr
call
sti
push
stos
pop
xchg
xchg
les
pop
aas
push
sbb
aad
mov
or
sbb
and
shl
mov
push
test
sbb
xchg
pop
sar
mov
xor
jo
in
sar
clc
mov
jmp
mov
mov
(bad)
lahf
cwde
outs
adc
out
inc
mov
icebp
mov
xchg
push
outs
je
dec
(bad)
enter
xchg
test
add
inc
sub
inc
push
lods
sub
js
jge
mov
and
out
cdq
repz
shl
clc
rol
jne
push
pop
dec
inc
pop
retf
mov
pop
xchg
and
pop
inc
pop
out
out
mov
paddw
inc
inc
lds
cmc
push
push
nop
popa
jmp
lods
jbe
sub
mov
in
fwait
aaa
or
jbe
pop
sar
or
push
mov
dec
call
fsub
in
xchg
icebp
adc
add
mov
push
outs
enter
adc
adc
rcl
xor
repnz
into
sbb
pop
lds
ins
xchg
dec
(bad)
xlat
and
sahf
push
add
push
jno
clc
push
fidiv
mov
mov
jns
add
and
pushf
pop
or
mov
or
ja
ret
mov
sbb
arpl
lods
cmp
pop
out
mov
sub
mov
xlat
stos
fimul
jecxz
out
aas
sti
test
inc
test
add
xchg
jge
pop
xor
sbb
div
sbb
ret
jbe
loope
cmp
cld
add
enter
test
(bad)
dec
or
dec
lahf
and
xor
mov
sar
(bad)
cmp
retf
cmp
mov
mul
mov
and
ins
and
inc
imul
jns
jno
and
call
scas
mov
jo
dec
jecxz
sbb
repnz
(bad)
dec
mov
retf
mov
dec
fcom
enter
test
inc
data16
push
push
lods
fs
sbb
and
mov
cmp
adc
out
pop
imul
aas
pop
jbe
repz
sbb
mov
mov
or
fcom
fcomip
pop
add
arpl
xchg
(bad)
cmps
(bad)
repz
push
cmc
mov
aaa
xchg
mov
adc
pop
sbb
or
mov
mov
mov
sub
out
push
xlat
test
cmp
mov
xor
pop
repz
in
jns
test
ret
sbb
jae
pop
xchg
nop
cmc
adc
mov
add
dec
mov
or
mov
ins
stos
pop
retf
mov
dec
inc
ret
dec
rcr
inc
mov
(bad)
pusha
push
cmp
test
push
pop
sub
mov
aad
mov
jl
call
mov
inc
mov
inc
or
out
lods
add
loop
es
push
jno
aad
sbb
jo
adc
push
repnz
push
pop
jmp
xor
fdivr
fcmovbe
int3
sub
cwde
mov
shr
push
xchg
xor
adc
aad
pop
outs
fbstp
mov
repz
psllw
fs
mov
dec
mov
les
aad
fsubr
imul
out
sti
test
and
(bad)
imul
xor
test
sbb
cmp
aam
rcl
sub
push
lods
mov
sbb
mov
(bad)
xchg
push
mov
inc
push
ins
movs
cmp
gs
pop
test
std
movs
aad
pop
push
outs
data16
(bad)
jmp
sub
cld
sbb
dec
or
dec
mov
cmp
xchg
pop
loop
fcom
out
xchg
adc
and
pop
fsubr
jns
cmp
ret
movs
mov
fstp
repz
popa
jg
(bad)
sti
pop
add
inc
cld
leave
xor
sti
jno
or
sub
out
call
ins
test
cmp
add
test
outs
push
mov
inc
ss
push
ret
pop
aam
sbb
sar
inc
add
mov
movs
inc
icebp
mov
pop
(bad)
jnp
(bad)
adc
cmps
sbb
test
retf
leave
xchg
xor
lods
repz
fisttp
xchg
call
push
shl
cmp
dec
jae
pop
push
jp
push
mov
xchg
inc
jno
push
sbb
outs
push
ret
movd
inc
mov
ret
hlt
xor
sbb
cmp
pushf
bound
mov
in
test
pop
adc
into
lods
push
jno
dec
fiadd
lods
outs
or
aas
dec
xchg
lahf
mov
or
add
add
mov
jno
sahf
jno
adc
cmp
push
xchg
out
xor
mov
dec
mov
(bad)
mov
inc
add
out
and
add
mov
jg
add
xlat
(bad)
out
movs
fnsave
(bad)
mov
movs
fwait
mov
cmp
add
mov
mov
mov
xor
mov
dec
imul
add
ja
cs
mov
ficomp
popf
in
cwde
pop
mov
cmps
xor
loope
cdq
push
pop
mov
pop
aas
pusha
fcmovu
sti
scas
adc
stc
or
or
imul
out
es
adc
push
dec
les
imul
sbb
ins
sbb
repnz
add
(bad)
jbe
popf
loop
mov
dec
sti
pop
inc
or
xor
mov
sbb
in
sub
loope
xchg
pop
mov
dec
xor
fiadd
xchg
jge
sub
sbb
retf
cs
inc
retf
sbb
imul
bound
or
adc
mov
dec
fstp
add
inc
jbe
mov
(bad)
pop
shr
jle
mov
call
and
(bad)
cmp
adc
mov
sbb
inc
outs
jmp
or
loop
xchg
(bad)
ins
inc
sti
jnp
add
lea
xchg
jecxz
pop
iret
(bad)
scas
retf
mov
sub
repnz
sub
jne
add
les
pop
sbb
or
push
aas
fild
xchg
mov
ret
scas
or
adc
sub
sbb
ja
cs
or
adc
and
push
(bad)
push
mov
add
fisubr
and
xchg
leave
in
outs
xor
(bad)
fld
aaa
push
xchg
fwait
popf
popf
sub
call
mov
push
sbb
dec
lock
mov
iret
loop
lods
pushf
shl
out
and
lods
rol
ins
sub
fwait
rol
test
rcr
jmp
cmp
dec
ins
xor
jecxz
add
fisubr
int3
pusha
adc
stc
dec
leave
jmp
pusha
into
out
add
push
js
loope
clc
pop
pop
cmp
arpl
inc
lods
movs
stos
push
hlt
jmp
jmp
std
xor
dec
inc
cmp
sbb
xchg
sub
stc
pop
adc
adc
push
iret
shl
retf
fs
scas
call
hlt
aas
repz
push
lea
sahf
mov
out
aad
mov
hlt
sub
out
mov
sbb
lahf
adc
jnp
clc
icebp
jle
imul
(bad)
retf
add
add
push
sbb
div
push
cmp
sub
js
jg
mov
stos
inc
pop
jns
out
mov
mov
(bad)
adc
test
shl
ret
sub
repnz
and
mov
inc
dec
int3
add
fwait
out
push
int3
ret
shl
or
sahf
es
pop
sbb
or
xchg
inc
jmp
push
cmc
icebp
mov
sub
mov
add
add
imul
cmp
(bad)
sbb
xchg
xchg
sub
test
pop
add
mov
and
mov
pushf
pop
je
cmp
outs
mov
bound
cmp
sub
lahf
or
sbb
xorps
xchg
(bad)
xor
jecxz
jae
icebp
pop
rol
pop
dec
cdq
push
imul
xor
in
mov
and
test
xchg
xchg
stos
imul
jno
bound
mov
in
enter
sbb
or
add
xor
test
sbb
addr16
mov
(bad)
pop
add
scas
cld
repz
xor
fwait
lods
pop
jmp
pop
sti
pop
inc
push
loop
jb
cld
cmp
jb
movs
or
(bad)
data16
inc
scas
movs
xor
jge
das
jo
sub
cmps
dec
movs
mov
leave
adc
call
adc
stos
fstp
and
cmps
test
mov
(bad)
leave
(bad)
and
and
inc
cs
jo
or
in
xor
ret
cwde
pop
and
in
ins
and
lea
pop
lock
in
xchg
and
pop
xor
add
jb
fucomi
and
scas
mov
cmp
jb
mov
test
gs
repz
xchg
je
adc
mov
mov
test
cmp
je
dec
enter
repnz
mov
aas
adc
jbe
mov
cmps
sti
dec
push
xor
fistp
jo
pushf
pop
fdiv
leave
rol
movs
mov
push
push
pop
xchg
or
pop
sti
fisub
or
daa
pusha
sub
in
sub
sbb
mov
int
retf
xchg
ins
cmp
jg
or
(bad)
icebp
jo
das
push
outs
mov
movs
out
jo
pop
sbb
data16
and
push
out
stos
sub
push
test
push
fcomp
out
loop
push
pushf
dec
fs
shl
and
push
shl
dec
(bad)
xchg
mov
pop
mov
push
add
jl
inc
sbb
imul
push
sbb
xlat
or
jno
sbb
aas
sahf
cdq
sub
test
xchg
adc
retf
outs
inc
push
fwait
pop
stc
call
popa
addr16
xchg
std
call
xchg
dec
(bad)
push
scas
or
inc
inc
dec
sbb
fisub
es
xor
sub
cdq
scas
pop
out
sbb
adc
or
mov
jb
mov
fld
mov
int
fnclex
or
mov
fwait
movs
out
or
xlat
dec
paddb
xchg
jl
dec
hlt
sbb
test
mov
mov
sbb
sub
mov
add
sub
jne
cmp
fwait
js
in
cwde
test
mov
ret
xlat
(bad)
fcomp
mov
push
cmp
jge
in
fst
lods
lahf
rol
icebp
cdq
iret
shl
ror
mov
scas
imul
push
sub
std
shl
jo
gs
dec
pop
cmp
cmps
clc
and
data16
adc
sub
jo
fsub
(bad)
(bad)
ret
xor
leave
inc
jno
push
ret
pop
add
adc
mov
(bad)
xchg
sbb
out
jge
jae
out
sub
mov
jle
inc
fild
retf
mov
loop
shl
(bad)
jge
pop
cmc
sar
jo
mov
cmp
jge
pop
xchg
lods
pop
outs
mov
jge
sub
jmp
and
inc
scas
iret
pop
enter
sbb
push
mov
mov
sbb
dec
loope
in
mov
into
jo
nop
ins
xchg
leave
xor
xchg
aam
xchg
scas
push
and
pop
xchg
jmp
jnp
pop
lea
dec
cmp
ins
scas
test
(bad)
out
cwde
stc
fnstenv
adc
iret
and
jle
mov
punpcklbw
or
push
jmp
and
adc
or
ret
pop
sub
movs
sbb
(bad)
data16
fcmovbe
cmp
dec
dec
and
loope
pop
mov
aam
sbb
inc
repnz
xchg
or
jb
loope
scas
inc
and
das
adc
call
(bad)
sub
pop
inc
pop
into
mov
dec
pop
cmp
mov
dec
mov
or
fidiv
loopne
adc
aam
add
vlddqu
push
adc
mov
sub
test
std
call
adc
or
aas
cmp
xchg
cmps
xchg
cvttps2pi
push
mov
mov
mov
xchg
sub
cmp
test
pop
mov
push
mov
cli
jmp
data16
push
xor
pop
js
into
out
scas
mov
pop
mov
in
adc
jge
fdivr
test
in
test
imul
xchg
jl
xor
and
cmc
fcos
stos
es
push
push
lds
mov
mov
sub
ss
out
push
(bad)
cmp
movs
inc
sar
add
jno
sub
ins
(bad)
mov
xchg
retf
jb
movs
adc
cmps
ficom
mov
popa
inc
clc
ret
xchg
mov
ss
mov
mov
pop
stos
add
(bad)
data16
in
xor
pop
dec
sbb
xor
sti
retf
test
call
pop
push
xor
jp
or
retf
rcl
jmp
xor
ja
fdiv
in
dec
std
pop
pop
cmps
and
sub
jle
out
into
or
xchg
and
stc
pop
repz
enter
dec
test
xor
cld
ins
aad
mov
ins
aad
dec
add
jecxz
mov
stos
jp
lods
loope
(bad)
and
in
out
loop
mov
inc
pop
cmp
push
cmp
cmp
push
aas
inc
mov
mov
rol
push
mov
in
outs
shl
aam
adc
jmp
sbb
jbe
adc
nop
les
and
cmp
in
push
ret
dec
rol
push
mov
loope
dec
inc
fimul
push
and
jmp
mov
mov
mov
sub
in
cwde
loope
pop
dec
xor
sub
frstor
out
sahf
push
rcl
push
or
mov
push
sbb
jg
cwde
mov
test
das
stc
jno
push
and
jns
and
pop
retf
push
sti
ret
call
fadd
je
and
inc
lahf
sahf
adc
cmps
xor
js
pop
aaa
xor
adc
cmp
movs
leave
dec
add
mov
pop
inc
shl
cmp
mov
loopne
mov
test
push
dec
popa
mov
aas
jle
arpl
sbb
mov
test
dec
adc
dec
cdq
pop
push
rep
adc
push
scas
jmp
xchg
xor
scas
bound
pop
mov
xchg
or
mov
push
lock
add
xchg
pop
addr16
clc
add
jmp
dec
xchg
and
loopne
js
leave
cmp
dec
(bad)
aad
xor
std
jbe
xlat
jg
movs
dec
jne
xchg
mov
add
loopne
icebp
mov
add
cli
mov
(bad)
test
idiv
fwait
jg
(bad)
push
jmp
jnp
mov
pop
jnp
pushf
sar
pop
mov
xor
je
or
mov
sub
pusha
lea
mov
pop
fstp
loopne
jmp
adc
in
das
int3
fadd
jae
xchg
or
ss
jno
mov
loop
cli
lods
mov
sbb
leave
sti
cmc
pop
test
pop
dec
ret
sbb
mov
push
inc
sub
pop
stos
adc
repz
scas
add
loope
adc
dec
cwde
js
shl
xor
mov
dec
xor
jmp
cmp
lods
sub
outs
ss
mov
fisub
add
xchg
add
je
nop
cmp
and
cwde
loope
mov
push
pop
in
dec
mov
stc
mov
mov
sub
fisubr
mov
jmp
mov
mov
lds
sub
cs
inc
not
push
jg
sbb
and
push
xchg
dec
out
ins
cmp
retf
fwait
or
ins
jo
cmc
mov
stos
repz
inc
cmp
in
cli
push
pop
add
fidivr
icebp
pusha
inc
stc
inc
call
ss
dec
es
in
push
xchg
push
repnz
aad
in
test
lahf
sti
cld
jmp
cmp
mov
(bad)
ins
push
dec
xor
add
xchg
inc
mov
leave
sub
(bad)
xor
mov
mov
mov
(bad)
sub
jl
ins
sub
retf
sub
fwait
(bad)
fnstenv
iret
pop
pop
aad
test
jbe
adc
aaa
push
shl
outs
nop
xchg
cld
loop
mov
sar
test
xor
and
enter
pop
inc
stos
push
mov
idiv
aas
pop
in
jp
in
test
xchg
or
and
cmc
leave
pop
push
sub
mov
sub
add
inc
sub
inc
fdivr
xor
ret
sar
leave
sahf
jp
adc
dec
rol
and
or
or
loopne
sub
mov
test
mov
sbb
les
or
fsub
call
sbb
aam
(bad)
pop
mov
sbb
ret
pushf
push
dec
retf
loopne
test
aam
shl
movs
mov
dec
mov
inc
xor
and
repz
jmp
and
nop
daa
int
ror
fndisi(8087
fistp
mov
mov
call
xor
ins
inc
mov
and
xchg
or
push
in
jns
call
popa
stc
inc
xor
js
fild
out
rcr
in
in
sub
sub
pop
scas
add
mov
sti
ss
cmp
scas
clc
mov
(bad)
xor
and
xor
dec
jle
cmp
xchg
adc
mov
jp
pusha
addr16
add
add
push
int
inc
mov
dec
pushf
js
lahf
pop
mov
mov
fsubr
ret
cmp
mov
xlat
enter
in
xchg
sti
mov
cli
out
dec
sbb
stos
aaa
fisub
mov
int3
lods
xor
push
shl
aam
sub
ins
movs
test
jecxz
scas
mov
arpl
sbb
int3
lock
in
xlat
xchg
adc
cmps
call
sub
jb
int
inc
pusha
add
jp
push
ds
(bad)
retf
es
movs
mov
retf
push
gs
dec
add
mov
das
sbb
test
stos
xor
lods
mov
jle
xchg
and
sbb
xchg
(bad)
je
int
out
mov
and
xchg
jae
test
inc
pushf
lods
data16
sbb
pop
xchg
mov
jmp
out
loope
and
rcr
pushf
push
sbb
sub
inc
or
cmp
xchg
ds
mov
mov
jmp
es
mov
das
fdiv
and
or
lock
(bad)
jnp
dec
(bad)
cmp
jmp
xchg
mov
jle
call
sahf
in
adc
cli
sub
je
repnz
arpl
ds
dec
or
gs
jb
(bad)
jns
bound
pop
push
sbb
(bad)
mov
push
inc
add
mov
pop
and
int
inc
cmp
xchg
lea
in
inc
cmp
inc
bound
mov
xchg
pop
cmp
sub
scas
jne
jnp
cmc
imul
(bad)
rcl
ret
(bad)
leave
xchg
pusha
fwait
repnz
dec
in
xchg
xor
(bad)
mov
in
cs
mov
sub
iret
xlat
xadd
cmp
cmp
aas
jp
dec
or
aas
(bad)
xchg
lods
ins
pop
ret
jmp
aam
adc
xchg
retf
(bad)
es
lods
pop
ins
and
dec
mov
sbb
dec
loop
dec
xlat
enter
adc
add
iret
xchg
xor
rol
stos
mov
(bad)
or
sub
jg
mov
dec
adc
inc
(bad)
mov
add
aad
(bad)
lock
pop
sti
outs
adc
mov
enter
and
test
cs
adc
rcl
or
add
mov
cmps
(bad)
adc
addr16
retf
or
dec
scas
jb
xor
jle
imul
fistp
in
sar
dec
aas
test
lods
pop
loope
lock
mov
test
scas
fidivr
sub
mov
(bad)
add
cdq
test
loopne
or
(bad)
(bad)
mov
xor
mov
mov
jno
push
dec
or
dec
gs
sbb
push
call
shl
ins
out
or
pop
cdq
xchg
stos
cmp
inc
push
sbb
push
retf
mov
dec
std
sub
xor
push
sbb
movs
adc
out
sahf
fild
lds
lods
pop
jmp
test
pusha
repz
mov
repnz
or
jns
sar
cmps
scas
ja
wbinvd
sub
pop
pop
xchg
test
popa
mov
scas
mov
rol
test
sbb
(bad)
ds
std
and
xor
ja
in
ss
dec
stos
xchg
test
mov
shl
pop
push
jmp
inc
aad
cmp
jp
lock
icebp
xchg
pop
jecxz
or
sbb
pop
or
or
test
pop
sub
jecxz
(bad)
sbb
call
loopne
inc
and
jnp
nop
xor
call
fstp
(bad)
ds
rol
out
lods
aas
es
jmp
mov
in
movs
ret
test
mov
jge
into
retf
mov
arpl
dec
(bad)
loopne
xchg
push
or
dec
cld
mov
cld
inc
push
sub
int
xchg
out
leave
ins
pop
data16
(bad)
pextrw
adc
cmp
lds
push
retf
neg
pop
mov
pusha
xor
inc
cwde
int
shl
dec
jae
daa
addr16
loope
in
pushf
jl
sub
xchg
mov
jnp
lahf
xor
mov
adc
mov
bnd
jb
xor
dec
push
xor
repnz
idiv
or
xchg
jns
adc
rol
xlat
cmp
shr
jl
stc
and
in
and
xor
sbb
lods
pop
inc
jno
sub
jne
pop
call
daa
and
fcomp
out
dec
mov
ins
aad
pop
add
loop
gs
inc
or
ror
jge
div
ins
sahf
cmp
inc
sub
dec
shr
adc
fwait
scas
sbb
xchg
sub
out
(bad)
jne
add
cdq
out
ret
(bad)
inc
mov
sub
xor
sbb
(bad)
cmps
cmp
mov
or
cli
shl
push
int
scas
ret
cmps
mov
cmp
jmp
out
loopne
jp
arpl
mov
je
rol
lahf
pop
mov
mov
clc
scas
in
jo
stc
mov
out
repz
add
and
mov
jmp
movs
mov
xlat
xchg
cmp
mov
xchg
mov
les
ret
pop
lock
fild
fisttp
stos
mov
das
jg
xor
mov
lods
xlat
lahf
push
scas
pop
add
mov
iret
int3
cld
fndisi(8087
inc
cli
xchg
loop
add
push
out
push
mov
jno
pop
pop
adc
(bad)
test
cmc
adc
xchg
push
in
xchg
sbb
and
and
je
inc
repz
pop
pop
dec
xchg
xchg
pop
sub
pop
pop
jmp
inc
pop
fmul
sbb
jecxz
mov
or
mov
adc
push
jnp
adc
sbb
in
adc
push
push
stc
lods
dec
(bad)
out
adc
ins
(bad)
pop
sbb
test
test
int
repnz
add
or
push
movs
je
(bad)
mov
nop
movs
loope
int
mov
push
push
stc
xor
jecxz
call
inc
(bad)
mov
pop
dec
cmps
popa
fisttp
leave
gs
mov
xchg
xor
dec
jne
push
mov
mov
jno
push
and
scas
pop
xor
cmp
std
das
and
test
leave
push
call
jne
and
jno
lahf
inc
stos
in
pop
adc
inc
push
dec
(bad)
lock
jle
xchg
or
jp
int
dec
jne
and
mov
imul
jmp
push
(bad)
dec
cmps
push
rol
fst
cmp
outs
add
pop
inc
sbb
add
cli
push
mov
in
mov
mov
retf
or
mov
mov
mov
sbb
cmp
push
loopne
sbb
ss
jl
es
xchg
call
lods
fisttp
push
inc
iret
iret
cmp
int
dec
adc
xchg
into
out
mov
cmp
mov
outs
mov
scas
mov
test
pop
ins
iret
loop
jne
inc
sbb
push
repnz
int
fsubr
adc
cli
fsubr
scas
pop
(bad)
fmul
imul
mov
and
mov
sbb
lds
mov
(bad)
adc
push
jo
and
enter
sub
mov
sub
clc
push
inc
inc
pop
cmp
repnz
pop
mov
sub
xchg
call
inc
inc
js
mov
aas
jb
repz
loop
rcr
dec
neg
mov
xchg
mov
xor
dec
mov
outs
sbb
ficomp
cmps
inc
sbb
(bad)
pop
adc
xor
shr
sub
fisttp
or
push
das
cmp
test
enter
push
xchg
xor
or
out
sub
pop
shr
pushf
sti
call
adc
pop
test
mov
ficom
xchg
js
xor
mov
cmps
repnz
pushf
into
hlt
xor
xchg
rep
call
hlt
movs
aam
or
sub
or
rcl
out
arpl
fbld
xchg
std
mul
mov
pop
lds
loopne
in
push
pop
sahf
leave
rol
stc
fwait
cdq
lahf
jmp
mov
push
add
gs
sbb
(bad)
jnp
in
mov
retf
popf
(bad)
mov
and
retf
ja
(bad)
loop
in
adc
xchg
pop
and
cmp
ret
mov
or
sbb
mov
sbb
test
aad
movs
cmp
mov
rcl
jae
sub
jle
or
pushf
movs
or
ret
xchg
in
jnp
sub
js
lock
adc
ficom
call
add
lock
sub
(bad)
jge
cdq
mov
retf
stc
outs
sub
push
sbb
fnstsw
jp
std
dec
or
push
test
jne
out
sti
pushf
and
jl
pop
mov
mov
inc
pop
call
out
loopne
mov
lods
and
jmp
scas
dec
ja
adc
push
(bad)
gs
(bad)
cs
mov
inc
test
mov
fisubr
sbb
test
jbe
jecxz
mov
mov
cmc
cmp
adc
popa
mov
push
ss
sub
fsubr
add
jb
stos
test
dec
inc
fisttp
scas
jb
cmp
hlt
daa
or
in
cmc
in
jle
push
scas
cmp
out
rcr
clc
push
mov
inc
push
cmp
arpl
adc
inc
jbe
call
fs
dec
neg
call
int3
retf
mov
jns
push
jae
and
xchg
jle
add
sub
pop
in
mov
inc
sub
gs
imul
std
fsub
rol
push
jnp
jnp
xor
cld
add
xlat
pop
sub
loop
or
sbb
fsub
xlat
mov
pop
daa
std
movs
mov
dec
pop
pop
and
push
dec
jo
inc
rcr
xchg
aad
cmp
or
or
or
movs
retf
pop
mov
push
repnz
nop
das
ja
aam
test
sahf
scas
mov
std
mov
adc
xchg
popf
mov
pusha
mov
test
push
or
in
leave
ret
xchg
inc
mov
sub
mov
mov
sub
idiv
jae
jl
rcl
sub
lds
retf
int3
push
sub
ret
ss
cmp
(bad)
sub
sbb
gs
inc
or
mov
adc
and
lahf
in
push
je
or
inc
je
cmp
cli
hlt
jl
jnp
dec
add
and
stos
inc
outs
sbb
out
and
push
test
test
pop
popf
mov
sub
mov
jp
inc
sbb
xor
inc
popa
jle
sar
sub
hlt
mov
and
mov
dec
jecxz
stos
cmp
ds
xor
out
xchg
out
adc
mov
inc
push
push
imul
pop
cmp
fdiv
sub
and
fld
push
dec
cmps
xchg
icebp
xlat
mov
lds
adc
jmp
xor
and
xor
fxam
arpl
lds
mov
dec
stc
out
and
test
pusha
push
sub
sahf
aaa
ret
xchg
jl
lea
fcomp
mov
into
ja
pop
cld
jbe
retf
movs
sub
cld
sbb
xor
xchg
dec
pop
jne
mov
cmp
imul
in
mov
jns
mov
inc
and
aaa
mov
pushf
imul
mov
add
jecxz
jmp
jle
out
mov
pop
iret
rcl
in
lahf
lea
lock
call
leave
xor
fdiv
sbb
out
mov
cmps
stc
push
jmp
add
mov
mov
jecxz
adc
push
iret
aad
xor
fsubr
pop
aas
scas
push
push
sbb
retf
ror
inc
and
xor
sub
scas
dec
in
inc
dec
sub
rcr
dec
es
ins
or
retf
and
stos
push
jne
scas
cmp
out
clc
sbb
fst
and
js
arpl
fild
scas
and
mov
pushf
pop
xchg
jecxz
sub
xchg
sbb
inc
(bad)
in
and
xchg
xor
stos
or
pop
mov
ins
aaa
pop
cmp
push
sub
out
fisub
xor
enter
cdq
aad
mov
popf
push
call
popf
jb
push
das
inc
rol
sbb
ret
cmp
pop
add
bound
out
(bad)
sbb
sbb
into
cmp
cmp
mov
fstp
test
cmc
loopne
movs
hlt
test
jmp
mov
dec
rcl
rcr
add
sti
(bad)
ins
inc
jno
(bad)
pushf
xchg
icebp
or
lods
pop
xlat
jns
add
mov
ins
or
mov
(bad)
(bad)
sbb
test
ret
stos
popa
aam
out
pop
push
aam
lods
jmp
je
and
inc
mov
shr
pop
push
and
pop
xchg
xor
cmp
xor
and
(bad)
popf
das
int3
dec
retf
mov
xchg
std
ret
inc
out
jno
inc
push
lds
fcmovne
or
(bad)
aad
xlat
mov
cld
jle
pop
inc
mov
jns
and
or
rcr
mov
push
jge
jo
xchg
enter
in
cli
out
pop
mov
gs
cdq
pop
jp
pop
mov
mov
push
or
and
fcomp
scas
cmp
pop
sub
and
jne
push
(bad)
shl
dec
fs
jp
and
sub
je
fsub
neg
or
push
outs
mov
xchg
leave
xor
mov
mov
xor
cdq
jle
add
mov
pop
movs
add
or
loopne
add
cdq
ins
aaa
pop
inc
in
aam
in
cmc
mov
test
(bad)
fidiv
sahf
in
popf
add
mov
mov
jo
push
and
adc
mov
add
sub
cdq
gs
adc
xchg
rcl
popa
sub
dec
jns
mov
sbb
push
jne
fld
out
fisub
push
or
popf
jecxz
movs
mov
and
pop
iret
les
sbb
nop
and
mov
cmp
loopne
and
cmp
std
int
inc
js
int3
mov
dec
and
push
test
cwde
out
pop
mov
add
retf
out
(bad)
push
jl
cld
jo
adc
arpl
jecxz
and
(bad)
and
and
ins
test
idiv
int
or
xor
jns
xor
hlt
cmp
test
ins
xlat
mov
inc
sbb
adc
push
test
mov
xchg
mov
fidiv
mov
pop
mov
sti
xchg
loope
add
adc
cli
add
cwde
and
inc
cmps
jle
mov
or
test
cmc
hlt
pop
xor
xchg
stc
xchg
xor
cmp
and
out
push
add
cmp
mov
in
xchg
rcl
jmp
cld
push
mov
pop
bound
pop
push
int
pop
pop
dec
hlt
adc
pop
inc
pop
xor
add
data16
and
loopne
cmp
fisub
cwde
lds
mov
dec
add
sbb
push
sub
lahf
shl
jo
inc
push
add
aad
sti
cdq
xor
adc
ret
pop
adc
ins
mov
sub
adc
mov
pop
mov
call
scas
inc
xor
test
jle
adc
ins
adc
int
jne
sbb
xor
cmp
test
lock
xor
in
ins
pop
push
les
xchg
in
test
lea
mov
lock
test
call
and
jbe
cmp
aaa
fadd
sbb
inc
fbld
mov
aaa
fsub
xchg
push
daa
sbb
push
xchg
adc
inc
pusha
in
mov
jg
fbstp
neg
repz
jb
cmp
adc
cmp
arpl
or
arpl
dec
mov
cs
xchg
div
sub
icebp
add
cmps
pushf
iret
lahf
cmp
aad
jbe
rcl
and
mov
in
mov
xor
out
cli
add
fimul
sbb
shl
adc
clc
into
cmps
mov
mov
dec
and
dec
test
js
xlat
imul
jecxz
jns
imul
jle
jo
pop
ret
or
mov
xor
out
mov
inc
adc
inc
aaa
mov
pop
dec
dec
push
mov
dec
into
loop
mov
and
xor
ins
jbe
aad
into
ds
jmp
mov
mov
mov
jp
push
es
inc
cmp
pop
mov
mov
jecxz
repnz
or
add
mov
inc
cld
pushf
jmp
or
daa
fdiv
or
or
dec
repz
adc
pop
loope
add
leave
out
js
xlat
cmp
push
ret
shl
repz
add
mov
push
cmps
jne
pop
inc
lea
leave
cwde
cmp
jb
(bad)
dec
jg
adc
inc
jo
out
add
(bad)
pop
pop
jmp
stos
mov
add
in
(bad)
xchg
rcr
(bad)
stos
retf
das
and
fstp
cmps
lods
nop
bound
inc
xor
mov
sbb
mov
inc
fcomp
jo
and
ins
xchg
mov
and
popf
push
jo
pop
push
shr
stos
mov
(bad)
fmulp
jae
cmc
cmp
mov
sub
xor
mov
cli
movs
push
in
and
mov
adc
xor
bnd
add
sub
and
outs
mov
adc
and
cmps
push
mov
call
out
es
inc
aaa
adc
data16
pop
pushf
pop
(bad)
lods
imul
sbb
or
cli
pop
cmp
add
sar
lds
pop
jmp
imul
scas
mov
sahf
jl
out
mov
push
push
repz
jmp
jecxz
shl
aam
aas
test
dec
inc
inc
js
loop
iret
icebp
imul
cli
test
cli
(bad)
push
pop
inc
sub
fild
pushf
xchg
jae
pop
inc
loop
mov
stos
add
sar
inc
xor
fucom
mov
xchg
pushf
cmc
dec
inc
xchg
xchg
test
mov
(bad)
repnz
push
dec
xlat
mov
inc
lea
fnstcw
imul
js
mov
aaa
mov
and
(bad)
popf
loope
mov
movs
inc
inc
inc
aaa
(bad)
jmp
mov
jns
pop
sbb
rol
js
add
repz
add
inc
fst
fucomip
and
push
sub
adc
push
dec
push
fdivp
loope
push
test
movs
lahf
(bad)
mov
sbb
rcr
data16
neg
add
icebp
data16
xchg
cmc
inc
clc
add
jge
je
inc
mov
jecxz
lea
loopne
dec
add
jbe
xchg
sahf
pop
adc
movs
pop
dec
jmp
test
jecxz
outs
lods
fild
pop
mov
aaa
sti
into
pop
sub
imul
(bad)
fist
lahf
mov
shl
pop
push
mov
data16
outs
xchg
jae
and
sbb
mov
int
movs
mov
mov
or
lock
test
stos
scas
js
sbb
mov
test
push
inc
jns
sti
cli
out
add
ret
out
adc
dec
stos
sub
repz
jo
push
inc
enter
jl
out
jnp
inc
das
shr
sahf
sub
push
pop
xor
and
pop
(bad)
jns
pop
jp
test
leave
mov
fisub
addr16
popa
(bad)
das
mov
mov
and
jne
xor
xor
xchg
inc
mov
(bad)
sbb
bound
sbb
fimul
dec
cld
sbb
jmp
pop
push
aad
pop
in
mov
adc
add
mov
mov
pop
cld
or
inc
(bad)
cmps
xchg
leave
inc
xor
scas
cmps
and
test
(bad)
icebp
(bad)
xor
xchg
scas
sbb
mov
inc
and
fs
push
leave
icebp
adc
cld
(bad)
push
add
adc
in
dec
adc
mov
gs
xor
imul
xor
dec
cmp
std
ret
std
mov
pop
jo
push
cmp
sbb
movs
mov
cmc
jae
fld
ins
mov
jp
adc
cdq
cmp
mov
sbb
jo
arpl
or
pop
outs
pop
call
lods
and
je
(bad)
push
rol
lahf
push
mov
or
fiadd
and
rol
push
popa
loopne
mov
mov
sbb
pop
lods
pop
mov
inc
test
test
out
cs
sub
cmps
(bad)
in
test
sbb
or
xchg
push
rol
and
add
loopne
popf
call
push
adc
and
or
push
ss
out
js
lahf
bound
(bad)
ret
add
inc
dec
inc
mov
fwait
or
fsub
not
ret
dec
push
scas
mov
cli
cli
(bad)
hlt
xlat
cmp
pop
jge
jp
xor
adc
mov
push
mov
cmp
enter
xchg
sbb
repnz
test
int
or
add
sub
add
dec
lock
xchg
pop
mov
mov
xchg
das
pop
or
fwait
dec
fst
pushf
jb
cs
sbb
in
ins
mov
push
lea
push
jb
dec
fisttp
cmp
add
js
sub
adc
add
xchg
(bad)
lahf
in
shl
xor
fsubr
daa
ds
retf
cmc
out
xor
aam
adc
pop
hlt
fsubr
xchg
shl
xor
mov
clc
lods
dec
out
test
mov
dec
mov
add
cmps
jo
stos
jne
pop
pop
lods
sub
out
mov
push
adc
shl
lds
inc
adc
fld1
dec
loop
mov
out
out
stc
jmp
(bad)
fsubr
add
in
or
jae
call
dec
(bad)
jbe
das
sar
jmp
push
sub
jb
cmp
test
xchg
int3
dec
and
pop
mov
adc
cmp
push
sub
add
dec
push
jle
outs
sub
mov
das
and
cdq
jp
mov
pop
fisub
xchg
shl
in
mov
sbb
jne
scas
xor
leave
cmc
shl
jp
lods
js
(bad)
pop
pop
add
xor
push
idiv
and
mov
mov
outs
dec
rcl
pop
push
mov
xchg
ins
stos
jno
imul
push
aam
mov
fdiv
dec
jle
add
jmp
cmp
repz
dec
mov
ss
xchg
sar
test
xchg
movs
sahf
jmp
push
xchg
imul
out
fiadd
mov
pop
xor
mov
ins
xor
mov
or
shr
mov
push
rcl
xor
movs
(bad)
iret
dec
add
stc
and
cmp
call
inc
cmps
gs
jmp
leave
(bad)
mov
rcl
xlat
mov
fs
(bad)
adc
cwde
push
aaa
add
mov
pop
mov
repnz
loope
inc
shr
stc
in
(bad)
vprotd
adc
mov
dec
neg
push
mov
xchg
xlat
cmps
fs
loop
sbb
shl
xchg
or
hlt
lods
push
mov
mov
sub
lds
fcom
cmc
imul
mov
mov
mov
shl
clc
mov
(bad)
movs
cmp
gs
cs
icebp
movs
sub
mov
lea
rol
sbb
xor
loope
mov
or
xchg
inc
sbb
fbstp
outs
movs
xlat
adc
sbb
cmp
pop
jle
pop
cmp
mov
jg
jmp
aaa
and
xlat
push
sbb
add
fnstcw
push
in
jl
mov
sbb
mov
cmp
lock
out
(bad)
bound
outs
ins
imul
cmovge
jl
mov
cmps
(bad)
adc
sub
ins
pop
inc
dec
into
idiv
test
jno
(bad)
add
sbb
cmp
dec
cli
leave
dec
push
adc
mov
int3
cmps
mov
dec
repz
or
mov
out
addr16
imul
dec
jmp
jns
fwait
ret
(bad)
stc
cmp
aas
pusha
cmc
push
pop
jle
push
cli
add
mov
dec
pop
push
adc
or
mov
push
cmps
add
xlat
jo
out
aad
ds
mov
nop
xlat
fisub
cdq
push
(bad)
retf
push
adc
(bad)
cmps
dec
daa
or
ds
fnstsw
fidiv
popa
repnz
mov
hlt
aam
cli
mov
std
adc
and
pop
fistp
dec
push
xchg
mov
add
dec
aam
xlat
adc
hlt
stos
in
movs
cmp
iret
jmp
xor
popa
xchg
mov
sbb
popf
pop
xor
push
rol
(bad)
stos
pop
div
sub
rol
fild
mov
cli
loopne
out
cmp
add
and
icebp
xchg
ins
mov
int
lds
call
aad
imul
nop
aaa
xchg
add
mov
in
pop
jo
xchg
hlt
xchg
cmp
mov
push
retf
sbb
jecxz
aaa
clc
adc
jge
push
mov
daa
xor
add
dec
jmp
xor
pop
out
sbb
in
addr16
add
or
fst
xor
pop
jecxz
dec
movs
sbb
push
ret
inc
repnz
repz
xchg
not
sub
add
cwde
mov
test
sahf
adc
jp
push
outs
lods
and
adc
lods
and
sub
jb
mov
fbstp
rcr
push
and
sti
push
das
or
or
xchg
fldcw
adc
add
rol
xor
pop
xchg
call
or
fcmove
mov
pop
sub
div
pop
mov
or
xchg
and
ins
xchg
loop
adc
shr
jnp
stos
ds
or
push
lock
loop
in
jecxz
aam
inc
fimul
psubd
ret
addr16
fsub
ret
shl
fisubr
(bad)
in
inc
inc
mov
and
cld
dec
stc
adc
stc
push
mov
sub
fbld
jo
shr
mov
ins
adc
jl
xor
nop
jmp
rcr
ss
iret
cmp
dec
inc
mov
xchg
jg
(bad)
(bad)
lahf
aad
xor
lds
or
sub
cld
mov
outs
mov
or
xor
jle
lea
movs
loop
rcr
pop
xchg
popa
inc
ret
inc
or
movs
ret
dec
mov
jmp
push
cmp
in
inc
sahf
push
pop
shl
cmp
mov
fs
sub
sub
jp
pop
inc
test
jb
lods
daa
dec
pop
iret
(bad)
cld
mov
(bad)
sub
lods
repz
test
mov
cwde
std
outs
shl
push
and
jle
(bad)
sbb
repz
inc
aas
pop
or
xor
repz
add
pop
ja
adc
fild
iret
ins
and
outs
(bad)
pop
add
jmp
data16
sbb
pushf
pop
pop
es
aaa
rol
mov
adc
arpl
dec
cmp
or
lods
xchg
ret
and
xchg
cmp
loope
sub
test
imul
mov
or
test
(bad)
mov
pop
enter
adc
pushf
pop
aad
call
adc
mov
movs
pop
push
mov
js
rol
mov
push
movs
out
xor
loopne
mov
sub
scas
adc
inc
ror
mov
mov
out
pusha
loop
addr16
ffreep
test
fwait
cs
cli
jnp
mov
pop
adc
pop
cmp
std
repz
push
mov
test
mov
pop
out
inc
sar
lock
sub
lods
jmp
mov
(bad)
aam
mov
js
(bad)
mov
mov
aad
or
ins
xchg
sub
add
or
add
pop
adc
inc
add
cmp
setne
jb
pushf
les
pop
fdiv
mov
pop
sub
jnp
movs
ds
jmp
cmp
cld
int
adc
dec
cmps
scas
adc
imul
pop
mov
sbb
(bad)
mov
jp
xor
call
fst
(bad)
pusha
and
mov
or
mov
xchg
pop
cwde
and
(bad)
jbe
mov
push
mov
mov
adc
fnsave
loop
inc
dec
(bad)
sub
sbb
popaw
mov
fidiv
xor
repz
cmp
icebp
and
or
fucomip
jae
and
out
or
push
inc
sahf
sub
mov
or
(bad)
mov
cmp
and
and
mov
sub
cmp
aam
pop
push
addr16
std
sar
hlt
mov
xchg
xchg
inc
fwait
retf
adc
ins
push
inc
nop
popf
xchg
mov
std
dec
das
in
iret
add
sbb
mov
xchg
add
setae
cmp
shr
jmp
xor
les
jle
xchg
sahf
neg
lods
stc
lahf
push
mov
pop
lock
inc
dec
push
mov
inc
pop
cs
(bad)
test
add
cmps
xor
xlat
or
mov
iret
bound
out
arpl
push
pop
sbb
sub
xchg
jg
push
pop
mov
aam
mov
adc
xchg
or
or
in
and
cmp
sbb
test
nop
push
dec
(bad)
ret
in
mov
xlat
inc
adc
mov
out
ds
pop
xchg
iret
loop
ret
push
outs
pop
ins
mov
inc
or
imul
xor
es
aas
clc
push
stos
les
cmp
push
test
in
popa
cmp
out
xchg
adc
aaa
adc
add
adc
or
dec
outs
test
test
jne
jmp
js
jbe
jmp
std
push
daa
xchg
mov
aaa
int3
xchg
sub
push
ror
adc
clc
(bad)
jmp
rcr
out
jo
(bad)
fwait
pop
sub
mov
and
xlat
push
inc
pop
pop
cli
cld
xchg
retf
xchg
ins
out
test
call
xchg
out
jmp
aad
mov
xchg
push
xchg
mov
and
jl
aaa
je
lods
jmp
sbb
mov
adc
sahf
inc
push
jmp
cmp
test
(bad)
popa
mov
cs
or
or
fbstp
pop
xor
sbb
inc
mov
or
ja
ins
and
mov
inc
xchg
out
dec
repz
in
xchg
mov
pop
out
retf
stos
call
add
sub
aam
int3
int3
or
jnp
mov
push
pop
rcl
dec
sahf
sbb
push
sub
or
mov
push
push
inc
cwde
call
xor
adc
push
(bad)
fistp
loop
dec
xor
ins
(bad)
pop
pop
or
into
es
sub
xor
xchg
in
sub
push
mov
inc
push
dec
fcmovb
mov
(bad)
mov
adc
jno
mov
paddusb
mov
push
aam
dec
mov
ret
loop
and
add
pop
ins
xor
sbb
movs
jp
leave
popf
sbb
loope
cld
enter
in
push
clc
push
pop
pushf
dec
imul
mov
in
aaa
into
sub
ror
das
jmp
mov
popf
int
dec
mov
pop
(bad)
mul
xchg
(bad)
ret
xor
mov
loope
pushf
nop
push
stos
test
(bad)
pop
in
mov
pop
int3
mov
xchg
ret
ss
mul
test
mov
mov
xchg
jo
mov
add
dec
sub
sub
mov
mov
(bad)
cdq
dec
cmp
xchg
clc
arpl
cmp
mov
mov
sbb
xor
xlat
jle
xor
push
xor
pop
fwait
jp
mov
push
jp
jmp
daa
stc
mov
mov
loope
in
push
add
mov
mov
mov
jmp
xor
fldenv
xchg
cmp
add
lods
in
sbb
inc
pop
mov
mov
lds
xchg
dec
sub
dec
sti
dec
mov
add
stos
dec
inc
mov
(bad)
lods
test
arpl
dec
adc
add
dec
loope
inc
add
xor
inc
inc
daa
adc
sbb
(bad)
(bad)
loop
(bad)
or
daa
cmp
mov
adc
ja
stos
pop
(bad)
push
and
mov
push
xchg
fs
not
mov
retf
dec
inc
inc
(bad)
inc
pop
inc
inc
jp
xor
mov
ret
iret
mov
ja
inc
mov
cmps
fld
rcr
clc
ret
aaa
ins
jae
hlt
stos
xchg
push
cmp
mov
and
inc
lahf
out
sar
imul
pop
dec
mov
inc
pop
aaa
fld
mov
inc
pop
push
push
in
in
pop
call
dec
inc
in
mul
mov
inc
xchg
es
jge
fsub
mov
push
aas
push
call
push
xchg
aad
push
mov
jp
inc
add
mov
jg
iret
js
adc
xor
nop
int3
push
cmps
add
push
call
push
jno
jmp
jle
mov
mov
test
jg
sbb
or
ret
sti
add
cmps
adc
add
and
inc
lods
jae
lahf
xor
dec
icebp
aad
ror
and
sub
call
cmp
adc
std
popa
cmp
sbb
push
dec
xchg
jmp
adc
mov
dec
mov
(bad)
dec
into
popf
xor
nop
push
retf
and
or
xor
mov
fadd
rol
jne
fisttp
mov
mov
out
call
cmp
cmp
sub
mov
xor
repnz
inc
push
cmp
push
push
mov
aad
mov
out
jl
mov
xchg
cli
into
cli
cmp
pop
jmp
popf
push
xchg
enter
mov
test
std
xchg
je
stc
mov
call
xchg
dec
mov
mov
call
inc
inc
mul
or
fistp
pushf
push
adc
cdq
addr16
es
mov
call
add
sbb
push
das
fcom
fwait
inc
dec
jno
xchg
mov
push
cdq
jae
push
inc
xor
xor
mov
cwde
div
into
dec
fbstp
clc
loopne
dec
out
call
dec
add
or
dec
sub
or
push
or
sub
push
cld
xor
imul
fist
sub
data16
inc
add
and
cwde
sub
cmp
mov
loop
push
and
jle
jo
mov
mov
rcl
test
add
out
(bad)
pop
pop
mov
dec
loope
and
push
cmps
lea
ds
out
arpl
dec
jo
jle
and
popa
xor
shl
shl
jne
mov
fadd
adc
movs
scas
in
add
je
(bad)
sub
mov
jno
in
cmp
mov
mov
les
retf
repnz
fdivr
mov
mov
and
mov
jg
sti
mov
xor
cmp
fiadd
dec
dec
push
xor
test
pop
fsubrp
sub
push
xor
ins
pop
aas
movs
ficomp
cmp
mov
cmp
cmp
dec
mov
dec
and
and
xlat
sbb
mov
rol
je
daa
mov
js
or
(bad)
sub
call
xor
pop
aaa
shr
adc
cmp
jmp
movs
test
aam
rcl
scas
outs
xlat
scas
stos
jmp
push
aam
or
ret
sbb
and
mov
popa
lods
in
loopne
xor
or
shl
fcom
shr
push
dec
pop
or
mov
sbb
mov
cmp
add
call
xor
jle
mov
ds
outs
stc
xor
cmp
xchg
pop
mov
cs
jle
fdecstp
mov
dec
test
xchg
les
adc
test
mov
add
popf
mov
xchg
lahf
jge
sub
adc
popf
xchg
jae
adc
cmps
outs
pop
icebp
dec
rcr
inc
(bad)
repz
pop
add
jnp
pshufw
and
mov
cmp
add
jecxz
into
out
pop
push
sbb
cwde
popf
push
popf
rol
sti
daa
mov
daa
adc
icebp
fcomi
mov
fistp
dec
pop
sbb
es
mov
test
jp
jl
dec
inc
adc
sbb
cli
mul
sub
lods
sub
paddusw
cli
aad
addr16
ss
ficomp
aaa
xor
pop
daa
xchg
push
xchg
sti
dec
and
in
sub
popf
repz
outs
lahf
cmc
sub
mov
xor
jne
pop
adc
arpl
dec
push
(bad)
mov
mov
scas
sbb
lods
movs
and
xor
push
(bad)
iret
out
mov
cs
xlat
sti
sbb
mov
lea
xor
xor
jmp
pop
test
xor
loope
or
jmp
inc
mov
cmc
jg
stos
gs
xchg
shl
popa
int3
out
sub
into
and
les
sub
xchg
inc
out
addr16
mov
repnz
fldcw
inc
pop
nop
xor
mov
xor
outs
inc
(bad)
sbb
fld
xlat
aas
mov
and
xchg
out
sub
daa
xor
xor
mov
adc
jno
or
inc
ss
repz
lock
fidiv
cmp
out
jg
neg
scas
jge
or
xor
mov
xor
mov
stc
adc
xchg
push
jo
icebp
cmp
jmp
retf
cmp
ficom
cmp
xchg
cmp
cmps
dec
cmp
fld
adc
adc
pop
jae
lock
mov
mov
sbb
test
bound
in
or
xor
jge
movs
dec
inc
and
add
xor
cmp
fmul
cmp
push
inc
sub
pop
xor
fdivrp
jle
gs
fwait
ror
jae
sub
and
add
das
(bad)
push
xchg
mov
xor
pop
in
sub
inc
lahf
enter
mov
xchg
push
dec
sub
jmp
das
test
fmul
add
imul
mov
pop
in
cmps
ror
sub
adc
xchg
sub
or
loopne
int3
pushf
jne
pop
imul
cmps
in
pop
addr16
or
xchg
add
pop
add
mov
jp
sti
scas
clc
pop
push
lods
in
dec
aaa
jle
xor
fisttp
jnp
in
dec
xor
imul
or
hlt
xlat
push
mov
arpl
xor
sahf
sub
add
outs
nop
lock
ins
das
xor
ins
cmps
lods
pop
push
jmp
push
pop
(bad)
push
inc
sti
idiv
out
fild
dec
add
repz
xchg
loopne
push
loopne
pop
fdivr
call
outs
shl
cmps
call
imul
mov
pop
jbe
mov
cmc
xchg
ret
sub
inc
xor
inc
cmp
add
pop
into
mov
shl
push
cdq
xchg
dec
daa
cwde
repz
push
and
dec
sbb
test
dec
cwde
inc
scas
jb
lods
sti
sub
movs
cmp
clc
mov
cmp
arpl
cwde
inc
push
bound
add
outs
lahf
sub
push
and
scas
in
bound
fs
pop
dec
jge
jl
lds
fsubr
push
xor
pop
add
iret
mov
aaa
dec
sti
loopne
dec
(bad)
iret
pop
jmp
pop
xchg
mov
sbb
xor
test
gs
pop
nop
js
jge
mov
repnz
rol
dec
jg
inc
sbb
mov
push
outs
adc
dec
repnz
inc
and
lock
cmps
and
stos
and
stc
jns
sti
jp
(bad)
push
ja
inc
add
lods
fnsave
call
xchg
jne
fidiv
out
repz
loopne
lahf
jmp
xor
xchg
mov
add
retf
out
test
bound
jle
cmp
gs
sub
xor
mov
arpl
test
lock
xchg
dec
out
jbe
ficom
sbb
ss
test
into
jmp
call
mul
mov
in
mov
scas
xchg
fild
mov
mov
jmp
mov
push
addr16
loop
imul
test
daa
inc
pop
cld
xchg
push
push
and
lds
jle
test
test
popa
xchg
scas
movs
mov
inc
enter
add
icebp
inc
cmp
(bad)
pop
add
mov
shl
mov
stos
lods
push
xchg
mov
jbe
pop
jnp
std
adc
das
bnd
je
test
gs
ret
out
jae
mov
sbb
mov
scas
pop
sub
das
push
ja
cmp
scas
push
cli
add
cs
movs
add
mul
mov
ret
or
inc
sbb
nop
ror
add
xor
movs
imul
jmp
sbb
(bad)
xor
out
dec
sti
adc
in
xchg
pop
cs
mov
add
push
jl
jle
dec
sahf
pop
ret
sbb
fsubr
pop
aas
fucomi
jns
ins
divps
ret
or
out
pushf
cmc
add
sbb
cmp
imul
jmp
cmps
ja
dec
or
loop
mov
stos
xchg
inc
sbb
sub
jbe
mov
scas
add
sbb
mov
mov
scas
cmps
fs
add
out
sub
test
(bad)
mov
mov
mov
xor
in
enterw
xchg
jp
pop
aaa
pop
mov
push
(bad)
jb
into
xor
addr16
inc
jge
dec
sub
mov
cmc
test
shl
ss
push
cmc
xchg
lea
xrelease
rcl
pop
inc
enter
or
dec
dec
xor
jg
aam
push
mov
scas
aad
out
iret
clc
clc
or
sub
push
jo
sar
popa
xchg
dec
mov
sub
sti
jp
push
jp
pushf
fnstenv
les
ins
popf
retf
adc
push
mov
popf
add
add
call
pop
pop
mov
(bad)
cld
imul
or
xor
jne
daa
aaa
sar
shl
fstp
rcl
jg
leave
xchg
call
dec
adc
neg
(bad)
jle
jns
xchg
push
call
cmps
mul
daa
aam
dec
(bad)
test
jb
jp
xor
pop
loopne
vminss
push
mov
xchg
jmp
in
adc
out
mov
div
mov
jmp
into
or
xor
push
cmp
cmps
xchg
fs
std
mov
cld
call
adc
in
jg
outs
sar
je
xor
pop
retf
sti
inc
fptan
test
retf
imul
mov
push
out
mov
repz
push
iret
mov
mov
call
retf
test
lods
lock
adc
jmp
xchg
dec
cmp
fcompp
push
aam
xchg
sub
mov
sbb
push
sub
fs
ror
push
mov
scas
mov
sub
(bad)
xor
bound
sbb
in
shl
mov
xor
xor
pop
xchg
aaa
mov
adc
mov
mov
xchg
sbb
xchg
lods
xchg
aad
rcl
fs
mov
mov
ja
test
mov
sbb
js
cmp
cmps
xor
(bad)
aam
cmps
fld
sub
shr
in
or
(bad)
(bad)
lock
dec
xor
pop
pushf
rcl
je
jp
scas
mov
inc
and
mov
and
push
pop
xor
data16
imul
or
jl
sbb
mov
ficomp
std
aad
jno
push
jecxz
imul
xchg
inc
mov
shl
fsubr
in
push
cmps
cmp
mov
adc
jno
(bad)
mov
repnz
or
mov
add
or
xchg
js
stos
lock
xor
cmp
popa
test
jle
jb
mov
shr
fwait
test
mov
das
into
lods
sar
sub
or
fdivr
add
pop
dec
fmulp
popf
ja
mov
arpl
adc
pop
int
jg
pop
stos
(bad)
fisttp
fst
popf
push
in
adc
and
fwait
adc
lods
xchg
xlat
add
cwde
gs
xor
or
ja
clc
cld
sub
sbb
mov
cmp
fbld
sahf
ds
mov
cmp
dec
in
and
xor
fnstcw
mov
(bad)
shr
xchg
mov
pop
je
lds
icebp
sub
daa
push
retf
fild
mov
and
inc
int3
div
scas
fstp
das
sbb
mov
xchg
inc
lods
xor
out
push
or
and
cwde
fisttp
aam
movs
jae
mov
or
je
out
push
icebp
int3
stos
cld
xchg
ret
jne
add
lea
leave
scas
in
mov
mov
sbb
in
arpl
lds
mov
mov
push
jecxz
inc
leave
jns
xchg
scas
xor
push
push
lods
dec
fst
jl
out
int
sub
std
test
push
inc
push
push
movs
icebp
mov
mov
xor
dec
add
add
fist
(bad)
inc
or
ja
out
push
popa
iret
pop
xchg
out
mov
push
and
(bad)
icebp
fild
call
push
and
fs
fwait
jmp
cmps
aas
movq
popf
(bad)
jae
sbb
sub
and
add
push
into
mov
and
inc
and
mov
js
or
retf
add
ror
lahf
add
dec
(bad)
rcl
push
xor
sbb
loopne
leave
and
xor
bound
ret
push
jmp
bound
(bad)
jp
cdq
fsubr
xchg
lock
jle
std
push
loope
dec
cmp
lahf
jge
push
dec
shr
adc
adc
arpl
aaa
scas
inc
(bad)
retf
int
jne
fs
sbb
dec
pop
mov
jnp
std
loop
retf
add
cmp
sti
cmc
mov
xchg
js
aad
fidiv
test
cmp
jo
arpl
sahf
add
ins
jno
lea
cli
push
push
sbb
inc
mov
fld
push
icebp
out
lods
ret
push
xchg
or
test
adc
retf
lahf
mov
outs
mov
sub
xchg
mov
fild
loop
jl
xchg
in
into
std
jnp
mov
popa
pop
leave
inc
inc
and
pop
loope
outs
sbb
clc
jle
cdq
icebp
cs
aad
adc
jp
out
scas
xchg
movs
mov
aam
mov
lea
xchg
outs
sbb
stos
mov
mov
and
push
icebp
call
fdiv
call
test
push
sbb
daa
push
sti
scas
arpl
in
add
sub
add
cmp
mov
stc
js
dec
inc
cmp
jl
fcomip
int
pop
add
dec
cmps
inc
and
and
xchg
lods
mov
mov
fidivr
adc
mov
xor
jp
pop
pop
pop
sbb
push
mov
cli
xlat
scas
pushf
stc
test
or
pop
pop
cdq
sti
xchg
sub
adc
push
xlat
push
adc
pusha
jmp
or
xlat
stos
(bad)
sub
adc
jbe
jne
xor
and
out
in
inc
shl
ret
sar
stc
adc
scas
sub
cld
mov
scas
mov
cdq
loope
sbb
xchg
fwait
(bad)
jg
aaa
mov
mov
push
sahf
(bad)
push
cmc
imul
mov
in
mov
stos
pop
xchg
or
retf
in
push
fnstsw
add
dec
sub
jns
jmp
and
mov
adc
repnz
adc
or
(bad)
or
jp
cmp
sub
xor
ins
cmp
dec
(bad)
lods
pop
or
and
xchg
jle
mov
xor
clc
fs
adc
or
mov
fisttp
sbb
xor
loope
xchg
mov
fldcw
ja
iret
imul
in
jmp
(bad)
addr16
mov
jl
rol
pop
pop
inc
mov
and
retf
adc
ror
push
loope
push
pop
xor
addr16
pop
fdiv
cmp
pop
adc
add
and
out
mov
push
and
or
iret
test
xchg
dec
dec
mov
lds
adc
cli
jne
les
ins
aad
fnstsw
ret
pop
jecxz
out
stos
xor
daa
jnp
cmp
test
mov
mov
mov
(bad)
aaa
inc
cld
gs
jbe
shr
and
retf
sbb
mov
stc
ins
mul
(bad)
fs
mov
cmps
jmp
add
repz
test
int3
repnz
sub
retf
iret
mov
jle
or
fmulp
je
loop
es
pop
adc
in
or
jbe
stc
push
mov
ret
cmps
in
enter
or
repnz
dec
bound
(bad)
cmp
dec
cmp
xor
test
and
nop
add
jmp
push
adc
jmp
cs
jecxz
jo
sbb
fwait
imul
inc
add
dec
dec
test
jecxz
bound
dec
or
jge
adc
and
jmp
icebp
inc
mov
(bad)
fsub
dec
cmps
lods
push
scas
sbb
jbe
outs
iret
stc
mov
push
aas
push
jbe
ret
inc
cmps
push
sub
xchg
fstp
into
cdq
(bad)
sub
mov
int3
mov
xchg
mov
cdq
arpl
push
ror
mov
jo
bound
sahf
sub
loop
ja
rcr
sub
out
inc
inc
xchg
sub
sti
(bad)
int3
push
(bad)
fs
jl
out
mov
ds
jne
mov
and
mov
bound
jno
push
push
mov
fstp
and
pushf
add
int3
push
pop
stc
je
out
jb
cmp
outs
pop
pushf
in
xor
xchg
(bad)
in
xor
mul
adc
sub
pusha
cld
gs
pop
cmp
lods
es
cwde
dec
or
rcr
xchg
pop
pop
mov
(bad)
jp
lea
adc
int
(bad)
jp
into
mov
mov
add
fnstsw
das
aam
das
jp
jge
repz
xchg
sbb
cmps
push
sahf
outs
rol
cmp
pop
les
jns
in
adc
gs
mov
inc
adc
jbe
not
mov
mov
add
mov
lock
xor
jecxz
in
cli
xor
das
mov
out
pop
pop
jb
sbb
mulps
out
stos
push
sbb
pop
mul
out
clc
add
cmp
rcr
fist
xor
push
push
test
cld
out
int3
test
push
addr16
pop
mov
imul
adc
mov
cmps
cwde
mov
jb
pop
cmp
addr16
pop
icebp
les
(bad)
nop
adc
les
mov
push
test
sbb
pop
mov
jge
fadd
pop
mov
(bad)
add
into
(bad)
mov
sete
adc
gs
scas
cmp
jp
sub
cld
(bad)
push
call
jno
cmps
jne
push
sub
add
repz
cmp
cmp
data16
and
pxor
push
and
inc
pushf
hlt
sbb
pop
dec
jo
lds
pop
pop
add
loopne
mov
(bad)
dec
cmp
mov
cmp
les
xor
shl
bound
xchg
add
dec
mov
sub
mov
mov
sub
clc
and
cs
and
jl
add
mov
fnclex
movs
push
or
xchg
mov
inc
sub
xor
fcmovu
das
out
sub
adc
jmp
xchg
ja
repz
ffreep
stc
fisub
(bad)
out
cdq
sub
jae
mov
or
mov
xor
mov
add
xor
jno
jle
xlat
icebp
cmps
mov
hlt
mov
xchg
xor
xchg
cmp
cmps
and
mov
inc
stos
scas
syscall
call
and
knotb
jno
push
xor
lods
xchg
mov
mov
push
mov
movs
sub
cmc
mov
js
cld
sub
or
jae
dec
add
fwait
xor
and
sbb
(bad)
sbb
cs
fnstcw
jecxz
(bad)
cmp
mov
fcmovnu
es
fmul
call
sub
fiadd
xor
les
cmp
retf
pop
mov
mov
mov
test
lds
inc
mov
jb
(bad)
inc
mov
loopne
ds
fbstp
sbb
mov
cmps
hlt
sub
mov
test
cwde
lods
(bad)
and
adc
mov
loope
sub
xchg
shr
outs
dec
retf
mov
mov
jo
adc
movs
jno
push
or
call
repnz
add
or
push
pop
fwait
out
xor
and
or
mov
adc
aaa
sub
ret
xchg
lock
in
sub
or
je
out
daa
(bad)
fcomp
jl
enter
scas
in
adc
es
enter
mov
push
dec
jne
int3
and
or
dec
push
xchg
push
sub
mov
inc
push
mov
xor
inc
cli
shl
(bad)
fdivr
leave
inc
dec
mov
imul
jbe
stos
test
in
sub
dec
or
je
dec
push
push
shl
mov
push
stc
and
sub
lea
push
fdivr
bound
leave
add
jge
sbb
shr
cli
cmp
add
sbb
loopne
add
pop
(bad)
fs
fxch
dec
push
shl
adc
jbe
xor
or
(bad)
dec
cmp
not
inc
cmp
aaa
loope
mov
out
and
lock
mov
cmp
or
add
outs
mov
jmp
cmp
mov
jg
outs
adc
push
xor
or
out
lahf
sub
inc
sar
jo
sti
jno
sub
sbb
jae
outs
mov
cli
xor
push
jg
cmp
(bad)
pusha
popa
push
cli
dec
enter
pop
adc
sti
add
dec
shl
pop
repz
xor
fidivr
retf
mov
in
bound
jge
leave
xor
(bad)
cld
not
es
cmp
es
in
cli
sbb
es
shl
mov
xchg
adc
xchg
pop
push
fst
pop
mov
hlt
cmps
sbb
ds
cmp
div
mov
or
xlat
and
and
stc
inc
or
mov
shl
stc
jge
xchg
imul
addr16
jae
pop
test
or
ja
mov
dec
cdq
inc
popa
movs
pop
cli
cmp
outs
fcmovne
push
scas
xor
sbb
jne
adc
pusha
sahf
rcl
dec
jp
jecxz
jmp
jne
or
push
pop
lods
retf
vorps
enter
push
pop
or
ss
in
mov
imul
ss
or
cs
out
call
push
dec
dec
mov
inc
ins
xor
inc
imul
nop
sub
(bad)
add
sub
rol
push
add
mov
adc
add
lods
retf
je
ins
jmp
iret
addr16
cdq
ficom
xchg
inc
jmp
(bad)
sbb
pop
imul
jo
and
hlt
rol
fisubr
bound
dec
jns
jbe
ja
call
jecxz
pop
outs
shl
stos
push
xchg
enter
push
jl
adc
pop
cmp
das
add
jbe
jecxz
pop
fisub
push
repnz
cmp
addr16
lahf
test
xchg
inc
mov
push
inc
add
inc
mov
outs
xor
stos
jle
push
sub
mov
xor
out
rcl
dec
and
(bad)
xor
ins
pop
fldcw
mul
sbb
pop
jl
sbb
cs
cmps
push
and
add
jle
cld
lahf
pop
xchg
je
push
mov
xchg
aam
cmp
aad
xor
xor
js
shl
cmp
cmps
ds
sub
repz
aaa
cmps
dec
or
inc
and
dec
add
cmp
dec
bound
push
mov
cld
mov
js
aam
popa
iret
ins
in
(bad)
fdiv
push
adc
mov
dec
into
mov
movs
xchg
test
gs
xchg
dec
pop
dec
fwait
mov
push
mov
add
mov
out
inc
mov
cmp
add
js
sub
or
cmc
dec
cld
pop
mov
test
data16
pop
or
dec
sbb
pop
jmp
fwait
js
fsub
mov
int
paddd
shl
lock
aaa
hlt
cmp
movs
push
xchg
dec
sub
sbb
leave
fild
inc
push
jmp
sub
clc
ret
or
mov
mov
xchg
ins
fidivr
cmp
pop
add
push
shld
mov
mov
leave
or
sbb
pop
adc
jp
add
push
xor
inc
xlat
mov
out
inc
cs
imul
add
add
jmp
shl
cmp
push
int
sub
adc
cmps
sbb
fistp
cmc
or
cmp
mov
add
popa
shr
sbb
test
mov
push
cli
adc
mov
arpl
cmp
gs
sub
push
xchg
lods
lock
jmp
das
sub
pop
nop
adc
pop
imul
(bad)
aas
pop
not
aam
or
int3
cmp
or
mov
je
fcmovb
(bad)
jg
mov
shl
stos
fwait
out
in
pusha
sbb
xchg
or
push
shl
xchg
in
fucom
add
inc
rcl
dec
dec
(bad)
xchg
and
in
fldenv
jmp
and
or
retf
cmp
mov
pop
pusha
pushf
dec
out
jle
sub
jle
(bad)
push
and
out
sbb
ret
gs
stos
in
les
inc
sbb
(bad)
iret
in
loop
adc
movs
sbb
mov
dec
ja
or
inc
mov
loope
sbb
and
aas
dec
mov
dec
xchg
mov
jp
fistp
xor
arpl
cmps
adc
cmp
mov
movs
enter
pushf
ret
icebp
cmps
std
or
ret
in
popf
test
mov
inc
stc
sub
pop
aam
inc
pop
mov
clc
cld
and
scas
retf
or
and
pop
clc
sbb
push
scas
das
add
sub
push
or
xadd
xlat
pop
pop
pop
cmps
or
aad
inc
fsub
idiv
adc
push
dec
sub
ds
sbb
xor
psubw
stos
jno
push
xchg
xor
aam
rol
jns
ja
scas
jmp
(bad)
(bad)
mov
inc
cmps
cdq
scas
out
or
jmp
fwait
aam
stos
adc
out
cmp
cs
test
push
ror
and
mov
sub
aam
fidiv
pop
loop
lds
movs
fdiv
xchg
in
push
pop
cmps
xchg
shl
sub
jae
mov
cs
xchg
and
add
repnz
pop
retf
test
movs
rsm
inc
mov
outs
idiv
cld
inc
mov
out
push
inc
mov
jnp
and
add
sub
and
not
int
and
mov
sub
dec
int3
or
pop
add
ret
pop
mov
sub
dec
cdq
sub
push
sub
int3
call
aam
arpl
mov
clc
or
mov
jno
gs
xchg
stc
das
fisubr
xchg
inc
mov
mov
mov
lahf
sti
(bad)
int
pop
push
push
and
xchg
mov
add
cmp
pop
adc
nop
repnz
adc
lock
cmp
fwait
outs
pop
sbb
fucomip
(bad)
shl
rcl
idiv
loop
pop
ret
shl
lds
mov
sbb
data16
hlt
std
addr16
mov
stc
cmpxchg
mov
ja
lahf
sti
adc
fwait
lock
es
mov
or
push
adc
mov
scas
out
dec
int3
inc
cs
xchg
jge
sbb
cmp
jnp
sub
addr16
pop
sub
cld
xchg
fst
dec
jmp
xchg
call
pusha
test
mov
mov
adc
and
inc
fwait
adc
dec
xlat
pop
push
jp
mov
mul
ins
outs
push
jmp
xor
sbb
lea
(bad)
xor
mov
scas
mov
pop
out
cmp
mov
arpl
or
(bad)
cmp
cld
xchg
and
cmp
sbb
ins
or
mov
neg
pop
shl
fadd
ins
das
pop
aas
adc
adc
and
pushf
dec
leave
fild
sub
ins
sbb
out
call
push
sbb
cmp
ja
adc
inc
pusha
cmps
mov
mov
stos
ss
pop
sbb
jmp
test
push
inc
inc
addr16
lock
mov
retf
cdq
cmps
sti
out
out
ds
adc
pop
leave
inc
lds
inc
(bad)
xchg
(bad)
mov
add
adc
pop
inc
inc
(bad)
push
scas
mov
and
bound
cmp
fchs
or
jno
idiv
repnz
mov
add
xor
fdiv
or
ret
push
imul
rcl
inc
pusha
dec
cmp
stos
cmp
mov
rcr
cmps
addr16
lahf
push
sti
int
fnstcw
cdq
lock
movs
ds
retf
aam
adc
push
(bad)
xor
push
and
cld
pushf
idiv
test
fsub
or
test
stos
dec
gs
mov
arpl
loope
xor
dec
jno
mov
test
popf
rcr
(bad)
faddp
shr
popa
popa
std
cmps
xchg
sub
pop
(bad)
lahf
imul
lods
mov
dec
xchg
push
cmp
jnp
sub
pop
add
mov
jl
mov
dec
lock
and
sbb
jp
ds
adc
cwde
arpl
fbstp
scas
mov
les
inc
adc
imul
cmp
fimul
into
mov
ret
push
stc
xchg
mov
stos
inc
push
mov
cmp
cmps
out
cmps
xchg
sub
push
adc
xor
xor
aad
mov
arpl
dec
repnz
pop
or
or
out
jmp
inc
pop
aaa
jmp
neg
in
mov
sbb
ins
rcr
fld
xchg
jno
lock
cmps
mov
pusha
mov
xor
and
push
mov
nop
int
cmps
(bad)
pop
lea
add
icebp
jg
cmp
js
jecxz
loop
pop
div
inc
jle
ds
add
test
sahf
xchg
mov
xchg
push
popf
sar
sub
or
out
inc
shl
or
and
in
xor
in
fcmovnbe
mov
pop
test
int
cmp
loope
mov
lods
dec
mov
push
fs
mov
mov
idiv
imul
xor
shr
fnstcw
mov
add
push
(bad)
call
ret
fwait
repnz
cmp
movs
sbb
mov
sti
adc
(bad)
out
fstp
aad
ret
div
push
xor
cdq
out
xlat
cdq
sub
or
dec
mov
leave
fst
cmps
sahf
pop
push
xchg
jmp
ins
push
lods
mov
(bad)
xor
inc
mov
fidiv
push
mov
out
div
push
xor
test
xchg
bound
mov
add
xchg
loope
popf
xchg
imul
mov
jl
jne
dec
and
adc
ins
xchg
xor
rcl
mov
(bad)
dec
push
imul
dec
xchg
mov
sti
(bad)
mov
xchg
jb
es
pop
cwde
mov
mov
(bad)
imul
cmp
xor
enter
rol
dec
mov
es
leave
push
idiv
(bad)
sahf
out
aas
push
ins
imul
dec
sahf
repz
lock
stos
stos
test
in
js
and
jl
add
push
out
imul
cmp
lods
lods
nop
and
pusha
call
mov
xor
aaa
mov
out
xchg
dec
mov
frstor
cdq
jecxz
outs
xlat
inc
je
mov
loopne
adc
mov
or
xlat
and
add
(bad)
push
sbb
mov
xor
stc
outs
add
mov
inc
cmp
fstp
lods
cmp
ins
xlat
jbe
(bad)
push
sub
xchg
or
pushf
movs
outs
and
bound
or
addr16
cs
sbb
mov
jg
adc
sub
push
ins
rcl
dec
xchg
fild
mov
loope
add
sbb
lods
icebp
stos
jae
test
inc
pop
inc
vmaxps
push
mov
lea
jns
mov
cmp
add
fdivr
jl
pop
xchg
xor
retf
mov
and
pushf
or
jle
call
not
loopne
(bad)
scas
int3
out
sti
xor
pushf
and
cmc
adc
pop
push
mov
mov
je
mov
outs
in
rcr
jge
into
push
cmps
mov
daa
mov
xchg
cs
cmp
xchg
xor
cdq
repnz
aaa
cli
fs
adc
repz
je
dec
js
mov
clc
and
fstp
jle
adc
mov
sub
sahf
outs
push
sbb
push
xchg
xchg
leave
xor
sbb
outs
in
sbb
test
jg
pop
jg
pop
xor
ret
sahf
xchg
xchg
jecxz
fistp
in
sbb
inc
xchg
loope
aas
lds
pop
aam
inc
clc
cmp
push
xchg
add
lea
pop
push
mov
test
outs
mov
adc
mov
mov
(bad)
aaa
(bad)
xlat
dec
inc
add
mov
ret
aad
sub
pop
rcr
sbb
xchg
push
(bad)
hlt
adc
jmp
cmp
popf
add
adc
xor
adc
cli
inc
inc
push
mov
fstp
fiadd
inc
fcom
mov
fs
adc
pop
cmp
jmp
test
dec
les
sub
iret
aad
cdq
cmp
adc
push
mov
and
adc
mov
and
cmp
and
jae
in
rcl
cmc
and
(bad)
mov
adc
push
xlat
inc
xor
push
lods
push
jp
add
and
inc
jecxz
cmp
sbb
loope
xor
stos
in
dec
add
cmp
mov
cmp
ret
imul
inc
and
mov
imul
xor
xor
mov
mov
inc
xor
mov
mov
ficom
pop
mov
in
(bad)
cdq
push
mov
jae
repz
cs
call
fnstsw
mov
scas
push
xchg
stos
sub
daa
jno
test
jle
in
je
ja
mov
out
cmp
xchg
stos
pop
fwait
mov
pop
dec
jmp
sub
das
adc
retf
fwait
out
(bad)
dec
push
dec
xchg
push
add
add
frndint
or
mov
sbb
push
dec
xor
xchg
dec
scas
jmp
jge
ds
or
pop
cld
(bad)
lea
sub
in
mov
shl
inc
cmp
xor
or
cmp
push
or
push
cmp
push
call
shr
mov
dec
dec
out
(bad)
jmp
ja
fxch
std
add
dec
push
jbe
jmp
sar
sub
pop
mov
jo
and
mov
sahf
fwait
cli
stc
icebp
push
mov
ja
int
je
stos
imul
rcr
pop
xor
js
adc
mov
cmps
sbb
jnp
jb
cdq
xor
rcr
aad
dec
mov
mov
cmps
jmp
test
jnp
scas
mov
ret
not
add
ret
fstp
cmps
push
dec
retf
inc
cmp
std
or
aas
xchg
popf
add
mov
leave
push
xchg
pop
mov
in
addr16
jmp
sub
shl
repz
stos
and
jl
in
(bad)
mov
add
jo
(bad)
mov
sbb
xchg
movs
int3
add
jae
mov
(bad)
push
adc
in
popf
xlat
int
inc
call
or
cmp
inc
pop
mov
jl
xchg
push
mov
push
fs
and
jg
dec
or
fmul
xchg
xlat
sbb
mov
(bad)
aas
and
sub
fcom
fdiv
aam
jb
out
mov
test
dec
into
xor
retf
add
clc
cmp
mov
imul
bound
pop
jne
and
pop
in
test
mov
mov
pop
dec
jnp
out
push
dec
sub
sbb
aas
mov
scas
out
rcl
xchg
je
mov
add
retf
retf
(bad)
lds
lahf
cmps
and
dec
pop
cmps
inc
sub
cmp
push
shl
push
push
test
mov
jno
int
outs
sar
sub
xor
(bad)
sti
mov
xchg
clc
(bad)
mul
mov
cmp
in
enter
xchg
pop
nop
loopne
add
nop
and
mov
mov
call
pop
pop
cmp
cmps
rol
das
and
jns
add
popf
(bad)
jne
pop
cmp
pop
adc
push
imul
cmp
sub
(bad)
fwait
aas
pop
mov
push
mov
or
xor
cwde
sub
inc
add
scas
xor
arpl
fadd
lods
fdiv
dec
das
adc
mov
mov
icebp
ins
add
cmp
xchg
stos
sbb
add
xor
mov
sub
es
aas
xor
push
clc
fdivrp
das
std
pop
repnz
mov
inc
jmp
ror
jl
inc
jb
sbb
addr16
sbb
out
mov
xor
dec
sahf
mov
push
pop
push
lea
pop
and
mov
out
in
cs
mov
aad
sbb
out
mov
mul
rcr
ja
rcr
or
sub
fisttp
in
xchg
out
fmul
sti
mov
mov
clc
mov
icebp
push
xchg
clc
sub
mov
xor
aam
sub
mov
in
mov
cs
and
das
repz
mov
sbb
xor
jbe
call
(bad)
and
ds
movs
sbb
neg
jns
xchg
push
jo
sbb
push
dec
inc
outs
dec
mov
inc
cs
push
jb
imul
ss
arpl
icebp
jnp
mov
adc
mov
inc
dec
rol
movs
(bad)
xlat
int3
retf
sti
cmp
adc
test
(bad)
rol
cmps
sbb
xor
adc
clc
or
jo
rcr
aam
(bad)
dec
push
(bad)
ror
mov
xchg
(bad)
nop
shl
sbb
fisub
(bad)
stc
adc
inc
jo
lea
xor
pop
jecxz
lahf
inc
daa
div
movs
addr16
repnz
xchg
push
and
xor
repz
sbb
mov
adc
scas
test
dec
out
lea
das
jbe
pop
xor
push
sahf
movs
fcom
sub
sbb
in
mov
popf
pop
out
test
pop
and
adc
xor
and
jmp
shr
jge
pop
fist
adc
dec
out
popa
add
addr16
daa
dec
xchg
mov
adc
test
pop
xlat
imul
dec
into
bound
add
cdq
dec
stos
add
nop
jnp
jge
cmp
xchg
mov
jb
jle
push
out
sub
xor
enter
ins
loopne
xor
addr16
cmc
fidivr
sti
loop
jmp
or
test
call
mov
fmul
cmc
mov
mov
(bad)
jno
jp
sbb
sbb
retf
push
push
out
mov
cmp
test
ins
or
pop
sub
sahf
jge
sub
retf
invd
call
mov
xchg
jb
sahf
sub
inc
xchg
push
mov
push
xchg
data16
out
inc
push
sbb
pusha
fwait
and
mov
dec
movs
ds
out
aam
mov
mov
or
or
pop
xchg
std
xor
push
push
test
and
pop
cmp
js
jns
pop
lock
and
mov
pop
shl
sahf
pop
(bad)
cmp
cmp
aas
cdq
pop
mov
jbe
lock
adc
stc
dec
adc
movs
sti
cli
sub
fimul
add
sub
sub
aad
push
pop
pop
fistp
ins
sub
(bad)
mov
mov
sbb
adc
imul
xor
inc
mov
and
(bad)
jg
pop
xchg
sbb
inc
xchg
scas
and
xchg
mov
mov
jnp
mov
shl
add
sahf
or
sti
jo
xor
xor
xor
retf
cmps
xchg
pop
(bad)
je
fst
adc
mov
fdivr
aaa
sbb
mov
aas
and
mov
mov
jo
mov
ins
mov
movzx
sti
mov
(bad)
loope
pop
inc
lods
push
xor
xchg
movs
jae
or
xchg
mov
dec
cmp
mov
xor
fmul
inc
xor
cmp
js
repz
sub
push
pop
cmp
mov
mov
or
enter
jecxz
or
test
fs
dec
push
pop
(bad)
je
or
pusha
leave
out
sti
and
lods
and
mov
rcr
mov
mov
loop
rcl
mov
mov
pop
push
aam
movs
imul
iret
ret
jg
fstp
jecxz
push
and
pop
aad
ja
mov
jne
jnp
loope
fst
jmp
mov
mov
jns
xor
sbb
fs
inc
les
cmps
test
cmps
cmp
fwait
jns
mov
sub
in
inc
in
out
add
std
retf
imul
les
in
pop
in
scas
fdivr
out
scas
cmp
(bad)
movs
(bad)
dec
repz
cwde
cmp
dec
dec
mov
cmp
pop
mov
inc
jl
push
xchg
inc
aam
dec
push
or
aad
cmp
push
mov
and
sbb
rol
aaa
adc
jbe
pop
xchg
xchg
push
cdq
and
mov
pop
pushf
repz
jmp
xor
gs
int
push
std
dec
retf
xor
(bad)
mov
pop
sub
pop
iret
and
ins
mov
dec
repz
jae
cli
lock
jnp
dec
inc
adc
mov
mov
jmp
mov
cmp
pushf
cmp
retf
jo
imul
cwde
out
dec
icebp
inc
fcos
pop
js
cmps
in
push
xor
cmc
fsubr
push
shr
jg
daa
sbb
xor
pop
in
jne
aas
out
and
imul
pop
(bad)
cdq
add
(bad)
or
xchg
ds
jmp
imul
neg
mov
xchg
mov
stc
inc
xor
mov
leave
push
mov
into
ja
pop
xchg
stos
es
add
out
(bad)
and
idiv
sbb
(bad)
sti
mov
test
mov
pusha
xchg
fcom
adc
cmp
dec
sbb
xchg
push
sti
push
sar
lahf
jg
mov
mov
das
in
adc
repnz
or
inc
jae
sub
xchg
sub
mov
bound
xor
adc
mov
push
or
xor
pushf
jns
inc
mov
test
mov
out
popf
icebp
mov
retf
pop
ficom
inc
pusha
lahf
es
pop
sbb
mov
xchg
push
cld
mov
mov
sub
add
mov
xchg
mov
out
mov
cmp
lods
and
add
inc
int3
ret
jb
data16
xlat
mov
test
scas
xor
mov
mov
push
(bad)
xrelease
sub
loop
ret
inc
add
push
gs
clc
movs
aad
push
sbb
ret
mov
and
ss
xchg
adc
js
jns
jle
(bad)
pop
cmp
mov
dec
and
lods
(bad)
jg
loopne
fs
sahf
(bad)
loope
movs
mov
shl
icebp
scas
ss
cmp
cwde
jns
mov
sbb
or
fs
mov
aas
ret
push
add
xor
dec
jge
mov
gs
mov
popa
into
lock
ss
xor
adc
inc
and
fimul
jae
std
push
mov
inc
sbb
hlt
les
int
sub
lds
xor
and
xchg
iret
fst
iret
cmp
jle
sub
test
mov
and
pusha
lods
arpl
cmp
xchg
out
outs
dec
push
add
pop
pop
(bad)
je
movs
adc
fs
lods
pop
loop
mov
inc
std
inc
dec
scas
ins
lods
mov
xor
push
fild
sub
rcl
xor
in
daa
scas
dec
xchg
ror
mov
ret
fistp
add
(bad)
sti
adc
push
outs
pusha
stc
or
cmps
xchg
daa
lods
push
fcomp
(bad)
and
in
add
sar
inc
mov
stos
ror
cwde
retf
pop
mov
or
jle
ins
xchg
mov
icebp
imul
pop
test
mov
ret
sbb
dec
in
nop
fucomip
pop
loop
xor
or
xor
fldcw
stos
ret
sub
cmp
push
ds
daa
pop
mov
mov
or
jno
sti
cmps
push
data16
mov
out
adc
sbb
push
mov
inc
mov
lds
cmp
jbe
mov
ret
jae
and
pop
sub
les
mov
shl
dec
mov
mov
ds
cmc
inc
pop
sbb
xchg
out
loopne
sub
push
xchg
xor
data16
popa
popf
loop
fnsave
test
mov
stos
shl
pop
dec
cmps
sahf
mov
std
imul
int
fs
pop
push
mov
add
jmp
push
jg
jp
jg
pop
dec
inc
dec
outs
in
stc
(bad)
nop
xor
call
cmp
sub
aas
js
aad
xor
or
xlat
add
add
mov
jno
test
dec
mov
push
mov
and
js
xchg
jmp
or
lds
dec
mov
mov
stos
jnp
dec
ret
div
inc
push
push
mov
cmp
stc
mov
imul
mov
ins
or
push
mov
xor
pop
clc
mov
cmps
xor
adc
or
xor
mov
fld
mov
mov
sahf
pop
inc
dec
mov
add
push
dec
shr
add
cli
dec
(bad)
(bad)
pop
dec
push
shr
sbb
jmp
out
inc
push
or
jns
shl
in
loopne
push
enter
mov
pusha
sub
je
mov
ret
or
dec
aad
jl
dec
ss
sub
jmp
popf
lods
inc
(bad)
and
in
fimul
enter
repnz
inc
enter
push
xchg
cmp
mov
adc
cmp
aam
or
jle
mov
inc
cmps
ss
inc
shl
cmp
jg
sbb
cmps
mov
cld
add
mov
mov
cmc
jae
mov
aad
cwde
and
or
lods
push
jno
imul
xchg
ficom
or
outs
mov
aam
cmp
or
push
sbb
sbb
xor
jnp
ins
div
in
add
loopne
dec
xor
aam
and
or
fisttp
out
fisttp
pop
sub
or
xor
scas
movs
scas
cmps
push
add
inc
and
mov
shl
pop
lds
sbb
loopne
sbb
cdq
cdq
leave
and
mov
inc
mov
daa
jle
iret
pushf
aad
inc
movs
or
pop
mov
mov
ins
imul
jl
fild
fimul
push
pop
in
mov
xchg
call
push
call
cli
scas
xor
xchg
mov
cmp
and
cmp
xlat
jge
or
dec
mov
jo
fstp
call
cmp
repz
or
shr
daa
addr16
pop
jecxz
repz
mov
jbe
xchg
or
cmp
movs
sub
jecxz
pop
lods
push
aam
daa
test
add
jne
sub
fnstenv
pop
pop
adc
sub
popf
add
sbb
imul
adc
paddusb
int3
mov
mov
mov
je
pop
fcomp
xor
ret
fist
inc
sbb
cmps
mov
nop
out
push
inc
mov
call
xchg
es
inc
sahf
stos
jno
stos
jo
imul
repnz
cdq
adc
mov
aam
ins
(bad)
or
sub
adc
dec
shl
cmp
call
rcl
jl
es
xor
aaa
scas
and
je
mov
jl
retf
repz
mov
fistp
dec
ds
jns
sbb
stc
xor
mov
mov
icebp
das
jns
fprem1
sti
rol
push
ja
cmc
pop
jb
stos
sub
add
fwait
outs
xchg
(bad)
sbb
mov
xchg
pop
loope
call
popa
jo
jmp
cmp
add
mov
push
adc
mov
fstp
scas
pcmpgtw
ins
push
and
data16
mov
rcr
out
dec
push
ins
pusha
mov
mov
mov
inc
or
sub
movs
leave
jns
jmp
out
(bad)
cli
and
popa
ret
popf
cmps
scas
stc
enter
shl
cld
fdivr
int
(bad)
mov
push
adc
sub
push
retf
popa
in
pusha
sub
lods
jg
into
push
test
(bad)
fild
and
pop
scas
ins
cmp
(bad)
ret
mov
mov
mov
mov
dec
(bad)
aas
movs
cmp
add
sar
cmc
into
add
sti
adc
shl
std
and
clc
cmc
jo
cmp
(bad)
(bad)
or
ror
aaa
cmp
pop
fld
out
fwait
icebp
pop
in
jle
mov
(bad)
fcmovnbe
(bad)
pop
retf
ficom
or
xchg
mov
mov
loope
push
cld
(bad)
into
adc
call
push
xor
fimul
sub
icebp
xchg
and
pop
jge
inc
add
jbe
xchg
or
je
es
jecxz
je
xchg
push
pop
dec
mov
sub
js
mov
mov
jns
dec
xor
popa
enter
imul
int
movs
mov
xchg
sbb
repnz
xor
add
cmps
inc
mov
add
test
popa
mov
in
stc
jbe
jecxz
xor
push
outs
xor
cmp
mov
or
push
mov
clc
ja
xchg
ret
(bad)
aam
mov
fs
loop
retf
and
dec
jp
ja
in
cmp
dec
push
icebp
call
fadd
xor
lahf
loope
repnz
or
sub
idiv
xor
aaa
push
sub
aad
jae
cmp
xchg
add
push
xchg
push
cdq
das
or
jp
inc
or
aad
stos
mov
mov
ror
test
dec
stc
mov
dec
adc
jnp
mov
repnz
pop
and
and
adc
jmp
and
dec
inc
fdivr
sub
call
mov
(bad)
fbld
mov
dec
jle
cmps
nop
js
bound
stos
sbb
inc
and
sbb
jle
jns
movs
daa
xor
push
cmp
adc
mov
mov
push
add
call
mov
shl
cmp
pop
adc
popa
jb
push
mov
jge
ds
shl
je
cmc
pop
or
ja
xchg
adc
mov
dec
jne
sub
pop
cmp
retf
retf
loop
popf
cmp
or
xchg
inc
xor
inc
jb
add
push
mov
sub
jb
add
test
loopne
in
aaa
dec
mov
mov
add
mov
aam
and
inc
add
icebp
xchg
jecxz
mov
shl
mov
imul
cmps
jbe
cwde
pop
repz
in
mov
bnd
call
sbb
add
(bad)
jbe
sbb
shl
pop
add
xor
sbb
(bad)
mov
out
gs
fmulp
in
sub
jp
scas
jnp
push
xor
addr16
jecxz
push
ficomp
div
mov
in
add
or
add
outs
push
adc
mov
je
jo
sub
bndldx
jl
movs
adc
push
leave
inc
mov
ins
aam
pusha
inc
jb
int3
or
hlt
add
or
fnstsw
push
jecxz
jmp
push
aas
push
mov
jo
cmp
inc
mov
sbb
retf
adc
jno
stos
push
cwde
adc
push
mov
neg
je
mov
lds
mov
adc
jge
jle
ds
pop
cmps
repz
jbe
int
push
mov
push
xor
in
dec
jecxz
and
(bad)
jno
stos
sti
or
lock
push
popa
mov
adc
ds
imul
pop
jno
cmp
cmp
ret
sti
xor
jnp
mov
imul
sbb
out
add
xor
cmps
or
adc
pop
xor
stos
or
mov
pop
mov
add
inc
loope
(bad)
lds
xchg
cs
mov
cmp
iret
mov
lahf
mov
sub
jle
fdivr
out
pop
outs
jecxz
ss
pmulhuw
addr16
jge
test
cmp
mov
cmp
out
inc
inc
mov
add
dec
outs
sbb
test
retf
mov
repz
sahf
ss
daa
sbb
je
out
jecxz
push
outs
add
pusha
jno
adc
retf
sbb
sub
mov
sbb
dec
mov
cmps
push
pop
lods
loopne
jl
loopne
adc
adc
div
and
dec
cli
mov
jle
push
imul
jno
gs
stc
pop
leave
push
js
(bad)
cmc
mov
aaa
add
push
cmc
cmp
loopne
sbb
mov
pusha
and
sar
jg
call
ins
dec
call
mov
pop
jmp
fs
gs
add
fst
je
in
lods
cs
shl
fimul
imul
xchg
cli
shr
pop
std
pop
add
gs
xchg
paddusw
sub
push
pop
push
aaa
mov
ja
add
or
mov
das
hlt
adc
(bad)
popf
mov
and
dec
fdiv
jge
adc
jge
imul
mov
push
add
(bad)
jle
shl
imul
loope
add
push
pop
gs
xchg
jae
mov
and
mov
aaa
jne
dec
jbe
pushaw
pop
xchg
pop
loopne
ds
mov
dec
xchg
bound
leave
addr16
test
pop
inc
rcl
fs
cdq
int3
loope
cdq
xchg
sub
sub
stos
fisttp
in
movs
je
aad
mov
xor
dec
int3
dec
stc
test
add
(bad)
or
jmp
sar
adc
add
xchg
jbe
and
fs
shr
cmps
add
shl
mov
add
cmp
xchg
push
xor
mov
adc
push
sti
lds
jp
out
fst
mov
shr
jnp
jb
shl
push
inc
xchg
inc
xchg
push
js
sub
int
ror
repz
jmp
movs
cli
hlt
retf
aaa
pushf
cwde
sub
mov
sbb
push
or
(bad)
xor
dec
int
sub
mov
xor
adc
xchg
aas
ja
lods
add
lea
leave
inc
jmp
mov
jl
outs
imul
xor
jl
fcomi
mov
int
xor
mov
out
mov
popa
icebp
sbb
fstp
fwait
sub
sub
push
(bad)
ja
nop
and
add
adc
inc
out
sub
inc
adc
mov
add
push
cs
ds
(bad)
lods
nop
fcom
aad
adc
out
xchg
and
std
outs
hlt
clc
mov
mov
jl
cdq
dec
xor
lods
lahf
mov
inc
or
outs
pop
shr
pop
xor
push
ss
mov
mov
pushf
push
cmp
push
sub
dec
push
aaa
sub
(bad)
add
push
call
or
or
pushf
jl
push
shl
inc
js
(bad)
popa
or
mov
dec
scas
clc
not
sbb
je
pop
fist
inc
loop
stc
and
cmp
out
sub
movs
add
test
mov
scas
inc
mov
push
(bad)
aad
xchg
push
das
imul
mov
pop
sub
loopne
sub
xchg
(bad)
jno
dec
push
sbb
emms
add
sub
jmp
ins
sbb
rol
rol
ja
mov
in
sbb
push
mov
ror
pop
or
iret
dec
mov
pop
dec
jns
pop
mov
inc
pop
mov
inc
push
or
loop
push
jl
pusha
mov
stos
stos
mov
jp
xor
push
sahf
ja
popf
aad
mov
movs
scas
cli
xchg
imul
and
and
sub
or
pop
or
leave
std
sbb
adc
add
jo
lods
xor
inc
ficomp
sti
cmp
out
or
add
imul
mov
ss
call
cmp
add
outs
mov
dec
mov
xlat
cdq
xor
cld
push
ins
pop
cdq
je
imul
add
jmp
or
add
dec
in
sbb
push
mov
out
xchg
cmps
cmp
xor
dec
xchg
jmp
lds
ins
bound
pop
icebp
xor
add
pusha
and
push
and
pop
mov
fcom
test
movq
mov
cdq
and
dec
rep
call
je
inc
repnz
dec
fcmovnb
sar
lock
je
sbb
mov
mov
outs
or
ret
mov
xor
mov
push
jbe
sub
xchg
sbb
aaa
push
mov
sbb
mov
call
jmp
mov
inc
inc
jg
popf
pop
mov
sahf
pushf
ins
mov
mov
cs
clc
int3
fs
mov
pop
add
stos
xchg
or
dec
pop
mov
test
lea
test
and
add
imul
js
inc
lahf
mov
loopne
inc
stc
jne
movs
cmp
es
sbb
dec
fsubr
sbb
dec
int3
inc
push
rcr
xor
adc
push
pop
retf
aas
std
jns
cmp
(bad)
adc
xor
mov
stos
stos
addr16
mov
ror
lock
mov
ds
cwde
and
data16
add
arpl
pop
add
add
rcl
add
cmps
(bad)
call
je
push
xchg
pop
or
adc
popa
inc
sar
clc
push
jnp
mov
enter
loop
lds
cmp
icebp
cmps
sub
outs
xor
adc
mov
pusha
xchg
xchg
js
jge
xchg
mov
pop
push
cwde
inc
xchg
pop
outs
loopne
int
aad
pop
jns
mov
loope
pop
sub
sub
mov
mov
xchg
mov
push
ss
pop
icebp
loope
imul
dec
push
mov
dec
cmps
jns
call
xlat
bound
dec
stos
jl
ja
jmp
dec
loope
loopne
fcomp
sahf
loop
adc
sub
pop
cmp
pushf
mov
sub
pop
xchg
xor
outs
mov
ja
ret
adc
int3
mov
add
xor
mov
jp
mov
push
loop
stos
movs
(bad)
retf
push
sbb
sub
jge
scas
mov
cs
lea
dec
cmps
out
cmp
push
push
mov
xchg
div
mov
sbb
xchg
jl
push
cs
aam
out
xchg
scas
mov
cmp
cld
enter
fwait
mov
imul
cdq
xchg
push
mov
aad
bound
or
push
mov
adc
mov
cmp
xchg
dec
adc
imul
rol
retf
stc
ds
int
jne
cli
fs
mov
push
div
arpl
pop
arpl
dec
nop
push
pop
jl
sub
xor
sub
jb
mov
sbb
mov
sub
ds
adc
test
out
imul
inc
leave
clc
fidiv
loopne
pop
xchg
jle
jmp
adc
cmp
add
sbb
popa
cmc
mov
add
push
hlt
sbb
push
sub
adc
mov
ins
aam
dec
xor
jbe
test
mov
jmp
in
hlt
add
sub
test
dec
xchg
xchg
jl
pop
sar
pop
pushf
or
adc
shl
js
sbb
sti
loope
push
out
fwait
adc
test
out
push
fild
mov
mov
scas
jmp
cmc
int3
ss
push
add
adc
and
fucom
xlat
mov
push
adc
pop
inc
daa
sub
mov
je
leave
loope
(bad)
fld
mov
shr
ins
shl
jge
and
nop
pushf
mov
jnp
xor
loopne
mov
sub
pop
cmp
and
sub
ins
mov
mov
jbe
arpl
in
adc
push
add
aas
or
pop
cmp
das
mov
sbb
ret
mov
test
xor
iret
pop
int3
pop
ins
mul
cmp
in
inc
add
rol
xor
gs
popa
fadd
sbb
stos
cmps
stos
jns
shl
mov
call
cmps
sub
sar
mov
inc
fld
idiv
sahf
xor
dec
pop
imul
test
movs
gs
adc
push
test
xor
jmp
dec
mov
sub
arpl
jp
aad
je
add
mov
mov
mov
(bad)
jmp
test
lods
fadd
das
jge
or
lea
xchg
iret
outs
jg
dec
add
jmp
push
xchg
data16
fst
jge
mov
(bad)
aam
cli
aam
push
add
das
gs
movs
sbb
push
pop
lods
xchg
gs
outs
gs
int
pop
test
push
and
jbe
loopne
mov
pop
push
add
loop
ins
or
jge
das
mov
ret
bound
aam
mov
bound
cmp
dec
popa
push
and
sbb
aam
mov
(bad)
jmp
sbb
leave
icebp
sbb
push
adc
aas
jno
outs
xor
out
or
gs
mov
cmp
fsubp
cmps
jbe
pop
mov
mov
fld
xor
imul
retf
inc
mov
pop
add
mov
(bad)
test
ret
xchg
push
cmp
dec
movs
push
int
test
jae
in
mov
arpl
rcr
mov
mov
fiadd
jne
inc
fmul
sub
dec
int3
pop
jg
fs
pslld
inc
popa
and
sub
ins
jg
lods
push
jnp
and
in
add
stos
jbe
mov
jno
movs
cmp
cmps
mov
sbb
mov
sbb
fbstp
icebp
imul
popf
cmp
inc
sub
das
jnp
pop
aaa
inc
mov
or
out
jb
pop
pop
popa
push
getsec
or
add
cmp
out
mov
cmp
int
xchg
and
xor
pop
call
sbb
test
fld
punpckldq
jb
and
sbb
call
jg
jp
in
in
fs
push
xor
dec
lock
repz
adc
xchg
shr
sub
inc
repnz
and
inc
stos
mov
popf
adc
fs
ret
fild
xchg
xlat
sub
xchg
mov
push
neg
cmp
dec
lods
add
movs
in
cmp
(bad)
sub
xchg
pop
sub
push
mov
sub
daa
sub
js
lock
call
sub
and
iret
cmp
fs
push
cmps
jne
sbb
lahf
sti
push
xor
adc
fisttp
dec
je
mov
dec
sbb
and
outs
imul
rcl
inc
mov
mov
rep
cld
inc
push
mov
jno
ins
push
stos
jl
xor
xor
inc
xchg
jge
scas
call
adc
adc
inc
repnz
add
int
cmp
jmp
mov
xchg
pop
push
jmp
inc
inc
in
or
lds
jmp
mov
pusha
fdiv
jle
sub
sti
and
in
leave
jecxz
jmp
jge
fidiv
jl
loopne
test
pop
pop
enter
push
jno
jge
fisubr
pop
or
(bad)
sti
push
pop
xchg
imul
cdq
xor
jo
sar
jb
inc
mov
sub
pop
daa
dec
out
xchg
or
xchg
dec
mov
jp
jle
hlt
sbb
lds
mov
mov
aas
(bad)
or
cdq
xor
mov
xchg
gs
push
clc
movs
mov
xchg
pop
scas
mov
sub
sar
popf
jmp
push
dec
add
sub
ins
mov
xor
adc
fidivr
lods
pop
cmp
call
jb
call
mov
div
aaa
mov
lods
push
mov
sbb
scas
mov
or
(bad)
add
sub
and
loop
push
leave
pop
sahf
or
mov
in
dec
add
gs
cld
push
push
addr16
repnz
mov
pop
inc
push
and
sahf
lock
pop
xchg
xlat
repnz
or
push
pop
adc
or
cli
cmps
jmp
and
and
mov
push
fisttp
xor
stc
(bad)
adc
jae
push
pop
aad
lods
mov
test
out
mov
jecxz
imul
and
pop
push
hlt
shr
sbb
ds
xchg
inc
jnp
pusha
(bad)
dec
fnstcw
xchg
iret
pop
loop
clc
xor
fwait
jge
cmps
jg
mov
dec
jecxz
out
xlat
inc
jae
add
test
mov
loopne
jg
inc
or
bound
and
push
call
pop
leave
pop
jo
sbb
out
ret
adc
push
ret
cmp
ret
stos
in
mov
in
mov
jmp
ret
stc
aas
add
sbb
xchg
or
mov
mov
imul
fmulp
add
pusha
jge
push
and
ror
popf
xchg
cmp
cli
(bad)
bound
int
inc
fcom
leave
inc
jno
out
pop
sti
xor
jp
das
xchg
or
xchg
pop
sub
mov
sbb
loope
pop
sbb
(bad)
daa
pop
pop
cdq
lock
sub
jne
leave
add
out
push
leave
or
push
mov
pop
(bad)
lods
aad
add
stos
fdivr
(bad)
jbe
push
mov
leave
out
mov
retf
dec
jns
repnz
push
std
data16
fistp
mov
jo
mov
sbb
pop
push
ret
lods
jb
lahf
jbe
mov
sahf
addr16
in
gs
outs
ins
int
sbb
lea
sub
ror
cmp
je
pop
data16
scas
mov
into
mov
push
add
jle
push
pop
push
inc
bound
adc
jecxz
hlt
cs
test
pop
neg
ficomp
mov
inc
pop
aaa
xor
push
stos
mov
push
inc
push
jg
or
inc
in
adc
stos
les
div
loope
sbb
or
das
loop
add
xchg
xor
clc
mov
retf
dec
cmp
sub
mov
push
lods
sbb
clc
and
mov
mov
sbb
call
pushf
xor
aam
xor
int3
call
fwait
sti
sub
(bad)
jge
in
xor
mov
lahf
add
add
lahf
pop
lods
mov
dec
ret
(bad)
fiadd
or
or
das
jns
xchg
push
(bad)
sub
retf
and
and
and
inc
mov
(bad)
and
dec
jbe
retf
fcmovnu
test
lock
push
mov
pop
mov
jmp
mov
mov
adc
and
shl
sbb
sub
cmc
mov
sub
cld
repnz
jg
fisubr
sub
sub
shl
lods
sbb
sub
mov
movs
jle
cmp
leave
inc
mov
test
loop
dec
jle
mov
mov
mov
pop
in
fdivp
adc
mov
jns
xor
movs
mov
xchg
mov
pop
(bad)
ins
xlat
adc
xor
ror
cmps
jno
push
dec
xchg
xor
les
mov
repz
addr16
ins
(bad)
dec
add
push
xchg
repz
dec
sub
test
xor
repnz
xchg
inc
adc
sub
jne
inc
xchg
push
xchg
adc
pop
scas
mov
inc
enter
test
jp
cld
adc
out
adc
dec
jp
fucomip
imul
jno
sbb
stc
(bad)
shl
xchg
sub
add
rol
inc
out
outs
aas
xchg
mov
sub
enter
xchg
mov
lea
jmp
fwait
sbb
jg
inc
test
fild
mov
pop
dec
mov
retf
sub
xor
test
cdq
pop
mov
mov
aas
add
dec
mov
and
pop
sub
push
nop
gs
sbb
xor
add
outs
ror
repnz
push
cwde
cmps
dec
pop
sub
pop
mov
imul
xchg
aam
mov
xor
add
ins
cmps
push
mov
pop
pop
sub
mov
nop
jae
arpl
cmp
cwde
pop
pop
ja
and
std
mov
jg
sahf
mov
leave
pop
inc
dec
and
mov
pop
xchg
addr16
cmp
fyl2xp1
push
test
and
repz
sub
fist
pop
out
jle
cdq
into
pop
push
int
or
add
out
push
inc
stos
sbb
push
sub
inc
shl
out
and
sahf
retf
(bad)
jp
cmp
pop
jle
stos
or
add
mov
dec
xchg
lods
mov
int
std
pop
push
out
(bad)
call
jns
scas
fistp
fild
iret
jnp
or
pop
sub
push
lds
mov
push
xchg
loope
arpl
fsub
cmps
and
mov
cmps
aaa
sbb
mov
pushf
imul
repnz
daa
cmps
xchg
xor
jmp
sbb
mov
jmp
stos
sub
xor
dec
fldcw
push
inc
rcl
sbb
test
lock
daa
cs
jo
push
sahf
mov
jg
pop
loop
inc
cs
ret
push
ror
or
sbb
rep
cmp
fwait
add
xchg
inc
call
jno
jmp
push
fcomp
push
into
xor
adc
fisubr
mov
add
arpl
inc
cs
lea
and
dec
(bad)
stos
xchg
xchg
mov
xlat
shr
xchg
outs
imul
repnz
aaa
sar
mov
pusha
sub
movs
and
sub
icebp
cmp
out
sbb
cli
lods
les
outs
int3
movs
push
gs
jmp
dec
cmc
in
jns
pop
push
inc
imul
ret
push
(bad)
push
pop
in
inc
fst
xlat
sahf
jne
cmp
dec
fstp
mov
pop
aas
fdiv
fwait
jno
lods
out
xchg
outs
ret
dec
cmp
in
mov
xchg
cmp
lds
and
push
fmul
mov
out
int3
movs
ins
xchg
scas
jge
js
inc
outs
adc
cmp
nop
in
sub
test
push
inc
push
inc
sub
xchg
xchg
cmc
mov
cs
fld
fwait
inc
mov
test
cmps
push
mov
pop
sub
adc
mov
and
push
pop
das
mov
sti
dec
push
ffree
inc
or
push
jecxz
mov
imul
add
imul
cmps
ret
mov
int
js
daa
jne
jbe
or
out
test
inc
scas
push
pop
pop
adc
enterw
enter
pop
push
mov
(bad)
dec
inc
icebp
stos
jbe
clc
aaa
dec
mov
mov
nop
lahf
xor
in
iret
jp
jbe
aad
loopne
push
mul
es
and
cmps
inc
push
sbb
mov
ror
shl
cld
and
imul
fist
pop
jmp
rcr
mov
inc
cli
dec
jnp
inc
dec
cmp
ja
pop
xchg
xor
pushf
mov
(bad)
daa
dec
scas
xchg
mov
push
int
jmp
loop
jmp
jle
js
mov
(bad)
in
xor
jle
imul
jp
cwde
xchg
cmp
pop
and
pusha
xor
(bad)
xor
aaa
xor
mov
aad
iret
push
push
fisubr
call
enter
mov
repz
aad
into
js
mov
add
xchg
jg
movs
pop
fldenv
push
lds
xchg
fidivr
add
add
cwde
call
int3
push
jp
arpl
or
xor
fisubr
xchg
push
cmp
into
xor
pop
leave
sti
jnp
popf
iret
xor
xchg
mov
fsubp
mov
ja
cmps
stos
jno
sub
stos
ret
mov
sahf
sub
aam
sahf
adc
or
mov
shr
jnp
js
repz
mov
pop
pushf
inc
adc
inc
pusha
pop
cmps
fwait
mov
ds
jno
iret
sub
hlt
fsubr
sbb
test
mov
xor
lock
movs
dec
sahf
mov
mov
into
mov
call
popa
dec
idiv
shr
ss
ins
ret
jge
cmp
mov
adc
xor
(bad)
mov
xchg
cdq
mov
ins
cmp
out
adc
out
sbb
jae
(bad)
outs
test
fwait
lahf
fstp
push
lods
popf
not
mov
cld
stos
scas
arpl
int
shr
pusha
iret
movs
or
and
sahf
shr
das
mov
xor
dec
pop
mov
jmp
fstp
or
data16
movs
add
inc
and
(bad)
push
adc
pop
cmp
sub
push
aad
cs
or
or
loope
or
sub
arpl
push
push
push
pop
dec
sar
push
pop
dec
xlat
mov
mov
stos
shl
jg
add
sbb
mov
and
ja
push
jle
mov
jmp
sub
out
sbb
cmps
loope
or
or
movs
jmp
cmp
mov
rol
gs
xchg
ins
data16
pop
xchg
jge
cmps
inc
or
mov
(bad)
or
jbe
fmul
fsub
mov
and
(bad)
fisub
dec
ret
and
js
xchg
mov
adc
xchg
push
clc
inc
sahf
mov
(bad)
adc
ds
call
cmps
and
fisttp
rcr
in
les
sbb
adc
loopne
jle
(bad)
lods
loop
popa
(bad)
cmp
sub
ins
loop
sub
dec
dec
nop
cmp
xchg
fsub
and
aad
std
mov
sbb
mov
retfw
pop
add
adc
and
outs
adc
mov
or
sub
or
ret
cmps
clc
loopne
xor
bound
mov
jno
(bad)
retf
aam
lods
pop
push
push
mov
fbstp
imul
or
sbb
xchg
loop
adc
jecxz
jno
add
retf
or
cmp
and
mov
push
cmp
pop
sub
mul
push
pop
lock
sub
ja
mov
push
xchg
xor
pusha
into
ins
lea
retf
or
mov
push
adc
add
lods
pushf
xchg
iret
cmps
pop
(bad)
loopne
scas
shl
dec
cld
adc
mov
xchg
cmp
ins
sub
or
test
call
push
mov
pop
sub
adc
pop
lods
fstp
addr16
stos
(bad)
arpl
adc
or
or
es
inc
sbb
push
lock
(bad)
loop
stos
push
pushf
push
mov
and
aas
(bad)
mov
ret
xchg
leave
cmc
sbb
out
(bad)
into
xor
cmp
sar
sbb
sub
xchg
ret
(bad)
xor
cmp
xor
retf
out
mov
aam
inc
xor
sub
add
call
pop
jae
mov
bound
(bad)
mov
push
out
mov
jge
adc
sub
push
xchg
mov
mov
xchg
add
fcmovnu
push
(bad)
mov
dec
fdivr
adc
stos
repnz
xchg
stc
ins
call
hlt
mov
push
aam
inc
es
xchg
or
aad
outs
repz
xor
mov
icebp
xlat
mov
int
sti
test
fadd
(bad)
xlat
sbb
sub
out
jae
arpl
rcr
cmp
cmp
fstp
imul
pop
imul
jecxz
scas
push
jo
ret
sub
ret
mov
pop
adc
add
xlat
pop
popf
or
jg
or
js
fiadd
cmps
cmc
xchg
fwait
cmp
ficomp
shl
fdiv
das
out
xchg
cdq
fstp
arpl
pop
pop
pusha
adc
push
push
jne
mov
or
adc
js
lock
dec
(bad)
les
add
in
mov
imul
aas
or
and
mov
loope
ins
mov
rol
and
sbb
cmp
outs
das
ret
pop
sbb
or
into
fmul
ins
popf
pop
or
pop
je
jl
popf
dec
cmps
jg
imul
pushf
bndldx
adc
addr16
imul
or
xchg
scas
or
cdq
dec
adc
aas
mov
rol
sub
dec
shr
dec
sbb
dec
nop
daa
pop
adc
or
push
push
cmp
or
cmps
std
mov
or
outs
pop
mov
stc
cmp
pop
mov
sti
pop
dec
pop
xchg
fsub
sar
mov
call
dec
fild
out
jg
adc
inc
dec
and
imul
add
aad
adc
cmps
test
mov
rol
mov
adc
daa
push
call
ds
in
pop
or
inc
add
mov
mov
loop
in
int3
clc
cmps
repnz
(bad)
cmps
call
sub
shl
mov
loope
pop
push
push
jecxz
aad
sub
fnstcw
push
push
and
push
aad
mov
ja
clc
or
add
pop
call
mov
cmp
jg
push
xchg
sub
or
pop
fisttp
mov
adc
fwait
movs
rcl
pop
add
popf
mov
out
test
mov
popa
dec
xchg
mov
gs
push
jg
sub
je
mov
or
cld
pop
iret
pusha
out
dec
jmp
jae
push
sub
popf
mov
mov
in
out
cmps
adc
jno
nop
xor
test
xor
loop
scas
cmp
sub
pop
add
fwait
test
cmp
aam
call
ret
mov
repz
test
js
sti
mov
sbb
sbb
jmp
xchg
or
mov
ror
cs
or
into
loope
lahf
add
cdq
loopne
jmp
bound
enter
fstp
jno
jno
inc
dec
daa
mov
fdiv
lahf
shl
call
sub
mov
ror
out
cdq
retf
(bad)
scas
imul
add
xchg
xor
aaa
xor
push
dec
mov
pushf
test
in
sbb
xchg
es
cmp
fstp
int
sbb
fidivr
out
nop
sub
cmp
jge
(bad)
bound
sbb
ret
cmp
mov
data16
shl
mov
adc
mov
call
aam
loop
jae
not
xlat
loop
push
pop
aam
in
push
inc
ins
push
sbb
fisubr
bound
dec
fistp
xor
xchg
add
jb
pop
sti
push
aad
adc
mov
sub
xlat
adc
xchg
mov
and
xchg
mov
and
inc
test
shr
push
add
adc
(bad)
iret
popa
pop
dec
jne
push
addr16
sbb
xchg
in
and
cwde
loope
stos
ja
sbb
push
inc
mov
adc
xchg
inc
stos
sbb
(bad)
cli
mov
bswap
bound
add
add
push
xor
push
fdivr
mov
std
xchg
cmp
jle
xchg
call
xchg
or
imul
or
aaa
out
dec
je
retf
cmp
outs
enter
mov
xchg
push
test
loop
jp
push
push
add
outs
and
hlt
jmp
addr16
addr16
retf
and
mov
int
clc
mov
xchg
add
mov
clc
xchg
sbb
loopne
push
dec
movs
jno
sbb
in
inc
push
es
mov
sub
push
sbb
sub
(bad)
jbe
std
xchg
fsubr
dec
inc
imul
mov
and
cmp
xchg
rcr
adc
lds
mov
xchg
fld
aad
sub
pusha
ins
sub
cmps
setb
imul
jle
mov
jp
ds
es
cmp
or
outs
fwait
xchg
pop
xchg
outs
movs
out
adc
addr16
xor
outs
mov
xchg
call
push
outs
ins
inc
mov
pop
jbe
pop
jae
mov
add
push
inc
es
aas
push
pop
sub
mov
imul
jnp
mov
fisubr
pop
stc
fisubr
cmp
jmp
scas
mov
mov
test
jge
push
imul
stos
mov
test
mov
jae
push
push
inc
and
fld
out
and
add
add
push
xor
xor
repnz
ins
mov
pop
in
fimul
dec
hlt
or
jmp
lea
xor
lahf
and
test
fucomip
dec
cmp
mov
mov
das
paddusb
dec
out
fnsave
sahf
and
test
imul
rcr
out
jns
fist
add
inc
add
add
mov
or
sbb
and
mov
xchg
sub
or
adc
sbb
iret
mov
dec
add
fwait
xor
jb
add
(bad)
jns
lock
stos
test
(bad)
lods
inc
(bad)
pushf
ins
out
lods
push
imul
clc
dec
sbb
pop
add
stos
in
inc
out
pusha
std
adc
int
inc
not
jnp
jmp
dec
and
dec
mov
je
into
cwde
add
pop
dec
sbb
dec
pop
cs
test
enter
xchg
jl
and
or
fild
dec
iret
cli
mov
fcom
aad
ret
jbe
adc
xor
or
imul
lods
out
push
jb
and
jnp
mov
adc
stos
dec
mov
out
(bad)
mov
xor
push
xlat
sub
call
int
out
or
sti
inc
inc
push
pop
inc
pop
mov
pop
es
fbld
sahf
jae
lods
jmp
pop
jle
or
mov
imul
mov
add
jbe
das
stc
mov
push
push
adc
jle
cwde
ret
add
dec
xchg
test
mov
shl
ins
test
movs
pop
aad
loope
aam
in
ins
sbb
push
add
mov
add
mov
or
or
push
or
sbb
mov
pop
push
rcl
jle
mov
or
adc
fwait
mov
push
stos
cmp
aam
cmp
mov
in
rcr
jecxz
pop
shl
xor
push
dec
push
(bad)
mov
xchg
call
shr
sbb
and
(bad)
mov
pop
xor
and
nop
call
loope
dec
sbb
jne
mov
jg
cmp
clc
test
cmp
mov
adc
mov
dec
jge
imul
cmp
pop
jp
xchg
push
jno
push
dec
imul
sar
xchg
mov
mov
sub
inc
test
mov
adc
add
fisubr
daa
inc
pop
cdq
mov
call
inc
cmp
inc
mov
das
aaa
xchg
mov
in
jbe
outs
jge
rol
jnp
mov
rcl
sbb
cwde
jge
icebp
cmp
pop
cmps
aad
jo
cmp
mov
and
shl
and
js
sbb
pop
in
xchg
push
mov
(bad)
gs
out
cli
mov
push
mov
mov
mov
add
push
sahf
xchg
aam
jge
daa
add
push
mov
mov
mov
cmp
das
inc
mov
rcr
fiadd
mov
inc
bound
enter
cmp
dec
sub
icebp
mov
(bad)
xchg
xor
jg
(bad)
jns
test
pop
dec
and
jg
jmp
inc
clc
xor
fistp
ss
scas
jmp
cmp
call
lods
pop
psadbw
jb
enter
pop
adc
enter
push
mov
cmp
nop
mov
pop
xor
in
mov
sub
aaa
ins
clc
inc
int
push
push
adc
fcmove
loop
inc
or
inc
and
sbb
inc
jmp
inc
jno
inc
cwde
pop
cmp
icebp
test
sbb
xchg
jne
aad
push
mov
xor
adc
pop
stos
cmovl
mov
jae
dec
mov
cli
test
fistp
pop
sub
cmp
pop
imul
mov
xchg
adc
cmp
add
js
push
mov
test
hlt
hlt
jmp
or
push
dec
cmp
sbb
fwait
push
xchg
in
push
xchg
jno
hlt
bound
inc
push
sub
sub
mov
or
inc
loope
pop
adc
fistp
inc
test
inc
cli
gs
fidivr
popa
int3
jns
fist
mov
adc
in
or
repz
jge
test
fmul
das
jecxz
inc
or
ret
ficom
aam
dec
xor
retf
fwait
jg
sbb
inc
inc
sbb
add
jbe
test
mov
or
fcmovne
mov
loop
inc
fld
stos
loope
fdivr
mov
loop
pop
add
loopne
push
(bad)
mov
sub
ja
gs
xor
xor
pop
cwde
and
iret
pop
(bad)
cmp
mov
dec
jne
inc
arpl
jns
sub
(bad)
sbb
mov
dec
cmc
lea
les
mov
outs
mov
adc
test
cli
jecxz
xor
cmp
push
push
sbb
add
mov
jmp
add
push
xlat
dec
pop
mov
into
cmp
nop
jno
(bad)
mov
mov
(bad)
(bad)
(bad)
jge
cmp
stos
push
loope
sti
jl
xor
or
cs
mov
cdq
or
cmps
push
arpl
scas
scas
cmp
popf
push
popf
hlt
jne
sub
cmps
rep
push
sbb
loop
sub
stc
repnz
mov
pusha
test
js
add
push
repz
xchg
mov
leave
mov
cmp
call
jmp
jns
int3
add
adc
frstor
sahf
cmp
retf
ins
mov
mov
pusha
loope
cmp
in
dec
sbb
adc
jl
cli
das
cmp
adc
xor
add
inc
xor
int3
jmp
out
lea
push
cmp
jp
add
(bad)
loopne
ret
rep
xchg
stos
arpl
lods
pop
push
mul
cmp
xchg
mov
and
mov
or
or
cmc
aas
xor
inc
fcmovnu
retf
icebp
sti
mov
cli
retf
mov
call
maxps
movs
push
cmp
add
in
jmp
test
leave
popf
push
retf
inc
adc
ret
outs
mov
xor
xchg
mov
stc
jne
xor
ret
mov
or
mov
imul
mov
jno
xor
mov
imul
fmul
sub
dec
adc
xchg
bound
imul
mov
rcl
pop
test
mov
sub
aas
mov
retf
and
mov
fwait
jg
jmp
pop
inc
out
mov
adc
add
pushf
inc
shl
imul
sbb
push
call
push
in
(bad)
js
outs
cmp
pop
xor
fist
loop
pop
sbb
dec
mov
jo
in
popa
out
inc
mov
adc
shr
retf
test
and
or
pop
mov
shl
push
push
pop
shr
loope
xor
or
mov
dec
ffree
mov
lds
xchg
cmc
ins
mov
mov
pop
jo
pop
pushf
cdq
sub
neg
push
sbb
lods
or
gs
mov
push
scas
loopne
xor
mov
stos
xor
inc
nop
mov
pop
pusha
push
into
add
mov
and
pushf
xchg
sbb
ja
inc
or
jl
in
pop
pusha
push
and
and
or
loop
nop
push
pop
cld
retf
adc
mov
mov
jbe
push
dec
mov
movs
add
inc
push
mov
shl
dec
int
jo
or
(bad)
xchg
cmp
dec
pop
sub
xor
xchg
mov
xor
pop
pop
imul
sahf
test
cdq
jp
aas
(bad)
or
cmps
sub
aaa
(bad)
pop
pusha
in
xor
xor
cli
aad
xor
jmp
repnz
pop
cmc
stos
xor
or
imul
mov
inc
jmp
fimul
aam
or
arpl
sub
jge
sbb
push
nop
call
retf
pushf
mov
int3
xor
adc
call
(bad)
pop
fist
rol
imul
data16
xor
dec
push
call
sub
aad
xor
nop
jle
mov
xchg
mov
mov
mov
scas
add
(bad)
push
ins
rcl
mov
(bad)
jecxz
adc
lods
or
jle
mov
or
cld
mov
adc
imul
js
(bad)
(bad)
cmc
cwde
bound
fs
test
xor
ins
lods
or
or
les
dec
nop
mov
dec
pushf
mov
(bad)
aad
jle
push
stos
pop
pop
or
outs
pop
out
cld
sbb
jp
dec
cmp
in
js
cli
xor
sbb
movs
xor
sub
test
pop
lds
daa
xor
cmps
pop
dec
in
in
cs
push
adc
mov
nop
push
xor
in
xor
sub
xchg
in
in
int
scas
dec
inc
ja
push
and
sub
fstp
sbb
push
cmp
(bad)
sar
push
push
cld
xchg
xchg
add
test
mov
dec
jb
retf
arpl
es
sbb
push
and
jg
jne
dec
xor
pushf
cli
data16
ins
jne
test
ins
outs
imul
xchg
sub
mov
sbb
mov
cmp
sub
je
and
(bad)
dec
inc
test
xchg
mov
fwait
(bad)
and
hlt
popa
movs
lahf
xchg
mov
pop
sar
xor
mov
fist
mov
ins
mov
mov
enter
mov
inc
icebp
dec
sbb
ins
cmp
sub
mov
lds
mov
mov
(bad)
adc
out
jp
repz
sub
into
lods
push
mov
dec
xor
jae
or
(bad)
hlt
rcr
pop
sbb
jp
sti
scas
jno
call
xchg
jbe
lock
mov
xchg
jne
(bad)
mov
mov
cmp
cmp
pop
clc
xchg
fist
int3
pushf
add
nop
iret
popa
pushf
in
inc
cld
daa
pop
std
repnz
push
movs
ret
add
hlt
sti
mov
adc
mov
repz
fld
mov
pop
dec
scas
add
fsub
int3
and
xchg
mov
aam
add
pop
stc
cmp
stos
jbe
js
movsx
popf
sbb
push
or
cdq
fs
stos
jns
(bad)
fistp
sub
jmp
jle
fisttp
jecxz
clc
mov
loop
shl
or
outs
sub
lods
mov
and
pop
jne
mov
int3
mov
sbb
aas
dec
push
push
mov
push
mov
dec
pop
lahf
mov
and
(bad)
(bad)
jmp
(bad)
imul
jb
jl
in
add
lock
stos
adc
in
xchg
sub
cmps
(bad)
and
and
shr
es
ds
lods
mov
adc
mov
in
cmps
push
rcl
les
xor
popf
sub
fstp
cmc
leave
cmp
out
mov
xor
adc
mov
push
sbb
icebp
mov
iret
(bad)
mov
push
les
loop
iret
not
xchg
adc
loop
push
not
cdq
stos
leave
pop
or
mov
pop
shr
push
enter
ret
cmps
je
sub
cmp
lds
push
inc
jmp
mov
rcr
cmp
sub
enter
std
push
sub
add
xchg
xlat
dec
lods
daa
enter
stos
push
mov
out
add
aas
shl
xor
xchg
int
call
cmc
cwde
repnz
addr16
dec
cmp
out
mov
pop
rol
xchg
mov
scas
mov
sar
xchg
int3
in
rcr
cmps
sar
push
std
pusha
ret
xchg
aaa
cmps
mov
dec
pusha
fcom
mov
iret
(bad)
cmp
mov
je
(bad)
mov
data16
sbb
sub
pop
pop
jne
or
lock
dec
fs
ret
cdq
(bad)
or
out
add
pop
sbb
mov
sub
mov
lahf
jg
xor
std
jle
ret
push
mov
xchg
shl
inc
mov
outs
cmps
mul
leave
jns
add
repz
xchg
fdivp
sub
mov
aad
xor
xchg
pusha
lods
jge
add
out
not
add
or
arpl
cmp
in
xor
popf
fisub
dec
and
push
dec
ins
icebp
sub
jmp
outs
push
push
nop
mov
daa
call
and
mov
les
or
dec
imul
imul
push
inc
xlat
push
dec
(bad)
dec
jmp
aad
inc
call
mov
cmp
shl
sbb
rol
jle
cmp
je
jno
nop
xchg
push
(bad)
cmps
std
lahf
inc
push
ds
retf
iret
xchg
jmp
xchg
xchg
mov
push
adc
stc
cmps
call
mov
mov
icebp
inc
scas
inc
mov
out
cmp
or
cmc
dec
jbe
int3
pop
and
sbb
xchg
xchg
push
je
int3
add
leave
pop
inc
call
gs
mul
fisubr
xor
cmps
push
fs
clc
cmp
push
mov
fstp
sti
mov
cmp
(bad)
and
dec
(bad)
enter
pop
mov
jle
cdq
jecxz
jno
dec
daa
dec
sub
or
cmp
inc
jmp
mov
test
cmps
test
aam
test
mov
cmps
in
push
mov
shr
lods
cmp
ret
test
adc
pop
add
xor
shl
xor
clc
inc
push
pop
out
pop
cld
cmp
pop
shl
jmp
fbstp
rcr
jge
fwait
mov
and
jae
imul
icebp
push
sbb
cld
xor
inc
sub
sub
loopne
jbe
test
popa
rcr
jg
mov
mov
(bad)
cmp
cmc
sbb
mov
sahf
hlt
rcr
jle
in
or
cdq
repnz
adc
ja
cmp
cmps
shl
in
scas
test
out
rcl
stos
shl
and
adc
imul
rcr
aas
adc
es
jmp
inc
push
dec
(bad)
mov
sub
cmp
nop
(bad)
fistp
jl
pusha
stc
mov
xchg
retf
cmp
ficomp
inc
jb
dec
mov
test
xchg
test
les
mov
and
push
in
mov
adc
inc
jg
jle
xchg
jg
jne
fadd
dec
mov
nop
xchg
mov
mov
lds
stos
outs
mov
adc
(bad)
and
xchg
addr16
pushf
movs
xor
xchg
mov
in
stos
sahf
dec
fld
hlt
rcl
mov
call
fst
outs
sti
dec
es
mov
cs
lock
je
sti
rcr
cs
js
push
and
sub
rcr
mov
pushf
jmp
pushf
hlt
xor
js
test
outs
ret
dec
sbb
add
jecxz
xor
dec
movs
cmp
add
xchg
xchg
(bad)
arpl
inc
shl
or
cmp
dec
mov
movs
jecxz
(bad)
mov
pop
mov
(bad)
outs
push
outs
(bad)
not
js
aaa
and
lock
cmp
outs
sti
sub
pop
push
xchg
sbb
mov
xchg
sbb
stc
inc
scas
inc
clc
mov
sti
xor
test
and
leave
xlat
push
mov
inc
pop
adc
mov
push
mov
or
mov
cwde
outs
ret
xchg
sub
cwde
sub
pop
jle
or
ret
inc
cmps
imul
push
je
inc
imul
cmp
cmp
push
inc
mov
cdq
ins
sbb
push
xchg
mov
ds
inc
shr
cmps
cmp
pop
xchg
push
leave
jo
dec
fdiv
inc
lds
jns
repnz
stos
cmp
inc
cli
or
ret
mov
int
neg
in
int
jnp
sti
sub
adc
outs
push
aam
sub
jl
or
es
std
inc
xchg
jmp
shl
add
push
imul
adc
test
(bad)
hlt
ins
push
lahf
push
pop
adc
xor
in
or
mov
daa
fnstsw
outs
mov
outs
test
arpl
mov
cmp
jmp
push
cmps
pop
cmp
shl
inc
inc
push
ss
fcom
xchg
sub
rcr
push
mov
or
push
in
retf
mov
scas
(bad)
into
loope
xchg
and
shr
(bad)
sbb
ror
push
xor
(bad)
sub
mov
inc
xor
retf
mov
into
inc
clc
xor
stos
hlt
cmp
inc
ret
xor
jo
fist
scas
jb
bound
popa
and
push
(bad)
movs
jmp
ss
add
push
push
mov
sbb
inc
(bad)
cmp
push
or
jae
xchg
dec
jecxz
cmp
jg
xchg
fwait
mov
push
push
fnsave
jge
iret
mov
inc
xchg
xor
fsub
xchg
cwde
inc
jp
mov
adc
jecxz
retf
out
outs
mov
xor
xchg
loop
(bad)
add
pop
out
add
mov
mov
fsubr
adc
cdq
imul
dec
xchg
jb
push
sub
cmp
mov
jno
adc
icebp
jmp
push
js
stos
mov
sar
pop
or
mov
xchg
push
int
(bad)
in
test
inc
push
cmp
gs
mov
scas
jmp
test
dec
lods
push
jae
pop
mov
sbb
(bad)
arpl
lock
cmps
mul
retf
popf
or
dec
aam
jge
icebp
iret
cmp
ror
cmp
adc
cmps
mov
mov
cmp
clc
iret
xor
fs
and
push
mov
sbb
sbb
adc
mov
(bad)
into
fisttp
push
in
ficom
push
jnp
sbb
inc
in
add
sub
leave
inc
cmp
or
int3
xchg
retf
mov
retf
xchg
std
mov
jns
dec
outs
js
stc
or
jmp
dec
repnz
jno
scas
gs
fcmovb
cld
in
scas
add
int
mov
push
mov
or
pop
and
xor
cmp
push
pop
mov
pop
mov
fadd
(bad)
xchg
cmp
leave
xor
jne
push
ss
xchg
inc
imul
or
sbb
xor
retf
sahf
xor
aaa
sbb
in
lods
xor
lods
iret
lahf
rcl
sahf
mov
pop
jne
or
rol
inc
stos
fst
cmps
inc
repnz
mov
jnp
clc
dec
xor
add
xchg
inc
arpl
stc
daa
dec
cmp
dec
cmp
add
sbb
outs
fwait
imul
dec
out
mov
mov
repnz
dec
loopne
mov
fcmove
ins
dec
xchg
adc
(bad)
cmp
jns
sub
xor
leave
push
iret
test
call
aas
ret
into
mov
nop
sbb
jae
mov
add
mov
inc
push
inc
shl
loop
sti
sti
xor
add
jmp
jae
fadd
push
jb
popf
dec
fld
rol
outs
aas
loop
jb
lods
pop
inc
xchg
and
xor
xor
jb
push
xor
in
out
lahf
pop
mov
leave
es
xor
adc
leave
push
sbb
(bad)
pop
push
ds
xor
xor
xor
xor
popf
inc
pop
mov
pushf
sub
movs
aaa
pop
adc
jnp
adc
jecxz
ds
pop
add
cmp
push
xor
cli
lods
pop
add
shr
sub
inc
repnz
and
jmp
xlat
pop
es
dec
psadbw
fwait
mov
sbb
cdq
outs
aaa
adc
movs
adc
jb
mov
add
test
in
and
sbb
out
xlat
sub
jle
(bad)
adc
sbb
clc
inc
mov
pop
pop
jmp
push
cli
lds
cmp
inc
sbb
cwde
xor
xor
pop
push
mov
shl
ja
idiv
imul
fcom
cld
mov
cmp
stos
xor
cmp
adc
mov
mov
push
add
xchg
jl
lods
mov
xchg
mov
test
pop
or
pop
add
mov
test
mov
xor
sub
add
sbb
or
mov
sbb
popa
dec
aad
addr16
int
adc
push
lahf
test
mov
lods
or
jp
dec
lods
dec
cwde
jae
mov
sahf
or
scas
sub
inc
adc
pop
mov
adc
xor
or
cmp
jo
mov
fs
cwde
adc
mov
call
xchg
jle
xchg
outs
ss
hlt
out
test
popf
jp
lds
mov
mov
test
mov
mov
imul
mov
(bad)
call
inc
xor
or
cs
aad
xor
xchg
stos
int
cvtps2pd
inc
mov
mov
lds
repnz
clc
stc
mov
mov
mov
cmp
or
mov
cmp
mov
les
in
xor
int3
out
pop
popa
daa
retf
ins
xchg
mov
pop
sub
mov
add
retf
out
xchg
scas
adc
movs
push
dec
scas
outs
test
xor
call
fcmovnu
ins
mov
iret
in
xchg
sub
cwde
dec
rcr
mov
(bad)
jg
mov
shl
popf
cmp
xor
test
dec
xor
mov
bswap
int3
cmp
stos
push
and
fst
add
jnp
mov
dec
xor
mov
mov
adc
and
sub
enter
mov
call
mov
jne
mov
mov
or
fwait
das
leave
into
mov
leave
xlat
or
ins
in
xor
ins
(bad)
lods
les
loopne
neg
mov
mov
test
dec
jmp
in
or
or
dec
(bad)
xchg
xlat
(bad)
sahf
(bad)
repz
popf
jmp
sbb
xchg
push
pusha
xor
sbb
mov
sbb
jo
inc
leave
movs
adc
shl
mov
out
(bad)
pop
aad
mov
test
push
and
aad
fist
xchg
inc
xchg
lock
hlt
scas
les
loopne
xlat
std
pusha
aaa
mov
jns
mov
and
dec
sar
adc
out
dec
sbb
int3
push
imul
fnstsw
(bad)
das
mov
stos
push
rol
mov
pop
fist
imul
fstp
sahf
aas
or
sahf
push
fmul
movs
sub
dec
push
stos
xchg
mov
loopne
xchg
inc
or
mov
bound
mov
sbb
test
ds
sbb
into
mov
add
pop
in
xor
mov
push
aas
shl
mov
xchg
mov
movs
and
stc
or
fadd
add
cmps
or
not
fstp
retf
lahf
fwait
ret
cmc
push
out
daa
(bad)
cmc
mov
push
mov
adc
jl
repz
sub
mov
rol
jmp
add
xor
not
sbb
enter
adc
xchg
lds
mov
xor
adc
(bad)
mov
int
(bad)
leave
imul
sahf
repz
or
mov
adc
adc
(bad)
pop
cmc
jno
push
cmps
sub
pop
xor
mov
rol
inc
mov
test
pop
ss
shl
or
cmp
pop
sub
ret
shl
popa
pushf
cmp
jb
and
ret
or
mov
outs
xchg
fist
pop
jecxz
sahf
or
ret
fstp
pop
mov
pop
jg
jbe
leave
sbb
shr
xor
push
xor
pusha
pop
adc
std
icebp
fstp
das
dec
neg
push
sub
pop
cmps
push
out
cmp
add
dec
out
loop
jo
add
imul
xchg
lods
xchg
stos
data16
push
pop
fs
push
adc
cld
add
dec
outs
in
(bad)
test
imul
les
ror
fistp
fstp
out
push
xor
dec
in
jb
or
(bad)
scas
add
push
pusha
inc
mov
cwde
mov
pop
add
jae
xor
cmp
dec
sbb
pop
adc
data16
repnz
lds
cmp
loopne
rcr
enter
adc
or
sub
xor
add
add
rcl
clc
dec
mov
in
retf
add
cli
fst
mov
in
sub
div
(bad)
fucomip
adc
cwde
cwde
jb
nop
inc
mov
jl
mov
mov
cmp
push
jmp
sbb
jmp
dec
sbb
mov
popf
retf
jmp
dec
cwde
push
inc
mov
scas
xor
jmp
rcl
les
popf
or
mov
fisubr
adc
shr
stos
inc
xchg
loop
push
push
rcr
jno
mov
ins
cmp
stos
sbb
iret
mov
sbb
jns
in
or
lahf
mov
sahf
mov
jnp
cmps
sbb
out
shl
je
or
cmps
or
(bad)
fcmovnu
hlt
jmp
sub
lock
imul
xchg
js
test
and
call
aaa
mov
hlt
sbb
fst
mov
inc
imul
pop
icebp
(bad)
iret
inc
mov
push
test
mov
push
mov
and
xchg
stos
or
add
imul
repnz
js
jns
out
or
ret
mov
cmp
movs
hlt
pop
aam
rol
xor
dec
sub
stc
jge
dec
mov
xchg
cmc
(bad)
cmp
sub
rol
mov
jmp
adc
add
dec
mov
mov
bound
jns
mov
movs
sbb
and
add
stos
mov
daa
ret
add
mov
aam
ret
pop
cmps
pop
or
pushf
xchg
psubw
stc
or
cmps
std
mov
loop
mov
sbb
(bad)
or
out
shl
sbb
or
in
scas
inc
cmps
cmp
lods
enter
sub
jmp
popf
push
dec
icebp
fwait
xchg
(bad)
test
sub
fcomp
mov
inc
das
xor
push
jge
add
inc
xchg
mov
jns
dec
es
fisttp
fsubr
jmp
cmp
stos
jbe
mov
out
rcr
mov
int3
xor
or
mov
push
pop
adc
es
inc
loope
cmps
push
repz
(bad)
add
icebp
jo
adc
pop
dec
mov
sahf
push
fwait
sub
std
jnp
clc
adc
sbb
sub
ss
mov
or
imul
icebp
xchg
push
xor
clc
outs
leave
sbb
push
mov
in
std
and
fcom
xchg
mov
xor
cld
pop
and
cmp
outs
bound
retf
out
inc
ss
jnp
mov
idiv
cli
fs
xor
enter
jp
jne
hlt
and
push
xacquire
std
aaa
cmp
cld
je
xor
ins
mov
mov
push
movntq
out
mov
inc
aaa
cdq
sbb
push
mov
cmc
les
dec
sub
inc
push
and
or
cli
jmp
cmp
mov
ins
aam
xor
aad
addr16
aaa
push
jnp
(bad)
enter
(bad)
fistp
call
(bad)
push
stc
lea
icebp
cmp
mov
cmc
hlt
adc
dec
stos
cmp
(bad)
mov
xor
ss
mov
sahf
loop
pushf
dec
clc
iret
fisubr
mov
push
xchg
jo
hlt
test
pop
jae
(bad)
xchg
rcr
(bad)
pusha
push
icebp
xchg
mov
cmp
mov
idiv
hlt
adc
cmp
mov
cmps
hlt
dec
or
pop
sbb
(bad)
push
(bad)
mov
cmp
es
push
cld
dec
pop
les
sub
(bad)
std
add
adc
push
movs
call
and
add
jbe
lds
mov
push
in
mov
fldenv
jae
dec
dec
and
jo
js
gs
stc
ja
mov
mov
ja
call
ret
fnstsw
sub
jb
cmp
inc
sti
test
out
push
stc
jb
xor
addr16
or
xor
movs
cmp
adc
shl
ret
retf
pop
or
xor
pusha
xlat
xchg
idiv
rol
mov
xor
icebp
leave
call
fcom
mov
loope
jle
movs
add
push
test
fs
js
add
cmps
add
ja
sbb
ret
sub
pop
add
in
sub
(bad)
jmp
inc
dec
mov
jmp
dec
clc
shl
xchg
lods
popa
and
cmc
inc
pop
push
idiv
(bad)
popf
lods
jb
arpl
mov
mov
rcl
adc
mul
outs
in
cmp
cld
jl
jp
stos
mov
outs
pop
jmp
mov
sbb
pop
pop
pusha
push
adc
imul
xor
ret
fst
in
div
or
ret
ins
jp
jb
jge
or
imul
add
fnstcw
push
push
pop
out
inc
rol
imul
inc
mov
out
or
ins
adc
imul
nop
outs
push
je
mov
push
adc
cmp
and
repnz
into
push
pop
aam
push
lea
loope
cld
xor
push
add
sub
ja
fmul
data16
jnp
int
cli
and
inc
push
push
aaa
scas
and
sbb
sub
imul
xchg
imul
test
retf
cmp
jp
cmps
pusha
cmp
mov
test
mov
dec
cmps
push
adc
outs
mov
push
sub
cdq
retf
sbb
test
aas
int
outs
inc
pushf
jmp
xchg
aam
xchg
jg
xor
jmp
jmp
jmp
push
mov
je
sub
fucomp
inc
add
mov
or
sbb
in
pop
add
loope
adc
movs
jge
(bad)
cmp
jmp
cs
sub
push
jne
je
jmp
mov
mov
jmp
ins
and
add
lea
aaa
jne
les
xlat
retf
daa
cmp
(bad)
jns
ins
in
test
mov
jne
xchg
sbb
and
push
push
sbb
nop
inc
ret
fidiv
cs
push
or
pop
dec
ins
xchg
xchg
pop
mov
out
mov
inc
mov
fwait
ss
xchg
nop
xchg
xor
push
loop
push
jmp
gs
xor
pop
gs
pop
mov
mov
push
cld
xchg
adc
sbb
cmps
lock
out
or
cmps
cmp
jg
fdiv
pushf
mov
dec
iret
cmp
mov
or
cmp
nop
jo
xchg
out
data16
pop
shr
pop
jge
jp
cmps
test
sbb
lea
sub
cmc
xchg
bound
ss
ret
xlat
xor
cmp
jb
retf
popf
aam
push
jno
out
xchg
test
retf
mov
or
cdq
push
in
xchg
jecxz
call
and
test
cmp
pop
test
mov
call
ror
cwde
mov
mov
dec
cmps
into
mov
pop
out
iret
and
les
push
sbb
shl
leave
jle
fucomi
push
aam
xor
xor
lock
sbb
out
lods
ds
xchg
push
add
adc
into
jmp
cdq
es
lahf
mov
jae
cdq
add
adc
mov
lock
stc
mov
jb
and
sub
repnz
add
aaa
ja
pop
push
inc
adc
jle
in
mov
pop
ds
xor
push
inc
(bad)
jle
dec
jns
pop
xchg
add
adc
iret
lahf
and
xor
adc
mov
sub
inc
xchg
imul
mov
daa
inc
xor
enter
mov
(bad)
inc
push
stc
xor
or
aas
adc
movs
ins
or
xor
sbb
ins
icebp
pop
add
add
sub
push
sub
adc
pop
push
xor
jae
xor
sub
int
cmp
cmps
pushf
mov
dec
rcr
sub
(bad)
push
mov
dec
adc
jmp
adc
jmp
call
mov
push
mov
lods
fsubr
imul
int
rcr
mov
mov
into
icebp
jbe
arpl
pop
mov
and
mov
neg
sub
sti
push
cmc
das
mov
sbb
xchg
cmp
cli
dec
adc
mov
mov
jno
mov
xchg
ja
fwait
inc
sti
and
xor
jne
sub
jmp
(bad)
clc
xchg
mov
ja
push
repz
les
add
ret
nop
add
xchg
sbb
and
inc
pop
pop
loop
(bad)
mov
xchg
out
sub
push
dec
retf
mov
cli
movs
mov
xchg
cmp
aad
sub
mov
mov
add
cmc
pop
inc
lahf
test
shr
jp
sub
movs
cld
(bad)
jo
mov
jp
mov
inc
push
test
dec
nop
imul
mov
clc
inc
sub
mov
add
add
jl
arpl
add
jne
mov
mov
(bad)
adc
inc
rcl
sti
mov
inc
int
test
sub
push
test
sub
imul
xchg
je
mov
cmps
sub
ins
cmp
pop
cmp
ins
cld
ins
xchg
aam
aas
out
cli
mov
jecxz
nop
std
cmp
data16
out
xor
push
adc
sbb
cmps
dec
jle
movs
cld
(bad)
lahf
xchg
loope
jne
outs
rol
fisub
pop
into
pop
jmp
cmp
shl
or
or
or
rcl
test
iret
rcr
loop
jbe
clc
xchg
jge
fst
push
push
imul
jecxz
inc
aad
daa
sub
shr
popa
je
and
in
fld
call
aaa
cld
jl
adc
test
leave
and
dec
test
cmps
lods
xor
lahf
fist
(bad)
in
out
mov
or
fst
lock
sub
sub
in
test
push
jmp
out
xchg
scas
jmp
repz
sub
std
scas
test
cmps
imul
mov
in
cmps
loope
cmps
sub
gs
mov
xchg
pop
gs
stos
cwde
cmp
scas
and
or
lock
jb
sub
jb
dec
ss
add
(bad)
push
test
adc
adc
jp
sbb
mov
mov
sbb
jmp
clc
mov
push
and
loop
push
rol
add
mov
sbb
sub
jge
test
jg
dec
fsub
into
aad
push
dec
sbb
dec
push
dec
and
ins
dec
xor
cld
push
movs
sti
stos
or
adc
mov
sub
int3
and
sub
add
xchg
movs
dec
jnp
pop
int
or
cmp
addr16
sub
push
fsubr
push
out
loopne
enter
pusha
push
mov
lods
imul
rcl
lods
in
(bad)
adc
push
ins
mov
dec
sub
push
cli
(bad)
xor
and
icebp
or
mov
scas
arpl
call
add
adc
mov
mov
rol
mov
nop
dec
clc
int3
cmp
cmp
or
and
cmp
aad
xlat
mov
add
in
pop
xor
outs
adc
jge
fwait
cmp
jge
std
in
outs
jb
mov
call
scas
(bad)
ds
mov
xchg
popf
in
xchg
cmp
jmp
jne
hlt
jl
out
push
jge
(bad)
jno
mov
inc
cwde
shl
or
and
xor
shl
clc
xchg
mov
add
int
push
(bad)
push
cmp
jnp
push
xchg
(bad)
cdq
mov
icebp
dec
cmp
cli
jmp
xchg
es
jmp
push
inc
mov
mov
cmps
jbe
pop
fimul
xchg
mov
(bad)
outs
in
lahf
xchg
sbb
mov
xchg
leave
mov
cmp
aas
ret
push
sub
imul
icebp
adc
jl
dec
cmp
jp
pusha
inc
add
jns
sbb
pop
jle
into
and
jecxz
jl
pop
int3
mov
xchg
xor
xchg
pop
or
mov
enter
jge
mov
ror
xchg
xor
ja
inc
xchg
or
test
sub
xor
add
push
nop
test
into
inc
sub
(bad)
cmps
mov
(bad)
in
push
mov
ja
xchg
xor
aaa
loopne
div
je
inc
inc
or
fmul
imul
and
and
mov
call
mov
(bad)
mov
pushf
pusha
push
stos
mov
dec
adc
add
fidivr
and
push
in
imul
shr
push
or
in
cmp
push
xchg
xchg
xchg
xlat
out
or
jp
js
addr16
pop
movs
pop
test
rol
and
es
nop
xor
enter
mov
sub
popf
and
jp
or
test
shr
gs
stc
retf
imul
sub
jne
pushf
(bad)
outs
xchg
aam
sub
cli
sub
inc
mov
ins
js
jb
rep
add
mov
test
inc
mov
and
and
xchg
add
cdq
mov
jp
rcr
test
fwait
adc
ins
add
lds
mov
xchg
push
sub
inc
int3
jb
and
push
mov
dec
mov
mov
js
cmp
dec
fld
mov
test
add
hlt
lds
push
mov
test
popa
and
push
scas
(bad)
push
loopne
xchg
ret
xchg
push
or
mov
xchg
pop
inc
and
repz
add
fdivr
push
jne
jo
push
lea
sub
cmp
lock
push
and
and
cld
in
enter
gs
dec
fwait
cmp
cwde
imul
sar
int
in
xchg
(bad)
stos
push
and
dec
jnp
bound
(bad)
jl
les
pop
mov
jp
jmp
aam
test
mov
sub
add
ror
(bad)
jmp
lods
lahf
call
test
sub
inc
add
dec
mov
aaa
and
cmp
add
popf
outs
retf
inc
popf
shl
cs
clc
xchg
das
loope
or
cmp
mov
sar
adc
or
or
pop
and
dec
hlt
(bad)
fcomi
(bad)
js
scas
test
jb
xchg
es
retf
mov
push
mov
jmp
jns
(bad)
ja
out
and
fadd
mov
pushf
std
pop
inc
dec
bswap
mov
sub
rol
push
xchg
cmc
mov
mov
outs
cld
dec
push
mov
adc
xor
not
ret
push
clc
clc
leave
shld
xchg
pop
icebp
push
addr16
inc
scas
clc
and
push
pop
sbb
ins
push
pop
mov
into
inc
jnp
mov
mov
cmp
xchg
mov
cmp
adc
jle
add
inc
inc
shl
idiv
leave
sar
dec
push
das
sub
fsubr
xchg
mov
and
jb
sbb
dec
and
and
mov
cmp
je
aam
jecxz
mov
aad
sbb
out
dec
movntq
pop
mov
inc
adc
xor
adc
stos
push
cli
sub
dec
cmp
imul
imul
cmp
mov
sbb
pop
call
scas
ret
dec
push
and
je
mov
addr16
jecxz
mov
dec
dec
mov
adc
jne
mov
je
lea
sbb
adc
fmul
dec
and
std
scas
xchg
and
sub
(bad)
repz
aaa
pusha
scas
movs
xlat
les
jne
stc
inc
call
test
jno
aad
mov
add
mov
pop
pop
xchg
fs
pushf
popf
les
add
xchg
data16
ds
inc
das
js
shl
mov
shr
icebp
fstp
dec
mov
ror
dec
xchg
cmp
pop
inc
les
retf
cmp
jg
push
scas
lahf
lahf
jne
std
icebp
aas
dec
ins
push
jg
stos
add
mov
sub
loopne
sar
popa
outs
pop
jnp
imul
adc
ror
mov
aam
jmp
inc
inc
icebp
and
inc
data16
xor
addr16
int
sub
mov
and
mov
mov
xchg
cmp
test
push
jns
mov
aas
out
jle
frstor
fwait
sbb
mov
cli
cmps
in
fcmovne
pop
outs
mov
jmp
xlat
out
into
cmp
xchg
dec
mov
xor
inc
out
repnz
fcom
mov
shr
sbb
mov
stos
jp
nop
sbb
add
push
sar
and
push
into
aas
xlat
popa
lods
push
lods
cmps
mov
int3
shr
cmc
out
dec
mov
push
(bad)
(bad)
jno
mov
push
jb
cmp
fsubr
scas
popf
out
mov
pop
imul
sbb
pop
loop
ret
int3
jo
lahf
push
ss
or
(bad)
jmp
adc
mov
dec
repnz
fild
ret
pop
cmp
pop
outs
cmp
mov
cs
pusha
pop
cli
das
(bad)
in
or
jno
cmp
jmp
push
imul
das
adc
sbb
mov
dec
sub
out
xchg
mov
cdq
pop
push
push
out
push
dec
loopne
push
cmp
pop
cli
sbb
pop
adc
jp
aas
(bad)
sbb
push
movs
push
jbe
push
mov
retf
stos
sbb
mov
pop
pusha
inc
sbb
cmp
shr
test
gs
mov
xchg
lea
jmp
repz
lods
daa
outs
mov
jnp
inc
call
stc
(bad)
sbb
pop
lods
mov
mov
test
xor
ret
push
cmp
imul
in
and
stos
xor
pop
pop
rcl
test
fs
mov
lds
test
pop
mov
call
leave
cs
push
adc
mov
aas
and
or
xor
add
out
jnp
jb
and
inc
repnz
mov
jle
bound
add
hlt
in
mov
push
and
sub
dec
jae
adc
inc
lods
or
jnp
sahf
aad
in
sub
xchg
imul
fisub
(bad)
adc
popf
adc
imul
push
fmulp
pop
xchg
jl
push
inc
fs
jp
push
mov
xor
clc
mov
lock
cmps
clc
xchg
inc
test
cmc
xor
jg
in
mov
sub
scas
sub
cli
arpl
dec
aaa
pop
mov
sar
add
cmps
mov
ins
xchg
lea
pop
xor
add
mov
nop
test
xchg
jae
data16
fucom
dec
enter
mov
xchg
aas
jbe
test
pusha
sbb
imul
fndisi(8087
push
jge
loopne
cmps
hlt
adc
dec
fsub
jo
popf
inc
xchg
adc
adc
sub
not
jae
les
bound
std
retf
add
pop
sub
dec
fiadd
cmp
sub
xchg
sar
(bad)
in
clc
and
pop
in
cli
inc
outs
sub
iret
pop
pop
loope
test
outs
aam
aaa
cmp
fs
fisttp
mov
imul
jle
in
sbb
add
xchg
cmp
pop
mov
pop
inc
dec
or
pop
aam
movs
mov
cld
jmp
add
test
push
xor
mov
or
inc
pop
bound
(bad)
push
adc
dec
xchg
repz
adc
cwde
daa
fcmovne
popa
je
jecxz
lahf
stos
or
xchg
xor
sahf
sbb
popa
push
loopne
adc
in
std
cdq
dec
and
adc
icebp
cmp
bound
gs
aas
mov
(bad)
jo
repz
inc
(bad)
cmp
gs
inc
fcomip
pushf
adc
mov
add
jo
call
repnz
dec
pop
or
les
inc
sbb
push
and
retf
mov
jb
jbe
sub
imul
les
ins
and
clc
addr16
cli
fiadd
push
in
cmp
js
cld
mov
xchg
arpl
mov
and
dec
inc
dec
gs
adc
daa
imul
sub
clc
js
popa
mov
or
fiadd
sub
add
int3
lahf
dec
das
inc
sbb
inc
and
neg
jb
cld
add
push
into
retf
js
out
into
inc
leave
or
shr
test
scas
leave
sar
dec
mov
fild
retf
and
int3
lahf
adc
in
push
retf
sub
retf
or
ss
inc
jne
mov
scas
xchg
xor
xor
out
imul
xchg
rcl
ins
mov
pop
fisubr
fs
lea
pop
sahf
mov
call
lock
push
or
mov
pop
and
daa
mov
fsubp
mov
jl
xor
iret
les
(bad)
dec
mov
push
push
mov
jnp
mov
(bad)
pop
sbb
mov
into
mov
fst
fdivr
xchg
fsubr
mov
call
ss
jns
scas
jbe
popf
imul
xor
arpl
in
mov
(bad)
(bad)
jg
adc
jmp
cmp
cmp
(bad)
out
(bad)
je
jnp
mov
sbb
and
ds
dec
sub
stc
inc
or
ss
fldcw
(bad)
test
daa
fcom
mov
pop
dec
test
mov
int
jl
sti
jne
adc
shl
(bad)
xchg
mov
dec
pop
add
adc
les
int
mov
(bad)
and
(bad)
repnz
int
out
movs
nop
cld
ror
inc
pop
add
xlat
xor
push
pop
or
inc
xchg
xor
mov
mov
out
pop
jb
jecxz
or
pop
data16
or
call
dec
repnz
xchg
push
mov
in
adc
enter
pusha
cld
push
ficom
pop
or
add
imul
xchg
add
cmps
xor
mov
pminub
out
(bad)
hlt
mov
cdq
xor
call
jo
pop
mov
cmc
mov
addr16
fsubr
jne
in
xor
fbstp
inc
pop
xchg
leave
adc
(bad)
cld
test
jmp
popa
sbb
jbe
inc
jae
mov
inc
or
jp
jmp
xor
push
mov
clc
shl
clc
ins
loop
mov
hlt
fbstp
sahf
or
stos
push
aad
cmp
loop
push
dec
add
xor
adc
inc
fdiv
inc
mov
pusha
pop
popa
jmp
call
jmp
dec
std
test
movs
mov
push
sbb
push
pop
int
pcmpgtd
lods
test
fbld
or
push
pop
fstp
psrlq
mov
add
or
xor
adc
gs
inc
(bad)
sar
ret
mov
ja
retf
dec
cmp
cli
jg
leave
cld
cmp
xor
cs
loopne
outs
mov
lock
push
ret
loope
les
xor
daa
movs
jae
xchg
mov
sub
inc
ret
push
neg
cwde
push
cmc
(bad)
test
mov
sub
pop
arpl
xchg
add
xchg
mov
mov
mov
xlat
inc
imul
and
mov
stos
and
cmp
ret
and
and
and
pushf
dec
and
bound
xchg
add
lahf
jno
je
sbb
jb
dec
in
or
mov
out
hlt
or
call
ror
ins
outs
das
les
stos
ds
ins
out
fdivr
xlat
mov
in
mov
pop
ss
fnsave
adc
aaa
pop
in
jae
pop
add
lods
out
mov
rcr
add
sub
xchg
mov
je
je
sub
xchg
pop
cmp
jne
inc
push
sti
bnd
mov
in
adc
push
mov
mov
sbb
mov
push
xor
cmp
sbb
xlat
push
call
cwde
iret
shr
cmp
sbb
mov
mov
mov
sbb
sub
mov
mov
pop
call
in
lods
mov
addr16
out
call
xor
retf
dec
mov
aad
or
idiv
das
(bad)
mov
pop
push
inc
xor
fs
cmp
cli
and
cmps
cmp
dec
dec
mov
xchg
sbb
mov
ror
cli
stc
cmc
fs
sub
in
adc
pop
adc
loope
shl
push
adc
std
or
or
add
fistp
inc
add
push
jmp
adc
ins
mov
jo
mov
jp
inc
xchg
sub
pop
jge
int
cmps
push
test
pop
adc
ror
out
push
xchg
mov
pop
dec
ins
inc
sbb
std
sub
inc
add
xor
sbb
pop
dec
movs
aaa
fild
jo
rcl
xchg
es
inc
popa
outs
jl
hlt
addr16
in
mov
imul
fst
jl
mov
sahf
xchg
push
out
xchg
ja
fmul
rcl
adc
int
call
push
pop
(bad)
xor
sti
push
cmc
leave
jp
inc
jl
sbb
psrlq
imul
mov
xor
mov
mov
or
mov
inc
jns
jecxz
jl
adc
test
rcr
and
add
xchg
loop
xor
mov
cmp
jg
jae
xlat
sub
inc
std
inc
add
inc
cmp
(bad)
dec
outs
pop
ss
fmul
es
cmps
inc
sub
dec
dec
ds
call
jge
push
lods
pop
aas
sti
adc
stos
adc
jbe
fisttp
sti
sub
jne
stc
xchg
cwde
push
mov
cmp
cs
xchg
test
sbb
and
out
fsub
cmp
scas
fs
xchg
lahf
xchg
and
leave
mov
retf
bound
push
cdq
adc
and
pop
lds
jge
add
repnz
cmp
mov
and
std
mov
ins
add
mov
fbld
or
ret
hlt
cmp
data16
pop
jmp
fdivr
stos
push
mov
jge
and
lock
jmp
data16
call
sub
pop
cmp
xchg
and
imul
push
sbb
cmps
mov
cld
sub
adc
add
sub
mov
mov
stos
ret
add
mov
add
or
and
daa
scas
jae
push
mov
stos
arpl
(bad)
push
mov
and
fisttp
sub
or
push
sub
sti
mov
in
sti
cwde
pop
mov
jno
inc
push
jne
push
adc
aam
mov
cdq
push
aam
sbb
mov
scas
ins
jo
push
fsubrp
mov
icebp
dec
ins
repnz
push
add
pop
(bad)
cli
pop
mov
pop
or
std
sub
sub
cmc
and
repnz
frndint
mov
enter
jbe
out
and
retf
call
fcmovnb
jns
add
loopne
fcomp
fcmovnu
xor
or
data16
sub
xor
addr16
les
imul
mov
in
rol
icebp
int3
mov
xor
outs
sbb
inc
xchg
push
div
(bad)
shl
adc
(bad)
in
cmp
inc
jmp
loope
inc
outs
add
cmp
push
popa
cmp
jmp
out
ds
mov
outs
adc
fidiv
inc
adc
mov
aas
push
stos
or
lea
mov
push
ja
inc
mov
imul
movs
js
(bad)
hlt
and
icebp
mov
pop
cmp
(bad)
cmp
das
ror
xchg
and
add
popf
movs
ret
jae
stc
jmp
add
jp
cmp
add
mov
xlat
retf
(bad)
idiv
mov
je
adc
shl
stos
rcr
adc
movs
leave
sub
(bad)
lods
(bad)
cli
aaa
mov
shl
in
xchg
xor
test
mov
push
jl
xor
pusha
and
sti
mov
mov
movs
mov
fst
jbe
or
mov
imul
and
loopne
hlt
cmp
clc
shl
movs
sbb
sahf
or
pop
pop
jbe
sub
ja
sbb
dec
rcl
xchg
jo
test
lds
xor
bnd
or
and
mov
xchg
jp
inc
aam
loop
daa
adc
sub
popa
clc
dec
and
cmp
pop
cmp
jae
mov
call
xchg
into
sbb
popa
dec
push
arpl
jge
add
(bad)
not
inc
dec
mov
cmp
xchg
adc
pop
cmp
jmp
sub
aam
jge
jns
stc
push
movs
mov
(bad)
cli
sbb
push
add
pop
movs
icebp
fnstenv
cwde
dec
arpl
sub
mov
sbb
fistp
sbb
mov
and
add
fwait
test
adc
push
inc
std
pop
cmp
in
jne
jecxz
push
scas
stos
jo
push
lds
inc
dec
loope
scas
sbb
sub
xlat
addr16
pop
imul
sub
inc
pop
pusha
inc
ret
imul
jmp
daa
sbb
cmp
(bad)
retf
mov
hlt
retf
inc
mov
mov
and
(bad)
test
pushf
jmp
push
cmp
pop
mov
pop
push
out
cwde
pop
cld
test
cs
xchg
sub
mov
sub
cs
push
lock
repz
push
clc
and
adc
lea
out
jle
scas
dec
dec
loopne
cmps
push
jge
sar
mov
cmp
cmp
add
xchg
inc
inc
(bad)
fs
dec
pusha
(bad)
jge
imul
mov
jno
jle
sub
xor
sbb
or
xchg
cmp
fdivr
nop
and
adc
out
adc
jecxz
adc
out
out
test
sti
jge
std
inc
cmp
and
sbb
sbb
rol
jne
and
push
jo
sbb
loop
mov
dec
dec
mov
inc
push
adc
movs
push
aaa
test
leave
add
cmp
cs
jns
or
sub
sbb
lods
or
mov
stc
push
(bad)
push
je
xor
pop
push
outs
not
loopne
and
int
push
dec
add
sbb
ror
lahf
and
mov
cdq
enter
xor
xchg
inc
cmps
and
lea
imul
mov
data16
hlt
fsubr
jne
inc
in
loope
out
leave
fdiv
jmp
rcr
scas
mov
mov
xlat
mov
mov
pop
mov
mov
lods
cmp
inc
lods
out
adc
sbb
call
sbb
sbb
(bad)
cs
out
es
outs
xchg
sbb
and
outs
pusha
je
fsubr
idiv
int3
inc
outs
mov
mov
pop
idiv
pop
test
lds
fisttp
xchg
test
fist
aam
or
sar
xor
jo
ss
sub
mov
ja
adc
into
std
ret
clc
push
cwde
dec
(bad)
jp
sahf
test
adc
or
push
cmp
pop
adc
dec
shr
jae
daa
add
aaa
mov
sub
jno
cmp
loope
add
and
stos
pop
xor
mov
add
stos
call
cmp
imul
pop
and
xchg
mov
addr16
sbb
mov
cmp
push
mov
sbb
inc
es
mov
jp
lds
retf
aas
mov
pop
daa
cmp
fnstsw
jp
test
fmul
loop
lock
adc
adc
or
dec
out
rcl
and
jmp
fist
mov
xchg
scas
mov
fstp
sub
nop
mov
aas
or
cwde
adc
cmp
jmp
mov
enter
pop
fldcw
jmp
cmp
xchg
cmc
sub
dec
jmp
repnz
mov
int3
stc
mov
stos
shr
out
cld
and
inc
sbb
xchg
lock
jp
(bad)
aam
adc
sub
xor
out
and
sar
retf
mov
ja
sub
mov
dec
stc
dec
xchg
sti
(bad)
out
xor
daa
call
xchg
and
jno
inc
xchg
popa
push
push
mov
or
push
pop
xchg
into
mov
mov
mov
imul
xchg
mov
mov
aas
mov
and
push
push
jl
mov
or
lods
ss
push
mul
das
adc
xchg
iretw
mov
cmps
pop
push
jle
pop
adc
mul
loopne
mov
inc
shl
mov
push
mov
push
aas
inc
xor
mov
mov
mov
ins
mov
pop
dec
jg
std
sub
popa
in
mov
inc
cmps
int
aaa
add
ret
xchg
out
jne
jge
cwde
or
into
push
repnz
xchg
pop
dec
in
movs
mov
fstp
mov
mov
shl
cld
sub
mov
loope
movs
add
jp
bound
adc
jmp
cmp
xor
xlat
cmp
lods
mov
push
in
sahf
xor
mov
in
mov
mov
fisttp
ja
in
sub
rcr
movs
xor
rcl
scas
sbb
cld
and
push
mov
or
fdivr
xor
push
xlat
and
add
and
scas
mov
in
ja
mov
lods
sbb
mov
sub
adc
in
xchg
rcr
sub
retf
ins
into
push
cmps
fdiv
repz
xlat
sbb
(bad)
cmp
das
sub
sbb
loop
or
jns
(bad)
xor
repz
dec
cmc
and
mov
cld
dec
xor
cmp
push
gs
movs
mov
xor
fbstp
cld
push
cmp
scas
cs
dec
sbb
pop
cwde
xor
xchg
inc
jnp
push
(bad)
ins
or
inc
push
inc
les
push
imul
cmp
mov
dec
and
mov
call
jmp
push
cmps
and
mov
scas
add
mov
mov
dec
cli
ja
xor
sbb
leave
loop
add
punpckhwd
lods
popa
jp
scas
dec
pop
and
ja
mov
mov
daa
cmp
mov
daa
pop
mov
push
push
cld
into
or
mov
movhps
test
xlat
and
jl
xchg
sub
cmc
fbstp
mov
cmps
mov
pop
xor
pop
ja
push
dec
and
jp
push
shl
inc
mov
idiv
mov
cmp
push
std
push
fst
jl
pop
cld
fdiv
inc
mov
jmp
(bad)
jb
push
mov
jmp
mov
into
inc
es
xchg
int3
and
push
out
cmps
into
jmp
jle
dec
lods
push
and
add
cmp
inc
cdq
fmul
icebp
dec
add
daa
cmp
jp
cdq
fwait
xor
cmp
fimul
dec
out
jbe
sbb
std
stc
sbb
sar
mov
jmp
add
ret
pop
xchg
leave
mov
test
mov
or
inc
ins
sbb
pop
or
jns
lods
jne
jle
jge
cli
(bad)
repz
enter
pop
pop
ins
mov
into
adc
mov
repnz
sti
call
cmp
cld
and
rol
xor
jae
mov
ret
nop
not
push
loop
je
ror
mov
cmp
sub
int3
jb
push
jecxz
je
ret
enter
jbe
rcr
mov
js
mov
and
sbb
in
or
xor
in
sti
ins
or
shld
scas
or
pop
mov
pop
mov
iret
jmp
call
dec
mov
jg
cmp
shl
or
adc
pop
stos
imul
adc
or
inc
inc
idiv
leave
stc
jb
clc
inc
or
fsub
lds
xor
adc
mov
pop
mov
fcmovnu
rcr
pop
sub
je
and
repnz
xchg
xor
jno
add
jae
js
xchg
dec
leave
sbb
push
jmp
push
(bad)
scas
aad
jne
xchg
int
int3
and
stos
imul
and
sub
sub
sub
pop
push
pop
aam
add
sti
sub
cwde
mov
dec
rcl
pop
out
sahf
xor
into
jg
cmp
sbb
mov
dec
push
outs
imul
mov
aas
std
aaa
fisub
dec
call
cwde
aam
jge
addr16
scas
in
dec
jne
push
lahf
out
jl
mov
jno
jae
dec
rcl
jle
inc
push
in
daa
sbb
jle
dec
std
mov
adc
mov
rcl
out
rcr
push
inc
adc
jbe
not
pusha
mov
shl
mov
daa
xchg
fs
push
and
xchg
repz
pop
mov
push
and
jmp
and
mov
mov
retf
push
popa
xor
test
test
cmp
ins
dec
sbb
int3
les
icebp
xchg
(bad)
jmp
sub
ins
push
adc
push
mov
adc
add
xchg
xchg
xchg
ds
js
push
fst
sub
inc
mov
pop
jge
inc
mov
xchg
mov
or
and
fld
pop
push
mov
mov
mov
bound
repnz
xchg
pushf
(bad)
jbe
pop
push
rcl
xor
pusha
xchg
out
add
mov
dec
dec
fwait
sbb
push
(bad)
sub
fbstp
add
test
pop
pushf
add
xor
cs
cmp
cmps
sub
pusha
xchg
pushf
out
lods
mov
jl
shr
pop
mov
jle
add
xchg
fs
shr
pusha
(bad)
dec
loop
lock
mov
retf
ds
out
sub
xor
out
(bad)
icebp
outs
jo
shl
push
xchg
hlt
ja
xor
xchg
ret
shr
xor
jg
sahf
pop
dec
dec
inc
ins
xor
xchg
mov
das
mov
adc
fst
and
(bad)
fisub
sbb
xchg
sbb
mov
push
ss
repz
jb
rcr
sbb
movs
inc
loope
jle
dec
aas
push
push
in
dec
aaa
mov
xor
add
adc
xchg
cmp
scas
xor
cmp
das
sbb
pop
mov
rol
jb
or
outs
pop
int3
sbb
or
call
nop
xchg
loop
inc
test
adc
jo
into
retf
pop
sbb
xchg
pop
push
pop
cld
xchg
sub
rcr
cmp
mov
and
mov
ja
ror
les
mov
mov
mov
out
mov
add
mov
pusha
lods
rcl
add
mov
movs
jmp
test
sub
inc
repz
mov
(bad)
pop
lahf
pop
outs
bound
adc
xor
and
arpl
mov
ror
dec
into
or
fwait
or
jae
dec
fimul
movs
ds
(bad)
adc
das
ret
in
test
imul
test
xchg
hlt
push
pusha
xchg
movs
mov
pop
pop
fistp
sub
dec
xor
cmps
aaa
adc
jmp
sub
fbstp
push
lds
sub
ffree
adc
pop
lea
xchg
push
stos
and
adc
cwde
inc
ja
mov
scas
das
jae
inc
ret
out
mov
inc
sbb
mov
mov
cmp
js
repz
arpl
jns
int
mov
inc
into
outs
adc
fdivp
shl
cmp
xchg
(bad)
call
scas
lea
loopne
jb
jecxz
retf
dec
mov
push
add
push
sahf
lods
xor
stos
add
aad
nop
(bad)
xor
pop
out
jne
out
dec
pop
out
jne
leave
retf
lock
sub
dec
push
pop
inc
call
xchg
pop
ja
test
sbb
xchg
jg
push
sbb
pushf
inc
out
ret
fld
push
test
in
jg
or
stos
or
pop
mov
mov
das
mov
mov
push
(bad)
lea
call
ffreep
cmp
sbb
add
ret
outs
aad
push
sbb
stc
call
dec
(bad)
jmp
and
call
leave
xchg
stos
imul
sbb
gs
test
or
into
lods
out
movs
data16
push
aad
mov
or
pop
ds
sti
add
mov
sub
enter
jmp
add
addr16
aam
cmp
xor
gs
cmps
hlt
or
xchg
jge
mov
cmp
push
xor
inc
xor
test
out
popa
lods
pop
stc
pop
or
mov
xor
jnp
xchg
ret
or
mov
jmp
inc
lock
inc
stos
jmp
daa
dec
cmps
push
push
mov
or
pushf
and
ret
pop
and
icebp
xchg
sbb
sbb
dec
ins
cmp
mov
cli
cli
mov
push
xchg
scas
test
out
inc
stos
stos
push
cli
adc
inc
jecxz
mov
stos
inc
cmp
push
xchg
aam
not
jge
push
mov
sbb
and
out
jno
mov
test
mov
(bad)
out
dec
out
dec
or
(bad)
inc
jle
xor
pusha
je
loope
fs
pusha
shl
push
test
aad
cmp
xor
nop
call
out
pop
arpl
add
adc
adc
push
pop
push
aam
xchg
sub
add
(bad)
adc
lods
enter
gs
and
xor
dec
jmp
pop
dec
sar
xchg
pop
mov
das
cmp
hlt
nop
adc
adc
and
dec
(bad)
jmp
arpl
aad
inc
add
jmp
inc
out
cmps
xchg
cld
inc
add
int3
inc
mov
xchg
jne
sahf
jbe
pop
repz
into
mov
ficom
retf
and
das
gs
(bad)
(bad)
sahf
jno
add
pop
les
mov
out
sbb
pop
shl
jmp
xlat
pop
rcl
mov
(bad)
dec
outs
shl
add
pop
cmp
inc
lods
push
ins
int
mov
(bad)
push
sahf
icebp
mov
jae
lods
xchg
loopne
cmc
cmp
mov
dec
push
rcl
add
(bad)
pop
aad
hlt
pop
push
(bad)
cdq
fwait
xor
lahf
stos
xor
rol
aas
jae
and
gs
ficomp
aam
mov
outs
call
fs
stc
dec
dec
popa
stos
arpl
cmp
stos
pop
daa
dec
sub
push
push
pop
mov
call
inc
fwait
loopne
cs
add
pushf
popa
xchg
pop
ret
cmp
dec
(bad)
int
or
jbe
cmp
repz
adc
cld
jle
add
mov
fcom
and
test
xchg
mov
cmp
sub
mov
xchg
in
xchg
inc
jb
mov
cs
sub
addr16
fidiv
ret
xor
mov
xchg
xlat
idiv
inc
mov
sahf
lds
cmp
inc
inc
xor
gs
push
ja
sbb
inc
jbe
push
adc
arpl
stc
cdq
push
sbb
ins
pop
js
test
pop
jp
and
xchg
std
mov
jp
in
lods
xchg
ins
jae
add
loope
stos
cmps
xor
xchg
mov
jp
xor
imul
and
cmps
add
and
out
ds
dec
enter
or
hlt
clc
dec
mov
push
push
and
pop
outs
not
xor
sbb
nop
mov
xchg
fbld
pop
popf
cmp
mov
test
xor
ror
cmp
call
jnp
les
inc
pusha
pop
int
rcl
push
push
or
sbb
pop
shl
nop
jne
mov
outs
push
fist
or
xchg
(bad)
rol
outs
pop
out
retf
lods
test
pop
and
std
mov
std
sub
ins
pop
test
in
sti
or
sti
mov
push
push
xor
les
sbb
cli
daa
pop
sbb
or
dec
mov
aaa
data16
jne
das
push
aaa
ret
cmp
mov
add
not
imul
in
gs
and
icebp
push
sti
popa
cmp
sub
rol
(bad)
jno
ret
das
(bad)
adc
inc
dec
je
mov
retf
xchg
and
fwait
jle
mov
stos
mov
iret
loope
and
jp
inc
mov
cs
mov
pop
mov
inc
cmp
mov
inc
inc
int3
stos
scas
cmp
mov
push
inc
mov
call
and
push
inc
pop
mov
mov
mov
mov
fnsave
and
inc
ja
(bad)
cmp
sar
icebp
add
pop
(bad)
js
out
push
jne
cdq
imul
retf
push
pop
test
pop
sti
cmp
stos
push
test
or
out
jg
sub
inc
mov
jge
movs
push
jae
dec
sub
mov
xchg
sbb
inc
inc
xor
jns
and
xchg
adc
mov
arpl
rol
cmp
dec
fwait
mov
fs
sub
mov
(bad)
pop
fild
inc
pop
inc
loope
xchg
cmp
push
out
outs
add
dec
push
push
xchg
(bad)
popa
sbb
pop
int3
add
push
xchg
int
jl
sbb
jnp
lods
mov
dec
test
stos
xchg
jp
inc
inc
aam
inc
das
mov
push
mov
shl
xchg
xor
not
test
cli
cmp
sub
and
clc
adc
out
daa
(bad)
fwait
mov
add
or
push
fldcw
mov
adc
or
mov
rcl
mov
add
retf
dec
mov
ret
pop
fcmovnb
je
push
enter
movs
jg
sti
ja
ret
and
cmp
or
xchg
sub
sub
sar
add
inc
call
imul
ret
lock
xor
scas
add
in
xchg
xchg
xchg
adc
int
mov
js
mov
sbb
inc
jmp
inc
je
and
outs
adc
xchg
and
sbb
push
cwde
test
pop
xchg
repnz
cld
push
dec
mov
adc
lock
mov
mov
sbb
sbb
(bad)
dec
inc
pop
jl
aam
adc
sbb
outs
mov
push
psubd
cmp
inc
hlt
jmp
jae
add
jecxz
lods
xchg
pop
fs
mov
push
dec
dec
xchg
call
fadd
xor
mov
and
dec
or
fistp
or
push
and
xchg
xor
ja
(bad)
xchg
mov
sar
scas
ret
sub
test
jne
stc
mov
pop
not
sti
pop
mov
ja
icebp
jmp
int
sti
(bad)
popa
pop
(bad)
mov
inc
add
add
adc
dec
stc
adc
push
lods
shl
cmps
adc
arpl
fist
xor
loope
std
jp
xchg
scas
cmps
push
xchg
pop
retf
ins
sti
out
sub
aad
lods
sbb
jo
mov
lods
mov
xchg
leave
sub
or
push
cs
in
or
ins
jbe
dec
iret
push
or
pop
pop
fiadd
sti
fidiv
mov
out
mov
sbb
add
retf
aam
bound
retf
push
shl
out
sbb
jae
(bad)
into
and
fnstenv
aaa
int3
or
mov
retf
fidiv
je
mov
in
sbb
sub
lods
fdiv
sub
loop
mov
mov
adc
push
cmp
xchg
in
inc
mov
imul
inc
out
pop
or
mov
scas
cmps
rcr
adc
fidiv
cmp
pop
and
xor
cwde
dec
mov
dec
or
repnz
inc
sbb
sub
clc
(bad)
(bad)
mov
sbb
xchg
and
(bad)
jne
sub
dec
jle
mov
popf
js
push
ja
(bad)
mov
sub
and
pop
cmp
fdivrp
je
repz
jne
mov
rcl
ins
pusha
add
sbb
cmps
das
dec
lea
add
jmp
and
ja
mov
push
xchg
pop
cmps
nop
(bad)
pop
mov
or
and
es
out
(bad)
(bad)
sub
mov
jl
sub
pop
jb
pop
mov
ret
jno
aam
aas
cld
cmp
jb
dec
or
and
fidiv
sahf
dec
cmp
mov
sar
scas
mov
pop
adc
minps
bound
das
fcmovbe
mov
adc
jg
enter
imul
jmp
inc
cld
(bad)
hlt
mov
movs
pop
clc
dec
adc
loopne
das
xor
xchg
sub
lea
mov
dec
fisub
mov
pshufw
lods
(bad)
mov
(bad)
into
lods
aaa
arpl
xchg
mov
pop
xchg
jmp
pop
aas
sub
rol
pop
add
outs
movs
pop
(bad)
ins
xor
fmul
add
data16
cmp
fwait
mov
jb
icebp
pop
enter
dec
or
mov
les
add
adc
cmp
(bad)
fisubr
int3
(bad)
xlat
pop
and
pusha
dec
mov
jno
inc
imul
jle
fisub
loop
fmul
in
sbb
hlt
aaa
int3
addr16
pushf
test
(bad)
call
push
mov
push
shr
push
and
dec
aam
out
xor
fisubr
pop
rol
aaa
ins
xchg
movs
lahf
mov
xor
or
mov
int3
clc
cmc
mov
mov
mov
or
and
jnp
or
not
mov
mov
cmc
fiadd
mov
inc
call
aad
sub
adc
das
(bad)
push
ins
and
sub
xchg
(bad)
pop
repnz
jg
sub
xchg
xchg
push
in
mov
push
pop
cdq
js
mov
adc
push
push
mov
add
fild
mov
rcr
cwde
test
inc
xor
scas
mov
movs
xor
ror
mov
push
pop
retf
cmp
(bad)
ds
dec
(bad)
jg
dec
enter
jo
add
iret
mov
mov
in
test
push
test
in
enter
jmp
pop
inc
repnz
mov
sub
das
scas
out
mov
les
pushf
stc
and
aaa
sbb
out
popf
outs
nop
in
aaa
sbb
mov
push
lods
push
push
mov
ret
and
and
pop
sahf
inc
(bad)
mov
fild
mov
xor
fist
cmps
jg
(bad)
mov
fwait
cmp
ja
addr16
clc
out
data16
sti
aad
xchg
mov
je
fbld
mov
cmps
(bad)
gs
push
idiv
or
pusha
lods
jno
and
scas
add
(bad)
loop
mov
imul
scas
xchg
and
or
leave
scas
shl
cmp
inc
or
and
retf
push
sbb
leave
(bad)
bound
push
xlat
fdivr
xchg
mov
inc
push
dec
dec
es
push
nop
or
push
pop
ret
(bad)
aam
push
jmp
pushf
or
cmp
sub
adc
std
rol
in
or
nop
jne
sub
inc
rcr
sub
hlt
in
add
mov
jmp
sbb
cmp
xor
repnz
push
shr
push
mov
xor
scas
ja
js
or
ds
enter
ret
es
aad
in
lods
jmp
pmaxsw
fdivr
js
jb
dec
ja
addr16
cli
jb
or
mov
out
pushf
mov
xor
aaa
add
mov
retf
push
mov
sbb
ds
mov
shl
add
dec
inc
(bad)
in
mov
xchg
pop
fwait
ja
xor
lock
je
cs
sti
jo
push
inc
in
dec
ret
inc
xor
cli
nop
jp
sub
pop
dec
and
sbb
xor
mul
lods
add
jbe
lods
push
shl
sub
and
mov
adc
sbb
mov
(bad)
mov
sub
push
lods
cmp
fwait
int3
sbb
xchg
popa
stos
imul
movs
dec
in
ss
dec
add
rcl
in
lods
mov
aaa
add
add
mov
es
dec
dec
sub
xor
sahf
push
fs
mov
mov
mov
daa
jbe
push
add
out
outs
repnz
gs
pop
cmp
add
int3
mov
add
stos
call
and
mov
test
pop
daa
inc
dec
aas
fst
dec
mov
xchg
movs
iret
adc
shl
xor
mov
ret
lahf
mov
push
push
ds
enter
sar
or
jne
out
pop
arpl
mov
sbb
aad
cmps
shl
mov
jge
bound
add
cmc
pop
jge
xchg
ins
test
imul
adc
and
inc
mul
and
aad
jmp
mov
xor
sub
mov
jge
pop
mov
jae
fcomp
outs
mov
sub
xchg
xchg
int3
mov
jns
ret
jle
stos
xor
fdiv
retf
scas
push
in
mov
ja
xlat
cdq
inc
push
pop
jo
fcom
add
lea
push
(bad)
inc
ret
mov
push
adc
ret
jmp
xor
sbb
sub
mov
jecxz
dec
mov
fcomip
pop
(bad)
inc
push
js
cs
push
cmp
mov
ror
shl
mov
pop
jge
fnsave
pop
inc
cmp
aas
xor
retf
mov
js
mov
mov
jmp
add
test
add
lods
xor
push
and
cmp
(bad)
mov
mov
js
or
sbb
mov
rcr
idiv
push
jo
adc
push
jo
sahf
loope
add
adc
js
addr16
add
dec
mov
in
mov
adc
shl
inc
sti
out
dec
call
gs
fld
ror
mov
sbb
mov
pop
and
mov
push
pop
aaa
(bad)
or
or
dec
mov
pop
add
mov
sub
je
pop
jle
popa
adc
loopne
in
sbb
adc
mov
sbb
inc
add
fnstcw
mov
add
lods
cmp
cmp
scas
inc
sahf
and
ss
xchg
or
push
push
adc
inc
aas
shl
lods
pusha
dec
xor
jo
adc
push
stc
outs
mov
daa
clc
xor
xor
mov
test
jno
xlat
adc
xchg
ss
movs
cmc
push
test
div
mov
ss
mov
mov
(bad)
cld
xor
xchg
popa
mov
movs
test
out
add
add
in
outs
pushf
cmp
(bad)
xchg
ins
sbb
and
dec
data16
and
dec
and
cmp
bound
xor
inc
std
(bad)
jmp
nop
inc
outs
push
ret
xlat
add
neg
add
xor
nop
cmp
dec
test
add
sbb
jbe
or
ror
pusha
or
imul
imul
fwait
xchg
inc
inc
fimul
inc
mov
mov
push
adc
dec
mov
arpl
push
nop
fadd
push
mov
inc
rcr
call
xor
xor
push
fcmovnb
gs
jb
mov
aad
enter
jbe
xchg
jb
in
out
jnp
push
jnp
cdq
mov
fs
dec
sahf
jg
test
mov
out
enter
inc
std
(bad)
int3
xor
mov
or
inc
dec
push
pop
js
outs
mov
outs
fs
lds
int
ja
push
jp
dec
cmp
das
out
shl
xor
xchg
mov
test
or
loope
repnz
sbb
xchg
les
scas
ja
xchg
jle
out
cli
push
mov
or
ds
neg
ret
mov
add
int3
add
xor
retf
lock
sbb
out
icebp
jns
dec
xor
push
jmp
fs
cmps
ins
imul
jne
xor
mov
sub
mov
jle
lods
inc
outs
popa
add
nop
mov
movs
and
aad
xor
or
mov
stos
clc
cdq
dec
dec
test
jge
and
popf
push
retf
xlat
add
mov
add
and
(bad)
iret
lahf
inc
icebp
adc
js
adc
xor
mov
jmp
in
pop
adc
jl
or
in
xchg
xchg
in
xor
push
pop
mov
cli
cmps
dec
pop
jo
(bad)
xor
stc
cmp
call
or
mov
cmps
dec
(bad)
(bad)
aam
xor
loopne
cmp
es
sub
(bad)
sbb
lgs
xchg
out
jns
retf
fld
inc
push
out
and
retf
jmp
daa
push
adc
popf
ret
and
xor
xor
mov
sub
and
pop
mov
enter
fiadd
mov
stc
cld
push
ret
jecxz
movs
pop
sub
ins
sbb
neg
js
or
jmp
or
dec
push
mov
inc
push
lds
cmps
jnp
lods
mov
imul
dec
fwait
ds
ss
jl
sbb
nop
adc
loop
jg
(bad)
fcmovnbe
cwde
mov
fsubr
ss
and
out
rcr
pop
daa
jle
outs
jmp
xchg
mov
shr
xchg
xor
cdq
cmp
(bad)
xlat
inc
xchg
cmps
or
cmc
js
sbb
in
adc
pop
jbe
mov
pop
gs
stc
sub
sub
inc
and
ja
xor
jg
inc
(bad)
push
inc
xor
rcl
movs
nop
mov
or
fbstp
loope
xchg
daa
xor
je
sbb
neg
and
jns
arpl
push
ret
or
dec
lock
mov
add
scas
mov
pop
mov
mov
iret
dec
mov
add
leave
xlat
mov
adc
data16
dec
mov
or
scas
push
jecxz
leave
call
mov
retf
dec
mov
inc
or
adc
sbb
mov
aad
pop
xchg
jo
dec
xchg
js
aam
dec
adc
sbb
xchg
ret
fdivr
rcl
xor
sbb
cmp
in
inc
mov
into
xor
pcmpeqd
inc
iret
jb
mov
jb
inc
pop
jno
push
ret
mov
pop
cdq
fwait
clc
call
ret
ins
cld
pcmpeqb
xchg
lock
sahf
xlat
jne
mov
add
popa
mov
enter
ret
pop
or
pop
adc
inc
fidivr
test
aas
jmp
or
jmp
mov
or
hlt
sbb
aas
hlt
out
pop
and
rcr
mov
push
or
pop
lahf
js
mov
or
pushf
lods
iret
test
fistp
iret
cld
push
je
pop
xchg
mov
sub
xor
mov
adc
retf
pop
movs
or
jmp
xchg
sbb
lds
repnz
inc
in
out
and
ds
add
imul
sahf
push
sbb
mov
inc
xchg
jns
mov
pop
adc
retf
ss
cmp
jno
adc
pop
retf
movs
push
xor
sub
dec
add
mov
ret
mov
aad
mov
cmp
pop
mov
cs
popf
dec
test
pushf
dec
sbb
repz
call
fild
dec
dec
jbe
add
data16
out
lods
xor
or
push
call
int3
outs
cwde
sub
dec
(bad)
retf
lods
mov
test
pop
inc
mov
leave
fist
xchg
jl
loope
in
je
xor
cld
std
dec
shl
push
fistp
add
xor
mov
jecxz
dec
mov
push
js
cwde
cmp
pushf
adc
push
aad
jl
xchg
clc
xor
in
fadd
stos
cwde
or
rcl
xor
mov
out
data16
shr
and
shr
or
imul
test
(bad)
ins
push
ja
(bad)
xlat
jns
rcl
inc
mov
in
popf
sub
mov
(bad)
out
jecxz
das
pop
push
(bad)
push
sub
mov
sbb
movs
bound
movs
or
push
loop
mov
mov
fisubr
adc
add
(bad)
int3
pop
(bad)
add
sbb
pop
movs
push
mov
mov
cmps
ror
mov
adc
pushf
jmp
sbb
mov
jbe
xor
ror
jmp
mov
enter
pop
cmp
sub
and
retf
adc
ds
ins
loopne
sbb
cmp
dec
inc
push
in
xor
push
aad
cmp
std
xor
push
sbb
int3
lds
repz
xchg
test
(bad)
in
sbb
rcl
mov
pop
rsm
arpl
sbb
and
inc
fistp
les
daa
retf
mov
repnz
or
inc
out
or
adc
cwde
stc
pop
adc
add
or
xor
push
lock
movs
xchg
mov
aas
dec
mov
std
call
cmps
fldcw
cmp
xchg
(bad)
adc
inc
test
xchg
add
sub
sbb
and
imul
fs
popa
mov
mov
outs
mov
inc
pop
sbb
sbb
adc
rcr
ficom
out
arpl
sub
mov
imul
adc
pop
aaa
xchg
pop
pop
mov
lods
mov
ror
xlat
adc
mov
int3
rcl
cmps
mov
jle
mov
mov
mov
xor
js
mov
push
dec
les
out
sahf
add
mov
out
scas
call
aam
adc
cmp
lods
or
sbb
and
inc
icebp
movs
scas
in
hlt
test
xchg
xor
pusha
stos
hlt
nop
sub
mov
ret
shr
sahf
test
jo
adc
jo
or
inc
pop
xor
and
je
xor
cld
mov
jnp
in
jg
jno
addr16
loope
xchg
push
mov
sub
add
add
sub
sbb
data16
outs
loop
jle
test
mov
add
out
ja
shr
inc
mov
(bad)
in
mov
inc
es
(bad)
scas
cli
add
xlat
sbb
mov
sbb
lods
xchg
test
(bad)
popf
or
xor
ret
es
sub
or
xchg
hlt
aaa
retf
adc
inc
bound
(bad)
sub
push
sub
sub
test
not
xchg
gs
adc
push
add
sub
fadd
cmp
retf
stc
mov
mov
in
cs
fidivr
xchg
shl
scas
pop
or
mov
outs
in
push
sub
or
mov
adc
inc
inc
movs
mov
scas
mov
sbb
jp
(bad)
lea
fistp
sbb
inc
add
scas
pop
push
cmp
sti
popf
jl
(bad)
out
cmp
nop
dec
jl
xor
push
mov
jge
mov
aaa
dec
cld
mov
out
adc
dec
ja
daa
push
push
nop
cdq
(bad)
(bad)
(bad)
(bad)
inc
push
xchg
mov
mov
sbb
push
das
and
sbb
jb
out
push
fcomp
cs
fs
retf
std
and
cmp
movs
in
jns
mov
xor
mov
sbb
or
hlt
fwait
hlt
popf
adc
jg
cmp
or
mov
leave
push
sub
loopne
pop
(bad)
push
and
ret
mov
add
sub
sbb
idiv
inc
pop
push
xchg
jo
add
and
ret
pop
xlat
push
jge
mov
dec
stc
inc
in
inc
xlat
ds
inc
clc
mov
adc
jg
and
sbb
cdq
xchg
mov
jmp
(bad)
stc
lods
pop
sub
xchg
stos
adc
pop
xchg
push
unpckhps
adc
xchg
add
popa
dec
test
dec
ins
rcr
jmp
add
inc
aaa
xchg
enter
je
rcr
(bad)
mov
lds
pop
in
retf
mov
mov
and
(bad)
adc
mov
push
repnz
dec
dec
loopne
xchg
sbb
das
xlat
out
or
jne
shl
dec
push
inc
popf
cmp
add
inc
sahf
mov
sub
popa
(bad)
cli
lea
pop
mov
cdq
push
popf
in
jnp
std
sbb
pop
sahf
call
leave
aaa
xchg
mov
aad
movs
pusha
dec
ret
ficomp
mov
cld
jbe
div
pushf
pop
sbb
push
mov
add
mov
mov
jb
arpl
mov
sbb
test
out
ret
lock
rol
imul
popa
enter
gs
aam
xor
inc
popa
sub
lea
mov
dec
or
std
mov
cld
neg
xchg
inc
(bad)
cli
xor
call
push
jbe
call
lods
push
test
mov
aas
fdivr
aaa
fs
jl
js
mov
push
sbb
push
js
mov
xor
mov
jle
xor
arpl
call
call
(bad)
adc
int
xor
mov
push
stos
inc
out
cmp
cmp
xchg
jle
jmp
sub
daa
add
push
push
add
loope
mov
sbb
pushf
(bad)
dec
sar
pushf
in
push
or
xchg
xor
inc
and
add
lods
loopne
sub
push
fcom
shr
in
jp
push
mov
push
push
daa
clc
fs
xor
out
jmp
fidivr
fist
pushf
leave
clc
mov
and
out
(bad)
add
test
xchg
pop
jne
inc
xchg
sti
xor
pushf
add
mov
mov
fisttp
lods
xchg
int3
popf
scas
mov
mov
push
xlat
and
cmc
sub
mov
adc
jmp
mov
pop
cld
xchg
xchg
inc
loopne
add
jmp
fcom
dec
xchg
loope
stc
ror
(bad)
push
sub
les
aam
mov
(bad)
jg
retf
aaa
cmp
jns
outs
pusha
test
jo
repnz
sbb
cmc
mov
mov
add
int
loopne
sub
mov
and
addr16
sar
or
push
cmp
pop
in
shl
mov
add
popf
mov
in
push
jmp
ins
adc
push
enter
sar
cmp
mov
or
sbb
cmp
mov
idiv
mov
cmp
pop
push
sbb
sbb
or
and
adc
loope
and
mov
cmp
add
cmps
outs
mov
dec
js
and
inc
ja
jmp
ins
pushf
dec
dec
xor
mov
cmp
push
ss
and
lea
mov
mov
mov
pushf
cmp
sub
in
in
or
aas
dec
sub
test
bound
ins
mov
sub
sti
scas
push
in
repnz
ret
mov
leave
aad
mov
std
sub
sti
shl
mov
or
sbb
adc
shl
in
sub
fdiv
jmp
adc
dec
sub
push
loopne
neg
dec
daa
xor
leave
mov
repnz
call
mov
push
sahf
jmp
retf
lds
mov
aam
scas
mov
mov
mov
dec
sub
mov
add
or
cmc
ja
loope
pop
out
rcl
add
jmp
sub
sbb
xchg
leave
in
cli
pop
in
arpl
arpl
sbb
inc
xor
jmp
bound
inc
not
nop
xor
hlt
add
add
dec
push
sti
pop
adc
push
xor
daa
(bad)
test
fistp
popf
test
mov
mov
data16
pop
lea
inc
fnstsw
icebp
cmp
lods
jecxz
aas
adc
mov
push
dec
add
shl
data16
pop
rcl
jl
pop
mov
push
das
mov
cmps
adc
mov
push
jb
push
dec
scas
dec
aas
sbb
fwait
add
call
xchg
jmp
aam
cmp
mov
lock
mov
cmp
or
and
sub
fs
icebp
pop
ins
add
aas
cmp
aas
adc
xchg
ror
je
test
sti
test
adc
jge
loop
cwde
rcl
ja
and
test
mov
dec
rcl
xor
popf
out
sbb
ss
cmp
in
or
adc
jl
jg
xchg
ficomp
pop
adc
jne
sub
lahf
sub
mov
ins
sbb
add
pop
retf
adc
push
push
cs
(bad)
push
and
cmp
sub
ja
shl
jae
adc
ss
xor
add
xor
repnz
dec
popf
jb
vmwrite
adc
fs
jmp
mov
lds
xchg
(bad)
adc
fs
int
add
shl
popa
gs
push
sbb
mov
das
cwde
adc
js
(bad)
(bad)
dec
adc
mov
fisub
ret
pop
sub
cmp
clc
les
cmp
into
cmp
mov
xchg
hlt
in
and
dec
sti
test
icebp
jnp
pop
push
and
lods
sbb
cmp
adc
mov
pop
cmp
add
cdq
mov
pop
mov
xchg
cmp
or
in
mov
les
push
cdq
push
std
inc
std
fwait
and
(bad)
popf
jp
pop
jnp
(bad)
pushf
mov
inc
in
inc
pop
add
imul
mov
and
dec
call
in
mov
mov
ins
cli
out
shl
(bad)
mov
dec
cmp
stc
cli
mov
jbe
sub
sbb
aaa
push
xor
push
sub
shl
test
jmp
repnz
lods
nop
call
mov
dec
fwait
mov
in
popa
jg
ret
or
dec
in
mov
clc
push
pop
loope
cmc
pushf
xor
sbb
jbe
xor
or
jmp
movs
bound
inc
xchg
xchg
sahf
xlat
aas
in
jno
sbb
add
div
add
das
push
push
es
dec
xlat
jmp
sbb
mov
fidivr
bound
fldenv
or
add
mov
add
sti
in
aad
jg
push
outs
pop
mov
outs
inc
mov
repz
sub
mov
aad
retf
sti
fcomip
(bad)
dec
cmps
mov
xor
popf
push
shr
adc
enter
push
and
jmp
sub
icebp
and
adc
pop
or
sub
int3
dec
sub
cmp
pop
push
fdivr
fidiv
std
push
inc
mov
mov
jg
or
xchg
pop
xor
bound
cmp
sbb
add
xor
jb
cmp
pop
add
mov
inc
mov
jo
arpl
jp
mov
mov
and
sbb
push
mov
mov
cmp
int3
cmps
pop
mov
shr
repz
push
cmp
mov
cmp
cmps
mov
call
mov
jmp
xlat
mov
mov
stos
add
jmp
jmp
arpl
out
ja
jmp
inc
call
leave
fwait
jno
jmp
icebp
inc
fwait
pop
jno
out
cld
jge
lock
adc
xor
fnstcw
movs
xchg
popa
arpl
lea
aad
out
das
inc
lea
lds
cmp
jb
push
call
or
lahf
jge
aam
rcl
into
pop
or
push
stc
push
je
inc
fwait
mov
push
dec
adc
ja
xor
lahf
pop
mov
lss
and
push
pop
lea
sub
cmp
mov
jmp
dec
out
jbe
scas
jnp
mov
mov
das
inc
sub
cwde
out
cmp
stc
pop
sub
cmp
shl
mov
mov
sub
call
push
push
sbb
xchg
push
(bad)
or
push
ins
push
je
push
xchg
inc
inc
cs
adc
pop
das
mov
pop
push
jle
and
adc
push
pop
aaa
xor
add
loop
push
int3
setp
inc
or
jnp
jle
lock
jb
les
fst
adc
cmps
dec
jb
icebp
xlat
mov
(bad)
out
dec
and
sbb
aas
sbb
test
lods
pop
xor
add
push
push
cmp
outs
mov
imul
popf
arpl
push
arpl
enter
fwait
xchg
cld
mov
mov
mov
clc
addr16
xchg
adc
dec
jne
popa
mov
xor
xchg
xchg
les
rcr
imul
jb
xchg
lds
fiadd
inc
pop
fld
je
fs
rol
xchg
jo
(bad)
stos
(bad)
test
std
cmp
add
pop
call
xchg
mov
add
into
dec
add
arpl
mov
mov
mov
sbb
scas
push
aas
jmp
sub
xchg
dec
pop
sub
pop
ds
sti
sub
fisubr
pop
xchg
mov
lods
add
add
jge
dec
mov
lds
xchg
dec
mov
sbb
dec
and
not
xchg
push
inc
add
sbb
dec
xor
es
cmps
in
outs
sbb
and
inc
(bad)
ret
enter
into
inc
mov
sahf
sub
and
jno
js
xchg
xchg
jge
cmps
loop
sub
mov
(bad)
sub
iret
jmp
hlt
imul
mov
div
pop
rcl
mov
nop
std
cmp
xchg
cmp
stc
adc
fs
pop
into
jo
nop
add
jb
sub
mul
xchg
movs
cli
test
push
xlat
pop
rcl
inc
loopne
jecxz
jge
dec
inc
push
jge
fldenv
aad
out
cdq
push
jle
mov
or
das
test
leave
sub
out
cmp
cld
ds
or
loopne
retf
test
cwde
sub
or
fdiv
test
mov
mov
iret
sub
xchg
clc
(bad)
call
js
push
push
inc
add
mov
mov
imul
jmp
mov
data16
or
pop
cmc
sysexit
add
aaa
jmp
jl
lods
xchg
mov
addr16
les
out
xchg
rcr
adc
sar
mov
pop
stos
mov
stc
daa
jo
xlat
mov
icebp
in
or
sbb
pop
cmp
in
cmps
cmp
jbe
cdq
cli
ret
popa
mov
adc
fidiv
scas
xor
test
sbb
(bad)
mov
add
pop
jp
ja
test
mov
aas
inc
(bad)
in
stos
adc
lea
pop
jmp
inc
ins
cmps
xchg
sub
push
xchg
shl
fdiv
push
ins
mov
aam
shl
or
dec
inc
mov
ins
inc
push
pop
xor
adc
pop
dec
enter
sub
(bad)
cmp
mov
cmp
sub
mov
and
aas
sti
sub
dec
leave
fbstp
(bad)
xor
retf
inc
sub
out
out
mov
std
(bad)
fisub
bound
xchg
int
ja
sub
shl
dec
mov
(bad)
out
je
bnd
jno
test
repz
and
aas
mov
retf
mov
movs
mul
sbb
push
mov
or
aas
adc
fild
aas
mov
and
and
pushf
mov
jmp
dec
xchg
mov
je
(bad)
push
jg
mov
or
cs
ret
push
jmp
cmp
loopne
inc
in
in
push
repnz
imul
dec
mov
repz
repz
dec
sbb
sbb
dec
fist
or
pop
adc
nop
adc
inc
xor
cmps
adc
in
pop
or
dec
bound
xchg
clc
mov
test
mov
mov
fmul
lahf
sub
sub
add
sbb
push
js
outs
mov
jl
pop
jl
dec
adc
xor
adc
xor
ja
clc
mov
add
add
arpl
repnz
(bad)
inc
push
mov
sbb
mov
mov
lods
addr16
mov
dec
pop
jl
call
call
imul
aam
test
in
dec
in
ret
test
daa
icebp
mov
dec
inc
(bad)
mov
mov
cs
pop
fsubrp
out
mov
retf
push
dec
inc
bound
stc
pop
cmp
cmp
retf
sub
inc
and
jl
loope
push
mov
cmp
xchg
mov
mov
and
(bad)
test
mov
inc
push
or
xchg
xor
cmp
sbb
fnstcw
pop
xlat
sahf
mov
mov
jne
inc
shr
push
mov
cmp
or
pop
push
mov
push
sub
adc
enter
es
out
add
cmp
retf
dec
lds
jmp
jecxz
jne
cdq
test
out
inc
lock
int3
ins
popa
ins
lock
(bad)
in
cmp
pop
out
(bad)
jmp
mov
retf
movs
cld
sub
jno
mov
sbb
es
loope
dec
in
enter
sbb
iret
imul
add
or
shr
or
rol
jl
push
jmp
repnz
jo
and
ins
mov
cmp
mov
(bad)
xchg
fiadd
add
cdq
sub
mov
or
(bad)
pushaw
sub
xchg
add
cmp
sub
std
jmp
mov
mov
dec
sbb
mov
test
mov
jbe
or
pop
cmp
cmp
popf
cmp
mov
ja
push
jb
stc
aas
adc
clc
movs
xchg
popa
inc
and
in
out
das
pop
pop
sub
fiadd
pop
in
add
imul
loope
inc
inc
into
test
xchg
loope
call
adc
jbe
cld
mov
jp
or
mov
or
pushf
jle
(bad)
outs
jb
dec
xlat
movs
push
fimul
push
add
jne
jp
jo
add
add
mov
test
(bad)
out
(bad)
(bad)
daa
shr
or
jg
mov
out
sub
lahf
(bad)
push
add
jae
sbb
aas
(bad)
jo
movs
pop
cmp
(bad)
std
out
mov
xor
jns
sub
sbb
(bad)
xchg
out
push
sbb
pop
cmp
sti
jl
mov
jb
lods
sub
cli
jmp
xchg
ins
les
pop
rol
or
idiv
and
fild
(bad)
in
sti
push
outs
jmp
int3
push
pop
xor
(bad)
sub
mov
xchg
sub
sub
out
dec
mov
cmps
and
pop
pop
scas
dec
fdiv
xchg
jmp
pop
jb
repnz
test
sbb
pop
pop
sub
aad
xor
xlat
cmovno
cmp
xchg
fiadd
sub
pop
fadd
aaa
pop
pop
imul
test
jl
adc
movs
aad
jno
inc
mov
cmp
push
or
test
push
sub
mov
xor
xor
sub
jecxz
mov
stos
ror
inc
jg
mov
push
jne
push
push
fstp
loopne
push
(bad)
das
add
push
repnz
xchg
add
push
out
dec
in
dec
scas
test
jecxz
int3
xchg
loop
jb
repnz
sbb
jg
pushf
inc
cmp
dec
sub
sub
loope
scas
lock
shl
mov
call
dec
repz
shl
inc
xor
cmp
fldenv
pusha
aam
retf
addps
mov
nop
mov
cld
fist
mov
aaa
std
xchg
adc
push
ss
or
popa
sbb
bound
jmp
xchg
in
das
fcom
xor
cdq
inc
int3
xchg
mov
mov
in
push
aaa
jbe
jne
mov
sbb
push
lds
xor
xchg
mov
and
dec
xchg
cmc
lods
gs
cmps
and
daa
lods
aaa
push
scas
in
cmp
test
add
lods
jge
fldcw
cmps
ins
(bad)
jns
push
sbb
dec
(bad)
out
jge
sti
fs
inc
jae
inc
stos
nop
push
pushf
ja
push
stos
addr16
jae
xor
mov
dec
xor
jo
xchg
mov
stos
push
call
lock
fwait
push
int
mov
ret
cmp
pop
rol
leave
pushf
xor
(bad)
sbb
sub
shl
(bad)
pop
fild
aad
ret
or
clc
retf
sbb
xlat
(bad)
mov
pop
aaa
xor
nop
aam
mov
mov
pop
scas
(bad)
mov
mov
(bad)
mov
popa
pop
mov
sub
mov
add
xchg
test
or
pop
sbb
shl
or
pop
clc
sbb
jmp
xchg
cmp
mov
pop
add
adc
outs
add
xchg
sti
cmp
cmc
jp
(bad)
mov
fcmovnbe
and
push
add
xor
out
out
gs
int3
push
sbb
into
sub
mov
movs
aam
dec
add
inc
fisttp
xchg
fiadd
mov
sub
push
mov
fdiv
xor
cmps
fldcw
cmp
mov
mov
call
inc
jp
cld
add
gs
add
jl
pushf
mov
xchg
xchg
mov
lock
cmps
xchg
xor
mov
inc
int3
popf
leave
fs
sub
add
ret
or
(bad)
das
push
cmp
stos
daa
push
push
mov
cmc
pushf
xchg
mov
(bad)
loop
xor
out
mov
xchg
pop
adc
mov
les
xlat
ds
pusha
in
fwait
retf
fmul
mov
sub
retf
ss
scas
and
or
inc
sbb
ds
add
outs
mov
nop
sub
aad
adc
loopne
sbb
mov
rol
jmp
cmp
fcmovbe
fwait
(bad)
jmp
imul
nop
int3
(bad)
adc
rcr
popa
cmps
dec
add
dec
ja
inc
jp
fnstcw
repz
test
xor
mov
xor
push
pop
sti
cs
mov
jmp
mov
out
mov
in
sti
or
jge
fstp
pushf
rcl
test
sub
xor
fdiv
mov
push
mov
lea
(bad)
sbb
je
scas
lods
gs
stos
pushf
scas
jmp
push
xor
and
rol
rcl
aas
mov
mov
lods
lods
push
add
stos
in
psrld
movs
faddp
test
psraw
leave
cmp
add
pusha
inc
mov
jl
push
xchg
popf
outs
jg
mov
stc
push
sti
push
movs
or
retf
cs
mov
fldcw
inc
ror
mov
mov
inc
cdq
lds
imul
inc
sti
sti
xor
cmp
cmp
mov
sbb
and
repnz
jl
lods
cmps
sbb
test
mov
repnz
add
xchg
sbb
adc
test
cmc
std
jae
pusha
cmp
ret
fdivr
test
loopne
sub
inc
xlat
cmps
pop
imul
cmp
jg
mov
sub
pushf
sbb
mov
shl
add
push
and
movs
xchg
cmps
fs
rcl
mov
jns
es
call
mov
cwde
dec
ret
cmp
test
mov
jmp
(bad)
jle
xor
pop
cwde
fld
push
mov
sbb
mov
clc
icebp
fild
and
mov
add
shl
popf
push
and
lahf
(bad)
add
cmp
daa
ja
aad
add
sbb
mov
xor
jecxz
iret
add
test
int
mov
cmps
sar
mov
hlt
cmc
jl
rcl
mov
lds
mov
mov
call
or
or
(bad)
popa
call
jl
data16
mov
mov
out
int3
add
sbb
or
lods
leave
out
faddp
jl
or
test
(bad)
adc
mov
cmp
mov
inc
call
(bad)
add
and
fst
xor
dec
pop
xchg
stos
and
in
pop
and
mov
test
mov
inc
test
xchg
out
cld
aad
shr
sub
and
mov
vunpckhps
xchg
jbe
(bad)
or
outs
sbb
pop
and
jge
or
or
aam
mov
adc
mov
mov
daa
dec
pop
jge
jle
xor
pop
cmp
call
test
push
idiv
add
sub
sbb
shr
sahf
pop
shl
push
call
scas
shl
imul
out
sbb
cld
pop
add
and
or
aad
mov
mov
adc
aas
fcomp
shl
dec
push
adc
jno
movmskps
mov
sub
les
xchg
loope
cs
mov
push
js
pop
pop
jbe
push
icebp
mov
lods
push
dec
xchg
push
dec
add
add
sbb
(bad)
dec
xor
or
mov
mov
rcr
movs
jns
jecxz
inc
and
int
mov
adc
jb
aad
and
dec
and
cld
shl
(bad)
movs
mov
pop
or
das
in
pop
stos
xchg
xor
or
pop
push
cld
inc
and
stos
xchg
xchg
push
sbb
cmp
lock
jmp
pop
inc
mov
ret
push
inc
jecxz
pop
out
imul
xchg
mov
add
ja
test
mov
add
mov
mov
mov
mov
jle
pop
sub
aaa
fistp
or
sti
das
jbe
jecxz
gs
mov
mov
inc
cmp
mov
sbb
shr
xor
shl
das
xlat
call
xor
inc
mov
pop
sbb
xor
int
mul
and
mov
cmp
fmulp
push
into
pop
pop
inc
shl
mov
daa
jns
sub
xchg
push
push
cmp
jne
xchg
jmp
sbb
sub
loop
or
movs
dec
(bad)
aaa
push
mov
dec
push
push
out
in
and
xchg
sub
push
mov
pop
pop
retf
push
scas
mov
out
pop
push
loopne
pop
outs
push
imul
(bad)
cmps
call
or
xlat
push
adc
mov
cmp
mov
jl
push
push
pop
repz
sbb
mov
cmc
pop
sub
test
inc
dec
push
(bad)
icebp
cmp
pop
jle
rol
push
push
adc
test
or
in
xchg
test
(bad)
push
iret
stc
popf
cmp
in
adc
xor
sub
pop
and
xchg
loopne
pushf
jle
mov
push
stos
mov
or
xchg
fmul
icebp
leave
xchg
or
scas
cwde
cwde
mov
push
sbb
dec
das
imul
cld
enter
dec
outs
mov
lods
xor
lahf
pop
repnz
ins
aad
cmp
aad
cld
mov
sbb
dec
adc
fidiv
pop
(bad)
xor
lock
xor
xchg
fwait
rol
sub
mov
lock
xchg
and
sbb
fst
lds
int
cmp
fwait
cwde
jns
in
in
inc
or
sub
iret
dec
mov
shl
jge
ret
fidiv
inc
(bad)
repnz
mov
out
xchg
test
sub
xchg
mov
loope
stc
fidiv
xchg
ror
test
pop
jmp
and
out
in
fstp
pop
fidiv
ins
dec
jno
dec
scas
jbe
dec
loopne
jb
aad
mov
cmp
inc
or
aaa
push
push
cmp
fild
pusha
fbstp
pop
fnstsw
retf
push
jo
jnp
xor
stos
push
xchg
adc
leave
and
push
out
pop
das
lds
int
mov
lahf
mov
adc
dec
call
push
es
shl
rcl
hlt
(bad)
int
rol
sahf
or
xchg
jge
aam
jp
sbb
jmp
mov
call
in
cmps
fcom
push
in
dec
mov
lahf
cmc
xchg
push
clc
adc
mov
add
test
lahf
rol
or
pusha
push
pop
rcl
mov
lock
dec
ret
lahf
jge
mov
icebp
les
leave
dec
and
mov
outs
(bad)
call
rcl
mov
scas
inc
or
sti
adc
and
mov
repnz
mov
mov
sub
pop
stos
cmp
aas
push
sahf
and
enter
add
out
cmovno
aam
and
xchg
scas
test
test
(bad)
fnstcw
push
jne
xor
movs
and
xchg
mov
cmps
out
mov
cwde
jne
outs
int
pop
into
dec
mov
jp
and
retf
sti
out
mov
xchg
xchg
cmp
adc
push
cmc
repnz
sbb
jl
frstor
aad
pextrw
push
mov
ja
sbb
lahf
xor
adc
mov
les
jnp
xlat
out
jge
xor
xchg
clc
jnp
push
in
mov
ds
outs
inc
mov
shl
(bad)
rcr
dec
or
repnz
test
outs
push
cmps
jae
cmc
inc
or
cmps
rol
daa
fistp
ins
test
pop
repz
and
jecxz
into
pop
das
inc
mov
out
push
dec
gs
dec
add
mov
cmp
pop
mov
daa
pop
das
inc
inc
and
lahf
xchg
or
ret
inc
push
mov
in
shl
daa
popa
(bad)
movs
jo
pop
dec
adc
and
stc
push
mov
jmp
or
inc
mov
jp
xor
(bad)
nop
push
push
jmp
push
pop
jle
lahf
js
scas
ins
test
sar
jp
ja
clc
inc
mov
add
push
hlt
scas
movs
xchg
(bad)
lock
aaa
adc
adc
(bad)
out
pop
call
rcpps
jmp
xchg
sbb
and
mov
(bad)
adc
mov
or
fdiv
jae
fcom
shl
sub
movs
mov
add
hlt
lods
mov
jl
or
out
mov
sub
mov
cmp
jle
popa
xchg
ret
rcl
(bad)
mov
gs
je
movsx
xlat
add
ds
jecxz
sub
inc
lea
(bad)
pushf
xlat
lds
sub
xchg
and
aaa
fs
rcr
lea
mov
int3
cmp
loopne
sub
and
stc
inc
shr
pop
mov
repnz
fld
das
xchg
xchg
int
jmp
imul
mov
ret
(bad)
out
mov
lea
and
div
inc
lahf
int
jp
rcr
push
lahf
dec
(bad)
dec
lahf
push
jle
pop
mov
les
and
in
(bad)
mov
inc
hlt
push
movs
in
retf
jnp
test
push
push
xchg
sub
mov
cmps
pop
xor
(bad)
hlt
sbb
and
sbb
sahf
or
jno
adc
sub
xchg
push
cmps
aam
fist
out
jmp
xchg
shr
cmps
jmp
sub
or
jmp
out
adc
ss
dec
aam
lods
int3
inc
jo
add
dec
enter
cli
(bad)
mov
pop
test
setnp
mov
cmc
push
test
pop
retf
js
outs
push
cld
stos
sbb
loopne
mov
loop
imul
test
mov
je
retf
out
fsubr
enter
ror
fst
das
leave
gs
jmp
sub
sahf
popa
push
cmp
inc
or
fs
adc
lock
inc
gs
push
fwait
jnp
fwait
xchg
jmp
or
push
jg
addr16
in
mov
jle
fsubrp
mov
aas
sbb
lea
movs
lea
cmp
and
mov
(bad)
push
es
std
ret
mov
fsubr
pusha
xchg
cmc
sbb
jb
iret
jg
mov
cmp
jmp
sahf
jns
pop
adc
dec
out
cli
sbb
mov
adc
fidivr
xor
inc
fmul
mov
test
mov
xchg
push
aas
mov
pop
mov
push
adc
pop
sbb
adc
sub
and
sbb
adc
inc
add
mov
adc
xor
jl
cmps
clc
fsub
fidivr
es
jmp
mov
cmp
mov
mov
mov
ins
loope
cmp
push
(bad)
div
(bad)
aaa
cmps
div
imul
dec
pop
test
int3
outs
xchg
inc
mov
les
es
inc
cmp
retf
dec
or
or
mov
push
add
xchg
push
clc
or
inc
cdq
inc
mov
ds
mov
push
daa
pop
scas
add
mov
(bad)
fsub
arpl
(bad)
jecxz
or
xor
mov
scas
(bad)
mov
call
retf
mov
xor
mov
fwait
inc
mov
jge
(bad)
pop
rcr
add
sbb
ins
mov
test
adc
jno
adc
xchg
inc
(bad)
(bad)
repz
aam
idiv
push
pop
or
cmp
adc
and
out
retf
adc
in
and
movs
mov
retf
or
sbb
cli
and
aas
cs
jmp
mov
inc
cmps
pop
cmp
cmps
iret
test
call
sbb
je
xchg
sbb
imul
and
add
popa
aas
inc
shl
cmp
adc
jl
call
sbb
add
cld
ficom
xor
pushf
(bad)
daa
stos
(bad)
mov
test
enter
add
xchg
stos
inc
inc
fcmovbe
scas
jp
xor
lock
mov
mov
add
mov
cli
mov
rcl
jl
addr16
(bad)
fcomi
in
pminsw
mul
mov
jmp
mov
clc
movs
mov
sbb
stos
cs
cmovs
xor
test
inc
add
mov
pop
loope
(bad)
xlat
call
ins
jo
(bad)
sub
test
mov
pop
xchg
inc
imul
mov
imul
push
sahf
cld
neg
cmc
addr16
mov
pusha
(bad)
xchg
push
outs
lahf
pop
inc
pop
or
dec
pop
je
inc
pop
mov
mov
je
scas
ins
aas
push
xchg
xchg
int3
lods
pop
xchg
xchg
test
push
aad
xor
mov
gs
cmp
xchg
das
jne
popa
pop
aad
out
popf
jmp
test
mov
std
adc
xor
mov
je
or
retf
ret
mov
into
test
aas
lahf
mov
test
mov
cmp
dec
pushf
test
in
and
xchg
in
in
lds
repnz
inc
or
int3
es
pop
shl
dec
aam
ins
cli
inc
sub
jg
cmps
jge
mov
add
dec
mov
(bad)
sahf
nop
add
in
push
dec
mov
sbb
ror
sbb
add
mov
mov
push
cs
out
pop
inc
pop
aas
jne
jecxz
test
adc
hlt
or
pop
add
xlat
loop
out
shl
imul
push
mov
int3
or
pop
pop
sahf
inc
loopne
pop
pop
jae
dec
lods
cmps
ror
or
sbb
lods
rol
fisubr
pop
cmps
icebp
adc
fwait
rol
rcl
push
sbb
mov
sub
loopne
mov
push
push
dec
loop
fst
xchg
stc
int
dec
outs
fadd
or
dec
xor
dec
xor
gs
imul
mov
cmp
in
mov
mul
data16
test
or
aaa
push
addr16
xor
adc
call
loop
dec
mov
popa
jecxz
fisttp
loope
idiv
daa
dec
jbe
jae
leave
jo
int
push
pop
cmc
imul
adc
scas
aaa
fistp
ja
jne
mov
inc
mov
retf
and
dec
pop
mov
or
arpl
cmp
add
cdq
fcomi
test
call
outs
lock
arpl
add
add
(bad)
push
hlt
test
adc
repnz
fldenv
mov
out
mov
cmp
ret
std
call
and
inc
aas
push
or
and
add
jmp
out
je
jg
mov
in
out
fstp
push
pop
xor
inc
push
or
or
dec
test
rcr
int3
stos
movs
xor
ficom
neg
inc
pop
rol
and
je
adc
cs
xchg
inc
movs
ja
ins
xor
lds
sbb
not
mov
aaa
fdiv
es
xchg
test
ror
stos
repnz
ja
xchg
jecxz
imul
mov
dec
xchg
lds
mov
pop
inc
sbb
xchg
cli
and
mov
push
shl
sbb
(bad)
leave
adc
test
mov
and
out
jl
and
ja
(bad)
in
stos
mov
cmp
xor
scas
arpl
jmp
mov
popa
xor
or
push
push
in
cmp
jl
imul
push
sub
data16
dec
add
test
rcr
mov
mov
mov
ds
call
ins
(bad)
stos
fsubr
call
(bad)
push
push
lea
aaa
pusha
imul
mov
stc
icebp
push
dec
mov
dec
lods
clc
xor
(bad)
and
test
pop
loop
and
add
out
std
loope
pop
sbb
pop
mov
imul
int
stc
out
imul
in
sub
xchg
mov
ins
loope
call
out
lods
pushf
enter
push
mov
(bad)
fild
fs
mov
mov
fistp
(bad)
and
into
aam
pop
xchg
sub
test
(bad)
xor
mov
mov
ret
mov
add
pop
jnp
shl
outs
sub
dec
inc
test
lea
jbe
rcl
cmp
push
mov
adc
test
mov
imul
call
test
scas
(bad)
dec
fiadd
cmp
cli
icebp
jp
mov
mov
or
das
into
jg
dec
push
or
stos
or
xchg
pusha
push
aas
fiadd
pop
fistp
fwait
add
pop
ins
xor
sub
mov
fsubr
xlat
loop
mov
rcr
or
scas
push
mov
nop
stos
aam
inc
enter
fcomp
cwde
xchg
sbb
rol
sbb
stos
icebp
inc
ret
idiv
sar
or
clc
jo
add
mov
fiadd
xor
aam
jl
and
iret
(bad)
add
sbb
pop
pop
ja
push
mov
pop
jbe
mov
mov
repz
inc
mov
sti
cmc
(bad)
(bad)
push
sub
and
sbb
add
pop
lods
mov
xor
dec
adc
mov
mov
in
ds
out
pop
pop
movs
xchg
dec
or
mov
inc
in
add
mov
sbb
mov
mov
mov
and
push
lods
sub
mov
sar
mov
mov
cmp
mov
mov
ss
scas
hlt
les
sub
in
test
loope
stc
outs
adc
sub
add
push
mov
cmps
inc
shl
and
lock
scas
and
cmc
jecxz
jl
jb
xor
fsubr
mov
cmps
mov
mov
add
mov
add
sub
cmp
js
retf
xor
pop
aaa
ja
(bad)
iret
repz
jge
ret
rcr
movs
dec
cmp
out
inc
sbb
loop
fmulp
dec
scas
(bad)
retf
jb
icebp
sub
inc
jmp
push
sbb
mov
ja
int
xlat
ret
fild
dec
xor
push
lods
mov
push
loope
idiv
jno
movs
mov
icebp
xchg
inc
push
mov
cwde
pop
or
dec
mov
cmp
xchg
or
fldenv
lahf
retf
mov
pop
cmp
out
mov
cmp
loop
inc
in
dec
sub
pop
dec
shr
inc
adc
popa
jb
lahf
cmp
ret
data16
movs
inc
arpl
cld
mov
sub
inc
pushf
fnstenv
or
push
fisub
in
std
sub
iret
or
aaa
sub
push
sbb
mov
fist
inc
inc
mov
pop
ss
jo
dec
outs
push
(bad)
mov
pop
cmc
lods
dec
leave
mov
sbb
jo
sahf
cmp
aad
mov
retf
(bad)
pop
dec
and
test
xor
inc
dec
ja
mov
jno
ror
retf
loope
sub
xchg
mov
arpl
inc
jb
bound
std
test
pop
test
mov
sbb
pop
inc
ror
mov
rol
test
mov
rcr
scas
ss
test
into
xor
(bad)
fucom
movs
xchg
push
push
(bad)
inc
sub
jl
dec
or
das
imul
ss
out
fsub
pop
or
sub
push
mov
es
push
pop
mov
outs
inc
mov
mov
sti
call
xchg
cmp
adc
stos
xor
xor
fisttp
add
and
sar
cs
gs
or
jle
mov
xchg
shl
out
gs
out
in
ret
sub
aaa
scas
sar
cli
rcl
mov
mov
das
pop
cmps
cwde
xchg
jmp
xchg
push
and
jmp
mov
lds
sbb
into
pop
nop
jmp
(bad)
pop
push
dec
jg
pop
adc
mov
movs
pop
mov
in
mov
nop
test
xchg
(bad)
leave
sub
push
jae
fcom
sub
(bad)
add
xchg
in
xchg
loop
dec
rcl
loop
dec
push
jae
aas
sti
inc
xchg
mov
test
inc
jl
ror
bound
cmp
scas
out
xchg
inc
leave
sub
and
ins
mov
imul
push
shl
mov
sbb
mov
in
cmp
mov
mov
xchg
push
outs
mov
dec
(bad)
adc
outs
push
sbb
cmp
(bad)
addr16
daa
movs
mov
and
pop
or
and
xlat
pop
push
lods
jl
and
jae
mov
int
inc
stc
or
leave
adc
mov
xor
in
sbb
inc
dec
inc
popf
ins
aaa
(bad)
xor
aad
ja
jmp
cmp
jne
pop
das
stos
shl
(bad)
in
adc
ins
mov
leave
and
lock
repz
daa
arpl
ds
mov
mov
push
movs
jl
xchg
dec
push
sbb
add
sub
movs
scas
test
das
popf
cs
xor
ss
dec
pop
push
jns
shl
popf
das
mov
xchg
stos
or
sbb
(bad)
loop
mov
cmc
retf
cwde
push
jno
mov
dec
adc
clc
(bad)
mov
cmp
mov
jne
adc
retf
inc
fadd
mov
and
adc
aam
xor
fdivr
dec
mov
mov
push
jle
and
dec
ja
add
(bad)
neg
icebp
cmp
out
stos
ins
push
push
repz
retf
and
ja
cmc
lods
or
movs
les
(bad)
cmp
jmp
icebp
inc
mov
pop
in
cmps
mov
inc
pop
mov
jbe
or
repz
and
mov
cmp
mov
rcr
in
mov
mov
jnp
jnp
pop
mov
repnz
cmp
jmp
out
or
and
xchg
adc
(bad)
call
push
repnz
shl
mov
mov
rcr
cmp
xor
sub
popa
out
cmp
not
fimul
sub
test
shl
mov
jbe
jbe
xchg
inc
add
adc
into
xor
ds
outs
sbb
xchg
jle
cmp
pop
lds
lods
cmp
sbb
data16
pop
push
adc
lds
pop
lods
leave
dec
clc
xor
adc
add
ret
cli
mov
aaa
xchg
js
push
(bad)
fst
(bad)
loopne
cli
cli
pop
movs
add
shl
xor
cli
mov
call
jl
adc
jno
nop
sbb
push
lods
cmps
imul
les
mov
sahf
cwde
loopne
jmp
shr
inc
push
and
xchg
loop
pop
jmp
and
test
mov
ins
pop
or
jmp
mov
sub
push
xchg
inc
out
in
jle
fldenv
aaa
push
xchg
jae
lahf
les
imul
mov
lods
out
xchg
fisttp
jne
(bad)
pusha
push
lods
scas
retf
pop
pop
daa
pop
push
dec
cmp
retf
pop
sub
mov
sbb
xchg
mov
xchg
jmp
js
(bad)
sub
push
fadd
mov
into
cmp
(bad)
movs
fs
addr16
int
mov
pop
pop
fcomp
push
out
fdivp
pop
push
clc
(bad)
fucomp
aaa
cdq
rol
mov
jne
mov
fwait
imul
fcom
jp
jno
stos
das
pop
movs
push
icebp
mov
test
mov
mov
jb
fistp
sub
test
in
or
fidivr
repz
and
movs
and
aam
push
jecxz
stos
lahf
pop
shl
ss
clc
ror
icebp
cmps
mov
mov
and
adc
out
pop
dec
je
cmc
cmp
sbb
inc
push
les
dec
loope
jmp
lahf
iret
dec
int3
jmp
adc
aam
or
xor
push
push
cmp
push
out
xchg
mov
add
cmc
xchg
loop
fisttp
fisubr
ins
xchg
or
cwde
dec
push
mov
frstor
ds
cmp
clc
cmp
xchg
push
lods
xor
pop
mov
out
test
inc
pop
or
xchg
cdq
push
aad
cmps
mov
or
pop
ins
cmp
stos
fdiv
lods
jbe
stos
repz
jle
mov
pop
pop
dec
scas
test
outs
pusha
jmp
scas
(bad)
adc
jmp
jno
jb
and
push
xlat
das
icebp
test
cs
(bad)
dec
imul
inc
and
scas
scas
ins
in
inc
xchg
xor
sub
enter
pshufw
int3
xchg
(bad)
mov
add
dec
mov
cmp
adc
in
(bad)
mov
adc
int3
cmp
leave
enter
jnp
jns
xchg
dec
pop
or
mov
push
mov
imul
jns
adc
out
(bad)
lea
mov
into
add
cmp
sahf
rol
dec
aam
sbb
gs
push
push
mov
xchg
adc
leave
pop
sub
fadd
repz
ins
add
inc
lahf
inc
cli
mov
xchg
std
lods
popa
jg
add
xor
mov
mov
leave
enter
add
mov
xchg
mov
div
xchg
cli
enter
jg
cmp
jl
imul
jo
jl
lea
sbb
scas
or
in
push
in
push
xor
jge
cmp
cmp
ja
(bad)
jo
into
sbb
clc
push
psadbw
adc
imul
(bad)
aam
cmp
add
(bad)
cmp
das
cmps
add
mov
xchg
add
in
addr16
ins
inc
push
mov
mov
loopne
daa
add
sbb
fdivr
xchg
xchg
pop
jmp
push
xchg
mov
leave
xlat
push
js
xchg
(bad)
aaa
std
mov
cld
into
cmc
arpl
(bad)
mov
in
clc
daa
jg
dec
scas
sub
iret
jmp
idiv
and
push
sbb
dec
adc
repnz
je
jae
sbb
inc
loop
xchg
pop
xor
and
xor
inc
out
addr16
dec
mov
adc
bnd
jmp
dec
ins
xor
loope
mov
and
jns
aad
test
dec
pop
mov
scas
xchg
jns
bound
(bad)
cmp
repz
sbb
xchg
push
mov
jae
jo
dec
mov
and
mov
cmp
test
inc
cmp
je
adc
mov
and
sbb
and
ret
loopne
je
bound
mov
cwde
in
mov
add
inc
or
cs
bound
loop
sbb
or
int
dec
jge
cmp
jns
fisttp
das
adc
cmp
mov
test
movs
xchg
sub
sbb
sub
push
rcl
adc
retf
sti
push
pop
enter
jmp
and
addr16
jl
cmp
sbb
push
sub
cdq
mov
pushf
pop
push
sbb
call
sar
lea
rcr
fs
cwde
bound
or
call
push
push
mov
push
sub
js
xor
pushf
in
mov
aad
js
xor
pop
mov
xchg
push
push
adc
mov
repnz
enter
imul
test
dec
inc
dec
or
fisub
jmp
mov
mov
lds
mov
iret
sbb
cs
outs
fist
sub
dec
dec
cmps
xchg
mov
sub
test
cdq
fwait
ds
das
xchg
cmps
out
dec
mov
sbb
mov
loopne
aaa
mov
adc
xabort
retf
cmp
leave
icebp
push
out
cmp
adc
dec
mov
test
push
sbb
push
ret
fwait
sub
cmps
rcl
pop
push
(bad)
fidiv
jecxz
xor
loop
sub
or
sub
ins
test
daa
data16
xchg
fs
mov
call
xor
in
stc
mov
push
push
cli
dec
and
mov
xchg
xchg
fsub
pushf
neg
(bad)
push
or
mov
shr
cli
inc
ss
dec
call
and
xchg
sub
mov
pop
js
data16
xchg
sbb
sbb
(bad)
sar
gs
icebp
fwait
mov
pop
jp
aad
fnstenv
sahf
push
arpl
cmps
mov
inc
pop
mov
xchg
jge
jne
inc
and
pop
out
fst
xchg
add
push
fcmovnb
xchg
sahf
(bad)
out
lahf
adc
sbb
mov
push
daa
pop
int3
jmp
jmp
sub
jle
gs
into
xor
(bad)
shr
ret
or
sbb
cli
outs
dec
sbb
lea
jecxz
sbb
in
leave
dec
test
jmp
leave
arpl
mov
and
outs
xchg
mov
push
mov
and
and
cmp
mov
ss
mov
sbb
pop
ror
dec
dec
enter
outs
loopne
test
xchg
adc
les
nop
bound
cmp
or
sub
sbb
out
jnp
shl
xchg
sbb
pop
sbb
adc
test
dec
cmp
push
in
call
shl
mov
push
add
cwde
xor
mov
cmp
inc
add
fist
sbb
add
xor
and
(bad)
adc
mov
adc
push
xor
shl
pop
outs
sub
mov
jp
or
in
mov
pushf
into
sbb
ret
xor
push
pop
jle
fucomip
fnstcw
idiv
xor
pop
in
mov
sub
repnz
dec
loop
push
cdq
ja
dec
inc
pusha
sbb
mov
cli
and
push
loopne
stos
cmp
dec
sbb
mov
pop
inc
jo
mov
push
fstp
mov
mov
push
sub
xchg
cmp
outs
enter
push
jb
pop
loopne
push
mov
ror
jecxz
es
add
push
iret
jb
popf
adc
fild
sub
ret
cwde
in
push
scas
inc
imul
outs
scas
std
ss
xchg
arpl
div
and
sub
cs
shr
dec
std
mov
int
add
push
jbe
dec
cmp
adc
inc
dec
jo
sahf
cdq
mov
pop
push
mov
pop
cmc
(bad)
mov
daa
popf
xchg
dec
lods
call
shl
mov
call
in
mov
call
and
ror
cmp
inc
push
add
lods
xor
mov
sbb
loop
and
cmps
dec
dec
(bad)
mov
or
into
sub
cwde
pushf
pop
mov
mov
outs
push
in
push
int3
pop
(bad)
push
adc
xlat
nop
enter
pop
xchg
sbb
movs
adc
stc
hlt
fsubr
aam
iret
fld
add
push
sbb
ins
mov
xchg
aaa
xor
outs
xchg
mov
sub
loope
push
stos
retf
sbb
xor
(bad)
pmuludq
comiss
arpl
or
out
dec
aam
popf
and
imul
or
inc
ror
sar
test
das
push
pop
popa
movs
mov
dec
adc
loope
pop
sub
lods
mov
adc
retf
mov
ret
ins
(bad)
mov
sub
ret
xchg
loop
ds
sbb
and
cmc
sub
xchg
cmp
(bad)
pop
add
lock
in
cmps
ja
mov
jns
adc
or
in
sbb
mov
push
sahf
push
sti
int3
pushf
ret
lds
jne
pusha
pop
loopne
in
loopne
jle
push
mov
out
inc
adc
jns
aad
pop
cs
mov
loop
pop
jnp
iret
es
sbb
inc
add
push
out
cmp
cmps
in
aaa
mov
aas
mov
fistp
lahf
test
jnp
push
xchg
test
jge
out
fwait
jns
imul
mov
and
fisub
mov
xlat
hlt
and
mov
mov
mov
push
jo
aas
lock
push
ret
lods
xor
mov
dec
lods
cdq
push
push
add
or
or
cs
sbb
pop
jle
mov
xchg
inc
mov
jbe
mov
cmp
mov
jp
test
xchg
jmp
sti
cdq
jo
data16
inc
or
mov
xchg
fisubr
mov
pop
lock
imul
stos
adc
cwde
push
sar
mov
xor
lods
aaa
jb
mov
rcl
sub
pusha
cmp
adc
and
sub
lods
jmp
cs
jge
mov
into
call
push
cmp
xchg
jecxz
xlat
not
ror
pusha
dec
xchg
sub
ins
aam
dec
sbb
fs
sub
fsubr
in
repz
mov
ss
add
(bad)
cmp
in
bound
jmp
xor
push
xor
xor
or
jle
rcl
outs
xchg
and
and
mov
jg
imul
pushf
pop
push
adc
dec
imul
(bad)
mov
rcl
lds
push
xor
push
xor
sahf
cmps
das
in
push
in
in
cdq
loop
popf
hlt
dec
hlt
int3
push
xchg
int3
and
sar
jno
pusha
cmp
jbe
adc
or
mov
jmp
add
mov
icebp
pop
out
ins
push
inc
adc
and
test
inc
fistp
mov
daa
xchg
out
test
mov
test
lea
arpl
jno
iret
sbb
leave
je
ins
mov
dec
ins
cdq
cli
loopne
mov
repz
pop
and
inc
mov
cmp
or
clc
aas
and
mov
adc
lods
jns
(bad)
out
jb
inc
rcl
test
addr16
jmp
in
shr
pusha
or
imul
mov
push
pop
scas
jmp
lds
pop
mov
loopne
(bad)
cmp
test
mov
mov
imul
addps
adc
fimul
hlt
adc
sub
cli
jne
mov
lea
stos
fs
out
into
jne
adc
mov
xchg
inc
rcl
sbb
fs
cmp
mov
fcom
and
mov
dec
xchg
sahf
out
lahf
adc
jns
xor
xor
pop
cmp
fs
repnz
loope
call
xor
mov
mov
adc
and
push
sbb
out
mov
and
mov
adc
or
nop
lock
xor
push
or
addr16
hlt
add
cmc
unpckhps
push
or
pop
pop
stos
mov
xlat
in
mov
ja
adc
jo
fsub
lds
mov
jbe
je
jns
xor
bnd
js
cmc
xor
(bad)
popa
mov
and
cmp
js
jle
shr
aam
(bad)
pop
add
loope
sub
adc
and
clc
inc
mov
add
call
dec
imul
addr16
inc
inc
dec
leave
mov
jmp
or
xchg
mov
and
test
out
in
xor
dec
paddsb
call
pop
(bad)
pusha
sub
jmp
jmp
fisttp
and
xchg
arpl
adc
push
loop
jbe
sbb
mov
xor
inc
sahf
mov
mov
sar
dec
and
inc
xchg
(bad)
and
(bad)
shr
retf
pushf
movs
jne
int3
fs
push
fs
sub
cmp
pushf
js
push
fs
cdq
jnp
sub
push
inc
push
loope
pop
mov
lock
and
repnz
pushf
push
and
lock
jecxz
mov
int
loope
jae
or
add
div
out
push
mov
mov
retf
es
jg
jg
aaa
bound
mov
dec
inc
push
mov
movs
int3
les
mov
push
sbb
inc
cmp
stc
xchg
mov
in
adc
pop
sbb
cmc
jmp
out
dec
xor
int3
fnstsw
jmp
push
mov
cdq
das
mov
mov
mul
sbb
pop
dec
sub
js
cli
mov
fst
stos
popa
mov
xchg
clc
add
pusha
mov
(bad)
mov
cwde
ret
imul
mov
cli
sbb
in
jne
enter
xchg
int3
mov
push
pop
xchg
push
and
dec
jecxz
pop
inc
out
and
jnp
mov
das
jg
test
push
dec
mov
dec
pop
inc
lea
cmps
adc
lods
movs
pop
fbstp
out
jmp
test
lods
sub
mov
xor
add
jb
imul
aam
push
mov
xor
push
dec
add
loope
mov
pushf
and
push
or
dec
out
push
xor
and
xchg
sub
push
jne
mov
add
mov
call
or
or
pop
cmp
mov
mov
push
xchg
(bad)
push
movs
aad
push
dec
jp
mov
hlt
bound
xor
popf
iret
cs
push
int3
mov
push
dec
cld
fs
cmc
out
mov
ins
jle
test
ds
lea
and
inc
jg
das
jmp
mov
dec
mov
cmc
mov
mov
sahf
pop
sub
cwde
out
in
xor
sbb
mov
push
(bad)
mov
add
inc
adc
fimul
fimul
data16
pop
stos
lahf
inc
mov
out
(bad)
adc
pop
les
pop
add
push
mov
sahf
add
dec
mov
icebp
fst
add
lock
dec
dec
jp
push
push
lds
push
and
sub
pushf
mov
in
into
push
dec
ror
or
lds
in
or
and
add
cs
mov
outs
jns
pusha
adc
cwde
mul
test
xchg
rcr
call
out
adc
jmp
jbe
mov
inc
jle
pop
sbb
and
push
cwde
jmp
mov
cdq
adc
or
mov
bound
mov
mov
aas
dec
add
movs
push
imul
jae
fucomp
js
out
movsx
popa
popf
std
push
mov
mov
test
into
xchg
xor
inc
xor
jb
pushf
xchg
aam
and
int3
in
push
(bad)
jecxz
push
mov
in
xor
xor
cld
xor
and
inc
mov
sbb
xchg
sar
mov
fistp
mov
jne
xor
(bad)
cmp
test
dec
aas
data16
cli
popa
push
sbb
jl
push
dec
arpl
lahf
cli
ret
(bad)
pop
push
shr
mov
stos
inc
lock
adc
adc
mov
hlt
mov
aam
loopne
call
in
sub
cmp
sbb
stc
cmp
ret
inc
mov
push
retf
dec
aas
mov
sbb
mov
outs
mov
int3
shl
gs
pop
movs
or
fmul
sbb
dec
cmp
xor
cmp
or
push
pop
push
test
(bad)
xor
add
sbb
call
fisttp
shl
inc
or
cmps
fistp
cdq
add
cmp
sub
clc
dec
pop
into
test
pop
adc
stos
mov
add
sbb
sbb
jnp
adc
out
mul
icebp
jnp
jmp
sbb
jae
sub
xchg
cmp
adc
dec
inc
test
dec
inc
mov
int3
sti
sahf
sub
xchg
or
push
in
cld
mov
shl
xchg
push
xor
(bad)
cmp
iret
adc
call
sub
scas
sbb
pop
jmp
pushf
scas
test
fwait
cli
in
cmp
mov
cmps
stos
frstor
pop
into
push
cmp
and
js
shl
fldenv
mov
mov
shr
retf
mov
xor
pop
cmp
adc
call
pop
push
rcl
out
lods
jnp
sub
(bad)
dec
pop
cmp
xchg
iret
in
cmps
(bad)
je
sbb
rcl
push
add
stos
(bad)
aam
dec
jb
(bad)
adc
sub
pushf
ds
sub
and
ficomp
xchg
mov
daa
push
dec
mov
and
popa
aam
pushf
and
push
add
popa
sti
cmc
pop
and
inc
repz
cmp
popf
test
push
in
lahf
xchg
call
es
retf
mov
hlt
test
jmp
(bad)
mov
mov
(bad)
xlat
jno
cld
cmp
jne
inc
or
stos
cmps
scas
leave
sar
and
push
test
ret
out
sahf
mov
push
mov
mov
aaa
push
mov
test
fiadd
pop
lods
call
mov
add
sahf
out
movntq
lock
aas
(bad)
out
adc
inc
mov
(bad)
andnps
push
jns
sub
fmulp
lock
xor
inc
es
mov
mov
scas
rcl
push
(bad)
xchg
adc
imul
loop
dec
jle
fldpi
lds
jmp
jmp
push
xor
pop
xchg
sahf
or
inc
lods
cmp
out
rcl
and
and
cmp
mov
mov
jmp
in
popf
repnz
test
xchg
push
jns
mov
mov
inc
xor
adc
out
es
xchg
aaa
jbe
ret
sbb
test
stos
or
fsub
repnz
add
xchg
mov
rcl
xor
mov
arpl
scas
in
cmp
push
push
cmp
xor
and
mov
xchg
mov
clc
pop
jg
push
mov
imul
mov
es
pop
inc
adc
mov
mov
fisub
test
jl
push
add
xlat
mov
dec
push
nop
and
fucomip
int
mov
push
jno
rcr
xlat
mov
jg
push
(bad)
push
inc
sub
mov
cmp
daa
cwde
jg
cs
xchg
jmp
movs
in
push
out
jnp
mov
inc
push
sub
jle
jecxz
(bad)
repz
inc
mov
push
enter
out
addr16
dec
or
dec
pop
call
jecxz
adc
add
retf
pusha
and
adc
call
mov
jecxz
mov
gs
sub
sub
aaa
dec
std
cmp
inc
imul
bound
hlt
sub
adc
fdiv
fdivr
enter
dec
retf
call
retf
push
jbe
(bad)
call
xchg
cmp
iret
pop
or
jmp
pop
or
movs
jmp
jge
and
(bad)
sbb
dec
cmc
inc
xchg
into
inc
ret
mov
mov
repz
jl
rol
div
jmp
or
mov
inc
lods
movs
test
das
pop
inc
loopne
movs
lahf
mov
sub
mov
shl
push
fcos
aaa
pop
scas
adc
pop
push
jno
je
daa
imul
sub
out
mov
sub
cmp
and
daa
repnz
fst
test
push
lods
push
xor
xchg
or
rol
sub
or
bound
lods
cmp
xor
rcr
scas
add
repnz
add
push
hlt
out
xor
shl
fwait
jge
add
cld
(bad)
adc
push
push
imul
movs
pop
dec
fist
dec
mov
cwde
cdq
lea
cmp
loope
sti
pop
fwait
loope
out
jmp
daa
push
(bad)
aam
push
jne
imul
pop
daa
fidiv
xchg
ret
xchg
movs
adc
int3
shl
mov
cmp
aam
pusha
loop
inc
bnd
jp
dec
pop
sub
and
push
sbb
push
hlt
sbb
daa
stos
cmp
mov
ret
cs
gs
(bad)
int
pop
mov
pushf
rol
xor
ss
or
jae
mov
fisttp
jg
or
fs
imul
bound
mov
or
aas
pushf
sbb
test
out
xchg
sbb
gs
div
not
dec
outs
shr
push
xchg
in
sbb
dec
mov
fadd
out
fwait
jno
add
mov
iret
jmp
cmp
sbb
mov
jno
jmp
xchg
lods
loop
hlt
push
cmps
cli
pop
jmp
adc
mov
mov
dec
fisubr
mov
jae
push
in
arpl
push
leave
lahf
cmp
inc
or
dec
test
cmp
neg
mov
mov
cmc
jmp
cmp
cwde
call
scas
and
mov
push
mov
mov
adc
int3
sbb
sbb
inc
in
pop
cmp
mov
shr
mov
lock
add
shr
dec
cmp
ret
fs
mov
ret
ret
sub
lea
sbb
mov
jo
xor
stos
adc
cmc
push
dec
in
scas
(bad)
xchg
mov
xchg
rol
(bad)
jp
sub
mov
inc
std
push
mov
push
lods
loop
inc
xlat
rcl
sar
stos
popa
adc
mov
adc
lea
out
inc
scas
cmp
mov
call
scas
mov
pop
fcom
fs
and
pop
inc
sti
mov
clc
sbb
xor
add
inc
ins
inc
in
add
daa
in
mov
out
in
sahf
aaa
ret
push
aad
mov
ja
les
js
xchg
call
sahf
test
dec
retf
mov
loop
mov
push
rol
inc
fwait
pshufw
int3
sahf
pop
inc
add
ins
sub
mov
(bad)
adc
sahf
cmp
pop
or
dec
sub
xchg
jmp
das
stos
fnstenv
lahf
push
in
add
enter
aas
je
xor
pushf
add
mov
rol
(bad)
fild
jb
leave
mov
rcl
mov
sbb
inc
and
xchg
mov
cmp
mov
pop
pop
ret
mov
cs
jecxz
scas
lods
ror
push
inc
rcr
nop
jg
push
sbb
fnstenv
lods
cmp
jmp
stc
jae
mov
sti
adc
fistp
jmp
or
inc
jae
into
inc
rcr
jmp
loopne
daa
xor
shl
lods
(bad)
mov
jae
fs
out
mov
js
lds
push
push
lods
adc
movs
adc
jae
inc
js
jne
cli
xchg
add
push
jo
fnsave
or
and
stc
and
lea
lods
mov
outs
push
addr16
movs
fldenv
repnz
inc
jmp
push
jmp
mov
or
ret
imul
sbb
imul
nop
in
mov
mov
pop
fdivr
lea
loope
std
test
jge
int3
loope
aaa
jg
add
outs
cmps
jle
push
xor
loop
icebp
les
and
add
cs
mov
mov
sbb
cmc
rcr
add
push
aad
imul
sti
jne
xchg
xchg
arpl
scas
clc
xor
gs
icebp
retf
xor
xor
push
ret
mov
mov
sub
dec
dec
sbb
mov
out
mov
dec
jge
mov
pop
in
sbb
pop
lock
fidivr
mov
pushf
mov
std
in
sub
and
stos
pop
mov
lds
dec
inc
push
lods
sti
push
das
xchg
jo
push
hlt
inc
ret
jmp
int
call
adc
mov
mov
dec
(bad)
rcr
push
mov
inc
leave
cs
pushf
cli
xor
(bad)
pop
cdq
and
(bad)
popf
sbb
adc
mov
shl
fs
ins
in
mov
jnp
cmc
pop
dec
fmul
sbb
mov
mov
ret
add
pop
imul
xchg
test
xchg
ss
mov
test
scas
pop
mov
jg
inc
sbb
fld1
mov
cmp
pop
pop
inc
sti
push
scas
sub
inc
out
inc
xchg
jmp
inc
pop
sub
ret
add
mov
inc
xchg
mov
pop
fmul
scas
jmp
push
test
xor
cmps
mov
leave
xor
rcl
cmc
sti
mov
jae
or
loop
sub
adc
out
in
cmc
out
cmp
xor
sar
push
and
xor
adc
and
data16
sub
cwde
jecxz
mov
out
loopne
out
imul
das
ins
mov
jbe
test
push
cmp
loope
dec
dec
mov
dec
cmps
iret
add
imul
mov
add
mov
add
popf
(bad)
jge
mov
sub
mov
push
rcl
cmc
dec
ret
test
mov
jo
sbb
dec
push
cs
jecxz
pop
jnp
aam
adc
push
inc
scas
ror
nop
inc
inc
or
call
dec
in
push
mov
xor
int
nop
mov
(bad)
and
les
jno
js
scas
int3
xchg
fdivr
jmp
in
fstp
sub
dec
and
jbe
adc
xchg
addr16
repz
jg
fmul
push
and
cli
popa
out
xor
shr
in
aad
lods
dec
sbb
adc
add
(bad)
cmp
test
xchg
in
lds
out
inc
in
fisttp
fs
jnp
outs
mov
in
shr
das
pop
aam
sahf
out
fsubr
mov
xchg
loope
retf
test
or
xchg
cmp
imul
cdq
push
mov
sbb
loop
jne
mov
loope
jmp
(bad)
dec
cmp
add
sbb
jmp
in
xlat
das
inc
cld
or
mov
xor
ret
add
mov
pop
pop
jne
pop
adc
mov
pop
dec
pop
jne
cdq
jne
cwde
stos
mov
js
mov
mov
rcr
(bad)
lods
adc
mov
xchg
stos
into
dec
dec
inc
add
fisttp
xchg
and
call
adc
je
loop
rol
adc
inc
mov
in
sbb
xchg
adc
jl
retf
mov
adc
mov
inc
stos
push
sbb
inc
pop
xor
ret
pop
and
(bad)
bound
mov
repnz
fnstenv
mov
cmps
mov
repnz
fwait
mov
int3
dec
sbb
out
fadd
adc
xor
cmp
lods
test
or
xor
hlt
outs
jle
xor
test
push
pop
push
pushf
xchg
call
sub
jl
shl
sub
or
xor
mov
push
loop
and
xchg
dec
dec
outs
jle
mov
call
push
sbb
push
in
in
cmc
aam
xor
xor
not
test
pop
jnp
mov
adc
jbe
retf
test
mov
inc
xchg
sub
adc
imul
lea
ds
arpl
mov
in
mov
mov
aas
(bad)
into
sbb
ror
jae
pop
cwde
adc
dec
in
sbb
repz
bound
out
push
out
and
push
retf
mov
pop
add
shr
cmps
call
mov
repnz
ins
movs
xor
js
mov
jo
out
mov
add
xchg
inc
aam
clc
sub
dec
adc
or
in
sti
mov
rol
retf
xchg
adc
js
mov
stos
(bad)
loope
pop
xor
mov
sbb
xor
push
or
in
add
push
sub
pop
jb
lea
stc
hlt
lea
add
cmp
js
sbb
inc
(bad)
sub
push
inc
cmps
fbld
push
loope
icebp
lea
shl
or
or
and
mov
lahf
rol
cmps
aas
xor
jbe
pop
mov
xchg
(bad)
aam
test
sub
test
xor
cmp
dec
retf
cmp
ins
mov
dec
mov
jge
push
push
push
in
pop
aad
sbb
mov
xchg
in
in
adc
movs
xchg
mov
add
rcr
rcl
mov
push
pop
inc
or
xchg
ret
hlt
cs
rol
push
mov
jmp
mov
inc
out
ret
scas
ins
sub
je
cs
sahf
into
xor
fidiv
int
push
xor
dec
mov
aas
sbb
out
loop
repnz
push
pop
or
mov
jg
les
retf
or
je
cdq
push
retf
xchg
mov
sbb
(bad)
int
sub
xor
jp
push
call
and
pcmpeqd
daa
(bad)
mov
jne
clc
retf
jbe
adc
aaa
jmp
dec
fs
outs
std
push
call
xor
clc
pop
and
push
push
and
or
pop
adc
adc
call
pop
xchg
lods
mov
test
scas
pop
inc
inc
sbb
sub
stc
mov
add
mov
js
int3
dec
and
jae
and
mov
mov
in
cmps
or
cmp
lds
rol
inc
jmp
or
loope
pop
jmp
fisttp
and
cld
sub
clc
mov
aaa
fnstenv
lea
stos
std
pop
pop
out
inc
jmp
iret
cmp
xchg
or
push
mov
push
in
dec
cdq
xchg
sub
aaa
jbe
xor
call
pushf
push
retf
scas
xlat
js
jle
cmp
mov
push
dec
inc
test
dec
xchg
jg
xchg
div
push
fwait
mov
jo
outs
dec
fcomi
cmp
mov
adc
outs
mov
fidiv
fcmovne
or
sbb
sbb
loope
jne
lahf
mov
cmp
out
push
lock
inc
xchg
push
push
popa
int3
shl
js
mov
cmp
movhps
xor
loope
dec
pop
es
ja
cmp
xchg
popa
rcl
jb
stos
jne
jo
call
loope
cmp
push
adc
mov
popa
(bad)
pushf
sbb
jo
xchg
push
or
nop
inc
sbb
xor
inc
push
mov
lds
imul
mov
pop
cmp
add
out
jl
ret
call
js
call
aad
mov
sti
mov
(bad)
cmps
repnz
lock
fmul
jecxz
xchg
add
call
dec
enter
iret
sub
add
push
mov
bound
cwde
iret
js
jno
push
imul
or
aaa
or
mov
mov
jns
sbb
cld
inc
stc
push
rcr
mov
out
fsubr
dec
sub
cmps
je
into
lock
nop
xor
jne
cli
mov
jle
pop
stos
add
push
cmc
mov
jns
cmp
(bad)
out
pop
lea
mov
in
int3
ror
repnz
sub
sub
lods
cmps
fstp
cmc
scas
and
cs
stos
and
mov
in
xor
fimul
xchg
or
aam
jge
inc
fs
jbe
dec
xor
stos
loopne
fist
(bad)
inc
fwait
popa
mov
and
sub
iret
push
xchg
xchg
mov
push
or
mov
arpl
pop
clc
fs
scas
stos
cmp
mov
xlat
cmc
loop
mov
in
ret
pop
pop
enter
cmps
push
pop
mov
nop
out
in
cdq
fsub
jno
fs
xor
xchg
rcr
repnz
jae
and
xchg
xor
sbb
sti
(bad)
(bad)
push
(bad)
sti
cmp
dec
mov
adc
aaa
push
sub
xchg
mov
jbe
inc
mov
xchg
cmp
pop
ror
xchg
int3
mov
enter
aad
inc
xor
nop
test
lds
mov
clc
mov
mov
push
jo
sub
push
dec
jo
rcr
mov
(bad)
lock
sbb
popa
pop
neg
mov
aas
jl
push
pop
inc
cmp
xchg
fs
fptan
prefetch
fwait
adc
pop
clc
aam
pop
repz
dec
sub
ins
jnp
mov
or
adc
jo
sub
inc
mul
pop
shl
sbb
lahf
jbe
xor
dec
dec
jmp
scas
lds
cmp
aaa
adc
jp
loope
mov
sbb
inc
fnstenv
aad
push
sub
or
loopne
ss
movs
in
inc
rol
dec
(bad)
loop
fild
ret
fidiv
mov
mov
mov
ja
or
cs
lahf
or
hlt
retf
jbe
aad
shl
ja
(bad)
jae
xor
es
inc
xor
ins
out
jae
dec
data16
or
lods
out
sahf
dec
cmp
fmul
fs
ret
lds
ror
sbb
dec
stc
sbb
pushf
push
cmp
addr16
fisttp
pop
add
loopne
imul
pusha
ds
and
into
cwde
leave
cmp
test
aad
mov
jg
jge
cli
out
and
mov
sub
std
add
mov
push
pop
mov
fld
cmp
push
xchg
imul
out
mov
in
jmp
pop
or
jae
xchg
push
or
push
out
push
fcom
ret
xchg
cmp
lods
cmp
push
outs
push
pop
dec
xchg
pop
inc
popa
xor
cmp
inc
cmp
add
or
xchg
mov
xchg
adc
dec
fisubr
jb
outs
or
out
in
jp
sbb
jae
or
push
inc
xor
cmp
inc
pop
xchg
inc
inc
int
dec
aam
scas
mov
jmp
xchg
scas
out
sbb
or
dec
(bad)
jmp
ret
out
inc
inc
cld
add
test
push
push
inc
add
mov
add
and
int3
hlt
clc
ins
je
mov
sbb
test
mov
ret
xchg
mov
pushf
int
pop
lods
mov
push
lahf
iret
pop
xchg
retf
mov
test
rcr
or
ins
mov
pusha
mov
sub
mov
xchg
int3
mov
inc
in
mov
cld
repz
shl
data16
add
dec
sbb
jae
aad
imul
sbb
inc
sbb
xor
xchg
mov
cli
and
ret
gs
and
rcl
push
fiadd
xchg
cmp
jl
(bad)
out
jecxz
retf
(bad)
cmc
mov
or
popf
mov
add
pop
nop
mov
ret
arpl
ins
out
dec
mov
push
adc
add
arpl
sbb
dec
aad
xor
(bad)
xor
cs
inc
push
jp
cs
aaa
inc
aaa
scas
sub
adc
xchg
scas
enter
shr
cmp
nop
ins
sub
mov
icebp
add
dec
push
in
jp
push
adc
iret
(bad)
stc
cmp
das
inc
pop
mov
inc
dec
xchg
dec
or
lods
fcomp
xchg
cmc
xchg
test
jle
xlat
xor
icebp
mov
call
jl
add
add
mov
aas
out
in
mov
scas
inc
jp
inc
pusha
ins
mov
call
sub
add
sbb
mov
jne
test
mov
imul
and
cli
dec
inc
mov
or
ss
fnstsw
(bad)
fwait
loopne
mov
inc
jp
cmp
test
fadd
sub
jb
pop
test
inc
inc
mov
pop
sbb
mov
xchg
inc
sahf
mov
push
xor
bound
jns
sbb
addr16
in
push
add
cmps
(bad)
mov
or
(bad)
jg
daa
adc
in
stos
pusha
test
in
scas
mov
divps
daa
fdiv
lods
push
imul
out
loope
adc
inc
fisttp
imul
or
xchg
mov
inc
test
fistp
inc
(bad)
xchg
inc
out
xchg
aaa
dec
movs
mov
dec
dec
sti
addr16
test
mov
shr
cmp
(bad)
push
out
les
int
pop
or
xor
int
xchg
pop
lea
jmp
xchg
mov
mov
inc
inc
inc
arpl
mov
aad
inc
clc
psubusb
adc
sahf
gs
pop
sbb
int
hlt
push
and
out
scas
std
mov
stos
repnz
outs
gs
(bad)
ds
addr16
xor
xchg
sbb
cmps
and
ins
pop
push
xor
aaa
sbb
jns
and
mov
mov
pop
sar
sbb
add
stos
adc
mov
sub
jle
js
loopne
stos
sub
inc
dec
pop
or
pop
push
mov
ror
pushf
fwait
cmps
pusha
imul
retf
ret
mov
shr
or
sbb
sub
push
test
dec
inc
cmp
arpl
js
or
cmps
test
fbld
ret
pop
push
xor
cmp
in
(bad)
jp
cmp
ret
stos
lds
(bad)
jb
mov
xor
fadd
mov
mov
cmp
out
pop
inc
cmp
test
or
lods
fcomp
mov
push
mov
scas
in
pop
mov
test
lock
in
jmp
dec
dec
stos
sub
loope
je
pop
xchg
or
push
not
inc
retf
push
adc
dec
jns
test
fmulp
shr
iret
pop
in
pop
pop
cmc
pop
fnsave
push
pushf
ss
repnz
pop
jbe
int
xchg
bound
cli
jo
sbb
mov
test
add
adc
enter
movs
std
ss
or
std
stos
fisubr
aam
cmp
fmul
xor
sahf
mov
push
cmp
imul
sub
or
sub
pop
into
call
inc
fstp
imul
add
std
push
ss
xchg
dec
ja
arpl
xlat
loope
shl
outs
stos
pop
sbb
daa
shl
mov
and
xor
mov
or
inc
push
mov
cmp
mov
into
lds
paddq
add
cmp
and
lock
xor
jmp
rcr
push
cmps
out
ins
xlat
pop
push
cmp
sub
daa
gs
adc
lock
and
cmps
mov
in
inc
aad
inc
out
xchg
or
inc
(bad)
test
dec
add
jmp
dec
(bad)
ss
fisubr
lds
mov
sub
and
or
js
adc
cs
pushf
cmps
in
mov
adc
ret
mov
inc
ret
lods
pop
fs
push
psubsw
jne
cmp
test
mov
test
jge
or
or
xor
ins
cmp
sbb
fdivr
sbb
addr16
lahf
repz
add
push
sbb
push
ins
and
xlat
out
cwde
push
nop
cmp
dec
mov
push
jle
clc
shl
xor
or
sbb
rol
(bad)
mov
mov
cmc
es
in
pop
cmps
mov
rol
inc
or
push
sbb
ins
jne
pop
mov
loope
dec
int
mov
fmul
xchg
pushf
arpl
jne
hlt
xchg
hlt
xchg
mov
dec
cmps
shr
stc
jbe
pushf
or
sbb
pop
je
cmp
ins
gs
mov
icebp
call
leave
push
pop
adc
sbb
cmps
adc
inc
xchg
fs
(bad)
int
cmp
pop
mov
ror
mov
push
xchg
scas
mov
jne
push
addr16
jns
into
(bad)
and
in
pop
jmp
sti
xchg
lock
xor
ins
pop
push
add
cmps
or
xchg
cs
xchg
lahf
cmp
cmps
cli
or
mov
test
xchg
jmp
les
push
stc
lds
and
loopne
mul
mov
leave
div
mov
mov
div
pop
pop
out
(bad)
retf
aam
rcl
mov
add
xchg
fnstenv
xchg
(bad)
mov
dec
or
shr
and
xchg
test
add
dec
mov
jmp
dec
pop
lods
outs
xchg
mov
adc
enter
xchg
mov
popa
inc
push
inc
fcmovne
mov
push
pop
sti
xor
call
push
cmp
jne
xor
jb
xor
jp
xchg
test
jl
push
data16
push
jg
loopne
xchg
test
outs
call
aaa
fmul
cmp
aas
lods
or
inc
idiv
das
jnp
(bad)
mov
or
xchg
fs
daa
cmp
out
jecxz
jnp
mov
test
and
dec
lods
icebp
cdq
mov
shr
sbb
(bad)
cld
xchg
test
sbb
cmps
and
xor
sbb
sbb
pop
popf
mov
sar
jg
or
out
xchg
cmp
or
stc
sar
pop
pop
jmp
idiv
xor
loop
dec
cmp
imul
jb
fidivr
xchg
loop
pop
mov
and
lods
cmc
daa
lds
pop
iret
jns
sar
out
and
push
out
pop
stc
mov
cmps
movs
mov
push
pop
outs
shl
lock
jne
cmps
leave
sbb
push
xchg
lds
popf
call
inc
cdq
int
sbb
les
adc
jmp
jne
rcl
fisub
loopne
jg
push
imul
cmps
cmc
cmp
dec
inc
ja
push
rcr
jge
inc
cs
jecxz
push
fxtract
dec
ror
sbb
push
add
test
mov
fucom
(bad)
hlt
dec
imul
in
sbb
adc
mov
in
push
je
inc
(bad)
adc
mov
add
sub
clc
std
jge
nop
push
cmp
mov
aaa
js
fwait
push
mov
sub
bound
add
adc
lahf
sub
xor
or
cmp
fld
cs
dec
adc
mov
aad
push
mov
adc
mov
mov
sbb
mov
xor
popa
cmp
sub
mov
push
leave
out
xchg
cld
jo
shr
mov
xchg
dec
or
dec
add
loope
push
(bad)
imul
xchg
mov
mov
inc
retf
inc
mov
ss
mov
sbb
stc
inc
cwde
or
mov
ret
push
inc
mov
xchg
xlat
call
and
xor
push
xchg
not
mov
loopne
mov
test
or
jae
jno
push
sar
cmp
xchg
in
xor
shr
pop
xchg
mov
addr16
inc
test
jns
data16
pop
xor
movs
lahf
test
pop
imul
bound
or
dec
sbb
je
in
lods
mov
sub
jnp
and
lahf
sub
push
mov
mov
sbb
or
xor
repnz
fadd
adc
inc
aaa
clc
push
ret
data16
inc
sbb
shl
or
in
and
add
mov
js
icebp
push
hlt
aam
jo
movs
cdq
jno
call
adc
sbb
pop
xor
xchg
xor
retf
push
lods
mov
sahf
add
stos
mov
pushf
mov
sub
nop
sub
test
sub
dec
cld
and
xchg
sbb
xor
inc
int
add
fild
in
fnstcw
sahf
std
ins
push
pop
ret
xor
mov
cmp
xchg
xchg
bound
inc
sub
mov
(bad)
ins
push
jnp
adc
cmp
push
dec
bound
xor
ret
outs
ret
enter
mov
adc
(bad)
jne
iret
lods
ret
ins
iret
mov
cmp
xchg
mov
aas
mov
ds
inc
lock
lahf
dec
in
dec
loop
xor
adc
ror
iret
push
sbb
xor
xor
dec
dec
cmp
mov
movs
jg
sbb
fild
imul
popf
aas
sbb
adc
leave
loopne
ds
pop
xchg
mov
jmp
in
pop
outs
sub
and
push
add
cmp
adc
popa
jns
call
sub
xor
sbb
jne
cmp
imul
mov
aas
sbb
and
ss
pop
pop
fisub
cmp
outs
dec
cdq
fcomp
out
and
xchg
adc
out
dec
js
loopne
mov
dec
test
adc
test
mov
cmp
jle
fcomp
int3
lds
push
vpsllq
sbb
jae
mov
pop
mov
push
popa
inc
mov
in
pop
sub
cli
dec
or
mov
scas
nop
or
in
cmp
popa
ja
xlat
loop
xor
sub
xor
dec
push
pusha
xchg
jb
or
xchg
popa
in
mov
jecxz
imul
arpl
in
nop
test
icebp
ins
imul
sti
jo
es
or
adc
sbb
push
or
xchg
dec
inc
cmp
ret
or
inc
mov
int3
aam
jge
test
mov
mov
stc
xor
push
call
add
std
repnz
ror
fs
ins
jnp
sub
xor
pop
shl
arpl
aaa
sub
mov
fld
inc
pop
loopne
lahf
dec
xchg
popa
push
call
fdivrp
enter
xchg
pop
popa
sub
xlat
repnz
sbb
pop
inc
pop
mov
jmp
out
jle
fist
daa
std
stc
(bad)
jo
dec
pop
add
pop
jmp
xchg
dec
iret
xor
sbb
sbb
push
sahf
adc
movs
push
add
(bad)
lea
mov
pop
push
dec
xor
jp
jecxz
sub
push
xchg
fsub
xchg
sub
sub
pop
in
lods
popf
outs
retf
dec
xchg
retf
jns
mov
lds
xlat
add
xchg
pop
or
pop
shr
jns
push
mov
add
mov
hlt
loope
xchg
pop
mov
sar
addr16
fsub
lahf
add
push
jbe
and
push
adc
adc
pop
call
in
outs
test
or
fwait
fs
cwde
fisubr
loope
movs
jecxz
jo
fwait
lock
jne
sub
xchg
mov
enter
clc
leave
cmp
jbe
or
inc
cmps
mov
pop
pop
push
adc
int
shl
or
push
loop
or
ds
cmp
imul
aas
cld
mov
ins
fnstsw
test
and
jae
sub
pop
sub
adc
adc
call
int3
inc
bound
xchg
cmp
rol
mov
outs
push
jecxz
repz
test
jl
mov
loopne
mov
mov
inc
fs
jae
ins
mov
movs
jg
jmp
inc
adc
sub
mov
inc
inc
xor
add
add
push
pop
inc
mov
fsubr
fisttp
cmp
push
cmp
(bad)
sahf
movs
in
and
in
jle
clc
fadd
mov
mov
xchg
xor
int
inc
retf
cmp
mov
sub
sub
mov
ss
rcr
jmp
movs
outs
push
and
dec
pushf
enter
cmp
retf
pop
mov
jge
xor
movs
cmps
outs
repnz
sahf
stc
jnp
lea
jl
out
call
loope
add
jno
aaa
dec
xchg
add
mov
aad
call
ss
mov
adc
push
push
shl
fbld
fsub
pop
int
mov
pop
call
sbb
fstp
or
cmp
mov
xchg
fstp
sar
fcomp
scas
xchg
pusha
xchg
pop
or
sub
push
mov
or
mov
add
(bad)
and
arpl
rcl
aad
ja
test
outs
nop
push
pop
movs
xchg
call
pop
ja
sub
push
dec
jge
xor
fdivr
and
mov
movs
out
xor
mov
jp
test
sbb
and
fmul
ss
dec
mov
psadbw
mov
dec
cmps
shl
cdq
add
xchg
imul
clc
shl
mov
xchg
call
gs
loopne
add
mov
xchg
xchg
push
in
cmps
int
shl
icebp
into
(bad)
xor
mov
jb
pop
push
pusha
pop
hlt
(bad)
les
fisub
gs
shr
sub
ja
retf
cwde
inc
repz
xor
aad
push
sub
pop
mov
or
outs
(bad)
sub
xor
or
fsub
jno
int3
mov
ds
out
leave
loopne
sar
clc
push
jbe
ret
mov
push
and
sbb
sbb
or
xor
in
mov
sub
rol
gs
cmp
pop
outs
mov
scas
lock
xor
jl
sbb
cmps
or
jne
inc
mov
in
mov
ja
sub
push
mov
fsub
jmp
push
adc
ja
push
push
jmp
in
movs
jnp
inc
je
fs
mov
and
pushf
pop
pop
dec
xor
and
repnz
push
dec
mov
ds
push
fs
mov
in
ret
sar
mov
sbb
imul
mov
lock
dec
ror
dec
int3
jmp
sub
test
xchg
sub
lahf
sub
lea
mov
or
inc
sub
call
call
cwde
(bad)
sub
and
les
sar
dec
ror
or
cmps
fucomp
pop
es
fbstp
rcl
pop
es
pop
and
adc
or
lds
leave
jle
mov
mov
ja
push
dec
sahf
push
test
or
sbb
add
icebp
(bad)
mov
out
mov
das
xchg
das
push
test
inc
dec
fistp
in
sub
mov
sbb
cmp
call
call
adc
sbb
lds
mov
adc
xor
push
xor
ret
jge
and
push
jns
out
push
mov
xchg
xlat
adc
mov
aas
jo
fsub
xchg
add
icebp
mov
in
cld
mov
jg
cmp
ficomp
mov
sahf
jecxz
sub
cmc
add
add
push
mov
push
popa
or
leave
cmp
cdq
test
push
ins
push
mov
cmp
les
in
sbb
fisubr
mov
mov
movs
sbb
in
or
repnz
inc
(bad)
mov
in
int
or
(bad)
push
adc
ret
retf
ffree
imul
xchg
addr16
sbb
xchg
push
dec
cdq
sar
cli
stos
or
lock
pushf
pop
(bad)
push
push
out
pop
(bad)
push
sub
or
mov
js
sbb
out
push
push
in
(bad)
jo
mov
sbb
sub
push
fimul
inc
cmp
imul
lahf
mov
pop
mov
mov
and
or
xor
data16
in
pop
std
outs
adc
test
fcmovnu
jle
xchg
cld
sub
or
out
dec
outs
stos
inc
push
cmp
shl
inc
fsub
leave
cmp
ja
cdq
outs
test
pop
ins
in
js
add
in
xchg
fcomp
cmc
outs
sub
mov
fwait
aaa
popf
sub
cmc
xchg
js
scas
es
hlt
sub
add
mov
les
mov
std
popa
mov
outs
dec
mov
push
test
sub
(bad)
mov
mov
add
xor
pop
fs
call
(bad)
sbb
mov
fisttp
dec
imul
xor
mov
lahf
mov
lahf
mov
jg
pop
jae
pop
xor
in
xchg
add
adc
fwait
push
push
xor
mov
jl
scas
out
push
test
pusha
push
mov
sub
xor
jno
or
mov
and
popa
jmp
fsub
xor
jmp
jns
mov
fs
dec
out
int3
push
mov
mov
xlat
inc
cmp
shl
dec
pop
stc
rcr
jg
pop
and
lds
mov
sub
repnz
dec
stos
adc
aam
arpl
dec
push
outs
sbb
sbb
fiadd
mov
test
xor
jae
inc
mov
jg
pop
cli
retf
in
jge
mov
push
push
xchg
inc
jmp
jg
xchg
repz
add
adc
lods
ins
jnp
dec
jae
sub
jo
xchg
mov
lds
pop
xchg
fmul
add
in
jge
(bad)
push
jns
add
jge
fild
add
inc
mov
cmp
aad
outs
cmc
jo
mov
jbe
adc
add
test
inc
dec
(bad)
mov
push
pop
cmp
add
xchg
imul
and
lods
mov
or
jo
fistp
sub
repnz
rcr
mov
inc
xchg
adc
lea
jl
jne
cmps
sbb
sti
push
ja
push
iret
pop
or
lods
inc
jge
mov
and
push
add
xchg
call
aaa
(bad)
pop
ror
mov
ret
int
pop
hlt
xlat
outs
ja
and
enter
mov
dec
pop
sar
mov
mov
mov
adc
push
mov
xchg
ret
push
fwait
add
mov
cmp
xor
sub
mov
shl
pushf
adc
cmp
stc
push
jno
xchg
and
xchg
sub
movs
cs
xchg
xchg
mov
and
and
xor
sbb
pop
jp
aad
jb
sbb
dec
daa
dec
sar
jno
aam
sar
and
mov
jmp
shr
ret
stos
iret
data16
stc
sub
cmp
jmp
movs
invd
cmp
sbb
jecxz
xor
xchg
mov
sahf
mov
ret
inc
push
xor
dec
inc
(bad)
inc
mov
movs
mov
ret
pop
out
push
aad
int
sbb
xchg
pop
outs
pusha
stc
stos
add
mov
int3
cmp
(bad)
sti
mov
jmp
and
push
add
(bad)
call
cs
and
mov
aaa
sti
int
or
mov
ja
das
adc
into
cmp
or
in
cli
jno
sbb
repnz
call
fld
aam
(bad)
and
das
jo
mov
adc
iret
loopne
sahf
and
mov
pop
in
neg
sbb
jl
mov
pop
imul
sub
pop
repz
pop
in
outs
dec
xchg
test
test
jl
add
js
mov
xchg
loop
mov
fld
lahf
ins
retf
jle
neg
jno
arpl
(bad)
shl
enter
dec
xchg
cs
jbe
cmp
call
xor
mov
sbb
cmps
inc
cld
xchg
aam
int
jecxz
test
mov
sbb
js
mov
fcomp
aam
cli
je
mov
jp
sbb
in
retf
jmp
shr
push
push
mov
test
mov
mov
xchg
sub
sub
pop
jmp
mov
ret
fadd
push
adc
mov
or
repnz
and
fcmovbe
test
sbb
aam
mov
fsub
xchg
adc
test
call
mov
enter
out
fwait
and
mov
(bad)
jecxz
mov
pop
mov
mov
mov
xor
add
jo
addr16
lods
sbb
push
cli
inc
and
in
nop
or
xor
mov
or
rcr
cli
enter
add
or
es
test
dec
js
inc
in
test
sub
hlt
xor
xchg
stos
pop
pop
pop
data16
or
adc
ret
rcr
mov
xor
mov
mov
pop
pop
dec
lea
scas
je
fs
mov
ficom
rol
scas
adc
cmp
mov
and
leave
push
push
out
lods
mov
sub
pushf
sub
icebp
data16
sar
mov
dec
cmp
xchg
xor
les
dec
push
dec
jno
es
jae
xor
jns
push
mov
cli
pop
ficom
or
fstp
ja
std
mov
or
and
pop
mov
nop
pop
mov
dec
cmp
or
cmp
loope
test
and
xor
adc
push
out
daa
push
mov
movs
add
and
je
inc
jmp
inc
push
dec
xchg
pusha
xchg
mov
lahf
jmp
repz
jge
ret
shl
pop
aam
adc
mov
test
adc
scas
ins
pop
lods
inc
push
shl
or
rol
ret
out
lods
test
adc
retf
inc
inc
sub
jmp
mov
pop
pop
aad
xchg
sub
sbb
jb
jmp
fdivr
inc
push
je
and
xor
aam
test
push
mov
arpl
sti
sub
dec
jg
retf
bound
test
sub
dec
mov
mov
sub
(bad)
in
mov
push
adc
push
into
mov
jecxz
mov
pop
test
imul
cmp
adc
inc
lods
and
adc
pop
mov
mov
outs
fcmovnbe
mov
test
mov
cmps
add
out
mov
mov
mov
mov
and
fsubr
in
jmp
and
adc
pop
fstp
xchg
or
retf
loop
add
ins
enter
mov
stc
sbb
xchg
es
inc
retf
push
sub
sbb
dec
sbb
push
or
outs
aam
(bad)
sahf
mov
sbb
in
aam
nop
mov
fwait
sbb
sbb
mov
fcmovu
xor
or
bound
or
(bad)
int
out
pop
xor
xchg
lahf
cmp
inc
add
pop
std
xchg
inc
shl
lock
pop
pop
jecxz
cmp
lahf
jge
lock
jle
(bad)
cmps
ja
xchg
je
test
jnp
ins
jecxz
xchg
sub
add
cmp
mov
out
out
jnp
pop
ins
jnp
mov
cmp
int3
cli
xchg
dec
icebp
hlt
mov
(bad)
fnstenv
popa
call
sbb
dec
out
mov
jg
cmp
fstp
push
sbb
pop
jae
ds
call
jmp
shr
adc
lds
adc
mov
mov
mov
imul
in
inc
call
loope
mov
push
mov
and
lock
out
out
fnsave
jo
and
movs
out
data16
dec
test
pop
xchg
les
push
cmp
arpl
or
xchg
adc
and
push
jbe
inc
arpl
js
dec
push
mov
mov
sbb
call
mov
inc
or
popf
mov
or
push
clc
mov
xchg
push
arpl
push
(bad)
jmp
pop
or
cmp
adc
cmc
jecxz
mov
sbb
sub
sbb
xor
cli
cmc
cld
in
xchg
leave
fistp
aad
push
imul
aas
fidiv
push
loopne
fisubr
jne
push
dec
sar
call
add
out
jmp
call
xchg
mov
aad
xchg
or
movs
bound
dec
push
jno
pop
adc
in
(bad)
push
fldenv
movs
and
iret
out
sub
addr16
sahf
mov
add
call
arpl
pop
and
aaa
ins
add
xchg
stos
sbb
cdq
pop
lods
aam
call
mov
sbb
retf
movs
push
das
fiadd
ror
aas
pop
adc
sub
sbb
and
out
sbb
pop
adc
adc
pop
xchg
cmp
jmp
xchg
xchg
xor
mov
jl
sub
push
cmp
mov
psubusw
push
or
add
ja
daa
in
sbb
cmps
(bad)
sbb
xchg
iret
mov
mov
fnstsw
dec
xor
data16
popa
ins
sub
xchg
pop
or
inc
and
jmp
psubq
push
xchg
lds
movs
sbb
add
mov
adc
mov
leave
call
mov
mov
push
out
test
ins
adc
dec
dec
jmp
test
scas
cmc
lock
es
ins
pop
push
bound
aad
sbb
push
xor
add
nop
pop
push
outs
stc
sbb
fadd
xchg
sbb
cwde
jo
fist
retf
fdivr
(bad)
mov
rol
in
xor
imul
inc
lock
cld
pushf
iret
(bad)
cmp
mov
dec
mov
stos
int3
cmp
outs
mov
jge
ret
add
add
add
adc
popf
and
xor
jno
mov
out
cdq
test
call
xlat
pop
and
add
inc
mov
fcomi
arpl
add
push
inc
fisub
in
jle
push
ja
ds
out
adc
mov
mov
in
mov
mov
pushf
jne
xchg
sub
in
mov
inc
repz
mov
or
out
rcl
jg
dec
sbb
fcomip
daa
xchg
mov
mov
and
out
ret
mov
in
push
iret
sahf
sahf
mov
inc
(bad)
aaa
(bad)
sbb
aam
dec
sub
pop
add
sti
shr
out
jnp
daa
out
push
repnz
adc
mov
aad
xor
xlat
xor
adc
rcl
mov
jne
ds
fisttp
push
and
scas
xchg
inc
(bad)
(bad)
xchg
int
lahf
(bad)
sti
mov
inc
retf
movs
xor
ja
jb
dec
fnsave
mov
aaa
ins
sub
inc
xchg
and
outs
inc
jno
ror
jmp
out
std
mov
or
(bad)
sar
test
movs
loopne
xchg
cs
xchg
clc
les
xchg
(bad)
xchg
push
imul
sbb
jnp
bound
icebp
out
mov
add
sbb
in
movs
and
push
xor
dec
stc
add
pop
sti
jnp
fwait
mov
ins
cdq
sbb
repnz
(bad)
icebp
mov
sbb
push
jne
mov
outs
xchg
lahf
sbb
scas
jbe
xchg
ficomp
pop
sub
add
push
data16
retf
outs
inc
cmp
mov
xchg
(bad)
mov
jbe
outs
(bad)
sub
cs
cs
call
or
push
mov
dec
ret
push
aaa
add
fistp
(bad)
stc
jno
fnstenv
mov
mov
mov
mov
push
adc
xor
mov
(bad)
mov
cmp
dec
cmc
into
sbb
mov
sub
xchg
cmps
stos
lods
popf
ins
mov
jecxz
rol
xchg
mov
(bad)
sbb
out
fidiv
gs
aas
lds
add
cld
(bad)
adc
inc
fstp
ins
scas
scas
mov
xchg
lahf
mov
sar
pusha
sti
jp
repnz
cmp
cmp
arpl
dec
add
or
push
enter
cmp
cmps
push
mov
pushf
jbe
ret
sbb
clc
push
(bad)
arpl
mov
js
and
mov
sub
inc
push
mov
dec
mov
jbe
fwait
mov
shl
leave
or
xor
cmp
xor
xchg
dec
jbe
jl
arpl
ds
loope
push
repz
mov
sub
lds
sbb
out
sbb
dec
stc
jbe
es
jns
jmp
add
or
adc
sbb
repnz
sub
inc
push
inc
and
inc
sahf
cmp
push
call
scas
cmps
in
mov
push
sub
into
movs
shl
cmp
mov
fdiv
jo
xchg
pop
mov
jno
jecxz
push
das
aad
(bad)
mov
in
jge
aaa
hlt
xchg
paddsw
jb
cmps
cs
adc
dec
int3
icebp
xchg
dec
cmp
leave
in
or
fcmovnu
mov
in
push
arpl
(bad)
sti
xor
sbb
fwait
test
dec
dec
stc
call
xor
shl
or
mov
pushf
inc
push
xor
(bad)
add
push
out
sub
mov
rcr
jb
rcl
push
and
pushf
(bad)
repz
sub
rcl
push
mov
ret
rcl
pop
and
mov
scas
fldcw
je
xchg
inc
enter
dec
add
call
rcr
mov
cs
stc
cli
sar
mov
xor
push
movs
xchg
jns
add
cli
pop
sbb
cmp
push
sub
push
retf
mov
xor
pop
jne
or
push
push
sub
jb
pop
ret
lock
inc
arpl
cmp
retf
adc
scas
mov
mov
or
fbld
(bad)
dec
inc
retf
fsubr
and
push
mov
xchg
in
fist
rep
fadd
in
xor
in
int3
add
enter
das
sbb
jmp
(bad)
test
repnz
inc
adc
sub
or
fsubrp
test
xchg
xor
pop
out
popf
cmc
aas
mov
sbb
test
cmc
(bad)
lea
pop
push
push
cmp
inc
or
retf
mov
(bad)
nop
jnp
sub
mov
jp
fimul
or
dec
retf
mov
push
in
scas
nop
cmp
in
mov
(bad)
mov
adc
push
repz
popf
xchg
aaa
and
and
gs
push
inc
sbb
jb
cwde
fidivr
repz
fs
mov
fidivr
add
stos
mov
sub
loop
call
nop
sbb
dec
in
jg
push
mov
sub
lea
shl
aaa
imul
adc
sub
movs
clc
mov
in
pop
push
rol
push
lods
imul
leave
sub
and
sbb
enter
loop
mov
push
cmp
movs
jne
mov
xchg
cld
ja
sub
sub
mov
mov
push
cli
jp
clc
call
(bad)
pusha
arpl
test
push
icebp
das
fmul
gs
pop
lea
push
fst
mov
pop
sub
cmps
fimul
dec
dec
out
scas
cmc
shr
ret
out
mov
mov
pop
mov
(bad)
pop
pop
sahf
int3
jl
jg
leave
int3
mov
cmp
pop
or
retf
jb
push
xchg
lock
in
cmc
push
rcr
pop
xor
mov
sub
pop
pop
sub
in
loop
(bad)
shr
ds
fcomp
sub
sahf
scas
fisubr
call
repz
stos
sub
out
aaa
add
je
outs
loope
push
shl
scas
int
xchg
pop
add
pop
ss
push
je
aam
cwde
pop
lds
inc
js
jle
outs
in
dec
inc
cwd
sbb
outs
mov
ja
or
test
pushf
fdivr
sbb
repz
add
mov
jne
jp
into
mov
mov
adc
mov
(bad)
loopne
fcomp
xor
scas
pusha
jno
repz
jmp
repnz
sub
cmps
aad
(bad)
dec
stos
ds
cmp
jge
pop
xor
add
mov
fistp
iret
push
cmp
jmp
imul
fwait
mov
pushf
and
xchg
push
pushf
mov
loopne
imul
cmp
dec
sub
and
retf
jb
inc
repnz
jne
daa
loope
dec
adc
or
leave
in
imul
mov
mov
out
mov
std
xchg
rcr
pushf
xchg
dec
and
fs
and
adc
scas
cld
add
sub
fadd
leave
adc
sti
jnp
pop
xor
xchg
shl
mov
scas
or
pop
cwde
test
pop
fdivr
pop
test
popfw
or
shr
aam
xor
mov
shl
ret
mov
fnstenv
dec
(bad)
cwde
mov
xor
jno
(bad)
jg
push
paddsw
pop
push
mov
xor
mov
xchg
popf
xchg
push
ins
or
xor
in
mov
sar
adc
cli
jne
hlt
mov
pop
fmul
into
rol
sbb
call
cmp
ja
mov
cmp
add
mov
cdq
mov
cmp
jp
retf
int
ret
xchg
rcr
jp
mov
push
inc
mov
push
(bad)
dec
fild
adc
pop
jno
add
push
pop
mov
push
push
mov
xor
stc
call
sar
jmp
sub
fld
cmc
sub
jl
inc
mov
and
pop
ret
test
dec
in
adc
inc
dec
pop
gs
or
aaa
pop
sbb
inc
pop
mov
lahf
sbb
xchg
sub
pop
sub
rcr
das
mov
data16
sub
jne
sahf
daa
dec
xor
lods
dec
mov
sbb
imul
scas
out
mov
loop
shl
out
clc
int3
ds
in
mov
cdq
pop
ret
xchg
cmps
jmp
push
jecxz
lds
repz
pop
mov
pop
fwait
mov
pop
or
aas
mov
test
iret
mov
dec
fstp
xor
aas
gs
jnp
mov
push
lods
out
xchg
sahf
sub
scas
sbb
cmp
jl
mov
cvtpi2ps
sbb
pop
or
inc
cmp
arpl
out
fwait
les
(bad)
fild
or
int
enter
dec
jae
jmp
and
push
adc
fwait
or
sub
add
fxch
mov
pop
sub
pop
or
lods
movs
test
test
add
fistp
loope
add
inc
dec
dec
cmps
jno
add
mov
mov
pop
int
dec
cmp
gs
pop
test
inc
xlat
push
jp
sub
add
add
call
nop
fbstp
and
cdq
in
sbb
sub
jne
bound
test
outs
add
data16
xchg
test
jb
cmp
aam
ret
xchg
clc
sub
ror
fld
sti
ins
call
pop
adc
pop
jbe
or
loopne
mov
cmc
jmp
jmp
scas
data16
scas
ret
push
mov
aam
aaa
stos
shr
mov
pop
add
retf
loope
push
int
jmp
repnz
addr16
cld
repz
jge
mov
mov
pop
xchg
aaa
dec
imul
sub
ds
test
fisttp
dec
sub
cdq
push
mov
or
inc
mov
dec
mov
inc
inc
repz
cli
loope
dec
push
imul
fsubr
shl
mov
ds
mov
test
es
sub
lahf
out
add
(bad)
js
in
into
pop
xor
sbb
retf
mov
jne
dec
fcomp
push
mov
mov
sbb
neg
xor
mov
mov
movs
mov
jno
jge
idiv
xor
jmp
es
out
adc
popf
jl
mov
mov
cmc
and
lahf
addr16
repnz
jecxz
call
loopne
xchg
rcr
cmp
fld
jle
mov
cmps
call
ins
xor
adc
out
cmps
xor
sbb
lods
scas
add
or
add
xor
jl
mov
and
pop
cmp
loope
das
jb
stos
pop
sti
push
shl
mov
iret
inc
dec
cdq
lods
mov
fdiv
push
push
lods
fsub
into
sbb
rcr
xchg
jmp
pop
enter
stos
pop
xor
lods
test
or
cmps
mov
push
cmp
leave
test
cdq
add
xchg
mov
pop
xchg
and
ja
push
cmp
dec
out
shl
mov
inc
es
popf
ror
mov
lahf
mov
popf
add
jns
out
and
pop
maskmovq
mul
outs
popa
outs
sbb
test
cmp
sub
pop
push
jns
cmp
add
mov
sbb
jle
ds
sub
leave
push
repnz
imul
adc
test
hlt
pop
adc
lock
mov
ret
mov
mov
ss
xchg
movs
stos
loope
sbb
xchg
jnp
mov
aas
pop
adc
mov
mov
or
sti
cmp
cld
push
and
rcr
enter
pusha
sbb
std
jbe
ja
fist
movs
xor
lods
mov
push
jle
ins
fist
popa
and
dec
addr16
xor
lock
jecxz
nop
cld
fst
aam
pop
mov
mov
jnp
pop
mov
out
fbstp
ins
cli
push
cmp
push
sub
dec
jne
xlat
inc
cs
jae
mov
leave
call
sbb
(bad)
(bad)
in
cmp
fdivr
xor
inc
pusha
movs
test
hlt
cld
inc
mov
sti
mov
leave
fldenv
fild
pop
lods
dec
fsubp
cs
add
adc
adc
rcl
jmp
dec
stos
lods
ror
iret
retf
push
mov
mov
aaa
retf
sub
adc
fwait
xchg
xor
cdq
fidivr
int3
push
test
(bad)
lods
in
push
cld
and
push
mov
je
xchg
ja
je
push
stc
adc
cld
and
(bad)
loopne
iret
jmp
inc
xchg
loopne
aad
in
mul
push
xor
dec
dec
mov
out
scas
inc
xor
lahf
mov
sahf
sti
ins
mov
outs
jne
xchg
dec
sbb
xor
dec
fcomp
imul
add
jmp
test
push
xchg
sub
jecxz
and
mov
test
add
bound
push
sbb
scas
or
inc
mov
sar
push
or
push
dec
hlt
xchg
sub
pop
imul
bound
pop
sub
inc
mov
xchg
adc
vandps
mov
dec
lods
push
pop
dec
inc
rol
push
cwde
jmp
cmp
shl
ret
push
sub
inc
sbb
adc
cmc
sti
adc
push
jbe
jns
cmp
in
or
loop
jo
imul
push
data16
aam
retf
ins
mov
pop
ins
pop
fadd
imul
pop
cmp
enter
call
loopne
push
ins
inc
loopne
mov
sbb
sbb
fild
adc
cmp
addr16
lahf
mov
outs
push
jno
repnz
hlt
sub
inc
push
push
mov
dec
icebp
cmp
mov
push
xor
xchg
add
cmp
push
retf
dec
sbb
inc
inc
add
mov
mov
push
test
aad
and
jge
jge
pop
bound
fstp
add
retf
rcl
jno
fbstp
not
jg
add
dec
lods
aad
cmp
mov
inc
mov
aaa
fmul
mov
mov
hlt
outs
outs
movs
push
es
nop
and
dec
scas
ret
cmp
cs
int3
cmp
jmp
movs
call
test
and
jae
jmp
je
cs
and
jb
in
mov
int
xchg
fwait
ret
fld
xor
inc
jno
ja
es
pop
sub
jb
retf
and
aad
movs
aaa
adc
xor
inc
adc
loop
lods
rcr
fst
jle
aaa
int3
jle
mov
xchg
pushf
jno
int
ret
fnstsw
add
lahf
dec
addr16
(bad)
jmp
inc
jns
in
scas
add
in
ss
xor
(bad)
popa
dec
xchg
mov
adc
inc
or
(bad)
je
jp
das
ja
add
cmp
sbb
cmp
popa
out
sbb
out
mov
xchg
jmp
lods
inc
pop
test
daa
adc
xchg
fidivr
dec
add
mov
xchg
test
out
addr16
ror
mov
sub
test
fisubr
aad
rcr
lods
push
in
nop
into
adc
sbb
mov
sbb
jmp
aaa
dec
push
push
xchg
sbb
ds
xlat
test
dec
sub
leave
or
xor
in
xor
cmp
test
ret
sbb
imul
test
mov
adc
js
(bad)
dec
jp
call
mov
inc
ins
jae
ret
dec
loope
sbb
sbb
in
sub
adc
das
push
mov
lea
cmp
(bad)
jmp
repz
push
sahf
inc
xlat
repnz
sar
cmps
jb
lea
je
in
repz
jmp
adc
shl
push
dec
pop
test
dec
or
ins
cmp
cmovb
sbb
xchg
neg
push
fs
ss
stos
ror
pop
out
(bad)
call
out
lock
sub
mov
je
stos
scas
fnstenv
lahf
adc
int
xchg
push
jl
lds
mov
xchg
lahf
jnp
cld
retf
and
call
das
(bad)
and
jge
sub
and
inc
jnp
push
leave
data16
and
out
aad
pop
mov
cmp
dec
ds
jmp
jne
ja
cmp
adc
and
sbb
lods
or
mov
nop
mov
sub
and
sub
mov
dec
loopne
test
mov
test
or
push
stos
test
push
mov
std
add
imul
mov
push
out
jb
mov
(bad)
fstp
fldenv
pop
mov
or
and
and
test
rcl
xchg
scas
cmp
sahf
or
mov
xchg
imul
jmp
mov
inc
dec
mov
cmp
and
lods
iret
in
or
loopne
cmp
mov
test
aaa
mov
das
test
lahf
inc
gs
out
xor
ds
and
push
or
jae
(bad)
cli
dec
fist
bound
mov
pop
adc
and
clc
test
enter
rcl
dec
adc
jmp
mov
call
ret
push
sub
lds
call
mov
pop
cmp
ja
cmc
jae
shr
mov
in
dec
out
xor
clc
cs
fs
sub
mov
jecxz
jecxz
adc
popf
mov
(bad)
fincstp
retf
in
outs
(bad)
adc
pop
pop
add
shl
lahf
push
test
scas
leave
mov
pop
jp
rcr
sbb
out
outs
xchg
sbb
cmp
ja
cs
imul
add
pop
packssdw
or
cmps
imul
jle
call
out
div
sub
fcomp
mov
mov
mov
(bad)
jecxz
sbb
mov
bound
neg
in
adc
jg
rol
rcr
outs
mov
loop
in
cmps
cmc
neg
mov
pop
stos
jno
js
(bad)
(bad)
(bad)
mov
push
sub
pop
xchg
sub
adc
mov
(bad)
scas
dec
(bad)
sbb
mov
xor
out
sbb
sub
mov
nop
mov
mov
popa
pop
add
fdivr
sbb
cli
adc
popf
in
or
adc
mov
ret
cmp
stos
lea
retf
mov
push
cmp
faddp
fwait
outs
and
int3
leave
arpl
aam
inc
mov
popf
cli
pop
iret
cmp
mov
or
xor
(bad)
mov
adc
pop
jo
pavgw
jle
sbb
mov
outs
add
shl
mov
xchg
or
sbb
inc
idiv
fsub
cld
dec
xchg
in
hlt
add
pop
inc
cld
and
inc
xor
jle
pop
inc
lahf
xchg
push
cmp
sbb
lds
push
(bad)
fiadd
xchg
jmp
inc
dec
jmp
xchg
ja
mov
mov
push
lea
mov
popa
mov
(bad)
sub
dec
pop
out
jb
inc
es
sub
js
cmc
mov
pop
fisttp
mov
jmp
iret
js
adc
sub
sbb
add
lahf
xor
out
stos
(bad)
adc
cmc
or
add
jle
hlt
jmp
xchg
out
adc
in
cmp
fs
stos
and
push
fs
mov
or
jmp
sub
or
test
xor
repnz
adc
or
es
pop
or
cmps
push
dec
test
and
sbb
inc
mov
mov
(bad)
pop
jl
pop
push
pop
ja
call
add
das
push
sub
sbb
xchg
dec
mov
shl
jnp
mov
push
clc
cmp
lods
cmp
leave
lea
ss
cmps
(bad)
jge
aam
loop
dec
pop
out
push
fisub
jg
retf
ja
jne
mov
xchg
mov
xchg
pop
ret
in
js
gs
inc
push
test
test
or
(bad)
fld
andps
idiv
pop
(bad)
xchg
out
into
(bad)
jbe
shl
pop
sub
shr
sbb
je
idiv
pop
pop
mov
mov
dec
xor
adc
repz
lods
mov
dec
rol
lds
aad
or
call
xlat
mov
pop
rcr
mov
mov
mov
push
xlat
sbb
xor
mov
xor
rcl
bound
xchg
jmp
push
add
add
ret
mov
jbe
es
or
aad
int3
arpl
enter
xchg
test
pusha
not
test
mov
stos
dec
shl
adc
retf
push
cs
adc
mov
pop
arpl
xor
xor
push
mov
lea
adc
or
clc
mov
jbe
push
stos
std
outs
mov
(bad)
inc
imul
lea
cmp
iret
imul
push
dec
jmp
xchg
add
add
fs
pop
dec
addr16
aaa
adc
mov
cld
imul
mov
mov
popa
xor
inc
xchg
(bad)
sub
jmp
test
cwde
gs
jmp
loope
add
add
test
icebp
and
je
jecxz
sbb
adc
or
or
ret
xchg
cmc
pop
and
sub
sub
xchg
out
lds
push
dec
dec
retf
arpl
into
cmp
dec
push
iret
sar
xchg
es
jl
add
shr
push
push
jle
add
and
mov
dec
add
or
mov
test
shl
sub
mov
dec
call
mov
adc
rcr
fdivr
jmp
ret
je
push
pop
add
pop
cmp
into
test
test
sub
loopne
adc
pop
lock
cmp
add
test
retf
fidiv
and
jo
in
stos
jp
mov
mov
lahf
xchg
scas
ror
stos
cdq
ja
sub
loop
fild
cmp
dec
cmp
sahf
add
lods
push
(bad)
lods
scas
xchg
dec
shr
(bad)
in
into
jne
mov
cmp
loop
lahf
outs
fs
movs
jmp
stc
mov
sbb
aas
jb
bound
and
loopne
push
out
and
xor
fs
sbb
sub
leave
pop
dec
movs
add
pop
adc
repz
stos
xchg
arpl
cmp
aad
(bad)
cmps
and
ret
cmps
sub
aad
and
pusha
dec
test
adc
out
ror
fcomp
or
xor
pop
mov
or
cld
ins
add
xchg
fidiv
xchg
fisubr
cmps
xlat
sub
xor
cwde
mov
clc
faddp
pop
movs
lahf
in
mov
call
adc
(bad)
sbb
in
mov
xlat
scas
repnz
or
sbb
imul
pop
push
outs
xor
or
jo
add
or
push
adc
or
fwait
push
sahf
movhps
retf
mov
test
push
std
test
adc
cwde
outs
fld
mov
(bad)
pushf
fiadd
jbe
cwde
sub
in
jp
xchg
xchg
imul
addr16
sar
push
fwait
call
cmp
cwde
imul
xlat
xor
jae
cmp
mov
push
pop
xchg
mov
sbb
dec
add
icebp
pop
sub
lods
aas
shr
enter
sbb
ret
xchg
(bad)
dec
inc
ss
loope
test
loopne
jecxz
pop
inc
mov
fnstsw
pop
out
sbb
adc
sbb
cld
lock
hlt
pop
inc
mov
arpl
mov
mov
pop
loop
lds
(bad)
(bad)
inc
or
push
sbb
jnp
dec
ret
int3
shl
adc
mov
lds
sub
mov
enterw
and
push
ret
fild
adc
dec
inc
int
popa
out
fucom
movs
test
cmp
aad
fnstenv
jp
jp
or
mov
sbb
into
mov
pop
and
sti
mov
scas
xor
sbb
or
adc
repnz
mov
cmp
mov
sub
jmp
sub
(bad)
pusha
or
add
das
out
jns
mov
repnz
push
xor
pop
sub
push
push
jns
int
fbld
outs
adc
in
mov
mov
inc
xchg
jg
xchg
jp
push
xor
jp
inc
push
repnz
jae
cs
iret
mov
dec
call
aam
mov
mov
pop
mov
xchg
sub
xor
movs
sub
in
into
imul
in
test
pop
dec
test
cs
adc
sub
mov
or
stc
fstp
stos
test
call
shr
push
jecxz
mov
xchg
mov
ja
or
aaa
cmp
inc
mov
sbb
jecxz
(bad)
test
add
push
stos
jno
cmp
mov
push
sahf
dec
popa
push
outs
jbe
fcomp
popf
in
or
adc
aam
popa
ins
aam
loop
movs
inc
cmp
cmp
mov
out
pop
sbb
jb
sub
sbb
inc
cdq
pop
aaa
xchg
jne
fdivrp
inc
mov
xor
xor
lods
scas
pushf
outs
loop
xchg
push
pop
test
dec
xchg
pop
adc
nop
and
cli
ins
xor
icebp
mov
or
add
mov
jns
mov
sbb
in
sbb
fsub
icebp
dec
ins
out
fistp
mov
adc
sbb
(bad)
fimul
pushf
add
xchg
pop
sub
push
into
inc
pop
adc
adc
mov
xchg
data16
pop
cmp
fimul
stos
sub
leave
mov
inc
push
mov
cs
rdmsr
push
jge
mul
xchg
push
in
mov
dec
xchg
imul
inc
cmps
das
test
jle
repz
xor
dec
pop
jns
fscale
popa
cdq
test
int3
or
popf
mov
mov
or
and
bound
out
into
pop
ss
adc
jl
xchg
or
outs
jle
imul
adc
mov
push
aaa
in
add
xor
ret
gs
jmp
xchg
loop
inc
jl
xchg
and
out
xchg
and
mov
clc
out
ficom
sar
mov
and
mov
lahf
push
(bad)
jns
jns
sbb
scas
sub
call
pop
(bad)
cmp
jge
and
dec
mov
sub
xchg
shl
sbb
add
inc
out
fdiv
push
test
and
and
(bad)
or
xor
pop
or
sbb
mov
mov
in
pop
dec
in
aaa
sbb
sbb
lods
gs
xchg
pop
test
jno
rcr
lods
xchg
add
in
test
outs
mov
arpl
out
mov
sbb
mov
lahf
xchg
add
mov
pop
fsub
dec
mov
fs
cmp
das
jmp
jg
jb
mov
call
dec
pop
jns
adc
pop
out
std
push
aas
add
add
clc
enter
pushf
xchg
push
xchg
cmc
jb
mov
mov
ja
push
adc
sub
and
jmp
bound
jbe
inc
adc
xchg
xchg
mov
cmp
jnp
add
jne
pop
cwde
cmp
jl
shr
ss
xchg
jmp
ins
(bad)
sbb
add
xchg
lahf
push
(bad)
sti
xchg
push
lahf
lods
jge
(bad)
push
movs
les
or
imul
pop
data16
cpuid
pop
in
fwait
sub
and
push
mov
sub
sub
or
pusha
popa
cld
and
out
ins
(bad)
inc
or
pusha
sbb
popa
fld
mov
outs
rol
lods
std
mov
out
xor
mov
in
je
or
xor
mov
mov
xchg
mov
add
rcl
jge
dec
xor
pop
xor
adc
dec
(bad)
loope
test
sub
pop
cmp
push
cld
pop
mov
jle
ficom
mov
(bad)
stc
aaa
sbb
shl
xor
mov
leave
out
pusha
addr16
cmp
fwait
and
pop
test
xor
xor
rol
and
lahf
(bad)
scas
pop
adc
mov
cwde
xchg
in
push
ds
cli
mov
(bad)
std
ins
stc
adc
ins
xchg
pusha
mov
inc
inc
pop
add
inc
xor
js
sti
aaa
(bad)
cdq
push
cli
adc
std
xchg
mov
pop
push
push
lock
outs
fcomp
pop
xor
mov
jg
mov
scas
bound
add
push
lods
xchg
dec
dec
ret
mov
xchg
mov
in
cwde
dec
std
sbb
(bad)
fbld
lods
xor
inc
xchg
(bad)
jmp
ret
push
jecxz
xor
scas
ins
jg
xor
fsubr
ror
jno
fnstsw
lds
add
pusha
push
sbb
add
or
cmps
mov
fidiv
mov
lock
out
lods
test
xchg
add
nop
cli
clc
fst
outs
loop
aas
fnstsw
xchg
sub
loop
cmps
(bad)
mov
jno
dec
int
mov
lods
scas
sbb
daa
sbb
(bad)
ins
jo
aam
adc
sbb
and
mov
out
std
movs
mov
ds
daa
ret
or
jmp
pop
fstp
push
pop
pop
mov
stc
aad
test
(bad)
push
sbb
imul
ins
jae
xor
stc
call
mov
xchg
dec
ins
cmp
add
loope
cmp
jmp
jle
pop
push
fcom
pop
call
dec
imul
jmp
mov
xor
xor
xchg
sub
inc
es
cmp
or
out
loopne
xchg
and
sbb
mov
mov
mov
out
jno
jo
into
push
imul
out
pop
gs
not
mov
push
dec
pop
int
jnp
push
call
pop
pop
cmps
scas
loopne
icebp
jae
sbb
mov
mov
out
or
inc
inc
outs
shl
fdivr
daa
push
inc
mov
(bad)
add
cmp
cmp
inc
xor
test
in
pop
outs
sub
or
mov
and
in
fidiv
sahf
mov
pushf
sub
cwde
fistp
xchg
add
jo
mov
adc
jmp
int3
push
cmp
retf
inc
cld
call
dec
hlt
int3
mov
cmp
mov
test
inc
push
out
adc
out
jb
push
cmp
cmc
push
or
and
imul
jecxz
sub
pushf
jmp
dec
sub
push
ret
and
mov
mov
mov
aas
test
mov
fmul
xchg
and
inc
test
jnp
cmp
adc
pop
adc
sbb
push
push
cmp
nop
and
mov
jmp
cwde
lds
xchg
pushfw
xor
jnp
pop
jb
shl
call
fs
iret
sub
pop
pop
(bad)
pop
cmp
in
xchg
leave
cmps
rcr
ss
out
jno
dec
fstp
fs
adc
mov
gs
adc
ins
cmp
xor
aam
mov
push
mov
cdq
mov
jge
popaw
inc
lds
test
cwde
outs
sbb
les
sbb
adc
jno
adc
xchg
jmp
dec
and
repz
mov
or
das
(bad)
cmp
xchg
push
sbb
sbb
jno
and
pop
aam
out
movs
xor
pop
sahf
fisubr
mov
sub
pop
and
jnp
mov
inc
pop
shl
mov
or
sub
mov
and
cmc
retf
shl
add
sub
jnp
cwde
jmp
lahf
adc
adc
leave
add
mov
mov
les
pushf
jae
(bad)
and
and
mov
cli
xor
xchg
arpl
dec
xchg
jl
push
jmp
lods
int3
sbb
int3
mov
daa
mov
rol
dec
ss
push
sbb
mov
rcl
int3
push
push
push
aas
out
and
scas
or
repz
xchg
sub
jb
sub
ins
hlt
or
loope
retf
pop
(bad)
movs
loopne
push
sub
pop
xor
sub
mov
pop
xchg
sbb
xchg
(bad)
out
cmps
mov
cdq
scas
adc
dec
movs
lahf
jnp
les
test
(bad)
pop
mov
push
bound
xor
pop
addr16
mov
jne
cmp
mov
out
lods
and
pushf
push
jmp
mov
jp
inc
cmp
push
mov
xor
(bad)
loopne
lods
out
jmp
ins
(bad)
ins
push
pop
rcl
cli
mov
cmps
mov
xchg
sub
leave
pop
int
sub
sar
mov
jns
xor
and
stos
lock
gs
not
xchg
sub
inc
or
imul
jmp
add
dec
push
or
ret
dec
and
shr
adc
jge
sub
cdq
lods
mov
fwait
add
mov
inc
dec
xor
sub
pusha
retf
jp
mov
ss
js
xchg
rol
jno
jbe
test
ja
(bad)
xor
lds
and
jmp
push
sbb
sar
rcr
retf
mov
jb
enter
jo
scas
mov
jns
push
mov
cwde
xor
cwde
ja
pop
push
cmps
jle
cdq
cmp
cmp
mov
pusha
mov
jecxz
mov
push
lods
movs
dec
ss
enter
and
jnp
lahf
push
ret
je
fnstsw
fidivr
dec
or
mov
loopne
mov
ja
adc
jmp
daa
adc
xchg
jns
fcom
int
dec
fwait
mov
push
adc
mov
add
call
push
movs
pop
cmp
std
and
adc
fsub
jmp
and
mov
int
push
(bad)
mov
cmp
pop
sbb
pushf
push
ds
mov
out
(bad)
fwait
repz
xor
or
in
fbstp
xor
dec
inc
or
dec
add
into
loopne
(bad)
outs
aaa
in
dec
adc
sbb
xchg
inc
test
fsubr
and
sbb
outs
sbb
mov
add
rcl
fmul
mov
shl
mov
mov
dec
movs
sub
ins
repz
pop
inc
ss
sbb
and
(bad)
in
xlat
enter
nop
push
mov
call
(bad)
cmc
sbb
jbe
popa
jmp
push
push
sbb
pop
mov
and
ret
scas
dec
mov
sbb
xor
imul
pusha
jl
ror
mov
mov
pop
je
or
mov
xchg
mov
cmp
movs
mov
popf
push
and
mov
inc
jae
xchg
mov
mov
pop
pushf
xchg
cmp
bound
lods
int3
and
sti
mov
repnz
out
lods
xor
mov
lahf
arpl
ret
and
or
fcomp
aam
aaa
mov
ja
lds
hlt
inc
or
mov
cwde
sub
retf
pusha
push
cmp
aas
sahf
xchg
outs
xor
cmc
jg
jg
aam
mov
(bad)
push
and
cmp
imul
fdivr
jnp
fistp
mov
mov
pop
stos
jecxz
cdq
outs
add
and
mov
cwde
inc
mov
mov
sar
or
lods
push
test
(bad)
jmp
sub
sahf
add
in
adc
enter
dec
xchg
xor
xchg
adc
retf
neg
add
outs
imul
push
loope
loopne
xchg
jecxz
push
sbb
in
mov
nop
inc
dec
lds
jbe
stc
ss
(bad)
mov
and
mov
outs
into
std
dec
mov
test
das
mov
mov
inc
fcomp
mov
popa
add
adc
mov
fs
cmp
and
sub
es
sbb
ror
push
aad
inc
mov
repnz
push
dec
dec
sbb
jmp
test
fnstenv
lahf
xor
inc
jns
lds
int
pop
mov
stc
or
pop
dec
dec
test
cmp
pop
pop
(bad)
std
cwde
adc
aaa
loope
cmp
pop
call
dec
ja
arpl
add
dec
inc
mov
movs
out
lea
cmps
scas
add
pop
call
mov
lds
inc
cmp
or
mov
scas
out
es
push
shl
sub
sub
pop
mov
call
cmp
xchg
pop
clc
mov
into
pop
scas
das
dec
test
dec
cld
sub
mov
nop
xor
sub
pushf
push
test
mov
sbb
and
fsub
sbb
cmp
pop
movs
adc
ins
push
fwait
jp
shl
mov
add
fcom
jo
rol
out
sub
cmp
lea
jnp
xor
jle
in
push
push
iret
sbb
scas
call
(bad)
repnz
or
loop
xchg
inc
jecxz
inc
jle
inc
aas
mov
(bad)
movs
stos
sahf
push
daa
pop
dec
cmps
retf
mov
retf
mov
fsub
xchg
shl
dec
les
arpl
mov
retf
mov
xor
lods
retf
sub
shr
inc
cmp
cli
sbb
scas
adc
mov
in
jl
mov
push
stc
ja
(bad)
icebp
pop
loop
mov
nop
lods
mov
ins
hlt
aaa
dec
loopne
add
pop
dec
icebp
push
pop
(bad)
jmp
or
xchg
loop
sub
pop
dec
ja
xchg
sub
adc
cwde
mov
inc
(bad)
test
pushf
and
stos
mov
jmp
gs
(bad)
mov
cmp
sub
add
in
sbb
cwde
or
mov
jp
inc
clc
fdiv
(bad)
jecxz
cmp
jmp
mov
mov
xchg
mov
int3
or
pop
mov
sub
ficomp
cs
idiv
jge
es
sub
hlt
pop
adc
cmp
sbb
cmp
imul
neg
jae
cmps
scas
mov
cmps
jbe
push
pop
jg
(bad)
sbb
push
movzx
mov
cmp
fld
jle
imul
aad
xchg
sub
into
push
cmp
cmp
inc
jge
loop
mov
inc
ins
icebp
shl
arpl
adc
jle
repz
cmp
dec
in
dec
sub
mov
cmp
je
fisttp
xchg
mov
loopne
loopne
stos
aam
push
push
jp
mov
xor
push
lock
or
cli
xor
inc
push
retf
mov
and
pop
test
ret
in
out
push
sbb
pop
lock
dec
es
xchg
test
pop
sbb
call
out
add
sbb
ins
xchg
xor
stc
iret
jl
adc
pop
setne
sub
in
xchg
popa
push
aaa
imul
jae
sbb
inc
cmp
mov
mul
popf
xchg
jmp
enter
adc
ror
sbb
pop
fdivr
mov
imul
movs
mov
lods
in
pop
adc
jno
sbb
and
adc
imul
jecxz
jno
outs
jmp
add
push
inc
imul
jp
sbb
mov
sub
lea
jb
cld
js
leave
(bad)
hlt
out
repnz
and
pop
cmovb
xor
inc
push
jbe
jmp
xor
xor
dec
not
xor
stc
mov
ret
mov
mov
ret
xor
add
push
int
push
mov
fadd
xchg
out
jle
dec
mov
lahf
out
popa
push
aas
sub
pop
xchg
push
pop
sbb
mov
sub
into
jne
fcomp
pusha
and
push
sub
call
mov
lods
fmul
nop
data16
std
test
retf
addr16
inc
div
ret
data16
test
mov
fdiv
in
out
xchg
pop
in
gs
aam
int
dec
sub
add
jg
cli
aas
xchg
adc
pop
leave
and
sti
out
push
pop
call
out
test
sti
and
mov
xor
xchg
inc
inc
sbb
(bad)
hlt
mov
test
out
ja
jle
pop
out
lahf
jno
adc
int
dec
and
inc
push
pop
jmp
adc
jo
inc
cmps
int
mov
add
mov
mov
int
adc
aad
mov
mov
xor
in
mov
fcomi
test
mul
and
nop
(bad)
call
inc
jne
dec
inc
(bad)
loope
mov
cli
cld
cmps
data16
pop
loopne
(bad)
adc
or
sbb
lahf
mov
sbb
sbb
jb
mov
or
(bad)
ffree
(bad)
shl
pop
and
dec
pop
call
xor
and
ficom
jo
sbb
(bad)
fisttp
lea
pop
mov
mov
push
xchg
fst
adc
pop
bound
ds
xchg
xlat
mov
add
test
repz
mov
out
cwde
mov
add
push
cld
push
aas
retf
and
out
pop
(bad)
in
sbb
mov
adc
fistp
int3
pop
mov
xchg
and
push
sbb
and
(bad)
push
leave
mov
mov
mov
push
mov
shl
mov
jno
lock
dec
(bad)
jmp
mov
enter
pop
mov
push
js
pop
sub
or
inc
push
hlt
ret
enter
arpl
mov
sbb
inc
add
mov
pop
pop
clc
hlt
out
adc
mov
pop
mov
mov
dec
push
push
mov
loop
(bad)
cmp
ja
dec
xchg
inc
jne
push
jecxz
push
int3
cmps
xor
mul
stos
jg
mov
ror
xchg
sbb
mov
idiv
in
add
pop
inc
push
in
hlt
stos
push
fcom
in
pushf
(bad)
fwait
xchg
jmp
push
xchg
fs
(bad)
and
test
std
sbb
push
into
cwde
sti
push
xor
mov
mov
pop
or
xchg
mov
and
aad
(bad)
in
es
in
(bad)
push
xor
shl
sub
int
mov
fldcw
pop
lahf
or
(bad)
stos
in
and
xchg
and
and
xor
(bad)
cmps
add
add
loop
pop
(bad)
fmul
call
dec
ret
ret
inc
clc
leave
mov
fadd
xchg
or
pop
jecxz
add
pop
pop
mov
push
pop
(bad)
cdq
jno
mov
sub
mov
in
mov
mov
mov
test
add
in
and
scas
dec
jne
fstp
mov
test
mov
xchg
or
into
jnp
dec
ds
mov
dec
mov
ret
cli
add
adc
push
sbb
sbb
pop
ins
push
shrd
cld
or
je
xchg
mov
(bad)
push
xchg
lds
xlat
xor
inc
mov
mov
hlt
ret
pop
mov
mov
cmp
add
xor
out
sub
outs
or
pop
jmp
xchg
(bad)
mov
xor
das
sahf
ficomp
inc
add
lock
jp
and
outs
cwde
popf
ds
(bad)
pop
jl
mov
dec
sbb
pop
retf
fdiv
jmp
jl
adc
mov
jne
js
call
mov
outs
es
dec
xchg
xlat
(bad)
iret
sar
jns
jle
sbb
inc
jecxz
in
adc
sar
fistp
pop
jle
jge
jne
cmps
or
aas
cmp
(bad)
mov
iret
(bad)
ins
sbb
cwde
cmps
xor
mul
jae
jmp
cmp
imul
lods
push
stos
inc
pop
hlt
aad
scas
jle
fisttp
jmp
fbstp
pop
add
gs
mov
add
leave
jns
dec
test
jp
aad
mov
push
jo
outs
jp
mov
(bad)
mov
cli
out
add
(bad)
out
ss
into
out
lods
add
(bad)
mov
es
inc
mov
mov
int
test
mov
sar
in
mov
xchg
dec
repnz
stc
imul
loope
mov
ja
sar
je
(bad)
jno
ja
push
(bad)
xor
sahf
icebp
scas
je
inc
push
fcmovb
pop
dec
mov
cmp
mov
shr
sub
mov
test
loopne
or
inc
pop
xchg
fstp
sub
ins
movs
ins
retf
stos
xchg
mov
sbb
xor
mov
xchg
int
movs
mov
mov
push
mov
pop
jbe
mov
inc
loopne
inc
retf
dec
sahf
xlat
loope
jg
cmp
mov
push
ret
xchg
pop
jbe
xchg
mov
ins
mov
ror
(bad)
cmp
shl
enter
push
movs
add
cmps
mov
bound
sbb
repz
dec
push
xchg
pusha
jae
out
sub
test
sbb
push
push
sbb
cs
std
inc
ror
cwde
inc
mov
lock
cmp
imul
mov
inc
mov
mov
mov
xchg
(bad)
and
xchg
sahf
cld
shl
mov
xchg
adc
push
pop
xor
mov
mov
sub
leave
dec
jecxz
ja
pop
mov
xchg
fld
add
xchg
or
pop
(bad)
push
jp
mov
and
pop
test
mov
mov
or
out
xor
sub
xchg
test
mov
dec
jno
mov
adc
mov
add
push
cmc
xchg
or
cdq
add
gs
in
lea
out
push
call
push
pop
jle
jge
cmp
xchg
fsubrp
jno
imul
adc
sub
inc
mov
cmp
mov
lds
xor
add
push
lds
idiv
dec
retf
retf
addr16
or
ret
jp
add
adc
fild
shl
mov
xchg
std
(bad)
aaa
daa
xchg
jae
stos
adc
push
ja
in
movs
clc
fidiv
dec
xchg
mov
sbb
inc
sub
dec
add
xchg
lds
add
mov
lock
or
push
push
pop
mov
popa
push
movs
sbb
test
or
shl
xchg
pop
repz
iret
or
pop
xor
out
adc
les
push
call
xchg
push
push
xor
mov
jns
xor
jo
lahf
fucomp
out
icebp
push
jle
push
jp
cmp
xor
outs
adc
in
and
cwde
bound
jmp
push
mov
cmp
rep
ja
sub
cmp
(bad)
popf
iret
in
inc
dec
retf
int
out
sub
std
add
mov
fnstcw
jl
fisubr
dec
and
push
sbb
mov
and
and
push
xchg
icebp
out
xchg
jmp
ret
loope
aas
dec
xchg
and
or
out
shl
loop
and
movs
sub
ss
(bad)
aas
cmp
ds
and
jo
cmp
enter
data16
sub
loop
call
sub
inc
pop
push
ins
test
adc
adc
popf
rep
jbe
and
cmp
cmp
cmc
cld
adc
loop
pop
xchg
mov
sub
loopne
push
inc
xchg
dec
dec
shl
jp
movs
test
cmp
jle
inc
iret
mov
xchg
mov
imul
daa
xchg
jno
loope
int3
sub
push
push
add
mov
sub
jne
test
xchg
sub
add
fiadd
clc
movs
(bad)
jp
and
mov
xchg
xor
add
jb
enter
pop
(bad)
gs
pop
jb
dec
ret
ret
jmp
and
sub
and
scas
adc
(bad)
fs
scas
sub
sbb
mov
test
data16
aaa
and
and
loope
mov
push
sbb
jmp
add
mov
and
test
jnp
mov
out
jo
clc
push
mov
sub
mov
inc
jb
ins
mov
imul
sub
pop
pop
pop
push
(bad)
mov
lock
cmps
loopne
sub
cmp
je
stc
popa
imul
int
mov
pop
adc
test
xchg
mov
sbb
rol
xor
jg
int
aad
mov
jl
and
mov
sbb
pop
adc
inc
or
or
sub
call
addr16
or
mov
mov
inc
cmp
ret
jns
xor
dec
sti
and
pop
cli
ret
and
add
shl
inc
(bad)
(bad)
sbb
pop
repnz
cmp
add
xor
sbb
fnstsw
sbb
or
sar
jb
cmps
lods
arpl
lock
popf
lods
dec
cmp
imul
call
js
add
inc
sahf
jne
mov
cmp
push
mov
adc
and
imul
in
js
inc
out
inc
test
push
dec
aas
jb
lock
cwde
cmp
xchg
shl
(bad)
push
ret
outs
aad
adc
pushaw
push
pop
cmp
push
lds
out
mov
lods
inc
daa
int3
adc
and
add
jmp
popa
sbb
inc
pushf
adc
inc
mov
ror
fiadd
mov
mov
adc
aam
fisubr
jo
(bad)
xchg
pushf
sbb
or
push
pop
and
popf
adc
push
scas
cmp
sub
cmp
aam
popf
add
stc
out
mov
in
out
sahf
inc
loopne
and
adc
or
ret
jg
and
sbb
xchg
adc
mov
pop
cmp
lods
je
mov
cmps
dec
adc
dec
push
shl
push
cmp
pop
scas
jo
xchg
sbb
dec
mov
jg
call
xor
cmp
cs
test
jle
(bad)
lock
ins
jge
hlt
fbld
xchg
dec
(bad)
dec
retf
adc
cmp
add
mov
and
sbb
call
fadd
and
adc
xor
rcl
aad
test
lods
stc
mov
aas
mov
test
ror
jl
out
cmp
loopne
je
into
iret
mov
xchg
test
xchg
lock
sbb
ret
jns
push
test
jecxz
(bad)
pop
call
xor
push
push
pminub
aaa
arpl
daa
clc
inc
pop
sahf
aaa
mov
sbb
aam
adc
sbb
fisubr
pop
mov
pop
or
out
mov
sbb
mul
inc
retf
pop
push
vzeroall
xchg
mov
mov
inc
cli
ficomp
test
aaa
jmp
ret
mov
pop
fwait
mov
stos
mov
mov
xchg
jb
sbb
cld
push
cmp
mov
test
add
shl
xor
mov
sub
adc
sub
and
or
out
cmp
aaa
fcmovu
dec
outs
inc
scas
jb
xchg
lahf
fisttp
cmp
test
std
xchg
cmp
clc
in
movs
in
adc
fnstcw
dec
mov
sbb
jmp
mov
in
test
in
sub
dec
nop
jle
cdq
inc
mov
mov
push
add
lods
adc
out
jno
inc
and
addr16
push
lea
cs
outs
fld
adc
inc
xchg
and
mov
pop
out
push
xlat
loop
cs
pop
adc
retf
ret
fsubr
rcr
movs
(bad)
ins
(bad)
mov
rol
sbb
jp
dec
pop
xchg
pop
fwait
add
mov
sbb
or
sbb
dec
push
cmc
jnp
(bad)
mov
jbe
lods
cmc
scas
jmp
inc
sahf
mov
hlt
mov
or
out
mov
xor
adc
dec
mov
ss
cmps
outs
idiv
lea
jmp
test
out
scas
gs
shr
sti
mov
loop
stos
fwait
movs
dec
push
mov
popa
sub
mov
(bad)
jae
add
cmps
cmps
test
push
sub
jmp
mov
cmp
lock
ret
mov
adc
fwait
pop
(bad)
fistp
add
scas
jle
jmp
and
mov
add
fadd
stos
mov
aas
and
sub
sbb
add
and
lods
mov
mov
xchg
pop
into
jge
push
push
push
pop
cld
mov
daa
call
xchg
push
ds
or
mov
dec
scas
inc
test
cmps
mov
mov
jle
call
xchg
mov
dec
stc
mov
cdq
hlt
jmp
cmp
pop
fisttp
shl
mov
xor
or
cwde
dec
ret
pop
pop
in
(bad)
outs
fs
push
pusha
sub
jmp
shl
xchg
sbb
xor
adc
xchg
dec
and
adc
sub
push
lods
data16
jmp
pop
xchg
inc
inc
repz
loope
jno
sub
nop
cmp
cmps
and
test
sub
fsub
sbb
shr
jmp
mov
add
xor
loopne
lods
adc
push
or
call
test
mov
cmp
xor
mov
xchg
hlt
pop
dec
popf
fdivr
mov
mov
adc
js
push
sub
movs
ins
dec
in
adc
call
fcmovbe
popf
mov
popf
mov
and
cli
inc
sub
cmps
xchg
lods
out
pop
fcom
int3
mov
pop
pop
in
mov
retf
loopne
out
retf
mov
pop
mov
mov
xchg
in
pop
ret
fs
dec
jb
jo
xchg
outs
and
sub
scas
and
pop
out
lock
aad
push
inc
cmps
inc
inc
loop
mov
mov
pop
add
xchg
rcl
sub
ret
dec
inc
mov
cmp
inc
mov
jl
jno
movs
dec
xlat
out
mov
cmps
jns
adc
push
ret
imul
(bad)
arpl
shl
mov
or
retf
(bad)
outs
xchg
xchg
pop
dec
lods
mov
fadd
xchg
lea
xor
(bad)
test
aaa
mov
aaa
inc
leave
test
(bad)
fidiv
in
adc
rcr
push
sahf
pop
bound
(bad)
xchg
adc
mov
jmp
ja
jb
sbb
rol
(bad)
and
adc
lahf
cli
gs
xchg
lock
loopne
pop
std
add
pop
fistp
mov
out
jg
sbb
iret
popf
hlt
sbb
bound
sub
inc
and
iret
test
mov
ja
das
sar
clc
icebp
push
mov
loop
sbb
xchg
mov
inc
add
xor
stos
mov
daa
sbb
push
mov
xchg
ret
lock
test
add
stc
xor
lock
leave
inc
mov
inc
mov
pop
scas
or
std
xchg
jp
pop
jp
outs
fs
adc
aaa
xchg
addr16
rcl
or
adc
sahf
int
and
pop
iret
jg
mov
pop
ret
fucomip
mov
mov
fs
test
sbb
leave
shl
inc
push
mov
mov
add
mov
cmp
jle
mov
rol
out
sub
aad
mov
mov
cmc
inc
pop
in
scas
sbb
std
sub
jmp
aaa
aaa
or
int3
neg
sbb
sbb
fwait
xchg
or
sub
mov
xlat
and
stc
jle
or
jno
dec
xor
xchg
mov
ficomp
pop
movs
aad
out
inc
xchg
adc
inc
icebp
iret
xchg
imul
and
pop
lea
xchg
mov
jne
popf
push
mov
push
pop
mov
or
sbb
ret
push
push
mov
mov
pop
cmp
int
ret
shl
shr
shl
scas
ror
jmp
inc
mov
shl
mov
mov
xchg
pop
scas
std
jge
lods
xchg
ss
inc
lds
xor
pop
out
iret
add
and
adc
int
adc
adc
ja
in
movs
je
stos
dec
and
or
repz
and
dec
xchg
sub
or
mov
adc
push
jnp
pop
push
cmps
inc
fld
js
dec
mov
out
xchg
fmul
ror
mov
and
pop
data16
xor
sar
call
fst
iret
mov
and
mov
mul
mov
out
enter
ja
add
xor
sub
or
(bad)
ins
cmps
int3
pop
jmp
clc
mov
sbb
push
ror
xchg
sbb
or
cmp
stos
cmps
fadd
inc
aam
or
ror
cmc
fld
dec
leave
push
and
test
int3
out
inc
cmc
and
aas
add
loope
and
test
xor
mov
push
inc
pop
push
jg
jge
xor
js
ret
fidivr
jb
clc
ins
mov
das
mov
pusha
or
stos
out
int3
xor
fdiv
mov
loopne
stos
(bad)
bound
ret
in
xchg
xchg
cwde
(bad)
out
inc
dec
add
std
pushf
pop
push
cmp
add
jge
mov
inc
add
inc
xor
mov
ja
scas
inc
mov
pop
nop
cwde
cmp
in
adc
adc
lock
lock
mov
(bad)
fwait
mov
fild
push
cmps
and
mov
sub
xor
pop
lods
inc
dec
pop
test
ja
add
pusha
push
cmc
int3
pop
jno
fucomip
xor
mov
sbb
sahf
(bad)
xchg
jecxz
or
icebp
and
mov
sti
sub
stos
cmp
in
fisttp
stos
addr16
xchg
rol
jne
sbb
(bad)
lahf
xlat
push
out
fidiv
xor
jmp
js
inc
fdiv
call
push
imul
pop
popf
dec
cmp
sbb
ins
or
jo
push
pop
inc
es
sbb
push
leave
dec
adc
jmp
outs
repnz
pushf
ret
jmp
shl
pusha
push
retf
mov
and
add
jg
pop
test
dec
dec
mov
fist
call
sub
cmp
push
pop
or
cli
add
sbb
inc
in
mov
xchg
out
arpl
pusha
and
aad
ret
in
adc
pop
add
pop
mov
adc
xchg
push
jne
loop
sbb
and
imul
xor
mov
test
inc
pop
test
mov
mov
clc
xor
(bad)
dec
push
aaa
mov
je
adc
jmp
(bad)
stc
cmps
xchg
mov
sbb
shl
add
fsubr
or
sbb
sbb
add
fmulp
rcr
lahf
inc
jae
xchg
xor
loope
push
imul
retf
or
mov
inc
out
cmps
inc
fdivr
push
and
mov
(bad)
jmp
(bad)
stos
pop
pop
loope
cmp
mov
std
out
aad
mov
dec
dec
pop
test
pop
sub
adc
ja
xor
xchg
cmc
ins
aam
xlat
and
mov
lea
fs
jns
sti
mov
pop
into
dec
sbb
mov
ret
xchg
xor
mov
xchg
out
xchg
lds
aad
fcmovbe
out
nop
ror
xchg
sahf
xor
pop
lea
cdq
adc
xchg
mov
lock
(bad)
std
icebp
mov
xchg
inc
test
jmp
popa
jp
mov
mov
ror
push
inc
mov
mov
loop
sbb
or
mov
push
test
outs
mov
repz
shl
das
test
xchg
inc
xor
stc
cli
bound
mov
jl
mov
push
mov
sbb
xchg
iret
adc
mov
add
jo
mov
jb
retf
aam
adc
cmps
jno
sub
jnp
nop
jno
movs
push
pop
jnp
mov
popf
pop
mov
test
shl
test
out
into
rcl
mov
mov
jo
into
ins
sub
rol
cs
lods
fwait
xchg
pop
cmps
call
dec
xor
inc
jg
shl
loop
jo
ss
shl
sub
out
cli
jge
xor
pop
mov
aas
les
(bad)
lock
jne
jl
(bad)
mov
sub
add
shl
sbb
imul
movs
xor
pop
push
add
stos
ret
cwde
push
lahf
(bad)
or
test
push
push
jmp
leave
jns
stos
les
adc
or
mov
imul
inc
pusha
fadd
pop
or
clc
shl
xchg
dec
ret
pop
(bad)
pushf
push
xlat
and
inc
push
scas
pop
xor
mov
popa
stc
lea
dec
and
and
jno
jne
mov
push
inc
lds
dec
test
movs
xchg
push
int3
mov
in
cmps
cmc
cmp
rcl
(bad)
mov
jge
mov
cmp
in
inc
out
fadd
sbb
outs
sbb
loop
bound
fs
mov
and
add
pusha
cld
fs
adc
and
ret
les
push
lods
push
pop
jne
fldcw
dec
movs
sar
adc
mov
sbb
(bad)
in
add
jmp
in
sbb
mov
jns
sbb
adc
daa
test
push
int3
retf
mov
cmps
jmp
cwde
add
push
mov
jmp
xor
pop
nop
jecxz
ret
adc
or
cmps
xchg
xchg
in
jl
cmp
pop
add
cmp
xlat
int
sub
bound
xchg
adc
jmp
cmp
jno
jmp
mov
pop
sti
hlt
adc
pushf
mov
mov
int
adc
shr
movs
mov
adc
or
ror
iret
inc
mov
retf
pop
(bad)
call
int3
imul
jmp
inc
xor
shl
addr16
ror
and
or
xchg
mov
inc
loope
int
js
cmps
aad
test
mov
xchg
(bad)
aad
adc
mov
inc
or
push
(bad)
push
pop
xchg
js
mov
mov
mov
and
sub
and
idiv
mov
push
cmps
add
add
ret
sar
mov
lds
pusha
adc
test
enter
fisttp
test
cmp
push
test
in
lds
outs
leave
xchg
fsubr
retf
push
outs
add
xor
fidivr
mov
or
bound
push
xchg
out
xchg
jge
sub
loope
shr
retf
xor
xchg
(bad)
cs
and
inc
push
jmp
ins
jp
dec
push
pop
shr
cmp
xor
push
cs
retf
xchg
fwait
clc
arpl
rol
and
std
add
fs
dec
mov
xchg
mov
(bad)
adc
mov
mov
xor
out
std
jnp
cmp
dec
aas
sbb
dec
shl
or
mov
push
jb
retf
dec
inc
icebp
mov
fcmovnu
push
push
ins
inc
inc
mov
lea
cmps
dec
movs
ins
mov
mov
in
jno
(bad)
jmp
arpl
add
daa
add
bound
(bad)
fsubr
gs
push
cmc
mov
cmp
push
add
jecxz
std
dec
divps
cmp
sbb
mov
pop
cli
and
jecxz
icebp
js
dec
pop
push
add
push
or
gs
sub
repz
mov
iret
or
out
repz
push
clc
aas
loope
test
popa
add
push
xor
(bad)
sbb
ja
push
fcomp
gs
xchg
cmp
repnz
and
mov
enter
ror
out
ficom
and
lea
mov
sbb
mov
jmp
pop
loopne
cs
stc
test
inc
fcomi
xor
icebp
xchg
cld
jp
test
out
enter
xor
or
cwde
push
fild
mov
sub
dec
std
xor
lahf
repz
stc
xchg
test
ret
ret
nop
jp
test
into
sub
add
dec
mov
xchg
and
int
mov
add
xchg
lea
outs
lea
cmps
pop
xchg
push
xchg
sbb
xchg
out
inc
enter
add
jno
pop
cli
push
dec
ja
push
sbb
and
loop
pop
stos
in
dec
shl
call
push
inc
movs
in
cmc
xchg
ret
pop
(bad)
cmp
push
ins
sar
aas
mov
or
and
push
fcomp
movs
out
jno
push
cmps
retf
add
test
or
or
sub
sub
xor
fdivrp
in
ror
dec
pop
call
das
pop
xchg
ins
movmskps
xchg
call
cmp
adc
xor
jle
rcr
hlt
sysret
mov
fmul
out
lahf
jns
and
add
add
js
jmp
ret
sahf
xor
int3
add
das
and
sub
sub
xor
mov
ja
sbb
xchg
adc
mov
push
dec
aad
sbb
xchg
adc
cmp
in
push
cmc
jno
test
xchg
(bad)
loopne
in
aad
push
sub
xchg
mov
(bad)
rcl
enter
push
cmp
pop
psrad
daa
nop
test
jnp
and
(bad)
enter
loopne
hlt
fiadd
(bad)
jo
movs
mov
lahf
push
inc
and
sbb
inc
pop
mov
das
or
imul
loopne
mov
sbb
mov
pop
or
mov
or
cmovg
jp
and
jns
add
loope
stos
lds
test
popa
jle
mov
loop
mov
pop
and
test
in
inc
and
mov
les
and
fld
das
nop
lods
inc
pop
dec
scas
inc
jle
aad
or
pop
aam
inc
repnz
jge
push
lahf
inc
pop
push
mov
sub
sbb
or
add
ficom
xchg
test
call
pop
xchg
or
or
leave
mov
add
mov
fdivr
cmp
in
push
pushf
xchg
clc
cdq
cmp
sub
mov
push
dec
pop
jecxz
loope
or
inc
xor
jo
pop
leave
(bad)
pop
lods
inc
xchg
int
lods
icebp
test
jmp
into
jae
aaa
mov
data16
push
add
sub
mov
mov
add
imul
icebp
xchg
xor
ins
out
xor
mov
mov
cmp
sti
inc
sbb
das
jle
in
test
mov
or
outs
sub
or
shr
mov
cmp
jns
mov
daa
scas
add
icebp
leave
jecxz
into
cmp
pop
in
push
(bad)
mov
xor
arpl
pop
jo
pop
push
push
mov
sub
(bad)
lock
mov
loopne
and
or
jbe
popa
dec
sub
xchg
sbb
mov
shl
xchg
mov
(bad)
pop
dec
mov
push
bound
jbe
cwde
add
or
iret
adc
cdq
lahf
hlt
mov
movs
jns
in
sub
(bad)
jbe
test
pop
sbb
sbb
int3
add
rcr
cli
stos
idiv
in
pop
xchg
mov
lods
fdiv
mov
dec
in
(bad)
retf
cmp
cld
mov
pop
(bad)
jno
pop
sbb
stc
pop
or
or
mov
sub
cld
stc
lahf
jge
lods
or
retf
adc
(bad)
(bad)
rcl
aas
stos
stc
jb
mov
jbe
fidiv
pop
dec
js
imul
ss
mov
adc
sub
ds
stc
into
cmps
(bad)
mov
idiv
jne
sbb
pop
push
sub
dec
fcomip
shl
jecxz
cmp
or
sub
iret
es
dec
pop
shr
xchg
int3
loope
pop
cmc
mov
push
adc
mov
shl
sbb
inc
adc
cwde
xchg
dec
sub
outs
sahf
and
(bad)
sahf
sbb
and
mov
jmp
sbb
rcr
cmp
cmps
fwait
(bad)
cmp
cli
and
push
test
sti
stos
int3
pop
dec
addr16
jle
imul
mov
hlt
mov
cmp
mov
mov
(bad)
ja
in
test
jmp
mov
cmp
xor
and
dec
sub
add
(bad)
shl
pop
mov
ret
js
setno
(bad)
fstp
xchg
add
push
fisub
out
fstp
pop
pop
or
dec
push
cmp
mov
iret
pusha
lock
rol
sbb
jb
mov
in
aas
stos
daa
dec
jae
sbb
in
movs
jle
cmp
pop
pop
loope
xchg
hlt
xor
and
in
jmp
fwait
mov
xor
outs
or
jmp
adc
xchg
jl
xchg
or
fisub
hlt
xor
fwait
mov
fadd
mov
jb
xor
mov
cmp
mov
mov
add
out
push
mov
aaa
pop
or
mov
repnz
push
sub
shl
mov
sar
dec
and
loop
fidiv
sbb
retf
aad
je
xchg
sub
xchg
jecxz
dec
dec
cmps
jmp
pushf
cmp
cmp
pop
lods
mov
xchg
adc
shl
pop
out
push
call
in
(bad)
stos
jge
addr16
cld
mov
jmp
sub
pusha
cdq
sti
or
rol
jo
jns
jg
jecxz
fsubr
jo
(bad)
out
stos
push
mov
fld
scas
nop
mov
call
and
inc
lds
(bad)
mov
iret
mov
shr
fidivr
jecxz
outs
ficom
inc
pop
les
inc
shl
stos
dec
movs
xchg
xchg
xor
mov
fisttp
xchg
push
fs
sbb
dec
in
add
add
pop
jmp
xchg
scas
xor
cld
test
mov
pop
xchg
(bad)
mov
ret
aaa
aaa
and
mov
sub
adc
xor
mov
inc
add
mov
imul
hlt
xlat
sti
repnz
push
lds
pop
in
rol
pusha
ret
and
push
imul
cdq
or
popa
std
and
dec
std
mov
(bad)
mov
dec
je
cld
mov
jge
std
in
(bad)
outs
mov
adc
inc
mov
sub
lods
dec
xor
xor
lods
rcl
inc
rol
xchg
xlat
sub
mov
xchg
jp
imul
sub
xchg
popa
mov
loop
xchg
out
shl
mov
rol
das
xor
push
push
ja
out
push
xchg
push
into
loopne
cld
sub
enter
pop
shr
call
inc
push
mov
retf
dec
xor
mov
xchg
dec
aam
xchg
fwait
or
data16
or
shl
shr
mov
push
and
daa
inc
and
jl
sbb
xor
mov
sar
add
push
bound
sbb
fwait
(bad)
adc
push
test
pop
lods
jnp
xchg
push
test
loop
ja
xchg
xor
js
jbe
leave
out
push
sub
xchg
and
push
xchg
or
dec
dec
and
mov
inc
outs
nop
out
ins
jmp
mov
rol
lock
into
xchg
push
(bad)
ss
mov
ja
dec
jo
and
aas
jl
jp
inc
iret
sub
xor
icebp
stos
mov
sbb
pop
inc
and
xchg
sub
or
jl
js
test
jne
mul
retf
jmp
jmp
dec
cmps
mov
arpl
push
push
push
daa
fstp
push
jecxz
pop
test
mov
leave
(bad)
or
mov
iret
mov
mov
in
mov
lahf
lods
add
in
sub
mov
xor
cmp
jnp
pusha
movs
jle
and
dec
dec
sub
xchg
pop
sub
mov
(bad)
xlat
imul
ins
xor
repz
(bad)
sub
mov
test
xchg
out
push
sub
montmul
cmps
inc
stc
xchg
cmp
mov
cmp
hlt
fldcw
cld
test
out
inc
jle
pop
outs
adc
cmp
repnz
jle
sub
dec
mov
ins
stos
int3
repnz
call
adc
or
retf
add
ja
cmp
imul
aas
xor
xor
pop
sub
arpl
movs
inc
ret
dec
call
hlt
xchg
ror
aad
sbb
adc
std
push
in
inc
xor
icebp
arpl
pop
fidiv
jmp
sar
cmps
and
and
lea
fnstcw
ret
jecxz
fistp
(bad)
push
(bad)
out
ds
(bad)
cmp
mov
dec
jmp
rol
cdq
lahf
pop
inc
mov
shl
sub
mov
lahf
and
xor
xor
jbe
jno
inc
add
stos
iret
dec
out
and
mov
je
js
loopne
mov
stos
xor
loop
iret
xor
out
push
loop
or
jne
cmp
xor
pop
push
(bad)
push
jae
je
clc
clc
mov
popf
into
sbb
mov
loope
idiv
repz
dec
mov
int3
cmps
sub
sub
push
aas
cmp
retf
sbb
imul
mov
pop
imul
pusha
inc
mov
sbb
or
push
add
add
ja
mov
hlt
fst
jo
pop
jmp
sub
jae
push
leave
add
xor
es
mov
ror
pop
xchg
jge
cmps
dec
jmp
ds
je
and
push
idiv
pushf
jno
int
jb
jecxz
mov
mov
repnz
jmp
in
in
add
ror
jno
ins
sub
into
lods
faddp
dec
sub
and
ins
sti
(bad)
shr
gs
data16
popa
(bad)
stos
jmp
in
xor
fsubrp
jb
cld
xchg
cmp
mov
repz
jbe
push
bound
jle
sub
fdivp
xor
sub
xchg
pop
ins
(bad)
mov
sub
mov
or
aas
int
or
call
stos
icebp
fwait
shl
sti
inc
push
xchg
(bad)
enter
test
imul
in
push
cld
repz
xor
in
ja
jmp
push
lods
pop
sbb
jl
jns
mov
xor
test
aaa
rcr
push
call
in
mov
adc
fbstp
je
push
sbb
das
and
pop
movs
and
shr
lods
and
jg
and
push
xchg
mov
mov
daa
xchg
mov
retf
movs
xchg
mul
and
aam
push
into
lea
mov
test
xlat
adc
fist
jge
clc
xor
sub
jmp
shr
mov
aad
adc
stos
mov
mov
lods
inc
loop
jmp
mov
mov
or
lods
xchg
mov
gs
jbe
into
and
sbb
sbb
sub
dec
push
mov
stc
and
adc
call
ret
ret
jnp
in
call
gs
jmp
or
add
ins
fcom
or
dec
jae
xchg
rcr
(bad)
cmps
fimul
cwde
jo
jns
xor
bnd
adc
or
loopne
dec
sti
inc
call
cmp
adc
xor
xor
imul
scas
mov
or
cmp
bound
je
std
out
mov
and
xor
xchg
mul
cmp
mov
rcr
dec
push
dec
fist
cmp
popa
jle
into
fiadd
mov
jge
pop
and
arpl
into
or
adc
cdq
inc
xchg
imul
pop
or
pop
(bad)
icebp
fisubr
int
dec
sub
mov
aam
cwde
aaa
dec
sbb
xchg
in
pop
mov
imul
bound
xlat
mov
dec
cmc
or
and
enter
nop
mov
mov
mov
pop
push
xchg
arpl
add
mov
rep
retf
cwde
(bad)
or
mov
std
fsub
test
adc
pop
hlt
aas
xchg
dec
in
ret
lds
lods
pop
sbb
in
jne
xor
lock
arpl
call
fimul
movs
sbb
ja
add
ret
(bad)
fwait
lahf
pop
mov
outs
cmp
(bad)
mov
push
sahf
sub
movs
scas
mov
in
dec
out
cmp
mov
ss
xor
out
mov
in
in
cmp
pop
das
les
test
nop
(bad)
popf
pusha
int3
cs
add
pop
push
mov
cmp
add
(bad)
out
push
lds
out
lahf
and
scas
(bad)
and
out
adc
cmp
daa
mov
xchg
shl
loopne
std
xor
xchg
fld1
retf
ja
shl
in
and
adc
in
xor
lea
jmp
add
mov
fldcw
and
shr
adc
je
push
or
cld
into
mov
add
jge
retf
clc
sbb
nop
clc
(bad)
rol
mov
mov
cli
aaa
xchg
mov
dec
pop
les
ss
setae
dec
mov
mov
mov
inc
mov
xor
ss
aam
cli
sti
div
inc
out
lds
and
push
and
aas
cmp
ins
jge
xchg
test
ror
lds
mov
sbb
je
fsub
pop
pushf
je
or
add
and
mov
cld
xchg
jne
sub
or
add
add
xlat
add
cs
inc
iret
mov
test
pop
jns
add
out
jge
out
sbb
mov
jnp
out
ror
call
les
push
ins
in
push
sub
out
call
jne
mov
xchg
test
arpl
shl
fld
mov
sbb
jnp
dec
sbb
ret
pop
mov
les
les
ins
jbe
jo
enter
es
adc
pop
cmp
sub
stos
inc
xchg
repnz
sbb
inc
cmp
leave
push
mov
jmp
test
mov
jbe
or
fldcw
bound
add
dec
push
hlt
ret
sub
std
in
stos
pop
cmp
icebp
jg
xor
lea
cs
fst
(bad)
dec
imul
cwde
pop
dec
das
jl
lahf
push
push
xchg
out
sbb
rol
cs
out
test
pop
jmp
fcom
or
mov
xor
or
loopne
cmp
dec
push
pushf
xchg
pop
in
and
xchg
lods
je
aam
xchg
add
mov
jp
sub
cmp
jnp
pop
and
add
jbe
push
cmp
sbb
xchg
fsubr
mov
js
add
fcom
loop
jns
mov
popf
imul
dec
adc
mov
push
mov
popa
push
sub
or
xchg
mov
mov
inc
std
add
cmps
(bad)
les
popa
push
mov
adc
jbe
inc
dec
cdq
push
jae
aas
out
adc
pushf
movs
inc
mov
leave
sbb
(bad)
xlat
pop
push
push
out
test
dec
jb
xchg
lods
movlps
aaa
loope
movs
pop
jne
mov
adc
(bad)
pop
push
xor
int
neg
jo
aad
lea
fst
xor
scas
retf
adc
push
cmps
fisttp
fwait
int
dec
xchg
add
test
ret
lods
lods
push
lds
aas
push
xor
inc
rol
stc
jle
sub
aam
and
sbb
js
int
sbb
pop
mov
adc
sahf
iret
cld
and
repnz
into
sub
cmp
cmps
test
xchg
pushf
nop
inc
dec
jl
add
lea
xor
xor
mov
test
dec
pop
push
leave
inc
inc
sub
fidiv
addr16
cmps
push
fs
sub
nop
sub
ja
out
xor
jmp
mov
inc
adc
nop
lods
jge
retf
pop
pop
scas
stos
in
inc
add
add
mov
add
pop
inc
push
push
bound
imul
repz
dec
stos
and
xor
lods
out
sub
xor
popf
(bad)
add
ja
jmp
in
movs
int3
(bad)
out
std
inc
loope
scas
not
in
pop
adc
(bad)
and
clc
adc
jmp
aaa
push
(bad)
lahf
sahf
xor
pushf
add
mov
or
jno
sub
sar
xor
xor
or
je
xchg
in
mov
pop
push
les
call
fwait
xchg
cdq
addr16
and
lock
scas
cmp
movs
nop
(bad)
sbb
mov
mov
mov
xchg
sbb
mov
push
sbb
pusha
xchg
out
jnp
mov
dec
adc
mov
sbb
cwde
add
(bad)
nop
xchg
or
mov
xchg
mov
mov
imul
fistp
jns
(bad)
push
rcl
push
test
add
stos
sbb
inc
xchg
pop
jmp
mov
ror
adc
retf
sub
sub
je
loop
mov
(bad)
call
inc
test
jne
test
push
dec
(bad)
in
cmp
lahf
mov
out
iret
and
shl
fsub
cmc
cmp
or
sub
idiv
daa
stc
loopne
mov
adc
js
out
adc
dec
test
inc
sbb
out
inc
fistp
mov
test
jns
popa
mov
dec
pop
imul
jmp
aad
push
cmps
add
fwait
xchg
inc
cmp
aas
add
cmp
sub
pop
mov
push
inc
clc
cmp
out
xchg
xchg
fisub
mov
dec
test
sbb
imul
mov
imul
jb
addr16
ins
test
cmps
mov
sub
cwde
retf
imul
ret
sti
sub
push
jns
xor
push
ret
movs
push
inc
dec
mov
add
push
jecxz
in
mov
xchg
sub
mov
clc
das
jbe
xor
pop
xchg
jb
mov
rol
push
enter
cmp
add
in
sbb
cmp
int3
sar
jbe
(bad)
imul
and
push
sub
call
xchg
ret
leave
ror
retf
mov
and
shl
fcom
rcr
repnz
mov
push
xchg
arpl
xchg
mov
and
xchg
sbb
xchg
pusha
fistp
repz
test
lahf
mov
xor
mov
sub
adc
push
cmps
xor
dec
xor
shr
xchg
mov
nop
or
push
rcr
inc
rol
scas
xor
lods
outs
mov
nop
xchg
mov
iret
add
mov
nop
loop
xchg
retf
sbb
dec
mov
mov
add
sbb
les
lods
cmps
cld
or
jne
push
retf
mov
adc
movs
hlt
lods
dec
shl
rol
popa
shl
fmul
outs
sub
outs
pusha
(bad)
scas
jmp
dec
aas
sub
cmp
push
pop
and
test
and
aaa
mov
xchg
push
mov
clc
jno
rol
sbb
sbb
or
shl
hlt
adc
ins
(bad)
cli
push
repnz
dec
and
jbe
lds
add
retf
inc
and
xor
pop
add
ds
mov
ss
mov
movhps
dec
mov
add
outs
push
pop
repnz
xchg
test
ret
inc
popa
jp
inc
sub
in
aam
ins
stos
test
std
xlat
push
sbb
fldenv
inc
push
dec
js
and
jecxz
inc
addr16
mov
bound
xor
(bad)
jmp
mov
jle
dec
outs
popf
fild
daa
sbb
leave
xchg
out
(bad)
outs
sbb
es
xchg
inc
adc
repz
mov
sti
fstp
add
sbb
adc
and
pop
inc
or
fldcw
adc
jmp
push
cdq
pop
shl
xor
jnp
repnz
dec
dec
(bad)
outs
ss
adc
adc
mov
lds
adc
xchg
cmp
add
mov
popf
hlt
inc
cmp
sbb
hlt
xchg
mov
push
jge
xor
(bad)
cld
inc
cmp
cmps
sub
test
or
pop
mov
aad
pop
jno
fisubr
sti
shl
fld
cwde
shr
into
jb
sbb
test
(bad)
xchg
addr16
xlat
loopne
jecxz
rol
leave
pop
pop
loop
jae
xchg
pop
jno
mov
scas
in
fsubr
int
mov
mov
not
inc
jb
inc
test
out
inc
fmulp
ins
int
(bad)
mov
ds
enter
repnz
or
sbb
rcl
scas
cli
xchg
adc
cli
add
xor
and
or
pop
mov
sbb
push
out
aam
data16
mov
xor
push
icebp
mov
ins
dec
out
fcmovb
cmp
add
hlt
imul
dec
xor
ins
xchg
ficomp
push
adc
xchg
mov
lea
repnz
pop
idiv
sub
jp
js
pop
(bad)
in
cs
dec
ret
push
or
ficom
xchg
xchg
mov
(bad)
adc
es
mov
add
xor
repnz
fidiv
jecxz
js
lds
adc
and
fs
pop
push
mov
fnsave
outs
jp
adc
lods
mov
mov
jno
out
fimul
dec
or
jns
mov
test
outs
inc
lds
frstor
jmp
out
pop
test
or
fwait
outs
pushf
add
movs
lea
mov
popf
gs
add
cmp
push
and
sti
out
pop
outs
cli
xor
test
push
in
and
xchg
repz
fisttp
xor
in
leave
mov
int
idiv
jmp
mov
(bad)
in
mov
xor
sub
test
and
div
dec
repz
int3
cmp
fdivr
test
out
inc
cs
bound
xor
cmc
sbb
mov
shl
rol
push
xor
cmp
dec
in
sub
call
mov
adc
inc
(bad)
mov
or
dec
jmp
add
or
sub
or
into
inc
mov
cmp
rol
movs
jmp
jns
std
xchg
or
jge
in
cs
shl
sub
outs
pusha
dec
fcom
push
(bad)
aaa
dec
int
mov
cmp
jge
mov
pop
shr
aam
mov
sub
loopne
mov
mov
push
je
push
std
pop
out
jno
fcomi
jnp
fwait
imul
(bad)
sbb
fs
pop
mov
mov
and
sub
add
in
sar
ret
cmp
stos
cmps
ins
std
imul
xchg
les
in
dec
ret
in
inc
pusha
xchg
adc
mov
test
sub
outs
mov
addr16
push
or
jle
sub
xchg
mov
mov
sub
fcom
dec
sbb
pop
mov
ret
fiadd
fcmove
retf
arpl
inc
into
jecxz
in
pop
jecxz
movs
mov
ins
xchg
xchg
idiv
cmp
push
xor
xor
sbb
jno
mov
mov
mov
add
mov
mov
out
enter
mov
(bad)
in
mov
sar
add
shr
xchg
and
mov
dec
stc
or
lods
pop
push
lods
pop
dec
sbb
loop
dec
mov
mov
inc
dec
add
push
mov
mov
rol
mov
or
adc
mov
jno
mov
sbb
jae
xchg
movs
(bad)
popf
mov
push
push
mov
ins
clc
movs
imul
retf
clc
sti
int3
or
rol
adc
and
mov
dec
adc
adc
pop
cmp
cmp
xchg
and
(bad)
fist
(bad)
adc
mov
mov
imul
push
push
jbe
add
and
xor
mov
pop
dec
ret
fild
clc
ins
imul
fcomp
test
lea
adc
shl
fisub
fld
mov
pop
stos
inc
xlat
fdivr
or
out
mov
mov
cmps
retf
mov
pop
sbb
fstp
push
mov
push
scas
(bad)
mov
mov
mov
ficom
jbe
xchg
sub
inc
mov
sbb
jmp
out
aaa
xlat
out
sbb
or
jge
pop
push
out
push
push
push
sbb
out
(bad)
(bad)
fdivr
out
fisub
popa
jnp
xchg
jb
call
imul
mov
mov
hlt
fimul
fs
and
out
in
inc
stc
ins
and
out
add
loopne
push
outs
jp
inc
mov
mov
and
popa
pop
fcmovu
xchg
dec
movs
inc
sub
lds
xor
ins
sti
pop
loop
push
jbe
cld
mov
mov
cmp
popf
cwde
fist
mov
sbb
mov
and
cwde
pop
jnp
fmul
icebp
add
dec
pop
push
out
das
jl
cld
shl
add
icebp
stos
xchg
outs
xchg
call
imul
sbb
xor
sub
retf
call
or
movs
bound
jb
mov
lahf
aad
mov
xor
xor
cmp
ins
cmp
add
scas
inc
iret
into
add
call
add
cld
bound
ds
or
leave
mov
push
repz
pop
xor
sbb
rol
inc
mov
(bad)
fucomi
(bad)
mov
test
lea
add
xlat
cli
pop
in
mov
inc
int
mov
xchg
mov
or
call
loop
out
movs
mov
into
js
addr16
scas
adc
dec
dec
inc
sbb
xor
retf
add
fadd
lock
pop
aaa
jnp
idiv
(bad)
movs
iret
ret
xchg
xchg
icebp
mov
in
push
popf
and
mov
pop
iret
cli
lds
adc
aad
and
or
xor
test
cmc
mov
mov
sbb
stos
mov
aas
cs
sbb
(bad)
sti
mov
mov
test
xor
icebp
cmp
or
jle
movzx
das
xchg
loopne
lahf
push
movs
dec
pop
sbb
shr
lock
mov
fwait
sbb
push
inc
xchg
pop
mov
and
outs
not
xchg
lea
daa
ror
jecxz
cmp
xor
inc
inc
jmp
mov
xlat
sbb
in
mov
jecxz
jnp
lods
inc
push
jle
test
ins
dec
outs
retf
xchg
movs
dec
clc
jno
fwait
xchg
hlt
ja
imul
rcl
jb
pop
dec
jnp
inc
pushf
xchg
mov
es
jle
jnp
mov
fild
xor
pop
(bad)
pop
adc
aaa
jo
je
inc
and
aaa
mov
pusha
and
inc
lods
cmp
jne
jge
inc
les
sub
arpl
dec
xor
jns
shr
mul
push
xchg
sbb
addr16
push
xor
xchg
push
mov
inc
nop
fnsave
out
rcl
mov
mov
lods
dec
add
sub
mov
cmp
ja
adc
and
repnz
sbb
add
sub
adc
ret
mov
pusha
mov
push
arpl
in
out
or
arpl
adc
shr
ror
inc
pop
(bad)
adc
push
adc
cmp
adc
sahf
nop
movs
xchg
bound
mov
scas
xchg
jnp
jmp
cmps
sbb
idiv
mov
jmp
hlt
cli
leave
fld
add
mul
aad
stos
sbb
push
sbb
call
xchg
pop
push
fdiv
dec
aad
cmp
fucomp
jo
sub
nop
jb
imul
scas
sub
inc
scas
leave
fimul
adc
lds
pop
test
ja
loop
mov
cmp
xor
inc
fistp
adc
jno
mov
adc
xor
rcr
ss
repnz
mov
mov
or
sahf
movs
sub
(bad)
dec
xchg
sub
push
lods
fstp
data16
inc
ret
inc
in
jno
jb
pop
ret
daa
xor
cmps
lock
inc
clc
cmps
dec
imul
sbb
out
push
xor
sar
adc
cld
dec
loope
into
add
dec
inc
sub
xor
and
movs
aad
xor
pop
cdq
sbb
jge
movs
mov
sub
jl
stos
cwde
jo
inc
sbb
pushf
arpl
lea
inc
add
movs
jb
fwait
imul
cmp
test
loope
cmp
mov
mov
cmp
and
inc
in
add
push
add
dec
mov
dec
addr16
dec
neg
mov
fidiv
fwait
stc
adc
into
jecxz
dec
sub
push
daa
jno
jne
and
mov
int
cld
xor
in
loop
sti
mov
cli
push
push
sub
sti
push
cdq
cmp
fs
add
stos
out
sub
pushf
int
fmul
dec
(bad)
push
test
mov
sbb
cmp
xchg
jae
pop
mov
aas
sub
(bad)
fisub
jl
in
aad
adc
dec
dec
push
movs
inc
js
aas
test
popf
dec
xlat
ss
out
fcom
loop
inc
and
jnp
jge
xor
add
iret
shl
stos
push
das
xchg
pop
outs
es
loope
cmp
in
data16
and
jmp
imul
mov
es
es
push
into
add
cmc
test
dec
jb
jns
hlt
sub
pop
es
test
sub
sub
mov
cmp
test
test
pop
rcl
dec
test
(bad)
out
jbe
movs
jnp
mov
pop
stos
mov
mov
mov
(bad)
jnp
xchg
fucomi
nop
aas
jmp
lock
shl
pop
outs
or
loopne
fcomip
repnz
(bad)
(bad)
push
(bad)
or
mov
pop
jp
out
or
cli
(bad)
shr
adc
clc
push
enter
push
in
cmps
xchg
jo
inc
mov
aaa
icebp
mov
sbb
shl
jg
xlat
sbb
popa
jmp
aad
xchg
data16
sub
mov
imul
shl
or
xchg
inc
xchg
and
adc
mov
jmp
or
jne
mov
lds
cmps
mov
mov
out
or
cli
or
xchg
mov
sahf
mov
xchg
enter
out
into
rol
lea
arpl
outs
ror
adc
and
mov
sahf
clc
shr
hlt
ins
mov
cmp
outs
dec
dec
fsubr
mov
and
ret
mov
(bad)
aad
test
aaa
dec
shr
add
and
pushf
jecxz
fsubr
cmp
loope
repz
cmp
add
movs
inc
mov
add
jns
cmps
fwait
add
cmc
xchg
adc
mov
inc
test
inc
add
lea
dec
out
mov
mov
sub
xor
cmp
imul
xor
fisubr
dec
dec
ins
icebp
pop
xchg
mov
jne
stc
das
or
je
or
fstp
mov
mov
fs
push
jmp
inc
or
pop
sahf
mov
stc
xor
mov
cmp
lds
push
dec
dec
aad
pop
(bad)
leave
out
xchg
test
rcl
sbb
inc
pushf
xchg
xchg
cmp
sti
sub
inc
loop
movs
mov
inc
sub
sub
repnz
mov
mov
push
pop
rcr
iret
sahf
retf
mov
xlat
lds
loop
jno
or
test
int
push
fbld
jmp
es
cmps
sub
gs
mov
add
ret
sub
sti
fild
pop
dec
xlat
mov
lds
(bad)
push
pushf
int
pop
icebp
mov
fsubrp
call
inc
inc
out
scas
jns
ins
mov
inc
cmp
movs
cmp
push
ja
movs
mov
dec
fdiv
pop
push
cmp
cmove
jno
aas
mov
add
add
sahf
sbb
out
add
mov
cld
test
arpl
pop
aas
rep
mov
xchg
push
inc
jae
loopne
data16
(bad)
test
push
push
jp
sub
cli
xchg
fcomip
add
mov
outs
push
repnz
lods
dec
fisub
and
sub
or
pop
and
repz
aad
mov
jmp
push
loope
mov
cs
and
and
mov
xchg
sub
cmp
mov
jl
iret
mov
add
and
and
ins
repz
dec
sub
xor
xchg
sub
pushf
into
pop
push
or
test
push
mov
hlt
pop
test
sub
inc
in
inc
jmp
jecxz
inc
xchg
jg
xchg
mov
lea
fs
cmps
in
mov
add
outs
xchg
movs
adc
rcr
lods
rol
inc
mov
mov
loopne
addr16
jmp
ficomp
(bad)
and
dec
lock
add
cld
or
inc
xor
mov
outs
neg
imul
ret
mov
test
cld
outs
lods
mov
mov
inc
fwait
mov
aaa
not
add
aaa
ret
(bad)
test
loopne
xchg
jge
(bad)
call
pusha
jbe
jns
enter
mov
les
inc
rcr
(bad)
jmp
push
imul
outs
shl
popa
cs
mov
sahf
cmp
mov
mov
or
jmp
and
sub
pop
mov
add
jnp
loopne
outs
aam
ret
xor
push
movs
pop
xchg
mov
jne
(bad)
xor
mov
ins
sahf
inc
xor
test
call
mov
mov
stos
push
lock
sbb
jne
imul
outs
fisubr
push
dec
bound
xor
mov
cmp
call
sti
es
cmp
mov
fld
xchg
in
(bad)
test
jne
xor
lods
(bad)
popf
and
jle
cmp
dec
pusha
nop
std
jg
inc
ins
cmps
jb
sub
inc
push
jmp
push
sub
(bad)
push
sub
es
test
cmps
xor
fs
fnstcw
cdq
scas
(bad)
mov
lds
js
inc
rol
jle
sbb
popa
test
push
xlat
out
dec
mov
and
les
cs
add
hlt
call
call
jge
retf
and
inc
dec
and
pop
jmp
mov
ins
ret
aaa
inc
cmp
adc
xchg
in
jecxz
cmp
jae
in
and
add
xchg
add
rcl
out
nop
inc
dec
sti
mov
stc
jne
int3
sahf
cs
scas
iret
mov
and
mov
mov
push
add
fnop
(bad)
rol
and
add
and
jge
push
inc
add
and
mov
loope
retf
rol
xor
movs
jecxz
and
call
mov
mov
sbb
sub
fwait
icebp
cld
xor
add
pop
daa
lods
inc
xor
cmp
add
bndstx
pop
test
and
es
aaa
jns
sub
out
movs
outs
mov
cmp
xor
sub
fsubr
add
scas
pop
jecxz
jb
xchg
loopne
ja
lea
dec
call
adc
or
pop
mov
call
pop
mov
and
xchg
or
push
pop
mov
pop
rcr
cmp
ja
nop
out
and
pop
inc
pxor
aam
pop
hlt
jecxz
pop
add
xchg
lods
jmp
sbb
push
jno
call
push
pop
loopne
inc
pushf
jno
and
dec
ss
cld
mov
push
call
fs
outs
aam
dec
in
push
ret
push
(bad)
fsubr
imul
xchg
pop
es
xchg
fistp
xchg
bnd
cld
jae
mov
adc
sti
jnp
dec
hlt
adc
clc
or
call
mov
loope
imul
scas
xchg
bound
popf
fnstenv
mov
sub
mov
inc
movs
daa
push
sar
sahf
mov
retf
inc
sub
ret
push
mov
mov
xchg
mov
mov
inc
xlat
cmp
jno
cmp
pusha
jmp
jmp
jb
sti
add
mov
movs
mov
in
xchg
cmp
pop
lds
sub
cmp
fst
mov
mov
push
push
mov
xchg
pop
xor
push
and
push
mov
idiv
mov
je
jl
ins
dec
jb
rol
inc
mov
popf
pop
outs
les
inc
add
in
lock
loopne
mov
dec
xchg
jbe
pop
or
adc
ins
aam
mov
fdivp
pop
pop
(bad)
or
adc
cmp
stc
push
fcom
mov
(bad)
mov
call
mov
jnp
call
mov
mov
das
jg
popa
out
clc
adc
mov
and
fbstp
fisttp
jno
fisttp
cld
mov
push
repnz
cwde
pop
xor
nop
iret
dec
inc
stos
test
mov
out
and
fnstsw
(bad)
jmp
xlat
xchg
ss
mov
add
sbb
cmp
inc
xchg
ss
ins
bound
jb
in
and
cmp
mov
fnstsw
nop
or
ret
push
(bad)
push
cmova
(bad)
push
mov
stos
pop
dec
and
cmc
jae
and
cwde
mov
mov
inc
outs
mov
movs
dec
mov
movs
inc
cld
sahf
jne
pop
jno
pop
js
je
mov
push
pop
sub
in
jmp
std
jle
xor
fwait
push
pop
pop
adc
xor
pusha
inc
test
sub
add
aam
ror
mov
out
adc
mov
addr16
jmp
adc
stc
rcr
adc
sbb
pop
mov
inc
pop
sub
lock
xchg
sbb
pop
scas
ss
sub
and
aas
cmp
aad
sbb
ds
int
push
popa
movs
icebp
stos
ss
ja
(bad)
daa
push
and
aad
push
out
cmp
mov
pop
xchg
out
jp
jo
jb
dec
aas
cmp
fadd
into
or
adc
clc
or
test
jp
xor
inc
out
clc
mov
repz
es
fs
dec
adc
add
pop
ds
data16
loope
inc
ficom
inc
xor
stos
mov
bound
mov
sbb
fild
add
arpl
popa
jl
retf
ins
scas
rcr
jae
sub
jae
sbb
pop
cmp
ja
aas
pop
cmp
jmp
mov
outs
(bad)
gs
add
repz
fist
cdq
loopne
and
mov
fsubr
jns
les
sbb
jmp
jmp
jns
addr16
addr16
inc
hlt
sub
call
add
xchg
sbb
sub
outs
inc
cmp
fisttp
fisub
jg
pop
out
jg
xor
scas
das
in
mov
iret
rol
sbb
jns
jmp
pusha
in
xor
fnstcw
mov
jae
cmps
popf
daa
sbb
rcl
cmp
ret
mov
test
sub
add
ret
sti
mov
fwait
jg
mov
bound
push
aam
cmp
movs
inc
sub
or
jge
loop
stc
mov
fisttp
jle
mov
ins
imul
or
in
push
xchg
es
jbe
sub
add
call
xor
mov
in
inc
test
dec
and
jmp
scas
mov
xlat
mov
popf
fdivp
mov
sub
push
push
cmp
sar
cwde
pop
sub
pop
inc
loope
xor
and
jl
in
jl
mov
sbb
int3
mov
or
ins
cmp
push
gs
pusha
mov
push
adc
push
xchg
xchg
movs
nop
inc
leave
inc
lods
sub
add
test
lock
movs
mul
add
cmp
fcom
int3
add
test
xchg
ins
push
jae
add
in
jmp
lahf
jp
xchg
mov
cmp
or
daa
cmps
mov
call
lods
das
cmp
rol
dec
push
stc
or
ds
jns
inc
pop
inc
xchg
gs
icebp
xchg
(bad)
cmp
add
push
xchg
test
dec
dec
mov
mov
fisttp
fist
je
cld
add
cmp
enter
or
gs
in
cwde
mov
dec
test
pop
cmp
add
mov
sbb
fdivr
repnz
shl
sub
movs
pop
mov
lods
sbb
jle
arpl
ret
sahf
cmps
out
bound
les
xlat
das
movs
push
repz
test
mov
adc
dec
into
sti
xchg
add
int3
call
push
ror
out
sbb
xchg
xlat
sub
cmc
(bad)
mov
ins
ss
xchg
xor
lahf
and
ret
push
push
xchg
cwde
(bad)
addr16
and
loop
cmc
cmp
aaa
adc
lods
or
fcom
ds
xor
or
popf
mov
int3
frstor
push
movs
rol
fmul
push
sub
inc
jp
fdivr
sbb
dec
je
not
xchg
adc
and
jecxz
(bad)
js
push
push
xchg
cmp
mov
xchg
test
ja
fs
(bad)
cld
shr
or
repz
lods
cmp
fisttp
in
in
dec
and
push
cdq
xchg
jnp
or
adc
push
repnz
cmps
pop
enter
bound
pop
inc
dec
(bad)
scas
fld
aad
test
add
fldl2t
mov
pop
sub
ins
dec
outs
das
xor
stos
into
mov
xchg
mov
mov
pop
mov
scas
nop
or
pop
mov
or
sti
pop
hlt
sbb
sub
(bad)
sub
and
push
push
and
dec
mov
rcl
inc
xchg
aas
xchg
std
call
mov
sar
adc
sbb
dec
jb
(bad)
jmp
test
inc
adc
idiv
and
pop
mov
fcmovnb
aaa
sub
mov
or
call
scas
cmp
push
lahf
dec
je
cdq
jne
or
fnstcw
aaa
test
mov
pop
xor
push
mov
jbe
in
arpl
cld
inc
jg
pop
cmp
sahf
cmp
sub
pop
ss
jns
dec
mov
mov
sbb
test
xchg
pop
out
ret
out
sub
out
(bad)
xchg
jp
and
fs
xor
inc
pushf
mov
loop
fs
mov
adc
daa
fisttp
push
(bad)
fild
(bad)
call
stc
(bad)
sub
mov
js
mov
mov
push
cmp
cs
xchg
sti
loope
aas
push
add
push
inc
nop
scas
mov
nop
jo
test
lods
push
xchg
sub
add
clc
lods
inc
cmps
stos
iret
push
adc
or
pop
test
inc
mov
mov
outs
lds
xchg
dec
jmp
cmp
cmp
adc
sbb
mov
movs
retf
and
mov
jl
xor
dec
loope
(bad)
xchg
sub
cmps
neg
jl
fnstcw
mov
push
mov
xchg
idiv
mov
cmp
scas
or
aaa
adc
sub
add
push
sbb
nop
cmp
xchg
xchg
int
dec
push
sbb
fimul
out
sbb
daa
sar
mov
inc
movs
(bad)
in
inc
retf
retf
jns
ss
jmp
pop
jb
mov
jo
pop
xchg
sbb
stos
xchg
test
dec
fnsave
imul
ins
ret
in
xchg
jl
mov
out
adc
dec
inc
mov
dec
cmc
inc
adc
jnp
inc
mov
pusha
or
into
adc
jg
ja
add
or
call
aaa
test
stc
mov
or
mov
sbb
or
mov
mov
jle
mov
shr
jp
jmp
rcr
call
jns
xor
into
dec
retf
sti
dec
inc
jnp
mov
jns
dec
int
mov
pop
(bad)
scas
mov
mov
push
mov
dec
test
test
adc
sbb
stos
pusha
inc
pop
or
mov
jmp
in
test
lahf
xor
jg
pushf
and
pop
push
mov
test
mov
or
xor
pop
push
shl
pop
mov
pushf
mov
stos
cmp
ret
ror
mov
mov
push
adc
sub
movs
(bad)
fbstp
iret
(bad)
leave
sub
and
call
into
jmp
cli
mov
pop
jp
daa
and
inc
push
mov
jp
and
inc
loop
sub
and
shl
dec
pusha
imul
scas
inc
dec
adc
jb
pop
pusha
sbb
loopne
sahf
loopne
jmp
sbb
dec
and
mov
jbe
xchg
jmp
lock
xchg
mov
and
in
(bad)
clc
add
scas
mov
popf
jl
out
or
pop
inc
jge
(bad)
pop
icebp
lods
mov
xchg
retf
mov
(bad)
fbstp
out
(bad)
fwait
push
xor
lock
pop
test
mov
movs
imul
popa
inc
dec
sbb
push
mov
mov
dec
sub
xor
inc
fisttp
(bad)
mov
ja
jb
or
repnz
inc
dec
push
enter
mov
and
sub
pop
cmp
std
fs
test
lahf
mov
mov
xor
sbb
xor
fcom
pop
bound
mov
idiv
or
addr16
in
cs
stos
enter
in
mov
push
fwait
sub
and
cmp
test
dec
xlat
lods
aas
shl
add
clc
dec
lea
xor
cld
xor
dec
inc
mov
out
add
lahf
jecxz
pushf
div
mov
out
inc
test
enter
sbb
fsubr
xchg
jo
in
cmp
aaa
and
into
push
jp
leave
xor
mov
stc
fcmovne
xlat
push
pop
mov
pop
lods
jns
js
xlat
(bad)
icebp
jne
push
push
mov
dec
add
out
or
call
ds
jmp
movs
jno
jae
outs
js
shl
(bad)
jmp
es
fdiv
call
ins
sub
jo
sbb
ficomp
idiv
movs
jns
inc
xchg
mov
sbb
in
jbe
call
cmc
push
fs
xchg
dec
sbb
into
sub
imul
out
push
push
mov
sbb
out
clc
test
enter
pop
mov
pop
cmc
lods
in
push
repz
lods
loop
outs
jne
gs
out
sbb
pusha
jno
popa
sbb
xor
inc
out
rcr
and
enter
data16
push
ds
xchg
push
cmp
pop
pop
and
fidiv
push
sti
(bad)
mov
in
xchg
js
stos
rol
push
and
repz
adc
xchg
inc
adc
pop
mov
fldenv
push
enter
(bad)
gs
sar
or
lea
data16
or
retf
jnp
push
popf
popf
fidivr
rcl
hlt
fist
ins
mov
scas
jmp
call
(bad)
fwait
lea
inc
popf
add
xor
lock
lock
sub
ins
xor
stos
inc
dec
jb
cmp
adc
mov
and
and
mov
repz
mov
cmp
sti
adc
adc
xor
sub
bound
jbe
jecxz
mov
stos
test
push
pop
pop
sub
lea
iret
and
hlt
xor
sbb
test
ret
inc
add
cld
or
xchg
xchg
js
pop
clc
rol
retf
test
dec
pause
sbb
in
daa
(bad)
daa
inc
loop
mov
cmp
sub
imul
mov
ret
sub
enter
out
fistp
pop
add
ins
cli
dec
sbb
xchg
fucom
lock
xor
enter
xor
mov
xor
jno
xchg
and
adc
pusha
(bad)
sbb
lea
sar
mov
or
push
lock
cmp
cmp
aad
jecxz
sub
dec
jno
push
mov
fbstp
pop
fmul
inc
shl
jp
mov
pop
cmp
xor
jmp
ins
xchg
and
mov
jge
sub
scas
mov
inc
mov
movs
into
test
inc
mov
enter
jns
aas
push
push
cmps
or
or
idiv
sbb
cmps
mov
lods
cdq
push
push
sar
call
jae
aas
mov
and
inc
aam
pop
lods
rcl
pusha
push
shl
enter
fs
push
cmps
in
inc
mov
or
aas
ins
sub
rcl
and
and
push
test
xchg
mov
fnstsw
rcr
mov
and
dec
xchg
push
mov
imul
cmp
mov
cmp
mov
int
mov
fldcw
inc
push
push
inc
cmp
rcr
lds
test
push
jne
lahf
fdivr
push
cwde
idiv
fsubr
movs
ins
xor
fnstsw
push
sub
inc
pop
mov
and
sti
lea
pop
cmp
adc
fimul
cdq
mov
(bad)
adc
mov
inc
ret
scas
push
sub
loop
movs
shl
test
js
and
inc
jo
mov
mov
jmp
jmp
add
adc
stc
call
pop
jno
xchg
adc
pop
mov
fld
rcr
lock
(bad)
fistp
loop
mov
fmul
fild
cmp
inc
sbb
cmps
xchg
jne
mov
retf
pop
lods
lods
xchg
dec
aam
ret
add
xchg
movs
sub
aaa
and
arpl
mov
leave
test
adc
push
aam
hlt
lea
cdq
rcr
cwde
push
mov
int
cmp
mov
jo
adc
dec
sub
add
test
lds
jle
cwde
not
scas
in
dec
dec
push
scas
fisttp
fadd
jmp
adc
adc
xchg
cmp
mov
shl
cmc
mov
in
mov
or
jo
sbb
frstor
and
mov
xchg
cdq
pop
fwait
enter
(bad)
repz
call
cli
xchg
in
jge
mov
jmp
inc
or
mov
daa
pop
mov
cmp
sbb
mov
sub
and
clc
aam
shr
jns
inc
jns
jle
pop
test
mov
xchg
jbe
ficom
xor
sub
(bad)
nop
ja
test
ja
ret
mov
add
cwde
in
pop
mov
inc
sub
and
(bad)
imul
and
inc
ds
inc
icebp
outs
dec
pop
pop
cmp
gs
or
pop
jno
aaa
cld
pop
jg
push
(bad)
lods
aad
or
pop
out
(bad)
loope
(bad)
cmp
jo
pop
popa
mov
inc
mov
rol
es
pusha
xchg
inc
es
jmp
call
dec
xchg
in
out
jmp
fisub
in
(bad)
jbe
(bad)
sti
inc
sahf
sub
sub
outs
pushf
add
pop
pop
adc
jecxz
iret
int3
arpl
iret
fwait
xor
lods
fs
aas
sub
es
movs
sbb
push
popf
movs
sub
sti
sbb
push
ins
mov
jle
jge
dec
out
stos
inc
in
xchg
inc
push
addr16
dec
jns
xchg
scas
inc
jl
jno
mov
aam
pushf
mov
jg
sbb
sub
mov
shr
mov
aad
cmp
test
xor
daa
int3
cmp
jne
cmp
add
dec
(bad)
cs
imul
neg
mov
pop
popf
sub
test
push
ficomp
jle
(bad)
in
dec
mov
jl
jmp
enter
clc
shl
mov
lea
sti
inc
mov
pop
lock
xchg
pushf
daa
xlat
mov
pop
sbb
push
test
or
xchg
inc
xor
jae
ja
add
loop
inc
ins
out
mov
push
xor
repz
mov
cmp
nop
stos
aam
and
aam
iret
fxch
clc
pushf
push
and
aam
mov
xor
dec
test
stos
pop
sbb
(bad)
shr
cld
in
loope
adc
sub
imul
bound
add
test
aas
lods
jl
lods
int3
adc
mov
pop
pop
(bad)
(bad)
mov
xlat
jl
cmc
fsubp
stc
sahf
adc
sub
add
sub
imul
je
sub
mov
retf
mov
inc
fadd
test
cmc
ror
retf
rcr
push
and
mov
es
call
pusha
scas
xor
push
test
mov
mov
js
push
add
xor
in
mov
loope
pop
enter
arpl
mov
(bad)
cmp
ss
mov
cld
add
iret
in
retf
test
jno
(bad)
(bad)
mov
gs
outs
pop
pop
jp
rcl
cld
fcom
push
dec
test
imul
jge
stos
cmp
jb
ins
loope
mov
in
sar
and
cmps
sahf
jo
(bad)
adc
mov
call
mov
add
dec
xor
mov
outs
fbstp
cmp
movs
inc
pop
adc
out
push
adc
adc
add
retf
adc
jp
xor
stc
pop
add
jle
or
sbb
cmp
adc
ins
xor
add
jmp
xchg
pop
or
cld
sbb
test
rol
loop
and
xchg
pop
inc
shl
fimul
adc
jmp
mov
fld
mov
sbb
sub
test
mov
mov
movs
xchg
sub
dec
out
daa
jle
xchg
inc
and
(bad)
cmp
adc
jmp
push
movs
inc
test
inc
cwde
mov
or
out
vpunpcklwd
xor
jecxz
arpl
push
mov
sti
movs
mov
aas
sub
mov
xchg
mov
cmp
or
pop
push
or
int
in
fwait
scas
xchg
loopne
or
lea
clc
inc
push
fcom
out
out
push
or
push
jne
fsubr
pusha
arpl
jmp
fwait
das
int
xchg
adc
xor
ror
in
mov
idiv
cmc
cmp
push
and
add
mov
mov
repz
and
dec
cdq
mov
pop
add
stos
add
push
(bad)
mov
mov
jae
test
movs
inc
xchg
adc
inc
mov
call
mov
test
mov
in
shl
sub
mov
repnz
es
(bad)
cmp
or
imul
push
nop
adc
into
adc
cmps
or
jbe
push
arpl
cmp
cmovbe
ficom
mov
xchg
aam
jl
inc
clc
cmps
sbb
add
xchg
ds
test
sbb
stc
xchg
mov
in
push
ret
call
ja
outs
jl
rol
mov
icebp
cmps
pop
stos
pop
loope
pusha
sub
push
pop
out
and
dec
adc
push
ss
adc
cmp
ins
movs
add
pop
mov
sub
pop
pop
(bad)
(bad)
mov
lods
ret
hlt
or
out
inc
adc
not
and
fstp
mov
and
jae
sbb
clc
add
sahf
push
cdq
mov
ins
aaa
sub
mov
bound
enter
cli
pop
stc
ret
pop
(bad)
push
ins
mov
ins
mov
pop
xor
test
jb
adc
mov
sbb
icebp
or
xor
push
jbe
mov
inc
sbb
jno
outs
xchg
leave
retf
lds
inc
jb
daa
loopne
les
cmps
add
pop
sbb
jl
pusha
mul
dec
pop
inc
dec
xor
xor
add
mov
adc
stos
xchg
cmp
pop
lock
mov
xor
cdq
loopne
not
sbb
and
fld
mov
(bad)
enter
repnz
jp
inc
jle
daa
sti
mov
xchg
push
xor
outs
aaa
in
jge
ja
or
sahf
or
push
sub
jecxz
xchg
pop
push
and
ret
jno
mov
xor
cmp
sbb
nop
fs
or
fwait
jno
(bad)
cmp
adc
inc
sub
adc
mov
push
sub
push
push
lods
(bad)
xchg
into
push
scas
das
pop
push
inc
jp
pop
pop
ret
xchg
push
jno
ss
mov
xchg
mov
cwde
dec
int
test
stos
jmp
or
adc
enter
xor
(bad)
cmp
jb
imul
out
scas
ret
push
adc
lahf
mov
sub
fstp
das
cmp
mov
cmp
push
jmp
lods
add
cmps
cli
mov
xor
adc
push
sti
outs
xchg
cld
add
jmp
jo
mov
retf
retf
or
dec
int
jmp
ds
jnp
dec
popa
mov
test
les
fdiv
enter
inc
sub
ins
ror
push
fild
out
inc
dec
or
or
add
repnz
fs
addr16
sub
outs
sub
repnz
inc
mov
push
mov
sub
and
xor
lds
ret
add
mov
mov
jb
out
mov
inc
cs
cmc
jmp
cmp
xchg
add
and
jp
cmp
mov
out
pop
je
inc
ja
push
sahf
sbb
push
mov
ja
add
popa
add
xchg
jmp
(bad)
cmp
and
bound
fsubr
lods
jo
cmp
sti
pop
imul
icebp
movs
rol
pop
dec
ja
push
iret
and
inc
jl
jbe
ret
test
push
mov
cmc
pop
xchg
out
add
and
mov
pop
sub
scas
sbb
xor
sbb
stos
in
les
xor
jge
lods
pop
popf
inc
lock
cmp
fnstenv
aas
addr16
inc
xor
pop
ins
adc
pushf
mov
not
shl
test
add
cdq
int
cs
push
push
pop
dec
inc
cmp
or
cmc
sub
js
pop
aam
es
sbb
push
and
pop
les
add
adc
push
(bad)
jmp
xor
aaa
test
sbb
mov
push
xor
mov
fcmovne
mov
sub
jecxz
mov
enter
add
daa
lea
(bad)
addr16
mov
or
mov
loop
outs
or
ja
jmp
fld1
mov
repz
popa
(bad)
mov
imul
ret
jge
xchg
sbb
and
repz
daa
in
inc
or
out
add
push
loopne
aad
(bad)
stos
dec
mov
vsqrtps
fdivr
cmc
mov
jne
mov
pop
int
fisub
arpl
aam
outs
jo
push
lods
and
mov
movs
mov
adc
jmp
aad
scas
(bad)
mov
adc
(bad)
in
xchg
and
js
fisubr
mov
sub
lods
push
aam
ss
pop
add
jp
sub
nop
stc
xor
cmc
ins
xchg
xchg
sub
mov
lock
icebp
cli
jmp
ret
icebp
add
pop
fisubr
and
dec
rol
bswap
dec
lods
pop
iret
shr
sub
cli
ins
ret
popa
pop
cmps
cdq
or
cmp
xor
push
dec
inc
adc
jnp
mov
js
pop
popf
sti
into
jl
push
es
repz
xlat
adc
push
daa
dec
jl
sbb
mov
mov
popa
enter
add
leave
push
mov
outs
xor
mov
add
push
push
mov
imul
idiv
ror
dec
inc
push
jae
cvtdq2ps
jecxz
popf
push
(bad)
nop
mov
cdq
mov
aaa
mov
rol
cmp
inc
adc
idiv
xchg
ret
ins
retf
(bad)
mov
ins
std
fsubr
mov
inc
dec
pop
adc
in
call
inc
or
lock
adc
ss
sbb
inc
inc
inc
jl
lock
movs
out
push
scas
scas
mov
xchg
sahf
jecxz
mov
inc
add
cs
dec
mov
or
fnsave
dec
jno
retf
pop
and
ss
jecxz
pop
or
pop
leave
sbb
dec
xor
push
push
mov
or
xor
out
push
add
add
retf
into
mov
mov
arpl
add
push
test
ins
inc
xchg
lahf
call
fs
push
xchg
pop
ret
mov
sub
xor
and
cmps
(bad)
jae
mov
in
in
pop
cmps
push
stos
dec
and
pop
nop
in
push
and
ins
xchg
push
xchg
sub
(bad)
fidiv
(bad)
scas
leave
in
loopne
sub
add
outs
cmp
mul
es
add
ds
ins
call
sub
add
test
push
pop
sub
je
sbb
mov
scas
lds
jecxz
cdq
jns
je
sub
(bad)
mov
xchg
mov
inc
repz
inc
out
or
mov
fisubr
(bad)
iret
pop
sbb
jmp
dec
jl
and
mov
cli
pop
xlat
gs
ss
popf
mov
and
js
push
out
(bad)
xchg
icebp
sar
js
add
inc
repz
fst
mov
and
cmp
popa
repnz
fmul
dec
mov
inc
xor
mov
hlt
jne
in
mov
sub
es
jo
or
lods
outs
sbb
shr
mov
mov
icebp
push
mov
or
fwait
adc
sub
outs
jmp
retf
into
dec
jb
adc
mov
jo
ret
lods
mov
mov
push
mov
mov
pop
in
jge
retf
or
(bad)
or
in
adc
mov
add
mov
jb
clc
pop
sar
dec
clc
mov
xchg
les
test
cs
daa
jp
push
cmp
jo
bound
or
sbb
or
mov
xor
daa
add
xchg
push
dec
retf
sbb
mov
xchg
mov
jmp
push
rol
sahf
imul
sub
arpl
mov
js
mov
stc
sahf
jo
mov
xchg
test
dec
in
inc
mov
mov
fidiv
ret
mov
pop
scas
adc
sub
ret
sbb
cli
jge
aad
push
test
leave
or
int3
mov
adc
fild
fucomi
bound
xor
xchg
imul
jb
arpl
hlt
pop
cdq
repz
xor
out
jp
cmp
out
int3
movs
dec
jae
dec
sbb
imul
mov
mov
push
jg
push
stos
push
retf
aam
pop
jno
lds
adc
out
pop
movs
inc
push
scas
sub
or
pop
hlt
dec
push
mov
fild
ror
in
cmp
pop
fild
xor
test
(bad)
repnz
enter
cmp
test
dec
test
mov
adc
test
sbb
hlt
xlat
and
push
imul
or
jmp
neg
or
js
mov
jbe
dec
cs
or
popf
push
xor
(bad)
icebp
xchg
push
aad
push
arpl
add
lea
mov
imul
(bad)
das
ret
(bad)
push
hlt
(bad)
xor
mov
pop
dec
mov
adc
cmps
add
pop
lea
and
ss
mov
in
adc
(bad)
aad
jecxz
pop
mov
loop
dec
vmovq
and
jge
sbb
popa
adc
xchg
jg
call
hlt
and
dec
jle
jae
call
data16
cs
dec
xor
cmps
add
and
xchg
nop
scas
fbstp
mov
inc
sti
sahf
jo
popf
imul
dec
aaa
aas
add
aas
cmp
imul
xchg
repz
push
data16
dec
cmps
pop
dec
fst
shr
add
and
cmp
and
or
jne
ins
and
retf
outs
xor
push
mov
in
dec
movs
scas
mov
mov
out
call
mov
fcomip
xchg
fdivrp
ins
mov
mov
ret
add
and
inc
lds
fnstcw
mov
(bad)
rol
stos
dec
pop
inc
inc
sub
xor
xchg
mov
sbb
xor
js
fldcw
push
push
inc
jmp
push
aaa
das
sub
cmp
imul
dec
and
cmc
lea
lea
ret
inc
cmps
push
jmp
sub
shl
(bad)
fldcw
xor
mov
hlt
push
mov
mov
or
cwde
mov
cmp
pop
pop
movs
pop
push
or
out
lea
push
mov
dec
dec
dec
ret
sahf
stc
aas
retf
pop
adc
test
sbb
adc
dec
adc
daa
call
in
mov
dec
push
inc
ret
sub
adc
mov
(bad)
(bad)
xor
mov
jae
dec
cmp
ret
cmc
inc
les
inc
iret
or
xlat
xchg
add
int3
add
loopne
mov
or
loop
clc
je
push
mov
test
cld
imul
cmp
push
adc
ret
rcr
mov
pop
nop
sub
std
jb
push
xchg
adc
or
mov
icebp
push
mov
mov
int3
push
rcl
jno
scas
cs
push
cmc
xor
loop
test
adc
rcr
xchg
sbb
or
fs
and
mov
sbb
(bad)
retf
cmp
sbb
inc
mov
push
and
jb
adc
ja
sahf
out
js
sbb
push
xchg
test
add
lds
xchg
es
rcr
xor
inc
add
xor
shl
jne
inc
pop
repnz
jae
repnz
dec
pop
sbb
sub
mov
sub
sbb
es
out
outs
dec
mov
xchg
add
aaa
in
push
popa
cmp
daa
mul
repz
in
jl
cmp
dec
or
add
cmps
mov
ins
mov
jle
sbb
in
lods
and
adc
and
mov
ror
fadd
pop
imul
dec
arpl
xchg
sub
fisub
iret
xchg
ja
mov
(bad)
test
dec
push
cmp
dec
fs
arpl
sahf
xor
xchg
dec
rol
cwde
pop
stc
enter
cs
fdivr
push
nop
pmaxub
mov
pop
mov
imul
mov
ficom
xchg
call
dec
mov
js
dec
mov
sbb
mov
(bad)
call
retf
push
test
sbb
pop
gs
dec
dec
jp
les
stos
in
movs
stos
adc
jne
or
das
js
mov
xor
mov
cdq
xor
push
jmp
cld
outs
out
retf
in
in
fs
dec
mov
push
ins
sar
int3
pop
sub
ficom
mov
and
stos
cmc
mov
(bad)
pop
dec
push
jo
pop
stos
xor
add
(bad)
sbb
jb
repz
mov
das
mov
enter
movs
loop
sar
dec
cmp
and
sub
enter
retf
sub
sar
cld
jbe
popf
and
and
repz
jbe
sub
iret
jae
xchg
shr
adc
pop
mov
lods
mov
mov
inc
es
add
push
es
inc
ss
inc
lea
loope
aad
mov
int
inc
hlt
mov
pop
(bad)
push
jnp
pop
repnz
shr
jmp
xchg
cmp
(bad)
push
xchg
pop
mov
(bad)
cmps
jmp
sbb
fimul
pusha
(bad)
outs
mov
(bad)
gs
in
adc
retf
int
sub
outs
mov
outs
ds
cs
(bad)
outs
mov
iret
sub
scas
cmp
mov
xchg
or
movs
and
jg
scas
mov
pop
cmp
loop
ret
sbb
jb
xchg
cmps
sar
dec
inc
adc
mov
call
add
pusha
retf
(bad)
xchg
push
repz
add
sub
mov
repz
pushf
retf
mov
mov
inc
rcr
jb
js
fnstsw
xor
push
lahf
xchg
dec
dec
je
(bad)
or
sub
iret
adc
repz
sub
idiv
sub
outs
adc
test
adc
pop
mov
mov
mov
xchg
sub
imul
repnz
cmp
call
test
and
dec
in
stc
jno
cmp
push
int3
jns
adc
xor
mov
or
std
sbb
pop
push
dec
shl
cmp
mov
ins
pop
test
ret
push
or
lds
mov
iret
push
out
xor
mov
lahf
adc
je
fiadd
push
int3
neg
sbb
sahf
bound
xor
cmp
sar
aad
xchg
and
dec
xchg
cmp
mov
in
ds
or
pop
xchg
imul
jo
aaa
outs
sahf
pop
ins
or
mov
add
std
push
mov
aad
xchg
cld
adc
lods
out
sub
push
sub
pop
out
aam
fstp
stc
sar
out
mov
dec
bound
mov
dec
cmps
xor
mov
cmp
nop
test
adc
and
push
pop
push
sahf
pop
cmp
shl
and
mov
fsub
inc
pop
dec
iret
cmp
add
std
mov
(bad)
outs
mov
daa
dec
(bad)
or
or
mov
lock
icebp
shr
jae
dec
out
push
test
call
sbb
outs
in
mov
popa
cmc
aam
scas
cmps
shl
out
or
clc
sub
adc
(bad)
aad
xor
cmp
movs
loop
popa
das
xchg
les
mov
adc
fistp
sbb
data16
sbb
inc
in
fwait
mov
rol
sar
xchg
cs
sbb
cmp
cmp
pop
scas
iret
dec
sar
aad
jnp
jae
mov
push
hlt
dec
push
mov
push
add
mul
pop
cwde
xchg
sub
jae
cli
sbb
rep
mov
push
dec
sub
aad
mov
or
jp
bound
cwde
jl
mov
adc
cmps
pop
push
mov
in
ror
sbb
xchg
imul
sub
dec
jns
pop
xchg
inc
jge
jle
das
scas
lds
es
push
lods
movs
dec
pmaxsw
repz
ja
jne
dec
push
stc
jp
sar
in
aam
cmp
jg
sbb
push
pop
xor
xchg
and
pop
fs
(bad)
sbb
cdq
arpl
outs
in
cmp
cld
sub
gs
mov
or
mov
fld
sbb
mov
movs
mov
push
push
mov
mov
mov
(bad)
mov
imul
sbb
or
push
dec
dec
(bad)
ja
ret
bound
cmc
js
gs
cwde
dec
adc
cld
pop
leave
test
cmp
pop
jecxz
jecxz
fisub
out
mov
into
out
sahf
arpl
push
fst
fwait
bnd
ins
in
jecxz
inc
jns
icebp
mov
push
push
xor
sbb
in
add
aam
int
cli
inc
cs
cmp
(bad)
in
cmp
int3
aas
sub
sbb
js
leave
xchg
xchg
jnp
cwde
inc
add
mov
outs
push
arpl
mov
stos
xor
inc
mov
adc
lahf
jmp
jecxz
mov
sub
pop
and
out
adc
pop
sub
pop
and
or
sub
adc
bound
sbb
test
xchg
push
inc
out
popa
push
pop
dec
iret
test
lahf
and
int
aaa
pusha
mov
ja
movs
jmp
push
sbb
daa
bound
es
pop
sbb
ds
xchg
adc
push
jne
sbb
xor
aad
pop
sbb
pop
std
fwait
in
or
cmp
push
or
jno
or
inc
out
pop
out
mov
xchg
and
push
je
inc
and
pusha
lea
leave
in
shr
loope
call
mov
jge
mov
stos
jp
cwde
mov
dec
mov
hlt
xchg
bound
cmp
dec
pop
push
push
pop
fsub
ins
xchg
push
shl
fcomp
arpl
push
ins
xchg
sbb
mov
cmps
and
loope
pop
call
pop
in
mov
(bad)
xlat
(bad)
mov
ret
pop
arpl
jbe
scas
sub
mov
adc
aad
xchg
mov
push
sahf
ins
lock
adc
adc
cld
cmp
push
lock
inc
test
adc
mov
daa
inc
fild
in
(bad)
pop
push
push
outs
movs
xor
or
xor
sbb
push
mov
ret
imul
fs
pop
ins
loope
cdq
or
and
jecxz
dec
pop
imul
adc
cld
rol
mov
push
movs
leave
jb
cmc
in
inc
cwde
cmp
adc
ss
sbb
pop
jl
push
mov
jns
in
and
(bad)
mov
stos
movs
ror
adc
cmp
sub
jp
jnp
and
xchg
sub
ds
jb
mov
or
imul
mov
sar
jmp
test
or
adc
sti
xchg
and
out
xchg
add
cmc
rol
pop
loopne
fst
data16
mov
addr16
cli
(bad)
repnz
jl
sbb
dec
je
outs
pushf
mov
mov
push
push
mov
xor
sub
stos
sahf
inc
dec
call
je
retf
(bad)
mov
cdq
test
jp
jmp
out
loopne
std
xor
dec
sub
cdq
leave
adc
jno
call
into
push
mov
mov
mov
mov
dec
movs
mov
xlat
hlt
cmps
repz
xchg
shr
cwde
cwde
addr16
and
pop
aam
adc
cmc
lahf
in
mov
xchg
scas
es
add
adc
test
jbe
scas
nop
push
adc
bnd
cmp
(bad)
mov
jns
inc
and
ja
push
inc
sbb
pop
shl
adc
out
scas
mov
movs
sub
push
jmp
push
or
jge
lods
and
add
mov
ins
in
sub
mov
mov
sti
scas
inc
outs
js
xchg
xchg
push
outs
xor
fs
scas
or
(bad)
cmps
(bad)
int
sahf
mov
mov
jno
std
shl
jle
out
push
lods
ins
inc
fwait
(bad)
ds
retf
stos
xor
in
loope
inc
mov
mov
and
fistp
sbb
dec
mov
add
sub
call
out
(bad)
mov
dec
dec
(bad)
aam
daa
xor
jl
mov
std
ds
mov
out
cwde
sub
nop
push
dec
xchg
data16
cmp
icebp
loope
mov
js
adc
inc
and
or
mov
push
sub
or
leave
add
addr16
xor
or
adc
cwde
fisub
idiv
into
sub
out
je
pop
inc
sub
and
xchg
outs
icebp
push
shl
sbb
or
frstor
addr16
mov
or
jbe
mov
mov
addr16
push
enter
shl
jp
test
ja
(bad)
(bad)
ja
and
jmp
sub
test
js
jae
inc
sbb
mov
xor
ret
or
sub
mov
je
in
lods
call
out
xchg
test
rcl
ins
adc
sbb
lods
mov
(bad)
jno
push
xchg
cdq
sub
(bad)
ins
sbb
xor
enter
add
inc
jecxz
fwait
xchg
popa
rol
shr
mov
js
ss
or
add
gs
mov
or
stos
xchg
sub
enter
jo
out
(bad)
int3
int
jge
mov
dec
inc
stos
mov
cs
jp
jno
mov
xor
(bad)
mov
push
(bad)
mov
and
jbe
jae
mov
cmp
or
xchg
stos
jns
(bad)
lea
mov
xor
gs
sub
push
aad
je
jo
daa
sbb
mov
push
jle
mov
and
jmp
das
jmp
std
stos
out
frstor
retf
icebp
sub
fwait
cld
cdq
inc
push
pshufw
movs
mov
fwait
imul
sbb
push
addps
cmp
enter
push
daa
outs
xchg
in
sub
xchg
xchg
pop
repnz
stc
lods
jbe
aaa
ss
push
loope
aaa
shl
mov
repz
call
adc
out
sti
imul
pop
xchg
mov
mov
xor
xchg
enter
xor
arpl
jp
jo
out
mov
sbb
mov
jmp
loopne
dec
fisttp
sbb
(bad)
mov
mov
sub
sub
int
loope
jbe
xor
mov
sahf
mov
mov
sbb
pop
repnz
xchg
sbb
movs
sbb
jge
adc
add
add
pop
stos
neg
xchg
lods
cmp
stc
adc
adc
xor
je
push
xor
push
daa
int3
nop
fwait
retf
fisubr
popa
aam
mov
mov
scas
sbb
wbinvd
lock
sub
cmp
(bad)
leave
mov
sti
xchg
rep
sar
sub
arpl
aas
mov
addr16
or
ss
imul
sub
std
ret
shl
jmp
lods
lods
jle
push
scas
push
cmp
test
call
push
pop
pop
xchg
add
push
int
pop
cmps
not
out
sbb
inc
xchg
sub
xchg
sub
sub
pop
xchg
adc
int
hlt
mov
adc
pop
test
into
fcos
test
adc
xchg
mov
dec
jmp
sub
cmp
dec
xchg
rcr
arpl
xchg
neg
out
push
loop
sub
(bad)
jl
nop
lds
jo
and
das
mov
jnp
ja
jne
jle
and
and
(bad)
es
mov
push
inc
add
pop
inc
xchg
mov
push
sbb
xchg
movs
(bad)
int
std
sahf
in
dec
push
pop
add
test
mov
cmps
sbb
inc
push
jl
xor
or
inc
jmp
ds
jns
cs
ja
clc
call
cmp
int3
add
push
mov
aad
gs
test
outs
mov
adc
ss
push
mov
mov
jmp
in
dec
shl
mov
loop
jb
cld
cs
jnp
div
jae
in
inc
(bad)
jmp
in
ins
stc
mov
mov
jp
mov
out
jg
jbe
iret
inc
iret
int3
mov
test
xor
cmps
in
cmp
xchg
xor
inc
dec
push
aam
hlt
and
jmp
sbb
jl
sub
jmp
push
pop
cld
jmp
sbb
movs
jb
xchg
fnstcw
test
iret
call
inc
sbb
sar
mov
push
rcr
jns
sti
loop
mov
call
imul
jb
mov
sub
sbb
fsubrp
out
int3
in
xor
mov
cmp
push
xlat
hlt
jno
pop
and
xchg
ret
xchg
ds
lea
or
sbb
test
xchg
(bad)
(bad)
pushf
fisubr
sub
and
jno
pop
jns
je
in
dec
xchg
into
adc
leave
adc
ret
ss
cs
icebp
test
jae
push
cli
mov
mul
fistp
or
out
mov
mov
(bad)
jb
in
fidivr
push
pusha
int
mov
jle
outs
das
push
and
fisubr
daa
out
jae
call
movs
mov
hlt
push
icebp
add
pop
mov
push
movs
hlt
push
cmps
and
dec
mov
add
push
gs
cli
cli
stc
mov
and
or
es
fistp
ds
(bad)
mov
daa
or
inc
push
daa
loopne
xchg
adc
sub
lods
int3
xchg
pushf
(bad)
loope
sub
mov
jmp
xor
aas
push
jb
iret
repz
loop
pop
js
jl
sub
les
xlat
test
xor
xchg
stos
jmp
pop
lods
ss
and
jle
xor
xor
xchg
jp
loop
shl
test
push
les
aam
scas
jmp
cmp
(bad)
xlat
ins
dec
push
sub
retf
ficom
inc
xchg
jbe
mov
dec
mov
or
jle
and
das
jp
xor
push
mov
push
push
add
add
cmps
cmp
stos
rcr
outs
call
dec
rcr
pop
ins
cmp
pop
(bad)
outs
fcomip
xchg
pop
repnz
xor
sub
or
sub
sahf
mov
(bad)
hlt
fisttp
push
push
adc
mov
mov
sbb
pop
bound
pop
(bad)
cs
jp
push
adc
scas
imul
push
dec
clc
sub
or
jnp
int3
retf
xor
(bad)
or
and
fwait
call
pop
das
sbb
xor
lea
das
cmps
aas
outs
pushf
fisub
dec
repnz
xchg
in
add
fwait
adc
pop
sbb
dec
jb
pop
scas
push
lock
sbb
test
mov
xlat
cwde
rcl
xor
push
dec
cli
mov
in
test
cli
repnz
std
jmp
imul
jnp
pusha
xor
pop
clc
pushf
sar
loop
fstp
push
arpl
cmp
jle
ins
hlt
sbb
cli
in
inc
pop
cli
inc
push
xchg
cdq
or
aas
jmp
mov
xchg
rol
dec
xor
push
loopne
mov
add
outs
mov
mov
push
ficom
dec
and
mov
aas
or
pop
cmp
cmc
into
mov
imul
movs
inc
fistp
cmp
lods
jmp
out
call
mov
daa
adc
xchg
cmp
lea
jns
mov
add
push
pushf
cmp
dec
loop
mov
adc
out
loopne
mov
push
sbb
pop
sub
pop
mov
or
add
hlt
xor
stos
jg
and
cs
or
mov
shl
fild
out
xlat
cmps
stos
xchg
addr16
bound
pop
(bad)
xchg
mov
movs
sub
ror
int
mov
xchg
div
jecxz
sti
push
popf
cmps
push
jno
jnp
shl
lods
fdivrp
mov
dec
pop
add
fsubr
sbb
sbb
sbb
mov
in
cwde
shl
aaa
add
and
outs
out
ds
adc
aad
dec
enter
out
gs
jp
lahf
push
sar
int
std
and
and
je
xor
push
pusha
sti
outs
loop
ds
addr16
jns
mov
and
sub
out
femms
jae
ret
pop
ror
mov
push
aas
push
sbb
repz
ret
pusha
jbe
jmp
mov
jnp
cli
ret
es
jmp
adc
(bad)
and
xchg
xor
xchg
movs
fwait
lock
imul
loope
imul
xor
sbb
ja
sbb
cmp
lahf
mov
icebp
mov
push
mov
pop
cmp
mov
xor
inc
fisub
hlt
push
cmp
push
sub
xor
scas
mov
mov
dec
or
xchg
das
arpl
shl
ds
fstp
xlat
fld
mov
ins
and
out
popf
mov
jno
or
mov
inc
inc
push
mul
push
in
(bad)
stc
(bad)
xchg
push
sub
mov
dec
ja
jle
ds
arpl
leave
mov
inc
call
movs
iret
movs
stos
sbb
(bad)
jge
xor
aam
lds
jns
aam
fnstcw
lock
cmc
dec
mov
dec
xchg
loop
lea
repz
mov
inc
sub
xchg
adc
add
gs
adc
fs
inc
or
scas
adc
out
mov
adc
fs
and
scas
add
xor
(bad)
movs
jecxz
fcomp
add
pop
(bad)
fistp
xor
loopne
test
push
sub
jle
jns
in
xor
mov
push
dec
jecxz
imul
mov
push
out
push
lds
out
dec
into
mov
mov
cld
ror
push
add
mov
rcr
pop
sub
jmp
fldenv
(bad)
mov
in
(bad)
cmps
push
lods
gs
cmp
add
repnz
pop
js
sti
push
sub
jno
jle
gs
imul
fbstp
mov
stos
push
xchg
aas
xchg
jg
int3
mov
mov
popw
sub
call
scas
je
or
adc
xor
push
fdiv
lods
addr16
push
scas
dec
cmp
or
add
ins
js
loope
cmps
add
imul
mov
push
repz
nop
pusha
jg
lahf
outs
inc
adc
popf
jo
psubusw
inc
es
mov
cld
es
fsubr
cli
aam
sti
sub
sti
cli
pop
rcl
pusha
imul
jb
scas
dec
dec
leave
mov
aaa
push
cmp
push
and
imul
(bad)
out
push
mov
sahf
mov
and
adc
sbb
push
cmp
pop
jae
mov
add
dec
pushf
cmp
push
jno
xchg
cmp
cmp
data16
cli
test
push
cmp
idiv
sbb
mov
cli
in
stos
ja
stos
jb
sbb
cwde
(bad)
cmc
inc
dec
lds
jne
fdiv
jmp
sub
sti
fwait
mov
popa
dec
std
jb
cmp
clc
sub
jb
sbb
inc
rol
and
test
dec
pop
and
adc
and
cld
mov
add
xchg
xor
pusha
cmp
jnp
out
mov
or
or
test
jns
mov
and
add
nop
and
shr
xor
or
mov
add
gs
xor
fisttp
push
mov
and
jnp
jmp
mov
push
dec
ret
dec
sub
or
int
pop
xor
in
pushf
call
into
adc
adc
pop
and
cwde
push
pop
cwde
jcxz
retf
cdq
and
xor
cmp
cmps
sbb
push
pop
xchg
outs
push
daa
cmps
add
push
clc
jmp
add
imul
ss
jmp
mov
mov
mov
push
clc
test
ror
repnz
ins
push
lock
adc
test
xchg
into
outs
add
push
loop
lock
test
cli
cdq
pop
pusha
inc
pop
clc
adc
dec
in
cs
mov
loop
test
cmp
icebp
mov
(bad)
(bad)
inc
sbb
std
movs
jle
sbb
fmul
pop
vphaddwq
sbb
aas
arpl
loop
xchg
xlat
xor
das
push
xor
fidivr
lea
(bad)
push
lea
xchg
dec
sbb
sbb
or
fimul
movs
and
mov
nop
push
and
jp
sub
imul
lahf
shr
js
xor
lock
jnp
dec
mov
push
les
call
push
dec
inc
rcl
mov
inc
xchg
int3
jb
cmp
shl
cdq
mov
xchg
jns
clc
adc
daa
aam
mov
in
or
lea
dec
out
cwde
sub
aam
aaa
or
adc
mul
push
lods
cmp
push
movs
xchg
jmp
mov
scas
xchg
inc
cld
inc
idiv
cmp
shl
pop
adc
mul
dec
(bad)
imul
inc
adc
std
popf
push
inc
mov
fmul
outs
mov
popf
fdivr
int
fidivr
xlat
push
cmp
pop
cmp
dec
fldenv
fild
or
mov
sub
push
(bad)
(bad)
in
mov
stos
push
add
enter
fs
pop
data16
sub
sbb
xchg
pop
add
lds
push
jge
popa
clc
adc
iret
out
xchg
scas
imul
into
cdq
fistp
dec
xor
dec
imul
ficomp
mov
int3
nop
xchg
jle
fldcw
mov
int3
enter
jl
pop
mov
or
leave
rdmsr
cld
mov
cmp
arpl
xchg
enter
mov
fdiv
and
test
hlt
xchg
out
int3
xor
pop
aam
xor
and
std
cmp
sub
loopne
xor
ror
in
ror
cmp
pop
mov
loopne
ret
shl
lea
jno
jecxz
jge
es
fcomp
pop
cli
stc
fcmovnu
rcr
loop
(bad)
loopne
(bad)
aad
push
out
aam
cmp
add
and
iret
dec
inc
int
lods
jmp
push
sbb
rcr
push
pop
inc
and
mov
mov
repz
icebp
xchg
mov
std
jne
jmp
and
mov
std
add
dec
mov
jle
mov
inc
mov
vpshlb
xlat
xor
sbb
dec
aas
in
cmp
aas
sbb
dec
ror
mov
push
sub
mov
data16
xchg
jp
out
jno
lods
mov
(bad)
mov
sbb
lods
jmp
add
js
xor
es
arpl
add
xchg
test
mov
inc
add
sub
outs
sbb
push
adc
mov
div
xchg
push
cmp
fldenv
bound
lahf
jg
pop
adc
rcl
or
sub
loope
jg
mov
cmp
cmp
nop
jne
lds
xor
std
into
mov
call
xchg
or
mov
inc
sbb
ret
das
mov
push
ins
(bad)
stc
xor
cmp
das
dec
add
inc
ja
mov
imul
add
lock
rcl
test
das
and
call
aad
gs
les
sbb
xlat
leave
(bad)
jmp
xor
ja
pop
stos
int3
fdiv
inc
fist
or
mov
and
cmp
mov
inc
(bad)
shl
movs
push
mov
push
push
out
dec
push
pop
mov
iret
xchg
cmps
rcr
mov
jnp
fisub
mov
std
ins
jns
xchg
inc
push
cmps
pushf
scas
iret
mov
mov
sbb
hlt
add
fs
xchg
aam
cdq
xor
test
ror
sbb
icebp
inc
aaa
xchg
pop
xlat
shr
nop
mov
inc
sub
fucomip
(bad)
movs
xchg
ja
jnp
mov
xchg
push
push
mov
mov
and
ins
and
popa
retf
int3
inc
rcr
dec
adc
in
push
daa
push
mul
mov
mov
ror
retf
mov
out
dec
add
mov
and
sub
dec
arpl
sbb
inc
and
cli
inc
shr
and
ret
adc
mov
inc
mov
(bad)
(bad)
clc
adc
adc
fmul
sub
add
mov
jecxz
push
repz
(bad)
or
cmp
daa
je
sub
je
retf
push
push
outs
cmp
fidiv
xor
sbb
pop
push
sub
xchg
sahf
mov
jge
cmp
push
cmp
nop
(bad)
scas
mov
es
xchg
pop
ja
jmp
mov
push
jno
jo
and
add
mov
imul
lock
sub
test
lds
push
xor
mov
js
imul
cmc
cmps
jbe
test
mov
mov
xor
and
retf
cwde
mov
aaa
push
retf
dec
add
add
rol
imul
nop
mov
loop
lock
ss
and
mov
mov
adc
(bad)
sbb
out
mov
or
xor
bnd
mov
repz
retf
mov
xor
mov
sbb
das
pushf
jno
loopne
xor
in
pushf
xor
sbb
jo
adc
test
out
mov
ins
call
test
pop
into
mov
cmp
hlt
iret
out
int
stos
(bad)
aad
icebp
cdq
pop
imul
test
jno
not
push
mov
sbb
and
(bad)
cmc
or
movs
push
imul
push
inc
xchg
shr
cmps
xlat
popa
cmp
cmp
sbb
jno
lods
jnp
mov
mov
fsub
dec
and
popa
lods
inc
cwde
cdq
push
or
sbb
jge
xchg
cmps
shl
test
or
mov
(bad)
ins
int
or
mov
jg
scas
(bad)
(bad)
cmc
shr
leave
mov
or
je
ins
mov
out
xchg
sub
outs
mov
inc
mov
and
pop
lds
sub
dec
dec
inc
test
(bad)
mov
and
cmp
cmps
sub
(bad)
fstp
call
jmp
add
sub
les
adc
adc
test
pop
cmc
xchg
jb
lods
xchg
(bad)
or
xor
mov
add
stos
xchg
pop
xor
retf
sbb
cmps
es
adc
sub
ds
mov
ins
xchg
outs
ror
push
jnp
ins
push
out
xchg
jl
jl
sub
sub
push
cdq
adc
mov
jmp
shl
push
test
jae
xchg
xchg
xor
pop
fnstcw
sub
or
jmp
popf
sub
imul
push
and
call
mov
int
retf
shr
jmp
out
mov
ins
dec
jns
and
mov
mov
jge
adc
cmp
pop
out
push
call
mov
int
add
fistp
or
lds
pop
nop
mov
scas
aas
cmp
or
ja
scas
mov
mov
(bad)
(bad)
sbb
arpl
push
add
pop
into
or
sti
add
mov
inc
add
inc
loope
xor
call
test
pushf
mov
mov
js
fisub
bound
cmc
mov
in
sub
add
add
sub
sti
loop
pushf
push
shr
dec
sbb
cld
les
pusha
mov
xor
mov
pop
mov
push
inc
jmp
push
pop
nop
xchg
sub
mov
push
jmp
rol
mov
pop
loope
test
fwait
sub
daa
ins
sti
add
retf
mov
mov
mov
xchg
leave
adc
call
lods
and
adc
dec
outs
mov
pop
int
(bad)
fiadd
fcmovb
nop
bound
cmc
fistp
addr16
jnp
or
xor
leave
pop
lods
push
push
in
jmp
hlt
(bad)
cmc
stos
icebp
ret
xor
clc
inc
mov
rcr
call
movs
mov
cmp
or
push
pop
lahf
shl
jmp
test
idiv
(bad)
jno
jg
sbb
fidivr
sbb
lods
xchg
mov
mov
dec
mov
sti
and
and
sub
fst
lea
inc
retf
lahf
mov
ror
fistp
adc
aam
xlat
lods
hlt
(bad)
jo
mov
dec
pop
inc
or
xlat
dec
xchg
jp
rol
aaa
mov
test
adc
xchg
arpl
add
(bad)
cmp
cmp
inc
movs
das
aad
xor
mov
fstp
push
stos
adc
sub
inc
inc
xor
xchg
mov
add
ins
jb
pop
jp
and
cmp
ret
inc
fmul
sar
ins
je
xchg
mov
or
movs
jl
mov
scas
fucom
jbe
fs
jle
xor
test
mov
mov
fnstsw
pop
into
stos
adc
adc
cmp
adc
std
aam
rcl
inc
sub
push
mov
(bad)
pushf
sub
inc
xor
aas
js
jb
inc
inc
jne
jbe
imul
and
push
inc
rol
cli
iret
adc
xor
fwait
adc
pop
clc
dec
inc
dec
pop
adc
sar
and
hlt
out
sar
ja
and
sbb
or
(bad)
xlat
gs
retf
or
push
rol
mov
dec
push
sub
pop
shl
mov
(bad)
mov
std
jo
aad
xor
and
adc
mov
mov
cmps
or
inc
enter
lahf
mov
push
sbb
stos
cld
div
mov
mov
ret
jmp
xchg
imul
jns
mov
imul
fist
je
dec
mov
cmc
aaa
and
(bad)
daa
rcr
aas
(bad)
jae
movs
xchg
push
lahf
adc
add
es
imul
dec
push
idiv
dec
xchg
jle
sbb
ret
aad
and
shr
or
pop
push
xchg
fsubr
arpl
addr16
xchg
dec
sbb
ja
push
cvtps2pi
les
sar
adc
aam
rcr
test
mov
fwait
xlat
jae
dec
out
jno
add
dec
add
add
test
add
cwde
(bad)
jle
inc
in
xchg
in
xchg
loope
and
sub
mov
js
mov
inc
mov
dec
aam
pcmpgtw
mov
jne
ja
inc
aaa
push
je
and
es
cmp
jge
xchg
xchg
mov
pop
in
es
aas
mov
push
mov
test
sar
sub
mov
in
or
call
das
adc
aas
adc
mul
mov
mov
mov
pop
xchg
mov
int3
daa
ss
inc
push
mov
cmp
leave
add
(bad)
jno
int3
cdq
dec
cli
mov
mov
or
and
cmp
inc
ss
mov
add
inc
pop
cmps
cli
out
call
rcr
fcomip
sahf
add
dec
cmp
repnz
or
retf
neg
add
xchg
arpl
dec
mov
fst
(bad)
in
adc
clc
or
aaa
lods
leave
jns
add
pop
stos
fimul
pop
popf
jge
adc
add
fstp
pop
imul
mov
and
and
cmp
pushf
mov
ds
push
xchg
cmp
dec
inc
sar
xor
and
sub
outs
sti
fstp
dec
dec
mov
addr16
push
mov
inc
jecxz
pop
call
jp
push
mov
mov
fidivr
ret
div
and
push
ret
call
or
in
mov
int
repz
jl
pop
push
pop
jp
enter
iret
or
je
pop
jo
pusha
jg
cmp
lods
jg
rcl
ret
inc
std
repnz
sti
jns
push
mov
adc
cwde
cdq
add
mov
pop
test
cwde
xor
lock
loop
int
jp
sub
mov
int
rcl
add
or
inc
std
stc
pop
dec
mov
leave
daa
cmp
xchg
add
push
lods
push
adc
das
cmps
icebp
or
and
cmp
sahf
sub
and
xlat
dec
xor
xchg
jg
ret
adc
inc
ret
int3
popa
(bad)
jp
ror
sbb
pop
sbb
mov
nop
pop
in
test
pop
leave
imul
addr16
dec
jmp
jns
cs
xchg
loope
retf
stos
mov
retf
jb
mov
jmp
gs
cmps
ja
scas
pushf
retf
repnz
jp
addr16
jns
stc
sub
dec
out
outs
fs
movs
sahf
xchg
cmp
mov
sti
cmp
sub
mov
test
mov
pop
cmp
xchg
xor
aad
popf
xor
xchg
jmp
test
jbe
adc
mov
adc
add
and
and
outs
sub
int
clc
les
mov
in
push
and
pop
rcl
ret
outs
gs
into
push
pop
call
sub
adc
sti
mov
repz
fimul
call
mov
sbb
jp
retf
push
(bad)
mov
loop
pop
add
adc
xchg
leave
stos
or
loope
nop
in
sbb
and
adc
(bad)
adc
out
sub
sbb
jae
enter
mov
sahf
faddp
repz
test
xor
mov
or
mov
fisub
mov
movs
or
(bad)
cmp
fisubr
movs
pop
ficom
sahf
adc
push
imul
mov
ficomp
out
ds
fldenv
rcr
sbb
out
sbb
xor
cmp
xor
in
sbb
call
popa
in
int3
cmp
les
jle
and
xor
pop
and
xchg
mov
push
push
stc
int
mov
push
pop
or
loopne
mov
dec
out
mov
addr16
fcom
pop
outs
mov
xchg
lock
xor
stos
mov
cmp
ficomp
fldenv
cmc
xor
scas
ror
add
ja
es
or
jecxz
test
(bad)
shr
imul
cli
rcl
imul
fbstp
test
ficom
and
pop
mov
mov
push
mov
loope
dec
aam
push
push
retf
ss
hlt
lea
inc
movs
test
mov
xor
test
ins
mov
rcl
pusha
cmp
cmp
or
add
in
push
xrelease
pusha
test
mov
mov
ss
add
ja
dec
and
dec
call
pop
or
leave
xchg
je
ins
lea
movs
lods
aaa
mov
ret
push
xchg
add
(bad)
inc
enter
scas
pushf
sub
pop
or
push
aad
mov
loopne
int3
mov
outs
dec
mov
test
std
add
mov
imul
rcr
sub
sub
pop
mov
pop
xchg
jo
push
rcl
out
xchg
and
mov
retf
iret
mov
push
lods
sbb
dec
sti
add
(bad)
div
cmps
aam
push
fxch
sub
popa
sbb
(bad)
xor
sub
add
aad
mov
ss
sbb
retf
xchg
enter
jno
into
sbb
jg
inc
dec
icebp
in
fist
mov
mov
sbb
dec
movs
cmp
es
and
stc
push
loop
popa
shufps
lock
inc
inc
and
push
retf
out
enter
retf
jne
jbe
popa
out
scas
xchg
cmp
or
push
mov
xchg
xchg
mov
(bad)
fbstp
in
(bad)
icebp
gs
mov
pop
inc
xlat
add
nop
(bad)
icebp
(bad)
pop
inc
xor
xchg
sbb
xor
push
sub
sub
or
cwde
stos
mov
adc
dec
push
out
aad
mov
lock
sbb
not
dec
imul
sub
jbe
add
mov
enter
dec
sub
stos
add
or
fstp
adc
jp
retf
dec
cmc
or
or
mov
fs
and
ficomp
push
loop
jmp
pop
or
cmp
mov
dec
mov
push
out
cmp
mov
ret
int3
rcl
stos
jl
cmp
lock
lahf
sbb
fdivr
ja
mov
ja
int
scas
es
jp
iret
adc
jae
fsub
imul
movs
push
pop
xor
mov
push
daa
call
cmc
inc
and
or
push
cmps
and
cmp
jmp
sub
lea
sbb
dec
jecxz
addr16
das
dec
je
dec
or
mov
xchg
and
pop
adc
sub
and
pushf
push
mov
sub
movs
mov
dec
xchg
push
icebp
or
bound
xor
jp
jo
sub
xchg
std
cmp
mov
and
xor
enter
add
out
push
movs
leave
or
dec
mov
mov
xor
scas
push
shl
pop
adc
inc
div
cmp
fdivr
mov
sti
inc
addr16
jnp
xor
dec
pop
mov
inc
mov
push
in
lods
fisubr
int3
int
jl
xchg
or
dec
aad
rcr
nop
adc
and
mov
mov
call
push
dec
add
or
imul
shr
sbb
in
pushf
scas
add
sbb
outs
leave
pusha
sbb
fiadd
stos
fisubr
int
fild
cwde
int
push
sbb
cmps
lods
inc
imul
test
ins
(bad)
ror
cmp
lahf
jnp
fadd
sti
lahf
inc
dec
or
iret
pop
rcl
pop
arpl
cmp
call
es
add
jmp
(bad)
shl
xor
inc
fnstcw
xchg
xlat
fs
xor
je
sub
dec
fcmovnbe
xor
adc
cli
std
pop
xchg
sub
test
or
aaa
dec
arpl
and
or
aaa
xchg
and
fstp
xchg
test
(bad)
jae
dec
jmp
mov
inc
xlat
mov
in
test
loop
xor
push
push
sbb
loop
std
or
cmp
pop
fsub
scas
and
cmc
scas
xor
or
or
adc
mov
jge
mov
and
loope
icebp
ret
mov
js
adc
int
or
scas
fistp
sar
mov
(bad)
xchg
mov
xchg
xor
dec
sahf
mov
push
or
sbb
xchg
rcr
aam
push
fild
cmp
out
daa
inc
jo
leave
or
mov
hlt
sub
fisubr
mov
outs
xor
xor
leave
mul
enter
repz
xor
pushf
jge
cmc
push
inc
lods
cmp
and
stc
stos
out
cld
sar
sub
jmp
jmp
outs
ins
push
loop
xchg
(bad)
test
pop
bound
mov
fimul
ins
movs
in
pop
jb
pop
ja
mov
push
test
add
mul
out
fisub
out
bound
mov
add
mov
pop
inc
cmps
push
xor
movs
push
xchg
mov
sbb
push
cmp
fdiv
ror
icebp
nop
out
outs
aam
mov
or
sar
test
out
pop
into
mul
jmp
cdq
je
and
pop
scas
xchg
mov
or
or
(bad)
out
and
inc
cmp
and
push
sbb
push
mov
and
sub
lods
dec
add
and
pusha
in
movs
cs
dec
xchg
aad
daa
aad
cdq
sbb
cld
push
hlt
rcr
push
mov
scas
fcomp
scas
mov
mov
dec
mov
sub
xor
adc
fadd
mov
xor
test
test
icebp
imul
mov
dec
push
pop
out
ss
and
daa
fwait
add
mov
cmp
shl
mov
adc
ds
inc
test
cwde
ins
or
push
test
syscall
test
dec
addr16
gs
dec
inc
cmc
std
aaa
xchg
out
push
inc
dec
nop
(bad)
fcom
repz
lahf
mov
adc
or
dec
mov
cli
sbb
enter
dec
cmc
dec
jge
add
pop
cdq
je
sbb
cmp
mov
push
cmp
mov
call
inc
push
sub
sbb
jnp
cmp
mov
leave
dec
mov
jne
push
mov
cs
xor
inc
das
pop
pop
shr
and
aam
cmp
repz
pusha
dec
ret
dec
adc
mov
inc
clc
or
call
(bad)
lock
xor
jecxz
pop
and
fisubr
mov
push
dec
sub
pop
xchg
xchg
push
add
xchg
cmc
pop
loope
xchg
add
cld
push
push
dec
mov
out
inc
pop
pop
xchg
into
sbb
pop
ret
sbb
adc
cdq
pop
lods
sub
rcl
test
sbb
inc
xchg
rcr
mov
xor
fmul
aaa
jae
adc
jg
inc
sub
inc
mov
out
rcr
sbb
mov
xor
mov
daa
das
jmp
repz
and
mov
mov
test
sub
pop
test
not
xchg
pop
lock
xor
xlat
and
xchg
push
mov
mov
mov
adc
sub
(bad)
push
rol
cmp
cmp
(bad)
pop
push
xor
outs
ret
clc
int
pop
dec
adc
pushf
mov
outs
fisttp
cli
ror
xor
call
les
hlt
mov
loope
jae
add
imul
inc
pop
xor
pop
jbe
dec
fistp
cwde
movs
dec
retf
lahf
test
popf
xor
loopne
mov
mov
xor
inc
sbb
sbb
int
cmp
xchg
fstp
xor
and
mov
xchg
lea
jae
jno
fistp
hlt
push
jmp
jmp
into
fimul
or
dec
jae
adc
shl
sbb
popf
inc
call
in
scas
(bad)
jmp
(bad)
jge
(bad)
fwait
lods
adc
jno
js
or
mov
shl
or
pop
je
std
or
data16
ror
mov
mov
adc
lods
je
jo
adc
and
mov
retf
leave
xor
out
jo
dec
mov
paddusw
sbb
retf
push
mov
clc
inc
das
xlat
in
daa
pop
ja
(bad)
ja
js
dec
dec
rcl
fucomp
movs
inc
int
cdq
outs
mov
iret
push
inc
stc
push
inc
inc
scas
jg
and
xor
and
jp
inc
inc
nop
sub
ins
sbb
inc
dec
popf
in
push
pop
pushf
mov
imul
iret
outs
shl
repz
inc
xchg
pop
loope
movs
cmc
ins
nop
sbb
and
(bad)
fs
add
sti
fwait
mov
push
and
scas
rol
in
adc
mov
es
imul
or
and
mov
loop
add
(bad)
div
and
mov
and
and
repnz
test
cwde
xor
inc
jecxz
mov
scas
xor
mov
adc
mov
div
lea
stos
xchg
dec
sub
js
fmul
imul
gs
xor
leave
fdivr
dec
and
leave
xchg
dec
repz
cs
es
loopne
sbb
scas
stos
scas
mov
dec
icebp
(bad)
inc
loope
mov
scas
cs
daa
xor
and
sub
dec
test
adc
mov
xchg
iret
inc
push
bound
dec
dec
dec
je
cmps
jbe
test
loop
call
ins
pop
xchg
gs
call
in
movs
cmps
and
inc
fst
aad
push
mov
sbb
dec
push
cmp
scas
aam
push
mov
in
addr16
(bad)
cmp
push
fst
in
and
pop
mov
ds
pop
imul
fmul
jl
xchg
mov
adc
inc
cmp
xchg
ins
stc
test
inc
call
push
shl
push
add
shr
mov
ja
daa
xor
mov
adc
bound
(bad)
(bad)
xchg
daa
dec
mov
fsub
ins
pop
test
nop
add
js
pop
sub
fsubr
stc
add
or
out
stos
(bad)
in
xor
daa
gs
sti
cld
xor
push
std
out
pushf
jl
mov
sbb
dec
pusha
push
icebp
in
jle
loopne
cli
mov
xor
fidivr
mov
add
(bad)
xor
fs
sti
jnp
ret
push
mov
shl
jg
pop
sahf
div
mov
mov
loopne
mov
pop
mov
arpl
xchg
xchg
sbb
mov
std
data16
pop
jp
xchg
loopne
lods
push
jmp
and
cld
(bad)
loope
xchg
gs
and
(bad)
jbe
push
or
icebp
and
imul
(bad)
inc
hlt
xabort
cmp
(bad)
cmp
scas
retf
out
aad
mov
js
jmp
pop
inc
in
cmp
pusha
movs
jg
or
mov
mov
push
icebp
jno
pop
gs
call
sar
ins
xchg
test
or
repz
lods
xchg
or
mov
and
out
cmp
mov
push
sahf
xchg
pop
pusha
jne
push
adc
movs
ss
sbb
inc
mov
add
mov
mov
pop
mov
(bad)
enter
add
cmc
fiadd
mov
pop
(bad)
stos
push
xlat
sbb
push
ds
jnp
push
and
adc
sub
and
pop
and
xchg
gs
dec
js
ds
(bad)
inc
sahf
int
dec
mov
inc
mov
stos
sti
mov
dec
adc
std
push
das
xchg
mov
je
das
fsubp
sub
xchg
mov
aam
mov
(bad)
stos
in
cmp
pcmpgtw
jg
(bad)
les
fwait
jmp
enter
push
push
popa
xchg
xchg
mov
ret
repnz
(bad)
sahf
out
mov
inc
mov
mov
mov
inc
jae
or
int
and
dec
sbb
mov
ins
sbb
dec
std
adc
leave
rol
(bad)
jnp
sbb
(bad)
test
xchg
shl
inc
and
fcmovnbe
and
aam
loop
lea
into
push
aas
mov
dec
adc
and
jge
inc
hlt
xor
in
jg
pop
push
das
mov
jb
stc
gs
inc
sbb
jno
push
int3
fs
sub
hlt
inc
xor
imul
gs
jecxz
cmp
stos
and
xor
mov
daa
or
ret
inc
cld
or
mov
ja
retf
dec
xor
mov
dec
jg
iret
or
cmps
cdq
and
in
in
test
mov
(bad)
sub
cmps
adc
mov
sbb
mov
push
mov
mov
inc
jns
mov
fisubr
stc
xchg
fcomp
ds
fstp
cmp
push
pusha
jl
outs
sbb
and
jbe
pop
stos
stos
test
jp
popf
call
mov
mov
movzx
sbb
nop
ret
inc
fsubp
inc
(bad)
scas
cmp
lods
push
lods
sub
out
xor
and
or
cdq
dec
clc
fnstcw
inc
sbb
cwde
sub
jae
pop
xchg
inc
dec
jae
jg
(bad)
retf
stc
inc
pop
push
mov
adc
mov
sub
xor
pushf
xchg
aaa
xor
jp
and
jne
out
nop
test
hlt
sub
shr
cwde
mov
pop
and
cmps
pop
addr16
in
mov
jmp
(bad)
bound
sub
cmp
test
shl
xor
mov
xor
loopne
push
mov
sti
adc
cmp
stos
add
and
pop
mov
cmp
sbb
pushf
xchg
or
call
add
sub
xchg
xchg
pop
add
xor
xor
shr
out
cdq
lea
aam
push
div
xor
(bad)
imul
add
(bad)
xor
mov
push
mov
mov
mov
in
adc
in
repz
inc
into
and
sbb
fsin
mov
jns
mov
in
adc
imul
dec
clc
mov
das
daa
cmp
dec
push
xor
rol
imul
inc
dec
lea
mov
push
adc
lahf
cmp
ss
clc
lods
and
out
or
aam
mov
mov
fdiv
clc
xor
xchg
cmp
aam
dec
cmp
scas
jae
sbb
mov
jge
add
cld
fnstenv
pusha
xor
mov
or
or
push
std
xor
xor
adc
in
push
(bad)
out
repnz
add
mov
fdiv
add
int
leave
mov
mov
and
bound
and
mov
add
dec
(bad)
repnz
jp
shl
loopne
or
stos
cmp
mov
add
hlt
sbb
nop
aad
pop
mov
add
cmp
add
les
test
jno
cmps
or
and
(bad)
fsubr
shl
mov
and
lahf
stc
rcl
mov
pop
sbb
and
les
mov
xchg
into
pop
push
test
lahf
call
scas
fucomi
(bad)
and
in
daa
stc
xchg
cwde
mov
mov
imul
(bad)
or
pop
push
sbb
pop
sbb
test
pusha
dec
in
xchg
mov
push
lds
int
and
call
pop
xor
in
not
rol
fwait
mov
fcom
mov
pop
call
fxch
out
(bad)
cmp
jno
std
sub
repz
bound
(bad)
mov
call
mov
test
loop
xchg
and
or
cmps
fimul
pop
pop
gs
aaa
js
or
cmps
out
test
bts
sbb
jbe
lock
xchg
sbb
xchg
fisub
sbb
mov
and
fild
xchg
test
stc
phaddd
jmp
test
cmps
out
stos
pcmpeqd
jns
pop
xchg
jecxz
pop
in
pushf
into
not
adc
pop
rcl
fwait
mov
daa
push
inc
ret
pop
fadd
fwait
xchg
cmp
stos
rcl
push
ja
and
adc
jecxz
icebp
aad
mov
mov
push
lea
sub
jge
lods
loop
jnp
jmp
or
mov
retf
mov
xchg
loop
ret
leave
ret
mov
xchg
call
jp
add
test
sar
push
mov
cmp
lods
ja
inc
cmc
cmp
pop
imul
push
loop
int
mov
cmp
retf
push
stos
mov
mov
fadd
dec
jg
xor
sub
jmp
fwait
movs
xor
dec
cli
not
jb
dec
stos
(bad)
cmp
fwait
xor
push
pop
cmp
cdq
clc
pop
aaa
mov
cmps
aaa
mov
addr16
imul
push
mov
dec
dec
shl
xor
xchg
imul
and
fdivr
jns
cmps
xchg
loopne
aaa
enter
ja
jo
mov
fild
in
outs
imul
stc
sbb
sbb
push
xchg
ret
mov
jb
adc
out
rcl
shl
in
loope
jne
jg
mov
mov
into
jge
inc
jmp
sub
call
ret
popa
mov
xchg
adc
retf
and
cmps
scas
scas
jmp
cmp
xchg
adc
mov
push
push
es
enter
sti
mov
xor
retf
xchg
pop
mov
push
inc
xchg
movs
into
mov
dec
ret
pop
mov
sub
xchg
dec
ficom
clc
mov
fnstsw
sbb
iret
mov
sub
add
jecxz
jp
dec
sahf
daa
fdiv
mov
and
lea
dec
adc
dec
aam
adc
outs
and
(bad)
popf
push
leave
and
aaa
(bad)
inc
mov
lea
das
jns
mov
outs
pop
ret
ror
cmp
or
pop
in
jae
std
or
repnz
mov
or
outs
lahf
xchg
xchg
aam
(bad)
(bad)
mov
lods
sbb
cmps
mov
or
adc
(bad)
movs
arpl
icebp
pop
dec
repz
pop
push
mov
pop
sbb
repnz
sbb
push
ss
pop
push
push
clc
retf
hlt
ror
cmc
push
sub
xchg
div
pop
xor
inc
gs
std
in
dec
jo
stc
adc
shl
inc
test
jg
xor
xchg
bound
xchg
or
fld
mov
nop
mov
icebp
ss
mov
packuswb
cmp
imul
aad
add
sahf
jbe
dec
in
mov
or
xor
(bad)
fild
test
dec
shr
dec
add
rcr
mov
sub
test
cmp
or
outs
mov
pop
cmp
push
aas
inc
push
pop
mov
dec
popa
sbb
mov
push
add
test
xor
mov
pop
mov
call
lods
add
test
dec
loope
mov
pop
push
add
call
dec
popa
(bad)
fisttp
cmp
ins
aas
(bad)
(bad)
loopne
jge
xor
and
mov
push
and
cld
inc
fcomp
push
inc
out
pop
mov
push
ds
mov
dec
dec
cmp
adc
outs
pop
dec
(bad)
pop
jo
mov
ret
sub
(bad)
pop
fwait
push
ret
cmp
push
mov
lods
pusha
sub
jbe
fisttp
das
cwde
out
aam
inc
hlt
sub
repnz
(bad)
add
cmp
movs
lods
xchg
addr16
adc
cmp
pop
cli
repnz
loopne
es
dec
push
fiadd
inc
pop
arpl
leave
xor
adc
inc
xchg
in
dec
cmp
xchg
sahf
jge
inc
or
or
call
es
es
(bad)
in
sti
mov
cmps
(bad)
lock
and
aam
and
cli
into
xchg
je
(bad)
mov
fistp
push
or
xchg
push
inc
shl
jb
scas
lahf
and
add
sahf
test
mov
sub
mov
xchg
and
(bad)
and
jg
outs
lds
mov
pop
shl
stos
sar
jmp
mov
and
pop
sub
sti
mov
xchg
rol
inc
sbb
mov
movs
fbld
pusha
xchg
xchg
ja
sbb
jg
adc
pop
outs
cdq
and
adc
cld
in
push
xor
and
sub
ret
(bad)
int
loop
xor
pop
jl
lods
sbb
push
out
pop
fild
aad
(bad)
test
ror
arpl
adc
call
mov
sar
ret
mov
xchg
sbb
stos
inc
mov
ret
out
retf
call
xlat
cdq
jmp
push
jmp
test
add
cdq
(bad)
mov
retf
cmp
adc
adc
es
xor
leave
(bad)
mov
adc
fucomi
add
xchg
add
or
add
stc
add
popf
fist
push
(bad)
xchg
retf
stos
and
dec
inc
push
push
adc
xchg
mov
(bad)
rcl
jl
aad
mov
outs
xchg
outs
adc
push
mov
test
add
push
mov
mov
inc
sti
or
pop
cmp
and
sbb
data16
lea
jnp
sbb
fwait
cld
xchg
xchg
add
aaa
dec
ins
ds
packuswb
and
pop
sub
aad
add
or
mov
pusha
out
pop
pop
sbb
adc
in
adc
or
pop
jp
aas
xchg
push
push
movs
xor
inc
pop
push
lahf
es
sub
icebp
sbb
xchg
add
lss
sbb
out
jmp
in
sar
push
lods
lea
ja
cmp
outs
mov
pop
dec
test
inc
mov
addr16
xlat
add
add
mov
xchg
leave
push
lods
aaa
mov
loopne
sub
rcr
dec
test
int
lds
out
cs
rol
and
call
jb
repz
adc
ror
dec
cmps
xchg
outs
sbb
std
bound
dec
nop
jns
xor
ss
push
ret
les
ret
ins
mov
dec
call
pushf
adc
sub
cmp
aad
fst
dec
ins
and
pop
cwde
(bad)
xor
mov
bound
push
jns
jl
pop
dec
xchg
pusha
(bad)
call
sbb
xchg
cmp
cmp
and
lea
push
(bad)
mov
sbb
int
inc
imul
inc
cmp
sti
cwde
fmul
xor
bound
pop
cmp
push
and
jecxz
aad
push
jno
(bad)
call
push
cmp
aas
mov
and
int
(bad)
and
out
call
adc
pop
test
inc
dec
xor
adc
jmp
data16
inc
adc
int
mov
mov
cld
mov
test
shl
sbb
add
mov
std
dec
inc
sti
adc
cmc
(bad)
sti
mov
ss
sahf
sbb
fs
jp
fsub
fidiv
or
adc
pop
xor
mov
retf
cmp
cdq
popa
dec
and
nop
pop
nop
mov
cmp
xchg
hlt
je
sub
and
jmp
test
mov
and
ds
xchg
push
aas
dec
mov
out
cwde
idiv
fisttp
lods
int3
cmp
fcom
inc
pop
std
loopne
push
mov
adc
loop
xor
imul
sub
dec
adc
mov
adc
mov
inc
lock
jg
mov
jl
add
mov
xchg
push
pop
(bad)
fstp
jecxz
cmp
scas
lea
ficom
test
adc
lock
loope
cdq
test
inc
pop
sbb
hlt
jg
retf
bswap
je
out
jbe
pushf
inc
jo
jp
(bad)
ss
push
jle
mov
rcr
cmp
out
out
aad
aas
in
in
sahf
adc
in
jbe
jno
mov
xor
ret
stos
push
icebp
hlt
push
(bad)
adc
dec
dec
cmps
cmps
pop
stos
test
aas
jo
cmc
rcr
adc
pop
das
mov
mov
aad
imul
imul
lds
sub
shr
add
xchg
retf
jns
out
xchg
ficom
push
sub
jbe
mov
jne
cmp
xor
aad
or
fld
mov
sub
add
fwait
inc
je
inc
xor
jge
mov
inc
jmp
cmp
in
popf
mov
dec
push
test
inc
ins
sub
and
hlt
fst
or
(bad)
repz
into
mov
movsx
popa
sbb
pop
rcl
pop
fcmovnbe
jp
ror
or
scas
iret
fld
mov
sbb
mov
sub
dec
cmps
xor
adc
test
fs
iret
add
shl
not
stos
mov
pushf
inc
int3
mov
adc
pop
push
mov
pop
outs
dec
mov
data16
hlt
or
mov
or
rcr
adc
dec
mov
sbb
outs
jmp
shr
ins
movs
mov
mov
push
push
push
mov
faddp
mov
cld
imul
in
jle
neg
int
scas
ds
jmp
xchg
or
mov
or
pop
ret
cmp
push
adc
in
xlat
jp
mov
aam
sub
sub
or
imul
push
xbegin
shr
sub
ja
cwde
xchg
mov
(bad)
adc
cmp
mov
fisubr
cld
xchg
(bad)
xchg
dec
jle
stos
sbb
inc
jmp
cdq
jno
sbb
push
fstp
or
xchg
sbb
pop
cmps
je
out
xchg
sbb
retf
pop
add
mov
or
movs
out
xor
and
shl
push
cwde
xchg
mov
jge
repz
or
add
xchg
push
push
sbb
sub
mov
nop
loop
out
std
jae
and
sbb
clc
(bad)
imul
jmp
in
push
mov
mov
sbb
mov
push
dec
push
sahf
fdivp
stos
fcmovu
mov
add
jp
loopne
out
jne
xchg
ret
dec
movs
shr
outs
les
ret
stos
pushf
pusha
mov
cmp
push
or
push
fwait
xchg
loopne
mov
ss
idiv
leave
mov
mov
aas
jno
adc
aad
iret
mov
xor
mov
leave
sub
sbb
jnp
mov
test
scas
xor
sub
pop
ret
adc
nop
cmp
jns
inc
inc
loopne
js
push
mov
cmp
movs
adc
push
mov
sbb
inc
imul
les
test
test
dec
imul
or
xlat
out
sub
fsub
(bad)
test
xor
test
push
xor
mov
les
push
es
cld
lods
ins
inc
repz
fist
fidiv
xor
and
sub
mov
das
imul
or
mov
pop
jb
ja
call
push
jmp
sbb
jo
cmc
movs
mov
sub
pop
test
cmps
push
iret
inc
push
les
adc
push
sbb
and
and
dec
mov
scas
adc
call
pop
push
jb
neg
or
sbb
add
bound
inc
or
lods
push
aam
cmp
cmc
inc
in
jb
mov
pop
mov
pop
xor
jg
xchg
jns
jo
out
mov
mov
xlat
in
in
add
outs
and
adc
jnp
cwde
dec
lods
retf
mov
fsub
cmp
lods
jno
hlt
pop
dec
rcl
sbb
adc
jmp
mov
push
pop
adc
ins
dec
imul
lods
ret
dec
jns
cmc
gs
xchg
(bad)
push
cmp
nop
fld
sbb
dec
aad
fld
into
push
or
je
mov
repnz
jnp
or
pop
jle
push
xor
imul
data16
outs
mov
add
mov
xor
dec
mov
and
in
mov
mov
addr16
inc
adc
sysret
js
mov
mov
mov
not
shl
pop
shl
stc
sub
lock
aaa
fisub
sbb
les
xchg
cmp
idiv
inc
mov
hlt
xchg
push
gs
loop
(bad)
rol
jp
inc
jl
cmp
out
cli
pop
pop
cmps
daa
xor
push
push
movs
pusha
xchg
pop
jl
popf
call
mov
bound
lds
or
rcr
inc
test
loopne
test
sbb
or
lahf
lods
test
xchg
jmp
pushf
jmp
cdq
out
mov
sub
in
mov
sub
stos
mov
fisttp
cmps
cmp
sub
cmp
or
mov
cmp
shl
pop
or
shr
dec
in
push
cmp
xchg
push
(bad)
dec
js
js
mov
or
(bad)
mov
adc
stc
pusha
xchg
cld
sar
mov
push
cmp
stos
retf
adc
pop
dec
push
push
mov
push
xor
(bad)
out
aad
or
inc
pop
test
mov
pusha
sub
push
and
lahf
adc
jno
mov
test
fdivp
movs
mov
ret
popa
push
mov
sbb
loope
cmp
jmp
dec
push
lods
cmp
icebp
xchg
test
out
mov
into
lods
pop
cmp
in
out
shr
lahf
xor
xchg
int3
bound
fwait
push
and
ins
ss
sbb
mov
mov
xchg
xor
or
out
xchg
sub
jg
out
push
lods
cmp
stc
and
ret
aas
iret
popa
jno
jmp
sub
movs
pop
cmp
sbb
or
lods
jns
(bad)
pusha
retf
or
cld
cmp
div
test
data16
sub
test
jg
sbb
mov
rcl
cmc
mov
cdq
stc
push
call
aad
dec
test
movs
pop
xor
div
hlt
inc
xor
dec
mov
sbb
mov
addr16
adc
mov
mov
dec
inc
aad
xor
nop
fmul
nop
repz
pop
stos
sar
xchg
test
or
mov
(bad)
es
cmp
mov
popf
mov
inc
out
popa
jb
xor
pop
retf
(bad)
fcom
jb
(bad)
je
fadd
aaa
in
and
neg
mov
mov
rcr
hlt
(bad)
fisttp
pushf
adc
mov
xchg
push
or
push
push
cmp
fs
in
jge
or
js
dec
or
hlt
sub
call
repz
into
adc
movs
push
xchg
stos
jecxz
(bad)
cmp
sbb
sub
jg
mov
mov
out
cmp
xchg
ja
and
and
aaa
push
std
cmp
out
adc
xor
adc
dec
lds
pushf
xchg
mov
lahf
fsub
pop
pop
xchg
adc
adc
jmp
aad
adc
div
adc
cs
pop
jnp
mov
xchg
mov
mov
icebp
stc
push
mov
cwde
push
mov
ror
jle
push
dec
or
fisubr
int3
pop
ss
xor
lahf
das
sub
js
nop
stos
repnz
mov
dec
push
add
xchg
dec
test
retf
mov
shl
gs
cmp
and
mov
dec
push
jbe
sahf
xor
call
enter
ret
cdq
push
mov
adc
add
jb
mov
push
xor
mov
cdq
dec
fidiv
dec
dec
retf
xor
cmp
xchg
retf
movs
add
rcr
js
push
out
into
xchg
mov
sub
jae
fidivr
cmp
outs
test
into
int
fild
inc
imul
loope
adc
in
jbe
div
inc
int
loope
pop
cmp
dec
pop
pop
std
sub
cmp
jbe
xchg
mov
fdivr
repz
and
mov
xor
jge
mov
pop
add
adc
adc
cmps
dec
cdq
and
scas
push
cld
int
rol
push
in
dec
xchg
or
xlat
xor
xchg
fs
in
sar
xlat
(bad)
push
sub
mov
cwde
(bad)
push
arpl
add
adc
push
xchg
mov
cld
pop
push
cmp
push
push
stos
clc
add
sbb
and
pusha
xchg
mov
cli
repnz
std
shl
fld
add
int
mov
mov
loopne
sbb
mov
mov
adc
stc
push
sub
jmp
cld
xor
jae
adc
jmp
xor
jo
add
cmc
jl
push
jb
sahf
ins
xor
adc
jnp
mov
and
xchg
cwde
loop
inc
mov
sbb
sbb
pop
mul
fwait
mov
pop
or
daa
xor
inc
xor
aaa
movs
nop
jno
mov
lds
xor
xor
das
mov
inc
fwait
into
rcl
xor
pop
pop
sub
mov
inc
jp
cwde
(bad)
adc
pop
mov
cli
ror
dec
lods
jecxz
das
ja
retf
sbb
cmc
sub
call
mov
or
nop
cwde
(bad)
into
jg
jl
les
pop
mov
or
test
imul
leave
or
add
call
imul
jl
dec
inc
daa
cmp
sti
mov
out
mov
rol
sbb
sbb
push
and
xor
test
jno
mov
jecxz
fisttp
adc
pop
call
xchg
dec
imul
adc
cmp
imul
jne
stos
ret
hlt
pusha
fild
jns
in
pop
jae
stos
aam
scas
sub
int
cmp
hlt
jecxz
xchg
loop
cmp
xor
xor
add
cmp
cdq
add
xchg
adc
aam
or
cs
jl
and
add
(bad)
(bad)
ror
sub
lea
dec
mov
std
jae
inc
in
sub
jp
and
or
or
mov
inc
stos
in
cmp
(bad)
push
and
cmp
xchg
cli
xor
push
cli
ins
rcl
leave
push
std
pop
xor
movs
es
jmp
pushf
test
push
xchg
inc
dec
sbb
mov
retf
dec
je
adc
mov
movs
js
sub
test
cld
out
jnp
out
ins
jmp
aam
add
fs
daa
and
ins
dec
xor
loopne
cld
pop
(bad)
inc
mov
add
add
push
fistp
cmp
aaa
(bad)
int
int
sahf
xchg
sti
sbb
fwait
pop
xchg
mov
cmps
xor
ds
inc
pop
adc
retf
aad
sbb
fldenv
or
scas
cwde
out
inc
in
ja
push
daa
mov
fisub
nop
daa
addr16
hlt
(bad)
out
das
inc
movs
or
hlt
jg
pushf
lods
stos
dec
push
dec
xchg
outs
je
ins
push
add
loope
mov
sub
dec
shr
jbe
push
xchg
or
inc
jo
dec
mov
hlt
xchg
add
ror
xor
jb
pop
pop
rcl
jae
(bad)
pop
xchg
jge
xchg
stos
lods
enter
ret
popa
inc
adc
push
xchg
cmp
lock
inc
jl
jge
mov
daa
rcl
and
hlt
cmp
out
sbb
inc
xchg
jp
mov
fistp
dec
mov
inc
jmp
or
fcmovnb
fidiv
in
pop
mov
int
xchg
pop
and
or
and
xlat
jnp
cmc
js
add
xchg
sbb
ret
and
dec
mov
frstor
adc
sti
dec
or
data16
cmc
jp
inc
das
push
(bad)
mov
in
adc
cmp
sbb
loopne
mov
(bad)
dec
and
jnp
rcr
push
inc
cs
imul
aaa
stos
iret
inc
sub
fcomp
retfw
in
test
ins
outs
adc
push
pop
lods
inc
xor
mov
push
mov
in
ret
data16
mov
loopne
sub
push
push
out
push
xchg
xchg
outs
movs
clc
fucom
fs
xor
add
inc
push
out
inc
jns
inc
lods
pop
imul
rcl
or
add
leave
lea
(bad)
sub
cwde
dec
out
shl
fdiv
hlt
or
or
jo
out
test
add
call
xor
(bad)
pop
xor
mov
arpl
pop
imul
add
rol
test
rcl
lea
sub
ins
cmp
sub
jmp
and
fistp
fstp
adc
add
in
dec
push
sub
mov
gs
sar
add
push
add
sub
jmp
sbb
scas
jb
adc
clc
clc
das
adc
cmp
mov
rcl
loopne
sub
lahf
pop
in
test
inc
cmp
xor
fsubr
adc
pop
je
jb
mov
xchg
jmp
and
sti
sub
inc
xchg
fwait
bound
jle
cmovs
loope
mov
imul
mov
scas
retf
push
and
sbb
push
push
test
inc
in
mov
inc
mov
loopne
cmps
shl
fsubr
push
call
fwait
in
fst
push
and
lods
jns
mov
sbb
pop
mov
out
adc
(bad)
mov
imul
neg
cmp
pop
arpl
sbb
pop
push
(bad)
mov
ins
test
push
and
test
aam
in
aaa
fwait
test
or
dec
out
pop
jb
or
pop
xchg
cmp
inc
pop
cmc
fadd
xor
int3
jl
push
dec
xchg
pop
jl
push
loopne
into
popf
popf
aam
cli
repz
es
inc
push
mov
mov
xchg
rcl
add
stc
mov
adc
sar
jno
adc
push
dec
add
(bad)
adc
data16
mov
repz
in
loopne
sets
aaa
xchg
xor
aad
sub
mov
mov
mov
sub
push
inc
xor
sbb
or
scas
fwait
jns
or
sub
mov
jnp
ror
movs
xor
cmp
xchg
cmp
or
scas
lock
mov
test
jmp
out
push
jg
lds
xchg
movs
fiadd
mov
inc
mov
in
arpl
pop
mov
in
push
les
bnd
inc
dec
adc
loopne
ror
bound
cs
push
adc
pop
sub
push
and
js
xlat
pop
dec
mov
test
pop
and
les
ret
sub
into
push
pusha
call
loop
xor
pop
nop
nop
fst
push
loopne
jle
sub
dec
or
dec
inc
jmp
or
mov
xchg
pop
pop
out
push
jne
dec
sbb
mov
push
imul
call
cmps
into
bound
sub
mov
inc
push
or
push
je
and
fadd
fsqrt
fdivr
mov
pop
out
xchg
push
retf
push
hlt
add
or
mov
inc
aam
xor
shl
icebp
retf
xor
push
retf
jecxz
test
daa
fild
dec
or
cmps
outs
mov
sub
ss
fcomp
hlt
jae
in
xor
les
int3
cli
push
test
call
pop
mov
fcmovb
jne
inc
dec
lods
daa
xchg
inc
push
xor
shl
add
scas
clc
cwde
retf
ror
xchg
add
jge
jne
int
shl
lahf
loopne
sub
inc
pop
rol
dec
sbb
imul
dec
fcomp
dec
fnstcw
aad
in
int
adc
sbb
pop
sbb
inc
shr
lods
add
add
mov
mov
jnp
cmp
rcr
das
push
test
nop
pusha
xor
or
jnp
(bad)
fadd
mov
pop
sub
jne
in
pusha
add
add
cmp
int3
mov
mov
ror
pop
lods
scas
add
sahf
imul
mov
ins
scas
jmp
lahf
or
mov
enter
das
(bad)
repnz
pop
xor
cmp
pop
sbb
sbb
and
mov
jmp
fsubr
pop
(bad)
xchg
clc
shl
mov
dec
outs
push
xor
pop
rcr
test
push
push
xor
jo
xchg
outs
popf
jle
rcr
(bad)
xor
ret
jmp
int3
imul
lahf
or
leave
int3
dec
push
std
not
mov
fnstenv
jo
scas
mov
or
dec
data16
cs
out
ss
xchg
mov
and
xor
mov
mov
pop
and
popf
loop
lods
mov
out
add
jg
movs
inc
ins
sbb
(bad)
push
fcomp
mov
and
(bad)
push
lahf
hlt
adc
inc
sbb
mov
xor
fnstsw
add
mov
cmp
je
inc
stos
sub
loop
cmps
jge
sbb
scas
ror
xchg
scas
jns
or
jge
aas
(bad)
push
inc
sti
jmp
and
je
dec
cmp
push
add
mov
sub
mov
adc
inc
add
out
inc
jg
mov
(bad)
pushf
pop
xchg
or
imul
in
clc
test
jbe
add
jp
rol
retf
mov
mov
das
xlat
sbb
fild
int3
ja
mov
xchg
sbb
shl
jl
sub
imul
xchg
rcr
cmp
(bad)
jmp
leave
sub
scas
or
push
xchg
mov
ficom
cmp
icebp
lock
mov
jae
jns
mov
ror
xchg
pop
ret
scas
fdiv
data16
ds
xlat
inc
sub
inc
sub
sub
xchg
shr
icebp
lods
push
jmp
mov
retf
adc
cmp
int3
dec
add
repnz
jle
dec
aad
and
sub
or
xchg
aaa
dec
sbb
sbb
cmp
ror
retf
inc
sbb
shl
je
pop
fsubr
cld
mov
pop
das
daa
es
mov
cs
xlat
inc
retf
popf
mov
in
xchg
lds
jne
or
pop
in
xor
cld
outs
mov
outs
mov
push
xor
repnz
rol
dec
mov
popf
push
xchg
push
adc
das
jp
push
clc
or
addr16
mov
fisubr
fmul
sub
outs
dec
pop
add
popf
mov
es
bound
jmp
pop
mov
sbb
push
mov
jo
rcr
add
push
xchg
jo
jmp
xor
push
(bad)
jmp
stos
or
je
add
jl
mov
(bad)
cld
jmp
xchg
jl
mov
xchg
and
or
ins
mov
cmp
dec
mov
push
in
mov
repnz
cmp
mov
popa
(bad)
mov
mov
pop
or
(bad)
mov
adc
outs
lea
mov
in
mov
jge
popf
cmp
xor
xchg
xor
in
(bad)
lss
jne
dec
popa
jl
jle
or
pop
int3
std
and
push
div
mov
adc
pop
fwait
jmp
data16
add
aaa
repnz
je
mov
cmps
sbb
pop
push
pop
jmp
fisttp
daa
stos
shl
xor
in
in
retf
nop
xchg
xchg
cmp
xor
inc
inc
js
pop
in
clc
daa
cmp
mov
es
fstp
mov
pop
or
pop
out
outs
or
stos
jmp
fstp
stos
add
fst
mov
sbb
xor
ret
fidiv
fdivr
(bad)
jmp
push
repnz
fsubr
in
push
ds
shl
enter
sbb
inc
dec
or
inc
les
cmp
xchg
mov
push
cmp
ret
(bad)
lods
leave
mov
scas
jge
fnstenv
jle
(bad)
ja
fwait
sar
daa
jge
pop
or
iret
cmp
arpl
daa
mov
inc
icebp
fild
(bad)
xchg
inc
(bad)
loopne
repnz
loope
in
push
add
(bad)
pop
pop
xchg
sbb
xchg
in
cmps
and
mov
sbb
mov
shl
(bad)
imul
das
mov
mov
rol
(bad)
shr
lock
push
mov
retf
ins
adc
add
push
dec
or
add
pop
cmps
pop
jp
mov
push
add
(bad)
imul
movs
sahf
jl
pop
movs
xchg
lods
in
xlat
stos
mov
mov
sti
out
jo
inc
lahf
in
xor
inc
mov
shr
lahf
sbb
and
popf
fcmovnb
and
retf
retf
clc
mul
inc
jno
xor
icebp
fisttp
rol
xor
xchg
(bad)
lods
jle
test
push
mov
fmul
xchg
outs
cmp
fcomp
out
inc
stos
mov
cs
lds
xor
shl
adc
popa
push
pop
pop
js
jl
inc
mov
lods
jno
xchg
daa
ficomp
sti
mov
inc
movs
call
rcl
pop
div
and
fs
call
daa
out
dec
pop
push
jo
pop
mov
in
popf
inc
stc
push
out
push
js
dec
adc
inc
adc
jge
fwait
pop
mov
add
push
daa
cmp
movs
out
push
call
popf
in
inc
iret
cmps
scas
gs
xchg
and
mov
add
ins
inc
in
xchg
mov
jne
jns
call
cmps
xor
jbe
fwait
mov
inc
inc
inc
outs
add
(bad)
mov
cmp
and
xor
add
xchg
outs
lock
push
out
xchg
inc
xchg
cmp
xor
loopne
and
xchg
out
leave
arpl
shl
ret
sbb
repnz
cmp
and
and
push
neg
cdq
mov
(bad)
in
and
pop
and
pop
inc
mov
or
jbe
xor
and
sti
cmp
add
dec
adc
fs
cli
cmps
lea
icebp
je
lock
std
jle
jp
out
fwait
dec
jmp
push
jmp
cli
es
jmp
js
add
mov
iret
fimul
lock
test
loop
aam
pop
aad
jb
xchg
mov
jbe
stc
ins
cmps
mov
jl
lock
mov
outs
sub
std
mov
icebp
xor
or
inc
(bad)
mov
sub
cli
mov
xor
ds
xchg
adc
inc
into
aas
cmp
cmps
adc
push
pop
xor
or
imul
and
pusha
fldenv
idiv
inc
xor
mov
into
cmovno
arpl
aaa
lods
cdq
out
lods
scas
xchg
jecxz
cwde
in
test
mov
lods
inc
(bad)
push
mov
cmp
iret
pusha
inc
lds
or
dec
jno
adc
push
push
dec
ficom
test
les
ffree
adc
and
adc
sbb
daa
lds
scas
mov
sbb
call
mov
or
add
mov
dec
xor
jle
and
or
scas
pop
xor
movs
xor
ffree
push
fsubrp
(bad)
mov
sub
mov
pop
(bad)
jp
movs
fild
cmp
push
push
push
fistp
daa
push
test
cmp
jmp
push
movs
hlt
call
test
das
std
mov
lahf
not
sub
push
imul
adc
push
(bad)
std
xadd
pop
retf
in
repz
inc
push
xchg
and
mov
adc
inc
or
sbb
pop
or
sub
sahf
mov
xor
sub
pop
inc
adc
or
std
mov
rcr
out
fbld
sbb
lea
fdivr
out
test
pop
into
fldcw
sahf
fld
mov
pushf
push
xlat
sub
pop
pop
lods
xlat
fbstp
jb
ror
jle
mov
jmp
mov
inc
(bad)
cmp
sub
xor
add
scas
sbb
jne
xlat
aad
mov
std
test
push
sub
xor
shr
or
add
adc
fidiv
push
xchg
enter
sahf
je
mov
movs
les
or
sbb
push
or
(bad)
gs
xor
jmp
in
xor
ror
push
xchg
xor
pop
daa
xor
and
sub
(bad)
mov
mov
add
sbb
pop
sub
mov
repz
and
clc
out
ds
pop
or
cmps
add
imul
and
mov
pop
push
or
lods
adc
sbb
or
inc
jne
popa
xchg
jmp
jo
mov
push
cmp
cmp
cwde
nop
pop
cmp
je
inc
or
retf
xlat
sub
lahf
pop
inc
fwait
ins
fs
mov
(bad)
jle
xchg
fild
jmp
(bad)
fisubr
daa
mov
mul
sub
ins
fidiv
sar
jns
mov
push
mul
scas
pop
jb
jo
sbb
fimul
inc
iret
add
jae
mov
(bad)
pop
jmp
xchg
(bad)
and
mov
iret
nop
mov
pushw
into
inc
cdq
mov
lock
xchg
mov
mov
xchg
pop
xor
and
or
add
ror
adc
push
lock
sbb
mov
inc
xchg
retf
mov
jne
jae
inc
adc
ins
and
jno
pop
ja
xchg
push
arpl
pop
in
fcomp
imul
and
inc
cld
mov
retf
push
or
sub
stos
jns
dec
push
pop
inc
lods
rol
jmp
mov
call
retf
mov
dec
cmp
out
adc
jecxz
fs
cmp
fdivr
fdiv
jbe
outs
stos
in
jo
jo
lahf
inc
add
out
stc
xchg
pop
(bad)
bound
fild
inc
retf
(bad)
or
mov
dec
add
test
adc
and
aas
es
cmp
mov
test
sub
cli
out
jp
sti
add
cmp
repz
enter
movs
or
inc
div
jge
inc
int3
pop
jb
pushf
sar
pop
gs
pop
mov
jnp
xor
push
sub
inc
ja
rcr
push
(bad)
outs
mov
adc
mov
add
outs
fs
cs
jb
sub
xor
out
jbe
(bad)
sub
cmps
jge
pop
jmp
jne
leave
xchg
mov
inc
push
hlt
lock
inc
pop
aas
and
stos
xchg
push
dec
inc
mov
mov
addr16
mov
js
pop
adc
rol
aad
cmp
sub
cmp
push
xor
pop
out
mov
les
jno
or
rol
lods
inc
cmps
les
dec
retf
push
addr16
call
sub
or
in
das
xchg
mov
out
ja
cmp
sbb
mov
jmp
cld
leave
push
mov
mov
mov
sub
or
dec
push
ror
adc
in
cs
mov
inc
mov
jecxz
mov
push
scas
xor
loopne
push
inc
mov
pop
mov
fsubp
inc
je
daa
cwde
mov
ficom
movs
hlt
pop
mov
in
adc
rcr
cs
repnz
jo
mov
(bad)
out
jg
bound
sub
mov
xchg
pusha
ins
repnz
and
xchg
cmps
mov
sub
shl
or
retf
pop
retf
adc
push
or
mov
lea
pop
sbb
adc
adc
mov
xlat
or
sahf
mov
test
xchg
push
mov
xor
xchg
enter
and
sti
pop
xor
rcl
pop
retf
scas
outs
lods
scas
or
pop
and
mov
sub
sub
stos
dec
or
cmp
movs
push
sahf
cmps
xlat
inc
adc
test
int3
leave
bswap
imul
inc
jmp
stos
jo
adc
mov
dec
std
inc
mov
push
lahf
or
js
cmp
mov
popf
mov
fucomi
ins
push
arpl
and
(bad)
pop
sub
cmp
push
shr
div
fld
stc
(bad)
or
(bad)
and
mul
les
inc
clc
jo
cs
rcr
xor
call
xlat
aaa
jle
sub
cmp
lods
mov
cmc
out
and
int
push
arpl
int3
pop
scas
and
mov
mov
mov
xor
int3
mov
aam
jne
shl
jb
adc
adc
pop
ret
jmp
repnz
mov
(bad)
das
jns
inc
bound
out
in
sub
mov
push
es
test
pop
aad
mov
mov
xchg
test
mov
test
rol
and
lods
mov
sbb
push
das
pop
inc
(bad)
push
mov
movs
mov
into
(bad)
test
xor
pop
das
les
test
inc
cmp
xchg
imul
sahf
push
lds
ins
(bad)
jmp
or
xor
jmp
mov
test
mov
add
jns
jp
rol
movs
jl
aas
mul
push
into
dec
dec
pop
adc
cmc
mov
cli
xor
mov
sbb
mov
daa
lods
cmps
jne
fiadd
mov
inc
cmp
sbb
cld
(bad)
jmp
cmp
into
and
aam
mov
sub
cld
jae
call
mov
retf
addr16
mov
sti
dec
mov
shr
push
retf
adc
inc
movs
(bad)
xchg
inc
mov
and
jnp
aas
fld
sub
cli
js
fld
retf
push
shl
and
lea
fisttp
jno
pop
mov
enter
in
adc
les
or
test
jo
out
push
sub
cmp
dec
mov
loope
xor
inc
addr16
mov
out
sbb
fsub
sub
pop
dec
mov
jl
js
pop
and
sahf
das
sbb
xor
jl
stos
push
pop
adc
pop
addr16
push
push
arpl
cwde
and
mov
dec
sub
jbe
nop
pop
push
cmp
fldenv
jmp
jg
or
xchg
retf
or
fiadd
mov
test
or
xchg
aas
ins
das
lods
mov
aas
das
or
mov
mov
xor
cmp
fsubr
sub
in
dec
push
ins
jne
push
into
sub
shr
inc
jecxz
mov
push
mov
sub
inc
dec
pusha
out
xor
loopne
outs
mov
pop
std
add
lods
adc
imul
push
ins
pop
popa
loop
dec
push
xor
dec
ja
or
add
or
mov
jge
dec
outs
test
rsm
sbb
jge
adc
push
pushf
sbb
push
dec
test
pop
mov
mov
scas
adc
mov
sar
das
push
xchg
xor
jl
pop
fs
addr16
jecxz
sbb
lock
jae
mov
adc
(bad)
bound
mov
inc
cld
and
dec
sub
pop
out
or
mov
mov
popf
pop
call
popa
std
cld
sahf
add
or
mov
mov
pop
xchg
push
fst
inc
adc
sub
cli
pop
dec
inc
push
mov
pop
sbb
or
jo
sbb
pop
test
test
pop
cmp
jbe
jne
jo
push
dec
lods
les
icebp
add
jle
mov
adc
int3
ret
mov
xchg
push
mov
xor
loope
repz
xor
loop
pusha
sub
jmp
in
push
and
inc
jb
nop
ret
sar
sub
add
push
mov
fisub
inc
xor
stc
and
cli
mov
pusha
aas
sbb
sbb
or
into
repnz
push
jne
out
movs
jg
add
lds
xor
inc
fs
not
sub
inc
dec
cmp
stos
pop
pusha
push
inc
mov
cmc
rol
pop
retf
imul
and
pop
push
xchg
cmps
scas
mov
out
mov
inc
fld
add
mov
cmc
jmp
std
aam
jne
mov
rcl
dec
movs
je
jge
loop
leave
or
stos
jmp
mov
and
xor
jecxz
fmul
mov
sbb
sbb
sbb
xchg
push
cmps
leave
cmp
inc
mov
xchg
shr
das
ret
dec
mov
pop
lock
not
jnp
jo
cdq
adc
adc
scas
imul
test
lea
mov
pushf
xlat
cmp
sub
fdiv
sub
out
loop
xor
ds
aaa
rcr
mov
mov
in
bound
ja
pop
dec
leave
jmp
push
out
jo
adc
in
icebp
jmp
xor
mov
mov
shr
sti
js
jecxz
sbb
push
jl
ret
mov
imul
call
add
and
mov
adc
test
(bad)
repz
neg
pop
data16
test
test
or
icebp
inc
or
fcmovne
push
ins
jg
in
pop
lahf
sbb
mov
fninit
dec
add
xchg
cmp
inc
call
js
push
out
cmps
leave
ja
aas
in
and
call
call
jecxz
xchg
test
inc
push
sub
clc
nop
mov
adc
pusha
sub
dec
das
jmp
xor
les
dec
push
adc
mov
aas
js
je
mov
int
test
test
mov
ficom
hlt
mov
mov
jb
xchg
or
hlt
ret
inc
clc
repnz
xchg
fdivp
aam
test
push
xor
in
cld
shl
scas
pop
aas
aas
add
pop
and
fmul
gs
cmp
mov
loope
outs
fs
inc
jbe
inc
mov
(bad)
int
stos
pushf
inc
fnstenv
push
imul
inc
imul
sbb
popf
cmp
mov
mov
pop
mov
and
mov
lods
pop
inc
cli
shl
cld
and
pop
hlt
mov
sbb
out
or
loop
repnz
pop
adc
pop
pop
mov
pusha
push
add
and
add
adc
dec
sahf
jp
aam
sbb
push
out
sub
cmc
test
inc
jns
ret
(bad)
call
adc
adc
xor
enter
aaa
and
mov
sbb
jno
sbb
data16
mov
in
dec
lock
push
bswap
sub
imul
mov
add
lds
gs
int
add
mov
xlat
sahf
enter
(bad)
(bad)
fimul
nop
add
retf
rcr
je
add
xor
xor
out
stos
push
movs
jb
xchg
call
jnp
push
lock
xor
cmc
in
and
(bad)
inc
pushf
scas
aaa
shl
bound
push
daa
dec
jmp
out
stos
movs
mov
jecxz
push
jge
xchg
or
cmp
jne
into
mov
cmp
bound
stc
jg
mov
scas
leave
and
rol
lods
inc
jle
cli
mov
lahf
stc
mov
addr16
rcr
mov
push
adc
dec
sub
hlt
xchg
aam
pop
mov
mov
adc
adc
stos
ret
jmp
pop
enter
push
sub
xor
sbb
mov
mov
jno
repz
movs
sbb
xchg
or
xchg
(bad)
dec
dec
fs
addr16
test
movs
hlt
push
cdq
cmc
stos
cli
mov
lea
ja
or
sub
xchg
jecxz
dec
out
das
mov
fwait
clc
jbe
cli
enter
repz
or
mov
pushf
xchg
jp
popf
and
mov
push
sub
jae
or
xchg
iret
adc
aad
mov
sub
pop
sbb
pop
and
pop
sbb
stc
call
test
jmp
aam
add
aas
sti
and
mov
in
inc
fstp
lock
ins
(bad)
and
ja
call
or
sbb
add
shl
outs
xchg
movs
movs
sub
xor
outs
pop
pavgw
pop
mov
repnz
add
mov
shr
dec
inc
out
xor
dec
pop
aad
adc
icebp
push
jmp
loopne
jnp
push
ins
inc
cmc
(bad)
call
cdq
movs
std
cmps
repnz
imul
(bad)
mov
loop
inc
stos
sub
push
imul
dec
das
jmp
xchg
(bad)
movs
repz
add
sbb
nop
and
pop
(bad)
push
leave
iret
xor
xor
mov
jmp
pushf
jg
or
cmps
out
mov
push
test
xchg
das
push
mov
dec
sbb
movs
xchg
js
shl
popf
mov
fst
pop
test
cmps
push
aaa
cwde
leave
pop
sbb
loop
aaa
sbb
imul
shr
bound
test
mov
mov
jb
aaa
in
adc
arpl
fwait
sar
dec
dec
and
sub
ds
cld
pusha
sbb
ds
jecxz
pop
cs
push
adc
dec
dec
dec
xchg
mov
xchg
cmp
pusha
mov
pop
loope
movs
in
sub
ror
dec
mov
ret
xor
and
mov
and
jp
jle
aam
mul
xor
add
mov
mov
js
retf
retf
mov
aam
jbe
dec
fmulp
mov
adc
les
repnz
ss
retf
inc
mov
jno
out
fs
sar
or
movs
repnz
(bad)
(bad)
pop
mov
adc
and
stc
add
pop
and
jo
aam
lds
adc
sub
nop
cmp
inc
ja
xchg
or
or
sub
push
xchg
pop
fwait
mov
or
imul
add
inc
nop
cmp
call
pop
movs
sar
test
xlat
sti
out
into
(bad)
push
adc
adc
sbb
push
inc
fisub
inc
addps
daa
push
mov
xlat
out
lods
xchg
gs
(bad)
(bad)
pop
cmc
shl
sub
mov
movs
jle
sub
xchg
test
in
fnstcw
xor
lods
add
not
pop
sub
cmp
or
sar
rol
cmp
shr
int3
aad
and
rcr
push
(bad)
mov
inc
outs
cld
lods
push
inc
mul
xchg
push
inc
pusha
dec
jne
xchg
out
xor
jns
adc
mov
out
jl
xchg
fwait
imul
add
sti
xchg
sahf
mov
cmp
pop
in
in
test
in
sub
adc
pushf
xor
aas
dec
inc
cld
mov
out
dec
jmp
cmc
sbb
xchg
fwait
js
pop
dec
nop
and
sub
cdq
retf
scas
(bad)
inc
jo
xlat
cmp
arpl
pushf
bound
ss
cli
(bad)
push
rol
sub
push
sbb
mov
and
inc
stos
ror
in
mov
or
jo
ds
jns
inc
repz
les
jg
lahf
ror
jae
hlt
xchg
imul
cs
loope
xor
jg
ror
cmp
sbb
fcmovbe
push
test
pop
mov
iret
xor
test
out
jmp
movs
mov
add
mov
mov
jo
into
out
shr
sti
iret
rcl
inc
inc
sti
pop
int
mov
test
das
lods
mov
std
les
retf
out
fsub
mov
inc
(bad)
scas
ret
mov
pop
mov
cmps
cmp
nop
aaa
mov
jecxz
aad
je
cli
mov
inc
fld
inc
or
inc
xor
mov
mov
dec
test
adc
shl
mov
jb
cmp
bound
mov
jg
int
fadd
(bad)
cli
sbb
adc
bound
stc
int3
mov
adc
pushf
pop
test
(bad)
cs
test
icebp
dec
loopne
lods
mov
(bad)
sbb
mov
inc
mov
loopne
nop
mov
add
jle
jnp
enter
cmc
cmp
adc
xor
les
in
ins
int
mov
das
clc
scas
call
cmps
fsub
jb
push
or
cmps
sbb
cmp
jae
stos
ins
scas
repz
retf
mov
pop
fmul
sbb
jo
xor
xchg
addr16
dec
push
cli
test
mov
fmul
xchg
mov
and
sbb
adc
push
ins
jne
and
repz
cmc
scas
add
arpl
and
js
pop
daa
lahf
addr16
cs
add
cmp
mov
cmp
inc
out
fdivr
out
rol
or
in
pop
repnz
mov
ja
or
mov
pop
xor
fdiv
xor
inc
fadd
fisub
out
ror
cmps
out
shl
inc
les
mov
pop
sbb
pop
cmp
cwde
mov
sub
adc
jae
pop
push
mov
or
inc
retf
test
mov
outs
adc
jo
mov
test
sbb
leave
mov
xchg
(bad)
rcr
xchg
psubd
pushf
sbb
or
cdq
movs
jae
xchg
shl
shl
fcmovnbe
hlt
add
lods
jnp
out
sub
out
fwait
scas
mov
and
frstor
inc
inc
gs
adc
popa
cmp
je
inc
push
jle
imul
(bad)
(bad)
iret
daa
test
fcomp
xor
in
jnp
cmp
mov
cmp
mov
call
mov
push
cdq
test
xchg
xor
nop
into
dec
pop
sbb
add
sahf
xchg
iret
pop
inc
fiadd
mov
test
in
push
and
and
mov
dec
pop
test
test
add
sbb
adc
cli
or
sbb
push
movs
shr
stos
jge
repz
pop
xchg
(bad)
mov
nop
xor
jmp
and
fisubr
mov
in
mov
retf
dec
movs
push
mov
mov
imul
cbw
not
or
push
es
fistp
inc
scas
(bad)
test
stos
aam
out
movs
sbb
loopne
or
loope
pop
pusha
iret
mov
ja
cmp
and
xchg
sub
outs
inc
dec
mov
es
in
stc
jns
jo
daa
xor
cmp
jecxz
je
push
ret
in
and
dec
mov
lods
sub
fs
std
inc
add
jb
mov
pop
xchg
add
pop
mov
mov
push
adc
mov
xchg
add
xor
dec
test
cmp
add
sub
cmp
aam
xlat
dec
mov
ds
push
mov
dec
sar
call
(bad)
es
inc
div
pop
ret
fwait
pop
movs
mov
push
jno
cli
mov
ds
mov
scas
jns
pop
retf
mov
fld
sti
inc
bound
outs
adc
jne
sub
loop
call
mov
aad
test
jmp
mov
add
sbb
sub
in
cmp
popf
sbb
cs
sbb
pop
pop
inc
js
das
iret
call
push
(bad)
push
lods
test
inc
in
push
stos
or
fsub
dec
inc
pop
mov
nop
and
pusha
fld
xchg
xchg
mov
inc
cmp
jp
fild
jno
pop
mov
push
add
fstp
nop
dec
cmp
ins
dec
mov
xor
pop
push
mov
dec
dec
sbb
mov
pusha
mov
(bad)
aad
sub
pop
ins
rcl
movs
movhps
mov
movs
mov
fidiv
fwait
pop
daa
push
dec
xchg
(bad)
loop
push
sbb
ret
retfw
jne
rcl
retf
fcmovbe
pop
popa
mov
ss
adc
inc
stos
mov
or
jns
scas
js
jae
sub
and
dec
pop
cwde
mov
or
jmp
pop
lods
in
clc
inc
mov
mov
push
or
fs
je
jle
popf
out
sub
pop
and
into
mov
sub
sub
ret
xor
or
pop
stos
push
test
pusha
fild
dec
out
fwait
ja
push
gs
aad
jl
nop
and
ret
adc
dec
xor
aaa
scas
mov
lds
test
inc
shr
nop
imul
mov
(bad)
jo
lods
psllq
xchg
test
push
lods
leave
inc
xchg
aaa
pop
push
in
xchg
cwde
das
inc
fwait
adc
clc
retf
pop
adc
push
lea
(bad)
das
mov
dec
pop
ss
sbb
inc
sahf
and
ds
movs
inc
loopne
fstp
int
cmps
adc
cwde
jo
or
sbb
rol
cmps
idiv
inc
movs
repz
aaa
fisub
test
sahf
pop
xchg
mov
sub
cmp
hlt
loop
stc
stc
std
lods
push
dec
push
retf
cld
pushf
pop
ret
pavgb
leave
jae
out
das
outs
pop
out
adc
jno
dec
repnz
enter
xchg
mov
mov
enter
retf
xor
lahf
dec
cmp
xlat
sub
ins
(bad)
sbb
cmp
and
int3
sbb
repnz
sbb
mov
into
sub
inc
mov
mov
call
test
(bad)
punpcklwd
jl
xchg
fcomp
ins
loopne
pop
jmp
lods
sbb
mov
jge
js
mov
ret
jns
pop
mov
xor
jmp
pop
lea
lahf
jp
sbb
pop
inc
jno
call
sbb
dec
imul
(bad)
push
adc
jae
mov
push
into
jne
test
mov
fsubr
xchg
aas
cs
stos
cdq
loopne
mov
les
adc
sub
les
bound
cmp
fnsave
cmc
xchg
ins
shl
and
mov
xchg
push
push
fsub
test
mov
cwde
mov
mov
retf
xchg
rcl
imul
sub
inc
jo
sbb
xor
loop
pop
cmps
pop
std
dec
adc
loopne
xor
movs
pop
pop
lock
mov
inc
stos
or
sbb
add
ret
out
and
unpckhps
mov
and
push
and
rcl
fst
es
mov
aad
jbe
add
xor
mov
test
jo
mov
lods
gs
popf
pop
push
(bad)
fstp
and
and
xchg
leave
icebp
rcr
jle
xor
sub
movs
call
add
pop
jns
xchg
(bad)
ficom
rol
aaa
movs
adc
loopne
addr16
sbb
rcl
mov
fcom
jb
or
ds
inc
mov
aaa
adc
sbb
lds
ds
xchg
cli
pop
adc
inc
or
pop
mov
enter
stc
rol
scas
adc
cli
fdivr
(bad)
mov
jl
sub
or
push
hlt
adc
(bad)
int3
fcom
dec
in
jmp
out
(bad)
mov
xchg
sub
mov
stc
pop
xchg
dec
hlt
loop
not
fisubr
cmp
aas
cwde
(bad)
pop
pushw
sahf
xor
iret
add
cdq
cmp
jno
pop
popf
test
fnstenv
push
imul
mov
cmp
sahf
js
adc
xchg
into
clc
xchg
pop
stos
out
push
ins
stos
scas
cmps
mov
cmps
push
mov
jno
dec
repnz
je
rcl
ja
ror
add
cli
jbe
sub
jne
sub
jne
out
mov
or
ja
sub
jge
out
fisub
pop
scas
pop
mov
xor
cmp
xor
int3
ds
mov
dec
in
xor
jbe
aas
push
cdq
cwde
xchg
sub
pop
popf
cmps
add
or
mov
sbb
fidivr
pop
push
ins
fdivr
cwde
mov
and
in
or
mov
pop
mov
mov
mov
add
out
fcomip
je
ret
mov
push
shl
iret
xor
mov
leave
push
jno
cmp
(bad)
fcmovnbe
xchg
sbb
loope
push
add
not
add
cmp
loopne
mov
pop
pop
inc
mov
shr
sub
mov
imul
fsubr
push
jbe
or
call
pop
sub
xor
pop
mov
(bad)
pop
(bad)
sbb
lahf
mov
mov
push
push
cld
call
outs
mov
in
in
sub
jns
pop
lock
mov
xor
aas
push
inc
mov
ss
mov
std
stos
fwait
test
jp
mov
and
stos
retf
cmp
pop
and
sbb
jbe
inc
lock
pop
mov
call
movs
xchg
jecxz
gs
xchg
cld
fistp
mov
pop
lods
movs
imul
sar
cmps
push
or
out
adc
or
into
jmp
clc
push
(bad)
xlat
add
dec
pop
xor
scas
add
xor
int
neg
inc
aas
in
call
or
mov
inc
ss
push
jae
stos
push
lods
inc
jp
push
stos
scas
xor
dec
(bad)
ficom
xchg
xor
in
jo
ds
lea
daa
xchg
and
gs
jge
add
inc
ins
adc
jb
inc
shl
add
or
add
jmp
xchg
in
sbb
adc
mov
addr16
cmps
lds
and
pop
fldenv
mov
adc
fisub
adc
pop
pop
lods
bound
xor
jne
nop
aaa
in
dec
std
push
adc
jecxz
lods
xor
push
ja
mov
push
aaa
cmp
bnd
push
(bad)
sub
fidivr
xor
mov
cmps
shl
and
push
adc
(bad)
stc
inc
dec
xlat
mov
mov
jp
fadd
int3
cmp
dec
fcomp
pop
pusha
sbb
ret
jb
pop
jne
ret
dec
push
shl
cwde
sub
xchg
xor
je
inc
push
jp
fimul
xchg
fsub
push
cmp
mov
sbb
pop
push
out
pop
push
repnz
mov
jmp
jo
dec
sub
fcom
retf
dec
dec
cmp
cmp
and
mov
mov
sbb
pop
out
sbb
nop
mov
pop
xchg
and
add
pusha
mov
xlat
or
lds
sbb
adc
fnsave
and
pusha
xor
xchg
fld
push
and
jle
inc
jae
into
out
and
out
and
stos
mov
pop
push
push
pop
ja
xchg
icebp
lock
mov
pop
sar
mov
lods
call
cmc
stc
dec
push
inc
ds
push
and
pop
xchg
aad
sub
repnz
out
jmp
sbb
sti
pop
inc
adc
ss
pop
cdq
pop
add
outs
loopne
jmp
jbe
stos
ss
(bad)
loopne
repnz
sub
es
xchg
mov
std
sbb
push
xchg
fwait
add
out
push
cmps
push
int3
mov
call
icebp
jno
in
add
pop
fidivr
mov
stos
pushf
push
lock
inc
les
xchg
push
and
push
je
cmps
sahf
into
pop
inc
inc
retf
cwde
stc
sbb
ds
pop
xor
push
cmp
cld
das
add
ss
xchg
xchg
ror
xchg
mov
and
xchg
cwde
dec
sub
xor
sub
and
mov
dec
test
pop
or
fwait
dec
jmp
jae
rcr
sbb
rcl
sub
jle
mov
mov
xchg
jne
push
das
sub
pushf
mov
ret
or
or
or
push
fs
cmp
in
pop
ret
jne
das
imul
scas
or
and
dec
cmp
ins
ja
dec
neg
pop
das
mov
adc
or
pusha
int
and
or
outs
inc
pop
ja
retf
sbb
push
sahf
dec
xchg
int3
into
sub
add
fadd
(bad)
push
test
stc
adc
dec
push
addr16
pop
loope
sbb
dec
lahf
test
mov
or
inc
shl
call
cwde
xchg
jnp
xchg
pop
pushf
mov
and
cmc
addr16
cmp
xchg
cmp
mov
or
out
cli
xchg
popa
out
jge
or
xchg
cli
call
jle
xchg
aaa
mov
bound
xchg
xor
loope
jle
shl
mov
sbb
sbb
and
mov
scas
bnd
outs
cwde
ds
mov
pop
out
mov
rol
mov
fistp
inc
push
ja
dec
ins
and
inc
imul
scas
mov
repnz
add
int
lods
test
js
inc
and
add
fsubr
jecxz
dec
add
scas
int3
fnstenv
adc
push
rcr
ror
and
(bad)
jns
mov
cmp
lods
pop
cs
nop
cmp
aas
mov
push
xchg
test
and
sub
jne
pop
loopne
fwait
(bad)
pusha
mov
xchg
repz
fcmovbe
aad
cld
pop
pop
hlt
jmp
outs
sub
cli
dec
jo
sbb
dec
inc
dec
or
and
and
stos
add
arpl
sbb
cmps
cmc
adc
sub
mov
jl
ficom
pusha
xlat
ja
test
aaa
or
sub
jle
loope
add
cmp
mov
sbb
push
rcr
out
mov
in
and
loop
push
out
mov
dec
jns
pop
and
jge
add
imul
in
mov
movs
cmp
lds
stos
js
mov
sub
ror
std
mov
mov
(bad)
jge
leave
fdivp
mov
jecxz
push
es
push
es
sbb
xchg
pop
or
sub
push
jae
mov
jb
xlat
shl
ja
add
sbb
sbb
in
inc
lds
data16
mov
lea
in
into
out
iret
xchg
pop
jae
(bad)
ud0
fwait
push
cld
sub
cmps
mov
lds
add
(bad)
push
dec
popa
xor
out
jmp
adc
loop
pushf
xor
sub
sbb
shl
xor
inc
pusha
std
xchg
arpl
dec
xlat
imul
js
jo
fild
sahf
mov
xchg
xchg
dec
out
popf
mov
ret
cs
cmp
pop
or
mov
cmc
stos
outs
movs
mov
jp
cmc
mov
lods
fisub
or
hlt
xor
cmps
add
adc
dec
xchg
cld
sub
pop
cmc
cs
cli
pop
jnp
pop
cs
call
mov
add
popa
dec
call
and
fbstp
sub
dec
add
shl
adc
push
(bad)
lock
cmc
jge
test
jp
push
and
lahf
or
ins
mov
adc
jge
pusha
cdq
and
imul
adc
adc
call
aad
cmp
sub
mov
repz
outs
ror
mov
pop
pop
mov
add
inc
inc
call
lods
cwde
in
mov
mov
test
pusha
pop
push
(bad)
fadd
pop
jmp
inc
mov
inc
xlat
ins
in
sub
lods
outs
rcr
mov
mov
pop
imul
sub
fisttp
dec
xchg
sbb
push
inc
pop
push
pushf
int
push
outs
mov
push
inc
inc
ret
ins
sub
push
mov
cmp
or
ror
dec
or
sti
bound
in
mov
test
jbe
cs
mov
fistp
inc
adc
push
inc
mov
push
fst
push
push
mov
je
mov
stos
js
cmp
jl
scas
inc
loopne
iret
lods
mov
xchg
jmp
test
ficomp
popf
mov
adc
outs
push
pop
and
ficom
xor
and
pop
jbe
stc
add
inc
sub
adc
test
mov
cwde
out
push
pop
push
loope
mov
gs
xchg
adc
rcl
dec
das
push
cld
xchg
sub
dec
fwait
mov
call
into
movs
mov
xchg
add
mov
xor
jnp
mov
jo
lahf
xchg
push
mov
fiadd
imul
in
clts
sbb
or
jecxz
sub
sub
xor
jle
push
add
(bad)
loope
adc
not
sbb
cdq
xor
(bad)
das
dec
loope
dec
loop
add
jp
in
adc
stc
sub
loopne
or
mov
out
pop
sub
jae
ins
xchg
dec
mov
dec
cs
sbb
fistp
mov
pusha
push
rcr
lahf
cmp
ret
or
(bad)
out
rol
rol
sbb
cmp
xchg
jae
dec
pop
mov
xchg
fs
cmps
cli
cs
or
out
and
mov
sub
dec
lods
mov
imul
loopne
fidivr
pop
push
shr
mov
repz
cmps
xor
adc
pop
cmps
mov
cmp
movs
imul
retf
push
stc
cmp
fnsave
inc
cmps
mov
pop
mov
es
pusha
test
rcl
cld
cmp
dec
pop
call
ss
in
(bad)
mov
out
pop
lahf
sbb
sbb
mov
mov
mov
inc
xor
jne
sbb
sub
pop
sbb
imul
nop
push
or
sbb
mov
inc
cmps
int3
add
in
xor
dec
sbb
or
out
mov
dec
iret
mov
outs
xchg
xchg
mov
cwde
mov
push
mov
jge
push
rcl
cmp
aas
mov
xchg
scas
daa
adc
std
cld
adc
pop
or
pop
in
(bad)
jne
push
and
jno
or
adc
xor
dec
lods
xchg
in
pop
shl
mov
fst
out
pusha
cs
sbb
(bad)
iret
mov
dec
jecxz
mov
mov
pusha
xchg
adc
jmp
jge
push
mov
popf
jnp
push
psllw
sahf
adc
bndstx
sub
pushf
mov
loop
mov
mov
fild
push
push
shl
call
mov
mov
loopne
imul
cmps
sbb
outs
cmp
adc
std
push
mov
outs
dec
dec
outs
repz
not
lea
adc
sbb
shl
add
cmp
(bad)
jg
jmp
push
mov
cmp
out
mov
push
dec
ror
je
aad
test
jle
dec
dec
sti
lock
loop
add
jae
repz
jo
push
push
jae
sub
pop
xchg
rcl
adc
adc
(bad)
test
sbb
inc
xchg
int
idiv
cmp
inc
mov
in
mov
push
push
enter
jae
imul
fcomp
pop
cmps
pop
outs
scas
leave
ss
retf
jno
push
std
aad
pop
push
scas
ss
jmp
fs
and
push
lock
mov
imul
jne
es
outs
pop
mov
daa
mov
es
jp
xchg
mov
push
aad
and
out
fsub
loop
scas
sbb
das
shr
(bad)
sbb
inc
xchg
aad
xor
lea
mov
jmp
mov
shl
mov
enter
aas
adc
inc
mov
cdq
je
clc
jmp
mov
mov
aad
inc
sub
jbe
dec
cmp
imul
pop
push
ffree
mov
and
fwait
arpl
cmp
xor
pop
and
mov
fs
in
and
leave
or
lock
jno
repnz
or
adc
daa
aad
sbb
mov
mov
data16
inc
add
or
cmp
out
lds
xor
cld
mov
loopne
and
jmp
xchg
or
jp
jl
rcl
imul
addr16
data16
aad
sahf
shl
mov
jmp
push
test
dec
xchg
repz
in
out
and
adc
retf
sbb
adc
pop
and
fst
sbb
imul
retf
xchg
jle
aad
xor
jecxz
adc
jbe
xor
call
outs
xor
std
adc
mov
popa
adc
and
push
mov
jmp
out
sbb
pop
sbb
jnp
outs
lock
jge
push
mov
mov
cmp
in
out
mov
xchg
jns
les
xchg
mov
fsub
mov
adc
mov
jo
mov
adc
xchg
gs
mov
jnp
frstor
jmp
addr16
cli
dec
xor
xchg
ins
scas
outs
pop
shl
xchg
mov
sti
lahf
movq
xchg
cli
loop
jb
mov
pushf
pop
xchg
imul
adc
popa
adc
gs
adc
ins
div
outs
fcom
jp
daa
lods
jle
test
into
inc
fimul
or
xor
lods
xchg
ret
sar
xor
shl
push
mov
out
push
imul
fisub
repz
cmps
test
lods
mov
push
ret
dec
aas
(bad)
in
fsub
adc
stos
xor
loop
xchg
sub
cmp
sbb
fnsave
adc
add
xor
push
int
cs
gs
aad
paddusw
fcom
clc
leave
mov
sar
or
icebp
add
or
ds
(bad)
shr
push
mov
pop
pop
jp
sbb
out
mov
leave
xchg
movs
add
pusha
sub
test
bound
mov
sbb
pop
mov
xor
mov
rcl
adc
push
shl
(bad)
xlat
inc
add
fstp
lahf
mov
sub
mov
fstp
jecxz
jp
cmp
test
mov
and
jae
add
adc
outs
and
scas
xor
mov
mov
add
loopne
sar
inc
inc
and
mov
jge
mov
sbb
or
cmc
aaa
das
xchg
sti
mov
(bad)
fsub
dec
add
push
popf
cmp
inc
mov
(bad)
sub
pop
pusha
xchg
cdq
pop
das
cdq
in
xor
push
add
fistp
in
lds
push
push
je
mov
sbb
mov
in
sbb
in
add
and
xchg
xchg
out
xchg
jbe
ret
xchg
stos
test
and
(bad)
push
and
pop
sub
xchg
xor
leave
mov
lea
push
xor
jne
lds
cmc
ret
xchg
mov
sub
add
neg
adc
add
ja
jp
retf
inc
push
lods
push
jmp
(bad)
pushf
adc
or
xchg
dec
ins
sbb
in
enter
ss
shr
dec
mov
dec
push
mov
jo
test
mov
push
pop
cmps
sub
or
and
cmp
(bad)
out
mov
jbe
or
(bad)
dec
lds
jmp
push
sti
into
dec
imul
hlt
lods
dec
mov
jbe
cs
sahf
push
out
sbb
jne
pop
jbe
fisubr
push
pop
les
cmps
fucomi
mov
int3
or
jb
aaa
lahf
sub
lods
mov
xchg
or
dec
sbb
inc
sub
lock
sub
ins
inc
sbb
jo
dec
adc
ds
pusha
adc
mov
daa
push
mov
sbb
lds
jg
in
call
in
dec
fidivr
ja
fwait
mov
cmp
std
scas
cmp
xchg
and
mov
cmp
stc
call
jbe
mov
mov
bound
sbb
data16
retf
and
dec
shr
xor
not
or
push
div
xchg
lahf
dec
std
add
xor
mov
inc
jbe
arpl
add
cld
bswap
xchg
in
call
test
imul
xchg
push
mov
push
fld
shl
fdivr
test
inc
or
xor
push
pop
mov
nop
push
sub
popf
push
sub
jp
pop
mov
sub
mov
push
inc
mov
adc
pop
loop
cmp
add
scas
fld
rol
clc
jecxz
mov
xchg
out
pushf
in
fnstcw
pop
mov
sub
jmp
adc
loop
pop
sti
stc
jge
sbb
xchg
fidivr
out
loopne
push
mov
aad
jno
and
mov
xor
imul
cmc
pop
outs
or
rcl
or
jmp
mov
push
mov
std
out
or
push
(bad)
shl
mov
adc
ficom
movs
add
(bad)
jl
adc
inc
stos
sub
in
dec
push
pop
push
pop
xchg
jge
scas
and
std
rcr
callw
adc
mov
push
iret
ds
add
sub
icebp
pop
fild
in
xchg
adc
cmp
fstp
mov
(bad)
or
dec
dec
ror
push
jbe
dec
mov
add
mov
mov
dec
push
(bad)
push
xor
dec
es
leave
std
fcom
cdq
sbb
dec
adc
daa
pop
mov
pop
fist
jp
add
cmps
ins
mov
push
cmc
push
dec
adc
mov
or
sti
xor
dec
cmps
popa
jmp
pushf
lds
outs
add
jb
cmps
outs
dec
jl
cmc
or
das
je
pusha
hlt
leave
inc
xchg
rol
(bad)
fsub
call
xchg
mov
and
or
xchg
aad
mov
stos
pop
cmp
xchg
sbb
xor
jg
daa
sti
pop
and
xchg
mov
dec
ins
mov
adc
push
sub
push
mov
xchg
out
cmp
dec
add
mov
lods
rol
fwait
hlt
mov
repz
fst
jmp
adc
jbe
sbb
mov
xchg
sub
jg
(bad)
inc
dec
push
or
ss
dec
cmp
cmp
sub
dec
cmp
ins
inc
mov
popf
in
pushf
addr16
pop
retf
fs
jmp
fisttp
cmps
aad
je
push
mov
in
adc
ret
sar
adc
sbb
enter
aad
pop
xchg
fst
and
(bad)
or
hlt
sub
stos
add
in
int3
mov
outs
pop
pop
mov
jne
or
inc
sbb
retf
loope
pop
adc
je
xchg
jmp
cmp
push
(bad)
stos
dec
int
inc
inc
xchg
sbb
(bad)
test
add
mov
aaa
add
imul
push
sbb
and
xor
loopne
loope
jle
std
es
movhps
mov
movs
push
xchg
inc
outs
xor
scas
jge
not
xlat
jmp
lods
xor
jb
push
bound
aad
jnp
or
push
pushf
enter
mov
leave
cdq
mov
lods
mov
and
and
xchg
clc
into
mov
jmp
outs
xchg
fwait
lods
fdiv
mov
(bad)
push
frstor
jns
cld
hlt
pusha
arpl
int
mov
add
rol
mov
fucom
jecxz
dec
ds
mov
pop
shr
xor
or
(bad)
(bad)
push
or
pop
push
mov
enter
pop
adc
retf
les
mov
sub
pop
call
jnp
(bad)
fdivr
popf
jp
jg
daa
sbb
cwde
adc
mov
cmp
leave
jle
call
sbb
out
js
inc
sub
push
sbb
dec
retf
xor
fsub
dec
retf
fstp
retf
cmp
stc
into
dec
or
pop
lds
mov
popa
retf
sbb
jle
adc
jp
pop
jecxz
or
add
enter
and
je
aam
in
cwde
dec
iret
xor
call
xor
in
pop
call
fcomp
call
nop
ss
je
and
xchg
scas
and
cmps
stc
xchg
popf
inc
loop
mov
loope
inc
push
pop
iret
sar
aad
cld
mov
mov
dec
loope
pusha
sbb
data16
test
jmp
add
(bad)
shl
daa
(bad)
out
inc
jg
ret
mov
mov
aam
mov
sbb
dec
dec
dec
fstp
shr
inc
cmp
popf
xchg
xor
scas
stos
cmps
icebp
sar
cdq
mov
popa
mov
sub
mov
gs
dec
mov
xor
mov
adc
mov
pop
fild
inc
stos
int3
cdq
fcmovnbe
bound
repnz
nop
fmul
mov
mov
nop
add
dec
fs
popa
mov
sub
jbe
add
in
outs
dec
ror
cmp
jbe
push
out
ds
sub
pop
jo
push
outs
pop
xor
pusha
and
fld
int
sub
inc
mov
clc
mov
cmp
cmp
sti
imul
mov
sar
dec
dec
sbb
aad
nop
into
imul
cli
pushf
loope
mov
nop
imul
inc
push
scas
iret
test
loop
xor
in
mov
cwde
div
sbb
aaa
icebp
in
in
ret
inc
push
lahf
clc
pop
sbb
sti
add
inc
sbb
iret
in
sbb
push
(bad)
mov
lods
add
fld
inc
jae
mov
sbb
rcr
pusha
verr
call
dec
imul
inc
mov
stos
add
iret
ja
es
fdiv
mov
outs
mov
mov
adc
jns
in
cwde
ror
sti
mov
idiv
sub
cmps
xchg
fsubr
add
loop
(bad)
hlt
push
fcomp
pushf
int
jmp
int3
sub
(bad)
loop
jmp
mov
xchg
in
lods
arpl
retf
mov
mov
repnz
inc
inc
pop
cdq
inc
dec
test
loope
adc
mov
mov
inc
dec
test
out
xor
loope
dec
jecxz
aad
adc
adc
int3
add
inc
add
cmp
es
rol
mov
cmp
std
pop
add
mov
cmps
or
jg
cmp
add
push
pop
mov
add
mov
popa
sbb
js
add
movs
and
(bad)
sub
loop
push
adc
pop
dec
jne
push
cmp
and
sub
sub
cmp
push
xchg
aas
popf
stos
add
jp
jns
fs
jg
add
add
cmc
(bad)
cmp
xchg
xor
push
data16
push
lods
cmp
sbb
xchg
mov
or
mov
gs
rcr
cmps
adc
int3
loopne
lock
adc
or
push
pop
int3
push
test
rcr
xor
gs
fld
bound
mov
mov
stc
jmp
jle
inc
dec
fscale
test
mov
mov
xor
movs
test
fimul
bound
xchg
jmp
cwde
jecxz
jne
push
and
adc
mov
and
std
aaa
adc
mov
mov
ror
or
jae
je
and
push
cmp
add
jg
rol
popf
and
jns
pop
xchg
retf
xlat
(bad)
jns
pop
sbb
sbb
sbb
ret
push
cmp
or
in
push
outs
lea
call
push
mov
jge
fwait
or
ror
out
repz
add
mov
stos
bound
and
out
icebp
out
mov
adc
xor
mov
loopne
xchg
xlat
in
stos
call
movlps
push
test
adc
cmp
and
xor
ja
push
ja
daa
or
mov
adc
out
loope
neg
jnp
shr
cmp
jbe
das
push
adc
fistp
sbb
in
movs
cs
(bad)
arpl
and
call
sbb
mov
and
fs
sbb
xchg
ins
mov
das
pop
scas
push
inc
adc
adc
gs
or
bound
cmps
jne
int
mov
mov
mov
cmc
lds
int
stc
pop
in
push
mov
or
jge
push
pop
push
repnz
movs
mov
repz
test
inc
cmp
push
push
and
pop
cwde
sbb
mov
dec
(bad)
mov
sahf
icebp
pop
mov
pop
cmps
sahf
sub
cmp
lock
push
aam
cmp
cmps
emms
movs
icebp
lods
aas
push
sar
fidiv
fsubr
sbb
cli
out
cmp
jbe
jnp
xor
inc
(bad)
inc
idiv
sbb
lea
jb
mov
icebp
adc
shl
fmulp
jmp
xchg
cdq
and
mov
jb
je
inc
cwde
int3
xchg
sub
ja
rcr
scas
imul
sti
(bad)
fbstp
jne
mov
sar
fbld
popf
aam
les
(bad)
scas
nop
rcr
xor
and
push
ds
pop
pop
and
add
cmp
jmp
leave
rcr
gs
imul
cmp
ffreep
dec
cwde
(bad)
div
or
stc
inc
test
fisttp
mov
hlt
pop
shl
jne
push
add
cmps
les
mov
sbb
outs
popf
and
push
jl
mov
mov
xor
mov
cmp
xor
lahf
rcr
mov
aam
loope
mov
icebp
stc
in
pop
cs
inc
pop
mov
lahf
pextrw
pop
fnstenv
xor
add
push
xchg
xchg
out
mov
outs
std
call
xchg
(bad)
ror
xor
jecxz
jg
mov
adc
mov
adc
movs
ds
sbb
adc
inc
ds
mov
fs
faddp
fiadd
mov
sub
stc
test
or
or
out
lahf
mov
cmp
jbe
sti
adc
pop
and
dec
xchg
inc
xchg
sbb
jecxz
cmp
das
aas
int
outs
jmp
aad
ret
lahf
add
xchg
sbb
inc
adc
fs
dec
xchg
xchg
push
shl
es
outs
pop
or
mov
dec
or
sahf
push
push
or
xchg
sub
cmp
adc
cs
je
or
stc
pop
mov
xor
pop
retf
out
shr
out
pop
and
neg
ja
mov
xchg
fwait
ds
mov
jmp
outs
data16
out
push
mov
jne
mov
mov
inc
jne
and
add
sbb
in
pop
arpl
push
push
enter
jp
xchg
or
mov
push
cmp
iret
fist
lds
jecxz
cwde
xor
mov
inc
mov
retf
js
xchg
cs
push
inc
out
outs
call
mov
cmp
test
inc
xor
and
test
mov
lock
push
jecxz
in
jmp
ja
aam
jge
mov
test
sbb
jb
pushf
push
(bad)
jnp
push
sbb
push
add
and
or
test
and
adc
loope
test
add
stos
test
inc
xor
pop
ret
ror
ret
xchg
nop
cmp
aad
pushf
xor
and
xchg
jae
(bad)
and
mov
fcmovbe
(bad)
xchg
aaa
jge
push
ds
mov
outs
mov
mov
jae
sbb
and
pop
adc
inc
outs
shl
pop
and
sub
lea
sub
call
retf
ficom
adc
dec
add
fmul
mov
rol
xchg
cs
loopne
cmp
aaa
mov
sub
stos
test
stos
call
jp
adc
cmps
sbb
mov
cmp
pop
jp
cwde
call
jge
xor
rol
push
cmc
push
mov
jo
fs
enter
imul
out
ins
inc
in
jmp
stos
sub
aam
loope
call
(bad)
and
into
clc
mov
jmp
pop
dec
stc
stos
inc
rcr
outs
jmp
fldenv
pop
jecxz
cwde
inc
scas
push
hlt
pop
xor
sub
jns
aam
jae
mov
hlt
cmps
(bad)
retf
sbb
inc
inc
int3
call
jl
sub
mov
pop
xchg
scas
mov
sbb
adc
push
and
in
push
fwait
retf
dec
mov
inc
icebp
push
push
cmp
lods
out
push
out
cwde
or
repz
jg
imul
ret
aaa
call
int
(bad)
jmp
fcom
scas
hlt
adc
xor
mov
bound
stos
(bad)
out
test
jmp
nop
sbb
sbb
sub
repnz
cwde
call
jnp
scas
push
mov
adc
int
test
addr16
int3
aad
cmp
jb
mov
push
cmp
data16
inc
stos
pop
in
xchg
mov
jl
adc
stos
std
out
in
push
cwde
xchg
cli
pop
mov
mov
dec
dec
adc
dec
inc
jne
ja
xor
imul
dec
(bad)
push
cmps
sahf
pop
fmul
lods
push
dec
jp
in
sbb
mov
inc
adc
pop
bound
mov
into
pop
iret
inc
mov
xchg
lsl
fmulp
ja
inc
mov
scas
lahf
inc
inc
and
or
test
aaa
fwait
int
test
btr
push
inc
dec
imul
fs
cld
mov
pop
mov
or
cmp
jbe
push
mov
pop
sbb
(bad)
je
jecxz
jge
inc
or
mov
ret
mov
pop
jge
mov
fisub
mov
sbb
jmp
adc
js
out
jecxz
mov
push
sub
add
in
pop
aas
test
mov
push
call
sbb
cwde
mov
pop
push
test
push
jnp
(bad)
or
or
or
dec
jge
sub
mov
mov
call
aaa
and
retf
or
fist
dec
sub
cmp
out
enter
xor
fadd
sub
aas
pushf
cdq
cmp
lock
outs
jo
jno
add
sbb
and
rcr
mov
fdiv
inc
sub
pop
out
lods
or
(bad)
js
lods
jbe
repnz
loopne
mov
and
into
mov
(bad)
jecxz
fst
mov
mov
cmp
aaa
mov
mov
pop
mov
(bad)
(bad)
pop
fadd
mov
cld
(bad)
movs
xchg
stc
outs
mov
in
mov
push
pop
xchg
inc
ins
lock
retf
sub
add
and
and
data16
imul
mov
jmp
push
pop
imul
xor
ja
xor
mov
dec
pop
jp
adc
jbe
mov
jmp
jb
fst
int3
jbe
fnstsw
push
lea
ret
adc
js
mov
xchg
in
cli
inc
and
int3
ja
inc
outs
mov
mov
mov
inc
pop
xchg
mov
xor
sbb
adc
and
push
retf
mov
inc
je
clc
add
retf
pop
push
les
aad
push
mov
stc
(bad)
mov
add
pop
and
cmp
pop
adc
into
push
lods
lock
mov
shl
and
add
or
aaa
mov
jne
repz
jb
sbb
ror
or
xor
xchg
jmp
push
cmp
or
jmp
sbb
adc
mov
inc
(bad)
ret
movs
push
mov
add
jb
stc
push
mov
pushw
adc
and
aas
xchg
mov
imul
aaa
push
pop
aad
adc
ret
add
fwait
and
dec
pushf
into
inc
cdq
inc
call
out
dec
push
pop
in
lahf
mov
into
hlt
mov
push
pop
jp
lock
addr16
sub
pop
push
jae
movs
fwait
int
add
jns
gs
and
test
f2xm1
stos
inc
loop
mov
sub
scas
adc
dec
inc
pop
add
mov
jbe
pusha
sahf
sub
jg
not
ins
in
jno
cld
in
pop
cmp
push
jmp
push
leave
cmp
lea
cdq
sti
int
pop
lods
into
jecxz
sub
and
cli
lods
mov
sahf
push
sbb
cmp
dec
es
out
sbb
int3
mov
sbb
sub
mov
dec
inc
sub
mov
iret
scas
lods
add
cli
or
outs
adc
inc
not
adc
sbb
sub
adc
push
data16
fwait
mov
or
sub
retf
je
adc
mov
xor
pop
pop
adc
repnz
adc
push
xchg
dec
test
adc
cmps
dec
push
addr16
fdiv
not
pop
dec
mov
(bad)
aas
or
(bad)
mov
call
jns
sbb
or
push
loop
test
out
cmp
cmps
test
or
arpl
retf
inc
mov
sti
xchg
outs
pop
in
add
sub
mov
call
es
sbb
dec
clc
dec
jo
in
sub
aad
nop
jg
add
fisttp
int
push
outs
or
shr
daa
push
(bad)
or
adc
xchg
mov
sub
cmps
daa
xchg
jmp
cmp
pop
loopne
push
ds
imul
loopne
lods
(bad)
mov
outs
outs
sub
dec
mov
dec
ins
dec
test
mov
lods
push
dec
jnp
xchg
call
test
cmp
adc
jecxz
pusha
movs
aas
popf
stos
mov
jl
sub
dec
scas
jno
popa
ins
jp
add
mov
mov
pushf
mov
mov
inc
sub
dec
(bad)
jp
xor
pop
mov
add
xbegin
push
daa
xchg
cdq
inc
outs
sub
mov
cdq
gs
push
add
std
lods
aaa
data16
in
sbb
addr16
lahf
ret
push
imul
mov
gs
aad
xchg
jge
dec
scas
or
daa
mov
comiss
push
push
iret
jl
(bad)
mov
fbstp
test
pop
or
or
arpl
je
cmc
imul
jle
inc
pop
jno
mov
pusha
jo
pop
(bad)
push
inc
inc
add
dec
repnz
cdq
sbb
push
fadd
xchg
push
sbb
fidiv
jnp
ja
sbb
mov
call
and
or
mov
pop
cmp
dec
mov
stos
pop
mov
add
scas
in
call
lahf
(bad)
leave
push
je
call
aaa
push
cmps
aad
imul
push
or
dec
sub
add
loope
into
cld
stos
mov
cld
arpl
mov
inc
les
pop
call
xor
in
jbe
rcr
movs
or
adc
mov
ret
scas
mov
add
les
pop
add
cmp
inc
add
addr16
pop
not
imul
test
fs
shl
sbb
fbstp
xor
pop
and
imul
mov
mov
loop
mov
ss
dec
stc
cli
movs
(bad)
dec
imul
sbb
pop
inc
repnz
pop
fdivp
xchg
int
pop
scas
mov
mov
pop
sub
mov
jbe
cmp
and
aad
cwde
sti
sti
xor
test
aad
xlat
pushf
sub
fwait
pop
loope
je
sahf
xor
popa
cmp
push
xor
xchg
adc
out
cwde
dec
jnp
pop
aas
nop
xchg
jl
loopne
pushf
adc
ja
dec
xor
dec
sbb
dec
push
call
mov
mov
(bad)
fsubr
add
pop
mov
rcr
in
cld
cmp
sbb
stos
fneni(8087
in
or
les
inc
dec
inc
ret
mov
sbb
push
pop
mov
xchg
or
cmp
(bad)
mov
sub
cmp
das
mov
add
jl
test
push
ss
push
mov
pop
add
push
pop
mov
mov
imul
int
(bad)
jle
and
cmp
pop
or
and
xor
or
add
xchg
rcl
cmc
call
cwde
cmp
(bad)
mov
add
out
les
das
fwait
push
retf
xchg
clc
lea
xchg
imul
out
int3
pop
mov
sbb
xchg
xchg
xchg
stc
inc
je
mov
mov
retf
sti
or
lods
in
xor
frstor
mov
fistp
mov
out
dec
test
test
lds
push
or
movs
pusha
dec
js
ss
outs
lods
inc
push
test
test
push
jne
pop
sub
gs
test
sar
xchg
loope
mov
adc
jo
call
or
imul
cwde
pop
test
iret
mov
addr16
or
shl
or
sbb
xchg
sub
ja
cmps
inc
sbb
out
xchg
cmc
js
leave
push
xor
jnp
pusha
dec
pop
xchg
push
inc
mov
mov
adc
mov
cmps
std
ins
adc
test
dec
jle
(bad)
cmp
cmps
cmp
xor
dec
dec
imul
mov
jo
sbb
adc
jle
add
fwait
xor
das
pop
jmp
pop
dec
mov
scas
in
cmc
bound
mov
neg
sub
nop
cmps
out
ins
inc
or
test
movs
xchg
xor
inc
into
shl
(bad)
push
ds
enter
jl
push
inc
out
adc
test
or
rsm
mov
mov
aaa
loopne
adc
rcl
cmp
and
mov
xchg
or
pop
jnp
jmp
dec
sub
sbb
std
and
or
aad
mov
imul
sahf
cs
nop
jg
jns
mov
ret
xor
xchg
mov
jno
int
mov
stos
icebp
iret
jmp
inc
ins
loopne
or
inc
es
xchg
mov
mov
sbb
xlat
sti
int
mov
loopne
ins
xchg
dec
loopne
stc
jb
test
(bad)
cmc
mov
pop
xor
dec
test
mov
movs
dec
enter
xchg
dec
lods
mov
repnz
call
pop
pop
cld
mov
movs
aaa
std
jb
ss
mov
ror
mov
pusha
mov
xchg
int
cmp
mov
sar
add
das
cmp
(bad)
ins
jge
imul
pop
mov
lea
xchg
hlt
shl
(bad)
push
test
stos
shr
or
(bad)
jmp
cmp
dec
adc
xor
dec
xor
shr
ror
sub
fwait
sub
stos
loop
dec
push
mov
popf
mul
lock
sub
int3
loop
out
xchg
or
push
cmp
lods
lods
and
jecxz
pushf
add
mov
mov
mov
adc
jmp
pushf
loope
retf
pop
imul
iret
jmp
cli
sahf
mov
and
jo
push
xlat
xchg
dec
add
neg
xor
pop
cmc
nop
jmp
repz
idiv
sub
aad
shr
jg
mov
add
sbb
pop
sahf
bound
aaa
push
mov
clc
or
into
push
aad
arpl
push
out
movs
cli
cmp
jp
mov
xchg
jp
sbb
popa
and
adc
pop
mov
sub
mov
cdq
js
pop
sar
test
and
loop
sbb
mov
fcmovnb
pop
fucomp
mov
push
and
loop
into
inc
out
inc
xor
mov
add
and
push
jmp
xchg
cdq
mov
in
pop
or
(bad)
push
cld
cmovbe
test
mov
in
sbb
rcl
test
sbb
sub
adc
popf
or
cmp
push
aas
leave
jmp
(bad)
xor
leave
scas
xlat
test
lods
scas
daa
or
rcr
add
in
cmps
scas
xchg
jecxz
mov
add
sar
mov
out
hlt
or
dec
push
add
push
dec
hlt
sbb
mov
retf
sub
fist
mov
cmc
and
daa
push
addr16
xor
cwde
addr16
mov
out
fnstcw
leave
sbb
lahf
cwde
cmps
mov
mov
(bad)
aaa
shl
outs
mov
fild
hlt
ins
and
mov
lock
das
mov
arpl
push
fiadd
pop
jmp
cmc
push
mov
data16
or
ror
stc
mov
cmp
jnp
pushf
(bad)
and
aam
mov
and
(bad)
jno
mov
mov
sbb
or
pop
arpl
pop
ja
mov
je
imul
out
div
test
or
lods
sub
clc
retf
mov
dec
and
mov
out
xor
jge
pop
adc
aaa
sub
pushf
push
xchg
pop
add
mov
add
mov
test
sub
mov
pop
jg
lods
xchg
inc
les
mov
jo
pop
into
xor
cmp
inc
cmp
fist
out
pop
arpl
pop
out
cmps
or
sbb
cmp
rol
xchg
imul
or
sub
push
jl
cwde
stos
sar
in
jge
and
repnz
aam
mov
cli
outs
in
xor
pop
push
je
cdq
or
or
cmps
adc
cmp
mov
out
aam
push
stc
lods
inc
mov
xor
std
(bad)
neg
aad
and
fbstp
xor
xchg
aam
inc
push
(bad)
mov
inc
xor
je
nop
jle
bound
mov
or
jo
and
sti
test
test
(bad)
mov
dec
nop
imul
ja
std
popa
mov
shl
loopne
mov
push
sub
pop
ss
shl
in
aaa
jmp
sbb
aam
or
mov
jmp
mov
neg
jecxz
adc
repz
inc
xchg
mov
and
in
xchg
and
mov
ins
mov
mov
xchg
mov
movs
mov
fwait
nop
neg
iret
cli
xchg
adc
mov
cs
pop
add
test
scas
pop
jbe
inc
in
mov
pop
test
in
cdq
ss
push
enter
xchg
sub
(bad)
aas
jbe
push
imul
mov
sbb
sbb
stos
jnp
fld
push
jge
test
or
(bad)
mov
push
ror
adc
(bad)
in
add
fcom
mov
and
(bad)
cmc
pop
scas
jecxz
enter
inc
ins
xor
xchg
and
push
test
adc
mov
retf
(bad)
lods
inc
xor
push
mov
mov
push
or
lods
mov
mov
xor
dec
push
dec
fcomp
jno
push
xchg
xor
(bad)
test
cmp
jne
sbb
push
and
movs
jno
mov
fnsave
popf
inc
mov
xor
std
adc
mov
(bad)
std
dec
in
pop
mov
adc
jmp
adc
dec
sbb
movs
xlat
(bad)
nop
cs
inc
pop
mov
sbb
sub
and
and
xlat
repnz
sbb
(bad)
jae
adc
icebp
jp
xchg
push
jnp
push
fisttp
sbb
jnp
lods
fmul
jge
inc
fcom
push
sub
jb
jmp
(bad)
sub
inc
mov
push
jle
jne
adc
or
xor
push
inc
mov
(bad)
js
test
dec
outs
jbe
int
cmps
fimul
data16
cmp
jae
aaa
mov
pop
mov
retf
sub
push
push
jl
loope
cmp
pop
std
int
iret
and
add
ja
cmp
lahf
jmp
ror
mov
pop
aam
rol
adc
xor
sub
jg
mov
rol
(bad)
retf
data16
out
lods
mov
add
mov
inc
pop
and
jbe
mov
jle
push
adc
mov
test
add
cmc
gs
and
fwait
and
daa
dec
jecxz
stos
out
push
jl
out
sbb
jecxz
fisttp
sti
retf
repnz
or
jbe
pop
adc
mov
sbb
cmp
ret
push
pop
pop
sub
xchg
addr16
mov
pop
push
add
fiadd
(bad)
jne
xor
imul
imul
mov
dec
push
(bad)
xchg
out
not
idiv
mov
stos
mov
addr16
lock
arpl
int
data16
dec
clc
sbb
call
cmp
aad
int3
in
and
or
sar
daa
stos
mov
sar
inc
ins
push
mov
cmp
xchg
pop
in
gs
ins
(bad)
(bad)
fimul
or
out
mov
cmps
xchg
inc
inc
iret
jg
push
push
out
in
in
xchg
push
pop
pop
xchg
enter
cmp
imul
xchg
or
xchg
adc
xchg
jmp
push
mov
adc
outs
mov
pop
pop
out
test
loopne
cmps
cmps
cmp
fstp
iret
xchg
inc
je
xlat
scas
out
jge
mul
jmp
lods
scas
or
dec
in
sub
clc
dec
cmp
cmp
lods
das
xor
jbe
nop
hlt
std
test
dec
push
cmp
int
inc
outs
jno
jns
icebp
js
inc
pop
jecxz
mov
sbb
(bad)
ds
dec
call
sbb
xor
pop
push
rcr
cmc
inc
sub
sub
arpl
pop
adc
cmps
retf
sbb
cdq
neg
mov
jge
adc
and
jne
cmp
mov
pop
(bad)
jmp
jge
xor
(bad)
adc
(bad)
xchg
test
adc
mov
pop
sbb
pop
xchg
xchg
mov
retf
in
mov
xchg
lock
outs
cmc
arpl
inc
cdq
xchg
clc
repnz
sahf
push
fmul
mov
or
ret
dec
mov
lds
loope
cmp
inc
mov
jns
ss
popa
sbb
loope
xchg
mov
ror
mov
cmc
aad
dec
push
dec
loop
loop
mov
sti
sub
call
out
sub
push
xchg
sti
dec
xor
mov
in
dec
cmps
dec
add
retf
sub
mov
in
xor
div
stos
push
rol
cmp
jecxz
jmp
adc
cmp
je
xor
sbb
mov
outs
sub
push
cmp
xor
lahf
scas
adc
xor
out
mov
mov
pop
in
xor
add
nop
(bad)
cmp
jecxz
push
dec
xchg
inc
repnz
rol
jmp
mov
xchg
mov
popf
xchg
sub
pop
dec
clc
mov
retf
and
fnstsw
add
dec
cli
pop
xchg
xchg
das
xchg
lds
mov
xor
xor
dec
mul
repnz
fdiv
sbb
pop
out
nop
xchg
iret
outs
cs
lahf
adc
jl
jne
pop
mov
xchg
ror
lods
xor
lods
in
adc
ret
mov
sub
or
cld
ins
mov
lock
and
xchg
shl
cmp
(bad)
mov
and
dec
jg
icebp
repnz
sbb
retf
rcr
sbb
outs
xchg
add
xchg
aaa
daa
xor
cmp
int3
xor
ja
pop
cmp
out
sub
test
dec
cmp
cli
xchg
xor
mov
pop
loop
pushf
or
or
loop
shl
popa
pop
cmp
mov
pushfw
inc
mov
retf
lods
in
dec
je
mov
in
rcl
inc
loope
dec
xchg
jnp
je
jmp
imul
jl
cmp
mov
sahf
xor
inc
lods
sbb
cdq
mov
xor
jns
test
jp
pop
jmp
xor
push
leave
lods
ret
xor
arpl
and
xor
(bad)
mov
shr
jmp
sub
sbb
pop
cli
push
lds
mov
sahf
add
int3
mov
(bad)
mov
mov
push
out
jne
mov
jnp
fadd
mov
jne
xchg
mov
ret
dec
retf
mov
into
pop
fnstsw
(bad)
repz
pop
cmps
ds
mov
mov
mov
pop
mov
mov
add
ror
xchg
cmp
pop
in
fstp
xchg
scas
fst
jle
mov
dec
loopne
xor
bound
into
out
bnd
push
stc
add
sub
call
xor
jp
pop
ds
pop
into
cmc
add
jl
mov
in
es
in
fbstp
xchg
popf
mov
mov
(bad)
out
popf
sub
stc
fadd
adc
dec
mov
shl
fwait
dec
push
mov
pop
cld
ret
sub
outs
rcr
arpl
mov
adc
loope
loope
shl
mov
inc
jmp
pop
adc
popf
bound
add
push
repnz
hlt
or
or
rcr
mov
js
call
xchg
xor
daa
push
adc
out
into
inc
mov
cmc
cs
test
cmc
ret
in
pushf
div
in
ficom
movs
in
ret
or
fs
mov
mov
mov
push
push
sbb
mov
push
pop
out
imul
mov
jecxz
imul
cmps
adc
pusha
aaa
in
in
mov
mov
cs
jp
xor
arpl
ins
loop
mov
xchg
and
int
xor
cmp
adc
and
push
rol
sahf
push
movs
(bad)
rcl
xor
cli
inc
movs
sbb
arpl
push
pop
daa
cmps
rcr
in
cmp
je
xor
mov
jl
outs
jno
inc
sub
push
imul
aad
jns
nop
test
shl
push
push
js
iret
ds
loope
push
not
or
ins
push
(bad)
fwait
jns
js
mov
cmp
xor
out
sub
add
test
jle
iret
repnz
dec
mov
stc
aam
cs
and
fild
int3
fcom
push
sbb
push
push
push
jo
cli
(bad)
fst
or
pop
push
inc
push
mov
cmp
out
fidiv
inc
mov
clc
div
jle
jno
mov
fcom
mov
lds
mov
jbe
movs
mov
mov
or
out
es
fdivrp
sbb
nop
fdiv
push
sbb
leave
out
mov
das
and
adc
jno
jle
add
scas
in
and
mov
xadd
cmp
aas
mov
call
sub
pop
mov
adc
rcl
add
push
cmc
js
in
jbe
cld
ror
loopne
sub
add
pusha
push
aaa
cdq
cmc
sbb
mov
add
gs
add
xlat
jmp
and
repz
stc
mov
aaa
ja
sar
push
or
xchg
fdivr
loope
ins
jg
mov
(bad)
xlat
mov
aad
inc
int
scas
stos
mov
sub
mov
fs
outs
mov
add
xor
adc
jl
adc
mov
lock
mov
jp
xchg
pop
and
add
retf
jns
pop
sub
shr
iret
retf
loop
sbb
retf
out
nop
data16
mov
mov
pop
jl
rcr
xor
jecxz
push
adc
fdiv
xor
std
in
jge
adc
and
xchg
(bad)
cmp
pop
pop
mov
mov
xor
movs
ror
movs
mov
sbb
add
ja
jno
js
sub
sub
push
pop
push
mov
ins
fwait
lea
jne
loopne
ficom
cmp
xchg
dec
in
and
mov
and
into
movs
out
jmp
pop
mov
pop
jns
push
aad
es
ss
add
out
or
call
cmp
cwde
xlat
push
and
sbb
mov
mov
fdivr
lods
push
in
push
ss
outs
dec
pop
data16
inc
add
adc
xor
mov
sbb
sub
hlt
add
aaa
xor
add
pushf
jae
repnz
push
outs
(bad)
sbb
sbb
push
inc
and
mov
scas
jbe
int3
inc
push
jb
clc
dec
ins
add
xchg
mov
enter
test
inc
stos
jl
xor
nop
mov
mov
enter
ret
jne
add
push
xchg
icebp
js
stc
add
(bad)
movs
jne
mov
and
in
sahf
jne
das
cmp
pop
push
daa
stos
cmp
push
mov
cmp
ficomp
movs
push
xchg
mov
or
scas
or
dec
dec
xor
inc
sbb
(bad)
sub
cli
jne
sbb
cdq
mov
daa
sahf
fwait
pushf
push
test
xor
mov
sub
adc
jge
out
mov
mov
sub
or
jl
adc
fdivr
js
adc
(bad)
popf
mov
xlat
into
aas
inc
inc
out
js
rcr
jae
call
repz
ret
pop
adc
int
sub
mov
gs
retf
int3
xor
(bad)
mov
fs
or
cmp
xor
out
push
je
inc
cmp
test
(bad)
lods
outs
add
push
gs
xor
gs
add
loopne
pop
mov
sub
clc
fldenv
cld
pop
out
mov
push
in
aas
je
ret
xchg
mov
vpsubw
stos
mov
int3
mov
inc
adc
xchg
daa
les
in
ror
lods
or
in
cmp
xor
cs
ror
sti
les
shl
retf
(bad)
or
push
push
mov
sub
mov
mov
out
push
add
mov
xchg
popa
pop
loopne
(bad)
(bad)
test
ja
pop
(bad)
mov
(bad)
retf
aas
dec
inc
adc
imul
pop
ja
sbb
je
aam
scas
int3
retf
jle
(bad)
ror
test
sbb
out
movs
ins
sub
sub
iret
pushf
jae
add
int3
stos
sub
pop
mov
cwde
pushf
daa
arpl
push
(bad)
push
aam
push
fnstcw
mov
cs
je
shl
push
fisttp
push
nop
int3
or
outs
add
cmc
icebp
mov
dec
das
fisubr
out
stc
scas
push
push
adc
test
adc
sbb
mov
ret
jbe
gs
cmp
inc
or
outs
movs
sub
push
cmp
adc
xchg
fdiv
cmps
push
gs
retf
das
push
gs
loop
nop
xlat
sar
pop
outs
jb
test
adc
and
push
push
ror
aas
lea
push
adc
xlat
or
ds
loopne
mov
stos
data16
or
inc
xor
fucom
or
inc
ins
push
cwde
jns
leave
jmp
or
cmp
adc
jno
pop
or
test
adc
lods
push
pop
jno
or
addr16
fdiv
gs
cmp
sbb
adc
cs
test
ret
adc
xchg
and
in
inc
xlat
push
ffree
jp
ret
ja
cmp
adc
jne
call
mov
adc
inc
xor
dec
shl
cmp
rcr
lods
jmp
clc
add
add
xchg
xchg
adc
and
aad
adc
loope
in
hlt
mov
lfs
pop
ror
and
fs
fiadd
push
adc
daa
dec
mov
lahf
push
ror
jle
popf
add
imul
add
push
retf
cdq
stos
jmp
neg
xchg
js
(bad)
in
or
jl
pop
ret
jae
jno
mov
std
idiv
leave
pop
in
mov
pop
mov
rcr
push
mov
push
loop
jge
inc
dec
aam
popa
xor
into
gs
fiadd
cmp
in
push
adc
sub
adc
ja
mov
cmp
sbb
clc
dec
mov
sub
(bad)
add
jp
xchg
shl
call
cmp
lods
mov
test
push
cmp
inc
sti
fiadd
push
fcomp
push
jl
or
push
inc
js
cmc
cmps
cwde
pop
fnsave
mov
push
out
and
ins
fstp
push
pop
add
stos
xor
jmp
push
test
push
xor
ja
dec
add
pop
stos
add
and
jo
xor
sti
xchg
push
cli
xchg
mov
jae
sbb
ss
dec
sub
or
enter
dec
mov
std
aam
push
retf
sub
or
shl
cmp
out
in
mov
dec
sbb
add
cs
mov
fstp
mov
aad
mov
movs
or
and
in
fbld
sub
sti
sub
and
sbb
sbb
out
sub
adc
push
mov
addr16
aaa
fcom
dec
add
cmps
sub
xchg
jmp
xor
in
in
push
mov
sub
adc
pop
push
ror
jle
(bad)
ret
sahf
mov
inc
xchg
mov
sti
mov
jge
dec
shl
(bad)
ret
xchg
(bad)
aam
cmp
rcl
mov
sub
lock
jnp
xchg
mov
cmp
pushf
lods
mov
cmp
push
mov
cld
(bad)
shl
dec
leave
lods
fsubr
inc
int
stos
push
add
pop
stos
popa
cmp
shl
popf
aas
iret
xchg
cdq
clc
mov
test
repz
into
xchg
(bad)
in
test
arpl
cwde
daa
lds
(bad)
out
add
leave
inc
(bad)
fadd
sub
out
(bad)
or
lock
sub
fwait
nop
loopne
movs
lea
out
and
sbb
enter
not
inc
xor
mov
mov
loopne
enter
mov
push
jle
test
xchg
lock
retf
mov
rol
lods
xchg
ret
add
aad
int
push
push
mov
jecxz
jmp
xlat
(bad)
xlat
xchg
inc
cmp
fwait
leave
sub
stc
inc
sub
cmc
xor
je
sub
or
ss
pop
sbb
fcomi
push
neg
pusha
cmp
int3
cmp
ror
lahf
fistp
in
pop
out
mov
jmp
cmp
or
pop
fistp
inc
push
xchg
in
mov
mov
xor
jne
sub
call
or
(bad)
mov
push
push
movs
xlat
and
pcmpgtb
mov
(bad)
xor
inc
push
arpl
cdq
pop
lahf
push
sbb
push
dec
mov
jecxz
(bad)
cdq
retf
fbld
int3
out
push
inc
cmps
sbb
xor
pop
sub
dec
or
outs
push
dec
jecxz
mov
pop
std
pop
cmps
lods
mov
xor
sti
mov
in
popf
sub
popa
cli
bound
stos
cdq
sbb
jnp
imul
mov
cwde
int3
xchg
mov
mov
cld
loop
movs
outs
arpl
fidiv
les
mov
mov
adc
cmp
jo
out
in
jb
fisttp
arpl
inc
lea
sbb
icebp
lock
cs
gs
mov
retf
xchg
inc
mov
fwait
jae
mov
push
sti
ja
xchg
and
jle
push
(bad)
jge
and
imul
loopne
inc
test
fbstp
sbb
cmp
in
inc
ror
fistp
push
add
jl
adc
mov
cmp
xor
and
jne
(bad)
xor
sbb
(bad)
sbb
sub
push
ret
adc
sbb
(bad)
and
jmp
icebp
scas
es
sbb
cwde
dec
sbb
bound
pop
add
movs
aad
retf
push
cli
pusha
add
mov
jl
test
rcl
adc
jnp
rcr
cmp
enter
call
xchg
stos
push
xor
adc
jge
pop
aam
sahf
xchg
push
out
je
xchg
in
sbb
or
push
aam
adc
ror
xlat
inc
lods
sbb
bound
xor
mov
(bad)
test
mov
inc
push
cdq
mov
mov
or
xchg
jle
repz
and
adc
sti
dec
mov
push
mov
std
cmp
mov
xor
repnz
into
sbb
loope
fs
jno
and
sub
or
jge
xchg
in
dec
jae
mov
push
call
sti
nop
push
pushf
arpl
inc
(bad)
cmc
jg
sbb
movs
or
jnp
mov
movups
scas
lahf
cmp
in
lea
shl
adc
sti
add
inc
leave
add
enter
xor
xchg
test
push
movs
pop
or
inc
and
xor
arpl
xor
test
push
jno
sub
xor
ret
rcl
dec
fld
inc
dec
mov
mov
cmp
sub
aas
xchg
mov
cmps
ret
push
mov
mov
jmp
and
aaa
xor
xchg
stos
outs
add
lea
lea
jne
mov
mov
movs
jmp
shr
in
daa
call
push
cmp
or
adc
test
push
rol
jmp
mov
pop
ja
stc
fiadd
or
mov
or
dec
xchg
cli
mov
pop
ins
xor
sar
movs
xchg
aam
js
sub
add
enter
mov
pop
push
or
cmc
cmps
cmp
xor
scas
mov
push
lods
mov
xchg
mov
in
xor
fsub
fild
lahf
imul
(bad)
out
in
bnd
es
dec
add
mov
xchg
pop
lea
icebp
cmps
sbb
mov
cmp
dec
fstp
adc
mov
mov
inc
loopne
into
or
push
dec
popf
iret
repnz
pusha
mov
mov
cwde
add
inc
mov
fist
not
jmp
(bad)
mov
movs
cld
addr16
sub
dec
or
dec
sar
push
mov
sub
cmp
jo
add
xor
mov
aas
mov
int
jmp
mov
xor
aas
pop
rol
retf
lods
dec
aad
or
xor
push
sub
xchg
cmp
mov
sub
sub
or
dec
mov
out
mov
mov
xor
xlat
and
sbb
clts
jae
push
pop
pusha
cmp
jo
mov
xchg
pushf
cmp
inc
fsubr
fst
mov
popf
jae
inc
data16
not
cmp
fmul
push
ficomp
xchg
cmps
js
arpl
push
add
ret
iret
push
ins
xchg
stc
sbb
das
fsub
dec
data16
push
mov
cli
shr
mov
aaa
pop
scas
leave
xchg
(bad)
inc
push
fsubr
jnp
es
outs
test
setae
mov
jo
in
xchg
test
daa
ins
retf
call
mov
sub
mov
xchg
cs
mov
sar
mov
int
clc
popa
pop
call
lock
push
or
out
div
aas
adc
imul
or
loope
add
and
sbb
xor
mov
cld
out
sbb
adc
pop
es
stc
mov
jbe
xchg
shl
icebp
sbb
xor
pop
mov
int
iret
jb
sbb
sub
jmp
sar
mov
xor
sbb
jp
(bad)
call
mov
jae
push
es
gs
fimul
les
inc
sub
inc
shr
hlt
repnz
add
rcr
mov
mov
dec
mov
jmp
ret
mov
mov
fiadd
(bad)
into
das
cmp
push
cmps
and
iret
mov
sbb
shr
pop
jle
es
pop
and
pop
jp
addr16
pusha
jmp
stc
push
ja
mov
xor
cmp
or
jecxz
xchg
cli
int
(bad)
push
add
mov
mov
cmps
pop
push
and
jecxz
imul
jp
pop
jb
out
and
cmp
pop
test
mov
retf
xlat
sub
in
mov
(bad)
lahf
stos
push
cmps
cwde
retf
sub
sub
dec
dec
test
in
pop
push
push
pushf
push
mov
jp
inc
pop
aad
jle
and
add
and
sbb
cmp
mov
popf
jmp
leave
add
inc
xor
add
mov
mov
xchg
push
(bad)
out
clc
jns
jge
aaa
cld
mov
push
daa
pop
mov
sub
stos
push
jbe
outs
jecxz
jg
mov
scas
ret
mov
push
nop
out
int
mov
and
ror
mov
ins
mov
mov
cwde
retf
inc
jl
in
(bad)
jne
sub
mov
call
push
add
mov
and
mov
xlat
sbb
xor
jle
add
loope
test
icebp
cmp
xchg
pop
rcr
jmp
jnp
gs
cld
(bad)
outs
scas
dec
sbb
xchg
or
xchg
mov
retf
mov
inc
popa
adc
pop
push
pop
dec
lahf
sbb
jmp
cmp
enter
cmp
enter
jg
cmp
push
mov
jmp
dec
out
mov
inc
xor
xor
or
bound
sbb
jmp
mov
retf
pusha
and
sub
xchg
outs
repz
rcl
pop
adc
jno
stc
dec
aaa
rol
adc
popf
in
or
mov
adc
fsubr
xchg
mov
adc
js
add
nop
and
pop
mov
movs
and
pushf
repz
idiv
out
popf
repnz
sub
pop
xchg
int
xchg
sbb
sbb
inc
iret
push
fisttp
sub
adc
enter
push
push
push
dec
and
push
pop
xor
scas
call
adc
andnps
adc
sbb
xlat
jp
mov
fidiv
xchg
add
fdivr
dec
test
dec
ins
push
and
aaa
inc
sbb
mov
mov
ins
xor
loopne
and
jmp
mov
in
(bad)
jo
popa
bound
mov
mov
mov
mov
and
pop
loop
test
mov
sahf
inc
imul
fidivr
xchg
ret
(bad)
push
out
inc
stos
bound
jmp
jl
movs
jp
sub
or
xchg
scas
dec
push
cmps
push
adc
push
inc
mov
repnz
rcr
pusha
add
in
or
add
pop
add
pushf
loop
cmps
in
sar
sub
fwait
out
ins
cmp
sub
mov
dec
in
jmp
xchg
xchg
sar
repnz
add
movs
fcmovnbe
jb
adc
xor
sub
dec
push
dec
and
add
push
push
push
nop
mov
or
aaa
push
out
cmc
sub
sub
dec
loopne
sbb
inc
add
rol
sbb
xchg
add
adc
arpl
cld
shl
dec
dec
cmp
loopne
mov
pop
outs
lods
sub
pop
int
mov
jo
(bad)
movs
call
in
(bad)
in
mov
cmp
xor
pop
jbe
inc
adc
push
cdq
mov
mov
or
sub
push
loop
and
mov
(bad)
or
sbb
out
(bad)
test
sbb
add
iret
jle
ins
in
int3
fsubr
ret
test
nop
and
cmp
jg
pop
or
repz
push
test
outs
inc
pop
jns
xlat
mov
mov
mov
pop
mov
mov
or
and
jb
loopne
inc
cmp
mov
mov
shl
mov
or
test
mov
inc
in
dec
xlat
add
nop
stc
sbb
mov
push
test
adc
jmp
ret
test
mov
repz
scas
xor
fdiv
adc
loope
test
ficomp
shl
test
jne
push
sbb
cmp
inc
sbb
or
or
ja
movs
fcom
es
sbb
inc
mov
daa
icebp
lods
movs
in
mov
mov
movs
imul
cs
push
stc
loope
lds
sub
les
and
sti
or
imul
sub
movs
inc
and
dec
or
ror
jmp
mov
pop
mov
arpl
xor
fs
xor
das
ret
jmp
aaa
jmp
shr
fsubr
pop
push
aad
je
stos
dec
xchg
test
xlat
stc
sub
test
cmp
mov
ret
add
or
dec
xchg
and
fwait
movs
or
and
xor
fcmovnb
in
paddb
dec
sar
outs
or
push
dec
shl
std
(bad)
out
xchg
retf
adc
mov
sbb
loop
mov
mov
add
cwde
call
sub
dec
das
outs
call
jge
cmps
or
movs
sbb
cmp
sbb
sbb
imul
(bad)
cmps
jb
arpl
and
in
pop
iret
stos
daa
mov
imul
out
mov
je
outs
xchg
ds
and
inc
test
(bad)
out
inc
jp
sbb
mov
dec
clc
mov
xor
test
dec
bound
pop
mov
inc
ror
ds
outs
mov
jmp
and
and
out
xchg
adc
push
je
mov
clc
and
adc
mov
sti
ss
(bad)
shr
xchg
pushf
xor
jmp
aam
fild
mov
mov
mov
adc
mov
jbe
call
sbb
lods
pop
mov
fdivr
call
mov
cmp
jmp
fsub
cmp
cld
leave
and
mov
cs
out
push
in
fisttp
clc
and
add
and
(bad)
retf
lods
fsubp
add
cs
(bad)
pop
mov
cmps
int
mov
repnz
sub
cmp
mov
or
cmps
sahf
xchg
push
shl
mov
in
les
jmp
and
dec
repnz
push
loope
push
outs
pop
dec
xor
lods
aam
pop
dec
js
int3
js
sahf
jl
sbb
test
inc
call
push
mov
popa
inc
ins
imul
adc
fcom
pop
ret
mov
outs
or
ins
cs
xor
adc
das
js
push
shl
lods
fldcw
xchg
inc
mov
xor
xchg
fs
mov
jb
mov
inc
repnz
or
mov
cmp
in
mov
icebp
stos
movs
dec
inc
mov
loop
fld
std
sub
pop
leave
test
xor
ror
sahf
pop
inc
or
inc
fcom
jl
rol
cmp
leave
xor
mov
push
xor
dec
lods
sahf
sahf
pop
ds
sti
fmul
jge
shr
(bad)
iret
rol
ret
test
jge
sbb
clc
and
mov
shl
lods
dec
(bad)
pusha
mov
lea
jl
mov
repnz
xchg
xchg
(bad)
jno
addr16
aam
fisub
xchg
fmul
clc
cs
mov
imul
jle
data16
js
in
pop
push
xor
xor
in
popa
cmps
test
movs
and
sub
push
in
pop
add
jmp
js
mov
punpckhwd
into
mov
push
cld
into
inc
push
jbe
and
jb
sub
lods
arpl
imul
mov
mov
pop
cmp
into
add
add
mov
lea
or
dec
fsub
or
adc
inc
mov
jbe
test
imul
jno
inc
inc
inc
adc
jo
mov
cmp
mov
fdiv
test
scas
push
popf
xor
(bad)
xor
xchg
sbb
imul
dec
jae
rcl
cmp
sub
cmp
call
sbb
mov
xor
dec
ins
add
test
aas
jno
jno
ret
inc
or
repnz
movs
mov
add
sahf
mov
(bad)
mov
xor
pop
outs
mov
retf
xor
mov
fadd
pop
dec
cli
push
and
loope
sub
pop
cmp
popf
and
daa
lock
xchg
outs
fldln2
push
rcl
into
imul
pop
push
inc
out
sbb
xor
jmp
js
mov
dec
mov
inc
jg
and
(bad)
adc
push
dec
in
mov
jae
repz
cmp
jle
daa
movs
push
sbb
repnz
mov
xor
sahf
add
push
mov
jmp
mov
(bad)
hlt
icebp
(bad)
cld
sti
pop
aam
lahf
cmp
(bad)
(bad)
(bad)
loopne
or
mov
or
retf
cmp
cmc
lahf
sub
adc
dec
xchg
jl
mov
and
call
not
cmp
or
jbe
jae
cmc
jle
sbb
into
mov
inc
pop
rcl
push
ss
or
or
adc
cmp
ret
xor
imul
jl
stos
add
retf
and
push
into
clc
add
xchg
mov
xor
inc
jg
and
(bad)
mov
sub
mov
jmp
test
dec
add
movs
fadd
stos
xchg
cmp
aad
cmp
cli
xchg
in
sbb
movs
(bad)
cmc
xchg
mov
and
test
in
pop
ss
or
loope
inc
jmp
repz
push
imul
rep
jb
fwait
mov
je
frstor
mov
jle
fldcw
in
outs
lahf
pop
mov
jne
(bad)
aad
lock
mov
imul
push
test
add
(bad)
dec
push
ins
xor
sub
and
and
mov
in
retf
sbb
push
pop
in
adc
xchg
adc
jae
popa
pop
mov
add
or
fbstp
stos
sbb
dec
pop
loopne
out
(bad)
xlat
mov
ja
rcl
sub
inc
es
les
aad
mov
clc
cli
rcr
mov
lahf
mov
addr16
(bad)
mov
jno
stos
add
daa
jnp
jns
movs
push
fcmovb
cmp
ins
inc
or
mov
(bad)
fiadd
jl
inc
loope
mov
fs
mov
idiv
mov
test
adc
aad
and
imul
rol
loope
mov
jp
mov
aas
cli
inc
cmp
idiv
jne
dec
mov
mov
add
or
push
ret
call
cmp
jg
loop
sub
lock
mov
push
jmp
mov
mov
lods
repz
pushf
inc
jp
mov
push
sahf
inc
movs
mov
stos
out
mov
aad
mov
cld
push
lods
sub
push
retf
bound
sub
adc
inc
jbe
sbb
cwde
mov
in
inc
adc
xor
lds
xlat
or
out
arpl
dec
pop
cmp
into
xor
xor
lds
mov
mov
movs
das
inc
and
ret
adc
push
stos
jl
or
pop
jns
fdivr
jae
xor
or
fild
(bad)
je
sbb
enter
fs
out
(bad)
retf
cs
movs
fild
pop
inc
cmp
inc
out
adc
cmp
ja
gs
ret
xor
out
xlat
scas
push
je
imul
push
nop
adc
xor
je
fistp
mov
cmc
mov
sbb
fst
rcl
mov
ret
ror
(bad)
pop
dec
jns
test
into
mov
dec
xchg
add
imul
or
add
shl
dec
in
(bad)
xor
clc
mov
fidiv
pop
add
cld
mov
ret
add
jo
and
gs
pop
out
cs
movlps
leave
push
mov
pop
bound
and
loope
(bad)
or
cli
mul
push
pop
fld
sti
or
mov
add
pop
dec
and
pop
(bad)
cmp
fidiv
xchg
push
cmp
add
xor
clc
push
mov
cmp
xor
sub
aam
cwde
mov
mov
or
push
xchg
sbb
mov
jb
inc
inc
imul
push
xor
push
mov
pop
jmp
push
fcmovu
pop
cmp
imul
or
jmp
and
movs
push
movs
int
test
sub
imul
int3
push
mov
ins
and
add
xchg
mov
je
aam
je
add
jno
retf
cwde
and
inc
test
jb
repz
pushf
pop
les
shr
pushf
into
rcr
idiv
mov
inc
mul
lds
pusha
sbb
xor
add
mov
ss
test
jae
js
mov
(bad)
int3
jl
fwait
test
mov
and
push
sbb
leave
jl
pushf
push
jp
xchg
outs
inc
mov
aas
loopne
daa
jecxz
and
hlt
sub
xchg
xchg
or
sahf
test
dec
(bad)
cmc
jge
les
add
adc
idiv
jmp
cmc
pop
mov
inc
mov
pop
loopne
sub
inc
inc
inc
pop
jbe
aaa
and
ins
xor
xchg
inc
sub
shl
enter
daa
mov
ja
jno
jl
ror
cdq
jmp
test
pop
scas
sti
or
movs
xchg
mov
push
mov
jp
cmp
xchg
shr
repz
retf
xor
dec
cs
aad
push
in
sub
and
jae
retf
xchg
mov
mov
ins
jge
pop
shr
int3
dec
pop
sbb
jno
and
push
icebp
push
ins
jne
push
and
xlat
dec
push
mov
sahf
stos
mul
push
jp
sahf
push
les
mov
adc
inc
push
imul
daa
aaa
or
pop
jno
div
push
sbb
clc
stos
movs
add
pop
inc
sub
add
mov
and
call
loope
pop
or
rcl
mov
cmc
pusha
dec
fsubr
inc
jae
(bad)
aad
leave
pop
int3
xor
add
adc
push
push
inc
out
mov
gs
fucom
dec
enter
sbb
cwde
jbe
test
dec
xor
in
fmulp
xor
imul
add
movs
cmc
ror
ret
add
loop
mov
popf
popf
jmp
or
leave
mov
mov
jo
lock
lock
xor
fyl2xp1
adc
and
xchg
dec
pop
mov
mov
cmp
addr16
inc
fstp
xchg
arpl
adc
xchg
push
fimul
shr
dec
data16
stos
cdq
add
sub
iret
mov
and
test
jmp
adc
mov
push
dec
jne
out
push
xchg
and
scas
aam
xchg
cmp
hlt
je
in
in
lahf
sti
mov
sbb
scas
lahf
in
or
fwait
or
mov
aam
ret
xor
sbb
mov
cwde
and
pop
xchg
mov
fdivr
push
adc
mov
cld
pusha
cmp
icebp
aaa
int3
mov
in
and
push
imul
lahf
jecxz
push
xchg
adc
adc
or
imul
xchg
jle
xchg
out
mov
cld
outs
xchg
pop
xchg
jmp
int
loope
cmps
sub
lahf
fwait
push
fwait
retf
inc
adc
fld
jo
adc
push
stos
movs
adc
sti
ja
mov
inc
aas
into
inc
add
adc
mov
mov
rcl
mov
pop
xchg
lods
popa
stos
pop
mov
xchg
add
and
pop
jmp
fnstsw
jmp
adc
scas
pop
and
sahf
fdiv
adc
mov
and
jecxz
add
or
or
mov
push
cli
and
lods
and
rcr
adc
dec
or
mov
idiv
push
(bad)
es
add
push
in
mov
dec
(bad)
fimul
sahf
xchg
aaa
push
pop
jns
adc
inc
pop
pop
xlat
sub
neg
adc
in
aaa
pop
sbb
lds
mov
jo
outs
retf
out
addr16
sub
dec
fdiv
hlt
add
lahf
push
aam
push
mov
loopne
cwde
sbb
aas
mov
and
and
mov
repnz
mov
cwde
fxch
lahf
push
(bad)
push
dec
gs
shl
mul
pop
and
jmp
cs
xor
ss
(bad)
enter
rcl
(bad)
cli
(bad)
outs
mov
push
ret
dec
in
aad
out
sub
sub
stc
pop
mov
in
mov
adc
push
xchg
mov
sub
cwde
sbb
cmp
sar
inc
mov
mov
jns
mul
jbe
cli
mov
aam
aam
mov
and
mov
scas
inc
sbb
xor
icebp
pop
xor
lock
pusha
cwde
es
sbb
mov
fwait
add
jb
inc
push
stos
imul
jmp
outs
cmps
adc
pop
jmp
test
inc
and
jnp
cs
mov
cld
jb
jae
pop
std
jns
in
loop
push
inc
cmps
and
jbe
lods
loope
mov
mov
mov
(bad)
test
cmps
shr
hlt
pop
jle
xor
imul
push
push
mov
scas
bound
add
mov
mov
xor
and
cli
ret
inc
sub
inc
test
stos
ds
adc
lods
test
mov
dec
cmp
xchg
mov
dec
add
mov
(bad)
aam
mov
ret
xchg
popf
(bad)
sbb
ins
lods
outs
adc
enter
cmp
xchg
dec
xor
repz
movs
in
enter
mov
bound
jl
shl
stos
xor
mov
popf
inc
push
shr
test
inc
iret
or
push
and
or
in
test
pcmpgtw
xchg
and
loop
cmp
int3
loopne
mov
mov
mov
dec
jg
iret
adc
mov
int3
add
mov
cmp
jmp
or
or
fldcw
push
loop
fstp
mov
adc
(bad)
into
push
arpl
jmp
mov
adc
push
imul
ret
call
imul
inc
mov
jb
sub
sub
xlat
push
push
inc
popa
inc
sub
jns
addr16
pop
jmp
loop
repz
xor
mov
dec
jl
pop
sti
xchg
jge
fwait
adc
sar
mov
add
jl
pushw
icebp
test
mov
sub
xor
in
int
movs
xor
dec
mov
retf
bound
mov
lock
pusha
lods
icebp
mov
sahf
lods
ds
jg
lds
and
mul
or
dec
adc
fisubr
ret
ret
bound
movs
aas
mov
sub
push
pop
cdq
jbe
sub
add
xor
leave
ds
mov
or
stos
pop
(bad)
push
jle
add
pushf
or
mov
sbb
repnz
pop
or
pop
pop
jmp
cmps
push
xchg
push
xor
jg
cwde
or
or
and
lea
push
ins
ins
in
cwde
adc
ins
ficom
dec
or
test
or
jecxz
ds
add
jl
out
ins
dec
ret
add
mov
mov
cmp
pop
add
(bad)
mov
retf
call
es
push
popf
and
dec
ficom
and
loop
sbb
test
inc
test
lods
cwde
lahf
sub
shl
sahf
sbb
jae
jle
lods
aas
neg
jp
stos
hlt
mov
xchg
push
ror
mov
aam
xor
push
mov
shr
popa
std
data16
xchg
xchg
int
das
fcom
mov
jbe
adc
add
clc
(bad)
sbb
stos
rcr
popa
pusha
fiadd
push
and
inc
in
(bad)
test
sub
call
ss
xchg
push
jge
(bad)
xchg
in
in
add
and
add
push
aam
loop
inc
adc
je
xor
mov
jae
test
mov
outs
outs
test
js
fistp
jmp
mov
cwde
shl
xchg
sub
in
add
stos
xchg
out
and
js
shr
push
push
jnp
enter
js
scas
sub
xor
movs
pop
cli
and
cmp
pop
(bad)
pop
inc
aaa
adc
pusha
cmp
jmp
push
add
adc
inc
test
mov
cmp
sti
fnstcw
arpl
ins
aas
sub
lods
fcomp
mov
jmp
fld
adc
sbb
jecxz
sti
add
pop
mov
cwde
outs
scas
aaa
data16
and
imul
pop
xchg
mov
jle
fiadd
je
sbb
adc
leave
mov
dec
or
repnz
push
lds
jmp
js
cmps
aas
mov
push
and
mov
lds
and
sbb
lahf
sbb
xor
mul
add
stos
pop
jbe
jno
jp
pop
adc
rcl
cs
in
cs
dec
test
jl
push
push
sti
jns
clc
fild
ret
aad
jmp
push
pop
pushf
jmp
lods
ror
or
je
idiv
repnz
leave
(bad)
lods
mov
add
jae
mov
popa
aaa
and
xchg
push
xchg
lea
shl
xor
mov
sahf
gs
out
pop
and
mov
mov
cdq
inc
push
shr
mov
or
shr
sub
pop
mov
pop
sbb
not
jle
ret
sbb
inc
push
gs
in
xor
test
xchg
sti
mov
xchg
mov
(bad)
lea
push
stc
adc
xchg
mov
sbb
test
mov
jp
loop
add
xchg
jb
xchg
push
sub
std
sub
ss
mov
scas
xlat
add
xlat
loope
pop
add
or
push
gs
sub
pop
jne
xchg
outs
shl
aam
mov
sub
jp
push
and
mov
repnz
ret
adc
inc
push
xor
jnp
pushf
cmps
sbb
cli
add
das
add
mov
dec
mov
push
cmp
lahf
pop
int3
xchg
sub
popa
cs
cmc
enter
sar
push
or
push
fs
jmp
mov
cmp
pop
dec
and
cld
dec
fwait
xor
stc
mov
call
jns
or
pop
lods
mov
mov
gs
out
add
inc
lock
ins
lds
dec
fist
inc
fdiv
xchg
mov
add
fxch
adc
mov
pop
dec
mov
loope
pop
add
dec
xor
into
pop
cmp
adc
fbstp
add
push
xor
mov
mov
pop
pop
clc
pop
mov
inc
fst
jne
mov
(bad)
push
stc
inc
and
sti
pusha
loop
xchg
cmps
pop
or
shr
fwait
lods
std
adc
jo
mov
sahf
sbb
pop
mov
jbe
sub
push
aad
rcl
cmc
(bad)
adc
test
push
xchg
imul
sub
pusha
sbb
icebp
sub
out
dec
or
dec
mov
out
ror
pop
sub
mov
sbb
(bad)
fsubp
in
xchg
in
dec
inc
jp
sub
call
and
lods
push
cmp
int3
pop
jle
jge
mov
inc
xchg
jmp
int3
repnz
cmp
daa
dec
gs
jae
test
nop
shl
cmps
aas
cmp
mov
into
in
out
mov
dec
and
and
aaa
sti
add
pop
pusha
mov
xor
mov
jne
sbb
cmps
fdiv
je
fwait
cmp
call
fldcw
int
mov
pop
and
std
fsubr
xchg
cli
popa
xlat
in
cmps
and
dec
mov
dec
pop
ds
rcr
or
jg
das
cmp
sbb
das
xchg
das
push
popf
shl
and
popa
cld
jmp
daa
mov
jb
jne
xchg
cld
inc
sbb
cld
push
clc
dec
mov
loopne
fwait
leave
sub
and
and
sub
(bad)
jge
dec
add
xlat
cmp
ret
icebp
jae
test
out
sbb
mov
jbe
aam
mov
sbb
mov
ins
sahf
jmp
add
push
sbb
out
or
arpl
or
xor
mov
lds
push
retf
fld
mov
shl
cmp
clc
shl
sub
retf
mov
mov
or
test
or
(bad)
mov
xchg
inc
cmps
rcl
div
ds
cmps
cmp
and
sub
in
push
das
push
mov
dec
cmp
(bad)
loope
xchg
ret
and
or
sub
pop
jb
int
dec
xchg
scas
lods
push
or
mov
movs
(bad)
ret
xchg
cmp
pusha
shl
and
push
push
das
(bad)
cmc
mov
pop
mov
pop
ins
xchg
add
in
add
sbb
mov
(bad)
stc
inc
mov
xchg
push
sbb
mov
jmp
jo
xlat
sub
std
cmp
sub
xor
mov
or
icebp
sub
mov
sbb
mov
data16
cmp
dec
sti
ret
push
aas
push
mov
sbb
(bad)
and
sti
in
js
(bad)
mov
arpl
pop
jbe
fadd
(bad)
mov
mov
cdq
stos
sahf
cmp
jmp
mov
scas
out
adc
xchg
out
xchg
int
sbb
ficom
inc
and
cmps
inc
add
xchg
and
fnstcw
jge
into
sub
xchg
out
movs
gs
sbb
out
xor
xchg
call
jns
in
clc
in
call
ret
icebp
sar
shl
icebp
repnz
or
sub
dec
or
lods
dec
(bad)
icebp
dec
xchg
fxch
and
or
das
pop
mov
inc
xor
test
jmp
das
add
pop
or
gs
inc
ret
sub
rcl
mov
mov
mov
(bad)
lds
cmp
js
mov
clc
in
xchg
jmpw
cmp
fsub
repz
inc
imul
mov
cmp
jb
jo
mov
shl
push
cmp
jp
inc
inc
inc
sub
je
repz
ret
mov
das
enter
leave
dec
or
push
sbb
push
rol
movs
sbb
hlt
or
call
xchg
cs
int3
fucomi
ret
pop
fnstenv
add
ret
lock
adc
jg
cmp
and
out
outs
arpl
test
mov
pop
outs
pop
(bad)
ror
jb
(bad)
pushf
jl
gs
popf
and
sti
dec
pop
stos
sbb
and
repz
mov
pop
jbe
(bad)
mov
sub
jmp
push
mov
jno
pusha
push
inc
fcmove
lods
cli
mov
fwait
adc
rcl
xor
xor
sbb
xor
jmp
fst
push
push
mov
retf
imul
add
dec
sbb
xor
push
or
ret
or
add
jns
mov
adc
(bad)
shr
xchg
and
arpl
hlt
js
call
push
mov
je
adc
jmp
mov
(bad)
mov
dec
int3
mov
mov
dec
push
dec
jno
push
add
adc
mov
xlat
pop
scas
movs
retf
call
clc
rcl
fdiv
dec
mul
aad
enter
or
(bad)
aam
adc
retf
inc
pop
mov
inc
or
inc
push
adc
imul
xor
mov
paddb
(bad)
(bad)
lods
mov
push
xchg
sbb
into
enter
mov
mov
(bad)
pop
lahf
push
or
in
les
jmp
mov
fld
aad
sahf
lea
sbb
int
ds
mov
fldenv
push
fsubr
inc
xor
jb
add
rol
sub
adc
test
xchg
lods
mov
daa
xor
adc
add
mov
stc
pusha
out
adc
pop
addr16
push
mov
and
or
movups
and
in
adc
push
xor
repnz
pop
and
sub
inc
out
es
fpatan
mov
fcom
gs
(bad)
mov
and
aad
fnsetpm(287
test
pop
out
inc
dec
scas
jp
call
fnstenv
jle
pop
je
jnp
mov
or
arpl
xchg
inc
xor
ficom
xchg
stos
sti
stos
fs
push
adc
push
outs
lock
jne
ds
shr
push
pushf
cmps
in
shl
xchg
sub
jecxz
adc
dec
mov
push
xlat
and
push
xor
out
push
cli
cmp
dec
jl
icebp
cmps
popa
pop
push
imul
sub
inc
xchg
in
mov
mov
xchg
(bad)
xchg
call
xchg
xchg
xchg
lods
cmp
inc
arpl
sub
sub
jb
ins
ss
mov
lds
push
adc
jne
test
test
outs
mov
ret
add
and
adc
in
enter
and
jae
lahf
movs
and
ficom
div
(bad)
mov
ret
ja
pop
push
push
mov
adc
mov
inc
sti
cs
pop
jmp
add
test
popa
ja
and
outs
mov
cli
jo
dec
jmp
adc
and
cli
xor
push
jnp
sar
shl
add
fld
push
ret
pop
mov
or
fmul
sbb
repnz
sub
jge
out
aad
(bad)
jecxz
add
call
aam
add
adc
fs
movs
in
pop
stc
sub
out
or
test
and
das
movs
adc
mov
outs
fidiv
mov
ds
adc
lea
sbb
sti
ret
call
mov
xor
xchg
cwde
js
pop
stc
rol
int3
inc
ficomp
pop
sbb
mov
cmp
push
sub
int
pop
es
mov
mul
and
add
xchg
pushf
mov
(bad)
mov
mov
and
add
(bad)
mov
sti
addr16
sub
mov
jns
pop
mov
mov
aad
sbb
leave
mov
cmp
push
(bad)
jnp
outs
paddsb
je
stc
ret
pop
xchg
jge
xchg
test
mov
add
add
lock
ror
mov
jle
dec
aaa
dec
int
inc
dec
and
fnstcw
stc
(bad)
ins
sub
inc
test
inc
cmp
jae
or
jns
lods
dec
bound
inc
in
test
cmps
dec
xchg
cmp
adc
sub
in
xchg
test
or
das
mov
lea
scas
out
push
and
stos
cmp
cmp
jne
loopne
mov
retf
cmps
call
call
fist
hlt
sub
ror
cwde
aam
in
data16
in
push
arpl
jecxz
mov
mov
(bad)
sti
ja
daa
jge
loopne
sbb
out
imul
int
es
cli
or
into
jmp
stos
mov
sbb
shl
test
clc
dec
mov
(bad)
out
lahf
fbld
aam
stc
inc
jae
mov
mov
sub
push
add
xor
sbb
mov
jecxz
lea
adc
jle
pop
dec
aam
stos
rcr
int3
imul
mov
adc
stos
(bad)
loopne
test
stc
jns
mov
loopne
cmp
cwde
fdivr
in
loope
or
fisub
lock
fwait
in
sbb
pop
fistp
cdq
jo
out
fnsave
and
out
xchg
pop
shl
loope
in
(bad)
retf
xor
fistp
inc
outs
imul
and
sbb
aad
shl
sub
rcl
out
jge
(bad)
icebp
adc
fmul
data16
dec
lods
ss
int3
or
scas
sar
push
adc
mov
sbb
adc
sbb
jns
mov
out
mov
retf
mov
dec
lahf
pop
jnp
pop
arpl
into
pop
test
dec
push
pop
ja
mov
inc
mov
mov
call
out
xor
ret
adc
or
jge
icebp
or
out
pushf
and
pop
jmp
mov
mov
cmps
jl
fwait
xchg
in
pop
sub
or
(bad)
xchg
daa
imul
cmp
std
out
sub
sbb
adc
adc
fmulp
into
iret
pop
push
inc
pop
cmc
push
cmps
dec
cmp
pop
sub
jno
ja
jne
push
(bad)
jo
dec
pop
ss
(bad)
imul
jns
mov
arpl
lahf
int3
mov
sbb
int3
out
push
inc
dec
retf
aam
jmp
cmp
stc
leave
mov
xchg
in
xor
rcr
mov
int3
(bad)
repnz
retf
mov
or
push
dec
adc
pop
sti
test
popf
push
and
adc
inc
dec
pop
sbb
mov
das
push
ror
sbb
cdq
loope
cdq
push
mov
add
jne
push
enter
inc
scas
sub
mov
(bad)
mov
adc
ror
dec
xchg
lea
pop
cmps
jae
out
xchg
imul
(bad)
jle
loop
ins
mov
push
cwde
mov
inc
icebp
stos
movs
inc
pop
pop
add
or
inc
clc
in
cld
(bad)
or
sub
add
and
mov
jle
mov
(bad)
rcr
or
dec
inc
adc
pop
push
and
dec
add
pop
mov
push
inc
in
jne
in
retf
sub
jns
jp
inc
push
(bad)
sub
je
adc
or
int3
xor
int
fs
mov
xchg
arpl
pop
mov
inc
std
jne
es
dec
les
push
and
test
call
shl
push
(bad)
cdq
les
les
scas
in
xchg
xchg
scas
xchg
jb
fnstenv
mov
(bad)
or
cli
int3
fwait
dec
cmps
fstp
fucomp
syscall
sub
lahf
faddp
cdq
pop
dec
mov
sub
sbb
outs
adc
scas
jp
dec
jp
gs
pop
out
lock
jl
bound
iret
sbb
dec
int
cld
sub
mov
fbstp
adc
adc
fdivp
xchg
xor
dec
cmove
push
out
cmp
push
addr16
(bad)
mov
or
mov
push
xlat
pop
mov
jle
out
ja
xchg
dec
pop
sub
out
mov
xor
data16
mov
popf
(bad)
nop
ss
loopne
xchg
adc
rcr
jb
or
das
push
aam
cmps
pop
mov
xor
inc
imul
inc
xor
call
shl
sbb
mov
cwde
push
scas
jns
push
(bad)
lds
cmp
fs
pusha
sub
mov
add
out
test
sub
fisubr
(bad)
mov
push
add
out
rdtsc
mov
daa
clc
sbb
sub
push
ret
outs
(bad)
lea
adc
out
cmp
jne
xor
sbb
in
pushf
jnp
pop
or
call
mov
xor
ds
sbb
div
daa
push
ficom
ror
sbb
ja
daa
mov
shl
cdq
fwait
stos
mov
push
aaa
mov
mov
xchg
or
fld
add
int
outs
push
cmp
cmps
test
dec
sbb
push
jns
call
push
xor
jmp
or
(bad)
and
stc
and
push
outs
test
pop
pop
pop
and
cmp
pop
inc
sbb
sbb
arpl
adc
popa
ret
loop
mov
jmp
sar
push
test
dec
pusha
retf
cmp
jle
or
mov
mov
push
push
or
test
push
enter
sbb
fld
sub
push
pop
add
out
jge
push
fld
arpl
fdiv
mov
jecxz
push
mov
jbe
push
pop
into
dec
loopne
mov
test
cmp
push
movs
mov
inc
mov
and
or
dec
fwait
test
push
jno
mov
push
jb
neg
push
cmps
or
lods
imul
(bad)
jmp
or
loope
scas
cmp
ret
jmp
sbb
push
(bad)
xchg
and
mov
cmp
cmp
push
iret
and
xor
js
scas
mov
jl
and
imul
daa
scas
or
aad
inc
push
outs
jae
imul
cmp
repnz
jmp
xchg
jbe
push
sbb
xchg
scas
test
pop
fidiv
push
xor
dec
dec
stos
adc
inc
dec
pushf
add
mul
mov
in
mov
or
retf
mov
aas
mov
loope
(bad)
in
shl
jbe
or
hlt
xchg
cmp
jle
test
ficom
sub
sar
fld
in
cdq
lds
pop
cmp
gs
push
movs
popf
push
idiv
lods
daa
pop
bound
dec
pop
lahf
shl
aaa
cmp
inc
call
out
adc
push
test
mov
aam
(bad)
stos
loope
movs
loope
cld
daa
clc
cmps
sbb
adc
push
jo
xchg
(bad)
dec
fnsetpm(287
mov
cmc
cdq
add
popf
xchg
lods
mov
cdq
js
inc
(bad)
lock
repz
xor
push
repz
cld
sub
rol
mov
adc
add
jg
test
sti
movs
sbb
test
pop
dec
push
dec
xchg
(bad)
dec
jg
int3
dec
adc
bound
pop
icebp
push
mov
mov
sti
lahf
cld
push
jecxz
add
or
mov
std
mov
jae
mov
cmps
es
ret
cmp
fmul
rcr
outs
dec
adc
adc
inc
mov
xchg
push
sti
movs
adc
push
pushf
jb
jae
dec
adc
pop
sub
dec
lods
adc
or
adc
std
inc
or
repz
ret
pop
fcomp
push
call
inc
cdq
lock
pop
pop
xor
fwait
(bad)
out
ss
jmp
dec
mov
push
les
lods
popf
add
mov
push
and
pop
gs
shl
pop
pop
int3
mov
push
in
outs
movs
cmp
sbb
call
jns
int3
loopne
and
in
or
hlt
pop
aad
cmp
inc
add
jmp
mov
sahf
dec
sub
jl
cmp
cwde
test
mov
in
fwait
add
jno
out
test
(bad)
data16
mov
rcr
cmp
dec
xchg
popa
js
mov
shr
out
imul
test
adc
sub
movs
loop
jae
and
es
cmp
xor
dec
sbb
idiv
sub
and
push
pop
xchg
in
scas
imul
rcl
fisubr
inc
cwde
sub
dec
xchg
stos
enter
and
jne
cmp
cdq
sbb
cmp
sbb
add
pop
ds
outs
push
pop
xor
addr16
sub
mov
in
xchg
xchg
movs
mov
fadd
xchg
mov
sbb
mov
lea
push
(bad)
js
jb
fldcw
out
mov
aas
hlt
inc
mov
push
inc
in
lahf
dec
sub
xchg
data16
cld
lahf
mov
fs
not
loopne
cmp
(bad)
push
pop
mov
adc
(bad)
mul
xchg
mov
pop
mov
popf
add
adc
mov
shl
jns
mov
cmp
outs
loope
cwde
ja
mov
push
pop
shl
dec
in
push
pop
mov
js
fwait
add
jp
push
sahf
mov
(bad)
frstor
sbb
cmp
mov
jle
mov
mov
ins
mov
pushf
xor
dec
and
or
icebp
psubw
mov
jl
mov
iret
adc
sahf
cmp
addr16
jb
jecxz
mov
loopne
add
add
push
cmp
mov
or
jo
lods
adc
mov
(bad)
out
mov
jge
div
xor
out
pop
push
jg
call
rcr
lods
cdq
test
std
jmp
xor
jo
mov
(bad)
pop
xor
mov
xchg
mov
xor
es
xchg
cdq
ds
adc
movs
in
bound
jno
ins
mov
jecxz
repnz
xchg
dec
inc
test
mov
mov
sti
sub
mov
sbb
inc
jl
inc
cmp
retf
sbb
and
jne
xchg
cld
dec
cld
ins
mov
hlt
lea
aad
cmp
xchg
cmp
pop
add
xchg
in
imul
pop
addr16
jp
push
imul
int3
outs
cs
adc
popa
adc
(bad)
hlt
das
mov
arpl
adc
sti
in
dec
push
inc
xchg
jo
movs
push
test
cmp
cli
inc
rcr
fidiv
and
vxorps
mov
cdq
pop
xlat
inc
pop
test
mov
pop
push
aad
dec
cmc
fs
xchg
cdq
loope
in
mov
cmp
ficomp
mov
push
mov
inc
dec
mov
jl
mov
add
mov
sub
gs
dec
or
add
sub
push
out
jecxz
movs
pop
pop
push
and
or
adc
sbb
dec
mov
add
mov
xchg
cld
sti
fcmovnu
and
and
jno
cmp
jo
ins
adc
pop
mov
sub
imul
movs
push
cld
(bad)
push
xor
in
in
jns
adc
or
xchg
jecxz
xchg
sbb
adc
sbb
in
ja
and
sbb
jne
pop
(bad)
mov
jle
xchg
dec
mov
mov
lock
cmp
push
icebp
push
dec
push
inc
mov
leave
cmp
jge
push
xlat
xor
inc
inc
dec
arpl
shr
dec
sbb
sbb
cdq
(bad)
xor
cld
es
jnp
adc
arpl
and
xchg
push
addr16
idiv
std
int
aam
push
mov
clc
pop
mov
out
stos
lea
(bad)
stos
xchg
popf
mov
pop
jo
xchg
in
repnz
mov
cmp
push
retf
pop
or
into
mov
fstp
sbb
sar
xchg
aaa
or
xor
inc
cmp
icebp
push
add
lds
cmps
sub
inc
xchg
add
cmp
in
or
call
mov
jl
inc
fcmovnb
sub
xchg
pusha
scas
in
cmp
inc
sub
int3
mov
inc
and
pushf
loop
mov
(bad)
(bad)
fsubr
jne
leave
mov
ins
push
sub
dec
(bad)
mov
cwde
lock
inc
mov
sbb
loop
jae
pushf
sub
(bad)
mov
enter
sub
push
sti
sbb
push
mov
lahf
data16
mov
in
fisub
add
jp
pushf
dec
cmc
jns
retf
xchg
pop
push
push
stos
js
and
mov
xor
icebp
pop
repz
cmp
int
sbb
fisttp
test
iret
or
lahf
cmc
cmp
fcmovu
add
and
aas
mov
fmul
sbb
mov
pop
ror
inc
aas
push
or
fldenv
pusha
shl
pop
(bad)
mov
cmp
push
popf
mov
mov
fdivp
scas
shr
cmc
dec
les
sbb
mov
hlt
or
xor
aam
dec
out
fcomi
push
mov
call
movs
sti
adc
pusha
push
test
pop
bound
fsubp
pop
leave
int
test
stos
popf
adc
movs
out
jb
int3
sbb
mov
pushf
repnz
in
jmp
ja
(bad)
xor
outs
sbb
jmp
arpl
shr
push
sub
es
out
push
adc
sbb
movs
cmps
lgdtd
fs
or
test
arpl
int3
mov
adc
rol
xchg
adc
mov
or
mov
fisttp
ds
mov
mov
xlat
sbb
sub
outs
jmp
dec
cmps
or
pushf
push
push
push
push
loopne
fadd
mov
in
xchg
pop
test
dec
push
aas
xchg
push
fs
dec
fidivr
aam
sti
or
jmp
push
(bad)
les
cmp
hlt
dec
jecxz
lods
jne
jno
inc
and
icebp
sbb
xchg
aam
mov
repz
(bad)
jo
jns
or
gs
add
dec
(bad)
loope
sub
dec
mov
pop
int3
lea
dec
mov
(bad)
pop
fucom
adc
movs
frstor
add
xchg
cmp
cli
xchg
xor
fldenv
dec
test
xchg
fimul
adc
nop
sub
call
in
push
xor
sub
in
cli
inc
lahf
popa
jp
ins
je
pop
mov
repz
jno
adc
add
daa
pop
retf
sub
xchg
lods
xor
shl
outs
(bad)
pushf
neg
cmp
dec
movs
xor
cmp
rol
cmp
pop
mov
ins
mov
ret
mov
jnp
cld
mov
neg
jmp
cdq
mov
out
stos
jne
in
or
dec
int
cld
mov
sbb
aaa
out
sbb
jnp
cli
xor
test
lahf
mov
mov
mov
mov
cmps
add
ins
loopne
cmp
pop
push
mov
std
adc
punpcklwd
daa
pop
mov
or
inc
(bad)
sub
sbb
mov
cmp
ss
das
adc
mov
out
and
lods
test
ja
lahf
mov
pop
(bad)
repz
cdq
addr16
xchg
pop
aas
jmp
sub
fst
sbb
cmp
imul
adc
jg
lods
add
daa
jmp
enter
pavgb
(bad)
mov
mov
sbb
icebp
sbb
cmp
mov
sub
mov
pop
pop
mov
dec
sbb
adc
fcmovbe
pop
or
jecxz
cdq
sbb
or
pop
fs
xchg
popa
dec
cwde
jns
imul
mov
mov
push
loope
sub
xor
inc
dec
pop
xchg
lods
jp
inc
out
push
dec
push
cmp
nop
movs
adc
dec
out
scas
jge
dec
or
fisttp
xchg
dec
inc
in
cmp
(bad)
pop
xlat
aam
xor
ss
mov
int3
sbb
xor
mov
bound
sbb
xor
(bad)
or
idiv
or
inc
adc
dec
shl
in
inc
les
cmp
scas
add
lock
jecxz
xchg
jp
mov
iret
ret
jmp
push
lods
shl
adc
fisub
jno
and
mov
sar
and
dec
inc
mov
push
pop
xchg
frstor
and
addr16
cmp
ficom
or
arpl
xchg
mov
xchg
xchg
xchg
sti
jg
outs
retf
add
in
jmp
push
pop
pusha
dec
ss
xor
scas
sbb
movs
je
xchg
mov
adc
lods
shr
popf
sti
outs
in
scas
jae
adc
jge
inc
icebp
or
inc
sub
push
cdq
mov
out
or
sbb
mov
push
add
imul
in
mov
cmp
scas
xchg
shl
mov
and
imul
fld
cmps
xlat
repz
and
fistp
shl
out
sbb
pop
jle
cmps
enter
inc
aad
ficomp
cdq
inc
ficom
jmp
and
fcomp
loopne
sub
push
cwde
and
and
fcomp
(bad)
adc
jnp
xlat
push
push
mov
call
mov
je
into
cmp
test
test
mov
pushf
sub
ja
arpl
mov
aaa
lahf
push
jge
mov
mov
mov
popf
mov
les
xor
mov
mov
jmp
(bad)
xor
rol
loopne
aaa
retf
dec
cwde
xor
div
test
add
aam
add
test
daa
mov
(bad)
jne
lahf
ret
sbb
adc
lahf
mov
pop
dec
scas
jno
mov
xlat
xchg
retf
mov
jbe
xchg
sahf
mov
jg
test
jp
pop
inc
xchg
in
repnz
sub
imul
inc
push
mov
ss
mov
jb
mov
popf
sub
cmps
mov
jle
mov
ja
add
test
adc
lock
inc
jmp
cmps
ja
shl
clc
jno
add
cmc
jae
mov
cmp
pop
add
jns
pop
mov
call
adc
mov
inc
cld
push
add
int3
fdiv
mov
mov
or
pop
addr16
push
cdq
in
imul
ret
imul
inc
xor
pop
xor
mov
lds
xchg
ds
sub
or
cmp
les
push
dec
mov
xor
and
jnp
mov
jne
aaa
mov
jecxz
push
or
nop
jecxz
arpl
inc
bound
test
jns
out
loopne
fbstp
and
movs
jb
sbb
fucom
sub
fmul
in
xor
mov
and
mov
lods
push
sbb
sbb
mov
fild
mov
pop
or
cmp
cmp
adc
inc
push
xor
jmp
rcr
cmps
lea
pushf
cli
mov
cmp
pop
cmp
inc
xchg
xor
iret
xchg
fisttp
jb
fild
jle
push
(bad)
and
cmp
ret
scas
int3
test
push
repnz
push
or
dec
mov
in
aaa
and
call
js
iret
mov
pop
mov
xchg
sbb
jecxz
cmp
inc
mov
xchg
push
or
movs
ins
cdq
push
gs
aaa
fsubr
inc
sub
push
ins
push
xchg
mov
out
xor
call
ret
xchg
jge
inc
sub
sbb
dec
mov
adc
xchg
push
push
mov
add
jl
jae
neg
dec
daa
cmc
cmps
clc
and
vandps
dec
rcl
sub
jb
xchg
xchg
push
cdq
jmp
rcl
or
jns
add
popa
pushf
ins
enter
inc
mov
pop
pop
in
(bad)
jmp
sbb
pop
clc
jl
xchg
test
movs
movs
shl
pop
sub
cmps
push
enter
mov
arpl
mov
xor
jbe
jp
loope
mov
dec
cmp
sub
pusha
dec
mov
(bad)
cdq
adc
xor
scas
je
xor
jmp
mov
push
mov
mov
xchg
mov
inc
and
aas
push
test
cmp
pop
shr
aad
adc
cmp
or
push
lahf
mov
xor
fldcw
sar
xchg
loope
xchg
or
iret
push
and
jge
dec
stos
mov
bswap
cli
sbb
lods
imul
cli
sbb
add
lods
aas
in
fs
sub
mov
rol
jge
ins
sub
dec
movs
cmps
or
mov
out
sar
rol
dec
mov
mov
outs
stos
or
and
arpl
dec
test
icebp
xor
inc
push
sti
sbb
je
mov
xchg
cwde
stos
popa
das
int3
repz
inc
pop
cmp
cmp
fdiv
and
mov
out
or
ja
int3
xor
loope
mov
dec
icebp
mov
sub
dec
xchg
in
outs
pop
fs
(bad)
lods
jbe
xor
imul
bound
test
pop
sub
es
sti
cld
imul
mov
loop
inc
adc
stc
rcl
xor
out
mov
imul
push
mov
nop
sahf
push
stc
lahf
sbb
push
rcl
sub
in
dec
pop
xor
hlt
xchg
jno
push
dec
adc
dec
adc
pop
and
cmp
xchg
jl
jg
and
ins
adc
les
jae
adc
adc
or
test
mov
loop
retf
add
js
push
daa
push
bound
pop
add
daa
lea
xor
xchg
xor
outs
cwde
ror
imul
popa
jg
add
ror
push
movs
ret
mov
dec
test
mov
mov
cwde
add
or
pop
fcom
scas
cmp
mov
hlt
xor
les
test
sub
mov
rcl
sbb
stc
leave
arpl
cmp
mov
ret
push
xchg
(bad)
stc
sbb
out
in
sbb
test
imul
aas
push
call
lock
dec
jns
jmp
sbb
jbe
inc
in
dec
inc
xlat
pop
lahf
jns
jnp
in
lods
sbb
push
mov
mov
inc
test
and
lods
push
retf
mov
test
rcl
mov
mov
das
jmp
add
mov
jge
adc
or
cmps
pop
dec
inc
std
scas
fs
dec
xlat
fld
daa
ss
bound
cmp
push
dec
mov
inc
cmp
lea
lock
leave
xchg
call
pushf
in
(bad)
pop
pop
outs
push
push
jbe
xchg
mov
or
push
cmp
out
or
aas
adc
pusha
out
outs
sub
jb
inc
cmp
dec
add
fistp
pop
jne
mov
in
std
sub
aas
seto
cmps
sub
ror
xor
dec
xchg
cli
movs
(bad)
xor
mov
loopne
adc
clc
es
mov
cld
mov
outs
ret
inc
xchg
call
push
mov
sbb
push
or
sub
cmc
sub
inc
or
scas
ret
xor
mov
jmp
cmp
pop
out
out
(bad)
rol
mov
xchg
das
add
or
pop
stos
xchg
lahf
ret
das
imul
les
xchg
add
pop
inc
add
aas
fadd
in
leave
jmp
jnp
ds
jg
fadd
(bad)
cmp
xchg
mov
mov
(bad)
adc
pop
lds
mov
jno
push
out
push
inc
and
out
cmc
sub
mov
mov
js
cdq
sub
mov
xor
inc
dec
sub
sub
cwde
pop
or
adc
push
in
ficom
(bad)
rol
fdiv
xchg
add
and
pop
push
mov
pop
mov
xchg
(bad)
fidivr
imul
mov
cmps
imul
loopne
mov
inc
sahf
xchg
ret
mov
mov
and
pushf
or
pop
test
std
bswap
ins
xor
add
out
popf
cwde
dec
rcr
(bad)
in
neg
movs
inc
sbb
mov
stos
sbb
outs
loopne
or
or
sub
das
sub
clc
push
pop
dec
dec
dec
test
std
test
clc
pop
call
icebp
mov
into
jecxz
fistp
xchg
test
adc
xchg
mov
jl
(bad)
in
push
pop
xlat
rcr
aas
daa
mov
mov
cmps
or
xchg
sub
add
mov
stc
rcl
sub
sbb
jg
mov
adc
repz
bswap
clc
pusha
xor
(bad)
repz
call
sbb
lahf
(bad)
out
ja
mov
push
adc
xchg
shl
popa
push
mov
adc
popf
pop
mov
loop
jnp
into
aas
call
push
xor
mov
in
xor
in
cmps
mov
std
loop
ins
mov
call
inc
call
repz
xchg
aad
pop
xchg
adc
push
lods
movs
fwait
jnp
sbb
aad
jge
dec
(bad)
out
pop
mov
icebp
ds
mov
pop
dec
add
mov
jge
sub
dec
add
in
dec
sar
sub
mov
sahf
mov
sahf
out
jg
mov
add
inc
xchg
retf
(bad)
rcr
mov
ds
leave
enter
push
dec
(bad)
out
mov
xchg
inc
inc
std
push
pop
ficomp
ror
jg
addr16
dec
test
retf
add
lds
sub
push
mov
cmp
sti
cmp
ins
mov
add
(bad)
jmp
mov
gs
add
pop
adc
push
sub
push
mov
push
ds
mov
int3
rcl
mov
push
push
cli
adc
jbe
jge
push
cli
adc
fistp
es
test
test
add
adc
movs
cmp
push
inc
call
lods
cmp
inc
dec
xor
sub
jo
jmp
adc
jge
(bad)
cmp
xchg
fsubp
sbb
xlat
ja
pop
sub
cmp
pop
aas
dec
pop
pusha
loope
adc
push
ins
aas
push
inc
pop
add
jp
fwait
sub
neg
lods
cmp
cmp
fistp
mov
aaa
push
push
cwde
push
gs
ret
out
bound
pop
(bad)
scas
(bad)
aas
and
(bad)
jb
lahf
imul
push
jnp
inc
or
adc
sbb
dec
scas
bnd
jl
and
std
repz
(bad)
repnz
add
shl
movs
arpl
jmp
xchg
loopne
xor
repz
push
mov
or
scas
inc
stos
adc
sbb
xor
div
ret
inc
sbb
xchg
pop
adc
movs
push
stos
loope
fbld
(bad)
xor
push
mov
xor
popa
(bad)
sar
loope
cwde
push
sbb
pop
xchg
adc
cli
inc
lods
ins
mov
or
in
sbb
int3
push
mov
aad
stos
mov
shr
xchg
fst
cmps
mov
enter
call
loope
add
xor
aaa
lea
push
sbb
xchg
out
and
and
jmp
mov
(bad)
xchg
mov
and
ds
mov
sub
aam
xchg
dec
sti
cmp
out
retf
mov
call
xor
mov
(bad)
(bad)
lds
clc
mov
jle
dec
jecxz
mov
fist
dec
cld
mov
ret
cmp
adc
repz
sbb
xchg
ss
sub
push
inc
and
cmps
xchg
jno
ds
(bad)
lods
push
sbb
sbb
sahf
icebp
dec
out
ins
mov
dec
sar
bound
jo
jno
fmul
inc
hlt
inc
and
dec
shr
push
add
mov
ins
mov
test
enter
pop
fs
or
mov
dec
adc
repnz
xor
nop
fxch
and
dec
mov
push
jo
addr16
mov
add
cmp
pop
(bad)
outs
lock
mov
mov
push
sahf
aas
repz
cmp
cmp
lock
shl
sub
repz
test
xchg
enter
ins
adc
popf
sub
xchg
retf
imul
adc
imul
mov
scas
gs
mov
and
jmp
mov
cmp
sbb
div
add
cmp
repnz
ficom
add
xchg
call
ins
sti
push
jmp
push
call
xchg
sub
mov
push
cmps
pusha
cld
imul
sbb
sub
sub
cmp
stos
pop
lea
fsubr
into
xchg
and
jb
dec
and
sbb
in
inc
sbb
retf
clc
and
imul
or
and
push
jo
jmp
inc
push
sahf
push
ins
pop
mov
add
jmp
dec
pop
mov
pop
mov
bound
push
cmp
and
pop
rcr
push
shr
in
sbb
pinsrw
add
cli
test
ret
mov
pop
xchg
int3
inc
aaa
pop
push
jns
nop
jno
sti
outs
mov
mov
dec
push
call
aam
sbb
adc
jbe
shr
pop
adc
mov
dec
movs
inc
es
mov
(bad)
inc
sub
call
fdiv
rcr
inc
leave
icebp
and
sbb
bound
jae
(bad)
fbld
sbb
lods
outs
outs
mov
sbb
nop
jb
cmp
add
jge
cmp
inc
repz
scas
inc
push
add
push
daa
adc
mov
or
adc
jno
(bad)
ja
cld
pop
fcom
popw
adc
hlt
ins
sbb
push
frstor
clc
jo
xchg
in
(bad)
jmp
jg
mov
aaa
call
and
loop
xor
sub
sub
mov
loope
ins
sahf
arpl
sbb
jle
mov
mov
mov
mov
adc
lods
xor
mov
fmul
and
mov
jne
pushf
imul
sbb
push
adc
xor
aam
add
inc
mov
dec
push
and
fwait
adc
inc
dec
repz
pop
clc
mov
add
inc
mov
sbb
add
fnstcw
loop
cmp
adc
xchg
imul
xor
int3
ins
pop
rcr
sti
cdq
out
aad
sahf
retf
jp
outs
mov
bound
add
push
adc
dec
in
mov
xor
dec
xor
dec
xchg
cmps
sbb
fcmovu
xchg
or
fcmovnbe
fiadd
sbb
xchg
imul
iret
fs
das
lock
cmp
out
in
out
jbe
mov
hlt
mov
xchg
jno
out
xor
xchg
hlt
ds
push
inc
add
mov
jmp
jo
adc
fisubr
scas
dec
repz
push
movs
repz
fisubr
das
outs
inc
lahf
or
mov
shl
jo
xchg
es
test
cmp
push
pop
mov
int3
addr16
or
mov
outs
outs
clc
inc
lods
loopne
ror
sub
mov
xor
or
push
xchg
mov
nop
inc
sahf
loopne
push
xchg
xchg
test
add
pop
mov
cmp
(bad)
xchg
or
ins
jmp
xor
sbb
adc
jp
push
xchg
push
and
test
hlt
ss
pushf
mov
xchg
pop
daa
mov
adc
mov
xor
nop
and
dec
(bad)
and
daa
cs
sar
xchg
sub
inc
shl
cmp
inc
cmp
push
mov
std
mov
ins
mov
jle
mov
mov
and
xchg
mov
mov
sub
call
jne
adc
les
xor
loope
mov
aaa
pop
xlat
test
fstp
mov
cmc
xchg
mov
lods
mov
or
fcmovu
inc
std
mov
xlat
retf
in
jnp
lock
and
mov
pinsrw
or
or
call
test
outs
das
fucom
addr16
int3
mov
sub
push
cmp
(bad)
adc
test
cwde
lods
inc
mov
retf
fdivr
and
fdiv
fnstcw
xchg
push
inc
inc
mov
scas
xchg
ror
jnp
dec
xchg
cmp
in
and
cmp
mov
push
mov
movs
push
int
aad
int
mov
fdiv
ret
xchg
cli
sbb
pushf
jmp
dec
iret
cmc
inc
das
or
(bad)
jle
fidivr
dec
ins
fcomp
out
xor
mov
into
lds
push
leave
rol
mov
mov
and
into
mov
gs
jbe
std
sti
sbb
mov
in
outs
push
in
or
int
(bad)
mov
es
or
outs
stos
daa
mov
cs
dec
sub
fdivp
xor
jb
ss
push
or
mov
pop
and
dec
jo
push
nop
cwde
pop
inc
mul
in
pop
fst
rcl
imul
imul
xchg
and
std
jo
xchg
push
push
push
in
cld
or
jge
fdivr
mov
sub
retf
jmp
das
xchg
mov
mov
nop
out
dec
std
and
les
xchg
fidivr
push
dec
fmul
pop
inc
cmp
outs
es
pop
mov
lea
or
push
jecxz
sub
(bad)
iret
inc
xchg
mov
outs
inc
cmp
stos
in
dec
jnp
shl
adc
out
pop
imul
dec
out
sub
addr16
mov
rcl
mov
and
mov
fnstenv
jg
out
icebp
fidivr
push
cmp
out
sub
in
and
sub
xor
sub
clc
out
inc
(bad)
lods
out
scas
in
xchg
mov
mov
stos
jnp
into
aaa
xchg
sbb
or
add
fisttp
add
retf
push
jne
adc
mov
mov
xor
xlat
push
pop
idiv
jae
repz
hlt
(bad)
dec
cmp
dec
mov
pop
jge
cdq
xchg
ja
(bad)
fcmove
dec
test
add
mov
outs
mov
stos
aaa
(bad)
std
mov
push
dec
push
out
mov
pop
cdq
cmp
in
mov
push
es
add
jno
cmp
jae
cld
push
mov
jo
sub
xchg
adc
cdq
sbb
sbb
scas
nop
sub
in
arpl
pop
xchg
repz
loopne
xchg
push
gs
and
push
jbe
aad
mov
frstpm(287
push
cdq
dec
cs
mov
popa
fisubr
jl
daa
jge
aad
(bad)
cmc
stc
aam
jl
enter
sahf
push
or
inc
mov
mov
inc
leave
inc
pop
cmc
fisub
aaa
xchg
mov
(bad)
loop
xchg
rcl
push
bound
pop
mov
sub
sbb
(bad)
enter
arpl
sti
daa
stos
fiadd
popf
and
sub
ins
pop
push
cmc
sub
ins
mov
cmp
inc
iret
scas
mov
sbb
jns
adc
adc
push
inc
mov
push
pop
iret
jb
push
ret
mov
in
or
retf
cmc
movs
ret
(bad)
pop
iret
cmp
inc
test
or
xchg
sar
loop
sub
push
arpl
dec
sub
mov
adc
adc
jge
jmp
sbb
push
imul
sbb
sbb
mov
mov
pop
add
enter
fcomip
movs
xchg
and
movs
scas
mov
pop
xchg
pop
or
or
inc
push
popa
mov
das
xor
cmps
mov
adc
jo
xchg
adc
and
int
imul
adc
xchg
push
lahf
sbb
jmp
outs
lock
int
fwait
xchg
xchg
pop
push
mov
dec
sar
sub
jle
outs
dec
ja
shl
movs
and
xchg
scas
and
pop
xchg
mov
mov
xor
xchg
test
push
xchg
jecxz
fnstsw
icebp
iret
rol
pop
sahf
xor
jae
in
mov
or
cmp
jne
dec
xor
inc
lods
(bad)
jns
sub
shl
mov
inc
xchg
push
imul
je
arpl
push
jmp
pop
stos
mov
xchg
inc
and
cdq
pop
out
dec
xchg
mov
dec
cmp
mov
in
ret
push
test
addr16
mov
rcr
pop
(bad)
out
mov
jl
retf
push
jg
(bad)
pop
inc
mov
mov
inc
icebp
sbb
dec
mov
jmp
xchg
in
jno
pxor
jge
mov
inc
icebp
or
jg
jo
adc
les
sbb
scas
jb
fs
out
enter
pop
push
sub
stc
xor
in
fst
add
enter
lods
movs
jne
push
shl
aam
dec
sub
cli
xchg
mov
retf
inc
pop
arpl
(bad)
fcmovnbe
out
mov
in
popa
push
loop
movs
test
pop
pop
or
xchg
inc
or
addr16
and
pushf
sub
lahf
push
sahf
sti
popf
xchg
inc
push
mov
nop
int3
int
mov
mov
sbb
adc
add
fdivp
fs
in
lds
je
dec
xor
scas
out
cmc
xor
jp
mov
loope
inc
xchg
xchg
xor
pop
dec
rcl
popa
push
xchg
and
add
jle
dec
mov
or
not
lea
mov
cdq
mov
push
xchg
popa
xor
cmps
sbb
pop
arpl
fiadd
retf
inc
and
cmc
arpl
rcl
dec
xchg
(bad)
call
int3
add
push
sahf
sbb
cmc
ror
retf
scas
push
sbb
sbb
popf
mov
gs
sbb
(bad)
js
repz
xor
jmp
xchg
arpl
mov
pop
or
divps
sbb
dec
mov
hlt
mov
xchg
inc
aam
fs
inc
iret
add
scas
add
cmp
cmp
xor
pop
and
jo
ret
inc
cs
xchg
iret
lods
and
mov
aas
add
shl
add
mov
or
dec
mov
jne
push
or
je
cmp
xchg
sub
push
fdiv
pusha
lahf
mov
sub
aas
pusha
push
gs
test
and
call
mov
fsub
xchg
push
ja
and
in
in
test
cmp
dec
sbb
ins
(bad)
cmp
fnstenv
sar
push
jg
push
imul
mov
loope
pusha
lea
fwait
lock
(bad)
pushw
pusha
mov
retf
and
arpl
add
int
fdiv
pop
mov
jns
mov
xor
arpl
sbb
mov
into
dec
and
(bad)
(bad)
icebp
repnz
push
inc
push
sahf
dec
push
mov
jo
xchg
push
adc
mov
out
add
mov
dec
pop
jae
pusha
lods
stos
cli
sti
ss
inc
mov
mov
pusha
jmp
ins
xchg
ffreep
sub
sub
jae
sbb
adc
push
cmp
outs
jg
idiv
xchg
ins
cmp
mov
outs
mov
mov
xlat
cmps
sahf
cwde
pop
cli
push
ds
repz
es
sub
aam
and
sbb
add
sub
adc
retf
dec
(bad)
outs
outs
lds
mov
hlt
fucompp
xlat
sbb
jb
outs
outs
addr16
stc
out
std
out
stc
jne
scas
jmp
or
cmps
lea
push
xor
test
mov
pop
(bad)
inc
and
jmp
jb
fstp
cli
shl
xor
ss
xor
clc
in
fmul
pop
mov
pop
pop
add
or
adc
dec
sti
arpl
or
xchg
sub
cmc
out
sub
pop
add
aas
or
push
adc
js
aad
mov
das
xor
push
pop
pop
sbb
mov
sbb
out
test
nop
jmp
mov
das
push
sar
(bad)
push
out
loop
add
jno
fnstsw
and
inc
sub
mov
add
sar
cmp
and
stos
aad
loope
xchg
push
lds
daa
lea
dec
int3
mov
aaa
jbe
repz
ficom
or
ins
mov
push
jnp
fwait
sahf
retf
jge
lds
sbb
cmp
jne
add
outs
ins
mov
call
int
add
lods
adc
lds
xor
adc
push
push
cli
pop
lock
test
inc
aas
jge
fstp
iret
xchg
cmc
dec
sub
pop
dec
rcr
mov
lods
and
pop
in
aas
out
pop
pop
repz
and
sub
or
sub
rol
rcl
fcomp
(bad)
mov
sbb
xchg
dec
pop
loop
adc
add
push
fistp
(bad)
pop
sar
ror
jbe
fcomp
fisubr
or
int3
cmp
jmp
out
retf
adc
loope
pop
add
push
cmp
test
sub
ret
jnp
cmps
inc
stos
or
mov
gs
cs
stos
push
call
popf
jb
sub
lods
lods
and
dec
rcr
xchg
hlt
fwait
out
loope
scas
stos
enter
jp
call
mov
mov
or
xor
rol
inc
inc
xchg
mov
xor
jno
data16
sub
push
sub
push
xchg
fs
xor
push
pop
mov
cmps
and
ret
cmp
xchg
stos
jp
cmp
mov
jns
sbb
(bad)
sbb
(bad)
jmp
adc
imul
shl
cmps
fimul
mov
cdq
iret
and
xchg
sar
xor
aad
mov
(bad)
lds
scas
(bad)
or
mov
jg
pop
fdiv
outs
call
jle
mov
push
cmp
xchg
jb
and
in
pop
movs
sar
fild
add
jbe
repnz
sahf
mov
jmp
and
inc
scas
icebp
dec
xchg
in
cmp
out
pop
cmp
push
inc
(bad)
jmp
shr
mov
mov
into
inc
dec
stos
rcr
movs
jmp
push
stc
or
dec
pop
mov
lods
cmp
sbb
neg
sbb
scas
les
sar
mov
xor
call
sub
or
cli
pop
dec
add
pop
push
xchg
jge
jns
jecxz
js
inc
adc
in
mov
add
xchg
sti
add
bound
jb
outs
and
stos
lods
push
sbb
mov
mov
shl
es
add
mov
(bad)
int
cmp
lods
push
inc
mov
not
jmp
push
mov
into
mov
retf
mov
jg
stos
push
call
lods
push
pop
test
enter
out
addr16
mov
jne
imul
aad
in
xlat
inc
loope
sti
jmp
stos
mov
xchg
ret
ret
xor
stos
rcr
fnstsw
jns
adc
int
xor
sbb
jae
jnp
mov
stos
mov
cmps
cmc
test
aam
movs
mov
ja
int
in
repnz
mov
mov
call
mov
sub
and
fstp
fiadd
inc
push
fucomi
pushf
or
out
jp
pop
jne
sbb
cmovb
(bad)
fnstsw
mov
cmp
add
sbb
ficom
jle
out
clc
add
dec
pop
(bad)
or
mov
sub
mov
jle
daa
or
aaa
loop
mov
popf
sub
imul
add
adc
int3
and
sbb
adc
mov
hlt
mov
ss
cmps
pop
leave
jnp
aad
jbe
(bad)
bound
pop
in
inc
inc
add
mov
xor
lods
arpl
les
call
in
lahf
xchg
bound
jp
icebp
dec
fstp
lods
dec
cmps
fidiv
adc
(bad)
xor
shr
sar
scas
enter
mov
sahf
xor
test
out
ret
dec
(bad)
xlat
cwde
test
dec
mul
push
push
sbb
mov
mov
inc
mov
push
je
test
fisub
movs
and
pushf
mov
mov
stc
sub
and
les
imul
jae
out
adc
fcmovbe
clc
fs
outs
je
shl
mov
ret
loope
dec
call
inc
out
sub
pop
adc
pushf
fst
xor
pop
jl
loop
mov
fimul
jg
stos
retf
dec
fldenv
and
adc
inc
sub
fistp
lock
pop
(bad)
mov
push
push
mov
mov
jns
xor
add
cmp
push
mov
mov
retf
pop
(bad)
pop
mov
inc
inc
jnp
repz
sti
lods
(bad)
in
cmp
and
inc
push
sar
js
sub
inc
jnp
jmp
mov
sbb
in
inc
or
xchg
stc
clc
dec
lds
imul
loopne
enter
mov
pop
fst
pushf
(bad)
pop
sub
sti
sti
jne
(bad)
lods
sbb
xor
jg
jp
xor
xor
xor
mov
mov
call
jle
aaa
test
out
test
push
dec
lahf
int3
repz
or
adc
fist
pusha
test
dec
pop
xchg
lods
sbb
dec
mov
jl
test
inc
into
shl
xor
loop
cmp
data16
cmp
inc
stos
mov
movs
retf
mov
das
mov
add
push
vmovaps
jb
arpl
lock
mul
push
les
out
mov
pop
scas
outs
mov
mov
call
sub
mov
adc
mov
ficomp
cmps
(bad)
xor
cmps
ret
jmp
mov
adc
sub
sahf
jae
xor
xor
sahf
mul
and
stc
addr16
pop
jg
mov
das
xchg
jg
(bad)
pushf
add
mov
dec
or
fwait
hlt
inc
sbb
jbe
aam
std
pop
fld
aad
mov
scas
loopne
inc
mov
sbb
jns
ja
mov
mov
das
dec
pop
pop
xchg
shl
dec
ins
xchg
scas
fst
dec
jl
xchg
(bad)
and
xchg
mov
out
xor
inc
push
jo
sbb
lock
loope
pop
nop
int3
lods
inc
or
push
pop
bswap
in
add
popf
add
lea
pop
fiadd
adc
test
jmp
ins
mov
pop
jmp
fcom
mov
sub
stos
pop
vunpcklpd
fbstp
xor
xor
push
dec
and
inc
jmp
push
jbe
je
rcl
leave
xor
mov
sub
outs
add
jmp
movs
dec
pop
mov
jmp
and
inc
shr
cmps
adc
in
push
push
sub
inc
sub
test
push
cli
cs
mov
inc
leave
xor
pusha
test
(bad)
mov
xchg
adc
mov
out
jecxz
arpl
out
sub
xchg
test
mov
jo
cmp
retf
lods
lahf
mov
in
arpl
das
add
int
dec
push
popf
les
or
xchg
push
add
lods
or
js
sbb
adc
jmp
push
iret
cmp
outs
fcmovne
dec
mov
xor
xlat
xchg
clc
cmps
cli
scas
(bad)
arpl
popa
dec
push
popa
sub
cwde
stos
std
adc
inc
inc
push
lock
icebp
jae
mov
cmp
and
dec
inc
dec
das
retf
sahf
rcl
dec
lods
jo
sub
jbe
jno
movs
(bad)
pop
adc
test
xchg
push
pushf
jmp
xchg
movs
and
ins
scas
pop
pop
pop
cmp
maskmovq
mul
repz
dec
jbe
int
sbb
pop
mov
enter
je
pop
loop
push
add
outs
aam
stos
sub
inc
jbe
push
cmp
es
in
aaa
and
pop
repz
sbb
cmp
push
clc
mov
jmp
inc
and
adc
adc
cmp
(bad)
stos
sbb
xchg
bound
jge
adc
fs
lahf
mov
fcmovbe
sub
and
pop
cmps
jno
iret
in
sub
pushf
add
cmps
mov
rcr
or
retf
enter
mov
push
repz
stos
push
movs
add
enter
nop
cwde
mov
or
sbb
pop
or
sar
jp
mov
mov
sbb
and
xor
icebp
cmp
dec
jmp
xchg
xchg
xor
push
out
icebp
or
xchg
cmps
push
sbb
adc
mov
mov
outs
adc
jmp
dec
dec
aaa
xchg
xchg
mov
in
arpl
stos
loope
(bad)
sub
sar
add
fiadd
xchg
add
scas
out
pop
aaa
loop
rcl
adc
addr16
movs
xor
popa
push
jae
fst
lods
jecxz
jmp
pop
out
les
jno
ins
add
sub
(bad)
or
in
pusha
xchg
ror
lods
mov
mov
mov
ds
hlt
mov
test
int3
ja
sahf
push
push
aad
xchg
add
lock
ficom
test
cmp
clc
and
imul
cwde
pop
ss
pop
outs
addr16
mov
push
jno
pop
ins
cld
cwde
ret
push
adc
cdq
mov
cmp
push
outs
dec
mov
push
lods
push
mov
inc
int3
aas
scas
call
jle
(bad)
(bad)
retf
test
lahf
pop
mov
out
push
lahf
adc
jl
push
fist
call
mov
xor
jg
aaa
aam
mov
mov
pop
jge
popa
mov
cmp
test
dec
aaa
jg
fidivr
dec
xchg
jl
leave
mov
add
dec
lea
leave
dec
push
cmps
sub
pop
mov
xchg
out
or
add
sub
movs
das
pop
loopne
mov
aas
xor
vpminub
mov
test
and
sbb
sahf
cmp
inc
dec
fwait
call
mov
inc
mov
jg
popf
mov
inc
cmp
cmp
jns
inc
enter
sahf
mov
or
adc
loope
daa
out
nop
in
and
lods
dec
or
mov
jl
cmp
sub
popf
dec
jae
(bad)
or
hlt
inc
push
lods
in
mov
(bad)
scas
dec
mov
outs
sbb
xchg
sar
push
cmp
je
sbb
xchg
das
inc
shr
popa
adc
or
cmc
js
pop
or
adc
imul
out
aaa
aaa
cmc
inc
lods
mov
nop
mov
test
xchg
movs
dec
pop
aam
dec
int
(bad)
call
cld
or
dec
in
jmp
ret
or
je
sbb
scas
or
rol
es
lods
mov
mov
jp
ins
test
xchg
add
jae
jo
sub
(bad)
xchg
hlt
popf
test
icebp
adc
dec
(bad)
nop
loop
or
inc
iret
test
and
lods
or
leave
add
mov
out
icebp
sbb
mov
sub
les
dec
mov
iret
movs
xor
(bad)
jne
int3
xor
push
arpl
jle
mov
mov
shr
es
add
loop
stc
fadd
iret
ins
jbe
jns
add
mov
lahf
into
lea
pop
push
test
sbb
xor
xlat
int
cmp
repnz
xchg
rol
pop
mov
jb
sbb
in
adc
int3
das
stos
pusha
inc
jno
pushf
dec
lods
stos
jge
stc
mov
jl
fadd
jmp
inc
push
mov
pop
inc
cmp
lds
push
sub
pusha
das
jno
(bad)
lahf
pop
shl
lods
test
push
shr
add
pusha
je
(bad)
jne
in
stos
test
test
xor
xchg
xor
cmovne
mov
ds
pushf
sbb
mov
in
adc
cmps
test
bound
jo
lds
retf
pop
xchg
push
sbb
inc
and
call
jae
aaa
sar
sub
test
sti
sar
jmp
iret
clc
pop
add
pop
mov
dec
mov
cmp
sbb
arpl
stos
jnp
push
pop
dec
xchg
je
push
cmp
mov
pop
out
sahf
cmps
mov
xchg
ror
cmps
repz
push
push
mov
in
xchg
movs
test
add
es
inc
mov
add
sbb
ins
sub
or
jp
in
cdq
lock
mov
jnp
mov
jle
add
arpl
fs
xor
push
popa
cmp
ins
xchg
shr
cmp
les
jp
lods
xor
test
ss
dec
add
stc
ss
outs
daa
loop
retf
imul
push
pusha
test
ss
sub
es
icebp
jae
adc
(bad)
fninit
sub
int3
test
fist
lods
mov
cmp
aaa
sbb
inc
inc
jge
and
cli
or
scas
mov
xchg
jns
and
ins
push
popf
icebp
outs
add
jbe
lds
or
test
loop
push
mov
std
test
adc
jecxz
mov
xor
mov
outs
shl
in
into
mov
jno
adc
test
or
xchg
inc
xor
stos
push
fist
sbb
sub
call
sub
std
outs
lods
or
dec
sub
sub
mov
xor
pop
xor
stos
mov
cmp
push
mov
sub
cs
or
lods
xchg
pop
jmp
cmc
neg
int
jb
jb
fwait
ins
cmp
ds
adc
cmp
jb
add
pop
or
jno
ror
mov
mov
int
fs
rcl
popa
push
mov
inc
mov
shl
bound
cmps
and
(bad)
aaa
lea
cmps
arpl
(bad)
fld
int3
test
(bad)
cmps
sbb
daa
jns
mov
int
mov
jo
mov
mov
cmps
or
int
ret
inc
dec
pop
fcom
stc
ret
cwde
ror
and
pop
pop
int3
dec
popf
cmp
adc
or
pop
jo
xor
cmp
jecxz
dec
popa
cmp
retf
sub
movs
cld
jnp
hlt
xchg
rol
sbb
out
shl
shl
leave
push
gs
ret
adc
dec
push
and
pop
and
hlt
(bad)
pop
pop
ins
or
fcomp
jnp
rcr
push
(bad)
(bad)
push
fist
and
jmp
jle
stos
into
cmp
cwde
push
pop
retf
dec
fidivr
fwait
shr
int3
dec
sub
(bad)
sti
xchg
inc
push
mov
jge
jns
inc
pushf
stc
imul
mov
fist
and
lahf
xor
sbb
inc
adc
or
xchg
in
imul
test
lds
cmovo
adc
mov
jecxz
push
cmp
fdiv
leave
and
cwde
enter
adc
dec
enter
sub
or
pop
pop
outs
inc
pop
repnz
mov
(bad)
retf
mov
jge
mov
std
ins
test
jge
inc
into
jne
lea
movs
fs
ins
retf
test
jo
dec
xchg
mov
rcr
dec
xchg
bound
sbb
dec
cmp
daa
ror
lods
shl
push
cmp
pop
fmul
sti
test
dec
pop
int
pop
int
xchg
std
jge
mov
add
inc
mov
xchg
inc
ficom
imul
icebp
ret
popa
push
push
cs
test
xchg
sbb
in
sahf
and
mov
dec
dec
dec
xor
addr16
mov
leave
add
push
inc
mov
jno
sub
enter
pminsw
loopne
in
or
xchg
and
adc
lods
cli
in
sub
jbe
mov
pop
adc
add
dec
jnp
or
pop
stos
mov
dec
dec
(bad)
(bad)
xchg
idiv
jp
push
inc
push
shl
repz
jl
xlat
sbb
repnz
call
les
xor
fcom
mov
call
xlat
xor
or
aas
data16
xor
pop
aad
adc
xchg
jg
cmp
inc
pushf
xchg
into
jno
pop
and
adc
xor
mov
aas
ds
inc
xor
jb
por
jb
dec
add
shl
dec
dec
loop
jns
mov
retf
int
lods
xchg
fidiv
inc
cld
mov
add
fidiv
mov
push
mov
mov
sub
cmp
into
push
lods
push
inc
mov
lods
inc
xchg
stos
dec
jmp
retf
std
loop
nop
pop
xor
jne
sub
mov
loop
sbb
cmp
sub
cwde
jnp
mov
(bad)
(bad)
(bad)
mov
neg
fcomip
shl
dec
xor
xchg
add
mov
icebp
imul
dec
jl
and
(bad)
std
and
stc
mov
fwait
push
mov
loopne
jge
aam
mov
fs
and
jmp
dec
movs
adc
loopne
icebp
sbb
or
jp
sbb
int
aam
adc
scas
xor
adc
xchg
jbe
das
mov
jecxz
sub
imul
inc
or
mov
in
imul
push
cmps
shl
mov
enter
sub
fcmovbe
adc
(bad)
repnz
ins
movs
(bad)
movs
and
scas
push
or
jmp
pop
cmps
mov
push
mov
scas
pop
mov
mov
cmp
loope
pop
jg
xor
or
jno
jno
jno
pushf
mov
jle
sbb
mov
mov
cmps
lods
cmps
hlt
je
retf
push
stos
mov
test
push
mov
addr16
test
jg
xor
sbb
mov
pop
jp
sub
cld
sub
cli
rol
jmp
(bad)
mov
aaa
push
xchg
or
loope
or
js
out
push
(bad)
cs
sub
dec
nop
out
pop
rcl
cmp
and
leave
movs
lods
fidiv
dec
call
arpl
es
jb
neg
(bad)
mov
les
dec
xchg
push
repz
div
inc
cmps
xor
shl
sub
fwait
test
invd
cmps
(bad)
fisub
lahf
syscall
add
iret
sahf
clc
les
or
es
stos
sahf
sub
inc
pushf
call
mov
iret
inc
test
or
fimul
sbb
lea
mov
push
rol
cmp
imul
cmp
jecxz
call
(bad)
ss
pop
and
add
adc
data16
add
jg
add
imul
or
stos
out
les
hlt
push
pop
ret
push
mov
add
or
in
jmp
mov
pop
jbe
pop
out
cdq
pop
mov
mov
jb
movs
sub
ja
cdq
push
fstp
add
pop
popf
xlat
push
dec
iret
adc
and
cmc
aad
and
repz
movs
into
frstor
adc
inc
movs
inc
lods
or
cli
sub
lock
nop
aas
jecxz
rdtsc
shl
mov
test
sbb
das
adc
adc
adc
pop
and
clc
in
fcmovb
xchg
jno
pop
cmp
xchg
mov
xchg
inc
std
ja
push
or
into
xor
dec
int
push
mov
sbb
imul
pop
pop
and
lods
imul
les
sahf
push
cwde
in
push
jns
dec
daa
inc
cdq
pop
lahf
adc
adc
aad
pop
push
mov
xor
or
jle
imul
ss
mov
call
outs
mov
lods
fstp
call
lds
in
test
les
and
aas
or
repz
sub
sahf
stos
aam
out
add
in
ins
xchg
rcl
add
cs
sbb
cdq
aas
gs
(bad)
rol
loope
pushf
push
push
mov
mov
aas
and
xlat
outs
aas
xor
(bad)
pop
cwde
gs
shl
cmp
inc
lahf
rol
mul
rcr
imul
mov
mov
sbb
dec
pop
jecxz
loopne
scas
mov
hlt
xchg
js
xor
mov
fild
cmps
jb
inc
cli
sbb
(bad)
cli
sbb
jb
cwde
push
cmp
and
cmp
sub
adc
dec
push
xchg
mov
jns
fst
mov
add
adc
test
mov
jg
mov
iret
jmp
add
in
rol
push
adc
mov
movs
xchg
ret
inc
shl
mov
mov
dec
jmp
cmp
inc
sub
(bad)
mov
popf
push
fs
xchg
adc
add
xchg
mov
jmp
mov
pushf
stos
jns
cdq
not
in
inc
in
and
fdecstp
jl
loope
cmp
dec
loope
shl
push
mov
ror
dec
pop
mov
inc
xor
and
leave
das
ds
stos
xchg
test
jnp
jecxz
xor
jmp
daa
cmps
scas
aaa
test
mov
cmp
push
sbb
iret
pusha
cs
int3
ds
stc
aaa
ins
mov
jg
dec
ja
mov
shl
inc
idiv
sar
cmps
cmps
retf
push
stos
cmp
pushf
cmp
mov
sti
xor
pop
sbb
lea
pop
icebp
jge
add
out
cmp
push
xor
add
inc
imul
je
sbb
push
xor
mov
or
dec
adc
retf
add
cs
xchg
jbe
xor
out
or
pop
(bad)
mov
aad
je
xor
ins
cmp
cmp
lds
mov
jns
mov
dec
imul
ds
adc
adc
movs
jnp
lahf
and
pop
dec
sub
mov
push
ins
xor
adc
sar
in
fwait
push
mov
fmul
inc
ins
dec
add
jp
add
iret
xchg
loopne
call
pop
adc
xchg
xchg
sub
cld
ins
pop
or
fmul
mov
es
mov
enter
inc
mov
adc
sahf
sub
cmp
sbb
pushf
ror
lahf
inc
sub
dec
movs
retf
loopne
mov
retf
aas
outs
or
pop
and
pop
dec
das
lea
xchg
jne
cmps
retf
retf
mov
aas
mov
jno
inc
cmp
xchg
push
xchg
aam
stos
or
andps
(bad)
dec
or
jl
cs
aas
xchg
scas
add
das
jno
push
movs
cs
aad
in
enter
cmp
mov
bound
mov
pop
in
aad
mov
pop
mov
sub
fs
push
or
sub
mov
fcomp
mov
adc
rol
ret
(bad)
pop
or
neg
aad
jecxz
sbb
mov
sbb
pop
sub
js
in
xor
shr
push
in
mov
fldenv
pop
and
jmp
mov
test
fld
loop
jne
out
dec
mov
sbb
fs
lock
data16
push
xor
arpl
stos
loop
jb
mov
mov
loope
mov
jecxz
sbb
xor
pushf
push
cmp
(bad)
addr16
or
fs
les
lods
cmc
sbb
sbb
out
sub
and
and
pcmpeqd
or
dec
pushf
inc
lods
imul
jle
jmp
xchg
jnp
sbb
(bad)
mov
lahf
lds
into
je
daa
cmps
or
sub
push
arpl
add
pop
jmp
pop
sbb
js
test
fsubr
cmp
pop
xor
stos
adc
sub
xchg
sar
or
lods
push
je
out
lahf
sbb
and
cmp
jb
(bad)
faddp
push
cmp
add
shr
fld
pusha
lods
and
repz
mov
scas
push
mov
mov
xchg
call
sub
fild
mov
mov
jp
in
add
or
outs
cmp
mov
mov
jae
pop
mov
cmp
add
push
iret
xor
mov
int3
and
dec
fild
pushf
call
pop
dec
jo
jmp
push
mov
test
fld
mov
fs
adc
ret
std
fisub
hlt
fnstcw
lods
das
or
mov
inc
movs
out
add
pop
ja
xchg
jmp
sbb
sub
adc
lds
out
dec
cwde
test
mov
push
addr16
call
nop
sub
cmp
(bad)
sbb
aas
call
push
lods
xor
inc
or
push
in
(bad)
cs
and
dec
sbb
pop
mov
mov
pop
lea
jle
and
icebp
mov
leave
pop
mov
push
jns
sub
repnz
loopne
std
or
adc
retf
push
mov
in
mov
sbb
xchg
test
ins
xchg
ins
pop
jo
cmp
in
mov
jno
sub
aaa
or
cmp
push
std
mov
ss
loopne
lods
scas
repnz
mov
aad
mov
lods
jecxz
jmp
add
fbstp
ja
fadd
cs
mov
ror
push
mov
or
into
jp
add
and
inc
cmp
addr16
loope
adc
ret
mov
in
mov
int
test
lock
mov
pop
sub
in
sbb
les
dec
idiv
add
push
fldcw
ja
add
add
out
rcr
sbb
arpl
mov
mov
push
mov
mov
mov
inc
icebp
into
sub
out
and
loope
sub
aas
dec
mov
into
mov
lods
cmp
jge
repnz
or
mov
mov
std
enter
and
idiv
fimul
pop
sbb
ret
clc
jle
inc
push
adc
call
jmp
ret
int3
sub
or
push
mov
ins
pop
popa
inc
dec
repz
cld
test
mov
or
call
mov
sbb
cmp
pop
adc
fs
mov
dec
pop
adc
mov
mov
xor
out
inc
out
popa
dec
test
or
mov
xchg
test
je
or
xchg
sbb
bound
popf
adc
sti
fwait
xchg
and
psadbw
pop
or
pop
or
push
ds
fcom
inc
sti
adc
sti
(bad)
(bad)
ds
jns
cli
jmp
(bad)
les
xor
ret
inc
add
xchg
pop
mov
mov
outs
adc
shl
sbb
repz
aam
int3
pusha
fnstsw
fisubr
rcr
adc
jne
pop
mov
push
aad
xchg
sbb
outs
and
sub
leave
(bad)
out
dec
xchg
scas
shl
ins
int3
mov
dec
mov
sar
rcl
out
int
rep
push
cwde
xchg
repnz
test
idiv
addr16
dec
mov
mov
call
xor
push
mov
stc
std
mov
inc
or
pop
push
daa
jl
xchg
iret
movs
sub
fcom
xchg
mov
jns
inc
ret
xor
dec
mov
sub
sbb
aaa
sbb
xchg
imul
xchg
xor
xchg
mov
jae
leave
and
xor
inc
or
mov
ins
mov
stos
js
mov
in
cmp
dec
mov
pop
mov
ds
je
mov
push
mov
gs
cmp
enter
pop
push
sbb
xchg
cmp
ret
sub
(bad)
sub
out
mov
adc
xor
push
mov
punpckhbw
cld
dec
in
in
inc
and
and
mov
fcomp
mov
repz
hlt
lods
pushf
in
or
mov
cs
sub
idiv
pop
shr
fnstcw
stc
mov
call
(bad)
cld
dec
out
ret
xchg
dec
dec
add
shl
sbb
mov
enter
mov
push
xor
add
sbb
jle
jmp
(bad)
pop
and
aad
test
mov
call
xor
dec
test
mov
adc
xor
sbb
sbb
sub
jo
mov
sti
and
xor
mov
jbe
inc
jnp
jg
dec
mov
retf
pop
aas
mov
jae
dec
or
mov
adc
sahf
(bad)
fsincos
xchg
aaa
shl
rcr
inc
adc
in
stos
retf
jnp
mov
push
and
inc
xchg
(bad)
dec
jo
mov
inc
popf
dec
add
sub
sub
sub
xor
adc
and
loope
jecxz
rcl
and
xchg
dec
sahf
lods
(bad)
js
push
sub
je
cmp
test
add
xor
arpl
mov
jmp
sti
and
out
rcl
xor
xchg
(bad)
movs
es
retf
jae
test
scas
mov
sahf
sbb
cmp
inc
out
or
sub
retf
shl
jnp
xchg
add
ss
test
xchg
add
aad
lahf
shr
cmp
fsub
push
mov
int3
rol
es
push
mov
mov
lea
jge
mov
repz
(bad)
aas
push
(bad)
push
cmp
xor
mov
sti
(bad)
in
cld
loope
mov
ror
rcl
sbb
lahf
jle
bound
test
lods
outs
repz
xor
and
adc
fidiv
scas
push
jle
in
jle
stc
jo
adc
nop
fsubr
cmp
mov
or
xchg
jmp
cdq
lgs
shr
dec
inc
mov
push
mov
mov
outs
and
dec
ins
xchg
cmp
retf
mov
mov
clc
mov
cmp
ret
daa
mov
pop
push
add
push
inc
(bad)
retf
sub
leave
jl
cmp
rcl
jp
dec
(bad)
cli
ss
sahf
mov
stc
sub
mov
or
scas
lds
inc
mov
dec
mov
aad
mov
cmc
cmp
lea
ins
jb
fldcw
ret
loop
xor
cmp
int
jge
pop
push
xchg
mov
sbb
pop
gs
shl
fld
and
mov
jmp
push
js
(bad)
mov
add
mov
cld
lods
sbb
inc
ret
pushf
fsubr
xchg
sbb
ror
rcr
cmp
mov
daa
outs
cmp
pop
movd
and
pop
cmp
mov
jmp
inc
mov
dec
inc
mov
pop
or
and
imul
xchg
test
ret
movs
fwait
mov
jmp
in
clc
or
mov
ja
aam
icebp
stos
or
jl
push
mov
stos
ss
fsubr
adc
sbb
dec
bound
xor
out
adc
cmp
mov
mov
dec
mov
dec
jne
lods
stc
and
push
push
xor
and
outs
push
inc
and
call
stos
lods
pop
nop
jge
shl
adc
cli
add
loop
ja
pop
cwde
and
inc
pop
or
pushf
cmps
repnz
(bad)
sbb
xchg
imul
call
mov
loopne
aad
push
push
gs
out
xor
sub
push
nop
mov
fcom
sub
xchg
inc
mov
or
push
and
sub
addps
and
xchg
mov
xchg
cmp
jbe
js
retf
dec
xchg
pop
aam
aaa
hlt
jbe
adc
xchg
test
jmp
loop
push
cmp
mov
fs
hlt
add
pop
sbb
bound
enter
push
int3
cli
outs
mov
jnp
and
adc
ss
je
push
(bad)
popa
mov
stc
mov
adc
fsub
push
clc
sbb
rcl
mov
js
cmc
cdq
sbb
xchg
or
pop
test
stos
idiv
sub
mov
and
aaa
shr
sbb
mov
iret
shr
xor
(bad)
sbb
fdivr
pop
in
lods
in
mov
jmp
push
sub
(bad)
sbb
mov
xor
ja
xchg
mov
int
mov
and
xlat
mov
int3
call
fnsavew
add
jle
pop
add
sbb
cmp
movs
cmp
xchg
add
sub
inc
test
les
nop
push
add
ss
out
arpl
loope
adc
scas
pop
add
sar
mov
and
mov
jbe
je
mov
cmps
into
mov
cmp
or
and
push
xor
push
fidivr
jge
and
fistp
cwde
adc
pusha
(bad)
stc
inc
push
mov
pop
mov
dec
lods
add
out
jl
add
movs
and
sbb
mov
movs
jnp
outs
xchg
sbb
xchg
or
mov
adc
inc
pop
(bad)
mov
sub
add
fidiv
sahf
cmp
cwde
xchg
jne
(bad)
movs
cmp
mov
mov
cmp
mov
push
xchg
(bad)
sbb
inc
push
fsubr
push
div
stc
and
enter
xchg
and
push
mov
lods
fcomp
adc
in
outs
pop
adc
sbb
iret
movs
inc
fs
lods
adc
mov
pushf
(bad)
jg
xlat
out
jge
out
retf
adc
iret
into
and
cmp
inc
mov
loop
mov
mov
mov
lahf
int3
xor
cmc
scas
jns
mov
pop
xor
bound
sub
inc
mov
jl
shl
sti
dec
adc
and
mov
pop
mov
imul
call
mov
jns
popa
pushf
in
mov
jnp
mov
les
xor
test
(bad)
xchg
push
mov
mov
add
sbb
and
add
arpl
shl
call
jnp
sub
enter
cmp
(bad)
cdq
cdq
shr
mov
in
in
nop
jge
sub
inc
out
xor
mov
sbb
ror
mov
lods
cmp
dec
lods
mov
mov
lods
push
lahf
dec
movs
out
jp
mov
popa
push
sbb
xchg
pusha
xchg
cmp
inc
sbb
sbb
mov
loopne
adc
or
add
pop
aaa
fmulp
sub
daa
gs
push
mov
lds
fwait
xor
sub
sbb
sti
mov
fstp
(bad)
push
cdq
sub
in
push
xchg
jbe
sub
mov
pop
or
push
fsubr
neg
rol
retf
mov
sbb
mov
mov
push
sbb
repz
mov
test
pop
mov
push
cmp
rcl
fstp
retf
or
or
sbb
cmp
pop
movs
jle
sar
ds
dec
and
sbb
mov
ficomp
push
and
jne
xor
loop
mov
stos
sar
stos
stos
ds
inc
in
call
in
dec
div
test
cmps
push
adc
cmp
iret
fwait
rol
sub
adc
or
aaa
not
and
jg
lahf
xor
loope
(bad)
xor
aam
pop
(bad)
outs
aas
mov
test
sahf
inc
sub
inc
les
icebp
loopne
aad
les
dec
(bad)
cmps
cmp
into
mov
push
cmp
mov
mov
push
mov
inc
fstp
and
and
xchg
push
sbb
ja
dec
sub
jb
or
xchg
loop
mov
jne
fdivr
stc
loop
movs
fdiv
add
sti
cmp
xor
and
daa
mov
xchg
aaa
ror
das
jne
jge
fwait
sbb
test
sub
hlt
(bad)
xlat
iret
and
loope
lods
sbb
icebp
mov
mov
push
cli
mov
mov
pop
adc
test
call
pop
test
leave
fbstp
push
lea
xchg
call
mov
movs
bound
add
mov
in
test
out
retf
pop
fcmove
mov
xchg
int3
dec
jo
pop
mov
jmp
ja
shl
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
jmp
mov
add
cmp
jb
cmp
ja
cmp
je
sub
cmp
ja
cmp
jne
mov
shr
rol
xchg
sub
add
mov
add
sub
mov
add
loop
sub
jg
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
add
add
