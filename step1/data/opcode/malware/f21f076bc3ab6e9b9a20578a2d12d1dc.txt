jnp
(bad)
add
dec
ds
add
pop
dec
or
clc
or
push
dec
push
xchg
lahf
fucomp
fsub
fs
mov
jp
test
add
mov
or
pushf
out
loope
jmp
mov
lahf
lahf
repnz
fdivr
pop
rol
push
hlt
add
or
les
movs
or
or
adc
adc
lods
xor
aas
aas
aas
jg
push
inc
enter
inc
inc
push
push
push
ds
ds
dec
lock
clc
outs
idiv
std
das
dec
xchg
jl
dec
mov
or
in
jbe
and
ja
or
mov
pop
pusha
sub
mov
push
inc
add
or
in
jbe
sub
cmp
cwde
ja
inc
mov
rol
and
cmp
dec
mov
mov
and
das
not
lahf
ja
or
cmp
sbb
fucomp
ins
push
inc
adc
imul
mov
std
or
test
imul
xchg
out
cmp
inc
fisubr
push
and
jmp
pop
add
aam
pop
cmp
out
push
in
sahf
push
and
outs
mov
mov
cld
pop
call
arpl
mov
pop
scas
push
pop
in
(bad)
adc
jp
js
sti
pop
add
sub
adc
pop
inc
(bad)
mov
movs
lds
push
imul
lahf
js
loopne
pusha
cmp
xchg
shl
mov
imul
out
in
movs
movs
ja
hlt
xor
pop
sar
imul
das
mov
adc
dec
(bad)
mov
nop
sub
mov
in
scas
cmp
(bad)
out
jg
jns
je
das
call
push
jo
loop
sub
xchg
cmp
imul
(bad)
imul
shr
xchg
retf
mov
jo
add
pop
pop
mov
sti
imul
iret
jle
icebp
mov
lahf
inc
add
jmp
data16
(bad)
mov
ins
sub
dec
dec
dec
dec
nop
jmp
mov
shl
mov
(bad)
push
push
push
pop
or
mov
or
push
xor
or
out
ja
push
cwde
adc
cld
pop
push
xchg
out
sti
outs
sti
pop
jmp
imul
ret
mov
inc
pusha
mov
push
push
mov
je
cmp
add
(bad)
and
add
aaa
push
push
pop
imul
or
or
jne
std
push
push
fsubr
fdivr
xor
adc
mov
out
sbb
adc
xchg
mov
mov
ret
loope
sub
mov
arpl
ret
adc
shl
mov
mov
ret
nop
mov
std
xor
sub
mov
or
idiv
ins
xlat
(bad)
push
(bad)
ja
inc
nop
push
mov
mov
mov
cmp
std
dec
xor
adc
add
or
jmp
mov
int3
mov
adc
xor
mov
ss
cmp
imul
aas
inc
add
add
mov
outs
push
xor
clc
push
mov
gs
shr
mov
mov
xor
sbb
pop
cmp
js
jge
push
mov
cmp
adc
mov
mov
mov
call
and
fistp
pop
pop
ret
xchg
(bad)
aad
adc
xor
xor
inc
ja
es
pop
pop
sbb
push
idiv
clc
sbb
(bad)
mov
add
outs
add
mov
or
pop
pop
mov
adc
fstp
fsub
add
adc
mov
clc
and
cmp
jo
lock
dec
add
lods
dec
cmp
sti
lds
cmp
add
add
ins
not
call
adc
in
adc
fstp
cld
rol
retf
adc
aam
das
call
pop
(bad)
mov
pop
ret
sbb
pop
mov
mov
scas
inc
js
gs
imul
jnp
das
add
xor
inc
add
push
dec
add
mov
pop
push
call
ins
cmp
push
in
(bad)
cmp
jae
push
je
imul
add
jbe
scas
mov
push
aas
add
enter
fimul
push
pop
lahf
jne
ins
jae
sub
ins
ins
sbb
inc
push
add
mov
pop
pop
fcom
inc
(bad)
xor
mov
fimul
mov
push
(bad)
lahf
test
jl
and
sub
mov
ret
mov
rol
fcomi
pop
out
push
mov
ror
add
cmp
xor
add
xchg
adc
add
jg
out
aam
inc
dec
dec
aaa
push
dec
bound
arpl
inc
inc
aaa
xchg
nop
jmp
xchg
mov
cmp
fdivr
cdq
in
push
ins
push
adc
stos
ja
movs
fadd
(bad)
xor
mov
jmp
mov
mov
es
push
jbe
cmps
fistp
add
call
jne
and
ja
(bad)
int3
jl
fmul
jle
inc
sub
mov
sbb
hlt
lea
mov
sbb
enter
xchg
(bad)
sbb
add
adc
adc
mov
adc
aam
adc
movs
mov
hlt
push
and
js
xor
dec
add
push
and
clc
or
daa
fs
(bad)
sub
call
test
pop
std
cmp
mov
cwde
out
ret
add
push
lea
dec
test
out
int
adc
movs
pop
and
push
mov
lea
and
push
push
push
add
sub
jbe
mov
inc
mov
aam
sbb
mov
mov
gs
push
jl
push
add
cmp
or
cmp
and
ret
in
push
mov
xor
sbb
push
movs
in
push
adc
add
xor
add
push
rol
push
xor
or
ret
jae
(bad)
stc
ret
or
jecxz
ret
lds
dec
inc
adc
test
or
cli
shl
jnp
jne
jl
mov
sub
mov
sbb
push
mov
pop
push
movs
pop
mov
adc
xchg
adc
xor
add
adc
inc
xchg
pop
sbb
mov
pushf
push
mov
inc
call
push
pushf
push
push
scas
add
add
jge
xchg
nop
sbb
add
lock
xor
and
mov
loopne
pop
pop
mov
mov
and
add
outs
mov
(bad)
(bad)
or
jns
mov
sbb
mov
mov
das
mov
test
sbb
jecxz
jmp
push
sub
xchg
inc
sub
dec
nop
push
push
xchg
push
mov
sub
jmp
adc
mov
aas
sub
out
push
inc
mov
loope
adc
adc
mov
aad
add
aam
adc
add
clc
pop
lock
sbb
jl
dec
add
in
sti
mov
es
xor
fmul
outs
mov
scas
mov
add
jmp
(bad)
or
mov
cmp
inc
mov
and
mov
pop
call
cmp
mov
cmp
push
or
mov
push
cmp
stos
and
cld
pop
lea
add
notrack
loope
or
es
and
jnp
fld
adc
add
mov
mov
out
fisttp
push
or
jb
mov
ret
inc
cmp
xchg
jl
mov
ret
fild
sub
mov
cmp
je
lods
add
stos
ins
in
mov
ja
ss
jne
les
mov
and
cmp
mov
push
in
add
sub
je
and
adc
and
scas
rcl
fdiv
add
and
ss
xchg
add
int
loop
sbb
pushf
out
mov
sti
xor
(bad)
clc
lea
js
dec
push
add
add
xchg
xchg
jno
add
shl
loope
or
in
push
loopne
mov
lea
loop
pop
or
jo
xor
pop
mov
mov
fild
push
or
and
push
or
xlat
call
scas
mov
mov
cld
pop
pushf
dec
pushf
pop
xchg
mul
push
push
aaa
or
cmp
xchg
add
lahf
iret
sbb
push
inc
dec
fild
iret
ins
sub
shr
fisttp
add
inc
in
push
mov
xor
add
or
jl
out
ss
push
and
pop
das
(bad)
lea
or
test
or
push
movs
adc
adc
into
mov
sbb
ret
mov
aaa
push
add
or
jl
lods
sbb
dec
sbb
or
repnz
(bad)
(bad)
pop
pop
fwait
xor
xchg
or
fnsave
xor
mov
loopne
fs
lds
loopne
push
shl
xchg
inc
sub
sub
lea
xor
xor
push
push
mov
hlt
push
add
in
xor
ret
out
loopne
mov
lods
fstp
pop
pusha
pusha
stc
pop
inc
ds
inc
push
xor
movs
or
or
dec
adc
out
leave
pop
scas
push
inc
xor
add
dec
xor
xor
sbb
test
sbb
xchg
nop
and
(bad)
idiv
call
and
inc
xor
test
sub
shl
(bad)
outs
mov
jmp
or
mov
stc
jl
adc
and
out
sub
inc
cs
repnz
mov
pusha
jnp
js
push
mov
out
in
dec
jl
mov
push
inc
dec
sbb
shr
add
test
or
and
(bad)
mov
push
lds
mov
rcl
inc
inc
ins
cdq
adc
ret
mov
inc
push
js
imul
inc
cs
bnd
pop
pop
pop
lock
lds
mov
push
movs
push
xchg
out
mov
and
je
jb
inc
popa
lea
das
push
sub
mov
jb
push
push
jg
cli
inc
dec
ror
cmp
xchg
push
cmp
daa
mov
add
xchg
mov
add
shl
js
mov
dec
push
inc
mov
or
xchg
aas
stc
mov
jno
or
repz
rcr
inc
push
push
adc
jne
imul
xor
aas
out
add
pop
pop
rol
fmul
mov
cmc
xlat
pop
adc
imul
xchg
jo
sbb
cmp
or
imul
scas
inc
mov
adc
add
or
dec
(bad)
sbb
mov
leave
and
pop
mov
mov
sub
lahf
movhps
jecxz
sub
dec
dec
or
movs
add
leave
dec
add
xchg
lods
add
add
push
movs
test
lea
fucomi
jbe
cmp
xor
in
mov
jmp
sbb
dec
add
mov
or
fld
and
lea
mov
push
fsubr
and
shr
mov
in
popf
test
sbb
cmp
std
cmp
cs
mov
je
test
iret
das
addr16
push
pop
dec
push
push
mov
pop
mov
dec
pop
int
jmp
and
lahf
or
inc
hlt
(bad)
fsubr
test
jmp
test
nop
mov
pop
test
or
stc
add
js
push
jae
dec
mov
inc
call
add
push
inc
add
outs
jb
xor
cs
mov
inc
ror
iret
push
dec
gs
in
in
add
popa
ins
inc
pop
xor
inc
and
aas
jns
push
dec
push
inc
inc
dec
ins
popa
addr16
shl
not
fdivr
cmp
push
call
dec
add
ret
and
jmp
and
adc
sbb
test
xchg
or
mov
inc
push
lock
pop
clc
test
push
fdivr
mov
adc
sub
dec
push
rol
pusha
dec
xchg
imul
push
jmp
stos
mov
mov
mov
cmps
add
mov
sub
outs
mov
ja
cmp
fsubr
cmp
fadd
cmp
lock
shl
aam
push
jno
fadd
mov
scas
push
jle
fild
ins
adc
cmp
rcl
inc
sti
dec
call
shr
addr16
pop
pop
adc
push
fisub
push
shr
ror
push
cmp
jae
inc
test
fsub
dec
mov
xor
int3
mov
hlt
jge
dec
adc
and
loopne
loope
loopne
test
nop
push
dec
pop
adc
or
cs
push
aam
push
push
sub
lds
and
mov
inc
pop
sbb
jmp
cmps
adc
sbb
or
add
sub
or
push
mov
push
and
dec
pop
mov
or
mov
xor
mov
loope
test
cmps
cmp
mov
push
mov
jne
test
je
mov
cmp
jne
add
add
and
loope
mov
pop
or
ror
push
or
cmp
jne
push
mov
push
mov
test
and
dec
mov
paddsw
cmp
push
test
push
inc
fldenv
and
jbe
xchg
dec
mov
push
add
push
sbb
lods
xor
hlt
mov
mov
fmul
add
pusha
sti
test
adc
fmul
in
out
pop
out
lea
add
or
popa
fcomp
or
hlt
cmp
sbb
xor
dec
mov
sub
or
pusha
xor
xchg
push
nop
dec
lock
call
inc
xchg
mov
mov
dec
inc
jl
mov
jmp
iret
in
push
mov
shr
add
test
test
jmp
xor
lock
stos
lock
std
fdivr
ins
push
cmp
je
imul
push
lods
imul
daa
push
adc
pop
cmp
jge
pop
lahf
jns
xor
pop
cld
cmp
aaa
xchg
fcomi
in
and
adc
and
mov
and
add
push
sar
jle
mov
mov
push
mov
inc
mov
inc
and
xchg
xor
and
into
outs
cmp
pop
jnp
aad
sub
inc
mov
mov
js
daa
xor
loop
cmp
fst
fisubr
mov
add
inc
sbb
retf
add
cwde
dec
icebp
test
lods
inc
rol
add
push
in
adc
rcl
push
(bad)
int3
pushw
test
mov
(bad)
jl
mov
push
or
mov
sub
es
push
test
fucomi
sub
inc
mov
add
bound
ret
push
inc
loopne
clc
ror
or
mov
jne
jl
sub
push
or
sbb
lock
push
push
adc
mov
push
mov
fdiv
push
pop
pop
jns
add
iret
mov
clc
xchg
push
int
jne
mov
movs
sub
and
dec
shl
lock
nop
mov
pop
adc
mov
push
je
dec
loopne
push
jg
shr
loopne
push
push
or
mov
dec
jle
cwde
add
inc
adc
or
cwde
sbb
push
pop
loopne
mov
addr16
sub
adc
sub
loopne
mov
or
mov
and
shr
rcl
movs
popa
sbb
shr
ins
mov
dec
ror
mov
mov
ror
mov
sbb
fwait
or
jg
xchg
shl
jo
mov
xor
cli
retf
push
and
add
fcom
or
mov
lea
push
lea
add
and
xchg
jle
out
ins
and
xchg
jle
jnp
je
je
add
cmp
adc
outs
pop
or
or
pop
leave
je
rcl
adc
adc
imul
add
adc
pop
push
dec
add
(bad)
call
fst
push
into
push
push
popa
jb
popa
outs
je
cmp
popa
addr16
inc
push
dec
inc
dec
push
xchg
jo
push
ds
pop
push
and
push
xchg
lock
add
pop
daa
(bad)
push
cmove
jo
imul
arpl
dec
inc
imul
imul
mov
xor
dec
push
mov
lock
iret
cld
push
push
imul
push
and
add
jns
xchg
xchg
mov
rol
stos
lahf
jo
scas
dec
mov
ror
pop
add
jmp
inc
inc
cmp
test
or
mov
cmp
push
shl
arpl
imul
add
jl
add
and
ret
stc
jl
sbb
jl
inc
push
cmps
push
stos
ins
add
add
sahf
add
or
mov
or
add
repnz
adc
sub
or
push
push
push
dec
push
inc
dec
setne
add
dec
test
add
popa
dec
or
or
push
adc
shr
jge
xor
das
or
mov
mov
out
adc
or
ret
mov
jne
adc
push
push
pusha
adc
cmp
push
mov
js
push
cmp
mov
push
cld
pop
cmc
pop
jnp
lock
push
sub
add
int3
dec
clc
push
or
push
or
inc
cmp
add
mov
jmp
loopne
jl
nop
mov
mov
sti
cmc
cmps
push
movs
out
(bad)
mov
jo
stos
aam
or
jne
xchg
test
call
arpl
xlat
xchg
adc
add
outs
dec
adc
xor
xchg
xor
out
imul
inc
pop
dec
cld
and
daa
lock
fld
mov
mov
arpl
jne
lea
outs
clc
popf
jns
push
push
push
call
rol
xchg
popf
rol
ret
push
jbe
cld
pop
mov
inc
xor
inc
mov
and
movs
add
add
(bad)
dec
lock
pop
leave
aas
dec
xchg
jne
mov
adc
shl
imul
outs
das
pop
fcomp
fsub
mov
add
push
int
lea
dec
mov
pop
test
lods
xchg
adc
push
inc
clc
lock
inc
push
mov
mov
in
dec
xor
adc
mov
lods
sbb
cmp
jae
test
xchg
push
pop
push
pop
loope
xor
jle
jmp
popa
mov
cmp
or
outs
jl
das
sub
pop
test
ficomp
data16
into
pop
pop
add
in
or
inc
in
(bad)
mov
js
in
jae
inc
xchg
push
loopne
mov
xor
in
cmp
imul
stos
mov
add
in
inc
or
fadd
fcomp
fcomp
test
cld
xchg
xchg
xchg
sbb
add
push
and
add
iret
add
aam
stos
ror
in
rcl
(bad)
in
fs
retf
xor
xchg
das
int3
mov
enter
or
int3
or
sar
popa
(bad)
cli
les
in
sbb
int
ror
inc
rol
pop
cmps
add
iret
add
in
mov
(bad)
je
cmc
icebp
mov
mov
jge
push
push
push
add
loope
dec
cmp
or
jecxz
mov
clc
adc
pop
add
pop
mov
movs
test
ja
arpl
or
movs
fwait
aas
pusha
mov
xor
adc
push
push
out
(bad)
imul
push
ss
leave
jnp
and
mov
mov
cmp
push
shl
jle
mov
cmps
or
(bad)
in
jle
and
sti
out
xchg
add
xor
lods
mov
lds
sub
sub
mov
jl
xor
sbb
(bad)
fldcw
mov
mov
or
sbb
mov
test
push
test
test
ds
hlt
jae
xchg
xchg
pop
mov
movs
movs
cmp
jmp
lds
lea
stc
into
mov
loop
fst
and
mov
ds
(bad)
daa
add
mov
in
pop
pop
rcr
leave
jno
ja
rcl
push
or
cmps
push
fwait
(bad)
mov
and
inc
mov
dec
jmp
inc
mov
and
lock
dec
sub
fadd
adc
aam
push
mov
pop
mov
pop
aad
imul
dec
mov
add
mov
cmp
pop
cmp
adc
rcr
cmp
jmp
adc
mov
inc
cmp
inc
xor
repnz
nop
retf
xchg
push
add
sbb
rol
pop
adc
sub
gs
adc
lock
call
sbb
jecxz
push
les
jne
or
call
sbb
adc
xor
fisttp
fisttp
add
cmp
xchg
mov
or
add
xchg
add
push
push
enter
aaa
or
pop
ins
sbb
inc
rol
js
movs
out
pusha
xchg
mov
push
xchg
scas
pop
inc
cs
or
sbb
je
mov
mov
pop
xchg
sbb
test
in
add
ja
jle
xor
aad
or
shr
cmp
sbb
mov
and
mul
pusha
(bad)
jg
enter
dec
gs
jle
(bad)
pop
fwait
xchg
or
rcr
cwde
jg
sbb
in
adc
add
fnstcw
leave
xlat
mov
mov
add
jge
jle
add
and
push
jb
rcr
(bad)
mov
(bad)
mov
mov
pop
rol
pop
mov
call
adc
push
mov
pop
mov
cmp
jl
and
int
js
daa
sub
xor
imul
mov
sbb
mov
mov
push
xor
xlat
sub
inc
sbb
adc
mov
mov
dec
adc
ds
sar
iret
sti
pop
xchg
cmp
dec
or
pop
push
enter
add
push
mov
dec
xchg
adc
add
call
sub
or
lods
ror
xchg
nop
mov
shr
push
mov
add
mov
out
pop
mov
xor
mov
shl
lock
push
mov
or
xchg
adc
into
lods
dec
repnz
clc
mov
adc
or
cmps
sbb
adc
or
arpl
mov
out
(bad)
mov
push
or
add
fs
inc
sbb
mov
xor
retf
add
rcr
fnstcw
or
inc
pop
pop
test
test
je
shl
clc
mov
and
ret
add
push
test
jl
loopne
cld
loopne
enter
jnp
rcr
sub
cld
sbb
push
pop
ficom
add
mov
inc
pusha
jb
add
cli
cmp
ins
mov
in
inc
jmp
or
sahf
imul
sub
enter
push
push
das
scas
push
stc
jns
lock
adc
les
push
call
in
out
add
or
repnz
push
jmp
or
push
adc
jl
int3
or
aam
mov
mov
ss
jp
dec
lock
into
fdivr
jg
xor
dec
mov
fcom
mov
jnp
loop
fisub
push
cwde
push
test
clc
add
jge
jo
cli
movs
mov
clc
pop
add
dec
sbb
push
call
jo
xchg
clc
std
inc
shl
inc
mov
lea
cmps
mov
pop
jbe
pop
cmp
jne
push
imul
push
push
inc
out
push
sub
push
add
xor
mov
(bad)
push
and
push
push
or
inc
fstp
ja
mov
push
call
dec
fisubr
adc
xchg
adc
pop
or
in
lods
lods
es
push
xchg
sbb
sub
xchg
add
int3
xor
inc
or
test
bound
xor
stos
xor
or
or
sbb
daa
add
pop
dec
daa
or
test
rcr
outs
ins
outs
bound
dec
ins
cmp
and
das
add
daa
aaa
cmps
pusha
cli
lds
jl
fmul
mov
push
mov
ja
outs
mov
or
push
jl
mov
clc
add
test
add
inc
sbb
out
neg
adc
(bad)
push
sbb
push
sbb
pop
(bad)
push
push
pop
pop
add
nop
stos
xlat
ins
aas
fadd
pop
sub
xor
add
add
jecxz
add
loope
inc
push
jne
inc
push
jg
cs
and
push
in
or
cmp
adc
mov
pop
mov
out
nop
nop
movs
imul
movs
lods
sar
jecxz
mov
sbb
add
inc
or
inc
jp
add
or
(bad)
mov
pop
add
mov
lds
sbb
xchg
adc
mov
retf
xchg
pushf
test
loopne
les
xor
shl
jge
sbb
jns
dec
xchg
pop
push
out
das
or
inc
icebp
loop
jb
cwde
outs
lahf
jmp
cld
inc
mov
jmp
add
dec
or
mov
mov
jecxz
and
mov
add
fild
add
pop
hlt
adc
fild
pop
mov
jae
gs
mov
xor
xor
int3
rol
pop
sahf
mov
test
sbb
sar
imul
and
pushf
cmps
inc
mov
mov
js
(bad)
push
mov
push
in
jbe
or
push
add
call
fs
dec
bound
push
xchg
xor
add
pop
mov
pop
mov
push
mov
adc
sub
lock
inc
inc
push
adc
push
cmp
adc
pusha
cmp
mov
scas
sub
mov
retf
pop
add
adc
jle
ss
add
jp
mov
adc
push
push
fimul
scas
adc
jb
mov
sbb
leave
pop
fiadd
sbb
daa
push
mov
xor
daa
lock
test
loop
pop
cmps
or
xchg
aaa
pop
neg
fld
sbb
test
inc
mov
pop
ror
add
es
mov
gs
sbb
cmp
and
mov
cmp
dec
cwde
sbb
iret
les
adc
fcom
dec
inc
and
ret
iret
cmps
mov
daa
inc
add
jb
sbb
add
sub
stos
sbb
(bad)
pusha
les
mov
dec
scas
jbe
sub
add
and
sbb
pop
les
and
push
outs
add
shl
pop
xor
pop
aas
ds
loope
push
pop
les
loopne
inc
cli
add
clc
outs
imul
add
push
dec
and
xchg
push
(bad)
clc
adc
pusha
je
arpl
push
(bad)
adc
sbb
stos
push
cmps
and
push
sub
push
fcmove
push
scas
nop
xor
and
gs
pushf
shl
pop
mov
push
inc
jo
push
fidiv
push
jle
enter
inc
and
je
mov
jp
sbb
call
xor
dec
outs
dec
gs
jnp
or
mov
je
jge
pusha
dec
pusha
push
adc
add
ja
xchg
in
imul
imul
push
mov
mov
inc
mov
test
fcom
shl
or
and
pop
rol
daa
movs
xor
push
ret
test
stc
loopne
xchg
xchg
jmp
test
fdiv
add
dec
scas
sbb
clc
repz
push
push
push
shr
jbe
mov
jae
popa
ins
xor
push
cwde
jo
nop
and
or
les
ins
sbb
arpl
push
sub
or
cld
movs
adc
push
push
scas
sti
not
or
bound
ins
imul
in
inc
in
dec
or
imul
call
test
iret
or
int3
js
adc
loop
push
mov
push
dec
dec
adc
adc
jb
and
or
vmwrite
pop
adc
outs
outs
ja
loopne
int3
xor
imul
push
gs
jb
pop
or
mulps
and
sbb
cmp
cmp
add
or
jb
or
test
xchg
mov
and
mov
je
cmps
jb
jne
push
sub
in
xchg
sbb
inc
jp
shl
jae
popa
inc
push
addr16
sub
adc
dec
push
xlat
sub
ins
dec
fs
xchg
mov
outs
ins
outs
popa
fs
idiv
push
js
js
or
cmp
shr
bound
or
pop
jnp
(bad)
add
mov
dec
or
fldenv
jns
clc
jg
rol
jnp
nop
push
or
fiadd
fbstp
dec
popa
jbe
addr16
cwde
adc
push
sub
dec
cwde
push
jb
test
xor
dec
mov
adc
add
cdq
movs
pop
test
sbb
not
pop
smsw
ins
in
jne
jae
pop
pop
mov
mov
test
pop
push
jne
and
mov
mov
add
sar
inc
mov
push
outs
outs
(bad)
popa
jb
enter
idiv
enter
sbb
in
fld
rol
add
xlat
ret
vcvtss2si
inc
fmul
imul
mov
pop
jnp
loopne
push
mov
(bad)
out
rcr
jb
outs
fs
inc
call
cli
pop
add
push
push
add
push
or
jp
(bad)
pop
lock
lock
push
jno
pop
sbb
cmovl
je
xor
dec
clc
push
sbb
in
add
push
add
push
mov
adc
and
or
sbb
adc
fidivr
push
dec
adc
xor
sbb
inc
push
lods
stos
mov
sbb
push
sbb
jecxz
imul
sbb
xor
pop
push
sbb
cld
add
add
dec
arpl
neg
push
sub
cmp
or
or
push
push
hlt
lds
dec
xor
add
retf
pop
jnp
and
test
dec
cmp
inc
pop
lods
add
sbb
gs
pop
dec
outs
shr
xchg
cmps
mov
fs
ins
and
ins
fiadd
xchg
mov
neg
arpl
xchg
push
jo
push
push
scas
inc
and
push
push
mov
loopne
pop
and
jbe
arpl
mov
xor
cmps
and
nop
pop
push
je
ss
add
add
jbe
pop
outs
or
xchg
aam
adc
loopne
sub
mov
xlat
mov
lods
push
imul
bound
paddsw
fistp
inc
cmp
dec
jl
movs
ds
or
inc
ud2
jbe
mov
sub
inc
pop
rcl
clts
jge
inc
adc
enter
or
jp
sar
sbb
or
inc
bnd
loopne
add
pop
paddd
or
in
adc
shl
jb
cld
sub
push
push
popa
cmp
lock
sub
and
jo
idiv
add
jne
ja
cdq
inc
les
mov
sbb
and
mov
mov
adc
fadd
add
clc
jge
adc
outs
push
loopne
jge
push
jbe
add
dec
dec
jbe
mov
adc
jno
ja
repnz
inc
push
jnp
add
inc
cmp
cmp
inc
pop
icebp
add
pop
ss
js
cld
jge
adc
loopne
sbb
je
jnp
mov
jg
xchg
push
xchg
jg
xchg
sbb
or
pop
jmp
ss
loop
cmp
inc
inc
aaa
xchg
inc
mov
or
or
in
test
inc
cmp
xchg
or
add
or
xchg
fmul
rol
push
sar
dec
add
js
fmul
outs
cmps
daa
inc
call
call
xor
sub
ins
jp
jae
push
sub
and
cmp
ins
inc
mov
mov
pop
ins
leave
rcl
or
dec
sub
or
fs
sbb
scas
sub
and
cmp
jmp
or
es
jo
jo
mov
inc
js
js
les
adc
mov
pop
sub
add
mov
inc
jmp
pop
sub
loop
outs
cwde
inc
cwde
dec
sub
dec
pop
in
sbb
sub
or
(bad)
(bad)
inc
mov
mov
das
mov
mov
pop
jnp
pushf
inc
rcl
xor
imul
enter
jnp
daa
inc
sar
rol
mov
fadd
faddp
mov
bound
les
dec
mov
je
ss
lock
lock
fcomp
clc
inc
clc
dec
push
inc
pushf
mov
les
pop
cmp
mov
or
inc
dec
pop
in
pop
adc
push
cmp
mov
push
cmp
mov
rol
and
test
inc
sub
push
vmovss
adc
inc
xor
fcomp
loop
aas
inc
cmp
pop
in
pop
popf
mov
inc
push
mov
inc
dec
dec
dec
ja
mov
fs
cmp
push
ins
inc
inc
pop
add
pop
arpl
(bad)
(bad)
push
pusha
pop
inc
inc
inc
push
cmp
aas
clc
mov
clc
mov
add
mov
pusha
xor
xor
(bad)
iret
(bad)
shl
add
and
es
in
fstp
xlat
ds
push
out
aaa
dec
sbb
add
jp
push
cmc
lods
call
dec
pop
inc
fsubr
push
pop
pusha
push
cmc
out
cmovp
clc
jne
xor
add
inc
pop
push
xor
inc
cmp
sub
rol
push
dec
sbb
in
xchg
mov
and
mov
xchg
adc
in
mov
xchg
inc
mov
xor
and
sub
ins
mov
add
add
sbb
add
sbb
sbb
(bad)
retf
sbb
xor
push
(bad)
les
repnz
(bad)
and
icebp
add
push
xor
fldenv
add
push
or
cmp
xor
iret
lods
jo
jno
outs
push
dec
ins
gs
and
shl
pop
adc
push
mov
sbb
fnstsw
add
pop
and
ins
jg
adc
test
es
jge
loope
inc
jmp
add
push
and
stos
enter
sub
mov
or
scas
inc
sti
sub
and
lea
sub
scas
adc
sub
test
adc
and
and
cmc
xor
bswap
jno
sbb
lock
dec
mov
aaa
sti
xlat
pop
lds
cmp
add
mov
jg
jnp
or
popaw
ins
jae
add
jb
ret
dec
enter
push
cmp
in
add
sbb
push
mov
dec
dec
outs
outs
gs
adc
or
inc
outs
je
pop
mov
pop
or
push
cs
test
scas
int3
test
pop
push
mov
add
and
and
pusha
or
xor
or
lock
or
inc
jne
(bad)
lods
adc
arpl
jae
cwde
je
fwait
jo
fwait
xor
rol
push
push
add
and
add
pop
test
push
outs
out
arpl
jo
add
or
add
js
mov
add
cli
sbb
retf
cmp
loopne
add
jle
add
aaa
pop
or
int
ins
cmp
scas
add
dec
add
push
push
xchg
add
adc
ins
push
add
mov
dec
inc
inc
nop
push
xchg
push
dec
mov
adc
call
push
inc
xor
ins
or
pop
inc
dec
dec
dec
add
pop
inc
xor
mov
call
dec
mov
push
push
or
sub
fild
xchg
jb
pop
sub
inc
outs
and
shl
jo
mov
xlat
mul
ret
push
daa
or
shl
sub
test
push
push
fmul
test
retf
adc
into
or
mov
out
mov
test
cwde
mov
cld
pop
or
add
push
inc
dec
push
push
inc
mov
dec
or
push
sub
sbb
enter
and
pushf
sbb
jo
inc
sbb
and
sub
addps
iret
leave
rcl
mov
inc
jo
xor
cmp
test
dec
test
movs
rol
xchg
push
fsub
idiv
add
sti
adc
adc
das
daa
daa
add
lds
adc
pusha
cmp
lds
mov
mov
push
mov
push
pop
push
add
cmp
pop
inc
outs
outs
shl
mov
pop
push
arpl
out
movs
sbb
push
mov
mov
sbb
ins
sbb
movs
in
jno
arpl
je
push
adc
mov
inc
jbe
cmps
dec
dec
pusha
push
fs
or
add
xor
xchg
in
add
fs
iret
dec
mov
mov
add
mov
jo
cmp
xchg
mov
test
xor
arpl
arpl
mov
dec
jl
addr16
adc
str
push
xchg
add
lock
outs
adc
pop
or
inc
lahf
das
jecxz
mov
add
jecxz
mov
cmp
enter
out
ss
push
xor
fs
cs
or
aaa
bound
movs
jne
inc
xlat
popa
lea
add
stos
or
cmp
ds
push
sbb
and
(bad)
dec
mov
fs
jo
leave
push
nop
mov
xor
adc
cmp
dec
lea
jae
sbb
add
sub
inc
push
sub
push
xor
icebp
fmul
pushf
test
push
mov
mov
sti
jg
mov
push
test
mov
fsub
add
ret
movs
lea
mov
mov
repz
inc
psubsb
cmp
inc
mov
sbb
and
mov
inc
es
leave
adc
sbb
ds
rol
cs
ds
daa
ss
das
pop
sbb
xchg
add
sub
inc
nop
sbb
push
je
push
adc
sbb
pop
or
add
push
inc
push
inc
(bad)
cmp
or
push
add
inc
out
mov
push
push
add
push
push
xchg
adc
loopne
adc
ja
inc
add
add
dec
jmp
or
and
add
add
mov
inc
mov
ins
(bad)
cmp
xchg
mov
arpl
pop
je
bound
cmp
add
cwde
cmps
mov
outs
jecxz
add
adc
and
inc
out
in
arpl
ins
mul
sbb
cmps
inc
xchg
mov
sahf
out
jmp
xchg
loopne
les
and
push
sahf
xlat
jecxz
jno
push
sub
inc
xor
clc
add
and
in
adc
div
jno
or
add
inc
loopne
aas
mov
daa
add
(bad)
fisttp
lods
je
pusha
and
pop
add
push
add
div
pop
mov
push
cmp
jmp
xor
cmp
mov
jno
mov
lds
imul
loop
pop
xchg
(bad)
and
push
add
pop
mov
fistp
sub
jo
mov
lahf
fucomip
test
add
or
mov
test
out
xchg
jno
movs
sub
push
and
jg
out
push
xchg
adc
xchg
pop
ins
mov
jg
pop
push
sub
xchg
xchg
inc
jg
adc
ror
jle
addr16
rol
fwait
sbb
sbb
pop
aaa
in
xchg
pusha
les
mov
sbb
dec
sbb
sub
outs
imul
mov
add
fs
shr
adc
cmp
sub
mov
lock
popa
mov
int3
rcl
into
nop
lahf
(bad)
stos
inc
call
fmul
cmp
iret
sub
jmp
dec
imul
or
add
xor
push
fbld
call
enter
push
inc
out
xchg
push
rol
pop
xchg
outs
jl
jl
iret
mov
js
adc
push
add
aaa
mov
xlat
fdiv
fst
les
inc
add
mov
ja
mov
nop
(bad)
or
ins
arpl
ins
xor
inc
mov
push
shr
lahf
xor
ins
mov
sbb
jnp
add
es
ds
rol
nop
inc
mov
push
add
jns
inc
and
xchg
jl
adc
push
leave
in
test
fmul
pop
cmp
call
pop
ins
or
xor
bsf
add
add
inc
rol
mov
pop
ins
pop
bound
outs
pop
add
js
jmp
aaa
mov
push
sub
add
ja
pop
adc
test
adc
add
add
call
add
test
call
neg
das
cwde
xlat
cmp
dec
inc
(bad)
push
push
test
cmp
add
(bad)
nop
sti
lahf
inc
or
leave
or
cdq
xchg
inc
pop
sub
jne
inc
xor
mov
outs
inc
icebp
ss
sahf
sbb
popa
arpl
add
cdq
mov
(bad)
push
iret
jne
jmp
mov
sub
dec
(bad)
bound
inc
sub
inc
lahf
retf
adc
retf
sbb
ds
je
jmp
add
pushf
push
add
lea
iret
dec
bound
mov
test
aad
sub
inc
inc
xchg
push
sahf
pop
dec
test
cmp
out
push
je
in
aam
sbb
pushf
stos
les
mov
bound
and
pop
shl
add
inc
push
inc
dec
push
dec
dec
ds
lahf
sub
outs
imul
jbe
sub
add
mov
ror
les
ret
xor
sbb
in
mov
mov
add
xchg
aam
call
popf
rcr
outs
je
cmp
or
pusha
add
pop
pop
dec
xchg
inc
das
ret
and
sbb
fild
push
add
and
loop
xchg
sahf
loopne
inc
sub
pop
les
bound
or
push
xchg
dec
and
mov
cmps
sub
fs
sbb
or
cmps
add
sbb
xlat
aaa
mov
push
add
and
dec
jno
dec
xchg
mov
ret
add
push
push
or
nop
out
cmps
mov
fcom
add
mov
add
aam
mov
test
add
mov
out
sti
test
pop
mov
retf
add
jmp
pop
add
dec
sar
sar
out
inc
push
xchg
adc
and
imul
es
mov
cmp
ror
pop
jne
push
inc
add
mov
push
mov
jmp
dec
dec
data16
xor
lea
xor
sbb
add
es
arpl
int3
or
sub
jmp
inc
inc
jae
cmp
jb
and
(bad)
mov
xor
push
in
jecxz
aam
rcr
pushf
test
jl
in
push
cmp
fist
xchg
or
jne
cdq
aam
and
imul
inc
mov
and
es
sub
mov
sub
or
push
cmp
dec
inc
mov
lea
mov
pop
fadd
shl
inc
cmp
xor
xchg
pop
clc
in
enter
fild
cmp
pop
add
mov
shl
or
sub
pop
push
cmp
scas
mov
pop
or
(bad)
mov
lods
mov
pop
mov
mov
ss
scas
or
fist
pop
test
push
xor
js
pop
push
push
les
push
sub
mov
adc
pusha
inc
daa
cmp
popf
aam
pop
pop
xor
add
or
les
mov
adc
mov
mov
add
pop
xor
dec
inc
and
or
(bad)
xor
or
test
xor
push
or
adc
push
xor
inc
adc
add
mov
adc
adc
sub
js
test
enter
xor
add
popf
pushf
pop
mov
pop
xor
test
mov
mov
test
sub
push
push
inc
mov
add
push
aas
or
add
pop
and
adc
iret
push
mov
and
inc
cwde
pop
movs
pop
scas
jecxz
xchg
inc
or
test
and
inc
mov
les
pop
sbb
pop
inc
mov
nop
cdq
inc
sub
mov
rcl
jmp
shl
faddp
mov
pop
add
push
push
ss
enter
xchg
aas
dec
or
fnstenv
dec
mov
add
jge
pop
inc
sbb
push
push
cwde
and
gs
adc
test
add
add
lock
arpl
movs
test
xchg
adc
sbb
xor
pop
clc
test
sbb
std
pop
mov
xchg
adc
add
pushf
jne
adc
or
rol
mov
mov
sub
add
popa
cli
hlt
sub
xchg
adc
movs
lock
push
add
dec
mov
mov
(bad)
sar
mov
rol
or
or
pop
and
inc
pop
ss
mov
cmp
lea
dec
dec
mov
mov
stos
mov
mov
dec
movs
lods
xchg
xchg
ja
enter
dec
aam
or
je
out
cmp
dec
or
ret
retf
inc
clc
and
rcl
mov
fmul
xor
pop
cwde
mov
retf
pop
inc
js
xor
sub
jge
xlat
lock
pushf
pop
cmc
push
lea
cmp
(bad)
ret
jl
fld
pusha
inc
cmp
xchg
(bad)
jbe
add
xor
adc
leave
cmc
jmp
fnsave
push
inc
les
pop
inc
pusha
sbb
add
mov
sbb
push
pusha
dec
cmps
dec
inc
daa
mov
rol
inc
mov
nop
jbe
sub
popa
ins
inc
fs
or
je
int3
cmps
mov
cmp
je
mov
mov
adc
inc
in
sar
outs
or
shl
push
adc
push
in
adc
add
repz
pop
adc
xor
xor
push
add
jne
test
xchg
mov
scas
in
ret
adc
lahf
loopne
pop
adc
loopne
dec
sbb
xor
enter
xor
add
push
xchg
xor
les
add
cmp
or
add
xor
push
inc
jo
(bad)
loop
cmps
loopne
xor
mov
stos
and
dec
inc
pop
icebp
sbb
sub
inc
adc
add
sbb
xchg
cmp
leave
push
pop
xchg
cmps
xor
fs
push
jns
leave
stos
pusha
data16
inc
scas
sub
jns
leave
sub
pop
es
nop
or
ja
(bad)
dec
adc
data16
push
adc
jg
adc
popa
sbb
inc
sbb
push
and
ror
ss
xor
add
or
cmp
or
daa
sbb
in
add
and
icebp
adc
cmp
mov
clc
inc
ror
js
adc
shr
jo
xor
jecxz
xor
test
lock
adc
addr16
or
cmp
in
jg
xchg
mov
add
jge
add
bound
add
dec
and
dec
mov
iret
or
or
clc
lea
pusha
jge
adc
mov
inc
fs
or
mov
(bad)
sub
add
and
xor
pop
fcomp
lock
mov
adc
or
ficomp
into
mov
fsubr
mov
ret
iret
hlt
popf
retf
clc
dec
xor
dec
rol
lea
outs
div
div
jne
xor
cs
or
cmp
adc
and
lock
mov
test
mov
jo
ss
daa
mov
dec
test
out
es
iret
pusha
jmp
div
shr
aaa
push
push
mov
stos
adc
dec
add
push
jnp
xor
scas
test
loop
fidiv
lods
pushf
cdq
mov
adc
jo
jmp
add
cmps
call
ins
add
adc
or
ins
add
pop
fistp
mov
add
sbb
les
ficom
cs
in
push
xor
mov
cmp
dec
call
icebp
dec
cmp
ins
cmps
jle
push
cmp
push
loopne
cmp
dec
sbb
sbb
dec
sbb
pop
or
pop
aad
pop
jnp
loopne
pop
in
cdq
pop
mov
xchg
data16
pop
bound
test
mov
sbb
mov
(bad)
cmp
add
fmul
inc
or
pop
add
mov
pop
fcomp
xchg
ins
pop
out
imul
test
dec
push
dec
movs
mov
jmp
test
mov
ror
cmp
sub
xchg
enter
sbb
enter
rol
call
add
pop
lea
pop
jecxz
dec
dec
cs
mov
mov
cdq
pop
xor
(bad)
mov
push
mov
mov
dec
mov
sbb
lods
test
xchg
adc
test
test
outs
sub
daa
mov
xchg
push
adc
cwde
gs
iret
pusha
dec
jns
cwde
push
mov
pop
nop
and
nop
and
mov
cwde
jb
pop
jb
mov
pop
test
mov
pop
jb
mov
jb
pop
jb
rol
jno
pop
enter
in
sub
jecxz
out
test
pop
or
mov
out
lea
adc
lea
inc
dec
push
xor
test
out
pop
fimul
inc
mov
xlat
push
push
mov
and
into
test
leave
bound
fwait
repz
xchg
xor
stos
jge
stc
mov
cmp
xchg
fld
mov
add
jl
mov
sbb
imul
and
ret
fadd
lea
loopne
(bad)
sar
xor
into
pop
es
iret
jmp
enter
push
fs
hlt
xor
pop
inc
pop
cmp
mov
pop
test
jb
push
push
dec
dec
fld
dec
sub
aam
inc
jg
dec
(bad)
(bad)
jmp
test
leave
xchg
dec
leave
push
pop
pop
dec
leave
xchg
dec
pusha
fs
ins
jo
xchg
dec
leave
je
jl
cs
xchg
pop
test
cs
mov
ss
add
sub
fsubr
call
fs
jle
adc
cmp
mov
test
xchg
(bad)
dec
(bad)
shl
push
xchg
or
cmp
into
sbb
jno
sbb
inc
push
cmp
cs
inc
cmp
xor
xor
xor
xor
xor
in
test
mov
and
fwait
sub
sub
sub
xor
push
xor
push
xor
dec
imul
(bad)
mov
sbb
pop
add
test
xchg
add
push
fadd
sti
out
(bad)
add
push
rol
pop
ret
pop
lahf
je
mov
(bad)
in
xor
xor
push
push
xchg
mov
aad
rcl
jbe
push
push
inc
std
mov
cmp
in
xor
pop
push
imul
push
xchg
push
outs
xchg
or
jmp
add
xchg
sub
cwde
jge
ja
in
and
cwde
sbb
or
jl
and
movs
in
lock
mov
xchg
xor
stc
or
sbb
add
mov
cwde
cmp
or
or
sbb
daa
xchg
push
loope
out
popa
mov
sub
mov
add
or
inc
mov
sti
adc
and
lea
out
in
mov
push
ins
sub
test
push
aad
sub
in
xchg
lds
sub
cmps
out
or
or
or
ucomiss
popf
or
lods
cmp
ss
add
(bad)
cld
(bad)
ror
jns
aad
(bad)
cld
(bad)
movs
test
retf
add
xchg
sub
call
cmp
push
jmp
or
pop
jecxz
jmp
and
or
test
dec
les
(bad)
and
nop
xchg
(bad)
jmp
rol
rcl
inc
lock
hlt
(bad)
rcr
cmp
lock
lock
call
cmps
loop
cmp
call
or
mov
cdq
sub
daa
fcomp
jmp
push
fwait
xchg
and
fsub
and
push
xor
lock
mov
push
clc
jmp
retf
movs
(bad)
test
xchg
inc
push
cdq
test
mov
and
enter
sub
je
pusha
and
aam
stos
jmp
lods
aam
mov
aam
inc
sub
jb
in
xchg
(bad)
int3
scas
jp
addr16
(bad)
cmps
enter
rcl
shl
ss
mov
mov
jb
and
xchg
mov
jb
movs
mov
sbb
dec
leave
xchg
mov
leave
xchg
dec
leave
mov
xchg
dec
(bad)
enter
leave
xchg
rcl
push
push
xchg
pop
push
or
cmp
mov
mov
dec
mov
mov
js
mov
or
jp
test
mov
add
pop
add
mov
int3
cli
movs
or
fadd
sbb
mov
dec
push
enter
add
lds
sbb
inc
cs
or
sbb
lahf
sbb
cmc
fld
mov
mov
xchg
nop
lea
push
push
cmp
in
adc
add
jbe
(bad)
or
pop
mov
push
pop
pop
dec
ss
leave
add
icebp
inc
(bad)
div
inc
cmps
inc
dec
pop
add
xchg
pusha
mov
repnz
jne
jge
mov
jg
jne
popf
je
push
(bad)
jbe
pop
and
adc
sub
out
clc
xchg
addr16
cmp
cmp
inc
sub
add
pop
iret
mov
xlat
xor
xor
ja
cmp
cmp
adc
rol
add
loope
push
pop
pop
and
dec
xor
inc
cmp
pop
enter
cmp
pop
adc
dec
adc
dec
push
xchg
dec
adc
cmp
inc
and
cmp
xor
pusha
pop
and
xor
test
fbstp
add
fistp
mov
jo
or
(bad)
fist
jno
push
xor
push
out
or
add
add
cmp
xchg
inc
rcr
xor
cmp
pop
xchg
add
mov
in
and
xchg
imul
pop
pop
mov
int3
mov
push
xchg
shr
lods
push
sub
not
fld
mov
adc
sahf
retf
sbb
rcr
push
and
fild
fdiv
sub
int3
(bad)
push
cmp
mov
or
cmp
out
sbb
fidiv
mov
stos
sahf
adc
sti
outs
or
mov
dec
and
fild
xor
mov
inc
add
fcomp
xchg
mov
mov
rol
jg
xchg
bound
in
(bad)
fwait
push
rol
sar
int
jge
popa
or
xchg
or
and
lods
add
sbb
adc
xchg
mov
adc
dec
inc
bound
dec
(bad)
or
cmp
adc
jae
mov
pusha
push
mov
enter
fdiv
inc
test
retf
nop
fiadd
movs
icebp
inc
clc
sub
sahf
mov
sbb
adc
lea
pop
mov
push
hlt
xchg
hlt
mov
xchg
xor
mov
and
and
into
sub
jb
outs
or
add
dec
or
in
mov
pop
pfmax
inc
sub
loope
pop
add
add
inc
xchg
cs
inc
or
push
sub
stos
and
in
ins
sub
xor
into
sub
mov
or
mov
(bad)
xchg
sbb
loopne
sub
mov
pop
pop
adc
adc
inc
cld
adc
ja
cmps
out
push
push
mov
or
inc
adc
adc
dec
shl
jmp
test
mov
and
ficomp
xchg
or
enter
icebp
jnp
xchg
mov
mov
or
inc
push
adc
jle
int3
mov
loopne
mov
pop
aaa
add
sbb
xor
lea
je
lea
or
mov
ss
pop
inc
jnp
add
rol
add
and
push
inc
rcpps
jae
stos
add
les
mov
sbb
ror
adc
inc
iret
mov
jnp
mov
mov
mov
inc
add
or
mov
adc
mov
test
rol
stos
push
(bad)
das
add
clc
pop
lea
sub
pop
add
or
add
add
mov
clc
mov
in
(bad)
or
adc
mov
sbb
xchg
mov
mov
xchg
push
daa
movs
mov
test
mov
jecxz
nop
mov
lods
push
push
mov
xor
cld
jno
mov
mov
js
mov
xlat
test
push
add
or
jo
jo
xor
and
mov
dec
sub
and
or
jmp
icebp
aas
clc
and
test
jne
lea
sar
(bad)
str
sub
cmp
cmp
sub
hlt
add
jmp
push
xchg
inc
(bad)
adc
mul
jbe
add
fucom
sub
push
shl
daa
pusha
or
xchg
pusha
pusha
pop
and
xlat
mov
push
push
push
and
push
pop
push
jne
jbe
adc
dec
jmp
pop
dec
dec
jns
test
in
jecxz
inc
inc
icebp
lea
inc
cmp
mov
cmp
test
nop
retf
lds
jns
mov
and
pop
push
inc
xchg
rol
sar
xchg
xchg
test
repz
ror
aam
mov
xor
xchg
xchg
in
fldcw
pop
hlt
inc
jb
xlat
(bad)
mov
xchg
sub
adc
ret
and
lea
jecxz
in
sbb
stc
pop
shl
xchg
sbb
sbb
pop
adc
adc
push
stos
mov
adc
pop
or
nop
retf
(bad)
or
inc
cmp
jmp
add
out
sub
in
(bad)
clc
(bad)
cld
(bad)
clc
retf
sbb
mov
pop
cs
add
mov
retf
leave
and
add
cdq
loopne
out
dec
push
mov
xor
xchg
xchg
fcom
rol
jmp
adc
loop
dec
and
and
icebp
push
leave
push
std
sbb
std
icebp
(bad)
dec
push
sbb
sbb
push
jae
scas
add
xchg
inc
and
(bad)
inc
inc
mov
sbb
not
add
aam
jne
cld
jb
aad
lahf
ja
jg
pop
inc
and
push
push
pushf
or
aad
arpl
inc
je
add
shl
push
push
push
xor
mov
jle
add
cmc
dec
and
push
adc
or
iret
ja
mov
fwait
shl
mov
arpl
pop
cs
(bad)
xor
pop
or
test
lods
aad
mov
mov
mov
rol
(bad)
fwait
(bad)
fwait
jae
mov
jbe
test
jbe
mov
stos
cmps
inc
mov
rol
cmp
fcomip
cdq
idiv
test
test
pop
(bad)
fidivr
ret
je
and
adc
scas
mov
sub
or
push
mov
and
sbb
call
imul
or
lea
mov
or
dec
jge
mov
mov
add
adc
movs
mov
ret
dec
in
fucomip
(bad)
sub
in
mov
ds
fcomp
or
movs
fcomp
push
aam
je
push
jge
leave
add
int3
dec
int3
pusha
and
repnz
loopne
bound
mov
pop
in
aas
lock
pop
test
in
clc
xlat
add
rcl
popf
mov
pop
(bad)
jecxz
lods
iret
push
push
adc
sti
cmp
sbb
push
inc
mov
xor
ficom
pop
pop
pop
xchg
jb
ins
adc
push
push
mov
adc
add
ja
inc
outs
sbb
(bad)
pop
hlt
mov
inc
movs
lea
adc
jl
dec
rol
daa
test
pop
mov
popf
rcl
mov
mov
test
add
push
lea
out
lds
lea
inc
dec
mov
jmp
sbb
xor
rol
mov
cmps
fs
outs
das
mov
sbb
adc
pusha
lds
das
sar
adc
sbb
mov
adc
rcl
mov
push
push
xchg
mov
sar
mov
imul
push
adc
push
push
movs
inc
jne
jne
imul
add
ror
test
rcr
mov
rcr
add
cli
stc
mov
sar
mov
clc
adc
pop
push
and
dec
gs
mov
jle
test
ret
fist
mov
je
push
push
dec
dec
mov
call
clc
clc
out
inc
add
shl
xor
push
cmp
push
aaa
sub
inc
mov
add
call
call
(bad)
mov
cmp
add
add
xor
push
or
in
lea
adc
add
lea
xor
pop
pusha
icebp
(bad)
jle
enter
inc
movzx
cmp
jne
jg
in
sar
add
push
push
push
mov
shl
scas
or
je
pop
jne
jg
hlt
xor
clc
xor
not
sub
mov
xchg
shr
inc
mov
and
rep
jmp
push
out
(bad)
hlt
inc
add
add
mov
lock
fsub
or
push
(bad)
pop
push
and
enter
mov
je
and
jmp
inc
inc
fs
dec
mov
retf
or
lods
dec
rol
xchg
test
pop
clc
push
push
sub
jne
shr
jb
mov
loopne
cs
push
jmp
mov
or
pop
test
scas
call
out
mov
ja
stos
jbe
mul
mov
sub
cmovae
not
sub
adc
inc
inc
ins
ds
mov
pop
pop
push
mov
fsub
inc
(bad)
cld
jl
pushf
and
ss
adc
add
adc
aaa
js
out
mov
lahf
adc
push
sbb
or
test
xor
mov
push
xor
push
push
pop
je
push
adc
adc
jg
push
add
ret
mov
push
xor
cmp
(bad)
sti
nop
or
cmp
les
mov
mov
sbb
xchg
inc
lds
mov
adc
and
mov
sub
mov
jne
(bad)
int
dec
sbb
mov
add
ja
es
nop
sub
sti
and
xchg
ss
nop
mov
push
mov
pop
mov
sub
les
xor
adc
xchg
jbe
add
or
std
cs
popa
les
pop
pop
pop
hlt
add
cwde
add
jp
jmp
lea
js
adc
jmp
lea
call
add
cld
(bad)
pop
div
mov
inc
inc
jmp
jmp
push
cdq
(bad)
pop
sub
cmp
sub
jg
mov
inc
mov
inc
sub
dec
or
dec
sbb
inc
pop
inc
and
dec
stos
and
dec
ret
clc
mov
outs
mov
clc
int
nop
add
je
call
das
adc
mov
xor
or
lock
and
cmp
fistp
aad
or
or
mov
push
movs
mov
aam
inc
ret
dec
test
mov
add
pop
leave
std
pop
push
hlt
ret
cmp
cdq
idiv
mov
xor
inc
lods
jo
hlt
and
or
add
adc
loop
mov
cmp
aas
jbe
mov
sub
dec
lea
mov
jg
jns
rol
clc
add
push
loopne
(bad)
fsubr
fist
add
shl
add
sbb
mov
sar
inc
mov
add
loope
or
xor
or
add
jae
cmp
add
jge
and
add
xor
pop
bound
scas
sub
les
or
jle
mov
fisttp
jle
aas
mov
inc
jle
lds
inc
add
std
sub
add
mov
loop
sub
(bad)
or
cld
aas
retf
and
or
or
imul
pop
sub
movs
push
outs
shl
jbe
push
push
fistp
push
push
scas
je
fmul
pop
pushf
in
ja
add
add
ror
nop
add
ja
mov
inc
sbb
(bad)
add
add
cmp
push
sbb
pop
pusha
jbe
out
push
add
aaa
adc
sbb
sbb
xchg
pop
xchg
add
adc
outs
jge
pop
push
mov
mov
ficom
mov
sbb
aad
fistp
fisttp
(bad)
pop
add
sbb
adc
lock
ret
lock
or
cmp
not
xor
push
ins
jnp
out
retf
test
push
inc
fistp
test
sbb
mov
jbe
out
push
imul
push
sbb
repnz
jne
xchg
xchg
or
int3
movs
(bad)
loope
and
push
push
dec
and
shl
bound
rcl
in
daa
cmp
pop
push
xor
cmp
in
xchg
push
fbld
jmp
mov
xchg
clc
lock
push
pop
cmp
cmp
cmp
jno
pop
mov
pop
arpl
push
lock
test
call
push
xor
push
push
(bad)
mov
sub
or
xor
mov
(bad)
lea
and
and
mov
cmps
cmps
cmp
adc
or
mov
dec
inc
mov
xor
subps
add
fadd
imul
or
ss
or
add
lods
test
sub
je
cmp
add
xchg
les
and
mov
(bad)
and
adc
div
jns
jge
mov
jecxz
test
mov
out
cld
add
cmp
cld
out
aad
sbb
adc
stos
jp
lock
mov
dec
adc
cmp
add
inc
xchg
dec
js
ins
arpl
dec
xchg
nop
cmps
sti
push
repz
sbb
xor
call
out
jno
jno
sbb
xor
push
das
sub
je
test
mov
sub
mov
push
in
mov
pop
call
sub
mov
pop
sbb
xchg
mov
inc
mov
xchg
mov
cmc
push
mov
dec
dec
sbb
movs
pop
xor
cmps
xor
aad
xor
add
add
ror
inc
ja
and
mov
(bad)
push
and
dec
in
mov
mov
or
push
xor
push
ret
xor
dec
mov
ds
cmp
dec
or
fsub
xlat
aaa
and
cmp
add
sbb
out
pop
add
add
xlat
jl
and
mov
sub
add
inc
out
jl
add
out
sub
in
xchg
jne
mov
pop
dec
add
pop
rcr
popa
cmps
hlt
adc
mov
ror
mov
dec
cmp
dec
pushf
add
lea
icebp
(bad)
pop
jle
xor
xor
in
inc
aas
mov
out
mov
cwde
add
jmp
jmp
fcomp
in
add
sub
mov
ds
(bad)
leave
in
sar
scas
repz
mov
addr16
xor
xchg
add
inc
iret
hlt
push
inc
xchg
test
cmps
or
into
inc
sub
ins
add
mov
loop
add
xor
clc
mov
inc
fsubr
fnsave
xor
xor
in
jo
mov
pop
sub
xor
test
addr16
sub
push
scas
or
scas
or
add
lds
jne
jg
pop
cmps
and
fdivr
jno
mov
loopne
js
jno
inc
mov
sub
or
adc
fsub
pop
cmp
aas
mov
dec
pop
pop
popa
pop
push
mov
sbb
or
je
fsubr
dec
mov
or
jmp
inc
jl
in
and
and
push
adc
sbb
rol
sbb
add
xchg
and
sub
inc
retf
dec
jecxz
cmp
std
cmp
mov
dec
xor
cld
out
aam
xor
mov
sbb
xchg
cmp
dec
jo
and
pop
ins
adc
fdivr
dec
cmp
inc
cld
mov
sbb
out
(bad)
mov
test
cmp
or
or
cmp
in
fcomip
neg
out
test
shr
mov
push
cld
scas
or
mov
sti
and
and
jle
cmp
div
popa
inc
aas
pop
lock
(bad)
scas
lock
and
add
add
dec
cmp
mov
ja
push
adc
test
out
ins
inc
cmps
and
mov
mov
pop
add
dec
call
clc
cmp
repnz
dec
push
jbe
and
jmp
dec
push
enter
dec
popa
ja
and
push
mov
retf
in
sbb
les
sub
add
punpcklwd
sbb
es
hlt
retf
hlt
and
movs
es
mov
push
sub
push
movs
dec
sub
jle
mov
xchg
jmp
inc
or
mov
retf
aam
enter
mov
add
xlat
jge
add
add
push
push
cmps
out
xchg
xor
xor
push
imul
sbb
into
sub
dec
cmp
jb
out
(bad)
adc
mov
cmps
push
inc
je
fwait
inc
stmxcsr
push
push
or
je
je
cmps
push
dec
sbb
adc
push
jge
mov
lods
mov
sbb
mov
dec
inc
fstp
xor
and
out
mov
inc
cwde
jp
sub
hlt
stos
or
rol
sbb
mov
xor
jb
mov
dec
or
dec
mov
mov
ret
out
ja
lahf
xchg
jne
sahf
jb
mov
inc
adc
dec
inc
jp
dec
mov
fisttp
outs
movs
jae
adc
add
add
inc
xchg
outs
inc
fdivr
inc
cmps
lods
cs
jmp
dec
cmps
mov
inc
mov
retf
shr
push
push
loope
dec
mov
fsubr
call
pop
mov
dec
popa
shl
or
sahf
jne
sbb
jge
xchg
outs
dec
mov
cmps
mov
lock
push
add
mov
jl
nop
je
mov
jle
push
cwde
jmp
mov
mov
pop
outs
out
stos
ret
and
hlt
cwde
add
mov
mov
outs
rol
cmp
ja
inc
pop
dec
adc
ror
or
lock
inc
int
push
push
fsubr
int
jnp
add
jle
test
addr16
adc
ret
adc
mov
mov
rol
pop
add
add
lods
mov
cmp
popa
inc
cmp
push
push
dec
cmp
jbe
jg
das
inc
outs
jb
arpl
jb
and
ins
outs
arpl
(bad)
sti
rol
and
bound
dec
fisttp
repnz
bound
add
nop
out
mov
pop
ins
ret
cmps
out
mov
adc
test
je
(bad)
aas
cld
push
loopne
stc
add
mov
cli
repnz
jmp
mov
inc
mov
inc
dec
push
and
test
jp
lock
pop
jle
dec
fmul
xor
add
loop
out
jmp
dec
jbe
clc
sbb
fidiv
sbb
and
xchg
cmp
add
cwde
lahf
js
mov
aas
imul
bound
imul
inc
push
stos
adc
xchg
rcr
xlat
add
add
fdecstp
adc
xlat
retf
push
mov
popa
xchg
ret
inc
add
or
in
sub
ja
adc
sub
add
or
mov
ss
sbb
adc
daa
pop
(bad)
mov
mov
mov
cmp
push
loop
out
neg
cmp
push
movs
add
sbb
dec
jmp
add
in
and
cmp
push
mov
ja
sub
mov
or
push
pop
push
push
cmps
(bad)
and
and
and
push
sbb
jne
leave
push
test
(bad)
mov
or
div
sbb
mov
pop
dec
mov
sbb
mov
mov
push
xor
xor
das
loop
(bad)
add
je
js
ins
(bad)
push
cli
adc
test
cli
push
jne
stos
and
mov
cmp
or
cmp
in
mov
arpl
inc
pusha
dec
add
pop
ins
movs
pushf
push
ror
and
loopne
mov
fwait
mov
inc
int
mov
fsub
inc
sbb
pop
mov
inc
ret
push
push
ins
popa
inc
ret
ins
aas
jbe
(bad)
add
jns
add
test
add
add
jo
outs
(bad)
mov
mov
iret
lods
imul
aad
cmp
mov
test
sub
jge
into
pop
adc
fild
ss
or
sbb
aaa
aas
mov
(bad)
push
sub
adc
or
daa
repz
shr
cmp
mov
test
out
sbb
es
(bad)
push
dec
cmp
aas
pop
xchg
fst
xor
inc
sub
lea
jb
cmps
mov
xor
xchg
xor
sub
rcr
push
das
cld
cmp
js
aad
jo
outs
jne
dec
lods
jge
sbb
pop
pop
cmp
mov
mov
jo
cwde
ret
ins
fdivr
test
or
(bad)
jmp
add
sbb
sbb
loopne
add
ss
jne
push
sub
pop
push
add
adc
retf
sub
jnp
xchg
adc
sbb
out
aas
xor
or
push
in
cmp
push
icebp
ja
je
cwde
inc
mov
ja
mov
rol
mov
test
pusha
nop
mov
je
push
pop
les
push
and
mov
test
add
retf
add
cs
mov
lea
and
xchg
add
mov
outs
lea
mov
clc
pop
lea
dec
cli
(bad)
push
or
add
fs
pop
jnp
xor
mov
jbe
(bad)
xor
pushf
lea
movs
mov
into
pop
nop
fdiv
cmp
cwde
sti
je
xchg
mov
(bad)
xchg
jmp
pop
test
xor
adc
aam
enter
cmp
dec
cs
ret
add
add
pop
adc
test
movs
mov
xchg
sti
(bad)
jmp
sub
inc
stos
les
fs
sar
sti
daa
ret
pop
leave
loop
aas
test
loope
dec
add
js
dec
cmp
test
(bad)
push
test
es
xor
mov
xchg
sub
push
push
sbb
dec
cld
push
in
dec
and
cmps
out
daa
sub
inc
cmc
and
inc
mov
inc
repnz
mov
push
imul
pop
adc
sbb
cmp
xor
add
push
adc
or
rcr
scas
mov
jne
cmc
rol
outs
(bad)
mov
loopne
jnp
sbb
movs
push
(bad)
jno
daa
dec
add
pop
cli
mov
ret
repnz
xor
cwde
xor
je
test
add
js
add
nop
push
cmp
dec
and
push
mov
pushf
xor
add
push
jl
cmp
xor
arpl
les
pop
push
or
xchg
rcl
hlt
xor
xchg
add
call
mov
lods
cmp
add
inc
mov
mov
(bad)
dec
pop
lods
lahf
and
jp
add
jbe
ja
sub
clc
rol
call
push
loopne
aad
cmp
push
xor
fmul
sub
das
inc
pop
or
xor
push
push
arpl
mov
lods
inc
sbb
ret
popa
rcr
fmul
mov
in
fdiv
pop
in
aas
lock
sbb
pop
imul
ret
lahf
hlt
popa
clc
pop
sbb
adc
sete
adc
cdq
mov
push
aad
ins
inc
nop
fisttp
pop
ret
pusha
and
cld
ret
iret
dec
push
push
lea
lea
mov
adc
fadd
inc
inc
pop
jb
push
mov
or
pop
mov
dec
mov
int3
fstp
inc
popf
inc
mov
xlat
in
test
push
inc
xchg
(bad)
icebp
je
sbb
or
push
or
cdq
jp
or
add
mov
out
pop
push
les
ins
pop
ins
cld
fnsave
dec
sbb
lahf
ret
in
sbb
mov
and
dec
vandnps
add
and
adc
cmp
mov
xchg
fisubr
dec
push
ja
popf
pop
xchg
sub
sti
add
loope
push
sahf
inc
iret
or
add
aas
call
test
sub
adc
sub
test
cmps
push
daa
add
arpl
xor
push
in
cmp
mov
daa
lds
enter
add
je
shr
daa
adc
and
xchg
pop
add
sub
pop
mov
pop
xor
adc
addr16
adc
pop
bound
jo
shl
sub
sub
push
inc
add
adc
inc
adc
add
sub
inc
mov
push
or
and
or
aas
dec
jg
stos
sbb
mov
push
smsw
jb
popa
lea
inc
or
pop
sub
movs
xchg
jg
pusha
push
ror
xlat
or
push
and
fsubr
add
dec
mov
sub
lods
mov
inc
xchg
inc
test
fcom
or
push
pop
out
sub
js
jnp
sub
cwde
push
and
pusha
inc
push
inc
out
ins
xor
push
add
or
adc
in
inc
ins
lahf
jg
popa
dec
sub
fs
out
adc
dec
inc
sbb
sbb
jnp
pop
xor
or
(bad)
rol
mov
cli
dec
or
mov
adc
je
not
mov
sti
and
fdiv
cld
(bad)
fbld
add
add
add
mov
shr
shl
or
push
repnz
mov
and
pop
and
dec
ja
mov
stc
mov
call
shr
or
repz
lock
cwde
repz
cli
or
jo
and
into
(bad)
data16
shr
dec
adc
xchg
push
repz
mov
and
fnstsw
repnz
clc
or
into
mov
shr
add
dec
mov
push
or
icebp
add
dec
cmp
sti
adc
sbb
dec
sub
xchg
sbb
inc
xor
xchg
inc
std
adc
and
cwde
sub
add
test
outs
dec
mov
(bad)
(bad)
aas
sub
mov
outs
inc
add
adc
outs
inc
xor
xchg
jno
std
aas
cmp
dec
add
jns
aas
cmp
int
inc
inc
aas
cmp
push
and
mov
or
inc
xchg
inc
jmp
push
bound
cwde
pusha
jo
dec
add
fiadd
adc
scas
dec
inc
mov
rcr
mov
inc
pop
dec
or
inc
sbb
inc
jmp
aaa
dec
push
pop
pop
es
adc
inc
push
adc
xchg
icebp
in
add
in
cmp
or
adc
pop
leave
sub
adc
adc
(bad)
sub
pop
leave
sub
inc
add
out
mov
leave
mov
sti
leave
sub
leave
shl
and
int
and
leave
sub
cmp
pop
aaa
ret
or
pop
leave
sub
in
adc
sub
leave
pop
inc
xor
jmp
sub
or
mov
shr
cmp
lock
pop
in
or
sub
inc
inc
xor
xor
mov
ret
aam
js
cmp
push
xor
into
loopne
xor
mov
adc
inc
or
or
inc
and
ins
and
inc
adc
scas
cmp
mov
mov
inc
or
in
dec
in
or
(bad)
inc
inc
jmp
movups
iret
fimul
and
pusha
dec
mov
sar
mov
lock
and
fwait
sub
aaa
inc
cli
daa
mov
inc
or
out
aam
or
inc
add
and
test
inc
rcl
fstp
mov
cdq
(bad)
(bad)
inc
clc
jl
pop
and
aaa
inc
invd
inc
gs
lods
les
and
rcl
fnsave
and
hlt
adc
inc
push
jne
es
mov
adc
inc
xchg
jmp
inc
movhps
or
fcom
into
repz
cmps
and
lock
adc
cmp
mov
adc
and
ret
pop
pop
gs
add
and
hlt
out
jmp
adc
pop
test
pop
cmp
test
pop
mov
push
movs
adc
out
(bad)
pop
movs
or
inc
and
pop
push
mov
adc
mov
dec
push
movs
or
cmp
pop
pop
xor
repnz
xlat
sub
sub
xchg
outs
mov
or
add
adc
add
or
adc
cli
add
pop
or
in
out
xchg
sbb
dec
add
or
repz
and
and
shl
sub
and
repz
dec
or
mov
fdivr
(bad)
retf
push
shl
enter
push
xor
mov
lock
jmp
adc
mov
sub
add
and
cmp
jbe
inc
add
jmp
or
sbb
inc
or
or
push
and
push
mov
mov
push
fild
sbb
jecxz
out
fldenv
adc
std
or
mov
xchg
and
adc
iret
adc
retf
or
jne
pusha
imul
jbe
cmp
pushf
jne
hlt
retf
mov
mov
cmp
and
nop
inc
push
pop
mov
inc
mov
dec
cld
or
jge
mov
push
shr
pop
mov
push
mov
dec
add
mov
jo
push
neg
or
dec
nop
inc
pusha
retf
xor
push
jb
or
push
addr16
out
in
mov
movs
lea
stos
or
sahf
mov
jle
sbb
mov
adc
dec
cmp
jb
mov
jo
mov
jecxz
mov
push
into
rol
loope
add
xchg
adc
push
fcomp
or
pop
test
jnp
jle
stos
es
jg
push
test
stos
popf
push
test
cmp
sbb
jge
test
sti
call
lea
inc
sar
or
mul
sub
push
lea
xchg
cmp
gs
retf
push
xor
cmp
mov
jne
lea
test
aas
sbb
pushf
push
push
push
nop
enter
cmp
(bad)
out
lea
mov
jecxz
mov
cmp
push
int
imul
add
enter
jno
nop
mov
pushf
xor
add
mov
jo
js
push
add
mov
pushf
adc
mul
out
push
jnp
pop
mov
xor
test
pusha
inc
pop
push
test
sub
(bad)
(bad)
xor
xchg
cmp
fcomp
pop
fnstenv
adc
je
adc
clc
push
retf
adc
je
push
push
xor
add
push
add
in
mov
inc
add
rcl
and
movs
mov
push
jb
sub
shl
shl
xchg
call
push
or
jmp
mov
mov
cmc
clc
je
dec
add
clc
clc
scas
push
jecxz
xchg
scas
rcr
fimul
cmp
xor
out
add
ja
aam
ret
cmp
adc
pop
add
mov
xchg
or
dec
dec
dec
test
and
mov
push
jbe
pop
arpl
fidivr
push
sbb
add
fcom
xor
pusha
jp
mov
mov
jo
push
cmp
xor
cmps
jnp
adc
shl
test
or
mov
adc
(bad)
cmp
jns
seto
and
mov
scas
and
jb
push
mov
(bad)
sub
ins
adc
mov
std
sbb
mov
add
add
add
add
adc
cmp
sub
shl
ret
nop
dec
push
xor
and
sbb
dec
xor
loopne
les
adc
rcr
inc
cmp
sbb
les
enter
cdq
xchg
daa
mov
xor
push
push
add
cmovnp
push
loopne
jp
out
push
mov
ja
mov
sub
cs
mov
cmp
xchg
cs
jns
mov
adc
stos
sbb
stos
inc
xchg
sub
mov
dec
inc
jp
or
or
mov
mov
and
inc
sub
add
and
dec
aas
repnz
pop
jb
mov
fild
add
sbb
call
xor
and
push
push
inc
mov
mov
aas
in
mov
retf
add
cld
inc
movs
dec
clc
cmp
cmp
scas
mov
push
xor
mov
xlat
dec
xchg
or
mov
ss
and
or
mov
or
lock
or
or
or
add
push
add
mov
mov
test
xor
mov
ror
mov
cmp
cmp
aad
imul
add
pop
push
dec
jmp
mov
mov
iret
call
test
xchg
and
xor
jl
adc
mov
sbb
mov
ins
or
cwde
sbb
sbb
test
sub
sub
or
jo
ret
adc
dec
or
imul
aaa
pop
sbb
and
push
push
movs
pop
pushf
adc
cmps
or
wrmsr
or
mov
or
push
and
push
(bad)
mov
test
push
or
inc
xchg
sub
inc
loope
pop
rol
nop
test
sbb
or
aaa
pushf
loopne
js
or
ds
adc
or
movs
pop
add
ror
xchg
mov
test
sub
test
xchg
mov
leave
adc
fdivr
mov
movs
les
and
ins
dec
mov
mov
fadd
cmps
cmp
add
dec
into
pushf
aas
test
cld
rcl
jne
lea
js
xchg
jle
fsubr
psllq
pusha
xor
loop
int3
inc
sub
les
pushf
fisub
push
test
mov
aas
or
add
or
cwde
stos
mov
xchg
es
or
aaa
xor
movs
rol
test
xor
xchg
pushf
push
add
adc
das
pop
cwde
mov
inc
inc
sub
dec
lods
addr16
sbb
push
nop
(bad)
fsub
xor
and
ror
add
jmp
pop
xor
test
or
add
das
pushf
adc
loope
mov
jo
les
stos
xlat
sub
push
movs
mov
mov
mov
shr
scas
and
inc
and
in
out
mov
mov
sub
or
mov
(bad)
mov
inc
ja
(bad)
loopne
mov
dec
call
js
xor
jns
fimul
hlt
inc
cmp
push
fbstp
add
push
test
dec
xchg
cs
add
jns
ror
cmp
xor
push
xor
push
ss
loopne
fldcw
push
dec
add
push
inc
and
xchg
mov
sbb
dec
mov
(bad)
aam
add
mov
inc
imul
xor
scas
sar
xchg
dec
dec
sbb
dec
xlat
popa
xchg
mov
cmp
shl
fs
mov
xor
dec
clc
push
cmp
mov
stos
pushf
scas
retf
or
jne
mov
mov
xchg
sub
or
cld
mov
cmc
adc
clc
das
clc
pop
dec
ins
xchg
loope
cdq
or
xor
push
or
sub
out
pop
cmp
cld
mov
hlt
gs
add
inc
sub
sub
lahf
push
mov
jnp
pop
mov
mov
mov
inc
jne
and
push
pusha
add
jo
push
pusha
xchg
sub
pop
xor
push
xchg
(bad)
imul
imul
fdivr
mov
sbb
push
adc
das
sbb
inc
push
fcom
xor
call
sbb
cmp
(bad)
mov
inc
and
in
(bad)
mov
loope
dec
sbb
and
popf
and
rol
rol
push
rol
push
nop
xchg
(bad)
or
add
dec
push
pop
movs
in
or
jne
in
jne
enter
add
mov
ret
mov
and
push
hlt
and
cdq
shl
jmp
imul
loope
lea
adc
addps
jns
lock
hlt
push
hlt
es
add
jle
outs
mov
not
xchg
xchg
ror
int3
adc
xchg
inc
int3
ins
dec
or
cmps
call
clc
ins
int3
iret
cld
test
adc
mov
cmp
sbb
mov
pop
xchg
(bad)
enter
adc
scas
es
(bad)
aam
pop
inc
pop
jg
or
idiv
xor
adc
in
or
and
popf
mov
int3
mov
data16
retf
dec
adc
xchg
xor
push
adc
imul
in
dec
and
or
and
loope
adc
add
xor
in
push
push
push
fs
sar
cmp
nop
movs
jb
mov
add
out
add
inc
xor
pop
fild
out
nop
lock
(bad)
loopne
iret
out
add
xchg
in
test
mov
or
cli
fisttp
(bad)
in
xor
test
inc
and
sti
sbb
not
jg
sbb
sbb
sbb
add
popfw
out
mov
cmps
adc
pop
test
add
sbb
mov
ds
in
ja
in
sbb
add
test
test
inc
add
inc
enter
mov
mov
scas
mov
addr16
adc
dec
dec
xor
sub
mov
mov
ror
fldcw
lds
push
imul
fwait
les
sbb
ficomp
sbb
(bad)
(bad)
cmp
hlt
xor
inc
push
mov
add
push
xor
test
or
push
mov
adc
mov
(bad)
mov
sbb
adc
or
ins
loop
jb
cmp
jl
retf
lods
mov
xchg
jne
movs
neg
push
xor
adc
shl
xchg
out
mov
popf
adc
loop
adc
mov
pop
jns
loopne
cmp
aaa
add
cs
pusha
pushf
or
inc
xchg
add
rcl
xchg
int3
xchg
nop
xchg
retf
xchg
xchg
xchg
sbb
pushf
inc
aas
and
cmp
inc
loopne
shl
out
push
aas
xlat
and
(bad)
dec
xchg
pop
push
push
adc
lods
push
push
repnz
movs
sub
add
sbb
(bad)
dec
test
push
inc
jbe
loopne
mov
enter
pop
push
mov
shl
dec
cs
je
pushf
or
and
inc
scas
mov
shr
in
mov
sub
xchg
mov
test
mov
enter
enter
movs
push
mov
call
jo
in
and
jmp
lea
inc
mov
scas
adc
movs
repnz
jp
(bad)
sar
into
or
test
inc
mov
mov
add
shl
mov
push
jno
pop
mov
jl
and
xor
xchg
fs
fs
ins
pop
sbb
or
mov
mov
sahf
adc
xchg
mov
add
push
sbb
lods
in
sub
retf
jne
sbb
mov
fwait
pop
push
push
adc
mov
pop
lods
add
and
cmp
enter
nop
movs
and
xor
push
xchg
lea
pop
pop
sbb
jge
and
push
mov
nop
mov
test
xchg
pop
dec
test
xor
cwde
cwde
sbb
leave
and
add
xor
nop
dec
xchg
xchg
nop
push
and
out
jmp
or
cmp
inc
jne
mov
cdq
(bad)
push
or
sbb
sub
add
test
jle
adc
mov
pop
inc
push
(bad)
movs
pop
test
pop
pop
and
and
or
test
sbb
imul
pop
sbb
call
cwde
test
add
cdq
fs
loopne
xlat
or
xor
sub
mov
add
cmp
xchg
outs
test
stos
mov
cmp
lahf
and
popa
xchg
cmp
pop
lock
outs
lock
js
inc
xchg
pop
xchg
js
adc
loope
icebp
test
xchg
add
push
fistp
stos
lds
nop
push
lock
fild
jae
sbb
sbb
stos
scas
(bad)
push
fild
test
xchg
je
in
pop
rol
ror
jo
jb
pushf
jbe
test
(bad)
mov
in
or
sub
(bad)
loopne
mov
or
daa
ins
and
leave
ins
retf
xchg
push
mov
add
push
mov
sub
rol
inc
mov
pop
inc
mov
sub
test
pop
push
push
mov
adc
push
inc
dec
inc
inc
mov
shl
cmp
jno
pusha
push
je
push
mov
xor
gs
xchg
out
retf
add
push
cmp
pusha
inc
push
rol
mov
nop
mov
aaa
pop
leave
and
enter
xchg
retf
and
mov
push
and
and
nop
retf
sub
mov
mov
sbb
push
rcl
es
nop
retf
and
adc
add
mov
push
cmp
and
xchg
nop
xchg
inc
fisubr
dec
cs
mov
add
nop
retf
inc
add
add
and
mov
pop
and
xchg
or
inc
dec
es
in
xchg
xchg
cmp
cli
cmp
cli
fsub
hlt
cli
cld
sbb
enter
inc
mov
and
mov
and
cmp
cs
dec
jb
pusha
xor
jb
xchg
dec
xor
in
add
in
cmp
cmp
nop
cmp
pusha
mov
pop
or
xor
daa
add
push
push
xchg
dec
cs
sub
sub
nop
xchg
retf
aam
sbb
inc
rcr
xchg
xor
enter
test
nop
and
and
xor
inc
inc
jb
in
and
and
retf
and
int3
xchg
nop
sub
mov
inc
inc
pop
pop
and
add
or
add
xor
cmp
xchg
dec
xor
and
adc
jb
fs
mov
or
mov
xor
xchg
or
adc
and
xor
sbb
or
jne
and
xchg
movs
movs
nop
inc
cs
lods
sbb
or
xchg
jb
xchg
adc
adc
leave
adc
push
sbb
jne
scas
sbb
cmp
inc
or
and
xchg
fadd
adc
adc
inc
popa
loopne
mov
repnz
loopne
inc
xchg
addr16
inc
adc
nop
or
sbb
ret
add
push
xlat
adc
imul
xchg
cmp
pop
xlat
sbb
add
mov
sub
add
push
bound
xor
in
lock
lock
or
fwait
out
in
cmp
std
lock
call
dec
push
and
daa
mov
cmp
mov
adc
test
out
mov
sub
and
aam
push
push
ror
add
cmp
adc
dec
xor
std
xchg
sub
in
xchg
sub
sti
xchg
xchg
cmp
dec
ror
mov
push
sti
mov
xchg
cmp
sti
hlt
sti
mov
xor
leave
pop
jae
sti
mov
or
xor
icebp
jb
lock
xchg
mov
popa
mov
sti
sub
nop
sbb
sbb
call
dec
sbb
in
xchg
jae
jo
jo
mov
(bad)
loopne
dec
in
pop
cmp
sti
loopne
loopne
dec
mov
mov
mov
xor
test
lock
push
adc
push
pop
mov
in
cmp
adc
pop
mov
cmps
mov
jmp
cmp
aaa
and
add
add
inc
sbb
enter
add
xor
inc
sbb
mov
fcom
je
mov
adc
adc
fcomp
mov
jb
pop
dec
mov
add
repz
xor
ret
inc
shl
and
and
int3
jae
shr
inc
test
add
adc
aam
aam
sbb
shl
pop
ret
xchg
inc
inc
xchg
mov
push
lods
add
push
add
leave
push
xor
rol
push
xor
out
cmp
test
mov
cli
sub
or
enter
pop
xor
mov
jb
add
pop
adc
or
inc
jge
jno
dec
or
add
popa
dec
push
dec
movs
bnd
cmp
jle
mov
mov
test
cmp
or
sub
mov
cmp
push
and
and
xor
lahf
or
add
xor
lods
ret
and
cs
jg
daa
add
iret
inc
mov
popf
das
or
clc
mov
add
mov
hlt
xor
into
xor
fwait
adc
and
pop
push
add
retf
cmps
or
shl
pop
add
shrd
pusha
out
cmc
inc
sub
jns
inc
jb
popa
jns
jne
dec
push
jge
lods
sbb
add
pop
lods
pop
addr16
jne
inc
xchg
not
mov
or
add
add
push
dec
or
rcl
fist
retf
add
push
inc
dec
xchg
loopne
xor
jae
add
add
sbb
addr16
jp
scas
lods
mov
jle
inc
(bad)
(bad)
jnp
or
add
ds
je
pop
xor
(bad)
aad
loope
or
hlt
jmp
lea
fs
jo
inc
cdq
jge
mov
push
or
cld
mov
and
push
pop
jne
push
mov
inc
shl
or
loopne
cmp
adc
lods
pushf
call
xchg
adc
mov
sbb
dec
cld
cld
cmps
enter
jl
adc
mov
mov
and
ss
push
test
inc
jl
xchg
movs
adc
bound
xchg
pop
dec
sub
cs
jb
xchg
inc
and
ins
movs
pushf
sub
xlat
nop
retf
xchg
stos
push
and
sub
les
repnz
ret
sbb
in
pushf
movs
rcr
and
mov
mov
xlat
pusha
retf
or
add
int3
cmp
aad
xlat
xor
scas
cmp
mov
in
enter
(bad)
xlat
movs
pushf
and
add
fucomip
and
xlat
adc
add
icebp
push
jecxz
jmp
fstp
sbb
retf
loop
jecxz
je
cmps
rcl
sahf
into
mov
in
and
repnz
out
sub
jmp
jno
xor
fisub
fnstenv
out
add
outs
repz
and
leave
jle
inc
sub
xlat
leave
mov
jecxz
cmp
dec
push
retf
shl
inc
bound
int3
sbb
ja
in
adc
xlat
int3
push
ja
stos
add
inc
dec
jecxz
int
pop
mov
iret
shl
in
and
and
sar
jecxz
jns
repnz
shl
add
cdq
mov
mov
jecxz
sar
push
push
add
add
jecxz
adc
add
aam
jecxz
and
nop
push
aad
jecxz
repnz
add
seto
(bad)
(bad)
jecxz
add
add
push
adc
jecxz
fcom
add
pavgw
fst
jecxz
fld
seto
jecxz
adc
add
popf
jecxz
and
nop
inc
(bad)
fild
inc
push
add
test
fild
jns
and
push
in
test
adc
add
(bad)
in
cmp
fbld
(bad)
mov
jge
mov
inc
jecxz
loope
(bad)
and
jecxz
loope
add
and
fisttp
jns
repnz
jecxz
test
sub
enter
mov
inc
rol
and
in
cs
push
test
inc
test
or
hlt
rcl
daa
dec
sbb
inc
lock
or
inc
cmp
movs
lds
idiv
sub
test
rep
sar
jne
dec
movs
inc
push
add
mul
sbb
cmp
pop
movs
ins
shl
push
or
in
lea
daa
or
(bad)
rcl
jl
push
sub
not
sub
loopne
mov
xlat
and
pop
xor
in
push
or
or
jno
dec
mov
sub
xchg
je
test
adc
and
fsubr
xchg
in
std
mov
adc
and
dec
mov
loope
sub
fsub
loope
dec
test
movs
dec
push
in
add
rol
pop
adc
call
sub
push
xor
jp
bound
jo
pusha
xor
loopne
imul
loopne
mul
adc
add
clc
mul
dec
dec
mov
or
aam
xchg
mov
sbb
push
fcomp
inc
cwde
sub
adc
add
dec
int3
mov
and
imul
mov
or
inc
push
mov
push
shl
fdivrp
jne
cld
(bad)
(bad)
and
stos
stos
xor
mov
adc
mov
test
xor
imul
je
cmp
cmp
add
inc
test
cmp
cmp
in
inc
iret
sub
enter
cmps
pop
sbb
es
test
pop
jbe
push
mov
cmps
sub
inc
pop
iret
pop
cmps
in
leave
or
pusha
mov
sbb
cmps
iret
sbb
dec
mov
popf
mov
add
les
iret
or
iret
repnz
stos
push
movs
bswap
or
sbb
pslld
fcomp
sbb
add
shl
sbb
imul
lods
fsub
loope
mov
iret
pop
adc
dec
pusha
jmp
xor
inc
cmp
mov
ja
dec
je
sub
jno
xchg
lods
mov
xor
xlat
retf
xor
and
pop
jmp
(bad)
(bad)
call
add
add
cmp
dec
or
test
ror
aaa
pop
push
push
sub
cdq
mov
jbe
push
mov
adc
mov
push
mov
test
pop
push
push
xchg
inc
fs
retf
in
(bad)
leave
rol
adc
xor
hlt
dec
hlt
sbb
xchg
xchg
(bad)
hlt
(bad)
cld
inc
leave
dec
and
dec
cs
in
nop
xchg
retf
in
pop
xor
mov
adc
mov
or
aam
or
pop
push
push
adc
mov
fstp
mov
leave
(bad)
inc
and
dec
les
mov
leave
(bad)
sub
push
fmul
inc
mov
(bad)
fdiv
mov
dec
shl
pop
lock
jmp
test
xchg
add
cli
adc
int3
mov
or
jns
adc
inc
mov
pop
dec
mov
xchg
pop
xor
push
rcl
loopne
mov
lea
add
pusha
(bad)
xchg
or
pop
jmp
jbe
mov
dec
jecxz
pop
mov
daa
push
pop
cmp
cmp
jb
fs
retf
pop
jo
lea
xor
xor
mov
fldcw
mov
jbe
(bad)
xor
push
xchg
dec
bound
push
mov
stos
mov
xor
sub
push
mov
adc
dec
push
mov
es
movs
outs
cmps
push
add
lds
popf
int3
and
bound
mov
or
js
mov
or
or
dec
cmps
push
cld
adc
pop
cmps
push
sbb
in
lock
adc
adc
aad
cmps
push
add
inc
dec
(bad)
test
imul
xchg
cs
xor
movs
daa
mov
push
pop
xor
daa
mov
fcmovne
pushf
cmps
push
in
xor
mov
mov
mov
mov
cmp
mov
ror
pushf
fsubr
cmp
mov
and
iret
lock
add
dec
fcmove
add
out
cmp
or
rol
push
jb
add
cld
adc
add
push
cld
gs
iret
ins
fld
or
nop
sbb
out
loopne
aam
lods
sub
add
stos
and
and
inc
rcl
sbb
rcl
rcr
cmps
dec
cmp
dec
xor
and
cwde
push
out
repz
jmp
test
xor
jp
mov
jne
popa
daa
adc
mov
mov
and
or
hlt
call
xor
ds
sar
mov
pop
mov
adc
pop
in
mov
push
inc
push
mov
add
or
xchg
adc
or
adc
mov
or
fsub
add
ins
fcomp
(bad)
mov
jge
mov
es
mov
in
push
adc
nop
sub
mov
rol
sub
mov
add
les
mov
imul
mov
add
xchg
(bad)
sbb
cmps
push
adc
cmps
jo
test
das
hlt
retf
sub
sub
test
test
lahf
outs
mov
mov
sbb
push
cld
jns
clc
jo
cmp
pop
pop
inc
mov
push
dec
les
pop
sub
bound
push
xchg
ins
inc
pushf
dec
(bad)
clc
outs
dec
in
adc
xor
fnstenv
fs
and
lea
cs
pop
and
mov
or
and
add
(bad)
aas
ins
add
mov
inc
sbb
xor
and
xor
aaa
ret
xor
cmc
add
out
inc
and
fadd
repz
adc
inc
cmp
sbb
add
adc
sub
jmp
out
ror
arpl
push
and
mov
pop
push
or
test
lahf
inc
inc
pushf
fiadd
cld
and
or
daa
add
sbb
sub
mov
imul
sub
inc
daa
adc
inc
mov
or
pop
push
mov
dec
test
pop
fisub
adc
mov
out
mov
inc
cld
(bad)
ret
addr16
jg
mov
test
inc
sbb
imul
adc
aam
cmp
imul
add
sbb
sub
xor
pop
mov
sub
inc
loop
mov
sub
sub
add
jp
sub
mov
push
movs
test
(bad)
or
call
xchg
or
and
mov
pop
out
scas
push
push
push
xchg
stos
mov
push
dec
es
fisub
jmp
adc
xor
jmp
jmp
popa
mov
ins
add
outs
xchg
adc
pop
icebp
jb
adc
mov
mov
shl
frstor
ror
or
js
ss
out
(bad)
div
jns
es
and
push
or
in
push
mov
jge
push
jmp
pop
cwde
movsx
mov
or
inc
add
es
jnp
std
mov
mov
or
add
sub
xor
loopne
cmp
adc
sbb
and
mov
ret
rcr
into
dec
jno
mov
jmp
outs
cmps
add
aam
sbb
inc
jge
mov
push
and
jg
add
sbb
mov
push
ds
add
add
das
pusha
out
jmp
pusha
sbb
inc
push
les
fs
or
and
add
cmp
or
dec
or
ins
jo
dec
push
add
dec
inc
inc
inc
mov
imul
gs
add
and
dec
push
inc
push
dec
pop
and
pushf
jnp
push
push
cwde
dec
push
push
pop
sub
push
inc
dec
in
popa
mov
inc
push
das
out
inc
or
add
aaa
or
mov
dec
inc
add
cmp
inc
sub
sub
adc
cmp
push
pusha
nop
loopne
outs
inc
jb
mov
in
iret
sbb
in
inc
je
sbb
and
add
and
and
in
add
fs
push
in
and
nop
and
nop
sub
jg
cli
enter
lods
call
addr16
mov
neg
cmp
mov
cmp
sub
cmp
sub
mov
cmp
mov
cld
xor
pop
aas
or
rcl
cmps
and
icebp
lock
mov
add
imul
or
push
nop
dec
jo
ins
add
in
mov
xchg
outs
into
cdq
cmovs
enter
and
nop
jno
(bad)
push
ds
gs
imul
inc
add
xor
and
inc
pop
adc
(bad)
in
pop
push
jmp
dec
test
mov
push
jb
out
je
dec
adc
adc
pop
push
ins
call
xor
ins
mov
sbb
in
push
jmp
pop
adc
inc
inc
gs
adc
sub
retf
xchg
pop
lods
mov
push
and
xchg
add
pop
push
push
jmp
jmp
(bad)
xor
add
ins
rol
or
push
popa
or
(bad)
cmp
jle
push
pop
inc
add
add
ret
add
pop
das
inc
sbb
sbb
inc
jb
ins
push
or
push
and
out
push
not
ins
and
mov
and
jmp
jmp
out
push
push
into
sbb
jo
sub
mov
dec
cld
sub
or
pop
dec
adc
(bad)
adc
sbb
imul
repnz
adc
push
rol
cmp
pop
movs
add
push
lahf
adc
xchg
pop
xor
ss
add
sbb
adc
xor
dec
lock
arpl
add
mov
mov
ret
or
das
adc
jl
inc
add
pop
lock
and
cmp
add
xchg
inc
std
dec
jmp
test
xor
cmp
sbb
add
sub
push
sub
inc
xor
test
mov
add
or
aas
enter
push
adc
jle
lea
movs
add
sar
pop
mov
push
push
sub
sbb
in
mov
or
shr
lahf
push
daa
bound
lds
xchg
dec
inc
pop
cmps
pop
inc
sub
add
dec
inc
js
adc
add
cmps
test
cmp
inc
push
daa
and
sbb
inc
xor
aam
pop
mov
jge
pop
cmps
cs
and
push
push
repnz
js
push
push
call
cmp
cmp
mul
sar
or
and
repnz
lea
add
jnp
rol
sbb
ja
add
pop
xchg
neg
xabort
pop
jmp
push
pop
sbb
jle
push
or
push
sub
mov
hlt
add
push
jmp
ds
pop
in
or
add
adc
push
pop
test
fsub
dec
loop
dec
push
adc
adc
jl
ins
popa
jns
jae
jle
pop
push
shl
mov
xor
test
inc
cmp
repnz
inc
cmp
pop
dec
mov
inc
adc
mov
push
push
inc
push
xor
cs
arpl
and
dec
dec
pop
adc
repnz
dec
sbb
cmp
test
scas
cmp
pusha
adc
pusha
out
fs
scas
pop
lea
xchg
pop
loope
mov
nop
(bad)
sbb
ficom
push
sbb
enter
cld
xor
out
dec
movs
add
rcr
xchg
cmp
mov
dec
xchg
add
push
xchg
mov
call
fbld
outs
push
mov
xchg
push
mov
enter
sti
mov
mov
or
mov
test
out
(bad)
ins
clc
retf
add
mov
or
dec
je
je
enter
js
sbb
js
jl
enter
(bad)
jl
sbb
xor
retf
mov
mov
(bad)
call
je
cli
fs
ins
cs
(bad)
pusha
aas
inc
pop
push
inc
mov
sub
pop
jb
and
mov
rol
das
push
sub
imul
fcomp
sub
lds
scas
and
add
outs
jae
push
dec
add
ficom
push
fild
movs
dec
aad
sbb
mov
inc
push
cmp
in
pushf
add
xchg
or
pushf
pop
sbb
dec
outs
mov
lock
stos
ret
sbb
xchg
movs
js
or
add
dec
cwde
imul
add
push
or
dec
push
dec
pop
push
dec
or
inc
ss
add
popa
mov
xchg
jo
int
mov
dec
xchg
xor
fmul
add
lea
sbb
add
out
nop
hlt
cs
dec
sub
mov
addr16
xor
fmulp
js
or
nop
sub
push
fiadd
push
mov
shr
pusha
outs
or
pminub
dec
cmps
aad
imul
sbb
enter
in
sbb
push
or
aaa
cld
cmps
iret
adc
push
dec
inc
push
inc
push
inc
outs
add
mov
push
push
inc
add
and
clc
shr
sub
sbb
pop
dec
xchg
outs
enter
jle
into
gs
add
sub
add
xchg
int3
gs
dec
jo
lock
les
lock
push
inc
inc
inc
inc
adc
(bad)
push
mov
in
mov
fimul
push
or
lods
sbb
push
add
mov
and
outs
pusha
ins
mov
adc
retf
inc
iret
adc
cmc
dec
mov
ja
pop
outs
adc
bound
div
shl
cmp
add
add
jbe
or
inc
pop
pushf
push
ret
push
lahf
leave
push
dec
outs
xchg
(bad)
add
or
int3
les
imul
mov
fwait
add
fs
push
jns
gs
cmp
je
add
jne
enter
pop
add
mov
ret
push
jne
jo
jb
jecxz
dec
fisttp
mov
sub
sbb
movsx
or
push
inc
inc
dec
cld
jl
fld
push
iret
xchg
mov
mov
sti
push
fidivr
adc
push
aam
mov
sti
push
or
dec
dec
dec
inc
lods
(bad)
sbb
or
jne
retf
push
pop
push
and
or
or
push
popw
xor
pop
in
rcl
pusha
daa
sub
jg
push
inc
outs
push
cs
enter
cmp
ins
pop
and
fcomp
adc
push
mov
adc
mov
mov
mov
mov
push
xor
pop
js
test
push
(bad)
inc
bound
pusha
pop
pop
inc
movs
or
xor
imul
push
mov
mov
ins
xchg
push
push
pusha
jbe
inc
pusha
xchg
and
je
xor
ja
cmp
outs
and
outs
inc
fbld
push
test
xor
mov
test
mov
fdivr
inc
outs
aaa
shl
aam
lods
loopne
mov
je
in
mov
add
push
int3
and
dec
ja
imul
jg
or
jnp
mov
in
sub
push
es
ins
gs
add
rol
push
add
std
ss
adc
cli
iret
je
pop
xchg
sbb
push
inc
loop
or
div
pop
push
pop
push
inc
add
pop
jo
or
sahf
xlat
retf
pop
into
and
adc
cwde
or
pop
mov
xor
enter
or
movs
sbb
add
cld
or
movhlps
or
outs
sub
daa
call
push
outs
imul
sub
dec
lock
jo
mov
je
push
push
pop
mov
ins
push
call
pop
enter
addr16
inc
push
sub
int3
adc
cmps
dec
mov
adc
rol
push
scas
imul
(bad)
adc
and
fadd
push
loopne
pop
dec
mov
sub
push
dec
cmps
cmp
xor
dec
outs
cmp
lahf
add
add
fldz
test
leave
mov
je
push
mov
mov
in
lods
sub
inc
xlat
sub
pop
movs
call
xor
shr
inc
cmp
out
add
and
jbe
or
(bad)
cli
ret
pop
pop
push
push
or
mov
adc
or
mov
cmp
sbb
out
test
mov
test
adc
loop
in
sbb
xor
or
mov
mov
test
pop
xchg
cld
mov
pop
shr
mov
lods
cmp
inc
jle
jae
out
jecxz
pop
xor
pop
outs
iret
adc
cmp
push
push
push
outs
in
bound
xor
xor
ja
fs
sbb
cmp
fbld
in
add
sub
jnp
xor
data16
loopne
adc
inc
in
mov
cmps
jnp
pop
and
sub
push
mov
fisubr
pop
aas
scas
pushf
push
inc
add
iret
repz
cmp
xor
pop
cwde
inc
dec
ret
out
adc
aad
mov
pop
mov
fist
pop
(bad)
fs
clc
add
ja
arpl
pop
pop
add
push
jle
push
imul
jmp
cmovl
jb
iret
inc
fcom
add
inc
ins
enter
or
cld
andps
ja
in
push
and
push
sub
aam
aam
int3
int3
inc
jns
out
lods
dec
push
push
sub
cmp
jns
out
cdq
mov
jns
outs
ja
xchg
or
sbb
sub
outs
sub
gs
ss
sbb
outs
pop
sbb
iret
je
fistp
xor
push
aaa
fistp
push
cmp
push
sub
cmp
adc
dec
sbb
xor
add
or
fst
sbb
fcom
xlat
adc
test
stos
sub
fbstp
clc
mov
sbb
sbb
inc
pop
mov
cmp
xchg
push
fisttp
mov
mov
sub
push
cld
mov
or
mov
mov
fistp
xor
push
sub
mov
pop
mov
pop
pusha
add
sbb
mov
in
fst
jmp
aam
ins
jmp
test
jmp
cmp
ret
cmp
jl
pusha
dec
sub
inc
test
loopne
xor
pop
xor
out
adc
inc
add
adc
adc
push
and
adc
test
cdq
sub
(bad)
rcl
mov
push
dec
mov
js
shl
jmp
mov
dec
cmp
mov
xchg
add
adc
sub
cmps
cmp
cmp
inc
sbb
in
test
iret
sbb
pop
fcomp
and
fcomp
xchg
xor
ret
push
(bad)
mov
lock
mov
inc
sbb
or
mov
test
xor
add
mov
ds
xchg
dec
and
mov
mov
loopne
jmp
movs
cmp
xchg
int3
nop
push
xchg
adc
jge
dec
and
sbb
aam
sbb
not
pop
inc
leave
pop
je
xchg
sub
sti
loopne
push
movs
xor
ror
adc
jl
cmc
mov
sti
inc
xor
mov
push
repz
inc
retf
pusha
sub
dec
jne
inc
sbb
pop
outs
or
pop
call
fiadd
dec
mov
not
pop
(bad)
sbb
(bad)
pop
push
mov
add
dec
cmp
jmp
add
mov
clc
cmps
push
sbb
cmp
or
sbb
test
pusha
push
rcr
mov
(bad)
call
inc
(bad)
mov
into
inc
or
inc
inc
lock
sbb
mov
sbb
and
je
sti
icebp
mov
push
sbb
into
sub
xor
dec
into
ds
cmc
hlt
jne
cmp
jle
adc
pop
neg
in
inc
jo
fwait
sbb
adc
shl
pusha
(bad)
mov
push
xchg
aas
mov
add
mov
adc
jmp
mov
push
ds
pop
add
sahf
push
lods
leave
icebp
mov
jno
add
pop
cmp
gs
cdq
clc
mov
popa
adc
xor
popf
mov
or
fs
push
fbstp
or
aas
mov
sbb
xchg
sbb
pop
inc
stos
xor
mov
lock
out
mov
into
pop
sbb
push
inc
jbe
inc
xchg
jge
lock
add
in
mov
stos
outs
mov
lahf
sub
shl
fnsave
add
mov
inc
mov
mov
add
fst
pop
add
sub
cmps
in
add
call
adc
ror
daa
xor
inc
push
clc
pop
add
lock
aaa
test
inc
pop
fdiv
or
std
retf
pop
rcl
inc
fsubr
es
fcomp
xchg
sbb
dec
mov
jmp
in
pop
or
sub
adc
lods
mov
cmp
adc
mov
push
call
hlt
add
mov
int3
dec
cmp
test
jnp
fcomp
loope
call
fadd
jne
into
inc
dec
lea
shl
or
leave
sbb
ins
jl
mov
in
ins
sub
jle
and
ror
ror
sti
gs
push
cmps
sahf
sub
and
dec
xor
mov
add
fild
sub
das
adc
pop
pop
test
arpl
sbb
mov
out
loope
inc
inc
test
sub
xor
lock
leave
(bad)
hlt
lock
jbe
jmp
(bad)
call
cs
cld
fwait
repnz
loopne
in
push
gs
adc
dec
push
lock
inc
jmp
nop
in
or
outs
fldcw
or
xor
adc
or
in
cdq
mov
pop
out
or
xor
xchg
sbb
jp
and
dec
scas
in
push
cmp
in
(bad)
push
mov
pop
adc
mov
pop
out
pusha
call
les
and
je
lea
inc
inc
or
xchg
cmp
in
pop
pop
das
and
ins
das
iret
jne
cmps
jecxz
adc
cmp
cld
out
iret
lock
inc
cld
int
dec
je
or
and
xchg
sub
js
je
jmp
mov
pop
int
xchg
(bad)
adc
xor
and
dec
and
sbb
push
cmp
inc
lea
and
and
xchg
inc
sbb
ja
mov
push
mov
sub
mov
jge
mul
jo
dec
aam
inc
xor
sbb
fnstenv
push
add
jecxz
adc
jb
adc
adc
pop
xor
pop
sbb
pop
icebp
and
add
lods
xchg
pop
jg
pop
(bad)
cmp
cmp
(bad)
xchg
adc
imul
jecxz
rol
data16
mov
mov
inc
cmp
sahf
jne
fimul
adc
je
cmp
mov
jns
push
ret
xchg
sub
pushf
aam
inc
call
or
xor
jae
nop
cmp
fs
outs
sbb
add
xor
sti
or
cmp
or
inc
nop
fcom
xchg
or
pushf
jno
fadd
fsub
mov
xor
xchg
dec
add
(bad)
ins
adc
push
psadbw
sub
push
cmps
push
rcr
sbb
nop
push
inc
or
pop
jg
push
or
cmp
out
push
inc
and
push
cwde
inc
jmp
add
movs
sbb
jl
mov
dec
enter
dec
sub
aam
popa
sbb
sub
pop
xchg
imul
add
pop
xchg
add
pop
push
jbe
cld
xchg
je
push
dec
test
inc
pop
sbb
or
inc
pusha
gs
xchg
out
sbb
pop
or
add
dec
imul
in
jle
or
outs
test
nop
rol
outs
sbb
sub
and
mov
dec
outs
ins
jns
nop
mov
inc
arpl
jo
add
shl
fcom
aaa
out
inc
pop
add
mov
jbe
outs
stos
dec
gs
pop
adc
sub
cs
in
or
jne
add
loopne
rcr
cs
push
inc
jbe
and
pop
cmps
jns
test
xchg
imul
cmp
or
cmps
rol
jo
into
mov
xchg
jl
lock
imul
inc
inc
jb
mov
dec
ins
mov
ins
pop
inc
xor
mov
xchg
or
and
adc
cld
js
dec
sahf
pop
ins
or
inc
dec
mov
adc
push
ins
fimul
jb
ret
lods
scas
inc
scas
inc
lods
push
inc
push
mov
inc
push
inc
outs
jne
nop
or
dec
cmp
(bad)
or
push
gs
lods
inc
cs
fs
mov
push
xor
adc
mov
pop
mov
and
scas
adc
adc
movs
loopne
cmps
adc
imul
push
or
out
mov
shl
push
in
mov
mov
mov
add
mov
push
jo
sub
outs
push
add
push
adc
outs
jbe
fs
and
jb
adc
add
and
dec
les
push
lock
add
push
add
jo
push
shl
pusha
mov
xor
dec
jno
adc
scas
dec
jno
sub
xor
fwait
push
pop
push
pushf
cmps
add
mov
fsubr
test
mov
fidiv
cmp
dec
cwde
sahf
push
mov
mov
cli
(bad)
call
movs
lods
adc
mov
add
clc
mov
enter
fimul
movs
adc
int3
int3
(bad)
sbb
repz
fld
inc
sub
sub
jno
icebp
sub
(bad)
push
cmc
xchg
je
mov
or
xchg
push
jno
pop
add
inc
(bad)
adc
and
fbld
adc
test
cdq
fs
sbb
outs
fiadd
imul
or
test
mov
nop
mov
mov
pop
mov
fmul
outs
pop
int3
push
adc
je
fdivrp
push
sbb
dec
fisttp
lock
cmps
sar
push
fbstp
shr
(bad)
cld
(bad)
sti
cmp
jnp
push
jl
add
enter
adc
and
pop
xor
emms
push
adc
pushf
inc
fsubr
rcl
sahf
cmps
nop
scas
cmp
mov
xor
xchg
jne
inc
jne
pop
ss
enter
int3
test
push
fbstp
(bad)
push
lods
addps
pop
xchg
mov
push
fdiv
push
test
fcmovnu
jnp
jbe
push
adc
pop
push
out
cmps
data16
aaa
pusha
neg
jnp
nop
push
in
mov
xchg
jl
jo
add
adc
or
sbb
and
je
bound
add
mul
daa
sbb
je
mov
sahf
aaa
cmp
pop
mov
push
xchg
cwde
loope
in
jo
or
inc
push
cmp
adc
fistp
push
adc
jnp
pop
mov
mov
hlt
mov
xchg
mov
mov
xchg
inc
in
movs
mov
push
or
mov
jg
pop
and
mov
jne
aam
add
test
jbe
test
mov
shl
inc
mov
push
adc
mov
ja
pusha
ja
test
aas
sbb
mov
mov
nop
mov
ins
xor
push
dec
into
ins
gs
and
mov
ins
ret
and
and
inc
in
imul
xor
js
cmovae
adc
pusha
rol
and
cwde
rcl
aam
xor
imul
ds
in
mul
imul
ret
ret
inc
sbb
sti
push
mov
or
jns
or
test
les
aam
not
ss
push
(bad)
pop
pop
jb
xchg
in
or
or
and
jb
adc
jb
pop
jb
and
push
add
sbb
loope
mov
cmp
push
add
iret
repz
push
loopne
push
arpl
lea
iret
repz
test
or
popf
or
inc
icebp
jne
scas
add
shl
cmp
jp
ja
cmps
xor
ss
es
cmps
test
fsub
popa
push
repz
ins
sub
xlat
mov
nop
cmp
aas
or
and
mov
push
lock
(bad)
jle
pop
mov
shl
xor
jne
inc
add
push
push
jnp
pop
xchg
retf
and
jbe
call
dec
jnp
fmul
(bad)
jo
cdq
jo
int3
push
push
test
scas
int
ds
push
test
cmps
sar
(bad)
or
mov
pushf
pop
in
push
sar
repnz
out
mov
test
fistp
inc
mov
pop
inc
test
in
aaa
daa
pop
cmps
pusha
jge
mov
dec
aaa
xchg
push
inc
cmps
push
test
inc
ja
fild
add
popa
sbb
pop
nop
sbb
push
sub
movs
(bad)
cmova
inc
sbb
loopne
pop
call
rcl
stos
mov
mov
mov
out
add
test
push
xchg
mov
aaa
das
push
sbb
mov
xchg
inc
aam
add
push
out
push
out
ds
stc
fld
jle
sbb
(bad)
call
pop
sbb
inc
(bad)
int
dec
add
sub
or
mov
add
in
int3
ret
mov
push
inc
jle
ret
aaa
adc
jg
push
push
jo
out
pop
jg
ss
inc
(bad)
pusha
sbb
sub
mov
sbb
push
adc
inc
addr16
push
mov
neg
push
hlt
push
push
and
or
add
sub
pushf
sbb
cmps
jp
mov
pop
sbb
jmp
(bad)
clc
push
push
push
push
push
push
jns
idiv
jmp
(bad)
clc
out
jns
out
rcl
loopne
(bad)
mov
push
mov
push
pushf
in
sub
xlat
pop
and
ret
pop
aam
mov
adc
(bad)
ds
sub
int3
pop
add
mov
mov
out
add
inc
shl
xor
add
dec
das
out
mov
push
sub
test
or
inc
push
mov
mov
mov
hlt
ss
push
push
imul
jb
mov
pop
pop
push
cmps
les
sub
inc
pusha
outs
cmp
repz
nop
fs
out
call
mov
push
dec
(bad)
stc
jge
dec
pop
sbb
push
data16
popf
push
jae
push
push
add
fs
push
gs
xchg
nop
dec
pop
and
in
cmp
cmp
je
or
add
adc
in
mov
and
addr16
jb
jne
xor
inc
mov
cmp
cmp
xchg
jo
add
xchg
jae
lahf
inc
xor
or
cmp
pop
push
xor
sub
jl
mov
out
test
les
inc
xor
and
bound
cwde
ss
xchg
dec
or
or
or
aad
ret
add
or
inc
dec
jne
mov
pop
pop
test
inc
movs
scas
pop
adc
call
(bad)
call
inc
mov
pop
ret
sub
pushf
jne
push
inc
call
and
in
ins
out
mov
sbb
adc
(bad)
(bad)
dec
pusha
mov
add
or
inc
(bad)
jmp
loopne
push
mov
xor
dec
out
mov
jo
inc
add
sub
pop
xor
mov
stc
pop
jl
mov
inc
jmp
xor
test
mov
xor
or
or
or
xchg
mov
fnstsw
ret
sar
clc
mov
jge
push
push
loop
call
mov
inc
xlat
and
and
xlat
loope
xor
stos
pop
pop
mov
mov
inc
or
enter
push
aas
sbb
lds
lds
or
push
cld
pop
add
les
pop
adc
push
push
jecxz
test
test
or
loope
cmps
pop
add
ins
fdivr
dec
pop
or
test
add
push
jo
(bad)
cdq
and
or
adc
pop
ins
adc
jne
mov
adc
adc
es
dec
sbb
ret
gs
loop
adc
ror
jmp
add
xor
mov
inc
push
lock
outs
cli
cmp
shl
out
mov
cmp
or
xchg
mov
add
push
xor
mov
imul
pop
imul
cmp
dec
dec
and
test
sub
xor
adc
add
stos
out
cmp
pop
ret
push
icebp
je
mov
inc
mov
fwait
nop
nop
push
cmp
xor
mov
rcl
xchg
call
push
sar
jo
ret
pop
pop
mov
mov
repnz
cmp
adc
mov
cmp
call
out
lock
mov
call
arpl
cmps
pop
out
inc
dec
jne
(bad)
sub
adc
mov
push
jge
dec
xchg
vmovupd
cdq
push
mov
or
jg
shr
lods
push
cli
ficom
aaa
nop
jmp
add
xchg
pop
ds
popf
push
cmp
xchg
dec
xor
mov
mov
cmp
jp
push
inc
cld
push
pop
loopne
push
inc
cmp
or
mov
jg
mov
js
inc
jp
mov
cwde
mov
xor
inc
(bad)
xor
rol
adc
xor
cmp
push
or
imul
ja
pop
rol
pop
push
sbb
or
push
inc
add
les
mov
add
sub
xor
xor
and
(bad)
hlt
je
mov
inc
mov
ret
push
or
mov
icebp
cmp
test
jne
push
xor
test
push
inc
(bad)
jecxz
(bad)
ficomp
sub
mov
xchg
fistp
jne
adc
fidivr
mov
adc
test
pusha
cmps
and
iret
add
jne
cmps
xor
pop
retf
out
psubsw
or
hlt
sti
xchg
mov
in
int
pop
nop
sbb
mov
pop
(bad)
nop
scas
nop
(bad)
pop
pop
gs
or
or
sti
jmp
bound
hlt
sbb
push
sti
clc
scas
icebp
arpl
pop
xor
add
int3
sub
jns
std
test
cmp
test
ficom
mov
push
popa
cmc
push
hlt
mov
das
bound
cmp
daa
add
cmp
sub
add
arpl
pusha
pop
je
(bad)
out
sbb
add
dec
(bad)
inc
stos
ret
pop
inc
add
mov
int
dec
ret
sub
xor
xor
push
fstp
mov
cs
cmp
rcl
pop
jg
ret
ret
pop
mov
sub
imul
add
ror
inc
pop
adc
or
inc
mov
ror
ret
fist
ror
imul
or
mov
mov
es
xor
dec
mov
push
popa
and
ret
fadd
push
call
(bad)
inc
cld
lahf
mov
sahf
mov
pop
jl
inc
or
jnp
push
out
sub
push
jmp
jmp
(bad)
je
add
and
cmp
shl
or
scas
or
cdq
or
mov
and
push
and
pop
mov
add
imul
out
lahf
imul
cld
mov
add
jbe
jns
jg
xor
pop
fldenv
push
jns
mov
cmp
add
or
call
mov
mov
mov
popa
mov
(bad)
dec
nop
sbb
sbb
ss
test
dec
add
and
add
mov
test
jne
inc
mov
retf
call
enter
sbb
enter
addr16
mov
push
(bad)
popa
mov
cmp
sbb
pop
pop
(bad)
jmp
das
mov
pop
dec
cmp
jne
add
ins
inc
and
mov
mov
xor
mov
or
adc
(bad)
jno
dec
mov
fist
stos
pop
sub
enter
add
dec
cld
mov
jmp
ret
or
loope
cmp
push
lods
xor
jg
sbb
and
add
cmc
std
add
aas
(bad)
mov
pop
fs
jns
popa
mov
mov
pop
push
mov
(bad)
fcom
and
fldenv
add
(bad)
mov
pop
sub
or
xchg
or
mov
xor
xchg
pop
cs
or
sbb
shr
loop
call
inc
push
and
out
shl
add
add
push
adc
pop
ret
ja
sub
ret
mov
xor
or
pop
shl
loopne
pusha
ja
adc
js
mov
sti
jg
jno
retf
cmp
arpl
cmp
push
(bad)
aaa
xchg
push
js
mov
mov
mov
cli
cwde
ss
int3
xchg
outs
loopne
fdivr
mov
or
ret
jge
mov
pop
arpl
dec
inc
adc
xchg
sbb
ror
out
inc
pop
mov
add
push
xor
cmp
leave
mov
push
or
adc
sub
push
jne
aaa
ds
push
pop
pop
nop
arpl
jecxz
sbb
xchg
mov
dec
push
cmp
jmp
dec
sar
pop
adc
pop
ins
ret
pop
mov
test
sub
outs
jl
int3
mov
jle
dec
cld
pop
fnstcw
or
pusha
mov
inc
and
jecxz
adc
mov
inc
xchg
ret
fdiv
mov
and
pop
sub
or
test
movs
mov
pop
push
std
sub
in
or
xchg
cmp
inc
xchg
jbe
das
loope
mov
ds
add
add
xchg
ds
cmps
mov
mov
and
clc
call
cmp
pop
mov
ret
jmp
jle
movs
adc
pop
sbb
call
in
push
rcl
out
xchg
jns
or
std
push
mov
mov
out
sub
loope
lock
test
adc
push
das
or
inc
cmp
or
sbb
pop
sub
cdq
hlt
out
xchg
pop
or
ds
jne
push
arpl
adc
sub
cmp
pop
jne
cmp
aam
aam
cmp
push
add
pop
push
test
inc
inc
not
hlt
cmp
xchg
bound
clc
and
stc
add
xor
sbb
jo
fucomp
mov
mov
fmul
add
inc
and
xchg
add
cmp
scas
adc
mov
or
xlat
sub
add
(bad)
mov
xor
mov
add
add
subps
sub
push
in
sbb
cmp
push
loopne
jno
add
or
loop
jge
sub
enter
add
loop
adc
or
sbb
cmc
mov
icebp
or
pusha
pusha
rcr
sbb
push
push
(bad)
call
jbe
add
xchg
add
or
add
sbb
jne
(bad)
fbld
lods
pop
pop
inc
mov
pop
sbb
jae
jo
into
clc
push
cwde
jmp
pop
arpl
lock
movs
mov
(bad)
xor
jmp
cmps
loope
outs
mov
ret
fbstp
ins
test
or
sbb
aaa
add
or
cli
inc
jle
mov
test
and
fcmovu
xchg
rol
stc
add
adc
push
mov
loope
add
rcl
pop
or
add
dec
or
xchg
pop
add
adc
jne
sbb
leave
dec
scas
pop
push
inc
rcl
std
jle
sub
inc
jae
push
sbb
add
and
or
and
cdq
inc
icebp
movs
cmp
je
not
adc
fidivr
xchg
adc
sub
out
loope
dec
jecxz
div
dec
push
mov
sar
add
push
add
scas
sub
or
adc
scas
or
fld
xchg
(bad)
add
pop
mov
cli
outs
popf
pushw
loop
lea
sar
pop
in
inc
scas
sub
in
lock
test
jle
mov
add
loopne
icebp
adc
inc
hlt
xchg
dec
mov
(bad)
sub
jg
dec
mov
dec
dec
inc
jne
fimul
inc
and
inc
lods
xor
mov
add
inc
jbe
and
lock
scas
clc
xchg
or
sub
mov
dec
and
shl
rol
call
add
lds
mov
xor
(bad)
and
jmp
and
je
xchg
scas
dec
xchg
ins
xchg
inc
jne
lea
mov
jmp
dec
add
add
mov
or
leave
pop
fwait
cmps
inc
cmp
and
sub
xor
rcl
add
mov
pushf
or
and
mul
sar
add
inc
cmp
add
sub
outs
stos
dec
lock
add
cmp
jge
pushf
sar
ss
int
je
pop
add
shl
out
jg
mov
mov
shl
sbb
(bad)
jmp
call
out
je
fistp
outs
retf
lahf
mov
sbb
mov
mov
or
sar
rcr
xlat
call
xchg
add
ret
aad
cmp
int
mov
jo
mov
icebp
sti
sub
cmps
inc
or
leave
je
stos
adc
btr
ret
xchg
push
jle
cli
add
mov
cs
push
inc
adc
mov
jmp
dec
push
mov
dec
ja
cmp
push
dec
inc
call
push
test
adc
je
sbb
and
cmp
ja
add
lods
(bad)
loop
bt
jb
cmps
add
lods
pop
popf
(bad)
and
ret
les
inc
cmp
jne
inc
dec
jne
les
add
mov
push
xor
xchg
xchg
mov
push
push
ret
push
(bad)
(bad)
hlt
push
xchg
cdq
sbb
and
push
out
pop
ret
or
mov
adc
xchg
in
lock
add
sbb
sbb
rol
inc
pop
punpckhwd
or
or
pop
inc
rol
test
cmps
fild
ins
add
xor
push
mov
pusha
loop
inc
add
lea
or
inc
dec
inc
xor
jb
(bad)
popa
push
inc
sti
ss
ins
push
js
adc
jns
lahf
ss
mov
lahf
loopne
mov
pop
ja
cs
xor
fiadd
aaa
add
xor
and
push
jmp
cwde
mov
pop
sbb
addr16
mov
call
xor
mov
enter
or
inc
inc
inc
scas
or
enter
xor
imul
add
sbb
dec
movs
push
scas
movs
push
adc
pop
(bad)
push
push
or
inc
mov
dec
add
sub
idiv
ins
pushf
inc
test
je
add
mov
xchg
ret
add
daa
push
(bad)
sahf
pop
xchg
adc
loope
dec
adc
add
call
fsub
mov
lea
retf
sub
xchg
arpl
inc
daa
icebp
xlat
add
mov
dec
pop
not
(bad)
push
test
les
(bad)
bound
scas
xor
add
fadd
sbb
jmp
ja
jmp
mov
jne
pop
cmps
mov
mov
mov
xchg
sub
xchg
xlat
mov
(bad)
fst
aam
popa
je
test
push
cmps
in
addr16
cld
sbb
pop
cmp
dec
mov
adc
push
imul
lock
mov
push
pop
lock
lock
scas
pusha
hlt
jmp
add
and
cmps
jmp
(bad)
adc
je
in
addr16
movs
and
loopne
and
lock
sbb
xchg
adc
cmc
xchg
test
pop
and
cmp
repz
jo
push
dec
dec
mov
pop
xchg
xor
jne
hlt
cmp
dec
dec
push
mov
in
popf
es
mov
push
(bad)
adc
xchg
push
push
retf
add
rcl
ret
lea
sub
imul
push
bound
daa
fisub
call
inc
imul
mov
mov
inc
xchg
cmp
or
or
(bad)
in
jmp
scas
and
dec
or
icebp
inc
mov
pop
xor
outs
or
add
shr
mov
push
bound
enter
pop
pop
jnp
call
punpckhwd
or
iret
dec
mov
shl
sbb
pop
xchg
and
cmp
fsubr
push
push
lahf
push
add
fmul
mov
(bad)
lds
inc
or
clc
xchg
push
dec
pop
inc
pusha
in
bound
push
jbe
inc
popa
nop
or
or
dec
inc
or
pushf
aas
xchg
repz
ins
mov
jne
outs
jge
aaa
adc
xchg
test
xor
jmp
(bad)
or
dec
pop
mov
cmps
push
adc
sub
dec
cmp
cmpps
(bad)
je
push
mov
mov
dec
add
mov
mov
fisubr
movs
xor
ret
pop
in
mov
inc
cmp
sub
pop
xchg
or
jb
call
dec
test
jl
inc
xchg
hlt
mov
mov
inc
cmp
jbe
out
pop
jne
sbb
nop
cmp
loopne
ficomp
pop
adc
push
sbb
inc
dec
jne
mov
cmps
cmp
imul
pop
aas
mov
inc
add
pop
stos
(bad)
jne
out
(bad)
fwait
mov
fidiv
leave
icebp
xchg
cmc
push
adc
xchg
inc
adc
jge
fdivrp
inc
adc
mov
aas
nop
adc
push
dec
push
test
call
(bad)
mov
push
mov
mov
popa
xchg
xor
inc
add
add
mov
dec
sub
jb
dec
je
jmp
mov
iret
pop
stos
icebp
cdq
test
in
adc
nop
pop
push
sub
pushf
mov
push
mov
xlat
sub
(bad)
pop
add
stc
xchg
movs
shl
les
ret
jmp
hlt
daa
add
sbb
pop
and
sub
mov
dec
sub
xchg
add
sub
cdq
pop
sbb
enter
fld
and
add
call
ret
inc
outs
add
add
test
bound
cmp
arpl
retf
jbe
push
(bad)
fdiv
mov
inc
add
pop
mov
add
add
inc
andps
inc
fisttp
mov
xchg
add
mov
push
or
dec
mov
inc
div
sbb
inc
div
(bad)
dec
clc
shr
retf
stos
xchg
add
adc
rol
lahf
ret
mov
mov
aad
inc
clc
inc
pop
sub
je
cmp
inc
add
and
push
add
mov
adc
inc
loopne
pop
pop
and
push
push
jns
add
sbb
or
je
cmp
in
add
neg
ds
not
fsub
enter
jp
xor
lock
in
dec
push
in
adc
or
push
ds
mov
sbb
sbb
and
iret
call
pop
pop
stos
stos
inc
scas
pop
aad
iret
shl
push
jmp
cmp
xlat
lock
enter
hlt
jns
push
cwde
jbe
inc
lods
scas
push
sub
pop
add
pop
and
dec
and
stos
and
(bad)
mov
rcr
call
clc
sbb
and
mov
inc
cmp
mov
nop
fneni(8087
or
push
aas
xchg
mov
push
popa
in
xor
bound
lds
pop
lods
lods
shr
dec
test
int
shl
loopne
loopne
push
push
adc
cs
sub
adc
retf
xor
inc
ficom
aam
mov
cmp
mov
sbb
sbb
dec
data16
std
test
inc
add
lahf
push
pop
add
es
fcom
or
mov
adc
fwait
inc
add
sbb
push
test
cmps
ins
pop
add
ret
add
cmp
out
cmc
jo
imul
imul
dec
jno
loopne
add
xchg
or
loopne
inc
ret
push
sub
test
clc
ins
int
js
or
dec
cld
sbb
scas
ror
dec
fcom
push
add
sub
mov
das
in
inc
push
cs
in
sbb
adc
mov
inc
data16
inc
xchg
mov
(bad)
pop
adc
pop
bound
jge
enter
pop
and
nop
outs
fs
lock
outs
pop
scas
into
inc
xor
xor
pop
and
(bad)
les
sub
xlat
cmp
je
mov
out
or
cmp
arpl
lock
scas
xor
adc
or
cmp
das
mov
mov
mov
push
cmp
push
cld
xchg
fild
and
clc
call
inc
push
xlat
clc
jmp
mov
sub
sti
or
lock
inc
mov
or
jmp
gs
ret
or
sub
loop
add
ins
mov
mov
pusha
add
test
add
dec
clc
rol
xor
repz
gs
xor
add
jnp
clc
pop
dec
push
jmp
mov
sbb
arpl
xchg
pop
pop
daa
jmp
pop
fst
mov
add
les
mov
loopne
sbb
sub
nop
repz
lea
add
cwde
in
inc
rol
sbb
cli
push
cmp
mov
pop
mov
xchg
push
add
daa
push
xchg
add
js
jbe
ret
mov
adc
leave
mov
push
sti
pop
add
call
mov
xchg
pusha
push
mov
mov
pusha
gs
pop
dec
jmp
xchg
pushf
push
jge
fidiv
das
sbb
(bad)
je
push
jo
nop
daa
push
mov
push
adc
mov
cmp
pop
cmps
inc
and
popaw
and
adc
fmul
mov
enter
les
(bad)
aam
cmp
jmp
inc
mov
dec
or
or
sub
add
push
xchg
xor
adc
cmp
mov
jne
add
sub
mov
daa
mov
mov
in
mov
dec
mov
icebp
mov
pop
movs
adc
add
add
and
mov
and
mov
mov
das
call
and
movaps
cmp
xchg
sub
scas
mov
inc
or
and
adc
je
dec
sub
sbb
adc
cmp
xchg
or
cs
imul
xchg
fsubr
sbb
inc
sbb
dec
je
jmp
sub
fadd
inc
and
push
adc
push
or
jbe
mov
mov
gs
and
mov
enter
add
pop
ret
aaa
sub
lods
rcr
sub
(bad)
xchg
adc
and
adc
inc
mov
pop
sub
push
cmp
adc
jl
add
test
ja
sbb
inc
stos
fld
inc
mov
shr
or
sar
(bad)
mov
mov
iret
or
ins
add
or
outs
mov
mov
adc
mov
mov
dec
popa
ins
aaa
stos
add
pop
add
add
cwde
fiadd
int3
clc
fisub
dec
js
push
mov
mov
cmp
aas
mov
(bad)
jmp
mov
retf
aam
and
fs
cs
rcl
add
mov
dec
mov
fisttp
sbb
jle
mov
mov
mov
adc
leave
adc
iret
out
mov
(bad)
iret
push
ins
aas
arpl
sbb
push
adc
aas
ins
xlat
mov
aam
add
dec
push
sbb
repnz
pop
mov
retf
push
ret
stc
mov
cmp
pop
push
cmps
xchg
inc
outs
cmp
scas
popf
aam
sbb
in
mov
mov
pop
(bad)
sub
loop
add
cmps
lock
sbb
and
ins
fs
call
sti
test
sbb
and
xor
mov
jmp
jne
cmps
mov
mov
repnz
nop
and
ret
jns
dec
test
and
pop
icebp
(bad)
inc
adc
stos
and
pop
xchg
and
push
dec
push
ror
push
inc
pop
lea
fsub
ror
pushf
add
add
lock
scas
fist
in
add
and
clc
inc
sub
jg
cmp
jl
aaa
jge
add
xchg
cmp
jne
push
imul
xor
dec
js
fild
mov
clc
jle
inc
into
loope
les
aas
add
jl
clc
adc
shl
lea
mov
out
or
add
je
jb
mov
shl
inc
adc
or
shl
hlt
or
or
pop
mov
mov
je
xchg
xchg
inc
push
jge
rcl
add
add
jns
and
sub
bound
cmp
sub
int3
xchg
and
add
push
loope
test
hlt
push
movs
or
out
ds
adc
ins
ret
in
jp
jno
dec
sub
add
call
and
xlat
jbe
mov
jb
xchg
(bad)
mov
std
push
test
or
jg
xor
add
xor
inc
retf
and
jle
stc
inc
push
push
adc
push
push
dec
pop
ror
lock
cmps
icebp
mov
mov
mov
dec
imul
xor
rol
ror
pop
es
fild
movs
pop
cld
ja
add
add
sub
mov
mov
adc
cmp
cs
ss
stos
lock
ficomp
jne
bound
adc
ja
xor
push
out
adc
inc
inc
add
clc
jecxz
nop
stos
and
pushf
add
cdq
push
mov
dec
movs
add
gs
and
sbb
cmps
push
xchg
xchg
cmp
ss
je
pusha
mov
inc
sbb
or
sbb
iret
(bad)
inc
pop
jbe
pushf
push
and
sbb
mov
and
cmp
sbb
xchg
or
adc
push
std
cmp
cld
shl
mov
push
dec
in
mov
loopne
dec
out
call
lods
cmp
adc
jae
jbe
add
xor
xchg
push
jp
das
mov
in
lods
xor
imul
push
mov
xchg
(bad)
mov
add
test
hlt
dec
cmps
icebp
or
mov
or
jnp
fimul
mov
push
test
jmp
lahf
out
mov
sbb
dec
and
ror
mov
imul
std
dec
mov
mov
jp
test
icebp
add
mov
xchg
xchg
jns
inc
ret
push
add
rcr
or
mov
mov
cmp
mov
sbb
pop
popf
xchg
shl
xchg
adc
xlat
pop
js
add
mov
mov
pop
xor
test
jo
jo
and
and
and
sbb
mov
add
leave
sbb
shl
jne
mov
and
adc
aam
enter
ss
add
jne
or
xor
or
rol
or
xor
aas
jmp
movzx
adc
add
add
mov
je
sbb
push
mov
or
fdivr
mov
test
cli
jae
sub
test
cli
inc
add
icebp
repnz
mov
add
rcl
out
or
ss
add
push
cmp
je
dec
jno
fisttp
jmp
pushf
or
add
add
sbb
ret
(bad)
cwde
mov
mov
and
icebp
mov
or
or
push
jmp
sbb
inc
inc
adc
push
add
push
add
mov
or
mov
add
pop
pop
mov
lods
add
mov
mov
or
fadd
adc
adc
and
adc
push
loope
loopne
gs
and
push
cmp
fcom
mov
push
mov
clc
in
cs
inc
clc
pop
add
rcr
sub
sbb
mov
daa
or
xchg
push
adc
and
xor
add
push
loop
push
test
jmp
push
push
outs
xor
add
nop
jle
cmp
jle
or
adc
or
mov
mov
popf
and
pop
sbb
adc
psubusb
mov
popf
rcr
or
mov
retf
mov
sub
push
aas
xchg
dec
and
addr16
and
stos
xchg
push
nop
add
sub
push
cvtpi2ps
adc
imul
inc
cld
aad
in
call
test
pop
mov
pop
nop
fild
push
stc
xor
adc
jl
adc
sahf
mov
js
pop
jg
xor
sbb
adc
dec
cld
outs
jns
mov
ja
outs
and
jno
mov
mov
outs
mov
jg
sbb
ja
jmp
daa
inc
or
push
jno
je
and
ret
lods
lds
call
lds
sbb
add
das
fadd
sub
sub
xor
dec
xlat
or
imul
nop
and
pop
push
popa
popf
cmp
(bad)
or
ja
out
mov
nop
ret
aas
mov
scas
or
adc
inc
ins
xchg
jmp
fs
adc
add
fbld
imul
lods
inc
mov
out
mov
hlt
mul
pop
dec
add
mov
sub
mov
(bad)
cmc
add
sbb
(bad)
les
add
cmp
inc
or
(bad)
and
sub
loop
scas
pop
(bad)
jns
mov
adc
test
rol
push
push
(bad)
mov
shl
shr
pop
popf
push
fiadd
sub
ja
call
ret
arpl
loopne
(bad)
clc
jge
add
leave
cld
ds
add
addr16
jmp
jmp
add
or
mov
cmps
icebp
out
inc
jl
(bad)
repnz
mov
enter
adc
jae
mov
pop
or
push
adc
into
ds
inc
mov
enter
adc
pop
dec
push
dec
jp
mov
aaa
inc
fistp
push
mov
adc
das
and
or
(bad)
call
out
add
lods
mov
xchg
and
add
add
retf
and
mov
or
push
cmp
sbb
dec
xchg
inc
cld
dec
psubusb
mov
cmp
inc
add
xor
jmp
or
add
enter
cmc
cmp
or
pop
nop
mov
xor
add
jecxz
popf
mov
cmps
jp
mov
scas
push
(bad)
mov
mov
xchg
aaa
push
or
adc
push
push
(bad)
leave
test
mov
sbb
mov
out
(bad)
add
and
clc
fldenv
lea
cmp
inc
or
call
sbb
(bad)
clc
xchg
cmp
fiadd
inc
test
imul
inc
mov
(bad)
or
mov
(bad)
inc
jl
and
cli
xor
sbb
rcl
xchg
mov
and
or
inc
jb
inc
jg
sub
cmp
adc
jb
xor
mov
retf
jne
add
cwde
mov
mov
add
clc
xchg
mov
push
add
push
stos
jl
rcl
arpl
loopne
adc
sub
dec
cbw
pop
add
sbb
mov
outs
pop
jg
and
pop
cmp
mov
sbb
ins
lock
mov
clc
pop
or
jo
(bad)
adc
data16
clc
bound
add
inc
adc
lea
mov
add
shl
jnp
repz
ret
xor
in
mov
cmps
add
(bad)
adc
or
cld
pop
jg
in
dec
and
mov
adc
cmp
add
mov
xchg
hlt
mov
add
leave
mov
push
ss
hlt
xor
sbb
outs
dec
in
aam
jae
dec
dec
mov
bound
movs
jle
xchg
sar
scas
push
push
or
push
add
shr
call
xor
shl
mov
or
sahf
cmp
popf
pop
movs
lea
dec
or
sbb
adc
mov
or
adc
les
xchg
and
cmp
movs
cmp
nop
xor
sub
push
and
std
cmps
enter
clc
mov
sbb
pop
sub
cdq
mov
or
or
push
dec
mov
in
sub
push
pop
into
mov
ret
(bad)
or
jg
jns
nop
sbb
nop
pop
daa
jecxz
int3
js
push
iret
push
out
push
aam
jl
add
xchg
jge
adc
int
fsub
push
les
add
test
or
push
sti
adc
clc
(bad)
arpl
lds
ss
xor
shl
ror
mov
xor
leave
xor
fsub
jne
cs
and
xchg
sar
sbb
outs
mov
dec
adc
stos
enter
mov
rol
sub
xor
es
cmp
nop
push
add
jbe
inc
loopne
test
inc
pop
stos
pop
in
sbb
jg
mov
(bad)
jnp
jle
movsx
add
test
vmptrst
sub
jb
pop
inc
xchg
xor
cmp
xor
loopne
pop
mov
cmps
jl
cmp
sahf
jne
lods
add
or
pop
dec
pop
(bad)
jmp
mov
inc
push
inc
outs
adc
jle
push
daa
push
pusha
pop
cmp
pop
pop
xchg
xchg
push
xchg
sub
inc
mov
mov
jmp
mov
xor
(bad)
jmp
ja
mov
jg
sbb
fnstenv
mov
push
sub
mov
xchg
jmp
retf
sbb
movs
mov
mov
call
xchg
pop
or
jne
pop
pop
pop
iret
pop
sub
jl
dec
retfw
mov
retf
mov
mov
xchg
xor
(bad)
loopne
push
cmp
and
adc
fwait
ror
or
push
popf
mov
mov
dec
adc
add
mov
mov
sar
inc
mov
pop
(bad)
cmp
jmp
lods
mov
cmp
add
retf
push
or
jg
retf
arpl
or
adc
mov
and
push
sbb
pop
push
inc
xchg
adc
(bad)
sub
inc
or
xor
add
adc
inc
inc
cmp
loope
pop
ret
push
push
call
push
mov
retf
sub
push
add
or
call
sbb
push
in
pop
sbb
adc
ror
push
and
sub
xor
hlt
imul
xchg
ins
xor
test
lds
sahf
pusha
mov
inc
lock
add
pop
mov
shl
mov
add
addr16
pop
dec
sub
retf
sbb
popa
clc
(bad)
jmp
mov
addr16
aam
xor
mov
sub
sti
je
gs
add
cmp
pop
aam
push
sub
imul
sub
xor
dec
icebp
push
sbb
call
out
cmp
in
adc
mov
enter
mov
sub
into
dec
fadd
pop
mov
popa
repz
pop
adc
sbb
xor
mov
pop
jmp
clc
sar
inc
sahf
cmp
and
jns
jl
pop
neg
call
je
adc
sar
or
pusha
cmp
dec
jne
test
push
fwait
test
les
call
pop
aad
shl
xchg
xor
mov
adc
fimul
add
lods
mov
jmp
call
push
in
add
sbb
add
push
pusha
sbb
mov
or
or
or
or
mov
push
pop
adc
push
repz
lea
repz
xor
in
loopne
add
pop
sub
fdivr
out
out
sbb
mov
cmp
arpl
add
dec
imul
ds
pop
inc
xlat
fild
into
movsx
xlat
xor
mov
or
pop
pop
add
popa
mov
int3
fs
jmp
lock
mov
sub
outs
rol
sbb
fdiv
adc
fcomp
jge
popa
sub
add
fwait
inc
repz
maxps
adc
clc
int
test
int
ror
adc
or
cs
aam
or
mov
push
cmp
icebp
(bad)
fild
cmp
fld
in
lahf
and
xor
(bad)
ja
fwait
lahf
add
fstp
add
ret
mov
adc
sbb
loopne
add
or
or
push
(bad)
push
in
fisttp
bound
mul
push
fld
scas
fild
cmp
ja
imul
mov
test
add
or
and
add
fidiv
int3
push
ficom
div
add
and
(bad)
stc
fild
sbb
sub
sbb
retf
jmp
sbb
and
adc
jmp
std
sub
popa
ins
jae
pop
pop
push
jb
add
add
mov
or
ins
ins
mov
sbb
pop
or
sbb
push
ss
(bad)
pusha
mov
sbb
jae
dec
dec
xor
mov
add
pop
pop
sub
mov
jne
in
mov
pop
cdq
mov
ja
mov
pop
xchg
mov
in
fist
or
mov
mov
jne
mov
and
test
adc
pop
jo
inc
or
pop
fisubr
xor
jecxz
jp
jmp
(bad)
pop
adc
retf
jmp
lea
or
push
dec
test
test
add
jne
xchg
inc
adc
pop
adc
push
push
(bad)
movs
or
or
daa
call
test
xor
(bad)
xchg
mov
jno
sub
test
inc
push
jg
fimul
inc
imul
or
les
jns
or
jo
fdivrp
lock
cmp
cdq
arpl
sbb
xor
mov
jmp
add
sti
data16
scas
pop
(bad)
or
cmp
jne
xor
jnp
mov
mov
ins
pop
and
inc
shr
call
cmp
push
pushf
out
push
and
mov
jo
rcr
pop
mov
xchg
jo
jno
jno
aas
popa
adc
jmp
dec
pop
(bad)
mov
sbb
ror
ds
and
call
add
test
add
xor
cld
mov
add
sbb
adc
xor
fcmovbe
retf
push
outs
sti
ds
cmp
xor
xchg
cmp
addr16
xchg
and
aas
fimul
xlat
cmp
mov
sbb
jg
pop
push
jo
mov
(bad)
sar
rcl
sgdtd
stos
vmread
sahf
sub
or
add
outs
xor
sar
push
fnstcw
cld
xchg
add
mov
mov
jp
fild
lock
sti
fwait
xor
loopne
lea
push
hlt
mov
add
add
fild
lock
imul
adc
fisubr
or
jne
sbb
add
mov
inc
cmps
adc
sub
jmp
mov
(bad)
aas
clc
jge
dec
clc
xor
dec
clc
out
fsubr
nop
bound
in
xor
mov
mov
xchg
push
inc
or
aam
out
stos
loop
cmp
daa
add
sub
les
jge
jne
fisub
jnp
test
or
inc
stc
sbb
cld
adc
xchg
adc
mov
ror
loope
iret
repz
push
inc
data16
sti
sub
inc
daa
test
nop
pop
pop
xchg
cmp
cdq
jnp
mov
push
retf
jns
call
daa
add
inc
push
shl
sbb
pop
(bad)
xor
dec
ret
shr
aaa
jo
adc
push
cmp
cs
test
cmp
movs
in
neg
mov
loopne
and
loopne
and
fsubr
xor
and
mov
(bad)
into
mov
jl
push
loopne
mov
push
rcr
cmp
add
or
xor
push
fnstcw
mov
cmps
loope
add
lea
sbb
mov
into
sbb
mov
movs
sub
outs
(bad)
mov
sub
xor
sbb
adc
and
add
shl
out
mov
bnd
push
(bad)
pop
jmp
jg
arpl
mov
push
aas
sub
iret
sub
push
jns
in
out
loop
and
or
sub
pop
inc
pusha
add
(bad)
das
push
add
cwde
lock
mov
mov
push
rcl
gs
inc
push
jge
test
xchg
mov
dec
jecxz
jmp
push
call
inc
mov
pop
and
push
add
jle
fcomp
pushf
and
or
outs
out
loope
gs
cmp
jae
dec
sbb
test
out
hlt
adc
jnp
jne
js
xchg
retf
movs
ret
and
(bad)
add
jp
push
aad
jmp
fcomip
add
inc
iret
or
ss
mov
lar
out
aaa
ret
shl
mov
mov
sbb
lock
jp
push
hlt
sbb
in
jne
add
and
sub
adc
xor
adc
sar
push
ror
xor
adc
xchg
mov
or
inc
xor
retf
movs
sbb
enter
das
xchg
mul
cli
add
dec
movs
lock
fsub
dec
pop
dec
push
rcl
add
imul
xchg
mov
fistp
jo
shl
add
imul
sub
sub
cmp
cld
mov
jle
ins
daa
pop
xor
in
mov
cs
jns
ss
xor
pop
xor
cmc
cmp
push
add
adc
movs
xor
mov
inc
mov
jp
out
std
push
rol
cmp
int
inc
mov
ins
xor
fisttp
pop
sub
add
adc
addr16
ja
loopne
int
bts
jmp
frstor
stos
mov
add
ret
aas
jge
and
add
mov
das
stc
pop
ret
daa
fwait
push
adc
pop
ret
outs
push
add
adc
dec
call
and
adc
add
sub
das
js
push
jmp
push
add
sub
sub
adc
or
push
pop
jmp
sub
push
cld
fld
and
clc
mov
dec
cld
jnp
call
call
cwde
and
js
out
jmp
add
and
push
cmps
pusha
jl
ja
adc
shl
add
pop
push
inc
popa
fmul
add
mov
cmp
add
push
clc
cdq
shl
outs
add
(bad)
out
inc
sub
jmp
pop
or
ja
adc
mov
xchg
mov
dec
push
adc
(bad)
or
pop
lods
xor
jmp
add
jmp
cld
mov
(bad)
fimul
push
out
adc
inc
sbb
ins
inc
dec
js
and
push
(bad)
les
scas
cmp
add
leave
mov
fldenv
fnsetpm(287
and
pop
test
aad
mov
popf
mov
ja
out
cmp
dec
fmul
call
out
cmp
xor
inc
cmp
idiv
pop
pop
pushw
outs
jle
cmp
repz
mov
ins
rcl
pop
pop
mov
dec
adc
or
xchg
or
xchg
call
pop
fnstcw
ror
ins
das
pop
adc
adc
cmp
mov
ss
fwait
sub
add
rol
loop
popa
repnz
and
push
or
in
adc
adc
scas
inc
data16
movs
add
or
or
cmp
or
and
pop
adc
pop
(bad)
cmp
or
fsubr
test
jb
cmp
cmovp
push
dec
aaa
(bad)
fwait
jge
cmc
call
sbb
jae
or
jecxz
mov
add
push
nop
pusha
mov
push
les
daa
pop
push
jmp
icebp
repz
mov
lods
bound
jno
push
dec
test
or
retf
ror
pushf
les
xchg
pusha
cmp
or
add
sub
inc
jmp
in
(bad)
adc
into
mov
imul
sub
dec
mov
push
add
and
(bad)
enter
(bad)
fwait
inc
push
pusha
fist
xchg
inc
adc
sar
nop
xor
and
loopne
jp
or
cmp
cmp
sub
mov
jmp
jmp
add
or
and
jmp
jg
imul
jns
in
xor
shl
ret
jmp
or
inc
xchg
dec
or
stc
cmp
dec
lods
dec
pop
cdq
push
xchg
stos
mov
and
xchg
aas
add
dec
lea
addr16
sub
cwde
es
fwait
jmp
xchg
adc
lock
outs
add
inc
in
sbb
outs
and
or
inc
das
add
jo
push
sub
dec
shl
adc
in
out
in
adc
mov
adc
push
push
mov
dec
das
jg
cwde
lock
add
mov
cmc
inc
sub
aas
sbb
xor
adc
popa
repnz
cmp
or
xchg
test
pop
dec
sbb
push
fldz
cmp
aaa
dec
lahf
das
int
pop
repz
arpl
mov
dec
ins
iret
mov
pcmpgtw
cmp
call
ret
movs
pop
daa
rcr
shl
mov
inc
push
dec
pop
add
(bad)
cs
xchg
or
daa
jl
das
sbb
xchg
dec
cmp
sub
cwde
mov
xor
arpl
mov
idiv
aad
pop
jl
sbb
sub
fimul
mov
jmp
mov
ret
loope
clc
mov
jno
and
xor
dec
or
pop
icebp
and
in
fbstp
xchg
add
add
add
and
or
(bad)
rol
xchg
or
aaa
and
fs
adc
cmps
mov
sub
adc
pop
aaa
sbb
rol
(bad)
jg
mov
ret
lock
bnd
data16
dec
loope
aad
push
sub
sbb
adc
ret
inc
sbb
sub
aaa
(bad)
pusha
fpatan
cmps
(bad)
dec
or
dec
clc
xchg
sbb
idiv
mov
sub
push
mov
add
add
dec
mov
pop
movs
inc
sbb
fcomp
xchg
in
add
hlt
loope
or
add
arpl
dec
rcl
push
or
dec
ror
pop
push
hlt
or
mov
and
inc
adc
loope
retf
mov
ss
in
mov
invd
xor
iret
mov
or
daa
add
lock
add
lahf
call
mul
pop
shl
pop
cmp
cmc
(bad)
mov
push
push
mov
xchg
ja
xor
in
mov
adc
(bad)
in
add
mov
xor
adc
dec
loopne
inc
and
sbb
outs
(bad)
push
sub
pop
sub
jmp
xchg
xchg
cwde
inc
dec
pusha
and
mov
push
fst
frstpm(287
adc
test
or
std
fistp
dec
and
adc
dec
sbb
outs
je
push
pusha
test
pop
adc
cmp
movs
mov
pop
dec
jge
add
dec
rcl
mov
jae
mov
in
das
(bad)
push
test
pop
inc
mov
or
cs
push
inc
inc
call
xchg
into
add
test
arpl
inc
test
push
popa
push
or
pop
add
enter
and
lea
aas
mov
or
cli
inc
addr16
ins
fmul
clc
movs
push
sti
int3
add
and
pop
pminub
ret
add
dec
sub
sub
jle
in
loop
or
mov
fstp
aas
adc
sbb
xchg
mov
ret
je
test
mov
or
or
stos
adc
jmp
cmp
cmps
popa
sbb
es
sbb
xor
adc
repz
and
clc
sahf
jp
stos
dec
cmp
inc
loope
add
js
into
js
lods
push
daa
sub
pop
lea
aad
bound
(bad)
adc
push
mov
jle
aaa
in
fcom
int3
and
xor
mov
aam
add
lea
inc
xchg
mov
rcr
(bad)
lock
jecxz
mov
sbb
das
sub
dec
adc
loope
mov
jmp
cmp
add
lods
repz
fstp
add
shl
data16
mov
(bad)
pop
adc
int3
ret
dec
cmps
bound
add
jb
lahf
sbb
aas
mov
push
xor
sbb
dec
loope
pop
sub
jmp
repnz
call
mov
mov
nop
cmc
out
cmc
cwde
(bad)
pop
lahf
scas
stc
out
in
nop
xor
lock
in
sub
dec
div
adc
sti
pop
add
inc
cmp
(bad)
and
retf
in
cmp
adc
ds
cli
mov
jne
lahf
out
ret
(bad)
add
cmp
jne
mov
loop
add
push
adc
sti
es
jge
inc
call
pop
push
daa
mov
addr16
loop
dec
mov
jae
jae
es
std
mov
(bad)
in
daa
ret
xchg
mov
popf
lea
clc
cmp
pop
enter
das
inc
(bad)
enter
add
or
and
sbb
adc
and
daa
outs
mov
int
mov
in
cmp
les
or
std
jmp
mov
sub
mov
imul
stos
adc
xchg
inc
and
aaa
push
pop
movs
mov
adc
pop
cmps
add
in
fistp
jg
sbb
mov
rol
outs
push
fistp
(bad)
jg
sbb
dec
xor
jmp
mov
xor
mov
and
ja
and
push
test
frstor
jmp
mov
pop
movs
in
das
sbb
add
xor
movups
js
icebp
mov
or
sbb
lock
les
adc
mov
nop
pop
mov
jecxz
in
or
push
out
ja
shl
mov
test
pop
xor
mov
or
loope
js
cmp
hlt
retf
popf
dec
loopne
and
mov
jle
inc
dec
and
cmp
imul
lods
inc
dec
sub
mov
daa
ret
addr16
lock
fist
popa
push
or
mov
pop
icebp
xor
sub
jo
pop
sbb
sbb
sbb
jge
adc
popa
xchg
fsubr
mov
sbb
sbb
popa
addr16
push
push
mov
and
(bad)
xor
test
ror
mov
mov
lea
lock
jae
cld
outs
or
ds
cmp
inc
pusha
pop
fnstenv
and
and
stc
inc
cmp
pop
mov
inc
retf
(bad)
adc
je
dec
pusha
sub
jmp
outs
ins
pusha
mov
aaa
jmp
jmp
arpl
outs
pop
(bad)
xchg
(bad)
jmp
dec
adc
mov
sub
pop
and
xor
pop
test
shr
loopne
mov
call
fucomp
pop
dec
aaa
clc
cmp
add
mov
in
int3
adc
and
call
and
neg
aaa
cwde
ins
mov
and
je
add
adc
aas
fcomp
dec
test
add
inc
mov
fs
sbb
inc
push
aas
scas
dec
cmp
and
sub
dec
dec
je
cs
xchg
lods
jecxz
mov
out
cld
pop
jmp
dec
adc
xor
cs
xor
lea
hlt
sub
clc
pop
jmp
cmp
inc
aad
pusha
add
enter
and
push
popa
adc
fisubr
fcomp
in
mov
retf
mov
sbb
lock
xor
cmp
dec
popa
xchg
and
dec
loop
(bad)
shr
nop
daa
fdivr
add
sub
or
mov
fiadd
inc
xor
add
aam
push
inc
mov
retf
leave
jo
cmp
mov
inc
xchg
sbb
jne
dec
rcl
scas
in
pop
pop
test
add
loop
ror
and
add
xchg
movs
jmp
or
ret
jmp
add
jecxz
sbb
pop
add
test
xlat
add
fadd
jmp
fcom
and
sbb
and
add
push
fldcw
adc
clc
shl
sub
jne
push
rcr
add
shl
loop
add
or
mov
inc
(bad)
ds
pop
(bad)
mov
mov
pusha
das
jnp
arpl
cwde
bound
je
dec
xchg
sbb
je
push
sbb
inc
mov
stc
repz
push
ins
mov
or
scas
repz
pushf
leave
sbb
(bad)
nop
push
mov
imul
les
aaa
adc
xor
add
test
cmp
add
aam
jmp
pop
lea
xchg
mov
mov
outs
ret
ja
cs
and
pop
push
inc
mov
xor
xchg
cmp
push
or
rcr
daa
(bad)
add
fstp
aad
ds
fcomp
(bad)
mov
lods
imul
or
pusha
jnp
push
mov
inc
pop
pop
aad
sti
add
hlt
loope
inc
sar
jmp
(bad)
js
not
out
rcl
add
addr16
mov
outs
dec
and
icebp
add
fs
in
add
ss
fwait
dec
xor
add
in
sbb
cld
test
hlt
dec
in
push
popa
pop
mov
dec
pop
sub
or
mov
popa
mov
inc
stos
cwde
and
fistp
mov
sbb
inc
mov
in
in
int
or
or
xchg
or
jae
sbb
fwait
push
stc
xor
bound
outs
dec
sbb
lock
test
fs
sbb
push
add
pop
imul
add
cmp
xchg
xor
cli
test
ret
push
gs
adc
dec
sub
push
jb
inc
add
jno
mov
mov
xor
add
popa
mov
and
inc
inc
sbb
xchg
pop
ror
bound
sub
mov
or
inc
inc
call
in
cmp
cs
jge
xchg
leave
xor
imul
cmp
clc
je
sbb
pop
sbb
iret
or
daa
sub
inc
and
in
and
and
retf
jge
popa
dec
mov
jmp
pushf
test
clc
pop
jo
clc
daa
lea
popf
(bad)
popa
sbb
mov
ret
cmp
inc
cmp
imul
cmps
or
xor
jno
js
inc
xor
mov
add
fld
xor
jmp
cmp
les
xor
push
mov
jo
clc
push
lods
or
clc
sub
or
pop
pop
ja
iret
jge
pop
sbb
push
ins
add
add
test
jmp
sbb
push
call
pop
fwait
dec
xchg
iret
sub
or
dec
ja
ret
loopne
cli
mov
sbb
add
jmp
xor
test
fs
sbb
inc
add
dec
imul
clc
pop
or
imul
cmp
mov
xchg
test
add
mov
shr
and
cmp
fstp
jl
mov
xchg
jmp
mov
pop
pop
mov
mov
or
addr16
adc
add
push
jecxz
pop
cmc
push
and
mov
sbb
adc
cmp
or
addr16
add
adc
or
add
in
adc
add
sbb
xor
adc
popa
daa
and
push
aam
and
xor
mov
jecxz
push
sbb
mov
inc
or
aas
pushf
out
call
push
xor
ins
inc
mov
call
add
(bad)
mov
out
in
jnp
and
or
jb
xor
cmp
cmp
xchg
cwde
sbb
bound
rcr
cdq
clc
addr16
mov
imul
pop
mov
push
rol
mov
and
jmp
nop
rol
scas
sub
outs
les
mov
stos
lds
mov
lods
sbb
fbstp
and
xor
lock
lahf
mov
sbb
and
fsub
(bad)
les
adc
pop
sbb
jb
sbb
les
and
push
push
or
bound
ret
push
adc
pop
pop
add
or
jb
dec
enter
and
xchg
xor
outs
xor
inc
hlt
cmp
xchg
jne
dec
(bad)
retf
lods
add
loope
jmp
adc
xor
xor
icebp
and
mov
and
sub
push
or
lods
xor
xchg
call
and
cmovae
ret
push
bound
jecxz
or
pop
es
push
movs
mov
movs
hlt
push
dec
enter
adc
loope
adc
push
jmp
pop
dec
and
xchg
test
aaa
adc
arpl
loope
daa
aam
in
or
fstp
xchg
mov
inc
inc
sub
pop
pop
ret
adc
inc
pop
adc
add
daa
or
or
mov
sub
sbb
cmps
stos
mov
or
sbb
jle
add
add
dec
js
ret
rcr
add
pop
popf
mov
and
das
mov
stos
fiadd
push
loopne
adc
mov
(bad)
jo
dec
or
push
add
ss
or
pop
or
(bad)
xor
xchg
dec
adc
loope
int3
push
and
pusha
adc
and
adc
pop
push
sbb
mov
add
xchg
jns
xchg
lods
fdivrp
iret
and
add
cmp
jge
les
pop
test
adc
xor
pop
inc
and
mov
sahf
adc
mov
xchg
add
and
mov
push
xchg
jecxz
lahf
push
add
cmp
ins
sbb
cmp
dec
dec
fadd
add
mov
xor
push
dec
sub
sbb
iret
rcl
mov
dec
mov
jecxz
sub
repnz
(bad)
add
dec
add
mov
mov
fsub
cmp
add
and
mov
jl
jg
push
ret
xchg
jne
popa
xor
cmp
and
lea
ds
fwait
(bad)
xchg
add
sbb
loop
dec
adc
push
inc
dec
gs
adc
aam
add
mov
stc
xchg
mov
sbb
inc
aam
dec
pop
mov
sub
inc
mov
cwde
and
invd
mov
add
or
push
iret
or
pop
mov
call
mov
lea
aam
mov
adc
jl
or
jmp
pusha
in
fcomip
push
add
es
fnstcw
adc
cmp
dec
xor
add
push
push
cmp
mov
rcl
rcl
pop
add
xor
push
lea
jo
add
add
xchg
push
test
or
sbb
mov
inc
mov
pusha
scas
add
push
ret
ja
jge
lock
loope
cmp
sbb
ins
mov
ror
add
je
ffree
inc
ins
mov
add
scas
adc
js
add
or
in
push
std
push
sbb
arpl
cmp
ret
add
pop
xchg
cdq
dec
xchg
mov
push
add
adc
mov
(bad)
cmp
jne
movs
pop
add
int
add
fcom
sub
and
sbb
sbb
pop
ret
and
lock
sahf
push
pop
xchg
pop
lock
pushf
sub
loopne
mov
jmp
push
mov
mov
test
adc
es
jge
sbb
imul
and
push
or
sbb
addr16
push
int3
xor
push
cmp
add
cmp
scas
loope
mov
or
dec
(bad)
leave
mov
es
sbb
shl
jmp
add
sub
push
pushf
sbb
fsubr
add
adc
daa
popa
mov
fcmovnb
xchg
pop
mov
xchg
adc
adc
imul
ret
push
dec
jne
mov
js
and
ret
pop
dec
pop
pop
arpl
or
ret
(bad)
add
movs
cmc
sti
add
mov
pushf
jle
adc
ins
movs
(bad)
jecxz
shl
aaa
adc
aam
shr
mov
mov
jb
jo
stos
call
add
push
xchg
and
add
rol
inc
mov
cmp
cld
sahf
and
pop
(bad)
mov
xchg
sbb
gs
add
jb
loope
cwde
test
push
add
sbb
push
aaa
add
sub
sbb
push
push
in
rcr
movs
pop
ins
adc
jg
jo
cmp
je
outs
or
mov
mov
test
adc
aaa
jl
ret
lea
and
and
adc
stos
pop
pushf
or
fcomp
pusha
push
mov
and
pop
add
add
enter
jns
(bad)
mov
scas
jo
or
sbb
enter
push
test
outs
xchg
inc
dec
xor
pop
pop
ret
push
cli
addr16
inc
sbb
addr16
sbb
adc
adc
adc
add
dec
ja
mov
sub
mov
call
add
push
mov
and
xor
mov
dec
mov
cld
fild
adc
inc
ins
ret
or
out
(bad)
and
pop
inc
pop
sbb
cmp
cld
dec
or
fcmovnb
pop
sbb
mov
adc
inc
inc
loopne
push
or
(bad)
push
jae
sbb
rol
das
mov
and
ss
push
adc
or
test
mov
or
mov
mov
adc
add
pop
xchg
loop
sub
or
mov
arpl
adc
adc
inc
or
(bad)
add
adc
scas
adc
sbb
mov
out
or
stos
mov
add
adc
js
add
sahf
or
loopne
and
mov
adc
es
dec
jo
jp
add
mov
dec
sub
pusha
das
bound
jge
push
inc
pop
inc
sub
ret
(bad)
inc
and
cmps
sbb
push
call
jo
push
push
cld
pop
push
sar
add
aam
jmp
inc
inc
adc
fwait
sbb
push
addr16
lods
push
sbb
or
add
stos
pop
fild
inc
add
outs
mov
and
ret
jb
and
mov
aam
pop
(bad)
cld
adc
leave
ja
sub
xchg
or
mov
mov
cmp
jne
daa
push
cs
add
dec
sbb
sbb
or
adc
aas
sbb
jecxz
push
or
dec
mov
arpl
iret
add
pop
pop
(bad)
sub
imul
aaa
and
or
sbb
inc
xor
sbb
ds
adc
inc
dec
jne
or
lea
sbb
or
mov
push
jnp
data16
push
sub
xor
cmp
xor
and
sar
sbb
lods
sbb
in
mov
pop
xchg
lahf
sbb
lea
pop
pop
daa
test
inc
and
and
clc
ja
add
inc
or
xor
ret
fiadd
arpl
(bad)
aas
mov
lods
bound
push
dec
jp
xor
push
push
lods
fstp
sar
(bad)
jg
push
dec
cmp
(bad)
xlat
(bad)
pop
fs
sub
add
adc
jp
clc
call
mov
jmp
or
sbb
loopne
daa
test
mov
adc
sbb
and
sar
fsub
addr16
jle
push
adc
push
sub
or
rol
je
out
inc
jmp
or
cmp
dec
add
sbb
fs
add
not
sbb
dec
addr16
adc
xor
or
jo
rol
add
aas
pop
or
cwde
shl
xchg
arpl
ret
rol
call
rcl
lock
pushf
pop
mov
mov
aas
push
add
sub
call
adc
push
mov
movs
sbb
and
mov
movs
arpl
adc
jmp
or
inc
xor
test
cld
sbb
sbb
push
jne
or
out
ret
pusha
(bad)
sub
xchg
test
jae
mov
mov
pop
adc
push
mov
nop
ret
outs
add
cwde
adc
lea
dec
adc
clc
cwde
jo
and
xlat
adc
pop
mov
adc
pop
sar
pop
ja
inc
out
inc
push
loopne
jl
addr16
fst
jne
mov
or
xor
cmp
fcmove
inc
xor
stos
inc
cmp
iret
inc
fisub
inc
out
cmp
aas
aaa
sub
jnp
cmp
aas
or
js
push
cmp
sub
inc
or
inc
je
push
daa
je
sbb
inc
xlat
sub
adc
out
adc
push
cmp
and
ret
cmp
and
add
mov
cdq
or
mov
es
aam
sbb
push
pop
cmp
jne
push
or
cwde
adc
fiadd
jmp
ins
or
inc
mov
mov
inc
xchg
cmp
ret
mov
retf
or
sub
inc
ja
add
hlt
push
push
mov
(bad)
push
jmp
or
add
test
ror
bndldx
movs
dec
mov
adc
add
fild
cmp
sub
imul
xchg
adc
nop
iret
mov
dec
add
push
xchg
push
cmp
pop
adc
adc
add
ss
add
or
sbb
retf
aaa
stc
test
or
loopne
sahf
lods
adc
push
add
enter
or
pop
pop
add
and
mov
sti
mov
sahf
mov
cmp
push
in
jb
test
out
add
and
mov
outs
inc
or
mov
ja
and
jle
inc
push
push
adc
and
rol
in
xchg
lea
mov
xor
add
sbb
adc
dec
inc
mov
jne
and
mov
sbb
jg
or
and
idiv
mov
addr16
mov
movs
push
xchg
add
or
pop
adc
dec
or
push
or
xchg
mov
(bad)
pop
inc
mov
xchg
mov
pop
push
mov
mov
push
in
data16
fmul
push
add
cld
dec
or
inc
pusha
or
mov
in
or
jbe
les
call
rol
mov
jno
sbb
xor
ds
fadd
pmuludq
and
scas
adc
or
sbb
jl
cmp
mov
je
sbb
jecxz
cmp
sbb
push
in
je
cmp
pusha
cmp
ret
add
mov
inc
or
arpl
sbb
jno
push
mov
fadd
pop
push
jge
popf
fisub
sub
cmp
inc
inc
mov
inc
sub
push
or
lods
push
test
and
sub
leave
inc
hlt
add
add
pop
mov
stos
dec
ficom
mov
add
fldcw
add
mov
cmps
xchg
ror
cli
sti
sub
inc
frstor
sub
mov
xor
add
fbstp
rcl
loop
shl
and
adc
or
ja
sub
mov
mov
dec
inc
mov
ins
push
add
pop
or
jp
arpl
pusha
mov
push
add
inc
out
pop
pop
outs
sbb
sub
inc
sbb
cs
xor
add
dec
mov
and
lock
or
or
outs
mov
(bad)
pop
jl
mov
push
cmp
(bad)
aad
pop
push
push
push
push
or
loopne
and
xchg
mov
push
push
je
ins
mov
add
mov
sub
push
adc
idiv
shl
call
cmps
outs
or
je
cmps
inc
pop
cmp
das
push
into
adc
inc
xor
jg
and
lock
out
mov
inc
add
push
or
mov
xor
repz
sbb
and
cld
push
xchg
mov
cmp
js
mov
push
pop
pop
mov
(bad)
add
mov
mov
push
sub
gs
stos
add
mov
xchg
add
sbb
shr
das
xchg
cmp
lea
rcr
mov
pop
pop
sub
adc
test
(bad)
out
xor
xchg
stos
mov
jl
divps
scas
or
add
mov
mov
loop
sbb
lea
leave
das
addr16
jbe
mov
mov
mov
or
in
nop
das
icebp
jg
mov
xor
mov
lea
pop
or
and
stc
inc
xlat
sub
popf
cmp
jo
in
adc
mov
and
outs
int
mov
pusha
repnz
js
jge
cmp
jl
add
and
xor
ror
test
stos
push
es
jmp
cmp
xchg
jg
mov
dec
push
mov
add
pop
sbb
lock
into
adc
sbb
inc
add
push
sbb
xor
loope
std
fisubr
mov
adc
addr16
cmp
dec
xchg
je
inc
or
add
lea
mov
xor
(bad)
jmp
push
cmp
jne
mov
xor
test
jne
dec
jne
jmp
cs
int
shr
xor
cmp
jle
xor
les
les
cmp
loope
loopne
inc
jl
ret
rcl
xor
ffree
(bad)
add
cmp
jo
add
or
push
ret
add
fsubrp
(bad)
test
sbb
fmul
mov
fcmovu
mov
mov
sbb
movzx
(bad)
jg
xchg
adc
scas
push
or
and
cmp
je
mov
add
and
sbb
xchg
and
jmp
fsubr
enter
fbstp
loop
mov
ins
sbb
mov
jo
test
out
jne
mov
or
ss
sub
push
or
stos
and
imul
dec
inc
push
ins
cli
mov
pusha
jl
or
dec
sbb
mov
cmp
or
bndstx
jmp
mov
mov
jmp
cmps
dec
or
shr
sbb
mov
jp
dec
or
mov
test
xchg
rol
comiss
(bad)
cmp
add
inc
cmp
aas
pop
je
push
dec
add
das
dec
or
add
sti
fist
sbb
add
mov
cmp
mov
mov
push
add
add
adc
add
mov
outs
adc
cmp
ror
lock
aas
or
mov
fs
ds
jnp
push
mov
cmp
retf
or
jg
(bad)
ja
jb
xor
xor
push
add
out
sub
or
mov
jg
xchg
add
repnz
pop
adc
inc
push
push
lock
inc
and
rol
(bad)
jno
cs
cmp
jbe
adc
cmp
cmp
pop
push
jmp
test
mov
add
mov
or
lods
cmp
and
stos
mov
sbb
or
push
sub
pusha
not
leave
ret
fwait
pop
ret
in
and
cs
mov
popa
and
jnp
mov
mov
push
sbb
xchg
out
jo
fstp
enter
popa
pop
mov
inc
jge
push
pop
and
xor
and
pop
daa
(bad)
and
jecxz
cmp
lahf
pop
jb
inc
and
adc
dec
and
pusha
jl
add
arpl
ret
in
scas
xchg
sti
ja
sub
mov
mov
sub
je
or
add
mov
xor
clc
pop
ret
adc
push
into
std
add
jnp
sbb
iret
jnp
or
adc
pop
adc
xor
and
fbld
sbb
xchg
xchg
loopne
fisubr
push
or
push
add
push
or
push
sub
mov
xchg
(bad)
lea
mov
and
loop
mov
sub
jecxz
add
js
clc
sbb
jmp
push
sub
push
sub
xchg
mov
or
jp
fldenv
(bad)
fisttp
test
sti
(bad)
push
ss
test
xchg
pop
jmp
xor
and
mov
ret
stos
xchg
nop
jne
shl
mov
iret
or
retf
movs
lock
stos
sbb
jp
xlat
cmp
xadd
fstp
jmp
jle
mov
ret
les
leave
cmp
clc
test
cmp
mov
adc
mov
pop
add
mov
or
cmp
pop
mov
stc
or
test
adc
mov
cdq
add
mov
and
movs
jno
add
popa
repz
lods
jp
xor
cs
pop
mov
jmp
pop
imul
int3
fucomi
test
cs
jmp
push
fdiv
fdivr
jo
pop
ror
pusha
das
push
jnp
frstor
jmp
iret
xor
adc
xor
push
nop
js
cmp
cmp
dec
xor
or
jg
pop
pop
out
pop
or
push
sub
sub
sub
xchg
mov
inc
lock
repz
data16
ins
or
sbb
aam
in
sub
ret
test
fadd
cmp
adc
inc
or
fdivr
jbe
cmp
or
and
xchg
or
pop
es
xor
inc
ret
mov
adc
stos
or
dec
jge
xchg
xchg
adc
ror
fcomip
mov
adc
sub
aaa
popa
(bad)
adc
mov
adc
sub
dec
fisub
push
fistp
or
adc
sub
ja
and
inc
addr16
jns
sahf
sub
cmp
and
loopne
jo
cmp
jmp
adc
test
shr
or
mov
mul
xchg
and
and
daa
shr
ins
cmp
jae
add
fild
sbb
adc
rcr
or
add
sub
adc
clc
push
mov
jp
add
ins
cmp
in
jb
outs
ins
imul
fstp
pop
adc
mov
push
out
or
add
lock
daa
sub
ja
ret
imul
or
adc
adc
int
dec
loopne
cs
push
mov
push
push
pusha
adc
xlat
pop
pusha
inc
xor
out
mov
inc
adc
mov
jnp
or
or
push
in
cdq
sbb
(bad)
sbb
mov
enter
outs
(bad)
stc
sbb
push
loopne
sbb
stc
sbb
jmp
loope
mov
add
mov
data16
add
jmp
into
mov
mov
outs
sbb
inc
out
test
mov
in
rcl
call
adc
aaa
and
xor
inc
ja
pop
daa
(bad)
mov
inc
and
or
mov
add
and
mov
sti
mov
sbb
hlt
pop
add
jg
ret
xchg
mov
push
jl
xor
and
cmp
or
cmp
(bad)
push
outs
mov
cmp
sbb
and
jecxz
idiv
or
inc
xor
inc
xchg
aas
fist
mov
or
adc
inc
sti
xor
cmp
repnz
repnz
jo
cmp
cmp
sbb
es
arpl
mov
mov
pop
and
and
scas
mov
aaa
and
je
sbb
sbb
ror
mov
add
out
adc
ins
ret
pop
wbinvd
and
adc
jo
js
lahf
call
add
jle
icebp
inc
loop
and
adc
les
pushf
in
dec
pop
dec
fcom
stc
xor
pop
outs
(bad)
cmp
rol
cmp
mov
cmc
pmulhuw
in
div
clc
stc
in
in
cli
sti
cld
std
in
in
(bad)
jmp
loope
in
in
jecxz
in
in
in
out
jmp
jmp
in
out
rcl
ss
in
rcl
aam
or
sub
pop
xchg
xor
adc
aas
dec
inc
sub
and
lea
inc
dec
ins
das
in
ss
mov
adc
xchg
mov
push
jns
cmps
jbe
or
inc
iret
pop
inc
pop
mov
sbb
cwde
mov
sbb
fwait
movs
out
pop
mov
or
inc
jo
pop
and
neg
(bad)
aam
dec
inc
jb
jg
outs
je
test
mov
pop
pop
push
dec
gs
xchg
fwait
sub
fmul
inc
dec
push
in
fwait
or
mov
(bad)
sub
enter
test
xor
mov
sub
sub
jb
push
ror
rcl
in
pop
loop
cmps
or
ret
mov
mov
mov
mov
sbb
test
xor
and
cmp
and
dec
add
jne
mov
add
fs
add
pxor
popa
or
clc
sub
pusha
mov
lea
out
stos
ror
gs
push
popa
xchg
inc
jnp
test
inc
add
adc
repz
test
in
inc
jo
rcl
clc
sbb
ret
addr16
adc
inc
mov
xor
shr
lock
and
add
add
repz
movs
retf
call
mov
inc
mov
ror
mov
xor
jge
mov
sub
add
xor
add
and
ins
scas
push
jl
mov
movs
xchg
inc
sbb
sub
or
push
push
jne
imul
cwde
std
jmp
mov
fstp
fadd
lahf
xchg
dec
and
mov
bound
inc
pop
in
sub
ret
pushf
push
fld
or
iret
push
adc
lods
inc
mov
in
pop
pop
and
jl
lea
movs
add
fnstenv
mov
cmp
or
test
(bad)
sti
stos
push
ror
xor
lock
cmp
test
test
xor
fisttp
out
sar
out
ret
pop
adc
mov
pusha
mov
or
imul
popf
rol
mov
clc
cmpxchg8b
(bad)
retf
inc
scas
jne
xor
stos
lea
xor
add
mov
test
xchg
mov
add
jl
xor
adc
add
loope
push
das
xor
mov
test
adc
inc
xor
jp
mov
pushf
sbb
test
xchg
cwde
and
and
sbb
and
sbb
daa
inc
add
or
push
ja
or
or
arpl
sub
movs
aas
adc
pop
push
push
inc
mov
pusha
push
sub
jl
jl
dec
gs
mov
cdq
movs
mov
inc
cli
jmp
icebp
mov
or
inc
outs
in
inc
jb
jl
arpl
daa
sbb
pop
mov
shl
test
push
add
push
jle
ja
xchg
sub
xor
jae
rcr
iret
jo
inc
jae
pop
push
jne
add
sbb
xor
rcl
inc
ret
dec
pop
in
ins
add
inc
inc
add
lds
push
pop
in
pop
(bad)
push
jmp
adc
and
add
sbb
sbb
push
rcl
add
jge
ror
cmps
sbb
out
push
in
and
test
jo
xchg
enter
subps
jecxz
inc
mov
push
sbb
int3
test
and
lahf
or
push
mov
inc
mov
js
mov
push
push
pusha
js
sbb
pop
or
and
dec
dec
movzx
cmp
xchg
and
sub
and
aas
cmps
retf
sbb
jg
jo
pushf
mov
in
fild
cld
call
add
jg
inc
shl
mov
and
hlt
add
mov
fist
inc
or
mov
jne
push
lea
mov
pop
dec
mov
pop
add
gs
add
fadd
and
add
or
call
or
sub
lahf
mov
pop
jle
push
or
int3
inc
cli
or
and
lds
lock
add
iret
ror
mov
hlt
or
adc
out
xchg
mov
test
jge
sbb
pop
test
cdq
inc
loopne
call
or
loopne
loopne
js
mov
adc
or
push
adc
and
imul
or
or
or
dec
or
jl
xor
push
mov
and
fsubrp
adc
jl
or
jg
dec
add
or
out
addr16
cmp
jne
ret
sar
inc
inc
aam
mov
shl
pop
add
stos
add
dec
xor
mov
lea
sbb
or
mov
cs
xor
loopne
aam
jo
jmp
popa
fld
adc
popf
out
retf
dec
add
mov
or
lea
mov
jp
push
mov
sub
pop
dec
sub
js
xchg
test
jmp
test
(bad)
xchg
addr16
adc
inc
add
out
shl
pop
test
je
pop
gs
dec
push
push
and
retf
int3
jmp
cmp
rcr
(bad)
xchg
add
sbb
and
pop
xchg
sbb
loopne
and
inc
push
push
cld
aad
ror
cmp
mov
mov
and
imul
sub
lock
mov
arpl
cmc
repz
mov
icebp
popf
pop
add
inc
add
inc
cmp
cld
push
fiadd
jne
adc
js
das
push
nop
inc
test
std
and
cmp
mov
cmp
jmp
mul
and
test
les
and
ret
pop
jmp
mov
add
jnp
pusha
sub
outs
sbb
shr
jmp
pop
sbb
inc
xchg
xlat
inc
pop
cld
std
cmp
lea
lea
inc
enter
mov
dec
cmp
not
rcl
lea
test
aas
aaa
call
out
(bad)
pop
dec
mov
(bad)
dec
mov
cmp
mov
sub
loope
inc
mov
push
aam
xor
or
inc
adc
xchg
sub
xor
inc
lds
adc
jo
mov
(bad)
xchg
add
add
les
shl
adc
dec
jmp
adc
inc
mov
mov
xlat
shl
mov
mov
add
or
in
adc
sbb
add
je
cmp
jb
std
stos
(bad)
daa
cmp
ja
push
ss
push
add
jmp
push
ss
add
jbe
and
(bad)
and
inc
ja
push
fist
enter
mov
lock
mov
push
inc
inc
cld
push
inc
xchg
std
outs
mov
jne
sub
stc
lea
add
test
or
push
mov
push
push
leave
aam
test
sbb
push
push
or
sbb
fimul
push
hlt
mov
bound
push
loopne
sbb
mov
clc
add
retf
add
mov
cld
push
push
lea
lods
add
in
add
cmp
dec
call
jnp
out
dec
rcpps
addr16
jnp
add
lods
pop
daa
fnstenv
std
fmul
push
fild
add
test
mov
daa
cdq
daa
daa
mov
mov
inc
add
idiv
sbb
add
inc
inc
cmp
stos
or
pop
dec
fstp
and
add
nop
adc
xchg
mov
adc
inc
mov
test
sub
pusha
aas
sbb
test
add
jns
fiadd
mov
inc
mov
ret
loope
ja
jp
inc
iret
xchg
push
das
(bad)
cli
add
mov
sbb
and
mov
popa
ss
adc
cmp
xor
adc
pop
cs
jno
fld
jae
jl
in
pop
dec
inc
push
fnstcw
mov
add
mov
inc
das
cmp
jo
jo
jecxz
mov
jb
mov
arpl
pop
test
pop
jb
push
xchg
out
aad
(bad)
pmovmskb
cmp
fcomp
das
inc
push
and
das
dec
push
inc
pusha
adc
pop
loop
mov
scas
adc
mov
cdq
mov
(bad)
out
ins
add
aas
inc
add
add
sub
push
and
les
hlt
cs
xor
cs
inc
jge
push
jns
jb
and
ds
lock
movs
add
cmps
(bad)
add
inc
mov
xchg
or
aas
or
das
cmc
xor
data16
arpl
fisttp
adc
pop
mov
sub
pop
adc
gs
dec
jne
pop
xor
into
jb
arpl
loope
mov
xchg
dec
push
mov
jmp
arpl
ret
ds
pop
or
or
ret
cmp
mov
dec
add
or
cwde
xor
loop
pop
lahf
cwde
data16
jo
pop
or
push
inc
jne
lea
dec
retf
addr16
mov
cwde
xchg
fsubr
pop
push
and
sbb
aaa
or
push
cs
retf
je
push
and
add
adc
adc
gs
imul
inc
outs
xchg
push
add
jo
jo
rcl
jge
cmp
pop
fisubr
int
cmps
ins
jo
push
cs
or
inc
mov
mov
xor
pop
mov
movs
xchg
ins
jne
mov
ins
push
ror
push
xchg
dec
aaa
add
push
inc
jp
dec
cli
push
inc
mov
popf
push
push
xlat
push
push
adc
adc
push
inc
inc
bound
movs
cmps
aas
adc
cmps
push
(bad)
sbb
pushw
popa
jo
add
lea
add
sbb
mov
outs
mov
add
in
pop
sbb
jge
movs
pop
jb
jb
jb
sub
push
scas
or
xor
push
push
ins
outs
and
push
mov
shr
xor
cmove
push
sbb
scas
sbb
xor
or
mov
je
and
loope
nop/reserved
outs
ja
jb
ds
mov
sbb
adc
je
leave
nop
and
fisubr
pop
scas
sub
push
sbb
nop
add
in
scas
add
dec
or
ins
jle
pop
sbb
ret
mov
shl
scas
xor
inc
mov
fs
scas
or
or
(bad)
setp
movs
xor
adc
shl
test
or
inc
popa
mov
pop
mov
adc
mov
or
xor
push
adc
inc
test
lock
ret
push
adc
in
pushf
fst
dec
sub
mov
inc
cdq
add
bound
sbb
adc
add
pop
mov
fistp
sub
out
pop
push
dec
je
pop
pop
(bad)
add
push
and
in
fs
comiss
das
mov
inc
add
add
mov
mov
inc
bound
add
daa
fisub
pop
mov
pop
xchg
fild
out
popa
jae
jl
or
jl
(bad)
or
scas
cmp
adc
popa
data16
outs
stos
lock
(bad)
in
jle
add
xor
add
dec
psllw
pop
inc
and
dec
pop
sub
push
(bad)
fsubr
in
mov
mov
psubb
loopne
push
hlt
and
mov
nop
fcom
or
pop
loop
push
jno
iret
repz
inc
dec
push
add
ins
jg
or
inc
add
(bad)
jbe
xchg
push
pop
outs
aas
sub
mov
fld
cmp
sbb
popf
jg
and
jbe
mov
movs
test
cmp
inc
repz
repz
dec
sbb
sub
sub
add
mov
aaa
ret
je
scas
push
fst
add
sahf
inc
add
push
retf
pop
jnp
adc
arpl
cmps
cmp
stos
aad
xor
ja
icebp
mov
mov
inc
sbb
cli
mov
test
dec
call
iret
ret
pop
mov
xchg
mov
mov
adc
mov
sub
pusha
sbb
cmp
add
dec
cmp
loopne
mov
jecxz
add
nop
push
cmp
ja
sub
mov
inc
inc
ss
pop
ja
imul
js
mov
popf
jmp
idiv
or
or
sar
jbe
mov
cmp
in
data16
repz
xor
sub
(bad)
addr16
pop
mov
xor
and
shr
add
cmps
jne
pop
mov
int
push
jne
inc
aas
push
mov
or
or
cwde
add
push
mov
sub
cmp
je
loopne
add
xor
imul
shl
pop
call
ins
xchg
jmp
test
js
ret
pop
or
sbb
sub
js
pop
mov
cmp
xchg
(bad)
jmp
inc
not
ins
pop
enter
add
push
add
push
add
pop
sub
cmps
and
sub
and
retf
pop
pop
inc
push
adc
add
push
push
js
ins
jo
bound
(bad)
aas
mov
lock
clc
jmp
jmp
jbe
mov
sub
scas
test
cmps
sub
clc
push
sub
inc
daa
cmp
pop
aas
sahf
add
in
pop
and
jne
(bad)
shr
jmp
repz
inc
int3
jbe
mov
push
es
into
pusha
pop
je
jmp
mov
test
jl
jne
lods
sub
adc
inc
jmp
add
mov
dec
ds
dec
bt
pop
adc
or
ret
ja
lods
mov
(bad)
push
pop
fchs
cmp
adc
inc
clc
xor
outs
lock
pop
xor
call
sbb
sub
jmp
mov
sub
add
pop
or
sbb
sar
sub
call
hlt
add
add
lock
xchg
jge
pop
lock
(bad)
pop
aaa
aam
mov
inc
push
xchg
push
fs
add
or
lsl
push
push
mov
sti
jg
mov
add
sub
jb
sub
je
(bad)
jae
cmp
jl
inc
mov
push
ret
mov
xchg
jb
push
stc
pop
or
push
inc
dec
jne
outs
xor
mov
lea
mov
(bad)
pop
leave
popa
or
jg
fs
loopne
inc
ja
push
add
inc
add
int3
adc
fwait
add
mov
pop
push
jne
out
or
and
mov
jnp
ret
adc
mov
adc
adc
adc
test
and
xchg
addr16
rol
dec
jle
mov
mov
lea
mov
out
(bad)
idiv
mov
mov
ins
imul
test
cmps
mov
stos
and
add
cmp
ins
fadd
neg
lock
cmp
bound
fld
cmc
or
xor
outs
adc
aas
ds
sub
in
lock
and
cmp
retf
clc
cmp
ja
enter
sub
ja
bound
sbb
add
jge
mov
push
mov
adc
xchg
add
xor
mov
jne
cmc
ror
dec
lods
push
mov
test
push
push
xor
inc
leave
jns
test
ins
xlat
and
and
xchg
es
add
or
daa
loopne
dec
retf
(bad)
xchg
dec
adc
adc
sub
xchg
xchg
mov
call
test
push
sub
and
out
xor
loopne
cmp
adc
ret
mov
in
push
das
and
dec
inc
cld
inc
cld
aaa
xchg
cmc
adc
fist
inc
sbb
sbb
(bad)
cmp
pop
test
mov
cmp
movs
add
mov
adc
pop
push
hlt
sbb
hlt
pop
(bad)
popf
jne
dec
dec
mov
jg
pop
pop
inc
lock
pusha
mov
sbb
sub
shr
jae
loope
push
(bad)
push
xchg
pop
cmp
and
push
add
mov
pop
outs
aas
or
imul
add
cs
push
jg
ret
fiadd
push
mov
shr
nop
jmp
rol
cmp
xor
push
xchg
jp
enter
or
and
imul
push
adc
(bad)
cmp
adc
add
out
inc
add
or
xor
push
cmc
int3
xor
cld
outs
adc
ret
fwait
mov
mov
mov
sti
sbb
scas
mov
mov
ret
das
ret
out
lea
daa
movs
xchg
(bad)
mov
(bad)
ins
mov
or
(bad)
dec
not
mov
es
xor
xor
dec
retf
dec
lods
mov
push
jne
inc
sub
pop
retf
cmp
fldcw
pop
das
nop
(bad)
mov
sbb
je
pop
clc
test
ret
mov
(bad)
mov
or
call
jns
xor
xor
repz
mov
mov
or
rol
and
idiv
aaa
pop
cmp
cli
jmp
je
dec
mov
mov
push
lods
mov
xor
sbb
push
push
xlat
or
pop
mov
adc
aaa
lea
(bad)
dec
jg
inc
inc
mov
mov
jnp
mov
pop
push
dec
je
mov
mov
pop
(bad)
mov
sti
sub
jbe
sbb
pop
pop
(bad)
lods
int3
adc
pop
or
adc
shl
jmp
mov
or
add
push
test
jecxz
shl
sub
or
clc
and
sub
popa
inc
jecxz
mov
push
mov
xchg
jo
mov
ja
out
cli
pop
push
aas
mov
sti
pop
jbe
mov
jbe
ror
fdivr
jne
les
mov
xor
sbb
les
and
push
and
mov
fild
pop
pop
xor
aaa
fcom
pop
scas
push
mov
cmp
(bad)
fsub
add
jge
adc
nop
enter
into
mov
cli
je
lods
cmp
mov
push
jns
mov
sub
jmp
mov
sub
or
pop
jl
fsubr
jne
mov
retf
lods
jmp
mov
ins
cmp
sub
inc
sub
mov
or
pop
mov
inc
es
(bad)
cld
in
cmp
or
retf
add
movs
xchg
pop
outs
add
stos
sbb
xor
jle
bound
push
rol
pop
push
pop
pop
mov
pop
mov
cmp
jb
cmp
ja
imul
mov
movzx
add
cld
add
in
dec
call
ja
gs
adc
or
inc
sbb
je
xchg
ret
and
mov
mov
adc
or
inc
pusha
sti
lea
mov
call
mov
outs
push
stc
push
sbb
stc
cmp
dec
lds
fstp
fild
gs
adc
and
in
xchg
mov
sub
and
test
call
fdivr
das
sbb
cmp
je
or
sub
aas
add
pop
jne
cdq
and
inc
(bad)
(bad)
aas
jo
je
neg
add
pop
add
pop
dec
mov
inc
dec
mov
ret
inc
call
push
push
lea
push
push
push
push
ins
cli
call
push
push
add
add
pusha
pop
pop
xchg
add
int3
cmp
sbb
fcmovnb
pop
push
push
inc
push
pop
sbb
shl
lea
push
sub
nop
cmp
jbe
push
jbe
mov
push
imul
adc
ror
cmp
adc
loopne
and
neg
and
lahf
mov
mov
xor
call
jmp
push
mov
inc
loopne
sbb
out
xchg
jno
mov
adc
jmp
xor
mov
mov
lods
pop
jle
xor
enter
xor
inc
add
adc
aas
xor
(bad)
pop
(bad)
mov
mov
addr16
div
dec
cld
cmp
cmps
aaa
mov
ja
mov
scas
dec
aaa
jp
sub
jecxz
dec
mov
jp
shr
ds
sub
mov
add
mov
ins
mov
stc
inc
je
mov
or
je
mov
fsubp
fwait
add
adc
dec
jp
std
mov
js
mov
mov
ret
and
lods
lea
jne
xchg
adc
leave
mov
arpl
mov
mov
adc
sbb
(bad)
iret
and
jne
nop
ins
fmul
jl
sub
add
pop
fcomp
rcr
or
xor
and
add
cdq
mov
adc
add
ret
pusha
adc
xchg
call
or
pop
les
pop
shl
sbb
into
add
jg
sub
sbb
xchg
xchg
sub
add
push
or
in
add
icebp
mov
sub
cmp
lahf
xchg
scas
mov
adc
or
popf
or
out
or
mov
ror
inc
jmp
add
add
add
push
(bad)
dec
push
xchg
pop
jmp
lea
iret
mov
std
push
orps
imul
jmp
or
jge
add
(bad)
push
or
movs
shl
xchg
push
mov
add
cmp
dec
adc
(bad)
in
or
jg
dec
mov
stos
cmp
jne
pop
pop
or
fild
aam
sub
pop
jmp
cli
mov
xor
pop
repz
mov
popa
loopne
outs
adc
push
jge
mov
into
pop
jle
mov
cs
dec
stos
pop
daa
dec
jge
add
shr
outs
inc
aam
fs
jge
movzx
sub
jae
test
arpl
lea
(bad)
jnp
inc
mov
sub
mov
add
ja
rcpps
enter
sti
lea
sbb
call
div
mov
enter
adc
sahf
mov
je
inc
in
jmp
in
ins
xor
(bad)
add
ret
(bad)
push
xchg
std
mov
aam
adc
sbb
sbb
ficomp
pop
sbb
or
mov
scas
mov
xor
stos
jmp
aas
inc
mov
mov
clc
movlps
pop
pop
inc
clc
dec
retf
jbe
add
push
xor
dec
jmp
mov
mov
xor
jp
sub
ret
scas
mov
add
inc
mov
mov
jg
add
ins
lock
adc
mov
cmps
inc
sub
xchg
xchg
mov
or
repz
cwde
sub
mov
test
jne
push
cli
mov
in
stos
xor
call
add
mov
jne
pop
mov
pop
xor
ret
(bad)
pop
repz
lock
or
repnz
maxps
jbe
mov
fwait
jnp
sar
ja
or
push
push
push
cmp
sub
adc
sbb
push
arpl
pop
pop
inc
loop
push
add
add
mov
ret
and
inc
add
and
and
adc
mov
fstp
inc
sub
sub
addr16
es
sbb
and
sub
pop
sub
or
and
sub
sub
call
ret
mov
inc
add
push
or
push
push
xor
pop
hlt
xchg
mov
adc
mov
ret
jle
pusha
sbb
test
daa
mov
jne
cmp
(bad)
cmp
inc
add
data16
cs
mov
rcl
sar
pop
loop
xchg
ins
clc
out
xchg
loope
aad
inc
sbb
pop
frndint
fcmovu
scas
je
imul
(bad)
fcomp
fstsw
fwait
mov
test
je
fidiv
(bad)
mov
lea
mov
inc
sub
cwde
shr
and
xchg
jp
jecxz
xor
pop
ds
shr
jmp
cmp
jge
movs
out
(bad)
outs
or
cmp
jb
mov
js
dec
loopne
loopne
and
pop
data16
pusha
xor
jmp
mov
cmp
inc
xor
jne
sti
pop
cs
shr
mov
add
mov
sahf
lock
out
xchg
cs
push
add
pop
add
jge
ror
test
imul
push
dec
hlt
fadd
or
jge
cmp
jl
mov
cmps
sbb
(bad)
mov
or
sbb
inc
fild
cli
mov
push
mov
and
add
fwait
inc
sbb
shl
sbb
sub
call
and
jne
dec
xor
cmp
xchg
cwde
cmp
inc
or
jmp
dec
adc
sub
mov
cmp
imul
cmp
jbe
pop
jmp
mov
add
pop
pusha
sbb
dec
(bad)
and
fcomip
sbb
f2xm1
fclex
fldcw
test
out
push
(bad)
mov
cmp
je
or
mov
daa
rcr
push
cmp
sbb
cmp
icebp
je
and
fistp
sub
pop
add
clc
mov
cmc
jg
jne
mov
and
aam
cmp
in
mov
lock
je
fistp
jmp
fstp
fstsw
test
push
mov
jmp
mov
fadd
push
add
out
aad
cmp
mov
(bad)
jmp
pminub
movs
sub
aaa
mov
neg
add
clc
outs
mov
push
push
inc
imul
push
cmp
sub
jmp
in
and
fisttp
sbb
pop
sub
fmul
inc
push
loope
add
adc
mov
mov
out
ja
sub
jae
and
and
mov
adc
aas
cmp
das
pop
xor
mov
mov
add
push
hlt
or
xchg
add
pop
in
and
sbb
test
push
and
add
xlat
xchg
jle
rcl
jnp
adc
mov
pop
hlt
cmp
ins
inc
sub
push
fwait
and
xchg
sub
mov
xor
mov
shl
push
imul
adc
dec
mov
outs
stos
xor
adc
mov
and
mov
ror
inc
es
aad
dec
test
sahf
add
cld
(bad)
adc
lea
lea
mov
jb
adc
daa
ja
and
pop
repz
add
or
jb
push
ins
cli
(bad)
cmp
aad
out
(bad)
ja
adc
push
pop
jl
outs
iret
add
inc
dec
jne
sub
dec
mov
aas
cdq
mul
clc
and
(bad)
imul
add
das
xchg
push
ret
cli
add
repnz
ds
in
imul
ret
or
pop
jg
adc
sbb
adc
loopne
sbb
(bad)
jno
call
ret
std
(bad)
call
fs
fld
jo
(bad)
aas
add
add
jb
ficomp
xchg
imul
sbb
gs
iret
jae
out
imul
add
(bad)
dec
sub
scas
popf
cmps
jp
inc
daa
cmp
outs
(bad)
aam
pop
mov
aaa
sahf
js
adc
(bad)
clc
daa
or
add
mov
inc
iret
mov
imul
aad
pop
cmps
xchg
pop
mov
or
mov
jmp
outs
rol
mov
rol
adc
pop
push
xchg
add
test
fucomp
pusha
cmp
jle
mov
popf
adc
pop
sbb
stos
mov
jb
xor
push
add
shl
mov
push
jmp
pop
xor
inc
imul
adc
pop
int3
push
(bad)
cmp
outs
xchg
jbe
add
pop
ins
mov
push
or
aaa
mov
xchg
sub
sub
outs
clc
mov
sub
je
sub
(bad)
jmp
mov
push
lea
push
aam
add
outs
sbb
inc
mov
jle
xor
add
test
pop
sub
aad
or
mov
sbb
inc
jg
lock
jl
pop
inc
daa
jle
push
pop
push
mov
mov
add
lock
mov
mov
add
aaa
daa
rol
cvtps2pd
or
mov
sar
dec
jne
cmp
cmp
adc
(bad)
arpl
das
(bad)
shr
adc
enter
ret
das
(bad)
sahf
add
fs
fs
dec
add
push
adc
pop
cld
or
fstp
gs
(bad)
cmp
mov
inc
add
pop
mov
push
or
add
pop
add
dec
jbe
out
add
dec
xchg
inc
out
sar
scas
ret
nop
call
xor
cmp
retf
add
inc
mul
and
jnp
push
pop
mov
sbb
mov
xor
out
mov
ins
mov
jmp
mov
sbb
jmp
jg
push
push
mul
jmp
(bad)
retf
imul
cli
imul
push
mov
cdq
sub
repnz
dec
and
add
add
mov
pop
repnz
idiv
cmp
cmp
scas
or
stos
push
inc
jge
and
(bad)
push
hlt
sar
xchg
out
push
repnz
jmp
aaa
imul
xor
or
mov
dec
push
xchg
out
ins
add
fadd
pop
xor
jge
add
int
add
or
(bad)
pop
cmp
test
aaa
add
dec
mov
cmp
cmp
jle
and
mov
in
jne
jmp
repz
xor
ret
xchg
sub
cmp
xor
pushf
add
out
inc
dec
pop
inc
fwait
mov
push
bound
adc
jmp
xchg
xchg
cwde
arpl
pop
push
outs
or
jne
mov
iret
cmp
mov
push
mov
jecxz
scas
adc
cmp
fist
das
out
(bad)
add
xchg
pop
push
push
add
mov
(bad)
dec
or
pop
repnz
out
mov
or
je
mov
push
add
fidiv
push
pop
jg
add
enter
xchg
inc
lds
lock
into
cdq
and
adc
push
or
sbb
dec
jecxz
cmp
or
push
inc
xor
ins
test
bnd
mov
mov
sti
sub
jb
or
lods
mov
stos
cmc
daa
mov
gs
mov
cmps
icebp
inc
mov
push
enter
jmp
jmp
or
ror
jecxz
push
push
sti
push
push
jo
sahf
mov
mov
add
imul
and
ins
bound
adc
jno
rol
push
pop
xlat
add
sub
mov
pop
xor
cmps
jecxz
sub
sub
ret
cmp
sub
mov
push
push
ret
ja
mov
lods
add
sti
dec
lea
dec
retf
nop
pop
sbb
adc
pop
xor
ds
inc
and
ins
pop
gs
or
fmul
int
fs
add
push
or
ds
xor
sbb
mov
dec
call
xchg
jmp
push
sbb
test
jmp
cli
push
ja
inc
mov
ret
xor
cmp
jl
je
cmps
or
cmp
pop
repnz
pop
add
pop
pop
mov
jecxz
popf
cmps
je
lock
push
push
push
or
sub
ret
rol
into
add
les
lahf
or
mov
mov
(bad)
(bad)
out
inc
sub
push
in
aas
test
sub
lea
mov
or
icebp
cmp
popa
or
fadd
add
cmp
add
mov
hlt
dec
bsf
inc
mov
dec
and
push
push
xor
rol
push
imul
add
enter
arpl
xchg
xor
xor
clc
and
cmp
lea
xchg
clc
mov
jnp
test
add
dec
push
sub
outs
call
xor
push
mov
je
sub
je
scas
ret
loope
leave
and
add
jle
add
sbb
cmp
mov
sbb
lock
loopne
aas
sbb
lods
adc
sbb
add
jle
mov
push
jo
lsl
mov
xor
xor
xchg
popa
lahf
add
jle
dec
dec
add
and
pop
xor
sbb
bound
xor
pop
je
jne
xor
jmp
leave
and
jle
add
and
sub
out
sub
push
sbb
outs
mov
add
add
test
add
push
sub
rol
inc
aas
add
and
xchg
mov
jp
cmp
push
das
adc
(bad)
outs
jns
push
and
pusha
mov
mov
jbe
clc
or
popf
gs
dec
inc
call
clc
mov
jg
add
loop
add
pop
clc
mov
or
and
or
push
pop
and
adc
(bad)
pop
mov
jl
push
mov
test
adc
and
lods
das
outs
outs
int3
and
xchg
test
pop
ja
test
test
mov
add
dec
loopne
(bad)
stos
add
pop
cmp
sub
mov
dec
enter
mov
add
les
mov
inc
sti
push
lea
or
test
pusha
mov
data16
das
fmul
cs
or
mov
add
pop
test
inc
or
ret
inc
je
and
adc
xor
dec
sti
adc
sbb
rcr
cmc
loope
shl
cld
pusha
xchg
inc
push
push
ss
or
or
mov
adc
add
inc
lds
jle
les
cmp
out
add
mov
lods
ret
dec
shr
add
aam
mov
add
add
mov
ret
iret
pop
dec
and
les
ins
and
jne
or
lea
rcl
stc
ja
repnz
cmp
and
and
clc
xchg
add
adc
add
add
inc
mov
ss
or
jp
(bad)
push
mov
sbb
movd
mov
jge
mov
add
push
jb
call
cmp
sti
push
jg
cmp
sbb
ja
(bad)
ficom
push
adc
jmp
xor
mov
dec
cmp
jns
mov
add
dec
stos
rol
rol
pop
jg
cmps
sar
retf
adc
jmp
adc
sub
adc
(bad)
jnp
and
lea
jbe
dec
enter
jb
sbb
adc
call
push
and
outs
add
lds
sub
inc
stos
test
add
retf
jmp
jge
or
add
cdq
pop
and
cmp
test
ins
inc
lea
sbb
test
dec
(bad)
test
mov
mov
mov
ins
add
mov
mov
lea
nop
and
mov
add
sbb
into
dec
aas
js
xor
cmp
pop
sar
pop
cmp
push
sub
xchg
aas
jb
cmp
je
jmp
add
(bad)
das
or
je
jmp
cmp
xor
(bad)
jge
inc
adc
jmp
sub
cmp
mov
ret
call
add
push
cmps
imul
pop
adc
cwde
aaa
dec
cwde
push
mov
pop
call
adc
mov
and
dec
fmul
mov
mov
push
cld
jecxz
sbb
ret
adc
rol
icebp
jae
and
jmp
xchg
loope
lock
test
in
inc
dec
mov
arpl
out
add
je
(bad)
jb
pop
dec
dec
mov
xchg
imul
gs
add
jnp
jae
ss
ret
enter
mov
sbb
lods
mov
loope
push
ja
(bad)
or
pop
xchg
push
pop
outs
jmp
fbld
jge
mov
pop
mov
mov
sbb
fmul
dec
std
mov
ret
or
(bad)
leave
int3
cmp
sub
call
dec
aad
ret
dec
les
outs
lock
adc
out
mov
push
std
mov
jp
mov
sub
dec
sbb
and
add
cmp
jge
pop
fwait
outs
add
adc
add
sub
(bad)
lock
cld
xchg
pop
rcl
mov
aas
dec
push
inc
or
jno
cmp
vpmacssww
pop
in
mov
sub
or
mov
mov
scas
mov
xor
lock
dec
mov
sbb
pop
mov
and
jno
daa
mov
mov
cmp
sub
cmp
xor
lods
xlat
not
and
mov
out
lods
xor
daa
mov
adc
or
mov
add
adc
inc
adc
sub
inc
push
sbb
cmp
and
pop
add
inc
cs
dec
add
aaa
and
cmp
scas
mov
mov
(bad)
retf
add
push
and
mov
inc
dec
call
aam
mov
adc
jne
cmp
inc
mov
data16
stos
adc
xor
add
xor
dec
fsubr
dec
mov
dec
std
push
add
and
adc
xchg
mov
cdq
aas
or
sub
and
mov
pop
test
dec
or
inc
dec
add
add
popf
push
push
not
mov
xchg
add
rcr
or
shld
test
pop
add
daa
xchg
sub
ds
iret
sbb
mov
scas
sub
pop
jns
div
(bad)
push
daa
ret
(bad)
das
shl
push
xor
jnp
cld
les
adc
xor
xchg
jae
adc
push
mov
cmovle
enter
out
xor
out
and
adc
adc
add
icebp
sub
adc
cwde
sti
sub
inc
mov
add
in
fiadd
pop
pop
jno
inc
jecxz
fs
idiv
jmp
pop
or
sub
adc
bound
sbb
test
push
cmp
cmp
adc
gs
in
mov
pop
jmp
test
mov
push
mov
jge
and
add
lods
lds
pop
aad
cmp
aas
mov
sub
cmp
mov
ret
dec
or
inc
mov
add
jmp
and
popa
scas
sbb
mov
cmp
jbe
sbb
xor
test
mov
pop
sbb
inc
add
aaa
cwde
loopne
sar
das
sbb
mov
jb
xchg
adc
inc
lock
scas
inc
xchg
ror
jl
fmul
push
pop
test
mov
push
stc
retf
inc
fs
push
jge
dec
and
mov
xchg
pop
or
cmp
or
and
pop
sar
(bad)
in
push
mov
add
test
or
push
dec
clc
mov
pop
aaa
pop
sub
jb
inc
je
inc
jmp
sub
stos
(bad)
sbb
retf
jne
add
cmp
jge
mov
inc
jne
cmp
pop
cs
sbb
jmp
pop
or
pop
setb
(bad)
push
(bad)
add
pop
dec
xchg
dec
clc
add
dec
fst
cld
mov
lar
sbb
fmul
mov
or
or
cmp
xor
movs
cmp
add
test
xor
lahf
jbe
add
xlat
std
or
sbb
xchg
sbb
aam
mov
std
punpcklwd
xchg
ret
mov
in
repnz
popa
mov
mov
add
cmp
test
sub
add
push
inc
inc
scas
movs
call
clc
cs
ror
mov
imul
push
imul
clc
and
mov
sub
sbb
arpl
push
cmp
push
push
out
lods
inc
add
jmp
xlat
and
ss
int3
daa
add
sbb
inc
xchg
mov
add
out
push
lock
aam
in
imul
mov
xchg
xor
push
les
inc
push
in
call
mov
cmp
cmp
nop
add
stc
xchg
in
in
mov
das
mov
sbb
loopne
bound
out
add
mov
cmps
mov
aam
(bad)
fcomp
mov
sti
mov
mov
jle
fidiv
mov
in
repnz
push
or
ret
bswap
out
pop
or
and
sbb
loopne
lock
inc
add
sbb
mov
jge
les
cmp
add
das
stc
rol
mov
sbb
jp
add
inc
fsubr
push
enter
fwait
mov
inc
pop
mov
xor
jo
nop
pop
lock
add
pusha
stos
test
mov
pop
add
mov
sbb
cmc
ja
push
ins
das
fs
lahf
scas
ins
scas
mov
std
add
fs
test
imul
push
sbb
inc
dec
push
dec
add
fcom
sbb
xor
adc
push
cmp
inc
in
pop
jo
test
int3
call
aaa
mov
pusha
xchg
lock
xlat
jge
nop
ret
loope
push
xchg
xor
or
xor
cld
cdq
pop
adc
nop
lock
mov
mov
mov
daa
rcr
add
test
cmp
push
pop
or
and
sbb
das
rcl
pop
mov
pusha
xor
sbb
cld
test
dec
push
mov
mov
test
cmp
and
mov
imul
(bad)
sbb
dec
mov
idiv
add
mov
and
rol
inc
add
xchg
lock
inc
(bad)
pop
and
ret
xchg
rol
add
adc
out
push
jp
(bad)
lea
ja
mov
mov
add
mov
or
dec
inc
pop
jns
das
pop
das
mov
pushf
(bad)
ds
add
cmp
mov
stos
dec
mov
inc
test
leave
popa
mov
adc
fcom
xor
inc
and
sbb
xchg
adc
repnz
cmp
jne
adc
fisub
(bad)
call
popa
(bad)
pop
push
jg
push
(bad)
mov
inc
jmp
pop
pop
jg
xor
xlat
inc
mov
test
test
and
ret
in
xchg
jmp
jne
jne
loopne
push
lea
call
inc
and
sub
mov
movs
or
fs
inc
jl
popa
in
xchg
test
mov
lahf
cwde
push
push
cmovnp
in
push
sbb
or
adc
and
add
xchg
cmp
adc
push
add
add
inc
cmp
adc
add
pop
cmp
pop
(bad)
jmp
adc
inc
adc
push
in
mov
pop
adc
sbb
cmp
xor
leave
or
sub
lock
adc
sub
cmp
inc
adc
and
add
idiv
inc
push
jns
pop
rcl
outs
dec
push
sbb
jp
pop
adc
push
imul
mov
mov
xchg
jg
cmp
test
add
add
cmp
dec
pop
dec
in
js
mov
mov
movs
xchg
ret
sub
out
dec
(bad)
and
seta
div
push
push
jl
pop
lahf
mov
inc
in
pop
je
or
add
mov
hlt
jg
pop
nop
dec
mov
add
jmp
jno
mov
cmp
cmc
or
dec
and
jmp
sbb
ret
xchg
or
push
test
sar
add
xor
div
inc
xor
mov
sub
je
sbb
push
push
inc
or
dec
repz
xor
nop
inc
cmps
addr16
in
fucomi
xchg
sbb
lock
es
retf
fld
mov
fidivr
out
jb
mov
js
test
jae
xor
cwde
in
inc
mov
or
aaa
(bad)
jns
fneni(8087
and
dec
mov
push
add
mov
pop
or
add
and
lock
xchg
pop
or
loopne
jl
or
or
sub
adc
rol
adc
inc
add
mov
adc
inc
xor
stos
and
mov
pop
adc
dec
push
xor
add
aas
aas
add
add
loop
or
scas
mov
loop
aaa
fnstcw
push
and
dec
xor
jns
mov
out
jnp
es
stos
inc
mov
jmp
nop
mov
jno
sbb
test
add
inc
cmp
jns
mov
inc
push
hlt
cmp
sahf
out
sahf
cmp
sub
xor
jns
out
and
sbb
xor
jp
out
sub
cld
ins
lods
sar
push
add
movs
push
add
sahf
out
pop
inc
xchg
push
hlt
mov
test
out
call
out
sahf
out
fsub
sahf
out
sahf
aam
ror
jns
out
enter
rol
sahf
out
mov
icebp
mov
aas
dec
add
call
jo
or
mov
ror
comisd
pop
or
push
aaa
sbb
das
out
push
ins
pop
div
pop
clc
jns
sahf
xchg
int3
hlt
enter
out
cmp
shr
cmp
sahf
in
loopne
fcomp
fsubr
dec
shl
out
pushf
les
jns
mov
sahf
xchg
mov
fnstcw
lods
inc
pop
test
in
jns
movs
js
je
sahf
xchg
out
jo
ins
xchg
out
cmp
nop
mov
sahf
xchg
pusha
mov
(bad)
in
ins
adc
mov
cmp
sbb
mov
mov
clc
das
add
sbb
mov
daa
cs
and
loopne
das
mov
es
inc
mov
lahf
std
mov
pop
pop
outs
lock
call
pop
add
pop
jge
inc
push
push
nop
stos
sub
test
and
sahf
jne
mov
and
xor
xor
(bad)
out
mov
jle
daa
add
cmps
mov
nop
sbb
dec
mov
aam
adc
mov
cmp
add
lea
das
mov
xor
cmp
hlt
add
xchg
push
push
xor
cdq
jge
pop
(bad)
pand
cmp
cmp
fstp
ffreep
cmp
cmp
rol
les
cmp
cmp
mov
cmp
cmp
leave
retf
cmp
cmp
int
iret
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jae
xor
cmp
jne
xlat
imul
loopne
stos
iret
pop
pop
jne
adc
mov
xor
jg
(bad)
mov
lods
adc
pop
mov
das
mov
sub
in
mov
rcl
sub
fs
sbb
adc
test
(bad)
mov
cmp
test
nop
sbb
stos
pop
xchg
mov
dec
cmps
and
add
or
adc
jb
push
mov
jl
ret
stos
inc
xor
adc
stos
(bad)
jo
cmps
push
rol
imul
in
les
push
jge
add
lods
push
and
fiadd
in
jnp
or
adc
clc
lods
push
lods
fsub
inc
fimul
mov
test
or
aad
xor
icebp
add
fisubr
outs
lods
jne
mov
jmp
in
push
xchg
push
push
inc
mov
retf
mov
sub
pop
xchg
inc
test
lods
add
inc
enter
cmp
(bad)
sub
sub
mov
push
inc
jb
add
inc
retf
retf
(bad)
nop
xchg
jl
test
hlt
pop
jb
jb
adc
xchg
fs
pop
scas
(bad)
pop
scas
and
and
daa
add
ficom
ror
test
lea
adc
push
nop
sub
cmps
pusha
iret
adc
or
bound
adc
in
sbb
xchg
and
iret
hlt
hlt
and
push
pop
push
outs
test
xor
sub
lods
cmp
pushf
arpl
mov
sbb
xlat
mov
xor
mov
cld
xchg
loop
lods
pop
ins
loop
or
shl
mov
xchg
movs
inc
and
add
add
test
call
mov
or
mov
push
daa
in
adc
adc
sub
sub
nop
add
fild
sbb
xchg
sbb
mov
or
mov
test
call
enter
push
daa
js
ins
push
push
xlat
aam
idiv
and
cmp
test
and
je
sub
icebp
mov
shr
call
enter
or
push
dec
je
sbb
inc
ins
jg
inc
push
push
or
adc
mov
mov
xchg
cmp
mov
pop
imul
loopne
jg
test
lods
call
pcmpgtb
inc
inc
scas
pop
xchg
cmp
clc
cmc
sahf
or
sub
hlt
dec
test
lock
rcl
in
sub
into
mov
dec
and
mov
call
fdiv
adc
loop
jo
jne
push
cmps
mov
inc
test
mov
adc
es
cmp
aam
pop
aam
adc
inc
pop
adc
ins
cmp
push
mov
and
sub
push
outs
jno
add
(bad)
(bad)
add
sbb
(bad)
std
jg
sbb
fiadd
adc
mov
out
cmp
xchg
cmp
(bad)
sti
push
sbb
fcmovb
movs
test
in
les
xor
pop
rcl
mov
and
pop
xchg
out
seto
xor
or
in
mov
adc
and
test
(bad)
or
fisttp
add
cmps
push
rol
shr
or
rcl
dec
inc
push
add
sbb
ss
push
mov
inc
xchg
mov
mov
add
xchg
jg
fldl2e
pusha
add
rcr
(bad)
mov
mov
pop
or
cmps
xor
pop
mov
(bad)
call
mov
aaa
outs
cli
or
shl
jne
lods
inc
ror
sub
add
adc
sbb
fs
ds
mov
adc
(bad)
mov
adc
(bad)
and
or
xlat
or
sbb
mov
(bad)
imul
(bad)
(bad)
adc
gs
sti
(bad)
inc
add
dec
sbb
and
pop
int3
mov
pop
push
xchg
mov
sub
inc
pop
dec
inc
loope
out
and
dec
jne
jmp
inc
lea
lea
pop
(bad)
push
dec
jnp
retf
cmps
add
call
or
mov
ins
sub
or
les
or
fmul
mov
adc
or
xor
or
lock
retf
push
add
in
outs
stos
jmp
and
clc
scas
clc
ret
je
cs
and
inc
adc
(bad)
leave
cwde
xor
add
inc
mov
mov
popa
or
xchg
psraw
in
ja
mov
cmp
lods
loop
test
push
(bad)
mov
cs
call
(bad)
jmp
push
sbb
add
movs
pop
adc
inc
jp
stos
lahf
jmp
push
push
out
sbb
push
and
lea
(bad)
sub
xor
(bad)
cmp
pop
jg
je
lock
mov
push
jmp
sub
mov
and
inc
(bad)
in
cmp
sub
in
and
call
pop
and
lods
mov
in
inc
inc
imul
mov
cli
push
pop
cli
ror
pop
test
nop
jle
pop
inc
push
add
dec
cs
fsub
lea
push
pop
test
sbb
add
inc
jae
jbe
push
mov
or
or
adc
imul
push
stos
loopne
in
in
add
mov
test
ins
stc
push
push
jno
retf
mov
test
add
or
adc
mov
mov
test
add
jb
in
sub
push
rcr
adc
sar
call
pop
int
fsub
xchg
jmp
push
jmp
sbb
mov
popa
pop
push
jmp
clc
daa
rol
push
mov
aas
push
inc
ds
inc
push
push
push
popf
jmp
data16
pop
pop
data16
dec
add
(bad)
ret
cmc
out
dec
jmp
cmp
adc
cmp
xor
cmp
adc
add
inc
add
stos
xor
sbb
mov
mov
cmp
not
pop
xchg
sub
(bad)
cmc
sbb
pop
mov
pop
jae
fnstenv
xor
cmps
(bad)
and
push
or
cmp
pop
jmp
or
outs
cmp
je
xchg
or
jl
sub
fsub
daa
fcom
ret
lahf
scas
mov
jle
xor
add
dec
movs
inc
adc
inc
imul
test
loope
mov
cmp
push
retf
rcr
push
mov
iret
repz
js
and
jns
dec
sti
push
adc
pop
pop
mov
cmp
es
movsx
test
push
daa
mov
mov
movs
xchg
in
inc
push
leave
mov
and
fild
pushf
dec
ins
and
inc
adc
jb
mov
popf
fst
add
dec
ficomp
rol
xor
mov
mov
ror
dec
fs
jmp
and
xor
add
mov
sub
add
loop
call
loop
test
push
sub
(bad)
fsubr
stos
xor
adc
adc
jmp
movs
push
popa
loope
sar
adc
inc
mov
push
push
int
jae
fwait
je
dec
pop
and
jl
shl
adc
or
cmp
sbb
into
mov
xor
rol
mov
add
lock
dec
cmp
cli
sub
shr
ja
inc
adc
lahf
adc
push
or
jmp
jne
jno
cli
cwde
inc
inc
sbb
into
idiv
push
push
cmp
fcom
or
push
sahf
out
sahf
sub
dec
pop
ins
inc
test
fild
lea
neg
push
je
dec
loope
lods
mov
sbb
or
sahf
scas
adc
cmp
and
adc
call
rol
sar
cmp
pop
je
xlat
fsubp
int3
mov
fild
fstp
fwait
sbb
and
sub
js
js
dec
push
loope
push
adc
push
pop
lea
dec
movs
pusha
jl
call
jmp
push
aas
add
mov
xchg
cmps
add
push
inc
cwde
loopne
rol
mov
cmp
nop
(bad)
fucomp
xor
cdq
les
or
sbb
data16
mov
mov
sbb
ds
sub
in
daa
mov
mov
pop
or
xchg
test
pop
or
add
or
rcr
and
ins
or
dec
ja
mov
adc
pop
sub
mov
jmp
fcmovnu
jmp
fisttp
jmp
jae
int3
mov
test
frstor
xor
test
mov
xor
clc
pusha
cli
daa
clc
cmp
or
xchg
nop
xlat
cli
mov
mov
scas
(bad)
push
test
mov
aas
push
adc
add
mov
cs
cwde
jo
fsubr
add
and
fild
jmp
jnp
mov
inc
and
mov
sbb
fdivr
das
sub
popf
xchg
sbb
pop
or
inc
xchg
or
sub
adc
pop
(bad)
sub
add
jmp
lock
es
gs
xchg
mov
cmp
nop
pop
jmp
push
jb
mov
cmp
lahf
(bad)
jne
cmp
dec
push
xrstors
xor
nop
adc
je
inc
sbb
dec
mov
in
repz
inc
pop
mov
in
xchg
adc
(bad)
imul
dec
push
adc
xlat
add
jb
inc
push
cvtdq2ps
sub
aam
add
sub
aas
je
jmp
popf
pop
mov
jecxz
mov
jmp
push
jge
ins
in
jae
mov
mov
les
push
cmp
add
and
call
inc
push
push
dec
pushf
push
pop
and
and
push
dec
std
fmul
pusha
jmp
shl
aas
sbb
cmp
jne
sub
xchg
inc
in
sahf
cmp
popa
pop
cmp
jp
rcl
lock
pop
fidivr
in
push
dec
repz
fxam
call
leave
cmp
inc
idiv
mov
data16
sbb
mov
cmovne
pop
(bad)
es
jno
jns
cli
adc
sub
xchg
jl
js
gs
cmps
in
push
jmp
jle
mov
dec
das
sti
ficom
sar
jmp
xor
push
mov
(bad)
mov
mov
inc
add
(bad)
xchg
fdiv
or
jo
pop
aaa
pushf
jbe
mov
mov
jmp
shr
cmp
mov
jmp
push
sub
push
sub
xor
lock
dec
sbb
or
adc
ja
rol
dec
cmp
xchg
jmp
mov
retf
sbb
nop
pop
mul
push
in
adc
cmc
mov
(bad)
lods
or
jbe
(bad)
lahf
sub
or
ret
mov
dec
push
pop
pop
iret
mov
jp
fistp
ja
xchg
(bad)
mov
ficomp
fcmovne
pop
add
ss
std
loopne
jno
dec
out
mov
or
push
(bad)
fld
mov
fadd
enter
pusha
pop
mov
push
movs
sbb
std
sub
pop
adc
mov
mov
or
mov
add
pop
cs
adc
and
inc
inc
xor
ins
lea
(bad)
adc
std
xor
xor
and
sbb
inc
das
adc
xor
cmp
pusha
dec
cmc
outs
in
pop
rol
mov
cdq
les
popa
and
xchg
out
ret
sbb
nop
xchg
or
push
popa
or
xchg
xlat
imul
pop
cmps
xchg
inc
mov
daa
adc
sbb
into
push
sahf
out
fimul
int
push
aaa
pop
jg
cs
fwait
jge
into
inc
mov
and
pop
pop
jmp
out
mov
in
add
gs
cmp
cld
rcr
pop
cmp
sbb
xor
and
push
cmc
push
jb
fild
test
add
ins
test
movsx
shl
rol
mov
mov
mov
arpl
cdq
jo
cmp
loopne
inc
pop
lock
je
jmp
xchg
xchg
je
outs
gs
mov
and
test
cmp
mov
repz
add
push
iret
repz
and
in
sub
(bad)
fadd
out
and
out
or
mov
ss
mov
fldcw
test
fild
pop
sbb
add
adc
pop
sbb
imul
test
adc
push
sub
icebp
sub
or
aaa
or
inc
scas
jecxz
daa
add
pop
add
cmp
adc
aaa
arpl
mov
mov
sbb
add
inc
inc
mov
retf
jo
xlat
sar
hlt
mov
mov
aas
aam
sbb
adc
daa
test
mov
pusha
push
adc
push
push
sbb
add
or
rol
mov
call
and
jae
mov
mov
jb
xor
adc
dec
push
rol
ja
rcl
mov
fwait
sub
ja
cmp
neg
push
test
and
ja
xchg
add
xchg
adc
xchg
or
or
dec
retf
add
xchg
pop
(bad)
mov
sar
aam
push
sahf
cmps
stc
mov
rcr
cmp
jnp
jns
inc
fs
fstp
pop
pushf
out
scas
ja
mov
sahf
mov
sbb
sub
mov
sbb
mov
add
mov
mov
outs
or
pop
or
mov
fsub
and
mov
imul
fcom
dec
adc
push
pusha
imul
sahf
sub
jmp
xchg
and
and
js
test
test
loopne
pop
mov
jge
jns
retf
push
fcomip
(bad)
sub
mov
cmps
inc
pop
push
int
pop
ins
add
repz
test
call
sbb
mov
fldcw
or
out
mov
jecxz
xchg
push
inc
pop
inc
movsx
push
sbb
sub
or
mov
pop
and
pop
pushf
sbb
adc
add
inc
jecxz
icebp
test
jmp
loope
sbb
cmc
xchg
in
push
cdq
mov
adc
lods
add
xor
mov
xor
cld
lahf
cli
cld
pop
cmp
add
mov
fild
jl
add
add
fild
add
cmp
ret
jg
or
push
mov
ret
shl
(bad)
call
mov
xlat
out
push
(bad)
outs
xor
and
mov
add
xlat
inc
das
or
xchg
jmp
or
or
pop
sbb
xor
rcl
cmp
xor
fldcw
push
cmp
inc
pop
int
iret
repz
call
xchg
not
add
pop
pop
mov
jmp
add
mov
sti
imul
adc
sbb
and
add
imul
rol
(bad)
hlt
sbb
cmp
sbb
shr
dec
cmp
ss
xchg
inc
push
mov
icebp
les
mov
pop
add
rol
popa
sbb
xchg
imul
mov
pop
lds
aad
in
adc
fidiv
fiadd
push
mov
jmp
or
and
aad
bound
shl
lea
pop
push
push
inc
or
adc
or
sub
jne
adc
imul
pop
popa
jmp
pop
jmp
pop
mov
add
inc
cmp
aas
jmp
cmp
pop
jbe
jae
pop
(bad)
fs
or
add
xchg
mov
movs
mov
ins
add
jno
xor
leave
sub
fsubr
inc
fdiv
fs
sub
shl
add
push
nop
push
fidiv
sub
add
jmp
test
xor
dec
sbb
or
mov
inc
mov
rcr
xor
pop
scas
mov
test
mov
in
loopne
and
push
xchg
push
sbb
inc
xor
add
dec
inc
ja
or
or
add
add
in
sbb
jae
out
in
jp
mov
fadd
jmp
sti
push
pop
repz
jnp
adc
pop
xor
mov
pop
pop
bound
into
repz
mov
dec
sti
ds
sahf
fist
cdq
push
fcmovnu
rcl
fcom
add
push
cmp
retf
adc
(bad)
mov
sub
pop
in
push
push
mov
mov
in
ins
loop
cld
or
ins
adc
test
aaa
retf
jl
inc
mov
and
pop
mov
adc
ret
cmp
and
pop
mov
pushf
push
stos
mov
(bad)
(bad)
inc
clc
push
cmp
mov
outs
pop
mov
add
into
repz
test
or
lds
lds
fild
push
inc
adc
fldenv
sub
ret
imul
lahf
push
jmp
cmp
mov
jmp
inc
jmp
daa
pop
sbb
int3
test
mov
clc
stos
rcr
pop
ret
add
loopne
add
mov
jb
or
pushf
pop
push
lock
xor
mov
add
(bad)
hlt
ja
sub
stc
hlt
call
pop
xor
mov
pop
jp
loope
cld
test
inc
das
jnp
jmp
mov
and
or
cwde
sbb
sbb
mov
aam
fwait
jecxz
mov
es
pop
lea
xchg
xchg
sub
pop
neg
pop
ret
rcr
out
adc
dec
call
nop
(bad)
lock
xchg
pop
sbb
inc
loop
fstp
ds
fld
xor
inc
add
sub
add
add
jnp
or
push
jmp
cmp
jnp
bound
add
aas
(bad)
into
repz
out
inc
pop
push
ficomp
iret
repz
pop
jae
mov
cmp
pop
mov
test
enter
or
enter
or
push
or
add
inc
add
addr16
ficomp
pop
iret
lods
and
adc
and
mov
and
sub
jmp
mov
rcr
mov
pusha
or
and
sub
sbb
and
inc
sar
add
movs
xor
dec
fwait
lea
and
inc
js
nop
js
push
jecxz
ficomp
cmps
push
mov
(bad)
sar
test
xchg
cmp
shr
pop
jno
jo
repnz
lods
enter
fistp
sub
sub
sbb
pusha
adc
cmp
popf
movsx
mov
jo
scas
test
dec
sub
jnp
mov
dec
pop
pop
lds
push
imul
pusha
pop
cmp
dec
shl
cmp
scas
shr
je
rcl
adc
xor
or
mov
jg
enter
jns
pop
add
push
add
xor
mov
jo
js
out
sub
cmp
movs
pop
mov
push
adc
jecxz
sbb
loopne
ins
inc
push
and
sub
ins
pop
leave
cmp
jge
or
xchg
pushf
inc
out
ins
fbld
fs
jl
dec
out
jae
inc
push
call
ss
mov
repz
arpl
call
movs
jge
or
pop
pop
popf
es
retf
into
repz
inc
fisub
xchg
add
fcmovnu
ja
inc
push
fld
jmp
aas
or
in
adc
xchg
sbb
sub
fiadd
leave
and
fiadd
add
lock
or
adc
xor
pushf
pop
push
sbb
and
in
pop
rol
imul
sahf
mul
es
pop
fcom
jmp
cli
or
sbb
sub
push
sar
shr
cwde
lods
in
xor
imul
or
and
fiadd
add
mov
lock
pusha
rol
sbb
fiadd
mov
xchg
jmp
(bad)
pusha
or
ja
dec
xor
push
add
sub
out
and
loopne
add
or
es
jb
cmp
lea
addr16
pop
mov
xchg
addr16
pop
fmul
jge
ror
sbb
or
ror
and
xchg
pop
push
jne
loopne
dec
movs
xlat
loope
jmp
cmp
xchg
sbb
cmp
dec
dec
mov
shr
add
sbb
fwait
cmp
pop
xchg
pop
jl
xor
clc
jne
xor
(bad)
mov
push
push
push
and
or
mov
loop
stc
or
cwde
push
sti
in
jns
out
imul
loopne
pop
jnp
out
sbb
loop
inc
sub
rcr
pop
out
sahf
cmps
inc
pop
jnp
mov
push
bound
ror
loopne
icebp
rol
pop
leave
push
push
in
jnp
add
mov
clc
rol
mov
daa
in
xchg
outs
inc
(bad)
lock
cmc
inc
add
int
cwde
bound
cmp
xor
call
add
sbb
(bad)
dec
fisub
(bad)
xor
int
adc
loopne
fcomp
nop
arpl
(bad)
movzx
pop
rol
sahf
mov
push
aam
or
shl
mov
int
rcr
ror
push
int3
push
mov
retf
mov
inc
mov
enter
stc
fist
mov
xchg
or
push
test
out
pop
lock
dec
repz
test
lds
loope
out
daa
inc
xchg
aaa
in
cmp
inc
jbe
and
xchg
es
int
pop
aaa
cmp
loopne
sbb
scas
pop
les
pop
dec
or
shl
or
fld
inc
mov
mov
xor
bound
mov
sbb
xchg
mov
cmp
test
adc
xor
push
rol
xor
cmp
pop
or
test
movs
pop
pop
cwde
nop
fstp
movs
mov
outs
cmp
fwait
xor
push
jo
jb
dec
mov
xchg
inc
sub
xor
inc
movs
shl
outs
adc
cwde
adc
push
nop
ror
popa
shl
pop
and
mov
nop
imul
xor
mov
and
psllw
add
dec
dec
ins
and
and
mov
sbb
rol
inc
repnz
cmp
icebp
cmp
cmp
add
mov
pusha
ror
push
xchg
test
sub
aas
hlt
add
ret
push
enter
rep
idiv
or
inc
pop
es
inc
ins
push
adc
hlt
pop
pop
mov
mov
movs
ret
in
out
pop
mov
pop
xchg
xor
inc
xor
inc
xchg
sbb
sbb
pop
cmp
icebp
call
pop
mov
xchg
xchg
xchg
xchg
add
xor
pop
push
xchg
add
stos
jecxz
adc
xchg
sbb
inc
xor
xchg
xor
cmp
or
adc
sar
in
push
or
push
and
repz
test
mov
xlat
es
push
adc
rol
push
imul
pop
mov
xchg
nop
push
loop
inc
xchg
shl
cmp
xchg
xchg
jecxz
sbb
pusha
add
add
jne
cmp
xor
pusha
jl
jl
enter
xchg
sbb
xchg
pushf
add
loope
adc
xor
lock
pop
xchg
cmp
xchg
mov
mov
add
rcl
sub
mov
inc
add
mov
sub
lock
or
es
and
clc
call
or
mov
jne
retf
cmp
pop
mov
cmp
mov
(bad)
hlt
jg
push
pop
add
call
(bad)
and
push
mov
jmp
xor
(bad)
sbb
pop
jmp
and
push
daa
imul
pop
push
test
rcl
es
mov
pusha
xor
out
jmp
mov
ja
je
sub
add
sub
je
mov
stos
mov
cmps
add
sbb
pop
(bad)
rol
push
or
and
pop
inc
adc
add
and
or
jb
adc
add
sbb
adc
inc
inc
dec
push
sbb
xchg
lods
inc
inc
clc
add
jnp
sbb
cmp
mov
movsx
cmp
dec
stc
jb
imul
fstp
pop
cdq
push
mov
push
mov
adc
cmp
and
adc
ins
je
in
adc
adc
add
sbb
in
add
or
push
and
add
ins
test
mov
cs
sub
call
add
sbb
movs
inc
xchg
test
pop
fs
ds
sub
push
xor
add
xor
push
xchg
or
aas
das
sti
cmp
jg
sti
je
rol
or
rol
cmps
jb
out
loopne
and
mov
mov
mov
mov
inc
jb
dec
jg
push
das
inc
xor
mov
adc
add
dec
das
cmp
cld
pop
pusha
jl
sbb
pushf
data16
scas
cld
call
nop
arpl
stos
inc
or
repnz
sub
jecxz
dec
dec
sbb
mov
es
and
jmp
push
add
push
xchg
hlt
pop
out
cmp
je
ss
push
xchg
push
je
jns
sub
mov
test
xchg
sub
add
int3
test
je
xor
push
sbb
add
aaa
(bad)
cmp
outs
jns
call
jb
loopne
dec
lods
push
adc
jne
jmp
lahf
add
push
(bad)
and
pop
das
in
mov
pop
dec
addr16
sbb
xor
shr
call
lmsw
sub
push
sub
adc
and
das
push
push
xor
xor
aaa
xor
mov
lock
sub
jo
(bad)
sti
clc
icebp
clc
pop
hlt
pusha
imul
dec
and
mov
mov
jmp
pop
dec
arpl
cmp
inc
mov
sub
fimul
ror
test
mov
ret
dec
adc
or
jae
inc
fist
jge
lea
mov
dec
test
repnz
mov
cmp
dec
js
add
inc
pusha
inc
dec
push
pop
cmp
mov
ss
push
cld
cmp
inc
imul
lods
sar
xor
popa
pop
or
add
push
jg
xor
aaa
jmp
add
add
arpl
(bad)
adc
sbb
push
cmc
test
dec
loope
sub
addr16
mov
xor
rol
push
sub
jmp
lock
aas
push
add
lock
fcomp
xlat
lea
test
add
xor
aas
xor
dec
mov
rol
sbb
arpl
mov
push
cmp
xchg
ja
loopne
icebp
inc
or
add
add
push
clc
retf
arpl
(bad)
sub
push
xchg
cmp
leave
add
sub
adc
sbb
push
loop
dec
ja
inc
xor
loopne
call
lsl
cmp
(bad)
dec
pop
inc
or
jecxz
sti
adc
pop
idiv
xor
inc
mov
jmp
sbb
sbb
push
imul
rcr
adc
ret
pop
pop
ret
cmps
sub
test
imul
mov
adc
add
je
dec
je
add
jmp
fisttp
sub
fadd
sub
gs
inc
sub
sbb
pop
xor
mov
lahf
(bad)
jb
or
not
imul
jmp
mov
xchg
pop
xchg
add
je
ret
lods
mov
push
mov
or
es
jmp
add
popf
push
iret
repz
scas
mov
inc
loop
cmp
inc
add
lock
gs
seto
ins
and
pop
nop
ret
imul
dec
pop
div
hlt
jmp
sub
idiv
and
pop
push
aam
fimul
push
and
mov
adc
inc
cld
cmp
pop
out
or
std
repz
jmp
xchg
adc
rol
mov
mov
les
mov
pop
clc
sbb
mov
pop
xchg
add
push
dec
cmp
repz
test
repz
sbb
cwde
test
inc
mov
je
je
in
(bad)
sbb
in
jmp
daa
adc
and
sub
movs
inc
inc
sub
add
add
xor
div
retf
mov
adc
jmp
mov
loop
cmp
mov
jmp
cmp
and
lods
add
add
lods
aaa
pop
(bad)
sbb
enter
jbe
and
pop
rol
data16
ins
and
and
arpl
nop
or
xor
nop
(bad)
int3
pushf
daa
mov
gs
imul
mov
pop
xor
inc
daa
or
push
popa
and
int3
mov
and
js
xor
push
ror
mov
cwde
pusha
outs
sti
push
mov
repz
add
push
and
ror
cmps
loop
add
cld
or
add
mov
lds
icebp
sbb
mov
or
or
mov
mov
sti
inc
int
sbb
add
mov
xlat
and
jl
xor
and
mov
je
dec
enter
mov
repz
and
fcomp
faddp
dec
ins
add
dec
loope
std
cmps
add
cmp
pop
pusha
call
sti
add
ins
leave
fdiv
lds
dec
mov
mov
pusha
fs
lock
popa
fld
lahf
xor
jb
mov
xchg
or
in
fld
leave
mov
or
sub
pop
jne
jle
sub
push
or
lods
jmp
cmp
or
xor
fcmovnbe
jp
dec
(bad)
mov
inc
clc
pop
and
imul
mov
popa
das
mov
push
xor
mov
inc
push
rcl
xor
cwde
pop
push
ds
movs
sub
aam
jne
sbb
test
jmp
or
or
jmp
mov
adc
jno
inc
xchg
lahf
adc
hlt
jecxz
or
xchg
neg
cmps
mov
popf
inc
mov
mov
jmp
pop
cwde
xchg
movs
mov
inc
sub
xor
fadd
ret
or
out
cmp
add
and
push
add
retf
cmps
or
inc
pop
mov
inc
jnp
adc
adc
fisttp
shl
repz
fistp
add
sub
enter
xchg
push
sti
adc
or
cmp
or
and
mov
push
mov
outs
xor
jmp
ret
dec
je
push
repnz
add
pop
hlt
mov
or
or
mov
mov
ret
dec
sub
sub
adc
data16
in
pop
xor
or
add
(bad)
push
adc
xor
sbb
jbe
bound
jle
xchg
fld
outs
add
pop
or
adc
pusha
push
dec
adc
aaa
mov
fistp
jbe
adc
ret
or
jae
jae
cmp
addr16
inc
ja
pusha
mov
mov
sub
ror
jle
pop
jo
std
xor
outs
push
inc
push
mov
aam
ret
iret
add
loop
(bad)
jmp
inc
mov
nop
push
es
pop
xchg
mov
jo
mov
lea
add
rcl
into
nop
cmp
jae
clc
fmulp
jmp
iret
repz
and
xchg
xor
cmp
xchg
add
add
add
pop
(bad)
mov
and
xor
and
and
outs
in
pusha
bound
movs
fstp
push
xor
adc
bswap
push
add
jg
xchg
add
dec
shl
mov
(bad)
xchg
cmc
(bad)
sbb
shl
xor
jne
or
cld
sbb
sub
ror
sub
fsubr
(bad)
push
mov
sahf
inc
mov
je
cmova
jns
data16
jne
sbb
mov
jne
(bad)
add
push
pop
adc
mov
sbb
jo
push
push
xor
das
add
mov
and
loopne
(bad)
scas
push
loope
cmp
jnp
and
hlt
mov
in
add
xchg
mov
fdiv
dec
cmp
xor
xor
push
mov
mov
push
and
inc
sti
lods
and
mov
adc
test
dec
jnp
add
ret
push
outs
or
jecxz
imul
std
inc
lds
cmp
mov
xor
mov
mov
sti
sub
gs
inc
add
sbb
jmp
adc
adc
aad
mov
aam
xor
in
mov
dec
and
jne
ss
adc
inc
jo
cmp
jnp
test
call
mov
(bad)
xor
xor
cmp
adc
push
cmp
or
xor
fild
loopne
cmp
xor
cmp
dec
cmp
pop
fidiv
or
ja
dec
sub
mov
scas
add
cmp
push
jnp
mov
jecxz
sti
outs
push
sbb
mov
fiadd
xor
jae
jnp
cmp
push
in
add
push
inc
std
test
fchs
adc
mov
fnstsw
adc
pop
call
shr
pop
pop
push
add
and
mov
aaa
sbb
add
aas
xor
sbb
mov
and
jbe
mov
pop
data16
adc
dec
and
or
pop
add
retf
push
cli
inc
mul
(bad)
dec
sbb
js
add
fimul
xchg
jns
mov
dec
add
xchg
neg
mov
add
ret
mov
sub
dec
push
mov
(bad)
jg
icebp
xor
enter
mov
inc
pop
daa
outs
xlat
jo
dec
cli
daa
xchg
add
sahf
out
ret
xchg
sbb
jp
fstp
out
clc
dec
jecxz
iret
shr
mov
das
dec
xchg
into
dec
in
lock
arpl
or
or
dec
movs
mov
cmp
adc
pusha
mov
fild
jnp
mov
xchg
rol
mov
fs
popa
pop
or
(bad)
and
mov
mov
add
cli
lock
(bad)
dec
test
push
adc
aas
ficomp
pop
into
jns
pop
xchg
push
stos
push
shr
jns
out
or
inc
jns
mov
ja
pop
pop
adc
out
inc
push
sbb
or
inc
mov
mov
sub
and
fild
mov
mov
pushf
dec
pop
jmp
(bad)
mov
aad
ins
mov
not
loope
fwait
add
dec
sbb
js
jmp
mov
push
shl
add
in
leave
jmp
jmp
adc
cmp
movs
push
pop
add
shl
sub
out
(bad)
fstp
jb
xor
push
loopne
sbb
inc
pop
or
push
xor
neg
loope
cmc
push
sti
push
add
imul
dec
push
pop
or
cmp
repz
pop
and
das
xor
clc
dec
loop
inc
sub
or
xchg
and
inc
jno
push
outs
sub
jmp
hlt
push
or
pop
fs
or
ins
shl
hlt
(bad)
fimul
dec
or
addr16
lds
xor
and
movs
jl
sbb
popa
stos
mov
push
daa
pop
inc
iret
shr
pop
pop
dec
bound
mov
lds
test
stos
rol
cdq
push
inc
or
inc
jo
ror
fnsave
sub
add
je
and
(bad)
fidiv
movs
mov
sub
xchg
xor
rol
arpl
std
add
ds
fnstenv
out
sbb
inc
fidiv
or
inc
cld
stos
test
push
push
not
inc
mov
loop
xchg
nop
push
test
out
inc
ins
jo
jns
xchg
or
xchg
push
ins
popa
and
retf
aas
retf
add
lea
adc
and
in
and
xor
ds
xchg
test
fiadd
iret
inc
popa
je
pop
adc
and
jb
add
ret
inc
push
or
or
movs
cmovb
gs
outs
pop
add
loope
xchg
and
sub
pushf
(bad)
and
inc
iret
loopne
adc
dec
outs
je
cs
add
shl
mov
dec
outs
dec
sbb
add
stos
sub
das
adc
test
lea
call
clc
pop
add
cli
call
push
loopne
adc
enter
and
arpl
push
dec
mul
movs
push
inc
das
cmp
jmp
cmp
loope
lea
je
je
pop
sbb
stc
inc
sbb
add
pop
loopne
inc
(bad)
das
jae
dec
inc
mov
pop
and
jbe
sub
cmp
and
push
mov
mov
pop
adc
mov
or
and
daa
ror
jno
rcr
lea
rol
rol
add
add
add
es
add
call
dec
or
push
cmp
retf
loopne
inc
ret
or
test
cmc
mov
repz
fcom
xor
call
jmp
push
mov
and
push
or
sahf
push
popf
xchg
cmc
addr16
sbb
lea
mov
dec
(bad)
enter
(bad)
not
aam
pop
daa
test
hlt
stc
xchg
rcr
add
into
sub
push
push
clc
xor
movs
pop
icebp
mov
pop
sbb
dec
(bad)
adc
jmp
scas
pop
push
or
mov
aad
mov
(bad)
and
push
or
adc
jmp
push
xor
xchg
and
sbb
cmps
stos
or
repz
rcr
fcmovne
cmp
sub
push
fld
ret
push
das
scas
and
sbb
(bad)
push
sar
iret
xor
clc
sub
call
or
out
add
arpl
leave
xor
pop
out
shr
mov
adc
jg
cwde
(bad)
outs
mov
test
cmp
push
adc
or
stos
mov
or
test
add
inc
mov
xchg
mov
inc
jno
outs
add
sti
jg
or
pop
rol
dec
inc
sar
sub
inc
rcl
xchg
push
sahf
ds
fs
lea
sub
retf
mov
add
add
ret
push
add
out
or
pusha
shl
(bad)
push
loopne
adc
mov
mov
inc
or
add
xchg
outs
or
add
or
xor
out
das
and
xor
cmp
loopne
rol
shr
les
mov
test
repnz
popf
sar
and
mov
mov
dec
in
nop
add
adc
mov
pop
stc
dec
dec
xchg
scas
pusha
ret
push
pop
ror
jne
push
jns
push
inc
mov
pop
sub
jns
cmps
sub
mov
mov
xor
movs
nop
icebp
mov
icebp
in
outs
je
sbb
cmp
loope
loopne
lock
jae
sahf
or
or
add
arpl
cmp
and
and
call
lds
add
mov
push
inc
sub
int3
sub
js
jl
dec
inc
call
je
sub
or
add
push
test
lock
test
sub
and
mov
call
xchg
pop
shr
push
or
fiadd
push
cmp
pop
lock
mov
popf
mov
push
sub
mov
adc
call
retf
inc
jle
push
dec
jns
push
lea
sbb
adc
add
or
or
or
ss
(bad)
xor
and
nop
xor
or
popf
call
fild
sbb
cmp
fmul
outs
jne
cdq
sbb
xor
fld
adc
add
push
mov
hlt
mov
sbb
mov
div
clc
add
add
clc
inc
push
lea
mov
retf
(bad)
call
or
loop
inc
mov
push
into
in
lock
ficomp
push
fst
xor
xchg
out
push
nop
ret
pop
jge
lds
fild
or
push
xor
movs
test
movs
add
mul
jg
add
or
cmp
jle
mov
pop
add
imul
dec
push
leave
push
xchg
mov
mov
shl
cmp
je
icebp
sbb
pop
add
hlt
inc
bound
or
lahf
or
sub
adc
add
rcl
cmp
add
scas
xor
daa
add
fisubr
jmp
cmps
jmp
scas
pop
jne
mov
pop
ud2
or
neg
push
jnp
add
mov
test
xor
add
xchg
or
adc
adc
mov
mov
call
daa
add
dec
ins
xchg
add
test
jl
inc
nop
mov
cmp
mov
inc
dec
jne
mov
inc
cmp
jae
and
pop
ds
pop
dec
mov
mov
mov
or
and
dec
add
mov
and
fdiv
iret
pop
and
pushf
mov
add
xor
sub
jge
pop
inc
shl
pop
inc
cwde
inc
jo
lds
hlt
jnp
cmps
in
sbb
fmul
sar
and
xor
test
jg
mov
cmp
or
or
shr
nop
push
mov
mov
adc
inc
hlt
and
push
lock
or
pop
mov
or
test
add
xchg
test
(bad)
xor
and
jne
mov
and
pop
ss
in
add
dec
cmps
push
addr16
(bad)
(bad)
xor
inc
jo
das
push
outs
mul
imul
ins
pop
mov
pop
adc
lea
xor
push
data16
mov
lea
mov
daa
or
pop
adc
stos
jle
sbb
xchg
sub
sahf
out
data16
xchg
movs
add
outs
adc
jnp
mov
sbb
call
aam
pop
adc
add
fsubr
add
jae
(bad)
mov
sbb
in
cmp
or
pop
adc
or
(bad)
movsx
inc
pop
shl
sbb
push
xchg
add
fld
and
dec
jnp
sbb
fild
pushf
daa
sub
aas
mov
mov
cmps
xchg
rcr
jmp
clc
fmul
jo
push
jmp
jns
jmp
inc
ja
ss
mov
add
mov
mov
dec
ds
mov
iret
inc
adc
movs
jmp
xchg
sbb
push
cs
adc
pop
cmp
push
rcr
inc
sub
pop
adc
shr
inc
push
test
and
push
lahf
mov
add
push
and
sub
pop
rcl
xor
(bad)
js
in
out
test
lea
dec
jl
adc
pop
pop
sub
inc
push
cwde
dec
and
add
jne
mov
sti
add
pop
clc
adc
adc
xchg
shl
xchg
and
sub
fcomp
sub
sbb
das
xchg
in
jmp
add
sub
sub
pop
imul
cdq
test
je
stc
add
jnp
mov
sbb
adc
jmp
aas
in
sti
les
sti
and
pop
pop
sbb
pop
cmp
aas
aas
jge
outs
push
out
push
and
js
pusha
jmp
arpl
outs
cmps
int
pusha
pop
xor
push
dec
ss
arpl
inc
pop
pop
jmp
popa
mov
pop
shl
push
stos
or
dec
lea
jne
and
xor
jnp
in
jp
lea
mov
xchg
lea
test
xor
add
xchg
lock
test
or
mov
ret
add
or
pop
loop
scas
xor
sbb
add
cmp
dec
xchg
je
das
not
dec
sub
out
push
cs
fwait
push
mov
rcl
aaa
fs
rol
nop
inc
xor
push
icebp
mov
or
or
sub
and
icebp
cmps
rcl
jecxz
enter
pusha
aas
mov
adc
mov
jnp
je
xor
shl
bound
mov
clc
xchg
and
test
pop
cmps
cli
xchg
push
fs
(bad)
es
mov
sbb
sbb
adc
add
inc
and
and
dec
or
fcomp
movs
not
cli
adc
mov
sbb
jg
sbb
pushf
sub
mov
mov
lock
bound
pop
shl
lock
retf
mov
div
or
out
or
and
cmps
sti
add
and
xor
fld
push
mov
unpckhps
add
cmps
cwde
ret
nop
addr16
xor
out
or
pop
ja
(bad)
sub
cmp
std
dec
pop
mov
aam
jb
or
pop
jbe
leave
or
jle
nop
dec
ds
xor
sbb
mov
sti
cmp
in
aas
or
jno
inc
mov
mov
dec
je
xor
loope
or
xor
nop
lock
rdpmc
test
inc
call
add
push
ja
(bad)
imul
js
xor
or
pop
mov
pop
and
push
mov
jne
inc
inc
sar
lock
adc
add
outs
sbb
pop
ins
jbe
jp
imul
mov
(bad)
aaa
out
sbb
push
enter
xchg
inc
pushf
arpl
cmp
cmp
and
in
daa
outs
and
arpl
inc
add
sbb
mov
lods
cwde
adc
js
hlt
mov
jno
push
push
clc
add
mov
inc
lock
inc
pop
addr16
or
mov
test
and
cli
data16
sub
sti
mov
pushf
pop
or
dec
mov
sbb
ret
es
je
jo
outs
inc
mov
jl
cmp
add
les
mov
enter
mov
adc
ror
add
mov
cmp
jb
jns
fstp
int3
lock
adc
mov
mov
clc
(bad)
hlt
imul
stc
inc
push
cmove
pop
xor
mov
stc
push
mov
pop
mov
mov
fs
cld
ins
sub
jo
sbb
mov
adc
jl
push
or
ret
in
mov
adc
xchg
retf
js
mov
fld
sub
mov
pop
xor
pushf
and
js
dec
gs
and
or
dec
loope
inc
xchg
loopne
cmp
xor
mov
and
or
add
add
xchg
out
mov
pushf
dec
push
mov
in
xchg
mov
mov
mov
jae
add
or
or
jle
cmp
mov
adc
and
es
adc
popf
xor
nop
in
jo
or
or
loope
push
add
and
push
loope
adc
pop
adc
aas
or
out
mov
xchg
nop
adc
push
sbb
push
rcl
push
xchg
cmp
lds
sub
push
nop
ins
push
rcr
into
push
inc
push
xor
iret
fild
dec
test
or
push
push
inc
cmp
or
rcl
add
xchg
das
adc
or
test
push
int3
or
push
imul
pop
add
mov
add
movs
add
mov
sub
add
add
nop
or
xlat
nop
adc
mov
aaa
ins
or
jmp
or
push
nop
dec
or
add
not
pop
(bad)
pop
pop
push
adc
mov
inc
add
aas
int
dec
sbb
push
imul
popw
sbb
sub
ja
in
and
ret
push
ins
mov
and
ror
iret
int3
clc
nop
arpl
jbe
adc
or
adc
sti
add
push
sbb
pop
sub
inc
pop
xor
int
pop
mov
aas
xlat
pusha
inc
add
pushf
push
add
xchg
adc
mov
pop
mov
adc
pop
mov
sbb
xor
cmp
in
add
adc
adc
jo
push
push
xor
sub
loopne
ja
cwde
sub
mov
mov
mov
pop
mov
mov
push
sub
je
movzx
push
push
or
inc
lahf
mov
and
mov
add
mov
cmp
push
fnstcw
test
mov
sub
ins
or
stos
and
mov
inc
daa
movs
call
mov
mov
inc
cmp
lock
mov
mov
mov
add
or
sub
mov
push
xchg
push
dec
shr
adc
shl
xchg
jne
inc
add
in
adc
xor
imul
ss
add
adc
xchg
lock
mov
mov
out
push
or
push
leave
adc
test
push
dec
imul
adc
add
jmp
add
jne
xchg
shl
sub
jne
or
sahf
push
dec
sub
adc
sbb
xchg
fmul
sti
mov
xlat
jb
mov
add
fwait
sub
imul
ja
sbb
outs
add
or
mov
pop
dec
ret
xor
mov
add
pop
adc
sub
or
jb
pop
push
sub
sahf
push
(bad)
or
adc
add
loop
data16
sbb
sti
jne
xor
dec
inc
and
jg
pop
pop
cli
inc
push
adc
jge
mov
add
sub
in
or
rcl
push
push
pop
clc
mov
ja
push
aam
dec
(bad)
adc
(bad)
mov
push
dec
push
sbb
(bad)
push
lods
nop
add
lock
icebp
fisubr
test
fst
jne
icebp
dec
inc
push
sbb
sbb
sbb
push
add
cmc
rcr
add
cmp
lds
popf
jmp
sbb
cs
es
ja
sub
cmp
ja
cmp
mov
jp
sti
mov
or
add
or
push
in
mov
aas
or
mov
fild
mov
inc
lock
daa
jo
loop
adc
inc
mov
inc
loopne
add
hlt
xlat
pop
sub
jg
mov
and
mov
ret
loop
mov
sub
mov
popf
cmp
jle
add
adc
jbe
mov
cmp
mov
(bad)
jbe
xchg
or
sti
push
push
dec
and
js
or
ss
mov
sar
jb
add
add
xor
jmp
lock
sub
mov
cmp
jae
mov
cmp
jae
sub
sub
std
add
add
add
xor
pop
mov
sti
pop
(bad)
out
clc
mov
dec
and
movs
inc
fistp
xor
idiv
or
mov
mov
aas
or
xor
jne
outs
dec
sbb
mov
pop
sub
jne
frstor
jp
aam
xchg
xchg
pop
pop
ds
pop
mov
adc
push
or
pop
fld
push
jne
or
jle
xor
xlat
sub
mov
stos
mov
jl
xor
outs
(bad)
gs
sub
mov
stos
push
nop
imul
das
or
mov
mov
jne
xor
pop
mov
ss
jne
xchg
mov
(bad)
popa
jo
nop
cmp
cmp
xor
loope
mov
pop
inc
mov
(bad)
repnz
cwde
aaa
jecxz
add
and
mov
jbe
ror
aad
xchg
mov
cmp
ret
cmp
lea
test
or
jmp
jecxz
sub
add
mov
inc
push
les
dec
xchg
ja
shl
mov
leave
adc
clc
seta
aam
cmp
adc
sbb
dec
xor
cmp
(bad)
fdivp
sar
mov
lods
dec
or
inc
adc
popa
sub
inc
push
or
or
pop
add
sub
imul
(bad)
iret
add
add
shl
sub
outs
ja
or
sub
cs
push
sub
int3
dec
mov
jmp
loopne
mov
stos
jbe
inc
pop
(bad)
fld
jne
clc
adc
adc
stc
adc
cmp
pop
cs
dec
cmp
adc
lock
sbb
mov
mov
and
adc
adc
shl
dec
or
push
movlps
mov
cmp
add
push
mov
adc
mov
mov
cmp
shl
mov
or
mov
fwait
mov
mov
push
into
jmp
add
xor
pop
inc
test
retf
outs
sub
xchg
or
adc
ret
inc
(bad)
rcr
fcom
je
sub
push
pop
add
xor
sub
xor
test
scas
ret
js
int3
and
test
or
(bad)
cmp
cmp
xor
mov
jbe
xor
test
mov
ins
adc
test
imul
(bad)
bound
lock
sub
and
mov
pop
adc
dec
test
retf
pop
jp
pop
mov
sbb
aam
ror
cli
mov
pop
cld
jg
clc
sub
sub
cmp
jge
jae
icebp
mov
out
fsubr
sub
jmp
daa
xlat
cld
lea
and
in
cmp
xor
aad
(bad)
(bad)
mov
add
adc
ror
loope
frstor
ret
or
or
and
fistp
dec
sub
xor
lock
aaa
adc
jle
mov
hlt
cmps
adc
mov
pop
ins
mov
sbb
cmp
inc
adc
and
lds
add
sub
cmp
fbstp
xor
out
mov
add
xchg
pop
sysenter
sub
add
inc
adc
or
jle
push
xor
daa
or
dec
loopne
mov
or
sub
arpl
pop
mov
movs
movs
mov
aad
cmp
xor
or
add
cwde
or
mov
inc
sar
cmp
pusha
xchg
push
sub
add
adc
repz
cmp
jae
xor
sub
(bad)
sbb
or
jmp
cmp
add
push
les
pop
pop
aam
add
bound
or
xor
cmc
cwde
add
aas
pop
push
les
movs
test
pusha
lock
ds
loop
fsubr
clc
add
mov
lock
push
shl
jmp
mov
iret
call
mov
clc
dec
add
mov
imul
dec
pop
out
adc
lods
cs
pop
(bad)
sbb
pop
je
pop
jmp
sub
lock
mov
add
es
ins
fstp
jne
movs
sub
cmp
adc
mov
dec
add
xor
dec
(bad)
loope
sub
xor
cmps
cmp
(bad)
jne
adc
cmps
rol
(bad)
xchg
sub
es
jne
jne
and
js
pop
xor
rcl
outs
fadd
or
dec
int3
sti
clc
stos
jle
and
sbb
jbe
(bad)
jmp
add
sbb
push
jo
out
jge
mov
add
(bad)
xchg
inc
xchg
or
pop
or
xor
loop
jns
mov
pop
inc
scas
shl
loopne
loopne
push
or
xor
push
retf
jge
add
xchg
mov
or
adc
mov
test
or
push
or
jbe
pop
pushf
add
jmp
mov
sbb
sar
sub
mov
add
call
loope
pop
jmp
inc
xor
push
fst
dec
arpl
repz
mov
fs
jne
out
jle
nop
sub
mov
mov
mov
fwait
std
pop
scas
mov
lock
test
jne
test
ja
inc
and
or
popa
mov
push
add
sbb
inc
mov
(bad)
mov
or
ret
jge
mov
ret
das
jl
enter
pop
in
inc
xchg
or
ret
les
mov
add
xor
(bad)
das
or
dec
mov
adc
ret
sbb
inc
xor
cli
add
or
or
ret
and
aaa
test
cs
sbb
or
adc
enter
mov
cmp
dec
cmps
call
mov
or
ss
(bad)
mov
(bad)
mov
and
fsubr
aam
cmp
jl
les
mov
ret
mov
add
int3
movs
in
in
std
jne
jge
cmp
ror
push
ds
add
nop
movs
add
cmps
push
loope
add
sbb
inc
inc
jbe
inc
add
lds
adc
pop
subps
imul
jl
or
iret
adc
sbb
shr
add
neg
lock
cmp
and
jne
or
sub
popa
sbb
out
ret
pusha
xchg
push
mov
push
inc
mov
mov
mov
mov
or
je
mov
pusha
lock
nop
jmp
mov
mov
fmul
test
mov
js
sbb
adc
sar
or
adc
imul
in
push
cmp
add
pusha
dec
adc
cs
add
das
inc
pop
ret
test
sub
add
aaa
retf
adc
shr
mov
inc
adc
call
add
lock
outs
adc
pop
nop
jmp
sbb
pop
add
mov
je
mov
xor
or
xor
sbb
enter
(bad)
cld
dec
pop
fcomp
mov
ret
fcmove
pop
imul
sub
adc
repz
jno
arpl
ja
mov
mul
les
aaa
lods
dec
mov
pusha
lea
outs
iret
or
inc
sub
ja
les
and
mov
xchg
retf
rol
cmp
je
lea
push
popf
and
lods
pop
xor
add
push
inc
xchg
pop
or
adc
cmp
or
pushf
fwait
add
adc
std
inc
push
je
and
cmp
or
or
sbb
xor
sbb
jle
cmp
jo
mov
mov
mov
cmp
mov
jg
fiadd
cmp
aam
add
or
jne
hlt
lock
popa
and
adc
(bad)
mov
or
or
je
sub
cmp
jg
call
sub
sub
inc
or
sar
(bad)
mov
inc
mov
jmp
fwait
add
js
in
mov
jmp
mov
adc
push
mov
mov
pop
cmp
lock
cdq
mov
jge
cmp
ja
je
rcr
add
rep
xchg
test
(bad)
pop
ret
pusha
cld
lea
call
adc
xor
cld
inc
out
xchg
(bad)
sub
(bad)
in
or
fwait
or
ins
dec
xor
lock
(bad)
xor
or
pop
pop
das
in
or
je
test
pop
inc
cmp
clc
dec
push
hlt
adc
xor
mov
mov
push
or
lock
or
jne
rol
or
out
add
cmp
add
sub
cmp
mov
mov
js
ins
push
xchg
icebp
std
(bad)
ds
adc
sbb
jo
pusha
test
adc
inc
fbstp
push
fcmovu
jmp
sub
add
cmp
jne
xor
aaa
test
pop
scas
das
push
bound
or
xchg
xchg
jbe
sub
or
nop
adc
dec
inc
and
call
add
cmc
inc
push
test
push
adc
xor
pop
lods
bound
jo
fsubr
pop
retf
add
mov
or
adc
pop
fsubr
fld
inc
add
and
push
sbb
and
mov
adc
jle
je
jae
mov
and
or
adc
cmp
test
xor
mov
ret
dec
dec
mov
fld
inc
inc
out
sub
out
in
add
xchg
push
aaa
jns
retf
loop
jnp
out
scas
ror
pop
sti
fild
sub
jae
cmp
push
xchg
jmp
xor
xchg
jnp
mov
push
loopne
dec
jne
jmp
lea
lods
push
push
push
lahf
mov
adc
jmp
cmp
movs
mov
aad
or
or
sbb
adc
push
dec
cmp
push
push
outs
test
dec
cmps
inc
icebp
push
push
pop
ret
xor
mov
sbb
fisttp
clc
fiadd
dec
add
jmp
stos
add
push
(bad)
rcl
das
es
sbb
pop
cmp
shr
pop
cmp
mov
push
push
fistp
xchg
sbb
sub
and
xor
aaa
mov
ja
and
int
mov
clc
inc
and
adc
or
scas
mov
ret
cmp
adc
jmp
adc
enter
sbb
retf
cmp
retf
mov
inc
inc
not
mov
or
xchg
adc
sbb
inc
inc
push
adc
add
push
shr
dec
push
add
fnstenv
dec
dec
adc
add
aaa
dec
mov
or
loop
xchg
xchg
mov
mov
and
push
adc
cmp
jne
adc
add
mov
ss
mov
cmp
jne
shr
adc
adc
add
call
shr
or
loopne
pop
out
imul
iret
mov
and
mov
cmp
jne
dec
dec
dec
sub
dec
dec
dec
sbb
mov
jecxz
cli
add
dec
enter
data16
stos
(bad)
or
pop
daa
push
inc
in
push
ret
ins
sub
mov
push
inc
cmp
je
mov
or
aaa
push
call
pop
and
je
pop
je
mov
aaa
xor
dec
and
hlt
mov
sbb
and
add
sub
or
cmp
ja
test
and
push
add
push
lock
adc
out
int
or
jmp
inc
imul
inc
js
pop
sub
jmp
inc
inc
jmp
mov
lahf
dec
dec
and
je
and
cdq
jbe
push
adc
js
dec
shl
ret
or
cmp
aad
xor
mov
fbld
xchg
xor
ins
xchg
and
lods
loop
pop
adc
aas
enter
mov
ins
jne
mov
sbb
mov
mov
js
movhps
shl
inc
and
or
jg
push
add
add
sub
cmp
jg
add
mov
push
pushf
shl
movs
out
add
add
pop
pop
jmp
xchg
adc
push
dec
fucomp
add
add
lods
push
fistp
inc
jle
xchg
inc
fs
dec
cmp
xlat
jg
pop
leave
cld
mov
ret
and
test
jg
inc
ror
inc
rcl
cmp
xor
push
jmp
aam
inc
mov
dec
jne
pop
push
mov
pop
sbb
add
mov
outs
(bad)
jmp
mov
and
add
clc
jge
xor
in
or
lods
push
repz
into
fidivr
jbe
gs
sub
je
das
sub
gs
add
pop
and
jmp
movs
xor
mov
xor
xchg
push
cmps
stc
sbb
jmp
fld
or
jmp
fldz
and
mov
add
enter
xchg
cmp
inc
pushf
or
ret
psubw
inc
ds
adc
mov
and
sub
sbb
xchg
and
inc
mov
mov
ror
mov
xchg
sub
daa
xor
out
sub
pop
jecxz
add
repz
mov
xor
cs
jbe
imul
cmp
jae
cli
call
adc
(bad)
lods
inc
aaa
push
mov
xchg
mov
xlat
fadd
lods
outs
xor
xchg
push
or
(bad)
mov
test
into
sbb
ror
mov
push
pop
test
enter
or
sbb
push
inc
bound
hlt
daa
(bad)
retf
into
pop
inc
test
(bad)
(bad)
(bad)
call
pop
inc
in
mov
mov
addr16
leave
repnz
bound
and
inc
outs
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
inc
mov
(bad)
(bad)
call
stos
mov
cmp
or
mov
pop
out
sub
imul
(bad)
idiv
sub
push
jl
xor
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
(bad)
(bad)
call
sar
repnz
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
fcomip
jecxz
(bad)
cli
js
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
xchg
pop
(bad)
ds
push
cmps
scas
mov
pop
or
add
cmp
(bad)
(bad)
(bad)
cmp
in
cmp
sahf
xchg
pop
cmps
lock
mov
popa
mov
(bad)
call
and
addr16
repz
mov
sub
and
and
adc
sbb
outs
bound
xor
outs
mov
jge
fdiv
push
pop
and
and
add
or
hlt
mov
jne
mov
mov
pushf
cwde
sar
jp
pop
cld
push
push
(bad)
pop
inc
or
jno
jmp
or
add
add
pop
popa
push
or
imul
mov
add
and
sbb
xchg
inc
aas
or
mov
sub
push
dec
inc
push
push
inc
push
inc
pop
inc
outs
jb
xor
cwde
cli
jmp
push
dec
add
push
dec
popa
jae
push
popa
ins
lea
aas
addr16
fldcw
pop
inc
and
push
ret
aam
mov
sub
fisttp
cmps
mov
or
add
call
dec
mov
xor
sbb
xchg
jne
adc
callw
add
gs
dec
test
mov
sbb
pop
sub
scas
aaa
dec
movs
cmp
push
and
mov
sbb
sbb
ins
sub
movs
pop
dec
lods
xor
xchg
mov
inc
nop
pusha
hlt
xor
mov
inc
int
mov
je
in
(bad)
lock
(bad)
dec
rep
pop
jmp
sub
in
mov
xchg
dec
call
cmp
je
pop
mov
sbb
pop
sbb
and
inc
sti
jnp
mov
push
sbb
cmp
jg
ja
outs
lods
(bad)
(bad)
push
ror
xchg
or
fcom
lahf
mov
shl
jae
jg
cli
push
cmc
jb
mov
push
jnp
mov
and
cli
shl
xchg
or
cdq
dec
unpcklps
mov
sbb
pop
icebp
rcpps
sub
daa
pop
mov
add
mov
jmp
add
pop
push
ror
push
sbb
dec
fs
jne
dec
setne
and
add
dec
dec
pop
jecxz
sahf
data16
sar
inc
or
xor
xor
jb
cmp
adc
movs
add
dec
inc
data16
fsubr
or
or
adc
fcom
lds
rcr
inc
inc
sub
cli
cmovbe
test
sar
hlt
lods
inc
jo
jle
jne
mov
ror
sbb
xchg
ss
clc
mov
sqrtps
scas
je
pop
xchg
pop
je
neg
pop
add
sub
mov
jecxz
movs
(bad)
mov
lods
pop
pop
fistp
mov
mov
push
sahf
mov
xor
(bad)
jne
das
mov
lods
fs
dec
out
stos
xchg
les
mov
mov
xor
mov
ror
stos
pop
loop
pop
mov
pop
in
popa
lock
xor
dec
jb
js
xchg
adc
mov
sbb
jmp
into
dec
jne
icebp
fucomi
sbb
add
sbb
or
cmps
mov
out
dec
cmp
xchg
(bad)
leave
lahf
adc
cmp
adc
fwait
inc
aad
(bad)
fnstsw
pop
and
jge
adc
sub
enter
pop
sbb
jg
or
fcomp
sbb
jmp
pop
in
add
add
lahf
push
push
push
loop
xchg
ror
jbe
les
je
sar
mov
mov
mov
or
or
pop
test
inc
in
push
push
out
dec
fisttp
mov
push
xor
xchg
aam
push
mov
sbb
bswap
mov
outs
inc
jg
push
push
and
pop
fwait
cli
add
cmp
lds
cli
in
push
call
aaa
add
imul
push
mov
in
scas
mov
mov
or
push
xor
das
add
adc
pop
scas
or
jae
imul
push
push
and
shr
pop
sbb
jmp
jne
lods
stos
or
and
fnstcw
xor
jecxz
popw
add
mov
adc
loop
popa
add
cmp
lea
shl
jecxz
pop
dec
ja
pop
loope
inc
add
jne
fsubp
pop
add
inc
mov
adc
outs
jmp
add
mov
add
je
stos
mov
out
sub
add
cmp
cli
out
push
je
or
in
movs
jae
sub
pop
leave
je
xchg
in
push
sub
push
js
pop
jbe
ror
mov
pop
dec
or
xor
sub
jne
jo
cli
add
mov
or
push
cmp
jb
sbb
adc
push
push
sub
ret
mov
mov
popf
mov
cmp
(bad)
dec
loopne
push
ss
add
inc
add
push
add
dec
sub
jg
jne
jecxz
pop
mov
mov
cmovno
dec
loopne
xor
adc
pop
cmp
sbb
push
add
mov
pushf
add
test
pop
scas
ds
add
lds
mov
out
or
cld
pop
ss
fdivr
dec
fdiv
adc
mov
inc
or
mov
inc
inc
mov
jg
push
int3
inc
add
sar
ror
adc
inc
mov
sbb
mov
in
dec
daa
lahf
adc
dec
inc
push
daa
adc
push
stos
add
bound
mov
push
dec
and
or
movq
inc
popf
pop
je
cmps
mov
jo
ret
push
add
pop
call
call
outs
(bad)
or
pop
ja
sbb
push
push
je
pop
stos
add
adc
stc
shr
mov
arpl
or
inc
and
(bad)
pusha
add
sub
mov
test
xor
mov
or
adc
shl
pop
mov
or
mov
ins
jno
sbb
mov
mov
add
xor
xchg
ret
add
push
sbb
mov
jg
pushf
pop
mov
dec
je
jmp
dec
jle
pusha
ss
jmp
cmp
scas
and
cmp
es
mov
jmp
mov
jmp
mov
(bad)
(bad)
(bad)
std
jmp
mov
jmp
push
sbb
into
jmp
mov
jmp
mov
jmp
mov
jmp
mov
ins
mov
add
rcl
xor
shl
inc
mov
and
jg
(bad)
jns
push
fdiv
outs
xchg
imul
call
mov
push
add
shl
sbb
or
(bad)
or
es
inc
adc
mov
leave
push
rcl
mov
inc
add
inc
imul
scas
mov
dec
push
sbb
jo
cmp
out
mov
xchg
or
add
shr
adc
ja
aad
pop
dec
or
xor
out
xchg
jo
and
dec
mov
arpl
xor
xor
rcr
fst
sub
cld
sub
push
fsubr
pop
daa
mov
add
jle
jge
push
cmp
sbb
add
add
cli
aad
sar
mov
mov
aad
mov
add
call
in
push
mov
cmp
mov
mov
mov
jo
test
mov
mov
clc
sti
mov
dec
cmps
(bad)
mov
sbb
loop
mov
mov
push
push
mov
inc
push
out
xor
xchg
rol
mov
pop
aad
outs
pop
ja
add
mov
inc
mov
movs
pop
leave
aas
push
fidiv
inc
jge
jns
cmp
lock
adc
or
xchg
les
or
or
mov
push
fcom
pushf
inc
xor
ss
inc
fcomp
jge
inc
jg
les
pop
ret
cmps
push
or
gs
sar
call
pop
mov
sub
mov
pcmpgtb
cmp
mov
push
add
jmp
add
iret
clc
pop
cmp
mov
push
cmp
pop
jns
repnz
add
rcl
or
and
add
or
loopne
dec
les
dec
pop
mov
(bad)
lods
fist
mov
mov
sbb
ret
pop
xchg
push
in
push
push
lods
leave
mov
leave
test
ror
or
xor
push
push
and
xor
stos
xchg
push
push
sbb
jbe
adc
enter
pop
pop
addr16
add
push
pusha
xor
fadd
add
push
loope
test
mov
sbb
add
xchg
inc
addr16
gs
or
xchg
adc
dec
pop
cli
mov
clc
std
pop
ret
(bad)
mov
push
sbb
in
jb
mov
jnp
aaa
push
jne
or
inc
inc
jg
mov
mov
aam
ret
dec
pop
xor
add
in
mov
ins
xchg
adc
xchg
clc
outs
mov
push
xchg
push
add
push
pop
scas
loopne
(bad)
push
adc
cmp
xchg
add
inc
clc
lods
cmc
add
nop
daa
cdq
mov
mov
das
stc
mov
cmp
mov
cmp
pop
nop
cmp
or
or
add
sbb
jp
pop
pop
add
ins
das
jns
ret
add
mov
sbb
enter
pusha
std
xor
jmp
lea
cmp
xor
aaa
or
sbb
dec
mov
cvtps2pi
sahf
fld
(bad)
rol
gs
pop
pop
clc
sar
jge
xor
adc
cld
(bad)
push
mov
leave
mov
aas
sub
pop
xor
xchg
and
or
add
jbe
je
sbb
ds
out
neg
call
pop
sub
jmp
out
pop
jnp
push
cmp
or
or
or
addr16
in
(bad)
pop
cmps
loop
jae
add
push
or
daa
mov
jmp
not
pop
add
pop
pop
xor
push
mov
outs
pop
mov
lahf
jg
sbb
add
mov
inc
mov
(bad)
imul
push
aas
jle
pop
retf
and
mov
cld
add
inc
push
cmp
rcl
and
push
and
das
sub
(bad)
cld
out
popa
or
adc
or
cmps
les
shr
ror
inc
mov
jg
fmul
lds
push
sbb
pop
push
data16
clc
mov
push
mov
mov
retf
or
mov
jbe
xor
mov
mov
ror
inc
pop
or
inc
cld
cmp
or
inc
dec
jne
xchg
adc
clc
in
loopne
pop
data16
jae
add
dec
jmp
adc
std
mov
mov
or
test
pop
add
test
push
xor
enter
lea
jmp
mov
sar
shl
(bad)
jo
sbb
imul
cmp
cdq
pop
dec
and
push
push
pop
and
adc
js
and
or
xor
fild
sbb
sub
push
push
pop
aas
or
mov
mov
add
jge
pop
ja
sub
mov
aad
(bad)
mov
mov
rcr
push
pop
mov
icebp
fwait
test
ret
rcpps
sub
cld
out
mul
dec
jl
cmp
jge
sub
mov
push
mov
jb
adc
std
and
(bad)
xor
jmp
sbb
inc
dec
clc
xchg
push
pop
jl
mov
xor
dec
jl
sbb
mov
sub
xor
pop
adc
stc
add
lea
mov
adc
shl
repz
cmp
cmp
adc
inc
dec
mov
cmp
adc
imul
add
gs
cmp
inc
mov
lea
lock
mov
push
add
lahf
in
idiv
test
out
inc
pushf
in
aas
std
mov
dec
dec
js
mov
inc
jb
add
dec
cmp
cmp
cli
je
retf
xor
(bad)
les
sub
aas
push
add
cmp
inc
and
and
add
outs
add
call
or
mov
xlat
xchg
pop
or
xchg
cld
dec
push
outs
sub
cmc
mov
sar
pop
cmp
dec
mov
jo
icebp
jmp
out
retf
(bad)
sub
sub
inc
js
mov
xchg
inc
and
cwde
mov
adc
lahf
shl
div
jp
mov
xlat
add
inc
js
push
fist
pop
xchg
cmp
and
mov
loope
stos
call
adc
mov
push
add
das
adc
jno
inc
add
jo
inc
dec
imul
pop
in
je
or
cmp
dec
sub
push
je
sbb
call
push
push
(bad)
push
rcr
das
rcr
mov
cmp
add
and
pop
pusha
sbb
push
xchg
aad
mov
xor
jle
mov
ret
inc
add
enter
xchg
call
retf
cld
or
(bad)
xchg
inc
mov
add
neg
mov
daa
ret
mov
aas
movs
retf
push
jmp
sbb
xlat
pop
lock
mov
lahf
div
or
out
push
push
inc
jmp
inc
push
xor
in
outs
push
and
inc
and
sbb
push
cvtps2pd
or
adc
test
jnp
adc
sub
jge
pop
dec
cmp
jnp
adc
cs
or
dec
mov
clc
push
int3
add
add
pop
inc
cwde
xor
test
mov
pop
xor
mov
stos
inc
adc
das
in
mov
pop
pop
pop
xor
xor
pop
lock
ja
jb
ds
mov
test
jl
or
loopne
push
mov
hlt
xchg
fidivr
pop
jl
ret
out
mov
xor
adc
inc
mov
ins
push
jecxz
outs
push
ret
or
je
cmp
or
push
mov
or
jbe
add
cwde
clc
jmp
adc
adc
add
and
out
jmp
cmp
push
or
pop
cs
fstp
sti
dec
cs
mov
(bad)
cmp
pop
jmp
cmp
mov
out
and
sub
scas
push
mov
push
ret
lahf
arpl
mov
mov
stc
adc
pusha
loopne
stos
cmps
cdq
out
sahf
and
jbe
add
pop
test
cli
test
fild
mov
pushf
jg
lea
fs
jmp
call
pop
sbb
outs
add
pusha
es
lahf
sbb
inc
and
jmp
stc
pop
stc
shr
sub
ret
test
cmp
and
cmp
icebp
jmp
hlt
lock
gs
adc
and
nop
ret
ja
cmp
clc
inc
add
outs
pop
bound
sbb
push
push
add
sar
xchg
icebp
xor
add
loope
ficomp
push
inc
pop
and
or
cmp
sub
cmp
pop
or
jo
pop
adc
inc
cmp
mov
pop
in
mov
jnp
push
add
fs
jge
in
popa
and
ins
lea
mov
test
xchg
nop
popa
pop
or
push
dec
cwde
or
not
xor
aas
add
xor
mov
mov
sbb
and
ds
sub
jbe
adc
ror
sbb
lock
test
(bad)
and
mov
push
sub
popa
jge
inc
push
mov
jno
adc
sub
jne
sub
push
repnz
pop
pop
cmp
jp
test
sub
mov
mov
cmc
loopne
scas
les
cmp
or
ja
sti
add
fsubr
js
pop
mov
icebp
xor
mov
inc
cmp
add
in
sub
jne
xor
das
dec
adc
popa
adc
push
sbb
pop
and
cmp
setno
(bad)
loopne
adc
out
xchg
xchg
jp
inc
jge
fs
pop
inc
cmp
sbb
and
adc
sbb
inc
jo
enter
lea
xchg
or
add
add
loop
fbstp
lahf
adc
or
mov
mov
cmp
movs
jbe
cmp
jne
mov
adc
mov
mov
nop
pop
inc
shl
lock
xchg
xchg
pop
push
push
pop
pusha
xchg
xchg
xchg
xchg
fs
xchg
xchg
js
add
iret
call
jo
stos
ss
inc
daa
daa
daa
mov
setl
daa
daa
mov
les
sbb
or
and
loop
aaa
fmul
push
addr16
or
lahf
push
adc
pop
pop
push
mul
mov
in
paddd
fcom
jmp
push
test
add
xchg
adc
inc
inc
leave
(bad)
(bad)
push
int3
pop
or
je
out
inc
repz
push
or
xor
fincstp
fild
pop
sub
shl
rcl
rcl
sar
pop
dec
jmp
cmp
outs
add
fidiv
sub
sbb
inc
loop
pop
mov
mov
test
loopne
pushfw
xor
repz
pop
fistp
das
sub
inc
cdq
(bad)
cwde
sbb
out
pop
call
and
xchg
js
add
xchg
clc
bnd
(bad)
xor
das
or
add
outs
xchg
out
xchg
and
inc
jl
push
cld
mov
shl
cwde
xor
push
loopne
ja
movs
outs
es
lods
rcl
jmp
in
or
mov
or
out
sbb
dec
cli
pop
push
mov
ins
add
jl
test
jo
scas
rcl
sbb
frstor
add
add
add
je
or
or
jnp
xor
cmp
push
retf
push
inc
adc
mov
shl
push
jb
push
or
push
out
aam
and
mov
xor
sbb
aaa
jmp
cmp
dec
push
mov
sbb
inc
xchg
inc
and
push
sub
inc
jg
xor
mov
cdq
int
adc
or
and
add
clc
loopne
pop
inc
xor
shr
and
sbb
sti
push
and
push
outs
add
ror
add
jae
pop
sub
mov
js
loopne
stos
ficom
or
cs
jg
shr
add
cmp
sub
clc
es
xor
nop
int
add
sub
add
imul
or
out
pop
adc
jmp
setl
cmp
je
dec
add
push
test
ret
in
mov
or
add
adc
or
lock
adc
dec
jp
jecxz
call
cmp
sbb
lds
xor
mov
test
xchg
add
imul
inc
lock
pop
shl
add
(bad)
xor
add
or
push
or
(bad)
xor
ficomp
push
cmp
add
rcr
in
test
jmp
cmp
mov
and
xchg
and
inc
jp
sbb
nop
sbb
cwde
loopne
xchg
ins
imul
xchg
sbb
in
cdq
sar
mov
pop
dec
mov
mov
pop
pop
push
and
cmc
dec
sub
mov
hlt
test
or
int
inc
sbb
movs
adc
into
push
rep
shr
dec
rcr
outs
adc
test
mov
fimul
add
cmp
xlat
sub
lahf
adc
fadd
ret
sbb
jle
cwde
mov
xchg
loope
add
xchg
sbb
inc
aas
and
xor
(bad)
hlt
out
add
jge
sub
and
and
add
ret
out
push
add
mov
test
(bad)
(bad)
ins
cld
mov
dec
pop
xor
sub
jge
fmul
out
aas
in
idiv
cld
outs
cmp
ret
(bad)
(bad)
jo
sub
add
or
repnz
or
rol
or
xor
clc
add
out
iret
adc
mov
add
push
adc
inc
and
or
jge
add
adc
jbe
out
pop
loop
shl
pop
hlt
mov
sbb
mov
or
out
dec
das
adc
(bad)
and
or
add
mov
clc
scas
hlt
mov
fcomip
dec
jne
dec
cmp
push
adc
push
jo
xor
ficom
mov
in
push
sbb
(bad)
ds
add
adc
dec
jl
(bad)
dec
push
push
mov
inc
movs
pop
pop
pushf
ror
add
in
sbb
xchg
adc
adc
and
inc
sbb
add
data16
jg
add
dec
or
out
sub
dec
mov
loopne
xchg
mov
add
adc
test
inc
es
adc
and
push
add
pop
cs
adc
shl
sbb
push
or
mov
push
ficom
mov
inc
jl
mov
jl
ficom
mov
cmpxchg
enter
or
std
(bad)
cld
js
mov
je
sbb
inc
push
add
inc
jl
ret
push
pop
ins
daa
mov
cld
add
loopne
call
addr16
sbb
or
jle
mov
loopne
vmread
pop
jne
sbb
std
fmul
cmp
test
mov
xor
jne
(bad)
cmp
jbe
fisubr
les
mov
mov
cld
rol
rol
cli
(bad)
push
dec
jg
gs
inc
retf
dec
in
imul
int3
aaa
(bad)
ja
adc
ins
or
mov
xor
(bad)
in
jb
mov
inc
cmp
fwait
jg
mov
ret
dec
push
push
dec
rol
xchg
adc
sbb
neg
ret
enter
inc
arpl
xchg
enter
cmps
sub
bound
sbb
add
sbb
out
jae
test
(bad)
mov
pop
mov
out
out
or
rcl
and
movs
cmp
add
add
pop
or
inc
xor
xchg
jg
(bad)
fadd
pop
or
ret
push
push
out
xchg
add
sbb
mov
push
cmp
int
add
push
repnz
inc
and
rol
into
jno
and
(bad)
push
lods
repz
xchg
add
pop
cmps
pop
add
inc
rcr
mov
xchg
push
or
sti
jnp
mov
sbb
xor
inc
push
test
xchg
sub
lock
inc
out
pop
jb
fcom
sub
sbb
setg
add
jns
mov
xlat
ror
das
outs
ins
ret
inc
xor
xor
cmc
add
xor
dec
outs
data16
popa
jb
cmovno
inc
push
gs
xchg
sbb
ja
inc
inc
adc
popa
mov
bound
jecxz
mov
in
inc
inc
inc
push
rol
add
mov
pop
out
xor
add
inc
mov
add
push
js
mov
lds
add
(bad)
jp
mov
add
mov
add
pusha
pop
retf
add
ror
(bad)
fstp
pusha
lods
pop
mov
adc
test
inc
das
cmps
test
push
lock
cld
call
xchg
jo
mov
mov
mov
jp
sbb
lahf
mov
jmp
in
xchg
test
add
je
xchg
out
sbb
fwait
cmp
rcr
or
test
mov
cmp
jne
mov
sbb
and
jmp
push
fmul
call
sub
add
sub
(bad)
or
inc
jns
inc
call
mov
and
cmc
or
sub
sahf
adc
adc
dec
push
mov
or
add
lea
pushf
and
test
shl
nop
add
add
inc
ret
lea
lds
xor
imul
adc
sti
ja
push
shl
add
push
movs
add
movs
cmc
mov
mov
test
or
fcomip
push
add
call
cmp
ja
mov
inc
jmp
cmp
cmp
lea
cmp
ja
shr
fcmovu
fdivrp
or
mov
adc
sbb
and
retf
sub
add
jmp
pusha
add
fstp
dec
retf
shl
ffree
test
sub
jb
or
pop
rcr
or
xor
push
push
(bad)
pop
adc
or
ins
adc
fld
inc
add
jb
and
add
and
pop
pop
xor
aaa
jnp
(bad)
jns
inc
xchg
aaa
gs
(bad)
test
mov
xchg
dec
inc
shr
xor
rol
neg
out
add
loope
and
je
cmp
adc
movs
lods
or
mov
sti
xor
inc
mov
add
iret
shl
or
mov
pop
sub
pop
in
cdq
dec
dec
dec
cld
jle
pop
call
adc
inc
call
push
(bad)
xor
adc
dec
lock
cmp
push
inc
ja
mov
ret
std
push
dec
cmp
and
cmp
adc
je
aas
xor
dec
or
rol
cmp
js
add
jno
xor
pop
xchg
lods
cli
rol
jbe
inc
mov
sub
pop
addr16
ror
xchg
rol
or
pop
add
adc
and
push
pop
dec
and
cdq
push
pop
enter
mov
ja
and
pop
or
clc
adc
in
push
adc
jmp
dec
or
push
dec
mov
mov
add
pop
mov
pop
push
rcr
pop
(bad)
adc
popa
fmul
imul
aam
xchg
push
outs
inc
pop
add
dec
mov
sub
inc
dec
jb
or
mov
test
aam
jl
jns
push
adc
or
out
cld
pop
mov
xor
sub
pusha
pop
push
sbb
pushf
mov
inc
test
pusha
or
pop
add
bound
std
movs
scas
and
imul
adc
dec
lods
cmps
loop
or
push
mov
push
xor
mov
cli
add
into
jnp
mov
and
lods
imul
dec
dec
in
hlt
ja
lods
dec
and
xlat
jb
js
jp
adc
cmp
repnz
dec
mov
adc
dec
aam
adc
push
xchg
or
mov
bound
lock
sbb
push
adc
adc
scas
loopne
test
and
jno
cmp
enter
jle
cwde
jg
in
jbe
in
mov
ltr
(bad)
leave
jo
adc
pop
push
sbb
scas
loopne
popa
mov
repz
adc
push
jne
and
repz
xor
inc
dec
jnp
iret
repz
pop
stc
lods
add
or
inc
push
xor
xchg
cld
mov
pop
rcr
mov
mov
xor
add
mov
xchg
test
inc
pop
add
es
lfs
dec
adc
sbb
inc
push
mov
push
push
bound
gs
retf
gs
jb
das
call
adc
add
dec
mov
sub
gs
adc
dec
pop
and
pop
mov
repz
sub
push
xchg
in
sbb
sub
xor
adc
add
push
mov
push
stos
add
xor
sbb
in
and
sbb
iret
sub
iret
xchg
cld
sbb
pop
ret
inc
add
(bad)
arpl
sub
inc
add
sub
or
adc
xor
or
fisttp
(bad)
jne
ja
sub
and
pop
xor
cmp
dec
and
and
jle
push
push
add
outs
add
adc
(bad)
cmp
mov
add
or
xor
test
loop
add
aaa
nop
icebp
maxps
dec
add
int3
add
and
or
loopne
ret
add
push
dec
xor
dec
adc
and
xor
push
and
adc
in
addr16
test
push
mov
mov
lea
inc
shr
adc
add
shl
dec
clc
gs
cdq
pop
mov
inc
or
fnstenv
loop
add
inc
mov
push
fsubr
lds
xchg
sbb
clc
test
and
jecxz
fist
dec
aaa
ss
inc
sub
sub
and
(bad)
sub
sub
push
pop
sbb
cmp
sub
sub
and
dec
sub
xor
sub
or
adc
inc
pop
mov
aas
es
mov
push
aas
addr16
adc
or
mov
push
sbb
enter
sbb
xor
xchg
sub
lds
loopne
adc
inc
jl
push
cmp
xchg
push
xchg
jmp
mov
add
sbb
inc
std
mov
icebp
add
sbb
imul
inc
add
add
or
imul
pop
icebp
xchg
add
out
pop
mov
inc
(bad)
shr
and
and
dec
test
sbb
call
nop
rcl
mov
into
test
imul
lock
cs
xchg
inc
add
push
push
fsub
cmps
inc
rcr
xor
scas
mov
cmp
imul
ja
sbb
add
aaa
xchg
in
adc
mov
cmps
ds
call
fstp
jno
jge
cmp
xor
ins
sbb
popa
add
inc
sub
fimul
je
and
dec
adc
or
or
cmp
in
jmp
push
cmp
adc
mov
mov
add
or
sbb
xchg
lea
adc
fwait
xchg
push
sub
inc
mov
push
clc
sbb
dec
add
sti
sub
sub
inc
mov
pusha
daa
and
movs
(bad)
or
or
pop
dec
inc
pop
add
xchg
push
push
add
mov
idiv
jle
scas
push
push
pop
mov
and
mov
cmp
push
xor
cli
add
call
dec
push
pop
push
dec
dec
dec
inc
dec
push
add
mov
sub
xor
jo
or
xchg
inc
mov
and
xor
aaa
sub
mov
jp
loopne
or
push
test
adc
mov
sti
lock
mov
xchg
cmp
or
fisubr
mov
cmp
jne
push
push
or
ss
push
adc
call
test
in
and
dec
jp
or
inc
sbb
push
adc
mul
cmps
cld
mov
cs
repnz
add
jl
or
and
test
lock
mov
sbb
das
xor
add
jle
push
mov
dec
or
dec
pop
shrd
test
stos
test
mov
adc
cmp
test
and
pop
add
mov
jmp
and
xor
in
jmp
push
lods
xchg
rol
adc
pop
and
push
call
pop
nop
out
out
dec
cmp
add
ds
add
ret
xchg
shr
daa
mov
cwde
mov
in
pop
xlat
stos
sub
inc
sbb
sbb
xchg
jge
mov
ds
mov
sbb
loop
call
xlat
mov
push
jecxz
add
and
push
jbe
mov
add
inc
push
lea
pusha
sbb
mov
add
sbb
mov
icebp
push
inc
mov
les
outs
shl
sahf
cwde
jbe
sub
test
sub
int3
in
jge
test
mov
mov
xchg
test
dec
rcr
push
inc
inc
arpl
aaa
or
or
pop
and
dec
mov
sbb
je
outs
jae
daa
jl
sub
outs
mov
pushf
jne
add
and
add
pop
test
(bad)
push
adc
or
adc
add
jne
push
add
aaa
jo
jmp
mov
sbb
push
test
or
in
sub
add
dec
ins
popa
push
ins
adc
neg
jnp
pop
inc
fwait
pop
and
sub
push
or
cmps
fcmovnb
ins
aad
test
mov
mov
push
hlt
push
inc
(bad)
pop
js
xchg
or
sbb
inc
mov
enter
xor
scas
pop
sar
ss
rcl
mov
push
jmp
inc
mov
xchg
movs
ficom
xor
adc
mov
jle
and
(bad)
or
js
inc
xor
or
push
dec
cli
pusha
xchg
xor
xor
sbb
fmul
adc
dec
add
inc
or
dec
outs
das
mov
adc
sbb
add
test
cdq
inc
and
out
sub
and
popf
add
mov
sar
xor
jl
cmp
jnp
add
hlt
repnz
inc
call
outs
inc
and
push
dec
mov
add
xchg
adc
mov
or
loopne
(bad)
mov
push
sbb
mov
lea
adc
inc
cmp
movmskps
cmp
orps
fsub
jne
mov
pop
call
sbb
sub
int
int3
div
jl
sub
or
or
jp
mov
mov
jl
and
shr
xor
xchg
ret
and
pop
in
xchg
push
shl
pop
jno
sub
and
mov
sar
popf
adc
iret
add
dec
xchg
lock
or
add
in
fistp
push
and
das
sbb
inc
js
sysenter
adc
js
xor
pop
daa
add
mov
cld
jae
mov
cmp
ret
cmp
movs
out
lea
push
call
and
jno
add
loopne
mov
and
jl
call
add
ja
ror
or
ins
mov
(bad)
xor
sbb
sub
cmp
add
popf
mov
inc
sub
pop
lds
(bad)
and
push
jmp
(bad)
xor
or
outs
out
jnp
xor
push
popf
jecxz
cmp
and
ret
stos
cmp
mov
(bad)
push
out
mov
test
cli
inc
shl
jnp
aas
mov
mov
ret
and
test
sub
popa
pop
add
pusha
push
mov
sbb
mov
and
sub
dec
ja
and
mov
popa
push
push
mov
unpckhps
imul
popf
sub
jmp
inc
repnz
lock
adc
adc
push
push
int
std
jg
push
xor
mov
nop
jl
(bad)
sub
ret
add
cmp
jae
fs
mov
call
inc
mov
pop
adc
xchg
xor
js
jp
iret
loope
popf
test
cld
imul
pop
daa
mov
and
adc
dec
pop
adc
sbb
add
or
aad
jmp
mov
push
xor
pop
jge
adc
mov
push
xor
adc
inc
adc
and
inc
dec
or
ret
dec
push
sub
inc
adc
xor
add
push
pop
aaa
xor
inc
pop
js
or
fiadd
fst
mov
mov
shl
push
add
pop
inc
adc
pop
in
xor
test
dec
push
int
adc
push
inc
pop
loop
inc
clc
inc
sbb
inc
pop
inc
inc
mov
enter
fistp
adc
cmp
jbe
push
or
mov
inc
aaa
lock
sub
xchg
ins
out
push
mov
and
push
inc
cwde
push
cs
sbb
jne
push
mov
(bad)
sbb
bound
xchg
sub
push
mov
adc
sub
cmp
adc
pusha
mov
es
or
jp
jne
xchg
mov
ret
lahf
js
or
jge
leave
shr
daa
movs
xchg
push
xor
jl
cdq
xor
xor
out
out
mov
or
lock
sub
add
xchg
push
inc
hlt
jmp
mov
fwait
ins
fcom
dec
add
push
imul
jb
push
adc
and
add
mov
(bad)
aad
xchg
adc
arpl
jns
movs
cmp
fld
loop
inc
ja
mov
loope
sbb
add
or
jmp
call
inc
in
mov
les
inc
or
mov
aad
cmp
ret
(bad)
in
inc
sbb
test
adc
imul
mov
xor
dec
mov
mov
shr
push
ins
jmp
ret
arpl
push
and
outs
add
xor
add
clc
fild
mov
push
cmps
push
inc
cmp
and
(bad)
jl
pop
sub
shl
jne
pop
push
cmps
sbb
cmp
je
add
add
sbb
loopne
lock
lahf
fadd
inc
pop
add
and
adc
and
inc
mov
aad
das
mov
push
mov
outs
jmp
or
add
test
cwde
xchg
into
xor
es
inc
dec
or
sbb
and
imul
dec
add
jbe
dec
jl
rol
clc
adc
adc
adc
jo
push
sbb
jb
pop
jne
inc
fsub
ins
cmp
push
add
inc
loope
or
xchg
daa
adc
ret
test
scas
ret
dec
nop
pop
mov
in
ret
fiadd
pop
cwde
cdq
push
cmp
fst
test
cmp
shl
test
mov
pop
push
cdq
fcomp
hlt
mov
dec
xlat
add
sub
jp
adc
sbb
mov
push
shr
rcr
aaa
bound
xchg
or
pop
and
je
xor
sub
es
or
jo
adc
(bad)
pop
ret
das
add
lahf
shl
movs
mov
dec
push
test
and
and
scas
inc
add
mov
xchg
push
std
inc
or
paddb
or
push
push
inc
imul
push
fcmovnb
ror
pop
mov
sahf
loop
mov
add
sbb
mov
and
xchg
test
sar
adc
add
add
xor
adc
out
shl
pop
push
adc
adc
les
and
or
push
in
in
in
inc
or
bound
sbb
and
dec
adc
test
push
ss
call
mov
js
stos
fadd
cmps
push
xor
retf
dec
test
mov
lock
movs
jp
leave
add
scas
xlat
cwde
in
pusha
pop
xchg
adc
pop
inc
clc
add
test
push
outs
adc
push
sub
not
pushf
mov
test
lock
dec
in
mov
push
dec
jne
loopne
xlat
inc
stos
adc
imul
nop
add
pop
xchg
shr
lods
xchg
test
adc
cmp
or
shl
icebp
stos
sub
or
cmp
scas
in
pop
sahf
adc
and
test
mov
xor
pop
test
or
inc
or
retf
scas
retf
cmp
xchg
add
inc
or
fisttp
aaa
xchg
repnz
lahf
inc
mov
jge
add
dec
cmp
jl
or
test
inc
out
xchg
retf
rcl
shl
inc
pop
dec
xchg
lock
scas
sub
jecxz
scas
add
xchg
jmp
xchg
pop
add
aas
mov
mov
inc
pusha
ins
loopne
ss
or
cmp
imul
pop
mov
and
mov
lea
call
enter
xchg
(bad)
inc
xor
dec
jne
pop
ins
add
add
inc
dec
loopne
add
adc
pop
add
add
jb
retf
xchg
popa
mov
or
icebp
gs
pop
mov
test
or
add
js
(bad)
or
cmp
lock
ret
push
cmp
jle
dec
cmp
pop
ins
mov
push
nop
add
xchg
test
dec
nop
in
or
dec
push
cmp
movups
enter
sub
iret
xchg
call
loopne
imul
mov
xchg
add
sub
rol
mov
xchg
add
addr16
adc
pop
js
or
mov
push
jo
add
adc
pop
addr16
dec
out
mov
out
cmp
pop
push
pusha
push
add
inc
adc
add
loopne
sahf
inc
iret
inc
add
and
xor
add
(bad)
jl
sub
nop
clc
call
push
inc
call
mov
cmp
mov
mov
ss
push
pop
scas
add
cmps
enter
mov
adc
ds
(bad)
idiv
or
(bad)
stc
push
push
call
sbb
fs
aam
adc
xor
mov
mov
arpl
adc
xor
dec
adc
push
jo
pop
mov
cwde
test
test
push
ds
xor
lods
ss
push
push
js
in
push
jnp
or
add
push
mov
outs
mov
(bad)
push
fs
data16
jbe
scas
imul
sub
push
nop
push
in
nop
mov
mov
jl
sahf
sub
xchg
cmp
jnp
in
movs
mov
push
or
js
push
je
mov
pop
sub
call
or
dec
mov
in
loopne
sub
cmp
cmp
pushf
mov
scas
add
jl
cmp
ja
into
pop
push
add
ins
fnstenv
cmp
or
in
mov
inc
call
xor
mov
loopne
inc
clc
mov
out
mov
lods
xor
inc
push
mov
push
int3
jns
iret
repz
or
sbb
xor
jns
out
pop
ins
jo
sahf
out
sahf
js
add
nop
xchg
cwde
jne
push
or
pop
in
test
test
mov
add
cmp
xchg
push
xor
mov
adc
add
add
sti
pop
pop
mov
ret
cmp
add
cli
cmp
mov
mov
mov
les
daa
test
sub
cmps
add
repnz
and
movs
jo
pop
mov
inc
shl
cmp
test
aad
fisub
lea
add
cmp
mov
stos
sub
ss
cmp
sbb
or
xor
inc
xchg
sub
xchg
inc
or
inc
(bad)
(bad)
xor
jae
xchg
ror
test
repz
mov
cmp
int
js
mov
sbb
and
nop
aam
lahf
hlt
adc
fdivr
pop
popa
ror
add
scas
lock
test
aas
loopne
inc
or
outs
movs
adc
add
rol
mov
add
push
inc
loopne
pop
or
loopne
mov
add
sbb
jo
cmps
mov
jl
aam
jmp
mov
ja
push
add
scas
jmp
inc
xor
jp
add
mov
sbb
frstor
inc
adc
push
adc
inc
out
add
jmp
inc
ret
dec
adc
jo
inc
sub
(bad)
add
test
adc
mov
mov
mov
cmc
movs
loopne
pop
mov
ror
rcr
adc
mov
leave
push
(bad)
mov
adc
mov
push
jne
push
add
jg
sbb
mov
pop
sub
jle
or
sar
jmp
xor
cmp
rcl
mov
pop
aaa
aas
xlat
sbb
cwde
mov
jl
cmp
xor
outs
inc
mov
dec
inc
pusha
push
adc
test
scas
mov
adc
mov
and
dec
jl
das
adc
mov
and
xchg
jo
adc
out
push
inc
push
adc
jp
jne
je
sar
mov
inc
adc
call
retf
sbb
push
and
es
(bad)
sbb
sbb
std
sub
cmp
mov
mov
xor
mov
inc
je
or
sub
jmp
ins
outs
xor
pop
pop
push
sbb
xor
mov
aas
push
mov
aas
inc
movaps
or
pop
ret
daa
ret
nop
mov
pop
out
xchg
cli
pop
adc
mov
mov
in
out
xor
test
scas
xchg
leave
adc
pushf
adc
movs
mov
lea
adc
movs
cmp
shl
mov
push
je
lds
mov
stos
lods
call
adc
dec
rep
dec
push
push
ds
lock
mov
daa
scas
mov
push
nop
jbe
data16
loopne
push
inc
add
cmp
cmp
bound
mov
stos
(bad)
add
test
add
cmp
xchg
pusha
pop
mov
cmp
xchg
dec
ds
jo
mov
(bad)
dec
scas
add
xor
fmul
and
aam
fisubr
mov
scas
mov
rcl
mov
rol
pxor
mov
sub
mov
push
nop
adc
pop
and
dec
jne
test
(bad)
jb
ins
add
out
je
jnp
or
mov
pop
stos
ja
fcomp
mov
pop
cld
je
lds
add
cli
cmp
jne
addr16
inc
rol
rol
jns
add
push
cmp
inc
lods
gs
js
sbb
fbstp
cmp
je
cmp
mov
mov
xchg
es
jmp
js
mov
adc
sub
pop
push
add
rcl
movs
(bad)
lds
lods
or
mov
sbb
mov
scas
cmp
cmps
xor
leave
pusha
call
aad
and
push
loop
jecxz
cmp
je
test
adc
jg
je
push
dec
scas
sub
jl
inc
xor
jl
and
inc
mov
ins
jne
mov
dec
movs
pop
jmp
in
adc
sub
mov
sub
jl
mov
call
mov
push
mov
mov
mov
mov
(bad)
mov
add
adc
jmp
movs
xor
xor
pop
je
inc
dec
int
popa
pop
fdivr
and
push
sbb
xor
mov
push
jne
(bad)
lea
and
jbe
or
or
pusha
or
call
mov
xor
mov
cmp
add
cmp
push
cmp
jecxz
jne
repnz
aaa
or
test
ins
fcom
(bad)
lahf
loop
and
dec
dec
mov
pop
push
jb
repz
sub
or
lahf
pop
das
sub
ret
push
in
mov
rcr
and
mov
sbb
or
xor
hlt
push
sbb
int
aad
leave
and
setns
adc
or
leave
fstp
mov
pop
pushf
mov
pop
xchg
and
inc
inc
adc
sbb
addr16
out
or
push
pop
dec
jge
js
ja
xor
shr
rcl
unpcklps
loope
popa
jo
and
push
ja
jb
arpl
call
xchg
repz
loopne
sub
jns
pop
and
(bad)
fld
out
sti
fwait
icebp
out
sbb
test
or
jnp
xchg
adc
inc
sbb
sub
aas
adc
fcmovbe
adc
xchg
sub
imul
mov
sub
jmp
adc
sahf
ja
sub
sbb
out
popa
imul
hlt
(bad)
mov
push
push
rcl
mov
push
pop
xor
pop
and
mov
cmps
inc
ss
xchg
cmp
jecxz
add
outs
mov
sub
sub
dec
jne
push
rol
paddb
es
adc
aam
repnz
inc
sahf
xlat
adc
pushf
std
das
shl
ret
fs
repz
loopne
dec
ds
push
popa
cmp
iret
ja
mov
or
push
jle
dec
pop
jns
inc
or
jbe
push
lods
lds
mov
in
dec
(bad)
test
xchg
test
ficom
arpl
gs
mov
popf
imul
out
fist
mov
push
sbb
inc
(bad)
pop
lahf
inc
mov
jne
xlat
mov
jl
loopne
out
lods
(bad)
dec
mov
mov
test
(bad)
aam
iret
xor
push
aad
push
mov
fidiv
add
loopne
mov
jns
repz
lock
pop
rcl
test
push
and
add
mov
mov
sub
loopne
push
inc
sti
repnz
gs
pusha
inc
rol
push
pop
and
rcr
add
inc
js
je
test
ins
add
inc
cmp
and
shr
pop
out
add
jo
xchg
xchg
push
adc
hlt
and
sub
mov
mov
mov
jne
lock
lods
cmps
daa
(bad)
sbb
mov
inc
clc
lds
push
inc
jle
mov
jno
adc
arpl
or
or
inc
or
in
push
inc
sub
enter
lock
inc
js
or
and
outs
retf
and
mov
cmp
push
les
dec
shl
sbb
or
scas
in
and
ins
jmp
(bad)
xor
ret
ins
fs
jo
rcr
jne
inc
inc
or
push
xchg
mov
pusha
jl
js
cmovs
pop
retf
loopne
cmc
jnp
pop
or
adc
daa
loope
(bad)
mov
or
push
mov
es
push
push
popf
repz
add
ror
sub
pop
movs
sub
out
jle
add
ret
jae
push
nop
inc
mov
stos
or
nop
addr16
iret
mov
dec
pop
aaa
ds
add
sbb
ret
jecxz
adc
rcl
push
add
mov
push
adc
push
push
pop
mov
imul
pop
fsub
sbb
pop
fmul
nop
retf
rcr
jne
jmp
mov
arpl
sub
add
xchg
cmp
push
or
sti
int
sbb
hlt
pop
ret
sub
mov
ret
add
and
add
enter
xor
and
and
loop
loope
loope
or
push
(bad)
mov
aas
add
mov
stos
pop
or
xchg
and
test
test
push
loopne
sbb
js
xor
lahf
sar
and
shr
int3
add
push
loop
ss
jmp
push
mov
loope
mov
lds
jle
hlt
and
dec
dec
test
sbb
je
push
mov
sub
add
ja
push
and
inc
jg
into
xor
arpl
nop
std
pop
test
sbb
dec
or
sbb
shl
mov
fld
adc
adc
lock
in
fild
or
arpl
mov
hlt
int3
and
or
cmp
sub
or
xor
dec
add
sub
lds
xor
push
into
push
je
in
rcl
aaa
adc
and
ins
jmp
das
rol
push
enter
int
(bad)
loope
add
adc
mov
mov
or
fsub
add
mov
mov
loopne
rcr
xchg
fistp
fwait
cdq
sub
fs
ret
int3
or
mov
nop
add
loope
data16
jmp
sub
and
mov
rol
or
pop
mov
xchg
loopne
or
test
jl
push
js
pop
mov
iret
aam
xor
in
inc
mov
movs
adc
add
jmp
fcom
scas
add
dec
loopne
inc
popf
dec
shl
(bad)
mov
mov
ret
adc
cwde
popa
adc
shl
mov
test
adc
add
mov
inc
mov
or
stos
mov
(bad)
fnstcw
aad
test
or
(bad)
jo
clc
jnp
mov
lea
push
sar
cmp
adc
bound
pop
or
mov
mov
adc
dec
enter
lods
dec
out
pop
inc
and
icebp
push
or
inc
cwde
sbb
push
adc
inc
sub
mov
rol
js
cmp
sbb
fst
rol
or
mov
adc
pop
ret
stos
fs
sahf
and
pop
daa
add
and
jmp
(bad)
ret
call
cld
add
aaa
sbb
xchg
cld
pop
sub
dec
add
dec
push
pop
in
xchg
xchg
mov
cmp
ins
xor
mov
(bad)
(bad)
call
and
fiadd
out
mov
sub
jle
jecxz
cwde
jle
fadd
leave
mov
dec
sub
pop
inc
and
mov
(bad)
push
cwde
jno
shr
inc
popf
(bad)
bound
pop
das
pop
xor
jg
adc
adc
pop
push
lea
push
sub
pop
xchg
das
sbb
idiv
lods
(bad)
mov
add
jle
aad
loopne
cmp
data16
stc
and
add
adc
push
cmp
lods
mov
jnp
add
outs
or
mov
xchg
(bad)
inc
jne
cmp
mov
daa
or
and
sbb
pop
mov
adc
dec
les
mov
pop
or
or
ror
(bad)
jmp
adc
aam
mov
xlat
xor
add
je
push
imul
xchg
inc
or
sbb
mov
pop
(bad)
push
xlat
ficom
jge
xchg
mov
push
loope
mov
pusha
adc
pusha
es
push
(bad)
pop
adc
add
out
sbb
push
add
and
xchg
push
div
cmc
ret
les
dec
(bad)
push
add
and
or
adc
pop
and
ret
aaa
sbb
or
pop
pop
ret
nop
aaa
adc
add
mov
aam
inc
add
xchg
jo
add
arpl
dec
mov
test
pop
dec
(bad)
imul
and
icebp
cmp
sub
(bad)
sbb
inc
xchg
sbb
ret
das
inc
retf
push
sbb
pmulhw
inc
mov
int
mov
adc
and
jge
inc
inc
xchg
pushf
pop
into
(bad)
push
adc
cdq
or
adc
rcl
leave
jo
fbld
adc
inc
mov
daa
pop
mov
cmc
jmp
sbb
push
sub
(bad)
loopne
mov
xchg
xlat
inc
push
jmp
sub
xor
mov
out
inc
out
xlat
mul
mov
add
xor
cmp
inc
mov
sbb
add
mov
sar
dec
mov
ja
loopne
push
sti
jl
and
push
fnstcw
push
cdq
sub
sub
ret
mov
xor
pop
out
arpl
jo
jb
inc
xor
xchg
inc
adc
jo
add
xchg
jns
jb
cmp
imul
arpl
xor
aaa
dec
outs
popa
xor
movs
and
outs
and
adc
arpl
sub
sub
mov
xchg
push
cs
add
and
clc
mov
sub
sbb
push
dec
mov
sub
fadd
pop
add
add
pop
call
adc
cs
jg
mov
adc
xchg
jg
jae
jmp
clc
fcmovne
inc
add
adc
lods
pusha
mov
and
std
fisubr
mov
stc
and
cmp
ins
popw
add
dec
test
out
add
fistp
rol
ins
cmp
jo
inc
(bad)
ror
mov
es
fiadd
outs
cld
cmps
add
ds
inc
or
js
movs
call
mov
xchg
xchg
push
fs
inc
inc
(bad)
push
jge
add
cmp
outs
jb
and
outs
ja
mov
bound
inc
cwde
push
dec
mov
or
or
jbe
repnz
gs
inc
fs
gs
arpl
(bad)
add
adc
(bad)
fisubr
push
cmp
gs
enter
daa
call
dec
sbb
fs
adc
int3
nop
dec
push
mov
sbb
cwde
mov
mov
inc
imul
arpl
add
and
unpcklps
or
xchg
ret
fwait
ins
jle
call
xor
pop
daa
sub
inc
neg
je
mul
ds
mov
daa
or
dec
jle
ds
je
jae
movs
les
cld
mov
daa
dec
pop
mov
inc
enter
pop
dec
jp
pop
mov
push
sbb
push
addr16
je
out
mov
inc
fwait
dec
or
js
adc
dec
aaa
loopne
pop
cmp
sbb
in
inc
sbb
mov
neg
adc
nop
ret
sbb
mov
pushf
inc
outs
popa
mov
xchg
push
add
jns
lods
lds
popa
fisttp
mov
dec
rol
out
add
jo
cmc
outs
push
and
push
js
sub
mov
dec
pop
add
dec
cmps
and
and
mov
outs
ja
ret
test
or
call
add
pop
dec
popa
js
cs
mov
pop
adc
and
sbb
dec
inc
dec
iret
jmp
ins
jno
and
push
add
int3
push
outs
outs
je
cwde
cwde
ds
push
pop
cmp
cmps
ficom
dec
test
(bad)
push
xchg
and
leave
test
xor
xor
call
daa
xor
mov
cmc
add
mov
adc
push
push
outs
jo
jo
push
jne
sbb
in
push
push
pop
add
mov
xchg
add
dec
outs
ins
jns
in
pop
dec
enter
xor
sub
push
arpl
ds
mov
cdq
add
mov
add
sbb
push
pop
and
cld
mov
mov
push
int3
les
movs
add
dec
test
push
push
into
cld
in
mov
xchg
mov
inc
push
imul
rcr
daa
add
add
inc
je
dec
add
shr
cli
push
pop
sub
add
mov
fiadd
cmp
adc
xor
ss
mov
jnp
sbb
inc
sbb
fld
and
adc
xor
pusha
inc
ins
imul
pusha
push
nop
cmp
jmp
cmps
xor
gs
pop
xchg
sub
sub
outs
outs
inc
hlt
mov
push
call
call
jo
lock
fwait
or
lock
ss
xlat
push
mov
aam
fnsave
scas
mov
int3
jl
xor
fiadd
sbb
pop
in
inc
cmp
mov
cmp
pop
pop
ins
or
cmp
push
mov
je
pop
fdivr
fadd
out
cmp
adc
outs
inc
inc
loopne
loopne
add
pop
cmp
or
pop
in
je
cwde
cmp
dec
cmp
fisubr
push
jo
pop
inc
shr
xor
ds
fidiv
fnstenv
dec
fadd
dec
aas
das
idiv
or
xchg
loopne
loopne
inc
add
adc
or
loopne
inc
pop
inc
adc
xchg
mov
adc
sub
cmp
mov
test
sbb
(bad)
loop
push
rol
cdq
pop
inc
add
outs
inc
outs
js
loope
jmp
jae
out
inc
add
and
ja
or
or
xor
in
lock
cli
fcom
pop
int3
push
add
push
push
es
popa
jns
mov
add
xor
mov
lock
pop
scas
adc
test
adc
in
call
jecxz
push
mov
mov
inc
push
loopne
inc
push
pushf
pusha
mov
ds
adc
pop
mov
mov
mov
hlt
push
loopne
int
les
jle
mov
enter
add
sub
inc
xchg
ror
dec
push
pop
dec
sti
ficomp
or
ds
cmps
push
mov
call
mov
adc
push
adc
(bad)
inc
(bad)
jl
cwde
das
push
mov
add
test
push
or
test
bound
mov
popa
mov
test
pop
xchg
imul
arpl
in
bound
sub
or
inc
or
push
push
and
pop
sbb
and
xor
sbb
(bad)
daa
cdq
or
jecxz
xor
inc
fld
sbb
pop
fisubr
pop
adc
add
(bad)
outs
push
mov
jb
or
push
loope
je
movs
push
jo
inc
adc
add
sbb
inc
popa
jo
mov
and
leave
adc
jb
dec
jo
adc
inc
leave
push
adc
aad
mov
add
or
stos
into
jo
xor
xchg
sbb
and
jb
and
sbb
enter
out
xchg
cmp
lods
nop
lea
ins
and
mov
mov
ret
mov
movs
and
sub
es
or
outs
je
dec
and
mov
cwde
mov
lea
jns
jb
outs
test
sti
mov
and
and
es
pop
and
leave
push
sub
add
test
dec
xor
xor
dec
dec
inc
mov
sahf
inc
lahf
js
js
add
or
xor
cmc
xor
add
sub
fstp
pop
adc
inc
push
mov
pop
scas
jle
cs
pop
inc
(bad)
adc
add
adc
xor
ins
ret
daa
xchg
sahf
ins
clts
xor
data16
dec
daa
sub
in
or
dec
daa
pop
add
mov
clc
data16
push
js
icebp
push
sub
out
xor
jbe
add
push
lods
push
xlat
mov
mov
or
out
sbb
push
add
scas
jge
mov
cs
inc
outs
or
push
mov
(bad)
jnp
test
or
stos
gs
mov
or
sub
in
cmp
enter
inc
push
inc
iret
test
mov
or
inc
imul
mov
xor
add
or
pop
add
test
lahf
pushf
mov
xchg
mov
dec
add
push
jae
dec
push
mov
adc
or
call
jl
int3
ins
or
sti
mov
retf
cmp
adc
mov
daa
mov
cmovl
lahf
and
jecxz
push
cmp
sub
loopne
inc
and
stc
in
or
mov
or
mov
push
scas
mov
add
xchg
cmp
call
mov
xchg
in
pxor
nop
dec
out
out
and
mov
or
test
out
pcmpeqb
daa
ins
ficomp
test
xor
call
add
nop
cld
out
jg
pop
inc
pop
adc
jl
out
je
nop
push
xor
pushf
cmps
(bad)
sbb
inc
mov
(bad)
push
mov
inc
mov
dec
fdiv
(bad)
ins
adc
mov
jbe
push
adc
mov
pop
jmp
push
inc
xor
or
scas
(bad)
cmp
nop
loopne
xchg
js
or
aam
std
outs
or
inc
inc
mov
push
scas
fcom
les
inc
cmp
inc
js
cmp
shr
ds
ins
xchg
inc
inc
movs
xchg
inc
outs
call
cld
push
and
inc
aaa
hlt
sar
push
adc
push
push
inc
xchg
inc
inc
mov
push
aam
push
jne
dec
add
(bad)
icebp
mov
repnz
mov
xchg
push
or
pusha
in
inc
inc
xchg
adc
push
repnz
inc
mov
inc
hlt
xor
(bad)
inc
inc
fiadd
sahf
or
in
ret
cmp
out
(bad)
fcos
mov
cld
push
push
jae
push
xor
(bad)
cs
adc
lds
test
and
repz
pxor
hlt
pop
lock
sbb
jo
jns
enter
adc
enter
adc
test
mov
xchg
or
stos
cmps
mov
mov
push
adc
sahf
not
push
hlt
in
ds
pop
cmp
outs
push
or
jg
or
mov
ss
xor
(bad)
or
xchg
xchg
sub
aaa
fnstenv
push
nop
or
in
fwait
or
mov
les
pop
add
ret
add
push
retf
ins
xchg
sbb
push
or
or
outs
pop
pop
lock
adc
adc
add
mov
pop
adc
xor
adc
or
adc
pop
or
call
sahf
dec
loopne
ins
mov
pop
leave
adc
dec
add
pop
sbb
push
xchg
jb
std
sbb
sbb
add
jb
pop
stc
mov
and
cmp
sub
call
and
dec
daa
sub
xchg
test
mov
sub
das
and
mov
pop
(bad)
stc
inc
adc
adc
pop
cli
ja
iret
mov
or
pop
jl
sub
or
or
mov
out
test
xlat
(bad)
nop
push
sub
(bad)
sbb
mov
inc
mov
(bad)
fsubr
and
aaa
jnp
xor
sub
stc
adc
push
ret
cmps
out
fld
lock
pushf
push
or
neg
ins
adc
mov
adc
push
mov
les
or
int
ror
mov
lock
pop
xchg
jo
jecxz
sbb
pop
push
cld
pop
dec
add
dec
fs
nop
xchg
sbb
movs
lods
stos
xor
mov
cmp
mov
imul
add
les
pop
pushf
adc
mov
into
add
cmc
mov
nop
rol
pusha
xchg
enter
add
fwait
mov
rol
inc
jg
adc
ror
out
leave
pusha
push
push
popf
add
xchg
fdivr
cmp
sub
fadd
jmp
dec
loopne
or
and
add
je
outs
cmp
and
not
sbb
push
pop
or
mov
sub
jo
pop
sub
ins
and
ror
push
push
mov
mov
jle
jo
shl
cmp
mov
outs
mov
dec
cmps
sar
iret
inc
daa
ins
or
mov
call
outs
ins
pop
push
lea
or
pop
mov
or
pop
(bad)
adc
sbb
pop
add
pop
sub
sbb
push
or
(bad)
fild
sar
sbb
add
cs
test
loop
dec
aaa
sub
fadd
mov
cmp
or
xor
xlat
push
add
sub
sbb
mov
push
mov
add
call
(bad)
aad
and
xchg
xchg
mov
mov
jno
scas
cmp
addr16
sbb
daa
lahf
mov
js
mov
mov
sbb
inc
js
or
mov
or
add
or
adc
add
ror
out
out
or
xchg
cmps
je
mov
jnp
shl
jl
cmp
mov
mov
adc
or
test
xor
sar
push
cmp
xchg
dec
mov
push
scas
scas
jo
cwde
adc
daa
(bad)
push
pusha
scas
jmp
sbb
xchg
jmp
shl
xchg
out
sahf
inc
test
push
mov
adc
cmp
ret
je
mov
mov
jno
inc
std
inc
add
mov
mov
or
mov
add
xchg
xchg
rcl
jge
push
cdq
pop
scas
cmp
or
fucomip
and
arpl
cmp
adc
mov
mov
sbb
push
inc
jmp
mov
mov
mov
jne
inc
mov
fucomip
sub
adc
inc
or
rol
jae
add
mov
lds
xchg
pop
clc
clc
icebp
push
inc
sub
xchg
pop
ret
inc
mov
in
leave
jp
js
sbb
mov
daa
or
cmp
or
pushf
adc
fisttp
mov
xchg
xor
xchg
mov
pushf
les
or
jg
test
add
add
shl
dec
mov
jo
push
push
xor
js
mov
mov
mov
test
cmp
pcmpeqd
xor
or
imul
loop
xchg
adc
cs
mov
or
sbb
pop
cld
test
test
(bad)
pop
les
add
not
ss
sbb
adc
mov
ds
add
pop
imul
inc
jg
mov
or
addr16
xlat
les
mov
push
push
pop
out
pop
mov
dec
cmp
or
push
repz
dec
cmps
test
jo
xchg
mov
xor
push
cld
mov
inc
mov
sbb
sub
loopne
shr
test
(bad)
bnd
add
mov
push
or
inc
push
sub
(bad)
push
add
or
push
mov
test
lods
imul
lock
enter
dec
xor
xchg
in
cmps
add
xchg
pop
mov
xor
xor
pushf
or
hlt
cmp
jg
dec
adc
and
out
sub
jae
ins
imul
clc
dec
and
and
sbb
mov
and
mov
sbb
pusha
dec
sbb
dec
in
sar
cld
sub
xlat
add
adc
popf
aas
and
jb
frndint
(bad)
push
and
xchg
add
and
or
leave
fcom
js
sbb
mov
adc
gs
fucomi
dec
add
xchg
push
inc
pop
sbb
adc
ins
adc
sahf
xchg
adc
outs
add
add
and
or
lds
jne
and
or
mov
(bad)
iret
jae
inc
dec
push
pop
cmp
cli
out
je
fsub
pop
inc
inc
ins
adc
cmp
je
test
je
lock
and
and
push
push
sub
rcl
xchg
retf
shl
jmp
inc
ror
mov
adc
pop
sbb
daa
dec
push
pop
retf
mov
xor
push
push
pop
clc
add
nop
cmp
das
add
adc
nop
adc
push
cmp
mov
fnsetpm(287
out
sub
mov
sbb
jg
clc
movs
dec
addr16
add
call
fiadd
dec
rol
xor
mov
and
push
div
jp
cmp
repnz
sub
icebp
les
add
nop
mov
ret
sbb
jnp
inc
push
outs
je
jl
in
push
cmp
ss
pop
lds
daa
xchg
(bad)
and
and
mov
sbb
pop
push
clc
inc
imul
cmp
sbb
mov
add
mov
xor
mov
sahf
ret
add
sti
add
sbb
out
loope
cmp
pop
jg
jl
repnz
sbb
sbb
sbb
enter
pop
adc
sub
pop
pop
ds
(bad)
mov
pushf
mov
mov
xchg
cs
lock
or
adc
xor
pop
test
(bad)
push
and
ja
and
ret
(bad)
std
(bad)
je
js
lods
push
pop
out
lock
mov
and
xlat
push
adc
pop
or
jp
add
mov
push
test
(bad)
mov
jb
sbb
pop
mov
cmps
aad
push
mov
jns
jns
pop
cmps
xrelease
in
dec
sub
and
pusha
dec
aam
(bad)
out
jecxz
sbb
or
adc
cwde
mov
movs
es
adc
and
ss
inc
and
cmc
cmp
int
test
dec
push
mov
sbb
ror
daa
push
pop
or
cmp
dec
pop
sbb
enter
push
(bad)
xlat
enter
and
xchg
movs
push
movs
mov
pop
les
ror
ds
push
or
adc
ret
popa
xor
xchg
out
or
sub
push
sub
sub
inc
lds
adc
xchg
outs
xor
test
pop
adc
ss
mov
pop
dec
pop
pop
test
and
adc
dec
inc
add
mov
scas
pusha
xchg
or
fwait
xchg
push
push
push
and
inc
clc
mov
adc
js
inc
jb
inc
mov
pop
pop
out
push
pusha
add
fild
iret
sti
addr16
fwait
and
cmp
jge
push
fcom
adc
ss
push
cmp
pop
add
mov
inc
aas
movs
das
inc
adc
jmp
scas
inc
cmps
je
daa
dec
pop
and
xor
xor
mov
add
das
mov
(bad)
leave
mov
and
pusha
mov
seta
push
sub
fistp
adc
out
hlt
push
sbb
mov
jge
in
data16
add
les
or
add
adc
mov
mov
in
test
inc
mov
pusha
or
sbb
loopne
add
ja
inc
sub
outs
nop
mov
jge
js
pop
push
xor
retf
pop
mov
dec
and
sbb
shr
add
and
mov
xchg
(bad)
mov
mov
cmp
add
pop
mov
and
ret
aas
cwde
adc
ins
cdq
add
sbb
call
add
mov
jbe
sar
mov
lea
rol
dec
and
sub
sbb
(bad)
mov
push
int
inc
pop
mov
add
dec
bound
sbb
xchg
jno
movs
and
call
inc
nop
push
and
je
je
mov
mov
mov
movs
ror
mov
mov
sbb
adc
(bad)
xchg
mov
call
imul
out
mov
in
add
push
(bad)
outs
popf
add
jp
push
dec
cmp
shl
pop
mov
dec
out
sub
repnz
int
and
and
and
dec
loope
push
push
or
dec
jae
inc
and
mov
es
(bad)
outs
test
mov
dec
or
jmp
and
cmp
lods
shl
xchg
sbb
inc
jb
mov
sbb
inc
pop
clc
mov
jmp
jne
pop
add
push
add
adc
xchg
inc
add
ret
inc
mov
adc
mov
add
and
push
fld
outs
cld
cmp
add
adc
mov
out
add
lock
push
add
test
and
jo
pop
fcmovb
mov
push
inc
xchg
xchg
add
or
inc
arpl
(bad)
movs
or
dec
iret
inc
mov
add
inc
jno
sbb
adc
adc
lods
sub
(bad)
das
and
dec
je
xchg
push
pop
les
or
movs
mov
(bad)
mov
adc
sbb
daa
stos
mov
outs
test
and
adc
push
add
nop
pop
cmp
mov
mov
push
dec
push
push
jp
das
jle
add
mov
gs
adc
dec
imul
adc
add
arpl
jmp
xchg
or
add
adc
loope
or
pop
cmp
imul
or
clc
popf
test
add
push
mov
add
sbb
add
mov
(bad)
or
adc
jmp
je
sub
pop
retf
jmp
xor
push
add
mov
fnstcw
add
movs
and
or
jne
pop
sar
lahf
pusha
or
cmova
xchg
mov
dec
int3
adc
pop
loopne
scas
inc
pop
adc
push
jne
xor
mov
pop
pop
xor
shr
test
jg
mov
leave
add
sub
movs
sbb
cli
push
mov
sub
push
(bad)
cmp
mov
push
cmps
sbb
das
cmp
adc
adc
add
mov
or
retf
movs
and
and
adc
mov
xchg
or
iret
inc
push
xor
dec
dec
xlat
push
dec
mov
arpl
cmp
inc
mov
pop
fisubr
out
jg
or
shr
adc
mov
sub
sbb
cmp
jne
sbb
loopne
arpl
ret
stos
ret
add
iret
out
adc
mov
imul
inc
inc
and
(bad)
push
or
aad
in
push
add
adc
push
jmp
jle
adc
mov
add
test
jnp
mov
call
loopne
jle
pop
or
jne
jno
cmp
add
pop
lds
iret
mov
inc
or
inc
inc
xchg
jmp
outs
xor
xchg
mov
int3
sbb
dec
xor
adc
and
jo
add
add
test
or
pop
sbb
adc
fiadd
xor
mov
out
sbb
xor
arpl
jne
jo
sub
ja
sbb
addr16
xchg
xchg
adc
and
or
push
or
je
adc
inc
je
adc
sbb
push
outs
(bad)
rol
shl
hlt
enter
add
sbb
dec
push
adc
int3
add
or
add
(bad)
or
cs
add
(bad)
ficom
add
jo
sbb
sbb
add
mov
dec
add
mov
pmaxub
add
sub
repz
mov
loopne
lock
xchg
push
mov
add
cs
imul
sbb
mov
inc
push
test
shl
push
push
add
and
add
mov
dec
pushf
cmp
inc
mov
and
imul
ficomp
pop
pop
dec
add
out
bound
push
or
or
sbb
pop
and
pop
rol
movs
scas
mov
shl
in
popa
mov
bound
jle
mov
ud0
rol
adc
ins
imul
out
movs
nop
xor
addr16
and
push
adc
ror
or
dec
inc
add
inc
ret
hlt
dec
add
ins
and
xor
dec
mov
push
aam
inc
add
or
mov
add
inc
add
push
inc
mov
add
or
aas
imul
pop
sub
dec
lods
test
lock
mov
mov
adc
sbb
add
or
mov
sbb
sub
mov
push
aam
adc
or
fcom
inc
add
sti
int3
test
and
ret
add
or
test
add
stos
and
jp
dec
inc
js
xor
ror
loopne
adc
cli
and
sub
or
sbb
xchg
adc
inc
lock
lahf
xchg
add
push
xor
sbb
out
aas
outs
mov
sub
sti
ret
nop
mov
mov
aaa
mov
sub
jmp
xor
inc
cmp
and
add
and
inc
cmp
pop
xchg
push
div
push
test
bound
sub
add
iret
or
sub
dec
aaa
out
ret
mov
or
or
gs
cmp
shr
jne
mov
test
dec
pop
int
pop
mov
push
mov
adc
push
and
add
sbb
sbb
push
add
in
sbb
movs
or
xchg
lods
fisttp
outs
rcr
add
or
xchg
add
cmp
rcr
pushf
mov
push
and
cmp
ret
call
nop
das
(bad)
jmp
fld
mov
imul
push
ja
imul
xor
jmp
fist
inc
lahf
loopne
les
mov
sub
lea
push
mov
test
add
xor
mov
and
loope
mov
add
mov
sub
add
mov
fcomip
cmp
xor
or
inc
adc
adc
ret
push
out
and
pop
sbb
add
mov
mov
jbe
mov
fistp
dec
xor
or
add
dec
sub
xor
fcomp
inc
in
arpl
pop
pop
mov
pop
cmp
test
adc
iret
repz
out
push
lea
gs
loope
outs
fwait
cwde
and
or
add
cmp
push
mov
or
aas
test
add
cmps
push
mov
adc
cmp
adc
test
mov
jnp
push
sar
ins
sbb
push
mov
push
cmp
nop
add
add
nop
add
fdivr
nop
lods
test
aas
call
xor
pusha
mov
xor
enter
mov
add
leave
or
nop
and
jb
lea
movs
outs
enter
nop
add
nop
cmp
in
and
sbb
aas
adc
push
and
inc
pop
jmp
rcr
lea
movs
mov
sbb
and
sbb
cmp
mov
or
mov
xor
add
xor
in
clc
and
jb
icebp
pushf
pushf
repz
jmp
dec
pop
iret
repz
mov
sbb
jns
and
aaa
in
repnz
jmp
jns
mov
push
loopne
icebp
inc
sahf
out
sahf
rcl
jns
out
push
pop
imul
out
icebp
cmps
and
push
lds
jns
sbb
sahf
out
pop
data16
mov
and
dec
rcr
fild
in
iret
repz
stc
push
adc
and
cmp
pop
gs
sbb
repz
and
sub
sbb
xchg
dec
xchg
shr
dec
push
or
cs
dec
fsubp
ss
mov
repnz
push
add
push
and
push
aaa
sbb
fwait
or
idiv
outs
mov
add
add
adc
mov
fisub
sub
call
push
ins
push
push
or
xor
ins
jl
xor
xlat
push
ds
push
sbb
inc
sub
inc
push
stc
mov
aas
inc
inc
jno
add
jo
inc
lahf
inc
xor
and
mov
fdiv
mov
cmp
hlt
push
dec
sahf
test
push
push
pop
sub
or
inc
adc
push
and
jmp
push
pusha
fisub
call
sbb
and
or
das
xor
verw
mov
mov
inc
repz
(bad)
add
mov
(bad)
cld
inc
mov
inc
repnz
call
ins
dec
clc
dec
mov
push
sbb
or
pop
clc
push
jne
pop
movs
xor
and
and
adc
add
fisubr
adc
int
sbb
ret
loope
or
inc
and
scas
push
lock
dec
sub
movs
mov
pop
outs
fst
add
cld
mov
(bad)
fldcw
loopne
lds
inc
std
or
or
mov
push
imul
xchg
data16
sbb
sbb
push
mov
add
add
push
xchg
add
mov
ror
cmps
call
push
iret
daa
test
mov
mov
sub
bound
test
push
dec
lock
jo
inc
jnp
jl
xchg
xchg
pusha
jmp
and
pop
and
loop
lock
push
xchg
shl
and
mov
call
in
inc
adc
push
test
add
cmp
mov
add
and
ret
inc
mov
cmp
inc
in
loope
cmp
and
cmp
mov
cmp
add
xchg
push
inc
sbb
mov
push
mov
retf
cld
fld
and
test
and
sbb
loopne
xchg
sbb
loopne
add
mov
push
pushf
xor
mov
arpl
mov
retf
test
or
scas
cmp
push
jnp
scas
inc
or
inc
sbb
pop
jnp
jle
shr
movs
cmp
push
test
call
pop
push
jecxz
mov
nop
in
pop
pusha
sete
push
sti
mov
inc
dec
shl
clc
dec
or
and
jg
dec
sbb
scas
or
sub
(bad)
adc
rol
xor
test
shr
mov
(bad)
adc
mov
add
popf
mov
mov
ror
add
add
lahf
sub
sbb
mov
arpl
xchg
sbb
and
das
cdq
xchg
lea
sbb
adc
sub
add
test
(bad)
dec
add
rol
and
popa
js
les
and
(bad)
retf
xor
cmp
jp
or
rcr
sbb
lds
inc
hlt
mov
fiadd
je
jmp
sti
or
sar
ss
sub
daa
or
jb
push
mov
jge
jl
in
daa
cwde
adc
push
inc
sbb
ret
das
jmp
popa
jnp
call
pop
jge
popa
adc
or
add
adc
nop
xor
call
pop
xchg
sub
and
mov
fs
xor
dec
fmul
sbb
push
outs
jmp
cmp
mov
dec
push
repz
clc
dec
mov
lea
xor
cmp
adc
cmc
cld
sar
lds
or
cdq
inc
ds
std
add
jg
pop
jnp
add
(bad)
jg
inc
cld
sbb
sbb
push
add
adc
adc
outs
repz
push
xor
jl
ins
xchg
inc
add
cmp
test
mov
mov
shr
inc
cmp
test
mov
scas
fimul
adc
add
jne
lea
std
leave
jmp
and
add
retf
or
and
aad
jg
sbb
inc
xor
push
adc
and
jns
stos
cmp
push
push
pop
push
add
lods
adc
inc
paddsb
mov
clc
sbb
inc
push
xchg
push
xchg
inc
lods
adc
push
test
scas
add
sbb
pusha
test
enter
clc
and
pop
jmp
jl
mov
cmp
jne
push
pop
inc
add
dec
push
fidivr
push
lahf
cmps
or
rol
jg
dec
push
adc
dec
cmp
retf
xor
mov
cmp
and
mov
test
pusha
js
gs
xor
adc
adc
mov
call
sub
pusha
xchg
mov
(bad)
(bad)
fmul
jne
sbb
sahf
ret
adc
mov
cmp
retf
inc
fcom
inc
xor
sub
sub
xor
cmps
xor
push
fadd
push
clc
aas
stc
inc
mov
cmp
pop
mov
jae
add
cmps
and
add
ins
psubb
push
push
mov
je
or
jl
push
outs
and
adc
xchg
je
mov
jecxz
or
or
pop
mov
inc
imul
cmc
das
pop
add
mov
push
loope
push
mov
mov
xor
cmp
stc
shl
stc
fidiv
dec
lds
mov
fstp
bound
add
push
or
mov
jle
adc
sbb
adc
mov
pusha
jg
mov
sub
mov
and
pop
ret
mov
mov
pop
push
sub
or
iret
push
xlat
push
push
dec
jne
and
adc
js
or
cdq
jo
jae
cmp
bound
ss
adc
mov
and
mov
or
sub
jbe
push
mov
pop
jno
mov
push
cmp
je
inc
cmp
jne
sub
push
cmp
inc
push
cmp
adc
ins
test
(bad)
fisttp
test
rol
loopne
add
pop
mov
or
pop
in
je
sbb
mov
mov
into
daa
jo
jle
mov
xchg
jne
xchg
fcomp
sti
sbb
mov
mov
loope
and
cmp
ret
lock
clc
sar
cmp
dec
mov
sbb
jmp
or
(bad)
cmps
pop
add
leavew
ja
aas
jecxz
mov
inc
aaa
inc
and
inc
pop
call
(bad)
or
popa
or
in
loopne
or
cmp
or
div
inc
xchg
mov
in
lock
imul
push
push
sbb
push
push
mov
mov
inc
in
loopne
std
aaa
loopne
or
sbb
pop
mov
sbb
icebp
lock
pop
(bad)
loope
sbb
pop
push
push
or
xchg
iret
addr16
and
iret
and
imul
push
inc
lock
test
xchg
push
push
dec
fstp
pusha
dec
pop
inc
je
adc
jne
ins
push
and
cdq
add
mov
xchg
stos
xor
push
dec
add
std
xor
mov
cmps
jg
sbb
jo
add
push
jp
jo
and
xlat
push
mov
jg
fdivr
push
mov
lea
mov
cmp
ja
nop
test
test
add
es
mov
ss
test
push
fcmovnb
dec
xor
dec
loopne
adc
adc
les
(bad)
xor
out
inc
jo
mov
and
mov
add
jl
lds
cmp
or
fcmovb
imul
jo
adc
(bad)
retf
adc
outs
mov
inc
and
shl
mov
je
mov
adc
jne
xchg
pop
xchg
mov
aad
outs
or
fisttp
jmp
stos
dec
sar
add
jle
jmp
inc
test
test
rol
xchg
jmp
push
or
or
jb
dec
je
jmp
scas
add
mov
mov
add
push
out
pop
xor
push
pop
test
push
inc
call
call
xchg
aas
mov
test
xor
rol
sub
sub
daa
add
dec
lea
or
or
add
mov
jne
xchg
cmps
inc
xchg
in
pop
push
cmp
(bad)
adc
(bad)
jne
out
jl
adc
and
js
shr
dec
aad
js
es
sub
cmp
pop
js
lock
add
push
cwde
jle
sar
mov
outs
pop
or
inc
mov
mov
adc
mov
arpl
shl
sub
xchg
ja
and
ror
jmp
ret
pop
mov
bound
pop
rcl
or
or
imul
aad
(bad)
jne
ret
hlt
call
outs
test
add
clc
and
sbb
adc
mov
and
add
push
sbb
or
dec
or
adc
aas
or
push
cmc
in
pop
mov
lahf
pusha
movs
xchg
test
or
les
adc
loop
repz
enter
mov
jl
pop
ror
and
mov
sbb
and
in
mov
(bad)
or
adc
mov
lds
adc
push
pusha
cmps
or
int3
shl
push
out
iret
ror
xchg
and
add
sbb
push
call
lock
mov
mul
ror
jo
fimul
inc
add
xor
dec
cmp
cmp
and
jmp
movs
or
mov
and
test
dec
loopne
shl
adc
dec
cmp
je
js
icebp
adc
stos
jne
mov
push
sti
xchg
or
push
mov
sbb
inc
lock
movs
aad
or
xchg
push
mov
outs
test
or
push
adc
pop
cs
(bad)
add
or
out
mov
mov
fmul
das
add
sbb
xchg
ja
idiv
cwde
retf
(bad)
push
push
cld
ret
test
pop
cli
pushf
jnp
pop
cmp
push
inc
xchg
add
(bad)
aas
pop
inc
sub
xor
adc
cli
inc
jmp
mov
dec
sahf
dec
clc
pop
sub
xchg
cmps
rcl
jne
xlat
xor
add
push
arpl
xchg
push
cld
jle
hlt
cmp
jmp
adc
add
xor
and
jmp
xchg
push
or
call
rcl
inc
mov
lahf
clc
xchg
dec
test
jae
or
inc
adc
or
pop
(bad)
(bad)
pop
cli
inc
cmp
std
dec
stc
mov
add
dec
add
scas
test
ret
dec
jg
xor
je
popa
fidiv
dec
shl
cmps
mov
icebp
ja
mov
in
sbb
add
jge
inc
inc
or
bound
and
repnz
dec
jne
and
popf
xlat
daa
rcr
clc
or
scas
inc
mov
mov
clc
nop
inc
hlt
(bad)
js
(bad)
repnz
cmp
je
mov
pusha
loop
adc
push
mov
sbb
adc
push
shl
ror
pusha
jecxz
mov
cld
push
data16
adc
cmp
test
xor
pop
cmp
cdq
cmp
ret
shr
jno
or
(bad)
rol
loop
add
cmp
and
xchg
jbe
out
add
jnp
mov
rcr
paddsw
add
cmp
and
or
pop
das
sub
jo
lds
mov
stos
mov
lock
add
xchg
cmp
fndisi(8087
xor
or
repnz
sub
clc
mov
cmc
mov
mov
pop
ja
inc
fnstenv
ins
xor
cmp
push
inc
loope
loop
jbe
gs
gs
xor
and
mov
adc
mov
outs
or
sti
add
jmp
or
je
sub
and
mov
stc
cmp
xchg
mov
imul
adc
push
inc
cmp
adc
in
cdq
pop
adc
aad
inc
icebp
jbe
pop
sahf
inc
cs
test
cmp
mov
pusha
lahf
add
in
inc
ret
cld
push
sbb
loopne
mov
cmps
cmp
fcomp
sti
or
add
mov
repz
retf
(bad)
stos
push
ss
je
test
push
ret
sti
adc
js
out
pop
aad
cs
sub
dec
pop
pop
rol
adc
adc
shld
sbb
mov
mov
or
pop
cmp
adc
sbb
in
inc
loop
mov
fwait
inc
jp
inc
add
sti
push
pop
push
scas
adc
icebp
loope
adc
push
mov
xor
and
or
push
or
add
das
jle
cmp
das
jnp
adc
inc
push
jmp
fs
rcr
clc
test
test
fcmovnbe
adc
and
inc
les
lds
adc
cs
les
mov
mov
jne
and
push
and
les
nop
rcr
and
sbb
xchg
inc
xchg
push
mov
pop
and
dec
and
les
call
leave
or
pop
ret
mov
cmp
popa
aam
or
cli
lea
jbe
mov
adc
movs
pop
shl
jl
inc
mov
push
inc
push
fadd
in
mov
mov
sbb
pusha
xchg
cmp
fstp
inc
data16
mov
xchg
mov
add
stos
xor
xchg
ror
cli
loope
mov
pop
add
push
add
dec
adc
imul
pop
mov
dec
mov
jo
or
cmp
dec
inc
add
push
nop
dec
inc
test
add
pop
dec
inc
lock
jb
push
xchg
dec
pop
jmp
inc
push
into
les
jmp
(bad)
jg
and
jo
outs
repnz
cmps
sub
lahf
in
dec
popa
and
iret
out
lock
push
and
inc
dec
dec
inc
dec
loope
les
add
sub
fisttp
shl
mov
ror
dec
sbb
retf
dec
jmp
inc
push
das
dec
xchg
pushf
nop
mov
push
cmp
sbb
dec
inc
in
add
push
mov
hlt
cmp
arpl
xchg
pop
fnstcw
popa
add
fs
xchg
icebp
add
add
ror
adc
mov
repnz
inc
hlt
retf
add
sub
iret
punpckhbw
inc
and
mov
into
sbb
or
in
inc
push
mov
aaa
fs
in
cmp
adc
(bad)
loope
push
or
cdq
push
jle
je
in
sbb
pop
add
mov
sahf
imul
fisttp
sbb
or
inc
cmps
inc
dec
push
movs
and
adc
push
adc
pop
push
push
xor
sub
ret
das
mov
mov
xor
pop
or
add
mov
xor
push
das
repz
cmps
jae
sub
cmp
cmps
pop
push
hlt
adc
addr16
shr
shl
(bad)
aad
aam
xchg
cmc
jle
lock
sar
sbb
inc
cmp
jle
mov
or
test
icebp
cmp
cld
pop
jnp
mov
add
sub
or
add
add
pop
jno
jle
or
or
pop
inc
inc
add
mov
adc
fwait
inc
popa
(bad)
aas
fadd
inc
pop
add
jmp
fld
fmul
or
push
fcmovnu
stc
enter
mov
add
xchg
mov
pusha
jno
pop
dec
inc
push
inc
and
add
iret
fs
add
add
push
inc
xor
mov
mov
pop
inc
jne
add
aam
or
lea
xor
jecxz
dec
jnp
xor
xor
rol
add
push
mov
pop
lahf
adc
and
(bad)
push
arpl
data16
xchg
daa
dec
imul
adc
push
mov
add
sub
jne
cmp
push
lock
fiadd
cdq
ficom
jne
clc
mov
push
js
jmp
data16
mov
xor
loopne
sbb
sbb
adc
popa
xor
aaa
or
mov
cdq
jg
mov
sbb
jge
ret
xor
ret
push
push
inc
(bad)
fadd
adc
pusha
ret
bound
push
int
mov
add
(bad)
(bad)
cmps
mov
pop
les
ror
xor
bndstx
loopne
add
mov
dec
add
push
push
pop
mov
add
dec
push
adc
mov
sahf
mov
rcl
fistp
outs
jnp
mov
rcl
fild
mov
rol
les
cmps
leave
jbe
or
dec
fst
jg
or
xlat
push
lods
repnz
push
add
loop
push
pop
out
pusha
xchg
or
push
adc
xor
jl
push
mov
out
je
aam
push
xor
dec
add
retf
aad
ja
jns
jae
push
push
inc
and
mov
repz
daa
pop
call
pop
cmp
repz
jge
enter
pop
test
dec
iret
xor
sbb
test
mov
jmp
add
xchg
pop
xchg
jbe
lea
mov
cmp
push
loopne
mov
mov
mov
jmp
in
jo
ror
pop
ret
mov
test
pop
test
(bad)
fst
dec
pop
cmp
and
and
adc
cmp
pop
adc
mov
jmp
add
inc
ss
sub
stos
cmps
in
(bad)
xor
pop
lea
fcmovb
arpl
xlat
call
es
shl
dec
add
call
add
daa
inc
js
out
sbb
jge
push
xchg
jno
adc
movs
icebp
pop
xchg
sub
jecxz
mov
mov
cwde
add
cmp
and
xlat
(bad)
mov
daa
movs
rol
and
jmp
cmp
push
cmp
jb
mov
dec
in
inc
mov
inc
xor
movs
push
es
and
mov
call
les
push
ror
(bad)
std
fcmovb
pop
or
adc
pusha
mov
sub
or
or
pop
cmps
fild
(bad)
push
xchg
mov
in
mov
fadd
pop
sbb
xor
sbb
inc
mov
clc
push
inc
adc
scas
inc
push
pushf
push
push
add
and
mov
sub
and
push
nop
bound
clc
mov
leave
leave
ins
js
jns
jnp
fcom
xchg
xlat
popf
imul
jns
push
push
out
push
loopne
in
ja
add
cld
push
inc
add
aas
test
adc
nop
push
mov
xor
dec
add
inc
push
imul
data16
xor
ins
(bad)
out
sti
ds
pop
or
or
popa
jb
add
add
dec
dec
or
jg
add
cmp
push
aam
push
shl
xchg
pop
push
push
outs
jne
or
mov
pop
push
bound
ins
fs
out
test
cwde
xchg
adc
fs
pop
ja
fwait
add
inc
idiv
mov
pusha
jbe
jae
movups
push
or
or
or
gs
hlt
and
pop
call
add
aad
dec
mov
ja
xchg
pop
nop
adc
push
ficomp
adc
pop
rcr
lds
add
push
daa
add
dec
imul
cmp
adc
cli
inc
ins
popa
ins
mov
out
or
das
or
or
pop
or
popa
ins
adc
push
mov
push
jne
pop
mov
push
dec
shl
lock
ds
mov
push
mov
push
ins
inc
enter
xor
daa
lods
ds
daa
xor
in
adc
fiadd
inc
mov
je
in
sbb
cmp
call
icebp
adc
outs
loopne
out
inc
push
push
cmps
xadd
dec
pop
scas
mov
push
(bad)
mov
scas
(bad)
call
dec
jo
jg
pop
pop
push
xchg
sahf
je
enter
and
push
inc
xchg
inc
pop
hlt
stos
add
push
push
fmul
jbe
ss
push
ror
nop
inc
jno
mov
pop
les
(bad)
out
xor
(bad)
clc
pop
sti
fimul
lea
xor
ins
shl
push
aam
call
imul
sub
sbb
lds
mov
sub
and
rol
test
add
or
push
aam
out
push
ds
aam
in
hlt
popf
mov
pop
icebp
dec
outs
jl
jns
dec
cmp
retf
int3
lahf
dec
add
dec
pop
push
lods
fs
jl
cmps
ret
(bad)
pusha
xchg
sub
push
add
dec
pop
fistp
push
pusha
pushf
cmp
aam
test
test
or
mov
xchg
sbb
inc
mov
test
inc
lock
xor
xchg
icebp
mov
inc
jne
cmps
jo
mov
cmp
pop
or
cld
mov
(bad)
int3
xchg
or
add
xchg
sbb
adc
adc
pop
or
outs
jne
dec
mov
pop
pop
dec
pop
sub
add
sbb
inc
adc
or
(bad)
xchg
jno
bt
ret
fsubrp
cmp
dec
cmp
or
cmp
ins
xchg
or
loope
popa
fs
or
inc
les
jp
mov
add
jns
mov
daa
lea
inc
mov
add
test
xor
mov
pusha
mov
nop
pop
adc
adc
inc
mov
ror
dec
push
int
sub
pop
pop
push
mov
bound
fimul
fidiv
(bad)
jo
inc
lods
push
fcom
jnp
pop
mov
inc
add
jmpw
xchg
pushf
test
dec
jno
fs
dec
int3
shr
inc
enter
inc
xchg
jne
cmp
inc
aam
mov
movs
push
sub
pop
popf
pop
pop
adc
inc
jmp
mov
add
iret
lds
or
mov
mov
jle
and
inc
out
scas
sub
inc
and
push
push
imul
pusha
adc
mov
shl
cli
mov
pop
push
mov
js
mov
mov
ja
movs
mov
mov
out
jb
rcr
leave
retf
loopne
push
mov
dec
shl
ss
push
cld
test
push
mov
jnp
cs
mov
cmps
iret
cmps
or
inc
inc
shr
inc
pop
inc
out
jmp
push
mov
push
clc
test
sti
nop
cld
pop
out
movlps
clc
sbb
test
jnp
cmp
jo
dec
mov
mov
jo
pop
or
test
test
cmp
jns
cmp
test
adc
mov
cdq
mov
sti
xor
je
imul
push
push
data16
sbb
mov
adc
inc
cld
loopne
jmp
in
test
push
outs
xchg
or
xchg
or
fstp
xor
sbb
and
mov
and
push
sbb
xchg
fdiv
in
push
push
iret
add
call
pop
mov
xor
sar
mov
outs
mov
test
pusha
mov
or
mov
fst
pop
and
fst
or
xor
daa
inc
xchg
fidivr
loop
jmp
or
and
cmp
and
mov
les
and
pop
or
nop
imul
xor
jecxz
or
or
push
or
jmp
jmp
or
lods
sbb
cmp
popa
test
or
arpl
add
inc
mov
dec
inc
jo
xchg
ds
neg
call
sbb
js
out
pop
fs
fistp
or
sbb
daa
cmc
mov
push
pushf
inc
loope
xrelease
cmc
scas
pop
sub
and
xor
(bad)
push
xor
xor
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
(bad)
jb
and
push
push
push
push
pop
pop
pop
out
ins
add
stos
test
mov
(bad)
xlat
xor
cmovno
add
rcl
pop
sahf
rol
enter
jmp
cmp
fcom
push
mov
push
inc
and
cld
es
lahf
icebp
mov
push
std
jp
pop
in
nop
lods
adc
xor
mov
div
inc
pop
sbb
add
cli
and
add
jno
test
cld
mov
fdiv
adc
xor
lahf
movs
jle
sub
inc
rol
shl
and
les
xor
ret
push
popa
or
arpl
jmp
addr16
pop
out
pop
cmp
mov
or
sub
clc
or
outs
xor
test
push
or
push
in
push
inc
jge
sub
(bad)
mov
rol
or
cmp
mov
popa
dec
repz
cli
sbb
jo
jbe
inc
jmp
das
stc
cmp
adc
add
cmp
mov
dec
xor
ins
pop
jmp
loope
cmp
dec
popa
add
pop
lock
daa
inc
sbb
movs
inc
inc
pusha
dec
sub
dec
call
inc
dec
inc
fidivr
push
add
test
and
mov
arpl
or
cmp
pop
shl
cmp
sbb
mov
lods
push
adc
sbb
inc
pop
icebp
mov
cmc
fwait
or
fistp
pop
adc
mov
call
cmc
(bad)
cvtps2pd
sar
(bad)
imul
push
bswap
in
and
mov
inc
aam
lahf
mov
jecxz
pusha
mov
ss
adc
and
xchg
ret
xchg
imul
into
daa
cmc
or
pop
pop
add
mov
and
out
jnp
pop
mov
inc
jmp
popa
cmp
leave
movs
test
mov
sub
add
add
cmp
dec
add
cmps
xchg
(bad)
or
jmp
inc
mov
lock
add
mov
and
cdq
jecxz
(bad)
dec
pusha
out
cmps
das
push
not
mov
inc
movzx
mov
dec
shl
inc
mov
push
mov
inc
push
or
inc
xor
adc
out
adc
jge
shl
iret
push
mov
ret
push
dec
or
or
push
jmp
add
(bad)
nop
mov
add
or
add
jle
cmp
jg
mov
aas
test
popa
inc
sub
jo
loopne
cmp
fwait
push
loopne
xchg
les
push
inc
out
rcr
lock
add
xchg
mov
inc
fdivr
push
jmp
cmp
jle
xor
sub
retf
mov
cmp
jle
cmp
ins
imul
sub
add
ja
sti
popf
or
jo
pop
ss
cld
pop
xor
jmp
inc
push
data16
scas
or
hlt
xor
scas
mov
push
aaa
in
xlat
add
nop
adc
in
push
cmp
loopne
jne
jb
(bad)
push
(bad)
jmp
lea
mov
jge
add
mov
mov
adc
adc
iret
fld
mov
mov
mov
movs
cs
jle
pop
ret
aas
mov
pop
cmp
aad
imul
cs
mov
enter
sub
inc
lock
dec
jle
cmp
stos
sbb
jl
popa
sub
ret
imul
add
cmp
fst
sbb
neg
mov
aas
cmp
fist
fs
sub
add
adc
inc
inc
pushw
mov
test
pusha
inc
mul
push
iret
movs
xchg
iret
xor
test
hlt
or
out
or
or
enter
inc
sbb
sahf
ins
add
loopne
test
repnz
sbb
cld
int
or
jg
aas
ror
lods
jl
sub
(bad)
loope
xor
dec
push
mov
add
rcl
add
inc
jbe
add
cmp
jge
xchg
add
or
pushf
aas
inc
mov
sbb
jge
cmps
jg
bound
jo
ds
test
xor
(bad)
ret
out
jle
das
mov
push
cmp
add
or
fcom
inc
inc
adc
and
rcl
sub
and
js
mov
adc
adc
xchg
push
ficomp
jmp
loope
xchg
add
pusha
ins
fcomp
out
jle
(bad)
adc
and
cld
add
inc
inc
outs
push
js
adc
add
add
xchg
xchg
inc
dec
pusha
mov
mov
(bad)
sbb
adc
and
pop
clc
mov
jg
xchg
jnp
xchg
inc
mov
jo
inc
jecxz
xor
ret
imul
fs
add
pusha
add
mov
xor
out
fs
sbb
jp
adc
sbb
je
sub
pushfw
pusha
retf
adc
cli
add
pop
ret
rcl
das
sti
xor
add
cmp
(bad)
sub
push
jae
mov
retf
aas
add
pop
push
adc
jns
push
rol
(bad)
push
sbb
jecxz
dec
jno
test
fsubr
adc
pop
add
adc
push
loope
push
sbb
test
jmp
mov
or
push
sub
not
movs
fisub
mov
out
dec
cmp
pop
cmp
or
or
push
add
(bad)
fist
jmp
or
push
out
jle
loopne
and
push
test
or
push
sti
cmp
or
loopne
xchg
lock
add
add
int3
adc
in
sbb
mov
adc
jl
pop
and
adc
loopne
and
xchg
inc
shr
sub
mov
ja
pop
sub
aas
mov
iret
cld
add
pusha
shl
pop
inc
call
(bad)
pop
jo
pop
fwait
xor
mov
(bad)
and
sub
shl
or
jecxz
xchg
inc
fld
mov
popa
pop
loopne
inc
call
jle
cmp
mov
cwde
pop
ret
or
ret
push
in
rol
inc
or
bound
cld
outs
popa
add
sbb
jne
add
cmp
je
aas
xchg
dec
or
sbb
ret
mov
inc
or
int
jle
arpl
xchg
dec
push
data16
jecxz
mov
mov
sbb
movs
push
push
je
mov
cmps
jne
lahf
call
test
push
add
adc
mov
jmp
out
pop
xor
push
int3
and
inc
pop
xchg
ret
dec
imul
xor
dec
push
inc
xor
jmp
and
dec
mov
jg
adc
jmp
xor
jo
sub
dec
and
mov
dec
or
shl
xor
pop
inc
pop
pop
ret
shl
push
and
fstp
cdq
out
inc
inc
clc
dec
mov
xor
cmp
jge
mov
mov
mov
in
push
or
jbe
sbb
inc
dec
jne
lahf
daa
push
jo
push
xor
cmp
mov
cld
pusha
or
int3
jmp
adc
push
or
mov
enter
mov
lds
ja
push
push
sbb
movs
mov
add
or
xchg
shr
mov
pop
mov
add
sub
aas
hlt
pop
sbb
inc
sti
pop
pop
mov
fmul
test
jns
mov
mov
callw
(bad)
div
or
dec
fidiv
add
and
pushf
and
ins
add
data16
jg
test
mov
cld
fs
or
hlt
hlt
mov
jge
sbb
int3
sbb
out
je
xor
mov
inc
cli
sti
lock
movs
add
push
xor
dec
cmp
mov
imul
push
shl
call
jbe
dec
mov
cmp
je
and
int
push
cmp
adc
dec
pusha
or
and
xchg
je
js
adc
xchg
xchg
cmp
fadd
push
mov
stos
test
ror
mov
test
add
push
call
push
jmp
and
out
aas
scas
inc
push
scas
jbe
add
test
mov
test
dec
mov
pop
push
outs
add
rol
cmp
aam
lock
mov
in
push
loopne
mov
jg
nop
or
pushf
les
jmp
inc
sbb
or
push
jno
sti
or
fild
or
aam
sbb
cmp
cmps
out
mov
js
aam
adc
sub
dec
outs
sti
mov
jmp
pop
das
ds
inc
xchg
xchg
out
inc
lock
hlt
int3
or
test
das
std
enter
cmp
sbb
retf
cmc
test
pop
ins
push
les
je
cdq
pop
inc
mov
jle
sbb
les
loopne
jl
aas
les
jae
ins
or
push
add
jb
(bad)
cmp
aas
test
and
ret
pop
or
ret
fdivr
(bad)
jbe
and
add
gs
les
inc
xor
clc
sub
pop
fst
push
push
add
dec
sbb
and
adc
or
aam
test
cmc
xchg
not
in
and
jne
cmp
mov
hlt
mov
mov
arpl
stc
jmp
inc
mov
xor
shr
inc
push
xchg
dec
inc
hlt
push
mov
ins
sub
add
add
jo
jo
jge
std
push
cmp
jge
fild
mov
adc
push
fsubr
inc
aas
push
xchg
dec
adc
add
xlat
addr16
lahf
inc
mov
mov
sbb
or
push
retf
rol
mov
or
fstp
popf
and
fstp
push
(bad)
lods
and
or
sub
sub
sar
cdq
test
rcl
aad
(bad)
inc
push
push
sub
cmp
mov
xchg
lea
aam
movs
mov
aaa
idiv
mov
in
js
test
and
jp
sub
test
push
lock
jge
cmp
or
shr
mov
pop
add
popa
mov
pop
xchg
hlt
iret
sbb
hlt
hlt
pop
(bad)
rcl
into
hlt
adc
and
repz
test
fldcw
jge
push
pop
pop
dec
(bad)
pop
sbb
shl
xor
xchg
scas
push
sbb
lahf
add
add
and
lock
xor
dec
add
and
dec
retf
push
push
aas
xchg
fbstp
test
or
jae
dec
or
jno
loopne
stos
push
pop
loopne
pop
mov
or
or
fistp
outs
jge
int
ss
cmps
or
shl
jmp
(bad)
test
dec
add
inc
out
loop
mov
movs
imul
sbb
loopne
sahf
call
sar
inc
lods
ds
jmp
enter
mov
jge
mov
sbb
or
adc
xor
jmp
adc
mov
out
std
add
fist
mov
add
ror
jo
daa
dec
xor
jl
rcl
imul
push
ret
in
ret
loope
adc
loopne
add
sbb
int3
add
shr
daa
adc
or
dec
pop
pusha
repnz
or
dec
das
call
and
sbb
cmps
mov
aad
inc
xor
fimul
(bad)
push
or
or
outs
out
push
mov
dec
pop
push
bound
out
and
cmp
adc
or
clc
adc
adc
inc
jb
lods
clc
and
inc
xor
lods
sbb
stc
loop
dec
xchg
add
stc
dec
lock
cs
add
stc
nop
pop
nop
pushf
dec
clc
je
jns
and
arpl
cmp
dec
mov
sub
inc
leave
arpl
shr
inc
movs
inc
xor
or
and
add
inc
cmp
dec
cdq
add
add
add
sub
adc
add
adc
or
cmp
stos
cwde
or
pop
ror
jno
add
inc
shr
nop
popa
xor
pushf
loopne
xchg
mov
jge
inc
int3
mov
and
ins
or
int
inc
(bad)
test
mov
ret
mov
jo
mov
add
dec
or
cmps
cmp
adc
rcr
mov
rol
es
push
sbb
pop
fidivr
in
push
mov
jne
sbb
aas
mov
or
or
lea
in
add
or
mov
jmp
pusha
xchg
and
push
icebp
call
fist
sub
push
adc
pop
jmp
adc
pop
pop
add
dec
lods
sbb
cld
inc
push
fs
jge
jle
jp
js
pop
dec
movq
xor
js
dec
mov
push
add
inc
mov
jp
dec
sub
clc
adc
inc
test
repz
or
add
(bad)
fdiv
fsub
cld
ror
ret
mov
xchg
bound
leave
mov
mov
mov
jb
sahf
addr16
adc
ja
push
mov
mov
add
jo
mov
(bad)
mov
call
xchg
push
mov
add
add
test
dec
fidivr
out
out
mov
sbb
xor
test
stc
int
pop
sar
movlps
das
call
sub
fiadd
push
aas
cwde
icebp
sbb
pop
pusha
(bad)
adc
dec
adc
sbb
xchg
test
js
mov
dec
push
xor
sbb
lea
pop
sahf
mov
out
cmc
push
and
push
add
stos
xchg
cli
mov
and
(bad)
(bad)
cmc
mov
adc
inc
add
mov
std
dec
cld
push
mov
xlat
mov
xor
add
mov
(bad)
lea
add
call
shr
push
dec
adc
jge
sbb
out
ja
xor
aaa
push
jp
mov
lea
pop
fs
sbb
pop
pop
pop
sbb
pop
push
in
mov
not
dec
pop
idiv
fcom
jp
std
aas
cmp
jne
ins
adc
test
mov
cmp
cmp
mov
push
add
and
in
cmps
add
mov
loope
fs
push
push
dec
scas
add
mov
mov
or
or
and
or
fbld
inc
xchg
or
test
adc
pushf
ins
clc
mov
enter
test
aaa
add
in
pop
jge
xor
jno
or
pop
out
aas
je
(bad)
adc
pop
xor
mov
test
rol
mov
pop
inc
js
loop
or
test
int3
adc
or
out
push
ret
push
add
lock
push
pop
add
cmp
mov
or
popa
xchg
ds
or
cdq
sub
pop
mov
add
ror
lea
jne
iret
add
lock
scas
mov
ins
pop
inc
lock
pop
shl
pop
mov
xchg
popf
adc
retf
lods
imul
addr16
add
inc
sbb
je
cmovo
daa
js
cwde
push
inc
sbb
ret
adc
out
ret
arpl
and
pop
loope
call
mov
cmp
je
fs
mov
ss
and
mov
inc
sub
pop
mov
add
fimul
inc
mov
out
mov
push
popa
sub
jo
or
inc
adc
aaa
pop
loopne
or
mov
dec
test
jl
pop
cmp
jge
mov
jbe
inc
add
jge
rcr
jbe
and
or
dec
aas
mov
enter
sub
mov
adc
pop
fcomp
add
les
add
out
add
inc
fild
xchg
adc
or
pop
sbb
inc
jg
clc
pop
test
loopne
mov
adc
rol
out
rcr
shr
out
in
add
stos
jnp
test
sub
cmp
popf
in
jbe
and
mov
sub
xor
mov
dec
mov
sub
inc
arpl
cmp
adc
imul
shr
inc
inc
scas
jmp
popf
lods
sub
push
arpl
mov
ret
int
xchg
cmp
ret
(bad)
jge
adc
js
cmp
out
xchg
xor
or
jg
pop
sub
push
and
add
push
ins
jge
pop
inc
cmp
movs
ja
ja
sar
xchg
add
lods
or
sbb
sar
or
push
or
ins
add
push
sub
jmp
test
sahf
inc
xchg
test
nop
(bad)
dec
jno
cmps
sub
dec
popf
mov
jbe
push
xchg
add
enter
sahf
test
cmove
dec
mov
dec
out
jae
ss
push
retf
js
cmp
xlat
stc
or
mov
test
test
pop
or
scas
ret
xlat
mov
push
into
and
or
and
sub
lock
mov
or
and
dec
mov
mov
jmp
test
loopne
out
cmp
loop
ret
mov
shr
jmp
push
cld
xor
lods
nop
clc
mov
inc
xor
and
sbb
out
ret
mov
mov
xlat
jne
bound
leave
jle
cmps
cmp
je
mov
cmp
inc
test
retf
std
add
sbb
add
in
mov
mov
push
mov
enter
xor
mov
mov
shl
lock
xchg
retf
mov
ret
outs
dec
mov
ja
fadd
(bad)
test
push
pop
mov
pushf
data16
loopne
jl
ja
jge
test
jae
inc
dec
lahf
pop
rol
xchg
aas
sub
and
cs
add
data16
push
stos
xchg
test
pushf
xchg
hlt
sbb
retf
xchg
xchg
jmp
inc
inc
mov
jno
mov
adc
xchg
outs
xor
cmp
push
popf
push
inc
push
mov
arpl
or
push
inc
fst
arpl
es
movs
lods
xchg
mov
push
mov
cs
mov
cmp
inc
inc
and
scas
dec
pcmpeqb
pop
push
or
leave
and
inc
add
retf
loopne
inc
push
push
ds
mov
sub
mov
lea
cmps
bound
push
sbb
mov
sub
in
jmp
cmp
pop
xchg
push
push
push
or
inc
push
inc
jl
loope
in
js
jl
call
outs
ja
add
sbb
inc
sbb
sbb
push
(bad)
and
cli
push
ret
mov
inc
out
push
push
lahf
adc
lock
sbb
adc
into
fs
test
mov
je
scas
push
sar
adc
cwde
(bad)
mov
add
add
or
sbb
jae
sub
mov
and
inc
sub
call
or
mov
xor
int3
adc
jbe
mov
add
ja
mov
pop
pop
xor
mov
mov
adc
inc
dec
jne
out
retf
cmp
push
scas
mov
jne
add
push
sbb
mov
stos
fadd
dec
inc
popa
mov
enter
push
jge
or
lock
into
cmp
or
adc
outs
push
mov
aaa
inc
and
mov
dec
inc
add
xchg
or
stc
pop
rol
jae
cwde
inc
and
out
mov
add
mov
jg
add
cmps
mov
mov
out
add
rcr
xor
int3
clc
mov
inc
call
retf
popf
lods
push
popa
jecxz
inc
out
out
sbb
test
sbb
sar
sbb
adc
xor
dec
scas
mov
dec
ins
or
jno
scas
in
(bad)
dec
imul
test
clc
repnz
push
cmp
add
dec
jmp
jle
in
mov
pop
enter
xor
popf
jp
loopne
test
(bad)
sti
test
push
nop
push
lods
mov
and
adc
xor
loopne
push
xchg
int
jmp
sbb
inc
clc
push
jg
je
push
sbb
mov
mov
push
out
data16
clc
rcr
adc
mov
and
mov
inc
int3
jns
cmp
ds
inc
cmp
xor
push
loopne
pop
sti
test
mov
cmp
push
sub
inc
lea
add
dec
or
scas
add
sbb
mov
loope
fild
jae
inc
jmp
out
xchg
test
mov
rcl
fwait
mov
jns
add
inc
loope
dec
jg
jl
out
dec
dec
retf
mov
enter
mov
push
push
and
xor
cmp
dec
jmp
inc
push
adc
pop
xchg
mov
or
sbb
xchg
cmp
or
sub
aad
cmp
inc
pop
xlat
inc
and
or
sub
fcom
shl
mov
jl
cmps
or
mov
or
rcl
iret
add
push
jp
leave
clc
das
ret
lock
and
popa
ret
clc
pop
sbb
shl
addr16
add
dec
add
jne
mov
cmps
sub
aas
lea
iret
popa
es
push
test
ds
icebp
push
mov
inc
or
inc
xchg
rol
sbb
mov
jecxz
push
inc
xchg
sbb
inc
mov
sbb
pusha
int
imul
jno
push
xchg
test
jmp
dec
lods
add
pop
jp
shl
jno
test
pop
mov
sbb
pop
pop
aas
add
lods
(bad)
fisubr
pop
iret
dec
cli
sbb
adc
or
pop
add
xchg
adc
test
push
in
add
cmp
sti
jl
inc
test
mov
add
push
jae
int
mov
sar
and
cmp
mov
mov
xchg
jge
or
mov
(bad)
mov
test
call
xchg
retf
pop
jne
outs
or
popa
iret
loope
movs
aad
dec
mov
fmul
cs
jg
dec
jnp
sti
adc
jg
inc
jne
dec
sub
cmp
mov
sub
cmp
lahf
push
push
adc
(bad)
jl
jl
xor
hlt
add
clc
pop
push
adc
fs
movs
jno
add
int
inc
into
nop
sbb
add
mov
xchg
mov
pop
cs
leave
inc
lock
sub
adc
mov
mov
dec
test
fdivr
add
stos
or
popf
add
cwde
or
sbb
inc
inc
or
and
xchg
cwde
ret
mov
popa
sub
cmps
add
cs
inc
inc
stc
xchg
cld
les
mov
mov
xchg
cmp
pop
(bad)
push
and
iret
jmp
jne
xor
mov
cwde
ret
sub
cs
adc
jne
push
pusha
test
inc
call
hlt
hlt
les
mov
xor
sbb
or
dec
xlat
or
push
push
and
rcl
fild
xchg
or
jmp
sub
lock
inc
add
ss
jmp
ins
loopne
es
pop
sub
sbb
cs
cdq
and
loopne
call
sbb
aam
sbb
rcr
int3
adc
add
inc
add
int3
adc
sub
mov
mov
or
pop
pop
push
add
xchg
push
daa
xchg
(bad)
test
sub
movs
mov
jne
fild
jg
inc
xor
pop
mov
mov
adc
adc
mov
add
xor
push
mov
scas
js
add
cmp
adc
or
xchg
xor
neg
sbb
inc
pop
shl
or
push
xor
addr16
ret
mov
or
add
xchg
adc
add
dec
adc
or
stos
ror
add
fs
pop
pop
and
adc
test
imul
test
dec
mov
or
push
add
nop
jne
cld
imul
sub
sbb
mov
mov
xchg
(bad)
lods
add
or
sbb
or
mov
jmp
lods
sti
or
test
inc
sbb
call
dec
loope
movs
outs
hlt
test
sbb
ret
add
fcom
sbb
pop
pop
shl
mov
and
xchg
mov
cdq
push
ja
add
push
add
test
gs
inc
ficomp
add
or
test
add
cdq
enter
or
jge
inc
sub
push
and
mov
and
and
add
jbe
inc
add
add
pop
movs
cdq
xchg
js
add
int3
mov
or
push
je
in
outs
or
push
cmp
xor
mov
push
(bad)
xchg
inc
addr16
jle
mov
mov
add
mov
shr
ror
inc
add
(bad)
cmps
push
or
mov
cmc
inc
pop
call
push
add
pop
lock
sub
jl
sbb
push
sub
ret
xchg
lock
xor
dec
inc
outs
jecxz
pop
pop
or
dec
mov
mov
je
xor
push
shl
inc
push
into
ret
or
dec
ret
mov
cmp
repz
pop
aaa
xor
or
mov
jo
retf
clc
and
jmp
clc
sub
push
add
or
into
sti
fimul
aas
aas
pushf
xor
pop
lods
mov
inc
push
lahf
test
mov
inc
push
push
sub
adc
(bad)
sbb
jp
jge
cmp
jb
mov
add
or
xchg
mov
outs
mov
adc
retf
int3
imul
pop
cmp
cmp
inc
jecxz
cmp
lea
dec
jno
sbb
xor
or
cmp
lea
or
push
adc
lea
xor
inc
outs
pop
mov
mov
add
or
add
jo
adc
jmp
xor
pop
test
jecxz
mov
add
inc
or
pop
dec
mov
lock
jae
add
int
test
inc
add
jmp
dec
int3
(bad)
or
xchg
or
sub
add
cwde
jg
adc
ret
xchg
adc
pop
mov
mov
mov
pop
adc
add
inc
or
imul
cmp
add
push
dec
jne
pop
iret
dec
inc
sbb
inc
and
nop
dec
jo
lds
adc
pop
out
cmp
mov
mov
nop
or
jne
cld
or
jp
and
cmps
js
dec
sahf
sub
shr
je
ret
sbb
push
xchg
test
add
xor
xchg
or
test
cmp
jmp
mov
in
xchg
xor
pop
pop
inc
cmp
lods
pop
outs
or
push
cs
in
enter
stos
test
push
or
add
jmp
and
ins
fdivr
xchg
push
add
sahf
stos
je
inc
xchg
mov
jno
cmp
mov
pop
add
mov
rcl
sbb
fcomp
xor
scas
fcmovnbe
xor
xchg
push
repnz
jge
mov
frstor
add
mov
and
push
dec
sub
or
sub
loope
dec
inc
or
or
ja
mov
push
mov
and
pop
mov
vpmacsww
inc
or
clc
mov
sar
(bad)
(bad)
test
cs
xchg
jne
sbb
out
int3
pusha
inc
mov
pop
sub
or
xchg
out
push
mov
(bad)
jl
adc
xor
jne
call
sub
jge
dec
stos
adc
mov
jno
adc
jmp
and
add
xor
push
inc
sbb
mov
jge
test
adc
or
in
add
inc
rol
je
sub
shl
pop
push
push
mov
leave
push
clc
mov
lods
test
mov
test
xor
push
xor
mov
mov
mov
aam
(bad)
and
lock
or
push
mulps
xor
add
pop
mov
mov
outs
je
mov
mov
xchg
sbb
addr16
inc
adc
lock
aaa
sbb
push
mov
mov
pusha
and
push
sbb
fdiv
les
sub
mov
push
jg
hlt
xor
cmp
xor
dec
(bad)
xchg
mov
lea
call
pop
jo
pop
(bad)
sub
or
cmp
pop
adc
xor
jg
(bad)
xchg
js
pop
movs
cmp
mov
pusha
dec
mov
rcr
jge
jo
movs
movs
cld
push
loope
xchg
xor
or
pop
bound
inc
adc
nop
ss
dec
xor
or
aas
push
dec
or
xchg
jl
dec
jmp
nop
add
nop
les
xor
(bad)
adc
push
hlt
mov
cmp
sbb
or
add
nop
or
cmps
dec
repz
lods
fs
jae
and
aad
mov
outs
cmp
pop
aam
repz
xor
adc
sbb
nop
cs
inc
and
mov
dec
mov
dec
jne
xor
mov
push
aam
scas
sub
leave
or
add
inc
cmp
or
or
or
aad
rol
or
call
sbb
cmp
ss
push
sub
dec
or
pop
imul
sub
js
ja
adc
dec
add
inc
mov
mov
and
inc
pop
add
mov
ror
mov
pop
shl
inc
pop
lods
xchg
pop
mov
add
inc
mov
mov
inc
xor
pop
lea
arpl
loop
test
push
jecxz
jnp
repz
add
into
mov
call
hlt
test
rol
dec
jo
(bad)
or
mov
mov
dec
sub
xor
pop
push
cmp
dec
repz
sbb
cmp
ja
or
pop
arpl
sar
push
add
xchg
and
jnp
shr
lods
xor
loopne
add
or
push
adc
sbb
jmp
and
or
sub
adc
fs
or
xchg
inc
in
inc
jge
or
sbb
add
push
ins
rol
push
push
js
sub
mov
pop
push
lds
ret
mov
mov
lods
mov
pop
or
icebp
xor
mov
add
xor
jg
push
cmp
dec
add
push
int3
and
in
adc
push
rol
mov
ins
inc
sub
or
jl
xchg
xor
push
ins
sar
sbb
adc
in
inc
idiv
mov
inc
cs
dec
sbb
in
sbb
sbb
dec
or
mov
and
cmp
push
push
jbe
or
xor
mov
je
lea
jns
sbb
mov
and
push
push
sbb
ins
(bad)
mov
dec
pop
ret
xor
cld
mov
in
fcomip
inc
ret
imul
add
inc
movs
jmp
ret
or
jmp
out
inc
in
ret
push
or
loope
push
add
push
lock
in
retf
call
call
stos
test
jmp
mov
(bad)
(bad)
sti
aam
add
push
add
jbe
sbb
(bad)
sbb
mov
int
loopne
or
jl
mov
mov
test
inc
rol
pop
call
push
mov
add
and
adc
cmp
mov
imul
mov
mov
xchg
cmp
aam
inc
pop
add
pop
adc
sbb
cmp
jecxz
scas
add
xor
adc
movs
movs
mov
out
popa
or
inc
add
add
dec
cmovbe
xchg
or
pop
je
(bad)
shl
jns
les
xor
lock
mov
push
inc
mov
jge
xor
push
cld
in
stc
push
add
xchg
jns
pushf
nop
sub
xchg
pop
add
neg
pop
ret
aas
mov
mov
pop
ret
ret
sub
pop
int3
dec
inc
or
not
daa
add
pop
std
iret
ret
movs
inc
imul
mov
call
psrad
and
int3
or
pop
dec
cmovne
jg
icebp
iret
xchg
mov
push
(bad)
(bad)
jb
movzx
pop
imul
push
fbstp
push
push
push
stos
and
cmps
xchg
daa
cld
pop
adc
nop
inc
xlat
les
and
or
lods
dec
sbb
adc
add
sbb
cwde
adc
aam
cwde
leave
inc
jmp
cli
jne
lods
sbb
push
outs
imul
test
je
add
inc
add
or
and
in
imul
ret
jge
mov
push
movs
jge
and
je
add
xchg
dec
ins
inc
sbb
pop
pushw
in
sbb
xor
(bad)
sbb
or
shl
shl
push
add
sub
mov
cmp
jne
mov
mov
call
pop
ret
fwait
mov
cmp
sbb
add
or
mov
mov
pusha
pop
pushw
mov
aas
pop
test
fild
nop
add
pop
or
jno
add
jl
mov
aaa
mov
rcl
xor
xor
es
(bad)
pop
and
scas
test
sbb
mov
jge
(bad)
adc
loopne
(bad)
lea
adc
movs
out
dec
xor
push
nop
push
nop
rcl
xchg
ret
lds
nop
cmp
or
xor
push
mov
lods
xor
cmp
repz
movs
sub
sub
cmp
repz
and
and
nop
sbb
cmp
test
or
cmp
repz
js
je
or
jle
jo
xchg
mov
pop
aaa
enter
loopne
push
adc
jg
pop
adc
mov
mov
push
fistp
mov
lahf
sub
in
psubd
pushf
mov
out
add
adc
scas
and
jle
add
xchg
pop
and
xor
loopne
mov
aas
and
arpl
or
xchg
sub
and
stos
add
dec
cmp
mov
and
or
mov
fsubr
push
inc
mov
jmp
push
punpckhwd
clc
aaa
mov
jae
popa
jae
add
mov
clc
jl
add
push
push
outs
movs
out
pop
sub
sti
clts
js
jo
inc
ins
jbe
add
push
xchg
je
add
out
dec
outs
jo
je
inc
push
jns
sbb
out
or
cwde
or
retf
xchg
add
mov
xor
adc
xor
pop
idiv
aas
mov
loopne
or
sti
pop
outs
jb
pop
adc
cmp
jne
push
xor
pop
bound
or
inc
out
or
pop
xchg
lea
bound
pop
in
outs
adc
inc
imul
aaa
in
mov
jae
and
jmp
jo
or
or
cld
or
inc
ins
inc
mov
or
shl
cmp
test
ja
inc
add
push
sahf
dec
push
push
(bad)
nop
push
mov
out
push
mov
cmps
cmovne
lods
jnp
sbb
jle
pop
dec
loop
add
xlat
enter
fcom
xchg
enter
nop
mov
add
sbb
adc
mov
gs
adc
or
xchg
(bad)
and
and
add
sub
or
stos
inc
nop
adc
fdivr
fistp
lods
rol
inc
mov
mov
sub
dec
out
xor
xlat
sub
and
jo
push
pop
shr
sub
(bad)
aam
xchg
cmps
mov
push
rcr
or
push
ficomp
jnp
mov
push
inc
gs
data16
or
or
jnp
aaa
in
or
push
sbb
or
sbb
dec
add
dec
push
out
pop
fwait
jl
pusha
push
push
inc
xor
ja
push
mov
std
call
aam
popa
lar
aad
sar
sub
mov
lea
dec
pusha
xor
xchg
nop
or
mov
pop
ins
fcom
aaa
add
pop
inc
push
dec
stc
mov
fnstcw
inc
mov
fmul
movs
jb
icebp
or
and
retf
add
sahf
pop
pop
adc
mov
sbb
mov
(bad)
fcomp
xchg
mov
mov
inc
add
sub
daa
in
inc
fisttp
(bad)
jge
adc
les
xchg
mov
bound
mov
add
xchg
sub
add
add
add
push
fistp
arpl
and
mov
loop
jne
xor
lahf
aad
pop
ins
mov
shr
jns
fst
add
cmp
(bad)
jle
sbb
(bad)
xchg
movs
add
or
add
rol
pop
ror
lock
rcl
aas
add
fcom
jmp
and
sub
jge
cmp
add
aas
push
ss
aas
jo
pusha
mov
add
jno
and
jb
ret
xchg
sbb
enter
fcomip
fstp
in
nop
lahf
pop
sbb
js
movs
add
add
loope
push
sub
ds
and
push
inc
loop
loop
test
xchg
out
mov
pop
or
stos
scas
pop
daa
inc
jecxz
cwde
jmp
inc
mov
popa
(bad)
mov
sbb
loop
mov
retf
ret
shl
fs
imul
scas
and
and
mov
lods
push
rol
(bad)
call
fmul
loope
push
mov
cmp
stos
add
xor
inc
xchg
push
or
imul
inc
pusha
pusha
and
cdq
push
sti
movs
or
and
sbb
inc
test
in
outs
push
outs
mov
pusha
adc
mov
out
mov
push
cmp
pop
sar
add
addr16
dec
dec
xchg
iret
jae
out
imul
and
and
sub
sahf
dec
ror
add
cmp
loopne
int3
mov
movs
mov
lods
jg
mov
jp
aam
bound
dec
pusha
mov
jecxz
inc
jg
cmp
(bad)
fnstsw
lds
dec
mov
push
sub
sbb
scas
inc
or
ja
call
test
lods
inc
les
hlt
inc
pop
jnp
xchg
movs
jbe
fsub
pop
sub
imul
test
or
ror
movs
jle
pop
and
pushf
jb
sbb
fsubr
or
jae
daa
xchg
mov
iret
repz
(bad)
xchg
pop
push
sub
or
movs
sti
and
or
(bad)
dec
movs
nop
mov
loope
(bad)
(bad)
(bad)
cmps
fcmovbe
lock
adc
push
sub
lock
js
push
into
hlt
push
mov
pop
cmp
push
jp
sbb
pop
or
push
or
cs
(bad)
test
xor
(bad)
xlat
lock
jl
push
sbb
and
cmovbe
jmp
imul
mov
dec
in
adc
mov
mov
enter
inc
push
and
add
xchg
or
and
(bad)
mov
loopne
pop
mov
fsubr
push
push
push
lods
ret
les
cmp
pop
sub
add
xchg
mov
or
inc
pushf
adc
adc
sub
fimul
push
sar
in
cmps
popf
sbb
or
push
adc
jge
cmps
imul
mov
je
lock
inc
sbb
dec
xor
push
pop
and
or
leave
jg
push
or
jg
and
int3
lds
in
lds
adc
add
pop
pop
xchg
push
or
pop
sub
popa
cmp
sub
cs
in
cs
xor
pushf
mov
push
xor
xchg
jg
xor
enter
xor
aas
aam
push
sub
cmp
inc
aas
movs
ss
cmp
jnp
cmp
push
dec
add
fs
mov
xor
pop
sbb
or
adc
fild
push
sbb
or
into
lock
arpl
mov
mov
pop
repnz
loope
lods
xor
test
jo
dec
mov
pop
adc
xchg
adc
push
or
xchg
dec
inc
sbb
fnstsw
pop
xor
xor
lock
inc
xchg
repz
cmp
dec
push
dec
cs
mov
ror
test
test
imul
or
or
ja
mov
xor
(bad)
aas
and
lock
mov
inc
jae
add
adc
test
mov
mov
xor
rol
xor
inc
dec
inc
scas
mov
lea
(bad)
and
jge
sub
inc
popa
data16
es
stos
sub
test
aaa
pusha
and
pop
inc
and
mov
sbb
test
inc
push
or
or
pop
mov
add
pop
dec
add
jo
jne
(bad)
pop
pop
lods
out
or
daa
and
or
xor
clc
push
test
stos
add
retf
ja
push
or
xchg
push
dec
cld
popa
add
mov
scas
inc
sbb
(bad)
call
add
imul
mov
daa
or
add
pop
sbb
xchg
pop
lds
aas
into
push
dec
nop
jle
jmp
lock
sete
rol
aad
repz
cld
psllq
add
dec
xchg
or
push
addr16
pop
lods
test
mov
xchg
inc
xchg
sub
jge
xor
cmp
or
clc
xor
cmp
jno
lock
popa
dec
inc
into
sbb
add
dec
fcmove
push
rcl
cmp
dec
and
rcr
loope
xchg
and
mov
inc
popa
daa
dec
dec
stc
mov
jmp
cmp
pop
enter
dec
jge
rcl
mov
aad
mov
iret
in
pusha
imul
push
xchg
push
pop
call
pop
adc
or
rcr
lods
mov
test
adc
fisttp
push
fbld
inc
mov
shr
and
mov
push
sub
inc
popa
and
inc
cld
push
pop
inc
cli
adc
pop
and
adc
mov
dec
mov
lahf
inc
adc
cld
in
push
add
dec
sub
cmps
inc
ror
movs
xor
in
or
pop
dec
or
push
add
data16
scas
out
mov
fwait
pop
push
jle
outs
outs
outs
mov
nop
test
add
inc
mov
outs
pop
pop
mov
dec
ins
imul
add
jo
jbe
add
mov
shr
push
gs
ins
pop
mov
and
addr16
imul
add
cwde
sbb
addr16
gs
ins
outs
ja
ja
(bad)
iret
inc
ins
jne
or
inc
jne
push
adc
pusha
inc
inc
jno
popa
mov
cmps
xchg
mov
sbb
jns
add
push
imul
and
ins
inc
dec
data16
jmp
fbld
pusha
xor
cld
in
and
jo
arpl
add
lds
inc
inc
outs
fs
inc
je
inc
popa
arpl
daa
dec
in
ins
hlt
adc
and
mov
jg
mov
or
das
mov
imul
ins
sub
mov
outs
je
sbb
mov
pusha
pop
dec
outs
popa
inc
xchg
pop
sub
fst
imul
jg
add
dec
xlat
adc
xor
inc
fcomp
repz
adc
fwait
or
pop
adc
xchg
or
outs
inc
imul
ja
sbb
outs
sub
ja
popa
sahf
push
add
jb
pop
xchg
mov
or
lahf
or
add
inc
cmps
inc
xor
or
cmp
(bad)
sbb
movs
xchg
adc
clc
mov
std
daa
lock
cmps
cmp
push
mov
scas
sbb
out
pop
js
into
add
push
or
push
sar
mov
xlat
mov
pop
jns
mov
test
dec
inc
push
push
inc
push
add
cmp
adc
idiv
sar
push
pop
dec
inc
dec
dec
arpl
inc
inc
push
add
sub
adc
inc
push
dec
dec
push
mov
and
inc
push
dec
addr16
dec
dec
nop
aas
ins
lods
and
out
inc
inc
xor
xor
push
and
inc
and
inc
xor
inc
inc
inc
dec
not
dec
pop
mov
mov
mov
(bad)
test
sbb
dec
inc
das
loope
xor
inc
inc
inc
das
mov
ja
sub
push
push
push
or
xor
push
inc
scas
or
int3
adc
push
mov
push
sub
dec
shufps
push
mov
mov
stos
or
test
test
adc
pop
push
push
push
clc
mov
jl
add
push
and
shl
jo
add
dec
or
jns
pop
stos
and
add
add
in
or
inc
or
shr
sbb
sbb
sti
fisubr
add
and
mov
sbb
dec
sbb
or
test
push
jne
mov
mov
adc
push
faddp
push
lds
aas
pop
shl
mov
mov
movs
mov
and
pushf
inc
sbb
push
adc
mov
movs
ja
(bad)
rcr
sub
push
cmp
inc
and
pop
ja
movs
xchg
push
int3
fdivr
sbb
(bad)
les
jecxz
xor
mov
aas
clc
mov
das
(bad)
dec
enter
sar
sbb
cmp
cmp
or
in
fbstp
retf
in
shl
int3
push
mov
mov
sbb
xchg
cmc
fsubr
sbb
in
inc
scas
xchg
add
sub
adc
ror
xor
adc
das
inc
jo
and
fxch
jae
push
repnz
fstp
cmp
bound
arpl
shl
mov
xchg
xchg
add
retf
inc
adc
dec
test
std
sbb
fimul
mov
or
pop
pop
push
mov
test
inc
cmp
jmp
adc
jnp
xor
push
aam
add
pop
inc
cs
cmove
mov
inc
sbb
xlat
inc
inc
rcr
jae
mov
push
sbb
movs
cdq
or
inc
or
data16
sbb
or
lock
jmp
fcomp
mov
fucomi
push
push
push
or
or
fild
pop
or
jmp
cmp
dec
loopne
popa
add
(bad)
mov
loopne
inc
inc
mov
pop
gs
(bad)
dec
or
sbb
hlt
test
sbb
repz
mov
jle
aad
push
outs
outs
inc
add
adc
sub
jo
mov
mov
ret
nop
dec
in
ja
push
inc
enter
and
pop
or
xor
mov
scas
test
mov
lea
xor
cld
and
sub
(bad)
xchg
ins
xchg
sti
sbb
sub
(bad)
ss
jne
add
popa
cmps
add
inc
fnstsw
or
ret
neg
div
test
fcmovne
call
push
ds
add
or
ret
pusha
lods
sub
aad
sbb
dec
outs
inc
sbb
sti
xchg
sub
pop
and
sbb
ret
lock
or
icebp
dec
add
sbb
inc
sbb
sub
lock
mov
cmps
add
pop
rol
(bad)
enter
jns
add
ffree
(bad)
js
xchg
or
adc
pop
rcl
and
fidivr
int
pop
adc
mov
inc
(bad)
jne
mov
add
smsw
sbb
cmp
add
inc
ror
inc
shl
push
pop
or
in
dec
push
cmp
mov
or
pop
fcom
mov
sbb
das
xor
sbb
pop
sbb
xor
pop
or
mov
scas
inc
scas
and
and
and
inc
cs
arpl
mov
jmp
jno
push
outs
fimul
jno
nop
scas
and
repnz
loopne
movlps
loope
push
out
mov
fisttp
pop
jg
aas
add
cmp
nop
mov
dec
add
(bad)
nop
mov
jp
mov
lock
test
xor
fistp
lea
or
sub
sub
das
pop
aam
loopne
ss
ret
or
sub
push
pop
or
jmp
(bad)
pop
jns
add
lock
push
add
add
and
shl
gs
adc
cmp
mov
nop
aas
adc
or
or
or
jmp
xor
cmp
inc
xlat
add
xor
lock
jle
test
cmp
add
xchg
out
pop
sbb
adc
iret
test
adc
or
mov
pop
add
les
sub
lahf
xchg
ret
mov
ins
bound
and
or
adc
jl
add
adc
mov
inc
popa
repz
test
fistp
(bad)
out
add
jge
imul
and
inc
pop
(bad)
and
mov
dec
push
cmp
sub
or
sub
or
or
mov
push
xor
or
push
int
add
add
in
ins
mov
add
inc
fadd
sbb
and
or
adc
movs
jo
add
mov
ja
loopne
inc
cmp
mov
xor
jno
iret
shl
mov
loopne
mov
push
adc
mov
add
and
mov
dec
and
inc
fwait
push
add
push
and
pop
punpcklbw
xor
inc
or
enter
or
add
push
or
pusha
push
push
in
pop
test
ja
sbb
inc
push
ins
jnp
cmp
mov
pop
jbe
cs
jns
lea
pushf
(bad)
adc
mov
mov
mov
push
mov
cmps
add
push
or
shl
arpl
sbb
dec
ret
sbb
or
pop
mov
cmp
add
mov
mov
sbb
xchg
push
iret
adc
sar
popa
sub
inc
sbb
inc
push
popf
xchg
adc
ja
lods
lods
add
mov
inc
xor
xor
xlat
(bad)
pop
pop
out
daa
test
push
push
add
jo
push
movs
sar
push
cdq
sbb
popf
pop
sub
dec
add
icebp
mov
dec
test
or
add
int3
pop
sbb
adc
sbb
nop
or
pop
push
pop
repnz
or
adc
adc
ins
pop
pop
pop
pop
scas
lock
push
jno
jo
scas
add
cmp
cmps
and
das
inc
inc
xchg
test
inc
iret
add
sub
pop
cld
(bad)
cmp
mov
and
or
shl
jo
popf
sub
mov
rol
aad
js
mov
cmp
(bad)
bound
pop
sub
push
aas
mov
or
xlat
sub
iret
sbb
and
pop
cmp
dec
or
mov
test
scas
adc
jg
mov
not
and
mov
je
or
and
xchg
mov
adc
repnz
in
outs
inc
add
add
cmp
test
in
xchg
xchg
add
or
add
mov
pusha
add
or
inc
push
pop
xor
dec
push
sub
xor
xor
pop
aas
je
fisubr
adc
clc
imul
sbb
add
cmp
jb
jnp
sub
dec
mov
add
push
adc
(bad)
inc
or
or
dec
in
inc
jno
push
je
xor
sti
pop
ret
aas
in
stc
xor
mov
add
mul
scas
pop
dec
pop
ret
das
add
(bad)
and
js
enter
xlat
pop
int3
pop
or
test
ds
mov
inc
ja
jno
pop
scas
push
and
mov
in
add
scas
(bad)
pop
loope
push
sbb
push
add
or
shr
daa
adc
sbb
loopne
sub
das
lea
mov
sbb
add
les
and
das
in
or
iret
pop
push
and
int3
mov
jo
mov
jge
fldenv
call
fcom
push
xchg
fcomp
dec
xchg
in
rol
cmp
push
push
adc
enter
inc
dec
xchg
dec
(bad)
clc
leave
jp
test
(bad)
(bad)
pushf
mov
es
pop
fwait
add
inc
ret
imul
jge
pop
add
mov
bound
mov
fs
call
(bad)
jmp
sbb
lock
pop
fsubr
out
pop
arpl
movs
push
ins
fs
xchg
cmp
push
(bad)
adc
inc
jnp
cmp
inc
cmps
adc
and
test
jbe
pusha
add
add
loopne
dec
div
ror
dec
pop
jno
call
inc
xor
inc
jmp
mov
inc
add
cmps
xchg
jne
and
cmp
pop
cmp
adc
add
push
mov
movs
xor
in
stos
and
or
and
stos
repnz
sbb
and
push
and
repz
sub
mov
mov
adc
mov
rcr
lods
push
pop
fsub
cmp
shl
push
push
jge
stos
addr16
pop
push
push
fs
push
jl
test
mov
adc
inc
inc
je
push
sub
dec
mov
es
pop
jnp
xor
push
push
daa
push
stos
jb
xchg
cmp
lock
inc
das
inc
push
sbb
cmp
xor
and
sbb
test
add
sbb
add
dec
out
test
xor
dec
or
mov
add
and
cmp
rcl
or
xor
sub
lock
outs
mov
add
lea
add
mov
xor
pop
add
add
mov
mov
cld
push
imul
outs
jne
mov
adc
cmps
sub
push
jmp
cdq
cmp
aas
(bad)
jle
adc
mov
mov
mov
add
mov
push
fadd
dec
jne
add
cmp
cmps
or
fidivr
adc
adc
adc
repnz
add
mov
push
sar
popf
and
adc
inc
inc
inc
pop
xchg
pop
jge
aam
(bad)
in
(bad)
lods
jo
or
and
stos
stos
inc
and
ins
mov
enter
mov
mov
dec
jns
jmp
pop
sub
dec
fisub
(bad)
mov
fcmovb
jecxz
mov
jo
movs
fimul
clc
sti
loope
mov
test
add
adc
adc
cld
push
retf
sbb
ficom
ds
push
pop
repnz
push
jno
ins
adc
mov
stos
test
or
cmp
cmps
cmp
test
ds
sar
cmp
push
inc
movzx
lea
(bad)
jg
sub
push
cmp
cs
ss
xor
jmp
addr16
data16
add
repnz
push
es
sbb
fisttp
clc
push
adc
cli
rol
cmp
push
add
dec
adc
lock
clc
adc
stos
fild
push
mov
jmp
adc
lea
das
or
popa
fs
sub
repz
mov
(bad)
pop
fld
cs
mov
mov
call
pop
mov
push
popa
test
dec
aaa
add
xor
mov
push
leave
jnp
mov
or
dec
mov
es
pusha
mov
mov
pop
shl
sub
dec
loop
cmps
mov
popa
add
jge
loop
or
dec
add
and
les
mov
adc
push
push
das
and
fwait
mov
ss
push
xor
sub
jp
aaa
sub
cmp
jge
inc
push
sti
(bad)
pop
sbb
xchg
mov
mov
clc
add
pop
pop
inc
mov
icebp
inc
shr
adc
jno
add
mov
(bad)
push
mov
data16
test
mov
rcl
imul
jge
mov
(bad)
shl
add
test
movs
bound
add
movs
arpl
mov
push
push
dec
pusha
ja
inc
mov
mov
inc
xchg
loopne
xchg
test
icebp
add
fcom
jnp
inc
and
inc
ror
mov
or
adc
pop
(bad)
cli
and
inc
mov
jb
cld
push
push
test
clc
and
add
cmc
jae
test
je
iret
lock
xchg
adc
push
add
adc
add
fwait
xchg
add
enter
mov
outs
jg
shr
fmul
mov
sbb
add
cmp
fcmovnbe
outs
cmp
sub
adc
imul
test
jle
cmp
sahf
ret
aaa
enter
fst
outs
or
leave
push
data16
xchg
mov
push
or
and
xor
pop
sub
fsubr
lods
inc
imul
aam
stc
push
dec
jmp
popf
cmp
add
or
jne
push
sbb
push
pop
and
xchg
push
dec
test
rcr
pop
fcomp
or
mul
dec
jl
push
sbb
scas
dec
jbe
adc
or
in
jmp
adc
lods
sub
neg
arpl
std
or
sub
aam
cmps
adc
mov
inc
xchg
adc
ds
ret
in
sub
ins
or
jnp
jl
push
cmp
mov
mov
loopne
mov
sbb
in
loopne
mov
into
push
add
sar
lods
mov
xor
sbb
aam
nop
mov
mov
ins
std
jnp
add
sub
mov
sbb
sbb
pop
aam
rol
das
movs
pop
add
enter
in
lea
adc
ins
sbb
int3
jbe
push
inc
xor
mov
inc
mov
ins
mov
mov
mov
ret
cs
xor
div
out
mov
cmp
cmp
add
push
push
mov
arpl
mov
mov
xor
add
mov
or
add
and
outs
pop
adc
sahf
cmp
add
xchg
repnz
sub
mov
aas
push
pop
push
sbb
or
jmp
in
inc
inc
push
loopne
push
mov
movs
mov
or
add
pushf
or
push
add
mov
push
test
mov
adc
aas
sbb
push
outs
lds
sub
mov
movs
sbb
or
push
pop
sub
add
dec
in
lods
mov
outs
or
test
(bad)
mov
jle
lock
jmp
ja
push
stos
dec
push
mov
test
das
fucomp
sbb
int
or
ins
or
push
xor
cli
js
or
inc
jb
mov
sbb
or
add
ror
and
and
push
lock
enter
mov
add
imul
jmp
add
rcl
imul
adc
js
or
and
cwde
cmp
add
pop
hlt
mov
jmp
ret
mov
adc
bound
add
movs
or
jb
fimul
(bad)
fbstp
pop
and
cmp
icebp
and
jecxz
pop
and
clc
and
sub
cmp
mov
popa
push
ficom
push
ror
outs
mov
inc
push
stos
jl
popa
xor
int
push
jmp
adc
movs
xchg
or
call
shl
lods
cmps
xchg
and
sub
call
or
rcr
in
inc
inc
lods
daa
xlat
add
dec
lods
jns
jg
inc
ss
test
cmps
std
add
add
fdiv
push
hlt
xchg
push
adc
call
in
cmps
lods
and
fadd
test
imul
adc
pop
arpl
adc
push
sbb
dec
mov
fndisi(8087
cmp
and
loopne
dec
add
shr
cmc
push
adc
lock
cmps
sub
cmp
(bad)
pop
dec
outs
xor
mov
mov
dec
sti
push
add
push
lods
or
lods
data16
sbb
push
mov
mov
lods
cmps
mov
sub
push
jo
mov
and
and
mov
test
push
fdivr
sbb
jecxz
cli
mov
mov
xchg
jae
icebp
xchg
sbb
fcom
add
adc
mov
daa
int3
sub
add
iret
aas
fsubr
rcr
push
mov
data16
adc
pop
ret
mov
push
aas
sbb
cmp
aas
or
sbb
out
adc
sub
aas
pop
xor
add
test
add
pushf
cmp
push
jl
add
shr
add
inc
add
das
add
jo
add
popa
mov
addr16
sub
cmp
or
mov
inc
or
jne
cmp
and
cld
lock
ret
arpl
in
(bad)
and
loop
outs
add
stc
fcmovbe
add
(bad)
adc
imul
add
inc
fcomp
cmp
add
mov
jmp
enter
inc
js
imul
xor
mov
fadd
mov
cmc
add
inc
push
retf
ja
push
cmp
add
and
sbb
add
add
sbb
das
add
sbb
pop
adc
mov
or
inc
sbb
xor
jo
adc
daa
out
pop
adc
or
aam
add
iret
pop
(bad)
mov
cmp
rcr
cmp
inc
push
out
pop
add
cs
xchg
and
mov
in
fcmovu
mov
mov
add
push
mov
push
test
adc
xorps
and
int3
add
add
add
daa
and
add
adc
dec
repnz
push
or
ret
and
mov
adc
cmp
rol
mov
enter
cld
retf
sub
dec
hlt
mov
push
mov
lock
dec
inc
jl
shl
mov
out
mov
and
xchg
arpl
push
ja
popw
add
outs
bound
inc
shl
or
xor
fisub
jae
push
lods
gs
cmp
dec
jne
rdpmc
lods
call
test
nop
or
xchg
pop
addr16
mov
fisubr
enter
jl
xchg
jl
jmp
dec
inc
add
pop
or
mov
xchg
mov
xor
mov
dec
daa
sub
pop
and
or
cmp
and
xor
hlt
mov
in
dec
sbb
pop
ins
out
or
adc
jno
retf
push
xor
sbb
cmp
mov
aaa
push
outs
cmovg
xor
aad
dec
rcr
xor
dec
hlt
sub
out
xchg
push
sar
fldcw
ins
imul
bound
test
mov
ret
inc
add
push
or
push
mov
cmc
nop
and
or
add
dec
inc
lahf
mov
or
js
iret
push
sbb
sub
outs
pop
add
test
jl
adc
add
pop
or
icebp
loopne
jbe
jne
fsubrp
adc
xchg
add
fild
das
mov
cmp
xlat
jge
sub
rcl
or
ja
cmp
aaa
call
stos
push
sbb
xchg
mov
nop
(bad)
or
test
test
inc
test
and
pusha
outs
int3
ret
aad
or
inc
dec
nop
xor
shl
inc
(bad)
ins
stos
or
mov
lods
mov
xlat
pop
jne
mov
add
test
outs
push
mov
imul
mov
mov
test
dec
push
adc
enter
push
add
adc
enter
and
add
cmp
jecxz
ret
test
add
(bad)
pop
jl
pop
rcl
and
push
adc
sbb
cmp
std
fs
inc
lock
cmp
pop
inc
or
add
add
add
mov
adc
and
add
xlat
sub
sbb
add
add
vaddsubps
mov
fisttp
mov
mov
xchg
or
ret
fisub
fisubr
(bad)
int3
xor
(bad)
popa
xor
repz
rcl
ret
in
(bad)
enter
movs
cmp
sub
clc
(bad)
xor
stos
loopne
jecxz
push
lea
or
adc
and
sbb
and
and
pop
add
mov
sub
mov
add
nop
mov
es
xor
inc
xor
push
xchg
push
loope
add
cmp
pop
xor
and
mov
jo
js
lea
sbb
call
pop
inc
stos
hlt
dec
inc
sar
or
sbb
(bad)
xor
pop
jmp
pop
xchg
aas
mov
adc
sbb
(bad)
xor
or
jnp
xchg
in
xor
jge
rol
jo
push
arpl
pop
cs
dec
daa
fimul
inc
or
xchg
lock
je
sbb
dec
cmp
adc
nop
push
cmp
mov
dec
sti
pop
ret
xchg
fs
push
adc
or
nop
aas
in
inc
add
add
pop
dec
adc
and
les
inc
cs
das
and
push
dec
sub
add
nop
ret
(bad)
sbb
lods
jno
mov
or
xchg
outs
mov
sub
push
add
jne
sub
dec
xor
ror
jge
adc
sbb
jmp
aas
loopne
loopne
ret
inc
adc
inc
dec
movs
sbb
adc
lidtd
in
rcl
outs
js
mov
mov
or
xchg
hlt
jecxz
inc
lods
xchg
movs
js
sbb
mov
or
push
loopne
mov
or
jmp
push
xor
gs
(bad)
lea
sbb
rcl
fisttp
push
nop
cmp
jns
push
and
xchg
or
adc
jae
pop
add
movs
adc
jg
adc
outs
and
mov
push
je
call
mov
sub
push
or
(bad)
(bad)
repz
movs
test
sub
or
or
dec
pop
add
(bad)
enter
cld
retf
sbb
rol
adc
or
add
pop
outs
add
dec
not
add
js
jno
fs
xor
mov
rol
syscall
rol
(bad)
adc
sbb
mov
inc
sub
sbb
dec
fadd
and
popa
or
mov
sub
adc
fild
(bad)
sub
or
je
jo
mov
sub
(bad)
push
sub
or
sub
inc
sub
adc
push
mov
imul
mov
dec
push
mov
in
inc
or
(bad)
cmps
inc
and
adc
inc
cmp
ror
sub
sub
or
push
push
fiadd
pusha
xor
jp
sub
jnp
out
test
pop
fmul
pop
add
push
adc
pop
xor
call
mov
push
cmp
adc
mov
push
je
enter
rol
xchg
xchg
les
mov
jle
dec
pop
dec
add
popf
push
push
push
fild
and
push
das
pop
test
pop
into
inc
repnz
pop
sub
dec
mov
leave
and
add
mov
xor
ror
ins
pusha
je
ret
ror
jns
(bad)
xchg
push
mov
pop
inc
sub
pop
sub
sub
ds
sti
cs
xor
sti
sub
das
addr16
in
or
lods
jns
clc
inc
jecxz
adc
ins
fsub
in
dec
sub
out
nop
adc
das
or
ret
xor
aaa
fmul
sbb
add
push
arpl
push
push
popa
test
adc
mov
cmp
inc
jle
and
rcl
loope
jle
loope
push
popa
mov
inc
adc
repz
mov
mov
add
aas
sbb
sbb
aas
dec
les
or
data16
xchg
sbb
jmp
jge
xor
add
sub
sub
add
xchg
mov
xchg
lods
mov
push
int3
mov
cmc
mov
je
mov
jg
dec
or
movs
or
or
ss
rcr
js
add
in
popa
fadd
mov
(bad)
mov
jge
and
inc
je
sub
xchg
pop
cdq
cmc
pop
cmp
and
imul
or
dec
and
pop
fs
popf
sub
vhaddps
movs
outs
jnp
push
mov
sbb
mov
add
mov
bound
xchg
enter
xor
test
(bad)
push
adc
bound
sub
jnp
sub
or
call
or
dec
js
cmp
retf
sub
lods
dec
repnz
shl
xlat
push
add
outs
dec
clc
xchg
xor
or
jno
loopne
sub
jg
fisub
inc
call
inc
push
(bad)
xchg
out
cmp
add
jl
and
or
ficom
dec
adc
test
test
test
in
pop
fild
repnz
pop
mov
or
inc
in
paddb
ficom
clc
lds
dec
and
pop
(bad)
iret
cmp
imul
pop
fcomp
out
and
xor
ins
dec
lods
fld
loopne
std
add
or
or
lea
mov
add
nop
dec
xor
adc
cmp
iret
(bad)
fisttp
or
clc
push
or
ret
pushf
adc
dec
push
dec
cmps
push
push
pop
repz
mov
push
shl
and
dec
pop
or
jo
retf
jmp
sbb
data16
add
ror
sub
retf
adc
push
cs
(bad)
inc
pop
sti
xor
pop
adc
xor
shr
jmp
pop
push
enter
mov
fisubr
jno
sbb
add
pop
inc
fsub
scas
imul
cmp
je
or
add
in
adc
rcr
or
and
ret
nop
fistp
dec
gs
dec
push
int3
aam
jb
int3
push
jmp
push
out
adc
test
adc
mov
mov
dec
popa
or
mov
shl
adc
and
inc
or
jo
loope
mov
or
rol
mov
jle
test
(bad)
ret
add
ret
ret
cld
jo
adc
cmp
xchg
stos
retf
out
mov
mov
call
xchg
pop
pop
loop
mov
pop
ja
jns
or
imul
shl
enter
pop
test
cmp
inc
inc
shl
ret
ret
pop
adc
add
push
loop
add
aaa
mov
xchg
push
push
and
lock
jbe
xor
or
pop
ret
inc
cmp
in
adc
dec
cld
lahf
les
jge
jbe
shl
or
lods
push
ret
and
nop
xchg
mov
dec
clc
xchg
jo
or
paddsb
movs
ins
push
jp
inc
sbb
or
jo
and
pop
push
mov
dec
xchg
or
adc
mov
mov
add
sbb
sub
xchg
stos
jnp
in
movs
popa
mov
sbb
mov
sbb
mov
rcl
nop
xor
add
aas
mov
lahf
in
mov
inc
ret
push
test
xor
mov
shl
sbb
inc
cmps
rol
div
mov
add
mov
dec
and
inc
pop
add
add
fmul
les
dec
loopne
add
jl
lock
cs
retf
out
pop
sub
fcom
test
pusha
add
push
inc
dec
loopne
pop
add
test
clc
ds
xchg
pop
pusha
and
inc
stos
cs
fwait
pause
mov
je
repz
mov
push
daa
and
ret
dec
mov
sahf
mov
loope
test
fst
jne
or
xor
ins
cmps
test
cmp
imul
jmp
loope
loop
loopne
dec
sub
stos
dec
xor
add
in
jb
add
jp
cmp
inc
pop
sbb
pop
lock
es
je
inc
ret
push
or
loopne
dec
add
cmp
sti
push
pop
inc
mov
adc
xlat
mov
ja
pop
add
loopne
out
xor
movs
inc
jne
pushf
inc
cli
pop
scas
add
test
mov
add
mov
push
and
mov
dec
test
punpckhdq
xor
cmp
movs
add
fdivr
ret
adc
je
pop
and
mov
push
pop
dec
enter
pop
rcl
add
and
jnp
cmp
out
int3
and
fdiv
and
pushf
push
dec
jo
push
push
js
movs
xor
pop
pop
jmp
in
or
das
out
pop
dec
cs
push
push
sbb
test
pop
pusha
scas
inc
inc
loopne
aad
ins
inc
jne
movs
and
xchg
(bad)
pop
and
dec
cmp
retf
pop
add
shl
push
pop
add
sbb
push
sbb
mov
imul
sti
xchg
inc
mov
xlat
or
or
sub
jge
inc
adc
push
mov
xor
inc
fimul
inc
or
jb
add
mov
js
jmp
inc
push
clc
lds
jb
cmp
or
aam
inc
mov
jl
xchg
aas
mov
stc
and
push
(bad)
jp
mov
adc
or
dec
jl
popa
(bad)
and
test
xor
pop
jns
(bad)
and
push
jnp
test
cld
rcl
not
add
push
adc
sub
adc
in
pop
data16
adc
mov
inc
or
loopne
dec
pop
sub
mov
and
add
add
inc
adc
outs
xchg
ret
or
or
loope
arpl
adc
repz
mov
push
adc
and
(bad)
sub
push
cmp
sub
sbb
sbb
inc
add
sub
sbb
js
adc
inc
pop
push
xor
ins
call
mov
retf
cdq
call
xchg
in
outs
sub
sub
sbb
fdiv
adc
hlt
rol
sub
es
mov
or
or
sbb
test
xchg
fcom
jnp
(bad)
inc
mov
sub
fbld
or
xor
add
sub
inc
pusha
inc
and
adc
es
shr
jo
or
xor
ret
sbb
inc
aad
lahf
dec
mov
out
push
fmul
add
or
push
and
lods
push
jo
shl
(bad)
fistp
int3
sub
pop
sti
cmps
push
or
sub
pop
clc
loopne
retf
data16
ins
(bad)
ds
hlt
cmp
pusha
stos
test
add
fs
jbe
mov
mov
fs
cmp
and
sar
push
ins
addr16
push
push
jnp
pop
movs
js
dec
mov
clc
adc
xor
daa
sub
push
or
push
adc
shr
sbb
mov
rol
jne
inc
icebp
jge
fadd
fdiv
lock
mov
mov
jle
bswap
mov
test
dec
dec
cmp
jne
adc
sbb
push
xchg
out
sbb
pop
or
test
stos
jno
jg
fmul
push
push
pop
add
adc
test
call
pop
imul
sbb
das
imul
jg
ss
add
fstp
mov
leave
ret
out
mov
or
pusha
xchg
dec
or
push
int3
mov
or
dec
add
sub
jge
jno
jmp
push
mov
push
fadd
stos
pusha
pop
adc
mov
mov
jnp
aas
dec
call
test
pop
mov
push
loop
pop
pop
adc
mov
inc
cmp
ret
fld
mov
cmc
sbb
xchg
fnstenv
sbb
sbb
inc
shl
loopne
rcl
and
push
arpl
push
adc
enter
call
in
and
push
inc
xchg
leave
sub
sub
icebp
jno
sahf
inc
into
mov
xchg
sub
pop
test
inc
add
outs
adc
dec
retf
sbb
pop
js
xor
pop
xor
add
arpl
sub
and
xchg
sbb
jg
push
mov
inc
add
sbb
bound
cdq
or
shl
es
and
cmp
add
push
add
pop
mov
push
aas
inc
mov
or
int3
out
push
movs
add
push
or
hlt
jmp
dec
(bad)
ror
mov
jo
cs
cmp
out
inc
mov
ror
add
dec
in
inc
pop
imul
mov
sahf
leave
mov
popa
dec
repnz
sub
dec
or
or
xor
adc
add
inc
or
cmp
push
paddusb
test
push
sbb
cmp
inc
out
hlt
sub
js
nop
imul
rcl
(bad)
jle
inc
inc
sub
scas
mov
loopne
xor
out
adc
lock
pop
js
popa
sbb
jno
loope
ror
inc
and
test
lea
aaa
fmul
out
in
push
inc
enter
mov
loop
pop
leave
xor
and
mov
adc
adc
dec
test
test
or
sub
loopne
mov
mov
or
stos
mov
cmp
jns
dec
add
xor
std
mov
mov
adc
and
dec
add
(bad)
push
test
xchg
and
leave
sbb
les
sub
or
movs
out
imul
(bad)
push
jmp
leave
jmp
out
xchg
xchg
push
xor
ja
rep
pop
rcr
jmp
add
inc
pop
cmp
mov
or
sbb
inc
movs
sub
sbb
and
xchg
and
jo
shr
xchg
jmp
aaa
cs
clc
xor
bound
or
pop
mov
pop
dec
and
fcmove
add
push
out
ror
pop
ins
pop
mov
xchg
jno
shr
call
sbb
pop
pop
mov
loop
sbb
leave
mov
jo
nop
add
pop
sbb
pop
retf
adc
(bad)
int3
sbb
jl
push
mov
fistp
test
stos
jecxz
xor
jae
out
adc
xor
fs
aam
add
pusha
adc
add
mov
rcr
(bad)
jbe
popa
push
and
sbb
mov
xor
test
(bad)
push
sub
dec
sub
add
and
cmp
jl
sbb
mov
cmp
out
(bad)
jnp
push
jecxz
ds
rcr
jl
jmp
arpl
je
xor
and
adc
pop
movs
xor
bound
inc
jecxz
jmp
cwde
retf
add
mov
xor
ins
and
popa
mov
or
call
in
in
test
std
test
pop
and
sub
push
leave
fprem
fimul
bound
inc
and
dec
dec
add
push
dec
mov
rol
sub
aaa
test
xchg
or
(bad)
dec
mov
sbb
xor
pop
mov
cmp
ins
jmp
aam
adc
add
and
push
push
pop
xchg
nop
mov
add
cmc
and
mov
lds
test
sbb
jle
lea
mov
mov
test
lods
xor
dec
inc
and
call
and
add
xor
loopne
retf
jo
sahf
lock
jno
inc
cdq
cs
js
pushw
shl
xor
mov
sbb
cmps
xchg
sbb
inc
cli
mov
pop
sub
add
rcr
mov
adc
push
gs
sbb
ret
ja
shr
and
(bad)
mov
adc
inc
iret
or
outs
or
dec
icebp
loopne
dec
test
push
adc
pop
sbb
stos
dec
mov
dec
or
jbe
push
test
in
sub
ret
mov
and
dec
push
or
js
shl
lods
pop
movs
test
fs
jg
push
nop
loope
(bad)
addr16
and
push
mov
nop
jmp
adc
daa
dec
sahf
outs
mov
jo
add
add
push
jmp
or
je
or
je
jmp
fistp
cmp
jmp
mov
jmp
lods
sub
jb
in
inc
push
jmp
mov
jmp
cmp
xchg
mov
jmp
mov
or
shl
xchg
test
(bad)
push
push
lods
rol
cmp
adc
push
mov
adc
icebp
daa
mov
and
mov
pop
jg
add
clc
or
aas
jg
in
stos
inc
imul
add
mov
dec
lea
mov
pop
push
cmp
xor
leave
imul
mov
jmp
and
or
add
sbb
pop
dec
ret
test
gs
pop
mov
and
xchg
data16
sbb
dec
mov
sub
cmp
sbb
ins
sbb
or
fdiv
xchg
pop
and
sbb
cmp
add
jbe
adc
push
ja
adc
sbb
clc
outs
push
sub
lods
mov
aas
es
popf
cmps
jne
outs
cmps
inc
add
sub
jo
ficomp
adc
es
mov
shld
ja
test
xchg
dec
ins
loopne
add
mov
repnz
push
or
inc
scas
in
push
hlt
sub
popa
call
loope
mov
daa
mov
or
or
xor
dec
mov
mov
inc
inc
sbb
cmps
or
iret
jmp
in
push
or
inc
or
in
mov
cs
mov
xor
ja
sub
and
mov
(bad)
(bad)
add
mov
add
add
(bad)
fstp
xor
push
pushf
pop
cld
pop
push
adc
test
bnd
push
push
mov
mov
ret
clc
imul
cmp
jl
mov
mov
inc
or
adc
and
inc
jno
(bad)
xor
add
mov
shrd
js
add
fucomi
adc
ror
lahf
ins
mov
out
sbb
or
les
pushf
(bad)
push
jle
inc
jo
ret
sbb
inc
cmp
mov
test
mov
ja
ret
add
inc
addr16
sub
adc
jno
or
aaa
inc
add
or
jle
inc
mov
das
jecxz
sbb
pop
shl
test
xchg
dec
hlt
nop
push
or
cmps
or
adc
test
pusha
mov
mov
scas
aaa
inc
bound
and
mov
inc
gs
loopne
jno
aaa
mov
jo
movs
or
nop
test
push
je
dec
pop
rol
add
and
popf
ror
frstor
pop
xchg
mov
adc
and
inc
fbld
inc
push
es
aad
loopne
ret
add
sbb
ror
sbb
cmp
dec
mov
mov
lds
sub
outs
or
or
add
hlt
out
or
out
or
jo
cmp
sub
mul
sub
sahf
sar
inc
or
mov
jne
push
enter
push
xor
or
push
test
cld
push
data16
and
(bad)
mov
or
mov
xor
mov
pop
outs
mov
dec
pop
and
(bad)
loop
movs
sbb
push
push
mov
add
mov
neg
inc
inc
adc
(bad)
and
cmp
or
mov
add
inc
jl
inc
in
or
aad
jl
repz
sub
push
push
xor
pop
mov
xchg
pop
popf
pop
add
push
in
or
cmp
or
mov
or
lds
add
dec
and
mov
test
aaa
sub
nop
mov
mov
imul
adc
push
sub
lahf
sub
cmp
jbe
(bad)
mov
test
dec
loopne
inc
push
mov
cmp
mov
or
test
popa
and
xor
inc
jbe
ret
cmp
adc
hlt
jmp
in
out
aam
out
adc
jmp
pop
retf
in
mov
test
int3
pop
inc
mov
mov
push
push
and
adc
push
dec
inc
into
in
mov
mov
sbb
movs
pop
das
mov
sub
sar
test
cmp
popa
add
je
das
fucomp
push
push
sar
adc
adc
jecxz
mov
xor
or
sub
adc
dec
pusha
jno
push
in
mov
add
loopne
ss
adc
shl
dec
and
jno
xchg
push
fcom
xchg
pop
xor
and
sar
xchg
adc
mov
inc
add
mov
and
call
mov
cli
cmp
mov
or
push
mov
cmp
pop
and
cmps
test
adc
inc
push
xor
frstor
mov
clc
(bad)
pop
jmp
mov
mov
push
and
or
cld
out
mov
daa
in
lds
pop
dec
sub
jle
or
ins
sahf
mov
movs
ss
mov
(bad)
or
push
push
mov
clc
adc
pop
inc
adc
push
jmp
sbb
fmul
ror
mov
arpl
xor
mov
movs
lds
xchg
fstp
xchg
mov
sub
cmp
and
fadd
ins
loop
mov
add
cmp
push
pop
and
sub
shl
cmp
xchg
inc
xor
jnp
out
or
mov
cld
inc
mov
inc
mov
cmp
jb
mov
(bad)
stc
jno
mov
and
cmp
push
jmp
cmp
movups
push
jo
mov
xchg
loop
dec
fdiv
dec
adc
test
jns
ja
add
into
adc
je
nop
lea
push
jae
pop
or
aam
mov
arpl
lods
push
inc
adc
add
pop
push
sbb
mov
sbb
sub
loope
icebp
and
sar
mov
push
and
and
dec
aam
or
test
sub
dec
add
loopne
scas
(bad)
clc
mov
lea
test
push
push
push
cwde
and
inc
add
shl
out
or
add
or
ret
sub
(bad)
xlat
pusha
and
mov
lahf
inc
or
xchg
mov
js
shl
mov
jne
pop
jnp
inc
jae
jnp
and
ror
jge
and
ss
dec
mov
sbb
nop
inc
mov
iret
inc
outs
inc
push
or
mov
lea
test
xor
mov
shr
push
jp
mov
movs
(bad)
movs
inc
jecxz
cmc
fisttp
sub
je
jmp
mov
mov
jg
xor
mov
(bad)
daa
add
xchg
mov
pop
jg
jge
mov
adc
mov
ficom
sbb
push
fs
cmp
jo
mov
xchg
inc
add
leave
cmp
mov
je
dec
je
adc
jmp
out
outs
sbb
icebp
clc
jmp
aad
push
imul
add
jmp
pop
cmps
lea
add
or
add
ret
dec
test
out
pop
jmp
int
add
mov
fs
adc
cmp
sub
dec
stos
lods
sub
inc
xor
in
or
test
sbb
push
rcr
mov
xor
add
mov
sub
aam
adc
pop
cdq
adc
mov
pushf
ja
jb
pop
les
into
push
lds
mov
and
pop
dec
pop
ins
aad
add
js
add
and
add
push
mov
pop
pop
ret
hlt
scas
pop
or
cmp
clc
lock
je
push
push
and
xor
push
mov
adc
inc
cmp
inc
add
add
out
call
sub
inc
mov
scas
movs
inc
sub
inc
and
sti
fld
sub
push
adc
inc
jnp
jbe
or
in
imul
cmp
jae
inc
arpl
(bad)
ret
cmp
out
xor
and
xor
sub
xchg
pop
inc
or
adc
pop
add
and
dec
or
sbb
mov
ret
sbb
mov
in
push
in
daa
push
movups
and
pop
and
pusha
into
aaa
and
lea
xchg
cwde
loope
jbe
cmp
mov
aad
repnz
jae
mov
inc
push
mov
push
and
test
push
push
mov
in
jmp
inc
push
xor
xor
ss
jns
mov
mov
pop
sub
add
dec
inc
sbb
add
push
cmps
add
add
dec
xchg
test
mov
(bad)
mov
or
sub
or
jns
dec
adc
add
pop
in
dec
dec
ds
add
add
push
mov
add
sbb
cmp
inc
jle
iret
mov
jnp
xor
rcl
xor
push
pop
push
or
movs
(bad)
dec
jmp
rol
je
sub
inc
lods
adc
ja
push
ret
add
lods
push
ror
movs
data16
xor
lds
add
adc
ja
inc
mov
sti
mov
push
xchg
sbb
popf
push
mov
daa
push
hlt
jmp
retf
and
mov
dec
push
mov
push
out
nop
xchg
push
dec
add
add
inc
add
mov
push
xchg
inc
xchg
and
test
xlat
mov
xchg
lods
lahf
cmp
cmp
inc
adc
cs
push
pop
jnp
adc
add
sbb
hlt
test
retf
fnsave
jp
leave
fs
jmp
movs
add
clc
stos
add
sub
pop
xchg
hlt
and
lahf
and
add
push
push
movzx
add
adc
test
out
pop
sbb
push
push
inc
ds
neg
inc
rcl
jnp
mov
stos
jle
mov
outs
(bad)
push
cmp
add
inc
test
sbb
dec
push
imul
jle
repnz
adc
shl
leave
gs
xchg
hlt
jmp
out
cld
push
add
and
inc
pop
add
dec
daa
cmp
push
pop
pop
sub
cdq
iret
arpl
rcl
pop
cld
(bad)
and
add
pop
and
rol
add
jae
push
rcl
cmp
push
call
fcom
outs
int3
sbb
xchg
push
loop
jne
or
xchg
dec
add
inc
pop
inc
pop
cmp
rol
mov
jns
jbe
daa
loopne
loopne
mov
pop
or
xor
sub
cmp
(bad)
pop
cmp
pop
or
sbb
xor
inc
jae
and
and
xor
les
in
jo
mov
jmp
(bad)
and
xchg
rol
push
lock
mov
pop
out
push
jle
test
mov
add
add
jmp
push
jg
(bad)
xor
push
call
aam
push
or
aaa
pop
icebp
aaa
js
cmp
jmp
mov
fild
inc
mov
movs
add
mov
pop
or
sub
sbb
push
pop
pop
bound
aas
fldcw
and
das
or
or
popa
je
or
scas
inc
adc
movups
adc
rcl
pop
push
or
push
sbb
push
cmp
push
mov
inc
sub
mov
andps
or
not
jge
jge
pop
inc
shl
mov
ds
add
xchg
ja
cmp
or
adc
push
push
sbb
sub
mov
push
lahf
fcmovb
push
add
div
xchg
sbb
sbb
jmp
inc
mov
iret
sbb
dec
adc
sub
inc
cmps
rol
push
movs
inc
adc
cdq
les
add
rol
mov
test
retf
cmp
outs
mov
xlat
lock
inc
sti
or
inc
cmp
ret
je
imul
out
lds
outs
or
xor
arpl
mov
rol
dec
add
push
sbb
ret
cmp
mov
fcomp
lea
cmp
cmp
minps
sbb
pusha
push
jne
scas
sub
xchg
push
inc
outs
popa
lods
push
imul
in
test
sbb
jbe
sub
mov
mov
add
inc
or
mov
inc
sbb
jecxz
and
imul
inc
bound
imul
(bad)
out
add
sub
xor
xor
loopne
and
xor
pop
mov
mul
push
pop
je
jnp
ins
ins
jmp
mov
add
push
cmp
mov
call
push
xor
aas
xchg
xor
mul
mov
add
xchg
mov
lock
adc
les
mov
xor
mov
(bad)
sbb
sbb
cmp
push
inc
out
(bad)
inc
ret
or
mov
ss
(bad)
push
add
scas
push
rcl
jbe
inc
(bad)
mov
inc
add
and
mov
adc
sbb
cmp
xor
or
dec
and
test
push
inc
inc
push
adc
or
add
loope
daa
inc
xchg
movzx
movs
pop
xor
fs
movs
mov
jo
popa
inc
ins
outs
inc
sub
pop
fisttp
mov
adc
mov
adc
inc
inc
fwait
push
push
add
adc
xchg
pushf
xchg
push
push
pusha
pop
out
ss
inc
adc
loopne
stc
inc
pop
or
add
inc
xchg
sub
inc
add
imul
pop
or
jge
popa
adc
arpl
fisub
pusha
add
pop
or
or
popa
pop
ret
cmp
(bad)
sbb
add
and
sbb
popa
or
push
or
test
cmc
sbb
or
test
dec
popa
add
repnz
or
mov
mov
xchg
loopne
inc
xchg
inc
xchg
test
sbb
sub
push
ins
mov
push
add
xchg
pop
pop
rcl
fcmovnu
and
lock
inc
cmps
add
pop
clc
or
cld
push
or
push
dec
arpl
loopne
cs
loopne
xor
adc
push
fild
pushf
pop
dec
jmp
cmc
add
xor
fsub
popf
jb
gs
dec
mov
jo
cmp
addr16
stos
adc
push
and
add
mov
adc
(bad)
das
fdivr
push
call
push
in
push
add
jl
call
add
xchg
mov
add
pop
or
sub
inc
or
adc
es
xchg
popf
or
pushf
adc
mov
adc
sbb
inc
cwde
inc
xor
pushf
add
dec
sub
sub
cmp
dec
or
rol
invlpg
sti
call
inc
movs
mov
adc
add
imul
and
xchg
dec
ins
fs
ins
fadd
or
push
pusha
sub
mov
adc
xor
jg
mov
movs
mov
or
or
mov
data16
add
xor
shr
xor
shl
xor
inc
jae
pusha
or
js
xor
loope
shr
xor
jb
jmp
fadd
add
fs
jb
pop
ss
loop
call
pusha
adc
out
push
pop
in
int
lods
inc
or
icebp
cmp
xor
add
adc
lock
shl
jmp
add
pop
dec
cli
xchg
jae
rol
jae
dec
jl
cmp
ficom
cmc
inc
inc
loop
dec
mov
les
dec
outs
(bad)
xchg
pushf
pop
push
add
retf
cmp
inc
sub
ss
jp
inc
and
dec
cmp
jl
pop
jnp
adc
rcl
mov
push
pusha
gs
cwde
cmp
or
sbb
clc
and
cmp
inc
rol
adc
nop
inc
adc
xor
add
les
daa
inc
vandnps
shl
sar
loopne
or
inc
addr16
sbb
sbb
mov
add
dec
fdivr
jnp
mov
or
cmp
inc
push
stc
bound
inc
add
mov
cmp
add
mov
sub
push
mov
xchg
add
dec
or
inc
nop
mov
inc
add
or
add
mov
inc
add
fadd
xchg
stos
data16
and
stc
(bad)
out
inc
sar
rol
add
mov
sbb
add
or
dec
movs
adc
cmps
test
out
and
add
dec
inc
mov
or
int3
add
dec
out
or
rol
sub
add
dec
add
shl
push
xor
push
rol
out
jmp
or
push
out
pusha
mov
rol
sbb
mov
loope
adc
push
scas
add
dec
inc
inc
inc
dec
push
add
bound
dec
dec
dec
push
ins
add
stc
push
add
jmp
mov
sar
inc
clc
xchg
rol
js
adc
xor
ja
and
jo
in
mov
sahf
add
test
jo
lds
mov
and
fdiv
pop
test
or
pop
sbb
mov
or
jg
push
mov
jbe
add
ret
pop
adc
cmps
push
mov
or
jb
mov
xor
je
sbb
sbb
xor
or
(bad)
push
sbb
push
or
add
dec
scas
mov
inc
push
sbb
arpl
aaa
ret
jbe
call
or
xchg
addr16
ss
push
mov
push
adc
je
loopne
jne
addr16
int
or
ds
cmp
xor
sbb
loopne
push
and
xchg
push
in
xchg
not
add
pop
jmp
add
cmp
(bad)
sbb
and
cmp
cli
dec
rcl
adc
pusha
(bad)
cwde
arpl
test
inc
xor
cmp
mov
xchg
fidivr
sbb
rcl
or
push
dec
xor
push
sub
mov
push
push
and
repz
pop
add
pop
add
sbb
pop
(bad)
sub
push
inc
lock
ds
adc
mov
ins
outs
outs
je
xor
fmul
mov
cmp
or
cmp
mov
sub
pop
or
push
mov
pop
add
sbb
clc
loope
movs
arpl
inc
dec
or
push
sbb
nop
pop
or
jo
mul
or
pop
inc
sub
or
mov
ins
or
dec
inc
sub
fs
popa
js
dec
inc
xchg
test
pop
mov
or
jnp
sahf
push
sbb
xlat
and
or
add
add
sbb
dec
cdq
retf
lods
push
xchg
inc
aaa
rcl
loopne
xchg
inc
cmovo
(bad)
imul
lock
push
and
pushf
mov
cmp
in
mov
sar
and
sub
mov
js
jmp
adc
jb
imul
pop
xor
jecxz
adc
mov
lds
mov
dec
jns
push
and
adc
lock
bound
or
cmp
or
sub
and
mov
cmps
loop
ins
and
mov
adc
iret
or
mov
jae
iret
or
mov
dec
mov
pop
fcom
jmp
pop
popa
inc
(bad)
and
add
call
xchg
adc
out
sar
outs
js
pop
push
imul
or
mov
dec
lods
and
dec
fisttp
scas
mov
adc
add
pusha
leave
push
jb
adc
mov
and
jb
dec
add
dec
add
inc
sets
lods
adc
cwde
add
push
mov
(bad)
lock
sar
inc
jb
test
and
inc
sub
mov
sbb
sbb
or
sbb
pop
push
lods
lahf
aam
inc
lods
mov
lods
inc
or
or
and
inc
push
loopne
push
and
cmp
es
dec
mov
jne
inc
sub
sub
mov
pop
inc
mov
sub
shl
test
and
or
or
and
xchg
push
movs
das
jae
pop
and
xor
dec
push
ins
add
xor
xor
xor
fs
fdivr
xchg
ss
stos
push
nop
nop
or
add
pop
les
cmp
stos
dec
add
cmp
in
fs
(bad)
lods
in
or
adc
add
add
xor
inc
cs
nop
and
adc
dec
jnp
push
pop
lock
push
and
sahf
mov
push
fwait
add
pop
xchg
adc
inc
pop
das
adc
xchg
pushf
dec
and
aaa
lock
xor
outs
(bad)
outs
pop
and
xchg
in
jo
aam
popa
jmp
loope
push
dec
daa
pop
sbb
cwde
scas
cmp
xchg
add
adc
xor
and
xchg
dec
adc
and
pop
loope
xor
adc
jno
sbb
sbb
add
add
sub
and
xchg
test
sub
and
xchg
add
inc
push
inc
sub
in
mov
scas
xchg
stos
sub
test
das
mov
xor
sbb
cdq
add
xor
sub
add
add
cmp
cmp
cmp
sbb
inc
mov
inc
cld
addr16
dec
outs
outs
imul
inc
mov
call
jmp
inc
std
das
mov
sbb
add
out
pop
cld
nop
pusha
or
dec
xor
and
pop
loopne
ficom
cmps
sbb
mov
pop
add
push
fs
cmps
jb
mov
or
arpl
dec
inc
mov
bound
adc
pusha
stos
popa
jns
in
xchg
add
loopne
or
inc
sub
or
imul
repnz
out
sbb
mov
push
or
into
adc
xor
xlat
fadd
or
jae
xchg
nop
dec
and
xor
or
cmp
jo
cmps
loopne
sbb
adc
lods
adc
data16
pop
popa
in
xchg
adc
jle
push
or
pop
data16
jge
xchg
sbb
or
and
xchg
and
pop
fsub
aaa
andps
in
ja
pavgb
or
adc
or
jb
or
mov
or
aad
cmps
cmp
jno
imul
add
cwde
cmp
lahf
inc
pusha
xor
cmp
jb
pushf
imul
inc
or
pop
ds
and
outs
adc
mov
push
test
ss
lods
cdq
add
inc
les
adc
sbb
outs
adc
adc
and
or
imul
ss
jae
fist
inc
mov
or
add
dec
popa
mov
ja
imul
inc
or
pop
add
loopne
add
out
add
sub
pusha
ret
pop
cwde
sti
jmp
jns
cmp
inc
add
das
retf
sub
push
cmp
das
cld
xor
lahf
mov
jb
lds
mov
mov
movs
pop
movs
inc
(bad)
data16
sub
mov
jo
(bad)
xchg
pop
in
ins
stos
inc
pusha
stos
inc
jno
out
sbb
lods
mov
adc
xchg
rcr
fisubr
ds
inc
(bad)
ret
lds
mov
inc
enter
rcl
js
jo
cmps
ins
mov
(bad)
add
inc
outs
inc
faddp
or
push
cwde
mov
push
lods
inc
aas
cmp
sahf
ret
jge
sub
pop
push
fs
dec
adc
aaa
add
xor
adc
pop
add
add
xor
adc
sbb
and
je
rol
jle
sar
cli
mov
mov
mov
mov
ins
jmp
pop
xchg
or
cmc
pop
mov
sbb
mov
mov
mov
test
inc
push
push
jmp
jg
jmp
in
int
int3
jmp
lock
call
or
push
ror
push
js
add
rcr
call
and
ret
out
ds
(bad)
push
lods
cmp
ds
sub
inc
fcmovbe
add
ds
sbb
pop
es
and
cld
push
(bad)
in
out
ret
add
ds
adc
outs
lahf
out
not
fadd
sbb
fcomp
fst
fidiv
push
push
stc
pop
jo
push
pop
cli
pop
leave
repnz
jge
ja
push
mov
or
sub
dec
add
lahf
hlt
pop
call
stos
push
not
fmul
cwde
push
pop
daa
icebp
(bad)
ins
mov
icebp
bound
push
ins
scas
xchg
jl
in
pop
or
je
jge
ins
jns
ret
xor
jge
ja
mov
jg
enter
xchg
inc
jb
sub
shr
add
sub
(bad)
push
jle
pop
jmp
or
(bad)
mov
out
int3
neg
ja
push
fs
cmp
nop
in
out
sub
ficomp
(bad)
jnp
js
jnp
mov
out
sub
jno
cmp
add
dec
enter
or
or
fiadd
add
add
push
jne
mov
sbb
sub
aam
(bad)
iret
inc
push
mov
js
daa
aam
inc
(bad)
adc
inc
and
cmc
jl
inc
bndldx
int3
pop
push
pop
nop
nop
sysret
ret
push
or
sbb
jecxz
pop
mov
mov
outs
es
sub
cmp
jns
outs
dec
add
push
(bad)
pushf
fsubr
xor
add
andps
push
dec
call
pop
and
mov
test
packuswb
je
push
std
mov
or
les
jne
or
je
and
out
push
inc
sbb
add
push
add
push
(bad)
xor
sub
(bad)
das
inc
or
das
sbb
lock
sar
mov
adc
or
or
sbb
inc
cmp
push
or
test
pop
adc
push
inc
lds
test
add
leave
cdq
pop
jge
lods
sbb
in
div
hlt
mov
scas
sbb
out
xchg
test
inc
and
sbb
movs
icebp
fstp
leave
dec
mov
fsub
mov
or
in
xchg
out
sahf
fnstcw
(bad)
fstp
ss
or
mov
ficom
test
sbb
cli
push
and
mov
xchg
cmp
push
or
ja
mov
enter
pop
xor
ss
or
dec
jle
pop
test
jne
cmp
ja
mov
add
push
adc
pop
cld
or
cmp
sbb
mov
dec
addr16
rcl
push
mov
hlt
(bad)
sub
daa
popf
pop
nop
pop
push
(bad)
or
enter
loopne
sbb
xchg
(bad)
push
inc
add
inc
iret
or
daa
sub
outs
rol
retf
xor
add
adc
jl
mov
xor
pop
(bad)
jae
ins
sub
sub
dec
arpl
push
add
xor
in
mov
inc
jl
inc
in
jae
add
enter
sbb
loopne
fstp
pop
mov
push
cs
test
xor
sahf
retf
cmp
stos
add
pop
(bad)
adc
inc
mov
pop
idiv
push
pop
cmps
inc
push
inc
add
idiv
test
mov
pop
jg
inc
adc
rcr
adc
add
add
xchg
out
add
xchg
add
out
test
sbb
loopne
xor
loope
fwait
(bad)
pop
lock
leave
ror
aam
cmc
test
mov
add
inc
push
inc
xor
pop
sbb
test
add
lock
adc
xlat
lds
dec
pop
inc
jge
xchg
xor
sub
inc
inc
or
test
imul
mov
pop
mov
inc
test
ret
pop
or
pop
je
add
mov
inc
push
inc
stos
push
movs
dec
or
shl
icebp
push
sub
or
pop
mov
and
or
lods
retf
out
mov
lea
sbb
pop
scas
(bad)
xor
inc
ffreep
pop
popa
sub
iret
ss
xchg
adc
mov
xor
xchg
or
mov
ins
inc
or
push
pop
aas
lods
cld
sbb
fistp
test
jp
fild
ja
pop
cwde
in
xor
add
adc
das
pop
inc
add
je
lock
sbb
or
jne
xchg
cs
fucomi
inc
sub
add
and
inc
and
nop
jo
mov
add
in
daa
sub
add
add
mov
pop
ror
or
xor
push
hlt
add
add
fcmovnbe
dec
add
retf
add
and
inc
add
cwde
or
dec
retf
dec
push
or
rcl
xor
lods
push
lods
lea
adc
ret
hlt
gs
(bad)
shl
mov
or
dec
clc
jae
push
cmp
mov
inc
xchg
jp
mov
push
or
leave
dec
or
pushf
add
fs
sbb
rcr
or
pop
loop
mov
fdivr
sahf
mov
jp
adc
sbb
push
jl
jb
jg
and
inc
shl
mov
imul
adc
(bad)
leave
cmps
mov
fmul
xchg
rol
jge
pop
inc
(bad)
or
adc
pop
jns
push
inc
sub
jns
add
and
mov
jmp
pop
hlt
neg
jmp
arpl
sbb
sahf
or
add
push
adc
push
test
inc
cs
push
add
push
mov
int
imul
test
mov
ins
mov
aas
cld
retf
inc
repnz
je
ret
xchg
outs
cmps
and
pushf
shl
aam
stos
xor
inc
aas
loop
adc
movs
add
or
mov
sbb
rol
in
adc
jne
mov
pop
xor
sbb
mov
sub
jae
or
inc
shl
sahf
mov
push
add
inc
scas
or
cmp
mov
and
shl
xor
inc
clc
ja
cmps
retf
ss
adc
adc
adc
inc
mov
or
imul
lods
and
and
sbb
fwait
loop
je
lods
add
lods
cld
sub
push
push
push
mov
shr
sti
and
xchg
cs
je
jmp
adc
sub
jmp
nop
pop
mov
and
pop
and
adc
add
mov
jge
dec
xor
call
dec
stos
sub
ss
in
sbb
or
jl
(bad)
fadd
mov
dec
retf
push
and
jmp
or
push
popa
mov
push
sub
sahf
out
mov
add
daa
xchg
shl
add
mov
and
sub
cmp
mov
mov
adc
adc
inc
mov
add
sahf
push
push
and
inc
sti
mov
je
jno
fadd
rcl
push
movs
adc
icebp
adc
push
and
mov
pop
push
mov
add
cs
out
add
add
or
inc
cld
add
inc
inc
add
push
test
test
add
and
mov
dec
pop
sub
or
inc
sub
push
dec
inc
cmp
test
sub
adc
stos
mov
daa
mov
movs
mov
push
jbe
je
mov
aaa
or
enter
jmp
test
test
mov
add
and
push
out
stos
mov
outs
push
push
dec
pop
das
adc
ret
rol
enter
fild
retf
rcr
mov
add
mov
lea
nop
sub
and
pop
or
cmp
and
xor
jbe
adc
xor
mov
xor
sysenter
mov
and
sahf
dec
sbb
cmp
mov
imul
leave
jge
aaa
xor
ret
add
cmp
sti
sbb
cmp
les
test
shl
call
pop
movs
or
int3
(bad)
sub
pop
jb
jp
sbb
lea
add
rcl
and
push
mov
pop
add
pushf
push
cmp
lods
mov
xor
sbb
sbb
enter
xor
shr
push
sub
pop
sub
inc
cmp
cmps
cmp
lea
push
inc
sbb
stos
lock
push
(bad)
and
push
adc
push
mov
clc
push
push
sub
(bad)
mov
inc
loop
lock
pop
add
out
adc
es
mov
jmp
sub
jmp
pop
sar
jo
add
ss
mov
xor
or
or
push
dec
pop
lea
add
icebp
mov
arpl
mov
xor
sbb
and
push
popa
or
sbb
xchg
xor
aas
or
dec
rcl
adc
and
sub
fucomip
or
or
addr16
xchg
jecxz
push
adc
scas
push
leave
sub
arpl
pop
loope
or
pop
xor
jmp
sbb
xor
and
dec
xchg
adc
pop
ret
push
sbb
daa
je
mov
das
lea
shl
jo
sub
bound
adc
mov
cmp
inc
mov
inc
movs
std
in
lea
and
cmp
pop
rcr
xor
cmpps
ins
loopne
into
mov
shr
cs
pop
shl
(bad)
and
cmp
sub
add
je
dec
or
mov
adc
and
es
pop
xor
(bad)
leave
mov
loopne
push
in
xchg
loope
ja
add
push
lods
add
and
in
cmp
cmp
adc
cmp
mov
outs
je
adc
mov
jnp
outs
jg
xor
jae
es
push
ja
pop
dec
mov
add
add
xor
fild
mov
jo
jmp
mov
movs
add
mov
clc
cmp
adc
and
pop
mov
pop
pusha
push
outs
or
inc
ins
in
inc
and
dec
shl
sub
and
fcomp
out
fs
push
sub
adc
add
add
xchg
loopne
imul
sar
fdiv
xlat
jnp
sti
gs
pop
sbb
pop
add
xlat
sbb
inc
lds
push
sbb
pop
lea
inc
add
xor
inc
mov
sbb
push
jmp
or
aaa
xor
adc
adc
out
inc
jl
add
popa
inc
mov
out
in
aad
mov
sbb
out
sbb
or
inc
shl
jle
cwde
(bad)
dec
adc
cmp
mov
inc
pop
mov
mov
pushf
sbb
add
xchg
arpl
aaa
mov
mov
test
nop
(bad)
push
jns
jge
add
sub
adc
in
mov
xchg
jle
stos
call
stos
inc
dec
in
push
xchg
fcomp
mov
push
push
wbinvd
sbb
xchg
lds
sub
inc
stos
or
in
add
sub
cmps
add
or
push
xchg
cmp
cmp
xchg
xchg
pop
add
ficomp
jmp
or
pop
ss
cwde
xor
mov
stos
or
add
or
pop
dec
je
adc
push
or
mov
xchg
int3
add
cdq
mov
mov
xchg
(bad)
cmps
xlat
inc
cwde
and
push
sbb
test
adc
cmp
jmp
or
hlt
add
xchg
mov
or
jnp
cmovo
sbb
ins
ret
inc
or
add
add
mov
and
fadd
xor
xor
push
ret
push
adc
aam
mov
mov
inc
inc
cmp
mov
hlt
inc
or
inc
sbb
pop
adc
sti
sub
add
fs
ret
add
jmp
into
sub
arpl
rcl
inc
jne
(bad)
push
pop
addr16
loopne
out
in
jne
movups
and
daa
ficomp
add
adc
sbb
xlat
(bad)
pop
fadd
out
aas
inc
add
pop
push
sub
test
inc
mov
ret
push
mov
pop
push
mov
daa
stos
add
cmps
int3
or
add
xchg
add
add
retf
and
cmps
add
cmps
fidiv
arpl
cmp
outs
and
add
scas
adc
mov
or
mov
sub
popf
adc
pushf
mov
add
sbb
add
mov
mov
mov
cmp
call
popf
ds
mov
sub
jo
push
ins
imul
sbb
inc
add
lock
sbb
dec
adc
pop
adc
push
jp
or
inc
dec
cmp
pop
das
dec
and
fidiv
rcl
fiadd
cmp
xor
inc
ret
aas
pop
push
in
mov
add
push
ret
icebp
jmp
pop
and
push
inc
pop
enter
mov
pop
mov
cmp
dec
das
hlt
mov
fbld
pop
push
cmp
cmp
out
adc
cmp
add
inc
inc
or
add
jmp
mov
and
test
mov
aaa
lea
loopne
adc
add
sbb
mov
shl
shl
in
push
in
daa
mov
or
jmp
push
(bad)
out
push
adc
and
adc
mov
cmp
and
add
pop
rcr
mov
or
iret
(bad)
in
adc
out
xor
xor
leave
inc
inc
ds
dec
sahf
mov
cmp
and
cmp
aam
je
inc
call
mov
add
xor
add
sar
je
fs
aas
stos
sbb
mov
lods
jl
sbb
scas
add
ds
dec
mov
fbld
es
hlt
lock
test
shl
neg
and
mov
mov
mov
sub
jae
jbe
add
inc
fld
in
inc
inc
add
or
add
ret
icebp
test
and
ret
ret
adc
and
xor
jg
clc
ins
adc
cmc
jbe
xlat
mov
adc
adc
xchg
pop
push
sub
push
aaa
sub
movs
push
scas
sbb
push
lea
cmp
add
nop
dec
lahf
xor
sub
inc
test
test
add
pop
adc
shl
sbb
add
inc
or
mov
sbb
clc
mov
pop
push
xor
inc
jmp
mov
pop
loope
ret
jnp
pop
mov
call
sbb
add
ror
push
push
ret
cli
or
pop
mov
ds
icebp
or
aas
mov
pop
std
xlat
add
mov
cdq
dec
add
mov
jmp
push
pop
sbb
sub
or
jae
jne
add
mov
sar
ins
pop
out
lds
jp
sbb
adc
movs
or
push
push
vmptrst
and
mov
xor
add
frstor
sbb
and
push
dec
mov
mov
jne
aas
lock
or
cld
rol
mov
jmp
loope
shr
leave
xor
out
ror
(bad)
or
dec
push
add
and
xlat
rol
scas
neg
inc
in
sahf
add
fcom
or
fcom
push
cld
nop
mov
add
mov
push
addr16
(bad)
fwait
iret
clc
inc
add
jp
add
push
mov
inc
test
sbb
jns
mov
je
clc
mov
icebp
scas
sub
inc
or
div
lds
dec
idiv
jle
jne
lods
jo
and
test
scas
xchg
sbb
or
int
fcomp
in
jmp
cmp
dec
mov
pusha
mov
add
movlps
out
push
add
push
push
push
loop
cmp
popa
pop
ret
mov
inc
push
ins
lds
mov
nop
push
gs
aad
(bad)
nop
ds
loope
xor
xchg
mov
sahf
and
lahf
pop
adc
push
jo
dec
add
cwde
sbb
je
adc
cld
pop
add
daa
push
inc
fimul
or
cmp
inc
xor
dec
out
(bad)
ficom
inc
adc
xchg
push
lock
cmp
adc
loop
pop
enter
pop
push
or
add
loopne
jo
hlt
dec
aaa
add
and
push
push
adc
enter
push
adc
ins
ins
and
push
in
cli
add
push
inc
es
inc
(bad)
inc
addps
adc
sbb
pop
daa
pop
mov
out
jp
nop
or
and
mov
mov
and
push
cmp
cmp
jno
inc
sub
inc
loope
sub
mov
or
outs
mov
(bad)
out
icebp
push
dec
pop
sub
mov
cs
pop
jb
cmp
cmp
sub
sahf
(bad)
sbb
test
pop
adc
int3
cmps
outs
or
adc
add
into
dec
gs
mov
outs
outs
jb
dec
ss
mov
jmp
inc
lahf
or
cmp
lods
xchg
pushf
scas
add
push
xlat
retf
jo
mov
je
das
cwde
cwde
xor
jmp
pop
addr16
leave
cs
stos
je
test
mov
or
jb
lahf
pusha
aam
push
mov
add
lock
aam
dec
and
je
xor
call
mov
cwde
pop
ja
cs
and
cmc
sbb
ror
in
push
pop
mov
iret
aaa
inc
xchg
push
cmp
fnstsw
cmp
add
mov
popa
cmp
imul
ret
sbb
and
jl
cdq
lods
xor
and
jle
cmp
std
mov
pop
aaa
js
and
in
mov
ja
xchg
xor
sub
dec
xchg
sbb
adc
jle
mov
mov
inc
adc
or
aas
mov
cmp
jg
aas
int3
or
xchg
les
ret
add
pushf
push
inc
pop
push
cmp
xor
mov
cmp
or
sbb
or
or
sti
cwde
inc
dec
adc
add
push
mov
pop
cli
dec
pop
add
call
fcom
adc
pop
add
xchg
mov
lock
stos
test
hlt
(bad)
xor
test
sbb
and
repz
jmp
adc
shr
mov
imul
cmp
ja
and
popf
fnsave
pop
sbb
je
or
(bad)
dec
int3
mov
fs
or
dec
and
cmp
je
mov
pop
xchg
jecxz
mov
add
jl
aaa
out
je
mov
jp
fsub
or
mov
add
pop
ins
xchg
sahf
or
or
je
xchg
pop
test
cmps
adc
cmps
cmp
add
clc
mov
push
lods
adc
sub
jno
nop
out
jb
add
and
xchg
daa
cmp
push
retf
jbe
test
add
dec
lods
inc
adc
or
push
pop
fs
mov
shl
mov
iret
(bad)
rcl
jmp
iret
or
test
push
or
mov
and
test
pop
ja
xor
or
scas
or
ret
sub
add
or
and
dec
or
icebp
xchg
mov
jbe
jmp
(bad)
jle
dec
je
daa
cmp
dec
cli
scas
test
cmp
jne
sbb
loopne
or
or
sub
sub
add
push
mov
sti
test
jmp
(bad)
pop
xchg
xchg
jmp
not
repz
fidiv
out
mov
inc
and
mov
cld
dec
and
sbb
and
or
or
shr
inc
iret
mov
scas
dec
sub
jae
test
jbe
add
push
cmp
add
push
jge
sbb
lea
test
popa
pushf
jmp
int3
call
pand
xchg
aas
test
cmp
or
sub
mov
pop
in
pop
add
mov
add
sub
or
pop
imul
cmp
fcom
out
cdq
inc
shl
hlt
call
hlt
sub
adc
mov
xor
adc
movs
inc
std
in
int
call
inc
dec
rcr
ds
nop
add
das
or
arpl
add
xor
jle
xor
or
cmp
or
and
das
xor
pop
xor
sbb
or
push
xor
cmp
dec
or
push
inc
lock
mov
das
out
add
or
cdq
and
jge
and
xchg
or
cmp
xor
push
rcl
sbb
and
imul
adc
mov
jbe
add
sbb
popf
sbb
pushf
aad
push
pusha
and
inc
or
ret
push
add
mov
and
cmp
fldenv
adc
or
sbb
out
movs
push
mov
int3
xchg
outs
xchg
icebp
adc
mov
mov
inc
enter
imul
push
xchg
mov
lock
pop
les
fst
jecxz
or
sub
mov
aam
push
cwde
retf
rcl
inc
aam
push
cmp
in
cmp
adc
adc
mov
inc
inc
scas
jle
dec
sbb
sub
add
cld
cmp
jno
jmp
enter
sub
lock
(bad)
push
inc
ja
xchg
clc
xchg
dec
and
push
and
jno
cwde
fnstcw
mov
jge
xor
aad
das
and
mov
adc
loop
pop
push
push
mov
jnp
sub
hlt
aaa
enter
inc
sub
push
push
push
push
mov
js
(bad)
push
xchg
cmp
jge
mov
pop
add
dec
fild
fadd
push
mov
mov
les
xor
jg
test
xchg
sub
inc
sub
das
bound
cwde
(bad)
jg
pop
mov
jno
test
sbb
pop
add
cmp
cmp
aam
popa
dec
cmp
jb
(bad)
push
push
mov
movs
or
sbb
sub
mov
dec
ret
add
adc
mov
add
gs
jp
rcl
scas
sub
sub
addr16
mov
test
pop
mov
inc
sbb
loope
fsub
add
loope
mov
je
mov
gs
and
stos
and
xor
loope
outs
inc
cdq
cmp
add
add
push
mov
(bad)
mov
jmp
dec
mov
or
(bad)
dec
cmps
xchg
in
div
rcl
cmps
and
bound
test
xchg
lahf
xor
cmps
xor
cs
aaa
cmp
std
dec
dec
sbb
xor
aaa
add
mov
jl
out
mov
or
and
xchg
cmp
and
in
add
ds
xchg
xchg
retf
inc
ins
cmp
push
or
or
mov
iret
mov
add
mov
(bad)
push
(bad)
mov
int
sub
xor
dec
mov
hlt
sbb
popa
mov
loopne
js
jne
sbb
cmp
pop
fld
imul
mov
fimul
sub
adc
inc
add
adc
lock
push
pop
por
fimul
pusha
adc
dec
pop
sub
leave
or
xor
or
add
push
pop
lea
in
jbe
add
ins
hlt
jmp
xor
pop
test
les
push
push
gs
cmp
sbb
out
mov
fwait
jne
arpl
dec
pop
jne
int
rcl
pusha
out
stos
pushf
movs
cmp
(bad)
and
pop
cmp
adc
or
test
push
mov
mov
clc
xchg
mov
jmp
in
inc
xchg
ret
test
jnp
lds
push
es
mov
mov
mov
out
push
cmp
int
xchg
mov
xchg
jmp
inc
jl
jle
jne
sub
jecxz
inc
mov
out
and
mov
push
lods
jo
ins
popa
add
aam
sbb
pusha
sbb
je
adc
add
and
xor
jbe
rol
adc
and
es
cwde
dec
repnz
mov
sub
es
fistp
test
js
shl
nop
gs
aas
and
mov
popf
or
cmps
or
adc
pop
mov
pop
jmp
clc
je
cmp
fist
sbb
add
xor
pusha
jmp
sub
jnp
(bad)
push
imul
test
cs
sub
gs
test
inc
add
add
mov
jne
pop
jbe
sahf
nop
lock
jbe
cmp
jl
std
test
test
push
mov
xchg
ret
push
adc
adc
es
out
add
xchg
sar
inc
aaa
mov
jo
loopne
rcr
sbb
(bad)
aad
scas
mov
push
mov
push
cmp
sbb
popa
or
pop
ja
adc
pop
add
ret
lods
mov
mov
jo
out
(bad)
dec
out
daa
mov
mov
rcr
jne
inc
mov
xor
xchg
jge
clc
popa
add
dec
in
jo
mov
sub
mov
pusha
loopne
maxps
cmps
bound
push
(bad)
sbb
push
dec
dec
inc
outs
or
mov
sub
jl
xchg
xor
imul
fadd
loope
sub
dec
adc
lods
xor
in
movs
inc
ja
add
mov
outs
push
push
add
cmp
xor
xor
loopne
das
mov
dec
dec
cmp
cmp
add
inc
pop
inc
mov
jae
fiadd
cmp
test
add
shl
add
add
sub
add
sub
push
push
or
fsub
mov
sub
xor
pop
push
add
jp
push
imul
pop
sti
add
and
clc
sub
sub
pop
add
push
cmp
push
arpl
cmp
push
lea
pop
mov
call
cmp
sti
(bad)
clc
push
add
inc
mov
pop
das
sub
push
push
xlat
add
aas
sbb
xchg
add
cmp
jge
aaa
sti
sub
dec
jmp
popa
xor
add
sub
xchg
or
push
mov
popa
add
ficom
sub
mov
shr
and
pop
pop
mov
push
lock
int3
dec
or
cdq
or
outs
loopne
jg
ret
stos
add
adc
push
jg
push
cmp
inc
movs
inc
ins
cld
mov
fisttp
push
cs
pop
or
dec
pop
test
aas
mov
mov
xor
in
or
arpl
sub
call
mov
lea
pusha
ins
mov
inc
js
rcl
adc
aaa
clc
data16
add
and
sbb
mov
cmp
push
push
push
pop
jg
std
sti
sbb
pop
psrld
mov
sbb
add
mov
sub
cmp
mov
jmp
add
push
and
fimul
mov
add
mov
and
xchg
mov
adc
add
add
mov
xor
loopne
aaa
sub
add
pop
in
add
xchg
add
inc
or
cmps
sbb
lock
mov
pop
pop
add
cmp
cs
mov
jmp
rcl
sbb
jmp
(bad)
aas
add
out
in
add
push
or
ins
or
ret
scas
jge
jmp
xchg
mov
loop
dec
js
pop
jnp
inc
or
pop
xchg
ret
or
sbb
cmp
xchg
jmp
mov
or
das
inc
cmp
fcmovne
sub
sbb
aaa
enter
dec
int
mov
jle
mov
mov
adc
pop
or
and
fild
scas
(bad)
dec
and
or
or
loopne
push
add
mov
push
fcmovu
scas
add
sbb
js
cld
mov
pusha
or
pop
jg
popf
sub
xor
push
add
push
dec
std
jmp
ret
pop
pop
jnp
dec
dec
inc
dec
push
frstor
les
lea
es
adc
sub
xchg
cmp
test
adc
jne
dec
in
and
mov
adc
pop
lea
popf
adc
call
inc
adc
or
sbb
call
mov
ret
push
push
inc
movs
sti
mov
loopne
std
and
stos
repnz
sbb
movs
pop
inc
idiv
pop
les
dec
dec
sub
mov
fdivr
paddb
sbb
mov
fild
and
loop
pop
shl
sbb
test
cmp
jne
xchg
cmp
cmp
inc
fsub
adc
adc
adc
push
(bad)
stc
scas
mov
jo
inc
cmp
je
mov
and
jne
cmp
jne
jne
xchg
inc
sub
jne
(bad)
imul
ja
inc
cld
sub
pop
js
xchg
and
xor
inc
push
or
adc
loop
xchg
push
dec
into
sbb
add
rol
mov
xchg
xchg
and
jnp
shr
push
mov
out
cs
pusha
movs
adc
cmp
or
fs
outs
sub
pop
(bad)
push
sub
inc
clc
aad
sbb
jge
add
xor
(bad)
jmp
or
shr
and
pusha
push
and
and
push
fcomp
iret
mov
mov
xor
ins
push
dec
jno
rol
push
jmp
and
aad
xchg
push
and
add
add
push
or
fwait
cmp
add
push
mov
add
je
(bad)
push
ret
sub
jge
js
mov
movs
or
jae
test
add
cmp
dec
add
lods
push
and
mov
mov
push
jnp
addr16
imul
xor
inc
jnp
ja
mov
sbb
mov
frstor
mov
and
adc
out
mov
fild
add
test
mov
sbb
sub
js
test
push
popa
sbb
mov
mov
jl
dec
mov
push
ret
inc
adc
and
movs
and
(bad)
adc
test
leave
inc
jbe
lds
adc
and
pop
mov
rcl
popa
or
mov
mov
adc
mov
mov
int
add
(bad)
add
xor
adc
cmp
ds
nop
mov
lock
sub
mov
xchg
sub
cli
(bad)
adc
aaa
cmp
test
add
add
test
shl
out
mov
(bad)
gs
pop
xor
div
sbb
loopne
adc
(bad)
and
mov
sub
test
add
mov
pop
jge
loop
(bad)
arpl
xchg
mov
cmp
cmp
je
outs
je
dec
cmp
je
xor
(bad)
and
cmp
inc
sub
rcl
(bad)
in
sahf
or
pop
adc
pop
je
arpl
jl
add
mov
adc
bound
or
ss
jmp
daa
pop
cmp
not
lods
sbb
mov
sbb
mov
in
imul
movs
sub
fisubr
jl
xlat
mov
or
pop
mov
or
(bad)
pop
pop
lea
adc
(bad)
lock
imul
pop
int3
nop
add
out
jl
hlt
outs
ins
adc
sub
or
sbb
and
lods
dec
xchg
movs
xor
aas
dec
add
fdiv
dec
test
(bad)
loope
ss
ds
inc
or
inc
outs
fisub
adc
sub
xor
mov
add
dec
xor
(bad)
call
jmp
sub
lods
dec
mov
in
mov
jne
arpl
cmp
mov
mov
jle
push
mov
mov
mov
or
(bad)
push
pushf
jge
sub
shl
xor
xor
push
pop
add
pop
or
push
pop
xchg
loopne
cdq
xor
lock
inc
imul
jmp
xor
sub
pop
push
cmp
push
push
or
test
rol
dec
and
push
sti
fisubr
mov
xor
mov
js
rcl
out
pop
sub
nop
retf
push
dec
push
and
mov
dec
mov
test
cmc
push
adc
popa
daa
push
fmul
pop
les
icebp
aas
and
ret
es
jmp
sbb
ins
mov
add
test
arpl
jne
push
outs
and
aaa
add
or
pop
xchg
push
adc
pop
icebp
push
nop
dec
cmp
push
inc
loope
mov
fstp
push
mov
call
add
je
data16
adc
pusha
(bad)
sar
imul
pop
adc
and
aas
jecxz
xchg
repnz
mov
test
test
or
or
and
dec
or
xor
addr16
int
sub
jmp
jbe
repnz
adc
pop
add
or
fadd
mov
mov
rol
pop
inc
js
imul
mov
push
in
call
inc
mov
(bad)
pop
nop
les
call
xchg
and
mov
bound
jp
fs
rcr
loopne
add
inc
(bad)
or
add
inc
or
sub
sub
ror
call
ret
lahf
scas
push
add
sbb
rcr
cmp
sub
aad
push
or
push
arpl
mov
sub
push
push
mov
ds
lods
shr
imul
movs
xchg
clc
or
xchg
movups
test
mov
mov
in
mov
rcl
mov
and
or
pop
test
push
xchg
stc
or
nop
jp
or
loope
and
mov
das
loopne
sar
(bad)
js
lock
(bad)
dec
push
cmp
sbb
mov
rcl
retf
test
adc
add
add
pusha
(bad)
mov
cmps
call
or
jne
adc
in
inc
adc
or
pop
test
pop
xchg
ja
or
sbb
jmp
xor
xor
mov
add
inc
jae
rol
push
mov
dec
inc
add
lock
popa
das
jo
dec
iret
sar
cmp
add
inc
or
cmp
mov
push
test
and
ret
mov
sbb
(bad)
jecxz
mov
push
mov
ret
mov
add
stc
add
imul
mov
sub
sbb
outs
push
nop
pop
dec
cmc
ja
pop
push
fbstp
push
xor
pop
addr16
adc
add
(bad)
lods
push
sub
loopne
add
jae
fld
sub
mov
mov
mov
dec
outs
daa
sub
add
jne
cmc
shr
xchg
xchg
imul
lahf
push
pop
into
or
xchg
cli
mov
js
pop
mov
bt
sbb
loope
pop
loope
dec
lock
mov
loopne
xchg
push
mov
pop
xor
push
ret
fwait
rol
(bad)
in
or
test
inc
loopne
sbb
jne
sahf
adc
cmp
sbb
fst
mov
or
fdiv
cmc
dec
push
in
mov
loope
cmp
jmp
ret
loopne
inc
xchg
dec
nop
mov
sub
and
cdq
(bad)
test
les
test
(bad)
or
xor
xor
fild
jmp
push
cli
pop
add
mov
sub
mov
xor
add
sub
jg
sbb
push
rcr
xchg
sub
dec
ret
mov
enter
dec
sbb
in
dec
jnp
add
mov
sub
jo
popa
enterw
and
sub
and
dec
sbb
test
mov
inc
sub
(bad)
mov
movs
iret
pop
or
xlat
mov
xlat
jne
push
adc
push
sahf
aam
sub
(bad)
inc
dec
jb
adc
add
int3
or
outs
int3
js
add
dec
or
cmps
jo
stos
sub
dec
add
addr16
or
aad
pop
mov
mov
inc
mov
sbb
push
scas
aam
cmpxchg
jl
data16
(bad)
inc
aad
or
add
outs
jb
aas
(bad)
jmp
jmp
ret
jl
push
xor
hlt
adc
setge
and
mov
inc
adc
push
xor
push
push
movs
cli
daa
je
or
fimul
mov
leave
and
(bad)
mov
adc
sbb
xchg
nop
outs
jl
in
fnstsw
jns
lahf
(bad)
jmp
jae
adc
clc
arpl
lock
inc
or
add
vpsubd
mov
xchg
aaa
lock
mov
fldcw
add
fld
mov
xchg
rcl
mov
or
in
and
push
int3
mov
repz
jne
clc
mul
xor
pop
dec
sar
icebp
push
mov
adc
add
mov
(bad)
rcr
xor
ficom
movs
imul
jmp
(bad)
ss
test
or
dec
push
or
xchg
rol
pop
cmp
and
sbb
inc
cwde
sub
ret
jmp
push
pop
jnp
inc
jmp
jne
sbb
push
or
sbb
pop
lods
jb
inc
adc
add
leave
movs
loop
sbb
add
sbb
aam
enter
and
adc
mov
mov
push
add
lods
push
sbb
push
inc
stos
jmp
xchg
cs
test
ins
aas
ror
shl
or
mov
adc
and
rol
sbb
dec
das
aam
out
test
push
dec
(bad)
fdiv
scas
mov
add
jae
ins
mov
xor
sub
movs
or
std
adc
pop
push
xchg
imul
outs
xor
and
adc
int
and
sbb
and
xchg
stc
and
jmp
jp
les
mov
fstp
add
lock
add
retf
adc
cmps
les
or
inc
add
mov
cmp
lods
pop
adc
sbb
sbb
cmp
xchg
div
mov
popa
sahf
xor
call
sbb
xor
(bad)
repnz
loop
fsubrp
push
push
cld
adc
mov
fdivrp
test
mov
stos
icebp
in
pusha
in
cmps
fild
lds
dec
outs
push
adc
cli
sbb
(bad)
or
mov
in
jb
adc
xchg
div
adc
mov
inc
jp
jo
jp
add
loop
jne
mov
dec
or
and
and
daa
mov
out
or
sub
sbb
jne
lock
loopne
popf
lods
aam
push
rol
cmp
out
push
push
cli
add
pusha
lahf
and
call
jl
lods
arpl
push
retf
mov
call
mov
xor
out
js
jbe
push
inc
loopne
test
popa
stc
mov
sub
punpcklbw
fisttp
fld
and
jmp
cwde
rcr
xchg
inc
inc
sub
add
xchg
sub
inc
pushf
movs
jg
sbb
push
movs
fist
dec
push
and
jle
ss
rcl
or
jbe
or
mov
add
or
add
jmp
mov
xchg
xor
xchg
outs
loopne
mov
adc
stos
rcl
xor
jo
rcl
sbb
jne
push
stc
ror
js
mov
xor
dec
pop
xor
adc
xchg
ins
or
or
push
rcl
inc
in
mov
and
dec
js
sbb
nop
sbb
xor
push
mov
mov
and
arpl
les
sub
lahf
cmps
pop
and
out
scas
push
sbb
jecxz
shr
das
ja
mov
(bad)
xor
cs
inc
pop
rol
jno
sbb
or
add
add
mov
leave
or
inc
bswap
lea
push
mov
add
int
mov
fdiv
shr
jecxz
add
or
(bad)
inc
add
cmp
dec
out
daa
jmp
pop
ror
or
(bad)
jb
lods
dec
adc
pop
jl
jle
sbb
nop
xchg
mov
mov
xchg
adc
(bad)
sti
ret
je
jno
imul
popa
fistp
jo
push
inc
lock
shl
push
mov
test
pop
clc
(bad)
(bad)
daa
bound
jb
pop
pop
daa
xchg
sbb
hlt
outs
out
push
xor
js
and
adc
push
scas
cmp
mov
rcr
cmp
dec
mov
ds
(bad)
retf
or
in
add
and
sbb
ins
or
add
xchg
shl
fistp
outs
inc
jge
dec
or
ins
ins
jne
adc
xchg
ins
add
das
jne
or
add
inc
fmul
cld
inc
adc
xchg
lock
repz
cmc
mov
lahf
(bad)
ud2
cdq
nop
pop
dec
sbb
cmp
and
sbb
xchg
adc
inc
ret
xor
xor
pop
push
cld
stos
mov
cmp
ds
scas
mov
or
add
dec
jmp
(bad)
or
(bad)
sub
add
mov
add
fcom
shl
sub
sbb
inc
and
push
adc
inc
or
lods
(bad)
xor
aaa
xor
call
cmpps
jmp
adc
dec
rcr
inc
sbb
sub
sub
push
add
and
push
clc
in
je
push
adc
xchg
sub
pop
not
and
sub
ja
mov
push
push
xchg
in
rcl
add
test
and
add
sub
add
and
dec
mov
cdq
jmp
xchg
mov
dec
fwait
scas
into
inc
loop
lahf
xchg
imul
or
push
in
mov
clc
xor
outs
fwait
lds
push
adc
rcr
loopne
test
pop
test
orps
jbe
sbb
js
add
sbb
inc
outs
mov
add
loope
scas
pop
clc
out
in
call
add
clc
rcr
mov
add
or
aad
push
fadd
mov
std
ret
pop
ds
es
cmp
test
xchg
imul
daa
add
jg
repz
daa
mov
mul
or
mov
(bad)
jle
inc
jmp
mov
adc
xchg
jae
mov
xchg
mov
pop
mov
adc
jmp
outs
jmp
or
add
fiadd
out
pop
or
cmp
pop
push
hlt
aaa
(bad)
jg
mov
hlt
mov
sub
je
pop
mov
xchg
ror
dec
pop
dec
cmp
push
push
(bad)
fidiv
js
mov
mov
mov
test
and
sbb
retf
aaa
and
cmps
adc
les
test
rol
neg
inc
add
xchg
es
not
sbb
xor
pop
push
mov
cmp
rcr
int3
inc
dec
jne
jbe
mov
push
fdiv
push
and
push
lea
movs
movs
stos
jmp
mov
xor
cmp
mov
shl
and
fwait
mov
and
je
outs
js
loop
aas
pop
fnstcw
cwde
call
or
dec
mov
daa
movs
adc
push
mov
loop
imul
adc
jge
out
and
out
sub
add
mov
fistp
inc
and
rol
dec
pusha
or
xor
call
push
push
add
aam
adc
adc
xchg
sub
imul
scas
test
loop
push
push
mov
add
and
add
cld
cld
leave
nop
or
dec
push
cld
cld
movs
leave
sbb
(bad)
in
inc
clc
sbb
mov
jg
sub
xor
xor
xchg
pop
ret
popf
lea
mov
sub
es
test
rcl
push
mov
jmp
dec
jmp
imul
sub
repnz
ror
cmps
adc
sub
cmp
mov
sub
ss
and
mov
in
sbb
sti
xchg
inc
sub
xchg
xor
cmp
mov
mov
dec
and
int3
movs
sbb
push
icebp
cmp
loop
mov
mov
dec
sbb
push
push
pop
xchg
test
pop
inc
mov
sbb
push
ins
lods
adc
test
adc
mov
xor
and
bound
mov
mov
and
jb
or
mov
sti
xchg
test
(bad)
daa
daa
daa
daa
dec
xor
add
dec
daa
pop
and
push
or
and
xor
cwde
mov
mov
lds
xchg
fiadd
ins
sbb
cmc
inc
inc
xchg
lds
(bad)
mov
add
xchg
pop
jb
ret
push
pop
dec
dec
dec
add
cwde
add
scas
and
rol
mov
xchg
or
push
push
mov
dec
and
sar
dec
pop
mov
xchg
imul
xchg
std
xlat
push
call
je
mov
add
push
ficomp
pop
mov
add
sbb
adc
test
mov
sbb
cmp
(bad)
jmp
pop
ret
outs
mov
dec
mov
and
imul
mov
push
mov
adc
gs
mov
shl
or
sub
leave
ret
nop
pop
les
push
push
xchg
out
pusha
sti
cmps
push
scas
ror
inc
mov
fs
sti
out
jl
or
jle
dec
cmp
es
and
bound
pop
sbb
in
inc
add
and
jg
mov
inc
test
fdiv
adc
clc
xchg
clc
or
jmp
or
dec
adc
add
mov
lock
fiadd
int
mov
and
mov
sbb
adc
pop
daa
push
xor
sbb
test
push
pop
sbb
mov
js
xchg
inc
push
xlat
add
call
adc
ret
hlt
add
sbb
jne
rcr
add
lahf
cmp
jp
pop
cmp
scas
aam
xchg
shl
lock
outs
mov
inc
add
sub
push
ret
lock
add
add
inc
cmp
test
mov
or
mov
mov
pusha
je
dec
ja
loop
add
pusha
and
gs
imul
mov
jae
pusha
dec
pop
inc
div
clc
mov
add
cmc
cmc
mov
jp
dec
cmp
lea
mov
add
mov
or
xchg
cmp
jo
and
mov
adc
hlt
shr
mov
add
dec
lock
test
mov
mov
fisttp
stos
push
and
or
jmp
std
ffree
lock
ret
lods
pop
js
loopne
not
or
je
adc
push
cmp
dec
popa
jns
jne
mov
pop
and
sbb
adc
xchg
adc
fcmovb
jecxz
push
xchg
fs
sub
and
add
mov
jne
cmp
scas
xor
add
sbb
mov
std
in
scas
push
push
cmps
push
xor
cmp
mov
dec
pop
push
or
cmp
jne
adc
es
and
mov
shl
xor
add
cmp
cmps
mov
jae
(bad)
sub
call
pop
sbb
and
inc
rol
jo
xchg
push
ins
retf
leave
enter
xchg
lock
and
test
xor
aad
cmp
es
adc
inc
or
std
sahf
clc
iret
in
sub
inc
dec
pop
pop
rol
call
sub
push
and
mov
mov
push
test
and
ret
and
rol
lea
sbb
lods
daa
jl
xor
shl
add
jmp
in
shl
pop
mov
es
(bad)
(bad)
call
dec
or
js
into
into
dec
mov
out
dec
mov
add
inc
pop
add
in
mov
add
lock
sar
loop
or
aaa
inc
inc
shl
sub
jg
js
push
test
out
je
popf
add
in
adc
arpl
pop
(bad)
jg
push
add
jmp
mov
mov
call
cmp
setg
jmp
mov
add
mov
add
cmp
setl
and
add
cmp
rol
cmp
movs
jno
movs
dec
mov
daa
(bad)
pop
add
xchg
jnp
jbe
das
sub
or
std
stos
test
sub
dec
stos
dec
cmp
or
mov
and
dec
adc
xor
xchg
cmp
add
inc
or
add
push
add
loopne
or
jmp
movs
aad
or
adc
sbb
jl
mov
inc
push
lock
jmp
sbb
push
or
adc
pop
sbb
xor
adc
push
into
aaa
and
sbb
movs
add
inc
push
or
jne
and
xchg
adc
test
retf
mov
das
jns
lds
jmp
push
nop
mov
mov
retf
mov
adc
inc
or
xor
lock
das
inc
daa
pop
add
mov
(bad)
sbb
imul
xchg
clc
mov
pop
hlt
test
or
mov
xor
mov
add
mov
pop
inc
xchg
inc
pop
cmp
mov
add
ret
fild
push
imul
mov
test
push
stos
or
push
stos
pop
add
sub
stos
xchg
mov
inc
mov
jno
jg
and
dec
arpl
cmp
je
inc
xor
inc
mov
fsub
or
popf
or
icebp
add
ror
fcom
xchg
or
adc
cli
jl
sub
stc
sub
push
xor
dec
jge
lds
call
and
add
pop
ins
and
stos
(bad)
ret
xchg
pop
test
or
lea
gs
and
mov
jne
movs
nop
sbb
call
jmp
adc
jo
mov
addr16
loopne
sbb
add
jae
jmp
sbb
add
cmc
adc
inc
mov
xchg
sbb
xlat
je
cld
or
cmc
sbb
out
(bad)
or
mov
retf
xor
push
jmp
fnstcw
xchg
mov
ror
out
shl
out
les
and
icebp
add
add
call
inc
push
adc
test
fimul
xchg
pop
loop
cmp
lock
or
enter
mov
pop
cmp
or
sbb
adc
in
xor
push
or
adc
cmp
outs
mov
retf
call
cmp
lods
mov
sbb
cmp
adc
jl
loope
fistp
rcl
arpl
jp
cmp
pop
es
and
adc
sbb
push
push
mov
ror
pop
js
mov
xchg
sub
add
adc
scas
sar
dec
mov
movs
(bad)
bound
lods
mov
fbstp
mov
adc
push
sbb
cmp
aam
inc
fcom
push
sub
xchg
out
mov
push
xchg
pop
je
cmp
call
mov
fwait
jo
je
pop
or
shl
cmp
jns
sub
outs
sbb
mov
(bad)
sbb
sar
add
int
loope
and
cwde
and
cmps
in
mov
jl
or
jbe
push
into
mov
rcr
popa
xlat
fiadd
lock
ss
les
or
lock
add
mov
add
cld
(bad)
es
adc
shr
mov
pop
int
lods
adc
push
sub
xor
mov
jno
jno
seto
add
test
mov
lea
mov
jg
inc
js
mov
std
jge
add
imul
or
or
movs
inc
and
sbb
mov
add
inc
out
push
test
stos
(bad)
mov
inc
jl
sbb
inc
push
push
out
ins
scas
arpl
daa
or
hlt
lock
sub
nop
cwde
fist
add
dec
sar
sbb
or
mov
sbb
rcl
add
repnz
dec
pop
repnz
add
pop
pop
enter
add
adc
sbb
lea
aad
dec
inc
dec
dec
mov
xchg
dec
inc
ja
mov
add
lock
(bad)
cdq
test
cmp
inc
outs
mov
or
test
inc
or
ja
push
and
loope
sbb
or
lods
and
xchg
jo
mov
pop
pop
scas
or
jo
xlat
sub
inc
inc
add
sbb
sub
mov
movs
xchg
(bad)
mov
test
punpcklbw
add
sub
push
lock
in
jne
sub
jns
sbb
test
xchg
or
sub
xchg
repnz
mov
inc
inc
mov
jne
add
push
push
sbb
push
add
dec
jge
inc
call
repz
mov
dec
fsub
in
lock
js
mov
push
inc
sub
mov
aam
dec
test
out
scas
movs
ss
fild
and
in
lds
loopne
cmp
lock
xor
push
stos
or
xor
int3
(bad)
(bad)
jg
addr16
inc
sub
(bad)
pop
lods
inc
pusha
mov
repnz
inc
add
and
sub
pop
mov
mov
jae
adc
bswap
push
inc
adc
dec
cwde
jne
cmp
dec
lods
movs
sahf
jbe
push
fs
lods
jae
lods
fwait
(bad)
fcomp
push
ins
sub
call
ins
je
pop
loopne
lahf
cmp
dec
jnp
inc
(bad)
out
or
lock
mov
(bad)
arpl
imul
add
pop
js
inc
adc
sbb
ret
les
nop
add
lods
rol
or
sbb
inc
in
and
outs
inc
push
xchg
test
sbb
mov
loopne
xor
push
mov
(bad)
pop
inc
add
stos
pop
push
push
dec
pop
cli
xor
or
mov
pop
les
jno
and
sub
add
aad
pop
movs
mov
repz
in
or
imul
mov
rcpps
je
fsubr
mov
jno
push
fmul
fadd
cdq
sub
repz
add
add
inc
xor
mov
add
adc
pop
inc
jl
jecxz
xchg
sbb
pop
ror
mov
mov
fidivr
rol
je
adc
mov
addr16
in
pushf
mov
push
mov
in
push
or
and
call
or
mov
ds
inc
inc
or
and
xor
clc
and
jns
push
inc
add
add
or
add
ins
pusha
jmp
or
or
mov
sub
push
jge
cdq
mov
enter
mov
sbb
sbb
movs
inc
mov
push
cmp
sbb
add
daa
icebp
imul
or
or
jmp
push
mov
div
add
xor
push
jg
rol
fcom
jg
ss
imul
ja
or
or
aam
cmp
or
jae
aas
fwait
sub
ret
clc
sbb
repz
sub
adc
pop
mov
push
call
aaa
xor
je
mov
adc
sub
adc
jg
and
cmp
dec
shl
sub
or
adc
bound
jb
sar
add
and
mov
jnp
and
jp
dec
icebp
add
adc
add
xor
addr16
mov
adc
sbb
add
loop
aaa
mov
por
(bad)
je
ds
(bad)
add
sbb
sbb
mov
xor
shl
xor
(bad)
div
mov
sti
daa
clc
mov
test
add
or
aaa
or
xor
ret
mov
adc
add
add
popf
add
sbb
ja
(bad)
outs
data16
and
cmc
cwde
addr16
mov
loop
icebp
cmc
mov
inc
push
add
lea
adc
sub
test
pusha
shr
and
jmp
fsubr
lods
mov
cmc
nop
(bad)
jbe
push
sbb
push
add
or
ret
xchg
mov
push
rol
pop
pop
nop
xor
popa
xchg
rcl
mov
call
cmp
jne
sahf
daa
adc
pop
sub
or
sbb
cmp
ja
dec
and
test
cmp
inc
jne
je
cmps
push
jne
pusha
inc
sti
js
repz
fbld
cmp
pop
shrd
rcl
push
inc
loopne
lods
mov
jg
add
sbb
dec
or
inc
repz
lock
pop
add
aad
mov
stc
jg
nop
fcom
movs
lahf
cmp
cmp
xor
lods
repz
jno
ror
and
mov
mov
arpl
popf
mov
(bad)
mov
add
adc
movs
and
cmp
outs
xchg
cli
std
inc
addr16
addr16
inc
jno
(bad)
clc
dec
pop
sbb
push
mov
rcr
ret
pusha
xchg
pop
scas
xor
sbb
mov
xor
aad
xor
and
or
jne
int
jo
push
inc
add
mov
das
push
jb
ret
or
cmp
lea
pop
sbb
rcr
sub
mov
or
or
shr
ror
aam
pusha
xor
xor
jmp
pop
rcr
and
add
adc
jae
cmc
sbb
jb
arpl
loope
shl
xor
fs
ins
mov
inc
and
imul
jbe
cli
mov
xor
imul
out
cwde
jo
pop
fwait
pop
je
data16
mov
add
inc
inc
jne
hlt
jmp
nop
ins
out
cmp
inc
sub
inc
mov
inc
inc
dec
sbb
test
push
dec
xchg
(bad)
loop
xor
retf
jl
jmp
mov
jge
lock
sbb
add
add
xchg
test
pop
pop
test
pop
xchg
dec
enter
sub
add
and
push
dec
cdq
push
pop
mov
mov
dec
sub
hlt
cdq
bt
add
xor
sub
out
or
nop
retf
and
or
ja
push
or
jg
cmp
je
push
add
adc
push
mov
mov
mov
jp
sbb
dec
sub
shl
sub
lods
push
aam
mov
test
add
sub
nop
jo
mov
sub
or
add
add
mov
jg
rcr
or
sub
pop
jmp
add
daa
mov
mov
call
test
inc
mov
sbb
sub
cli
add
sub
adc
xchg
add
sbb
add
or
cmp
test
jo
cmp
dec
je
(bad)
or
sub
mov
sbb
test
loopne
or
jp
call
add
shl
push
scas
jno
cmp
pusha
jmp
js
pushf
test
add
add
sub
cmp
sub
cmp
push
push
mov
pop
outs
data16
xor
call
pop
jle
out
and
mov
pop
adc
sbb
jmp
push
adc
aad
push
or
sbb
or
data16
(bad)
hlt
xchg
and
ins
pop
dec
adc
push
mov
lea
mov
fiadd
or
ins
inc
lock
dec
adc
xor
adc
inc
aam
mov
cmp
push
mov
and
sbb
das
sbb
out
adc
outs
or
adc
inc
xchg
mov
pop
push
in
xlat
adc
mov
cmps
mov
das
or
or
push
and
dec
inc
(bad)
adc
mov
stos
sbb
push
or
inc
sub
pop
ss
push
jle
cmp
js
gs
and
in
add
rol
cmp
mov
inc
pop
push
push
mov
in
dec
ja
pop
or
cwde
outs
ficomp
mov
or
sar
jne
mov
push
mov
inc
xor
sbb
jne
push
mov
add
sbb
adc
pop
aaa
jp
cmp
hlt
shr
pop
sbb
cli
adc
jle
fiadd
retf
sub
ins
or
retf
push
sti
mov
cmp
js
adc
mov
mov
fisttp
clc
inc
inc
out
and
or
mov
xor
(bad)
scas
add
pop
movs
lods
add
mov
push
push
mov
jno
sbb
add
cmp
jno
in
(bad)
adc
add
loopne
adc
test
add
jne
mov
jo
ins
xchg
push
dec
or
fcmovnbe
adc
inc
test
nop/reserved
ins
mov
xlat
sbb
rcr
xchg
aam
pop
mov
(bad)
fst
cmp
adc
test
jmp
sub
xor
and
call
lods
add
pop
mov
hlt
or
loop
aam
inc
mov
push
jecxz
dec
in
mov
or
inc
mov
into
ins
inc
or
and
(bad)
push
fs
mov
ror
jl
sub
sar
sub
add
retf
fld
jp
sar
or
push
push
(bad)
cli
add
add
jno
xchg
pop
xchg
into
pop
add
push
add
push
out
and
mov
mov
adc
mul
inc
push
push
push
icebp
hlt
mov
outs
inc
lock
jns
sbb
and
sub
inc
lods
ret
add
mov
jb
or
mov
xor
sbb
add
or
paddsb
dec
cld
movs
inc
hlt
sub
cmp
push
test
push
fild
leave
add
ror
test
mov
jbe
loope
das
adc
or
sbb
in
push
dec
and
cmps
test
jno
mov
aas
ret
pop
mov
sbb
neg
ror
in
loopne
retf
rol
xchg
adc
sbb
pusha
jmp
stos
add
and
lock
push
mov
push
mov
dec
or
xchg
xchg
test
fsubr
lock
sbb
xchg
mov
fadd
dec
outs
or
scas
mul
mov
inc
(bad)
lods
xchg
xor
push
cmp
ror
jge
mov
mov
and
out
adc
hlt
pop
test
jb
aaa
jecxz
xor
test
je
jg
pop
rol
dec
push
jns
aas
mov
add
jne
jmp
pop
(bad)
pop
mov
pop
sub
add
cmp
daa
inc
mov
xchg
add
les
pop
mov
je
cmp
push
push
push
mov
xlat
fwait
sbb
inc
and
xchg
nop
enter
iret
cld
adc
inc
push
add
addr16
add
mov
add
ret
xchg
or
and
xchg
mov
push
call
daa
adc
or
pushf
pop
sbb
adc
push
loop
pop
and
scas
das
mov
mov
inc
pop
dec
adc
adc
stos
xor
xchg
in
sbb
xchg
adc
and
sbb
adc
fcomp
mov
jne
add
jnp
cmps
sahf
push
adc
and
and
scas
and
cmp
je
cmp
es
dec
add
push
push
cmp
inc
xchg
mov
adc
mov
mov
inc
dec
test
mov
adc
aam
add
pop
dec
hlt
adc
dec
gs
sbb
pop
or
dec
cmp
sbb
jns
mov
pop
or
sub
pusha
sub
cmps
aas
hlt
and
dec
test
jmp
push
int
(bad)
pop
es
or
cs
mov
or
stos
or
cmp
enter
xchg
adc
pop
loop
mov
fst
lock
sbb
add
jge
pop
adc
push
dec
or
loope
loopne
xor
test
and
push
jo
jmp
arpl
daa
jo
test
adc
(bad)
sbb
pop
ja
rol
push
test
inc
loop
scas
lock
loopne
push
mov
test
mov
sbb
inc
lea
inc
mov
mov
xchg
push
inc
jge
add
inc
mov
push
(bad)
and
xor
pusha
jb
fidiv
cmp
xor
(bad)
fsub
jg
mov
pop
ret
je
adc
mov
add
sbb
sbb
adc
xor
and
adc
lea
mov
sub
mov
or
rcr
int3
sbb
test
aas
or
mov
dec
push
stc
add
push
dec
mov
push
les
cmps
jle
mov
mov
jge
sbb
in
adc
pop
sahf
(bad)
push
xor
sbb
mov
sbb
daa
test
dec
pop
movs
pusha
and
jmp
movs
dec
and
das
add
sub
dec
popa
lods
add
retf
adc
pop
pusha
test
cdq
stc
or
in
mov
pop
cmp
jne
xchg
inc
sub
xor
pop
add
push
fiadd
jg
inc
pop
mov
(bad)
and
adc
sbb
push
mov
mov
js
mov
inc
ret
add
daa
pop
jnp
adc
and
clc
inc
retf
sub
push
add
xchg
rcl
cld
adc
jmp
inc
dec
movs
rol
pop
mov
and
cmp
add
or
pop
sub
(bad)
and
jmp
shl
mov
mov
pop
jnp
es
xor
sub
add
adc
movs
mov
add
or
mov
out
push
dec
add
cli
mov
pop
repz
mov
mov
jmp
push
mov
icebp
fcomp
cmp
test
rcr
inc
push
movs
xchg
hlt
sbb
xchg
jmp
xchg
lock
jmp
ins
inc
lock
cmp
add
inc
add
nop
les
in
sub
push
jne
sbb
mov
lock
call
loop
test
or
pop
sar
fnsave
clc
cs
mov
sub
ret
add
xlat
rol
mov
jbe
push
inc
or
shl
popa
add
dec
sub
cmp
jle
sub
idiv
sub
xor
popa
push
mov
or
call
aas
and
jbe
add
and
ss
jecxz
xor
sub
mov
sbb
ror
test
sub
inc
and
(bad)
sar
hlt
and
or
sbb
or
(bad)
and
xor
lods
push
jmp
icebp
xchg
xchg
shr
add
adc
sysret
je
fucomp
mov
sub
nop
xchg
or
lock
jae
push
or
add
cmp
and
test
or
lods
pop
sbb
or
test
(bad)
addr16
jno
je
lea
loopne
sub
mov
pop
inc
test
aam
bound
lea
stos
daa
test
mov
out
out
adc
lods
or
xor
cs
repz
add
push
int3
jne
scas
adc
inc
add
inc
and
pop
lods
pop
aam
push
shl
push
hlt
sbb
and
mov
sbb
add
cmp
mov
leave
stos
shl
xchg
sar
lods
or
in
dec
jg
jmp
das
cs
mov
xor
lea
jl
cmp
add
add
adc
add
push
sub
popf
push
lea
inc
inc
and
sbb
out
and
loope
jl
lea
xor
add
movs
aaa
add
nop
call
ja
pop
jo
sub
xor
push
cli
mov
and
pop
xor
fmul
and
or
xor
sbb
jecxz
popf
iret
pop
adc
(bad)
xchg
sbb
or
adc
inc
pop
sbb
jbe
mov
jnp
cmp
adc
push
in
into
adc
pop
repz
add
retf
inc
pusha
ins
cs
dec
jp
push
push
xor
lods
mov
test
pop
dec
fiadd
(bad)
fadd
shr
push
mov
rol
mov
mov
xchg
mov
adc
or
push
jecxz
or
cmp
scas
pop
or
mov
shl
mov
xchg
inc
(bad)
pop
adc
movs
jmp
(bad)
push
and
sbb
inc
leave
sahf
inc
dec
imul
lea
shr
cmc
ficomp
mov
ror
xchg
das
mov
scas
push
ds
adc
sub
clc
adc
ss
test
arpl
and
dec
icebp
imul
ror
pop
dec
in
inc
cmp
je
test
aaa
popa
add
cdq
lds
inc
je
loopne
sar
sbb
ror
adc
or
inc
inc
mov
xor
and
push
ror
mov
psrlq
jmp
mov
or
xor
dec
ret
loope
mov
xchg
shl
pusha
js
ja
add
push
add
jmp
mov
pop
lock
xor
lea
xor
add
gs
inc
je
sbb
mov
xchg
cmp
or
mov
mov
push
mov
sub
ins
inc
add
lock
adc
add
mov
sub
mov
adc
es
mov
popa
mov
ja
test
cmp
test
inc
jmp
xor
inc
sub
sbb
push
stos
sbb
push
mov
rol
cmp
or
sub
mov
popa
jb
test
cdq
xchg
add
adc
push
out
xor
and
inc
js
add
add
add
sbb
xor
jne
inc
mov
ins
pusha
sbb
sub
inc
cli
push
lock
jb
pop
xor
movs
cmp
xchg
sub
in
lahf
push
not
sub
add
imul
inc
out
mov
popa
cmp
mov
mov
daa
loopne
inc
ss
add
cmpxchg
mov
push
jo
les
sbb
cld
pushf
jle
mov
inc
(bad)
hlt
mov
pop
xlat
jl
dec
cmps
push
mov
ds
pusha
lahf
add
push
xlat
inc
adc
aas
push
push
sub
xor
or
xchg
imul
mul
(bad)
pop
movs
or
inc
aaa
in
pop
or
in
sbb
leave
push
push
mov
push
sbb
inc
setb
adc
cmp
adc
adc
xor
jp
jp
iret
adc
popa
mov
mov
inc
data16
call
jns
mov
or
dec
jmp
and
fwait
push
out
xchg
inc
cs
popa
mov
outs
jge
dec
sbb
push
(bad)
or
fst
inc
js
or
xchg
sbb
push
push
sub
xchg
test
inc
jnp
ror
call
fild
pop
aam
adc
mov
inc
lds
mov
push
sbb
add
or
aad
and
and
and
and
and
adc
and
es
adc
div
jo
daa
mov
add
mov
daa
or
enter
xor
add
mov
nop
cmp
xor
push
inc
add
sub
push
sbb
fdiv
xor
mov
inc
clc
call
nop
in
and
xor
lods
push
fadd
mov
shl
imul
dec
add
pusha
jecxz
adc
mov
add
dec
outs
pop
pop
fiadd
and
jbe
outs
(bad)
inc
in
bound
pop
cld
and
or
push
sbb
inc
push
add
test
xor
pop
jle
push
sbb
xchg
push
cmp
adc
sub
mov
popa
mov
jg
sub
in
ins
push
ret
mov
inc
or
add
pop
xor
xchg
mov
xor
pop
and
adc
es
cmp
pop
sbb
stos
ret
cmps
inc
jnp
pop
add
pop
inc
ror
aas
add
mov
or
push
add
adc
sub
sbb
les
fcomp
lea
sbb
pop
rcl
aam
add
sar
sub
fcomp
mov
pop
shl
adc
sbb
dec
or
push
xchg
cmp
arpl
mov
aad
adc
push
or
retf
adc
pop
scas
pop
ins
xor
inc
jmp
add
or
sbb
(bad)
sbb
sub
jge
enter
sbb
or
or
add
or
or
ins
push
jo
jmp
call
add
pop
and
add
lods
ret
(bad)
stos
add
cmc
inc
scas
sbb
and
mov
mov
sub
dec
mov
add
sub
cs
add
and
xor
xchg
pop
xor
sbb
xor
xchg
test
add
add
add
cmp
inc
inc
and
push
ds
aas
enter
cmps
inc
test
xor
cld
jnp
pop
or
sub
or
and
mov
into
dec
mov
add
loopne
xchg
lock
enter
aam
fsub
jnp
inc
test
out
fcomp
ins
stc
mov
in
call
add
mov
inc
pop
ja
pop
sbb
mov
pop
mov
push
add
dec
or
sbb
mov
sub
pop
mov
pcmpeqd
jg
inc
inc
lods
je
cli
push
inc
or
cmp
or
pop
dec
test
mov
rcl
pop
add
rcr
or
xchg
lock
inc
adc
inc
inc
pop
clc
or
mov
imul
add
sub
call
or
mov
inc
out
push
or
xor
xor
dec
mov
add
fmul
fisubr
jmp
lock
out
lock
add
mov
inc
sub
fidivr
fcom
mov
clc
push
rcl
jge
ret
(bad)
idiv
xor
jg
mov
mov
xchg
push
stos
aaa
je
test
into
(bad)
jle
ror
fadd
clc
jae
mov
(bad)
lock
push
fwait
cmp
jge
je
ret
outs
push
aas
xor
add
inc
mov
push
add
dec
xor
jmp
sub
frstor
xchg
pop
and
jbe
mov
pop
jne
jge
ret
clc
pop
or
jns
mov
mov
sbb
mov
push
sbb
push
add
jo
cmp
je
xchg
xor
pusha
movs
sbb
in
aas
add
push
mov
dec
push
test
fld
neg
loope
pop
mov
ficomp
das
adc
sub
add
fwait
(bad)
sbb
mov
fucomp
js
push
sti
mov
shr
in
dec
push
dec
push
xor
mov
push
add
outs
cmp
xchg
push
mov
adc
mov
add
mov
fadd
aaa
cmp
push
cmp
add
sbb
inc
inc
cmp
push
fld
movs
xchg
jne
cmps
push
fwait
test
pop
or
sahf
jp
pushf
and
lea
or
adc
leavew
jmp
pop
mov
add
jne
jb
scas
adc
mov
or
mov
xchg
pop
je
push
sub
or
cmp
punpcklwd
mov
push
shl
addr16
test
dec
js
xchg
ss
js
jnp
dec
add
mov
and
test
rol
in
sbb
cmp
push
add
adc
out
add
adc
test
jle
call
(bad)
adc
mov
add
push
sbb
add
add
stos
push
xor
mov
push
sahf
jmp
not
adc
adc
and
pop
fnstenv
mov
and
shr
cdq
jo
ds
inc
inc
and
mov
mov
push
mov
jns
mov
and
imul
pop
xor
push
pop
mov
adc
rcl
ss
jmp
push
push
push
aaa
test
xor
inc
xchg
sbb
jo
add
sbb
cmps
cmc
loopne
test
xor
aas
js
sub
xor
xor
and
xchg
sub
mov
adc
adc
jbe
xor
cs
mov
or
add
int
or
les
inc
sub
push
xor
or
mov
cmp
jns
mov
or
add
pop
inc
inc
xor
mov
add
pop
mov
or
mov
inc
ror
jp
or
add
ret
dec
cld
inc
adc
or
mov
cs
add
push
sti
aaa
mov
add
aaa
rcr
push
mov
or
enter
add
mov
jmp
rol
mov
sbb
repz
dec
das
sbb
jno
mov
cld
(bad)
out
ins
xchg
js
push
sbb
mov
sbb
cmp
push
(bad)
inc
or
mov
or
mov
mov
in
xchg
sbb
in
mov
xchg
jo
or
adc
and
add
not
push
add
sub
scas
xor
inc
cmps
dec
add
fimul
fs
sub
cmp
jo
xlat
es
jnp
inc
ret
push
adc
push
add
mov
push
hlt
sbb
lods
outs
xlat
sbb
imul
in
or
push
xor
and
imul
dec
test
lock
into
loop
call
clc
das
pushf
jo
mov
xchg
jno
(bad)
imul
adc
jne
fist
or
cld
or
cli
mov
push
xchg
mov
lock
es
dec
cld
fild
sub
jo
xchg
xchg
push
aaa
enter
add
adc
(bad)
mov
loope
jo
shr
mov
xlat
adc
daa
js
(bad)
pop
sbb
daa
xlat
pop
mov
xchg
jo
cmps
mov
pop
ss
xchg
cmp
arpl
hlt
(bad)
pop
cmps
cmp
adc
nop
push
fdiv
or
iret
mov
clc
push
lods
sbb
push
in
add
call
cdq
jl
lea
and
mov
pop
push
push
mov
aas
sbb
push
mov
sub
ret
pusha
das
inc
ds
pop
adc
add
aaa
test
pop
sbb
mov
adc
pusha
mov
lahf
nop
lock
jne
pop
mov
ficom
jle
xor
add
adc
adc
es
ins
push
pop
sbb
mov
lods
int3
mov
adc
movs
push
cmp
xchg
sbb
inc
lea
lods
and
clc
popa
lock
push
iret
rep
retf
jne
and
dec
adc
cld
dec
fadd
fist
sub
jmp
jb
js
pusha
popa
mov
or
pop
enter
inc
sub
sub
dec
arpl
sti
movs
cmp
jmp
xor
mov
adc
ss
in
jge
push
popa
pusha
mov
sub
mov
test
outs
nop
icebp
out
or
push
test
inc
repz
add
ja
cmp
cli
push
or
repz
pop
or
adc
in
fist
out
adc
movs
inc
idiv
mov
add
add
cmp
int3
ret
mov
ja
loopne
cld
pop
enter
inc
add
dec
and
jno
lock
pop
push
pop
sar
push
sbb
(bad)
dec
xchg
jp
add
cs
test
lock
add
and
dec
sbb
outs
push
mov
push
pop
sub
cld
push
add
and
add
sbb
mov
add
cmp
mov
xchg
nop
adc
or
add
cs
xchg
inc
ret
rcl
inc
pop
add
or
test
jp
dec
inc
inc
push
add
popa
lds
nop
shl
ins
sbb
adc
inc
cmp
icebp
or
jecxz
pop
xchg
push
sar
cmp
and
inc
cli
leave
push
shr
pushf
dec
add
movs
or
dec
xor
jecxz
dec
std
and
adc
scas
popa
in
jg
or
add
ja
push
push
inc
ret
inc
loope
movs
mov
cwde
cmp
clc
pop
(bad)
adc
call
mov
lock
add
mov
or
std
adc
enter
fadd
mov
shl
out
sub
fst
mov
ins
dec
add
inc
fnsave
pop
out
inc
jl
mov
xchg
pop
inc
jp
fistp
mov
ret
scas
dec
or
lock
dec
call
(bad)
jp
sub
gs
loopne
xchg
dec
outs
add
dec
dec
fstp
arpl
pop
leave
dec
repnz
add
je
push
gs
jns
ds
mov
jl
mov
pop
ss
or
push
outs
pop
or
and
outs
jg
push
jmp
push
adc
shr
dec
aad
push
xor
mov
dec
sub
jns
push
add
sub
cmp
inc
pusha
xor
dec
mov
mov
(bad)
xor
arpl
ins
addr16
push
sbb
and
push
ins
lods
adc
inc
adc
and
shl
retf
pop
scas
jle
sub
inc
dec
fwait
mov
in
jns
ins
mov
jns
sahf
xchg
and
inc
jecxz
cmp
je
in
jns
pop
jo
ins
dec
dec
sahf
xchg
out
inc
xor
xor
in
jns
sub
sub
dec
bound
push
and
push
icebp
xor
jg
fwait
loope
or
adc
mov
jo
jnp
mov
scas
aaa
imul
sub
pop
dec
leave
cmp
mov
mov
sbb
(bad)
rol
sbb
popa
addr16
rol
xor
fs
mov
fwait
adc
pop
dec
gs
jbe
or
sub
add
adc
push
xchg
dec
sbb
popa
jb
je
mov
cmp
and
or
sbb
pop
mov
pop
mov
xor
dec
fdiv
adc
(bad)
(bad)
or
mov
nop
fs
and
jns
or
add
cwde
and
adc
and
add
push
and
and
rol
outs
sub
test
or
jnp
or
or
inc
or
and
cdq
and
xor
sbb
outs
cmps
call
sbb
xor
mov
inc
jp
in
add
dec
jge
adc
ret
int3
add
cmp
add
rol
mov
pop
dec
xor
adc
aam
movs
or
inc
call
fisttp
sub
cld
aaa
test
gs
pop
mov
or
and
or
mov
nop
ja
xchg
pop
dec
fmul
pop
sub
sahf
adc
push
jge
es
rcr
push
inc
popf
xor
or
lock
or
dec
ins
gs
nop
inc
jg
push
jae
mov
or
xor
push
push
mov
push
add
sbb
add
or
add
add
pop
mov
or
sub
mov
dec
xchg
lods
mov
vmread
mov
or
cmp
push
and
popa
dec
jae
add
test
add
push
nop
cmp
add
add
je
or
ror
jbe
ja
iret
jnp
fadd
lock
push
push
mov
pop
or
inc
sbb
test
cmp
in
push
inc
test
inc
mul
pusha
ds
cmps
in
mov
fsubr
mov
push
call
sti
inc
and
clc
fiadd
ds
push
call
clc
cmp
push
jns
pop
jns
add
adc
push
dec
mov
dec
leave
push
leave
pushf
jns
and
or
sbb
push
or
add
inc
pop
fwait
xchg
push
icebp
jl
push
xor
nop
es
neg
push
push
push
lock
aas
test
dec
or
mov
push
or
adc
ror
adc
aaa
inc
pop
stos
dec
pop
out
addr16
mov
inc
je
push
cmc
pop
xchg
adc
imul
gs
imul
mov
ja
sub
xor
jo
inc
aas
mov
mov
daa
and
test
jo
inc
push
mov
fistp
pop
mov
hlt
push
mov
ins
push
xor
add
movs
push
ins
push
add
je
push
lahf
out
and
test
loope
jnp
inc
es
xchg
push
fs
aam
push
cmp
nop
dec
jbe
or
or
push
fs
add
add
dec
shl
inc
jg
and
sbb
cs
(bad)
adc
adc
mov
mov
mov
imul
or
and
and
jmp
nop
in
pop
or
jae
jns
add
andps
je
dec
adc
sbb
pop
addr16
dec
lahf
mov
jl
add
ror
dec
add
mov
loope
pusha
xor
dec
mov
dec
and
cmps
adc
addr16
cmp
cmp
(bad)
aam
outs
loope
add
xor
or
xchg
into
adc
add
or
inc
adc
int
in
add
mov
mov
inc
xor
in
push
pop
and
ror
leave
add
cmp
and
inc
retf
sbb
push
sub
jbe
push
pop
lahf
adc
mov
jnp
add
or
add
sahf
push
dec
mov
sub
xchg
fidiv
dec
cmps
(bad)
jg
push
adc
jecxz
add
mov
add
or
or
inc
ja
add
push
je
dec
pop
push
aam
dec
je
in
pop
xor
js
add
pop
not
pop
adc
mov
lea
add
push
ror
or
nop
mov
xor
sub
and
add
push
xor
cmps
dec
outs
add
xor
mov
add
cmps
and
dec
xor
gs
or
dec
shr
mov
mov
mov
adc
inc
nop
sub
adc
fmul
stos
mov
jo
idiv
jne
call
(bad)
and
fldlg2
dec
ret
rol
sub
push
das
sbb
xor
add
adc
pop
add
test
fnsave
cld
mov
push
jo
adc
inc
fimul
iret
(bad)
cmp
xor
inc
repz
cmp
popa
js
js
sbb
and
pop
out
add
or
mov
adc
popa
aam
xor
jno
mov
push
push
jb
push
sbb
sub
adc
popa
aas
and
es
sbb
test
add
and
cwde
pop
mov
and
xchg
mov
es
push
pop
add
stos
dec
movs
test
dec
rol
mov
mov
pop
add
add
add
inc
add
add
call
mov
cmps
or
mov
mov
mov
mov
mov
mov
mov
or
es
jmp
inc
mov
jmp
jmp
jmp
es
es
mov
jmp
jmp
jmp
(bad)
(bad)
call
(bad)
fdivr
(bad)
(bad)
fcos
fdivr
xlat
call
call
call
call
call
or
inc
or
(bad)
clc
dec
stos
or
lods
bswap
dec
push
push
sbb
xor
jno
es
test
mov
push
jl
int3
push
and
lahf
out
aam
mov
sbb
repz
push
or
or
adc
cmp
iret
mov
inc
mov
sbb
iret
repz
sar
push
mov
push
iret
jnp
rcr
jl
mov
loop
ror
stos
or
sar
xor
fbld
test
sub
in
outs
lock
js
jmp
scas
mov
push
xchg
push
les
mov
cmp
mov
cmps
pushf
movs
dec
inc
cmp
push
sbb
pop
mov
ds
out
cs
jl
mov
push
push
nop
pop
fs
mov
ds
push
inc
aad
push
mov
inc
add
imul
push
lock
pop
jmp
pop
inc
jb
sub
imul
sub
and
outs
or
adc
in
or
sbb
adc
adc
push
fdivrp
inc
dec
imul
or
jmp
add
addr16
aad
into
fisubr
adc
and
sbb
jl
stc
pushf
add
(bad)
test
jne
jmp
cs
bound
dec
xor
or
test
or
jl
adc
leave
in
or
in
inc
inc
fs
loopne
aaa
in
or
or
daa
outs
fmul
jge
push
or
jae
jns
data16
jbe
xor
cld
or
imul
xor
data16
out
and
add
(bad)
dec
mov
xchg
frstor
add
enter
mov
or
addr16
push
jl
(bad)
cmp
pop
cli
ins
add
dec
popa
and
adc
jg
enter
xchg
add
jp
adc
jg
fst
and
inc
xor
cmp
sub
mov
push
inc
adc
dec
int3
xchg
sub
push
cmp
sub
mov
outs
inc
int3
adc
mov
add
add
add
sub
xor
mov
stos
adc
test
adc
sbb
pushf
xchg
push
add
aaa
or
push
mov
mov
push
add
or
outs
xor
sbb
and
(bad)
(bad)
cmp
and
mov
mov
mov
add
push
mov
xor
cmp
cmp
es
sbb
(bad)
inc
inc
inc
inc
inc
inc
mov
(bad)
mov
(bad)
mov
(bad)
mov
idiv
push
push
in
xchg
and
repz
xor
nop
mov
clc
push
jl
jmp
out
pushw
mov
lock
jns
shl
ins
clc
cs
cmp
push
fistp
out
mov
pusha
ss
js
scas
fld
in
or
scas
and
dec
repz
jnp
push
cwde
push
mov
push
push
pusha
(bad)
clc
out
in
fiadd
or
push
push
sbb
dec
in
std
iret
repz
js
(bad)
jbe
sbb
sub
iret
repz
int3
hlt
jo
mov
push
mov
pop
es
mov
jbe
mov
int3
xor
push
cmp
sti
mov
push
jo
adc
push
pushf
pop
pop
repz
inc
add
call
div
scas
push
adc
adc
hlt
call
add
cmc
dec
jnp
push
mov
repz
push
int3
push
in
push
fistp
jecxz
rcr
push
shl
push
data16
ret
ret
sbb
hlt
out
lods
pop
jl
mov
sub
sub
or
(bad)
fsub
pop
inc
aam
push
dec
or
push
das
pop
and
sub
push
imul
pop
jl
test
add
repnz
dec
test
dec
push
lods
lea
enter
and
dec
add
dec
add
xor
scas
mov
inc
add
sub
push
ja
inc
push
or
lock
aam
inc
popf
xchg
mov
mov
mov
(bad)
call
scas
fsub
push
ffree
cmp
mov
mov
push
nop
fs
mov
es
lahf
push
pop
inc
outs
push
pop
pushf
or
push
sbb
int3
sbb
adc
scas
cmp
out
(bad)
push
call
data16
out
jge
fmul
mov
add
mov
sub
dec
add
mov
outs
ja
sub
add
xchg
inc
call
jp
push
adc
adc
add
push
cmp
fs
data16
sbb
sub
fs
push
adc
and
fbld
les
dec
and
add
inc
ins
ds
test
or
outs
xchg
push
push
shr
out
leave
rcr
out
out
fidiv
ss
out
and
adc
(bad)
pop
cs
ret
test
xchg
outs
lahf
dec
addr16
fisubr
js
push
aaa
xchg
sbb
mov
xchg
int
clc
clc
sahf
cs
xchg
push
dec
aaa
xor
not
cmp
cs
dec
jle
aaa
lods
inc
pop
outs
sub
cmp
push
enter
jb
test
test
dec
in
add
push
scas
push
sub
loopne
add
mov
mov
das
or
mov
pushf
mov
adc
push
nop
and
or
push
mov
lock
sbb
ss
fcmovb
pop
hlt
and
or
cs
push
jg
(bad)
enter
enter
popf
sub
jb
push
add
lods
loope
pop
pop
inc
mov
jae
sub
push
push
test
and
push
es
call
or
pop
xor
pop
adc
mov
sub
jge
ja
mov
cli
cmp
or
test
pusha
adc
push
and
mov
pop
mov
mov
push
push
addr16
sub
ror
xchg
jb
in
mov
inc
jb
outs
ja
adc
dec
inc
adc
or
inc
ss
adc
and
lahf
push
add
add
push
inc
adc
push
jo
rcr
int3
daa
or
inc
ins
popa
xadd
dec
jo
ja
xchg
sbb
pop
loopne
outs
add
add
dec
push
enter
or
xor
sbb
(bad)
sbb
jb
push
popa
imul
and
cmps
enter
outs
mov
lods
loopne
ja
add
or
push
mov
cdq
out
movs
pop
fisubr
into
adc
push
and
xchg
pop
mov
inc
add
xor
inc
mov
rol
pusha
adc
inc
gs
cmps
inc
jmp
inc
retf
dec
mov
fld
aas
inc
dec
sti
jl
add
xchg
lea
mov
cld
xchg
mov
cmp
mov
or
add
rol
jbe
or
inc
dec
ds
mov
mov
sbb
sbb
adc
sbb
pop
pop
ret
ins
sub
adc
clc
je
out
cmp
xchg
inc
mov
add
xchg
cmp
loopne
fnstenv
inc
push
push
inc
hlt
mov
lock
dec
mov
or
pop
fdivr
add
adc
das
or
jl
addr16
add
movs
mov
mov
fcom
push
in
mov
das
add
sub
inc
frstpm(287
add
ror
mov
lea
sub
xchg
push
dec
push
les
mov
mov
dec
xchg
ret
daa
add
xor
sbb
or
jmp
fnsave
push
clc
shl
or
dec
jne
xchg
add
jno
cmp
hlt
mov
stos
mov
or
pop
inc
es
lea
push
inc
add
or
push
daa
sbb
add
scas
ds
adc
xor
xchg
ins
popf
mov
or
mov
adc
adc
adc
imul
imul
add
push
push
adc
clc
fstp
iret
inc
and
pop
(bad)
lahf
mov
sar
test
jne
ins
sub
lea
pop
and
ret
xor
fimul
mov
pushf
aam
adc
mov
xor
cmp
ds
adc
(bad)
ja
add
ror
or
fwait
ret
pop
jno
jmp
sub
jle
(bad)
jmp
mov
adc
int3
adc
dec
mov
cmp
sub
adc
sub
call
and
cmp
cdq
fcom
sbb
stos
push
xchg
sub
inc
pop
add
xor
int3
les
adc
pop
xlat
aaa
test
mov
jmp
or
dec
jno
ret
pop
ret
nop
nop
cdq
nop
inc
xor
xlat
xor
adc
mov
jo
pop
xor
jecxz
adc
test
inc
push
pop
jg
shl
call
push
pop
sub
mov
add
mov
js
sub
aam
push
lock
fucom
pop
xor
jg
lods
or
sub
icebp
or
sar
add
and
ret
outs
add
lods
sub
push
jp
and
cmps
test
sbb
test
cmp
or
pop
ret
aas
aam
invd
cmp
and
pop
push
adc
mov
dec
inc
aas
mov
push
cwde
xlat
shl
aam
ret
daa
call
test
outs
add
mov
push
aaa
mov
push
mov
push
pop
mov
push
pop
push
ins
ins
push
pop
jnp
push
repz
xchg
push
pop
pop
mov
jecxz
stos
cs
add
(bad)
adc
mov
push
mov
in
cmp
mov
push
enter
add
lock
add
add
pop
lock
add
fadd
xchg
or
sar
out
jle
mov
sub
xchg
jno
sub
add
adc
test
and
jl
enter
adc
and
adc
faddp
add
pop
lock
test
das
xchg
(bad)
cmps
test
js
fucomi
daa
ficom
cmp
inc
xlat
cmps
mov
shl
add
cmp
sub
sar
sub
cmp
cdq
inc
pusha
add
or
(bad)
and
push
cmp
and
adc
cld
xor
add
push
js
jb
outs
pusha
mov
push
inc
pop
mov
and
mov
jmp
or
or
(bad)
rcl
(bad)
pop
mov
not
or
inc
jmp
xor
in
push
leave
dec
test
ret
lock
in
add
adc
dec
cmp
js
dec
xchg
test
push
cmp
aam
lea
nop
repz
dec
or
cmp
add
dec
mov
pop
or
lock
in
sub
or
add
adc
inc
ins
sub
dec
or
inc
xor
inc
xchg
sti
mov
dec
push
or
or
je
cmp
sbb
add
jle
adc
add
sbb
dec
xor
xchg
add
jl
dec
jo
adc
in
jae
or
mov
jns
cmp
add
or
aaa
add
shl
or
adc
or
sbb
cmp
inc
jecxz
push
shl
aaa
js
rcr
loopne
push
mov
(bad)
adc
dec
pop
ret
cmp
push
xor
inc
add
xchg
ror
xor
retf
mov
cdq
push
fsub
push
or
mov
ret
in
call
push
adc
sbb
mov
and
mov
xchg
xor
ins
xchg
xor
add
fld
or
fmul
inc
mov
push
fadd
sub
ret
in
daa
mov
inc
cmp
mov
dec
or
daa
jo
add
mov
xor
inc
mov
pop
inc
jo
les
cmp
add
pop
push
cmp
aas
or
das
int3
cmps
dec
add
and
jo
(bad)
or
popf
jne
xchg
xlat
and
mov
das
inc
mov
pop
and
push
push
mov
shl
lea
push
mov
aas
ins
sbb
or
test
inc
inc
or
movs
icebp
out
add
cmp
ror
dec
call
mov
and
add
push
xlat
jmp
cmp
(bad)
xchg
out
iret
bsf
int
or
sbb
xchg
xor
neg
outs
cmp
nop
adc
jmp
scas
jne
leave
jne
dec
mov
and
push
mov
test
mov
test
fadd
sub
pop
pop
dec
dec
push
inc
call
pop
mov
and
retf
(bad)
or
mov
(bad)
pop
pop
inc
jo
jl
popa
call
jae
mov
jns
jo
sbb
movs
sbb
xchg
neg
or
je
out
adc
adc
fiadd
shr
push
mov
pop
push
or
outs
adc
add
repz
movs
cmp
mov
and
sub
pop
lods
add
aad
out
sbb
sub
mov
iret
loop
loop
pop
or
add
pop
fsub
xor
pop
jo
shr
in
adc
push
mov
adc
add
jns
and
adc
add
add
cmp
je
adc
mov
and
pusha
popf
xlat
shl
mov
fst
and
int3
xor
adc
mov
shr
add
pop
test
bound
lea
fs
add
cmp
sub
push
pop
add
gs
pop
outs
xor
sysenter
mov
sub
pop
(bad)
lds
or
mov
push
and
(bad)
std
or
shr
nop
adc
mov
test
xor
inc
aam
pop
ss
and
nop
jmp
pop
inc
sub
clc
adc
movsx
test
and
jns
or
sbb
or
push
cmp
cmps
out
pop
(bad)
mov
cdq
pop
pop
and
lea
xor
ficom
pop
fdivr
xor
inc
push
jmp
push
inc
push
cld
jno
and
mov
dec
out
loop
dec
popa
scas
sbb
ds
adc
push
lock
cmc
sub
xchg
aad
adc
popa
mov
or
nop
inc
or
pop
stc
pusha
loopne
cmovo
add
pop
mov
retf
add
pop
aad
push
adc
mov
mov
fst
rcl
pop
popa
xlat
loopne
or
popf
(bad)
lea
fiadd
test
sub
in
adc
jp
adc
mov
cmp
push
fcomp
and
jmp
adc
add
out
stos
enter
sub
xchg
sbb
add
sub
imul
jns
pop
cs
ins
pop
sub
sub
nop
adc
mov
sbb
pop
jmp
pop
xchg
js
fistp
or
push
adc
in
je
inc
inc
push
gs
mov
cwde
inc
out
loopne
clc
and
clc
mov
imul
push
in
cmps
add
mov
or
sub
inc
ret
scas
xchg
jne
mov
cmps
jno
ja
and
cs
iret
push
imul
popf
add
xchg
das
mov
sbb
add
movs
and
jo
and
inc
leave
fnstsw
inc
jle
fwait
inc
pop
addr16
enter
imul
and
es
les
test
inc
movs
dec
jmp
lea
or
cmps
rcr
loopne
cmp
call
inc
outs
push
dec
sub
add
loopne
or
add
pop
xchg
dec
add
test
je
aas
mov
inc
in
push
aam
or
xchg
xlat
pop
test
je
push
jne
mov
cmp
arpl
mov
dec
sub
aas
sub
sbb
and
xor
or
inc
sbb
inc
inc
or
push
addr16
clc
jo
inc
pusha
cmps
add
mov
cmp
mov
inc
xor
adc
test
mov
lahf
mov
les
add
xor
add
inc
ins
cmc
sub
jo
or
and
mov
dec
imul
cli
jmp
cld
mov
and
test
pop
popa
imul
xchg
loop
inc
jge
mov
xor
cs
adc
pop
or
inc
push
push
lock
mov
push
cmp
sbb
xchg
das
movs
ret
pop
add
dec
movs
cmp
jmp
or
sti
loopne
cmp
pop
pop
mov
popa
or
add
pop
imul
adc
mov
or
sub
dec
loope
add
(bad)
in
inc
xchg
or
sub
ins
add
adc
xchg
sub
and
sub
mov
fldcw
xor
not
loopne
cmp
iret
adc
sbb
adc
jns
jne
daa
push
adc
adc
dec
mov
je
ret
jecxz
fwait
stos
loope
mov
sub
cmp
ror
xor
ret
xchg
jno
xor
mov
out
clc
xor
stos
jp
ins
and
(bad)
jl
push
adc
or
je
dec
leave
sbb
rol
add
(bad)
and
and
cmp
push
mov
dec
(bad)
ret
push
(bad)
int
add
adc
add
jo
mov
or
mov
repnz
adc
mov
sub
push
or
(bad)
jno
pop
lahf
ror
push
inc
push
nop
and
nop
mov
pop
int3
ins
dec
mov
xlat
add
or
ins
mov
adc
aas
rcr
sar
(bad)
jle
call
out
inc
jmp
test
jne
jae
inc
inc
inc
hlt
jne
dec
xchg
adc
xor
add
xlat
ja
mov
inc
cmp
xlat
adc
lock
imul
lea
cs
and
push
sbb
mov
xchg
mov
std
add
adc
daa
sub
aad
mov
sar
jp
jl
sub
pop
lea
adc
mov
add
adc
add
sbb
add
pop
add
lds
aad
adc
iret
daa
inc
arpl
xchg
imul
fisubr
cld
pop
push
push
pusha
test
xchg
pop
xchg
rcr
(bad)
cmp
je
mov
mov
xchg
add
and
scas
dec
cld
jo
aas
cwde
mov
or
pushf
jmp
and
adc
mov
xor
xchg
pop
lahf
adc
pusha
sbb
pop
or
outs
and
push
inc
(bad)
sub
(bad)
stos
push
adc
add
pop
push
or
sub
mov
test
fdivrp
fwait
test
dec
out
pop
jmp
cmp
je
mov
test
jbe
cmp
rcl
push
xchg
adc
pop
dec
gs
fsub
or
push
or
adc
mov
je
pop
or
ins
mul
or
sbb
or
arpl
sbb
or
sub
xchg
rcr
aas
test
inc
add
push
or
adc
icebp
bound
mov
in
mov
ret
inc
adc
jbe
xlat
cmp
push
sbb
cmp
cmp
pop
push
aas
or
mov
ja
mov
push
inc
xor
add
add
jmp
push
sbb
and
mov
xchg
ror
jg
int
sbb
cmc
test
inc
ret
adc
xor
and
sub
clc
mov
push
imul
xchg
retf
ret
sub
fidiv
and
and
push
icebp
sbb
jae
or
inc
inc
add
and
jmp
pop
loopne
loope
push
ror
jg
test
pop
cmp
je
ss
inc
and
sbb
or
dec
add
outs
daa
jbe
sub
outs
mov
mov
cmp
gs
push
idiv
add
test
mov
add
cwde
rcr
mov
push
movs
cmp
enter
lahf
xor
ret
das
cmp
jb
cwde
rcl
jg
push
ret
(bad)
add
in
and
xchg
fcom
das
push
xchg
sbb
lods
adc
pusha
aam
cs
and
outs
dec
sub
aas
mov
or
jne
std
mov
add
jae
cmp
aaa
cld
mov
push
js
xchg
jne
jge
inc
(bad)
das
inc
jo
xchg
stc
ret
adc
or
adc
add
aas
sub
fsub
or
and
push
add
or
push
inc
out
mov
ins
add
das
mov
xchg
mov
pop
mov
outs
add
shl
rol
inc
popa
psubsw
mov
nop
dec
sbb
shl
bound
pop
add
inc
push
out
xchg
ret
inc
in
not
push
pop
add
jp
jmp
adc
jo
or
stos
add
add
mov
and
and
inc
adc
aas
dec
inc
bound
cmp
mov
mov
push
inc
jmp
sub
jmp
pop
sub
xor
xor
mov
add
inc
push
loope
xchg
pop
fcomp
ins
loope
sub
pop
sub
gs
pop
ret
cmova
pusha
add
or
lea
das
(bad)
xor
mov
iret
ror
and
rol
add
add
xlat
fnop
adc
add
xor
rol
add
add
sub
jl
adc
add
xor
aaa
push
ror
adc
ret
add
pop
ins
aaa
adc
inc
sub
daa
adc
push
cmp
and
xor
or
add
sbb
dec
inc
call
dec
js
arpl
bnd
or
rol
add
out
(bad)
lods
call
push
cmp
jno
stc
push
sbb
dec
ins
push
mov
ror
sbb
or
add
push
mov
pop
add
bound
shl
mov
mov
adc
movs
mov
add
or
adc
dec
dec
push
movs
jle
mov
aaa
jae
call
or
not
push
xor
jp
outs
ret
call
ins
pop
and
cmp
xor
cmp
sbb
cmp
jne
xor
ret
and
clc
jne
sub
inc
pop
push
sbb
fimul
xchg
mov
nop
jno
mov
dec
xor
outs
pop
jne
push
adc
pop
(bad)
push
je
(bad)
or
mov
setb
out
ret
jmp
or
jne
fbld
sub
je
add
and
adc
(bad)
pop
rcl
(bad)
pop
cs
int
mov
or
rcl
pop
adc
lea
xor
test
jbe
jnp
jne
push
mov
xor
push
dec
and
cld
push
inc
push
push
push
push
xchg
mov
dec
mov
pop
mov
adc
mov
dec
les
inc
add
sub
test
jbe
iret
call
popf
xor
les
nop
push
pusha
test
adc
mov
cdq
mov
add
cmp
nop
push
push
xchg
loop
(bad)
add
sbb
fadd
cs
push
cmp
jge
adc
fimul
push
pop
sub
add
lods
push
dec
and
gs
adc
xchg
xchg
sub
pop
out
imul
jne
add
adc
and
mov
inc
sbb
ins
pop
dec
fisub
xor
aaa
xchg
nop
or
sbb
inc
dec
das
pop
dec
xor
rcl
das
mov
cdq
ret
loopne
rol
(bad)
rol
mov
retf
inc
dec
ror
push
xchg
add
fcom
dec
add
push
inc
or
and
or
xchg
and
fmul
ret
cmp
inc
xor
fcomp
scas
sub
push
and
add
xchg
adc
inc
mov
sbb
ds
and
cld
or
aas
or
dec
gs
in
jnp
sub
cli
clc
dec
and
jb
gs
push
arpl
(bad)
lds
or
sar
or
xchg
xchg
leave
nop
icebp
sbb
inc
loopne
scas
pop
out
xchg
and
push
fwait
sbb
or
push
or
enter
mov
push
push
sar
sub
add
pop
sbb
mov
mov
push
and
lea
cmp
adc
dec
retf
mov
dec
add
add
dec
or
mov
(bad)
push
mov
or
loope
cmps
add
fcomp
or
sub
adc
mov
mov
add
or
leave
xchg
xchg
inc
xchg
mov
add
aam
daa
retf
add
xor
iret
and
imul
pop
add
xchg
ins
inc
or
mov
cmps
leave
cwde
dec
cmp
test
popf
retf
add
push
pusha
mov
mov
sahf
dec
inc
popf
sbb
nop
cmp
scas
add
push
add
sti
nop
mov
sub
smsw
xchg
dec
inc
add
movs
push
ret
fist
xchg
nop
xchg
sub
pop
les
outs
and
adc
sub
inc
push
or
xlat
mov
lahf
pop
data16
jne
mov
js
inc
repz
and
mov
sbb
mov
imul
retf
mov
movs
mov
xor
ins
bound
push
dec
aaa
or
(bad)
out
cmp
movsx
cmps
rol
jg
push
mov
xor
bound
mov
push
mov
call
(bad)
outs
inc
xor
xchg
xchg
inc
pop
jmp
xor
adc
cmp
psrld
pop
call
xor
adc
mov
add
nop
add
pop
ret
mov
jmp
mov
cmp
sbb
or
add
adc
dec
adc
sub
aad
(bad)
loopne
dec
sub
add
or
lea
xchg
xchg
add
dec
jne
bound
(bad)
inc
pop
mov
jo
add
jmp
xchg
out
movs
adc
push
add
mov
mov
pop
ret
push
das
adc
mov
ret
test
je
mov
or
inc
add
or
ja
cwde
or
fst
ret
add
adc
sbb
jno
ret
push
xlat
ins
bound
stc
push
mov
mov
sbb
call
mov
dec
jo
cli
cs
sbb
inc
pop
add
xor
xor
pusha
rol
inc
cmp
mov
fcom
imul
add
lea
mov
sbb
(bad)
int
sub
je
pushf
int
mov
call
inc
mov
aas
loope
inc
jae
adc
je
pop
mov
and
add
or
cmp
xchg
push
and
ins
outs
sub
nop
test
dec
pop
inc
inc
sub
mov
add
or
sub
outs
push
fs
dec
pop
fdivr
pop
and
cmp
add
fdiv
retf
push
jl
or
dec
or
dec
mov
cwde
cmp
daa
stc
mov
in
ret
test
aad
adc
cwde
popf
rol
mov
aaa
dec
inc
fsub
mov
mov
sbb
je
pop
mov
arpl
pop
shl
inc
and
rol
push
les
push
(bad)
cld
retf
inc
cmp
ret
fimul
mov
sbb
dec
nop
cmp
pop
push
or
retf
push
push
push
mov
sbb
aas
mov
adc
pop
je
push
or
adc
and
pop
sub
ins
aas
xor
lock
shufps
and
call
fwait
and
inc
jo
mov
push
pop
pushf
adc
int
or
jnp
inc
stos
pop
xchg
or
push
pusha
inc
mov
mov
lock
shl
mov
outs
adc
mov
xchg
cmp
test
cmps
nop
xchg
xchg
cwde
fldenv
fs
jmp
adc
ins
cmp
fidiv
adc
int
mov
ins
sub
ret
and
pop
or
push
inc
dec
mov
sbb
cli
idiv
(bad)
jg
bound
adc
je
mov
xchg
repz
xor
lea
inc
aaa
mov
inc
sbb
or
inc
cmovs
leave
je
cmp
mov
inc
cmp
mov
push
adc
les
adc
iret
push
cmps
movs
inc
sub
adc
es
inc
shl
xchg
hlt
sbb
inc
inc
pop
pop
xor
ja
dec
movs
jnp
js
adc
sbb
push
mov
mov
jb
xchg
mov
dec
mov
xor
lock
(bad)
mov
jle
dec
xor
mov
les
jp
xor
adc
adc
loop
add
shl
fcom
dec
call
jge
xor
mov
dec
call
adc
dec
jmp
mov
adc
imul
push
pusha
inc
mov
push
or
clc
lods
dec
lea
cmp
pop
imul
add
aas
push
stos
test
pop
cmp
xor
and
add
xor
clc
mov
push
and
call
jne
xchg
pop
jg
fimul
inc
cmp
xchg
int3
jg
sar
push
iret
xchg
dec
xchg
pop
mov
inc
loopne
test
or
fadd
xchg
adc
add
mov
pusha
push
shl
inc
mov
add
sbb
sahf
fisttp
fstp
add
and
pop
push
inc
and
pop
add
rol
add
or
xchg
test
mov
push
pop
cld
add
push
popa
inc
mov
sbb
mov
push
imul
sub
push
clc
mov
mov
scas
cwde
int
or
fld
mov
dec
xor
jl
lods
loopne
jmp
addr16
sub
bound
xor
pop
das
or
shr
jb
pop
add
add
dec
sbb
mov
mov
sbb
test
std
mov
jae
or
and
push
popa
or
mov
lea
or
push
pop
test
inc
sbb
inc
push
js
jno
add
les
outs
add
cmp
ror
popa
add
and
js
push
in
dec
or
sbb
fidiv
jne
xlat
add
add
mov
add
scas
pushf
mov
sub
je
sbb
or
mov
push
imul
mov
stos
sar
mov
outs
adc
sbb
inc
(bad)
pop
bound
push
bound
ret
xchg
xchg
pop
dec
dec
push
adc
inc
add
pop
std
cmps
in
ret
xchg
sbb
sbb
sbb
test
or
xchg
pop
fiadd
pop
inc
add
nop
test
int
ins
arpl
sbb
mov
popa
(bad)
(bad)
fmul
fild
fsubp
fstp
fwait
mov
adc
xor
lea
fst
aas
call
or
sar
mov
add
mov
lea
pop
sub
adc
jb
inc
lea
shl
out
idiv
or
mov
push
ins
push
mov
jecxz
dec
pop
js
inc
arpl
and
mov
or
rol
xchg
push
loope
pop
or
mov
imul
adc
mov
test
mov
adc
inc
imul
aaa
or
test
push
adc
cmp
dec
jne
add
movs
fcom
leave
aam
ret
sub
mov
clc
jge
out
js
cmp
mov
ficomp
xchg
test
loope
shr
xor
inc
cmps
sub
mov
cmps
mov
mov
test
inc
arpl
hlt
cmp
add
push
or
gs
xlat
dec
sbb
push
add
or
clc
mov
add
pop
add
or
and
sub
adc
xlat
out
lock
add
inc
and
push
into
pop
in
ins
xor
loopne
jmp
sbb
adc
add
adc
jne
and
scas
sub
add
inc
sub
push
xor
dec
push
inc
(bad)
sahf
xor
(bad)
sub
cmp
sbb
mov
mov
ret
dec
jnp
inc
sar
sbb
(bad)
cmp
(bad)
aaa
call
xor
in
or
push
inc
pop
ja
in
push
xor
pusha
and
sti
add
and
scas
inc
cmp
daa
and
pop
loope
dec
adc
lea
call
aaa
es
fcom
add
scas
cli
in
outs
cld
jne
sbb
adc
loopne
out
js
icebp
adc
cmp
mov
add
jnp
inc
inc
xor
adc
mov
add
ins
ror
call
add
or
adc
adc
or
adc
inc
push
dec
inc
add
scas
fwait
mov
sbb
in
in
dec
or
(bad)
arpl
je
retf
rcr
test
inc
inc
cmp
add
fnstcw
dec
add
movntq
mov
sub
or
shr
lock
mov
add
call
jmp
adc
movmskps
mov
pop
fadd
loopne
nop
clc
cmc
nop
inc
sbb
push
in
pop
lods
test
aas
imul
cmp
shr
push
pop
adc
call
shl
int3
stos
in
in
icebp
inc
imul
mov
jne
pop
les
dec
xor
cmp
addr16
je
daa
jno
push
sub
sub
jnp
aas
mov
add
ret
sub
jns
or
pop
dec
push
sbb
rol
or
ins
sbb
mov
push
std
mov
push
lea
jne
pop
push
xor
mov
das
push
ja
mov
and
xchg
push
xchg
add
adc
jge
inc
aaa
fsubp
rcr
idiv
mov
sbb
cs
xor
push
or
cmp
mov
ret
pusha
je
lahf
push
loope
jle
dec
jmp
mov
jecxz
les
push
and
das
mov
cmp
sbb
jbe
mov
lea
mov
int3
pop
add
inc
sbb
or
loope
xlat
sub
(bad)
loop
mov
mov
inc
or
add
push
ss
sub
adc
add
bound
pop
arpl
pop
add
fild
inc
or
push
mov
push
mov
daa
or
icebp
hlt
out
or
push
mov
jg
xchg
scas
mov
mov
jle
inc
int3
or
add
idiv
jle
sbb
push
sub
aaa
cmc
push
add
xor
push
add
adc
inc
or
xor
mov
mov
fcomip
add
mov
push
sub
add
mov
push
mov
mov
jb
cmp
or
or
push
loope
rcr
fisttp
loop
sar
loopne
nop
ins
loope
js
or
xchg
cmp
lock
rol
push
pop
mov
pushf
and
push
add
jmp
cli
lock
dec
jle
sub
pop
nop
and
xlat
pusha
add
xchg
sbb
ds
mov
clc
sbb
imul
cld
lea
or
dec
dec
push
mov
add
adc
jo
xor
cmp
(bad)
je
rcr
or
ss
fldpi
and
je
nop
(bad)
bnd
or
dec
inc
nop
fiadd
or
sbb
cmp
dec
mov
mov
mov
ss
inc
sub
call
sbb
in
lds
shl
inc
pop
loopne
test
adc
sub
mov
mov
and
mov
adc
or
sbb
jne
out
pusha
pop
bound
adc
cmp
or
cmp
adc
add
es
or
push
(bad)
cmp
dec
je
add
pop
jmp
ret
loopne
(bad)
rcl
adc
ret
pop
repnz
jmp
outs
jl
cmps
jnp
dec
push
add
jle
push
(bad)
jmp
xchg
pop
rol
ins
adc
nop
je
mov
adc
inc
sbb
xchg
pop
(bad)
jne
jns
fimul
xor
inc
mov
data16
fild
pushf
and
cmp
loop
add
imul
add
mov
mov
dec
test
add
jmp
xor
cmps
test
mov
xchg
aam
inc
dec
cmps
add
popa
loopne
pop
out
xchg
or
dec
sub
mov
add
jmp
mov
xor
inc
add
or
pusha
lea
aam
mov
add
adc
imul
and
or
cmp
sbb
mov
adc
jo
push
xor
or
inc
sbb
sub
adc
push
dec
add
hlt
adc
ja
movs
sub
xor
xor
dec
dec
jae
aas
mov
aas
shl
call
je
add
sub
or
and
rcr
lods
dec
and
sbb
lock
fsubr
xchg
sbb
sbb
test
test
add
sub
and
icebp
lea
retf
(bad)
mov
mov
outs
xchg
std
jge
xchg
cmp
std
sar
pusha
and
and
inc
push
sub
cmps
jo
jg
(bad)
jg
adc
movs
xor
or
sub
sbb
shl
(bad)
rcl
aad
movsx
rcr
dec
je
mov
inc
inc
call
xchg
push
mov
add
and
or
fiadd
mov
add
push
push
xor
aaa
test
imul
pop
out
or
ss
cmp
shl
fisttp
sbb
fst
sbb
pusha
mov
jl
add
mov
pop
rol
push
add
inc
cmp
sub
mov
push
gs
loope
add
test
pop
sub
cmps
cmp
push
dec
cmp
sub
(bad)
add
push
and
pop
dec
push
inc
loopne
call
icebp
ret
xchg
shl
inc
add
stc
loope
mov
mov
fs
pop
in
in
enter
xchg
mov
push
lahf
outs
push
fisub
adc
adc
xchg
inc
lahf
push
sbb
fadd
sbb
adc
stc
fs
cmp
in
bound
jl
sub
mov
aam
mov
rcr
dec
or
in
xor
pop
dec
mov
and
rol
adc
mov
pusha
cmps
add
ror
inc
cmpxchg
pop
dec
inc
mov
dec
xor
push
sbb
mov
lock
or
mov
mov
adc
jmp
ror
inc
js
jmp
lahf
je
sbb
shl
nop
pop
xchg
aas
add
into
rol
sbb
xchg
jne
adc
ret
mov
enter
pop
add
add
or
dec
fs
ret
ret
pop
xchg
push
push
adc
jno
inc
in
add
xchg
stos
xor
pop
ret
mov
ret
and
sub
mov
adc
xchg
mov
jnp
cmc
xchg
les
jmp
jmp
aas
jbe
es
popf
xor
dec
retf
sub
dec
adc
xchg
(bad)
je
mov
and
retf
cld
mov
inc
adc
je
push
test
or
pop
push
add
sahf
jne
es
popf
jae
fs
and
jo
test
sbb
or
add
nop
push
push
push
add
and
arpl
jmp
adc
and
and
jo
repnz
cmp
adc
daa
or
and
xor
or
and
jmp
push
mov
add
loop
call
mov
push
aad
aaa
inc
loope
inc
or
mov
xchg
push
add
and
ds
or
shl
jae
dec
jnp
out
es
inc
xchg
fs
js
pop
dec
lock
iret
or
mov
push
or
inc
pop
sbb
lock
paddb
xchg
or
das
add
mov
push
not
inc
outs
dec
sti
cmp
xor
(bad)
fadd
jns
daa
or
xchg
xor
hlt
xchg
inc
xchg
rcr
fsubr
add
inc
ins
sbb
mov
dec
mov
and
push
outs
cmp
cld
lea
mov
loopne
jb
sub
or
sub
lea
dec
test
je
dec
lock
push
inc
data16
push
dec
sbb
push
and
cwde
hlt
or
dec
pop
jbe
stos
mov
mov
imul
xchg
stc
add
pop
sub
loopne
xor
or
inc
inc
out
cld
sub
mov
pop
pop
jmp
stos
dec
sahf
shl
push
aas
and
iret
sbb
sbb
pushf
push
or
mov
cmp
xor
push
xchg
push
ret
xchg
(bad)
shl
pusha
jne
test
test
(bad)
aaa
test
ret
and
or
mov
fimul
or
or
push
pop
popa
add
push
push
fs
mov
add
lea
or
cmps
xor
cmp
add
xchg
setno
(bad)
sub
call
add
adc
or
or
inc
inc
adc
ret
nop
(bad)
xor
outs
loop
jmp
fucom
pop
rcr
add
fisubr
rol
jmp
or
pop
and
leave
sub
xor
inc
jb
inc
or
call
in
shl
inc
sub
popa
mov
aaa
(bad)
push
je
sbb
push
lea
pop
scas
test
adc
mov
mov
call
adc
mov
push
sbb
test
pusha
inc
and
or
inc
addr16
test
scas
sbb
rcl
xchg
or
scas
adc
jmp
fcomp
loopne
jae
inc
and
add
push
cmc
jbe
xchg
enter
dec
js
or
jl
sar
add
cmp
add
icebp
inc
jg
dec
loopne
loopne
mov
push
add
ins
cmp
adc
dec
add
gs
push
adc
add
mov
fisttp
dec
or
dec
loopne
dec
pop
sub
sub
nop
iret
jae
mov
jl
xor
and
and
fwait
outs
scas
(bad)
add
mov
je
imul
jmp
in
in
inc
cmp
xchg
push
bound
je
mov
mov
cmp
(bad)
and
mov
repz
mov
and
dec
push
push
dec
push
fcom
aam
xor
out
sub
jno
(bad)
jno
call
dec
clc
push
sbb
jmp
sbb
retf
add
call
nop
or
mov
daa
ret
retf
daa
inc
pop
out
stos
xor
aaa
not
cmps
out
pop
daa
push
sbb
sbb
repnz
and
pop
mov
mov
mov
add
or
nop
inc
fadd
js
xchg
push
mov
repz
mov
aam
mov
jno
xchg
test
aaa
mov
cmp
xchg
cmp
add
xchg
lahf
enter
or
mov
ret
xor
rol
push
out
sub
dec
leave
jb
cmp
test
lahf
in
xchg
dec
cmp
xor
in
loopne
jnp
mov
xor
mov
xchg
mov
pop
fwait
inc
in
jno
xchg
inc
sub
jne
push
daa
and
popa
adc
fnstenv
cmp
adc
rcl
mov
add
mov
sub
ret
pop
cmps
jno
cmp
stos
lods
or
pop
xor
lods
pop
xor
mov
inc
mov
adc
aad
(bad)
aam
xor
movs
loope
sbb
or
add
popa
mov
dec
mov
in
adc
dec
sub
sub
mov
jge
and
shl
mov
add
ror
sbb
fidiv
clc
pusha
inc
shl
test
in
mov
sub
and
arpl
add
retf
push
or
push
les
aam
ret
pop
movq
pop
or
nop
or
pop
leave
jecxz
sub
adc
dec
sti
push
fist
or
cmp
lea
mov
jl
fmul
adc
xchg
sbb
rcl
pop
pusha
pop
jl
dec
lds
or
xchg
lods
adc
push
pop
inc
lods
pop
mov
xchg
cmc
and
cmp
or
cld
push
jne
shl
adc
adc
dec
mov
mov
dec
addr16
movs
mov
pushf
in
add
movs
pusha
add
test
mov
retf
fld
ins
mov
and
mov
test
mov
pushf
add
jnp
jl
cmp
or
fstp
mov
aam
outs
sbb
rcr
loopne
cmp
jbe
inc
inc
inc
and
test
(bad)
inc
pop
and
and
pop
out
retf
das
xchg
(bad)
adc
jno
pop
mov
aam
jns
xor
inc
clc
psrlw
scas
dec
ss
(bad)
sti
push
ja
jmp
mov
mov
imul
push
lahf
inc
cwde
ins
mov
sahf
and
lahf
imul
in
cmp
mov
dec
cld
xchg
xchg
mov
enter
ins
leave
iret
aam
pop
lea
xchg
push
pop
pop
push
mov
lods
xchg
push
jno
cmp
inc
popa
jmp
or
pop
pop
mov
leave
loope
inc
jo
and
jnp
lahf
dec
cmps
cmp
lea
rcl
enter
push
or
fdivr
pop
ss
out
dec
sub
nop
jecxz
popa
add
inc
adc
xchg
nop
xchg
sub
add
or
jmp
aaa
jo
in
and
jmp
xor
fbld
xchg
sbb
mov
mov
ret
jnp
mov
or
add
mov
in
call
in
fdiv
std
add
mov
popf
mov
xchg
test
cdq
int
test
push
push
in
push
mov
mov
xor
dec
mov
add
bound
mov
and
pop
inc
sub
add
cmp
loopne
fldcw
add
jl
popa
call
jb
sub
or
loop
xchg
adc
jmp
pop
inc
add
jl
pusha
xor
dec
mov
push
or
jmp
or
lock
scas
repz
test
into
dec
fiadd
push
pusha
adc
daa
mov
test
and
jle
sub
lods
adc
pop
push
fs
add
jmp
sbb
or
rcr
movs
pop
inc
in
pop
iret
in
ins
push
adc
loopne
and
add
test
add
mov
lods
or
cmp
iret
lods
add
adc
push
cmovge
hlt
dec
mov
dec
cmp
push
jp
idiv
repz
outs
adc
lock
push
sub
jno
inc
push
xor
mov
ins
mov
push
inc
cmp
sbb
add
and
add
call
mov
mov
call
xor
lock
lods
cmps
mov
pop
adc
pop
mov
mov
mov
cmp
jne
adc
cdq
leave
sbb
mov
add
dec
sub
adc
dec
or
mov
jg
push
mov
pop
lds
inc
sbb
rcr
sbb
dec
test
cmp
inc
fcomip
mov
dec
hlt
mov
push
add
mov
and
out
pop
nop
or
jne
dec
ins
xor
bound
push
hlt
xchg
pop
lock
cld
iret
pop
shl
pushf
pop
fxch
mov
mov
push
pop
or
add
sub
sbb
jne
sbb
mov
popa
pop
xchg
and
not
xchg
dec
test
ret
pop
inc
or
pop
cmps
sbb
jl
adc
lock
and
jp
ror
call
call
scas
sbb
pop
xchg
inc
mov
cdq
sub
adc
add
fs
inc
add
inc
daa
sub
mov
test
(bad)
imul
in
and
xor
or
jbe
or
cs
nop
jmp
ror
jb
jnp
rol
sbb
jno
dec
nop
pop
mov
les
(bad)
pusha
push
out
lods
pop
or
push
pusha
add
pop
dec
jns
add
mov
xchg
hlt
je
ret
pusha
ja
inc
or
mov
mov
in
aam
sbb
cmp
ja
call
lods
mov
and
cmp
and
push
mov
jno
repz
cld
rcl
or
sbb
arpl
mov
cli
add
and
test
imul
shl
mov
dec
popa
mov
mov
or
(bad)
lahf
adc
imul
imul
sub
inc
dec
jne
push
or
mov
adc
mov
(bad)
mov
sbb
pop
xchg
add
xlat
or
mov
push
(bad)
fild
pop
adc
fsubrp
inc
pop
and
adc
push
adc
xor
dec
ins
into
jg
mov
mov
xchg
mov
xchg
in
in
cmc
push
push
push
jp
lds
out
mov
call
lea
xchg
lea
or
xchg
jmp
sbb
pop
mov
and
jae
push
(bad)
ins
pusha
rcl
mov
push
pop
shl
xlat
or
iret
cmp
into
mov
sub
lds
or
test
mov
mov
ret
inc
jecxz
pusha
inc
mov
(bad)
jmp
pop
pop
stos
add
mov
add
ss
pop
ss
leave
popa
cmp
mov
aas
(bad)
jmp
adc
jmp
push
sar
lds
pop
loope
adc
outs
in
aas
(bad)
add
or
add
pop
xlat
stos
inc
mov
add
adc
cmp
jle
in
pop
inc
mov
add
pushf
xor
call
adc
leave
je
add
sbb
mov
push
xlat
cmc
inc
bound
mov
outs
pop
daa
xchg
call
inc
jmp
fist
loope
cs
mov
jo
xchg
jne
inc
sbb
push
xor
dec
leave
ja
cmps
jle
dec
inc
js
pop
mov
lea
nop
nop
adc
mov
sub
add
and
xchg
outs
pop
add
or
fcom
cmc
adc
or
ret
lock
iret
ja
xor
push
or
mov
and
sub
retf
or
add
jmp
sub
int3
add
lods
add
lods
cld
mov
dec
(bad)
and
(bad)
rol
cmps
cld
fisubr
add
inc
add
inc
lea
sub
les
dec
cmp
or
sub
js
mov
stos
push
jb
retf
and
adc
sbb
retf
sbb
jle
cwde
add
loopne
pusha
sub
sub
and
xchg
sub
inc
stos
add
mov
enter
retf
cld
mov
lock
pop
data16
push
dec
pop
jo
pusha
gs
ficom
xchg
cwde
ins
mov
loopne
test
mov
xchg
je
pusha
rcl
sub
sbb
jnp
inc
adc
push
cmp
pop
add
and
sahf
loopne
add
rol
jmp
cli
mov
mov
ficom
sbb
out
push
lea
add
addr16
push
inc
pushf
mov
ins
jecxz
push
push
pop
test
ds
in
push
xor
scas
cmp
adc
add
je
and
retf
jp
test
(bad)
mov
push
xor
xor
mov
and
xor
ss
push
mov
add
jl
cld
nop
cmp
rol
pop
push
test
add
adc
push
movs
enter
ret
mov
das
adc
pop
out
and
and
adc
push
fdiv
xchg
adc
push
fsubr
jl
xchg
xchg
ds
pop
xlat
clc
in
add
add
xor
(bad)
sbb
out
and
retf
(bad)
inc
jg
ret
jle
fnstenv
cmp
in
outs
dec
jnp
mov
xchg
mov
inc
or
mov
add
add
push
sbb
jg
je
mov
mov
lea
mov
shr
or
xlat
div
fisub
inc
add
sub
push
jecxz
add
cmp
mov
add
cmp
jne
js
test
popa
push
pushf
lea
jecxz
and
jo
pop
lahf
inc
cmp
adc
pop
into
inc
in
mov
fmul
aam
adc
cmp
(bad)
loop
push
or
(bad)
pusha
jbe
std
cs
xor
inc
add
mov
add
and
fs
mov
daa
xchg
adc
mov
sub
and
pop
lods
add
ror
ins
add
hlt
or
jmp
pop
and
sub
push
mov
std
ret
xor
mov
jg
inc
or
and
add
repnz
sub
xchg
pop
pusha
jecxz
les
sbb
push
xchg
sbb
cmp
push
dec
lahf
mov
and
push
push
and
push
adc
ret
sub
test
cmp
push
les
xchg
fcom
js
mov
xchg
jne
xor
and
scas
lea
lods
lock
mov
jge
loope
outs
je
and
and
mov
or
sbb
sbb
jmp
dec
cmp
push
xor
cmps
sbb
test
les
fadd
bound
or
xchg
inc
pop
pop
adc
gs
popf
or
push
or
pop
sbb
je
mov
sub
je
mov
lds
sbb
fiadd
js
inc
shl
sti
ror
je
mov
fld
bound
and
loope
mov
loope
adc
push
and
cdq
xchg
sbb
xor
je
shl
retf
push
jle
push
addr16
add
inc
stos
in
xor
mov
or
out
pop
es
(bad)
jne
mov
les
ror
adc
cld
xor
cmp
push
pavgb
xchg
repnz
(bad)
retf
and
push
sub
mov
and
stos
jae
hlt
mov
or
push
inc
loope
outs
and
sub
aaa
push
outs
adc
out
lds
jo
add
and
inc
lods
xor
inc
lods
dec
test
pushf
add
nop
xchg
and
cmp
or
or
repz
hlt
push
inc
lea
or
test
call
lahf
test
dec
repz
jg
inc
test
cmp
jne
xor
(bad)
ror
or
rcr
lock
rcr
loope
mov
cmp
push
and
inc
jmp
add
(bad)
jo
(bad)
das
jns
js
push
push
or
cmp
xchg
sub
ins
and
es
pop
pop
adc
push
sahf
retf
push
test
hlt
xor
mov
or
add
add
add
bnd
sbb
outs
adc
je
push
inc
cmp
mov
xchg
push
mov
pusha
jo
(bad)
jl
rol
or
adc
clc
mov
xchg
xchg
in
or
enter
push
pusha
test
and
fstp
les
in
jae
inc
sub
dec
xlat
dec
int
(bad)
retf
mov
push
shl
mov
jae
push
das
jmp
int
js
jecxz
and
cmp
mov
clc
jne
inc
sbb
pop
adc
sbb
pop
jp
xchg
retf
xchg
bound
push
pop
jecxz
cmp
inc
xchg
jle
lds
xor
xor
test
push
shr
mov
into
(bad)
fld
jb
add
mov
(bad)
sbb
imul
arpl
mov
and
imul
mov
and
push
imul
jge
cmp
pop
call
pop
loop
mov
push
mov
cdq
or
or
sbb
pop
pop
cmps
test
repnz
test
dec
sbb
call
ret
(bad)
mov
and
(bad)
and
and
sbb
pop
dec
pop
pop
es
adc
mov
add
dec
inc
call
movs
mov
jae
add
aad
inc
xlat
add
add
adc
mov
mov
push
xor
mov
arpl
xor
and
push
sub
je
leave
push
fwait
imul
fimul
push
inc
xor
and
ficom
dec
or
adc
xor
pop
push
xor
hlt
xor
cmp
ret
out
sub
ins
adc
mov
add
mov
add
mov
mov
scas
or
jb
xchg
adc
xchg
or
loopne
push
add
fwait
adc
inc
loopne
sbb
pop
enter
(bad)
in
add
(bad)
jne
mov
ds
xor
clc
(bad)
fs
bound
dec
push
js
movs
cdq
ror
mov
sub
xchg
and
cmp
mov
jp
pop
cmp
rcr
fiadd
adc
xor
fisttp
dec
dec
ss
cli
add
inc
add
inc
dec
add
test
jne
sbb
in
cmp
push
jnp
int
les
(bad)
cmp
jnp
das
mov
xor
inc
imul
clc
add
dec
in
sahf
xor
xchg
add
xor
outs
mov
adc
movs
js
adc
push
aaa
and
or
sbb
push
es
or
unpcklps
(bad)
addr16
cmp
mov
add
inc
fwait
inc
test
push
inc
dec
aam
pop
mov
and
data16
push
add
hlt
jl
aam
jge
jnp
mov
sub
mov
add
fimul
(bad)
sub
pop
test
push
jmp
dec
or
push
mov
leave
mov
mov
push
push
push
lea
sbb
sbb
push
or
loopne
stos
push
adc
je
add
mov
aaa
and
mov
pop
xor
arpl
or
push
push
sti
dec
inc
stos
fisub
adc
mov
ins
lods
lds
inc
xchg
sub
and
adc
jne
cmp
jg
sbb
hlt
into
adc
fwait
aam
sub
and
xchg
pushf
hlt
dec
adc
and
xchg
in
inc
fisubr
mov
fistp
into
in
add
mov
xor
cld
mov
inc
add
sbb
inc
lods
jl
add
cld
push
aaa
mov
jp
fnstcw
jmp
in
loope
lock
rcl
sub
sub
pop
iret
ror
js
gs
fs
jnp
and
pop
pop
aas
mov
inc
pop
add
aam
sub
enter
push
pop
or
dec
daa
xor
push
adc
inc
add
mov
xor
sub
or
mov
and
and
test
aas
mov
xchg
js
mov
add
ds
mov
or
push
das
adc
sbb
inc
xlat
jle
test
adc
pop
inc
add
(bad)
xlat
push
inc
mov
mov
adc
loop
not
push
add
cld
nop
cs
or
pop
sbb
adc
aas
add
lahf
push
mov
in
iret
cwde
out
nop
lock
test
or
adc
push
adc
push
or
retf
loope
sbb
mov
jns
mov
std
jno
adc
jno
sub
js
push
aad
cmp
jne
out
add
test
adc
jne
dec
jmp
js
push
xchg
add
mov
add
ret
nop
fs
adc
lock
and
sbb
xchg
js
test
je
movsx
push
push
add
mov
test
jmp
cmp
mov
or
sub
arpl
jns
aaa
mov
mov
xor
push
inc
movs
inc
sub
add
mul
loope
pop
daa
sbb
js
loop
mov
push
shl
rcl
repnz
or
mov
cmp
push
mov
xor
push
cld
mov
and
cmps
cmp
push
std
popf
(bad)
mov
dec
inc
jo
cmp
daa
xor
test
ds
(bad)
jl
cmp
and
popa
sbb
add
test
xchg
add
out
or
repnz
loopne
sbb
mov
shl
and
loopne
xor
adc
popf
adc
rol
test
or
mov
inc
dec
pop
add
je
dec
or
xchg
arpl
test
imul
dec
rol
retf
rcl
int3
enter
mov
pop
pusha
jb
dec
callw
into
mov
data16
(bad)
jge
mov
xor
and
mov
mov
pop
push
fist
mov
add
add
cmp
popf
sar
or
ss
adc
mov
shl
ret
scas
movs
add
mov
scas
xor
sub
imul
iret
push
hlt
jmp
add
adc
cmp
sbb
sbb
ja
add
xchg
push
mov
rcr
mov
xor
mov
xor
xor
sub
mov
inc
pop
popa
pop
daa
mov
fs
add
rol
sbb
cmp
aam
pusha
movs
hlt
rol
add
into
xor
in
pop
aad
pop
jmp
retf
push
pop
push
sbb
frstor
aad
cmps
and
fiadd
bound
fs
push
daa
adc
sub
lods
call
mov
clc
add
mov
ffree
add
push
(bad)
ret
imul
dec
aas
add
neg
pinsrw
jo
cmovo
aam
test
xor
and
push
hlt
push
pusha
mov
cmp
sbb
fdivp
sbb
addr16
leave
push
cld
add
mov
cmp
cwde
pop
popf
xchg
push
xchg
movs
enter
jmp
jecxz
(bad)
sub
push
test
call
xchg
and
out
and
inc
cld
dec
call
dec
push
or
adc
out
div
sub
pop
out
dec
call
out
pusha
pusha
xchg
leave
loope
mov
or
pop
cmc
adc
xchg
pop
rol
and
cmps
and
fs
add
lock
call
cli
mov
pop
lea
mov
add
inc
add
mov
pop
lods
jg
in
add
(bad)
aas
push
mov
enter
inc
(bad)
sbb
pop
xchg
xor
and
or
sbb
cmc
cs
push
mov
adc
int
pop
lods
call
dec
add
test
pop
inc
cli
jo
fcomp
mov
push
dec
arpl
jg
add
inc
xor
iret
xchg
or
sub
jb
xchg
or
inc
jb
sar
sar
inc
popa
sub
sbb
shl
loopne
pop
cwde
pop
jns
sub
lock
mov
scas
inc
mov
fisubr
or
jmp
pushf
mov
add
add
mov
je
pop
and
je
test
je
ror
dec
cld
inc
add
lahf
or
xchg
or
pop
jmp
push
add
test
jne
stc
pop
add
adc
push
cld
cmc
mov
cs
scas
add
xor
outs
outs
es
or
je
adc
shr
adc
and
ins
lods
push
data16
lea
pop
test
inc
out
test
mov
mov
ror
cmp
pop
pop
packssdw
js
or
push
(bad)
pushw
or
mov
test
popa
sbb
add
mov
lea
push
dec
mov
jl
mov
sar
xchg
test
add
xchg
or
rcr
jne
nop
cmps
cmp
outs
test
xor
mov
push
and
(bad)
xchg
pop
cwde
jle
xor
inc
push
imul
xor
aam
pop
mov
pop
mov
or
daa
xor
cmp
pop
retw
mov
outs
scas
clc
pusha
sub
and
add
mov
mov
add
test
pop
push
pop
or
add
es
nop
xor
movs
push
xchg
cmp
mul
and
cmp
push
and
push
inc
mov
loope
sbb
call
shl
int3
xchg
and
add
nop
daa
rcl
mov
test
popf
sub
nop
ret
dec
sub
gs
mov
outs
ror
push
sbb
pop
inc
push
xor
xchg
xor
fcmovb
dec
push
test
mov
sbb
lods
push
gs
cmp
inc
out
and
pop
std
sub
or
ret
dec
cmp
aam
mov
add
js
push
dec
sub
fsubr
push
call
mov
pop
pop
aas
push
dec
inc
pop
mul
iret
and
mov
push
pop
push
je
xor
sub
adc
xchg
mov
mov
(bad)
imul
test
push
das
pop
adc
setne
shr
inc
mov
or
mov
add
or
cli
or
pop
sar
inc
add
add
jo
jnp
adc
cmp
dec
outs
inc
(bad)
pop
sahf
sub
pop
xor
mov
sbb
xor
add
pop
push
jg
jne
adc
scas
jo
(bad)
and
add
sub
mov
adc
aam
sbb
daa
je
mov
mov
es
inc
inc
adc
push
jo
mov
dec
jge
rol
push
xchg
pop
jge
ret
movs
add
js
cmps
cs
add
push
jg
add
ja
dec
test
inc
fcmovnbe
mov
or
pop
lock
mov
cmp
(bad)
stos
ror
add
cs
mov
inc
push
inc
sub
jg
mov
jmp
push
and
call
add
lods
mov
cwde
ret
inc
std
or
or
scas
fild
add
mov
add
or
call
outs
inc
fist
sti
gs
xor
push
test
add
mov
push
sbb
jmp
and
cmp
adc
mov
cmp
rol
push
xor
in
lock
sub
mov
shl
push
stc
pop
mov
push
cld
(bad)
and
and
lea
int
cs
inc
jb
xor
inc
pusha
jbe
aaa
and
inc
mov
push
ret
cmp
add
jmp
rol
adc
mov
dec
dec
jmp
les
daa
xchg
pop
js
(bad)
retf
inc
jg
adc
push
pop
cmp
jmp
mov
(bad)
dec
sbb
add
rol
and
cmp
outs
and
adc
pop
icebp
test
cmp
dec
lods
mov
das
push
out
dec
cmp
je
fwait
cmp
shr
inc
mov
xor
push
mov
inc
add
movs
arpl
dec
pusha
inc
and
xchg
fimul
rcl
hlt
out
pop
mov
fadd
or
arpl
cmp
dec
xor
push
arpl
(bad)
mov
shr
mov
jg
adc
mov
or
add
inc
hlt
sub
fmulp
inc
inc
jmp
retf
jne
cmp
dec
jmp
pusha
inc
aaa
add
sbb
push
ud2
push
adc
std
inc
dec
jne
int
pusha
mov
inc
adc
xchg
mov
in
cmps
dec
or
mov
xchg
fiadd
cwde
cmc
add
jb
mov
or
cmp
sub
nop
sub
(bad)
fbld
les
sbb
cmp
add
pushf
add
adc
and
movs
jnp
mov
movs
icebp
popa
and
daa
adc
sbb
adc
or
std
mov
adc
jle
mov
mov
daa
or
outs
pop
(bad)
cli
cmp
inc
sub
lds
dec
push
pusha
cmp
nop
mov
ret
sbb
dec
mov
add
mov
sahf
div
mov
rol
out
cmp
ret
jne
mov
pop
adc
cmp
jmp
sbb
sahf
data16
inc
xchg
mov
nop
test
push
sbb
shrd
(bad)
rol
pop
xor
ret
nop
daa
ror
popa
call
pop
sbb
xchg
xor
jp
or
xlat
aas
cmp
mov
add
dec
call
push
add
or
les
push
cmp
sbb
fistp
loopne
jge
daa
pop
ss
add
daa
jle
push
es
sub
pop
imul
and
fcomp
hlt
rcl
adc
and
call
adc
adc
clc
add
add
call
loop
pop
pop
fnstenv
icebp
inc
outs
push
mov
pop
ret
pop
(bad)
test
sub
pop
adc
jbe
aaa
aas
or
imul
jne
movs
add
cdq
pop
repz
push
dec
cmps
xchg
loope
pop
dec
idiv
pop
and
outs
and
mov
or
push
fs
inc
add
dec
add
push
jle
out
adc
fwait
adc
push
or
movs
add
push
or
adc
daa
xchg
arpl
jle
adc
jge
lahf
aas
fcmovb
push
push
push
or
dec
cmp
ins
cld
xor
jecxz
pop
xchg
lock
sub
pop
jno
repz
cmp
jl
cmp
jo
and
dec
mov
push
adc
sub
pop
add
add
or
adc
or
xchg
or
pop
sub
arpl
push
jnp
sbb
mov
mov
arpl
data16
out
into
cmp
mov
add
(bad)
cmp
es
loopne
call
mov
les
bndstx
pop
test
mov
inc
jecxz
lock
xlat
cmp
xadd
push
lea
push
pop
add
lea
mov
cmc
loopne
cmp
out
cdq
adc
inc
rcl
test
cmp
cmovnp
retf
sbb
test
push
rcl
inc
xor
cdq
add
daa
mov
xor
adc
pop
or
xlat
je
xor
and
push
jo
imul
cld
push
jmp
push
xor
sbb
sahf
sbb
daa
es
sub
retf
pop
adc
gs
fst
cmp
mov
and
or
or
push
cmp
add
cdq
push
lods
cmp
xchg
inc
xor
push
jae
shl
pusha
inc
xchg
pusha
dec
jne
cmps
rcl
add
inc
or
mov
and
lds
push
cwde
xor
inc
shl
cmps
push
mov
jle
mov
add
add
ud0
xor
cmp
mov
in
loopne
mov
xchg
dec
add
xor
mov
push
invd
or
data16
andps
mov
xchg
cmp
or
cwde
mov
retf
and
add
jmp
mov
call
add
xor
mov
jle
shl
and
add
sub
mov
inc
push
scas
call
mov
test
shl
loopne
es
ret
sub
clc
out
sbb
cmps
xor
add
dec
jne
das
add
(bad)
jo
xchg
nop
pop
loope
mov
inc
push
jle
ret
dec
outs
or
xchg
add
ret
add
inc
je
jbe
push
(bad)
adc
aaa
push
mov
jmp
pop
add
fist
adc
pop
inc
jmp
or
adc
pop
aam
adc
pop
sbb
xor
mov
jmp
ffree
pushf
xchg
mov
cmp
add
add
mov
and
sbb
xchg
(bad)
call
mov
sbb
jno
mov
ja
cmps
cmp
inc
fwait
pop
dec
mov
stos
sub
push
dec
dec
scas
rcr
dec
cli
sub
sub
jae
mov
cmp
cmp
fs
pusha
mov
pop
je
sub
or
mov
cmps
sbb
pop
in
retf
call
dec
or
mov
adc
or
sub
rol
add
or
add
in
in
and
test
xchg
xor
scas
push
mov
pop
std
add
adc
add
sub
push
push
cli
xor
cmps
jmp
mov
scas
fwait
mov
cmp
add
(bad)
mov
and
subps
dec
sbb
sti
adc
sbb
cmps
test
mov
jmp
pop
mov
or
rcl
add
in
mov
out
mov
retf
sbb
out
enter
(bad)
mov
lods
mov
mov
pop
ins
dec
pop
pop
push
mov
or
push
rcr
add
mov
jmp
sbb
xchg
sbb
jge
mov
test
imul
add
jge
jle
adc
fstp
and
or
fdivr
adc
inc
sub
outs
cmp
sub
mov
enter
test
outs
test
fsub
add
mov
inc
or
mov
cdq
out
fstp
and
jle
adc
into
inc
dec
add
add
(bad)
mov
cmovbe
in
daa
test
rcr
or
in
call
xchg
movs
jbe
sahf
fdiv
int3
cmp
mov
dec
sbb
xchg
and
clc
cmp
cmp
mov
cmp
xchg
aam
les
cmp
sbb
sbb
shr
bound
sgdtd
adc
in
add
sbb
add
mov
pop
daa
or
add
(bad)
jnp
add
adc
das
and
inc
mov
adc
sti
cmp
stos
dec
dec
(bad)
mov
mov
dec
mov
das
mov
test
pop
scas
and
jge
dec
sbb
push
leave
cmp
repz
je
jecxz
add
arpl
jmp
mov
fmul
push
dec
test
enter
inc
or
xchg
mov
bound
enter
adc
vmwrite
ror
leave
push
add
sub
push
out
push
or
ror
sub
mov
mov
xor
or
lock
xchg
cmc
push
rcr
push
call
dec
sub
inc
sub
or
and
pop
mov
ror
xchg
inc
sti
test
ret
adc
mov
jle
ret
mov
add
rcl
sub
mov
add
lock
adc
fptan
push
clc
xchg
sub
test
fcom
xchg
xchg
sub
pushf
sub
jo
popa
jge
sbb
cmp
mov
push
fs
or
fs
popf
mov
mov
add
std
mov
test
push
push
ror
gs
nop
gs
push
ins
outs
cmp
nop
push
and
or
sbb
js
retf
adc
push
push
sbb
fnstenv
sbb
loopne
cmp
int
ret
mov
fs
test
add
push
adc
in
out
pop
add
inc
or
sbb
daa
add
les
mov
mov
pop
add
xchg
add
sub
cmp
(bad)
sbb
pop
(bad)
sub
fcom
mov
imul
xor
fdiv
jo
enter
mov
xchg
xchg
repnz
xor
cmp
les
add
dec
xor
xor
cmp
sti
adc
adc
jmp
cwde
push
push
ror
or
add
pop
aam
cmc
ret
nop
retf
into
add
jmp
and
add
add
dec
or
and
adc
pop
mov
in
cs
push
sbb
movs
xchg
or
arpl
inc
mov
test
je
push
cmp
jge
test
mov
bound
adc
inc
nop
aam
inc
or
cmps
jnp
rol
or
call
shl
sbb
xor
push
pop
add
dec
enter
ins
cmp
xchg
adc
jmp
jnp
in
ret
in
retf
push
mov
push
inc
cmp
dec
xchg
adc
mov
add
je
sub
das
cmp
dec
jne
mov
and
dec
test
push
test
lea
test
lea
rcr
push
add
or
test
mov
mov
mov
lahf
sbb
fadd
dec
inc
pusha
mov
xor
ret
nop
out
xchg
or
add
xchg
adc
mov
and
add
dec
pop
inc
jne
and
das
outs
sub
sub
add
and
cmp
add
out
jns
test
mov
and
add
test
mov
add
sbb
jg
or
cmp
in
cdq
loopne
sub
jns
scas
int
lods
add
push
hlt
add
adc
add
test
sbb
or
imul
push
pop
rcl
hlt
rol
pop
sbb
sub
mov
xlat
xchg
mov
retf
fcom
stc
sar
jge
je
push
add
cmp
mov
retf
adc
imul
push
or
shl
pusha
pop
pop
xchg
jg
iret
ins
lods
xchg
xor
mov
(bad)
jo
loopne
(bad)
(bad)
adc
adc
ret
inc
fisubr
popa
push
clc
inc
mov
add
xchg
xchg
dec
inc
ror
xchg
pop
pop
pop
pop
(bad)
adc
mov
cmp
add
mov
lods
xlat
sub
pop
pushf
xchg
mov
fwait
gs
enter
or
pop
add
sub
daa
pushf
mov
pop
aam
add
inc
aam
sbb
mov
pop
mov
pop
sub
hlt
mov
ret
cmps
dec
xchg
cwde
push
push
dec
sub
inc
dec
jmp
js
fst
cmp
pop
xchg
xchg
sbb
clc
fs
loope
push
loope
push
adc
imul
div
pop
das
xor
pop
rol
inc
adc
sub
jle
add
push
sbb
push
or
(bad)
mov
adc
adc
lock
popa
add
cld
xchg
mov
pop
ror
inc
xor
mov
sar
mov
add
or
repnz
dec
pop
or
and
jecxz
and
(bad)
jne
in
push
push
or
pop
pop
inc
jecxz
outs
and
add
dec
mov
(bad)
add
add
jnp
imul
jecxz
sahf
ins
std
fisub
push
push
adc
jg
mov
mov
out
shr
push
adc
cs
jg
inc
sbb
mov
or
add
and
jo
hlt
stos
jnp
(bad)
jmp
push
add
sub
jno
or
or
and
mov
cmp
cmp
pop
push
cmc
cmps
mov
push
lock
jp
lods
fadd
neg
cmp
inc
and
adc
push
push
sbb
(bad)
pop
inc
aam
test
adc
aas
aam
mov
add
push
mov
clc
jle
mov
dec
sub
or
loope
fisttp
xchg
mov
push
es
inc
(bad)
pop
and
xor
mov
(bad)
cmp
mov
aam
js
xchg
or
aam
pop
adc
xchg
xchg
mov
daa
or
retf
ret
out
lock
sti
ret
ret
cmp
ja
je
pop
jle
mov
mov
xchg
and
pop
out
sbb
retf
cld
das
jmp
inc
mov
pop
pop
sbb
adc
dec
pop
adc
fisubr
pop
pop
cwde
popa
bound
sub
and
popa
xchg
test
ins
inc
ins
fld
cmp
inc
mov
or
aam
lock
dec
outs
das
add
lock
das
je
pop
loopne
mov
cmp
cdq
mov
dec
loope
mov
lahf
adc
mov
xchg
or
dec
or
nop
das
inc
pushf
push
mov
mov
add
test
add
fild
(bad)
sub
push
(bad)
(bad)
scas
cmps
adc
mov
scas
adc
dec
adc
adc
and
dec
jle
dec
jbe
mov
dec
dec
movs
dec
add
mov
(bad)
or
push
cmp
loopne
(bad)
les
pop
int3
dec
or
push
adc
sbb
inc
fs
and
sbb
and
inc
loopne
inc
adc
cs
or
dec
jmp
or
call
adc
xor
in
outs
push
out
scas
push
or
jmp
mov
push
lea
mov
dec
pop
in
or
out
dec
sub
pop
cmp
nop
or
mov
cmp
jo
outs
lahf
arpl
pop
add
push
add
mov
dec
xchg
enter
jnp
mov
push
ins
cmps
or
jmp
enter
imul
add
push
xchg
or
xor
ds
push
loope
jo
loope
and
dec
xor
rcl
add
inc
xchg
push
cmp
inc
push
mov
fincstp
ss
cli
adc
push
dec
clc
sub
cmp
jne
sbb
sbb
mov
sub
add
iret
inc
cmp
pusha
sub
jmp
call
fisub
lock
lock
call
imul
push
jl
stos
jo
xchg
sub
jmp
mov
sti
jmp
iret
stos
push
fs
add
adc
pushf
ret
sub
dec
xchg
and
loopne
adc
shr
mov
mov
jmp
adc
and
pop
mov
add
add
jmp
lock
mov
cmp
ins
lea
call
lds
pop
jmp
in
lods
cwde
leave
jo
add
daa
or
adc
add
aam
and
mov
mov
or
pop
mov
inc
or
sub
ret
push
or
xor
push
lahf
and
cmp
sub
data16
int
add
inc
inc
call
hlt
or
push
les
sub
(bad)
cmovns
mov
leave
lea
jo
pop
adc
dec
popa
push
cmp
lock
push
push
push
cmp
mov
cs
add
mov
loopne
push
push
inc
jbe
adc
or
daa
arpl
dec
push
adc
push
and
dec
arpl
sub
test
pop
adc
jmp
pop
push
adc
rcr
mov
pop
fist
and
sti
pop
push
or
sub
jmp
adc
sub
and
outs
push
repz
fnstenv
mov
daa
add
inc
in
mov
jl
pop
jbe
add
loope
fs
push
or
pop
cmp
jge
jo
outs
add
xchg
adc
push
add
call
pop
jae
in
addr16
add
or
xchg
nop
push
and
cdq
xor
(bad)
xchg
xor
adc
cmp
and
shl
cmps
scas
add
ret
mov
ret
cmp
rcr
cli
and
jle
xor
fadd
fisttp
jne
cmp
arpl
inc
add
dec
or
ins
sub
adc
(bad)
mov
and
adc
push
scas
push
call
push
lods
mov
ds
or
sbb
dec
add
ret
dec
hlt
and
dec
enter
(bad)
mov
sub
and
or
js
jp
mov
add
mov
inc
sbb
push
pop
jle
mov
add
dec
add
push
adc
test
mov
xor
sbb
inc
xlat
mov
pop
inc
add
dec
cwde
and
popf
and
and
sub
jmp
sub
(bad)
aam
(bad)
mov
mov
or
cmp
cmp
dec
or
xchg
jmp
mov
inc
mov
cmp
out
daa
js
xor
and
test
pop
adc
adc
fwait
jo
inc
popf
cmp
or
fld
and
std
add
add
inc
push
dec
ins
ret
cs
mov
ss
ret
pop
cmp
xor
pop
push
clc
adc
add
or
mov
idiv
out
xchg
push
sub
popa
pusha
in
or
pop
cs
dec
clc
cmps
or
push
adc
fs
pop
xchg
mov
out
das
and
lea
inc
add
jge
ret
pop
and
jmp
lods
inc
or
test
dec
fild
mov
enter
push
mov
xor
mov
and
jp
mov
inc
ja
mov
aas
in
jge
add
cmp
add
add
xchg
test
xchg
hlt
inc
retf
adc
aaa
nop
cmp
je
or
into
nop
mov
pop
rol
retf
scas
fdiv
mov
push
dec
jo
inc
cmp
lock
cmc
jmp
sub
xchg
mov
mov
inc
adc
jge
nop
push
test
sti
mov
inc
pusha
sbb
adc
imul
or
or
push
rcr
and
dec
clc
adc
lea
adc
push
(bad)
retf
xor
sub
xor
inc
and
add
ret
jo
fld
fmul
jne
(bad)
sbb
outs
ins
or
mov
push
dec
mov
fsubr
out
cmp
jne
mov
mov
mov
or
jmp
and
mov
ins
in
aas
dec
or
pop
mov
jmp
mov
or
cmps
push
cmp
xchg
mov
push
out
jp
push
into
push
pop
adc
cmp
outs
add
mov
mov
sub
cmp
mov
not
and
ret
movs
lock
pop
cmp
test
movs
cmp
out
rcl
xchg
test
iret
push
push
xlat
adc
or
inc
dec
and
inc
mov
add
cmc
xor
inc
or
pop
pop
je
add
or
sbb
add
or
fs
or
xor
jmp
xor
jb
or
sub
or
add
mov
mov
ins
test
mov
rol
xchg
xchg
ja
xor
les
adc
inc
sbb
ror
fistp
inc
or
inc
or
sbb
pop
add
xor
adc
ret
or
pop
adc
push
mov
jg
loopne
push
rol
js
jmp
fbstp
sbb
shl
fistp
aam
enter
sub
daa
(bad)
inc
mov
jl
adc
push
dec
mov
ds
sbb
mov
pop
cmp
inc
add
or
push
adc
and
fnstenv
inc
xor
cmp
sbb
fdivr
adc
and
sbb
movhps
adc
pop
test
xchg
push
icebp
lods
arpl
fsub
adc
clc
sub
xor
jg
hlt
mov
mov
dec
lock
and
jbe
sahf
nop
inc
add
add
pop
xor
add
adc
imul
lock
push
cmp
adc
mov
push
mov
fwait
aam
(bad)
clc
jne
add
rcr
iret
out
add
cmp
xor
push
cmp
shl
and
adc
clc
aaa
daa
es
ror
jmp
adc
ja
lea
imul
(bad)
popa
xchg
jg
jecxz
add
jg
pop
jg
add
arpl
jl
sti
(bad)
cmp
add
ror
adc
in
sar
or
push
sbb
cmp
fcomp
sbb
sbb
mov
dec
lea
pop
or
adc
adc
add
fsubr
mov
adc
inc
call
mov
jg
mov
pop
fstp
xor
in
inc
or
jne
add
push
add
out
push
add
xchg
lock
aad
dec
push
cmp
sbb
rcl
cdq
fcom
sub
mov
dec
jge
xor
das
or
and
push
and
sub
push
daa
jo
sbb
dec
ins
and
in
push
cld
pop
xchg
xor
mov
mov
sbb
mov
loopne
add
pop
pop
pusha
add
leave
cmps
xchg
(bad)
mov
inc
cmp
ret
sub
fs
adc
adc
js
push
push
and
push
in
aas
sbb
pop
adc
dec
cmp
jge
xchg
push
jns
mov
jo
push
or
cld
pop
(bad)
or
mov
pop
movaps
sbb
cld
loop
or
mov
adc
cmp
push
jne
arpl
push
or
shr
test
add
dec
xchg
sub
into
fdivr
lea
mov
and
xchg
ins
pop
loopne
push
pop
or
or
add
test
loopne
mov
or
adc
inc
sub
sbb
mov
hlt
or
xchg
call
or
push
xor
icebp
jge
mov
sti
in
loop
js
cmp
pop
sbb
test
pop
inc
push
add
rcl
xor
movs
sub
adc
push
inc
movs
add
int
push
cmp
or
enter
sub
pop
and
jbe
faddp
mov
ret
add
retf
sub
add
xor
jmp
das
push
sbb
popf
adc
sbb
mov
and
sbb
test
adc
ins
(bad)
dec
or
pop
aaa
adc
dec
comiss
rol
inc
jo
ja
loopne
dec
pop
sbb
jmp
sbb
idiv
mov
add
add
inc
movs
or
xor
jmp
push
cld
push
add
sbb
mov
out
mov
cmp
loope
sbb
push
(bad)
js
mov
dec
or
add
movs
cdq
outs
ret
ror
bound
adc
stos
cmp
push
inc
cmp
imul
sub
das
cmp
repz
nop
shr
pop
sub
test
clc
add
push
fcomp
adc
xor
fldcw
ret
push
push
inc
inc
add
sub
call
jmp
and
dec
inc
push
sbb
add
pop
in
in
pop
cwde
sbb
retf
add
inc
add
sub
jbe
(bad)
(bad)
es
push
and
loopne
dec
mov
fcom
popa
out
cmp
or
add
xor
ret
nop
cmp
in
inc
shr
xchg
jo
push
inc
jge
mov
jecxz
push
arpl
dec
cmp
mov
clc
mov
icebp
sbb
mov
outs
idiv
inc
push
push
sbb
jecxz
stos
sbb
or
or
add
or
das
add
sub
test
mov
dec
cld
clc
sub
adc
and
cld
or
cmp
sar
jns
adc
jmp
inc
pop
or
mov
inc
hlt
sub
dec
or
jge
or
mov
std
push
fisubr
iret
add
or
out
pop
cmp
clc
xchg
or
pop
pop
dec
movs
xor
pop
outs
pop
inc
push
dec
dec
sub
rol
xlat
jbe
pop
or
outs
and
or
sbb
xchg
mov
leave
sbb
mov
add
dec
fs
cmp
bound
xchg
add
cmp
or
jge
jmp
sbb
cdq
aam
add
push
fst
addr16
push
add
aam
add
inc
mov
fdivr
push
enter
push
(bad)
icebp
clc
mov
xchg
jl
(bad)
rcl
mov
hlt
hlt
xchg
inc
es
lock
add
clc
add
inc
ret
fs
mov
clc
mov
mov
push
push
push
movs
cmp
or
clc
mov
push
call
pop
cmp
adc
push
and
fiadd
push
mov
or
sbb
inc
comiss
imul
loop
add
pop
div
mov
loope
cmp
jb
addr16
xor
test
push
or
sbb
push
inc
or
ins
in
dec
fld
jmp
das
push
or
push
pop
or
cmp
inc
arpl
out
sbb
adc
or
lea
xchg
pop
push
ret
or
jp
data16
jmp
pop
push
std
(bad)
fstp
daa
je
or
(bad)
cli
sar
movs
nop
ret
popa
inc
sbb
mov
push
das
sub
adc
and
mov
cmp
or
push
ja
pop
jno
mov
add
dec
pop
add
iret
fmul
out
ror
sbb
push
xchg
sbb
pop
sbb
fs
adc
shl
or
add
not
cwde
cmp
dec
je
push
movs
enter
jmp
jecxz
mov
inc
push
add
ins
xor
fmul
push
add
call
lock
xchg
or
inc
pop
mov
push
xchg
sub
call
iret
push
fld
mov
add
cmp
push
lahf
mov
pop
xchg
scas
stos
dec
mov
aas
and
pop
pop
push
pop
or
shld
and
sub
pusha
sub
aas
clc
inc
xchg
mov
mov
mov
icebp
retf
cli
sub
sub
mov
clc
push
push
sbb
cmps
mov
xor
push
mov
fisub
and
das
sbb
push
pop
les
xor
push
push
cmp
push
mov
sub
mov
sub
ja
inc
dec
push
ret
aad
sbb
xchg
mov
pop
call
lea
out
add
gs
leave
test
(bad)
pop
scas
sbb
mov
inc
loopne
and
ins
in
sub
jp
sub
imul
in
in
hlt
in
mov
js
loopne
lahf
push
push
inc
push
enter
mov
rcl
adc
je
push
cdq
out
mov
ret
sub
xor
addr16
sahf
inc
add
cdq
es
pop
or
dec
add
outs
xor
and
cmp
jne
pop
push
dec
cmp
int
jmp
sbb
pop
es
or
clc
inc
or
lahf
pop
or
test
mov
add
imul
mov
ret
inc
ins
sub
test
and
push
pop
(bad)
cmps
add
xor
add
inc
pop
push
fsub
loope
push
push
pusha
ja
sub
(bad)
out
imul
push
fadd
or
push
push
adc
int3
movs
add
pop
sub
xchg
cmp
add
mov
mov
push
adc
add
ret
aam
cmp
pop
and
sahf
retf
shl
and
add
mov
add
shr
sbb
mov
minps
rol
and
push
dec
dec
jne
add
inc
sbb
and
xor
test
cmps
inc
inc
or
mov
inc
adc
dec
mov
(bad)
xchg
mov
push
aas
add
in
addr16
adc
mov
xchg
or
and
adc
mov
and
mov
sbb
leave
retf
(bad)
push
test
jnp
push
arpl
or
dec
pop
retf
lods
sub
je
popa
jb
mov
add
mov
dec
fadd
jle
aad
sahf
dec
adc
jae
and
sbb
push
sub
mov
inc
push
aaa
mov
xchg
push
imul
dec
dec
sub
sub
adc
cmps
icebp
push
mov
inc
sbb
idiv
mov
push
add
push
pusha
pop
rol
les
and
add
add
mov
inc
lock
loopne
adc
ret
cmp
inc
ss
es
push
enter
lahf
cmp
test
js
lock
sbb
lock
and
jmp
add
xchg
adc
pop
icebp
xlat
jb
sub
ror
jno
xor
adc
adc
pop
and
push
add
imul
and
cs
aas
aad
test
cs
and
(bad)
ins
jae
cs
cmp
add
add
clc
inc
or
ror
(bad)
cmp
or
cmps
lock
pop
(bad)
sub
lods
inc
lds
mov
mov
mov
int
pop
and
cmp
stc
lods
jmp
sbb
ins
adc
inc
pop
das
push
push
les
mov
xchg
or
sbb
add
and
xor
adc
sbb
and
pop
sbb
push
inc
aaa
adc
lods
cmps
mov
inc
mov
ror
inc
mov
and
dec
loopne
(bad)
push
test
pop
sbb
pop
inc
lock
(bad)
add
push
into
pop
sbb
jo
pop
ss
call
adc
add
mov
cmp
jl
pop
mov
dec
ror
pop
mov
sub
into
xor
jmp
mov
mov
in
xchg
mov
jg
pop
xor
cmps
pop
xlat
mov
and
stc
ror
add
jmp
gs
call
aas
add
arpl
je
dec
sbb
dec
aas
xchg
(bad)
and
sub
sub
test
fbstp
sbb
sti
ror
dec
in
cmp
jns
movs
push
sar
mov
add
ss
retf
dec
ret
popa
mov
test
mov
push
icebp
pop
jnp
push
test
lea
add
and
cld
mov
jge
jmp
jp
push
cdq
nop
fwait
add
hlt
cwde
sbb
popf
outs
mov
ja
push
adc
jne
lock
push
push
mov
pop
aam
sub
pusha
add
and
dec
push
adc
pusha
mov
div
adc
sti
leave
(bad)
mov
outs
call
pop
jno
mov
push
add
lods
out
add
push
push
add
pop
fist
xchg
nop
dec
fild
ret
lock
popf
cwde
retf
fimul
and
sar
xchg
stos
pop
test
lock
add
pop
add
sub
add
rol
jne
outs
scas
nop
sbb
hlt
dec
add
dec
sbb
xor
and
or
inc
xor
push
xor
retf
xor
daa
add
sub
fadd
cdq
enter
sbb
cmp
pop
push
add
jbe
pcmpgtb
push
movs
mov
test
xchg
(bad)
inc
nop
loopne
inc
repz
lods
pop
dec
retf
inc
inc
cld
call
push
xor
(bad)
(bad)
nop
push
inc
pop
ret
sar
lea
add
outs
add
sub
cmp
dec
shl
add
lods
cmps
push
xor
(bad)
dec
mov
fild
(bad)
(bad)
push
test
in
out
or
xchg
mov
ins
mov
sub
nop
adc
icebp
pop
fsub
jg
adc
adc
xchg
inc
or
cmp
outs
sub
inc
ret
pop
sbb
mov
fidivr
or
aam
xchg
mov
pop
push
or
icebp
rcr
clc
push
jg
inc
daa
push
cmp
inc
mov
sub
adc
sbb
loopne
push
add
push
dec
daa
lea
test
lea
lea
adc
add
add
outs
or
xchg
shl
sub
or
push
adc
add
or
movsx
in
fwait
and
or
and
push
popa
movs
cmp
test
jbe
cdq
sbb
jmp
adc
nop
mov
cmp
inc
cmp
adc
push
adc
rcr
push
in
push
ds
mov
(bad)
es
es
adc
dec
mov
pop
adc
or
int3
out
fs
iret
push
jns
mov
neg
and
jl
push
sub
test
test
push
mov
mov
inc
sub
test
hlt
adc
push
mov
push
out
adc
and
pop
or
push
inc
push
xor
add
test
in
dec
dec
dec
push
aaa
dec
dec
inc
add
std
ja
test
dec
inc
dec
ins
ins
inc
gs
jle
and
pop
push
movs
ins
mov
sbb
daa
inc
nop
enter
jae
push
enter
jne
das
push
rol
push
xchg
and
or
push
test
rcr
aam
mov
inc
in
inc
out
sbb
(bad)
das
and
loopne
rcr
inc
xchg
dec
jae
pop
add
mov
dec
outs
ds
jno
add
dec
cli
cs
retf
push
nop
call
(bad)
(bad)
sub
mov
stos
jge
push
cmp
adc
mov
int
push
inc
sti
mov
sbb
mov
sbb
add
adc
test
popf
mov
imul
add
jmp
movs
ss
adc
adc
sbb
mov
rcl
jecxz
ret
push
mov
xchg
mov
add
add
pop
das
cmp
ret
fsubr
mov
cmp
ret
jbe
cmps
ins
pop
mov
xchg
call
cmp
cmp
pop
adc
xor
rcl
add
or
clc
retf
and
dec
adc
mov
jns
and
sbb
int
jecxz
sub
leave
mov
dec
adc
mov
adc
or
pop
shl
loopne
in
cs
clc
nop
cmps
in
lods
push
mov
cmp
fldcw
das
add
dec
push
sahf
addr16
mov
jbe
jo
mov
mov
not
mov
outs
aas
int3
jno
or
mov
js
adc
jo
out
pop
lods
mov
inc
dec
sub
fdivp
or
mov
cwde
or
push
sar
push
dec
(bad)
sti
adc
(bad)
xor
or
rcl
ret
(bad)
(bad)
sub
imul
dec
ficom
data16
loope
adc
and
test
lds
push
pop
pop
mov
add
inc
push
daa
aam
inc
sbb
cli
mov
imul
arpl
jg
es
pop
inc
test
push
dec
fldcw
lock
iret
pop
pop
and
loopne
jae
sti
(bad)
and
dec
cmps
clc
add
xchg
add
aad
sub
aaa
dec
enter
call
mov
in
dec
sbb
rcl
fwait
sub
or
jne
je
daa
push
cmp
movs
mov
pop
inc
mul
jno
ret
dec
arpl
pop
mov
aam
and
add
jl
(bad)
jle
xchg
xchg
xchg
jg
popa
bound
fs
xchg
xchg
xchg
addr16
xchg
xchg
imul
xchg
xchg
xchg
outs
push
push
push
xchg
xchg
xchg
xchg
push
push
push
push
xchg
xchg
xchg
xchg
push
pop
pop
pop
xchg
xchg
xchg
xchg
pop
pop
pop
pop
xchg
xchg
xchg
xchg
pop
inc
inc
inc
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
xchg
xchg
inc
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
xor
xor
xor
ss
xchg
xchg
xchg
aaa
cmp
cmp
cmp
ds
xchg
xchg
xchg
aas
and
and
popf
xchg
xchg
and
popa
xchg
pop
mov
js
aas
cmps
xchg
mov
or
scas
jne
test
mov
or
pop
lahf
or
or
sbb
(bad)
and
pop
pop
dec
lods
mov
jmp
jo
adc
push
jo
fdivr
lea
inc
clc
add
or
push
or
lea
jmp
cmp
(bad)
jmp
cmp
std
xor
fwait
add
pop
dec
adc
mov
data16
or
mov
push
invd
push
push
or
add
arpl
mov
lock
adc
pop
add
add
fcomp
mov
add
inc
add
add
pop
call
jp
gs
push
add
cmp
bound
pop
dec
leave
sub
scas
xor
mov
outs
out
dec
dec
add
and
fdivr
cmp
pop
dec
in
mov
mov
into
mov
push
ret
and
sub
retf
das
nop
add
sbb
ds
frstor
sub
pop
jae
fmul
jbe
out
add
fcomp
add
dec
inc
gs
(bad)
and
and
inc
mov
mov
mov
adc
pop
rcl
or
mov
rcl
push
sbb
or
fidiv
aaa
ret
push
int3
pop
ret
push
sbb
xchg
clc
arpl
nop
loop
bound
adc
ss
jmp
sub
clc
add
push
stos
mov
ja
lods
out
daa
push
add
(bad)
cld
push
je
push
sahf
jg
jl
das
daa
pop
rcl
je
cmp
aas
adc
cmp
pop
push
pushf
mov
push
dec
sti
mov
push
stos
push
xchg
add
jl
xor
add
adc
test
dec
pop
pop
cmp
std
dec
dec
push
add
pop
mov
cmp
ins
mov
push
mov
sub
cmp
jmp
and
and
sbb
sub
shl
movs
xor
in
xor
or
(bad)
fstp
push
out
sar
mov
mov
xchg
pop
div
nop
xchg
outs
lods
inc
or
inc
sub
or
pusha
movs
pusha
add
loopne
xchg
mov
lea
push
js
xor
add
adc
popf
sub
pop
ret
daa
adc
int
shl
das
or
add
in
adc
pop
loop
cmp
add
mov
adc
sar
adc
push
pusha
rol
xlat
sbb
movs
lods
and
movs
cmp
or
out
shl
test
jge
pop
fld
adc
xchg
jmp
add
jo
sbb
pop
add
or
mov
pop
out
das
test
stos
pusha
and
xchg
xchg
and
ds
add
mov
inc
pop
or
and
in
cmp
call
cmp
hlt
push
out
mov
adc
mov
(bad)
lock
arpl
les
adc
adc
push
mov
mov
mov
pop
mov
inc
(bad)
push
sbb
lds
cmp
inc
push
fisub
and
inc
pop
cmp
dec
add
or
mov
xchg
sbb
jnp
pshufw
jbe
cmp
jl
push
dec
ret
dec
mov
cmp
fs
test
test
push
fisub
add
push
mov
mov
pusha
fdiv
(bad)
push
pop
add
fild
jb
push
dec
sti
mov
ja
add
push
jbe
or
jmp
hlt
sbb
test
sub
mov
add
hlt
and
push
xor
fdivr
sub
sbb
in
mov
mov
push
ja
iret
fimul
mov
popa
adc
inc
mov
adc
mov
imul
outs
or
out
add
mov
cwde
pusha
aam
inc
add
push
push
push
inc
dec
jne
jg
movs
loope
adc
jnp
imul
push
inc
push
jno
mov
lods
je
push
pop
pop
xchg
push
(bad)
mov
jg
not
cmp
or
imul
push
in
mov
jbe
sbb
push
dec
dec
js
retf
inc
dec
jb
dec
adc
or
xchg
clc
adc
inc
adc
mov
outs
loope
mov
(bad)
cli
sbb
ins
xor
sbb
and
inc
nop
mov
test
add
push
push
ret
or
mov
push
cld
repnz
jne
lea
pop
test
stc
daa
ss
sub
inc
(bad)
and
cmp
jmp
mov
and
repz
mov
ret
inc
inc
cmp
jb
je
std
lea
lea
ud0
outs
sub
sub
movs
cld
jmp
cld
scas
js
out
lea
pop
pop
push
add
or
push
mov
cmp
lea
lods
scas
adc
sbb
and
je
xor
adc
daa
mov
sub
push
(bad)
pop
imul
add
adc
adc
mov
add
lea
dec
jne
les
int3
int3
fstp
adc
and
or
adc
pop
jmp
pop
or
sbb
data16
rcl
fs
mov
outs
outs
sti
lea
jge
pop
sbb
shr
stc
xchg
push
or
inc
ret
das
sub
cmp
(bad)
ss
jle
and
pop
add
(bad)
and
adc
ficom
inc
mov
aam
inc
pusha
shl
outs
scas
mov
adc
jmp
or
jmp
loopne
fisubr
(bad)
pusha
test
sbb
test
pop
lock
fnsave
and
and
je
test
sbb
(bad)
shl
test
jne
sahf
js
ins
ret
mov
jmp
push
test
adc
std
lods
mov
inc
dec
and
mov
dec
pop
dec
mov
push
pop
jl
add
adc
pop
test
cld
jecxz
mov
mov
mov
imul
dec
jne
xor
jmp
sub
cmps
pop
push
out
and
add
xor
adc
sahf
sbb
ret
sbb
sbb
mov
add
or
inc
sbb
mov
cmp
mov
js
lods
scas
sbb
cmc
add
push
sbb
or
push
std
fsubrp
pop
push
pop
pop
fmul
pop
pop
or
jne
call
xor
add
add
xor
add
inc
adc
imul
xor
mov
add
rol
test
test
mov
adc
cmps
dec
repz
icebp
xor
mov
sub
pop
sbb
inc
inc
or
inc
out
sub
jmp
mov
add
movsx
imul
mov
cmp
push
or
jne
sub
adc
sub
popa
mov
std
popa
(bad)
and
fdivr
pop
adc
adc
push
icebp
xchg
(bad)
sub
jmp
push
sbb
sub
add
push
jne
pop
add
pop
jmp
stos
pop
cmps
or
sbb
inc
inc
push
sub
je
sub
mov
popa
fwait
loopne
cmp
jns
fprem
push
and
into
test
xor
xor
pop
or
push
clc
in
push
hlt
jno
xchg
sub
pop
or
add
jmp
cmp
mov
out
add
fdivr
adc
pop
pop
out
inc
pusha
push
test
bound
xor
adc
push
xor
shl
dec
add
add
ins
out
pop
sti
and
or
sbb
sub
je
push
fmul
test
mov
add
sub
out
in
push
mov
(bad)
sbb
call
cmp
mov
cmps
fwait
cmp
adc
mov
or
mov
lock
(bad)
fimul
inc
sub
(bad)
pusha
adc
jmp
loopne
div
mov
or
mov
adc
add
pop
jle
jmp
sbb
inc
jmp
aas
shl
add
jo
ins
xor
sbb
imul
leave
mov
and
fnstenv
test
fbstp
add
push
data16
scas
cmp
add
imul
fld
pop
gs
mov
jp
inc
or
cmps
ins
dec
xor
loopne
rcl
add
jle
mov
rcr
fs
add
into
add
add
test
pop
ja
ret
sub
add
push
xor
mov
push
rcl
adc
ja
dec
mov
pop
pop
pop
or
je
push
add
adc
cmp
push
out
push
or
nop
loopne
mov
cmp
xor
xchg
mov
add
and
aam
jl
ficomp
add
push
ret
and
or
cmp
xor
adc
sub
leave
add
adc
push
mov
inc
rol
jbe
iret
add
mov
inc
fcmovb
cmps
daa
enter
popf
pop
or
push
retf
adc
add
jne
ss
xchg
sub
pop
adc
inc
cmp
fs
jge
sub
clc
lock
add
popa
inc
mov
add
sbb
pop
fistp
fild
jbe
sub
adc
push
pop
leave
add
(bad)
icebp
or
sub
jl
xor
adc
or
retf
movs
jg
ds
test
sub
popa
in
dec
add
in
and
out
cli
das
cli
out
dec
push
push
test
dec
push
xchg
push
sbb
dec
mov
repnz
push
iret
mov
jle
sbb
pop
push
add
cmp
push
mov
pusha
(bad)
daa
adc
xchg
add
(bad)
or
dec
psubq
mov
sbb
or
sub
dec
or
cmp
shl
or
test
inc
mov
mov
pop
inc
fdiv
mov
adc
into
shr
mov
push
int
cmps
pusha
and
jne
sub
scas
test
xor
fidiv
add
(bad)
dec
ins
mov
lods
sbb
xor
jbe
nop
mov
lock
xchg
add
sub
and
dec
sub
push
lea
pop
push
imul
push
cmp
mov
shl
or
(bad)
shl
or
ret
sbb
mov
jle
(bad)
xchg
pop
xchg
lock
sbb
fdivrp
dec
pop
adc
cmp
repnz
hlt
adc
pop
add
adc
fchs
push
scas
aas
inc
adc
add
sbb
pop
add
mov
adc
pop
movs
in
stos
push
rcl
ins
push
enter
push
je
es
mov
je
cld
push
pop
push
sub
mov
fnsave
punpckhbw
dec
mov
shr
movs
mov
mov
push
imul
or
or
mov
push
shl
and
sbb
push
xchg
(bad)
adc
add
add
xor
and
push
push
adc
pop
xlat
jne
dec
imul
dec
add
xchg
dec
xor
xor
inc
inc
add
and
data16
cmp
or
push
mov
out
mov
ret
popa
cld
jnp
dec
dec
sar
aas
lods
push
pop
push
mov
inc
fiadd
xchg
iret
lods
inc
pop
je
jmp
sti
jbe
pop
add
inc
inc
cmp
scas
or
in
jo
mov
xchg
inc
adc
and
push
arpl
or
dec
call
pop
loope
and
test
je
and
add
mov
ds
dec
and
rcl
xor
mov
add
lods
or
imul
jle
loopne
mov
or
sahf
and
test
sub
dec
mov
inc
or
inc
or
dec
sahf
add
daa
test
or
push
add
idiv
mov
fisubr
mov
sbb
das
mov
add
push
cld
movs
or
mov
add
push
or
in
dec
jle
push
cwde
(bad)
or
push
xor
gs
push
mov
jnp
cmp
jne
int3
adc
pop
pop
adc
push
pop
cwde
inc
mov
adc
and
loopne
dec
xor
and
mov
adc
add
xor
push
inc
fsub
inc
and
dec
repnz
rcl
jmp
ret
cmp
adc
data16
call
sub
mov
jle
push
lock
hlt
mov
sti
stos
mov
in
aas
cs
add
or
int
cmp
mov
sbb
push
jae
(bad)
xchg
retf
out
push
imul
or
push
inc
rcl
movs
dec
arpl
int3
xor
test
mov
push
shr
pusha
mov
pusha
mov
shl
mov
or
push
or
int3
or
xchg
and
scas
mov
sbb
mov
(bad)
dec
add
lock
adc
out
adc
dec
fsub
ror
add
push
inc
or
je
add
mov
sbb
jp
movzx
dec
mov
or
dec
push
mov
clc
inc
push
push
cmps
and
dec
aaa
mov
punpcklwd
pop
mov
loop
arpl
or
cmp
adc
test
pusha
adc
cmps
add
push
pop
and
cmp
cmp
lds
jl
mov
push
jle
retf
inc
xchg
iret
push
cld
in
adc
ja
or
hlt
lods
aas
push
xchg
jae
pop
imul
inc
aas
adc
pusha
ja
(bad)
(bad)
sub
jae
adc
mov
mov
pop
dec
pop
sbb
arpl
pop
dec
sbb
pusha
xchg
cmp
mov
mov
and
pop
jl
in
ds
dec
mov
je
and
pop
cli
add
sub
add
fisttp
pusha
xchg
inc
fwait
sub
add
fld
dec
xor
cmp
add
fmul
push
punpckhdq
mov
inc
fdiv
xor
dec
arpl
pushf
inc
test
(bad)
and
inc
or
out
push
inc
adc
std
or
adc
add
mov
test
mov
cmps
or
xor
sbb
ror
rcl
pop
jp
push
sbb
adc
xchg
test
add
ror
add
push
jnp
push
leave
add
push
sar
and
test
hlt
(bad)
mov
dec
sub
movs
fcmovb
add
jb
sub
jmp
outs
dec
or
xchg
aas
daa
xor
mov
cmp
sub
adc
into
cli
out
push
je
or
push
push
rol
imul
std
push
xchg
shl
fcmovu
js
jno
cmp
dec
mov
mov
push
push
mov
dec
ror
push
inc
cmps
mov
mov
mov
adc
cs
(bad)
cmp
add
jb
cmp
sub
lock
cld
add
adc
add
mov
test
jp
aas
sub
mov
cmp
test
pop
or
clc
pop
pop
inc
pop
and
imul
cmp
adc
into
adc
and
xchg
add
imul
pop
sub
daa
ins
aas
add
mov
mov
sbb
pop
ret
sub
sar
xor
stc
push
sub
pop
jno
fadd
jmp
inc
or
fidiv
ficom
jecxz
jmp
push
loope
cmps
xor
jae
pop
adc
lea
es
ja
or
and
scas
sbb
je
adc
and
pusha
inc
loopne
fadd
xchg
(bad)
adc
pop
xor
xor
aaa
cmp
sbb
or
loop
mov
pop
jmp
(bad)
jnp
test
ret
inc
pop
push
mov
es
push
lahf
dec
in
cmp
popf
dec
dec
(bad)
xor
loop
lods
clc
jnp
sbb
adc
das
daa
pop
or
loope
jb
cli
js
mov
push
pop
icebp
and
and
or
dec
call
add
ins
cld
(bad)
mov
mov
inc
test
jmp
dec
(bad)
jle
xor
push
sub
aad
daa
or
dec
sahf
sub
cmps
pushf
cdq
xlat
sub
dec
mov
add
hlt
ret
rcr
adc
pop
ret
mov
push
mov
xor
mov
(bad)
fdivr
or
adc
cmp
adc
or
and
jns
add
mov
or
cld
adc
ficomp
fdiv
or
sub
and
xchg
loope
clc
or
push
jg
je
jmp
retf
psrld
(bad)
fidiv
je
adc
je
and
je
jmp
popa
sbb
adc
inc
add
lea
(bad)
and
and
fld
mov
mov
add
ret
bound
add
adc
sbb
data16
pop
sub
adc
rol
xchg
adc
(bad)
jp
dec
int
xor
ja
adc
or
pop
push
adc
cmp
pusha
or
jmp
adc
nop
fcmovnb
pop
aaa
inc
or
sub
loopne
push
(bad)
xor
xchg
ficomp
ror
scas
ficom
jp
push
enter
inc
add
and
xchg
sub
jnp
jecxz
jmp
outs
jne
add
push
add
push
push
jmp
ret
pop
pop
dec
in
popf
adc
xor
and
or
xor
and
push
cmp
test
enter
push
push
push
sub
sbb
pusha
xor
push
add
and
cmp
adc
fistp
push
inc
and
or
and
cmp
push
mov
xor
mov
std
push
loop
push
push
pop
dec
cld
dec
cmp
nop
mov
sub
fisubr
xchg
ins
or
push
mov
add
inc
mov
or
adc
jno
adc
cli
pop
mov
ret
or
add
dec
movs
sbb
fidivr
adc
jb
sti
cdq
jno
inc
out
movs
dec
sub
daa
das
pushf
fisub
adc
dec
sub
jge
dec
(bad)
adc
inc
dec
adc
iret
adc
es
call
call
jge
dec
xor
ja
push
push
adc
mov
or
daa
cmp
fimul
cmp
ss
xor
add
lahf
inc
xchg
mov
push
mov
xor
clc
cmp
jae
mov
inc
add
push
adc
ror
lock
and
fist
stos
inc
das
addr16
xlat
enter
and
test
xchg
jb
jb
test
clc
add
je
push
mov
das
push
cmp
ret
jbe
cmp
iret
jb
(bad)
nop
shl
add
sbb
fnstsw
jnp
popf
sbb
pop
mov
inc
cmp
jne
push
mov
loopne
fisttp
jmp
mov
inc
lea
sbb
jge
adc
(bad)
cmp
xchg
lea
lea
cld
sub
cmp
je
and
loope
push
xchg
adc
and
dec
or
imul
addr16
rol
pop
je
repz
and
mov
dec
je
mov
ja
mov
inc
add
mov
(bad)
inc
addr16
push
mov
inc
shr
mov
int
adc
out
loopne
add
test
test
je
dec
cmc
push
and
hlt
pop
adc
and
icebp
dec
dec
pusha
or
pop
les
(bad)
jp
lock
(bad)
cmp
cmp
(bad)
mov
jno
push
add
mov
and
inc
add
rol
adc
cli
(bad)
leave
mov
xor
ds
jbe
cmps
push
adc
lods
dec
push
sbb
mov
adc
dec
nop
jbe
adc
adc
jnp
or
movs
xor
imul
mov
je
addsubpd
(bad)
scas
adc
pop
push
cmp
or
pop
movsx
cdq
add
pusha
imul
out
sbb
mov
inc
push
jmp
adc
push
push
clc
add
mov
sti
add
push
(bad)
xchg
rcr
movs
adc
lea
jbe
ins
xchg
xor
sbb
pop
lea
cmp
jne
inc
dec
or
aam
add
(bad)
adc
and
jg
mov
add
inc
sub
int3
add
arpl
hlt
call
xchg
pop
dec
adc
sbb
and
out
in
mov
xor
mov
sar
or
aaa
leave
iret
add
jne
lds
push
les
sbb
fisttp
or
pop
inc
mov
mov
pop
(bad)
xlat
(bad)
dec
or
jb
xchg
js
cs
xor
mov
loope
pop
cld
ds
ja
cmp
sub
sub
fdivr
sub
adc
sub
and
add
and
mov
mov
ins
retf
test
div
fiadd
jmp
dec
or
xor
inc
jmp
xchg
xchg
mov
or
bound
and
mov
inc
push
sahf
outs
and
and
push
shl
pop
push
sub
jecxz
int3
mov
js
inc
ror
jnp
es
ret
sub
dec
adc
adc
or
ins
or
xor
loop
adc
dec
sbb
and
movups
lea
mov
or
push
ins
(bad)
rcr
dec
hlt
mov
adc
or
ret
xchg
je
or
out
and
pop
shl
lea
add
sub
icebp
add
cmp
or
sti
enter
ja
scas
out
in
ret
push
cmp
mov
retf
pop
sbb
cmps
pop
or
mov
jge
(bad)
je
out
aad
out
lods
and
mov
inc
add
sahf
inc
cdq
js
jmp
inc
push
sar
mov
mov
and
mov
inc
cmp
jb
sbb
add
bnd
and
sub
or
imul
pextrw
adc
add
repz
sbb
add
add
jmp
add
mov
inc
inc
dec
xchg
ss
jbe
dec
or
mov
lahf
clc
enter
mov
dec
movs
test
mov
push
or
mov
mov
sub
add
adc
loopne
pusha
sar
or
idiv
jns
add
sub
or
mov
mov
inc
mov
dec
push
or
xchg
aaa
movs
mov
imul
pop
fisttp
add
jne
cmp
add
cmp
jle
jne
jmp
icebp
add
test
fcomp
inc
fdiv
sti
fwait
clc
mov
mov
dec
jmp
inc
inc
lea
pusha
inc
mov
add
es
outs
shl
dec
pop
xchg
sbb
xchg
shl
add
inc
and
cdq
test
sub
mov
clc
pop
push
cmc
scas
nop
jp
add
mov
mov
add
mov
fcmovbe
or
mov
ret
mov
push
push
push
sub
dec
lods
xchg
add
mov
jge
sub
xor
inc
sar
lock
mov
inc
cmp
add
shl
mov
pop
pop
add
rol
or
movs
push
dec
pop
retf
rcr
adc
sub
int3
pop
(bad)
xor
cmp
mov
adc
xchg
outs
mov
mov
mov
sbb
add
std
xor
(bad)
fs
fisubr
push
pop
pop
pop
xchg
inc
jnp
adc
add
outs
lock
mov
jge
mov
js
int3
test
push
sub
xor
xlat
push
bound
mov
shl
mov
fcom
ret
daa
mov
cmc
xor
rcl
not
and
cs
fcomp
inc
pop
pop
mov
push
cmp
imul
cmp
loope
or
mov
mov
sbb
cdq
call
mov
fist
add
lock
mov
pusha
ja
add
aas
cli
fs
sub
dec
mov
(bad)
call
pop
push
push
adc
mov
or
push
cdq
std
dec
rol
leave
cmp
loop
mov
mov
adc
je
sub
das
and
pop
jl
pcmpgtd
and
jo
adc
xchg
cmp
push
or
jecxz
adc
(bad)
sbb
rol
jp
test
sar
jbe
shl
adc
pop
mov
loope
clc
add
and
(bad)
iret
adc
or
inc
mul
xor
adc
aad
ror
adc
int3
adc
shl
(bad)
ret
push
push
loopne
and
shr
sbb
shl
cs
add
test
or
lea
imul
push
and
inc
mov
inc
pusha
lock
add
jg
shl
push
push
mov
xor
pop
(bad)
push
mov
mov
pop
cmp
loopne
sbb
aam
adc
lods
push
mov
adc
out
cmp
mov
lea
push
jmp
popf
pop
mov
jne
wbinvd
lds
pushf
je
inc
inc
cmps
mov
sbb
outs
or
sbb
xor
mov
cmp
sub
jo
out
shl
adc
inc
movs
or
inc
and
sub
lods
mov
push
loop
inc
cmps
or
mov
lock
in
jl
mov
lea
adc
xchg
sbb
mov
sti
lock
shl
shl
loope
push
push
add
cwde
dec
ss
push
jno
mov
xor
hlt
cld
add
add
lea
(bad)
cmp
push
addr16
rol
jmp
pushf
add
push
and
add
mov
pop
xor
cmps
pop
cli
loope
jl
cmp
mov
jnp
xchg
mov
inc
mov
fsubr
adc
add
sub
cmps
dec
jmp
test
lahf
push
fnstenv
adc
ret
cmp
mov
mov
sbb
xor
cmp
je
adc
push
les
movs
fisttp
mov
(bad)
jb
jmp
js
loop
mov
sbb
pop
jle
add
push
xchg
jne
data16
fdivr
pop
adc
loop
(bad)
or
mov
jmp
or
adc
(bad)
jg
sbb
lea
int
mov
ret
cld
es
mov
sbb
cmp
inc
push
adc
add
les
ret
push
idiv
and
jmp
mov
push
mov
ret
xchg
ret
mov
lods
ins
test
mov
add
outs
xor
dec
push
loope
inc
nop
push
dec
sub
mov
dec
dec
adc
adc
adc
adc
rol
mov
jmp
not
inc
or
push
lea
ret
mov
dec
mov
sub
or
test
pop
je
or
int3
push
daa
iret
sar
or
adc
add
mov
(bad)
test
adc
push
adc
adc
inc
adc
pop
sub
pop
inc
push
mov
mov
lea
sbb
not
pop
imul
push
inc
push
or
or
sub
hlt
dec
push
push
call
mov
push
pop
jne
mov
test
sbb
popf
pusha
in
dec
popa
imul
or
mov
xchg
test
xor
push
adc
mov
pop
retf
add
push
ret
ret
sbb
xlat
scas
data16
ret
inc
sub
mov
dec
dec
xor
push
sbb
jecxz
ret
jae
fcomp
jae
dec
add
xor
ror
fdivr
and
dec
imul
mov
inc
mov
cs
or
push
mov
out
jecxz
mov
pop
cs
out
cli
and
loopne
push
inc
jbe
and
add
inc
sub
add
or
push
or
sub
(bad)
adc
add
push
xchg
inc
pop
cmps
mov
test
lds
ret
mov
cmp
rcr
pop
push
pop
or
jmp
shl
adc
test
pop
out
adc
ins
test
(bad)
cmc
push
xor
sbb
rcl
add
call
rcr
leave
dec
mov
push
aam
and
loop
push
cmp
push
push
popa
lahf
ret
jge
call
mov
mov
loopne
inc
mov
sub
mov
sub
rcl
int3
sbb
dec
push
je
and
paddusb
adc
in
ja
loope
dec
add
repnz
inc
xchg
push
jge
cdq
pop
repz
sbb
outs
ss
data16
repz
popa
es
cmp
aas
push
das
push
and
stos
ds
or
into
add
pop
test
sub
inc
add
mov
or
or
or
or
rcl
rol
ror
(bad)
and
popa
leave
shr
mov
jg
xor
or
add
jmp
push
mov
xor
adc
aaa
test
call
add
dec
or
jne
out
inc
jecxz
adc
xor
or
and
adc
sbb
adc
ss
nop
cmps
sub
clc
cdq
dec
retf
fiadd
jo
inc
ins
sbb
pop
add
push
cwde
mov
ror
lods
sbb
pop
pop
rcl
jl
xor
mov
cmovb
inc
jl
or
stc
or
or
add
(bad)
pusha
sub
pop
test
pushw
mov
pusha
adc
inc
sbb
sbb
fiadd
es
cwde
or
(bad)
jmp
cmp
xchg
cdq
pop
mov
sar
cmp
add
sbb
push
jmp
cmp
inc
iret
push
(bad)
dec
stos
or
adc
imul
dec
add
fisub
add
sub
movs
adc
loope
pop
adc
int3
push
push
(bad)
adc
inc
into
jo
dec
fld
jmp
leave
sti
push
mov
outs
bound
dec
shl
push
push
fsub
or
add
adc
push
les
push
call
loopne
lock
xchg
shl
inc
les
and
jne
icebp
sub
dec
(bad)
(bad)
dec
shr
sub
push
dec
(bad)
ror
add
ds
mov
jae
mov
mov
mov
mov
mov
fsub
call
mov
lea
push
jns
mov
shr
mov
mov
dec
je
add
push
mov
rol
data16
sbb
loop
(bad)
retf
push
add
or
fstp
(bad)
dec
or
jo
loop
jb
add
jo
pop
xor
ror
push
xor
fdivr
ins
inc
les
ret
or
das
or
or
cld
inc
pop
sbb
das
push
ja
lock
inc
rcr
mov
mov
ret
xchg
xchg
cmp
sbb
sub
mov
ror
out
arpl
adc
fadd
sbb
aaa
push
shl
pop
stc
sub
xor
test
xchg
nop
dec
inc
call
sti
pop
push
or
cld
mov
sbb
pop
out
adc
xchg
mov
and
lods
jmp
mov
inc
xchg
add
icebp
imul
sub
les
and
ret
xor
sbb
loop
outs
(bad)
xor
add
fdivr
cwde
mov
mov
daa
jmp
mov
je
aaa
mov
int3
ret
(bad)
enter
test
and
lods
cmps
jno
mov
loop
call
shr
imul
xor
dec
mov
or
jge
ss
mov
arpl
sbb
xchg
jge
mov
addr16
inc
popa
mov
clc
pop
js
cmps
imul
js
xor
hlt
or
mov
mov
push
pop
push
and
add
pop
in
aam
adc
mov
lock
dec
sbb
mov
mov
sub
repnz
xor
push
or
push
loop
retf
jne
sub
fistp
inc
and
sar
jne
in
lods
pop
sti
js
push
call
mov
lods
(bad)
aad
add
jns
push
mov
fsub
mov
(bad)
push
(bad)
fst
jmp
adc
jl
mov
cmp
xor
sbb
jp
test
mov
sbb
cmps
xor
and
jge
lea
in
fmul
cmp
sub
pop
push
push
nop
push
nop
add
std
xchg
mov
pop
and
adc
push
push
in
fbld
sub
pop
pop
push
data16
jne
cmp
push
mov
aaa
or
or
mov
add
shl
pop
ret
sti
jae
fdiv
fcomp
fadd
inc
and
(bad)
add
or
add
ds
add
cmp
mov
and
pop
xchg
adc
inc
sub
cld
push
dec
cmp
sub
or
mov
push
push
or
ds
xchg
out
lock
adc
sbb
div
aam
cmp
push
les
mov
pusha
or
xchg
test
push
pop
aad
jp
push
sbb
sbb
mov
inc
adc
pop
(bad)
ficomp
xor
push
into
pusha
sti
inc
mov
rcl
psubd
(bad)
cwde
popa
cmp
jae
xchg
jo
pusha
push
mov
inc
outs
jl
lds
add
ficom
ret
gs
and
add
mov
das
and
jge
and
adc
add
sub
popa
daa
sbb
push
push
bound
test
clc
pop
jo
shl
lea
add
mov
add
lods
or
jl
mov
imul
ror
xchg
inc
inc
inc
cmovge
fmul
inc
mov
bnd
inc
loopne
add
cmc
jne
mov
std
mov
mov
dec
mov
push
sbb
adc
jne
or
add
popa
dec
cmp
sbb
inc
adc
add
xchg
adc
sbb
imul
daa
mov
dec
mov
dec
push
scas
sub
sub
fcomip
adc
dec
mov
rcl
cmp
add
xchg
or
rol
add
jl
fsub
or
loopne
cmp
or
or
int3
xchg
inc
add
or
or
mov
push
(bad)
int3
mov
pop
fwait
and
adc
dec
push
mov
ror
dec
fcmovne
add
jnp
(bad)
sbb
cmp
dec
outs
popf
xchg
pushf
mov
cmp
(bad)
push
mov
pop
xchg
lea
pop
jle
add
push
neg
adc
cmp
ja
pop
cmpxchg
push
scas
push
push
cmp
jl
mov
xchg
mov
pop
push
cmps
cmps
jno
inc
jo
xchg
xor
fs
cmp
jbe
test
jmp
pop
add
push
mov
push
sub
loop
cmp
jge
dec
adc
pop
add
mov
dec
or
shr
dec
dec
test
jge
lock
inc
xchg
ror
clc
and
mov
loopne
adc
xor
xchg
xor
jmp
adc
mov
mov
and
mov
inc
xchg
sar
test
and
inc
repnz
in
add
pop
ins
adc
js
inc
mov
test
mov
push
in
adc
dec
js
or
or
mov
mov
in
(bad)
and
mov
dec
cli
jg
cmp
out
jg
add
rcl
in
mov
(bad)
scas
call
rol
jmp
movs
out
sahf
adc
push
mov
sti
iret
repz
aam
movs
cmps
push
outs
adc
cmps
push
sbb
sub
pusha
mov
push
ror
dec
test
(bad)
push
imul
inc
lea
out
mov
xchg
mov
movs
mov
or
xchg
fwait
pop
xchg
pusha
add
imul
jge
sub
pop
div
and
lock
mov
and
jge
jne
xchg
jecxz
iret
xlat
push
inc
sbb
sbb
sub
sar
push
pop
push
jo
add
sar
nop
jmp
ror
or
rol
clc
cmp
(bad)
sub
jmp
add
mov
sub
js
push
jns
mov
call
aam
and
add
test
dec
cld
mov
addr16
fmulp
iret
adc
pop
enter
out
and
call
aam
int
call
ss
out
cld
(bad)
xchg
inc
xor
xor
enter
fld
cld
xor
xchg
add
inc
cmp
pop
xor
mov
pop
mov
mov
add
adc
push
sub
mov
test
je
cmp
sub
scas
or
jns
fbstp
je
jge
test
aaa
aam
jge
jmp
push
xor
sbb
mov
bound
data16
je
movsx
arpl
mov
imul
sub
rcl
push
or
push
call
dec
fucomip
add
pop
cld
jle
and
in
inc
add
jmp
sbb
je
cmps
add
jecxz
and
(bad)
call
push
inc
xor
sbb
or
or
aaa
mov
mov
mov
call
push
cmp
jne
dec
cmp
and
cmp
mov
fmul
add
mov
jg
sbb
push
les
mov
dec
sub
ins
dec
cdq
(bad)
jnp
sbb
sub
jecxz
in
(bad)
test
sti
ret
add
(bad)
ds
or
stos
add
fadd
or
aaa
xchg
dec
fstp
shl
dec
je
test
add
test
shr
(bad)
ins
mov
mov
add
loope
pop
pop
sub
or
jg
lahf
xor
outs
(bad)
inc
and
jmp
int
rol
repz
inc
pop
sbb
add
xor
or
xor
inc
and
mov
fstp
sub
outs
mov
mov
xchg
and
addr16
je
shl
pusha
out
jg
push
mov
xlat
rol
push
and
or
push
mov
fld
jge
cmp
(bad)
mov
daa
mov
(bad)
or
iret
and
mov
push
xor
pop
(bad)
ja
mov
das
clc
xor
sub
rcl
xchg
or
inc
push
shl
aas
into
cmp
sbb
push
lock
je
jne
imul
sbb
jg
dec
mov
jge
or
jle
lock
pop
fiadd
xor
inc
jg
call
jmp
es
pop
xor
add
lock
cld
or
rcr
and
pushf
or
sbb
push
pop
fild
pushf
ret
cmp
in
adc
and
add
push
pusha
shr
fimul
int
inc
cld
aaa
je
(bad)
adc
std
loopne
je
mov
sub
or
push
jmp
lock
sbb
aad
adc
jne
sbb
jo
mov
push
adc
stos
pop
dec
lods
push
int
xchg
mov
inc
mov
xor
scas
stos
cli
mov
or
cs
sbb
xchg
mov
xchg
xor
pop
lock
mov
jge
mov
inc
mov
inc
or
lods
sbb
lods
test
icebp
js
ret
dec
mov
loopne
jo
dec
mov
push
stos
jmp
jg
loopne
sbb
sub
dec
inc
push
cmps
xchg
inc
cld
xchg
or
call
mov
rol
(bad)
mov
aaa
add
push
adc
adc
loopne
and
test
add
mov
push
mov
or
sub
loopne
inc
jnp
in
inc
mov
clc
mov
mov
inc
not
jmp
inc
test
and
data16
xor
scas
add
adc
cmp
jb
pop
pop
outs
adc
aaa
mov
inc
bound
test
inc
aaa
mov
or
xchg
cwde
ror
jo
rcr
jne
(bad)
ret
pop
fprem
lahf
popa
movsx
cmp
jg
jmp
dec
int3
scas
inc
push
fstp
push
jmp
and
add
lahf
push
sbb
dec
sub
mov
and
push
lea
pop
cld
mov
test
hlt
rol
imul
cmp
call
loop
inc
cmp
popf
fidivr
push
xor
daa
in
sahf
popa
pop
ins
(bad)
in
sahf
add
in
in
sahf
add
hlt
sbb
in
add
cmp
or
inc
mov
inc
cmp
je
dec
or
push
das
inc
popa
cli
test
daa
hlt
add
or
cmps
add
loope
dec
leave
xchg
add
or
sbb
sub
ins
fist
pop
gs
and
add
and
(bad)
out
add
inc
push
sbb
gs
out
pop
fwait
push
and
enter
pop
jge
mov
sbb
sub
mov
jae
xchg
test
cmp
jg
push
push
je
dec
xchg
mov
adc
sbb
jmp
mov
dec
sar
mov
mul
and
pop
ret
sub
jmp
add
xchg
cmc
push
mov
(bad)
(bad)
(bad)
push
adc
xchg
in
or
ds
xchg
je
sub
add
xchg
jg
in
pop
add
aad
jbe
adc
or
add
add
movzx
or
and
push
pop
push
push
sub
dec
in
popa
pop
daa
push
scas
jbe
push
aam
xlat
pop
in
push
or
add
xor
mov
jecxz
jno
mov
mov
inc
mov
mov
or
lock
xchg
or
push
add
test
dec
loop
mov
mov
cmp
cmp
adc
adc
ss
andps
dec
xchg
pop
dec
and
mov
pop
push
ror
mov
sub
pop
pop
ja
and
jp
and
inc
retf
mov
push
cmp
mov
sbb
mov
addr16
mov
inc
mov
add
push
cmps
cmp
mov
push
cmp
(bad)
mov
clc
test
jmp
mov
or
retf
movs
dec
aad
xor
movs
sub
or
jne
in
jbe
ret
mov
pop
pushf
shl
pop
mov
mov
cmp
cld
or
adc
sbb
les
inc
jbe
adc
test
test
cld
inc
and
test
push
mov
jbe
in
adc
movs
lock
stc
jl
cmovb
aas
or
aas
je
leave
lods
in
adc
cmp
push
mov
push
xchg
mov
xchg
mov
add
pushf
or
std
sbb
dec
into
and
cmp
xor
xor
and
push
pop
and
xchg
push
call
xchg
bound
jecxz
out
pop
cs
mov
pop
xlat
clc
and
push
dec
cld
test
loop
pop
ins
push
ret
push
mov
or
dec
add
adc
aaa
ret
jge
sahf
or
pop
or
sub
xchg
or
imul
(bad)
in
repnz
push
push
or
stc
mov
leave
cmps
lea
sub
rol
inc
xchg
jo
retf
inc
push
scas
mov
add
test
mov
mov
pop
push
enter
je
mov
xor
xchg
setns
sbb
mov
outs
cwde
dec
jne
or
outs
ja
inc
jne
or
pop
jne
pop
push
icebp
je
jae
mov
mov
cld
cmc
or
test
pop
not
sti
hlt
sub
add
mov
dec
shr
fisttp
sub
jp
inc
dec
mov
cmp
(bad)
or
pop
and
inc
add
arpl
push
imul
sbb
push
aam
mov
stos
xor
jbe
inc
in
xor
retf
jmp
les
and
sbb
mov
and
pop
or
adc
push
lods
inc
mov
mov
sub
div
push
inc
and
and
add
jns
xor
in
(bad)
sub
xchg
ret
push
push
loope
sbb
mov
jns
mov
addr16
fwait
mov
sbb
dec
inc
fisubr
pusha
adc
mov
sub
jno
inc
sub
enter
jmp
daa
test
add
mov
pushf
ss
ja
or
lods
push
cmp
adc
in
sbb
add
ins
(bad)
pop
fs
sub
mov
sar
mov
and
ins
clc
pop
jmp
mov
mov
add
push
not
leave
(bad)
push
push
xor
(bad)
dec
lock
ds
in
push
push
in
add
and
sbb
adc
push
stc
pop
ss
sbb
sbb
das
cwde
mov
xor
das
adc
cmc
das
sub
sti
cmp
mov
fcom
mov
pop
aas
enter
sbb
adc
nop
sahf
js
pop
mov
add
cmps
sbb
xchg
and
jp
xchg
mov
mov
xchg
jne
adc
mov
or
mov
sub
sbb
add
sbb
test
jl
sbb
test
fs
loop
or
dec
jno
(bad)
mov
add
xor
sub
jns
inc
loopne
ret
rol
popa
or
push
mov
imul
push
fucomip
sub
inc
cs
pop
retf
retf
or
add
add
rol
adc
adc
dec
js
lods
loop
mov
jo
push
(bad)
inc
movs
pop
xlat
inc
and
or
and
xor
inc
cmp
jne
push
cld
inc
ret
mov
push
push
dec
imul
call
jb
mov
imul
adc
int
jmp
test
test
and
cmp
jne
push
mov
push
call
mov
fld
xor
xchg
fs
adc
lahf
sbb
and
addr16
fcomp
inc
push
fwait
sbb
leave
inc
fisub
jmp
xchg
sbb
jo
movs
add
pop
adc
add
lahf
sub
pushf
sahf
or
mov
int3
imul
outs
loopne
clc
and
cmp
mov
test
adc
dec
adc
inc
adc
sbb
jbe
push
dec
sbb
sbb
mov
push
and
sub
xor
test
mov
test
and
mov
cwde
add
icebp
jne
pop
add
and
je
shl
push
or
enter
adc
or
or
xor
or
cmp
enter
inc
inc
dec
or
or
push
or
pop
pop
enter
pusha
fs
ins
jo
xchg
or
cmp
imul
xor
mov
nop
sbb
mov
xchg
cwde
nop
or
mov
lods
mov
mov
or
mov
push
ret
and
push
cmp
cmp
mov
test
inc
je
sub
sbb
in
sbb
test
and
adc
jns
movs
cdq
xlat
test
mov
xchg
add
mov
cmp
add
and
cli
cmp
cwde
sbb
cmp
sbb
ror
adc
sbb
or
adc
sbb
sbb
push
xor
shr
mov
mov
pop
ja
stc
lea
cld
or
pop
inc
test
mov
mov
js
out
xor
fst
and
test
push
lahf
push
jle
loope
xlat
dec
add
xchg
jp
add
rol
sbb
xchg
mov
inc
data16
adc
cwde
dec
dec
push
dec
adc
sbb
or
pop
out
mov
js
adc
imul
stos
aad
ror
push
dec
mov
jne
rcl
sub
cmp
out
lea
mov
repnz
popf
loop
push
mov
pusha
jnp
pop
push
inc
push
rcr
in
mov
pop
add
add
jge
pop
xchg
in
clc
mov
shl
arpl
mov
push
jl
add
add
mov
xor
addr16
std
pop
add
push
iret
ins
push
popa
jmp
add
pop
out
sbb
push
mov
push
xor
inc
lods
mov
jb
adc
add
aaa
pop
or
sbb
push
ins
and
mov
add
aam
test
rcr
push
push
push
cmp
test
addr16
xor
mov
push
push
jle
into
inc
adc
mov
loope
sub
and
push
push
inc
and
jge
jne
popa
push
je
mov
or
add
push
fwait
mov
xchg
js
add
(bad)
adc
push
or
jl
mov
xchg
or
jmp
or
ror
jbe
inc
repnz
or
sti
aas
lds
(bad)
outs
inc
inc
sbb
scas
pop
cmp
cmp
jle
xor
push
js
mov
cs
data16
fild
cmp
add
add
push
ja
les
dec
dec
xchg
or
fisttp
mov
adc
adc
pop
pop
adc
cli
sar
pushf
push
inc
sub
and
adc
and
adc
imul
adc
inc
call
std
mov
and
push
push
pop
xor
imul
mov
mov
dec
inc
push
nop
sbb
mov
push
dec
mov
jo
dec
pushw
jbe
out
jno
push
jecxz
jo
lods
mov
and
add
sub
push
dec
and
lea
mov
sub
sbb
sub
push
sbb
add
add
mov
xor
adc
test
and
sbb
fcom
shr
sti
sub
add
movs
sub
nop
out
call
movs
cmp
inc
add
out
gs
xor
xor
imul
pop
xor
pop
ss
push
movs
cmp
inc
call
xor
xor
js
sbb
int
and
fild
or
arpl
mov
jbe
xchg
add
inc
push
in
and
pop
inc
pushf
inc
cs
jb
mov
enter
dec
lods
and
dec
pop
push
in
mov
mov
cmp
stc
and
mov
and
jb
xchg
and
call
and
mov
es
add
(bad)
xchg
cmp
mov
mov
fimul
mov
imul
xor
push
inc
or
sar
ret
outs
xor
in
(bad)
mov
push
push
push
adc
rcl
loopne
adc
pop
in
inc
xchg
push
push
sbb
fimul
bndstx
fcom
shl
stos
push
and
fistp
stos
push
and
add
mov
push
adc
add
push
pop
mov
sub
and
inc
inc
mov
xlat
sub
push
jae
mov
sbb
mov
mov
sar
jno
ror
or
shl
inc
fwait
push
leave
sbb
jp
push
pusha
xor
adc
clc
lea
dec
adc
push
and
mov
mov
inc
mov
mov
adc
sub
shl
sub
aaa
mov
mov
mov
mov
adc
fadd
movs
inc
pop
icebp
add
out
mov
cmps
xor
push
push
sahf
add
dec
iret
push
xchg
fs
or
mov
loop
and
inc
aam
push
xchg
inc
or
call
movs
neg
or
push
xor
add
mov
es
or
js
frstor
sub
mov
mov
and
mov
xchg
je
pop
jl
or
mov
out
or
in
loop
mov
add
push
mov
push
xlat
scas
shr
outs
add
div
mov
xor
add
daa
add
or
jg
add
mov
add
(bad)
adc
and
(bad)
and
pop
adc
push
add
push
adc
daa
xor
loope
leave
ss
mov
test
fnsave
xchg
add
push
dec
and
fwait
mov
pop
push
dec
(bad)
mov
rcl
sbb
aam
jbe
(bad)
loope
in
mov
jne
fcom
inc
pop
mov
inc
cld
mov
js
pop
sub
ret
or
push
mov
mov
jo
shr
test
icebp
(bad)
inc
sbb
mov
add
test
movs
ja
lods
and
sub
jl
push
iret
fadd
sbb
cmp
pop
movs
mov
mov
cmp
pop
mov
adc
mov
push
and
push
cld
add
mov
dec
dec
dec
cmp
loopne
mov
pop
outs
(bad)
jmp
lea
inc
push
and
add
mov
inc
dec
cli
cmp
jecxz
(bad)
push
pop
add
dec
js
stos
xchg
or
cmp
or
mov
(bad)
adc
or
fld
lea
pop
and
push
fmul
and
push
add
in
dec
call
add
adc
jae
cmovo
add
hlt
out
or
fld
mov
sbb
and
loop
pop
inc
aaa
call
ins
ret
cld
inc
pop
out
adc
fimul
cs
adc
call
outs
(bad)
ins
jb
aam
mov
sbb
fisubr
sar
lea
sub
aas
add
push
ror
sbb
sub
sbb
js
lock
push
jmp
inc
cdq
je
push
jns
push
xor
pop
imul
add
cmp
sbb
inc
jbe
mov
add
cmp
jge
jmp
cmp
gs
inc
inc
inc
sub
js
or
lods
mov
dec
inc
cld
and
or
mov
lods
or
leave
or
add
mov
popa
adc
cmps
push
inc
xor
aam
std
(bad)
cwde
pop
mul
add
add
adc
pop
pop
ret
dec
mov
imul
ret
fimul
mov
neg
neg
sbb
lds
jle
sbb
test
mov
or
aam
jb
shl
rcl
jg
lods
call
(bad)
rcl
cmp
jb
ja
jb
sub
sbb
inc
(bad)
(bad)
xchg
clc
loop
pop
test
add
repz
jmp
sub
mov
sub
pop
add
adc
adc
xchg
repnz
push
ja
out
das
mov
cmp
and
inc
jl
mov
fisub
mov
shl
or
movs
ret
ret
aaa
mov
call
ret
clc
lods
lahf
retf
xchg
ret
aaa
jmp
test
add
rcr
call
jge
sub
mov
sub
adc
mov
mov
daa
in
inc
inc
pusha
lds
cmp
dec
enter
test
inc
mov
sbb
add
iret
jnp
(bad)
out
or
data16
adc
outs
push
cld
je
xchg
hlt
fmulp
fstp
fwait
inc
ret
mov
add
pusha
sub
mov
(bad)
daa
sub
je
nop
add
add
push
pushf
cmps
div
div
mov
sub
sbb
shl
fdivr
clc
push
fiadd
add
fdivr
or
int
call
fwait
cmp
shr
and
jmp
sbb
jle
xlat
add
movs
xchg
outs
add
inc
mov
dec
xor
mov
loop
(bad)
ss
mov
push
outs
loope
sti
(bad)
dec
pop
pop
lea
fnstsw
fnclex
fidiv
es
fstcw
mov
add
not
(bad)
stos
movs
fdivr
and
or
data16
ins
jb
cmp
dec
enter
lock
push
push
imul
adc
fninit
shr
pop
nop
xor
jns
cmp
hlt
fwait
mov
sahf
push
fld
xor
int3
clc
fbld
rcr
mov
or
add
mov
ja
test
jne
(bad)
mov
mov
es
push
jno
cmp
(bad)
ds
and
pusha
inc
sub
out
mov
cmp
fld
fistp
fwait
adc
addr16
and
aaa
lods
or
in
fstsw
pushf
rcl
loope
fcomp
hlt
or
hlt
mov
adc
add
ror
and
jge
sbb
dec
sub
or
shl
and
pop
int3
or
pop
mov
add
xor
and
or
out
ret
push
pop
push
cmp
rol
dec
jmp
dec
mov
cmp
sbb
push
add
mov
and
add
not
mov
mov
add
lahf
jbe
rcl
mov
dec
jmp
dec
inc
mov
or
cmp
pop
inc
add
nop
add
dec
sub
jge
and
cli
jne
sar
sub
fstp
fld
leave
shl
jae
inc
je
pusha
sbb
lock
cdq
jne
jle
and
sbb
and
sub
ins
(bad)
pushf
fstp
lods
inc
in
stos
lock
jmp
mov
adc
push
and
rcr
jmp
sub
aas
outs
pop
dec
or
add
add
add
jne
pop
cmps
xchg
jo
jmp
in
fidiv
shl
jno
and
jb
and
(bad)
mov
add
pop
mov
loopne
(bad)
jmp
ins
mov
xchg
adc
loop
add
pushf
jl
xchg
jg
push
test
mov
or
adc
(bad)
sar
cli
add
hlt
add
std
add
mov
inc
adc
push
push
dec
mov
add
add
and
popa
dec
sbb
int
or
leave
enter
lods
scas
or
or
clc
cs
inc
and
adc
push
cli
in
leave
inc
pop
push
ret
popa
xchg
mov
fwait
xchg
in
ins
sbb
or
in
mov
dec
or
sqrtps
or
sub
jne
pop
adc
push
adc
push
pusha
shl
push
aam
and
adc
clc
cmp
sbb
push
and
out
inc
mov
sbb
xor
or
fsub
pop
jp
pop
aaa
push
push
push
xor
xlat
pushf
aam
fadd
test
push
pop
pop
xlat
pop
nop
nop
shl
(bad)
(bad)
or
inc
je
or
adc
or
div
stos
or
fwait
hlt
push
jg
xor
adc
in
dec
inc
and
mov
das
xor
jnp
cmps
test
and
mov
jle
or
(bad)
jg
or
mov
and
mov
cmp
jne
imul
adc
and
sbb
push
(bad)
inc
jg
or
inc
dec
add
sub
inc
mov
enter
xor
sbb
mov
or
xor
loop
cmp
and
sub
mov
xor
mov
inc
dec
jnp
cmp
(bad)
sbb
outs
cli
sti
shr
in
bound
sub
inc
jne
dec
retf
std
fisubr
or
not
nop
inc
sub
cmps
mov
movs
xchg
pop
xor
mov
icebp
stos
imul
inc
mov
div
xor
jmp
sub
test
inc
sbb
xor
in
jmp
jge
fisubr
iret
mov
add
add
mov
(bad)
and
sbb
sbb
sbb
mov
push
dec
retf
pushf
mov
daa
mov
je
add
jmp
inc
ret
test
fmul
inc
cmp
sbb
neg
lods
outs
adc
push
cmp
and
or
jno
add
jmp
sub
jle
clc
or
adc
adc
sbb
fs
add
push
mov
lea
jno
and
add
xchg
fcmovne
push
aaa
movs
dec
(bad)
sbb
dec
and
stos
icebp
cmp
inc
mov
or
ret
push
or
mov
imul
add
add
push
lds
adc
mov
cmc
mov
or
adc
sub
add
(bad)
add
jle
cmp
jne
xor
(bad)
shl
and
pop
dec
add
aas
or
or
add
and
or
not
pop
repnz
push
pushf
fisub
(bad)
inc
xchg
cmp
push
jge
in
xor
rcl
push
mov
push
push
dec
retf
inc
cld
inc
push
inc
ret
sub
adc
sub
push
cmp
(bad)
ror
repnz
push
mov
xor
test
mov
lods
sub
in
push
inc
xor
clc
mov
sbb
pop
cmc
push
(bad)
stc
and
outs
cmp
mov
or
push
pop
adc
(bad)
loopne
(bad)
std
into
cwde
or
and
or
loop
ins
iret
mov
jmp
xchg
fdiv
mov
sbb
aas
retf
xor
mov
cmp
mov
aam
jmp
cmp
mov
fs
ins
xchg
pop
adc
inc
xor
fstp
dec
aad
dec
scas
shr
sub
pop
xor
or
or
and
jmp
mov
adc
dec
jmp
addr16
cli
mov
mov
loope
adc
dec
ret
add
adc
loopne
enter
xlat
jl
jns
test
hlt
push
repz
xor
mov
mov
inc
xor
jmp
rol
jl
pop
cs
push
mov
sub
cmps
xor
cmp
mov
push
fadd
mov
and
mov
lock
mov
sbb
adc
stos
clc
add
enter
sbb
cmp
lock
imul
adc
sub
pop
aam
sbb
and
call
scas
int3
scas
jns
lods
push
add
mov
jmp
pop
jmp
ficom
xor
adc
test
mov
sar
pop
shl
cdq
fs
dec
cld
das
dec
jg
jnp
retf
dec
sub
ret
mov
sub
jne
mov
xchg
pop
push
dec
mov
adc
ins
nop
push
ror
or
int
mov
call
mov
sti
jmp
out
adc
jne
mov
gs
mov
pop
sbb
or
xor
aas
and
out
adc
or
hlt
sub
test
mov
inc
and
xlat
inc
and
xchg
fidivr
lock
lods
sti
mov
xchg
inc
mov
mov
mov
neg
adc
adc
sar
mov
aam
ds
or
add
test
sub
mov
adc
inc
sbb
ja
sub
or
inc
or
jmp
xchg
clc
fisub
aam
jmp
jo
and
push
push
sti
mov
sub
push
add
cmp
sub
(bad)
xchg
pop
fisttp
cmp
add
push
neg
mov
std
repz
jge
fld
add
fdivrp
push
les
dec
mov
and
loopne
xchg
jb
test
xor
call
sbb
or
push
add
xor
mov
gs
jp
push
pop
xor
icebp
jl
pop
das
xor
out
daa
(bad)
dec
aaa
sub
and
xor
clc
shl
sbb
sahf
or
pusha
and
and
jae
xor
add
cmp
int
cmp
xchg
jbe
call
pop
push
ss
dec
outs
inc
leave
mov
or
je
mov
mov
add
in
jne
jp
xor
data16
jg
mov
jae
push
movs
enter
push
push
sbb
push
cmp
xor
mov
mov
outs
lock
loop
mov
mov
pop
clc
fwait
and
push
add
pop
add
fnstenv
mov
shl
adc
sbb
(bad)
(bad)
cmc
add
or
daa
ret
rol
loope
mov
push
fnstenv
add
xlat
pop
add
xchg
pushf
xlat
pop
sub
and
add
and
fldenv
(bad)
out
pop
jno
adc
(bad)
mov
mov
rol
pushf
add
push
adc
adc
mov
rol
js
mov
adc
cld
jmp
inc
inc
and
sbb
or
adc
mov
push
nop
add
rol
pop
clc
fld
adc
ror
cld
lods
add
and
pop
lea
rcl
mov
adc
loopne
mov
push
call
adc
add
cmp
push
shl
or
fild
sub
pop
in
inc
push
push
cmp
mov
add
add
or
mov
add
add
(bad)
mov
mov
add
call
add
xor
add
shl
aaa
lods
mov
movsx
sub
ret
sar
push
sbb
test
dec
fcomp
cmp
or
in
sub
jl
jnp
call
push
mov
jne
xchg
shr
test
push
xor
xchg
or
add
xor
nop
loopne
icebp
add
repz
pop
leave
sub
pop
fisub
in
push
popa
xor
fcompp
jecxz
js
adc
push
pop
push
or
jle
push
(bad)
cld
fild
jp
(bad)
arpl
dec
call
jbe
lock
jne
cmc
inc
mov
jno
dec
hlt
push
dec
add
jl
mov
repnz
jle
sub
outs
dec
lock
and
mov
(bad)
mov
jno
inc
sbb
or
mov
dec
dec
sbb
fild
fucom
mov
cmp
out
xchg
add
xchg
inc
add
jmp
pop
mov
pop
or
mov
pop
rol
add
adc
fidiv
shl
sub
ja
inc
add
mov
xlat
daa
xchg
stos
sub
pop
adc
scas
xchg
outs
enter
pop
imul
stos
loope
cdq
sub
dec
push
stos
dec
cmp
jmp
rol
or
pop
inc
dec
pop
in
nop
mov
aad
inc
sub
hlt
inc
and
add
adc
(bad)
adc
or
sbb
push
out
xchg
mov
stos
inc
add
add
push
push
inc
iret
sbb
inc
and
and
sbb
dec
int3
mov
sbb
loop
jne
test
or
je
dec
aaa
iret
dec
sbb
cld
jne
pop
hlt
dec
jl
and
cdq
push
and
pop
pop
loop
stos
and
sbb
inc
add
hlt
es
mov
lahf
leave
in
add
xchg
fld
jmp
lea
fwait
mov
data16
pop
fiadd
fisubr
or
loope
rol
or
lods
jno
cmp
sub
inc
mov
(bad)
pop
sbb
leave
mov
jle
ds
fs
add
test
ret
mov
mov
mov
out
js
add
sbb
pop
dec
arpl
push
dec
push
or
mov
hlt
push
or
stos
xor
fwait
pop
fild
mov
and
aaa
mov
xchg
cmc
or
adc
loopne
bound
test
push
stc
add
add
pop
add
jle
push
dec
or
lock
and
outs
xor
ja
aaa
push
fisub
cmps
jmp
lods
inc
ja
lock
je
xchg
or
pusha
sbb
jecxz
lea
fcomp
cmp
sub
and
or
xor
mov
bound
(bad)
loopne
add
dec
or
mov
jns
xor
lock
adc
or
test
cli
add
add
sbb
or
pop
jecxz
pop
add
popa
pusha
js
xor
sbb
dec
stos
xchg
inc
or
or
pop
or
daa
aaa
pop
sub
add
fidivr
retf
jne
sub
sbb
ja
jmp
sub
push
add
test
sar
add
sub
jp
xchg
adc
add
jmp
dec
mov
sub
sbb
test
js
mov
mov
jo
mov
lods
(bad)
adc
push
mov
jo
xchg
push
clc
mov
mov
push
xchg
jp
or
sbb
adc
pop
push
mov
and
mov
inc
pusha
call
push
aas
pop
pushw
dec
xchg
jmp
adc
adc
sbb
loop
or
or
xor
mov
sbb
pop
adc
addr16
js
loopne
aaa
pop
or
xchg
clc
push
cmp
fnsave
add
dec
arpl
add
imul
and
imul
callw
xor
sub
mov
inc
neg
push
dec
sbb
push
nop
or
dec
mov
jecxz
mov
push
mov
adc
sbb
loopne
jbe
shr
adc
pop
mov
push
sahf
inc
ins
clc
pop
ret
mov
test
cmc
mov
jge
imul
sti
mov
adc
lock
inc
or
mov
ds
mov
inc
and
xor
mov
arpl
lea
push
pop
lea
add
and
add
pop
push
sub
add
ins
mov
or
inc
clc
and
sahf
mov
or
and
pushf
out
dec
mov
xchg
pusha
js
mov
dec
add
mov
lock
dec
jmp
jge
adc
push
jbe
adc
aaa
test
bound
out
cmp
push
mov
aam
cs
adc
sub
push
pop
pop
cmp
aaa
inc
retf
call
push
sbb
movs
jbe
shl
dec
xchg
sbb
ret
push
adc
in
push
mov
movs
cmps
and
dec
cmc
sar
sbb
pop
xchg
test
adc
shl
fs
scas
pop
loopne
xor
pop
or
cwde
lock
ja
pushf
push
loopne
jnp
xchg
pushf
mov
jl
and
hlt
js
xor
and
int3
aaa
nop
pop
sbb
add
inc
xchg
fnstenv
add
cmp
outs
inc
push
out
sbb
sbb
inc
rcl
lods
add
pusha
jnp
inc
mov
xor
mov
pop
sub
(bad)
add
call
dec
fadd
inc
clc
inc
ja
adc
push
pop
add
dec
sub
daa
loopne
pushf
inc
pop
mov
mov
mov
push
mov
dec
shl
push
out
jno
mov
and
sub
pop
out
arpl
loop
cmp
push
ret
pop
scas
push
test
leave
adc
scas
jno
call
adc
int
jb
mov
mov
or
sbb
jle
in
pop
inc
sbb
ins
sub
mov
xchg
cmp
inc
or
scas
pop
or
xor
movups
inc
add
push
adc
push
add
inc
jae
sbb
mov
mov
inc
mov
test
mov
or
repz
ss
push
inc
lods
fisub
jae
mov
inc
add
push
lea
push
push
clc
inc
mov
push
jecxz
inc
mov
mov
pop
aas
(bad)
and
or
cmp
sahf
sub
outs
pop
xor
jne
push
call
cmp
push
add
push
mov
add
push
mov
mov
jmp
mov
out
adc
mov
xchg
jmp
add
mov
lock
fimul
popf
in
cmp
loopne
cmps
pop
sbb
loope
sbb
sub
aas
jne
adc
out
out
arpl
push
or
lods
mov
add
push
ficom
mov
jle
arpl
push
(bad)
fisttp
ss
cmp
hlt
test
add
pop
je
dec
jne
push
cmp
mov
jno
add
mov
pop
fcmovnbe
and
inc
stos
mov
mov
mov
pop
or
add
pop
(bad)
jge
add
gs
ret
pop
sub
fadd
push
rcr
mov
(bad)
jle
nop
jge
ficom
mov
pop
xchg
rcr
pop
iret
add
dec
add
idiv
and
inc
gs
pop
xor
jbe
mov
ss
enter
or
or
out
push
aaa
mov
add
mov
cdq
add
sub
add
lock
daa
loope
mov
mov
fist
into
popa
mov
push
pop
jne
add
cs
push
out
jno
and
dec
and
push
or
jns
jno
add
push
add
adc
les
push
jb
hlt
cwde
loopne
ja
leave
aam
nop
mov
add
test
cli
jle
add
and
or
or
jmp
dec
ss
cs
daa
inc
pop
sub
sbb
jns
adc
adc
adc
sbb
pop
add
add
loop
je
mov
pop
fdiv
mov
push
or
and
pop
pop
cmp
add
sub
adc
xchg
and
adc
mov
je
mov
jo
inc
dec
mov
adc
daa
out
push
lahf
add
jmp
jg
jl
in
pop
and
xor
call
add
dec
clc
push
and
add
loope
sar
lock
mov
popf
loopne
outs
popf
xchg
adc
xlat
or
cld
mov
dec
inc
jle
call
lea
push
nop
adc
call
mov
xor
outs
sub
lock
jb
pop
pop
lds
inc
add
inc
xor
imul
jmp
out
clc
jmp
icebp
mov
push
and
dec
mov
inc
and
or
mov
and
sub
pop
popa
(bad)
jo
stc
std
mov
mov
pop
and
ret
pop
sbb
dec
adc
sti
cmp
cmp
jl
call
pop
test
or
dec
inc
hlt
lds
xchg
mov
test
ret
jecxz
repnz
out
cmp
push
jg
scas
lods
sub
add
push
mov
je
cmp
jle
or
and
xor
ret
add
pop
sahf
lods
lods
cwde
idiv
add
push
sbb
repnz
add
mov
fsubr
imul
or
add
test
test
test
adc
lods
xchg
mov
pop
sbb
add
jmp
sbb
aas
adc
xor
in
in
push
and
adc
sbb
jns
xor
adc
movs
(bad)
xchg
ins
fld
xchg
sti
add
or
add
outs
sar
aas
pop
jb
xchg
adc
inc
sbb
loop
add
or
mov
adc
mov
xlat
and
jmp
mov
test
mov
aas
hlt
add
or
loopne
cmp
add
cmp
pop
cmp
xchg
sbb
xor
sub
or
or
jbe
jle
scas
mov
call
adc
or
jmp
call
jecxz
dec
ret
clc
xchg
inc
mov
popa
imul
sub
scas
or
mov
cli
mov
adc
retf
mov
or
jecxz
ret
rol
mov
push
pop
adc
ins
add
mov
push
pop
lahf
add
or
retf
jb
or
xchg
or
nop
retf
adc
sbb
xchg
cmp
push
push
cmp
mov
paddusw
add
fisttp
js
push
xchg
bound
test
push
adc
nop
sbb
add
ret
outs
or
adc
lock
mov
cmc
add
lock
in
jmp
mov
mov
js
nop
fisub
test
pusha
push
pushf
lods
cld
std
mov
cmp
das
mov
cmp
sub
les
and
scas
jge
and
or
cli
cmp
ja
cmp
push
jbe
jo
ret
paddd
or
dec
clc
jg
add
test
and
xlat
je
dec
fdiv
add
cmp
pop
push
aaa
hlt
mov
or
jl
pop
pop
add
dec
adc
fcomp
add
scas
add
sar
push
sbb
cmp
sub
jl
sub
and
push
pusha
shr
aaa
test
push
xchg
add
inc
sbb
push
test
adc
sub
sti
test
es
sub
push
adc
cmp
push
pop
cmps
mov
mov
cmp
push
mov
xor
outs
adc
mov
fisub
stos
dec
inc
push
pop
stos
mov
fidiv
jecxz
mov
cli
fxtract
mov
cmp
add
add
or
pop
and
xchg
push
and
pop
jo
xchg
mov
jg
push
loopne
rol
test
mov
xor
add
mov
cmp
lock
inc
jmp
and
adc
xor
inc
or
add
jne
add
sub
pop
clc
div
test
mov
push
and
mov
add
test
mov
sbb
sbb
inc
or
or
inc
inc
sub
mov
fisubr
xchg
xor
iret
dec
lock
les
loopne
mov
sbb
lods
push
add
sub
fist
fild
imul
repz
adc
mov
xor
sbb
pop
iret
es
jp
(bad)
out
push
sahf
adc
add
sbb
lea
xchg
pop
add
jns
mov
test
daa
pop
imul
es
outs
xchg
movups
jmp
lahf
push
push
pop
add
mov
repz
call
xchg
inc
or
adc
cwde
jns
rcr
mov
fsubr
call
pop
pusha
add
mov
pop
fisubr
ja
push
adc
pop
(bad)
outs
test
inc
ficomp
icebp
cmc
xchg
push
push
mov
test
ins
dec
push
inc
ins
adc
adc
or
rcl
pop
(bad)
adc
pop
(bad)
fld
mul
jle
push
dec
push
scas
fs
dec
and
aas
add
push
rcr
push
jge
ror
imul
inc
pop
pop
pusha
push
pusha
or
cmp
mov
add
mov
out
jg
xor
inc
sbb
sbb
sbb
enter
pop
ins
bswap
sub
mov
adc
add
ja
push
jle
arpl
cmp
or
cli
call
push
mov
lock
pop
lods
xor
das
repnz
in
ds
add
adc
adc
mov
jg
pop
or
int
mov
sbb
mov
fcomip
movs
movs
and
mov
ror
inc
mov
xchg
pop
pop
or
and
pop
add
add
pop
fisttp
aam
int
add
fsubrp
aaa
inc
adc
movs
test
sub
(bad)
cmp
lea
test
test
mov
ret
inc
je
mov
jbe
jmp
add
or
jbe
outs
pop
add
jb
or
jbe
cmp
iret
cmc
cld
pop
and
jae
lods
inc
not
es
adc
xor
mov
pop
push
retf
xchg
je
dec
and
(bad)
out
mov
add
ror
add
(bad)
push
or
xchg
sbb
pusha
and
fisub
pop
cmp
jae
xor
loope
mov
sub
setae
jle
mov
cmp
add
xchg
movs
push
inc
push
pop
shl
call
inc
push
mov
bound
jmp
addr16
and
mov
ret
inc
sbb
adc
add
cmps
add
test
or
out
mov
mov
mov
xor
xor
ror
sub
mov
add
mov
push
fbld
aad
sbb
and
movsx
sub
jbe
lock
or
pop
add
inc
and
pop
sar
cmp
jge
sub
lea
and
fst
add
clc
add
aam
inc
je
add
ficom
sub
mov
loop
and
cs
ss
dec
mov
add
adc
data16
call
or
imul
adc
imul
add
in
sahf
rol
or
add
add
mov
cld
pop
adc
sub
inc
push
push
(bad)
and
daa
pop
sti
dec
bndstx
xchg
push
jg
pop
or
inc
mov
add
add
movs
repz
je
rol
jp
mov
push
cmp
mov
pop
and
or
dec
jb
hlt
fild
xchg
pop
push
sbb
jg
int
push
sbb
aaa
mov
cmp
inc
inc
loope
je
fsubr
fst
shr
xor
ins
add
jne
ins
add
ins
in
retf
in
fs
mov
test
push
fiadd
loope
adc
test
jbe
es
xor
jp
enter
mov
dec
add
cwde
pop
stos
sti
or
pop
jbe
mov
sub
stos
mov
cli
pop
add
mov
add
add
push
sbb
loopne
lock
push
inc
jecxz
mov
xor
add
or
add
lea
outs
xor
add
data16
mov
rol
rcr
push
lea
push
xchg
add
xchg
xor
add
das
cld
push
shl
jo
sbb
or
sbb
in
sbb
or
jne
jo
sbb
in
or
adc
lock
lock
rcl
pop
push
shl
cli
xor
aaa
cmc
outs
mov
test
dec
and
add
test
loopne
call
inc
cld
push
pop
push
add
add
in
out
mov
mov
xor
cli
xchg
repnz
mov
inc
stc
je
sub
mov
push
and
sbb
ret
imul
hlt
cmp
push
pop
xchg
adc
dec
xchg
pop
fcmove
sub
jmp
push
std
or
pop
push
cli
es
add
add
sahf
out
push
add
loopne
sahf
out
or
push
adc
cmp
dec
and
jns
dec
pop
mov
fs
inc
add
or
js
jecxz
mov
add
mov
cmp
ja
dec
int3
and
cmp
dec
add
out
call
aam
repz
cli
adc
dec
mov
xor
sub
hlt
shl
(bad)
or
adc
or
js
inc
add
lods
test
dec
int3
or
inc
dec
add
retf
lock
or
ja
pop
and
clc
shl
pop
clc
nop
dec
jae
and
hlt
and
push
sub
hlt
enter
sub
ja
and
mov
cmp
dec
jae
sub
xor
jae
cmp
nop
dec
aaa
call
pop
sti
sbb
jg
push
inc
nop
xchg
add
movs
pop
ins
in
pop
jbe
loopne
inc
pop
push
push
pop
sub
enter
pop
fdiv
sub
fdiv
enter
fs
mov
fsubr
pop
jno
jb
in
cs
sub
or
and
add
pop
push
push
and
(bad)
and
pop
dec
sub
test
aad
inc
jecxz
lahf
add
or
adc
cs
adc
mov
push
aam
rcl
sbb
movs
mov
fdiv
and
cmp
xor
cmp
outs
retf
(bad)
push
and
inc
inc
add
sub
imul
mov
dec
lea
jne
and
test
add
out
mov
add
movs
inc
imul
xchg
pusha
enter
xchg
stc
ja
test
mov
add
out
sbb
jle
jnp
and
mov
xchg
das
cmp
jne
(bad)
adc
js
stos
call
adc
test
mov
or
push
movzx
inc
add
sub
add
inc
adc
xchg
and
je
and
xchg
out
xchg
push
sub
int
add
jbe
mov
or
dec
mov
out
inc
push
sub
sub
adc
pop
inc
push
sbb
cmp
xor
inc
fwait
or
imul
sti
inc
mov
inc
std
or
adc
add
adc
bound
adc
sub
pusha
jmp
add
mov
arpl
pop
pop
mov
cmp
fs
cmps
call
sbb
call
hlt
mov
or
pop
fs
add
mov
sti
in
jmp
(bad)
sbb
jg
jmp
mov
and
xor
push
dec
jmp
(bad)
or
(bad)
sbb
and
cmp
call
xor
pop
stos
sar
mov
pusha
loope
or
push
in
int
inc
std
jmp
inc
mov
inc
(bad)
clc
dec
lea
sub
or
mov
fcom
cmp
cs
adc
or
test
and
and
sub
push
cmp
clc
stos
add
and
sub
add
sub
out
adc
push
int3
mov
and
dec
cli
add
test
adc
add
jmp
push
shl
jmp
pop
fisttp
adc
mov
movs
nop
es
loop
xor
adc
inc
movs
fwait
sar
dec
mov
sub
sbb
jmp
lds
mov
inc
cdq
adc
adc
mov
pop
rcr
std
mul
dec
sbb
pop
pop
mov
rol
push
inc
pop
mov
sub
add
idiv
outs
xor
mov
mov
push
retf
inc
test
jmp
cmp
jb
push
daa
(bad)
xchg
pop
cld
sbb
inc
add
inc
call
inc
mov
xor
xor
fadd
dec
fadd
xor
shl
xor
stc
sub
push
sbb
loope
xchg
add
push
add
mov
mov
adc
inc
aam
test
lea
push
addr16
fcmovnb
or
push
or
ret
pop
adc
movs
sbb
add
mov
or
ss
xchg
popa
and
add
adc
pop
and
jno
sub
mov
push
and
push
and
inc
bound
les
std
sub
mov
xor
inc
inc
add
mov
nop
or
add
push
mov
adc
mov
js
ins
push
vpsadbw
push
jp
push
shr
fimul
jno
and
or
dec
adc
cmp
(bad)
push
cmp
inc
push
push
inc
push
dec
mov
sub
sub
dec
adc
lds
aam
loopne
adc
fadd
and
inc
mov
dec
dec
add
inc
bound
push
sub
sti
fwait
xchg
add
push
nop
push
pop
add
xchg
dec
arpl
adc
or
sub
mov
and
(bad)
repz
test
out
dec
shl
sub
push
push
jbe
push
loop
clc
iret
inc
outs
mov
push
push
mov
loopne
push
push
fsub
cld
jno
add
push
adc
add
or
loope
jge
push
jmp
push
ror
aam
jp
scas
scas
add
gs
lds
sbb
(bad)
adc
add
mov
inc
pop
push
add
dec
sub
je
sahf
adc
add
lock
push
xor
retf
jae
jae
add
ins
pop
mov
movs
jae
and
js
jo
jns
push
inc
xor
mov
add
loop
cmp
dec
dec
dec
dec
dec
jl
lods
int
loop
mov
or
test
jl
aad
mov
mov
shl
add
xchg
dec
jns
mov
gs
mov
adc
sbb
or
mov
pop
inc
sbb
or
mov
(bad)
test
fidiv
sbb
and
je
jl
or
div
mov
or
mov
mov
add
mov
dec
movs
inc
std
ins
push
dec
pop
dec
ret
sbb
xchg
inc
sub
mov
sbb
fwait
mov
ins
call
imul
fstp
rcr
sbb
xchg
or
inc
into
sub
loopne
adc
add
cmp
jge
clc
xchg
dec
jnp
cmp
or
pusha
loopne
je
call
ins
xchg
pushw
jmp
pop
inc
or
mov
adc
pop
mov
add
jbe
pop
xor
mov
punpckldq
add
or
sbb
add
xor
mov
sbb
pop
mov
push
ret
imul
inc
sub
mov
or
imul
mov
rol
les
mov
stos
inc
sub
adc
je
adc
pop
rol
dec
loop
js
dec
ror
inc
adc
sbb
sahf
and
mov
jns
call
int
jmp
add
push
cmp
mov
into
and
adc
arpl
pop
jl
or
dec
dec
jnp
mov
or
push
mov
xor
in
int3
clc
lods
and
rcr
xor
cwde
cmp
xor
inc
popf
add
jne
inc
add
inc
push
adc
mov
add
inc
scas
dec
sbb
popa
jmp
adc
cmp
fisub
pop
ds
or
push
push
fcomp
push
sub
push
or
sahf
frstor
cmp
mov
push
imul
ja
sub
adc
jl
je
or
sub
test
stos
mov
test
hlt
xor
bndstx
dec
push
or
jne
test
jle
pop
mov
push
add
add
ret
adc
add
leave
sbb
outs
sbb
daa
jb
cmp
jbe
sahf
lock
fsub
les
push
adc
cmp
push
fnsave
pop
push
add
cwde
or
bound
fld
adc
jae
cmp
aad
or
mov
and
daa
ins
loop
inc
scas
lock
xor
test
aad
sbb
push
add
rol
inc
mov
stos
mov
bound
fnsave
xchg
dec
in
sbb
fild
xlat
stos
pop
add
sub
dec
fmul
fwait
inc
add
es
or
push
and
(bad)
lock
pop
out
jmp
push
das
and
bound
ficomp
mov
cwde
ret
and
inc
jmp
cmp
pop
mov
neg
cli
jecxz
mov
bound
retf
add
dec
sub
jne
pusha
pusha
adc
adc
hlt
and
mov
call
sub
sbb
cmp
adc
push
cld
pop
jp
icebp
and
mov
dec
inc
jns
add
cmp
add
add
push
cld
stos
gs
pop
not
or
mov
mov
je
retf
push
test
mov
mov
mov
aaa
fcomp
xor
aam
adc
cli
fld
adc
push
mov
out
aam
pop
add
rol
pop
out
mov
into
sub
jo
or
pop
cs
jo
sub
xchg
jl
cmp
push
sbb
mov
sbb
jmp
inc
add
mov
ret
les
dec
jl
add
xchg
and
js
out
or
pop
and
mov
addr16
test
rol
fbstp
xor
or
(bad)
call
jmp
pop
ins
loopne
adc
mov
dec
daa
mov
ret
pop
maskmovq
idiv
fmul
call
adc
mov
int3
mov
sbb
movs
adc
push
jle
clc
push
push
push
call
push
icebp
retf
jmp
push
js
mov
add
jne
jmp
rcl
(bad)
cmp
push
push
pop
sub
push
push
add
fadd
dec
jg
es
loopne
pop
rol
cmp
mov
into
add
mov
mov
ror
xor
adc
int
fadd
mov
jmp
(bad)
jmp
push
add
mov
sub
ret
add
jmp
nop
je
pop
push
jbe
push
jo
(bad)
clc
dec
jbe
add
push
fidiv
or
test
enter
cmps
nop
mov
cmp
mov
push
xchg
push
inc
ret
mov
rol
dec
adc
rol
sbb
aam
stos
arpl
or
je
cdq
jg
sbb
js
test
call
or
dec
mov
pop
cmp
inc
mov
rcr
jno
jne
inc
pop
cmps
xor
inc
neg
adc
push
les
inc
jl
xor
pop
mov
cli
add
and
mov
xchg
dec
es
ins
enter
push
adc
pop
or
sbb
xor
imul
pop
enter
daa
dec
add
sbb
sub
pop
test
and
dec
sub
mov
loopne
mov
add
(bad)
or
(bad)
adc
repnz
mov
scas
jno
push
lock
mov
or
or
push
pop
cmp
add
dec
pop
jne
jp
mov
jnp
icebp
mov
and
or
and
inc
add
push
xor
xchg
adc
push
inc
xchg
xor
in
and
test
adc
xchg
add
inc
and
pop
jb
add
mov
sub
push
cs
lock
jecxz
or
call
js
add
adc
sbb
aas
mov
cmp
sub
sar
inc
sub
jb
cmp
jbe
mov
js
mov
leave
ins
bound
inc
lods
inc
adc
add
sbb
mov
add
pop
movups
ins
psubusw
sub
loopne
xor
out
push
in
cmp
arpl
mov
and
mov
pop
aam
push
mov
and
iret
pop
sbb
push
popf
and
test
icebp
nop
inc
rcl
fmul
add
cli
imul
mov
mov
add
add
rcr
pop
sbb
xor
enter
cli
and
pop
sbb
push
inc
stos
push
xor
jge
mov
fbstp
mov
iret
adc
rol
jl
push
mov
jne
pop
add
icebp
inc
inc
add
xlat
movs
dec
or
add
pop
mov
add
add
mov
rol
cli
(bad)
mov
rol
sbb
js
pop
ds
push
enter
inc
stos
inc
cld
(bad)
(bad)
mov
sar
sbb
push
pusha
shl
sub
sbb
sti
mov
cmp
sbb
pop
sub
push
xchg
add
ud2
adc
cmp
dec
and
leave
test
mov
adc
dec
out
jb
inc
sbb
sbb
dec
mov
fwait
dec
sub
jb
sbb
mov
inc
mov
leave
mov
mov
adc
inc
add
enter
jp
mov
popa
xor
in
nop
fisub
test
sbb
mov
xor
nop
cmp
jae
xchg
dec
sbb
and
jecxz
inc
imul
in
addr16
les
or
ds
cmp
fimul
xchg
int3
xchg
ret
sbb
mov
adc
push
or
lods
je
push
call
lahf
pushf
mov
(bad)
enter
pusha
xchg
and
push
shl
sub
ficom
sbb
test
(bad)
and
pop
movs
ror
inc
ja
in
sar
adc
or
jb
popa
sub
mov
pop
call
(bad)
pop
or
daa
test
fdiv
mov
push
jo
adc
push
jb
ror
mov
pop
sub
xor
gs
shr
mov
cmps
mov
dec
sahf
xchg
adc
not
jae
fs
add
or
test
or
adc
jg
add
cmp
loopne
cs
cmp
add
add
in
mov
std
fs
pop
push
jl
rcl
sub
xchg
inc
sub
add
push
push
mov
sahf
call
add
gs
cmp
mov
es
outs
and
jbe
loop
pop
jl
sbb
mov
adc
xchg
mov
and
pop
in
call
shl
(bad)
loope
inc
push
pop
es
add
inc
pop
rcl
leave
fild
test
cmp
cld
shl
bound
retf
xor
les
xor
mov
sbb
pop
sbb
push
push
add
int3
retf
jae
dec
ja
add
movs
int3
aas
mov
icebp
sbb
pop
xchg
addr16
push
lock
dec
aad
sidtd
mov
or
mov
add
inc
call
pop
enter
dec
cld
jbe
addr16
sbb
(bad)
jns
int3
aad
imul
sub
pop
imul
jae
fbld
fdivr
inc
jo
scas
adc
repnz
pop
inc
sub
cmps
icebp
adc
push
stos
jmp
add
push
out
xor
pop
push
js
push
fiadd
ret
mov
mov
mov
push
hlt
xor
xor
xor
push
cmp
xor
jmp
mov
adc
jmp
add
add
outs
sbb
fdiv
popf
add
jae
sub
inc
fnstsw
les
push
jmp
mov
xor
ja
ror
test
pop
std
hlt
push
dec
inc
sbb
or
jmp
inc
or
jl
sbb
pop
ja
xchg
outs
dec
add
fs
xchg
push
jnp
mov
inc
lock
icebp
jl
scas
in
dec
or
pop
nop
cwde
pop
test
add
imul
je
rol
dec
push
cvtps2pi
lahf
push
push
xchg
in
add
and
setg
cmp
mov
or
(bad)
fisub
pop
mov
mov
je
retf
jl
out
loopne
xchg
ins
xchg
xor
and
mov
sbb
push
repnz
add
xchg
adc
sbb
sbb
test
push
div
call
lock
scas
jo
or
not
sbb
test
fwait
inc
mov
pop
dec
add
adc
lock
adc
loop
jo
sbb
ret
adc
ins
lock
or
jbe
jo
dec
jl
xchg
rol
xchg
add
jmp
dec
sbb
iret
jo
mov
xchg
or
and
sub
out
fmul
adc
jae
sub
dec
sar
and
jmp
xor
pop
add
sub
sbb
jl
dec
add
dec
in
loop
jge
aam
push
mov
int3
imul
sti
cdq
ror
pop
xor
sub
test
pop
cmp
cs
ins
loopne
in
ret
fst
mov
(bad)
call
popf
pop
(bad)
sbb
loop
in
div
loope
inc
jne
call
mov
or
inc
push
cmp
in
and
popa
or
loope
retf
cmps
das
dec
inc
dec
jp
mov
dec
ror
je
cmp
test
outs
je
cld
movzx
add
add
inc
inc
inc
jmp
pushf
inc
clc
sub
mov
xor
sbb
push
call
in
adc
ficom
sbb
sar
push
aaa
pop
mov
stc
add
mov
push
inc
adc
movs
add
add
lock
clc
or
xlat
es
jne
retf
and
dec
ins
in
sbb
mov
cmp
and
xor
sbb
cmps
jle
(bad)
cmp
xor
outs
mov
sbb
dec
mov
sar
dec
daa
add
jo
or
arpl
jbe
cmp
xchg
std
inc
adc
sbb
dec
das
xchg
cli
cmp
xchg
push
add
mov
add
xor
jmp
and
test
cs
movs
outs
sub
loope
sahf
int3
mov
adc
inc
dec
jmp
push
inc
sbb
sub
dec
push
and
sub
add
sub
mov
out
jns
or
cmp
mov
xor
add
adc
hlt
inc
repnz
xchg
pusha
push
mov
push
jo
sar
test
jle
cs
sub
(bad)
mov
and
adc
lds
xlat
pop
lods
ror
retf
loopne
ins
and
aas
mov
sar
cwde
neg
adc
sbb
add
test
and
ins
sub
xchg
in
add
mov
retf
out
adc
mov
and
mov
and
lock
pop
nop
push
adc
shr
adc
add
ins
adc
or
adc
enter
and
or
jb
xchg
xchg
sbb
fild
push
pop
int3
inc
dec
ror
lock
js
outs
popa
ins
clc
dec
xchg
pop
pop
das
ins
dec
popa
je
inc
cmps
mov
xor
and
inc
xor
das
lods
inc
lods
add
and
push
aas
clc
jnp
pop
mov
push
jb
jbe
fmul
cwde
addr16
mov
or
imul
aas
sub
sbb
fs
inc
ss
das
jo
sub
inc
in
xchg
adc
inc
jbe
and
mov
dec
jo
mov
out
test
cmp
gs
mov
inc
ss
inc
jns
cmps
mov
and
add
add
xchg
ins
mov
cmp
xor
mov
or
daa
mov
mul
add
cmps
addr16
and
out
ret
pusha
mov
sbb
fbld
sbb
lahf
cmps
pop
push
cmps
sbb
adc
add
cmp
mov
dec
add
add
mov
sub
dec
pop
add
jae
imul
cmp
fmul
movs
xchg
dec
mov
ins
push
fistp
dec
mov
dec
cmp
dec
jnp
ins
mov
or
or
adc
int3
pop
mov
ja
arpl
leave
and
aaa
fisttp
test
pop
aas
add
add
mov
int3
and
xchg
enter
jno
push
add
mov
(bad)
mov
sub
sbb
sbb
and
and
or
jg
mov
es
push
sbb
or
pop
ins
dec
in
push
popa
adc
mov
mov
xchg
add
jg
test
loopne
cwde
rcr
sbb
imul
sti
adc
cmp
pop
or
sbb
jns
fstp
sub
ins
mov
inc
xor
nop
test
add
dec
cmp
sbb
and
fmul
and
add
push
add
stos
inc
scas
add
in
nop
ins
nop
fs
cs
inc
or
add
les
xor
(bad)
mov
inc
dec
enter
push
or
hlt
sub
jecxz
dec
dec
push
aaa
js
je
inc
cmp
pop
imul
pop
outs
popa
push
add
cmp
jo
clc
sub
and
test
outs
mov
adc
adc
xchg
pop
(bad)
mov
mov
dec
loope
sub
mov
jg
add
and
sbb
push
clc
fidiv
inc
aaa
inc
mov
enter
push
mov
mov
inc
mov
call
mov
nop
mov
push
add
in
mov
sahf
(bad)
outs
or
add
repnz
sbb
pop
adc
test
push
adc
push
mul
ins
int3
add
inc
(bad)
daa
xor
xor
pop
shl
add
add
push
lock
inc
adc
out
add
dec
ret
enter
pop
mov
push
add
mov
pop
adc
cwde
push
ja
push
push
daa
sub
shl
push
push
adc
xchg
sub
js
xchg
out
add
popf
ss
das
xchg
and
mov
inc
mov
mov
adc
push
or
mov
or
push
or
sub
add
or
push
(bad)
add
or
xchg
or
cs
jmp
sar
adc
or
cmp
add
or
or
ror
retf
mov
pushf
dec
int
iret
sub
popa
pusha
push
cdq
sbb
inc
pop
sbb
push
jg
or
stos
push
mov
mov
and
nop
test
mov
inc
int3
lea
pop
movs
jo
cmp
adc
push
hlt
mov
xchg
mov
popa
test
mov
inc
outs
and
lods
(bad)
and
inc
add
jb
popa
outs
je
sub
fcom
sub
sbb
sub
adc
mov
jg
rcr
or
aaa
mov
xor
test
mov
add
cmps
sar
fsub
inc
jge
push
push
rol
xchg
pop
outs
aas
cmps
adc
inc
iret
jl
xor
jo
jmp
daa
pop
mov
pusha
or
(bad)
loopne
and
or
sub
adc
inc
xor
in
and
je
fdiv
inc
scas
pusha
arpl
rol
call
adc
(bad)
or
mov
mov
sti
pop
stos
xchg
push
push
mov
lds
xchg
inc
mov
clc
nop
imul
ds
movs
cdq
and
shl
addr16
add
xor
pop
pusha
(bad)
leave
inc
cwde
retf
and
adc
daa
dec
inc
add
add
ja
mov
or
jmp
inc
dec
data16
ret
test
jg
ret
xchg
mov
push
push
sbb
pop
sbb
in
or
ins
and
fistp
pop
pop
mov
or
inc
inc
dec
ins
test
pop
mov
fadd
inc
adc
gs
popf
or
mov
pop
push
dec
arpl
ror
(bad)
mov
je
jmp
or
ins
jo
gs
popa
aaa
fnstsw
ja
pop
int3
xchg
fld
or
push
add
std
ror
cmp
adc
adc
cmp
xchg
in
mov
pop
mov
and
or
pop
and
push
dec
(bad)
mov
rol
hlt
push
inc
(bad)
jp
or
lea
popa
pop
lea
and
inc
dec
push
xchg
lock
dec
add
int
pop
xor
lock
icebp
sub
cmp
push
cmp
(bad)
xor
(bad)
and
jl
push
out
jg
xor
cdq
mov
push
mov
sbb
loope
sbb
outs
sbb
inc
mov
pop
dec
inc
rcl
sub
inc
push
pop
mov
sub
and
xchg
out
std
sub
add
inc
cld
and
adc
mov
sbb
add
in
add
inc
mul
mov
call
movs
lods
enter
dec
mov
adc
ror
add
sub
fsub
cmp
fidiv
movs
nop
push
inc
cs
inc
nop
mov
sub
add
mov
dec
or
inc
jge
imul
xlat
sbb
ins
xchg
dec
mov
or
adc
inc
add
adc
outs
sti
dec
pop
jno
jg
ror
sub
adc
xor
xor
cmps
inc
cmp
or
inc
inc
sub
mov
mov
push
data16
mov
push
add
add
mov
sub
test
push
ror
repnz
cmp
je
adc
adc
retf
repz
dec
mov
jmp
or
adc
jmp
mov
fdiv
ret
mov
mov
inc
dec
xlat
xor
add
lahf
add
or
mov
xor
data16
add
add
add
sbb
je
sahf
out
retf
or
pop
cwde
dec
inc
or
int3
push
adc
or
lea
pusha
fiadd
add
adc
mov
cmp
cmp
and
(bad)
and
(bad)
sti
xor
pop
cmp
fdivr
mov
sbb
retf
jbe
and
jns
into
outs
cmp
nop
xchg
mov
or
jo
mov
ret
cmp
sbb
or
jle
ret
inc
cmp
xor
add
out
adc
jmp
dec
sti
push
push
xchg
or
or
push
jp
fidiv
cmps
push
xor
mov
icebp
cmp
xor
jmp
jbe
scas
or
mov
adc
pop
and
or
mov
inc
jl
or
jl
pop
sbb
fcomp
and
(bad)
xlat
cmps
add
and
mov
in
adc
stos
dec
les
call
jmp
repz
push
xor
add
imul
inc
adc
test
sbb
and
shl
mov
add
add
mov
add
sub
imul
pushf
sbb
mov
xor
mov
add
and
sbb
add
add
mov
outs
gs
or
adc
push
pop
cld
out
mov
dec
or
adc
jb
push
mov
das
xor
add
sub
ret
or
xchg
jg
push
dec
popa
stos
mov
push
add
lds
or
push
sub
push
lds
or
push
cmp
popa
sti
pop
rcr
into
add
mov
xor
add
push
xchg
stos
xor
add
pop
sbb
les
xlat
adc
pop
cs
aaa
push
mov
xchg
sub
cmp
faddp
aaa
clc
les
add
add
push
push
pop
xor
pop
and
mov
es
inc
lock
cmp
jae
inc
sub
pop
jbe
fdivr
mov
jns
push
push
call
inc
or
push
in
call
inc
inc
add
test
and
xor
xchg
jle
sbb
outs
jb
dec
xchg
cmps
pop
dec
and
and
dec
sbb
fsub
or
and
adc
pop
shr
push
jecxz
leavew
jmp
mov
enter
ret
popa
retf
(bad)
jl
or
je
mov
push
mov
mov
daa
add
mov
or
add
dec
inc
or
or
add
or
inc
add
jb
ins
daa
xchg
iret
inc
xor
adc
rol
retf
mov
int3
inc
in
pop
mov
xor
repnz
lods
mov
dec
hlt
(bad)
push
enter
add
repnz
pop
sub
push
sahf
jbe
fist
sub
dec
int3
push
mov
call
ja
call
fstp
mov
push
cld
dec
and
push
or
fst
enter
pop
mov
fidivr
idiv
cld
jg
outs
and
imul
jecxz
cmp
into
ror
or
cmp
jl
sbb
stos
pop
dec
cld
fisub
in
mov
cmp
je
dec
dec
add
scas
pop
xor
cmps
inc
sub
push
dec
xor
push
push
ror
add
pop
adc
dec
pusha
dec
jmp
xchg
mov
add
xor
nop
cmp
and
dec
enter
js
pop
call
and
lds
push
mov
rol
push
sbb
into
sbb
pop
sbb
imul
ja
(bad)
je
and
mov
or
sbb
fs
xor
sbb
retf
jl
adc
xor
sub
push
fcomp
adc
or
movs
sub
fisttp
mov
shl
push
pusha
das
add
push
adc
imul
mov
call
add
push
out
add
jae
aam
sub
sbb
rcl
imul
iret
mov
add
or
adc
or
add
or
add
out
adc
ror
dec
pop
push
clc
ja
movs
clc
jbe
stos
jo
inc
xchg
adc
and
dec
jbe
adc
in
push
pushf
jmp
out
adc
inc
int3
mov
or
cmp
jecxz
les
(bad)
sub
jge
sar
ret
xor
pop
rol
xlat
sahf
cmp
jp
jae
mov
jne
pop
mov
xchg
cmp
inc
add
or
sub
hlt
sbb
sub
sub
(bad)
jbe
mov
push
mov
inc
add
mov
sbb
mov
push
add
pop
or
jp
push
add
add
leave
enter
mov
add
lahf
popf
rcl
movs
inc
test
pop
or
add
cmp
pop
xor
jne
mov
sbb
or
adc
add
out
push
sar
push
inc
dec
inc
inc
clc
lock
call
dec
xchg
inc
push
hlt
adc
bound
add
adc
xchg
add
ret
adc
je
mov
mov
jne
xor
nop
xor
xor
cmp
xchg
or
icebp
mov
push
add
cmp
repnz
jbe
push
add
js
sub
ror
sbb
loope
jecxz
cmp
(bad)
(bad)
mov
xor
cmp
mov
popf
push
sub
hlt
lods
and
mov
int
fld
imul
sub
(bad)
test
dec
or
clc
in
xchg
das
or
pop
adc
inc
mov
sbb
popa
and
jmp
mov
sub
inc
test
mov
add
cmp
out
push
inc
mov
retf
push
cld
inc
mov
inc
lods
dec
sbb
pop
pinsrw
sub
or
adc
xor
or
adc
pop
push
add
frstor
sbb
jle
mov
(bad)
repz
cmp
jbe
je
cmp
and
and
push
dec
cmp
pop
pusha
pop
and
and
or
test
pushf
movs
or
fisub
xor
adc
call
aas
and
jg
pop
jle
xchg
and
add
rcl
pop
mov
pop
and
or
pop
stos
daa
add
mov
cmp
mov
dec
or
sar
push
push
and
xor
and
ds
div
inc
and
jle
loopne
jp
imul
inc
add
dec
pop
mov
add
inc
fdiv
xor
and
add
push
sub
pop
sub
or
push
(bad)
leave
jno
add
dec
sahf
xchg
or
push
cmp
mov
add
push
inc
or
fadd
ficomp
adc
cmp
arpl
pop
(bad)
dec
lods
retf
jae
data16
mov
push
adc
xchg
pop
arpl
pop
add
or
inc
test
mov
or
test
fcmovb
xor
sbb
pop
arpl
ret
loop
loope
push
jle
not
das
std
add
or
sbb
sub
dec
push
mov
mov
lods
jmp
mov
stos
mov
or
xchg
or
sbb
or
popa
jo
adc
mov
sbb
imul
adc
sahf
or
test
cmp
movs
add
cmp
xchg
cmp
jmp
ror
cmp
mov
pusha
popa
push
mov
cmp
jne
mov
pop
out
or
add
pop
or
jns
imul
push
or
cmovs
inc
dec
add
cmp
mov
pop
xor
test
add
push
add
sub
xchg
or
imul
dec
add
dec
dec
arpl
cwde
and
or
clc
loop
cmp
jl
xchg
mov
or
or
jmp
rcr
je
movs
xchg
imul
xlat
(bad)
cmp
push
add
or
jle
mov
(bad)
pop
push
(bad)
mov
clc
add
ja
nop
std
ins
xchg
jo
fmul
sbb
pop
jle
push
jo
sbb
pop
lds
and
pop
pusha
jmp
mov
push
jp
and
loop
dec
adc
inc
js
aas
loopne
adc
adc
and
rol
add
cld
mov
or
push
adc
jmp
xchg
pop
add
mov
sub
mov
outs
pop
imul
or
pop
ror
sub
pop
jecxz
xor
sbb
sbb
inc
sbb
imul
ja
pop
or
push
mov
daa
add
or
sbb
and
outs
js
je
push
mov
mov
push
sub
fscale
mov
adc
pop
adc
mov
and
test
in
test
sub
jle
jmp
sub
iret
pop
in
inc
lock
sub
mov
adc
or
loop
jne
int3
add
inc
sub
pop
adc
in
adc
sub
adc
push
repnz
pushf
dec
(bad)
fsubr
gs
inc
pushf
ds
pop
addr16
mov
cmp
test
push
fild
je
js
add
push
sbb
adc
jne
test
mov
int
lods
pop
or
retf
dec
cli
push
call
cmp
jne
jp
add
paddusw
dec
or
mov
inc
loopne
pushf
mov
mov
(bad)
xchg
(bad)
push
loopne
or
push
add
mov
sub
(bad)
outs
imul
test
cmp
pop
xchg
rcr
adc
jo
jnp
inc
rcr
mov
add
push
add
xor
dec
push
jb
adc
inc
imul
sub
int3
add
loopne
inc
inc
sbb
add
add
(bad)
push
adc
or
jae
mov
test
mov
in
pop
sti
test
aas
ja
add
cmp
movs
imul
mov
jbe
add
push
pop
push
(bad)
mov
push
adc
add
cmp
and
dec
nop
lds
bound
sbb
add
and
pop
fadd
mul
cld
out
imul
jns
and
push
mov
push
or
das
into
inc
and
add
loop
sub
or
mov
mov
loopne
inc
sbb
mov
sub
lahf
and
dec
adc
adc
xor
(bad)
in
cmp
jae
in
jg
push
sbb
jns
aam
iret
adc
push
pop
dec
bound
mov
add
or
int3
or
or
xchg
cdq
(bad)
aaa
into
aam
jp
sub
push
mov
pop
call
lock
out
fld
add
or
sahf
mov
jg
js
pop
and
and
dec
js
imul
int3
out
or
inc
dec
sub
sub
test
xor
dec
and
std
sbb
fisub
ret
call
stc
into
or
xor
bound
add
sub
fld
add
add
xor
add
ja
inc
or
outs
push
mov
pop
inc
and
xor
sbb
inc
jo
push
sahf
bound
mov
add
or
call
push
or
ret
mov
mov
xlat
jg
xor
enter
jle
imul
jmp
add
cmp
jl
lods
cmp
xor
lea
jb
imul
out
inc
cwde
fldcw
add
or
jmp
in
jl
sbb
sub
shl
dec
call
add
adc
aam
sahf
retf
je
sbb
add
add
mov
(bad)
je
mov
push
push
pusha
ss
jecxz
pushf
push
sbb
push
and
jo
dec
pop
and
fmul
lock
jecxz
ja
mov
xchg
xor
pop
into
(bad)
mov
xchg
jle
loope
mov
pusha
push
mov
rcl
fstp
add
and
mov
add
jl
push
jecxz
mov
mov
or
fwait
arpl
test
icebp
sbb
mov
cmp
je
inc
clc
ror
lahf
pop
dec
or
mov
clc
mov
(bad)
sbb
jb
sbb
push
mov
aad
sub
add
jle
shr
je
sbb
cdq
pop
cs
sbb
mov
mov
add
fild
inc
push
gs
sub
push
fs
sbb
mov
pusha
jo
fsub
xchg
xchg
popa
mov
cmp
and
aaa
stos
sbb
clc
jnp
add
je
aaa
test
xchg
ror
out
push
jbe
js
(bad)
mov
xchg
cwde
sbb
add
sub
jmp
adc
icebp
pushf
adc
push
jne
inc
fist
jo
jnp
rol
mov
inc
imul
xor
add
mov
or
pop
jg
fbstp
in
inc
mov
(bad)
dec
gs
cwde
xchg
cmp
pop
add
cmp
retf
or
sub
mov
add
add
and
xor
push
aas
ror
movups
and
mov
add
pop
inc
ins
add
lds
pop
sbb
mov
pop
das
in
inc
mov
(bad)
cmps
jns
imul
lods
or
das
jmp
cmps
inc
mov
xlat
xor
pop
push
or
fidiv
inc
mov
mov
fsubr
test
ds
pop
mov
lock
retf
loope
mov
mov
push
add
add
test
xchg
and
or
sbb
enter
cmp
jo
sbb
cwde
test
and
cs
inc
or
das
dec
jo
inc
in
sub
push
cmp
and
pop
or
mov
mov
sub
jecxz
das
pop
in
lea
mov
mov
ja
retf
adc
mov
pop
xchg
push
jo
and
dec
mov
mov
xor
inc
daa
ins
pop
mov
mov
loopne
jg
mov
cwde
dec
sbb
cli
inc
jl
fnstenv
add
xchg
mov
popa
push
sub
jle
cmp
xor
mov
push
xor
sbb
nop
loopne
or
and
push
jne
lea
mov
test
or
adc
mov
mov
popa
loopne
mov
add
adc
outs
popa
sub
inc
mov
xlat
and
mov
aaa
clc
mov
adc
add
js
js
sbb
mov
ret
dec
mov
cmp
mov
mov
add
add
jl
cmp
mov
leave
pusha
add
(bad)
cmp
jmp
adc
push
das
loopne
add
loop
sbb
adc
add
and
mov
mov
push
mov
pop
inc
lods
jge
and
(bad)
mov
mov
mov
add
(bad)
xor
lea
mov
jmp
mov
sbb
shl
clc
mov
mov
or
sti
adc
dec
jo
test
mov
dec
sub
push
add
sub
adc
sahf
sahf
shl
ss
jp
dec
and
or
or
dec
sti
push
pop
sub
inc
retf
loope
ret
(bad)
jne
mov
mov
pop
jmp
inc
sub
push
adc
shl
test
mov
xlat
xchg
xchg
jns
and
and
add
push
or
(bad)
movs
mov
punpcklbw
or
(bad)
or
and
out
mov
push
fadd
je
mov
pusha
jo
adc
adc
inc
adc
sub
je
and
lea
lea
in
call
call
ins
xor
mov
rcl
xor
addr16
dec
jge
push
test
pop
push
cld
fs
xchg
sub
adc
rcr
or
adc
xchg
pop
inc
jp
pop
js
mov
xor
xor
or
cmps
add
inc
dec
dec
lock
call
and
adc
(bad)
dec
ret
cs
(bad)
div
mov
mov
aam
bound
cmp
pop
inc
into
push
push
sub
fisubr
loope
jns
sar
or
clc
push
cmp
jle
push
cmp
repz
js
cmp
mov
mov
ret
popf
es
sub
xchg
loope
lods
mov
dec
sbb
(bad)
dec
sbb
add
mov
ret
mov
add
jecxz
push
or
sub
xchg
mov
push
arpl
xchg
jg
or
sub
jl
xchg
lds
ret
jp
mov
sbb
mov
js
rep
sbb
dec
xchg
and
or
les
scas
imul
aaa
jo
cmp
mov
pusha
scas
cmp
sbb
fsubr
mov
and
outs
aam
lea
sbb
push
mov
pusha
mov
mov
adc
inc
or
test
pop
push
inc
mov
js
leave
sbb
jle
inc
cmp
sbb
mov
dec
push
ins
pop
jo
sti
sub
sbb
retf
mov
jnp
jno
nop
dec
ins
fcomp
test
dec
dec
add
lea
lds
clc
push
mov
jecxz
mov
fisub
movzx
mov
out
popf
sbb
push
aas
ret
xchg
clc
pop
loopne
inc
(bad)
mov
rcl
nop
aaa
pop
loopne
add
lods
push
lds
fistp
cmc
sar
mov
ja
or
call
loopne
and
cmp
cmp
sub
test
adc
sbb
mov
dec
jge
dec
imul
dec
mov
mov
retf
por
mov
sar
xor
push
adc
sbb
pop
test
or
cmp
dec
sub
(bad)
mov
js
cdq
jmp
jmp
enter
xor
add
and
pop
mov
call
jl
add
pop
or
enter
dec
dec
adc
inc
cmp
mov
sbb
sbb
inc
cmp
mov
push
nop
pop
xor
jecxz
xor
adc
pop
jo
pop
inc
adc
aad
add
cmp
sbb
imul
sar
mov
and
mov
push
cmps
icebp
jb
imul
lea
pop
add
xchg
dec
addr16
pusha
dec
add
or
mov
sar
stos
jg
dec
xchg
ret
data16
or
cmps
popf
adc
mov
jl
(bad)
mov
stos
mov
jp
ret
jno
pushf
inc
sbb
jb
test
dec
stos
or
push
stos
adc
loopne
cli
or
lock
adc
fs
enter
pop
loope
mov
inc
cmp
push
js
callw
jne
sbb
mov
sbb
movs
xchg
scas
xchg
jno
sbb
inc
addr16
and
mov
gs
neg
add
push
mov
pusha
je
add
mov
in
cs
std
add
add
aad
cmp
pop
pop
mov
inc
je
mov
mov
(bad)
cli
lods
iret
in
ds
out
frstor
iret
sub
sahf
push
mov
jp
mov
sar
push
dec
xchg
lods
fiadd
loopne
arpl
add
fdiv
dec
xor
jg
cwde
mov
mov
pop
or
jmp
cmp
out
sbb
in
mov
add
jmp
push
movs
xchg
and
fld
lods
(bad)
mov
add
mov
ins
je
mov
shr
and
js
sar
pusha
dec
mov
sbb
xor
xchg
movsx
lods
add
and
dec
test
jo
push
add
jmp
inc
bound
inc
dec
sbb
inc
pop
lods
lock
js
(bad)
(bad)
xchg
mov
rcr
add
ins
add
bsr
mov
test
mov
pop
sub
add
test
lods
cld
sub
popa
in
enter
sbb
and
sub
jae
pop
jb
add
lahf
add
pop
shl
push
or
mov
je
dec
jno
add
push
dec
pop
pushf
xchg
push
cmp
enter
sbb
sub
mov
sub
xchg
push
jle
mov
fnstsw
outs
sbb
cld
mov
add
cmp
mov
and
loop
add
add
enter
push
inc
mov
mov
das
je
xchg
xchg
mov
or
data16
out
sub
add
repz
jge
mov
shl
fmul
sbb
push
movs
mov
mov
loopne
js
fs
inc
jl
inc
sub
sub
jecxz
cli
inc
mov
jns
jne
dec
loope
ja
or
fimul
loopne
sahf
jbe
adc
sbb
pusha
add
dec
jno
jle
xchg
jbe
cmc
add
add
mov
ror
int
mov
mov
cmps
push
add
or
push
lock
bound
push
repnz
sub
loopne
lods
pop
inc
fdivr
lods
(bad)
ret
leave
repnz
(bad)
mov
test
js
pop
add
jge
hlt
add
nop
xchg
push
shl
lea
loopne
gs
add
test
mov
outs
(bad)
jmp
inc
or
sbb
pop
lods
loopne
fdiv
inc
inc
or
jle
cmps
mov
mov
push
test
push
fwait
add
sub
xchg
jge
scas
adc
inc
push
cmp
je
add
inc
dec
cmp
sub
aam
mov
aad
syscall
add
fisttp
mov
or
mov
add
add
and
cmps
inc
imul
mov
ds
dec
mov
mov
add
jo
push
(bad)
sub
add
sbb
mov
and
pop
loope
hlt
sbb
cmp
add
or
cmps
push
add
cdq
sub
push
mov
retf
pop
jno
mov
cmc
leave
xlat
or
mov
or
cs
xor
mov
sar
xchg
adc
pcmpgtd
icebp
ror
enter
scas
ret
jg
out
pushf
jae
lods
cmp
xchg
add
inc
mov
xchg
loopne
sbb
inc
push
loopne
push
add
jae
jb
push
xor
dec
adc
(bad)
clc
sbb
lea
fistp
call
jno
shl
jge
jmp
int3
(bad)
xor
ret
je
inc
jnp
fild
mov
leave
dec
test
add
xor
jbe
jge
mov
movs
and
fild
jno
sti
sbb
sbb
adc
mov
mov
jnp
xchg
mov
xor
or
sub
pusha
adc
cdq
or
mov
lds
(bad)
call
sub
retf
or
ins
lock
jp
fstp
pop
adc
test
mov
cmp
in
mov
inc
mov
adc
add
and
push
mov
mov
popf
push
imul
xor
lock
and
shl
hlt
cmp
jg
das
push
mov
pop
jl
rol
adc
pushw
repz
or
xor
adc
pop
icebp
fwait
hlt
add
mov
xor
sbb
adc
cmc
dec
xchg
inc
adc
repnz
arpl
movs
push
xor
cmp
aas
icebp
cmp
cs
retf
xor
jns
dec
mov
dec
scas
loop
pop
xor
jge
test
pusha
ins
call
xchg
sub
ficom
jmp
add
sbb
(bad)
mov
sti
and
push
mov
movs
push
cmp
push
in
loop
dec
and
adc
cmp
mov
pop
stos
(bad)
xchg
mov
or
test
sbb
and
xchg
cmp
xor
dec
pusha
push
and
retfw
and
cmp
xchg
into
mov
jne
call
and
mov
aaa
je
push
mov
dec
das
mov
rcr
dec
js
mov
inc
jnp
add
sbb
les
sub
cmp
and
and
and
(bad)
and
and
jmp
fs
push
add
or
jp
scas
mov
sub
inc
inc
mov
packssdw
xchg
sub
std
inc
mov
(bad)
mov
and
or
xchg
and
sub
and
loop
adc
fistp
aad
xchg
sub
sub
mov
xchg
jecxz
mov
imul
mov
inc
sbb
xor
jmp
lea
dec
lea
jl
and
pop
and
pop
xchg
pop
cdq
mov
mov
mov
in
inc
int
jl
and
lock
adc
inc
mov
add
scas
fs
fild
xor
adc
push
jmp
mov
fistp
cs
rcr
adc
or
sub
dec
adc
dec
dec
jae
pop
out
lock
cmps
sbb
inc
and
adc
scas
icebp
rcl
mov
mov
ret
pop
add
scas
pusha
popa
ret
pop
fmul
add
inc
sub
push
ror
jle
dec
dec
mov
or
pushf
mov
xor
jmp
mov
cdq
sub
sar
xchg
push
jmp
into
jae
icebp
mov
add
adc
mov
jo
outs
push
lock
mov
or
rol
test
ror
cli
call
add
mov
xor
jae
xor
or
hlt
inc
xchg
adc
(bad)
push
xchg
(bad)
mov
loope
inc
xor
mov
xor
stos
pop
cmp
mov
inc
icebp
adc
sbb
add
ja
popa
cmp
adc
mov
loope
jne
mov
push
mov
sbb
sbb
mov
mov
mov
adc
loopne
mov
leave
fst
rol
shr
push
hlt
push
popf
and
add
int3
or
or
fld
inc
pop
mov
xor
xor
aaa
xchg
push
outs
adc
add
or
sar
js
and
fs
dec
in
ja
(bad)
aaa
mov
lea
mov
mov
adc
sub
xor
pop
hlt
mov
mov
add
inc
xchg
pop
sub
ds
inc
ins
add
dec
adc
or
inc
or
jae
mov
loop
jmp
push
sub
js
or
nop
pop
add
ror
push
scas
or
sti
test
shrd
int3
mov
lea
mov
or
ror
adc
and
push
inc
xchg
js
add
rcl
mov
push
adc
sbb
ret
add
push
inc
pop
inc
enter
loop
bound
add
lds
or
push
fsub
jmp
fucomi
adc
fmul
jne
loope
pop
add
push
xor
push
loope
xchg
ror
int3
adc
push
pop
lock
rcr
mov
adc
jns
xor
lock
mov
add
loopne
xor
pop
pop
dec
shl
jbe
arpl
mov
xor
adc
imul
call
ins
js
or
xchg
or
inc
or
pop
jo
or
ret
adc
push
jo
leave
into
je
rcl
mov
add
pop
adc
sbb
add
add
mov
or
in
out
or
xor
xlat
xor
and
or
loopne
or
xor
add
nop
fdiv
push
ins
imul
rol
mov
jb
xchg
(bad)
mov
add
popf
add
pop
je
sbb
mov
rcr
add
into
les
cld
or
movs
sub
scas
add
mov
push
pusha
or
and
xlat
adc
xchg
sbb
xchg
or
adc
and
fistp
push
sbb
fisttp
sub
popa
and
nop
adc
adc
pop
cdq
inc
xchg
or
push
imul
cmp
lock
mov
sbb
ret
fs
cwde
ds
call
test
out
jae
mov
mov
enter
lea
push
fadd
add
sub
(bad)
ficom
fadd
sbb
xor
sti
adc
xor
dec
cmp
mov
add
fbstp
or
jns
movs
add
pop
adc
loopne
mov
add
jp
inc
dec
mov
ins
hlt
xor
enter
add
mov
add
dec
jmp
or
inc
sbb
dec
push
ja
cmp
adc
mov
inc
pushf
add
sbb
jmp
sbb
aam
push
sar
or
dec
pop
aas
or
cld
jmp
inc
call
jbe
loopne
ss
inc
je
and
aam
add
xchg
and
jge
jb
xlat
int
pop
cmps
and
(bad)
in
cs
retf
loopne
fcom
mov
sar
stos
cmp
ss
inc
or
call
aam
loopne
adc
and
pop
(bad)
jno
pop
int3
stc
enter
and
pop
add
sub
jae
push
pop
ret
sbb
mov
fcom
add
mov
sbb
cs
les
mov
xchg
enter
in
sbb
inc
jp
or
inc
add
mov
cmp
xor
bound
data16
es
push
or
jmp
inc
bound
add
or
inc
sub
je
std
sub
sub
je
adc
xor
push
ss
je
add
jle
scas
adc
test
sbb
mov
sbb
add
cwde
dec
pop
shr
imul
retf
ret
imul
shl
sbb
push
mov
cmp
test
add
mov
daa
imul
mov
in
dec
xor
sbb
xor
jae
popa
and
inc
or
or
fmulp
repz
std
dec
add
jmp
and
or
clc
add
cmp
dec
push
or
sbb
lods
or
outs
mov
push
mov
dec
das
fld
aaa
call
popf
jmp
pop
adc
fcom
pop
lods
scas
cmp
or
scas
ret
inc
adc
in
inc
or
loop
sar
mov
aaa
xbegin
sbb
adc
outs
sbb
jns
sbb
add
push
xchg
jle
jl
ffree
in
or
sub
dec
ret
push
aam
or
mov
mov
fldcw
mov
mov
dec
dec
les
ret
adc
or
inc
or
add
sbb
add
jns
add
mov
mov
xchg
mov
cdq
pop
icebp
push
push
call
loopne
stos
shr
(bad)
add
sti
pop
mov
out
(bad)
test
dec
inc
add
add
add
paddusb
dec
arpl
pop
mov
and
cmp
mov
daa
adc
mov
pop
call
ror
cmp
push
cld
push
add
and
sbb
pop
adc
xchg
mov
add
aam
xlat
lods
jmp
and
pop
ins
ins
mov
mov
daa
test
fcom
push
mov
xor
jno
push
call
sahf
iret
add
dec
mov
loopne
cdq
fsub
adc
lock
lock
mov
or
sub
lds
hlt
sbb
jle
push
pop
jae
test
mov
mov
sbb
or
lock
push
lock
ins
clc
push
mov
add
add
inc
rcr
pop
sbb
sbb
jl
mov
sbb
sbb
and
outs
sub
dec
je
adc
(bad)
shl
mov
rol
jl
loopne
inc
mov
aas
push
(bad)
aas
jne
lea
inc
fisttp
push
and
fs
aaa
jl
jecxz
push
mov
pushf
stos
imul
inc
sbb
inc
clc
xor
sub
pop
sbb
mov
and
jo
pop
pop
call
test
dec
and
das
push
lock
xor
push
add
or
push
or
into
out
pop
pop
jno
ins
ret
jge
mov
gs
std
xlat
dec
inc
push
mov
inc
adc
lods
push
arpl
daa
loopne
adc
daa
push
mov
repz
rcl
sub
add
mov
jecxz
in
outs
mov
jns
inc
adc
clc
add
jl
lea
mov
lock
mov
call
inc
lods
test
in
add
jo
push
shl
cmp
xchg
or
or
sbb
mov
cdq
rol
loope
dec
adc
jp
js
xchg
xor
or
std
repnz
es
jmp
mov
jl
in
or
lods
fimul
sub
mov
pop
movs
mov
(bad)
and
ds
popa
mov
movs
mov
jle
cmp
mov
jmp
sub
or
mov
jle
inc
sbb
mov
aas
push
xchg
xchg
push
sub
jl
add
xor
and
xchg
pop
sbb
sbb
mov
je
movs
and
push
in
push
jo
pop
or
mov
mov
retf
add
pop
or
adc
mov
push
jg
add
pop
add
sub
(bad)
pop
loop
cs
dec
ja
sbb
add
jo
pusha
push
add
lds
sbb
in
loopne
add
mov
bound
mov
pop
or
loopne
sbb
in
push
sub
push
adc
push
sbb
xor
mov
aam
dec
sub
sar
rcl
mov
mov
loopne
xor
and
addr16
cmps
jl
pop
pslld
pop
int3
aaa
jno
pop
sub
int3
outs
sub
add
jge
adc
add
add
push
xor
imul
push
or
xor
fcmovb
push
cmps
adc
or
ret
in
fsub
jp
push
ret
inc
in
cld
add
inc
or
sbb
mov
xor
lock
clc
ret
sbb
and
shr
mul
add
pop
push
jmp
inc
test
hlt
pop
mov
out
loopne
fadd
dec
ins
inc
sbb
fcom
or
xchg
mov
setne
dec
pop
pusha
cmp
push
xor
inc
int3
les
pop
test
mov
mov
add
daa
add
jo
loopne
cli
cmp
adc
sahf
cmp
ret
xor
xchg
dec
pop
ds
daa
jmp
dec
leave
cld
adc
ds
cmp
inc
xor
dec
xor
loop
movs
sti
inc
push
retf
dec
cmp
int3
cmp
xchg
aam
nop
xor
add
jbe
clc
mov
or
hlt
lea
mov
cs
mov
or
icebp
adc
sbb
sahf
call
lock
fwait
xchg
in
loop
cmp
popf
cmp
cli
ja
xor
cmp
sbb
xor
xor
and
add
xor
int3
inc
cmp
loopne
cli
ror
arpl
dec
popf
adc
xchg
rcr
jo
adc
sbb
clc
xor
mov
push
ss
mov
push
stos
cmp
cmp
jp
sub
push
push
inc
adc
aam
cmp
lsl
lds
push
sbb
sub
scas
push
ins
add
push
sub
jle
sbb
fcomp
mov
inc
bound
add
jmp
or
xor
sub
pop
push
pop
in
adc
pusha
lock
loopne
adc
mov
outs
int3
xor
push
jno
xchg
ror
push
jmp
sub
push
pop
mov
add
mov
jnp
and
sbb
pop
add
dec
add
fmul
mov
mov
cmp
lock
fdiv
stos
pop
sbb
push
retf
xchg
sbb
loope
add
mov
and
cmp
xchg
push
push
add
push
add
nop
and
out
ret
jle
rcr
sbb
fwait
shl
xchg
mov
mov
(bad)
or
call
hlt
add
jo
sbb
mov
in
iret
pusha
sbb
leave
jnp
jl
imul
jge
adc
inc
mov
mov
push
adc
inc
dec
push
sub
es
je
xor
xchg
je
imul
mov
mov
cmp
pop
jecxz
or
add
mov
jle
pop
jno
adc
or
std
push
mov
nop
fsubr
push
dec
lods
movs
(bad)
mov
xchg
iret
push
fidivr
dec
xchg
ins
mov
lea
stos
or
adc
inc
loope
cmps
test
in
mov
xchg
jmp
pop
aad
(bad)
mov
adc
repnz
addr16
push
rcr
cmps
xor
mov
inc
and
xor
add
cmc
cwde
and
add
cmp
cmp
fsub
test
cdq
lea
inc
inc
(bad)
loopne
push
add
xchg
shr
lea
xor
jp
test
ss
dec
xor
mov
loopne
(bad)
jnp
pop
loopne
shl
adc
add
sub
inc
add
adc
fadd
(bad)
fidiv
data16
cmps
test
or
sbb
jl
pop
nop
(bad)
inc
(bad)
push
xor
out
sar
jo
cmp
jge
js
cli
or
movs
jle
fiadd
sar
(bad)
jo
push
adc
mov
in
mov
lahf
js
or
inc
push
and
push
repz
or
movs
and
or
cmp
bound
xchg
and
adc
or
neg
dec
jge
lea
fs
xor
lock
mov
movs
xor
adc
daa
xor
xchg
xchg
loopne
add
or
mov
jb
movs
push
xor
imul
inc
xchg
add
jmp
inc
xor
mov
inc
jge
rol
add
jle
cmp
(bad)
cld
inc
jle
gs
or
retf
in
adc
sub
test
sbb
mov
popa
or
cli
push
add
in
js
ja
dec
outs
cld
mov
lock
sar
mov
inc
and
jmp
popa
call
inc
sbb
xor
mov
adc
adc
retf
add
imul
in
or
dec
sar
je
test
mov
jle
jns
aad
ret
mov
inc
sbb
inc
xor
mov
add
add
das
lea
push
inc
and
inc
call
pop
add
cmp
add
(bad)
arpl
cmps
fsubr
fstp
retf
pop
or
sbb
cmp
in
lahf
cmp
lods
sub
inc
jmp
mov
sub
dec
or
aam
inc
out
mov
add
sar
add
test
pusha
and
jnp
stc
inc
inc
push
adc
mov
std
inc
sti
jg
push
inc
sub
pop
inc
adc
sbb
push
push
cmp
cmp
out
out
fsub
stos
xchg
inc
stos
pop
add
fdiv
dec
das
pop
add
cmp
cmp
or
mov
mov
nop
cmp
cwde
mov
or
loopne
ror
pusha
ret
xchg
sub
repnz
pop
or
pop
adc
ss
and
add
cmp
add
fwait
add
dec
sub
icebp
rcr
push
adc
rol
rcl
popf
aam
mov
pop
leave
inc
(bad)
or
sbb
sub
ds
add
adc
push
inc
into
sub
(bad)
lods
mov
or
or
pop
push
nop
and
sub
adc
cmps
push
adc
adc
or
inc
in
mov
mov
xchg
add
aam
mov
xlat
ret
jmp
ja
or
neg
pop
retf
loop
pop
mov
ds
xor
push
jb
sub
ficom
imul
jg
pop
repnz
xor
adc
jne
arpl
fdivr
xchg
mov
jl
test
cmps
fwait
inc
pusha
movzx
xor
and
xchg
push
jo
shl
lds
(bad)
sbb
add
and
jmp
inc
int
cdq
inc
add
mov
movs
or
rcr
mov
ja
cmp
pop
add
xor
and
xor
mov
sub
sti
add
and
mov
ror
lods
add
mov
loope
mov
mov
cmp
sub
cwde
or
pop
xchg
add
pop
dec
adc
into
xor
xor
iret
and
or
add
mov
retf
test
test
adc
hlt
mov
jg
mov
ret
pop
mov
fbld
adc
add
(bad)
sti
scas
dec
retf
enter
cmp
mov
mov
or
dec
xchg
mov
or
call
ja
clc
push
call
test
jo
inc
add
pop
or
mov
push
ds
enter
xchg
xchg
(bad)
rcr
rcr
sbb
add
xor
call
sub
sbb
pop
xor
fdivr
rcl
or
jmp
enter
sbb
xor
aaa
ret
sbb
or
or
sub
and
xchg
data16
sub
or
std
add
add
pop
add
ja
retf
jmp
push
nop
out
inc
in
jle
clc
and
or
jno
sbb
mov
or
cmp
scas
push
ror
inc
inc
cdq
in
mov
fucomi
inc
or
push
bound
mov
push
dec
cmp
dec
aam
into
or
push
add
mov
push
aas
ror
ins
lea
mov
aam
mov
jg
mov
inc
scas
mov
mov
fsub
fdiv
jl
push
add
sbb
in
ficomp
inc
mov
mov
add
add
sub
sbb
dec
test
ret
sub
fsub
and
add
ror
xchg
sub
mov
loopne
pop
sub
jne
call
mov
add
push
shr
bound
inc
sub
lea
ja
call
dec
test
add
rcl
mov
adc
retf
add
mov
adc
add
mov
in
enter
jo
xchg
popa
push
and
adc
jle
daa
je
push
mov
jne
ret
out
ds
enter
xor
mov
push
jge
mov
ins
loopne
add
pusha
sub
cli
inc
loopne
jge
push
test
or
add
add
out
sub
add
rcl
jmp
inc
mov
(bad)
push
sbb
adc
arpl
adc
fdiv
adc
adc
dec
gs
inc
into
jge
add
push
push
or
mov
add
test
out
shl
js
and
pop
push
add
cmp
ret
rcl
jle
in
dec
or
push
push
lea
jns
call
shl
gs
inc
gs
(bad)
mov
rcr
cmp
cmc
fidivr
add
pop
mov
mov
sub
cwde
add
outs
mov
or
inc
mov
fucomp
sbb
scas
fdivr
mov
adc
aaa
cs
inc
mov
pop
in
adc
inc
in
mov
mov
nop
sbb
jge
adc
adc
jmp
pop
imul
mov
inc
push
mov
sar
mov
and
dec
lods
xor
xchg
rcr
adc
or
dec
dec
dec
xor
pmaxsw
jo
call
mov
mov
xchg
mov
gs
jge
stos
leave
inc
push
or
shl
xchg
nop
inc
xchg
hlt
sub
cmp
in
adc
mov
cmp
sahf
mov
cmp
sahf
movs
sbb
mov
push
jle
pushf
add
inc
mov
call
or
inc
data16
add
xor
mov
in
mov
push
sahf
dec
and
pop
mov
dec
cmp
test
bound
mov
sbb
or
adc
js
push
in
add
sub
pop
icebp
push
push
mov
sahf
(bad)
rol
ffreep
call
inc
jo
fmul
shr
mov
retf
das
and
and
stc
jbe
add
cwde
mov
outs
fist
sbb
cli
push
push
inc
add
repnz
pop
add
ficomp
sar
xchg
add
push
mov
int
(bad)
sub
sti
cmp
cwde
cwde
xlat
push
xor
sbb
fdivr
add
int3
cmp
adc
push
add
test
adc
mov
xchg
adc
ficomp
push
(bad)
ss
call
push
push
mov
sar
jno
sbb
(bad)
out
adc
out
mov
sbb
inc
inc
add
dec
push
mov
lods
add
mov
pushf
sub
pop
xor
mov
mov
clc
sbb
fs
mov
xlat
push
pop
adc
mov
rcl
(bad)
sub
cmp
int
std
push
fadd
lock
(bad)
adc
push
or
xchg
xchg
xor
or
pop
push
aam
fcom
xchg
fld
test
adc
sbb
lahf
cwde
call
pop
jbe
nop
inc
lds
clc
or
pop
ja
lods
aam
test
mov
mov
adc
push
or
data16
iret
push
push
mov
mov
adc
cld
pop
xchg
sub
enter
cld
add
ja
nop
ret
lock
mov
neg
mov
push
movs
test
adc
sbb
jp
mov
and
cmp
aaa
inc
test
and
mov
imul
imul
dec
jl
pop
cmps
jg
pop
mov
push
sbb
call
and
hlt
jo
add
cmps
sub
or
cmp
inc
loope
pop
push
loop
or
pop
(bad)
jmp
test
mov
or
test
cmps
mov
rcl
dec
add
add
sub
or
cmp
mov
ins
mov
hlt
mov
popa
push
pusha
or
(bad)
lods
mov
test
jmp
inc
ins
ins
xchg
(bad)
out
and
jle
add
lea
push
adc
mov
xor
adc
mov
cmp
adc
xchg
or
mov
jle
push
call
sbb
mov
movs
or
sbb
jl
or
push
xchg
pop
sub
call
dec
lds
lds
or
push
clc
jbe
or
cmp
cli
inc
cmp
rol
repnz
sub
add
jne
fneni(8087
inc
sbb
sub
adc
lods
ror
inc
xor
xchg
push
adc
push
jnp
sbb
imul
test
shl
add
pop
sbb
jle
mov
das
or
jnp
inc
loope
loopne
push
mov
ret
add
pop
adc
add
ds
mov
ds
inc
and
cmp
lock
or
xor
and
fcomp
add
add
mov
sub
test
sbb
mov
add
xchg
jmp
xlat
(bad)
fld
or
popf
pop
cs
ins
adc
mov
dec
and
pop
jg
ret
push
inc
rcl
mov
adc
add
jg
lahf
inc
sbb
pop
add
inc
rcl
xchg
push
popa
inc
or
sar
and
sbb
jp
movs
inc
or
loopne
(bad)
lods
xor
je
or
and
pop
leave
ja
add
test
cld
sbb
sub
mov
cmp
scas
inc
adc
jl
(bad)
repnz
std
fisttp
sbb
jl
sbb
and
jmp
mov
mov
adc
or
ja
add
lea
cli
cmp
mov
adc
cli
dec
adc
loopne
push
cdq
repnz
cmp
pop
cmp
sub
push
adc
fwait
addr16
dec
inc
ss
call
pop
pop
imul
mov
shl
sbb
jmp
jns
or
add
mov
mov
or
adc
js
xor
lock
ss
cmp
jle
and
mov
or
jle
mov
pop
(bad)
cmp
sub
lods
mov
test
clc
dec
and
js
adc
inc
in
and
scas
add
jl
sbb
xor
sti
mov
add
jnp
sbb
inc
cdq
dec
jg
cmp
pop
or
pop
jno
add
test
(bad)
sub
ins
jmp
add
adc
add
sub
inc
push
lea
sbb
push
ss
adc
jp
sar
cmp
sbb
add
dec
cld
jmp
lea
adc
(bad)
scas
out
test
mov
jno
or
inc
out
mov
mov
popf
sub
push
imul
sbb
pop
inc
inc
fadd
cmp
js
add
dec
xor
add
pop
add
sbb
and
ret
stos
add
add
xor
adc
adc
add
push
mov
icebp
jno
xchg
fnstenv
push
jo
push
(bad)
rol
fldcw
bound
sub
xor
inc
jb
adc
pop
add
out
xchg
shl
(bad)
icebp
loopne
sti
mov
stc
je
inc
dec
push
(bad)
jmp
adc
xchg
push
inc
xor
je
dec
jne
test
pop
push
xchg
mov
sbb
push
and
adc
(bad)
lahf
stos
ins
jnp
daa
xor
mov
add
dec
pop
dec
mov
cmp
in
lahf
scas
dec
or
dec
cmp
ja
pop
xchg
or
or
je
jbe
dec
add
inc
add
xor
add
sub
add
jbe
jg
add
mov
cmp
adc
push
mov
inc
fiadd
mov
and
mov
scas
mov
or
pop
xor
add
push
cmps
lods
lods
lahf
jns
cmp
stos
push
dec
outs
stos
les
int3
ret
or
or
push
xchg
push
call
xor
pop
mov
loopne
(bad)
sub
sbb
cmp
add
sahf
in
ret
test
cli
dec
sbb
inc
and
mov
or
leave
adc
lock
push
pop
sub
das
dec
cmp
mov
and
fisttp
adc
sbb
fs
fstp
sbb
mov
ret
rol
jb
out
mov
and
adc
shl
pop
or
aam
or
(bad)
cmp
jbe
rcl
rcl
inc
shr
mov
push
sbb
loopne
dec
xor
jmp
daa
ins
and
mov
xor
shl
push
xchg
mov
inc
daa
in
and
mov
cmp
fadd
fimul
jmp
sbb
das
in
mov
push
adc
or
sub
rol
sbb
retf
push
cmp
mov
pop
sbb
fld
sub
cld
das
pusha
xchg
mov
inc
add
add
mov
inc
std
scas
or
push
dec
stos
push
mov
mov
add
dec
push
push
pop
push
(bad)
and
imul
(bad)
add
jge
inc
in
add
dec
not
sub
and
loopne
movs
or
fiadd
(bad)
ror
mov
sub
inc
dec
jl
or
push
inc
push
push
pop
inc
mov
daa
das
aas
inc
loopne
fwait
test
pop
ror
jbe
cmp
stos
xor
pop
sbb
adc
inc
cmp
shl
inc
nop
adc
or
jae
leave
jb
or
push
scas
lods
test
mov
inc
rcr
xor
enter
test
sbb
push
xchg
lea
scas
add
retf
push
push
push
js
mov
inc
iret
xchg
mov
push
or
push
and
sbb
ret
std
or
scas
pop
sbb
and
adc
pop
jge
push
and
jge
lods
jecxz
sub
loopne
xor
or
cmp
or
mov
mov
shl
lock
mov
adc
pop
mov
bnd
lods
aam
cwde
inc
mov
mov
add
inc
dec
loopne
in
dec
xor
jmp
or
mov
test
mov
mov
push
and
cmp
dec
inc
pop
sbb
cmp
mov
jmp
call
sub
pop
and
stc
adc
cs
or
stc
cmp
sti
adc
mov
jbe
jecxz
xchg
pusha
sub
add
out
pop
lea
xor
push
jns
test
add
in
shl
jl
daa
jne
test
jbe
jp
(bad)
shl
push
add
and
xor
scas
dec
mov
or
cmp
add
mov
adc
add
enter
imul
add
mov
adc
popa
mov
dec
inc
cmp
not
jne
je
clc
jp
inc
adc
nop
add
sub
test
arpl
loope
jge
cld
adc
push
add
dec
das
add
mov
(bad)
pop
mov
into
push
push
sysret
and
loop
add
jmp
ss
sbb
push
jmp
mov
cmps
stos
mov
stos
jno
and
daa
popf
push
sbb
neg
loop
mov
sub
adc
add
xchg
sub
or
cwde
xchg
adc
add
iret
mov
ret
cdq
mov
mov
jb
sbb
push
pop
mov
sub
jae
xor
adc
jno
pop
dec
iret
xor
sbb
xchg
xor
inc
add
js
sub
sbb
adc
dec
(bad)
or
mov
fs
(bad)
add
pop
stc
fimul
or
ret
sti
add
mov
cmp
or
or
or
in
stc
add
push
mov
cmps
push
push
cmp
or
(bad)
call
mov
or
arpl
xchg
cmp
add
ret
or
push
fwait
mov
jnp
nop
adc
ja
cmp
xchg
lds
push
add
(bad)
js
jae
dec
sbb
fstp
popf
inc
xor
xor
ins
sub
inc
dec
stos
push
lds
push
push
sub
jae
inc
loope
or
push
inc
and
fistp
aas
add
dec
jmp
cmp
jmp
icebp
dec
and
or
or
dec
sub
sbb
(bad)
dec
mov
js
jmp
rol
or
and
push
in
sti
push
cmp
nop
mov
aaa
jno
push
and
and
and
sub
ja
movs
or
fs
ins
mov
mov
jno
dec
xchg
fiadd
cs
pop
xlat
movs
add
adc
push
or
adc
inc
push
adc
(bad)
out
push
add
pop
inc
push
mov
fs
inc
mov
inc
adc
add
mov
(bad)
add
sbb
movs
push
inc
shr
push
and
rcl
push
xor
sbb
rol
ror
xchg
lea
push
push
fadd
sahf
push
dec
push
loop
cmp
mov
sbb
push
leave
add
inc
push
mov
xor
mov
jo
mov
(bad)
mov
push
repnz
or
sub
inc
push
cmp
adc
popf
sbb
mov
jmp
xor
mov
mov
pop
cwde
push
dec
lock
jl
lock
mov
and
loopne
push
pop
ret
rcl
push
or
and
test
fs
add
fisttp
rol
mov
inc
into
sub
dec
pop
je
leave
das
adc
mov
jb
pop
push
add
nop
inc
rcl
mov
cli
dec
inc
cmp
jl
pop
int3
jno
pop
loopne
arpl
dec
xor
xchg
or
retf
add
test
inc
or
xchg
xchg
xchg
test
or
cmp
ds
imul
dec
fs
ins
adc
fs
arpl
or
cdq
loopne
mov
es
shr
ret
shl
dec
arpl
or
xor
pushf
stos
lea
push
and
inc
js
sti
add
mov
or
adc
and
inc
jno
stos
adc
pushf
popa
and
stos
shr
dec
and
je
mul
pusha
add
or
arpl
loopne
adc
or
fs
push
mov
inc
push
add
jo
das
and
pop
mov
test
aaa
xlat
sub
mov
mov
(bad)
xor
adc
fs
inc
cmp
add
pop
xchg
sti
(bad)
(bad)
cmp
or
mov
and
cli
test
jmp
jg
inc
jnp
inc
pop
cmc
adc
add
rcl
into
xlat
ret
xchg
jo
adc
mov
ret
je
dec
sbb
aaa
inc
das
ins
xlat
mov
jmp
aaa
xor
push
mov
bound
sub
pushf
mov
dec
call
rcl
mov
pop
fs
cdq
inc
cmp
ins
cmp
popf
bound
xchg
pop
out
add
dec
add
adc
hlt
add
push
test
push
stos
fmulp
pop
sahf
fadd
mov
add
(bad)
call
daa
adc
(bad)
push
sahf
test
mov
je
push
pop
dec
push
add
push
and
out
pusha
shl
jno
fst
or
push
pop
jo
mov
int3
pop
mov
test
loopne
add
add
je
jge
mov
jmp
cmp
adc
sbb
iret
mov
push
aad
cld
add
push
(bad)
mov
mov
popf
inc
shl
push
jmp
jmp
mov
scas
mov
lds
xchg
mov
add
xchg
retf
adc
fistp
test
loope
retf
inc
adc
push
adc
into
adc
push
adc
dec
add
xor
daa
adc
inc
imul
or
(bad)
js
rcr
hlt
jbe
sub
(bad)
les
inc
mov
or
push
sbb
sbb
je
sub
add
into
fs
aam
pop
mov
push
outs
in
push
add
sbb
sub
rol
jmp
mov
data16
test
repnz
ret
xchg
outs
div
inc
adc
push
push
adc
adc
mov
add
lods
les
sahf
movs
push
lock
jae
das
cmp
xor
inc
sub
icebp
lds
hlt
add
dec
dec
sar
xchg
inc
pop
cmc
cld
loope
jnp
add
imul
push
add
je
mov
(bad)
popf
ss
outs
lock
jle
sbb
and
inc
dec
jl
je
or
mov
xor
ret
or
add
adc
shl
mov
push
arpl
mov
jecxz
push
inc
pop
imul
jle
je
loopne
clc
xor
jge
scas
call
aam
shr
xchg
and
mov
je
js
or
mov
inc
dec
je
add
jmp
cmp
ja
out
sbb
jmp
and
add
mov
shl
sbb
jne
sbb
inc
add
push
movs
mov
add
(bad)
fcomp
cmp
xor
in
adc
lea
daa
(bad)
mov
test
les
pop
test
add
test
ror
loop
(bad)
in
mov
das
arpl
mov
sbb
and
mov
push
sbb
sbb
push
fsubrp
dec
aad
loop
or
mov
mov
mov
push
fsub
fmul
sar
add
adc
fld
xlat
jmp
cmp
lock
sbb
mov
mov
xlat
or
sub
(bad)
mov
inc
inc
fmul
fmul
dec
fstp
xor
or
sub
jo
sub
mov
adc
retf
inc
or
mov
xor
ins
enter
cli
adc
mov
outs
add
mov
aad
sbb
add
sub
adc
adc
or
mov
xor
and
adc
push
rol
or
add
mov
mov
arpl
add
addr16
or
inc
pop
cmp
sbb
xor
cmp
mov
in
sbb
cmp
sub
loop
outs
adc
cmp
jne
sbb
mov
sub
fistp
cmp
cmp
adc
cdq
inc
add
dec
inc
mov
lods
jp
xor
sub
or
pop
js
mov
mov
sub
jnp
xchg
das
jbe
xlat
enter
inc
dec
push
adc
push
lea
rcl
fsubr
test
dec
pusha
mov
xchg
(bad)
inc
pop
jno
or
daa
add
out
arpl
push
inc
xchg
call
aam
or
mov
lds
xor
jne
adc
sbb
sbb
add
ror
adc
sub
and
mov
inc
mov
or
jo
sub
mov
push
pusha
xor
push
bound
xchg
inc
lock
hlt
xor
cmp
in
imul
loopne
xor
sbb
and
jg
cmps
lock
sub
dec
xor
movs
jmp
and
push
and
aas
pop
push
out
jns
cli
cmp
jbe
mov
inc
add
loopne
jl
fdivr
adc
mov
pop
pop
cwde
jl
cmp
in
push
push
mov
xor
mov
sub
mov
inc
or
inc
jo
and
or
lock
popf
sbb
fcom
inc
in
add
fcomp
mov
loop
inc
ins
pop
push
mov
andnps
shl
push
add
or
push
cs
call
lock
movs
pop
jg
pop
or
js
push
adc
push
pusha
dec
inc
xchg
mov
mov
xchg
adc
push
add
jmp
jo
lods
adc
jp
sub
jbe
jae
ficomp
(bad)
push
add
inc
loop
push
dec
imul
inc
gs
and
mov
mov
dec
fidiv
movs
xchg
or
push
or
jbe
nop
inc
sub
aam
inc
pusha
sbb
add
int
dec
loopne
sbb
or
adc
sub
mov
movs
loopne
nop
js
mov
or
and
or
fcomp
jp
cwde
dec
add
push
lods
sub
dec
add
sub
cwde
sbb
xor
inc
loop
mov
in
adc
mov
test
sbb
(bad)
div
cs
lea
clc
mov
mov
pop
loope
mov
ds
adc
clc
inc
jge
ja
pop
popa
mov
jecxz
cld
jecxz
repnz
jne
imul
mov
push
rol
mov
(bad)
seto
jg
mov
or
sahf
cli
pop
jnp
and
add
hlt
mov
xchg
rcl
jbe
add
pop
shl
pop
add
test
retf
cmp
cmp
inc
outs
jne
mov
pusha
test
std
mov
aam
lea
sysexit
lea
mov
pop
test
imul
mov
fiadd
sbb
dec
rcr
(bad)
xchg
or
lock
mov
jp
or
mov
and
adc
fstp
inc
shl
and
ins
pop
jne
imul
xchg
neg
clc
out
cmp
jne
inc
aas
inc
sub
and
sub
cmp
(bad)
jbe
pop
pop
fisttp
push
push
ins
fimul
imul
js
jge
sub
adc
or
or
jae
push
shr
jmp
jmp
add
inc
inc
mov
test
fcmovu
adc
cmp
xor
cmp
add
jmp
xor
xor
and
test
inc
cvttps2pi
xchg
sub
ins
movs
add
or
fistp
sti
(bad)
push
jecxz
cmp
inc
inc
sub
ret
cmp
inc
pop
mov
and
jne
mov
call
pop
cmp
or
jge
ret
dec
mov
or
push
xor
ss
jo
out
adc
sub
push
imul
adc
into
ds
fisub
add
pusha
mov
ds
mov
fild
sbb
adc
sub
add
in
sub
sbb
pop
push
or
push
lea
add
in
sbb
shl
not
add
jo
ins
push
fld
or
test
jo
xchg
xor
mov
push
mov
lock
sbb
adc
sbb
and
mov
neg
call
stos
imul
nop
add
xchg
cmc
adc
jns
adc
inc
lock
mov
cmp
hlt
neg
and
imul
pop
ins
imul
push
in
int
mov
ins
pusha
push
sub
add
or
ja
cld
add
cwde
pusha
leave
sti
pop
mov
or
xor
sub
movs
retf
popa
ins
mov
and
je
and
in
pop
dec
pop
pop
jle
call
dec
jge
mov
pop
frstor
push
cmc
add
imul
push
cld
jne
or
adc
sbb
push
test
adc
movs
sbb
fisttp
xchg
add
mov
mov
in
xor
inc
(bad)
aam
retf
aad
aas
inc
mov
enter
push
adc
shl
(bad)
loop
mov
add
test
ret
and
sbb
inc
adc
mov
push
push
cmps
call
add
aam
out
or
mov
neg
and
neg
div
sbb
add
or
(bad)
xchg
sbb
cld
(bad)
outs
sar
sub
push
xor
fnstenv
pop
gs
add
imul
loope
jle
adc
xchg
shl
adc
sub
mov
or
lods
pop
fmul
push
and
(bad)
stos
xchg
mov
push
scas
es
adc
mov
aad
std
xor
pop
xor
push
dec
stos
test
and
ret
mov
jmp
ins
jno
sar
sub
cs
idiv
mov
sahf
jae
repz
call
xorps
(bad)
sbb
mov
xor
and
xlat
(bad)
call
sub
outs
inc
xor
sahf
add
(bad)
or
xchg
cmp
loope
rcl
call
pop
and
hlt
xor
jb
xor
in
mov
xor
(bad)
in
and
pop
mov
inc
test
add
push
push
mov
mov
add
mov
add
sbb
pop
mov
sbb
imul
imul
xchg
mov
pop
ja
add
mov
add
enter
fcomp
aaa
lds
inc
dec
and
rcr
test
lods
mov
or
mov
jns
popa
or
int
add
icebp
adc
mov
pop
mov
pop
fidiv
fcomp
ret
xor
sbb
cmp
and
mov
adc
sbb
and
jl
movs
pop
das
ins
inc
and
neg
ins
xchg
xchg
sub
mov
mov
sbb
outs
jmp
and
mov
dec
and
std
(bad)
mov
or
dec
xchg
shl
sub
push
test
xchg
fsub
adc
sbb
scas
cdq
fdiv
call
ja
(bad)
jae
cmp
dec
movzx
shl
inc
test
push
or
rcr
call
pop
and
adc
adc
add
inc
sbb
jb
mov
add
cmp
xor
pusha
add
fs
sbb
adc
pop
sbb
or
cmp
pop
dec
or
push
pop
xchg
push
jge
icebp
fwait
sbb
and
sbb
push
addr16
or
dec
je
jg
pop
add
pop
add
lods
retf
pop
or
sahf
sbb
mov
mov
dec
and
rcl
push
loope
push
dec
movs
add
adc
shl
adc
stos
sbb
adc
nop
add
inc
iret
jmp
sar
mov
bswap
mov
ja
stos
cmp
dec
pop
cmova
je
retf
ret
inc
mov
enter
adc
cmps
arpl
xchg
inc
mov
sbb
mov
sar
push
cmp
movs
rcr
cmp
adc
mov
push
jne
lock
sub
add
test
or
repnz
inc
pop
jl
push
sub
push
rcr
pop
rol
dec
pop
and
push
cmp
jbe
push
data16
or
cmp
ins
(bad)
loope
push
sbb
inc
inc
push
pusha
sub
and
push
push
sbb
int
and
(bad)
in
push
jmp
xor
sbb
pop
inc
or
lds
inc
xchg
xor
jne
adc
imul
mov
and
mov
cmp
cmp
into
mov
push
jle
push
lods
dec
dec
nop
push
sbb
test
add
mov
push
adc
and
shr
in
mov
pop
repz
js
add
sbb
and
mov
add
pushf
or
movs
add
cwde
pop
add
cmp
or
mov
mov
add
inc
pop
mov
add
call
imul
jo
fild
sub
dec
add
dec
lock
add
xor
and
loop
inc
adc
sbb
div
leave
test
push
mov
inc
xchg
movs
out
cmps
scas
cmp
push
jl
pushf
push
and
push
inc
or
sahf
adc
inc
jnp
int
pop
push
dec
push
cvtpi2ps
cmp
adc
adc
xchg
add
pop
jae
mov
movs
bound
cmps
adc
add
test
leave
and
pop
sbb
pop
adc
jbe
pop
dec
in
and
pop
mov
mov
ret
adc
adc
sbb
enter
push
sub
in
lock
mov
sbb
mov
ficom
mov
inc
pop
lods
clc
pop
xchg
sbb
rcl
sub
cwde
sbb
push
sbb
mov
test
jno
jmp
or
je
mov
xor
jmp
cmp
mov
cmp
cwde
mov
or
and
iret
or
adc
sbb
jl
push
dec
add
pop
call
or
test
jnp
jge
(bad)
push
dec
adc
repnz
dec
dec
imul
inc
or
jno
dec
push
sbb
lds
test
inc
jmp
sbb
into
call
inc
pusha
ret
sbb
dec
adc
push
outs
loop
pop
bound
pusha
mov
and
jmp
loop
dec
call
es
pusha
enter
push
xor
sahf
lock
or
or
and
push
int3
(bad)
leave
stos
inc
daa
mov
sub
add
in
or
push
inc
test
pop
inc
add
mov
mov
mov
call
stos
mov
inc
cmp
mov
sub
push
dec
add
add
and
add
ins
mov
and
nop
push
in
popa
mov
test
rcl
icebp
ja
xor
jnp
jb
or
sub
add
dec
cmp
xor
lods
add
dec
and
(bad)
adc
sbb
(bad)
adc
add
pop
loopne
loope
xor
jb
mov
sbb
and
ret
cmp
sub
(bad)
sbb
pusha
push
push
or
or
push
fcomp
sbb
or
clc
add
mov
xor
and
push
jmp
mov
aad
xchg
or
popa
or
mov
pop
pusha
add
loope
sahf
and
dec
data16
cmps
retf
(bad)
push
push
add
pop
mov
daa
jae
xchg
add
leave
(bad)
aam
mov
mov
cwde
inc
ja
js
dec
dec
adc
bound
push
pusha
xor
jmp
data16
ja
pop
aaa
and
mul
sbb
or
push
inc
push
xor
sbb
push
and
push
mov
push
add
push
popa
shl
inc
push
sbb
and
es
sub
ss
inc
jne
loope
adc
fcom
adc
sub
xor
add
pop
adc
or
jno
retf
pop
adc
push
pop
mov
sub
mul
push
jmp
or
out
add
mov
mov
pusha
inc
(bad)
out
or
sbb
popf
mul
pop
mov
mov
push
ret
dec
add
int3
rol
xor
push
xor
(bad)
cmc
inc
add
jo
rcr
add
add
call
sahf
inc
enter
inc
test
daa
call
adc
xchg
add
mov
mov
popa
popa
sub
data16
or
jo
jecxz
leave
imul
jno
int3
sbb
sti
ret
push
(bad)
or
mov
clc
std
ficomp
cmc
icebp
dec
mov
leave
clc
add
lock
cwde
cmp
inc
dec
les
adc
jecxz
pop
push
and
fadd
sub
fs
sub
sbb
mov
ret
cmps
or
movs
xchg
pushf
add
test
push
js
add
sbb
adc
fldenv
dec
add
pop
in
jmp
loop
ja
inc
add
sbb
ficomp
int
fisttp
dec
sbb
mov
pop
(bad)
sti
test
aad
xor
nop
loope
cmps
push
repz
test
push
lahf
lea
and
adc
ret
ror
xor
mov
test
(bad)
sbb
dec
mov
add
adc
mov
lods
outs
fsub
sub
int
es
inc
add
inc
adc
and
push
arpl
xor
cmp
mov
mov
lock
add
imul
pushf
or
shr
or
inc
dec
test
mov
scas
push
pusha
lds
lds
(bad)
and
mov
mov
sahf
sub
test
(bad)
jno
pop
xor
js
jg
xchg
xor
mov
inc
lock
inc
dec
cmp
jl
jae
pop
fist
mov
mov
jne
mov
(bad)
lds
pop
pop
(bad)
jmp
and
add
mov
jns
mov
nop
sub
push
sbb
sub
loop
clc
and
test
push
pop
mov
daa
pop
and
cmps
loop
ins
xlat
jne
mov
(bad)
mov
ds
sub
xchg
cmp
push
and
push
mov
or
add
mov
cwde
mov
ror
sbb
sar
lahf
lea
xor
push
jae
inc
loopne
sahf
sub
adc
jne
jmp
adc
std
pop
loope
cmps
or
xor
div
jg
lds
jg
rcr
fnstcw
dec
ret
test
push
add
xor
mov
add
ret
inc
test
inc
jae
idiv
dec
add
std
int
loop
pop
out
jp
test
fld
push
push
imul
cld
mul
fimul
lahf
pop
pop
dec
adc
jmp
sbb
out
std
call
(bad)
push
sub
dec
aad
(bad)
and
test
push
das
enter
sbb
xor
ins
xor
rol
cmp
jno
cmp
add
inc
mov
or
arpl
dec
popa
fcomp
test
sub
jmp
int
sti
jmp
test
call
enter
mov
in
mov
nop
retf
test
nop
retf
sbb
icebp
add
push
mov
(bad)
dec
popa
popf
push
sbb
addr16
sbb
add
push
adc
push
(bad)
sbb
pop
inc
sub
leave
mov
(bad)
rol
jmp
aaa
popa
and
sbb
aas
enter
pop
add
lock
jne
sub
xchg
adc
test
xchg
(bad)
fiadd
jp
pop
xor
mov
popf
add
push
pop
test
test
add
mov
fdiv
mov
daa
pop
sub
pop
ins
pusha
pop
and
jl
sub
jle
test
push
fs
add
jnp
je
add
dec
jae
cdq
pop
pop
fidiv
sub
pop
test
or
leave
bound
sbb
pop
sbb
mov
nop
jo
je
sbb
mov
out
mov
mov
loopne
mov
mov
adc
icebp
mov
aam
and
adc
mov
or
push
or
add
rol
pusha
ja
mov
cmp
in
pop
jecxz
ret
in
(bad)
cmp
pushf
loopne
(bad)
push
in
(bad)
push
or
dec
sub
adc
inc
aam
or
and
addr16
dec
adc
adc
ins
xor
fidiv
mov
out
loopne
sub
push
popa
and
lahf
leave
sub
xchg
jle
sub
icebp
add
xor
mov
sbb
dec
inc
push
xor
push
or
test
aad
jg
inc
fmul
rcl
cmp
ret
nop
fbld
retf
sbb
jg
or
je
push
enter
cmp
jbe
inc
adc
(bad)
aam
sbb
mov
xchg
inc
add
call
enter
sub
sub
sbb
fwait
or
add
adc
adc
and
fdivr
cmp
adc
inc
scas
add
sbb
adc
xchg
and
mov
int
sbb
xchg
addr16
adc
pop
sub
mov
mov
jbe
test
call
fwait
adc
cmp
out
comiss
mov
inc
mov
sbb
repnz
imul
jae
add
add
or
lahf
lock
pop
pop
xlat
xchg
jnp
lea
sbb
sbb
sbb
push
dec
cld
xor
ins
pop
xor
adc
xchg
add
or
adc
and
add
inc
add
sbb
(bad)
mov
dec
sar
xor
cmp
sbb
pop
cmp
sbb
nop
outs
imul
push
sbb
adc
add
mov
adc
enter
leave
xchg
push
fiadd
inc
pop
mov
enter
push
dec
pusha
loopne
fmul
lahf
repz
ss
mov
fs
xchg
icebp
add
ins
adc
add
xchg
test
inc
stos
mov
pop
push
rol
imul
mov
cmp
xor
lea
aad
enter
push
(bad)
cmp
movs
push
push
xor
and
test
ret
pop
xchg
sub
outs
add
les
das
dec
add
jbe
mov
add
mov
or
repz
es
inc
jo
fs
in
jae
add
dec
out
add
or
das
loopne
jmp
fwait
jnp
jle
(bad)
jmp
inc
pop
lods
cmp
and
fmul
pop
mov
and
adc
add
push
xor
loopne
sub
jb
or
pop
cmp
push
nop
call
repz
(bad)
push
fcomp
shr
ret
mov
not
mulps
mov
or
repnz
mov
cmps
and
ret
dec
enter
data16
push
shl
and
or
or
add
aam
pop
daa
es
enter
or
cmp
daa
inc
or
cli
cmps
out
push
dec
adc
dec
dec
cmps
std
adc
adc
add
sub
push
dec
sbb
pop
loope
adc
mov
out
loop
and
add
cmp
and
enter
or
xor
pop
push
mov
cmp
xchg
cmp
pusha
add
sbb
xchg
inc
std
aam
loopne
dec
clc
dec
mov
dec
cmps
pop
movs
adc
inc
adc
movs
shr
mov
lods
popa
cld
add
or
adc
pop
xchg
pusha
xor
adc
cmp
ins
mov
sub
mov
xchg
cmp
sbb
adc
adc
data16
ja
sbb
test
or
mov
mov
pop
push
arpl
ret
xor
dec
ss
cdq
inc
and
outs
ja
clc
jge
sar
addr16
pushf
clc
or
jge
inc
cs
into
push
adc
arpl
test
das
lock
pop
inc
sub
sub
or
push
xchg
test
not
rcr
sbb
jmp
add
in
test
loopne
(bad)
mov
mov
and
cmc
clc
push
cmp
ja
je
jle
rcr
adc
inc
jne
add
inc
cmp
mov
sbb
(bad)
rol
into
or
xchg
jb
fimul
adc
movs
ror
mov
sbb
sahf
adc
mov
lahf
movs
mov
xchg
clc
add
lods
and
xchg
pusha
bound
enter
add
push
sub
push
mov
mov
xor
push
push
add
mov
pop
or
(bad)
adc
add
fbstp
add
jmp
mov
sub
adc
push
mov
pop
dec
fild
inc
or
loop
pop
(bad)
mov
es
push
inc
out
inc
stc
fdiv
mov
and
test
add
and
push
and
cli
jmp
(bad)
adc
xchg
sbb
leave
enter
add
push
arpl
cmp
aaa
loopne
mov
sub
push
cmps
cmp
push
push
adc
ss
nop
out
fadd
add
and
mov
adc
jo
and
push
adc
shl
inc
mov
and
leave
and
and
xor
inc
idiv
das
in
add
push
or
mov
push
or
rcl
lods
lea
push
test
aam
shl
dec
mov
ja
add
(bad)
and
jmp
dec
xlat
inc
loopne
sbb
lea
test
mov
inc
ret
daa
push
stc
sub
push
mov
inc
sbb
inc
xor
xchg
xchg
sbb
dec
ficom
lds
jne
sbb
add
pusha
std
or
(bad)
mul
jae
call
jmp
iret
adc
push
ds
xchg
xchg
call
test
shl
lods
in
ds
inc
cmp
jmp
pushf
cwde
sub
push
movs
inc
les
or
call
adc
jno
push
or
out
lock
imul
(bad)
call
pop
push
pop
pop
jnp
pop
mov
adc
les
push
aas
pop
add
dec
add
mov
or
lds
push
or
lock
mov
push
xor
fisttp
gs
sbb
arpl
mov
add
cld
or
ins
xchg
adc
push
add
(bad)
stc
add
xor
jmp
sti
adc
inc
test
add
sub
enter
pushf
adc
or
mov
xor
push
mov
xchg
adc
adc
adc
xchg
cdq
sbb
wrmsr
ficomp
and
loopne
clc
jp
add
jmp
lods
(bad)
in
add
xchg
jo
ins
dec
test
mov
adc
sahf
fstp
mov
xchg
or
jmp
sbb
inc
nop
or
xor
xchg
add
xchg
ror
inc
pop
xchg
add
push
adc
lea
(bad)
dec
or
ins
push
arpl
ror
mov
xor
outs
mov
add
retf
mov
jo
dec
sub
jmp
rol
mov
jecxz
fstp
pushf
mov
lea
xchg
rcr
fcom
inc
cwde
adc
adc
mov
cld
jmp
jmp
in
fsub
out
push
sbb
push
sbb
xor
sub
jae
xor
adc
push
pop
jbe
fisttp
jmp
pop
adc
dec
mov
outs
and
aam
mov
or
mov
mov
mov
std
sbb
ss
inc
loop
adc
hlt
add
mov
sub
clc
mov
adc
adc
rol
or
shl
pop
xor
xchg
sbb
adc
test
cmp
adc
mov
pop
dec
das
jb
fmul
xor
sub
inc
add
xchg
int3
sub
and
lods
push
into
fistp
shl
shr
out
mov
mov
xchg
inc
in
pop
outs
fadd
pop
out
das
add
adc
push
xor
lahf
inc
pusha
or
and
add
push
sub
lock
inc
xchg
add
add
jno
push
add
mov
lahf
pop
(bad)
mov
test
jmp
mov
mov
pop
add
jecxz
xchg
ret
lock
call
adc
call
sbb
loope
add
push
xor
jle
jmp
add
xor
jnp
in
dec
es
sahf
jg
sbb
jle
ss
jmp
fwait
(bad)
je
xor
add
or
cmp
jg
je
mov
adc
fsubr
xor
dec
sti
xchg
jbe
and
or
rcr
mov
sbb
or
ins
fimul
lods
pop
mov
js
xor
pop
push
ret
jle
mov
jmp
test
xlat
mov
pusha
cmp
fild
pushf
shl
lods
or
mov
mov
ret
(bad)
push
movs
dec
jnp
jbe
inc
cmp
adc
imul
call
xchg
mov
or
add
xor
dec
add
mov
add
and
vmovntps
out
or
mov
in
or
push
lea
adc
xor
out
adc
shl
jno
add
jmp
sbb
mov
imul
call
call
add
push
jmp
and
adc
adc
in
loopne
loopne
dec
adc
push
xor
add
add
pop
cmps
mov
add
aas
loopne
cmp
dec
dec
cmp
jns
loopne
in
fnsave
sbb
cmc
mov
pusha
xor
inc
and
and
add
cmc
mov
mov
inc
sub
mov
dec
sbb
xor
and
adc
std
xchg
mov
mov
int3
sub
adc
ret
jmp
jp
xor
inc
cs
sub
xchg
sbb
scas
and
sub
xchg
mov
repz
xor
or
adc
xchg
or
mov
or
push
sub
mov
pop
icebp
leave
or
or
xchg
inc
or
jl
loopne
sbb
dec
(bad)
jne
push
in
pop
and
sbb
pop
cld
jg
push
(bad)
push
inc
adc
js
add
popa
jns
std
or
test
mov
pop
jno
sbb
jle
ret
aaa
mov
pop
ja
mov
adc
jge
add
inc
add
jl
jmp
cld
jl
cmp
jg
lock
sbb
or
retf
maxps
jle
push
inc
popa
shl
sbb
and
movs
push
sbb
rcl
add
add
cld
ds
dec
add
fbstp
mov
popf
mov
sbb
add
inc
add
push
push
sbb
cmp
fst
lock
dec
jmp
adc
ss
add
test
dec
sbb
mov
push
data16
lock
sbb
aas
jne
inc
stos
loopne
sub
repz
fs
int
cmp
and
mov
cmp
add
mov
mov
and
jp
cmp
mov
push
cmp
and
fs
outs
push
in
inc
hlt
jne
xadd
fsub
or
xor
mov
cmp
imul
dec
or
add
sbb
or
mov
imul
lea
mul
adc
out
les
adc
sbb
(bad)
mov
lea
pop
shl
add
mov
rol
push
adc
scas
add
push
fist
mov
mov
daa
out
or
jmp
sbb
add
mov
pop
loope
and
out
xchg
adc
push
adc
inc
mov
add
in
movs
cmp
cmp
rcr
and
mov
fs
xchg
test
popf
or
fild
js
jne
mov
push
test
add
or
or
or
jo
sbb
out
adc
or
scas
in
add
add
test
pop
inc
xor
adc
push
mov
xor
mov
ror
add
inc
test
in
add
add
xor
push
add
das
pusha
in
sahf
mov
aam
cmovb
rcr
test
cmc
adc
add
(bad)
jne
xchg
js
and
add
pop
jmp
jmp
sub
popf
loope
pusha
aas
xchg
mov
mov
xchg
fmul
push
add
scas
into
push
jns
add
mov
sbb
pop
or
and
inc
and
adc
sub
xor
jecxz
and
outs
(bad)
das
inc
cmp
push
shl
test
daa
add
imul
ror
push
or
das
add
dec
test
pop
push
sbb
shl
push
ror
inc
test
mov
int3
std
mov
pop
xor
das
rcl
cmp
outs
lock
inc
mov
xor
adc
sbb
lock
cmp
int
imul
addr16
ins
imul
sbb
mov
lea
dec
push
out
add
and
or
pushf
pop
and
aaa
fidiv
cmp
or
ret
sub
inc
test
inc
add
cmp
and
xchg
and
or
or
jmp
pop
cs
cmp
cmp
div
push
or
movs
addr16
add
sbb
loop
lods
lahf
jecxz
add
cmp
fistp
push
xchg
out
mov
or
pop
jmp
aam
add
and
fisub
jmp
add
jae
mov
sbb
push
and
mov
dec
sbb
cld
adc
dec
jne
inc
mov
outs
mov
hlt
jne
cmp
shr
add
xor
and
adc
sbb
push
add
adc
add
sbb
cmp
lods
mov
pop
mov
aaa
push
mov
dec
inc
adc
inc
mov
aad
dec
addr16
pushf
sub
sbb
adc
or
and
loopne
push
push
scas
inc
xor
jp
sbb
sbb
push
push
cmp
pop
sub
xor
enter
ds
in
ins
push
or
cmp
mov
mov
push
jb
add
test
pop
xor
fisttp
or
mov
out
push
out
call
into
jmp
jl
mov
sbb
in
mov
mov
xor
movs
(bad)
aad
loope
call
ret
sub
push
dec
sar
rcr
inc
mov
movs
test
push
dec
mov
lods
into
mov
mov
add
dec
add
and
dec
aas
outs
cmp
imul
jge
je
add
fs
adc
mov
pop
cmp
pop
mov
dec
or
fisubr
fisttp
int3
cdq
jl
cmp
add
mov
outs
or
and
xchg
mov
gs
cs
or
xor
inc
xor
adc
les
sub
adc
inc
or
push
scas
test
xor
adc
jo
bound
jmp
in
mov
ss
or
push
pop
imul
push
stos
dec
shl
cld
mov
call
pop
test
sbb
jae
and
xor
sti
lock
adc
ret
xchg
pusha
outs
xor
xor
std
aam
mov
push
xor
pop
push
in
xor
sar
neg
push
lods
push
sbb
add
scas
ds
mov
push
inc
cmp
mov
in
ins
xor
push
mov
pusha
mov
xchg
push
mov
jnp
js
xor
inc
pop
test
pusha
dec
jbe
xor
outs
imul
xlat
mov
cmp
add
add
fiadd
(bad)
dec
push
cmp
push
mov
loopne
clc
dec
cmp
pop
mov
push
mov
test
dec
and
inc
cmp
jl
cmp
dec
xchg
cmp
sbb
xor
add
and
mov
adc
inc
in
add
ins
adc
aas
mov
fs
jb
add
inc
or
xchg
add
les
pop
mov
mov
pop
adc
mov
or
push
mov
push
xchg
and
call
imul
clc
cdq
idiv
inc
or
inc
or
cmp
rcl
xor
enterw
adc
aaa
add
adc
mov
mov
push
cwde
ret
mov
adc
les
push
add
xchg
jmp
xor
mov
dec
add
add
or
mov
adc
add
cmp
push
(bad)
inc
dec
not
loop
xor
test
je
fisttp
sub
mov
add
dec
rol
es
cmp
jl
in
jo
dec
push
ins
and
push
lea
mov
xor
mov
jle
or
(bad)
xchg
xor
daa
cmp
add
jle
mov
add
fs
dec
cmp
add
or
mov
xor
pop
xor
pop
add
adc
test
sbb
outs
or
add
(bad)
scas
sbb
out
add
dec
je
add
jmp
add
cmp
add
mov
add
jbe
cmp
and
sbb
aam
sbb
adc
aas
les
add
nop
jl
test
ror
sub
or
push
adc
add
lea
sbb
fadd
ror
xchg
inc
imul
or
out
lods
popa
cdq
cmp
mov
adc
ja
dec
adc
inc
test
imul
fwait
lods
and
lods
dec
fadd
jno
sub
add
call
lea
pop
pusha
xor
mov
lods
sub
jge
push
popa
sub
add
xchg
test
(bad)
xor
push
lahf
add
iret
ins
data16
stos
mov
outs
sbb
fdivr
or
sbb
mov
xchg
sbb
ficom
adc
adc
ja
push
cmps
sbb
imul
adc
ins
jg
xchg
mov
in
inc
adc
adc
cmp
enter
push
dec
jle
pop
or
and
add
call
call
jmp
cmp
pop
xchg
xor
sub
mov
push
add
mov
push
shl
test
cmp
lock
jbe
test
add
mov
adc
(bad)
es
fcmovb
ror
rol
add
mov
(bad)
pop
mov
fist
dec
inc
lods
and
push
into
dec
dec
dec
loopne
fdivr
add
or
jge
mov
dec
cmp
adc
pusha
add
or
add
mov
sub
jno
or
loop
and
mov
push
lock
clc
and
sbb
push
add
test
pop
adc
push
ret
dec
pop
xchg
adc
loopne
adc
mov
or
push
data16
mov
add
mov
aaa
inc
lock
sahf
and
lea
shl
xor
push
push
mov
push
out
jmp
xchg
retf
dec
inc
ret
shl
cmp
(bad)
int3
repz
xor
pop
les
pushf
push
mov
xor
clc
mov
and
push
mov
pusha
mov
adc
jg
dec
shl
clc
and
pop
mov
pushf
jmp
mov
sub
push
push
je
pusha
or
jmp
ror
ret
sub
mov
jle
inc
addr16
lock
mov
add
mov
(bad)
cmp
sahf
add
adc
sub
xor
cmps
cmp
jle
fsub
and
fsubr
and
mov
and
lock
add
push
jb
xchg
add
sbb
ret
and
fisttp
lods
out
xor
push
aad
and
lock
sub
shr
test
adc
call
xchg
and
test
cdq
inc
pop
adc
cmp
add
cmp
les
pop
sbb
sub
xlat
add
in
add
jnp
lds
cdq
adc
mov
in
sub
add
or
add
xchg
(bad)
inc
cmp
pop
push
ss
clc
mov
adc
mov
fist
aaa
jle
fist
mov
enter
sbb
cmp
xchg
sub
pop
or
xor
cdq
out
or
dec
pop
inc
sub
pop
in
leave
add
mov
mov
imul
sbb
push
outs
jno
scas
popf
test
call
mov
jle
push
(bad)
or
pop
add
iret
test
pop
and
shr
dec
ins
add
loop
and
push
mov
add
or
mov
push
or
stos
adc
aam
push
(bad)
jg
adc
neg
cmp
xchg
sbb
sub
xchg
mov
pop
jmp
inc
js
dec
ret
aaa
in
jb
hlt
and
add
dec
jp
movs
push
add
xchg
push
dec
or
xor
(bad)
sahf
xor
jp
mov
mov
enter
sbb
push
lock
ss
in
push
push
and
cmp
fisttp
mov
loopne
jmp
call
pushf
mov
add
fisttp
lods
jge
mov
pop
or
mov
mov
adc
and
aas
xchg
sbb
xchg
xchg
into
or
adc
add
add
repnz
js
out
inc
pcmpgtb
or
cmp
and
adc
mov
test
jmp
or
fstp
and
inc
mov
mov
mov
cmp
xor
or
sbb
int
sbb
and
inc
shl
sbb
pop
or
pop
es
add
sbb
and
rol
sub
fadd
rcr
(bad)
movs
mov
scas
mov
mov
mulps
shl
fucom
dec
mov
pop
sub
iret
add
sti
ret
cwde
cmps
mov
sbb
mov
fwait
loopne
mov
and
fcom
pop
dec
adc
sub
inc
movs
cmps
(bad)
inc
jmp
sub
cmp
dec
outs
clc
pop
add
xor
lahf
movs
lock
les
jno
ror
mov
inc
mov
icebp
and
repnz
rcl
sbb
adc
hlt
jmp
int
test
mov
movups
xor
outs
pop
xchg
pop
xor
jae
mov
inc
ret
movs
ds
cdq
clc
shl
adc
add
sub
out
pop
daa
retf
pushf
or
addps
push
and
pushf
ss
daa
mov
inc
ja
or
daa
or
daa
sub
mov
pushf
test
lea
inc
cmp
push
mov
push
out
cmp
jae
xchg
add
bndstx
adc
or
or
push
loope
stos
adc
jbe
sub
mov
outs
jb
pusha
dec
or
inc
mov
add
push
xor
fldcw
ss
add
adc
add
pop
push
mov
enter
cdq
push
fcom
and
and
xor
imul
lods
add
sub
xchg
mov
sub
dec
jmp
dec
and
mov
shl
push
call
adc
pop
add
jg
inc
rol
xchg
jl
pop
pop
mov
scas
push
shr
xchg
lock
push
add
adc
(bad)
mov
inc
jbe
lock
in
pop
test
or
jbe
pusha
inc
loopne
dec
test
cmp
icebp
inc
rol
in
sbb
or
adc
lods
inc
hlt
sub
int3
fxch
ret
sbb
sbb
or
out
sub
or
and
in
es
loope
pusha
xchg
call
inc
in
sbb
aam
in
push
adc
mov
in
xchg
ins
rcr
cmp
shl
test
dec
int3
adc
fcom
or
ror
aam
push
(bad)
fisttp
rol
jge
adc
add
loop
mov
and
jl
add
inc
inc
dec
hlt
inc
dec
jl
dec
xor
ror
jge
into
ror
xor
fild
pop
fmul
jb
pop
and
dec
call
int3
cmp
or
jp
(bad)
js
nop
or
cmp
in
cmps
retf
lock
int3
and
add
cmp
loopne
mov
mov
rol
rol
and
add
gs
jl
add
mov
loopne
ret
push
clc
mov
nop
outs
dec
mov
loope
int
pop
aam
rol
jnp
test
shr
fdivr
and
xor
and
test
push
pushf
mov
hlt
js
fild
(bad)
add
jmp
push
clc
xor
sar
cmp
or
mov
adc
clc
jg
dec
call
daa
mov
mov
or
dec
adc
and
add
mov
pop
lock
inc
add
cmp
jp
or
clc
fadd
fiadd
inc
es
inc
outs
popa
jb
inc
or
mov
shr
call
jmp
adc
sahf
dec
lea
push
push
vsqrtpd
dec
sbb
jnp
xchg
or
inc
dec
mov
xchg
loopne
jb
add
push
loopne
pop
mov
mov
mov
sub
out
add
ss
cmps
addr16
jecxz
loopne
ret
cmp
pusha
inc
add
(bad)
test
mov
dec
cld
jmp
out
xor
sbb
xlat
scas
jle
or
or
push
push
inc
jo
popa
sbb
mov
add
pop
in
test
add
inc
sub
jns
mov
adc
sar
fcom
loopne
and
jle
or
jmp
mov
and
or
or
adc
inc
pop
call
call
dec
lock
dec
xchg
inc
adc
dec
pop
and
repnz
lock
jns
push
fadd
fisubr
and
sti
pop
dec
inc
in
push
dec
jo
rcr
dec
or
adc
inc
push
call
push
xor
cmp
rol
call
ret
cmp
movs
sub
fadd
and
inc
hlt
adc
sbb
retf
sub
or
xchg
adc
lahf
xchg
mov
int3
shl
jno
or
stos
ficom
sbb
lods
cld
cmp
cdq
ror
push
push
xor
rol
mov
nop
sub
sbb
mov
or
push
lock
sbb
repz
xor
sub
jne
fdiv
and
in
repz
add
pop
sbb
in
jmp
ret
jbe
xor
enter
mov
push
mov
pop
aam
hlt
mov
sub
mov
ja
cmps
sub
add
shl
imul
loopne
movs
pusha
and
test
sbb
adc
sub
inc
add
fdiv
pop
sbb
add
mov
pop
iret
sub
mov
in
cmp
inc
cmp
push
repnz
add
pop
or
les
ss
mov
das
jne
mov
(bad)
int3
or
jp
adc
push
or
xor
sub
cmp
jl
rol
dec
add
jbe
mov
ror
ror
shl
shl
jmp
and
es
add
jns
(bad)
sbb
shl
mov
mov
cwde
xlat
sbb
mov
test
adc
lea
add
dec
loopne
push
cmp
or
test
fst
sub
je
push
sti
fcom
dec
sar
jmp
sbb
jle
or
sub
dec
je
add
ror
popf
lea
gs
sbb
aam
lods
xchg
jmp
inc
call
idiv
or
cmp
xor
adc
mov
cli
dec
or
or
jmp
dec
idiv
inc
jl
ret
mov
or
mov
ret
pop
pusha
cmp
clc
sbb
push
sbb
lea
mov
pusha
adc
dec
push
add
cmp
add
pop
jl
inc
fmul
fmul
fwait
shr
cmp
inc
(bad)
ss
push
test
or
iret
sbb
and
and
mov
mov
inc
imul
push
push
inc
push
cdq
sub
or
pop
gs
inc
test
(bad)
in
clc
cmp
add
popa
cmps
add
nop
arpl
push
jl
adc
add
leave
xchg
or
std
and
xchg
jge
sub
xor
inc
inc
mov
je
mov
and
adc
test
xchg
test
call
xor
in
cdq
add
outs
aaa
sar
repnz
mov
and
rcl
(bad)
shr
retf
pop
mov
sti
nop
ret
fdiv
cmc
cmp
sub
jmp
xor
add
or
jo
inc
js
cmp
idiv
xor
mov
or
push
pop
daa
cmps
nop
and
nop
sbb
inc
imul
fs
or
sti
mov
sub
sub
adc
cmp
test
ss
mov
test
pusha
sub
ds
or
int
mov
sbb
loope
sbb
fld1
fadd
pop
cld
sub
dec
inc
add
sbb
sahf
inc
lods
fisub
adc
adc
rol
inc
fwait
call
cmps
push
cmps
add
mov
sahf
das
inc
mov
adc
mov
loopne
cld
adc
and
int3
hlt
pop
add
enter
pop
push
and
loopne
sub
jg
test
das
inc
fdiv
push
push
adc
jmp
out
jg
cmp
inc
sub
mov
cld
sub
or
cmp
cmc
mov
adc
clc
xor
mov
ja
push
inc
add
dec
fidivr
adc
mov
fmul
and
or
and
jp
call
dec
retf
mov
sti
sbb
inc
or
push
pop
pop
adc
push
dec
js
cmp
add
mov
and
adc
fwait
dec
ins
sub
or
cmp
jnp
ror
popa
mov
jbe
or
push
sahf
push
dec
mov
aas
mov
mov
mov
xor
pusha
inc
push
mov
jne
pop
pop
mov
sub
sbb
loopne
gs
xor
mov
adc
cmp
dec
adc
lds
adc
inc
in
and
xor
sub
mov
popa
in
aam
loope
loope
movs
retf
rol
dec
mov
in
aam
arpl
xor
inc
inc
and
mov
inc
enter
shrd
fst
sbb
adc
dec
sub
adc
jne
mov
xor
and
mov
jbe
test
pop
daa
cdq
(bad)
dec
mov
add
(bad)
sbb
lock
shl
or
std
ins
and
dec
mov
xchg
sar
inc
mov
add
jmp
bound
add
adc
or
add
lock
pusha
ins
popa
retf
inc
mov
and
add
mov
mov
jae
imul
ins
fmul
repz
pop
adc
and
fdiv
and
add
xor
add
jle
nop
fisubr
mov
mov
mov
addr16
pop
adc
icebp
mov
je
mov
adc
int3
add
dec
inc
sub
jmp
xor
push
mov
inc
sar
jne
push
add
push
sbb
jbe
push
add
sub
cli
ds
push
inc
and
cmp
cwde
jge
sbb
cs
lahf
xor
nop
popa
sbb
sub
icebp
cmp
ret
adc
push
and
shr
sbb
(bad)
bound
(bad)
cmp
lods
in
jp
cmp
dec
clc
leave
inc
jg
fisub
inc
mov
mov
fs
push
adc
or
jbe
adc
movs
add
jp
mov
arpl
xchg
xor
and
es
adc
jo
jo
or
xchg
fadd
xchg
movsx
push
out
push
sub
jl
jb
ja
xor
cmp
shl
push
mov
(bad)
or
int3
out
call
or
test
addr16
or
add
xor
xor
push
xchg
(bad)
ret
sbb
push
dec
pop
dec
outs
retf
imul
adc
adc
or
mov
popf
jae
adc
or
mov
inc
mov
xchg
push
jmp
jnp
faddp
aad
ret
add
test
test
popa
mov
sbb
cdq
mov
pop
mov
mov
jmp
enter
jo
neg
je
not
lods
adc
outs
xchg
jmp
pop
outs
add
cld
loope
adc
idiv
movd
mov
fs
sub
ins
pop
lods
or
inc
shr
mov
ffreep
add
dec
mov
or
cmp
xor
ret
xor
and
adc
and
xor
and
adc
call
and
out
jnp
inc
arpl
int
push
sbb
cmp
mov
xor
ins
inc
jecxz
cli
sbb
dec
adc
jp
fs
cmp
lods
push
mov
jp
xchg
in
add
add
pop
ins
out
cli
jmp
movs
mov
push
adc
xor
pop
add
sbb
jge
inc
(bad)
mov
xchg
mov
dec
daa
and
dec
and
mov
test
repz
js
cmp
out
push
mov
es
out
add
cmp
jne
dec
fstp
add
pop
sahf
into
rcr
test
rcr
ret
cmp
add
popf
jle
jecxz
cmp
imul
repz
out
sub
dec
lea
adc
or
cmc
or
aam
loopne
jl
sbb
inc
xchg
push
inc
daa
out
pop
push
adc
and
aad
call
loop
je
fst
jo
jle
pop
retf
or
add
mov
(bad)
jnp
pcmpgtb
sub
xor
dec
add
jl
dec
rol
add
hlt
inc
sbb
add
int
sub
jg
rol
in
pop
in
add
repz
adc
test
add
push
sbb
jle
inc
push
push
cmp
or
inc
iret
ins
cli
cmps
adc
in
xchg
dec
ins
and
jecxz
lods
and
cmp
call
imul
inc
pusha
jns
je
or
mov
daa
inc
jmp
call
xchg
push
(bad)
(bad)
jmp
or
ret
pusha
(bad)
leave
pop
jecxz
aaa
and
xor
inc
add
add
mov
mov
inc
cmp
(bad)
mov
dec
ret
pop
and
inc
dec
push
sbb
mov
push
bswap
inc
mov
fadd
add
int3
clc
mov
inc
or
sub
mov
enter
add
fcomp
inc
jl
pop
xchg
adc
lea
push
inc
mov
xchg
push
push
aaa
lea
out
adc
scas
in
dec
mov
cmp
push
mov
sub
pop
out
xchg
test
jecxz
dec
pop
sbb
mov
loop
dec
or
pop
cmp
jns
mov
xor
ins
into
sbb
ret
add
adc
arpl
sub
in
jo
xor
mov
(bad)
ss
mov
sbb
stos
or
adc
mov
cmp
ret
push
jb
xor
pop
movs
lock
sub
scas
add
movs
mov
daa
jl
or
lea
cmc
xchg
pop
push
xor
neg
mov
imul
inc
inc
mov
pop
add
or
fidivr
call
adc
jno
or
inc
inc
pop
cmp
je
add
inc
cmp
outs
dec
xchg
or
retf
popa
imul
and
or
adc
sahf
dec
jmp
sub
pop
add
xor
sbb
lea
pop
test
mov
push
jl
dec
push
jecxz
in
add
pop
xor
icebp
push
dec
mov
xchg
add
lea
sbb
xor
push
adc
rcl
add
std
dec
inc
call
or
pusha
sbb
loopne
jno
inc
push
retf
stos
add
mov
popf
add
pop
xlat
inc
adc
test
add
or
xor
idiv
mov
mov
je
cmp
movs
scas
sub
xchg
neg
jno
add
push
in
je
add
xchg
sahf
sar
aam
mov
test
push
adc
(bad)
jmp
mov
push
or
not
jnp
out
je
push
lock
rol
fimul
adc
fsub
cmp
out
mov
les
inc
dec
push
cmp
jle
into
(bad)
lock
fdiv
xchg
rol
add
jmp
dec
jg
sub
push
xor
into
jae
add
ret
mov
push
(bad)
rol
pop
xchg
(bad)
dec
push
sub
xor
and
sbb
push
sti
push
lea
pop
mov
mov
(bad)
and
inc
mov
mov
or
add
add
test
mov
test
scas
repz
(bad)
mov
or
or
lea
sub
xchg
rep
pop
sub
ret
inc
jno
adc
js
movs
push
sub
fistp
xlat
dec
int
mov
jbe
xchg
loop
into
por
cmp
xor
sbb
push
mov
push
jo
cmp
sbb
mov
pusha
inc
mov
sbb
pop
adc
(bad)
rcl
sbb
lods
add
popa
jae
jge
test
push
mov
jge
inc
and
pop
rcl
xchg
pop
clc
mov
les
xor
xor
scas
movups
pop
add
add
adc
xor
les
arpl
adc
mov
add
adc
ret
dec
test
lods
adc
add
neg
inc
add
sbb
sti
inc
test
push
rol
ss
mov
rcl
mov
adc
mov
or
shr
dec
inc
jmp
cmp
push
inc
and
repnz
pop
push
fist
add
jne
sub
mov
ret
xor
fldcw
jl
xchg
adc
inc
je
add
ds
(bad)
mov
arpl
mov
adc
cmp
inc
mov
push
sub
(bad)
lea
adc
add
test
lods
add
jmp
movs
mov
sbb
lea
pop
rcl
lods
mov
mov
mov
add
icebp
or
sbb
nop
inc
sbb
and
mov
ficomp
icebp
xor
push
cdq
adc
hlt
pop
adc
idiv
aas
fisttp
aas
mov
or
cmp
pop
out
push
mov
mov
xor
or
test
stc
jl
js
mov
dec
les
out
retf
aaa
fild
(bad)
jl
ret
je
mov
hlt
ins
sbb
inc
add
jmp
sbb
push
xchg
add
imul
pop
and
mov
xchg
out
mov
sub
ror
xchg
xchg
cmp
lods
out
mov
in
push
test
add
cmp
into
es
mov
inc
mov
mov
mov
mov
(bad)
lods
mov
and
(bad)
sbb
sbb
add
inc
inc
add
add
dec
cs
out
adc
adc
fmul
jbe
sbb
jg
rcr
dec
cmp
ins
xor
pusha
sbb
adc
and
loopne
leave
xor
mov
inc
xchg
fnstsw
cmp
cmp
aam
push
inc
inc
dec
sub
inc
movs
pop
fldcw
std
call
cmp
adc
nop
dec
scas
imul
jns
xchg
leave
ret
adc
push
fs
and
pop
cmp
fild
ror
mov
mov
and
xor
mov
cmp
xchg
mov
dec
pop
leave
stos
pusha
stos
pop
push
mov
inc
cdq
stc
jae
gs
mov
rcl
inc
mov
add
arpl
sub
sub
sbb
cmp
ins
push
adc
adc
in
mov
mov
dec
add
lock
mov
add
sar
push
cmp
xor
pop
cwde
pop
push
jp
pop
pusha
dec
mov
or
and
je
mov
pop
fs
dec
pop
add
mov
sbb
mov
lahf
inc
mov
popa
dec
les
pop
dec
push
call
xor
div
push
push
dec
mov
in
clc
inc
push
mov
inc
jb
loopne
sbb
add
push
sub
push
inc
cld
inc
test
sbb
fistp
sbb
cld
pop
in
jno
inc
push
or
lea
add
mov
popa
mov
pop
je
adc
addr16
test
ds
hlt
dec
push
or
sub
mov
push
jmp
and
sub
aam
enter
aaa
or
rol
cld
inc
mov
fisttp
xor
push
mov
popa
test
ja
clc
sub
ja
push
add
xor
cmps
retf
mov
jecxz
adc
aad
push
lods
js
jo
xchg
push
xor
push
xor
pusha
sub
(bad)
xor
sbb
dec
cwde
xchg
ds
fdivp
mov
push
pop
test
pop
pop
dec
rcl
sbb
adc
xchg
push
adc
jmp
xor
jmp
sysret
add
add
mov
dec
jo
out
push
pop
je
jmp
shl
pop
ret
inc
das
dec
shr
je
loop
xchg
rcl
ins
call
dec
xchg
pop
push
cdq
push
sub
xchg
or
cmp
aam
inc
in
xchg
pop
lock
lock
fadd
call
mov
mov
or
jae
jmp
dec
rol
pop
cmp
push
sub
push
shld
adc
sub
jo
inc
sti
stos
jnp
sbb
inc
sub
push
adc
leave
inc
jns
lea
fadd
mov
dec
ins
adc
pushf
add
cdq
adc
fidiv
mov
push
retf
inc
jmp
cmp
pusha
ror
push
pop
add
scas
add
cld
xor
leave
inc
sbb
dec
pop
push
(bad)
push
or
push
lock
pop
mov
adc
lock
daa
fisubr
(bad)
outs
mov
loop
popa
pop
inc
pop
push
sbb
push
adc
popf
sub
fsub
or
add
sub
cmp
add
lods
loopne
and
out
shl
mov
push
fs
or
ret
mov
(bad)
jae
pop
dec
shl
or
sub
inc
and
sbb
jo
adc
or
ds
xor
in
neg
inc
add
or
stc
or
rcr
in
bound
pop
adc
xchg
js
je
mov
shl
adc
or
xchg
mov
add
adc
dec
cli
ret
fcomp
movhps
fdiv
int3
(bad)
mov
aas
and
ret
jecxz
inc
adc
add
pop
inc
cli
ficom
adc
xor
mov
or
lock
mov
mov
adc
pushf
mov
ret
cmc
stos
cld
mov
out
add
mov
fnstcw
sbb
gs
add
inc
je
sar
cwde
mov
pusha
(bad)
mov
call
jge
mov
and
push
or
jl
test
es
inc
loopne
and
dec
inc
cmp
mov
cmp
cmc
sbb
pop
hlt
xor
imul
add
adc
jne
cmp
sahf
and
inc
ds
adc
popa
sti
and
mov
fcom
jmp
dec
add
add
mov
adc
nop
popa
mov
sub
xor
out
push
or
leave
out
jmp
add
std
or
in
hlt
add
ror
loopne
das
mov
in
adc
and
add
iret
cs
shl
sbb
rcl
iret
stos
pop
ret
push
xlat
psignd
fiadd
inc
xor
test
cmp
sbb
add
cmp
mov
test
sbb
in
pop
push
call
mov
jo
adc
mov
std
(bad)
jmp
mov
jge
lea
lock
sub
mov
scas
mov
aaa
imul
fcmovnbe
nop
add
hlt
std
and
adc
mov
mov
add
add
xchg
sbb
sbb
sbb
inc
xchg
mov
inc
int
lds
retf
add
pop
xchg
dec
add
outs
das
sub
fisttp
cmp
cmp
fisttp
push
sub
mov
sbb
lock
sbb
pop
cmp
push
daa
repnz
adc
mov
pop
add
enter
test
out
rcr
test
xchg
js
cli
add
push
sbb
pop
sbb
inc
ss
push
jo
in
fidiv
rcr
shl
cmps
hlt
dec
xchg
in
aad
std
xor
leave
aas
repz
cmp
xor
and
rcr
cmp
inc
or
push
pop
mov
cli
call
xlat
and
retf
fsubr
pop
hlt
sub
sub
lea
pop
fcomp
add
and
xor
rcr
mov
popf
mov
dec
and
jge
dec
or
or
cmp
and
mov
mov
mov
sbb
loope
add
ja
fst
cmp
test
cmp
scas
mov
push
push
push
aas
mov
movntq
out
dec
dec
mov
neg
call
push
and
add
inc
add
imul
or
mov
xor
add
add
ja
or
or
jmp
repz
xor
clc
xor
dec
sub
sahf
jmp
push
mov
mov
clc
daa
mov
ror
cmp
sete
mov
cmps
inc
mov
jle
sub
test
daa
inc
cld
sti
out
inc
aad
jo
and
call
sbb
inc
test
das
movzx
push
jl
inc
mov
cs
xchg
js
adc
add
mov
in
jnp
(bad)
dec
jne
jmp
pop
cmp
inc
or
add
inc
cmp
rcl
and
adc
cmp
add
fadd
not
xchg
push
les
lock
aaa
mov
(bad)
call
add
scas
gs
mov
mov
dec
mov
sar
mov
dec
push
sub
mov
dec
adc
dec
add
push
lea
jle
rcl
mov
sbb
data16
addr16
sub
stc
push
in
jp
xor
in
sbb
inc
xlat
pop
sub
cmp
dec
or
lea
cmps
or
sub
outs
gs
rol
mov
es
jge
push
sub
cmp
add
jne
mov
push
jmp
sbb
push
cmp
arpl
inc
dec
cmp
xor
and
(bad)
mov
aas
aam
or
sbb
cmp
push
inc
mov
xor
test
addr16
cmp
jo
lock
cmps
xchg
xchg
jecxz
jne
sbb
xor
das
sbb
mov
not
mov
sub
mov
xor
mov
mov
or
mov
test
cmp
cmp
retf
dec
mov
add
mov
pop
imul
add
and
push
pop
rol
sub
push
adc
inc
and
cmp
outs
or
jmp
test
aam
js
push
sub
cwde
fiadd
in
xor
pusha
adc
dec
dec
mov
test
mov
mov
jbe
rol
pop
jl
cmp
push
adc
add
or
(bad)
fcomp
push
inc
xor
and
xchg
repz
aad
add
mov
out
or
push
loopne
loopne
pusha
inc
mov
xor
test
imul
push
(bad)
xchg
jno
lock
and
aaa
or
nop
add
sbb
rol
add
enter
outs
clc
sub
xchg
push
add
sub
aaa
and
test
test
repz
mov
mov
add
sbb
jno
add
xchg
cmps
mov
push
push
xchg
call
and
jg
sbb
cmp
cmp
jg
mov
inc
jl
adc
pop
and
xchg
and
inc
inc
and
jmp
pop
add
xor
ret
sub
nop
mov
adc
push
js
mov
add
dec
add
cmp
or
je
and
ss
ins
dec
pushf
sub
cmp
add
sub
mov
pusha
lods
dec
adc
xchg
or
cmp
mov
mov
ret
test
inc
mov
dec
jb
repz
popf
xor
aam
psrld
inc
cmp
icebp
xchg
cmp
lods
pop
xchg
add
xchg
aaa
clc
mov
add
jmp
or
gs
sub
shl
or
push
adc
(bad)
mov
div
add
je
lods
xor
iret
sbb
add
jge
shr
push
outs
imul
icebp
lea
inc
stos
jno
(bad)
int3
jno
test
push
or
sbb
test
call
fcom
or
loopne
pop
push
mov
outs
outs
cmp
aaa
cmp
inc
movs
call
inc
inc
movs
mov
(bad)
fadd
sahf
adc
(bad)
pop
and
cmc
pusha
mov
and
jno
call
mov
jo
bound
ds
out
pop
inc
or
add
test
fadd
sahf
(bad)
test
mov
sbb
inc
pop
in
jg
inc
cmp
je
mov
or
jnp
test
es
pop
iret
cmps
push
out
adc
mov
mov
add
inc
hlt
xlat
mov
icebp
ret
aas
test
jae
push
sbb
xchg
jmp
push
adc
mov
xchg
mov
jle
xchg
ret
or
scas
push
mov
imul
fcom
push
call
push
or
add
ret
adc
push
mov
inc
in
pop
(bad)
push
fcmovnbe
cmp
or
outs
lea
mov
add
jp
cmp
mov
xor
add
pusha
jo
push
fistp
xor
add
pop
mov
or
dec
and
inc
pusha
mov
adc
lock
add
rcr
outs
xchg
cld
fild
fmul
adc
inc
fmul
xor
hlt
pusha
shl
(bad)
fadd
data16
imul
and
fisub
fstp
adc
fmul
sbb
aam
fsubr
sub
xor
cld
and
aam
popa
mov
mov
loop
pop
shl
call
xchg
cmps
pop
in
jo
loopne
in
xchg
icebp
push
pop
call
inc
pop
repz
inc
cs
les
gs
mov
pop
adc
sbb
cs
mov
int3
fld
gs
add
add
(bad)
sbb
fisub
push
int3
jns
cmps
in
inc
pusha
pop
push
or
popf
out
in
inc
jnp
wbinvd
xor
pop
push
fwait
inc
push
dec
pop
and
addr16
push
arpl
adc
outs
fwait
sbb
lods
pop
sub
ror
pop
ins
pop
pusha
push
dec
jg
xor
or
add
cld
dec
mov
loop
mov
or
pop
sbb
iret
mov
sub
repz
pop
sub
jl
pop
pusha
sahf
out
adc
test
sbb
jae
adc
mov
mov
in
mov
mov
sbb
cmp
bound
pop
dec
pop
in
add
cmp
pop
mov
add
add
mov
ret
sub
ret
and
inc
inc
sbb
jne
mov
mov
push
add
aas
pop
sub
aam
mov
jne
daa
rcr
(bad)
jmp
mov
inc
xor
jo
pop
push
and
bound
adc
dec
cwde
lea
sahf
out
mov
dec
dec
stos
test
jns
dec
cmp
sub
jb
mov
pusha
or
cwde
inc
add
mov
lods
mov
ins
scas
das
push
shl
jne
in
cmovno
and
repnz
inc
mov
or
pop
xor
adc
ds
in
loopne
and
push
imul
(bad)
mov
dec
add
sbb
sub
data16
cmp
sbb
sub
xor
enter
loopne
xor
lods
add
out
mov
mov
mov
pop
sub
xor
icebp
call
bound
mov
fadd
dec
fdivr
lea
sub
push
jp
push
shr
imul
arpl
pop
jo
sub
stc
or
lahf
inc
sbb
or
adc
inc
inc
fadd
push
and
inc
or
sbb
xchg
sahf
ja
mov
mov
push
sub
stos
inc
fimul
jo
xchg
add
and
push
lock
sbb
cwde
dec
in
loopne
sub
dec
or
or
push
jmp
mov
popa
add
mov
add
imul
or
adc
add
mov
add
sbb
or
cmp
loope
dec
mov
add
add
mov
jnp
imul
inc
or
ficom
mov
inc
test
sub
xchg
pop
push
add
and
fldln2
mov
sub
inc
pop
or
or
lds
and
inc
mov
repnz
pop
enter
sbb
test
pop
fisubr
cs
es
mov
in
and
js
mov
ja
dec
pop
or
xchg
arpl
push
jle
enter
xchg
(bad)
loope
add
sub
fmul
sbb
push
mov
xor
jo
aaa
adc
adc
shl
out
ja
pop
es
or
or
lods
cmp
fbstp
jae
xor
push
inc
aam
pop
adc
pop
xor
or
inc
pop
mov
and
add
add
pop
add
sub
in
pop
fldcw
push
(bad)
sti
mov
repnz
inc
cmp
repz
js
fisubr
xlat
pop
data16
inc
bound
jmp
jnp
jno
add
jmp
das
jl
sub
add
test
sbb
sub
sub
and
sub
or
mov
push
push
out
and
cmp
cli
ins
mov
frstor
int3
test
leave
mov
sti
add
dec
rcl
cli
mov
test
xor
retf
push
and
jg
aam
nop
add
lea
pop
and
fnsetpm(287
out
fs
pop
add
or
push
cmp
mov
inc
aad
sub
test
movs
xor
in
(bad)
in
jle
jl
cli
mov
(bad)
lock
inc
scas
xor
push
clc
jmp
dec
push
and
dec
sub
sbb
mov
mov
inc
or
pusha
push
pusha
add
sbb
popa
add
inc
addr16
mov
xchg
movs
push
sbb
in
and
das
sub
leave
or
add
(bad)
clc
xchg
add
fidiv
xchg
mov
add
inc
sbb
sbb
push
bound
push
pop
fild
inc
add
sbb
add
sbb
es
or
popa
dec
in
or
adc
or
push
sar
mov
fadd
adc
lock
xchg
sub
push
and
in
sahf
retf
sub
cs
fs
(bad)
pop
adc
sub
or
dec
xor
sub
sub
jbe
pop
or
imul
ficom
push
push
sbb
sbb
sbb
out
sti
in
cmp
xor
inc
fld
icebp
ja
sar
cmp
xchg
neg
mov
sti
cmp
sbb
cmp
inc
fs
mov
cs
dec
cs
adc
fs
push
or
sub
adc
and
push
arpl
sub
bswap
sbb
test
xor
test
inc
fadd
lods
cmp
xor
cmps
stos
cwde
sbb
jb
and
rcl
add
nop
dec
mov
pusha
and
inc
ret
ins
cmp
dec
xchg
add
aas
adc
mov
cmps
cmps
lahf
jl
inc
out
ja
inc
push
push
jne
retf
xchg
jmp
xor
jmp
push
cli
cmc
push
cmp
add
mov
arpl
xchg
push
imul
loope
loopne
cld
mov
bswap
mov
dec
clc
clc
mov
pusha
pop
cvttps2pi
add
xor
jmp
test
mov
inc
add
addr16
sar
aam
xor
sbb
loope
arpl
push
add
add
jo
xor
ja
sbb
sub
retf
fnstsw
adc
pop
push
ss
dec
lock
add
popa
popf
mov
cmps
sbb
adc
dec
enter
pop
(bad)
(bad)
(bad)
jge
xchg
push
add
push
dec
cmp
pop
dec
outs
fs
inc
ins
ins
outs
arpl
or
fild
imul
xor
outs
lahf
add
add
fild
add
jns
mov
aaa
sbb
mov
movs
adc
mov
aaa
push
dec
adc
fild
and
js
shr
cmp
xor
add
or
scas
xchg
pop
ficomp
dec
cld
cmp
inc
sbb
inc
adc
movs
jge
ss
cmp
fisttp
push
shl
mov
out
movs
push
dec
fsubr
cmp
cld
jb
inc
fsub
jae
cmp
jle
mov
add
push
inc
loopne
mov
int3
pop
inc
jmp
adc
adc
bound
les
out
cld
loopne
add
xchg
dec
add
add
cld
add
sbb
adc
rol
jmp
sar
shl
mov
ja
and
dec
add
fild
add
add
or
pop
es
rol
xchg
aam
fdiv
sub
jmp
or
or
int3
std
pop
test
or
adc
inc
ins
jge
outs
cmp
ja
and
xchg
fisub
(bad)
(bad)
imul
pop
dec
and
mov
rol
adc
dec
and
dec
mov
xor
fsub
outs
in
add
push
mov
jge
inc
add
add
dec
loopne
and
sub
sub
test
std
ja
mov
dec
retf
inc
aaa
add
adc
and
push
mov
or
sub
dec
sub
adc
pop
data16
jbe
ds
test
imul
ror
cmp
dec
dec
add
(bad)
pop
imul
aam
add
or
cdq
(bad)
repnz
shl
mov
enterw
xor
cwde
push
ret
retf
test
inc
imul
in
sub
push
add
sub
push
xlat
add
mov
xchg
clc
pop
pop
add
cmp
adc
pop
mov
or
retf
in
mov
mov
mov
mov
mov
pop
mov
or
retf
in
mov
mov
push
push
pop
pop
xchg
retf
in
pusha
fs
pop
cs
jl
cs
retf
in
mov
pop
cwde
pushf
mov
retf
test
mov
mov
mov
pop
cs
int3
rcl
fcomp
xchg
retf
in
loopne
call
pop
cs
clc
cld
add
or
adc
mov
and
xchg
retf
in
sub
xor
in
mov
dec
pop
cs
retf
dec
push
push
pop
pop
retf
in
mov
mov
je
jl
xchg
retf
in
test
mov
mov
in
lods
mov
mov
mov
cs
retf
int3
rcl
fcomp
cdq
loopne
mov
mov
retf
in
mov
mov
mov
mov
mov
cs
retf
in
mov
mov
in
mov
mov
cld
xchg
retf
mov
or
mov
mov
jb
pop
mov
mov
jb
jl
mov
in
lock
in
retf
in
cld
add
xchg
retf
mov
mov
mov
in
mov
mov
mov
mov
pop
mov
or
in
mov
mov
push
retf
in
js
add
nop
xchg
cwde
cs
retf
in
mov
jb
pop
mov
mov
retf
rol
int3
ror
in
mov
divps
xchg
in
cld
add
pop
cs
xchg
retf
in
mov
jb
pop
mov
cs
retf
mov
retf
in
mov
in
stc
xchg
mov
retf
(bad)
xchg
retf
clc
cld
add
cs
mov
xchg
retf
in
mov
jb
pop
cs
xchg
retf
in
mov
jb
pop
mov
cs
retf
mov
mov
mov
jb
pop
mov
xchg
retf
pushf
mov
in
mov
mov
(bad)
enter
retf
in
aam
fsub
in
mov
lock
in
retf
in
cld
add
retf
mov
retf
in
mov
mov
mov
retf
in
mov
jb
pop
cs
xchg
retf
in
mov
jb
pop
mov
cs
retf
mov
retf
in
mov
mov
mov
retf
in
mov
jb
pop
cs
xchg
retf
in
mov
jbe
pop
mov
int3
pop
pop
cs
retf
mov
retf
in
mov
in
sub
call
retf
lock
clc
cld
add
out
mov
in
mov
jb
pop
cs
pop
mov
inc
dec
pushf
retf
in
dec
push
push
pop
retf
in
sbb
test
mov
mov
xchg
cwde
pushf
mov
fidiv
sldt
jg
add
ins
popa
fdivr
outs
jmp
and
sub
sub
jb
addr16
xor
and
cmp
rcr
jo
mov
call
add
pop
mov
push
or
fst
aam
dec
adc
dec
dec
add
push
push
enter
cld
push
mov
in
mov
std
dec
inc
mov
xor
adc
dec
push
and
cld
mov
int3
(bad)
cld
push
inc
aas
or
mov
add
out
out
jbe
int
aam
add
les
add
mov
add
push
mov
inc
adc
dec
add
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
adc
cmp
pop
and
dec
push
jnp
or
fcom
adc
fbstp
push
push
dec
dec
cmp
push
dec
dec
dec
or
add
add
add
and
push
push
inc
push
push
push
dec
inc
dec
dec
inc
and
imul
add
inc
push
inc
dec
pop
dec
int
jg
push
inc
pop
cs
outs
imul
inc
pop
add
inc
dec
push
pop
and
jle
fucomip
cs
add
dec
mov
push
dec
dec
mov
jg
push
push
push
inc
inc
dec
and
push
inc
inc
test
push
cmp
fild
xor
mov
inc
push
push
pop
inc
rcl
call
data16
dec
push
push
dec
pop
inc
dec
dec
push
dec
dec
idiv
pop
mov
es
fs
popa
jb
add
arpl
cmp
(bad)
(bad)
inc
inc
push
inc
pop
dec
imul
je
dec
inc
push
and
popa
ins
movd
jmp
outs
jb
and
je
mov
push
pop
jbe
dec
outs
pop
cmp
ins
xor
add
das
clc
imul
jb
add
ins
add
xchg
jl
outs
outs
add
inc
dec
push
sub
sub
sbb
push
dec
push
sbb
pop
jmp
in
outs
and
arpl
outs
ja
ins
outs
popa
(bad)
(bad)
mov
pop
arpl
arpl
popa
inc
das
push
mov
or
dec
push
popa
jne
or
imul
jne
sub
outs
inc
outs
ins
fs
dec
popa
imul
push
fs
gs
ins
jae
jae
xlat
call
jae
mov
xchg
addr16
dec
and
or
imul
mov
pop
inc
outs
jp
je
data16
jge
push
imul
imul
inc
jb
addr16
adc
int3
pop
ret
fnstsw
inc
sbb
bound
cmp
loope
ror
aaa
and
add
ins
cvtpi2ps
sbb
popa
bound
sbb
jb
fisubr
je
and
mov
push
cld
adc
or
and
cmp
pop
jg
lds
pusha
and
js
sub
mov
bound
imul
pop
mov
jne
out
or
shr
add
or
cs
ss
inc
and
das
and
dec
push
inc
fstp
addr16
and
or
sub
xor
xor
mov
ins
lods
popa
or
rol
ins
es
pop
push
add
outs
push
and
pop
jl
inc
cmp
mov
fdiv
inc
gs
popa
push
or
push
scas
(bad)
jmp
ds
dec
leave
loop
add
add
(bad)
inc
std
mov
mov
push
add
adc
test
jmp
dec
add
out
test
mov
movs
inc
or
jb
push
and
jmp
pop
mov
stos
fs
adc
jns
outs
sti
(bad)
call
jb
mov
pop
aad
jbe
xor
add
mov
mov
push
inc
inc
and
inc
repz
adc
mov
add
shr
movhps
idiv
ss
ds
jb
cmp
xor
pop
mov
inc
push
inc
add
fild
mov
sub
pop
pop
hlt
jne
js
cld
pop
bswap
in
mov
lea
loopne
sub
fcomp
xlat
add
rol
in
dec
mov
in
pop
add
add
fwait
pushf
pop
enter
pop
mov
mov
inc
pop
fisubr
adc
js
push
dec
addr16
scas
pop
enter
in
(bad)
(bad)
pop
loopne
add
pop
lahf
dec
cs
sbb
cmp
xchg
popa
imul
lds
fcmovnb
pop
int3
and
pop
mov
fstp
pop
mov
mov
pop
loopne
nop
or
mov
outs
xor
pop
in
js
je
jo
js
xlat
cmps
dec
xchg
pop
das
mov
pop
shr
das
loopne
aaa
lock
lods
pop
and
das
jbe
lds
pop
popf
je
lods
pop
inc
inc
add
push
pusha
ja
add
jo
add
add
dec
inc
add
mov
sub
les
daa
xor
pop
fiadd
in
fdiv
fdiv
in
cs
xchg
or
nop
dec
cs
mov
pop
mov
lods
aaa
test
jbe
inc
movs
mov
mov
cs
xchg
pop
nop
dec
fsubr
mov
test
xlat
xor
idiv
(bad)
sbb
lock
mov
(bad)
adc
xchg
cmp
das
or
cmps
das
sbb
mov
push
fs
pushf
mov
aam
or
leave
and
dec
and
je
push
inc
fistp
sbb
jl
jecxz
ror
iret
add
ja
out
shl
dec
jbe
and
adc
cmp
dec
add
xchg
sub
addr16
xchg
loope
lods
cmps
push
xchg
ja
inc
ror
pusha
dec
mov
add
addr16
movs
inc
sub
push
push
lods
xor
push
unpcklps
mov
push
call
jbe
inc
xor
iret
inc
repnz
push
les
dec
add
fcmovnu
test
jns
das
shl
push
push
cmp
(bad)
mov
idiv
and
lahf
push
movs
mov
fs
lds
outs
pop
fnstenv
push
cmps
es
inc
add
mov
adc
fwait
ins
sti
mov
and
mov
call
fcmovnbe
ins
pop
ins
js
mov
fcomi
in
mov
ins
stos
ss
dec
loopne
add
pusha
stos
push
sub
sti
call
xchg
push
shl
mov
mov
clc
pop
ins
lahf
loopne
or
push
js
dec
push
push
dec
cdq
fdiv
push
adc
ss
ror
ret
push
mov
test
scas
xor
add
fiadd
push
lock
(bad)
mov
push
enter
push
lock
call
ins
mov
push
ins
mov
inc
outs
push
int3
(bad)
js
xlat
ins
push
pusha
loope
out
or
cmp
mov
sbb
push
retf
inc
jo
ins
imul
stc
aas
or
clc
ins
cmp
jmp
add
or
outs
gs
pop
cld
add
inc
push
in
test
std
bound
outs
ja
xor
dec
adc
inc
clc
das
push
imul
fisttp
or
adc
outs
sub
aaa
or
adc
js
xor
push
mov
pop
mov
and
jb
inc
addr16
or
cmp
push
stc
inc
outs
arpl
jo
outs
out
dec
jl
add
js
retf
inc
adc
rol
dec
push
aad
outs
outs
or
jbe
adc
cmp
das
inc
jb
mov
adc
add
and
je
jns
and
mov
or
and
dec
add
xchg
and
inc
push
inc
rol
push
push
push
dec
inc
inc
push
dec
inc
pop
push
or
pop
inc
inc
dec
dec
inc
push
pop
push
in
adc
and
jbe
jl
mov
adc
lock
outs
sub
or
push
movs
adc
or
and
mov
dec
dec
dec
sub
out
gs
push
cmp
push
jmp
sub
ror
push
jo
loop
hlt
(bad)
xchg
repnz
nop
nop
inc
and
pushf
pop
imul
inc
nop
jl
jecxz
add
inc
fisttp
in
sbb
cwde
sahf
cs
inc
neg
sbb
aas
std
push
push
push
hlt
push
inc
test
sti
mov
ss
xor
inc
push
push
or
adc
int3
sbb
sahf
or
jb
push
inc
jae
fdiv
inc
pop
add
push
dec
pop
das
xor
and
push
dec
cwde
adc
pop
push
loopne
adc
push
mov
push
mov
jle
test
out
inc
dec
inc
dec
add
push
nop
add
rcr
pop
add
aam
js
in
push
pusha
cmp
jb
pop
adc
or
ins
push
or
scas
sbb
je
inc
jb
or
inc
and
add
ins
mov
cmp
push
push
and
js
and
test
push
mov
jbe
pop
pop
mov
inc
(bad)
adc
pop
push
dec
dec
or
test
mov
loopne
pop
add
es
loopne
inc
inc
outs
daa
inc
push
in
inc
pop
pop
adc
inc
inc
mov
cmova
cld
cmc
push
clc
not
inc
mov
outs
xchg
jae
in
lock
push
jb
clc
ds
add
aad
or
pop
sbb
inc
inc
ror
mov
dec
aam
push
inc
inc
lock
xchg
push
nop
sub
dec
cmp
jo
js
fild
mov
pop
lods
mov
ins
fild
clc
push
xchg
lods
push
nop
scas
sub
ja
xchg
inc
js
mov
mov
aam
push
imul
in
mov
shl
pusha
das
cmp
retf
sbb
xor
je
test
jl
jo
inc
dec
xor
xchg
fmulp
push
push
ds
dec
dec
dec
xchg
jne
repnz
pop
dec
or
das
fmul
leave
lds
aas
jle
movs
inc
pop
fcmovne
add
inc
inc
jo
inc
adc
movs
shl
in
test
xor
push
hlt
fild
inc
inc
push
jns
pop
fdiv
xchg
push
adc
adc
push
lock
data16
push
dec
(bad)
fcomp
sahf
test
pushf
push
jbe
push
push
mov
add
jg
lock
enter
ds
add
pushf
or
or
je
in
in
push
xchg
loopne
inc
add
aaa
ss
pop
push
xor
xor
xchg
dec
xchg
pop
enter
test
mov
hlt
fsub
cdq
inc
pop
sub
cld
adc
or
fs
pushf
jbe
fisub
fimul
and
into
push
xor
and
inc
dec
je
xchg
scas
ins
inc
addr16
inc
lfs
lahf
mov
dec
mov
add
push
outs
and
or
cld
inc
push
mov
(bad)
and
dec
out
xchg
fisub
dec
add
jg
push
dec
test
stos
stos
and
or
adc
pop
stos
sub
dec
dec
dec
inc
inc
pop
das
sub
inc
pop
je
mov
out
push
dec
or
jno
pop
pop
aam
and
xchg
fcomp
xchg
jnp
repnz
mov
or
inc
or
rcl
inc
mov
jecxz
imul
pop
ss
inc
push
push
push
movs
fs
neg
xchg
dec
pop
mov
mov
fcomp
mov
dec
out
mov
inc
pop
sbb
push
adc
stos
pop
adc
pop
aam
dec
push
push
sub
xor
and
and
shl
jno
gs
push
jbe
or
popa
bound
jb
jo
jae
outs
and
cmp
scas
inc
dec
lea
mov
test
add
or
sub
dec
les
xor
pop
jg
push
add
movs
out
in
mov
iret
pop
or
mov
daa
push
(bad)
xor
(bad)
jb
loopne
enter
pop
call
clc
pop
add
add
add
mov
pop
lea
add
pop
pop
pop
push
inc
jg
leave
jo
adc
icebp
imul
fs
cld
gs
xchg
test
xchg
dec
push
and
repnz
shl
(bad)
mov
sub
into
push
cmp
scas
fiadd
aas
cwde
inc
mov
add
or
ins
imul
add
sub
adc
add
outs
jmp
outs
data16
or
jo
imul
fmul
push
sub
and
push
cli
jae
outs
push
gs
fs
push
xor
add
jp
ins
sar
pop
pop
imul
push
stos
add
das
out
push
mov
das
xor
dec
inc
xor
retf
xor
arpl
imul
dec
and
fs
pop
bound
push
repnz
xor
int3
sub
or
popa
sbb
rcl
add
dec
jns
into
xor
jns
sub
aaa
fmul
adc
inc
pop
dec
push
push
dec
inc
dec
inc
dec
dec
push
pop
add
fwait
(bad)
pop
dec
loope
and
dec
dec
mov
inc
outs
aaa
hlt
sti
and
popa
jae
outs
dec
arpl
imul
mov
jmp
add
adc
adc
push
and
rcl
mov
and
lock
add
loopne
iret
bound
mov
scas
cmps
stos
cwde
add
lahf
add
add
pop
jg
add
ja
mov
adc
adc
sub
in
cmp
mov
xchg
dec
cs
cs
and
dec
aaa
dec
cs
cmp
mov
xor
and
and
fidiv
sbb
adc
dec
cs
das
mov
dec
mov
(bad)
mov
in
in
call
in
(bad)
jb
fcmovb
(bad)
aaa
rcl
int3
leave
and
shl
mov
pop
jb
mov
test
popaw
mov
cmps
fisttp
pusha
pop
add
call
pop
nop
leave
dec
cs
inc
add
xor
pushf
jnp
xchg
pop
dec
xor
or
rol
pop
shr
add
push
lock
pop
pop
jle
je
inc
add
(bad)
adc
inc
pop
test
clc
push
clc
ds
add
cmp
inc
out
clc
push
adc
dec
data16
scas
jns
mov
xchg
push
repnz
xchg
xchg
xchg
xchg
adc
out
inc
dec
addr16
stos
pop
jo
xchg
add
mov
push
mov
ret
jae
sub
stos
and
or
xor
and
hlt
outs
arpl
popa
ins
sbb
cs
ret
xor
ret
in
xchg
and
xor
popa
fs
ins
push
add
in
and
push
jae
stos
xor
push
mov
push
sub
arpl
jnp
inc
jmp
xor
ja
gs
or
xchg
mov
pop
inc
jne
or
inc
mov
test
sbb
shl
and
loope
ret
pop
jnp
aaa
xor
inc
xor
xor
xor
ss
lock
push
xor
xor
inc
xor
xor
inc
jge
imul
or
jne
(bad)
fadd
bound
ss
sbb
jne
add
adc
ja
scas
mov
jne
sub
ja
test
pop
outs
mov
ja
push
fadd
outs
push
jno
adc
outs
mov
mov
add
and
ffree
stos
mov
popa
add
add
lods
dec
nop
popf
xor
pop
add
leave
int3
add
xchg
mov
mov
les
test
pop
xor
fs
jo
call
cmp
inc
mov
pop
mov
adc
lds
pop
mov
dec
test
push
pop
push
push
add
push
xchg
test
dec
adc
pop
add
adc
les
add
add
cmp
mov
pop
movs
add
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
push
push
and
nop
and
aas
add
cmp
dec
sahf
add
add
gs
add
std
pop
and
jo
cmp
popa
xchg
mov
cwde
in
js
ja
sub
jmp
js
or
fs
stos
push
stos
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
inc
push
and
sti
cs
jp
adc
sub
push
aad
mov
add
inc
push
jae
out
mov
(bad)
int
pop
loopne
xchg
xor
in
xchg
fisttp
pop
gs
ds
aas
(bad)
(bad)
sbb
cmp
cmp
cmp
sbb
add
add
add
push
pop
or
jmp
dec
or
adc
adc
push
pop
sbb
imul
sbb
push
pop
and
and
xor
cli
jmp
sub
sub
cs
xor
add
(bad)
jg
or
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
icebp
(bad)
(bad)
call
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
jg
add
fidivr
sub
add
je
imul
das
and
and
outs
(bad)
push
dec
mov
sub
sub
cmp
push
sti
sbb
push
imul
scas
clc
out
pop
add
je
jo
cs
add
stc
dec
pop
add
in
(bad)
in
ins
outs
addr16
inc
push
dec
inc
dec
xor
cs
dec
dec
cmp
outs
ja
xor
retf
adc
or
add
dec
and
jmp
add
jae
arpl
movs
mov
retf
ficom
cmp
pop
add
aaa
push
mov
sbb
jbe
cmp
xor
daa
xor
and
arpl
mov
push
adc
xor
dec
push
xor
and
cs
fs
popa
pop
sub
or
jge
cmp
and
das
cmp
ficom
pop
xlat
mov
sbb
rol
call
inc
gs
loop
inc
xchg
and
xor
cmp
lock
pop
jae
pop
add
ss
ret
pop
fsubr
test
jmp
(bad)
and
and
push
inc
lds
outs
jp
ins
sbb
dec
jnp
dec
(bad)
jb
dec
arpl
adc
retf
pop
inc
or
in
inc
ins
nop
mov
pop
push
mov
dec
adc
dec
rol
aas
cmp
and
fcomp
in
and
outs
inc
jmp
shr
cmp
pop
or
cmp
and
popa
add
push
js
outs
and
jae
jb
push
popa
inc
cmp
inc
and
(bad)
jo
pop
sub
mov
or
fimul
ins
and
rol
arpl
mov
ins
add
xlat
aaa
add
jle
mov
push
mov
js
sub
or
ins
jb
add
add
sub
add
mov
sbb
dec
inc
add
xchg
inc
add
xor
rcl
cwde
pop
dec
inc
push
add
pusha
xor
adc
addr16
jecxz
ja
or
call
add
shl
pop
adc
out
xchg
pop
push
das
pop
mov
mov
pop
add
add
inc
cmp
test
enter
bound
pop
enter
and
sbb
dec
leave
inc
leave
inc
fs
dec
mov
dec
leave
inc
leave
inc
lods
in
dec
shr
dec
rol
hlt
in
dec
sbb
dec
stos
or
inc
push
inc
add
pusha
fist
lahf
stos
jbe
inc
test
test
xchg
out
mov
test
aad
arpl
or
mov
add
inc
pop
cli
jb
add
jg
repz
add
arpl
arpl
imul
push
fs
data16
xor
popa
xor
bound
xor
es
(bad)
(bad)
jg
popa
js
push
inc
xor
inc
ja
push
push
js
ins
pop
xor
push
push
js
inc
push
in
(bad)
(bad)
in
pop
aaa
popa
push
dec
pop
push
outs
dec
inc
push
je
inc
ins
xor
push
imul
ja
ss
xor
fs
inc
push
je
inc
fs
jae
(bad)
in
das
mov
outs
gs
xor
gs
jo
push
push
fs
mov
bound
outs
data16
dec
pop
xor
inc
inc
push
bound
inc
fs
js
mov
inc
ins
je
clc
mov
pop
inc
inc
push
imul
dec
push
xor
jae
outs
xor
data16
fld
inc
ret
scas
dec
inc
arpl
inc
arpl
inc
lock
inc
inc
push
ja
push
push
push
dec
push
xor
int3
pop
push
push
inc
dec
gs
mov
adc
push
dec
inc
inc
dec
loopne
dec
inc
inc
push
bound
dec
bound
push
push
addr16
(bad)
mov
push
pop
outs
push
dec
dec
out
push
inc
push
push
push
push
xor
pop
imul
dec
dec
dec
xor
outs
jo
xor
(bad)
push
cmp
inc
gs
das
js
(bad)
je
ins
fs
inc
pusha
ss
xor
cmp
jb
loopne
ins
inc
xor
push
xor
scas
inc
inc
push
push
inc
xchg
fimul
sbb
inc
inc
inc
inc
push
fs
(bad)
(bad)
jmp
xor
jecxz
push
pop
sub
pusha
mov
xor
sub
mov
div
(bad)
(bad)
(bad)
call
retf
add
mov
push
xor
aaa
daa
xor
push
dec
jp
bsr
daa
mov
add
(bad)
(bad)
jmp
cmc
mov
clc
scas
xchg
test
rol
jb
adc
popa
repnz
(bad)
(bad)
(bad)
jmp
xchg
call
test
hlt
push
(bad)
cmp
dec
imul
(bad)
(bad)
(bad)
(bad)
out
mov
adc
in
fs
(bad)
lods
push
mov
rcl
mov
(bad)
(bad)
(bad)
jl
mov
lods
jb
ja
inc
stos
xchg
push
fsubr
das
loop
xchg
cmp
(bad)
(bad)
jns
xor
aas
xor
push
mov
mov
fldenv
data16
dec
jle
retf
cmp
fbstp
(bad)
(bad)
(bad)
call
mov
ficomp
mov
fcom
or
push
inc
shl
inc
int3
call
je
cmp
dec
mov
lods
cwde
retf
in
es
js
(bad)
(bad)
(bad)
mov
sbb
cs
cmp
test
inc
mov
add
imul
ss
clc
(bad)
(bad)
fadd
add
jae
or
ins
aad
cmc
pop
daa
dec
pushf
leave
push
jbe
push
pop
mov
sbb
(bad)
(bad)
jmp
push
xor
sahf
rcl
mov
xor
push
xlat
pop
mov
xchg
call
(bad)
(bad)
(bad)
call
imul
mov
xor
xchg
mov
sbb
ins
or
imul
cmc
(bad)
aaa
loopne
iret
(bad)
(bad)
(bad)
call
mov
push
inc
sbb
movs
aad
cmp
mov
push
fcmove
xor
add
mov
sub
outs
ins
cdq
je
test
retf
outs
mov
and
xor
es
cwde
out
(bad)
(bad)
(bad)
jmp
adc
test
int
shl
daa
sbb
ss
cli
cdq
pop
les
inc
xchg
(bad)
(bad)
(bad)
push
std
retfw
pop
mov
mov
mov
mov
pop
push
jns
push
or
(bad)
inc
test
mov
adc
pop
arpl
mov
fadd
(bad)
call
pop
aad
xchg
clc
sub
pop
(bad)
(bad)
shr
iret
xchg
int
stc
(bad)
call
in
fnstenv
push
lods
(bad)
(bad)
(bad)
dec
mov
cmp
push
in
cmp
dec
dec
sti
push
test
call
lds
and
lds
jno
cld
fsubr
(bad)
loopne
jg
(bad)
mov
inc
das
sub
aad
inc
mov
mov
inc
call
pop
sar
(bad)
(bad)
sbb
mov
cmp
in
or
fidivr
xchg
imul
(bad)
jg
nop
dec
js
int
add
js
leave
fs
sbb
int
push
adc
loopne
or
sub
jg
pop
sbb
es
jmp
cmc
lods
mov
mov
or
(bad)
(bad)
call
pop
imul
arpl
cmps
push
loope
in
mov
stos
inc
(bad)
mov
and
stos
inc
inc
jno
(bad)
in
cmp
jno
sbb
aaa
cdq
mov
loop
add
sub
push
adc
rcl
mul
loop
mov
dec
icebp
jecxz
(bad)
dec
xchg
jecxz
mov
sub
lea
out
repnz
mov
pop
cmp
je
sub
mov
inc
(bad)
or
fidiv
clc
adc
cmovne
(bad)
push
jle
xor
outs
movs
neg
icebp
movs
inc
xor
call
call
sub
jecxz
push
cdq
in
pop
mov
test
lock
(bad)
dec
loopne
sahf
inc
or
push
mov
iret
cdq
imul
out
enter
hlt
(bad)
(bad)
call
sbb
mov
push
and
inc
repnz
mov
(bad)
call
pop
xor
sbb
pop
sbb
xor
std
adc
(bad)
jmp
rol
or
dec
push
(bad)
push
ins
imul
sub
loop
push
(bad)
(bad)
(bad)
inc
enter
pushf
pop
dec
pop
mov
xor
imul
shl
loop
cmp
icebp
xchg
(bad)
mov
fs
add
aad
sbb
mov
xchg
sub
addr16
push
ffreep
adc
jle
jmp
aas
add
adc
sahf
outs
sub
(bad)
(bad)
(bad)
jg
fadd
cmp
lods
les
inc
pusha
frstor
lahf
loopne
mov
xor
sub
add
(bad)
(bad)
inc
jne
xchg
test
aas
sbb
pop
cmp
xchg
xchg
mov
push
jb
(bad)
(bad)
call
stc
bnd
lods
mov
dec
dec
out
gs
push
lahf
sub
push
add
push
push
into
xor
(bad)
dec
inc
clc
add
pop
sub
lods
shl
cmp
ja
cmp
mov
cmp
dec
ja
jns
lock
popf
xchg
dec
jae
(bad)
(bad)
(bad)
jmp
sbb
fisttp
xlat
loopne
pop
pop
mov
push
imul
movs
es
sbb
push
inc
(bad)
(bad)
(bad)
jmp
pop
jae
stos
xlat
adc
dec
or
cmp
ret
es
push
call
(bad)
inc
jno
adc
ja
mov
out
sbb
jae
(bad)
int
(bad)
clc
(bad)
(bad)
dec
xchg
(bad)
sbb
cmp
inc
xchg
mov
out
rcr
loopne
gs
push
mov
out
and
ds
mov
ret
(bad)
leave
push
sti
pushf
stos
fnstsw
inc
mov
(bad)
jmp
pop
add
(bad)
pop
popf
jle
cmp
out
mov
xor
fist
add
(bad)
push
(bad)
jmp
pop
loope
aas
mov
push
push
popf
imul
mov
ins
les
scas
push
xchg
icebp
mov
shl
inc
gs
(bad)
(bad)
jmp
lahf
cwde
sbb
retf
in
pop
ins
inc
dec
and
mov
sub
out
xlat
(bad)
jmp
out
sbb
lods
jns
add
fcmovbe
inc
mov
ins
adc
(bad)
(bad)
dec
push
sub
loop
in
push
or
jmp
(bad)
icebp
enter
sub
xchg
push
sub
aam
inc
fisubr
adc
or
(bad)
(bad)
(bad)
fdiv
sub
mov
or
stc
dec
dec
jp
sti
enter
in
pop
aad
sbb
popa
mov
mov
inc
aam
iret
mov
and
cmps
dec
inc
xor
jnp
dec
xor
dec
fidiv
je
pop
or
(bad)
call
push
xor
push
popa
dec
pop
inc
adc
sbb
push
pop
push
push
pop
add
dec
dec
push
push
sbb
or
inc
push
push
pop
add
pop
mov
push
pop
pop
or
mov
push
or
jg
sub
je
pop
jl
inc
add
(bad)
(bad)
dec
pusha
push
dec
pop
push
or
sbb
pop
dec
push
push
pop
inc
pop
push
adc
push
ud0
(bad)
call
movhps
pop
push
push
or
adc
push
push
inc
add
or
pop
pop
sbb
or
(bad)
(bad)
inc
adc
fs
pop
inc
push
inc
or
add
adc
or
push
add
sbb
(bad)
(bad)
(bad)
call
push
dec
add
sbb
pop
pop
add
adc
inc
adc
inc
pop
adc
pop
push
(bad)
(bad)
mov
and
dec
pop
pop
mov
push
pop
adc
or
dec
inc
inc
adc
(bad)
(bad)
mov
push
or
add
sbb
push
sbb
sbb
call
sbb
or
adc
mov
inc
pop
adc
pop
pop
inc
xor
ins
sti
fbld
inc
or
adc
inc
repnz
inc
jnp
outs
aaa
cld
mov
inc
or
pop
adc
push
sbb
or
sbb
sbb
dec
add
pop
pop
sbb
inc
inc
push
pop
pop
pop
push
inc
adc
push
or
pop
inc
push
dec
(bad)
(bad)
in
test
dec
pop
pop
push
add
sbb
push
push
sbb
dec
add
dec
adc
call
xor
adc
push
addr16
adc
pop
xorps
dec
xor
dec
add
inc
inc
pop
pop
sbb
sbb
push
add
mov
dec
pop
pop
inc
adc
inc
lds
ins
clc
jp
or
inc
adc
call
or
xchg
mov
or
add
pop
or
push
add
or
je
cld
jg
push
add
pop
add
add
jl
invd
xor
lock
sbb
jp
jge
loop
add
jo
(bad)
(bad)
or
pop
or
and
ja
push
add
daa
jb
and
(bad)
(bad)
jno
or
or
pop
add
add
push
or
push
jmp
jp
pop
push
add
sbb
in
jg
je
jp
pop
je
or
add
(bad)
fld
xor
or
push
ja
add
lar
inc
dec
pop
adc
ja
push
(bad)
dec
adc
push
and
or
inc
fs
pop
inc
pop
inc
or
pop
jae
mov
aaa
add
jg
push
pop
cmove
pop
push
jl
ret
pop
dec
pop
adc
push
inc
or
push
jbe
js
add
ss
push
pop
or
inc
push
add
pop
push
jp
mov
or
push
mov
add
mov
jg
je
or
add
je
push
pop
add
ins
push
push
xor
or
(bad)
adc
jb
inc
pop
pop
push
inc
jge
mov
inc
mov
or
call
call
mov
sub
rsqrtps
add
ja
ja
pop
or
mov
mov
mov
inc
pop
push
push
push
pop
jbe
inc
push
adc
adc
pop
jg
(bad)
jg
sbb
fs
push
inc
add
push
or
push
cmovno
mov
dec
push
push
push
push
adc
push
or
outs
minps
lea
ds
(bad)
adc
aaa
push
icebp
ds
call
jmp
xor
bound
xor
std
in
push
fbld
xor
pusha
cmp
ss
xor
data16
xor
(bad)
outs
mov
cmp
popa
xor
popa
cmp
cmp
aas
push
cmp
out
jg
ss
xor
xor
cmp
cmp
(bad)
div
es
imul
aas
cmp
cmc
fld
clc
jmp
cmp
ret
pusha
cmp
xor
ja
enter
mul
mov
xor
xor
addr16
(bad)
or
pushf
xor
xor
xor
xor
mov
xor
sbb
mov
and
xor
aaa
imul
(bad)
call
mov
jb
jne
mov
and
imul
fs
pop
and
(bad)
inc
jnp
sub
mov
movs
add
sbb
rcr
adc
adc
inc
mov
add
fwait
push
std
sub
rol
shl
loopne
enter
pop
or
arpl
xor
(bad)
fs
daa
addr16
pushw
call
sti
popa
xor
pusha
adc
and
repz
cmc
data16
(bad)
(bad)
jmp
ins
inc
mov
xchg
arpl
mov
add
and
sub
je
xchg
pop
inc
mov
add
call
inc
aad
jne
add
rcr
out
mov
(bad)
jmp
xor
cmp
lahf
repnz
add
leave
xor
pop
js
scas
mov
cs
sti
popa
pop
mov
(bad)
(bad)
call
stos
jl
popa
data16
ins
mov
push
mov
sub
fdivr
fucomip
pushf
push
sub
cwde
xlat
push
sbb
pop
jo
daa
pop
out
test
(bad)
dec
adc
movs
pop
popf
dec
ins
aad
(bad)
call
push
jmp
into
mov
(bad)
inc
sub
jbe
arpl
jnp
mov
jp
push
xchg
inc
xchg
push
mov
xchg
sbb
sub
pop
enter
xchg
gs
(bad)
call
sbb
add
in
add
pop
push
cld
je
jmp
mov
inc
jbe
pop
or
outs
clc
jmp
push
xchg
nop
add
pop
mov
dec
(bad)
and
push
pop
dec
dec
cmps
rcl
and
cwde
aas
mov
shl
loop
ja
(bad)
mov
out
add
das
pop
(bad)
(bad)
(bad)
(bad)
mov
call
enter
xchg
inc
jno
mov
es
sahf
xor
ins
(bad)
push
push
movs
pop
scas
stos
das
in
push
shl
iret
mov
sub
mov
(bad)
fcmovb
sbb
daa
xlat
ror
shl
in
push
not
gs
loop
es
cmps
or
call
icebp
or
pushf
mov
cdq
and
mov
std
cmp
adc
(bad)
fcomip
jmp
adc
or
push
fild
jle
mov
xchg
int
push
sub
pop
aaa
rcr
(bad)
inc
rcr
mov
(bad)
jl
loopne
mov
loope
jecxz
adc
(bad)
aad
sub
xor
mov
or
jae
fadd
xor
mov
push
inc
retf
xchg
sub
inc
mov
cmp
(bad)
(bad)
(bad)
jg
nop
and
cmps
mov
dec
mov
stos
fs
mov
aaa
cmp
xor
(bad)
(bad)
(bad)
push
mov
shl
aam
cdq
xor
xchg
lahf
arpl
inc
es
in
rcl
data16
(bad)
(bad)
(bad)
(bad)
(bad)
je
out
mov
or
adc
or
outs
gs
xor
out
mov
or
pop
add
rol
(bad)
(bad)
(bad)
jmp
or
xlat
adc
push
xchg
sub
push
mov
jno
leave
mov
sar
(bad)
call
retf
jb
pop
cmp
cmc
mov
arpl
cmp
adc
push
(bad)
fdiv
loopne
out
ds
test
xchg
daa
ins
lea
mov
outs
cmps
jo
ss
int
ja
and
jg
cld
(bad)
jg
jmp
cmp
dec
and
outs
or
jnp
ds
mov
xchg
mov
sub
mov
sbb
pop
ficom
ret
sahf
out
sub
(bad)
(bad)
call
mov
les
retf
inc
sbb
adc
mov
into
and
mov
adc
add
inc
and
ss
mov
inc
jae
dec
and
test
lahf
out
ins
fucomip
mov
pop
test
retf
sub
dec
jns
hlt
(bad)
leave
aas
(bad)
push
adc
push
sbb
add
test
test
(bad)
call
push
add
jle
mov
in
int3
cwde
pop
mov
aas
rcl
js
cld
(bad)
(bad)
(bad)
fadd
xchg
inc
int3
jbe
inc
hlt
mov
imul
lods
or
idiv
(bad)
call
cmp
popf
add
pop
jecxz
sar
adc
call
mov
inc
das
jmp
inc
push
pushf
shl
push
aad
cmp
cwde
mov
jmp
jb
xor
pusha
mov
mov
adc
test
scas
push
push
mov
or
inc
or
idiv
cld
test
repnz
int
dec
enter
movs
add
dec
iret
aaa
(bad)
(bad)
(bad)
inc
inc
sar
ret
retf
fisttp
dec
push
(bad)
adc
repnz
jno
lds
(bad)
in
pushf
ja
(bad)
(bad)
(bad)
call
mov
jp
(bad)
add
arpl
inc
dec
lock
pop
cmp
dec
(bad)
mov
fdivr
pop
vmovaps
ror
dec
pop
jnp
(bad)
(bad)
dec
sbb
mov
daa
jb
(bad)
pop
or
mov
movs
fsubr
xor
or
cld
jno
(bad)
(bad)
call
xor
or
pop
outs
mov
mov
imul
xchg
mov
pop
mov
sbb
(bad)
(bad)
call
ficom
out
sete
push
xor
push
xchg
jg
std
sub
push
dec
mov
xor
inc
(bad)
(bad)
(bad)
(bad)
jmp
daa
xchg
das
inc
inc
mov
int3
in
das
fisub
cdq
and
sub
xchg
js
jl
(bad)
(bad)
(bad)
jmp
out
mov
mov
int3
sahf
cmp
inc
pop
mov
cs
and
and
out
(bad)
(bad)
jmp
or
cs
pushf
jmp
imul
fdiv
mov
cmps
pop
retf
xor
xchg
(bad)
(bad)
(bad)
jg
or
xor
lock
jno
mov
mov
cdq
push
dec
out
xchg
mov
(bad)
(bad)
dec
aas
mov
mov
fcomp
out
cli
jns
pop
sub
jmp
xor
fild
pop
mov
rcl
test
mov
sub
(bad)
(bad)
(bad)
jmp
or
fdivr
hlt
stos
cmc
mov
loope
scas
mov
pushf
push
dec
mov
mov
jge
repnz
sti
dec
xor
js
pop
adc
fwait
fs
(bad)
(bad)
(bad)
jmp
ja
jns
push
dec
mov
push
mov
fld
and
jg
mov
aas
and
(bad)
dec
xlat
test
cmp
imul
out
mov
mov
inc
sti
(bad)
(bad)
out
pushf
aas
mov
and
dec
call
iret
stc
(bad)
jbe
add
(bad)
jg
push
xchg
inc
(bad)
pop
mov
retf
fisttp
xchg
mov
push
push
gs
xchg
push
xchg
outs
ds
(bad)
(bad)
(bad)
ds
pop
fist
mov
outs
adc
or
cli
add
dec
mov
push
inc
je
arpl
dec
pushf
jb
jae
mov
mov
or
out
push
pxor
call
scas
or
sbb
cli
loop
outs
inc
inc
out
std
outs
shl
pop
cwde
sbb
fnstsw
(bad)
(bad)
call
es
sub
jne
ja
jno
add
dec
lods
fwait
bound
mov
hlt
push
cmc
gs
(bad)
mov
jo
dec
lahf
ror
jl
sahf
sub
push
adc
arpl
(bad)
(bad)
(bad)
push
scas
push
arpl
fwait
dec
bound
int3
mov
test
xor
test
lock
(bad)
call
pop
fld
pop
in
cmps
or
(bad)
je
xor
ret
xor
pop
test
out
jmp
jp
jno
jae
and
mov
(bad)
push
and
adc
lea
xchg
dec
loope
sbb
jl
and
loope
xchg
push
fild
inc
(bad)
call
outs
add
mov
lds
arpl
mov
and
test
outs
inc
(bad)
(bad)
(bad)
dec
call
aas
setg
inc
out
ins
cmps
adc
cmps
adc
cmp
in
ja
cli
(bad)
sbb
(bad)
(bad)
jmp
pushf
cmp
pop
pop
aad
pop
jge
adc
sub
xor
into
cmp
(bad)
push
(bad)
inc
jle
ret
mov
mov
push
inc
mov
jp
(bad)
(bad)
jmp
imul
adc
and
arpl
sub
xor
cmp
(bad)
(bad)
(bad)
push
xor
ins
and
test
out
or
xor
sub
outs
cmps
popf
in
das
(bad)
(bad)
(bad)
(bad)
jmp
mov
mov
popa
mov
or
mov
(bad)
(bad)
(bad)
call
lock
into
cli
popa
push
aam
lock
inc
push
jecxz
data16
aas
loopne
scas
pushf
and
(bad)
jg
(bad)
mov
mov
sub
fidivr
sti
dec
xchg
ror
pushf
enter
das
cli
inc
jmp
imul
imul
cmovbe
pop
(bad)
cmp
(bad)
(bad)
(bad)
push
jo
cmp
xchg
inc
sbb
push
push
and
push
test
ret
(bad)
das
sub
add
xor
(bad)
jg
div
stc
jge
xchg
ret
sub
and
movs
(bad)
mov
push
push
dec
push
jmp
xlat
movs
ficomp
mov
mov
sbb
inc
pop
mov
ficom
sbb
(bad)
inc
mov
push
jmp
stos
test
out
(bad)
(bad)
mov
pop
mov
mov
into
enter
pop
fcom
dec
cld
dec
mov
fnstsw
mov
inc
jmp
repnz
stos
imul
stos
cmc
sub
pop
ret
scas
push
push
(bad)
(bad)
(bad)
push
stos
sti
xor
pop
mov
or
stos
xor
xchg
jmp
inc
lahf
iret
push
lea
push
das
jo
sub
push
fisub
mov
idiv
into
jns
neg
int
add
inc
imul
(bad)
(bad)
jmp
sbb
mov
jae
icebp
call
repz
lea
retf
arpl
(bad)
call
cmps
lods
push
xor
and
push
xchg
adc
pop
ficomp
pop
xchg
xchg
int
xchg
mov
push
mov
(bad)
(bad)
jmp
sub
push
and
in
or
fistp
lods
add
call
imul
cmp
aaa
lock
scas
test
ficomp
ret
cmp
or
pop
pusha
aad
lock
ja
lock
xchg
jmp
sbb
push
sahf
stc
in
mov
jne
mov
and
fisubr
sar
mov
(bad)
inc
sahf
mov
pop
xchg
retf
cld
out
xchg
popa
jne
dec
jecxz
cmp
and
retf
sar
fisubr
in
test
aam
jl
push
test
and
in
adc
out
loope
add
stos
ret
adc
mov
stc
pop
imul
push
pushf
ins
(bad)
(bad)
(bad)
push
lahf
dec
pop
aam
addr16
mov
pop
sbb
adc
sub
stos
mov
loope
(bad)
(bad)
cmp
sar
push
cld
loope
ds
in
bnd
(bad)
mov
jns
sbb
jmp
cli
mov
cmp
inc
push
mov
cmp
push
mov
push
cld
(bad)
jmp
je
jp
nop
data16
shr
jg
mov
imul
cwde
and
(bad)
(bad)
(bad)
fdivr
gs
xchg
scas
dec
sbb
jnp
mov
outs
sar
(bad)
dec
fsubr
lods
in
pop
jo
gs
lock
adc
outs
fld
push
dec
ret
(bad)
(bad)
(bad)
dec
lock
dec
dec
jns
jnp
je
ficomp
repz
jns
sti
sar
loope
inc
mov
test
daa
cli
mov
pop
(bad)
(bad)
(bad)
jg
scas
inc
dec
test
ret
push
je
frstor
fstp
rcl
adc
sub
loop
mov
les
mov
pop
ins
ret
fmul
mov
(bad)
(bad)
(bad)
(bad)
sti
push
push
adc
xor
inc
pop
jmp
push
in
leave
xor
pop
ja
cld
pop
(bad)
das
xor
(bad)
(bad)
(bad)
dec
add
cmc
sahf
add
push
dec
adc
out
in
sub
cdq
sub
(bad)
clc
jmp
aam
(bad)
jae
sub
daa
icebp
xchg
pop
and
inc
(bad)
(bad)
(bad)
call
std
sbb
fcomp
or
mov
push
into
push
xchg
shl
sub
adc
ret
push
fild
sbb
outs
(bad)
mov
fiadd
call
inc
dec
mov
or
sbb
(bad)
in
dec
sub
and
jnp
cli
mov
es
out
adc
int3
xor
push
push
push
xchg
add
idiv
call
cmp
cmps
and
xor
or
ss
dec
xor
neg
aas
pop
(bad)
(bad)
(bad)
fild
mov
lahf
lea
pop
out
fsubr
stos
mov
or
xor
scas
sbb
xor
(bad)
(bad)
(bad)
jmp
pop
jp
and
aas
and
jne
jmp
add
cli
xchg
jns
fwait
(bad)
(bad)
call
mov
mov
xor
pop
and
mov
ins
xchg
xor
sub
(bad)
(bad)
jmp
pop
aam
sbb
shl
cmp
mov
fwait
sbb
jnp
test
pop
iret
(bad)
(bad)
jg
jno
pop
iret
adc
mov
jne
and
xor
inc
ja
imul
imul
mov
jp
fstp
push
lds
push
(bad)
jmp
call
xor
lahf
pusha
xchg
ss
fidiv
(bad)
(bad)
(bad)
call
call
jae
inc
iret
sub
inc
mov
(bad)
mov
jb
(bad)
(bad)
(bad)
jmp
xchg
aam
push
test
fld
mov
xchg
cmp
(bad)
jmp
lea
ja
out
push
jecxz
dec
mov
loop
xchg
xor
(bad)
(bad)
jmp
xchg
push
ds
ret
jno
stos
inc
sbb
aas
mov
xor
lods
sar
(bad)
(bad)
(bad)
call
ja
xor
xor
sti
xchg
xor
adc
mov
ror
mov
pop
rcr
mov
push
imul
popf
mov
shl
jno
call
sbb
jecxz
sbb
mov
(bad)
(bad)
(bad)
call
and
lods
in
and
data16
inc
dec
nop
push
mov
or
(bad)
xchg
repz
push
pop
(bad)
(bad)
dec
dec
ret
out
shr
in
cmps
xchg
inc
inc
mov
sbb
xor
jle
(bad)
(bad)
(bad)
inc
cmp
push
rcr
test
aam
add
pand
(bad)
fnstsw
cmp
std
xchg
(bad)
(bad)
push
repz
movs
mov
mov
xchg
inc
(bad)
das
dec
scas
dec
clc
outs
test
(bad)
(bad)
jmp
ins
dec
adc
cld
jmp
cli
cmc
add
mov
mov
repz
stos
push
(bad)
(bad)
(bad)
push
aam
or
pop
pop
mov
aaa
jae
out
cdq
js
es
fwait
stc
jecxz
add
sub
jp
add
xchg
add
imul
ins
mov
loopne
sbb
inc
mov
push
mov
out
lods
mov
nop
mov
xchg
(bad)
add
(bad)
(bad)
jmp
call
out
dec
jg
jg
mov
jecxz
jnp
fmul
arpl
push
(bad)
(bad)
jg
scas
or
popa
jae
mov
lea
sub
fldcw
rol
xchg
mov
jmp
mov
dec
cmp
mov
mov
add
lods
addr16
(bad)
(bad)
(bad)
mov
enter
test
push
push
add
lods
or
inc
repz
retf
sub
clc
(bad)
dec
lds
and
push
push
mov
jnp
mov
call
scas
(bad)
test
pop
fst
cld
out
jmp
pop
out
mov
daa
je
(bad)
(bad)
(bad)
jmp
add
push
in
mov
bound
ret
pop
pushf
aad
cld
pusha
add
(bad)
ds
jmp
cs
dec
inc
out
pop
mov
pop
inc
cmps
xchg
mov
or
cmp
js
repz
push
stos
jge
mov
jge
add
or
fs
in
add
(bad)
int3
inc
xchg
out
(bad)
xlat
jno
dec
ficom
lock
ja
mov
add
test
lahf
(bad)
(bad)
(bad)
inc
mov
les
mov
cmp
out
sub
mov
shr
scas
sar
inc
cmp
(bad)
(bad)
jmp
imul
jns
inc
push
test
ret
mov
mov
mov
sbb
sub
add
in
(bad)
sbb
mov
or
dec
mov
(bad)
(bad)
(bad)
jmp
ins
add
dec
iret
retf
and
push
and
xor
add
sub
jno
movs
sbb
adc
cmps
sahf
sti
pop
mov
ret
jbe
and
xor
adc
call
daa
sbb
(bad)
(bad)
jmp
out
jmp
cmp
mov
jno
adc
jmp
dec
(bad)
(bad)
(bad)
(bad)
jmp
loop
mov
daa
enter
(bad)
sbb
sub
out
mov
rcr
add
jmp
cli
inc
aam
or
jp
test
scas
pusha
jns
aaa
push
adc
(bad)
(bad)
call
or
jge
mov
test
inc
pop
into
ds
loopne
and
mov
push
cmp
inc
or
jns
mov
rcl
test
and
xchg
jae
(bad)
(bad)
call
or
fmulp
pop
xchg
dec
mov
mov
mov
jnp
dec
in
or
hlt
(bad)
(bad)
(bad)
dec
xchg
or
shl
sub
sbb
fdivr
cmps
imul
dec
or
vpmuludq
test
(bad)
lock
test
or
sub
pop
push
xlat
add
ficom
(bad)
inc
pop
inc
lods
mov
or
cld
mov
fninit
mov
lods
(bad)
(bad)
(bad)
call
jg
sub
movhps
push
test
loopne
pop
ins
fadd
mov
imul
inc
clc
push
cli
mov
sar
sub
in
mov
call
mov
(bad)
inc
cmc
sub
push
addr16
lods
arpl
(bad)
call
and
loop
cli
cmps
outs
pop
add
and
ficomp
stos
inc
and
adc
(bad)
(bad)
call
fwait
mov
or
sbb
xchg
xchg
and
loope
push
pop
jmp
(bad)
mov
mov
dec
scas
fstp
lock
pop
sub
in
rcr
xlat
sub
(bad)
(bad)
dec
call
in
sbb
add
retf
loope
ins
xchg
mov
xchg
jmp
cmps
aad
sub
add
xchg
inc
pop
fld
or
adc
(bad)
(bad)
inc
lahf
mov
mov
push
mov
xchg
ret
mov
stc
(bad)
xchg
ret
inc
(bad)
(bad)
mov
ret
cmc
cmps
cmc
mov
dec
ins
mov
icebp
pop
pop
pop
xchg
push
xchg
fisttp
add
dec
std
dec
inc
or
lahf
add
pop
pop
jmp
test
rcpps
mov
int3
dec
fsubrp
push
mov
out
test
sti
ret
inc
mov
mov
call
push
popa
jns
jo
adc
cmp
loop
cmp
js
or
adc
(bad)
call
mov
cmps
dec
mov
jecxz
test
sub
les
or
xor
add
scas
jg
fcomip
dec
fmul
jl
mov
and
cmc
(bad)
(bad)
push
cld
(bad)
leave
xchg
rcr
(bad)
in
icebp
adc
jno
mov
pop
je
dec
cld
popf
dec
out
pop
(bad)
(bad)
(bad)
(bad)
fiadd
lds
fmul
mov
test
xor
out
cmps
lahf
cdq
(bad)
mov
cmp
fsub
or
mov
int
xor
and
adc
(bad)
jmp
dec
and
mov
cmp
xor
mov
retf
fmul
pushf
(bad)
(bad)
(bad)
(bad)
cmp
out
adc
enter
xor
(bad)
sti
(bad)
cmp
mov
and
(bad)
(bad)
(bad)
dec
adc
shr
cmps
loopne
stc
xchg
push
dec
xor
push
cmps
xchg
jge
stc
mov
push
pop
sub
adc
mov
ffreep
push
lds
inc
outs
jmp
hlt
inc
add
cs
enter
lea
fdivr
loope
mov
call
mov
jle
cs
jmp
outs
dec
(bad)
inc
aaa
sti
mov
idiv
scas
fsubr
xor
aas
mov
fld
sar
(bad)
sbb
jmp
call
(bad)
outs
xchg
imul
(bad)
(bad)
out
cli
adc
xchg
loop
sub
jb
test
push
arpl
and
adc
stos
dec
jno
(bad)
fcomip
(bad)
in
bound
mov
cmp
cli
mov
aas
fsincos
hlt
sbb
(bad)
(bad)
(bad)
call
outs
scas
mov
add
xor
rcr
gs
sbb
int
jae
jo
(bad)
(bad)
(bad)
jmp
cmp
mov
mov
jmp
jmp
pop
cli
inc
jmp
inc
cld
jmp
lahf
push
loop
js
adc
push
cwde
mov
rol
(bad)
(bad)
(bad)
mov
loope
out
push
dec
mov
call
inc
idiv
sub
call
push
xchg
xchg
popa
inc
adc
cmp
mov
mov
inc
or
fbstp
pop
push
(bad)
(bad)
(bad)
jmp
test
lds
xor
dec
push
mov
lock
jmp
pop
mov
jmp
mov
fdivr
ret
or
les
dec
pop
(bad)
jmp
loop
inc
stos
pop
mov
(bad)
adc
outs
push
push
stos
icebp
xlat
fist
jmp
dec
cmp
sub
sub
ins
rol
pop
leave
xor
(bad)
(bad)
(bad)
call
test
clc
jae
ins
psrlw
adc
inc
mov
adc
fwait
adc
(bad)
(bad)
call
pop
mov
inc
xchg
repz
stos
xchg
sbb
push
xor
push
(bad)
fcomp
mov
xchg
not
loopne
push
(bad)
mov
pushf
fisttp
inc
daa
mov
push
enter
xchg
cli
call
ret
mov
repz
pushf
std
popa
mov
(bad)
(bad)
jmp
pop
or
into
cwde
push
bound
jne
sub
(bad)
js
(bad)
(bad)
(bad)
jp
nop
pop
out
sub
adc
fstp
push
cmp
jmp
fs
(bad)
(bad)
(bad)
call
jb
jecxz
jmp
test
test
jbe
jle
fist
sbb
pop
pop
test
(bad)
(bad)
jg
(bad)
clc
inc
cmp
xchg
dec
clc
sbb
outs
mov
pushf
(bad)
out
out
retf
fcomip
inc
mov
sbb
les
mov
add
adc
xor
call
out
dec
xor
mov
nop
xor
(bad)
and
push
(bad)
cmp
jg
out
mov
icebp
cmc
retf
mov
pop
lods
(bad)
repz
popf
or
fdivr
out
call
add
or
dec
nop
ss
leave
mov
mov
xor
xlat
pop
(bad)
(bad)
push
out
(bad)
mov
pop
pop
mov
sbb
push
outs
dec
(bad)
(bad)
(bad)
jmp
lea
add
mov
fild
adc
call
not
mov
sub
(bad)
(bad)
(bad)
jmp
int
fsubr
pushf
cmp
xchg
add
test
(bad)
(bad)
mov
pop
sub
pusha
and
rol
outs
jno
cmp
dec
hlt
mov
(bad)
(bad)
(bad)
fild
xchg
push
jecxz
lea
test
movs
push
push
sar
inc
fistp
(bad)
(bad)
(bad)
jmp
adc
lea
test
adc
dec
ins
fmulp
rcr
pop
dec
jmp
mov
jmp
(bad)
(bad)
(bad)
jmp
xor
fld
sub
pop
jb
sub
lahf
(bad)
cli
sahf
sbb
lods
mov
(bad)
inc
push
inc
out
xchg
xchg
jmp
cld
inc
cmps
imul
ficom
cmps
(bad)
(bad)
(bad)
jmp
jmp
sbb
call
cmp
pop
int3
std
into
arpl
lods
cmp
loop
(bad)
(bad)
inc
jno
sbb
lahf
lock
mov
ja
icebp
frstor
inc
iret
push
(bad)
(bad)
(bad)
jmp
pop
inc
mov
sbb
pop
or
or
cmp
shl
scas
ins
mov
(bad)
fsub
pop
or
aaa
data16
out
mov
sar
inc
adc
add
pop
mov
repnz
rol
jg
(bad)
(bad)
fnstsw
xchg
cmp
mov
hlt
mov
addr16
in
xor
xchg
cdq
xor
cld
jmp
lods
or
mov
adc
cmps
dec
mov
(bad)
(bad)
(bad)
jmp
(bad)
xchg
leave
stos
arpl
das
sahf
jmp
lods
out
push
cdq
fwait
mov
scas
(bad)
(bad)
inc
xorps
xchg
adc
and
nop
xor
bound
(bad)
dec
push
sbb
fst
cmp
retf
mov
scas
inc
cld
jnp
ret
(bad)
jmp
inc
pop
loope
add
cmps
jo
push
jbe
ror
inc
inc
xchg
(bad)
(bad)
(bad)
jg
jno
or
xchg
das
inc
add
in
aad
xchg
(bad)
cld
xor
ror
or
pop
push
(bad)
mov
popa
xor
lock
test
push
fcom
enter
scas
hlt
adc
ror
outs
inc
stos
jmp
sahf
call
out
inc
shr
sub
rol
xchg
push
sbb
mov
mov
push
test
shl
in
call
arpl
adc
push
(bad)
gs
dec
dec
and
test
(bad)
icebp
cs
jmp
(bad)
dec
push
fwait
xor
jmp
jns
dec
sbb
sbb
cld
adc
(bad)
pop
add
dec
xchg
mov
pop
fcmovu
test
push
(bad)
(bad)
(bad)
call
sti
add
cwde
inc
xor
and
aad
stc
jns
inc
pop
or
loope
and
popa
sbb
(bad)
(bad)
dec
nop
dec
adc
inc
scas
stos
repnz
pop
cmc
iret
lods
enter
cmp
test
(bad)
(bad)
jmp
mov
sub
scas
lods
pop
loope
jl
ja
sub
mul
(bad)
(bad)
push
loop
xchg
es
into
pusha
mov
inc
idiv
pmaxub
add
sub
jae
dec
mov
mov
lods
sub
mov
lock
repnz
ins
jle
jns
pop
dec
outs
into
(bad)
hlt
sub
push
mov
(bad)
(bad)
(bad)
call
icebp
cld
bound
pop
enter
fadd
rcr
leave
imul
jge
push
test
cmps
movs
cmp
(bad)
(bad)
inc
xor
sbb
repnz
nop
popf
(bad)
jecxz
repnz
pop
stc
fmul
lahf
retf
jne
popf
xchg
add
int
int
test
fistp
jge
adc
push
repz
sar
je
(bad)
out
sub
retf
arpl
sbb
popf
add
mov
call
pop
pushf
cdq
add
add
push
cmp
xchg
test
(bad)
(bad)
fistp
outs
loop
out
out
sbb
cs
xchg
sbb
outs
jmp
punpckhbw
pop
sbb
jmp
jecxz
sub
call
es
inc
pop
loope
mov
in
push
cmp
ficomp
stos
hlt
push
mov
inc
retf
cmps
repnz
xchg
(bad)
(bad)
inc
lea
outs
in
xchg
retf
xor
icebp
retf
test
call
(bad)
(bad)
push
mov
ficom
sub
jns
xor
add
sub
xor
jp
lock
jg
jle
lods
stc
or
adc
in
or
push
(bad)
(bad)
(bad)
(bad)
jmp
xchg
mov
adc
push
jbe
call
cmp
mov
test
(bad)
call
enter
push
mov
mov
jno
enter
adc
push
push
arpl
xchg
pop
arpl
sbb
jge
and
call
lea
dec
outs
lods
(bad)
(bad)
(bad)
call
push
push
xor
mov
pop
and
push
jl
adc
bound
and
jp
sub
(bad)
(bad)
jmp
lods
outs
xchg
mov
ror
add
mov
dec
mov
fdiv
scas
fnstsw
(bad)
(bad)
(bad)
(bad)
jp
push
div
inc
js
iret
xchg
inc
(bad)
pop
push
das
loopne
push
and
mov
mov
push
retf
jmp
sbb
pop
iret
sbb
retf
push
inc
sub
fs
adc
sub
(bad)
(bad)
jmp
out
cmps
lods
int3
mov
repnz
mov
xlat
nop
retf
or
outs
(bad)
(bad)
(bad)
inc
lahf
pop
inc
lods
pop
test
push
xor
push
jp
sti
sub
fs
popf
pop
out
cld
stos
push
(bad)
cli
mov
sar
cs
rcl
les
ins
or
pop
lds
out
push
js
dec
aam
and
(bad)
(bad)
(bad)
dec
xlat
add
pop
movs
cld
in
popf
adc
stc
pop
call
cwde
push
or
mov
lods
mov
mov
movs
sbb
cmp
xchg
dec
repnz
inc
push
sbb
mov
dec
scas
fwait
out
pop
push
fwait
dec
mov
fistp
retf
lods
mov
push
arpl
lock
(bad)
(bad)
dec
adc
jo
popf
cmp
xor
stos
pop
and
aad
stc
xchg
xchg
loopne
jle
push
mov
dec
inc
mov
cmp
or
loopne
outs
adc
out
sub
sbb
push
mov
add
push
call
add
push
(bad)
(bad)
(bad)
dec
fwait
aam
stos
sbb
sbb
pop
cmp
or
dec
or
pop
and
inc
pop
sar
fs
mov
xchg
loop
and
xchg
sub
sbb
mov
sti
adc
sbb
arpl
xchg
pop
mov
in
lods
std
lods
enter
xchg
sbb
jmp
pusha
sbb
(bad)
push
push
jmp
(bad)
(bad)
jmp
fisttp
fdivr
push
test
push
(bad)
mov
loopne
xlat
mov
(bad)
(bad)
(bad)
jmp
inc
jge
mov
adc
pushf
xor
shl
test
add
jmp
call
inc
out
iret
mov
imul
jae
fiadd
add
(bad)
(bad)
(bad)
aas
(bad)
imul
fidiv
(bad)
and
inc
push
push
in
cmp
dec
and
scas
inc
test
sbb
lods
add
(bad)
(bad)
(bad)
(bad)
aas
mov
scas
sbb
or
into
jp
scas
add
ret
xchg
xor
outs
aam
sub
adc
cmps
fs
repz
dec
inc
mov
xlat
or
add
cmps
push
jnp
sar
(bad)
(bad)
push
pop
or
test
pop
fnstsw
jno
pop
mov
lock
dec
inc
jno
test
test
movs
pushf
das
(bad)
xchg
rcr
(bad)
inc
add
movs
mov
jmp
inc
jae
dec
cli
clc
into
jae
cli
inc
in
scas
cli
pop
cld
push
xchg
sbb
jne
fnstcw
movs
sar
(bad)
fist
imul
adc
in
cmp
ret
mov
cmps
or
inc
fcomip
(bad)
call
inc
mov
or
cmc
mov
outs
jb
fnclex
(bad)
out
add
pop
add
cmp
mov
scas
jmp
mov
pop
and
sbb
gs
adc
call
dec
xor
sbb
cmp
scas
or
test
loopne
retf
and
(bad)
jmp
mov
add
push
adc
mov
push
cs
dec
aaa
add
push
test
inc
movs
in
stos
mov
mov
fmul
pushf
int
mov
(bad)
(bad)
jmp
jge
dec
push
iret
push
test
xchg
dec
mov
mov
mov
lods
aas
movs
clc
cdq
repz
jbe
ds
(bad)
(bad)
jge
sbb
dec
jo
enter
out
js
movs
mov
retf
fcomp
sahf
ret
cs
dec
loop
inc
mov
cmps
sub
(bad)
scas
loope
rcr
stos
test
rcr
mov
adc
std
jmp
mov
call
fcomip
(bad)
call
nop
stc
arpl
in
mov
add
dec
(bad)
cmp
jnp
jl
pop
inc
jns
(bad)
(bad)
call
loopne
pop
jb
sbb
lock
or
test
mov
mov
lea
xchg
(bad)
(bad)
(bad)
jmp
add
or
int
pop
fadd
clc
pop
dec
movs
inc
mov
add
cmc
adc
bound
push
(bad)
(bad)
jg
fisubr
enter
mov
push
add
fcmovnu
enter
xchg
mov
push
(bad)
(bad)
(bad)
push
ret
(bad)
mov
cmp
ins
xor
push
call
imul
mov
cmps
mov
(bad)
call
jge
fbld
add
cmp
push
cli
lock
fistp
fist
xchg
xlat
pop
test
(bad)
(bad)
cld
sbb
div
add
imul
push
xchg
popf
lea
(bad)
test
(bad)
(bad)
(bad)
call
xchg
or
cwde
into
mov
jns
loopne
jb
xor
popa
jge
xchg
sub
call
cmp
lds
imul
fdivr
jb
int3
out
mov
(bad)
jmp
jmp
das
push
jmp
xchg
pop
jns
pop
inc
sbb
sbb
and
(bad)
sub
push
test
nop
scas
or
repnz
jle
test
inc
imul
push
adc
push
lahf
sbb
lds
mov
(bad)
(bad)
(bad)
jle
stc
jne
sbb
jg
jp
cmp
xchg
jnp
inc
(bad)
(bad)
sbb
mov
adc
(bad)
(bad)
(bad)
jmp
int3
ret
rol
jl
add
or
ja
and
xchg
jbe
mov
push
mov
add
xchg
call
cs
mov
(bad)
daa
jmp
call
fcomip
addr16
jns
loopne
daa
nop
jl
addr16
shl
rcr
fisttp
mov
leave
xor
lea
push
fstp
sub
mov
adc
(bad)
jmp
add
mov
jecxz
cmc
dec
arpl
mov
dec
mov
jl
aas
inc
test
(bad)
(bad)
(bad)
jmp
in
adc
jmp
push
shr
into
lds
and
mov
inc
rol
(bad)
fstp
or
push
jmp
sar
ins
icebp
retf
jg
adc
and
les
add
push
jno
add
mov
lods
shr
mov
push
es
test
repz
rcl
mov
push
retf
dec
dec
retf
call
aaa
sbb
xchg
je
push
cmp
out
jae
dec
and
push
pop
or
add
dec
sbb
int
adc
xchg
ja
push
or
clc
(bad)
jmp
push
outs
ficom
mov
nop
inc
mov
push
lea
lods
xor
addr16
jmp
int3
and
and
into
bound
inc
ins
cdq
cld
loopne
shl
test
out
cli
pop
sub
dec
lods
stos
lods
push
adc
fisttp
mov
inc
icebp
inc
add
icebp
add
jno
cmps
jbe
fsub
enter
jle
(bad)
inc
dec
cmps
or
push
mov
stos
loop
mov
clc
jns
out
clc
inc
mov
pop
xchg
sbb
inc
ror
arpl
inc
ins
into
inc
lods
cld
nop
push
xchg
sbb
aad
icebp
stos
sar
add
xchg
(bad)
(bad)
(bad)
jmp
leave
in
into
repz
push
cmp
popa
sbb
mov
pop
ja
fadd
(bad)
dec
ds
add
fstp
in
xchg
push
inc
sbb
pop
iret
dec
shl
bound
and
(bad)
jmp
pop
loopne
fld
call
push
inc
xor
invd
clc
fsubrp
sahf
(bad)
(bad)
(bad)
jmp
pop
mov
jbe
gs
or
xchg
mov
dec
jb
ins
lods
push
lods
cli
(bad)
out
clc
iret
daa
dec
push
and
bound
jmp
push
push
(bad)
sbb
mov
rol
pop
test
stos
and
repz
jle
adc
ficomp
adc
xchg
gs
jmp
jg
sub
repnz
dec
jno
jmp
mov
inc
enter
icebp
and
loopne
aad
xor
sub
jb
sar
(bad)
call
call
fcomp
dec
addr16
inc
stos
ja
and
adc
(bad)
call
dec
cmp
and
xchg
mov
jp
mov
(bad)
mov
add
push
pushaw
and
shl
jo
pop
in
enter
mov
(bad)
(bad)
(bad)
dec
sahf
add
out
mov
mov
test
cwde
sahf
pushf
mov
xchg
push
test
lock
call
push
push
dec
mov
cmp
push
(bad)
scas
cld
push
dec
xor
push
jno
scas
imul
sar
sti
es
mov
inc
rcr
cmc
jle
pop
or
jg
inc
pusha
(bad)
fdiv
(bad)
(bad)
(bad)
(bad)
cmp
lods
dec
repz
or
adc
pop
movs
lods
in
rol
ins
fdivr
xor
clc
(bad)
call
clc
shr
int3
sti
push
popa
xchg
jecxz
mov
(bad)
mov
adc
std
mov
das
push
aad
pop
outs
mov
pop
sti
(bad)
(bad)
dec
or
pop
sub
iret
in
or
sub
aad
bound
jae
mov
aas
ins
fiadd
(bad)
(bad)
(bad)
jg
pop
(bad)
call
mov
aas
adc
push
pop
fisttp
and
xchg
cs
cmps
push
(bad)
(bad)
(bad)
(bad)
in
mov
test
aad
dec
inc
adc
inc
pop
and
jne
jnp
lock
shrd
(bad)
je
or
xlat
cs
push
cmps
out
mov
pop
or
or
mov
(bad)
(bad)
jmp
enter
jae
sbb
xchg
cmc
mov
push
push
inc
ins
stos
push
lea
ficomp
push
pop
pop
hlt
pop
inc
mov
push
gs
sahf
jo
hlt
(bad)
(bad)
call
mov
imul
popa
pop
(bad)
xor
pop
sti
test
pop
add
adc
cmp
(bad)
call
dec
jmp
mov
jb
mov
adc
sbb
pop
sbb
dec
jmp
in
out
mov
push
mov
push
add
add
(bad)
(bad)
(bad)
inc
xchg
je
pushf
push
test
jno
aas
mov
test
into
push
xchg
inc
lahf
sbb
(bad)
(bad)
(bad)
push
inc
jmp
stc
shr
add
(bad)
dec
push
fistp
mov
xchg
add
jno
(bad)
(bad)
call
js
daa
std
and
jg
sub
stos
mov
daa
fs
fistp
xor
cld
lar
jmp
jle
cwde
jecxz
popa
fmul
sar
adc
in
(bad)
(bad)
(bad)
jmp
mov
or
mov
imul
daa
in
stos
mov
popf
(bad)
(bad)
(bad)
(bad)
jmp
mov
je
in
neg
xor
aaa
jnp
ins
cmps
push
or
les
aas
sbb
fcomip
jmp
or
mov
out
pop
push
and
ds
(bad)
(bad)
(bad)
(bad)
mov
inc
jl
and
aaa
popa
inc
mov
bound
lds
pop
(bad)
(bad)
(bad)
jmp
adc
fcom
out
sbb
ret
pop
jge
pushf
lahf
imul
dec
ret
or
xor
sub
cwde
sbb
jmp
loop
add
shl
pusha
outs
cmp
cmp
(bad)
clc
(bad)
(bad)
(bad)
jg
push
les
(bad)
fwait
xor
xor
imul
cmp
jg
mov
movs
(bad)
(bad)
(bad)
(bad)
dec
add
or
out
push
dec
cli
movs
push
mov
(bad)
(bad)
das
mov
jge
pop
adc
inc
test
(bad)
(bad)
(bad)
mov
cmc
sbb
xchg
pop
xor
sub
push
jle
enter
(bad)
(bad)
(bad)
inc
(bad)
fcom
jge
dec
cmps
icebp
push
call
pushf
mov
test
(bad)
(bad)
dec
std
xlat
test
push
jae
ins
xchg
or
retf
leave
mov
mov
mov
pop
cld
jg
(bad)
(bad)
(bad)
mov
aaa
jp
rcr
lods
ins
fwait
sbb
das
clc
call
add
xchg
out
xchg
ret
test
or
(bad)
inc
outs
xchg
or
daa
pop
in
jg
fcomp
fxch
or
adc
(bad)
loop
fld
ret
aam
push
(bad)
(bad)
(bad)
(bad)
jns
imul
scas
fst
cs
bound
clc
xchg
mov
jo
jle
lds
dec
jmp
inc
or
test
inc
mov
or
lods
mov
hlt
call
or
or
add
push
xchg
dec
inc
mov
add
cli
sub
sbb
sar
sub
pop
pop
pop
sbb
movs
or
push
fild
pop
mov
lock
jl
out
repz
(bad)
(bad)
jmp
dec
pop
sbb
and
(bad)
jge
push
add
push
mov
sar
mov
loope
ins
lahf
xor
jne
push
pop
jle
mov
sbb
inc
cwde
dec
fild
sbb
sub
cli
enter
mov
inc
ins
mov
cs
push
fld
inc
icebp
enter
pop
imul
mov
sub
call
xlat
xor
cmp
mov
jle
leave
call
popf
mov
inc
(bad)
(bad)
(bad)
call
xor
mov
mov
cli
out
loop
pop
dec
sti
repz
fisub
retf
mov
out
(bad)
(bad)
dec
adc
retf
sahf
les
xchg
mov
mov
icebp
cdq
(bad)
mov
scas
js
shr
pop
pop
inc
sar
test
cld
push
js
inc
fistp
aam
outs
clc
(bad)
jmp
mov
or
les
xchg
(bad)
jle
retf
pop
out
(bad)
mov
ret
pop
in
clc
or
(bad)
jmp
push
xchg
daa
shr
in
xor
and
xor
jns
hlt
add
rol
(bad)
(bad)
(bad)
call
sub
or
lock
in
push
js
pop
push
in
in
and
pop
fdivr
dec
sub
lea
lahf
dec
or
mov
sbb
xor
inc
inc
pop
popa
or
popa
cmps
(bad)
(bad)
(bad)
jmp
test
outs
dec
xchg
push
dec
int3
mov
mov
sub
test
(bad)
dec
and
shld
(bad)
sub
inc
jnp
(bad)
(bad)
(bad)
jg
scas
call
ret
addr16
mov
push
sub
push
(bad)
aam
mov
(bad)
(bad)
call
and
fidivr
fcmovne
jmp
out
cmc
cld
loope
scas
jmp
add
(bad)
(bad)
(bad)
jle
push
test
ins
and
mov
inc
call
(bad)
dec
dec
jg
mov
push
(bad)
jmp
int
push
jmp
call
test
mov
test
(bad)
(bad)
inc
push
test
pushf
push
dec
xchg
cmp
lods
sahf
int
aam
cmp
call
(bad)
inc
lods
push
inc
fimul
imul
(bad)
inc
sub
dec
xchg
pop
in
or
into
lods
mov
sub
lock
in
stc
add
popa
pop
jno
jmp
jne
or
in
inc
ffree
jp
pop
lods
aam
xchg
or
(bad)
(bad)
jmp
fimul
stos
retf
scas
jmp
add
push
jge
cmp
pop
sbb
ds
(bad)
(bad)
jg
sahf
arpl
pushf
dec
(bad)
fistp
sub
lock
mov
mov
(bad)
std
pop
enter
(bad)
dec
cs
ins
(bad)
out
call
(bad)
imul
sbb
push
pop
mov
in
scas
stos
mov
(bad)
ds
not
fist
pop
pop
fldenv
adc
test
pop
hlt
cmps
fisttp
adc
(bad)
(bad)
mov
sahf
xor
xchg
in
aaa
push
jno
lods
inc
stos
jnp
mov
loopne
sub
xor
call
add
inc
cdq
add
(bad)
(bad)
(bad)
push
pop
(bad)
cmp
clc
xchg
xchg
loopne
mov
(bad)
fs
cmc
and
(bad)
(bad)
fisttp
ss
adc
fiadd
fdivr
rep
mov
pushf
pop
push
(bad)
jg
call
cmp
push
fld
and
lods
jecxz
ret
lahf
xchg
inc
pop
mov
push
(bad)
(bad)
(bad)
(bad)
fmul
rcl
sub
test
and
loope
jb
retf
(bad)
(bad)
(bad)
(bad)
cmp
cdq
xor
and
fsub
add
or
and
sbb
sbb
mov
(bad)
(bad)
call
cdq
mov
movs
mov
push
cmps
inc
push
jecxz
or
pop
push
jns
inc
(bad)
call
(bad)
std
fidiv
shl
mov
in
mov
pop
aad
inc
mov
xor
fnstsw
sbb
xor
pop
sub
sar
mov
fdivr
push
(bad)
jmp
and
xor
ror
and
push
inc
xor
(bad)
jg
imul
jl
enter
loopne
xchg
rol
sub
inc
popf
push
and
(bad)
(bad)
(bad)
(bad)
push
js
hlt
mov
or
(bad)
in
popa
js
jmp
or
scas
jmp
(bad)
(bad)
(bad)
jmp
dec
xchg
cmp
add
jns
dec
sbb
jns
xchg
add
push
xor
(bad)
jmp
mov
sub
(bad)
(bad)
test
push
xchg
shl
pop
jl
das
imul
outs
(bad)
(bad)
(bad)
(bad)
mov
movs
mov
ja
dec
jno
scas
lock
jg
xor
fidiv
loope
std
cmps
(bad)
(bad)
(bad)
jmp
sbb
or
sbb
gs
mov
es
jl
outs
cli
(bad)
jmp
jle
bound
mov
xchg
sub
push
inc
and
outs
adc
(bad)
(bad)
(bad)
inc
and
pusha
popa
push
pop
mov
xchg
inc
icebp
push
int3
or
call
pop
cwde
jae
or
xchg
push
pop
aam
cmp
sahf
push
lods
xor
add
xchg
cmps
ror
(bad)
mov
cmp
jb
in
out
inc
dec
sub
push
and
pop
idiv
(bad)
(bad)
push
xchg
cmps
mov
test
cmp
or
sub
aaa
fld
xor
(bad)
(bad)
call
rol
pop
dec
int3
inc
sbb
mov
pop
push
lea
ja
(bad)
mov
daa
movs
jmp
clc
inc
inc
mov
pop
test
lahf
push
out
xor
pusha
pop
push
call
add
(bad)
ficom
sbb
ins
mov
(bad)
inc
xchg
or
add
rol
push
adc
mov
push
aam
cmp
(bad)
push
mov
add
push
les
xchg
es
int
retf
fwait
add
(bad)
dec
shl
lds
inc
repnz
dec
sbb
ret
mov
stc
cmp
sub
inc
mov
or
(bad)
(bad)
inc
sbb
pop
pop
dec
pop
xchg
ss
add
xchg
retf
mov
hlt
(bad)
(bad)
(bad)
inc
movs
cwde
ror
cli
pop
jge
shl
add
fcomp
push
adc
call
cld
push
dec
movs
add
stos
cmc
add
push
inc
cs
dec
stos
sbb
stc
nop
add
(bad)
(bad)
call
mov
cli
jnp
add
sub
js
shr
dec
enter
leave
mov
inc
movs
and
and
sbb
shr
pop
inc
cli
lea
sbb
fcos
push
sub
cmp
xor
jecxz
fisttp
repnz
(bad)
xchg
or
xchg
push
cmp
(bad)
dec
pop
ds
(bad)
(bad)
cmp
(bad)
scas
imul
or
cmp
push
cmp
push
or
lock
(bad)
(bad)
call
push
adc
and
fisttp
aam
rcr
(bad)
lock
dec
add
(bad)
inc
lods
pop
mov
and
in
lahf
jo
jo
xchg
test
inc
pop
loope
popf
add
push
add
inc
inc
and
hlt
scas
mov
(bad)
jmp
sbb
sub
adc
or
sbb
mov
je
cmp
(bad)
lods
xchg
or
add
(bad)
dec
pop
popf
mov
repz
sub
jl
jns
push
jmp
(bad)
(bad)
call
pop
test
movs
xchg
ds
out
pop
mov
stc
out
mov
add
dec
jge
cli
hlt
sub
(bad)
(bad)
dec
les
xlat
jmp
lds
jecxz
dec
scas
aas
mov
jae
pop
loopne
push
and
(bad)
(bad)
(bad)
mov
or
add
sbb
popa
fist
punpckhbw
add
stos
in
out
lds
fwait
pop
(bad)
(bad)
(bad)
(bad)
jle
aam
jo
adc
xchg
sar
pop
movs
xchg
cwde
es
fcom
push
cdq
out
(bad)
(bad)
(bad)
push
jge
arpl
xor
pop
push
pop
(bad)
pop
arpl
fstp
push
add
dec
(bad)
(bad)
jg
mov
push
iret
psubd
inc
push
or
push
pop
in
or
add
cs
xlat
mov
cli
mov
mov
fiadd
and
push
daa
push
test
jle
(bad)
(bad)
call
lods
xor
rcr
pop
ror
(bad)
jmp
imul
jl
xchg
cli
ret
js
int3
(bad)
(bad)
jmp
icebp
jl
fistp
ss
mov
add
fldcw
push
call
fcomip
push
inc
dec
inc
mov
pop
loop
dec
fnstcw
inc
push
fsubp
bound
adc
repnz
mov
jmp
or
fnstcw
loop
out
inc
xor
icebp
nop
pop
scas
xchg
dec
cmc
out
pop
idiv
(bad)
in
rcl
jp
jp
pop
push
lea
fs
stos
push
cmp
popa
pushf
stos
(bad)
(bad)
call
mov
test
rol
jns
push
mov
xchg
xchg
mov
(bad)
(bad)
inc
lock
cmp
leave
dec
dec
dec
cld
pop
dec
ds
enter
jmp
jecxz
push
dec
lahf
out
mov
sbb
mov
sbb
adc
jmp
ins
pop
mov
(bad)
jecxz
dec
mov
sar
fcom
adc
push
std
(bad)
jle
in
mov
mov
out
push
(bad)
fs
and
or
(bad)
(bad)
push
inc
push
mov
sbb
outs
pushf
push
adc
add
pop
(bad)
(bad)
call
outs
add
jecxz
imul
pusha
xor
cmps
sahf
dec
xchg
in
test
cmp
(bad)
sub
pop
cmp
fwait
jecxz
push
out
nop
cmp
dec
cmp
mov
jnp
xor
mov
lods
data16
(bad)
(bad)
(bad)
(bad)
mov
imul
jge
(bad)
lock
repz
or
pop
pop
(bad)
(bad)
(bad)
push
pop
jae
shrd
cli
adc
pop
scas
call
fmul
push
lds
pop
xchg
add
(bad)
(bad)
jmp
mov
cmp
not
pop
mov
inc
sbb
or
imul
shr
(bad)
inc
add
aaa
and
inc
cmp
js
and
and
lods
out
cmp
dec
clc
or
sti
das
inc
enter
nop
call
cmp
test
mov
test
jmp
dec
mov
lods
cwde
ss
pushf
dec
xlat
sbb
(bad)
jmp
adc
xchg
pop
aas
ins
daa
sub
movs
(bad)
popf
std
data16
xchg
stc
jp
lock
(bad)
(bad)
inc
push
xchg
rcr
pop
mov
and
or
dec
nop
xchg
cld
(bad)
(bad)
(bad)
mov
push
mov
rcr
push
gs
(bad)
rcl
scas
inc
pop
jg
icebp
(bad)
jmp
dec
idiv
push
inc
mov
mov
(bad)
(bad)
(bad)
(bad)
jmp
mov
fisubr
call
pop
leave
xchg
in
ins
xlat
ror
ins
rcr
xchg
enter
call
data16
sub
add
pop
xor
add
mov
(bad)
push
lock
loopne
sahf
retf
mov
cmp
scas
mov
jae
(bad)
(bad)
jmp
int
sub
adc
pop
and
arpl
arpl
push
out
ficom
addr16
(bad)
(bad)
(bad)
inc
fwait
xor
pop
adc
stc
call
pop
mov
repz
out
test
stc
inc
cmp
lods
pop
dec
push
xor
fsubr
push
adc
into
sahf
sbb
dec
adc
xchg
dec
dec
inc
mov
clc
pop
sbb
sar
fdivr
(bad)
(bad)
push
jbe
inc
lock
mov
pop
stos
fisub
aaa
imul
mov
mov
(bad)
(bad)
(bad)
push
retf
mov
add
outs
stos
dec
pop
and
not
dec
and
mov
mov
call
add
add
dec
jns
sbb
std
add
inc
add
loope
rcr
mov
dec
(bad)
(bad)
inc
jnp
rcl
mov
adc
jg
ja
and
(bad)
push
sbb
test
mov
lods
mov
cmc
movs
and
xchg
fnstsw
fcomip
lock
cmps
xchg
lock
arpl
(bad)
(bad)
(bad)
push
jbe
xchg
std
mov
jecxz
inc
push
push
shl
jl
lods
(bad)
mov
jp
out
(bad)
jg
cld
lods
je
sahf
sbb
data16
fdiv
rcr
xchg
icebp
(bad)
(bad)
mov
adc
fisubr
je
std
add
xchg
cwde
pop
sti
retf
(bad)
(bad)
(bad)
fild
push
ins
mov
pop
mov
pop
mov
add
ins
inc
movs
jecxz
dec
inc
and
(bad)
(bad)
call
popa
mov
aam
iret
lock
bound
mov
daa
std
and
test
push
cmps
fcomip
xchg
mov
inc
push
pop
inc
mov
sbb
jmp
neg
push
sub
mov
dec
daa
sbb
jge
or
push
arpl
popa
pop
jo
sar
dec
ja
inc
and
rcr
cmp
push
outs
cs
scas
xchg
(bad)
(bad)
(bad)
jg
jnp
ret
aaa
mov
or
in
pop
aam
lds
call
(bad)
(bad)
(bad)
inc
pop
sub
or
stc
addr16
inc
call
jnp
xor
ud0
call
inc
lds
jmp
mov
fs
in
(bad)
(bad)
(bad)
call
xor
setae
xchg
push
sbb
or
popf
push
mov
pop
adc
(bad)
(bad)
(bad)
call
leave
inc
in
xchg
out
mov
(bad)
or
ins
(bad)
repnz
jg
lock
fidiv
inc
scas
(bad)
mov
in
mov
cmps
xlat
cwde
cmp
popa
adc
imul
out
push
(bad)
(bad)
(bad)
push
and
dec
test
pop
jecxz
pusha
(bad)
mov
jbe
sbb
add
aaa
dec
(bad)
(bad)
jno
enter
dec
test
lea
add
out
lods
dec
iret
adc
(bad)
inc
stos
fisubr
shl
test
enter
(bad)
(bad)
(bad)
jmp
sbb
xor
cdq
pop
adc
mov
cwde
ja
in
leave
mov
cmp
mov
(bad)
je
ds
push
imul
sbb
or
inc
inc
shl
pop
(bad)
(bad)
pcmpgtw
(bad)
(bad)
inc
(bad)
call
add
sbb
push
out
and
mov
jmp
jae
jg
(bad)
jmp
pop
iret
lods
sbb
sbb
scas
(bad)
ins
fdiv
or
(bad)
(bad)
call
cdq
mov
fimul
js
jnp
xchg
push
fmul
pushf
ins
mov
jno
add
(bad)
(bad)
push
pusha
outs
ins
scas
mov
outs
adc
ins
push
jbe
inc
addr16
adc
(bad)
aaa
pop
pushf
mov
pop
mul
(bad)
call
sti
jmp
mov
stos
and
ror
std
xchg
push
hlt
(bad)
jmp
das
mov
test
or
out
xchg
sub
jmp
(bad)
call
inc
pop
bound
mov
cs
aam
pushf
pushf
cs
fcomp
test
imul
(bad)
(bad)
add
das
pop
inc
push
test
in
dec
jno
jge
in
push
test
(bad)
(bad)
jg
inc
(bad)
fstp
xchg
adc
enter
(bad)
push
xchg
les
sar
(bad)
(bad)
call
loope
mov
push
mov
addr16
sbb
mov
(bad)
(bad)
(bad)
(bad)
mov
sti
inc
mov
add
addr16
outs
mov
(bad)
in
push
cmc
jnp
ror
ret
(bad)
(bad)
mov
popf
test
or
jle
add
inc
and
cmp
(bad)
jmp
inc
in
pop
push
shr
mov
or
mov
outs
cli
(bad)
dec
push
sub
jg
gs
or
sar
dec
das
push
fsubr
add
in
(bad)
fucomp
inc
xlat
inc
cmp
ins
push
sbb
bsr
add
out
sahf
add
or
(bad)
(bad)
(bad)
inc
stos
dec
movs
xchg
mov
addr16
dec
adc
mov
in
mov
(bad)
mov
sub
(bad)
inc
dec
push
aaa
sbb
enter
(bad)
mov
mov
or
(bad)
call
leave
cmps
std
cld
stos
adc
stc
jnp
mov
fcmovb
sub
out
mov
jle
fwait
cmps
xor
mov
mov
js
dec
mov
pop
jecxz
xchg
fistp
jae
sar
mov
call
mov
scas
push
and
in
call
adc
mov
jns
mov
(bad)
(bad)
(bad)
mov
mov
xchg
and
adc
push
ror
iret
add
xor
mov
ror
aas
sbb
jns
and
fwait
pop
mov
mov
or
jae
in
(bad)
sbb
pop
in
(bad)
(bad)
dec
jns
xchg
mov
or
outs
jmp
mov
aad
mov
mov
(bad)
(bad)
(bad)
in
xlat
fiadd
and
cmp
ror
mov
test
add
hlt
and
ret
(bad)
jmp
xchg
adc
adc
les
pop
mov
(bad)
mov
push
jl
mov
pop
ds
push
aaa
out
or
(bad)
(bad)
jmp
inc
iret
push
push
bnd
test
push
mov
jl
cmps
add
mov
mov
cs
pop
dec
fidivr
sub
and
xor
fucomip
inc
push
cmp
(bad)
call
sbb
cli
cmps
fxch
in
mov
shl
ret
rcr
test
lahf
push
lahf
div
mov
(bad)
(bad)
jmp
test
sbb
sub
adc
add
jp
push
add
push
(bad)
mov
mov
xor
and
into
sub
dec
push
shl
push
(bad)
movd
scas
sbb
add
(bad)
(bad)
(bad)
dec
mov
popa
cmc
call
mov
sub
scas
lods
pop
fs
(bad)
sahf
cli
(bad)
(bad)
(bad)
jmp
shl
rcr
dec
pop
sahf
xor
lahf
cmps
(bad)
loop
mov
(bad)
scas
(bad)
call
inc
sbb
data16
bound
ins
ins
sar
dec
inc
movs
add
das
xchg
push
popa
add
mul
pop
ins
aaa
test
rcr
mov
movs
(bad)
bound
ss
nop
xchg
pop
pop
mov
(bad)
pop
cs
test
mov
call
add
ins
out
loop
pop
movs
adc
jmp
aam
nop
idiv
(bad)
(bad)
jmp
repz
jg
sbb
(bad)
mov
inc
shrd
stos
pop
in
jb
mov
(bad)
(bad)
(bad)
(bad)
fistp
sub
cwde
loop
jp
mov
mov
call
(bad)
sbb
movs
jg
(bad)
(bad)
call
icebp
mov
cmc
in
dec
mov
mov
into
loopne
mov
lock
pop
cdq
div
das
clc
(bad)
inc
mov
clc
mov
jb
ins
mov
xor
sar
(bad)
fcomp
aam
mov
xchg
mov
scas
push
in
test
(bad)
jmp
adc
movs
cmps
out
jns
mov
cwde
inc
xor
call
push
mov
jmp
and
push
adc
(bad)
cmps
cmp
inc
xor
xchg
fwait
pop
retf
adc
or
(bad)
(bad)
push
add
test
in
mov
sub
push
xor
inc
test
(bad)
inc
lods
std
mov
dec
arpl
loop
jp
loope
mov
call
pop
add
adc
(bad)
inc
jb
cli
mov
imul
in
mov
lahf
and
cld
(bad)
(bad)
inc
out
popa
enter
repnz
fld
xchg
cmc
cs
test
pusha
or
adc
inc
jp
cli
retf
pushf
stos
push
sti
jno
mov
out
push
cmp
or
sti
and
xor
icebp
mov
push
out
in
ret
add
adc
movs
mov
(bad)
sbb
hlt
out
or
idiv
sahf
popf
inc
xchg
in
inc
sahf
mov
jne
(bad)
(bad)
push
and
and
in
cmp
out
xchg
add
movs
xchg
lahf
rcl
(bad)
(bad)
(bad)
jns
and
xchg
add
jmp
mov
cmp
xor
add
inc
cmps
pop
movs
(bad)
(bad)
(bad)
(bad)
cld
ja
cmc
arpl
mov
push
jns
adc
out
mov
dec
ins
(bad)
jge
pop
mov
xchg
(bad)
(bad)
(bad)
jmp
xlat
pop
call
add
push
es
mov
or
dec
rcl
dec
adc
jmp
pop
int3
pop
push
test
inc
rcr
ds
scas
(bad)
(bad)
(bad)
inc
neg
das
jl
pop
fwait
sbb
cs
mov
stos
ret
(bad)
push
pop
out
(bad)
(bad)
(bad)
jmp
xor
add
mov
das
aaa
and
lods
loop
stos
jno
in
std
pop
cmp
(bad)
(bad)
(bad)
jp
into
inc
popf
cmp
stc
push
sub
hlt
xor
outs
xchg
push
add
mov
push
xchg
(bad)
(bad)
(bad)
fild
cmps
or
ds
xchg
sbb
xlat
and
(bad)
xor
xchg
fcomip
(bad)
call
daa
retf
adc
out
ja
adc
inc
sub
ror
inc
mov
or
dec
dec
xor
in
pop
mov
(bad)
sbb
fst
das
fnstenv
push
lsl
(bad)
(bad)
(bad)
mov
xlat
repz
mov
rcr
sub
test
pop
(bad)
fst
das
pop
dec
fst
(bad)
(bad)
dec
fcmovnb
fmul
lds
test
ins
dec
gs
mov
mov
or
adc
jnp
dec
sbb
sub
push
call
std
scas
leave
xchg
jmp
fdivr
(bad)
jg
mov
popf
ins
jecxz
mov
push
mov
inc
pop
ins
bound
sbb
inc
and
jne
fwait
inc
adc
pop
ins
rcr
jge
mov
jmp
(bad)
(bad)
mov
addr16
cmp
iret
popa
imul
in
ins
popf
push
std
(bad)
(bad)
(bad)
(bad)
xor
mov
pop
int
(bad)
in
ins
mov
add
push
fist
ja
repz
pop
shl
iret
pop
(bad)
call
pop
outs
push
push
mov
clc
aad
sbb
xor
daa
and
adc
call
pop
mov
dec
push
pushf
jmp
in
scas
and
push
push
jp
adc
inc
xchg
add
(bad)
(bad)
mov
sbb
inc
xchg
call
imul
jmp
(bad)
inc
leave
add
lock
jb
pop
push
iret
mov
sub
push
or
(bad)
mov
call
popa
xchg
inc
sti
ins
femms
test
mov
(bad)
mov
mov
add
push
mov
xchg
loope
aas
scas
mov
outs
(bad)
(bad)
(bad)
(bad)
fstp
push
mov
inc
xchg
inc
ror
xor
call
add
mov
jbe
xchg
movs
mov
pop
loopne
push
sub
push
stos
mov
mov
jge
push
in
jmp
(bad)
(bad)
(bad)
(bad)
call
sti
mov
and
adc
jo
or
inc
into
push
imul
mov
aas
(bad)
(bad)
(bad)
inc
repnz
shl
movs
add
add
retf
sub
mov
inc
inc
jmp
pop
(bad)
call
jno
fwait
mov
add
xchg
stos
stc
ror
shr
cld
or
inc
xor
pop
fldcw
add
mov
cdq
xchg
outs
adc
out
pop
hlt
jmp
cmps
pop
mov
(bad)
repnz
int
mov
mov
adc
outs
repz
imul
repz
(bad)
(bad)
inc
dec
popa
sti
movs
mov
lods
cmps
sbb
push
push
mov
bound
or
(bad)
call
pop
push
fcmovu
mov
add
call
(bad)
(bad)
fistp
mov
sbb
shl
pop
out
cwde
or
cwde
loope
scas
push
push
sbb
jnp
or
test
push
or
scas
push
repz
outs
xor
mov
arpl
sar
mov
mov
cmp
and
les
inc
jo
xor
mov
mov
lds
fisttp
sbb
rol
inc
cwde
pushf
retf
fwait
inc
jae
cmp
fmul
(bad)
(bad)
dec
enter
test
ret
not
cli
mov
jg
in
pop
std
mov
call
add
jmp
add
fmul
sbb
cmps
int3
clc
inc
mov
jmp
das
jp
or
(bad)
idiv
add
jmp
jnp
jns
call
(bad)
jmp
add
lock
dec
jnp
lock
cmp
int3
jmp
retf
outs
fstp
mov
cmp
clc
jmp
or
sub
or
call
push
xchg
pop
inc
iret
pop
jae
call
jmp
and
cmps
retf
lods
inc
dec
inc
and
pop
or
(bad)
jmp
idiv
daa
gs
and
push
or
(bad)
ja
inc
mov
mov
(bad)
(bad)
push
xchg
cmp
add
inc
inc
pop
addr16
fcom
cwde
sbb
icebp
call
pop
stos
in
cwde
loopne
repz
jmp
xchg
mov
jns
pop
(bad)
(bad)
(bad)
mov
xchg
and
cli
arpl
fs
loope
add
push
scas
mov
and
jg
(bad)
call
pop
dec
and
(bad)
xchg
(bad)
popa
xor
and
out
imul
push
(bad)
(bad)
(bad)
inc
mov
nop
xor
or
aam
std
pop
outs
mov
lea
push
jmp
call
sbb
jmp
sub
movs
inc
lods
mov
call
pop
fild
(bad)
(bad)
jmp
inc
pop
inc
rcr
ss
xchg
sbb
push
inc
adc
push
imul
(bad)
jmp
xchg
xchg
and
push
dec
dec
adc
popf
cmp
xor
mov
(bad)
jmp
adc
inc
fadd
test
not
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jp
jge
mov
sub
jnp
sub
outs
adc
test
call
bound
(bad)
in
push
xor
xchg
jge
push
sub
loope
mov
lods
add
dec
or
(bad)
xchg
ret
int3
sbb
mov
fdivr
add
xchg
mov
addr16
test
lahf
fisubr
into
sahf
(bad)
push
mov
inc
and
mov
lahf
jbe
mov
add
std
mov
jecxz
(bad)
(bad)
jmp
ret
mov
mov
jmp
stos
popf
or
or
mov
(bad)
jg
mov
ja
inc
lea
aad
outs
xchg
push
mov
repnz
(bad)
(bad)
(bad)
call
retf
rol
pop
fiadd
out
xchg
imul
cmp
call
xchg
add
(bad)
call
ds
movs
jnp
mov
pop
icebp
inc
cmp
jge
mov
(bad)
(bad)
(bad)
(bad)
in
cmc
stos
daa
dec
mov
outs
les
mov
scas
ficom
dec
fbld
sbb
or
add
(bad)
fs
inc
jecxz
or
xchg
push
cmc
pushf
je
ins
(bad)
call
push
or
cmps
add
jne
daa
test
in
wrmsr
mov
(bad)
mov
push
adc
je
jecxz
(bad)
(bad)
call
adc
push
cs
out
outs
mov
aam
add
lock
dec
dec
stos
inc
out
sar
inc
adc
test
jge
jmp
(bad)
(bad)
inc
push
add
popa
jne
loop
jmp
jns
sbb
mov
jp
cld
(bad)
(bad)
jmp
inc
pushf
cwde
out
in
lahf
inc
mov
ret
gs
adc
call
jae
fwait
or
lea
cmp
lahf
push
sar
(bad)
push
or
scas
mov
adc
dec
cmp
repnz
xchg
and
push
fdivr
(bad)
(bad)
inc
lods
push
adc
mov
fld
lock
fwait
sub
loopne
xchg
xchg
(bad)
(bad)
(bad)
dec
js
inc
xchg
out
and
or
cwde
cdq
push
mov
jge
pop
cmp
add
cwde
(bad)
(bad)
ja
(bad)
(bad)
call
(bad)
jo
cdq
dec
mov
ins
neg
jecxz
fwait
leave
xchg
mov
inc
aas
add
hlt
(bad)
dec
and
gs
xlat
loopne
jl
push
fild
add
jp
retf
add
(bad)
call
push
cwde
nop
cmc
cmp
repnz
jbe
sti
cld
xchg
arpl
out
outs
sbb
mov
(bad)
(bad)
(bad)
js
lock
sti
mov
je
test
scas
aaa
leave
lock
jmp
mov
(bad)
(bad)
(bad)
fistp
xchg
inc
movs
dec
push
(bad)
in
dec
add
push
jl
push
dec
mov
or
(bad)
(bad)
(bad)
push
pop
arpl
pop
shr
adc
repnz
xchg
and
mov
jb
icebp
cli
mov
(bad)
(bad)
push
adc
outs
jecxz
push
fsub
dec
stos
movs
add
pop
or
int
pop
dec
pop
ret
(bad)
(bad)
inc
addr16
loop
in
(bad)
mov
jb
mov
pop
mov
push
mov
call
add
mov
and
cmp
inc
and
inc
fdivr
(bad)
(bad)
jmp
shld
push
pushf
inc
repz
ins
push
push
cmp
pop
adc
test
enter
sbb
dec
jge
pop
std
(bad)
jmp
inc
ins
repnz
mov
mov
jae
xchg
test
aas
aas
popf
call
(bad)
(bad)
dec
popfw
inc
push
(bad)
(bad)
push
das
sbb
out
cld
rcl
add
jmp
(bad)
(bad)
dec
add
rcr
xor
repz
es
in
jg
test
(bad)
(bad)
dec
in
adc
xchg
out
mov
fdiv
lds
popa
pop
into
fdivr
cmp
add
or
xchg
(bad)
(bad)
(bad)
(bad)
mov
mov
pop
sub
aas
arpl
pushf
test
cmps
adc
loop
(bad)
(bad)
(bad)
call
mov
repz
or
js
mov
jnp
or
sub
aam
(bad)
(bad)
(bad)
fild
int
mov
stos
imul
aad
(bad)
mov
in
or
mov
mov
call
aaa
aam
dec
imul
sub
(bad)
(bad)
inc
arpl
int3
loop
lock
sbb
in
(bad)
pop
cmp
arpl
jb
add
inc
sti
lods
cmp
sub
(bad)
call
stc
jno
dec
jbe
retf
das
xchg
inc
xor
mov
int
addr16
(bad)
(bad)
(bad)
jmp
push
sbb
cmp
aad
xor
lock
xchg
xor
and
xor
cmps
ins
mov
cmp
enter
jbe
mov
daa
lock
sar
(bad)
(bad)
jmp
mov
pop
je
cmp
mov
ret
and
and
inc
jb
imul
aaa
(bad)
(bad)
(bad)
push
popf
inc
mov
int3
or
mov
jne
out
cmp
bound
fst
sub
push
push
inc
call
scas
outs
(bad)
(bad)
(bad)
fstp
jl
sub
dec
xchg
bound
(bad)
mov
and
pop
and
pusha
xor
(bad)
jmp
pop
cwde
or
mov
(bad)
sbb
repz
or
(bad)
(bad)
mov
push
cmp
mov
or
mov
push
outs
mov
inc
pop
xlat
sbb
sbb
sub
iret
adc
jmp
shl
iret
sbb
pop
xchg
mov
fisub
push
lods
mov
push
push
xchg
(bad)
call
jle
push
sbb
loop
iret
test
es
sub
mov
enter
call
call
push
pop
push
cmp
in
jp
icebp
dec
loop
or
push
in
push
inc
test
mov
neg
mov
pushf
push
jl
rcl
imul
ret
cdq
and
(bad)
(bad)
(bad)
jmp
movs
test
jno
sbb
pop
cmp
lock
xchg
xchg
mov
mov
(bad)
(bad)
(bad)
jnp
xchg
sub
sbb
pop
add
xchg
pop
call
fsubr
int
dec
(bad)
in
stc
test
(bad)
(bad)
dec
jp
clc
sbb
inc
adc
add
mov
gs
into
test
xchg
mov
xchg
(bad)
(bad)
(bad)
push
xchg
outs
xchg
ds
loope
jb
mov
jecxz
sbb
push
mov
addr16
sbb
loope
pop
mov
push
push
add
mov
iret
pop
adc
ja
(bad)
mov
or
stos
in
or
sbb
es
jo
icebp
xchg
add
call
out
lods
scas
btc
mov
push
sbb
or
xchg
outs
jbe
(bad)
(bad)
(bad)
call
es
jno
pop
das
push
call
sbb
cwde
arpl
mov
clc
(bad)
(bad)
(bad)
mov
test
cmp
jo
ret
sbb
lods
imul
(bad)
out
test
aaa
and
shl
lock
sub
mov
push
aaa
mov
xchg
cs
jmp
movs
mov
dec
mov
mov
retf
mov
icebp
xlat
and
iret
lock
(bad)
(bad)
(bad)
call
xchg
push
push
(bad)
aam
fcmovne
sub
lea
add
das
pusha
aad
sbb
out
mov
xchg
xor
nop
mov
sar
inc
jp
jbe
adc
sahf
(bad)
(bad)
dec
jle
fmul
jbe
inc
pop
jnp
jne
push
jg
jmp
hlt
jmp
(bad)
jmp
pusha
lock
fs
push
scas
out
dec
stos
jmp
jecxz
cmp
adc
sar
(bad)
push
or
shr
sbb
mov
mov
fwait
(bad)
(bad)
(bad)
jg
cmp
rol
js
cdq
dec
xor
out
lea
aaa
enter
addr16
dec
cs
push
cmps
fucom
xchg
lahf
test
in
mov
std
(bad)
call
and
rcl
out
fsubp
cmp
jb
repz
pusha
dec
mov
jnp
ja
dec
pop
fdiv
xor
and
xchg
xchg
jo
and
cmc
in
(bad)
(bad)
inc
arpl
inc
mov
and
adc
lea
add
loopne
daa
es
in
xor
(bad)
(bad)
(bad)
clc
mov
inc
shl
fdivr
in
ficomp
adc
(bad)
lea
test
mov
or
call
jb
xchg
or
xor
fwait
aaa
repnz
mov
fdivr
adc
clc
fisttp
out
shr
(bad)
inc
aad
adc
cmp
mov
cmp
in
sbb
add
xor
(bad)
(bad)
inc
popa
add
retf
lds
ja
data16
aaa
mov
cmp
jp
rol
bound
mov
mov
jno
dec
fwait
adc
xchg
pop
mov
popa
inc
jmp
mov
sub
call
mov
stos
mov
pop
push
in
or
cli
mov
jno
jmp
repz
(bad)
(bad)
(bad)
jmp
jp
imul
push
(bad)
mul
mov
mov
cli
sar
xchg
or
adc
(bad)
call
mov
int3
test
sbb
cdq
call
pop
mov
mov
cmps
(bad)
(bad)
(bad)
push
mov
mov
icebp
adc
mov
mov
pusha
pop
jmp
jno
(bad)
(bad)
(bad)
call
xchg
cmp
movs
or
stos
xchg
and
jae
and
rol
inc
push
test
adc
mov
mov
adc
jg
movs
dec
in
inc
aaa
jmp
mov
rol
(bad)
(bad)
(bad)
call
arpl
inc
or
mov
ret
data16
inc
cmp
or
rol
dec
in
(bad)
(bad)
(bad)
dec
mov
xchg
push
sub
sbb
cmp
mov
add
fwait
and
mov
(bad)
ds
ret
jbe
in
and
sub
in
ds
sub
add
ss
push
(bad)
xchg
inc
push
push
cwde
out
xchg
(bad)
(bad)
call
rcl
shl
fucomip
cmp
out
dec
jp
mov
aam
jb
mov
das
sbb
cmp
adc
and
sbb
and
xor
pop
sti
sti
push
(bad)
(bad)
(bad)
mov
mov
xchg
and
idiv
pop
sub
retf
aad
or
aad
lods
cmps
outs
push
out
and
pushf
(bad)
inc
enter
pop
cmps
or
movs
and
mov
xor
(bad)
(bad)
(bad)
inc
cmc
mov
add
fisttp
xor
ss
lahf
mov
adc
stos
(bad)
jmp
adc
cmc
cmp
ds
jnp
test
(bad)
call
pusha
cmp
fldl2t
pusha
fwait
ss
loopne
jecxz
dec
xchg
inc
jo
call
(bad)
ds
xor
jnp
push
mov
xlat
loope
lods
popf
and
push
inc
xchg
ins
aad
cli
jle
add
lahf
(bad)
jbe
xchg
xchg
push
push
mov
out
push
fcom
inc
data16
cmp
enter
mov
cdq
retf
pusha
sbb
mov
and
xchg
imul
fdivr
(bad)
jg
(bad)
push
gs
fwait
dec
mov
(bad)
mov
add
and
(bad)
inc
sub
ins
daa
imul
jle
pop
imul
ret
push
mov
sbb
mov
ja
adc
sbb
xor
shl
out
mov
jno
ret
hlt
idiv
rcr
cmp
(bad)
call
sbb
inc
fsub
icebp
add
mov
xchg
mov
xor
jmp
(bad)
(bad)
push
fcomp
rcr
pop
mov
push
repz
fisttp
hlt
xchg
mov
mov
(bad)
(bad)
call
call
or
sbb
test
arpl
(bad)
inc
out
test
int3
push
fadd
out
(bad)
(bad)
call
mov
push
rol
fist
lea
mov
out
sub
stos
or
iret
(bad)
(bad)
(bad)
inc
push
sbb
cs
out
int
pop
sbb
(bad)
aad
mov
nop
out
rcl
aaa
ret
jmp
adc
jge
retf
and
push
fisttp
(bad)
aam
in
(bad)
fcomip
(bad)
mov
mov
xchg
sbb
int
inc
pop
mov
sub
push
(bad)
call
gs
mov
fistp
jae
ds
add
mov
(bad)
(bad)
push
(bad)
les
mov
inc
adc
shr
out
inc
pop
lock
test
std
jle
hlt
jno
sub
fcmovne
sbb
xlat
into
pop
sub
mov
xchg
pop
(bad)
cmp
loopne
(bad)
(bad)
inc
sbb
test
mov
das
pop
dec
fdivr
es
(bad)
call
fldcw
fdiv
enter
jmp
(bad)
out
mov
xor
jmp
cmp
or
sbb
mov
dec
imul
lock
jmp
and
jne
push
adc
pop
ror
(bad)
jle
fwait
mov
jle
cmps
ror
cmp
(bad)
add
cli
fistp
aas
(bad)
mov
mov
test
ds
and
(bad)
(bad)
call
push
cmp
sbb
mov
loop
(bad)
subps
mov
popa
arpl
(bad)
fcomip
cmp
ficom
fmul
pop
imul
xlat
mov
fcmovu
inc
pop
inc
(bad)
(bad)
(bad)
inc
cmp
xchg
sub
fnstsw
adc
or
rcr
jns
and
inc
xchg
nop
mov
(bad)
(bad)
(bad)
stc
iret
aaa
push
inc
imul
ror
mov
cdq
lock
fmul
cmp
sub
(bad)
call
push
push
rol
mov
sbb
ins
adc
sbb
mov
mov
(bad)
dec
rcr
sub
xor
cmp
or
stc
fst
xchg
in
clc
(bad)
(bad)
jmp
(bad)
nop
dec
inc
sahf
pop
leave
aad
sub
lock
xchg
pop
fsubr
jecxz
jnp
lock
out
enter
in
jp
(bad)
(bad)
call
mov
stos
scas
mov
mov
pop
jp
fmul
adc
(bad)
rcr
pop
xchg
(bad)
(bad)
(bad)
call
mov
outs
mov
mov
dec
jp
jmp
movs
scas
(bad)
(bad)
dec
shr
sbb
or
cmp
(bad)
sbb
mov
or
sti
mov
stos
xchg
retf
pop
mov
jl
jne
and
pusha
out
push
leave
loope
inc
icebp
mov
stos
jg
cli
test
into
dec
push
imul
mov
cmps
repnz
mov
lods
or
mov
or
dec
xor
mov
push
xchg
adc
mov
mov
popa
cmp
push
retf
ss
dec
mov
adc
mov
pop
in
push
(bad)
mov
retf
enter
int3
xor
(bad)
jb
mov
in
test
push
jmp
out
sbb
mov
mov
adc
(bad)
(bad)
mov
and
sub
mov
ss
xor
mov
(bad)
leave
mov
cmp
jmp
iret
xchg
scas
adc
dec
fidivr
(bad)
and
sub
pop
cli
imul
inc
sbb
ins
fisub
jp
ror
lahf
cmp
cmp
(bad)
(bad)
(bad)
(bad)
fadd
retf
hlt
sub
cdq
sar
int
sub
popf
dec
das
mov
add
mov
push
fsubp
mov
mov
leave
aaa
cmp
jl
dec
mov
cmp
jecxz
aas
js
arpl
pop
or
aad
dec
(bad)
call
fstp
push
jecxz
cmp
cmp
shl
icebp
or
call
std
(bad)
(bad)
inc
fwait
mov
lahf
nop
(bad)
rol
fimul
push
add
mov
(bad)
call
cli
lahf
rol
sbb
rcr
cmp
fcomip
ins
(bad)
xor
(bad)
(bad)
call
xor
and
sbb
sbb
sahf
iret
xchg
jmp
jg
sti
outs
push
add
dec
lods
pop
or
jmp
(bad)
mov
jmp
inc
scas
int3
ret
adc
dec
scas
mov
int
les
icebp
(bad)
(bad)
(bad)
cld
dec
ficomp
jmp
add
cs
hlt
jl
jmp
into
push
xor
cld
iret
(bad)
fcomip
fist
cwde
pop
sub
cmp
inc
add
and
cli
fcomip
cld
lock
mov
pop
cld
sub
(bad)
mov
add
iret
cmp
lock
aad
(bad)
(bad)
inc
dec
mov
sahf
ret
sub
lds
push
xchg
(bad)
out
mov
pop
iret
cmp
pop
mov
(bad)
jmp
inc
adc
dec
fisubr
jno
div
mov
imul
fs
jne
sbb
dec
mov
sbb
pop
inc
pop
(bad)
popf
cmp
jle
retf
xchg
test
scas
fcom
repnz
inc
sbb
jl
xchg
fld
fimul
jp
(bad)
in
jl
rcl
sbb
retf
(bad)
call
mov
push
imul
sub
ret
mov
jo
out
jmp
sbb
sbb
push
in
fst
bound
std
cwde
aaa
inc
(bad)
mov
iret
xchg
ror
cmc
mov
fcmove
sar
stc
add
(bad)
(bad)
fld
leave
and
or
into
sbb
cmp
shl
stc
inc
ficom
lea
mov
adc
push
mov
aam
(bad)
mov
inc
and
in
(bad)
sbb
push
pop
pop
or
push
adc
and
call
dec
test
retf
jns
shl
test
ss
or
call
add
inc
mov
(bad)
push
xlat
je
int
cwde
jmp
aas
ret
(bad)
outs
push
ds
jg
and
in
pop
sbb
cld
enter
sbb
stos
(bad)
dec
aam
(bad)
sub
pcmpgtd
call
dec
rcl
and
cld
call
ins
mov
test
pop
jg
(bad)
(bad)
call
inc
mov
cmp
loope
adc
add
cmp
jmp
inc
scas
dec
fiadd
call
shr
jmp
xchg
add
enter
jg
cld
dec
sub
in
shl
loope
sar
(bad)
(bad)
jge
pop
enter
sti
xor
fadd
xchg
std
jg
aas
xchg
ud0
daa
adc
loope
sub
mov
or
std
jmp
xchg
bound
rcr
retf
(bad)
push
mov
cmp
call
jg
outs
push
xlat
inc
retf
movs
loope
sub
mov
dec
loopne
retf
mov
(bad)
(bad)
inc
mov
fstp
add
fcmovnbe
call
dec
test
add
mov
mov
retf
xor
aas
add
inc
or
push
out
int
jae
movs
iret
ja
(bad)
inc
or
mov
pop
or
fdivr
and
es
stos
cld
lahf
loope
call
loop
xchg
lock
jle
aam
dec
mov
call
(bad)
(bad)
call
mov
xchg
test
stos
fist
cs
inc
fmul
push
mov
(bad)
(bad)
(bad)
stc
ins
inc
mov
retf
inc
addr16
mov
sbb
fxch
scas
(bad)
mov
mov
leave
lods
push
cmp
jp
(bad)
repz
sub
movs
mov
mov
call
dec
ds
fsub
mov
cmps
sub
fist
and
(bad)
(bad)
mov
mov
scas
fbld
(bad)
cs
lods
cmps
aas
or
das
ror
(bad)
mov
inc
push
cwde
pop
addr16
lahf
add
cmp
scas
(bad)
and
sub
adc
aam
dec
fstp
(bad)
enter
jno
(bad)
(bad)
(bad)
push
mov
inc
sbb
jmp
dec
sbb
cwde
test
mov
fcmovnb
call
mov
call
xchg
pop
inc
int
rol
loop
int3
xor
pop
sub
enter
rcl
inc
call
sbb
xchg
pop
sar
rcl
xchg
mov
dec
fsin
(bad)
aas
mov
xchg
(bad)
(bad)
dec
icebp
pop
adc
(bad)
sub
repz
clc
out
or
cmp
add
xlat
or
call
mov
xchg
jnp
mov
pop
fimul
mov
mov
jmp
mov
clc
fcomp
inc
sub
jg
es
jg
mov
push
dec
mov
mov
and
or
fistp
cmps
(bad)
(bad)
(bad)
call
fimul
ja
aad
sbb
jg
jmp
dec
popa
mov
pusha
push
and
loop
lds
mov
inc
mov
xchg
and
or
xlat
xor
(bad)
jmp
shl
das
xchg
fwait
push
push
xchg
inc
clc
lds
(bad)
les
add
inc
inc
popf
mov
jge
push
jg
and
adc
dec
add
call
pop
xor
mov
xrelease
push
lock
(bad)
cdq
cmp
dec
out
out
add
(bad)
(bad)
call
nop
cmp
ret
inc
inc
int
out
shl
in
xor
sbb
dec
fisttp
popa
mov
dec
rol
mov
adc
sub
fist
or
mov
(bad)
(bad)
(bad)
in
sub
imul
sub
call
fnstenv
(bad)
mov
dec
mov
lea
sar
(bad)
dec
into
mov
pop
shr
out
movs
push
sub
inc
dec
movs
adc
xor
(bad)
and
inc
mov
mov
(bad)
(bad)
(bad)
mov
sbb
push
arpl
xchg
hlt
rcl
in
mov
xchg
and
(bad)
xchg
icebp
mov
imul
js
mov
loope
push
dec
sar
lods
fadd
push
iret
fs
jmp
(bad)
(bad)
(bad)
call
mov
mov
bound
and
out
and
in
shl
fcomip
call
call
fcom
mov
push
call
(bad)
(bad)
jl
js
xchg
icebp
rcl
xor
test
cwde
add
or
call
jecxz
fsub
push
mov
push
aas
inc
mov
enter
mov
lock
repnz
xor
cmps
cs
(bad)
(bad)
(bad)
(bad)
dec
gs
outs
dec
loopne
lahf
cmps
push
cmp
fdivr
out
test
add
inc
mov
jae
cs
(bad)
(bad)
push
out
xchg
mov
push
in
fild
mov
cmc
push
ficomp
call
(bad)
jae
rdmsr
cwde
lock
mov
pop
inc
adc
pop
jmp
jmp
jmp
sahf
mov
lea
dec
stos
lods
xor
clc
(bad)
cld
test
push
dec
push
push
(bad)
fadd
in
pop
xor
or
aas
aad
dec
aaa
jb
aaa
push
dec
fmul
sbb
xchg
add
(bad)
jg
sbb
idiv
cmp
outs
pop
mov
fwait
cwde
push
or
cdq
or
(bad)
jmp
popa
cmc
sahf
pop
imul
stos
xor
jbe
adc
dec
outs
jge
(bad)
(bad)
jmp
ror
daa
fidivr
in
mov
sti
sti
push
lea
xor
into
popf
mov
and
inc
add
cwde
xchg
loope
fist
push
dec
jmp
xchg
out
and
(bad)
(bad)
jg
mov
fcomip
or
enter
ins
or
jge
call
(bad)
fmul
sub
(bad)
(bad)
(bad)
jg
pop
fidiv
fst
cdq
lods
adc
fdiv
xchg
sub
jno
sbb
out
cli
inc
outs
retf
sbb
xor
inc
ficomp
out
cmp
and
loope
(bad)
fcmovnu
out
add
sub
fsub
mov
xchg
sar
lahf
stos
push
add
enter
jbe
(bad)
dec
jle
enter
jmp
pop
xor
dec
imul
retf
les
retf
les
xor
stos
mov
out
divps
jnp
ret
(bad)
(bad)
dec
es
cli
out
int
(bad)
push
mov
sbb
adc
sub
sbb
xchg
(bad)
out
cli
pop
mov
mov
ret
ss
xlat
or
jecxz
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
sti
push
mov
or
lea
xchg
js
push
movs
int
(bad)
(bad)
jmp
inc
dec
or
retf
(bad)
(bad)
inc
pop
push
mov
cwde
cmps
cli
cwde
scas
ret
repz
pusha
push
mov
cmps
sub
xor
inc
in
into
stos
sbb
retf
fdivr
xor
stos
test
cmp
bnd
push
mov
inc
inc
jle
push
(bad)
call
mov
pop
xchg
ret
aad
ret
lahf
pusha
sahf
sbb
lahf
add
in
sbb
cmps
jmp
mov
adc
add
icebp
inc
jmp
or
les
mov
mov
cli
(bad)
(bad)
(bad)
call
ret
test
pop
cwde
int
shr
adc
fisttp
mov
mov
xchg
mov
pop
iret
ins
inc
sar
pop
jmp
data16
jmp
cmp
mov
jg
sub
popa
mov
pop
xchg
mov
add
mov
int3
ds
in
push
xor
aad
jg
jbe
(bad)
repnz
repz
(bad)
call
jmp
nop
cmp
cld
jg
fidivr
(bad)
out
and
dec
ret
sahf
push
stos
push
sub
push
add
shr
sar
call
cmp
or
jge
call
dec
or
xchg
adc
test
cmp
in
rcl
loope
(bad)
out
popf
dec
cmp
jb
inc
scas
or
jmp
mov
pop
or
sub
mov
cmp
loopne
dec
cmp
es
jae
push
mov
cmps
cmp
inc
inc
and
push
mov
(bad)
call
jg
mov
sbb
or
dec
cmps
cmps
loope
jle
ins
int
stos
mov
push
lds
dec
aas
aas
das
hlt
push
repz
cmc
pop
cmp
(bad)
dec
mov
packuswb
sbb
pop
push
fld
arpl
fsubrp
or
or
pop
inc
(bad)
cld
mov
call
or
lea
inc
or
rol
aas
aas
push
(bad)
(bad)
aas
sub
jle
in
pop
sbb
dec
xlat
mov
lahf
push
fild
mov
lds
(bad)
(bad)
push
vrcpss
inc
arpl
out
sbb
sar
frstor
mov
push
mov
aaa
and
sub
leave
scas
inc
rcr
pop
sbb
aas
(bad)
(bad)
(bad)
fnstcw
push
daa
fstp
cs
call
leave
cs
fbld
mov
jnp
(bad)
(bad)
push
sub
cmps
mov
pop
or
pop
cmc
int
adc
dec
jmp
xchg
lea
xlat
(bad)
call
dec
int3
mov
icebp
loop
xor
cli
hlt
sar
mov
cli
dec
xchg
lahf
and
fucomi
retf
(bad)
in
jne
hlt
pop
ds
(bad)
inc
in
adc
add
xchg
or
pop
shr
(bad)
jmp
movs
lds
retf
iret
add
push
add
dec
inc
int3
push
iret
ja
push
pop
out
ds
(bad)
or
(bad)
inc
outs
cmps
push
jo
rcl
clc
nop
pop
call
(bad)
(bad)
mov
pop
mov
int
push
lds
and
cmp
(bad)
jmp
jnp
cmp
ret
mov
push
loopne
or
cmc
sbb
and
jp
repnz
icebp
jo
movs
mov
rcr
jmp
dec
lock
cmp
mov
fldln2
out
dec
loopne
jno
xchg
push
rcr
push
pop
call
les
out
aaa
xor
jg
call
jmp
fidivr
(bad)
cld
leave
dec
inc
lahf
mov
push
cmp
mov
or
jg
adc
(bad)
(bad)
jmp
sti
inc
adc
jmp
xor
aad
jbe
jmp
stos
scas
call
cmp
pop
mov
push
mov
(bad)
call
jmp
ror
sub
lds
je
inc
sub
jnp
clc
(bad)
(bad)
inc
jo
mov
loope
or
pop
dec
push
int3
daa
out
pop
cmp
push
pop
fld
sub
or
push
sub
pop
xchg
ret
xchg
out
retf
pop
xor
inc
mov
inc
add
pop
aaa
aam
mov
enter
stos
cmps
mov
sbb
lods
into
(bad)
call
push
jle
leave
xor
shufps
push
fld
inc
pop
es
inc
popf
jg
push
pop
mov
jle
jmp
jb
dec
aad
mov
inc
pop
imul
jge
push
cmp
jmp
mov
fwait
(bad)
push
retf
or
pushf
outs
or
add
xor
push
jp
pushf
hlt
dec
(bad)
(bad)
dec
jmp
stc
test
mov
and
jp
mov
(bad)
(bad)
(bad)
(bad)
mov
call
mov
mov
movs
mov
add
sub
push
lahf
in
dec
sub
retf
in
dec
leave
xchg
push
cwde
push
retf
lock
leave
lods
ret
repz
imul
dec
data16
adc
or
sub
mov
hlt
(bad)
(bad)
jmp
dec
cmps
add
add
mov
adc
sti
popf
push
add
call
mov
fistp
and
mov
cmp
mov
sar
mov
push
std
outs
cs
and
dec
stos
or
ds
std
cmp
ret
(bad)
shl
movs
dec
xchg
cmps
(bad)
(bad)
(bad)
jmp
arpl
jbe
scas
lahf
stc
jp
leave
int3
pop
add
int3
mov
popa
in
ror
ret
popa
fist
das
mov
inc
push
ja
jle
jmp
outs
or
in
cmp
les
and
sar
cmc
test
adc
cdq
(bad)
in
out
dec
mov
fwait
and
push
mov
imul
lahf
push
and
jmp
dec
stos
iret
push
fnstsw
in
mov
xor
mov
add
jne
add
mov
not
sbb
mov
sub
lds
sub
cmps
xchg
test
test
(bad)
(bad)
jmp
fild
fistp
lock
nop
out
enter
or
push
jmp
cmp
(bad)
call
pusha
and
outs
fist
push
in
pop
int
call
(bad)
push
pop
xor
and
adc
mul
and
(bad)
mov
inc
cmp
mov
vpcmpeqd
push
ret
fdiv
mov
jns
push
push
xchg
(bad)
dec
into
mov
xor
popf
mov
(bad)
(bad)
call
mov
fnstcw
inc
inc
xchg
jmp
arpl
and
mov
(bad)
sti
(bad)
outs
mov
call
dec
stc
or
xor
mov
xchg
pushf
fcmovnb
sbb
fldcw
xor
(bad)
jmp
stc
dec
xchg
cmp
xor
mov
mov
ja
or
mov
cld
outs
inc
imul
cmp
mov
inc
mov
xor
mov
pop
xchg
adc
(bad)
(bad)
(bad)
jg
fwait
es
int3
mov
iret
push
push
pop
fisttp
pop
sub
je
scas
or
cli
(bad)
(bad)
jmp
stc
leave
dec
sub
cs
ss
xor
mov
adc
and
xlat
adc
call
cmps
jmp
adc
dec
das
inc
(bad)
fsubr
lahf
adc
push
xor
(bad)
(bad)
push
std
mov
call
frstor
(bad)
int3
outs
pop
xchg
int
aad
aaa
mov
inc
test
(bad)
dec
push
jb
jle
jge
in
jmp
js
shl
fcmovbe
js
sar
(bad)
(bad)
(bad)
std
lock
into
fdiv
push
pop
jae
or
jl
int3
mov
pop
add
mov
pop
shl
int
add
sar
xor
adc
pop
int3
lods
pop
cwde
into
sub
jmp
jle
stos
xlat
sub
std
pop
xor
push
mov
adc
mov
in
rol
enter
xchg
adc
pop
mov
popf
ins
push
xlat
inc
fdivr
push
mov
xchg
adc
add
ja
add
out
lahf
test
test
(bad)
(bad)
(bad)
jmp
and
xchg
push
test
fidivr
mov
or
fdivp
inc
mov
or
or
push
cmp
mov
cmp
push
mov
push
cmp
xchg
or
cmp
or
jne
sub
repnz
movs
jns
stos
loope
xlat
ucomiss
(bad)
(bad)
(bad)
in
outs
les
scas
mov
xlat
mov
xchg
out
es
push
rcr
xchg
(bad)
mov
test
jg
xlat
sub
add
shl
xlat
out
mov
mov
call
into
mov
push
ins
jmp
xchg
sub
xchg
(bad)
call
adc
pushf
cmp
xchg
or
test
lahf
dec
aas
jbe
aaa
call
pop
mov
push
mov
aam
jl
mov
cmp
fist
popa
les
sahf
jp
dec
(bad)
sub
inc
inc
or
jmp
mov
push
aad
xchg
inc
test
jmp
retf
jne
pcmpgtb
sbb
mov
(bad)
(bad)
push
mov
fs
out
or
inc
loop
sbb
(bad)
cdq
sbb
in
sub
sar
leave
xor
push
mov
mov
xchg
jg
push
push
add
jmp
dec
jb
dec
add
(bad)
(bad)
inc
mov
(bad)
cmp
das
inc
inc
xor
push
sar
fcomi
add
cmc
(bad)
jmp
mov
add
popa
es
sub
int
push
xlat
mov
jle
aad
stos
sub
aad
xor
into
(bad)
(bad)
(bad)
jmp
mov
cwde
mov
fwait
iret
sub
mov
lods
int3
fidiv
lock
(bad)
(bad)
(bad)
dec
into
in
sbb
(bad)
ror
push
retf
dec
retf
leave
lods
(bad)
cmps
in
xchg
addr16
call
les
or
stc
inc
xchg
leave
jl
(bad)
(bad)
(bad)
dec
les
inc
cmps
or
scas
add
xor
lods
jmp
loop
mov
sar
xchg
pushf
jno
seta
sub
iret
mov
int3
cmp
fnstsw
inc
jmp
mov
mov
inc
int
iret
jne
ret
fcomip
retf
mov
movs
xchg
sub
scas
push
es
mov
(bad)
cmp
lea
pushf
cwde
ds
inc
jae
pop
mov
cli
(bad)
push
loopne
xchg
mov
pop
ret
or
je
push
cmp
mov
pusha
das
mov
les
or
data16
dec
loop
pop
aaa
(bad)
(bad)
call
ds
sub
lock
(bad)
and
mov
fnstenv
js
jno
aam
pop
mov
(bad)
call
in
and
or
pop
hlt
out
dec
mov
out
ja
ret
push
(bad)
lahf
push
fsub
fcom
xchg
xchg
(bad)
jmp
jg
xor
dec
lock
and
xchg
dec
pop
or
sbb
(bad)
(bad)
call
in
xchg
push
inc
movs
mov
jbe
dec
pop
popf
adc
pop
or
xchg
push
inc
mov
(bad)
(bad)
(bad)
dec
sahf
inc
aaa
sbb
add
sbb
pop
repnz
jbe
dec
adc
or
(bad)
jmp
sub
add
shl
jno
sbb
xor
sbb
out
retf
add
(bad)
inc
inc
popf
pop
data16
pop
lea
push
inc
mov
pop
inc
clc
dec
inc
int3
pop
fs
sbb
in
rcl
test
jnp
dec
adc
inc
xor
shl
sub
mov
cwde
adc
dec
pop
jmp
jmp
(bad)
pop
mov
repz
cmps
fmul
lahf
inc
ds
pop
or
int
push
cmps
sub
xlat
dec
inc
retf
push
pop
pop
shl
sub
add
test
(bad)
mov
mov
or
cs
push
adc
xchg
pop
cmp
push
fs
ror
push
inc
not
jmp
mov
inc
xor
push
dec
pop
or
cmps
loope
les
call
in
jb
dec
inc
mov
test
(bad)
in
call
test
sub
add
daa
cmps
inc
fwait
adc
dec
push
pop
sbb
jecxz
rcr
mov
mov
pushf
adc
or
sub
push
inc
dec
mov
sbb
mov
push
shl
cld
mov
jmp
adc
sbb
add
sbb
mov
(bad)
mov
jg
jmp
fimul
xchg
adc
xchg
and
loop
(bad)
fwait
adc
idiv
das
mov
xlat
loopne
retf
push
inc
mov
sbb
pop
lea
sub
pop
lock
(bad)
push
mov
dec
inc
int
xor
push
or
push
ins
cmps
push
inc
jp
push
dec
inc
retf
adc
mov
or
fs
repnz
out
call
loopne
sbb
xlat
pop
test
sub
jo
sbb
cwde
inc
ds
pop
pop
or
loop
cmps
inc
repnz
and
push
inc
lahf
inc
xor
mov
(bad)
mov
lds
dec
cmc
xchg
cmps
sbb
loop
add
sub
mov
lahf
adc
pop
or
sbb
dec
cmps
lock
jb
inc
adc
cld
push
adc
ret
inc
call
pop
inc
push
test
jns
push
push
xchg
mov
(bad)
into
push
xor
push
or
mov
push
dec
int3
adc
aas
or
test
aaa
std
push
in
xchg
inc
movs
pop
fld
in
retf
inc
push
into
inc
(bad)
test
(bad)
mov
int3
jle
leave
add
cmp
lds
inc
xchg
jmp
(bad)
(bad)
(bad)
dec
aad
mov
ds
in
xchg
jmp
or
pop
jmp
inc
in
and
aas
push
test
ds
(bad)
push
jg
adc
dec
fsub
cmps
push
pmaddwd
sahf
fcmovnb
sbb
iret
mov
ss
jle
jge
das
aaa
inc
or
bsf
(bad)
(bad)
dec
adc
or
jmp
jne
push
cmp
mov
sub
and
(bad)
aas
xor
fbstp
jg
inc
pop
sbb
sub
int
lods
in
push
iret
aaa
mov
ret
(bad)
stos
inc
jns
aaa
lock
(bad)
fdiv
cmps
out
bswap
ds
add
mov
cmp
retf
push
test
stc
fwait
sbb
stc
inc
mov
(bad)
dec
sub
push
mov
aas
in
int3
xchg
dec
in
pop
dec
cmp
retf
test
dec
ins
call
jmp
je
fstp
xchg
cmp
dec
and
inc
and
inc
(bad)
(bad)
(bad)
jmp
leave
lock
xchg
into
mov
je
fbld
popf
test
mov
enter
aam
pop
mov
(bad)
call
in
sti
test
jecxz
fldenv
push
ins
mov
push
scas
(bad)
jl
(bad)
dec
sub
xchg
int
outs
mov
stos
sahf
xchg
mov
push
ret
push
push
scas
(bad)
(bad)
(bad)
push
aas
adc
arpl
push
std
hlt
retf
push
add
pop
push
cmps
test
fdivr
(bad)
(bad)
(bad)
jmp
cli
rep
cmps
out
jmp
xor
mov
call
sbb
xchg
add
inc
mov
jo
test
test
movs
imul
mov
inc
add
lock
in
popf
(bad)
(bad)
(bad)
jmp
mov
aaa
ret
out
ins
(bad)
out
or
xchg
adc
scas
add
dec
push
clc
inc
mov
dec
je
rcr
mov
cmp
call
push
mov
bnd
mov
and
mov
xchg
mov
fucomp
imul
mov
retf
dec
jmp
fldz
mov
test
mov
gs
pop
shl
jmp
test
rol
arpl
push
aad
xchg
mov
xchg
cmp
push
dec
mov
xor
fwait
push
inc
mov
(bad)
nop
dec
fxch
sbb
push
js
or
scas
(bad)
dec
sub
xchg
repnz
cmp
fstp
rcr
xchg
outs
stos
adc
(bad)
(bad)
(bad)
push
dec
jmp
popa
lods
mov
out
imul
movs
mov
(bad)
or
stos
sub
scas
(bad)
(bad)
(bad)
call
cwde
mov
sbb
cmp
push
ror
push
pop
in
mov
pop
sbb
scas
pop
or
add
leave
or
xchg
jnp
nop
gs
adc
inc
enter
inc
dec
adc
aam
push
int3
js
inc
jae
nop
fxch
loopne
aas
stos
fmul
(bad)
(bad)
(bad)
jmp
fcmovb
push
or
fmul
cdq
scas
out
nop
mov
ret
in
sbb
pop
call
(bad)
jmp
loope
in
out
xor
pop
adc
fidivr
pop
(bad)
(bad)
(bad)
dec
ret
push
cmps
test
call
dec
mov
test
mov
(bad)
(bad)
(bad)
call
xchg
dec
mov
sbb
fcmove
and
push
sub
pop
xchg
sub
xor
cmp
ficomp
nop
pushf
mov
(bad)
(bad)
(bad)
(bad)
in
sub
dec
shr
test
jmp
mov
mul
outs
fbstp
call
(bad)
jmp
or
std
jge
(bad)
adc
jne
sub
pop
dec
sbb
and
fimul
add
idiv
(bad)
jmp
mov
pop
dec
sti
lods
or
inc
cld
retf
push
xchg
sub
xchg
addr16
adc
(bad)
(bad)
call
iret
test
mov
fadd
cwde
jnp
pop
jb
(bad)
(bad)
loop
cmp
(bad)
mov
icebp
ficom
ret
or
fcmovu
je
mov
out
ja
mov
fadd
mov
pop
fiadd
dec
in
in
in
clc
test
xchg
in
mov
pop
dec
ror
pusha
mov
(bad)
(bad)
call
out
nop
imul
push
scas
xor
movs
dec
mov
push
mov
dec
mov
xchg
push
jle
sahf
jl
xchg
lock
addr16
push
push
cld
jmp
(bad)
out
sub
dec
ret
fidivr
jmp
in
adc
aaa
cli
mov
inc
sbb
test
(bad)
(bad)
(bad)
clc
push
int
clc
dec
and
pop
pop
sbb
nop
mov
add
loop
loopne
dec
dec
cli
jg
adc
mov
inc
scas
retf
pop
cdq
jge
dec
retf
jge
dec
sti
push
fwait
call
push
dec
fidivr
jnp
adc
add
fld
fmulp
cmps
fidiv
(bad)
push
fcmovne
or
clc
stc
(bad)
(bad)
(bad)
mov
les
xchg
mov
push
in
sahf
pop
sti
inc
mov
fnstsw
mov
ss
mov
fdivr
dec
xchg
not
jmp
call
push
mov
xor
hlt
dec
in
fadd
dec
mov
sbb
(bad)
call
sahf
push
jl
pop
(bad)
xchg
repz
mov
xchg
sahf
fisubr
mov
imul
rcr
jmp
shl
jmp
test
or
lods
cs
call
retf
dec
sub
(bad)
(bad)
inc
or
loope
mov
pop
or
fwait
adc
xchg
stc
(bad)
(bad)
(bad)
jnp
ret
inc
popf
sub
sbb
xchg
pop
inc
mov
sub
(bad)
(bad)
mov
in
ins
scas
pop
neg
fist
xchg
or
(bad)
fisttp
retf
stos
mov
aaa
fidivr
jmp
dec
scas
inc
ficomp
jecxz
jmp
dec
stos
mov
jmp
test
mov
(bad)
xor
(bad)
(bad)
mov
push
dec
mov
fs
inc
repnz
loopne
push
ficom
(bad)
(bad)
aaa
(bad)
inc
jae
push
jg
pop
xchg
das
repz
(bad)
cmps
aaa
stos
imul
popf
(bad)
in
js
sbb
cmp
cmp
xlat
pop
mov
lock
sub
jmp
(bad)
mov
std
jp
test
dec
jb
lock
mov
sub
fmul
ficom
loope
jmp
pop
fsubr
xchg
inc
scas
int3
push
xlat
or
jl
lds
inc
fiadd
(bad)
clc
(bad)
inc
jmp
in
cwde
cmps
push
dec
inc
adc
pop
sbb
xchg
aad
out
outs
fcomip
jmp
arpl
push
xchg
fcmovnu
jae
jmp
inc
fs
jmp
mov
sar
mov
xchg
jbe
fnstenv
pop
push
xchg
mov
leave
call
test
pop
and
sbb
into
push
inc
cmc
jg
lods
clc
inc
out
add
fimul
xchg
add
fstp
pop
and
ret
xor
mov
jnp
(bad)
call
inc
sar
mov
mov
movs
mov
(bad)
mov
clc
fild
test
scas
dec
and
dec
sbb
and
push
push
cmpxchg
fimul
scas
jecxz
jmp
mov
mov
xchg
sub
pusha
pop
inc
int3
jg
sbb
inc
lahf
(bad)
(bad)
jg
neg
stos
push
dec
inc
inc
mov
sub
dec
and
ror
(bad)
jmp
retf
mov
mov
fcomp
and
call
lds
(bad)
jg
xchg
jmp
push
mov
fcmovnu
fdivr
rcr
dec
xchg
ret
mov
(bad)
sub
arpl
mov
(bad)
inc
mov
(bad)
rcr
out
push
ffree
dec
mov
jb
stos
(bad)
fistp
pop
(bad)
sub
shl
cmp
fdivr
jmp
xchg
dec
sar
push
cld
cmp
ficom
or
cmps
fisub
(bad)
(bad)
fbld
lods
test
pop
fdivrp
sub
test
mov
data16
pop
mov
dec
or
or
fidivr
push
maxps
fwait
adc
(bad)
jmp
dec
xchg
outs
or
sub
lods
inc
pushf
in
cmp
inc
out
ror
sub
(bad)
(bad)
dec
or
fmul
jmp
ins
scas
mov
mov
mov
fisub
test
(bad)
dec
mov
jmp
dec
cld
inc
fistp
sbb
jmp
js
fptan
fiadd
jnp
push
sbb
movs
call
sti
shr
enter
data16
jmp
push
inc
mov
lock
(bad)
fist
std
mov
jbe
push
jg
push
shr
ret
ss
push
loop
(bad)
fisttp
jns
pop
ret
inc
sar
mov
mov
fisubr
fbld
cld
mov
cmp
sub
scas
(bad)
jmp
jnp
fimul
or
add
sti
cld
(bad)
or
lock
je
inc
scas
pushf
push
test
lds
bound
cdq
jns
cli
adc
mov
(bad)
in
lahf
stos
add
inc
mov
sub
rcr
mov
fisubr
fbstp
push
mov
pop
pop
and
and
out
hlt
test
cmp
jmp
or
int
call
dec
mov
in
mov
sub
call
or
jecxz
ficomp
xchg
mov
cmc
fdivp
dec
lock
cmp
push
std
arpl
pushf
push
adc
fcmovb
add
xchg
dec
mov
xchg
add
sub
(bad)
cmps
(bad)
mov
lods
addr16
(bad)
ficom
ins
scas
adc
in
jns
(bad)
(bad)
cmc
dec
jmp
mov
lods
jmp
xchg
(bad)
(bad)
jg
fiadd
(bad)
stos
adc
in
sub
outs
or
loop
mov
call
push
mov
in
pop
dec
stc
stos
pop
add
ret
adc
sbb
pusha
call
cld
or
jnp
dec
ficomp
add
dec
call
adc
or
push
les
lods
fcomp
(bad)
ret
or
mov
scas
jmp
xchg
mov
fld1
cmp
jmp
dec
jmp
push
fimul
(bad)
(bad)
mov
inc
lock
shl
mov
lea
mov
fsubr
(bad)
jmp
xchg
mov
outs
(bad)
cld
adc
sbb
xchg
jecxz
xlat
cwde
pop
dec
movs
dec
(bad)
(bad)
inc
mov
push
(bad)
ror
call
push
test
out
fsub
inc
(bad)
(bad)
(bad)
jmp
cld
or
xchg
push
dec
mov
jne
jp
push
push
inc
xchg
push
jnp
xlat
push
cmp
(bad)
call
xchg
lea
sbb
clc
(bad)
fwait
pop
push
push
pushf
push
push
mov
test
dec
push
sbb
xchg
fwait
sub
fwait
clc
(bad)
(bad)
dec
jmp
dec
int
pop
pop
dec
cli
imul
dec
xchg
(bad)
inc
stos
adc
das
adc
or
fwait
adc
mov
(bad)
(bad)
(bad)
(bad)
out
popf
mov
add
aam
mov
mov
mov
sub
jmp
fadd
cmp
jnp
mov
in
xor
inc
dec
cmp
adc
sbb
(bad)
(bad)
(bad)
jnp
mov
pop
jno
repnz
and
adc
sub
(bad)
jmp
inc
movs
pop
mov
mov
ret
lds
fsubp
stc
push
movs
sub
rcl
(bad)
(bad)
(bad)
inc
mov
jmp
dec
or
xlat
sub
mov
sub
(bad)
clc
add
sub
xor
stos
sub
dec
gs
adc
adc
(bad)
jmp
cdq
mov
push
cdq
fadd
mov
push
mov
push
(bad)
(bad)
(bad)
inc
out
mov
or
imul
cli
fmul
addr16
cli
xchg
imul
jo
dec
xor
jl
ins
xor
add
push
or
icebp
inc
(bad)
ds
(bad)
(bad)
(bad)
mov
inc
dec
pop
gs
jmp
xchg
call
mov
jg
(bad)
outs
pop
push
pop
rol
js
sahf
push
out
ror
ins
push
and
push
adc
push
push
enter
xor
mov
lahf
jmp
fwait
out
ja
(bad)
arpl
gs
dec
adc
(bad)
fisttp
into
je
lds
retf
jecxz
pop
je
(bad)
jo
push
mov
cmp
dec
loop
call
push
enter
mov
dec
ret
aaa
(bad)
mov
retf
aaa
lock
xchg
cwde
lahf
lahf
out
call
pop
cmp
jmp
cmp
pop
and
push
dec
xchg
xchg
adc
and
cmp
pop
mov
jmp
loope
pop
add
dec
sub
je
je
(bad)
(bad)
(bad)
call
cmps
xor
add
out
sbb
fcmovnb
outs
push
mov
hlt
dec
pop
jmp
xor
repnz
leave
(bad)
aas
int3
adc
mov
mov
loope
xchg
test
nop
and
(bad)
(bad)
(bad)
(bad)
jmp
mov
loopne
pop
popa
stc
jae
cdq
movs
xchg
sub
mov
out
pop
stos
popf
inc
(bad)
xor
test
dec
jb
jne
jge
stos
mov
repnz
das
cli
(bad)
jmp
stos
mov
pop
push
mov
and
fistp
mov
(bad)
jg
call
cmps
in
leave
aam
je
mov
sub
xchg
and
std
(bad)
jmp
retf
pop
leave
lahf
push
cmp
jmp
fiadd
icebp
mov
sub
mov
jno
jno
and
mov
(bad)
xor
and
sub
dec
lock
pop
shl
loop
add
sbb
ins
retf
jo
pop
(bad)
pop
std
or
fnstsw
nop
fcmovne
aad
inc
mov
dec
mov
jb
or
call
jo
push
loope
push
jle
inc
mov
(bad)
(bad)
(bad)
call
sub
fmul
sar
jle
or
je
mov
push
call
sti
(bad)
call
mov
xor
ins
mov
(bad)
jmp
popa
ret
or
or
popa
jg
or
or
sub
and
sahf
popa
jno
xor
in
pop
xchg
test
(bad)
call
dec
mov
xlat
aad
sub
sbb
sub
ficomp
cld
shl
jle
push
pushf
mov
cld
jmp
sar
repnz
enter
mov
add
test
cmp
inc
mov
(bad)
call
mov
xchg
sbb
(bad)
jle
push
or
or
(bad)
mov
sbb
inc
or
sub
or
cwde
aas
jge
ret
(bad)
call
mov
dec
cwde
xchg
xor
cld
fistp
xor
repnz
mov
(bad)
(bad)
(bad)
push
jmp
xchg
aas
(bad)
xlat
pop
lods
or
jle
in
mov
fucomip
not
sahf
es
xchg
(bad)
cwde
enter
inc
push
pop
add
inc
fld
out
jb
ds
sub
sbb
jle
stos
inc
ins
(bad)
(bad)
dec
inc
rcr
cs
aam
cmp
test
cmps
rcl
(bad)
(bad)
(bad)
call
push
mov
in
jo
mov
inc
(bad)
aam
jb
(bad)
sbb
cmps
add
mov
(bad)
(bad)
(bad)
jmp
or
xor
shr
mov
test
out
mov
sbb
push
out
sbb
aam
xchg
cmps
cmp
sar
(bad)
(bad)
inc
add
aam
sub
jns
lea
xchg
push
cmp
xor
cld
pop
sahf
aas
call
xchg
jne
cmp
cmc
lods
test
call
loop
xchg
(bad)
(bad)
(bad)
(bad)
fidiv
xor
retf
fmul
push
(bad)
repz
gs
adc
adc
or
(bad)
inc
jle
fstp
cmp
cmp
inc
std
lods
inc
or
mov
ds
fbstp
(bad)
mov
out
in
mov
(bad)
stc
arpl
inc
(bad)
(bad)
(bad)
jmp
retf
mov
stos
sub
in
fcmovnu
(bad)
stc
es
loop
cwde
fucomi
pop
sbb
(bad)
(bad)
(bad)
jmp
(bad)
cmp
fstp
jae
or
inc
cmp
and
ins
add
fbld
sti
xor
(bad)
(bad)
(bad)
call
jb
sub
mov
jl
cmp
push
xchg
adc
stos
arpl
inc
ins
jle
mov
(bad)
call
inc
jo
dec
and
lds
lods
(bad)
sbb
mov
jp
sub
mov
add
movs
(bad)
(bad)
(bad)
(bad)
cmp
adc
adc
pop
inc
int3
inc
xchg
mov
sub
je
mov
(bad)
(bad)
(bad)
jmp
sbb
add
cli
aas
into
mov
mov
cli
ins
mov
fdivr
(bad)
(bad)
call
loope
xchg
xchg
(bad)
and
jge
pop
dec
xchg
or
xchg
std
jmp
mov
(bad)
(bad)
dec
ins
add
in
in
jne
fst
movs
lds
enter
mov
ss
(bad)
inc
cmp
add
aaa
out
pop
int
push
sub
stos
int
pop
mov
stc
fwait
(bad)
(bad)
(bad)
jmp
sahf
sahf
(bad)
push
movs
mov
loope
rcr
ret
sbb
cmp
dec
ffreep
in
(bad)
(bad)
(bad)
push
in
fisttp
pop
dec
lods
test
retf
inc
mov
and
dec
in
bound
mov
outs
and
(bad)
(bad)
dec
push
xchg
cmps
ffree
cwde
inc
mov
(bad)
bound
push
in
sub
fs
(bad)
(bad)
(bad)
inc
aas
and
cmp
jne
bt
mov
and
(bad)
(bad)
inc
test
push
imul
fld
pop
test
jle
out
retf
call
(bad)
(bad)
mov
cmp
push
pop
in
mov
xor
ins
dec
(bad)
aaa
inc
daa
pop
dec
fcomp
retf
(bad)
mov
push
or
push
clc
push
sbb
jb
xor
sbb
adc
or
in
or
stos
bound
loope
daa
jge
out
inc
movs
add
(bad)
fcmovnu
push
out
das
add
or
cdq
xchg
xor
cmp
xor
inc
jle
push
and
loop
push
cdq
push
sbb
adc
jae
mov
call
out
sbb
push
and
xor
adc
(bad)
(bad)
mov
mov
adc
xor
and
mov
jns
nop
pop
iret
inc
dec
add
(bad)
call
push
cmp
pusha
ins
cli
jo
xor
mov
js
aad
push
add
ds
add
outs
cld
fadd
mov
stos
jae
mov
int3
xchg
in
push
jg
jmp
add
jae
jmp
adc
xlat
mov
push
(bad)
(bad)
push
(bad)
mov
out
sub
jp
mov
arpl
cmp
lock
jmp
dec
mov
cs
cmp
rcr
xchg
push
std
(bad)
call
or
call
push
jl
jp
mov
lds
pop
push
jbe
mov
push
call
cmp
mov
(bad)
out
aam
daa
and
pop
call
mov
pop
and
cli
mov
or
retf
aaa
ret
jmp
cmps
into
xor
sub
sub
cmp
(bad)
(bad)
dec
sbb
enter
out
shl
test
push
test
test
nop
retf
(bad)
out
nop
lock
(bad)
out
mov
add
dec
aad
loope
stc
or
(bad)
(bad)
(bad)
push
leave
push
mov
cmp
fwait
push
(bad)
repz
loop
mov
mov
pusha
call
aas
mov
repz
dec
std
jmp
cwde
icebp
adc
pop
jmp
js
pusha
add
sbb
int3
loopne
mov
(bad)
(bad)
(bad)
call
adc
test
mov
cmc
cld
div
sub
pusha
jne
inc
pop
nop
pusha
jge
(bad)
(bad)
(bad)
jmp
adc
and
loope
cs
xchg
and
mov
jge
jnp
ja
adc
sbb
(bad)
call
aam
or
movs
mov
cmp
or
frstor
clc
call
cld
in
xchg
xlat
shrd
dec
xor
sub
add
mov
xor
(bad)
jmp
cmp
(bad)
jmp
push
mov
fwait
outs
adc
mov
aad
fsubr
mov
xchg
outs
fs
dec
scas
leave
mov
push
ins
inc
jg
(bad)
dec
push
pushf
leave
jecxz
mov
test
adc
push
jmp
je
fcomip
inc
je
jae
push
out
arpl
fisttp
lock
imul
(bad)
(bad)
(bad)
inc
push
test
cdq
pop
sub
cmps
es
ror
jg
(bad)
aas
rol
mov
mov
pusha
fild
shl
cli
(bad)
(bad)
(bad)
jmp
jp
in
push
jl
mov
dec
lods
sahf
in
addr16
mov
cmp
retf
or
pop
lahf
xor
jo
repnz
mov
and
push
pop
and
inc
out
or
pop
dec
and
jle
dec
shl
mov
jmp
nop
aam
mov
(bad)
(bad)
(bad)
(bad)
jge
cs
sbb
jo
fucomi
pop
and
push
cmp
xor
jmp
jl
movs
pop
inc
sahf
aaa
xor
pop
loope
test
mov
dec
adc
inc
cli
je
mov
jmp
hlt
push
aaa
cld
jp
pop
pop
lods
dec
mov
sub
(bad)
call
mov
(bad)
clc
in
je
jp
(bad)
mov
ds
add
pop
mov
push
(bad)
pop
test
dec
cli
mov
sub
mov
xor
(bad)
(bad)
(bad)
dec
dec
lods
rol
pop
aam
push
lea
jmp
xchg
in
mov
shr
xchg
cdq
jb
es
(bad)
(bad)
inc
sahf
xor
pusha
repz
dec
ins
(bad)
pop
pop
in
outs
rcr
push
jae
inc
jae
call
mov
ja
aaa
ds
aas
push
adc
fsub
pop
bound
call
mov
add
pop
lds
add
xchg
mov
gs
pop
mov
push
push
cwde
sbb
out
jmp
(bad)
push
outs
pop
inc
(bad)
(bad)
call
call
push
mov
or
(bad)
inc
xchg
jmp
(bad)
(bad)
dec
mov
adc
movzx
lods
and
cmc
stos
jb
xchg
mov
(bad)
(bad)
(bad)
inc
mov
(bad)
mov
mov
mov
cmc
mov
mov
jp
(bad)
(bad)
out
clc
jle
xchg
xchg
adc
in
adc
cmp
mov
adc
xor
(bad)
(bad)
(bad)
jmp
lods
call
call
(bad)
jmp
push
push
add
ins
outs
add
push
xor
(bad)
jp
imul
data16
pop
ins
jns
xor
push
cdq
push
lock
dec
pop
fimul
loope
mov
xlat
jmp
leave
dec
jmp
and
div
addr16
add
(bad)
(bad)
call
cmp
in
cli
inc
mov
push
fcomi
aas
(bad)
(bad)
inc
aad
lock
or
dec
(bad)
dec
push
jmp
dec
lea
push
jnp
xor
(bad)
jmp
ins
add
sbb
xchg
cmp
in
inc
adc
jmp
push
ror
adc
mov
add
int3
icebp
xor
fsin
(bad)
(bad)
dec
pop
inc
and
xchg
sub
xor
es
scas
sub
(bad)
inc
mov
mov
or
fimul
adc
mov
cli
(bad)
jle
xor
jge
ss
xchg
pop
aas
not
jg
hlt
int3
imul
movq
pop
jg
(bad)
(bad)
mov
retf
aam
cwde
or
sbb
push
push
(bad)
(bad)
(bad)
call
cmp
adc
mul
pop
bound
mov
loopne
fisubr
inc
xchg
(bad)
(bad)
(bad)
mov
fst
call
sub
cs
pop
pop
movs
cli
inc
push
cmp
retf
(bad)
(bad)
mov
test
sub
gs
fsubr
jl
push
stos
and
retf
jmp
jl
fdivr
(bad)
inc
cmps
xchg
scas
or
mov
ret
or
cmp
and
jmp
(bad)
(bad)
inc
fwait
loopne
sbb
or
ja
cmps
test
xor
test
push
push
pop
adc
mov
(bad)
call
mov
xor
out
mov
jae
push
xor
test
cdq
test
mov
(bad)
jmp
lods
push
pop
daa
inc
adc
stos
pushf
out
imul
into
mov
push
jbe
cld
sbb
ss
mov
hlt
add
fld
es
shl
dec
(bad)
out
pop
shl
jge
push
xchg
dec
push
fdivrp
rcl
add
cs
sbb
jmp
test
pop
mov
jecxz
lods
loop
and
outs
sub
jae
sub
in
aad
push
dec
sbb
test
(bad)
ja
jg
out
xchg
clc
(bad)
(bad)
push
push
push
ror
jmp
mov
in
adc
jle
dec
das
jle
(bad)
(bad)
out
mov
gs
inc
aaa
fnsave
pop
inc
ins
repnz
mov
ret
ja
outs
cli
fbstp
pop
add
mov
(bad)
inc
sar
lock
in
test
and
cmps
sbb
(bad)
fcomip
push
and
fistp
iret
int
mov
stc
cwde
jmp
(bad)
outs
mul
bound
shl
out
mov
jns
out
mov
out
add
push
push
lock
cmp
stc
pop
mov
push
xor
push
mov
jmp
(bad)
(bad)
(bad)
inc
cmp
cmp
add
pop
test
(bad)
cmp
fcom
ret
mov
(bad)
(bad)
(bad)
call
mov
movs
mov
add
sbb
mov
xchg
cmc
mov
mov
cmc
(bad)
(bad)
(bad)
jmp
mov
daa
(bad)
(bad)
xchg
cmp
aam
dec
ins
(bad)
icebp
fadd
pop
in
sub
and
dec
stos
cmp
mov
or
mov
out
dec
sub
(bad)
(bad)
jmp
fcomp
push
jmp
clc
jge
test
and
or
jmp
dec
push
mov
aas
push
mov
mov
xor
arpl
(bad)
(bad)
inc
cli
cmp
xor
mov
imul
out
xor
ds
(bad)
mov
inc
enter
popa
mov
sbb
cmp
push
out
xchg
(bad)
jg
add
out
xlat
push
pop
mov
popf
hlt
call
(bad)
(bad)
call
in
inc
jns
xor
and
push
pop
pop
out
inc
in
(bad)
(bad)
(bad)
dec
test
jae
movs
inc
jecxz
popa
addr16
out
ror
or
dec
aam
sbb
sbb
xor
sbb
push
(bad)
jmp
push
out
adc
cmc
dec
hlt
jle
and
rcr
add
cmp
(bad)
(bad)
(bad)
dec
and
push
pop
sbb
es
fdivrp
xchg
fistp
xor
icebp
and
mov
mov
jne
jecxz
and
sti
imul
hlt
xchg
jne
cs
or
cli
xchg
arpl
shl
xor
in
stos
and
or
shld
imul
xchg
cmc
fs
pop
outs
mov
cmc
jmp
loopne
mov
lods
or
arpl
cld
out
mov
ret
(bad)
jg
xlat
stc
mov
pop
bound
jae
bound
or
(bad)
(bad)
fcomip
scas
je
mov
ret
test
mul
sub
(bad)
(bad)
(bad)
(bad)
call
mov
cmp
xchg
(bad)
mov
xchg
pop
rcl
not
(bad)
jmp
jmp
lock
nop
stos
mov
sub
scas
pop
xor
out
popa
test
xchg
addr16
(bad)
mov
mov
inc
repz
retf
and
jle
sbb
(bad)
(bad)
(bad)
(bad)
adc
sbb
sub
and
sub
or
and
shl
push
icebp
loope
clc
(bad)
push
ja
(bad)
maxps
jbe
inc
stc
fld
(bad)
jae
adc
(bad)
das
retf
(bad)
jmp
dec
mov
dec
inc
(bad)
loopne
aam
gs
test
inc
adc
xchg
and
(bad)
(bad)
inc
cdq
xchg
sbb
inc
cmp
xor
pop
pop
imul
out
into
add
lock
int
jmp
sub
lods
dec
scas
xor
mov
mov
inc
adc
mov
mov
(bad)
pop
(bad)
inc
mov
pop
jo
nop
sbb
dec
push
(bad)
loopne
adc
(bad)
xlat
pop
or
sbb
ds
test
xchg
sub
sar
repz
clc
lds
into
xor
xlat
cmp
stos
dec
add
mov
adc
push
sbb
xor
call
inc
repz
(bad)
mov
out
cmps
push
adc
pusha
or
inc
mov
jb
lock
pop
jmp
es
sbb
mov
xor
int3
and
das
mov
jae
(bad)
(bad)
push
arpl
lods
mov
jno
fild
sar
xor
sub
loopne
loop
int
sbb
xor
pop
data16
adc
cmp
cld
jnp
(bad)
(bad)
call
mov
add
xor
jno
add
mov
(bad)
(bad)
(bad)
jmp
js
aas
dec
test
mov
push
dec
popf
add
rcl
pushf
fidiv
jg
stos
cmps
dec
adc
dec
xor
cmps
out
test
ficomp
(bad)
jmp
sar
jnp
hlt
sahf
aas
lds
and
push
mov
pusha
push
lock
(bad)
(bad)
inc
fstp
jp
sti
mov
adc
(bad)
sub
cdq
ss
mov
push
popa
pop
outs
pop
adc
jle
xchg
dec
sub
and
jbe
scas
fdivr
sar
imul
dec
lock
out
jp
push
gs
add
and
pop
imul
jo
jge
(bad)
(bad)
(bad)
jmp
jecxz
jo
int
mov
(bad)
pop
and
inc
inc
adc
fnstsw
(bad)
(bad)
std
pop
not
ds
xchg
ret
popf
cwde
inc
mov
xlat
inc
(bad)
xchg
and
mov
jmp
cwde
cmps
and
mov
ret
add
movs
xchg
(bad)
dec
ins
or
sub
mov
iret
inc
je
jmp
add
ror
punpcklwd
or
scas
int
adc
loop
pop
mov
adc
fbld
gs
xchg
dec
add
add
lods
dec
jg
jmp
retf
test
or
add
out
test
mov
loopne
inc
(bad)
call
movs
mov
mov
lahf
clc
loop
or
push
rcl
pop
pop
mov
jg
shl
mov
mov
dec
sbb
jbe
xor
pop
mov
push
push
mov
mov
inc
mov
lahf
and
inc
repz
adc
test
neg
out
retf
or
mov
ds
jb
cmp
in
test
mov
adc
pop
inc
push
test
(bad)
mov
mov
in
mov
inc
lahf
mov
dec
aas
inc
sti
mov
ins
test
daa
(bad)
inc
inc
gs
jne
je
imul
add
(bad)
call
inc
outs
arpl
pop
dec
inc
pop
arpl
loopne
mov
(bad)
(bad)
cmp
cmp
bound
jne
arpl
je
ins
or
cs
call
clc
and
add
add
push
push
inc
push
push
inc
cmp
sub
jbe
std
jnp
jae
or
gs
pop
pop
pop
or
je
add
outs
fucomi
gs
shr
sub
dec
pop
push
in
test
sub
and
and
js
inc
pop
or
sub
or
gs
xor
mov
rcr
and
cmp
sub
add
ds
push
push
cmp
sub
dec
push
inc
dec
push
(bad)
mov
push
inc
dec
sub
es
add
sti
push
dec
adc
mov
daa
or
cmp
retf
iret
add
sub
and
sub
lock
mov
pop
and
ins
sub
dec
push
sahf
inc
inc
dec
cmp
sub
inc
xor
inc
ins
add
cmp
enter
pusha
mov
jne
gs
xchg
xor
ror
inc
mov
xchg
or
sbb
and
adc
push
inc
push
dec
inc
(bad)
(bad)
inc
dec
push
lds
push
popa
ins
jne
leave
in
ins
or
push
shl
push
je
jne
in
cmp
push
inc
sub
fs
inc
sbb
fs
ins
(bad)
loopne
pop
cmc
cmp
dec
dec
fimul
inc
xor
test
inc
add
ret
adc
mov
mov
xchg
cmp
(bad)
fisttp
mov
icebp
adc
push
dec
dec
leave
jae
arpl
stc
data16
fistp
popa
or
es
adc
add
sub
mov
jo
or
out
(bad)
std
pop
mov
je
push
push
pop
push
dec
dec
or
test
dec
jno
fbstp
mov
push
test
sub
addr16
fs
gs
sahf
out
fld
sub
push
jno
jns
out
leave
int3
ins
outs
jmp
ret
sub
adc
pop
out
pop
scas
or
pop
adc
mov
pop
sub
xchg
jg
fcmovnbe
push
inc
nop
add
add
femms
test
rcr
test
aam
dec
add
(bad)
in
dec
or
sbb
in
push
add
sub
pop
mov
aam
cmp
xlat
push
mov
adc
xor
adc
inc
jo
mov
or
adc
or
mov
adc
cmp
push
iret
push
int
icebp
push
sti
inc
add
std
push
inc
repz
mov
add
iret
repz
or
or
pop
or
into
repz
push
paddd
push
jecxz
push
popa
stc
push
mov
xor
adc
rol
xlat
add
movs
mov
pop
mov
inc
xchg
pop
loop
cmp
jl
pop
fcomp
mov
cmp
gs
add
pop
mov
inc
and
leave
push
jb
ins
nop
jb
pop
and
leave
push
cld
and
inc
push
mov
pop
or
xor
test
push
int
jno
outs
add
cld
pop
adc
sar
and
mov
xchg
pop
mov
rol
aad
clc
mov
inc
das
pop
lahf
or
lods
clc
js
add
push
inc
dec
pop
xor
or
add
(bad)
sub
and
xchg
xchg
aaa
cmp
and
mov
cs
pop
ins
push
pop
das
adc
add
and
inc
dec
add
mov
in
inc
xchg
dec
out
dec
ror
aas
sub
add
sahf
call
add
daa
lods
xchg
adc
pop
or
xor
rcl
loopne
xchg
sbb
ss
ret
adc
sub
ss
pop
rcl
nop
imul
mov
jbe
xor
pusha
jb
and
jbe
mov
scas
adc
add
jb
mov
(bad)
pop
jb
test
mov
and
jb
nop
xor
jb
pusha
push
pop
jb
pop
inc
xor
bound
and
xchg
add
mov
adc
lock
(bad)
std
aaa
in
inc
cs
shl
mov
cs
jo
pusha
pop
push
pop
mov
xor
and
rol
mov
inc
xchg
jmp
add
mov
das
test
pop
mov
in
mov
out
or
stos
dec
sub
dec
jb
pop
mov
das
push
add
sbb
enter
aad
cmp
pusha
pop
enter
das
add
pop
nop
fadd
das
mov
je
mov
fcomp
pop
cmp
inc
nop
leave
inc
vmwrite
leave
js
leave
inc
ror
dec
retf
js
addps
(bad)
je
repnz
enter
retf
inc
retf
jo
jmp
mov
jb
mov
rol
or
fadd
jbe
push
mov
fs
mov
nop
inc
lods
cs
or
das
int3
fsub
add
adc
or
pop
sub
pop
and
enter
add
xchg
mov
pop
in
movs
das
mov
pop
mov
ins
add
pop
das
inc
ins
or
test
(bad)
hlt
sar
cmp
jno
in
mov
jns
and
xor
loope
loope
lods
ror
mov
jo
fcom
call
shr
and
and
fadd
(bad)
or
ja
inc
jne
sbb
div
jb
shl
pusha
aam
adc
aam
pushf
in
mov
pushf
mov
sub
aas
cmp
test
aad
aad
sub
(bad)
jno
and
and
outs
inc
sbb
(bad)
test
(bad)
(bad)
(bad)
cmp
leave
dec
aam
dec
xlat
in
(bad)
imul
or
xlat
adc
daa
jns
cmp
dec
fsubr
jmp
out
es
add
add
mov
fadd
jo
mov
js
(bad)
pushf
mov
cwde
fld
fnstcw
pushf
xor
cmovo
(bad)
sub
jb
fcmovbe
fcmovu
in
inc
cmps
test
or
pushf
sub
setl
leave
jmp
fild
fisttp
add
mov
fisttp
or
fmul
daa
cmp
fcom
sub
clc
fdiv
xchg
or
inc
fst
dec
and
mov
push
adc
movs
scas
or
dec
out
and
imul
and
out
cmp
inc
leave
add
add
dec
cmp
out
sub
jns
in
pop
in
sub
jns
in
movs
in
sub
jns
in
in
in
or
out
cmps
xor
dec
out
inc
pop
cmps
int
mov
jl
mov
cmp
les
push
push
inc
jbe
cmp
push
psubsb
or
inc
push
sub
in
mov
or
add
xchg
inc
test
popf
out
xchg
movs
add
mov
add
pop
ret
fwait
mov
push
push
adc
xor
and
sbb
inc
inc
out
fisttp
push
cmp
dec
pushw
push
popw
sbb
out
inc
rol
push
add
fistp
into
push
inc
jbe
imul
cmp
jnp
sub
sbb
adc
pop
cs
push
fs
ins
jo
js
repz
repz
iret
xchg
cwde
pushf
mov
repz
mov
mov
repz
int3
ror
repz
aam
fsub
in
jbe
repz
lock
in
add
fs
in
les
sbb
je
pushf
mov
pop
sbb
pop
daa
and
in
pop
cld
mov
enter
push
or
in
fs
and
add
sub
push
pop
and
add
add
add
pop
add
ins
push
leave
or
pop
add
xor
xchg
inc
shr
add
ins
pop
or
pop
jg
add
mov
mov
into
add
arpl
add
das
jg
mov
add
add
add
add
sub
scas
add
add
popf
test
sbb
add
xor
add
test
adc
fidivr
daa
bound
pop
dec
pop
ja
idiv
mov
add
add
bound
es
xor
xlat
add
rol
fistp
enter
add
add
and
repz
jb
adc
pop
push
xor
repz
inc
push
fs
cwde
cmp
repz
mov
push
call
test
cmp
xor
dec
pusha
add
mov
inc
mov
adc
xchg
xor
in
or
jl
nop
pop
add
dec
nop
inc
es
push
xchg
dec
xchg
retf
int3
enter
enter
dec
into
fcmovnu
retf
(bad)
(bad)
loopne
jecxz
in
push
jne
dec
imul
dec
fiadd
popa
je
xor
test
jle
add
xchg
ss
xor
sbb
dec
add
test
mov
call
mov
inc
add
ins
inc
aas
dec
adc
or
add
(bad)
mov
xchg
cmps
call
xor
shl
jo
inc
jl
(bad)
mov
add
add
inc
pcmpeqd
daa
out
outs
and
inc
pusha
jmp
xlat
add
neg
sbb
popa
add
push
push
popa
outs
lods
jbe
dec
and
jmp
ret
ja
ins
rol
jl
adc
sahf
push
mov
add
aas
outs
jnp
imul
aas
push
in
add
hlt
push
jnp
mov
adc
push
jmp
pop
scas
mov
pop
add
pusha
aas
dec
mov
rcr
or
retf
cmp
sti
push
lods
mov
or
cmp
loop
push
add
or
ror
iret
repz
add
wrmsr
adc
cmp
repz
pop
adc
neg
repz
pushf
push
sbb
mov
jl
out
sbb
push
adc
or
iret
ror
sbb
xor
out
cmp
dec
add
push
sahf
out
sahf
sbb
jns
out
push
fcomp
jle
add
fistp
sbb
jo
cmp
repz
push
add
iret
push
jl
xchg
pop
cmps
out
clc
inc
aad
add
aad
xchg
push
iret
imul
pop
outs
ins
push
or
mov
iret
repz
repz
ror
mov
mov
mov
dec
int3
ficomp
push
sbb
jns
out
xchg
push
ins
adc
test
add
adc
cmp
xchg
or
push
punpckhwd
mov
push
pop
cmp
ss
jbe
int
jp
add
xchg
or
adc
(bad)
push
ror
call
add
call
sbb
loopne
inc
add
pop
jne
dec
adc
pop
adc
jne
add
add
pop
lahf
add
ja
pop
sub
xchg
ja
pop
add
cs
aad
xchg
stc
mov
jns
out
mov
sti
cld
sahf
out
sahf
std
(bad)
inc
add
jns
out
add
xchg
out
add
das
pusha
add
cli
push
inc
xchg
add
fidiv
ds
dec
add
push
cmp
jmp
dec
dec
push
iret
repz
cmp
je
neg
repz
mov
push
sahf
out
sahf
dec
push
pop
pop
pusha
fs
mov
jns
ins
push
mov
jo
das
ficom
jg
pop
or
addr16
jno
(bad)
test
jb
iret
imul
sub
repz
repz
dec
clc
pusha
iret
repz
div
cmc
pushf
cmp
repz
mov
shl
cmp
repz
call
call
in
sahf
out
sahf
xor
dec
jmp
jmp
add
xchg
add
mov
add
test
mov
stc
add
jno
and
outs
lahf
pop
and
or
add
iret
or
fcom
xchg
adc
pop
add
les
add
add
inc
sub
retf
es
jmp
call
fld
sbb
icebp
push
xor
push
inc
loopne
call
or
test
pop
push
cmc
push
pop
dec
mov
out
inc
and
or
aaa
gs
push
je
daa
push
(bad)
cdq
cld
jl
rcr
mov
mov
push
dec
inc
jne
mov
or
dec
daa
bound
ins
outs
cwde
ins
sar
call
push
pop
bound
arpl
and
fs
imul
ret
loopne
fs
ins
and
mov
cwd
add
inc
adc
jns
bound
ins
and
jno
imul
inc
jb
xor
xor
outs
fiadd
fdiv
dec
dec
jo
fs
dec
jbe
sub
popa
cwde
pusha
add
xchg
sbb
pushf
pop
call
push
jo
outs
ins
mov
inc
inc
int3
or
add
pop
dec
(bad)
fcmovne
sbb
push
and
pop
fs
cmps
std
in
mov
and
jbe
arpl
pop
(bad)
and
outs
outs
imul
sbb
sub
sub
iret
stos
ss
push
pop
jl
fs
jno
data16
aam
arpl
lock
hlt
or
inc
xchg
sar
jg
pop
fs
out
pop
mov
sahf
mov
or
cmp
aaa
clc
pop
push
clc
outs
sbb
jge
or
ss
gs
xor
push
or
sub
xchg
mov
fs
mov
clc
dec
add
das
cmp
fiadd
or
je
ds
fimul
aam
ds
and
js
les
and
sbb
xor
imul
cmovns
push
push
push
push
inc
sub
inc
dec
push
sbb
call
xor
xor
push
arpl
sub
inc
inc
pop
dec
inc
jl
push
inc
push
popa
sbb
sub
jae
outs
ficomp
sub
std
scas
add
sub
popa
mov
jb
pop
sub
lea
sub
into
push
dec
jo
adc
mov
xor
aas
xor
pop
je
je
addr16
fwait
pop
pop
xor
jl
fcomp
jl
jno
jge
pop
mov
jae
fcom
inc
pop
sub
adc
sub
dec
push
retf
lea
xor
fldln2
jbe
pop
sub
add
daa
je
sub
jae
pushf
pop
cmp
gs
sub
xchg
sbb
outs
loop
sub
and
je
cmps
shl
or
xchg
imul
pop
hlt
jae
add
in
dec
test
psubd
jo
cld
dec
add
mov
dec
pushf
push
jb
inc
push
push
loopne
add
aaa
stos
js
dec
jb
mov
sub
and
data16
(bad)
sub
or
popa
add
add
or
add
sbb
add
add
or
xchg
dec
add
add
sbb
ja
push
test
clc
mov
and
imul
add
gs
add
jae
and
sbb
mov
xor
ins
pop
add
add
(bad)
fild
(bad)
(bad)
adc
adc
push
add
sub
jg
push
or
pop
push
add
sub
add
scas
nop
fs
sbb
inc
pop
sub
adc
mov
and
bound
and
sub
mov
add
add
push
das
add
sbb
push
adc
push
push
xor
add
cmp
and
adc
xchg
push
fild
mov
and
and
add
ds
nop
push
dec
push
add
and
jl
out
sahf
out
push
pushf
mov
fxch
sar
sti
adc
and
push
cmp
repz
jbe
(bad)
sahf
stc
cmp
repz
aam
repz
out
sahf
cmps
push
sub
jae
out
sahf
mov
out
out
out
std
push
or
push
xor
out
sahf
dec
pop
jbe
mov
jns
call
dec
sbb
xor
mov
xor
and
outs
arpl
clc
sbb
outs
and
inc
jp
xor
add
or
jns
push
test
mov
add
add
mov
jo
outs
pop
jae
mov
mov
popf
sub
inc
popa
and
mov
xchg
mov
rol
popa
jae
dec
dec
test
nop
dec
fwait
push
stos
addr16
xor
popf
bound
jnp
es
cmp
push
xor
add
adc
daa
sahf
popa
arpl
js
cmp
daa
cmp
or
das
lahf
in
dec
push
and
add
je
jo
lds
xor
dec
jne
lods
loope
ins
int3
sbb
cmp
mov
or
jne
inc
adc
stos
pop
mov
and
cmps
hlt
imul
rol
dec
add
add
xchg
adc
outs
imul
dec
es
outs
dec
sub
iret
mov
popa
jo
rcl
add
shl
dec
das
dec
and
ins
outs
scas
iret
or
mov
jne
shr
sbb
add
fdivr
pusha
shl
jo
std
gs
in
adc
outs
outs
mov
xchg
fist
dec
shl
sub
sub
push
sub
cmp
jns
pop
push
jae
cmp
add
data16
add
(bad)
loopne
out
adc
mov
fsubr
pop
mov
xchg
popa
gs
nop
adc
pop
or
add
jno
xchg
adc
mov
add
jns
xchg
mov
sbb
add
jg
arpl
ins
sbb
das
outs
push
jo
in
xor
frstor
dec
sub
(bad)
imul
pop
cs
imul
adc
inc
and
xor
int3
popa
cwde
bound
ret
dec
jae
add
or
cmp
sub
sbb
inc
or
and
fild
test
add
and
jne
add
add
or
fstp
out
in
or
push
nop
add
or
adc
adc
push
or
adc
add
unpckhps
pop
rol
out
lds
ins
test
sub
outs
arpl
ins
pop
jae
inc
jbe
sub
xchg
fstp
pop
sub
mov
sbb
push
push
add
pop
push
sbb
add
or
mov
or
push
add
scas
sbb
or
adc
push
sbb
(bad)
jne
adc
or
str
or
movs
fnstsw
or
or
push
or
mov
rol
sub
in
sub
fimul
add
cdq
jbe
and
add
add
and
add
iret
repz
add
push
retf
int3
int
idiv
repz
rcl
sar
jbe
jnp
cs
addr16
xor
add
lods
popf
mov
dec
or
push
or
dec
or
jo
sbb
popa
add
ins
cmp
or
inc
jns
or
inc
fs
mov
push
ds
inc
cdq
call
pop
pop
pop
pusha
aas
jnp
jge
jg
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
stos
pusha
cld
jmp
lods
lods
scas
scas
mov
mov
mov
mov
(bad)
mov
mov
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
(bad)
dec
loop
in
out
call
in
out
out
lock
inc
adc
hlt
cmc
div
clc
stc
cli
sti
cld
std
(bad)
(bad)
dec
inc
dec
cmps
int
add
bound
call
lods
fsubr
xchg
call
inc
add
dec
inc
pop
dec
imul
out
dec
inc
push
inc
push
pop
pop
dec
push
dec
inc
push
dec
inc
adc
cmovne
jle
dec
dec
dec
inc
push
adc
outs
pop
push
jb
jmp
push
adc
inc
add
pop
inc
push
add
lods
mov
jbe
add
inc
mov
mov
pop
pusha
adc
jmp
fdivr
cmp
jl
es
jg
cmp
repz
add
repz
sahf
out
xchg
push
xchg
push
xchg
sahf
cmps
mov
outs
push
es
out
sahf
out
fucom
in
hlt
repz
sahf
clc
cld
outs
adc
cmp
or
sbb
daa
sub
xor
cmp
repz
repz
pop
pushw
iret
repz
jb
jp
add
mov
mov
cmp
mov
aaa
rol
aaa
mov
xchg
dec
cwde
iret
aas
shr
sub
sub
push
das
add
sbb
add
inc
cmp
pop
ins
or
sub
push
lds
or
inc
jnp
aam
fiadd
push
jne
jae
sti
int3
sub
push
sub
sti
inc
jb
or
pushf
jae
fidiv
jo
arpl
clc
jle
out
cmp
jne
jb
bound
dec
mov
loop
ins
push
push
push
loopne
pop
dec
dec
or
jne
pushf
xchg
dec
add
shl
inc
hlt
mov
and
out
jnp
arpl
stos
mov
into
test
jae
inc
(bad)
in
xchg
sub
dec
cmp
repz
fucom
out
cmp
repz
fild
and
push
jbe
jbe
sti
in
sub
and
jb
push
sub
and
cmps
loop
fldenv
cmp
sbb
sub
in
mov
adc
cli
or
leave
daa
lahf
inc
pushf
or
ret
mov
adc
enter
xchg
cwde
push
and
sbb
(bad)
call
lods
lds
iret
dec
js
rol
mov
or
mov
fdivrp
(bad)
(bad)
(bad)
stc
popf
sti
jmp
stos
push
inc
(bad)
xchg
push
cmps
scas
mov
pop
or
add
lds
(bad)
call
mov
and
and
xlat
dec
add
mov
je
xor
ret
cmp
and
or
jae
sub
mov
xor
repnz
xchg
xchg
xlat
dec
pop
dec
iret
push
cmp
inc
xor
mov
fist
xor
sar
add
inc
out
xor
mov
rol
in
in
mov
lock
lock
add
lock
adc
push
add
fild
sub
sub
sub
outs
dec
out
ja
mov
or
sub
sub
daa
pusha
sub
popa
adc
add
data16
shl
dec
les
cmps
fbld
pushf
je
mov
jg
dec
fadd
and
cmp
dec
inc
inc
push
add
loope
jmp
jb
xchg
inc
sahf
hlt
adc
retf
adc
or
jb
out
inc
add
mov
neg
aam
adc
nop
fs
or
lods
sti
xor
and
cmp
xor
out
adc
or
mov
js
jmp
mov
bound
ss
div
sbb
jb
ins
xchg
outs
xchg
xor
(bad)
push
int3
test
mov
jmp
(bad)
xor
jl
xlat
test
xchg
addr16
cdq
mov
push
or
arpl
adc
or
pop
stc
dec
dec
jne
inc
xor
int3
pop
out
push
pop
inc
div
jbe
out
inc
add
mov
dec
ja
ret
cld
jne
fs
pop
outs
outs
xchg
mov
fbld
fmul
ins
adc
xor
mov
out
jns
mul
or
movups
enter
adc
push
push
adc
adc
retf
out
add
fidivr
sti
das
inc
adc
jbe
mov
popa
jo
outs
jb
pop
je
jns
test
add
nop
xchg
sahf
sahf
out
sahf
cmps
mov
ror
jns
out
rcl
(bad)
loope
jns
out
jmp
repz
stc
add
or
push
sbb
repz
and
xor
repz
dec
push
aas
sbb
push
add
iret
repz
pop
js
shl
cmp
ja
loope
out
inc
xor
dec
ins
into
and
adc
adc
lds
les
inc
punpckhbw
scas
push
push
pop
fild
inc
mov
jmp
add
iret
push
dec
dec
dec
outs
sysret
or
or
add
or
(bad)
test
jp
add
sbb
mov
scas
pop
in
or
nop
or
and
scas
sbb
dec
and
pop
or
pop
jb
and
sub
jb
and
(bad)
xchg
pop
jl
add
mov
iret
sub
lods
rol
sub
mov
push
pop
pushf
inc
push
(bad)
xor
test
add
pop
fisub
jne
dec
add
lea
jns
push
add
rcr
sbb
ds
cmp
add
add
out
sahf
out
xor
adc
inc
mov
and
test
in
in
lock
inc
es
xchg
adc
sub
leave
and
pop
push
push
inc
adc
jns
pop
jb
loopne
inc
xchg
xchg
pushf
or
pop
cmp
inc
enter
pop
fcom
mov
jb
clc
or
dec
mov
enter
and
mov
pusha
and
nop
mov
or
fsubr
dec
repnz
push
and
leave
dec
push
and
leave
and
in
enter
and
xchg
xchg
pushf
adc
and
sbb
dec
cs
push
push
jmp
mov
aas
sar
inc
add
and
fs
call
and
in
dec
cmp
repnz
and
pusha
clc
inc
test
pop
and
inc
test
int3
and
inc
repnz
leave
pop
adc
dec
add
push
pop
leave
jae
pop
xor
jmp
movs
jl
push
les
ja
(bad)
cmovne
inc
jns
gs
adc
popa
outs
addr16
inc
outs
xor
or
jge
jo
push
mov
pop
cmp
push
inc
push
outs
fs
inc
add
outs
ins
ror
dec
and
push
jb
pop
pusha
inc
xor
ret
inc
adc
jg
or
inc
mov
xor
adc
(bad)
adc
(bad)
sbb
pop
push
pushf
inc
cwde
ror
les
xor
int3
les
icebp
xor
xor
lds
aaa
xor
adc
ja
cmp
ja
fdiv
jge
aas
data16
sub
mov
sub
outs
imul
inc
shl
or
imul
sahf
sub
pop
icebp
push
pop
inc
inc
inc
inc
inc
dec
push
dec
dec
inc
pop
inc
push
push
dec
push
test
xchg
sti
out
cdq
test
inc
call
js
jo
or
mov
data16
dec
mov
(bad)
loop
loope
rcr
mov
xor
mov
test
or
cmp
and
mov
movs
cmp
sar
and
adc
jge
out
in
fs
stos
gs
inc
dec
pusha
sbb
inc
inc
push
jne
out
inc
loop
add
ins
cmp
mov
aas
ins
cmp
dec
inc
push
fwait
lods
daa
add
push
jno
push
sub
pop
push
dec
or
(bad)
test
(bad)
jno
repz
sub
push
inc
pop
or
sbb
and
push
xchg
mov
mov
pop
jne
ja
sub
inc
and
jbe
xlat
add
(bad)
jno
inc
lods
pop
xor
dec
push
jb
xor
xchg
loope
pop
jb
and
inc
push
dec
push
pop
inc
lods
sub
mov
jae
cwde
arpl
push
mov
outs
inc
arpl
ds
ja
fs
and
sub
int
pop
push
xor
adc
dec
retf
sbb
scas
fs
in
sbb
cmp
out
retf
or
inc
scas
ins
jecxz
(bad)
add
sbb
aad
sbb
mov
jp
pop
dec
sub
mov
popa
inc
ins
int
sti
and
(bad)
jmp
push
pop
jb
sub
xchg
sbb
ins
ins
bound
pop
xchg
or
dec
push
sub
inc
cdq
add
addr16
or
movs
fcmovbe
xor
not
mov
inc
rcl
dec
jl
shl
sub
pop
push
imul
add
js
jp
inc
movs
pop
fmul
out
sti
sub
cmp
jo
cmps
inc
lds
add
gs
sub
or
and
test
inc
inc
inc
js
push
pop
mov
mov
je
iret
jb
push
push
jmp
dec
inc
jl
push
leave
push
mov
sar
and
xor
add
mov
dec
daa
cs
call
xor
or
dec
ja
mov
push
sbb
out
mov
(bad)
pop
sub
mov
pop
push
pop
pop
xchg
jp
das
dec
xchg
jl
pop
enter
pop
test
fiadd
pusha
(bad)
xor
lock
xchg
fidiv
and
clc
mov
aas
add
pop
outs
outs
xor
in
popa
ins
cs
dec
sbb
mov
cdq
adc
outs
push
daa
sub
adc
stos
xchg
test
mov
add
push
push
inc
stos
sub
dec
push
dec
inc
ins
movs
add
loop
pop
pop
xchg
fldenv
push
and
jb
jae
xor
and
jae
mov
ret
sub
push
gs
push
add
sbb
lods
in
pop
inc
inc
and
popa
mov
js
aas
or
cmp
pcmpeqd
(bad)
jle
imul
sbb
jb
adc
cdq
out
push
sub
pop
sub
and
inc
or
dec
dec
add
mov
aas
cmp
pop
mov
sub
rcl
inc
sub
ins
clc
sub
repz
ja
adc
sub
add
sbb
fwait
arpl
cmc
dec
in
dec
xor
add
scas
add
test
sbb
dec
inc
inc
cmp
in
push
cld
inc
fs
cmp
mov
push
inc
add
mov
xlat
cmps
jmp
inc
push
mov
or
inc
or
rcr
ds
mov
sgdtd
aas
xchg
mov
sbb
gs
inc
or
jmp
jns
xlat
pop
stc
push
icebp
loope
or
(bad)
cld
clc
lock
stos
std
cmp
cmp
inc
xor
(bad)
(bad)
push
or
cmp
add
xor
bswap
aas
inc
dec
mov
jae
dec
mov
(bad)
(bad)
(bad)
call
sub
sbb
and
adc
das
out
pop
fbld
ins
pushf
pop
mov
outs
lahf
pop
or
cmp
(bad)
(bad)
(bad)
clc
add
xor
or
cmp
pop
(bad)
aaa
test
dec
mov
ja
call
(bad)
fsub
adc
sub
sbb
daa
out
xlat
test
cwde
pop
movs
fs
push
stos
imul
add
xor
(bad)
(bad)
push
push
into
inc
shl
or
inc
mov
mov
jle
inc
mov
lea
jge
loop
(bad)
(bad)
(bad)
call
cs
push
fisub
loope
shr
bound
pop
mov
ins
popf
pop
or
cmp
(bad)
(bad)
(bad)
cli
push
(bad)
test
cmp
add
dec
mov
jbe
dec
mov
jne
jmp
es
(bad)
sub
sbb
and
push
pop
cmps
xchg
push
test
gs
push
(bad)
sbb
push
inc
dec
push
dec
xor
in
mov
sbb
jnp
jae
push
xor
sbb
mov
bound
mov
inc
sub
sbb
cdq
pop
push
mov
or
data16
aaa
sbb
or
push
data16
sbb
cmps
mov
call
mov
aas
out
popa
dec
mov
xor
aas
retf
xchg
dec
scas
out
aas
stos
adc
shl
aas
aas
cmp
jmp
jno
inc
jnp
push
loope
pop
stos
jb
push
test
add
test
add
icebp
mov
jne
push
adc
rcr
jo
lods
inc
mov
jns
cmp
sbb
and
or
sub
dec
ret
sbb
push
or
pop
outs
pop
add
jns
out
jbe
push
and
xor
out
sahf
out
xor
and
sahf
out
sahf
push
movhps
and
jns
cmp
xor
out
sahf
out
pop
daa
cs
cmp
ss
aaa
outs
mov
pop
or
outs
aaa
fcom
sbb
xor
or
push
in
jbe
xor
das
or
pop
pop
inc
pop
push
pop
pop
mov
scas
push
push
push
xchg
sahf
out
outs
aaa
and
addr16
and
cmps
and
cmc
push
add
loope
(bad)
pop
out
das
dec
scas
in
mov
add
push
dec
dec
fcom
js
pop
push
bound
dec
arpl
fld
aaa
adc
das
daa
pop
adc
out
inc
aas
sbb
shr
cmp
inc
aaa
jp
add
add
xor
inc
add
and
add
cmp
add
add
add
add
out
xor
lods
adc
push
adc
pop
and
xor
std
dec
and
rcl
bound
jo
enter
ret
mov
aaa
mov
popa
push
mov
mov
mov
inc
mov
adc
sbb
dec
mov
mov
gs
test
add
data16
lahf
adc
inc
adc
pop
popa
jno
and
adc
push
mov
lock
loope
icebp
imul
sub
rol
add
pop
outs
cmp
jmp
enter
pusha
push
inc
inc
dec
inc
cmp
in
add
shl
push
lock
and
add
push
inc
pop
jb
push
les
inc
jle
push
inc
add
push
adc
out
sbb
sub
cmp
jns
out
dec
push
pop
pusha
sahf
out
sahf
push
nop
jns
out
cwde
mov
jns
out
enter
sahf
idiv
call
push
push
push
add
push
push
push
cmp
movs
jns
out
cmps
push
lods
push
mov
(bad)
int3
out
sahf
out
fsub
in
hlt
jns
add
push
adc
jns
out
and
xor
sahf
out
sahf
inc
dec
push
pop
fs
jns
out
je
test
pushf
movs
lods
mov
mov
test
out
test
out
sahf
out
test
out
sahf
test
mov
jns
out
(bad)
int3
aam
shl
sahf
in
hlt
cld
add
mov
iret
repz
sub
repz
repz
dec
push
pop
iret
repz
fs
je
test
sbb
xchg
push
cld
add
xor
in
jbe
into
repz
in
lock
adc
repz
push
push
or
sbb
cmp
sub
xor
pop
jl
xlat
push
dec
outs
inc
dec
(bad)
into
sbb
pusha
sahf
cmps
push
lock
push
push
pushw
pusha
push
jo
ds
xor
inc
push
mov
mov
push
adc
pop
sti
popf
test
push
cld
pop
dec
(bad)
pop
push
or
sahf
out
adc
and
cmp
jns
out
je
test
pushf
movs
lods
mov
jns
out
(bad)
int3
aam
in
jge
out
hlt
cld
add
into
pop
jns
ja
pop
pop
push
sub
cmp
jns
out
dec
push
pop
fs
out
sahf
ins
je
test
pushf
movs
lods
mov
out
sahf
out
int3
aam
in
idiv
in
hlt
cld
add
(bad)
pop
pop
jns
out
pop
pop
pop
pop
pop
iret
mov
fiadd
ins
ds
dec
dec
push
adc
sahf
out
jle
je
fiadd
call
dec
cmp
repz
mov
ins
sub
push
push
in
add
stos
stos
stos
sub
push
inc
push
xchg
test
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
add
mov
lock
sub
adc
push
dec
add
dec
inc
push
push
push
and
xchg
test
push
push
pop
xchg
mov
pop
mov
mov
add
sub
push
fsub
push
mov
sbb
and
xor
sahf
pop
mov
and
hlt
pop
xchg
cs
jno
push
pop
xchg
jb
sbb
xor
push
pop
or
fidivr
jnp
push
movs
jae
xlat
dec
loop
sahf
mov
pop
mov
jl
in
movs
dec
push
push
movs
jecxz
test
ss
in
cmps
dec
mov
xor
xor
push
lods
scas
pop
adc
mov
mov
test
mov
ret
iret
repz
and
push
aam
push
adc
out
jl
and
pusha
push
enter
jl
sbb
mov
lock
push
adc
scas
push
add
jl
xchg
push
(bad)
fiadd
(bad)
call
push
jmp
fcomp
add
add
test
cmp
int
imul
adc
cmp
or
je
fsub
sbb
and
and
mov
or
sub
fsub
sti
cmp
push
arpl
sar
add
mov
cbw
stc
out
cmp
add
ins
push
jl
push
push
cmp
call
push
adc
adc
xor
out
jl
xchg
push
jbe
call
and
les
mov
pusha
cdq
inc
call
mov
lock
mov
lahf
push
mov
mov
pop
push
sub
lods
cmp
aam
movs
out
movs
fidiv
out
(bad)
cmps
cs
inc
cmps
push
push
js
es
pop
push
aam
lods
(bad)
scas
cs
mov
push
lods
mov
cld
shl
sbb
into
aad
push
sbb
neg
ret
cmps
fs
repz
ss
push
test
loopne
es
adc
mov
pushf
sti
dec
mov
std
push
inc
test
int
or
add
or
ins
ds
push
push
push
in
add
and
ins
fidivr
out
or
mov
push
adc
push
lods
fisub
sbb
cmp
adc
lahf
imul
push
adc
sbb
data16
sbb
fmul
sbb
sti
pop
push
jle
clc
push
and
fld
pusha
es
sub
shl
ss
mov
es
in
movs
fistp
ds
push
cwde
mov
repz
or
push
nop
and
and
repz
sub
fs
or
mov
push
fldcw
push
test
push
jbe
push
sbb
jge
int
sar
popa
les
inc
fwait
in
xchg
push
fs
jg
ins
ds
outs
push
push
cmp
lods
loopne
shr
sub
je
or
out
(bad)
out
ins
ds
adc
mov
mov
jmp
mov
shl
mov
nop
mov
jo
fsubrp
ss
data16
mov
push
push
pop
cmp
aaa
mov
mov
inc
dec
jnp
add
xchg
adc
push
xor
cmp
fwait
mov
sahf
out
sub
xchg
mov
fild
ss
dec
jae
cmp
out
mov
push
stc
cmp
repz
leave
icebp
sbb
out
sahf
cmps
inc
imul
xor
lods
aad
mov
repnz
push
jnp
out
ds
iret
stc
and
dec
jnp
repz
cmps
sar
sub
inc
pop
cmp
repz
jg
mov
repz
fsubr
push
cmc
mov
jns
out
dec
outs
xchg
mov
out
mov
push
fcomp
sahf
pop
xchg
(bad)
push
clc
test
in
and
inc
imul
ja
or
mov
push
mov
cmp
out
push
std
repz
cmps
cmp
iret
repz
sub
hlt
ss
jns
(bad)
js
cld
sar
and
cli
sub
ds
xchg
into
das
add
repz
sahf
ret
call
sahf
cmps
stc
cmp
sbb
lahf
ficomp
add
xor
out
push
in
or
sub
cmp
repz
ins
mov
or
dec
jno
cmps
inc
test
enter
out
cmp
call
xor
out
lods
retf
jmp
repz
mov
jl
cmps
pop
xchg
aam
or
iret
mov
sbb
inc
ja
imul
sub
out
sahf
cmp
jecxz
adc
popa
xor
out
mov
imul
mov
adc
jl
out
mov
adc
out
cmp
jne
into
stc
and
dec
jl
stc
push
push
pop
call
and
push
push
lahf
out
test
imul
mov
adc
inc
out
sahf
out
lea
mov
push
imul
call
sbb
jns
ja
push
jle
aad
sbb
xor
ret
lahf
out
call
pop
ds
repz
jae
(bad)
and
out
jle
pusha
xchg
out
and
push
repz
aaa
and
and
outs
icebp
jns
xor
push
mov
out
inc
push
push
bound
scas
daa
sbb
mov
and
gs
or
jmp
pop
ret
es
pop
test
push
dec
sahf
push
mov
ins
dec
xor
fadd
mov
sbb
mov
aam
push
sub
cmp
dec
je
es
xchg
mov
adc
or
pop
data16
adc
inc
je
cmp
inc
pop
cmps
mov
out
jb
js
add
add
bound
dec
xor
xchg
test
enter
mov
les
(bad)
push
cwde
mov
repz
sub
movs
mov
push
jp
pop
xchg
test
mov
adc
mov
in
add
add
inc
adc
idiv
mov
or
bound
dec
mov
clc
or
shl
push
add
repnz
bound
das
out
add
mov
ins
jp
in
mov
test
movs
fiadd
stos
gs
adc
and
add
test
(bad)
xchg
nop
sbb
outs
mov
fidiv
pop
popa
stos
ss
(bad)
add
movs
bound
and
cmp
shr
retf
outs
rcl
sub
push
xchg
es
sbb
sub
jecxz
pop
inc
mov
dec
push
sub
in
ins
mov
pop
mov
pop
add
add
adc
inc
jne
pop
add
data16
add
popf
nop
ret
xchg
push
add
add
add
add
cs
cs
ds
nop
add
ja
outs
call
(bad)
fcmovb
pop
fs
sbb
jae
out
pop
ss
or
dec
je
sub
ficom
sbb
js
add
add
jp
jnp
add
sub
fiadd
or
jbe
test
sub
add
out
push
add
push
je
push
xor
adc
mov
add
inc
mov
in
ss
push
(bad)
imul
mov
gs
inc
and
jo
xor
or
inc
mov
inc
cmp
inc
add
in
cmc
movs
xor
fimul
test
pusha
ror
push
xchg
movs
nop
adc
dec
ins
rol
push
dec
xor
pop
les
push
add
inc
or
push
ins
imul
sub
push
cmp
inc
imul
sub
mov
xor
xor
inc
xor
xor
and
call
push
and
mov
or
pop
xor
lock
arpl
xor
pop
pusha
xor
adc
push
outs
les
and
outs
je
inc
gs
pop
lods
inc
ins
hlt
and
jnp
xor
pop
push
outs
popa
push
leave
xor
sar
dec
jns
js
pop
sbb
das
pop
and
leave
cmp
and
sbb
or
add
inc
push
or
imul
repnz
iret
pop
rol
xor
daa
inc
inc
les
movs
scas
adc
jno
dec
je
cmp
inc
jb
cmp
xor
mov
dec
fnsave
xor
scas
or
pop
mov
sub
sbb
je
xchg
pop
sub
out
inc
mov
aas
push
jb
xor
aad
fisub
and
arpl
jns
je
aaa
das
dec
ins
gs
stos
ror
loop
inc
mov
sbb
inc
inc
and
mov
ins
adc
add
add
xor
pop
or
adc
xor
inc
jge
jmp
pop
and
or
add
push
add
gs
jae
mov
or
pop
pusha
add
nop
sub
and
adc
pop
inc
dec
test
lea
test
jne
fsub
adc
sub
dec
mov
add
jne
aam
add
popa
add
inc
aaa
outs
out
add
cmp
inc
and
sub
lods
mov
or
pop
mov
adc
push
fsub
sbb
xor
or
sub
mov
or
cmp
inc
jns
sub
push
push
mov
xchg
xor
push
push
lahf
push
and
add
fwait
pop
push
pusha
sub
mov
push
xchg
adc
inc
les
pop
sub
jne
dec
mov
pop
rcl
into
pop
pop
jbe
and
sbb
jo
pop
pop
push
ins
imul
mov
fsub
rcr
sub
mov
add
push
inc
push
sbb
dec
inc
jae
shl
mov
xor
mov
xor
dec
inc
pop
or
push
jle
and
fidivr
int
add
movs
add
xchg
aam
push
outs
jb
inc
outs
nop
imul
mov
mov
or
arpl
outs
inc
scas
ja
or
add
mov
dec
jp
stos
cmp
push
aad
je
push
jmp
aas
dec
popa
jbe
addr16
je
dec
xor
add
xor
jnp
shl
xor
jge
sbb
jge
jo
fisttp
fsub
jp
jne
int
inc
inc
add
stos
push
xchg
push
mov
mov
mov
push
adc
ret
pop
imul
fcom
outs
arpl
mov
pop
jb
movs
sub
jo
rcl
add
push
inc
add
pop
jbe
inc
add
inc
add
pop
mov
push
je
aas
adc
or
mov
and
bound
add
jecxz
push
inc
jo
mov
arpl
dec
mov
mov
and
sub
pop
inc
mov
pop
enter
repz
inc
mov
call
fsub
addr16
or
loopne
jno
jno
inc
inc
jo
push
test
inc
test
adc
popa
outs
bound
and
mov
inc
dec
adc
add
mov
or
jns
inc
add
push
or
add
js
aam
push
and
sbb
and
loopne
inc
xor
sbb
mov
and
gs
inc
pop
nop
bound
or
jo
inc
ins
xor
dec
or
scas
push
xchg
jb
inc
dec
dec
imul
or
add
cmps
fidivr
push
sbb
shr
dec
or
cmps
sub
dec
inc
leave
dec
shr
add
jg
pop
sub
add
add
or
lds
adc
inc
add
in
cmp
sub
rol
sbb
sbb
add
mov
cdq
fsubr
sbb
add
cld
cmp
mov
aas
push
pop
jmp
rcr
pushf
(bad)
cld
add
or
xor
dec
repnz
aas
(bad)
jg
pop
sbb
pusha
addr16
jge
push
lds
or
movhps
add
mov
or
rol
rol
mov
xor
pcmpgtd
clc
jg
test
dec
mov
mov
out
push
ficomp
jb
sbb
out
ja
add
loopne
cmp
pop
clc
sbb
or
pop
bound
pop
cld
pop
das
lock
pop
xchg
ret
pop
add
lock
aas
fidiv
xor
cmp
push
(bad)
ins
jl
cmp
pushw
jbe
jg
lock
je
jg
inc
ja
out
shl
rol
xchg
enter
lock
cmp
or
push
add
pavgb
jg
push
xor
imul
retf
(bad)
dec
inc
add
iret
jno
fistp
add
mov
daa
add
pop
xchg
sbb
pcmpeqb
loopne
adc
add
test
aaa
add
push
clc
retf
push
cmp
lock
fcmovb
pop
pop
es
(bad)
idiv
add
pop
push
inc
loopne
outs
push
fidiv
clc
pop
adc
push
add
pop
pop
add
je
loopne
pop
sbb
fisubr
sub
mov
psubusb
stos
aas
pop
add
mov
pop
xor
pusha
mov
in
les
test
cmp
aas
ja
aas
nop
adc
or
pusha
add
loope
pop
bound
cld
pop
cmp
mov
mov
add
lock
cmps
inc
push
addr16
das
lds
and
iret
std
push
stos
mov
lahf
mov
sub
inc
add
cmp
push
jle
inc
add
cmp
shl
sbb
push
push
sbb
aaa
cmc
movs
test
(bad)
push
xor
not
clc
dec
sbb
ss
int
cmp
sbb
or
test
test
loope
stos
sub
add
push
xchg
test
xchg
push
push
and
stos
stos
and
je
add
sub
jbe
xchg
into
and
arpl
add
push
ins
adc
outs
adc
rol
imul
jo
push
imul
ss
ss
add
outs
out
mov
imul
popa
mov
jle
mov
imul
mov
pop
jns
outs
mov
push
data16
outs
in
jle
pop
add
imul
outs
dec
xlat
rcr
xchg
addr16
out
jbe
gs
and
imul
add
mov
jb
jbe
fstp
adc
out
and
pop
push
push
sub
cmp
fild
je
jne
mov
sub
jp
pop
push
jae
ret
push
push
or
add
mov
js
pop
jae
and
mov
jp
outs
add
dec
add
inc
xchg
pop
jmp
popa
arpl
sub
mov
xor
cmp
popa
add
push
inc
sub
ja
lea
in
jbe
inc
push
xor
add
xchg
push
add
ffree
sti
fiadd
push
and
dec
dec
imul
jnp
data16
push
adc
push
ret
add
ja
dec
or
inc
pop
xchg
std
or
push
into
push
inc
jae
out
(bad)
inc
add
ins
inc
jo
sub
mov
mov
jge
je
jne
jo
pop
loopne
jmp
pop
or
test
add
jnp
(bad)
add
add
pop
out
add
dec
ss
sbb
add
push
iret
arpl
jnp
dec
adc
push
inc
add
lock
sub
push
xor
jns
es
addr16
jnp
xor
ins
add
mov
popa
fucomi
std
lahf
je
sub
imul
or
outs
popa
pop
outs
inc
add
sub
das
push
push
bound
jae
arpl
out
aad
shr
aas
push
imul
ins
sub
jae
pop
iret
or
idiv
add
dec
ds
inc
aad
mov
cmps
lahf
imul
cmps
ja
fs
lahf
fs
xlat
pop
pop
inc
jo
ja
(bad)
fbstp
je
jb
call
pop
jae
je
int
fst
je
cmp
and
(bad)
retf
mov
sbb
dec
das
gs
jne
fisttp
mov
cmp
call
popa
mov
add
sbb
push
shl
dec
jg
aaa
bound
cmp
push
pop
xor
sub
jae
and
sbb
mov
daa
das
adc
ror
jg
add
cs
ret
fiadd
or
cmc
fidiv
shr
pop
rol
call
or
push
add
call
test
sub
arpl
mov
out
pop
shl
fistp
rol
je
mov
shl
aas
xlat
aad
stos
push
dec
add
pop
pop
add
ins
daa
pop
add
inc
push
adc
add
test
sub
pop
mov
add
sbb
arpl
loopne
(bad)
or
imul
and
push
add
inc
cmp
mov
pop
cwde
mov
add
xor
mov
addr16
(bad)
clc
sbb
add
xchg
push
mov
addr16
jb
pop
shr
das
push
sbb
or
ins
aas
sub
daa
adc
ss
adc
stos
inc
mov
imul
xor
mov
add
and
fistp
inc
mov
inc
fs
popa
das
jge
(bad)
jae
je
sbb
cmps
ja
jb
sub
push
xlat
stos
pop
mov
and
push
pusha
and
fs
push
(bad)
arpl
gs
mov
add
sbb
xchg
arpl
mov
sub
js
xchg
popa
out
addr16
loope
fs
fwait
push
xor
xlat
push
and
inc
xlat
pop
loopne
xchg
sbb
lahf
loope
cwde
pop
xchg
cwde
adc
pop
inc
aam
cmp
inc
rol
mov
retf
rcl
outs
(bad)
shl
pop
out
(bad)
pop
sar
push
imul
or
dec
sbb
jno
jae
inc
adc
push
pop
add
and
add
xlat
xor
data16
sub
jne
pop
or
inc
sub
aaa
add
push
fs
and
push
fcomp
scas
rol
jg
sub
push
sbb
push
xchg
and
and
je
push
pop
xlat
adc
sbb
dec
mov
arpl
sbb
arpl
nop
add
movs
and
add
or
imul
push
cld
pop
jne
outs
out
push
pop
jne
dec
arpl
je
repz
test
inc
pop
adc
sbb
dec
sti
add
pop
adc
dec
cwde
adc
push
push
js
add
xchg
cmp
fsubr
cmp
add
sbb
dec
and
adc
jnp
aas
std
nop
(bad)
or
movq
add
outs
pop
or
mov
inc
or
jne
mov
and
rol
mov
mov
add
add
add
pop
xchg
mov
cmps
dec
aad
dec
sbb
repz
ror
repz
sbb
sbb
push
add
cmp
add
mov
add
add
pop
fwait
sbb
fnstsw
jb
stos
or
xchg
je
pop
inc
ficom
imul
outs
dec
xor
inc
xor
sub
push
out
hlt
call
jo
sub
xor
cmp
adc
idiv
pop
ja
stos
shl
das
gs
mul
push
outs
enter
pop
adc
rcl
ins
repz
out
jle
cwde
xor
push
xbegin
sbb
dec
jo
or
mov
cmp
mov
inc
jo
and
xor
aam
adc
jae
pushw
adc
arpl
add
rol
mov
gs
push
jo
jg
(bad)
sbb
rcl
das
sub
lds
mov
push
push
icebp
or
and
aas
cmp
jae
loope
dec
adc
mov
add
and
push
sub
pop
jne
fisttp
adc
jmp
jecxz
aad
sub
fsub
add
mov
mov
cmp
add
add
mov
out
aas
mov
dec
pop
or
scas
clc
jno
fbld
push
add
jbe
addr16
cmp
arpl
push
adc
ret
sub
xor
aas
xor
pop
cmps
pop
pop
adc
lds
arpl
and
sbb
xor
inc
and
or
mov
ins
add
push
jne
adc
movs
mul
cmp
cmp
and
sbb
jg
sahf
inc
pop
xor
add
push
ja
add
push
aaa
jecxz
jmp
adc
push
(bad)
aaa
and
push
mov
punpckldq
mov
add
xchg
ins
lahf
pop
mov
jae
mov
jg
push
mov
and
call
rol
mov
dec
das
adc
push
mov
imul
jns
test
inc
outs
pop
sub
adc
arpl
fs
lods
jo
shr
clc
lods
add
aas
jns
add
popa
mov
inc
sbb
sbb
and
adc
push
mov
fs
mov
fild
(bad)
add
adc
push
pop
jb
rol
arpl
stos
int3
sbb
sbb
packuswb
outs
arpl
xor
sub
add
shl
arpl
push
(bad)
jno
adc
imul
jg
arpl
sbb
adc
dec
mov
and
inc
adc
pusha
imul
push
sti
add
add
mul
adc
add
je
jns
or
fwait
adc
push
(bad)
sub
xchg
dec
inc
pop
sar
lea
out
and
mov
imul
cmp
das
mov
adc
add
hlt
test
fild
push
scas
jne
stos
add
sbb
adc
arpl
push
mov
push
movs
les
or
pop
inc
and
imul
and
lahf
mov
jnp
add
mov
or
test
mov
add
popa
lahf
icebp
and
fidivr
lds
inc
call
and
mov
and
in
inc
pop
and
aaa
sub
xchg
call
mov
and
xchg
fbld
and
loopne
outs
or
and
outs
or
das
cmp
inc
mov
and
cwde
mov
das
jae
or
clc
or
and
daa
pop
pop
test
mov
fild
add
and
sub
push
imul
mov
adc
adc
pop
and
(bad)
les
adc
sbb
ins
add
imul
adc
push
mov
sbb
popa
outs
dec
or
add
add
sti
jne
or
pop
ret
mov
imul
or
sti
pop
sbb
sbb
dec
test
add
repz
jge
pop
xor
stos
add
lea
add
inc
mov
adc
es
mov
outs
pop
jo
cmp
add
push
and
arpl
sbb
mov
sub
rcl
idiv
in
and
add
and
ds
jae
loope
cmps
ret
imul
je
(bad)
xchg
popa
pop
push
xor
mov
aam
sbb
inc
dec
jae
je
xor
inc
loop
cmps
scas
sbb
(bad)
cmp
add
pop
pop
jo
cmps
pop
jae
sub
add
outs
retf
daa
add
inc
sar
ja
(bad)
adc
push
inc
test
jmp
or
lock
mov
mov
pop
pop
and
js
sub
outs
inc
xor
out
mov
sbb
imul
daa
push
xchg
sub
(bad)
fistp
and
jae
and
jae
mov
movs
xor
dec
clc
rol
and
push
test
out
daa
add
adc
jmp
pop
push
xor
or
dec
sub
jmp
(bad)
inc
push
sti
es
aaa
mov
pop
fwait
cmp
pop
push
push
dec
adc
cmc
rol
dec
loopne
add
jo
enter
inc
inc
aaa
add
dec
clc
add
outs
xchg
lock
pushf
xor
gs
push
bound
in
pop
pop
sub
or
dec
imul
jg
jl
push
imul
inc
outs
ins
push
inc
je
lods
inc
ret
xor
cmp
inc
push
dec
add
pop
(bad)
fcos
pop
mov
dec
push
pop
inc
dec
inc
push
push
inc
push
or
addr16
js
ror
lock
mov
retf
add
or
adc
fiadd
lahf
ret
or
push
dec
ins
or
mov
ins
or
cld
dec
inc
daa
jo
aam
push
jo
or
gs
inc
push
or
pusha
mov
pop
dec
adc
push
pop
scas
and
test
outs
jne
or
pop
or
outs
out
lods
and
outs
jns
or
sbb
add
and
push
lock
in
add
ins
jae
sbb
xchg
outs
arpl
pusha
or
rol
or
or
add
(bad)
xor
push
mov
div
mov
or
ret
or
je
out
cs
dec
outs
jne
inc
outs
ja
push
test
das
inc
or
inc
fist
je
das
add
sbb
push
dec
fsubr
icebp
jns
mov
add
inc
icebp
pop
sbb
adc
add
push
inc
jne
js
and
or
push
jl
pop
push
stos
xor
sti
push
push
cmps
loope
and
jae
in
lock
jne
pop
inc
mov
push
fs
inc
gs
dec
jne
xor
push
or
imul
pusha
into
mov
cmp
int
enter
sbb
ins
xor
push
pop
adc
inc
adc
cli
outs
push
fs
xor
gs
or
xchg
shl
push
fld
xor
jae
push
popa
(bad)
int
add
mov
sbb
aaa
or
adc
stos
xchg
test
jecxz
cmp
pop
in
adc
or
xlat
adc
scas
outs
outs
pop
sbb
xor
ret
leave
pop
bound
bound
push
pop
aas
bound
add
pusha
mov
sub
add
inc
loope
cmps
or
xor
sahf
scas
dec
adc
es
dec
pop
add
inc
cld
push
loopne
push
mov
iret
adc
adc
das
inc
adc
cmp
es
add
sub
out
or
adc
jne
(bad)
loopne
dec
jno
jo
test
mov
adc
pop
or
adc
add
retf
mov
add
mov
dec
sub
dec
dec
pop
dec
dec
cs
or
sub
loope
inc
add
sbb
inc
popa
out
pop
inc
es
xor
add
mov
mov
sbb
xor
repz
sub
cmp
inc
ins
pushf
jmp
in
push
data16
xchg
adc
add
inc
mov
or
xchg
sub
push
pop
(bad)
xor
pop
cmc
mov
mov
add
sbb
loopne
xor
add
push
jmp
ja
xor
lods
add
pop
inc
inc
shl
sub
pop
add
dec
dec
jbe
jmp
clc
outs
loop
fsubrp
in
and
push
xor
jbe
jbe
aaa
imul
loope
jno
push
mov
addr16
popa
ret
cmps
ret
mov
jae
add
imul
mov
adc
jnp
js
push
mov
pop
mov
je
push
sbb
push
add
aaa
xor
scas
sub
mov
mov
xchg
js
add
rol
or
mov
ins
jns
mov
bound
pop
push
lock
cld
ins
test
outs
push
or
or
or
fdiv
mov
rol
sub
sub
push
adc
xchg
stos
push
rcr
mov
test
jo
mov
add
add
dec
xor
mov
daa
add
pop
leave
xchg
pop
add
push
push
push
in
xchg
pop
add
adc
push
push
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
push
push
and
xchg
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
add
add
mov
out
sar
push
fs
add
inc
test
push
jae
add
or
push
sbb
arpl
mov
fdiv
pop
push
push
add
xor
imul
mov
ins
push
gs
cwde
test
cvtps2pi
inc
out
sub
mov
push
cli
sub
ins
(bad)
test
jmp
adc
dec
bound
cmp
mov
data16
push
imul
mov
sub
inc
dec
sbb
cmp
adc
push
jb
je
pop
push
imul
jb
pop
dec
and
sbb
popa
ror
dec
imul
pop
jns
push
sbb
inc
inc
push
xor
(bad)
cdq
adc
add
movs
loopne
and
fisttp
push
push
mov
push
jo
outs
jmp
add
and
push
adc
test
pop
popf
inc
sub
enter
sub
push
adc
lahf
inc
add
xchg
mov
inc
daa
cmp
mov
dec
popa
jae
push
fldenv
mov
outs
lds
dec
shl
mov
daa
das
mov
dec
inc
dec
jg
inc
fs
loopne
xor
pop
rcr
dec
add
jb
jne
shl
aam
fs
sbb
mov
pop
jmp
pop
cmp
es
xor
inc
das
mov
push
jo
lock
je
push
inc
push
sub
and
mov
outs
je
ins
pop
outs
outs
xor
add
(bad)
outs
ret
test
pop
push
or
sar
data16
fmul
adc
mov
pop
ins
or
sbb
sbb
sub
aas
and
pop
js
or
xchg
pop
popf
sbb
imul
gs
cmp
sub
fist
push
outs
ins
push
push
dec
adc
scas
popa
xor
xor
or
push
mov
fs
arpl
sub
push
or
js
fiadd
outs
push
jae
mov
lods
popa
or
mov
(bad)
ins
test
jbe
push
popa
fs
pusha
push
xchg
inc
sbb
pop
mov
imul
scas
mov
jo
sub
jl
add
ret
or
sar
ins
sbb
dec
shr
push
popa
add
push
pop
adc
push
lods
adc
(bad)
je
pop
jne
aas
push
je
aad
btr
push
mov
sti
scas
adc
mov
push
jb
inc
adc
pop
mov
sbb
xchg
push
sbb
lea
imul
push
mov
cmps
add
add
jmp
loope
fmul
ins
jae
adc
adc
xor
jne
jne
push
sbb
fs
sbb
lods
rcr
mov
sbb
sub
push
xor
xchg
mov
push
add
fucomi
jbe
outs
adc
sub
pop
adc
fcomp
add
pop
arpl
inc
adc
stos
or
adc
jne
cmp
sub
imul
push
inc
adc
ins
in
lock
fidivr
push
xchg
scas
aad
cmp
fisttp
sub
gs
inc
sysret
ja
push
add
cmp
jbe
add
dec
movs
aad
add
in
push
xor
in
or
sub
shl
or
and
push
test
outs
daa
sbb
dec
outs
add
ja
rol
cwde
and
js
add
ins
mov
sub
das
xchg
add
inc
retf
lahf
mov
and
gs
fs
mov
pop
ins
popf
pusha
into
test
push
ins
sahf
stos
sub
push
sub
and
pop
push
sbb
sub
cmps
or
sbb
ins
je
and
enter
ins
popa
imul
and
bound
call
push
sub
hlt
bound
loopne
cmps
das
inc
inc
daa
inc
dec
inc
xor
and
pop
fmul
cli
jmp
mov
ins
data16
push
bound
(bad)
gs
sbb
mov
and
or
fcomp
les
jp
sub
and
in
gs
js
push
and
inc
ins
mov
fiadd
jae
mov
dec
jb
das
into
push
or
dec
adc
pop
dec
xor
bound
mov
inc
inc
pop
(bad)
jbe
mov
jmp
dec
inc
daa
sub
test
imul
inc
aaa
ins
or
mov
sub
jo
gs
add
and
popa
pop
gs
push
pop
dec
inc
stos
test
gs
mov
je
push
xor
and
sbb
dec
arpl
or
push
pop
pushf
mov
ja
fisubr
jecxz
or
ds
enter
hlt
dec
popa
jae
adc
and
popa
or
stos
cdq
xor
add
ins
jns
outs
sbb
ret
mov
adc
outs
addr16
pusha
adc
(bad)
arpl
push
mov
sbb
mov
adc
push
aad
mov
dec
mov
or
not
push
xor
pusha
or
fadd
(bad)
jmp
ja
push
je
in
loope
imul
mov
add
xchg
pop
je
popa
jo
xlat
add
xor
jae
leave
push
cmp
xor
mov
push
xchg
or
inc
dec
outs
sbb
rsqrtps
sub
ins
fmul
loop
outs
dec
outs
add
or
mov
shl
shr
mov
add
mov
dec
push
pop
cmps
pop
ret
and
movs
call
and
nop
xor
rcl
xchg
sbb
add
xor
add
add
dec
shl
push
xor
shr
xchg
or
pop
sub
dec
cmp
fisub
or
adc
push
stos
stos
add
mov
and
out
scas
push
push
dec
inc
or
mov
stos
mov
or
push
(bad)
lds
fs
in
outs
jle
fs
jae
pop
rol
cmps
mov
adc
imul
add
xor
inc
jno
retf
pop
pop
popf
and
cwde
rcr
dec
sbb
pop
inc
jne
popaw
popa
iret
ins
pop
jns
mov
stos
enter
add
lds
arpl
sbb
pop
push
cmps
add
std
or
and
push
or
les
popa
ins
gs
or
inc
nop
push
pusha
(bad)
and
inc
jbe
movs
fwait
gs
xor
push
mov
pusha
push
lds
inc
fcomp
jae
arpl
call
fs
mov
retf
dec
fldenv
cmps
adc
int3
out
mov
pop
mov
push
push
mov
pop
test
adc
push
xchg
ins
push
and
rcl
in
push
and
in
and
mov
jnp
adc
paddsb
push
ins
push
jne
iret
add
retf
cwde
push
ficomp
push
sbb
stc
mov
push
xor
(bad)
push
xor
fld
jecxz
push
fwait
mov
test
inc
or
or
or
pusha
imul
jae
sbb
outs
jne
test
imul
sbb
sub
je
or
pop
and
arpl
ja
arpl
jno
mov
popa
mov
and
or
mov
movs
fstp
cmc
pop
dec
sub
or
ins
lods
jo
xor
sbb
rol
out
dec
mov
push
call
jne
pop
mov
sbb
stos
sbb
sub
and
rol
adc
ret
and
(bad)
gs
pop
dec
push
or
sbb
pop
pop
stos
outs
add
push
push
cmp
inc
sbb
inc
cmp
imul
jns
push
adc
test
movs
and
in
xor
dec
adc
and
movs
and
pop
outs
outs
ins
xor
dec
loop
jb
retf
xchg
dec
lahf
push
and
ins
outs
out
sbb
and
jge
fcom
sahf
cmp
push
sub
xchg
call
lea
adc
mov
dec
dec
dec
sahf
push
sbb
mov
jae
push
push
gs
nop
fadd
je
dec
(bad)
fisttp
and
bound
or
mov
fs
inc
mov
sbb
inc
inc
pop
fiadd
mov
and
imul
jbe
and
(bad)
mov
dec
hlt
(bad)
dec
pop
stc
loope
cmp
push
outs
nop
mov
push
outs
pushf
push
mov
add
push
push
dec
add
pop
mov
push
jae
push
cmp
adc
mov
push
mov
sbb
push
pop
jmp
push
push
push
out
dec
sub
das
cmp
sbb
outs
xchg
sbb
dec
sbb
jae
es
in
add
outs
push
dec
ja
mov
mov
jmp
push
dec
(bad)
out
mov
outs
pushf
push
push
arpl
push
cmp
push
xchg
pop
sub
mov
jno
cmc
mov
loopne
cs
idiv
sub
inc
adc
add
and
jb
imul
sbb
dec
add
mov
arpl
dec
jno
mov
jo
sbb
inc
and
fstp
xlat
inc
pusha
add
sbb
pop
sub
push
imul
dec
mov
push
mov
add
add
push
mov
lsl
add
sti
fdivrp
ins
push
lock
rcl
adc
mov
sar
xor
leave
add
ltr
ficomp
adc
movups
mov
loope
and
and
test
push
mov
test
cmovl
loop
mov
adc
push
les
add
shr
adc
outs
mov
ins
pusha
cs
sbb
add
pusha
fild
movs
push
mov
dec
sbb
js
fcmovnb
sahf
ins
jae
nop
push
stc
sub
mov
ins
push
jb
xchg
dec
xor
xor
loope
mov
inc
cs
pop
in
or
cmps
add
dec
fdiv
arpl
xlat
mov
push
rol
js
test
push
es
shl
add
enter
mov
and
add
inc
inc
add
pusha
mov
lea
mov
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
test
add
inc
dec
