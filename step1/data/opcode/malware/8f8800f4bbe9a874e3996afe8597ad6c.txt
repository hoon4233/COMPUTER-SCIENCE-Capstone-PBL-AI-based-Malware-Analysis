add
add
add
add
inc
inc
push
call
ret
add
add
ss
xchg
stos
and
rol
(bad)
mov
popf
jmp
pop
sub
inc
inc
inc
pop
and
clc
sbb
sbb
aam
call
out
aad
movs
out
ret
inc
cwde
or
push
rol
jmp
nop
rcl
dec
js
cli
adc
clc
sbb
push
loope
jmp
cmp
clc
ja
es
or
loop
mov
and
leave
out
mov
repz
add
pop
sti
dec
jge
call
dec
xchg
dec
mov
sub
dec
aam
test
and
dec
std
xchg
jo
jns
jmp
inc
push
or
mov
and
pop
fbld
outs
popa
inc
xchg
mov
cmps
aas
ret
into
neg
lea
lds
sbb
rcl
or
add
inc
inc
adc
pop
stc
iret
and
jb
pop
cmp
mov
xor
cwde
stc
push
and
dec
rcl
sbb
(bad)
fisub
push
aad
mov
dec
jae
inc
push
push
js
jp
mov
daa
xchg
sbb
mov
movs
xor
ins
out
mov
cmc
xchg
repnz
inc
jmp
add
add
sahf
jne
inc
and
mov
dec
xchg
mov
test
imul
jle
sar
dec
lods
mov
in
test
mov
jo
dec
shl
retf
sbb
mov
xchg
xchg
out
sbb
add
add
push
cmp
(bad)
xchg
lods
sbb
int
mov
inc
cmc
fwait
add
cwde
(bad)
xchg
or
daa
add
add
dec
jbe
bound
xchg
adc
fsubr
jno
sbb
fidivr
shr
fdiv
jae
pop
inc
pop
pop
rcr
cwde
sub
mov
sbb
jb
enter
mov
repnz
push
mov
pop
pop
aas
cdq
cmps
mov
arpl
repz
test
jnp
cmp
test
stc
ja
push
outs
popa
sub
sbb
jle
and
ja
(bad)
and
out
cmp
mov
and
inc
jo
xchg
lock
xchg
idiv
pop
inc
push
adc
push
jle
or
pop
mov
xor
bound
in
mov
dec
sbb
fisttp
adc
jbe
stc
and
es
pop
mov
leave
aad
repnz
in
push
or
aam
xchg
jge
push
xchg
mov
retf
mov
and
fs
jno
sbb
jae
or
jmp
mov
cmp
mov
cmp
cdq
and
add
push
dec
aam
or
inc
and
jnp
mov
rcl
ds
ja
mov
push
inc
push
adc
icebp
std
je
mov
pusha
shr
sub
pop
pop
imul
inc
jb
fcom
scas
pop
and
add
push
cmp
idiv
je
xlat
mov
adc
or
js
pop
jnp
daa
xor
in
pop
sbb
push
das
ret
loopne
ins
fstp
imul
jg
imul
cwde
cli
adc
xchg
pop
sbb
mov
jnp
ss
pop
jmp
int3
ret
mov
cld
pop
jae
movs
mov
push
pop
inc
pop
mov
xor
es
mov
clc
imul
mov
pop
sbb
test
(bad)
add
in
mov
dec
das
leave
xchg
pop
pop
aam
dec
test
cmp
sbb
mov
test
sahf
mov
stc
cmp
inc
push
dec
xchg
out
(bad)
cmp
push
dec
xchg
stc
jg
jg
popa
rol
dec
(bad)
(bad)
ficomp
mul
fwait
shr
ja
jmp
add
nop
xor
pushf
ror
add
xchg
push
xor
(bad)
cld
sub
shr
es
sub
adc
enter
imul
fild
in
adc
mov
in
pop
je
(bad)
fsubr
add
aad
repnz
lea
mov
imul
mov
fist
(bad)
(bad)
rcr
fwait
or
inc
lock
(bad)
sahf
call
and
ja
mov
push
and
out
jge
in
icebp
jg
xchg
jb
sahf
shl
rcl
dec
div
push
xchg
outs
outs
or
mul
jle
xlat
xchg
pop
in
cmp
pushf
add
or
lods
xchg
sbb
(bad)
pop
mov
fisubr
hlt
int
stc
mov
mov
sub
(bad)
ds
dec
sub
cmp
pusha
in
cmps
shl
pop
fistp
mov
aad
mov
movs
cmp
iret
mov
adc
dec
sub
imul
dec
(bad)
out
inc
ins
ror
or
adc
sbb
out
xchg
xchg
sub
sbb
movs
xor
out
bound
mov
jns
mov
sbb
lds
xor
ror
loop
push
std
imul
stos
shl
out
fdiv
xor
out
mov
test
cmp
fisttp
stc
xor
ror
call
pusha
mov
dec
dec
inc
xchg
push
add
or
ror
in
or
inc
cmp
fcomp
out
or
pop
not
ss
sbb
loop
mov
pop
aad
push
shr
out
sti
xchg
fisttp
lahf
adc
pop
dec
cld
inc
mov
fiadd
les
out
std
add
mov
mov
pop
xchg
push
sbb
cmps
add
outs
(bad)
ja
jne
pop
xchg
sbb
iret
cmp
mov
lods
adc
lock
add
repz
and
push
sbb
xchg
mov
(bad)
fbld
dec
ja
inc
mov
inc
mov
shl
jo
jg
cmp
mov
mov
jle
aam
xchg
xor
mov
mov
adc
adc
mov
and
push
push
out
leave
push
xchg
cld
inc
stc
mov
lea
pop
and
out
jns
outs
sub
aaa
add
div
inc
dec
mov
xchg
lods
repz
int
push
dec
adc
mov
xor
mov
xchg
jb
retf
pop
mov
out
shl
outs
mov
nop
inc
stc
jbe
mov
add
add
nop
and
sub
leave
and
pop
lea
sub
sub
cmps
ss
pusha
pop
(bad)
not
push
aad
test
dec
jb
pop
and
aas
rol
cli
adc
fsubr
rcr
or
mov
ja
or
or
out
push
pop
pusha
loopne
in
mov
cmc
and
stos
add
mov
fwait
cmc
and
pop
dec
(bad)
jmp
in
test
and
push
inc
or
mov
inc
dec
outs
aad
test
(bad)
push
stos
int3
pop
adc
jmp
add
add
pop
pop
jmp
push
jmp
xor
add
jmp
add
add
jmp
mov
ror
mov
add
mov
ret
mov
mov
rol
shl
and
and
jmp
mov
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
push
call
cmp
jne
jmp
call
shr
jmp
shr
jmp
shr
add
jmp
push
call
ret
nop
nop
jmp
add
push
jmp
call
jmp
cmp
jne
call
shr
shr
add
push
ret
push
call
ret
dec
dec
add
push
ret
mov
mov
push
push
push
push
call
cmp
jne
pop
pop
mov
mov
xor
mov
inc
mov
loop
jmp
mov
add
dec
xor
push
jmp
nop
push
push
jmp
push
push
push
jmp
push
jmp
call
mov
mov
push
push
push
call
push
call
cmp
je
jmp
push
push
push
push
call
jmp
add
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
