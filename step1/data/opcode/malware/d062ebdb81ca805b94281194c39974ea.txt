(bad)
(bad)
(bad)
call
in
mov
mov
mov
mov
pop
ret
sbb
mov
inc
test
jne
sub
mov
ret
jne
add
or
call
(bad)
cmp
add
aaa
shr
push
mov
idiv
stc
mov
test
je
cmp
je
or
je
mov
cmp
je
jo
data16
neg
jne
or
push
sbb
push
or
jmp
or
or
inc
add
push
and
pop
pop
ret
push
mov
std
out
mov
mov
dec
lock
fdiv
leave
mov
mov
push
adc
ins
cmp
jne
mov
cmp
pop
mov
sbb
enter
mov
(bad)
pop
shl
push
push
sbb
mov
push
lods
or
add
fld
(bad)
pop
ret
arpl
lock
inc
and
in
stos
push
push
call
add
neg
cs
pop
mov
test
and
or
sbb
or
or
mov
std
shl
test
mov
jo
(bad)
in
fld
sbb
jns
push
push
js
sti
jne
pop
jne
add
push
push
test
and
sbb
or
pop
push
push
ins
shr
clc
push
mov
inc
add
xchg
sbb
fwait
xchg
adc
sub
or
outs
mov
mov
test
sar
setne
ror
sti
ja
lds
push
push
push
mov
mov
add
int3
or
lock
dec
pop
mov
jg
push
cmp
push
add
(bad)
(bad)
mov
je
mov
cmp
jb
cmp
ja
push
push
mov
mov
mov
out
cmc
push
push
shl
and
mov
sub
or
in
pop
fstp
push
or
inc
mov
or
jne
mov
call
ficom
push
mov
es
lock
mov
mov
pop
xchg
add
ret
cmp
add
push
add
fwait
mov
ja
cmp
push
call
sbb
dec
cmp
je
mov
mov
inc
(bad)
adc
mov
jmp
mov
cmp
adc
xchg
push
and
add
cmp
ss
inc
inc
cdq
into
sub
test
ja
(bad)
push
loopne
fild
add
ret
scas
xor
div
adc
mov
jmp
mov
push
cmps
sbb
stos
std
arpl
dec
cmp
inc
inc
sti
mov
cmps
fnstcw
push
mov
add
push
pop
mov
cmp
jle
add
push
push
mov
pop
pusha
dec
adc
pop
mov
aas
(bad)
fisubr
push
iret
int3
push
jmp
jbe
adc
adc
(bad)
or
add
ja
inc
jmp
fisub
xor
jne
and
add
jnp
mov
cmp
je
ja
test
mov
sub
fld
mov
mov
fwait
or
shl
cmp
dec
mov
ror
and
push
loop
retf
shl
mov
fs
xchg
add
adc
fadd
sub
test
in
and
adc
and
rol
addr16
cmp
jp
dec
hlt
xor
call
add
mov
pop
addr16
jecxz
(bad)
add
adc
add
add
out
push
test
pop
adc
mov
jge
or
inc
add
cwde
mov
sbb
fsubr
(bad)
fdiv
mov
sub
dec
clc
jns
mov
pushf
adc
adc
enter
pop
fisttp
outs
xchg
pushf
cmp
jge
mov
inc
push
lea
push
or
push
xor
mov
adc
mov
cmp
clc
pop
cld
mov
cld
mov
pop
leave
movs
(bad)
sbb
jl
lock
add
sbb
adc
jle
add
pop
push
test
maxps
inc
ins
and
add
push
sbb
jo
enter
sub
xor
xor
sub
fisttp
jl
cmp
sbb
fsubrp
pop
push
fcom
pop
sub
mov
add
or
fwait
inc
mov
push
ret
push
jne
pop
cmp
add
adc
cwde
pop
clc
sbb
cmp
xchg
std
scas
mov
cmp
jae
mov
and
dec
sbb
(bad)
out
imul
or
adc
inc
add
add
push
push
sub
push
add
push
push
cmp
jb
push
cmc
cmp
repnz
pop
xchg
inc
adc
stc
mov
mov
in
or
cmp
jbe
adc
and
aaa
or
in
shr
(bad)
rcr
sbb
dec
jae
push
pop
sub
cmp
ja
xor
movs
rcl
or
or
dec
ror
xor
mov
push
cli
dec
in
inc
fs
jle
sbb
pop
mov
mov
jnp
xchg
mov
cld
inc
pop
lea
test
mov
inc
out
and
mov
sbb
sbb
mov
ja
enter
add
cld
in
cs
not
in
push
push
lds
pusha
push
sbb
adc
cmp
jle
into
icebp
or
or
aam
xor
and
inc
sub
jge
mov
mov
add
shr
shl
jge
mov
shl
jns
aas
icebp
and
data16
mov
repz
dec
inc
imul
push
pop
push
xchg
inc
imul
loopne
pop
jecxz
add
add
mov
(bad)
(bad)
jbe
(bad)
sbb
or
lds
fs
push
xor
cmp
pop
mov
inc
adc
mov
(bad)
push
push
mov
mov
or
xchg
das
rcl
(bad)
sbb
pop
neg
adc
in
mov
aad
fnstcw
test
sbb
out
inc
inc
cmp
mov
adc
push
stos
lea
jl
jecxz
push
mov
or
jnp
mov
js
mov
imul
imul
add
or
push
push
xor
pop
shl
pop
inc
inc
sub
sbb
jge
ret
pusha
xchg
jae
jne
lds
les
sbb
or
fnstsw
aas
sub
ret
lea
sbb
inc
push
daa
sahf
adc
mov
jno
retf
fnstcw
inc
cmp
sbb
sub
cmp
add
(bad)
jg
fbstp
push
add
mov
push
mov
jmp
adc
or
test
aaa
iret
data16
loopne
sub
cmps
dec
sbb
push
xlat
outs
xor
or
add
push
push
fstp
push
cmp
push
mov
shl
or
or
jmp
push
push
scas
jmp
retf
mov
rol
fsubr
mov
arpl
mov
pushf
cmp
(bad)
sub
push
sbb
sar
pop
les
add
sbb
jle
add
loopne
mov
or
push
push
cmp
adc
push
mov
std
and
dec
ins
add
xlat
dec
mov
test
in
or
fwait
adc
push
xor
loope
or
or
outs
add
shl
dec
cmp
lea
mov
inc
test
push
pop
mov
test
and
hlt
mov
pop
or
ror
adc
mov
push
add
pusha
cmc
popf
sbb
dec
femms
and
inc
or
ins
out
or
ins
xchg
pop
sbb
jle
mov
or
dec
add
add
jne
lock
push
xor
inc
add
adc
das
add
leave
add
dec
push
sti
add
rcr
inc
in
cmp
cmp
aam
or
jge
and
gs
add
add
sti
or
jno
or
stos
push
mov
sub
loope
enter
dec
mov
sar
aam
ja
fisub
push
push
test
pushw
cld
and
shr
push
cmp
mov
mov
or
sar
mov
xor
das
mov
sar
adc
lds
loope
call
ficomp
mul
add
call
inc
aad
mov
repnz
inc
jb
inc
(bad)
test
push
sub
rcl
out
aad
inc
sub
inc
js
or
cmp
xor
sub
(bad)
out
sub
shr
xlat
adc
rol
sbb
shl
and
neg
sbb
push
pop
ret
push
inc
std
sti
(bad)
test
ror
shl
or
inc
imul
mov
(bad)
loop
shl
inc
sbb
out
in
retf
xor
xor
cmp
je
fsub
sub
call
test
jne
add
inc
cmp
jb
inc
cmp
jb
(bad)
call
inc
mov
mov
shl
add
jmp
rol
enter
data16
push
add
sbb
inc
cmp
jge
mov
push
pop
pop
mov
xor
nop
pusha
or
cmp
je
pop
or
pop
and
sbb
push
push
adc
test
in
jne
pop
jnp
or
ret
je
push
sbb
pop
cmc
xor
or
aaa
loop
outs
cs
mov
cmps
push
mov
sbb
mov
popa
pop
sub
test
test
std
out
and
(bad)
pop
mov
mov
(bad)
mov
(bad)
jge
inc
push
fst
fstp
and
cmp
pop
or
std
jg
pop
inc
mov
cmp
dec
or
add
sub
dec
inc
imul
add
jl
jb
rcr
add
sar
add
jnp
mov
or
fdivrp
push
mov
ret
mov
int
adc
pop
fcomp
inc
mov
fs
adc
lahf
rcr
add
adc
cmc
mov
mov
dec
scas
add
inc
dec
clc
dec
clc
clts
sbb
loopne
cmp
add
push
lock
popa
push
cli
add
stc
sar
add
aad
es
pop
test
cli
and
sti
push
sti
xchg
push
lock
adc
cmp
push
leave
aad
retf
jno
sub
ds
add
mov
xor
mov
fimul
jle
xchg
add
loopne
pop
adc
sbb
ret
(bad)
fcmovne
call
es
mov
shl
lea
test
jle
cwde
push
ds
sub
loopne
hlt
leave
ret
fldcw
sub
std
push
(bad)
cmp
cld
(bad)
cmps
push
xor
lea
stos
(bad)
aas
add
push
add
idiv
pop
leave
dec
pop
mov
sub
add
repnz
jne
pop
push
jb
adc
and
add
ins
sbb
arpl
jmp
xchg
sub
arpl
push
add
jne
lea
or
mov
inc
cmc
adc
ja
sbb
adc
dec
jnp
shl
fist
bound
or
int3
call
add
loopne
inc
ror
adc
dec
sbb
into
cmp
cmc
loopne
xor
test
jne
xchg
xor
frstor
sub
cmp
jb
paddw
mov
fdiv
push
xor
(bad)
sti
(bad)
push
shl
or
xor
jbe
call
mov
pop
popa
int3
jle
push
adc
and
push
bound
call
sbb
add
dec
sbb
sbb
test
sbb
(bad)
and
xchg
inc
dec
adc
imul
nop
ins
sub
xchg
push
jmp
jp
shl
sub
jmp
or
add
sbb
sbb
adc
ins
sub
fild
mov
fbld
dec
mov
sub
push
repnz
pop
or
add
add
sbb
stos
cmp
pop
xchg
mov
nop
stos
adc
rol
mov
add
or
push
ins
push
js
jne
xor
jmp
push
push
mov
adc
pop
push
xor
jnp
mov
xor
pop
mov
out
push
adc
imul
push
clc
sub
xor
dec
xor
rol
mov
push
mov
test
jne
xor
mov
push
and
push
loopne
push
and
adc
push
jmp
xchg
mov
push
and
adc
and
push
mov
xlat
push
rcl
nop
test
push
inc
aad
rol
je
sub
cmc
push
mov
outs
clc
std
dec
or
dec
and
lea
mov
adc
push
xor
leave
add
push
push
pop
and
push
cmp
je
outs
(bad)
out
ror
adc
or
adc
adc
sub
mov
fcom
xchg
je
dec
scas
cmp
push
clc
add
pop
pop
pop
leave
sub
(bad)
xor
jo
mov
xor
(bad)
adc
push
bound
rcl
fs
dec
mov
cmp
pop
mov
cmp
out
aam
int3
inc
adc
cmp
xchg
xor
arpl
ins
mov
xor
popf
cmp
sub
in
and
xchg
dec
adc
xor
jne
add
lock
push
adc
push
popa
ja
xor
sbb
(bad)
hlt
bswap
cmp
inc
dec
cmp
mov
sub
clc
sub
mov
pop
push
push
adc
and
sub
or
aam
add
addr16
sbb
xchg
loop
clc
push
adc
jne
loopne
call
mov
xchg
mov
int
adc
and
pop
shl
inc
cmp
cwde
add
fdiv
push
ins
jbe
gs
inc
(bad)
fcmove
sub
sbb
add
add
dec
jmp
inc
clc
popa
push
push
push
push
jecxz
push
sbb
in
jbe
sub
inc
cli
lds
movs
pushf
inc
cmp
arpl
lods
test
sbb
fadd
add
cmp
jne
mov
pop
mov
in
cmp
push
leave
pop
sub
mov
sub
pop
or
(bad)
loopne
lock
mov
stos
sub
push
adc
in
fistp
repnz
push
push
push
mov
sbb
test
mov
cmp
je
pop
jbe
pop
sbb
cmc
imul
mov
add
js
sbb
or
mov
jns
loope
loopne
mov
push
dec
push
or
push
jle
sbb
bound
push
and
loopne
cmp
or
mov
jne
ret
or
ret
push
jmp
cli
mov
xor
push
or
inc
or
inc
sub
push
loope
(bad)
clc
jbe
mov
test
fsub
lea
pop
movs
sbb
and
or
hlt
cmp
adc
jns
or
jp
sbb
fdivr
shl
ins
cmp
fcom
jo
or
and
or
call
sbb
sbb
mov
(bad)
cwde
push
imul
push
lock
sbb
ds
ja
loopne
ret
or
mov
pop
cli
ret
int3
hlt
ja
dec
push
fld
sbb
xor
mov
fld
clc
push
jbe
push
push
and
xchg
shr
lds
and
cwde
jo
and
add
jl
or
sub
add
jmp
jp
fistp
and
dec
push
loopne
push
add
mov
jb
add
dec
xor
xor
ret
icebp
test
mov
in
jo
xor
retf
hlt
inc
not
ss
sbb
test
mov
or
in
test
cs
test
je
xor
push
adc
mov
jno
push
mov
cld
jg
or
mov
ret
pop
adc
adc
add
dec
adc
sbb
or
xchg
test
fiadd
or
dec
addr16
push
dec
rol
or
ret
retf
mov
adc
or
inc
jg
mov
cmps
mov
dec
xchg
retf
cmp
xlat
fwait
or
rcl
cwde
hlt
adc
dec
dec
xor
inc
push
push
inc
sub
dec
add
test
jg
(bad)
dec
cmp
jb
inc
cmp
jb
imul
jbe
dec
ret
nop
jmp
add
inc
pop
cmp
jb
in
in
popa
inc
push
out
out
mov
ret
aaa
cmp
inc
clc
or
adc
cmp
mov
add
mov
pusha
mov
sbb
sbb
mov
xchg
ins
xchg
jb
mov
sub
rcl
lock
jg
and
getsec
inc
ror
sbb
mov
je
push
jbe
inc
adc
lock
pop
pop
lds
inc
jo
pop
shl
and
arpl
adc
inc
adc
adc
lea
enter
ror
fsub
sbb
pusha
mov
add
push
add
sbb
mov
jge
test
jle
mov
mov
sub
dec
(bad)
stc
loopne
mov
sbb
add
pushf
(bad)
cmps
mov
push
xor
mov
jmp
adc
inc
inc
fcom
sub
addps
js
test
enter
inc
and
lock
cld
aaa
sub
cmp
inc
or
adc
jmp
jle
or
inc
add
jno
or
jns
or
add
pushf
pop
sbb
push
xor
pop
and
lock
xlat
push
mov
arpl
(bad)
call
inc
aam
add
mov
dec
cmp
je
mov
mov
adc
push
or
outs
sbb
cmp
cmc
sbb
jo
mov
lock
(bad)
inc
leave
adc
or
fidiv
clc
push
pop
ficomp
icebp
mov
mov
mov
pop
sub
(bad)
xor
lahf
mov
jns
cmp
sub
mov
in
add
jmp
push
retfw
pop
add
cmp
mov
in
sti
add
out
xor
pop
jne
mov
neg
arpl
int3
imul
int
loope
push
sbb
or
rcr
ret
in
inc
add
and
sub
add
mov
push
add
push
cmp
xor
or
test
push
push
mov
out
push
add
mov
xchg
sbb
retf
xchg
int
or
mov
or
push
add
cld
aad
pop
push
add
jg
enter
dec
mov
push
sbb
push
sub
xor
jmp
dec
xchg
adc
inc
push
jo
or
mov
pop
xchg
sbb
icebp
rol
push
mov
add
test
je
ret
add
cs
push
loope
mov
sub
cmp
mov
add
cmp
mov
jae
jg
shr
sub
cmp
jae
cdq
jmp
add
inc
loop
pop
cmp
jp
xor
pop
xchg
adc
sub
inc
popa
jb
lea
loopne
add
xor
daa
and
jae
jbe
cs
pop
imul
js
or
(bad)
lods
adc
jnp
dec
and
mov
fnstenv
test
push
rcl
add
inc
adc
lahf
xchg
gs
pushw
xor
jbe
push
bswap
mov
or
fadd
pop
mov
(bad)
test
ret
adc
add
or
pop
mov
jmp
data16
popf
adc
cmps
sub
sub
push
xor
test
mov
mov
sub
sti
lock
retf
inc
mov
movs
shr
shl
jge
sub
sbb
into
pop
fcmovb
push
push
jns
ins
cs
mov
push
loop
sbb
and
jo
and
inc
cmp
sub
inc
add
(bad)
push
and
mov
push
int
mov
push
inc
push
push
std
sub
mov
xchg
push
xor
jne
mov
push
cld
xor
pop
cmp
fist
mov
mov
or
push
mov
pop
ins
push
cmp
je
xor
rcl
sbb
std
pop
mov
push
mov
ja
out
mov
and
xor
js
xchg
mov
call
push
shr
data16
sbb
jne
inc
jno
pop
fwait
outs
aam
aam
stos
dec
pop
add
mov
pushf
adc
push
mov
es
cmp
inc
pop
and
fisub
enter
xor
cmp
sbb
push
rol
and
test
push
cmp
adc
add
lods
leave
movs
icebp
dec
cmps
lods
dec
xor
leave
ret
adc
push
and
les
sbb
jmp
adc
adc
(bad)
xor
mov
pop
in
push
sbb
inc
or
cmp
add
icebp
clc
jne
xor
cmp
sti
ds
mov
clc
push
pop
mov
fst
lods
or
or
mov
lahf
cli
pop
sub
inc
mov
add
ror
out
or
pusha
push
fcom
add
pop
fsubr
pop
push
mov
add
fiadd
fdiv
and
inc
ja
sub
pop
mov
xchg
push
test
pop
adc
dec
jmp
inc
clc
loope
or
xchg
push
inc
inc
adc
xchg
sbb
into
(bad)
div
mov
fisttp
cwde
lock
xor
or
mov
in
adc
popf
mov
push
push
push
adc
mov
jmp
jo
push
or
lock
push
(bad)
je
add
loopne
movs
(bad)
repz
sbb
or
sbb
jl
push
sbb
dec
push
adc
push
shl
xchg
push
hlt
mov
inc
add
jmp
ins
call
mov
add
fcomp
pop
pop
jae
dec
add
jae
arpl
xor
push
inc
jmp
lds
ret
push
push
fisttp
jmp
loope
dec
jg
outs
inc
push
jmp
sbb
add
sbb
mov
adc
rcr
adc
shr
pop
test
or
push
push
je
or
je
push
adc
and
int3
adc
jl
or
push
and
or
push
or
push
add
rcl
xor
adc
xor
rcr
call
adc
mov
adc
data16
mov
and
add
les
jbe
pop
jp
jg
jae
dec
movzx
lea
jne
aam
or
push
(bad)
pop
aas
in
jnp
inc
xchg
add
sub
push
push
mov
leave
pop
mov
(bad)
addr16
adc
add
add
push
sar
call
sbb
push
pop
mov
or
push
push
dec
fidiv
js
movs
out
push
aaa
or
inc
adc
sub
mov
lea
mov
inc
inc
data16
sub
sar
inc
jbe
pop
xchg
aaa
sub
xchg
lea
or
ret
(bad)
xchg
xor
add
xchg
cmp
int3
js
sub
movs
sbb
inc
jmp
mov
sub
add
and
scas
jecxz
dec
enter
mov
xor
cmp
and
lahf
add
mov
push
loopne
outs
fimul
(bad)
or
or
sbb
mov
sbb
sbb
not
and
or
outs
bound
mov
sbb
add
mov
add
data16
ins
mov
mov
pop
adc
xchg
mov
xchg
or
jno
add
pop
pop
inc
jae
inc
add
mov
pusha
sbb
dec
idiv
cmp
je
xchg
cmp
inc
ss
lock
cmp
mov
aam
inc
add
add
mov
xor
jno
add
push
mov
stc
jno
cld
call
lock
mov
bound
jae
pop
cmp
in
mov
push
mov
lods
add
or
or
fcmovb
inc
dec
mov
add
test
push
fs
in
loope
add
push
ins
cld
sbb
or
(bad)
jl
ds
stos
pop
inc
mov
or
ss
das
ret
lock
test
push
adc
cmp
(bad)
test
sar
sbb
sbb
add
mov
ret
jnp
mov
lahf
jne
cs
adc
mov
pusha
sub
ins
adc
mov
jae
lods
add
jge
xor
mov
mov
xchg
in
push
push
push
push
imul
loopne
ret
jne
lea
or
xchg
out
push
push
cwde
mov
inc
or
jo
fistp
push
xor
mov
add
mov
int3
sub
jo
pop
dec
push
ret
cmp
or
or
and
cmp
lods
push
push
push
arpl
pop
adc
jmp
push
mov
pop
nop
dec
call
jecxz
pop
je
rcr
sub
jp
jmp
adc
sbb
xchg
jg
lea
stos
adc
cmp
add
fcomp
push
mov
pop
retf
fstp
int3
pop
push
(bad)
hlt
sti
loope
ror
in
or
(bad)
sar
iret
mov
or
cmp
test
adc
in
mov
xor
outs
jp
int
in
nop
push
jne
sbb
movs
loopne
push
inc
dec
sbb
jo
mov
gs
hlt
or
test
push
sti
loop
mov
call
sub
push
add
sbb
je
lock
pop
rcr
fadd
imul
jns
adc
jecxz
mov
or
imul
in
and
(bad)
and
xor
sbb
arpl
gs
add
dec
or
inc
aas
(bad)
outs
pop
ja
xor
push
test
jb
call
or
push
rol
fldcw
mov
mov
xor
inc
fiadd
push
out
add
add
inc
clc
jne
inc
out
dec
pop
jb
cmp
hlt
dec
test
fmul
repnz
and
call
push
add
nop
movs
mov
bound
outs
out
jmp
sub
mov
and
mov
rol
test
mov
cmp
popf
lock
inc
(bad)
inc
inc
xor
mov
push
fld
pop
pop
cmp
and
dec
and
xor
and
and
mov
mov
mov
add
mov
std
add
repnz
push
add
stos
pop
add
or
adc
mov
es
imul
jecxz
inc
pop
ret
jne
hlt
xchg
retf
pop
adc
add
add
dec
sti
inc
lea
mov
or
sub
les
xor
inc
mov
call
add
xor
and
dec
adc
xor
dec
adc
imul
mov
and
push
and
imul
and
mov
mov
jnp
lahf
cmp
adc
mov
push
dec
ins
je
ins
and
fwait
adc
movs
lock
inc
inc
or
ret
xchg
dec
push
xor
div
dec
cli
jb
pop
add
dec
jp
sbb
xchg
xchg
push
jae
jmp
test
mov
push
pop
inc
or
jmp
ss
or
adc
pop
not
icebp
cmp
daa
ss
jne
pop
jmp
or
out
add
jmp
lock
jmp
pop
cs
cmp
pop
(bad)
xor
call
pop
imul
out
jge
sbb
mov
dec
and
popa
nop
scas
mov
cmc
cmp
(bad)
jg
cmp
pop
fadd
movs
mov
inc
sbb
xchg
mov
push
xchg
jge
xor
jecxz
ds
inc
in
cli
in
popa
dec
jp
add
mov
iret
xor
push
lock
cdq
data16
pop
mov
adc
sub
mov
movs
adc
xchg
loopne
sbb
add
jno
mov
inc
jl
fstp
int3
int3
and
loop
mov
nop
data16
ret
mov
push
(bad)
loope
imul
fdivr
sbb
push
jnp
xor
and
leave
sub
add
sbb
jo
or
jne
inc
push
jg
dec
in
jl
out
jge
mov
mov
push
les
cmp
enter
mov
clc
or
push
and
push
rcl
push
jg
push
adc
mov
mov
push
ss
push
jle
add
mov
push
call
xchg
or
mov
fild
or
mov
inc
mov
fisub
and
push
in
add
push
fs
pusha
add
sti
jmp
mov
sbb
leave
xchg
jae
inc
ins
mov
cmp
rcr
retf
ss
add
lods
mov
add
aad
xchg
cmp
loopne
sahf
cmp
je
inc
sbb
shr
ret
xor
lock
sbb
xor
ins
cmp
imul
cli
inc
xor
cmp
push
clc
rol
ret
pop
fild
aaa
cmp
hlt
retf
fwait
inc
dec
pop
sbb
lea
push
xor
pop
dec
rcr
sub
sub
rcl
adc
inc
clc
inc
push
enter
push
xor
adc
idiv
add
fldenv
push
cli
pop
dec
test
pop
arpl
mov
test
rol
cmp
adc
aaa
mov
xor
out
repz
sub
add
sti
rcr
push
xchg
and
adc
adc
inc
and
pop
jb
add
fistp
jle
sbb
or
jle
push
add
push
test
or
outs
sub
rcl
retf
inc
sub
int3
inc
mov
mov
daa
push
adc
sub
arpl
inc
sar
add
push
ret
xchg
popf
jo
or
xchg
mov
shl
les
inc
je
mov
jp
dec
sbb
xor
add
mov
(bad)
mov
shl
pop
mov
push
dec
and
popa
std
adc
test
pop
pop
pop
or
push
sbb
push
sub
add
cmp
cmp
adc
or
or
jo
jmp
add
jmp
and
mov
pop
ret
imul
movs
xchg
dec
adc
or
out
jl
aas
imul
cmp
jne
dec
mov
call
adc
fldl2t
jbe
or
fcomip
inc
mov
push
add
push
lea
push
or
stc
push
add
test
fisubr
or
sbb
sbb
js
add
jb
jle
or
inc
add
addr16
int
arpl
out
jae
jbe
mov
mov
mov
add
repnz
and
push
pop
xor
inc
and
pop
stos
arpl
add
mov
mov
mov
mov
mov
add
adc
cmp
add
push
loope
jb
imul
jp
push
aas
or
inc
sub
stc
push
mov
enter
cmp
push
pop
pusha
(bad)
je
les
push
popa
adc
push
inc
or
in
add
xor
sbb
add
jg
inc
xchg
push
push
rol
mov
sbb
das
mov
cmp
ss
push
lock
scas
mov
mov
or
adc
pop
pop
pop
pop
fs
adc
popa
nop
dec
push
fs
bound
inc
cmps
in
sbb
adc
cmp
cmp
leave
clc
shl
or
pop
push
dec
dec
jmp
mov
mov
mov
jmp
nop
mov
or
dec
enter
clc
test
pop
fs
or
or
adc
or
push
push
push
inc
faddp
or
push
cmp
dec
stos
jnp
xor
mov
jbe
ror
mov
adc
inc
dec
add
mov
jb
call
jmp
mov
sub
mov
jo
jg
je
sub
sar
jmp
dec
dec
mov
repnz
idiv
adc
mov
icebp
dec
xor
push
jbe
and
adc
xor
fiadd
pop
push
xor
xor
cld
sub
or
je
fiadd
xor
adc
or
js
dec
adc
or
jg
xor
pop
leave
in
jb
jno
or
and
sar
xor
or
test
je
push
outs
scas
jb
sub
push
push
cmc
xor
mov
push
mov
pop
push
cld
ret
retf
or
mov
mov
add
push
movs
dec
push
call
call
call
aad
push
test
add
shl
adc
push
mov
in
clc
sbb
in
(bad)
jb
add
loopne
cmp
je
pop
faddp
jne
xchg
adc
stos
fdiv
push
call
sbb
add
pop
push
ss
jne
sub
imul
shl
adc
retf
movs
mov
cmp
sub
mov
add
jmp
popa
test
je
jae
pop
cmp
and
jbe
adc
pop
jge
xor
mov
xchg
adc
sahf
dec
or
dec
pop
sub
and
cmp
or
push
push
into
ret
inc
loop
pusha
xor
test
ret
jbe
push
fstp
dec
cmp
pop
enter
enter
dec
lds
inc
scas
push
push
xchg
inc
and
loope
jl
push
adc
add
loope
jbe
(bad)
int3
or
mov
inc
pop
not
jmp
xor
aad
mov
in
cmp
pop
or
mov
or
ret
call
push
test
add
sub
inc
stos
ss
add
fbstp
pop
icebp
sbb
jno
push
or
(bad)
mov
cvtpi2ps
ret
add
cmc
out
push
cmp
or
inc
adc
push
je
sbb
dec
test
das
sbb
and
cmps
das
loop
mov
neg
repnz
jmp
mov
pusha
outs
test
repnz
jl
cmp
add
fsubr
mov
mov
xlat
pop
push
push
and
add
ret
sbb
mul
add
mov
mov
fs
ins
test
arpl
pop
push
adc
cmp
lock
mov
pop
or
inc
bound
pop
sbb
bound
cmp
dec
dec
ret
jmp
bound
mov
pop
pop
pop
test
repz
popa
mov
lock
lea
data16
push
and
movs
adc
or
aaa
shr
xchg
push
je
rcl
inc
(bad)
jo
xor
push
jo
sbb
push
adc
sti
sbb
xor
lock
adc
or
pop
fisubr
xor
push
jnp
push
je
dec
push
jg
shr
cmp
pop
mov
cmp
jae
xchg
sub
bound
test
and
pop
dec
cmp
push
mov
ficom
adc
dec
mov
push
out
into
jno
push
dec
sti
mov
cmps
jmp
sbb
sbb
xchg
lock
mov
pop
jmp
in
pop
xchg
adc
jg
cmp
jae
xor
ror
in
(bad)
std
pop
inc
inc
ret
add
cmp
or
dec
and
ret
(bad)
push
sbb
out
clc
js
push
hlt
test
jne
inc
mov
mov
mov
and
xor
adc
fld
cmp
jne
or
adc
mov
bnd
sbb
mov
push
sub
add
pusha
idiv
add
add
mov
jnp
daa
jmp
outs
in
div
ins
cmp
pop
inc
inc
outs
add
mov
xchg
mov
mov
pop
inc
push
ret
pop
mov
test
imul
push
repnz
sti
clc
fbld
ror
lods
das
adc
push
xor
add
leave
lock
or
ss
push
mov
dec
sub
push
push
push
push
lea
sub
push
push
(bad)
xor
mov
(bad)
lods
ss
push
push
mov
(bad)
adc
(bad)
sub
ficomp
imul
xchg
(bad)
xor
sbb
leave
pop
ror
std
dec
pop
mov
sub
sar
adc
add
ja
lea
push
mov
push
mov
push
fwait
pop
mov
aaa
and
or
and
dec
popa
push
or
pop
enter
jno
ret
movs
je
in
cmp
or
sbb
mov
pop
add
aam
test
add
or
pop
pop
jle
or
push
leave
(bad)
pop
add
add
pop
(bad)
jle
or
adc
pop
pop
(bad)
retf
dec
cmp
mov
loop
push
hlt
ss
test
push
adc
and
cmp
fld
pop
add
leave
push
jo
mov
mov
dec
mov
cmp
test
sub
rcr
inc
dec
hlt
ror
sti
test
lea
pop
jb
mov
sbb
jne
pop
jne
mov
js
add
cmp
jge
imul
sub
(bad)
jg
out
sbb
add
into
outs
outs
cmp
loopne
fistp
stos
adc
or
int3
outs
shl
mov
add
test
xchg
cmp
adc
pop
mov
clc
sub
repnz
push
push
push
push
push
popf
and
ret
ret
xchg
aaa
xchg
test
cmp
add
pushf
add
add
add
inc
in
push
ja
sbb
cmp
rol
mov
sahf
inc
inc
pop
clc
inc
sar
loopne
sub
mov
cmp
add
pop
or
sbb
sbb
dec
xchg
add
or
xlat
xor
cmps
lods
and
rcr
pop
lods
cwde
pop
jno
sbb
ret
lea
inc
jae
ds
push
lods
je
popa
cmps
xor
aam
sbb
or
fisttp
cmp
ja
push
movs
mov
jmp
push
mov
sti
sub
ds
je
push
sub
fild
fist
in
cmp
test
mov
add
ret
or
xor
mov
mov
or
ins
xchg
ret
daa
push
push
scas
add
mov
ins
fucomip
int3
ins
inc
nop
mov
(bad)
sahf
rcl
ffreep
mov
(bad)
and
xchg
clc
jo
inc
and
(bad)
call
movs
or
(bad)
push
inc
and
cmp
and
inc
sbb
ds
xor
movs
int
adc
mov
mov
data16
and
in
ret
out
cmp
inc
fld
cmps
inc
fcom
pop
ss
dec
mov
cmp
lock
add
stc
pop
aam
dec
pushf
push
cmp
pop
js
mov
orps
dec
pop
push
sbb
mov
aaa
enter
push
push
mov
outs
pop
pushf
bound
xor
arpl
lods
or
add
pushf
add
call
adc
push
jl
xor
pop
sub
and
nop
jmp
xor
rcr
enter
add
mov
xchg
ror
iret
xchg
test
add
mov
push
ret
adc
mov
mov
pop
repz
retf
repz
repnz
pop
pop
cmps
inc
imul
push
adc
or
push
mov
pusha
ja
je
test
outs
loopne
dec
data16
popa
pop
fimul
test
add
or
jmp
test
or
imul
and
ror
imul
pop
leave
movs
pop
or
xor
fadd
mov
or
jl
gs
das
mov
outs
or
or
push
pop
push
popf
(bad)
rol
bound
or
int3
push
dec
mov
popa
lahf
inc
daa
cs
xchg
mov
fistp
add
and
les
pop
hlt
sub
jg
or
sub
pop
push
adc
adc
sbb
dec
shr
cvttps2pi
call
ret
push
inc
mov
test
mov
cmp
je
mov
es
rol
pop
dec
mov
sub
push
push
fstp
adc
cmps
iret
fwait
mov
jmp
jp
sub
or
and
scas
dec
int3
push
imul
mov
add
iret
test
(bad)
in
or
add
add
and
inc
cmp
aas
cmp
mov
add
jns
in
outs
sbb
add
mov
jo
or
icebp
or
or
shr
mov
in
loop
lock
adc
sbb
jge
loopne
mov
add
adc
pop
cmp
ret
pushf
mov
lea
pop
pusha
cmp
sbb
xor
loopne
nop
adc
inc
cmps
xor
lods
add
repz
jbe
std
xchg
add
movs
rol
and
xchg
dec
mov
xchg
stos
mov
enter
and
push
add
mov
push
in
push
mov
ja
stc
mov
or
jmp
mov
xor
jne
cli
fsub
xchg
je
out
jmp
push
gs
adc
and
mov
test
call
mov
add
mov
mov
push
inc
adc
(bad)
jp
ins
inc
and
scas
and
push
or
push
call
in
(bad)
pop
mov
pop
ret
es
mul
mov
mov
jge
popf
fmul
xchg
movs
ret
cdq
fcomp
jne
bound
mov
push
into
mov
cmps
int3
pop
pop
pop
push
cwde
adc
shl
movs
imul
cdq
adc
mov
xor
outs
sub
mov
jne
dec
dec
fsub
or
stos
mov
mov
cmp
call
outs
test
jno
jge
inc
push
mov
dec
test
sti
and
push
jle
mov
aam
ror
push
sub
(bad)
fsub
arpl
xchg
push
adc
sbb
add
ret
popa
sub
jge
and
jl
ror
test
or
xor
(bad)
(bad)
jbe
(bad)
(bad)
pop
pop
xchg
sub
mov
or
mov
test
rol
xlat
or
or
dec
xchg
sub
or
or
ret
inc
inc
mov
mov
enter
add
mov
adc
int
in
arpl
mov
clc
add
cmp
rol
cmp
imul
dec
fild
cmps
or
cs
jo
sbb
dec
dec
mov
retf
dec
push
icebp
xor
pop
cmps
jb
iret
mov
xor
std
test
std
pusha
sbb
(bad)
cmp
add
xchg
mov
hlt
or
idiv
sbb
imul
pushf
push
mov
pop
add
and
pop
imul
popa
aaa
seta
je
bnd
leave
nop
mov
lock
out
or
shr
fst
mov
xor
mov
dec
add
mov
push
sbb
add
enter
pusha
pusha
cmp
lods
call
dec
test
lea
jmp
iret
adc
fdivr
and
add
ja
add
jb
mov
cmps
(bad)
imul
add
or
cmp
cmps
adc
pop
mov
repnz
or
cmps
push
sbb
sub
push
add
(bad)
or
sar
or
jne
sbb
loope
mov
fild
fcomp
dec
add
icebp
sub
add
jno
enter
rcr
rcr
sbb
inc
adc
push
mov
add
or
sub
enter
jmp
movs
xor
sete
mov
push
(bad)
jne
cmps
add
fcmovnb
mov
add
inc
or
add
fnsave
jg
sub
stos
xchg
xchg
push
aaa
lock
add
mov
addr16
mov
cmp
je
add
pop
xor
jb
mov
data16
sub
repnz
add
pop
mov
mov
dec
or
xchg
rol
ja
dec
pop
pop
outs
xor
das
add
mov
(bad)
adc
sbb
inc
mov
mov
sbb
lea
push
dec
inc
mov
sub
aam
aad
fld
or
enter
(bad)
sub
add
add
cmp
call
test
fcomp
cmp
jle
cmp
jle
movs
(bad)
add
inc
call
add
(bad)
clc
pop
mov
mov
sbb
jp
lock
ja
adc
mov
cld
inc
je
cmp
popf
mov
mov
mov
inc
sar
fwait
dec
sub
mov
jne
jg
xor
add
mov
fcomp
retf
mov
pop
dec
mov
push
jmp
icebp
adc
shl
icebp
test
add
out
cmps
mov
rcl
addr16
rcl
sub
mov
or
pop
dec
outs
add
mov
dec
sar
loopne
mov
movs
xor
jge
cmp
mov
loope
jbe
ret
and
or
mov
and
dec
inc
in
jle
push
into
jae
mov
fmul
and
(bad)
aaa
dec
mov
lods
int3
imul
lock
mov
sbb
(bad)
scas
jae
call
jmp
test
and
int
loopne
mov
mov
or
sub
sub
ins
add
inc
ficomp
inc
xor
mov
xor
add
inc
out
lock
push
inc
add
inc
outs
out
push
lea
sbb
add
pop
or
jecxz
loopne
pop
popf
or
pop
fcom
repnz
(bad)
clc
inc
test
movs
mov
push
psubsw
push
pop
or
div
ss
loopne
push
dec
cld
retf
into
cwde
xchg
pop
push
and
or
push
cmp
jne
scas
or
sbb
cmp
hlt
xlat
shl
add
ret
xchg
cmp
pop
sbb
lea
out
cld
push
popa
stos
test
push
mov
mov
jl
adc
ret
jo
or
imul
shl
or
bound
xchg
jmp
xor
bound
pop
out
je
movs
jno
(bad)
out
sub
loopne
mov
ins
adc
clc
ret
loopne
mov
lods
pop
pop
push
leave
sbb
inc
add
sub
xchg
adc
or
mov
lock
nop
bound
ret
imul
ss
dec
cmp
and
mov
pop
cmp
jle
add
add
jg
xchg
mov
xlat
push
adc
into
adc
mov
add
pop
pop
fld
add
mov
jne
mov
(bad)
xor
adc
push
movs
jge
add
xchg
mov
les
movs
nop
das
iret
jae
jo
movs
sbb
in
popa
add
push
iret
dec
adc
aam
xor
pop
and
adc
(bad)
mov
out
mov
inc
cmc
add
push
push
add
aam
shr
add
push
movs
jg
dec
leave
add
push
(bad)
shl
sbb
rcl
test
mov
add
(bad)
enter
dec
movs
pop
ss
ins
inc
cmp
inc
adc
pusha
ror
add
mov
xchg
add
push
or
sar
lea
push
lods
adc
add
push
add
sub
mov
push
daa
fadd
cs
push
and
icebp
and
or
push
and
mov
pop
ja
push
lods
ret
gs
ror
add
add
ss
dec
add
jns
pop
cdq
push
or
ret
push
mov
cmp
cld
imul
je
inc
xor
rcl
adc
ins
aaa
sti
shl
mov
(bad)
fcmovnb
test
sub
cmp
jmp
cmc
mov
ret
pop
popf
gs
movs
xchg
sub
cmc
push
rol
jmp
ja
mov
hlt
dec
dec
ffree
sub
push
and
add
inc
inc
outs
add
sbb
scas
dec
pusha
stc
ja
pop
pop
int
jnp
pop
adc
push
call
dec
lock
hlt
(bad)
cmp
je
mov
push
int3
push
push
std
or
cld
and
and
ja
pop
pop
jmp
push
iret
xchg
pop
add
lea
retf
xor
or
and
or
loopne
mov
push
or
pop
rcl
js
pop
cmps
jns
mov
leave
pop
lidtd
jp
dec
inc
mov
sub
enter
mov
stos
push
mov
div
js
adc
movs
pop
xor
sub
pop
lods
jbe
mov
into
push
inc
push
mov
jne
test
popa
add
rol
je
or
jp
xchg
mov
das
gs
aas
enter
add
add
inc
mov
mov
or
(bad)
pop
add
das
loopne
dec
in
fisttp
mov
aam
jb
sbb
inc
loopne
call
sub
add
adc
add
js
das
into
inc
or
ins
jl
mov
pop
xor
push
sbb
movs
cmp
call
mov
pop
icebp
(bad)
push
push
pop
push
push
dec
aas
(bad)
fimul
outs
jmp
mov
mov
into
sbb
inc
fwait
or
cmp
mov
outs
test
jmp
push
adc
ss
mov
jl
pop
add
pop
adc
add
mov
aam
enter
sbb
jbe
stc
outs
fild
stc
and
lods
cmc
push
add
pop
stc
jp
inc
xchg
jne
add
push
addr16
ja
fwait
pop
in
inc
in
mov
and
loopne
nop
add
fdiv
daa
push
das
or
jl
push
jmp
jnp
pushf
adc
je
in
add
and
mov
inc
imul
dec
enter
push
ret
(bad)
call
mov
push
mov
dec
rcl
xchg
jge
cmps
cmp
mov
loope
mov
adc
lods
push
add
fs
sbb
cmp
pop
addr16
jno
dec
loopne
test
cmp
push
push
cmps
std
inc
mov
pop
xor
cld
(bad)
jbe
add
dec
and
push
add
cmp
sbb
xchg
pop
mov
popa
rcr
in
add
or
sti
sbb
jg
push
pop
add
and
in
call
ret
loopne
mov
fs
jl
std
mov
ret
xor
(bad)
repz
mov
xor
push
jae
sub
pop
adc
push
mov
loopne
push
and
add
imul
das
mov
cmps
sahf
add
jge
cmp
jl
dec
pop
loopne
arpl
aam
nop
stos
loopne
or
or
fs
or
inc
jo
popf
or
adc
js
sub
sti
pop
iret
inc
nop
push
pop
arpl
ret
or
push
movs
ror
or
xchg
retf
and
mov
jne
add
enter
and
clc
cmps
sbb
adc
out
rol
and
dec
es
adc
arpl
mov
cmc
push
dec
adc
test
push
mov
in
icebp
cmps
fisubr
xor
mov
inc
cwde
(bad)
popf
lods
sar
adc
push
sar
jle
jle
sahf
push
add
and
(bad)
icebp
jbe
jmp
cmp
jle
int3
outs
cmps
or
aas
and
jle
or
xchg
push
mov
jmp
inc
jecxz
inc
mov
std
inc
xchg
or
sub
xchg
jmp
sub
(bad)
mov
cmp
or
aam
nop
adc
add
popf
int
lods
cmp
mov
jb
xchg
push
push
(bad)
dec
sbb
dec
cs
in
adc
int3
cs
jb
nop
lods
cmp
mov
and
ror
call
dec
ds
pop
mov
jb
adc
(bad)
out
movs
das
shr
dec
cs
jb
clc
mov
xchg
jb
mov
dec
retf
jo
aas
hlt
iret
das
inc
push
test
inc
call
aaa
(bad)
adc
inc
push
push
aas
add
jl
mov
(bad)
push
call
and
push
mov
movs
sbb
push
test
mov
arpl
and
test
fwait
aas
jecxz
imul
pop
dec
in
add
test
sahf
lock
push
mov
and
das
xchg
call
or
xor
mov
aad
push
pop
ret
mov
mov
mov
push
or
lods
mov
mov
add
add
cmps
xor
add
or
dec
imul
push
push
add
ret
or
dec
push
ret
mov
add
pop
mov
mov
fcomi
mov
mov
inc
call
xor
mov
xor
xor
push
stc
mov
daa
adc
stc
inc
(bad)
xor
xor
xor
sti
arpl
adc
cmp
lods
in
add
mov
ins
jbe
stc
or
mov
int3
(bad)
(bad)
outs
ret
clc
push
std
mov
push
repnz
add
push
jo
repnz
add
rcr
sbb
jne
aas
jge
ret
inc
sbb
xor
mov
xor
push
fst
push
xor
pop
mov
and
add
push
into
xchg
imul
add
scas
push
or
lock
sti
xor
push
cld
xor
or
xor
inc
jns
stos
or
add
jecxz
or
or
or
sbb
and
repnz
retf
sbb
or
test
(bad)
dec
pop
dec
shr
dec
pop
dec
pop
dec
pop
pop
pop
clc
call
dec
mov
cmp
dec
sbb
push
(bad)
inc
sahf
adc
adc
enter
fwait
ss
add
mov
mov
and
neg
sbb
ds
fisttp
mov
push
int
test
pushf
push
xor
mov
aam
iret
add
sbb
push
push
lea
push
mov
cs
sub
pop
push
xchg
repnz
dec
add
and
dec
dec
cli
dec
mov
dec
cmp
xor
cmp
sbb
and
add
adc
leave
and
in
sub
adc
jle
mov
test
or
lea
jbe
add
test
out
rol
nop
push
jmp
sbb
jne
gs
sub
mov
sub
ret
cmps
idiv
push
mov
jl
mov
mov
fist
xchg
add
jmp
jl
pop
(bad)
fistp
cmp
pop
mov
inc
cmp
jb
push
fisubr
in
imul
add
fisub
mov
xor
lea
fisttp
and
jmp
inc
and
add
lea
inc
mov
(bad)
adc
cmp
inc
sub
and
xor
scas
cdq
add
inc
ror
mov
sbb
mov
pop
jo
mov
xor
and
cmp
je
jg
or
in
jmp
pop
sbb
pop
inc
jmp
lea
push
addr16
inc
mov
scas
xor
jne
mov
jg
push
jmp
and
mov
bound
xor
sub
dec
shl
or
push
cmp
mov
mov
jle
mov
lea
mov
inc
fstp
dec
jns
push
(bad)
cld
out
sub
pop
add
sub
push
test
or
jmp
lock
jl
push
in
call
push
xor
cld
in
dec
add
dec
mov
sbb
sbb
mov
sbb
ins
mov
hlt
cmps
push
dec
pop
adc
adc
shr
shr
sbb
mov
or
loopne
call
and
mov
(bad)
xor
adc
dec
xor
inc
push
push
add
jbe
jnp
xor
dec
outs
xor
cmps
mov
sti
mov
mov
fiadd
jns
jg
addr16
sbb
mov
ins
inc
test
lock
shr
in
adc
fdivr
shr
pop
enter
or
push
mov
or
or
add
imul
and
add
add
das
mov
movs
test
mov
js
mov
aam
(bad)
cli
push
lea
mov
movs
mov
imul
jmp
push
jl
sub
jmp
js
xor
push
or
xor
adc
add
test
inc
push
outs
sub
jbe
xchg
ins
sbb
push
mov
xor
pushf
xor
imul
out
loopne
mov
ror
les
mov
fldenv
xor
lds
cmp
(bad)
cmps
dec
push
add
bnd
mov
xor
into
into
enter
jnp
(bad)
or
mov
pop
jnp
retf
test
cmp
xchg
jo
jbe
fdivrp
ror
das
test
(bad)
mov
jmp
cmp
int3
push
rcr
adc
pop
lea
rol
in
and
test
dec
es
mov
inc
mov
adc
jg
leave
adc
and
loope
or
sbb
and
sub
movs
test
cmps
rcl
sbb
and
cdq
fs
or
sub
rol
add
cdq
enter
or
or
pushf
sbb
or
rcl
adc
fadd
loopne
adc
cdq
in
call
arpl
shr
hlt
sbb
clc
fwait
test
and
and
jge
ins
shr
test
add
js
xor
jb
pop
cli
xchg
jo
fadd
lock
(bad)
xor
idiv
cs
les
adc
adc
or
ss
push
or
enter
ret
scas
pop
test
pop
sbb
rcl
movs
xor
stos
icebp
xchg
scas
ins
inc
add
(bad)
cli
ror
js
adc
call
or
cmp
mov
add
xor
or
dec
xchg
push
sahf
jb
inc
jb
mov
xchg
push
(bad)
dec
movs
jmp
cmp
popa
sub
mov
pop
xchg
cld
shl
lock
cmc
xor
in
jge
sbb
jnp
scas
or
call
or
or
ss
gs
sbb
pop
sub
les
push
imul
cmc
or
xchg
rcr
push
and
xchg
sbb
nop
imul
add
fucomi
div
cmp
enter
enter
fs
int3
xor
fdiv
in
int3
mov
pop
jnp
popa
lock
cmp
lea
cmc
in
daa
div
adc
cwde
sbb
sbb
leave
sbb
iret
ret
sub
cwde
test
cwde
pop
xor
rol
ret
popf
stc
mov
dec
lahf
lea
cwde
push
xchg
or
cmp
mov
call
call
adc
and
rol
adc
mov
xor
xor
or
iret
and
cmp
icebp
nop
xor
les
push
and
add
and
inc
(bad)
jne
mov
jns
xor
arpl
leave
test
bound
or
ror
in
int3
or
mov
je
pusha
or
cld
rcl
je
test
jb
dec
or
mov
or
or
mov
jne
jb
mov
inc
mov
add
adc
add
or
out
xor
add
and
xchg
or
mov
pop
mov
pop
xchg
cwde
xchg
dec
cmps
push
ja
and
cmps
fdiv
mov
sbb
cmp
dec
mov
jp
sub
dec
and
inc
mov
shl
pop
jle
xor
ins
push
mov
xor
fiadd
push
sub
jp
sbb
mov
inc
sbb
mov
mov
lock
pop
mov
jecxz
test
rcl
test
mov
mov
sbb
xor
add
mov
adc
nop
or
inc
add
and
sub
cld
pop
sbb
arpl
xchg
inc
mov
or
cmp
es
cmp
adc
jnp
cmp
test
xchg
(bad)
and
dec
inc
push
sub
imul
adc
test
xor
dec
and
call
push
test
aad
inc
dec
test
push
sub
test
pop
pusha
sbb
sub
popf
test
stos
inc
rcr
sbb
xor
into
dec
mov
mov
pop
enter
jne
call
cmps
mov
mov
pop
out
lods
popf
add
mov
mov
outs
mov
jmp
call
xor
xor
dec
cdq
cmps
std
xor
mov
adc
or
adc
(bad)
xor
pop
mov
popa
rol
loopne
mov
sbb
push
pop
sub
cmp
add
push
ja
(bad)
jp
mov
push
(bad)
pop
mov
sbb
scas
sbb
and
push
adc
sub
sar
push
mov
cmp
sbb
popa
repz
xchg
clc
mov
sub
and
nop
mov
das
push
sti
ins
jnp
rol
push
add
sbb
loop
or
push
clc
data16
popa
adc
mov
inc
mov
dec
jno
cmp
jl
dec
lea
mov
clc
and
mov
push
cdq
idiv
lds
ja
mov
ror
push
or
add
mov
mov
adc
cmp
jne
cmp
add
mov
jge
jl
ror
(bad)
cli
push
add
and
test
push
(bad)
or
cli
fisub
mov
cld
or
sub
sti
retf
xor
mov
push
out
sbb
mov
push
pavgw
sbb
lock
mov
push
and
push
xor
fisubr
add
mov
xlat
fdivrp
out
add
mov
inc
mov
shl
repz
jb
jge
mov
lea
sub
jnp
repz
mov
jl
mov
jne
pop
adc
mov
data16
mov
lea
push
shl
push
push
push
and
mov
mov
adc
inc
push
xchg
call
xor
sbb
xchg
sbb
bound
clc
and
adc
sbb
xor
xor
xor
add
xchg
mov
add
xor
xchg
push
nop
test
div
push
push
jo
icebp
or
sub
inc
adc
cmp
push
pop
mov
lahf
and
popf
or
jecxz
sub
sbb
mov
xlat
nop
imul
ds
cmp
jnp
xor
mov
retf
or
mov
jnp
mov
add
xor
pop
inc
add
cwde
(bad)
ds
cmp
lods
inc
inc
inc
inc
sub
movs
test
add
adc
adc
or
inc
pop
sub
cdq
in
mov
mov
cmp
mov
sub
jg
adc
push
shl
aaa
sub
enter
sbb
xor
cwde
adc
push
pop
or
sub
sub
or
imul
xor
sbb
loopne
in
es
dec
in
fcomi
cdq
fs
sbb
hlt
clc
cld
in
or
add
add
mov
dec
add
cdq
adc
mov
xchg
aaa
xchg
(bad)
and
inc
add
jge
sub
lock
add
cwde
push
call
(bad)
and
neg
or
xchg
dec
sbb
rol
push
and
push
add
ins
shl
imul
or
ins
inc
test
ins
adc
push
jbe
or
jb
fisttp
mov
dec
cwde
jge
or
ret
adc
aad
and
mov
jnp
call
xor
dec
add
ins
mov
inc
sub
xchg
sar
or
inc
mov
add
inc
inc
lds
inc
inc
and
cmp
xor
movs
test
mov
cmp
xor
push
cmp
loope
cmp
mov
ret
xchg
cmp
ss
xor
mov
xchg
dec
mov
retf
(bad)
or
sbb
iret
mov
mov
lea
into
sbb
add
and
inc
cmp
or
and
mov
sub
mov
enter
stos
xor
add
or
and
xor
mov
or
and
and
pop
jnp
shl
mov
movs
jo
jmp
ror
cmp
cmps
push
cmp
xor
cwde
dec
int3
mov
mov
or
stos
or
dec
cwde
inc
sbb
shr
scas
jne
lock
mov
add
leave
or
or
jmp
mov
in
push
idiv
xor
lods
or
mov
cmp
lods
adc
xchg
inc
inc
(bad)
mov
mov
mov
sar
adc
inc
shl
or
mov
or
shl
gs
adc
sbb
div
or
test
pop
enter
push
icebp
dec
mov
ds
and
xlat
inc
pop
jmp
outs
cmp
xchg
inc
xchg
mov
adc
or
(bad)
xor
or
mov
xchg
ret
(bad)
repnz
sub
jns
xchg
lea
pushf
ret
push
sbb
sar
and
cmp
mov
or
das
ds
test
(bad)
lods
(bad)
xor
test
cmp
sub
rol
daa
ds
fwait
jbe
lods
xor
mov
pop
jnp
xchg
adc
cmp
adc
cli
mov
sbb
pop
push
sub
clc
jne
retf
(bad)
sub
and
aas
push
aad
or
xchg
xchg
sbb
mov
sbb
push
pop
int
push
repnz
add
mov
sbb
jo
sbb
repnz
cmp
or
add
or
bound
sub
cmp
retf
and
adc
xchg
pusha
ds
adc
xor
add
adc
rcl
cmps
test
add
sbb
mov
adc
mov
inc
adc
dec
xchg
mov
rol
sub
fwait
cmp
pop
pusha
scas
(bad)
call
jmp
inc
dec
cmp
jbe
lea
or
shl
add
mov
xchg
mov
out
cmps
dec
mov
sub
push
cld
or
sbb
cmp
sahf
add
mov
or
cs
cmp
add
mov
mov
popf
inc
or
dec
(bad)
and
pusha
jnp
inc
push
mov
jl
dec
xor
daa
sbb
jnp
and
pushf
jb
push
test
enter
inc
or
add
adc
sub
es
loopne
push
jmp
jg
ror
pusha
sub
daa
or
pop
add
rcr
cmps
das
xor
shl
inc
arpl
sub
cmp
je
lahf
pop
xor
loope
inc
cmp
out
add
sahf
or
mov
and
out
sbb
inc
inc
push
jne
mov
sub
ss
imul
or
jle
cmc
and
cmc
jo
jle
push
mov
ja
rcr
xchg
sub
adc
out
pop
mov
push
adc
pop
sbb
adc
daa
adc
jg
add
bound
icebp
ret
fld
in
mov
ror
enter
mov
push
pop
enter
add
sub
push
mov
sub
shl
push
and
xchg
pop
mov
sbb
fucomip
(bad)
lods
clc
(bad)
aas
mov
cmp
jb
jb
(bad)
imul
lock
xor
push
pop
add
sub
jl
dec
inc
adc
mov
push
data16
scas
xchg
out
push
mov
push
scas
fnstcw
push
add
push
add
mov
push
or
push
or
jo
mov
push
or
aas
test
test
sbb
mov
fucomi
icebp
adc
das
jno
loop
add
adc
cmp
gs
leave
jge
or
les
leave
pop
aaa
sbb
inc
in
pop
xor
jno
call
(bad)
call
adc
adc
jns
retf
shufps
jl
outs
popf
or
cmp
(bad)
retf
pop
retf
(bad)
cmc
sub
mov
add
xor
cdq
mov
cmp
mov
add
and
mov
mov
push
fs
push
dec
lar
inc
dec
mov
dec
pop
push
jle
adc
add
push
inc
int3
or
dec
xor
ret
add
int3
shl
test
sub
sbb
mov
movs
int3
pop
adc
fadd
(bad)
in
mov
and
inc
inc
mov
jmp
mov
sahf
and
add
cwde
mov
iret
arpl
cmps
ds
imul
mov
jbe
int
nop
inc
push
imul
or
(bad)
xor
repnz
cmp
inc
inc
inc
inc
inc
inc
cmp
repz
inc
inc
inc
inc
xlat
or
shl
cdq
(bad)
call
imul
sub
xchg
jbe
iret
add
xchg
fld
xchg
add
test
cmp
or
call
sbb
adc
aaa
cmp
sbb
sub
add
loopne
iret
jge
cwde
idiv
push
push
push
leave
cld
mov
enter
push
jo
int3
lods
cmps
xchg
or
and
in
jmp
test
loope
xchg
scas
(bad)
mov
push
xchg
int3
jae
or
push
mov
inc
push
push
pushw
fst
cmp
adc
pop
add
jecxz
fsubr
adc
jmp
lods
imul
xor
and
sub
add
and
mov
add
leave
cmp
sete
mov
aad
retf
xchg
loopne
adc
in
dec
popf
or
push
push
cld
shl
lock
and
and
popa
pop
pop
dec
sub
add
call
xor
inc
call
inc
call
fild
sbb
or
xor
dec
or
add
out
pop
addps
pop
adc
add
jnp
adc
(bad)
adc
mov
xor
sbb
dec
les
and
mov
bound
imul
shr
pop
jl
pop
jl
iret
adc
iret
cmps
iret
xlat
ret
xor
iret
aaa
iret
addr16
ret
xor
(bad)
iret
push
pop
lds
push
lds
(bad)
iret
mov
out
(bad)
jne
iret
pop
iret
inc
iret
xor
or
mov
rcr
xor
nop
inc
out
push
dec
cmp
push
movs
pop
nop
ret
fs
rcl
and
popa
and
push
mov
into
lock
or
xchg
hlt
jbe
hlt
(bad)
or
hlt
push
push
push
push
dec
test
lea
inc
or
pop
mov
fwait
push
inc
sbb
mov
and
jge
add
jmp
inc
sbb
or
enter
push
dec
push
pop
and
mov
inc
or
adc
inc
and
pop
push
fdivr
mov
dec
sbb
add
sub
push
push
add
push
mov
pop
add
inc
push
cmps
inc
jecxz
xor
repz
mov
jns
bswap
add
pop
mov
hlt
dec
adc
push
fs
mov
cdq
sbb
pop
arpl
push
xor
xor
loope
xchg
adc
sti
inc
retf
icebp
ins
pusha
push
or
jno
and
or
cmp
cli
push
add
pop
test
or
repnz
es
sub
ss
inc
mov
mov
js
cmp
jecxz
div
adc
loopne
inc
mov
jbe
sbb
adc
pop
pop
or
dec
pop
sbb
pop
fstp
and
cmps
sub
dec
adc
sub
xchg
dec
adc
loope
sbb
sbb
ret
mov
jecxz
push
dec
cs
sbb
in
pusha
sbb
dec
pop
xchg
sub
shl
add
xor
add
pop
mov
mov
int3
aas
add
inc
mov
mov
add
cld
mov
mov
gs
push
or
shr
dec
movs
sar
push
outs
mov
mov
adc
inc
adc
dec
mov
push
test
push
les
xchg
xchg
or
adc
test
add
push
pushf
jae
xor
arpl
cli
nop
jne
aas
loope
or
push
xchg
shl
dec
mov
dec
nop
add
out
inc
fadd
xor
sub
push
mov
inc
outs
adc
cmp
jle
jnp
data16
push
pop
and
cdq
fs
sub
xor
fs
dec
cmp
fs
dec
es
dec
dec
xchg
dec
es
push
push
pop
fs
fs
xchg
inc
es
adc
dec
push
sbb
out
or
jae
(bad)
lods
pop
sbb
push
daa
jp
xor
add
inc
sbb
inc
or
sub
hlt
add
(bad)
pop
retf
push
stos
sub
and
ins
xor
push
jo
test
or
data16
push
add
pop
cwde
rcl
and
add
popf
mov
pushf
xor
and
push
or
jae
lidtd
int3
pushf
pop
mov
ins
push
adc
clc
cmp
add
out
pop
rol
hlt
and
stos
loope
cdq
push
mov
stc
scas
push
call
push
cmp
pop
pop
xchg
jbe
cmc
push
sub
jnp
lock
adc
add
or
sti
xlat
lea
dec
jo
mov
hlt
retf
jo
clc
arpl
lods
push
push
or
xor
retf
mov
inc
jne
push
inc
xor
in
xor
pop
loopne
pop
or
jp
retf
fisttp
xor
in
push
push
into
dec
nop
mov
or
outs
xor
and
adc
mov
daa
adc
xchg
sub
mov
pop
hlt
cwde
in
bound
jmp
sbb
jne
dec
rol
nop
cmp
cmp
or
inc
push
leave
inc
loopne
fsubr
enter
mov
inc
test
test
add
dec
adc
and
pop
inc
push
and
ins
add
mov
leave
xchg
pop
int3
ins
enter
and
push
pushf
jne
mov
inc
mov
adc
push
add
js
shl
sbb
scas
out
lock
push
cdq
bound
les
dec
inc
hlt
push
rcl
sub
add
inc
cmps
in
pop
or
push
enter
fsubr
inc
(bad)
in
mov
lods
outs
jnp
mov
add
sar
push
ror
sbb
and
adc
and
jo
shl
xor
adc
inc
call
ss
sbb
mov
and
sbb
cld
dec
add
add
mov
add
mov
push
pop
add
rcr
cmp
jl
or
push
mov
(bad)
jmp
inc
nop
retf
jno
rol
jb
jl
js
outs
in
or
and
iret
add
dec
inc
cmp
outs
imul
mov
loopne
sub
or
push
dec
xor
sbb
xlat
pop
pushf
ret
test
stos
and
mov
cmp
jmp
adc
sbb
imul
neg
sbb
inc
push
or
mov
dec
iret
fisttp
inc
sbb
leave
push
rol
jne
out
push
ror
add
sar
movs
or
ins
out
inc
mov
sub
fsub
adc
cdq
nop
mov
pop
or
pop
add
ret
sub
inc
and
repnz
add
shl
movs
jae
xor
inc
mov
leave
je
dec
pop
and
xor
cmp
xchg
add
(bad)
sbb
inc
mov
(bad)
loopne
loope
fisub
mov
pop
icebp
mov
psadbw
fild
cwde
jno
into
adc
mov
xor
cmp
add
ja
push
add
add
pop
sub
aaa
inc
cmp
jne
(bad)
sar
sar
fsub
push
popf
mov
push
hlt
mov
xchg
cmp
add
mov
or
ror
inc
add
jecxz
xor
loop
je
push
add
cld
jbe
and
mov
ficomp
loopne
inc
outs
int3
outs
cmp
lea
ror
aam
pop
pop
ins
mov
or
jo
adc
push
fadd
in
or
or
fisttp
fadd
call
push
outs
sub
and
mov
imul
ins
mov
leave
add
pop
stos
pop
mov
and
jmp
rcr
sub
xchg
popa
xchg
push
push
jle
cwde
and
adc
and
pop
and
or
and
ret
and
fadd
inc
push
in
addr16
add
(bad)
call
js
cs
xchg
arpl
scas
lock
jb
or
xor
push
imul
push
lods
jmp
mov
inc
or
pop
add
cld
adc
xchg
adc
and
push
stos
cmp
rol
call
sbb
and
in
jno
sub
or
push
xor
inc
sbb
dec
and
or
mov
es
cmp
inc
dec
rcr
or
add
push
fmulp
push
loop
jns
inc
nop
and
cld
and
and
xchg
retf
inc
or
sbb
in
push
add
loopne
xor
add
mov
pop
or
out
lock
pop
loopne
cmps
adc
sbb
sahf
cmp
adc
loope
add
jbe
or
add
jnp
imul
xor
or
(bad)
aas
cld
jg
mov
inc
jns
add
ret
or
sub
mov
and
repnz
mul
sti
scas
and
jmp
lea
test
adc
test
bound
pushf
mov
xor
jle
lock
loopne
xor
icebp
pop
mov
mov
add
cld
test
sub
push
add
mov
add
xor
sub
stc
jbe
inc
repnz
or
call
xor
or
jmp
fild
push
push
ret
dec
cld
sub
mov
push
and
cs
mov
xor
or
lods
or
adc
pop
jns
mov
sbb
cmp
jge
mov
xor
ret
add
rol
sbb
push
push
ja
out
sub
rcr
ror
xor
ret
scas
dec
push
jne
(bad)
or
clc
je
push
jg
scas
pop
push
mov
push
jae
sub
cmp
ja
sub
mov
fdiv
or
jo
movs
ds
js
sbb
(bad)
push
and
mov
cmp
ja
mov
jmp
arpl
inc
xchg
mov
push
shl
cmps
inc
dec
mov
out
jg
sub
lea
inc
push
sub
icebp
add
loopne
mov
cmp
pushf
dec
call
mov
sub
jmp
mov
adc
or
jne
push
pop
aaa
jmp
cmp
inc
dec
call
and
not
mov
cmps
add
ss
inc
popa
and
test
xor
jge
or
test
add
int
adc
push
in
push
or
jge
inc
imul
sub
or
fcom
ret
push
cmp
jge
lods
dec
push
mov
push
inc
stos
fistp
fsub
mov
inc
add
add
push
test
add
icebp
sub
out
add
movs
(bad)
dec
push
pop
leave
xor
xchg
add
xchg
dec
xor
or
push
push
lea
or
mov
xchg
fdivr
jge
sbb
jbe
cmp
jge
mov
push
push
ret
or
pop
mov
(bad)
sub
cmp
data16
pop
sub
adc
jle
sub
test
push
jp
enter
stc
popa
push
jns
pop
pop
add
mov
mov
or
sbb
push
add
add
mov
mov
test
pusha
mov
test
or
jl
cmp
mov
mov
mov
sub
mov
out
scas
sub
lock
sbb
sub
push
adc
mov
out
fnstcw
aaa
xor
inc
add
mov
scas
dec
add
scas
sub
push
adc
das
adc
(bad)
cdq
in
xor
mov
sub
push
mov
loope
cmp
fld
xor
das
mov
inc
mov
ret
jnp
and
shl
test
xchg
inc
lods
test
or
(bad)
cmp
mov
repnz
xchg
rol
and
push
ja
inc
or
lea
xor
sbb
out
push
push
pop
imul
inc
mov
inc
inc
das
loope
sub
in
loope
and
mov
mov
push
pop
or
add
addr16
ja
push
jns
adc
cli
ins
inc
adc
aaa
div
push
cmp
dec
push
jbe
xor
cmp
jns
add
jl
mov
mov
xor
jnp
mov
push
mov
adc
jnp
mov
sbb
jnp
xor
sub
lahf
push
or
cmp
mov
add
or
mov
add
and
and
or
or
xor
adc
(bad)
lock
js
div
add
sub
mov
int3
daa
repnz
fimul
and
mov
add
int3
test
mov
pop
jge
jl
in
mov
mov
push
fistp
or
xchg
pop
imul
outs
aad
cmp
add
push
dec
in
dec
adc
mov
mov
or
mov
inc
repnz
shl
bound
or
(bad)
push
gs
lods
sar
add
xchg
mov
jge
inc
gs
mov
enter
inc
xor
xchg
mov
add
cld
mov
inc
or
in
(bad)
call
add
in
add
aam
call
xor
add
mov
lea
xor
push
xor
daa
fadd
js
popf
test
mov
or
dec
lods
fiadd
sbb
rcl
xchg
xchg
pushf
jo
inc
jno
and
jno
mov
push
inc
mov
xchg
scas
xchg
icebp
cld
je
mov
(bad)
push
mov
pop
mov
mov
jae
inc
lods
xchg
(bad)
fld
xor
test
mov
hlt
in
repnz
jno
adc
ret
movs
adc
sub
loope
cmp
gs
movs
adc
cmp
mov
sbb
imul
sub
stc
and
aas
fist
sbb
push
inc
add
lods
dec
in
out
les
add
jmp
xor
test
or
add
loope
aas
ret
xchg
sub
xor
retf
sbb
inc
cmps
retf
inc
outs
pusha
mov
mov
call
mov
push
push
add
out
xchg
pop
fidiv
pop
es
fcomp
fwait
cmp
push
mov
icebp
pop
dec
push
pop
adc
mov
adc
mov
cld
or
pop
lods
mov
adc
test
lahf
lea
sbb
outs
mov
xor
cmp
out
and
xchg
pop
push
jecxz
rcpps
xchg
lock
nop
add
mov
pop
ret
or
push
test
arpl
loope
or
adc
clc
add
add
and
pop
inc
scas
inc
adc
sbb
inc
adc
and
bound
stc
xchg
adc
cwde
add
ret
and
push
sub
ret
outs
sbb
adc
ret
(bad)
dec
cs
stc
(bad)
cmps
pop
sbb
xor
daa
or
mov
(bad)
jg
adc
shl
rcl
hlt
rcl
mov
adc
dec
hlt
sub
repz
push
outs
dec
lea
push
dec
or
mov
aaa
dec
adc
mov
stos
mov
pop
shl
mov
pop
ja
gs
mov
imul
gs
shr
push
mov
pop
xor
ret
ficomp
mov
inc
mov
or
sti
sahf
or
movs
cmp
int3
sbb
out
les
in
sub
mov
movzx
xor
fwait
pusha
data16
bound
shl
clc
mov
retf
inc
inc
ss
repz
sar
pushf
push
(bad)
stc
ja
pop
sqrtps
inc
push
jg
test
or
imul
sbb
sbb
jno
add
enter
shr
arpl
mov
or
sub
sti
(bad)
pop
ret
repz
xor
inc
add
or
nop
test
out
jmp
xor
or
test
call
mov
adc
dec
or
pop
xchg
push
cmp
test
imul
fbld
arpl
and
stos
ret
or
(bad)
mov
jmp
or
add
cwde
test
and
(bad)
fs
out
into
mov
dec
jmp
icebp
not
or
and
sub
and
mov
jo
or
je
push
inc
mov
or
sti
add
and
ds
popa
inc
jo
pop
out
pop
pop
xchg
shl
push
xchg
and
sbb
fucomip
fidiv
call
cmp
push
stos
sub
cli
ins
arpl
mov
ss
or
jb
push
gs
push
jno
and
jg
mov
into
(bad)
jae
xor
(bad)
into
jbe
add
and
push
and
sub
pop
pop
push
cld
inc
call
push
sti
cmp
sgdtd
test
stc
lock
adc
imul
lock
ror
sub
mov
push
loop
mov
verr
les
or
sub
loopne
int3
adc
pop
mov
and
sub
mov
xchg
lock
lock
add
ds
repnz
inc
sar
push
call
add
mov
add
sub
in
inc
jbe
inc
addr16
repz
fimul
inc
cmp
call
or
jnp
add
dec
add
xchg
icebp
or
mov
add
iret
das
mov
pop
jns
aam
dec
cmp
sub
or
add
stc
adc
add
push
fwait
cli
and
mov
aad
fadd
das
xchg
sbb
enter
adc
or
rcl
mov
add
les
and
call
pop
hlt
add
hlt
ret
outs
adc
add
out
add
outs
lea
sub
rol
jbe
push
jne
out
xchg
jno
test
push
aam
enter
push
dec
and
adc
mov
in
inc
mov
ret
adc
arpl
pop
jp
push
(bad)
(bad)
and
mov
mov
cmp
les
shl
repz
sub
jle
int
cmp
adc
sbb
cmp
or
sub
aam
cmp
push
ds
(bad)
adc
popa
pushf
mov
std
rcl
test
js
jge
and
in
ret
lock
dec
push
fcomp
pop
mov
jo
push
pop
or
mov
(bad)
adc
xchg
push
outs
data16
jle
imul
add
(bad)
push
(bad)
and
push
sub
pop
xor
mov
test
in
dec
or
ss
xchg
test
adc
adc
shl
movs
inc
rcl
(bad)
sbb
xchg
fst
push
mov
push
adc
push
arpl
stc
sub
out
cli
pusha
add
rcl
repnz
sti
mov
(bad)
test
sbb
push
nop
cwde
(bad)
xchg
(bad)
xor
xchg
mov
nop
mov
dec
inc
or
ins
push
div
nop
fwait
aaa
push
jne
dec
clc
test
or
add
or
jp
add
mov
sbb
xchg
ror
call
jnp
idiv
scas
fwait
lea
mov
add
adc
sbb
loopne
and
and
or
push
sbb
pop
mov
addr16
ucomiss
push
adc
adc
mov
adc
and
in
fs
test
and
(bad)
ror
inc
and
test
push
or
xor
jge
pop
jo
adc
sar
inc
mov
cmps
xchg
mov
adc
call
arpl
xchg
in
aad
fwait
pop
xchg
push
jb
lods
xor
cs
mov
sub
dec
lods
cdq
stos
and
lock
mov
cmp
nop
jg
add
push
(bad)
jmp
push
jne
jnp
ins
xchg
add
dec
push
icebp
sub
aam
pop
add
out
aad
fnstcw
sbb
test
imul
mov
lods
push
lock
xchg
and
int
(bad)
fisubr
(bad)
je
lds
push
and
add
or
shl
push
push
push
in
out
sbb
cmp
pusha
mov
mov
popa
and
gs
test
jle
or
sbb
mov
popa
jb
sub
movs
mul
mov
inc
je
and
or
icebp
test
dec
(bad)
nop
jbe
loopne
enter
cmp
pushf
clc
add
and
mov
ja
movs
jge
push
add
adc
cmp
and
(bad)
out
(bad)
jae
fdiv
int3
ret
dec
lock
scas
sub
ror
adc
sar
jl
push
pop
sub
sbb
mov
add
sub
rol
mov
add
jo
push
fcomp
inc
lods
sbb
add
push
xor
jl
dec
ret
lock
inc
xchg
jge
lock
add
add
fadd
in
adc
inc
cmp
stc
je
leave
xchg
mov
sbb
jo
pop
into
movs
cwde
xor
jnp
lea
ret
sbb
pop
push
rol
pop
neg
xchg
jbe
dec
fmul
xor
sti
js
pop
fcom
cmps
add
les
dec
inc
out
jle
es
into
add
pop
ss
mov
inc
add
and
sbb
add
or
pop
cmp
jmp
shl
into
stos
adc
pop
test
call
jns
pop
loop
push
push
inc
push
sbb
add
mov
clc
inc
jo
sbb
or
sub
jl
lahf
shl
sub
popf
loopne
push
or
inc
mov
and
xchg
lea
xor
(bad)
(bad)
in
sti
add
xor
mov
in
fcom
xor
pop
and
xor
push
cmc
push
lock
fdiv
jecxz
xor
jecxz
fnstenv
jo
or
cdq
mov
sbb
pushf
mov
inc
in
fdiv
es
dec
or
dec
repnz
movs
sti
or
(bad)
push
dec
test
add
pop
push
movs
(bad)
(bad)
ds
mov
or
cld
adc
(bad)
push
rcl
fwait
xor
cmps
mov
pop
or
or
sbb
out
sub
push
mov
out
shufps
dec
xor
adc
in
enter
dec
sbb
sbb
cmps
push
(bad)
sbb
les
xlat
pop
push
sbb
stos
inc
push
shr
or
ret
dec
adc
adc
mov
(bad)
cwde
cmp
cmp
ret
adc
sbb
adc
add
xchg
stos
sbb
sub
sub
adc
fiadd
push
pushf
or
xchg
adc
pop
mov
scas
test
adc
add
dec
xor
lods
test
jb
nop
mov
pop
and
or
jmp
dec
mov
ret
ja
retfw
cwde
xchg
cmp
je
pop
adc
je
cwde
mov
lock
add
and
add
lahf
fild
nop
add
mov
add
inc
add
cmps
add
xchg
and
push
xchg
sahf
scas
sbb
mul
movs
jo
(bad)
push
test
xor
add
mov
sub
dec
and
or
jmp
test
inc
call
sub
pop
(bad)
std
dec
add
mov
mov
cmp
je
jmp
pusha
daa
test
and
in
test
cmp
(bad)
dec
js
add
mov
xchg
clc
or
lahf
(bad)
jmp
jmp
je
or
sub
cmp
adc
pop
nop
mov
fcom
push
es
cmp
aad
sub
pcmpgtd
push
ret
mov
inc
jmp
pop
out
inc
inc
mov
inc
data16
pop
cmp
neg
xor
pop
pop
jo
leave
inc
push
xchg
mov
mov
adc
inc
pop
mov
sub
aaa
adc
pop
sub
sbb
(bad)
pop
test
out
and
je
or
je
xor
jae
jbe
push
or
outs
and
lea
scas
cmp
jne
mov
je
pop
xchg
jne
daa
push
jns
jnp
mov
mov
or
xchg
sub
in
ret
rcl
mov
ja
push
cmps
mov
sbb
iret
jno
adc
add
imul
sub
popa
xor
inc
je
loope
mov
pop
loope
outs
dec
pop
inc
cmp
nop
pop
inc
and
ror
ins
mov
mov
adc
out
mov
aaa
and
js
push
movs
pop
repnz
add
xor
mov
push
mov
call
pop
adc
imul
sub
or
bound
sbb
scas
shr
add
mov
and
pop
adc
dec
enter
sbb
sub
loopne
inc
push
and
es
movs
pop
sar
ins
cmp
cmp
adc
xor
leave
sti
add
test
(bad)
scas
adc
lods
push
adc
xor
xor
pop
pop
test
mov
push
rcr
xor
jle
aas
cld
rol
clc
xchg
and
push
or
push
push
enter
xchg
jg
icebp
pop
adc
add
je
mov
fist
sub
adc
inc
mov
or
inc
push
sub
rcl
inc
push
adc
add
or
fiadd
mov
data16
cmp
push
popa
jmp
es
in
outs
and
setne
lea
push
mov
pop
inc
xchg
ret
enter
mov
in
in
cmp
and
dec
loop
push
xor
repnz
mov
inc
add
outs
jmp
push
push
xchg
add
je
mov
pop
shl
not
and
and
pop
push
jmp
loope
stc
push
sahf
or
jo
imul
lock
mov
jmp
mov
dec
ret
push
xchg
sub
aad
push
nop
icebp
mov
dec
add
leave
cmc
mov
add
push
add
int
ret
adc
push
adc
sub
adc
lea
aad
mov
mov
nop
cld
sbb
add
test
push
mov
loope
ss
out
adc
imul
or
push
cmp
and
jnp
or
jg
hlt
add
popa
mov
or
xchg
(bad)
mov
adc
cmps
adc
sbb
push
leave
xor
test
call
adc
push
inc
mov
xchg
aam
ins
sub
xor
push
push
pop
or
ret
mov
sbb
cmp
or
lea
sbb
cmp
mov
out
in
push
stos
add
pop
xchg
xchg
or
pop
push
adc
pop
imul
popa
push
fadd
mov
add
push
cmp
xor
mov
push
push
and
add
inc
add
add
jo
dec
push
mov
aam
dec
mov
test
xchg
fcom
sbb
dec
inc
xor
xor
pop
adc
or
movs
dec
add
ret
addr16
sbb
adc
imul
push
inc
into
xlat
jo
sbb
pop
or
add
adc
daa
or
or
inc
add
inc
and
and
xor
inc
or
pop
mov
pop
jp
inc
sbb
cs
aaa
dec
inc
sub
ss
sbb
add
mov
push
loopne
movs
test
push
mov
mov
mov
add
lea
adc
loope
pop
ret
dec
test
call
add
sub
sbb
shl
add
adc
and
and
add
inc
es
imul
jbe
mov
and
add
leave
ret
and
loope
or
xor
pop
cmps
mov
mov
ret
push
or
(bad)
dec
and
adc
pop
or
jno
enter
add
xchg
(bad)
movs
xchg
push
pop
mov
xor
jns
out
adc
mov
add
jns
out
mov
add
mov
shl
adc
scas
or
sbb
pop
add
xlat
and
ds
aas
dec
sub
fild
dec
cdq
push
and
addr16
push
inc
cwde
mov
inc
or
inc
jbe
sub
inc
dec
xchg
push
xor
and
sbb
call
jno
cdq
stos
sub
dec
les
adc
movs
mov
add
mov
jp
std
push
je
sub
dec
test
pop
dec
push
push
test
sbb
mov
cs
fimul
inc
sub
push
outs
or
add
add
or
cmp
add
pop
push
dec
adc
inc
jo
(bad)
or
adc
push
xchg
les
sub
adc
daa
shl
inc
mov
adc
sbb
cwde
inc
cld
aas
xor
xor
sar
xor
ret
pop
cmp
jb
loop
jo
dec
mov
push
shr
xchg
fs
loope
sub
sub
cmps
in
and
shl
ins
lods
mov
cdq
fcom
cmp
sub
sub
sub
or
push
ins
(bad)
loope
jge
je
push
push
data16
not
push
or
dec
or
sub
jle
(bad)
add
push
hlt
mov
into
xchg
popa
ins
push
mov
fld
inc
push
push
push
or
nop
sbb
adc
rcl
push
jmp
xor
fsubr
sub
pop
inc
pop
mov
arpl
mov
loop
mov
or
adc
pop
adc
push
retf
pop
adc
push
jbe
mov
inc
sbb
lock
sbb
mov
adc
jl
fcmovnbe
jne
iret
sti
out
mov
add
(bad)
add
aam
jge
jnp
pushaw
pop
ja
shr
pop
sub
pop
fdiv
jmp
xor
push
jle
dec
push
cmc
jmp
cmp
fild
add
es
jl
xchg
lds
adc
inc
push
sub
pop
cmp
mov
inc
or
pushf
mov
ror
call
rol
loop
add
bound
and
push
cmp
adc
push
sar
and
cmc
sub
add
movaps
xchg
test
sub
pusha
enter
dec
ds
add
ret
or
add
fild
dec
mov
in
sub
add
mov
lock
sub
shl
test
adc
shr
movs
sbb
push
mov
sub
push
or
out
inc
sub
jnp
sub
es
aaa
sub
outs
in
inc
push
xlat
add
call
adc
adc
adc
pop
or
xchg
ins
dec
or
or
cli
ret
xor
or
xchg
add
arpl
xor
push
xor
nop
imul
adc
cmp
je
das
adc
xlat
lock
movs
add
mov
pop
dec
out
push
jo
lea
mov
mov
test
call
dec
push
adc
mov
ret
mov
out
jge
mov
sub
xor
inc
lock
jmp
inc
sbb
rcl
or
pop
sbb
mov
push
sbb
or
fsub
inc
push
fcom
adc
stos
sub
jecxz
mov
test
scas
sub
stos
pop
inc
test
fwait
adc
cli
add
jle
xor
or
adc
mov
popa
adc
movs
inc
xor
pusha
add
push
sub
ins
add
sub
arpl
inc
fs
pop
movs
call
inc
jle
int
loope
inc
sub
and
in
and
out
les
popa
dec
mov
imul
mov
adc
inc
clc
cmp
push
and
(bad)
pop
jmp
and
mov
jmp
sbb
cwde
mov
cmp
out
add
pushf
xchg
lods
push
mov
mov
das
arpl
mov
call
mov
adc
fsub
adc
lock
test
mov
cld
sar
test
sar
push
adc
(bad)
add
rcr
loopne
and
shl
loope
ret
ror
cmp
mov
lea
dec
retf
aas
mov
std
rol
rol
lds
mov
les
test
and
jbe
add
std
adc
jmp
pop
or
fsub
xor
test
sbb
pop
les
push
mov
fcmovb
(bad)
jp
(bad)
push
jmp
sbb
les
add
sar
rcl
in
cli
cwde
idiv
pop
cmp
jge
push
xor
pushf
add
add
les
cs
or
jo
push
int
fisubr
cmps
lods
clc
sub
(bad)
inc
pusha
xor
cdq
test
sbb
popa
jl
push
push
mov
mov
test
adc
lods
mov
rcl
and
dec
cld
and
push
push
sbb
fs
xchg
xor
add
les
mov
mov
pop
mov
gs
xor
shl
add
pop
push
or
adc
add
inc
fwait
sbb
test
inc
jmp
jae
test
inc
mov
add
add
fsubp
jo
push
dec
push
adc
add
ss
dec
shr
dec
cmp
jae
cmp
sub
ret
inc
add
inc
cmp
pop
dec
mov
or
sub
cmp
and
push
mov
paddsb
in
or
sub
and
or
sbb
retf
dec
jg
mov
xor
push
mov
or
cld
sub
cs
xchg
cs
push
jp
scas
add
test
les
push
push
cmps
and
ret
push
pusha
and
sahf
rcr
jae
or
push
push
push
leave
lea
pop
or
iret
push
pop
jmp
adc
sbb
mov
cmp
adc
movs
push
push
lds
jno
mov
add
pop
xor
fist
add
sub
jno
nop
(bad)
xlat
sbb
jb
arpl
(bad)
adc
and
xchg
add
nop
or
mov
pop
out
dec
nop
sub
xor
popf
test
sbb
add
cdq
pop
lahf
inc
lock
xchg
and
rcl
and
adc
or
add
jge
in
adc
xor
inc
add
mov
mov
inc
or
jecxz
mov
hlt
fist
mov
inc
mov
test
jecxz
jmp
xchg
xchg
test
out
mov
add
add
shr
mov
cmp
sar
cmp
push
out
mov
sbb
pop
or
and
push
add
pop
imul
dec
dec
add
sbb
jnp
mul
pop
call
in
rol
pop
pop
in
aaa
loopne
jo
jmp
pop
add
add
(bad)
(bad)
test
ror
cld
mov
xor
push
lods
loop
mov
mov
mov
loopne
int3
dec
data16
jmp
cli
and
movs
rol
mov
inc
and
push
retf
retf
cmp
retf
movups
dec
and
stc
dec
lock
pushf
add
inc
lock
push
add
ror
and
cmp
jb
nop
add
jno
add
and
add
xor
xor
rol
xor
pop
and
or
push
test
push
int
pusha
and
aas
sbb
js
je
lea
adc
ja
cmp
cwde
(bad)
(bad)
xor
and
add
imul
enter
pop
shr
adc
dec
inc
pusha
inc
jmp
repnz
mov
frstor
cld
xor
pop
push
and
push
sub
adc
adc
ret
push
xchg
or
js
push
jmp
push
pop
movs
(bad)
cmp
mov
push
inc
pusha
test
push
cmp
adc
dec
sbb
xor
jg
sub
and
add
lea
and
mov
out
sbb
push
push
mov
(bad)
retf
cli
mov
inc
sbb
jne
add
add
pop
mov
lea
sbb
dec
cwde
push
mov
adc
sahf
xchg
or
bound
mov
pop
jne
in
add
push
sbb
loop
cwde
xchg
push
xchg
(bad)
idiv
mov
(bad)
sub
add
imul
xchg
lea
mov
cmp
lea
and
sbb
mov
add
xchg
cmp
je
xor
push
mov
arpl
jmp
adc
dec
or
in
daa
push
aam
add
call
fdivr
inc
push
mov
sbb
push
loopne
push
loope
pop
leave
xor
outs
xchg
test
fst
fs
int3
mov
sub
inc
shl
jmp
out
imul
inc
retf
push
cs
sbb
sbb
add
inc
xor
ins
mov
shl
inc
fild
mov
xchg
jo
cmp
addr16
test
inc
mov
enter
sub
pop
and
pop
adc
jmp
cmp
or
aad
je
cmp
je
movs
mov
mov
pop
and
pop
lods
push
lods
gs
scas
cs
cmp
(bad)
loope
mov
fdiv
mov
add
inc
sub
cmp
(bad)
int3
cdq
rol
adc
xor
and
cmp
inc
in
punpckhdq
and
jmp
sahf
adc
and
pop
and
sub
jbe
lods
cmp
push
or
outs
(bad)
ins
and
sub
push
inc
test
xor
sbb
sub
and
and
mov
dec
inc
daa
popa
rol
xor
mov
sub
rol
movs
fadd
nop
push
cmp
push
add
stos
sti
mov
cwde
sahf
lock
ficomp
sti
push
cmp
jne
test
push
mov
inc
pop
sub
scas
mov
std
add
push
xchg
add
ins
sub
dec
sbb
xor
fwait
or
or
enter
adc
test
fsubr
and
sbb
or
jne
dec
ror
adc
das
mov
push
mov
shr
test
test
sbb
adc
loope
loop
int
ins
repnz
jg
xchg
inc
add
sbb
bound
inc
fistp
adc
mul
cwde
mov
pusha
mov
pusha
mov
int
pushf
xchg
lock
add
call
and
inc
pusha
pushf
outs
pushf
xchg
sub
mov
dec
cdq
cwde
addr16
rcl
xor
sti
sub
xor
arpl
cwde
sub
or
add
sub
aas
cmp
dec
cld
adc
ins
pusha
jne
mov
push
dec
and
sbb
lods
lahf
aaa
nop
icebp
xor
cmp
stos
mov
pusha
sub
dec
jne
pusha
mov
movs
mov
(bad)
dec
ja
nop
(bad)
leave
pop
pop
mov
outs
pusha
pop
lahf
or
pop
add
cmps
adc
pop
pop
ss
push
cdq
pop
mov
jnp
mov
leave
inc
jp
add
or
xor
push
cmp
mov
inc
add
je
cmp
jne
and
and
dec
mov
add
or
dec
fmul
mov
out
je
and
jb
arpl
outs
push
enter
fisub
out
sar
shl
pop
sub
push
mov
push
cmp
push
or
mov
enter
sbb
ss
shl
loope
lods
mov
jle
sar
add
jle
cmp
jbe
sub
mov
pusha
sbb
push
push
or
cmp
push
cld
and
pop
int3
push
inc
push
or
ds
mov
and
arpl
or
jl
add
xchg
push
hlt
xchg
or
mov
or
retf
mov
bound
(bad)
mov
ret
mov
aam
daa
add
and
adc
xchg
add
pop
fcomp
popa
adc
cmps
and
dec
fidivr
mov
sbb
cmp
cmp
cmp
sub
(bad)
inc
imul
cdq
and
add
push
ds
mov
inc
or
pusha
mov
sub
pop
loopne
jns
in
xor
add
jne
and
dec
mov
add
adc
push
dec
add
cmp
mov
inc
xchg
xor
sbb
je
call
push
movs
mov
pusha
aas
aaa
ins
dec
pushf
add
push
jl
mov
mov
push
jmp
(bad)
call
add
add
pop
in
sub
mov
shr
shl
add
and
shl
sbb
sbb
test
inc
int
push
test
fmul
adc
mov
mov
adc
dec
add
mul
cmc
cmp
dec
xor
fimul
jmp
jge
pop
sub
push
jo
push
mov
mov
loopne
jl
leave
push
cmp
or
test
nop
dec
cs
ds
pop
jl
sub
and
dec
arpl
dec
hlt
shr
jle
sbb
or
cmp
dec
gs
inc
cmp
jl
add
test
and
jmp
js
cs
push
jg
das
cmp
jp
inc
inc
ja
jo
lea
emms
adc
xchg
xor
jae
jmp
aam
add
imul
inc
add
pop
aas
jmp
and
out
fisub
into
push
out
pop
shr
push
lea
or
jle
adc
ror
ret
jmp
add
add
push
daa
sar
shl
inc
repnz
sub
cmp
adc
sbb
sub
mov
in
mov
mov
adc
and
in
dec
pop
pop
push
test
xor
call
lds
mov
mov
add
jg
add
test
push
push
push
in
push
(bad)
into
adc
push
xchg
icebp
pusha
add
leave
push
fwait
push
sbb
mov
and
in
xchg
ins
retf
loope
xor
cs
es
shr
sub
test
sahf
dec
call
loop
mov
dec
lock
cmp
push
mov
add
jp
stc
push
pop
cmp
test
push
mov
jg
clc
gs
fisubr
fld
sub
rol
push
sbb
mov
lock
fucomp
fnstsw
test
jnp
fcom
imul
out
sbb
mov
jmp
mov
pop
shl
ds
inc
sbb
dec
jnp
fstp
jmp
cmp
jl
icebp
fdivr
add
in
jg
push
sbb
ror
fxch
add
add
loope
in
cli
jl
je
in
and
outs
jbe
pop
lock
cli
adc
(bad)
fld
je
out
xchg
add
pop
pop
cwde
xor
add
iret
lock
add
cld
mov
lea
or
sbb
pop
cmp
ret
xor
arpl
loope
sbb
mov
js
loope
or
fisttp
pop
or
repz
xchg
xor
pop
cmp
sbb
sbb
push
scas
push
sub
adc
add
xchg
jbe
out
mov
inc
daa
and
popf
sub
or
add
retf
fld
pop
je
mov
sbb
ror
cmp
and
fstp
js
sbb
inc
je
bound
sbb
jge
es
ror
jae
imul
push
loopne
adc
dec
(bad)
(bad)
fiadd
test
mov
les
add
push
jb
add
fwait
mov
cmp
jle
movs
jb
and
call
pop
cmp
inc
adc
jmp
cmp
push
inc
pop
loope
jbe
xor
and
mov
stos
dec
sar
sbb
loope
add
xchg
add
daa
sbb
and
pusha
fcmovne
ret
mov
in
cmp
add
loope
mov
add
mov
shl
add
dec
or
push
fsub
in
stc
into
mov
push
loopne
push
pop
sar
inc
inc
pop
add
mov
pushf
inc
outs
clc
adc
and
dec
popa
and
sbb
and
iret
or
add
inc
test
push
iret
pop
add
adc
jnp
mov
ret
ror
js
enter
add
mov
add
mov
xlat
mov
inc
rol
test
lods
dec
js
lods
inc
stos
dec
or
and
dec
stos
inc
out
xor
ficomp
inc
mov
(bad)
cmp
sub
pop
or
and
mov
xor
xchg
adc
pop
mov
sti
add
and
and
or
cmps
push
adc
je
iret
lods
popf
add
push
ds
add
ins
adc
enter
and
mov
mov
adc
ins
fwait
mov
inc
dec
sti
les
or
inc
clc
outs
sti
mov
push
jge
sbb
sub
jge
jle
mov
inc
mov
sbb
mov
jle
fidivr
xor
inc
push
inc
pop
rcl
sub
adc
int3
mov
cmp
cmp
or
(bad)
lock
add
pop
and
ror
push
pop
add
add
mov
add
test
add
or
cmp
loope
pop
sub
mov
call
jno
dec
push
adc
ret
icebp
rcr
loop
jnp
in
movs
inc
ret
sbb
jge
sbb
sbb
enter
dec
cmp
and
in
test
mov
fxch
inc
stos
inc
sbb
stos
(bad)
loopne
cmps
loopne
sub
daa
leave
or
push
fucomi
and
mov
daa
add
pop
jne
push
sub
cmps
push
stos
add
pusha
stos
add
aam
jmp
add
push
std
push
mov
or
fcomp
sbb
popa
mov
adc
mov
push
imul
shl
fisubr
inc
sub
dec
rol
aas
add
fdivr
inc
inc
lea
jmp
push
pop
push
push
add
retf
(bad)
sbb
fld
sub
add
adc
int
dec
dec
sub
ret
push
push
xchg
sub
call
loope
test
in
or
aaa
int3
or
outs
loope
pop
ror
fwait
and
and
sbb
adc
pop
or
adc
and
rol
ret
dec
in
movs
xor
loop
and
sbb
popf
xor
fdiv
in
mov
sub
pop
test
gs
sub
inc
xor
cmp
je
movs
mov
push
pop
jno
push
popa
jp
hlt
add
ret
push
jp
icebp
les
(bad)
mov
push
pop
shr
in
push
xor
xor
xor
and
jbe
push
pop
pop
mov
cmp
popf
add
(bad)
xchg
mov
cld
jg
loop
fiadd
or
addr16
mov
std
inc
sub
mov
sub
push
jnp
test
mov
imul
inc
sub
adc
fsubr
adc
outs
sub
into
add
(bad)
pop
enter
pop
or
ins
adc
pop
shr
mov
push
push
push
mov
js
clc
push
pusha
add
push
cmp
pop
or
movs
adc
pop
leave
nop
dec
xor
xor
movs
add
test
mov
or
add
bound
sbb
xlat
mov
sbb
cmp
stos
pop
xor
cmp
adc
xor
hlt
cmp
jle
call
mov
and
adc
or
daa
mov
push
add
jo
inc
fmul
cmp
inc
push
das
add
dec
sub
pushf
mov
add
sbb
dec
ja
sbb
gs
imul
imul
out
dec
adc
adc
pop
cmp
sbb
sbb
pop
fidiv
dec
and
sbb
movs
ins
lock
dec
inc
sub
pushf
test
adc
mov
pop
jg
sbb
out
xchg
push
sbb
add
movs
dec
fld1
adc
pop
jl
sbb
ins
mov
xor
add
push
add
inc
frstor
sar
jmp
dec
jmp
popf
mov
add
out
sub
sbb
aam
fwait
mov
push
sub
jecxz
mov
fadd
inc
lea
mov
xchg
fmul
push
mov
push
sub
pop
aaa
add
push
jmp
or
pushf
and
(bad)
int3
arpl
out
movs
push
mov
add
hlt
push
sbb
movs
into
popf
test
test
xchg
sub
mov
xchg
movs
xor
daa
je
sti
mov
xchg
pop
jg
xchg
push
lods
daa
and
push
mov
dec
xlat
test
mov
lea
test
pop
mov
mov
sti
sahf
pop
enter
inc
dec
aam
rcr
test
mov
nop
cmp
dec
ss
jnp
cmp
xor
fld
sub
fdivr
xlat
sbb
mov
xchg
mov
sti
enter
add
cmp
lds
jne
or
scas
push
daa
xor
imul
retf
scas
jmp
pop
cli
mov
push
test
pop
js
or
xchg
adc
mov
mov
cmp
and
or
sbb
xchg
repnz
lds
inc
push
mov
cmp
jle
add
push
cmp
cmps
adc
dec
fcmovne
xor
cwde
mov
sbb
fdiv
jecxz
daa
les
jne
xor
pop
test
sub
cmp
sysret
jle
or
test
retf
loope
inc
ret
xor
add
and
cmps
cmp
or
or
push
sbb
clc
dec
and
retf
int3
sub
or
xor
shr
cmp
xchg
call
adc
pop
adc
jo
xchg
xor
sub
and
mov
dec
push
or
mov
adc
clc
outs
or
rcl
push
ins
push
jno
les
xchg
sbb
call
mov
sbb
pop
jl
adc
or
or
cmp
fwait
or
fdiv
cmp
or
push
or
ss
pop
xor
dec
jo
dec
stos
dec
pop
and
lahf
inc
or
pop
or
ffreep
je
jb
xchg
push
in
les
xchg
xchg
outs
sub
cmp
fdiv
pop
add
dec
add
inc
pop
repz
cmps
push
pop
lods
jmp
push
add
and
sub
les
pop
add
test
sbb
(bad)
leave
rcr
dec
cmp
inc
and
fnstsw
mov
sub
std
in
dec
in
mov
mov
hlt
jne
int
xchg
or
pusha
nop
mov
test
adc
add
xchg
test
inc
jp
outs
or
push
mov
retf
pop
mov
enter
and
push
or
(bad)
mov
cwde
ret
add
sbb
loopne
jne
cmp
adc
loopne
inc
pop
push
add
or
or
or
adc
cmp
or
ds
je
scas
out
adc
jae
cmp
dec
lods
scas
sub
lea
sbb
movd
push
dec
hlt
test
sub
test
mov
(bad)
xor
add
add
mov
cdq
jge
test
and
adc
fxch
push
ror
aam
mov
add
movs
loopne
fmul
fcom
jae
push
cmp
mov
ins
fnstsw
mov
sti
shl
mov
sbb
xchg
ror
loopne
xchg
fild
add
jmp
dec
push
add
add
pop
jl
add
imul
adc
cmp
enter
nop
retf
(bad)
enter
popa
dec
pop
pop
cdq
xchg
push
inc
sub
sbb
mov
ja
xchg
add
lea
movs
jb
jo
cmp
sahf
or
or
push
adc
or
(bad)
cmp
pop
xchg
push
jns
adc
push
or
mov
sti
xor
pop
push
in
add
js
add
pop
bound
or
adc
add
xchg
mov
adc
adc
jns
fsubr
call
inc
popa
jb
in
push
dec
gs
sbb
add
adc
test
mov
sub
pop
adc
xchg
dec
inc
retf
adc
and
sub
or
add
xor
adc
jnp
push
pusha
push
dec
cmp
mov
idiv
dec
pinsrw
popa
mov
add
mov
daa
imul
push
clc
add
or
dec
sbb
adc
retf
scas
sbb
int
or
cmp
aam
add
sub
inc
or
and
retf
lock
adc
mov
mov
inc
iret
nop
call
dec
add
push
mov
dec
rcl
test
jle
mov
xchg
add
inc
fwait
sub
iret
pop
stc
push
add
sbb
and
iret
mov
cmps
movs
inc
movs
movs
pop
mov
push
inc
test
scas
nop
xchg
icebp
xchg
pop
xor
push
mov
les
xor
(bad)
dec
xchg
jnp
pop
xor
mov
repnz
(bad)
mov
xor
mov
aas
pop
dec
mov
add
push
mov
adc
jbe
push
pusha
pop
mov
cmc
jno
jbe
retf
pop
dec
popa
popf
(bad)
push
push
movs
cmp
jae
cmp
rol
aam
adc
and
mov
pop
clc
ret
inc
or
lock
ret
jmp
sub
sbb
pop
inc
sub
(bad)
cwde
(bad)
pop
(bad)
imul
add
dec
push
daa
push
pop
pop
xor
rcl
dec
push
xor
mov
add
ja
aam
ins
jg
or
pop
cmp
je
and
out
nop
pusha
sub
inc
mov
dec
add
add
and
les
popa
mov
push
sub
std
jg
arpl
sbb
daa
loopne
rcr
aam
cmps
ss
mov
xchg
or
dec
jne
and
jecxz
fcom
push
imul
jns
pop
push
push
push
sub
leave
test
mov
or
adc
or
mov
jae
xor
sub
push
dec
inc
loop
or
or
cmp
iret
int3
imul
in
iret
jmp
add
in
mov
push
xor
cmp
test
adc
xor
arpl
test
pop
xor
or
mov
ins
ss
sbb
mov
ds
adc
repz
mov
push
add
repnz
call
mov
mov
mov
push
mov
sbb
jne
inc
jmp
inc
jne
push
pop
leave
push
setbe
xchg
popf
test
outs
sub
sbb
push
es
sbb
mov
jnp
mov
xchg
xchg
call
adc
gs
xchg
jae
clc
add
call
les
pop
test
sub
add
lahf
ins
dec
loopne
pushf
jmp
jmp
call
jg
shl
test
icebp
mov
dec
add
pusha
mov
cmc
fimul
adc
test
inc
dec
pushf
jle
adc
pop
aad
in
jne
xor
shr
(bad)
jno
or
je
xchg
outs
xor
inc
xchg
adc
stc
sbb
xchg
pop
shl
mov
shl
push
(bad)
loopne
fmul
pop
out
loope
xchg
icebp
mov
push
sub
fild
int3
add
fadd
lock
push
push
add
mov
xor
pop
test
mov
lods
fwait
test
or
(bad)
mov
inc
je
push
test
and
push
sbb
ffree
and
inc
mov
arpl
movs
(bad)
wrmsr
lds
not
gs
leave
inc
or
and
in
pop
pop
add
xor
sar
retf
jo
das
push
movs
mov
sbb
and
cmp
(bad)
xchg
jne
stos
sub
movs
test
xor
enter
dec
jmp
pusha
call
(bad)
test
mov
add
mov
add
enter
mov
(bad)
retf
ja
sbb
adc
int
adc
loopne
push
inc
int3
fisub
int3
and
jge
dec
leave
push
enter
jno
jo
movs
mov
(bad)
iret
or
inc
jo
jmp
cs
into
mov
add
aaa
gs
inc
pop
jno
jbe
sbb
add
push
call
push
cmp
and
mov
mov
je
jne
sbb
pushf
imul
inc
cmp
mov
pop
mov
cs
mov
in
cmp
mov
fsub
pushf
inc
mov
into
or
adc
rol
clc
not
dec
or
xchg
mov
mov
xor
pop
add
adc
aam
adc
or
sbb
rcr
jmp
cld
pop
cmps
pusha
or
repz
ins
lods
sbb
cs
adc
jne
inc
and
xchg
ret
inc
call
push
or
rcl
and
sub
shl
pop
jne
xchg
push
je
inc
mov
inc
into
mov
add
in
mov
outs
sbb
(bad)
pop
sbb
pop
lea
lods
or
(bad)
jle
dec
mov
mov
popf
je
dec
jg
stos
rol
sbb
xchg
movs
add
adc
cmp
or
pop
add
or
dec
dec
loopne
and
push
inc
fsub
addr16
jo
xor
pop
icebp
jno
adc
pushf
cmp
mov
and
stc
dec
add
jmp
fs
in
popf
sub
sub
add
jne
sub
push
scas
clc
mov
test
cmp
or
ins
ss
jecxz
popf
xor
pop
pop
add
sub
and
push
mov
fsub
add
jmp
mov
or
leave
(bad)
xchg
or
mov
test
loope
add
jle
push
push
sub
(bad)
dec
jecxz
push
iret
inc
pop
inc
add
mov
pop
jmp
cdq
and
fsubr
test
dec
repnz
mov
add
xor
mov
push
cli
or
sub
fnstsw
push
daa
bound
jmp
add
mov
inc
cmp
adc
mov
dec
mov
or
add
sbb
inc
das
add
jp
or
ja
bound
ret
push
popa
je
adc
loope
imul
mov
sub
or
push
fwait
les
xchg
jne
push
adc
mov
mov
clc
movs
cmp
add
shl
scas
or
lea
not
push
push
and
imul
cmp
cmp
cld
xchg
add
inc
sbb
sub
jae
dec
inc
cmp
sbb
cmp
loopne
outs
mov
outs
dec
sub
pop
mov
inc
add
movs
jno
inc
mov
pop
sbb
adc
stos
gs
inc
sub
push
push
pop
jo
push
imul
sub
add
dec
sbb
dec
lods
mov
mov
inc
dec
mov
icebp
repz
je
inc
dec
push
mov
fs
jns
pop
add
and
popf
imul
rcr
jle
lods
fcmovbe
push
outs
cmps
mov
mov
sbb
add
lods
push
add
cmc
aad
and
push
adc
loopne
fs
sbb
dec
push
xchg
mov
xchg
(bad)
loope
xor
lods
push
adc
dec
dec
cmp
pop
clc
adc
cmp
mov
js
loope
pop
pusha
inc
mov
mov
pop
loope
inc
push
jnp
movs
push
push
adc
loop
xchg
inc
push
sub
ret
and
call
add
sbb
test
daa
adc
dec
and
adc
arpl
inc
pushf
pop
in
push
test
push
push
fadd
jne
jmp
test
fs
push
lds
test
add
lds
inc
mov
movs
pop
dec
sbb
ins
or
or
pushf
int3
(bad)
pop
cwde
pop
cmp
push
push
push
imul
mov
mov
adc
mov
mov
loopne
(bad)
rol
adc
adc
popa
pop
or
add
xchg
add
push
push
loope
and
pop
jge
loope
mov
mov
(bad)
ins
mov
hlt
aam
push
add
xor
jl
mov
fwait
jno
pop
or
stc
fcom
stos
icebp
add
add
or
mov
mov
in
(bad)
pushf
scas
adc
add
ja
loop
and
cmp
or
add
inc
push
jo
dec
inc
hlt
mov
ret
or
jl
adc
push
add
or
xchg
hlt
lea
imul
in
add
adc
jmp
dec
add
push
add
loope
fcomp
jl
nop
mov
or
cld
xchg
jmp
movs
xchg
push
pop
push
retf
aad
mov
adc
sbb
inc
pop
add
es
test
mov
aaa
cmc
jmp
jmp
fcom
cmp
pop
pop
push
imul
dec
les
ja
lds
imul
adc
mov
mov
ins
loope
stc
add
enter
push
rcr
test
js
or
add
mov
sub
sub
xlat
leave
add
add
out
(bad)
mov
inc
mov
adc
(bad)
mov
ret
xchg
or
mov
or
mov
sbb
or
fstp
inc
add
loopne
or
adc
repnz
js
adc
xchg
or
mov
addr16
mov
xchg
fsub
test
xor
mov
xor
es
iret
push
pop
mov
mov
mov
jo
xchg
cmp
mov
sub
xchg
ss
or
inc
jmp
cdq
adc
push
inc
cmp
(bad)
in
fwait
inc
movs
mov
hlt
adc
push
jecxz
xchg
push
or
sbb
pop
or
daa
and
push
xor
add
shl
mov
pusha
push
loopne
pop
sbb
std
mov
inc
lahf
mov
mov
(bad)
std
stos
(bad)
pop
in
das
pop
xchg
cmp
cs
add
iret
mov
push
(bad)
xlat
xchg
dec
mov
push
sbb
inc
dec
cmc
mov
push
xchg
pop
add
push
adc
push
mov
in
cld
loopne
in
fadd
push
adc
ins
test
cmp
dec
jge
inc
mov
push
and
int
daa
mov
fdivr
ffreep
dec
cmp
loopne
cmp
cmp
push
push
shl
loopne
in
sbb
gs
rcr
fmul
cld
neg
jo
fstp
pop
add
test
xor
or
mov
loopne
pushw
sbb
movs
xor
or
inc
mov
aam
clc
nop
cmp
mov
add
ins
mov
mov
pop
xor
or
test
add
pop
(bad)
add
jg
jmp
inc
pusha
cmps
cmpps
rol
sub
adc
push
pop
mov
adc
stc
cmp
adc
prefetch
add
fnstenv
out
mov
ja
sbb
push
add
add
push
mov
and
sbb
inc
xchg
shl
jecxz
fcomp
adc
lahf
stc
jae
adc
cmps
push
popf
ret
loopne
cmp
sub
dec
movs
(bad)
fbld
je
push
push
call
push
or
loopne
add
mov
jmp
dec
push
add
push
add
adc
dec
in
pop
leave
and
add
popa
mov
lds
in
jl
jg
push
aaa
enter
aam
push
test
adc
and
dec
xchg
sbb
adc
test
and
dec
icebp
push
or
mov
stc
push
adc
loopne
sub
inc
jmp
or
push
push
push
jp
jle
jg
push
gs
add
cli
adc
(bad)
adc
adc
loopne
or
push
or
or
cs
and
and
daa
adc
push
je
in
push
sar
push
sbb
scas
push
sub
pop
test
adc
jmp
test
mov
inc
test
fs
(bad)
cmp
push
test
mov
int
or
push
fdivr
jno
ret
or
sub
pop
aam
push
push
addr16
inc
cmp
mov
mov
repz
ror
into
stos
dec
sar
inc
mov
out
xor
arpl
jo
scas
xchg
test
xchg
mov
xchg
jg
cmp
sbb
and
add
pop
xchg
hlt
ror
push
xchg
mov
mov
popa
dec
mov
cmp
fwait
inc
add
jl
cmp
mov
(bad)
jbe
mov
movs
lock
inc
mov
stos
add
xor
mov
mov
call
psubd
add
mov
(bad)
mov
pop
push
loop
popa
push
pusha
inc
mov
in
sbb
mov
inc
adc
iret
pushf
lea
push
cmp
dec
or
inc
sub
or
out
add
add
out
and
clc
jmp
ja
das
movs
pop
js
mov
out
lea
in
dec
xchg
dec
into
pop
or
sub
retf
(bad)
fadd
rol
cmp
mov
fadd
pop
aaa
movd
xor
xor
push
add
and
mov
rcl
mov
fbld
lods
jl
out
or
in
or
ss
pop
cmp
loopne
jne
add
(bad)
xor
add
mov
fldcw
mov
mov
push
inc
outs
(bad)
(bad)
mov
xor
cmp
jne
mov
mov
mov
dec
adc
cmp
jne
loopne
jnp
adc
les
inc
xchg
loopne
push
xor
or
add
adc
idiv
dec
adc
adc
inc
mov
pop
mov
aaa
push
or
mov
inc
push
ss
sbb
mov
and
adc
lahf
add
push
je
aas
scas
or
mov
popf
push
adc
shl
or
jns
outs
and
or
in
cmp
dec
daa
add
into
sbb
call
leave
or
daa
sub
sbb
jg
sbb
xor
mov
popf
pusha
into
data16
les
add
or
inc
dec
pop
cld
sub
dec
or
add
loopne
or
cmp
sub
add
mov
jmp
adc
rcl
call
cs
push
jge
mov
and
jecxz
sub
les
pop
sub
adc
dec
mov
mov
push
push
dec
pop
mov
mov
pop
cmp
mov
pop
sahf
inc
push
aas
xchg
lock
add
add
cwde
les
inc
or
pop
adc
pop
bound
adc
mov
jo
jne
cmp
mov
cli
mov
lock
adc
sbb
out
and
bound
je
push
loopne
loopne
aam
push
loope
push
xor
fucomip
sahf
lea
push
je
pop
jg
inc
dec
ret
je
ret
mov
cmps
add
xchg
pop
mov
jmp
and
adc
inc
adc
jmp
hlt
adc
push
mov
(bad)
jmp
adc
xor
cmp
sbb
push
or
jns
sbb
push
dec
in
mov
mov
mov
inc
push
jnp
mov
fcomp
lea
loopne
pusha
cmps
pop
clc
mov
mov
cmp
std
movs
cli
call
fdivr
(bad)
xchg
aas
es
pop
xor
(bad)
je
(bad)
pop
cmp
xor
xchg
fsubp
xchg
loop
add
inc
or
mov
sar
pop
push
pop
in
pushf
mov
jmp
pop
fistp
inc
or
fmul
sub
mov
jae
xchg
lods
adc
mov
movs
cld
push
sbb
add
push
sub
pop
pop
mov
cwde
cs
add
les
sub
and
push
rep
add
mov
jl
shr
and
cld
lods
ffreep
add
mov
ja
push
add
iret
xchg
ret
adc
and
and
pop
mov
(bad)
call
or
jg
add
sbb
icebp
or
cmp
ficom
pop
mov
ret
ss
fwait
jno
inc
push
jne
in
pop
ins
adc
cmp
add
xor
enter
pop
movs
and
nop
dec
sar
push
mov
mov
sbb
push
mov
aas
out
adc
rcr
imul
push
mov
add
pop
mov
ss
add
or
ds
adc
mov
push
adc
das
pop
cmps
aas
out
pop
xchg
jmp
push
mov
dec
out
adc
add
jnp
mov
inc
push
sahf
inc
xor
mov
fcom
sahf
lods
add
das
retf
cmc
int3
xor
or
inc
(bad)
pusha
and
loopne
pop
sub
cmp
adc
inc
or
arpl
dec
adc
add
pushf
lock
loopne
int
adc
jne
push
rcl
push
shl
cmp
jne
dec
add
mov
mov
aas
mov
ss
mov
cmp
cmp
je
xchg
fild
jne
xor
inc
push
push
mov
addr16
xor
adc
push
adc
add
scas
movs
popa
das
and
jmp
rcl
fs
iret
add
lods
pop
loope
scas
mov
jnp
cmp
test
add
cmp
mov
mov
sti
add
int3
mov
add
es
mov
add
out
sbb
mov
popa
and
mul
addr16
xor
cmp
(bad)
lea
add
or
xor
xchg
pop
xchg
mov
mov
in
pop
add
cdq
pop
test
mov
mov
inc
jo
pop
sub
push
lahf
sbb
sti
xor
call
ja
mov
jbe
loope
and
sub
sbb
pop
test
mov
xchg
push
add
inc
mov
sar
shr
jl
add
popf
cmp
test
inc
push
das
adc
or
push
jg
ror
xchg
mov
mov
dec
in
xchg
sbb
or
xchg
aad
or
add
push
add
pusha
ret
cmp
fisttp
xor
add
cmp
add
stos
ins
push
mov
outs
rol
cmp
push
rcl
mov
dec
cmove
out
push
add
cwde
lods
inc
mov
xchg
rol
(bad)
mov
push
fadd
fmul
mov
or
or
push
pop
xchg
imul
and
aaa
inc
adc
stos
xchg
jae
pop
mov
sbb
pop
scas
shr
lea
and
xchg
stos
push
add
or
cmp
cmp
call
adc
test
inc
adc
ds
mov
dec
mov
ins
jne
mov
add
out
sub
push
nop
pushf
imul
sub
cmp
xor
push
jo
or
add
add
and
inc
es
add
sub
xchg
mov
mov
ret
leave
xchg
lea
add
xchg
movs
out
pop
or
push
add
pushf
inc
loopne
scas
or
loopne
and
enter
xchg
mov
(bad)
push
inc
push
add
xchg
ss
or
add
sub
add
adc
push
fyl2xp1
push
mov
ret
push
scas
pop
retf
mov
(bad)
sar
or
mov
scas
push
sbb
out
push
push
dec
fstp
or
out
(bad)
and
xchg
push
or
mov
lea
js
ins
xor
xchg
test
fidiv
rcr
xor
cmp
mov
mov
push
push
icebp
lock
xor
rcl
daa
mov
lea
cmp
test
xchg
cmp
dec
xor
mov
adc
pop
sub
pop
nop
ja
stos
mov
ja
pop
mov
mov
mov
push
rol
movs
je
cdq
or
mov
mov
(bad)
stos
ret
mov
sub
mov
add
out
and
jno
test
(bad)
ins
int3
mov
fcomp
ins
out
dec
sub
or
icebp
xor
cmps
lods
lea
lods
fcmovbe
aas
inc
loope
cmp
lea
push
popa
push
out
out
add
push
push
stos
mov
call
sub
add
movs
fcomp
jle
sbb
repnz
push
dec
sub
and
test
or
sbb
dec
cmps
jmp
or
rcr
pop
jmp
dec
icebp
adc
cmp
push
retf
ja
jmp
iret
inc
mov
push
sub
iret
push
sbb
push
retf
and
out
cmp
xchg
fs
addr16
cmp
jmp
inc
add
mov
test
rcr
xor
add
push
(bad)
idiv
add
pop
aas
pop
icebp
in
cmp
ret
pop
sbb
int3
push
add
fld1
inc
jl
pushf
inc
dec
xor
push
or
test
retf
inc
call
sub
jl
dec
cmp
fcmovnbe
inc
or
push
and
jbe
inc
sub
sbb
or
xor
adc
xor
pop
(bad)
and
fs
xchg
lea
add
add
inc
mov
push
je
or
int
push
sub
in
xor
push
scas
outs
scas
push
iret
sub
je
enter
nop
xchg
cld
js
xchg
jnp
mov
lods
add
push
xor
ror
sbb
scas
loope
rcl
or
adc
or
push
enter
loopne
retf
add
and
lock
out
rcl
adc
pop
adc
fist
adc
cmp
(bad)
cmp
adc
es
push
ror
in
mov
push
mov
cs
add
mov
push
call
dec
mov
or
inc
push
scas
jns
shr
js
shl
or
pop
push
xor
stc
push
cmc
mov
and
xor
pop
push
cdq
lds
or
sbb
aad
aad
sbb
push
jb
cmp
adc
pop
jb
in
aam
mov
test
std
xor
add
inc
add
sbb
std
add
inc
mov
data16
fadd
sbb
pop
aad
mov
or
adc
or
sahf
cmps
mov
mov
call
(bad)
aad
push
cmp
nop
jg
or
call
adc
jo
or
push
cmp
or
mov
push
scas
shr
inc
repz
mov
adc
sbb
int3
jl
loope
lock
popa
sti
repz
pop
iret
sub
jne
(bad)
loopne
jmp
mov
inc
rol
add
pop
loopne
ror
dec
es
nop
xor
add
jecxz
and
mov
(bad)
nop
jmp
mov
mov
inc
es
stc
add
dec
hlt
rol
adc
lods
mov
jmp
pop
je
push
mov
test
push
outs
int3
ret
ret
mov
push
mov
retf
imul
push
(bad)
pop
cmp
push
inc
mov
cdq
pop
fsub
or
pop
add
ds
add
xor
lds
test
xchg
jo
push
mov
add
retf
xchg
cmp
shr
xor
xor
pop
add
adc
call
cmp
and
push
mov
xor
and
dec
inc
mov
jmp
mov
out
and
in
inc
iret
jmp
push
and
xor
pop
push
int
arpl
xchg
mov
sbb
pop
mov
mov
sub
push
lahf
mov
pop
adc
add
addr16
movups
push
push
add
sub
adc
mov
mov
sub
and
ss
inc
mov
in
dec
adc
cmp
push
push
dec
sub
fwait
call
ins
inc
mov
pusha
and
cmp
aad
mov
mov
xor
add
mov
ror
xchg
not
and
or
adc
mov
mov
mov
push
adc
(bad)
push
sub
fcomi
xor
jne
inc
jne
aaa
jne
add
ret
mov
pop
cwde
mov
loop
aaa
sahf
mov
loop
pop
adc
and
or
or
dec
enter
xchg
shl
outs
add
cld
fild
dec
sbb
xor
add
loope
pop
loopne
mov
call
xor
sbb
pop
pop
(bad)
sbb
jbe
add
xchg
pop
xchg
scas
and
and
pushf
adc
sbb
cmp
adc
xor
mov
adc
jge
and
fadd
xchg
jmp
repz
xor
push
ret
rol
stos
jne
into
fmul
cmp
cmp
push
pop
push
cmp
dec
jle
bound
xor
enter
ffreep
(bad)
add
pop
inc
push
nop
icebp
enter
pop
cmp
sub
rcr
cmp
fisttp
dec
or
fdiv
lock
add
lods
sub
adc
jo
add
add
ret
mov
or
jo
cmc
sub
and
call
call
test
add
(bad)
jecxz
jb
jmp
rol
cmp
sbb
sub
jmp
adc
mov
jnp
and
lods
or
push
push
jmp
push
adc
adc
xchg
scas
push
inc
cmps
add
xchg
pop
fsubr
mov
test
icebp
push
jmp
movs
or
sbb
mov
pop
push
sti
ss
push
lock
sbb
push
mov
jmp
cmps
retf
add
inc
or
loopne
stc
aaa
dec
aam
ds
lea
pop
push
pop
cmp
or
add
lock
test
mov
push
push
dec
loopne
sbb
aam
sbb
(bad)
test
mov
fwait
ins
gs
aam
aam
in
shr
pop
jb
mov
mov
(bad)
bound
xor
ret
aam
and
and
imul
xor
cmp
push
xor
jo
pushf
lods
jmp
dec
(bad)
push
mov
mov
mov
jle
call
cs
or
inc
movsx
ret
sar
mov
push
ret
fcomp
stc
add
cmp
mov
pop
xor
and
lods
xor
in
adc
xchg
add
mov
push
fadd
xchg
xchg
outs
jg
add
imul
xchg
inc
pusha
sbb
jp
push
adc
mov
js
adc
cwde
sar
rol
cmp
leave
sbb
ret
dec
cli
jmp
xchg
mov
adc
inc
rol
popa
dec
or
xchg
mov
popf
cmp
pop
psubsb
scas
or
(bad)
sar
mov
sti
sbb
inc
cwde
adc
inc
dec
jl
shl
fwait
jne
ret
cmp
adc
sub
ficom
lods
jg
loopne
cmp
mov
xchg
sub
test
and
add
cmp
ja
cmp
scas
lock
mov
aam
fnstenv
mov
fdivr
add
adc
lods
xor
out
push
ficom
loop
xchg
fbld
fsubrp
clc
add
pop
or
frstor
in
test
jmp
outs
push
das
mov
push
jb
jo
out
push
nop
call
call
jecxz
mov
sbb
dec
(bad)
push
xchg
aaa
push
gs
call
xor
imul
dec
ins
adc
push
fsub
jne
dec
pusha
ss
arpl
push
or
aad
xlat
push
jae
dec
and
add
inc
adc
adc
aas
cmps
xor
mov
loope
into
jle
sub
lea
jl
push
cmp
add
inc
mov
out
mov
push
test
lods
inc
loopne
and
add
call
add
clc
adc
fsubr
in
mov
mov
add
inc
call
pop
loopne
loopne
add
sub
in
push
and
mov
mov
xchg
bound
enter
ror
nop
dec
dec
cli
sub
ud0
push
add
jp
push
test
fwait
add
push
cdq
mov
das
leave
or
sbb
xchg
add
and
inc
out
adc
jecxz
loopne
sub
add
popa
or
fs
add
mov
dec
fs
mov
retf
cmps
or
ja
adc
out
and
pop
or
lds
popa
adc
mov
pop
adc
push
add
out
or
add
push
jecxz
out
fild
inc
inc
jae
inc
jmp
shl
push
jno
fist
out
sbb
add
push
jmp
ficomp
aaa
adc
adc
movs
jno
add
icebp
ret
push
sub
sub
mov
add
push
test
mov
push
pusha
adc
jle
cmp
xor
xchg
call
push
fmul
not
fidivr
xor
popa
push
mov
sub
into
retf
cli
mov
add
cmc
jge
inc
add
mov
fisub
pusha
xchg
adc
in
xor
sub
mov
add
xor
sbb
clc
cmp
lods
adc
pop
or
lock
in
mov
sbb
add
or
arpl
fisttp
or
mov
mov
jecxz
cmp
ja
adc
outs
cmp
add
jl
or
mov
mov
mov
(bad)
jne
jle
sub
mov
cli
add
add
call
popfw
pop
adc
mov
xor
mov
jno
push
push
lahf
shr
out
push
test
add
inc
pop
or
push
rol
adc
xchg
mov
sub
xor
and
movs
movs
adc
add
clc
sub
mov
mov
clc
add
das
or
add
cmps
loopne
ror
cmps
data16
cmp
push
aaa
mov
dec
inc
stos
adc
shl
cmp
xchg
adc
mov
dec
mov
fdivr
xor
sbb
xor
jmp
call
pop
inc
ss
xor
jmp
cmp
repz
sbb
sbb
loopne
inc
adc
xor
pop
add
call
fsub
aaa
sbb
cs
das
nop
imul
mov
dec
rdpmc
lock
out
xlat
into
inc
jecxz
add
push
and
add
mov
and
push
push
scas
push
enter
daa
les
shl
push
inc
sti
addr16
sub
xchg
adc
jp
add
imul
mov
or
and
xchg
adc
jp
dec
adc
pop
js
pop
fsubr
call
jmp
inc
mov
xchg
imul
cmp
in
xor
inc
xor
sbb
nop
mov
out
dec
sbb
nop/reserved
out
fidiv
lds
fmul
or
test
pop
jo
xor
in
adc
test
adc
add
inc
mov
fsubr
mov
out
pop
inc
mov
mov
push
cmp
pusha
shr
xor
lock
push
or
adc
xor
push
jo
loope
xchg
inc
loope
dec
ret
inc
add
je
cmp
out
or
or
sub
test
ins
test
mov
ret
dec
rcl
push
daa
xor
xchg
dec
adc
push
sbb
jge
int
inc
add
add
xor
add
and
add
ret
cmp
repz
or
in
add
out
dec
push
inc
das
pop
(bad)
dec
shl
mov
sub
test
xchg
xchg
mov
push
stc
sar
arpl
sbb
enter
jg
mov
ins
scas
(bad)
sbb
and
adc
setl
pop
adc
in
add
jb
fiadd
rcl
add
add
add
and
rcl
and
inc
pop
lock
lea
mov
adc
sub
je
push
cmp
adc
add
push
lods
push
les
das
test
mov
je
pop
ret
sub
bound
or
inc
or
std
inc
sbb
fld1
fstp
test
or
(bad)
lock
jo
ins
sbb
call
imul
leave
fstp
jecxz
push
add
fdivp
cmp
inc
xchg
(bad)
dec
adc
leave
sbb
ret
sbb
or
cld
out
fld
outs
and
dec
mov
cld
cld
fdiv
lods
dec
(bad)
cld
pop
pop
leave
test
sahf
addr16
pop
xor
inc
and
pop
xor
push
adc
adc
mov
xor
sub
mov
cwde
in
dec
xor
bound
pusha
add
sub
jecxz
cmp
adc
(bad)
cmp
push
add
add
push
lods
mov
nop
adc
add
pop
call
and
xchg
or
and
inc
shl
in
js
jb
and
jo
pop
dec
push
loopne
and
jmp
and
sbb
cmp
pop
icebp
xchg
and
sbb
jge
adc
(bad)
and
mov
mov
and
jo
push
xchg
inc
jmp
adc
movs
push
sbb
inc
sub
dec
sar
sub
aas
add
repnz
int3
add
aaa
out
hlt
push
or
add
mov
dec
test
dec
addr16
test
sbb
jnp
jp
sbb
je
into
mov
push
mov
repnz
dec
mov
dec
cmp
push
enter
js
or
out
mov
jbe
shr
add
fcomip
in
cmp
bound
inc
mov
jns
add
data16
les
mov
dec
push
mov
jbe
pop
fiadd
sbb
dec
loopne
bound
inc
mov
jno
sti
(bad)
lea
sub
mov
sbb
or
dec
or
dec
shl
cwde
dec
or
and
add
jo
xchg
lods
ja
inc
pusha
xor
pop
add
add
lods
jl
jb
sub
xor
inc
xor
rol
mov
add
adc
xor
add
push
fwait
pop
push
xor
in
xchg
je
mov
push
adc
jno
mov
sbb
sub
cmp
add
sbb
sar
cmovns
adc
jle
push
sub
cmp
sbb
dec
cmp
and
jmp
mov
mov
sbb
adc
add
jbe
jb
xchg
pop
xlat
adc
sub
rcr
and
mov
int
adc
push
push
aam
or
jae
sub
jae
add
jecxz
mov
bound
cmps
or
rcl
arpl
jmp
and
push
enter
and
mov
pusha
push
leave
jmp
add
xor
ja
in
leave
int3
dec
shr
enter
sub
jmp
xor
outs
adc
fsub
das
ffreep
in
inc
fsubr
movs
adc
aad
xchg
add
ss
scas
nop
mov
add
call
pop
les
dec
mov
xlat
adc
ins
or
inc
cdq
lock
std
adc
ins
mov
je
popf
cmp
shr
xchg
mov
or
and
pop
adc
ja
add
xor
stos
mov
xchg
cmp
xor
fidivr
xchg
and
mov
cmp
retf
and
sub
or
and
pop
nop
sub
fwait
(bad)
cmp
push
and
and
lods
push
nop
add
and
and
push
inc
and
int
inc
mov
inc
sbb
push
pop
or
pop
xchg
and
and
in
and
jns
and
and
fsub
and
push
popf
jns
stos
and
shl
daa
daa
and
push
push
lahf
cdq
retf
bts
mov
cmps
xor
jne
stos
and
sbb
rcl
adc
or
jge
in
stos
and
int3
test
int3
mov
adc
cmc
xchg
jne
scas
mov
mov
cli
dec
adc
loopne
jne
lods
loop
retf
push
loope
ss
mov
rcr
add
mov
mov
pop
cmps
dec
mov
ror
clc
mov
cld
call
lea
inc
cli
cwde
and
ins
and
or
and
push
lock
aaa
mov
add
push
fadd
and
jge
mov
stos
nop
jnp
push
sub
in
dec
add
sub
jno
push
mov
ds
test
sbb
je
sbb
ins
ds
sub
inc
aaa
add
mov
cmps
int
mov
mov
jne
arpl
aam
or
sbb
inc
inc
enter
jmp
add
adc
cdq
inc
mov
fld
inc
and
into
mov
bound
add
(bad)
idiv
xchg
add
push
stc
test
and
stc
out
jnp
adc
or
nop
es
leave
sbb
add
test
and
shr
xchg
ret
mov
pop
leave
cmp
mov
mov
pop
pop
mov
cmp
nop
push
cmp
je
push
and
int3
adc
call
in
add
test
loopne
prefetcht0
or
mov
inc
jbe
push
fs
mov
iret
pop
enter
cli
into
pop
call
adc
add
jmp
jmp
test
test
mov
inc
or
cmp
and
imul
in
stc
adc
loop
enter
cmp
add
jmp
rol
ror
mov
call
xchg
pushf
or
dec
rcl
inc
mov
and
fwait
popf
sub
sub
adc
add
repnz
add
xchg
mov
inc
and
or
and
push
mov
in
rcl
call
dec
cmp
mov
sub
add
in
add
xor
loope
push
leave
je
dec
adc
rol
sbb
dec
xor
bound
add
and
into
mov
outs
int
xchg
mov
lds
shl
(bad)
lock
mov
fsubr
loope
das
and
add
jo
shr
mov
push
lock
cmp
and
daa
loopne
out
sbb
jnp
je
rcl
les
rcl
add
call
add
sub
icebp
mov
fs
pop
push
and
sub
add
in
(bad)
adc
and
jno
pusha
dec
add
fld
inc
sub
(bad)
retf
leave
add
out
and
mov
test
add
mov
out
mov
adc
and
fisttp
mul
add
repnz
jb
adc
mov
mov
xor
adc
and
leave
add
adc
and
test
or
jmp
pusha
stos
in
enter
scas
jmp
inc
dec
fdivr
add
or
shl
sbb
invd
fnsave
add
lea
add
pop
jg
push
inc
mov
sub
adc
xchg
mov
dec
dec
inc
shl
inc
lahf
jecxz
push
push
(bad)
mov
mov
test
je
lds
fcmovnb
icebp
cmp
push
push
mov
inc
out
mov
jmp
pusha
stc
inc
add
lea
adc
adc
enter
imul
push
and
add
mov
imul
cwde
inc
xor
loope
rol
sbb
mov
add
clc
stc
and
push
sbb
mov
push
ror
mov
and
xchg
mov
ja
in
leave
test
nop
push
enter
sub
dec
dec
and
pop
jns
pop
mov
push
or
or
add
mov
das
cmp
test
mov
fadd
mov
and
ins
test
ja
mov
xchg
test
cwde
sub
fmul
mov
add
test
sbb
xlat
xlat
or
and
sub
sub
icebp
shr
pop
scas
and
cmp
add
mov
loope
mov
std
push
jecxz
mov
imul
scas
sar
add
push
pushf
scas
ror
lods
pop
jo
rol
daa
or
ss
or
push
je
adc
or
push
sbb
mov
mov
lock
or
and
and
leave
daa
ror
inc
jb
in
(bad)
enter
xchg
jge
lods
bnd
sbb
iret
aas
adc
(bad)
cwde
out
xor
sub
cmp
cmc
(bad)
push
dec
jmp
jb
cmp
sub
sub
adc
daa
test
sub
in
inc
push
lahf
or
sub
hlt
mov
and
xchg
icebp
cmps
cmp
jne
push
mov
mov
sub
pop
in
xchg
lods
cmc
in
ins
lds
into
jno
jns
push
outs
push
adc
mov
and
fadd
cmps
out
out
(bad)
push
push
lock
leave
aam
pop
push
jmp
jbe
popa
add
loop
jno
dec
in
mov
pop
dec
outs
jo
mov
adc
adc
or
and
call
xor
jns
leave
inc
inc
dec
ror
test
push
add
imul
mov
dec
and
jns
xchg
fcmovnbe
push
dec
jb
cdq
retf
and
sbb
jnp
xor
dec
push
cmp
inc
push
mov
inc
or
or
and
std
and
test
and
test
and
add
add
jecxz
mov
inc
ins
jno
aaa
mov
lea
push
adc
pusha
mov
xor
adc
arpl
fs
jmp
push
push
mov
and
popa
and
mov
add
inc
and
in
and
push
or
pop
add
xlat
sub
adc
add
push
enter
sub
mov
adc
adc
sub
mov
adc
sbb
addr16
xchg
retf
sub
push
mov
sub
xor
pop
dec
js
push
sub
push
push
loope
pop
push
mov
rol
pop
jmp
add
inc
jns
push
inc
push
and
cmc
pushf
stos
and
xor
test
cmp
leave
sub
adc
sub
sub
das
in
outs
adc
push
enter
pushf
cmc
push
pop
and
and
xor
cmp
sahf
inc
loopne
push
call
test
enter
adc
cmp
lock
aam
cmc
ja
cmp
repz
aam
dec
jle
enter
rcl
pop
(bad)
adc
bound
fs
fs
mov
outs
aam
push
pusha
outs
cmp
xchg
aam
add
cwde
enter
shl
pop
or
or
push
and
mov
inc
sub
movs
inc
inc
jns
dec
(bad)
add
jle
das
in
inc
jmp
adc
pusha
or
pop
sar
div
or
pop
jge
gs
mov
shl
inc
mul
test
or
inc
dec
push
and
ficomp
jno
and
add
lods
mov
jg
or
ss
je
pop
sbb
lock
mov
or
mov
sub
xchg
enter
cld
cmp
inc
push
sbb
add
sbb
sub
xor
jo
out
xchg
aaa
enter
and
adc
aas
dec
adc
mov
mov
mov
and
lods
add
je
and
ins
or
jo
cmp
push
aam
xor
rol
inc
xchg
adc
mov
adc
inc
mov
adc
je
or
sub
or
or
nop
movs
bound
outs
jne
enter
adc
jl
push
adc
out
add
fild
push
fdiv
add
push
and
test
rcl
push
xchg
mov
(bad)
and
xor
dec
in
push
ja
push
push
cmp
or
adc
adc
jbe
push
adc
dec
lock
push
sub
fstp
jecxz
and
fstp
dec
mov
test
xor
fwait
sbb
adc
cld
(bad)
adc
scas
int3
in
cmps
push
jne
inc
add
fcomp
xchg
dec
dec
inc
pop
add
lods
xchg
mov
jle
ins
jae
ret
out
xor
jb
add
pop
xor
jae
stos
dec
jl
add
mov
sub
xor
push
sbb
jecxz
xor
inc
mov
push
adc
and
loopne
adc
leave
or
xchg
in
arpl
aam
or
test
mov
das
push
push
jo
cmp
lock
push
push
or
mov
dec
or
push
inc
and
mov
push
mov
xor
cmp
ins
and
rcr
adc
xor
inc
xor
les
push
pusha
xchg
jecxz
pop
mov
cdq
adc
loop
and
push
push
fadd
sbb
jecxz
lods
adc
add
loopne
loop
movs
hlt
ficomp
jecxz
dec
or
push
pusha
stos
add
xchg
sub
fst
test
xchg
call
mov
sub
push
movs
jbe
sbb
xchg
pusha
cmps
lock
jmp
add
push
enter
xchg
cwde
push
adc
inc
and
add
(bad)
in
cmp
add
clc
fld
nop
push
jb
shl
clc
and
adc
cmp
sbb
xchg
sti
xchg
add
push
lahf
cmp
sub
pop
xor
pop
mov
cvttps2pi
retf
sbb
(bad)
and
push
mov
or
pop
in
gs
push
test
inc
add
test
adc
aad
push
inc
push
pop
pop
inc
test
mov
mov
cmp
cmp
or
xor
push
rol
inc
dec
adc
cmp
pop
jle
mov
push
adc
jl
push
adc
jecxz
call
add
stc
fistp
mov
pusha
xor
(bad)
sub
jo
push
aad
add
sub
je
rol
(bad)
fcomp
mov
jle
xor
pusha
inc
fisub
shr
or
or
test
ja
jns
or
dec
or
jns
nop
pop
xor
cmp
add
mov
movs
or
ror
cwde
jns
or
add
mov
push
add
inc
sub
mov
sbb
loop
sysenter
or
pop
or
cdq
pop
dec
pusha
inc
sub
fcomp
inc
inc
xor
mov
pop
sub
inc
dec
xchg
cs
inc
add
add
loopne
icebp
ror
sbb
pusha
in
pop
int
cmps
mov
aas
nop
cmp
adc
add
dec
mov
cmp
add
add
loopne
mov
call
add
cmp
inc
cmp
pushf
push
add
add
sbb
cmp
sbb
pop
dec
mov
iret
lahf
sbb
push
inc
sub
mov
mov
setbe
inc
xor
pop
movs
fnstsw
adc
add
xchg
sbb
or
pusha
inc
adc
push
jb
push
or
cmp
inc
imul
adc
add
inc
adc
sbb
mov
cmp
or
cmp
adc
cmp
clc
push
mov
shl
rcr
jo
lea
daa
loope
pop
mov
aaa
xor
jge
xor
jge
mov
(bad)
or
xchg
push
rcr
and
inc
bound
in
movs
inc
xchg
xor
rol
ss
lods
fst
add
add
xchg
aaa
push
adc
mov
mov
enter
pusha
test
xor
sbb
cmps
jl
sbb
adc
sbb
add
dec
leave
add
sbb
enter
xor
xor
leave
add
and
sbb
and
xor
xor
neg
mov
adc
and
daa
lods
movups
cmc
push
iret
inc
rcl
add
sti
sub
sub
mov
rol
adc
xchg
xchg
test
add
and
mov
push
icebp
and
and
cmp
in
mov
inc
lds
loopne
mov
repz
fcom
dec
sub
mov
sub
sub
adc
loopne
icebp
and
dec
imul
xor
daa
add
cmp
push
imul
sub
(bad)
jo
int3
mov
daa
std
sub
sbb
sbb
pusha
and
cli
push
in
xchg
lea
cs
mov
push
jae
das
pusha
dec
and
sub
nop
retf
leave
pop
push
or
xor
sub
rol
call
retf
test
jmp
adc
imul
mov
add
dec
(bad)
sbb
imul
dec
cwde
jge
push
stos
adc
dec
dec
mov
sub
adc
jo
mov
imul
outs
sbb
sub
jp
dec
lds
xor
out
cmp
jne
push
adc
push
jae
dec
mov
lea
sti
or
imul
push
adc
enter
push
add
cmp
cmp
dec
test
nop
(bad)
and
adc
in
adc
pop
adc
aas
or
mov
cmp
or
mov
push
inc
xchg
dec
jae
sub
adc
test
xor
scas
gs
push
and
adc
inc
pop
shr
sahf
enter
sbb
sub
xor
push
pop
dec
dec
sbb
in
fadd
inc
add
inc
or
es
ret
jo
push
aad
inc
les
cmps
jmp
je
mov
adc
test
stos
jge
xchg
push
pop
out
dec
push
shl
push
les
sub
and
add
inc
loopne
jo
pop
pop
mov
jle
push
sub
cmps
and
adc
test
sbb
pop
push
bound
add
and
test
dec
xor
rcl
cmps
or
dec
pop
jmp
cmp
inc
inc
ficom
movs
inc
sbb
inc
xor
daa
dec
jae
mov
push
jns
(bad)
mov
inc
pop
inc
inc
adc
lock
or
sub
les
cdq
nop
cmp
and
inc
pop
push
cmp
aas
das
test
bound
nop
xor
fwait
or
add
sub
loopne
xchg
mov
inc
scas
add
std
je
aaa
test
lds
push
mov
lds
aam
mov
xor
shr
cld
pop
mul
xchg
cmp
rol
std
sbb
xchg
pop
xor
inc
or
sub
rcr
sbb
or
xchg
mov
sbb
test
cmc
push
push
add
test
jg
push
and
nop
pop
jl
sahf
sbb
sti
and
push
push
dec
aaa
fldenv
out
aas
mov
nop
jmp
add
mov
test
and
sbb
adc
pop
pop
pop
lea
ds
and
int
pusha
and
fs
xchg
call
add
dec
retf
sub
arpl
cmp
sub
dec
sub
or
dec
sub
cs
mov
int
or
sbb
int
and
inc
clc
and
dec
or
xor
jo
or
cmp
jo
or
cmps
and
(bad)
and
cmps
jmp
adc
popf
mov
inc
mov
je
cmp
adc
repz
cmp
mov
pusha
pop
push
movs
inc
ins
ficom
cmp
push
push
adc
fwait
dec
scas
scas
pusha
stos
lock
test
daa
push
and
push
cs
pop
rol
inc
adc
xor
out
lea
cmc
inc
rcr
xchg
test
adc
xor
mov
sub
mov
cmps
add
pop
movs
jo
or
push
sub
add
xor
ss
sbb
cmp
xor
jg
inc
push
push
pop
jp
jo
inc
jno
das
cmp
cmp
xlat
loopne
test
push
mov
and
ror
mov
in
test
xchg
adc
dec
or
push
fsub
popa
push
arpl
or
je
or
pop
test
sar
es
dec
or
inc
dec
leave
or
dec
xchg
dec
es
sub
or
dec
xchg
or
dec
sbb
push
jb
cdq
or
dec
push
nop
dec
push
lar
xor
adc
lahf
push
jo
push
cld
dec
and
pop
adc
push
and
adc
adc
int
in
adc
fs
pop
adc
push
daa
cmp
xchg
or
ror
fmul
mov
aas
or
cmc
iret
test
dec
push
iret
pusha
and
push
cmp
nop
xchg
jp
inc
jae
jne
rol
cmp
clc
adc
jne
mov
pop
sbb
sbb
(bad)
sbb
xchg
dec
push
jbe
cwde
loopne
sbb
loopne
sub
sbb
add
xor
sbb
mov
pusha
add
xor
test
imul
xor
adc
rol
ins
push
int
and
adc
mov
add
mov
dec
leave
push
add
push
push
mov
mov
jmp
push
push
fstp
call
xchg
movs
mov
aas
push
pusha
xor
adc
add
sbb
mov
dec
and
arpl
cdq
shl
push
stc
jecxz
icebp
pop
cmp
aad
jb
mov
sbb
in
xchg
and
jg
xchg
adc
aad
push
dec
adc
dec
ss
popf
add
(bad)
jmp
add
imul
imul
dec
or
push
pushf
aas
push
adc
and
pushf
or
add
(bad)
lds
ins
clc
and
cmp
in
mov
inc
mov
aam
pop
leave
loop
jno
xchg
jmp
imul
mov
sub
jo
enter
or
or
push
push
add
lds
adc
and
(bad)
inc
dec
adc
out
rcl
cs
popf
sub
sbb
ins
pusha
adc
in
push
push
pop
fisub
add
(bad)
xchg
pop
mov
and
int
dec
and
sbb
fwait
and
ins
lahf
lea
jge
adc
and
push
xchg
fs
fsub
nop
and
inc
lods
fld
cwde
push
pop
fcomp
adc
push
jne
jp
nop
add
ss
adc
test
adc
push
ror
adc
aas
mov
mov
lods
pop
push
push
mov
add
pop
xchg
or
cmp
add
xchg
pop
lock
push
push
dec
push
push
inc
js
and
ficom
sbb
jge
clc
jl
push
xor
xor
adc
std
or
mov
jmp
bound
ret
sub
jns
cmp
adc
cmp
mov
call
adc
clc
aas
push
pop
jmp
push
jmp
cmp
lahf
fsubr
or
popa
fcom
fdiv
push
add
mov
or
inc
dec
inc
xchg
fadd
push
call
inc
and
pop
inc
js
test
mov
adc
xor
(bad)
jmp
sub
jmp
push
movs
push
push
iret
pushf
imul
loop
mov
test
jmp
call
(bad)
lock
loopne
pop
es
mov
test
inc
clc
add
add
sbb
lock
jmp
and
or
mov
pop
scas
aam
sub
std
fistp
push
mov
(bad)
xchg
xchg
inc
loope
rcr
inc
test
cli
push
lods
mov
inc
lods
rcl
retf
jle
ror
xor
in
xor
mov
adc
hlt
das
pop
mov
and
inc
add
repz
inc
clc
mov
inc
push
push
int
test
(bad)
and
xor
jns
lock
aad
je
mov
mov
pop
mov
mov
pop
sbb
dec
xor
push
mov
lahf
xor
sub
ss
adc
or
add
mov
bound
push
repnz
or
xchg
rcl
adc
and
ret
inc
add
push
sub
loop
xchg
ret
loop
jmp
push
mov
push
pop
push
mov
pop
or
push
xor
es
xchg
imul
and
ret
lea
daa
adc
(bad)
inc
inc
adc
iret
fwait
or
push
test
and
push
add
lock
movs
or
cmp
sbb
sub
je
mov
push
inc
push
in
aas
adc
cmp
adc
xor
cmp
mov
call
leave
or
jno
outs
fsubr
inc
rcl
test
push
outs
(bad)
xor
pop
sub
les
sub
mov
push
sti
jbe
mov
push
sbb
enter
popf
ins
or
aas
xchg
sbb
outs
add
mov
call
lods
or
dec
sub
(bad)
lock
mov
and
and
rol
(bad)
mov
es
scas
loopne
push
ins
fwait
and
and
repz
aam
jp
imul
add
test
mov
sbb
mov
lds
push
fwait
enter
jg
push
jmp
push
add
sub
push
or
test
add
ins
and
sub
mov
pop
leave
push
or
fcom
xor
add
lods
dec
(bad)
jns
loope
sbb
jb
jo
(bad)
loope
push
fdivr
mov
ins
cmp
arpl
sub
loope
and
push
lds
push
sbb
xor
dec
and
data16
and
pop
in
stc
(bad)
(bad)
jge
shl
add
jae
cmp
out
push
ds
or
out
(bad)
mov
mov
lea
or
jp
outs
xor
inc
pop
inc
hlt
jmp
lea
add
jl
add
pop
std
inc
adc
sub
sar
mov
jmp
(bad)
fiadd
mov
mov
inc
pop
jbe
das
push
and
push
dec
mov
lea
mov
adc
lea
adc
sbb
movq
ins
add
xor
ret
push
push
inc
pop
and
cmp
repz
dec
arpl
in
xor
lea
xchg
sbb
imul
pop
xor
ret
rcr
ins
push
inc
push
push
sti
xchg
add
pop
push
and
sub
fs
jmp
lods
adc
shr
scas
pushf
das
scas
clc
xchg
sbb
pop
pop
pop
and
lds
and
dec
sub
adc
or
lea
mov
in
push
test
jle
lea
aad
jmp
add
mov
xor
jb
add
or
cmp
jl
scas
mov
jne
pop
xchg
imul
add
aam
inc
or
fst
add
jmp
mov
popa
xchg
ret
je
popf
js
add
mov
loopne
sub
jb
push
daa
sahf
or
xor
cld
or
ror
push
or
(bad)
add
push
adc
mov
jl
xor
xchg
ins
aad
inc
sbb
and
inc
rcl
rcr
push
push
push
pop
retf
add
mov
and
push
outs
inc
adc
mov
fwait
dec
mov
dec
push
ins
pusha
sub
adc
dec
dec
cld
jle
neg
cmp
je
in
cmp
ins
pusha
jl
xor
adc
cmp
dec
rol
ins
test
je
and
pop
lea
and
test
pop
dec
imul
add
push
std
inc
cld
fs
mov
adc
jo
adc
(bad)
(bad)
test
gs
rol
fsub
sti
or
retf
dec
push
stos
push
add
gs
push
xor
nop
mov
or
sub
sub
push
jmp
mov
enter
lock
std
add
cmp
in
loopne
js
mov
push
cmp
out
movs
add
fimul
sti
or
jmp
xor
pop
xor
jns
pop
push
(bad)
push
xor
sbb
es
lock
sub
popa
sub
xchg
mov
ret
stos
or
sbb
(bad)
xchg
fidivr
add
adc
iret
imul
jo
xor
aaa
mov
mov
xchg
push
lea
push
xchg
sub
or
popa
(bad)
mov
xchg
inc
sbb
dec
fmul
xchg
rol
movs
jne
rol
pop
sbb
jl
jmp
pop
xchg
in
call
lock
mov
rcr
or
(bad)
mov
ficomp
jmp
mov
or
dec
pop
fcom
outs
repnz
and
jg
test
aam
pop
inc
hlt
lds
or
mov
add
rol
xor
dec
xchg
xor
xor
sub
aas
adc
push
inc
jo
in
hlt
jnp
(bad)
and
loope
push
jl
cmp
sbb
jl
sbb
dec
sbb
clc
push
push
outs
ins
add
std
fcom
loope
sbb
sub
aas
iret
in
mov
add
sub
nop
les
inc
add
sub
mov
(bad)
fst
add
ror
xor
sar
pop
pop
add
(bad)
adc
push
inc
xchg
dec
test
pop
cmp
std
pop
ret
and
cmp
ret
mov
push
add
or
inc
xchg
pop
or
and
add
lods
and
repnz
xchg
dec
inc
ins
rcr
rcr
sar
mov
mov
lods
add
xor
int
sbb
or
lock
lea
jmp
cmp
ja
imul
cmp
and
pop
sbb
retf
push
sub
push
push
jp
mov
dec
ror
push
mov
out
sbb
add
in
pop
dec
and
jbe
jne
push
add
aas
mov
xor
lea
mov
mov
adc
xor
test
addr16
pop
xor
push
push
pop
test
aam
nop
cmp
adc
scas
fstp
out
or
adc
mov
xor
xchg
ins
push
adc
ins
cmp
push
inc
dec
shl
repz
sahf
inc
mov
or
push
cmp
int3
mov
xchg
rol
jnp
push
js
cli
lahf
mov
movs
jmp
mov
div
fisttp
jne
mov
jne
mov
aaa
jge
push
fucomi
adc
pop
out
adc
add
inc
imul
and
inc
pop
ficomp
mov
or
or
xor
jle
and
out
mov
movs
dec
sub
cmp
ja
xchg
sub
jmp
test
and
pop
and
jle
inc
inc
or
aaa
pop
or
mov
or
not
mov
call
shl
lock
setne
xor
xchg
outs
and
adc
shr
outs
pop
outs
idiv
pop
push
push
or
add
and
mov
or
xor
add
add
je
sub
ficom
test
jl
add
lgdtd
inc
mov
xchg
fwait
mov
(bad)
es
jae
sub
sbb
jge
enter
push
or
rol
cmp
pop
and
imul
imul
and
mov
mov
jne
push
or
add
rol
daa
dec
gs
or
inc
adc
push
cmp
add
sbb
xor
xor
xor
mov
clc
cmp
push
add
adc
inc
push
adc
push
mov
add
dec
mov
ds
jmp
sbb
ja
push
sbb
rol
add
pop
pop
xor
stos
and
adc
push
xor
pop
dec
movzx
sub
sbb
cli
add
adc
or
mov
pushf
adc
mov
jo
mov
ror
add
or
out
xor
out
dec
js
int3
dec
push
push
inc
add
push
add
mov
cld
adc
fbld
adc
cmp
je
clc
cmp
add
or
sahf
and
xor
jl
cmp
adc
jl
jne
and
lea
cmp
inc
enter
mov
jecxz
jle
sbb
mov
push
inc
cmp
test
dec
mov
xor
pop
push
and
xchg
sub
fs
inc
xchg
ss
xchg
div
stos
pop
inc
add
ror
sub
sub
or
mov
or
cld
lds
mov
jae
add
enter
add
pop
mov
sbb
fsub
aam
leave
and
dec
mov
adc
mov
outs
or
lahf
retf
inc
mov
add
sub
jns
xchg
mov
repnz
imul
pop
sub
pcmpgtb
add
pop
mov
mov
jge
sbb
jmp
dec
or
aas
jl
add
or
dec
dec
rcl
pop
pop
fisttp
inc
call
pop
or
inc
or
push
mov
add
add
test
pop
mov
inc
inc
(bad)
call
lods
ins
sbb
ret
sbb
pop
push
call
jecxz
inc
or
add
div
push
cmp
or
dec
dec
dec
dec
leave
mov
xor
mov
or
dec
and
test
pop
pusha
push
add
xchg
xchg
movs
xchg
dec
jne
rol
xor
push
add
cmp
sub
popf
mov
add
add
add
and
arpl
mov
add
or
xlat
cmp
stc
cmp
ja
jo
add
cmp
sub
sub
scas
int
adc
cmp
aaa
add
shl
and
dec
fs
sub
lods
or
seto
cmp
adc
dec
and
in
push
cdq
pop
idiv
inc
mov
add
movs
xchg
mov
popa
adc
cmp
push
or
jle
test
add
add
das
fwait
or
test
jnp
pop
pop
mov
xchg
imul
add
les
adc
xor
fcom
mov
mov
push
inc
push
call
inc
mov
shr
not
not
and
inc
and
sbb
adc
and
dec
adc
add
xchg
mov
pop
std
cmps
add
adc
jmp
cmp
add
push
and
xor
add
pop
xor
mov
dec
sar
pop
test
cmp
jne
inc
inc
cmp
jb
out
mov
add
adc
jl
mov
pushf
push
movs
adc
mov
cdq
mov
dec
sub
ja
clc
sub
pop
push
cmp
and
or
test
mov
imul
sbb
inc
mov
or
sub
imul
push
ror
mov
or
jg
cmp
pop
ins
pop
xchg
clc
push
dec
or
push
inc
cmps
sub
push
push
sbb
cmp
jo
adc
mov
inc
adc
lock
or
or
add
fsubr
add
mov
mov
stos
fs
push
mov
push
shl
leave
int3
nop
pop
inc
mov
xchg
or
rcl
or
aaa
push
gs
inc
adc
inc
popa
mov
dec
and
xor
test
pushf
aam
test
fcomp
ja
mov
or
call
mov
sub
je
cmp
lock
push
loopne
add
xchg
push
dec
inc
cmp
fild
cmp
push
jne
dec
inc
xchg
out
jne
cmp
(bad)
pushf
jne
test
or
adc
imul
mov
mov
adc
stos
or
sbb
popa
or
pop
or
fdiv
setno
movs
cdq
mov
add
pushf
adc
psubsb
adc
add
ret
jmp
std
mov
add
lock
cdq
push
adc
clc
or
inc
or
je
or
cmp
add
xchg
or
add
sub
loop
lds
push
mov
fcmovu
fild
jo
lods
mov
mov
sbb
inc
pushf
mov
femms
inc
mov
push
xchg
push
add
dec
inc
in
adc
inc
repz
aaa
dec
and
sbb
hlt
push
xchg
fild
xor
and
call
and
dec
fmul
and
sbb
mov
mov
movs
adc
mov
and
xchg
repnz
cld
repz
push
cmp
push
or
push
cmp
or
or
push
cmp
jo
imul
or
pop
mov
fdivrp
xor
popa
inc
pop
jmp
adc
or
push
aam
fsub
int
dec
in
(bad)
call
lock
je
push
test
sub
add
or
into
in
add
and
inc
stos
cs
aaa
add
imul
and
xor
das
add
mov
and
mov
shl
rol
(bad)
sub
and
push
out
push
and
sar
mov
(bad)
xchg
sub
xor
adc
inc
lock
rep
mov
inc
shl
fwait
sbb
push
xor
cs
push
pop
clc
popf
xor
loop
(bad)
or
sub
shr
mov
repz
mov
mov
ret
add
xchg
adc
dec
fcomi
xchg
test
inc
add
jns
mov
and
ins
retf
push
retf
mov
or
hlt
sub
adc
and
mov
inc
jo
or
lea
or
sub
loope
push
sub
mov
fcmovbe
cmp
jle
bnd
inc
repnz
pusha
adc
jmp
test
adc
je
push
push
mov
sar
push
sbb
ja
push
sar
add
mov
or
lock
adc
fmul
or
jle
add
je
inc
cmp
cs
pop
(bad)
push
aad
adc
pusha
or
mov
jb
jmp
jg
push
(bad)
mov
rcr
call
inc
rol
icebp
pop
xor
and
push
or
adc
adc
adc
nop
or
adc
mov
mov
jmp
imul
mov
pusha
or
sub
inc
cdq
push
adc
and
push
mov
inc
ret
and
js
xor
pusha
add
neg
adc
mov
(bad)
mov
sub
test
push
inc
int
cmp
pop
mov
icebp
jo
ret
mov
or
add
push
sbb
add
pop
ins
push
add
movs
mov
or
or
add
push
jo
mov
pushf
xchg
sbb
adc
sbb
and
adc
movs
pop
rol
imul
pop
jmp
mov
or
inc
push
or
ficom
rol
inc
xchg
dec
or
and
retf
dec
adc
enter
js
hlt
push
xchg
ja
jle
fisub
stos
cmp
adc
outs
(bad)
pop
cmp
inc
inc
cmp
fdiv
shl
sbb
cmc
cli
or
mov
pop
mov
dec
fiadd
iret
pop
push
or
mov
repz
stos
xchg
cmc
mov
add
pop
jno
sub
dec
xchg
mov
pop
jmp
adc
imul
push
push
mov
retf
stc
jg
mov
pop
push
movs
and
push
mov
lods
frstor
pop
iret
push
push
push
lahf
inc
lods
pop
aaa
and
push
rcl
(bad)
ins
test
mov
mov
inc
pop
int
add
sahf
outs
cmps
mov
or
dec
in
add
push
ss
adc
xchg
inc
aas
sbb
mov
or
add
cmp
(bad)
lods
lods
dec
lahf
fsubr
push
add
je
push
popf
daa
sub
adc
dec
or
ret
jno
dec
sub
adc
push
fsubr
add
sar
adc
mov
mov
inc
inc
cmp
sub
and
clc
pop
push
and
jmp
cmp
shr
pop
pop
pop
ret
test
sub
cmp
mov
cmp
adc
cld
ret
je
mov
mov
pop
stc
cs
ja
and
mov
cld
mov
push
jmp
ficom
inc
add
cmp
ja
retf
jmp
add
adc
push
adc
inc
add
cdq
push
jo
rcl
and
and
xor
aas
pop
dec
in
in
pop
or
shl
inc
or
mul
ins
mov
in
shl
pop
or
aaa
int
dec
sbb
xchg
push
push
mov
push
and
sub
push
and
jmp
test
push
pop
push
add
mov
add
fadd
add
xchg
adc
mov
inc
ficomp
and
add
icebp
xor
or
push
adc
jle
addr16
inc
dec
sub
jne
push
ret
mov
sub
je
mov
mov
add
pusha
sbb
push
jecxz
lock
dec
retf
mov
mov
dec
cmp
je
imul
sbb
inc
sbb
pop
cmp
and
push
cmp
push
xchg
nop
xor
inc
add
mov
pushf
push
or
inc
jo
outs
pusha
or
or
dec
mov
dec
jle
mov
das
test
movs
add
into
adc
mov
not
inc
test
pop
push
repnz
mov
fldcw
add
and
add
test
adc
xor
cli
xor
or
add
push
xchg
cdq
xchg
aam
add
jmp
pop
add
dec
adc
push
xchg
jb
dec
push
mov
test
sbb
pop
sub
adc
add
pop
pop
and
cwde
push
cmp
sbb
push
sub
lods
pop
ret
sbb
add
loope
loope
add
inc
add
popf
add
ficomp
cmp
lahf
jnp
sbb
loope
pop
cmp
push
mov
popf
jae
dec
cmp
jo
or
xor
xor
sub
pop
popa
leave
and
or
adc
loope
adc
inc
and
xor
jno
imul
imul
mov
mov
sti
push
aas
and
mov
mov
xchg
and
xchg
retf
aam
add
sub
push
popf
rcl
adc
jno
adc
loopne
mov
mov
or
cmps
pop
pop
jae
ret
pop
mov
push
adc
rcr
or
(bad)
jbe
ret
pop
mov
xor
test
cmp
ss
pop
cmc
inc
das
mov
mov
sbb
mov
(bad)
sbb
sbb
adc
add
inc
inc
mov
rol
aam
pop
stos
gs
push
add
push
or
and
add
(bad)
cmp
push
push
mov
and
xor
jl
push
and
enter
push
fstp
adc
pop
pop
push
mov
fsubr
into
hlt
add
aad
stc
popa
stos
pop
mov
or
inc
adc
lods
or
inc
add
inc
sbb
sar
add
adc
sub
push
or
out
movs
adc
popa
outs
in
lahf
jo
push
popa
push
scas
pusha
mov
pop
cmp
dec
std
mov
or
jb
ja
ret
xor
push
push
jbe
dec
push
js
adc
mov
in
adc
add
hlt
or
jae
push
imul
adc
dec
std
ror
mov
cmp
dec
in
bound
xchg
jge
pop
mov
shl
or
(bad)
cwde
push
ins
mov
or
(bad)
push
push
or
enter
or
data16
adc
or
sbb
pusha
add
add
jmp
popf
and
dec
adc
ds
and
mov
(bad)
retf
add
ret
lock
push
pop
push
or
inc
loope
push
jecxz
aam
test
jp
xchg
test
adc
sbb
ror
inc
mov
pop
mov
and
add
mov
fwait
adc
push
add
jno
jno
xchg
mov
sbb
rcl
add
dec
in
add
inc
stos
lods
mov
cmps
or
dec
add
or
add
mov
add
add
cdq
adc
sbb
or
mov
test
push
dec
add
jle
loop
ret
aad
or
inc
add
out
aaa
sbb
or
sbb
inc
sbb
adc
xchg
or
jecxz
add
adc
mov
xchg
jmp
push
sbb
adc
rcl
mov
cmp
pop
mov
mov
cli
push
dec
add
test
dec
inc
pushf
mov
sub
pop
cdq
imul
inc
inc
sbb
push
inc
or
sbb
shl
adc
pop
xor
test
loopne
lods
add
icebp
or
mov
xor
and
sub
dec
xor
mov
mov
out
push
mov
hlt
dec
lea
mov
or
and
or
and
fbld
ret
or
jb
pop
enter
jbe
or
or
ror
mov
jg
or
inc
mov
adc
mov
dec
or
clc
js
cli
mov
push
mov
cdq
push
idiv
pop
mov
cdq
(bad)
dec
loope
jle
rcl
test
add
jmp
push
ja
push
sar
and
or
loopne
scas
ret
cmp
mov
add
pop
cmp
cmp
pop
jmp
push
pop
shl
aaa
in
nop
jg
jmp
push
test
jmp
data16
pop
mov
je
pop
nop
outs
jmp
cmp
mov
or
jl
fs
shr
je
cs
jne
dec
cmp
push
add
mov
aam
adc
adc
enter
adc
inc
mov
fdivr
sub
nop
xchg
or
mov
imul
imul
xor
add
mov
xor
add
cdq
inc
pop
mov
or
test
inc
inc
cs
pop
and
sub
imul
imul
imul
pop
mov
cdq
pusha
aaa
inc
push
lods
inc
fmul
clc
jbe
mov
push
sub
les
push
xor
in
enter
jne
inc
lods
xor
sub
daa
sbb
sub
xor
mov
dec
pop
enter
sbb
inc
es
and
jae
les
sbb
or
ins
cmp
pushf
and
sub
push
or
push
adc
fcomi
or
add
add
and
rol
inc
sahf
add
and
les
adc
and
or
mov
and
call
iret
in
rcl
push
dec
and
push
mov
je
push
movs
sub
data16
or
and
jg
stc
sub
lea
push
add
pushf
adc
mov
add
bound
add
adc
dec
loopne
popf
jo
test
jbe
mov
or
add
pop
add
pusha
clc
stos
cmp
pop
fchs
add
push
iret
sub
xor
cld
test
add
add
add
jmp
jno
les
mov
(bad)
xor
lods
rol
mov
cli
push
das
and
ins
cmp
adc
lods
(bad)
dec
xor
add
or
xchg
xchg
add
and
add
push
into
inc
sub
add
or
pop
mov
imul
or
shl
movs
cmps
sahf
add
push
in
adc
aam
int
bound
add
in
add
cwde
or
imul
or
ret
push
pushf
add
or
dec
adc
or
mov
(bad)
enter
inc
and
and
add
je
or
jnp
dec
inc
pop
add
popf
daa
not
add
jge
inc
inc
add
inc
lea
or
mov
cmp
and
popa
daa
and
pop
jne
shl
movs
les
test
inc
or
dec
aam
pop
pop
cmps
push
or
js
jg
shl
pop
sbb
mov
gs
cmp
call
adc
cli
fist
fcmovne
adc
xlat
or
(bad)
push
push
mov
mov
mov
dec
ror
sti
ins
je
mov
ja
cmp
jbe
add
add
fcom
pop
mul
cmps
mov
xchg
test
xchg
mov
mov
add
xor
and
and
sbb
pop
lods
and
push
lods
add
adc
xor
pop
cdq
xor
add
push
ins
(bad)
neg
fmul
cmp
jne
or
retf
dec
popf
xor
and
push
jecxz
(bad)
jmp
or
div
in
xchg
sub
jne
and
jnp
or
mov
adc
mov
test
jg
or
ins
enter
leave
add
dec
add
mov
mov
iret
adc
(bad)
call
or
dec
add
jp
icebp
retf
lods
add
push
jmp
mov
out
ret
stos
das
pop
sub
jns
arpl
mov
nop
cmc
pusha
(bad)
inc
add
pusha
inc
add
or
retf
arpl
inc
loop
add
and
mov
aam
or
sub
inc
test
xor
outs
lock
xchg
jp
retf
xor
or
dec
popf
cmp
pop
fs
pop
in
add
inc
rol
push
sar
shl
std
inc
add
sbb
adc
cs
out
mov
xchg
pop
jo
inc
(bad)
pushf
or
and
js
add
and
imul
xor
and
pushaw
shl
add
jge
xor
ds
or
pop
ret
mov
mov
inc
mov
loop
sub
mov
or
cmp
or
nop
mov
adc
cmc
jbe
cmp
add
leave
cmc
ror
ret
ror
push
add
mov
cmp
pop
push
mov
push
icebp
in
or
xor
inc
adc
dec
dec
xchg
dec
mov
or
push
or
xor
jns
arpl
test
xor
test
call
sbb
js
dec
adc
add
clc
mov
mov
rol
dec
inc
mov
sbb
lock
mov
sub
push
popf
into
and
retf
sub
add
in
pop
dec
xchg
aaa
xor
push
fcom
adc
push
test
push
push
add
test
add
inc
bound
or
add
aaa
or
add
or
test
add
xlat
push
loope
lds
add
jo
or
sbb
ret
and
scas
push
sbb
test
pop
popf
iret
ss
jecxz
scas
cwde
dec
inc
inc
add
or
imul
into
adc
add
mov
jmp
scas
jno
jl
outs
push
and
lock
fadd
add
push
sub
pop
mov
cmc
test
adc
dec
and
pop
push
and
imul
dec
add
cdq
inc
add
and
sub
or
add
ins
push
and
mov
in
jnp
dec
mul
add
stos
jne
mov
nop
js
add
adc
push
pop
call
int
mov
mov
sub
out
xchg
sub
inc
fdivr
(bad)
fwait
or
test
sub
daa
pusha
or
adc
push
outs
enter
sbb
xor
fdiv
clc
shr
adc
cmp
test
mov
jne
ja
sub
mov
inc
or
cmp
arpl
outs
xor
dec
inc
add
push
ret
or
mov
cmp
push
jmp
scas
inc
add
inc
jge
push
cmp
mov
fsubr
sbb
lock
push
int3
jp
xchg
es
pop
shr
jle
mov
adc
(bad)
int
sub
adc
push
lea
and
push
or
jle
jle
or
je
in
add
test
(bad)
add
and
or
mov
or
add
pop
xchg
idiv
sbb
add
ror
pusha
xchg
mov
inc
sbb
icebp
dec
xchg
ins
add
pop
mov
add
add
cmps
sbb
xchg
fwait
in
adc
xchg
mov
cwde
adc
rol
jl
jnp
call
dec
je
adc
in
or
jne
inc
jno
adc
add
je
jns
and
add
sahf
les
xchg
cld
inc
fld
or
push
nop
mov
or
aad
xchg
popf
jnp
loope
adc
daa
rol
jo
sbb
and
ins
sub
inc
sbb
adc
mov
and
adc
mov
sub
mov
aad
inc
imul
out
sub
or
mov
xchg
pop
data16
mov
test
mov
sub
push
pop
popa
loop
js
jle
sub
fld
(bad)
dec
test
xchg
sbb
jne
pop
mov
mov
(bad)
cmp
jmp
adc
jne
fild
sub
sub
ret
sub
in
push
and
jmp
push
imul
adc
je
dec
push
fs
adc
or
das
add
or
sub
jmp
movzx
push
imul
imul
add
add
push
dec
sub
xchg
mov
shl
xor
std
push
(bad)
mov
or
stos
add
enter
push
xlat
or
sbb
add
push
mov
fld
test
mov
jbe
js
jae
xor
es
pop
je
rcl
inc
add
dec
xchg
rcl
push
sti
and
inc
adc
xchg
js
adc
add
or
sub
pop
add
push
adc
and
int
mov
or
add
push
repnz
aad
mov
add
push
sbb
loop
fnstenv
sbb
inc
mov
out
aad
or
mov
mov
and
icebp
sbb
in
add
hlt
sub
cmp
jae
push
and
mov
fnsave
cwde
jp
mov
adc
or
sub
pop
add
jns
movs
shl
and
in
sbb
or
in
and
jno
sub
sub
push
xor
or
jnp
out
push
mov
dec
(bad)
not
mov
sbb
fld
bound
pop
fldenv
pop
push
push
outs
ins
add
pop
pusha
pusha
add
or
mov
mov
xor
ror
dec
mov
popa
or
inc
or
rcl
sbb
xlat
jge
inc
cwde
xor
pop
or
xchg
adc
add
xchg
and
es
mov
mov
push
fcomp
xor
xor
pop
sub
jmp
(bad)
lock
push
sbb
xor
cmp
mov
inc
and
adc
add
or
sub
mov
and
add
add
retf
mov
mov
xchg
js
or
and
xor
mov
out
sbb
pusha
rol
add
add
inc
leave
mov
adc
mov
mov
or
dec
push
nop
pop
jecxz
pop
dec
push
cmps
push
add
dec
pop
rol
jecxz
push
mov
sbb
cmc
loop
outs
dec
pop
push
jo
mov
push
pop
cmp
push
sbb
or
push
call
dec
or
mov
mov
stc
test
mov
sbb
rol
pop
adc
sub
add
pusha
push
ret
dec
adc
add
push
adc
jmp
loopne
and
popa
loop
pop
outs
pop
call
adc
pop
or
or
jg
test
cmp
add
movs
push
or
mov
sub
push
shl
adc
inc
mov
or
jae
mov
add
inc
ins
cmp
or
add
mov
adc
rcl
and
cmp
cmps
test
sbb
jmp
push
push
add
or
call
xor
push
push
sbb
shl
or
sub
adc
pop
inc
pop
es
data16
push
pop
dec
pop
fsubr
xor
and
daa
xor
enter
and
adc
push
ss
mov
xchg
loopne
scas
and
push
or
add
or
inc
sub
js
push
cld
rcr
stos
test
pop
mov
inc
shl
call
push
and
sbb
adc
jge
push
mov
mov
mov
mov
test
ds
test
jb
add
fdiv
and
fisttp
add
push
dec
pop
push
fsub
syscall
neg
push
dec
(bad)
fwait
sub
mov
xchg
adc
jne
sbb
test
inc
add
jg
or
push
pop
add
sbb
dec
test
pop
mov
jecxz
lock
pop
add
cmp
mov
sub
lahf
mov
push
cmc
cmp
outs
clc
xchg
scas
pop
add
inc
and
adc
or
mov
add
cmp
or
in
js
push
adc
ret
add
test
loopne
popa
(bad)
or
add
inc
push
std
movaps
push
xor
and
sbb
or
mov
sub
pop
and
sub
and
shl
and
pop
push
rcl
pop
sbb
jle
dec
mov
push
fcomp
jg
aam
dec
fadd
push
adc
and
adc
jo
xor
or
fcomp
nop
sub
push
cmp
push
mul
in
aaa
mov
xor
enter
sub
or
adc
or
push
or
in
push
sbb
or
sbb
dec
loopne
adc
mov
das
cwde
rcr
dec
adc
rol
mov
inc
je
dec
or
sub
sbb
jbe
jne
xchg
test
aad
pop
mov
and
jmp
adc
fadd
pop
mov
in
add
sub
test
sbb
(bad)
fsub
test
stc
paddusb
xor
(bad)
adc
adc
fcom
out
repz
ins
xor
cmp
retf
or
add
sbb
push
add
cwde
dec
add
cs
sbb
adc
mov
dec
rol
or
sti
sti
lods
or
pop
push
sub
lods
and
fmul
test
jl
(bad)
mov
in
mov
arpl
add
sub
or
dec
loope
mov
push
inc
adc
mov
test
leave
std
ror
test
ret
cmp
sbb
out
jle
je
push
mov
aas
pop
inc
sbb
js
push
retf
sti
cmp
jne
or
out
cwde
xor
mov
pop
inc
adc
adc
push
pop
push
rcr
mov
sub
mov
and
push
push
in
dec
or
push
and
push
fs
fmul
bound
fiadd
or
dec
pop
adc
xchg
or
inc
sub
popf
int
rol
data16
mov
xor
mov
push
add
dec
add
(bad)
or
stc
push
push
adc
dec
hlt
(bad)
test
pop
pop
push
or
cmp
ss
inc
jne
stos
sbb
stc
or
pop
push
mov
popf
adc
lea
sbb
inc
add
inc
and
int3
int3
jno
or
and
adc
lea
pop
sbb
ret
jo
push
das
pop
mov
outs
idiv
push
add
xor
sub
jns
sub
xchg
dec
sub
test
test
pop
or
shl
imul
inc
aaa
lods
xchg
neg
add
sbb
fs
pop
dec
jmp
lock
mov
scas
dec
xor
mov
jge
add
add
pusha
adc
pop
test
add
pusha
ja
mov
push
jno
inc
lea
call
sbb
cmp
mov
push
aaa
(bad)
das
add
test
setne
cmp
xchg
(bad)
pop
cmps
push
mov
into
into
pop
je
rcr
mov
push
cmps
pop
adc
mov
int3
xchg
test
je
or
cmp
inc
adc
pop
scas
je
inc
icebp
xor
pop
adc
leave
mov
rol
push
cmp
jno
jp
jnp
xor
add
mov
and
or
pushf
loopne
pop
popa
or
shr
inc
pop
idiv
mov
in
sub
push
(bad)
mov
(bad)
sub
sub
push
jmp
ins
cmp
push
stos
aas
and
clc
push
inc
les
jb
cmp
mov
call
xor
pop
adc
add
loope
not
adc
jae
sub
rcr
hlt
popa
push
aas
add
and
add
sub
leave
add
mov
rcr
adc
mov
jne
mov
cmp
ss
mov
or
stos
ss
push
and
outs
movs
inc
(bad)
inc
add
ds
fdivr
inc
add
jle
inc
(bad)
sub
cmp
push
push
push
push
(bad)
fimul
or
fstp
sub
or
in
add
add
fldcw
pextrw
jae
xchg
pop
in
mov
imul
pushf
mov
jmp
ret
sub
push
ja
dec
or
jne
and
jne
outs
xor
push
push
cmp
add
ror
xor
dec
push
pop
add
push
mov
or
jo
mov
jge
push
push
xor
fs
jle
(bad)
pop
(bad)
cmps
jle
or
sahf
mov
cwde
adc
leave
add
add
push
xchg
test
mov
sub
push
and
push
or
or
sbb
jl
mov
mov
loopne
mov
sbb
cmp
push
out
movs
pop
jne
xor
jne
sbb
je
cmp
je
cmp
inc
cmp
je
cmp
je
cmp
xor
or
cmp
je
test
movs
mov
sub
sub
sub
jb
cmp
and
jnp
cmp
add
and
sbb
je
inc
and
rcr
mov
jne
cbw
mov
pop
loop
xor
add
sbb
jp
push
xor
je
cwde
movs
mov
pusha
add
mov
dec
xchg
xor
retf
and
mov
jl
call
ret
test
xchg
lds
bound
or
and
xor
fmulp
xor
mov
and
xor
jo
daa
jge
xchg
mov
sbb
je
pop
add
ror
jmp
adc
(bad)
out
cmp
cmp
fxtract
into
(bad)
retf
push
mov
xchg
add
inc
jb
stos
xchg
fld
pop
and
or
and
iret
xor
ret
cmc
xchg
adc
adc
enter
and
add
and
mov
pop
scas
pop
xchg
and
adc
icebp
cdq
push
dec
and
push
adc
add
jo
or
(bad)
adc
or
inc
mov
and
adc
mov
iret
xchg
daa
dec
push
add
or
adc
mov
movs
push
lods
ins
dec
lods
cmp
test
mov
movs
xchg
mov
in
adc
fwait
(bad)
sub
cmp
jmp
mulps
mov
mov
dec
inc
js
dec
mov
movs
sub
imul
pop
pushf
scas
pop
fsub
fs
cmp
test
aad
mov
imul
pop
or
inc
fwait
mov
adc
push
push
add
push
push
test
retf
mov
mov
sub
push
inc
in
icebp
in
fsub
std
data16
inc
push
push
jmp
call
xchg
repz
std
std
dec
dec
movs
jbe
not
shr
jmp
jecxz
jb
ficom
(bad)
jmp
(bad)
out
adc
add
in
sbb
jmp
and
cmps
hlt
dec
mov
int
test
push
sbb
pop
test
test
jns
sub
pushf
test
test
ret
mov
inc
adc
push
or
push
inc
adc
sbb
or
dec
cmp
push
adc
and
xor
lods
mov
adc
ins
push
push
sbb
mov
push
movs
dec
fadd
add
retf
out
data16
jbe
fcomp
adc
jp
sbb
jmp
mov
inc
mov
xor
push
and
cmp
push
inc
mov
je
loopne
xchg
inc
add
adc
add
shr
je
das
rol
mov
xor
add
and
push
add
imul
dec
inc
xchg
adc
pop
mov
xchg
(bad)
jmp
inc
add
xchg
mov
pushf
pushf
push
sbb
and
dec
pop
adc
xchg
outs
and
push
mov
ret
dec
out
lea
or
xchg
or
mov
loopne
movs
out
and
leave
ret
sbb
lods
cwde
or
sti
add
inc
jno
jns
ins
pop
xchg
mov
jne
fs
inc
aad
ins
jae
bound
xor
lds
xchg
stos
mov
in
xchg
lea
inc
enter
push
mov
xchg
mov
xchg
shl
mov
mov
movs
or
cmps
nop
inc
or
test
nop
retf
or
call
add
aaa
stos
sub
push
push
jmp
push
add
test
jne
push
mov
mov
ret
sbb
xor
dec
and
rcl
adc
or
push
daa
lods
fcmovnu
jne
jo
retf
loope
add
sbb
sub
pop
clc
add
outs
or
pop
inc
dec
fld
sbb
mov
shr
pop
test
push
(bad)
inc
aas
aam
sar
lea
push
ret
pop
xor
dec
add
pop
pop
jmp
sub
out
(bad)
and
(bad)
or
or
push
and
or
sub
and
icebp
jmp
mov
mov
add
pop
xchg
fs
push
test
inc
inc
test
mov
test
or
xor
pop
in
xchg
test
xor
lods
adc
sbb
inc
mov
and
pop
pop
(bad)
adc
fisub
xchg
retf
sbb
aam
add
mov
fisubr
inc
add
xor
loope
adc
inc
pusha
popf
jno
sbb
add
in
xor
xor
out
mov
sub
lock
iret
adc
movs
push
sbb
leave
cmc
mov
add
fst
cmp
jl
fadd
test
jge
and
js
(bad)
pop
pop
aam
xchg
fimul
add
addr16
pop
add
rcl
retf
mov
mov
fnstenv
mov
inc
les
xor
rcr
std
adc
test
inc
nop
mov
leave
pop
loop
call
adc
and
pushf
push
popf
or
pop
add
fisubr
inc
adc
fnstcw
mov
cmp
mov
fcomp
pop
cwde
adc
aaa
add
mov
and
rcl
fnstenv
sti
mov
and
in
xchg
cmps
cmp
mov
adc
out
jnp
fsub
outs
push
int3
inc
cmps
sub
pop
cwde
xchg
fcom
sbb
cld
dec
cmps
add
or
test
mov
xor
push
add
adc
shl
rol
or
and
adc
in
movs
or
add
push
push
mov
in
das
mov
pop
xor
cmp
test
mov
pop
lock
cmps
aas
pusha
lods
add
push
xor
push
xchg
and
je
jp
mov
int
dec
mov
add
ins
add
inc
shl
xchg
pop
lods
lods
add
or
(bad)
jg
add
inc
cbw
adc
pop
cmp
jne
ficom
jo
call
addr16
jne
das
mov
mov
mov
sar
inc
mov
and
and
jg
add
cmp
icebp
add
pop
sti
push
pop
cmp
jae
mov
adc
sbb
(bad)
lea
and
(bad)
aam
inc
dec
(bad)
hlt
cmps
ret
mov
lock
pop
ins
jg
add
or
arpl
mov
jecxz
adc
and
pusha
jne
inc
pop
adc
add
pop
inc
shr
or
cmps
aaa
(bad)
and
movs
push
imul
push
cmp
je
mov
iret
mov
sub
xchg
or
mov
push
sub
mov
push
sub
pop
add
cmps
aaa
test
add
pushw
adc
add
adc
adc
add
(bad)
sub
or
sbb
bound
or
ret
cmp
out
fwait
pop
shr
sbb
(bad)
fxch
xchg
sbb
pusha
pusha
xor
add
fnstcw
leave
xchg
pop
pusha
pusha
jg
mov
pusha
cmp
add
scas
sub
sub
add
fst
sbb
scas
and
sub
mov
or
push
loope
xchg
and
sbb
in
frstor
loopne
push
inc
adc
popa
pop
add
adc
fs
hlt
outs
ins
ss
or
jmp
pop
enter
inc
enter
loope
mov
pop
push
jmp
lahf
in
or
bound
sub
sbb
dec
xor
out
ror
imul
rol
(bad)
and
(bad)
and
mov
movs
mov
data16
lods
mov
int
(bad)
cmps
inc
jo
xor
dec
loope
mov
add
dec
ficom
xor
mov
jge
mov
inc
sub
mov
inc
inc
cmp
(bad)
cmp
ret
test
xor
push
int3
enter
jo
and
test
fild
xchg
push
adc
dec
xchg
and
cmp
dec
mov
fsubr
lock
pop
xor
addr16
int
ins
xchg
push
call
dec
pop
imul
cmp
fs
push
cmp
or
cdq
adc
inc
das
mov
and
pop
push
(bad)
cmp
dec
test
mov
adc
(bad)
xlat
xor
add
popa
xor
add
dec
adc
sbb
mov
xor
test
mov
mov
pop
add
pop
jne
mov
pop
mov
outs
and
into
add
jo
movs
test
cli
sti
or
test
je
(bad)
and
jmp
sar
or
adc
xor
sbb
inc
fwait
sbb
xor
add
imul
xor
sub
xor
add
dec
or
(bad)
mov
pop
jo
jno
adc
add
mov
test
ret
fadd
pop
add
dec
imul
lea
mov
adc
test
sbb
add
jmp
add
mov
dec
mov
dec
xor
push
xchg
push
and
lods
push
sbb
(bad)
fisttp
push
jo
cmps
mov
or
fiadd
wbinvd
sbb
push
xor
(bad)
mov
popa
push
pop
push
inc
or
pop
fsubr
dec
in
inc
dec
mov
mov
mov
pop
aaa
jnp
jne
rol
and
jecxz
inc
loopne
cmp
sar
pop
fisttp
rcl
rcpps
dec
and
dec
push
jns
or
adc
sbb
(bad)
xor
mov
and
loop
inc
pop
xchg
adc
mov
xchg
mov
push
outs
mov
inc
xchg
sub
mov
dec
pop
pop
aas
xchg
inc
inc
cdq
jns
dec
inc
jmp
and
es
cdq
movs
outs
pop
mov
xor
test
dec
and
rcl
or
inc
mov
imul
int3
jecxz
and
cld
data16
jge
out
sbb
sbb
add
and
loope
jns
inc
xchg
nop
inc
mov
mov
jmp
add
fdiv
movs
add
test
adc
pop
sbb
cmp
inc
add
push
push
sub
call
jmp
cmp
adc
(bad)
add
xchg
or
cmp
in
and
loope
xchg
push
sub
push
cs
les
inc
and
xor
test
mov
jmp
add
jmp
test
test
adc
(bad)
rol
xchg
add
mov
push
or
test
sub
ds
push
cmp
je
(bad)
jp
movs
add
add
sbb
add
loop
mov
shr
cmp
pop
xor
inc
or
add
mov
dec
rcl
lock
sbb
jno
adc
pop
stos
pop
xchg
enter
bound
xor
jo
rcl
imul
mov
adc
push
jg
adc
adc
mov
mov
repz
jae
add
adc
les
std
(bad)
jmp
jne
mov
jno
adc
xor
les
cmp
out
xchg
lds
repz
sbb
daa
xchg
add
add
push
ret
adc
and
aad
je
mov
nop
and
adc
fild
outs
push
mov
jne
adc
inc
mov
and
push
cmp
jne
(bad)
adc
inc
dec
inc
fidivr
mov
pusha
push
dec
sar
and
sbb
sbb
adc
pusha
mov
inc
mov
and
inc
aaa
inc
arpl
mov
rcr
out
jmp
enter
int3
or
push
push
cli
cwde
cmps
data16
in
add
xchg
int
ja
pop
ret
cmps
pop
mul
sub
cmc
fsub
push
push
inc
lds
aad
cmps
add
add
sbb
out
sbb
add
add
les
mov
push
add
jle
ds
or
cmp
lods
mov
fdivr
in
fs
rol
loopne
inc
in
sbb
mov
add
neg
add
xchg
add
mov
mov
xchg
(bad)
adc
mov
stos
enter
lahf
add
inc
fld
jne
inc
jmp
icebp
push
dec
inc
cmps
mov
mov
jne
xlat
jmp
pop
out
push
xor
jle
mov
fucomip
es
pop
in
or
push
pop
push
cmp
xor
bound
jbe
cmp
mov
push
rol
addr16
dec
xchg
add
and
pop
stos
mov
in
xchg
xlat
mov
sub
in
sbb
dec
dec
inc
(bad)
leave
pop
adc
gs
add
push
(bad)
enter
pop
sbb
push
sub
add
fist
push
push
push
dec
dec
call
fcomp
imul
xchg
in
(bad)
mov
je
pop
pusha
sbb
cmp
lock
imul
mov
add
shr
je
lods
inc
sub
add
xadd
cmp
test
adc
xchg
dec
fs
sbb
cmp
sbb
jmp
mov
and
adc
jmp
aaa
mov
popf
rcl
jne
mov
pop
push
sub
xchg
push
mov
sub
repz
xor
(bad)
aam
dec
ins
and
add
xor
mov
xchg
call
cwde
arpl
mov
add
int
inc
lock
fstp
dec
lods
push
add
in
leave
js
lds
adc
and
add
pop
cmc
push
xor
adc
nop
pop
in
pop
adc
enter
popa
adc
add
push
push
clc
and
mov
mov
sub
mov
xchg
xor
sbb
in
pusha
pusha
and
bswap
pop
mov
mov
clc
inc
test
jl
sbb
sti
loop
add
scas
add
add
and
push
inc
add
and
inc
loopne
(bad)
and
cli
cdq
arpl
cld
stos
mov
lea
and
sub
test
pop
arpl
inc
inc
or
adc
pop
(bad)
in
ficom
push
dec
push
jmp
sbb
shl
mov
les
inc
lds
test
mov
mov
jge
shld
lock
dec
rol
(bad)
punpcklwd
aaa
push
mov
or
push
and
loopne
and
mov
punpckhbw
sub
aas
jmp
imul
test
jbe
mov
xor
pushf
or
jmp
or
jl
mov
pusha
mov
je
push
loope
dec
sbb
adc
mov
jae
add
inc
cs
cmp
rcl
jae
sbb
add
jl
imul
lods
cmp
inc
loop
inc
je
shl
sbb
arpl
sbb
add
add
inc
outs
das
stc
add
jecxz
shr
sbb
push
mov
push
xchg
lods
call
ret
aaa
mov
xor
lods
xchg
dec
or
push
daa
xchg
test
invd
and
scas
setle
add
lods
ffreep
add
ror
imul
cvttps2pi
push
dec
xchg
ins
add
jge
jle
push
out
stc
out
movs
lds
cs
dec
add
in
and
xor
daa
sub
in
scas
cmp
int3
and
sub
mov
enter
in
and
inc
cmp
int3
xor
mov
and
cld
mov
outs
movs
and
push
sub
retf
sbb
sub
pusha
adc
adc
xchg
enter
or
and
or
loope
cmc
jae
sub
(bad)
imul
addr16
(bad)
nop
jb
mov
pop
scas
daa
mov
sbb
push
popf
bound
cmp
fwait
inc
call
shr
xlat
jo
add
arpl
add
adc
and
sbb
push
sub
sbb
out
lock
adc
(bad)
adc
add
xor
adc
pop
xchg
fwait
rol
cmp
addr16
stc
push
add
mov
pop
or
or
ret
or
(bad)
lds
xchg
test
xor
pop
xchg
into
adc
sbb
dec
loop
(bad)
adc
cmp
dec
test
leave
jp
out
sbb
inc
pop
inc
xor
push
inc
mov
adc
mov
push
push
inc
inc
push
push
and
sbb
bound
push
and
(bad)
mov
pop
mov
mov
cwde
shl
les
pop
pop
mov
inc
cmp
or
xor
aam
fsub
in
add
cmps
inc
mov
lods
push
xor
xchg
or
rcl
or
push
fs
push
mov
or
push
dec
push
call
or
in
add
mov
or
or
sbb
xor
xchg
and
add
add
sbb
data16
fcomp
adc
mov
inc
push
pop
or
adc
jmp
adc
in
out
jmp
sbb
and
adc
mov
push
loope
stos
repz
mov
jmp
sbb
push
push
aaa
cmp
lods
cmps
jo
stos
mov
add
mov
sbb
rol
or
dec
jl
inc
sbb
sahf
fwait
pushf
movs
mov
and
popa
push
sub
jmp
call
movs
les
mov
(bad)
mov
shl
gs
jnp
fdiv
cmp
adc
jbe
mov
pop
mov
pop
shl
mov
mov
sub
mov
add
sbb
dec
test
add
inc
test
mov
mov
fdivr
pop
pop
sbb
push
test
mov
fidivr
test
xor
hlt
inc
cld
fnsave
xchg
add
pop
pop
sahf
das
pop
sub
frstor
mov
lock
xchg
mov
stos
stos
push
or
sbb
sbb
mov
adc
adc
and
ret
loopne
and
xor
fcom
mov
jmp
mov
or
push
fmul
(bad)
int
sbb
xor
pusha
ds
test
jne
cs
push
cld
es
nop
(bad)
push
enter
rcr
jg
or
imul
cmp
pushw
inc
pop
lea
dec
cmp
bnd
sub
ret
fs
ins
call
lea
std
mov
fcom
cmp
(bad)
xchg
inc
scas
sub
arpl
dec
push
mov
out
int3
loope
and
or
mov
add
addr16
push
pop
cs
sub
aas
loopne
mov
loope
dec
std
aas
mov
faddp
add
mov
ss
mov
icebp
out
push
add
push
push
scas
out
adc
or
add
sub
jno
and
inc
(bad)
addr16
xchg
(bad)
mov
or
dec
xor
xchg
inc
mov
or
sub
int3
push
mov
xchg
adc
pop
loop
push
out
out
fmul
rcl
adc
clc
and
sbb
fcom
sti
shr
aaa
mov
mov
and
jbe
(bad)
push
js
repnz
jno
cmps
daa
jmp
daa
pusha
add
push
cli
pop
fcom
mov
add
cmp
test
or
(bad)
inc
(bad)
mov
dec
iret
dec
or
ret
mov
dec
and
or
aas
scas
(bad)
je
in
dec
jmp
push
mov
out
mov
lock
imul
dec
fnsave
mov
or
jecxz
xchg
retf
jle
sub
lahf
(bad)
xchg
cmp
mov
pop
xor
lods
mov
adc
mov
add
sub
or
mov
pop
ins
dec
add
adc
mov
xor
and
lock
cmp
ss
xchg
or
mov
pop
rol
sbb
jecxz
shl
or
sub
add
cmp
mov
test
loop
test
xor
adc
outs
stos
or
push
inc
imul
add
add
mov
or
into
lahf
ss
push
aaa
mov
mov
lahf
cmp
xor
push
jae
xchg
test
add
in
jo
xor
call
ins
mov
pop
adc
icebp
sub
nop
jo
add
add
cwde
sub
bound
es
xor
cs
cld
bound
dec
pushf
add
out
dec
sub
mov
ins
loopne
lock
push
add
ret
movzx
xchg
or
arpl
(bad)
mov
sub
je
add
ds
sbb
pop
gs
ins
and
cmp
ret
pop
push
pop
pop
add
adc
adc
pop
pop
jb
adc
fmul
adc
mov
mov
loope
or
cmp
mov
sub
sub
or
loop
je
les
mov
sub
je
loopne
and
pop
test
out
add
dec
pop
ror
pcmpgtb
push
lea
or
sbb
pop
(bad)
and
add
dec
push
mov
jne
sub
stos
xor
scas
shl
dec
inc
fwait
and
lahf
mov
mov
fstp
inc
xor
xchg
add
(bad)
push
int3
fwait
or
mov
mul
xchg
je
xchg
push
cmps
pop
or
mov
mov
or
dec
xchg
js
cmp
push
enter
mov
push
test
push
cmps
push
jns
jp
add
push
cmp
dec
cmp
popf
or
xor
inc
push
jbe
jne
xchg
pop
or
hlt
ins
out
lea
jae
add
jmp
(bad)
and
xlat
inc
or
push
mov
mov
or
push
push
add
inc
sub
mov
sub
dec
lods
jne
sub
pop
push
stos
iret
test
aas
enter
cmp
in
cli
jne
jecxz
xchg
div
push
cmp
xor
add
xchg
icebp
pop
sbb
dec
je
xchg
cmp
jbe
fiadd
(bad)
shl
xor
jno
or
fnstcw
push
out
mov
mov
cmp
ja
add
lock
inc
mov
ret
mov
mov
popa
sub
jnp
pop
ret
add
xor
out
push
pmaxsw
cmp
inc
dec
jmp
div
mov
dec
adc
shr
add
clc
data16
sbb
mov
add
test
mov
cmp
adc
mov
test
je
outs
movs
and
jnp
mov
mov
pop
push
adc
fild
sbb
push
mov
or
mov
mov
stc
or
or
jmp
jle
ins
push
(bad)
rol
clc
push
jns
xor
dec
add
inc
and
ds
xor
cmp
ins
mov
mov
call
add
lods
inc
sar
and
add
cli
retf
sete
(bad)
adc
add
or
js
cmp
xchg
mov
sub
dec
ret
or
and
aaa
icebp
cmp
fstp
and
adc
and
adc
mov
lods
rcl
loop
or
adc
xor
rcr
or
dec
adc
in
push
sub
lock
lea
mov
in
lock
push
cmp
je
mov
and
push
cs
push
push
push
repz
rcl
add
add
jl
push
jecxz
sub
hlt
or
call
mov
add
in
jl
cmps
rol
jl
xor
dec
add
push
dec
dec
mov
adc
mov
es
sar
jmp
mul
and
or
cmps
loopne
call
dec
mov
jmp
(bad)
aad
shl
sub
shl
jo
push
lea
pop
es
mov
rep
mov
movs
push
jne
ss
or
adc
xchg
test
mov
mov
call
cmp
push
mov
xor
shr
mov
mov
je
sub
rcr
pop
sub
dec
cmp
nop
sar
out
sahf
(bad)
dec
stc
push
cmp
fmulp
xchg
int
cli
sar
cli
mov
sahf
test
aas
sub
inc
pop
push
loope
(bad)
xor
jnp
xchg
or
int3
mov
add
bound
push
or
mov
sbb
jge
lods
inc
in
jle
test
jle
retf
push
outs
and
jle
add
cmp
mov
sbb
mov
sbb
jb
mov
loopne
mov
lock
lods
jne
rol
cs
test
cmp
ja
dec
popa
out
push
int3
mov
ret
adc
rol
aam
fcomp
push
lods
sbb
adc
sub
xor
sub
mov
add
in
in
inc
imul
out
cdq
out
mov
int
inc
jne
push
lea
adc
loopne
pop
adc
sahf
push
mov
inc
add
mov
add
rcr
and
or
push
mov
rcr
adc
mov
inc
fmul
cmp
jp
mov
mov
iret
inc
mov
jmp
loope
ins
cmps
test
adc
mov
pop
pop
or
push
mov
jg
cmp
dec
aam
sub
inc
mov
mov
jno
xchg
add
outs
xor
or
das
scas
enter
cmp
outs
cmp
or
aam
jge
add
mov
les
add
xchg
or
sbb
sbb
xchg
clc
mov
mov
je
push
rol
xchg
and
jno
xchg
add
xor
cmp
or
cs
pop
pop
add
xchg
xchg
xor
lea
test
dec
and
cmp
jbe
lea
test
cmp
loop
test
add
jns
in
leave
sbb
fcomp
or
sub
add
mov
push
cdq
or
and
faddp
in
and
inc
cmp
jb
mov
fs
xchg
cmp
(bad)
mov
mov
push
add
retf
fs
sbb
cs
sahf
and
jne
ins
pop
ds
dec
sub
xor
cmp
(bad)
mov
retf
or
test
movs
jno
mov
or
cmp
inc
or
sub
pop
inc
pop
sub
les
cmp
or
add
pop
rcl
ds
push
icebp
cmps
aas
jne
adc
fsub
adc
cmp
push
jo
daa
or
add
ja
jbe
cmp
add
cmps
mov
in
mov
cmp
enter
cs
add
and
mov
(bad)
mov
xchg
xchg
ins
inc
add
jge
inc
or
mov
and
sbb
cmp
inc
std
pop
repnz
stos
lea
pop
(bad)
mov
adc
push
mov
xor
and
and
and
push
clc
inc
cld
out
into
arpl
inc
sbb
pop
or
(bad)
fbld
add
push
aam
imul
pop
lock
or
mov
push
adc
lds
dec
sbb
mov
dec
sbb
(bad)
popa
pop
push
cmps
and
ret
fwait
sbb
sub
jne
pop
jmp
inc
push
pop
rcr
hlt
push
mov
jne
add
add
jns
sub
sbb
arpl
je
(bad)
and
adc
jmp
int3
pop
jne
and
inc
inc
pusha
adc
fstp
jmp
je
push
jmp
imul
sub
call
pop
jl
add
or
(bad)
jg
jle
cdq
xor
pop
pop
or
cmp
rol
sub
inc
xchg
xor
cmp
pusha
cmp
hlt
add
xchg
add
push
or
scas
hlt
or
add
or
dec
push
movs
jne
cs
test
push
sub
icebp
mov
sbb
mov
mov
or
ror
dec
mov
or
lods
and
cli
cld
push
pop
xor
nop
mov
or
or
pop
mov
addr16
cmp
les
into
in
jne
pop
rcr
xor
inc
push
adc
mov
pusha
or
jne
mov
(bad)
cmp
pop
and
pop
jne
push
mov
rol
or
cmps
adc
adc
repz
pop
aam
stc
fadd
mov
in
jno
mov
push
and
jl
popa
jmp
inc
rol
push
cmp
scas
mov
cmp
add
push
push
lods
ins
fisttp
cdq
push
xchg
lds
ret
sbb
sub
enter
push
xchg
outs
sar
inc
jne
mov
fdivr
fcmovnbe
mov
and
(bad)
mov
nop
mov
mov
ins
push
push
adc
fmul
and
shl
and
mov
push
and
sub
outs
das
call
or
je
jnp
xor
jne
and
push
adc
dec
retf
add
out
rcr
and
push
push
test
cmp
(bad)
fidiv
xchg
cwde
adc
pop
xor
(bad)
cli
and
jl
cmp
ror
jl
loopne
and
popa
pusha
add
jbe
sub
ja
aad
repnz
add
cmp
icebp
shl
aaa
adc
popa
push
out
or
inc
and
xchg
jle
mov
add
movs
fsubr
add
lea
js
enter
cmp
inc
adc
in
adc
dec
and
stos
push
mov
dec
in
mov
das
push
mov
or
daa
xor
(bad)
push
or
jle
add
dec
mov
nop
xchg
mov
sti
add
dec
mov
inc
lds
add
es
sahf
arpl
imul
jl
and
add
add
push
or
mov
adc
outs
mov
sub
mov
and
dec
cmc
pop
and
dec
ins
pop
ret
xor
pushf
pop
loope
inc
sub
aaa
daa
pop
push
fcmovbe
mov
js
xor
test
cmp
add
sbb
imul
imul
or
inc
push
inc
add
and
push
pop
and
popf
or
pop
call
mov
aam
push
add
ins
mov
std
call
sub
mov
xor
add
sub
shl
push
push
xor
daa
adc
es
lods
add
sbb
add
and
or
icebp
sub
adc
add
stc
popf
fbstp
cwde
dec
mov
loopne
pop
xor
mov
inc
inc
mov
pusha
lahf
push
pusha
lahf
or
adc
xor
call
xor
dec
xchg
cmp
sub
shr
adc
popa
or
test
ins
push
pop
clc
daa
adc
mov
adc
or
mov
jo
add
xchg
or
cmp
pop
mov
push
and
or
pop
aaa
push
xchg
movs
shl
and
mov
or
and
inc
dec
xchg
test
xchg
data16
xor
adc
dec
bound
and
test
fadd
sub
hlt
push
push
push
dec
adc
push
adc
inc
xchg
and
adc
gs
add
dec
mov
std
sub
push
xchg
cmp
jecxz
lea
stos
dec
or
add
sub
fwait
push
cmp
mov
popf
pop
inc
sub
push
ret
mov
jmp
imul
imul
sub
push
out
mov
sub
or
test
add
scas
jmp
and
mov
das
or
pop
test
xchg
and
add
xor
pop
mov
aad
mul
jmp
inc
mov
cdq
pop
mov
or
int
or
ins
inc
and
sub
jo
outs
add
add
and
add
or
lea
and
loope
pop
pop
sub
mul
xchg
xchg
rcl
add
test
cmp
ins
and
jge
imul
mov
inc
or
scas
not
mov
mov
cmp
pop
adc
ret
inc
mov
clc
repnz
adc
push
add
jbe
out
mov
inc
sbb
outs
lahf
add
dec
iret
int3
cmp
xchg
jmp
mov
or
mov
sbb
int
or
arpl
fild
dec
inc
fsub
jne
push
cmp
ficom
jno
je
mov
adc
mov
mov
pop
movs
cmp
push
loopne
jmp
push
jmp
add
adc
mov
mov
sti
xor
push
xor
add
stos
inc
loope
push
adc
nop
adc
add
cmp
and
adc
xor
sar
dec
xor
shl
jmp
inc
and
and
pop
adc
test
sub
scas
pop
fisub
inc
scas
cmc
mov
movs
dec
add
mov
mov
xor
and
or
cwde
fs
sbb
push
scas
mov
or
test
(bad)
and
das
mov
dec
inc
fldenv
xor
xor
data16
jne
sub
and
dec
adc
mov
aam
xor
stos
xchg
add
pop
mov
inc
push
mov
push
sbb
add
dec
sbb
or
push
les
or
jle
sbb
cmp
test
and
adc
and
sub
inc
les
mov
mov
data16
(bad)
jnp
pop
lods
shl
out
mov
dec
clc
mov
and
sub
aaa
push
inc
adc
out
xor
pop
icebp
iret
cmp
add
imul
lds
mov
mov
or
(bad)
lahf
cmp
push
xor
cmps
xchg
sub
inc
cmps
sbb
in
and
js
xlat
push
aam
pop
retf
div
lea
inc
aam
push
int3
imul
add
inc
push
fcomp
sar
sub
inc
scas
pop
add
rcl
add
into
sbb
add
in
shl
jo
stos
push
call
push
int3
sbb
test
fnstcw
sub
sahf
add
aaa
popf
lea
cmp
sbb
push
add
sar
fnstcw
xor
xor
sub
mov
inc
(bad)
pop
mov
dec
inc
mov
xor
jno
adc
loop
inc
inc
push
push
sbb
pop
fadd
xor
mov
lock
mov
es
xor
(bad)
adc
mov
loope
test
xlat
lea
sbb
sub
jns
std
lds
or
lock
mov
sub
add
mov
pop
jnp
push
mov
mov
mov
test
loop
or
jne
add
mov
aas
cmp
sbb
jne
or
inc
cwde
jge
push
push
aas
inc
es
pop
ins
add
xor
out
fisub
mov
jl
es
pop
add
popa
or
xchg
adc
add
movs
inc
or
or
push
in
jp
add
ror
pop
fwait
push
gs
inc
enter
(bad)
adc
outs
or
xchg
and
int3
mov
add
lahf
adc
dec
xor
sub
mov
mov
and
mov
and
inc
fild
ss
adc
pushf
or
scas
sbb
pop
push
sbb
sbb
je
pop
shl
sub
sub
ins
rcl
nop
int
inc
add
xor
lea
loopne
inc
or
and
retf
add
jbe
mov
push
sub
call
mov
jle
push
or
or
adc
dec
and
and
xor
cmps
into
shr
(bad)
hlt
mov
clc
movs
fstp
cmp
retf
int3
cmps
adc
pop
in
outs
pop
add
ror
and
push
movs
jecxz
movs
dec
(bad)
cwde
add
push
and
cmp
hlt
pop
and
xchg
ins
sbb
push
add
xor
push
xor
shl
mov
xor
pop
pushf
test
adc
cdq
add
xor
out
mov
ins
cmp
lock
int3
out
sub
mov
inc
or
lahf
add
xor
push
jnp
je
in
stos
pushf
ret
arpl
push
loopne
inc
cmps
pop
lods
jns
fmul
and
call
les
or
dec
or
and
adc
bound
or
inc
mov
lods
lods
mov
jae
(bad)
out
es
xor
adc
xchg
xor
movs
add
and
adc
cmps
adc
arpl
or
popf
and
inc
sar
pop
mul
cmc
and
pop
xchg
xor
mov
inc
cmp
in
jne
push
aam
nop
test
or
(bad)
rol
jbe
aam
mov
jmp
xchg
leave
clc
cmp
cwde
push
mov
mov
test
or
add
add
sbb
test
test
sbb
in
xor
les
and
jecxz
push
jmp
or
pop
jecxz
or
or
in
ret
or
loopne
xchg
push
pop
adc
ret
pop
mov
add
xchg
adc
fldcw
test
sbb
(bad)
rol
add
inc
cdq
out
pop
and
daa
and
popf
js
cmp
test
adc
mov
loope
ret
pushf
test
into
cmp
lods
inc
cmps
inc
or
sbb
dec
jmp
repz
mov
fsub
sbb
das
sbb
sbb
fcomp
mov
cdq
pop
stos
xor
push
inc
std
add
sbb
mov
mov
or
inc
jae
stos
mov
push
push
jns
cmp
stos
mov
jae
sub
and
add
inc
add
push
mov
sti
clc
mov
add
adc
ficom
mov
sub
mov
int3
shl
lods
int3
inc
dec
out
stos
inc
arpl
hlt
mov
and
scas
jne
call
loopne
stc
jb
sub
test
das
dec
xor
shl
js
aad
pop
icebp
call
push
ja
or
ss
xchg
mov
sub
mov
add
or
scas
sbb
shr
and
std
and
push
in
lds
jb
adc
or
and
add
xchg
mov
mov
inc
sub
outs
fnstsw
and
test
pusha
pusha
in
fs
adc
xor
ja
or
add
mov
xor
lea
shr
shl
xchg
sub
or
xchg
dec
pop
or
and
aad
fimul
add
cmp
je
dec
test
adc
add
ss
std
dec
push
lods
imul
jge
mov
push
jne
add
shl
sbb
movs
xlat
or
adc
xor
push
add
and
mov
xchg
push
mov
push
popa
jae
jns
dec
and
push
xor
adc
sub
sbb
aam
in
scas
mov
shl
scas
adc
xchg
sbb
scas
sbb
jmp
xchg
pusha
adc
lea
or
or
rol
xchg
xor
or
inc
pop
or
xor
sub
dec
xchg
add
scas
push
test
lds
inc
and
mov
add
fs
adc
pop
test
and
add
adc
adc
loopne
pop
add
and
push
push
xor
adc
or
les
sub
cmc
xor
out
imul
mov
push
xor
std
adc
or
push
sbb
fwait
xchg
push
pop
pop
add
nop
ss
mov
js
nop
inc
add
movs
lods
repz
loop
adc
shr
mov
inc
inc
pop
sbb
dec
lods
daa
sbb
cmc
ins
adc
or
adc
adc
fild
pop
ja
pop
xor
xor
lds
pop
outs
frstor
push
mov
push
mov
adc
and
enter
dec
cwde
jecxz
inc
dec
cs
dec
movs
jnp
mov
cmp
add
aam
aam
sbb
xchg
lds
xlat
and
push
aaa
dec
mov
xor
push
jne
mov
imul
shl
push
mov
and
js
xor
dec
mov
bound
mov
mov
dec
lods
mov
jo
xor
cmp
popf
dec
mov
mov
xor
sar
ror
or
xor
cmp
retf
sbb
mov
ror
xor
jge
add
js
push
data16
movs
push
dec
cmp
push
test
inc
or
pusha
jno
pop
lock
add
and
and
inc
les
sar
call
daa
add
sub
or
leave
inc
retf
and
cmp
movs
cmp
push
pusha
push
add
pop
test
cmp
adc
inc
and
xchg
push
xchg
lock
call
sub
push
mov
loopne
stc
mov
inc
jecxz
mov
push
pop
push
pop
out
les
mov
inc
or
xchg
sub
mov
add
push
xchg
cmp
sti
push
xor
mov
shr
adc
or
push
imul
or
jle
add
add
test
pop
sub
sub
xchg
out
sub
mov
ror
mov
sar
mov
sbb
aam
sub
ins
dec
or
jne
or
dec
mov
gs
or
mov
dec
and
ret
imul
in
inc
inc
pop
aam
in
mov
adc
xchg
mov
ss
pop
mov
xchg
ins
shl
or
pop
sar
xchg
imul
and
aas
mov
fsubr
aam
push
and
into
xor
xchg
cmp
adc
imul
pusha
adc
or
cmc
rcl
sub
cwde
out
push
cmp
(bad)
mov
pop
jo
pop
adc
mov
adc
or
adc
fbld
and
outs
pop
sub
dec
or
and
mov
push
pop
and
push
adc
add
sbb
or
adc
inc
mov
stc
and
shl
cmp
fisttp
mov
inc
xor
mov
test
xor
adc
ins
add
rcl
int
mov
cmp
dec
push
add
dec
or
jb
inc
ins
fmul
sar
inc
mov
adc
mov
(bad)
or
adc
mov
or
les
push
xchg
add
punpcklbw
inc
cmp
sub
aaa
sub
mov
int3
daa
test
cmps
sahf
add
mov
adc
adc
pop
(bad)
out
xchg
ret
shr
test
or
inc
shr
inc
ror
nop
mov
imul
mov
mov
and
adc
psllw
mov
shr
adc
push
pop
sbb
and
mov
fwait
push
xchg
inc
and
xor
fdiv
mov
es
mov
xor
cmp
sub
fdiv
cs
das
ins
push
or
jmp
push
add
pop
push
add
inc
push
and
hlt
add
mov
mov
mov
les
fsub
jmp
adc
jmp
aam
push
add
adc
sbb
sar
cmp
and
shr
push
pop
push
sbb
push
jne
retfw
adc
daa
and
add
pushf
inc
and
xchg
jne
adc
add
sbb
cdq
dec
out
mov
add
push
lock
pop
push
or
mov
loopne
sub
mov
cmp
xchg
fucomi
mov
(bad)
mov
hlt
(bad)
int
mov
mov
pop
adc
mov
add
pop
adc
cwde
mov
dec
xlat
je
adc
lea
aaa
adc
inc
inc
push
inc
cmc
dec
jns
inc
or
popf
xchg
cmp
or
inc
and
adc
inc
inc
(bad)
or
mov
dec
dec
push
xchg
adc
cmp
inc
in
mov
sub
das
xor
jp
mov
adc
mov
inc
pop
mov
adc
jl
adc
inc
cwde
in
push
or
mov
inc
into
shl
and
clc
cmp
cmps
push
push
jne
mov
lods
aam
and
mov
mov
mov
loope
cs
fst
pusha
test
outs
leave
pop
pop
jmp
sub
movs
jae
adc
mov
and
loop
push
mov
or
sub
pop
lock
or
jecxz
cmps
dec
pop
push
jns
inc
mov
and
gs
sub
sbb
ret
fdiv
adc
inc
dec
and
mov
repz
add
fcomp
add
pop
jmp
xor
or
cld
push
or
loop
xor
sbb
add
mov
adc
test
aam
in
or
mov
add
ror
jo
loope
jo
push
leave
add
pusha
lea
fiadd
push
adc
push
push
mov
std
das
push
inc
or
cdq
call
xor
adc
or
mov
jne
loop
imul
pop
frstor
adc
shl
sbb
shl
in
push
cld
mov
and
aaa
adc
retf
movs
pop
mov
adc
and
mov
pop
or
sbb
add
push
jno
xchg
sbb
sbb
sbb
shl
in
xchg
or
das
icebp
and
adc
sbb
mov
adc
test
push
inc
and
mov
js
push
jb
js
and
jg
mov
out
fwait
push
add
mov
mov
jmp
cmp
jmp
push
ror
jg
movs
push
lahf
add
dec
xchg
ins
fwait
inc
test
jmp
xor
add
add
add
fwait
sbb
sub
dec
adc
fsubr
imul
nop
dec
xor
test
test
xor
pop
or
jns
ja
push
cwde
and
and
push
mov
bound
cmp
bound
ins
fadd
dec
(bad)
cwde
(bad)
push
les
retf
add
cmps
mov
sar
aam
sub
ret
clc
loope
adc
test
or
and
inc
cs
(bad)
dec
cmp
(bad)
jns
add
adc
dec
xor
adc
mov
push
mov
dec
test
nop
ds
sbb
xor
cmp
mov
movups
aas
inc
inc
push
sbb
sub
and
sbb
ret
adc
mov
sbb
sbb
cmps
unpcklps
adc
call
xor
cld
cmp
push
mov
sbb
dec
(bad)
mov
js
test
add
inc
lahf
cs
add
mov
scas
adc
pop
cmp
jge
jmp
mov
sbb
push
mov
pop
push
in
enter
sub
or
lods
push
xchg
test
retf
repz
and
loope
leave
push
mov
inc
mov
popa
jns
lea
push
pop
clc
lds
dec
mov
push
push
pop
leave
and
(bad)
leave
xchg
mov
cmc
jl
ret
push
sbb
enter
push
enter
aas
mov
inc
cmp
cli
add
xchg
stos
mov
adc
cmp
push
ins
daa
dec
out
add
mov
lock
jl
pop
cmp
xor
pop
pushf
lds
mov
mov
lea
cs
push
(bad)
and
test
popa
inc
call
imul
push
inc
or
retf
xchg
nop
adc
loopne
enter
sbb
pop
add
push
jecxz
jge
xor
pop
pop
mov
and
mov
mov
ret
xor
loope
xchg
push
push
aaa
leave
sbb
xor
adc
aam
push
push
test
addr16
adc
xchg
xlat
adc
push
mov
shl
and
lsl
dec
and
sub
lods
stos
movs
xor
icebp
push
and
int3
mov
sub
adc
or
mov
mov
mov
add
pop
add
xor
push
and
dec
bound
and
push
sub
add
pop
dec
gs
aaa
sbb
inc
call
adc
iret
add
movs
add
and
sub
or
or
pop
sub
lea
or
push
push
cmp
adc
mov
or
xor
or
or
xor
iret
je
or
mov
jecxz
retf
cmp
adc
sub
mov
pop
std
cmp
adc
dec
lds
push
push
adc
sbb
sbb
fadd
inc
aam
push
xor
push
adc
je
int
test
inc
adc
dec
inc
mov
stos
pop
pop
jae
sub
mov
mov
mov
pop
adc
sub
push
test
outs
cmc
sbb
and
adc
inc
loopne
and
adc
cmp
imul
add
ror
add
adc
xor
push
ror
je
add
dec
push
jo
mov
and
push
fcomp
mov
mov
and
and
add
inc
push
popf
ficom
mov
mov
inc
ror
sar
add
and
shl
add
add
inc
push
cmp
or
sbb
ror
inc
sbb
das
sub
jbe
dec
mov
daa
xor
dec
and
ret
cmp
add
inc
add
pusha
push
das
sbb
pop
dec
ror
test
lods
fdivr
loope
push
ror
loope
xor
add
xor
hlt
loopne
push
xor
test
(bad)
push
mov
adc
repz
add
mov
test
adc
cmp
test
ds
lods
push
daa
test
mov
pop
fcomp
mov
inc
dec
add
enter
and
or
adc
adc
int
popa
test
adc
int3
cwde
in
mov
enter
mov
pop
inc
enter
xchg
add
xor
(bad)
adc
mov
cdq
pusha
les
cdq
push
sbb
or
es
inc
add
popf
fdivrp
push
aam
loope
inc
xor
adc
mov
pop
mov
test
pushf
add
test
add
aam
in
jno
clc
add
test
aas
jl
rol
cmc
xor
push
mov
cdq
(bad)
pop
xchg
mov
pop
inc
push
adc
xor
call
loop
rcr
dec
cld
adc
or
push
adc
dec
adc
popa
movs
push
ret
cmp
ret
je
push
sbb
ret
repnz
add
mov
cld
shl
rcr
adc
rol
and
das
sbb
sar
into
adc
push
pop
xor
or
nop
or
or
xor
mov
lds
or
lds
(bad)
shl
push
adc
sub
pop
add
pusha
mov
arpl
pop
adc
or
ror
movs
xchg
mov
fldenv
push
or
repnz
mov
jns
dec
or
cld
imul
sbb
imul
sub
lock
inc
adc
cld
rcl
adc
cwde
pusha
mov
push
add
aaa
xchg
dec
sbb
shr
inc
(bad)
loopne
ror
jno
(bad)
inc
daa
cmc
pop
(bad)
movs
rcl
mov
xor
and
xchg
or
push
xchg
aam
imul
pop
test
inc
ss
inc
adc
adc
shl
fadd
or
ins
test
aam
and
add
in
pop
cwde
sbb
mov
aam
lock
or
add
les
add
std
push
adc
inc
mov
push
scas
jns
add
fsubr
das
lahf
mov
and
and
lea
in
add
add
das
inc
rol
(bad)
mov
jp
adc
push
in
add
mov
add
push
cmp
shl
pop
cld
inc
cmc
aam
mov
push
dec
iret
push
mov
sbb
sti
add
mov
and
ja
les
or
adc
push
add
sbb
pop
dec
ror
inc
xor
push
mov
shr
das
xchg
ret
dec
dec
or
les
adc
and
int3
rcl
fs
leave
(bad)
cmp
movs
inc
add
mov
dec
sub
xchg
lahf
rol
dec
imul
imul
shl
rcl
jbe
push
push
shl
adc
jl
mov
push
mov
inc
ffreep
shl
loopne
cmp
xor
pop
push
int3
movs
ss
popa
rcl
lea
outs
sub
fistp
vpshab
pop
daa
dec
xor
inc
inc
jbe
lock
push
sub
sbb
sbb
(bad)
fsubr
push
ror
shl
add
aam
add
imul
push
lds
add
cmps
mov
pop
outs
jecxz
loopne
dec
scas
push
rol
mov
enter
inc
ret
sar
inc
lds
add
daa
adc
jo
and
sub
ror
sub
add
imul
daa
adc
mov
enter
call
and
add
add
dec
cmp
dec
adc
iret
outs
and
adc
mov
retf
cli
shr
jns
push
das
test
pusha
pop
inc
cld
xor
inc
push
bound
and
xor
movhlps
ins
aad
add
shl
adc
xor
sbb
mov
adc
out
and
les
je
xor
sub
aad
mov
push
mov
nop
cmc
inc
push
dec
out
(bad)
sub
fstp
jne
inc
cmp
aaa
(bad)
mov
xor
mov
add
inc
and
aaa
or
or
outs
xchg
fs
adc
xor
(bad)
and
and
push
outs
call
inc
and
push
sbb
jge
iret
pop
jle
push
call
fld
fstp
ror
jns
xchg
sub
call
pushf
and
mov
lods
lods
inc
cdq
mov
pop
shr
clc
das
nop
dec
daa
bound
jb
std
mov
out
je
dec
dec
push
adc
sub
enter
sbb
mov
das
jne
add
push
imul
or
test
dec
loope
pop
in
mov
sbb
adc
test
fwait
lock
mov
push
int3
and
or
jge
pop
punpckhbw
shr
fistp
cmc
pusha
scas
and
xor
test
popa
mov
or
or
pop
gs
jns
add
enter
push
sbb
fmul
cmps
adc
push
mov
lahf
add
(bad)
ror
add
adc
js
push
rcl
ins
clc
add
jno
push
adc
pop
shl
fwait
adc
add
add
and
and
imul
add
push
mov
or
arpl
pop
inc
aaa
das
call
pop
cmp
add
xor
outs
add
xchg
sub
add
mov
xor
jmp
pop
dec
xchg
(bad)
add
repnz
pop
adc
or
or
cdq
nop
xchg
mov
sbb
jg
adc
dec
add
push
push
movs
add
and
(bad)
adc
pop
and
add
pusha
mov
data16
ins
stos
pop
cmp
or
mov
sbb
test
sub
dec
test
jo
loopne
add
test
into
or
fcos
jne
(bad)
test
ss
(bad)
(bad)
daa
cdq
movs
or
sub
jg
mov
sbb
sbb
inc
push
test
add
or
sub
mov
pop
cmp
xchg
pop
movs
jmp
push
push
sub
movs
(bad)
scas
jmp
lods
mov
push
mov
call
fs
pop
daa
sub
fadd
dec
ss
or
pop
sub
push
or
ss
jecxz
aas
or
sbb
outs
and
sub
cmp
je
retf
into
cmp
mov
add
or
adc
pop
or
jne
push
clc
fsub
add
cwde
push
popa
add
or
(bad)
pop
adc
push
inc
inc
inc
dec
test
or
call
and
push
add
push
and
inc
sbb
test
cmp
add
mov
pop
call
loop
into
inc
add
int
jg
sbb
and
addr16
mov
xor
pop
sub
adc
adc
cmp
or
inc
pop
push
ret
mov
pop
cmovnp
sub
jle
push
clc
rol
dec
mov
add
fmul
sub
cmp
xor
pcmpgtw
xor
and
lods
and
dec
adc
retf
test
pushf
pop
leave
adc
jbe
shl
and
sbb
sahf
sbb
inc
outs
movs
dec
fs
mov
and
jge
lea
sbb
push
adc
mov
rol
addr16
and
pop
sbb
sub
adc
add
or
mov
mov
inc
and
add
xor
lea
jle
add
or
shl
push
mov
rol
inc
and
cmp
mov
sar
add
std
jl
pop
pushf
jmp
inc
mov
lea
cmp
je
test
or
push
xchg
add
mov
push
popa
inc
(bad)
in
arpl
inc
sub
ja
scas
push
or
inc
mov
mov
inc
into
cwde
push
mov
leave
pop
sahf
cmp
je
xchg
push
ds
or
icebp
enter
inc
cmp
or
jb
gs
mov
inc
sbb
sar
clc
call
push
xchg
dec
ret
sub
je
push
push
dec
aad
xor
dec
and
mov
xchg
push
mov
scas
retf
sub
inc
cmps
jne
aas
je
or
or
add
aas
fs
add
sbb
enter
mov
mov
adc
and
ds
aaa
sbb
dec
pushf
or
lds
jae
pop
jge
mov
inc
cmps
xor
mov
sub
and
in
push
movs
movs
mov
mov
div
gs
adc
dec
cmps
ucomiss
gs
adc
in
cmp
add
arpl
sbb
clc
jo
dec
(bad)
cmp
xor
mov
nop
lock
push
in
nop
mov
mov
pushf
stos
and
xor
scas
push
fldcw
shr
add
mov
js
pop
cld
mov
ret
pop
cmps
inc
sub
and
xchg
les
in
fst
mov
adc
mov
add
pop
mov
iret
sbb
fiadd
mov
xor
out
push
je
add
lea
adc
ret
ins
add
cdq
div
cmp
fmul
mov
push
dec
outs
xor
mov
sub
push
add
iret
mul
or
(bad)
aas
and
mov
in
dec
loopne
(bad)
pop
pop
scas
cmp
mov
xchg
xor
ficom
xchg
fidiv
ficom
fimul
jecxz
mov
and
jmp
mov
add
imul
fisubr
into
mov
mov
xor
and
xor
mov
cld
push
rol
dec
mov
imul
mov
sbb
fnsave
pop
xchg
xchg
adc
push
les
arpl
enter
(bad)
in
jb
mov
test
in
leave
sub
fadd
das
mov
mov
fs
scas
xchg
jg
pusha
add
test
add
push
test
(bad)
and
pop
retf
popa
jge
out
cdq
push
fcom
jo
pop
int3
push
sbb
lea
mov
add
int3
mov
inc
ret
sub
test
adc
daa
or
and
push
outs
cmps
out
add
popa
arpl
popa
inc
inc
adc
dec
out
jno
loop
add
add
mov
or
dec
mov
nop
shl
jae
jl
pop
cmp
jbe
lods
mov
push
jnp
inc
pop
sbb
adc
or
iret
or
jge
repz
push
js
ror
inc
fsubr
or
add
xor
ja
enter
dec
inc
sub
ret
add
add
inc
lea
mov
nop
and
fsub
stos
or
aaa
pop
inc
ret
push
mov
push
test
enter
or
mov
dec
sar
rol
xor
xlat
adc
sbb
xchg
out
les
xchg
mov
rol
push
loopne
je
adc
or
fisub
inc
and
fidiv
jmp
add
jb
adc
or
(bad)
stos
mov
stc
mov
cmp
adc
push
lahf
mov
sub
and
add
int3
cmp
xchg
in
jmp
push
mov
ja
adc
inc
inc
stos
or
sub
or
lods
jecxz
repnz
mov
das
js
call
dec
sbb
xchg
xor
push
sar
jns
jno
mov
test
cdq
imul
fstp
pmaxsw
inc
fisubr
add
mov
je
lock
fld
fstp
data16
push
mov
sub
or
inc
add
(bad)
gs
mov
lods
mov
ins
fs
and
jb
ud1
lods
repnz
xor
mov
inc
mov
inc
xchg
scas
add
pop
gs
adc
mov
and
add
ror
add
jmp
add
int3
daa
stos
rol
(bad)
xchg
push
mov
retf
xchg
add
pop
xchg
sbb
cmp
jecxz
int
push
push
bound
test
fldenv
ins
dec
pop
push
ret
add
or
mov
mov
sub
mov
xor
add
gs
or
mov
js
fs
xor
fnstsw
xor
repz
or
(bad)
push
xor
mov
inc
sidtd
test
test
add
les
sbb
aas
add
or
inc
and
outs
mov
xchg
adc
dec
inc
add
adc
or
pop
retf
sbb
test
adc
call
leave
nop
jne
mov
or
push
cmp
in
pop
mov
retf
clc
loopne
ss
xchg
rcl
xchg
ret
fadd
push
rol
mov
cli
ds
and
inc
or
adc
popa
cld
or
add
out
or
push
pop
dec
dec
xor
(bad)
loopne
jne
pop
outs
mov
out
sub
xor
enter
loop
adc
or
dec
push
sbb
std
sub
inc
mov
mov
mov
xchg
pop
pop
pop
cwde
cli
stc
cli
retf
mov
sar
inc
or
mov
or
stc
inc
loop
add
mov
inc
jno
sub
in
adc
mov
mov
jl
push
adc
and
(bad)
lahf
je
mov
add
ins
sbb
mov
xor
xchg
lea
xor
push
dec
ret
jge
fst
adc
or
imul
push
mov
cmp
daa
or
adc
push
mov
ret
add
fcomp
fcmovnu
fidiv
cmp
cmp
movs
lods
int
push
xchg
sbb
in
and
not
(bad)
in
imul
inc
add
xor
add
or
outs
mov
aaa
add
stos
mov
and
and
xor
inc
cmp
add
xor
cmp
fild
pop
adc
inc
mov
or
test
mov
inc
pop
xor
adc
ins
adc
adc
mov
jge
jae
dec
add
push
cmp
mov
rol
or
movs
adc
retf
sbb
adc
add
adc
push
lds
fadd
jp
xchg
adc
adc
and
add
mov
loope
add
pop
sbb
adc
mov
icebp
cmps
mov
or
xor
push
mov
loope
inc
or
jae
and
and
sub
add
add
mov
mov
add
dec
imul
push
add
cs
or
inc
add
js
add
scas
lods
aad
loope
jle
adc
and
sbb
hlt
loopne
sub
xor
add
or
sbb
or
dec
push
jecxz
ins
aas
dec
and
or
pop
sub
inc
popa
mov
xor
rol
jecxz
stos
rcr
inc
dec
es
pop
jae
push
movs
aaa
cwde
or
jmp
(bad)
rol
nop
(bad)
adc
adc
add
lock
inc
mov
inc
jno
test
adc
dec
or
inc
(bad)
jb
stos
xor
popf
adc
dec
and
mov
mov
add
ror
jno
add
mov
loop
test
test
push
retf
daa
xchg
jmp
cmp
addr16
pop
xlat
or
jge
sub
adc
ret
arpl
add
lahf
fwait
inc
(bad)
pop
jge
or
inc
add
push
cmovb
retf
daa
or
lods
or
daa
ja
or
jae
aaa
inc
inc
push
or
xchg
les
add
push
inc
sbb
lods
pop
sbb
mov
inc
retf
movs
mov
ror
or
pushf
and
mov
mov
loopne
push
or
push
inc
dec
pushf
loopne
and
or
adc
imul
mov
xchg
les
sbb
mov
sbb
push
jo
or
in
(bad)
les
or
movs
or
lods
adc
push
enter
icebp
jb
(bad)
lock
pushf
pop
hlt
je
test
mov
in
pop
in
frstor
fcomp
fdiv
std
test
sbb
sbb
add
xchg
jno
comiss
call
pop
retf
mov
(bad)
cli
mov
pusha
pop
fwait
jecxz
lods
or
or
push
cdq
je
add
dec
jecxz
in
pop
xor
sbb
ror
loop
add
cmps
jne
xor
lods
das
push
lahf
nop
inc
xor
in
and
mov
cmp
sub
cdq
outs
sti
push
mov
sbb
add
xor
outs
mov
and
pop
cmps
pusha
loop
test
cmps
push
sub
sar
es
clc
test
es
hlt
enter
ret
inc
push
lods
pop
loope
sbb
and
inc
cmps
add
dec
mov
mov
(bad)
imul
mov
test
fnstenv
shl
push
inc
movs
cmps
out
or
jmp
fdivr
fadd
and
sub
out
xor
scas
sbb
or
inc
sbb
pop
xor
xchg
add
add
loop
inc
hlt
ret
retf
test
les
mov
fwait
push
pop
sbb
mov
or
les
pop
push
inc
rcl
push
fs
xchg
test
iret
mov
in
dec
jge
ret
sub
in
add
xchg
cmp
add
or
add
fidiv
ins
add
js
adc
push
sti
add
xor
add
bound
enter
ret
shl
adc
inc
lods
aas
in
(bad)
lds
adc
fiadd
std
push
aad
mov
push
push
dec
es
imul
push
dec
loopne
icebp
test
adc
push
out
pop
mov
das
sbb
out
sbb
pop
adc
push
jmp
xchg
xchg
add
sti
(bad)
mov
and
retf
call
or
mov
sub
scas
pop
mov
inc
jmp
inc
or
add
test
add
sub
int
push
push
adc
pop
cmps
movs
push
ins
fwait
dec
add
mov
out
add
nop
sub
push
mov
dec
jmp
mov
xor
xchg
js
or
add
mov
into
xchg
xchg
or
cmp
add
adc
call
sti
adc
out
xchg
shr
cmp
mov
and
fcmovu
dec
sub
cmp
xchg
pop
jo
xor
dec
mov
shl
int3
mul
dec
scas
in
sub
jmp
push
mov
mov
les
dec
pop
add
enter
dec
fistp
(bad)
xor
loopne
xor
cmp
jp
fst
inc
mov
or
aaa
enter
sbb
sbb
add
test
enter
or
(bad)
or
and
das
aad
aad
adc
in
mov
dec
mov
mov
push
add
fcomp
xor
icebp
(bad)
and
cmp
push
add
cmps
mov
add
and
and
fcom
fadd
icebp
hlt
rcl
push
inc
dec
loopne
cmps
mov
mov
bound
jmp
jmp
push
dec
imul
loop
cmp
call
xchg
xor
cmp
and
out
push
call
int3
mov
in
jg
sbb
fwait
je
push
push
mov
cmp
jno
outs
or
sub
mov
jecxz
lock
or
push
inc
dec
fsub
sbb
ret
xor
or
or
sbb
or
in
cmps
sbb
es
mov
mov
adc
int3
nop
fs
add
(bad)
inc
cmp
repnz
adc
repz
sahf
hlt
xor
neg
sar
or
jo
pop
enter
pop
mov
adc
sub
sub
shl
adc
mov
into
iret
jge
mov
adc
inc
daa
pop
mov
stc
adc
adc
mov
or
sbb
sub
sbb
push
test
or
dec
mov
sbb
add
and
popf
gs
(bad)
call
aad
dec
push
das
push
loope
pop
pop
mov
rcr
bound
mov
rcr
shl
xchg
or
xor
stos
mov
add
punpckhdq
sahf
and
popa
loopne
mov
out
mov
data16
or
mov
or
or
je
sub
ss
sub
shr
adc
and
data16
xchg
loopne
imul
and
sub
dec
sar
or
lods
aas
pop
inc
and
out
hlt
sbb
xchg
pop
out
pop
sub
movs
push
mov
mov
pusha
pop
call
add
mov
xlat
mov
(bad)
imul
sub
or
add
sub
test
or
call
jne
ficom
push
inc
jecxz
add
mov
dec
pop
pop
add
push
fs
fild
arpl
add
sub
cld
iret
or
pop
dec
dec
shl
sahf
or
cmp
mov
adc
pop
add
scas
jmp
ds
dec
xchg
bound
ja
test
push
mov
push
lods
neg
push
mov
pop
and
add
add
out
lds
or
push
mov
cmp
add
pop
pop
or
je
add
fsubr
push
or
and
push
jmp
out
inc
add
(bad)
out
xchg
mov
test
or
mov
icebp
adc
unpcklps
test
adc
retf
jae
xor
pop
sahf
cmp
cmp
inc
in
cmp
adc
pop
jae
cs
dec
sbb
pop
sahf
retf
and
mov
das
fs
in
ins
cmp
retf
jae
inc
js
jl
xchg
out
dec
adc
cs
in
mov
gs
sahf
retf
jae
addr16
imul
pushf
jno
jg
iret
in
cmp
test
lods
xchg
retf
jae
cs
mov
out
pop
sahf
mov
loopne
cmp
lods
les
mov
rol
jae
cs
aam
fadd
fdiv
pop
sahf
retf
shl
(bad)
jecxz
cmp
out
in
jmp
in
hlt
icebp
clc
sti
fbld
jae
add
add
cli
adc
in
cmp
or
or
retf
jae
adc
adc
out
pop
sahf
sbb
mov
cmp
cmp
sub
xor
repnz
sahf
retf
pop
cmp
popa
mov
addr16
outs
dec
jns
iret
in
dec
jnp
jg
sahf
retf
jae
test
pop
cmp
out
xchg
pusha
cdq
mov
push
sahf
retf
jae
mov
mov
mov
jl
or
iret
in
cmp
mov
mov
retf
jae
cs
fist
cwde
jmp
repz
mul
cmp
idiv
adc
mov
mov
cs
in
mov
out
clc
adc
or
les
enter
cmp
int3
pop
adc
repnz
sahf
iret
pop
adc
push
fcomp
cmp
out
pop
loopne
in
cs
in
call
sahf
retf
jae
xor
loop
xchg
xor
add
xchg
retf
jae
cs
or
or
adc
xchg
mov
mov
cs
and
and
sub
pop
sahf
retf
(bad)
xor
mov
out
cmp
cmp
(bad)
iret
in
inc
add
call
add
dec
adc
sahf
retf
jae
sub
xor
pop
aaa
pusha
cmp
mov
ins
push
retf
jae
cs
je
out
pop
sahf
js
jl
and
cmp
jno
jae
ja
jns
iret
mov
ds
xchg
cwde
iret
adc
mov
test
retf
jae
mov
iret
loope
pop
mov
mov
pop
sahf
mov
bnd
xchg
icebp
enter
sti
ds
out
std
aam
add
cmp
out
adc
fmul
loopne
cs
in
in
call
jae
daa
lock
repnz
clc
inc
cld
inc
add
xor
or
out
pop
or
adc
iret
in
adc
sbb
jns
and
repnz
sub
in
cmp
xor
cmp
retf
jae
cs
inc
int
repnz
sahf
inc
iret
dec
aad
in
cmp
loope
jmp
std
jge
cs
pop
call
(bad)
jns
iret
in
or
adc
jae
adc
xchg
out
sbb
jl
cs
in
sub
push
mov
out
jns
mov
jo
cs
ja
jg
stc
sbb
iret
pushf
(bad)
mov
cs
in
test
lods
lahf
pop
sahf
retf
jae
cmps
mov
mov
lods
mov
iret
in
(bad)
leave
enter
in
sbb
adc
rcl
mov
adc
fcmovnu
out
jns
iret
loopne
in
call
pop
push
call
or
jae
adc
xchg
adc
pop
cld
out
mov
pop
adc
or
cs
adc
dec
sbb
pop
sahf
retf
dec
sbb
and
cmp
out
pop
sub
jns
iret
in
xor
sbb
cmp
xchg
out
mov
cs
in
dec
mov
retf
jae
lds
pop
rcl
fldenv
iret
in
cmp
ins
div
jecxz
jns
je
js
pop
jae
cs
call
adc
sahf
retf
daa
mov
mov
cmp
out
dec
xchg
dec
cwde
cmp
ret
in
pushf
imul
push
cs
in
movs
popa
test
lods
iret
out
jns
mov
adc
mov
jo
cs
rcr
iret
out
adc
ret
ror
cs
out
aam
adc
iret
fmul
in
sbb
adc
fnsetpm(287
loope
jae
cs
jl
xchg
xchg
adc
add
iret
in
paddb
iret
in
add
or
or
retf
jae
sub
xor
xchg
out
pop
sbb
push
and
in
cmp
and
sub
jae
cs
xor
repnz
sahf
xor
cmp
xchg
fwait
inc
lahf
inc
movs
jae
cs
dec
lods
dec
mov
retf
mov
mov
(bad)
fs
iret
in
push
sahf
retf
jae
cmc
je
js
retf
sti
clc
add
sbb
jg
mov
mov
nop
das
xchg
in
cmp
xor
jae
cs
mov
sbb
xchg
push
lods
cmps
adc
stc
adc
iret
in
cmp
rol
cs
adc
cs
shl
cs
out
adc
(bad)
loopne
pop
sahf
retf
jae
jecxz
jmp
iret
out
cmp
lock
hlt
mul
jae
cs
std
cld
adc
pop
sahf
outs
cmc
push
jle
add
or
out
xor
adc
adc
sbb
sahf
retf
jae
popa
and
addr16
out
pop
sub
jne
iret
in
cmp
xor
cmp
cmp
inc
mov
repnz
sahf
inc
xchg
dec
xchg
dec
in
cmp
cdq
push
lahf
push
test
pop
stos
pop
mov
repnz
sahf
retf
mov
mov
fnstenv
je
cs
in
js
jl
pop
lahf
retf
jae
repz
or
sahf
retf
jae
adc
mov
repnz
xchg
and
mov
movs
inc
out
jns
test
lods
jecxz
jo
cs
mov
mov
mov
iret
adc
ret
in
les
out
jl
jg
rcr
xchg
mov
mov
cs
loopne
in
adc
jns
iret
in
in
loope
jmp
hlt
cmc
clc
sti
cld
jl
cld
clc
pop
or
test
out
adc
and
in
adc
adc
sbb
sbb
and
out
pop
and
sub
iret
in
cmp
xor
jns
cmp
pop
sahf
inc
popf
inc
mov
in
cmp
mov
mov
cs
push
(bad)
pop
jecxz
repnz
sahf
retf
in
jmp
icebp
mov
imul
cmp
div
add
ucomiss
in
jl
sbb
sahf
retf
jae
and
out
pop
nop
cmp
in
cmp
pushf
push
mov
movs
jns
and
test
cmp
mov
jns
iret
shr
xchg
mov
leave
pop
sahf
retf
jae
int
rcr
push
xchg
out
aad
fnsetpm(287
cmps
xchg
out
jl
call
iret
in
cmp
hlt
(bad)
clc
or
mov
adc
add
jle
out
jl
add
or
or
in
cmp
adc
jns
sbb
push
out
pop
sahf
and
pop
sub
mov
jno
jne
jns
iret
xor
cmp
retf
pop
inc
fwait
mov
mov
mov
jns
iret
in
push
ret
pop
rcr
jae
aad
(bad)
out
in
push
div
mov
adc
js
in
cmp
jl
and
sub
sahf
mov
inc
xchg
in
cmp
dec
cwde
dec
pushf
push
mov
jg
movs
pop
test
lahf
ret
in
lods
xchg
adc
mov
mov
cmp
shl
cs
repz
mov
repnz
sahf
retf
rcr
fchs
jmp
in
adc
sti
in
faddp
out
std
lock
call
bswap
jecxz
pop
clc
pop
cld
xlat
adc
mov
adc
or
pop
sahf
retf
cmp
xchg
out
push
sbb
jns
iret
in
and
jnp
fiadd
sub
adc
cs
in
xor
retf
jae
popf
cmp
inc
cmp
out
movs
inc
scas
dec
mov
iret
in
dec
mov
retf
jae
leave
pop
out
icebp
xchg
out
pop
pusha
repz
push
add
jo
mov
daa
js
mov
inc
adc
iret
in
mov
pop
ds
jae
arpl
jae
outs
pushf
and
test
retf
jae
fwait
lods
mov
jns
adc
pop
sahf
mov
jae
cmp
ror
xlat
int3
inc
adc
out
aam
fdivr
or
cs
in
in
call
jno
sub
fwait
adc
xor
jae
cs
aaa
cld
inc
jae
mov
adc
or
pop
sahf
retf
pop
or
adc
cmp
out
jns
jge
jns
iret
in
and
retf
jae
mov
mov
cmp
out
mov
cs
in
cmp
inc
rol
jae
fisttp
dec
pop
adc
jae
pop
call
or
pop
sahf
pop
daa
pop
sub
xchg
aaa
fs
push
iret
ins
dec
jo
je
pop
sahf
retf
push
js
jl
mov
imul
nop
xchg
jae
mov
out
xchg
mov
out
mov
mov
cmp
mov
mov
cs
jae
cs
(bad)
in
enter
pop
sahf
retf
stc
sar
aam
adc
sahf
retf
sti
call
and
das
loopne
xchg
out
xor
cmp
jg
out
jl
in
dec
lock
hlt
(bad)
in
cmp
clc
outs
cld
scas
icebp
and
test
iret
ja
(bad)
sti
ficom
or
jns
adc
repnz
sbb
in
cmp
and
sub
jecxz
jns
sub
xor
out
call
or
adc
pop
sahf
retf
pop
inc
pop
inc
and
dec
sub
jns
iret
in
push
cmp
retf
jae
inc
pusha
dec
fs
out
pop
push
iret
in
jo
je
js
retf
jae
jg
add
test
in
cmp
nop
mov
mov
cwde
rcr
int
xlat
test
ds
imul
retf
repz
mov
mov
repnz
sahf
mov
add
xchg
sbb
xchg
adc
mov
sar
aam
cs
out
adc
inc
fmul
sahf
retf
jae
push
in
call
ins
in
outs
lock
iret
loope
jl
hlt
xchg
clc
das
adc
scas
adc
cld
pop
adc
in
cmp
or
jns
adc
adc
out
pop
sahf
sbb
sbb
and
mov
loope
in
jns
iret
sub
xor
xor
pop
sahf
retf
idiv
stc
cmp
pop
pop
sahf
retf
sti
call
cmove
dec
cmp
out
daa
dec
xor
cs
in
push
pop
pop
arpl
jae
ja
jnp
lea
xchg
ins
fwait
jo
in
cmp
je
js
retf
jae
cs
cmp
leave
mov
mov
jl
xchg
aad
sbb
xchg
jmp
cwde
repz
cmc
mov
ds
jmp
mov
sbb
cs
in
mov
sahf
retf
jae
dec
les
add
sar
or
adc
sahf
retf
jae
jge
jg
test
loope
pop
in
call
pop
sahf
in
popf
lock
hlt
cmp
lods
clc
jg
cld
jg
ja
call
add
in
(bad)
sub
or
or
retf
jae
cs
adc
repz
sbb
scas
adc
clc
pop
sahf
retf
cmc
and
sub
sti
call
sbb
xor
sahf
out
or
adc
inc
cmp
push
cmp
out
pop
sahf
inc
pop
dec
jns
in
cmp
adc
cs
pop
cdq
pop
mov
retf
test
jl
xchg
out
mov
sbb
je
xchg
out
iret
js
jl
(bad)
out
mov
add
jmp
repnz
ficom
add
mov
and
iret
pushf
sub
pop
sahf
retf
xor
pop
sahf
iret
loope
das
adc
repnz
mov
int3
ret
in
sbb
adc
cmps
aam
jae
cmp
adc
lods
fadd
mov
mov
xchg
out
inc
adc
aad
jae
out
jl
hlt
jecxz
repz
cmp
cmp
pop
faddp
out
add
or
xchg
out
and
cs
in
sbb
sbb
and
mov
jns
and
adc
cs
sub
push
xor
pop
sahf
retf
pop
xor
cmp
cmps
xchg
out
jae
(bad)
repnz
arpl
cld
adc
xchg
pop
sahf
retf
jae
popf
push
cmps
push
cmp
out
mov
cs
in
pusha
xlat
fldcw
retf
jae
out
ins
div
sbb
jae
pop
call
adc
out
pop
sahf
jl
sub
iret
mov
sub
pop
sahf
mov
jl
xchg
dec
cwde
das
adc
adc
xor
mov
pop
sahf
out
push
add
adc
out
mov
cs
in
shl
arpl
dec
repz
sar
aam
sbb
call
sbb
and
jns
iret
out
adc
xor
retf
jae
aas
lock
hlt
iret
in
or
adc
push
cld
pop
stc
mov
arpl
add
sub
in
or
in
cs
adc
jge
push
jns
iret
neg
adc
xchg
and
add
lahf
jns
iret
test
xor
pop
sahf
retf
jae
mov
lds
xchg
out
xlat
inc
fisttp
sub
in
dec
cmc
push
stc
dec
loope
add
xchg
xor
lock
or
outs
inc
sbb
test
mov
adc
out
pop
sahf
push
in
cmp
das
je
js
das
mov
inc
or
ins
mov
das
das
das
mov
cwde
mov
pushf
lods
mov
lds
das
das
das
lods
(bad)
mov
mov
mov
das
mov
and
imul
sub
lods
(bad)
fcomp
adc
lock
push
push
ror
or
les
xor
and
fbstp
int3
cmp
jbe
push
adc
test
sub
jge
ret
jo
cwde
(bad)
mov
test
div
cmp
fwait
sbb
pushf
xchg
call
enter
das
and
inc
add
out
mov
xor
xor
inc
add
call
jb
pushf
es
or
lahf
ror
aas
mov
inc
iret
push
inc
dec
clc
add
cmc
adc
shl
add
inc
adc
lea
retf
fdiv
mov
dec
sbb
xor
add
push
xor
jl
hlt
sub
mov
xor
sbb
sub
icebp
mov
cmp
jl
in
mov
push
cmp
test
and
add
or
lods
xor
outs
mov
fld
mov
inc
pusha
retf
add
shl
xchg
inc
mov
mov
push
test
adc
xor
add
or
mov
js
jp
aam
jnp
mov
or
cmps
sub
cmp
sub
add
in
sti
je
sbb
aas
push
(bad)
push
bound
mov
mov
push
adc
add
int
sub
adc
inc
sub
xchg
cmc
cmp
xchg
inc
sub
std
and
repnz
and
xor
pop
leave
xchg
pushf
loopne
nop
inc
test
jp
movs
sar
hlt
movs
not
mov
and
mov
push
and
das
mul
aaa
sbb
mov
sahf
sub
aas
cs
mov
rol
xchg
mov
jecxz
sub
mov
repz
jmp
ret
dec
or
cdq
outs
adc
pop
add
add
xor
mov
add
push
into
sbb
jl
push
icebp
dec
adc
shl
jp
push
adc
rcr
fstp
sbb
dec
sbb
pop
stc
and
les
cld
data16
jecxz
push
in
sub
sbb
cmps
mov
fdiv
push
adc
xor
test
std
or
xor
sti
jns
push
sub
or
pop
mov
repnz
xor
xchg
test
push
jo
icebp
(bad)
into
fild
dec
mov
sub
arpl
pop
and
ja
sbb
clc
dec
sub
mov
adc
sub
test
xchg
sub
mov
stc
ret
aaa
add
shl
or
retf
push
push
sub
sbb
push
and
add
ret
cmps
cmp
rcr
pop
push
mov
add
push
mov
jo
add
add
adc
dec
add
sub
cmp
dec
push
dec
jo
shl
push
in
xlat
rol
and
mov
in
setge
cdq
ret
or
xor
xor
add
into
add
pop
repz
pop
test
add
add
jno
adc
jmp
in
out
sahf
inc
gs
out
inc
fadd
add
push
or
dec
(bad)
push
and
push
mov
lods
add
scas
daa
sbb
iret
add
jp
(bad)
mov
add
dec
adc
jnp
(bad)
imul
jo
xchg
es
pop
sub
push
adc
js
lea
ret
dec
pusha
push
out
add
mov
xchg
fsub
stos
add
das
ss
mov
adc
loop
nop
shl
arpl
inc
xor
push
stos
gs
push
loopne
sbb
fstp
jge
dec
mov
(bad)
dec
push
xchg
xor
or
fs
push
lea
es
push
sub
popa
add
push
push
adc
sbb
mov
sar
(bad)
fdivr
inc
or
jmp
adc
fcomi
cmpps
std
or
aam
push
aam
push
nop
mov
bound
push
out
loope
adc
jle
sub
pop
or
cmp
xchg
or
and
or
jno
pop
sar
push
leave
adc
or
rol
es
ror
lahf
loopne
lock
add
or
jmp
add
loop
mov
seto
push
(bad)
cmc
add
sar
shl
sar
dec
pop
dec
xchg
(bad)
shr
dec
sub
cmp
clc
add
sub
dec
pop
lock
cwde
lea
daa
add
and
jnp
fcomp
inc
fdivr
inc
fdivr
jmp
mov
aad
jns
or
and
dec
test
loopne
test
xchg
into
or
sub
mov
pop
push
enter
add
mov
dec
pop
cwde
sbb
mov
adc
and
loopne
pop
mov
aas
xchg
add
loopne
ins
and
test
pop
mov
mov
leave
cmp
cmp
sar
outs
es
in
inc
add
fwait
xor
add
fdivr
clc
jl
mov
test
push
sbb
imul
inc
mov
fstp
movs
add
lea
sbb
into
ret
jecxz
test
add
cmp
mov
push
mov
(bad)
jmp
ror
aaa
xor
mov
adc
int3
(bad)
js
push
mov
adc
or
mov
and
mov
int
rcr
push
sub
dec
js
int3
jmp
inc
cmp
ficomp
pop
pop
dec
or
lock
sub
pop
mov
sbb
mov
ror
rcr
test
sbb
add
call
dec
mov
push
fisttp
call
into
lock
loop
int
repnz
mov
fdivr
xchg
mov
imul
jne
push
jns
mov
push
retf
shr
lahf
dec
inc
dec
inc
or
dec
xor
xor
xor
arpl
ficomp
ret
jne
pop
push
outs
add
mov
xor
ss
loopne
adc
sub
loopne
dec
fs
push
retf
add
mov
test
and
cmp
xchg
inc
jecxz
cmps
cmps
mov
sbb
or
pop
(bad)
ja
mov
push
add
sbb
push
nop
push
xchg
hlt
push
in
mov
sbb
sub
inc
push
sub
mov
in
add
sub
sbb
or
mov
shl
mov
or
mov
push
nop
scas
push
add
inc
or
ret
(bad)
push
cwde
stos
inc
add
pop
shr
and
add
cdq
mov
or
dec
out
pop
ins
push
add
xchg
cmp
scas
stc
call
jl
in
mov
xlat
fucompp
jo
pusha
add
bound
adc
jb
push
dec
or
or
in
or
jno
pop
or
je
push
out
and
mov
icebp
inc
jno
movs
mov
or
mov
xor
ja
or
xor
lods
push
aas
cmps
std
nop
rol
mov
lea
jl
sub
push
xchg
add
fnstsw
or
or
test
pop
rcr
adc
inc
or
rcl
push
les
fsub
mov
test
jecxz
and
add
mov
and
aaa
pop
push
pop
jne
inc
mov
icebp
fwait
cmc
dec
(bad)
add
adc
(bad)
fnstenv
ss
inc
add
sbb
popf
dec
cmp
jnp
or
sub
and
mov
mov
jp
add
sub
dec
and
xchg
push
adc
inc
push
ficom
lods
sub
iret
imul
lods
mov
clc
or
lods
sub
rol
lock
add
or
mov
adc
push
and
push
dec
sub
xchg
or
mov
or
inc
ja
fst
and
add
sbb
mov
test
xor
jl
push
js
pusha
leave
sbb
int3
or
xor
xor
adc
pop
xor
bound
xor
xchg
add
jbe
(bad)
push
jns
xchg
jl
fsub
push
pop
sbb
push
scas
das
pushf
repz
cmp
das
movs
or
mov
lods
xchg
push
xor
mov
pusha
das
cmp
sbb
mov
add
add
popf
rcl
ret
das
int3
sbb
das
aam
adc
add
jmp
cdq
nop
das
loopne
imul
xor
xor
xor
xor
gs
push
scas
xor
das
mov
inc
or
mov
xchg
xor
jno
fisubr
xor
lea
sbb
adc
inc
or
jnp
xor
lea
sbb
int
in
mov
lea
pop
mov
adc
mov
jo
das
and
adc
adc
push
jo
xchg
adc
imul
das
lea
adc
mov
mov
es
es
gs
pop
jo
xchg
adc
leave
mov
sub
pcmpgtw
jbe
jae
(bad)
das
sub
push
call
shl
dec
test
aad
mov
push
push
cvtps2pi
or
sahf
xor
mov
mov
and
mov
xchg
push
dec
adc
adc
push
xchg
arpl
dec
loopne
inc
jle
mov
lea
xor
mov
or
mov
mov
add
test
and
adc
ds
push
jae
out
or
pop
in
inc
mov
or
xor
or
dec
xor
or
in
cmp
fs
adc
lods
adc
mov
fs
pop
(bad)
in
es
xchg
sub
imul
jne
scas
ss
sbb
jno
cmp
dec
cwde
and
sbb
add
push
lds
cmp
dec
mov
inc
ss
add
cmp
and
in
push
mov
daa
or
mov
and
cmp
in
cmp
enter
push
xor
aam
xchg
js
dec
jmp
fiadd
xor
or
sub
or
gs
sub
xor
fwait
inc
xor
or
loopne
pop
push
add
add
xchg
sbb
sub
mov
mov
add
push
dec
pusha
cmp
sub
adc
sbb
sub
sub
add
jecxz
popa
xor
and
movs
and
ins
loop
and
push
rol
clc
rcl
test
xor
pop
add
pop
sti
test
pop
cmps
or
sbb
(bad)
out
adc
pop
sbb
icebp
cmp
mov
sbb
adc
add
jno
shr
xor
adc
xchg
sub
add
ret
scas
pop
or
adc
mov
push
jne
imul
pushf
cwde
dec
adc
xchg
cmp
dec
test
lea
ret
sub
adc
mov
test
iret
mov
shr
sbb
fwait
rol
pop
sub
and
fsubr
dec
mov
cmp
outs
hlt
and
or
sub
push
clc
or
ss
sub
div
movs
inc
add
sub
cmp
sub
mov
in
sub
out
sub
mov
mov
pop
inc
or
stos
add
sbb
dec
ins
or
(bad)
mov
inc
cs
mov
cmp
mov
aas
aad
pop
test
fild
rol
add
push
(bad)
or
xchg
int
sub
add
jo
cmp
add
dec
daa
and
jno
cdq
cmps
push
or
push
dec
jg
cmc
dec
outs
sbb
jbe
jnp
call
push
xor
xor
lods
mov
mov
push
pushf
dec
sar
int
mov
mov
iret
mov
mov
sub
add
sbb
test
or
mov
nop
mov
mov
lock
push
mov
xor
add
push
sub
scas
push
cmp
dec
and
or
add
mov
or
les
(bad)
out
fnsave
push
repnz
mov
adc
std
or
sbb
or
or
adc
sub
jmp
push
add
popa
mov
and
dec
inc
mov
aad
sahf
loope
or
adc
les
add
add
or
or
jne
sub
and
adc
mov
add
mov
loop
push
adc
adc
fdivr
imul
movs
rcr
iret
add
adc
ja
adc
repz
fisttp
push
ja
pop
popa
cwde
adc
popf
sbb
dec
lods
xor
dec
setl
pop
xor
add
lock
daa
jl
or
bound
cmps
adc
rcr
mov
inc
jmp
das
inc
cld
or
mov
sub
adc
sbb
and
fbstp
push
xor
push
rcl
aaa
and
mov
jmp
aaa
and
cwde
pop
sbb
add
imul
mov
mov
sbb
shr
or
pop
shl
and
daa
shl
sub
dec
cmc
sub
pop
jge
xchg
sub
jo
les
or
mov
or
das
and
dec
pushf
shr
add
xchg
mov
dec
cmps
popa
jnp
es
adc
and
push
ret
xchg
push
adc
ss
xchg
xchg
or
xchg
(bad)
mov
sbb
adc
add
mov
cwde
xor
or
aaa
sar
cwde
bound
fldenv
or
xor
sub
aas
(bad)
cmp
cmp
and
aas
jo
jo
inc
lahf
mov
loopne
sub
imul
push
lea
and
inc
outs
mov
xchg
call
push
xchg
mov
adc
and
fwait
inc
shr
dec
inc
fwait
inc
cdq
pop
ror
inc
std
dec
jae
mov
sbb
mov
cmp
xor
adc
xchg
add
(bad)
inc
loop
je
sub
nop
out
stos
xchg
dec
push
sbb
xor
lahf
scas
or
sub
push
dec
push
jno
scas
dec
jo
jo
dec
lahf
scas
add
imul
mov
mov
sub
push
add
push
push
push
(bad)
scas
and
(bad)
sub
adc
ss
push
mov
loopne
outs
push
pop
popa
in
xor
push
pop
popa
push
add
cmps
push
lods
pop
rcl
xchg
pop
add
mov
mov
pop
addr16
mov
lods
pop
jmp
add
and
or
aaa
dec
or
mov
test
sbb
add
mov
push
mov
mov
push
adc
mov
sbb
les
jne
mov
adc
pop
out
dec
outs
sbb
pop
sub
jecxz
dec
scas
nop
xchg
pusha
aam
loopne
popa
sub
stos
or
cmp
or
movzx
and
jbe
xchg
push
push
xchg
fld
or
fwait
xchg
add
inc
call
sub
fisttp
popf
jae
mov
mov
add
jno
rcl
sti
(bad)
rol
gs
sbb
mov
sbb
or
xlat
cmp
data16
mov
ins
and
jnp
push
imul
dec
push
mov
nop
inc
xchg
jge
lods
aam
jecxz
ins
jge
add
nop
ret
adc
leave
xlat
pop
les
xor
test
nop
popa
jmp
pop
out
adc
jo
pop
or
cdq
loop
pop
sbb
fsubr
fs
mov
sub
mov
jb
dec
cdq
jne
cmp
push
popa
inc
mov
xlat
xchg
ret
jne
dec
cs
call
stc
out
push
aaa
dec
jo
or
dec
loopne
xchg
cwde
push
and
mov
loop
jb
std
sub
sub
jbe
mov
inc
and
es
sub
and
jge
ror
sub
loope
xchg
mov
jle
sub
dec
js
ja
js
mov
xor
outs
push
dec
sbb
aad
or
stc
and
shl
dec
mov
sbb
out
sbb
loope
imul
push
popa
test
cld
add
or
sub
mov
dec
add
aad
fadd
movs
je
cmc
or
add
or
fwait
mov
sub
cmp
mov
add
push
imul
jbe
jecxz
or
cmps
stos
mov
mov
aam
(bad)
mov
shl
inc
push
push
test
rol
das
pusha
sub
xchg
mov
adc
cs
lea
cmps
xchg
aaa
pop
add
ficom
into
js
out
push
dec
lds
(bad)
adc
add
add
xchg
cmp
xor
jg
mov
pop
not
xchg
xchg
inc
int
mov
mov
neg
xchg
and
dec
mov
push
lods
push
(bad)
jmp
icebp
je
jmp
popf
and
aaa
sbb
push
lahf
sbb
popf
and
pop
push
int3
add
dec
mov
cmp
xchg
push
es
mov
push
and
jnp
scas
movs
push
rcr
cmp
cmps
push
cmp
loop
push
add
jg
fcom
clc
inc
add
add
ds
jnp
stc
cs
push
sbb
sti
jns
neg
neg
lea
repnz
and
push
ss
jle
ins
ss
cld
push
jo
aas
out
stc
lock
cmc
cmps
add
ins
cmp
push
mov
pop
cmp
mov
inc
mov
(bad)
mov
lahf
xlat
mov
mov
cmps
push
loopne
add
fdiv
xchg
repz
push
test
push
pop
mov
jmp
ds
push
jo
out
push
push
fistp
dec
loopne
jb
or
cmp
mov
mov
outs
cmp
mov
or
push
add
or
(bad)
int
popa
push
cwde
add
mov
or
imul
jl
jmp
sub
push
or
outs
cmp
call
je
and
or
cmp
stc
pop
cld
outs
dec
adc
or
and
mov
cmp
jb
movs
lock
add
add
xchg
dec
sub
adc
sbb
jmp
jbe
xor
adc
fdiv
add
or
sar
add
outs
adc
mov
ror
rol
and
call
pop
jne
inc
data16
pop
cwde
ror
adc
sbb
and
adc
mov
loopne
or
push
loop
or
add
inc
int3
je
cmp
dec
mov
xor
aam
add
sti
mov
jl
or
ja
inc
or
inc
jle
or
mov
les
jl
jg
jbe
pop
inc
outs
jb
mov
push
mov
(bad)
adc
jns
icebp
mov
sbb
mov
test
and
aam
clc
icebp
(bad)
mov
xchg
leave
es
lock
adc
mov
xor
xchg
mov
or
sub
pop
cmp
into
and
mov
or
mov
add
or
add
fisttp
rcl
inc
lods
loope
cmp
adc
icebp
fs
sbb
rol
jg
das
or
mov
movs
or
add
push
inc
xchg
ficomp
out
sbb
add
js
mov
sub
or
jl
inc
mov
nop
xor
or
pusha
dec
xor
pop
rol
or
fisttp
stc
mov
add
pop
inc
int3
add
outs
out
sub
icebp
or
clc
dec
sub
pop
adc
mov
sbb
lea
add
js
aas
cmp
lea
mov
mov
mov
push
mov
dec
in
mov
mov
add
mov
jmp
sbb
mov
aaa
test
inc
lock
dec
js
xchg
enter
add
or
je
dec
inc
inc
inc
inc
jb
mov
jmp
cmp
jl
cmps
dec
les
adc
or
jecxz
push
call
push
jnp
dec
inc
mov
clc
je
ja
push
mov
rcl
xchg
adc
cmp
push
sub
xchg
movs
cmp
add
imul
mov
adc
or
out
loope
and
js
jge
sbb
sbb
cmp
imul
lock
ret
out
mul
icebp
dec
sub
add
hlt
cmp
push
or
cmp
pop
or
call
add
add
mov
test
hlt
push
dec
out
mov
dec
sbb
fistp
fistp
add
or
fmul
add
or
pop
call
jge
call
cmp
dec
sbb
push
inc
cld
scas
or
mov
shl
mov
jne
jecxz
mov
mov
mov
push
fstp
dec
cmp
and
xchg
(bad)
mov
nop
dec
xchg
cmc
mov
icebp
inc
lods
push
cmp
mov
nop
xor
rcl
aad
push
cld
push
daa
pop
loope
pusha
ins
cmp
aas
(bad)
ja
popa
js
pop
sbb
ds
adc
adc
and
es
rcl
popf
add
add
pop
retf
cli
loopne
or
pop
push
xchg
push
sbb
ret
and
dec
cdq
jo
stos
or
sub
push
dec
cmp
xor
jge
adc
and
inc
pop
or
add
jle
or
xchg
out
pusha
cmp
inc
cmp
imul
call
push
or
mov
push
push
push
cmps
push
adc
inc
add
add
sti
push
mov
test
mov
lea
xchg
push
adc
(bad)
(bad)
fwait
shl
loope
(bad)
bound
and
(bad)
or
div
jo
or
es
ss
inc
or
push
push
jae
pop
jo
adc
mov
or
shr
jne
jle
add
pop
pop
or
jmp
jle
add
pop
cmp
adc
push
(bad)
gs
cmp
xchg
push
sbb
nop
mov
and
ror
dec
pop
icebp
cmc
es
leave
and
sbb
and
mov
mov
shl
cmc
adc
push
call
loope
ret
inc
jo
inc
jnp
enter
sti
out
push
or
and
test
call
and
popa
cmp
adc
add
dec
lods
cmp
mov
add
sbb
add
push
push
enter
and
and
(bad)
movs
add
repz
push
mov
or
adc
pusha
int3
fisubr
imul
jge
repz
int3
push
pop
mov
push
es
cmp
sti
and
lock
sub
jecxz
pop
cld
dec
push
imul
rcr
bound
fisubr
bound
push
std
sub
pop
push
and
push
xchg
je
enter
lods
push
jl
sub
dec
pop
addr16
jbe
push
lea
inc
mov
test
(bad)
sub
or
ret
rep
adc
data16
dec
xchg
and
inc
pop
sbb
aas
add
and
ret
sbb
sub
adc
add
sar
cdq
mov
mov
data16
inc
cmp
in
pop
imul
sbb
push
xchg
and
pop
adc
push
adc
xor
adc
rol
jb
or
mov
das
sbb
add
mov
and
pop
push
inc
add
and
inc
enter
push
add
or
iret
mov
and
add
add
and
nop
aas
leave
movs
lds
dec
jp
sbb
sub
sub
xchg
icebp
adc
mov
in
mov
test
fmul
cmp
mov
push
sub
or
add
sbb
fidiv
inc
loopne
test
mov
(bad)
lea
or
cwde
inc
loopne
scas
add
mov
mov
jo
jbe
add
outs
test
test
and
retf
adc
dec
add
pop
push
mov
or
xchg
ins
xchg
in
(bad)
icebp
mov
ret
mov
jo
add
mov
push
add
test
loopne
inc
jnp
(bad)
sbb
mov
(bad)
pop
add
stos
add
push
mov
fldcw
test
mov
jp
xchg
pusha
sbb
xor
xor
jle
shr
(bad)
mov
ret
xchg
cmp
or
js
push
xor
mov
je
jecxz
jbe
scas
sbb
(bad)
jmp
inc
push
push
fs
adc
cs
lea
sbb
pop
shl
ret
or
push
mov
mov
nop
or
pop
lea
pop
outs
sbb
inc
jno
jmp
sti
xor
fdiv
pop
sbb
inc
sub
imul
inc
push
mov
add
jnp
add
sbb
push
popf
mov
sbb
ins
and
fnstsw
add
cmp
inc
ret
aam
xor
sub
or
adc
dec
or
imul
dec
xor
push
scas
jns
dec
mov
cmc
mov
dec
adc
add
adc
adc
mov
push
mov
mov
sbb
xlat
or
adc
xchg
add
or
jecxz
add
mov
adc
mov
push
add
int3
push
push
mov
mov
add
and
inc
cmp
jnp
ins
xlat
mov
lahf
and
loope
cmp
xor
cmp
data16
push
popa
add
add
add
sahf
inc
and
rol
push
inc
adc
jp
push
and
ins
sbb
push
add
mov
push
lods
mov
or
loopne
mov
add
mov
jbe
pushf
jae
out
inc
inc
bound
jg
xor
pop
lods
sbb
call
push
jge
dec
jae
je
and
or
mov
or
push
adc
push
push
fimul
ins
pop
std
jbe
rol
sbb
sub
out
push
xlat
or
aas
cmps
xor
test
stos
call
or
lock
push
push
mov
push
or
mov
xor
xor
pop
stos
cwde
(bad)
(bad)
mov
es
cmp
pop
pop
add
(bad)
(bad)
cli
cmp
and
sbb
loopne
bound
loopne
adc
inc
dec
cmovp
pop
cmp
adc
push
rol
or
mov
adc
pop
adc
xchg
or
add
adc
or
hlt
or
jo
lods
cmp
mov
inc
test
mov
push
aas
test
or
(bad)
imul
dec
add
add
dec
retf
mov
les
std
and
clc
adc
jp
loope
gs
xor
ins
jae
xor
inc
push
and
push
ja
scas
inc
xchg
pop
je
push
adc
add
daa
add
pop
xor
sbb
adc
dec
sbb
or
add
loopne
imul
ror
and
out
or
mov
push
sar
repnz
mov
movs
ss
or
and
sti
push
mov
dec
pop
jo
jo
test
out
inc
xor
enter
mov
push
dec
movs
push
xor
outs
pusha
jmp
lock
mov
adc
pusha
push
icebp
(bad)
inc
mov
movs
adc
les
cwde
xor
popa
xchg
cmp
adc
or
call
push
push
mov
xchg
inc
add
repnz
xor
shl
pop
sti
dec
xchg
loopne
mov
jns
pushf
sbb
imul
pop
mov
push
or
sub
adc
fist
imul
add
daa
ja
inc
cmc
movlps
mov
femms
or
pop
mov
ds
mov
imul
mov
dec
imul
nop
jl
shl
pop
out
adc
add
int3
sub
inc
dec
je
dec
sub
rcr
mov
pop
jge
jbe
or
pusha
push
sbb
sub
lds
sti
je
inc
rol
sbb
or
(bad)
(bad)
push
daa
add
xor
idiv
or
test
mov
mov
and
push
shr
fucomp
jae
xchg
push
aam
sbb
sub
xchg
pop
add
repnz
inc
ins
add
add
inc
push
stc
loope
push
add
inc
movzx
ins
add
sbb
push
add
ret
or
pop
rol
pop
dec
out
mov
adc
imul
sub
push
dec
mov
ds
sbb
cs
jmp
test
dec
add
aad
cs
test
xor
scas
push
mov
or
add
loop
or
push
or
retf
adc
shl
js
xchg
mov
inc
or
pop
in
or
je
(bad)
jmp
add
xor
push
jno
cs
mov
test
jmp
outs
nop
dec
add
push
pop
imul
test
popa
in
pusha
fld
rol
mov
popa
add
(bad)
xor
or
dec
movs
mov
das
inc
mov
pop
in
loopne
sub
lods
fsubr
movs
dec
add
cmp
dec
shl
inc
ins
dec
imul
pop
aad
prefetchwt1
dec
and
test
call
add
mov
adc
imul
sub
push
push
pop
xchg
test
xchg
push
add
pop
xor
push
pop
or
sub
xacquire
add
and
add
adc
aas
add
or
enter
or
popa
cmp
(bad)
movs
push
or
in
cmp
dec
aam
je
or
or
enter
fadd
int
or
xchg
mov
inc
mov
jp
inc
adc
push
xchg
jbe
pop
lods
xor
es
int
jle
(bad)
into
sbb
pop
xor
fisttp
(bad)
fmul
mov
mov
mov
adc
add
dec
inc
cmps
(bad)
sbb
movs
lock
outs
jno
cmp
mov
sub
lock
dec
ins
call
jp
or
add
neg
add
fcom
adc
or
inc
add
out
cmp
or
xor
les
inc
ss
adc
pop
xchg
pop
push
pop
dec
push
cld
cmp
push
mov
mov
fldenv
pop
inc
call
jp
inc
mov
or
aad
scas
dec
and
pop
xor
or
or
push
pop
sti
in
push
lock
fwait
dec
or
sbb
nop
add
or
jbe
mov
les
add
push
dec
jae
sbb
add
and
pushf
adc
mov
and
(bad)
ins
adc
stos
not
sub
cmps
pop
aad
xor
or
fld
scas
mov
push
adc
shr
adc
ret
jne
adc
or
cmps
imul
push
jmp
sbb
or
ret
fnsave
adc
add
sbb
sbb
pop
inc
ins
push
xchg
xchg
cmc
out
mov
(bad)
cmp
je
and
mov
adc
cld
daa
in
inc
xor
push
pop
pop
push
sar
adc
das
cmps
sbb
xor
or
xor
adc
adc
adc
add
jmp
inc
scas
inc
push
add
aad
movs
inc
push
and
ja
mov
or
cmp
sub
arpl
push
jmp
clc
xor
push
scas
cld
fld
aam
pop
int
or
rcr
mov
dec
jnp
and
repnz
xor
mov
(bad)
in
xor
mov
sbb
out
loopne
das
push
inc
push
dec
push
pop
iret
repz
pusha
outs
jne
mov
aaa
jmp
dec
push
add
inc
push
mov
push
repnz
sbb
gs
arpl
push
repnz
add
sbb
add
cmp
sub
ds
dec
add
jecxz
sub
dec
dec
and
cmps
lods
add
dec
add
xor
loope
icebp
xor
lea
pop
test
loope
test
add
xor
add
test
add
sub
xchg
push
and
into
frstor
cmp
pop
rcr
inc
mov
leave
(bad)
xchg
cmc
sti
sub
xor
cmp
add
jns
jo
pop
ror
add
push
or
xor
inc
dec
jae
mov
dec
or
mov
dec
xor
outs
adc
cwde
add
mov
or
push
mov
mov
pop
mov
aam
add
enter
fdiv
inc
add
mov
outs
mov
push
femms
cdq
inc
sub
cmp
mov
fiadd
sub
add
lock
push
mov
lahf
or
es
cmp
cmp
pop
and
mov
ret
pop
or
mov
and
and
inc
ins
rol
mov
(bad)
iret
or
adc
and
pop
sub
unpckhps
push
dec
dec
ret
fcomp
loopne
in
pop
fdiv
das
jmp
xchg
mov
arpl
dec
in
add
add
push
(bad)
movs
inc
fimul
add
lock
gs
bound
push
sbb
mov
js
push
cs
dec
mov
push
push
shl
push
jns
push
daa
sbb
(bad)
mov
or
and
mov
push
jecxz
push
push
and
loope
adc
push
cmp
cmp
nop
xlat
mov
mov
pop
mov
pop
adc
adc
inc
mov
inc
pushf
jmp
shl
xchg
dec
xchg
and
ins
aaa
xchg
add
fcom
clc
aaa
push
inc
cmp
jl
bound
shl
inc
rcr
or
pushf
mov
gs
sbb
adc
int3
pop
xor
std
pop
ret
or
mov
inc
test
and
mov
mov
or
mov
stos
push
dec
or
add
push
leave
xor
cdq
sbb
xor
xchg
adc
push
cdq
lods
adc
and
loopne
xchg
out
adc
xchg
jbe
mov
sbb
pop
or
pop
mov
inc
xchg
rcl
retf
imul
push
dec
imul
xor
mov
xor
ss
dec
cs
(bad)
sbb
cmp
jne
add
jp
adc
mov
iret
xor
mov
pminub
push
push
mov
pushf
xchg
adc
rcr
add
leave
rcl
push
xor
adc
sbb
push
sub
push
mov
lock
xor
mov
jecxz
leave
ret
dec
adc
pop
or
cdq
jmp
xchg
pushf
add
enter
int3
xor
clc
push
push
push
mov
and
pop
pop
mov
ss
or
jg
add
adc
pop
push
sbb
popa
aam
and
sahf
lods
ins
push
inc
add
push
mov
(bad)
(bad)
push
lods
(bad)
neg
jo
jne
adc
add
mov
pop
enter
imul
mov
sub
movs
mov
sub
std
push
and
jae
and
mov
add
or
xor
push
arpl
dec
cmp
adc
lods
or
sbb
mov
xor
rcr
(bad)
xor
push
cmc
ret
adc
mov
ss
mov
xchg
mov
stos
mov
xor
mov
xor
add
pop
dec
xor
add
xchg
push
xchg
dec
mov
push
retf
(bad)
cwde
push
cmps
dec
mov
out
push
push
add
fs
les
cmp
add
or
test
test
adc
shr
add
fdivr
push
pop
lods
ror
lea
jle
ret
jg
leave
xor
movs
arpl
not
lds
add
(bad)
les
cmp
popa
ret
mov
popa
sbb
inc
sar
adc
sbb
enter
das
jl
sar
xchg
xchg
or
inc
mov
xchg
mov
push
bound
jmp
stc
xchg
cmp
adc
aad
pushf
test
push
fld
push
call
imul
movs
rcr
adc
enter
add
(bad)
les
add
icebp
adc
adc
sub
xchg
cld
xchg
loopne
fimul
add
std
add
jg
sbb
add
add
pop
ds
inc
sub
dec
(bad)
fcmovb
outs
dec
mov
inc
ds
cmp
add
inc
add
sbb
sub
retf
rcl
pop
xor
cmc
outs
in
stos
and
pop
dec
adc
xor
sub
or
cmp
dec
mov
or
jmp
imul
pusha
dec
pop
imul
in
mov
adc
mov
sbb
pop
imul
mov
lahf
in
imul
mov
push
push
pushf
es
inc
fisttp
les
jb
imul
rol
test
fcom
adc
lods
cmp
dec
lea
xor
pop
dec
mov
test
mov
sub
call
mov
(bad)
cmp
mov
dec
mov
movs
scas
or
mov
cs
sub
or
jne
push
xor
dec
and
sbb
repz
and
push
jge
mov
adc
popa
cmp
push
les
(bad)
sub
retf
pop
(bad)
enter
mov
push
imul
and
cs
cmp
fcomip
inc
jg
add
push
sbb
push
cdq
ror
rol
jmp
xchg
jle
add
aad
lea
xlat
daa
ror
mov
cmp
adc
ins
fsub
mov
or
iret
aam
sbb
pop
cs
and
or
mov
or
loopne
jno
dec
inc
xchg
clc
cmp
cmp
rol
jae
pop
pop
movs
test
cmp
sbb
add
enter
add
fwait
es
jnp
aad
or
cwde
inc
dec
lea
or
inc
fcmovne
push
ret
leave
jge
push
jno
add
aaa
je
movs
sub
mov
sbb
cmp
rcl
sub
push
(bad)
cmps
ins
sub
in
in
int
push
push
test
inc
mov
inc
mov
adc
jmp
jno
push
dec
xchg
mov
xor
int3
xor
push
aaa
inc
and
xchg
push
test
or
mov
mov
adc
xor
adc
adc
(bad)
hlt
stos
push
push
push
xor
es
pushf
dec
push
loopne
add
xchg
arpl
hlt
or
or
gs
xor
fisttp
cmp
or
inc
hlt
call
push
or
add
sbb
adc
push
xchg
int3
inc
mov
loopne
inc
daa
cld
pop
stos
add
scas
push
cmp
mov
pop
in
push
in
pop
dec
cmp
lods
sbb
test
and
cmp
add
jp
ror
add
inc
jne
or
pushf
push
xor
cmp
sbb
sbb
pop
ret
adc
add
push
(bad)
lock
mov
sub
test
mov
test
jge
enter
inc
cwde
add
jbe
in
dec
mov
repz
pop
dec
fcomp
loopne
mov
pusha
sub
out
dec
inc
shl
dec
cmp
cld
or
cmp
and
push
adc
mov
inc
xor
gs
cmps
add
sbb
enter
jecxz
(bad)
mov
adc
jne
ret
lahf
inc
sbb
icebp
(bad)
rol
mov
scas
or
cmp
(bad)
dec
(bad)
mov
aaa
add
adc
or
inc
lds
aaa
adc
clc
test
shr
or
add
and
or
and
or
push
imul
adc
adc
fs
adc
jo
jmp
mov
xor
push
mov
pop
add
dec
mov
inc
mov
or
sub
or
test
test
stos
inc
mov
push
sub
jns
add
adc
ret
test
xchg
cmps
dec
xchg
xor
add
adc
and
popa
add
sub
out
lock
int3
jns
and
(bad)
lock
xor
and
add
jl
shl
aaa
sbb
and
and
jge
sbb
mov
mov
pop
sub
ja
mov
push
popf
cmp
cmp
add
sbb
ja
shr
mov
xor
push
push
jns
popa
sub
test
inc
or
and
mov
mov
pushf
sub
cmp
cwde
pusha
jo
or
add
ret
pop
pop
jge
mov
and
mov
and
dec
(bad)
in
stos
sbb
cmps
mov
sti
in
dec
sub
dec
sbb
daa
or
daa
cmp
add
sbb
add
cmp
das
fdivr
pop
in
adc
jb
call
lock
ss
or
push
inc
push
dec
dec
cs
popf
mov
out
add
dec
in
cwde
or
aaa
mov
fistp
inc
arpl
or
shr
add
pop
jb
sub
aam
sbb
call
mov
imul
and
add
push
dec
mov
imul
inc
or
push
or
test
add
sti
cmp
add
clc
call
(bad)
or
mov
or
clc
sub
inc
xchg
or
sahf
jne
fs
icebp
movlps
hlt
je
cmp
sar
push
push
imul
mov
and
bts
gs
add
or
mov
test
cmps
xchg
lods
rol
push
cmps
xchg
fdivr
rcr
and
mov
daa
xlat
xor
mov
and
lea
inc
mov
mov
ret
lods
add
es
rcr
leave
add
jl
pop
add
mov
or
cmp
mov
jge
push
or
or
add
push
sbb
push
clc
or
push
and
lea
mov
xchg
cwde
icebp
dec
pusha
stc
(bad)
das
lods
stc
femms
push
sbb
pop
mov
push
dec
das
or
arpl
cs
fisttp
add
inc
sbb
pusha
les
daa
adc
or
xchg
sub
nop
lods
out
sub
sub
icebp
or
adc
cmp
jmp
aaa
popa
loop
sbb
aas
mov
sar
pop
xor
es
mov
cli
sti
dec
inc
and
xor
(bad)
push
mov
xor
fs
lea
cmps
popa
push
cmp
movs
add
add
arpl
test
mov
call
pusha
xor
add
sti
adc
mov
and
xor
push
push
aam
mov
mov
clc
leave
cmp
push
pusha
inc
leave
cmp
adc
mov
fadd
fs
add
xor
inc
ds
push
dec
shr
out
mov
adc
and
mov
mov
adc
and
ret
fadd
push
sbb
jb
scas
je
fld
imul
pop
cmps
mov
sub
arpl
xchg
sub
mov
leave
daa
(bad)
add
mov
xchg
or
sub
inc
or
shr
lock
ins
lea
sub
inc
sub
cmp
js
push
add
shl
push
or
add
pop
imul
ret
out
fisttp
mov
dec
mov
push
mov
imul
nop
cmps
lods
ds
or
clc
icebp
dec
or
dec
mov
adc
movs
ins
pop
jl
push
sub
push
adc
xor
and
or
jnp
movsx
add
xor
dec
jb
es
stc
mov
adc
je
xor
xchg
and
shl
pop
push
lea
or
adc
jmp
mov
adc
shl
cli
shl
jae
test
test
inc
mov
call
xlat
pop
push
pop
rcl
call
push
fsub
push
and
xor
mov
call
shr
jno
adc
sbb
push
shl
mov
cmp
mov
mov
rol
mov
push
shl
push
inc
shl
loopne
cmp
jne
(bad)
fcom
mov
loope
mov
popa
inc
dec
pop
add
cmp
(bad)
emms
adc
mov
jmp
adc
and
cmp
cmp
pop
or
mov
ret
cmp
add
sub
or
xchg
mov
adc
and
dec
in
fisttp
mov
and
or
xor
cmp
imul
call
sub
push
add
jmp
rol
shr
shl
sbb
mov
push
dec
rcr
or
lods
(bad)
(bad)
adc
sbb
sub
and
mov
stos
gs
adc
shl
mov
dec
pop
sar
je
add
outs
je
mov
or
pop
xor
int3
jb
add
dec
sbb
push
or
dec
adc
add
jo
jmp
inc
xor
popf
loopne
xchg
xor
dec
shl
xchg
dec
(bad)
dec
jb
les
adc
adc
mov
inc
call
addr16
and
mov
pop
adc
ss
cwde
ins
leave
inc
sbb
or
mov
jo
and
scas
mov
and
lods
dec
jge
add
push
push
sbb
test
dec
adc
or
inc
mov
fs
cld
push
mov
stos
rcr
push
pop
or
push
ret
mov
add
push
dec
pop
add
lea
fadd
inc
adc
gs
pop
xor
adc
loopne
cmps
or
(bad)
mov
inc
aas
pop
dec
es
pusha
test
out
add
or
mov
cmp
jle
xor
(bad)
rol
addr16
and
xor
test
cdq
add
mov
sbb
add
jecxz
lock
sbb
push
xchg
ss
fild
fsubr
and
(bad)
iret
imul
sbb
dec
jg
push
nop
mov
pop
add
pop
mov
call
push
mov
cwde
mov
(bad)
adc
lahf
adc
push
mov
bound
adc
dec
adc
mov
sub
jb
sbb
dec
mov
mov
pop
js
adc
aas
xor
xchg
pop
lea
add
test
cmps
loope
sbb
adc
pop
cmp
cwde
and
lea
gs
jno
cmps
adc
adc
or
and
nop
add
sbb
sbb
mov
dec
adc
push
mov
sub
jns
daa
xor
sub
inc
mov
iret
sbb
mov
push
ret
jb
pop
fild
sub
int3
sub
or
clc
mov
push
push
pop
mov
sbb
sub
mov
and
adc
adc
stos
and
adc
add
xor
cld
inc
loopne
inc
fcom
and
jae
aaa
mov
imul
push
mov
ins
(bad)
jmp
addr16
adc
dec
push
dec
mov
add
rol
mov
sub
pop
pop
sbb
mov
push
and
xor
xchg
mov
bsf
cmps
dec
cmp
xchg
mov
adc
fcom
pop
loopne
mov
loopne
add
loopne
sbb
loopne
push
mov
cmps
rol
jae
sub
test
call
dec
aam
ret
push
inc
cwde
push
or
adc
pop
pop
(bad)
xor
push
sub
mov
mov
cld
pop
mov
pop
mov
dec
sbb
pop
cmp
add
push
(bad)
or
ret
or
push
pushf
adc
sub
sbb
jg
or
push
popf
mov
jo
pop
fbstp
push
sub
lods
mov
adc
sub
or
xor
pop
jae
std
sysenter
pop
cmp
scas
aaa
adc
cmp
je
cmp
xor
sti
setge
xchg
mov
jae
hlt
add
jae
and
in
jne
lea
add
jle
lods
shr
push
ret
xor
mov
ja
ret
je
cwde
add
mov
icebp
push
xor
daa
pop
push
lea
inc
adc
push
jmp
add
inc
arpl
ret
xchg
xor
mov
movs
iret
ss
in
rcl
sbb
fcom
inc
jo
jno
rcr
push
push
mov
movs
add
es
mov
xor
push
or
or
popa
xor
push
jnp
in
imul
add
rol
dec
add
iret
imul
pop
dec
sbb
push
imul
push
or
xchg
jae
push
xchg
ins
and
jne
cmps
add
(bad)
xor
mov
cmp
inc
inc
popa
addr16
and
xchg
push
es
test
and
fstp
add
jecxz
xchg
popa
inc
dec
stc
ret
and
push
sub
mov
inc
jo
mov
pop
lock
cmp
xchg
shl
rol
jns
in
xor
jo
das
sub
adc
inc
push
mov
int3
mov
sbb
pop
jmp
xor
sub
sub
dec
push
mov
inc
test
sub
add
inc
cmp
push
cmp
sbb
or
mov
inc
or
lea
xchg
out
mov
adc
out
out
and
add
jae
xor
loopne
or
ja
mov
out
sbb
or
sbb
outs
fidivr
out
add
jbe
sbb
out
sbb
add
icebp
inc
call
and
lahf
pop
mov
and
mov
cli
adc
jl
push
push
cs
mov
mov
xchg
aaa
je
and
add
pop
mov
ret
arpl
aaa
xchg
add
rcr
adc
cwde
push
jae
or
adc
sub
sbb
arpl
or
es
cmc
jb
mov
enter
in
and
add
mov
push
push
iret
jbe
mov
jp
imul
imul
ror
leave
sbb
add
icebp
inc
push
shl
push
push
push
and
pop
add
push
or
inc
inc
popa
clc
inc
push
mov
jle
mov
push
add
loope
cli
and
and
push
loope
mov
inc
ss
jno
int
push
push
jo
fst
test
dec
add
movs
dec
xchg
add
sub
cdq
popa
pop
ret
add
leave
add
xor
mov
xchg
adc
push
les
push
cmp
pusha
pop
push
sqrtss
sub
dec
push
sbb
inc
dec
movs
dec
xor
call
sub
or
and
inc
push
loop
or
add
mov
rcl
and
xchg
fs
mov
add
cmps
lock
or
mov
mov
dec
ror
js
int3
or
pop
inc
mul
or
retf
dec
rol
mov
je
mov
or
fstp
jge
jge
(bad)
or
fcom
test
adc
push
dec
push
cmp
xchg
sub
pop
mov
stc
jecxz
push
cmp
in
adc
inc
movups
call
sbb
inc
push
adc
push
sub
jbe
xor
(bad)
out
outs
or
adc
cmp
adc
ins
nop
adc
dec
adc
add
cmp
hlt
(bad)
hlt
(bad)
cmp
arpl
cld
add
dec
add
call
xor
xor
aam
xor
adc
(bad)
cmp
jg
sbb
inc
inc
jne
push
rol
cmp
pop
cmp
or
nop
sub
push
push
fwait
aad
ss
test
mov
jge
inc
sbb
inc
push
add
adc
pop
xchg
cmps
pavgb
push
mov
std
jge
and
sti
push
jge
sbb
test
xchg
test
sbb
xchg
(bad)
jge
test
retf
jge
shl
js
dec
mov
call
std
sbb
sbb
sbb
mov
(bad)
mov
daa
pop
xor
add
add
push
sbb
jmp
xor
ret
mov
cmp
nop
pop
mul
movs
cmp
icebp
add
xor
lds
mov
xor
inc
pop
mov
in
pop
mov
cwde
shl
rcr
fwait
jl
cmps
adc
sub
mov
mov
mov
nop
inc
push
mov
mov
lahf
lea
pop
clc
data16
repz
and
pop
dec
adc
xor
inc
pop
pop
test
mov
inc
push
push
add
xor
int
jmp
inc
pop
mov
or
shl
enter
xchg
or
les
jnp
sub
sub
js
rol
push
push
inc
xchg
jmp
inc
xchg
test
cmp
mov
fadd
mov
push
xchg
sar
mov
sub
sbb
sub
in
xor
nop
xor
push
sbb
xchg
jle
sub
lds
mov
shl
cmp
push
stc
gs
inc
(bad)
add
fwait
adc
xchg
jecxz
mov
push
cdq
cmp
or
push
push
pushf
cmp
jp
push
mov
add
dec
pusha
sbb
pop
and
mov
(bad)
pcmpgtb
and
call
add
xor
call
pop
mov
inc
ja
pop
add
sbb
ja
push
inc
inc
sbb
sbb
cli
mov
outs
inc
sar
jo
add
loopne
inc
cmp
inc
pop
sar
call
push
add
or
add
and
xchg
ss
inc
cdq
call
push
sub
add
mov
je
ret
paddw
adc
push
or
add
pop
and
cmc
add
jo
pop
xor
add
in
enter
sub
ror
nop
or
push
dec
sbb
adc
ret
push
mov
inc
xchg
push
jne
js
dec
xchg
rol
xchg
dec
ror
rol
inc
xchg
add
inc
mov
and
push
pushf
add
add
clc
push
test
add
(bad)
dec
mov
scas
adc
push
daa
adc
ret
gs
movs
test
popa
xchg
js
add
in
fs
(bad)
and
(bad)
push
dec
shl
cmp
push
sbb
push
sbb
bound
push
push
sbb
(bad)
sbb
sbb
add
sbb
sbb
push
sbb
push
sbb
push
sbb
jne
(bad)
push
sbb
pop
outs
sbb
sbb
(bad)
sbb
rol
inc
cmp
push
sbb
mov
mov
lods
test
and
pop
cmp
xor
and
push
mov
(bad)
shl
and
(bad)
mov
sti
sub
sbb
pop
mov
push
nop
and
fcomp
fbld
push
movs
sbb
push
cmps
jmp
js
xchg
add
out
add
xor
ss
pop
or
(bad)
(bad)
sbb
lock
adc
push
test
mov
lea
clc
jmp
inc
and
dec
shl
dec
popf
mov
sub
inc
loop
mov
ret
mov
xor
xchg
adc
pop
bound
ficom
ret
inc
sub
inc
xchg
inc
inc
pop
ret
repz
bound
xchg
or
add
fs
xchg
aam
popa
adc
aaa
(bad)
xchg
loopne
mov
mov
or
jge
lods
adc
imul
add
(bad)
nop
cmps
inc
mov
pop
add
push
or
xchg
dec
cmp
jmp
add
test
mov
mov
push
sub
xchg
jbe
ror
xchg
jg
in
cdq
jb
inc
pop
stos
xor
pusha
push
pop
hlt
or
repnz
dec
pop
xchg
cmp
daa
or
leave
push
pusha
or
or
mov
arpl
and
popa
test
daa
sub
push
pusha
arpl
fs
add
or
adc
push
pusha
push
add
sbb
cmps
and
sti
or
adc
ins
lods
xor
cmps
imul
sbb
imul
push
in
push
xor
ins
xor
mov
mov
add
data16
cmp
arpl
bound
sub
mov
loopne
mov
inc
sub
sbb
repz
jbe
inc
push
test
or
push
jge
push
lock
mov
pop
or
push
ret
pop
fnstcw
or
or
inc
mov
pop
addr16
fs
mov
adc
popf
push
test
cmp
imul
push
icebp
cs
add
jp
fdiv
xor
popa
add
sub
push
adc
adc
pop
push
mov
jmp
add
call
push
cs
call
mov
es
xchg
or
or
mov
bound
dec
push
push
mov
sbb
dec
mov
or
ins
or
jnp
add
outs
or
rol
mov
aad
sbb
sar
or
push
inc
ret
add
gs
sbb
sub
in
sbb
punpckhbw
shl
mov
pop
scas
adc
nop
push
xor
inc
pop
femms
std
cmp
(bad)
shr
outs
ret
lahf
clc
emms
outs
jp
jp
mov
aam
call
iret
jne
pop
jmp
ror
sbb
sub
test
add
push
pop
popa
jbe
ss
adc
or
dec
nop
cmp
add
adc
cmps
and
ins
jmp
out
push
test
dec
inc
stos
add
or
sbb
mov
test
nop
aad
test
push
xor
movs
ss
sub
test
hlt
mov
mov
mov
mov
in
and
ds
add
push
sbb
dec
add
jbe
xchg
push
or
sbb
dec
aas
mov
mov
add
call
mov
loope
scas
jne
in
pusha
sub
and
and
test
ret
push
stos
or
or
dec
inc
stos
or
jae
or
pusha
shl
and
je
xchg
xchg
test
fld
or
ins
mov
mov
add
pop
and
adc
adc
push
pop
mov
mov
rol
sbb
xchg
sbb
lods
mov
inc
xor
and
dec
mov
pop
sbb
add
and
xchg
and
and
dec
leave
and
xchg
es
mov
sub
and
sub
ss
sub
mov
dec
leave
and
xchg
push
(bad)
mov
sub
dec
leave
and
xchg
mov
and
push
dec
leave
xor
mov
and
ss
pop
dec
aaa
pop
mov
cmps
in
inc
or
cmp
pusha
mov
in
add
cmp
pusha
mov
clc
dec
mov
push
xor
inc
(bad)
mov
leave
and
lock
or
mov
mov
sbb
je
adc
dec
pop
sbb
sbb
inc
inc
loope
adc
pop
inc
push
cmp
jo
add
(bad)
sbb
hlt
sub
outs
ret
mov
jl
arpl
lea
dec
mov
xor
into
or
xor
lea
add
sar
imul
or
inc
retf
jb
xchg
test
in
xchg
je
pextrw
dec
sbb
sbb
pop
push
xor
aad
push
add
movs
movs
movs
cmp
inc
clc
sbb
sub
mov
sbb
or
push
mov
xchg
cwde
push
retf
inc
mov
mov
xor
add
add
rcl
lea
or
sbb
or
stc
dec
or
mov
fsub
xor
ret
xchg
hlt
cmp
sar
lock
out
mov
or
inc
mov
(bad)
shl
push
rol
xor
es
mov
or
inc
call
push
inc
sub
dec
or
mov
pusha
jo
(bad)
cmp
push
or
pop
fbld
sub
sub
sub
xchg
or
jl
fsub
push
shr
lds
and
dec
or
push
fs
mov
and
(bad)
gs
jge
adc
mov
mov
popa
and
cli
jmp
mov
bswap
(bad)
test
sbb
aad
sbb
and
sub
cs
sbb
loopne
add
mov
add
add
add
aam
adc
addr16
ins
ret
or
sahf
mov
pop
dec
sub
aas
arpl
sbb
pushf
int3
pop
mov
test
push
rol
test
jl
xlat
pop
mov
out
mov
add
dec
inc
je
lea
sub
sub
sub
les
push
mov
dec
or
jns
cld
jns
sti
or
jg
cld
enter
or
pop
pop
mov
fsubr
sub
ins
in
std
adc
dec
adc
inc
add
stc
je
and
sbb
test
adc
(bad)
adc
inc
stc
sub
jle
add
add
call
push
daa
mov
lods
test
jb
mov
sbb
sbb
add
sbb
in
les
call
inc
jo
ror
push
add
cmp
dec
es
mov
pop
test
cli
and
and
shl
fadd
xor
stos
adc
mov
add
xor
(bad)
and
retf
shl
push
and
int
fsubr
sub
sub
sub
pushf
jge
adc
enter
fwait
rol
adc
jo
ja
mov
and
mov
push
push
add
sbb
arpl
sub
in
cmp
push
add
sub
or
shr
mov
mov
out
fs
mov
xchg
nop/reserved
sti
push
imul
imul
adc
jb
sub
jg
xchg
(bad)
sbb
cmp
(bad)
sbb
imul
cld
sbb
stos
test
or
into
mov
and
sbb
out
and
xchg
push
inc
sbb
inc
shl
aaa
jno
mov
push
out
add
or
es
fstp
cmp
adc
xor
inc
dec
pop
sbb
pop
mov
pop
or
or
adc
test
xlat
out
(bad)
adc
sbb
adc
or
xor
emms
add
push
jbe
or
imul
int
sub
jbe
out
or
or
pop
add
push
adc
scas
test
push
rol
inc
xchg
movs
or
and
outs
dec
and
mov
js
sub
inc
cmc
ins
scas
dec
fcomp
xchg
test
es
ret
xchg
mov
add
test
add
mov
pop
es
sar
sub
xor
loopne
xor
jmp
push
dec
xor
xchg
fwait
ss
mov
adc
les
arpl
cdq
add
xchg
leave
cmovbe
lock
scas
sbb
or
rol
inc
mov
jb
add
rol
pop
nop
cmp
add
retf
add
loop
fldenv
or
cmps
sbb
jns
ins
sub
or
adc
adc
mov
(bad)
int3
jns
or
mov
dec
push
arpl
sar
xor
cli
xchg
adc
sbb
addr16
xor
scas
push
dec
into
movs
and
fisttp
xchg
inc
push
(bad)
pusha
adc
sub
inc
mov
ffree
fadd
adc
movlhps
push
push
cmp
push
add
sub
dec
push
xor
and
dec
ins
jecxz
test
(bad)
add
adc
test
adc
dec
mov
sbb
push
mov
adc
xor
test
mov
aam
mov
xor
mov
pop
or
loopne
pop
or
adc
mov
neg
(bad)
(bad)
jmp
push
mov
in
clc
sbb
add
mov
ss
inc
add
add
inc
js
sbb
mov
inc
push
pop
jmp
or
mov
adc
repnz
pop
push
fldenv
dec
push
cmp
loop
adc
inc
sahf
mov
cld
mov
or
or
add
imul
push
popa
outs
mov
aam
mov
add
jge
adc
lds
inc
mov
xchg
mov
unpcklps
cmp
push
loopne
push
mov
sub
jge
mov
movs
mov
ret
sti
not
sti
cmc
ds
rcr
clc
cmc
adc
mov
pop
xchg
add
jle
push
inc
xchg
loopne
shr
inc
mov
repnz
jmp
pushf
loope
push
jmp
jae
push
push
repnz
push
push
in
retf
push
or
push
xor
and
jb
sub
sbb
adc
cmps
or
sbb
add
or
sbb
mov
in
pop
push
test
mov
pop
cmp
nop
addr16
add
push
les
mov
sti
add
jmp
dec
imul
jmp
add
xchg
cmp
dec
add
mov
cmp
fstp
sbb
pop
pop
add
cdq
movs
sbb
jnp
scas
push
pop
sbb
arpl
mov
mov
push
and
jnp
inc
jnp
aaa
sbb
mov
(bad)
sbb
clc
sub
test
mov
cmp
add
push
xor
pop
lock
pop
pop
add
pusha
imul
lea
mov
inc
adc
mov
sub
dec
(bad)
mov
xor
adc
outs
xor
ret
push
inc
pop
push
repz
test
mov
inc
iret
cwde
fsub
das
test
dec
push
js
jle
dec
cmp
push
sub
dec
mov
fmul
and
mov
push
xlat
add
inc
inc
xchg
in
int3
mov
arpl
mov
repz
(bad)
jg
mov
lods
imul
xor
arpl
cmp
shr
push
mov
cmps
hlt
inc
mov
dec
or
mov
ror
pop
dec
mov
push
mov
in
jmp
loopne
aad
inc
(bad)
loopne
adc
inc
loope
scas
push
call
adc
xor
adc
xchg
jb
mov
adc
dec
loope
xchg
xor
adc
pop
add
inc
cmps
loope
or
or
daa
cmps
movs
pop
movs
mov
inc
pop
or
mov
bound
inc
sbb
lods
mov
dec
mov
ret
sbb
adc
outs
fwait
loopne
adc
inc
div
outs
push
ins
push
mov
and
add
sub
cmp
or
mov
mov
push
jbe
jge
nop
pop
jne
popa
jmp
xchg
lock
rol
cmps
test
sbb
push
ds
popf
mov
lock
add
leave
cmc
xor
pop
or
iret
je
jmp
pop
mov
in
adc
mov
ror
pop
cmp
(bad)
jmp
dec
loopne
push
add
sub
std
inc
sub
mov
das
movs
aam
add
rol
adc
push
in
mov
inc
bound
add
scas
mov
jge
xchg
sub
mov
sbb
push
imul
inc
cmp
mov
sbb
or
mov
inc
mov
push
add
adc
rcl
mov
sar
sbb
dec
lods
jmp
push
in
inc
push
or
outs
inc
add
pusha
or
es
inc
or
push
push
arpl
mov
(bad)
loopne
adc
cmp
sti
push
adc
mov
inc
pop
dec
in
inc
jmp
test
rcr
and
(bad)
add
mov
push
ret
ror
xor
mov
push
push
push
xchg
jne
or
loope
xchg
pop
xchg
xor
inc
or
mov
or
cmp
into
(bad)
scas
sub
or
fdiv
jmp
add
addr16
sbb
and
push
dec
add
or
call
test
jle
mov
cli
hlt
fistp
call
inc
les
pop
test
mov
imul
sub
in
add
jp
mov
or
xchg
cmps
inc
push
sbb
lock
pop
les
and
test
fs
or
add
push
loop
sbb
gs
adc
cwde
std
test
mov
gs
dec
js
mov
xchg
sub
xor
cmp
rol
lock
jnp
mov
add
or
add
or
xor
in
out
push
add
sub
adc
inc
pushf
cmp
adc
jmp
mov
loopne
or
and
sub
dec
mov
loopne
inc
add
inc
ret
stc
add
dec
push
inc
adc
cld
sar
mov
xor
pop
push
adc
call
mov
rcr
pop
std
or
cmp
movs
push
mov
mov
or
push
jnp
adc
movs
sub
fiadd
xchg
adc
adc
mov
and
mov
sub
gs
scas
push
inc
sbb
inc
popa
stos
or
fadd
sub
inc
adc
push
shr
bound
dec
jmp
mov
adc
mov
pusha
and
sbb
jge
push
dec
push
not
push
dec
or
es
jns
je
mov
fwait
sbb
add
(bad)
les
add
dec
aaa
xor
aaa
add
sbb
push
daa
mov
mov
loope
js
xor
dec
mov
mov
push
dec
sbb
je
dec
clc
add
xchg
aad
push
mov
test
and
fdivr
in
sbb
fcom
test
pop
sbb
test
shr
ja
xor
push
xchg
cmp
jge
mov
aaa
jmp
or
movs
adc
outs
and
jmp
sub
sub
sub
test
add
ins
mov
mov
add
mov
nop
push
cmp
xchg
inc
or
xchg
or
push
ret
js
or
pop
jae
aas
dec
gs
pop
cmps
sub
movs
jbe
(bad)
call
(bad)
rcr
xor
add
add
jecxz
test
mov
push
xor
jo
jge
jb
imul
movs
test
push
xor
push
jo
push
or
or
add
mov
pop
cmps
div
mov
xor
jo
(bad)
int3
sti
mov
xchg
or
adc
adc
inc
gs
mov
jge
cli
pop
retf
sar
and
stc
ret
mov
add
loope
or
call
cs
dec
and
shl
add
sub
clc
add
test
sub
push
in
test
jecxz
jmp
mov
add
sub
and
sbb
mov
sub
pop
idiv
jl
and
jmp
movs
add
xor
jnp
inc
pop
jmp
sar
xchg
ss
test
or
mov
mov
jmp
clts
fmul
in
shl
and
in
shl
mov
mov
int3
xor
int
adc
or
xor
jno
sar
inc
jl
ror
nop
and
cmps
imul
xchg
mov
mov
cmp
xlat
aaa
mov
(bad)
ret
inc
adc
loop
inc
mov
clc
mov
jno
or
scas
and
sub
or
pusha
mov
push
fidiv
add
sbb
jo
call
cmp
dec
dec
fisubr
jnp
and
pop
jmp
frstor
fcom
dec
ret
fstp
stc
mov
test
ins
fcom
mov
add
call
fwait
push
adc
test
mov
add
push
in
pop
jmp
mov
out
shl
push
and
imul
imul
xor
or
mov
jmp
loop
(bad)
jo
mov
jmp
jl
pop
imul
inc
xor
mov
arpl
sub
icebp
pop
bound
inc
arpl
dec
cmovb
cmps
ins
popf
mov
test
mov
fmul
loope
and
xor
inc
push
push
fwait
push
add
daa
or
aaa
clc
outs
fmul
and
sahf
mov
add
inc
je
loop
ret
mov
pop
mov
gs
in
push
ins
mov
mov
sub
je
add
cli
adc
push
or
lds
xchg
pusha
sub
push
push
ror
push
jmp
push
push
pop
push
add
xor
les
or
scas
cld
(bad)
dec
sar
inc
mov
mov
or
mov
sahf
rcl
inc
inc
inc
and
rcl
inc
dec
jo
push
sbb
and
test
sahf
xchg
popa
jl
dec
xor
inc
int3
retf
retf
add
jnp
xchg
xchg
mov
ds
loop
imul
(bad)
push
sbb
mov
data16
lods
jmp
ins
xchg
mov
call
sti
mov
loopne
mov
dec
and
repnz
add
popf
and
outs
sbb
or
sbb
pop
mov
test
jg
sbb
nop
xchg
and
or
pop
cmc
dec
and
mov
lahf
inc
sub
push
add
mov
inc
pop
mov
pop
and
mov
mov
xchg
xchg
cli
pop
cdq
pop
test
add
fldcw
mov
add
inc
mov
js
push
inc
repnz
enter
push
push
adc
mov
pop
sbb
add
mov
fwait
cmp
cmps
repz
bound
inc
movs
sbb
push
loope
adc
cmp
mov
movs
ins
int3
aaa
inc
popa
or
cmp
ret
xlat
ja
je
dec
push
ds
pop
inc
outs
ror
cmp
cmps
push
sbb
sbb
add
sbb
dec
or
aaa
and
mov
jne
(bad)
aam
lea
cmp
cmp
call
push
or
cs
rcr
mov
add
and
mov
pop
add
add
cmp
sbb
repnz
add
and
or
mov
push
pushf
out
jo
mov
aaa
pop
ins
mov
call
cwde
and
dec
jb
mov
xchg
mov
inc
lock
add
sbb
add
xor
mov
retf
ins
push
jns
fs
push
mov
ja
mov
pop
push
adc
push
xchg
pushf
and
inc
ins
push
(bad)
xchg
test
add
push
sbb
call
add
adc
or
out
sub
test
add
mov
rcr
ret
imul
add
adc
pop
cmp
add
jmp
rcl
ror
xor
pop
aas
(bad)
jge
je
enter
dec
dec
ffreep
in
and
shl
test
enter
dec
int3
sbb
andnps
sbb
scas
cmps
sub
test
pop
aad
xor
and
inc
call
aad
push
pop
idiv
imul
jo
add
add
fcomp
inc
adc
push
mov
daa
or
push
or
xchg
shl
adc
or
lods
gs
xchg
mov
call
repz
jae
sti
add
add
push
gs
adc
je
inc
stos
cli
sbb
cmp
mov
js
sti
add
inc
movs
ins
movs
fst
jne
adc
dec
js
dec
mov
mov
add
fucom
mov
imul
xchg
and
xchg
add
in
shr
int
push
pop
call
push
add
out
call
clc
shl
add
push
add
rcl
adc
pusha
jge
add
pop
inc
add
fs
inc
(bad)
and
fs
or
mov
test
out
sub
aaa
rol
cmc
(bad)
cmp
adc
mov
add
fidivr
(bad)
cs
loope
xchg
xchg
retf
push
inc
jl
in
mov
sbb
inc
jle
mov
in
mov
mov
jne
mov
adc
adc
test
adc
push
jbe
mov
mov
popa
adc
stos
mov
mov
add
or
cmp
and
push
pop
adc
int
(bad)
dec
or
(bad)
sbb
fwait
and
shl
adc
iret
pop
cmp
xlat
(bad)
jmp
ss
push
dec
sti
pop
loope
sub
jne
push
cmp
retf
fcomp
cmp
rol
mov
imul
push
js
ret
mov
or
call
sti
in
push
mov
mov
add
lea
pop
add
mov
cmp
pop
push
xor
es
pushf
dec
add
inc
adc
enter
cmp
mov
add
adc
sbb
or
ins
fst
sbb
sbb
adc
push
nop
add
jmp
outs
ror
push
sbb
inc
cli
push
dec
rcl
outs
daa
dec
loop
push
cmp
dec
ret
mov
add
push
push
push
mov
sub
mov
sub
add
or
or
cmp
xchg
and
mov
or
call
loope
mov
lods
mov
mov
mov
xchg
sbb
pop
in
loope
or
neg
push
movs
push
push
inc
ds
adc
pop
dec
pushf
mov
dec
(bad)
sldt
mov
jmp
ret
or
loopne
jne
jno
xchg
push
daa
jns
add
sub
ret
jb
call
xchg
fsubr
or
out
mov
inc
sbb
pusha
or
popa
loope
or
mov
or
mov
sbb
pop
push
ja
xchg
adc
and
jmp
fist
test
mov
push
pop
sbb
or
xchg
jo
mov
adc
push
push
dec
push
inc
and
scas
xor
or
nop
cmps
fiadd
sbb
and
inc
inc
loop
fnstenv
dec
mov
mov
push
or
or
add
idiv
sbb
enter
mov
retf
add
adc
es
js
mov
mov
and
daa
push
dec
pop
mov
mov
call
pop
movs
arpl
pop
push
push
add
adc
shl
rcl
dec
and
jno
mov
repnz
add
dec
inc
sbb
cmps
call
adc
dec
inc
or
stos
jns
push
jle
add
mov
mov
pop
inc
pop
clc
fcomp
gs
ins
pop
pop
jp
js
or
mov
xchg
cmps
ss
add
mov
cmps
cli
fbld
xor
fadd
fadd
xchg
mov
les
xor
sbb
mov
jae
sub
xchg
sbb
(bad)
popa
pop
mov
and
sbb
rol
sbb
inc
push
retf
mov
jmp
and
adc
adc
or
jae
pop
mov
cmp
push
or
hlt
in
push
xor
adc
pop
sub
push
push
mov
push
loope
pop
and
int3
add
mov
mov
(bad)
xchg
sub
daa
mov
dec
sub
fld
add
push
adc
push
(bad)
mov
inc
or
cmp
out
in
push
shr
mov
imul
outs
sbb
jge
xor
rol
loope
xchg
sub
aam
fs
rol
ins
bound
adc
dec
addr16
aaa
test
dec
inc
cwde
sbb
aad
lea
mov
jmp
cdq
loop
add
sar
das
push
iret
pause
pop
push
push
adc
pop
aaa
daa
and
xor
retf
sbb
add
and
pop
fsub
sub
mov
mov
inc
retf
mov
jb
imul
mov
jo
mov
aam
push
xchg
adc
dec
mov
int3
mov
mov
dec
sub
std
jecxz
cwde
add
sbb
repnz
aam
adc
loop
cmps
outs
or
cdq
jp
xor
es
jo
call
sar
cmp
retf
outs
push
mov
js
add
mov
xchg
jbe
or
in
mov
mov
or
mov
ins
call
add
push
xchg
inc
dec
or
inc
dec
xchg
mov
add
add
add
dec
nop
or
and
shl
mov
push
hlt
xor
add
dec
das
popf
push
mov
adc
mov
mov
ins
shl
cmps
mov
xor
popf
dec
out
cmp
mov
xchg
cld
push
jnp
mov
xchg
add
es
or
mov
das
test
retf
loopne
push
fmul
mov
ins
pop
push
adc
ins
ds
add
leave
nop
je
dec
out
pusha
push
ja
push
fistp
jo
sub
pop
sub
sbb
xor
pop
or
es
mov
cmp
add
push
push
sbb
pop
mov
lea
sbb
test
xchg
adc
in
or
jp
cmc
add
rol
push
(bad)
mov
and
sub
sbb
jae
pop
aaa
int3
xor
pop
inc
push
aad
sub
popa
cmps
or
cmp
pusha
test
pop
or
lods
and
(bad)
in
xchg
fnstsw
cmps
xor
mov
frstor
jp
inc
jle
and
dec
push
loopne
jbe
xchg
mov
das
retf
dec
pop
add
mov
cmps
dec
add
loope
jl
mov
push
add
retf
into
popf
push
jnp
shr
push
fs
add
mov
or
inc
fmul
dec
mov
call
popa
xor
push
shl
cmps
test
jp
or
jo
sbb
push
inc
jb
out
adc
iret
xchg
push
sbb
adc
or
add
cmp
je
push
sub
or
xchg
nop
mov
jmp
pop
xchg
jo
(bad)
or
mov
mov
jp
sub
mov
mov
aam
jmp
lea
ret
and
sahf
mov
adc
and
shl
shr
ins
je
cwde
dec
enter
sbb
xor
adc
hlt
push
out
add
sbb
cmps
pop
dec
shl
bound
cmps
adc
jo
mov
add
mov
jmp
push
cmps
mov
call
jle
je
out
or
xchg
push
fwait
imul
add
lods
push
sub
push
enter
sbb
imul
addr16
inc
jno
aas
mov
xchg
es
cdq
push
std
jo
inc
xchg
mov
inc
inc
and
xchg
or
movs
pop
cld
xlat
add
in
and
mov
clc
push
movs
jne
fsubr
cld
cmp
addr16
or
cld
adc
adc
adc
cmps
and
in
lock
inc
add
mov
or
pop
add
sar
out
cmp
pusha
xchg
push
jge
popa
jnp
loopne
mov
repz
(bad)
push
shl
pop
jl
aas
add
cwde
call
imul
ucomiss
mov
aam
xchg
push
fst
test
add
xor
jmp
sub
adc
dec
inc
sti
(bad)
and
cmps
movs
aas
mov
push
push
sbb
add
xchg
(bad)
xor
and
jo
movzx
xchg
fild
loope
mov
inc
fcos
add
mov
cmp
xchg
xor
add
adc
mov
sub
shr
cmp
push
and
outs
shr
xchg
or
xchg
lods
mov
and
inc
mov
cmp
or
(bad)
lock
cmp
inc
add
mov
sahf
add
cmp
pop
neg
sahf
jns
setne
jmp
or
push
out
out
movs
inc
cdq
jb
mov
add
xor
push
ins
(bad)
sub
pop
push
and
dec
and
xchg
dec
or
or
or
sub
or
cmp
adc
inc
scas
mov
and
sbb
adc
adc
mov
ret
mov
adc
enter
shl
jo
add
popf
sbb
mov
sbb
jmp
push
or
pop
add
mov
(bad)
je
dec
je
add
dec
jne
push
ins
adc
or
dec
push
cmp
mov
fmul
sbb
or
out
out
pop
inc
pop
xchg
jo
dec
pop
xchg
cmp
or
adc
sahf
mov
inc
jmp
inc
sub
push
inc
test
push
pop
pop
and
popa
mov
add
push
mov
push
push
popa
fadd
add
and
or
shl
mov
(bad)
xor
push
fsub
hlt
cmp
(bad)
pop
adc
dec
arpl
and
inc
fild
sbb
add
sbb
mov
pop
dec
ja
push
adc
mov
js
fdivr
mov
inc
dec
inc
cmp
push
pop
inc
add
cmp
jmp
ins
dec
jns
cmp
enter
xchg
add
pop
and
xchg
pop
pop
ss
cmp
mov
das
inc
xor
sbb
into
xor
inc
hlt
or
add
aam
nop
ret
cmps
jno
cmp
js
inc
nop
pop
inc
push
cwde
jle
sbb
push
xchg
xchg
mov
fadd
imul
push
xor
adc
push
sub
fdiv
sbb
push
or
es
push
scas
fadd
push
sub
jmp
ret
push
hlt
xor
fnstcw
jle
sub
or
mov
or
dec
dec
xor
sbb
add
xchg
jge
sbb
cmp
pop
sbb
xor
movs
and
sar
aam
add
pusha
jne
(bad)
nop
jo
lods
and
fwait
jae
or
jno
mov
(bad)
jae
pop
mov
mov
inc
aas
adc
test
push
rol
loope
lods
inc
loopne
int3
inc
adc
jg
adc
ja
mov
retf
pusha
adc
mov
mov
add
test
xor
cmp
sbb
or
mov
ror
test
push
push
nop
in
add
test
cdq
(bad)
push
and
nop
fdiv
and
dec
xchg
inc
sub
call
inc
ss
cwde
pop
call
inc
js
cmps
ss
aam
ss
push
(bad)
add
loop
add
clc
(bad)
retf
dec
inc
xor
cmps
mov
or
rsqrtps
xor
imul
xor
fcom
xchg
fimul
inc
cld
push
push
sbb
add
inc
(bad)
add
popf
gs
sbb
cmc
push
sbb
xchg
adc
int
and
xchg
cmps
inc
adc
loop
add
es
outs
pop
push
or
enter
sub
lea
mov
cmp
shl
popa
sub
dec
call
lar
fsubr
fwait
in
add
add
dec
mov
mov
fadd
loopne
or
inc
(bad)
iret
or
pop
or
out
and
mov
mov
loop
cmp
pop
adc
loopne
or
imul
add
push
cmovp
mov
nop
mov
and
and
add
and
aad
outs
dec
call
push
data16
adc
mov
mov
xor
xlat
adc
mov
cs
mov
jle
add
dec
pop
or
cmp
jne
dec
or
dec
push
add
add
add
add
mov
add
stc
loop
nop
xchg
movs
int
pop
je
movs
ins
mov
test
test
rcl
jo
dec
and
push
les
lock
jno
jo
push
jnp
jbe
loopne
jae
push
pushf
cmp
or
adc
and
rcl
cli
fnsave
icebp
pop
jnp
push
jmp
pop
jae
fnsave
fcomp
inc
inc
pop
inc
cld
fdiv
adc
fwait
jg
jb
pop
in
sbb
mov
adc
pop
and
mov
inc
inc
jns
push
push
dec
rol
mov
call
push
es
mov
test
dec
xor
aas
dec
inc
xchg
push
div
ins
adc
add
dec
push
scas
lods
lds
fmul
dec
fdivr
or
add
mov
shl
es
push
daa
rcr
add
mov
pop
adc
and
sbb
enter
sub
enter
cmp
and
sub
sbb
or
movs
add
rcr
pop
push
cmp
xor
or
pop
pop
inc
les
or
aad
xchg
pop
lods
jmp
add
and
mov
cmp
mov
in
arpl
fistp
dec
and
and
pop
jae
cmp
sub
call
popf
es
inc
movzx
mov
in
jo
and
loope
xchg
jle
xlat
ja
in
add
sub
pop
dec
ins
push
push
add
ret
loopne
pop
std
cld
add
(bad)
fisttp
sbb
je
and
push
in
loopne
jle
adc
inc
cmp
pop
inc
add
add
not
rcl
push
scas
xor
popf
add
es
push
jge
sbb
sbb
push
popa
mov
test
dec
xchg
xchg
lock
jmp
jbe
push
dec
js
jge
jne
add
adc
and
or
mov
(bad)
(bad)
push
add
loopne
pop
or
inc
clc
fwait
sub
adc
cs
adc
and
hlt
test
or
xchg
icebp
sbb
test
add
xor
dec
dec
add
lods
fild
sbb
push
test
das
add
sbb
test
pop
sub
cmp
dec
and
or
sbb
nop
lock
push
sbb
pusha
ins
xchg
mov
aas
sub
xchg
les
or
hlt
jne
mov
pushf
pop
add
rcr
int3
xor
inc
adc
xchg
fild
dec
dec
or
test
(bad)
cmps
imul
sub
sub
jecxz
aas
push
jge
push
jmp
adc
dec
test
sbb
leave
dec
or
add
sub
adc
int3
sbb
dec
aam
ror
rol
sub
retf
cmp
xchg
fist
mov
out
inc
loope
icebp
mov
and
lea
jno
mov
or
dec
xor
cmp
add
stos
imul
icebp
mov
add
sbb
outs
and
xchg
dec
aaa
jmp
cmps
out
push
jno
and
int3
push
lods
les
or
xor
frstor
add
sub
inc
jmp
push
add
mov
xchg
dec
in
rol
xor
ret
sub
movs
add
(bad)
test
pop
push
ret
mov
fs
test
test
inc
retf
popa
add
call
mov
adc
mov
mov
ja
sub
les
pop
ja
call
add
movs
add
and
mov
jp
push
add
xor
mov
and
push
cmp
sbb
and
ss
or
push
push
xor
push
mov
mov
jnp
fisubr
retf
adc
dec
test
inc
and
mov
ror
pop
in
mov
mov
dec
loopne
pop
rol
add
or
mov
xchg
push
push
sbb
ins
test
test
xor
das
jbe
outs
xlat
adc
inc
call
pop
inc
imul
and
ret
jmp
push
in
in
call
imul
dec
cmp
sub
test
push
pusha
dec
arpl
adc
fsubr
add
sbb
add
clc
xor
sub
sbb
or
test
mov
or
mul
or
and
and
pop
cmp
in
arpl
xor
jmp
push
dec
loopne
rol
add
pusha
dec
inc
pop
dec
sbb
je
sbb
pop
or
and
add
adc
fs
fwait
lock
daa
fnstenv
mov
bound
sahf
or
cwde
inc
add
and
ins
mov
mov
jne
jae
pop
inc
sbb
inc
mov
in
xor
adc
and
lods
imul
in
mov
dec
and
or
xor
cwde
inc
pop
cmp
push
ret
ins
or
mov
sbb
mov
pop
pop
pop
lods
xchg
test
and
or
adc
cmps
adc
mov
mov
fisubr
aas
cs
pop
or
pop
push
rol
mov
xchg
rdmsr
pop
pop
push
call
ret
adc
mov
(bad)
xor
fmul
mov
ficom
fcomp
mov
mov
xchg
sbb
xor
xor
test
adc
jbe
adc
fwait
and
and
mov
xchg
sbb
add
cld
movs
xchg
cmc
dec
fisttp
test
pop
pusha
or
(bad)
jns
outs
push
add
push
and
mov
and
js
push
cmp
and
push
adc
(bad)
pop
shl
adc
call
icebp
push
pop
ins
cwde
sub
cmp
cmp
push
xor
or
jb
adc
adc
int
and
or
add
add
dec
or
push
mov
sub
dec
(bad)
jnp
retf
sbb
push
mov
mov
cmp
imul
les
pushf
add
loopne
mov
lods
(bad)
cmp
adc
push
(bad)
fadd
test
sar
sar
loopne
pop
mov
ja
push
pop
push
jmp
or
or
push
add
adc
xchg
inc
push
or
pop
mov
push
pop
xchg
cmc
dec
or
mov
or
push
nop
dec
or
ss
jecxz
movs
imul
call
inc
jmp
dec
pusha
add
mov
mov
stc
sbb
adc
(bad)
cmp
jns
sbb
add
in
dec
push
daa
out
xor
pop
add
pop
jno
mov
dec
popa
sbb
mov
cmp
call
add
pop
arpl
retf
shl
(bad)
test
xchg
mov
or
loope
loopne
add
jge
adc
push
adc
mov
es
sbb
or
test
inc
add
inc
jmp
adc
add
les
inc
push
pop
(bad)
xchg
aad
ss
jmp
jmp
bound
(bad)
push
inc
fwait
inc
or
or
nop
ins
add
aad
idiv
je
(bad)
push
cmps
mov
lea
movs
(bad)
or
mov
int
or
mov
and
(bad)
rol
adc
or
push
xchg
dec
cs
popf
or
jb
inc
or
sub
lods
daa
dec
leave
or
repz
pusha
sbb
ror
setbe
sti
sub
movs
push
scas
pop
push
mov
mov
pushf
push
call
push
push
mov
movs
mov
inc
nop
enter
or
inc
ror
inc
pushf
cdq
shr
scas
rcl
into
ror
sbb
cmc
xchg
nop
fs
mov
das
or
mov
xchg
push
fs
jmp
or
pop
lds
cmp
push
mov
cmp
les
mov
pop
rcr
mov
and
push
popf
pop
in
lds
and
adc
cmp
les
pop
int3
and
jno
das
adc
loope
dec
imul
or
push
and
mov
inc
cmp
sub
push
je
pop
addr16
cdq
sbb
add
jne
repz
inc
adc
push
sbb
cmp
sub
add
add
xorps
call
sbb
push
jae
or
movs
xor
push
adc
add
pop
sub
or
adc
aad
ss
inc
test
mov
(bad)
cmps
and
jmp
aam
out
movs
add
push
ret
data16
jmp
fst
xchg
inc
or
or
clc
xor
xchg
jmp
inc
jecxz
xchg
push
fwait
adc
xor
mov
or
sub
xchg
or
fsubr
and
lock
es
xchg
sbb
fs
clc
leave
dec
movs
inc
bound
mov
push
add
mov
adc
div
leave
and
inc
cmp
sub
xor
test
movs
movs
jg
pop
je
cmp
ror
add
mov
dec
or
sub
inc
ror
rcl
stc
test
aaa
add
neg
add
push
jge
add
pop
bound
dec
dec
mov
test
cmp
inc
arpl
dec
mov
cli
gs
stc
test
rol
in
cs
pop
test
pop
xor
lods
dec
adc
mov
or
push
add
xor
push
in
push
test
pop
scas
dec
movs
sbb
add
(bad)
push
mov
jecxz
push
rcl
adc
xchg
or
pop
xchg
mov
dec
inc
push
xchg
les
mov
imul
push
mov
jl
cmp
xchg
push
rol
sub
ret
adc
imul
jo
xchg
lahf
test
push
sbb
mov
sbb
mov
and
js
test
pusha
mov
push
(bad)
idiv
or
ins
popa
inc
inc
dec
lock
mov
inc
dec
pop
mov
jp
mov
sub
test
retf
dec
nop
mov
fsubr
lea
add
sahf
inc
test
retf
add
or
mov
add
sub
and
or
cmp
push
pushf
sti
test
jnp
jp
ins
pusha
pusha
push
xor
jge
addr16
and
out
inc
test
mov
movs
popf
add
pop
sti
dec
sub
xchg
cmps
movs
xchg
sbb
test
test
imul
and
mov
and
add
push
stos
popa
in
xchg
xor
push
or
push
inc
or
lods
arpl
jne
or
mov
pop
jo
jbe
add
shl
push
imul
cmp
pushf
jnp
inc
lds
neg
push
cmp
push
push
jo
ds
lds
jmp
push
cmp
add
adc
sub
sbb
shrd
inc
add
sbb
ret
mov
or
bound
adc
and
retf
adc
lods
sti
(bad)
inc
push
sub
inc
ret
lea
daa
mov
movs
cs
and
test
inc
mov
add
lea
push
add
sbb
xchg
pop
jge
es
adc
fs
inc
jnp
mov
adc
push
push
pop
lds
or
sbb
mov
add
sbb
mov
xor
and
sbb
xchg
jb
dec
push
js
pop
je
retf
push
inc
inc
sub
sbb
sub
pop
sbb
xor
adc
inc
cmp
mov
pop
xchg
ret
stos
je
imul
fdivr
in
(bad)
sbb
sar
sbb
dec
dec
sar
or
shl
or
inc
push
push
lods
sbb
xor
int3
jns
stos
test
daa
push
aad
and
and
loope
mov
(bad)
or
fisttp
int3
mov
add
mov
xadd
jl
xchg
mov
clc
push
add
jg
pop
xor
cmp
inc
sbb
or
mov
mov
cld
add
pusha
xchg
in
and
or
call
jp
inc
dec
xlat
ins
das
inc
push
adc
dec
in
cmp
or
sbb
in
mov
inc
sbb
or
ret
push
mov
pusha
call
sbb
in
dec
xor
js
(bad)
das
inc
lods
add
sub
adc
(bad)
je
xor
cdq
sbb
adc
mov
adc
jne
or
push
rcr
or
lea
add
add
adc
jmp
and
dec
cmp
and
aam
and
fwait
xor
repz
and
adc
pusha
or
or
and
add
mov
call
rcl
mov
add
add
lock
ret
sub
retf
dec
jge
push
inc
xor
jmp
add
cmp
sbb
or
fwait
test
sbb
inc
hlt
fcomp
arpl
fwait
push
in
xchg
push
popa
add
push
sar
or
xor
push
xor
aam
and
sub
sbb
push
adc
and
push
xchg
rol
xchg
and
adc
and
jle
mov
sbb
inc
add
xchg
repz
sbb
and
(bad)
adc
and
clc
dec
and
xchg
imul
jne
inc
add
movs
popa
push
adc
fistp
lds
or
or
pusha
pusha
fisttp
xor
push
sbb
mov
push
add
push
sub
mov
sbb
and
lods
mov
gs
inc
jecxz
dec
pop
push
mov
xor
ret
pop
or
pop
push
pop
and
test
push
jmp
mov
cmp
addr16
popf
pop
pop
adc
aaa
mov
pop
cmp
push
pop
repnz
in
lods
dec
and
push
rcr
mov
rcl
push
jne
add
or
retf
rcr
adc
jbe
je
aas
or
(bad)
inc
xchg
and
ror
push
adc
adc
add
sub
int3
inc
enter
nop
mov
sbb
aaa
inc
cmp
loopne
out
aaa
cdq
add
rcr
rcr
mov
pop
sub
and
mov
mov
xor
stos
pop
pop
les
pop
dec
sbb
sbb
mov
and
dec
ror
push
xrelease
sub
xchg
or
cs
xchg
push
je
push
and
add
inc
jno
std
or
adc
les
pop
enter
mov
inc
sbb
ins
or
xchg
outs
push
mov
xchg
sbb
mov
add
loop
cmc
inc
fcomp
xor
sbb
xchg
xchg
pushf
add
sub
fucomip
xor
add
and
push
sub
or
mov
and
push
mov
and
push
push
mov
add
imul
(bad)
sub
imul
dec
adc
rcl
cwde
lea
(bad)
loopne
and
cmp
xlat
pop
jp
cmp
adc
imul
ror
and
push
mov
jl
dec
xor
adc
adc
loopne
inc
les
mov
dec
inc
add
lds
xchg
js
sub
adc
add
xor
add
test
xor
test
add
fadd
pop
rol
retf
dec
test
push
pushf
push
jle
add
(bad)
in
(bad)
xor
push
pop
mov
pop
sbb
push
(bad)
enter
addr16
jnp
push
das
sub
call
cmp
test
stc
push
aam
sub
jg
ds
push
sub
xchg
(bad)
ins
mov
mov
xchg
test
pop
lea
mov
cmp
test
ss
fild
push
jmp
in
fs
call
call
jns
push
inc
jmp
ror
xchg
lea
jle
lea
xor
dec
xor
and
pushf
push
out
fdivr
jp
sbb
inc
pop
pop
fld
xor
enter
add
ins
and
test
leave
push
xchg
pop
mov
adc
cmc
cmp
ror
sbb
sbb
rcr
add
cmp
lods
cmp
pop
repnz
sbb
and
add
icebp
pop
cmp
or
es
pop
push
sbb
push
xchg
ret
push
add
mov
cmp
pop
ret
adc
sbb
lock
pop
cld
rcr
pop
ret
inc
daa
sti
mov
lock
jne
pop
cmp
mov
sbb
add
sbb
dec
sub
mov
(bad)
test
add
or
sbb
adc
inc
daa
sub
mov
sub
mov
xor
lods
cmp
adc
mov
push
in
pop
cmp
jge
push
xchg
das
or
(bad)
push
adc
and
cmp
test
adc
mov
fsub
movs
jbe
jae
in
lods
inc
stos
rol
adc
push
push
jno
cmp
or
mov
adc
shr
jmp
mov
popa
ret
sbb
or
mov
jno
jmp
jae
dec
mov
aaa
jbe
sahf
dec
cmps
sar
pop
cmps
push
loopne
lock
mov
pop
das
call
sub
mul
aas
sbb
cwde
and
mov
stos
push
sub
inc
jo
sub
jl
aam
and
add
sub
jge
push
pop
add
push
push
jmp
xchg
xor
xchg
ror
outs
push
xor
test
push
sbb
inc
adc
mov
mov
add
dec
add
add
adc
test
add
add
mov
xchg
mov
aad
je
push
or
das
add
inc
sar
inc
out
out
push
sysexit
in
pusha
ror
popa
loope
pop
aas
push
(bad)
jbe
jae
add
inc
push
or
inc
adc
or
das
mov
das
pop
test
add
sub
adc
lahf
pop
fcom
or
sub
test
and
stc
add
jb
mov
sbb
xchg
ror
inc
adc
sub
enter
outs
dec
imul
adc
data16
inc
pusha
jg
jmp
push
xor
sub
movs
test
loope
(bad)
push
jne
mov
xor
clc
add
jmp
scas
lea
push
cmps
sub
add
lahf
in
ret
in
les
mov
stc
cmp
fs
mov
lock
add
out
das
pop
les
dec
rcr
push
js
leave
jo
adc
push
pop
jbe
inc
push
add
and
fcomp
int
cmp
mov
aaa
cmp
and
pop
psubusb
inc
adc
add
retf
mov
sbb
add
adc
data16
inc
adc
data16
xor
ror
das
lods
inc
add
pop
fadd
push
add
mov
mov
xor
push
sbb
or
or
sbb
mov
outs
add
je
(bad)
dec
enter
inc
(bad)
add
ins
popa
sub
call
sbb
sub
mov
imul
dec
dec
inc
inc
mov
push
hlt
xchg
pusha
jl
and
dec
test
outs
ret
js
pop
push
in
add
sar
dec
outs
push
mul
inc
mov
ror
push
pop
jb
aaa
(bad)
sbb
popa
jge
cwde
out
cmp
adc
inc
add
rol
or
xor
or
inc
dec
retf
adc
cmps
jnp
and
aam
add
or
or
icebp
lds
add
pusha
xchg
inc
cwde
mov
xchg
addr16
test
or
(bad)
(bad)
mov
sbb
or
adc
hlt
mov
pusha
adc
in
cdq
cmp
push
mov
rol
jle
jb
or
sub
dec
call
fimul
jge
stc
mov
xor
mov
cmps
das
std
push
sbb
out
jbe
mov
mov
add
fisub
lock
jne
sub
sub
jge
cmp
or
mov
pop
or
shl
(bad)
icebp
sbb
or
push
adc
and
sub
xchg
(bad)
retf
sub
lea
inc
jns
lea
and
nop
push
push
fstp
retf
push
ret
mov
and
or
mov
sub
retf
mov
adc
pusha
loop
stos
push
add
push
mov
mov
dec
dec
xor
push
inc
or
add
dec
jle
push
mov
je
or
leave
push
add
cmp
xor
jmp
bound
push
add
cli
adc
pop
sub
lea
xor
(bad)
pop
test
mov
mov
cmp
popf
add
daa
push
test
enter
and
scas
push
push
xor
mov
xor
pop
push
inc
xchg
cmp
add
push
je
fs
std
retf
pop
rcl
mul
loope
sub
pushf
xor
mov
add
add
push
repnz
add
adc
out
jae
adc
adc
movs
inc
push
jbe
jae
in
add
dec
jbe
jae
inc
clc
or
inc
adc
add
dec
and
sub
cmp
adc
dec
in
push
jae
inc
and
dec
push
and
sub
push
add
and
ins
sbb
inc
and
inc
pop
les
mov
test
inc
(bad)
jmp
adc
xchg
cmc
pop
inc
cmp
lods
inc
adc
or
adc
lods
call
lods
pop
ror
ror
test
lock
in
out
inc
push
mov
cmc
sbb
add
enter
push
cdq
pop
add
adc
add
and
gs
and
dec
sbb
push
add
sahf
mov
add
fs
mov
lods
dec
test
xor
rol
xchg
fistp
jo
test
mov
dec
add
and
inc
sbb
dec
sbb
nop
xchg
call
int3
jge
mov
inc
sbb
lods
adc
push
push
inc
loop
outs
mov
and
cdq
cmp
add
stos
adc
dec
mov
fidiv
add
je
mov
(bad)
adc
mov
pop
outs
push
adc
pusha
addr16
imul
mov
ja
mov
add
xlat
sub
xchg
mov
nop
lods
adc
pavgb
add
inc
std
add
pop
inc
in
inc
js
add
pop
fwait
jp
inc
push
xor
inc
or
add
fnstenv
pop
xchg
pusha
shr
xor
adc
dec
lods
ficomp
movs
inc
mov
push
dec
inc
jnp
retf
jbe
es
sub
mov
cmp
aam
jb
sti
jne
add
pushw
test
les
mov
inc
push
push
sbb
sar
inc
xor
xor
fstp
pop
cld
xor
fisubr
test
sub
jne
in
in
ss
lock
outs
dec
xor
rol
and
adc
pop
test
fidiv
mov
mov
xchg
xchg
sahf
call
or
adc
adc
rol
push
push
jecxz
sub
jns
fs
push
add
ret
inc
adc
imul
add
add
mov
or
imul
ds
push
push
pop
ror
inc
sub
xor
jo
sbb
and
dec
mov
loopne
sub
ret
loopne
mov
clc
ins
mov
(bad)
lahf
(bad)
ins
push
xor
(bad)
ins
and
rcl
bnd
loopne
not
inc
sub
pop
mov
lods
xor
inc
push
inc
aam
rol
add
sub
dec
push
push
push
push
movs
mov
push
ja
jae
mov
or
aas
cmp
cmp
mov
and
imul
push
fst
push
mov
mov
mov
cmps
add
mov
bound
sub
jne
push
sub
cwde
mov
add
or
xor
adc
mov
adc
jg
jp
test
cmp
popf
xor
push
je
and
jp
mov
push
ins
ja
es
push
jle
inc
dec
pop
retf
pop
cmp
add
cmc
mov
ins
mov
cmp
es
sub
cmp
mov
aam
jge
test
fistp
shl
jmp
sub
mov
lock
add
out
mov
out
mov
shl
mov
mov
cmps
cdq
dec
mov
cmps
shr
loop
dec
mov
add
leave
add
xor
mov
outs
mov
out
xlat
test
es
shl
pop
sub
cmp
ret
ja
push
cmp
inc
add
pop
sbb
mov
adc
inc
mov
hlt
sbb
xchg
sbb
in
shl
mov
call
xchg
adc
in
fidiv
push
and
mov
cmc
ror
sub
inc
add
lods
push
pop
call
es
clc
jle
sub
jmp
add
enter
and
and
ror
movs
rol
rcl
or
(bad)
sbb
retf
push
inc
push
outs
dec
mov
add
cmp
jae
dec
jge
out
or
push
add
cmp
ret
jb
or
test
sub
rol
adc
dec
ja
aaa
and
lea
or
lea
mov
add
pop
fidiv
inc
loopne
es
mov
and
push
aad
jl
inc
cwde
xor
(bad)
shr
mov
or
pop
push
inc
sub
mov
jl
jmp
mov
scas
cmp
(bad)
push
rcl
push
test
not
jbe
stos
push
outs
daa
call
mov
adc
mov
stos
inc
aam
aaa
inc
test
adc
(bad)
setb
dec
pusha
iret
clc
jmp
ja
push
or
or
pop
pop
out
add
sti
and
jle
outs
sub
loopne
nop
mul
inc
shl
and
push
sbb
mov
nop
or
xor
aaa
add
(bad)
shl
jns
add
push
hlt
add
ss
test
push
and
sub
pop
aad
rol
test
jne
push
es
fiadd
or
dec
and
ret
mov
outs
mov
add
inc
test
dec
fs
dec
dec
and
test
push
hlt
jne
mov
fadd
and
mov
adc
fiadd
sub
push
in
push
or
jecxz
loopne
dec
cmps
in
add
sbb
xchg
push
adc
sub
cmps
daa
inc
sbb
cld
push
cmps
gs
jmp
les
addr16
push
ror
test
inc
out
inc
std
push
sbb
xchg
xor
sbb
je
mov
or
cs
jge
xor
or
pop
inc
(bad)
push
int3
inc
push
push
jno
jle
cmp
mov
popa
adc
clc
add
loope
mov
sbb
add
mov
jl
xor
and
jmp
movs
xchg
xchg
adc
mov
mov
sahf
mov
fdivrp
es
cwde
fs
lea
push
xchg
adc
mov
add
fbstp
inc
and
xchg
inc
push
cmp
and
cmc
inc
cmp
sbb
cld
je
pop
xchg
sbb
sbb
inc
sysexit
or
pop
sar
mov
fcomp
fcmovnb
xchg
ret
jns
add
cmc
xor
jle
adc
or
movs
adc
add
test
mov
add
in
inc
add
adc
shl
dec
cmps
pop
cld
ja
mov
jmp
dec
es
jmp
sbb
sbb
or
fld
iret
xor
ins
sbb
cld
call
mov
mov
or
in
or
adc
out
dec
adc
ret
pop
and
or
inc
jmp
test
fidivr
add
sahf
mov
enter
mov
aas
inc
push
shr
pop
sub
mov
lods
push
ret
test
pusha
imul
ins
jb
pusha
(bad)
mov
sets
stos
or
or
loopne
jmp
test
pop
sub
adc
inc
cmp
pop
pop
sbb
or
or
gs
dec
call
inc
jecxz
pop
or
cmp
jb
cdq
sbb
dec
fbld
shr
add
sbb
xchg
lock
pusha
call
or
stos
ins
int
fadd
adc
cli
enter
dec
jmp
sub
sbb
cwde
retf
and
fisttp
sbb
inc
sti
mov
pushf
and
add
fisttp
ret
adc
add
mov
sub
pop
mov
cs
jge
add
loop
mov
add
or
dec
pop
leave
les
cmp
shr
sti
ret
(bad)
push
mov
shl
sub
mov
xor
mov
sub
mov
cli
xor
push
and
cli
outs
adc
jl
cmp
adc
neg
div
dec
into
mov
or
hlt
add
sub
mov
and
pop
rcr
fidiv
xchg
stos
je
rcr
mov
into
shr
pusha
enter
push
lock
adc
jmp
or
call
mov
and
cmp
fnsave
outs
fdivp
popf
scas
aam
and
push
call
inc
or
jle
adc
mov
out
or
data16
pop
adc
and
lea
jne
pop
xchg
pop
add
push
sbb
push
mov
jne
imul
or
push
sbb
imul
inc
mov
shr
xor
mov
xor
outs
dec
xchg
loope
xchg
sub
mul
or
xor
scas
rcl
pop
and
inc
or
shl
dec
pop
push
or
inc
mov
clc
fwait
xchg
ror
mov
lahf
movs
pop
retf
sbb
lods
test
jbe
mov
mov
data16
xchg
push
push
or
leave
mov
add
push
nop
retf
mov
dec
imul
add
cmp
repz
xchg
xchg
out
add
dec
add
add
xchg
xchg
xchg
add
xchg
xchg
xchg
or
or
xchg
xchg
xchg
or
add
jo
push
or
scas
and
hlt
or
mov
lock
push
mov
push
dec
jl
mov
icebp
cmp
repz
int3
repnz
lods
or
lock
cli
ja
fs
xchg
adc
push
ins
pop
mov
in
xor
mov
cmp
mov
push
pop
ror
xor
mov
nop
jb
mov
mov
inc
test
and
mov
push
cmp
out
cmp
adc
leave
ret
add
or
test
mov
bound
adc
push
and
sbb
aad
js
jl
sbb
inc
data16
add
sbb
lahf
loope
cdq
push
pop
lds
test
pop
clc
out
pop
loope
sbb
and
add
pop
sbb
ret
jne
push
shr
add
and
push
jmp
mov
or
push
mov
loop
mov
fcom
sahf
addr16
sub
push
push
cmps
fild
jnp
fmul
mov
sbb
test
pop
int3
pop
sbb
fimul
call
or
xchg
adc
dec
mov
mov
sub
add
repz
mov
sub
mov
or
pop
(bad)
adc
xor
dec
sbb
push
adc
retf
push
add
inc
mov
add
pop
aaa
cli
in
pop
jmp
fisub
or
ret
lea
ret
push
cmp
jle
jge
add
xchg
or
or
push
jb
mov
sbb
or
sub
or
mov
cmp
or
cmp
imul
rcl
cld
(bad)
and
mov
adc
inc
sbb
hlt
sub
jbe
iret
ret
or
mov
jmp
jp
or
add
inc
sub
dec
mov
sub
cmp
dec
add
sti
jl
push
mov
sub
pop
pop
and
(bad)
xor
cmp
je
cmp
(bad)
outs
pop
cmp
jne
add
and
adc
mov
rol
or
xchg
add
fst
pusha
mov
test
stos
sti
push
jmp
jae
sub
sbb
sub
add
jmp
outs
or
mov
push
sahf
mov
cdq
jmp
adc
loop
push
sbb
add
sbb
cmp
inc
or
jmp
pop
adc
ficom
rcr
ds
adc
push
mov
jmp
mov
pop
add
sub
push
mov
cmp
jmp
icebp
pop
int3
push
jne
sub
push
mov
sbb
les
sub
add
js
pop
cmp
inc
dec
and
and
add
or
and
sub
(bad)
push
and
dec
sbb
jb
mov
and
pop
jns
das
add
or
pop
xchg
loopne
jmp
mov
mov
mov
inc
sub
inc
cmp
ja
or
out
push
push
mov
sbb
add
call
nop
mov
jl
jle
and
sbb
ret
jmp
lock
add
add
or
pop
adc
xor
sbb
mov
mov
or
mov
fadd
and
cmps
ins
cmp
cmp
bound
sbb
xor
inc
test
add
bound
(bad)
pusha
je
ret
cmc
xor
dec
pop
add
cmp
xchg
xchg
dec
jge
dec
xchg
dec
mov
dec
rcr
stc
stos
ror
mov
out
inc
push
or
clc
pop
(bad)
pop
mov
push
and
ja
test
mov
test
xor
(bad)
jp
xchg
and
jne
sub
xor
cmp
dec
pop
or
lea
jmp
dec
sbb
frstor
jne
or
and
ret
out
jne
add
js
pushf
xchg
movs
jle
or
fisubr
jmp
inc
add
sbb
mov
bound
cs
push
aam
popf
daa
push
repnz
adc
and
(bad)
aad
call
add
adc
or
pop
shr
nop
ret
mov
call
sub
bound
push
js
add
pop
mov
push
add
mov
xor
test
mov
inc
rcr
mov
aaa
in
enter
mov
icebp
cmp
sahf
xor
or
inc
popf
adc
add
sub
add
cwde
in
pop
add
push
push
ja
push
jb
pandn
mov
cwde
or
daa
loopne
push
cmp
outs
lods
retf
ins
pop
cdq
cmps
sar
stos
pop
ins
jbe
inc
shr
dec
scas
jbe
enter
shr
dec
scas
in
fcomp
out
xchg
pop
clc
daa
in
sbb
sbb
sar
dec
imul
cmp
pop
(bad)
adc
mov
fsubrp
inc
mov
sar
jbe
sbb
jbe
jl
sti
jbe
pop
jo
stos
sub
cld
add
inc
pop
cli
nop
jne
sbb
pop
lods
int3
call
dec
fiadd
rol
fadd
xchg
add
jne
int
(bad)
fidivr
jge
pop
dec
and
cmps
pop
ret
retf
test
leave
cmps
repz
mov
pushf
push
int3
fnsave
xor
hlt
pop
sar
cmp
jae
mov
pop
dec
js
jmp
or
add
xchg
cmp
mov
or
mov
mov
pop
adc
cdq
push
pusha
sbb
mov
(bad)
cld
pop
pop
pop
leave
xchg
lods
and
and
add
lock
sbb
dec
js
xor
mov
pop
enter
add
js
dec
sbb
pusha
pop
in
pop
pop
pop
add
nop
pushf
jmp
js
mov
rcl
dec
mov
mov
(bad)
fcom
pop
add
push
mov
add
and
mov
stos
popf
cmp
repz
add
jne
push
sub
mov
cmp
push
adc
pop
adc
ret
jo
stos
fidivr
sub
add
popa
stc
jmp
push
add
pushf
pop
mov
push
push
and
std
mov
and
mov
sbb
fidiv
xor
out
fs
inc
bound
inc
retf
jo
mov
mov
dec
fisttp
add
fadd
jnp
push
ret
mov
pusha
cmp
dec
loop
cmp
or
xor
(bad)
cmps
call
add
and
loop
imul
or
cdq
pop
inc
test
push
daa
dec
push
ret
xchg
sbb
dec
xor
nop
or
(bad)
out
clc
or
mov
cmp
mov
fidivr
or
lds
lods
inc
pushf
jne
push
pop
enter
inc
ja
popa
push
loope
and
dec
jae
add
add
xor
sub
mov
mov
ror
or
xor
push
outs
cmp
and
add
inc
pop
inc
push
adc
mov
bound
pusha
mov
add
mov
arpl
jp
cmps
ins
cld
ds
sti
push
cdq
push
loope
lds
mov
adc
push
mov
inc
lods
aaa
xor
sar
dec
clc
or
and
shr
mov
sbb
inc
adc
mov
sub
add
cld
loope
data16
mov
dec
jmp
sar
xor
push
call
hlt
movs
push
ins
dec
bound
repnz
xchg
imul
add
dec
adc
mov
or
or
js
rcr
sbb
push
js
fdivr
arpl
cmp
xchg
or
pop
idiv
lea
imul
pusha
mov
sub
jae
sub
es
lock
dec
pop
mov
and
jo
outs
dec
rcr
inc
test
mov
mov
je
or
je
mov
inc
inc
add
push
cmc
mov
nop
movs
lahf
sub
mov
sbb
scas
loope
jmp
ds
bound
in
xor
jne
push
ficom
call
out
pop
or
cmp
adc
add
(bad)
mov
cli
mov
rep
out
ins
push
pop
jl
jecxz
inc
sub
mov
adc
pop
push
aad
sub
in
sbb
and
adc
add
scas
or
jge
imul
mov
or
fidiv
icebp
inc
mov
jae
xor
pusha
js
push
add
(bad)
loope
je
mov
aaa
arpl
sbb
dec
cdq
popa
sbb
ror
push
or
ret
mov
stc
ud0
mov
and
pop
in
add
int3
mov
push
adc
add
daa
js
cmps
lods
movs
lods
push
jle
lea
add
je
jle
cmp
lods
mov
in
mov
jle
sbb
mov
cmp
cmps
mov
and
and
cwde
mov
add
daa
loop
xchg
fs
retf
ja
mov
mov
aam
xchg
xchg
and
jmp
mov
not
shr
and
push
fidivr
out
add
mov
inc
lds
mov
dec
dec
jne
mov
inc
and
pop
test
sbb
mov
dec
shr
icebp
mov
fistp
aas
add
sti
push
adc
shr
or
fcom
div
adc
cmp
(bad)
(bad)
push
xchg
out
mov
out
shr
jecxz
sub
gs
pop
mov
out
mov
fwait
aaa
enter
int3
movs
adc
mov
lods
call
adc
push
add
pop
repnz
push
mov
lahf
mov
xchg
xchg
inc
rcr
(bad)
fsubrp
(bad)
clc
icebp
pop
push
mov
mov
mov
mov
pop
movs
dec
or
cs
adc
sub
sub
lock
and
mov
or
popa
jmp
fdiv
mov
retf
popa
daa
outs
inc
shr
cmps
add
rol
xchg
xor
ins
or
jns
jmp
jnp
ret
add
or
or
int3
add
push
fst
dec
ja
mov
jbe
jo
xchg
mov
nop
popa
ja
jno
adc
add
mov
xchg
pusha
and
add
dec
mov
fnstsw
push
cmp
pop
or
cmp
push
sub
xchg
sbb
and
jge
imul
mov
lock
push
cmp
xlat
and
push
mov
mov
in
push
loop
(bad)
or
xor
nop
fadd
add
xchg
sbb
mov
fwait
loop
mov
push
and
mov
or
imul
bound
dec
adc
xchg
xchg
cmc
dec
cld
adc
dec
sbb
rcl
jmp
adc
push
jle
or
fwait
adc
call
(bad)
(bad)
sti
jbe
mov
je
pop
add
(bad)
push
xor
mov
sub
inc
pusha
sbb
add
push
add
out
outs
or
fs
sub
add
loopne
jo
rol
(bad)
xchg
pop
inc
lods
pushf
mov
imul
loopne
ins
add
inc
push
jle
or
push
xor
(bad)
test
hlt
fcom
pop
sbb
in
mov
loop
in
sub
push
xor
mov
add
adc
leave
fs
pusha
not
out
repz
es
xchg
push
adc
push
lea
add
inc
movs
mov
mov
cmc
scas
test
data16
ror
or
ret
jl
pop
cmp
and
sub
shl
ins
outs
loop
jg
or
mov
mov
pop
ret
jae
sub
sbb
ret
xchg
popa
movs
ins
pop
ret
xchg
xchg
push
or
push
rcr
test
sub
and
aad
xchg
lods
inc
cmp
xor
pop
dec
les
fnstsw
ret
rcl
mov
inc
add
pusha
test
push
outs
fldcw
mov
or
enter
sub
push
push
shl
dec
or
imul
loopne
push
mov
in
xor
repz
add
pop
daa
adc
add
adc
add
dec
ret
dec
sbb
mov
scas
and
outs
add
mov
adc
or
xor
xor
inc
mov
cmc
jmp
add
popf
inc
xor
or
sub
ins
int3
or
out
and
mov
push
or
or
xor
loopne
push
jne
sub
xchg
mov
adc
xchg
test
adc
add
cmp
sub
pop
dec
add
cmps
rol
xor
adc
or
js
shr
and
inc
lock
pop
push
xor
add
xor
in
mov
pop
out
in
cmp
and
dec
add
jnp
shl
sbb
dec
adc
test
loopne
push
stos
and
inc
call
adc
inc
xchg
test
xor
adc
test
jo
or
add
enter
or
stos
mov
push
add
xchg
pusha
inc
sub
dec
push
out
data16
cmps
call
sub
std
icebp
inc
sub
dec
cmp
stos
sub
lea
jge
test
dec
and
not
jle
es
mov
in
sub
popf
dec
cmp
lea
popa
xor
scas
xor
xchg
mov
inc
pop
pop
mov
jge
jmp
sub
adc
fnstsw
popa
mov
sbb
and
jne
or
sub
cmp
dec
jno
and
mov
pop
and
add
sub
pop
dec
movs
or
jo
xchg
jno
add
xor
movs
dec
push
push
and
jnp
js
push
and
lds
sbb
jmp
call
lahf
sbb
and
test
xchg
push
pop
jbe
cmp
mov
into
dec
cld
aas
or
inc
push
xor
lahf
and
and
sbb
dec
add
fldcw
push
mov
cmps
and
lock
push
test
or
loope
add
in
fdivr
mov
push
addr16
stc
xor
dec
sub
jns
sub
js
aas
push
cmp
pop
mov
mov
test
or
mov
sahf
or
inc
lock
xor
retf
cmp
or
imul
rol
xor
inc
dec
lock
mov
mov
add
and
test
or
push
call
mov
outs
movs
or
cld
or
xchg
cmp
add
inc
pusha
and
cld
add
mov
jb
sbb
dec
je
mov
js
add
cmp
cmp
(bad)
fild
sub
std
adc
je
rol
cld
call
lods
push
loopne
add
pop
in
inc
fmul
push
add
ret
cmp
mov
sub
mov
into
mov
rcl
shl
or
inc
xor
push
(bad)
pop
or
call
daa
mov
xor
fistp
sub
shl
jb
pop
add
shl
xchg
fadd
stos
sahf
inc
mov
sub
cmp
movs
dec
cmp
xchg
pop
in
adc
lds
leave
pop
(bad)
shl
dec
fs
and
push
aaa
cmp
je
test
pusha
loop
test
add
dec
jne
fs
and
inc
sar
inc
add
cmps
repnz
pop
mov
xchg
add
or
clc
jno
mov
ror
mov
test
lahf
adc
enter
js
adc
add
push
push
lahf
inc
jp
dec
cld
out
outs
fld
cmp
or
ret
mov
fwait
(bad)
adc
jne
mov
mov
pushf
xor
add
fsubr
jbe
je
scas
loope
add
jne
fwait
jo
(bad)
sbb
dec
push
sbb
aas
add
jnp
pop
inc
inc
pop
jp
sbb
daa
xor
lods
or
mov
test
xor
movs
pop
rcl
ss
add
cmp
push
inc
pop
inc
pop
aas
dec
pop
in
add
dec
or
jl
sbb
add
call
inc
mov
cs
shr
or
jmp
les
out
xchg
pop
dec
test
add
or
jb
leave
imul
mov
data16
dec
jbe
daa
add
xchg
jge
push
sub
clc
add
test
and
ret
sub
pop
and
adc
mov
and
or
stos
adc
cwde
fimul
adc
inc
ror
into
push
(bad)
add
jae
(bad)
nop
mov
call
cmp
cmp
adc
push
add
mov
add
sbb
lea
(bad)
dec
lock
mov
in
add
push
aad
mov
adc
ror
jne
cmc
add
shl
test
push
sub
jbe
inc
test
test
add
mov
add
and
mov
inc
jmp
cmps
inc
mov
(bad)
ret
not
mov
cmp
mov
adc
and
rcr
inc
icebp
daa
sub
jne
or
jbe
jno
jb
add
les
jo
lock
aaa
stos
jle
and
jmp
(bad)
aam
ds
rcl
sub
arpl
fnstcw
(bad)
mov
push
dec
or
or
pop
mov
clc
add
push
add
adc
jecxz
xor
add
adc
inc
pushf
retf
dec
clc
fwait
inc
jl
push
xchg
jge
mov
add
add
inc
bound
fisttp
xchg
jle
cmp
and
and
das
xor
adc
or
xor
aaa
in
loop
xor
adc
aas
adc
xor
fcomp
int3
pusha
stos
sbb
sbb
mov
test
pop
and
add
test
add
push
cmp
je
dec
clc
test
fimul
bnd
inc
sub
dec
mov
jp
pcmpeqw
adc
push
mov
adc
add
ss
int
push
mov
xchg
mov
ins
(bad)
inc
das
adc
ins
sub
dec
popa
mov
mov
hlt
ror
int3
ds
loope
js
out
push
pop
lods
retf
add
dec
or
or
pop
into
jge
mov
rcl
pop
push
jecxz
stos
mov
dec
dec
add
les
or
js
sub
add
inc
cmp
ret
call
pop
mov
mov
sahf
call
rol
add
pushf
(bad)
mov
mov
jmp
cmp
push
add
xor
pop
div
outs
mov
adc
pop
push
dec
mov
sahf
jae
push
nop
push
data16
lock
mov
add
cld
sub
js
mov
push
leave
jae
clc
ret
out
or
lock
shl
pop
xor
or
mov
cmps
or
loope
push
jnp
jae
fstp
push
xchg
ret
shl
add
jb
xchg
jl
xchg
rol
push
sbb
add
sbb
outs
and
dec
aaa
pop
arpl
cmps
push
pop
push
pop
push
dec
in
and
jbe
add
or
jb
and
or
dec
shr
push
dec
sub
adc
das
cs
mov
inc
mov
popf
add
inc
mov
std
push
fsubr
es
rol
jmp
inc
add
ret
jo
mov
push
ret
jbe
mov
push
sub
push
cmp
pop
and
inc
xchg
xlat
and
in
cmps
scas
(bad)
popf
jge
sub
mov
lea
call
imul
sub
pop
mov
shr
mov
dec
push
sub
mov
test
sbb
pop
inc
rol
pop
or
xchg
add
loope
pop
mov
jbe
leave
and
leave
clc
mov
push
hlt
and
adc
daa
lock
adc
cld
add
or
fisubr
cwde
and
pop
icebp
or
dec
cwde
mov
mov
or
pop
push
mov
inc
fmul
out
sub
cmp
(bad)
jge
mov
aas
mov
lock
sti
pushf
ret
pop
push
pop
lea
mov
push
rep
xchg
lock
sbb
push
and
xchg
mov
mov
popa
pop
dec
push
ror
add
push
(bad)
sub
xchg
cmp
jl
pop
push
push
imul
adc
cmp
jmp
rcr
int3
push
lds
and
add
inc
and
inc
test
mov
dec
enter
add
cwde
ffree
add
fisubr
inc
mov
xor
loop
and
push
out
ins
and
or
push
fs
pusha
sbb
retf
sub
call
rcr
adc
mov
or
movs
dec
add
rol
push
ins
inc
mov
sbb
add
inc
in
mov
or
inc
ins
inc
fnstsw
pusha
enter
and
jmp
pop
and
xchg
test
mov
inc
jl
add
xor
cwde
xchg
mov
sti
je
addr16
and
nop
sbb
sbb
xor
pusha
push
les
test
and
pushf
inc
dec
xchg
adc
xchg
call
mov
xor
add
mov
cmps
push
adc
test
xlat
xor
add
clc
mov
(bad)
fild
xor
pushf
ss
cmp
cs
outs
ss
pushf
ficom
cmp
imul
pop
mov
(bad)
rol
add
or
dec
jecxz
add
jmp
int3
or
and
out
add
nop
data16
repnz
xlat
adc
or
ins
fwait
push
inc
dec
shl
fnsave
jnp
ret
pusha
es
test
jle
cmp
push
add
(bad)
je
xchg
test
cmp
xor
push
xor
movlhps
mov
(bad)
fidivr
inc
jb
mov
movs
int3
fsubrp
and
cmp
mov
or
fiadd
or
das
push
mov
xor
sbb
push
push
(bad)
adc
add
ficomp
add
sub
ins
mov
mov
add
pop
or
mov
xor
push
es
pop
inc
pop
inc
rol
adc
add
sbb
(bad)
pop
ss
inc
push
push
(bad)
push
movs
mov
and
(bad)
(bad)
stos
jmp
mov
arpl
cmp
add
jnp
jo
sti
in
fnstcw
int3
xlat
xor
cmps
je
xor
sbb
shr
lea
out
pop
es
or
sub
inc
fiadd
mov
sbb
(bad)
adc
add
stc
ficom
sbb
sub
adc
mov
jnp
(bad)
cld
gs
mov
adc
pop
mov
add
call
inc
or
mov
sbb
inc
add
cmp
cmc
fs
clc
add
fsin
pop
jne
inc
sub
cmp
add
jmp
mov
repz
dec
dec
ret
add
and
sbb
mov
ret
(bad)
cmp
lea
aad
adc
add
test
add
push
aam
push
or
push
sbb
rcr
add
daa
mov
aaa
push
ror
add
fidiv
clc
leave
add
rcr
cmp
jge
or
push
in
jmp
and
shl
lods
cmp
pop
pop
test
test
or
fdiv
fild
jg
mov
pop
cmp
add
fisttp
sbb
mov
pop
lock
add
ror
daa
clc
add
adc
xchg
lock
jbe
jno
(bad)
push
push
loope
es
div
je
js
and
xchg
adc
int3
and
jecxz
add
jmp
push
add
inc
sbb
or
dec
popa
jmp
xor
jl
retf
jbe
push
jne
lea
clc
(bad)
add
xor
inc
jne
test
sub
or
cmp
jne
inc
push
dec
test
les
test
add
add
lds
mov
stos
or
adc
stos
push
sub
inc
push
lahf
(bad)
xchg
sti
and
cmp
shr
add
cmp
ret
fadd
out
mov
mov
mov
cmp
not
sar
inc
sbb
mov
cwde
dec
jmp
pushf
and
ja
sbb
xchg
mov
ja
mov
add
dec
jne
adc
(bad)
mov
mov
ins
inc
mov
mov
jecxz
mov
fisubr
jle
shl
test
lods
adc
xor
pop
sahf
scas
inc
fdiv
mov
pop
retf
(bad)
out
cld
jmp
pop
add
lea
push
mov
aam
xor
pop
rcl
or
es
and
ja
mov
mov
ins
jge
sub
cmp
rcl
sbb
arpl
pushf
pusha
xchg
movs
rol
or
add
mov
add
add
in
or
add
pminub
mov
loopne
jo
cmp
push
xchg
scas
add
add
push
mov
mov
(bad)
dec
(bad)
pusha
cdq
add
addr16
ret
stos
arpl
pop
adc
aas
mov
push
mov
adc
dec
aaa
mov
xchg
adc
ss
and
jecxz
mov
pop
push
ja
adc
cmc
mov
or
push
cdq
inc
jmp
push
and
add
sbb
sub
dec
ror
cmp
xor
jo
mov
add
or
or
pusha
or
xor
push
sbb
sub
outs
and
push
mov
aad
inc
or
inc
push
sub
dec
inc
xor
xor
inc
sub
xor
jb
sub
xor
push
and
cwde
fs
scas
data16
push
push
xchg
inc
xor
add
dec
and
xor
ror
mov
xchg
xchg
mov
fsub
les
sub
push
enter
inc
or
jg
int3
sub
fisubr
add
fld
test
push
inc
and
hlt
lock
jo
xor
add
or
push
loope
bound
movs
jbe
inc
inc
xchg
push
sub
pop
xor
jne
xor
mov
add
js
xor
push
xchg
(bad)
jbe
push
pop
(bad)
push
add
adc
push
xchg
movs
and
leave
adc
sbb
lods
adc
and
lods
cmovnp
push
lock
sbb
add
pop
lea
add
push
fst
pop
pop
movs
std
mov
inc
jo
jmp
inc
push
adc
mov
push
les
movzx
fld
push
sub
push
mov
clc
pop
sbb
lea
mov
jne
dec
push
mov
sbb
rol
inc
je
sbb
push
inc
pop
adc
gs
mov
add
stos
test
loopne
adc
retf
push
mov
je
icebp
dec
jecxz
clc
inc
inc
xchg
les
xchg
push
add
imul
or
aaa
in
push
daa
sbb
in
mov
jns
push
ja
adc
stos
into
outs
jne
mov
loopne
fwait
add
dec
mov
out
push
pop
mov
mov
ins
and
enter
in
cmp
sti
cmc
pop
loopne
enter
sbb
mov
add
aas
dec
or
aam
and
push
jbe
push
mov
pop
mov
xchg
mov
inc
lock
mov
leave
xchg
xchg
xchg
movs
test
cwde
cdq
push
mov
test
or
push
and
or
popa
fild
add
mov
jl
push
cmps
rcl
inc
or
add
sbb
and
adc
xchg
jg
cmp
mov
lods
test
and
add
push
add
mov
cwde
pusha
jmp
push
adc
jae
pushf
ins
pusha
push
iret
stos
and
xchg
inc
pop
jo
add
dec
mov
jne
or
ds
push
and
or
add
fiadd
cdq
(bad)
dec
cs
add
xchg
pop
or
jns
adc
add
pop
sbb
lods
sbb
xor
cdq
push
add
js
dec
std
loopne
push
add
xor
mov
sub
fdivr
adc
xor
or
pop
in
stc
pop
pop
mov
movs
popf
jmp
or
bound
adc
pop
loopne
push
pop
rcr
lds
ret
add
add
push
loopne
adc
cwde
or
push
dec
cmc
aam
mov
mov
loopne
sbb
enter
push
push
stos
add
jl
lods
or
and
and
loope
cwde
outs
add
test
cmps
mov
dec
pop
in
jb
xor
push
xor
xchg
add
add
add
sbb
pop
call
mov
cdq
inc
mov
and
pop
data16
jb
jb
pop
xor
xor
push
push
mov
and
mov
xchg
cmp
push
movs
jmp
rcl
outs
ret
xchg
lods
pop
loope
cdq
mov
xor
ss
mov
mov
sti
add
xor
sub
mov
nop
mov
mov
fld
jo
add
adc
pop
shl
mov
dec
leave
retf
sbb
inc
movs
dec
lods
push
bound
xchg
fs
xchg
or
mov
sub
xchg
les
mov
mov
rcl
xor
mov
test
add
shl
pop
fnstsw
inc
or
push
cld
imul
or
push
or
or
clc
cdq
pop
inc
add
or
icebp
push
clc
fst
enter
add
pop
fistp
imul
pushf
test
xchg
je
fist
call
sub
and
push
or
sub
adc
lods
inc
das
popa
and
jo
aad
or
xchg
mov
and
sub
aas
and
mov
xor
xlat
into
jge
rcr
and
add
mov
sub
or
dec
pop
lahf
dec
lea
push
test
mov
daa
out
ror
mov
mov
mov
sbb
adc
mov
inc
imul
adc
(bad)
push
into
pop
add
loopne
jne
test
inc
inc
and
outs
cli
popf
lahf
add
pop
movs
arpl
inc
dec
jmp
jge
cmp
movs
sar
inc
dec
das
mov
pop
mov
jge
loope
xchg
and
mov
dec
enter
scas
sub
(bad)
sub
add
mov
jmp
push
xor
sbb
mov
inc
mov
cmps
dec
mov
aas
push
pop
add
movs
or
call
popf
ror
or
add
add
ret
add
sub
sub
hlt
add
(bad)
mov
mov
add
add
(bad)
jge
or
jge
add
cs
in
push
mov
loop
(bad)
test
push
add
jae
add
or
fsubr
(bad)
in
icebp
push
test
add
fmul
sub
dec
add
test
xchg
data16
sub
add
retf
movs
add
fld
sbb
adc
and
clc
and
not
shr
out
adc
cmp
popa
cwde
pop
push
inc
call
or
rol
inc
and
std
pushf
xchg
ficomp
iret
jne
cmp
xor
xchg
pop
rcr
pop
test
push
push
fdivr
lea
lea
adc
retf
pushf
test
push
je
mov
leave
pushf
popa
pop
retf
pop
inc
inc
adc
cmp
jl
out
push
or
push
sbb
push
enter
dec
rcr
pop
and
mov
pushf
sbb
pusha
add
adc
retf
push
mov
xchg
pop
mov
ins
sub
imul
scas
and
sbb
dec
enter
aam
cmp
and
and
ud2
adc
inc
cmp
mov
out
cmp
cmps
dec
dec
push
sub
mov
or
xchg
add
js
and
cmps
js
pop
xchg
popf
mov
scas
or
addr16
xor
retf
addr16
lea
sub
adc
sbb
mov
pusha
push
std
dec
movs
cmp
jo
and
test
or
outs
jbe
xchg
sbb
ins
pop
nop
jmp
in
pop
pop
nop
or
mov
scas
sub
add
sub
push
push
fwait
push
add
or
lock
mov
mov
xchg
add
mov
movs
bound
cli
bound
ret
jne
mov
adc
push
or
pop
push
pop
scas
cmp
ja
xor
push
pop
rcl
ret
stc
add
sbb
xchg
sub
sbb
cmp
mov
adc
and
dec
jb
xor
cmps
repnz
xor
xor
bound
(bad)
xor
rcr
or
dec
stos
ret
or
cdq
popa
push
shl
cmp
ror
jno
sbb
or
jno
fadd
mov
push
xor
and
lods
(bad)
push
jecxz
jmp
dec
push
xchg
rol
jg
jge
dec
add
mov
cmp
cs
mov
push
adc
jo
sbb
les
test
mov
sbb
loopne
outs
fild
loopne
or
push
or
iret
popa
mov
push
retf
and
pop
adc
shl
nop
xor
cmp
jo
nop
and
ud1
rol
push
mov
nop
retf
and
in
enter
or
loopne
call
mov
cmp
xchg
inc
add
push
xchg
arpl
and
fwait
call
in
dec
mov
les
inc
xchg
movs
mov
(bad)
mov
dec
adc
mov
xchg
add
push
jae
sbb
sub
pmullw
add
rcl
ret
ins
test
and
sbb
ficomp
inc
dec
mov
xor
cmp
pop
inc
inc
fisttp
inc
and
mov
cmps
mov
or
stos
in
pop
mov
push
xor
fs
(bad)
mov
and
adc
test
or
ins
pushf
cld
test
cld
jne
icebp
fbld
mov
push
sub
mov
arpl
popa
dec
ss
push
xor
dec
popf
or
fwait
ret
mov
inc
and
push
ret
pop
dec
pusha
add
adc
aaa
adc
push
ss
std
bound
cmp
inc
push
and
test
pop
imul
pop
das
(bad)
mov
pushf
mov
sahf
mov
cdq
add
out
cwde
sub
and
pop
loopne
push
jns
enter
and
push
call
or
loope
cwde
mov
out
lock
ret
pop
add
mov
int
lock
mov
scas
mov
mov
dec
loop
or
bound
outs
add
fwait
xchg
and
add
cmp
shr
cdq
inc
add
sub
mov
adc
mov
mov
add
fiadd
pusha
xchg
dec
mov
js
or
fs
pop
or
dec
jb
aam
dec
mov
or
push
add
or
sub
mov
or
and
nop
sub
hlt
mov
in
mov
fwait
add
mov
jae
cwde
inc
push
sbb
(bad)
js
jo
sub
adc
fst
push
push
cmps
ss
pop
fnsave
adc
cwde
xchg
dec
sbb
dec
xor
mov
fcomp
push
sbb
cwde
sbb
or
sahf
sub
push
adc
pop
iret
fwait
pop
adc
push
(bad)
aas
xchg
and
aad
jmp
loopne
lods
xchg
jne
rdmsr
inc
xor
clc
imul
mov
add
loopne
je
pop
mov
popa
sbb
add
pop
daa
shl
add
pop
add
daa
inc
les
inc
jnp
xchg
pop
das
std
rcl
pop
add
call
push
xchg
fisttp
adc
pop
pop
or
pop
push
push
inc
push
push
dec
add
or
or
jmp
push
fbstp
xchg
adc
dec
or
lods
test
xor
inc
cmp
push
shl
aaa
test
ret
adc
mov
xor
fld
mov
sub
mov
call
je
adc
fwait
adc
mov
rol
test
push
jp
ret
jmp
loope
rol
or
inc
mov
int
xchg
xor
in
add
jne
push
push
and
adc
inc
jno
xchg
or
adc
stos
and
xchg
sub
push
movs
adc
daa
xchg
sub
add
xchg
sub
add
(bad)
icebp
mov
mov
loopne
or
or
mov
or
cmp
add
push
and
(bad)
xor
pop
push
fst
xchg
adc
push
pop
sbb
mov
add
and
mov
ror
adc
mov
sbb
inc
push
imul
mov
or
pop
pop
rcl
loopne
daa
aaa
inc
xor
sub
and
xlat
adc
xor
xor
sti
or
(bad)
or
adc
loopne
sub
fnstenv
mov
xchg
mov
das
adc
or
add
push
mov
imul
push
or
adc
jo
shl
inc
push
pop
push
sbb
ror
add
sub
pop
test
or
jne
mov
int3
xor
sbb
int3
and
ins
xor
lds
cmps
or
add
add
mov
int
jno
mov
inc
mov
add
add
ret
jge
sub
mov
push
mov
inc
mov
jmp
pop
rcr
out
mov
les
add
mov
gs
push
add
test
mov
sbb
into
sub
mov
sbb
add
or
jl
ret
lahf
xchg
mov
or
cmp
xor
or
retf
lods
inc
xor
or
jge
cmp
xor
lods
jbe
push
push
pop
fstp
and
and
into
push
or
test
stos
xor
call
xchg
add
movs
clc
or
mov
add
and
pusha
ja
enter
sbb
or
mov
cld
push
push
or
into
and
inc
mov
jg
jg
scas
adc
pop
push
push
adc
add
nop
or
cmp
inc
es
adc
cdq
nop
or
fs
cs
and
adc
mov
in
cmp
repnz
es
cld
mov
mov
mov
push
les
aad
aam
rcr
dec
inc
rcl
jae
mov
pop
shl
dec
push
rcl
test
test
mov
popa
movs
nop
sbb
add
adc
inc
gs
shl
or
pushf
pusha
cli
push
jg
push
push
std
jne
mov
int
or
pusha
add
retf
jecxz
cmp
pop
mov
inc
sar
mov
call
mov
gs
enter
mov
lods
jbe
pop
pop
push
push
jmp
push
push
sbb
js
pusha
and
and
mov
enter
xor
aaa
xor
js
jae
das
push
and
mov
les
and
ret
mov
mov
pop
mov
mov
or
pop
or
aaa
xchg
or
stos
add
daa
lods
pop
mov
cdq
and
mov
inc
int
jmp
and
in
cld
or
mov
dec
test
imul
cs
jo
cmps
fs
xor
jl
mov
push
mov
xchg
daa
xor
inc
cmp
mov
in
and
loop
mov
push
or
sbb
sub
pop
test
imul
sub
cmp
xchg
pop
jmp
add
iret
jmp
loopne
mov
in
ds
stc
sbb
int3
add
mov
movs
add
sbb
pusha
push
push
lds
sbb
imul
mov
int3
int3
aas
or
and
cdq
(bad)
(bad)
aam
rol
ins
jge
fld
iret
test
or
int3
and
add
or
cmps
or
adc
add
test
inc
xor
cmp
sub
dec
xchg
out
mov
xchg
jno
das
das
jmp
in
dec
add
and
push
and
xchg
xchg
xchg
mov
test
pop
ret
pop
lods
inc
cmp
nop
outs
jg
cmps
mov
mov
sub
jmp
sar
add
cld
loopne
test
dec
out
mov
push
popa
dec
mov
adc
shl
add
cdq
ret
lock
sbb
lods
les
movs
aam
nop
sub
jecxz
(bad)
add
mov
mov
(bad)
dec
sbb
jns
dec
dec
mov
push
pop
add
xor
xor
adc
or
inc
lds
or
pop
jo
sbb
lds
sti
jge
sbb
scas
mov
inc
add
mov
add
push
out
and
je
push
add
inc
jge
retf
adc
js
mov
call
mov
repnz
clc
xor
ret
adc
add
pop
mov
xchg
adc
es
mov
clc
ss
cmp
mov
push
aad
jbe
fcom
mov
stos
push
adc
and
dec
std
outs
adc
sbb
dec
add
mov
xrelease
sbb
(bad)
jo
dec
test
mov
js
sbb
inc
xchg
mov
shr
std
retf
lea
pop
mov
or
lods
sbb
add
jle
repz
cmp
mov
sub
or
add
in
pop
sub
test
push
add
jb
movs
and
and
mov
clc
imul
jnp
rcr
mov
sbb
xor
pushf
psubusw
mov
adc
stos
or
sub
or
mov
test
add
jecxz
ret
bound
jecxz
mov
adc
jne
pop
ss
enter
sbb
(bad)
mov
push
or
sbb
retf
sahf
add
inc
pop
xchg
cmp
or
mov
adc
aas
lods
movs
push
mov
int3
jecxz
pop
jl
cmp
cmp
enter
fs
movs
test
je
adc
push
pop
and
dec
movs
xchg
(bad)
mov
shl
lock
sbb
loope
push
push
test
pop
or
shl
jecxz
gs
jg
push
stos
dec
loop
sub
dec
das
adc
cmps
mov
add
and
shl
jae
movs
jae
mov
mov
dec
test
push
mov
cdq
cmp
push
mov
mov
add
jmp
pop
fwait
jmp
pop
add
adc
js
adc
sbb
movs
push
and
jg
test
xor
pop
call
and
xor
dec
lahf
xchg
pusha
rol
sub
outs
mov
mov
push
push
imul
sub
mov
pop
sar
shr
(bad)
fadd
inc
aas
adc
and
jae
push
xor
int3
sar
and
and
lea
or
loopne
pushf
add
retf
cmp
push
mov
jmp
cmp
cs
push
adc
lods
loopne
ret
aam
sub
add
retf
dec
enter
xchg
xor
fstp
and
push
jmp
retf
lods
add
and
int
pop
mov
mov
push
mov
jmp
test
mov
sub
push
adc
mov
sbb
xchg
sbb
lahf
les
pusha
and
cmp
push
aam
adc
mov
sbb
and
cmp
dec
add
pop
rep
xor
popa
lods
fwait
sbb
sub
out
fs
stos
push
and
(bad)
add
xchg
or
push
in
rol
jmp
in
out
fadd
stos
loop
pop
ret
fbstp
and
clc
and
inc
or
push
fbstp
push
js
aam
and
mov
add
fld
cld
cwde
lock
stos
jmp
jmp
xor
das
daa
xor
sbb
loop
adc
or
mov
dec
pop
cmp
jnp
push
cld
mov
in
mov
push
dec
jge
or
sub
or
jle
and
jl
mul
mov
sub
ja
push
jbe
pusha
mov
ret
pop
xor
and
and
mov
mov
movzx
mov
push
pop
xor
enter
jno
les
cld
stc
int3
int3
pop
or
jle
dec
push
ja
mov
leave
sbb
or
lock
pop
sti
push
or
sbb
pop
or
or
cmp
inc
or
imul
add
add
div
add
add
adc
pop
or
pop
ret
inc
push
and
mov
adc
loopne
lock
add
xor
inc
adc
or
sub
inc
mov
jecxz
mov
ret
pop
pop
or
loopne
mov
cld
cld
daa
or
movs
cmp
add
mov
aam
pop
mov
sub
jmp
sub
add
test
loope
add
add
mov
add
pop
js
adc
cmp
cmp
pop
call
clc
mov
aas
(bad)
aam
push
jmp
rol
into
in
jp
dec
push
jmp
lock
push
adc
or
cwde
sbb
clts
mov
sti
imul
add
or
addr16
or
pusha
nop
add
cmp
sar
iret
test
pop
cwde
loope
push
lock
mov
xchg
mov
ror
push
(bad)
ror
or
pop
and
cli
sub
fdivr
das
cmps
sbb
add
pop
add
or
and
adc
and
cmp
push
fiadd
pop
push
loopne
xchg
mov
push
mov
pop
push
inc
dec
inc
or
hlt
test
inc
or
and
test
push
add
cmp
sub
in
xchg
cdq
dec
and
ror
xor
adc
or
xor
aas
lahf
adc
pop
movlps
cld
inc
cmp
clc
clc
aas
sbb
ret
add
push
sbb
bound
add
sub
or
add
pop
or
sbb
sbb
js
stos
mov
and
in
std
or
xchg
or
and
in
and
adc
loopne
sti
mov
inc
test
clc
je
add
lea
add
jbe
(bad)
lock
sub
scas
cld
jge
bound
sub
cmp
add
mov
push
test
or
es
pop
pop
cmovs
mov
or
test
test
jmp
ror
jnp
xor
or
sub
sbb
mov
je
mov
loop
rcl
xlat
sbb
fsubr
xor
out
xchg
push
nop
inc
addr16
and
inc
cmp
pusha
rcl
mov
fisub
shl
sub
dec
push
add
addr16
int3
dec
push
wbinvd
dec
in
add
movs
add
jle
lock
and
push
mov
mov
out
add
or
add
cmp
adc
add
push
lods
fistp
jl
add
cmp
add
je
add
add
mov
pop
and
loop
pop
rcr
push
xchg
fild
inc
adc
xor
nop
push
jbe
xchg
cmp
sbb
in
fsubr
or
inc
add
sub
ins
sbb
cmps
add
or
pop
add
inc
xlat
jp
jg
mov
mov
(bad)
fistp
dec
jb
dec
jg
out
ret
push
xchg
inc
adc
popa
imul
jl
push
ror
jecxz
adc
lea
adc
bound
or
mov
ins
sub
imul
shl
lods
loope
inc
xchg
fldcw
push
cmp
pop
adc
cmp
dec
push
dec
inc
mov
inc
ret
call
sbb
add
sub
mov
push
(bad)
pop
pop
fsubr
lahf
fistp
push
xor
lods
pushf
dec
jg
jge
fdivrp
inc
jecxz
add
add
or
dec
jbe
sar
add
(bad)
es
sbb
cld
mov
adc
stos
dec
pop
pushf
mov
push
push
or
out
loopne
rol
xor
jnp
add
mov
or
cmp
ss
dec
cmp
xor
inc
dec
mov
or
sbb
xor
cwde
js
xor
cdq
jp
add
xor
cmp
and
fcmovnu
cli
push
les
or
push
add
mov
mov
dec
add
cmp
std
call
inc
stos
xchg
rcr
mov
dec
cmp
pushf
dec
pop
or
out
sbb
lods
or
call
add
test
push
dec
push
pop
mov
or
mov
adc
adc
push
mov
push
dec
push
call
mov
inc
and
daa
mov
dec
mov
add
dec
mov
push
xchg
ret
sbb
dec
test
ret
movs
aas
add
inc
jbe
sbb
loope
mul
xchg
scas
adc
cld
(bad)
mov
push
push
dec
adc
test
inc
mov
or
cmp
rcl
adc
mov
test
inc
mov
inc
jb
adc
arpl
hlt
cli
mov
inc
pop
dec
sub
mov
and
jns
xor
xchg
push
retf
js
shr
(bad)
cmp
ror
test
jg
fstp
mov
in
mov
or
and
movs
rcr
jae
sbb
inc
pop
inc
push
rcl
shl
jns
test
or
movs
test
setb
aaa
icebp
aas
mov
mov
add
or
xor
(bad)
loopne
mov
out
or
je
mov
push
int
inc
addr16
add
sub
xor
pop
xor
dec
inc
or
add
and
dec
pusha
ja
inc
ss
(bad)
jnp
add
leave
lock
lods
jecxz
mov
pop
add
jbe
stos
ret
push
pop
mov
jecxz
mov
cs
push
cmps
add
xchg
mov
add
aas
ror
or
cmp
or
je
jge
loope
pusha
inc
fisttp
sbb
pop
(bad)
hlt
cmc
pop
xor
pusha
in
pop
pop
(bad)
xchg
aas
jb
jl
adc
push
sbb
push
mov
jmp
cmp
mul
pop
test
add
pop
jmp
mov
loop
loop
push
ret
or
je
pushf
xor
scas
fistp
test
scas
out
push
adc
jmp
jmp
inc
cmp
(bad)
test
and
pop
push
jge
mov
daa
add
test
test
jge
xchg
push
and
ins
cld
mov
cmp
test
in
dec
cmp
xor
scas
adc
ins
rcl
out
push
test
cld
je
comiss
mov
aam
add
inc
adc
adc
xchg
or
les
cld
push
jmp
scas
pushf
pop
(bad)
loopne
inc
mov
xor
mov
jne
add
mov
sahf
mov
nop
dec
adc
cmp
loopne
xor
popf
adc
lods
test
add
dec
push
jae
push
js
cld
push
or
mov
rcl
push
adc
mov
push
sbb
add
jp
jnp
data16
arpl
inc
lock
jmp
jns
add
ret
or
mov
adc
je
test
fist
pop
add
daa
loope
or
push
test
sbb
fisttp
sub
icebp
dec
push
lock
lock
jmp
add
and
lahf
xor
aas
sub
sbb
sbb
retf
lock
lods
jge
mov
cmp
xchg
sar
repz
jb
fadd
jmp
in
(bad)
push
ss
jne
dec
sub
adc
clc
call
(bad)
shr
cld
and
adc
mov
jnp
mov
cmps
mov
sbb
inc
or
push
je
loopne
cmp
lods
adc
xlat
xchg
mov
ret
mov
adc
mov
stos
or
movs
or
fst
sub
push
add
sub
inc
test
add
or
mov
inc
or
mov
jg
xchg
mov
fcom
xor
push
adc
je
and
push
lock
pop
adc
test
mov
lods
mov
test
mov
(bad)
mov
inc
(bad)
in
dec
or
jmp
mov
pushf
xchg
clc
test
mov
jb
cmp
arpl
sub
xor
adc
mov
adc
push
push
dec
cmp
lock
or
inc
push
dec
push
fcom
dec
test
(bad)
adc
cli
or
stos
nop
dec
push
mov
mov
xor
adc
ret
xor
push
push
add
in
cmps
scas
std
jo
daa
push
xchg
or
test
dec
xchg
sbb
push
leave
aas
sbb
fwait
lock
push
and
add
loopne
push
xchg
loopne
dec
cmp
or
xor
out
les
or
inc
jnp
js
sbb
add
push
pop
js
inc
cld
pop
call
shl
arpl
add
inc
ret
call
inc
and
cwde
push
mov
xor
pop
dec
pop
cld
xor
pop
js
xor
dec
inc
adc
sub
inc
leave
cmp
shl
push
or
push
sbb
cmp
add
jne
mov
jb
xchg
mov
jg
les
fld
xor
or
add
inc
and
jnp
mov
sbb
pusha
ss
gs
aam
js
jo
inc
pcmpgtb
ret
xsha256
cmps
adc
xchg
xor
mov
sbb
xchg
pop
in
jp
mov
xchg
pusha
push
sbb
push
or
hlt
and
and
aad
push
push
dec
in
pop
add
jecxz
or
and
xchg
test
jmp
(bad)
push
leave
add
je
stos
ins
in
lock
adc
imul
lods
mov
dec
aam
xor
dec
mov
adc
pop
dec
mov
xor
add
xor
adc
add
mov
arpl
and
sbb
pop
push
mov
arpl
cmp
test
aam
sub
mov
mov
inc
dec
pop
mov
jecxz
push
add
ds
dec
hlt
mov
sbb
mov
add
scas
aad
mov
jge
and
cmp
arpl
cwde
sbb
mov
mov
hlt
rcl
cmp
sub
adc
lock
retf
add
lock
and
ins
or
mov
jae
inc
jo
inc
mov
xor
add
cmp
mov
jmp
jg
inc
mov
mov
movhps
mov
clc
jb
test
push
cmp
ror
retf
pusha
fsub
push
mov
and
je
push
inc
cwde
inc
sub
gs
(bad)
push
mov
popf
and
inc
and
dec
mov
and
jmp
loope
pop
or
shr
jo
or
clc
test
ins
pop
pusha
and
or
mov
(bad)
pop
idiv
dec
je
shr
and
fwait
fwait
sbb
inc
add
sahf
mov
mov
jne
jmp
jge
imul
repz
nop
cmps
ins
xor
dec
cld
mov
cld
stc
mov
jae
or
mov
cmp
retf
cmp
ins
pusha
xchg
into
add
xchg
jmp
jnp
daa
xchg
mov
lock
sub
add
int
or
inc
mov
sar
xchg
xchg
push
xor
sahf
icebp
xchg
dec
xchg
ja
push
and
stos
jmp
cmp
retw
add
leave
adc
pop
cmp
add
(bad)
cld
inc
sub
mov
jne
jae
push
jmp
fidiv
fist
inc
movs
mov
cmp
imul
in
mov
popf
ficom
mov
jmp
out
(bad)
mov
ins
or
and
test
xor
sbb
out
inc
jb
rol
or
movs
les
xchg
and
push
pop
int3
int3
lahf
sbb
fwait
pushf
sub
jne
mov
mov
or
mov
lods
pop
sub
or
cmp
push
pop
dec
cmps
sbb
add
mov
aas
jp
aaa
sub
add
ror
fyl2xp1
inc
sbb
test
xor
add
or
adc
push
and
icebp
imul
adc
dec
ret
out
or
add
enter
fcmovbe
outs
or
push
jae
leave
mov
dec
cmp
mov
not
push
jnp
scas
dec
sub
pop
jmp
adc
ror
push
cld
je
push
aad
add
loope
adc
(bad)
fstp
ret
and
popf
mov
xor
test
sbb
js
(bad)
lock
jp
jb
mov
sub
pop
xchg
and
xchg
xor
les
rcl
das
and
or
xchg
retf
call
mov
sbb
pop
daa
or
sbb
fwait
push
lea
pop
sub
sbb
test
hlt
add
and
sbb
sub
sbb
movs
lea
or
pop
add
or
imul
jmp
shl
addr16
fwait
inc
and
pop
jecxz
mov
aas
inc
add
clc
cmp
cmp
loopne
retf
sbb
cli
ins
aam
sub
xor
push
gs
mov
cmp
cmp
je
push
inc
fbld
xor
pop
jae
xor
xor
dec
fist
sbb
daa
inc
pop
mov
dec
jge
je
sbb
data16
out
shl
cld
iret
cld
in
add
in
in
xor
cmp
xor
mov
scas
or
and
jmp
imul
or
add
pop
mov
push
sbb
aad
test
rol
inc
arpl
sbb
pop
and
pop
retf
in
xchg
fcmovbe
ror
and
mov
daa
pop
shl
jecxz
and
cmc
fild
js
leave
push
inc
push
inc
push
jb
fnstenv
test
pop
scas
or
cmp
sbb
stos
mov
cmp
ins
or
mov
fild
add
je
add
les
fild
mov
cmp
sbb
(bad)
les
mov
test
push
adc
dec
push
cmp
in
les
pop
lds
pop
test
adc
mov
in
int3
in
cmp
add
jb
repnz
jl
cmps
add
adc
sub
xor
mov
out
rcl
lahf
xchg
and
popf
or
xor
in
mov
scas
loopne
mov
mov
or
cld
iret
xor
lahf
arpl
ins
mov
enter
xor
dec
icebp
in
shr
add
sti
dec
and
in
ins
adc
leave
mov
aas
lods
jecxz
ret
adc
push
ss
adc
and
les
jmp
fisubr
inc
sbb
ins
or
inc
in
ret
aas
les
pop
xchg
jbe
aas
push
push
xchg
ret
xlat
(bad)
lock
adc
jne
add
cmp
in
loopne
mov
inc
cmp
adc
into
sub
test
add
adc
dec
sub
push
sub
inc
fisttp
xor
cmp
dec
hlt
rcr
lea
stos
aas
push
mov
ins
fbld
arpl
sbb
popw
sub
adc
dec
ret
fbstp
inc
pop
test
sub
cdq
push
inc
mov
movaps
bound
fdivrp
mov
sub
enter
stos
mov
push
hlt
or
adc
add
dec
jmp
pop
enter
add
pop
adc
and
mov
adc
jg
inc
add
or
add
add
inc
outs
add
movs
aaa
jbe
test
loop
sbb
add
test
add
inc
and
mov
ror
clc
sar
pop
push
or
adc
cmp
dec
sub
mov
add
or
mov
retf
out
pusha
mov
jge
lahf
add
fs
sub
stos
mov
mov
sub
repnz
push
xor
in
inc
add
test
cmp
aas
(bad)
ror
and
inc
lods
sub
sar
jbe
push
push
push
cmp
cmp
aad
mov
loop
pop
cwde
mov
mov
loopne
vmread
push
out
sbb
pusha
xor
les
pop
fdivr
push
add
or
sbb
or
lods
mov
jmp
inc
add
push
push
(bad)
mov
imul
add
push
jb
sbb
add
mov
add
dec
cld
push
xchg
jl
out
jmp
mov
and
or
and
aas
lahf
push
adc
pop
pop
movzx
les
aas
inc
sbb
xchg
pusha
cmp
xor
test
test
xchg
or
(bad)
or
push
cli
inc
adc
add
lock
jg
push
fadd
push
xchg
lahf
pop
int3
add
inc
cmp
test
or
arpl
test
mov
out
lock
pop
jl
jp
xor
mov
sub
dec
pop
call
mov
mov
xchg
shr
test
push
pop
xor
jmp
rcl
hlt
and
jmp
(bad)
in
pop
(bad)
xor
xor
jmp
jl
iret
shl
retf
xchg
add
mov
push
cmp
and
adc
or
iret
mov
sti
sbb
into
rol
and
cmp
pop
inc
jb
aam
inc
cmp
inc
or
mov
jo
push
and
enter
daa
xchg
psrlw
je
ret
fild
iret
(bad)
mov
or
nop
push
xchg
mov
cmp
inc
retf
mov
mov
jne
pcmpgtd
test
dec
call
iret
fistp
mov
add
adc
ror
es
mov
leave
je
add
rol
xor
mov
sub
out
mov
loop
pop
loope
into
inc
push
add
xor
sar
aas
sub
loopne
cld
aas
pop
pop
cmp
loopne
pop
repz
in
das
adc
inc
jbe
jo
sub
(bad)
or
sbb
bnd
rol
push
add
dec
(bad)
cmps
jo
cs
loope
ins
(bad)
jmp
cmp
loopne
or
or
or
dec
dec
lock
push
outs
rcl
js
cmp
add
cmp
or
ret
mov
add
sbb
dec
mov
mov
push
and
and
inc
or
addr16
push
outs
cmp
jle
inc
sub
jns
lock
adc
cmp
cmp
pop
repz
inc
mov
push
adc
gs
sbb
jl
cld
add
sub
clc
xchg
fdivrp
add
adc
jbe
imul
sti
cmp
or
jle
fadd
add
mov
inc
adc
mov
imul
or
cmp
xor
sub
jge
mov
dec
xor
push
pop
push
clc
jne
cmp
test
or
xchg
pop
enter
add
sub
clc
addr16
pushf
pop
push
sub
lock
push
movs
push
jae
xor
xor
add
push
ror
lds
jg
movs
and
mov
cmp
push
lea
push
or
in
cdq
pop
rcr
sub
add
movs
sub
inc
arpl
cmp
imul
pop
and
xchg
pushf
add
sub
and
and
inc
int3
adc
xchg
sbb
sbb
clc
mov
les
add
xor
in
sbb
(bad)
add
pop
adc
inc
xchg
mov
fs
out
push
and
jno
cmps
add
xchg
ret
or
icebp
adc
add
in
cmp
clc
jp
jecxz
and
or
sub
mov
jb
mov
jmp
xchg
adc
ja
hlt
jmp
fiadd
inc
fld
jne
sbb
dec
scas
aad
clc
jp
outs
push
adc
in
push
outs
add
and
or
pushf
inc
cmovs
stc
inc
jmp
scas
cmp
mov
add
ins
dec
mov
pop
sti
inc
add
mov
mov
mov
aam
jmp
jmp
jnp
sbb
out
add
jbe
pushf
and
popa
or
add
hlt
cmp
inc
lock
outs
add
push
popf
pushf
jmp
jg
pop
sub
enter
pusha
and
or
shr
mov
sbb
call
and
inc
add
or
mov
jp
or
or
mov
pop
mov
enter
jmp
or
push
pop
cmps
out
push
shl
aas
add
les
fstp
or
scas
jmp
test
jge
xor
or
mov
movs
movs
xor
inc
mov
jmp
shl
mov
std
mov
pop
push
aam
aas
aam
mov
popa
mov
lods
add
sbb
push
push
cld
popa
push
or
xor
ds
pop
loopne
push
xor
xchg
or
fdivr
lahf
rcl
jmp
and
mov
mov
inc
add
xor
lea
stc
or
and
fimul
in
xor
add
out
push
adc
ins
or
shl
es
jne
and
mov
and
retf
stc
inc
pop
xor
mov
adc
je
clc
mov
xor
and
aaa
ds
shr
lock
push
mov
imul
sub
loopne
pop
mov
sub
or
push
pop
sub
inc
and
mov
stos
or
outs
imul
push
add
push
test
mov
jne
push
sbb
movs
lahf
dec
sub
(bad)
inc
or
ja
mov
cdq
(bad)
loop
add
pop
dec
ret
cmp
and
mul
inc
and
mov
mov
or
mov
xchg
je
fwait
mov
xchg
cmc
add
inc
jl
sub
add
sub
inc
pop
iret
xchg
mov
pop
push
and
xchg
push
and
in
xor
aam
sbb
stos
int
es
std
xor
imul
mov
sbb
fsub
push
add
sub
mov
pusha
sub
loopne
pop
inc
clc
leave
imul
adc
sbb
into
shl
je
stc
(bad)
and
div
fadd
add
mov
cmc
lods
(bad)
call
call
push
sbb
or
xlat
push
dec
jno
and
les
lahf
stc
push
xchg
sbb
dec
rcr
mov
das
cmp
and
test
pop
int3
es
dec
fist
mov
xor
sahf
loop
push
push
and
lock
inc
push
add
in
mov
push
jo
jmp
jns
xchg
aaa
inc
sbb
jl
ror
and
push
inc
sar
cmc
test
or
test
ja
shr
mov
add
push
and
or
outs
and
jg
mov
jmp
push
test
or
add
lock
lds
mov
or
or
fld
jns
xchg
xchg
or
sar
pop
mov
cmps
adc
inc
rcl
adc
or
push
lods
cmps
call
dec
jle
clc
add
dec
ret
in
(bad)
sahf
lods
repnz
icebp
imul
adc
add
ins
inc
hlt
add
retf
or
xchg
and
mov
lock
add
shr
cmps
and
scas
in
inc
fcom
add
pop
jb
dec
adc
fcom
dec
mov
aam
cmp
mov
test
inc
test
push
push
jl
jns
test
(bad)
ret
inc
jne
cmc
inc
xchg
adc
loopne
call
mov
cmc
aam
lods
es
push
jmp
sub
jge
dec
in
jo
xor
xor
mov
push
adc
loopne
call
push
in
shl
in
push
out
je
rcr
xchg
jmp
sub
push
pop
push
jg
push
jns
adc
jmp
push
inc
push
into
(bad)
shl
sbb
dec
movs
mov
outs
jmp
dec
sbb
pop
stos
pop
mov
mov
pop
jo
movs
(bad)
in
mov
jecxz
cmps
fs
jae
in
sbb
mov
push
sbb
inc
add
inc
in
sbb
inc
mov
cmp
ja
pandn
push
das
stos
mov
stc
les
sub
push
rcl
cmp
adc
push
add
nop
and
jg
mov
pop
push
adc
add
adc
sub
inc
sub
pop
jmp
popa
or
out
dec
jp
adc
sbb
in
xor
mov
retf
leave
les
mov
das
scas
int
jg
adc
push
push
lea
loopne
loopne
out
daa
mov
and
mov
sbb
popa
outs
enter
pop
sbb
or
inc
cmp
adc
mov
inc
or
push
add
loopne
fsubr
cld
adc
rcl
fucom
popa
xchg
sbb
or
mov
jmp
bound
cmp
cli
add
add
mov
add
push
push
pop
inc
mov
xchg
fsubr
fld
cmp
add
sbb
and
push
sbb
add
sub
fs
(bad)
in
std
fdivr
inc
test
ret
into
dec
jne
push
js
push
push
and
add
fcomp
fsubr
lods
inc
loopne
ffree
push
xchg
xor
mov
and
inc
xchg
or
enter
(bad)
xlat
adc
cmp
sub
movs
sub
dec
push
in
ret
mov
mov
pop
test
sbb
popa
inc
call
jno
sub
mov
nop
pop
fcomi
add
cmp
aam
and
je
pop
inc
mov
loop
jnp
cdq
xchg
sbb
hlt
and
sti
aas
hlt
jae
fcmovnbe
es
dec
push
cmp
ss
loopne
inc
pop
ja
adc
xor
shl
fdiv
mov
or
adc
add
cmp
call
ja
pop
ds
inc
sbb
outs
cmp
add
pop
cdq
push
je
cmp
ins
cld
fistp
call
jne
fcom
xor
inc
inc
and
test
dec
(bad)
retf
xor
bound
dec
call
sub
xchg
in
cmp
repnz
inc
dec
in
rcl
pop
jmp
fnsave
in
xor
add
les
push
fstp
add
xor
ror
into
dec
lock
dec
cmp
inc
(bad)
rcr
daa
xchg
pop
cmps
add
or
dec
popa
jg
and
in
cmp
xchg
ret
mov
(bad)
pop
push
and
add
clc
add
call
push
inc
and
out
dec
jecxz
sbb
dec
dec
and
dec
xor
mov
test
lahf
adc
add
pop
and
push
or
push
push
jg
push
push
mov
jl
lock
add
jmp
adc
pop
pop
ret
mov
cmp
aaa
cmc
adc
push
push
push
ficomp
or
jle
popf
push
jmp
daa
adc
shl
retf
and
jnp
scas
or
sub
adc
mov
push
add
gs
inc
je
xor
aas
mov
add
push
out
jge
jle
movzx
jae
sbb
shl
or
fdivr
(bad)
mov
sub
sbb
ror
cmp
rcl
or
fisttp
jp
push
clc
dec
sbb
lahf
adc
xchg
not
push
push
jmp
das
and
clc
pop
lods
in
add
mov
cld
push
fisttp
movzx
pusha
hlt
cmp
inc
xchg
or
mov
inc
push
add
sbb
sub
aas
lock
add
test
xor
test
mov
cdq
push
fimul
out
push
movs
adc
xchg
adc
adc
sbb
sbb
call
lahf
cmp
fisttp
mov
dec
lock
pop
mov
inc
cmp
hlt
add
(bad)
jmp
adc
mov
fadd
fsub
ds
movs
adc
jno
movs
jno
sub
adc
add
push
(bad)
jmp
or
not
jmp
xchg
xchg
add
pop
add
jge
sub
xchg
cmps
cmp
cmc
aam
shr
call
leave
fs
or
and
mov
lock
ror
ret
jmp
xor
xchg
mov
or
cmc
sub
sbb
or
pop
test
or
or
xchg
inc
xchg
popf
clc
outs
jmp
inc
mov
lea
push
dec
sub
lock
daa
nop
std
test
fsub
retf
inc
cmp
add
out
in
pusha
or
pop
or
inc
fidiv
imul
or
dec
in
sub
cmp
pop
and
inc
sbb
test
adc
mov
or
cmp
xchg
rcl
fild
inc
or
movs
inc
rcl
rol
and
add
ret
push
int3
jg
pop
aaa
push
rcr
xor
nop
xchg
fistp
(bad)
push
or
lea
jmp
adc
pop
ret
mov
or
add
pop
or
jo
fidiv
ins
ret
add
adc
cmp
lds
add
mov
pop
xchg
or
in
loope
pop
add
shl
or
test
dec
or
clc
or
dec
mov
and
lea
pop
dec
cmp
enter
jge
sbb
in
xchg
push
cmp
lock
(bad)
mov
and
dec
shl
nop
cmp
fadd
loopne
and
hlt
aam
test
xor
aam
loopne
cmc
cdq
xchg
iret
jl
add
xor
add
rcl
imul
stos
push
add
rcl
int3
inc
jns
jno
push
dec
jmp
test
fadd
mov
das
pop
xor
jp
xor
adc
test
sbb
xor
adc
push
in
add
mov
ins
cmp
xchg
inc
cwde
push
push
push
out
sahf
dec
leave
add
jmp
shr
or
enter
sbb
add
or
movs
inc
push
enter
lock
xchg
mov
pop
pop
enter
rcl
jle
sahf
ins
push
std
adc
mov
bound
movhps
jmp
fsubr
mov
sub
fild
hlt
jae
test
sub
lock
(bad)
loope
lock
stos
leave
cli
push
aaa
jae
jge
push
sbb
xor
mov
inc
fldcw
loopne
pop
test
xchg
push
dec
daa
jmp
int
lods
xchg
fwait
rcr
clc
push
je
push
and
sbb
or
aam
fs
add
js
xlat
mov
and
jo
scas
rcr
xlat
pop
mov
scas
jl
imul
test
test
dec
jle
add
dec
jge
sub
xchg
cmp
dec
and
or
jge
xor
sbb
cwde
or
lea
push
jecxz
mov
inc
ror
loope
add
ror
xchg
dec
lea
mov
sbb
sub
sbb
in
xchg
loopne
xor
add
cmp
mov
icebp
or
aam
loopne
add
add
dec
sbb
lea
(bad)
and
fdivr
aam
jb
and
data16
cli
add
pop
inc
add
into
inc
jbe
push
inc
inc
jp
aaa
inc
ja
pop
aaa
jmp
sub
jnp
and
pop
leave
mov
adc
lds
jb
sbb
lock
cli
jne
adc
or
pop
out
test
dec
pusha
outs
add
sbb
adc
movups
or
inc
in
sysexit
pop
xor
add
push
and
fcom
xchg
mov
fist
retf
inc
clc
inc
vpmaxub
push
lahf
rol
push
out
dec
adc
ret
inc
adc
ret
ret
mov
test
sub
xchg
push
pusha
push
lea
add
adc
iret
ins
push
sbb
dec
xchg
push
xor
mov
push
clc
hlt
push
clc
je
sti
adc
pop
inc
dec
push
xchg
rcl
dec
xchg
scas
in
sub
mov
adc
or
xchg
inc
fcomp
mov
hlt
mov
xchg
or
hlt
dec
icebp
or
dec
xor
push
pop
push
test
jmp
les
pushf
xchg
pop
jmp
mov
(bad)
jle
push
aas
pop
mov
mov
ret
sbb
jmp
and
or
add
rcl
push
add
das
lds
psraw
or
leave
xchg
or
jo
sbb
repz
dec
push
cmp
popa
xchg
ror
mov
mov
pop
stos
aaa
shr
cmp
xchg
scas
inc
shl
push
pop
add
int
push
mov
adc
push
sti
push
and
or
lods
mov
mov
mov
retf
loopne
ja
mov
pop
jbe
push
jnp
nop
fist
adc
call
mov
add
inc
inc
stos
inc
popa
lahf
add
je
aad
lds
or
cmp
je
outs
mov
pop
nop
xchg
adc
pop
dec
retf
or
mov
and
in
aam
xchg
sub
jg
or
inc
sub
rcl
retf
jns
fstp
outs
sub
lods
fist
shr
enter
mov
aam
add
push
(bad)
dec
and
mov
sbb
push
adc
pop
dec
or
adc
sub
adc
mov
dec
dec
jge
movsx
or
ds
sub
imul
add
push
and
into
xor
imul
ins
mov
and
les
fadd
and
jo
sub
push
sbb
ret
call
pop
and
mov
add
sub
neg
xchg
sbb
adc
imul
shl
call
or
jge
jne
and
mov
jmp
pusha
sbb
xlat
sub
(bad)
std
(bad)
sbb
in
test
pusha
loopne
add
mov
cmp
rdmsr
(bad)
out
jo
cmp
mov
mov
loopne
out
lea
mov
or
fisub
mov
shl
sbb
pop
and
popf
push
lahf
pop
add
test
push
add
ret
cs
ficomp
add
mov
sbb
jns
test
out
retf
sti
loopne
aas
jmp
jmp
outs
call
mov
dec
adc
pop
pop
dec
mov
jne
popa
cmovns
fsubr
add
push
lea
and
lea
enter
pop
pop
add
mov
jbe
lods
cmovns
or
ret
ins
or
add
dec
adc
pop
mov
adc
sar
clc
test
add
xchg
or
mov
ret
or
dec
and
pop
and
dec
xchg
xor
pop
inc
cld
adc
add
ss
js
sbb
sbb
push
lock
jmp
or
push
push
and
push
lods
mov
arpl
xchg
jo
dec
add
sub
mov
mov
mov
cmp
(bad)
mov
pop
fadd
add
sbb
push
push
data16
xchg
add
lock
outs
add
xchg
jne
jecxz
sub
pop
and
dec
push
icebp
mov
or
adc
xor
push
lea
and
push
or
cwde
dec
cmp
add
std
push
or
or
add
or
sub
adc
sbb
cli
ja
xor
mov
cmp
inc
xor
loopne
or
cmp
adc
jmp
into
fadd
rcr
pop
sub
out
cwde
push
xor
jno
and
inc
movs
sahf
mov
mov
xchg
sub
adc
bound
xchg
das
test
pop
mov
and
mov
mov
cmp
or
sub
and
jl
ror
or
test
les
dec
mov
shl
add
push
cmp
sub
inc
daa
mov
and
jo
(bad)
xchg
aas
ror
push
and
pop
and
test
(bad)
jo
add
mov
push
inc
sbb
fs
movs
add
ror
(bad)
cmp
push
fldenv
add
dec
inc
sub
sbb
xor
and
sbb
gs
ds
inc
cmovns
ret
push
dec
ret
or
xor
dec
or
mov
fnstcw
add
inc
fcom
and
push
repz
pop
cmp
dec
das
in
mov
sahf
push
xchg
mov
or
in
sub
add
cmp
sbb
in
push
aas
inc
pushf
mov
fidivr
pop
adc
or
mov
sar
and
mov
jecxz
jecxz
shl
rol
cmp
call
cmp
mov
inc
jge
mov
pop
inc
and
pop
xor
js
gs
sub
(bad)
fmul
movs
mov
jp
and
push
inc
add
mov
fist
pop
cwde
call
hlt
pop
inc
lods
or
add
pop
nop
jmp
cmp
psllq
adc
cmp
ins
(bad)
mov
je
and
fidivr
add
cmp
push
or
fild
xchg
or
add
add
sub
mov
and
cmp
inc
out
mov
pop
mov
jno
in
imul
fcom
push
mov
in
push
cwde
cwde
or
sbb
xchg
add
stos
or
ret
add
adc
add
and
sbb
and
mov
jl
inc
or
push
clc
in
push
add
and
pop
lock
aas
xor
xor
dec
push
jae
or
cld
jmp
out
nop
sbb
mov
sbb
loope
jmp
xor
lea
add
add
xchg
inc
cli
push
mov
xlat
xor
add
ret
pop
call
imul
push
mov
(bad)
scas
pop
test
or
cwde
add
xor
mov
add
(bad)
push
sbb
push
or
cmps
xchg
xchg
dec
call
cmp
adc
mov
sbb
lahf
mov
dec
or
and
jno
movs
adc
push
xor
sbb
jg
adc
pop
(bad)
fcomip
cmp
inc
jne
test
cmp
pushf
xor
shr
inc
scas
std
arpl
lea
jmp
jne
add
push
cmp
retf
mov
push
jg
mov
mov
rol
popf
push
lock
or
adc
stos
and
clc
sbb
fild
mov
inc
movs
inc
fs
lahf
loope
sub
fbstp
push
ret
cmp
adc
jmp
jg
push
xchg
pop
and
xchg
hlt
popa
(bad)
inc
pop
fdiv
or
shr
jo
or
fstp
cmc
or
cmps
ret
push
pop
je
je
int3
sbb
in
jle
or
or
xor
mov
inc
sbb
adc
push
fidivr
sub
mov
inc
inc
inc
add
add
mov
or
mov
jne
dec
mov
pop
test
add
inc
or
ret
lahf
sbb
mov
or
in
mov
add
dec
add
mov
push
mov
into
lock
pop
in
imul
xchg
lea
jmp
sbb
push
pop
push
pop
in
into
sub
ret
daa
pop
push
xchg
inc
ins
ins
js
fisubr
rcr
scas
mov
sbb
push
xchg
lahf
sbb
lahf
push
loopne
bound
jae
or
adc
enter
loope
je
daa
add
pop
push
jne
test
dec
mov
cmp
adc
push
movs
sbb
out
adc
sub
ins
sbb
pop
scas
mov
dec
cld
or
adc
ins
inc
mov
test
or
or
sti
inc
or
add
cld
xchg
pop
or
xchg
repnz
inc
inc
rcr
and
sar
sub
add
jne
cmp
add
sub
(bad)
sbb
adc
cwde
in
(bad)
retf
xchg
or
or
lds
je
leave
test
loope
idiv
ret
adc
out
dec
aam
or
and
adc
arpl
pop
adc
and
mov
das
add
lods
mov
(bad)
pop
cmp
xor
mov
rcl
shr
fisub
hlt
cmp
push
jmp
cld
push
call
paddusb
call
scas
out
mov
fisttp
push
or
xor
cmc
in
test
and
dec
pop
adc
gs
dec
push
lea
inc
ror
push
lock
adc
outs
adc
in
fsubr
sbb
lock
add
pop
add
call
or
sbb
mov
cmps
push
pop
push
and
and
jl
call
sar
inc
mov
loopne
pushf
je
add
ror
call
push
je
adc
pop
mov
jecxz
pop
xchg
mov
jmp
push
test
iret
rol
icebp
in
(bad)
and
jne
adc
dec
add
adc
sub
ja
mov
or
pop
jmp
sbb
mov
push
xchg
ret
push
cmp
pusha
mov
ins
adc
cld
push
mov
cmps
adc
movs
and
add
mov
and
je
sub
sbb
and
lods
cmp
dec
lahf
cmp
jmp
sub
lea
or
jo
imul
add
or
dec
jo
adc
ins
dec
mov
(bad)
in
cmp
test
cmps
mov
fstp
jp
dec
pop
ss
sub
clc
and
psraw
sub
xchg
push
dec
sub
inc
push
add
out
dec
cmp
adc
daa
jg
test
pop
mov
mov
gs
mov
clc
mov
fild
add
add
je
loope
jo
add
icebp
ffree
fadd
or
adc
fadd
clc
movs
dec
inc
pop
xor
pop
cmove
sub
adc
pop
iret
call
dec
sbb
rol
sbb
or
out
hlt
pop
mov
fisttp
sub
adc
dec
loope
lahf
jne
pop
pusha
aaa
pop
sbb
push
add
iret
fisttp
add
out
xor
sbb
mov
mov
push
push
push
adc
and
or
fist
mov
test
jno
push
popa
aas
mov
popa
dec
mov
xor
mov
sbb
cmp
mov
or
cmovg
jmp
and
scas
rol
push
popa
mov
add
xor
xchg
scas
adc
and
inc
or
lock
add
sbb
punpckhdq
sti
test
aas
add
or
fist
std
lahf
mov
sub
jae
pop
sub
cmp
dec
sbb
fdecstp
xchg
lock
iret
or
mov
stc
jp
xor
clc
xor
push
aaa
push
ror
mov
test
jne
or
sub
adc
mov
repz
fdiv
in
or
push
cmp
adc
(bad)
pop
lock
es
jmp
push
push
ds
inc
adc
cmp
add
bound
ds
adc
rcl
mov
loopne
loope
mov
push
stos
shl
fdiv
push
push
push
mov
or
add
scas
adc
mov
enter
es
adc
loop
mov
ret
ret
mov
pop
adc
out
fist
iret
and
sbb
or
lods
pop
push
push
out
mov
adc
mul
fdivp
loope
je
mov
push
jl
mov
lds
int3
daa
sub
fcom
xchg
test
sub
test
jmp
push
fst
sub
sahf
and
dec
adc
mov
jo
lock
xchg
xchg
jmp
aas
clc
and
xchg
and
mov
inc
mov
mov
dec
pushf
sbb
mov
inc
test
addr16
push
adc
(bad)
mov
xlat
mov
push
push
adc
js
adc
enter
jbe
and
fmul
jb
aam
sbb
add
je
push
mov
jo
adc
nop
push
adc
push
jae
or
pop
xlat
push
jo
sar
ss
pop
(bad)
mov
add
pop
test
add
popa
pop
xchg
sbb
adc
adc
repnz
adc
les
or
xor
add
and
or
adc
je
hlt
xor
add
cmc
ror
or
fadd
or
lock
xor
push
fiadd
out
sbb
inc
adc
add
cmps
or
push
add
pop
sbb
or
mov
xor
and
stos
add
jne
or
add
std
mov
push
loope
add
loop
jne
std
add
or
iret
mov
and
and
mov
cwde
cmps
and
cmovl
xor
pop
mov
hlt
add
loopne
gs
mov
or
adc
pop
dec
push
mov
jmp
lods
fldenv
jg
test
les
sbb
add
mov
dec
fs
cwde
ins
sbb
adc
pop
enter
add
or
xor
cmp
xchg
pop
push
or
mov
push
mov
mov
push
fwait
lods
jmp
imul
mov
push
or
mov
iret
ret
es
inc
jo
je
outs
outs
pop
sub
ss
push
aad
in
mov
sbb
ins
in
add
xchg
outs
je
xchg
cli
mov
add
(bad)
pop
scas
scas
mov
ss
or
or
xor
dec
fldenv
cmp
js
sbb
outs
out
xchg
add
in
enter
and
loop
lock
add
(bad)
and
iret
mov
adc
loope
and
das
push
loopne
arpl
in
arpl
movs
cmp
or
or
fadd
sbb
add
or
or
adc
dec
in
mov
sbb
xor
or
ss
and
push
push
adc
jge
jecxz
in
and
jmp
pusha
xchg
mov
sbb
mov
mov
jge
fld
cmc
lods
aas
sar
pushf
add
repnz
push
mov
or
mov
jae
sbb
in
push
adc
dec
pushf
test
add
les
je
aaa
cdq
fucomip
leave
mov
xchg
adc
nop
push
push
xchg
hlt
scas
sub
dec
push
or
lock
push
push
push
mov
add
jo
ss
add
adc
add
cmp
push
pop
or
sub
mov
add
test
jg
sbb
inc
jecxz
fdiv
wbinvd
fmul
lods
adc
push
mov
iret
outs
mov
fsubr
(bad)
loopne
lea
mov
mov
out
and
xchg
sbb
test
add
es
loopne
sar
mov
xor
loop
inc
in
or
or
xor
shl
and
sub
test
out
cmp
mov
push
push
cmp
xchg
and
in
pop
arpl
movs
dec
dec
call
push
adc
jle
cmp
dec
loop
push
inc
cmp
xchg
cmps
clc
test
mov
retf
jmp
in
lock
or
xchg
cld
pop
test
enter
test
js
jne
dec
rcr
loop
push
outs
inc
into
dec
cmp
loopne
stos
js
les
xor
adc
loope
dec
push
cli
cdq
out
rcl
pusha
sub
ror
push
fwait
push
iret
js
sub
inc
rol
les
loopne
pop
lea
xor
rol
inc
mov
pop
cli
push
ret
mov
mov
mov
push
test
stos
inc
or
sbb
loope
jle
call
cmps
mov
ret
icebp
xor
sub
push
popa
push
mov
js
cmp
idiv
retf
fst
jnp
mov
inc
cmp
mov
cmp
jmp
or
ja
or
sbb
dec
(bad)
loopne
outs
fs
xor
xchg
push
and
inc
inc
loope
dec
push
add
mov
and
jecxz
sub
or
adc
add
or
or
pop
arpl
out
push
pushf
mov
mov
ret
pop
pop
cmp
add
cmp
out
sbb
jl
cmps
adc
lea
icebp
pop
ins
pusha
and
push
pop
pop
push
xchg
mov
add
adc
sbb
int3
jmp
and
gs
xchg
nop
and
jmp
cld
xchg
jb
mov
inc
and
nop
push
mov
int
add
xchg
jl
sbb
mov
fadd
and
mov
dec
add
add
sbb
add
adc
mov
jg
dec
pusha
outs
imul
call
cld
test
and
or
ins
in
daa
popa
cmp
test
jns
call
into
push
out
jmp
in
mov
pop
daa
push
cld
push
in
dec
in
dec
inc
cld
push
inc
out
inc
call
xor
or
cmp
addr16
call
add
popa
pusha
fs
pusha
ins
xor
test
stc
fdiv
std
leave
xor
lods
pop
sbb
jne
fdiv
and
push
in
sbb
lock
jl
add
pop
or
imul
add
adc
out
jne
xchg
add
inc
data16
add
sbb
dec
fcos
je
jl
sbb
jp
ins
enter
cmp
pop
je
fcmovnb
dec
add
sbb
adc
bound
call
lahf
(bad)
and
mov
push
rol
push
dec
gs
push
push
inc
repz
int
sbb
sbb
jno
fcom
sub
ror
push
loope
mov
adc
int
push
sti
les
inc
test
sti
mov
sahf
or
aam
add
fdiv
mov
shl
or
loopne
pushf
out
push
ret
loope
mov
mov
jo
mov
add
mov
or
adc
inc
jb
push
int
inc
add
xchg
mov
inc
sbb
test
add
dec
and
jnp
in
and
mov
test
push
stos
or
cmp
bound
dec
jle
sub
iret
or
push
sub
or
aas
mov
pop
pop
ins
mov
cmp
loopne
push
add
push
inc
dec
xor
jg
adc
push
nop
push
pusha
or
mov
test
xor
xor
nop
xchg
sbb
in
lea
mov
sti
ret
mov
add
movs
test
je
adc
pop
imul
out
fsubr
adc
cmp
loopne
fisttp
lahf
rol
lahf
add
in
inc
gs
jecxz
mov
inc
and
jb
shl
clc
xchg
or
loopne
xchg
lock
dec
xchg
push
push
xor
test
mov
add
dec
add
sbb
rol
add
cmp
adc
into
xlat
into
in
mov
push
add
mov
jmp
movs
in
imul
pop
enter
mov
pop
inc
retf
ss
dec
pop
mov
hlt
fstp
ret
lock
push
mov
inc
call
(bad)
fucomip
or
ror
pop
mov
mov
imul
adc
or
inc
ret
mov
push
jg
and
and
call
pop
test
jnp
pop
sbb
in
jl
call
pop
jmp
aaa
jl
xchg
mov
js
pop
xor
cld
mov
(bad)
push
xor
push
mov
and
aaa
and
fadd
loopne
fild
or
adc
sbb
sar
ins
lea
jp
retf
xchg
rcr
inc
cmp
not
xchg
fdivr
mov
fstp
mov
adc
mov
ins
jecxz
mov
lahf
hlt
ds
push
lea
pop
sbb
add
mov
sub
mov
pop
sar
add
dec
ins
or
push
js
sub
mov
xchg
push
inc
pop
cmp
add
dec
adc
jp
add
xchg
push
(bad)
mov
cmp
mov
add
test
ret
cwde
xor
xchg
lds
div
or
jb
leave
in
aam
aam
xchg
dec
in
nop
nop
mov
mov
or
ror
(bad)
xor
dec
add
pop
mov
enter
and
int3
int3
int3
int3
ret
in
repnz
test
test
shr
xor
int
mov
push
jmp
jl
shr
int
xchg
add
xchg
pop
adc
jbe
jo
sub
call
jo
je
xchg
push
mov
jo
xor
pop
(bad)
lods
cld
xor
call
cmp
popf
sbb
inc
es
test
je
test
dec
pop
es
movs
mov
test
jb
in
mov
mov
jo
ins
movs
mov
xchg
or
push
jne
ret
sub
add
rol
das
movs
pop
lea
xlat
push
ss
mov
and
ret
in
push
movs
adc
lahf
or
xchg
sbb
push
out
call
mov
push
nop
test
fdiv
or
mov
retf
aas
and
xlat
adc
mov
cmp
aam
outs
call
jno
js
movs
xchg
movs
fst
ror
movs
movs
jns
jnp
daa
cdq
outs
add
in
stos
jge
repnz
sub
test
or
cwde
daa
ja
xchg
test
call
adc
adc
dec
xchg
sbb
add
sub
popf
pop
add
scas
xor
xor
loope
push
sbb
loope
xor
adc
imul
adc
je
add
xlat
sbb
push
div
xor
ins
fdivr
sub
dec
adc
dec
clc
push
lds
or
cmp
(bad)
and
popa
pop
aas
(bad)
jl
aaa
nop
inc
loope
mov
repnz
jns
dec
adc
lahf
mov
jno
or
inc
mov
lods
cmp
cld
dec
lods
xor
pop
xrelease
loop
push
dec
clc
adc
jl
add
inc
pusha
lahf
jg
call
and
sbb
or
fs
add
inc
lds
and
push
sub
or
ficomp
pop
push
dec
js
cmps
push
gs
ins
aaa
nop
mov
sub
std
sar
xchg
sbb
jb
mov
mov
lea
sub
pop
adc
popa
das
push
movs
push
les
adc
and
daa
push
adc
sbb
and
sub
ins
shr
lock
jb
adc
shl
or
mov
pop
cmp
adc
add
cmps
cmps
push
or
pop
inc
mov
mov
or
and
mov
mov
adc
xor
and
or
rol
fisubr
push
push
lods
call
dec
push
rcr
aas
add
loop
dec
xchg
sbb
in
int3
push
hlt
adc
cmp
push
sbb
in
pushf
dec
or
sbb
outs
jmp
(bad)
aas
xor
dec
sub
push
pop
pop
inc
or
int
push
clc
or
clc
sub
and
sub
and
push
or
push
mov
mov
or
stos
fcomip
je
sub
arpl
push
mov
jge
dec
sub
sub
dec
push
loope
push
loop
js
inc
xchg
test
popf
ret
xcrypt-ofb
cmps
push
aaa
jo
(bad)
jo
inc
in
push
sub
push
pop
adc
push
cmps
bound
add
rcl
lock
push
push
imul
inc
jo
inc
inc
inc
aaa
jo
lock
stos
(bad)
sub
jo
add
mov
fiadd
lahf
das
dec
clc
pop
pop
fist
js
adc
or
or
movs
push
ss
add
sbb
scas
sbb
inc
jbe
inc
or
xchg
push
sub
mov
xchg
push
xor
in
pop
pop
dec
or
pop
add
or
cli
hlt
ins
dec
push
push
push
sbb
push
imul
(bad)
mov
lods
jmp
mov
and
imul
add
sbb
mov
scas
mov
mov
and
or
in
cld
cs
jle
clc
repz
sbb
sbb
hlt
dec
adc
das
das
add
js
(bad)
imul
bound
in
daa
pushf
xchg
nop
or
lsl
test
dec
pop
push
pop
les
adc
pusha
test
repz
add
mov
out
mov
ret
cmp
scas
mov
xor
add
xor
dec
add
and
pusha
xchg
lock
push
and
fdivr
mov
aam
adc
cmp
xchg
mov
shr
loope
pop
add
sub
bound
pop
inc
(bad)
mov
inc
adc
push
test
pop
popf
push
push
inc
cmc
lods
lods
push
pop
xchg
pop
mov
pop
pop
test
pop
stc
or
add
mov
hlt
pop
adc
jecxz
adc
sbb
push
adc
or
imul
lahf
jns
sub
cmc
xchg
xchg
jne
scas
cmp
dec
and
pop
cli
mov
mov
je
ror
and
add
add
cmp
ret
inc
add
push
mov
popa
enter
sbb
push
mov
adc
sub
das
pusha
or
imul
inc
sub
lock
sub
mov
enter
mov
movs
or
lods
sbb
push
fs
mov
or
dec
shr
in
dec
add
leave
rol
fdivr
fcomp
and
jge
mov
jnp
inc
lods
or
mov
ins
jge
or
sub
mov
rol
icebp
mov
sub
std
jns
adc
and
jmp
clc
(bad)
loop
pop
cmp
xlat
mov
or
xchg
fadd
jge
loopne
push
movs
das
call
inc
movs
lods
inc
clc
sti
movs
inc
push
sbb
and
sti
sbb
mov
and
movs
inc
movs
pop
jmp
les
push
enter
sbb
enter
cmc
dec
sbb
lahf
inc
dec
xchg
inc
mov
push
idiv
mov
sub
je
xchg
and
stos
stc
aas
add
mov
ins
nop
sbb
lods
pop
pop
or
add
movs
ins
push
and
sub
jle
mov
mov
loop
mov
test
sar
adc
dec
add
imul
mov
adc
stos
aaa
and
push
(bad)
add
fadd
jge
mov
xchg
mov
sbb
mov
sub
add
xchg
sbb
dec
or
dec
mov
je
mov
pop
enter
sbb
inc
cmp
jns
add
push
nop
push
scas
or
cmp
cmp
sbb
scas
aam
jmp
sub
sbb
or
sub
(bad)
sbb
je
xor
loopne
mov
push
in
sbb
push
push
cmp
dec
cwde
rol
add
faddp
sub
or
je
cmc
sub
inc
add
and
je
movs
cmp
fild
int
dec
gs
gs
xchg
jo
rcl
sub
add
xor
add
lods
fwait
jne
and
movs
pop
sbb
sbb
xchg
and
rol
xor
mov
inc
adc
xchg
xor
cmp
jge
sbb
adc
mov
ror
lock
ret
popa
xor
in
push
ja
rcl
sar
sbb
xor
and
xor
push
lock
xor
aas
je
and
mov
aaa
jmp
push
xchg
inc
and
rcl
pop
pop
out
dec
ror
fnstsw
push
jecxz
push
sbb
inc
je
rcr
int3
pop
adc
mov
enter
cld
js
or
mov
dec
cmp
sar
pop
mov
mov
addr16
or
dec
test
and
xchg
sbb
out
mov
add
adc
and
mov
and
ror
ret
gs
push
and
aaa
test
fisub
jge
bound
pop
jo
jg
mov
fnsave
in
or
test
bound
mov
pop
mov
push
cmc
jmp
pop
test
out
movs
and
push
mov
adc
mov
xor
cmc
mov
adc
mov
add
sbb
sub
jmp
iret
sbb
cmp
ss
mov
add
push
pop
jnp
mov
jmp
addr16
call
(bad)
sub
xchg
imul
mov
inc
loope
dec
xchg
push
jns
inc
inc
inc
aaa
adc
jb
push
push
sahf
push
and
cwde
sub
and
in
inc
cmp
lock
mul
movs
(bad)
and
mov
sbb
xchg
jge
js
nop
add
pop
inc
das
fs
test
fbstp
sar
adc
mov
sbb
or
or
dec
pop
adc
add
and
mov
push
adc
mov
shr
sub
jno
xor
rol
add
fimul
lidtd
mov
add
push
inc
mov
mov
js
outs
div
and
and
dec
pop
or
dec
add
sbb
aam
lahf
fidiv
xchg
test
jmp
add
xchg
sahf
sbb
lods
push
(bad)
mov
mov
stc
ins
push
dec
in
mov
or
outs
push
or
adc
lock
popa
pushf
mov
add
inc
mov
lahf
cmp
xchg
sbb
cmps
and
or
cmp
inc
lock
mov
dec
es
les
enter
mov
mov
mov
push
add
and
adc
outs
add
mov
or
add
jle
and
popa
jns
lock
(bad)
or
in
and
sub
mov
fwait
sub
clc
adc
mov
fistp
(bad)
adc
push
jnp
aam
loop
daa
and
out
lods
retf
unpckhps
or
aaa
inc
add
mov
ror
mov
sar
xchg
aaa
inc
adc
or
inc
lea
inc
cmp
jns
dec
mov
mov
pop
pop
fwait
sbb
sub
add
push
mov
push
shr
ret
mul
popf
dec
and
(bad)
iret
fild
pop
ins
stos
xchg
aas
and
test
adc
pop
add
test
sbb
and
mov
dec
cmp
inc
test
sbb
lea
cmps
daa
xor
mov
inc
jbe
and
ret
push
mov
dec
add
movs
mov
dec
fwait
and
pop
je
iret
mov
add
les
sub
mov
add
lock
btc
fbld
mov
xor
add
(bad)
in
ret
adc
mov
fnsave
sub
clc
inc
leave
mov
sbb
push
or
pusha
lea
and
in
ds
jae
pop
or
retf
or
xlat
hlt
adc
test
cmps
push
stos
push
shl
adc
fstp
stc
cmps
and
inc
sbb
test
push
push
and
mov
scas
fld
inc
mov
call
loopne
and
sub
inc
addr16
xchg
movs
out
or
inc
add
xchg
ret
mov
cli
aaa
push
push
retf
sub
or
jne
sub
xor
jns
jmp
dec
jle
mov
leave
stc
test
out
je
fs
inc
stc
or
clc
dec
inc
cmp
clc
inc
and
xor
inc
ror
or
loope
cld
jmp
loopne
mov
loope
rcr
pop
push
out
jnp
rcl
aad
lahf
in
sub
push
out
in
test
sub
hlt
call
add
dec
add
lock
test
inc
cdq
inc
and
sub
mov
cmc
and
dec
add
and
xchg
add
mov
or
and
inc
lds
jne
push
mov
in
add
shl
adc
or
mov
jg
out
inc
or
or
jne
cmps
xchg
sbb
mov
psubq
ss
sbb
sub
mov
jle
dec
add
sub
in
inc
aas
and
xchg
sbb
dec
inc
inc
push
pop
sub
adc
adc
enter
es
or
pop
xor
mov
loope
adc
ins
shl
outs
dec
fs
cmp
xor
outs
xor
popa
sbb
or
xchg
jo
js
int3
add
jbe
sbb
test
push
or
sbb
add
nop
mov
add
and
test
dec
call
push
pop
push
mov
shr
out
pop
ret
adc
add
jge
push
inc
add
cdq
clc
add
pop
lock
outs
push
sahf
and
push
dec
dec
xchg
or
xchg
cmc
ror
xchg
adc
dec
inc
popf
ja
cld
lods
adc
adc
mov
jnp
nop
push
sbb
mov
xchg
adc
pop
mov
fbld
stos
call
pop
in
sub
sbb
adc
xor
test
out
test
test
shl
ins
int
or
mov
rcr
push
xor
fs
mov
or
and
movzx
add
pop
imul
pop
ins
jecxz
(bad)
mov
push
popa
retf
add
or
(bad)
cmp
gs
test
sbb
test
mov
dec
mov
sti
sub
mov
rcl
pushf
sub
in
or
push
sbb
mov
or
inc
push
or
dec
mov
and
iret
rol
sbb
and
dec
cmp
mov
cmps
je
add
pop
fst
push
loopne
push
clc
outs
add
rol
jne
fisub
or
cwde
rol
or
je
adc
push
daa
nop
sub
adc
movd
test
mov
add
or
add
sbb
mov
jecxz
mov
leave
and
jns
or
pop
ror
adc
inc
jmp
mov
push
sbb
shl
fsubr
or
(bad)
loope
ret
icebp
outs
fmul
add
mov
push
scas
jle
jp
adc
add
push
cmp
and
inc
mov
and
das
adc
mov
jne
pop
dec
add
cmp
cmp
arpl
pop
pop
mov
and
aad
adc
add
out
sbb
lock
adc
add
pop
loopne
lods
xchg
pop
mov
(bad)
add
and
xor
arpl
or
(bad)
retf
xchg
fisttp
jae
xchg
add
xchg
add
jno
jae
mov
mov
cmp
cli
adc
fsubr
movaps
cs
or
dec
ins
jg
or
retf
dec
loop
or
pop
jp
lods
inc
lahf
movs
and
sbb
sbb
pop
or
dec
lock
arpl
mov
int
jno
das
in
nop
add
jae
or
sahf
call
push
scas
add
lods
dec
adc
js
jns
and
rcr
inc
mov
rol
inc
scas
pop
push
push
adc
inc
inc
pop
je
or
push
sbb
out
and
or
gs
jle
test
add
sub
clc
adc
out
mov
push
ins
sbb
cmp
loop
mov
sbb
mov
inc
lahf
sahf
dec
add
sbb
push
add
add
push
loop
dec
out
movs
sbb
movs
pop
cmps
aas
push
pop
pop
xor
mov
adc
xor
xchg
and
test
(bad)
cwde
jecxz
mov
ins
out
mov
and
sbb
jae
ins
call
dec
sub
cmp
loopne
pop
sub
xchg
aam
sbb
push
sub
stc
xor
mov
icebp
pusha
mov
or
add
(bad)
inc
loop
mov
mov
pop
test
and
adc
add
dec
ror
and
rcl
jb
push
sbb
mov
in
stos
adc
jo
popf
adc
sahf
mov
adc
stos
scas
test
adc
mov
cmp
sti
or
add
enter
mov
mov
cmp
and
gs
xor
aas
push
lock
pop
loopne
or
and
xor
sbb
adc
cmp
ret
xor
dec
in
repz
or
mov
add
lock
fist
in
add
call
xor
cmp
xor
mov
clc
jne
icebp
bts
inc
push
xor
or
adc
fwait
jmp
or
xchg
pop
sub
and
outs
push
or
hlt
add
push
cmps
sub
and
add
or
ret
xchg
add
(bad)
rol
in
test
pop
push
ins
xor
inc
dec
ds
and
cmps
ret
add
(bad)
rcr
je
xor
add
fistp
and
xchg
or
and
or
cwde
push
jnp
and
hlt
test
add
xchg
aad
scas
lock
adc
push
retf
mov
clc
or
jmp
inc
das
dec
mov
adc
jmp
in
ja
lock
lods
ins
mov
lods
inc
push
cmp
loop
outs
(bad)
ja
dec
sbb
adc
lock
out
call
hlt
das
jmp
mov
out
xor
add
rcr
les
pop
lea
or
sbb
lahf
inc
pop
mov
sbb
xor
push
addr16
pop
jecxz
add
js
arpl
stos
inc
clc
jne
and
jmp
jne
popa
or
jecxz
movs
add
test
mov
in
mov
adc
lock
xor
and
mov
sbb
mov
inc
clc
cmp
xchg
ret
pop
add
aaa
(bad)
sub
push
jnp
ds
pushf
jmp
(bad)
jo
shl
cmp
add
sub
sub
cmps
aam
movs
shr
movs
mov
popf
icebp
out
jmp
adc
adc
push
in
lea
loope
arpl
jns
cmp
jne
push
dec
xchg
xchg
inc
hlt
adc
push
and
dec
cld
mov
mov
mov
and
in
sub
pop
pop
pop
shr
mov
aam
int
xchg
fisub
inc
and
push
nop
adc
xchg
and
rol
scas
in
inc
sbb
lds
(bad)
call
push
sbb
mov
(bad)
sub
wbinvd
add
push
rol
fldenv
add
inc
imul
inc
lods
(bad)
sub
lods
or
test
inc
pop
lods
mov
xchg
push
mov
fiadd
push
rol
out
ret
or
and
pop
loope
loope
xor
add
repnz
cmp
or
daa
xchg
jge
inc
push
test
movs
adc
ins
cmp
or
add
push
neg
jmp
sbb
movs
and
pop
aaa
push
mov
jo
push
or
cdq
in
lahf
fsubr
in
(bad)
les
add
sbb
jl
rol
sub
jne
xchg
xchg
cwde
cld
xchg
loope
in
mov
adc
mov
cmc
dec
push
xchg
mov
xor
lahf
adc
into
jmp
push
int3
ret
push
fdivr
loope
push
add
add
add
push
retf
cmp
or
pop
fadd
xor
adc
or
mov
sahf
int
inc
xchg
mov
mov
or
leave
push
adc
ret
adc
ins
pop
mov
sub
iret
adc
sub
pop
jne
js
xadd
pop
test
test
and
pop
pop
cmp
std
aam
xor
fidiv
cmps
rol
popf
jge
or
push
invd
in
adc
rol
cld
xor
shl
sysret
ror
jmp
sbb
jne
rol
adc
nop
adc
and
and
nop
sbb
jmp
push
xor
pushf
jmp
inc
dec
xchg
arpl
cdq
or
mov
rcpps
or
fwait
sbb
mov
add
stos
or
and
jecxz
cmp
ss
fmul
xor
inc
and
dec
pop
icebp
or
mov
fidivr
add
stos
inc
or
cmp
xchg
pop
mov
call
test
ja
ss
hlt
push
add
and
rcr
pop
ret
outs
or
and
mov
clc
xor
in
movs
mov
fbstp
stos
jl
or
pusha
mov
pop
push
cmp
dec
cmp
mov
pop
and
or
jo
shl
push
jae
push
inc
and
or
pusha
pop
ins
sbb
dec
push
jnp
adc
test
jns
(bad)
enter
mov
scas
and
mov
and
addr16
pop
les
add
push
sub
add
pop
leave
int
rcl
sar
lahf
add
fsubr
sbb
fcom
pop
outs
push
aam
mov
mov
sub
mov
stc
int3
std
sbb
in
sbb
push
je
pop
mov
push
call
cmp
add
test
call
inc
mov
mov
mov
mov
test
movs
(bad)
(bad)
lock
add
push
hlt
sub
hlt
sub
adc
rol
jae
jmp
cmp
aaa
jmp
(bad)
aam
je
add
mov
(bad)
push
mov
jmp
add
add
retf
lods
loop
or
xchg
test
arpl
mov
push
push
cmp
dec
addr16
jmp
jge
ja
sbb
sbb
and
ins
add
inc
mov
lods
adc
leave
in
adc
mov
lds
cld
cli
sbb
push
(bad)
push
push
add
dec
sub
scas
push
and
nop
test
inc
gs
enter
mov
ins
je
ror
and
lods
and
push
push
pushf
adc
dec
aas
mov
mov
lock
movs
or
inc
inc
ret
inc
arpl
add
out
out
jnp
clc
stc
sub
sub
sbb
or
jmp
mov
jmp
sbb
cmc
icebp
mov
scas
cld
xchg
inc
loop
xor
jmp
pop
cmp
daa
mov
leave
mov
mov
and
test
add
rcl
or
and
imul
(bad)
(bad)
jnp
or
xor
and
(bad)
cmc
adc
mul
push
hlt
jecxz
(bad)
jmp
je
pop
add
lods
sbb
mov
lods
movs
push
jne
aad
pop
fcomp
adc
rcr
sahf
cmp
push
fdivr
shl
test
add
adc
test
nop
xchg
shl
adc
push
adc
fist
and
push
vmulsd
push
enter
out
jne
ror
pop
dec
add
das
mov
dec
ror
hlt
pop
cwde
push
jg
push
inc
in
mov
sub
sub
mov
adc
push
dec
xchg
mov
retf
adc
loopne
jge
push
jnp
fsub
rol
lahf
push
push
in
shl
sub
add
xchg
int3
sbb
push
mov
js
test
add
call
mov
jo
cmp
mov
scas
in
mov
mov
jo
sub
aas
inc
add
(bad)
or
adc
rcl
add
fsub
xor
xor
ret
push
mov
ss
dec
lods
or
mov
cmp
inc
add
adc
(bad)
ins
jmp
and
xor
hlt
sub
inc
add
popa
stos
xchg
push
imul
add
mov
pop
add
adc
jno
icebp
shl
or
pusha
adc
dec
mov
inc
or
pop
inc
mov
rcl
cwde
cmps
cmp
or
fstp
mov
loopne
dec
adc
(bad)
and
lods
into
mov
add
mov
or
bound
push
gs
(bad)
xchg
inc
aaa
cmc
push
push
jo
push
pop
das
inc
aaa
lahf
or
or
movs
jnp
or
movs
cwde
push
push
xlat
sub
and
mov
sbb
inc
jg
add
mov
dec
outs
daa
mov
mov
int3
inc
jne
out
hlt
push
sub
loopne
sub
cmc
mov
push
arpl
ins
dec
mov
test
and
add
push
add
mov
xchg
es
mov
adc
sub
push
push
mov
push
cli
cld
mov
inc
adc
push
mov
xchg
add
or
add
mov
and
pushf
sti
jmp
push
mov
mov
push
leave
repnz
mov
cmp
dec
xor
ret
jnp
aam
sbb
sbb
movs
and
ret
or
sub
jo
xchg
or
pop
push
mov
mov
push
adc
dec
and
or
call
jns
les
push
or
cmp
nop
inc
lock
lods
dec
call
or
cmp
cmps
mov
jnp
call
sbb
lods
pop
in
clc
in
mov
push
mov
xor
mov
pop
or
addr16
leave
adc
mov
push
imul
test
loopne
mov
cmp
ret
jo
push
aaa
dec
mov
adc
sub
sub
xlat
lahf
sbb
pop
xchg
sar
and
add
aas
int3
mov
aad
push
inc
or
mov
loop
pop
sub
add
mov
shl
sub
movs
ret
add
pop
and
ret
inc
xchg
jmp
dec
dec
inc
xor
inc
xchg
xchg
inc
(bad)
jmp
xor
fcom
push
mov
and
movs
icebp
xor
adc
lahf
push
test
and
inc
mov
cmp
adc
mov
sub
repz
jl
dec
test
mov
xchg
(bad)
mov
pop
aas
or
sbb
scas
inc
dec
xlat
push
push
fadd
jno
nop
mov
or
pop
in
call
in
adc
cmp
push
inc
add
sbb
or
jmp
ror
dec
inc
imul
in
add
push
sbb
push
rsqrtps
ins
xchg
inc
jbe
in
out
add
dec
pop
push
add
jnp
outs
or
test
jle
sub
pushf
pushf
dec
push
mov
mov
in
add
push
xlat
inc
mov
lea
vpshlw
outs
scas
mov
mov
push
jnp
or
das
mov
das
sub
and
rcl
fld
jne
rol
push
aas
add
stos
int3
jge
or
loopne
add
stc
cs
cmc
inc
add
inc
clc
ret
int3
and
xchg
ret
xlat
push
xchg
dec
push
cmp
rol
je
and
push
test
cmp
inc
and
int3
inc
popa
ins
dec
int3
xor
pop
hlt
push
cmp
dec
push
and
dec
add
nop
mov
add
call
or
and
ja
inc
or
mov
test
xchg
dec
and
ror
add
rcl
xor
mov
arpl
ror
nop
mov
add
and
sub
sub
push
jge
sub
fwait
ror
lock
lea
or
imul
ret
jmp
mov
xor
add
add
xor
xchg
xchg
loopne
xor
cmp
int3
jl
repnz
enter
enter
mov
cmp
cs
add
xchg
sar
xor
ins
add
(bad)
xor
addr16
pop
shl
fsubr
adc
ins
or
stos
(bad)
jmp
add
or
je
push
int
js
pop
in
mov
fsubr
push
xor
push
ror
and
or
mov
mov
aaa
loopne
pop
sbb
call
mov
aaa
adc
lock
pop
fsubr
inc
jp
enter
jno
pop
push
xor
jo
aas
add
das
bound
xchg
add
or
xor
mov
cmps
add
xor
int
test
or
data16
movs
jge
ret
fdivr
jmp
(bad)
adc
mov
scas
int3
xchg
cmp
adc
dec
pusha
movs
and
fild
adc
mov
or
icebp
and
mov
xchg
js
mov
das
xchg
mov
(bad)
sub
int
pusha
inc
and
ins
jecxz
inc
je
cmp
or
pop
pop
shr
push
cdq
xchg
rol
xchg
loopne
dec
mov
cmp
mov
jg
add
mov
scas
and
jno
mov
stos
dec
rol
adc
or
xor
and
in
scas
repz
cmp
mov
(bad)
neg
dec
sbb
pop
dec
pop
call
shr
sti
and
jg
lds
sub
adc
inc
cmp
nop
ret
push
rol
add
or
mov
add
imul
add
mov
or
mov
fld
adc
ins
imul
bound
add
test
(bad)
push
mov
loopne
inc
or
jno
test
jo
or
je
test
or
and
adc
cmp
fcomp
jmp
std
jl
es
push
pop
or
xor
adc
cmc
jbe
xchg
(bad)
xor
lock
ins
iret
in
mov
das
xor
xchg
or
push
aaa
outs
cmp
movs
add
mov
cld
sti
add
mov
call
jno
js
cmp
les
jno
mov
mov
test
xor
imul
in
xor
call
add
in
pop
icebp
or
or
jo
aad
dec
enter
sbb
je
cmp
push
loopne
xchg
or
inc
loop
fcom
pop
cmp
into
stos
and
mov
aam
xchg
popf
test
pop
add
adc
(bad)
and
fidiv
lock
mov
fistp
sbb
xor
push
test
and
ret
cmp
fiadd
inc
inc
or
fs
or
mov
push
mov
inc
push
out
xchg
js
repz
push
push
and
or
dec
std
and
or
fcom
push
mov
out
adc
xchg
pop
popa
jp
add
dec
or
mov
mov
(bad)
sbb
push
ret
and
ret
adc
lds
dec
xor
lock
jge
jl
add
test
(bad)
lock
xor
(bad)
mov
(bad)
rcl
loopne
push
scas
add
je
inc
bound
mov
mov
or
mov
iret
or
jl
sar
sti
arpl
cld
paddw
sbb
ds
repnz
or
and
into
shr
addr16
push
arpl
jne
lds
adc
or
(bad)
loopne
(bad)
mov
mov
dec
nop
push
mov
xor
pop
data16
adc
cld
lock
and
cmp
xor
xor
sbb
or
lea
or
and
in
pop
xor
push
inc
cmp
mov
or
add
fcomp
mov
or
fcom
nop
mov
and
into
xor
xchg
(bad)
and
push
cdq
test
lds
inc
inc
push
pop
enter
sbb
xchg
adc
adc
jmp
lea
fwait
ins
push
inc
fadd
add
lock
push
imul
xchg
push
fcom
or
loop
push
aam
arpl
add
rcl
inc
xor
shl
bndldx
into
popf
lea
es
mov
mov
xchg
gs
xchg
rcl
(bad)
mov
mov
aas
retf
ret
dec
mov
pusha
add
jmp
fcom
adc
sbb
fiadd
mov
mov
jmp
lods
push
pop
pop
int
pusha
test
cmp
xchg
cmp
loopne
ins
cmp
cmp
cmp
add
mov
mov
xor
mov
lock
lds
jo
shl
cwde
(bad)
pop
daa
pop
sub
fsubr
sbb
(bad)
xor
cmp
xor
xchg
nop
cmc
jne
jnp
popf
cli
sbb
rcr
psubsb
xchg
adc
rcl
add
mov
sti
movs
aaa
inc
push
cdq
pop
fsub
inc
test
addr16
push
fdiv
std
push
cmps
xor
add
xchg
or
dec
xor
mov
add
cli
sbb
add
add
pop
cmp
or
stos
and
add
rol
in
sub
pushf
and
push
sub
jmp
mov
test
(bad)
outs
sub
sbb
mov
pop
inc
sbb
xchg
pop
mov
or
in
inc
jmp
mov
lahf
jp
cmp
pop
pop
xchg
mov
or
jmp
sub
add
pop
cmp
add
add
retf
sub
mov
jno
sub
lea
sub
(bad)
jge
add
xor
ret
ret
in
pushf
js
fdiv
sbb
pushf
pop
arpl
push
retf
in
call
add
xor
or
dec
xchg
or
lock
push
je
or
je
add
sbb
pop
mov
push
clc
out
adc
sahf
cdq
out
add
lahf
dec
cld
neg
inc
or
mov
push
daa
xchg
fistp
or
cld
pop
shl
mov
fisttp
sbb
addps
mov
and
mov
or
add
mov
sbb
cmp
sub
push
mov
cmp
pop
fadd
adc
jg
sbb
or
inc
test
sti
nop
ds
bound
mov
dec
in
mov
and
aas
or
and
or
xchg
xor
jo
mov
xor
xor
jbe
scas
mov
sbb
pop
cmp
mov
imul
xchg
addr16
adc
push
pushf
ret
ins
into
mov
aas
inc
cmc
pushf
cmp
adc
pop
dec
push
add
xchg
je
sub
dec
push
adc
jge
ret
cwde
scas
jg
xor
(bad)
nop
pushf
inc
or
sti
push
enter
add
mov
inc
inc
mov
push
push
dec
inc
jb
(bad)
jmp
aas
add
inc
pusha
sub
add
or
rol
and
xchg
jg
adc
in
xchg
pop
cwde
mov
test
das
and
xchg
xchg
test
xor
or
inc
cmc
push
arpl
repz
or
aam
sbb
add
jmp
lea
sub
aam
nop
push
adc
(bad)
popa
and
xlat
push
cld
pop
pop
bound
test
pop
add
and
or
xchg
pop
inc
jb
int3
jmp
jmp
mov
or
xchg
xor
adc
dec
or
dec
adc
sbb
xor
xor
stos
in
loopne
jmp
gs
mov
test
or
mov
lahf
pop
xor
pushf
push
pop
inc
mov
push
lods
jmp
pop
mov
vcvttps2udq
call
add
movs
pop
pop
sbb
mov
jae
xor
or
(bad)
jmp
out
aaa
mov
pushf
add
or
and
(bad)
jmp
int
pop
cmp
sbb
arpl
fnsave
je
sar
adc
aas
jmp
inc
sub
cld
push
stc
fabs
mov
mov
push
clc
mov
dec
fisubr
push
gs
mov
or
jbe
mov
pop
movs
cmp
aam
pop
test
push
ins
test
pop
test
xor
stos
inc
aad
stos
gs
stos
mov
mov
aas
loopne
sub
cmp
pop
and
jno
ror
push
aas
dec
retf
or
mov
add
or
rol
das
sti
push
adc
ss
and
inc
int3
jg
call
ss
xchg
add
sbb
in
imul
lahf
sub
aas
xor
dec
popa
xchg
mov
dec
aad
push
jmp
jmp
outs
arpl
add
imul
bound
adc
arpl
add
sar
fcmovu
ror
(bad)
jmp
add
jnp
mov
jmp
cdq
ret
scas
and
mov
xchg
sub
fild
pushf
jg
or
mov
ret
popa
test
je
cwde
(bad)
mov
sbb
mov
es
shl
push
mov
lock
dec
adc
mov
jo
push
pusha
ret
sar
(bad)
arpl
mov
add
add
lods
push
adc
ror
sbb
adc
rcl
or
lods
in
xor
sub
and
xchg
clc
fdivr
push
inc
fsubr
cmp
xor
aad
sub
mov
sbb
imul
mov
jmp
sub
or
jne
stos
or
sub
lds
(bad)
mov
sbb
sbb
outs
dec
jno
add
(bad)
mov
sbb
and
lock
sub
ins
(bad)
adc
and
adc
mov
pop
ror
cmp
jmp
jmp
xor
and
dec
ret
mov
lds
sub
in
test
xchg
add
enter
fcom
jle
inc
pop
mov
das
push
mov
push
out
jno
inc
mov
es
movs
mov
ret
add
test
add
mov
cmps
xchg
cmp
jge
movs
or
out
jmp
shl
shl
retf
call
push
mov
(bad)
push
icebp
call
and
test
push
dec
les
mov
push
ja
jg
push
xchg
mov
loopne
cmc
lods
inc
inc
or
arpl
rcl
cs
xor
mov
inc
pop
push
in
mov
stc
sub
ret
loope
loopne
loopne
and
mov
nop
movs
mov
enter
mov
call
cmc
in
popa
adc
rcr
mov
adc
mov
cmp
fistp
add
(bad)
je
fist
sbb
pushf
xor
bound
fbstp
xchg
inc
adc
adc
inc
xchg
mov
(bad)
daa
movs
dec
sbb
mov
test
ret
mov
leave
leave
push
(bad)
jbe
or
push
mov
imul
aad
ins
mov
sub
jge
mov
mov
push
adc
js
jne
stos
call
mov
ss
mov
int3
mov
pop
jo
in
lds
ins
mov
in
inc
jecxz
sub
add
mov
fiadd
sbb
adc
mov
and
mov
movs
dec
cmp
and
push
and
inc
mov
xchg
and
rcl
test
ss
lock
lock
call
shl
and
std
mov
adc
shl
leave
mul
add
cdq
add
movs
stos
(bad)
in
xchg
cmp
gs
adc
or
xor
add
sbb
and
ret
mov
movs
jp
mov
add
test
xchg
or
mov
xchg
mov
inc
sub
push
aas
pop
and
mov
dec
cmp
inc
jmp
push
mov
mov
jg
(bad)
push
test
jmp
pop
xor
ins
ss
xchg
stc
lock
inc
or
jl
mov
dec
das
in
add
mov
fdivr
mov
out
push
ins
pusha
data16
add
or
jmp
push
jae
fmul
jecxz
sbb
xchg
mov
xchg
jle
or
ins
cld
push
xchg
aam
pop
popa
xchg
je
mov
mov
pop
mov
cld
mov
xchg
and
pop
(bad)
sub
inc
es
add
xor
test
push
or
mov
add
add
dec
je
adc
jle
jo
popa
push
dec
push
mov
inc
add
in
daa
sbb
mov
shr
adc
mov
mov
mov
add
cmc
and
in
cmp
clc
add
add
and
aas
pop
in
dec
push
push
daa
pop
ret
pop
pusha
adc
js
js
je
into
pop
in
fist
pop
ret
jg
jo
add
sbb
inc
or
sbb
push
daa
cmp
fistp
(bad)
imul
dec
inc
jno
cmp
outs
adc
inc
jg
sbb
and
adc
mov
in
mov
pop
retf
mov
pop
enter
icebp
(bad)
sub
inc
mov
push
xchg
mov
push
dec
call
fcomip
inc
and
mov
push
addr16
nop
loop
call
cld
jb
jb
aam
sahf
mov
push
pusha
(bad)
mov
push
sbb
clc
add
rol
(bad)
lods
inc
xchg
pushf
cmp
xchg
sub
inc
mov
pop
or
pop
lahf
xor
dec
and
or
cmp
or
pusha
call
dec
sbb
and
inc
or
inc
cmp
add
inc
ins
aad
rol
(bad)
add
pusha
fcomp
mov
cmp
mov
fisttp
or
push
aaa
push
ret
xchg
xchg
aad
cmp
retf
aam
aam
enter
pushf
and
fld
clc
adc
call
test
dec
inc
test
test
cmp
pop
imul
loopne
add
minps
mov
lds
xor
xchg
sar
fild
cmp
dec
inc
and
jno
mov
dec
dec
or
or
ins
nop
mov
cwde
nop
adc
arpl
loopne
xchg
pop
add
sub
stos
pop
or
cld
mov
lahf
mov
lods
add
push
inc
mov
or
xchg
call
(bad)
sub
push
xor
inc
add
(bad)
sbb
sbb
jmp
enter
nop
sbb
inc
jo
push
stos
dec
push
enter
daa
pop
or
gs
call
enter
loopne
jecxz
in
int3
loopne
inc
lock
add
dec
dec
mov
mov
adc
adc
and
ffreep
pusha
fbld
and
mov
ret
add
jb
test
pop
pop
cwde
and
add
mov
push
add
jg
and
movs
test
jb
lods
cmps
in
xchg
jg
mov
popa
xchg
loopne
pop
ins
add
add
push
std
ins
jne
jp
inc
mov
dec
shl
in
bound
aas
lds
call
sar
or
cli
mov
xchg
mov
push
add
push
dec
jno
lahf
add
pop
inc
jmp
mov
movs
xor
dec
or
push
add
or
adc
lahf
dec
and
sub
repz
cdq
pop
xchg
movs
dec
push
adc
jmp
pop
mov
outs
or
push
add
cdq
stos
mov
mov
pop
lahf
xor
(bad)
loopne
leave
mov
jb
lahf
arpl
not
add
sbb
mov
push
xor
loopne
jmp
ins
ret
loop
jge
rol
add
sbb
mov
and
push
sbb
jg
in
pushf
in
fs
dec
sbb
call
jo
cmp
cmp
dec
mov
js
dec
stc
add
inc
and
push
mov
sub
jle
rcl
add
push
pop
loopne
nop
pop
or
adc
pop
lahf
add
xor
dec
or
or
add
add
mov
mov
sub
test
test
fsub
(bad)
aas
mov
loopne
add
fwait
xor
adc
or
pop
mov
and
mov
or
add
movs
lds
std
pop
pop
in
enter
neg
dec
ret
clc
add
cld
movs
push
ror
push
pop
adc
push
mov
sub
cmp
call
les
pop
outs
and
test
lds
xchg
mov
sub
mov
mov
add
push
add
or
sub
stos
in
and
fild
enter
in
add
jb
inc
pop
jg
inc
loope
sub
in
add
lahf
iret
mov
clc
in
cmp
or
xor
pop
ret
in
add
adc
int3
lds
adc
pusha
shr
loop
in
lahf
sub
cs
lahf
loope
adc
in
cmps
test
lahf
mov
and
aas
dec
rcl
and
sbb
ja
bound
arpl
loopne
and
add
sbb
cmc
inc
in
ins
dec
out
js
sti
mov
add
call
add
mov
sub
and
icebp
cld
neg
adc
add
push
fld
out
or
in
jno
sbb
fcom
adc
das
dec
dec
movs
xor
outs
(bad)
std
loopne
push
sub
call
and
cmps
or
jo
psubq
add
lock
mov
sti
aam
cmc
adc
add
mov
and
fisub
dec
add
fmul
push
dec
or
dec
imul
add
scas
xchg
mov
sahf
or
inc
lds
push
add
push
pop
and
lea
xchg
(bad)
jno
jo
imul
sub
jns
movs
and
push
and
jp
stos
xchg
pushf
jne
and
imul
ret
jg
add
pop
adc
adc
or
ins
aas
test
sub
add
xchg
mov
adc
fwait
mov
movs
test
mov
jg
test
and
add
pop
or
add
cmp
mov
inc
push
retf
ficom
call
push
and
inc
add
mov
pusha
imul
sub
fldcw
and
push
mov
jo
jo
out
pusha
pop
cli
push
inc
je
pop
addr16
mov
jl
aaa
mov
fmul
cmps
jno
mov
mov
retf
adc
add
adc
inc
popa
mov
lods
push
push
push
push
(bad)
adc
adc
add
movs
add
jmp
and
cmc
add
gs
adc
in
inc
je
jl
popa
inc
push
xor
loopne
and
xchg
adc
mov
inc
mov
loop
jne
addr16
push
ret
push
or
es
and
dec
adc
jge
push
sbb
lods
inc
add
inc
add
xor
inc
fisttp
push
lahf
in
pop
mov
sbb
or
out
leave
shl
sbb
mov
inc
pusha
mov
add
imul
cmpps
add
leave
mov
aas
adc
dec
js
mov
lods
leave
sub
mov
outs
pop
cmp
sbb
xchg
push
and
push
add
cmp
rcl
imul
fild
push
lahf
fld
ret
cdq
lock
cmp
jmp
xor
jg
and
pop
arpl
mov
inc
inc
or
push
orps
in
inc
adc
adc
or
test
push
aam
add
inc
test
add
push
cmp
push
push
and
and
or
pop
mov
pop
ficom
push
rol
out
pop
add
adc
stc
gs
retf
mov
sub
and
sub
cmp
cmp
dec
mov
enter
adc
aas
pop
sbb
jmp
add
sar
lock
aas
jle
test
xlat
and
inc
and
or
gs
movs
jg
and
sbb
or
cld
cmps
movs
and
pop
add
jno
jecxz
emms
les
mov
rcl
lods
lahf
retf
lds
push
inc
jmp
jo
sbb
push
cmp
aam
clc
pop
add
add
enter
cdq
add
sub
(bad)
jno
lea
sub
fistp
out
sbb
jne
adc
out
call
gs
or
push
pop
test
in
daa
push
loopne
mov
pusha
sbb
test
mov
clc
or
pop
inc
push
xor
pop
xor
test
xchg
jp
imul
nop
sub
loopne
push
jae
add
or
add
adc
pop
or
push
fst
sub
sbb
dec
fadd
adc
push
push
sbb
add
xchg
daa
adc
popa
mov
mov
sub
sub
clc
lea
fild
add
lds
fist
(bad)
jne
jne
pusha
and
jnp
cmp
dec
in
pop
or
jne
sbb
adc
or
add
cmp
sbb
sbb
adc
js
(bad)
je
push
mov
sub
add
mov
mov
and
add
ret
adc
(bad)
pop
icebp
mov
cmps
or
mov
sub
hlt
push
loope
pushf
int
jne
cmp
fs
add
mov
and
test
add
cs
add
adc
sahf
push
addr16
push
je
and
add
mov
ins
shl
iret
cld
xchg
xchg
jne
and
and
dec
inc
daa
add
pop
xchg
mov
jbe
gs
dec
or
ret
mov
sbb
jne
inc
xor
mov
push
push
adc
stc
jns
pop
push
add
xor
or
mov
push
cwde
or
rcr
sbb
or
(bad)
xlat
jne
or
pop
adc
pop
lods
inc
xchg
push
(bad)
movs
out
int3
rol
out
dec
rcl
push
push
sub
add
cld
dec
jo
test
sar
je
pop
mov
movs
cmp
sub
ret
cmc
inc
pop
jb
or
adc
pop
mov
pop
add
xchg
adc
push
pusha
pop
add
clc
aaa
add
push
and
and
int
pusha
test
push
pop
ret
and
push
popa
scas
in
push
stos
mov
or
xor
or
jmp
adc
mov
gs
popa
add
test
add
and
jg
pop
add
or
(bad)
or
push
inc
xor
neg
pusha
add
push
push
scas
jbe
inc
ss
clc
push
popa
pop
xor
push
dec
xor
mov
xor
push
fistp
pop
and
dec
idiv
push
int
(bad)
or
mov
add
imul
xor
xor
popf
sbb
add
inc
and
cmp
add
xor
stos
sbb
test
adc
aas
imul
adc
bound
movs
mov
xor
xor
hlt
sub
push
mov
dec
sub
mov
lock
mul
push
pop
pusha
adc
enter
xchg
loopne
xlat
pop
push
mov
test
cwde
mov
push
sbb
jmp
inc
(bad)
push
es
ds
sub
jmp
test
push
dec
pop
or
and
inc
xor
add
inc
adc
lahf
inc
push
cwde
out
push
sub
in
xchg
push
rol
ret
sbb
std
in
test
and
push
pop
mov
sub
adc
sbb
and
mov
adc
out
test
add
xchg
adc
mov
add
es
cmc
movs
stos
mov
mov
int3
and
repnz
or
mov
rcr
aam
mov
xor
pop
enter
inc
je
aad
xchg
mov
adc
daa
push
in
jmp
seto
bound
adc
mov
and
nop
lldt
aam
test
mov
mov
push
int
outs
jo
outs
inc
iret
mov
jo
or
inc
loopne
test
push
scas
xchg
add
and
repz
(bad)
mov
call
out
jnp
rcl
push
clc
and
mov
nop
sbb
fiadd
movs
cmp
and
adc
sahf
mov
sub
adc
or
add
push
lds
adc
sub
inc
inc
jno
adc
dec
xchg
icebp
xchg
adc
inc
sub
inc
call
gs
xchg
sti
xlat
in
add
lods
adc
xor
icebp
xor
jmp
sub
inc
loope
shl
out
mov
icebp
push
aam
add
jns
or
adc
js
and
les
xchg
sub
out
push
mov
and
pusha
mov
push
xchg
(bad)
cwde
jge
cmps
mov
inc
xor
mov
fdivr
xchg
and
mov
adc
fmul
lods
jmp
fcom
dec
add
sbb
xor
test
rcl
jecxz
call
sbb
test
xor
and
hlt
inc
into
lock
sbb
push
inc
jo
add
sub
fdivr
(bad)
call
cli
(bad)
or
add
and
mov
shl
pop
inc
out
ss
mov
mov
hlt
rcr
xor
lock
mov
loopne
inc
imul
jp
push
push
push
aas
out
or
addr16
sub
arpl
or
adc
data16
movzx
dec
sub
fdivr
jmp
push
jl
push
ficom
gs
mov
out
xchg
fld
push
dec
ins
inc
pusha
mov
jle
movzx
inc
mov
or
scas
stos
xor
mov
pop
stos
sub
sub
pop
fstp
inc
jne
jmp
cld
push
daa
and
fld
xchg
pcmpgtb
or
pop
dec
pop
cld
inc
sub
xchg
adc
adc
cld
sbb
in
push
adc
adc
fild
jmp
sahf
rol
cmp
sub
jmp
dec
pop
pusha
(bad)
push
movs
mov
xor
sub
les
add
add
shl
pop
inc
or
sets
sub
fcmovb
inc
add
rol
pop
outs
enter
or
mov
fisttp
push
stos
mov
das
or
ret
jmp
dec
int3
inc
loope
sbb
push
addr16
ror
loopne
dec
or
cmc
sbb
sub
sub
mov
adc
(bad)
add
mov
test
pop
mov
test
and
xchg
es
adc
frstor
je
jno
add
shl
or
pop
sbb
or
leave
pop
test
dec
inc
mov
pop
je
cmps
dec
lods
lods
clc
or
inc
mov
adc
add
fadd
jb
sbb
sbb
add
jae
mov
cmp
push
loope
push
ds
inc
mov
int3
jae
add
or
cmp
cmps
mov
and
inc
cmp
sbb
and
ins
add
xor
push
aam
adc
aas
loopne
call
add
fmul
mov
adc
fcomp
adc
add
cmc
or
dec
cwde
ret
jmp
test
mov
and
and
mov
(bad)
aam
adc
dec
mov
sbb
(bad)
dec
cmp
loop
stos
sub
test
push
add
push
rol
aam
in
mov
cmc
and
pop
xchg
imul
icebp
ficom
es
sbb
adc
loope
add
inc
fwait
inc
xchg
bound
out
sbb
cmp
dec
fild
dec
xor
mov
xor
ret
jecxz
add
push
cwde
sahf
dec
in
mov
push
adc
inc
dec
sar
sub
mov
out
std
pusha
and
es
icebp
adc
xchg
cli
add
and
push
psubsb
push
dec
cmp
push
add
sub
push
retf
add
movs
cmp
in
mov
fsubr
or
cmps
in
mov
or
add
push
ins
test
cmp
popf
dec
cmps
mov
addr16
cmp
dec
sub
or
test
call
adc
jo
inc
or
add
sub
or
pop
and
fist
dec
mov
push
pop
and
dec
jl
jne
popf
sbb
dec
add
or
ins
mov
and
sahf
jo
push
mov
add
adc
dec
dec
scas
js
push
xor
mov
add
jg
mov
pop
inc
daa
leave
pusha
rcl
add
mov
imul
inc
cmp
rcl
fdiv
leave
and
retf
(bad)
les
add
repnz
shl
nop
popa
and
inc
nop
rcr
xchg
push
ss
xor
push
cmp
fdivr
lahf
in
add
pop
and
lea
dec
inc
or
xor
xor
push
sub
ror
xchg
movs
mov
sub
or
std
or
stos
int3
or
les
test
cmp
mov
add
jmp
mov
xor
inc
sub
mov
gs
ds
push
add
sub
xchg
or
adc
js
push
jno
sub
jp
fs
xchg
and
push
mov
ror
(bad)
cmp
test
sbb
int3
inc
jbe
mov
pop
lahf
sub
sub
mov
fcmovb
and
mov
xchg
mov
mov
mov
push
inc
sub
jl
popf
and
adc
(bad)
push
outs
push
test
fwait
ret
and
nop
mov
mov
je
jnp
daa
push
(bad)
nop
test
xchg
mov
xchg
mov
dec
nop
push
mov
inc
loopne
dec
lahf
push
and
scas
cmp
pop
mov
inc
fs
pop
cli
(bad)
adc
xor
pop
lds
pop
gs
pop
lock
jmp
push
sbb
or
push
jno
cmp
sbb
sub
fadd
push
add
add
dec
in
aaa
push
retf
sbb
in
inc
rcr
push
mov
or
and
fmul
jo
fcomp
lock
add
dec
inc
pusha
adc
je
mov
test
test
mov
add
mov
fst
mov
js
or
popf
or
pop
and
sub
test
cdq
rol
sbb
rcr
je
push
das
std
loope
push
inc
mov
icebp
call
add
lock
or
loope
test
out
or
fidiv
push
xor
call
fild
jmp
(bad)
push
ja
mov
sub
sbb
and
std
or
dec
add
sub
and
jl
inc
hlt
jg
mov
aas
inc
add
mov
loope
(bad)
call
cmc
jmp
shr
add
imul
jns
inc
test
sbb
(bad)
mov
pushf
aaa
jmp
arpl
and
enter
add
xabort
cmp
shl
rcr
and
or
loope
lock
or
fsubr
mov
leave
jmp
daa
cmc
and
arpl
lock
aad
add
dec
aas
or
inc
sar
add
adc
cmp
jle
outs
ret
pop
or
cs
jp
and
cdq
bound
push
nop
jle
cmp
pop
fcom
dec
(bad)
cmp
movs
adc
add
push
or
sub
adc
arpl
jp
scas
jb
clc
push
xchg
adc
ror
add
jne
ins
loopne
icebp
mov
test
aam
or
mov
call
cmp
cmp
xor
lahf
inc
cld
mov
xor
sbb
pop
aaa
add
test
inc
mov
fcmovnb
jmp
daa
call
add
shr
mov
add
push
add
push
cmps
mov
inc
jp
or
lock
(bad)
jge
sbb
add
push
pop
add
outs
or
xchg
sub
jno
shr
mov
arpl
push
mov
imul
or
(bad)
push
adc
cld
jno
cmp
fnsave
adc
or
pop
add
jno
in
mov
dec
iret
push
and
jl
push
dec
lahf
mov
js
sbb
jmp
js
push
loop
jno
ins
in
lahf
jl
xchg
sbb
xlat
clc
pop
fs
sar
and
mov
add
mov
lock
ins
in
sbb
pop
or
pop
jp
jnp
cmp
test
lods
add
stos
iret
pop
cmp
add
inc
and
clc
adc
pop
push
adc
jmp
imul
fisttp
fsub
jl
stc
cs
push
adc
dec
pop
add
and
movs
cmp
mov
outs
je
mov
dec
jl
outs
cdq
sub
loope
bound
cmps
clc
sbb
sub
mov
xchg
adc
fisttp
adc
sbb
and
jbe
ja
sar
mov
add
daa
mov
inc
add
hlt
or
xor
inc
pop
inc
jb
pop
loopne
test
jg
sub
into
add
add
int
adc
push
pushf
rol
xchg
scas
aas
nop
fild
and
or
or
pop
adc
push
add
clc
adc
sub
mov
mov
cmp
fisubr
lock
push
sbb
test
sub
sub
ds
imul
add
popa
test
stos
pop
mov
lods
add
loop
mov
ins
mov
add
popf
sub
push
nop
invd
sub
cmp
inc
jmp
add
pop
icebp
retf
push
and
and
jl
sbb
jmp
fs
pop
or
dec
movs
jbe
or
clc
pop
push
mov
cmp
sbb
push
sub
mov
fdivr
cmovge
mov
dec
push
iret
pop
xlat
shl
push
or
arpl
rol
mov
ret
pop
or
int
adc
in
shl
fadd
push
add
loopne
push
call
call
scas
push
in
jnp
xor
fadd
ror
pushf
add
nop
dec
or
sbb
adc
pop
pop
or
pop
jecxz
lds
nop
mov
xor
pop
add
push
jo
gs
sbb
dec
sbb
sub
cmps
ret
sbb
call
and
xchg
jmp
jp
fs
and
cmc
aam
int3
jp
lock
out
rcr
cmps
adc
das
ins
pmaxub
xlat
mov
mov
or
fst
sub
pop
call
push
inc
in
fs
inc
pop
icebp
inc
fisubr
and
sub
enter
pop
(bad)
add
cmp
div
rol
sbb
outs
pop
ja
add
fwait
mov
hlt
mov
pop
fisttp
daa
mov
and
ins
paddusw
xor
add
retf
rcl
scas
or
cmp
push
add
sub
jg
adc
push
add
or
imul
aam
stos
mov
lahf
add
xchg
pop
xor
push
or
mov
call
jns
inc
(bad)
jecxz
xor
and
or
test
cld
add
test
ror
xchg
inc
push
inc
or
sbb
sbb
lock
sub
or
dec
dec
or
push
mov
punpckhbw
dec
arpl
inc
adc
jne
fisubr
or
add
je
or
call
ror
sbb
or
repnz
pop
sbb
in
add
mov
pop
mov
and
ret
xor
or
lods
dec
popa
stc
hlt
inc
and
std
inc
mov
jmp
cmp
jne
cmp
jb
adc
lock
rcl
dec
jg
inc
sbb
(bad)
shr
icebp
jne
cmps
pop
aas
ja
test
and
in
sub
(bad)
and
push
aas
xor
pop
pop
xor
aad
in
dec
jo
loopne
mov
pop
pop
mov
push
xchg
pop
aas
dec
xor
push
rcr
xchg
jno
inc
cld
push
xchg
nop
clc
sti
fmul
test
test
arpl
outs
je
pop
lods
dec
mov
inc
mov
loopne
jne
fld
inc
in
pop
xchg
les
lea
sar
xchg
add
mov
jne
push
ffreep
cwde
daa
(bad)
lods
pop
shl
jne
rcr
push
sbb
mov
sub
loopne
mov
sub
pop
and
inc
je
mov
push
outs
jns
add
mul
mov
sahf
daa
fnsave
and
lgdtd
adc
pop
cmp
xchg
ja
or
outs
or
es
adc
dec
imul
sbb
sub
mov
inc
xor
mov
xor
sbb
pushf
or
sahf
push
add
ror
lea
std
or
jne
mov
push
and
sbb
je
jo
sbb
jns
addr16
add
and
shl
lds
cld
(bad)
jmp
rol
out
jmp
push
js
push
push
pop
pop
adc
pop
or
retf
test
inc
inc
ins
mov
loop
sub
or
sub
sbb
inc
lds
xor
mov
push
add
add
xchg
call
sbb
mov
pop
and
and
(bad)
cmp
add
cmp
test
sub
ror
jmp
ret
(bad)
xchg
add
dec
setle
and
sbb
add
adc
mov
mov
pusha
sub
mov
add
dec
xchg
mov
fnstsw
inc
or
or
add
aam
std
arpl
pushf
or
ss
les
call
and
pop
push
int
xor
sub
xor
and
jge
sub
mov
adc
jmp
push
pop
dec
cdq
adc
fisub
jbe
cmp
or
scas
mov
pop
add
cs
fprem
jle
lock
add
lea
mov
lock
add
xchg
xchg
push
add
in
dec
push
imul
xchg
inc
shl
shl
sub
scas
test
add
or
inc
pop
or
xor
and
xchg
pop
sar
push
xor
add
add
jp
movs
test
adc
test
add
sbb
cmp
mov
push
ret
dec
cmp
popa
adc
iret
adc
jo
dec
sub
sbb
cmps
and
sub
dec
xchg
xor
jecxz
jge
dec
xor
sub
xchg
das
pusha
adc
mov
cmp
call
mov
leave
mov
xor
arpl
cmps
add
or
iret
pop
mov
imul
test
cmps
mov
sub
push
cmc
or
sub
mov
arpl
mov
inc
jmp
push
popa
cmp
adc
leave
pop
mov
and
sbb
icebp
or
scas
xchg
add
jge
shr
sub
mov
pop
mov
pusha
das
push
fsubr
dec
(bad)
adc
nop
push
sub
add
jne
mov
push
mov
xchg
lods
push
je
dec
or
adc
and
jae
adc
dec
or
movs
cmps
hlt
sbb
push
mov
xchg
mov
sbb
push
(bad)
xor
jl
(bad)
lods
loopne
jne
pop
xor
xchg
sbb
and
adc
xchg
popa
sbb
in
mov
push
pop
push
pop
or
push
pop
repz
daa
adc
adc
add
sub
sub
sbb
mov
and
and
xor
mov
popa
adc
and
pop
add
inc
packsswb
and
dec
sbb
lods
inc
cwde
push
pop
xchg
in
mov
pop
pop
inc
sbb
rol
pop
xchg
test
add
loopne
nop
or
loopne
pop
adc
jnp
sbb
add
aaa
fwait
scas
adc
inc
daa
fstp
mov
ins
pushf
lock
dec
(bad)
inc
mov
(bad)
loop
and
test
add
sub
addr16
or
nop
add
addr16
aad
sar
mov
mov
xchg
mov
or
js
inc
mov
pop
jmp
(bad)
jmp
inc
daa
mov
mov
mov
leave
(bad)
sub
adc
adc
shr
add
and
test
dec
and
inc
inc
add
push
mov
movs
repz
iret
mov
stos
fsub
jns
out
dec
and
je
lahf
out
sahf
pushf
mov
shr
adc
sahf
ja
push
imul
mov
push
cmp
push
call
dec
dec
cmp
js
loop
stc
cmp
out
data16
xor
fldpi
add
jns
cmps
push
aaa
gs
dec
repz
sahf
int3
sti
sbb
dec
idiv
addr16
sub
jns
out
push
test
dec
repz
pop
mov
add
mov
daa
mov
add
fs
sbb
and
add
xor
and
sbb
call
xlat
and
sbb
test
push
push
sub
mov
inc
lock
pop
inc
sbb
int3
sbb
inc
add
adc
adc
cmp
pusha
mov
sbb
shr
into
mov
and
test
sbb
je
or
sbb
adc
or
jp
xchg
xor
push
ret
add
xchg
cmc
or
or
dec
jb
mov
je
aaa
mov
iret
lods
hlt
pop
inc
add
xchg
nop
sub
ror
inc
xchg
aam
cs
jg
cmp
shl
sbb
add
pop
lock
adc
or
push
in
push
xchg
lock
push
xor
mov
xor
gs
add
dec
jmp
mov
loope
add
dec
push
test
mov
cmp
test
xchg
sub
inc
pop
mov
inc
cmp
mov
cmps
push
sub
or
lock
addr16
sub
pop
or
clc
and
inc
and
es
or
mov
fstp
inc
mov
jge
nop
xor
out
inc
cwde
and
aas
add
push
or
scas
add
mov
xor
into
cs
or
cld
add
pop
movs
ins
and
cmp
je
out
clc
cmp
ja
or
test
ret
pop
add
movs
dec
mov
lods
cld
dec
adc
pop
or
add
xor
outs
jns
push
jno
fisubr
jmp
jo
fisub
dec
or
jno
pop
retf
or
mov
add
or
dec
dec
js
or
add
fmul
shl
and
aam
jg
fld
enter
add
push
add
ret
fisttp
push
pop
or
pop
adc
in
outs
arpl
xchg
sbb
sar
inc
xlat
push
adc
or
add
gs
fucom
sub
mov
sbb
cmp
cld
adc
mov
inc
mov
jno
imul
gs
inc
and
and
ror
sbb
imul
adc
iret
pop
nop
add
test
sub
add
sub
jo
mov
neg
xchg
pop
jns
inc
or
fild
mov
ins
add
arpl
dec
cmps
iret
fcomp
push
stos
mov
and
adc
clc
dec
pusha
inc
sar
jmp
or
sbb
rcl
xor
inc
and
icebp
iret
ss
shr
aas
jne
div
je
xchg
sbb
or
aam
push
add
jns
sbb
xor
adc
popa
sbb
or
test
inc
and
xchg
push
ficom
pop
test
add
jg
or
xchg
adc
jne
rcl
daa
pop
or
sbb
sbb
push
jl
adc
xor
xchg
fisub
pop
in
add
and
call
dec
test
mov
cld
and
dec
cmp
adc
test
es
test
pop
or
mov
les
push
aas
add
je
push
sbb
adc
push
or
add
add
adc
xor
cmp
inc
jge
mov
ins
pusha
mov
cmp
fs
movs
mov
and
and
test
out
jnp
mov
or
inc
push
lds
and
mov
sbb
adc
retf
test
shl
push
adc
sub
push
arpl
adc
sbb
adc
xor
add
loop
pop
rol
mov
xor
adc
mov
out
ror
or
pusha
adc
pop
and
jbe
mov
ja
xchg
add
inc
or
cmp
lahf
je
push
or
adc
xchg
fadd
sub
nop
ja
cmp
mov
add
push
add
int
test
inc
and
mov
mov
movs
dec
pop
retf
pop
push
and
dec
or
nop
pusha
clc
inc
cmp
js
xchg
xchg
das
cmc
sbb
dec
mov
pop
call
push
lea
mov
sar
bound
mov
rcl
mov
stc
dec
cmp
push
push
jmp
push
jecxz
mov
test
cs
dec
mov
adc
jmp
add
dec
or
or
pop
push
pushf
xchg
xchg
bound
and
push
inc
mov
arpl
call
scas
or
add
or
adc
ja
loope
repz
xor
adc
mov
mov
fistp
(bad)
aam
adc
hlt
(bad)
scas
sub
sub
mov
aaa
es
ja
mov
pop
adc
and
pop
or
test
iret
cli
push
add
push
adc
add
pop
jno
fucomip
sbb
xchg
lea
mov
inc
fsubr
xor
dec
pushf
es
ret
test
xchg
pop
mov
mov
or
mov
aaa
cli
xchg
(bad)
movs
out
(bad)
fsubr
push
or
rcl
iret
hlt
pop
leave
cmp
hlt
cdq
mov
popa
js
outs
in
pop
shl
inc
add
push
or
mov
add
cwde
fucomp
xor
fiadd
cmp
jne
loope
fst
fsub
sbb
cmp
add
add
stos
sbb
xchg
add
sar
es
sbb
inc
stos
and
aas
icebp
je
aas
inc
inc
add
push
pop
jg
inc
xchg
loope
dec
ret
and
adc
cwde
jo
xlat
add
jne
sbb
xchg
cmp
pop
inc
jecxz
rcr
mov
sbb
outs
std
dec
outs
call
sbb
pop
mov
or
and
xor
mov
iret
adc
and
pop
icebp
or
mov
add
mov
mov
rcl
mov
push
mov
addr16
pop
push
jge
push
sub
ficom
pop
cmp
pop
pop
hlt
jne
cmp
sbb
arpl
fs
add
mov
pop
mov
loop
jo
lods
push
aas
stc
push
or
add
data16
push
xor
mov
push
pop
sbb
mov
pusha
test
add
scas
inc
and
mov
sub
cmp
fstp
sbb
sbb
cld
cld
cld
adc
push
adc
or
arpl
push
jecxz
xor
lea
cs
pop
hlt
xor
les
add
jmp
dec
and
jge
imul
imul
or
xchg
lahf
add
mov
cwde
jg
pop
rol
add
jle
lods
xchg
push
adc
add
adc
add
outs
or
inc
in
xchg
sbb
pop
call
adc
push
aad
adc
(bad)
arpl
iret
adc
or
sub
js
adc
movups
add
pop
add
xchg
push
dec
add
pop
test
push
adc
push
loop
ins
push
mov
cmp
or
fcomp
mov
neg
pop
shr
jae
loope
mov
loopne
adc
inc
mov
and
jne
add
add
addr16
cli
mov
dec
push
adc
mov
jmp
repz
or
or
es
add
push
xchg
inc
(bad)
call
aad
rol
cwde
test
xchg
nop
call
adc
inc
add
mov
add
popa
sub
xchg
inc
ja
push
call
adc
ja
xor
or
js
push
out
jp
inc
jo
or
mov
mov
inc
loope
movs
mov
nop
add
sti
mov
ror
(bad)
jmp
imul
mov
adc
inc
rcl
mov
shr
gs
sub
je
inc
stos
inc
lahf
xchg
in
in
rcr
lock
jns
push
lea
xor
xchg
sbb
into
mov
fisub
cmp
test
add
add
inc
shl
test
test
mov
push
jns
push
dec
mov
or
das
jbe
xchg
ret
mov
cwde
mov
xchg
push
leave
or
rcl
pop
xchg
(bad)
cwde
hlt
and
pop
clc
dec
push
dec
push
pop
add
mov
sbb
adc
clc
xor
test
test
adc
pushf
mov
aam
jne
test
xor
(bad)
or
xchg
dec
inc
xchg
and
jbe
retf
dec
and
sbb
movs
jne
outs
(bad)
pop
adc
jle
add
clc
mov
mov
jmp
(bad)
mov
push
test
scas
loope
inc
mov
stos
pop
ror
xor
test
mov
mov
test
mov
inc
shl
je
sbb
push
push
jno
pop
cmp
push
push
std
cmc
add
cmp
mov
add
movs
into
sub
push
or
sbb
(bad)
adc
popf
int3
sbb
js
jecxz
push
dec
ror
cmp
add
mov
aad
sar
mov
lds
fs
out
dec
in
dec
push
sub
clts
push
dec
and
and
or
jb
cmp
test
xchg
dec
xsaveopt
outs
adc
pop
std
xchg
push
call
das
jl
mov
movs
sub
or
and
dec
add
push
cmp
shr
and
inc
add
add
lock
xchg
lea
jl
and
cmp
inc
test
retf
cmps
pusha
addr16
or
enter
cmp
xchg
sub
jno
xchg
mov
mov
(bad)
jnp
xor
nop
arpl
mov
or
adc
ins
aas
cmp
mov
lock
xchg
mov
sbb
outs
dec
cmp
cmp
mov
in
ja
mov
addr16
push
int
ror
xchg
add
popa
mov
sbb
or
and
ret
pop
or
test
popa
add
sub
sbb
cwde
(bad)
ins
or
mov
test
add
and
dec
push
pop
xor
(bad)
cld
(bad)
sbb
add
or
or
and
xchg
daa
dec
dec
call
(bad)
sbb
or
hlt
(bad)
arpl
(bad)
in
(bad)
stos
and
lock
hlt
(bad)
mov
ins
add
stc
fdiv
and
and
or
fsub
in
xor
jb
enter
and
lds
mov
enter
daa
inc
int3
(bad)
sar
aam
dec
push
or
sub
add
jns
mov
(bad)
mov
mov
sahf
mov
(bad)
jns
in
pop
mov
mov
mov
cmp
(bad)
sub
and
clc
or
out
xchg
dec
mov
pop
mov
and
cmc
lea
mov
and
or
add
aaa
imul
repnz
or
popf
xchg
and
pop
cwde
pushf
mov
movs
ins
dec
mov
mov
enter
lea
sub
xor
and
sub
xor
and
push
sub
mov
push
pop
addr16
and
jb
cmp
mov
push
ins
jo
js
repnz
daa
xchg
cld
aad
push
enter
or
jmp
enter
in
adc
or
push
dec
push
sbb
push
pop
pop
rol
in
or
ins
stos
pop
and
or
aad
push
enter
test
pop
add
xor
shl
sbb
or
nop
push
pop
dec
jecxz
jle
imul
ins
push
neg
mov
mov
outs
push
pop
jo
iret
adc
out
push
lea
jno
jb
icebp
imul
je
enter
push
xor
ja
inc
test
inc
add
or
fsub
add
inc
sub
test
jmp
dec
sti
add
fcom
jae
adc
aam
sbb
dec
mov
or
push
pop
jne
je
in
cdq
push
cmc
das
sbb
or
push
mov
stos
mov
mov
call
shl
mov
adc
and
sbb
scas
pop
rcr
int
or
xor
fbstp
mov
mov
add
adc
repz
aas
push
and
jp
imul
adc
rcr
ja
fstp
adc
adc
movs
add
mov
pop
inc
enter
inc
enter
enter
mov
add
retf
movs
xor
and
adc
sbb
mov
rcr
sbb
xor
les
jg
adc
add
mov
jmp
sbb
or
add
mov
pop
sbb
in
test
inc
mov
xor
and
pop
fmul
pusha
mov
jg
mov
adc
sbb
xchg
retf
adc
adc
adc
in
xchg
call
adc
pop
dec
push
xchg
xor
xor
and
xchg
xor
sub
and
xchg
xchg
popa
mov
xor
inc
mov
adc
mov
aad
mov
mov
jmp
add
and
or
loopne
mov
and
aas
sub
call
pusha
inc
mov
add
rcl
fcomp
sbb
add
rol
inc
mov
inc
or
sbb
fimul
or
fmul
sub
sbb
shl
mov
adc
pop
and
and
or
sbb
inc
add
or
sbb
adc
and
add
repz
add
sbb
xchg
push
adc
add
xchg
test
sub
shl
adc
push
xchg
inc
inc
push
xor
and
sub
mov
pop
adc
jb
sbb
sub
std
or
inc
sub
sub
sbb
and
inc
sub
aas
pusha
pop
and
dec
xor
dec
cmp
aam
nop
stos
push
aas
mov
fwait
or
adc
loopne
test
iret
xchg
jb
pop
mov
mov
retf
movs
sbb
and
add
pop
xlat
pop
and
mov
dec
aas
or
fwait
sbb
mov
adc
pusha
call
pop
push
mov
mov
mov
adc
fs
arpl
sbb
bound
push
fadd
pop
sub
ror
or
pop
cwde
sbb
inc
add
or
jne
jge
es
and
popf
mov
repnz
pop
aas
mov
add
pop
inc
push
ja
sub
fidiv
fwait
mov
movs
xchg
add
inc
inc
lods
push
pop
pop
test
outs
pop
jl
xor
push
sub
ins
rol
pushf
test
ret
add
pop
adc
jmp
pusha
add
dec
or
xchg
and
sub
repnz
mov
jge
xor
cdq
or
enter
nop
mov
test
popa
adc
sbb
aas
rol
es
add
sbb
xchg
pusha
and
ins
stos
jnp
or
rol
inc
dec
stc
je
add
pop
adc
fadd
push
jle
xlat
or
sub
add
sub
adc
and
in
jne
loopne
lahf
shl
lahf
xor
adc
retf
movs
pavgb
out
enter
lods
fadd
and
retf
shl
cmp
loopne
dec
cmps
test
enter
mul
push
shr
add
jmp
sbb
dec
jne
(bad)
ficom
push
nop
call
xor
xor
int3
xchg
sbb
sub
icebp
enter
xor
dec
mov
pusha
repz
mov
nop
xchg
ror
sahf
in
mov
pop
add
dec
punpcklwd
rcl
adc
add
inc
cmp
adc
mov
mov
das
sbb
sub
mov
add
out
xchg
je
jmp
loopne
adc
or
xchg
add
dec
dec
arpl
fcom
pop
imul
bound
mov
mov
test
inc
jae
int3
push
movs
inc
adc
sti
fistp
xchg
or
xchg
xchg
js
inc
add
or
dec
mov
xchg
pop
test
pop
and
(bad)
sar
ds
mov
mov
lea
or
lods
add
pushf
adc
pop
and
mov
cdq
sbb
or
jns
xchg
bound
pusha
mov
aaa
sahf
imul
stos
add
sub
adc
shr
ins
pusha
jbe
push
dec
pop
jmp
push
cs
dec
scas
pop
adc
pop
add
shr
fsub
pop
xchg
adc
add
in
outs
mov
mov
jmp
dec
add
inc
and
retf
xchg
cmp
scas
and
inc
cmps
les
pop
dec
sbb
lds
retf
mov
shl
enter
sbb
repz
add
pop
cmp
mov
jmp
hlt
add
sub
or
in
pop
add
push
mov
inc
lahf
shl
add
add
inc
mov
aaa
inc
pop
iret
push
push
ret
inc
mov
xor
and
pop
jle
ret
jmp
add
push
stos
pop
add
dec
dec
in
fwait
push
paddw
add
mov
cmp
add
ret
xor
(bad)
cmp
mov
pop
add
jno
xor
xor
or
fstp
mov
pop
jmp
addr16
cmp
lock
mov
push
sub
add
mov
inc
push
lock
aas
inc
pop
pop
test
rcr
je
inc
pop
mov
pop
inc
ja
add
jmp
sub
ret
aam
loopne
pop
jle
leave
and
or
arpl
jne
int3
xchg
jl
lods
sub
xor
pop
jns
add
daa
test
cmp
test
mov
les
xchg
lock
enter
nop
jbe
push
sbb
adc
xor
sbb
and
hlt
test
push
out
and
mov
arpl
or
xchg
jne
mov
add
push
sub
push
push
add
xchg
retf
or
mov
dec
call
sbb
popf
fucomip
push
ja
inc
adc
dec
iret
idiv
jae
add
inc
ret
xor
lea
xor
in
pushf
jo
loopne
aas
and
add
inc
add
fidiv
hlt
mov
and
icebp
cmp
jecxz
pop
movs
movs
fisttp
add
sbb
cmp
sbb
in
lock
pop
rcr
xchg
or
dec
mov
int
imul
mov
or
test
test
and
and
jne
or
adc
add
sub
cdq
add
sahf
xchg
push
arpl
lods
ins
jbe
add
mov
js
push
cmp
cdq
push
and
dec
aam
or
add
jo
jp
mov
adc
lock
and
and
loope
and
fbld
add
jge
dec
pop
(bad)
out
mov
push
inc
and
pop
sbb
jo
mov
cli
add
aas
jmp
add
xor
je
repz
mov
(bad)
mov
mov
test
adc
xchg
jmp
leave
(bad)
jnp
adc
inc
pop
mov
or
sbb
sub
ja
lahf
cmp
add
(bad)
lds
inc
dec
dec
pop
xor
jbe
or
imul
mov
mov
add
(bad)
mov
add
and
mov
push
aaa
push
dec
xor
vmread
jo
rol
pop
das
or
clc
push
js
or
mov
es
ins
sbb
sbb
adc
(bad)
rol
jb
adc
jnp
jne
scas
in
cwde
sar
add
add
adc
pop
clc
invd
lods
in
adc
mov
xchg
and
add
dec
mov
and
add
shl
data16
fmul
fld
(bad)
clc
lahf
hlt
or
pop
mov
or
movs
and
add
hlt
mov
hlt
lock
push
and
jle
cwde
enter
cmps
std
xchg
mov
in
push
pop
push
ins
gs
ins
retf
mov
sub
pushf
mov
and
retf
add
add
add
add
(bad)
mov
nop
mov
enter
push
inc
push
nop
dec
add
or
cs
call
iret
add
xchg
lea
ret
shl
in
sar
iret
add
pop
inc
je
inc
sub
ss
inc
push
xor
ret
sbb
nop
sar
cdq
dec
inc
ss
rol
add
pusha
and
out
pop
rol
dec
add
sub
out
in
jb
mov
add
add
sbb
or
or
pop
mov
ins
adc
adc
and
and
inc
dec
sbb
shr
push
dec
add
fisttp
push
and
add
add
loope
add
add
mov
in
add
add
add
jbe
pop
or
or
sub
sbb
or
inc
sbb
xor
dec
mov
and
cs
je
push
je
sub
add
pusha
inc
imul
mov
add
inc
sub
sub
and
inc
lods
cmp
out
test
stos
mov
adc
mov
push
test
icebp
xchg
adc
sbb
enter
clts
out
cmps
icebp
ins
adc
shl
js
sbb
push
jb
mov
ror
mov
cmp
mov
sbb
xor
gs
jg
add
arpl
xchg
and
inc
mov
mov
mov
or
add
inc
xor
add
sub
cwde
fimul
xor
or
sbb
mov
lods
dec
dec
fs
push
aas
imul
jae
cld
sub
loopne
adc
movs
push
sub
cmp
adc
push
adc
ins
adc
imul
mov
test
sub
call
add
and
xchg
sbb
adc
gs
jo
inc
es
sar
push
retf
and
loope
popa
mov
inc
xchg
enter
cld
adc
clc
mov
test
jnp
push
cld
dec
jnp
aaa
xor
add
add
pusha
call
jg
lahf
xchg
sub
(bad)
mov
mov
adc
dec
loopne
adc
dec
mov
sar
hlt
cwde
xchg
mov
push
enter
mov
add
pop
adc
je
mov
aas
mov
inc
sub
jo
mov
dec
and
popf
add
and
sub
fwait
xchg
fst
add
lods
jmp
daa
cdq
lahf
sub
adc
mov
rol
ins
and
jecxz
fiadd
nop
adc
cli
mov
pop
push
popf
or
sbb
mov
add
mov
mov
retf
add
ficomp
dec
push
pop
fcomp
jge
xchg
popf
in
arpl
xchg
or
gs
lods
fcom
push
inc
xor
lods
shl
inc
jecxz
pop
xchg
fadd
cwde
push
gs
(bad)
pushf
adc
or
ror
cmps
push
dec
mov
daa
sbb
mov
xor
and
cmp
rol
or
sbb
ret
adc
or
fwait
and
xchg
push
cmp
sub
add
xor
jg
or
nop
cmps
or
test
pop
pop
pop
call
bswap
adc
jnp
das
add
adc
adc
sbb
mov
adc
call
rcl
retf
add
and
imul
cmp
stos
inc
add
jg
jl
pop
inc
add
cmps
lahf
adc
gs
jns
mov
repz
aas
cdq
pop
mov
or
add
mov
adc
or
sbb
rcr
and
sbb
inc
daa
jg
test
push
jb
push
push
and
add
mov
mov
or
and
dec
cs
mov
inc
add
fnsave
adc
adc
sbb
lds
mov
in
or
add
sar
mov
inc
inc
push
push
push
pop
dec
fist
enter
mov
xchg
xor
movs
rol
jb
lahf
je
mov
(bad)
sbb
mov
dec
push
cs
pop
sbb
popf
aam
mov
and
pop
pop
and
stos
mov
pop
sbb
push
pop
mov
in
mov
lods
mov
fwait
push
inc
dec
or
sbb
ins
lahf
xor
movs
fs
lahf
sub
sbb
mov
test
les
xor
jmp
mov
jg
sub
mov
push
push
cdq
sbb
sbb
fcmovb
add
mov
cmps
rcl
call
or
mov
dec
push
adc
or
int
or
pushf
jg
push
call
or
sub
loope
jg
dec
pop
mov
sbb
cmp
pop
cmps
push
inc
mov
cld
pop
adc
or
push
(bad)
pop
daa
mov
dec
adc
adc
push
add
mov
adc
inc
inc
add
adc
and
pop
push
mov
add
imul
sbb
cmp
call
mov
cmpps
out
push
fadd
mov
lahf
in
or
rol
inc
add
rcr
inc
add
lods
cmps
loopne
arpl
and
cmps
jl
movs
shl
pop
add
aas
rcl
mov
pop
jg
sbb
or
nop
mov
loop
pop
sbb
push
data16
sbb
jno
(bad)
dec
frstor
inc
test
aas
pop
stos
sub
push
fsub
sbb
mov
sub
lods
cmps
push
and
lods
out
popa
and
xor
xchg
xor
or
adc
lahf
leave
adc
dec
pop
stos
jns
in
add
xor
xor
cdq
pop
lods
(bad)
cmp
into
jae
xor
sub
inc
sub
sbb
inc
sbb
or
jns
sub
jb
pop
push
jge
or
pop
sub
xchg
inc
rol
inc
sbb
pop
or
mov
and
stc
gs
pusha
add
nop
and
out
xchg
pop
mov
loop
or
add
sub
aas
nop
pop
and
inc
in
scas
jnp
add
push
ja
cmp
aam
mov
aam
es
ret
fdiv
mov
pop
int
fdiv
retf
cmps
loope
rcr
or
mov
mov
adc
add
loope
fcom
ins
loop
or
adc
rcr
push
dec
push
or
and
adc
leave
mov
adc
repnz
mov
pop
dec
enter
add
pop
icebp
lahf
sbb
fimul
push
jns
fadd
sub
arpl
call
scas
ror
and
add
sar
or
mov
test
mov
cmp
adc
xchg
cmp
ds
adc
and
mov
mov
fwait
ret
pop
add
xchg
and
gs
fistp
je
sbb
fmul
bound
ret
adc
or
adc
mov
test
dec
or
push
and
loope
add
js
jne
cdq
cld
sbb
mov
lds
inc
add
mov
pop
test
or
pop
movs
pop
dec
cmp
pop
cli
or
dec
ret
pop
imul
shl
(bad)
movs
and
push
js
and
jnp
xor
fadd
and
rol
push
xchg
dec
push
clc
mov
sti
nop
jmp
add
cld
imul
stos
fimul
fwait
jp
lahf
mov
pop
add
addr16
xchg
pop
push
aas
cmp
loopne
popa
and
adc
stos
and
rcl
dec
and
mov
movs
adc
fistp
and
add
scas
dec
loopne
xchg
popa
cmp
(bad)
jns
add
xchg
fwait
pusha
dec
dec
int3
cmps
mov
ins
pop
adc
and
or
fild
add
and
fs
or
enter
mov
push
imul
or
aaa
or
add
sub
mov
lahf
and
xchg
in
cmp
and
sbb
mov
sbb
inc
jg
movs
mov
add
inc
dec
push
jge
add
and
mov
adc
mov
or
lock
sub
jg
adc
push
or
sbb
jmp
add
sbb
xor
push
add
adc
inc
pop
popf
rcl
mov
lock
inc
dec
or
inc
and
js
lds
aaa
cdq
dec
dec
xor
loope
adc
mov
or
aad
jecxz
and
aaa
adc
mov
push
inc
push
pop
rcr
jmp
cmp
pop
scas
les
add
js
xor
add
in
pusha
test
sbb
dec
or
or
pop
clc
inc
push
and
pop
shl
push
pop
xchg
fs
arpl
dec
in
or
popf
push
inc
in
push
hlt
js
push
int
div
rol
into
(bad)
push
rcl
pop
dec
ins
adc
dec
inc
fwait
shl
ins
stc
hlt
loopne
inc
add
hlt
pop
adc
sbb
push
add
pop
imul
add
jb
and
ja
push
jo
add
sbb
in
in
sub
add
push
es
fcom
mov
push
mov
in
in
sbb
cmps
jge
movs
or
dec
dec
fdivr
sbb
pop
dec
pop
retf
mov
xchg
in
and
xchg
pop
mov
mov
lods
das
sub
inc
add
mov
adc
(bad)
adc
je
(bad)
push
mov
xchg
push
or
shl
loope
adc
sbb
inc
cmps
or
outs
ret
add
cmp
std
mov
push
in
xor
inc
sbb
inc
enter
inc
push
dec
pop
in
xor
push
(bad)
adc
sbb
and
cmps
aaa
lds
add
(bad)
jno
lds
sub
jns
int3
jmp
push
or
inc
ja
mov
mov
out
nop
jne
imul
push
mov
jl
dec
repz
mov
int
aam
rcr
mov
leave
addr16
and
or
add
test
xor
out
mov
jnp
cdq
les
dec
das
into
and
and
(bad)
cmp
dec
std
jne
dec
popa
(bad)
adc
mov
add
add
jmp
mov
les
or
test
jge
clc
pop
or
test
add
mov
push
cli
jg
pop
cmp
popa
or
fcom
xor
ins
adc
mov
shl
xor
add
movs
or
mov
adc
ret
cdq
dec
sbb
outs
jmp
sbb
rol
pushf
inc
ret
je
in
in
fwait
inc
sub
cmc
dec
xchg
adc
inc
pusha
add
lahf
out
or
rcl
hlt
jmp
add
xor
push
(bad)
push
nop
inc
mov
ins
sub
jne
push
push
lods
inc
cld
movs
movs
mov
emms
or
xor
cdq
stos
mov
ror
data16
sbb
sub
(bad)
xor
rol
mov
movs
inc
(bad)
icebp
inc
dec
jb
test
jns
pop
jne
inc
jmp
add
adc
fadd
add
xchg
dec
mov
and
dec
mov
xor
push
aas
xor
fist
adc
pop
mov
mov
pop
and
mov
imul
sbb
(bad)
js
pushf
leave
inc
mov
mov
adc
lea
xchg
inc
or
loope
cmp
sub
rcr
test
and
dec
xchg
dec
scas
add
push
push
mov
jmp
dec
add
inc
add
sar
pop
int3
pop
xor
mov
jg
jecxz
xchg
jae
pop
push
add
stos
test
jecxz
retf
cwde
movs
and
jb
mov
sbb
cwde
rol
sub
outs
pop
push
xor
or
les
dec
js
rcl
and
shl
ficomp
mov
or
adc
add
sub
adc
outs
sbb
movs
dec
add
mov
jmp
es
adc
rcl
sub
jmp
sbb
sub
adc
and
push
rcl
fstp
add
fstp
dec
sub
dec
clc
pusha
add
mov
pop
imul
(bad)
inc
jle
xor
sbb
int3
jmp
dec
les
cdq
fisttp
mov
mov
adc
and
addr16
adc
icebp
sbb
aas
or
or
jno
or
retf
es
jmp
inc
xadd
lock
and
(bad)
(bad)
lds
and
enter
and
or
add
(bad)
add
adc
mov
shl
dec
adc
cwde
or
call
mov
adc
std
arpl
leave
cs
and
pop
test
push
cld
scas
and
bound
sti
cmp
test
ror
imul
mov
sub
or
add
hlt
inc
cmp
mov
in
aam
sbb
in
cli
pushf
outs
or
push
sub
mov
lods
adc
xchg
lsl
push
push
dec
icebp
adc
push
mov
or
add
test
push
inc
pop
or
push
jnp
enter
or
push
popa
jecxz
adc
add
daa
daa
inc
push
mov
fiadd
pop
cwde
or
adc
sbb
push
xchg
fiadd
cmp
push
jb
shl
daa
lock
mov
push
or
sub
pop
push
cmps
mov
cmp
das
cs
push
pop
pop
sub
js
pop
shr
clc
push
or
xchg
les
cmps
mov
inc
mov
adc
or
or
add
jo
pop
mov
pop
add
adc
push
or
adc
add
sub
imul
ds
fstp
jno
cmp
lds
jle
pop
sar
pop
xadd
add
jmp
call
mov
jle
loop
sub
add
pop
xchg
push
and
popa
popf
xor
pop
test
add
and
sar
lahf
aad
push
sar
imul
lea
or
xor
sti
and
jne
call
mov
das
movs
sub
jbe
(bad)
loopne
test
data16
add
movzx
or
and
and
add
das
pop
jmp
mov
xor
add
cmp
hlt
and
push
mov
sbb
add
test
add
jno
pop
mov
mov
push
push
in
out
mov
add
lods
pop
mov
jecxz
jmp
sbb
test
lock
inc
adc
xor
push
xchg
loopne
js
or
mov
pop
inc
or
js
pop
inc
mov
sbb
in
pop
mov
std
ins
and
xchg
or
cmp
ins
push
sub
lock
adc
dec
add
lea
movs
rcl
(bad)
jle
push
rcl
aam
push
fsub
out
push
out
and
test
inc
dec
retf
lahf
inc
cmp
dec
sbb
sti
cmp
or
mov
cpuid
mov
and
mov
into
jb
xchg
pop
and
rol
inc
push
fistp
push
sbb
js
stos
mov
fwait
mov
add
xor
test
push
aaa
add
dec
ins
(bad)
dec
sbb
mov
inc
mov
cld
add
jecxz
test
mov
adc
jno
test
movs
or
sar
mov
push
or
push
add
add
push
push
lock
xor
push
pop
inc
push
js
inc
fmul
xor
mov
pop
ins
or
sbb
push
dec
push
xor
aaa
sub
shl
test
mov
lock
sar
mov
jb
ins
pop
test
mov
loop
into
pop
pop
push
call
popa
mov
mov
rol
mov
jmp
pop
lock
jl
push
mov
les
xchg
enter
pop
push
push
mov
mov
push
jp
mov
popa
mov
dec
in
inc
test
or
fimul
sbb
aaa
or
wbinvd
sub
jne
shl
push
push
xor
movs
mov
mov
adc
int
cmp
sub
pop
psubusw
add
mov
mov
mov
sub
ss
push
(bad)
jmp
les
or
call
loopne
inc
shr
add
fimul
add
sbb
repnz
add
mov
sub
ret
aas
or
xchg
mov
sub
cmp
ret
cmp
bound
fbld
retf
push
fistp
bound
clc
mov
fbld
sbb
jbe
inc
test
add
dec
sub
fistp
pop
jmp
mov
mov
push
shl
add
popf
dec
ror
int
or
adc
mov
xchg
push
jp
lea
imul
sub
js
sbb
push
jbe
or
or
pop
aam
push
jecxz
and
cmps
imul
or
inc
iret
inc
loop
and
outs
xor
push
cwde
mov
xor
imul
push
and
inc
add
mov
pusha
and
push
and
loopne
sbb
jle
cmp
add
arpl
mov
jmp
add
dec
loop
in
pop
jg
xchg
dec
loope
arpl
ret
test
ja
pop
jno
inc
lahf
jg
dec
inc
sbb
xor
retf
or
test
pop
and
add
push
pop
dec
js
add
inc
add
jmp
clc
jne
rol
add
cmp
jg
sub
fcom
adc
ds
call
ret
and
sar
lods
inc
add
cmp
and
sub
rcr
push
sub
mov
pusha
and
push
mov
jmp
inc
aam
inc
push
xchg
mov
aad
mov
adc
mov
add
std
add
jg
cmp
shr
add
add
pop
pop
pop
pushf
push
lahf
in
in
inc
imul
sar
xchg
inc
add
fdiv
mov
fs
mov
jge
xchg
pusha
jl
add
mov
sub
aas
add
div
call
cmps
add
xchg
and
sub
sbb
push
xchg
pop
std
pop
sbb
sbb
shl
sbb
sub
call
fwait
push
mov
or
movs
sbb
fucom
mov
loopne
add
rcl
pop
pop
xlat
sub
jb
sbb
mov
add
xor
and
cmc
jmp
push
adc
js
push
push
inc
enter
sbb
jecxz
call
aas
dec
or
push
add
push
lahf
sub
jmp
ror
(bad)
and
mov
adc
lahf
in
lea
cmp
mov
mov
sbb
jno
dec
ins
scas
fcom
sbb
ret
outs
push
xor
dec
xchg
les
loopne
inc
cmp
xor
or
in
push
test
ins
xor
or
sbb
rol
mov
fisttp
js
xchg
jns
xlat
xchg
retf
dec
js
lods
add
in
add
push
int
adc
nop
cmp
cmp
rol
push
jmp
js
fcompp
jns
add
and
or
inc
jmp
or
jmp
pop
and
push
leave
scas
jno
cli
sti
mov
push
nop
(bad)
cwde
jno
fbld
add
das
sub
xchg
dec
push
jnp
add
call
sbb
and
lock
in
inc
xchg
adc
mov
fcom
lock
loopne
sub
sub
inc
out
clc
lock
aam
in
cmp
jbe
mov
mov
(bad)
push
rdtsc
mov
jl
sbb
das
jmp
mov
cmp
fst
push
outs
push
and
add
sbb
push
adc
add
aas
call
inc
fsubr
push
cmp
clc
or
dec
test
mov
out
pop
or
cmp
mov
mov
adc
xchg
adc
dec
add
popf
or
sub
mov
and
pop
push
sub
fdivr
or
outs
or
jne
(bad)
fld
xchg
mov
or
xlat
adc
add
hlt
sub
arpl
jmp
inc
push
sbb
hlt
and
cwde
fld
loope
or
push
jno
out
cmp
shl
add
and
int
adc
add
adc
popf
cmp
add
add
xor
pop
call
add
add
pop
and
push
add
cmp
cmp
cmp
pop
jmp
pop
sub
sub
call
clc
sbb
enter
test
xchg
(bad)
add
rcr
sub
or
mov
xor
jo
xchg
mov
lahf
adc
or
imul
push
sbb
cmp
xchg
sbb
jg
add
nop
retf
pop
lahf
sti
ins
and
pop
inc
mov
cli
inc
ret
push
je
xor
push
add
or
mov
and
out
sbb
sbb
adc
push
daa
sub
mov
cdq
or
sub
xor
pusha
inc
mov
imul
int3
in
add
add
jo
jp
aas
xor
jg
add
or
pop
push
mov
sbb
push
imul
xchg
push
in
mov
and
or
lahf
xchg
push
adc
and
pusha
test
sub
jg
sbb
and
add
lea
add
rcr
add
and
inc
mov
scas
test
dec
test
mov
sub
jno
xor
hlt
pop
ret
pop
into
mov
pushf
lahf
pop
shl
nop
mov
add
sub
jg
and
add
mov
mov
das
lds
cmp
or
add
add
add
inc
pop
jg
sub
add
pop
add
push
xor
and
inc
lock
cmp
mov
and
pop
test
lahf
aaa
loopne
xor
pop
js
sub
aas
scas
fcom
in
lahf
enter
add
push
cmps
out
pop
aas
fadd
(bad)
push
push
adc
and
sar
or
outs
push
mov
add
mov
pop
ret
aas
sub
inc
or
(bad)
or
add
mov
dec
mov
or
fmul
test
in
jl
rol
pop
and
ret
aas
sbb
push
inc
mov
xchg
pop
rol
ins
pop
sbb
or
jmp
pusha
add
inc
add
sub
push
xchg
fnclex
xchg
call
add
and
sub
pop
js
gs
sbb
jne
lds
repnz
cld
dec
aas
dec
arpl
jecxz
je
sbb
push
xchg
aas
push
sar
adc
pusha
call
sti
dec
dec
add
sbb
ror
jmp
xchg
push
cmp
ror
lds
(bad)
pop
mov
sbb
sar
sbb
nop
or
fmul
pop
sbb
xchg
cmps
and
in
mov
push
add
cmps
xor
dec
mov
dec
lahf
mov
cmps
and
sub
mov
sub
shr
xchg
es
dec
lea
cwde
shr
sbb
and
adc
inc
arpl
fs
fild
xor
cmps
push
mov
jmp
push
push
sbb
ja
xor
add
push
adc
js
adc
imul
pop
popa
inc
mov
or
ret
add
sub
out
jmp
jmp
stc
mov
fbld
mov
imul
adc
or
inc
movs
sbb
xchg
ss
jnp
sbb
jmp
add
mov
mov
mov
add
sbb
sbb
and
push
add
cmps
mov
xchg
mov
add
lahf
ret
sub
lock
mov
mov
pusha
test
mov
in
cmps
nop
mov
sub
add
sbb
and
mov
mov
pop
adc
jmp
add
push
xor
mov
rol
push
add
adc
hlt
lea
(bad)
shl
mov
adc
rcr
pop
jecxz
inc
arpl
jg
out
add
sbb
or
bound
jg
fs
xor
cs
repnz
call
pushf
inc
test
jmp
xchg
mov
pop
jl
call
push
sbb
lods
dec
or
ret
pop
push
in
int
add
or
mov
pop
add
mov
xor
or
fbstp
and
adc
nop
rcl
mov
es
loopne
repz
pop
or
push
cs
je
mov
inc
xor
jmp
js
push
mov
sbb
dec
sbb
and
lods
inc
test
and
jmp
jmp
add
sub
xor
in
push
inc
xor
sbb
sbb
call
push
rcl
lock
es
sub
jmp
add
jg
in
mov
mov
or
xor
inc
and
das
sub
movzx
add
sbb
push
stos
in
dec
inc
xchg
lock
popf
pop
into
in
mov
shl
in
sub
rol
fst
push
retf
or
jmp
lea
inc
sub
push
test
bndldx
and
loopne
bound
sbb
aas
(bad)
int3
sub
adc
or
adc
sub
inc
pusha
or
popa
push
add
cs
je
or
test
pop
push
test
fucomp
adc
push
mov
mov
mov
imul
sub
cmp
mov
aaa
add
or
add
push
mov
popa
jecxz
aas
inc
addr16
mov
ins
das
or
mov
sub
or
es
das
and
jmp
test
xchg
arpl
daa
adc
push
pusha
dec
inc
mov
add
movs
(bad)
stc
push
cwde
or
or
dec
cmp
mov
add
sbb
mov
or
pop
add
clc
jmp
jmp
leave
add
xor
cdq
and
or
xor
pop
shl
nop
cmc
imul
adc
sbb
inc
lods
dec
pop
jne
sub
clc
inc
jmp
inc
xchg
maxps
dec
push
cdq
dec
and
rcr
nop
push
mov
aad
not
cdq
or
wrmsr
clc
je
leave
or
push
(bad)
adc
mov
pop
adc
lea
push
in
cld
daa
or
jmp
mov
rcl
and
(bad)
and
ror
mov
dec
fmul
or
add
jne
sbb
imul
push
sub
fldpi
or
add
jmp
xor
lahf
sbb
sub
aam
lods
jge
ins
lods
nop
push
add
(bad)
(bad)
cli
dec
and
outs
xchg
inc
xchg
loope
lock
add
call
popf
jae
xor
jae
adc
movups
rol
popa
fbstp
aam
jo
jg
mov
pop
pop
and
pop
inc
sbb
or
cli
adc
clc
xchg
mov
push
lock
shl
push
lock
enter
shrd
pop
imul
pop
cld
fbstp
sti
jl
mov
(bad)
call
gs
mov
fcomp
add
xchg
ins
adc
mov
add
aad
mov
inc
push
or
jne
sbb
pop
pop
std
(bad)
cmp
rol
dec
inc
outs
outs
aas
sar
lahf
(bad)
cmp
cld
push
adc
and
in
push
or
add
(bad)
dec
sub
(bad)
xor
(bad)
cld
cld
and
pushf
mov
in
sbb
aad
pop
lahf
or
cmp
or
test
cmp
or
jg
push
mov
or
jae
and
jne
ins
lahf
push
rol
ss
ins
and
add
pop
dec
call
xchg
aad
sub
add
xor
mov
ret
lahf
mov
add
adc
pop
push
aad
push
xchg
inc
ja
sbb
(bad)
and
mov
mov
fldenv
pop
imul
add
(bad)
lea
or
daa
and
pop
jl
mov
jae
add
cmp
sub
(bad)
in
xor
adc
jg
nop
or
xor
pop
cmp
test
pop
ffreep
dec
push
sbb
and
or
cmp
cmps
aas
lock
cld
jl
pop
and
cs
mov
cmp
dec
jmp
jns
je
inc
xchg
rol
in
jmp
cmp
adc
ja
rol
or
mov
pop
dec
(bad)
jb
test
sbb
sbb
fisub
jns
or
jle
or
fmul
hlt
lea
loopne
add
dec
cmp
dec
and
fstp
push
add
sub
mov
add
addr16
push
add
xor
xchg
sbb
or
add
xchg
push
lock
sub
enter
mov
xor
clc
loopne
xchg
sbb
clc
jmp
adc
push
jge
xchg
jg
pop
cdq
xor
mov
ror
xchg
or
hlt
pop
cld
jmp
and
loope
sub
mov
jno
mov
rol
push
in
and
push
add
loope
inc
pop
cmp
ja
push
cdq
dec
xor
pop
add
pop
xor
mov
fdivr
shr
fild
fist
or
adc
and
nop
mov
adc
xchg
inc
bound
adc
xchg
push
call
jne
sub
xchg
cmps
pop
fs
and
retf
push
adc
mov
add
mov
cli
pusha
pop
or
fdivr
adc
rcr
dec
pop
sbb
mov
pop
add
sbb
aas
fild
mov
add
and
addr16
retf
and
mov
adc
popf
shr
and
mov
and
xor
add
mov
sbb
movs
mov
hlt
ret
pop
adc
test
lds
jl
push
jge
int3
adc
inc
or
or
mov
cmps
inc
xchg
fistp
mov
or
mov
push
js
jg
call
mov
push
ret
sub
nop
sbb
test
mov
inc
xor
lock
cmps
cmp
sbb
enter
xor
mov
add
fs
xlat
or
ins
mov
or
jo
stos
push
lock
dec
or
pop
das
dec
add
(bad)
les
xchg
out
or
jl
lods
mov
aam
fmul
or
mov
loopne
cld
in
jb
pushf
call
movs
or
adc
lods
pop
out
add
test
lods
mov
dec
cmp
ins
mov
mov
sbb
pop
push
pop
fsub
nop
in
mov
inc
add
aas
pop
xchg
test
cmp
int3
in
pop
pop
test
mov
sbb
and
sub
add
dec
add
add
add
dec
lahf
or
int3
and
sbb
fwait
xchg
or
adc
adc
cmp
or
inc
cs
and
jbe
ins
cmp
jne
sbb
sbb
outs
loopne
lock
int3
cmc
sbb
xor
pop
fsubr
retf
out
inc
sub
sbb
das
fs
add
inc
fsub
push
retf
in
push
jb
pop
mov
dec
sbb
call
ins
sbb
(bad)
and
jge
mov
inc
push
ror
cmp
fcomip
adc
shl
or
movaps
or
fstp
inc
pop
iret
pop
inc
sbb
adc
mov
push
push
stos
push
sti
push
add
sbb
shl
xlat
or
push
add
sub
fld
pop
push
adc
inc
mov
inc
jl
and
dec
call
retf
pop
or
add
push
pop
push
das
test
xchg
repnz
pusha
aad
cmp
cmp
mov
clc
add
pop
mov
adc
inc
cmc
inc
and
jo
ja
or
xor
sub
retf
dec
jl
and
test
cmp
shl
in
lea
xor
jecxz
rcr
ss
push
xchg
add
xchg
cmp
inc
sahf
fmul
in
test
adc
xchg
lock
mov
mov
jg
sbb
shr
pop
add
clc
fs
xchg
or
fadd
imul
pop
icebp
mov
cmp
pop
jl
and
sub
dec
xor
dec
enter
mov
cmp
and
fcom
cmp
push
mov
enter
dec
imul
jo
mov
and
(bad)
push
enter
or
mov
or
dec
int
mov
sahf
or
mov
cdq
mov
cmp
mov
cmp
xor
adc
dec
cmp
and
cmp
aam
popf
ror
add
inc
xchg
or
and
sbb
adc
clc
push
inc
and
xchg
lods
pop
or
mov
cmp
pop
sub
pusha
cmp
fisttp
mov
scas
and
push
jmp
sbb
mov
and
test
and
and
or
pusha
add
sub
pop
mov
sbb
inc
int
int3
inc
xchg
add
adc
sub
adc
pop
nop
cdq
ror
add
movs
test
add
or
xchg
jl
int3
in
mov
and
movs
mov
dec
sbb
rcl
int
push
xchg
push
xor
sbb
mov
dec
adc
and
out
sbb
xchg
test
or
sbb
and
(bad)
mov
sub
sbb
pop
xor
sub
xchg
adc
push
stc
mov
shr
pop
mov
fistp
push
push
cwde
mov
call
pop
aaa
cmps
mov
nop
xchg
test
lods
movs
xor
out
test
nop
sbb
pop
mov
dec
push
imul
jl
inc
in
jecxz
mov
mov
xchg
mov
mov
test
mov
mov
push
lock
mov
test
lea
adc
mov
push
adc
lods
(bad)
sar
fs
pop
cmp
pop
lods
dec
imul
adc
jo
data16
xchg
ss
mov
dec
scas
add
rol
push
xchg
cld
retf
jae
mov
sbb
(bad)
or
clc
out
dec
jl
shl
sbb
push
dec
ins
iret
push
mov
mov
jb
cmp
sub
js
push
dec
inc
pusha
or
sub
jb
xchg
sbb
fs
(bad)
movs
out
in
adc
or
sbb
add
push
mov
cmp
adc
loopne
pop
lock
loope
arpl
adc
inc
fs
adc
sub
sti
add
bnd
out
pop
stos
jl
xor
jbe
les
inc
sbb
add
xchg
adc
xor
cmp
shl
in
inc
push
dec
sbb
or
and
jo
bound
je
push
push
add
test
scas
push
sbb
das
das
sub
nop
xor
jmp
cmps
push
and
push
pop
mov
mov
adc
inc
push
lea
sbb
retf
icebp
fs
shr
xchg
mov
lds
mov
mov
mov
and
xchg
sub
mov
and
hsubpd
xor
ret
cmc
sub
cmp
push
adc
inc
ins
rol
mov
add
popf
mov
sbb
sbb
adc
shl
retf
mov
jb
adc
adc
and
dec
and
dec
pop
aas
sub
or
push
xor
add
popf
sbb
push
loopne
hlt
pop
fadd
or
inc
outs
xchg
cmp
(bad)
sbb
fisub
or
fild
movs
icebp
adc
popf
adc
sbb
ret
jmp
cdq
fcom
push
test
pusha
retf
and
sbb
retf
sti
daa
inc
or
loope
in
sbb
pusha
or
or
je
daa
adc
jo
rol
inc
xchg
push
shl
cmp
inc
lahf
jl
adc
pcmpeqb
sbb
addr16
cmp
cmp
mov
in
lock
sub
std
add
push
push
inc
ins
push
daa
xchg
fistp
add
into
add
or
pop
jp
push
(bad)
cmp
push
xchg
mov
jecxz
add
in
nop
add
stos
add
or
dec
test
jmp
vpaddsb
lods
pop
sbb
imul
in
inc
sbb
inc
imul
and
mov
enter
bound
jae
in
stos
pop
leave
jne
mov
lock
fst
add
rol
fs
btr
mov
nop
add
inc
mov
dec
dec
dec
leave
getsec
retf
and
rol
sbb
jo
nop
add
in
ret
jo
add
adc
out
dec
les
sub
or
int3
mov
ins
(bad)
mov
add
nop
retf
cli
scas
sbb
push
or
or
movs
test
dec
aad
sub
nop
jl
shl
push
int
add
push
ret
mov
(bad)
cmp
pop
push
mov
pop
mov
jmp
cmp
jae
iret
push
arpl
jg
inc
movs
xor
out
jmp
adc
fimul
imul
mov
jmp
add
push
and
aas
fcom
inc
jp
add
push
push
sub
jnp
pop
movs
movs
icebp
fwait
mov
pop
dec
or
or
sbb
fsub
adc
xchg
shl
mov
jo
sahf
adc
mov
inc
pusha
mov
stos
aad
sub
in
sub
mov
int
lods
addr16
int
lock
gs
sbb
adc
pop
stc
xchg
icebp
xor
mov
and
pushf
pop
add
test
push
sub
aas
imul
jne
cdq
shl
jl
cmp
mov
les
mov
mov
sub
call
pop
cmp
int
adc
jge
or
push
ret
adc
cdq
lea
mov
cwde
xchg
ror
clc
(bad)
xor
push
pop
lock
call
jl
jbe
push
test
shr
mov
nop
and
retf
xchg
enter
adc
add
loope
pop
sub
xchg
sti
es
clc
dec
inc
push
cmp
adc
or
add
test
rcr
lock
jge
lea
and
add
inc
ret
call
ret
je
sub
sbb
add
jne
or
icebp
xor
sbb
or
add
test
inc
mov
fild
push
stos
ret
xchg
ror
mov
and
leave
add
sub
dec
push
aad
xchg
aam
cmp
sub
call
or
mov
popa
add
push
inc
fcomp
dec
or
adc
pusha
retf
test
or
inc
add
jno
and
dec
int3
add
push
and
mov
out
add
pop
or
aad
cs
xor
mov
daa
inc
sub
add
or
inc
iret
dec
test
shr
add
cwde
and
nop
jmp
push
stos
or
sbb
call
xchg
and
popa
jl
cmps
or
pushf
sar
or
fdivr
dec
adc
jecxz
shl
cwde
out
cwde
mov
popa
(bad)
push
scas
pop
sbb
pusha
inc
fdivr
pop
shl
add
shr
(bad)
bound
adc
mov
pop
adc
add
adc
jle
ret
push
popa
xor
and
sub
push
out
cmp
mov
test
jnp
mov
dec
or
mov
jb
jl
xchg
and
mov
dec
jns
or
mov
lods
jecxz
pop
and
ja
or
pop
and
scas
pop
ror
add
cmp
and
add
xchg
xchg
adc
in
cmp
icebp
or
ja
jb
adc
and
pop
mov
lea
push
add
push
adc
test
push
or
xchg
adc
test
sbb
fwait
inc
mov
dec
or
sahf
or
push
dec
fistp
lock
add
adc
mov
(bad)
stc
add
mov
and
rcr
inc
call
out
mov
pop
and
call
jl
stos
add
push
or
in
mov
inc
stos
loop
or
loopne
sete
movs
ret
dec
in
(bad)
dec
mov
mov
mov
daa
sbb
jbe
nop
fld
sub
rol
adc
psubsb
mov
cmp
in
mov
inc
test
shr
ret
xchg
add
add
adc
aaa
test
pushf
push
test
cwde
add
test
push
nop
push
sbb
mov
(bad)
addr16
mov
loopne
cvtps2pi
add
fcom
add
sbb
shl
or
xor
inc
xchg
test
push
jae
dec
js
cmp
or
adc
nop
adc
inc
inc
fistp
or
push
rol
sbb
xor
jns
xor
cmp
mov
test
mov
movs
xrelease
inc
rol
sub
pop
sub
ror
add
stos
and
add
inc
ins
xor
xor
nop
popa
cmp
inc
cmps
sub
jmp
daa
test
dec
mov
push
cmp
or
lea
inc
sbb
inc
ins
xor
and
mov
ret
fwait
mov
clc
or
mov
sbb
push
hlt
jg
mov
add
test
jmp
aam
add
xlat
inc
or
rol
mov
and
mov
inc
push
mov
sub
xor
das
lock
xchg
mov
jl
cwde
add
and
xor
sbb
es
ds
sbb
and
adc
pop
shr
call
lahf
xchg
test
outs
cdq
clc
jmp
aas
icebp
add
xor
loop
shl
and
std
or
push
xor
add
lds
daa
out
fadd
pop
dec
jl
adc
xor
mov
fild
lea
mov
lahf
sub
mov
xchg
mov
adc
inc
mov
xlat
adc
pop
mov
jmp
and
dec
add
push
jecxz
loope
inc
fmul
rol
xchg
or
add
sub
pop
imul
in
xchg
mov
test
push
add
dec
repnz
or
test
std
sub
(bad)
jnp
pop
add
bnd
fmul
adc
add
add
(bad)
mov
dec
xor
aaa
or
stos
cmc
dec
push
sub
sub
push
das
test
sub
add
in
in
dec
push
lea
jo
xor
mov
test
in
and
cwde
cmp
cmc
fs
add
inc
test
fwait
push
xor
out
movs
cmp
pusha
jmp
and
and
or
jnp
push
push
pop
mov
data16
dec
test
icebp
loope
adc
call
mov
dec
loopne
retf
mov
in
mov
add
sbb
enter
clc
sbb
shr
lea
add
ret
js
add
pop
add
movs
push
or
inc
pop
(bad)
push
adc
inc
leave
add
fcmovnu
ins
xor
js
sti
or
sbb
aad
ret
fistp
add
je
sbb
mov
add
std
outs
jecxz
in
pop
or
popf
push
test
dec
sub
adc
push
pop
pusha
loopne
test
movzx
push
scas
push
xor
jl
dec
daa
pop
(bad)
xchg
push
cmp
mov
jnp
ins
add
lea
xor
push
test
rol
push
retf
leave
add
cmp
fsubr
add
sbb
sbb
xor
dec
fidiv
xchg
cwd
call
movs
adc
std
scas
or
ficomp
sub
les
fcmovbe
jne
adc
mov
fld
adc
add
mov
mov
add
adc
jmp
and
pusha
mov
dec
and
movs
adc
xor
lock
and
add
outs
adc
fldcw
hlt
adc
rol
inc
dec
add
and
xchg
loope
test
aas
mov
out
xor
pushf
sbb
push
test
test
shr
jmp
out
pop
sbb
js
mov
and
mov
and
push
sbb
push
mov
sbb
mov
jge
sub
dec
add
dec
mov
arpl
and
retf
clc
hlt
jno
or
scas
sub
push
add
mov
xor
aaa
cmp
sub
xchg
and
sub
pop
rol
clc
jo
test
or
pushf
inc
mov
lock
adc
adc
pop
pop
sub
das
pop
jle
and
std
addr16
pop
sub
xor
sbb
scas
jl
add
leave
mov
hlt
cdq
add
adc
mov
push
dec
mov
mov
(bad)
pop
loop
test
push
add
push
lock
cs
and
dec
leave
ss
push
cmp
lds
push
mov
pop
mov
jmp
ror
mov
xchg
or
inc
js
sbb
fisttp
dec
add
mov
sbb
xchg
cmp
gs
cmp
inc
jbe
inc
adc
clc
cmp
imul
mov
lods
jne
inc
jmp
mov
and
adc
sar
hlt
push
cmps
xchg
movzx
cwde
or
pusha
ja
push
stos
xchg
xchg
mov
xor
sub
push
pop
mov
sub
jo
shl
mov
adc
push
call
aas
and
pushf
inc
and
pop
iret
call
(bad)
fucomp
cmp
outs
test
in
add
je
cmp
mov
movs
inc
adc
imul
retf
sbb
pusha
pushf
push
mov
inc
mov
xchg
adc
and
sbb
daa
and
or
or
psubb
mov
inc
xor
inc
jecxz
adc
inc
loope
add
xchg
nop
xor
push
lock
sbb
xchg
rol
adc
test
(bad)
aam
test
stos
add
scas
or
pop
mov
pop
and
jns
push
xor
push
and
dec
loopne
or
and
push
mov
lds
cmps
stc
fadd
stc
pop
jb
add
mov
xchg
mov
add
test
adc
imul
retf
sbb
dec
pop
lods
mov
clc
and
mov
fisttp
in
pop
lods
call
test
pusha
dec
lods
push
test
push
fcomip
popa
shl
js
inc
ins
cmp
dec
cmc
sbb
mov
xor
in
xchg
push
push
lock
scas
xlat
push
lock
fidivr
cld
rcl
jle
jmp
loop
cmp
pop
ror
inc
or
xchg
adc
or
sub
sub
mov
mov
imul
(bad)
jg
jbe
loope
test
xor
test
int
pop
mov
add
(bad)
fild
adc
in
jne
or
or
adc
sub
jl
sbb
fnsave
test
jno
ja
push
mov
lds
xor
cmp
sub
pop
add
and
add
jo
loop
cli
inc
inc
cmp
mov
inc
sbb
or
movs
cmp
sub
lahf
mov
lahf
xor
or
or
in
in
push
mov
adc
push
or
icebp
adc
in
xchg
in
and
test
sbb
pusha
mov
call
or
mov
outs
(bad)
add
daa
mov
and
sub
sub
and
jg
add
pop
and
add
stos
push
in
les
aaa
aas
cs
stos
jge
sub
xor
push
mov
hlt
clc
fcmovb
mov
or
and
in
mov
mov
jl
cld
mov
sub
or
or
inc
or
jns
mov
add
pop
ret
add
add
call
scas
sbb
dec
mov
sbb
mov
or
add
and
inc
fwait
sbb
ja
or
hlt
fs
jbe
dec
push
adc
pop
push
or
test
xor
pop
adc
push
hlt
or
and
stc
(bad)
dec
fwait
push
addr16
cwde
xchg
push
mov
cmp
arpl
push
sbb
jae
or
push
push
ror
mov
inc
cmp
movs
push
cmovbe
cmp
ret
inc
sbb
leave
add
dec
sbb
mov
sbb
jle
xor
mov
ret
out
inc
add
or
adc
nop
mov
pop
retf
dec
push
lar
xlat
dec
outs
mov
rcl
xor
jns
mov
rcl
push
sbb
push
fwait
loopne
mov
jnp
and
push
cmp
jmp
sbb
push
inc
adc
loopne
inc
and
imul
test
inc
pop
rol
loope
sbb
jae
inc
js
dec
inc
shl
sbb
or
and
jp
nop
jne
xor
adc
push
or
or
out
sbb
adc
leave
rol
push
dec
add
aad
pop
adc
movs
add
adc
sub
mov
xchg
(bad)
or
xchg
adc
(bad)
mov
xchg
stos
jl
jo
mov
sbb
fidiv
or
or
pop
jl
dec
mov
push
inc
inc
jo
call
add
adc
movs
pusha
xor
cld
jnp
cmp
pusha
ins
nop
test
add
push
jg
mov
jns
push
pop
and
add
mov
pop
ins
xchg
or
xchg
and
movs
add
dec
shr
adc
es
cld
fistp
xchg
pop
ins
cld
std
inc
sub
sbb
dec
or
pop
dec
add
pop
sbb
mov
dec
cld
imul
adc
rol
dec
pop
repnz
adc
mov
arpl
adc
push
mov
sbb
nop
ja
fimul
mov
pop
loopne
shl
add
cld
add
loopne
addr16
jecxz
jbe
sbb
dec
loopne
fs
push
popf
mov
sbb
std
inc
pushf
sbb
push
cmp
jmp
dec
mov
dec
push
mov
inc
or
sbb
std
aam
push
rcl
and
mov
in
les
add
call
cmp
sbb
gs
pop
cmp
add
or
or
jg
ins
sbb
jmp
push
pop
xor
jo
push
push
adc
or
cmp
cmp
int
call
call
cmp
cdq
push
test
hlt
cdq
rol
ss
dec
push
sub
nop
dec
dec
pop
cmps
pusha
movs
imul
jmp
or
popa
xor
in
dec
push
out
lds
mov
dec
or
fisub
cwde
add
in
ja
gs
rcl
inc
or
add
add
shl
clc
or
sub
popf
xchg
adc
jg
xchg
pop
push
test
add
pop
sbb
pushf
pop
push
or
aas
pop
dec
add
fmul
(bad)
int3
add
pop
or
xchg
push
mul
jno
js
add
arpl
add
ins
add
or
fadd
int3
(bad)
mov
mov
aam
nop
pop
and
cli
fidiv
icebp
mov
sti
mov
sub
or
mov
(bad)
and
xchg
push
dec
add
add
cld
mov
mov
adc
(bad)
(bad)
shl
sar
push
enter
lock
push
ret
data16
push
sub
xchg
lock
add
lahf
pop
adc
push
dec
adc
fidivr
adc
dec
in
fimul
mov
dec
ret
fist
add
shl
push
movs
cmp
adc
movs
mov
or
ins
inc
cwde
dec
mov
ins
push
dec
push
sub
stos
add
jmp
push
imul
cmp
loopne
shr
hlt
jae
mov
xchg
push
mov
sub
adc
dec
xor
call
lahf
cmps
jecxz
dec
pop
mov
test
mov
mov
sub
dec
outs
dec
xor
je
jle
jne
jmp
pop
xor
and
or
mov
lock
ret
inc
push
cmp
mov
and
jb
jmp
clc
movs
xchg
sbb
sbb
rol
fcomip
adc
daa
push
dec
inc
dec
ror
repz
xchg
add
daa
xchg
es
pop
hlt
push
enter
inc
adc
div
or
inc
dec
pop
push
push
(bad)
in
fcomp
loopne
scas
push
in
inc
in
test
movs
dec
pop
pop
out
sbb
pop
dec
adc
sbb
jl
xor
adc
pop
inc
imul
add
or
nop
push
mov
div
push
pop
add
add
ret
and
add
sbb
ret
cmp
add
push
test
sar
sbb
push
add
lock
fiadd
sbb
cld
inc
push
cmp
xor
in
pop
push
repnz
jmp
cmps
jg
push
adc
ins
push
inc
daa
test
inc
push
sti
add
int
dec
adc
cmps
add
out
or
or
mov
ins
jno
mov
fs
pop
push
and
xchg
adc
in
push
(bad)
dec
push
nop
mov
adc
inc
push
mov
mov
xchg
mov
loopne
xor
cmps
mov
push
mov
and
jno
lahf
pop
and
loopne
mov
les
ret
jne
movs
test
int3
mov
pop
xor
hlt
pop
and
mov
mov
adc
xor
loopne
cmp
sub
xchg
in
push
mov
fadd
nop
xor
jae
sbb
push
xchg
inc
push
cmp
enter
cmp
xchg
fist
(bad)
in
in
dec
inc
dec
mov
mov
retf
(bad)
and
clc
jg
or
push
or
dec
add
ret
adc
jne
xchg
call
iret
loope
jbe
push
push
xchg
inc
ss
jl
js
sub
dec
and
or
(bad)
bound
xchg
fcomp
das
mov
xchg
adc
les
mov
loopne
bound
les
or
or
div
add
pop
pop
xchg
adc
or
push
enter
leave
xchg
sbb
das
pop
lods
pop
add
xor
inc
adc
cmps
cmp
ret
retf
fsubr
sbb
movs
or
popa
mov
mov
adc
aas
and
mov
ins
hlt
adc
popa
popa
inc
add
sub
lods
ds
lock
pop
test
inc
add
push
and
call
or
popa
gs
dec
cdq
mov
inc
pusha
jecxz
or
ins
jmp
sbb
call
xor
sbb
add
mov
ret
push
or
sub
aas
sar
rcl
lahf
ins
inc
sub
inc
jg
arpl
test
sbb
inc
add
xchg
inc
pop
sub
or
sub
call
icebp
adc
sbb
cmp
add
xor
loope
rcl
ss
mov
or
adc
sbb
sub
aam
mov
call
sbb
fisub
push
in
pop
cmp
mov
push
loopne
or
ss
jns
(bad)
push
inc
add
sbb
add
and
add
pop
pop
or
add
push
sub
adc
xchg
add
jne
fmul
adc
movlps
rcr
aam
aam
dec
sbb
aam
in
cmps
dec
jl
push
or
add
cmp
hlt
jnp
push
pop
dec
ins
cmps
push
daa
nop
outs
shr
pusha
and
xor
inc
dec
or
in
daa
hlt
and
hlt
sub
jl
add
add
sub
xchg
loope
aas
fcomp
cmp
aad
popa
popf
and
pop
push
or
inc
and
sub
jecxz
mov
loope
add
shr
push
adc
ret
xor
xchg
push
or
movs
dec
inc
or
pop
mov
jg
(bad)
pop
dec
movs
icebp
add
aas
lea
add
add
or
sub
xchg
xor
cmps
xor
pop
inc
popa
mov
inc
mov
pusha
movs
push
and
ins
and
mov
xor
mov
jge
mov
xor
jge
xor
pop
enter
int3
(bad)
push
xchg
xchg
dec
test
jp
or
int3
mov
loope
int3
and
scas
lock
test
test
lock
ret
adc
lds
jo
pop
dec
or
test
jno
xchg
dec
lods
push
lods
push
call
mov
aaa
mov
pop
mov
xchg
sbb
mov
push
xchg
mov
jne
ficom
pop
(bad)
sbb
int
xor
clc
xchg
push
hlt
mov
js
adc
cs
cmp
adc
xchg
iret
mov
jmp
xchg
cmp
js
in
adc
mov
jmp
add
jb
or
les
add
sbb
dec
or
ja
pop
(bad)
push
cmp
fcom
mov
add
popf
add
rol
push
inc
push
sub
aas
add
dec
push
or
xchg
xchg
fild
and
pop
sahf
dec
jne
inc
cli
ret
cmp
add
cwde
in
out
rcl
mul
mov
sub
and
xor
mov
dec
jne
mov
and
jo
add
mov
or
or
inc
or
adc
dec
add
sub
std
or
inc
sub
cmp
xchg
inc
inc
dec
inc
or
dec
addr16
jnp
popa
lds
int
jmp
xchg
mov
into
mov
mov
and
add
cmp
xchg
gs
std
jne
jae
cmp
fs
les
push
pop
fcomp
mov
sub
sub
lock
sbb
shr
lahf
and
sub
out
pop
leave
push
inc
std
adc
dec
sbb
rcr
jp
push
or
shr
outs
imul
sar
mov
jge
adc
movs
test
mov
jge
test
or
or
or
mov
jmp
fwait
or
pop
(bad)
gs
jl
add
loopne
adc
es
add
push
sub
xlat
jne
sub
xchg
cmp
stos
and
or
sbb
sub
fild
inc
or
mov
ror
aam
bound
cmc
add
add
adc
aaa
pop
stos
pop
mov
adc
lea
adc
jnp
mov
and
add
arpl
imul
imul
sub
inc
adc
js
test
mov
sub
mov
mov
jno
cmp
mov
lods
jmp
shl
gs
dec
pushf
lods
out
mov
sbb
xor
xchg
xchg
ror
sub
sub
dec
push
data16
out
loopne
cmp
adc
bound
push
push
dec
mov
mov
test
test
imul
cvtps2pd
sbb
jo
mov
inc
jno
pop
movs
push
movs
inc
dec
push
dec
or
dec
push
dec
dec
mov
inc
js
cmp
leave
mov
add
mov
test
sbb
fsubr
retf
inc
inc
ins
lahf
fsub
or
adc
pop
stos
xor
adc
pop
fisttp
cmp
fs
mov
aas
or
dec
loope
adc
ins
(bad)
test
or
jo
mov
cmps
mov
add
loopne
inc
sbb
lods
jb
out
inc
neg
xchg
call
lods
add
in
adc
sub
mov
outs
add
sub
add
add
clc
mov
inc
add
add
in
call
arpl
sub
loopne
sti
popf
test
cmp
adc
popf
cmp
push
cmp
add
popa
loope
sub
hlt
pop
sub
mov
xor
xchg
hlt
xchg
hlt
loope
dec
push
jns
gs
sub
ror
ds
sbb
push
adc
into
or
in
and
xchg
(bad)
jne
pop
push
and
cwde
inc
mov
add
movs
mov
mov
add
cmp
or
xor
rol
les
arpl
mov
fs
imul
mov
sub
cmp
pop
inc
push
jo
xor
into
sbb
pop
or
add
cmp
jne
test
(bad)
mov
aaa
mov
mul
mov
xchg
cld
push
cmp
loopne
js
add
addr16
and
adc
or
pop
add
popf
inc
sti
xor
in
push
add
pop
add
adc
jns
lock
push
in
inc
adc
cmp
sub
pop
jno
push
ret
mov
xor
jae
lock
sti
cmp
pop
mov
lock
and
aas
add
pop
cmp
sub
test
sub
push
mov
sahf
ss
mov
jmp
je
hlt
out
xchg
das
inc
js
test
adc
add
sar
cmps
sbb
mov
ds
loop
ja
jno
sbb
mov
stos
push
push
or
push
fstp
push
and
popa
inc
addr16
sub
add
int3
mov
adc
lods
xchg
sub
(bad)
sti
xlat
add
into
jbe
nop
popa
test
call
pop
imul
or
adc
jo
loop
out
loopne
mov
fist
aaa
push
sub
repz
mov
dec
add
add
add
jecxz
cmps
mov
inc
inc
sub
add
or
dec
add
ror
or
pop
mov
inc
add
stos
mov
retf
ror
in
or
add
push
or
fs
(bad)
and
retf
rol
adc
or
fwait
loope
pop
scas
je
add
fcom
loop
sbb
fmul
and
or
mov
lods
pushf
pop
sbb
add
push
mov
mov
jecxz
push
fisub
pop
add
sbb
adc
adc
xor
pop
mov
jle
push
enter
xor
repnz
push
adc
and
sar
out
and
pop
cdq
adc
int
add
js
loopne
add
cmp
inc
xchg
push
retf
or
or
stos
inc
push
loope
inc
rcl
mov
shr
xor
add
mov
and
ja
imul
bound
rcr
in
ret
add
adc
push
jmp
adc
sar
xor
add
aaa
icebp
sub
cmp
push
test
in
loopne
loop
push
les
or
imul
and
les
aaa
call
les
into
add
mov
imul
rol
pop
or
mov
or
mov
sbb
and
call
movs
sbb
sti
push
xchg
add
dec
and
cld
add
mov
dec
shr
xor
loopne
ror
xor
mov
nop
jo
xlat
inc
push
adc
aas
and
lea
or
push
xchg
std
nop
mov
or
aas
enter
rcr
add
add
or
add
(bad)
push
mov
push
xor
pop
call
sub
scas
aaa
movs
and
jge
mov
xchg
pop
inc
test
cmps
(bad)
mov
push
bound
push
or
popa
dec
pop
dec
clc
loopne
inc
mov
cmp
das
sbb
mov
xor
inc
sub
dec
cmps
pop
lods
movs
cmps
xchg
or
and
leave
adc
push
std
pop
mov
dec
mov
lods
and
test
pop
fcom
jp
or
jno
sub
fsub
push
xor
dec
repz
lea
mov
cmp
iret
fs
or
lods
fistp
mov
pusha
mov
jns
push
cmp
outs
inc
mov
rdtsc
xor
adc
dec
test
pushf
sbb
adc
and
mov
imul
adc
and
mov
popf
pop
jne
dec
or
sub
iret
mov
fst
out
popa
cdq
mov
mov
rcr
push
mov
add
das
dec
fsub
in
js
pusha
add
sti
ja
fisubr
add
ins
inc
rol
iret
jne
leave
les
add
push
mov
push
test
aaa
test
pop
jb
mov
ins
test
sub
mov
xchg
mov
into
int3
aad
sub
mov
div
jae
or
xchg
adc
jne
sub
add
inc
dec
enter
xor
cmp
or
or
xchg
or
inc
nop
xchg
push
icebp
test
mov
aad
add
push
div
sbb
rol
sti
cs
movs
movs
movs
(bad)
rcl
or
shl
mov
and
aas
pop
sub
sub
test
mov
jmp
xchg
cmp
adc
xchg
push
fwait
mov
lods
cld
fs
retf
loope
mov
add
sbb
sub
dec
inc
add
xor
ror
jb
int3
push
xlat
sbb
mov
outs
inc
adc
adc
push
sahf
add
jmp
or
push
xor
call
gs
adc
lds
aas
inc
inc
inc
adc
daa
pop
shr
jp
mov
ret
and
adc
and
rcl
or
fidiv
push
mov
retf
sbb
sti
(bad)
aas
mov
pop
mov
adc
mov
cdq
inc
mov
or
and
inc
sub
nop
cmp
mov
cmp
lea
sbb
xlat
lock
test
shl
cwde
cmp
push
pop
xor
adc
xchg
in
jns
adc
arpl
lods
fsubr
scas
cmc
xor
inc
bound
imul
pushf
fcom
inc
xchg
push
add
test
(bad)
imul
lods
sbb
or
add
(bad)
jp
hlt
push
je
pop
push
or
cwde
lods
call
or
mov
xchg
jge
sbb
mov
hlt
xchg
dec
xor
dec
and
aas
add
rol
dec
adc
adc
inc
mov
test
or
xchg
xor
lods
jle
jo
add
mov
test
jg
xchg
call
enter
fld
jl
push
aam
adc
popa
jecxz
or
add
call
(bad)
push
das
movs
or
dec
int
jbe
in
or
or
pop
inc
pop
or
jl
cmp
mov
stc
sub
add
and
push
push
mov
test
shl
sar
shl
inc
enter
in
fldcw
ror
inc
dec
mov
mov
sub
mov
adc
mov
mov
push
adc
inc
leave
pop
out
dec
lea
in
mov
stos
mov
pop
jmp
ror
loop
add
inc
sbb
jmp
loop
xor
or
ret
dec
or
rcl
iret
or
cdq
enter
adc
or
mov
and
inc
sbb
mov
mul
ins
jmp
push
scas
mov
sbb
aas
adc
es
(bad)
or
add
mov
cmps
loopne
adc
js
inc
push
outs
mov
or
loopne
adc
sub
add
adc
add
inc
shl
sbb
enter
jb
iret
outs
in
mov
aam
add
rol
mov
and
mov
inc
push
xchg
into
xor
jl
sar
jno
inc
dec
cmp
rcl
xchg
(bad)
xchg
mov
push
adc
xor
imul
inc
inc
sbb
outs
push
xor
xor
ins
loop
and
sub
push
test
dec
and
jnp
sub
jne
push
mov
push
in
adc
sub
jno
sub
fnstenv
adc
push
add
bound
push
push
mov
inc
mov
retf
fadd
add
jl
adc
pop
cmc
add
add
sbb
inc
stc
lods
and
xchg
adc
mov
adc
rcl
pop
sub
mov
rcl
cmc
add
adc
sbb
push
mov
push
ja
sbb
add
or
sub
and
and
xor
push
inc
xor
xor
leave
lock
inc
inc
mov
fcmovb
sbb
mov
inc
add
cmp
mov
xchg
push
adc
ret
clc
mov
inc
add
out
adc
lock
add
lahf
jo
add
mov
sbb
push
or
push
test
arpl
call
inc
pop
add
sub
in
push
or
pop
push
jae
call
push
mov
rcl
movzx
pop
push
pop
or
adc
inc
ror
adc
mov
adc
mov
or
add
mov
xor
add
xchg
aad
dec
xchg
add
cmp
mov
jne
mov
adc
pop
loope
add
mov
and
ror
out
add
mov
adc
dec
push
int3
mov
data16
inc
sbb
shl
outs
adc
js
and
inc
dec
mov
in
clc
je
mov
mov
cwde
mov
lahf
sub
and
add
sub
pop
rcr
leave
in
push
hlt
cmp
retf
xor
dec
dec
retf
aad
add
ret
sub
movs
pop
or
loope
rcl
fbstp
(bad)
aam
xor
xchg
(bad)
push
cs
sbb
loop
inc
retf
clc
and
and
in
mov
imul
enter
add
or
ret
popa
jmp
mov
aas
loopne
xchg
adc
adc
sub
mov
mov
lods
mov
jge
dec
shr
and
sub
jae
mov
cmp
mov
adc
adc
shl
dec
test
push
pusha
mov
popa
ret
call
and
call
and
jl
call
or
and
adc
in
jns
xchg
add
int3
jge
push
xlat
sbb
mov
pop
dec
cmp
xchg
test
popa
rcl
sub
jmp
push
ins
and
mov
or
inc
repnz
imul
jl
mov
add
jae
dec
mov
and
dec
adc
sub
dec
repz
sub
sub
add
mov
add
jp
bnd
xchg
shl
cmovp
test
pop
adc
push
bound
mov
mov
dec
mov
mov
sub
push
push
mov
mov
bound
pop
sbb
sub
stc
xor
les
push
jne
dec
add
lock
inc
adc
adc
sub
test
inc
add
inc
cmp
lods
shl
arpl
mov
jp
repz
les
sbb
sbb
lea
mov
daa
xor
dec
adc
aas
xor
add
test
movs
aas
movs
test
add
sbb
gs
(bad)
mov
push
adc
inc
add
and
sub
mov
mov
jmp
xchg
mov
jne
rcl
or
test
jbe
dec
xchg
and
jne
loopne
mov
add
jmp
aad
xor
in
jo
jo
lds
retf
dec
sub
xchg
sbb
add
cwde
add
sub
push
jg
xchg
pop
movs
aaa
bound
cmps
cmp
test
hlt
arpl
rcl
or
mov
es
sbb
inc
cmp
dec
cmps
and
jo
pop
arpl
sub
lahf
mov
push
stc
fadd
dec
cwde
push
movs
dec
cmp
fcom
pop
lods
and
add
mov
cwde
xlat
dec
adc
ror
and
cs
inc
enter
jne
and
adc
imul
test
stos
cmp
pop
push
lods
and
pop
in
out
mov
and
sub
iret
lea
nop
sub
pusha
call
push
fisttp
inc
in
mov
inc
imul
add
jg
scas
and
inc
clc
push
cdq
xchg
mov
adc
inc
lock
sbb
push
cmp
repz
gs
jns
lods
stos
add
test
and
dec
bound
adc
adc
je
mov
mov
push
pop
add
fadd
jmp
sub
cmp
in
or
or
call
rol
aam
mov
cs
in
and
jmp
inc
mov
xchg
or
add
sbb
dec
sbb
dec
jecxz
and
stos
sbb
pop
scas
and
and
mov
xchg
inc
sbb
sbb
jecxz
xor
adc
mov
mov
cmp
adc
sub
xor
inc
pop
pop
and
or
add
xor
mov
or
or
and
jl
ret
sub
ror
mov
sub
sbb
sub
xchg
add
dec
sbb
sbb
sub
dec
or
dec
mov
jl
nop
push
dec
or
lock
cmp
dec
inc
test
data16
popa
ret
call
dec
inc
xor
inc
repz
ret
and
ss
dec
xor
sub
cmp
or
adc
mov
ret
push
in
lods
sub
xchg
retf
popa
cmp
sbb
mov
adc
hlt
add
call
xchg
inc
dec
inc
sub
mov
dec
outs
int
sub
push
or
sub
sti
es
loopne
push
popf
stos
adc
or
cmp
std
sbb
ja
lea
gs
or
jnp
js
adc
ja
aam
push
test
mov
sub
test
ret
in
adc
bound
adc
pop
inc
add
sbb
nop
aas
test
add
loopne
sub
movs
push
and
loope
in
or
bound
mov
cmp
and
and
adc
loopne
mov
rcl
or
enter
int3
xor
mov
mov
adc
leave
popa
dec
rcl
cmp
adc
jl
xchg
xor
stc
dec
add
adc
and
push
mov
and
and
xchg
mov
adc
xchg
ret
adc
push
push
adc
rol
or
dec
xchg
push
add
inc
mov
fstp
jo
inc
pusha
fistp
sbb
nop
pop
pop
xchg
or
add
xchg
xlat
sbb
add
mov
sub
xchg
in
mov
jmp
add
and
push
mov
jb
jle
outs
or
adc
adc
xchg
adc
jg
ds
jp
jae
jno
jmp
jmp
mov
inc
xor
dec
jnp
in
fldpi
dec
xor
cmp
jmp
jge
inc
sahf
cmp
and
and
xchg
sub
add
push
mov
cmp
imul
mov
ret
ds
repz
dec
sahf
out
cmp
pop
sahf
out
sahf
push
jl
mov
mov
(bad)
call
add
add
or
or
or
in
in
adc
sbb
adc
mov
adc
sbb
lahf
dec
push
je
xchg
or
retf
push
es
cld
mov
or
int3
call
inc
daa
icebp
xchg
pop
aas
sbb
ret
pop
pop
pop
inc
or
adc
movs
pop
adc
push
cmp
sar
or
adc
jg
xchg
pop
mov
xchg
popa
pop
mov
mov
push
or
xor
add
out
fiadd
mov
inc
or
xor
adc
fisttp
sub
dec
mov
push
mov
jecxz
or
pop
mov
push
lods
mov
pop
and
adc
pop
pop
push
fmul
inc
shl
adc
retf
cmp
or
mov
dec
outs
push
call
adc
imul
ror
adc
test
push
adc
jge
daa
cmc
cmp
sub
xor
xor
xor
retf
cli
add
fild
mov
mov
add
fwait
lea
sbb
clc
xor
jg
push
call
or
pushf
pop
xchg
test
test
adc
es
cmps
add
push
xlat
sub
add
gs
getsec
push
push
dec
(bad)
and
lods
sbb
aam
mov
test
sbb
aaa
or
imul
sub
sahf
adc
ror
push
out
pop
sub
hlt
cwde
imul
xor
push
or
pop
sub
dec
sbb
add
mov
test
add
mov
or
or
mov
add
jmp
pop
lea
(bad)
xchg
cld
scas
mov
jo
cld
xchg
inc
sbb
lock
jmp
pop
sub
or
fbld
inc
in
iret
sbb
ror
or
mov
inc
adc
(bad)
dec
sti
fs
imul
add
fs
push
add
xor
test
jmp
xor
add
mov
and
retf
idiv
adc
or
adc
mov
mov
mov
push
lahf
push
and
std
cmp
push
jmp
(bad)
aam
adc
rol
xchg
aas
mov
ret
sti
sysexit
das
dec
movs
inc
imul
pop
mov
call
jl
call
fwait
pushf
jno
jmp
ins
or
xchg
sbb
add
push
fdiv
xchg
jne
adc
les
sbb
(bad)
rol
inc
out
jp
dec
mov
sbb
clc
xchg
inc
push
cs
mov
mov
inc
cmp
cmp
leave
ja
ds
or
push
arpl
mov
add
dec
cmp
add
adc
jge
jp
dec
push
push
mov
sub
xor
dec
pop
lock
test
and
packuswb
aaa
xchg
mov
or
outs
xor
mov
xor
pop
out
push
inc
jmp
sbb
and
mul
and
sub
add
add
das
add
jo
and
call
rol
push
cmps
cmp
cmp
(bad)
sar
das
or
adc
adc
push
jp
push
ins
int3
push
jno
adc
mov
lds
inc
aam
ss
cld
sub
jecxz
push
inc
xor
loope
sub
aad
icebp
ret
and
scas
mov
xchg
pop
lock
push
lahf
ds
icebp
mov
or
inc
cwde
sti
cmc
or
jo
push
iret
lods
jmp
(bad)
inc
or
mov
xchg
adc
fst
pop
in
inc
xchg
int3
pop
loopne
jae
mov
das
adc
xor
and
loope
mov
cli
(bad)
or
mov
lods
xchg
add
lods
add
pop
sbb
xchg
pop
add
pop
add
lea
xchg
or
lods
addr16
pop
jne
and
or
clc
cwde
mov
je
fs
fs
add
push
mov
aas
jge
and
das
(bad)
ret
ss
or
or
jnp
jmp
push
inc
mov
sub
mov
lea
mov
pop
xor
fmul
fmul
push
adc
push
xor
pop
gs
mov
or
mov
pop
fucomip
dec
sub
mov
rcr
xchg
adc
or
pusha
mov
add
push
sub
push
popf
mov
mov
dec
adc
test
lea
inc
js
xor
push
cmp
inc
or
cmp
adc
sub
test
cmp
push
or
or
and
add
sub
cmps
add
mov
add
xor
xchg
sub
xchg
sub
xor
loope
pusha
sub
pop
sbb
adc
add
adc
sub
cmp
sub
push
sub
test
or
dec
enter
sbb
sbb
inc
xor
loopne
lahf
or
sbb
sbb
mov
mov
addr16
xchg
push
ret
add
cmps
cld
(bad)
mov
adc
adc
(bad)
or
or
rcl
mov
push
fld
push
or
sub
pop
iret
dec
mov
ins
or
dec
retf
push
add
sub
imul
fcom
mov
loope
cld
std
in
push
and
std
loope
mov
push
loope
inc
xchg
or
cmp
pop
gs
hlt
std
jae
mov
adc
shr
jge
mov
xchg
pusha
dec
jecxz
out
add
lahf
pop
xor
and
sbb
mov
sti
inc
js
call
mov
push
test
in
push
mov
bound
jg
mov
jl
ins
cmps
fstp
mov
sti
mov
movs
sub
mov
jp
cld
or
pushf
fdiv
rol
inc
add
dec
cmps
ret
pop
pushf
sub
loopne
and
push
dec
repnz
pushf
loopne
loopne
or
test
pushf
pusha
mov
xchg
fnstcw
sub
movs
pop
out
push
cwde
xor
xchg
push
movsx
lods
dec
lds
scas
mov
and
repz
fld
aam
mov
mov
xlat
nop
inc
call
or
sub
dec
or
nop
out
sub
push
xor
aaa
xchg
das
and
shl
int3
sbb
inc
xchg
js
das
jl
mov
dec
aas
adc
bound
js
adc
and
or
mov
add
sub
push
cs
inc
cwde
loopne
daa
pusha
(bad)
jg
jb
adc
aas
enter
ins
loopne
in
xchg
les
adc
sub
ins
clc
cmp
test
das
dec
imul
or
or
cs
sbb
pop
sbb
mov
sub
cdq
mov
ds
push
cmc
push
mov
shl
rep
scas
or
mov
adc
dec
repz
xchg
mov
adc
or
adc
or
adc
add
and
pop
or
in
dec
or
inc
clc
push
pop
inc
dec
pop
xlat
mov
jb
add
dec
or
and
cmps
jo
mov
data16
leave
dec
mov
xchg
push
les
pop
adc
cmp
loopne
sbb
add
mov
hlt
jmp
and
inc
in
dec
retf
hlt
or
adc
xor
mov
lahf
inc
sub
mov
inc
inc
add
repz
popf
test
sub
jp
in
retf
sub
mov
fld
mov
inc
aaa
dec
cmp
mov
aad
sbb
ret
xchg
bound
test
jl
sti
inc
gs
ror
cmp
dec
or
dec
les
xor
(bad)
sti
sbb
push
iret
mov
jl
xor
mov
ret
or
es
fs
mov
inc
dec
int3
mov
adc
add
xchg
and
pop
push
fwait
jmp
mov
int3
jmp
jmp
outs
mov
cwde
push
call
push
push
sub
push
and
or
adc
sub
or
sub
jge
pushf
imul
movs
movs
and
xor
test
retf
mov
xor
mov
inc
clc
ficomp
mov
mov
sub
scas
gs
inc
jge
xor
add
inc
pushf
dec
or
pop
mov
mov
jne
inc
or
je
imul
xor
fcomp
jne
xor
loope
sar
loopne
movs
ret
dec
pop
or
push
call
shr
iret
add
add
or
test
jmp
jno
or
daa
sar
sub
pusha
jb
ins
or
mov
shl
and
push
inc
in
inc
adc
push
mov
clc
nop
pop
das
mov
lods
inc
js
xor
aad
fbstp
(bad)
movs
lock
cdq
pop
jo
mov
fsubr
xor
dec
pop
mov
add
adc
loopne
das
stos
dec
inc
push
bound
loop
loopne
push
push
or
mov
xchg
push
sbb
dec
adc
jbe
push
mov
sub
add
aam
push
mov
or
add
adc
add
sbb
mov
mov
fsubr
(bad)
dec
xor
push
shl
pushf
adc
popa
inc
test
mov
nop
xor
ror
nop
and
adc
cld
push
scas
mov
fdiv
mov
mov
mov
rol
nop
lea
fldenv
jbe
push
test
cmp
cmc
push
mov
or
or
inc
nop
aaa
sti
add
or
test
sbb
sbb
test
mov
or
mov
mov
ret
xchg
xor
leave
mov
int
pushf
sub
popa
push
dec
xchg
xchg
adc
or
adc
mov
xor
xchg
or
adc
dec
shl
mov
and
mov
jle
push
add
adc
lea
mov
dec
inc
aam
xor
xor
mov
in
sub
lea
rol
and
pusha
(bad)
jo
jno
das
popa
jns
mov
jmp
push
fistp
sbb
not
cdq
pop
or
imul
movs
add
sbb
mov
or
lahf
pop
or
or
pusha
xchg
mov
mov
ror
add
add
jle
(bad)
or
mov
gs
or
int3
and
mov
mov
or
leave
cmps
or
gs
add
mov
inc
inc
sub
mov
or
ret
mov
loop
or
js
adc
ins
adc
add
fmul
outs
cmp
scas
jns
jp
or
call
inc
das
xor
lea
dec
adc
add
cmps
mov
and
movzx
inc
or
pop
fdivr
push
inc
dec
clc
(bad)
dec
xchg
jmp
or
pusha
push
imul
xchg
jmp
jae
xchg
jo
cmp
fimul
imul
sbb
mov
fwait
(bad)
mov
cmp
add
lods
fcom
(bad)
cmp
loopne
and
sti
fwait
xor
movs
mov
add
test
and
mov
lea
xor
sbb
xlat
fadd
mov
mov
mov
or
bound
jno
xchg
(bad)
jbe
test
in
cmp
xor
sub
mov
add
int3
lea
cdq
and
arpl
mov
inc
adc
adc
dec
dec
mov
mov
sbb
sub
test
pop
dec
cmp
test
or
push
add
dec
xchg
or
mov
xchg
sbb
or
adc
popa
jnp
fimul
and
mov
cmp
sbb
repz
stos
mov
add
push
add
imul
mov
pop
lahf
mov
rcr
pop
add
ret
sub
push
stos
rol
pop
add
sysret
mov
add
push
fiadd
mov
test
sub
cmp
add
inc
ins
push
loop
and
xor
fwait
icebp
lods
rol
imul
or
ret
adc
fs
push
sub
or
inc
mov
sbb
dec
jo
repz
sbb
movs
mov
mov
inc
push
inc
loop
dec
sub
es
and
or
enter
xor
xchg
cwde
and
shl
adc
jnp
loopne
xchg
retf
cmp
xor
ficomp
adc
fs
push
xchg
cmp
xor
push
jns
retf
and
and
aad
push
retf
jp
sbb
or
lds
push
jae
sub
lea
mov
mov
in
hlt
add
push
inc
jo
or
sbb
add
pop
ret
adc
push
mov
adc
dec
or
hlt
cmp
test
ins
pcmpeqd
or
sub
bound
xchg
jp
add
dec
dec
in
das
xchg
mul
adc
sbb
push
jp
add
pop
in
jmp
lahf
dec
(bad)
sbb
cli
sub
hlt
or
cld
push
push
sbb
sub
xchg
push
inc
imul
push
popa
add
or
jg
or
adc
sub
sbb
fist
sub
sbb
rcl
adc
or
mov
xor
fist
mov
fcmovnb
fiadd
inc
or
add
loopne
push
push
dec
loope
cmp
test
lods
in
xor
sbb
inc
sahf
test
mov
lahf
in
and
inc
in
mov
add
mov
mov
pop
cmp
mov
mov
push
ins
gs
xor
popa
aaa
hlt
shl
ret
sub
add
add
dec
cmp
add
lahf
inc
jle
xor
arpl
adc
sub
sub
mov
mov
lock
adc
test
test
shr
call
fild
clc
adc
inc
add
mov
adc
adc
in
jo
mov
nop
or
shl
sar
imul
ja
xor
xor
dec
add
cmp
or
lahf
loope
imul
cmps
(bad)
xchg
fsub
and
mov
push
sbb
fcomip
jg
cmp
push
add
sub
in
or
xchg
cmps
pop
fwait
push
je
or
mov
ret
push
add
pop
popa
xor
cmp
inc
dec
mov
sub
es
add
adc
adc
add
(bad)
ins
fsubr
pop
push
lds
dec
ins
and
stc
hlt
jmp
mov
aam
mov
test
jmp
sbb
(bad)
cmp
sbb
rcr
sbb
add
add
sub
add
test
cs
lock
adc
rcr
cwde
sub
adc
jg
xchg
sub
pop
lds
sbb
jmp
pop
add
adc
pop
jo
sbb
movs
lock
sub
jmp
sub
test
jp
and
inc
sbb
sub
jg
add
inc
push
nop
rcr
and
inc
push
pop
push
adc
cmps
test
lds
pop
popa
nop
aam
inc
mov
js
pop
push
mov
imul
mov
aaa
xor
xchg
jmp
adc
stc
call
dec
inc
push
adc
add
test
leave
push
lds
pop
in
mov
jae
add
or
dec
loopne
inc
dec
pop
shl
cmp
in
mov
test
mov
jecxz
sbb
and
and
push
dec
lahf
and
or
cmp
fnstenv
cmps
cmp
inc
push
pop
sbb
clc
jae
popf
xchg
pop
imul
adc
adc
jge
leave
sub
hlt
mov
lods
aad
dec
or
lods
mov
xor
pop
dec
jecxz
sbb
adc
or
jmp
adc
dec
or
rcr
adc
imul
cmps
daa
push
mov
pushf
cmps
in
push
add
adc
lock
dec
out
and
sub
or
mov
mov
jns
inc
cmp
and
xor
dec
out
sahf
inc
push
sub
pop
nop
mov
pop
pop
and
push
pop
pop
dec
mov
add
(bad)
lahf
sub
adc
nop
sbb
aas
ret
cmp
pusha
inc
pop
lods
xchg
test
rcl
icebp
inc
mov
cdq
test
adc
and
xchg
jno
fs
adc
adc
mov
inc
jge
(bad)
cmps
popa
or
xor
ins
aas
mov
les
jmp
jno
(bad)
push
lds
inc
je
mov
fstp
jae
test
hlt
js
xor
push
(bad)
ds
jge
dec
les
mov
dec
cld
or
and
push
mov
lock
and
popf
and
je
sar
push
out
push
xchg
or
(bad)
stos
add
stc
jl
pop
lods
lods
je
and
mov
cmps
inc
je
pop
test
xor
ja
jle
add
(bad)
inc
dec
ficomp
push
push
sub
repz
adc
pop
lea
das
cmps
pop
mov
sub
repz
ins
fidiv
add
packssdw
mov
and
fsubr
or
push
jne
and
ficom
cmp
dec
xor
icebp
xor
lahf
dec
in
sbb
pop
push
loopne
cmp
push
or
(bad)
call
push
cmp
inc
inc
cld
xchg
in
aad
mov
aam
cmps
loopne
sbb
popa
and
lds
retf
push
(bad)
out
(bad)
push
fucom
out
and
loopne
sahf
addr16
push
xor
inc
xor
add
dec
sbb
jo
dec
aas
adc
and
add
sbb
ja
xor
jnp
or
dec
retf
inc
shl
rol
nop
ud2
(bad)
inc
lock
nop
nop
push
lods
in
shrd
enter
pop
add
lock
aad
inc
jne
fs
mov
inc
adc
and
push
hlt
adc
xor
sbb
sub
mov
adc
sub
push
sbb
adc
add
icebp
inc
lock
or
xor
mov
js
and
dec
adc
fisttp
shr
add
push
mov
pop
ror
adc
mov
mov
les
rol
push
adc
or
sub
push
and
mov
push
lahf
lea
adc
call
add
mov
adc
or
inc
cwde
dec
mov
aas
ficomp
xchg
test
aas
iret
sbb
jecxz
or
pop
add
xor
and
int
jg
lods
mov
add
pop
jne
xor
mov
or
icebp
mov
sar
shl
xor
sbb
adc
sbb
nop
(bad)
add
cmp
hlt
push
add
loop
inc
lods
loope
ds
mov
xchg
lods
sahf
push
add
or
fidiv
push
lahf
or
adc
cmps
pop
aas
popa
and
dec
das
bound
inc
or
push
pop
cmp
or
or
pop
sti
into
sub
adc
rcl
call
jg
shl
popa
rcr
call
lock
lock
push
mov
scas
or
sub
ss
dec
cld
jae
mov
bound
pop
push
sbb
pusha
pop
mov
add
aam
sub
push
add
lods
add
imul
add
add
bound
xor
add
adc
mov
jno
mov
and
add
fild
test
pusha
or
aad
sbb
pop
jb
xchg
aad
rcl
and
shr
adc
(bad)
cmp
and
push
xchg
xor
lods
mov
iret
push
push
add
dec
cld
jne
adc
add
loope
rol
mov
mov
mov
dec
in
setnp
sub
adc
dec
(bad)
scas
aas
mov
cmp
loopne
inc
movs
and
inc
jg
dec
lods
test
jns
popa
or
fistp
mov
or
movs
test
jmp
adc
mov
or
pop
xor
cld
jne
inc
xchg
ret
push
scas
hlt
push
or
(bad)
retf
push
adc
ins
jmp
push
sbb
arpl
pop
ret
or
pop
pop
and
cld
adc
inc
inc
mov
xchg
and
lds
mov
cld
(bad)
adc
outs
aaa
aam
push
and
inc
add
clc
sub
adc
rcr
or
and
add
sbb
pop
add
es
cwde
enter
jno
aas
adc
sbb
sub
fcomp
add
sbb
cmc
inc
xor
pop
loopne
xor
imul
or
and
inc
cld
add
mov
dec
jmp
dec
fbstp
nop
sub
mov
clc
and
mov
ror
jge
ins
arpl
aas
or
sbb
sar
add
test
bound
dec
mov
dec
push
int
mov
push
sbb
call
leave
call
mov
adc
add
dec
fmul
mov
in
cdq
int
js
mov
push
pop
rcr
push
sti
dec
movs
add
xor
xor
je
sub
in
dec
xchg
movs
add
leave
adc
sbb
add
clc
fild
retf
iret
mov
inc
fs
sub
and
xchg
pushf
add
jo
adc
or
add
ins
add
dec
pop
not
and
mov
lea
pop
movs
retf
xor
sub
stos
inc
adc
jle
mov
mov
repnz
mov
fisttp
sbb
lahf
jns
fimul
mov
jns
mov
fild
in
xor
jmp
or
push
lock
pushf
jmp
inc
mov
adc
and
push
xor
and
ja
ins
je
jo
sub
jl
adc
(bad)
sub
push
ret
inc
les
shl
adc
jne
lods
or
dec
and
clc
mov
adc
pop
adc
pop
push
mov
add
push
add
add
adc
push
lahf
aas
test
lahf
add
adc
and
add
add
add
and
les
xchg
movs
out
popa
adc
cwde
stc
add
cdq
pop
mov
add
pusha
add
mov
mov
fild
adc
fld
fstp
xchg
xchg
or
add
and
add
lock
add
les
cmp
adc
sub
push
imul
hlt
xor
mov
clc
add
inc
or
test
and
add
add
xchg
mov
ret
and
loopne
adc
in
push
dec
test
and
inc
or
sub
lock
fbstp
sub
pop
adc
mov
mov
ror
sub
int
adc
shr
adc
push
push
add
mov
(bad)
mov
sahf
add
pop
in
or
mov
add
xchg
dec
adc
xchg
and
add
movs
inc
sbb
cmps
mov
scas
mov
shr
mov
stc
push
dec
push
cmp
or
mov
push
push
imul
push
push
clc
xchg
and
out
or
and
aas
add
or
test
je
cmp
in
push
rol
push
cmp
popa
loopne
jne
fdivr
(bad)
loopne
sbb
mov
jle
adc
loopne
fsub
mov
xchg
pop
mov
sub
lods
hlt
(bad)
ins
jl
sar
jnp
ror
xchg
es
sbb
les
inc
push
ret
inc
jo
dec
(bad)
and
jne
fbld
or
test
out
dec
in
hlt
in
mov
sbb
lods
push
push
aas
mov
pop
ds
pop
jp
xchg
shl
mov
fisttp
call
sub
jo
(bad)
push
add
xlat
mov
outs
pop
lahf
mov
adc
jg
xor
adc
xchg
fbstp
pop
aam
cmp
bound
or
pop
and
push
sbb
adc
(bad)
rcl
push
adc
pusha
mov
mov
or
adc
sub
out
adc
jl
or
inc
test
out
cmp
or
inc
push
mov
nop
sub
sbb
sub
rcr
or
imul
lds
sbb
enter
inc
xchg
(bad)
and
sbb
jnp
movs
jb
add
test
sbb
inc
push
aaa
xlat
inc
imul
mov
sub
fs
jg
add
mov
mov
cmp
mov
loope
mov
add
imul
fbstp
dec
inc
or
mov
mov
ret
jmp
fs
xchg
fs
fs
cmp
or
enter
mov
ret
enter
fcomp
iret
jp
aad
add
and
mov
push
fdiv
add
retf
jl
and
scas
add
or
jmp
add
fild
bound
push
mov
add
or
ret
lahf
xor
add
cmps
sbb
push
and
push
dec
sbb
mov
pop
mov
sub
inc
ret
sub
or
add
ror
sub
or
cdq
sub
dec
clc
xor
add
or
popa
pop
sbb
inc
lahf
dec
mov
in
imul
pop
pop
aaa
mov
nop
dec
les
dec
mov
shl
pushf
dec
add
mov
ret
cmp
dec
jmp
inc
test
add
inc
mov
movs
jmp
sbb
sbb
adc
mov
inc
mov
faddp
mov
call
test
cmp
dec
bound
inc
jmp
xor
push
push
xchg
js
call
addr16
in
dec
fs
dec
retf
jne
mov
ins
jecxz
jle
sub
dec
call
adc
pop
je
push
aad
and
fwait
sbb
pop
inc
pop
mov
xor
dec
pop
and
inc
call
(bad)
sub
push
fild
inc
inc
sbb
loopne
mov
loop
dec
jnp
test
test
test
lock
loope
sar
adc
icebp
adc
adc
xor
xor
adc
sub
stos
enter
add
rol
stc
stos
mov
shl
stos
adc
adc
xor
cwde
loopne
lahf
or
test
add
mov
sbb
daa
dec
lea
(bad)
loopne
cmp
adc
add
add
xlat
xor
sbb
or
sbb
mov
pusha
push
and
push
ins
sub
pop
cmps
sbb
je
lea
jnp
and
jge
inc
mov
test
and
shl
mov
and
sub
ja
xchg
call
dec
add
add
cmps
and
icebp
sar
sti
jle
or
ror
mov
stc
sub
mov
or
mov
sbb
pop
cmp
or
mov
in
aam
cmp
lock
xlat
ds
sbb
xlat
lea
rcr
in
out
sbb
(bad)
(bad)
mov
sbb
pusha
ret
xor
dec
mov
je
xchg
inc
std
ja
adc
in
or
iret
adc
dec
adc
add
rol
(bad)
push
push
imul
jp
or
mov
fs
adc
arpl
les
mov
or
pop
setle
add
add
pcmpgtb
or
or
mov
or
or
test
fsub
data16
rol
jbe
mov
daa
mov
ret
int
arpl
sbb
push
lods
xchg
lds
(bad)
shl
rcr
in
popa
pop
xchg
fsubr
pop
mov
mov
push
test
dec
add
dec
daa
repz
dec
rol
push
fiadd
pop
dec
pop
(bad)
mov
xchg
fcmovnbe
inc
sbb
movs
mov
push
jmp
adc
in
push
push
inc
call
push
or
jnp
or
js
sub
push
pop
mov
test
movs
pop
xor
cld
fldenv
add
inc
mov
dec
add
mov
aad
inc
add
les
nop
xchg
aam
or
popa
loopne
or
lea
push
sub
adc
cmp
add
icebp
or
push
in
fistp
loope
sub
in
leave
mov
add
rol
adc
pop
cdq
shl
inc
mov
daa
xchg
cmps
jo
imul
popa
fild
jne
adc
je
xchg
jb
xchg
hlt
dec
push
adc
dec
dec
fisttp
fwait
pop
jmp
rol
loope
jecxz
xor
mov
adc
mov
aas
inc
or
stos
adc
icebp
pop
dec
stos
hlt
mov
or
repz
retf
dec
ret
xor
pushf
jmp
fistp
cmps
push
dec
fild
and
jmp
cmps
push
pop
add
inc
push
mov
inc
bound
pushf
sbb
mov
xchg
aam
(bad)
push
push
push
adc
mov
mov
fist
push
add
imul
push
mov
out
push
push
sbb
rcr
push
lahf
cmp
sbb
mov
sub
jo
add
add
jg
mov
add
cmp
pop
xchg
mov
dec
ret
loopne
pusha
pop
pop
dec
or
lea
cmp
mov
mov
add
mov
test
mov
or
into
cmp
cmps
or
or
dec
xor
or
data16
inc
nop
dec
mov
add
adc
rcr
jo
inc
push
movs
movs
xchg
ret
js
addr16
add
or
or
pop
push
and
and
mov
loopne
inc
pop
ret
or
das
cmp
mov
aas
add
adc
hlt
mov
loop
mov
jg
lock
mov
mov
or
loopne
adc
add
push
adc
inc
pop
adc
test
shl
push
pop
cmovnp
(bad)
popf
fiadd
and
dec
out
cmp
or
mov
push
mov
mov
test
xchg
arpl
(bad)
and
mov
out
retf
mov
lock
jmp
jmp
sub
dec
xchg
dec
inc
cmp
or
push
inc
mov
pop
jmp
cmp
lock
lahf
xor
xchg
push
mov
xor
or
push
jmp
push
mov
not
cmp
stc
mov
mov
lds
cli
sub
push
daa
adc
in
lods
loope
push
jmp
sbb
or
lods
pop
in
jno
mov
pop
or
cmp
lock
xor
pop
(bad)
mov
call
cld
mov
retf
xchg
dec
sti
mov
into
sub
arpl
adc
sbb
daa
call
outs
add
aad
icebp
mov
loop
xchg
xor
leave
sbb
sti
popa
add
dec
cmp
sti
jnp
pop
inc
xchg
mov
stos
js
or
add
add
(bad)
mov
sub
or
sbb
or
prefetch
ins
mov
xchg
out
adc
jo
aam
hlt
cld
imul
cmp
iret
fld
aas
fdivr
adc
dec
or
dec
sub
retf
inc
movs
or
cld
inc
ss
add
out
mov
pusha
add
cmp
push
retf
pop
std
imul
jecxz
fist
push
fisubr
movs
sbb
retf
or
add
inc
pop
inc
cli
pop
imul
pop
jnp
and
repz
dec
sub
add
adc
clc
(bad)
push
test
ins
fsub
xor
dec
mov
mov
xor
add
dec
sbb
movs
xor
jge
mov
setnp
jmp
jge
dec
mov
jo
inc
imul
call
pop
into
inc
and
(bad)
add
jmp
stc
add
adc
inc
dec
mov
inc
fbld
jb
add
es
push
out
add
mov
dec
push
add
pop
dec
call
mov
(bad)
push
push
popa
in
and
pop
pusha
(bad)
mov
loope
adc
loopne
jg
and
aaa
add
sub
add
inc
mov
out
and
push
and
sbb
test
aaa
in
and
or
popa
xor
test
sti
and
sbb
test
pop
shr
fdivr
jmp
dec
leave
push
aas
inc
shl
pop
xchg
jge
add
or
sub
and
arpl
clc
dec
xchg
in
lods
cwde
fmul
imul
xchg
mov
adc
loopne
mov
sbb
call
dec
xchg
cmps
and
push
cld
cmp
cwde
call
je
or
popa
icebp
dec
sub
or
jne
fmulp
dec
sbb
xor
inc
push
mov
push
mov
dec
inc
cmps
push
add
pop
inc
or
xor
jge
add
push
ret
cmp
xor
sbb
(bad)
iret
pop
ror
fcmovb
mov
rol
or
xchg
stc
sbb
adc
add
out
add
dec
adc
or
push
mov
dec
std
xor
adc
mov
xchg
lock
rcr
push
les
mov
rol
and
dec
mov
mov
push
sub
jne
rol
enter
loope
inc
adc
dec
or
int
xchg
fimul
stc
es
(bad)
xchg
fisttp
mov
fcom
dec
or
push
or
mov
pop
data16
(bad)
call
mov
int3
pop
inc
pop
mov
pop
aas
pop
dec
pop
mov
mov
or
mov
pop
mov
lahf
arpl
mov
adc
sub
aam
mov
mov
push
addr16
xchg
imul
push
leave
xor
and
and
pop
add
pop
or
adc
pop
mov
pop
dec
sub
popa
movs
sbb
sub
ror
push
xchg
div
jae
mov
push
mov
add
aas
mov
mov
or
inc
push
cmp
test
inc
popa
loop
pop
add
sbb
or
or
sub
(bad)
xor
sub
adc
adc
push
mov
pop
fistp
mov
jl
jl
pop
xor
jg
adc
movs
bound
pop
xchg
mov
lea
add
mov
les
mov
or
sbb
bound
loope
ds
xchg
add
push
adc
cmp
aaa
sub
loopne
pop
ret
mov
das
movs
add
xor
ret
aas
pop
pop
mov
mov
sbb
push
push
push
add
or
mov
sbb
pop
jns
xchg
movs
test
dec
push
pop
add
pushf
mov
fsub
pop
aam
fcomp
push
inc
sub
ror
sbb
popa
aas
dec
pop
jb
jg
push
mov
retf
imul
xor
and
jo
ret
ss
lock
adc
dec
pushf
(bad)
pushf
and
movs
sbb
add
push
in
cmp
sub
fistp
and
mov
inc
push
ret
push
mov
out
cmp
js
sti
mov
ja
and
push
adc
inc
pop
and
push
sub
push
fist
inc
add
mov
fmul
int3
push
nop
mov
int3
add
adc
mov
mov
sbb
or
jmp
jecxz
cmp
sub
push
call
in
pop
add
or
sub
pop
test
test
mov
add
adc
jne
mov
and
je
sbb
xor
mov
xchg
sar
in
or
sub
add
add
aad
pop
mov
(bad)
test
mov
(bad)
call
pushf
pop
les
lock
adc
fwait
pop
jge
adc
or
pop
jge
sbb
pop
mov
push
jg
lahf
pop
sub
lods
in
jg
js
cmps
push
or
mov
in
add
add
ret
fild
scas
in
call
dec
popa
mov
lahf
pop
adc
cwde
pop
jg
bound
sbb
sbb
nop
adc
sbb
push
clc
xchg
pop
dec
or
push
or
or
cmps
test
push
out
mov
lods
daa
mov
mov
dec
push
cmc
xor
punpcklwd
lods
push
rcr
jo
xor
clc
jg
pusha
xchg
mov
mov
add
loopne
add
mov
sub
inc
in
lods
inc
es
outs
push
xlat
mov
and
cld
push
cld
push
test
test
pop
test
jno
push
adc
sub
sub
push
cwde
or
test
fnsave
popf
not
ret
cmp
jo
aas
xchg
(bad)
push
mov
in
adc
cdq
not
xor
sbb
cmp
push
push
fs
push
jns
inc
das
push
test
adc
push
sbb
mov
pop
call
(bad)
pop
cmps
and
leave
je
mov
and
rol
fmul
adc
mov
ins
pusha
jno
ret
jg
and
or
call
cwde
es
sub
lds
jae
ret
in
mov
mov
(bad)
das
xor
and
and
mov
mov
sti
mov
and
mov
lahf
or
mov
push
imul
xchg
mov
cs
push
imul
mov
dec
inc
and
or
dec
popf
push
jbe
and
or
or
push
add
cmps
inc
add
xor
inc
and
je
sub
xor
sub
mov
mov
leave
push
loopne
jae
clc
popf
add
xor
or
sub
adc
mov
outs
bound
mov
push
out
retf
(bad)
xchg
imul
jno
aad
add
fild
enter
sub
or
xchg
or
ret
aas
cwde
xchg
and
jg
mov
inc
pusha
jno
inc
lock
or
popf
push
mov
mov
mov
push
xor
jmp
xor
in
call
mov
pop
xor
mov
add
dec
aas
pop
dec
and
jb
stos
lods
or
adc
push
xor
stos
nop
push
pop
outs
sbb
jo
in
or
fwait
daa
fsub
lods
push
and
and
cmc
dec
or
movs
cld
(bad)
dec
ss
mov
xchg
inc
pop
mov
xchg
xor
aad
addr16
push
pushf
mov
inc
pop
mov
push
lods
sub
inc
test
in
inc
xchg
sub
jg
mov
mov
and
popa
or
mov
jl
mov
or
imul
or
pop
test
inc
mov
gs
jecxz
add
jne
cld
adc
and
cmp
add
adc
mov
in
pop
dec
or
sub
push
ins
clc
sbb
pop
in
sbb
push
or
add
pop
stc
add
and
add
sbb
adc
push
pop
adc
push
or
in
outs
pop
leave
or
xchg
pop
add
in
xor
push
cmp
daa
xchg
and
pop
jmp
loopne
inc
pop
and
loopne
or
add
call
call
add
test
sbb
in
push
inc
push
scas
inc
push
lods
add
add
xor
mov
call
push
jbe
sub
or
loope
pop
add
loopne
scas
or
jg
or
mov
mov
loopne
fs
lock
and
jg
int
in
mov
inc
push
daa
hlt
leave
adc
mov
pop
cmp
enter
add
sar
mov
push
xor
adc
adc
or
pop
dec
push
jno
jae
pop
add
sbb
add
sbb
add
(bad)
push
push
pop
or
nop
mov
sbb
fs
dec
out
les
inc
pop
mov
out
sti
nop
loope
add
pop
daa
test
jecxz
jnp
inc
int
sub
pop
inc
movs
lods
jmp
xchg
mov
and
inc
xor
repnz
pop
add
cmp
in
loope
dec
mov
add
or
push
fistp
adc
iret
ficomp
adc
fsub
out
dec
inc
pop
out
fsub
and
xchg
ins
test
adc
in
scas
gs
not
inc
hlt
push
cmp
push
or
or
push
inc
xchg
add
pop
in
pusha
pusha
add
out
lock
movs
inc
push
in
hlt
inc
call
dec
mov
outs
adc
nop
or
(bad)
test
xchg
push
cmps
fild
shl
fsub
subps
cmp
add
add
add
add
arpl
push
lea
das
test
add
mov
push
rcr
adc
or
test
xbegin
int3
in
or
lods
adc
add
push
mov
cmp
add
add
pop
nop
push
cmp
and
and
daa
loop
mov
test
mov
mov
add
dec
xchg
push
push
mov
arpl
or
hlt
xor
sub
adc
retf
pusha
mov
mov
loopne
mov
push
test
push
(bad)
adc
fild
pop
xor
jcxz
fsubp
mov
add
push
cmp
lds
mov
hlt
dec
pusha
pop
(bad)
stos
mov
dec
add
and
dec
in
push
xor
pop
je
add
test
mov
inc
push
sub
mov
pusha
and
xor
add
movs
jns
dec
cwde
and
xchg
or
sub
or
and
jl
xor
movs
pop
push
cmp
dec
clc
and
loop
aas
lahf
nop
call
or
jno
mov
aad
jo
inc
mov
clc
jecxz
or
jns
aas
sub
fstp
and
cmp
or
in
push
call
cmp
adc
arpl
sub
jg
jno
aas
or
jmp
es
push
jo
(bad)
test
ja
pop
cdq
int3
inc
call
sbb
push
movs
xor
out
xor
mov
adc
dec
cwde
add
pop
adc
jmp
add
test
ss
pop
or
xor
inc
lahf
sub
lahf
arpl
inc
xchg
and
inc
xchg
mov
ins
dec
add
test
push
lods
xchg
iret
sbb
lahf
push
sbb
push
jb
rcl
or
sub
mov
cli
cmp
aas
sub
cmp
inc
push
push
push
nop
and
mov
dec
xor
xor
inc
dec
pop
sbb
push
mov
mov
scas
(bad)
sub
(bad)
mov
inc
and
shl
inc
lods
or
mov
scas
mov
movs
je
xchg
scas
test
xchg
jno
xchg
mov
xchg
cmps
adc
add
lds
mov
dec
xchg
mov
dec
int
push
xor
and
aaa
fsub
mov
inc
push
leave
dec
mov
cmp
in
mov
or
and
pop
mov
inc
pushw
add
pop
jg
inc
mov
test
and
sbb
and
add
mov
bound
test
test
popa
push
cmp
pop
ficom
mov
pop
mov
icebp
mov
or
mov
push
mov
subps
push
or
wbinvd
xor
aas
push
sub
jg
aas
test
and
inc
or
or
inc
and
push
cwde
jg
mov
rcl
leave
mov
in
or
and
jbe
and
rcl
add
mov
dec
and
and
les
or
push
jmp
push
mov
cmps
stos
jns
push
push
push
xor
adc
dec
aaa
mov
add
or
adc
add
and
or
jecxz
pop
loop
mov
inc
mov
add
sub
add
add
mov
push
sub
and
push
mov
xchg
movs
adc
cmp
mov
arpl
mov
xlat
mov
sub
jmp
outs
xchg
add
dec
mov
movs
push
dec
mov
add
mov
fist
int3
cmps
les
jno
and
mov
inc
or
cdq
push
pop
inc
ret
nop
test
pop
cmp
or
lods
aaa
xchg
mov
or
ret
push
adc
dec
sub
jp
inc
nop
push
movs
(bad)
xor
adc
xor
mov
js
jmp
add
test
or
int3
mov
ja
outs
je
push
enter
xchg
cmp
shl
fsub
data16
imul
leave
inc
jo
shr
nop
int3
push
pop
or
sub
jmp
call
lods
inc
jae
sbb
rol
xor
fbld
or
loop
and
lods
pop
cmps
hlt
xchg
pusha
add
mov
inc
dec
pop
aas
jnp
cmps
arpl
ins
les
ins
aam
ds
cwde
xchg
xchg
push
cmps
ja
daa
test
add
mov
push
movs
ds
test
mov
adc
shl
cmps
add
pop
cld
push
push
xor
push
xor
and
lea
jae
hlt
addr16
lds
cdq
mov
xchg
cmps
jmp
aas
inc
sbb
fmul
jge
lods
sbb
ret
add
lahf
ret
jecxz
pop
push
mov
les
dec
les
push
sbb
sbb
out
test
pop
mov
lock
push
xlat
or
xor
or
cmp
scas
sbb
sbb
add
and
retf
in
or
f2xm1
dec
fcomp
enter
test
or
lea
sbb
movs
sti
pusha
sbb
mov
mov
inc
or
sub
push
and
mov
or
add
mov
cmc
bound
adc
xchg
inc
adc
or
sar
enter
or
mov
and
push
inc
or
and
and
dec
jmp
ret
pop
jge
add
or
es
call
sbb
cmp
sti
mov
cmp
inc
push
leave
movs
je
mov
pop
sti
mov
test
jb
push
sbb
jmp
mov
adc
mov
and
outs
and
test
push
inc
or
xor
aad
mov
in
inc
pop
add
dec
push
and
and
sbb
pop
shl
xchg
xchg
inc
hlt
push
jg
call
dec
sar
(bad)
nop
add
loopne
and
fidivr
sub
xlat
ins
mov
jno
in
and
cmps
data16
nop
cwde
inc
shl
ds
ins
jecxz
sbb
adc
ror
or
clc
loopne
push
sub
sbb
sbb
shr
ficom
add
or
xchg
inc
movs
push
(bad)
gs
mov
adc
imul
gs
sbb
sbb
and
xchg
cwde
mov
xchg
jne
mov
push
jae
je
pop
cmp
xor
add
mov
push
cmp
xor
push
and
xchg
cmps
nop
mov
or
fnstcw
mov
push
mov
or
jecxz
das
cs
clc
shr
or
pop
ja
and
lock
mov
inc
adc
pop
or
push
adc
jge
rol
adc
or
(bad)
xor
retf
shl
leave
adc
ja
add
rcr
mov
push
add
adc
pusha
cmps
out
mov
or
xchg
(bad)
push
rol
or
push
add
add
nop
repnz
pusha
xchg
inc
add
pop
xor
(bad)
jnp
fcomp
sub
adc
xor
call
outs
xchg
mov
sub
or
sub
and
or
mov
test
push
aad
cmps
inc
add
xchg
pop
adc
adc
mov
xchg
ret
aas
sbb
add
(bad)
jl
outs
test
cwde
(bad)
movs
je
mov
sbb
fwait
aas
aas
fwait
bound
or
dec
leave
xchg
add
inc
je
dec
loopne
cdq
sbb
rcr
aaa
ins
lods
dec
xor
call
inc
add
pop
aam
push
bound
cmp
rol
xchg
ss
ss
push
dec
mov
adc
jno
sbb
or
in
aam
sahf
mov
or
jns
nop
jle
mov
movs
pop
es
push
xchg
jo
ret
cmp
loopne
dec
or
into
sub
cmp
sub
and
sbb
push
jp
ficomp
mov
inc
sbb
cwde
and
loopne
mov
lock
jne
pop
push
sbb
mov
mov
push
or
inc
js
push
mov
push
or
clc
add
push
push
jmp
dec
add
popf
outs
add
or
sub
clc
push
(bad)
sbb
jno
paddb
xor
and
test
lahf
add
dec
inc
fcom
mov
xchg
lahf
scas
movs
and
pop
test
or
xor
and
pop
or
ins
loope
sbb
cmp
pop
push
add
add
inc
or
inc
sbb
int3
add
adc
ins
adc
xchg
sub
jg
les
les
sbb
mov
loopne
aas
xchg
push
pop
mov
dec
test
or
inc
add
imul
adc
xor
and
mov
retf
push
adc
jo
add
add
mov
cld
cmp
add
rcr
jl
pop
push
add
pop
xor
adc
arpl
pop
inc
psraw
fadd
fcom
nop
cmp
add
rol
mov
fcmovnbe
arpl
mov
and
mov
inc
popa
xor
mov
push
mov
shl
and
test
je
sbb
call
xor
ins
in
aad
jo
xchg
adc
and
mov
add
addr16
rcl
dec
(bad)
jl
jno
(bad)
mov
inc
sub
dec
or
pusha
pushf
das
inc
in
lds
dec
jo
sbb
or
and
dec
test
or
aad
push
jnp
shl
jne
or
xor
mov
add
ins
inc
cmp
xlat
dec
test
(bad)
leave
jmp
push
cmps
es
cmps
mov
cmp
cmp
mov
mov
sbb
or
mov
xchg
ds
sub
mov
dec
jge
inc
not
les
sbb
pop
xor
adc
dec
xor
dec
in
xchg
call
call
add
adc
pusha
in
dec
inc
or
repnz
xor
pop
add
stc
lahf
fbld
loop
(bad)
sar
(bad)
and
add
add
or
cwde
out
dec
scas
or
femms
pop
adc
aaa
cmp
add
xchg
adc
ins
xchg
jno
xor
mov
lock
pop
outs
dec
adc
mov
xchg
xchg
adc
test
jo
sub
add
jo
(bad)
das
sub
dec
rol
nop
ja
lods
pop
or
xor
pop
in
push
aad
xor
cmp
inc
in
mov
add
mov
test
or
dec
ret
ins
and
jo
fld
add
ret
mov
push
cmp
pop
nop
ror
inc
ins
or
inc
inc
inc
clc
mov
jo
inc
xchg
or
loop
and
xlat
or
inc
loope
mov
adc
int
add
and
mov
repnz
adc
mov
loope
xchg
push
fmul
ins
bound
rcl
dec
pop
sbb
pop
fwait
lods
push
(bad)
sbb
push
enter
add
jmp
or
xchg
or
push
cmp
inc
or
jne
cmc
test
dec
(bad)
ja
dec
test
jo
in
dec
inc
cmp
mov
adc
not
das
add
push
enter
pop
xchg
xchg
xor
inc
daa
je
xor
(bad)
mov
sub
push
mov
fmul
shl
sbb
push
mov
push
jnp
int3
push
push
lock
sbb
inc
nop
mov
pop
or
jne
add
adc
mov
or
push
imul
inc
(bad)
shl
adc
inc
(bad)
dec
pop
cwde
test
dec
add
out
mov
push
mov
ret
or
repnz
jmp
push
jno
enter
fucomip
nop
test
add
dec
enter
push
pop
or
cmp
or
jge
loop
xchg
sbb
sahf
mov
cmp
add
loope
add
xchg
cmp
fdivr
ins
xchg
dec
or
pop
mov
ins
gs
aam
sbb
jmp
fidivr
inc
lahf
stos
call
fild
dec
sub
or
je
add
inc
add
ds
nop
lahf
rol
in
add
shl
lahf
shl
pop
les
mov
pop
or
or
test
lahf
and
int
repz
pop
inc
pop
cmp
call
and
mov
gs
add
add
mov
or
and
sbb
inc
scas
and
aas
add
cmp
addr16
xchg
add
add
test
dec
in
scas
pop
push
add
add
pop
out
out
cmp
sti
cmp
lds
sub
or
sbb
enter
es
and
or
jecxz
out
sbb
imul
test
sbb
jne
xor
push
rol
adc
dec
and
adc
loopne
shl
jmp
ret
cmp
daa
cmps
sbb
mov
sub
adc
fs
popa
js
dec
imul
daa
mov
enter
lock
add
clc
nop
cld
cmp
sub
outs
adc
jns
je
sbb
and
or
dec
loopne
push
ins
repz
mov
fcmovu
ror
aad
add
pop
das
push
add
lock
les
dec
in
jmp
push
or
aaa
add
sub
jmp
ret
sbb
mov
sub
add
shl
and
sbb
xor
push
xor
gs
sbb
ret
out
xor
adc
add
and
dec
clc
retfw
aaa
or
lahf
adc
adc
(bad)
(bad)
out
dec
sub
dec
or
inc
push
xor
or
jp
and
sbb
mov
in
loop
jmp
call
(bad)
es
fnstsw
mov
cmp
pop
pushf
add
add
movs
jmp
je
cdq
adc
adc
mov
push
add
loop
jg
sub
les
ret
inc
sbb
push
or
js
lea
pop
aas
jmp
xor
mov
cld
iret
or
ins
shr
(bad)
push
les
cmp
and
mov
daa
sub
and
xchg
cmp
xchg
popw
dec
cmp
(bad)
rcr
and
fsubr
inc
(bad)
cmp
cmp
add
nop
xor
icebp
nop
jmp
sbb
mov
ret
push
aaa
jmp
and
mov
inc
dec
add
and
out
ins
(bad)
cmp
dec
ret
add
push
cdq
clc
daa
jmp
(bad)
and
ja
pop
dec
xor
fsubr
xor
pop
test
data16
xchg
sub
mov
stos
aaa
push
dec
jge
jno
fwait
push
cld
push
jno
imul
dec
xor
xchg
jno
mov
pop
mov
push
ret
push
mov
mov
push
mov
and
push
ja
scas
add
and
dec
fimul
addr16
jp
loopne
lock
cmp
ss
dec
mov
mov
sbb
jecxz
ja
sbb
xor
int
pushf
push
and
aas
and
add
mov
pop
pusha
and
sbb
fild
jecxz
add
push
add
pop
pop
push
imul
cmp
and
cmc
lock
adc
les
jl
jg
je
mul
mov
push
cmp
and
push
jno
jno
mov
add
int
adc
add
mov
jno
inc
mov
mov
lods
test
adc
and
inc
(bad)
dec
ret
mov
popa
sbb
out
in
int3
inc
add
inc
xchg
or
arpl
push
sbb
ret
sub
dec
inc
and
test
jae
gs
ja
sub
push
sub
es
add
inc
cmp
inc
pop
add
mov
add
and
retf
adc
adc
add
cdq
or
jle
pop
(bad)
inc
and
hlt
push
mov
test
(bad)
retf
mov
mov
inc
and
sbb
mov
mov
out
xor
mov
cmp
adc
jmp
pop
das
xchg
push
dec
mov
in
lea
rep
data16
mov
das
sub
les
cmps
in
cmp
xor
test
fiadd
mov
add
pop
pop
retf
ret
aas
lock
sbb
dec
add
and
push
inc
add
inc
push
cmp
mov
rol
out
xor
sub
pop
ret
push
xor
aaa
dec
mov
fwait
adc
lds
add
push
sub
mov
xchg
cmp
fwait
es
pop
add
pop
or
or
int
and
push
push
xchg
and
and
mov
mov
xor
xor
push
add
shl
dec
add
inc
xor
fistp
and
into
ror
inc
ror
rol
xor
cmp
or
adc
sbb
mov
or
cwde
adc
pushf
retf
adc
mov
cmp
add
add
sub
pop
enter
pop
add
imul
mov
cmp
or
and
and
call
or
cmp
push
repz
test
jecxz
add
sbb
data16
(bad)
js
add
pop
push
adc
or
inc
aam
mov
enter
sub
dec
sub
xor
pop
inc
sahf
sbb
enter
in
fdiv
inc
into
dec
cmp
pop
sbb
jp
or
xor
inc
retf
sbb
inc
add
mov
inc
outs
loopne
pop
cmp
cdq
xchg
xlat
ds
rcr
aad
xlat
aam
jnp
femms
add
(bad)
pusha
mov
out
pusha
add
(bad)
sti
fcmovbe
lock
sti
push
add
xor
adc
cmp
scas
in
dec
cmp
cld
mov
test
inc
inc
clc
popf
and
(bad)
retf
clc
fwait
cld
fld
jmp
leave
push
adc
inc
adc
xchg
cwde
jp
and
inc
sub
xor
jne
fimul
lock
cmps
or
add
or
and
xor
or
jmp
pop
mov
or
cmp
ins
(bad)
aam
inc
les
or
jne
add
movs
cmc
push
or
push
(bad)
in
call
dec
cld
sbb
mov
xchg
xlat
dec
sbb
or
push
ret
lock
imul
sti
mov
xor
pop
fsub
add
pop
sbb
add
(bad)
(bad)
js
push
jmp
mov
add
adc
sbb
add
pop
add
daa
test
pop
adc
push
mov
jnp
lods
add
cmp
pop
inc
add
or
adc
jb
jl
es
pushf
pop
adc
popf
sbb
dec
sbb
adc
mov
and
pop
mov
lods
pop
or
push
adc
xor
test
pop
mov
push
add
xchg
and
add
or
rol
stc
xchg
rcr
add
and
jg
aaa
lea
pop
adc
test
aas
mov
inc
fs
enter
adc
mov
dec
add
push
in
daa
jno
or
sar
sbb
add
leave
shr
push
cli
sub
or
mov
adc
loopne
mov
and
ret
shl
pop
sti
pop
mov
test
or
ins
push
clc
add
or
sub
mov
dec
dec
rol
or
sbb
cmps
aas
addr16
push
test
mov
or
mov
sti
lock
(bad)
push
sub
sub
mov
pop
adc
push
pop
pop
push
jnp
fsub
jmp
or
add
inc
iret
fdivr
push
data16
repz
adc
pushf
movs
aas
cmps
popa
or
xchg
(bad)
popa
or
push
cmp
or
sahf
xor
sbb
xchg
fdiv
inc
dec
adc
sub
fisub
mov
mov
push
imul
enter
hlt
sbb
xchg
aas
(bad)
std
adc
dec
stos
in
stc
out
mov
and
push
cmp
inc
jmp
and
mov
repz
cmps
jne
pop
sub
add
sar
add
inc
add
cmp
sbb
and
and
or
cmc
test
call
mov
cdq
ss
imul
xchg
mov
scas
loopne
inc
or
mov
xchg
jns
shl
and
jge
and
fdivr
inc
ss
les
or
mov
jp
jg
adc
mov
push
fs
shl
and
daa
or
push
rcr
loop
jp
push
xor
push
and
leave
enter
xchg
and
mov
mov
push
pop
mov
(bad)
cld
aas
push
and
add
inc
jg
inc
inc
dec
pusha
adc
(bad)
mov
mov
sar
pusha
mov
ret
mov
push
(bad)
adc
and
test
push
xchg
push
pop
in
cmp
sbb
pop
mov
(bad)
sub
fisubr
mov
push
nop
ror
(bad)
cmp
stc
jns
adc
push
add
mov
sbb
add
fidiv
push
sbb
ja
mov
lock
pop
jg
pop
or
push
stc
movs
or
fsubr
(bad)
ja
sbb
dec
adc
ins
mov
inc
jg
add
stos
lahf
push
or
mov
adc
mov
push
mov
rol
mov
push
and
rcl
imul
icebp
and
outs
cmp
fmul
xor
mov
and
mov
mov
hlt
and
fwait
aas
fmul
popf
out
or
mov
js
mov
shl
or
adc
nop
add
out
mov
pop
movs
cmp
jle
pop
cmp
sbb
lock
lahf
push
dec
jg
lds
nop
lds
ins
adc
add
dec
xor
js
jo
or
push
test
lock
jo
jmp
pop
js
sbb
pop
bound
ss
xchg
adc
inc
sub
mov
loope
js
pop
outs
xor
push
push
push
imul
leave
xchg
pop
lds
es
xor
ds
call
aaa
ins
out
push
inc
push
je
jl
adc
push
dec
mov
jecxz
add
or
mov
sbb
test
dec
lock
sbb
dec
and
mov
xchg
dec
jmp
cmps
mov
push
add
addr16
fwait
and
jo
inc
add
add
mov
push
scas
jecxz
xchg
mov
mov
mov
mov
dec
test
test
mov
cmp
add
dec
dec
enter
sbb
les
aam
lock
sub
adc
test
push
jno
loopne
leave
rol
cwde
or
and
pop
mov
rcr
and
mov
mov
and
add
adc
movs
mov
cwde
and
add
mov
pop
sbb
pop
xchg
xchg
jbe
(bad)
sbb
cmp
adc
inc
sbb
cmp
and
mov
or
shr
cdq
rol
addr16
jmp
scas
or
sub
dec
stos
pop
or
mov
call
push
mov
xor
mov
test
push
lods
push
mov
xor
ss
pop
mov
int
sub
mov
and
fcomp
cdq
push
(bad)
dec
lds
loope
cmp
pop
hlt
jecxz
xor
and
mov
icebp
fisttp
push
stos
int
sbb
popa
sub
test
stc
sub
and
add
xor
xchg
data16
xchg
and
mov
jns
lods
add
pop
sbb
add
add
pop
sbb
sbb
ins
popa
pop
cmps
rcr
pop
cmps
push
fld
push
cld
cmp
shr
pop
mov
aas
les
imul
call
in
fild
mov
xor
popa
pusha
stos
ss
jbe
sub
mov
mov
dec
arpl
push
clc
and
ja
inc
call
outs
mov
pop
inc
add
or
add
fstp
mov
mov
lahf
push
js
aad
ins
dec
inc
inc
cmp
jl
lock
push
outs
xchg
add
les
outs
fwait
add
mov
adc
dec
sbb
and
xchg
dec
sub
xchg
dec
es
xor
cmp
es
fs
inc
dec
es
fs
dec
push
push
pop
cdq
fs
dec
pop
pusha
fs
dec
es
es
je
jl
cmp
test
in
mov
xchg
cwde
push
in
push
pushf
mov
inc
test
in
push
in
mov
push
in
push
mov
in
enter
push
in
aam
push
in
push
fsub
in
push
in
call
in
hlt
clc
add
inc
push
cld
add
add
pop
jb
or
and
jb
adc
pop
jb
pop
sbb
and
pop
jb
sub
and
jb
xor
pop
jb
pop
cmp
inc
and
jb
dec
dec
jb
pop
jb
push
pop
pop
jb
pop
pop
pusha
and
jb
push
jb
je
pop
jb
pop
jl
test
xor
sbb
pop
push
popa
add
sub
push
rcr
cmp
add
pop
shl
or
mov
sbb
shl
movs
je
sub
sub
iret
cdq
loope
test
add
pop
xor
add
pop
inc
push
xor
pop
sub
mov
push
les
xchg
fbld
add
in
in
pop
cmp
and
sbb
or
xchg
push
and
jmp
mul
adc
std
push
push
jmp
loopne
push
add
lahf
sar
dec
jno
aas
cmp
fcomip
jge
lds
add
mov
pop
inc
lock
sub
arpl
or
movs
pop
and
mov
jo
mov
adc
or
mov
mov
pop
cmp
adc
lock
les
addr16
push
and
sub
add
ror
sbb
sbb
xor
add
dec
push
lock
mov
add
mov
call
ret
rcl
jnp
push
add
fisttp
xchg
call
mov
mov
push
push
adc
adc
mov
aas
cmp
inc
pusha
sub
adc
xor
xor
mov
dec
arpl
outs
push
xchg
sbb
cmp
int3
inc
add
mov
pop
cmps
aas
adc
push
mov
cmp
aas
and
scas
push
dec
push
(bad)
and
inc
inc
adc
les
ss
xor
cli
cmp
sub
xchg
cmc
(bad)
xchg
dec
mov
add
add
dec
sar
ss
pop
or
push
imul
push
lea
movs
retf
cld
sbb
bound
test
fist
pop
pop
test
xor
stos
pop
or
and
sbb
add
adc
inc
stc
or
loopne
lahf
or
popa
call
fist
mov
cmp
sbb
loope
dec
push
rol
or
push
ret
and
add
inc
sbb
inc
push
mov
int
pop
inc
imul
mov
or
adc
and
add
sbb
gs
push
fsubr
call
inc
or
xchg
xchg
int3
jle
dec
(bad)
pusha
xchg
push
(bad)
adc
inc
ins
pushf
rcl
ror
enter
jl
dec
xchg
and
inc
mov
fiadd
and
mov
ret
and
dec
in
cwde
jmp
ja
and
out
loopne
pusha
sti
and
xchg
test
rcl
(bad)
sub
imul
adc
aam
xor
(bad)
push
jno
dec
sub
sub
jg
ins
loopne
add
ins
adc
dec
cmp
inc
add
and
mov
xor
loope
nop
sub
or
fdivr
xor
add
xor
mov
imul
movzx
imul
shl
sahf
or
pop
cmps
pop
push
rol
cmp
into
stc
(bad)
or
xchg
mov
xchg
xor
adc
push
xor
or
aad
xor
adc
sbb
pop
sbb
pop
shl
mov
push
or
rcl
cmps
lods
xor
push
lds
aas
pop
pushf
adc
out
add
out
jp
rcr
je
test
popa
js
mov
adc
add
xor
imul
xor
or
pop
mov
push
adc
aam
retf
pop
and
xchg
xchg
push
adc
enter
dec
sbb
sahf
lea
xchg
or
xchg
and
ja
je
sbb
push
icebp
ret
and
sub
inc
or
xor
mov
fs
ror
sub
inc
push
mov
mov
inc
xor
or
xor
push
int3
jnp
push
xchg
mov
pusha
mov
arpl
mov
and
jge
rol
ror
mov
test
add
rol
xor
xchg
sub
cld
cli
push
shl
push
lods
arpl
push
add
movs
push
dec
ja
add
xor
pop
std
les
jne
js
or
pusha
mov
dec
shr
ret
mov
mov
add
(bad)
loopne
daa
fist
loopne
and
xor
xchg
xor
pop
test
les
pop
or
enter
loope
mov
push
and
xchg
(bad)
nop
mov
add
add
adc
loopne
sub
xor
cmp
add
rcl
cli
arpl
enter
mov
hlt
adc
xor
xchg
inc
jp
cs
enter
dec
enter
ret
xor
pushf
sbb
xor
btr
jno
push
pushf
or
cmc
pop
fsubr
or
push
dec
fisttp
andps
enter
xor
ds
push
inc
xlat
jno
bound
jne
fcom
stc
push
push
sbb
or
and
es
pop
(bad)
xor
push
push
pushf
jecxz
or
pop
or
pop
add
int3
call
add
xchg
outs
inc
fidiv
movlps
shl
fadd
add
(bad)
or
ret
fcomi
and
or
mov
mov
retf
dec
ins
sub
add
fs
add
int3
sti
jne
popa
pop
xor
push
fild
push
test
xor
inc
gs
fwait
xor
add
fmul
adc
xor
retf
lock
push
and
aas
and
sti
cs
xchg
inc
jno
dec
lock
lock
sbb
inc
inc
push
adc
xor
add
xor
jo
icebp
iret
pusha
sub
xchg
lock
xor
rcr
xchg
enter
retf
rcr
jmp
in
lock
stc
(bad)
jne
adc
fild
out
lods
jmp
xchg
popa
cmp
and
sub
rcr
adc
adc
test
mov
mov
adc
pop
imul
movzx
mov
xor
rol
push
mov
or
rdpmc
add
fstp
mov
push
inc
std
adc
pop
pop
jmp
rol
push
dec
mov
sbb
rcr
pop
(bad)
push
pop
xadd
xchg
or
into
jmp
call
push
add
add
mov
sbb
adc
mov
adc
adc
shl
nop
loopne
imul
add
das
sti
loopne
test
inc
dec
test
cmc
loopne
sub
push
sbb
int3
shr
inc
sbb
xor
mov
push
imul
push
jnp
test
and
cmp
dec
iret
xchg
cmp
imul
call
dec
cwde
clc
loope
add
mov
push
mov
leave
and
or
add
push
or
push
pop
sar
and
jl
dec
ror
xor
lea
fs
mov
push
xor
sbb
sub
gs
outs
add
aas
add
pop
fadd
in
addr16
push
loope
xchg
xchg
jg
(bad)
cmp
or
test
pushf
and
stos
adc
or
add
sub
fld
and
push
pop
push
push
leave
call
adc
jno
jge
push
and
mov
rol
daa
add
sub
inc
push
xor
les
retf
mov
inc
arpl
jmp
xlat
call
mov
xor
or
or
push
cwde
daa
and
and
sbb
shl
or
push
or
or
aam
ins
movs
ret
inc
mov
(bad)
mov
and
mov
cmp
ficom
xor
stos
(bad)
mov
mov
xchg
fild
inc
push
les
arpl
jo
pop
or
xor
pop
mov
mov
xchg
sub
inc
dec
popf
xor
pop
sbb
ror
pop
adc
adc
retf
out
dec
loopne
gs
add
cdq
push
stos
call
jge
or
lahf
push
ss
lds
cmp
adc
rcr
add
call
ror
cdq
dec
stc
push
jmp
mov
jge
cmp
or
fist
ds
cmp
in
push
(bad)
test
mov
jmp
mov
add
inc
lock
and
pop
les
loope
jg
sbb
popa
jmp
sbb
sub
inc
clc
cmp
ss
movzx
shl
inc
ficomp
sbb
adc
or
sub
fdiv
add
cmp
mov
and
and
dec
or
in
adc
dec
xor
mov
mov
lahf
addr16
cld
xchg
mov
sub
and
mov
mov
add
xchg
mov
adc
adc
push
movs
sbb
pop
lock
loop
fisttp
sbb
iret
sbb
sar
xor
loop
and
or
fistp
ret
mov
and
xor
icebp
stc
inc
jae
jbe
popf
das
push
lods
xor
shl
dec
(bad)
pop
dec
cmp
inc
adc
lock
clc
adc
dec
shr
cmps
mov
dec
cmp
inc
dec
ret
sub
adc
and
loopne
xchg
jmp
mov
test
cmp
sar
mov
or
or
jae
pop
sar
popf
adc
or
dec
sub
mov
push
or
jl
jo
cmp
scas
test
push
mov
lds
ret
clc
cwde
fmul
inc
xor
jmp
sar
std
nop
aad
cmc
adc
push
add
stc
std
loopne
rol
add
add
adc
sub
cdq
sbb
or
cwde
sbb
mov
pop
jmp
push
inc
inc
inc
mov
add
jo
and
xor
(bad)
xchg
mov
loop
mov
sti
and
push
pop
add
jge
pop
test
(bad)
jno
add
xor
add
js
mov
jo
ja
push
add
pop
and
aas
or
mov
jecxz
jnp
add
(bad)
sti
(bad)
adc
inc
(bad)
mov
fsubr
es
xor
add
push
jmp
shl
sub
inc
das
xchg
std
loopne
lahf
mov
jg
je
ror
xor
movs
pop
and
xor
push
fadd
or
xor
and
add
mov
mov
pusha
nop
bound
(bad)
jne
xor
inc
sub
loopne
mov
aas
xor
xor
or
dec
test
mov
xor
and
sbb
mov
sbb
inc
inc
xchg
pop
sti
pop
mov
test
add
mov
inc
sub
inc
xor
lea
add
xor
in
mov
push
pop
mov
aas
pop
test
or
sti
or
daa
xor
ss
aaa
rcr
jecxz
sbb
mov
pop
or
lds
adc
dec
inc
add
push
ret
jmp
xor
test
je
test
jmp
rol
mov
jl
pop
sbb
push
jecxz
or
in
out
mov
jecxz
adc
add
push
add
dec
imul
push
test
sbb
mov
cmp
fsub
and
add
xor
xchg
dec
out
add
adc
fadd
scas
cmp
sbb
push
and
sbb
out
inc
pop
sbb
fs
cmp
xor
in
push
xor
jnp
and
jnp
ja
int
call
xor
ja
jle
sub
mov
shr
or
jp
sahf
movs
arpl
cmp
jge
jmp
sbb
cmp
push
test
adc
pop
cmp
bound
(bad)
fdiv
sub
fdivr
(bad)
mov
ret
shr
adc
je
sub
inc
sub
lea
pop
shl
xor
sbb
jno
ja
out
dec
xor
mov
dec
add
aam
test
retf
add
push
mov
cmp
sub
mov
in
out
push
je
mov
sub
xchg
pop
sbb
adc
(bad)
mov
test
fdiv
xor
push
add
push
and
push
xchg
inc
xor
cmp
push
movs
je
mov
and
nop
sub
cli
xchg
mov
jne
jmp
inc
add
cmc
outs
adc
mov
inc
sub
pop
fsub
mov
loope
xor
test
loopne
in
inc
call
aad
push
lds
icebp
lods
jbe
dec
jb
lods
cld
loop
jbe
mov
add
gs
pusha
hlt
or
sbb
sub
adc
and
daa
std
add
adc
inc
hlt
fild
aaa
add
aad
loope
cmp
or
adc
ss
and
out
sub
add
(bad)
sub
call
mov
outs
mov
and
movs
mov
pop
je
xchg
or
lock
fdivr
scas
add
lock
out
sbb
mov
dec
inc
pop
or
mov
dec
mov
jecxz
dec
push
mov
out
sbb
call
scas
push
adc
sbb
pusha
ror
sub
test
add
dec
lock
add
fs
cmp
adc
jmp
mov
add
pop
adc
cmp
sub
movs
mov
or
gs
cli
mov
jbe
and
(bad)
jno
jl
inc
or
adc
(bad)
mov
lock
lock
cs
(bad)
out
push
mov
aas
je
mov
sbb
adc
adc
movs
sbb
pop
mov
add
push
pop
xchg
push
adc
and
push
cdq
fisubr
jmp
lds
inc
or
mov
leave
neg
mov
test
push
xchg
arpl
inc
popa
sub
retf
mov
dec
dec
or
je
pop
sub
push
or
add
js
xor
cmc
or
or
sub
push
push
arpl
mov
and
rcl
jmp
xchg
add
cld
adc
daa
dec
cld
or
sbb
inc
adc
cld
fwait
(bad)
in
fwait
cld
pop
daa
xchg
sub
cld
fwait
adc
test
jnp
in
je
jns
je
push
cdq
neg
cdq
push
push
adc
lock
call
dec
inc
sub
les
cmp
arpl
sbb
sar
nop
je
sbb
xor
imul
sti
lods
adc
inc
inc
ret
in
adc
push
jno
mov
cld
cld
and
jb
cld
cld
cld
sub
movs
pop
push
cmp
fdiv
jb
sbb
cmp
popa
bound
and
je
loopne
loopne
add
mov
pop
aas
sbb
loop
loopne
loopne
or
dec
and
add
add
cmp
popa
pusha
ja
or
sbb
add
aas
cmp
inc
cmp
adc
xchg
sbb
inc
outs
(bad)
xchg
jb
loopne
jp
std
sub
lock
push
inc
sub
adc
add
and
rcl
ret
push
or
ror
jo
in
push
imul
and
loop
xchg
jbe
add
rol
test
and
fidiv
add
or
xor
or
dec
hlt
paddsb
adc
and
or
jnp
cmps
add
cwde
loopne
loopne
dec
gs
call
lea
cdq
loopne
push
out
mov
loopne
loopne
scas
cwde
cmp
cmps
jae
mov
loopne
xor
scas
add
repz
and
cwde
adc
cmp
in
loope
or
mov
call
lods
sub
mov
daa
add
mov
dec
inc
rcl
add
and
ja
pushf
and
adc
pop
dec
fst
push
add
and
xadd
push
mov
mov
mov
leave
addr16
movs
add
cmp
loopne
lock
dec
mov
lahf
xor
dec
add
loope
xor
push
aam
pop
movs
mov
mov
nop
or
push
push
jp
movs
pop
mov
push
xchg
fcom
sub
bound
add
pcmpeqw
in
or
popa
fdiv
xchg
mov
gs
add
adc
or
add
ds
sti
fisub
pop
xchg
mov
es
jg
(bad)
and
mov
xor
jge
mov
push
ret
clc
jmp
push
cmps
sub
xchg
fwait
imul
sbb
dec
add
ins
pop
inc
add
fwait
shr
cmp
rol
cdq
shr
jo
dec
jns
xor
ja
add
push
or
aas
inc
xor
loope
lock
and
mov
sub
test
mov
(bad)
jmp
and
jbe
pusha
out
cmp
pusha
jmp
cld
sub
push
add
sub
xchg
(bad)
test
lea
bound
dec
lods
imul
adc
xchg
or
clc
mov
inc
add
es
jg
and
and
add
sbb
out
es
add
adc
out
inc
add
and
dec
xor
push
sbb
pop
inc
xor
nop
xor
add
sbb
in
(bad)
sub
and
xor
push
outs
or
jo
and
(bad)
leave
xchg
icebp
mov
test
sbb
add
fstp
je
in
mov
imul
mov
dec
sub
inc
jnp
loopne
scas
or
or
adc
push
cmp
cmp
add
jge
test
push
adc
sbb
sub
cmp
or
fwait
repz
xor
add
test
or
cmp
xor
pusha
adc
or
ds
nop
fwait
outs
sub
cmc
nop
out
xchg
fwait
jmp
mov
test
or
add
inc
retf
push
fwait
pop
fadd
xchg
imul
add
(bad)
mov
cdq
mov
call
dec
stc
mov
mov
fist
sub
lahf
es
mov
cmps
scas
ins
test
cwde
add
or
call
aam
add
mov
ins
loope
inc
cwde
test
xchg
or
in
or
adc
or
into
test
and
(bad)
ficomp
lock
cmp
dec
lods
and
adc
nop
stos
xor
adc
jmp
inc
add
mov
inc
add
lea
test
sub
(bad)
push
add
or
push
and
sbb
cmc
popa
add
add
xor
test
and
sar
shl
cmp
aam
jle
and
push
ror
shl
sub
inc
push
and
out
jae
out
or
fwait
jmp
out
jmp
addr16
mov
jbe
mov
mov
clc
inc
mov
push
mov
or
add
sbb
lods
lods
popf
mov
xchg
mov
adc
jp
dec
dec
adc
xchg
dec
pop
cld
adc
xchg
add
pop
ins
enter
retf
dec
and
cmp
monitorx
push
les
pop
cld
or
test
add
loopne
in
dec
inc
mov
imul
add
or
rol
rcl
jge
in
scas
ss
push
pop
adc
jo
cdq
in
ins
rcl
mov
cmp
dec
mov
jns
sti
mov
test
or
test
ret
and
fstp
in
inc
imul
dec
aam
imul
enter
adc
xor
jb
inc
cli
pushf
xchg
mov
push
sbb
mov
adc
mov
popf
je
sbb
lea
mov
mov
(bad)
fs
push
xchg
out
mov
or
push
ins
push
sahf
push
shl
fisubr
push
retf
cmp
jb
nop
ret
fidivr
add
add
mov
push
jb
pop
or
or
add
add
mov
xchg
jl
loopne
stos
cdq
hlt
cmp
sbb
push
jo
mov
les
ret
call
and
mov
jmp
adc
(bad)
mov
xchg
sbb
jg
mov
inc
jo
lahf
or
rol
mov
icebp
xor
push
adc
nop
cmp
push
leave
adc
ret
adc
jne
mov
add
dec
sar
pop
or
ss
or
mov
xchg
xchg
jo
imul
jmp
push
or
ins
dec
int
inc
test
mov
adc
cld
xor
scas
add
push
enter
adc
cmc
(bad)
fcomp
sub
dec
fwait
bound
xchg
out
push
mov
add
xchg
adc
mov
xchg
es
aas
in
sti
movs
ret
dec
adc
push
and
jmp
cwde
mov
sub
je
xchg
fnstsw
inc
loopne
xor
add
leave
adc
nop
xor
mov
and
adc
fstp
inc
xchg
adc
jnp
push
mov
add
aaa
mov
adc
push
call
jno
pusha
add
xchg
sub
icebp
push
or
mov
fimul
jp
xchg
fcom
push
mov
adc
inc
xchg
jl
or
or
test
and
mov
xor
das
(bad)
std
pop
xchg
imul
add
cdq
xchg
mov
adc
add
movs
fcom
xchg
lods
adc
push
loopne
pop
lahf
or
dec
ins
adc
or
nop
test
or
jmp
scas
ret
add
rol
mov
push
aam
push
sbb
js
aas
pop
loope
ds
aam
addr16
test
mov
xchg
or
aad
mov
in
mov
pop
sub
pop
mov
adc
or
or
and
push
adc
add
add
xor
sub
scas
inc
jecxz
lds
mov
ja
or
ss
adc
xchg
inc
adc
je
or
mov
pop
idiv
std
or
je
or
in
push
sbb
test
add
push
adc
aaa
lea
inc
sbb
es
lds
pop
rcl
pushf
or
test
test
retf
xchg
dec
in
pusha
xor
cmp
ret
pop
push
call
xchg
push
push
ret
nop
bound
adc
lea
or
test
xor
mov
lods
lods
aas
lods
inc
cmp
retf
nop
dec
mul
ror
dec
mov
and
lock
cmp
mov
mov
xchg
jmp
sub
mov
into
adc
rol
data16
or
add
sub
and
pusha
push
fdiv
jg
push
mov
cdq
aad
add
xlat
sub
call
daa
ins
test
jg
sbb
or
hlt
cmp
iret
or
je
movlhps
sub
adc
lods
jae
ds
rol
inc
cdq
push
mov
add
hlt
mov
adc
jb
lock
mov
jmp
cmps
mov
and
daa
sti
or
or
rcr
mov
push
push
push
or
xor
daa
lahf
dec
push
test
or
fdiv
cdq
push
sbb
add
adc
retf
and
xchg
sbb
cli
adc
sub
or
push
push
or
adc
add
add
dec
adc
sbb
mov
cmp
add
or
stos
sbb
mov
jecxz
xchg
and
jl
or
or
sub
call
test
adc
ss
jge
pop
or
or
in
icebp
dec
or
mov
xor
mov
pop
daa
call
adc
gs
ret
add
pop
add
xchg
icebp
xor
and
pop
shr
cld
sub
ins
loopne
out
and
in
in
xchg
jp
push
pop
ret
pop
lods
and
and
in
bound
mov
pop
outs
bound
inc
xor
nop
sub
test
aas
sbb
dec
add
xor
pop
test
xor
test
add
inc
cmp
clc
lock
shl
dec
xor
adc
push
lds
xor
xor
leave
mov
sub
jno
or
mov
jmp
clc
adc
jne
sbb
add
(bad)
and
mov
jecxz
jbe
jmp
movs
ror
iret
push
cmp
mov
inc
loopne
jp
dec
cmc
dec
xor
fs
jmp
sub
nop
mov
or
test
or
pop
xchg
xor
adc
add
mov
loopne
mov
rcr
mov
sbb
sub
and
jle
lods
sbb
sbb
dec
push
pop
test
sbb
sbb
nop
add
imul
push
or
hlt
add
cmp
lahf
jmp
adc
popf
inc
push
sahf
das
add
and
icebp
movs
stos
add
push
leave
and
jl
jg
add
push
and
jb
jl
and
shl
mov
dec
lock
sbb
adc
sub
add
nop
inc
fldenv
adc
jmp
jg
lea
and
lea
add
test
mov
or
fcom
(bad)
and
shr
cmp
adc
mov
les
sbb
dec
inc
add
lock
jmp
aad
sbb
fcomp
ret
fist
mov
cmps
add
jae
cmp
and
div
js
xchg
xor
pop
adc
sti
xchg
inc
retf
add
test
fist
out
mov
xor
pop
or
jbe
xchg
adc
mov
push
les
fwait
cmp
sub
movs
xchg
(bad)
lahf
test
add
mov
mov
movs
(bad)
pop
push
leave
loop
xor
dec
pop
(bad)
imul
mov
pop
sbb
xor
add
pop
bound
jae
cmp
mov
retf
inc
cmp
test
mov
xchg
dec
and
push
mov
sbb
add
fidiv
lahf
call
push
repnz
sub
cmp
xor
dec
test
dec
call
iret
sub
xor
inc
dec
movs
aaa
in
xor
xchg
imul
and
test
iret
mov
dec
xor
sub
mov
sub
pusha
aaa
add
jns
jmp
sub
icebp
and
add
inc
call
lods
call
or
add
fsubr
dec
call
arpl
mov
jle
popf
add
outs
popf
adc
push
mov
adc
inc
jl
cmp
dec
dec
sub
pop
cmp
pop
shl
jnp
jbe
pop
fwait
sub
add
jnp
xor
jns
xor
dec
cmp
add
push
jnp
fiadd
or
ss
add
ror
dec
lock
jae
lahf
lea
inc
pushf
fdiv
push
lods
xchg
mov
sub
lsl
xchg
lock
inc
(bad)
lock
add
push
inc
cld
jmp
outs
mov
adc
xor
adc
ret
or
push
push
push
aas
push
ja
fistp
adc
inc
xor
sub
je
retf
sbb
les
cs
dec
pop
mov
in
dec
sub
adc
add
push
clc
dec
add
pop
test
lods
push
push
mov
sbb
clc
inc
sub
sti
xor
(bad)
dec
sub
xor
jecxz
js
sbb
lea
shl
pop
adc
jg
cmp
retf
dec
fnsave
and
ja
jae
arpl
dec
sub
add
mov
pushf
int3
adc
in
cld
lods
ss
imul
scas
inc
ins
arpl
push
js
push
mov
mov
xlat
rcl
mov
xchg
add
pop
jns
cmp
inc
call
pop
push
adc
jp
mov
shl
adc
mov
xor
mov
nop
test
xor
pop
test
(bad)
pop
push
mov
dec
in
mov
cmp
sbb
mov
mov
adc
iret
cmp
loop
inc
in
or
lahf
inc
fisttp
ins
ret
dec
pop
in
push
xchg
inc
cmp
push
add
adc
std
mov
test
add
clc
shl
push
lds
dec
popa
ret
rol
ud2
mov
adc
xor
call
hlt
and
mov
mov
sbb
cld
mov
adc
cmp
xor
add
sub
or
xor
loop
ret
push
pusha
or
sub
mov
(bad)
clc
adc
push
pop
push
and
adc
mov
aas
hlt
inc
add
xor
add
hlt
das
das
sahf
or
lahf
push
or
ja
loope
add
push
mov
or
loopne
loope
mov
mov
dec
iret
xlat
sub
cmp
and
add
pop
add
vunpcklps
mov
xor
jecxz
pop
push
shl
rcl
cs
test
inc
or
mov
mov
mov
lahf
aaa
ds
aas
or
cmc
or
dec
mov
lahf
lahf
xor
les
sbb
movs
je
iret
sub
rol
lea
test
add
mov
mov
jl
je
xchg
or
and
sub
adc
cs
cmp
or
bound
push
push
mov
imul
pop
ins
ret
add
jns
add
cmp
iret
lods
sbb
pop
ja
test
test
sbb
add
mov
cmp
and
call
ror
fcomp
lock
sbb
push
sub
and
mov
jle
or
adc
mov
inc
inc
fcomp
lods
xchg
jmp
sub
jg
cld
xchg
test
jo
fwait
test
push
and
adc
outs
jne
xor
mov
dec
push
ret
loopne
add
dec
xchg
add
stos
rcr
fsubr
popf
add
or
fsub
xchg
fild
pcmpgtb
sub
test
ret
dec
pusha
sub
ins
lahf
inc
mov
stc
and
popa
cld
pusha
adc
inc
cmp
inc
mov
fstp
test
(bad)
shl
xor
rcr
inc
add
lock
fldenv
popf
in
inc
pop
add
nop
fcmovb
fwait
movs
inc
jne
add
test
inc
mov
add
mov
push
adc
add
xor
jge
inc
loope
xchg
push
pop
sbb
push
ret
jg
stos
mov
clc
mov
jge
inc
pop
sbb
add
and
ins
call
or
mov
loop
dec
mov
or
dec
inc
mov
movs
ror
sub
push
sub
jne
sbb
sbb
sub
cmp
int3
adc
dec
or
test
or
sbb
icebp
sub
mov
dec
ds
aas
inc
out
ds
out
push
or
aas
push
add
push
in
jne
ins
jmp
jg
add
mov
fstp
iret
dec
sbb
jecxz
fdivrp
scas
inc
dec
adc
pop
cmc
iret
xchg
scas
frstor
push
push
lds
push
adc
pop
sub
pop
loope
adc
add
mov
mov
dec
cmp
xchg
mov
lahf
and
rcr
add
shr
pusha
adc
loope
mov
add
test
cmp
test
or
mov
retf
ror
movs
push
jo
sbb
push
sub
bound
add
mov
int3
pop
mov
add
mov
das
cdq
adc
sub
out
(bad)
sbb
add
add
test
xor
daa
clc
and
and
cmps
add
mov
fild
dec
xchg
pop
inc
adc
cmc
int3
sub
pop
sbb
test
and
shr
xchg
scas
sbb
inc
and
push
cmp
sbb
and
ret
repz
or
pop
jle
push
sti
test
mov
jne
rol
sub
push
pop
sar
xor
iret
dec
cmp
or
test
jecxz
enter
shr
pusha
ss
mov
pop
sbb
lds
or
add
xor
pop
les
xchg
aam
test
mov
dec
dec
pop
adc
push
pop
adc
dec
sbb
lahf
xor
icebp
pop
addr16
xchg
and
mov
(bad)
arpl
int
pop
pop
add
xchg
push
mov
and
push
sbb
or
dec
out
inc
or
pop
lahf
mov
cmp
add
fwait
sbb
and
mov
daa
sub
jmp
movs
jbe
fld
ret
push
cmp
adc
pop
xchg
or
add
repnz
and
cld
add
and
mov
and
js
sbb
xor
retf
mov
lahf
shl
into
push
dec
mov
mov
or
jne
jg
pushf
popf
dec
es
push
xor
or
cmp
or
add
jne
sub
jmp
inc
jmp
mov
adc
test
jbe
jmp
inc
xor
shl
js
dec
sub
push
add
xor
fidivr
pop
enter
stos
and
in
mov
(bad)
dec
add
push
adc
ja
or
cmps
dec
push
or
imul
xchg
or
mov
dec
or
mov
push
add
push
js
pusha
loopne
add
push
ret
movs
fnsave
xor
pusha
ss
aam
xor
sbb
xor
or
push
and
inc
dec
pusha
mov
xchg
or
mov
in
es
and
dec
sbb
sbb
or
lahf
loopne
shr
or
or
mov
sbb
pop
or
pop
fadd
or
push
mov
adc
jnp
or
push
cld
push
add
dec
adc
stc
fadd
clc
push
xlat
jne
div
push
dec
xchg
pop
fisubr
inc
adc
ss
rol
inc
cmp
jns
jecxz
add
add
and
inc
xor
xor
pop
rol
or
rol
jmp
dec
sub
mov
lock
add
and
in
jb
xchg
lock
mov
push
(bad)
push
(bad)
test
sbb
mov
push
adc
push
add
sbb
or
aad
mov
pop
clc
rol
sbb
hlt
push
dec
and
aas
je
xchg
or
js
ret
jg
out
sbb
nop
add
je
dec
pop
and
dec
push
pop
xor
mov
mov
aas
add
lds
or
adc
inc
xor
cld
sbb
add
xor
mov
pop
fnsave
ds
in
mov
sbb
xchg
mov
or
mov
mov
mov
or
pmulhuw
push
(bad)
call
movs
push
and
or
sahf
mov
adc
cdq
jne
dec
inc
adc
push
jmp
mov
(bad)
clc
or
push
and
test
jge
call
or
push
mov
pop
ins
xor
cmp
test
sbb
outs
stos
adc
sbb
loope
dec
push
lahf
movs
add
push
aaa
sub
xor
mov
add
mov
inc
fbstp
mov
dec
cdq
push
pop
mov
pop
or
retf
sbb
(bad)
mov
cdq
nop
or
outs
retf
dec
das
jo
(bad)
imul
add
pusha
fdiv
cmp
or
push
adc
rol
das
xor
dec
add
xchg
sbb
and
aas
dec
inc
movs
bound
aad
jg
je
mov
jmp
les
ror
out
push
and
inc
or
and
cmp
lock
movs
add
inc
hlt
mov
adc
mov
jmp
daa
or
push
scas
dec
add
fstp
push
cmc
push
adc
test
jecxz
push
xchg
and
aam
adc
loopne
xchg
or
pop
mov
adc
mov
sub
inc
jmp
dec
add
push
or
mov
add
xor
cmp
adc
jecxz
jecxz
and
fdivr
add
out
or
ficom
add
xchg
xor
dec
prefetch
or
add
push
leavew
aad
add
vpsubw
jnp
(bad)
shl
xchg
or
cmp
jge
arpl
sub
nop
and
adc
mov
adc
enter
push
sub
adc
int3
or
adc
popa
add
push
mov
mov
cmp
xchg
adc
jae
add
jl
dec
push
dec
push
lds
les
outs
xchg
les
adc
or
inc
mov
add
push
push
or
xor
sbb
cmp
add
popf
or
ret
add
mov
dec
jns
pop
mov
mov
mov
mov
loope
dec
and
xor
xchg
loopne
pushf
xchg
and
aam
int
or
or
mov
add
enter
xchg
dec
(bad)
or
and
js
push
adc
jmp
test
or
add
and
or
pop
mov
mov
repz
xor
push
std
push
or
push
add
sbb
add
add
mov
add
aas
mov
adc
mov
mov
adc
or
icebp
cli
stos
jge
pushf
pop
or
sbb
mov
pop
or
mov
inc
jb
std
pop
add
xchg
mov
clc
repz
add
dec
les
mov
mov
sub
or
or
mov
ret
sub
std
jnp
mov
out
inc
add
push
mov
xchg
dec
inc
push
es
sbb
lds
push
imul
add
lahf
sbb
or
out
cld
aaa
mov
adc
dec
mov
and
fimul
cmp
dec
fild
adc
mov
das
adc
add
adc
jno
xchg
sub
and
icebp
cld
sbb
jo
mov
or
push
nop
call
dec
hlt
(bad)
push
cld
in
mov
add
mov
xchg
scas
push
and
shl
or
and
lahf
ror
adc
aas
cmp
adc
icebp
add
sub
adc
leave
or
and
pop
pop
sub
push
mov
cmp
call
sbb
mov
nop
rol
lahf
mov
mov
cld
add
sbb
push
aas
push
sbb
je
sbb
sbb
mov
es
jg
mov
jg
(bad)
and
add
pop
add
adc
add
aaa
adc
clc
dec
(bad)
cmp
mov
fld
or
aas
aas
scas
dec
scas
nop
mov
dec
pop
cdq
aas
cmp
dec
int3
mov
xchg
lods
pop
ror
mov
scas
jg
(bad)
shr
mov
sbb
adc
inc
(bad)
sbb
inc
mov
sbb
pop
leave
mov
add
xchg
push
fcomp
push
loopne
data16
dec
add
sub
or
inc
or
cmp
mov
jne
mov
add
push
ins
imul
mov
inc
mov
inc
loop
dec
xchg
mov
and
iret
lea
xor
push
mov
pop
xlat
dec
or
push
addr16
rcr
pusha
sub
pop
retf
and
daa
jnp
out
jle
xchg
lods
pop
xor
sbb
add
add
lods
mov
rcr
mov
pop
xchg
add
dec
add
dec
jmp
in
mov
add
fdivr
mov
sbb
sbb
push
adc
inc
lock
sub
test
sbb
sub
pop
movs
jne
or
lea
adc
(bad)
xchg
scas
and
imul
sub
adc
dec
ja
in
mov
sbb
or
jns
ror
rol
xchg
sub
lds
neg
xor
rol
sub
pop
mov
imul
enter
dec
xor
shr
icebp
or
stc
(bad)
mov
daa
add
jge
call
mov
inc
inc
cmp
add
daa
push
loopne
add
xor
dec
sbb
xor
outs
dec
push
pop
push
pop
sbb
dec
icebp
add
popa
sub
pop
retf
sbb
push
rcl
add
push
leave
add
imul
addr16
(bad)
repnz
pop
add
mov
push
add
add
or
sub
sub
adc
daa
mov
jge
push
test
(bad)
les
add
xor
movzx
jge
mov
scas
fwait
rol
adc
sub
scas
lea
xor
or
cmp
push
ja
adc
jp
adc
or
and
dec
xlat
ret
inc
or
dec
popa
enter
push
and
jns
jg
dec
movzx
aam
inc
pop
rol
cmps
test
ret
dec
or
dec
add
sbb
or
aas
xchg
rol
push
push
and
jnp
(bad)
cmps
sbb
or
movs
rcl
push
fs
adc
mov
mov
imul
push
pop
iret
mov
dec
popa
pop
pop
xchg
(bad)
or
adc
lods
push
jns
add
add
mov
iret
js
add
ror
xchg
pushf
ss
sbb
sub
mov
mov
mov
movs
and
test
sahf
arpl
dec
or
ss
ins
push
lods
dec
mov
nop
sti
jg
xor
popf
or
xor
and
or
inc
ins
pop
mov
nop
lock
scas
loopne
dec
popa
mov
popa
fcomp
fadd
add
shl
pop
jno
mov
mov
inc
and
sbb
and
sbb
mov
dec
or
test
loopne
aam
loop
leave
test
ret
push
pop
in
mov
daa
int3
ds
adc
sub
push
sbb
ja
cmp
les
dec
cwde
sbb
(bad)
in
sub
add
out
jl
bound
cwde
pop
dec
add
and
adc
cmps
or
dec
push
mov
ja
daa
add
cs
push
or
or
xchg
pop
in
push
daa
add
mov
adc
scas
add
or
push
or
push
add
lds
add
aad
sbb
or
enter
adc
jmp
int3
data16
xor
outs
sbb
pusha
mov
pop
pop
or
push
fldpi
dec
sbb
and
or
sbb
daa
jmp
or
ss
jge
xchg
nop
out
pop
shr
ror
int
jns
fsubrp
repnz
push
sbb
cmp
repz
and
cmp
cmp
repz
push
pusha
push
iret
repz
jle
xchg
pushf
cmps
mov
iret
repz
(bad)
into
fsub
jns
iret
repz
test
or
jns
out
sub
cmp
sahf
out
sahf
push
pop
outs
js
jns
out
mov
jns
out
enter
iret
sar
cli
add
push
adc
cmp
sub
cmp
repz
repz
dec
push
pop
(bad)
cmc
add
mov
test
pop
push
cmc
ret
dec
adc
adc
adc
sbb
(bad)
(bad)
mov
add
and
and
and
sub
dec
sub
imul
popa
aaa
sub
xor
dec
add
xor
sti
imul
xor
pop
cmp
cmp
cmp
dec
test
mov
or
pop
imul
mov
dec
inc
inc
adc
inc
lds
lock
cmp
ja
jle
xor
pop
mov
and
sub
add
cmps
movs
adc
add
push
sbb
adc
lahf
or
add
sub
movs
mov
pop
push
clc
ins
mov
push
inc
inc
xor
cdq
je
rcl
pop
or
jp
adc
dec
data16
dec
ds
cs
popa
xchg
cmp
push
sbb
sub
xor
pop
clc
ror
xor
pop
mov
hlt
adc
inc
jmp
je
push
lods
imul
push
push
add
add
xchg
jne
jge
sbb
mov
pop
inc
or
aaa
mov
aam
xor
and
add
jecxz
inc
clc
retf
mov
bound
in
mov
outs
in
push
mov
loop
dec
or
push
adc
sbb
inc
mov
cmp
adc
xlat
pusha
nop
cmc
xchg
call
fadd
xchg
and
retf
pop
mov
xchg
test
sti
clc
inc
or
inc
icebp
das
push
add
push
mov
popf
nop
and
retf
xchg
fadd
or
dec
call
lea
cmp
in
or
fild
sbb
jbe
sbb
mov
inc
xor
cdq
inc
div
sar
adc
push
mov
scas
push
int
js
inc
push
ror
ss
movs
jno
nop
fld
mov
test
and
mov
mov
dec
or
jns
sar
outs
xor
popf
cmp
push
push
inc
add
sbb
dec
cmp
popa
(bad)
push
push
cld
jne
mov
and
cmps
pop
jo
push
imul
pop
movs
push
les
add
pusha
ins
dec
int
loopne
lock
je
push
inc
jmp
cdq
je
sub
das
xor
or
push
xor
mov
test
js
pop
rcl
push
pop
mov
int3
stc
pop
retf
dec
dec
inc
repnz
enter
fidiv
push
jne
jae
pop
push
sub
push
ins
jecxz
jbe
and
lea
mov
xchg
mov
mov
dec
or
hlt
jmp
mov
adc
cmp
movs
xchg
movs
push
inc
push
push
push
push
mov
or
les
rol
jns
fwait
jmp
pop
pusha
in
mov
in
add
pop
mov
inc
cmp
add
sub
(bad)
mov
icebp
or
jmp
cmp
xor
push
in
fild
add
add
or
inc
(bad)
inc
or
pop
mov
add
fwait
push
fiadd
push
call
xchg
push
or
inc
jmp
lahf
mov
and
inc
xor
xchg
add
test
push
pop
or
loope
push
cmp
(bad)
enter
lahf
adc
inc
add
test
jmp
loop
xchg
mov
push
push
cmp
push
loop
push
jne
sbb
fs
(bad)
lds
rol
xor
adc
jo
cmps
ins
sub
push
mov
add
pop
frstor
pop
(bad)
sbb
push
cs
xchg
scas
aaa
xor
xor
push
cmp
inc
mov
aaa
and
xlat
pop
enter
push
dec
and
inc
jecxz
mov
lods
ret
popf
clc
repnz
add
push
jnp
push
sbb
mov
push
pop
sub
stos
dec
mov
icebp
sub
inc
jne
jg
pop
jno
loopne
(bad)
pop
inc
xchg
out
loop
mov
push
add
cmps
and
or
pop
cmp
jmp
pop
int
pop
mov
test
in
mov
fmul
xchg
test
jle
dec
add
faddp
sbb
or
nop
clc
cmp
mul
add
test
mov
jo
out
jecxz
xor
test
daa
fxch
add
add
and
sub
les
xchg
aam
xchg
pop
xchg
inc
inc
xchg
add
pop
lods
dec
pusha
xor
or
sbb
add
jmp
or
sbb
pusha
jno
js
add
sub
or
loopne
mov
or
cld
dec
sub
mov
imul
push
or
xchg
xchg
dec
add
je
(bad)
cli
xor
jns
xchg
addr16
je
adc
jbe
sbb
push
jns
pusha
jl
dec
or
mov
mov
xor
mov
out
not
or
sub
fist
add
stos
push
jne
mov
dec
jmp
movs
pop
cmp
pop
(bad)
loopne
add
jmp
popa
imul
add
jmp
mov
adc
mov
test
dec
fnstsw
loop
outs
xor
out
cld
jne
cmp
xor
hlt
sbb
mov
or
push
and
sbb
fbld
jge
inc
inc
aaa
jg
xlat
aad
push
xlat
jg
push
pop
adc
pop
mov
loope
sar
sbb
lock
or
pop
add
inc
inc
das
ss
sub
mov
loope
mov
cmp
dec
xor
push
fidivr
jl
dec
pop
sbb
push
(bad)
push
mov
movs
adc
or
test
inc
or
mov
add
(bad)
aam
xchg
shl
movs
push
nop
push
push
cmp
xchg
mov
or
and
shr
imul
add
sbb
pop
sub
(bad)
fbstp
add
rcr
sub
and
or
add
cmp
ja
shr
push
imul
xor
pop
fadd
add
mov
push
imul
mov
lea
cmps
mov
and
call
and
pop
xor
into
shl
xchg
inc
sbb
pop
add
adc
clc
cdq
cmc
ins
test
sub
sbb
inc
ins
and
adc
fistp
inc
xor
jle
dec
mov
in
je
and
or
aad
pop
cmps
and
xchg
dec
cld
cmp
add
pop
fdiv
and
push
and
fs
dec
mov
and
leave
inc
and
jecxz
and
inc
adc
fst
sub
aam
dec
pop
outs
and
cmps
mov
mov
lods
mov
and
sbb
or
mov
mov
retf
cmp
mov
imul
pop
test
pushf
imul
fcmove
push
movs
and
lahf
mov
or
jno
jae
add
xchg
jmp
mov
mov
fisttp
sar
cld
xchg
inc
leave
xchg
loope
add
and
ror
jl
lods
mov
lahf
loopne
or
or
and
ror
not
xor
push
push
inc
jmp
das
mov
and
and
movs
add
enter
push
mov
sub
mov
cmp
mov
mov
sub
pop
jnp
icebp
xor
bound
stos
loopne
add
or
daa
sbb
in
add
adc
dec
and
sbb
xor
pop
in
or
pop
or
push
and
test
iret
and
push
call
push
mov
push
das
push
and
popa
or
adc
aam
stc
pushf
mov
cmps
sub
fs
or
push
inc
and
push
jg
xor
cdq
fwait
mov
add
movs
lds
(bad)
adc
xchg
xor
mov
sbb
paddw
dec
inc
dec
pop
cli
and
arpl
jno
inc
add
jne
jle
lods
fwait
jne
imul
pop
push
inc
aaa
jmp
fnsave
inc
inc
xor
cmp
pop
xor
mov
pop
and
or
mov
or
sbb
mov
sub
mov
and
pop
enter
stos
sub
push
loopne
xor
test
add
daa
xor
sub
jmp
sub
xchg
loopne
inc
aaa
or
pusha
xor
jbe
or
mov
bound
pop
idiv
mov
or
xchg
fild
jne
sbb
xor
push
es
xchg
dec
mov
out
jecxz
mov
add
cli
or
jmp
jg
lods
les
ficom
pop
xchg
push
xor
mov
sbb
or
xor
sbb
call
sub
je
sub
dec
xchg
or
push
mov
inc
repz
sar
lods
arpl
popf
loope
div
push
or
or
add
ja
jmp
bound
push
cmp
or
cmp
or
sub
add
pop
push
call
and
sub
clc
add
dec
and
mov
jo
loope
pop
loop
inc
add
ret
inc
xchg
adc
and
ret
and
sbb
js
cmps
mov
add
mov
jg
movzx
loope
mov
jecxz
inc
or
adc
popf
xchg
pop
add
dec
mov
fist
nop
inc
into
mov
or
mov
or
aas
sbb
dec
fdiv
xor
mov
sbb
add
pop
push
inc
push
mov
retf
push
sbb
cmp
adc
sbb
xor
arpl
mov
push
push
push
in
or
sub
sub
loopne
fsub
pop
fwait
or
stos
test
and
bound
or
add
lahf
pop
or
pusha
push
mov
ret
adc
cmps
sbb
push
lods
rol
ins
push
pop
scas
in
or
in
xchg
out
(bad)
adc
loope
mov
ret
adc
inc
mov
add
pusha
frstor
lock
pop
imul
add
shr
fnstsw
mov
pop
ror
xchg
cmp
adc
adc
ftst
or
or
or
cmp
inc
mov
xor
in
cmp
call
adc
test
adc
lods
xor
lods
inc
cmp
add
cmp
or
sar
mov
test
inc
ret
adc
pop
loope
xchg
inc
mov
and
stc
das
sub
xchg
push
adc
xor
dec
push
das
adc
std
mov
hlt
pop
pushf
xchg
xor
ja
movs
xor
push
inc
mov
add
dec
sbb
pop
dec
cmps
add
je
sar
push
fsubr
dec
(bad)
in
pusha
push
jno
mov
ret
mov
xchg
lods
fist
add
xor
jle
sub
(bad)
and
adc
(bad)
inc
(bad)
in
add
cmp
inc
inc
test
jne
loop
icebp
xchg
xor
and
sbb
sub
jb
jno
in
and
or
jb
xor
nop
call
sbb
xchg
add
shl
add
or
jnp
sbb
mov
es
mov
xor
pop
imul
cmps
add
xor
sub
js
or
jp
mov
jmp
or
xor
or
popa
push
add
adc
popf
or
jnp
arpl
mov
inc
xchg
sub
lods
and
dec
mov
daa
sbb
and
add
mov
icebp
dec
fsubr
nop
cmc
dec
jmp
xor
pop
fsubr
(bad)
or
mov
movs
hlt
push
push
fdivr
popa
loop
arpl
in
add
les
pusha
and
(bad)
nop
rcr
je
push
xchg
cmps
ret
imul
or
call
test
xor
sbb
xchg
mov
test
push
sub
and
test
and
add
arpl
xor
inc
scas
jecxz
add
mov
cmc
ins
lods
fbstp
adc
or
loopne
rol
add
sbb
jo
sub
or
out
or
inc
add
xor
movs
fistp
adc
adc
clc
mov
cmp
push
cld
frstor
add
adc
sbb
push
cld
jne
sbb
clc
dec
pop
add
fdiv
jne
sbb
dec
mov
outs
fs
xchg
or
imul
cld
pop
jns
inc
jmp
mov
ror
mov
pop
jne
sbb
xor
dec
cmp
push
or
mov
mov
or
std
xor
scas
dec
(bad)
xor
add
push
fs
aaa
sti
push
hlt
je
mov
in
mov
es
lock
scas
jne
sub
xchg
sbb
ret
iret
jae
push
mov
mov
dec
clc
gs
adc
push
lock
(bad)
scas
pop
or
sbb
or
cmp
and
sbb
inc
test
mov
test
icebp
lods
aas
adc
sbb
xchg
add
lock
pushf
pop
retf
and
retf
lock
aam
or
ins
lea
nop
out
jle
jmp
je
fisttp
or
mov
ins
sbb
inc
fucom
push
inc
add
add
sbb
mov
add
inc
call
and
push
or
in
cmp
and
mov
test
(bad)
hlt
sti
xchg
push
fs
dec
rcr
and
or
icebp
gs
dec
clc
cmp
inc
mov
cs
cmp
loopne
test
push
mov
push
repnz
jbe
mov
add
lea
pop
adc
or
or
lock
sub
das
or
and
add
mov
or
pop
pusha
mov
mov
jmp
xchg
out
add
xor
jl
stc
push
test
mov
clc
or
adc
movs
sub
jb
xlat
das
or
add
xchg
mov
inc
mov
mov
ins
stos
lahf
mov
or
push
sub
pusha
lds
fld
push
mov
sub
mov
push
or
cmps
or
lahf
add
xchg
fbld
sub
pand
movs
hlt
push
and
push
add
pop
and
cmps
inc
and
cs
rcr
cmp
stc
dec
sbb
addr16
jmp
lods
or
xor
add
std
into
push
mov
inc
add
push
outs
fadd
xor
ffreep
cmp
nop
pushf
jmp
sar
popa
dec
xchg
inc
adc
and
aas
rcr
test
push
or
add
clc
inc
fs
imul
call
xor
adc
pop
rcl
push
pop
dec
addr16
add
add
add
sbb
pop
dec
and
hlt
pop
xchg
outs
add
dec
in
arpl
add
(bad)
add
push
inc
sub
cmp
mov
outs
push
pop
sub
add
aam
sar
add
xchg
add
sbb
xor
dec
ret
pop
inc
xor
mov
jnp
pop
jo
scas
out
popa
add
adc
push
mov
inc
outs
or
mov
push
add
fsub
nop
mov
shl
sbb
addr16
inc
idiv
inc
cmp
inc
sub
add
imul
xchg
fsub
and
and
push
cmp
fadd
xlat
mov
ins
jnp
sub
inc
jg
outs
push
cmp
inc
or
mov
popa
add
dec
sbb
movs
mov
pusha
inc
cmp
push
ja
jae
mov
jne
or
xor
shl
aaa
nop
test
jo
mov
push
dec
push
adc
inc
add
or
push
(bad)
xor
hlt
push
mov
(bad)
outs
mov
jne
or
aaa
jg
inc
add
lock
outs
add
xchg
push
add
xchg
xchg
(bad)
adc
add
dec
mov
mov
dec
(bad)
aad
mov
xchg
jo
add
xor
in
pop
call
adc
pop
add
ror
adc
and
mov
dec
mov
mov
outs
mov
sbb
hlt
popf
rol
pop
xor
add
adc
and
and
pop
push
jp
sbb
icebp
mov
push
call
and
enter
push
jmp
mov
test
and
out
and
push
imul
nop
sub
xchg
dec
test
cs
push
call
mov
cmp
mov
adc
sbb
sbb
dec
in
push
lahf
push
stos
inc
(bad)
stos
sbb
jge
ret
popa
inc
lahf
outs
mov
sbb
inc
push
push
cmp
or
jno
ins
sbb
es
push
scas
xchg
ret
mov
mov
mov
loop
sub
inc
push
or
fild
fs
mov
or
xor
fild
cmp
loopne
loopne
push
lods
lock
sbb
sbb
loopne
loopne
loopne
and
cmovs
or
mov
dec
adc
or
loopne
jnp
dec
inc
adc
test
fwait
lock
mov
fwait
aas
inc
call
xchg
or
pop
pop
xchg
lea
movs
xchg
and
imul
xchg
ins
xor
xchg
and
xchg
push
int3
mov
shl
or
cmps
sbb
loopne
cmp
rcl
push
movs
add
add
pusha
mov
push
cdq
dec
jle
mov
mov
add
ret
cmp
jbe
jmp
sbb
jns
lock
mov
loope
add
sub
dec
pusha
dec
popa
xor
xadd
icebp
cmp
push
fwait
inc
push
fwait
rcr
adc
mov
inc
lock
loop
adc
loop
add
inc
pop
popf
rol
add
sbb
icebp
adc
repnz
fbstp
inc
cmps
jl
adc
inc
scas
mov
xchg
pop
and
add
loop
mov
lahf
test
mov
stos
fistp
or
fadd
sbb
repnz
push
leave
mov
adc
retf
ror
mov
mov
cmc
push
inc
or
adc
nop
inc
push
xor
test
xchg
inc
push
and
in
push
or
push
jb
adc
aas
sub
dec
enter
ds
push
mov
jmp
or
inc
in
add
add
add
push
jo
mov
or
movs
imul
xor
arpl
add
clc
push
arpl
jns
nop
pop
push
add
cmp
cmc
inc
clc
add
xor
stos
rol
lock
data16
mov
inc
sub
lahf
nop
push
and
or
inc
jbe
add
adc
daa
in
pushf
adc
push
icebp
adc
mov
push
mov
push
sbb
repnz
or
test
inc
dec
sbb
pop
or
js
and
nop
mov
mov
push
mov
jb
add
push
mov
or
dec
push
mov
mov
or
sbb
lods
popa
(bad)
mov
(bad)
xor
or
xchg
xchg
mov
add
push
pushf
jmp
clc
or
dec
push
mov
nop
jge
fnstcw
test
scas
sbb
pusha
push
in
add
loope
(bad)
shr
and
sbb
pop
sbb
bound
popa
xchg
dec
or
lods
imul
mov
jg
push
push
call
xor
sbb
loope
or
jmp
add
xchg
sbb
in
sub
sub
ds
xchg
aas
inc
jge
or
and
aas
test
mov
lock
aam
add
add
aam
adc
sub
cmp
add
pop
stos
inc
cs
call
pop
stos
pop
stos
dec
cmp
or
add
inc
hlt
hlt
hlt
push
jl
sbb
aas
cld
jne
and
call
enter
dec
leave
aad
cld
aas
clc
push
lods
rol
aas
add
test
xchg
ss
(bad)
ins
pusha
inc
or
sbb
or
imul
adc
lahf
sub
add
inc
sbb
mov
add
push
push
mov
jmp
jmp
and
or
and
in
pmulhuw
hlt
lea
hlt
and
and
add
aas
pop
or
and
scas
aam
aas
pop
cmp
popa
mov
popa
mov
aas
pop
jge
mov
mov
pop
inc
fiadd
push
aas
pop
mov
jg
push
adc
ins
mov
mov
bound
int3
add
and
mov
mov
mov
push
sbb
add
push
add
pop
push
test
inc
add
push
pop
fs
add
add
rol
push
imul
mov
fwait
cwde
ficomp
jne
or
leave
mov
popa
loope
ss
add
in
hlt
add
push
inc
push
xchg
call
pop
xor
ror
clc
scas
jb
inc
inc
jecxz
sti
add
(bad)
stos
mov
push
mov
fldenv
inc
or
std
add
movs
int3
or
mov
mov
je
xor
fs
test
mov
popa
ins
or
xchg
leave
adc
aas
in
in
in
mov
in
in
in
mov
jp
ret
mov
cld
cmc
test
push
pop
or
mov
pop
je
add
cmp
inc
add
mov
inc
push
gs
xchg
sub
call
push
or
and
rol
dec
pop
mov
jne
xchg
sub
add
fisttp
data16
test
dec
(bad)
dec
(bad)
and
sbb
pushf
arpl
mov
adc
jecxz
scas
pop
cmp
xchg
sbb
mov
inc
add
inc
loopne
mov
loop
mov
inc
sub
mov
aaa
lods
mov
js
cs
sbb
idiv
scas
xor
mov
push
gs
sub
or
or
into
mov
fnsave
and
test
dec
sbb
(bad)
sbb
add
adc
or
add
mov
(bad)
mov
test
add
inc
arpl
or
gs
xchg
add
or
clc
add
adc
loop
fild
aas
or
xor
or
hlt
cs
ja
hlt
sub
or
or
mov
(bad)
cmc
sub
sbb
adc
movs
test
ret
push
fistp
jg
ins
test
sar
icebp
imul
sbb
mov
or
adc
add
ror
ins
dec
call
adc
test
pusha
add
mov
rcl
adc
jbe
scas
and
inc
dec
push
dec
sti
retf
inc
xor
and
icebp
test
and
jne
das
push
mov
mov
sbb
and
add
adc
gs
or
sub
sar
gs
cmps
ja
inc
adc
adc
pusha
and
fisttp
or
inc
jmp
sbb
dec
call
test
dec
add
add
add
imul
and
sub
jmp
pushf
adc
mov
push
and
(bad)
push
(bad)
call
fidiv
sbb
mov
xor
jg
in
mov
lods
and
and
outs
pop
lods
add
pop
lods
lods
and
dec
lods
lods
xchg
pop
jb
call
sub
lods
lods
jo
mov
cmps
mov
adc
pop
jmp
cdq
dec
cmp
les
dec
aaa
dec
or
cmp
adc
leave
fsubr
sub
inc
call
dec
movs
push
lods
mov
jne
outs
fadd
push
pop
into
pop
and
movd
shl
(bad)
cmps
lds
add
fild
test
sub
xchg
aas
jg
add
test
scas
test
inc
and
or
fnstenv
adc
and
jg
adc
loop
mov
dec
or
test
and
test
sbb
cmp
adc
popa
add
in
test
push
mov
aaa
(bad)
fnsave
push
dec
push
jbe
in
jge
xor
loopne
stos
sbb
ret
out
sbb
jne
add
sbb
rcl
shr
inc
cmc
nop
push
sub
or
sbb
imul
xor
or
mov
mov
inc
arpl
and
push
mov
fbld
jb
push
inc
adc
jns
sbb
mov
test
xor
ins
aas
push
and
ins
dec
mov
(bad)
(bad)
fist
pop
call
sbb
iret
repnz
repnz
sbb
dec
xchg
pop
dec
push
and
push
pusha
or
js
cmp
xor
inc
lods
(bad)
fidivr
sub
out
dec
xchg
fild
mov
push
je
add
shr
add
ret
cld
sbb
inc
clc
lods
sub
sub
jae
sbb
cmp
jmp
int
and
xchg
(bad)
imul
push
leave
lock
adc
dec
push
cmp
test
jb
add
les
add
adc
test
jle
call
dec
jg
and
call
sbb
call
dec
xchg
sub
call
leave
call
nop
xor
or
push
add
sub
sti
xor
sar
sbb
push
mov
lahf
jp
fst
xor
adc
adc
aas
mov
add
lahf
add
test
dec
sub
imul
xchg
pop
cmp
sahf
rcl
adc
jmp
mov
or
popw
push
dec
adc
jns
jge
pop
jmp
add
pushf
aas
cld
je
push
inc
in
daa
or
inc
mov
hlt
jmp
mov
cmp
add
pop
jne
add
xchg
jecxz
lahf
les
dec
loop
adc
or
daa
push
fwait
loop
sbb
inc
push
jl
sub
sbb
add
das
test
adc
add
jne
or
pop
mov
add
jno
mov
inc
adc
sahf
scas
jg
or
mov
jg
cmp
test
loop
fwait
add
adc
mov
dec
test
push
inc
adc
sub
xor
mov
lock
xor
aas
and
cmp
dec
dec
sbb
or
push
fisttp
cld
shr
stos
jmp
loopne
or
inc
dec
loope
je
adc
je
inc
or
adc
cmp
push
stc
sub
pusha
sub
mov
mov
or
ror
push
and
cmp
and
inc
xchg
je
xor
jge
in
sub
pop
in
push
(bad)
std
ins
add
repz
test
mov
mov
push
mov
or
jns
adc
test
push
mov
or
stos
aas
lahf
mov
xor
sub
xchg
lea
nop
xchg
pop
jb
lods
jo
and
add
nop
or
fs
nop
sub
or
cmc
or
mov
rol
mov
or
push
shr
mov
xchg
fild
mov
adc
and
push
dec
int3
int3
dec
push
sbb
inc
pop
enter
sub
fild
(bad)
mov
inc
fucomip
xor
dec
fdivr
pop
call
mov
jl
inc
jge
sbb
outs
inc
fdivr
in
and
jl
or
pop
out
sub
rol
sbb
fsub
adc
shl
jecxz
jge
mov
popa
inc
lock
pushf
(bad)
mov
dec
in
fcom
pop
jnp
sbb
add
adc
test
rcr
aas
in
data16
lahf
dec
adc
add
int
sub
or
add
pop
add
pop
xor
fcomip
adc
cmp
fild
lock
xor
pop
jns
or
mov
xor
push
or
(bad)
dec
aad
add
mov
(bad)
ret
aas
mov
(bad)
lea
jo
push
inc
inc
push
xor
xchg
(bad)
fnstcw
test
bound
or
movs
sbb
mov
fs
jp
inc
inc
jmp
mov
push
adc
inc
push
shr
ror
or
aam
icebp
popa
add
adc
pop
shl
xor
mov
fld
test
cmp
adc
adc
lea
(bad)
xlat
push
arpl
movs
ins
jge
fild
mov
or
jg
daa
sub
dec
mov
sub
mov
xchg
pop
xchg
xchg
add
xchg
dec
or
hlt
mov
adc
(bad)
pop
dec
adc
mov
sbb
cmp
aas
add
(bad)
in
daa
call
and
or
js
pop
mov
mov
and
mov
or
les
(bad)
mov
and
(bad)
in
push
adc
lods
adc
inc
imul
mov
xor
mov
sbb
(bad)
fidivr
or
and
jne
lds
push
and
cmp
sub
shr
lods
(bad)
repnz
and
test
cmp
int
ins
(bad)
mov
hlt
jnp
sbb
rol
xor
mov
adc
mov
inc
ins
push
hlt
push
mov
in
mov
sar
push
aas
sub
cli
or
or
dec
imul
in
sub
pop
cdq
loopne
or
or
jge
mov
stos
aas
aas
sbb
and
or
leave
test
imul
loopne
inc
cld
jbe
push
lock
mov
adc
sbb
(bad)
dec
(bad)
sti
in
sbb
add
sbb
fwait
les
rcr
fucomip
mov
pusha
ins
push
push
icebp
out
movzx
cmp
mov
shl
ret
aad
pop
adc
add
add
or
gs
sub
ret
inc
pshufw
jo
test
adc
enter
pusha
or
sti
push
push
mov
or
call
and
xor
jae
adc
xchg
movs
fiadd
fnstsw
das
imul
cmp
loopne
inc
inc
mov
add
push
lods
and
rol
cmp
jbe
cmp
add
lea
sbb
and
adc
mov
push
xor
out
les
xor
jo
lahf
mov
ret
jo
fwait
pop
data16
or
and
adc
ins
dec
lea
and
push
cdq
daa
adc
add
jne
jmp
mov
jp
mov
ret
add
fwait
call
mov
les
(bad)
sub
inc
mov
pop
jnp
popf
adc
call
fs
jb
jmp
mov
xchg
mov
add
dec
mov
inc
or
inc
mov
cmp
xor
add
mov
pop
rol
and
dec
jle
js
push
pop
loopne
or
in
and
or
imul
inc
cwde
(bad)
sub
nop
rcr
rcl
jle
add
jnp
sbb
sbb
test
adc
xchg
aaa
push
test
adc
jp
movs
mov
fcomi
rol
and
jmp
inc
sub
lea
mov
(bad)
int3
cmps
hlt
fprem
arpl
popf
add
int
ss
sahf
test
lock
adc
pushf
add
aam
push
sbb
mov
sub
cld
push
jns
push
aas
or
jmp
xchg
xor
cwde
vcvttss2si
xlat
addr16
aam
dec
add
jno
adc
rcr
(bad)
push
dec
in
icebp
int
int3
lahf
sub
rcr
add
ins
mov
sbb
mov
dec
jmp
pop
xchg
movs
imul
sub
or
popa
add
popa
add
dec
dec
or
adc
cdq
das
jl
test
sbb
push
mov
es
icebp
and
mov
mov
mov
mov
aas
or
ss
inc
mov
push
(bad)
outs
out
test
mov
pop
call
push
mov
lods
aas
lods
mov
mov
repz
mov
add
adc
movs
lea
sbb
add
lock
repz
and
mov
aad
fld
inc
inc
dec
sbb
test
in
sub
iret
pushf
ss
and
ret
cwde
icebp
inc
add
js
jo
sbb
mov
add
in
xor
popa
imul
mov
xchg
out
pop
push
stos
cmp
or
dec
add
nop
mov
push
adc
lds
retf
push
add
(bad)
cli
aaa
pop
fwait
pop
xchg
inc
mov
add
mov
adc
dec
sbb
push
inc
sbb
or
xchg
jl
dec
or
mov
add
test
ret
popf
inc
jb
and
(bad)
movs
push
jbe
movs
dec
inc
and
or
push
jo
push
(bad)
addr16
test
cli
mov
mov
add
cmp
lea
sar
sbb
dec
movs
movs
jmp
idiv
sub
inc
aad
add
les
lods
mov
and
add
or
aaa
jmp
xor
sub
adc
sbb
mov
xor
xchg
in
sub
or
xchg
outs
dec
div
xchg
les
rcr
and
retf
dec
mov
cmp
ins
ja
push
shl
daa
adc
sub
sub
push
pusha
call
inc
loope
aas
(bad)
sbb
pop
inc
xchg
cmp
mov
adc
rol
loopne
push
and
imul
push
add
dec
lahf
inc
ins
(bad)
rol
fbld
imul
mov
sbb
(bad)
or
inc
fild
cmp
cmp
or
sub
mov
and
cmps
mov
or
popa
sbb
jle
and
les
xchg
add
call
xchg
mov
fsubr
iret
push
and
sub
and
mov
inc
mov
in
cmp
adc
add
aas
je
test
push
lods
hlt
cmps
push
lahf
jnp
ss
sub
out
xor
cmps
push
add
mov
or
mov
movaps
sbb
xchg
mov
nop
add
cmp
inc
jecxz
mov
mov
add
or
add
jmp
es
inc
out
adc
movs
mov
adc
ds
cld
jmp
int
mov
pusha
call
and
push
mov
imul
sbb
test
sbb
hlt
xor
aas
push
rcl
rcr
stos
add
popa
sbb
(bad)
push
adc
xor
adc
aam
ins
jmp
cmp
adc
push
ret
mov
mov
and
lock
jb
jae
pop
add
pop
ret
nop
inc
jo
hlt
sbb
mov
les
mov
popf
jg
popf
add
mov
and
mov
jmp
add
add
and
push
dec
push
enter
sti
or
jbe
rcr
xor
loope
out
xchg
adc
mov
adc
adc
ins
sbb
dec
adc
dec
push
dec
sbb
pop
sbb
mov
adc
or
imul
xor
shr
mov
fnstsw
dec
add
jmp
add
push
mov
mov
out
sub
jbe
and
push
sub
mov
sar
das
cmp
movs
dec
movs
ss
push
mov
jmp
les
data16
push
sbb
sub
mov
aas
adc
push
es
clc
sbb
clc
nop
or
inc
sbb
sti
shl
bound
and
add
and
add
cdq
hlt
in
leave
sub
xchg
mov
push
push
(bad)
or
pop
lock
or
cmp
adc
and
mov
lods
movs
das
adc
jg
pop
jbe
mov
dec
and
xor
add
imul
sub
mov
jg
add
mov
jno
add
jmp
add
inc
rol
add
add
in
aas
push
shr
call
sar
popa
or
or
add
or
(bad)
shl
or
movs
add
cmp
pop
lods
pop
into
es
and
int
ins
inc
inc
sbb
and
adc
adc
inc
shr
sub
mov
lock
add
shr
pop
adc
rcr
in
push
adc
ins
pop
inc
inc
(bad)
rol
and
sub
test
jecxz
stos
add
add
clc
pushf
mov
shl
or
(bad)
adc
movs
and
mov
bound
cld
daa
dec
retf
push
arpl
mov
adc
cdq
push
fs
mov
rol
outs
mov
adc
cmps
mov
retf
popa
push
addr16
ror
adc
jne
es
mov
popa
and
cmp
cmp
xchg
js
sub
mov
dec
or
or
and
xor
lds
xchg
outs
xor
jae
sbb
or
leave
adc
dec
cmp
and
test
hlt
and
sbb
enter
pop
or
fs
cmc
movs
xor
pop
test
push
add
ins
pusha
adc
and
inc
pushf
adc
add
sbb
mov
push
les
sub
mov
test
mov
pop
pop
inc
cmps
push
push
lods
jmp
sahf
pop
ins
mov
in
sbb
fadd
enter
retf
adc
aas
sbb
frstor
sbb
frstor
cmp
sbb
pusha
mov
(bad)
inc
mov
(bad)
mov
and
mov
sbb
retf
call
push
test
mov
dec
push
inc
sub
imul
add
pop
lods
inc
dec
out
sbb
bound
and
inc
cld
fist
sub
adc
add
or
ins
dec
push
shl
inc
or
jg
mov
push
inc
xchg
arpl
sbb
xor
or
inc
dec
movs
sti
dec
stos
aam
sti
push
xchg
scas
jne
ins
add
iret
sti
es
or
ss
sub
fwait
inc
bound
push
push
cs
push
push
push
push
pop
push
and
jle
xor
pop
add
loopne
add
xchg
es
push
xchg
sub
dec
aam
or
xor
adc
add
xchg
shr
clc
pop
and
sbb
dec
jo
aam
loopne
adc
cmp
shl
push
adc
xchg
rol
inc
cmp
xor
mov
jecxz
adc
jg
adc
mov
push
call
loope
or
fs
sub
dec
add
cmps
into
lds
add
rol
adc
push
pusha
jno
inc
pop
rcr
inc
mov
loop
add
popa
imul
jb
shr
push
leave
xor
pop
and
and
and
lea
dec
adc
mov
or
mov
rcr
call
add
xchg
outs
pop
xadd
lds
or
inc
icebp
sahf
jl
mov
cmps
mov
scas
test
jg
xor
add
out
jae
mov
dec
dec
inc
les
out
and
clc
js
inc
jp
jae
push
and
sbb
pop
dec
push
movs
imul
fild
inc
xor
sbb
mov
inc
cmc
cwde
mov
pusha
daa
sar
push
push
push
shr
stos
cmp
or
ret
cmp
fistp
mov
frstor
add
sbb
outs
lods
or
add
cmp
(bad)
xchg
adc
add
inc
inc
sub
leave
add
cdq
add
push
xchg
jge
(bad)
cld
jmp
dec
stos
dec
adc
add
inc
shl
je
dec
xor
cmps
add
xor
sub
ret
fimul
in
xor
xor
(bad)
rol
sbb
les
cld
out
cmps
dec
mov
fistp
adc
mov
xor
fwait
cs
cmp
jne
les
in
in
push
cmp
cmps
(bad)
dec
ret
mov
test
retf
mov
js
test
scas
inc
cmp
sub
(bad)
or
xor
test
xchg
mov
or
icebp
int
inc
je
mov
add
lahf
mov
imul
jo
sub
adc
pop
jo
or
add
add
inc
movs
jg
add
daa
push
std
loopne
in
bound
push
sti
es
or
cmps
sub
arpl
push
or
stos
add
push
dec
fwait
sbb
sar
adc
out
add
cmp
pusha
ret
dec
xor
add
cmp
pop
xchg
xor
cmp
popf
pop
xchg
sbb
xchg
xor
dec
and
inc
inc
clc
push
or
mov
dec
mov
push
add
andps
mov
lds
icebp
gs
icebp
cmc
adc
or
ss
or
les
in
jns
sbb
adc
ja
push
cmps
sbb
test
and
push
cs
push
adc
mov
adc
stc
pop
add
xchg
push
sub
pusha
xchg
sbb
add
push
or
movs
es
jae
xor
addr16
nop
push
sbb
leave
mov
sbb
pop
push
pushf
xor
jo
pop
add
push
cmp
push
inc
add
js
inc
or
dec
enter
push
cld
jge
cmp
ret
aam
bound
in
mov
test
(bad)
rcr
je
lahf
rcr
push
addr16
push
in
dec
push
or
shr
xchg
(bad)
push
inc
sub
xor
jmp
dec
mov
jmp
sub
jo
mov
pop
and
add
mov
fistp
dec
add
(bad)
ret
dec
rcr
(bad)
and
popf
lock
fisttp
add
pop
lock
shr
ins
imul
sub
test
iret
(bad)
ins
sub
inc
mov
inc
jp
lock
nop
cmp
push
mov
daa
mov
inc
js
add
mov
lahf
adc
add
jmp
jmp
mov
jb
mov
jmp
pop
mov
frstor
test
mov
nop
or
xor
add
cld
sbb
sub
ss
retf
sub
and
push
hlt
mov
aas
cmp
adc
push
gs
cli
clc
add
add
xchg
shr
daa
fsubr
aaa
add
add
(bad)
or
cdq
js
fwait
or
in
or
outs
jmp
mov
or
add
aam
pusha
add
movs
jno
inc
aas
adc
adc
jmp
add
mov
xchg
push
mov
xor
fmul
(bad)
cmp
lea
adc
data16
xor
cld
push
sbb
xlat
movs
add
jg
loope
adc
mov
push
fwait
or
and
nop
call
dec
dec
fnstsw
mov
lods
jo
mov
push
push
inc
gs
add
jmp
sub
jg
push
sbb
fwait
retf
or
jo
enter
sbb
or
pop
lahf
xor
mov
sub
or
cdq
clc
ret
adc
pop
and
cs
ret
test
jg
mov
fisttp
push
adc
xor
pop
retf
je
inc
and
retf
cmp
sub
pop
xchg
sbb
push
xchg
mov
pop
push
adc
rol
mov
pop
shl
and
adc
fistp
or
add
add
(bad)
cmp
test
xor
and
lahf
sub
add
mov
sti
sbb
pusha
or
nop
sahf
cmp
sahf
dec
push
daa
or
xchg
add
adc
xchg
clc
sub
inc
mov
in
shr
test
call
out
xchg
push
popf
xor
xor
cmps
test
or
push
(bad)
in
add
pop
retf
adc
aas
dec
mov
add
mov
dec
or
mov
push
push
xchg
cmp
iret
enter
cmp
push
xor
cmp
movs
lock
adc
movs
mov
retf
add
xor
add
arpl
push
mov
aam
loope
stc
mov
or
and
or
lods
test
xor
add
push
dec
imul
daa
test
add
repz
sbb
les
inc
xor
cmps
mov
adc
idiv
push
call
cmp
adc
rcl
sub
leave
mov
xchg
mov
xor
add
xchg
out
stc
mov
call
(bad)
push
mov
lea
inc
arpl
add
sbb
test
inc
arpl
add
or
xor
adc
sub
add
pop
push
push
and
or
int3
and
adc
das
inc
adc
mov
js
ins
inc
and
push
hlt
push
rol
imul
ds
test
mov
push
jbe
sbb
imul
add
jmp
or
lds
xchg
and
cmps
test
push
push
loop
jne
adc
push
loope
icebp
xor
sbb
ficom
xor
ret
xchg
adc
shr
test
and
je
mov
xchg
bound
add
(bad)
xchg
clc
sbb
or
mov
ins
or
and
js
loopne
fidivr
pop
rcl
or
repnz
icebp
xchg
push
push
dec
ret
push
xchg
fadd
in
add
ins
popa
sbb
add
shl
pushf
xor
pushf
fld
jnp
cmp
push
sbb
pusha
daa
inc
push
lds
and
fwait
rol
(bad)
loopne
je
mov
fwait
sbb
loopne
fwait
je
stos
or
enter
pop
imul
cmp
test
add
popa
dec
loope
push
mov
daa
test
imul
and
mov
sbb
sub
lods
jmp
or
mul
test
(bad)
lods
jge
inc
loope
fild
xor
pop
test
inc
ss
or
(bad)
jp
ror
movs
int3
icebp
mov
mov
lds
pushf
mov
in
or
xor
arpl
imul
jge
inc
scas
add
push
shr
sub
or
pop
test
push
xor
mov
pusha
dec
xchg
mov
(bad)
je
adc
inc
cmps
jno
js
(bad)
or
cwde
outs
imul
push
in
scas
sub
dec
cwde
in
movs
test
sub
xchg
push
cld
sbb
pop
sbb
jmp
stc
scas
fstp
xor
in
call
add
imul
ins
mov
ret
sub
lea
enter
inc
dec
fcom
dec
sbb
leave
sar
xchg
dec
pop
or
ins
gs
push
es
and
inc
gs
ins
dec
add
sub
in
mov
push
adc
loopne
pop
icebp
dec
inc
and
dec
push
pslld
add
mov
cwde
mov
(bad)
and
adc
sub
sbb
movs
nop
aam
or
cmp
push
mov
xchg
mov
lahf
xor
mov
shl
dec
idiv
(bad)
sub
lock
test
add
fist
inc
mov
ret
adc
fistp
adc
push
add
aas
shl
dec
cwde
sub
sbb
fcmovnb
xlat
dec
lds
retf
pushf
(bad)
int
adc
popa
adc
xchg
in
lahf
pop
and
lahf
ror
cs
je
xchg
pop
and
rcl
adc
dec
fild
cwde
hlt
rol
jb
pusha
fimul
in
add
and
inc
pusha
and
or
cmp
adc
mov
or
adc
mov
bound
inc
cmp
pop
mov
sbb
retf
cmp
xlat
dec
or
push
ja
popa
repz
jb
push
sbb
leave
popa
xor
leave
and
xor
cmc
sbb
mov
dec
das
call
jmp
push
and
jnp
ficomp
fdivr
sub
aas
cdq
test
add
aas
cmp
mov
pop
and
jb
lods
add
pop
jg
adc
add
lahf
sub
push
sub
inc
push
dec
xchg
movs
add
push
xor
ret
test
add
aaa
add
jmp
aas
adc
push
add
popa
sub
add
jb
or
sbb
jo
lahf
push
push
fdiv
fild
cld
test
sbb
stos
into
jmp
mov
fbld
sub
mov
ins
jno
inc
fild
sbb
mov
push
cmp
or
pop
or
and
add
sbb
repz
add
push
or
rcl
sbb
aas
pop
jno
add
or
sbb
pop
inc
mov
and
add
mov
dec
mov
mov
aaa
or
js
add
nop
jne
add
jae
dec
and
xor
test
jno
or
adc
jmp
push
adc
mov
add
mov
inc
dec
in
test
mov
adc
shr
pop
arpl
mov
xor
(bad)
mov
or
test
jae
and
sbb
pop
dec
js
(bad)
imul
popa
sbb
enter
dec
sar
sbb
mov
xchg
xchg
mov
dec
enter
adc
icebp
sub
sbb
or
fld
(bad)
mov
ret
inc
dec
sbb
inc
je
push
dec
pop
fild
or
sbb
xchg
mov
(bad)
inc
bound
add
aam
push
(bad)
out
inc
jae
add
sar
cld
lods
and
pop
cmps
cmp
daa
jno
fistp
arpl
ins
dec
(bad)
lea
adc
(bad)
dec
or
xchg
mov
inc
and
dec
jg
pop
xlat
movs
mov
ret
ins
cmp
push
jo
dec
rcr
jg
push
les
or
xchg
add
push
test
loope
ins
imul
push
mov
in
pop
or
pop
xor
add
or
add
jae
inc
bound
lea
sub
cmp
cs
fmul
loopne
leave
(bad)
jmp
scas
(bad)
ins
inc
enter
in
push
inc
test
adc
adc
push
or
das
jmp
test
popf
xchg
xor
inc
and
mov
or
mov
cli
inc
ror
js
test
xchg
ret
gs
cmp
mov
xchg
xor
mov
test
test
add
adc
push
xchg
cmp
sbb
pop
inc
add
and
in
jmp
adc
ss
pop
cmp
and
out
cmps
hlt
gs
pop
sub
mov
cmp
ja
sbb
aas
imul
dec
add
inc
sub
mov
push
adc
test
sbb
std
push
sbb
mov
mov
(bad)
sbb
or
push
jecxz
test
movs
ins
aaa
xchg
inc
xor
add
rcr
adc
movs
lods
lods
inc
jbe
ffreep
jle
test
sbb
inc
clc
mov
pop
or
inc
sub
jb
leave
add
(bad)
retf
xchg
mov
ret
inc
loope
add
jb
or
dec
jmp
cmp
and
cmp
sbb
aas
mov
inc
add
xor
sub
push
sub
daa
or
test
add
inc
fwait
out
add
and
adc
sub
mov
add
push
push
loopne
adc
pop
adc
hlt
bound
sub
loopne
test
daa
adc
mov
repz
loope
fcom
or
sbb
jmp
or
jmp
ja
ret
lea
ins
push
mov
lock
fwait
mov
aam
mov
int
mov
push
dec
add
cmp
add
add
add
leave
les
add
test
add
and
movs
rcl
inc
in
xor
adc
pop
adc
sub
and
and
sub
mov
or
mov
dec
sbb
push
pop
out
movzx
add
jle
mul
mov
mov
mov
ds
jb
in
int
jmp
das
js
das
jle
mov
mov
jmp
dec
test
push
or
test
sbb
mov
inc
sbb
inc
add
movs
and
inc
push
mov
mov
call
outs
fsubr
shr
push
test
add
cmp
dec
adc
xchg
loop
cmp
cld
out
or
mov
test
mov
setno
jo
clc
or
les
push
icebp
mov
enter
or
push
enter
or
sbb
push
adc
push
int3
enter
adc
shl
daa
xchg
sbb
push
es
nop
loopne
adc
leave
cli
sbb
push
or
add
and
jb
add
or
imul
stc
or
add
test
adc
sub
add
xchg
int
dec
mov
xor
fld
cmp
sbb
stc
test
mov
xchg
stos
fnstsw
sbb
retf
inc
and
add
aas
stos
mov
int3
dec
out
adc
push
xchg
mov
dec
or
push
test
mov
sbb
inc
(bad)
inc
les
bound
and
sbb
cs
sbb
sbb
sbb
mov
and
push
jl
sahf
sbb
push
mov
mov
push
jmp
adc
mov
push
(bad)
xchg
jp
jmp
dec
mov
dec
cmp
or
enter
inc
sbb
push
add
sbb
mov
aaa
movs
fdiv
clc
in
jns
mov
push
sahf
cmp
ficomp
stc
cmp
shr
fisubr
push
mov
cs
das
call
jns
jge
xchg
retf
in
mov
jbe
push
mov
xchg
(bad)
sahf
out
lods
(bad)
dec
dec
loope
sahf
in
es
out
int
hlt
out
out
iret
repz
sbb
push
xchg
inc
push
push
bound
pusha
shl
sub
ins
outs
movs
xor
pop
cmp
icebp
jge
add
add
add
sub
add
loop
add
sub
in
jae
xor
test
lahf
test
and
jecxz
push
dec
cs
arpl
rcl
and
xor
mov
jne
sub
or
adc
add
shl
outs
outs
nop
adc
pop
mov
popa
pop
fild
lock
aam
ror
and
dec
adc
sbb
push
nop
fiadd
repz
add
retf
add
sbb
mov
test
xor
mov
push
adc
mov
loope
pop
(bad)
push
xchg
and
popa
dec
push
or
aas
cmp
cdq
(bad)
jmp
jg
minps
and
jno
inc
push
pop
pop
ins
pop
jbe
clc
pop
mov
in
jmp
popf
ror
add
sub
dec
dec
xor
adc
xor
or
cmp
cmp
or
pop
or
mov
pop
push
inc
add
push
inc
repnz
push
aas
imul
and
xor
aas
fs
cmp
loope
rol
rcr
jb
inc
mov
outs
dec
jge
shl
dec
jae
jge
sbb
add
push
lock
dec
test
pusha
mov
js
dec
rcr
js
jae
test
rol
(bad)
and
xchg
sbb
cmp
lock
mov
mov
inc
dec
mov
or
sbb
arpl
jle
loope
inc
clc
pusha
movs
jmp
inc
adc
mov
push
in
push
sbb
fs
(bad)
jg
dec
lock
aad
push
arpl
adc
xchg
out
ins
and
sar
ror
push
scas
jle
dec
lock
pop
add
add
mov
or
sbb
mov
and
pop
and
sbb
jo
xor
pop
mov
test
fldenv
in
add
and
mov
and
sar
sbb
mov
add
and
adc
gs
cmp
jge
outs
or
add
add
and
push
movs
pop
inc
and
ja
movs
push
add
xchg
mov
xchg
mov
movs
xchg
jmp
mov
sub
shr
ss
mov
imul
push
xchg
xchg
mov
iret
nop
mov
loopne
add
aaa
test
xchg
ud2
push
js
jmp
push
jne
fwait
inc
movs
adc
xchg
add
cmps
push
xchg
push
es
inc
xor
mul
xor
or
dec
jg
call
cmp
inc
pusha
dec
movs
cmp
or
js
pusha
pop
fadd
push
dec
test
es
mov
adc
cmp
jl
xor
sbb
movs
jp
fnstenv
mov
imul
jg
test
test
std
aam
mov
shl
rcl
jge
sbb
imul
leave
(bad)
and
sub
pop
xchg
adc
sbb
inc
adc
test
adc
test
mov
sbb
inc
pop
aas
add
pop
sar
inc
inc
add
add
movs
adc
aas
fimul
add
(bad)
clc
adc
inc
cld
pop
jmp
pop
jle
xchg
nop
call
gs
mov
adc
out
add
or
adc
inc
(bad)
mov
xchg
pop
test
xchg
adc
pop
jo
push
sbb
popa
dec
and
loopne
movs
add
sar
fprem
idiv
push
adc
or
inc
ret
dec
pop
mov
pop
xor
adc
mov
fadd
add
mov
jns
add
cmps
cdq
dec
call
cdq
and
add
or
push
add
add
hlt
push
jne
in
sbb
add
outs
sbb
push
out
and
cmp
pop
enter
in
je
push
add
cwde
inc
sbb
inc
sahf
nop
sbb
and
dec
push
xchg
and
push
pop
sbb
sub
xchg
add
cdq
sub
xchg
xchg
push
les
jge
call
mov
or
xor
ins
sbb
nop
sub
jge
inc
sub
sub
ja
push
aas
jb
jne
inc
ret
aam
adc
dec
cmps
das
rol
add
mov
xor
jl
push
dec
add
pop
outs
popf
sub
push
push
mov
test
or
cmp
mov
and
idiv
cmp
push
or
outs
xor
xor
aas
jne
retf
inc
mov
xor
mov
outs
fmul
mov
std
jne
test
fwait
imul
cmc
mov
dec
and
stc
fwait
clc
add
xchg
mov
test
and
adc
je
clc
ja
add
cmp
js
imul
repnz
or
jne
mov
sub
daa
rcr
xor
add
add
adc
xor
ss
popf
xchg
aas
add
and
(bad)
sbb
cmps
jo
push
pop
inc
or
aaa
sub
cmps
mov
imul
or
push
add
sbb
jo
aas
loopne
aas
mov
adc
test
loopne
js
jbe
dec
mov
dec
add
push
xor
cmp
aas
fild
add
pop
adc
jnp
lock
pusha
mov
sbb
xor
les
or
adc
in
arpl
add
adc
pop
in
add
jmp
dec
inc
cli
sub
mov
xor
sti
cwde
and
or
xchg
pop
aas
adc
dec
or
aas
adc
shl
push
and
cmp
dec
add
popa
popf
add
aas
mov
cmps
nop
and
xchg
cmp
cmp
test
sbb
jl
data16
out
xor
pop
push
lock
shr
jmp
and
inc
ret
adc
mov
add
imul
push
pusha
inc
inc
mov
int3
adc
aas
adc
sbb
inc
pop
xor
add
xor
(bad)
push
mov
lods
jmp
sbb
int3
aad
adc
mov
add
cmc
pop
xor
dec
and
dec
xor
add
pop
jo
push
test
push
ins
imul
dec
xchg
jo
sbb
or
push
mov
lods
jbe
and
test
mov
inc
bswap
and
and
fdiv
inc
std
or
push
add
pop
xor
inc
and
sbb
and
mov
cmc
adc
inc
add
sbb
cmp
imul
jb
jmp
cmp
cmp
add
scas
out
push
sub
xor
adc
sub
sub
cmp
inc
lahf
push
jmp
fcomp
mov
and
test
mov
das
sahf
push
mov
out
les
push
mov
adc
shr
loopne
pop
inc
xor
sub
enter
jmp
sub
dec
pop
aaa
pusha
jns
bound
or
sub
mov
pop
test
fild
push
push
popf
xchg
mov
iret
jg
fst
inc
lahf
cmp
int3
xchg
or
pop
and
aas
pop
xchg
sub
aas
popa
mov
and
scas
test
pop
cmp
adc
xor
(bad)
adc
mov
test
addr16
or
xchg
ja
test
dec
test
and
mov
repz
inc
lds
sbb
shr
push
call
pop
test
sub
int3
sub
or
in
mov
jmp
cmc
xchg
mov
adc
pusha
out
cdq
or
cdq
adc
xchg
xchg
shl
pop
sub
iret
pop
jne
dec
xor
test
mov
or
out
or
rol
ret
fadd
jno
pop
inc
push
cmps
loope
or
stos
retf
adc
nop
add
or
loope
xchg
jecxz
ja
xchg
mov
adc
add
ret
push
jg
add
loopne
cmp
sbb
lods
adc
mov
push
mov
in
push
or
in
mov
loopne
or
or
push
sti
fsubr
jns
fmul
nop
or
mov
fnsave
or
mov
xor
inc
gs
jl
pop
dec
cmp
fadd
pop
adc
add
sub
jb
mov
loopne
call
aas
test
dec
mov
push
or
push
pop
ins
ja
jecxz
pop
inc
sbb
ja
push
xor
dec
sub
inc
pop
sub
jle
inc
add
jecxz
jl
xor
test
sub
jns
mov
pop
xor
add
sbb
jb
and
xor
push
lods
inc
(bad)
sahf
aam
push
dec
add
or
mov
and
mov
sub
jl
push
push
push
cli
pop
movs
adc
mov
dec
inc
jl
inc
pop
jg
psubusb
push
jmp
dec
add
xchg
xor
hlt
jnp
mov
jl
inc
mov
pop
add
xchg
mov
inc
mov
mov
adc
pop
ret
jae
inc
dec
je
pusha
cmc
xchg
push
or
jg
aaa
or
add
mov
push
sub
dec
push
ins
clc
in
cmp
enter
add
mov
jo
loope
cmc
jg
jb
std
in
jne
test
in
in
movs
adc
adc
push
fdivr
aas
lahf
fwait
sbb
test
jmp
rol
and
cs
js
in
add
cmp
loopne
dec
mov
inc
mov
mov
adc
adc
mov
xor
sub
xchg
cmp
sub
xor
movs
xchg
and
push
sub
es
popa
fcom
call
add
arpl
(bad)
pushf
xor
push
mov
imul
cld
add
or
les
ror
aam
rcl
or
pusha
rol
add
pop
lea
loopne
push
sbb
pop
dec
xchg
mov
adc
(bad)
std
push
clc
xchg
jmp
adc
xchg
xor
pop
jns
sbb
push
fisttp
add
clc
aas
mov
add
daa
adc
aaa
jae
test
cmp
pusha
cmps
mov
and
cmp
cmp
push
mov
loope
or
xor
fadd
push
jmp
fsub
dec
inc
pop
ja
mov
add
(bad)
ror
mov
push
cmps
sub
xor
push
add
ffreep
add
sbb
xchg
push
mov
or
pop
cmp
adc
movs
rol
sub
daa
add
jmp
xor
dec
mov
test
xchg
pop
add
mov
sub
inc
nop
sub
pop
clc
dec
hlt
popf
cdq
sub
lods
repnz
fld
mov
sbb
add
push
or
inc
cli
leave
add
jecxz
imul
ret
out
test
pop
mov
push
out
sub
test
mov
inc
or
mov
and
add
xchg
sbb
add
push
hlt
and
icebp
gs
hlt
hlt
jmp
adc
mov
int
mov
adc
dec
dec
jbe
shr
shl
or
js
outs
jg
ret
or
or
popf
cmp
popa
and
add
loopne
cwde
add
loopne
and
or
enter
pop
out
add
pop
add
shl
sbb
ins
dec
shr
inc
sti
rol
ret
cld
xor
mov
iret
ins
and
push
mov
and
scas
inc
popa
inc
add
or
push
adc
sub
adc
xchg
pop
or
inc
retf
gs
xor
cvtdq2ps
(bad)
or
call
or
je
jp
cmp
gs
ins
fadd
ficomp
add
dec
sti
or
mov
xchg
pop
mov
cli
inc
ret
jl
or
pop
adc
in
cmp
or
(bad)
loopne
pop
mov
test
lock
sub
mov
fcomp
shl
add
ret
out
in
ret
or
(bad)
in
lock
inc
ss
cmp
sbb
retf
push
adc
int3
cmp
shr
xchg
jo
hlt
dec
pushf
cdq
ss
push
add
jno
fst
ror
xchg
mov
jp
pop
aam
sub
dec
in
shr
add
ja
enter
enter
imul
add
mov
or
mov
inc
pushf
dec
mov
int3
out
adc
sbb
imul
adc
dec
sbb
ret
cmp
nop
data16
pop
mov
pushf
inc
cld
mov
test
fcom
xor
mov
sbb
push
jo
sbb
cli
jecxz
inc
outs
rcr
aam
les
sar
shl
mov
test
dec
push
aaa
scas
or
dec
ret
imul
aas
jae
loopne
xchg
and
pushf
or
stos
and
jg
call
inc
sub
sbb
mov
jp
call
dec
adc
in
cmps
add
test
sbb
inc
add
push
loopne
push
xchg
jb
out
push
ret
xchg
lods
inc
test
retf
xchg
and
or
mov
pop
pusha
xchg
add
and
inc
and
mov
mov
adc
inc
pusha
call
scas
add
sub
nop
in
nop
mov
sbb
jmp
and
mov
hlt
or
push
inc
pop
lahf
mov
je
dec
inc
dec
loope
frstor
xchg
sub
movs
fstp
pop
fs
push
adc
or
dec
push
dec
lahf
fsub
dec
add
mov
shr
fcomp
adc
sbb
js
mov
xor
popf
adc
mov
lahf
or
adc
xchg
and
sbb
jecxz
pop
sti
dec
sbb
inc
xor
imul
stos
movs
mov
fs
xchg
push
push
push
mov
sbb
or
pop
or
imul
adc
lods
rcl
sbb
xor
leave
adc
or
int
push
nop
fiadd
int
inc
enter
pop
adc
or
inc
arpl
sub
push
push
aam
dec
xor
aam
ja
pop
adc
ins
sub
push
int
lods
mov
or
xor
int3
js
ret
pusha
mov
jle
adc
cmp
or
sar
mov
add
test
pop
test
les
pop
nop
fcom
pop
in
sub
mov
inc
xor
or
cli
dec
mov
inc
or
mov
dec
iret
and
jmp
and
std
dec
cmp
popa
add
sub
movsx
lods
xchg
or
movsx
adc
push
sub
jb
or
add
sub
test
mov
xchg
je
xchg
jp
dec
mov
inc
add
or
(bad)
in
dec
mov
mov
arpl
jmp
cmp
xchg
inc
adc
and
lds
(bad)
leave
pop
je
sub
push
xchg
xor
cmps
cld
loopne
xchg
add
adc
call
(bad)
adc
xchg
add
popa
call
add
outs
popa
xor
mov
mov
call
jo
js
adc
popa
or
xor
or
add
fwait
addr16
sub
push
pop
cmp
pop
mov
ins
adc
mov
test
xor
xor
or
xor
or
jmp
outs
loope
pop
int3
jnp
lds
(bad)
cmps
ret
adc
repnz
cld
mov
lock
mov
sub
rol
push
sub
and
push
inc
adc
mov
dec
test
iret
or
inc
dec
imul
test
in
in
inc
xor
(bad)
rol
or
cld
sub
push
add
popa
inc
test
pop
mov
int3
js
in
and
jno
iret
lahf
popa
sbb
movs
lea
arpl
test
add
or
pop
loope
in
xor
or
pusha
add
mov
cwde
pop
jne
push
jg
test
in
es
cdq
add
add
lea
cmp
pop
fcom
sub
dec
push
and
or
mov
and
push
xor
xchg
mov
add
(bad)
jmp
dec
xlat
xchg
clc
jne
inc
adc
bound
ret
or
jne
fisttp
cwde
push
push
popa
push
cmp
and
test
mov
cmp
ins
dec
inc
ja
sub
test
pop
clc
cdq
lahf
add
add
test
inc
movs
jae
rol
jmp
jae
enter
push
cdq
add
inc
and
push
add
jo
scas
adc
add
stos
not
inc
adc
or
sbb
mov
add
aas
or
sub
xchg
ficom
cdq
push
repz
add
rol
ret
(bad)
pusha
pop
(bad)
or
push
adc
and
fist
sub
xchg
xchg
push
lahf
aam
mov
and
test
push
and
cmps
inc
or
mov
lahf
popa
nop
and
pop
push
add
lds
data16
fsubr
sub
ror
mov
and
pushf
push
dec
or
mov
pop
push
cmc
cs
int3
js
enter
lahf
jns
inc
xchg
mov
lahf
adc
sbb
cmps
and
movs
cwde
sub
or
sub
push
cmp
scas
shl
add
pop
mov
push
push
rcr
inc
jmp
add
cmp
mov
mov
scas
mov
or
aam
xchg
pusha
and
retf
dec
ror
add
dec
pop
xchg
add
cmps
aas
test
mov
xor
test
and
lea
or
pusha
test
or
daa
addr16
adc
sub
mov
loop
aas
in
test
or
gs
push
and
push
pop
inc
fs
retf
xchg
xor
mov
push
test
test
shr
test
lahf
inc
push
nop
mov
push
or
xor
inc
xchg
mov
mov
sahf
pop
adc
mov
jge
cmps
inc
dec
jp
das
sbb
and
and
pop
lahf
add
jl
mov
test
ret
sub
mov
xchg
sbb
sbb
les
adc
or
add
pop
pop
pop
inc
retf
adc
sub
adc
or
lods
pop
or
add
int3
loop
add
add
sbb
aas
push
or
mov
lahf
mov
inc
and
mov
sbb
sbb
mov
dec
or
jge
ss
pop
or
in
adc
out
mov
and
loope
add
jo
inc
sub
add
sbb
cs
xor
lahf
and
push
cmps
jne
lods
push
fld
lea
xor
cmps
sub
aas
sahf
cmp
fadd
lahf
adc
pop
pop
aas
in
and
add
and
sub
lahf
xchg
pop
(bad)
out
dec
sbb
enter
lods
setne
std
and
out
imul
(bad)
xchg
add
gs
fbstp
push
inc
pushf
inc
addr16
mov
and
inc
xchg
sub
xor
dec
fldcw
dec
mov
arpl
jae
mov
rcl
or
xchg
dec
or
and
inc
fimul
and
sub
mov
pop
(bad)
cmp
xor
dec
fsub
cmp
push
(bad)
fstp
pop
aaa
add
inc
pop
cmp
call
in
sub
inc
inc
(bad)
xor
fmul
jecxz
and
or
jp
jge
test
lock
or
pop
inc
and
popf
or
inc
(bad)
sbb
xchg
mov
sbb
pop
push
jmp
pop
sahf
cmp
sbb
pusha
sub
mov
inc
sbb
lods
jge
aas
add
stos
push
aad
cmp
retf
inc
bound
mov
cmp
test
ret
movs
das
adc
dec
sbb
and
adc
dec
pushf
dec
ss
and
push
push
mov
loopne
cmp
push
push
(bad)
adc
fmul
mov
xchg
jne
sbb
aad
xchg
jmp
mov
mov
cmp
adc
jle
popa
hlt
lea
movs
sub
xlat
iret
lock
push
les
mov
scas
shr
mov
jo
pop
push
jmp
mov
enter
mov
xor
retf
add
jae
test
cmp
mov
sub
pop
adc
jmp
mov
inc
pop
fcmovu
shl
ror
push
push
cmps
movs
pop
jmp
adc
jp
push
jl
enter
xchg
in
mov
loope
daa
and
adc
dec
add
mov
sub
xor
add
or
dec
loop
aam
lock
cli
fild
std
sub
push
ret
test
inc
push
or
in
sub
daa
sbb
shr
or
pop
and
inc
jecxz
push
add
ret
xor
aad
adc
xchg
std
push
xchg
or
push
cmp
nop
xchg
int
rcr
pop
mov
push
(bad)
pop
lahf
add
cvttps2pi
lea
js
mov
movzx
fdivr
outs
mov
shl
retf
push
adc
ins
(bad)
ins
sbb
lock
or
jne
ss
or
dec
sbb
movs
daa
jns
xchg
pop
dec
fistp
mov
pusha
lahf
or
pop
xor
mov
imul
mov
xor
shl
imul
cmps
add
adc
stc
push
add
or
push
test
or
xchg
nop
(bad)
test
movs
rcr
inc
sub
popf
test
sub
daa
loopne
add
mov
mov
or
lock
sbb
out
xor
cs
(bad)
adc
cmp
lea
(bad)
and
lds
adc
dec
loop
or
adc
cmp
jl
std
xchg
cmp
mov
shl
pop
gs
stos
fcomp
mul
push
mov
adc
xchg
mov
sbb
and
push
shr
pop
enter
fadd
mov
test
loopne
adc
mov
adc
push
(bad)
pop
sub
stc
jge
push
xor
mov
push
leave
push
jnp
shl
inc
int3
mov
inc
and
fs
and
invd
arpl
add
sbb
bound
ret
ja
xor
push
or
and
mov
mov
test
add
pop
add
dec
fsub
xchg
or
leave
jmp
mov
ret
out
rcr
or
test
lahf
and
add
sbb
popa
test
stos
pop
shr
and
pop
xchg
or
lea
rcl
push
ud2
sbb
lods
sub
imul
add
and
adc
out
pop
add
test
loope
xor
jmp
dec
add
or
dec
mov
jmp
ja
xchg
cmc
lea
or
and
add
xchg
in
cmp
push
or
pop
iret
add
nop
mov
pop
mov
or
sub
and
inc
mov
dec
or
xor
call
es
or
xchg
and
push
jnp
xor
add
fstp
lods
fnsave
fnsave
sub
or
jae
adc
adc
add
sub
xchg
pop
cmps
mov
add
mov
or
jmp
inc
cmp
push
fsubr
mov
arpl
fwait
inc
shl
gs
add
mov
daa
dec
lea
jmp
add
pop
or
outs
pop
jo
lds
mov
sub
mov
repnz
dec
out
lahf
out
mov
push
daa
mov
repz
jo
cdq
pop
in
fidivr
cmp
xor
push
jg
mov
je
push
ds
xor
or
imul
xor
cs
dec
int3
inc
call
(bad)
fwait
cmp
inc
mov
or
mov
push
fiadd
ds
mov
mov
pop
push
or
rcl
les
mov
mov
repnz
xor
bound
xor
push
xchg
mov
(bad)
rol
int3
ret
fld
xor
inc
sub
inc
out
in
xchg
mov
fcomi
lea
dec
xchg
mov
and
xor
pop
adc
ret
jne
add
mov
es
lds
mov
(bad)
std
and
and
cwde
mov
daa
mov
inc
loope
(bad)
adc
adc
push
imul
mov
add
mov
cmp
or
je
add
xchg
or
or
jo
dec
fmul
adc
or
mov
adc
adc
sbb
sbb
mov
mov
daa
or
push
lock
mov
xor
movs
mov
jae
and
dec
mov
and
das
pushf
push
ins
ins
and
mov
push
adc
retf
push
enter
sub
call
mov
mov
clc
jno
push
lea
or
sbb
enter
sub
pop
dec
ret
rcl
pusha
dec
mov
test
inc
adc
xchg
retf
sbb
inc
dec
pop
or
loop
add
xchg
sbb
pushf
popf
ficom
nop
fstp
or
lods
xor
pop
fstp
or
aas
sub
in
cmp
dec
ffreep
pop
add
mov
or
mov
test
loopne
add
loop
gs
movs
push
pop
xor
repnz
xchg
mov
mov
lahf
jmp
add
adc
dec
mov
aaa
add
xchg
fiadd
add
mov
xor
inc
test
sbb
push
pop
test
dec
cwde
mov
push
xchg
sbb
or
and
xchg
mov
push
mov
adc
jne
adc
push
cmc
shl
add
bound
cmp
pop
or
sub
sar
adc
adc
std
or
inc
stos
adc
xchg
xor
mov
ss
(bad)
xchg
mov
sti
push
int3
mov
mov
rep
(bad)
jg
push
daa
fld
fstp
jmp
pop
fst
mov
add
push
leave
push
cmps
pop
mov
pop
and
mov
aaa
mov
push
es
xor
imul
fst
shr
inc
sbb
mov
dec
stos
or
add
pop
cmc
sub
hlt
or
shl
cmp
retf
aam
push
xchg
sbb
and
mov
add
xchg
test
and
inc
sbb
mov
xchg
bound
jns
push
jo
inc
push
xor
push
jb
mul
lea
add
jns
(bad)
repz
xor
sahf
out
sahf
dec
push
mov
mov
inc
jg
fcmovne
out
pop
fsubr
or
pop
cs
add
sbb
jo
arpl
jns
xchg
add
test
add
dec
(bad)
out
mov
and
or
test
dec
fwait
adc
sub
rcl
push
cmc
sti
add
test
(bad)
fmul
int3
rol
fadd
stos
cmp
std
data16
adc
fild
pushf
pop
mov
add
and
cs
mov
pop
aas
sbb
dec
jg
dec
mov
ss
xchg
pop
and
and
adc
loop
pop
sub
sbb
jnp
addr16
push
push
add
or
dec
xchg
lock
push
and
test
nop
imul
aad
mov
hlt
std
mov
mov
test
call
sbb
pop
dec
bound
imul
test
lock
fst
push
cmp
adc
fadd
sbb
mov
mov
(bad)
push
push
iret
jnp
movs
sbb
mov
fadd
push
mov
adc
mov
popa
cli
mov
push
xor
cmp
jmp
inc
or
clc
retf
es
imul
(bad)
aam
mov
(bad)
sahf
inc
or
iret
rcr
outs
pop
cmp
add
mov
inc
mov
sub
add
inc
mov
xor
pop
or
cs
int3
int3
out
add
arpl
or
mov
add
mov
xor
dec
ror
push
shl
add
sbb
inc
ret
mov
and
in
xchg
inc
cmp
sbb
popf
fwait
xor
inc
or
pop
mov
mov
fimul
xor
push
dec
add
jg
adc
sub
daa
in
and
add
jne
jmp
scas
sub
add
(bad)
cmp
mov
and
lahf
adc
add
sbb
scas
inc
enter
and
xlat
dec
add
fimul
cmp
mov
loopne
jae
sub
loopne
mov
and
lock
mov
lahf
push
push
(bad)
pop
pop
sub
or
and
mov
xchg
mov
add
add
cmp
jp
adc
or
aas
pushf
sbb
outs
sbb
ds
and
cmp
jmp
add
mov
inc
push
cmp
cmp
daa
arpl
pop
cmp
ja
mov
(bad)
and
sub
cmp
adc
or
pop
pop
ds
adc
xor
add
dec
popa
inc
retf
das
cdq
add
fsubr
add
and
mov
sbb
mov
or
add
pmaxsw
and
mov
dec
jg
pop
movlps
(bad)
and
repz
mov
inc
(bad)
xor
test
mov
test
daa
pop
xchg
jge
adc
pusha
ins
mov
cli
add
push
add
xor
mov
or
xlat
test
jg
scas
inc
mov
(bad)
pop
push
pusha
pop
dec
(bad)
jp
inc
or
pop
stc
or
adc
xor
push
in
popa
test
pop
inc
pop
je
adc
add
or
push
lock
and
mov
mov
xchg
pop
aam
adc
inc
(bad)
loopne
rcr
loope
and
js
and
ss
movs
lds
dec
loopne
test
lock
add
xor
add
frstor
add
leave
add
inc
or
cdq
daa
sbb
pop
sbb
adc
test
xchg
ins
and
or
test
pusha
inc
dec
pop
and
add
cmovo
in
test
adc
aas
cmovo
lea
inc
dec
mov
cmp
in
inc
mov
dec
add
xor
or
loopne
push
push
cmp
scas
ficomp
test
and
fcmovbe
mov
inc
adc
sub
push
popa
(bad)
push
inc
sub
arpl
push
adc
js
rol
inc
int
ins
or
rol
dec
movs
inc
in
jmp
dec
fnstcw
shl
test
push
mov
pop
and
aad
dec
push
jmp
mov
int
jmp
sbb
add
outs
push
fadd
mov
test
jg
lock
leave
adc
movs
cmp
xchg
jae
push
(bad)
scas
(bad)
lea
inc
push
inc
out
push
jne
loopne
add
add
dec
icebp
adc
xchg
add
mov
loopne
xor
cmp
loop
xchg
mov
mov
cmp
movs
jb
inc
hlt
in
or
sar
aam
push
jo
mov
inc
dec
pushf
add
shr
pop
shl
and
sbb
add
scas
int3
pop
add
adc
(bad)
jmp
add
inc
dec
mov
jne
fldcw
arpl
movs
xor
add
push
and
xor
ins
jmp
mov
test
das
nop
das
cmp
nop
sub
or
inc
sar
in
inc
ret
push
and
pop
cmp
xchg
cmps
call
xchg
adc
(bad)
dec
inc
mov
add
int3
test
sbb
inc
fdiv
xchg
dec
lahf
sub
outs
or
mov
movs
or
adc
xor
lock
or
mov
ins
mov
push
(bad)
daa
cmc
xchg
xchg
jns
mov
out
add
mov
nop
bound
jg
test
and
inc
mov
jmp
push
or
add
dec
xor
push
(bad)
or
add
xchg
cmp
gs
mov
enter
jl
and
dec
push
fcmovne
inc
loopne
pop
inc
sub
cwde
in
mov
sub
mov
cld
adc
xchg
mov
push
add
inc
gs
add
push
arpl
pop
dec
adc
add
dec
mov
ins
cdq
or
inc
retf
aaa
or
mov
(bad)
sbb
add
add
loopne
fmul
inc
or
cmp
mov
dec
aad
popa
and
movs
or
sbb
ja
jecxz
hlt
or
les
imul
pusha
adc
and
and
sbb
mov
mov
in
and
in
rol
sbb
jecxz
push
and
adc
std
and
jne
inc
mov
mov
je
add
pop
adc
sbb
cmp
pusha
(bad)
aam
xchg
adc
pop
mov
mov
mov
inc
repz
mov
sub
adc
inc
xor
cmp
mov
and
mov
inc
movs
cmps
mov
fwait
xchg
mov
adc
xchg
(bad)
shr
fs
lea
lock
xor
pop
ret
or
add
dec
lock
cmc
and
jae
push
xlat
ret
mov
xchg
rol
mov
out
fcomp
les
(bad)
ins
cmp
push
dec
or
adc
mov
adc
fnstcw
mov
cmp
adc
dec
xchg
add
and
adc
mov
loope
push
and
les
inc
xchg
pop
push
xor
push
push
mov
les
dec
(bad)
aam
ror
nop
mov
inc
jmp
leave
rcr
add
dec
jl
push
jg
scas
push
inc
pop
pop
pop
add
cwde
jmp
and
adc
or
add
and
pop
sbb
jmp
adc
rcr
and
jne
dec
sub
xchg
pop
popa
push
mov
inc
aas
mov
add
inc
sub
xchg
add
adc
leave
cmp
cmp
out
es
add
lods
arpl
ja
and
push
xor
push
aaa
test
addr16
push
(bad)
out
xor
add
(bad)
sub
mov
add
or
add
inc
add
pusha
jmp
dec
push
leave
or
pop
xchg
pop
sub
and
pusha
pop
or
pop
mov
mov
mov
or
xchg
test
ret
test
fiadd
jg
shl
mov
cli
push
mov
mov
lock
iret
xor
bts
mov
mov
or
cmp
add
and
stos
pop
jmp
pop
sbb
out
xchg
and
lock
add
jne
jnp
sub
ds
sub
ja
adc
xor
and
jno
inc
dec
dec
ins
jg
push
fcom
jg
daa
dec
and
iret
ins
jmp
add
inc
push
sub
cmp
or
push
cmp
cmp
inc
adc
fnstcw
nop
mov
cmp
pop
adc
pusha
add
xor
mov
pusha
imul
mov
push
or
xchg
test
(bad)
mov
inc
push
fwait
shl
inc
cwde
ds
sbb
out
mov
push
shl
or
adc
xor
rol
dec
pop
pop
and
dec
sub
pop
dec
jg
add
and
fist
lock
xor
mov
add
adc
bound
cdq
xchg
sbb
nop
mov
es
add
sbb
add
(bad)
into
ins
push
cmps
mov
xchg
mov
inc
cmps
test
dec
imul
mov
cmps
jbe
gs
(bad)
jmp
pop
push
adc
xor
inc
rol
aas
push
jmp
mov
fcmovnbe
sbb
aas
push
mov
mov
xor
test
sbb
pop
mov
adc
loop
aam
pop
mov
pop
cmp
pop
push
jb
mov
add
or
mov
mov
nop
pop
or
push
or
mov
mov
pop
jne
(bad)
mov
push
sub
outs
sbb
or
aaa
push
cmp
sbb
adc
call
ss
inc
sbb
daa
fwait
inc
sbb
mov
mov
pop
int3
jmp
fisttp
add
and
bound
add
push
nop
dec
ins
scas
push
pop
sbb
stos
or
lea
mov
lock
mov
or
and
retf
xchg
test
pop
pop
lds
or
dec
lahf
aaa
je
loopne
adc
int3
jo
add
sub
jge
and
jp
mov
retf
movs
mov
pusha
movs
xchg
adc
inc
cmps
pusha
aas
popa
jge
mov
push
mov
popf
adc
cmp
shl
cmp
dec
lods
mov
pop
stos
push
lahf
fisttp
ret
test
int3
fadd
push
dec
call
call
or
sbb
test
or
sub
ror
pop
sub
sbb
stos
add
(bad)
fild
clc
add
fiadd
push
add
and
ds
and
in
inc
cmp
call
lds
or
lods
pop
add
(bad)
pop
jg
add
mov
and
or
mov
bound
pop
(bad)
cmp
sbb
dec
ror
mov
jo
lea
jae
or
movs
add
daa
cmp
adc
and
or
add
and
sub
add
and
fwait
sub
adc
stc
or
mov
push
stc
sbb
loop
inc
cli
xchg
rcl
not
adc
inc
clc
and
pop
mov
or
xchg
ss
movs
das
or
pusha
add
xlat
imul
push
sbb
icebp
rcr
jmp
push
std
adc
mov
inc
aam
cmc
sahf
or
pop
or
pop
sbb
dec
repz
dec
(bad)
xlat
arpl
sub
jo
lock
lock
test
daa
and
adc
and
mov
cmp
(bad)
or
and
or
and
outs
add
movs
adc
push
sbb
add
cmp
xchg
or
add
mov
jle
sbb
pop
sub
mov
(bad)
arpl
fild
add
jo
leave
jne
dec
jae
sub
shl
aam
push
mov
xchg
lock
or
xchg
sub
add
add
aad
shr
xor
test
sub
adc
dec
and
movs
xor
adc
enter
cmp
out
or
(bad)
adc
fidivr
adc
xchg
retf
outs
sbb
mov
mov
test
add
push
and
test
pop
push
xchg
aam
jmp
push
aaa
sub
popf
scas
push
push
push
mov
fdivr
pop
imul
mov
daa
fild
inc
dec
push
mov
dec
mov
sbb
push
aam
jne
push
mov
movs
fisttp
push
add
lods
aas
sbb
sub
cmps
mov
ss
mov
dec
dec
mov
or
sbb
mov
and
push
cmps
and
cmp
adc
aam
pushf
and
sbb
mov
retf
mov
in
cmp
add
sbb
add
add
or
cmp
aas
mov
dec
adc
inc
sub
lea
arpl
cli
push
popa
nop
outs
jp
mov
jne
or
adc
sbb
in
cmp
dec
sub
or
mov
pop
mov
pop
or
je
loopne
mov
shr
xor
adc
push
ja
or
mov
xor
jmp
cmp
xor
dec
loop
mov
xchg
inc
jmp
and
sbb
jae
or
dec
add
adc
sub
dec
xor
add
add
bound
cmps
dec
movs
jle
std
hlt
and
in
das
or
push
cld
push
jne
add
and
xchg
cmovnp
fs
inc
lahf
mov
add
xor
cmp
ror
mov
mov
aas
cmps
xchg
inc
retf
cli
fldcw
and
sbb
or
dec
and
or
mov
xor
ins
je
scas
js
sbb
fbld
icebp
mov
pop
add
aas
mov
push
xor
popf
rcr
and
sbb
xor
and
test
add
inc
jb
jae
jg
call
jne
mov
(bad)
fcom
ins
jl
sbb
sub
push
pop
pushf
jl
inc
std
mov
or
push
mov
outs
sbb
push
add
sbb
ins
add
test
sub
mov
mov
jo
dec
ret
pushf
mov
push
adc
es
adc
dec
pop
sar
and
jb
les
add
movups
inc
adc
or
cmp
add
iret
inc
add
or
rol
cmovno
mov
push
out
inc
mov
or
(bad)
pop
push
push
adc
jno
int
push
cmp
add
xor
inc
push
inc
inc
sub
ins
and
sbb
xor
cmps
add
sub
mov
and
mov
and
loope
test
sub
js
cmp
iret
jbe
pop
sub
or
dec
or
sub
test
add
mov
adc
mov
das
aas
sbb
adc
adc
inc
inc
and
add
daa
sub
push
lock
in
push
call
xchg
xchg
hlt
inc
xor
pop
mov
cmps
inc
push
fiadd
sub
imul
outs
mov
push
mov
and
jae
dec
outs
inc
(bad)
rcr
jae
mov
mov
clc
push
push
mov
sbb
add
je
push
push
repnz
jmp
aas
xchg
push
xchg
daa
pop
jmp
shl
clc
int
adc
add
ja
std
pop
and
jno
add
push
cmp
mov
inc
adc
unpcklps
jo
pop
jge
jae
popa
loopne
out
call
sbb
jmp
je
sar
pop
and
jb
push
fstp
imul
in
jo
ds
popf
add
mov
pop
dec
push
loop
or
adc
aaa
xchg
mov
shl
push
mov
or
test
(bad)
ins
daa
mov
mov
xor
jge
push
fld
stc
lds
push
add
es
in
cmp
test
pop
and
add
(bad)
adc
or
je
cld
push
js
loopne
mov
cmp
enter
add
popa
out
test
or
jno
jb
nop
sbb
or
lahf
test
popa
lahf
nop
mov
adc
inc
mov
add
and
data16
mov
enter
mov
inc
iret
push
add
push
mov
add
mov
push
aas
inc
lahf
add
xchg
retf
and
add
xor
add
pop
or
jb
xor
out
jo
dec
add
adc
pop
cmps
or
sub
add
mov
movsx
add
ins
adc
icebp
(bad)
inc
mov
mov
sbb
cmc
add
push
shl
or
add
adc
es
xor
retf
imul
mov
xchg
push
and
dec
call
(bad)
push
dec
or
inc
and
sbb
pop
mov
sbb
inc
clc
add
mov
add
dec
push
and
jg
popa
ins
shr
lahf
icebp
push
mov
add
mov
mov
frstor
stos
pop
fs
xchg
imul
xchg
pop
fldcw
mov
ret
xor
add
call
pinsrw
jg
hlt
mov
jle
push
retf
push
push
iret
cld
pop
dec
retf
aad
adc
add
call
fs
pop
inc
pop
pop
and
icebp
or
mov
mov
or
pop
or
in
outs
sub
nop
dec
jp
ja
call
sub
fild
sub
aaa
fnstsw
dec
add
add
and
adc
and
cmp
lahf
add
pop
push
fisttp
and
fwait
add
test
rcl
in
aaa
lea
add
xor
test
mov
sub
dec
or
lahf
adc
sub
add
rcl
cmc
xor
cli
inc
bound
ds
enter
inc
jb
dec
xor
push
aam
or
push
test
mov
sub
push
outs
clc
inc
or
add
mov
pop
jmp
cmp
rol
lds
or
dec
xchg
xchg
or
sub
sub
or
add
ja
adc
sub
ins
sbb
jae
inc
cmp
clc
add
sub
jmp
pop
pop
sbb
pusha
loop
mov
aas
inc
ins
test
mov
push
pop
mov
mov
test
dec
leave
mov
dec
or
loopne
jp
mov
cmovg
in
nop
xchg
or
push
push
push
xchg
xchg
or
push
push
push
sbb
nop
aam
sub
lock
and
mov
cmps
jecxz
fcos
and
sub
popf
nop
xor
bound
sbb
cli
and
icebp
out
jmp
imul
and
in
jne
pop
test
jge
add
lock
or
sub
inc
fs
inc
rol
add
adc
or
loopne
cdq
inc
cmp
cld
loopne
jle
in
add
loope
inc
mov
mov
ror
cmp
ins
push
add
lea
mov
jb
adc
mov
adc
or
sub
not
lods
test
add
lods
rcl
add
mov
pop
shr
dec
xor
and
ins
aaa
inc
or
test
cmp
ret
mov
shl
adc
jl
add
inc
mov
es
adc
rol
jno
imul
sub
inc
push
movs
mov
jg
inc
push
or
popf
in
jg
shl
or
sub
and
ja
pop
dec
loop
mov
enter
jmp
call
push
popf
loopne
xor
inc
aas
xor
and
sub
stos
jg
dec
add
fs
push
xchg
addr16
push
call
push
adc
fs
cmp
stc
xor
jmp
mov
lahf
call
pusha
popf
loop
outs
and
sub
cmp
cmps
adc
dec
adc
fsubr
(bad)
xor
mov
dec
mov
jle
or
or
push
or
pop
mov
jbe
add
push
jmp
push
jle
outs
mov
jne
cdq
cmp
jne
in
inc
add
js
or
movs
mov
push
push
cli
pop
popf
add
outs
or
inc
sbb
xor
or
or
mov
int3
ins
test
adc
add
pop
and
add
or
ret
stos
(bad)
jmp
imul
jg
clts
addr16
push
test
or
and
in
pop
sub
sub
pop
sub
lods
movs
mov
add
stos
sub
sar
dec
sbb
mov
lahf
js
or
adc
jns
out
pop
sub
(bad)
jg
movsx
adc
hlt
jb
test
inc
ret
pop
loopne
(bad)
clc
je
movs
and
movs
hlt
sub
mov
in
jmp
test
scas
push
xor
stc
sub
inc
pop
inc
repz
sbb
fmul
pop
loope
push
sahf
fstp
sub
xchg
in
dec
es
cdq
lock
fsub
in
lock
mov
in
pop
sti
and
inc
jge
or
sar
jne
mov
mov
mov
and
xchg
jecxz
sbb
int3
je
add
pushf
mov
pop
and
jne
and
clc
dec
push
cs
iret
xor
push
call
and
das
dec
les
mov
ins
add
mov
push
mov
inc
sub
aas
lock
inc
or
in
xchg
dec
xor
aas
in
in
cmp
mov
xor
pop
call
pop
add
in
test
add
ret
mov
in
ret
bound
jne
int3
neg
addr16
cld
adc
jb
ss
ja
sub
xor
pop
pop
jb
call
dec
imul
call
xor
ja
sbb
gs
add
jne
mov
adc
sbb
fadd
xor
jecxz
rcr
js
add
test
rcr
add
xchg
call
adc
fmul
mov
int3
push
sbb
sbb
loopne
and
and
rcl
jb
xchg
retf
rcl
rcl
xchg
retf
xchg
pop
rcl
sar
add
ror
add
jb
and
js
or
xchg
ret
fdiv
add
jmp
scas
add
jecxz
call
add
dec
sub
movs
adc
inc
popf
in
push
add
inc
jg
jmp
push
adc
ds
xchg
mov
mov
mov
push
(bad)
repnz
push
(bad)
clc
or
cdq
shl
or
imul
mov
js
jbe
pop
jo
push
sar
mov
aaa
dec
fidivr
or
and
mov
mov
and
dec
enter
mov
les
dec
jne
xor
mov
imul
xor
adc
mov
leave
(bad)
lods
scas
sub
and
sub
mov
stos
push
fistp
and
mov
mov
mov
mov
out
add
pusha
push
popa
sub
stos
dec
push
inc
xor
fbstp
hlt
and
test
dec
pop
clc
sbb
mov
mov
ss
rcl
ss
cmp
sub
ss
leave
xchg
mov
fmul
(bad)
jmp
test
adc
fnstsw
add
pop
and
or
or
(bad)
aas
and
and
(bad)
int3
xor
call
cwde
add
jmp
mov
outs
inc
jnp
lea
push
add
inc
or
pop
dec
or
xlat
fstp
hlt
jns
push
mov
dec
mov
mov
sbb
pop
clc
add
push
and
movs
xor
xchg
add
rcr
jmp
xchg
mov
rcl
dec
stos
lea
rcl
sahf
add
sbb
xor
xor
and
add
add
lea
cld
jmp
jmp
jg
sub
add
ret
sahf
nop
dec
adc
pusha
push
fst
outs
fsubr
jecxz
or
scas
mov
inc
outs
sub
retf
ins
cmc
xor
add
mov
test
push
xor
push
arpl
push
je
lods
mov
or
mov
mov
sti
add
push
dec
sub
jns
dec
adc
jo
fstp
xor
and
xchg
mov
sub
xchg
mov
jbe
jg
sub
ret
adc
pop
pop
mov
sar
pop
ret
loop
dec
test
lds
add
add
mov
xchg
imul
(bad)
push
xor
add
fcomp
jmp
clc
pusha
add
add
mov
ss
sub
add
ss
mov
push
or
fsub
(bad)
adc
or
data16
test
sti
xchg
add
pop
or
clc
xchg
dec
fs
sahf
(bad)
xchg
int3
scas
std
sub
add
pop
jl
xchg
add
(bad)
int
add
out
sub
add
xor
outs
mov
rcr
or
inc
movs
adc
call
test
jmp
lock
stos
sbb
dec
popa
popf
mov
sti
retf
pop
sahf
xor
inc
out
ins
add
add
out
sti
or
pop
add
sbb
jb
fsubr
adc
inc
sub
and
jb
sub
arpl
int3
jl
ret
call
pop
inc
mov
js
xchg
scas
in
jmp
or
sub
in
(bad)
mov
jb
lea
mov
(bad)
jmp
mov
sbb
and
sbb
in
loop
les
sbb
and
xchg
mov
std
adc
aaa
pop
sbb
or
dec
shl
loop
push
add
cs
sub
and
push
or
loopne
and
pop
loopne
icebp
adc
arpl
je
not
push
clc
cmps
or
cmp
inc
ret
sbb
(bad)
ret
push
add
sub
cmps
mov
sti
mov
rol
rol
loop
cwde
add
jmp
mov
out
imul
gs
xchg
test
mov
xor
add
div
neg
not
out
mov
sub
xor
nop
rol
hlt
inc
pop
mov
shl
lods
pusha
jo
call
sub
mov
and
inc
lock
jmp
shr
idiv
rcr
jmp
mov
mov
mov
cmps
shr
test
or
fstp
add
es
aam
std
repnz
mov
nop
shl
clc
jecxz
or
les
sbb
popf
sub
mov
adc
lahf
jno
sub
icebp
or
js
aaa
mov
adc
(bad)
mov
add
movs
ffreep
inc
neg
loope
rol
and
cmp
push
nop
pop
and
mov
jae
lea
xchg
fisttp
inc
or
mov
push
scas
add
and
jno
lods
sbb
add
scas
and
xor
add
adc
int3
jbe
inc
sub
pop
out
mov
add
ins
or
add
fs
imul
xchg
and
ja
inc
pop
add
(bad)
into
popa
sbb
cli
outs
push
mov
or
add
ss
xchg
pop
pop
push
adc
std
sahf
and
add
ret
shl
out
loopne
xor
js
mov
ja
adc
add
hlt
add
add
mov
or
sbb
adc
cld
aas
rol
aam
inc
sbb
pop
push
mov
lds
xchg
push
and
pop
in
adc
pop
ss
inc
add
popa
push
and
push
call
shl
call
sub
pop
cmp
push
xchg
push
mov
mov
aas
add
add
add
jmp
test
inc
outs
lahf
or
hlt
mov
sub
mov
sub
xor
aas
and
rol
sbb
in
je
in
(bad)
nop
add
pop
push
push
pop
lea
mov
mov
mov
cmp
inc
lahf
stos
xchg
imul
fisub
adc
add
pop
add
and
adc
sub
enter
inc
or
dec
out
pop
cwde
test
add
or
adc
xchg
sbb
hlt
fist
das
or
dec
(bad)
test
hlt
or
jle
push
pop
or
fisub
stc
icebp
cmp
sub
shr
jb
add
stc
dec
lea
pop
adc
mov
inc
mov
add
xlat
gs
or
mov
mov
in
and
clc
push
xor
leave
push
loope
xchg
mov
or
jno
imul
(bad)
test
push
jp
xor
jne
pusha
pop
inc
fcom
jl
add
inc
rcr
adc
add
clc
aas
inc
sbb
fwait
xchg
ins
pop
ret
jo
(bad)
mov
test
out
test
adc
push
lahf
mov
add
mov
ret
fistp
and
inc
or
adc
mov
test
mov
jmp
cdq
ins
rcr
lahf
or
or
add
or
sar
bound
mov
call
jmp
add
loop
add
mov
add
clc
adc
adc
jmp
mov
jg
add
mov
xor
fsubr
dec
pop
xor
ins
add
push
xchg
adc
and
ror
inc
or
fwait
and
add
adc
sbb
or
or
popa
sbb
push
pop
mov
add
ret
lahf
adc
adc
push
add
ficomp
lods
inc
dec
push
test
add
pushf
adc
add
js
pop
cmp
adc
xchg
pop
xor
push
or
(bad)
fiadd
leave
mov
ins
push
cmp
or
adc
add
dec
add
or
sbb
fwait
ins
nop
rol
and
cmp
movs
inc
add
and
pop
inc
xchg
je
dec
or
xor
pushf
mov
adc
in
adc
in
aaa
shl
or
test
or
sbb
or
and
mov
pop
popf
fcomp
push
add
fcomp
mov
or
or
loop
sbb
add
cmps
pop
daa
sub
pop
aas
pop
mov
mov
adc
mov
and
pop
mov
and
int3
xor
pop
test
test
ins
fmul
mov
mov
or
adc
or
mov
or
xchg
sub
cwde
mov
sbb
mov
ror
mov
fnstsw
dec
rcl
adc
add
xor
mov
or
mov
addr16
fs
sbb
cmp
mov
xor
mov
sbb
sbb
lods
dec
and
and
dec
mov
push
ret
adc
loope
sbb
inc
push
adc
fwait
mov
push
push
push
lock
jmp
js
lock
or
or
mov
pusha
sbb
mov
push
push
sbb
rcl
and
cli
jmp
mov
and
and
sub
and
not
xchg
and
add
sbb
mov
les
mov
jge
ror
sbb
adc
sahf
pop
popa
loopne
inc
pop
stos
hlt
inc
dec
adc
test
jne
mov
in
cmps
or
enter
add
add
lds
icebp
in
add
gs
ss
fdiv
add
scas
add
and
cmp
dec
or
jno
gs
xor
test
mov
sbb
nop
(bad)
aas
sub
loop
mov
mov
pop
pop
pop
and
(bad)
jle
add
or
fisub
mov
or
adc
and
test
or
ja
and
push
pop
loop
(bad)
fcomp
imul
push
sub
aas
pop
jp
sub
fild
dec
and
jg
es
stos
aam
push
rcr
nop
rol
push
les
retf
adc
loop
dec
sub
lahf
cld
adc
mov
sub
cmp
dec
cld
addr16
adc
add
or
and
loope
aas
push
dec
fisubr
test
add
or
pop
add
repnz
ret
push
and
sbb
fiadd
adc
out
sbb
fsub
xor
ss
mov
and
js
mov
cmps
in
push
bound
aam
and
mov
lods
out
(bad)
and
pop
add
sbb
mov
sub
inc
pop
hlt
and
add
lods
mov
les
adc
add
add
dec
adc
push
mov
test
aas
lock
or
fcom
xchg
test
inc
add
inc
inc
mov
mov
aad
or
ret
outs
and
out
dec
jl
push
adc
test
and
push
or
test
mov
or
push
dec
test
inc
push
pusha
pushf
dec
hlt
or
add
in
loopne
cmp
scas
in
jne
rcr
push
sbb
mov
pusha
push
sbb
aas
add
inc
mov
rol
arpl
ficomp
pop
fadd
and
sbb
cdq
ret
jmp
mov
adc
fiadd
in
adc
pop
sub
push
dec
push
jg
adc
sub
xor
jg
jne
lods
mov
sti
imul
and
or
jne
sbb
add
jp
add
pop
loope
inc
pop
daa
call
jbe
xor
cmp
push
or
popf
dec
hlt
test
push
(bad)
and
sub
call
adc
aaa
or
jae
mov
mov
les
ret
or
push
inc
push
shl
add
jbe
cdq
or
shl
sub
sbb
adc
push
mov
hlt
movs
xor
xchg
add
jo
add
inc
mov
pushf
repz
jae
popf
imul
add
and
inc
pushf
and
push
mov
jmp
out
or
inc
and
xchg
xchg
pop
mov
adc
jge
sbb
inc
or
rol
pop
adc
js
jne
je
test
mov
xchg
movs
add
jne
mov
jge
or
inc
inc
inc
add
sbb
sbb
sub
sbb
xor
cmp
mov
sbb
lods
pop
add
mov
sahf
or
and
mov
into
adc
push
jg
loope
and
adc
adc
rol
sahf
cmp
repnz
fidivr
imul
clc
cmp
sbb
sbb
rol
fiadd
lock
jne
sub
mov
in
lahf
mov
adc
call
push
adc
and
adc
gs
mov
adc
jo
rcr
adc
or
sub
or
fstp
pop
fisttp
sbb
in
jno
cwde
les
loop
xor
cmp
adc
jnp
push
lods
gs
lea
bound
adc
push
sbb
cmps
sbb
inc
push
push
retf
repnz
sbb
lock
or
cmp
xchg
test
jne
clc
adc
sub
imul
rol
add
jg
adc
jo
aas
or
inc
adc
lock
adc
jg
or
xchg
push
add
mov
push
inc
(bad)
repnz
cmps
add
xor
ret
lock
cdq
add
or
and
push
ja
sub
test
push
and
adc
mov
push
dec
sbb
xchg
sub
mov
fdivr
lea
arpl
test
dec
sbb
dec
push
retf
mov
aas
or
push
sti
adc
adc
dec
add
aas
aaa
mov
rcr
call
(bad)
fs
inc
test
std
adc
cmp
lahf
or
pusha
imul
mov
sbb
or
ins
mov
ins
pop
or
add
and
and
add
and
inc
loopne
mov
clc
mov
mov
mov
adc
pop
add
ins
sbb
dec
dec
inc
mov
and
in
xchg
or
mov
mov
dec
and
add
push
adc
loopne
add
xchg
add
xor
or
mov
lahf
xor
in
inc
add
bound
fcomp
es
add
pop
rcl
lahf
mov
inc
arpl
call
pop
push
add
lahf
pop
sbb
inc
pusha
dec
stos
out
adc
hlt
xchg
add
xor
movs
pop
es
xchg
loopne
and
lea
mov
outs
mov
mov
add
les
add
or
shl
push
mov
fiadd
inc
add
adc
out
xor
mov
or
sbb
push
imul
xchg
adc
ret
aas
out
or
aam
shl
sbb
inc
aaa
and
xor
fsubr
mov
mov
fsubr
rcl
xor
inc
fs
add
je
mov
dec
sbb
xchg
sbb
ret
jno
xchg
push
sbb
mov
jp
or
cmp
retf
cmc
retf
rcl
ins
mov
sbb
add
and
inc
mov
pop
aam
sar
xchg
xchg
cmp
ins
mov
or
mov
mov
rcr
fsubr
sbb
mov
pop
jmp
mov
sbb
add
inc
inc
or
sub
xchg
xchg
hlt
(bad)
cmp
xor
outs
and
add
pop
(bad)
pop
mov
pop
dec
push
add
sub
es
push
inc
test
sbb
rcr
sbb
and
add
mov
sbb
mov
dec
mov
mov
loopne
jmp
cmps
pop
cmp
test
mov
add
cld
repz
xchg
repnz
das
je
and
jo
dec
jl
sbb
das
or
mov
sub
add
(bad)
jg
or
add
mov
inc
mov
xchg
shl
fimul
mov
clc
mov
loope
das
inc
inc
sbb
ret
add
xor
inc
clc
sbb
dec
xchg
cmp
cmp
add
lahf
inc
adc
and
add
or
jb
movs
adc
call
push
fisubr
inc
jl
scas
and
aam
mov
and
jg
imul
sub
or
or
jg
and
inc
mov
xor
dec
aam
mov
add
and
add
pop
inc
jmp
or
hlt
jge
dec
(bad)
pop
xchg
push
xchg
(bad)
fst
mov
push
add
nop
fst
inc
add
or
ins
mov
xor
mov
mov
mov
sbb
mov
push
ins
inc
mov
or
mov
sbb
sbb
(bad)
sub
add
adc
adc
jne
fild
jmp
lock
add
dec
cmp
leave
sub
push
push
pushf
xchg
pop
push
js
xor
mov
test
mov
push
push
mov
pop
adc
add
pop
cmp
add
jno
jmp
shl
mov
add
mov
xor
add
rol
dec
dec
ja
mov
push
pop
dec
(bad)
mov
mov
mov
(bad)
push
imul
xlat
ss
or
inc
test
mov
add
add
dec
hlt
ja
adc
imul
xor
pop
mov
sbb
call
outs
jmp
and
mov
and
in
in
dec
xor
movs
in
and
pop
and
cmp
jns
sub
xor
mov
mov
fiadd
add
mov
mov
pop
ret
sbb
push
ins
push
sub
inc
add
and
std
mov
mov
jne
xchg
add
and
add
(bad)
in
movs
push
mov
mov
sub
push
or
ins
push
mov
sbb
mov
pushf
mov
add
xor
sub
rcl
ror
test
dec
(bad)
out
xor
push
xchg
or
aaa
stos
adc
lahf
cmps
xchg
mov
jg
jecxz
and
mov
inc
jg
adc
je
add
sbb
inc
dec
ret
inc
pop
popa
leave
xchg
mov
scas
adc
adc
adc
and
test
pushf
jmp
jae
xor
daa
pop
inc
cld
fwait
xchg
mov
and
or
adc
cwde
or
lahf
add
xchg
xchg
push
fistp
xor
inc
mov
xor
mov
dec
and
retf
push
les
add
dec
mov
mov
sbb
js
push
or
jg
push
or
das
add
outs
test
xchg
sub
cmp
sbb
mov
add
jge
sbb
fstp
stc
cmp
sbb
sub
test
push
cmp
mov
not
or
and
das
lds
pushf
sub
mov
arpl
cwde
add
scas
ja
ret
sar
and
aaa
add
(bad)
and
dec
adc
xlat
sbb
fcomp
sbb
pusha
aas
dec
mov
sbb
iret
mov
jbe
shr
fld
or
mov
mov
dec
or
inc
jl
sbb
dec
add
cmp
mov
test
jb
leave
sbb
or
inc
xchg
jo
and
cld
adc
pop
cmovns
mov
retf
add
icebp
pop
fdivr
xor
test
or
or
and
jns
ja
adc
mov
test
xchg
pop
mov
or
and
mov
js
push
pop
sub
inc
or
ss
push
push
adc
inc
repz
les
mov
mov
xchg
cdq
add
jge
outs
or
add
cmp
and
test
cmp
cld
mov
fs
cld
mov
aas
jmp
iret
push
xor
lds
add
xor
jns
cmp
ret
inc
ss
add
aam
inc
sahf
bound
ret
inc
xlat
aaa
push
cs
retf
xlat
ja
add
cmp
cmp
pop
inc
push
xlat
leave
or
xchg
ins
call
pop
add
sub
inc
or
xor
add
cmp
mov
jmp
sti
test
pop
xchg
xor
push
sub
js
xor
pop
nop
dec
test
iret
ror
dec
jle
fcom
in
lods
mov
and
add
add
cmp
sub
cmp
and
test
clc
xchg
jp
mov
inc
adc
cmp
sbb
les
mov
dec
aam
loope
aad
xor
or
cmp
gs
loop
xchg
cmps
mov
addr16
sbb
adc
xchg
xchg
cmp
ror
push
push
pop
dec
pop
cld
das
xor
adc
imul
xchg
adc
jmp
adc
or
mov
push
xchg
mov
cmp
cmp
ins
mov
add
ss
mov
loope
push
and
sub
mov
lock
fsub
mov
xchg
and
aaa
sbb
inc
and
mov
mov
gs
mov
neg
(bad)
jecxz
and
enter
mov
shl
jmp
pop
mov
nop
in
aam
mov
ror
ret
xor
pop
xor
into
fmul
call
push
inc
call
xor
sub
adc
and
mov
jbe
je
add
gs
cmp
cmp
xchg
or
mov
adc
mov
mov
ret
pushf
adc
adc
rol
adc
xchg
imul
imul
out
mov
xor
jg
inc
pop
rcl
loop
or
mov
cmp
mov
xchg
loope
sbb
call
dec
lea
cmp
nop
jge
pusha
test
jmp
sti
cwde
loop
and
aaa
pop
push
(bad)
jo
mov
mov
(bad)
ja
cmp
mov
jbe
pop
push
sbb
mov
mov
sub
mov
lods
(bad)
pop
fild
enter
rol
mov
hlt
mov
fadd
cmc
inc
ss
sar
add
(bad)
mov
ror
mov
dec
data16
or
mov
fbld
lock
adc
test
jne
repz
inc
xchg
mov
dec
sub
mov
mov
and
ja
popa
push
ret
pop
jne
sub
push
jg
add
jg
pusha
test
inc
in
add
xlat
adc
push
aas
adc
div
enter
pinsrw
pop
aas
push
mov
inc
mov
mov
mov
xor
pop
in
test
cld
(bad)
enter
in
push
xor
jb
inc
sbb
rol
and
or
xor
or
push
sbb
clc
inc
inc
clc
or
sbb
aas
adc
add
and
xlat
jg
fsub
or
and
mov
and
cmps
dec
mov
(bad)
leave
add
pop
clc
push
cmc
cmp
pusha
(bad)
dec
xor
sbb
jmp
daa
push
or
push
lahf
and
push
push
inc
inc
inc
pop
ret
pop
xchg
ror
aam
jmp
sbb
add
leave
or
inc
inc
dec
aas
retf
and
sbb
ret
dec
retf
lahf
sbb
dec
inc
and
xor
pusha
adc
and
sbb
add
arpl
push
cmp
xchg
(bad)
mov
mov
lods
or
jg
jecxz
lods
adc
inc
ror
cli
adc
inc
cdq
add
movs
adc
dec
and
pop
pop
pop
test
inc
loop
inc
sbb
sbb
add
inc
jno
sbb
mov
adc
sbb
mov
sbb
inc
les
pop
sbb
ror
call
xchg
loopne
push
movs
add
sbb
mov
mov
test
and
nop
jno
imul
fld
inc
sbb
inc
fmul
icebp
clc
inc
jbe
inc
and
aad
popf
clc
add
pushfw
fsubr
iret
mov
xchg
push
mov
mov
shr
retf
mov
xadd
loopne
mov
sar
sbb
mov
push
sbb
push
leave
xor
xchg
adc
mov
cmp
inc
rcr
ret
rcl
mov
cmps
pop
adc
xchg
out
mov
fsubr
nop
adc
int3
jnp
cmp
dec
inc
mov
fmulp
mov
or
add
(bad)
pop
fadd
xor
ins
shl
inc
push
sbb
das
mov
xor
mov
xor
ins
mov
push
mov
ins
daa
fwait
mov
ss
xchg
mov
pop
or
mov
adc
push
out
outs
cmps
lods
adc
jbe
fist
test
ins
fild
push
jb
pushf
imul
sub
sub
mov
mov
mov
mov
and
test
movs
aam
xchg
shl
adc
mov
xchg
iret
mov
dec
push
and
push
inc
mov
movs
and
fstp
dec
enter
arpl
jmp
daa
cmps
nop
sub
and
popa
xor
sti
dec
lea
pop
xchg
mov
or
push
mov
pushf
clc
push
ins
inc
sub
xor
add
and
lock
inc
dec
add
jmp
push
inc
das
or
adc
pop
and
add
lods
add
mov
add
mov
mov
sub
clc
fsubr
xor
cmp
rol
sar
test
pop
mov
push
add
dec
or
lds
push
dec
das
cmp
ret
push
and
xchg
pop
push
or
movs
push
and
or
sbb
enter
mov
xchg
pop
add
adc
mov
inc
aam
aas
int3
jno
pop
jno
xchg
int3
or
nop
out
sub
and
stos
aam
xchg
lea
lar
add
clc
add
sbb
sar
rol
(bad)
push
arpl
loop
add
sbb
shr
cmp
or
cmp
xchg
add
pop
fnstcw
xchg
adc
mov
add
ror
push
and
mov
and
jo
adc
push
or
adc
or
(bad)
ss
push
mov
adc
xor
add
mov
add
mov
or
and
shl
ss
gs
push
mov
test
pop
pop
loope
ret
ss
xchg
or
or
rol
xor
pop
ret
lahf
and
nop
das
fimul
stos
popa
or
fmul
push
add
popa
xlat
dec
pop
and
pop
jbe
lahf
add
push
popa
push
(bad)
cmp
inc
xor
push
shr
clc
nop
jle
push
(bad)
fwait
sar
xor
push
test
fadd
push
loope
shl
sbb
jae
mov
or
dec
push
(bad)
outs
inc
sbb
or
jne
leave
je
lods
sub
jno
add
fcom
lock
add
pop
mov
test
cmp
jle
mov
xor
cs
ror
push
push
cdq
call
or
mov
push
cmp
mov
arpl
scas
clc
push
inc
add
pop
lea
push
add
aas
rol
inc
push
rcl
mov
inc
push
inc
and
xchg
mov
cwde
and
inc
dec
(bad)
jne
popa
or
loope
xor
or
and
stc
jg
aas
enter
xor
or
dec
shr
jbe
fldenv
sub
mov
pop
sbb
mov
mov
xchg
pop
rcl
jge
xchg
cmp
pop
adc
outs
push
cmp
es
hlt
lahf
leave
or
pop
xor
jne
sbb
outs
int
mov
(bad)
jmp
jns
push
adc
jae
rcl
inc
add
hlt
inc
inc
and
sbb
sub
mov
mov
aad
inc
xchg
loopne
xchg
and
enter
dec
ret
xchg
retf
shl
loope
stos
repz
test
push
mov
leave
nop
cmps
jl
arpl
pop
fdiv
mov
fwait
and
or
fstp
aas
aam
sub
shl
sbb
sbb
shld
je
mov
sub
call
fcomp
es
push
sub
cmp
or
adc
push
sub
pop
adc
push
mov
test
sub
and
pusha
add
mov
test
pop
dec
pop
fnstcw
xchg
enter
mov
retf
out
cmp
xchg
call
retf
retf
retf
popf
mov
lods
lods
pushf
sbb
test
clc
sub
add
or
dec
mov
add
push
mov
adc
movs
add
rol
mov
loopne
add
test
aad
adc
fiadd
mov
cmp
imul
xor
mov
loope
adc
add
add
or
push
xor
shl
xchg
ins
xor
lock
stmxcsr
lods
xchg
jbe
push
and
or
fnstcw
push
add
and
add
mov
shl
jg
fs
sbb
pusha
jmp
movq
out
(bad)
(bad)
pop
movapd
push
clc
jae
xor
idiv
push
push
add
push
ror
push
dec
cmp
mov
jge
repz
clc
jecxz
imul
or
dec
mov
xchg
ret
adc
(bad)
jnp
mov
push
mov
and
sub
adc
push
inc
push
push
xor
(bad)
leave
cmp
pop
add
mov
mov
mov
pop
sti
rol
jo
addps
int
std
into
gs
sub
ret
adc
dec
sbb
inc
pop
adc
pushf
call
ret
loopne
(bad)
mov
or
dec
(bad)
ins
mov
dec
ret
and
push
stc
push
push
inc
jmp
arpl
pop
arpl
and
jae
mov
arpl
xor
in
out
add
push
(bad)
sub
ins
lahf
je
ins
in
popa
sub
mov
sub
leave
ret
aaa
loop
pop
mov
xor
pop
lahf
je
outs
clc
sub
in
fld
fld
sbb
jl
cmp
ins
pushw
inc
lock
xor
jmp
fst
pop
add
cwde
mov
xor
add
adc
dec
fwait
inc
mov
cmp
fcomp
inc
mov
test
mov
and
dec
jg
pop
dec
add
push
add
lds
sbb
xor
add
sbb
aas
pop
mov
push
adc
add
mov
sbb
pop
inc
mov
test
and
jmp
adc
inc
dec
adc
addr16
push
shr
sbb
sbb
mov
dec
push
aaa
and
pop
or
or
and
(bad)
mov
rol
call
in
inc
jb
cmp
adc
adc
add
and
loope
loope
pop
jbe
fidivr
(bad)
movs
push
xor
ror
rcl
xchg
clc
add
dec
test
clc
call
cdq
loopne
add
dec
aas
cmp
nop
add
jecxz
pop
xchg
xchg
or
push
mov
adc
je
inc
fadd
ins
and
cdq
adc
and
sbb
and
add
inc
mov
out
adc
push
add
rol
or
push
enter
aam
sub
and
sbb
add
xchg
xor
mov
sub
jmp
sbb
cs
stos
push
push
pop
pop
clc
pop
mov
xor
sbb
int3
jmp
inc
or
sbb
sbb
pop
inc
or
call
sbb
jg
add
rcr
add
or
cmp
addr16
inc
das
and
add
push
cli
add
mov
icebp
jb
neg
xchg
rcl
pop
add
shl
adc
mov
enter
ss
ror
imul
lock
dec
jmp
les
adc
mov
cmp
lods
cdq
pop
xor
mov
call
xor
les
push
sbb
lods
jnp
xchg
sbb
aaa
push
dec
mov
push
sub
nop
mov
xchg
into
or
and
pusha
mov
pop
and
push
add
sbb
fs
test
jle
sbb
daa
xor
leave
add
dec
jo
and
pop
pop
data16
inc
add
mov
in
inc
add
mov
std
mov
or
popa
xchg
add
js
adc
(bad)
dec
adc
push
clc
push
inc
or
pop
adc
bound
jmp
out
xor
les
inc
pop
push
aaa
outs
jmp
mov
push
adc
mov
ret
add
cmp
adc
femms
add
inc
pop
sub
ins
pop
mov
add
fs
lods
dec
xchg
dec
leave
add
add
sub
out
or
or
or
pop
lea
pop
sbb
aas
adc
gs
add
mov
jg
xchg
test
les
aas
sub
(bad)
mov
bound
add
shl
xor
mov
pusha
sar
in
sbb
cli
dec
fimul
or
mov
xchg
pop
push
sub
inc
xchg
icebp
rcl
fwait
test
mov
and
mov
push
inc
(bad)
(bad)
jp
fwait
xor
xor
pop
pop
jg
add
pusha
or
or
fld
add
je
mov
jnp
jnp
hlt
sbb
cs
out
push
sbb
and
clc
xor
add
inc
call
int3
add
shl
sbb
add
not
movs
push
fucomp
dec
cld
xor
cmps
dec
mov
cwde
mov
call
mov
movs
leave
xchg
inc
push
cdq
add
cmp
and
adc
cwde
dec
add
pop
and
xchg
adc
jge
lock
and
sbb
mov
adc
and
jmp
call
sbb
pop
mov
in
mov
dec
clc
bound
sbb
adc
and
mov
in
pop
repnz
adc
dec
loope
data16
add
jmp
sub
adc
mov
and
add
cwde
push
push
lahf
mov
dec
sub
pop
jno
fwait
rcr
mov
add
mov
add
adc
leave
add
add
add
mov
lea
in
scas
sub
add
aaa
aad
pop
arpl
jmp
fdivr
push
js
mov
cmp
test
inc
(bad)
mov
and
jo
call
mov
cmp
scas
xor
mov
sub
mov
and
sbb
and
or
fiadd
ret
ret
jg
adc
xor
les
mov
fstp
popa
push
push
mov
ja
pusha
push
outs
mov
or
rol
je
retf
or
les
adc
inc
push
cmp
lods
stos
ror
xor
xchg
inc
cmp
jmp
lods
push
out
ret
aam
hlt
sbb
adc
fdiv
mov
and
fsubr
shr
fdivr
ret
jle
cwde
or
popa
sbb
and
mov
mov
loop
adc
mov
shl
adc
setbe
jo
or
or
or
sbb
or
sbb
sbb
push
je
mov
rol
mov
and
pop
or
dec
adc
sub
inc
xchg
mov
fsub
rol
hlt
or
mov
mov
jb
add
dec
sub
add
xor
mov
and
mov
xchg
movs
mov
pop
ret
(bad)
fdiv
ret
test
cmp
les
mov
call
ret
and
mov
add
or
mov
jbe
mov
or
adc
clc
ret
add
test
shr
push
add
mov
xchg
lock
pop
sbb
bound
and
paddsw
test
lds
fwait
add
test
pop
lahf
ror
xchg
sub
mov
inc
add
and
leavew
cmp
stos
push
xor
and
repnz
jecxz
jo
mov
add
sahf
rcr
mov
sbb
adc
sbb
(bad)
imul
sbb
sbb
cmp
test
rol
mov
imul
add
jns
add
in
mov
mov
fs
call
dec
adc
jns
call
sbb
jg
dec
and
adc
jg
add
push
dec
mov
xchg
xchg
xchg
mov
xchg
xchg
ins
mov
or
add
(bad)
(bad)
xor
mov
test
dec
push
aad
je
jo
or
xor
inc
mov
mov
mov
jo
add
jmp
outs
mov
mov
or
imul
sbb
xor
push
dec
movs
and
pop
int3
mov
push
jns
mov
mov
or
adc
dec
jo
and
cmp
jns
push
push
cmp
sbb
sub
sub
cmp
mov
push
shl
in
jmp
xchg
or
adc
fadd
dec
sub
jae
sbb
fldcw
mov
or
push
gs
dec
jmp
movs
pop
movs
out
push
mov
pop
add
xor
dec
pop
fcmovb
push
or
out
push
stos
adc
jae
lock
mov
minps
cld
test
dec
js
dec
sub
mov
dec
pop
adc
aam
(bad)
nop
adc
pusha
add
adc
cld
fild
pusha
sub
ror
mov
add
cld
imul
and
in
add
shl
or
dec
ins
and
sub
sub
test
or
je
les
lock
scas
sbb
hlt
sbb
shr
fild
lock
jnp
ror
jmp
or
and
xchg
and
setg
retf
xor
lahf
or
and
adc
and
inc
dec
dec
lock
sbb
mov
pop
add
in
sub
adc
push
xor
xchg
sbb
sbb
mov
sub
mov
push
sub
push
sbb
sub
or
sub
lods
xchg
and
icebp
icebp
ins
jb
add
dec
arpl
fcom
cmps
xor
and
sbb
push
movs
enter
jg
stc
cmp
dec
adc
nop
sub
nop
aas
push
mov
cmps
loopne
cmps
sub
add
test
mov
push
mov
rol
add
jo
sbb
adc
popa
or
clc
in
or
add
in
cli
adc
inc
popw
lods
push
mov
mov
inc
and
push
mov
and
(bad)
mov
dec
pop
add
imul
cwde
es
aam
push
or
push
sbb
mov
sbb
test
test
xor
sbb
hlt
sub
push
inc
and
test
sub
rcr
mov
pop
add
in
sbb
xor
je
nop
out
add
add
mov
sub
jno
movhps
test
stc
jb
ficomp
push
xor
ins
inc
xchg
movs
cmps
mov
mov
cmp
rcl
pop
adc
pop
jo
loope
push
fild
dec
inc
adc
cmp
in
mov
and
mov
test
rol
or
jae
push
jb
loopne
pop
mov
jp
or
adc
fdivr
sbb
or
dec
dec
push
xchg
adc
pop
icebp
in
je
icebp
fild
lea
movs
jbe
arpl
sbb
js
add
add
dec
inc
dec
loope
test
mov
adc
rol
js
add
fadd
cmp
lahf
add
or
in
sub
les
adc
dec
mov
push
pop
(bad)
mov
and
fld
leave
enter
mov
add
dec
cmp
and
add
or
test
les
jb
pop
rol
push
test
jl
jne
adc
adc
or
std
fld
xchg
mov
out
add
add
jb
dec
sbb
scas
add
jmp
repnz
add
icebp
in
lods
aam
rcl
loopne
loopne
xor
adc
cmp
fisttp
and
add
call
and
mov
mov
cmp
add
inc
push
lock
pop
add
jge
mov
aas
adc
and
loope
ja
jno
xchg
ret
dec
loopne
push
push
test
and
or
xchg
jbe
and
or
push
inc
fild
push
imul
mov
push
inc
and
inc
shl
and
cmp
and
neg
dec
xor
adc
sbb
mov
xchg
add
adc
ds
sbb
mov
mov
xor
xor
add
add
enter
sub
test
test
mov
mov
jp
mov
and
in
in
push
adc
scas
or
in
or
pop
adc
add
push
outs
add
sub
sti
pop
mov
lods
add
imul
and
ficom
cmp
lock
ror
fucom
mov
lock
dec
js
in
in
push
push
popa
push
cmp
movs
pop
pop
mov
mov
js
adc
out
add
push
mov
adc
mov
push
jmp
aad
or
inc
and
dec
and
cmp
push
outs
mov
and
xor
mov
pop
jb
jo
push
push
xor
mov
and
repz
push
adc
retf
cmps
mov
pop
aas
xchg
gs
mov
cwde
inc
pop
rol
add
stc
inc
sub
bound
call
sbb
pop
xor
push
(bad)
pop
push
mov
call
jae
or
inc
dec
push
push
adc
mov
add
(bad)
or
pop
ins
mov
add
adc
jg
pop
jmp
and
xchg
push
mov
shr
(bad)
(bad)
test
push
(bad)
mov
cmp
aaa
icebp
xlat
adc
inc
push
sbb
addr16
pop
mov
cmp
push
dec
test
jmp
pop
mov
test
sub
loope
mov
xchg
mov
pop
adc
xor
inc
add
mov
push
jo
cmp
psubq
sbb
test
lahf
mov
pusha
aas
pop
int3
retf
push
add
and
aas
sahf
js
inc
cld
icebp
mov
mov
sub
inc
sub
pop
psraw
push
test
or
push
mov
sbb
ins
lea
dec
popa
inc
loopne
xor
push
or
sbb
mov
mov
ror
call
inc
sbb
pushf
jmp
dec
outs
js
add
fs
dec
sar
mov
cmp
adc
add
hlt
and
cdq
pushw
mov
mov
adc
icebp
jmp
out
das
sbb
push
dec
pop
rcr
mov
and
ret
dec
xor
mov
je
mov
(bad)
fbld
sub
mov
or
adc
add
dec
add
push
call
in
movs
sub
int3
call
push
push
jmp
and
or
sbb
pop
pop
sub
cdq
xor
add
inc
movs
sbb
adc
lock
je
aas
pop
xchg
mov
jne
pop
jmp
jl
rol
ja
cs
cmps
dec
ror
and
and
loope
add
mov
sbb
dec
push
pop
xor
push
and
inc
mov
das
inc
inc
loopne
cli
aad
push
mov
sub
push
add
outs
in
and
jne
pop
push
das
push
clc
and
or
sub
je
push
jl
mov
(bad)
ficom
cmp
test
loop
xor
pop
mov
jne
scas
push
clc
call
dec
shr
inc
or
xor
mov
sbb
cmp
pop
popf
adc
call
or
shl
and
jge
mov
and
or
jl
pop
pop
inc
adc
hlt
mov
mov
and
loopne
clc
lahf
push
xor
mov
jg
jmp
sub
adc
add
stos
sub
mov
lahf
mov
icebp
pop
pop
pop
and
or
cwde
xchg
loope
dec
jmp
cli
jle
mov
mov
mov
test
lea
out
rol
rol
add
adc
test
push
mov
fsub
dec
cwde
mov
push
mov
bound
pushf
inc
sbb
or
mov
ret
in
sub
add
sbb
adc
add
or
cld
(bad)
stos
adc
add
jo
add
push
lock
push
pop
test
mov
adc
dec
add
aas
aam
test
iret
sbb
cmp
mov
or
or
frstor
pop
mov
and
inc
push
sub
or
(bad)
pop
sub
cld
jae
sub
add
dec
je
adc
push
push
sub
xchg
icebp
mov
js
stos
mov
clc
xor
xor
leave
push
lock
jb
test
nop
inc
imul
int
add
test
cdq
xchg
cmps
xor
add
ror
cmp
sbb
cdq
jb
jae
mov
ror
sbb
popa
dec
mov
sub
in
jb
ins
mov
xlat
add
clc
push
(bad)
fst
adc
cmp
mov
(bad)
(bad)
int
push
imul
in
in
jg
clc
or
pop
mov
add
add
mov
and
or
xor
sbb
add
pop
sub
movs
in
push
push
sub
sbb
js
fild
push
cmp
arpl
mov
or
dec
jl
cmc
mov
sbb
lahf
xchg
push
jb
jne
push
dec
aam
pop
clc
or
cli
push
aad
leave
std
push
pop
gs
or
lock
add
pop
inc
aaa
outs
xor
jg
add
or
and
jle
call
jbe
cmp
icebp
fcom
push
pop
jb
in
movs
xchg
repz
push
pop
and
xchg
xor
(bad)
cmovs
jne
adc
test
xchg
popa
xor
aam
ret
mov
rep
xchg
sub
and
mov
mov
push
loopne
add
test
and
pop
aas
jl
jnp
push
test
cmp
fs
mov
rol
and
ret
mov
or
scas
adc
add
dec
push
dec
dec
inc
movs
stc
add
pop
inc
mov
inc
clc
cmp
xchg
or
out
lock
call
repz
enter
in
inc
(bad)
in
iret
repz
call
lock
repz
hlt
clc
clc
cld
outs
shr
fmul
clc
idiv
jmp
and
lock
inc
mov
ret
nop
inc
pop
shl
adc
and
vpunpcklwd
xor
jl
cld
or
or
and
std
(bad)
cld
out
mov
push
sbb
pop
neg
shl
fbld
jbe
retf
sub
inc
mov
adc
fiadd
jl
mov
out
jnp
mov
lea
jnp
push
xor
push
or
pop
nop
dec
dec
addr16
sbb
gs
adc
push
je
test
mov
repz
sahf
out
ficomp
sbb
adc
adc
out
adc
or
xor
out
add
inc
shl
push
fsubr
es
or
inc
outs
push
inc
add
inc
mov
sub
cmp
sub
rcr
xor
mov
pop
cli
push
sbb
or
add
push
repz
jae
stos
xor
sub
jbe
ins
adc
inc
xchg
mov
sub
mov
bound
in
and
sbb
fwait
mov
mov
int
rol
jmp
inc
enter
jge
dec
pop
push
sbb
stc
push
inc
sub
jmp
mov
mov
push
ror
sahf
pop
or
or
call
ror
push
mov
dec
sahf
add
jmp
rcl
es
ror
dec
movs
adc
test
stc
push
and
stos
fxtract
stc
movd
push
popa
lahf
pop
cwde
clc
les
push
push
sahf
mov
aaa
je
push
push
cmp
sub
inc
or
push
shr
push
sub
stos
movs
fist
ins
add
push
add
adc
loop
pop
jp
fisttp
sub
movs
jae
sbb
fist
add
pop
jg
add
jb
xor
fbstp
mov
jle
pop
or
push
push
xlat
dec
xchg
pop
mov
rol
add
jmp
shl
push
mov
xchg
mov
add
ret
inc
jp
add
sub
bound
push
mov
mov
test
inc
aaa
push
and
jge
enter
cld
mov
cmp
jge
imul
mov
jl
sbb
or
inc
or
add
mov
mov
cld
je
or
rol
repz
add
mov
out
push
mov
adc
ud0
test
or
xor
je
jg
jno
fidiv
jne
and
push
mov
shl
fnsave
fisttp
pushf
inc
mul
je
arpl
repnz
ret
push
in
jmp
je
mov
add
xor
inc
push
pop
add
pop
ficomp
xor
pop
and
jmp
sbb
pop
jo
enter
jp
(bad)
pop
call
aas
ret
sar
rol
push
push
lock
das
push
fldenv
sub
push
push
adc
mov
add
loop
jp
gs
or
lods
dec
sub
and
push
lock
or
push
xor
ror
xchg
jg
pop
enter
fs
pop
hlt
jle
mov
inc
outs
push
pop
add
or
jnp
loope
arpl
add
add
pop
push
mov
ret
or
bound
dec
stos
lods
xchg
jmp
gs
ret
sbb
inc
xchg
or
mov
dec
mov
les
bound
pop
and
inc
or
or
imul
sub
push
sbb
data16
addr16
add
xchg
add
mov
(bad)
call
push
push
mov
pop
pushf
(bad)
and
cli
pop
inc
or
mov
xchg
lock
test
mov
cmp
das
inc
cwde
and
or
fsub
frstor
std
pop
push
or
movs
(bad)
fwait
add
add
jne
fwait
test
xchg
lods
daa
sbb
add
sbb
or
call
scas
mov
or
jb
push
add
fcomp
and
sub
add
(bad)
fadd
cmp
pushf
nop
sbb
or
shl
hlt
add
sbb
call
pusha
sbb
sbb
cwde
ja
cmp
movs
adc
and
and
and
neg
mov
cdq
jecxz
add
or
sbb
pop
xor
inc
adc
loope
lods
push
mov
adc
jae
mov
or
ffree
(bad)
jmp
arpl
js
ins
add
(bad)
shr
push
cs
inc
xchg
fcmovnb
adc
mov
mov
lock
ret
sbb
cmp
leave
lock
jno
adc
test
adc
adc
call
cdq
adc
sbb
rcr
fstp
inc
outs
stos
imul
cmp
and
sbb
sbb
div
mov
or
daa
aas
retf
popa
cmovo
daa
jmp
ret
or
ja
mov
inc
xor
and
test
cmp
xchg
dec
cmp
mov
cmps
test
movs
xchg
hlt
rol
and
jne
in
push
mov
adc
or
add
stos
test
dec
and
mov
dec
in
adc
in
mov
je
sbb
push
pop
sub
mov
inc
jne
mov
add
js
(bad)
cdq
mov
dec
mov
sbb
sbb
enter
inc
and
jmp
add
mov
lods
or
stos
mov
mov
sbb
adc
sub
and
pop
adc
mov
pop
push
adc
lds
push
adc
shr
mov
xchg
push
push
add
mov
jmp
call
mov
out
and
ins
add
aam
call
adc
scas
dec
or
mov
pop
loopne
test
push
(bad)
inc
fdiv
lea
pushf
std
adc
cmp
jp
dec
stos
dec
jmp
and
push
dec
ror
push
or
add
push
xor
enter
push
popa
cmp
and
sub
jmp
(bad)
shr
and
sub
arpl
pop
and
sub
push
loopne
mov
push
push
xor
pop
repnz
sub
inc
mov
or
enter
add
cmp
pop
inc
ret
cmp
xor
clc
mov
int3
add
and
inc
sub
inc
xor
test
in
push
(bad)
pop
adc
cmp
xchg
dec
clc
out
dec
jmp
in
xchg
jecxz
(bad)
and
clc
adc
jnp
add
dec
test
ins
(bad)
loop
add
push
fs
add
adc
dec
adc
mov
add
js
sbb
jae
and
or
clc
or
pop
adc
inc
jmp
jmp
pop
xor
adc
(bad)
movs
adc
pop
add
inc
clc
pop
add
popa
add
inc
bound
pusha
je
jne
inc
je
jmp
sbb
cmp
sub
add
dec
inc
jg
add
xlat
adc
test
jne
push
adc
imul
or
call
les
cmp
jne
and
fldenv
js
cmp
js
dec
mov
xor
and
out
stc
jmp
add
cwde
and
or
dec
dec
popa
push
mov
arpl
out
push
ins
sar
add
add
or
push
add
push
sub
popf
movs
sbb
inc
loopne
dec
add
push
or
sub
pop
lahf
sbb
cs
jg
xchg
and
push
fidiv
jg
xor
add
adc
(bad)
mov
or
add
add
jnp
ret
mov
mov
lahf
jmp
jg
mov
jne
retf
in
xor
jmp
or
mov
daa
cwde
pop
mov
jo
mov
jno
mov
lods
add
hlt
leave
or
jo
nop
push
cld
and
fbld
jp
sub
ret
or
dec
sbb
xlat
or
add
sub
imul
lea
jg
call
inc
sub
push
and
dec
les
lahf
sbb
adc
jne
sbb
and
mov
sub
or
or
(bad)
div
inc
mov
movs
cwde
jmp
in
shl
sub
pextrw
mov
add
push
push
pop
call
or
or
ret
cmp
inc
dec
cmp
pusha
add
bound
shr
pcmpeqw
inc
call
rol
shl
jnp
mov
pop
xchg
jno
sbb
cmps
addr16
sbb
adc
or
xchg
scas
imul
inc
loopne
loop
mov
mov
mov
add
pop
lds
ja
cmp
dec
les
add
push
cmc
sub
xor
dec
sub
add
add
mov
fild
clc
or
sub
jg
lods
leave
push
daa
jo
or
jno
lods
add
sub
jg
push
sbb
pop
lahf
xchg
inc
or
sbb
pop
mov
sbb
ret
push
mov
(bad)
outs
lea
inc
lea
pushf
nop
inc
pop
ins
xlat
inc
and
(bad)
xor
jae
gs
mov
sbb
or
sbb
sbb
pop
jbe
xor
push
je
push
in
jmp
fisttp
push
jo
or
pop
dec
or
enter
add
rol
mov
mov
out
push
add
push
and
(bad)
add
sub
nop
stos
add
cmps
inc
loopne
jmp
pop
leave
jmp
ins
call
(bad)
mov
cmp
les
pop
leave
aas
in
or
fnsave
sbb
jo
je
and
pop
(bad)
lods
pop
mov
mov
or
fcomp
pop
or
xchg
push
inc
dec
cmc
inc
xchg
inc
push
or
outs
sbb
xor
jge
inc
scas
add
add
in
xchg
mov
add
mov
ror
jo
add
cmp
dec
cld
adc
pop
adc
mov
adc
add
add
pop
aaa
add
add
retf
ins
rol
and
jno
sub
popa
or
jne
aas
ret
push
add
in
jne
aas
jo
add
jb
add
jns
push
jne
jb
or
fmul
add
add
cmp
aaa
mov
sbb
out
push
mov
xchg
jl
inc
outs
add
(bad)
or
mov
out
mov
inc
mov
clc
xchg
mov
lds
mov
pushf
aad
test
fwait
or
lods
adc
jecxz
push
cmp
scas
sub
jnp
es
(bad)
sbb
and
push
jl
add
pop
adc
add
sub
cmp
add
add
mov
jnp
test
mov
inc
add
mov
mov
test
mov
sbb
push
mov
or
and
clc
rol
mov
loopne
mov
sbb
add
add
inc
pop
ds
adc
jg
and
movs
loopne
into
addr16
push
add
or
adc
pop
imul
fadd
sbb
push
or
mov
add
data16
mov
cli
addr16
xchg
(bad)
call
pop
(bad)
jbe
es
adc
push
psubusw
xor
lar
movs
rcl
and
or
repnz
adc
inc
add
enter
mov
xor
inc
xchg
and
mov
repz
ins
add
jo
ret
fdivr
xor
and
int3
pop
sub
retf
and
pusha
out
xchg
and
pop
cmp
pop
jp
movzx
jb
inc
inc
aaa
int
stos
inc
data16
or
or
jb
jg
lods
jg
inc
scas
fs
sub
inc
les
retf
push
nop
pop
add
imul
cmp
test
mov
and
push
test
cwde
fmul
jno
jbe
jb
jecxz
js
sub
cs
sub
jne
(bad)
xchg
retf
mov
adc
pop
hlt
inc
push
mov
add
mov
xchg
push
adc
sub
add
sar
pop
icebp
cmc
adc
pop
dec
cmps
push
inc
xchg
cmp
in
dec
adc
mov
test
xchg
nop
sbb
jl
sub
scas
das
adc
or
rcr
cdq
jp
adc
xor
dec
cmp
mov
add
sub
mov
mov
push
ret
mov
sbb
mov
xchg
pop
das
jne
mov
push
add
dec
ret
adc
test
or
stc
xor
nop
test
bound
mov
aam
bound
clc
jge
es
xchg
pop
sub
bound
rcr
cmp
outs
or
and
in
push
jg
add
cld
push
adc
add
add
adc
ffreep
dec
dec
jo
jo
jg
sbb
add
loopne
ror
or
dec
cmp
dec
out
(bad)
jg
daa
add
nop
jg
ds
or
aas
les
mov
jnp
rcl
leave
out
icebp
retf
dec
xor
or
mov
icebp
mov
cmps
sub
push
fmul
in
(bad)
pop
test
sub
xchg
add
cwde
xchg
xchg
or
std
jo
xchg
sub
call
jg
adc
in
inc
cli
jo
mov
mov
sbb
sahf
and
jge
inc
add
jg
clc
icebp
or
loop
xor
and
and
ins
cmp
sbb
mov
fadd
adc
adc
add
sbb
and
dec
xchg
sbb
adc
xor
in
and
ret
data16
mov
mov
pop
fs
jmp
inc
inc
push
pop
std
in
ins
adc
test
call
nop
pop
mov
and
test
and
(bad)
je
mov
addr16
inc
retf
sbb
mov
and
arpl
add
enter
xor
pop
sti
and
push
sbb
ret
xchg
daa
rcl
cwde
xchg
dec
aam
aam
and
jno
and
ins
outs
add
add
shr
adc
mov
ja
inc
icebp
ja
inc
or
addr16
pop
xchg
and
mov
add
sub
in
fsub
sbb
add
not
inc
push
data16
popa
adc
mov
imul
sub
out
mov
push
(bad)
mov
lds
or
(bad)
mov
add
add
test
loope
xchg
add
or
sub
les
and
ret
or
dec
test
adc
adc
(bad)
in
dec
push
loope
push
push
test
test
xor
xor
jmp
adc
fs
rcl
add
cmp
pop
pop
mov
fiadd
retf
daa
jmp
je
(bad)
xor
lods
mov
adc
cmp
cld
and
fild
popa
sbb
add
mov
add
test
push
and
xchg
fsub
pop
iret
add
xor
iret
add
sub
and
outs
jge
xchg
mov
(bad)
add
sub
stos
movs
pop
sub
sar
(bad)
gs
xor
or
data16
aas
popf
test
clc
lds
inc
clc
cmp
daa
sbb
shl
or
and
adc
test
icebp
icebp
int
xor
test
inc
mov
push
(bad)
cmp
jns
adc
or
cdq
pop
or
adc
es
movs
jne
(bad)
lea
adc
add
mov
mov
enter
into
stos
rol
xor
push
push
arpl
das
jl
or
loopne
cmp
add
add
jne
mov
jmp
retf
mov
fldcw
add
enter
int3
shl
fwait
or
aad
and
mov
xchg
enter
daa
loop
pop
xor
retf
mov
les
dec
shl
sbb
or
xor
mov
jmp
popa
sub
adc
rcl
fld
xor
xor
arpl
mov
ret
sbb
adc
call
cmp
sub
adc
mov
and
or
jo
loop
sbb
scas
jl
mov
jae
cmps
pop
inc
repz
inc
vpextrw
inc
xor
inc
xor
mov
mov
lods
dec
frstor
jae
add
sbb
movs
push
cmp
sldt
int3
pop
mov
ins
shl
add
dec
enter
rcl
es
pop
(bad)
jbe
pop
cmps
int
test
test
movs
add
adc
push
add
xchg
adc
jge
sbb
add
jge
mov
aam
or
test
xor
movs
test
lds
or
dec
aam
push
push
outs
or
xchg
push
imul
dec
xor
addr16
push
fucomi
xchg
jb
ins
xchg
push
mov
add
mov
or
jecxz
pop
dec
cwde
ficom
cmp
pop
xchg
sub
add
jnp
jmp
sbb
test
in
and
jmp
popa
sbb
inc
ret
adc
loop
and
cmp
mov
jno
cli
and
jmp
mov
jg
and
add
dec
cld
sbb
add
add
push
ja
lds
test
mov
mov
and
sbb
dec
push
sbb
xor
pop
jp
enter
sbb
mov
fst
adc
add
adc
inc
xchg
inc
pop
pop
ret
push
or
mov
add
test
sub
pusha
push
inc
test
in
loop
cmp
aas
or
int
hlt
rcr
or
xchg
addr16
fsub
js
and
adc
dec
or
call
xchg
retf
ror
jge
or
xchg
add
dec
aas
pop
pop
retf
loope
adc
or
sbb
inc
(bad)
xchg
xchg
mov
movs
fist
mov
push
das
add
(bad)
fist
loop
mov
je
adc
dec
or
xchg
pop
les
xor
adc
adc
pop
or
sbb
mov
popf
add
add
pop
mov
jg
or
(bad)
and
daa
add
mov
test
inc
call
jmp
jno
push
push
cdq
jne
inc
jmp
cmp
retf
in
sbb
dec
cs
retf
sbb
sbb
xchg
pop
cs
and
and
sbb
push
xchg
mov
xor
in
sbb
or
fcomp
adc
jne
push
inc
loope
ficom
add
push
push
mov
les
and
jmp
jmp
add
add
rol
aad
add
ins
and
jnp
or
iret
add
scas
imul
ins
xor
pop
push
mov
(bad)
jmp
sub
jne
pop
ret
add
cld
jmp
pusha
sub
pop
cs
push
or
cli
jge
push
ja
adc
add
mov
cmps
push
pop
and
pop
inc
pop
pop
adc
mov
mov
dec
cmp
addr16
inc
mov
stos
scas
and
cmp
mov
and
shr
mov
sbb
or
pop
dec
pop
fnstcw
mov
popa
jmp
int
inc
(bad)
mov
test
sbb
ficomp
xor
out
pusha
push
inc
push
(bad)
addr16
(bad)
fcomp
inc
pop
mov
and
or
rol
push
je
sub
or
clc
cmp
add
idiv
ja
mov
lds
retf
mov
test
nop
and
fdivr
or
retf
adc
sbb
pusha
xchg
mov
in
mov
push
leave
(bad)
fsub
jbe
sbb
fdivr
push
leave
or
adc
xchg
icebp
mov
loopne
jle
pop
and
ins
ss
adc
push
adc
pop
fiadd
add
sar
mov
jno
inc
stc
and
cli
pop
pop
adc
adc
add
push
nop
ror
mov
shl
sar
movsx
push
inc
jge
sahf
or
inc
js
xchg
xchg
inc
inc
xchg
jns
jmp
mov
sar
mov
mov
sbb
push
fnstenv
outs
mov
loope
and
jno
xchg
sar
scas
dec
dec
mov
cmp
loope
rol
sbb
jl
ret
mov
mov
cmps
dec
scas
cmps
xchg
rol
cvtdq2ps
mov
sub
push
into
and
adc
lahf
or
cmp
add
enter
retf
xchg
retf
cmp
jo
add
stos
lahf
in
and
jno
loope
xor
(bad)
mov
or
fstp
or
es
mov
cmp
ja
pop
nop
or
les
jns
mov
adc
xchg
sub
scas
sbb
pop
pop
sub
or
bound
mov
adc
xor
add
push
sub
pop
inc
mov
loopne
dec
inc
pop
cmp
push
dec
fld
or
xchg
and
jmp
clc
das
clc
jb
aam
arpl
mov
das
enter
in
jge
cmp
retf
mov
call
inc
in
das
add
int3
or
out
push
test
jns
push
push
and
add
xor
fdivr
loopne
and
mov
or
add
add
(bad)
outs
cdq
or
mov
inc
sub
push
rol
or
inc
push
add
push
gs
mov
scas
xor
sub
ficom
sbb
jmp
push
dec
jmp
add
xchg
ja
test
add
add
cwde
ror
xchg
rol
fwait
cwde
push
adc
pop
shl
fistp
test
dec
or
bound
jmp
jnp
or
cld
mov
pusha
rcl
sub
add
xchg
or
cmp
inc
and
inc
out
mov
push
sub
mov
xchg
mov
sub
adc
mov
das
and
cmp
or
add
xchg
and
jle
mov
fstp
cmp
add
jg
arpl
jne
das
into
add
lea
fisubr
add
jmp
and
and
and
inc
cmp
mov
mov
aas
adc
adc
add
push
add
int3
add
push
inc
add
dec
fwait
xchg
loopne
or
mov
inc
fnstcw
sub
inc
add
je
int
adc
pop
sub
push
pop
or
pop
mov
test
fs
out
jecxz
and
xor
xchg
cmp
idiv
gs
xchg
mov
add
dec
adc
pop
sti
jno
ins
jmp
jae
retf
js
pusha
mov
mov
jnp
pop
sbb
jmp
dec
sub
pop
jp
ret
js
arpl
bound
mov
addr16
jge
mov
test
add
jo
inc
xchg
pop
pusha
fsub
xor
add
lea
add
adc
push
adc
add
sbb
fcomip
mov
jno
stos
xor
nop
jne
and
cmc
rol
(bad)
in
gs
imul
(bad)
cmp
sbb
das
cmp
int
pusha
loopne
fild
jge
push
addr16
div
or
mov
scas
cdq
loopne
lods
int3
daa
pusha
adc
mov
add
inc
push
xchg
mov
pusha
adc
movs
mov
jmp
test
inc
out
in
addr16
aas
inc
test
(bad)
jmp
call
adc
retf
cdq
mov
mov
je
mov
clc
mov
bound
dec
push
push
mov
sub
or
sbb
push
xor
adc
lock
jno
dec
xchg
leave
or
cmp
lahf
stos
dec
or
adc
add
adc
add
or
or
in
in
inc
jecxz
add
or
mov
dec
pop
les
inc
or
and
stc
cdq
cli
sbb
lods
cmp
dec
movs
fld
or
push
call
movs
inc
jno
jg
and
sbb
cdq
cmp
jmp
movsx
retf
imul
retf
jno
lea
push
iret
add
stos
xchg
add
push
mov
jb
and
xchg
add
neg
dec
sbb
mov
retf
ror
stos
push
scas
sbb
add
push
fisttp
scas
sti
aam
sub
adc
adc
adc
pusha
test
int3
and
xor
sub
movs
sub
pop
retf
mov
add
enter
add
mov
retf
adc
aas
or
mov
adc
outs
cdq
call
xor
pop
push
and
xchg
sub
mov
sub
xor
fcmovb
dec
add
rol
gs
cmp
sbb
retf
and
out
fsubr
push
jne
test
adc
mov
dec
xchg
int3
ins
add
xor
sbb
mov
pop
dec
adc
not
dec
sbb
dec
dec
pushf
call
dec
push
lock
sub
movs
cmp
add
in
in
or
sbb
jmp
mov
rol
fsubp
cwde
rcl
mov
pop
test
pop
cmp
lods
dec
adc
add
dec
add
pop
fimul
adc
daa
in
push
pop
stos
push
and
aam
adc
iret
jge
les
fcomp
and
js
jge
imul
pop
sub
add
clc
adc
(bad)
pop
iret
adc
scas
sub
or
inc
push
daa
test
sub
aad
imul
fwait
or
leave
dec
fist
sub
bound
loopne
pop
stos
lock
test
in
pop
jmp
xchg
or
lds
sub
clc
cmp
cmp
sbb
push
hlt
push
add
mov
shl
dec
inc
jg
cmp
les
pop
xchg
es
shr
jge
push
mov
cmp
retf
clc
or
adc
push
add
pop
jb
sub
mov
retf
pop
test
inc
shr
add
xchg
sbb
or
aas
sub
cmp
inc
jmp
jmp
xor
mov
inc
push
(bad)
dec
das
mov
jae
pop
cmp
mov
aad
push
(bad)
rcl
leave
sbb
test
test
xchg
add
and
jno
aas
add
mov
xchg
mov
test
les
push
cld
repz
add
xor
xchg
cld
add
push
push
mov
push
xchg
loopne
jmp
jmp
and
add
and
hlt
fwait
hlt
in
ins
xchg
or
xor
lock
xor
xchg
mov
and
js
ja
imul
mov
mov
push
daa
cmp
jae
mov
pop
cwde
cmp
adc
or
adc
add
sbb
pop
ins
pop
sub
add
sbb
add
sub
mov
sbb
sbb
js
pop
cwde
add
sbb
sbb
sbb
aam
in
sbb
or
inc
mov
cmp
shl
pop
mov
in
push
gs
rcr
cmp
hlt
loope
dec
sbb
inc
jmp
iret
fcom
cmps
sub
fmul
pop
test
in
je
and
cmps
mov
rcl
loopne
push
int3
je
in
test
std
sar
push
pop
push
inc
jmp
pop
retf
rcl
inc
lods
arpl
inc
cmp
adc
xor
cmp
add
jmp
adc
jae
pop
pop
cwde
push
cmps
jb
push
inc
jmp
and
or
shl
adc
cmps
and
pop
cmp
clc
xchg
test
jb
xlat
jne
sbb
jecxz
add
or
cwde
mov
sub
inc
sub
xchg
add
ret
and
push
lock
sbb
inc
xor
cmp
mov
gs
cdq
in
xchg
cmp
nop
(bad)
mov
cmp
or
mov
outs
(bad)
push
jnp
xchg
pop
add
xchg
jae
xchg
inc
imul
test
or
fdivrp
xchg
push
aaa
bound
and
xor
jbe
jnp
add
hlt
ins
jmp
xchg
adc
lahf
aaa
and
movs
inc
mov
aaa
scas
cmps
jge
jno
jl
ins
push
lea
call
popa
in
fld1
jmp
aad
gs
inc
pop
jmp
adc
ins
nop
xchg
aas
bound
inc
test
lods
xor
push
dec
icebp
or
rol
add
mov
fisttp
jge
and
test
jge
and
and
jbe
sbb
ins
add
and
es
xchg
mov
inc
push
inc
add
sbb
pop
rol
rol
aam
inc
or
push
adc
and
or
in
sub
mov
add
cmp
xchg
cmp
ficom
pop
or
aas
add
inc
mov
jae
loopne
sub
cmps
add
adc
pop
cwde
es
dec
adc
jae
adc
je
xlat
int3
fisubr
pop
mov
pop
cmp
cmp
rol
rcl
and
sbb
lds
jne
loop
mov
mov
pop
(bad)
je
fwait
xor
mov
or
add
inc
hlt
pop
aam
imul
pushf
and
or
add
pop
mov
xor
dec
ret
mov
(bad)
clc
mov
push
int
or
cmps
and
lahf
enter
mov
add
rcl
enter
add
add
lock
and
pop
or
std
subsd
int
out
xchg
adc
rcr
xor
adc
xchg
push
repnz
mov
mov
inc
add
sbb
loopne
adc
rcr
push
shl
push
push
(bad)
inc
mov
and
(bad)
out
inc
test
stc
or
push
cs
dec
fmul
and
rol
adc
scas
jg
cmovno
pop
jl
arpl
xchg
mov
sbb
stos
xchg
loop
jl
(bad)
adc
jmp
xchg
jbe
or
rcl
or
push
test
daa
inc
mov
push
add
in
jg
test
popw
add
and
fs
mov
pop
ror
shl
hlt
and
xchg
iret
cdq
cwde
xor
add
add
or
jo
leave
loopne
dec
adc
ret
inc
imul
dec
add
mov
adc
xchg
mov
movs
add
and
pop
sub
dec
and
leave
rol
mov
fldcw
sub
xor
or
adc
mov
(bad)
ret
cs
inc
and
dec
popf
es
dec
mov
mov
inc
mov
ret
and
fld
cmp
or
test
xchg
dec
les
xor
jbe
or
retf
dec
add
dec
scas
xchg
or
sbb
fild
int
enter
sbb
or
add
add
sub
push
movs
pusha
ret
mov
xchg
idiv
inc
push
mov
sbb
xor
or
sbb
and
loop
ret
repz
jno
inc
inc
jl
add
ret
xor
sbb
sub
addr16
mov
or
rcr
push
mov
lea
ins
mov
dec
xor
mov
test
inc
adc
dec
outs
neg
add
aaa
test
xor
pop
pop
(bad)
mov
stos
pop
sub
dec
fisttp
cmp
mov
jecxz
dec
or
pop
adc
and
push
cmp
inc
push
pop
cmp
add
fidiv
cmps
and
and
dec
int3
add
jmp
hlt
or
jmp
mov
dec
in
or
add
mov
pushf
movzx
popa
sbb
test
mov
test
aas
and
xchg
jle
jg
jb
add
lods
mov
(bad)
aas
pop
aad
std
(bad)
push
ror
sub
ror
jg
movs
fmul
xchg
add
jg
sbb
sub
xchg
movs
js
ret
fs
push
or
dec
sbb
or
jae
js
fst
jne
retf
je
adc
adc
push
xlat
jmp
pop
add
push
push
mov
or
pusha
div
retf
add
xchg
adc
ret
adc
mov
and
jne
and
scas
ror
mov
les
adc
inc
cld
leave
push
nop
push
mov
lock
mov
daa
test
je
cld
jns
addr16
and
fadd
aam
xchg
pop
add
mov
inc
cdq
mov
and
inc
lahf
icebp
ins
add
mov
inc
cmp
pop
nop
ret
and
add
and
inc
jecxz
popf
not
adc
push
loop
arpl
sub
adc
stos
xor
or
push
enter
outs
aam
and
jb
add
mov
lahf
add
(bad)
mov
inc
mov
cmp
jno
and
jb
aam
mov
mov
mov
enter
fcomp
mov
xchg
outs
xchg
rcl
adc
or
and
pop
or
ror
ret
adc
rcl
mov
sbb
int3
xchg
mov
mov
enter
or
add
movs
and
or
dec
jmp
push
cmc
cdq
or
or
mov
cld
jge
adc
push
sar
retf
movs
mov
mov
sub
pop
add
or
and
add
inc
enter
lock
add
adc
sub
les
(bad)
je
dec
cmp
orps
sti
mov
mov
mov
sbb
ret
cmp
sahf
cmps
popa
inc
popa
push
ja
dec
(bad)
jmp
add
add
rcl
add
sar
test
sbb
or
dec
mov
sub
test
and
ins
jmp
rol
jbe
xchg
push
out
fiadd
pushf
or
mov
jl
adc
push
jg
add
mov
and
(bad)
dec
sbb
pop
jecxz
add
(bad)
and
sub
test
pop
push
test
or
mov
(bad)
rcl
and
dec
dec
sbb
jmp
dec
cmp
cmp
les
mov
and
cld
adc
dec
sbb
pusha
sar
or
cld
or
mov
or
aam
neg
sar
dec
leave
mov
push
mov
xor
jg
mov
and
lds
in
dec
mov
inc
pushf
inc
sbb
and
movs
xchg
and
xor
adc
out
bndstx
inc
test
adc
pusha
or
mov
and
add
or
sti
push
das
or
dec
leave
mov
push
and
dec
or
mov
cmp
sbb
sbb
cdq
mov
fidiv
and
mov
push
andnps
xchg
mov
cmp
add
mov
mov
lods
sbb
sub
add
movs
repnz
cwde
cwde
xor
push
test
leave
adc
lds
mov
add
test
inc
and
leave
popa
add
ins
cs
clc
adc
ror
pop
dec
or
enter
or
xchg
xchg
or
enter
mov
ja
loopne
xor
jb
enter
and
push
nop
add
or
dec
cmp
call
mov
jbe
mov
dec
popa
mov
or
adc
les
adc
imul
popf
sbb
sbb
adc
movs
fsub
push
push
pop
popf
inc
inc
push
mov
or
add
(bad)
enter
push
mov
xor
and
aam
dec
and
scas
and
or
add
cmp
test
push
add
js
(bad)
rcl
nop
adc
mov
(bad)
inc
scas
add
dec
or
or
mov
pop
mov
inc
jg
dec
push
rcl
ss
push
mov
adc
sahf
add
jnp
cmps
xor
js
sbb
sbb
mov
cmp
push
mov
ret
ficomp
bound
dec
shr
pusha
(bad)
sub
outs
adc
adc
jb
test
stos
scas
(bad)
ins
add
in
and
and
mov
enter
cmp
(bad)
rol
sub
js
test
or
sbb
sbb
mov
dec
add
inc
fsub
jge
sbb
inc
lahf
add
aad
pop
mov
sbb
and
and
jae
fistp
mov
call
jo
movs
mov
psubb
loopne
sub
popa
adc
inc
punpcklbw
lock
in
mov
mov
adc
popa
mov
xor
leave
sbb
(bad)
(bad)
scas
mov
mov
xchg
and
push
inc
rcr
xchg
push
cmp
sbb
jmp
xchg
sbb
sbb
dec
push
mov
std
add
popf
add
or
sub
add
mov
add
std
adc
sbb
call
adc
push
clc
sub
jl
sbb
pop
movs
sub
inc
mov
cmps
sub
mov
cdq
and
and
nop
and
add
sbb
mov
test
mov
jo
es
jnp
adc
cld
mov
and
jmp
inc
(bad)
mov
and
cmp
inc
add
dec
or
enter
xor
loop
inc
and
inc
mov
xchg
sub
xchg
ficom
jo
stc
pop
popf
ja
and
dec
inc
mov
int
mov
out
push
ss
xchg
push
mov
pushf
scas
data16
mov
lahf
push
push
add
add
pop
fild
in
add
add
or
mov
pop
pop
or
outs
inc
adc
hlt
aas
add
dec
push
(bad)
mov
add
adc
add
or
lds
cs
cmp
sbb
xor
or
movs
or
adc
xor
(bad)
adc
push
jmp
pop
ret
jg
mov
cs
sub
jo
jge
add
dec
cdq
cmp
jae
imul
mov
push
or
jns
sub
add
sub
mov
or
dec
cld
and
frstor
inc
xchg
aas
shl
shr
test
add
icebp
cld
mov
and
imul
mov
xor
mov
imul
sti
lea
add
hlt
leave
xor
push
xor
add
jb
push
or
pop
fbld
call
lea
pop
push
mov
lea
add
jno
push
loop
mov
cdq
adc
icebp
cmp
(bad)
into
ret
pusha
adc
rol
into
mov
xchg
push
add
add
bound
xor
data16
(bad)
push
test
add
dec
(bad)
sti
sub
adc
add
fiadd
push
imul
xchg
mov
or
inc
add
push
shl
nop
retf
jmp
push
xchg
mov
cmp
test
mov
dec
add
jb
push
mov
imul
dec
cld
cwde
add
fs
cli
xor
outs
cmp
jbe
sar
clc
ja
pusha
add
pop
mov
add
push
mov
push
sub
adc
add
lahf
mov
(bad)
retf
add
cld
push
test
rol
and
jmp
sbb
sbb
scas
push
sbb
pop
or
adc
rcr
lods
or
ja
adc
adc
push
not
xchg
movs
or
push
icebp
mov
dec
popf
rol
int3
mov
cmps
xchg
cmp
scas
iret
out
or
cdq
je
ins
jmp
or
add
pop
imul
mov
xor
xchg
out
sbb
popa
inc
lahf
ins
hlt
test
add
jns
inc
inc
cs
mov
add
daa
add
mov
jmp
sbb
mov
inc
dec
push
clc
inc
rcr
es
aad
dec
mov
dec
dec
(bad)
adc
test
das
iret
and
fisub
das
xchg
in
push
scas
int3
les
cmp
xchg
add
push
and
dec
(bad)
cwde
mov
aas
mov
sub
mov
mov
or
or
or
pushf
xlat
nop
js
add
shr
or
cmp
xchg
leave
daa
xor
pop
push
add
outs
jg
fst
scas
add
push
add
sub
or
jnp
fisubr
or
xor
xor
cwde
jo
daa
dec
sbb
push
mov
lock
test
dec
add
add
(bad)
(bad)
test
mov
fbld
pop
push
add
xor
mov
or
dec
std
popa
and
daa
jne
inc
inc
cmp
add
hlt
es
clc
(bad)
shl
ret
(bad)
dec
cmps
xchg
hlt
das
mov
push
dec
mov
push
mov
xchg
and
push
dec
pop
push
cmp
icebp
inc
aaa
aad
stos
jo
push
scas
xchg
add
scas
pop
push
cmps
sahf
xchg
pop
dec
or
(bad)
add
or
mov
xor
test
pop
(bad)
jmp
stc
add
and
add
adc
outs
jmp
outs
icebp
fiadd
sbb
out
lods
clc
jp
push
push
out
sub
mov
jmp
push
push
rol
mov
xchg
add
or
out
xlat
mov
pop
push
and
or
sahf
out
out
or
jge
stos
mov
or
jns
mov
pusha
mov
inc
xchg
ins
jl
aas
push
push
cmp
or
pop
xor
or
push
jne
add
out
adc
jo
sub
or
pop
sub
loopne
mov
xchg
enter
inc
mov
adc
mov
dec
mov
and
push
xchg
(bad)
ins
lods
fstp
mov
fdiv
xchg
sbb
sar
fsubr
lea
pop
push
test
fnstenv
loopne
xchg
repnz
ror
jmp
or
repnz
rcl
enter
push
pop
xchg
or
dec
ror
cli
enter
xor
inc
jge
enter
popf
or
cmp
add
adc
into
sar
pop
adc
push
popf
jne
mov
bound
xchg
jl
pop
add
push
add
cmp
ror
lds
fmul
xor
sub
mov
stos
movs
or
adc
jl
fsubp
test
xchg
mov
xchg
or
sbb
in
in
sbb
int3
in
pusha
jno
sub
add
shr
gs
add
loopne
(bad)
xchg
jle
movs
pop
loope
sbb
and
das
fadd
dec
mov
test
xlat
pusha
jmp
popa
add
hlt
xor
fxch
push
dec
in
and
xor
cdq
push
dec
ins
ins
(bad)
jmp
inc
sub
push
xchg
int
push
adc
mov
aam
inc
mov
loopne
in
adc
mov
jmp
rcl
sar
in
inc
add
std
je
pop
push
dec
xor
sahf
jbe
or
int3
xchg
(bad)
sbb
aaa
or
inc
in
dec
cld
inc
loope
jl
jp
or
sbb
icebp
imul
arpl
fwait
test
add
fisttp
fadd
adc
and
pop
push
push
push
and
inc
lahf
cdq
mov
fcomp
pop
pusha
cli
push
sbb
jnp
xor
jmp
push
fsubr
shl
retf
sub
shl
icebp
imul
mov
mov
scas
mov
inc
jb
sbb
push
mov
push
adc
loopne
add
wbinvd
mov
dec
adc
jle
fimul
pop
fwait
and
add
mov
retf
mov
in
inc
and
adc
loop
pop
cmp
pop
ins
mov
int
pop
or
scas
fcom
mov
test
sub
addr16
mov
sub
push
adc
les
dec
lahf
adc
dec
add
or
into
mov
add
jne
into
cmp
cmp
sub
mov
retf
ror
enter
or
push
push
or
sub
or
jne
sbb
adc
cmps
xchg
jmp
(bad)
rol
and
and
retf
xor
add
ret
push
bound
jnp
out
cmp
jle
sub
cmp
xor
and
(bad)
mov
mov
or
add
sar
jg
inc
pop
dec
mov
mov
ret
inc
(bad)
fucomip
adc
and
add
xchg
popa
lea
fcom
add
sahf
les
jmp
inc
bound
dec
shl
ins
push
movs
or
xor
(bad)
lock
push
rol
les
inc
hlt
and
movs
gs
and
cbw
mov
imul
popa
inc
inc
push
dec
repz
and
popa
imul
imul
push
(bad)
sbb
jecxz
vmread
mov
push
xor
dec
mov
imul
push
retf
push
ret
cdq
push
in
retf
push
push
xchg
sub
jns
adc
js
sbb
test
xor
adc
jge
dec
cwde
add
sub
mov
or
sub
popa
jl
jg
das
add
(bad)
adc
adc
push
aam
and
adc
imul
inc
add
fild
inc
push
xchg
scas
dec
test
mov
sbb
dec
jmp
inc
mov
movs
and
sbb
mov
mov
movs
and
or
mov
adc
nop
test
add
jg
cmp
in
(bad)
and
sub
in
in
inc
push
js
mov
add
adc
inc
xor
fsub
hlt
push
stos
adc
jo
ins
daa
push
push
out
inc
inc
jl
pop
jg
sub
pushf
add
loop
pop
jmp
xor
pop
jmp
stos
scas
and
rcr
adc
add
mov
or
pop
lds
add
add
sahf
jae
aaa
sar
pop
mov
sub
ret
or
dec
ja
add
add
sub
adc
test
xlat
pusha
xor
push
ss
xor
bound
pop
clc
(bad)
jb
add
cwde
add
add
mov
popf
or
enter
fwait
or
icebp
jmp
sub
mov
add
inc
xor
mov
adc
jne
adc
adc
popa
mov
rol
pop
sub
scas
inc
adc
xor
mov
mov
loope
and
or
std
add
push
and
sub
push
test
sbb
scas
shl
fld
nop
and
cmp
mov
or
cmp
shl
int3
frstor
les
cwde
icebp
add
fadd
pop
and
or
mov
jmp
dec
retf
rcl
mov
ds
jl
mov
or
xchg
cdq
test
icebp
add
call
fld
push
rcr
test
adc
sar
cld
fild
and
cmp
mov
inc
sbb
lods
push
push
aam
jmp
pop
mov
ret
adc
fsub
(bad)
xchg
mov
adc
adc
fdiv
scas
dec
pop
and
call
push
dec
or
mov
sbb
dec
xor
pop
popa
mov
add
sub
inc
adc
ins
dec
ret
inc
sub
sbb
or
mov
mov
fisubr
sbb
mov
iret
cmp
mov
xchg
xchg
data16
movsx
pop
add
or
(bad)
arpl
and
push
mov
out
xor
test
test
mov
add
jmp
add
xchg
addr16
sbb
and
(bad)
jo
push
and
sbb
adc
add
lea
adc
rcl
and
lock
mov
pusha
ins
bound
lods
sbb
sbb
stos
add
test
mov
xchg
aam
lea
add
rol
inc
mov
int
call
ficom
and
push
push
inc
add
pop
cmp
out
mov
jo
sbb
lds
and
push
bound
lods
mov
enter
(bad)
enter
jb
dec
ficomp
imul
pop
xchg
jo
push
test
xor
stc
lock
jo
ss
push
mov
into
sub
pop
sbb
dec
push
inc
in
inc
sbb
pop
add
sub
sub
sbb
aas
mov
mov
xlat
dec
int
xchg
(bad)
into
mov
adc
ret
mov
sti
es
je
sar
jne
adc
xchg
sub
jne
rol
xor
add
and
xor
stos
pusha
pop
mov
xor
dec
clc
and
call
sub
add
inc
jl
and
sahf
loopne
jle
ret
popa
jl
xor
cmc
pop
(bad)
and
mov
sahf
gs
or
rcl
movs
aaa
loopne
sahf
add
jb
jo
rcl
pop
fwait
or
mov
jp
shl
cmp
ficom
test
adc
bound
push
push
mov
cld
fwait
and
xchg
jne
xor
sub
arpl
sbb
mov
cld
mov
out
xlat
push
stos
mov
sbb
cmp
sub
cmps
cmp
dec
or
mov
cmps
and
ja
add
jp
mov
arpl
sub
jae
mov
xchg
mov
pop
xor
int
xor
push
(bad)
dec
add
fadd
push
hlt
imul
mov
adc
es
add
push
enter
mov
es
pop
call
or
and
mov
push
sub
or
xor
lahf
pop
in
or
enter
or
inc
add
inc
push
rcr
int3
and
or
or
sbb
ja
xor
jmp
daa
dec
out
inc
adc
sbb
in
adc
jmp
mov
pop
out
sbb
enter
pop
ret
sub
mov
dec
stc
sub
add
mov
loope
rol
je
cs
mov
or
add
dec
loope
sbb
lods
add
jne
bound
push
add
and
add
jl
inc
clc
gs
enter
cmp
xchg
sbb
div
jne
push
in
mov
or
cmc
adc
mov
pusha
lea
cmc
mov
aas
movs
in
jmp
test
jo
add
cmp
cmps
(bad)
xor
mov
jmp
cmp
je
mov
xchg
add
cli
(bad)
pop
add
push
xchg
or
int
adc
dec
push
dec
call
push
lock
cmp
sti
or
inc
push
mov
push
mov
add
rol
cmp
sub
fld
add
sti
mov
sti
imul
sti
fbstp
adc
shl
(bad)
xchg
push
sbb
sub
inc
mov
xor
push
mov
lds
cmp
popf
ja
jbe
or
mov
cmp
xchg
je
and
mov
js
or
sub
push
push
icebp
mov
jne
xor
cmp
ret
outs
xchg
sbb
or
or
jmp
nop
shl
mov
jle
pmuludq
dec
test
(bad)
into
dec
popf
adc
inc
xchg
add
jmp
mov
arpl
mov
inc
movs
aam
inc
push
xor
pop
call
push
or
add
push
das
xchg
mov
mov
mov
pop
retf
and
xor
ds
ja
push
mov
pop
pop
mov
jnp
sbb
sub
or
mov
mov
out
or
sub
retf
ret
pop
and
sub
push
mov
in
xor
xchg
and
push
loope
leave
in
lds
movs
dec
jg
or
mov
pop
pop
pop
xor
mov
sub
ins
and
or
sub
icebp
or
popa
mov
pusha
loope
push
xor
cmp
adc
stos
push
or
ffreep
push
jo
and
(bad)
jb
lock
int
add
dec
add
lahf
test
lock
mov
sahf
and
loope
push
mov
mov
add
pop
adc
sti
scas
inc
and
iret
out
fld
fidiv
std
dec
jns
mov
test
add
std
cmp
jmp
in
or
sub
arpl
dec
adc
mov
adc
fmul
ret
push
(bad)
stc
ds
and
inc
and
arpl
(bad)
call
sbb
jns
(bad)
inc
rcl
pop
data16
ds
loopne
mov
or
and
adc
test
push
cwde
push
jmp
mov
cmp
or
mov
adc
xchg
or
adc
nop
add
ins
inc
mov
sub
pop
lods
sub
and
in
jbe
push
xor
inc
or
push
cmps
add
add
les
adc
jmp
push
add
mov
xor
mov
inc
shr
or
push
jbe
pusha
pop
arpl
sub
les
mov
mov
adc
push
aam
sbb
jl
les
add
adc
hlt
loope
inc
sbb
gs
xchg
shr
push
push
add
mov
cmp
inc
adc
or
add
mov
imul
(bad)
or
loope
adc
mov
jecxz
push
sahf
mov
adc
pop
mov
push
dec
and
mov
push
mov
xor
push
ret
lahf
aam
add
add
jns
sub
ret
fcom
add
or
les
inc
or
sbb
lds
ret
cmp
loop
dec
push
cmp
pop
rcl
or
mov
inc
dec
lds
sbb
aaa
and
and
jmp
cmp
pop
lahf
and
mov
mov
mov
lahf
sbb
outs
add
add
(bad)
je
or
pop
and
sub
inc
les
pop
sub
test
mov
pop
pop
fdivr
push
enter
add
add
adc
adc
inc
push
mov
rcr
mov
sbb
xchg
jecxz
ins
inc
stos
push
popf
loope
adc
(bad)
fistp
sbb
push
test
xchg
sub
lock
test
adc
ja
outs
add
jge
jg
sbb
add
add
add
test
mov
jg
push
sbb
pop
push
call
or
mov
imul
ret
ffree
xchg
icebp
scas
push
imul
pop
add
push
xchg
inc
inc
cmp
mov
sub
or
aad
add
ror
mov
std
push
imul
inc
mov
mov
pushf
lahf
xor
and
mov
and
ins
jl
ret
cmp
les
or
sub
push
mov
fadd
and
add
or
test
jb
int3
and
jmp
xor
push
push
sbb
and
(bad)
in
ror
ficom
jne
aas
in
mov
inc
cmp
dec
dec
test
jle
or
or
push
pop
cmps
mul
movs
push
shl
or
and
add
loope
rcr
or
enter
cmps
outs
call
and
add
dec
pushf
add
gs
cmp
and
sbb
ror
dec
sbb
xor
add
call
push
js
inc
or
inc
push
sbb
in
inc
in
and
movs
mov
sub
(bad)
push
inc
jl
fnstcw
push
sbb
sub
ror
mov
(bad)
loopne
mov
xchg
or
loop
mov
jecxz
rol
mov
ret
and
fmul
xor
jne
int3
aas
int3
loop
cmps
adc
and
and
repnz
cmp
enter
xor
inc
scas
or
sbb
xchg
jl
movs
mov
sub
adc
push
xor
or
loopne
sbb
adc
and
daa
aaa
adc
add
repz
sub
dec
dec
(bad)
jmp
cmc
xor
pusha
rcr
inc
cmps
dec
xor
daa
dec
aaa
jp
lea
cld
jnp
ror
inc
xchg
pop
xlat
and
mov
(bad)
fadd
jg
popa
xchg
jno
shl
mov
jnp
jne
inc
adc
dec
jecxz
dec
loopne
into
push
push
push
inc
cmp
in
pop
pop
sub
pop
int
icebp
inc
add
js
ins
or
iret
retf
mov
push
(bad)
loopne
mov
jmp
mov
mov
neg
mov
xchg
dec
js
adc
pusha
push
and
sbb
and
fisttp
or
fsubr
push
shl
sbb
pop
push
push
mov
dec
push
mov
jmp
cmp
rol
dec
nop
popa
es
in
and
or
(bad)
cs
or
nop
arpl
adc
pop
inc
mov
inc
int3
dec
add
and
xchg
or
and
xchg
sbb
cmp
js
les
outs
add
in
fadd
and
jp
sbb
pusha
mov
xchg
adc
loop
lods
cmc
or
add
mov
mov
bound
sub
mov
cmp
mov
dec
cmp
cld
sub
or
mov
mov
adc
pop
loopne
dec
stc
mov
xor
lock
add
pop
dec
fbstp
mov
add
and
add
cmp
add
scas
dec
mov
cmovge
pop
jge
xchg
mov
mov
in
mov
in
and
or
push
mov
add
sub
lock
fsubr
hlt
inc
add
and
ret
loopne
cmps
test
mov
lahf
leave
pop
ret
iret
aam
xor
inc
push
rcl
pop
ret
push
adc
mov
shl
icebp
add
loopne
imul
pusha
and
retf
sub
test
xlat
add
mov
lock
mov
add
or
xor
push
xor
test
in
sub
adc
ror
jge
push
pusha
add
dec
in
ror
(bad)
pop
sub
xchg
add
call
es
adc
ficomp
or
xchg
mov
loopne
test
loop
clc
sub
lock
and
inc
movs
shl
add
push
fld
sbb
adc
or
push
ds
push
movs
mov
inc
pop
pop
sub
xor
xchg
dec
ins
or
mov
aaa
sbb
ror
jns
pop
or
in
xor
push
mov
std
sub
nop
ret
add
jmp
pop
mov
pop
add
sub
stc
mov
adc
aam
leave
std
sti
jb
jb
or
or
ins
mov
push
push
loop
das
add
retf
or
push
dec
loope
xchg
add
mov
sbb
inc
mov
and
int
ret
test
add
pop
inc
mov
mov
mov
test
adc
shr
dec
add
pop
add
dec
popa
xchg
inc
rol
fnsave
test
cmp
shl
push
inc
popa
push
mov
les
pop
cmp
push
sahf
adc
sar
add
push
push
imul
iret
movs
and
add
add
ret
add
xor
ror
aad
and
pop
inc
or
inc
addr16
add
dec
add
clc
cwde
test
rcl
jae
dec
jecxz
test
mov
inc
or
sub
mov
xchg
mov
jmp
add
xor
or
jns
xor
pop
test
push
fwait
sbb
dec
jne
fld
dec
fsubr
sbb
xchg
fst
add
adc
inc
enter
imul
xor
and
jmp
lea
mov
xor
cmp
nop
cmps
stc
mov
push
data16
out
push
mov
jg
pusha
ja
xor
in
ret
sbb
push
pop
dec
lea
xchg
int3
mov
test
in
add
adc
add
sbb
push
call
push
nop
loopne
mov
outs
push
ss
adc
or
addr16
push
scas
or
in
sbb
xchg
mov
sbb
dec
inc
cs
je
test
sub
pop
adc
iret
mov
inc
aas
add
lods
cmps
mov
cli
aaa
sar
add
enter
int3
sbb
inc
jmp
sbb
jmp
adc
adc
cdq
mov
jmp
fs
or
imul
cs
xchg
sbb
sbb
enter
adc
adc
or
mov
add
xor
mov
push
xchg
xchg
mov
sbb
or
push
push
mov
int3
jmp
leave
enter
push
mov
push
add
mov
dec
push
rcr
pop
inc
xor
sbb
fld
enter
adc
dec
inc
cs
adc
pmulhuw
sbb
or
je
and
mov
hlt
jmp
dec
add
inc
inc
add
sub
add
mov
push
sar
fwait
or
sbb
hlt
sbb
stc
in
ds
fldcw
out
dec
out
mov
out
sahf
xlat
push
sub
xchg
stos
xlat
add
jns
ins
test
pop
out
sahf
out
mov
bound
dec
lahf
mov
jmp
cmp
shr
inc
adc
inc
inc
push
sbb
add
mov
xchg
add
aaa
hlt
adc
mov
jo
aam
jmp
(bad)
movs
pushf
sbb
xor
sbb
arpl
arpl
sub
or
leave
enter
cmp
dec
mov
fsub
or
lock
push
adc
or
and
inc
jb
(bad)
ror
lock
in
rol
loopne
sbb
dec
push
mov
add
add
xor
mov
sbb
or
sbb
(bad)
aam
lahf
cmp
fidiv
push
adc
nop
push
mov
pop
fisubr
int
add
xor
loop
adc
rol
sbb
push
cmp
or
in
fld
inc
push
push
push
cld
shl
xor
cmp
and
loopne
pop
and
in
addr16
add
addr16
imul
lds
and
or
xchg
mov
loopne
or
enter
loopne
add
imul
icebp
pop
xchg
push
ja
and
and
bound
or
push
or
mov
and
dec
sub
and
jno
jne
loopne
mov
aad
jmp
scas
and
push
hlt
adc
mov
or
in
mov
test
(bad)
adc
mov
outs
retf
ins
add
jb
cmc
test
jb
fwait
pop
cmp
clc
and
adc
mov
xor
aaa
mov
pop
sub
in
pop
pusha
adc
dec
adc
adc
fcomi
xchg
ins
in
fwait
rcl
pop
sbb
push
mov
data16
loope
inc
sub
inc
gs
call
adc
xchg
push
xchg
pop
or
add
aad
or
add
or
aas
fdiv
inc
inc
popa
in
je
mov
aam
and
lock
gs
imul
pushf
pop
push
push
das
outs
mov
or
(bad)
(bad)
leave
and
jo
push
sbb
(bad)
loope
xor
mov
ja
fdiv
repz
mov
pop
outs
(bad)
fcmovb
fiadd
fwait
test
push
push
mov
movs
mov
imul
sar
imul
sbb
outs
mov
and
ret
or
mov
gs
adc
add
movdqa
js
es
or
dec
push
add
fs
push
or
or
je
push
mov
xor
sbb
xchg
in
add
push
adc
cwde
pusha
in
jmp
rol
ror
inc
in
cmp
inc
sbb
xchg
out
inc
and
pop
nop
jnp
cmp
dec
mov
test
xchg
fcmove
mov
pop
or
xor
(bad)
aas
jmp
(bad)
push
frstor
push
aad
ins
jg
dec
mov
adc
fwait
mov
inc
das
out
xchg
jmp
popf
test
add
add
or
outs
push
popa
adc
cmp
test
and
add
xor
or
xchg
jnp
test
jns
jmp
mov
fs
push
cmp
shl
push
cmc
push
in
clc
push
jne
test
push
xor
out
ret
cmps
push
cmc
fcom
sbb
out
in
rcr
jne
sub
shr
or
adc
mov
adc
and
dec
sbb
or
ja
cmp
jo
aam
adc
out
mov
es
rcl
inc
dec
jne
or
mov
test
ror
ret
jnp
push
add
enter
pusha
jl
ror
push
pusha
aaa
ins
les
loop
cld
out
aaa
push
push
inc
shr
inc
xor
add
dec
inc
repnz
cmp
adc
mov
push
push
out
mov
aaa
mov
xor
neg
lock
mov
mov
sub
out
out
out
and
sub
push
add
test
push
cmp
mov
add
jne
lock
and
jae
in
jne
test
rcr
jmp
push
cmc
mov
jne
jns
jb
aaa
add
aam
push
xchg
push
fild
mov
lea
inc
xchg
cmp
add
pushf
cli
popf
mov
test
jne
out
imul
les
cmp
sub
pop
jle
fmul
repnz
pusha
loop
ss
jmp
cmps
dec
loopne
inc
mov
fdiv
push
adc
shld
shl
push
enter
or
scas
ret
(bad)
jl
(bad)
test
lods
rcl
jmp
aas
call
rcl
and
or
call
mov
fs
mov
mov
leave
and
sbb
sbb
sbb
mov
movs
dec
and
jg
icebp
adc
in
add
int3
imul
inc
mov
xor
jmp
(bad)
sar
shr
rcr
or
lock
jbe
adc
mov
xor
cmp
or
cmp
add
xchg
test
dec
mov
pop
and
fdiv
fiadd
adc
inc
dec
loop
movs
xchg
and
mov
leave
or
inc
inc
cmps
cmp
loope
dec
push
mov
cwde
fld
or
inc
cmps
leave
push
and
xchg
and
ret
jbe
dec
adc
rcr
mov
cmp
push
dec
or
add
rcr
jge
mov
mov
sub
cs
(bad)
or
lods
mov
clc
push
test
jmp
inc
add
clc
adc
sub
pop
lock
imul
xchg
sub
lahf
jae
sbb
jmp
call
popf
add
sbb
or
icebp
sbb
and
push
movs
ja
ss
xor
jno
dec
hlt
test
or
mov
adc
ins
outs
push
shr
fnstsw
inc
rcl
pop
push
jmp
jge
push
call
and
or
pusha
jmp
(bad)
fstp
inc
or
jmp
pop
js
lea
inc
sub
sbb
imul
iret
(bad)
ror
xchg
mov
jmp
imul
push
hlt
push
(bad)
jmp
and
inc
pop
pusha
ss
jmp
call
sub
pop
nop
sbb
mov
dec
call
hlt
out
or
inc
call
jmp
jge
das
xchg
cmp
lods
and
nop
or
sub
fadd
out
fld
add
or
xor
in
adc
xor
inc
outs
jge
arpl
pop
shr
jns
test
and
xor
dec
or
jns
sub
sub
adc
das
ins
loopne
rcl
fmul
inc
out
or
sub
adc
add
or
and
sbb
sbb
test
out
sub
out
div
inc
mov
mov
dec
mov
lods
popf
fsubr
test
xchg
and
outs
in
mov
adc
cmp
pop
push
inc
fdiv
mov
pusha
lods
inc
jle
xchg
sar
mov
jmp
data16
adc
cmp
dec
jmp
add
inc
adc
xor
or
dec
fstp
inc
add
jb
out
adc
add
or
push
sub
fdivr
push
inc
popf
push
push
xor
hlt
fldcw
xchg
and
or
jl
sbb
popf
mov
sub
adc
int
mov
inc
mov
call
jb
add
(bad)
add
mov
dec
mov
outs
or
pop
push
mov
adc
or
sbb
cmc
sbb
fistp
xchg
in
hlt
sbb
pusha
fbstp
jo
xor
sbb
int
inc
sbb
enter
test
lahf
mov
add
inc
and
jmp
add
sbb
sub
add
cmp
out
sub
jb
sbb
jecxz
push
fisttp
push
nop
sahf
or
fistp
push
js
adc
adc
cli
mov
add
lahf
jecxz
nop
icebp
(bad)
jne
inc
or
add
jmp
or
sbb
add
jmp
jecxz
movs
fld
enter
adc
push
bswap
cmps
push
sbb
add
lahf
sub
push
sbb
cmp
aas
dec
enter
cmp
and
jmp
std
add
push
(bad)
and
sbb
inc
adc
add
dec
xchg
sbb
aas
arpl
or
mov
dec
cmp
jns
push
retf
inc
push
lock
test
loope
adc
mov
pop
sub
cli
jp
or
ja
fbld
jmp
and
jne
or
xchg
inc
(bad)
repnz
push
jmp
sbb
fwait
add
cmp
addr16
sbb
xor
sub
scas
(bad)
xchg
inc
fst
cmp
mov
mov
mov
add
mov
and
jg
or
adc
xor
cmp
lock
fucomip
dec
adc
push
data16
fst
pop
lock
add
push
or
push
sub
fsubr
mov
sbb
and
call
lds
or
mov
test
loopne
popa
push
sub
js
mov
loopne
(bad)
sub
loopne
add
inc
inc
or
sti
or
cmp
fnstsw
lea
test
aas
inc
in
je
or
inc
add
pop
pop
push
adc
cmp
mov
push
push
adc
add
aas
inc
sbb
sub
stos
add
cld
shl
push
xor
in
imul
ja
lods
or
in
fldcw
inc
or
(bad)
mov
add
xchg
cmp
mov
movs
pop
cmp
xchg
or
or
push
sub
in
sbb
and
jno
jmp
stc
enter
fstp
mov
shr
dec
pop
jb
repz
jmp
rcr
pop
push
or
pop
movs
inc
add
or
mov
(bad)
aas
aad
jge
popa
je
or
or
or
adc
shl
cs
addr16
add
ins
add
mov
dec
mov
or
or
jo
sbb
dec
aad
mov
or
or
mov
daa
add
dec
cmp
inc
and
clc
inc
stos
das
pop
inc
push
or
and
out
stc
in
stos
add
adc
or
sbb
fld
hlt
lea
cmc
adc
inc
scas
or
nop
loopne
or
pop
call
pop
push
loopne
popf
xor
aam
aad
xor
loopne
and
mov
clc
les
and
dec
test
dec
sbb
push
sbb
out
test
cld
dec
pop
in
sub
arpl
pop
sti
shl
(bad)
inc
add
fs
jmp
sub
mov
inc
xchg
cmps
mov
jecxz
dec
cwde
jmp
mov
jo
popa
inc
and
gs
jns
jg
jo
test
ret
sahf
mov
pop
(bad)
test
push
fld
or
mov
repz
dec
jno
add
in
add
and
adc
jg
push
add
cmp
cmp
push
rcl
or
mov
or
fdivr
inc
inc
movs
test
movs
loopne
adc
inc
mov
xchg
test
mov
or
pop
mov
or
(bad)
adc
add
shr
cmp
jns
add
retf
and
in
adc
jp
mov
arpl
fldenv
les
les
(bad)
in
sub
mov
adc
test
or
cmps
outs
icebp
add
mov
add
jo
sbb
outs
loopne
dec
sbb
inc
mov
pop
adc
mov
ja
add
loope
adc
add
out
aas
and
out
ins
push
push
popf
xchg
xor
hlt
push
and
popf
or
lds
mov
cmp
push
test
sub
xor
cmp
xchg
xchg
dec
mov
xor
movs
sbb
adc
adc
sbb
and
or
popa
mov
loopne
aad
dec
repz
fdivr
clc
sbb
movzx
cmp
add
inc
popa
mov
xchg
and
fsub
add
or
push
jne
mov
stc
or
cmp
mov
xchg
push
adc
inc
adc
mov
fbld
call
add
xlat
and
inc
aad
push
push
add
mov
adc
out
sub
add
pop
jne
inc
imul
je
cs
dec
push
and
inc
pop
ret
std
js
push
add
loopne
std
xor
jle
mov
scas
pop
ins
dec
inc
jne
cmp
sar
hlt
xor
add
lods
push
push
add
in
cwde
add
pushf
enter
cmp
sahf
cwde
add
aam
cmp
fdivr
sbb
rdmsr
(bad)
ror
and
adc
or
or
push
inc
retf
cmp
test
ds
and
add
call
ds
jle
inc
loop
sbb
and
cmp
rol
call
ss
bound
push
dec
inc
dec
sti
xchg
push
mov
and
jecxz
popf
xchg
add
adc
lock
cmp
push
sub
loopne
add
add
dec
inc
or
hlt
or
pusha
or
cmp
ds
les
push
dec
nop
pop
and
pop
(bad)
loope
mov
adc
jbe
adc
add
mov
push
mov
ins
test
or
xchg
push
lock
test
adc
or
dec
jmp
push
xchg
pop
push
xor
add
in
sub
fist
nop
(bad)
call
mov
adc
out
aaa
mov
dec
jl
jb
push
fcom
inc
rcl
rcl
int3
jnp
aaa
clc
mov
pop
in
or
lods
push
mov
in
fild
push
fld
iret
and
sar
cmp
jne
cmp
mov
cmp
iret
(bad)
fxch
jp
or
inc
into
ds
ja
ffreep
xchg
add
shr
jo
mov
adc
lea
sub
dec
add
pop
clc
mov
bound
test
mov
rcr
mov
and
mov
sub
loope
add
push
and
scas
push
jle
inc
mov
dec
lea
push
das
push
adc
ins
dec
xor
sub
int3
and
add
push
scas
jg
jl
and
jmp
or
ror
ret
and
pop
push
and
pop
scas
test
enter
xor
sub
les
cmc
or
popa
and
or
inc
cwde
inc
cwde
outs
jmp
pop
cmp
mov
mov
mov
jmp
cdq
nop
mov
aaa
js
pop
int
imul
mov
pop
pop
add
xchg
xor
hlt
push
add
jae
and
movs
js
repz
xlat
jge
jl
mov
les
rcl
out
push
adc
push
shl
addr16
jg
add
sbb
lods
inc
jb
cmc
inc
fcom
jg
or
add
mov
sub
cmp
mov
mov
pop
ins
mov
add
fmul
cli
fmulp
ret
sbb
push
fnstcw
fcom
stos
adc
sbb
pop
push
out
or
jecxz
aas
push
loope
fmul
not
and
mov
icebp
push
add
icebp
sub
adc
fdivr
inc
rol
xor
add
cmova
xchg
fistp
mov
or
mov
sub
lods
adc
or
addr16
ret
sbb
pop
mov
mov
adc
jne
in
push
mov
mov
jb
nop
inc
test
loopne
push
jb
sbb
test
js
push
(bad)
adc
add
popa
sbb
push
das
inc
aas
loopne
cdq
jnp
sbb
(bad)
adc
fist
jecxz
out
add
daa
lods
cmp
gs
pop
or
cs
in
xchg
lea
mov
ja
push
add
or
push
push
or
clc
pop
aaa
add
ja
jl
es
call
adc
and
or
pop
popa
sub
and
push
push
push
cmp
adc
xor
or
and
or
jo
rol
sti
in
add
sbb
fisub
pop
sub
test
add
scas
jmp
shr
sub
iret
fcmove
sbb
dec
push
loopne
loope
ja
(bad)
xchg
ror
repnz
inc
icebp
cmp
cld
jnp
loopne
cs
loope
addr16
dec
fnsave
retf
dec
adc
xchg
jg
push
mov
mov
and
dec
or
sub
fadd
out
sbb
add
clc
add
outs
cmp
test
cmp
cmp
ja
repnz
(bad)
(bad)
pop
push
add
retf
or
pop
enter
fmul
int3
(bad)
sti
test
(bad)
jge
ret
rcl
pop
sti
push
mov
lods
rcl
cmp
jo
mov
sub
in
jae
sub
adc
adc
test
push
vpinsrw
adc
aaa
push
add
rol
gs
jge
sbb
ret
push
pop
inc
push
fst
mov
mov
and
xor
loop
or
sbb
popf
cmp
cmc
pop
dec
mov
mov
cmc
and
inc
inc
sub
fcom
test
xor
ret
pushf
sbb
inc
scas
fmul
(bad)
ret
push
and
xchg
shl
push
add
jne
add
mov
sub
cmp
mul
sub
ret
out
das
sub
push
movs
(bad)
ror
shr
push
cmp
(bad)
(bad)
mov
scas
xor
movs
cmp
mov
pusha
inc
pop
outs
xor
ins
sub
in
mov
in
lods
lods
and
inc
pop
mov
pop
pop
sub
out
arpl
repnz
(bad)
push
cs
mov
arpl
sub
add
mov
jecxz
pop
aaa
adc
adc
jg
cmp
add
sbb
cmp
mov
dec
pop
jmp
pusha
add
sbb
mov
mov
in
push
pop
cmp
ror
idiv
adc
mov
repz
jg
fadd
push
test
jnp
and
push
mov
lea
push
movs
ret
mov
mov
push
out
out
pop
adc
jnp
sbb
adc
mov
pusha
sbb
movs
sub
cmc
xlat
mov
scas
aaa
add
jns
add
cwde
lock
outs
pushf
add
sbb
push
repz
push
cmp
pop
test
int
add
xchg
(bad)
outs
out
sbb
add
out
sbb
lahf
jg
sbb
sbb
jno
push
je
imul
dec
ss
or
sbb
cdq
pop
adc
lods
adc
mov
and
out
leave
mov
sbb
push
xchg
inc
or
push
push
push
pop
inc
sub
and
add
and
lock
mov
lods
test
cmps
xchg
add
xchg
add
xchg
mov
mov
pusha
movs
mov
adc
stc
call
and
and
or
mov
adc
sub
mov
pop
je
pushaw
repz
adc
adc
iret
sub
push
ficom
mov
sub
jo
mov
nop
imul
das
pop
add
mov
imul
je
shl
popf
les
adc
add
jg
jno
mov
data16
and
jge
pusha
push
dec
jl
mov
loope
enter
cmp
(bad)
je
inc
retf
inc
mov
repnz
daa
imul
mov
aas
or
mov
shl
rol
or
mov
sbb
nop
popa
add
mov
sar
mov
or
sbb
adc
push
enter
call
sub
or
or
push
pop
lods
mov
test
xchg
or
nop
xchg
dec
or
out
add
inc
aas
jae
jg
jmp
jo
std
arpl
mov
int3
or
jb
or
or
or
xor
shl
mov
loopne
cmp
adc
add
ins
movs
and
mov
mov
sub
js
fisub
inc
test
cwde
jb
xor
mov
mov
add
sbb
out
lahf
add
int
inc
dec
sub
ret
adc
popa
jb
and
cld
adc
inc
aas
adc
gs
mov
xchg
cmps
or
sbb
push
and
add
dec
std
push
cmc
cmc
add
mov
jne
ror
outs
call
shr
js
or
inc
rcr
frndint
and
cmp
fstp
fwait
sbb
or
cld
add
xchg
xor
sub
dec
pusha
or
repz
loope
jne
and
test
sbb
and
push
loop
push
lahf
and
(bad)
cmp
loop
and
inc
mov
enter
sbb
xor
mov
cld
and
jecxz
pop
or
ret
outs
rol
add
nop
sti
test
adc
sub
fild
xor
ja
cmc
add
or
fs
stos
add
xor
fmul
mov
mov
rol
jp
adc
cmp
sub
hlt
sbb
sub
and
mov
and
jecxz
stc
ins
inc
iret
aam
push
rol
je
sub
dec
add
jecxz
and
imul
jbe
js
das
rol
ret
in
sbb
retf
xchg
es
mov
out
xchg
test
adc
inc
jmp
aam
xchg
inc
adc
movs
xchg
push
repnz
out
leave
inc
xor
dec
pop
and
push
mov
rol
xchg
dec
ror
rcl
or
inc
add
or
jno
add
inc
enter
aam
and
or
lds
push
scas
pop
adc
ror
sub
cmp
and
sub
dec
ins
push
mov
add
inc
xchg
inc
sbb
neg
or
or
jns
leave
rol
inc
adc
and
add
icebp
shr
add
push
rol
adc
pop
outs
or
dec
push
jmp
das
ins
adc
sub
and
fisubr
and
fwait
add
xchg
subps
and
ret
dec
out
ror
lock
push
pop
loopne
loopne
or
cmp
out
and
fsubr
add
test
pop
aas
pop
imul
mov
add
or
xchg
call
cmps
mov
ins
daa
enter
cmp
pop
inc
cdq
pop
add
add
add
fcmovne
(bad)
mov
rol
mov
test
mov
rol
or
mov
rol
mov
inc
pop
mov
mov
pushf
push
sub
cs
add
in
stc
shr
sub
mov
adc
test
xor
pusha
and
add
push
sbb
cli
or
mov
mov
adc
clc
push
pop
dec
and
rcl
std
add
mov
and
ror
mov
int
test
cli
add
nop
adc
pop
cli
add
loop
adc
int
xchg
lock
jmp
pushf
sub
xchg
std
inc
and
test
inc
add
sub
sar
sbb
or
js
loopne
mov
or
arpl
js
div
push
jnp
in
xor
retf
inc
gs
adc
ficom
fs
lock
and
cdq
add
and
add
mov
sub
add
daa
pop
sub
mov
in
std
sub
inc
or
sbb
sbb
adc
shl
or
jae
pop
mov
loopne
adc
dec
add
or
and
pop
in
xor
inc
mov
daa
ss
mov
inc
shr
inc
mov
fld
ret
xor
and
mov
or
or
das
fs
mov
dec
mov
mov
lods
test
xor
ins
or
xchg
push
loopne
movs
sub
add
sub
add
pop
pop
sub
jo
push
stos
int3
xor
push
mov
sti
sub
popa
xor
inc
add
xchg
outs
xor
mov
or
sub
hlt
add
jmp
inc
nop
les
inc
ret
sub
mov
inc
add
add
clc
xchg
pop
mov
adc
sbb
rol
sub
push
shl
add
enter
mov
cmp
shl
je
psllq
xchg
xchg
aas
ja
push
push
add
push
mov
or
inc
xchg
ja
mov
(bad)
push
sbb
mov
clc
jo
jl
pop
add
or
add
add
mov
sub
lahf
call
es
add
push
or
or
sbb
jns
dec
pop
dec
mov
mov
cmp
mov
xchg
int3
and
imul
das
mov
cmp
cmps
fwait
adc
lock
cli
mov
or
cmp
jae
pop
adc
mov
iret
or
out
pop
in
mov
je
arpl
pusha
pop
and
not
stos
fidiv
jmp
sar
cs
ror
popa
adc
scas
aam
loopne
je
and
mov
adc
aam
out
sbb
pusha
push
and
rcl
sbb
add
add
aam
scas
and
jl
dec
mov
test
jl
push
or
mov
fdivr
sbb
daa
fidiv
jb
dec
xor
xor
mov
(bad)
cmps
outs
sbb
pop
push
out
inc
cmps
sub
pop
scas
sar
push
inc
dec
je
xchg
adc
cmp
daa
daa
inc
push
out
xor
fisubr
sar
mov
in
sbb
mov
add
aaa
jb
xchg
or
mov
pop
mov
shl
dec
arpl
adc
ins
mov
xchg
inc
or
pop
push
fwait
sub
push
xor
add
mov
xchg
add
cmp
push
lea
test
add
(bad)
or
pop
adc
leave
shl
cmps
nop
push
enter
jecxz
jecxz
inc
dec
and
jecxz
in
enter
jecxz
mov
xor
sub
es
push
or
push
jmp
push
ror
push
rol
pop
push
retf
outs
sbb
dec
mov
mov
sbb
jl
mov
jmp
ins
fucomi
or
or
and
mov
or
std
or
or
cs
movs
pop
push
pusha
movs
pop
fist
aad
add
inc
das
aas
xchg
pop
mov
mov
imul
test
into
ins
retf
or
sbb
out
add
fild
jne
ret
inc
jns
das
push
xchg
adc
pop
(bad)
pusha
ja
xchg
imul
mov
or
adc
adc
xchg
loope
mov
xor
cld
add
push
add
fst
cmp
jmp
imul
push
outs
mov
ret
das
dec
and
mov
mul
sub
cmp
pusha
cld
or
add
jno
dec
or
aas
ins
or
dec
push
push
shl
or
mov
xchg
or
add
pop
daa
dec
lods
add
xor
(bad)
and
sbb
add
or
push
mov
add
lods
mov
jae
cmp
nop
add
pop
pop
jp
jmp
add
fcomp
es
push
fs
dec
push
add
inc
(bad)
aam
test
movs
(bad)
jbe
cmp
xchg
fadd
pop
pusha
and
lea
or
sbb
mov
jl
and
std
aaa
or
cdq
adc
cmp
inc
mov
add
pop
or
xor
daa
push
repnz
cwde
push
mov
and
dec
sbb
inc
sbb
jg
ror
sbb
add
adc
xor
sub
leave
sbb
or
adc
(bad)
push
add
inc
dec
shr
sbb
in
rcr
mov
lds
sbb
adc
loopne
dec
or
cmps
push
and
mov
aas
push
mov
dec
adc
mov
in
push
pop
dec
jbe
aaa
(bad)
pop
mov
mov
in
xchg
enter
rcl
adc
add
(bad)
shr
aam
fs
lea
sbb
es
mov
sub
mov
jmp
xor
adc
inc
dec
add
dec
wrmsr
jo
ret
pop
sbb
imul
loopne
lock
xchg
adc
pop
jne
push
shl
in
adc
or
adc
adc
sbb
mov
ds
mov
xor
hlt
sbb
sub
push
inc
imul
push
cmp
cmp
cmp
push
ret
xor
test
sub
enter
xlat
jecxz
ss
shl
mov
push
push
and
js
and
mov
pop
std
cmp
jg
xor
and
dec
push
xor
add
inc
mov
xchg
cdq
adc
je
imul
or
jl
dec
sar
mov
cwde
push
pop
add
sub
pop
push
push
sbb
(bad)
sti
ins
and
ins
push
xor
fisubr
sbb
lea
ret
jmp
retf
pop
xchg
dec
cmp
xor
xchg
xchg
add
cmp
dec
or
(bad)
mov
dec
jno
add
mov
mov
mov
or
dec
and
xor
mov
clc
rcl
push
cmps
xchg
sub
cmps
push
inc
fadd
inc
sub
adc
and
adc
jl
and
out
dec
push
and
cmp
mov
cmp
inc
sbb
or
xor
adc
ja
pusha
clc
std
cwde
cmp
adc
xchg
push
aaa
int3
push
sub
lods
cmps
fild
test
les
test
fadd
inc
(bad)
pop
cmc
add
jo
push
adc
adc
add
dec
fild
shl
call
sbb
add
shl
ins
push
add
adc
leave
in
movs
loop
inc
or
gs
or
sub
dec
pop
mov
mov
test
sbb
push
or
sub
inc
or
add
aaa
dec
nop
add
out
or
push
and
xchg
aas
adc
xor
(bad)
push
xor
cmp
add
or
cmp
and
and
rol
inc
and
stc
mov
sub
adc
test
dec
and
push
rol
xor
mov
or
and
xchg
inc
pop
(bad)
inc
ror
loope
inc
rol
clc
std
and
mov
push
xor
cmp
xchg
and
in
push
sbb
jno
lea
jnp
out
outs
adc
cmp
jne
cmp
es
cmp
shl
mov
adc
push
daa
pop
adc
and
cld
aaa
pop
adc
cmp
enter
mov
cmp
or
inc
(bad)
and
dec
(bad)
call
adc
and
aaa
dec
or
ret
sub
add
outs
mov
retf
mov
pop
xchg
pop
int
mov
in
sbb
mov
loope
push
jbe
xor
xor
enter
and
loope
sbb
and
sbb
sti
mov
sub
pop
adc
cmc
cdq
iret
xchg
xchg
jne
mov
pop
or
sub
ror
sub
cmp
(bad)
int3
and
lahf
fsub
scas
fild
add
mov
xchg
pop
(bad)
fs
mov
add
dec
out
dec
mov
mov
adc
inc
test
arpl
leave
add
into
add
fs
shr
xor
push
shr
retf
jmp
xchg
or
cli
in
or
in
ficomp
popa
fidiv
pop
mov
je
add
dec
jg
call
inc
sbb
mov
or
or
adc
xor
adc
inc
push
sahf
or
inc
or
mov
mov
xchg
test
test
add
rcr
adc
jno
inc
and
adc
push
cmp
xlat
inc
pushf
inc
cld
add
sub
mov
sub
push
dec
lock
or
push
or
mov
daa
pop
dec
add
stos
retf
sbb
cmp
sbb
push
push
cmp
stos
adc
pop
xchg
das
and
push
int3
inc
das
push
push
cdq
leave
cwde
or
add
mov
add
xchg
add
xchg
add
sub
dec
ds
cmp
aaa
dec
lods
push
or
mov
in
xchg
add
pop
mov
aam
dec
mov
push
or
test
sub
(bad)
ror
pop
add
sbb
adc
adc
in
cmp
or
jge
mov
inc
add
pop
movs
lock
adc
mov
jae
and
loope
dec
imul
mov
lock
jnp
add
jns
cwde
or
push
push
mov
das
add
mov
inc
arpl
mov
add
adc
(bad)
dec
xchg
mov
aaa
sar
sub
adc
inc
ins
add
jnp
xor
fimul
mov
adc
add
fwait
inc
das
push
das
jmp
bound
rcr
mov
add
pop
dec
sbb
lods
add
and
mov
dec
(bad)
loope
femms
call
or
adc
mov
in
or
gs
add
or
mov
jge
or
inc
loopne
jmp
inc
mov
(bad)
sbb
cmps
sbb
sar
inc
loopne
xchg
push
sbb
int
call
aaa
jnp
adc
sbb
loopne
in
mov
and
or
mov
xor
fild
push
lea
inc
inc
lock
sbb
shl
arpl
or
call
arpl
or
push
or
mov
gs
movs
test
retf
adc
nop
add
add
jmp
popf
dec
adc
clc
cs
add
inc
nop
and
and
rcl
idiv
or
lock
ret
arpl
xchg
add
pop
xchg
or
sbb
push
push
add
xor
or
adc
pop
sub
push
dec
test
inc
xchg
and
pop
jle
and
inc
ror
jmp
fisub
enter
mov
and
add
inc
add
push
pop
popf
inc
fstp
or
pushf
dec
js
sub
mov
pop
jnp
dec
dec
mov
jo
cmp
adc
dec
outs
push
dec
and
shl
adc
jmp
mov
test
(bad)
xor
vmwrite
adc
adc
(bad)
or
xchg
clc
inc
test
mov
inc
into
adc
or
test
cmp
mov
push
not
add
nop
popf
add
push
jg
test
adc
push
pusha
les
cmp
jne
jg
add
inc
cmp
add
or
mov
cmp
outs
push
and
mov
sbb
jne
inc
add
or
xor
ins
and
sbb
sbb
rcl
(bad)
ficom
nop
inc
or
push
pop
pusha
inc
or
mov
test
mov
jb
arpl
test
bound
add
push
lea
jbe
xchg
and
pop
(bad)
add
movzx
or
neg
inc
lods
cmp
test
jo
repz
add
mov
and
and
dec
xor
(bad)
and
sub
jo
add
bound
add
jg
call
or
adc
movs
mov
jl
xchg
xor
sbb
sub
test
jg
push
inc
push
add
dec
or
inc
xchg
add
jnp
jp
cdq
pop
cmp
iret
arpl
push
sub
jbe
add
test
scas
sbb
cwde
and
adc
addr16
xchg
movs
add
push
icebp
femms
aas
cmp
pop
jne
xor
sub
mov
jne
and
dec
xor
pop
lock
sbb
ret
sub
lahf
or
lds
or
sub
add
or
push
inc
js
sub
or
xor
dec
adc
loopne
das
call
add
icebp
jno
shr
sbb
cld
lahf
cmp
add
jns
adc
or
rol
cmps
dec
sbb
ficomp
xchg
sahf
mov
es
adc
loopne
dec
mov
pop
ret
call
xchg
push
add
push
mov
xlat
call
ret
or
ret
add
retf
mov
loopne
pop
or
les
mov
fcom
mov
bound
in
xlat
xchg
and
or
add
sbb
dec
pop
or
fmul
and
jo
mov
pop
icebp
mov
dec
and
and
push
in
add
adc
movs
aam
inc
and
and
rcr
or
add
rcr
scas
cld
into
adc
dec
cwde
or
inc
cmp
addr16
loope
cmp
mov
bound
dec
(bad)
mov
in
push
sbb
inc
and
adc
mov
push
int3
int
rcl
fsub
nop
das
mov
popf
retf
leave
bswap
push
mov
or
jae
mov
push
xchg
pusha
jmp
outs
inc
or
sbb
mov
mov
inc
gs
loope
aaa
adc
lods
cld
rcl
or
push
dec
jns
stos
sub
les
sub
mov
push
sub
test
pop
inc
mov
sub
sub
pop
call
add
aad
and
xlat
sbb
frstor
push
and
add
cmp
loopne
sub
sub
test
cwde
and
cmp
and
jo
rol
cld
jmp
inc
(bad)
and
rcl
ins
stos
dec
lods
scas
(bad)
sbb
or
pop
push
test
inc
frstor
add
push
mov
sbb
test
add
xchg
out
xlat
add
out
add
add
push
mov
cmp
add
mov
cld
or
fwait
retf
add
push
lock
and
pop
push
push
push
add
adc
xor
push
or
sub
xchg
cmp
inc
add
je
sub
cmp
mov
movs
mov
(bad)
mov
(bad)
xchg
push
push
inc
out
xor
js
hlt
xchg
sub
pop
retf
lock
push
cmp
mov
cmp
or
jg
(bad)
mov
cdq
add
sub
dec
mov
jle
xor
nop
icebp
icebp
nop
or
or
hlt
mov
xor
ret
bound
and
lahf
add
dec
or
out
add
daa
and
push
sbb
sub
fmul
add
adc
sahf
and
dec
jle
xor
cmp
push
mov
add
push
pop
fbld
push
push
sub
xchg
in
enter
shr
lods
jbe
out
sbb
mov
(bad)
push
jne
fmul
pop
fisttp
pop
lock
push
mov
pop
push
dec
jmp
fldenv
sbb
mov
shl
ret
jmp
add
sub
push
xor
stos
adc
rcl
add
imul
pop
daa
call
mov
jne
loope
dec
(bad)
sti
pusha
(bad)
sub
sbb
test
gs
mov
ret
mov
add
fld
call
push
gs
or
pop
pusha
dec
pop
sub
push
dec
aad
fbstp
jg
add
sub
and
movs
cmps
dec
push
xchg
neg
mov
xchg
adc
xor
retf
enter
adc
pop
nop
cmp
xor
mov
mov
or
xchg
mov
les
push
cmp
repnz
imul
in
aaa
stc
add
mov
xor
xor
add
jns
adc
and
sbb
add
mov
sahf
add
test
push
les
call
sbb
cmp
imul
shl
(bad)
jle
and
xchg
das
or
mov
mov
mov
pusha
jne
push
mul
loopne
imul
in
xchg
xchg
dec
inc
pop
push
or
xor
int
adc
cld
mov
adc
sbb
(bad)
mov
int3
test
daa
push
das
and
shr
aas
sub
push
inc
sub
mov
rol
push
inc
pop
hlt
mov
fwait
cmp
sub
and
cmp
push
cld
cmp
cld
cmp
jp
sbb
loope
sub
mov
inc
mov
pop
and
icebp
pop
mov
mov
adc
adc
mov
push
mov
inc
push
clc
add
and
(bad)
je
loopne
adc
int3
or
dec
add
pop
push
cmp
ret
sbb
pop
cmp
nop
jno
sbb
clc
in
pop
rol
and
push
loopne
inc
lea
sbb
xchg
add
js
pop
mov
adc
ror
add
xor
out
push
add
and
test
dec
ret
(bad)
adc
or
or
loopne
or
and
loopne
rol
ins
and
and
pop
add
sahf
popa
jmp
in
xor
gs
mov
pop
mov
xor
pop
mov
dec
ja
sub
movs
mov
add
pop
js
and
and
jmp
shl
push
pop
lahf
fbld
and
adc
sti
popa
dec
sbb
jns
sbb
dec
jge
movs
mov
icebp
sbb
sbb
inc
imul
popf
or
mov
sub
mov
pop
rcl
bound
pop
and
pop
adc
mov
mov
sbb
mov
jge
xor
inc
sbb
add
pop
sbb
xor
xor
or
ins
sbb
or
das
or
inc
cmp
jmp
jbe
inc
out
or
inc
dec
inc
or
jnp
les
dec
push
pop
dec
xor
in
fs
daa
ret
or
jne
mov
adc
or
xchg
or
adc
loopne
pop
fist
inc
scas
sbb
cmp
cmp
inc
(bad)
xor
and
xchg
xlat
hlt
fwait
sub
dec
jns
lods
or
push
add
and
ret
add
mov
sub
inc
xor
mov
or
pop
adc
pop
cmp
test
inc
xchg
int3
jmp
fwait
xchg
add
sahf
mov
cmp
add
adc
mov
pop
xchg
xor
push
push
test
or
mov
pop
add
xor
lahf
xchg
xchg
cmp
es
adc
sub
or
ret
jmp
aad
lahf
ret
pusha
or
dec
movs
lahf
and
femms
ins
sbb
popa
stos
cld
test
pop
and
push
bound
test
jns
cmp
(bad)
push
inc
dec
push
popa
(bad)
imul
and
sub
adc
sbb
sbb
jge
pmuludq
and
mov
xor
movs
mov
adc
dec
mov
xchg
inc
into
lods
push
sbb
popa
mov
xor
mov
mov
je
adc
pusha
dec
xor
jne
aas
cdq
adc
icebp
cmp
shl
add
pop
rcr
dec
sbb
cwde
dec
or
or
test
dec
cmp
lods
dec
fcomp
add
popa
xor
ficom
dec
push
test
mov
test
sub
sub
jle
adc
push
jmp
(bad)
pop
jge
mov
popf
sbb
je
imul
lock
xor
mov
(bad)
jmp
outs
rol
iret
(bad)
mov
rol
pop
loope
and
jo
dec
lahf
xor
or
add
sub
pop
aad
cmp
jg
fadd
jmp
mov
rcl
and
jne
jno
shl
push
mov
mov
mov
(bad)
and
push
sbb
test
mov
in
push
xchg
nop
data16
pop
gs
mov
xor
dec
or
call
dec
or
and
and
xchg
xor
xchg
in
or
add
inc
xchg
dec
adc
iret
xor
adc
xchg
rcl
imul
dec
aas
add
pusha
and
in
jge
push
add
imul
xor
and
loopne
movs
dec
jge
pop
in
call
jne
in
and
push
pop
dec
aam
add
mov
cmp
add
or
in
sub
in
mov
add
dec
sbb
inc
mov
ds
adc
cmp
enter
arpl
call
xor
(bad)
leave
repz
and
cmp
sbb
jg
pop
adc
or
adc
xchg
sbb
dec
cmp
jg
push
scas
push
(bad)
mov
or
inc
adc
clc
test
mov
add
cld
hlt
imul
cmps
(bad)
retf
in
push
clc
movs
clc
xchg
and
movs
sbb
jmp
cdq
or
enter
cmps
clc
iret
adc
pop
ret
cmps
mov
ss
push
stc
mov
hlt
nop
dec
rol
gs
pop
loop
or
test
inc
sbb
outs
aas
add
arpl
cwde
inc
sbb
sbb
fchs
pusha
jmp
sbb
fbstp
mov
outs
jbe
mov
mov
pop
adc
jp
fldz
push
fwait
loope
add
fld
sub
xor
mov
inc
test
mov
mov
stc
or
mov
adc
or
or
in
add
inc
xchg
imul
aam
popf
mov
test
dec
popa
and
xchg
ret
pop
and
mov
movs
adc
and
lock
add
xchg
rol
cld
sahf
sbb
test
icebp
movs
test
jae
mov
push
pop
outs
loop
scas
push
mov
adc
sub
sub
or
mov
mov
and
sub
ret
in
push
cmps
add
add
xchg
xor
ja
fsub
pop
jno
xrelease
shr
mov
lock
push
cld
jb
xor
or
and
(bad)
sub
cmp
xchg
xchg
test
cmp
mov
jg
sbb
adc
fstp
jns
jmp
or
popf
loopne
pusha
or
sbb
data16
push
shr
fwait
mov
add
in
std
std
out
fmul
xor
div
ret
test
ffree
jo
pop
sbb
pushf
adc
inc
outs
sbb
mov
add
sub
mov
dec
inc
push
adc
out
aaa
dec
adc
rol
adc
xor
call
ret
sub
mov
test
das
cmp
out
adc
or
(bad)
mov
dec
mov
jmp
jg
jl
inc
push
(bad)
call
mov
and
and
es
xchg
jbe
mov
xor
add
sbb
dec
mov
inc
ins
dec
sub
shr
inc
cdq
inc
add
scas
and
fmul
pop
lock
fisttp
retf
mov
rcr
add
dec
sub
push
cwde
call
dec
ror
jg
and
inc
adc
shl
mov
movs
cld
pop
add
inc
and
and
ss
(bad)
movs
add
or
mov
inc
scas
inc
ret
(bad)
pusha
dec
add
adc
loop
lods
dec
xchg
or
inc
test
loopne
or
enter
mov
sti
push
or
sbb
js
add
mov
push
xchg
push
or
test
sbb
sub
clc
mov
nop
cmp
mov
adc
in
call
or
xchg
rcr
add
inc
inc
or
sub
arpl
jns
mov
call
add
(bad)
mov
fsubr
inc
or
cmp
imul
cdq
popa
lahf
add
add
sub
jge
data16
cmp
adc
je
mov
mov
lock
add
dec
sub
push
push
ins
sub
or
cld
mov
push
lock
pop
ret
nop
add
pop
pop
call
sbb
inc
mov
push
xchg
dec
push
add
les
adc
popf
mov
xchg
pusha
add
add
fst
scas
fbstp
or
and
pop
xor
and
mov
gs
dec
out
inc
call
sbb
mov
push
dec
adc
pop
nop
test
add
dec
mov
xor
mov
cld
out
loopne
das
ds
mov
adc
mov
sub
ja
xchg
pop
ret
pop
push
adc
pusha
adc
imul
add
adc
sbb
lods
xor
pusha
pop
push
push
shr
jo
inc
ret
sti
or
inc
ins
adc
push
es
js
push
jne
daa
add
test
outs
shl
lock
ror
pop
bnd
cli
sub
ror
or
xchg
lahf
mov
nop
movs
pop
cmps
movs
or
add
add
fs
jno
xchg
sub
shl
pop
(bad)
xchg
dec
mov
test
cs
mov
pop
sti
mov
adc
inc
addr16
inc
test
enter
fsubr
pop
gs
add
addr16
mov
ror
push
cmp
(bad)
aam
sbb
sbb
xor
jbe
or
and
jae
adc
loop
sbb
xor
rcl
adc
add
inc
adc
or
cmp
rol
mov
ss
cld
adc
and
xchg
sub
test
and
clc
push
arpl
jmp
mov
push
push
mov
mov
mov
dec
pop
test
mov
jne
arpl
jmp
cmp
xchg
inc
in
shl
cmps
arpl
out
fmul
rcr
or
add
test
loop
cmp
push
jp
leave
add
(bad)
fst
mov
xor
cmp
push
cld
or
add
dec
lock
arpl
rcr
stc
mov
arpl
rcr
inc
pop
pop
push
mov
xchg
shl
ds
into
sti
(bad)
or
rol
inc
not
push
mov
sbb
or
ret
sbb
test
imul
test
jecxz
add
aas
and
lock
into
push
sub
int3
push
add
or
jnp
push
or
sbb
int
test
push
mov
aad
add
aaa
movs
pop
mov
and
stos
sub
(bad)
call
dec
jae
xchg
jae
test
sbb
jnp
imul
push
jae
adc
retf
push
push
movsx
mov
pop
rcl
adc
pop
(bad)
jno
les
retf
xchg
cmp
jo
or
lahf
hlt
push
add
test
(bad)
imul
adc
repnz
jle
int3
sub
jo
test
inc
or
or
xchg
jmp
test
cmp
and
mov
add
adc
ret
sub
mov
push
adc
cmp
push
inc
inc
cmovl
sbb
mov
and
and
and
push
xchg
loop
mov
fld
test
add
jmp
pop
mov
sub
(bad)
rcr
adc
icebp
and
and
inc
jns
jns
push
pop
mov
pop
add
mov
(bad)
ins
xchg
push
or
popa
ja
xor
inc
add
mov
mov
push
push
fwait
jne
xor
pop
xor
imul
in
jmp
data16
push
xor
mov
cwde
and
jno
cmps
fiadd
adc
mov
in
shr
and
test
xlat
add
or
imul
mov
ins
cmp
pop
jmp
mov
retf
sbb
aaa
cmp
jmp
sub
aaa
sub
xor
mov
imul
mov
xor
push
ret
fisub
add
rol
push
jl
cmps
adc
fdiv
call
xor
lea
popa
aaa
dec
jg
push
test
into
push
and
in
and
add
clc
sub
hlt
stos
aam
push
hlt
shr
push
sbb
icebp
fwait
dec
mov
aad
xor
clc
adc
test
pop
xor
xor
xchg
aas
test
stc
sub
mov
inc
es
jl
in
push
popa
push
xchg
sub
xchg
mov
and
push
push
mov
arpl
mov
mov
and
xor
aam
out
and
test
mov
mov
cmp
xchg
mov
ret
xchg
push
jo
xor
test
in
mov
aam
mov
and
inc
and
sbb
jle
jg
inc
and
or
ss
mov
rol
loopne
inc
mov
out
jmp
imul
imul
xor
cmp
push
inc
dec
xchg
loope
nop
stos
mov
imul
xchg
xchg
cmp
push
out
inc
or
sbb
test
or
add
mov
mov
bound
nop
and
fiadd
or
sub
movs
retf
add
idiv
mov
mov
ror
cmp
sub
dec
sub
jmp
inc
cmp
mov
inc
mov
inc
pushf
or
imul
js
push
sbb
xchg
inc
mov
add
add
fiadd
push
adc
dec
add
test
inc
test
xchg
and
in
test
mov
push
shr
add
loopne
out
push
jne
or
fsubr
or
dec
and
fcom
sub
clc
xchg
jnp
xchg
adc
rol
cmc
mov
xor
dec
xor
mov
aaa
adc
mov
inc
mov
and
cwde
mov
ror
add
loop
pop
add
enter
js
push
add
cwde
dec
add
es
mov
ss
scas
ds
leave
or
lods
loope
sub
jl
inc
das
pop
push
inc
test
dec
and
aam
jp
fcom
out
push
and
shl
icebp
or
mov
js
(bad)
jle
inc
sbb
call
adc
mov
cmp
js
sub
aad
(bad)
or
mov
jb
pop
aas
pop
xchg
dec
leave
dec
sbb
and
add
(bad)
loopne
rcr
shl
dec
inc
push
and
mov
lea
loope
and
or
inc
xor
loope
jne
fcom
loope
popa
xchg
xor
test
push
retf
pop
mov
mov
dec
mov
inc
add
bound
jmp
pop
add
fs
movs
ins
pushf
xor
sub
push
adc
sub
fbld
push
add
jo
fbld
or
js
lahf
mov
or
shr
movs
into
js
or
loop
dec
and
dec
inc
test
and
mov
adc
call
pop
ret
ret
inc
or
pushf
sbb
mov
lds
mov
push
push
add
pusha
sbb
push
push
ins
xor
add
add
dec
dec
cmp
mov
into
cmp
mov
inc
rcl
and
and
sti
ror
or
cmp
xor
sub
loop
movs
add
pop
push
or
mov
add
inc
xchg
daa
jmp
jg
mov
jne
sbb
or
cmp
mov
pop
cmps
sbb
jmp
test
xor
xchg
(bad)
(bad)
jecxz
push
mov
stos
mov
dec
cmp
movs
jno
arpl
and
scas
jns
mov
add
mov
adc
in
and
dec
mov
popa
shr
lds
ds
sbb
rcr
push
adc
push
jmp
inc
pop
dec
xchg
cmp
adc
or
fdivr
xor
in
xchg
loope
pusha
rol
pusha
das
cld
mov
(bad)
std
and
jae
mov
dec
add
out
es
cmp
push
xor
outs
inc
test
rol
or
into
lods
mov
sbb
test
ins
pop
add
sbb
cmp
daa
imul
stos
mov
add
mov
inc
and
inc
lahf
pop
or
cmps
xchg
test
pop
mov
adc
sub
movs
test
and
or
and
inc
daa
mov
outs
push
mov
mov
add
or
jno
fsub
add
add
inc
(bad)
fild
xor
add
cld
lahf
add
daa
js
pop
imul
add
aas
lods
xlat
inc
cli
ins
adc
add
test
jnp
xor
cdq
nop
dec
sub
xor
cdq
fs
cmp
dec
es
inc
inc
inc
inc
es
nop
inc
dec
dec
or
div
or
pop
dec
lea
cdq
nop
push
jle
jg
into
inc
pop
dec
addr16
pop
and
push
push
add
loopne
retf
mov
rol
sub
das
xor
add
add
rcl
add
or
lods
ret
adc
or
prefetchnta
or
cmp
mov
or
sbb
jg
loopne
les
and
and
inc
mov
and
adc
aas
xchg
ret
fild
xchg
in
lock
or
pop
mov
and
sub
jae
ds
push
iret
outs
jl
mov
and
jae
adc
add
dec
adc
add
mov
add
nop
mov
in
push
sub
cmp
sbb
movups
mov
jo
dec
mov
fidiv
xor
mov
adc
shr
xchg
adc
sbb
pop
lods
push
(bad)
fcmovb
push
dec
cmps
adc
adc
adc
hlt
adc
xor
mov
add
pop
(bad)
jnp
in
dec
ds
test
test
test
sub
adc
ins
pusha
jmp
imul
push
push
adc
inc
xchg
push
dec
enter
and
xchg
retf
pop
or
or
jns
leave
imul
add
mov
dec
jmp
inc
loop
ins
(bad)
test
mov
jp
jge
and
cmp
push
(bad)
inc
mov
fisubr
or
dec
or
push
sub
dec
pop
sub
lods
sub
adc
push
sub
fmul
and
sub
adc
mov
out
imul
bound
push
ja
and
outs
adc
call
adc
sub
inc
add
seto
mov
fmul
or
xor
pop
add
rcr
lahf
mov
push
pop
lahf
sahf
out
pop
xchg
or
push
sar
test
cwde
xchg
sbb
test
pop
add
cld
push
or
and
and
movs
dec
test
fistp
xchg
push
mov
add
adc
iret
repz
push
inc
dec
push
adc
repz
fs
dec
fwait
and
adc
inc
nop
or
jle
cwde
push
test
movs
dec
jo
test
push
lods
das
xchg
and
fwait
pop
sub
pop
clc
test
enter
add
out
fstp
pop
jmp
jne
mov
(bad)
mov
push
inc
pop
pop
pop
leave
sub
dec
dec
cli
xor
add
ror
dec
mov
sub
es
mov
and
inc
cmp
test
and
mov
clc
cmps
fisttp
adc
inc
add
rcr
rcl
inc
loopne
sbb
jp
dec
aas
add
push
push
pop
mov
out
pop
push
ins
or
out
iret
retf
cmp
mov
retf
retf
sbb
push
sub
or
pop
jne
or
fmul
dec
or
push
test
or
mov
jo
fiadd
add
xor
pop
push
or
mov
mov
lea
xor
inc
and
ret
mov
and
test
shr
dec
cmp
xchg
dec
push
or
pop
or
lahf
ret
shr
rol
xor
mov
mov
mov
jmp
dec
and
or
fs
es
mov
daa
dec
test
aam
mov
dec
loopne
mov
mov
mov
dec
pop
add
or
mov
fldcw
cwde
xchg
or
lahf
inc
sub
dec
adc
psrld
cmp
or
cmp
cmc
or
or
je
adc
jns
dec
inc
add
sub
xor
jle
xor
rcl
add
mov
sbb
pop
mov
xchg
enter
or
push
xchg
jp
mov
push
mov
mov
imul
(bad)
mov
mov
mov
or
push
pop
sub
cmc
mov
cmp
and
push
dec
ror
or
jmp
cwde
mov
das
lds
mov
add
mov
cmps
clc
xlat
add
and
ret
mov
add
aad
icebp
jmp
mov
add
dec
adc
add
sbb
sub
inc
push
jo
pop
mov
inc
mov
(bad)
jmp
pushf
add
cdq
enter
mov
in
ja
and
pop
cmps
int
hlt
jno
ficomp
fild
daa
inc
movs
pusha
cmps
aas
in
dec
dec
and
push
push
pusha
push
test
and
sub
(bad)
fwait
shr
inc
dec
loopne
and
cmp
sub
cmps
ret
mov
dec
or
jne
and
cli
and
xchg
inc
push
or
call
push
and
mov
fwait
mov
dec
and
and
js
or
ins
and
popf
mov
adc
adc
nop
mov
mov
inc
and
add
cmp
adc
adc
or
and
aam
and
sbb
sbb
jmp
or
leave
dec
aad
ret
jmp
adc
or
rol
in
cmp
add
xor
or
or
or
clc
es
adc
or
push
rol
bnd
test
ror
xor
adc
ror
mov
inc
dec
(bad)
ror
pop
push
les
add
xchg
and
add
outs
fistp
test
push
call
adc
rol
dec
and
ins
or
or
jne
add
loopne
leave
movs
inc
dec
xchg
fwait
xchg
cmp
adc
repnz
fldenv
and
lods
mov
add
inc
aam
aam
test
mov
inc
or
jle
(bad)
shr
or
rol
aam
pop
mov
mov
fs
sahf
pusha
cmp
call
movs
aas
push
add
add
les
aam
sub
ja
add
int3
mov
shl
dec
lods
push
adc
neg
mov
mov
add
jl
jae
add
test
push
add
test
and
ins
pushf
sbb
dec
(bad)
stos
jge
add
mov
fcomp
shl
sbb
in
jnp
ror
and
scas
push
fst
push
cdq
lahf
inc
aaa
inc
loopne
mov
sbb
lea
sub
jns
push
inc
pop
push
fcomp
mov
mov
xor
retf
dec
fcom
in
mov
lea
cmp
fdivrp
and
dec
sub
xchg
adc
(bad)
cld
ins
mov
adc
mov
or
sbb
inc
inc
stos
cmp
push
xor
mov
ret
xchg
inc
or
pop
ret
jo
sar
inc
(bad)
loop
jne
pop
or
pop
sub
out
test
adc
pop
les
adc
inc
or
int
sar
push
xchg
int3
daa
mov
loope
mov
push
or
push
ret
pop
lods
inc
lock
inc
push
enter
popf
aaa
and
xchg
iret
pop
jmp
sbb
les
mov
add
shl
and
rcl
pop
or
mov
lock
fld
adc
adc
int
or
movs
int
stos
es
daa
xor
sbb
add
inc
je
stos
pusha
or
imul
add
or
fild
rol
inc
push
mov
add
lea
nop
jne
inc
pop
and
and
ss
movs
sub
arpl
jnp
add
xor
ins
pop
aam
push
and
popa
xchg
lea
mov
inc
push
adc
rcr
bndstx
sub
add
popa
ins
push
addr16
and
pop
or
xor
push
or
movs
ins
std
js
xor
add
push
repz
pop
rol
and
fcom
adc
xor
or
xor
jbe
mov
lock
sub
mov
push
mov
pusha
sub
adc
or
loop
pop
or
sbb
scas
add
(bad)
icebp
and
adc
or
xchg
jmp
adc
add
dec
or
jecxz
nop
xor
cld
je
sbb
sub
sti
call
xchg
add
mov
icebp
dec
movs
or
mov
icebp
adc
out
out
sbb
test
jmp
in
mov
adc
jo
lea
sub
sub
and
arpl
push
pop
ret
icebp
push
mov
inc
hlt
add
rol
and
mov
inc
cwde
test
sets
test
xor
mov
inc
mov
xchg
dec
and
retf
ror
adc
xchg
mov
or
xchg
in
and
add
push
popa
icebp
xor
sbb
mov
xor
and
inc
pusha
jg
mov
mov
xchg
and
mov
test
nop
cs
sub
mov
add
or
xchg
mov
movs
addr16
shr
sti
and
fmul
mov
xor
sub
mov
dec
lods
jl
push
sahf
or
pop
arpl
nop
ror
aaa
mov
inc
call
dec
pop
xchg
(bad)
inc
aad
pop
pusha
jmp
movs
and
rcr
mov
fadd
xor
fnstenv
or
push
xor
adc
mov
mov
pushf
or
add
add
lods
dec
loope
lock
push
push
lock
adc
and
mov
enter
inc
(bad)
sbb
jp
jmp
sub
mov
pop
xlat
xor
add
aas
inc
add
out
sub
add
sub
rcr
xor
lea
retf
mov
pop
and
ret
adc
leave
or
sbb
gs
and
jb
sub
dec
mov
mov
mov
sub
sub
xor
fmul
push
(bad)
mov
ins
jne
jecxz
push
in
adc
adc
test
add
sub
fiadd
push
jecxz
jne
gs
push
in
add
jne
or
push
loopne
sub
pop
fs
xchg
sub
inc
outs
je
or
mov
inc
jne
push
test
inc
pop
push
(bad)
pop
cld
movs
fwait
(bad)
cmps
sub
pop
outs
pop
cs
jne
fisubr
push
outs
mov
mov
rcl
int
mov
xchg
fcom
or
push
test
mov
pop
xchg
fwait
or
sub
div
mov
test
or
push
sbb
dec
leave
sbb
cmp
mov
test
xor
in
nop
and
jmp
ss
out
mov
inc
lea
rol
jg
dec
mov
movs
dec
adc
jb
sbb
sub
mov
push
cmp
push
add
nop
js
sbb
loopne
mov
clc
jns
mov
and
fcomp
pop
out
popa
pop
sub
cmp
or
sub
mov
lock
add
push
inc
cmp
and
sbb
xchg
or
fdiv
inc
pop
cld
repz
(bad)
cs
or
xchg
mov
or
cmp
sar
addr16
cdq
sbb
(bad)
loop
lds
pop
mov
test
mov
mov
fwait
shl
sbb
dec
lea
mov
xchg
adc
cld
xchg
or
xchg
test
sbb
jecxz
xchg
adc
jecxz
add
fs
sub
adc
jmp
cmp
add
loop
add
ror
cmp
push
inc
sbb
aad
clc
jno
add
xchg
jl
jl
aaa
(bad)
dec
sbb
and
xchg
push
xor
cmp
and
cmp
retf
add
add
xchg
test
js
mov
mov
adc
addr16
jmp
shl
cmps
or
cdq
mov
sbb
sub
adc
popa
addr16
jmp
xor
lea
rol
jle
in
adc
fnsave
cli
lahf
adc
pop
add
add
nop
movs
push
std
scas
lahf
adc
add
add
aas
mov
mov
(bad)
shl
cld
fwait
cmp
xchg
sti
cmp
aad
rcl
ja
ds
lea
jo
jo
jg
adc
ret
aaa
lock
mov
ror
scas
scas
pusha
push
scas
push
rcl
retf
and
shr
jnp
add
xor
sub
push
jmp
inc
fist
ror
and
sub
jne
ins
test
or
rol
aas
pop
test
mov
das
mov
adc
fs
mov
push
ins
sub
push
add
sub
or
mov
ds
mov
pusha
or
aam
and
add
hlt
dec
mov
cmp
imul
je
or
inc
add
sbb
in
xor
adc
cmp
mov
shl
or
stos
sti
cmp
sbb
jg
jl
cmp
and
adc
(bad)
cmp
lea
pop
sub
push
inc
jg
sbb
pop
iret
add
add
es
repnz
out
sti
mov
mov
add
test
retf
xchg
sbb
cwde
mov
push
sbb
test
(bad)
jecxz
or
lea
enter
mov
add
sahf
ret
rcr
push
dec
loope
mov
pop
lea
jge
jmp
push
xchg
cmp
xchg
xor
and
cmps
inc
rol
inc
dec
mov
jmp
(bad)
jnp
scas
fld
in
adc
xchg
mov
leave
cmp
repz
mov
inc
(bad)
inc
mov
daa
or
push
fsub
mov
adc
jge
je
jno
pop
and
ins
inc
fld
xchg
xlat
mov
rcr
add
cs
dec
in
int
inc
add
(bad)
push
dec
bound
fisub
mov
ins
xor
rcr
inc
add
or
adc
retf
xchg
fbstp
push
inc
push
js
enter
sbb
inc
pusha
aaa
mov
or
out
adc
add
push
xor
mov
jle
ret
mov
cwde
nop
and
xor
or
and
data16
in
inc
or
retf
mov
xchg
stos
mov
push
not
lea
xchg
mov
mov
or
push
sbb
mov
lahf
or
inc
pop
sti
ret
jl
sbb
sbb
mov
clc
ss
cdq
pop
adc
loopne
and
xchg
cmp
popa
pop
outs
dec
sub
shr
xor
test
add
out
pop
popf
fdivr
iret
adc
repz
repz
add
add
push
add
call
jbe
push
sar
add
xor
ins
mov
nop
xchg
mov
pop
mov
out
mov
mov
cmp
fwait
mov
push
outs
jbe
fistp
dec
push
push
push
ret
add
add
add
ds
push
add
add
push
pop
outs
and
jb
inc
or
push
or
dec
shr
aas
arpl
cmp
rcl
add
push
test
dec
pop
test
mov
cmp
imul
dec
movs
jge
ins
pop
xchg
ss
inc
movs
aas
pop
shr
jmp
add
mov
movs
adc
cld
pusha
xchg
dec
lahf
ror
push
or
dec
xor
mov
inc
jb
inc
adc
xor
adc
dec
test
adc
and
fild
dec
push
pushw
pop
push
mov
fs
enter
sub
ror
in
mov
sbb
shr
adc
daa
or
fcom
jae
mov
add
xchg
popa
pop
push
pminub
ret
add
xchg
in
daa
fs
shl
mov
cmp
cmp
inc
xlat
or
fs
sbb
sbb
cmp
fstp
adc
test
xlat
xlat
cmp
(bad)
addr16
xlat
adc
jns
and
aam
cmps
sbb
fs
cmp
inc
pop
shr
and
dec
or
addr16
adc
jmp
cmp
sbb
adc
cmp
dec
add
in
les
int
xor
je
sbb
mov
mov
pop
cmp
jno
adc
lock
cmp
or
mov
sar
adc
add
add
stos
jl
rol
cmp
ret
cmp
adc
sbb
add
adc
xor
ret
test
cmp
and
xchg
pop
adc
cmp
mov
das
and
push
lds
mov
add
and
loope
dec
or
jmp
pop
pop
ja
xor
adc
push
dec
test
and
or
popa
push
push
inc
dec
cmc
or
leave
add
xor
nop
and
and
call
iret
ins
adc
mov
leave
cs
stos
lahf
out
ds
ins
jns
test
stc
cs
out
push
jecxz
adc
sbb
jae
sbb
pop
(bad)
cmp
push
repnz
(bad)
mov
call
jp
jge
in
cmc
mov
dec
push
pop
push
mov
jnp
push
jbe
lea
push
mov
jo
push
movs
xor
(bad)
fisttp
mov
or
add
xor
inc
and
ror
(bad)
sub
popf
adc
and
jmp
pop
lods
mov
mov
pop
ret
mov
pop
and
push
aad
mov
xchg
or
inc
dec
mov
add
pusha
mov
(bad)
xchg
push
fstp
(bad)
ins
ds
loopne
loop
jecxz
in
out
sahf
cmps
in
out
jmp
jmp
xchg
inc
push
lock
add
out
repnz
out
fisubr
lods
lods
iret
repz
mov
cmc
div
neg
repz
stc
cli
mov
cmp
repz
aam
(bad)
xchg
jo
clc
xlat
and
and
and
mov
inc
pop
cmp
shl
xlat
mov
aaa
add
xchg
and
push
adc
pushf
add
test
xchg
mov
mov
cmp
dec
sub
and
aam
or
jmp
xlat
push
ds
mov
pop
in
cs
mov
sahf
and
test
jo
fld
test
movs
adc
mov
pop
imul
fmulp
pusha
jecxz
ret
test
shr
push
out
dec
xchg
xchg
adc
aam
pop
adc
pop
rcl
sbb
ficom
xchg
and
sbb
in
out
shr
in
rcl
inc
loope
enter
add
add
sbb
in
and
add
loopne
and
xor
loopne
pop
fcom
fld1
fstp
inc
add
add
ss
sbb
add
or
mov
add
and
test
mov
or
add
xlat
add
xor
test
lods
sub
mov
xchg
sbb
mov
jne
movzx
sbb
or
lahf
loopne
or
inc
out
mov
jb
lods
jo
dec
push
fcom
movs
adc
int3
jno
add
aam
xchg
mov
out
dec
in
jmp
arpl
push
stos
test
xor
add
pusha
mov
cmps
mov
jge
iret
sar
push
adc
lahf
out
ds
fcomp
jle
sbb
push
sub
dec
into
push
jne
add
sub
cs
fnstsw
add
or
mov
ja
add
add
push
pop
or
mov
fistp
fdivr
xor
pushw
jmp
jl
xchg
(bad)
loop
fsub
inc
xor
add
out
and
mov
push
(bad)
jle
add
inc
out
cvtps2pi
push
or
jg
sub
jne
mov
push
sub
jle
in
add
std
dec
fnstcw
je
jmp
cs
add
xchg
mov
aas
in
mov
mov
xchg
adc
pop
test
pushf
aad
push
outs
xor
add
jnp
inc
push
push
pop
and
rol
jmp
or
ror
or
push
jnp
mov
push
cmps
dec
mov
ret
je
or
mov
fs
lock
adc
or
les
xchg
mov
or
enter
dec
pushf
sub
jmp
jle
push
pop
sbb
add
test
lock
fdiv
mov
add
lock
fld1
mov
and
inc
rcl
cdq
pop
adc
test
push
nop
push
sbb
(bad)
es
mov
nop
add
pop
dec
push
add
out
add
mov
cmp
add
cwde
inc
push
or
mov
or
arpl
clc
gs
mov
test
aaa
fisttp
out
sahf
test
in
push
pop
js
or
cmps
rol
aas
or
add
je
adc
dec
dec
mov
add
mov
mov
mov
dec
inc
(bad)
stc
adc
std
xlat
adc
cmp
or
test
je
dec
mov
pop
jne
add
sbb
test
icebp
movs
add
dec
out
int3
leave
mov
jmp
mov
mov
add
mov
inc
je
sub
or
add
imul
add
jne
jnp
mov
adc
sbb
xchg
adc
add
and
pop
rol
and
push
adc
xor
out
adc
add
clc
sub
in
popf
cbw
push
or
jmp
rol
cmps
inc
hlt
xor
hlt
mov
inc
mov
mov
or
cwde
mov
and
call
mov
(bad)
fsub
xor
aaa
and
add
aas
ret
cmp
mov
cli
mov
cmp
or
push
cmp
add
daa
mov
fld
push
pop
dec
cmps
fcomp
iret
shl
daa
push
outs
dec
push
xor
ret
adc
sub
mov
ret
ret
lahf
shl
loopne
test
das
sar
mov
add
cs
add
cs
test
or
repnz
sub
inc
jns
add
push
js
pop
fistp
xchg
cld
push
jmp
std
xor
(bad)
jmp
sub
dec
arpl
add
cs
push
xor
movs
lds
mov
dec
or
adc
fmul
fadd
test
pusha
lock
adc
sahf
rol
or
shl
sbb
mov
or
in
aam
cmp
daa
fs
mov
enter
xor
or
mov
sbb
add
cmp
pop
push
js
shr
std
adc
sub
mov
jg
pusha
adc
sub
mov
(bad)
add
repz
add
movs
or
mov
cmp
shr
cmp
xor
test
enter
dec
mov
push
enter
std
or
and
xor
xchg
push
push
mov
ror
push
xor
addr16
xchg
dec
sbb
mov
popa
clc
jns
lock
clc
fs
sub
mov
add
retf
cwde
(bad)
pop
xor
jb
or
or
inc
mov
add
pusha
jecxz
mov
and
sbb
adc
ins
ficomp
and
sub
test
ffreep
add
xchg
fstp
jo
fild
ret
lods
inc
dec
je
pop
aam
fild
and
test
iret
dec
(bad)
inc
pop
pop
or
inc
dec
or
(bad)
and
and
mov
imul
imul
icebp
inc
add
arpl
push
stos
mov
xor
or
and
jmp
nop
daa
inc
mov
cdq
mov
inc
fs
adc
mov
test
enter
das
std
adc
pushf
and
or
and
sub
add
and
imul
jge
mov
fcomp
jne
out
add
adc
sub
aam
and
ficom
lods
ror
in
lods
sbb
call
loope
aam
cwde
loopne
dec
aam
das
bound
das
sub
xor
add
push
jle
push
(bad)
jge
sbb
add
mov
xor
jo
mov
mov
adc
(bad)
dec
imul
(bad)
jo
add
adc
adc
xor
sub
cmp
xor
xchg
add
push
adc
xor
push
pop
sub
lock
das
test
adc
mov
push
hlt
js
add
out
jns
xor
ins
jo
jo
or
and
js
jecxz
add
push
sar
add
pop
test
dec
cdq
sbb
ret
inc
mov
sbb
or
je
lfs
adc
add
mov
add
xchg
cmp
retf
ja
adc
fstp
add
jecxz
mov
fdivr
and
inc
dec
mov
xor
mov
pushf
xor
jle
popa
movs
int
imul
dec
and
or
sub
and
push
xchg
cmp
mov
add
inc
dec
sub
adc
mov
lea
and
std
out
add
jmp
xor
fwait
(bad)
jmp
hlt
popa
adc
jecxz
rol
add
adc
leave
jo
sti
or
add
push
outs
lods
std
dec
imul
adc
xor
prefetcht2
pusha
out
loope
inc
mov
das
int
xchg
les
mov
in
in
pop
mov
mov
jmp
test
pop
rol
pop
int
add
jmp
fwait
sub
adc
xor
(bad)
or
jle
jl
and
sbb
sbb
and
add
and
cwde
and
adc
ja
or
sbb
jne
cld
xchg
lods
jge
add
shr
ja
test
cmps
mov
fld
push
add
fld
add
cdq
dec
sbb
sbb
inc
push
adc
sub
dec
in
and
cmp
xor
and
and
mul
fs
lea
fiadd
mov
push
xchg
lods
pop
pop
fisttp
jb
cmp
pop
pop
fcomp
rcl
push
adc
sbb
sub
pop
mov
mov
sub
pop
mov
mov
mov
movs
push
or
popf
adc
nop
ret
inc
and
jmp
add
mov
daa
sbb
mov
push
jae
inc
push
and
mov
test
adc
xchg
push
push
push
push
pop
aam
inc
add
call
mov
fsub
loopne
and
lock
and
and
inc
sbb
mov
push
sub
fsub
xlat
bound
mov
jnp
push
dec
push
or
push
and
dec
or
stos
and
jae
cmp
loopne
push
adc
mov
arpl
push
sbb
cmp
stos
gs
rol
sub
jne
and
aam
add
fld
mov
mov
or
ss
push
adc
or
stos
jnp
cmps
test
cld
push
xchg
mov
ret
jo
or
jmp
mov
loope
imul
add
lods
or
xor
add
std
jge
jp
or
add
cmp
adc
es
neg
test
jge
int3
jmp
sub
xchg
xchg
adc
jno
in
push
xor
jl
fdiv
mov
xor
bound
add
(bad)
cmp
and
mov
repz
and
cmp
adc
push
xlat
push
dec
jno
or
pop
mov
ins
pop
push
sub
sbb
iret
pop
or
xchg
mov
daa
mov
leave
add
popf
stos
mov
fst
ins
rcl
xor
adc
cmp
movs
lods
cwde
push
mov
inc
jl
mov
mov
xor
fsub
or
sub
(bad)
pushf
ror
adc
fidiv
test
fdivr
mov
lods
push
sub
ja
jmp
xchg
adc
or
test
or
xor
add
add
xor
and
lea
fwait
sbb
inc
jne
add
out
mov
push
data16
push
pop
popf
sbb
push
out
jmp
sub
pushf
out
dec
popa
scas
inc
stc
lds
push
popa
(bad)
scas
and
outs
dec
js
in
jmp
xchg
adc
pop
jecxz
dec
jo
in
test
jmp
mov
push
shl
cli
mov
inc
(bad)
jae
or
and
dec
(bad)
and
mov
or
aas
and
push
and
and
adc
out
mov
std
std
std
adc
sub
or
outs
jno
and
mov
jb
sahf
xchg
sub
or
or
push
sub
mov
jo
xchg
push
xchg
cdq
je
adc
dec
mov
sbb
xchg
inc
das
xchg
adc
and
movs
nop/reserved
cdq
fs
push
sbb
test
add
or
lea
or
add
ret
es
std
inc
outs
sbb
nop
xchg
or
dec
retf
nop
add
dec
retf
leave
and
nop
mov
mov
mov
and
and
inc
or
add
mov
(bad)
popf
rol
lea
and
jo
mov
popa
gs
push
fild
out
mov
popa
push
inc
and
fs
int
mov
mov
adc
or
sahf
and
mov
idiv
test
lea
scas
add
jl
cmp
test
or
(bad)
or
ror
scas
lods
dec
adc
cmps
push
dec
pusha
mov
or
inc
sub
movs
scas
add
rcl
push
add
rol
or
add
sub
mov
dec
sahf
nop
xchg
push
sbb
add
add
movs
inc
ss
push
sub
adc
inc
popf
add
xchg
cwde
dec
mov
lods
mov
cld
or
adc
aaa
adc
dec
mov
dec
push
or
jmp
add
and
imul
test
or
mov
mov
cld
outs
and
pop
mov
add
sahf
inc
jns
loopne
add
push
ror
iret
loopne
stos
push
xor
sub
rcr
pop
lods
fwait
dec
cmp
push
inc
or
adc
push
ror
cdq
sbb
shl
clc
clc
(bad)
adc
dec
mov
mov
clc
adc
enter
xchg
jl
hlt
add
ins
jne
xchg
lock
xor
movups
pop
jl
pop
ss
arpl
or
or
and
jne
pop
mov
loopne
cli
leave
lods
stc
nop
pop
stc
popa
scas
xor
xor
or
inc
add
pop
push
pop
mov
sub
push
imul
inc
jp
fiadd
or
pop
jns
mov
repnz
jmp
or
or
enter
(bad)
hlt
xchg
or
jmp
sbb
pop
or
movs
loope
fsub
adc
jne
add
mov
sahf
mov
aaa
push
outs
push
or
and
iret
enter
jmp
mov
pop
or
cmp
fild
es
sub
xor
out
mov
mov
scas
jl
call
jl
jl
push
or
mov
pop
mov
sub
jb
test
mov
push
std
sub
test
pop
cmps
test
bound
dec
adc
into
inc
jno
push
test
and
out
lahf
and
jmp
cmp
add
pop
inc
dec
test
int3
and
popa
jbe
inc
pop
popf
lea
lahf
mov
pop
mov
pop
ret
mov
sar
lds
sub
test
inc
or
imul
cld
pop
(bad)
in
not
mov
and
push
and
sbb
sbb
iret
xchg
xchg
ins
pop
outs
jp
mov
and
sub
ds
mov
and
sbb
lods
inc
pop
scas
sub
dec
push
ret
mov
adc
adc
dec
fistp
push
or
mov
xchg
dec
sbb
and
sub
fs
pop
adc
and
jns
pop
add
add
out
out
jle
iret
xchg
pop
push
mov
bound
mov
cmp
push
adc
sub
or
or
and
or
push
add
xchg
iret
jne
adc
arpl
pop
mov
dec
adc
and
xor
std
jp
lea
je
ret
aas
test
mov
in
push
mov
cmc
push
pop
or
test
push
dec
adc
push
push
pop
push
inc
imul
pop
pop
inc
push
in
inc
imul
pop
mov
std
push
std
push
std
push
or
dec
jne
push
test
mov
cmps
cmp
fild
inc
or
push
test
scas
or
(bad)
push
jnp
dec
call
mov
dec
sbb
jns
test
dec
std
out
adc
pop
dec
std
stc
cmp
dec
pop
std
xor
mov
xor
and
(bad)
shl
xchg
or
ret
push
sti
sub
sub
xchg
shl
shr
and
outs
inc
inc
push
inc
std
xchg
mov
xor
push
add
std
push
add
xor
hlt
push
mov
sub
pop
inc
or
cmp
cmp
sub
fcmovne
and
dec
cmp
test
in
sub
push
xor
add
push
mov
mov
loope
inc
mov
xchg
adc
jge
fistp
adc
cmp
and
sub
or
sbb
add
sub
xor
test
into
mov
xchg
cmp
pop
cmps
aas
push
push
inc
repnz
push
pop
inc
loopne
icebp
inc
mov
test
(bad)
shr
adc
pop
push
add
add
and
xor
clc
inc
add
xchg
iret
add
shl
fld
(bad)
mov
(bad)
rol
add
push
rcl
hlt
jnp
mov
pop
xor
or
push
push
dec
pop
sub
mov
in
jnp
push
jbe
and
or
push
and
fisub
sbb
cmp
adc
dec
pop
lea
mov
or
jo
and
dec
or
fmul
mov
push
push
cmovge
pop
mov
mov
add
lock
mov
inc
retf
in
adc
pop
xchg
clc
mov
adc
jg
movs
xchg
jg
dec
or
jg
cdq
mov
push
fadd
pop
mov
call
add
les
sub
add
lods
pop
data16
popa
mov
xlat
in
cdq
mov
mov
test
pop
push
ror
or
retf
sub
xor
ins
leave
push
xor
inc
nop
and
sub
and
pop
inc
mov
cs
add
lock
adc
or
add
sub
lea
out
fadd
enter
jge
gs
loopne
pop
imul
pxor
jmp
mov
imul
and
adc
and
inc
pop
scas
push
sub
jo
mov
cld
dec
jne
mov
les
fs
push
dec
cdq
dec
inc
jne
fsubr
push
sub
iret
mov
add
xor
inc
or
or
cmp
or
fnsave
and
or
or
jne
add
inc
adc
aas
mov
jmp
jmp
adc
xor
int
jnp
out
add
call
shl
jg
sub
inc
push
jl
cmps
jg
pop
mov
mov
inc
and
pop
stos
jno
jne
repnz
push
sub
pop
mov
and
in
inc
or
cs
inc
and
sbb
sbb
sub
jecxz
adc
push
sbb
stc
jmp
pop
imul
push
cmp
adc
movs
inc
jae
mov
daa
aas
pop
ret
push
fs
and
push
mov
rol
cmp
enter
xor
shr
enter
mov
cmps
fsub
mov
adc
adc
pop
cmp
cmp
ror
mov
sbb
sbb
and
daa
or
sbb
rol
xchg
push
push
add
lods
out
loopne
rcr
push
xchg
ror
sub
je
cld
or
add
(bad)
mov
fist
mov
add
arpl
jl
push
jnp
aad
mov
push
ror
xchg
aam
ins
rol
xor
shr
push
fldenv
enter
jp
gs
ret
xor
adc
imul
jnp
jb
or
movs
ret
or
mov
retf
sub
adc
add
cmps
mov
call
(bad)
push
dec
sahf
add
add
pop
mov
mov
mov
movs
lods
dec
xor
jmp
pop
xchg
icebp
rol
pushf
jge
or
jg
aas
push
inc
sbb
sbb
shl
pop
xchg
int3
sub
pop
pop
ror
mov
or
or
adc
dec
sbb
adc
cmp
add
pop
xchg
fild
daa
mov
(bad)
or
and
mov
sub
or
loopne
xchg
cwde
dec
loope
outs
dec
and
add
sahf
mov
or
push
test
jbe
icebp
and
aaa
mov
add
(bad)
jne
pop
adc
inc
or
test
inc
cmp
add
xor
outs
jmp
pop
std
movs
or
and
xor
cld
jne
mov
push
and
ficomp
js
jmp
mov
xor
mov
daa
test
and
push
sub
out
add
push
je
add
stos
xor
add
add
dec
jmp
jnp
mov
fdivr
push
int
nop
js
into
sub
add
add
dec
mov
add
loop
cmc
add
jle
add
div
ret
retf
mov
jmp
imul
push
and
jecxz
inc
mov
les
and
daa
push
push
lock
jnp
dec
loopne
mov
outs
dec
jmp
or
div
mov
jmp
jmp
adc
js
or
adc
ror
or
mov
inc
cld
lea
cmp
imul
popa
loope
in
jne
test
outs
clc
pop
(bad)
call
mov
pop
test
fld
es
add
into
call
fisubr
jo
test
lods
sub
push
push
xor
cli
cmp
into
cwde
xchg
and
push
jo
xchg
xchg
adc
cmp
adc
xchg
mov
fld
push
aam
mov
adc
and
sbb
jo
sub
movs
sbb
mov
shr
test
lock
into
mov
jno
sbb
xchg
or
and
push
cmps
or
adc
jnp
or
lahf
sub
lods
jb
stos
fmul
sbb
mov
shl
cmc
jecxz
push
adc
pusha
test
ins
loope
mov
xor
mov
adc
shr
rol
and
mov
adc
add
mov
ja
mov
add
mov
push
shl
cmp
push
ss
cmp
jp
sbb
xor
movs
or
loopne
mov
push
inc
jp
mov
shl
sub
inc
cdq
jge
mov
jnp
xlat
fild
add
sub
mov
xchg
xchg
in
shl
lds
or
pop
adc
pop
dec
pushf
pop
shr
xlat
fcom
xchg
pop
sub
aas
fdivr
(bad)
pop
sbb
sub
add
dec
dec
outs
mov
mov
dec
hlt
mov
dec
pop
adc
xchg
or
inc
cli
loopne
mov
xlat
mov
movs
add
cmc
xchg
hlt
cmc
or
pushf
mov
pop
inc
aaa
or
lea
and
adc
test
mov
jp
or
mov
mov
call
inc
pop
and
inc
sub
pop
and
rol
sub
in
ins
sti
add
gs
dec
or
jnp
pop
adc
adc
adc
push
jg
cmp
dec
cmc
cmp
push
lahf
(bad)
jmp
outs
xchg
std
fsub
mov
pop
xlat
cwde
imul
jns
movs
lock
mov
aaa
ss
lods
sbb
pop
rcr
and
mov
or
mov
and
inc
jb
adc
ss
adc
pop
loopne
mov
or
in
sbb
fwait
sbb
popa
(bad)
jp
cwde
pusha
and
and
jmp
fisttp
mov
dec
(bad)
cmp
(bad)
mov
pop
adc
jl
movlps
add
xor
fistp
sub
mov
sbb
mov
adc
cmps
lahf
push
pop
and
ds
test
mov
or
dec
inc
clc
test
and
test
test
push
adc
add
or
ja
sbb
dec
aad
jmp
mov
dec
jmp
lods
and
jb
inc
mov
jmp
retf
sub
sbb
add
sbb
inc
sbb
sbb
mov
sbb
add
push
or
adc
push
das
mov
repz
adc
(bad)
push
enter
dec
pop
inc
inc
sbb
movs
movs
lock
mov
or
pop
test
adc
enter
adc
pop
mov
inc
loope
mov
push
mov
push
dec
jp
or
push
pop
pop
les
pop
cs
or
adc
std
mov
sbb
push
jo
adc
fcomp
inc
sub
scas
call
push
pop
inc
arpl
cmp
lds
loop
xchg
or
sbb
push
or
loop
lods
push
mov
sbb
or
adc
lds
jge
stos
or
fdivr
xor
add
int
push
push
add
mov
(bad)
ja
call
icebp
sub
rcr
jmp
test
ret
ret
fbstp
xor
xchg
sbb
or
xchg
fbstp
call
add
pop
xor
add
add
add
dec
cld
icebp
mov
add
ror
sbb
xor
nop
pop
call
pop
jg
cmps
xor
rcl
lds
pop
sub
int3
xor
arpl
mov
and
arpl
(bad)
mov
add
(bad)
or
xchg
out
xchg
ret
sbb
cli
fst
or
or
mov
cmp
mov
inc
bound
xlat
xchg
sbb
inc
dec
(bad)
push
push
add
or
mov
aaa
push
push
sbb
ds
xor
inc
mov
mov
nop
and
popf
add
push
lods
mov
jnp
mov
sbb
lock
ds
pop
pop
or
cmp
xor
jmp
cmp
xor
push
shl
mov
push
adc
adc
inc
test
add
adc
out
sbb
jmp
pop
xor
nop
xchg
ftst
pop
jae
or
outs
cmp
add
sub
sbb
add
faddp
aaa
in
dec
mov
add
pop
or
cmp
sbb
mov
shl
add
adc
xchg
mov
call
jnp
xor
pop
and
loopne
movs
push
push
test
or
pop
(bad)
hlt
and
xchg
push
sbb
test
push
mov
sbb
pop
xor
adc
xchg
jmp
and
xchg
and
sub
or
cwde
sbb
push
pop
lds
xor
pop
add
cmp
add
aam
fwait
inc
cdq
sub
sub
jne
es
or
loop
pop
and
xchg
add
adc
adc
inc
push
(bad)
mov
sbb
ret
stos
inc
movs
mov
adc
xor
(bad)
ja
adc
mov
add
adc
adc
jae
jg
jle
clc
sub
xchg
add
add
xchg
mov
adc
add
mov
nop
hlt
cld
ror
and
sti
inc
ret
pcmpeqw
scas
and
je
add
mov
popf
aam
loopne
adc
jmp
push
sbb
ret
jl
lea
ror
pop
xor
repz
add
ret
(bad)
sub
in
icebp
ins
test
(bad)
rol
lods
mov
daa
rcr
adc
or
adc
sub
into
and
inc
aas
xchg
xchg
mov
or
clc
push
in
imul
and
mov
out
ins
loop
not
out
aam
push
add
push
aam
mov
sub
enter
xchg
add
bound
sbb
push
adc
loopne
add
xor
imul
(bad)
cmp
inc
movs
mov
nop
mov
xchg
fisubr
retf
add
and
add
rcr
shl
sbb
sbb
les
add
or
add
jo
jmp
add
outs
and
and
pop
xor
rcr
add
sar
lahf
dec
shl
xor
jb
add
or
jae
ret
jge
cwde
out
aad
cmp
test
stos
and
push
data16
sub
mov
inc
clc
push
add
lock
jmp
dec
add
(bad)
sub
push
push
jb
rcl
pop
jmp
rcl
rol
or
and
mov
inc
cs
xor
push
hlt
jmp
push
mov
jl
clc
and
or
enter
inc
ins
lea
inc
mov
or
sti
pop
pop
or
or
add
or
adc
shl
push
pop
enter
jl
enter
ret
mov
and
enter
retf
jo
or
and
cmp
push
inc
fucomip
arpl
stc
mov
xor
mov
enter
mov
sbb
je
add
push
fsub
add
aas
pusha
in
xchg
xchg
cmp
iret
or
cmps
pop
loope
test
pop
mov
mov
add
jl
ins
mov
adc
push
dec
sahf
adc
outs
adc
jnp
dec
retf
test
sub
ret
xchg
inc
sbb
shr
inc
dec
push
fwait
xchg
shl
or
js
dec
adc
push
daa
or
push
sbb
sub
loopne
test
inc
sbb
add
ins
fs
ret
inc
sbb
sti
mov
gs
adc
inc
jbe
xor
mov
(bad)
test
mov
cmp
mov
adc
push
inc
or
inc
jmp
xchg
sbb
mov
call
call
or
and
test
shr
sbb
sbb
popf
adc
sub
jl
std
and
jecxz
and
inc
and
mov
pop
jmp
jmp
push
xchg
fild
add
or
xchg
fcom
add
leave
and
loope
imul
in
popa
lods
cmp
adc
adc
mov
into
push
mov
fucom
cmp
aad
push
mov
push
icebp
mov
fild
adc
add
or
dec
mov
inc
rcr
cmp
dec
fcmovb
test
sbb
sub
push
lahf
(bad)
imul
fcom
adc
call
fwait
or
jne
fwait
xor
dec
nop
dec
jl
mov
sbb
into
jne
fs
jo
sub
inc
dec
add
fcomp
push
mov
xchg
pop
sbb
and
mov
adc
shl
pop
add
add
push
mov
stos
jo
retf
sub
ret
xchg
sub
lock
mov
test
sub
or
mov
dec
popa
fadd
push
int3
mov
sub
or
sub
in
in
adc
sbb
xchg
ja
add
cdq
fcomp
jge
sbb
sbb
test
ja
popa
push
aas
lock
out
push
lock
inc
mov
push
pop
jbe
adc
push
sbb
nop
push
pop
imul
aas
adc
push
cmp
lock
sbb
jo
push
lock
or
in
sub
add
les
aad
arpl
daa
ja
jmp
add
jecxz
push
fsubr
and
mov
or
clc
mov
mov
and
(bad)
lock
mov
jecxz
arpl
dec
test
and
inc
xchg
or
dec
int3
adc
add
ret
push
test
cmp
adc
sbb
aam
cmp
adc
adc
pop
pop
cmp
or
jge
(bad)
push
or
rol
push
imul
int
inc
ins
xchg
add
push
xchg
cmp
test
adc
mov
ins
or
pop
adc
shl
adc
sbb
hlt
jbe
xor
popa
adc
ss
or
mov
add
aam
xchg
push
push
mov
scas
loop
add
mov
xchg
mov
fnstsw
push
stos
and
shr
test
test
shl
pop
mul
scas
adc
push
in
jl
push
xchg
cli
aas
jge
xor
jecxz
in
clc
(bad)
or
shl
(bad)
std
mov
add
nop
fadd
loop
add
jmp
or
mov
fld
push
inc
mov
lea
add
fwait
mov
loopne
push
inc
rcl
dec
inc
sbb
adc
ja
lock
cmp
test
xor
nop
jns
lock
pop
aam
test
sub
mov
or
inc
fdivr
pop
jmp
lock
mov
dec
aas
call
bound
cld
cmp
js
test
mov
jge
or
ja
test
dec
pop
ja
out
dec
test
dec
inc
sub
add
push
or
mov
and
jo
pop
mov
add
fcom
lea
jmp
jg
rcr
cmp
mov
cdq
and
cvtps2pi
push
sbb
nop
iret
fadd
mov
jne
pop
add
adc
mov
rol
or
add
fistp
mov
jnp
mov
xor
fsubr
shl
cmp
cmp
jle
xor
or
aaa
xchg
mov
clc
inc
add
clc
xchg
and
add
clc
pop
sbb
jge
call
jge
pusha
xchg
add
mov
push
cwde
cmp
sub
daa
jge
jnp
sbb
cmc
clc
lahf
out
add
pop
mov
mov
lds
xchg
call
aad
std
data16
jge
xor
mov
mov
xchg
in
pop
fs
sbb
repz
and
ret
call
jmp
fld
fmul
mov
aad
sub
push
sub
and
lock
push
cdq
mov
sub
fld
dec
add
pop
cmps
fiadd
arpl
sbb
push
xor
xor
xor
inc
sbb
ror
add
and
shr
in
cld
add
in
mov
add
aas
mov
xchg
dec
popf
jl
repz
shl
sar
lods
lea
pop
aam
fadd
es
icebp
int
push
xor
push
cmc
mov
jmp
inc
jns
add
cmp
shl
push
add
cdq
lock
add
sti
jne
mov
xor
lds
xchg
aam
or
hlt
call
rol
mov
inc
test
rcl
sbb
aam
adc
aam
in
and
xor
xchg
lock
sbb
xchg
mov
add
cld
jg
inc
add
sub
inc
fcmovnb
inc
cmp
inc
mov
test
mov
arpl
pop
add
cmp
(bad)
xchg
repz
test
adc
or
push
fwait
aaa
outs
cld
rcl
aad
dec
add
mov
xor
push
xchg
ret
or
or
loopne
(bad)
add
adc
adc
cwde
cmp
cwde
psubq
dec
or
adc
test
aad
mov
test
mov
data16
pusha
and
ret
(bad)
xor
xchg
jge
dec
lea
test
push
shl
je
ret
stos
xor
fdivr
test
xor
fcmovbe
mov
and
add
lea
imul
dec
daa
popa
add
cdq
ss
add
outs
cli
sbb
cmp
lea
outs
adc
rol
xchg
aaa
and
loopne
xchg
int
outs
setnp
jl
add
adc
pcmpeqw
aam
ltr
push
jno
shr
xchg
lods
push
mov
ins
loop
cmp
aam
sub
js
dec
fadd
sub
mov
dec
rcl
adc
dec
test
or
sbb
je
mov
mov
shl
call
adc
sub
outs
jo
inc
cmp
xor
jmp
jg
cmp
jecxz
xchg
sub
sub
xchg
dec
jb
neg
or
add
sub
add
ret
sub
xchg
dec
aam
add
sub
mov
(bad)
out
aam
fidiv
loopne
shl
inc
leave
test
das
inc
adc
and
test
ss
ja
icebp
pusha
cmp
fsubr
repz
loop
sti
lods
es
cs
or
and
jne
shr
shr
outs
mov
add
pushf
int3
jmp
sbb
or
test
js
adc
xor
lds
lock
dec
push
test
xor
sbb
mov
cmp
imul
gs
scas
mov
xchg
jo
add
push
pop
add
(bad)
hlt
cmp
jne
shl
inc
mov
dec
bound
cmp
pop
lock
shl
push
out
(bad)
push
mov
adc
ins
sub
pop
mov
mov
into
mov
mov
aaa
enter
fs
or
add
loopne
and
push
stos
retf
lar
sbb
or
movs
mov
xchg
add
push
jb
js
jl
sub
push
push
ins
cmp
shl
xchg
jg
ja
les
inc
adc
sub
inc
add
add
inc
pop
js
cwde
lock
aas
pusha
fxtract
rep
xor
outs
xor
jl
neg
pushf
sub
mov
or
in
mov
sbb
cdq
in
ins
aaa
dec
ret
adc
push
fsubr
sbb
loop
jl
lahf
pop
add
sub
mov
lea
cld
fidivr
popa
inc
add
push
fwait
mov
push
dec
adc
push
and
sahf
or
pop
and
lahf
iret
imul
inc
or
jbe
jle
xor
and
out
or
ja
jg
lea
add
mov
daa
cld
fbstp
push
jne
mov
or
and
jne
mov
dec
int
sti
mov
cmp
xchg
jg
cld
xchg
jb
(bad)
cmps
clc
xchg
clc
leave
inc
push
popf
jg
cld
hlt
cld
nop
pushf
or
hlt
cld
inc
sub
test
movs
add
xchg
jg
sub
enter
unpcklps
adc
add
enter
mov
enter
dec
jge
je
inc
xchg
lock
aas
daa
cmc
sar
or
sub
clc
and
mov
inc
aam
shr
lea
gs
in
leave
and
adc
adc
cmps
jbe
es
jnp
cld
cwde
cli
pop
sub
jle
xor
cs
mov
nop
cmp
inc
sub
add
(bad)
inc
and
dec
add
cmc
mov
mov
xor
adc
xchg
aam
mov
pop
add
adc
mov
add
add
jmp
loope
test
fucom
bound
cdq
sub
fnsave
or
or
inc
mov
shl
(bad)
nop
push
les
dec
add
mov
adc
adc
jo
test
sub
pop
fisttp
xchg
and
dec
inc
and
cwde
dec
fdivr
call
xchg
fisub
mov
and
mov
xchg
push
and
fisttp
mov
xchg
jo
jo
and
ins
ins
cmps
inc
leave
enter
xchg
(bad)
ror
leave
and
je
and
enter
cmp
(bad)
(bad)
or
xor
aam
push
das
ds
fs
fisttp
and
fs
sub
xor
jmp
nop
or
xchg
mov
pop
leave
push
sbb
pop
fst
xor
fstp
cmps
sub
mov
add
inc
dec
fisttp
mov
fstp
ins
adc
imul
fld
bound
adc
addr16
xchg
dec
dec
dec
push
fbld
and
inc
sub
outs
adc
cmps
cmp
bound
dec
test
mov
(bad)
dec
and
inc
enter
inc
inc
inc
dec
cs
sbb
inc
inc
test
cmp
fst
sbb
inc
cs
mov
xchg
add
retf
xchg
cmp
or
(bad)
and
shr
xor
aam
and
cmp
leave
xor
mov
xor
inc
adc
sub
dec
stc
sahf
add
(bad)
repnz
aaa
cmp
out
or
adc
push
clc
loopne
lea
ret
and
cmp
xchg
pop
and
inc
sub
sbb
add
rcr
aaa
add
nop
inc
dec
dec
add
dec
push
jb
call
cmp
mul
int3
push
mov
(bad)
sahf
ja
push
das
out
mov
repz
scas
mov
mov
sti
outs
cmp
sbb
push
mov
adc
stc
push
push
push
push
pop
cs
lock
push
push
inc
or
daa
push
add
xlat
test
aaa
jg
and
sbb
push
dec
dec
leave
dec
call
movs
cmp
mov
or
cmp
xchg
imul
movs
push
cmps
adc
add
cmps
fdiv
push
xor
xor
cmp
sbb
in
mov
and
popa
mov
sbb
jecxz
out
xor
loopne
lock
inc
imul
pusha
adc
inc
or
push
cs
iret
sub
sbb
popf
or
mov
mov
cmp
dec
mov
mov
sub
push
jne
lock
ss
push
pop
cmp
je
nop
mov
test
push
test
inc
inc
int3
xor
inc
adc
pop
inc
bound
or
mov
push
pop
push
lods
cdq
inc
pop
or
push
push
push
cli
or
or
push
not
xor
sbb
test
test
pop
push
jo
push
stos
addr16
cmps
imul
adc
mov
inc
addr16
push
push
sti
xor
loope
xor
xchg
or
rcr
bnd
inc
bound
cld
add
inc
sub
in
or
leave
xor
pop
add
push
enter
test
push
cmp
ins
ret
sub
mov
gs
inc
pop
xor
repz
test
(bad)
test
(bad)
lods
or
or
rcr
xchg
add
mov
scas
cwde
push
outs
xchg
lahf
cld
inc
cs
cld
cld
dec
jmp
mov
xor
push
add
cmp
fst
adc
add
sbb
popa
jne
mov
or
or
(bad)
dec
adc
stos
dec
adc
es
dec
or
inc
ret
lock
lock
daa
inc
lahf
push
inc
aas
jg
and
xchg
xchg
sub
and
sub
aam
push
push
iret
inc
imul
add
jg
xor
push
pop
rcl
add
jae
adc
retf
add
mov
adc
fdivr
and
fs
jmp
pop
sbb
enter
inc
in
xor
adc
nop
cmp
cmc
jecxz
adc
or
loope
inc
cmp
or
mov
pop
sub
out
mov
xchg
or
out
push
push
xchg
test
cmc
enter
cwde
mov
arpl
and
outs
sbb
fs
pop
pop
add
push
xor
sbb
loopne
sbb
nop
add
ror
lock
enter
xchg
mov
lods
or
inc
jmp
or
js
and
loop
cmps
sub
xchg
retf
mov
dec
cmps
nop
pop
push
nop
mov
leave
or
nop
dec
das
pop
add
jmp
or
loopne
dec
jmp
dec
jmp
dec
xchg
sub
or
sbb
(bad)
(bad)
lds
jo
outs
pop
pop
or
mov
push
enter
lods
add
test
and
xchg
popa
test
jo
add
add
sbb
nop
add
sbb
add
pop
fist
fxtract
aad
nop
cmc
stc
fnstsw
and
nop
test
adc
xchg
xchg
xor
add
xchg
mov
xlat
fwait
sbb
add
out
cld
outs
adc
inc
xor
mov
adc
cdq
in
test
add
inc
jmp
dec
adc
dec
pop
cmps
adc
push
and
push
add
sub
push
and
or
cmps
jo
imul
inc
sbb
mov
or
pop
outs
dec
or
nop
(bad)
mov
sub
jae
mov
inc
add
jb
add
mov
cmp
int
scas
mov
adc
rol
push
adc
adc
push
popf
sbb
int3
sbb
mov
jnp
add
mov
inc
lds
mov
shl
mov
pop
lds
pop
es
pop
rcl
stos
in
cli
and
add
push
int
adc
shr
jne
and
xchg
fldenv
cmp
push
jge
jne
lods
add
ja
out
xchg
inc
adc
push
jmp
lock
and
push
ins
jne
lahf
es
lea
pop
pop
lsl
mov
inc
int3
rcr
out
adc
cmp
in
mov
or
jo
mov
adc
retf
hlt
cmp
add
ds
or
inc
dec
test
jne
arpl
nop
xchg
movs
dec
mov
add
sub
fdivr
adc
inc
jne
fwait
enter
int3
add
lahf
cmps
sub
sub
leave
cmp
retf
enter
push
sbb
in
or
sbb
inc
popf
sub
and
ret
ret
lds
mov
sub
clc
push
inc
mov
push
shl
les
fldenv
or
add
or
fcom
xchg
rol
fdivr
add
mov
sub
fild
lea
push
sbb
add
add
push
movs
or
arpl
cmp
sbb
add
jno
dec
dec
je
mov
inc
pop
ins
sub
sbb
inc
xrelease
adc
aam
sub
inc
jl
or
sub
jmp
jmp
push
push
jmp
or
dec
jmp
(bad)
adc
sub
or
push
cli
loopne
push
sbb
movs
lock
sub
add
push
mov
sub
push
fnstsw
nop
enter
mov
ins
mov
add
sbb
sub
adc
push
movs
jns
jmp
sar
int
mov
push
call
lods
jg
js
jne
mov
mov
fst
add
push
dec
mov
add
rol
jl
cmp
adc
add
add
add
pop
or
jmp
jge
enter
loop
ret
cmp
add
cld
shr
mov
call
mov
stos
add
sbb
inc
mov
and
ss
ror
xor
inc
push
sbb
loopne
pusha
int3
imul
nop
call
leave
add
cmp
jmp
cmp
add
or
push
(bad)
dec
shr
das
sbb
inc
leave
xchg
fwait
and
adc
push
pop
push
dec
adc
add
sbb
and
push
push
dec
or
and
fisub
out
mov
sahf
dec
rol
loopne
adc
push
and
sub
dec
mov
dec
mov
outs
or
imul
push
add
test
xchg
add
or
mov
in
hlt
rcr
add
inc
aad
or
in
add
mov
or
nop
xchg
push
popf
aam
and
dec
push
in
push
xor
xor
jl
inc
pushf
ret
cmps
mov
xor
mov
adc
pushf
mov
and
pop
loopne
rol
pop
dec
xor
mov
stc
mov
mov
xor
fiadd
adc
inc
popa
nop
mov
rol
xchg
sub
aam
or
dec
or
sbb
push
mov
add
cmc
sbb
push
mov
and
data16
inc
push
sub
imul
retf
adc
inc
or
or
xchg
or
adc
in
(bad)
loope
mov
dec
xchg
loope
push
mov
add
ret
xchg
or
add
ins
sbb
pop
add
ror
xor
adc
pop
pop
sub
xlat
push
add
mov
mov
add
adc
push
mov
dec
inc
in
push
test
push
mov
pop
mov
xor
xor
inc
inc
adc
daa
add
inc
inc
test
jge
popa
je
or
fs
sahf
test
cmp
in
clc
or
adc
bound
int3
pop
ret
lods
sub
mov
xchg
enter
in
jmp
inc
or
shl
mov
sub
add
add
cli
push
gs
mov
into
gs
add
dec
mov
cmp
add
repnz
push
and
test
mov
rol
sar
mov
jb
rcr
fbld
clc
xchg
ds
enter
adc
xor
or
sub
jmp
cld
das
add
pop
js
jne
nop
jbe
add
jg
add
pop
and
hlt
dec
jo
mov
mov
les
dec
std
aas
adc
stc
cmp
retf
in
add
or
je
mov
xchg
inc
dec
call
jl
push
popf
leave
and
inc
in
fsub
je
retf
adc
inc
inc
div
cld
ret
or
mov
inc
leave
add
xchg
ja
sbb
rcl
cmp
mov
out
leave
mov
mov
pop
lahf
jns
adc
ret
das
xor
cmp
dec
add
push
jmp
inc
push
dec
mov
sti
test
popf
mov
fisttp
fs
fst
jns
test
outs
sub
xchg
and
inc
jmp
add
push
jne
in
dec
sbb
dec
and
push
add
cmp
jne
rcl
sub
dec
jb
or
pop
push
xor
pop
add
mov
and
push
lods
inc
enter
inc
add
int3
lds
jns
add
jne
or
in
sub
or
enter
add
or
dec
adc
nop
shl
adc
or
and
adc
(bad)
vmovss
inc
(bad)
dec
pushf
ja
sub
jno
xchg
mov
and
mov
icebp
in
mov
aas
or
and
add
jg
shl
pop
test
sbb
imul
mov
jns
add
fnstcw
enter
out
cmp
push
pop
stc
fmul
not
int3
push
pop
mov
add
ja
add
adc
fiadd
or
pop
pop
aaa
sub
or
pop
les
push
add
dec
sar
dec
xor
test
sbb
xor
cwde
mov
pop
fsub
xor
pusha
or
add
or
cld
aad
push
pop
or
mov
push
jno
mov
sahf
sub
lods
inc
add
add
pusha
dec
mov
or
dec
mov
cli
hlt
arpl
cmp
push
ins
mov
mov
and
nop
jmp
sbb
and
lods
cmp
add
add
daa
inc
add
sbb
lock
pop
add
rcl
or
add
xor
cmp
sub
cmp
inc
mov
and
shr
pop
cmp
push
adc
sub
jno
shl
lock
push
ficom
adc
popa
pop
dec
mov
dec
ds
sbb
or
or
js
add
mov
pop
sub
enter
inc
jo
(bad)
(bad)
je
xchg
adc
repnz
shr
jbe
lea
lea
or
cmp
icebp
push
int3
jecxz
inc
clc
sbb
aas
sti
xchg
add
sbb
jmp
fs
and
mov
jg
jb
mov
and
ja
je
jecxz
mov
aam
sub
push
xchg
sub
or
push
pop
inc
mov
push
sbb
sub
jno
push
jno
jo
sub
push
and
add
loop
mov
cld
xor
div
ins
pusha
push
movs
add
push
mov
shl
jbe
inc
cmp
ds
inc
rcpps
sub
imul
and
mov
add
retf
push
data16
inc
lahf
vcmpps
aas
push
pushf
add
loope
sbb
gs
cmp
or
cmp
mov
pop
mov
(bad)
popa
les
gs
fdiv
ret
je
pusha
and
inc
shr
test
call
jne
push
sbb
lea
retf
lds
enter
adc
movs
adc
and
push
ret
inc
mov
int
test
jp
mov
jno
popa
adc
dec
jbe
sub
dec
add
ss
sub
push
(bad)
xor
retf
lods
pop
cmp
push
cmp
xor
or
mov
mov
inc
addr16
fnsave
(bad)
out
(bad)
fist
test
test
ss
mov
adc
and
sbb
dec
xchg
cmp
pop
sbb
in
add
inc
dec
add
dec
add
mov
cmp
or
or
sbb
add
mov
cmp
lea
loope
add
enter
ret
cs
sub
or
sbb
mov
xor
xchg
rcl
adc
mov
and
push
xor
xchg
xchg
jae
out
sar
jmp
rol
lahf
xchg
hlt
sar
repnz
(bad)
es
inc
and
or
jg
std
or
jne
and
and
cmp
movs
aas
and
push
add
cmp
mov
push
add
pusha
jl
jns
fnstenv
add
push
inc
in
or
pop
sub
dec
sar
nop
xchg
sbb
cmp
adc
adc
pop
(bad)
xchg
mov
jmp
pop
add
or
push
push
cmp
popf
mov
dec
push
inc
push
outs
dec
mov
(bad)
or
fwait
sbb
(bad)
cwde
jmp
retf
or
stos
or
jl
inc
sbb
push
mov
sbb
pop
sub
mov
mov
mov
inc
pop
out
add
xor
test
daa
fiadd
adc
xor
mov
mov
sbb
push
ret
pop
cmp
sbb
push
les
xor
push
push
xchg
test
mov
and
mov
imul
inc
sbb
les
rcr
sub
add
xor
adc
sbb
add
lods
fstp
sbb
(bad)
push
ret
lods
fimul
rcl
cmp
add
sbb
push
inc
ret
pop
shr
bound
movs
fisttp
rol
loope
lahf
and
int
add
push
movs
out
aaa
sbb
das
inc
add
movs
and
cmp
adc
add
push
xor
mov
pop
mov
mov
or
sub
or
gs
lahf
mov
sub
mov
and
inc
pop
sub
or
and
jmp
ins
ror
(bad)
add
mov
out
adc
push
adc
mov
repz
or
or
aaa
mov
jl
or
daa
jo
popa
and
pop
or
pop
sbb
sbb
or
cmp
mov
rol
or
jmp
jmp
retf
bound
sbb
pushf
mov
push
jmp
jne
mov
xchg
dec
and
inc
mov
and
ins
jne
mov
xlat
sub
pop
out
out
cmps
or
jmp
sub
push
or
jnp
in
push
sub
stc
xor
stos
pop
sub
daa
mov
scas
jne
and
xchg
scas
xchg
add
xor
lock
and
and
pop
push
and
xchg
jecxz
les
cs
aam
adc
or
dec
sbb
or
ret
dec
aam
nop
adc
dec
mov
cmp
mov
xchg
mov
dec
dec
xchg
mov
add
and
adc
sbb
(bad)
xor
or
inc
pusha
lea
add
adc
jb
mov
push
clc
or
xor
add
xchg
or
push
adc
es
sbb
cmc
in
inc
jb
sub
or
gs
fs
push
xor
sbb
xchg
add
iret
ret
loope
adc
mov
inc
jo
stos
outs
add
add
adc
and
or
add
and
sbb
inc
and
lds
mov
in
sub
jnp
lds
cmp
mov
dec
sar
cmp
int3
inc
or
and
push
jmp
xrelease
cmc
fcom
inc
mov
sti
push
sti
fsub
in
test
and
in
aaa
xor
sbb
icebp
push
aaa
inc
js
push
adc
mov
inc
push
mov
adc
add
jo
mov
push
imul
or
or
and
test
lock
xchg
sbb
inc
and
xor
mov
pop
mov
adc
enter
mov
sahf
or
add
xchg
popa
or
fnsave
add
outs
test
xchg
mov
stc
or
dec
pop
or
adc
cmp
mov
or
pop
ins
or
aad
xor
inc
adc
ret
mov
and
mov
mov
shl
mov
pop
push
or
dec
rcr
mov
loopne
xchg
nop
das
pushf
or
imul
test
add
mov
mov
add
das
push
xor
lods
ror
adc
dec
inc
ror
and
test
cmps
enter
xor
xchg
pop
loop
inc
aad
sbb
or
dec
shl
out
mov
xor
add
lock
jne
fldenv
mov
cwde
cli
xchg
loope
jmp
pushf
adc
loop
sub
(bad)
cs
les
bound
pop
inc
leave
rcl
popa
push
mov
imul
add
int3
and
dec
cmp
sub
dec
add
ins
mov
sbb
xor
mov
inc
scas
mov
jecxz
fs
call
retf
push
ss
xchg
retf
push
ret
cmps
shl
inc
arpl
movs
or
push
nop
les
loopne
jne
fwait
lods
push
daa
xchg
cdq
push
xlat
push
jno
fstp
dec
sbb
add
or
call
fistp
shl
mov
xchg
aad
mov
and
lea
and
sar
push
fimul
jae
mov
or
popa
aaa
jo
retf
adc
ins
jmp
iret
fxch
(bad)
mov
add
lds
lea
mov
xor
jecxz
jg
test
rcl
push
rcl
add
adc
push
sbb
dec
(bad)
pop
dec
dec
daa
shr
retf
or
and
retf
mov
adc
retf
inc
inc
iret
pop
pop
lahf
aam
xlat
adc
adc
mov
mov
lea
lea
xchg
ror
dec
ss
daa
dec
scas
test
ret
loope
mov
fstp
inc
ss
adc
aaa
fwait
ret
mov
dec
fcmovnb
sahf
xchg
in
adc
or
std
std
mov
adc
mov
and
inc
mov
mov
jns
lea
test
cmp
mov
jbe
shl
mov
shl
mov
ds
inc
je
mov
loopne
mov
lea
cmp
and
test
aam
iret
cmp
fsub
pushf
xchg
jb
call
push
sub
cmp
lods
mov
jnp
daa
mov
repz
das
js
nop
out
mov
mov
push
xlat
or
mov
loopne
je
push
cmp
dec
adc
lea
adc
add
jl
cmp
dec
call
test
pop
mov
sub
fist
cmp
add
add
out
arpl
adc
fstp
lea
jg
rol
lods
gs
adc
arpl
push
(bad)
and
jmp
and
pop
sets
stc
and
(bad)
sub
ins
sub
pop
bswap
sbb
or
mov
addr16
jmp
sub
adc
pop
and
sbb
push
jo
inc
and
jae
sbb
sbb
sub
cwde
rol
sub
cdq
adc
test
repz
sbb
add
inc
lea
cdq
sub
aad
push
repz
jmp
xchg
aas
mov
mov
stos
or
inc
cwde
sbb
xor
dec
or
in
adc
jmp
sbb
push
and
test
mul
lods
test
sub
adc
cmp
(bad)
out
fadd
mov
xchg
test
xlat
sub
lock
add
clc
aam
push
sub
adc
wbinvd
xchg
cli
add
inc
add
shr
int
gs
dec
adc
fisttp
nop
shr
mov
or
push
cld
dec
or
push
adc
push
xchg
les
add
or
ret
cmp
ja
out
mov
xchg
jae
push
add
jne
das
adc
mov
je
test
lock
jmp
sub
sbb
xchg
add
retf
inc
test
repz
stos
push
xor
loopne
loope
mov
cmp
jbe
and
or
xor
shl
push
xchg
sbb
xor
jecxz
jne
adc
adc
gs
test
jne
jns
das
add
adc
mov
or
and
push
fmul
ret
nop
inc
popa
(bad)
arpl
xchg
ror
dec
add
pop
loope
stc
std
mov
or
and
jne
mov
and
dec
and
add
adc
and
xor
movs
rol
rcl
push
daa
dec
sub
push
test
gs
leave
stc
rol
sbb
stc
add
sub
pushf
inc
xchg
test
push
mov
jo
sub
mov
cmps
gs
add
shl
push
adc
add
cli
in
push
or
lds
push
mov
xor
sub
cmp
push
and
pop
mov
or
pop
or
fs
add
je
jnp
push
or
and
xor
movs
inc
call
js
je
add
cmp
dec
in
and
sub
sbb
retf
test
xor
lock
ins
pop
mov
mov
push
rcr
adc
test
mov
sub
mov
lahf
cmp
adc
jae
outs
push
push
and
into
mov
popa
lods
or
pop
adc
jo
fwait
sub
lods
cmps
mov
xor
xor
fld
or
inc
mov
je
add
sub
out
test
xchg
and
add
call
add
dec
jne
dec
imul
push
or
mov
sbb
xchg
xchg
sub
inc
mov
add
pop
pop
cmp
shl
je
or
sub
bound
sub
xchg
mov
mov
add
xlat
test
ja
cmp
xor
and
sbb
mov
adc
add
pop
xlat
or
sti
add
inc
add
gs
cmp
hlt
iret
hlt
loope
mov
dec
push
dec
and
cmp
push
or
fbld
icebp
mov
loope
mov
fnstsw
push
or
dec
or
mov
mov
aas
mov
and
xchg
xor
es
dec
xchg
pop
sbb
jmp
pusha
pusha
pushf
cmp
mov
adc
outs
mov
or
shr
bound
fcom
adc
fild
dec
cli
int3
jmp
adc
xchg
add
and
jmp
stos
or
xor
sti
scas
shl
cmp
mov
and
sbb
mov
fild
in
lods
fcomip
adc
cmp
dec
jne
pop
call
popa
add
imul
addr16
(bad)
sub
std
push
xchg
adc
or
inc
jecxz
or
ds
in
sbb
or
pop
adc
sub
into
les
and
xor
aas
adc
shr
and
dec
add
call
or
sbb
add
mov
or
add
and
pop
ins
jge
(bad)
rol
mov
add
push
fcmovnb
push
xchg
cmp
cdq
fdivr
dec
cld
pop
add
pop
movs
ror
(bad)
mov
jg
add
adc
or
adc
(bad)
push
fild
jo
(bad)
mov
lahf
mov
sbb
and
dec
mov
or
mov
lea
push
sub
sbb
je
popa
adc
mov
sub
cmp
call
xchg
xchg
call
pop
nop
pop
xchg
mov
test
mov
test
dec
push
loopne
inc
cli
adc
add
stc
cmp
push
mov
pop
add
sbb
sub
movs
popa
pop
pop
add
push
lahf
and
mov
and
repnz
push
fwait
repnz
jg
lea
add
add
sub
and
adc
push
mov
adc
mov
mov
clc
xchg
cs
xor
or
inc
or
add
xchg
mov
or
sub
loopne
adc
sub
adc
daa
or
daa
test
mov
lock
shl
push
aaa
inc
dec
mov
push
push
rcl
mov
push
outs
rcl
loope
loope
test
mov
jl
in
add
out
loopne
and
xchg
jne
imul
push
inc
dec
xor
loopne
test
les
cs
dec
add
inc
sub
cwde
hlt
call
cmp
pop
sub
loope
or
jb
xlat
cmp
mov
ficomp
lock
mov
add
cmp
mov
dec
push
loope
out
add
adc
pop
shr
jmp
sbb
adc
mov
mov
lods
xchg
push
cmp
mov
pop
cmc
xlat
fsincos
or
inc
aas
add
and
add
test
push
sbb
lock
and
jge
loopne
adc
(bad)
sbb
or
or
ret
js
int3
pop
and
cmp
push
pop
or
test
adc
in
jl
sbb
xchg
push
mov
mov
arpl
inc
mov
xor
or
adc
push
xchg
adc
sar
in
imul
(bad)
cmp
in
mov
mov
jmp
push
fld
pop
mov
add
popa
or
lea
lock
les
fmul
add
push
pop
(bad)
aaa
adc
cwde
push
popf
les
in
mov
shr
fwait
push
jmp
ins
add
and
cwde
jl
(bad)
jge
and
(bad)
jmp
mov
and
sub
dec
xor
mov
xor
fbstp
xchg
push
or
and
pop
loopne
ret
adc
xor
mov
add
test
xor
push
mov
pop
add
stos
inc
add
pop
and
shl
(bad)
mov
ins
push
les
mov
add
fild
inc
push
push
adc
mov
pop
pop
mov
xchg
(bad)
(bad)
outs
rol
add
cmp
inc
clc
and
adc
das
and
push
movs
cli
fstp
adc
mov
jbe
or
add
mov
xor
add
rcl
cmp
xor
push
push
(bad)
inc
jns
cmp
add
sar
cmps
jns
not
cs
xchg
xchg
or
adc
xchg
(bad)
and
xor
(bad)
inc
jmp
xchg
enter
(bad)
inc
loopne
loop
cmp
sahf
(bad)
inc
add
xchg
aaa
push
jl
sbb
(bad)
xchg
out
mul
mov
or
ins
sbb
movs
fld
outs
xor
dec
aaa
and
nop
add
ss
pop
xchg
and
and
lods
rol
push
lods
dec
dec
or
push
add
mov
jl
lock
sbb
daa
call
push
sub
or
fchs
sub
sbb
fdiv
jmp
jns
imul
jg
push
pop
jbe
adc
jge
add
sbb
frstor
add
add
add
imul
ror
or
sub
xor
sbb
jmp
add
dec
add
xchg
test
or
popa
pop
ja
jno
sbb
(bad)
dec
xchg
add
adc
mov
cmp
xor
dec
sbb
aam
jge
std
inc
test
push
inc
mov
inc
push
jecxz
(bad)
sahf
fstp
lods
push
add
mov
shr
add
add
inc
xor
adc
dec
add
retf
jg
push
jns
ret
mov
pop
fdiv
out
imul
mov
clc
push
sub
imul
inc
ret
arpl
js
add
inc
adc
pop
push
mov
adc
imul
sub
call
sbb
lds
call
sahf
fisttp
arpl
add
lods
(bad)
nop
xchg
jmp
sub
sub
and
pushf
cmp
rol
sbb
test
addr16
add
movs
xchg
mov
sbb
xlat
pop
popf
lods
popf
jg
mov
and
ja
jae
or
mov
or
mov
sbb
cmp
mov
jmp
or
pop
add
or
fild
loopne
inc
pop
and
rol
adc
jl
push
ja
mov
mov
arpl
test
mov
adc
lea
mov
or
outs
push
and
or
mov
xchg
mov
nop
mov
mov
xchg
gs
call
mov
sbb
fcomi
loopne
cmp
inc
xor
and
or
gs
jns
push
(bad)
lds
fmul
movs
xadd
adc
dec
pop
push
xchg
retf
repnz
mov
or
inc
sub
push
cmp
or
call
pop
dec
mov
and
dec
and
xchg
add
sub
add
push
sbb
mov
lock
add
or
inc
mov
dec
jne
cdq
(bad)
add
mov
jg
je
div
leave
push
inc
or
or
jbe
inc
jmp
adc
mov
arpl
jo
icebp
add
sub
mov
push
and
adc
pop
mov
cmp
ficomp
mov
rcr
pushf
add
push
(bad)
sar
push
adc
and
sbb
mov
xor
pop
inc
(bad)
cmp
push
push
add
sbb
push
pop
pop
(bad)
xchg
cmc
movzx
stos
fcomp
or
fistp
cmp
js
add
and
push
sub
mov
mov
in
inc
or
fild
cmps
sbb
push
jne
and
or
inc
clc
adc
js
bound
(bad)
dec
loop
imul
push
add
sti
sbb
mov
adc
cs
inc
or
adc
xor
and
or
rcr
rol
and
ret
add
ret
cld
mov
or
loopne
mov
pop
jg
xor
ret
or
repnz
push
clc
dec
add
xor
stos
adc
test
and
fnsave
sbb
and
mov
bound
jl
sbb
push
mov
add
fisttp
mov
shr
lds
arpl
pop
sbb
jo
leave
arpl
sub
es
mov
pop
mov
popf
lods
sbb
fldcw
dec
push
pop
movs
mov
pop
pop
adc
jb
mov
(bad)
xchg
jmp
aas
mov
mov
push
cmp
sbb
pop
add
add
and
mov
sub
dec
cld
jle
xor
xor
jmp
xchg
add
push
jl
test
aam
sbb
fadd
mov
push
mov
jle
adc
in
sub
mov
fcmovnu
pop
adc
mov
or
mov
dec
push
mov
scas
ss
lods
mov
add
or
sbb
adc
inc
mov
imul
xchg
inc
and
adc
adc
add
mov
xchg
xchg
stos
and
adc
pop
adc
or
ret
mov
shl
xchg
xchg
clc
or
sub
or
adc
les
xchg
sbb
and
add
sub
fwait
ret
xchg
xchg
rcr
or
lock
(bad)
rcr
push
cmp
jg
or
mov
and
out
push
mov
dec
lea
add
cld
sub
xchg
add
inc
pusha
mov
mov
xor
in
outs
cmp
sub
movs
lock
cmp
xor
jmp
mov
pop
hlt
and
and
or
mov
test
fiadd
push
sbb
adc
sub
test
mov
dec
sbb
int3
sbb
or
sub
inc
dec
mov
xchg
and
cmc
and
fistp
sbb
frstor
sbb
adc
sbb
inc
movs
adc
pushf
sub
sahf
xchg
adc
sub
ins
test
or
mov
imul
ret
sbb
jl
mov
pop
push
push
mov
lds
sub
pushf
mov
rol
sbb
jmp
jae
xor
mov
and
cmp
fwait
xchg
shl
not
jbe
add
sub
jmp
shr
sbb
cmp
mov
rcl
xchg
or
mov
inc
rcl
loope
sub
cmp
mov
dec
push
mov
cmp
or
daa
dec
inc
pusha
jecxz
inc
jmp
sub
sub
jmp
jmp
test
fs
xchg
inc
cs
sahf
cmps
add
jl
xor
(bad)
push
movs
mov
adc
add
movs
and
or
pusha
pusha
and
jecxz
mov
adc
xchg
or
mov
adc
sub
pop
or
aas
adc
cwde
pusha
adc
fwait
xor
inc
inc
inc
push
xchg
xor
rcr
add
push
xchg
pop
fwait
or
movs
mov
push
xor
movs
icebp
jg
pop
xor
out
xor
jmp
mov
inc
or
push
jmp
xchg
jo
pushf
mov
clc
mov
add
add
addr16
dec
loope
pop
inc
shl
pusha
push
test
adc
cmp
lock
movs
leave
mov
pop
adc
(bad)
(bad)
xchg
cmp
xor
das
mov
test
pop
jo
clc
mov
sbb
adc
sub
stos
mov
cmp
mov
adc
dec
xor
out
rol
jmp
dec
adc
or
hlt
sbb
lea
aam
loopne
movs
xor
mov
mov
jge
and
or
call
rol
dec
sbb
push
fadd
cmp
pop
sbb
lds
fdiv
rcr
xchg
jo
jge
xor
lds
pop
jmp
mov
call
xchg
test
mov
sbb
push
and
pop
in
xchg
jge
push
in
xchg
cmovge
int3
lods
push
icebp
xchg
aam
push
in
sub
mov
test
cmp
pop
add
sub
and
inc
and
stos
push
(bad)
mov
retf
fidiv
mov
out
fwait
adc
sbb
or
mov
xor
(bad)
repz
les
cmc
imul
ds
(bad)
jg
enter
out
cmp
into
dec
mov
rol
dec
pop
pop
aaa
sbb
mov
adc
nop
es
sbb
push
cmp
xlat
and
clc
add
add
add
cmp
pop
nop
sbb
push
sub
(bad)
(bad)
jl
les
and
ret
or
dec
pop
es
jecxz
mov
sahf
push
or
mov
or
pusha
dec
jne
adc
or
xor
add
push
addr16
les
adc
mov
sbb
and
call
sbb
fstp
or
cmps
jl
retf
pop
call
cld
hlt
ret
add
out
lea
xor
dec
aas
in
adc
jp
mov
dec
mov
aas
xor
(bad)
fsubr
mov
pop
or
or
jmp
sub
xchg
shl
shl
test
popf
fld
inc
sbb
pop
rcl
adc
add
mov
xlat
push
cli
aaa
jge
mov
pop
fwait
pop
std
mov
loop
mov
dec
popa
and
cli
inc
jmp
or
mov
xor
jl
shl
pushf
jg
loope
xchg
or
inc
mov
mov
pop
aad
adc
cmp
mov
stc
or
jne
aam
jno
cmp
pop
in
test
fist
jno
sub
call
or
icebp
ret
sbb
xor
sbb
xor
inc
and
adc
and
aas
add
adc
add
clc
xchg
xchg
mov
mov
rcl
cli
das
push
jle
fadd
xor
mov
mov
hlt
cld
add
loope
mov
call
scas
pushf
add
cmps
test
cmp
add
xor
daa
xor
popa
adc
les
fmul
call
add
or
mov
add
loopne
cwde
clc
mov
call
ror
fsubr
or
push
(bad)
sbb
jmp
test
or
mov
xchg
jmp
bound
mov
std
inc
bound
inc
bound
rcl
jb
pop
shl
push
(bad)
leave
mov
add
sbb
mov
cmp
rol
fcomp
add
xor
push
inc
pop
push
(bad)
jne
mov
jnp
ficomp
cmp
mov
sbb
loop
pop
mov
jbe
ror
loop
push
sbb
fisubr
fidiv
fisubr
ror
fnstcw
add
and
jmp
int
inc
loope
jb
loopne
or
dec
in
add
gs
pop
sub
adc
or
jae
adc
add
push
jae
pusha
pop
add
add
aad
adc
rol
stos
sbb
mov
lods
jno
loop
sub
ja
jge
retf
test
and
xor
clc
out
aas
fwait
inc
push
pop
and
jg
add
icebp
jne
js
jne
jmp
test
jmp
adc
mov
ret
mov
sar
and
adc
test
xchg
add
pop
mov
in
inc
mov
xchg
cwde
jb
sub
and
adc
pop
js
test
sbb
or
repz
retf
cli
jmp
lea
xor
sub
arpl
pop
and
imul
pop
and
inc
and
add
jnp
rol
push
inc
mov
or
sub
sub
xor
mov
jmp
inc
and
loope
push
test
sub
sub
dec
sub
add
inc
hlt
fisttp
sbb
sub
xchg
sub
in
cmps
cmc
push
das
fldpi
adc
cwde
cwde
xor
in
movs
xor
adc
lods
icebp
xor
and
sbb
cmp
nop
lods
pop
sub
xor
xor
js
inc
dec
jge
add
xor
retf
and
xchg
xchg
dec
lea
ror
retf
arpl
xchg
cmp
dec
ret
pop
dec
pop
mov
cmp
cmp
sub
adc
and
retf
arpl
cmp
and
mov
or
or
jmp
stc
and
inc
jmp
inc
dec
(bad)
pop
inc
and
inc
or
dec
mov
mov
dec
inc
dec
sbb
ins
ds
scas
push
mov
std
jecxz
(bad)
jl
mov
sbb
add
mov
jns
or
dec
push
pop
mov
inc
mov
fidiv
jmp
mov
pop
cmp
jge
shr
cmp
xor
xor
movs
fbld
retf
(bad)
(bad)
sub
add
sub
cmp
sub
mov
pop
lock
or
jo
pop
cmps
sub
or
mov
lea
nop
push
jo
mov
(bad)
or
ins
dec
lock
out
pusha
fisubr
jo
mov
dec
fwait
xchg
mov
or
pop
or
push
xor
(bad)
or
xchg
sbb
or
or
pusha
or
push
and
push
push
(bad)
push
lock
ror
push
cvtpi2ps
pop
and
pmaxsw
repnz
adc
or
xor
mov
(bad)
and
dec
addr16
jle
aaa
jmp
jnp
sbb
outs
sbb
popf
push
jbe
dec
aaa
jmp
sbb
(bad)
movs
aaa
adc
lea
sbb
sbb
push
test
pop
mov
test
mov
dec
adc
or
and
or
(bad)
ret
push
add
dec
add
and
movs
xchg
add
dec
aam
mov
adc
and
pop
mov
nop
jecxz
fdivr
mov
add
inc
fadd
push
pop
std
cmp
sub
mov
or
push
push
push
mov
push
add
cmps
add
scas
enter
mov
call
loopne
je
mov
mov
sbb
mov
repz
adc
sub
cmp
jne
lea
mov
cli
sub
add
les
mov
xchg
neg
pop
(bad)
mov
and
stos
xor
ins
inc
mov
and
inc
push
lock
pop
pop
pop
daa
push
add
inc
or
inc
js
xchg
fst
ror
jmp
fisttp
loopne
mov
mov
iret
pop
xchg
sub
int3
adc
and
and
or
adc
iret
jmp
adc
or
pop
nop
push
dec
jg
rcr
or
push
xlat
shr
aam
rcr
mov
push
aad
push
cmp
jg
xlat
test
xlat
pop
cmp
mov
pusha
dec
loop
fcmovbe
pusha
xlat
jg
mov
test
test
pusha
xlat
pop
xlat
pusha
xlat
xchg
sbb
xlat
push
xlat
mov
and
add
sbb
jle
pop
pop
pop
or
pop
mov
(bad)
cmc
and
push
loopne
xchg
adc
pop
sub
inc
push
loopne
movs
sub
je
fist
aam
test
or
add
out
push
test
cmp
cdq
lock
add
or
pop
mov
push
cmp
test
adc
or
xchg
addr16
or
xchg
dec
inc
mov
inc
add
icebp
and
je
scas
div
lock
pop
and
icebp
or
cdq
adc
cdq
fdivr
fld
jmp
cmp
mul
cmp
mov
ud1
dec
hlt
add
inc
test
add
xor
push
adc
sbb
pusha
xor
les
jmp
in
jge
and
push
dec
pop
loope
push
inc
dec
or
mov
push
ds
adc
and
js
push
push
adc
das
or
and
xchg
sbb
ror
cmp
fldenv
or
jl
add
(bad)
mov
hlt
push
push
adc
inc
fld
lds
enter
inc
or
dec
or
push
or
mov
bound
mov
or
or
mov
pop
dec
sub
or
int3
add
enter
mov
and
ror
arpl
add
nop
sbb
add
sub
or
mov
inc
sbb
dec
or
lods
sub
add
rcr
push
lock
mov
(bad)
xchg
shl
adc
sbb
inc
cs
jno
jno
jp
ror
(bad)
cmps
xchg
pop
clc
or
clc
xchg
adc
jg
jo
or
dec
cmp
sbb
fld
lock
add
cld
mov
mov
add
cmps
fmul
add
loopne
fild
pushf
inc
mov
js
or
dec
sbb
cmovle
and
pop
xor
add
add
dec
pop
add
mov
cmp
xchg
sahf
ins
add
mov
mov
data16
mov
pop
and
sub
and
sbb
cmps
inc
retf
mov
or
fs
xchg
or
rol
or
xchg
adc
sub
adc
sbb
cmovo
aad
fmul
and
cmp
dec
jnp
fild
xchg
movs
add
(bad)
mov
adc
(bad)
clc
and
sbb
xchg
inc
sbb
daa
fild
push
psrld
adc
or
and
cmovge
inc
movs
mov
ins
or
add
fst
in
add
inc
cmp
sbb
jnp
int3
dec
dec
ret
pop
sbb
pop
out
movsx
pop
cmc
or
xor
loopne
or
jmp
push
loopne
gs
inc
in
xor
inc
or
add
dec
es
jmp
push
add
pop
mov
retf
and
icebp
push
cmp
fs
sbb
push
add
cmp
dec
js
test
xor
ror
mov
sahf
cmp
int
mov
mov
test
mov
popa
and
sub
faddp
xor
inc
add
push
push
ror
js
dec
fisub
jnp
or
je
nop
xor
movs
or
inc
and
clc
outs
mov
lock
push
and
(bad)
rol
bound
and
(bad)
ins
test
and
call
xchg
add
xor
mov
push
add
lock
adc
and
hlt
add
or
call
add
js
lock
add
inc
or
mov
mov
in
clc
cmp
xchg
push
fwait
or
dec
sbb
or
jmp
out
enter
cdq
test
push
adc
adc
xchg
mov
sar
js
ret
mov
inc
mov
shl
or
xchg
dec
inc
and
pop
enter
xchg
add
je
mov
adc
and
mov
or
adc
cmp
xor
adc
or
fdiv
out
(bad)
adc
(bad)
lea
push
loope
mov
adc
mov
push
lea
bndstx
mov
lods
stc
ds
push
ret
aad
pop
or
jge
mov
add
cmps
push
call
xor
adc
data16
add
adc
aam
sub
adc
je
and
les
xor
push
or
adc
adc
shl
add
sub
add
sub
inc
cmp
xchg
push
mov
test
and
or
and
push
push
enter
or
xor
leave
mov
pop
sub
cs
sbb
fistp
pop
cwde
inc
add
cld
bound
dec
or
add
shl
add
and
das
xlat
test
lea
add
push
je
inc
popa
clc
fnstcw
aad
or
nop
inc
xor
adc
jmp
lock
sbb
push
push
and
xor
lock
ret
jne
lds
inc
mov
das
and
push
into
sub
in
stos
add
loopne
or
pop
in
push
and
inc
push
or
mov
dec
test
inc
inc
add
and
test
xchg
adc
test
cmp
mov
jecxz
fisttp
sbb
sbb
add
add
test
add
xchg
or
cmp
repz
imul
jecxz
or
adc
and
xor
and
and
test
push
aad
lock
add
aas
ret
sub
or
sbb
push
xchg
push
sbb
sbb
int3
fs
mov
in
nop
add
or
in
ret
enter
ins
sub
mov
add
mov
adc
sbb
int
loopne
push
je
xor
mov
xchg
sub
cmp
cmps
or
adc
xor
push
add
rcl
add
imul
gs
sub
mov
pop
cld
push
movs
adc
xor
sar
mov
sub
rcl
rol
shl
sar
in
dec
leave
add
sbb
or
inc
or
loopne
and
add
fst
sub
gs
adc
mov
sbb
dec
inc
dec
int
and
or
mov
dec
adc
xchg
xor
je
add
and
xor
adc
sub
mov
jae
xor
or
adc
adc
(bad)
push
dec
jae
cmp
jge
nop
mov
and
and
xor
dec
sub
sub
pop
dec
jae
sub
jae
xor
sbb
jae
xor
cmp
xor
cmp
inc
nop
xor
dec
inc
inc
inc
xor
dec
jae
dec
dec
dec
pop
dec
jae
push
dec
push
dec
jae
xor
pop
dec
jae
xor
pop
dec
pusha
nop
xor
dec
dec
fs
xor
dec
jae
cmp
dec
jae
jo
je
jae
xor
js
pusha
test
jl
push
fisubr
inc
test
jb
pop
aas
mov
and
or
inc
xchg
inc
cmp
pop
cwde
sub
mov
or
retf
adc
and
mov
in
lds
leave
dec
mov
dec
ret
add
retf
dec
lods
add
add
xlat
repnz
retf
and
add
sbb
adc
sub
daa
push
or
enter
dec
adc
sbb
xchg
mov
and
xchg
sub
xor
fs
xor
fs
xchg
inc
xchg
inc
dec
dec
dec
xchg
push
fs
xchg
pusha
xchg
fs
dec
jo
pop
push
xchg
aad
add
retf
rol
mov
mov
mov
jb
cwde
pushf
jb
push
jb
movs
test
add
clc
hlt
ds
repnz
mov
push
and
or
inc
jno
xor
cmp
aas
movs
xor
into
inc
test
pusha
not
rcl
mov
rep
push
jne
aad
adc
fadd
mov
in
sti
or
adc
jge
cmp
xchg
push
inc
and
ror
lods
sar
mov
std
cmp
push
ins
mov
push
sub
jnp
add
cmovno
cwde
and
and
and
or
loopne
dec
xchg
inc
mov
ret
cmp
sub
and
scas
pop
ret
xchg
pushf
pop
xor
ret
dec
or
sbb
rol
or
dec
rol
mov
and
aam
int3
mov
ja
adc
inc
mov
inc
add
mov
mov
ja
push
test
mov
stos
mov
in
mov
rcr
jbe
push
jmp
ins
ror
or
jle
xor
je
sti
pop
inc
pop
das
sub
add
fmul
mov
rcl
lahf
in
jb
push
add
clc
xchg
sbb
ins
add
push
xchg
sbb
xchg
out
xchg
stc
in
push
push
push
xlat
mov
sub
retfw
push
or
sub
jne
add
push
push
jno
xchg
pop
ret
shl
push
scas
jp
mov
fidivr
rol
into
jae
shr
and
xchg
inc
adc
and
adc
sbb
sbb
inc
rcr
push
and
or
sbb
sub
adc
xchg
out
inc
sub
sub
sub
and
sub
sub
push
cs
add
je
cmp
test
inc
pop
jmp
xchg
hlt
rol
mov
sbb
rep
pop
add
shl
rol
pusha
inc
ret
mov
sub
inc
add
or
mov
xchg
cmove
lock
sbb
cmp
or
mov
dec
mov
in
fs
aas
mov
dec
in
lock
ret
call
mov
fild
or
jl
cmp
into
movs
xchg
push
xlat
mov
mov
jne
mov
dec
call
inc
add
cmp
cmps
xchg
sbb
push
mov
addr16
aas
mov
data16
mov
test
adc
jmp
and
add
sub
sti
ret
mov
or
mov
and
and
and
and
nop
setp
push
call
cwde
fnsave
adc
push
pop
xor
push
push
sub
sub
adc
dec
mov
xor
adc
cmp
mov
popf
movs
xor
inc
dec
or
jmp
xor
xor
or
rcr
dec
and
xor
and
inc
sbb
adc
mov
mov
dec
movs
mov
cmp
fwait
add
sbb
mov
xchg
ret
add
add
xor
imul
outs
and
dec
or
push
mov
dec
call
aad
add
es
(bad)
dec
call
call
xor
mov
gs
cmp
ud2
shr
test
ins
int3
ins
inc
inc
inc
das
inc
pop
add
or
jmp
inc
mov
pop
xchg
jp
test
or
or
mov
cmp
ret
xchg
cmp
xchg
stc
fnsave
imul
push
mov
cmp
dec
and
or
pop
fadd
sub
push
test
lahf
inc
sub
es
sbb
sbb
ficom
mov
and
daa
or
cmp
add
dec
mov
movs
ds
or
or
dec
xor
xchg
add
and
and
inc
cmovno
lods
push
dec
mov
mov
push
cmp
xor
cmp
xor
fprem1
push
dec
pop
test
ret
adc
cmp
cli
movs
add
dec
cli
inc
jae
aas
add
lock
inc
pop
mov
imul
mov
and
or
mov
loope
inc
dec
ret
ins
xor
sbb
jo
adc
add
sar
sub
xor
aas
cmp
dec
enter
add
sub
mov
add
sbb
mov
sub
or
das
rol
and
shr
adc
adc
sub
mov
loop
stos
add
retf
mov
sub
jmp
mov
xchg
rcr
in
inc
test
adc
add
mov
jb
adc
dec
std
cmp
mov
sahf
ret
adc
and
fwait
sub
jb
fistp
mov
push
or
mov
mov
jp
xor
add
xchg
movs
or
into
pop
jne
xchg
sbb
push
pop
xor
adc
dec
xor
out
or
push
mov
rol
popf
add
inc
retf
push
retf
popa
add
push
int
push
xchg
arpl
pop
pop
mov
push
jbe
pop
aam
sahf
js
adc
cmp
push
add
imul
ds
lea
adc
jmp
push
leave
jne
jge
or
cwde
dec
aad
or
test
shl
cdq
scas
movs
add
or
repz
aad
leave
jp
je
or
cmc
ret
and
mov
mov
cmp
xchg
or
fsub
xlat
inc
or
andnps
inc
sbb
ret
aaa
xchg
js
xor
sbb
ins
and
retf
push
or
xor
mov
lods
call
stc
or
xor
sub
xchg
dec
adc
pop
fs
sar
or
and
stos
sbb
cmps
ins
add
or
add
pushf
retf
adc
dec
dec
lds
imul
inc
iret
cmovnp
lds
pop
cs
ins
and
mov
push
ret
mov
add
mov
jmp
test
mov
add
jbe
ss
pop
jp
rol
push
pop
jno
inc
push
adc
mov
add
push
inc
pop
fist
add
push
adc
aam
mov
enter
and
push
and
sub
or
jmp
or
jg
sub
add
in
scas
ss
loope
pusha
mov
and
sbb
add
test
cmc
sbb
gs
cmps
outs
dec
pop
icebp
shl
jne
rcl
rcl
sub
xchg
or
xor
lds
nop
aad
add
es
stos
mov
cmp
add
adc
push
sbb
or
add
sbb
add
mov
jae
jne
push
and
or
mov
jb
rcr
retf
dec
sbb
and
mov
in
js
or
pop
inc
adc
inc
fsub
mov
xor
nop
lock
inc
rcl
mov
push
xchg
sbb
xor
xor
sub
jne
cwde
xchg
mov
mov
or
and
push
mov
lods
adc
popa
hlt
pop
or
and
pop
inc
popf
cld
call
clc
add
dec
mov
xor
clc
pop
and
movs
or
and
rol
pop
jmp
je
outs
or
mov
adc
sbb
inc
pop
jl
popa
dec
push
xchg
xor
xchg
call
push
jecxz
cwde
sub
adc
xchg
fs
aad
jmp
cmp
ror
push
pop
loope
add
lods
add
or
dec
je
cmp
mov
data16
ins
sti
fwait
cmp
mov
jmp
cmp
repnz
jl
inc
jg
pop
adc
rcl
adc
or
cld
jmp
mov
push
pop
inc
or
repz
lds
lds
and
rol
jg
push
mov
in
push
mov
imul
push
adc
push
mov
inc
dec
push
mov
add
sbb
add
mov
repnz
or
fld
mov
in
adc
adc
and
test
loopne
jb
mov
les
or
sub
mov
mov
mov
sub
xor
dec
mov
dec
pop
js
and
bound
jno
mov
adc
dec
ins
inc
mov
dec
mov
adc
and
clc
xchg
movs
es
and
add
nop
inc
test
mov
inc
add
and
loope
scas
mov
or
or
unpcklps
bound
mov
fs
push
and
sub
pushf
add
adc
dec
add
and
cmp
stos
and
xor
mov
js
rol
and
icebp
sahf
popf
mov
and
mov
mov
jl
hlt
adc
pusha
xchg
jo
or
mov
fstp
pop
jmp
mov
test
xor
push
loope
adc
push
lock
dec
sbb
pop
cmp
dec
push
xlat
ret
add
cld
add
push
dec
sbb
in
daa
and
add
inc
mov
and
and
mov
jg
or
inc
mov
cld
jg
jo
aam
sbb
mov
dec
lods
mov
inc
imul
mov
or
mov
(bad)
in
dec
sub
mov
sub
mov
inc
and
adc
bound
jbe
dec
and
or
mov
mov
pop
adc
or
mov
nop
clc
add
mov
add
mov
push
or
sbb
shl
cli
clc
enter
or
push
or
and
out
jbe
das
sub
xchg
or
mov
inc
les
imul
xchg
lock
and
push
movs
loopne
test
mov
ud0
and
lea
bndldx
pop
xchg
aaa
bound
jmp
imul
retf
sbb
push
or
push
and
xchg
xchg
or
sub
dec
push
dec
adc
mov
adc
mov
and
inc
sbb
xor
mov
cdq
inc
or
add
mov
push
adc
cwde
pop
and
imul
mov
ja
loopne
and
sti
jne
pusha
mov
(bad)
sbb
or
repnz
sbb
push
or
adc
movs
or
jb
ror
es
ds
loop
mov
mov
lahf
push
rol
movs
nop
or
push
sub
icebp
sub
sbb
push
test
rcl
cmp
cmps
push
mov
or
mov
ret
mov
jae
cmp
int
mov
dec
xor
sbb
push
bound
pop
and
scas
jne
xchg
push
xor
int
inc
sbb
lds
mov
cmps
or
pop
lock
push
daa
inc
push
mov
sub
sbb
jmp
sbb
jge
or
in
cmp
and
fistp
adc
or
js
sbb
mov
sti
xor
test
cmp
and
and
jp
pop
xchg
lods
dec
cmp
lods
sub
(bad)
lock
mov
or
mov
push
inc
lods
jne
pop
or
inc
dec
sbb
lea
sbb
mov
in
test
jmp
mov
pusha
pop
jecxz
adc
push
lock
and
mov
movs
imul
loopne
or
jae
and
aaa
add
mov
or
adc
sbb
call
pushf
pop
mov
xchg
and
push
popf
pushf
pop
sub
je
jne
mov
sub
xor
push
add
and
mov
pop
dec
retf
jp
loope
je
pop
or
push
xor
rcr
adc
mov
adc
and
inc
pop
push
inc
adc
or
mov
hlt
je
adc
mov
xor
ret
mov
or
pop
stos
shl
pusha
enter
imul
or
mov
rcl
jge
adc
pop
or
fldz
cmp
outs
or
call
jmp
test
pop
inc
into
call
or
xchg
adc
nop
test
sbb
dec
sbb
(bad)
(bad)
not
es
imul
lea
inc
dec
or
and
dec
outs
add
std
movs
dec
push
fbld
push
sub
and
jecxz
ds
mov
data16
inc
sbb
in
mov
mov
and
dec
xchg
sub
retf
pop
psubw
inc
sbb
push
or
inc
jg
adc
xor
in
fsub
fld
xor
cmp
pop
cmp
push
enter
add
jnp
es
dec
fadd
in
add
jge
mov
cmp
xlat
mov
adc
xor
gs
and
mov
and
sub
sar
or
shl
shl
aaa
test
sbb
adc
loope
retf
jae
or
leave
mov
and
jecxz
leave
test
shl
loope
and
aaa
dec
inc
movs
ss
scas
lea
and
(bad)
clc
les
inc
loope
jge
push
nop
idiv
aaa
movs
mov
adc
and
imul
push
pop
sub
lods
fist
ja
adc
mov
je
add
sbb
not
adc
sub
retf
push
jo
int3
xor
mov
pop
add
adc
xchg
clc
add
outs
add
lock
lock
sub
xor
jecxz
and
fldenv
adc
pop
popa
mov
retf
adc
or
cmps
adc
pop
adc
mov
mov
and
loop
push
sbb
pop
adc
dec
fsubrp
sbb
dec
sbb
add
pop
push
jmp
sbb
mov
stos
and
loopne
in
xchg
jp
mov
fstp
loope
jmp
pop
or
sbb
scas
out
mov
add
pop
imul
cmp
pop
cmp
add
shr
loop
into
imul
jmp
or
push
cmp
or
ja
loope
jns
leave
shl
mov
lock
cdq
fistp
add
ret
push
add
pop
and
ss
add
cwde
push
adc
repz
push
fist
das
xor
or
push
rcl
arpl
inc
adc
call
sbb
or
xor
pop
mov
jnp
sbb
outs
repz
clc
js
and
and
fld
fstp
call
inc
push
cmp
loopne
out
in
xor
movs
lods
shl
lahf
inc
repnz
pop
in
push
and
mov
xor
mov
sub
lds
mov
inc
inc
movaps
jg
add
sti
xchg
imul
and
or
sub
adc
mov
fistp
mov
add
movs
sub
sbb
loopne
adc
stos
enter
or
add
sbb
add
sbb
fstp
popa
inc
dec
in
sub
shr
aaa
add
repz
mov
xchg
call
add
enter
es
xor
shl
sbb
fstp
push
inc
add
push
adc
stos
xor
mov
xlat
mov
iret
inc
sbb
cmp
sbb
sar
sbb
adc
out
add
les
lods
xor
into
jo
fcmovnb
pop
clc
inc
call
push
cmp
cmps
or
fs
push
inc
jne
mov
add
xor
inc
push
int
xor
add
loopne
gs
add
(bad)
adc
xchg
jmp
aaa
add
mov
xor
add
sub
jecxz
mov
add
jmp
iret
inc
jae
xor
call
adc
cmp
jmp
adc
xchg
and
add
ins
popa
call
rcr
lods
jmp
pop
imul
adc
add
inc
xchg
push
imul
xchg
sbb
fwait
sub
or
das
sub
add
cmps
hlt
mov
popa
int
and
loopne
aas
jp
ret
jnp
les
add
jle
jmp
mov
jmp
and
adc
or
dec
lahf
sbb
loop
pop
lock
pop
jmp
sbb
add
aam
push
fadd
xor
fistp
and
rcr
dec
pop
mov
xor
inc
push
dec
sub
mov
das
ror
sbb
and
test
aad
ret
pop
(bad)
inc
xchg
adc
pcmpeqb
pop
pop
pop
adc
retf
inc
lock
jne
mov
or
loope
mov
dec
aam
mov
clc
cwde
cmp
pop
or
clc
xor
in
or
dec
lea
lock
xchg
cmp
(bad)
or
xor
adc
aaa
idiv
add
shl
add
into
jne
ja
push
arpl
lods
ror
loope
jmp
adc
push
xchg
push
das
mov
loope
inc
ins
sbb
add
add
aaa
mov
cmp
aas
jmp
pop
out
push
movs
test
and
lods
pop
out
pop
push
push
scas
adc
ins
shl
jmp
das
pusha
adc
adc
adc
jl
sbb
push
ins
pop
popf
and
push
push
lahf
fsave
xchg
adc
sbb
mov
sbb
loop
mov
sub
(bad)
fnstenv
xlat
add
add
out
or
xchg
mul
aam
fldcw
jne
imul
sub
push
mov
test
fwait
rcl
xor
adc
out
adc
sub
adc
or
icebp
outs
retf
fstp
jne
push
fldpi
cmp
pop
nop
sub
cdq
popa
and
or
jo
(bad)
aaa
add
jmp
or
xchg
dec
aam
and
jb
mov
pop
add
pushf
push
loope
sbb
or
imul
ins
test
test
and
mov
es
lock
dec
(bad)
adc
sub
shr
inc
call
xor
je
and
push
pop
lock
xchg
rol
push
out
bound
or
push
out
mov
rcr
bound
xchg
adc
or
pop
inc
adc
or
add
dec
push
xor
sbb
in
cwde
and
outs
clc
(bad)
pusha
loopne
pop
in
pop
cld
adc
fadd
add
inc
fsub
add
mov
mov
and
or
mov
or
aaa
int3
cli
mov
push
call
xor
cmp
or
push
add
les
jmp
and
add
aam
xchg
lahf
pop
rol
or
ret
adc
inc
stos
mov
adc
mov
cmp
push
inc
inc
mov
push
push
lods
cmps
xchg
(bad)
xor
(bad)
lock
leave
add
cmp
lock
mov
sbb
retf
add
mov
nop
mov
add
and
push
out
xor
and
neg
fwait
cmp
add
retf
sub
cld
push
mov
and
inc
xor
jo
hlt
add
inc
jecxz
fstp
push
loop
in
dec
mov
mov
call
inc
in
imul
pop
fdiv
sbb
cmp
sub
add
xor
adc
sar
jmp
sbb
xchg
es
add
loope
mov
out
fwait
inc
and
xlat
lahf
xor
mov
in
scas
shl
sub
scas
loop
add
add
pop
cmp
lds
leave
sbb
add
js
and
mov
mov
push
int3
adc
iret
pop
mov
iret
cmps
fisubr
dec
or
pop
jnp
inc
vprotq
(bad)
mov
push
push
and
into
add
sub
test
ret
and
dec
cwde
xchg
xor
test
adc
rcl
clc
cmp
sbb
cmp
add
scas
inc
or
mov
mov
lods
jno
les
sub
pop
lods
jmp
and
sbb
mov
(bad)
jo
mov
rcl
ins
loopne
pop
pop
shr
add
sub
push
in
sar
adc
cs
loopne
push
lahf
enter
add
je
icebp
call
add
fwait
mov
inc
or
xchg
adc
sub
xchg
inc
arpl
push
pop
bound
inc
cmp
push
xchg
inc
mov
add
(bad)
imul
enter
dec
xchg
or
loopne
add
ret
ret
inc
les
and
pop
loope
fwait
push
cmp
xor
or
or
mov
dec
arpl
sbb
int3
push
push
sti
fcomp
xor
daa
jo
push
pop
add
inc
and
push
mov
add
fisttp
fwait
dec
xor
sahf
fadd
xor
sub
add
lods
or
jg
(bad)
dec
lar
pop
pop
jmp
inc
aam
adc
cdq
pop
jne
push
xchg
sbb
test
add
push
cmp
sbb
mov
pop
jmp
and
test
add
mov
test
loope
test
push
adc
inc
leave
ret
fld
movs
je
stos
sbb
adc
sub
js
lahf
sub
adc
mov
or
sti
aam
test
xor
or
adc
or
inc
cdq
mov
imul
pop
lods
loope
mov
sete
inc
adc
xor
in
rol
inc
ret
inc
pop
mov
les
or
mov
cmp
mov
or
pusha
or
(bad)
scas
mov
adc
and
sub
xchg
xchg
adc
sbb
cdq
add
cmp
or
popa
or
push
sar
cmc
sar
sbb
dec
sub
mov
and
ret
mov
shl
nop
push
or
cs
pop
xchg
sbb
jg
(bad)
rcl
loope
add
pop
mov
mov
push
push
adc
(bad)
fnsave
mov
jge
jo
pop
movs
jmp
cld
movs
mov
cld
pop
xor
or
imul
cmp
bound
xchg
push
pop
cs
jge
stc
and
cmp
cmp
xchg
dec
or
push
or
je
sub
mov
cmp
xor
dec
mov
and
mov
test
dec
cmovae
stos
add
sbb
sbb
xor
sti
adc
or
pop
adc
stos
je
adc
mov
test
cmp
ds
sbb
add
dec
cs
push
add
cmp
dec
loop
je
inc
xor
and
adc
push
arpl
jo
sub
ins
loopne
cmp
popa
or
loop
mov
or
and
adc
fstp
inc
sub
jmp
sbb
mov
or
add
in
(bad)
mov
xor
outs
shl
pop
test
je
aaa
cmp
hlt
stos
adc
adc
fwait
inc
push
fisub
sbb
ret
push
inc
int
cmps
or
sub
sub
pop
cmc
mov
jl
add
dec
adc
pop
(bad)
mov
aaa
cdq
repz
add
loope
ss
or
in
std
mov
cmps
cmp
inc
xor
and
cmp
rcl
or
scas
jne
xchg
adc
push
rol
and
lea
inc
inc
adc
lock
add
push
lock
lds
iret
xlat
jmp
arpl
xchg
mov
adc
mov
adc
inc
pop
sar
(bad)
fsub
iret
xchg
inc
pusha
daa
rol
jo
lods
int3
xchg
xor
dec
ret
add
cmp
fnsave
or
adc
jecxz
jne
call
pop
sub
xchg
retf
jmp
inc
and
inc
movs
push
loopne
gs
and
adc
push
push
in
lock
inc
cmp
pop
add
sar
mov
ins
sbb
cdq
xor
jmp
xor
inc
rcl
jne
add
add
mov
das
loope
cmp
or
out
mov
or
sbb
push
iret
popa
iret
push
lahf
mov
or
adc
es
push
sub
call
pop
add
inc
jg
mov
and
mov
or
dec
sbb
mov
inc
out
cmp
and
or
inc
loop
fs
add
xchg
cld
in
add
inc
or
mov
xor
dec
pop
pop
(bad)
push
enter
add
test
idiv
xor
je
cmps
lods
mov
xchg
inc
das
pop
test
xchg
cmp
push
cs
sbb
mov
xor
psllw
adc
loop
and
jle
pop
dec
movs
cmp
cdq
sar
sub
jmp
or
add
add
pop
push
loop
test
or
or
inc
pusha
push
jnp
add
or
out
and
cmps
mov
pop
xor
xchg
mov
js
or
pop
test
cmp
inc
adc
fild
mov
push
or
sbb
adc
jle
pop
dec
gs
push
add
add
xchg
je
ret
inc
pop
sub
fnsave
xchg
pop
and
jmp
inc
or
dec
pop
ja
and
(bad)
and
enter
jbe
pusha
test
pop
inc
pop
sbb
aaa
mov
pop
je
ja
jmp
push
pop
and
inc
stos
ja
into
xor
lods
adc
pop
pop
mov
xor
pop
and
adc
or
push
or
sub
push
int
in
lock
xchg
mov
xchg
dec
and
pop
rol
cmp
inc
or
push
inc
jge
out
mov
loopne
dec
pop
mov
cwde
add
adc
cmp
push
adc
mov
xor
lock
add
test
mov
pusha
jno
clc
(bad)
cmp
and
nop
scas
cmp
push
jno
xchg
sub
xchg
inc
scas
adc
call
mov
mov
adc
sbb
lea
test
imul
(bad)
cmp
jmp
push
jnp
adc
icebp
pop
jnp
cmp
jle
fild
adc
pop
xchg
lods
lea
prefetch
aaa
mov
add
ror
test
mov
adc
ss
or
jecxz
jmp
add
in
pop
bound
shl
mov
mov
jg
enter
test
dec
jns
mov
xchg
retf
and
and
cmp
adc
nop
or
rol
sbb
mov
sub
les
repnz
and
or
int3
movs
(bad)
jo
fiadd
mov
add
dec
add
dec
mov
fsub
jns
addr16
popf
add
nop
sbb
dec
mov
mov
add
jbe
gs
scas
push
and
scas
push
dec
add
push
stos
mov
jl
cmp
adc
and
jle
out
mov
adc
add
dec
xor
mov
adc
daa
adc
dec
mov
mov
rol
add
rol
ins
pop
add
inc
pushf
cmp
pop
or
lock
addr16
push
xor
aam
test
xchg
in
aam
in
and
enter
es
pop
aam
rcl
or
ficomp
and
inc
or
add
ret
mov
js
pop
or
dec
or
or
jne
add
jecxz
loopne
outs
adc
adc
mov
adc
sub
lock
shl
push
push
add
or
mov
push
lods
mov
add
retw
das
pusha
outs
mov
ss
jl
sub
dec
push
adc
bnd
xor
inc
xchg
test
mov
jmp
arpl
push
cmp
jl
mov
mov
nop
ret
push
(bad)
inc
xor
mov
mov
jae
xchg
add
lds
mov
mov
ret
mov
push
or
loop
pop
sbb
or
or
les
or
or
loop
hlt
mov
mov
cmp
or
iret
fdiv
xor
clc
adc
xor
adc
sbb
pop
mov
clc
adc
jmp
arpl
xchg
xchg
cmp
and
mov
inc
rol
mov
inc
xor
xchg
xchg
sbb
xor
mov
arpl
clc
mov
outs
mov
mov
ror
mov
jle
hlt
dec
and
adc
adc
(bad)
ds
or
nop
mov
add
ds
pop
adc
xor
jae
fs
push
pop
adc
pop
xor
or
inc
add
add
xchg
pop
cmp
mov
cmp
add
jl
add
in
aas
push
cmp
aam
sbb
jo
inc
push
fs
jae
add
push
test
dec
pop
adc
les
adc
push
add
sbb
shl
xor
mov
add
jo
pop
pop
lock
mov
push
or
clc
adc
or
push
clc
nop
add
and
or
mov
jmp
retf
and
cmps
pop
or
mov
xchg
or
mov
sar
and
adc
cmp
lock
inc
test
loope
or
push
xchg
push
cmp
push
retf
xor
jg
dec
mov
popa
pop
adc
cmp
mov
jae
enter
adc
jne
pusha
xchg
ins
sbb
dec
add
add
rcpps
loopne
rcr
inc
push
xor
in
lea
jne
xchg
add
popa
imul
add
outs
imul
fist
or
sub
or
inc
sub
cmp
or
sbb
pop
mov
cdq
in
or
mov
sub
sbb
rcl
or
dec
and
add
add
pop
repnz
or
or
mov
jecxz
and
dec
loopne
mov
cmp
popa
push
cld
xor
(bad)
jge
cmc
enter
or
or
sbb
cmp
mov
inc
add
cld
mov
lock
inc
(bad)
sbb
and
push
lds
arpl
dec
clc
xchg
jo
ret
sub
fnstcw
inc
test
aas
enter
jmp
stos
test
dec
xor
lods
pop
sub
gs
call
push
add
jmp
outs
or
sub
and
jno
inc
adc
xor
xchg
cld
jmp
aas
adc
fwait
nop
add
jo
sbb
ret
push
icebp
mov
sbb
xchg
and
outs
sbb
add
das
mov
xchg
adc
inc
inc
(bad)
pushf
adc
es
xchg
adc
xchg
mov
test
or
adc
aam
add
adc
add
jg
pop
add
mov
test
push
xchg
cmp
push
inc
enter
or
jae
or
dec
mov
frstor
test
shl
add
nop
sub
pop
add
pop
push
cli
sbb
and
sub
ret
push
jno
test
int3
dec
mov
and
push
add
les
and
lea
adc
ret
jge
or
and
and
push
push
push
inc
xor
iret
or
push
cmp
add
cmp
sar
push
xor
or
inc
cmp
pop
pushf
out
test
aas
and
clc
mov
mov
and
dec
mov
and
imul
add
add
jp
inc
adc
lock
hlt
jge
or
mov
out
pop
push
mov
mov
inc
loopne
sub
test
loope
mov
(bad)
dec
sbb
sti
xchg
push
lahf
fsub
jmp
mov
dec
and
push
icebp
and
jl
jmp
jmp
jl
cmp
pop
or
cdq
gs
mov
(bad)
or
fimul
add
inc
loopne
imul
dec
adc
loopne
add
cs
sbb
add
xor
add
popf
sub
and
call
add
adc
dec
dec
jl
add
push
xor
movs
popf
inc
jne
inc
movs
lock
fadd
movs
adc
and
and
movs
mov
inc
addr16
ret
movs
xlat
push
pop
aad
lock
je
sub
dec
add
dec
dec
loopne
mov
sub
mov
mov
loop
add
loop
mov
xchg
pop
adc
test
add
xlat
cvtdq2ps
loopne
cmp
(bad)
jg
and
push
xor
movs
push
adc
hlt
jmp
or
jnp
jmp
add
mov
mov
lea
sar
jno
sbb
or
mov
pop
hlt
mov
add
imul
lea
outs
xor
in
ret
adc
jno
ret
adc
fisttp
push
lahf
or
pop
lock
dec
push
pop
lea
mov
push
lea
add
push
adc
or
add
sub
out
sub
push
retf
inc
jne
adc
push
sub
inc
pop
jg
shr
jno
cs
cmp
jmp
inc
xor
shl
ret
fld
add
fwait
rcl
inc
aas
jg
add
jb
mov
sub
lahf
bound
adc
lock
mov
adc
and
mov
mov
push
cmp
mov
(bad)
ja
push
movs
popa
repnz
pop
leave
call
call
or
cdq
jne
xor
mov
and
ret
ret
pop
fild
lahf
inc
jecxz
mov
dec
cmp
add
aaa
push
adc
bound
and
adc
adc
xchg
dec
and
sub
js
inc
sub
inc
xchg
push
adc
ja
push
(bad)
fadd
dec
aaa
aaa
ror
cmp
iret
add
add
es
inc
cdq
shr
sbb
or
mov
adc
jmp
mov
das
mov
adc
ss
lock
test
jge
jne
sub
inc
and
mov
xchg
xor
sub
outs
pop
jo
push
enter
arpl
mul
xor
jo
test
xchg
add
popa
popa
stc
inc
pop
inc
adc
lahf
or
jmp
test
xchg
or
inc
inc
mov
lods
xchg
ror
pop
pop
bound
add
adc
aaa
es
add
pop
push
(bad)
aam
cwde
call
fsubrp
or
mov
adc
sub
cmp
pop
pop
or
sbb
or
arpl
jmp
arpl
and
popa
in
in
addr16
sbb
imul
add
add
es
push
in
add
movs
mov
mov
imul
xor
and
add
stos
js
lahf
jmp
jne
sub
and
inc
sub
dec
adc
pop
adc
in
sub
ror
sbb
push
pushf
mov
popa
push
xor
movs
lahf
xor
in
rcr
jbe
ins
jmp
push
nop
and
mov
xchg
inc
stos
add
add
mov
mov
pop
outs
xor
add
fs
icebp
xor
cli
in
and
adc
pop
popf
adc
push
sub
dec
daa
cdq
xchg
add
daa
mov
inc
les
sti
add
cmp
xor
retf
popf
mov
icebp
cmp
icebp
and
aas
adc
pop
mov
into
gs
jmp
xchg
cmp
inc
fisubr
jmp
mov
push
jg
mov
fst
movs
mov
call
es
adc
ins
pop
add
rol
cmp
vcvtdq2pd
mov
leave
retf
mov
inc
lock
or
rcl
mov
add
add
je
xchg
in
push
test
mov
push
push
add
sub
cmps
fimul
sbb
sub
inc
lea
xchg
dec
mov
out
out
jle
push
add
jl
popf
and
div
cmps
add
jae
and
stc
xchg
(bad)
sub
sub
sti
jb
cmps
adc
sbb
cli
not
push
jo
push
inc
or
inc
pop
cmp
fadd
fmul
loopne
data16
cdq
mov
out
add
or
and
punpckhbw
repnz
leave
je
sbb
mov
int
ins
mov
cmp
nop
stos
movs
xor
inc
adc
lods
inc
dec
in
mov
lods
inc
cmp
dec
loope
sbb
bound
(bad)
cmp
jmp
pop
icebp
fld
mov
xchg
in
mov
adc
retf
loop
sub
add
imul
loopne
(bad)
mov
jg
jmp
add
jmp
movs
adc
dec
in
xor
adc
cmps
fmulp
mov
xchg
sub
fistp
sbb
mov
inc
sar
pop
in
cmps
rcl
sbb
lods
adc
mov
add
and
fdiv
or
(bad)
stos
sub
test
push
mov
adc
and
mov
sub
pop
(bad)
int
sbb
mov
add
rol
test
or
bound
xor
lahf
outs
repz
add
loope
sbb
and
mov
or
rol
push
mov
add
and
test
add
push
add
mov
(bad)
mov
shl
cdq
push
mov
mul
add
ret
and
int3
and
outs
jmp
popa
(bad)
dec
adc
add
and
add
mov
mov
popa
(bad)
test
int
pop
push
or
sbb
int3
push
aaa
jg
xchg
add
mov
test
out
mov
mov
mov
cdq
and
ds
dec
jecxz
call
cmps
add
or
push
cmps
jo
add
pop
popa
jmp
add
loope
jmp
lahf
and
add
sbb
jp
mov
(bad)
ins
pusha
sub
pop
mov
or
jns
or
retf
loopne
lock
jmp
add
dec
jne
sbb
or
pop
pop
js
and
add
pop
add
mov
sbb
mov
inc
inc
and
fs
mov
(bad)
cmp
pop
jmp
push
push
cmp
in
sbb
loopne
nop
dec
mov
and
push
xor
in
sbb
in
shl
dec
mov
fdivr
mov
rol
lahf
test
inc
dec
cdq
or
pop
ins
jmp
das
les
xor
(bad)
cld
push
pop
xor
jno
dec
loop
ins
rcl
sub
inc
aas
pop
je
sbb
sub
jo
imul
add
add
and
pop
pop
add
fdiv
and
cmps
sub
sbb
cld
inc
pop
or
inc
bound
inc
repnz
and
in
sbb
clc
sbb
adc
sub
outs
shl
mov
push
push
adc
test
and
jo
pop
pop
mov
jp
cs
mov
push
xor
sub
leave
jecxz
inc
popa
nop
aas
lahf
enter
jo
jno
pop
add
jo
call
lahf
jo
nop
pop
and
jno
jno
jns
test
inc
add
sub
xchg
xchg
push
enter
nop
mov
xchg
dec
data16
bound
pop
das
cmp
mov
pop
add
hlt
mov
cmp
sub
push
jne
jne
jne
popa
add
push
add
nop
bound
pop
inc
push
jecxz
pushf
and
jecxz
cmps
or
enter
mov
adc
or
jmp
clc
or
inc
adc
jns
(bad)
cmps
aam
ror
ss
cmp
push
inc
add
adc
lods
ss
mov
mov
pop
rol
jge
xor
or
xlat
or
cmp
std
movs
inc
enter
adc
out
enter
addr16
or
ja
je
add
mov
enter
addr16
dec
xor
dec
xor
or
and
adc
nop
inc
nop
mov
jns
mov
adc
mov
inc
test
sbb
inc
lahf
test
inc
cmp
mov
cmps
test
popa
adc
imul
lahf
icebp
clc
push
ror
or
pop
sub
shl
adc
lahf
mov
test
dec
mov
sub
or
adc
cmp
aad
mov
or
and
test
outs
lea
or
aaa
(bad)
dec
mov
out
add
dec
sub
xor
mov
popa
adc
mov
mov
dec
adc
sbb
out
mov
or
inc
lahf
sbb
mov
xchg
inc
call
lahf
rol
or
ror
push
nop
push
sahf
inc
sbb
and
or
adc
inc
les
add
and
or
mov
jg
rcl
add
loop
jne
(bad)
popa
mov
cdq
sub
adc
imul
xor
clc
lahf
adc
and
mov
xchg
test
push
not
adc
mov
cmc
add
popf
clc
and
les
pop
xchg
adc
pop
cmp
adc
inc
dec
ins
jge
inc
rcr
fldcw
pop
xor
icebp
mov
add
call
or
adc
add
fld
clc
add
or
in
ret
add
outs
pop
into
push
jo
repz
push
out
or
push
arpl
sar
lahf
pop
add
mov
inc
pop
cmp
retf
nop
pop
inc
cwde
mov
sub
add
cmp
fadd
sbb
fmul
and
out
nop
aam
push
ror
sbb
popa
xor
clc
mov
test
jecxz
inc
pop
sbb
aaa
or
adc
fs
mov
int
add
fst
hlt
addr16
sbb
lds
lahf
arpl
xor
nop
lea
test
dec
mov
ins
lods
lock
dec
pop
jns
mov
scas
and
retf
in
lea
repnz
outs
nop
pop
or
stos
nop
add
arpl
mov
add
in
mov
sbb
cmp
add
inc
retf
loopne
or
pushf
or
test
cdq
bound
add
push
imul
mov
push
add
and
xor
loop
dec
mov
dec
adc
imul
jle
push
adc
cwde
push
ins
inc
sub
inc
clc
xor
xor
data16
inc
add
mov
cwde
test
cli
mov
sub
shl
movzx
jbe
sbb
mov
add
popf
xor
aas
cmp
add
and
outs
inc
jmp
cs
xchg
daa
adc
mov
fs
add
mov
and
sbb
push
jmp
cmps
(bad)
cmp
fcomp
dec
mov
push
xor
sub
es
icebp
lea
adc
pop
push
sub
add
test
inc
cmp
ja
adc
mov
mov
push
mov
iret
xor
adc
rol
jo
sti
mov
fisub
fnstsw
imul
pop
mov
pop
cmc
xchg
iret
dec
and
cdq
js
mov
lock
les
mov
pop
es
popf
or
mov
std
cs
lods
xchg
rcl
into
mov
shl
or
inc
cmp
and
jnp
mov
xor
pop
mov
xchg
mov
inc
push
xor
push
mov
mov
mov
mov
dec
and
das
leave
adc
push
jb
mov
xchg
adc
and
or
jo
pop
scas
and
inc
pop
adc
inc
inc
sub
sbb
cld
fcom
loop
cmp
jl
and
shl
mov
fistp
cmp
xor
arpl
jmp
add
test
daa
push
lock
jnp
movs
out
in
fadd
dec
inc
and
loopne
shr
and
and
add
cmp
mov
shl
xor
push
sub
or
xor
add
jecxz
lea
adc
inc
and
mov
into
retf
add
gs
rcl
add
add
mov
loop
std
pushw
mov
enter
xchg
clc
out
or
xchg
or
adc
sahf
les
push
sbb
inc
and
cmp
xor
xor
daa
fwait
inc
cwde
adc
inc
push
loopne
cmps
loopne
mov
cmp
aaa
adc
push
hlt
je
jo
ror
gs
push
enter
fidiv
add
add
pop
add
or
add
push
rol
(bad)
dec
cld
lahf
xor
data16
retf
js
and
sbb
adc
call
loop
popf
les
enter
adc
pop
add
and
sahf
fcom
fnsave
and
pop
add
adc
fwait
xchg
test
adc
nop
push
jmp
loope
cmp
push
(bad)
push
jg
fistp
ret
push
dec
cli
movzx
xor
add
add
loopne
dec
enter
and
sub
sbb
adc
sbb
ss
test
xchg
adc
ds
add
ins
stmxcsr
mov
lea
or
xchg
inc
sub
add
out
pop
pop
jne
out
mov
dec
xor
adc
enter
pop
fwait
mov
inc
sbb
sub
je
xchg
mov
lods
jmp
mov
jb
inc
call
and
cmps
sbb
mov
sbb
pusha
jno
mov
and
inc
ret
inc
inc
adc
inc
je
inc
add
inc
jbe
push
dec
jae
ins
add
pop
inc
pushf
mov
and
cwde
fbstp
lock
cld
lock
xor
cmp
mov
pusha
add
push
sbb
adc
jns
cmp
add
test
inc
addr16
add
xchg
add
and
cmps
pop
or
addr16
data16
add
adc
(bad)
xchg
iret
or
inc
adc
push
and
ret
inc
lahf
add
dec
push
movs
mov
xchg
dec
movs
out
rcl
test
and
pusha
and
mov
int3
and
stos
xchg
aam
or
xchg
push
mov
shl
dec
mov
scas
out
mov
or
mov
add
pop
inc
retf
sbb
push
pop
push
pop
ins
out
and
cmp
or
clc
loope
xchg
push
movs
xor
add
cli
popf
dec
mov
fnstenv
and
dec
dec
adc
cmp
xor
call
dec
sub
inc
lea
push
rol
or
stos
sub
add
pop
lock
cmp
jne
montmul
cmps
push
imul
pop
shl
cdq
por
pop
push
push
mov
add
(bad)
jl
add
sbb
call
cmps
daa
add
ret
push
xor
mov
jnp
jle
push
jae
jbe
pop
adc
add
or
dec
cld
jge
xchg
dec
les
es
sbb
(bad)
inc
cld
xchg
and
sub
in
mov
mov
lea
popa
adc
aas
add
jne
mov
or
ror
es
sbb
xor
pop
jg
loopne
xor
mov
test
enter
xor
jae
hlt
out
and
cmp
pop
mov
sbb
arpl
xchg
mov
push
mov
add
mov
mov
pop
push
inc
mov
jne
and
push
stos
popf
and
inc
cwde
mov
and
sar
imul
xchg
push
or
and
push
xchg
arpl
or
pop
push
mov
bswap
and
xor
adc
mov
and
add
xchg
lea
or
mov
xchg
jecxz
jmp
inc
mov
arpl
add
daa
pop
push
cld
or
sub
and
in
inc
test
push
ror
(bad)
mov
cdq
movs
cmp
cmp
push
add
cmp
or
add
in
cmp
in
outs
cwde
and
inc
movs
dec
jns
call
jmp
pop
mov
test
and
push
or
pop
outs
ds
sub
push
in
pop
mov
add
dec
test
push
or
(bad)
mov
cwde
cmp
push
in
or
test
add
jge
add
sub
in
mov
int3
inc
int3
sbb
cmps
or
dec
cmp
dec
call
or
inc
push
stos
or
xchg
push
mov
sub
mov
lea
jecxz
jmp
cmp
mov
jg
adc
repnz
in
test
fcmovbe
popf
cmps
cmp
lea
into
sub
add
fwait
movs
jge
ret
adc
xor
dec
pop
mov
(bad)
push
nop
test
xchg
jo
mov
jb
clc
sub
push
push
cwde
and
dec
adc
loope
mov
push
cmc
pop
loope
sbb
jmp
sub
arpl
mov
fild
and
popa
add
or
je
mov
mov
mov
mov
into
es
mov
push
or
pop
je
mov
pop
add
add
out
aam
jns
cmps
ja
add
cmp
adc
(bad)
cmp
or
or
es
bound
outs
adc
or
jb
adc
dec
in
rcr
mov
or
and
fist
push
adc
mov
inc
rcl
lods
xor
cmps
xchg
mov
dec
jne
stos
inc
shl
iret
add
aam
mov
mov
adc
push
or
inc
sbb
pop
sbb
repnz
mov
pop
dec
adc
bnd
mov
sub
ja
jo
jb
fsubr
jb
push
je
inc
add
addr16
rcl
dec
add
mov
or
mov
popa
or
and
jne
js
leave
jp
sbb
push
and
test
fcom
add
shl
or
leave
or
fwait
lock
pop
sub
adc
sar
jecxz
xor
cmps
sub
inc
adc
sbb
sbb
jne
dec
lahf
adc
push
push
and
hlt
dec
rcr
shl
push
push
cld
push
mov
aad
push
lea
(bad)
imul
cmp
or
inc
int
cli
loope
or
jno
pop
jae
mov
sub
cmps
je
jne
in
cmp
shl
clc
cld
in
push
mov
js
mov
cld
lahf
jne
leave
sbb
movs
pushf
sub
arpl
call
jae
loop
or
mov
push
dec
mov
adc
loopne
cmp
mov
popf
and
push
add
mov
sub
ds
bound
test
inc
test
(bad)
cmp
jb
inc
inc
adc
test
mov
retf
dec
push
jo
repz
adc
and
push
xor
and
dec
daa
sbb
inc
or
xchg
outs
push
inc
adc
cmp
sub
mov
pop
and
sbb
push
mov
add
xchg
fild
xor
adc
add
xchg
mov
mov
fcomp
sbb
jne
pop
jns
xchg
add
jl
cli
adc
jnp
xor
push
push
inc
adc
fcomp
dec
lods
jl
outs
or
push
or
ja
or
(bad)
mov
dec
cmp
adc
xchg
cmps
mov
push
mov
mov
push
add
mov
push
(bad)
and
mov
mov
pop
rcl
and
add
mov
adc
into
and
mov
cdq
or
fist
pop
sub
cld
rcl
and
gs
cmps
popa
daa
add
fisttp
cmp
add
mov
xor
pusha
js
pushf
stos
xchg
jno
sub
or
pop
dec
pop
push
sahf
inc
scas
jle
cmp
inc
adc
push
sbb
pop
sbb
les
or
cmp
or
add
inc
bound
aas
push
cmp
addr16
push
adc
mov
aas
push
push
in
or
aas
mov
dec
ins
sar
push
and
inc
in
push
and
aas
in
jb
lds
loopne
loop
inc
inc
mov
or
in
(bad)
or
(bad)
push
mov
adc
jmp
add
jle
or
mov
sub
aaa
inc
adc
pop
test
pop
sub
mov
(bad)
pop
push
gs
push
inc
xchg
loop
pushf
sbb
push
add
adc
imul
nop
mov
mov
dec
out
int
test
rcl
loopne
shl
jg
test
jecxz
stos
cmps
push
enter
imul
add
and
enter
ins
(bad)
dec
jmp
pop
or
adc
jnp
dec
cmp
mov
cmps
or
sbb
rcr
cmp
jp
ret
xor
fnstsw
fwait
mov
inc
jge
mov
and
push
xor
fsub
in
jo
jo
or
adc
jl
lahf
aaa
push
add
sub
ret
retf
xor
add
xor
mov
adc
adc
movs
mov
test
and
cdq
jns
push
inc
call
lods
dec
or
sub
inc
pop
dec
retf
add
cld
add
jae
push
adc
adc
xor
clc
and
adc
and
fadd
ss
push
test
daa
sub
mov
add
sti
clc
hlt
neg
add
sub
cmp
jl
dec
repnz
sub
(bad)
clc
jno
cdq
out
add
push
push
pop
lds
add
mov
and
pop
mov
xchg
clc
mov
jmp
dec
push
push
mov
or
xchg
push
into
xchg
xor
adc
cdq
ins
(bad)
fstp
adc
cmp
(bad)
retf
imul
pusha
or
(bad)
bound
mov
push
(bad)
in
add
fst
cmc
cld
mov
in
add
mov
sahf
aam
jecxz
(bad)
mov
and
xchg
or
lods
or
jo
in
das
call
inc
or
imul
int
sbb
sbb
sbb
ss
xor
dec
add
add
mov
lock
pop
add
(bad)
or
mov
adc
cmps
pop
hlt
dec
lods
test
inc
push
xor
mov
adc
jecxz
mov
ss
adc
inc
aad
mov
hlt
xor
sbb
fadd
xor
sub
mov
aaa
mov
adc
jnp
mov
imul
adc
add
icebp
call
mov
pop
lods
xor
jmp
adc
push
inc
or
aas
push
mov
mov
xor
cmp
dec
scas
or
cmp
inc
mov
cmc
inc
movs
mov
adc
sub
inc
fstp
pop
or
sbb
mov
lahf
lea
cmps
and
pop
or
push
dec
adc
jge
test
dec
cmp
or
lahf
xor
dec
not
sub
jge
loopne
xchg
mov
sbb
push
or
int3
adc
mov
mov
pop
movs
pushf
ss
mov
and
dec
and
mov
jge
lods
or
ret
jl
sub
push
xchg
add
mov
xor
jmp
sub
pusha
sub
xchg
xor
add
cmp
lods
add
repnz
in
and
popa
adc
xchg
outs
add
std
fmul
push
cmps
dec
retf
in
jno
xchg
movs
or
rcl
push
rcr
jp
mov
mov
push
mov
(bad)
mov
add
in
js
shl
or
scas
int3
push
rcr
push
jo
push
fdiv
adc
sbb
or
dec
imul
(bad)
jmp
and
mov
or
xchg
mov
or
popa
add
fld
inc
adc
xor
cmp
std
or
jg
repnz
int
stos
sub
sub
mov
add
jg
sub
adc
jecxz
add
and
cmp
add
fistp
aad
dec
jg
add
sahf
pop
adc
xchg
sbb
dec
or
xor
loop
lods
popf
and
mov
dec
sar
xor
pop
inc
out
xlat
push
bound
fdivr
retf
loope
in
les
(bad)
sbb
lods
ins
fbld
adc
mov
adc
jecxz
ins
test
mov
or
push
outs
sbb
(bad)
dec
adc
sub
stos
in
inc
and
push
lahf
sub
lock
adc
jne
mov
add
and
sub
or
pop
or
sbb
or
aaa
mov
fstp
jnp
cmp
retf
test
jmp
push
cwde
sbb
mov
push
leave
jmp
add
xchg
gs
mov
and
xor
loope
adc
pop
mov
jns
and
mov
push
or
ss
or
pop
scas
jl
test
popf
cmc
lds
into
cmp
sub
add
and
fdivr
push
dec
jl
jmp
aas
ret
add
(bad)
adc
push
mov
loop
enter
adc
pop
pop
(bad)
mov
(bad)
push
jg
cwde
mov
bound
push
iret
add
mov
in
fwait
push
cld
inc
add
in
data16
push
pusha
sbb
fadd
inc
lock
fcomp
xchg
cmp
xor
sbb
inc
popa
add
or
xor
inc
lea
dec
cmp
mov
sub
dec
out
xchg
and
or
jbe
mov
mov
lahf
or
aam
ret
(bad)
sbb
adc
aam
add
push
inc
lds
xor
pop
pop
es
rcl
shl
xor
popa
inc
jb
repz
jnp
je
dec
or
inc
mov
outs
pusha
ret
xchg
ret
mov
and
xchg
mov
dec
clc
or
or
jae
and
add
mov
cmps
lods
pop
inc
cmp
fsub
les
push
and
sbb
inc
les
xor
xor
lds
nop
and
cmp
nop
call
inc
(bad)
xchg
shr
ins
(bad)
enter
cmp
xor
sbb
mov
mov
aam
inc
cmp
sbb
popf
mov
push
mov
(bad)
adc
(bad)
repnz
jge
test
inc
push
iret
mov
or
push
ror
inc
int3
mov
mov
mov
sub
ret
inc
push
xchg
mov
sbb
les
cld
adc
addr16
shl
jno
dec
jle
xchg
(bad)
int
fiadd
lock
dec
dec
shr
(bad)
mov
dec
inc
bound
cmps
adc
sqrtps
lds
sbb
xor
sub
je
xchg
push
mov
or
jne
icebp
xchg
rol
pop
out
rol
outs
fst
xor
imul
arpl
fiadd
(bad)
fcomp
cmp
inc
xor
leave
pop
jbe
adc
pop
sbb
call
das
push
iret
iret
cwde
leave
lods
int
push
xor
(bad)
or
enter
mov
mov
(bad)
retf
ss
mov
inc
xor
pusha
or
cdq
ss
rol
leave
inc
cmp
or
dec
cmp
and
je
push
add
cdq
fisub
push
lea
xor
push
adc
pop
lahf
in
jno
fisub
cmp
scas
jecxz
sbb
jbe
cwde
mov
sub
fwait
adc
popf
cmp
lahf
adc
add
cmp
mov
popa
pcmpeqd
xchg
add
fisttp
paddusb
call
push
movs
call
fisttp
or
push
repnz
mov
mov
jne
movs
(bad)
lds
jb
sub
in
(bad)
push
jge
ret
xor
std
jno
jbe
xchg
outs
adc
push
sti
das
sbb
push
or
div
in
fdiv
push
out
and
mov
xor
xor
add
int
les
jecxz
sbb
or
inc
imul
aam
push
adc
mov
les
js
adc
ror
popf
cmps
jge
add
mov
leave
and
cmps
sub
dec
xor
xor
xchg
dec
xor
cmp
inc
dec
dec
xor
and
push
push
xor
and
pop
pop
pusha
and
dec
fs
fisub
pop
retf
dec
or
popf
hlt
rcr
adc
mov
push
test
iret
xchg
jo
inc
xchg
sub
xchg
in
mov
mov
xor
mov
mov
icebp
(bad)
in
xchg
dec
xor
in
in
in
in
dec
xor
and
in
in
xor
and
in
in
in
leave
and
dec
in
in
in
and
dec
xor
in
in
xchg
dec
xor
in
in
in
in
and
in
dec
dec
add
lea
movzx
rcr
mov
aad
xchg
sub
cmp
call
dec
mov
fcmove
gs
adc
psubusb
cwde
call
inc
mov
fdiv
sub
jo
stc
inc
ror
retf
add
add
dec
push
xchg
sub
and
ja
les
aam
mov
mov
adc
in
sbb
fdivr
cmc
in
daa
push
sar
sbb
jns
sbb
(bad)
push
adc
lds
frstor
xchg
or
ror
mov
or
ret
pop
cmp
mov
stos
and
and
popa
add
ret
xchg
fs
adc
int3
push
add
dec
dec
push
cmp
cmp
fsubr
mov
adc
mov
and
push
shl
and
jmp
xlat
(bad)
les
mov
in
add
xlat
mov
mov
fbstp
out
pop
mov
mov
mov
pushf
mov
rol
jb
enter
mov
dec
xchg
or
sub
mov
sub
rol
jmp
jb
lods
xchg
(bad)
test
fimul
nop
rol
call
dec
pop
lea
cmp
cmp
addr16
cmp
or
xor
lods
shl
adc
rol
std
xor
std
add
push
and
xchg
scas
or
addr16
es
jl
fwait
neg
mov
adc
sub
and
sub
mov
pop
xchg
fsubr
bound
scas
movs
sti
ins
popf
jbe
in
in
inc
scas
movs
adc
ror
adc
or
sub
push
or
add
rcr
inc
pop
add
lods
cmp
aaa
and
jecxz
mov
js
sub
hlt
(bad)
or
(bad)
and
fadd
xor
jl
popa
push
lock
jo
pop
mov
mov
es
sub
mov
cmp
jno
fnsave
add
xchg
sti
loopne
das
or
les
xlat
and
in
mov
aad
in
dec
mov
enter
mov
jno
or
pushf
fst
push
pop
faddp
inc
aam
movs
push
ret
daa
mov
jb
sbb
cmp
dec
test
jbe
nop
popf
dec
in
pavgb
popa
call
ins
fcom
push
and
and
inc
cwde
jo
sbb
cmp
mov
add
inc
push
cdq
mov
ins
jne
test
rol
dec
mov
jbe
jns
mov
or
icebp
nop
adc
(bad)
sbb
pop
dec
xor
in
adc
sbb
ret
cmc
xor
retf
or
dec
ror
xor
fdivr
adc
loop
add
pop
adc
(bad)
in
loop
mov
fild
test
jecxz
sbb
add
lods
jmp
add
lock
lea
mov
dec
push
(bad)
in
sub
mov
mov
mov
mov
in
ret
and
popa
push
xchg
mov
dec
rcr
mov
push
xchg
mov
cs
in
out
xor
add
add
rol
dec
mov
out
dec
inc
sub
dec
sbb
add
out
or
mov
test
iret
mul
adc
pop
jge
out
add
(bad)
push
dec
(bad)
fcomp
or
or
inc
rol
imul
mov
push
sub
mov
xor
std
inc
add
pop
add
jmp
inc
in
jbe
inc
icebp
mov
test
cmps
mov
dec
mov
test
sbb
and
pop
ss
sbb
daa
nop
mov
or
mov
movs
jno
mov
pop
icebp
mov
mov
push
popa
and
enter
adc
stos
push
adc
add
movs
add
rcl
push
mov
inc
loopne
fwait
pusha
add
add
cwde
nop
or
lock
aam
push
(bad)
je
inc
inc
stc
inc
dec
add
lea
mov
jp
ucomiss
mov
inc
in
push
xchg
lock
jnp
rcr
push
push
test
mov
fisubr
int3
nop
mov
clc
pop
and
call
pop
sub
daa
aam
aam
mov
mov
in
aas
rol
or
loopne
or
mov
pushf
in
or
popf
fistp
test
or
or
out
loope
sbb
mov
xor
mov
ret
push
and
sbb
xor
paddq
bound
jb
aam
loopne
jge
mov
shl
fisubr
aam
shl
out
or
fwait
mov
loopne
pop
mov
jecxz
pusha
icebp
sub
dec
popa
mov
xchg
pusha
nop
fs
rcl
or
imul
movs
cs
sbb
push
daa
inc
xchg
imul
and
(bad)
fistp
repz
(bad)
push
mov
adc
stc
bswap
adc
inc
push
test
cwde
cmp
scas
nop
push
push
daa
aam
js
stos
ret
jo
sub
add
mov
(bad)
push
cmp
or
cmc
jne
(bad)
and
fidiv
test
fwait
mov
and
jno
ret
mov
adc
add
dec
or
adc
adc
lods
pop
pusha
adc
lea
lods
pusha
sub
or
xor
inc
and
jns
pusha
xor
push
stc
pop
rcr
or
in
add
push
add
cmp
add
push
test
mov
je
pusha
adc
test
mov
jb
les
shr
or
ret
sub
dec
xlat
sub
mov
sti
test
push
movs
push
or
pop
inc
(bad)
inc
cmp
out
cmp
jns
pop
and
dec
or
push
fstp
enter
inc
cmps
les
add
in
xchg
adc
sbb
add
jnp
xchg
adc
xchg
mov
pushf
pop
and
or
jb
add
pop
fs
xchg
adc
and
or
scas
inc
mov
jecxz
mov
stc
mov
pusha
cmp
cld
xchg
lock
add
lock
dec
lock
adc
push
dec
lock
dec
lock
push
jo
cmp
cmp
xor
std
mov
in
test
test
test
adc
mov
xor
push
and
mov
jne
dec
or
jo
xchg
jnp
stos
rcr
nop
(bad)
mov
jnp
loopne
mov
enter
mov
mov
push
fisttp
sbb
clc
or
scas
sbb
push
addr16
push
jmp
in
in
mov
loopne
add
mov
lsl
add
cmps
bound
call
sbb
or
dec
dec
cmp
icebp
sub
fs
xchg
cmp
inc
jl
fcom
xor
xor
inc
pusha
mov
inc
les
std
sbb
rol
mov
pusha
mov
sbb
js
jbe
popa
sub
stos
dec
xchg
jno
cmps
adc
rcl
xchg
push
adc
dec
cmp
xchg
adc
hlt
push
push
push
shl
mov
ins
inc
lock
or
sar
std
add
add
push
shl
sar
mov
push
imul
adc
fmul
sbb
or
mov
push
fcom
arpl
arpl
inc
dec
sub
push
mov
adc
cmps
mov
mov
rcr
fsubr
ror
rol
test
xchg
push
shl
and
cmp
lds
fcomp
adc
cmc
js
or
clc
or
inc
mov
add
and
les
push
and
push
jns
mov
xor
jno
add
shr
data16
ret
call
sbb
xor
jno
jnp
mov
icebp
push
les
inc
sbb
jge
add
push
movaps
push
or
mov
inc
shl
sbb
inc
cmp
mov
mov
xchg
sti
and
loope
or
xor
push
aas
loop
add
shl
adc
or
arpl
sbb
adc
mov
jg
ins
adc
rcr
adc
xor
aam
pop
mov
xchg
cmp
mov
fild
dec
int3
rol
shr
or
test
movs
and
shl
adc
lahf
push
aaa
push
mov
adc
mov
adc
sub
sbb
adc
inc
push
dec
fnstsw
adc
and
sub
lock
adc
dec
cmp
mov
xchg
rol
popf
cs
adc
xchg
sbb
mov
jnp
mov
dec
xor
ins
sbb
mov
enter
pop
xor
ins
push
push
mov
aas
or
movs
pop
pushf
iret
mov
cmp
pop
seto
or
vmread
das
pushf
dec
pop
xchg
push
xchg
add
(bad)
lea
mov
es
adc
mov
mov
add
inc
jbe
xor
test
retf
sbb
leave
and
and
push
adc
xor
es
push
mov
xor
lea
pop
jmp
nop
xchg
and
push
iret
outs
cmp
mov
js
popa
ins
lds
mov
add
pop
lea
mov
pusha
sbb
adc
ror
sbb
arpl
adc
sub
imul
pop
inc
es
sbb
mov
sbb
test
push
cmp
dec
cmps
jbe
lea
mov
ds
pop
and
xor
call
fst
add
adc
and
fwait
fs
pop
mov
adc
adc
jo
adc
loopne
loope
and
add
or
test
mov
push
sbb
sbb
adc
loop
lds
loopne
push
and
shl
or
cmp
pop
ret
(bad)
fstp
je
lea
push
aam
jmp
mov
enter
or
popf
xchg
data16
mov
or
sub
cmp
cmp
inc
add
out
inc
popa
(bad)
mov
push
popf
mov
dec
loope
loope
(bad)
and
mov
add
pop
push
sti
mov
and
jmp
jecxz
jmp
push
jmp
bound
pop
xchg
and
mov
cld
and
ror
repz
or
cmps
push
inc
push
daa
and
inc
sub
inc
mov
pop
popf
fadd
pop
pop
movs
jb
aam
or
xchg
adc
mov
and
push
bound
mov
sbb
jno
jnp
ins
inc
push
mov
inc
adc
aam
cmc
sub
jne
push
es
lods
and
in
mov
xor
add
mov
aaa
in
cmp
adc
and
bound
sbb
inc
or
jmp
and
or
inc
movs
ss
push
pusha
fsubr
cwde
sbb
or
(bad)
bound
(bad)
fnsave
comiss
jne
sbb
jo
jmp
or
mov
lds
mov
(bad)
ficom
in
mov
jg
adc
inc
repz
aad
adc
mov
mov
pop
es
lods
mov
inc
pushf
and
mov
inc
les
pusha
xor
jno
dec
lock
add
or
mov
lock
dec
and
das
ins
enter
pop
and
daa
mov
add
or
les
jmp
cmp
xchg
sub
adc
add
ins
movzx
xor
inc
mov
jbe
adc
and
sbb
or
dec
add
aaa
dec
popa
arpl
jno
cdq
in
les
mov
and
in
mov
rcl
sub
test
sbb
push
push
inc
pop
cmp
push
and
adc
test
push
mov
lds
inc
aam
push
jp
pushf
inc
sub
aam
and
mov
cwde
inc
adc
mov
lods
lea
or
lea
and
cmp
xor
in
or
and
sub
dec
inc
and
mov
mov
daa
cmc
inc
add
mov
pushf
sub
sub
(bad)
jb
fadd
cld
(bad)
pusha
adc
arpl
or
push
mov
scas
add
inc
shl
push
mov
add
cmps
jecxz
stc
sar
jnp
add
add
shr
mov
mov
inc
sahf
and
(bad)
shr
cmps
es
(bad)
loop
mov
loopne
shl
das
daa
jmp
inc
add
ret
mov
test
dec
loopne
mov
jmp
xor
dec
push
sbb
mov
pshufw
push
xor
psrad
and
loopne
xchg
xor
sbb
inc
push
(bad)
or
jp
pusha
xchg
movs
xor
aam
xor
jo
pop
xor
mov
xor
cwde
mov
jo
xor
push
in
and
rol
add
das
in
xor
add
cmps
ret
aad
push
inc
add
pusha
xchg
fcomp
add
xchg
xchg
xchg
pop
jb
std
in
loopne
adc
cmp
and
call
inc
retf
push
and
repz
fcom
and
cmp
mov
dec
loopne
or
gs
sbb
jnp
pop
xchg
push
add
shl
and
sbb
adc
cld
mov
pop
aam
ret
aaa
test
loop
or
mov
clc
pop
fwait
int3
aaa
push
jae
mov
mov
jae
jno
xchg
xchg
and
push
cmp
push
inc
push
xlat
call
xchg
dec
fstp
and
pop
sar
fisttp
push
or
mov
adc
shr
cmp
dec
cmp
mov
jne
cmp
or
xchg
jo
ret
or
add
jno
lods
add
xor
jne
movs
mov
xchg
ins
cmp
inc
sub
sbb
pop
cmps
cmp
push
adc
jnp
mov
mov
loopne
mov
sub
test
push
add
mov
cmp
lea
mov
sub
inc
inc
inc
push
lea
sbb
lods
inc
lods
add
mov
out
int3
cmp
jno
cmps
mov
in
cmp
push
inc
push
inc
pusha
je
mov
fucomp
pmulhuw
dec
cmp
xchg
int3
mov
shl
enter
adc
and
cmp
std
aaa
or
and
cmp
sbb
mov
dec
(bad)
ja
cmps
inc
mov
or
pop
jecxz
push
push
push
or
xor
aad
sbb
mov
jmp
fcom
movs
sbb
add
dec
sub
mov
mov
adc
pop
call
xor
test
jmp
inc
add
add
add
mov
mov
dec
inc
push
pop
aas
outs
mov
xor
dec
lods
ret
inc
jno
adc
xor
jo
adc
cmp
movs
jge
mov
push
in
rcl
imul
add
cmp
jnp
and
push
iret
sub
sbb
or
and
fdiv
sbb
sar
inc
sbb
rol
popa
sbb
inc
jnp
sub
inc
stos
xor
adc
and
imul
sbb
(bad)
call
jecxz
inc
push
jno
mov
or
es
jno
xor
xor
loop
call
adc
movs
mov
mov
inc
push
pop
mov
rol
sub
mov
or
pop
lods
retf
inc
popa
add
lds
xor
test
stos
mov
cwde
in
mov
mov
pushf
inc
pushf
push
inc
sahf
pushf
test
push
dec
popa
adc
xlat
ret
xor
or
and
ins
in
inc
pop
(bad)
test
sbb
adc
lahf
imul
lock
xchg
adc
scas
test
dec
mov
mov
aam
and
sub
mov
jecxz
adc
xchg
nop
outs
das
lods
dec
or
jmp
add
fucomip
sub
sbb
lahf
add
mov
xor
shl
fucomi
enter
loope
adc
mov
les
outs
int
mov
mov
mov
imul
arpl
mov
movs
lea
jmp
inc
or
mov
sbb
loope
push
or
dec
ror
cmp
mov
or
sub
or
mov
cmps
leave
push
rol
es
and
mov
adc
adc
out
mov
inc
add
stc
scas
pusha
push
test
xchg
add
loopne
pusha
gs
dec
push
add
shl
cmps
jnp
or
mov
jo
and
pop
xlat
pop
pop
xchg
sbb
mov
push
adc
or
push
dec
push
sub
xchg
sbb
sbb
pop
pushf
les
daa
adc
cwde
inc
int
mov
sbb
push
lahf
out
mov
push
ja
cs
mov
(bad)
arpl
inc
inc
add
dec
xor
mov
xchg
push
or
movs
ror
adc
add
xchg
dec
sbb
imul
mov
mov
jmp
pop
dec
cmps
jno
pop
add
fsubr
push
jecxz
xchg
ins
fmul
sbb
add
sub
dec
push
(bad)
lds
and
dec
inc
in
xchg
ffree
and
retf
fcom
add
xchg
pop
paddsb
push
xor
push
xchg
lea
gs
adc
ja
push
les
sbb
inc
push
mov
inc
adc
add
push
fisttp
and
inc
bound
jo
rcr
sub
add
pop
pop
add
mov
sub
test
cmc
push
js
adc
mov
push
sbb
test
lea
nop
mov
mov
mov
loop
pop
mov
xor
or
je
sbb
push
fbld
push
aad
and
call
push
lods
(bad)
idiv
shl
dec
ret
jns
sub
push
adc
push
aas
pop
and
add
sbb
aam
(bad)
or
sbb
xchg
fdiv
aas
stos
inc
pop
push
jne
push
movs
sub
and
popa
xor
imul
add
sbb
(bad)
loope
pop
push
jmp
pop
dec
pop
in
mov
in
test
cmp
sar
push
aam
xchg
or
mov
shl
adc
ja
fsub
(bad)
inc
and
mov
push
mov
dec
inc
aad
aam
pop
xor
cvtdq2ps
lea
test
pop
pop
add
dec
mov
add
xchg
pop
cmp
cmp
dec
fdivr
mov
call
pause
pop
loope
xchg
inc
mov
mov
ret
sub
jmp
in
adc
mov
and
and
jmp
enter
les
pop
sbb
or
xor
shl
push
enter
adc
gs
xchg
(bad)
dec
enter
adc
push
xchg
lfs
bound
add
pop
test
call
in
lea
pop
fdiv
scas
xchg
mov
and
loope
pop
mov
call
jmp
mov
push
mov
add
dec
es
aam
push
iret
adc
dec
mov
lea
push
cmp
(bad)
sbb
(bad)
jmp
mov
movs
arpl
xlat
mov
(bad)
cmp
inc
dec
cmp
aam
or
stos
fidivr
push
fs
dec
add
or
sbb
cmp
or
loopne
test
sar
les
loopne
push
sub
arpl
xor
adc
adc
and
pop
sub
dec
adc
mov
mov
xchg
dec
sub
add
movs
inc
add
jl
mov
push
mov
mov
jg
push
pop
mov
cwde
stos
arpl
xchg
adc
pop
push
push
inc
sbb
sbb
fsub
(bad)
inc
xor
dec
imul
jecxz
sbb
mov
sbb
or
popa
stos
push
pop
inc
aam
inc
aam
outs
push
je
or
adc
or
or
ins
push
dec
leave
mov
sub
enter
shl
mov
shl
cmps
fs
pushf
inc
mov
push
in
push
call
mov
lea
add
cdq
add
ret
mov
dec
les
out
mov
push
adc
outs
sub
sub
cld
or
je
adc
sub
movs
arpl
shl
sbb
sub
test
pushf
test
cmp
mov
xchg
retf
je
rcr
in
sbb
sbb
push
add
add
push
shr
sbb
popa
cwde
xor
sbb
loope
push
enter
cdq
mov
movd
pop
push
ror
inc
popf
enter
xor
push
inc
sub
shr
cmps
mov
test
mul
mov
jns
pushf
cmp
gs
or
inc
sbb
retf
nop
ja
or
pop
mov
loopne
aam
add
inc
scas
push
mov
xor
or
enter
add
mov
xchg
call
dec
mov
sub
aas
mov
add
scas
mov
pop
mov
in
mov
add
mov
nop
adc
or
mov
int3
jmp
mov
and
inc
test
xor
enter
and
adc
inc
in
add
jne
sbb
add
ror
loopne
in
xor
and
and
icebp
xor
(bad)
loope
xor
adc
pop
cs
mov
push
push
jno
imul
adc
test
rep
sub
loop
mov
lea
and
add
inc
sub
cmp
pop
mov
jns
adc
sbb
or
retf
mov
xchg
mov
sub
mov
add
jo
add
mov
mov
ret
mov
mov
pop
adc
pop
loopne
mov
movs
pop
call
dec
movs
push
jne
lmsw
push
push
or
sbb
jl
pop
mov
xchg
in
test
pop
lahf
xchg
jl
enter
pop
aas
repz
push
push
jae
jge
test
in
outs
lds
jmp
jo
popa
jne
add
mov
push
push
or
sbb
sub
test
dec
or
push
shl
sbb
in
mov
pop
nop
sbb
push
sub
inc
sub
fwait
mov
push
dec
mov
mov
sbb
popf
pop
dec
aam
cmp
sub
test
xor
xchg
lea
mov
xchg
jmp
mov
cmp
jne
clc
and
dec
movs
lahf
dec
mov
add
add
movs
or
push
pop
jg
jnp
ins
ror
dec
(bad)
dec
or
mov
lahf
or
mov
jno
ins
xor
arpl
arpl
iret
outs
scas
pushf
or
mov
fwait
xchg
pop
mov
fisub
push
outs
mov
bound
push
sub
in
or
aam
sbb
test
mov
dec
mov
jg
xchg
add
nop
scas
aas
mov
test
xor
lea
les
xchg
pop
inc
xchg
add
or
lea
adc
add
je
adc
test
mov
and
adc
je
xchg
and
rcr
dec
shl
inc
iret
dec
pusha
pusha
xor
aam
test
imul
pushf
xchg
mov
inc
push
jnp
inc
sub
xchg
inc
imul
sbb
adc
popf
pusha
adc
mov
dec
inc
aas
inc
mov
scas
mov
or
ins
gs
jo
sub
popf
mov
and
and
(bad)
and
and
jne
dec
cwde
ss
scas
xor
jo
adc
dec
setae
(bad)
stos
nop
cwde
xchg
push
lods
add
pop
pop
push
push
cmp
mov
or
pushf
bound
cmp
cwde
add
inc
(bad)
sti
dec
mov
mov
adc
mov
aam
jbe
loopne
(bad)
or
add
test
(bad)
repz
pop
mov
dec
or
add
pop
retf
adc
xor
add
and
mov
mov
sub
test
add
pavgw
(bad)
sysret
sub
push
pop
xchg
icebp
dec
and
pop
mov
push
and
jo
pop
(bad)
lock
pop
test
mov
jno
add
bound
cs
jmp
nop
bound
sub
cmp
ins
push
loop
sbb
jno
jecxz
(bad)
in
inc
inc
lods
pop
jno
nop
adc
pop
xchg
sub
lods
mov
gs
(bad)
push
cmc
mov
rcr
sub
xchg
ja
push
add
sub
ss
adc
mov
les
mov
mov
inc
ret
pop
cmps
loop
or
add
mov
jno
dec
or
inc
xchg
test
ins
adc
xor
cmp
lock
dec
sbb
pusha
inc
xchg
jo
iret
out
(bad)
popa
(bad)
les
icebp
xchg
popa
xchg
pushf
and
xchg
mov
lods
adc
push
and
mov
add
xchg
fbstp
inc
and
sbb
in
aas
or
aad
popa
add
mov
push
jmp
pop
add
mov
jmp
sub
xchg
jmp
iret
or
adc
and
test
push
dec
std
jl
addr16
fs
std
iret
mov
sbb
cmc
adc
rol
pop
adc
mov
ins
cmps
mov
sbb
jo
push
push
and
in
push
inc
mov
add
popf
ss
icebp
mov
cmps
sbb
push
adc
xchg
arpl
jo
inc
not
add
push
test
leave
in
dec
and
ins
and
scas
xor
add
stc
icebp
shl
sbb
inc
ins
enter
add
ins
pusha
fld
sbb
sbb
shld
mov
xor
inc
and
sub
push
push
push
or
lods
repz
or
loopne
xchg
ins
pusha
pusha
push
push
or
dec
shl
add
add
xchg
xchg
sub
addr16
enter
sbb
inc
jae
add
ret
mov
fs
sbb
adc
sub
arpl
jne
movs
ja
and
fnsave
inc
popa
adc
and
loope
inc
jmp
cwde
fisubr
pop
and
sbb
clc
adc
clc
pop
sub
xchg
out
or
or
adc
sbb
lods
shl
das
imul
arpl
inc
scas
and
push
(bad)
jge
ret
(bad)
mov
int3
std
xor
push
sbb
in
fcom
and
inc
test
enter
jns
xchg
adc
adc
inc
arpl
mov
jo
mov
adc
mov
call
or
adc
dec
xor
and
shl
nop
add
nop
add
inc
cmp
mov
shl
add
fadd
add
add
or
cmp
sbb
pushf
inc
sbb
cmps
nop
pop
stos
ss
sbb
lea
add
jo
pop
push
cmp
lea
pop
xchg
mov
dec
sbb
fiadd
adc
dec
push
sub
inc
dec
inc
std
daa
adc
and
gs
cmps
cdq
or
ins
inc
adc
leave
mov
inc
sub
xchg
dec
xor
xor
push
in
add
cmps
loopne
mov
cld
int
and
adc
and
jns
fisttp
fnsave
shr
sahf
shl
pusha
ror
add
arpl
add
add
(bad)
daa
add
jmp
xchg
jae
sbb
rcr
inc
adc
pusha
mov
shr
or
cmp
mov
mov
add
sbb
cmp
cmc
aad
sbb
(bad)
push
inc
imul
je
push
xchg
adc
adc
mov
push
add
push
inc
test
mov
mov
jb
ffreep
lds
pusha
or
inc
ss
or
dec
bound
fimul
lea
adc
pushf
xchg
mov
loope
xchg
inc
xchg
pusha
jmp
add
jmp
and
loop
mov
aas
mov
ret
ret
xor
pop
ret
xlat
and
mov
or
mov
adc
xchg
fnstenv
(bad)
mov
cmps
sub
cmps
dec
jmp
jge
adc
aas
pop
mov
pushf
mov
shl
mov
add
mov
fld
xchg
call
dec
cmp
and
sub
push
std
xor
and
std
std
dec
and
dec
(bad)
(bad)
(bad)
pusha
ficom
pop
mov
dec
imul
sub
(bad)
push
enter
xor
mov
sub
sub
fidiv
or
fisub
inc
scas
jne
cdq
ss
push
sub
aam
mov
xor
add
std
and
sbb
inc
je
ret
sub
out
and
imul
jge
lea
(bad)
adc
sub
add
ins
and
jge
add
ret
sbb
pop
ret
sub
enter
add
test
xor
sar
cdq
rol
shr
jno
sti
mov
ror
push
xlat
stos
es
lods
mov
sub
test
sub
sbb
push
inc
icebp
sub
lods
add
(bad)
and
inc
(bad)
sub
(bad)
cmp
mov
dec
(bad)
scas
xor
or
sub
fsubr
dec
mov
jecxz
es
push
pushf
push
loop
test
adc
test
sub
lods
test
(bad)
mov
shl
pop
dec
(bad)
xchg
sub
mov
jo
sub
arpl
inc
sbb
mov
and
adc
xor
loop
dec
xor
sub
inc
lea
cmp
push
aad
dec
cmp
add
sbb
dec
sbb
daa
mov
scas
outs
sar
ret
xchg
or
and
retf
mov
mov
out
jmp
ret
inc
xchg
add
cmp
xchg
xor
xchg
adc
dec
and
jno
cmps
fcomp
xor
add
mov
loopne
sub
mov
adc
les
nop
push
inc
mov
sub
mov
(bad)
fisttp
and
mov
test
add
scas
pop
mov
sbb
mov
or
adc
mov
pop
(bad)
sbb
shl
stc
add
sbb
inc
xchg
mov
mov
add
test
pushw
cdq
fxch
icebp
shl
mov
xor
xor
jle
mov
fcmovnb
sub
dec
loope
mov
pop
pushf
add
jmp
mov
mov
cmp
rol
mov
push
add
jecxz
push
arpl
and
shl
lods
mov
sub
scas
call
shr
mov
adc
sbb
inc
bound
sbb
pop
movlps
xchg
jecxz
and
add
pusha
and
xchg
mov
mov
nop
xchg
sbb
sbb
test
cmp
movs
add
loopne
and
and
xchg
inc
hlt
popa
rcr
arpl
xchg
push
add
mov
(bad)
fsub
xchg
mov
sub
sbb
and
mov
(bad)
or
push
daa
mov
mov
inc
les
adc
add
aad
mov
(bad)
sub
leave
mov
push
inc
pop
rol
aas
or
jno
sar
push
leave
inc
mov
add
les
mov
and
adc
gs
or
(bad)
push
inc
jo
sbb
popa
stc
sbb
fldenv
adc
jo
ret
push
loope
call
inc
push
push
cmp
sub
(bad)
inc
adc
dec
mov
mov
fisttp
fld
shl
adc
sbb
(bad)
pop
push
cmp
xlat
pop
aam
fwait
or
ss
icebp
add
hlt
add
les
rcl
inc
mov
add
dec
int3
sub
ss
dec
lods
dec
add
mov
xchg
mov
dec
test
movs
xor
or
cmp
cmp
and
call
pop
std
pop
lds
mov
or
mov
test
push
ins
mov
das
in
outs
or
mov
jmp
lods
inc
imul
jg
shr
mov
xor
xchg
or
mov
daa
push
mov
dec
ret
and
aaa
pop
mov
inc
cmp
es
or
js
mov
popa
ja
jmp
ja
jl
sub
sbb
pop
adc
pop
test
mov
add
adc
xor
push
sti
leave
std
cmp
loop
lea
inc
add
int3
das
and
cmp
iret
and
adc
adc
adc
ss
cmps
cmp
xchg
inc
rol
mov
test
loope
cli
pop
push
mov
(bad)
nop
dec
add
arpl
xor
imul
ja
and
mov
pop
xor
mov
nop
mov
mov
push
std
or
add
push
test
call
loopne
int3
ins
cwde
int
test
mov
and
jge
or
add
adc
sbb
push
sub
jae
mov
stc
dec
mov
or
sbb
adc
add
in
and
aad
sub
test
cmp
adc
push
adc
(bad)
add
inc
shr
sub
imul
rcl
sti
and
lods
arpl
fistp
rdmsr
inc
sbb
es
test
or
sbb
cwde
add
mov
dec
xor
retf
js
cwde
inc
jl
push
loop
dec
adc
call
and
dec
in
adc
lds
out
or
test
push
pop
adc
scas
xor
iret
int3
add
sbb
or
mov
add
test
or
adc
iret
sub
push
bound
in
loopne
or
test
call
ret
jmp
jne
adc
push
movs
sbb
xchg
or
jno
pop
test
xchg
aad
icebp
add
jno
jecxz
aad
xchg
xchg
mov
test
dec
(bad)
retf
test
or
pop
jnp
inc
and
(bad)
rol
movs
push
inc
in
sub
(bad)
call
mov
add
or
push
mov
cmp
adc
imul
pop
(bad)
adc
inc
(bad)
adc
scas
and
sbb
cmp
ins
xlat
mov
xlat
adc
xor
popa
les
and
xor
movs
fcomp
outs
cwde
inc
sub
test
sub
bound
aam
push
push
outs
jmp
in
aam
xchg
pop
call
add
inc
or
push
push
lods
in
rol
xor
jge
add
pop
xor
adc
add
dec
lock
fldcw
pop
fidivr
xchg
shl
mov
adc
add
or
idiv
pop
(bad)
nop
arpl
push
(bad)
aam
shr
pop
xchg
jo
int3
int
les
xor
fisttp
fs
mov
fdiv
cwde
movs
and
mov
inc
inc
push
jmp
dec
lea
dec
pop
cwde
xor
and
sub
iret
lock
add
jns
inc
add
lock
xor
mov
sbb
dec
jmp
sar
inc
mov
scas
loopne
add
ret
xor
fs
pushf
cld
jnp
enter
iret
rol
add
je
ins
jge
cld
cmps
push
(bad)
(bad)
enter
aas
sub
add
mov
and
add
inc
xchg
jo
ffreep
sbb
scas
(bad)
jl
cdq
js
and
pop
ret
shrd
sbb
test
test
ret
jno
push
dec
mov
add
fst
push
add
push
loopne
(bad)
dec
or
mov
popf
adc
pop
dec
xor
sub
call
gs
jge
mov
add
and
or
pop
aad
adc
jae
adc
test
mov
cmp
or
jb
cmps
outs
or
loop
pop
push
call
push
pop
push
xchg
sub
add
or
iret
mov
cwde
loopne
test
dec
adc
cmp
jecxz
fsubr
mov
packssdw
mov
dec
inc
dec
movs
movs
dec
jecxz
mov
mov
sub
mov
inc
and
xchg
pop
test
call
(bad)
in
in
cmps
ret
or
and
aas
push
(bad)
sub
(bad)
adc
test
mov
push
jo
adc
sbb
int3
movs
data16
lahf
add
push
push
adc
out
and
lahf
sub
push
add
stos
ret
sbb
test
imul
and
imul
cs
and
jae
dec
in
add
xchg
and
std
aas
in
nop
sbb
push
add
shl
or
adc
aas
add
pushf
sbb
push
or
outs
fadd
xor
ret
add
imul
lahf
or
adc
aas
adc
cmp
or
pop
mov
mov
push
dec
xor
add
or
or
sti
mov
jmp
aam
mov
fcom
ret
mov
iret
sub
push
xor
dec
call
shl
or
xor
add
movs
mov
(bad)
push
fadd
mov
or
xlat
xlat
push
add
mov
aam
jmp
ret
xchg
test
xchg
or
push
mov
ins
popa
jo
fs
xchg
mov
test
inc
dec
mov
jmp
add
mov
dec
add
push
sbb
dec
mov
push
sbb
mov
ins
out
ins
mov
fsub
int3
pop
shr
adc
add
or
xlat
sub
pop
daa
adc
sub
jg
mov
fnstcw
mov
dec
fwait
loopne
test
nop
push
adc
mov
add
sar
or
inc
ret
ret
and
mov
sub
add
push
xor
add
test
retf
test
adc
inc
or
in
add
inc
ja
(bad)
int3
sbb
or
(bad)
rcr
cmps
mov
aas
pop
out
test
adc
pop
inc
xchg
or
add
adc
test
fcom
dec
and
pop
push
mov
add
test
inc
or
sbb
mov
fisttp
xor
mov
xor
mov
mov
jo
push
pop
xor
std
mov
arpl
mov
or
jmp
test
dec
sbb
lahf
mov
loope
loope
icebp
inc
les
or
and
xchg
sbb
xor
rol
push
mov
jbe
aas
adc
mov
mov
cdq
or
inc
sub
and
mov
fisttp
dec
pop
mov
add
fs
int3
lea
mov
sar
lods
mov
hlt
movs
jbe
add
aad
cdq
js
add
dec
inc
sub
add
mov
jg
or
imul
or
mov
gs
and
add
jg
sbb
xchg
push
and
aaa
ja
mov
popa
ins
mov
mov
fadd
mov
add
push
pop
popa
sahf
dec
add
neg
or
push
sbb
push
repz
test
push
or
dec
daa
pop
idiv
sub
ins
adc
dec
iret
xchg
add
idiv
jne
inc
or
sar
fadd
aas
jl
mov
xchg
xor
xchg
or
and
test
stc
inc
cmp
sub
fild
inc
or
cmp
test
or
and
cmp
pop
(bad)
and
icebp
or
cwde
push
sub
or
and
add
ret
jns
dec
add
cmc
mov
sar
pop
aaa
movs
mov
push
retf
mov
jmp
inc
inc
push
cwde
mov
sub
or
loopne
bound
xor
mov
das
lea
xor
dec
cmps
dec
sbb
or
(bad)
and
dec
jb
fmul
xchg
dec
xor
mov
xor
and
ins
inc
sbb
add
fnsave
shl
sbb
ss
test
sbb
inc
in
mov
pop
push
or
bound
mov
xor
test
icebp
mov
int3
int3
popa
in
cld
adc
call
mov
mov
sbb
jmp
gs
enter
pop
enter
imul
adc
or
or
inc
rol
test
push
adc
pop
dec
fbld
mov
fiadd
and
test
and
adc
(bad)
pop
pop
adc
xor
pop
fwait
add
xchg
pop
leave
(bad)
(bad)
jo
lock
add
test
cmp
push
adc
adc
sub
mov
adc
xor
enter
add
aas
lods
pop
inc
adc
xor
stos
sbb
fadd
push
(bad)
adc
add
mov
fild
out
bound
xor
sub
lods
aad
pop
arpl
clc
outs
scas
mov
pinsrw
pushf
iret
popf
sbb
shr
fdivr
jmp
jb
pop
cmp
(bad)
aam
lods
xor
mov
out
mov
sbb
pusha
push
test
test
xchg
push
mov
or
cmp
add
lods
cmp
push
cmp
dec
add
stos
js
mov
add
or
pop
call
imul
xor
add
fmulp
xor
cmps
mov
jmp
cmp
out
inc
push
xor
xchg
out
daa
mov
sbb
cmp
push
xor
xor
and
add
lahf
add
loope
(bad)
sbb
outs
or
aad
add
pop
movs
pop
xchg
add
nop
mov
pop
push
(bad)
and
sar
or
movs
xor
adc
adc
loope
fs
mov
pop
jmp
mov
daa
aam
and
and
push
(bad)
call
loop
cmp
adc
loopne
nop
pop
push
pop
lahf
inc
or
add
mov
jl
mov
daa
adc
sbb
or
lods
das
push
daa
nop
dec
push
cdq
mov
test
sub
test
(bad)
shl
pop
lahf
and
cdq
es
scas
loope
xor
or
jg
adc
and
dec
or
fdivr
or
or
lock
jo
pop
in
in
fcom
pop
hlt
fisttp
fcmovnb
push
xchg
cmp
fild
pushf
xor
sub
dec
pusha
movs
pop
arpl
xchg
dec
popa
or
inc
addr16
nop
in
aad
aas
int3
add
test
fild
jno
in
pop
in
icebp
inc
scas
loopne
(bad)
add
sbb
sub
cmp
mov
mov
pop
pop
adc
adc
fsub
dec
jno
inc
or
fwait
push
xchg
add
int3
pop
arpl
or
lods
push
and
add
or
add
mov
push
retf
lds
aam
in
adc
add
xlat
in
xchg
call
pop
or
sbb
jno
mov
aas
rol
dec
and
inc
popa
ja
add
cdq
or
add
adc
add
test
es
jecxz
push
pop
in
aam
test
add
inc
in
add
xor
ins
test
pusha
mov
and
pop
lock
or
in
cmp
or
lahf
sub
pusha
pushf
adc
xor
xchg
jns
add
pusha
adc
or
xor
inc
and
dec
or
or
xor
pop
in
sbb
push
mov
mov
mov
mov
cmp
xor
fcom
push
adc
sbb
add
das
or
or
pop
adc
dec
call
adc
or
xor
adc
cwde
mov
and
lds
ss
or
pop
adc
test
mov
hlt
or
int3
(bad)
or
adc
push
out
jmp
lods
mov
mov
xchg
mov
aas
or
arpl
mov
adc
add
mov
or
adc
inc
push
add
aas
or
fadd
mov
call
xor
mov
dec
adc
jmp
or
fmul
movs
xor
inc
mov
cwde
and
pusha
xor
mov
xchg
push
and
aam
pop
pop
pop
push
jp
repz
call
mov
jne
xchg
ins
test
xchg
mov
addr16
ror
leave
mov
xchg
jg
adc
jne
adc
ins
push
push
adc
and
pop
call
sbb
fistp
push
fmul
dec
imul
popa
(bad)
or
push
push
and
ins
rcr
cmovno
mov
int3
xor
test
pop
jg
pop
adc
pop
mov
loope
test
dec
jg
ss
inc
push
mov
pop
pop
and
adc
adc
pop
call
inc
xchg
push
push
jg
sbb
mov
jmp
loope
(bad)
xor
int3
fst
jo
aam
test
or
sbb
call
shl
sbb
or
push
ud2
push
lds
xlat
push
test
imul
xor
jg
push
add
jnp
sbb
inc
test
cmp
inc
sbb
add
xor
pop
fst
mov
push
fist
ret
sbb
or
pop
adc
xchg
ins
jno
dec
pop
arpl
ja
xor
inc
mov
mov
add
adc
push
inc
call
sbb
mov
adc
mov
push
in
mov
sub
les
adc
dec
(bad)
and
or
mov
mov
movs
ins
(bad)
fild
jmp
call
sub
adc
aam
or
pop
(bad)
or
sbb
mov
xor
dec
pop
xchg
popf
fsubr
aam
inc
cmp
pop
or
lgs
jmp
and
pop
push
xor
pop
bound
cmp
or
adc
jg
scas
dec
loop
in
sub
mov
adc
lods
lahf
mov
retf
push
data16
xor
popf
in
add
jmp
cmp
jge
push
inc
ret
retf
imul
das
adc
sbb
movs
or
sbb
leave
push
jl
leave
and
push
push
xchg
aam
inc
sub
lods
and
push
scas
sub
mov
fidiv
scas
ins
sub
mov
xor
sub
shr
ret
arpl
retf
out
push
sti
sbb
dec
pop
ins
arpl
push
push
adc
jbe
push
inc
xchg
lods
sbb
test
retf
ins
push
dec
daa
dec
cld
mov
xchg
xchg
lea
mov
dec
sti
enter
test
movs
icebp
ss
sbb
(bad)
fsub
in
(bad)
jno
adc
in
add
retf
add
ret
adc
xchg
adc
in
or
pop
pusha
out
lds
in
xchg
sbb
inc
add
nop
dec
push
cdq
pop
or
dec
push
mov
push
mov
push
xor
sub
shl
sbb
add
aas
and
inc
fsub
loope
jo
clc
sbb
inc
jge
push
xor
push
inc
es
inc
lods
push
jge
sbb
stc
cmp
pop
mov
mov
push
ficomp
ins
adc
call
mov
ret
aas
mov
fdivr
ror
and
popa
jo
(bad)
ins
mov
pop
ret
dec
(bad)
pop
sub
mov
ror
add
add
xchg
call
cwde
sub
and
push
sar
cmp
mov
nop
and
push
or
jg
pop
and
loope
xor
add
ins
mov
adc
(bad)
rol
push
adc
dec
push
push
js
adc
iret
fst
pushf
lahf
sub
ja
aas
jl
adc
inc
or
push
cmps
nop
retf
sub
nop
test
xchg
ins
cwde
push
dec
or
push
cdq
inc
sub
retf
test
xor
mov
xor
adc
mov
leave
ss
aas
and
push
or
inc
sahf
push
dec
or
or
adc
pop
or
add
(bad)
out
mov
pusha
push
aas
sbb
pushf
pop
xchg
pop
mov
or
mov
mov
cmp
test
jle
(bad)
mov
jmp
adc
arpl
jg
adc
inc
jno
iret
jg
xor
or
jb
mov
ds
pop
and
leave
inc
pusha
push
add
or
mov
inc
add
xor
adc
sub
(bad)
out
outs
cmp
leave
pop
dec
mov
jno
pop
xor
(bad)
jns
xchg
leave
aas
inc
rcl
add
mov
dec
icebp
jnp
retf
or
jg
inc
sbb
xor
pushf
mov
mov
adc
cwde
jno
cwde
add
pop
(bad)
gs
out
cwde
lahf
or
mov
test
aam
fcom
or
inc
sub
enter
retf
call
push
in
add
sub
and
or
and
push
dec
add
pop
dec
or
inc
sub
or
nop
retf
adc
test
mov
sbb
and
test
inc
sub
sub
sub
adc
pushf
or
xor
inc
sub
mov
mov
sar
call
fwait
loopne
call
pusha
push
cmps
mov
adc
rol
inc
outs
adc
ins
imul
lods
sub
call
fwait
inc
add
dec
dec
mov
arpl
clc
xlat
out
and
das
cli
xchg
xchg
sbb
pop
mov
call
sub
adc
ds
push
pusha
mov
inc
add
aam
mov
adc
cmp
in
mov
adc
dec
pop
mov
adc
mov
mov
outs
sbb
cmp
jae
mov
nop
into
mov
xchg
mov
sbb
enter
pusha
pop
inc
jb
and
and
and
sub
in
aas
inc
pop
in
or
jl
sub
leave
add
aas
sub
jbe
and
or
and
xchg
or
dec
shl
xchg
dec
mov
mov
aas
mov
aas
(bad)
lock
and
imul
sub
sub
call
icebp
mov
pop
jmp
in
adc
(bad)
mov
cmp
adc
sbb
jno
sbb
aas
mov
mov
adc
mov
ins
les
and
and
mov
jno
mov
and
mov
and
test
pop
xor
sbb
add
sti
pop
adc
mov
push
nop
jo
out
or
mov
in
add
es
push
xor
jns
jns
mov
rol
lock
ss
ja
ret
nop
mov
fistp
out
adc
ds
ret
push
mov
int
mov
mov
push
loopne
enter
repz
pusha
and
loopne
leave
ds
leave
leave
iret
repz
leave
leave
leave
leave
retf
iret
repz
retf
retf
shl
retf
push
push
pusha
mov
scas
rcl
jns
cmps
stc
adc
sub
ins
out
sahf
out
cwde
scas
(bad)
fcmove
repz
lock
mov
cmp
repz
test
jmp
jns
cmps
stc
add
out
sahf
out
jg
stos
ror
js
xlat
in
add
and
push
sbb
repz
lock
jbe
push
jns
out
jo
mov
lock
shl
adc
inc
lahf
mov
rcr
adc
xor
push
jo
mov
lock
lds
mov
jns
nop
mov
lock
fcomi
cmp
psubd
and
fnstenv
in
scas
and
dec
inc
clc
fisub
xchg
and
movs
cs
popf
addr16
loopne
inc
add
push
je
neg
int
jp
add
ins
push
jbe
inc
push
jb
mov
add
push
add
pop
addr16
sub
pop
mov
push
bound
jo
jmp
ins
ins
outs
arpl
imul
push
sahf
out
sahf
test
pushf
test
xlat
and
inc
mov
out
std
mov
add
sbb
inc
and
inc
jnp
add
push
dec
into
and
cmp
fsub
sbb
sbb
popa
cs
xor
push
adc
imul
cmp
add
dec
dec
arpl
push
push
mov
and
sbb
and
(bad)
mov
fs
sbb
add
add
outs
push
into
out
mov
outs
jp
aas
gs
js
je
fild
jns
push
inc
jbe
dec
(bad)
(bad)
inc
cmp
outs
addr16
ins
and
ins
gs
sub
sub
sbb
fld
sub
data16
push
imul
jne
imul
jmp
cmp
xor
pop
pusha
ins
ins
data16
arpl
sbb
gs
gs
cs
push
add
mov
lock
ja
and
or
or
or
popa
int
ret
jnp
ins
outs
arpl
jae
pusha
neg
cs
jo
je
jp
outs
jne
push
cld
lahf
sbb
xchg
and
loopne
(bad)
jne
pop
and
xlat
fmul
(bad)
mov
mov
loop
dec
pop
adc
outs
out
fnstcw
aas
pop
aas
gs
cmp
jne
ror
mov
fs
xor
jnp
popa
sbb
pop
ins
jbe
xchg
adc
imul
dec
jo
sub
add
xchg
sbb
mov
mov
pop
xor
bound
add
jo
shl
push
sub
scas
loope
arpl
scas
jbe
and
jae
fistp
and
mov
rsm
cmps
jg
outs
mov
add
scas
pop
ret
inc
xor
loope
loope
jns
je
dec
and
(bad)
call
outs
sub
sub
mov
nop
xchg
sub
bound
sub
cs
iret
ins
add
sbb
jnp
je
sub
aas
jg
in
jge
(bad)
add
add
idiv
sub
mov
sti
mov
ds
and
mov
(bad)
aas
outs
ins
xor
lods
sub
xchg
jmp
pop
add
jnp
inc
out
inc
or
and
outs
(bad)
mov
jo
fstp
inc
adc
imul
popa
mov
add
sub
imul
jg
add
jnp
xlat
ret
push
push
dec
outs
ja
sbb
sub
bound
fs
or
sub
jnp
add
adc
daa
add
push
and
push
jmp
xchg
cmp
stos
push
mov
jl
jl
daa
mov
push
push
sub
pop
jmp
pop
adc
ret
pop
mov
mov
out
jbe
sbb
xchg
inc
scas
mov
das
add
(bad)
loope
cwde
or
je
cli
and
daa
dec
add
push
push
dec
sub
cmp
pandn
mov
and
xor
out
jmp
outs
fs
push
test
mov
outs
jb
push
ds
ret
mov
or
and
sbb
jbe
ins
imul
jae
bound
jb
jo
jecxz
push
and
push
mov
fbld
aaa
inc
mov
pop
pusha
scas
lock
xchg
push
das
or
mov
sub
push
mov
inc
mov
or
sbb
push
xor
dec
add
imul
stos
aaa
fbld
scas
jo
pop
inc
xor
mov
les
fnstsw
dec
sti
jo
je
inc
aaa
dec
pop
rcr
imul
scas
push
adc
lahf
pop
push
sub
outs
sub
push
mov
les
add
adc
sub
add
jo
add
add
retf
cmp
add
(bad)
mov
fs
lahf
jp
loopne
ins
pop
jb
jns
mov
mov
sub
lock
je
test
aas
ja
out
outs
push
inc
add
imul
jo
gs
jb
or
arpl
jne
arpl
imul
outs
ja
inc
jo
(bad)
sbb
mov
arpl
jecxz
jge
push
bound
imul
ins
inc
popa
movd
sbb
add
jge
les
add
aaa
repnz
dec
push
hlt
pop
(bad)
hlt
fiadd
push
add
fstp
dec
mov
pop
loopne
cmp
pop
add
fstp
in
push
rcl
xlat
cs
sar
cmps
pop
mov
pop
mov
inc
out
cdq
(bad)
push
test
push
add
shl
sub
scas
aaa
ds
aam
ins
push
fdivr
inc
add
push
mov
dec
add
(bad)
push
dec
inc
push
inc
push
push
inc
pop
mov
gs
pop
push
jns
je
shl
inc
and
out
jae
rcr
inc
push
dec
inc
inc
dec
inc
push
jnp
jg
bound
or
push
outs
jb
and
pop
inc
jne
adc
lds
addr16
fs
dec
outs
arpl
fst
push
outs
imul
mov
imul
inc
jne
jb
inc
mov
jbe
out
outs
ins
push
jl
cmp
mov
call
inc
stos
jns
inc
dec
pop
sar
cmp
gs
xor
cs
ins
pop
inc
fs
ins
lahf
pusha
and
outs
push
dec
ja
out
add
push
dec
dec
inc
dec
push
push
pop
jae
sub
fld
jb
enter
ins
outs
push
std
mov
dec
push
dec
xor
add
dec
jne
dec
push
push
mov
push
inc
jo
pop
and
popa
mov
jae
sbb
popf
mov
cld
gs
test
imul
dec
ins
sbb
ins
gs
aam
and
jne
fldenv
dec
pop
xor
cmp
push
inc
push
cwde
push
mov
and
push
scas
aas
push
jbe
add
mov
(bad)
jno
mov
nop
pop
push
add
xlat
scas
stc
mov
xor
pop
popa
push
push
imul
push
push
push
dec
add
jae
adc
aam
dec
cs
bound
add
adc
js
jmp
inc
mov
popa
push
mov
jae
retf
les
inc
adc
pop
add
push
lock
mov
imul
and
rcl
push
add
leave
adc
adc
add
inc
jae
(bad)
jb
mov
push
imul
dec
outs
adc
repz
xchg
popa
adc
push
cli
push
mov
dec
push
xor
and
scas
mov
imul
adc
cmp
or
jo
lock
cmove
sbb
ds
sbb
push
push
add
ror
dec
cmps
sub
pop
outs
and
daa
outs
adc
rdpmc
add
outs
outs
je
loop
pop
clc
inc
dec
dec
push
xor
inc
lock
push
and
sti
add
mov
and
mov
dec
dec
push
adc
mov
pusha
dec
inc
and
outs
test
arpl
mov
or
dec
and
and
daa
sub
jae
fidivr
dec
sbb
jae
test
popf
mov
aas
inc
bound
push
adc
std
jno
ins
jne
sbb
retf
mov
rcl
(bad)
nop
sbb
aas
xchg
add
inc
push
mov
cmp
adc
shl
inc
mov
cmps
in
jae
dec
imul
fs
or
push
pop
push
mov
fld
iret
out
add
or
aas
xchg
inc
mov
sub
dec
xchg
dec
inc
push
xchg
int
inc
cmovl
inc
and
add
pop
inc
sbb
push
push
addr16
dec
clc
xchg
das
outs
cmp
and
call
aas
out
loopne
clc
pop
outs
add
and
xor
sti
fs
scas
add
pop
or
cmp
xchg
sti
aaa
pop
pop
bound
cmp
gs
push
adc
dec
xor
or
xor
mov
mov
stos
add
or
jl
jmp
mov
sub
push
push
jae
push
mov
loop
shr
ja
xchg
push
mov
pushw
lods
dec
adc
addr16
mov
jg
daa
fisub
inc
cmp
push
gs
pop
outs
jo
sub
popa
mov
or
jns
add
dec
inc
push
pop
inc
xor
ror
gs
in
mov
or
or
dec
jge
xor
shl
outs
xchg
loopne
iret
add
enter
push
adc
dec
jae
ins
(bad)
dec
push
outs
sub
push
dec
and
mov
dec
inc
pop
mov
sbb
sub
fild
xchg
push
push
push
ins
push
xchg
push
neg
sbb
mov
inc
inc
gs
push
jp
das
xor
mov
sub
(bad)
repnz
lea
push
imul
push
pop
outs
ss
out
push
sti
or
std
out
and
imul
or
and
sub
ret
jb
daa
repnz
aaa
outs
or
nop
pusha
pop
js
push
push
out
and
pop
push
inc
push
dec
imul
jmp
add
add
xor
test
stc
in
or
add
pop
mov
pop
outs
sbb
xchg
jae
pop
mov
xor
mov
arpl
or
mov
inc
es
sub
aas
imul
pop
push
cmps
push
inc
jl
out
add
pop
jbe
mov
mov
scas
sub
push
cmp
jbe
fiadd
dec
inc
dec
add
inc
mov
add
push
lahf
inc
or
push
xor
push
mov
add
or
fistp
dec
les
pop
fdivr
scas
mov
add
and
fs
aas
dec
and
xchg
out
je
or
add
jne
dec
out
sub
das
sbb
mov
mov
add
lock
push
pop
gs
ror
sahf
mov
and
dec
lods
inc
mov
inc
in
add
xor
add
mov
imul
add
adc
cmp
retf
arpl
dec
loopne
rcl
outs
aas
outs
push
ficomp
jle
out
jp
pop
pop
sbb
gs
pop
mov
(bad)
data16
xor
xor
xchg
inc
pop
inc
mov
out
aaa
push
add
inc
mov
xchg
bound
js
inc
fwait
sbb
adc
push
pop
in
addr16
sub
pop
cmp
push
and
jmp
aaa
mov
bound
(bad)
dec
ja
sbb
pop
jecxz
or
(bad)
outs
jbe
sub
mov
adc
(bad)
jl
jnp
imul
(bad)
(bad)
push
add
(bad)
xlat
stos
jbe
or
cli
pop
inc
lock
aam
scas
pushf
movs
jb
mov
xchg
es
test
xor
in
jno
xor
sbb
and
daa
mov
(bad)
mov
sbb
mov
sub
das
test
add
and
mov
(bad)
(bad)
(bad)
jmp
mov
iret
shr
stos
sti
inc
dec
xor
push
cmp
test
mov
cmp
(bad)
(bad)
(bad)
(bad)
mov
push
ror
or
in
pop
xchg
inc
pop
les
sbb
or
or
clc
inc
mov
fneni(8087
xor
or
(bad)
call
ret
bound
enter
aad
test
gs
or
jg
test
cmps
mov
call
mov
dec
add
push
(bad)
(bad)
(bad)
jmp
push
mov
loope
cwde
adc
mov
push
sub
mov
inc
push
inc
cdq
sub
push
push
or
xor
movs
cmp
repz
sti
jl
cmp
(bad)
(bad)
(bad)
push
inc
inc
(bad)
fsubrp
retf
push
jnp
xor
dec
xchg
or
ret
dec
or
mov
mov
(bad)
(bad)
push
mov
and
xchg
push
aam
pop
int3
pop
gs
ins
jo
push
std
in
mov
call
inc
push
cmps
lea
add
pop
add
shr
(bad)
add
(bad)
(bad)
inc
scas
mov
imul
adc
addr16
xchg
repnz
into
lock
jae
lods
je
out
xor
jmp
stc
aaa
call
inc
icebp
sbb
sub
mov
bound
stos
sbb
dec
(bad)
sar
aaa
cld
(bad)
call
int
hlt
pop
(bad)
xor
adc
jmp
sub
leave
pushf
out
mov
jg
sub
mov
jmp
cmp
push
cdq
popa
pop
sub
mov
imul
out
(bad)
iret
arpl
jl
jnp
cmp
lods
repnz
outs
lds
pop
out
push
mov
inc
lock
out
stos
xchg
jp
jns
mov
or
cli
push
pop
lods
aaa
add
data16
push
lods
test
cmp
outs
push
mov
mov
dec
pop
rol
std
jns
out
xchg
es
mul
pop
inc
rol
movs
sahf
out
sahf
in
jno
xor
xchg
mov
add
inc
repz
loop
jmp
shl
shl
mov
out
sbb
sbb
ret
push
pushw
push
jns
out
cmp
mov
jecxz
sbb
xchg
cmp
or
in
xchg
cld
push
mov
icebp
cmp
repz
mov
or
daa
mov
mov
out
push
out
stos
sti
dec
lock
test
stc
jns
aaa
add
cmp
out
sahf
out
push
mov
jns
xchg
popf
cmp
push
cmp
fisub
inc
es
repz
int
adc
call
xchg
cmp
repz
pop
push
les
retf
xor
mov
jns
mov
fdiv
sahf
xlat
sbb
add
push
nop
mov
add
mov
adc
lea
fstp
push
xor
or
and
js
ret
and
shr
jns
xchg
in
out
aaa
xor
adc
bnd
daa
mov
out
(bad)
xor
jmp
pop
xor
cmp
push
cmps
(bad)
jns
or
(bad)
push
push
fnsave
sahf
out
dec
mov
xor
push
mov
add
sti
add
add
test
aaa
les
push
xor
push
xchg
jns
out
sbb
xchg
add
sahf
out
add
push
daa
sahf
out
xchg
into
push
pop
cmp
repz
or
mov
and
aas
inc
push
sub
(bad)
pop
mov
scas
push
add
je
push
push
add
(bad)
push
aaa
imul
rcr
pop
xor
je
sbb
or
sar
xor
inc
mov
sbb
jmp
ja
cmps
loope
fldz
lds
fcomp
popa
inc
rol
or
imul
shl
mov
fnsave
adc
stc
mul
or
cwde
cmp
mov
jo
pop
pop
sbb
stos
out
mov
add
add
or
pop
je
inc
add
stos
out
mov
mov
mov
not
pop
mov
mov
call
retf
pop
xor
out
popa
shr
sub
outs
call
mov
cmp
rcr
pop
xchg
fwait
out
cwde
add
iret
icebp
lock
stc
xchg
xor
xchg
or
add
add
loopne
aaa
xchg
sbb
fbld
inc
test
pop
xor
rol
outs
inc
rcl
bound
stos
stos
cmps
push
cld
mov
call
leave
shr
loope
and
or
jmp
xor
out
mov
dec
test
test
add
jg
sbb
ret
adc
sub
xor
push
pusha
push
dec
jmp
scas
adc
push
enter
sub
mov
adc
or
pop
sub
xor
xchg
(bad)
cdq
loope
pusha
sub
mov
or
jmp
push
and
(bad)
jmp
movs
clc
jl
test
ja
cdq
idiv
(bad)
push
repnz
fisubr
mov
vandpd
pop
and
add
addr16
(bad)
jmp
jge
(bad)
(bad)
sbb
stos
stos
out
jbe
call
sbb
jge
add
(bad)
jge
out
cli
cli
adc
inc
(bad)
(bad)
(bad)
dec
sti
lock
lods
in
mov
aam
pop
mov
scas
jmp
movs
mul
jb
(bad)
(bad)
(bad)
call
jne
mov
loope
std
sbb
xchg
xchg
scas
dec
es
ss
jle
aas
inc
cmc
div
(bad)
(bad)
(bad)
inc
or
dec
push
movs
movs
hlt
shl
in
stc
icebp
icebp
or
jno
xchg
stos
fcomp
jae
xor
(bad)
(bad)
(bad)
call
adc
add
xchg
mov
gs
ret
ret
pop
xor
sbb
aaa
xchg
xchg
mov
(bad)
(bad)
dec
das
call
and
adc
sbb
loop
int
jmp
dec
daa
daa
imul
dec
jmp
sbb
sub
je
sbb
cs
sbb
mov
(bad)
(bad)
call
out
pop
mov
push
div
cmp
(bad)
(bad)
popa
jge
mov
push
sub
jnp
jecxz
ds
out
imul
adc
cmc
mov
in
in
sub
(bad)
(bad)
inc
and
cld
cld
pop
jns
mov
mov
pop
in
aam
push
(bad)
retf
retf
inc
addr16
cmp
(bad)
(bad)
call
dec
aam
pop
pop
call
mov
out
out
sub
stos
in
sti
sti
push
and
(bad)
inc
dec
dec
xlat
xor
push
adc
inc
iret
jmp
pop
mov
and
lahf
lahf
mov
jmp
push
repz
mov
inc
rol
xchg
lods
and
cmp
sbb
(bad)
push
cmc
add
mov
mov
scas
fcmovu
jne
and
arpl
adc
xor
(bad)
jmp
repz
mov
int
dec
sbb
adc
adc
(bad)
(bad)
call
xor
mov
xchg
xchg
mov
cs
pop
cmp
cmps
cmps
repnz
jle
(bad)
(bad)
(bad)
jle
jp
cmp
lods
mov
sbb
sub
jae
xchg
shl
sbb
(bad)
(bad)
(bad)
dec
mov
and
push
sub
jle
nop
nop
stos
or
inc
retf
out
sub
(bad)
(bad)
(bad)
(bad)
mov
cmp
(bad)
jns
pop
pop
loop
or
sbb
fneni(8087
loopne
xor
push
je
(bad)
(bad)
(bad)
(bad)
cmp
or
push
xchg
dec
dec
fisttp
push
or
and
mov
ret
mov
lods
add
out
les
cmps
cmp
xchg
movs
shl
in
bnd
mov
out
mov
inc
loope
enter
aaa
aaa
pop
fisubr
mov
(bad)
(bad)
(bad)
push
dec
dec
ror
test
mov
push
push
cli
repz
hlt
pop
iret
jmp
cld
pop
hlt
scas
hlt
jp
cmp
scas
jmp
outs
mov
mov
(bad)
(bad)
jmp
cs
sbb
and
cmps
cmps
icebp
jae
mov
xchg
mov
retf
call
fnstsw
(bad)
(bad)
push
ds
pop
and
mov
mov
loopne
jo
jl
ds
jno
(bad)
(bad)
push
data16
nop
dec
dec
fadd
add
add
sbb
push
adc
popa
popa
mov
scas
jg
(bad)
call
stc
imul
rcr
sbb
fabs
loope
ja
sar
jmp
clc
adc
cwde
cwde
mov
adc
imul
pop
mov
cmps
sub
push
push
and
jmp
into
dec
jg
inc
call
sub
(bad)
jp
(bad)
(bad)
(bad)
dec
clc
or
or
fcmovbe
out
xor
push
(bad)
inc
ret
sub
sub
adc
mov
test
push
cld
ins
mov
push
cmp
add
iret
repz
push
push
add
jge
(bad)
out
iret
repz
inc
popf
inc
xchg
cmp
or
addr16
repz
repz
cmp
ret
push
inc
cmp
repz
dec
pop
hlt
xor
cmp
repz
repz
or
gs
sub
lgs
ss
repz
repz
iret
repz
sbb
cmp
repz
sti
test
cmp
repz
jnp
jno
retf
xchg
cmp
cmc
push
out
pusha
pop
enter
out
sahf
inc
(bad)
aam
jns
out
dec
imul
push
out
sahf
out
xlat
push
xchg
iret
sahf
out
sahf
adc
xor
out
jecxz
inc
mov
jns
out
mov
out
sahf
shl
sbb
jns
out
ins
dec
adc
das
out
sahf
out
mov
out
sahf
repnz
sub
out
xchg
mov
jns
out
jle
or
out
sahf
sub
cmp
loop
jns
out
jbe
push
dec
push
out
sahf
out
or
sahf
out
sahf
outs
out
cmps
test
aaa
jns
out
mov
inc
pop
mov
mov
loop
call
sahf
shl
mov
pop
and
scas
mov
sbb
out
sahf
out
outs
jb
icebp
sahf
out
sahf
(bad)
push
and
jns
out
fstp
xchg
out
les
jns
add
mov
sahf
out
xchg
pop
daa
mov
out
mov
mov
sahf
mov
jns
out
dec
(bad)
js
(bad)
out
sahf
out
adc
xor
mov
jns
out
retf
cld
(bad)
cmp
jns
out
ja
repnz
xor
sub
out
(bad)
xlat
stos
jbe
out
sahf
out
leave
jge
pop
sahf
out
sahf
inc
lock
aam
scas
jns
out
pushf
movs
jb
mov
jns
out
xchg
es
sahf
out
sahf
test
jns
out
jno
xor
out
and
sbb
add
loop
sahf
out
jmp
mov
or
jns
out
sub
sbb
out
sahf
pop
mov
jns
out
sub
das
test
pop
add
sar
add
repz
repz
mov
push
iret
repz
mov
iret
cmp
repz
out
stos
sti
inc
repz
repz
xor
cmp
add
cmp
test
iret
repz
mov
cmp
repz
cmp
mov
iret
fisub
adc
repz
repz
or
in
pop
repz
repz
inc
pop
les
jle
fs
sbb
iret
repz
or
repz
repz
mov
fstp
repz
xor
or
cmp
repz
and
ret
repz
lods
bound
iret
repz
enter
repz
repz
test
cmp
hlt
jmp
repz
js
cs
cmp
repz
mov
call
iret
je
dec
mov
repz
ds
dec
repz
repz
push
popa
xor
push
mov
cmp
repz
clc
cwde
adc
cmp
repz
repz
xchg
into
push
sub
cmp
repz
mov
cmp
repz
push
cmp
sub
push
cmp
repz
jl
jnp
repz
repz
add
repz
addr16
xlat
stos
jbe
iret
repz
or
cli
repz
repz
inc
lock
aam
repz
mov
sar
cmp
std
xchg
es
repz
test
cmp
in
jno
xor
add
and
sbb
cmp
repz
add
repz
and
daa
mov
cmp
repz
sub
repz
rep
pop
mov
cmp
(bad)
mov
jecxz
test
sar
add
cld
mov
push
jns
out
mov
out
sahf
out
shr
stos
sti
sahf
out
sahf
inc
dec
xor
out
add
cmp
out
sahf
out
push
mov
jns
xchg
popf
cmp
mov
jns
and
push
out
sahf
out
int
adc
sahf
out
sahf
pop
xchg
inc
pop
les
jle
fs
sbb
jns
out
pusha
or
and
nop
mov
jns
out
mov
out
sahf
out
loopne
cmp
sahf
out
sahf
dec
push
and
ret
sahf
out
lods
bound
sahf
out
out
aaa
ins
sahf
out
sahf
(bad)
aad
test
out
hlt
jmp
out
mov
out
sahf
sbb
mov
call
jns
pop
dec
mov
out
jo
mov
sahf
out
sahf
dec
add
push
popa
xor
push
mov
jns
out
loope
cwde
adc
(bad)
sahf
out
xchg
into
push
sub
jns
out
mov
jns
mov
cdq
jns
out
sub
push
adc
(bad)
(bad)
(bad)
inc
push
sbb
movs
ret
cmp
pop
xchg
cmp
inc
icebp
lods
cli
pop
stos
dec
jecxz
xchg
and
cli
push
lods
fcomip
(bad)
push
test
dec
and
lds
retf
xlat
es
xor
(bad)
(bad)
fidiv
sbb
jmp
ret
(bad)
(bad)
jmp
adc
sar
mov
pop
out
xchg
pushf
xchg
mov
push
pop
(bad)
(bad)
(bad)
call
mov
and
dec
loopne
sub
ret
hlt
mov
cdq
pop
imul
jno
(bad)
(bad)
(bad)
(bad)
mov
mov
data16
cmp
sbb
adc
jg
sub
(bad)
push
imul
stc
or
xchg
(bad)
(bad)
call
sbb
clc
mov
jae
and
add
jecxz
(bad)
push
push
(bad)
(bad)
(bad)
jmp
pop
das
mov
add
aaa
or
and
push
in
push
(bad)
(bad)
(bad)
inc
sub
pop
repnz
imul
int
add
bound
les
dec
mov
mov
xor
das
adc
cmp
out
stos
pop
jno
push
mov
and
fld
cmp
(bad)
ds
inc
xchg
push
lea
add
aam
pusha
push
adc
and
mov
(bad)
(bad)
inc
int3
fstp
call
mov
jns
out
(bad)
inc
psubsw
(bad)
(bad)
call
test
add
add
push
adc
ins
pop
jb
std
push
call
xor
test
push
cmp
sub
(bad)
dec
psubusw
cmps
and
ss
addr16
push
out
mov
xchg
rcr
fwait
xchg
sahf
dec
xor
sbb
and
sbb
icebp
(bad)
call
sbb
loop
mov
in
and
inc
adc
pop
sbb
mov
sub
push
test
test
jne
dec
out
cdq
fnstsw
test
cmc
mov
pop
sti
ja
das
push
adc
jbe
and
fdiv
icebp
arpl
(bad)
(bad)
call
xor
retf
test
adc
adc
test
jge
mov
xor
(bad)
sub
call
mov
repz
shl
sub
mov
cli
inc
jmp
(bad)
jmp
lock
sbb
sub
and
nop
out
xchg
(bad)
fnstcw
rol
mov
mov
ss
(bad)
(bad)
jmp
jp
sub
mov
es
lods
mov
in
js
or
push
jle
(bad)
dec
fs
test
cmp
pop
add
cmc
lahf
pop
cmp
(bad)
(bad)
mov
outs
aad
test
enter
adc
jge
call
cmp
(bad)
(bad)
(bad)
dec
outs
pop
sbb
in
call
out
outs
gs
jmp
jle
mov
inc
add
out
(bad)
ss
jmp
(bad)
adc
scas
sub
and
(bad)
movs
xchg
xor
(bad)
mov
or
loopne
shl
icebp
add
dec
inc
in
(bad)
jg
push
push
pop
xchg
imul
(bad)
(bad)
(bad)
push
(bad)
lea
mov
int3
stos
dec
push
in
add
sahf
shl
sbb
sub
mov
(bad)
(bad)
(bad)
call
mov
jae
or
mov
sbb
push
jmp
(bad)
inc
adc
(bad)
(bad)
call
mov
adc
jmp
cmp
into
test
leave
xor
jp
mov
(bad)
(bad)
(bad)
call
jae
sbb
jns
(bad)
aaa
mov
pop
std
stos
pop
fistp
fild
retf
cmp
mov
ret
jb
loop
or
cmp
mov
or
(bad)
(bad)
cmp
mov
fdiv
nop
jnp
test
xor
repz
je
mov
push
ret
xchg
retf
cmp
repz
stos
xchg
push
div
cmp
repz
and
repz
vpshab
add
repz
mov
cmp
repz
sub
cmp
inc
push
imul
cmp
repz
data16
xor
iret
repz
inc
loopne
sbb
repz
xchg
pop
sbb
repz
push
sub
add
cmp
repz
cmp
pop
sub
iret
repz
pop
mov
repz
stos
push
iret
repz
push
stc
cmp
iret
repz
outs
jmp
repz
repz
ja
mov
stos
repz
fild
leave
push
cmp
push
add
lods
dec
sti
iret
repz
push
push
daa
fs
cmp
repz
mov
rcr
dec
mov
repz
in
sbb
iret
repz
test
repz
repz
mov
repz
fsubr
retf
cmp
repz
jge
adc
cmp
repz
repz
shr
cmp
cdq
cli
and
sbb
cmp
repz
mov
iret
repz
sub
movs
in
repz
or
pop
cmp
repz
mov
cmp
repz
repz
hlt
add
iret
repz
fxch
aam
repz
repz
xor
shl
repz
cmps
mov
dec
test
das
lea
fcomip
cmp
repz
mov
cmp
pop
jae
pop
push
xor
repz
mov
mov
cmp
repz
xor
repz
aas
jns
jmp
xchg
cmp
repz
mov
iret
repz
ficomp
iret
repz
cmps
movs
pop
repz
repz
cli
iret
repz
ins
jbe
xlat
retf
inc
cmp
repz
pop
sbb
shl
iret
repz
xchg
stc
pop
iret
repz
pushf
jp
and
cmp
repz
mov
jno
cmp
repz
lods
lods
cmp
repz
xor
jg
scas
mov
sub
ins
clc
repz
repz
(bad)
stos
sub
repz
ret
xchg
cmp
sbb
repnz
cmp
repz
mov
repz
push
loope
in
out
lahf
cmp
repz
mov
add
repz
adc
iret
jmp
pop
cmp
repz
or
push
iret
repz
inc
(bad)
cmp
repz
aad
fldenv
push
cs
iret
repz
xchg
lds
dec
sbb
sub
pop
or
repz
sbb
(bad)
repz
pusha
es
cmp
cmp
repz
cld
icebp
fadd
and
and
xor
repz
mov
push
cmp
repz
dec
mov
repz
repz
dec
shl
or
cmp
repz
int3
inc
adc
imul
repz
adc
cmp
repz
mov
outs
out
cmp
repz
call
repz
jl
and
cmp
rcr
cwde
(bad)
cmp
repz
not
mov
iret
repz
add
mov
push
jmp
inc
sbb
repz
inc
popa
or
iret
repz
cmp
leave
in
fistp
repz
into
aaa
int
repz
rep
fcomi
les
repz
inc
ret
and
iret
repz
in
test
pop
push
hlt
inc
pop
iret
repz
daa
stos
popf
cli
jecxz
cmp
repz
int3
add
sub
cmp
repz
iret
repz
(bad)
das
dec
inc
ror
xchg
ins
push
mov
repz
ret
iret
repz
mov
fistp
repz
push
push
fs
iret
repz
repz
jnp
dec
pop
push
jmp
iret
repz
lds
sub
add
iret
jns
iret
repz
imul
cmp
repz
mov
and
iret
repz
and
ds
repz
out
les
push
cwde
cmp
repz
inc
fld1
mov
cmp
repz
jl
test
or
xor
xor
shl
std
(bad)
shl
and
dec
shl
popa
pop
xor
shl
loop
cmp
shl
adc
dec
shl
pop
inc
xor
shl
mov
mov
shl
test
shr
xor
shl
sub
dec
shr
dec
shl
movs
fidiv
push
push
shl
sbb
outs
iret
enter
dec
shl
int
in
adc
dec
shl
stos
and
mov
dec
jmp
shl
shl
pop
jbe
shl
dec
shl
cli
sti
shl
ins
call
jmp
mov
xor
shl
pushf
push
sbb
xor
rcl
fistp
dec
shl
mov
xor
cmp
fsub
dec
sar
dec
shl
icebp
rol
es
rol
mov
das
popf
je
mov
rcl
(bad)
outs
scas
sbb
(bad)
cs
rol
jbe
scas
ror
mov
pop
sub
or
inc
sub
test
inc
add
jbe
rol
lods
outs
cs
shrd
push
pop
lea
es
(bad)
cmps
or
into
pop
mov
dec
or
jle
push
bsr
test
xchg
das
sbb
xchg
pop
dec
mov
aam
and
scas
inc
xor
dec
daa
mov
rol
lods
scas
outs
sahf
dec
or
or
out
or
cs
mov
dec
pop
(bad)
es
inc
shrd
fimul
mov
dec
or
shr
jg
das
or
push
mov
xchg
push
push
mov
push
or
pop
ror
mov
daa
mov
daa
lods
mov
mov
push
mov
out
push
fidiv
inc
daa
push
dec
rol
sub
dec
lea
xchg
cmps
sub
outs
popf
mov
push
push
jle
jne
dec
sub
pop
outs
rcl
or
das
or
dec
sub
mov
cmc
ror
jbe
hlt
aam
and
rcl
(bad)
out
not
push
(bad)
jbe
sbb
(bad)
imul
push
cs
dec
daa
scas
out
inc
aam
das
mov
sub
daa
or
ss
sbb
outs
pop
jne
dec
dec
push
cs
dec
inc
sbb
inc
mov
das
(bad)
cmc
aam
cmps
neg
push
(bad)
xor
scas
pop
aam
das
cmp
dec
sbb
addr16
pop
mov
inc
mov
aam
arpl
push
push
aam
das
sbb
sub
das
sub
(bad)
pop
sbb
xchg
data16
rcl
push
push
push
rcr
mov
inc
sub
das
or
cmps
jbe
cmc
aam
sahf
jbe
mov
pop
inc
(bad)
pop
(bad)
push
arpl
cmp
es
cmp
mov
je
inc
movzx
mov
ds
inc
or
pop
cmp
jbe
(bad)
hlt
mov
fidiv
push
rol
sbb
and
prefetch
lods
mov
dec
out
cs
inc
add
sahf
rol
cmp
sub
das
sub
dec
jbe
hlt
rol
fdivp
xor
out
rol
or
bsr
pop
das
lea
dec
mov
scas
sub
pop
mov
scas
outs
xor
inc
or
das
sub
inc
sub
and
(bad)
es
outs
outs
hlt
rcl
fimul
mov
jg
inc
and
inc
mov
dec
sub
jle
or
fiadd
jbe
not
dec
inc
popf
outs
mov
inc
inc
popf
mov
mov
ror
ficom
(bad)
sub
pop
out
xor
xchg
aam
dec
sub
inc
lods
xor
outs
push
das
lods
je
jle
push
pop
or
ds
aam
dec
cmps
fidivr
dec
inc
mov
das
sub
sub
push
push
or
out
div
push
(bad)
aam
dec
sub
dec
cmp
sub
scas
out
mov
(bad)
mov
dec
scas
inc
aam
dec
lods
inc
(bad)
cs
dec
popf
xor
(bad)
ds
sub
push
cs
mov
cmc
rcr
jle
cs
push
dec
sbb
das
mov
inc
lods
je
push
(bad)
pop
scas
mov
push
jle
aam
inc
push
es
aam
das
cmp
daa
popf
cmc
pop
mov
dec
lea
push
mov
scas
fidiv
not
pop
inc
lods
inc
dec
mov
mov
dec
popf
jne
xchg
push
push
cmp
out
mov
cs
aam
dec
sbb
arpl
addr16
(bad)
lea
pop
pop
pop
inc
nop
aad
inc
push
inc
call
(bad)
hlt
es
ds
cmp
mov
(bad)
hlt
ror
ds
xor
sbb
(bad)
outs
scas
rol
sub
nop
jbe
scas
add
jbe
sub
es
pop
inc
rol
lea
inc
dec
sub
pop
or
jbe
sbb
push
es
dec
add
(bad)
cmps
rcl
lods
out
pop
dec
or
prefetch
or
xchg
lea
push
xchg
into
hlt
rol
mov
pop
dec
mov
inc
mov
dec
and
cvtps2pi
shr
mov
push
push
dec
div
out
rcl
sbb
sub
inc
cmp
fimul
mov
xchg
lea
cmc
rcl
ds
mov
xchg
push
push
dec
sub
daa
popf
xor
fiadd
ror
outs
mov
dec
sub
push
mov
out
push
ficom
cmp
and
push
sub
dec
xchg
cmps
jbe
rcl
mov
outs
ror
sbb
inc
mov
das
sub
cmps
ficomp
jle
mov
push
and
das
mov
dec
lods
xor
push
ss
cmp
xchg
push
sub
jbe
cmc
aam
dec
(bad)
(bad)
not
dec
inc
cmp
inc
lods
je
out
inc
inc
popf
hlt
rcl
mov
ror
inc
(bad)
jne
push
inc
cs
aam
das
sub
daa
popf
mov
xchg
je
mov
jle
cmp
inc
out
rcr
cmps
ds
dec
das
mov
arpl
inc
sbb
push
es
xchg
out
(bad)
push
dec
pop
mov
push
addr16
inc
push
inc
cmp
inc
popf
cmc
shr
mov
dec
test
rcl
mov
pop
(bad)
push
inc
sbb
das
sub
das
popf
cmc
aam
mov
aam
push
jle
cmc
rcl
cmps
jbe
pop
dec
lea
popf
jne
pop
imul
inc
repz
add
add
sbb
repz
and
ss
dec
inc
cmp
repz
push
ins
gs
cmp
repz
cdq
or
mov
cmp
repz
ret
cld
cmc
out
repz
repz
xor
and
repz
pop
push
or
iret
repz
push
cmp
repz
stos
mov
cmp
pop
cmp
repz
clc
(bad)
into
aad
cmp
repz
imul
sbb
scas
outs
test
push
dec
push
cmp
movs
not
pop
call
imul
fisubr
xchg
pop
sbb
fimul
mov
cs
xchg
movs
mov
test
mov
test
mov
xchg
imul
pop
imul
out
push
jmp
mov
pop
out
movs
inc
sbb
push
xchg
cmps
xchg
test
jmp
movs
xchg
dec
push
push
pop
test
ds
xchg
cmps
fidivr
xchg
sbb
test
mov
jp
movs
movs
push
cs
movs
xchg
mov
inc
jp
out
mul
push
(bad)
jbe
jp
test
jmp
movs
xchg
push
cs
out
movs
xchg
pop
cmp
mov
dec
scas
inc
inc
xchg
push
(bad)
cs
test
jmp
push
movs
mov
push
mov
mov
inc
(bad)
jp
test
jmp
push
jmp
xchg
dec
(bad)
pop
scas
test
sahf
sbb
jle
mov
jmp
jmp
movs
mov
inc
test
push
lods
xchg
mov
push
scas
ficom
push
test
jmp
dec
mov
cmp
test
pop
mov
mov
push
lods
cmps
pop
jp
out
mov
cs
jle
pop
imul
lods
xchg
jbe
jbe
lods
mov
test
mov
pop
inc
int3
imul
dec
push
shl
enter
jmp
cld
(bad)
xor
xor
jmp
lock
inc
inc
inc
inc
inc
das
pop
or
add
ss
cmp
adc
iret
pop
add
and
inc
sub
xlat
add
or
or
das
push
push
xor
out
sub
pop
push
add
sbb
pop
jg
jg
pop
adc
jg
aaa
arpl
bound
xor
std
mul
gs
cmp
xor
data16
xor
gs
in
sub
bound
arpl
arpl
fidivr
xor
xor
arpl
cmp
push
mov
xor
enter
div
xor
popa
jb
push
jae
add
jp
pop
bound
or
(bad)
mov
xor
pop
push
xor
aas
inc
push
ins
loopne
movs
nop
imul
mov
std
mov
inc
dec
push
pop
add
ins
jbe
and
inc
inc
(bad)
push
dec
push
pop
imul
das
int3
cmp
pop
imul
dec
dec
dec
push
(bad)
(bad)
in
call
imul
cmp
jae
js
es
cmp
dec
push
pop
pusha
outs
lods
std
scas
div
jge
sbb
pushf
inc
push
pop
pusha
fs
sub
sub
sub
popa
jo
and
cmp
push
gs
jae
jle
add
inc
inc
dec
(bad)
pop
pop
push
and
xor
jge
add
inc
push
pop
push
add
cmp
adc
cs
das
das
jae
adc
outs
outs
ins
gs
jns
mov
mov
push
add
push
ins
arpl
rcl
inc
push
add
popa
imul
das
in
aaa
add
sub
jbe
daa
das
push
dec
sub
call
cmp
cdq
js
add
ins
jae
and
das
cmp
push
std
dec
dec
pop
pop
ins
jl
bound
bound
sub
fbld
xor
popa
mov
xor
dec
pop
pop
sbb
scas
adc
outs
je
xor
inc
inc
dec
push
pusha
push
xchg
mov
imul
jge
cmp
inc
inc
push
push
pop
pushw
lock
inc
push
pop
arpl
xor
dec
dec
pop
fs
mov
dec
push
pusha
add
jb
xor
dec
push
lds
xchg
push
pop
ins
outs
jo
and
cmp
outs
js
ins
mov
arpl
out
adc
add
add
outs
jne
jge
xor
aaa
retf
ins
je
mov
cmp
xchg
lock
js
xor
sbb
imul
sub
xor
dec
push
push
gs
ds
push
shl
es
icebp
sub
arpl
inc
dec
dec
add
mov
push
cmp
push
sub
cmp
sub
push
cmp
pop
jp
cmp
xchg
jg
dec
add
pop
ins
jbe
push
sub
cli
mov
shl
inc
cmp
imul
loop
push
rol
ins
jne
sub
cmp
push
push
es
xor
ds
dec
push
push
bound
add
xchg
imul
inc
sbb
sub
push
bound
jne
sub
mov
xor
pop
push
sub
ja
dec
call
jne
and
sub
inc
dec
push
push
arpl
sub
jne
pop
adc
mov
aas
push
pusha
xchg
stos
push
sbb
ss
in
pop
jno
cmp
pop
bound
js
aam
ror
retf
and
xor
daa
ficomp
pusha
jae
xor
pop
pop
sub
rcr
add
xor
xor
mov
hlt
clc
and
mov
push
pop
add
jnp
and
push
sbb
cmp
xchg
add
ja
sub
xor
mov
dec
add
ss
outs
add
xor
sahf
push
or
ja
jns
cs
dec
(bad)
fsubr
ret
jne
cmp
dec
inc
xchg
dec
jle
adc
pop
jno
clc
mov
inc
shl
jb
fidivr
shl
sub
and
push
or
push
sbb
jb
sub
push
stos
(bad)
je
xor
inc
push
mov
mov
xor
or
pop
inc
addr16
pop
dec
mov
mov
pop
inc
cli
pusha
ret
xor
sub
inc
dec
sub
imul
ret
out
push
ins
imul
pop
inc
data16
jns
push
aas
xchg
dec
push
pop
pop
fsubr
xor
mov
push
pop
imul
inc
mov
aaa
push
add
movs
lock
pop
outs
jae
and
push
ins
mov
jae
xor
inc
das
pop
jg
jo
fidiv
outs
jno
inc
sub
sub
fidiv
cmp
jae
xor
xor
ret
cmp
ja
and
mov
and
ror
lds
cmp
sub
sub
jle
push
movs
sub
je
add
mov
add
pop
cmp
inc
push
cmp
ds
dec
pop
push
fsub
sub
hlt
or
push
dec
jo
jno
and
stos
test
dec
push
imul
or
pop
in
mov
loop
aaa
lahf
fs
push
in
jp
push
jmp
mov
fbld
sub
xor
aad
aam
imul
inc
push
jae
in
sub
pushf
in
jge
sub
cmp
push
pop
push
icebp
and
sahf
je
and
xor
mov
es
pop
iret
push
stos
adc
dec
push
fs
fld
sub
adc
popa
outs
jo
das
lds
out
dec
psubb
loope
rcr
out
and
sub
inc
push
pop
pusha
stos
pop
mov
push
mov
jmp
xor
mov
add
ja
mov
add
retf
mov
out
ja
ss
inc
ja
pop
cmc
sbb
mov
je
jp
xor
cmp
inc
jnp
test
es
jge
xor
jl
es
gs
jp
push
pop
pop
ja
ret
or
shr
push
xor
stos
mov
mov
mov
pop
pop
fcomp
adc
retf
pop
mov
add
das
cmp
ins
jo
and
mov
bound
jmp
xchg
and
pop
push
push
mov
xor
xor
jmp
add
add
outs
sbb
inc
dec
push
or
inc
or
cmp
add
dec
dec
(bad)
cmp
push
je
jle
add
rol
test
js
inc
pop
xchg
pop
loop
push
add
pop
pop
imul
dec
pop
fs
mov
push
cwde
stos
idiv
cmp
out
adc
mov
lods
out
pxor
jne
push
js
popa
jb
push
push
pop
add
jl
jge
daa
repnz
and
das
das
xor
push
enter
pop
and
pop
pop
retf
cs
scas
push
(bad)
push
pop
arpl
pop
cmp
sub
pop
outs
stos
and
mov
xchg
imul
dec
dec
dec
adc
pop
sub
xor
inc
jl
sub
scas
cmp
mov
pop
adc
jb
pop
pop
push
out
adc
call
jp
mov
mov
and
add
inc
inc
pop
jae
inc
pusha
or
pop
outs
jb
daa
enter
imul
mov
(bad)
sub
pop
aas
inc
and
ins
jne
jne
or
push
pop
aas
inc
xchg
jl
and
add
xor
dec
arpl
sub
sar
jne
dec
pop
mov
test
dec
and
cmp
mov
dec
mov
push
pop
pop
ins
jne
jecxz
loopne
xor
push
jge
and
hlt
cmp
push
and
(bad)
or
dec
int3
jb
and
cmp
sar
and
cmp
dec
pop
pusha
xchg
ins
and
jne
dec
pop
push
cld
ret
dec
push
push
outs
loop
xchg
pop
push
xchg
test
outs
jl
sbb
out
lea
leave
push
pop
pusha
imul
retf
xchg
dec
loopne
pop
xor
push
in
adc
aaa
nop
pusha
pop
push
mov
clc
cmps
sub
jae
inc
jo
jae
cs
push
lahf
enter
mov
mov
das
ds
pop
imul
mov
or
loope
scas
popa
ins
je
sub
xchg
mov
xor
ss
and
and
test
and
dec
dec
dec
pop
pusha
outs
push
cmp
rol
sub
outs
fisub
cmp
xchg
daa
cmp
add
inc
add
fidiv
dec
dec
or
inc
icebp
and
xor
cmp
jae
ret
(bad)
add
cmp
mov
jmp
xor
lds
inc
out
jbe
imul
outs
add
cld
jg
dec
dec
mov
mov
imul
or
fsub
and
mov
enter
xor
sub
xor
es
add
or
mov
add
test
add
pop
and
jae
push
sub
jbe
mov
sbb
mov
mov
cmp
cs
lds
dec
bound
test
mul
sub
addr16
loopne
shl
rol
dec
and
pusha
clc
cs
or
int3
pop
fs
and
mov
adc
dec
sub
cmp
sub
adc
loopne
daa
aaa
or
cmp
lock
data16
mov
mov
mov
data16
pop
mov
dec
sub
dec
pop
dec
add
and
sbb
add
jne
push
and
push
dec
and
jo
push
ja
bound
jle
data16
js
int3
ret
push
mov
inc
lods
jb
ret
dec
dec
xchg
data16
jo
cmp
and
bound
sahf
adc
add
and
in
jl
pop
sbb
dec
push
addr16
mov
xor
mov
push
es
add
outs
sub
jbe
xor
jo
test
data16
add
test
dec
add
inc
stos
loop
rcl
lea
xor
dec
sbb
jae
and
sbb
bound
mov
push
adc
push
jne
and
xor
cmp
outs
mov
and
dec
push
push
pop
push
and
fdiv
mov
int3
dec
mov
and
push
cmp
add
mov
pusha
rcl
dec
mov
mov
sub
inc
inc
clc
or
mov
pop
sub
and
pushf
mov
jb
adc
mov
push
pop
enter
sbb
inc
dec
pop
xor
and
push
shl
dec
add
jb
xchg
sub
loope
push
lock
xor
inc
sbb
xchg
loope
fidiv
sub
cmp
test
ins
mov
lock
mov
xlat
mov
jge
ins
dec
pop
scas
outs
outs
mov
mov
push
(bad)
pusha
test
or
gs
sub
xchg
mov
jne
jp
mov
cmp
pop
pop
popa
bound
outs
jb
sub
nop
dec
dec
dec
shr
sbb
xor
and
pop
movs
xor
ds
sub
push
xlat
inc
push
dec
sub
and
call
jmp
hlt
js
je
lock
out
hlt
ja
test
mov
xchg
arpl
call
dec
adc
jge
adc
push
out
xchg
sti
sti
out
ss
pop
pop
inc
fld
(bad)
pop
jo
mov
pop
mov
push
outs
imul
outs
and
js
pop
ja
adc
popf
add
push
je
je
inc
lock
or
dec
dec
outs
lock
es
gs
dec
add
movs
imul
aad
pop
cs
(bad)
outs
add
cmps
ret
jnp
or
arpl
sti
inc
push
push
xchg
mov
add
fs
in
clc
inc
stos
add
pop
stos
sub
jo
mov
data16
(bad)
push
jmp
jb
and
aaa
cmp
dec
fcmovnbe
pop
lods
je
push
jge
xor
cmp
fwait
icebp
cmc
lds
pop
inc
dec
cmps
bnd
mov
push
dec
jo
ins
dec
cs
xchg
ss
das
jb
jbe
hlt
xchg
popf
jmp
push
cwde
test
loop
push
and
add
dec
outs
mov
or
cmp
adc
cmp
push
rol
pop
push
inc
jmp
das
or
xchg
xchg
test
daa
ss
pop
sbb
hlt
(bad)
es
cmp
inc
dec
xchg
pop
sub
pushf
and
sub
push
or
pop
js
daa
das
xchg
je
sbb
sub
pop
inc
push
stos
cmp
iret
push
mov
outs
jnp
sub
sub
pop
pop
bound
hlt
sar
dec
es
fsubr
add
mov
ins
ja
mov
xchg
inc
stos
and
mov
out
push
shl
(bad)
ds
dec
ja
add
(bad)
(bad)
pop
pop
inc
pop
jle
dec
mov
pop
sbb
je
shl
test
mov
xor
loopne
movs
push
or
loop
pop
hlt
daa
xor
fcomp
add
xor
and
xchg
cs
push
shl
xor
ins
jbe
push
das
dec
cmp
cmp
ins
jb
jp
fisttp
mov
pusha
rol
fiadd
fsub
and
fdiv
sub
pop
xchg
push
dec
jb
xor
push
and
stos
xchg
sub
shr
add
push
cmp
jbe
lahf
call
adc
(bad)
sub
sub
push
js
cli
les
inc
lock
outs
jns
sub
cmp
fsub
sbb
cmp
mov
push
add
sub
cmp
ja
pop
imul
lea
and
jno
ja
pop
fmul
and
jle
xchg
idiv
sbb
and
ds
push
popa
xchg
sub
inc
push
push
pop
pushf
jnp
call
arpl
jl
xor
xor
mov
pushf
sub
or
adc
push
cmp
loop
std
mov
inc
dec
push
pusha
test
aaa
mov
dec
push
lds
adc
fcom
push
xor
cmp
push
push
mov
adc
xor
jl
inc
cld
les
cvtdq2ps
dec
(bad)
das
xor
push
push
push
or
xchg
xor
add
enter
out
repnz
push
pop
push
sub
imul
cmp
sbb
pushf
cmp
lods
adc
inc
aas
adc
sub
cmp
pop
push
add
push
pop
inc
xor
sbb
or
xor
sub
push
pop
inc
or
iret
ja
adc
push
sub
mov
pop
add
adc
push
or
xchg
test
cs
daa
lahf
stos
sbb
mov
repz
dec
push
adc
mov
pop
push
add
nop
and
xor
and
call
or
fisttp
adc
pop
mov
inc
dec
(bad)
or
inc
or
push
cmp
and
push
push
(bad)
mov
mov
sub
adc
cmps
mov
arpl
sbb
jnp
dec
mov
pop
imul
mov
xor
test
cmp
push
(bad)
sub
daa
sub
(bad)
fistp
and
sub
push
cmp
sbb
pop
push
xor
inc
push
dec
inc
inc
sar
jno
aaa
push
pop
pushfw
and
xor
mov
dec
push
pop
pop
push
xor
dec
push
pop
arpl
inc
jp
cld
not
aaa
pop
fs
jp
in
add
(bad)
cmp
dec
dec
pop
arpl
jl
xor
inc
dec
mov
xor
and
add
push
pop
popa
cmps
push
retf
mov
jp
sub
repnz
mov
and
xor
dec
push
pop
addr16
js
mov
add
outs
sbb
or
das
xor
inc
dec
push
outs
imul
mov
and
sahf
cmp
push
pop
pop
data16
pop
movs
fcmovnb
pop
setbe
imul
dec
push
daa
das
cmp
adc
loopne
push
popa
not
push
push
outs
(bad)
sbb
jb
sub
xor
bound
mov
and
sub
outs
xor
pop
mov
push
scas
pop
xchg
ins
ins
in
rcl
sub
jbe
ins
cld
sub
ss
add
cmp
imul
test
sbb
pop
push
pop
add
xor
aas
inc
dec
push
pop
push
jnp
pop
adc
jmp
push
pop
adc
dec
dec
or
fiadd
pop
pushw
fist
xor
cmp
bound
cmp
inc
dec
mov
arpl
dec
shr
cwde
cmp
aas
dec
push
pop
imul
add
mov
fbstp
popa
xor
mov
and
cmp
fwait
add
inc
dec
cmp
push
ja
daa
sub
aas
xor
push
pop
pop
imul
cdq
dec
push
push
xor
rcl
dec
add
dec
dec
pop
bound
jp
push
sbb
xor
cmp
fild
das
js
dec
(bad)
pusha
div
sub
cmp
call
mov
sar
inc
loopne
adc
das
adc
push
test
je
jp
lods
lods
and
sbb
ja
sahf
jo
jge
jp
pop
bound
dec
clc
ja
xlat
mov
imul
inc
dec
pop
pop
pop
imul
adc
and
inc
inc
inc
jo
js
loopne
outs
sbb
ss
push
mov
ror
xor
inc
mov
or
cmp
dec
adc
jmp
and
mov
fwait
pop
push
jnp
mov
cmp
aam
ins
dec
cs
inc
dec
add
das
fsubr
jne
loop
cmp
push
push
push
push
mov
or
xchg
push
and
cs
sbb
les
cli
mov
sub
adc
outs
faddp
add
add
fdiv
jp
stos
xor
push
fsubr
cs
sub
jg
push
sbb
test
neg
push
lock
pop
mov
push
imul
daa
loopne
cmp
and
addr16
call
clc
xor
inc
loop
outs
mov
push
xor
bound
push
add
aam
mov
mov
add
xchg
ins
cs
cmp
ins
push
fimul
arpl
js
inc
dec
push
push
pop
ror
out
push
sub
xor
xor
jo
es
mov
push
pop
inc
push
rol
jns
imul
jbe
div
mov
aas
inc
push
push
pop
(bad)
outs
jnp
ja
jo
mov
aas
retf
loopne
(bad)
pop
js
xor
inc
inc
outs
sub
sahf
ds
dec
pop
pop
ins
pop
icebp
dec
jne
cmp
sub
inc
jae
and
add
es
adc
add
mov
mov
xchg
lock
int
fisubr
je
cmp
mov
xor
and
add
dec
xor
add
jns
or
push
mov
xor
sub
add
loopne
and
mov
iret
xchg
inc
adc
jno
pop
pusha
add
loop
push
test
gs
xor
jp
sub
dec
dec
add
jne
cmp
push
push
pusha
bound
sub
sbb
cmp
clc
mov
cmovbe
arpl
inc
pop
push
add
sub
aaa
aaa
sub
outs
push
or
mov
aas
add
dec
push
pop
xor
cwde
push
gs
inc
inc
pusha
cli
push
mov
sub
popa
fs
das
(bad)
pusha
pusha
sbb
ins
fs
push
leave
and
lock
fsubr
and
push
outs
sub
xchg
jns
js
jb
push
or
cmp
push
push
adc
jp
adc
push
aam
cmp
inc
dec
inc
cmp
(bad)
sub
lods
inc
sub
xor
or
unpcklps
mov
lahf
aad
push
inc
mov
mov
repz
das
mov
add
push
movs
add
add
gs
je
add
sub
int
fldcw
pop
into
pop
pop
lock
test
stc
cmp
jno
popaw
ins
jae
pop
sti
pop
loop
jb
sub
cs
push
jno
out
jl
aas
loop
inc
adc
and
mov
push
inc
inc
dec
rcr
mov
ja
xor
aad
outs
outs
jp
call
gs
je
loope
je
outs
dec
push
push
daa
pop
lods
ret
pop
pop
pusha
outs
sub
cmps
ds
test
icebp
pop
push
add
inc
dec
fst
push
call
inc
or
jnp
sub
aas
inc
dec
popf
les
je
and
dec
aam
push
pop
pop
push
xor
inc
lock
adc
sub
xor
nop
clc
push
inc
mov
pop
sub
std
out
push
pop
mov
sub
xor
inc
and
dec
dec
ins
jb
jp
mov
inc
pop
int3
push
pop
push
jb
pop
pop
pop
pusha
xchg
mov
jne
and
xor
inc
mov
mov
pop
sub
dec
dec
pop
data16
xor
fimul
inc
jge
das
xor
loope
out
and
xor
inc
dec
push
and
jno
call
cmc
push
mov
add
add
mov
push
push
xchg
jns
sub
add
dec
push
aam
rol
xor
jne
dec
push
scas
arpl
jl
inc
dec
push
push
mov
and
mul
jo
aaa
mov
xchg
jge
aaa
dec
dec
push
add
xor
lock
js
xor
call
mov
cmps
loop
mov
rcl
inc
std
and
push
pop
pop
ins
jecxz
and
jp
ss
loop
call
sub
cmp
adc
cmc
mov
sbb
jl
sub
pusha
pop
or
outs
jnp
and
sub
aaa
sub
sub
jns
pop
sub
scas
test
cmp
loopne
jo
jno
js
sub
pop
arpl
push
mov
push
push
pop
cmp
sub
sub
sbb
pop
mov
mov
cmp
inc
ins
outs
adc
cmp
push
cld
sub
sbb
dec
popa
push
pusha
push
add
push
dec
add
in
push
adc
xor
pushf
push
ret
xor
dec
xlat
pusha
addr16
cs
push
push
test
out
data16
ja
xor
add
mov
sub
arpl
jb
xor
and
adc
fidivr
mov
xor
les
push
sahf
add
dec
mov
ins
inc
mov
shr
clc
outs
jo
and
push
xchg
mov
or
jne
xlat
cli
jg
push
jne
(bad)
clc
mov
xchg
stos
push
and
fcomp
(bad)
pop
mov
(bad)
(bad)
inc
xor
add
aas
and
adc
outs
cmps
push
mov
call
push
loope
pop
pop
cwde
ja
xor
xor
and
je
add
cmp
es
inc
in
bound
dec
sbb
push
cld
je
push
push
dec
sub
inc
pop
pop
pop
ret
out
js
inc
jns
xor
pop
mov
ja
inc
push
in
test
adc
sahf
push
mov
popa
sahf
and
bound
clc
cmovp
dec
push
push
pop
les
outs
ret
call
and
jns
xor
ret
lea
adc
mov
jle
sti
or
popa
add
jne
and
loope
es
push
pusha
xor
sbb
pop
cld
sub
mov
dec
add
mov
xor
inc
dec
push
outs
jbe
mov
ret
pop
jo
ins
jae
push
dec
shl
dec
out
popa
jle
aaa
cmp
test
cmp
push
test
push
pop
sub
cmp
(bad)
push
push
xlat
data16
add
push
fsubr
cmp
dec
data16
mov
and
inc
inc
xor
jp
or
cmps
push
fcom
inc
inc
dec
inc
ret
fcomp
adc
fnstenv
cmps
aaa
aaa
inc
dec
dec
cmp
cmps
stos
scas
add
movs
inc
call
and
xor
xor
lock
sar
fsub
rol
loop
fsub
add
mov
pop
xor
retf
cld
les
outs
jb
int3
add
add
je
jl
add
test
data16
pop
xchg
pop
cmp
jb
sbb
inc
jb
pop
in
xor
jbe
daa
sbb
pop
push
cmp
push
sub
mov
cli
sub
inc
push
jno
push
nop
ins
adc
jecxz
imul
dec
push
add
das
mov
jl
sub
inc
dec
push
scas
stos
sub
inc
(bad)
pop
and
inc
inc
inc
push
jecxz
and
pop
pop
in
jmp
xchg
dec
xor
test
fisub
dec
or
pop
pop
arpl
sub
and
add
mov
rcl
aaa
mov
jo
and
call
lock
xor
pop
mov
ins
xchg
imul
jecxz
test
retf
add
aas
jg
push
add
mov
fisub
add
lods
(bad)
jne
and
mov
(bad)
mov
push
pusha
repnz
pushf
cmp
push
dec
adc
in
sub
or
xor
and
and
mov
adc
enter
jecxz
inc
dec
mov
cmps
clc
jg
and
sub
dec
pop
imul
push
sub
sub
mov
mov
and
or
jl
add
outs
jo
enter
sahf
cmp
jne
add
loop
inc
or
inc
mov
jb
pop
ss
mov
sub
int3
pusha
cs
fdivr
dec
outs
jnp
mov
jmp
jns
cmp
jg
push
or
or
(bad)
popa
inc
mov
xor
mov
pushf
jno
inc
test
and
inc
call
or
or
xor
aad
mov
inc
dec
nop
pusha
imul
ins
xor
pusha
mov
pop
lods
push
pop
pop
repnz
aaa
add
inc
inc
sahf
scas
retf
cmp
inc
inc
inc
xchg
es
enter
mov
jbe
jne
sub
sub
ins
jp
ret
add
cs
mov
scas
daa
cli
inc
adc
push
push
push
jo
and
sub
cmp
add
and
pop
push
push
adc
cmp
pop
arpl
xchg
sub
xor
sub
fs
jl
pop
mov
sub
mov
pop
add
push
imul
mov
xor
shr
outs
pop
adc
pushf
inc
mov
(bad)
fs
push
jo
add
pop
inc
loopne
sbb
sbb
sub
int3
pop
clc
mov
retf
push
mov
or
mov
sub
mov
je
pop
test
enter
fmul
cs
scas
data16
cmp
adc
div
mov
gs
sub
push
sbb
das
cmp
inc
fs
xor
or
sub
sub
cmp
inc
cwde
jle
test
fiadd
cmp
or
push
test
jnp
mov
shl
imul
ds
pop
inc
aad
mov
and
shr
dec
sub
cmp
mov
xchg
loope
les
mov
add
mov
push
xlat
pusha
sub
sub
test
mov
pop
mov
imul
adc
jp
xor
push
in
cs
ins
add
jl
movs
push
sbb
xor
add
add
inc
add
inc
dec
dec
pop
bound
and
arpl
xor
inc
ss
shr
jnp
bound
add
out
test
add
mov
mov
les
push
xor
(bad)
inc
inc
or
add
add
loopne
push
fisub
mov
in
lds
stos
pop
add
inc
(bad)
add
(bad)
ins
das
xor
ds
and
test
in
add
mov
jp
pop
mov
lods
xor
jo
call
mov
es
sub
call
lods
es
push
push
sbb
jo
out
adc
push
sub
xor
mov
add
adc
out
inc
push
cli
push
or
lea
and
push
mov
mov
pop
nop
popa
data16
and
les
xor
mov
inc
dec
push
bound
pop
ss
enter
ins
or
mov
test
or
jle
mov
inc
test
push
pusha
mov
mov
and
call
loope
ror
add
adc
add
mov
addr16
ss
add
push
pop
jg
adc
push
inc
pusha
inc
push
pop
push
(bad)
sub
inc
adc
adc
popa
gs
xor
cmp
and
es
adc
rol
and
cmp
jnp
add
pusha
popa
outs
js
cmp
loopne
add
mov
icebp
push
and
xor
cmp
sub
pusha
imul
sbb
pop
(bad)
and
ds
push
out
cmp
mov
push
out
push
jae
and
popa
sbb
add
add
sbb
push
les
and
push
add
xor
les
jmp
repnz
push
test
and
call
jle
push
push
pop
pop
cwde
mov
imul
fisub
mov
push
or
inc
push
mov
xchg
test
or
into
data16
cmp
lods
push
push
pop
daa
test
xor
inc
retf
sub
stos
test
adc
stos
and
adc
dec
jle
dec
mov
push
pop
add
je
xor
inc
push
push
and
and
jo
add
xor
out
cmp
push
jge
add
mov
pop
rol
adc
add
push
pop
pop
and
int3
jmp
sub
adc
sub
xor
push
sbb
arpl
jl
push
pop
pop
push
xchg
mov
dec
mov
retf
call
xchg
mov
in
jp
gs
add
aaa
xor
mov
mov
inc
arpl
inc
cs
sub
dec
push
add
cmp
fs
(bad)
xchg
aaa
popa
ret
into
shr
jae
xchg
ret
jno
dec
xor
add
xchg
dec
add
retf
pusha
scas
enter
adc
push
and
ins
jae
hlt
aas
or
pop
or
mov
mov
mov
sbb
lahf
not
gs
outs
into
aaa
push
sub
scas
xor
add
pop
xchg
inc
inc
inc
dec
dec
shr
outs
pop
sbb
push
sub
inc
or
stos
sub
inc
ins
jp
nop
aas
nop
pop
data16
jo
or
add
dec
push
xor
sti
enter
add
mov
pusha
add
adc
dec
sahf
inc
dec
dec
xchg
dec
sub
jmp
cmp
lahf
dec
dec
push
fbld
jge
in
or
jo
sub
cmp
pop
out
mov
inc
adc
inc
stos
inc
add
movs
push
push
push
dec
in
adc
push
push
dec
and
inc
jecxz
ins
jo
mov
dec
xchg
aaa
ret
or
and
cli
jb
push
xchg
sbb
shl
or
outs
jo
and
jl
push
fmul
xchg
dec
push
push
xchg
ret
push
inc
jbe
(bad)
ret
push
gs
pop
sbb
ret
sbb
xor
ins
sbb
xchg
inc
and
adc
outs
bound
dec
push
adc
sbb
and
dec
cwde
call
pop
inc
xchg
clc
cmp
mov
jns
and
sbb
js
das
cmp
adc
and
fiadd
dec
ror
sub
push
popa
push
and
rol
shr
xor
or
fs
pusha
dec
outs
ja
popa
adc
dec
dec
jo
jge
adc
adc
cli
daa
mov
adc
cmp
movs
xor
xor
fadd
add
hlt
shl
cmp
stos
cwde
sbb
(bad)
jno
cmp
les
je
cli
push
jle
dec
dec
xchg
push
push
mov
xchg
sbb
and
add
jl
mov
add
push
sub
or
test
int3
bnd
sub
cmp
sub
sbb
loopne
dec
test
popa
push
loopne
or
and
adc
mov
ins
nop
jnp
add
mov
adc
inc
es
shr
inc
pop
pop
fs
xor
inc
or
sub
xor
xor
push
or
in
pop
in
xor
mov
inc
inc
push
or
add
aad
lock
cli
icebp
push
arpl
push
pop
cli
jb
adc
sub
xor
pop
lods
loopne
adc
daa
dec
pop
pop
mov
cmp
sub
inc
test
add
adc
ja
test
sub
mov
jns
cmps
dec
jne
jp
iret
in
les
jl
pop
xchg
test
mov
fcomi
inc
or
push
or
mov
sbb
jge
lahf
data16
pop
cmp
sbb
push
mov
out
push
adc
mov
and
dec
popa
sub
ss
adc
lods
sub
sbb
adc
jl
jp
xchg
iret
dec
pop
and
jp
push
cmp
and
push
adc
test
and
adc
push
dec
ret
loope
or
fsub
adc
inc
mov
ss
sub
push
test
jl
pop
rcl
inc
mov
pop
pop
mov
daa
sub
sub
mov
adc
nop
add
xchg
imul
imul
es
stos
xor
pop
and
cmp
arpl
outs
lods
add
xor
int3
out
dec
and
mov
dec
test
xor
dec
xchg
ins
push
push
mov
push
dec
xor
pop
dec
push
hlt
jns
and
sub
inc
inc
inc
inc
dec
xchg
jp
bound
jge
sub
cmp
dec
in
pop
cmp
fwait
xchg
aas
inc
inc
add
test
sub
inc
mov
and
push
fmul
popa
loope
sar
and
hlt
inc
aaa
dec
lock
add
xor
mov
call
xor
pop
arpl
xchg
cmp
cmp
lods
adc
je
dec
ror
sbb
jl
jno
pop
xchg
jge
and
sbb
or
mov
adc
cmp
cwde
pop
lock
dec
push
add
xor
clc
test
mov
push
jp
das
inc
inc
xor
add
pop
call
inc
cmp
aam
add
jbe
movs
inc
dec
pop
pusha
popa
imul
test
nop
jo
or
aaa
rcl
cmp
dec
fisttp
and
push
adc
call
aam
scas
add
sbb
fdivr
cmp
xchg
pop
and
outs
add
imul
dec
movs
ret
push
inc
dec
aad
jo
sub
lock
and
ja
or
xchg
js
cmps
add
sub
adc
pop
pop
outs
pop
pop
inc
mov
scas
je
and
mov
dec
pop
and
dec
dec
arpl
inc
sub
les
jns
push
je
rcl
inc
(bad)
(bad)
or
sub
add
fcomi
popf
fadd
shl
inc
pop
fisubr
fst
rol
and
ss
rcl
mov
push
scas
dec
push
add
sub
pusha
dec
push
sub
loopne
push
push
outs
daa
push
xor
cs
push
cmp
mov
jo
mov
inc
mov
pop
push
nop
mov
xor
mov
cs
loopne
lea
out
mov
and
fistp
xor
scas
push
shl
jl
lahf
ja
push
mov
sahf
xor
cmp
pop
div
xchg
push
push
cwde
dec
pop
pusha
jnp
out
es
mov
mov
sahf
xchg
es
bound
outs
xchg
mov
nop
mov
(bad)
(bad)
shl
dec
mov
push
iret
xchg
(bad)
fild
push
fidivr
out
adc
push
out
ror
mov
fcmovnb
jnp
(bad)
sahf
movs
push
mov
into
push
mov
mov
mov
and
inc
mov
cmp
loopne
push
aas
push
test
lock
rcl
lock
daa
sbb
inc
xchg
add
and
(bad)
jle
or
test
pop
jg
fadd
in
fnstsw
cmp
mov
shl
loop
shl
in
sahf
xor
jle
hlt
ds
pop
test
mov
fmulp
iret
push
cmp
imul
push
aam
repnz
or
push
pop
cmps
repz
invlpg
jb
jmp
cmp
mov
xchg
inc
fcomip
pop
xchg
inc
push
push
dec
js
adc
outs
cmp
xor
inc
mov
xchg
mov
nop
str
inc
rcr
xor
std
out
push
jmp
push
inc
push
push
nop
inc
dec
add
push
lahf
jbe
adc
push
and
imul
inc
dec
push
dec
cs
hlt
(bad)
dec
(bad)
mov
push
xor
out
jge
(bad)
dec
outs
push
mov
pop
push
mov
add
sub
and
sub
push
adc
jge
inc
add
push
and
lahf
mov
std
adc
push
pop
push
test
or
add
jae
sub
or
add
or
sub
mov
aas
adc
imul
loop
xor
dec
dec
scas
or
add
push
sbb
xchg
adc
and
sub
fadd
dec
push
fsubr
sbb
xchg
mov
pop
pop
cmp
xor
inc
std
mov
inc
or
in
and
aam
or
push
pop
or
add
adc
inc
dec
les
aaa
popa
xchg
adc
aam
pop
loop
cmp
loopne
les
int3
jp
sub
fidivr
sub
dec
add
pop
adc
push
sub
nop
pop
es
inc
push
outs
popf
cmp
inc
and
ficomp
(bad)
dec
pop
bound
sub
and
sbb
pusha
imul
or
xchg
loopne
mov
xor
loop
cmp
fbld
sbb
mov
cs
jns
aaa
inc
push
pop
or
test
jg
ins
xchg
je
push
fisub
jne
daa
and
add
sub
push
fwait
and
mov
inc
sbb
clc
pop
pop
sar
lahf
dec
push
push
(bad)
and
mov
adc
sbb
jnp
and
push
cwde
fimul
xor
fisttp
push
sub
add
xor
outs
in
cmp
dec
push
push
pop
das
pop
add
mov
cmp
add
dec
mov
sub
nop
sbb
sub
xor
bound
xor
jnp
cmp
push
add
mov
lods
inc
mul
and
pop
lahf
inc
dec
or
or
arpl
jecxz
(bad)
dec
push
pop
nop
jl
add
dec
sub
(bad)
xor
push
adc
add
fiadd
push
cwde
stos
mov
cwde
jb
push
jbe
jnp
push
sbb
dec
push
push
or
es
fs
add
paddusb
xchg
push
pop
and
sub
push
pop
jo
and
cmp
ficom
cmp
xor
sub
pop
rcr
dec
push
pop
dec
push
shr
xor
mov
adc
js
cwde
push
mov
push
rcr
xchg
pop
xchg
xchg
je
inc
int
pop
in
shl
or
inc
pusha
ror
pop
xchg
aaa
or
mov
xor
add
jbe
(bad)
daa
cs
inc
mov
inc
adc
and
adc
rcl
push
cmp
mov
std
lea
ins
jae
and
sbb
scas
pop
mov
cmp
push
push
add
into
and
jp
jo
or
push
jo
sub
test
movs
push
push
xor
ret
and
and
mov
adc
jns
jo
add
and
cmp
gs
jmp
jb
mov
lahf
mul
and
enter
pusha
stos
jl
cmp
sub
xor
arpl
sub
push
xlat
jo
movs
nop
add
jb
xor
or
push
pop
pop
enter
dec
add
sub
xor
dec
push
retf
(bad)
pop
lea
jo
fs
xchg
sbb
adc
jmp
mov
inc
data16
aas
int3
and
and
xor
inc
fs
push
popa
add
sub
and
cmp
adc
adc
adc
cmp
mov
fidivr
scas
dec
or
push
sub
mov
je
add
bound
add
or
mov
xchg
js
test
nop
stos
dec
push
mov
js
ret
mov
sbb
leave
mov
test
sub
fisubr
call
ss
shr
inc
xchg
rcl
rcr
loop
movs
push
in
add
jbe
sub
rol
xchg
inc
inc
dec
sub
xor
and
cmp
push
inc
dec
dec
mov
push
or
cwde
pop
mov
cmp
push
mov
xor
pop
mov
fcomp
outs
or
inc
adc
cmp
or
movs
ror
cmp
ss
pusha
pop
pop
ret
ss
jbe
lods
mov
or
jle
cmps
inc
push
cwde
push
dec
and
sbb
fs
mov
cmps
stos
cmp
dec
ds
pop
call
xchg
aam
data16
or
inc
inc
rcl
mov
push
push
xchg
sbb
mov
mov
rol
pushf
cmp
inc
and
pop
lods
xchg
popa
and
add
outs
dec
movs
test
pushf
cs
dec
sbb
or
sub
inc
dec
dec
lahf
jb
dec
cmp
(bad)
sbb
mov
inc
and
and
inc
push
mov
fmulp
cmps
loopne
pop
sub
inc
pop
fiadd
je
call
push
sbb
mul
or
nop
shl
mov
shl
adc
xchg
rcl
inc
or
sbb
cld
in
imul
push
xor
pop
push
and
das
xor
adc
sbb
lahf
dec
call
and
xor
sahf
xchg
pop
inc
loopne
sti
bound
inc
imul
xor
inc
cmp
es
inc
mov
and
je
cmp
cmp
sbb
aam
jecxz
inc
repnz
push
sub
sbb
sbb
add
xor
push
aaa
imul
sub
adc
cli
movs
mov
and
and
jno
sub
ins
jb
ss
js
xor
sub
and
ret
inc
jge
fucom
leave
and
cmps
sub
imul
cli
jne
jp
cmp
mov
adc
call
jp
sub
cmps
jp
push
js
dec
dec
dec
pop
dec
js
mov
and
sbb
outs
xchg
fcom
imul
or
push
je
cmp
cmp
push
sbb
ficomp
sbb
add
jl
sub
aaa
loopne
ror
or
imul
jmp
das
xor
scas
aaa
aam
fistp
jnp
xor
test
or
bound
and
or
inc
jmp
inc
lock
sbb
test
add
les
sub
inc
dec
push
lahf
or
loope
push
popa
pop
jl
mov
mov
cs
cwde
stos
inc
inc
popa
add
cdq
and
xchg
pop
xor
pop
adc
xchg
fidiv
mov
loop
and
imul
adc
stos
js
push
xchg
xor
in
pusha
hlt
pop
das
aaa
sbb
hlt
pop
arpl
inc
test
nop
ss
nop
pusha
push
jl
inc
xchg
fidivr
inc
inc
rcl
sub
xchg
push
sbb
inc
inc
mov
outs
adc
jns
and
jae
and
popa
bound
pop
pop
sbb
xchg
adc
fsubr
es
xchg
or
jp
sub
cmp
add
dec
das
xlat
push
call
mov
add
imul
das
test
pop
aam
jl
and
je
cmp
pop
rcl
je
cmp
push
inc
inc
cwde
rol
push
test
outs
add
mov
inc
mov
xchg
xor
cmps
xchg
jno
and
iret
xchg
adc
push
loopne
loopne
sub
cmp
sbb
sub
cmp
dec
inc
outs
pusha
xor
xor
pop
fmul
dec
je
es
dec
(bad)
inc
pop
xchg
adc
and
xor
xlat
inc
jne
lock
pop
call
sub
adc
sub
xchg
push
hlt
inc
xchg
ret
adc
cmps
mov
fimul
rcr
mov
xchg
sahf
out
scas
not
pop
cmps
sub
sub
cmp
sbb
adc
inc
shl
and
cmp
aam
jae
cmp
shr
jne
add
ds
mov
mov
jno
pop
loopne
adc
test
pusha
push
dec
fisubr
shl
or
sahf
sahf
inc
test
out
pop
add
and
lods
pop
or
and
cld
or
or
gs
add
push
loopne
xor
pop
pop
pop
sub
cmp
and
outs
outs
dec
lods
inc
push
push
in
mov
inc
shr
and
ret
or
add
dec
xor
outs
add
add
in
pop
stos
sub
fiadd
xor
jp
sub
ins
cmp
lock
sub
inc
add
sbb
add
jle
aaa
test
mov
in
mov
cmps
nop
scas
push
lds
aas
inc
dec
cmps
nop
mov
pmaxsw
test
test
mov
nop
mov
mov
sbb
sub
dec
sti
lahf
inc
pop
fwait
test
nop/reserved
aaa
dec
dec
loope
or
xchg
call
dec
cdq
pop
cmp
call
ficomp
pusha
dec
dec
mov
out
jns
nop
push
out
inc
add
fwait
jmp
and
mov
pop
and
xchg
push
sub
enter
sub
sbb
pop
sbb
inc
movs
push
mov
xor
jns
or
xchg
pop
adc
or
jmp
popa
stc
push
mov
xor
adc
push
cld
xlat
add
outs
js
inc
push
push
push
pop
(bad)
(bad)
(bad)
dec
sub
mov
mov
movs
adc
rcl
mov
sub
mov
dec
out
das
add
cmp
push
or
xchg
jecxz
test
jne
ins
cs
sbb
push
movs
nop
sbb
xor
sub
xchg
ds
dec
dec
push
pop
push
jo
jb
nop
or
stos
pop
pop
dec
loop
and
xor
adc
xor
or
cmp
xor
sub
mov
jmp
push
adc
add
jno
sub
push
repnz
inc
sbb
mov
xor
mov
jl
arpl
inc
aas
sbb
cmp
add
or
mov
inc
cmp
jno
dec
dec
pop
arpl
jp
push
fisttp
pop
add
clc
adc
popa
jo
adc
xor
lods
rcl
or
fist
fild
das
xor
int3
pop
ins
jns
mov
imul
xor
rol
bound
and
push
aam
mov
add
push
cmp
adc
and
pop
or
add
pop
push
nop
fs
add
es
inc
cli
mov
sub
clc
bound
jno
xchg
outs
je
pusha
add
in
ds
sub
bound
inc
add
add
xlat
es
and
jno
inc
data16
sub
inc
inc
call
push
sbb
xor
js
add
pop
push
pop
add
inc
dec
xor
and
cmp
daa
shl
add
or
sbb
cmp
add
mov
test
mov
mov
shl
xor
adc
aas
push
je
jp
add
inc
dec
push
pop
mov
add
sbb
add
cmp
dec
dec
add
push
popa
imul
mov
mov
jnp
xor
dec
add
cli
test
les
xchg
mov
sbb
cmp
shr
cmp
or
jns
adc
pop
add
out
jmp
scas
test
ins
and
push
or
add
dec
jo
push
pop
dec
aaa
adc
lahf
outs
dec
cmp
sbb
jb
test
rcl
je
pop
sub
and
or
jp
clc
fs
add
ss
and
rol
jp
push
add
jno
xor
jp
sub
push
arpl
mov
je
add
add
test
cmp
ins
call
mov
xor
add
mov
cs
mov
pusha
xor
mov
inc
mov
mov
pushf
jge
xor
add
test
test
or
or
loopne
dec
imul
mov
push
add
add
test
jno
(bad)
fwait
mov
imul
les
ret
dec
cmps
scas
xor
rcr
and
xor
frstor
dec
daa
sub
pushf
add
pop
lock
popa
push
xor
dec
push
shl
sbb
adc
add
sbb
jae
(bad)
xchg
(bad)
mov
xchg
push
and
adc
and
xor
add
ins
pop
xor
push
cdq
lods
sub
and
push
jmp
push
add
push
lahf
and
and
lock
mov
jge
es
xor
cmp
lds
loopne
fdiv
clc
dec
sub
imul
ret
and
add
push
add
clc
aaa
inc
dec
lods
sub
jp
push
jb
sub
and
sahf
fs
test
js
movs
cmp
cmp
xor
movs
jnp
adc
add
adc
cmp
lea
loopne
stos
push
jo
jle
out
add
mov
out
push
js
sub
fiadd
sub
or
mov
jmp
add
add
cmp
add
in
sub
dec
sahf
mov
adc
loopne
mov
jecxz
out
inc
sbb
adc
mov
inc
loopne
dec
or
and
jae
cmp
or
xchg
ret
call
mov
imul
mov
ins
or
adc
and
aas
outs
xor
inc
or
(bad)
lods
push
sbb
sbb
jl
inc
xor
add
add
xor
mov
dec
movs
outs
jge
mov
jl
clc
add
mov
sub
or
fdiv
scas
add
jo
pop
pop
rcr
jmp
or
mov
outs
cmps
imul
inc
inc
push
mov
in
or
xchg
add
ror
js
bound
and
xor
xor
jae
pusha
push
sub
dec
push
or
jb
xchg
retf
xor
mov
mov
push
jmp
xor
push
sub
scas
fwait
or
xor
xor
sub
mov
(bad)
dec
add
dec
test
icebp
outs
push
fs
shl
xchg
fdiv
aas
inc
mov
mov
jne
mov
inc
cwde
add
sub
pusha
xor
xor
jmp
shr
pop
punpcklbw
or
push
call
inc
cdq
shr
jo
lods
jmp
and
xchg
adc
dec
push
add
imul
push
(bad)
leave
shl
dec
in
mov
or
nop
dec
push
sub
sub
sbb
dec
sub
mov
and
fadd
add
mov
pop
push
pop
sub
inc
sbb
imul
mov
dec
adc
push
cli
loopne
sub
repnz
xchg
add
push
cwde
pusha
adc
mov
cmp
mov
add
addr16
pop
lock
and
and
sub
push
cmp
inc
sub
push
mov
inc
mov
rcl
and
add
jg
dec
sub
outs
mov
push
inc
dec
push
push
xchg
rol
stos
xchg
add
mov
ss
sbb
aad
dec
and
into
adc
add
or
add
add
pop
inc
cmp
dec
in
jo
test
add
inc
jmp
push
sbb
sub
xor
xchg
shl
sub
push
popa
add
jns
push
pop
dec
add
inc
or
add
mov
dec
add
push
sbb
mov
push
pop
jmp
(bad)
es
add
enter
stos
inc
pop
adc
jbe
push
sub
cs
loopne
scas
mov
lods
or
out
mov
stos
movs
mov
dec
je
popa
outs
mov
jnp
jnp
aas
pop
pop
ret
lds
jb
nop
and
shl
dec
dec
mov
add
sub
push
inc
and
jne
inc
add
push
xor
inc
fmul
push
cs
push
add
inc
dec
push
mov
dec
dec
dec
shl
jmp
hlt
add
movs
ds
sub
pop
sub
nop
cmp
aas
nop
loope
add
sub
cmp
xor
(bad)
cs
inc
aad
ds
cmps
addr16
cmp
cmp
push
add
cmp
pusha
adc
inc
dec
outs
cmps
or
in
enterw
aas
addr16
add
jl
fld
sub
lock
dec
push
mov
inc
(bad)
mov
add
sub
sub
dec
add
js
push
(bad)
or
jp
ss
push
(bad)
xchg
add
add
mov
sub
mov
mov
or
sub
aas
js
cmp
ins
jns
inc
sub
sub
sbb
out
jb
je
fadd
sub
add
mov
push
add
pop
shl
jge
mov
and
mov
in
or
mov
cwde
mov
push
es
loopne
fadd
push
push
pop
sbb
sub
ret
outs
outs
jno
jo
stos
lahf
xchg
ret
and
jle
test
jo
push
and
mov
shr
xor
shl
inc
push
xor
mov
adc
ror
push
and
adc
push
pop
cmp
rcl
inc
pop
pop
addr16
fld
add
cmp
data16
and
cwde
out
pop
add
lock
stos
add
cmp
hlt
push
js
jmp
cmp
ds
add
or
xchg
inc
and
cmp
sub
fimul
adc
sub
add
add
(bad)
call
or
push
xchg
outs
xor
mov
dec
ficom
fimul
cmp
jns
xor
dec
pushf
call
ret
push
adc
fadd
dec
dec
jae
jecxz
das
jno
push
fcom
xchg
ds
retf
push
mov
jecxz
pop
mov
push
push
scas
or
pop
test
push
push
and
and
jl
sub
cs
adc
xchg
cmps
sbb
lods
es
fcmove
fs
xor
outs
ds
mov
les
push
sbb
mov
mov
mov
mov
movs
ror
adc
push
sbb
into
inc
aas
pushf
sahf
nop
ret
pop
push
clc
(bad)
shr
push
add
jo
mov
add
push
bound
mov
popa
mov
(bad)
adc
cmp
inc
sbb
add
addr16
rcl
cmp
mov
adc
popa
lods
pop
pusha
push
xor
push
repnz
or
in
push
push
mov
mov
jbe
data16
or
ret
pop
xor
xchg
or
fsub
mov
adc
xor
mov
inc
test
xor
and
pop
sbb
mov
out
daa
sub
adc
xor
jnp
fs
push
sbb
fs
mov
add
sub
(bad)
xchg
cdq
jp
sbb
sub
bound
dec
and
sub
xchg
inc
sbb
xor
mov
cmp
dec
dec
pop
dec
or
jl
xor
and
pop
shl
cli
popf
or
cmps
push
bound
xchg
push
pop
shl
adc
and
jmp
xor
outs
pop
pop
cmp
movs
daa
ja
pop
and
jbe
pusha
dec
push
mov
cmp
sub
inc
inc
xor
sbb
add
xchg
les
cmp
inc
inc
dec
cli
repnz
pusha
push
xor
cmp
scas
sahf
movhps
rcl
jne
fmul
bnd
and
es
add
ret
lock
enter
ins
test
ja
jo
sbb
dec
push
call
mov
bound
lods
sar
shl
xchg
outs
cdq
ror
adc
rcl
sub
inc
dec
push
(bad)
add
pop
pusha
ror
sub
lock
and
cmp
xor
inc
jbe
js
mov
mov
cmps
imul
bound
inc
jb
test
pop
mov
cmp
pop
cmp
xor
or
pop
sub
sub
mov
ds
pop
arpl
js
xor
cs
ins
pop
gs
scas
test
rol
xchg
mov
mov
and
cmp
pop
ins
dec
add
mov
mov
fidiv
add
mov
push
or
lock
ja
out
arpl
pusha
xchg
and
hlt
loopne
or
lock
dec
pusha
and
dec
jo
fist
sub
movs
or
dec
mov
fisub
dec
stos
push
or
xor
fcomp
cmp
and
pop
and
adc
xor
cmp
mov
sub
xor
fsub
xor
mov
jbe
inc
adc
aam
mov
adc
es
mov
mov
or
adc
pop
call
fs
loopne
out
imul
nop
cs
add
cmp
sbb
ins
push
es
jp
call
add
dec
push
add
fsub
xchg
ror
xor
and
or
xchg
and
jbe
inc
pop
inc
xor
inc
add
sub
(bad)
cmp
xchg
adc
addr16
mov
add
mov
add
xor
push
mov
shr
sbb
cwde
inc
dec
mov
inc
add
push
push
adc
pop
pop
sbb
pop
dec
cmps
fs
push
push
loopne
sub
sbb
movs
adc
add
rcl
outs
in
push
push
and
mov
xchg
ss
inc
push
push
out
push
and
xchg
js
adc
pop
gs
add
add
push
pop
sbb
xor
sub
mov
retf
push
push
jne
sub
sub
test
(bad)
xor
jb
sub
in
cmc
inc
lahf
data16
es
pop
cs
and
push
push
pop
pushf
fs
adc
push
cmps
fs
xor
xchg
sub
sbb
push
inc
data16
push
cwde
pusha
pop
jp
mov
shl
cmps
ret
out
push
rcr
push
adc
mov
je
popa
addr16
gs
aam
movs
scas
mov
inc
ins
outs
inc
add
stos
mov
dec
outs
xlat
inc
fild
pop
ror
xchg
nop
add
loop
xor
cmp
rcr
fiadd
pop
(bad)
xor
out
les
mov
inc
ins
js
jb
inc
pusha
cmp
inc
adc
push
outs
je
add
movs
mov
push
inc
dec
jmp
sub
clc
cmp
or
fbstp
mov
imul
cli
cmp
sbb
mov
ret
mov
test
sub
and
rcl
sub
and
sub
and
inc
add
mov
je
cmp
dec
shl
mov
dec
into
dec
add
sub
imul
add
mov
mov
add
ins
fld
pop
data16
adc
push
adc
jbe
mov
adc
adc
cmp
pop
inc
mov
imul
mov
(bad)
lahf
aam
add
iret
or
das
cmp
add
data16
nop
cmp
jl
push
dec
adc
mov
in
inc
and
sub
sub
cmp
dec
dec
pusha
lods
dec
pop
sub
sub
ds
push
cwde
test
sbb
test
retf
push
adc
push
jns
je
arpl
xchg
repnz
dec
pop
mov
jle
inc
jo
jo
pop
adc
sub
inc
and
mov
inc
xor
add
jl
sub
add
rcr
push
rol
push
nop
cmp
and
add
seto
or
scas
repnz
inc
add
jns
push
dec
shl
jbe
mov
pop
push
push
push
mov
xor
mov
dec
push
dec
pop
inc
js
inc
inc
retf
mov
dec
xchg
rcl
(bad)
jp
sub
(bad)
dec
inc
inc
mov
sbb
ror
xchg
cmp
cmp
push
xchg
push
pop
sbb
movs
or
and
sbb
inc
or
sahf
xchg
shr
mov
pop
dec
pop
adc
inc
test
xor
push
mov
aaa
or
fs
xor
jo
pop
in
es
je
daa
sub
xor
or
jo
mov
mov
sub
jge
xor
sbb
bound
or
sahf
(bad)
lods
add
or
out
or
dec
es
pop
adc
sub
xchg
xor
cwde
inc
add
and
push
test
js
or
push
jb
and
mov
outs
js
mov
ins
fisub
add
xchg
test
push
sbb
jo
test
out
xchg
pushf
push
sub
outs
in
ins
cmp
sub
pop
addr16
test
nop
xor
xchg
mov
nop
das
push
mov
pop
or
add
lock
ret
sub
jb
xor
or
test
call
sub
and
stos
jbe
mov
aaa
inc
xor
dec
pop
les
jne
test
jg
sbb
daa
xor
shr
push
pusha
xor
ret
addr16
aam
nop
pop
jo
out
pop
push
push
test
xchg
xor
ds
add
sbb
push
and
xchg
les
nop
pop
jno
dec
sbb
inc
dec
pop
sub
cmp
sub
jno
or
lds
in
adc
dec
sub
dec
or
mov
pusha
add
xor
ds
aam
jbe
sub
daa
inc
ret
data16
loop
mov
cwde
mov
mov
aas
fadd
add
jo
and
call
mov
cmp
pop
pop
fs
ja
test
cmp
cmp
pop
mov
add
or
movs
and
pop
outs
fadd
ds
push
aam
sub
add
je
push
sub
and
aaa
cwde
push
cld
sahf
push
cmp
dec
dec
dec
call
mov
push
pop
js
sub
mov
inc
(bad)
jo
loopne
daa
sbb
xchg
add
add
pop
out
add
dec
and
inc
add
add
or
sti
nop
leave
test
(bad)
out
jo
mov
hlt
cmp
in
xchg
xor
add
cmp
jns
push
push
sti
stos
mov
sbb
and
mov
out
lods
add
inc
fidiv
push
sbb
das
xchg
imul
das
ds
inc
add
aam
or
jg
sbb
pop
cld
and
xchg
ret
lods
xor
adc
dec
lods
mov
push
dec
js
add
nop
aam
rcr
inc
push
pop
pusha
xor
inc
sar
ja
cmp
inc
adc
mov
dec
add
add
xor
dec
clc
push
mov
mov
mov
inc
scas
shl
add
je
xor
(bad)
ins
loopne
xchg
sub
push
sub
call
dec
push
js
ss
fadd
dec
movs
fs
cmp
imul
pusha
xchg
push
mov
push
inc
test
push
(bad)
lods
sub
add
mov
aas
inc
(bad)
push
popa
stos
mov
push
outs
je
mov
pop
add
outs
and
popa
es
jl
pusha
imul
lods
dec
push
gs
gs
sahf
or
mov
cmp
stos
add
jo
and
push
or
inc
push
sub
sbb
inc
sub
movs
shr
pusha
out
xchg
adc
cs
in
rcl
push
outs
cmp
mov
add
push
cmp
cmp
sub
xor
xchg
add
sbb
add
scas
or
fidiv
adc
add
mov
adc
mov
call
dec
or
pop
dec
mov
enter
ins
shr
aad
jbe
push
dec
dec
xor
ja
int3
outs
ds
push
pop
sbb
movd
xchg
ret
push
out
mov
adc
add
(bad)
add
scas
ror
inc
and
adc
sub
nop
(bad)
test
cmp
outs
cmp
xchg
inc
inc
and
cmp
xchg
pop
call
add
and
mov
ds
dec
push
js
mov
inc
push
inc
ret
dec
stos
xchg
jmp
inc
mov
adc
jmp
rcl
inc
leave
push
rol
xchg
add
es
fs
mov
inc
sub
mov
pop
inc
out
push
pusha
and
pop
test
add
sbb
inc
fistp
mov
or
(bad)
sbb
pop
pusha
cmp
push
mov
jmp
push
cmp
cmp
mov
sub
cmp
dec
inc
mov
cmp
mov
rcl
mov
sub
add
and
dec
call
xor
xchg
test
adc
mov
jno
jl
add
cmp
or
jb
movs
call
ret
or
cs
cmp
push
add
call
or
dec
stos
xchg
shr
in
or
je
and
test
ret
mov
iret
jecxz
inc
test
inc
dec
pop
pop
adc
add
pop
and
retf
dec
xor
adc
adc
sbb
and
dec
xor
or
jmp
push
and
adc
sub
in
lods
sbb
sbb
mov
mov
push
mov
cmps
or
xor
xchg
or
fcmovu
inc
or
and
test
dec
and
popa
jle
or
mov
sbb
mov
add
xchg
jbe
push
sub
shl
aam
lods
daa
mov
and
add
repnz
imul
cwde
dec
sbb
(bad)
popa
push
pop
mov
push
or
data16
pop
mov
push
push
pop
in
add
retf
jle
jb
and
xchg
dec
into
aas
push
xchg
push
adc
cmps
inc
push
add
push
aam
mov
movs
and
push
or
dec
push
fwait
add
mov
(bad)
cmps
(bad)
add
or
pop
outs
out
fidiv
inc
add
mov
jb
dec
inc
dec
hlt
push
add
and
cli
push
test
jnp
es
pop
mov
or
push
shl
adc
cmp
pop
xor
pusha
xor
sub
jp
aam
fs
xor
cmps
ds
fist
inc
jmp
xor
hlt
ins
or
adc
mov
add
mov
or
or
popa
shl
mov
push
push
arpl
add
sub
pop
adc
scas
rcl
repnz
or
sub
xchg
shr
push
sub
nop
test
gs
pushf
data16
(bad)
jb
jle
xor
or
les
add
cld
jl
outs
loop
xor
xor
test
out
es
imul
xchg
jle
and
int3
cmp
and
and
xor
xor
(bad)
dec
inc
xor
adc
sbb
popa
and
adc
cs
scas
jb
and
adc
dec
jp
xor
sub
loope
cmp
xor
dec
es
int3
les
ret
xor
sub
jae
outs
xor
data16
jnp
aad
adc
je
outs
sbb
aam
sub
cmp
mov
push
dec
mov
jnp
xor
add
xor
dec
push
push
push
loop
push
add
push
cmp
fs
test
dec
push
xor
scas
loopne
adc
pop
mov
dec
push
or
push
rol
ret
add
xchg
inc
aaa
lea
inc
mov
dec
pop
jecxz
or
daa
es
jmp
cmp
not
mov
xchg
pop
test
push
push
sub
push
add
aaa
dec
push
pop
xchg
shl
push
mov
cmp
push
ret
rcr
and
pop
sbb
add
push
into
fs
and
call
push
popf
or
lock
rcr
xchg
fild
data16
movs
push
dec
data16
sub
ret
es
inc
js
test
dec
jbe
lock
dec
xchg
push
rcl
or
cmp
ss
xor
adc
and
test
add
push
sbb
jmp
adc
aam
sub
jle
cmp
sub
shl
xor
ror
mov
retf
sub
sub
push
pop
mov
pop
xor
sub
pop
and
dec
cmp
xor
inc
retf
mov
or
movs
cmp
pop
pusha
inc
dec
popa
xor
jl
xor
inc
inc
loopne
enter
adc
or
jo
add
add
xchg
je
in
mov
adc
jp
add
jo
push
inc
mov
add
test
mov
adc
jnp
cwde
xor
jo
rcr
xor
sub
test
mov
cmp
mov
or
dec
jl
and
xor
outs
ret
aam
aam
mov
das
push
and
loope
dec
and
inc
cdq
pusha
xor
fsubr
inc
popa
mov
ja
xor
test
adc
scas
ins
cwde
mov
fs
push
mov
jno
xor
jmp
test
sub
mov
test
jo
dec
loopne
aam
and
inc
xchg
mov
adc
xor
push
cs
xor
(bad)
adc
sbb
or
cmp
add
inc
inc
mov
add
outs
dec
add
inc
repnz
aaa
rcl
push
mov
inc
sbb
jns
inc
mov
sbb
sbb
fsubr
jnp
mov
and
cmp
inc
rol
outs
add
adc
jno
mov
cmp
pusha
mov
add
jge
xor
in
ror
inc
sub
dec
xchg
or
test
in
daa
or
mov
lds
dec
mov
inc
movs
mov
call
and
ret
adc
das
dec
inc
add
add
scas
adc
arpl
(bad)
dec
dec
dec
add
dec
stos
outs
sbb
ret
xor
shl
sub
push
cmp
sub
ret
(bad)
rol
movs
or
xchg
cmp
sub
movs
xchg
push
pop
test
mov
into
push
dec
shl
push
add
jae
and
and
and
push
sub
arpl
and
cwde
push
loop
sub
dec
inc
lock
xchg
xor
xor
repnz
xchg
xchg
loop
sar
fsubr
cmp
jle
add
and
jo
dec
push
sahf
and
xchg
aas
mov
call
call
sub
mov
jo
adc
mov
add
push
dec
jmp
add
es
out
pop
adc
cmp
outs
shl
dec
jns
cmps
inc
push
xchg
adc
ins
shr
jbe
inc
add
test
push
adc
add
xchg
fs
mov
jb
rcr
jle
inc
iret
inc
dec
inc
ss
imul
xor
shl
cmp
inc
gs
jb
or
lea
pop
or
or
jbe
push
push
add
je
mov
jbe
cmp
cmc
xor
lock
test
sub
(bad)
and
and
or
retf
or
pop
lods
mov
sub
sub
retf
add
in
clc
xor
inc
stos
xchg
inc
pop
push
jl
add
adc
fs
xor
pop
adc
sbb
nop
cdq
adc
or
popa
inc
adc
adc
(bad)
push
push
lock
xchg
inc
and
mov
cmp
and
push
out
es
pop
push
es
(bad)
or
sbb
inc
or
pushf
pop
push
add
mov
ins
add
push
loopne
je
pop
pop
pop
leave
loopne
jo
sub
mov
ja
mov
pop
adc
or
sub
adc
fdivp
sbb
jo
out
jbe
xchg
mov
add
pop
fisubr
xchg
shl
clc
icebp
cdq
push
and
test
xor
inc
inc
dec
(bad)
retf
mov
or
dec
xor
sar
outs
sbb
pusha
pushw
dec
dec
hlt
dec
jge
aas
push
and
dec
jb
inc
(bad)
pop
pusha
fdivr
sbb
inc
mov
xchg
movs
dec
push
cli
ins
mul
or
pop
(bad)
fidiv
js
popa
(bad)
push
test
dec
in
dec
inc
adc
stos
cmp
fisub
mov
test
lods
pusha
pushf
jnp
jle
test
jae
or
enter
xchg
mov
jnp
xor
pop
and
push
push
test
(bad)
outs
aam
sub
mov
jno
sbb
jg
xchg
cmp
push
das
pop
xor
and
inc
xchg
lods
popa
cmp
add
push
inc
into
or
rcl
aad
pop
imul
popf
or
popa
mov
dec
add
mov
mov
and
inc
inc
or
push
or
jo
push
xor
sub
sub
gs
cmp
push
dec
dec
lea
pop
fimul
adc
mov
add
test
inc
pushfw
pusha
dec
stos
arpl
aas
mov
outs
add
dec
sbb
push
push
dec
rcl
and
in
push
dec
test
dec
cdq
test
adc
pop
xor
inc
je
add
ss
imul
inc
sbb
xchg
pop
xchg
fsubp
fs
cwde
xchg
cmp
mov
cmp
clc
stos
push
aam
fidiv
add
nop
sub
or
sbb
add
inc
hlt
push
retf
xor
popa
xchg
add
adc
pop
rcr
dec
scas
pop
push
js
iret
das
and
pop
sub
cmps
or
(bad)
and
test
adc
push
push
dec
push
xor
daa
xor
push
fadd
inc
push
test
sub
lock
mov
ins
push
in
push
leave
and
add
clc
test
mov
cs
call
add
add
add
jnp
xor
dec
dec
push
gs
xchg
rol
push
jb
shl
in
pushf
mov
inc
sbb
inc
sbb
sbb
inc
and
mov
jns
xchg
dec
dec
push
ret
and
lahf
mov
mov
push
mov
push
adc
inc
inc
enter
lods
xlat
mov
test
nop
dec
pop
sbb
or
or
or
test
jae
pop
outs
add
ror
add
push
or
cld
dec
push
pop
pop
ins
jo
pusha
push
shr
xor
push
aas
shl
clc
inc
jb
sbb
mov
ss
inc
push
popa
or
jl
or
mov
test
push
push
(bad)
cs
adc
loopne
inc
xchg
cs
or
std
dec
mov
sub
aas
inc
and
loopne
xchg
and
scas
dec
sbb
xor
push
pop
jno
cmp
or
pop
sbb
adc
repnz
adc
add
mov
clc
outs
dec
inc
sub
xor
scas
mov
push
push
arpl
cmp
sub
sbb
cs
or
inc
inc
and
sahf
test
inc
in
mov
test
jp
inc
adc
addr16
xor
inc
and
aas
add
popa
cmps
dec
leave
fs
js
sub
or
cmp
add
lods
add
pop
pop
inc
sbb
push
cmps
cmp
dec
jo
popf
adc
aam
pusha
retf
or
adc
(bad)
inc
outs
inc
fs
retf
xchg
push
xor
test
sbb
movs
add
xor
adc
dec
push
add
nop
stos
mov
sub
cmp
mov
and
xchg
outs
jge
xor
xor
dec
push
outs
pusha
and
inc
dec
dec
push
cmp
push
add
ins
bound
jae
outs
push
pop
mov
ss
scas
dec
add
inc
xlat
stos
mov
jae
push
jecxz
cmp
add
sub
pop
and
pop
jne
(bad)
or
sub
cmp
sub
xor
xchg
pop
aad
or
jmp
add
mov
mov
xchg
stos
add
pop
push
sub
add
inc
push
dec
adc
iret
push
add
inc
lahf
adc
jl
add
sub
adc
leave
add
sub
add
or
jb
inc
push
mov
push
movs
push
dec
iret
xor
enter
arpl
inc
inc
pop
test
xor
add
pop
ret
aas
imul
adc
mov
and
jp
aas
call
push
retf
or
stos
dec
test
je
mov
or
adc
cwde
js
rcr
jne
cmp
lods
pop
not
imul
jle
inc
push
je
sbb
pop
or
call
push
mov
jbe
inc
pop
add
inc
and
pop
daa
retf
mov
bound
push
pop
dec
add
add
les
xchg
cmp
add
pusha
pop
push
mov
neg
daa
xchg
sbb
es
dec
push
or
lsl
jb
jl
adc
or
adc
imul
mov
push
xor
pop
sub
xchg
push
inc
xor
cmp
add
add
or
inc
inc
loope
push
xor
inc
dec
aam
pop
sub
xor
sbb
jne
pop
mov
and
shr
push
inc
xchg
push
sub
mov
adc
dec
dec
push
dec
clc
xchg
cmp
sub
mov
adc
mov
xor
ror
add
and
popf
xchg
jbe
pop
pop
sub
sub
or
shr
lods
xchg
add
push
scas
pop
mov
addr16
mov
pop
bound
and
pop
jo
ret
ror
les
and
xchg
scas
nop
or
sub
push
jnp
sbb
adc
push
cmp
dec
sbb
jne
data16
xor
xor
shl
je
inc
adc
lds
rol
jae
mov
inc
pop
ins
inc
adc
and
and
mov
mov
call
add
data16
test
jl
pop
xchg
pop
push
call
test
sub
js
push
dec
cmp
sbb
lock
(bad)
inc
add
mov
xchg
cmp
ficom
dec
jge
adc
pusha
push
cdq
xchg
inc
cmp
mov
inc
test
or
jo
loope
jmp
test
vcvtsd2ss
cwde
cs
adc
data16
ins
jmp
stos
mov
fidiv
cdq
inc
test
dec
mov
or
or
mov
js
pusha
pop
pusha
aaa
cli
fcom
fs
ja
cmp
pushf
push
pop
(bad)
xchg
ret
xchg
mov
pop
gs
jo
jo
push
outs
int3
mov
mov
loopne
sub
loop
jl
dec
in
sub
dec
loop
jns
rcr
sub
idiv
cmps
push
cmp
push
push
xor
ins
test
and
sbb
pop
pop
pop
xchg
add
cmp
lods
xchg
or
imul
xor
add
daa
xor
sbb
or
sub
ror
add
and
stos
imul
add
aad
xchg
pop
push
sub
ins
sbb
push
sbb
inc
mov
(bad)
shr
dec
or
shl
sub
cmp
or
das
mov
jl
jp
outs
or
mov
push
mov
gs
sub
mov
inc
inc
push
inc
lods
or
pop
js
inc
ds
jmp
das
adc
dec
dec
add
outs
inc
xor
mov
mov
movs
popa
push
stos
dec
cmp
push
adc
dec
xchg
add
ds
loopne
leave
and
mov
push
(bad)
outs
jo
int
aam
dec
xchg
bound
dec
gs
repnz
add
add
jle
push
inc
cwde
in
imul
inc
push
add
imul
mov
sbb
mov
test
mov
cmp
loop
sbb
imul
cmp
cld
cmp
shl
xchg
mov
retf
cmp
out
mov
and
inc
dec
push
jne
mov
das
clc
out
push
ror
pop
push
add
xchg
sbb
ins
dec
retw
shl
adc
mov
inc
dec
xchg
adc
outs
jl
adc
mov
sub
jbe
sbb
mov
push
dec
iret
in
gs
je
mov
mov
sbb
xchg
pop
pusha
mov
cmps
dec
cwde
adc
sub
xchg
add
ret
shr
shr
jl
ret
mov
loopne
dec
inc
mov
in
aad
mov
loopne
aas
and
inc
ss
gs
sub
inc
dec
pop
or
and
call
add
push
call
(bad)
outs
mov
and
or
and
test
xor
and
and
movs
xor
pusha
jno
rcl
imul
push
xchg
fs
dec
ja
inc
inc
add
call
add
(bad)
and
xchg
dec
xor
push
fisub
cs
nop
sahf
mov
fist
mov
sub
cwde
cwde
outs
sbb
jb
inc
sub
jl
inc
xchg
addr16
mov
xor
push
jb
(bad)
add
xor
sahf
bound
dec
xor
lahf
dec
les
or
test
adc
sbb
movs
jl
mov
cmp
cmp
push
inc
pop
and
add
sub
dec
push
cmps
stos
sub
in
mov
ret
pop
jge
add
shl
not
out
cmp
push
aas
popa
cmp
cmp
jae
mov
push
add
sbb
dec
xchg
mov
cwde
or
inc
add
push
push
add
call
add
xchg
xor
cdq
sub
ins
add
retf
jbe
les
adc
fsub
ror
lea
cmp
inc
inc
lahf
jb
ret
or
sbb
or
or
jge
test
or
push
loopne
xchg
call
add
fsubr
sbb
data16
pop
pop
push
or
xchg
(bad)
fisubr
test
jg
mov
call
dec
mov
lock
cmp
fsub
fidivr
adc
jmp
dec
dec
xor
mov
jo
adc
mov
jo
adc
sbb
push
mov
popa
add
and
cmp
inc
(bad)
fimul
ja
pop
sub
stos
pusha
adc
div
pop
xor
pop
xchg
xor
push
and
add
clc
add
add
push
stos
or
add
dec
push
mov
sub
mov
ins
rcl
mov
retf
arpl
xor
stos
mov
xchg
jnp
in
inc
add
fmul
les
retf
and
add
push
xchg
mov
sbb
add
xor
push
jae
cmp
out
pusha
loopne
mov
mov
mov
ds
and
popa
xor
out
rcl
xchg
sub
gs
jb
push
xor
or
shr
inc
xchg
fmul
push
test
or
lock
or
call
daa
xor
xor
popf
adc
and
jo
rol
mov
xchg
shl
xor
xor
in
xor
fimul
xor
dec
push
jmp
cs
push
sbb
push
mov
shl
lock
cmp
ja
and
inc
and
add
pop
loop
add
and
sub
popa
outs
into
inc
fisubr
je
mov
mov
inc
(bad)
adc
movs
push
adc
adc
into
gs
pop
add
and
adc
inc
and
jb
clc
shl
out
test
and
cmp
add
outs
sbb
push
out
adc
cmp
sbb
test
cli
add
adc
adc
data16
cld
loopne
xchg
test
sbb
mov
addr16
pop
push
dec
mov
stos
add
sub
dec
jne
aas
or
add
cmp
lods
cmp
pop
cmp
push
popa
mov
fs
in
dec
push
fild
mov
sub
lods
pop
dec
sub
push
jp
inc
aas
dec
dec
outs
nop
mov
cwde
adc
inc
mov
fcmovnb
aaa
(bad)
imul
fs
add
dec
lock
xor
das
jo
xchg
cwde
and
pusha
xchg
or
js
dec
add
or
cmp
in
test
mov
or
inc
cs
or
scas
dec
or
fst
and
shl
dec
inc
add
mov
pop
bound
sub
add
add
xchg
push
gs
shl
mov
mov
fcom
bound
ins
jne
adc
test
xor
sbb
push
and
push
loopne
ds
ins
or
push
xchg
mov
cmps
jl
sbb
push
dec
sub
jp
ret
ins
xor
fsub
push
mov
es
test
jo
push
inc
ror
push
pop
test
xchg
rol
dec
sub
addr16
adc
dec
add
sar
mov
push
dec
ins
ins
inc
or
or
fcom
bound
push
loop
(bad)
sbb
xor
cwde
cmp
cmps
add
jnp
dec
mov
xchg
in
mov
add
cmp
jo
pop
adc
push
push
ja
xor
mov
adc
movs
ja
mov
in
pop
adc
inc
dec
aaa
loope
push
or
and
jne
xor
xor
scas
sub
or
xor
add
inc
not
mov
pop
mov
aaa
sbb
adc
movs
inc
push
inc
or
mov
loope
mov
or
dec
and
xchg
push
push
imul
mov
adc
adc
adc
add
jle
mov
dec
and
add
xor
loop
add
adc
jge
xor
sbb
pop
(bad)
or
push
hlt
inc
sub
pusha
jo
into
(bad)
push
pop
xchg
pusha
inc
adc
push
add
xchg
sbb
cmps
movs
mov
push
dec
inc
dec
sbb
xor
pop
xchg
cs
test
jl
and
in
ret
and
sahf
mov
pop
xchg
jne
sub
sub
and
mov
lods
push
and
xor
es
test
pusha
push
test
mov
je
inc
lock
inc
cs
adc
dec
xchg
(bad)
out
(bad)
jns
cmp
(bad)
push
lods
dec
dec
pop
push
frstor
xchg
adc
inc
or
and
or
imul
stos
pop
add
js
adc
xor
(bad)
aam
add
dec
add
je
js
add
push
loopne
icebp
xchg
add
xor
inc
inc
or
sbb
cmp
and
sahf
stos
pop
push
xlat
add
jnp
xor
pop
cld
push
adc
add
pusha
test
fs
or
lea
push
into
adc
inc
test
out
nop
mov
or
in
pop
bound
and
test
and
add
cmps
push
sub
cmc
xor
xchg
test
lods
test
xchg
push
ret
cmp
sub
int3
ds
mov
and
mov
push
or
mov
arpl
jl
push
(bad)
dec
test
cmp
pop
mov
mov
pop
push
test
inc
xchg
add
xchg
cwde
cmp
inc
xor
ret
xor
push
(bad)
lods
push
inc
xchg
ds
sbb
dec
outs
mov
es
or
xor
jo
es
or
add
shr
and
jne
mov
add
js
sbb
inc
fadd
xor
add
mov
sbb
pop
imul
cmp
arpl
sub
sbb
dec
sahf
sub
mov
out
inc
es
add
and
jno
ret
test
addr16
shl
data16
push
inc
fsubr
jbe
and
mov
sub
pop
sbb
xchg
pusha
addr16
sbb
inc
push
dec
rcr
mov
jmp
pop
ins
call
and
jmp
inc
dec
cmova
mov
rcr
mov
xor
dec
enter
jo
mov
xchg
scas
mov
add
jae
sbb
xchg
lods
push
rcl
shr
dec
call
ins
xchg
pop
add
inc
inc
cwde
inc
sbb
shr
mov
retf
fcomp
push
call
xor
mov
sub
fst
sar
and
and
jmp
daa
cwde
adc
adc
sub
pop
adc
fwait
arpl
mov
xor
aaa
jmp
pop
cmp
sbb
sub
add
outs
jl
lods
jne
lahf
inc
push
add
aam
pusha
dec
shr
sbb
or
xchg
sub
sub
xchg
sbb
pusha
cmp
cmp
test
ins
mov
xchg
adc
push
sar
add
cmp
or
dec
dec
push
mov
add
xor
data16
rsm
pop
inc
bound
pop
data16
xor
fwait
gs
xor
dec
add
mov
packssdw
sbb
test
pop
push
xchg
or
sbb
and
sbb
dec
sahf
test
mov
pop
pop
dec
fs
outs
mov
fnstenv
pop
or
xchg
sub
shr
gs
jo
ds
pop
pop
out
je
mov
pop
dec
xor
inc
loope
push
push
addr16
xchg
sbb
inc
mov
outs
js
pop
inc
sbb
inc
jl
imul
pop
mov
lods
bound
es
cmp
mov
mov
add
arpl
imul
pop
mov
in
ins
rol
and
loope
pop
pop
push
xchg
add
inc
pop
xchg
adc
xchg
sahf
movs
inc
add
xchg
dec
mov
xchg
push
cs
mov
jbe
cwde
inc
dec
call
adc
dec
and
sub
retf
mov
add
in
xor
cs
add
jbe
jnp
inc
add
pop
add
cs
mov
dec
imul
out
test
jp
push
dec
add
sub
jp
cmp
mov
and
adc
int3
xor
sahf
les
bound
inc
adc
xchg
xor
xor
adc
fidiv
sub
jmp
adc
jp
mov
mov
aaa
and
xor
push
adc
mov
inc
and
sbb
mov
in
sbb
sub
pop
jb
xchg
ss
add
and
jo
inc
(bad)
adc
cli
dec
push
sahf
mov
push
add
sub
rcr
mov
dec
mov
pop
and
rcr
push
and
cmps
cs
je
push
test
or
xchg
jmp
push
jae
je
pop
mov
and
sub
addr16
add
aaa
xor
ror
inc
and
sbb
xchg
into
inc
adc
cmp
xchg
jp
gs
xor
int
push
mov
je
sub
push
(bad)
scas
jp
or
ror
mov
mov
stos
fs
dec
push
inc
pop
bound
retf
add
fs
jl
or
or
push
retf
leave
sbb
add
or
fcomp
push
stos
and
bound
jae
aaa
mov
add
add
rcl
and
cli
adc
sahf
jbe
add
push
iret
sub
pushf
xchg
or
push
sub
cli
pusha
inc
sub
sbb
mov
and
mov
xor
mov
hlt
jmp
ss
jo
xchg
push
dec
or
int3
sbb
xor
mov
or
cs
ror
mov
mov
mov
les
retf
je
sub
inc
mov
or
and
sbb
or
or
sub
les
dec
or
int3
add
adc
inc
xor
jle
xchg
shl
xchg
push
movs
fdiv
jne
clc
dec
(bad)
and
cs
or
pop
pusha
add
cmp
xor
mov
mov
inc
add
mov
add
and
push
mov
sub
add
dec
test
push
or
in
fadd
aam
push
pop
mov
jno
(bad)
cli
or
push
dec
push
out
jp
mov
mov
or
int
adc
mov
xchg
push
mov
dec
cwde
or
stos
cwde
inc
push
jb
xchg
cld
call
push
test
cmps
xchg
out
test
adc
lods
cmp
push
and
add
add
inc
inc
xchg
add
scas
(bad)
ins
push
mov
add
xchg
ins
ja
inc
cmp
xor
or
dec
add
or
or
cs
push
push
or
dec
xor
pop
sub
add
es
add
inc
lods
pushf
adc
test
shl
movs
lods
sbb
test
cs
adc
sbb
add
push
push
cs
stos
or
and
shl
xor
add
dec
xor
cmp
add
pshufw
xor
add
push
push
push
push
adc
sub
sbb
jl
xor
mov
ds
adc
jo
cwde
lods
add
adc
test
or
es
mov
adc
popa
and
pop
mov
mov
pop
adc
adc
sub
dec
cmp
fs
xchg
sub
push
adc
mov
adc
add
inc
sar
jg
add
xor
add
in
mov
add
pop
sbb
push
ss
mov
bound
inc
inc
pop
add
retf
xchg
inc
and
push
rol
pop
pop
mov
xor
dec
pop
cmps
push
mov
pop
ins
in
sbb
out
mov
test
rol
ja
pusha
imul
sbb
daa
jb
adc
jp
dec
add
daa
pop
add
inc
dec
push
push
lods
xchg
dec
cmp
ins
je
aaa
sbb
test
fwait
test
xor
int3
inc
push
cwde
jae
cmp
pop
or
repnz
pusha
sub
add
hlt
add
rcl
pop
pusha
call
sbb
sub
dec
push
push
enter
shr
xor
or
outs
jno
push
fistp
jmp
mov
cs
sub
pop
inc
ins
js
pop
arpl
mov
push
xchg
xor
pop
xchg
push
rcr
(bad)
or
dec
dec
adc
je
sub
or
es
add
stos
mov
pop
jecxz
sbb
push
sbb
xor
dec
pop
xchg
test
sbb
or
and
or
xchg
(bad)
and
sbb
cs
jno
daa
jg
sbb
add
aas
fs
dec
data16
push
nop
xchg
push
adc
mov
jo
mov
xor
dec
xor
fdivr
dec
call
pop
xchg
cmps
jp
dec
push
and
fimul
and
sahf
add
in
ds
sar
ds
push
sbb
outs
pop
imul
test
xor
sbb
jbe
cmp
adc
aas
sbb
mov
jo
adc
les
cmp
or
adc
dec
xor
push
pop
fwait
sub
push
je
(bad)
iret
xor
cmp
test
lods
pop
je
(bad)
adc
jo
mov
cmp
mov
pop
push
or
jecxz
jmp
xchg
pusha
adc
js
dec
add
sub
mov
add
adc
in
jne
or
inc
dec
mov
imul
push
add
pushw
or
add
gs
lock
inc
mov
mov
adc
jp
and
sbb
aaa
or
test
sbb
loop
mov
aam
or
fidivr
sbb
fs
dec
adc
push
inc
dec
jo
add
mov
sbb
movs
and
fdiv
shr
mov
scas
jo
int3
sar
dec
pop
sub
out
mov
push
xor
imul
cli
or
mov
pop
gs
out
cmp
bound
movs
aad
jne
xor
or
xchg
pop
and
lods
add
pop
xchg
ja
xor
adc
lods
jb
adc
sbb
inc
sub
ret
sub
bound
mov
jmp
loopne
push
pop
dec
xchg
push
add
out
(bad)
imul
xor
sbb
mov
inc
outs
or
out
or
mov
inc
xchg
or
push
test
inc
add
sub
inc
ror
dec
sbb
push
inc
nop
cs
lock
shl
and
lds
push
adc
mov
inc
test
pop
and
push
mov
rcl
pop
or
es
dec
and
sahf
and
mov
test
xchg
je
gs
pusha
inc
out
pusha
shr
hlt
retf
inc
(bad)
test
jb
and
add
ror
out
lock
push
adc
cmp
sub
or
jmp
cmp
inc
test
into
sub
inc
or
cmp
lods
add
cmp
mov
or
data16
dec
or
retf
push
push
push
xlat
sbb
shl
add
and
pop
jp
sub
ja
mov
push
sar
sub
inc
mov
ror
cmp
iret
and
cmps
dec
mov
inc
div
test
xchg
push
add
mov
jmp
pop
gs
cmovne
nop
or
add
loopne
hlt
push
pop
adc
cld
and
test
rcr
or
xchg
add
and
adc
inc
test
pop
mov
cmps
hlt
arpl
dec
xor
push
pop
mov
add
sbb
push
mov
das
add
int
mov
sar
rol
mov
and
pusha
mov
sbb
add
nop
clc
cmps
loopne
push
pop
(bad)
push
pusha
sbb
addr16
(bad)
mov
cmp
inc
ins
loopne
and
ja
outs
add
iret
xchg
add
and
or
push
dec
mov
cmp
add
lods
push
mov
data16
and
adc
out
pop
pop
inc
push
add
mov
add
outs
or
rol
jp
xor
imul
ret
test
jo
mov
push
outs
xchg
inc
dec
fiadd
add
mov
cs
pop
pop
out
jne
pop
add
retf
or
inc
mov
inc
fs
xchg
ins
xchg
inc
mov
in
push
pop
add
sbb
ret
or
cdq
popa
mov
dec
or
adc
sbb
adc
or
das
mov
add
shl
dec
add
add
loop
cmp
mov
xor
nop
retf
inc
inc
hlt
rcl
fcomp
and
sbb
mov
inc
call
push
loopne
xchg
mov
movs
imul
pop
push
inc
mov
xor
cmp
lods
push
add
cmp
adc
xchg
adc
dec
cs
inc
mov
and
add
ficom
dec
add
xor
push
sbb
pop
adc
push
push
and
xor
xor
pusha
mov
cld
outs
jb
push
push
add
add
imul
xchg
dec
jns
jl
dec
and
jg
add
xchg
hlt
jo
or
xor
sub
bound
test
or
addr16
mov
out
pop
push
jo
sub
mov
and
and
or
mov
jge
add
push
inc
shl
and
fiadd
cmp
push
xor
or
and
loopne
mov
enter
mov
aam
lea
or
sub
or
xchg
jl
call
mov
add
sbb
adc
scas
push
push
pushf
stos
xor
mov
sub
pushf
imul
jp
bound
ins
outs
int
inc
and
and
add
jb
cmc
or
inc
cli
cwde
pushf
add
and
sahf
add
int3
push
xchg
scas
pop
test
ret
cmp
dec
xor
imul
xor
or
sbb
test
xor
and
ret
push
ins
push
cmp
xchg
das
aaa
add
dec
sub
ins
nop
mov
dec
pop
push
iret
push
cmp
shl
pop
pop
shr
jp
sub
arpl
mov
inc
mov
cwde
sub
dec
mov
jge
and
push
add
or
adc
mov
mov
pop
pop
scas
push
adc
iret
lahf
bound
push
or
and
(bad)
out
cmp
sub
ss
or
mov
push
and
push
ficom
xchg
jle
ror
inc
sbb
ins
xchg
es
push
(bad)
jge
sbb
dec
xor
dec
pop
sbb
ss
and
scas
jl
or
das
add
or
inc
fnstsw
jnp
xor
fdivr
lods
push
adc
lods
shl
sbb
cmp
and
push
or
arpl
inc
js
adc
cmp
sub
or
mov
into
loopne
inc
or
push
sub
dec
sub
add
inc
movs
or
and
mov
and
imul
sub
les
mov
or
xchg
push
xchg
test
xor
xchg
dec
add
push
inc
fsub
in
outs
jno
push
mov
add
and
push
or
jne
xor
adc
sub
add
int3
and
add
int3
mov
fild
int3
xchg
pop
push
scas
sbb
dec
movs
dec
mov
(bad)
js
or
mov
sbb
imul
out
xchg
add
ins
sub
cmp
jnp
mov
fdivr
fdiv
xor
xchg
jmp
imul
je
cmp
sbb
mov
inc
popa
mov
ss
cmp
dec
mov
addr16
push
aaa
fwait
push
inc
jae
add
add
or
and
ss
inc
lock
stos
cmp
push
add
add
loopne
adc
or
and
dec
sbb
add
fadd
cmp
ret
push
pop
add
add
adc
outs
add
adc
dec
sub
ss
mov
cmp
pusha
mov
ins
js
adc
xor
test
jbe
sbb
sbb
cs
add
imul
push
add
test
add
and
push
popa
mov
(bad)
mov
outs
sub
inc
adc
dec
or
push
inc
loopne
fld
bound
mov
js
add
cmp
ret
push
fsub
lock
inc
inc
dec
inc
dec
loopne
xchg
pop
jmp
inc
ret
push
mov
add
jp
fs
dec
push
lahf
jo
les
sbb
out
inc
test
xchg
xchg
inc
push
add
loopne
pop
daa
add
test
xor
fadd
push
dec
and
ret
inc
dec
jns
sub
pushf
inc
add
dec
pop
sub
adc
mov
push
pop
int
leave
ret
sub
ins
jo
ins
test
lods
jg
add
pop
shl
and
loopne
ret
mov
arpl
lods
retf
adc
push
adc
sbb
jbe
loopne
push
and
dec
dec
jo
sub
push
jl
adc
test
jp
adc
dec
pusha
inc
or
les
shr
rol
test
es
or
add
shl
scas
pop
inc
inc
and
mov
add
push
add
ret
push
xor
add
scas
daa
push
jle
adc
or
neg
push
adc
sub
jo
add
or
xor
dec
adc
imul
inc
or
xor
push
push
inc
ret
or
mov
aam
adc
or
xor
add
pop
(bad)
push
inc
inc
push
lahf
and
push
adc
mov
int3
push
cli
jne
test
rcl
mov
add
add
sbb
cmp
mov
dec
push
push
dec
sbb
cmp
nop
je
loope
mov
cmp
mov
add
dec
add
mov
pop
popa
mov
inc
mov
mov
and
or
jo
or
cmps
repnz
sub
retf
add
popf
outs
ins
dec
cmp
scas
and
cmp
sbb
xchg
dec
lock
jbe
arpl
adc
push
retf
sub
add
rol
push
repnz
cmp
xor
and
jbe
push
ins
loopne
stos
dec
pop
xlat
adc
xor
sbb
adc
add
fmul
push
push
ins
or
jns
cmp
(bad)
sub
and
into
or
xor
or
or
iret
add
and
inc
inc
repnz
and
rcr
adc
xor
add
xor
add
fs
sub
cwde
adc
ins
rcr
ins
fisttp
cs
inc
dec
push
push
mov
inc
or
adc
sahf
popa
ins
inc
and
aam
mov
jge
test
and
hlt
mov
pop
movs
push
gs
mov
dec
or
push
add
add
data16
pop
rcl
jo
mov
cmp
loope
arpl
jne
mov
dec
xchg
inc
daa
cmp
mov
aad
xchg
add
cmp
test
push
dec
js
es
inc
movs
add
inc
cwde
hlt
mov
pusha
pusha
dec
add
ret
js
and
retf
fisttp
int
mov
dec
call
add
hlt
clc
cwde
add
inc
les
pushf
loope
or
jmp
adc
xor
aaa
cwde
jo
mov
rol
test
dec
mov
or
inc
ins
pop
push
dec
add
scas
adc
xor
fiadd
adc
cmp
test
inc
add
inc
mov
js
ret
or
push
mov
pop
fsub
sub
mov
popa
(bad)
mul
or
and
dec
adc
or
inc
inc
(bad)
nop
push
dec
jp
add
or
out
outs
xchg
pop
add
xlat
add
mov
xor
push
(bad)
addr16
inc
add
push
enter
add
xchg
or
add
dec
int3
sub
sbb
adc
add
adc
and
jo
push
or
clc
push
mov
lock
push
sbb
mov
dec
inc
and
push
mov
cmp
test
push
inc
mov
popf
adc
stos
nop
pop
sar
add
and
add
mov
xchg
dec
push
adc
cs
adc
repnz
lock
sbb
popf
push
or
mov
hlt
fs
or
mov
dec
adc
pop
or
jae
sub
sub
or
or
dec
pop
mov
push
inc
or
rcr
xor
fs
enter
mov
je
ins
mov
ss
mov
or
cmp
add
mov
inc
lods
pop
vmptrld
pusha
fwait
test
je
adc
and
ins
xchg
jo
jo
enter
add
pop
in
nop
sub
and
xchg
pop
outs
rol
add
and
mov
(bad)
or
jo
dec
dec
out
outs
es
ror
push
mov
push
stos
das
cmp
cs
adc
loop
retf
sub
sbb
add
adc
mov
mov
pop
movs
mov
jp
or
and
and
nop
mov
and
shl
cli
icebp
push
dec
sub
cvtdq2ps
push
jecxz
mov
or
cmp
push
adc
pop
sub
or
clc
push
pop
arpl
jbe
or
rol
fwait
or
stos
loope
xor
jbe
add
movs
or
add
dec
mov
pushf
xor
add
cmp
add
pushf
sar
int3
adc
ss
shl
ss
into
popa
push
add
clc
and
xor
shr
and
das
popa
outs
shr
dec
mov
or
adc
cmps
push
and
inc
or
clc
dec
or
dec
out
xchg
test
adc
popa
xchg
or
push
sbb
add
mov
sbb
push
daa
add
das
test
shl
xchg
mov
ret
cmp
jbe
bound
push
daa
adc
add
enter
gs
call
mov
pop
xor
jmp
pusha
pop
add
jns
xchg
sub
jl
push
and
xchg
lock
jns
cmp
or
inc
xor
cwde
inc
bound
test
stos
mov
mov
add
pop
mov
enter
xor
xor
movs
xor
js
adc
jb
das
xor
js
cmpxchg8b
(bad)
leave
and
mov
add
xor
sub
imul
or
xchg
jle
bound
fdiv
jl
push
sbb
xor
ss
fisubr
mov
inc
prefetchnta
jge
lods
inc
or
lods
xchg
jg
or
add
mov
or
test
mov
bound
shr
dec
push
adc
xor
inc
rol
pop
and
and
nop
sbb
or
cmp
sbb
js
adc
ret
push
nop
sahf
pop
and
push
out
jle
sbb
pusha
adc
test
loop
das
ins
mov
and
mov
add
mov
dec
push
push
hlt
ins
inc
and
jle
and
xor
or
push
inc
mov
es
xchg
mov
mov
mov
and
inc
scas
addr16
cli
in
sub
inc
cld
push
add
mov
and
cwde
xor
fdiv
add
out
and
and
jl
mov
xor
or
ss
or
adc
fistp
cmp
les
stos
xchg
inc
mov
test
call
call
cwde
pusha
or
bound
les
sahf
test
and
je
clc
pop
cmp
cs
mov
(bad)
in
or
call
rcr
clc
ret
sbb
adc
pop
push
inc
sbb
sahf
and
adc
mov
cmps
loopne
in
mov
es
cli
and
sub
aam
imul
data16
ret
rol
jle
adc
jns
mov
rcl
cmp
aas
and
sub
pop
pop
add
test
cld
xchg
adc
test
cmp
rcl
sub
mov
push
mov
dec
xor
pop
fwait
stos
imul
adc
movs
test
pop
inc
daa
adc
jl
push
push
and
adc
or
or
pop
add
gs
mov
cwde
jo
push
inc
jo
pop
adc
aas
inc
sbb
sub
inc
inc
xchg
mov
imul
or
pop
inc
cmp
lock
cmp
push
sub
push
fs
test
and
mov
or
cmp
cs
or
and
sbb
test
add
push
dec
popf
push
inc
sub
push
cmps
push
or
dec
test
sub
popa
ss
and
lods
mov
test
dec
push
and
inc
xor
fld
sub
inc
jle
sub
mov
cwde
push
dec
cs
jnp
xor
sbb
imul
call
outs
or
sbb
xor
pusha
imul
popa
(bad)
sub
add
pop
or
cmp
push
cmps
mov
dec
inc
mov
outs
and
shl
aam
pop
adc
adc
add
call
inc
add
inc
jbe
xchg
pop
or
inc
push
add
mov
or
out
pop
mov
scas
ins
cld
jge
popa
sbb
jno
xchg
mov
es
les
mov
add
bound
sub
cs
add
lock
mov
dec
scas
bound
or
ret
push
jbe
data16
enter
sahf
mov
test
xor
push
out
push
mov
jmp
xchg
and
push
mov
mov
(bad)
fisubr
in
push
test
dec
push
ins
adc
ror
sbb
push
imul
inc
sbb
icebp
and
stos
retf
add
shl
je
pop
and
jl
add
jno
and
pop
push
pop
imul
aam
push
push
pop
cmp
mov
popa
daa
dec
mov
cmp
cs
jo
mov
and
sub
aas
pop
pop
jl
sub
rol
and
or
push
ss
call
push
push
and
imul
nop
rcr
pop
ret
jnp
or
mov
les
adc
pop
aaa
or
mov
mov
mov
test
ss
out
icebp
icebp
movs
xchg
mov
js
cmp
lock
jp
sbb
add
pop
fld
mov
outs
sub
add
psubd
xchg
adc
aas
dec
push
fidiv
pop
or
push
mov
inc
dec
js
inc
add
inc
or
inc
jne
xchg
rol
push
sub
push
idiv
mov
sbb
cmp
or
mov
or
push
add
mov
pushf
bound
mov
jmp
outs
add
sub
and
ja
add
mov
sub
sub
shl
sub
sahf
sub
lods
or
ds
sbb
sub
xchg
outs
add
mov
and
and
or
and
xchg
or
push
iret
ins
add
mov
jo
sbb
dec
outs
cwde
or
adc
rol
sub
cmp
inc
out
add
push
jg
test
add
movs
xlat
and
aaa
xor
cmp
lahf
and
jmp
stos
mov
jecxz
repz
mov
dec
not
inc
mov
xor
aam
adc
add
retf
adc
and
pop
add
outs
outs
mov
add
dec
leave
nop
or
or
(bad)
fwait
xchg
loop
xchg
rol
les
xchg
fistp
inc
xor
pop
retf
aam
int3
test
push
add
xchg
jg
cmp
jg
sub
inc
cmps
test
sub
outs
out
hlt
leave
shl
out
pushf
aam
mov
jle
outs
imul
mov
inc
outs
inc
inc
add
es
dec
push
cmp
push
push
mov
shr
jae
imul
pop
pop
or
hlt
cmps
and
dec
add
sbb
sub
xlat
ins
fwait
sbb
retf
cmps
das
mov
int
add
rcr
xchg
test
inc
lock
or
xlat
dec
in
xchg
inc
and
adc
das
aad
mov
jnp
outs
push
mov
adc
stos
adc
pop
cmp
add
js
inc
or
aaa
mov
sub
ja
sub
adc
dec
imul
call
outs
add
push
push
jne
imul
push
xchg
clc
ss
arpl
inc
(bad)
or
fsubr
add
shl
cs
adc
imul
add
xor
push
call
adc
push
add
xchg
dec
sub
loopne
mov
out
inc
sub
or
mov
sub
or
push
ja
sbb
mov
mov
jnp
and
ins
mov
neg
js
adc
rcr
cmp
nop
fisubr
jb
fbstp
push
push
dec
push
add
fisubr
xchg
xchg
jle
js
imul
add
xor
inc
sbb
shl
adc
retf
bound
mov
mov
das
xor
cmps
test
aam
cld
or
inc
dec
push
pop
mov
adc
mov
adc
outs
push
in
mov
mov
sub
sbb
jne
es
movs
ret
mov
and
inc
cmp
sbb
sub
loope
sbb
dec
retf
sub
cmp
push
adc
jge
or
push
mov
dec
xchg
adc
or
sbb
push
pop
pop
adc
inc
xchg
cmp
sbb
stos
or
add
add
cmp
test
mov
daa
dec
inc
call
sbb
sub
lods
out
and
xchg
outs
jl
inc
xchg
pop
or
or
or
jb
xor
fbld
ror
jmp
gs
test
popa
inc
and
into
aaa
push
leavew
fs
pop
jb
xor
ret
adc
(bad)
sbb
push
or
xor
inc
ret
cwde
or
enter
mov
xchg
mov
(bad)
pop
or
push
pop
inc
jo
aaa
inc
inc
inc
mov
push
and
add
adc
imul
or
(bad)
fadd
fs
adc
adc
bound
xchg
xor
inc
ror
je
inc
dec
jne
mov
ret
data16
cmp
pop
pop
popa
push
ret
pusha
daa
sub
sub
push
je
and
cmp
dec
sbb
(bad)
mov
(bad)
jne
popa
xor
jno
dec
sbb
pop
pop
cwde
retf
and
sbb
or
pushf
lock
popa
xor
(bad)
mov
and
add
imul
mov
add
mov
push
push
mov
xor
inc
inc
xor
or
push
push
and
out
mov
retf
mov
scas
xchg
dec
sbb
arpl
dec
push
ins
sub
and
int3
xchg
leave
push
xchg
dec
xchg
add
and
or
xchg
lea
inc
enter
xchg
rcr
cmp
push
xchg
mov
or
ins
mov
(bad)
push
imul
inc
imul
fs
(bad)
outs
test
sub
push
push
push
retf
push
inc
push
lods
xchg
jne
gs
dec
xor
push
pop
pop
xchg
mov
sub
js
imul
add
test
pop
and
gs
xor
xor
hlt
jp
and
dec
push
and
sub
enter
or
in
pop
add
loope
pop
mov
adc
inc
fmul
mov
dec
push
arpl
inc
pop
or
mov
mov
add
shr
adc
icebp
inc
movs
push
push
fsubrp
mov
sbb
dec
daa
inc
jp
or
pop
sub
test
adc
rcr
mov
es
loopne
pop
xchg
mov
or
int3
mov
and
mov
or
add
inc
dec
add
inc
mov
dec
and
call
mov
clc
sub
lods
mov
add
pop
xor
adc
and
loopne
inc
push
add
leave
and
inc
adc
(bad)
pop
ficomp
dec
xor
data16
retf
and
cmp
adc
and
inc
push
pop
xchg
or
mov
retf
push
inc
cmp
inc
push
dec
out
adc
or
push
push
push
div
inc
inc
xor
jne
(bad)
xor
xor
loop
cmp
dec
and
pop
pop
or
or
mov
jo
es
xchg
loopne
pusha
mov
push
pop
pop
pop
syscall
lds
sar
cld
or
ss
enter
pop
adc
je
mov
cmp
test
ret
jb
test
fdivr
pusha
adc
and
bound
mov
out
mov
js
pop
popa
es
or
gs
and
sub
adc
mov
enter
add
mov
retf
popf
add
out
sub
test
add
outs
inc
inc
dec
fs
fs
movs
cld
dec
push
pop
popa
cmps
mov
dec
pop
jb
stos
movs
mov
mov
or
push
lods
loopne
xchg
mov
ret
xchg
sbb
imul
mov
jb
cli
pushaw
mov
movs
xor
dec
push
and
push
add
adc
out
xor
mov
and
add
push
xchg
adc
push
and
and
pop
add
mov
and
mov
cmp
lock
fisub
loope
push
je
sub
mov
and
sbb
xor
pop
popa
push
mov
in
add
inc
inc
jmp
jo
sbb
outs
das
sbb
dec
data16
mov
adc
cs
pop
bound
cmp
adc
lock
inc
lods
lahf
(bad)
mov
sbb
pop
out
es
in
cmp
dec
and
pop
ins
adc
mov
or
add
pop
push
pusha
jb
push
cdq
xor
daa
sub
les
xchg
sub
inc
xchg
in
fdiv
push
loope
pop
cmps
inc
xchg
pop
pusha
ds
add
pop
mov
push
dec
push
adc
ds
mov
xchg
pop
fs
adc
or
dec
inc
cs
add
dec
imul
inc
shl
sbb
cmp
mov
mov
ror
les
add
inc
mov
pop
imul
and
and
xchg
fidiv
dec
sub
push
rcr
push
sar
les
add
dec
mov
mov
or
adc
enter
pop
adc
stos
pop
hlt
test
add
jo
retf
dec
push
clc
mov
inc
clc
enter
fistp
push
xchg
or
jge
cmp
mov
mov
mul
add
popf
add
fdivr
and
jne
jp
or
and
add
repnz
or
xchg
pusha
sbb
sub
dec
ja
xor
and
movs
push
cmp
stos
adc
retf
sbb
jmp
sub
lea
fistp
inc
mov
add
inc
and
dec
cwde
sub
add
inc
cwde
add
sbb
inc
and
test
push
lods
push
movs
gs
or
fadd
das
add
jp
data16
and
and
movs
push
push
test
and
call
fwait
push
les
add
mov
jno
add
adc
mov
hlt
js
mov
cmp
mov
pusha
sub
div
and
(bad)
push
enter
das
cmps
dec
dec
dec
popa
in
cmps
and
stos
xchg
sbb
lods
ret
lods
ds
inc
sub
mov
daa
jae
sbb
bound
push
push
or
lock
cwde
inc
test
cmp
dec
dec
mov
pop
xchg
mov
mov
dec
inc
mov
sbb
xchg
or
or
add
enter
sub
(bad)
fst
ss
mov
cmp
jb
add
dec
ror
push
and
je
dec
into
jne
(bad)
hlt
and
pop
dec
pop
pop
xor
cmp
fimul
mov
xchg
ja
mov
xor
call
ret
push
arpl
aam
sub
and
sbb
push
mov
mov
adc
adc
inc
sbb
inc
cmp
sbb
or
and
xchg
mov
mov
pop
fs
adc
add
cmp
gs
mov
stos
imul
add
xor
or
cmps
and
js
ins
leave
add
mov
add
repnz
push
push
pop
sbb
test
outs
dec
test
push
adc
dec
xchg
pop
test
mov
mov
inc
cwde
fld
shl
and
xor
mov
fdivr
cmp
ss
mov
and
add
mov
out
cmp
dec
popa
inc
enter
leave
and
bound
push
cmps
dec
push
xor
sbb
and
xchg
adc
push
xor
mov
shl
or
call
mov
push
add
sub
aaa
inc
inc
pop
or
and
adc
xchg
inc
and
adc
push
ror
and
push
and
mov
push
push
or
retf
adc
and
adc
sar
mov
add
jns
and
test
les
cmovbe
inc
(bad)
ja
xchg
adc
mov
and
or
or
inc
push
lods
or
div
cmp
push
outs
retf
rcl
adc
outs
stos
xor
adc
cmps
sub
inc
inc
dec
je
xor
sub
pop
xor
and
je
inc
dec
inc
inc
pop
inc
inc
dec
or
dec
add
mov
and
mov
nop
lock
jmp
push
cmp
daa
mov
jp
push
inc
jo
and
mov
jae
or
xchg
mov
inc
lea
ds
or
add
rcl
xor
push
push
cmp
das
pop
mov
fsub
xor
gs
les
xor
call
push
dec
push
push
pop
add
cmp
push
push
xor
add
dec
inc
jp
adc
jo
and
and
add
in
or
cmp
xor
add
push
dec
sub
dec
ret
ror
mov
cli
mov
add
fs
push
pop
inc
sub
test
ins
jnp
pop
or
sahf
fmul
mov
jb
scas
inc
lock
loop
cld
fsub
aas
inc
pop
add
pop
jg
and
test
(bad)
or
sub
fidivr
leave
add
and
pop
adc
les
cmp
je
and
outs
push
mov
jbe
movs
mov
popa
add
inc
js
or
inc
adc
sbb
pop
sub
sbb
add
ss
xchg
push
mov
or
fs
sbb
add
out
mov
sbb
aam
push
adc
or
xor
movs
jp
xor
push
mov
ret
add
sbb
or
jb
add
sub
iret
adc
sbb
clc
inc
and
xchg
data16
fmul
cs
cvtps2pd
xchg
shl
inc
inc
cs
add
add
scas
lds
and
call
mov
xor
and
fsub
or
pop
pop
popaw
mov
add
or
jns
test
es
es
cmp
pusha
sbb
mov
jmp
or
add
mov
inc
sbb
outs
jb
ror
dec
cmp
aas
stos
push
xor
ds
adc
das
pop
cdq
sbb
dec
pop
xchg
rol
xchg
and
(bad)
aam
(bad)
and
jns
xlat
and
sub
inc
xchg
mov
mov
call
xchg
cs
popa
cvtpi2ps
mov
xor
push
adc
pop
repnz
cmp
add
loopne
and
mov
dec
pop
inc
ins
fsub
pop
add
sub
and
inc
inc
sub
mov
push
pop
js
and
dec
arpl
adc
sub
pop
dec
dec
jg
add
sub
xor
add
mov
sub
(bad)
dec
retf
pop
push
mov
daa
push
mov
or
xchg
iret
cs
xor
aam
xchg
rol
nop
ins
test
imul
jno
push
and
mov
jne
or
inc
push
pusha
inc
push
dec
push
test
iret
imul
ret
mov
outs
add
adc
or
xchg
and
inc
xor
sbb
es
test
outs
xchg
and
mov
cmp
test
push
pushf
and
adc
aas
push
cwde
inc
or
mov
push
inc
mov
movs
and
test
cmc
test
js
and
add
cli
sbb
and
add
sub
xchg
and
inc
ins
test
push
cmp
add
cmps
into
and
push
push
adc
cmp
inc
cmp
sub
ret
popa
or
adc
xor
leave
add
xchg
inc
sub
xchg
add
adc
sub
push
daa
sub
push
iret
mov
pop
pop
push
and
test
mov
inc
and
cmp
dec
test
or
sbb
pop
aam
test
and
(bad)
adc
call
inc
(bad)
xchg
loope
xor
lds
sbb
es
xchg
inc
fisubr
add
cmp
add
stos
test
les
jmp
cmp
cmp
sub
addps
dec
xor
in
push
mov
mov
xor
push
pop
pushf
fs
jmp
into
test
mov
mov
in
fisub
push
cmp
pop
push
popf
xchg
add
call
pop
pusha
sar
cmp
les
call
inc
push
xchg
xor
or
call
enter
mov
fidiv
or
mov
xor
arpl
lods
fs
int3
push
or
push
push
dec
std
sar
push
pop
data16
popf
xchg
(bad)
enter
add
pop
cmp
dec
ror
clc
mov
cmp
dec
inc
lea
popa
leave
or
adc
pop
fsubr
pop
or
inc
rcr
and
inc
inc
xor
into
add
or
push
and
aam
xchg
inc
push
pop
dec
sbb
call
test
mov
and
add
popf
aam
lods
bound
cmp
enter
and
outs
and
loopne
movs
mov
fisttp
sbb
outs
and
push
jl
xor
pop
fmulp
rol
enter
mov
iret
sub
fmul
and
push
push
jnp
xor
xchg
or
mov
and
inc
xor
pop
dec
or
inc
push
sub
mov
sub
mov
sub
test
add
push
mov
add
add
out
push
in
mov
inc
test
xchg
popa
cld
pop
and
dec
pusha
(bad)
(bad)
or
das
js
inc
sub
sub
add
pop
inc
and
mov
ds
(bad)
and
aaa
cmp
out
adc
jb
les
xchg
pop
dec
into
add
mov
push
mov
inc
pop
test
nop
add
mov
cmps
and
sub
xor
retf
push
js
push
inc
rcl
add
inc
out
popf
(bad)
xchg
xor
das
add
add
xchg
mov
sbb
sbb
bound
ins
xlat
inc
adc
(bad)
daa
xor
adc
mov
dec
les
xor
cmp
mov
add
mov
push
and
adc
or
dec
push
ins
sbb
dec
mov
jo
add
and
or
mov
xor
cmp
fs
push
(bad)
fisubr
pushf
mov
adc
je
sub
and
dec
hlt
jnp
sbb
mov
stos
out
pusha
nop
adc
hlt
or
shl
or
sbb
add
jo
adc
push
pop
push
push
leave
pop
aam
pop
add
sub
dec
inc
inc
mov
mov
scas
dec
ror
pop
pop
adc
int3
fisubr
dec
mov
dec
jmp
cmp
mov
fs
add
sub
or
xor
fsub
ins
jo
aaa
inc
mov
cmps
or
mov
ss
jo
jmp
mov
test
cmp
xchg
(bad)
ins
(bad)
scas
movs
xchg
mov
add
mov
add
and
aam
fcom
sbb
jo
sub
outs
add
pusha
sar
add
inc
dec
xchg
js
jp
retf
dec
fs
adc
pop
outs
pushf
and
xor
inc
fbstp
inc
xchg
call
sbb
(bad)
xor
sub
ret
pop
ret
xor
xor
push
pop
add
mov
jmp
mov
jbe
lock
add
add
(bad)
imul
push
jle
and
add
inc
ret
mov
in
or
pop
pop
fimul
sbb
add
mov
add
ds
lahf
pop
add
adc
and
sbb
pop
clc
add
(bad)
cmp
fadd
das
aad
and
inc
mov
push
sub
inc
inc
xor
inc
fcomp
add
sub
jge
cmps
daa
and
and
or
mov
and
cwde
or
add
push
adc
lahf
or
loopne
pop
scas
add
shl
mov
xor
scas
sahf
pop
daa
adc
jb
xchg
inc
xor
js
dec
push
or
pop
add
jle
sar
jb
and
push
push
daa
mov
adc
cmp
inc
cwde
cmp
add
or
ja
jae
xor
or
push
and
push
movs
xchg
loope
xchg
dec
in
and
jmp
push
outs
outs
(bad)
mov
add
or
inc
mov
add
inc
shl
add
dec
jns
and
sbb
xor
or
add
fs
sub
mov
add
pop
imul
cmp
aam
in
cmc
mov
sub
dec
inc
inc
and
(bad)
or
ins
dec
cld
xor
retf
hlt
fs
mov
add
jmp
sub
lods
inc
shl
xchg
or
mov
dec
add
cmp
cwde
mov
in
push
adc
sub
pop
mov
push
mov
mov
xchg
or
cs
jle
push
sub
loopne
adc
and
mov
xor
mov
xchg
mov
je
inc
nop
pop
or
nop
adc
pusha
repnz
adc
pop
inc
xchg
and
pop
data16
add
mov
sub
mov
stos
test
and
inc
sbb
mov
mov
pop
sbb
xor
pop
or
jp
xchg
push
hlt
pushw
sbb
movs
inc
xchg
pop
dec
pop
add
push
pop
pop
jo
cmp
add
add
and
enter
fdiv
push
adc
and
sbb
shl
dec
sub
xor
sbb
(bad)
adc
push
xlat
fldcw
jo
dec
adc
(bad)
ss
repz
nop
sbb
mov
ins
out
adc
jl
jp
test
and
mov
dec
sub
loope
mov
add
xchg
add
mov
cmps
mov
and
cld
mov
jbe
inc
test
cmps
push
jne
and
js
stos
mov
cwde
jo
xor
adc
inc
adc
push
jbe
add
or
dec
mov
into
dec
cmp
loop
pushf
sbb
fadd
dec
call
call
aam
adc
sbb
adc
pop
or
(bad)
fs
pop
imul
cmp
pop
add
adc
jno
push
rcl
add
jp
push
add
pusha
push
xchg
add
or
adc
cmp
push
dec
jle
mov
jmp
mov
push
inc
sub
jnp
inc
inc
push
xor
and
imul
daa
pop
push
push
push
push
xor
add
pop
xchg
(bad)
loopne
data16
add
push
cmp
je
push
sub
mov
sbb
mov
add
add
pop
or
dec
dec
je
jmp
out
outs
in
pusha
sub
mov
dec
or
and
(bad)
fidiv
and
out
outs
mov
and
clc
adc
inc
or
xchg
inc
add
lods
pop
pop
add
je
cmp
push
adc
or
xor
pop
test
xor
mov
ins
jno
xchg
add
dec
sbb
sub
rol
or
or
test
pusha
dec
adc
jb
je
dec
call
test
stos
ret
adc
cmp
pusha
pop
rol
nop
adc
cmp
popa
mov
sub
push
ret
jle
es
pusha
lods
adc
mov
xchg
jp
pop
arpl
bound
enter
aam
or
lods
adc
adc
mov
sbb
adc
js
pop
pop
push
jp
dec
bound
cwde
ss
push
inc
bound
jnp
push
adc
xchg
data16
mov
ror
dec
mov
push
dec
retf
imul
bound
leave
mov
(bad)
cwde
pusha
test
repnz
jl
or
mov
push
stos
scas
retf
add
dec
ja
or
stos
and
jo
bound
dec
mov
jb
or
add
jmp
lock
ds
daa
ret
push
mov
add
fs
push
add
ror
sub
shl
mov
popa
jg
jno
and
add
enter
add
pop
jne
imul
inc
push
or
aaa
in
and
mov
add
and
jge
dec
dec
pop
jae
xor
out
xchg
retf
xchg
or
adc
or
sub
bound
dec
sub
mov
(bad)
fist
sub
movs
xchg
sub
repnz
push
add
inc
lock
push
ds
(bad)
xor
pop
cmp
popa
test
sub
sub
push
pop
(bad)
push
ds
aaa
add
mov
in
gs
ror
dec
loop
js
sbb
dec
retf
mov
dec
aaa
or
add
inc
push
hlt
dec
imul
repnz
adc
inc
ds
pop
mov
lock
inc
rcl
js
add
add
(bad)
mov
jge
sub
test
and
xor
lds
adc
mov
and
or
jo
dec
mov
addr16
inc
and
xor
add
xchg
loopne
lods
xchg
mov
clc
add
cli
jbe
xchg
pop
sbb
mov
daa
sub
adc
push
or
xor
aam
or
add
and
inc
rcl
lods
sar
daa
sub
sub
push
sbb
dec
(bad)
mov
xchg
xchg
scas
sbb
push
adc
pop
xchg
sub
sahf
add
mov
jl
xor
mov
push
into
mov
jmp
pusha
xchg
push
add
inc
add
adc
lods
stos
sbb
and
xchg
mov
add
pop
jae
xor
dec
scas
push
cmp
(bad)
ror
cmps
clc
outs
sbb
fnstenv
mov
or
loop
mov
es
adc
mov
mov
cld
sub
cdq
xchg
push
pusha
int3
or
mov
shl
ss
inc
sbb
inc
shr
pusha
push
add
dec
loopne
sbb
push
jle
xchg
adc
shr
out
nop
loope
sbb
pushf
inc
or
in
fsub
or
dec
adc
xor
pushf
mov
push
xchg
je
mov
push
gs
dec
inc
test
dec
das
and
mov
ja
pushf
(bad)
push
mov
add
mov
xor
inc
inc
and
loopne
daa
push
mov
mov
xor
mov
adc
mov
xor
inc
push
push
pop
pop
cmp
pop
add
cmp
test
mov
dec
add
jb
push
add
mov
add
jb
jg
lea
sbb
sbb
and
in
and
adc
inc
sahf
daa
sub
dec
jns
xchg
cdq
mov
fcmovb
push
pop
add
pop
dec
xor
inc
cdq
pop
xor
add
aaa
daa
pop
shr
sbb
aaa
inc
cs
inc
add
aaa
xor
xor
or
push
cmp
push
adc
dec
dec
popa
adc
lods
loopne
and
mov
xchg
mov
inc
je
lock
sbb
mov
push
push
(bad)
add
jo
mov
or
dec
ja
adc
jo
adc
stos
mov
ret
inc
mov
xor
push
or
idiv
and
ja
lock
dec
push
cmp
adc
push
es
pop
stos
and
mov
and
add
add
gs
(bad)
cs
jnp
and
add
test
and
xlat
sub
ja
outs
inc
or
pusha
fisub
mov
bnd
loopne
and
shl
loope
xchg
daa
and
retf
add
mov
inc
cmp
dec
ins
rol
outs
jg
and
ror
add
cmp
inc
adc
inc
inc
sub
sub
sub
jbe
sbb
int3
pop
sub
hlt
push
sub
and
aaa
pop
cmp
pop
scas
ficom
jp
inc
dec
add
sub
mov
pop
push
mov
loopne
ror
pop
push
add
es
loope
sar
push
pusha
xor
push
dec
sub
push
xor
into
in
and
ins
rcl
or
pop
mov
pop
adc
aas
aam
mov
add
pop
sbb
xor
pushf
ficomp
les
imul
push
mov
test
rol
cs
ret
pop
pusha
dec
sbb
stos
clc
mov
stos
into
jmp
mov
jp
add
les
mov
and
loopne
popa
pusha
push
push
cmp
inc
sar
xchg
sbb
xchg
ror
cmps
add
and
push
mov
mov
out
cmp
sbb
sbb
adc
adc
nop
add
sbb
jns
push
push
mov
mov
pop
push
push
pop
cli
and
or
stos
add
imul
sbb
cwde
xchg
(bad)
(bad)
cli
dec
inc
or
mov
rol
rcl
adc
push
pushf
and
pusha
add
mov
sub
imul
jl
and
das
cmp
(bad)
aaa
shl
lods
out
sub
scas
imul
jmp
pusha
jno
and
es
faddp
mov
mov
cmps
add
jo
sbb
pusha
inc
inc
adc
inc
xchg
inc
and
imul
adc
sbb
add
push
mov
sar
bound
xchg
call
fisub
add
add
dec
data16
or
sbb
ds
aaa
cmp
mov
push
push
push
popa
xchg
mov
and
sbb
and
dec
push
dec
shl
imul
inc
inc
push
add
(bad)
loope
test
inc
inc
bound
loopne
fdiv
lods
sub
add
or
push
pop
pop
popa
inc
pusha
test
jg
push
xor
cs
xchg
scas
add
xchg
cmps
pop
or
fidivr
and
add
add
sub
or
add
imul
or
dec
and
or
inc
inc
inc
test
cs
div
xor
loop
cmp
sub
rcl
sahf
pop
fsubr
cmp
movs
mov
jmp
call
jb
jge
inc
adc
mov
ins
and
push
rol
dec
sbb
xchg
scas
call
cs
fs
pop
mov
adc
fsub
test
sbb
sbb
dec
rol
sub
rol
push
jbe
pop
inc
(bad)
lea
inc
push
(bad)
xor
mov
adc
mov
fs
icebp
das
or
(bad)
xor
push
and
inc
pop
jmp
or
sbb
test
pop
(bad)
add
shl
nop
jp
fist
push
cmp
outs
test
or
arpl
inc
dec
jecxz
imul
adc
adc
(bad)
xor
mov
inc
push
nop
aam
pop
jp
mov
add
scas
sub
out
and
sub
nop
sbb
les
jb
add
cmp
add
add
enter
and
in
je
mov
inc
les
ins
ins
outs
jne
xchg
bound
or
mov
pop
inc
sbb
add
test
es
inc
adc
add
xchg
pusha
test
add
hlt
(bad)
jne
and
ret
not
and
add
dec
test
loop
cmp
ret
adc
fiadd
cmp
or
rol
push
xor
sub
jb
popf
add
ror
xchg
xor
cli
dec
out
xchg
and
push
xchg
call
dec
push
adc
sahf
inc
out
and
or
sub
fs
add
call
inc
daa
push
or
loopne
sub
bound
add
cld
ins
test
xor
pop
call
pop
add
mov
aaa
xchg
test
xor
and
mov
cmp
inc
sub
pop
adc
pop
nop
aam
mov
push
popf
and
lods
and
and
add
and
mov
imul
jo
sar
bound
xor
(bad)
pusha
dec
or
leave
jo
push
or
daa
cs
xor
sub
sub
retf
add
xchg
inc
movs
adc
aam
add
inc
mov
add
ds
mov
in
pusha
xchg
push
lock
xchg
inc
push
ins
sub
in
test
inc
outs
sbb
or
out
js
mov
dec
xor
test
in
add
je
int3
cmps
test
scas
aam
sbb
dec
sub
adc
push
push
popa
dec
add
mov
pop
or
xchg
ins
je
inc
nop
cmp
cmp
pop
(bad)
outs
rol
sbb
adc
mov
imul
das
dec
mov
stos
adc
mov
arpl
pusha
inc
(bad)
lods
mov
dec
outs
dec
push
out
add
adc
and
mov
inc
xchg
and
add
or
sub
adc
adc
fs
out
inc
or
pop
push
inc
(bad)
push
xchg
inc
ds
add
or
shl
and
jb
jmp
adc
push
xchg
xchg
add
es
enter
je
and
adc
or
jmp
xor
iret
add
lahf
sahf
bound
dec
pop
shl
add
cwde
test
cmps
fcom
xor
shr
aam
je
daa
call
inc
inc
pop
addr16
dec
sbb
daa
test
xor
push
push
scas
fisub
cs
push
inc
fld
es
adc
ins
mov
movs
mov
inc
adc
inc
and
fs
ins
push
lock
inc
jg
add
loope
int3
dec
enter
mov
gs
lea
int3
xor
aad
add
pusha
mov
fs
xchg
sbb
cs
jo
stos
sub
mov
and
mov
rcl
imul
sbb
and
jle
push
pop
stos
nop
ficomp
outs
add
adc
xor
loop
add
pushf
lea
push
popa
pop
ins
(bad)
jnp
mov
adc
inc
aam
or
xor
pop
cmps
loopne
jo
fmul
add
add
in
loope
and
inc
dec
inc
adc
iret
or
xor
xor
outs
push
jb
arpl
arpl
add
aas
add
add
bswap
call
and
adc
adc
mov
popa
mov
mov
jp
sbb
dec
adc
cdq
xchg
xchg
sub
nop
sbb
pusha
pop
fimul
or
push
in
adc
call
xchg
and
pop
sbb
cmp
inc
dec
push
imul
cmp
push
clc
es
and
and
xor
lods
mov
push
xlat
test
xor
pop
push
mov
cli
jecxz
hlt
imul
inc
inc
dec
sub
test
jb
inc
mov
sbb
and
pop
mov
xor
cmp
ins
cmp
or
test
xchg
xor
stos
adc
or
cmp
inc
int3
xor
sub
cmp
cmp
and
and
inc
add
mov
adc
pop
inc
dec
dec
dec
mov
pop
or
push
sub
mov
mul
jbe
mov
and
fsub
mov
call
and
ds
push
pusha
inc
jb
add
adc
push
out
imul
push
stos
sbb
sub
jb
mov
js
push
movs
les
cmp
push
xor
add
and
das
inc
cmc
mov
gs
rcr
adc
xor
push
pop
mov
push
push
dec
into
lea
inc
cmp
outs
pop
inc
ret
sbb
jo
shl
pop
or
jb
and
or
loope
mov
aam
dec
or
ret
sub
mov
cmp
and
xchg
inc
bound
jle
test
nop
xor
dec
enter
fdiv
sub
inc
dec
push
jmp
sbb
aam
xchg
mov
xchg
add
or
dec
or
and
or
test
or
pop
adc
dec
add
push
(bad)
sub
movs
pusha
add
mov
pop
dec
cli
jmp
test
dec
mov
inc
iret
retf
test
js
push
push
mov
mov
or
push
hlt
test
ret
pop
shl
cmps
pop
fs
add
rcl
xor
(bad)
and
or
add
pop
push
pop
and
in
ss
cmp
mov
iret
push
mov
(bad)
xchg
mov
adc
jmp
test
data16
pop
imul
shr
dec
and
nop
sbb
mov
loopne
jge
(bad)
mov
gs
mov
dec
xchg
cwde
mov
pop
cmp
test
xor
adc
mov
add
jbe
mov
or
test
test
and
inc
cmp
xor
mov
call
mov
jl
sbb
dec
push
pop
iretw
and
popa
xchg
mov
xchg
push
push
push
add
xchg
cld
fdiv
test
push
inc
(bad)
ins
cmp
sbb
loopne
sub
sub
add
fcom
test
and
imul
ror
dec
pop
rol
inc
pop
cdq
push
push
pop
sub
stos
push
inc
inc
cmps
push
push
push
pop
arpl
push
push
fisub
dec
jmp
lahf
mov
dec
call
and
pop
call
inc
retf
or
and
test
mov
xchg
dec
add
xor
inc
lods
xchg
inc
add
punpckhbw
cli
in
add
loope
dec
add
dec
xor
shl
movs
jne
pop
ds
rol
and
sub
mov
clc
jne
add
(bad)
shl
mov
add
or
ret
fsubr
dec
mov
pop
sbb
arpl
jge
outs
lea
dec
nop
loop
adc
ins
mov
mov
sub
jmp
cwde
adc
add
push
adc
and
mov
inc
lea
or
add
jecxz
xchg
sbb
xor
push
dec
js
into
pop
xor
jo
push
cwde
(bad)
cwde
or
and
xchg
mov
scas
fwait
(bad)
cs
and
sbb
sub
xor
add
inc
mov
adc
sub
sub
out
sbb
or
add
add
jo
shl
and
and
fmul
pop
fs
adc
lods
cwde
ret
inc
cmp
mov
js
dec
push
fwait
adc
mov
mov
sbb
bound
mov
inc
inc
sbb
jns
sbb
cmps
xor
dec
xchg
outs
js
adc
test
mov
sbb
xor
push
push
nop
call
xchg
pop
ret
mov
adc
sub
movs
enter
aas
inc
push
dec
bound
cmps
mov
dec
movs
inc
movs
and
cmp
mov
sub
clc
xor
je
or
adc
ins
aas
ror
mov
dec
mov
jbe
sub
ins
pop
inc
pop
cmps
lds
ficom
adc
mov
push
and
in
mov
add
cdq
or
push
ins
and
push
xor
out
cmp
jmp
icebp
inc
dec
push
pop
xchg
data16
push
xchg
adc
inc
rcr
add
jp
mov
adc
sub
call
or
enter
(bad)
stos
inc
pop
jnp
dec
dec
push
(bad)
mov
dec
add
sbb
dec
dec
sbb
fidivr
sbb
jl
mov
dec
les
add
push
mov
pop
je
repnz
cmp
dec
and
sub
push
mov
sbb
and
push
imul
pushf
sub
jp
adc
sub
pusha
and
(bad)
add
leave
call
sbb
scas
add
mov
sbb
adc
xor
cdq
or
xor
xor
sub
inc
(bad)
adc
add
pop
xchg
add
mov
enter
push
stos
dec
sbb
call
sub
adc
and
inc
inc
imul
and
xchg
and
and
shl
jl
xor
sbb
and
movs
and
jo
and
xor
add
mov
es
and
(bad)
and
mov
fsubr
test
movs
and
xchg
push
dec
and
inc
rcl
mov
sub
ret
sar
out
(bad)
(bad)
call
pusha
add
ret
test
ss
adc
fstp
or
dec
dec
add
push
mov
movs
test
retf
scas
cs
lock
mov
mov
enter
dec
add
mov
push
dec
sub
mov
add
mov
stos
push
sbb
mov
sbb
aam
xor
dec
sub
inc
push
pinsrw
sub
fs
and
mov
clc
jo
movs
movs
pop
and
xchg
mov
pop
jp
and
pop
xchg
scas
mov
test
cmp
xlat
sub
call
daa
and
xchg
pop
rol
cmp
push
dec
push
sbb
ss
mov
cmp
and
int3
mov
test
mov
shl
loop
and
xchg
les
outs
inc
and
adc
aam
add
jge
or
add
sub
push
push
das
dec
dec
push
pop
outs
cmps
jb
push
push
sub
pop
add
mov
xor
in
arpl
push
push
push
add
sbb
test
add
in
push
mov
dec
es
xor
push
jp
push
es
mov
dec
mov
outs
mov
sub
adc
or
in
test
and
xchg
inc
gs
outs
xlat
inc
xchg
or
adc
add
push
rcr
ret
aas
inc
bound
inc
mov
imul
pushf
and
sbb
and
rcr
mov
test
add
and
lock
jmp
pop
gs
inc
pusha
xlat
test
call
loope
add
sbb
jl
dec
dec
jecxz
pop
cmps
add
rcl
push
pusha
and
int
xchg
adc
loopne
bound
pop
mov
mov
pop
push
sub
jp
mov
and
and
and
cmp
test
push
push
mov
xor
lock
pop
xchg
sub
cmp
fs
shl
mov
pop
add
ins
lock
xchg
ret
ins
lods
out
sub
mov
into
jo
sub
bound
loope
rcl
xchg
inc
sbb
fdivr
dec
sbb
mov
ds
dec
fld
bound
das
or
aam
rol
adc
dec
sub
inc
movs
mov
xor
inc
adc
pop
jb
call
adc
sub
push
mov
xor
into
ror
pop
mov
push
into
inc
dec
pop
pop
popa
lahf
or
add
sub
dec
fsub
mov
jle
popf
pusha
dec
push
neg
inc
add
adc
inc
mov
mov
jl
push
and
inc
inc
jo
sbb
sbb
sbb
jl
push
fs
jae
das
nop
jo
das
xchg
data16
inc
add
(bad)
push
retf
cdq
sbb
mov
pop
ins
lods
fdiv
add
shr
jne
hlt
imul
inc
push
das
cmp
ss
push
pop
aam
aas
mov
inc
push
pop
bound
dec
pop
add
(bad)
imul
retf
push
pop
dec
fs
and
rcr
rcr
add
inc
or
push
jo
xor
sbb
js
xor
lahf
ins
dec
dec
inc
dec
sub
hlt
test
inc
sbb
test
shl
jge
loope
movs
mov
add
adc
xchg
push
sahf
dec
aaa
cmc
or
mov
neg
jb
pop
hlt
or
popa
nop
and
mov
adc
jno
jno
nop
push
pop
or
mov
xchg
add
and
inc
dec
repnz
xor
ins
jne
add
inc
pushf
call
push
dec
and
push
stos
xchg
mov
(bad)
xor
dec
push
pop
movs
push
das
xor
push
enter
rcr
add
sbb
and
and
or
and
push
or
hlt
sbb
loopne
fsub
sbb
sub
inc
sub
push
cmp
dec
mov
cli
ja
test
inc
push
push
dec
cmp
add
sub
fidivr
dec
les
cmps
and
pop
pop
je
dec
and
cmp
adc
adc
and
mov
pop
adc
xchg
sbb
cwde
and
mov
and
cmp
in
push
test
adc
xchg
push
push
or
xor
aas
or
mov
jge
dec
or
xchg
jo
dec
fadd
xchg
mov
mov
adc
push
xor
out
cli
jo
xchg
inc
lods
fimul
dec
cmps
shr
push
movs
push
popa
push
and
les
sub
movs
and
add
push
add
pusha
xchg
aas
pusha
imul
nop
pop
aaa
mov
nop
sbb
sub
ror
in
add
(bad)
cmp
xchg
and
mov
inc
shl
xchg
cmp
pusha
imul
lds
cmp
les
sbb
sub
mov
aaa
mov
scas
test
adc
dec
sbb
jne
adc
imul
jmp
test
xor
xchg
adc
out
iret
add
add
and
xor
je
das
cmp
push
xchg
inc
fisubr
sbb
pop
outs
popa
loope
dec
jl
or
test
nop
push
sbb
xor
pushf
jle
ins
inc
mov
movs
mov
and
push
sub
scas
bound
pusha
enter
mov
pushf
dec
dec
push
or
imul
mov
cmp
and
sbb
hlt
(bad)
sub
mov
(bad)
jp
xchg
or
cmp
add
dec
das
dec
dec
mov
xor
push
sbb
cmp
push
push
pop
jge
xchg
push
les
adc
rcr
bound
js
adc
push
xchg
pushf
adc
pop
xor
lock
sbb
int
push
into
gs
inc
or
cmp
test
stos
sub
and
mov
dec
and
mov
mov
fild
popa
add
mov
and
aas
in
loope
add
push
xor
xor
ror
xor
call
outs
mov
cld
add
dec
out
or
pop
inc
push
rol
inc
sub
movs
data16
push
cdq
shl
shr
out
mov
adc
pop
mov
lock
and
jp
xor
loop
bound
push
push
sub
push
pop
mul
movs
push
sbb
add
xor
add
clc
jb
push
sbb
stos
and
add
push
mov
dec
or
loope
jnp
cwde
adc
mov
push
out
and
jbe
in
ss
arpl
inc
xor
pop
in
ins
or
sbb
mov
jl
sbb
push
outs
mov
cmp
test
and
inc
inc
push
and
test
out
cmp
pop
sub
js
jo
add
jl
movs
sub
jp
jo
xchg
mov
sub
out
ret
sub
add
xchg
aam
sahf
and
xor
or
cmps
mov
sbb
cmp
inc
push
js
adc
outs
jbe
iret
sub
dec
test
cwde
push
mov
push
adc
inc
mov
pusha
sub
jo
push
pop
adc
call
xchg
xor
pop
nop
add
retf
add
dec
in
adc
sub
lock
add
jo
and
lods
cmp
xor
popa
popw
inc
test
pop
inc
pusha
test
xchg
out
cmp
call
sub
inc
sub
pop
inc
mov
or
lock
pop
data16
loopne
sbb
sub
cs
xor
jp
and
mov
cdq
and
push
inc
ins
ins
out
push
push
add
cwde
call
adc
cmp
sub
xchg
imul
nop
xchg
push
xchg
pusha
and
push
inc
dec
and
push
or
pop
sub
push
jmp
inc
adc
cwde
in
sub
pusha
es
pop
xor
syscall
xchg
int3
push
xchg
inc
pushf
cmp
xchg
loopne
je
cwde
sub
(bad)
and
ja
adc
xor
xchg
push
pop
data16
out
or
scas
mov
pop
iret
jns
cdq
sub
push
dec
push
and
fadd
icebp
add
and
bound
mov
add
xchg
pop
lea
mov
sbb
or
push
or
test
outs
jl
and
add
adc
test
aas
es
sbb
(bad)
sbb
lahf
adc
sbb
rcr
mov
pop
es
inc
cld
xchg
add
data16
add
add
mov
add
jb
mov
adc
or
xlat
ret
adc
repnz
test
shr
out
and
test
xor
stos
add
pop
iret
and
dec
adc
pop
mov
xchg
add
shl
fwait
(bad)
aas
fisttp
inc
sub
sahf
inc
sub
bound
jo
into
sbb
stos
and
bound
inc
and
imul
ins
call
or
jne
ret
outs
retf
aam
sbb
fadd
adc
pop
pop
call
popa
push
and
mov
pop
(bad)
and
push
or
or
mov
xor
mov
xor
xchg
ja
daa
jg
adc
push
jp
push
loop
xchg
in
xchg
cld
jae
push
es
(bad)
cmp
inc
dec
pusha
loope
sub
pop
sbb
call
cs
scas
push
adc
push
fbld
and
dec
adc
mov
je
int3
and
(bad)
rol
add
lods
push
inc
and
and
test
mov
mov
je
mov
mov
je
jbe
inc
sub
xchg
xchg
xchg
rcl
jnp
sbb
pop
sub
jp
imul
jbe
push
clc
sbb
inc
mov
and
and
repnz
outs
and
mov
inc
outs
or
mov
(bad)
push
clc
add
mov
jns
mov
mov
add
xor
mov
adc
and
cmp
loopne
arpl
and
inc
leave
test
sbb
or
pop
or
sub
outs
and
adc
les
or
das
loop
xor
fild
xchg
pushf
xor
push
and
inc
push
xchg
fdiv
arpl
mov
sub
int3
sub
mov
xchg
icebp
mov
xor
xchg
mov
stos
dec
cmp
adc
dec
loop
mov
xchg
ret
shl
bound
and
push
and
mov
push
cmp
je
popa
push
ds
sbb
push
mov
add
mov
add
fs
movs
add
push
sub
add
inc
xchg
pusha
xchg
fmul
add
mov
cmps
xor
ds
cwde
and
push
adc
sub
push
sub
pop
daa
xchg
adc
call
xor
mov
add
popa
addr16
or
mov
jo
mov
and
push
cmps
cmp
adc
sub
xchg
mov
ret
push
xchg
adc
shl
add
dec
push
mov
adc
bound
jp
outs
pop
mov
xchg
mov
adc
xchg
and
sub
(bad)
pop
xchg
cwde
push
pop
and
lods
cmp
push
movs
pop
xchg
adc
es
and
inc
into
je
mov
popa
daa
inc
sub
rol
pop
arpl
sbb
push
pop
aam
xor
fild
sub
push
dec
dec
and
lds
add
jne
add
nop
ret
call
into
lea
sub
add
dec
arpl
push
and
test
push
or
ret
dec
sub
sub
and
outs
jmp
inc
jl
mov
and
(bad)
ins
add
and
inc
lods
push
and
test
push
push
nop
nop
aam
add
adc
loope
idiv
add
adc
cs
or
inc
or
outs
cmps
or
xchg
sbb
cwde
add
inc
jb
or
mov
mov
sbb
and
dec
pop
cmp
pop
or
sub
adc
or
dec
xor
dec
test
inc
dec
dec
cmps
pushf
pop
xchg
inc
cmp
dec
and
sub
mov
mov
movs
or
in
cs
pusha
inc
movs
push
add
and
jmp
push
and
inc
push
inc
inc
add
arpl
dec
xchg
cdq
sbb
or
in
inc
xchg
fimul
div
popa
cmp
pop
push
push
pop
jb
and
mov
pop
add
jo
sbb
add
movs
push
lods
xor
push
test
xchg
dec
add
clc
cmps
sbb
inc
imul
or
mov
adc
ds
inc
lods
pop
add
mov
fidivr
inc
inc
jno
lods
ret
cs
shl
sub
or
adc
add
or
and
cs
cmp
ret
inc
sub
adc
and
push
or
pop
fstp
push
sbb
mul
add
add
outs
dec
dec
das
add
jmp
jb
sbb
neg
cmps
loopne
inc
cmp
shl
push
push
push
sub
dec
sbb
pop
scas
add
pop
push
ficom
or
dec
enter
ret
sub
mov
fadd
fdivrp
xor
inc
inc
into
pop
gs
sbb
inc
xchg
bound
push
test
add
cmp
mov
call
adc
inc
(bad)
cmp
xchg
mov
inc
xor
cmp
cmps
xor
mov
add
aas
cmp
sar
cwde
aad
enter
pop
sub
inc
jg
mov
or
push
jo
nop
push
inc
jmp
dec
add
pop
je
jge
popa
mov
inc
mov
inc
push
pop
mov
add
and
fnstenv
push
mov
ret
js
cmp
mov
sbb
push
and
jo
xor
xchg
jno
sub
and
or
add
call
movs
cmp
xor
jo
fbld
out
mov
call
pushf
inc
ret
inc
je
sbb
inc
or
es
push
push
popa
mov
popa
xchg
dec
lods
pop
jno
push
push
xchg
(bad)
out
push
movs
out
pop
iret
adc
lods
inc
cmps
xchg
test
lods
inc
ret
aas
mov
sub
xor
and
sbb
pushf
mov
push
dec
js
xor
aas
add
adc
add
cwde
hlt
in
or
push
add
cmps
xor
es
adc
xchg
inc
rcl
mov
pop
ja
adc
out
push
data16
push
or
mov
xor
pop
mov
sub
push
fdiv
sub
push
(bad)
sbb
push
sub
dec
adc
fsubr
add
push
or
adc
push
je
push
and
push
push
pop
pop
pmulhw
mov
add
add
or
inc
pop
sbb
mov
inc
dec
iret
shl
test
pop
stos
ret
mov
and
inc
gs
push
add
iret
sub
sbb
test
mov
push
clc
mov
pop
xor
les
inc
pop
or
add
pusha
xchg
and
push
add
js
sub
icebp
adc
add
sub
add
or
mov
cwde
adc
adc
xchg
and
adc
xor
dec
inc
sub
and
jbe
or
xor
mov
loopne
jne
pusha
dec
jmp
adc
fs
add
mov
movs
jle
sub
push
add
dec
retf
dec
sbb
pop
mov
clc
fsub
inc
or
sbb
push
add
add
and
mov
or
xor
cli
pusha
push
xor
popa
xchg
call
mov
inc
push
or
into
ds
add
pusha
cs
push
add
cmps
mov
or
or
rcl
pop
out
pop
ins
pusha
adc
push
push
enter
xchg
add
dec
ins
cmp
xor
inc
dec
sub
inc
xchg
outs
cmp
retf
adc
addr16
mov
cmp
inc
jbe
sar
pop
mov
aaa
add
or
stos
pop
add
push
test
ss
jmp
jb
sub
add
(bad)
rcl
xor
mov
pusha
push
sbb
call
sub
outs
dec
inc
dec
jmp
add
and
inc
pushf
inc
add
adc
mov
sub
mov
xor
add
cmp
add
cmp
push
mov
xor
jp
and
and
dec
mov
add
push
adc
pop
inc
lods
nop
jmp
xchg
pop
mov
push
nop
xor
mov
dec
mov
data16
pushf
add
mov
or
cs
fisubr
dec
mov
xor
inc
jb
jo
mov
push
xchg
mov
inc
out
imul
add
dec
gs
mov
push
jno
push
jnp
sbb
inc
or
jg
shl
daa
and
dec
dec
inc
jmp
xchg
and
jb
pop
cs
mov
mov
loope
cmps
fsubr
(bad)
rol
mov
outs
cmp
jbe
adc
jl
or
push
pop
sub
sbb
sub
or
pop
es
or
mov
adc
push
push
dec
div
xchg
push
pushf
mov
xchg
nop
xchg
nop
sbb
xchg
pop
xor
cmp
or
pop
sbb
adc
or
(bad)
les
std
adc
adc
dec
pop
and
aam
dec
push
push
bound
test
xchg
inc
shl
inc
sbb
pop
mov
adc
loope
leave
fs
(bad)
jmp
les
pushf
push
lock
and
daa
add
or
add
cmps
xor
mov
and
test
mov
or
rcr
ja
cwde
js
push
sub
push
les
mov
xor
or
(bad)
aaa
push
ficom
add
mov
ret
rcl
xor
and
cmp
pop
add
push
call
call
and
cwde
popa
inc
jp
enter
and
push
sbb
xchg
sub
mov
adc
and
or
les
out
add
push
xor
push
add
adc
outs
inc
dec
js
or
push
hlt
nop
push
push
mov
push
dec
push
movs
push
sub
mov
sub
dec
or
rcl
pusha
inc
push
push
or
ret
lock
mov
and
popa
outs
outs
out
xor
gs
clc
imul
(bad)
inc
add
loopne
push
sbb
adc
jle
sub
or
and
sub
xor
fimul
and
push
sub
sub
xchg
adc
lods
sbb
ret
fidiv
fadd
ins
push
or
or
jp
ins
cmp
or
push
or
push
dec
lock
or
add
adc
xchg
fwait
jp
mov
lock
and
dec
mov
popa
xor
mov
call
outs
or
adc
sbb
aam
add
inc
sub
push
and
sub
bound
adc
push
js
pusha
adc
(bad)
gs
push
xor
and
jne
loopne
and
xor
cli
sub
sub
push
jp
lods
cmp
nop
rcl
xor
push
pop
imul
stos
jle
add
gs
dec
rol
cmps
xchg
jmp
into
push
inc
push
add
adc
dec
mov
cmp
pushf
ret
xor
adc
sub
dec
fmul
and
sub
jo
shl
ror
add
ds
movs
and
or
add
leave
rol
pusha
or
sub
add
dec
mov
call
es
and
js
cmps
gs
adc
test
dec
popa
cmp
push
adc
mov
xchg
xor
cmp
call
ret
jmp
mov
push
jnp
jb
xchg
movs
xor
or
add
or
sub
mov
pop
add
lods
or
js
push
inc
pop
xchg
scas
pop
scas
add
dec
push
push
mov
sub
pusha
xchg
mov
movs
and
push
cmps
push
inc
inc
or
out
add
sbb
add
ror
or
outs
js
jg
or
dec
jnp
pushf
add
add
and
push
adc
sub
jo
adc
call
cmp
xor
mov
adc
push
cs
jno
outs
add
push
imul
shr
push
push
or
js
inc
mov
and
adc
outs
inc
add
loop
and
xor
mov
mov
add
outs
add
(bad)
enter
dec
mov
dec
push
call
ins
ins
ror
dec
or
push
push
jo
jge
adc
bound
jne
adc
or
push
or
shl
xor
stos
cmps
sub
fidiv
and
inc
mov
(bad)
push
or
inc
push
add
test
inc
aas
lods
cmp
and
fdivr
push
or
xchg
rol
mov
push
add
jnp
sub
xor
sahf
push
pop
mov
dec
js
mov
cmp
cmp
and
add
test
or
icebp
xor
dec
lock
add
xor
add
mov
fcmovb
lods
sub
daa
add
cmp
adc
push
or
sbb
dec
or
add
pop
sub
sub
and
xchg
ror
cmp
pop
scas
push
pusha
addr16
push
xor
or
cmp
test
xor
data16
outs
aas
and
pop
mov
add
fcomp
xor
push
dec
cmps
rcl
inc
je
cmp
je
dec
sbb
push
mov
add
cmp
push
add
das
mov
add
(bad)
fcom
shl
mov
xor
or
push
and
xor
lea
iret
cmp
cmp
push
arpl
xor
mov
sub
test
and
popa
sub
cwde
adc
sub
dec
rol
add
add
pop
jne
inc
dec
movs
sbb
in
loopne
inc
rol
jg
adc
push
pop
enter
iret
je
or
gs
dec
jne
ins
or
pop
dec
lods
inc
mov
cmp
push
test
(bad)
and
mov
fwait
sbb
loope
push
ror
xor
das
add
sbb
lods
and
or
jnp
xor
add
ror
clc
cmps
sbb
cmp
and
ss
shr
lahf
pop
add
nop
xor
gs
lods
fsubr
out
sbb
xchg
retf
xchg
mov
push
mov
inc
xor
dec
and
sbb
dec
add
je
mov
sbb
or
mov
push
or
sbb
sub
jb
adc
sub
stos
and
sub
pop
sar
add
push
movs
and
mov
mov
pop
or
jb
ror
adc
mov
in
cdq
add
pusha
push
rcl
ret
mov
nop
sub
push
in
xor
pop
ficom
jp
lds
pop
stos
sub
cmp
xor
mov
lea
inc
lods
jnp
xchg
les
cld
or
jmp
inc
je
push
dec
outs
inc
jl
xor
or
push
inc
mov
adc
aaa
cmp
sub
daa
xor
xor
adc
jg
cwde
add
mov
add
add
shl
pusha
sub
test
inc
call
mov
xchg
fcom
les
mov
bound
loope
pusha
sub
ficomp
push
dec
bound
pop
push
sub
mov
jo
jo
mov
xor
mov
cdq
ficom
mov
dec
jbe
cmps
or
sub
pusha
je
pop
jb
inc
or
add
lods
add
ins
xchg
add
jo
ror
scas
add
div
daa
popa
retf
cdq
add
pushf
or
or
or
push
enter
dec
shl
lods
iret
clc
loopne
test
les
jns
fcom
stos
and
xchg
add
stos
lock
(bad)
pop
add
cmc
inc
inc
pop
aad
dec
xchg
xor
pop
shl
ss
xor
sub
retf
test
dec
mov
push
push
and
push
push
sub
test
or
popa
adc
in
retf
pop
or
xor
dec
adc
adc
mov
enter
add
xor
xor
int3
add
pop
popa
outs
into
out
push
dec
xchg
xor
jae
add
and
xchg
lea
inc
cmp
mov
push
push
add
(bad)
sar
popa
test
pop
(bad)
add
rol
pop
enter
sbb
pop
push
mov
sbb
dec
test
add
push
data16
clc
xchg
imul
cmp
cmp
push
fwait
inc
inc
repnz
cmps
pop
and
sub
mov
jge
sub
sub
lods
mov
cmp
xor
mov
mov
cmp
inc
or
and
or
addr16
push
adc
or
xor
push
inc
add
ins
test
nop
xchg
lahf
xchg
inc
add
or
adc
sahf
and
popa
test
sbb
adc
push
add
dec
call
loopne
xchg
or
sbb
je
lds
sub
inc
push
inc
cs
outs
movs
inc
sub
test
not
inc
lea
jbe
xor
(bad)
enter
inc
xor
pop
sbb
dec
daa
push
push
cmp
mov
je
les
sahf
pop
cwde
dec
add
bound
dec
(bad)
push
push
call
mov
pop
xchg
dec
mov
add
(bad)
aam
imul
mov
(bad)
enter
outs
xchg
add
add
and
push
outs
fwait
and
inc
dec
daa
add
add
add
inc
dec
inc
(bad)
mov
adc
jp
xchg
or
adc
adc
push
add
and
pop
and
jo
sbb
xchg
enter
popa
ret
jle
loopne
inc
test
xchg
dec
cmps
pop
(bad)
jnp
dec
mov
jp
dec
jmp
push
inc
inc
das
sbb
adc
xor
xchg
sbb
cdq
xchg
rol
mov
ja
int
mov
bound
pop
and
add
scas
push
add
xchg
xor
add
aam
loop
sub
and
mov
inc
bound
mov
or
les
push
cmp
ret
jmp
and
or
mov
xchg
sbb
adc
ds
data16
xchg
dec
dec
popa
or
or
jl
inc
leave
sub
movs
rcl
dec
imul
add
sbb
mov
sub
dec
dec
dec
push
pop
retf
bound
and
aam
in
retf
dec
jb
jle
xchg
mov
les
fadd
movs
es
add
sub
push
sub
sbb
sub
rcl
add
or
mov
imul
pop
adc
jo
pop
xchg
add
mov
xor
xor
mov
add
and
es
prefetchwt1
bound
mov
icebp
pop
scas
pop
or
and
xchg
jp
ins
mov
bound
test
adc
push
jle
hlt
or
loop
cmp
les
xor
rcl
mov
rol
rol
lock
or
rcl
sub
pop
xor
inc
push
test
mov
push
xor
xchg
xchg
push
mov
je
sbb
scas
js
inc
mov
and
inc
sub
or
add
or
dec
(bad)
jle
or
clc
outs
pop
cmp
(bad)
bound
test
jl
cmp
imul
and
outs
cs
cwde
add
movs
jge
adc
sub
jle
sub
mov
nop
pop
pop
lods
pop
repnz
arpl
jmp
or
or
movs
sub
adc
aam
(bad)
shl
and
(bad)
jle
or
jl
test
or
xor
arpl
loop
mov
shr
loopne
or
dec
dec
sbb
nop
cmp
add
mov
and
jb
pop
mov
inc
sub
xchg
ins
mov
data16
push
inc
inc
add
xchg
dec
pushf
lods
xor
push
iret
xchg
adc
sbb
adc
shr
(bad)
cmc
adc
add
or
test
add
cmps
push
and
mov
inc
or
mov
shr
ds
ret
cmp
mov
repnz
ins
cs
mov
add
adc
or
int
pop
fimul
dec
dec
dec
outs
mov
inc
adc
sbb
mov
sub
mov
cmps
call
rcr
shl
adc
ds
je
inc
inc
dec
push
or
mov
aas
fadd
adc
or
add
jl
sbb
pop
bound
add
xor
add
xchg
and
daa
mov
add
pushf
mov
dec
push
push
inc
bound
arpl
mov
jp
mov
and
fmulp
mov
xchg
inc
and
add
fisubr
pop
jo
sbb
sub
rcl
adc
push
adc
stos
add
push
push
and
add
push
ror
lock
into
aas
or
data16
inc
or
bound
in
pusha
ror
dec
inc
dec
lock
pop
push
dec
dec
adc
jo
adc
ret
outs
mov
push
push
rol
sub
jb
jmp
fs
mov
test
or
mov
push
mov
jne
add
fisub
aaa
push
push
cwde
push
or
xchg
pop
mov
xchg
mov
test
inc
jp
pusha
adc
jge
xor
test
jb
adc
push
push
sbb
mov
mov
dec
push
pop
lock
dec
add
inc
inc
or
or
dec
add
or
shl
jmp
jl
je
es
or
push
and
aaa
inc
push
rcr
aas
mov
ficom
push
push
cs
clc
out
mov
add
push
cmp
xchg
pushf
jp
mov
and
xchg
bound
push
out
sub
cmp
popa
daa
or
mov
rcl
fdivr
mov
add
mov
xor
dec
ficom
cmp
pop
inc
sbb
adc
add
inc
xor
push
push
adc
cs
push
nop
inc
push
sbb
adc
sbb
into
scas
dec
ror
jbe
add
adc
aam
out
add
loope
ins
les
adc
rol
movs
es
and
inc
shl
and
(bad)
pusha
daa
pop
adc
rcr
and
(bad)
jae
push
mov
push
shl
and
mov
inc
ins
ja
mov
inc
xor
xchg
adc
mov
mov
dec
add
and
adc
pop
nop
adc
fidiv
mov
mov
cmps
add
dec
or
ds
add
(bad)
add
imul
xchg
pop
bound
clc
xchg
and
jae
inc
pusha
movs
push
xor
xchg
int3
xor
and
add
dec
ss
add
inc
xor
stos
test
xlat
sbb
xchg
mov
or
ficom
mov
pop
es
xor
adc
push
dec
xlat
push
push
fdiv
push
retf
xor
xor
hlt
adc
dec
dec
or
retf
inc
les
xlat
add
push
test
push
cmp
mov
push
jl
adc
popa
pushf
daa
sub
add
dec
dec
retf
pop
sbb
dec
sub
push
dec
dec
or
sub
rol
movs
xchg
or
jb
bound
xor
jb
xor
dec
dec
pop
dec
sbb
push
cmp
sub
push
or
dec
pusha
xor
jne
xor
push
dec
sub
xor
in
adc
adc
sbb
sbb
adc
ret
shl
inc
or
jp
and
sub
mov
push
bound
and
pop
mov
ret
hlt
push
push
ret
rcl
xchg
mov
dec
and
test
adc
retf
push
add
dec
sub
lods
push
inc
push
shl
sbb
(bad)
jl
sbb
jmp
das
cmps
add
mov
dec
es
mov
sbb
outs
jle
scas
inc
test
xor
jne
loopne
and
sbb
cs
mov
stos
xor
or
test
or
xchg
fst
pop
fadd
loop
sub
mov
ret
jecxz
sahf
inc
dec
push
pop
dec
add
inc
sbb
push
jb
add
es
mov
jno
scas
mov
jl
xchg
popa
xchg
dec
pop
test
xchg
mov
mov
xchg
mov
push
inc
xchg
fs
xchg
call
retf
jp
pop
adc
and
inc
inc
dec
dec
pop
push
pusha
popf
test
movs
dec
push
loopne
push
or
es
outs
mov
and
cld
xor
inc
inc
fld
inc
data16
and
and
ret
leave
adc
out
pop
adc
shl
jp
or
fmul
cmp
pop
dec
sub
and
adc
nop
dec
mul
or
add
or
mov
pusha
sbb
ret
xor
pop
lds
add
cs
and
mul
sbb
hlt
in
bound
ds
repnz
mov
push
mov
idiv
dec
add
aam
pusha
push
dec
pop
pop
lahf
clc
and
dec
hlt
ins
and
dec
add
and
or
xchg
add
add
das
(bad)
mov
inc
dec
or
push
dec
cs
cmp
add
adc
cmps
xchg
inc
(bad)
clc
lods
push
test
pop
sbb
cmp
push
mov
add
sbb
test
inc
sub
enter
pusha
mov
bound
js
inc
push
adc
sub
adc
cmp
jl
dec
add
xchg
mov
loopne
and
fs
push
loopne
jp
outs
push
add
mov
mov
call
inc
mov
push
outs
pusha
je
and
xchg
sub
add
xchg
stos
jp
mov
loopne
adc
xor
mov
test
aaa
sbb
dec
xor
add
mov
dec
inc
add
(bad)
mul
imul
dec
add
dec
pop
scas
and
mov
cmp
loopne
and
xchg
in
fcom
movs
or
sbb
add
inc
inc
dec
push
or
dec
xor
pusha
push
add
(bad)
inc
xor
inc
inc
xchg
nop
mov
rol
inc
inc
dec
mov
cmp
dec
cdq
and
push
lods
shl
pop
push
dec
jo
xor
cs
mov
xchg
enter
mov
shr
loopne
rcl
out
daa
jmp
mov
jl
pusha
cmps
jbe
push
cmp
or
addr16
(bad)
in
cmp
js
mov
mov
mov
dec
or
inc
xchg
lea
outs
jae
movs
push
stos
int
cmp
into
push
add
xchg
les
xchg
dec
rcl
sbb
sub
(bad)
outs
dec
adc
cmp
mov
sbb
aam
sub
push
push
dec
mov
nop
mov
xchg
xor
push
rcl
xor
jbe
test
jp
call
mov
or
add
js
adc
dec
dec
pop
adc
ret
and
xchg
add
add
cmps
push
push
inc
fisub
push
add
mov
pop
inc
inc
or
cmp
mov
add
stos
push
es
or
movs
adc
push
add
or
inc
and
push
pop
je
or
cs
xchg
shl
fsubr
sbb
xlat
fs
sub
cs
cmp
cli
cmp
shl
add
mov
mov
sub
es
inc
dec
call
xor
sbb
mov
sub
add
or
sub
xor
xor
and
test
dec
loop
add
push
sub
rol
bound
add
js
ss
mov
movs
int3
xchg
and
adc
sar
out
adc
add
xor
pop
dec
cmp
xchg
push
adc
dec
test
loopne
and
pop
and
sub
js
dec
test
add
mov
mov
pusha
imul
xchg
shr
cmp
and
outs
mov
xchg
add
mov
cwde
pop
test
sbb
nop
inc
ret
ins
push
cwde
push
mov
and
enter
sub
dec
lea
pusha
and
add
xor
inc
mov
mov
pushf
pop
mov
call
add
sbb
push
add
pusha
test
inc
or
push
adc
mov
sbb
mov
sahf
call
push
dec
or
inc
hlt
in
call
sbb
scas
ror
xchg
xchg
pop
js
adc
mov
jp
mov
fidiv
test
adc
bound
sub
inc
inc
ret
cwde
cmp
sar
xchg
cmp
push
shl
xor
stos
add
sub
add
data16
xor
test
test
movs
mov
cmp
xlat
mov
push
cmp
xor
pop
add
add
inc
or
sub
push
sub
ins
add
enter
add
add
js
je
inc
push
dec
sub
mov
and
and
mov
pop
shr
sub
push
sub
push
inc
xchg
push
push
jp
in
xchg
push
sbb
xor
arpl
jne
or
push
pusha
xchg
in
cmp
les
(bad)
in
test
mov
sub
sahf
aam
or
dec
lahf
ins
push
leave
gs
and
sbb
(bad)
dec
inc
mov
pop
ss
add
sbb
or
push
jb
pusha
and
xor
add
xor
and
shl
test
push
or
push
loopne
mov
xor
dec
inc
push
pop
cmp
sub
add
pop
push
shl
mov
xchg
jo
enter
cmps
push
mov
sub
xor
jb
jecxz
sub
mov
or
ret
inc
gs
inc
dec
(bad)
sub
cmp
xchg
icebp
add
pop
(bad)
xor
test
in
and
dec
inc
adc
and
fadd
cmp
add
and
xor
and
and
xchg
dec
add
call
das
(bad)
dec
dec
pop
jae
mov
mov
call
inc
pop
inc
loope
les
bound
enter
mov
stos
add
inc
push
rcr
jb
cmp
mov
xchg
rcr
push
ss
push
pusha
rcl
inc
int
xchg
jl
xor
jp
pop
fcmovb
xchg
rol
rcl
ins
fcom
stos
or
push
cmp
aaa
ret
adc
add
adc
dec
retf
retf
push
add
adc
inc
mov
adc
bound
mov
and
test
in
ret
and
movs
rol
cli
fidivr
sar
and
pusha
inc
sub
xor
sahf
mov
in
cld
jbe
(bad)
ins
dec
add
push
dec
xchg
stos
dec
adc
fcomi
mov
mov
sbb
loopne
or
cwde
and
aam
push
inc
js
jl
in
xchg
mov
pusha
cmp
adc
xor
cmp
or
(bad)
dec
xor
xchg
repnz
mov
push
nop
adc
and
push
pop
push
jno
mov
jb
or
stos
pop
adc
jl
sub
mov
dec
sub
add
push
xor
and
and
jle
sub
inc
pop
lds
ins
jmp
sbb
adc
fcomp
scas
add
push
inc
sbb
sub
(bad)
jl
cmps
stos
pusha
push
jne
xor
sbb
dec
add
inc
bound
shl
retf
sbb
push
dec
add
out
cmp
mov
dec
pusha
movs
add
aad
mov
sub
push
cwd
xor
sub
sub
push
dec
sub
loopne
loopne
dec
retf
sbb
mov
sub
push
shr
lock
inc
mov
push
cmp
rol
xor
rol
test
and
mov
pop
mov
jbe
inc
add
dec
sub
push
pop
das
sub
dec
or
dec
or
rcr
mov
inc
cmp
es
sub
cmp
leave
or
jo
aaa
out
dec
xor
cli
rcl
jbe
inc
push
add
ror
push
xor
or
xchg
or
shr
sahf
xor
jne
cmp
or
and
fisub
pop
sbb
add
inc
cmps
and
dec
push
imul
test
push
or
push
dec
fcmovb
cmp
push
push
mov
xor
xor
inc
pop
(bad)
jb
and
es
mov
adc
or
cs
or
push
shl
outs
inc
sbb
adc
and
mov
jl
fidivr
arpl
add
fwait
sbb
add
bound
push
xchg
cmp
add
xor
clc
test
push
sbb
out
add
mov
pop
rcr
sub
mov
xchg
sbb
cdq
push
movs
jb
sub
mov
sbb
out
push
inc
add
jmp
pop
push
or
outs
es
adc
pop
aam
loope
xchg
loopne
je
cmps
test
test
and
cdq
imul
jp
dec
add
push
xchg
inc
adc
movs
sub
cmp
mov
inc
test
sub
and
mov
inc
xchg
jno
nop
arpl
ret
push
test
or
into
or
dec
mov
cmp
data16
movs
inc
fdiv
sbb
dec
data16
nop
inc
nop
add
popf
cli
jo
push
(bad)
rcl
lock
xchg
dec
test
movs
(bad)
or
or
xor
add
and
add
imul
jl
xor
push
dec
add
or
leave
fiadd
std
nop
add
dec
ret
mov
jp
jb
push
push
jo
outs
dec
add
les
dec
mov
add
or
or
shr
or
and
fs
push
inc
sub
pop
repnz
xor
add
and
add
xchg
movs
xor
mov
ret
sahf
and
dec
es
or
loope
aam
mov
adc
or
mov
push
dec
add
mov
pop
test
inc
ins
ror
cs
sub
dec
aas
and
and
add
mov
movs
fcomp
mov
inc
ret
fs
pushf
or
ss
xchg
ja
push
gs
sbb
and
sbb
enter
jns
xchg
adc
mov
imul
nop
dec
or
je
ss
jmp
jmp
adc
adc
or
cs
add
ret
into
jb
sub
push
adc
lahf
movs
mov
dec
mov
and
dec
rol
xor
cwde
ret
pop
mov
pushf
enter
mov
movs
adc
mov
add
out
or
(bad)
xchg
inc
mov
movs
and
mov
pusha
xor
push
mov
push
fs
call
inc
dec
cmc
add
nop
imul
arpl
pusha
ret
pop
dec
ins
lods
adc
xchg
mov
sahf
bound
test
fimul
xchg
test
and
lods
adc
inc
inc
fucomip
or
or
jl
add
push
dec
mov
xor
cmp
sub
and
xchg
xor
adc
xor
pop
adc
ins
mov
sbb
in
sbb
push
xchg
jo
mov
push
lock
jg
mov
add
ret
or
dec
sbb
inc
mov
pop
add
sar
dec
push
or
inc
pop
neg
push
pop
test
or
mov
sub
inc
xor
ins
in
mov
ss
pusha
push
mov
imul
add
ins
adc
sub
pop
push
(bad)
jb
sub
push
push
pushf
stos
add
add
or
scas
arpl
mov
push
call
dec
outs
call
mov
ds
fst
stos
cli
jo
sub
pop
ret
rcr
aaa
inc
test
cmp
ret
mov
nop
inc
mov
and
and
inc
pop
and
cmp
xchg
fsubr
ret
test
inc
pop
push
inc
inc
dec
invd
inc
sbb
xor
adc
shl
cmp
pop
dec
add
cs
imul
add
(bad)
lock
xor
jle
and
and
mov
inc
and
stos
push
push
pop
cwde
js
sbb
call
push
add
pusha
fs
imul
or
test
loopne
mov
push
dec
sbb
cli
mov
data16
pop
push
push
jle
and
and
dec
mov
lds
sub
inc
aaa
mov
mov
xor
jp
js
mul
je
xor
dec
dec
dec
bound
push
call
cmp
mov
sahf
pop
xor
push
and
jo
fcomp
jecxz
add
xor
clc
lods
push
push
out
add
add
movs
adc
sbb
shl
xor
clc
mov
or
mov
dec
or
inc
mov
js
mov
sbb
sub
(bad)
mov
cmp
add
test
loope
add
cli
and
xor
movs
push
pusha
(bad)
jbe
mov
xor
mov
das
dec
mov
jo
cmp
inc
rol
cmps
adc
add
mov
ss
fs
or
push
dec
jb
addr16
push
pop
or
stos
adc
mov
cdq
jo
inc
inc
test
xor
arpl
mov
dec
add
sbb
sbb
inc
fidiv
dec
inc
mul
or
cli
xor
inc
xor
mov
xchg
mov
scas
mov
icebp
push
add
test
mov
outs
sbb
pop
mov
xchg
xchg
ret
pop
push
or
into
test
and
aaa
in
xchg
sbb
pushf
sub
jl
or
pop
cmps
mov
call
add
add
rcl
mov
sbb
push
lea
aaa
loop
adc
sbb
pop
pop
jb
mov
in
add
ret
pop
fs
cmp
inc
test
ret
adc
ret
data16
das
cmp
push
adc
xor
enter
push
cmp
xchg
add
fs
add
inc
mov
push
inc
add
and
mov
cmp
and
ins
fs
cmp
cwde
mov
xor
xor
ds
push
test
add
cmp
push
adc
test
sub
pop
and
ds
test
inc
jp
adc
cli
les
dec
or
sub
loop
mov
scas
outs
dec
add
inc
cmp
inc
add
add
add
dec
sbb
jmp
pop
mov
(bad)
shl
add
xchg
and
jg
pusha
push
adc
xlat
shl
mov
and
rol
dec
and
push
lods
xor
sub
xor
ret
lock
adc
ror
mov
mov
ins
inc
adc
leave
adc
sub
shl
nop
jne
jb
xor
xor
push
inc
les
inc
sbb
add
loopne
mov
ds
mov
mov
add
jle
push
add
and
je
add
js
test
inc
dec
(bad)
into
push
xchg
push
test
jo
push
xchg
jmp
or
inc
neg
add
push
(bad)
jo
dec
add
cmps
sbb
dec
(bad)
movs
adc
mov
sub
mov
or
sbb
(bad)
dec
jbe
aam
inc
push
inc
iret
shr
scas
cmps
adc
inc
ret
jo
inc
jl
xor
cmc
pop
sub
adc
adc
inc
adc
and
clc
add
cmp
jo
adc
xchg
(bad)
push
add
push
pop
and
or
and
pop
in
and
mov
das
in
adc
fadd
outs
pushf
xchg
and
sbb
ins
sbb
or
fs
retf
add
add
test
inc
fbstp
cmps
gs
add
pop
ins
inc
inc
mov
cmp
jno
fs
outs
and
pop
xor
cmp
inc
adc
es
jb
sub
and
test
mov
mov
jb
push
shl
fdiv
jnp
pop
daa
mov
mov
mov
movs
jnp
add
cmp
pusha
add
(bad)
dec
add
dec
cmps
push
add
adc
adc
adc
sbb
movs
and
movs
loop
xchg
add
repnz
and
pop
inc
add
mov
inc
popa
xor
dec
loopne
inc
jo
test
pop
(bad)
div
jp
jl
jnp
dec
mov
push
adc
sbb
pop
ror
xchg
test
fcomp
adc
push
xor
out
or
inc
jp
push
les
js
push
push
sar
mov
cs
lock
add
js
sub
pusha
xchg
inc
movs
int3
xchg
push
push
mov
call
sbb
add
test
ins
fiadd
repnz
jns
cmps
inc
xlat
popa
add
je
mov
pop
lods
dec
jle
sbb
loopne
daa
push
jmp
jo
iret
or
mov
ret
inc
inc
sub
shr
cs
xchg
into
add
dec
mov
popa
xor
and
pop
imul
push
xor
or
or
dec
inc
in
ss
jo
out
gs
(bad)
ins
jnp
sub
lds
or
les
add
fmul
int3
ss
xchg
pop
xchg
addr16
test
add
mov
jl
pop
call
adc
inc
xor
push
mov
and
jbe
or
mov
les
outs
xchg
jno
push
or
dec
or
mov
aad
xlat
mov
xor
or
sbb
push
imul
bound
and
push
push
pop
adc
stos
pop
mov
ficomp
add
push
test
jl
add
imul
sub
xchg
add
pusha
or
add
push
lock
cmps
es
rcl
pop
imul
sub
cmp
sub
ficom
rol
dec
adc
jmp
push
mov
fs
adc
mov
or
xor
push
pop
push
mov
xor
and
sub
or
pop
jno
pop
test
and
mov
xor
and
push
xor
dec
push
jne
test
or
mov
xor
push
ret
sbb
xor
add
inc
jp
lock
scas
adc
pop
jl
or
lds
dec
adc
sbb
xor
add
repnz
fbstp
out
or
jmp
cmp
dec
push
dec
pop
push
jbe
sub
xchg
sub
stos
sbb
inc
cwde
sbb
cmp
outs
cwde
pop
ins
jno
outs
pusha
inc
inc
dec
lods
xor
adc
and
adc
add
and
and
ror
jle
xchg
or
or
or
test
ins
je
inc
mov
xor
pop
xchg
and
das
push
xor
ret
mov
add
call
loop
outs
and
sub
mov
ret
sub
andps
lock
sub
push
dec
lods
imul
shl
lock
mov
add
pop
pop
pop
lock
and
dec
loopne
inc
push
or
or
adc
sbb
rcr
cld
mov
jo
inc
mov
imul
and
mov
pop
push
jbe
shl
pop
and
cmp
xor
sub
xor
push
cmp
bound
in
mov
mov
or
mov
and
pop
rcr
bound
ja
xor
inc
push
inc
in
xor
imul
sbb
add
push
pop
into
es
pusha
shr
ror
add
arpl
je
sar
pop
or
adc
dec
sub
adc
pop
push
shl
jl
adc
push
push
or
inc
cmp
sar
dec
stos
pop
push
sar
xchg
adc
push
inc
pop
mov
add
sbb
mov
les
add
add
retf
aam
mov
retf
(bad)
fmul
add
jp
add
sbb
mov
sahf
push
adc
add
push
ret
imul
cmp
and
movs
ret
add
add
bound
mov
xchg
push
(bad)
inc
cld
clc
pop
push
push
sbb
mov
xor
int
dec
push
leave
js
test
and
out
adc
in
stos
mov
add
sbb
push
jb
adc
push
(bad)
xchg
nop
add
push
push
sub
inc
sub
ds
push
inc
push
and
push
push
pop
add
test
ins
jbe
pusha
ror
cmp
sbb
push
xchg
jnp
add
add
and
xchg
jmp
add
fcomp
cwde
test
movs
test
add
xchg
pop
xor
call
es
xor
adc
xchg
mov
lea
loopne
movs
add
or
add
popf
or
add
add
push
fiadd
add
fld
call
add
cmp
add
ins
sub
and
or
shl
or
sbb
or
(bad)
sub
loopne
add
push
data16
adc
sub
jle
push
test
mov
xor
mov
dec
movs
or
push
xor
dec
and
fs
sub
push
or
or
(bad)
and
mov
rol
mov
add
adc
sub
aad
jo
sub
inc
dec
add
lods
lds
push
adc
sub
rol
sub
cs
sub
mov
mov
xchg
jl
mov
and
pop
ins
jae
and
es
arpl
pop
ror
aam
cwde
nop
jbe
sbb
imul
cmc
pop
popa
sbb
inc
cmp
adc
add
cwde
xchg
test
rol
dec
inc
and
or
adc
fistp
sbb
mov
mov
add
inc
enter
arpl
or
push
add
add
or
in
push
enter
outs
adc
outs
push
mov
aam
inc
test
xor
mov
fdivr
or
(bad)
ins
push
adc
or
rcl
add
adc
rol
push
call
rcl
pop
call
les
data16
loopne
mov
das
cmp
and
xchg
dec
add
cmp
shl
push
push
cmp
test
sbb
mov
cmp
rcr
dec
pop
lods
mov
push
or
pusha
inc
mov
mov
adc
scas
xchg
xchg
mov
mov
or
and
mov
or
pop
push
mov
pusha
stos
daa
push
dec
dec
hlt
inc
mov
add
add
sub
push
fist
add
cmp
sbb
mov
mov
jbe
out
pop
push
adc
cmp
out
push
adc
sbb
or
adc
cmp
movs
enter
and
out
pop
push
push
mov
push
bound
movs
inc
or
je
or
ins
(bad)
sub
jo
jb
mov
push
and
ret
hlt
or
mov
cmp
push
pop
xor
xchg
and
xor
xchg
je
jno
add
mov
add
inc
pop
js
pop
xor
and
mov
xor
or
dec
push
or
mov
add
jo
jp
mov
adc
dec
jbe
inc
loopne
ret
(bad)
int3
or
jmp
push
mov
push
(bad)
popa
imul
or
inc
movs
mov
and
inc
or
add
or
aad
(bad)
js
add
adc
out
and
fadd
push
das
inc
dec
or
sub
or
pusha
(bad)
iret
jae
add
inc
aam
push
dec
data16
test
dec
ret
lods
add
leave
sbb
dec
dec
ret
or
pushf
dec
adc
add
outs
or
push
and
test
into
sub
sub
shr
loop
add
repnz
imul
rol
mov
or
pop
and
pop
mov
data16
xor
test
and
push
fisubr
xor
push
push
push
push
push
pop
mov
int3
cld
adc
es
dec
xchg
cwde
and
test
stos
add
shr
fadd
inc
dec
xor
inc
push
es
cs
push
add
push
push
push
sub
pop
rcl
ror
shl
or
jmp
mov
mov
arpl
or
sub
jl
inc
aam
push
xchg
ret
rol
inc
movs
push
adc
or
rol
xor
add
push
xor
xchg
or
push
pusha
push
cmp
sub
dec
xchg
or
cmp
xor
js
out
pop
mov
retf
and
or
loope
pusha
sub
fdiv
fs
sub
jbe
sub
loop
pop
movs
inc
mov
cmp
dec
add
mov
inc
push
mov
pop
outs
sbb
rcl
adc
mul
clc
dec
adc
push
clc
adc
add
mov
mov
or
or
inc
adc
add
add
inc
push
lods
add
mov
and
or
lods
adc
push
push
pop
data16
adc
mov
dec
add
sbb
call
mov
mov
and
add
dec
jb
out
or
add
in
ins
jnp
sbb
pop
cmp
rcl
push
pop
adc
les
inc
lods
push
cmp
adc
ja
jne
call
sub
lds
aas
xchg
or
pop
rol
test
add
shr
mov
or
and
mov
bound
mov
xor
xor
adc
sub
add
into
ins
inc
mov
dec
loopne
mov
mov
es
inc
sbb
cmp
and
mov
or
xor
pop
mov
push
dec
cli
adc
inc
xor
jb
es
movs
nop
les
add
ss
fs
or
ret
dec
mov
xchg
fs
test
push
mov
in
lods
call
lock
dec
push
push
loopne
jo
enter
or
rcl
add
pop
pop
fcom
push
sub
lea
xchg
gs
mov
cs
sbb
xor
jo
sbb
(bad)
xor
adc
aas
daa
fs
xor
and
push
mov
xor
sub
mov
add
dec
sub
xor
add
add
inc
add
add
pop
push
(bad)
push
jae
outs
add
les
nop
cs
mov
add
and
inc
stos
inc
in
pop
inc
cmp
and
jo
add
push
dec
repnz
adc
push
popa
bound
sub
inc
add
mov
jae
pop
imul
jo
xchg
dec
pop
loopne
mov
cmps
jp
retf
in
inc
jo
sub
aam
retf
jle
push
push
xor
rcl
or
cli
push
inc
push
mov
and
inc
mov
clc
sahf
call
mov
test
mov
pusha
pushf
popa
sub
jmp
push
shl
sub
push
push
xchg
mov
jno
add
in
push
pop
gs
mov
ja
add
push
cs
add
test
les
imul
bound
call
push
pop
add
shl
sbb
mov
mov
cmps
bound
add
mov
jg
add
inc
add
ss
ins
add
push
or
inc
inc
inc
push
add
dec
add
test
and
imul
movs
mov
xchg
sbb
int3
add
push
cld
inc
push
push
invd
loope
pop
data16
test
and
mov
cwde
adc
add
sbb
add
xor
imul
inc
test
xor
and
or
retf
mov
xchg
push
rol
push
ss
ins
sbb
adc
neg
cmp
sub
dec
rol
adc
add
inc
inc
sar
test
outs
or
(bad)
mov
and
mov
sahf
mov
outs
jbe
ss
adc
adc
xchg
out
jp
push
pop
shl
push
data16
es
and
xor
cwde
sbb
mov
dec
outs
scas
inc
push
and
mov
int3
mov
jmp
lods
jmp
rcl
enter
fs
add
pop
pusha
jne
sub
and
sub
cli
sub
or
mov
adc
xor
lods
fisubr
dec
dec
add
add
xchg
retf
es
aam
sub
add
or
sbb
jns
dec
xor
pop
ins
push
ins
sbb
adc
xchg
mov
or
ds
dec
push
mov
arpl
and
xchg
inc
and
sbb
push
ret
pop
in
sbb
aaa
add
scas
push
or
sub
ins
or
add
or
dec
inc
(bad)
and
daa
lock
push
jo
sbb
dec
cmp
and
aam
cmp
ds
jae
loope
(bad)
retf
and
mov
cmps
bound
add
mov
test
add
cmp
pusha
bound
or
js
out
xor
jo
mov
(bad)
xor
or
out
mov
movs
adc
pop
and
push
sub
outs
clc
or
push
or
push
bound
adc
push
push
test
mov
iret
push
push
sub
inc
pop
in
mov
sbb
push
fs
imul
add
add
push
test
inc
xchg
pop
sub
jmp
test
in
inc
cmps
out
cs
push
push
or
out
pop
or
popf
push
dec
stc
stos
loopne
out
jl
inc
pusha
and
out
imul
push
xor
add
retf
xor
add
sub
inc
or
mov
push
nop
loopne
cmp
sbb
add
cmp
mov
xchg
cdq
and
jl
cwde
xor
sbb
adc
xor
jl
outs
mov
jb
jbe
and
das
sbb
mov
call
test
mov
push
add
jle
imul
sub
inc
jle
bound
sub
push
cli
es
cmps
mov
div
pop
add
push
inc
sub
cwde
xor
adc
fsubrp
xor
test
mov
sbb
add
inc
shr
xor
push
scas
or
dec
sub
add
cld
(bad)
mov
inc
iret
xor
push
mov
xchg
out
sahf
into
push
cmp
xor
sbb
jmp
inc
(bad)
or
loop
push
or
lea
adc
or
call
jo
add
cwde
mov
and
scas
xchg
pop
xchg
fwait
adc
dec
sub
dec
or
or
sub
cdq
sub
es
icebp
aam
and
push
add
ins
jns
add
pop
or
data16
mov
cli
cs
add
inc
je
pusha
jbe
ret
adc
shl
add
outs
push
adc
rcl
push
and
mov
mov
add
xor
xchg
adc
cmp
dec
test
stos
adc
inc
add
xchg
mov
push
mov
add
add
add
pop
dec
lods
cwde
sub
shr
and
popa
or
shl
rcl
inc
inc
es
xchg
pop
and
xor
push
xchg
retf
inc
add
add
push
adc
inc
cwde
ins
pop
add
add
mov
add
imul
out
dec
add
mov
mov
aas
xchg
in
mov
call
inc
add
mov
and
inc
dec
loopne
xor
and
inc
add
adc
cli
mov
push
or
xchg
test
in
gs
pop
jo
mov
or
jo
xor
xchg
add
xchg
rol
ins
cmp
cs
xchg
adc
mov
or
push
pop
test
mov
test
jp
cs
adc
ret
ret
sub
(bad)
sbb
inc
cs
xchg
mov
add
xor
inc
inc
and
sub
sbb
push
imul
add
xor
jae
and
add
lahf
aas
xor
and
retf
mov
mov
ret
fistp
sub
and
adc
mov
out
lock
sbb
and
push
sbb
xor
add
pusha
je
or
xor
adc
mov
adc
test
push
inc
cmp
or
adc
and
push
push
movs
ins
add
add
add
and
adc
shr
jne
xchg
or
add
pushf
xchg
jp
add
cmps
add
xchg
add
test
add
add
push
pop
jmp
mov
pusha
sub
add
add
jb
loop
loopne
push
sahf
pusha
or
or
add
add
push
jb
cli
xor
pusha
mov
pop
sub
cdq
add
dec
jl
sbb
pop
adc
lahf
pop
or
in
add
loope
enter
pop
imul
adc
pop
push
movs
cmp
(bad)
fdivr
push
outs
loop
pusha
jo
sub
cmp
pop
or
lods
pop
cwde
and
add
jecxz
or
movs
lidtd
ret
add
dec
data16
ss
adc
int
cmp
and
cmp
lods
dec
xor
sahf
data16
test
add
data16
and
sub
pusha
inc
cmp
pusha
popa
mov
jo
push
ret
and
inc
bound
fiadd
and
(bad)
iret
xchg
adc
add
pop
fisub
adc
add
js
cmp
adc
cmps
lods
int3
test
nop
xchg
mov
adc
and
cmp
sahf
and
jp
test
adc
pop
push
or
stos
adc
cmps
mov
aas
add
or
inc
test
mov
cli
and
cmp
add
jo
test
inc
mov
lods
adc
adc
or
sbb
cmps
dec
or
cmp
ins
std
int3
call
xchg
inc
push
push
xor
add
call
push
pop
test
loop
test
mov
bound
hlt
inc
inc
iret
mov
sbb
dec
jnp
add
and
xchg
nop
cwde
or
dec
ins
mov
loopne
and
or
in
or
xor
ret
test
cmp
shl
or
mov
jo
bound
adc
mov
dec
or
rcr
cmp
xchg
adc
ins
jmp
add
jne
or
add
and
mov
ficom
fstp
adc
cmp
mov
nop
outs
pushf
ror
dec
push
push
movs
rcl
or
nop
(bad)
mov
ins
mov
dec
iret
test
adc
and
and
adc
mov
movs
mov
in
inc
sub
and
movs
adc
or
inc
mov
mov
inc
dec
push
add
aam
(bad)
push
jle
or
push
shl
adc
cmps
pop
in
inc
and
xor
xchg
lods
add
add
enter
dec
or
jne
dec
shl
pop
rcr
cmc
cli
inc
push
inc
inc
in
jo
loopne
loopne
sub
and
push
push
out
or
xchg
lock
or
xor
test
push
sub
push
add
test
or
dec
pop
clc
or
adc
push
dec
outs
jne
or
daa
pop
mov
xchg
rcl
push
nop
or
or
add
rol
mov
jbe
sub
pop
sub
call
arpl
add
inc
or
or
in
sbb
jbe
xor
xchg
jo
adc
add
pusha
lods
lock
dec
lods
mov
xchg
mov
xor
jo
in
gs
pusha
test
pop
test
or
jb
dec
push
push
cs
call
mov
shr
jecxz
inc
rol
push
push
dec
addr16
lods
dec
dec
dec
sbb
mov
ret
push
data16
jmp
cs
add
inc
push
cwde
and
cmc
fiadd
add
jb
gs
ss
push
ins
or
cmp
xor
push
hlt
push
popa
popf
add
mov
dec
push
mul
arpl
xor
pop
add
ret
add
mov
js
xor
push
pop
pop
call
sbb
xchg
add
sub
mov
xor
jno
int3
sar
add
or
in
add
(bad)
sbb
retf
xor
push
sti
je
cmp
mov
add
pop
cmp
jl
or
pusha
inc
cmp
dec
pop
inc
cwde
movs
adc
fs
retf
sbb
push
adc
ss
cvtps2pd
add
rcr
and
cld
jge
xchg
and
(bad)
fisubr
push
bound
test
cmp
stos
daa
cmp
add
xchg
jns
sbb
sbb
cmp
add
push
dec
mov
pop
mov
push
nop
push
(bad)
mov
mov
inc
outs
cmp
adc
dec
xor
add
jmp
add
adc
call
jb
push
cmp
(bad)
loopne
add
xchg
sbb
jae
add
push
rcl
xor
and
sbb
or
pop
rol
das
cld
cmp
mov
push
push
(bad)
ins
mov
cld
inc
in
lahf
or
xor
sbb
and
into
fs
loopne
dec
dec
aam
mov
dec
or
rol
inc
ror
lods
or
push
jl
fcom
push
xor
loop
mov
and
jo
add
mov
xchg
push
xor
cmp
add
sub
add
xor
mov
popa
mov
or
cs
or
add
xchg
xchg
test
repnz
sub
sbb
nop
dec
jmp
pop
dec
add
adc
xor
jae
adc
xor
add
ins
sbb
or
add
ins
call
jo
push
leave
sub
lods
add
push
cs
xor
les
push
pop
xor
dec
sub
add
cwde
adc
inc
xor
cmps
sbb
call
sub
pop
and
or
and
and
movs
mov
fs
(bad)
adc
push
add
and
jl
push
push
adc
test
or
mov
scas
out
ret
and
pop
lods
sub
inc
in
cwde
clc
push
or
fs
jns
dec
ret
pop
mov
add
push
mov
test
push
in
test
adc
push
aas
xchg
add
popa
movs
ds
imul
addr16
(bad)
sbb
push
fidivr
or
xor
pop
sub
add
or
and
add
inc
add
dec
sbb
add
dec
xor
enter
aam
xor
adc
mov
cwde
push
push
pusha
and
mov
sub
shr
inc
(bad)
cmp
add
pop
cmps
pop
sub
ror
mov
out
cs
cmp
pusha
xor
xor
xor
je
push
xor
mov
pop
jmp
mov
hlt
call
test
mov
mov
jmp
loope
adc
mov
and
mov
mov
daa
add
push
or
fld
(bad)
fs
adc
fsubr
call
push
ss
add
add
xor
mov
xchg
nop
push
fs
arpl
lock
pop
pop
mov
cbw
push
push
lods
or
sub
hlt
mov
dec
rol
ins
add
sbb
xchg
(bad)
call
enter
adc
jo
je
adc
or
mov
and
adc
push
and
rol
shr
inc
adc
mov
cmp
adc
cmps
or
ret
add
mov
fwait
jo
cmp
adc
xchg
and
add
inc
xor
out
je
or
arpl
sub
push
leave
and
dec
and
xchg
cs
bound
test
out
scas
jb
xor
cli
(bad)
push
pop
jbe
popa
and
adc
push
cld
pop
dec
and
adc
fs
pop
and
or
push
loopne
retf
out
clc
jbe
enter
sbb
adc
adc
push
add
or
dec
aam
push
or
mov
sub
sub
and
dec
pop
and
sbb
dec
add
out
sbb
aad
adc
push
js
push
test
adc
inc
and
pop
std
adc
cmp
bound
push
cmps
cmp
and
bound
mov
pop
inc
or
jno
dec
ins
push
xchg
test
js
fisttp
imul
das
hlt
cmps
add
movs
out
enter
jmp
sub
pushf
nop
inc
add
xor
pusha
mov
pop
dec
inc
shl
jbe
and
jp
dec
cmp
jmp
clc
or
or
add
xor
dec
mov
fisub
sub
sbb
stos
aas
add
push
sbb
add
es
xchg
or
mov
cli
cs
sub
push
mov
dec
inc
popa
loopne
add
sub
cli
les
or
ror
sbb
adc
cmp
loope
call
xchg
fsub
mov
jp
jl
and
xchg
inc
jmp
add
dec
jmp
add
jns
mov
ds
les
pop
and
dec
push
pop
inc
xor
cmp
xor
xchg
sbb
add
mov
scas
add
and
add
dec
retf
or
add
and
inc
fadd
mov
jl
les
xchg
fs
call
mov
and
jb
loopne
mov
dec
push
adc
push
and
pusha
mov
dec
bound
adc
adc
ins
add
xchg
or
push
(bad)
dec
add
sbb
call
and
movs
mov
loopne
pop
adc
jne
retf
fcom
movs
test
aas
dec
test
pop
in
push
mov
mov
inc
xor
and
inc
int3
jbe
xor
sbb
pop
shr
and
sbb
inc
push
ret
movs
cmp
mov
push
adc
jo
sbb
push
or
outs
pop
push
scas
pop
push
pop
and
or
es
les
sub
mov
or
ficom
pusha
or
adc
mov
sub
mov
sub
inc
rcl
cs
mov
add
bound
add
and
sub
shr
rcl
jae
ss
mov
add
xchg
mov
sbb
jl
clc
add
push
rcl
movs
stos
inc
dec
fdiv
pop
pusha
push
and
xor
rcl
adc
or
xor
and
movs
add
dec
movs
mov
lock
adc
and
xchg
sbb
dec
adc
adc
adc
push
sbb
push
les
and
sub
dec
cmps
loopne
loopne
push
rcr
cmp
or
lock
push
mov
sub
ins
xchg
adc
(bad)
cmp
loopne
and
shl
out
jnp
sub
das
cmp
lods
call
add
enter
jp
ret
xchg
cmp
outs
mov
push
dec
pusha
cmp
pusha
fadd
ficomp
add
fadd
adc
pop
outs
popa
and
das
fs
in
or
mov
sbb
mov
neg
aaa
loop
clc
push
clc
aaa
test
mov
ins
cdq
and
or
ds
pusha
mov
xchg
fs
bound
ret
jo
add
rol
and
icebp
cmp
sahf
enter
adc
jo
add
js
add
push
adc
pop
sub
sbb
mov
test
xchg
dec
add
clc
add
adc
div
bound
(bad)
ficom
es
dec
xchg
add
shl
adc
(bad)
scas
pop
inc
xchg
fs
shr
xchg
xchg
stos
jb
js
and
aaa
test
fwait
test
stos
xor
adc
mov
test
jo
adc
sub
inc
cmp
xchg
jne
xor
enter
mov
xor
gs
push
js
xchg
add
mov
inc
imul
and
mov
(bad)
and
ins
jns
sub
cld
dec
rcl
xchg
jle
stos
jo
test
inc
ds
push
add
adc
xor
fbld
inc
sub
sbb
je
jno
xor
xchg
and
jle
or
add
sub
add
or
pusha
dec
pop
and
adc
and
mov
pop
or
adc
mov
xchg
test
xchg
aad
aaa
add
push
ss
mov
mov
add
loopne
add
sbb
xchg
ret
sbb
sub
add
mov
mov
adc
pusha
ins
push
and
add
pop
add
jae
xchg
movs
daa
mov
add
xor
dec
inc
dec
rol
or
push
call
adc
or
les
sbb
sub
les
pop
jne
jb
xor
jo
js
cmp
je
jl
loopne
popa
sub
add
pusha
push
sub
cmp
fisub
out
aas
inc
and
xchg
dec
shr
and
and
sub
mov
inc
inc
sub
adc
mov
and
cmp
inc
es
repnz
mov
pop
and
pusha
test
jo
pcmpgtb
sub
test
popa
rcl
adc
and
sub
mov
test
cmps
mov
dec
movs
(bad)
adc
ja
call
nop
inc
push
push
pop
aas
push
dec
adc
and
add
cmp
pop
mov
inc
sbb
sub
test
sbb
add
lock
mov
dec
mov
adc
mov
add
clc
ja
xor
mov
and
ja
lock
inc
cmp
(bad)
and
xor
mov
add
adc
xor
fs
sub
movnti
or
add
test
daa
sub
call
xor
add
jbe
data16
outs
push
or
dec
push
push
xor
or
pop
aaa
imul
mov
dec
outs
push
and
jb
outs
lahf
inc
cmp
and
test
outs
push
sar
arpl
(bad)
fidivr
das
sbb
retf
inc
scas
push
and
ins
sub
neg
pop
mov
and
or
or
pop
pop
cmps
out
dec
inc
xor
push
popa
arpl
adc
and
adc
das
jb
push
xlat
inc
sbb
add
inc
add
or
add
pop
or
sbb
xchg
cmp
jne
je
loop
mov
outs
push
push
dec
and
dec
add
mov
sub
sub
outs
jo
es
clc
addr16
push
clc
shl
stos
xchg
inc
rol
loop
xor
cmps
jle
jecxz
lock
outs
popa
fs
imul
adc
inc
add
pusha
rol
cmp
mov
sub
add
xchg
cdq
xchg
mov
xchg
les
js
stos
push
add
add
into
pop
add
dec
loopne
jb
scas
sub
mov
and
lock
cwde
mov
pop
and
push
pop
pop
mov
add
test
jmp
jp
mov
cwde
aam
xchg
dec
lods
pop
xor
cmp
inc
jp
retf
sbb
inc
or
jb
or
sub
mov
das
xor
inc
inc
or
add
aam
nop
cmps
mov
and
dec
iret
aam
add
xor
in
add
popa
push
xor
add
pop
shr
mov
cmp
sub
lods
add
fld
hlt
cmp
sbb
lods
or
or
adc
ins
xor
dec
mov
add
aaa
movs
nop
mov
xchg
sub
ror
cmp
push
(bad)
inc
jg
call
xor
xor
fst
or
movs
sbb
jo
jo
scas
sbb
es
enter
xchg
inc
add
test
daa
add
add
add
sub
xor
add
push
push
jp
adc
(bad)
jo
cs
mov
(bad)
push
test
int3
xchg
enter
cs
adc
fbld
add
mov
push
xchg
cwde
xor
add
cli
loope
nop
cmp
sbb
cmp
shl
dec
sub
loop
and
xchg
repnz
add
dec
(bad)
pop
sbb
add
sbb
xlat
in
movs
adc
push
add
add
scas
scas
in
jo
mov
mov
xor
mov
mov
sub
cwde
xor
mov
adc
mov
add
into
jbe
add
mov
push
pusha
xor
mov
add
mov
loopne
fnstcw
adc
add
inc
jg
test
je
das
dec
dec
push
add
popa
adc
dec
and
pop
cmp
test
adc
jb
lods
and
or
push
dec
add
adc
add
mov
inc
push
xor
add
ja
and
adc
add
sbb
popa
clc
(bad)
dec
adc
sub
daa
push
add
jge
xor
hlt
rcl
inc
mov
inc
sbb
imul
lods
pop
cli
pop
pop
pusha
ins
jnp
and
popa
and
xchg
or
mov
(bad)
call
push
dec
popf
push
push
adc
dec
push
out
push
out
mov
sbb
in
mov
xor
push
adc
cli
mov
sbb
ins
je
or
add
sahf
bound
int
sbb
or
rcl
adc
or
les
or
and
sub
aam
lock
fld1
and
xor
push
mov
test
bound
and
jle
cmp
add
sub
adc
and
gs
add
cmp
jnp
stos
shl
xchg
fucomip
jb
push
neg
cli
add
and
or
or
add
push
inc
push
xchg
xchg
movs
mov
push
add
add
xor
hlt
fdiv
cmp
leave
add
cmp
xor
dec
cmp
push
adc
push
cmp
rol
stos
inc
dec
and
mul
mov
dec
inc
popa
pop
pushw
mov
aam
push
jmp
and
aam
push
sbb
gs
inc
add
fcmovu
add
js
ins
add
enter
fsub
add
mov
retf
add
pushf
and
xchg
push
int3
inc
bound
sub
and
mov
hlt
test
ret
sbb
mov
sub
sub
push
movsx
es
test
xchg
add
test
test
mov
dec
and
out
add
adc
outs
push
inc
xchg
dec
mov
dec
pop
push
outs
cli
cmp
js
aas
pop
cmp
dec
lods
xlat
push
rol
rcr
jb
sub
cmps
fist
dec
les
cmps
iret
ret
pop
(bad)
shr
or
adc
jmp
push
inc
push
mov
jmp
mov
pop
push
mov
jnp
adc
sub
cmp
daa
mov
lock
cld
or
je
bound
jge
cmp
outs
je
push
mov
ror
inc
jb
ins
outs
adc
mov
aaa
je
je
punpcklwd
ins
jo
push
add
pusha
jb
add
imul
pushf
out
popa
cmp
imul
jb
data16
imul
push
and
dec
test
addr16
rcl
jg
pusha
sub
push
outs
or
fidiv
sar
outs
jae
lar
fs
sbb
getsec
push
or
adc
adc
push
stc
sbb
fisttp
adc
cmps
inc
jb
adc
outs
inc
pop
push
and
sbb
into
das
jo
jmp
popa
das
cmp
jb
divps
add
xchg
dec
add
jnp
or
fisubr
fisttp
push
popa
jns
or
jae
pop
pop
icebp
retf
pop
adc
ins
pop
jne
mov
add
cli
aas
rcpps
test
mov
pop
adc
das
inc
push
xor
div
sub
add
shl
adc
mov
imul
movzx
cmova
fcmovu
xor
inc
inc
outs
pop
fs
adc
aad
iret
or
adc
sub
enter
frstor
xor
mov
sbb
popa
adc
push
and
or
adc
push
or
test
outs
mov
add
and
daa
sub
mov
mov
test
aam
ret
ss
pop
cli
or
inc
inc
dec
dec
rol
in
loop
push
dec
add
jl
add
dec
jl
xor
daa
or
jmp
es
or
dec
loope
test
dec
in
(bad)
leave
lods
push
inc
hlt
pop
pop
xor
cmp
popa
inc
push
and
test
dec
mov
push
adc
mov
inc
add
lahf
jno
sub
add
sub
or
jp
sbb
mov
inc
push
push
dec
add
cmp
push
scas
or
xor
push
or
sbb
pusha
mov
xchg
pop
xor
and
aas
inc
out
xchg
push
imul
js
pusha
dec
add
or
push
adc
mov
fwait
adc
or
adc
sub
push
mov
inc
and
adc
rcr
inc
rol
jle
push
push
jge
imul
(bad)
cmp
push
out
shl
mov
gs
mov
pop
inc
mov
inc
adc
sbb
inc
fwait
ins
cs
daa
aad
adc
iret
out
pop
inc
mov
mov
add
mov
inc
or
mov
and
je
mov
fild
and
sub
xchg
pop
gs
dec
or
inc
adc
inc
lahf
arpl
das
loopne
bound
jne
outs
add
mov
imul
push
jmp
jmp
jo
retf
fwait
aaa
and
aaa
xor
xor
(bad)
(bad)
cmp
inc
xor
cmp
jns
push
sub
xor
jbe
and
cmp
xor
imul
(bad)
(bad)
call
dec
push
sub
aaa
push
cmp
arpl
push
inc
xor
dec
xor
dec
js
push
mov
call
push
and
dec
mov
adc
pop
add
out
adc
hlt
xor
pop
pusha
imul
ds
push
aaa
inc
dec
inc
mov
push
bound
mov
pop
imul
mov
loope
ja
clc
clc
and
mov
sbb
pop
lods
mov
add
push
ficomp
aas
add
int
cmp
add
repz
cmp
or
cs
add
test
pop
inc
mov
imul
or
bound
fwait
addr16
cmps
test
jne
je
outs
and
cdq
inc
pop
div
or
jg
je
xchg
rol
inc
arpl
(bad)
sbb
daa
sbb
or
les
out
stos
es
or
and
es
daa
outs
sbb
xchg
push
mov
jae
daa
mov
cmp
xor
push
ins
mov
lods
push
cmp
outs
fcom
sub
call
and
movhlps
outs
push
outs
addr16
je
push
cld
dec
rcl
lock
push
jo
pop
push
jae
mov
out
arpl
and
inc
push
pop
popa
and
outs
and
xchg
add
call
jae
or
inc
jge
scas
xor
gs
gs
xor
dec
or
popa
popaw
inc
push
xor
xor
xor
je
mov
cmp
xor
ins
lods
push
data16
bound
inc
arpl
and
mov
dec
fiadd
and
pop
inc
add
pop
xor
cs
dec
pop
pop
(bad)
pop
adc
mov
test
pop
jnp
ins
outs
fs
mov
jae
cwde
add
fcom
cmp
cwde
sub
arpl
pop
push
cwde
rcl
imul
ret
outs
es
and
or
fimul
or
pop
sbb
movs
ins
or
add
neg
jb
daa
outs
sbb
inc
rol
mov
aaa
es
pop
das
push
sub
aad
jb
(bad)
xor
ja
adc
idiv
sbb
and
sbb
inc
lahf
outs
pxor
sbb
popa
add
test
xchg
cmps
ja
xor
xchg
xor
outs
push
mov
test
jae
jo
je
fistp
rol
aas
sub
test
sub
(bad)
jl
push
lock
push
jp
addr16
pushf
pop
dec
inc
adc
xchg
and
aaa
arpl
mov
ret
aam
push
mov
jbe
add
fwait
xchg
jno
jae
sar
sbb
movs
mov
stos
pop
cs
shl
data16
fmulp
lahf
jae
dec
retf
add
sbb
popa
add
in
addr16
sub
enter
ins
push
and
mov
ror
scas
jg
mov
outs
ret
mov
adc
and
mov
cli
mul
ins
pop
lock
je
or
aaa
int3
sub
das
lea
test
or
pop
inc
push
inc
or
pop
xor
test
cmps
xor
test
push
in
cmp
sub
ins
adc
stc
aaa
push
sti
sbb
mov
push
or
jo
and
jge
(bad)
pop
add
pop
push
mov
sti
fadd
dec
das
inc
add
push
or
sar
jbe
mul
inc
cs
mov
add
add
xor
inc
js
pop
push
js
jbe
addr16
gs
gs
ja
mov
(bad)
outs
jl
and
jns
or
or
xchg
outs
es
mov
sub
(bad)
xchg
inc
push
mov
adc
arpl
(bad)
je
(bad)
ds
imul
inc
ja
fs
sub
push
jp
iret
mov
inc
inc
and
inc
pop
pop
xor
or
push
cwde
bound
enter
inc
xor
scas
add
xor
mov
jns
push
sbb
mov
les
mov
push
sar
iret
sbb
or
int3
add
and
adc
loopne
xchg
scas
leave
inc
inc
dec
jg
add
xchg
xor
add
mov
imul
pop
movs
xsha1
cmps
dec
or
out
mov
push
cs
rcl
mov
sub
pop
adc
mov
push
inc
pop
pop
dec
inc
dec
dec
pop
dec
daa
cmp
inc
pop
push
push
dec
inc
adc
ins
inc
add
dec
inc
pop
inc
dec
inc
fst
jbe
or
mov
out
push
out
push
push
sbb
test
mov
inc
inc
jb
inc
daa
jo
mov
shl
pushf
je
and
mov
fisttp
add
and
dec
or
mov
jae
imul
lods
sbb
push
fs
popa
inc
xchg
jbe
adc
hlt
mov
outs
in
gs
adc
popa
xchg
add
test
in
repz
push
xor
and
add
imul
add
push
add
nop
push
dec
or
cmp
sti
jmp
pop
nop
inc
jmp
jne
jp
inc
or
inc
les
imul
inc
sar
and
test
imul
shr
sub
add
sti
push
adc
or
push
pop
test
lods
retf
jmp
jo
xor
fucomi
jge
loope
or
pusha
paddusb
mov
aas
mov
jbe
popf
inc
aas
loopne
push
das
pop
movd
fistp
aas
nop
push
cmp
js
fidivr
ror
adc
push
movaps
mov
or
mov
outs
mov
dec
aas
lock
push
unpcklps
jbe
add
jecxz
sub
je
(bad)
(bad)
enter
fs
ss
mov
test
inc
aas
in
ss
call
sbb
mov
(bad)
push
das
jl
cmp
jbe
pop
jno
aas
pop
das
ins
cvttps2pi
mov
fucomi
mov
dec
aas
clc
cs
das
push
movhlps
mov
and
jb
xor
in
jbe
pop
dec
das
bound
and
movs
pop
outs
mov
fild
jb
pop
pop
jo
(bad)
pop
bndldx
xchg
inc
loopne
mov
aas
aam
adc
inc
fucomi
jbe
cvtpi2ps
mov
aas
mov
in
mov
dec
aas
hlt
inc
hlt
outs
movhps
outs
push
mov
jbe
ss
dec
das
inc
fucomi
jbe
(bad)
aas
lods
pop
mov
xchg
inc
aas
in
dec
das
pop
outs
pop
fsubr
push
aas
pushf
jmp
jle
cs
fdivr
sbb
outs
leave
in
jbe
ucomiss
mov
outs
adc
fisttp
cld
add
push
aas
adc
cs
sub
cmp
rdtsc
fucomi
mov
popa
mov
fisttp
mov
pop
add
add
push
call
sbb
xchg
call
outs
pop
jns
cmp
sar
or
in
jbe
movaps
mov
mov
mov
dec
aas
bnd
push
outs
unpckhps
outs
add
cs
fld
sysexit
jg
jmp
arpl
stos
pop
mov
fisttp
inc
aas
jmp
fistp
(bad)
fucomi
mov
ins
cvtps2pi
fld
mov
pop
aas
lea
dec
aas
sub
iret
adc
mov
push
xor
mov
dec
and
cmps
pop
aad
ss
mov
out
push
(bad)
pop
bndstx
xchg
call
aad
jbe
(bad)
aas
(bad)
jmp
mov
outs
movntps
mov
aas
mov
(bad)
dec
aas
idiv
push
pand
sub
push
aaa
jg
(bad)
stos
into
jmp
daa
aas
scas
pop
mov
xchg
inc
aas
out
stos
fucomi
mov
aas
sahf
jmp
(bad)
aas
fdivrp
or
das
aas
mov
fld
cmovg
inc
jmp
cdq
dec
push
shl
xchg
shl
dec
mov
xchg
mov
test
jmp
fnstcw
dec
lds
in
and
mov
cmc
int
dec
es
lods
in
popf
xchg
mov
mov
std
ret
mov
mov
xchg
xchg
shl
repz
dec
es
mov
cdq
(bad)
dec
es
mov
cdq
dec
cmps
out
es
mov
cdq
mov
es
mov
out
and
es
mov
push
cmps
aas
push
pandn
cmp
pop
adc
and
cmps
cli
push
push
add
jg
pop
add
mov
add
cmp
pop
and
add
mov
xadd
pusha
jg
inc
push
cmp
pop
pop
nop
xchg
inc
push
popa
jg
enter
inc
xor
xchg
mov
or
and
add
adc
or
das
or
dec
inc
xchg
push
mov
iret
or
cmps
add
xchg
call
outs
data16
and
add
cmc
xor
dec
fucomi
scas
mov
inc
fs
gs
fild
scas
add
fild
xlat
cmovg
sbb
stos
xor
xor
das
inc
add
xlat
out
aas
loopne
push
ret
add
add
add
cs
pop
add
add
inc
cs
add
jb
ret
ret
ret
adc
(bad)
cmps
ud0
out
add
jno
push
inc
outs
add
cmps
cmp
sub
add
add
fild
adc
jecxz
pop
and
add
and
or
scas
inc
mov
mov
mov
outs
jg
loopne
or
xchg
or
ja
(bad)
(bad)
(bad)
jmp
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
(bad)
(bad)
(bad)
(bad)
jmp
rcl
mov
sub
mov
sbb
dec
(bad)
(bad)
(bad)
push
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
imul
(bad)
(bad)
stc
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
(bad)
inc
aam
dec
in
pusha
aad
jno
mov
inc
aam
(bad)
(bad)
inc
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
(bad)
(bad)
(bad)
(bad)
fild
or
shr
cmp
ficom
push
xlat
enter
mov
and
(bad)
(bad)
(bad)
push
iret
shld
sub
mov
(bad)
and
or
adc
add
sbb
data16
inc
fdivr
(bad)
(bad)
push
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
jmp
dec
jmp
xor
jbe
or
mov
(bad)
(bad)
jg
cmp
fs
add
hlt
push
imul
ins
sbb
xor
(bad)
inc
jb
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
(bad)
(bad)
inc
fnstenv
adc
mov
mov
bound
ficom
gs
aam
idiv
outs
clc
pop
popa
mov
into
pop
cmp
mov
inc
movs
fisttp
xchg
fadd
(bad)
(bad)
(bad)
inc
shl
jmp
outs
xor
mov
sar
add
in
add
pop
shl
dec
leave
jl
fnstsw
add
daa
(bad)
(bad)
push
fdivr
and
test
or
mov
popa
into
push
stc
ficomp
leave
(bad)
(bad)
(bad)
(bad)
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
in
mov
(bad)
(bad)
(bad)
(bad)
mov
add
inc
aad
scas
ja
popf
adc
push
fdiv
or
test
fcomip
(bad)
jmp
push
or
or
push
in
dec
xchg
daa
scas
lods
mov
pop
jge
clc
(bad)
(bad)
call
or
inc
push
imul
xor
sbb
push
(bad)
call
add
aam
loopne
ror
int3
dec
frstor
fistp
(bad)
stc
out
mov
pop
aad
mov
call
xchg
shl
push
repnz
addr16
jmp
mov
aas
dec
ss
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
(bad)
(bad)
(bad)
call
addr16
mov
jns
imul
and
shr
ss
push
xchg
ja
int3
(bad)
(bad)
(bad)
inc
inc
or
das
es
lds
or
sub
mov
cmps
call
ret
(bad)
push
iret
shl
sbb
ret
es
pushf
mov
ins
add
fs
aas
ss
jmp
addr16
jb
add
(bad)
(bad)
(bad)
call
mov
jnp
sbb
xchg
or
out
fdivr
fisttp
aam
rol
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
out
sub
mov
cmp
inc
call
adc
sahf
gs
clc
sar
imul
push
js
or
(bad)
(bad)
call
push
add
mov
cmp
cmps
not
pusha
ror
imul
push
scas
fcomp
or
or
inc
lock
aaa
push
scas
mov
fidivr
mov
jmp
mov
mov
mov
push
cmps
mov
sar
xchg
push
xlat
int
push
ficom
fldenv
cs
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
lock
fild
sub
aaa
adc
dec
fs
imul
or
je
pop
adc
std
shl
ds
bound
leave
in
pop
mov
ins
ss
mov
sub
aas
cmp
sbb
xor
push
sbb
push
add
imul
fist
pop
xlat
stc
mov
xchg
push
xchg
xchg
fnstenv
das
pop
sbb
jnp
pop
add
dec
push
and
mov
div
dec
cmp
in
jns
bound
jae
je
adc
mov
call
mov
xor
das
jb
rcl
arpl
inc
xchg
out
or
push
sbb
xchg
aam
and
and
test
jge
shl
ins
shr
mov
cmovnp
pop
add
pop
pop
inc
push
bound
dec
cmp
sbb
inc
clc
das
add
cmp
push
mov
mov
xchg
push
jp
push
ins
add
mov
into
mov
test
pusha
gs
outs
adc
inc
push
adc
add
mov
sub
mov
test
jns
add
push
push
pop
add
sbb
mov
ja
and
push
nop
fdivp
sbb
outs
popa
xor
add
sbb
jmp
push
and
and
stos
jecxz
inc
adc
sbb
inc
or
mov
xor
(bad)
or
cmps
inc
enter
outs
push
ds
repnz
jnp
xchg
outs
pop
and
and
dec
sub
faddp
sbb
pop
outs
mov
fdiv
add
test
outs
and
inc
lods
cmps
mov
inc
outs
mov
aaa
xor
jae
outs
xor
fs
mov
mov
xchg
imul
push
adc
mov
(bad)
scas
mov
and
adc
jo
inc
push
repz
imul
push
dec
jae
sub
or
(bad)
pop
aaa
sub
daa
push
add
nop
js
add
outs
gs
mov
movups
es
dec
call
mov
scas
test
push
ins
imul
xor
inc
pop
jl
push
add
xor
mov
sbb
(bad)
jle
jb
or
add
sbb
cmp
adc
fidivr
xor
cmp
jb
je
jb
and
lahf
movs
or
loop
add
push
call
add
jne
inc
inc
add
inc
push
(bad)
shl
mov
fist
dec
push
push
xor
sar
stos
rcr
div
push
dec
xlat
nop
push
ffree
jnp
pop
add
push
mov
inc
jnp
and
dec
jo
cli
push
cmps
rol
mov
dec
ret
add
xor
mov
or
push
nop
sbb
pop
inc
(bad)
pmaxsw
xchg
imul
xlat
jbe
xchg
pop
cmps
adc
mov
mov
add
pop
pop
xor
sub
pop
cmp
aaa
fidiv
xor
cld
mov
dec
cmp
(bad)
sbb
cmp
inc
inc
xor
inc
aaa
inc
sub
mov
dec
inc
ss
or
inc
dec
xor
sub
ins
add
cmp
sub
ins
add
arpl
xor
sub
xor
arpl
data16
iret
mov
xor
dec
xor
inc
add
pusha
dec
ds
fst
mov
das
xor
xor
shr
ss
push
cld
fcmovnu
test
cmp
inc
xor
inc
inc
shl
xor
inc
inc
inc
inc
add
or
xor
dec
cmp
push
mov
test
cmp
aaa
inc
xor
loope
xor
xor
cmp
xor
add
add
pop
cmp
add
sub
pop
inc
bound
xor
out
xor
xor
inc
add
iret
mov
xor
lahf
fadd
inc
dec
cmp
aas
aas
add
lahf
xor
call
sbb
fdiv
xor
call
fwait
loop
and
xor
push
fwait
sbb
loopne
sub
ret
add
test
add
push
cmp
add
xor
add
push
stos
and
add
push
call
mov
or
adc
xlat
xor
out
add
ss
and
xor
daa
ins
stos
push
and
jb
xchg
adc
add
js
iret
popa
add
jae
cmp
lods
outs
pop
not
adc
popa
and
add
or
jp
jbe
lock
xlat
add
xchg
sbb
xchg
outs
jb
jae
rcr
fiadd
jo
sbb
iret
sbb
pop
inc
sti
push
les
test
add
pop
cmp
mov
lahf
push
push
and
pcmpgtd
addr16
xor
imul
dec
jae
push
and
jg
test
mul
imul
adc
adc
xchg
call
jb
inc
jp
mov
push
push
mov
fs
mov
imul
fs
ins
inc
cmp
jae
push
push
arpl
dec
inc
sub
xor
mov
fs
inc
xor
xchg
xchg
rcl
dec
inc
and
sbb
scas
adc
test
stc
cld
cmps
xor
push
aam
lahf
cmp
xor
mov
repz
pop
(bad)
jbe
push
not
pop
mov
pop
push
and
xor
inc
dec
xor
pop
pop
push
pop
pop
call
xor
push
mov
cs
add
dec
jmp
dec
inc
jb
inc
aas
push
mov
dec
jl
loopne
xlat
push
(bad)
gs
inc
loope
sub
push
push
imul
loopne
ror
adc
inc
add
aas
inc
cmp
dec
mov
in
mov
leave
or
movs
mov
mov
push
js
and
jbe
movs
push
aaa
xor
sub
bound
jae
jo
inc
nop
sub
push
cmova
cwde
inc
int
xchg
adc
inc
scas
loopne
ins
fist
adc
es
test
xlat
inc
mov
cmps
(bad)
data16
jae
cs
dec
jno
pusha
clc
adc
movs
push
add
add
add
sbb
push
fdiv
xor
xlat
lock
push
jno
lods
jb
iret
repz
ror
stc
cmp
adc
add
jns
out
jo
cwde
in
out
sahf
out
mov
sahf
ja
and
outs
add
add
sahf
out
out
cmp
fsub
jns
(bad)
sti
fsubrp
xor
fs
(bad)
inc
xor
nop
push
add
cmp
push
push
jnp
neg
rcr
fmul
add
push
cs
jnp
or
push
add
and
add
lock
mov
and
nop
adc
jns
shl
aam
mov
cmp
rcl
inc
shl
cmp
cmp
cwde
icebp
sar
push
cmc
pop
pushf
cmps
stc
adc
idiv
push
sbb
jnp
repnz
js
add
test
repz
fmul
ror
clc
les
mul
repz
jae
push
hlt
fs
repz
cld
lods
std
enter
out
cmp
mov
sahf
out
fs
push
iret
loopne
aas
push
ret
lahf
mov
ret
das
sbb
mov
adc
imul
cld
les
push
lds
or
jmp
push
adc
jns
out
or
push
or
iret
cmp
repz
cmp
pop
add
pop
lods
adc
or
pop
xor
mov
jns
out
dec
add
out
movs
or
push
push
cld
das
mov
clc
call
push
add
cmp
cmp
push
imul
jns
iret
add
out
sahf
pop
push
jns
out
mov
pxor
mov
adc
cmp
or
out
ds
ds
loopne
mov
cmp
loope
push
out
push
out
out
std
hlt
jns
jmp
mov
pop
mov
jns
jnp
in
push
or
mov
sahf
mov
jmp
sbb
iret
into
push
jecxz
sahf
out
cmp
mov
ds
loopne
ror
push
or
shl
out
or
out
push
or
cmp
cmp
js
pushf
or
(bad)
loope
(bad)
push
add
ror
(bad)
neg
repz
adc
outs
push
add
iret
repz
or
or
push
cmp
jo
ffreep
scas
push
push
sbb
lock
iret
push
push
test
stc
cmp
out
push
mov
enter
push
dec
repz
mov
sub
add
xor
cmp
adc
add
les
push
repz
pusha
or
push
in
push
or
sahf
cs
push
or
js
or
jae
repz
sbb
push
out
sahf
test
xchg
mov
les
or
cmp
repz
scas
push
add
movs
iret
jae
repz
or
iret
repz
enter
adc
dec
mov
and
stc
cmp
xor
(bad)
(bad)
cmp
mov
les
cli
add
pop
push
add
sbb
dec
inc
adc
pusha
push
or
cwde
push
push
push
int3
push
add
das
mov
and
mov
jo
add
cmp
repz
push
sar
cmp
or
adc
scas
push
xor
repz
repz
cmp
scas
add
das
into
out
jns
jnp
add
add
loopne
out
push
push
mov
sbb
jl
aas
push
push
push
sbb
test
repz
loopne
aas
push
(bad)
mov
iret
fcomp
sbb
loopne
dec
mov
mov
jo
mov
sbb
dec
pushf
rol
xlat
das
sub
(bad)
pop
pusha
push
sub
mov
stc
mov
mov
push
sbb
jns
jnp
mov
push
fs
sub
out
mov
push
in
sbb
shl
fidivr
dec
scas
push
push
mov
cs
repz
sbb
sub
cdq
adc
outs
rcr
and
les
push
jp
dec
or
ins
sub
aaa
xor
dec
out
rol
out
push
inc
sub
loop
stos
push
add
sub
fcomp
out
push
push
push
dec
add
inc
outs
in
inc
push
dec
push
retf
mov
sti
inc
ja
xor
inc
jmp
pop
sbb
xor
jnp
pop
ja
adc
dec
pop
add
outs
xchg
mov
add
inc
cmovg
push
addr16
dec
int
cmp
(bad)
aas
push
dec
dec
loop
aaa
inc
repz
jmp
test
xchg
mov
push
xchg
sub
aas
bound
add
dec
ja
sbb
dec
add
dec
data16
mov
or
pop
test
dec
dec
iret
sbb
xchg
xchg
pop
in
xlat
xor
push
mov
and
inc
sbb
cs
loope
pop
inc
out
push
mov
sbb
rol
ja
xchg
cmp
fiadd
add
jbe
pop
push
outs
inc
aaa
int
xor
push
aaa
cmp
lds
inc
jae
mov
mov
inc
inc
xchg
jecxz
daa
test
jecxz
pop
pop
stos
push
mov
dec
and
or
sub
mov
mov
dec
adc
cmp
add
mov
dec
sbb
sti
pop
dec
push
pop
add
(bad)
fstp
and
dec
daa
aaa
fmul
imul
add
aas
fs
or
inc
out
aaa
push
dec
jl
or
mov
nop
in
adc
mov
aas
inc
stos
add
add
pop
and
push
daa
pop
movs
gs
and
inc
add
pop
mov
push
aas
inc
and
pop
cmp
mov
pop
inc
aaa
mov
ins
mov
aam
loopne
push
sub
push
jno
jle
inc
push
push
add
dec
fnstsw
dec
repz
lahf
dec
rol
mov
scas
dec
or
pop
sbb
xchg
pop
(bad)
pop
dec
into
jecxz
push
mul
neg
or
loop
ficomp
inc
mov
lock
dec
ret
add
and
adc
lock
pusha
or
bound
pop
inc
pop
dec
inc
fild
push
das
xor
sbb
inc
addr16
lea
dec
jo
push
inc
out
aam
push
add
add
xor
mov
aas
dec
fild
inc
adc
mov
cmps
imul
sbb
and
loop
push
(bad)
out
sub
push
push
add
dec
inc
adc
pop
push
sbb
(bad)
aas
xchg
mov
inc
out
or
mov
frstor
pop
add
iret
dec
cmp
pusha
mov
das
mov
outs
mov
pop
and
pop
or
fwait
inc
pop
lods
shl
mov
inc
(bad)
pop
(bad)
fiadd
or
add
leave
inc
and
push
inc
nop
pusha
adc
push
or
ja
frstor
sbb
pop
rol
dec
add
push
add
sub
sub
and
(bad)
dec
cmps
push
fist
imul
inc
jg
inc
inc
es
inc
stos
dec
mov
push
out
pop
inc
daa
push
xchg
mov
push
rcl
inc
inc
movs
or
(bad)
dec
push
sbb
dec
or
fwait
pop
sub
adc
xchg
push
cmp
xlat
jmp
add
dec
mov
jg
fcomp
push
fiadd
mov
shl
sbb
push
xor
push
dec
repz
add
js
xor
sub
inc
add
jnp
push
dec
add
inc
bound
or
mov
push
fmul
fbstp
inc
retf
ja
inc
les
daa
pop
or
push
and
push
ss
xchg
and
or
push
dec
dec
xchg
inc
push
mov
dec
test
xchg
pop
add
(bad)
jb
dec
mov
or
pop
das
push
add
dec
int3
mov
out
dec
jg
adc
sbb
sbb
aaa
bound
mov
dec
ja
lea
aas
ret
shl
sti
dec
jg
cmps
adc
xchg
push
daa
inc
stos
adc
dec
inc
mov
scas
adc
add
addr16
dec
and
dec
jmp
push
and
dec
pop
cmp
(bad)
movs
(bad)
loopne
add
inc
pop
bound
loopne
dec
arpl
pop
lahf
loope
mov
inc
aaa
dec
mov
inc
mov
pop
imul
mov
adc
and
jnp
xor
mov
dec
sbb
ja
pop
push
dec
adc
mov
inc
mov
fild
dec
dec
lahf
pusha
mov
fiadd
cmp
ins
dec
or
mov
dec
dec
push
push
add
dec
sub
lods
add
bound
aaa
and
jb
adc
retf
pop
ins
adc
ins
inc
(bad)
xchg
pop
dec
cmp
out
push
inc
movs
push
and
pop
lods
aad
mov
inc
das
dec
aaa
mov
lds
push
mov
adc
cmps
xchg
das
outs
sbb
ror
daa
fwait
push
or
ret
xchg
pusha
adc
outs
test
or
inc
sti
cwde
push
mov
inc
aas
xchg
push
jo
inc
iret
dec
ret
daa
push
ins
rol
ins
sbb
inc
inc
add
aaa
add
inc
dec
dec
mov
aas
push
add
lahf
mov
mov
mov
and
and
cmc
jecxz
mov
inc
pop
or
test
pop
outs
sub
adc
fimul
inc
scas
out
mov
cmps
mov
test
test
inc
push
mov
inc
add
fiadd
xchg
inc
in
adc
out
loop
and
rcl
fisubr
not
dec
inc
push
or
das
inc
jg
mov
mov
sub
push
mov
imul
lock
repz
imul
mov
dec
shr
push
in
mov
inc
or
dec
add
sub
pop
xlat
add
add
pop
mov
clc
rcr
pop
inc
cmp
push
mov
pop
push
adc
add
add
out
pop
test
stos
push
xchg
jnp
inc
addr16
pop
dec
mov
pop
pop
fwait
inc
pop
add
add
lahf
enter
inc
inc
add
dec
sti
dec
aam
dec
push
xchg
push
int3
sub
fwait
xchg
jo
lds
add
push
bound
inc
test
(bad)
or
ins
inc
cmovg
das
mov
and
cmp
mov
outs
mov
(bad)
ret
jae
cmp
sbb
inc
pop
adc
add
enter
xlat
or
mov
(bad)
push
pop
push
jmp
add
stos
movs
cmp
out
dec
sub
inc
fistp
or
or
(bad)
iret
push
push
out
iret
nop
bound
addr16
dec
add
rol
cmps
outs
addr16
sbb
mov
lea
push
fcmovb
test
jae
scas
mov
and
das
inc
xor
add
cmps
in
scas
shr
dec
add
mov
sbb
adc
pop
aas
cwde
lock
pop
dec
or
adc
jnp
cmps
outs
add
aaa
inc
dec
test
or
addr16
dec
mov
pop
push
pop
scas
lock
add
inc
arpl
rol
imul
push
inc
or
and
xor
bound
dec
xchg
and
dec
cmp
dec
(bad)
adc
inc
adc
and
pop
nop
fsub
jle
add
push
fisttp
out
sar
sbb
pop
inc
mov
mov
inc
push
ins
shl
pop
add
sbb
add
out
jmp
sub
inc
add
popf
inc
pusha
sbb
and
das
mov
mov
aas
mov
dec
pusha
bound
and
push
add
dec
imul
bound
push
cmps
stos
push
test
cmps
pop
and
movs
repz
add
push
rcl
add
cwde
fbstp
unpcklps
rcl
and
sub
add
add
dec
cmp
mov
xlat
fisubr
cmp
push
cmp
push
bound
jmp
sbb
xor
push
sbb
and
bound
es
inc
dec
shl
mov
dec
pop
stos
inc
les
adc
mov
mov
mov
dec
mov
ss
xlat
dec
dec
inc
ret
cmc
pusha
stos
or
pop
jecxz
mov
lock
push
or
push
(bad)
push
add
dec
dec
inc
dec
sub
pop
loope
ins
inc
mov
ret
add
inc
jnp
dec
and
test
dec
dec
adc
add
push
mov
ret
(bad)
mov
jl
or
cmps
push
add
add
mov
inc
push
or
inc
nop
fmul
adc
mov
adc
add
push
sbb
and
pop
aam
dec
stos
inc
mov
loope
push
icebp
pusha
sub
jno
jg
pop
(bad)
xor
inc
push
jge
adc
imul
pop
neg
pop
add
mov
es
push
les
fisttp
(bad)
pop
add
pop
shl
fucomip
stc
int3
xchg
(bad)
pop
add
lock
mul
adc
fnstcw
add
aam
add
add
mov
aas
data16
repz
pop
add
ins
add
movsx
xlat
mov
push
mov
mov
out
or
add
pop
pop
jmp
mov
add
and
das
pop
ficom
xor
add
cmp
add
hlt
and
xor
push
neg
push
push
inc
movs
pop
imul
ja
inc
fcom
push
push
pop
idiv
jno
fcom
add
inc
es
cmp
add
mov
inc
add
fisubr
add
stos
bound
mov
and
ret
cmp
adc
push
arpl
nop
or
xchg
push
and
aad
sub
lahf
push
test
jb
push
bound
ss
add
pop
xchg
scas
push
scas
adc
or
push
lds
sbb
lods
fadd
dec
fstp
ffreep
cmp
rcl
push
jo
add
push
sbb
mov
ja
inc
pusha
and
addr16
sub
xor
cmp
push
leave
add
fild
jnp
inc
inc
add
xchg
push
(bad)
push
add
mov
push
or
pusha
and
out
aad
ss
out
mov
pop
mov
(bad)
outs
inc
push
xor
push
jg
mov
dec
mov
repz
mov
or
iret
push
outs
aas
mov
xchg
push
out
mov
jae
es
bound
outs
push
or
pop
adc
adc
ficomp
push
mov
xor
cmp
mov
dec
outs
xor
ror
cmp
(bad)
cmps
scas
or
sbb
adc
dec
add
pop
test
outs
data16
push
adc
push
and
ss
iret
pop
mov
mov
cmovbe
adc
push
xor
enter
inc
test
inc
ja
xchg
test
mov
ret
jecxz
adc
dec
outs
sub
pop
pusha
enter
pop
daa
jmp
pop
outs
pop
inc
add
mov
mov
ss
add
cli
sbb
ds
imul
adc
dec
lea
mov
mov
ins
mov
shr
(bad)
cs
add
daa
cmp
adc
call
adc
out
sar
add
mov
pop
aaa
and
idiv
dec
bound
push
and
jo
test
jbe
(bad)
mov
pop
jp
add
add
daa
pmullw
inc
mov
fbld
adc
jmp
jp
jo
fadd
pop
outs
push
sub
jno
mov
ins
cs
mov
push
push
mov
inc
mov
mov
add
sub
or
xchg
sub
jl
xchg
xchg
push
pop
and
dec
mov
es
mov
mov
jg
mov
inc
xor
push
pop
push
sub
push
shl
mov
jecxz
lahf
ficom
push
xor
pop
mov
add
dec
add
test
inc
push
ss
push
pop
sub
adc
lock
aas
push
popa
jb
cmp
(bad)
and
jne
and
mov
jae
adc
je
imul
and
pop
jp
push
hlt
xchg
push
jo
dec
adc
add
cmps
rcl
pop
cmp
push
jne
sar
inc
dec
shl
arpl
ja
outs
in
sbb
and
or
add
and
cmp
test
dec
pop
push
push
dec
add
or
push
fdivp
adc
bound
fldenv
ret
dec
jne
je
outs
sub
pop
mov
popa
(bad)
xchg
add
sbb
add
mov
not
inc
rol
jg
xlat
pop
push
fild
cmps
jo
clc
sub
(bad)
cld
inc
add
add
or
pop
fbstp
add
mov
xor
enter
fldenv
inc
sbb
ins
call
dec
jae
dec
popa
jae
cmp
int
xor
repnz
gs
mov
mov
or
sub
test
push
push
sub
das
ja
ins
add
push
mov
fs
call
popa
push
mov
inc
inc
lods
pop
in
cs
xchg
inc
daa
cmps
ins
pop
mov
rol
and
bound
sbb
gs
jo
add
mov
shr
xchg
rcl
scas
add
mov
dec
xlat
or
or
and
jnp
fsub
pop
inc
inc
loope
sti
sahf
hlt
jo
or
dec
xchg
fs
adc
inc
pushf
mov
aaa
dec
or
ss
nop
xor
cmp
pop
in
mov
push
and
inc
rcr
sub
cmp
mov
pusha
or
popa
pop
hlt
cmp
push
dec
pushf
dec
(bad)
push
inc
inc
loope
test
lock
dec
cmps
test
ja
push
bound
and
nop
pushf
dec
xchg
inc
jb
push
xchg
(bad)
mov
inc
imul
jbe
inc
inc
ret
call
(bad)
movs
add
pop
shl
pushf
push
xor
ja
fild
xor
jne
aaa
neg
stos
and
cs
pop
push
pop
inc
pop
(bad)
pop
add
bound
pop
pop
jae
mov
(bad)
mul
xchg
add
xchg
pusha
inc
pusha
push
dec
inc
adc
test
push
ret
xchg
loopne
xor
(bad)
sub
daa
inc
or
mov
pop
xchg
push
dec
or
inc
ret
dec
and
dec
or
sub
jb
push
mov
and
call
jo
pop
inc
dec
test
mov
dec
and
je
cmps
fisubr
cld
fldenv
arpl
sub
jae
gs
and
jne
test
movs
sahf
inc
popa
dec
and
es
adc
in
or
outs
gs
cmps
rol
gs
or
inc
adc
je
pop
sub
jae
add
arpl
ss
rcr
pusha
cmp
and
adc
xor
outs
dec
push
fdivr
dec
dec
inc
mov
lods
fstp
fiadd
je
push
add
or
jne
call
and
int3
fwait
ret
jge
push
xchg
push
loope
and
adc
dec
jae
or
je
mov
xchg
hlt
gs
aas
or
test
fist
gs
popf
and
push
ins
js
push
outs
dec
sbb
mov
popf
push
and
popa
xlat
push
and
int3
inc
loop
jmp
shr
dec
cmps
js
and
dec
push
clc
push
rcl
or
push
mov
outs
out
call
nop
das
and
fs
addr16
cs
rol
jb
pop
lods
icebp
fwait
or
xlat
jbe
jno
adc
cmp
push
bound
mov
add
xor
pop
adc
into
push
sub
pop
push
mov
fst
pop
inc
das
in
add
mov
inc
mov
in
add
sbb
fwait
or
xor
or
rcr
addr16
loop
xor
popa
sbb
xchg
mov
xchg
or
shl
sub
punpckldq
add
adc
mov
add
push
mov
call
daa
and
movs
cmp
jae
fisttp
fist
inc
sbb
sub
cs
repnz
nop
ja
add
adc
mov
sub
lea
shl
or
jecxz
sbb
mov
adc
pop
mov
iret
jne
outs
pop
test
mov
mov
ret
push
sbb
imul
ja
fld
jge
nop
pop
xlat
arpl
push
adc
push
inc
enter
mov
fadd
cmp
xor
or
das
inc
lock
adc
rcr
ja
inc
mov
add
shr
add
fcom
pop
inc
add
add
adc
inc
sub
jno
mov
xchg
adc
sbb
sbb
dec
mov
rcl
mov
arpl
sbb
push
mov
push
dec
dec
pop
dec
outs
scas
ror
jne
sub
and
sub
test
call
jne
push
push
add
inc
imul
push
scas
pop
push
push
jl
push
xchg
xchg
inc
mov
popa
inc
sub
jo
mov
scas
jae
push
das
add
pop
pop
scas
gs
mov
aaa
rol
jns
xchg
fs
and
sbb
add
inc
dec
xor
call
out
test
outs
fs
jae
jo
mov
dec
popa
xor
sbb
daa
cs
js
xchg
pop
bound
inc
ins
add
jle
inc
outs
inc
ins
fs
pop
pmaxub
ret
and
inc
sub
outs
cwde
jne
add
cmp
loop
popa
fs
in
(bad)
add
push
push
or
push
cmc
push
add
pop
push
sahf
or
fiadd
mov
loope
xor
pop
scas
aaa
and
enter
adc
pop
data16
sti
add
(bad)
pop
das
pop
repnz
mov
xor
pop
loopne
out
mov
add
add
in
xchg
not
jbe
test
xor
and
and
sbb
adc
sub
test
iret
xchg
push
pop
dec
pop
sti
dec
or
mov
inc
add
das
or
or
xor
jo
inc
cmp
or
test
dec
dec
add
inc
add
or
lds
sub
cs
add
mov
inc
(bad)
dec
enter
xor
adc
scas
inc
add
push
repnz
(bad)
sbb
sub
or
add
das
lahf
nop
xchg
push
pop
in
inc
add
pop
jo
inc
inc
mov
pusha
xchg
out
add
adc
gs
adc
push
out
add
xchg
cmp
mov
daa
fsubr
pusha
pop
dec
loopne
inc
mov
or
das
dec
ret
pop
sub
pop
das
pop
or
or
das
pop
cmps
popf
mov
out
adc
das
add
add
add
add
push
inc
xor
inc
test
imul
(bad)
cs
push
out
std
daa
add
mov
inc
adc
mov
xor
loopne
int
jge
pusha
push
call
inc
lea
push
jg
inc
pop
jp
inc
and
data16
pop
ins
loope
(bad)
mov
and
add
mov
or
pop
add
xor
jb
ins
sbb
out
cdq
sbb
outs
pop
and
ror
mov
or
jo
pop
jb
push
fisub
fisub
jb
pop
jge
ins
mov
cmp
pop
(bad)
or
fwait
mov
outs
push
outs
pop
mov
jl
push
pop
arpl
cmp
jo
outs
gs
lds
cmp
dec
mov
mov
arpl
mov
xor
adc
xlat
inc
shr
pop
daa
inc
enter
daa
pop
sbb
mov
fnsave
xor
cmp
(bad)
out
stos
icebp
jge
and
ja
and
pop
inc
jecxz
and
aam
adc
mov
sbb
mov
(bad)
jo
adc
in
sbb
xor
or
outs
push
jo
adc
and
js
dec
jo
adc
and
inc
(bad)
fcomp
imul
push
pop
das
lahf
add
adc
shl
inc
sub
and
nop
pop
dec
or
sti
mov
mov
jne
gs
gs
iret
sub
push
push
mov
xchg
sbb
mov
sbb
cdq
pop
push
jb
mov
shl
loope
ret
xor
push
or
adc
or
retf
jmp
xchg
and
pop
ss
dec
pop
outs
xor
jmp
sbb
add
imul
and
fbld
rol
jmp
pop
sahf
inc
arpl
push
push
jg
int3
std
vpmacssdql
in
loope
add
loopne
test
jne
das
jo
xor
packuswb
stos
and
sub
mov
or
dec
js
ds
fbstp
popa
adc
mov
sbb
mov
mov
mov
add
cmc
cmps
inc
push
nop
dec
mov
inc
test
lods
or
test
push
cmp
pop
mov
outs
cs
shl
mov
xor
lahf
xchg
scas
popf
in
push
add
jo
push
in
mov
mov
sub
pop
add
lea
cmp
mov
sti
lahf
aas
push
aam
call
iret
inc
fisttp
and
ss
dec
pop
push
pushf
in
add
aas
mov
pop
fisttp
pop
inc
or
ins
push
sbb
js
cwde
push
dec
ins
mov
lods
sub
inc
cmps
ja
pop
jle
js
dec
sbb
inc
sub
jg
lock
aas
push
jecxz
add
cmp
add
not
data16
dec
inc
aas
dec
in
xchg
pusha
mov
add
cwde
dec
lahf
test
not
out
aaa
mov
add
mov
jae
push
ret
xor
xor
mov
inc
or
or
xchg
aaa
inc
stos
inc
mov
xor
aaa
inc
pop
push
add
or
scas
add
mov
mov
push
adc
add
sbb
iret
or
pop
push
mov
adc
test
enter
lods
add
jecxz
jno
dec
inc
pop
jo
shl
pop
clc
xchg
adc
lahf
or
adc
mov
cmp
loope
or
scas
push
adc
jns
mov
adc
push
mov
jnp
out
push
add
jnp
push
jge
jle
mov
pusha
jg
and
mov
jl
cmp
inc
sbb
test
push
gs
xchg
out
mov
pusha
mov
push
jo
outs
pop
pusha
mov
pusha
adc
xor
inc
inc
bound
mov
cmp
leave
xchg
push
clc
mov
data16
pop
and
outs
jg
cdq
add
add
loop
mov
mov
sahf
fwait
shl
add
imul
mov
sbb
cs
mov
push
and
and
scas
jae
cmp
sub
add
adc
pop
sub
mov
jns
imul
mov
cmp
jle
lds
cmp
pop
outs
jg
xchg
retf
shl
test
outs
xchg
sub
arpl
inc
sar
(bad)
add
lock
pusha
xor
mul
adc
xor
mov
gs
mov
ror
imul
js
or
or
cmp
sub
mov
add
outs
sub
push
popa
test
mov
sub
popa
outs
xchg
es
and
pushf
retf
lea
or
les
inc
push
loop
or
mov
xor
cmp
mov
sub
inc
inc
dec
je
jp
pop
imul
pop
daa
pop
sub
dec
add
dec
rcl
icebp
add
and
add
cmp
pop
inc
dec
pop
dec
jo
add
push
fcom
or
dec
mov
dec
test
mov
imul
iret
ja
data16
ss
js
cdq
or
js
add
mov
push
jecxz
(bad)
ss
repz
inc
xor
ins
ins
mov
(bad)
push
cmp
sbb
pop
(bad)
aam
add
add
xor
xor
xor
add
pop
add
add
das
jge
jmp
mov
xor
pusha
cmp
pop
mov
inc
add
das
or
dec
pop
das
dec
ss
lahf
enter
inc
xchg
inc
adc
das
sub
and
mov
add
mov
ret
push
add
add
nop
ds
mov
gs
in
cmp
inc
add
out
mov
sbb
add
out
and
inc
pop
cld
push
repnz
xor
das
addr16
ss
cs
mov
ror
add
mov
out
push
push
inc
mov
dec
ins
jo
or
aam
repz
imul
loopne
and
add
ss
(bad)
or
sti
popf
push
xor
fucomip
dec
or
dec
sbb
ror
int3
inc
dec
sbb
shl
ret
inc
mov
fwait
add
inc
fild
inc
add
add
(bad)
daa
inc
pop
ret
mov
jne
gs
mov
cmp
nop
aas
aas
push
repz
call
daa
outs
pop
mul
sbb
fiadd
add
cwde
dec
mov
xchg
mov
xchg
push
dec
mov
add
imul
leave
(bad)
push
xor
inc
add
mov
jae
inc
jg
cs
daa
dec
or
dec
dec
inc
ja
jg
push
js
adc
jg
xor
xchg
lea
clc
cmp
adc
jno
les
pop
ret
lock
das
or
or
push
dec
push
pop
and
push
inc
cmp
pop
sub
aam
push
popf
dec
and
mov
push
mov
mov
inc
outs
loope
mov
jb
in
mov
push
and
push
jne
inc
out
cmps
loopne
inc
dec
and
loope
lods
or
adc
xchg
mov
xchg
iret
xor
push
mov
mov
aam
mov
lock
out
loopne
mov
scas
loopne
jbe
mov
loopne
and
nop
inc
push
out
out
push
scas
push
push
shl
mov
push
lock
cmps
(bad)
push
mov
push
adc
ja
loopne
mov
push
shl
cs
out
enter
mov
push
mov
mov
mov
mov
aaa
add
push
nop
fdivr
xchg
das
pop
(bad)
xor
push
iret
adc
js
add
call
clc
cdq
fs
add
inc
arpl
jae
ret
mov
sti
js
jns
iret
popf
jge
mov
xor
xor
fild
and
add
faddp
rcl
les
outs
test
jo
or
sbb
adc
xchg
aaa
jmp
mov
sub
sub
fsub
add
mov
sub
pop
cmps
push
add
rcl
imul
(bad)
push
stos
mov
cmp
(bad)
jo
dec
xchg
push
pop
sbb
jecxz
lahf
ds
or
lods
addr16
outs
sub
pusha
stos
mov
icebp
pop
and
adc
lea
and
sub
xor
popa
(bad)
mov
popa
aaa
push
nop
icebp
outs
fwait
jns
imul
mov
pop
xchg
ror
mov
fdivr
data16
dec
or
dec
retf
jo
into
popa
push
adc
fwait
scas
aam
daa
dec
out
lods
ja
xchg
mov
inc
pop
js
mov
pop
mov
mov
lods
adc
inc
jl
adc
push
push
(bad)
rcl
dec
xchg
loopne
lock
and
loop
dec
inc
jmp
je
pop
cwde
(bad)
fadd
or
push
daa
(bad)
pop
adc
stos
pop
and
or
ror
call
cmp
jmp
sub
stos
push
or
loopne
je
lahf
and
push
loopne
adc
rol
add
xchg
aam
aad
(bad)
inc
(bad)
and
sbb
scas
rcr
mov
or
xor
sub
cmp
cmps
test
push
scas
jne
sub
inc
adc
or
out
or
sbb
xchg
iret
add
or
add
call
adc
dec
inc
jb
pop
and
mov
xchg
push
gs
jge
ja
(bad)
shr
and
arpl
cdq
dec
popa
fistp
inc
js
dec
gs
or
jo
sub
imul
sub
aaa
jne
xor
push
fsubr
and
daa
inc
test
fild
add
fisttp
rcl
add
outs
test
sub
ins
push
add
scas
sbb
shl
(bad)
imul
imul
daa
nop
movs
jns
inc
pusha
test
pop
mov
sbb
dec
cmp
add
mov
xchg
or
dec
sbb
clc
inc
mov
add
leave
xor
mov
arpl
adc
int3
mov
leave
fmul
aam
out
inc
cs
push
loopne
in
dec
adc
xchg
push
add
ja
cli
(bad)
test
rcl
xchg
call
adc
add
pusha
loope
sub
cmp
test
dec
fcmovnbe
(bad)
cmp
outs
push
sar
out
push
add
inc
xor
mov
inc
sub
es
push
sti
out
inc
and
and
bound
mov
lock
adc
je
mov
push
jo
nop
mov
xlat
or
push
adc
push
fidivr
push
mov
shr
mov
ins
dec
pop
pop
cs
push
pop
inc
shl
push
nop
das
xor
rcr
jge
fstp
push
push
pop
push
push
adc
popa
push
out
sbb
pusha
outs
fs
push
push
and
adc
call
jbe
ss
and
jne
cmp
test
dec
sub
and
push
push
push
adc
xor
mov
push
sbb
mov
push
push
add
out
ins
dec
ficom
(bad)
ins
das
outs
mov
(bad)
ds
mov
xor
clc
cmps
push
loope
xchg
jle
addr16
and
repz
aaa
push
push
adc
ror
push
mov
cmp
push
rcl
xor
xlat
fst
push
call
ins
add
xor
mov
or
dec
outs
push
ins
jmp
dec
bound
jecxz
and
xor
outs
outs
js
mov
fs
cmp
pop
out
and
pop
push
jl
push
sub
dec
add
sub
ja
dec
outs
popa
dec
push
or
push
hlt
xor
mov
inc
jmp
xor
push
sbb
call
fisttp
int
add
mov
outs
and
xchg
sbb
popf
inc
dec
ja
cmp
jae
push
dec
sbb
ins
xchg
aas
jp
inc
les
mov
mov
jo
js
cld
outs
jne
push
outs
jecxz
mov
cli
jns
rol
je
jge
test
movs
ds
(bad)
test
push
mov
jae
sbb
mov
or
lods
in
ja
jg
sbb
stos
push
imul
dec
iret
adc
dec
imul
mov
dec
add
ins
ss
dec
out
dec
adc
xor
add
pop
rol
add
adc
pop
mov
sub
add
data16
or
jmp
mov
push
ins
jne
outs
es
dec
ror
and
sbb
sbb
push
into
rcl
mov
push
inc
mov
test
aam
jne
test
xor
push
(bad)
outs
mov
hlt
add
outs
cmps
cmp
cmp
mov
outs
jb
add
loope
mov
cwde
mov
jae
daa
push
pop
xchg
das
pop
gs
mov
repnz
bound
loopne
ret
xchg
outs
shl
mov
les
stos
ins
les
or
dec
ja
fstp
inc
movs
fimul
mov
and
rol
pop
jo
fadd
dec
dec
pop
push
inc
test
dec
dec
jecxz
ja
push
(bad)
dec
dec
inc
inc
and
or
xchg
inc
xor
ja
or
push
inc
sub
aaa
push
rcr
dec
out
inc
push
dec
push
xor
(bad)
retf
rol
cmp
dec
(bad)
fild
push
fcomp
jae
sub
les
add
inc
xor
mov
cmp
xchg
cmp
add
mov
fld
movs
mov
sahf
rol
ds
ins
pop
xor
or
pop
daa
inc
repz
pop
and
or
and
and
dec
adc
test
popa
xor
outs
or
call
addr16
arpl
cwde
in
inc
ret
add
dec
mov
outs
push
dec
js
dec
not
fwait
pop
sub
bound
pop
push
inc
dec
sub
adc
push
fcomp
stos
inc
inc
xor
outs
jne
sub
clc
out
inc
sti
cmp
and
adc
jmp
cld
inc
xor
cmp
and
push
pop
mov
stos
loope
add
add
dec
or
outs
add
pop
pop
ret
push
add
pop
int3
les
ret
sub
push
push
out
add
pop
xor
mov
add
jno
pop
xor
cs
sbb
iret
fwait
je
mov
add
pop
aas
mov
add
jmp
add
xchg
cvtps2pd
test
push
jl
(bad)
fadd
out
sub
push
mov
push
ret
das
lods
sub
or
and
mov
inc
pop
sbb
push
pop
or
xor
enter
sub
dec
mov
or
xor
outs
popa
bound
mov
dec
mov
stc
jns
xchg
fcomip
xor
icebp
add
cmc
fcomip
stc
call
(bad)
idiv
mov
xchg
es
push
shl
out
add
push
loopne
or
push
nop
pusha
or
pop
or
push
mov
adc
or
jns
test
sahf
adc
loopne
adc
inc
aaa
sub
aaa
pop
xor
sbb
rol
daa
pop
sahf
out
mul
loopne
xor
test
mov
ja
cmps
push
pop
loope
ins
push
sub
fs
clc
mov
sub
sbb
push
cs
add
push
sub
dec
lods
cmp
and
and
jmp
(bad)
bound
push
aam
adc
gs
ins
not
movs
cmp
mov
pop
or
mov
dec
out
shl
jns
mov
sar
fwait
push
es
ins
enter
xlat
push
jo
mov
xor
ds
das
or
xchg
cmp
adc
(bad)
outs
and
outs
push
addr16
push
xor
clc
lods
test
dec
push
imul
add
add
push
xor
push
mov
inc
push
mov
or
mov
(bad)
push
and
addr16
inc
fs
sub
je
inc
mov
jnp
inc
jmp
or
jne
cmp
inc
out
adc
push
daa
fsubr
bound
aaa
enter
rol
mov
jmp
nop
out
movs
div
movs
push
test
cs
or
inc
(bad)
xlat
(bad)
nop
aaa
push
outs
mov
sub
or
scas
nop
jo
imul
dec
and
pop
pop
or
push
inc
sub
adc
pusha
mov
lods
mov
out
pushw
shl
cmc
cmc
frstor
es
shl
out
pop
sub
sub
and
ss
mov
fild
push
shr
fucomip
imul
push
mov
stc
dec
dec
dec
mov
add
push
inc
add
sahf
push
jb
and
jb
cmps
inc
je
retf
mov
push
adc
add
in
cmp
popa
outs
inc
and
and
jo
cmps
cmp
rcr
push
or
test
push
pop
inc
stos
mov
out
mov
and
adc
xor
xor
mov
ror
add
lahf
xor
das
inc
pop
sub
cs
or
sbb
jae
sti
xor
cs
popf
pop
and
or
outs
nop
aaa
loopne
and
mov
dec
adc
outs
cs
outs
or
sti
and
sub
jmp
pop
push
lock
cs
ja
sub
mov
aad
test
cmp
mov
jge
push
inc
dec
and
pop
mov
pop
sbb
arpl
dec
and
dec
popf
movs
dec
jp
inc
popa
arpl
daa
push
imul
inc
ss
loopne
jecxz
mov
imul
daa
pop
jo
jbe
pop
mov
jae
das
ror
dec
ins
hlt
sub
add
push
gs
stos
ret
call
push
outs
cmp
xchg
dec
frstor
dec
je
arpl
(bad)
lods
pusha
pushf
push
nop
sub
les
std
mov
mov
mov
add
push
sbb
daa
xchg
dec
dec
push
loopne
bound
add
retf
push
add
jae
inc
movs
add
and
inc
sti
jnp
push
pop
scas
inc
jns
daa
mov
fstp
bound
push
push
jnp
xor
and
pop
and
adc
(bad)
sar
fstp
xor
aam
push
inc
dec
xor
mov
add
jle
jmp
das
add
das
inc
add
add
lahf
gs
jo
cld
xchg
jl
adc
mov
dec
add
pusha
mov
push
pop
pusha
pusha
dec
jg
and
push
adc
inc
test
les
je
imul
shl
dec
pop
es
mov
cdq
add
xor
outs
and
pop
mov
inc
jo
add
movs
dec
mov
jmp
and
inc
and
jns
push
dec
sbb
adc
mov
jb
jns
fcomp
dec
arpl
das
add
mov
ins
rol
(bad)
xchg
sbb
out
daa
fild
pop
and
cmp
fcom
xor
hlt
das
das
xchg
(bad)
mov
lahf
and
mov
data16
adc
imul
mov
std
pusha
or
push
mov
mov
imul
adc
dec
inc
sbb
mov
nop
inc
fstp
cs
scas
fsub
mov
jb
ins
cmc
imul
imul
cmp
and
adc
stc
rcr
push
mov
push
xor
jmp
sub
inc
mov
cmps
mov
xor
(bad)
push
fld
pop
jae
daa
addr16
add
xchg
ss
mov
in
and
jae
mov
cmp
mov
jns
mov
movs
push
or
test
add
add
and
inc
sbb
pop
jbe
gs
cwde
outs
pop
arpl
jbe
(bad)
cli
inc
jns
jg
cmp
sub
sbb
bound
push
adc
ins
pop
sub
sti
mul
rcr
or
(bad)
push
mov
xor
or
sub
dec
mov
nop
pop
or
lea
and
inc
addr16
jecxz
add
shl
or
sbb
(bad)
lock
scas
mov
adc
sbb
pop
mov
aad
scas
pop
scas
dec
nop
push
mov
aaa
add
add
dec
mul
jle
or
xchg
mov
push
fs
rcr
iret
or
xor
xlat
aaa
push
add
jns
adc
xchg
sub
outs
pop
pop
inc
loop
add
mov
fidiv
loop
and
fiadd
jo
inc
xchg
dec
cld
outs
adc
dec
xchg
les
sbb
adc
jnp
paddb
cmps
sbb
mov
je
and
cmps
jo
push
lea
add
retf
sub
stos
inc
dec
or
xor
sbb
aas
out
inc
add
add
push
sub
ror
pop
dec
gs
fwait
int
gs
and
je
jo
push
dec
in
popf
outs
addr16
sub
pop
push
hlt
or
push
popa
push
add
inc
mov
push
rep
lea
push
cmp
pop
movs
movq
push
jo
ja
jmp
iret
or
or
push
jnp
mov
mov
ja
push
sub
dec
dec
dec
sub
ja
or
daa
arpl
inc
pop
jno
pop
jae
pusha
daa
and
movs
test
push
hlt
pop
outs
jae
fcom
jb
adc
aas
movs
inc
and
aas
pusha
cmps
dec
or
ja
adc
pop
pop
inc
cmp
sbb
ins
jle
push
and
(bad)
push
dec
adc
test
cmp
ss
daa
push
gs
xchg
lock
inc
inc
outs
jo
pushf
xchg
sahf
cmps
jge
xchg
push
and
test
cmp
xor
dec
sti
add
and
out
ja
fmul
xchg
dec
sbb
or
push
xor
iret
repz
cld
add
xchg
mov
add
inc
push
push
and
pop
daa
inc
js
ficom
pop
inc
aaa
lds
nop
rcl
and
sbb
xor
pop
mov
inc
adc
loop
shl
popa
adc
sbb
and
or
daa
push
add
mov
pop
pop
ret
pop
jecxz
and
mov
xor
mov
pop
add
es
and
outs
jae
arpl
and
lods
aaa
adc
cs
iret
inc
aaa
jb
sub
sahf
jb
out
dec
ins
bound
or
jle
arpl
pop
jae
inc
movs
test
shl
push
mov
iret
jae
outs
imul
iret
dec
and
rcl
adc
call
out
mov
or
pop
call
test
jmp
pop
addr16
mov
fcmovu
(bad)
and
add
es
and
ret
js
cmp
nop
push
mov
ret
jne
lock
dec
push
mov
xchg
push
sbb
or
sbb
xchg
jbe
xchg
bound
adc
inc
ds
xor
nop
xlat
pusha
jmp
(bad)
jmp
loopne
stos
mov
mov
cmps
dec
fild
push
ds
add
jns
push
call
loope
in
imul
jnp
jo
push
(bad)
push
and
inc
adc
jecxz
mov
outs
cmps
inc
and
dec
popa
mov
xchg
ret
xlat
lahf
and
inc
xor
push
or
jae
loopne
loop
mov
or
push
add
psrlq
in
scas
in
das
and
add
add
pop
mov
adc
fstp
mov
inc
popa
add
adc
mov
lea
add
loopne
pop
ret
cwde
daa
dec
shl
mov
xchg
mov
icebp
inc
shl
jle
out
mov
(bad)
xor
cs
pushaw
inc
adc
enter
stc
jle
out
dec
es
cmp
hlt
dec
outs
cmp
mov
inc
and
out
fimul
cmp
add
loopne
jo
daa
cmp
stc
cwde
mov
scas
nop
cli
mov
aas
hlt
xor
pop
fiadd
mov
fs
add
cmc
(bad)
shl
adc
bndstx
outs
outs
or
shr
xor
scas
sbb
sti
in
sub
jo
and
lock
aaa
inc
dec
sti
dec
ins
pop
stos
push
push
or
jl
pop
cmp
aad
add
dec
push
jp
inc
js
and
add
xor
adc
xchg
pop
shl
add
dec
pop
pop
push
or
into
add
jmp
(bad)
out
mov
jge
nop
or
or
dec
outs
push
ror
or
div
push
dec
sbb
xor
imul
adc
bound
test
add
outs
jne
ror
pop
sub
jbe
dec
and
xchg
push
nop
and
retf
mov
ins
sub
dec
adc
add
out
sbb
jo
push
and
or
nop
dec
aas
mov
mov
push
out
cmps
fadd
and
dec
and
adc
pop
cmps
add
data16
shl
pop
shr
jne
and
nop
xchg
push
inc
ins
sub
mov
add
sbb
fs
dec
mov
push
bound
ins
inc
loop
sub
add
les
popa
xchg
xor
push
dec
inc
outs
jo
push
jo
aam
push
jns
add
and
add
mov
popf
mov
outs
jne
push
addr16
and
add
mov
push
clc
iret
repz
lock
fmul
sar
cmp
pushf
xchg
mov
cmp
repz
rcl
mov
call
outs
pop
add
push
dec
jae
jmp
inc
or
gs
jge
or
sub
and
call
(bad)
add
arpl
xlat
test
ins
scas
ss
or
mov
jo
call
jb
add
push
inc
nop
add
xchg
(bad)
cs
outs
push
scas
add
dec
add
inc
add
sub
stos
and
adc
dec
push
push
test
sub
(bad)
adc
and
pop
inc
sub
inc
pop
xor
xchg
inc
dec
or
fisttp
pop
sbb
mov
inc
push
sbb
ret
inc
pop
push
add
das
bound
xor
xchg
xchg
dec
dec
pop
adc
js
lea
nop
aas
xchg
popa
lahf
or
push
test
outs
mov
adc
xor
push
loopne
jle
adc
or
das
gs
lods
push
movs
aaa
xor
add
jl
sbb
add
push
add
mov
popa
sbb
dec
xchg
les
leave
ss
sub
and
dec
cmp
xchg
cs
inc
icebp
movs
pop
adc
inc
inc
push
ret
xor
adc
pop
test
lods
gs
cmp
ja
outs
ins
jns
popa
fs
or
aas
add
push
mov
pop
push
and
sbb
or
mov
pop
and
or
cmps
popf
mov
sub
ja
pop
jae
mov
inc
(bad)
inc
inc
pop
pop
jbe
and
retf
inc
inc
sub
jp
inc
push
inc
pop
pop
int3
mov
and
inc
push
dec
mov
(bad)
daa
pop
dec
push
and
push
inc
xchg
mov
dec
push
dec
push
jbe
push
dec
inc
inc
repnz
push
daa
cwde
jbe
adc
scas
pop
add
jle
and
jge
dec
pop
xchg
and
push
pop
dec
jae
daa
neg
dec
push
pop
fisttp
add
dec
dec
inc
inc
add
dec
pusha
mov
out
inc
push
inc
ja
mov
pop
push
cmp
dec
lock
inc
or
sbb
inc
dec
push
iret
pop
xor
das
push
cmp
push
push
xchg
mov
cmc
inc
rcr
dec
add
or
les
inc
push
jg
mov
push
inc
inc
and
push
dec
iret
test
aam
pop
cs
clc
adc
arpl
inc
push
inc
push
inc
dec
dec
adc
mov
add
cs
inc
mov
iret
aas
inc
fcom
dec
out
add
push
pop
je
clc
push
push
inc
pusha
or
(bad)
pop
pop
dec
inc
pop
loop
push
cmp
pop
push
inc
pop
inc
inc
dec
(bad)
sbb
das
push
dec
mov
sbb
sbb
dec
xor
int
push
out
daa
pop
push
outs
mov
mov
push
push
mul
dec
ins
jg
or
and
dec
inc
push
aas
cld
mov
push
daa
dec
mov
dec
jb
inc
dec
in
sti
cmp
call
dec
ja
add
xchg
fs
dec
ja
mov
dec
push
lahf
push
inc
aaa
xchg
ret
pop
push
lahf
inc
push
ja
loopne
mov
outs
dec
pop
ja
inc
xchg
movs
int
push
mov
pop
mov
outs
lods
inc
pop
adc
sbb
push
inc
push
addr16
lods
fcomp
cmovae
lahf
popa
pop
mov
push
inc
push
xchg
push
inc
call
inc
pop
pop
scas
push
pop
cmp
jns
lock
pop
ins
add
inc
pop
sub
dec
pop
cmp
xor
xlat
jo
xor
dec
adc
rol
push
push
sub
add
(bad)
xor
sub
ins
pcmpgtd
int3
fmul
mov
push
push
pop
mov
and
jb
push
addr16
push
jb
push
jb
dec
dec
or
xor
jo
pop
push
movs
popa
push
sub
inc
dec
dec
push
add
push
pop
es
stos
inc
push
add
daa
mov
push
fbld
out
dec
add
or
jne
inc
jg
pop
push
lods
add
sub
mov
(bad)
pop
adc
push
push
dec
inc
push
push
outs
es
inc
in
pop
or
xor
push
pop
imul
mov
scas
jg
sub
mov
push
push
inc
lds
push
outs
jb
pop
jb
push
dec
push
jb
push
dec
dec
sbb
ret
aas
adc
cwde
push
mov
dec
(bad)
popf
adc
scas
mov
repz
ret
xor
mov
pop
pop
clc
push
dec
pop
push
push
and
push
cmc
aas
cmc
push
push
imul
lock
mov
js
aaa
inc
dec
not
jl
add
mov
add
pop
inc
out
push
inc
pop
and
lods
push
outs
or
jnp
scas
and
push
ins
adc
adc
push
das
fldcw
or
mov
push
iret
and
pop
add
dec
inc
div
sub
call
cs
or
out
rcr
inc
cmps
xor
popf
xchg
sub
daa
mov
adc
popa
or
push
outs
inc
test
dec
daa
mov
icebp
push
mov
add
pop
popf
inc
push
out
inc
or
inc
mov
push
adc
jae
(bad)
stc
daa
pop
and
loopne
stos
sar
dec
dec
sbb
add
daa
and
inc
aaa
das
dec
mov
repnz
push
dec
dec
dec
call
inc
inc
dec
push
pop
cmp
mov
push
inc
aaa
add
test
mov
mov
dec
pop
jmp
inc
test
xchg
into
inc
dec
inc
pusha
arpl
mov
fisttp
aaa
fbstp
les
push
dec
pop
inc
push
dec
daa
xor
add
das
inc
inc
dec
aaa
mov
dec
in
inc
mov
pop
test
sbb
ret
inc
pop
and
add
mov
push
mov
sbb
(bad)
adc
mov
or
outs
cld
pop
ja
sti
fs
in
push
out
loopne
ret
mov
push
dec
push
aam
les
inc
pop
stc
nop
mov
mov
adc
cs
cmp
iret
dec
jmp
mov
mov
cmp
dec
sub
dec
mov
mov
sahf
out
call
jns
(bad)
jns
fisubr
out
into
mov
je
lahf
sub
push
push
sahf
ret
jnp
outs
inc
push
push
femms
pop
js
mov
adc
and
xchg
xor
call
mov
fmul
and
push
jge
test
sti
mov
loopne
sub
push
mov
shr
sub
call
das
out
push
bound
and
loope
add
push
aaa
out
push
out
iret
sti
into
add
inc
hlt
pop
cmp
mov
enter
sbb
fisttp
test
push
xchg
xchg
push
call
jl
mov
ja
cmps
pop
push
mov
xor
out
push
movs
out
push
(bad)
out
push
idiv
pop
dec
call
push
repz
push
popa
enter
dec
fdiv
repz
mov
test
add
push
add
mov
add
push
pop
jo
out
sahf
or
adc
sahf
out
adc
adc
mov
sahf
out
adc
jno
dec
iret
pop
hlt
push
pop
dec
loopne
fidiv
das
push
mov
mov
jns
push
push
add
mov
push
add
iret
repz
push
push
inc
pop
xor
cmp
or
dec
or
cmp
repz
cld
push
fimul
in
and
and
cmp
repz
and
or
add
xchg
sbb
sub
pusha
xor
sbb
icebp
dec
push
dec
call
add
xor
add
add
sahf
out
add
add
outs
lock
outs
push
fmul
enter
iret
or
iret
repz
js
fs
repz
repz
(bad)
adc
adc
iret
adc
aas
iret
jae
out
loope
push
loop
push
jecxz
repz
cmp
shl
push
out
repz
movs
out
call
add
js
stc
ins
out
scas
jo
outs
pop
push
inc
femms
cmp
loopne
popa
dec
xor
(bad)
iret
push
arpl
iret
repz
repz
push
push
add
data16
xor
les
mov
add
mov
jnp
push
mov
clc
ds
push
xor
dec
push
out
push
outs
add
jge
push
jl
lock
fidivr
adc
inc
push
xor
push
pop
cmp
fisttp
sbb
add
push
xor
ficom
push
clc
push
jg
push
sar
adc
push
adc
test
push
mov
inc
mov
push
fistp
add
cmp
adc
push
or
or
scas
xchg
ja
pop
xor
add
dec
out
mov
aas
or
ss
imul
mov
jg
nop
cmp
cmp
sub
and
push
jmp
imul
inc
add
pop
movs
and
ins
add
mov
pop
xor
es
inc
not
add
adc
add
adc
clc
jne
jo
and
test
and
sbb
pop
mov
addr16
dec
mov
sbb
test
ja
nop
shr
inc
dec
pop
sbb
and
loope
and
gs
pusha
adc
hlt
jo
outs
ins
aaa
scas
cmp
outs
enter
ror
pop
pusha
inc
push
or
aam
push
js
pop
dec
loopne
(bad)
pop
xchg
or
cmp
jnp
(bad)
or
outs
push
loop
pop
pushf
or
jne
xchg
inc
push
daa
and
movs
xor
ss
sub
jb
xsha256
cmps
nop
sti
cwde
scas
nop
push
xor
or
push
add
das
je
xor
not
ds
xor
mov
add
test
pop
push
mov
(bad)
push
lods
push
pop
mov
scas
test
cmp
arpl
jl
inc
mov
nop
test
mov
mov
clc
and
ja
sub
push
test
mul
mov
cdq
mov
jo
bound
enter
repnz
mov
xchg
or
mov
push
outs
or
imul
aas
ins
test
jge
fsub
mov
mov
neg
sar
outs
lock
cmps
mov
test
cmp
ret
mov
inc
cmp
out
jbe
mov
test
sbb
stos
adc
push
inc
xchg
jbe
mov
into
cdq
shl
push
(bad)
hlt
and
mov
clc
push
pusha
cmp
scas
rcr
nop
test
push
ins
inc
push
or
imul
push
sbb
or
js
inc
enter
mov
add
lea
sti
dec
inc
inc
xchg
daa
test
push
add
or
outs
mov
ret
lea
jl
jno
je
dec
inc
ins
hlt
adc
jecxz
or
and
dec
dec
add
movs
push
in
jb
je
movs
xor
sbb
mov
and
loopne
iret
mov
jno
and
ins
gs
aam
and
cmps
xchg
mov
dec
loope
fiadd
sub
mov
stos
push
push
sub
push
cs
adc
mov
push
fdivp
inc
(bad)
push
inc
test
cmps
mov
lock
loopne
es
add
sbb
jns
inc
add
(bad)
xchg
mov
imul
mov
xor
pop
inc
add
xor
jae
adc
adc
fistp
test
jg
and
scas
push
dec
cmps
or
pop
sub
inc
sub
dec
retf
dec
sub
jno
add
lahf
sbb
mov
jne
xchg
fidivr
retf
outs
add
add
jns
add
xor
rcr
cmps
mov
mov
pusha
rcl
das
push
xchg
call
or
fimul
test
data16
shl
outs
xchg
xchg
adc
loop
daa
jae
and
and
push
enter
sub
push
pusha
popa
and
jo
sbb
inc
lahf
inc
aad
push
js
pop
jo
loope
sbb
add
outs
jmp
mov
or
push
mov
jo
push
aad
out
adc
jge
ins
sahf
jmp
out
xchg
cmps
cmp
mov
jl
or
push
rcl
push
imul
jbe
fbstp
test
sbb
and
ins
fs
test
aas
inc
dec
fs
jmp
sub
into
jno
rcr
add
mov
mov
into
inc
fidivr
xchg
add
pushf
iret
pusha
fsub
fmul
js
and
xor
or
shl
jecxz
outs
push
cmp
push
ja
mov
push
sbb
push
add
xchg
jo
loopne
ss
popa
inc
and
sub
scas
jecxz
gs
enter
pop
pop
dec
ret
or
mov
iret
mov
xchg
or
mov
adc
jmp
inc
aam
xlat
cmc
sbb
neg
repz
hlt
push
push
push
ins
lods
nop
xor
inc
ret
mov
dec
stos
adc
or
movups
ja
sbb
or
mov
(bad)
mov
sub
stos
imul
and
or
xchg
pusha
or
dec
cmps
in
and
xor
add
aaa
add
push
xor
shl
dec
mov
sbb
add
mov
dec
adc
xchg
loopne
je
outs
sbb
inc
mov
dec
pop
sbb
mov
inc
add
add
hlt
movs
push
push
add
mov
loopne
imul
mov
das
daa
and
jae
jb
(bad)
data16
test
add
dec
sbb
dec
dec
cmp
pop
dec
sahf
jge
sar
or
push
inc
inc
add
jmp
or
xor
ins
cmp
adc
out
inc
pop
stos
adc
test
mov
inc
add
pop
out
sahf
and
jp
pop
mov
dec
add
push
add
pushf
adc
or
out
pop
sbb
mov
mov
js
mov
stos
outs
sub
sbb
loopne
dec
out
push
jecxz
push
lock
es
out
lods
add
add
mov
push
nop
and
sbb
sahf
jnp
nop
pop
xor
sbb
mov
out
and
and
and
and
je
rcl
pcmpeqb
js
sub
inc
inc
les
ja
jns
or
or
into
xor
movs
mov
pop
inc
shl
mov
or
movs
add
sub
jnp
sbb
rcl
push
loopne
rol
xchg
daa
scas
and
push
les
mov
adc
into
mov
sbb
das
sub
jae
adc
pop
or
adc
sub
cdq
sahf
push
push
test
jne
xchg
enter
mov
push
xchg
es
and
mov
pop
dec
inc
inc
cmp
and
das
dec
lahf
pop
adc
nop
mov
or
push
sbb
push
sub
or
shr
jmp
jecxz
adc
es
xor
rol
aaa
sub
mov
and
push
out
xor
das
xor
inc
scas
sti
sub
nop
sbb
dec
push
add
jo
pop
aas
arpl
add
lea
add
iret
mov
out
nop
add
pop
or
dec
and
sub
jb
jle
sub
xor
dec
mov
adc
cmps
xchg
mov
fidivr
push
sbb
cs
xor
xor
add
add
addr16
sub
sub
dec
iret
inc
mov
or
adc
adc
sub
xor
sbb
pop
xor
dec
mov
inc
aas
pop
aam
call
aam
xor
inc
dec
outs
dec
mov
cmp
pushf
add
imul
dec
shl
test
push
aam
jl
jl
pop
cmps
push
cld
sub
adc
dec
jle
enter
cmp
inc
cmps
xor
push
jl
addr16
pop
outs
mov
fisubr
push
pusha
push
nop
jge
clc
jge
add
jp
inc
ja
sbb
mov
paddsb
dec
test
in
push
js
ss
lahf
out
fisubr
add
push
dec
xchg
xchg
lock
and
add
ror
popa
sub
push
sbb
pop
jb
add
or
xchg
add
sub
add
mov
ins
add
das
add
cmp
mov
adc
inc
xor
push
xor
shr
mov
inc
dec
ficom
ror
daa
outs
add
mov
addr16
sbb
int3
mov
test
add
pop
adc
add
mov
sahf
jno
push
cmps
push
add
sbb
idiv
imul
out
or
les
test
fnstsw
dec
daa
push
mov
scas
push
dec
fnstsw
push
dec
jl
sbb
mov
cs
ror
mov
push
rcl
mov
out
push
pop
push
and
adc
repz
iret
sbb
imul
sar
mov
imul
and
mov
push
outs
imul
add
jp
or
mov
aaa
mov
pop
sbb
pop
inc
adc
fcom
dec
pop
loopne
inc
lahf
xor
stos
push
dec
add
test
push
mov
and
jo
and
test
repz
inc
cmp
inc
outs
fist
adc
mov
hlt
xor
sbb
int
sub
ins
js
xchg
dec
mov
xchg
arpl
cmp
push
xchg
cdq
pop
lods
jbe
dec
sbb
and
daa
add
push
push
jmp
jmp
sbb
cmp
pop
pop
pop
xchg
popa
add
addr16
aas
pop
add
ja
test
inc
or
test
adc
or
adc
dec
call
xchg
mov
and
cmp
cwde
pop
ins
addr16
lods
in
pop
or
outs
nop
bound
arpl
in
or
bound
pusha
call
jmp
or
imul
xchg
xchg
push
or
adc
outs
jp
mov
ins
xor
xchg
rcl
mov
jg
popa
jo
pop
push
xchg
sbb
dec
pusha
movs
cmps
pop
jno
fs
dec
stos
add
jb
stc
sbb
add
dec
ror
jecxz
xlat
pop
adc
das
dec
add
pop
mov
mov
sub
or
sub
mov
xchg
data16
out
push
adc
out
sub
mov
dec
loopne
(bad)
dec
bound
or
call
outs
imul
ins
scas
ins
es
test
adc
or
fild
jo
inc
mov
jne
or
xor
pop
retf
movs
fs
adc
arpl
test
inc
adc
scas
sub
xchg
shl
and
jae
ins
pop
adc
setl
pop
ds
rol
lods
addr16
inc
dec
jmp
xchg
mov
jbe
add
ret
fild
setg
jne
mov
test
in
mov
aas
adc
and
popf
or
xor
fild
xchg
jb
cwde
pop
or
(bad)
fbstp
test
popa
xchg
ja
fisttp
punpcklwd
ja
popa
mov
bound
cwde
jo
mov
dec
(bad)
pop
xor
mov
js
or
aam
ja
aad
mov
and
jae
stos
adc
or
enter
fiadd
or
(bad)
jg
or
sbb
push
adc
adc
sub
xchg
fcom
xor
or
dec
pusha
mov
add
and
mov
pop
push
jb
das
jbe
jg
adc
pop
add
(bad)
call
and
movs
push
jne
test
xchg
adc
into
adc
fdivr
xchg
jo
jns
cmp
cld
mov
ds
adc
push
retf
mov
sbb
mov
jo
add
out
jg
push
mov
int
lods
dec
ds
mov
inc
xor
inc
shl
inc
fild
mov
sbb
test
sub
pop
repnz
pop
add
icebp
push
xor
push
xor
inc
sub
retf
rcl
mov
mov
aas
mov
push
xchg
repnz
inc
ret
push
fsin
pop
sar
enter
xchg
mov
mov
and
sbb
mov
rol
(bad)
mov
in
bound
mov
add
movs
mov
loopne
sbb
aaa
push
inc
js
inc
aas
cld
and
jg
jle
sub
adc
loopne
mov
jmp
mov
or
jnp
mov
jg
add
int3
push
and
pop
sub
enter
sub
xor
mov
int
nop
call
dec
(bad)
fsub
in
push
iret
(bad)
bound
xchg
add
rol
mov
inc
cs
test
in
cs
popf
xchg
adc
or
jle
mov
enter
mov
cwde
pop
call
jg
or
iret
ins
pop
enter
or
pop
arpl
test
jns
test
adc
pop
adc
test
mov
test
mov
enter
xchg
test
xchg
test
jnp
int3
jl
dec
sbb
mov
rcr
mov
pop
movs
pop
cmps
test
pop
jb
cmps
test
stos
addr16
nop
mov
mov
nop
or
mov
movs
mov
stos
mov
or
mov
mov
or
nop
or
mov
mov
or
lahf
sbb
pop
pop
dec
mov
and
jb
sbb
add
add
(bad)
jmp
adc
aas
iret
das
ret
ret
and
or
add
fldcw
outs
mov
gs
add
push
adc
jo
imul
mov
jg
mov
lock
stos
and
push
lea
and
sub
xchg
xor
shr
jo
aaa
push
ror
out
dec
les
or
lahf
and
repnz
jb
inc
or
aam
jmp
call
xor
inc
je
inc
clc
adc
int
jb
push
inc
jmp
iret
add
ja
adc
jns
push
test
es
and
test
xchg
pop
mov
jmp
push
inc
mov
rcr
popa
ins
pop
call
lods
mov
dec
add
mov
and
xchg
and
add
ror
lea
daa
(bad)
dec
pop
cmp
sbb
push
inc
daa
push
add
popa
ins
dec
inc
pop
je
(bad)
add
outs
inc
mov
outs
xlat
inc
sbb
xchg
pop
push
sbb
add
pop
pop
pop
test
push
je
ret
mov
xchg
adc
jb
cmp
pushf
pop
cdq
(bad)
and
push
dec
push
enter
lods
pop
xor
test
or
loope
push
jmp
or
jo
and
(bad)
stos
ss
sti
jns
rol
stos
dec
ficom
fbstp
test
pop
shr
sub
nop
lods
xchg
and
mov
lahf
iret
push
push
pop
xor
loop
mov
fwait
xlat
je
push
dec
add
adc
movs
jmp
xchg
dec
adc
mov
rcl
xchg
mov
clc
push
or
cmp
rcl
cmp
cwde
test
pusha
iret
add
inc
lea
mov
fst
jae
bound
pop
adc
ret
and
xor
pop
mov
fbstp
sub
add
enter
rcl
add
or
out
bound
outs
sub
and
inc
dec
xor
add
out
sbb
pop
adc
dec
daa
mov
fstp
sar
adc
sub
mov
and
stos
add
pop
or
fild
and
ins
inc
test
outs
dec
and
xlat
push
clc
gs
imul
inc
xor
inc
sbb
and
sub
sub
or
add
pop
sub
out
je
xor
(bad)
ins
daa
arpl
pop
and
or
and
outs
add
imul
push
aas
or
sub
add
jae
inc
adc
cmp
mov
adc
or
sti
jns
push
pop
dec
dec
or
add
neg
add
add
je
add
(bad)
sub
adc
and
and
mov
fptan
cdq
mov
out
mov
sbb
fmul
dec
scas
sahf
push
sub
mov
xchg
and
cmp
data16
bound
inc
cld
leave
out
inc
add
add
inc
or
xor
sub
cwde
fild
call
or
out
xor
cmps
sub
add
adc
and
sub
jmp
adc
imul
mov
dec
adc
jb
add
ins
and
jmp
mov
push
mov
pop
dec
icebp
test
add
or
jg
gs
push
xor
inc
inc
pop
xchg
rcl
inc
push
xor
test
das
and
std
mov
pop
lahf
add
add
fstp
mov
push
cmps
dec
add
and
or
sbb
(bad)
arpl
jae
xor
sbb
rol
test
stos
cmp
ss
sbb
and
jg
mov
sub
sbb
xchg
dec
push
scas
adc
pop
or
jmp
out
add
sub
push
shl
add
and
iret
test
daa
add
scas
inc
or
or
xchg
inc
pop
mov
sbb
(bad)
pop
pop
sub
and
jo
stos
jo
push
xor
xchg
xor
push
add
push
scas
jns
and
pusha
loop
xor
and
add
add
jecxz
(bad)
out
sub
js
gs
add
(bad)
push
xor
pop
mov
mov
ret
test
adc
test
(bad)
sub
sbb
and
push
lods
jo
push
jae
sub
or
xchg
dec
xor
xchg
test
dec
inc
push
sbb
mov
das
sub
and
lods
inc
scas
je
pop
mov
cmp
outs
push
inc
add
out
jne
ds
push
stos
add
dec
retf
cmp
and
dec
inc
and
pop
stos
or
jmp
loop
inc
xor
ja
sbb
jnp
sub
sbb
fwait
and
pop
ja
jnp
add
adc
cmps
icebp
xchg
das
sub
arpl
out
pop
dec
sbb
movs
ss
cmp
push
lods
dec
dec
jae
mov
adc
inc
inc
pop
scas
iret
push
and
add
jae
pop
mov
pop
or
bound
outs
add
aas
sub
add
xor
ds
daa
inc
sub
add
aaa
pop
sub
dec
imul
dec
dec
ja
fwait
and
imul
adc
popa
xor
cwde
popa
push
mov
ins
dec
pop
out
dec
add
pop
xchg
adc
xchg
sub
das
aaa
(bad)
shl
mov
sti
ret
sub
inc
add
inc
dec
dec
and
xlat
add
add
push
adc
mov
push
das
sub
adc
imul
dec
enter
jnp
lds
je
inc
mov
pushf
xchg
(bad)
lods
mov
je
out
mov
test
sub
sub
mov
les
aam
in
dec
xchg
xchg
sub
add
adc
gs
dec
js
sbb
add
loope
(bad)
and
addr16
dec
punpckhbw
imul
and
push
imul
jmp
push
mov
sub
lock
aas
push
push
rcr
pop
mov
push
xchg
pop
sub
cmp
adc
mov
pshufw
je
inc
fwait
or
fiadd
pop
fidiv
xchg
add
arpl
mov
mov
mov
pop
(bad)
outs
inc
or
xor
inc
popa
jl
sbb
icebp
inc
cmp
sub
adc
loopne
push
jg
jbe
inc
inc
dec
sub
cmp
dec
inc
jg
inc
aas
sbb
push
mov
add
pop
inc
add
xchg
inc
cmp
push
arpl
aaa
pop
add
lea
outs
adc
sub
jo
adc
lahf
cmp
pop
jecxz
cmps
inc
lds
add
or
pusha
xor
jb
(bad)
push
inc
xchg
shr
sub
pop
jb
pop
sub
test
push
into
adc
add
or
add
test
pop
xor
sbb
rcr
xor
cwde
cmps
imul
mov
push
movs
scas
fwait
retf
xor
push
fs
ins
push
push
push
add
test
daa
imul
test
add
test
sbb
add
sub
add
and
mov
inc
inc
sub
gs
test
pop
mov
imul
test
data16
sub
xchg
je
inc
je
inc
sbb
lock
hlt
inc
cdq
stc
mov
xchg
outs
data16
or
clc
cwde
test
adc
dec
adc
add
imul
gs
lods
es
mov
and
xor
adc
call
mov
jmp
mov
sub
push
data16
gs
push
pusha
adc
loopne
mov
ins
add
adc
jmp
add
push
loopne
sbb
imul
sub
push
dec
push
mov
sub
jo
inc
pop
(bad)
stc
adc
push
add
popa
mov
dec
and
push
imul
cld
mov
dec
inc
test
out
sahf
sub
arpl
jg
pop
push
inc
lods
(bad)
cli
push
pop
ins
movs
add
push
sbb
sbb
(bad)
call
xlat
and
rol
inc
sub
cmps
add
inc
add
dec
js
inc
jnp
mov
data16
out
or
add
out
mov
ins
adc
xlat
(bad)
and
js
add
jle
sub
rol
sbb
inc
loope
cmp
popa
mov
pop
add
jo
scas
inc
add
xchg
jmp
ror
pusha
pop
push
xchg
mov
pop
pop
stos
sbb
outs
pop
pop
sub
add
xor
sub
sub
inc
jmp
pand
mov
sti
stos
add
neg
push
dec
sub
sbb
push
adc
sbb
sub
xchg
mov
cwde
ret
js
push
outs
xchg
pusha
sub
arpl
cmp
mov
and
rol
in
leave
and
mov
dec
rol
loope
push
ds
mov
ss
jae
mov
outs
mov
xchg
mov
xor
mov
loopne
inc
pop
dec
inc
or
dec
inc
imul
pop
add
sbb
js
lods
jo
mov
jo
lahf
fist
sub
or
scas
fist
or
mov
xlat
mov
aad
pop
arpl
add
mov
mov
xchg
add
pop
scas
sbb
outs
pop
(bad)
fild
add
pop
dec
loop
sub
movs
lods
add
inc
push
adc
bound
retf
(bad)
outs
cwde
push
call
xor
loope
mov
pop
retf
xchg
xchg
push
shl
neg
mov
push
and
out
je
div
or
xchg
pop
xlat
arpl
outs
add
(bad)
mov
xchg
mov
ds
xor
jno
push
add
pop
sub
adc
pop
cmps
xor
dec
mov
jg
imul
lahf
ret
ss
cmps
or
push
test
xchg
test
adc
ss
push
std
push
outs
add
or
add
lods
addr16
test
xor
jg
test
mov
fild
push
and
cs
fwait
daa
xor
aam
fisubr
dec
(bad)
jae
adc
xor
and
pop
arpl
jo
lahf
or
jno
mov
es
je
adc
stos
stos
inc
mov
cmp
add
mov
add
add
pop
adc
rcr
add
nop
mov
add
imul
inc
fcomp
outs
rol
or
arpl
push
or
outs
sub
or
ins
pop
iret
pop
bound
inc
xchg
daa
lock
fiadd
in
test
(bad)
lods
xchg
or
mov
ret
test
sbb
dec
pop
dec
or
out
jo
sbb
das
out
mov
mov
popa
or
or
xchg
inc
arpl
pop
test
pop
inc
nop
mov
rcr
inc
add
fs
pop
test
(bad)
jnp
ins
call
cli
xchg
icebp
add
(bad)
and
or
mov
mov
push
or
jg
pusha
adc
sub
add
movs
mov
mov
push
(bad)
aas
(bad)
loopne
adc
adc
ret
pop
mov
scas
and
mov
cmp
jg
popa
(bad)
jmp
mov
sti
or
dec
push
mov
mov
cs
dec
test
ins
or
imul
dec
adc
arpl
ret
scas
mov
or
popa
popa
and
or
fistp
jecxz
daa
bound
bound
dec
stos
inc
pop
outs
(bad)
mov
mov
xor
adc
xor
lahf
repz
bound
inc
std
inc
push
mov
and
ins
xor
es
dec
xchg
and
add
jbe
out
mov
dec
add
mov
loopne
xchg
mov
jmp
pop
lea
daa
(bad)
iret
pop
push
dec
out
xchg
jae
inc
or
inc
inc
push
and
inc
or
jmp
mov
mov
inc
xchg
xchg
jecxz
or
pop
lock
dec
das
cs
and
or
pop
shl
or
xchg
jp
sub
arpl
es
add
mul
les
sbb
and
movaps
lahf
imul
or
jo
push
mov
mov
and
mov
gs
out
(bad)
inc
xor
stos
xchg
dec
cmp
sub
out
(bad)
jmp
ins
ins
cmp
sahf
fistp
add
dec
and
jns
pop
pop
push
das
ja
scas
or
push
mov
push
inc
adc
ror
ins
bound
push
cmps
shl
push
sub
ret
xchg
pop
sub
addr16
jge
clc
outs
dec
jne
push
call
inc
jo
jmp
pop
test
bound
popa
jb
mov
outs
adc
cmp
pushf
jae
pop
cs
into
ja
inc
xchg
popa
test
inc
jb
adc
ss
mov
outs
sbb
into
mov
push
jne
popa
je
outs
sub
pushf
jae
dec
inc
aas
iret
movs
add
jb
data16
jecxz
dec
pop
and
adc
jecxz
out
adc
jmp
popa
adc
sar
ficomp
repz
daa
jo
adc
add
xchg
ja
aaa
fld
rol
pop
dec
sub
mov
add
rol
sbb
sub
and
add
and
test
arpl
inc
sbb
push
rdpmc
adc
add
inc
cmp
xor
mov
mov
neg
mov
outs
pop
imul
and
imul
push
dec
dec
xor
inc
ins
out
cmps
out
adc
sub
imul
mov
sar
outs
ins
in
push
div
dec
xor
sbb
fucomi
add
rcl
outs
out
xor
xor
inc
nop
push
iret
fbld
rcr
add
outs
mov
outs
xor
add
out
mov
and
or
sub
ss
inc
add
rol
out
pop
push
adc
mov
and
jmp
nop
sbb
dec
ret
or
or
or
pop
int3
nop
push
cmp
inc
or
inc
pop
jb
jo
je
adc
fcomp
ror
xchg
inc
out
(bad)
pop
add
push
pop
rol
mov
shl
inc
les
iret
es
xor
mov
add
mov
mov
ins
imul
add
rcr
pop
fistp
jb
shr
daa
popw
push
pop
and
pop
mov
or
inc
rcl
cdq
and
sbb
movs
imul
add
add
add
and
sub
js
ins
or
adc
mov
cwde
xchg
push
out
or
adc
lods
imul
rol
bound
or
push
pop
add
les
aas
retf
ja
inc
dec
pusha
imul
jg
(bad)
iret
add
ret
jecxz
dec
sub
pop
out
out
adc
mov
pop
xor
pusha
inc
jo
das
add
pop
dec
cmp
sub
mov
push
jecxz
push
and
or
shl
gs
arpl
movs
xchg
and
adc
fld
add
mov
out
xor
arpl
push
mov
push
cmps
pop
and
sub
xor
xchg
xchg
pusha
ret
sub
sub
mov
add
inc
call
xor
push
test
jnp
add
js
and
pop
inc
mov
add
imul
ds
add
jmp
and
sub
aas
js
je
ret
sub
or
ret
popa
xchg
add
cs
aaa
mov
inc
jae
out
adc
test
and
push
pop
daa
ss
imul
outs
(bad)
cli
rol
inc
sub
and
dec
imul
sub
repnz
bound
push
xor
push
cmc
adc
inc
sbb
dec
mov
xchg
fild
add
and
jbe
(bad)
add
into
add
add
and
es
sbb
fs
(bad)
xor
and
mov
pop
xlat
or
ss
movd
or
or
dec
pop
mov
jb
add
test
add
or
retf
dec
dec
pushf
out
adc
call
push
jno
inc
gs
movs
fstp
jmp
ins
jae
and
or
cmp
out
icebp
xor
stos
add
add
pop
dec
sub
sub
mov
fild
xchg
or
and
push
lahf
shl
ins
push
(bad)
jnp
lods
or
cmps
jmp
add
movs
data16
or
jg
cmp
push
pop
(bad)
push
cmc
and
inc
push
sub
push
sbb
arpl
jmp
add
mov
mov
jo
inc
or
add
and
or
dec
dec
mov
sub
xchg
call
stos
(bad)
sbb
stos
sbb
lea
and
add
or
mov
pop
fs
push
sbb
mov
dec
adc
or
sub
neg
xor
jg
push
push
loope
and
fist
mov
ret
addr16
mov
rcpps
jl
nop
sbb
adc
sub
pop
push
add
idiv
push
inc
lods
add
jae
sbb
inc
les
inc
adc
fwait
add
xchg
xchg
enter
or
inc
out
mov
add
gs
xchg
add
cmc
adc
dec
arpl
sub
mov
adc
pop
imul
lea
cs
dec
or
inc
push
mov
push
add
pop
xchg
adc
pop
inc
pop
and
popf
ja
and
adc
mov
sar
push
sub
das
inc
cmp
add
jg
inc
add
push
sti
(bad)
adc
cmp
add
pop
xor
and
and
nop
and
sub
and
push
dec
mov
push
sub
(bad)
adc
push
aaa
push
les
mov
inc
mov
jae
sub
rol
jg
mov
add
or
aam
pop
jb
push
movs
xchg
add
cmp
test
fwait
aas
jnp
xchg
stos
fsub
data16
rol
in
and
cmp
aas
retf
inc
popa
dec
push
stos
daa
or
adc
scas
sbb
xchg
adc
add
dec
es
push
xchg
pusha
adc
xchg
ja
lods
or
ds
push
arpl
pop
jp
idiv
and
iret
imul
inc
mov
adc
adc
push
xlat
inc
add
cmps
scas
add
pop
and
push
test
sub
or
xchg
in
adc
out
inc
sbb
jno
xor
sub
pusha
cmp
lock
add
sub
add
fst
sub
(bad)
adc
add
mov
sti
das
pop
adc
xor
dec
push
or
lahf
jb
and
popa
inc
adc
pop
scas
test
sbb
dec
sub
adc
cmp
push
add
mov
scas
mov
add
dec
pop
fcmovu
inc
gs
jg
pop
jecxz
inc
ret
daa
dec
cli
push
or
bound
and
or
out
mov
mov
and
aad
imul
xchg
or
mov
fsub
add
add
xchg
sbb
mov
add
add
mov
add
add
ret
push
ja
add
push
and
push
and
add
je
inc
cmps
add
add
dec
adc
aaa
add
xchg
mov
pop
add
xchg
(bad)
(bad)
dec
lds
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
(bad)
(bad)
(bad)
call
popf
sahf
lahf
mov
movs
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
(bad)
(bad)
(bad)
(bad)
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
test
sbb
clc
stc
cli
sti
cld
std
(bad)
dec
mov
xor
sbb
imul
cmp
sbb
es
add
dec
pop
or
repnz
mov
ret
adc
mov
cmp
or
inc
sbb
push
push
dec
dec
ss
inc
push
mov
aam
jg
and
stos
sbb
bound
inc
pushf
ins
(bad)
aas
les
rcl
pushf
jnp
xchg
sahf
fdivr
push
xor
add
push
adc
loop
ret
or
inc
jns
mov
mov
cmovle
mov
push
dec
inc
daa
dec
adc
and
jnp
inc
push
pop
pop
inc
repnz
mov
loope
mov
dec
push
inc
jbe
push
xchg
push
mov
ret
push
push
stos
retf
je
dec
xor
sbb
xor
pop
add
add
jl
sub
clc
dec
lods
adc
stos
lods
inc
or
sbb
pop
jo
je
adc
mov
(bad)
pop
add
mov
adc
ja
test
adc
dec
retf
pop
mov
push
and
cmps
cmp
cmp
pop
retf
sbb
add
jecxz
sahf
enter
ret
dec
add
push
cmps
cmp
mov
rcl
addr16
je
push
movs
imul
adc
pop
sub
or
in
push
cmp
sub
inc
mov
add
ficom
sti
jae
dec
add
jecxz
mov
push
cmp
test
loopne
xchg
or
frstor
jecxz
dec
sub
mov
aas
inc
inc
sbb
mov
sub
add
out
scas
add
pop
test
add
sub
and
adc
out
adc
outs
ss
popa
repz
les
push
dec
pop
jae
movs
inc
shr
inc
lods
arpl
das
sub
cwde
test
cmp
add
sub
movs
mov
and
inc
add
xlat
pop
and
inc
sub
sub
nop
clc
dec
sub
add
or
sbb
sbb
pop
je
adc
sbb
push
inc
shr
aas
sub
add
ins
stos
movs
inc
jae
sub
inc
xor
ins
sti
sub
(bad)
aam
or
call
pop
bound
push
add
outs
add
or
xchg
add
mov
clc
daa
ret
fwait
add
xchg
or
movs
imul
dec
imul
sbb
xchg
add
push
adc
sub
es
pop
mov
mov
repz
mov
add
dec
js
icebp
daa
sti
cs
pop
or
sbb
pop
iret
and
add
inc
adc
pop
outs
dec
pop
dec
sub
xchg
es
inc
cmps
mov
scas
xor
mov
popa
dec
and
adc
pop
jae
or
mov
xor
mov
dec
shr
daa
retf
shl
and
xor
rol
aaa
jg
jl
cld
inc
xor
add
add
add
ins
outs
dec
imul
and
pop
daa
ins
imul
or
mov
inc
or
jo
leave
jae
add
lea
and
jb
and
push
outs
inc
sub
jecxz
out
jbe
push
call
push
je
or
pop
and
fs
jo
je
ret
movs
jbe
addr16
inc
lods
fld
jbe
ja
outs
arpl
cs
pop
outs
push
dec
dec
push
(bad)
jmp
add
fistp
int3
pop
sbb
push
add
fs
(bad)
leave
mov
mov
mov
and
inc
rol
test
and
ins
and
sbb
cmps
push
mov
sbb
push
and
ss
sbb
outs
dec
inc
and
add
and
inc
outs
das
add
push
xchg
ins
popa
aam
mov
and
mov
jmp
and
inc
pop
mov
mov
add
imul
or
xchg
jne
sahf
cs
xor
sub
add
adc
mov
call
imul
mov
(bad)
push
xchg
clc
mov
ins
cmc
jecxz
or
inc
movs
retf
and
aas
sbb
xchg
imul
add
sbb
cmp
call
ins
bound
jo
loopne
sub
jo
mov
sbb
test
and
push
adc
sub
or
lds
push
jns
xor
inc
fwait
dec
or
and
cdq
xor
pusha
lock
imul
push
push
jmp
test
rcl
jmp
push
test
lods
shl
hlt
outs
popw
popa
outs
daa
sub
loopne
mov
movs
and
pop
sub
retf
add
or
sub
bnd
sbb
push
pop
or
sti
out
adc
xchg
xor
sub
add
ja
pop
jo
shl
sub
pop
inc
or
arpl
mov
push
lods
je
push
fcom
movs
pusha
pop
aaa
xor
jns
data16
aas
shl
shr
jne
sub
dec
loopne
dec
aaa
(bad)
pop
adc
sub
outs
outs
outs
sbb
dec
ss
pop
or
push
movs
test
ins
mov
mov
add
das
push
or
nop
or
sti
in
mov
das
(bad)
xor
xlat
outs
xor
push
pop
shl
push
mov
ror
cmp
je
repnz
stos
inc
aaa
or
mov
scas
pop
cmps
mov
sbb
imul
pop
or
pop
inc
cmp
jp
cmp
push
nop
rcl
gs
or
add
mov
jecxz
push
push
das
xor
or
clc
popa
arpl
and
popa
ins
and
mov
xor
xor
xchg
push
push
or
or
add
scas
lahf
data16
mov
outs
je
dec
mov
sar
or
add
pop
and
test
jae
aad
inc
sbb
mov
add
aaa
add
dec
mov
xor
imul
pop
aas
or
push
adc
dec
or
das
add
lods
and
add
inc
lods
(bad)
mov
pop
push
and
sub
mov
add
aas
add
les
add
mov
or
ins
sub
add
pop
push
test
and
pusha
add
cmp
aaa
mov
push
add
add
xor
(bad)
popa
xor
je
xor
add
rcl
ffreep
clc
test
push
ja
sbb
pop
jmp
dec
and
dec
or
lea
or
add
aaa
popf
outs
(bad)
add
add
(bad)
fist
pop
inc
mov
mov
dec
cdq
fucomip
addr16
outs
jnp
gs
xchg
ret
xchg
push
or
fst
add
imul
out
pop
test
pop
or
daa
pop
dec
sub
xchg
sbb
push
xchg
xor
aaa
add
(bad)
cmp
je
inc
xchg
inc
xchg
add
and
mov
adc
outs
imul
push
add
jae
rol
mov
mov
daa
jne
pop
(bad)
jae
jae
xor
sbb
rcr
les
mov
pusha
movs
(bad)
sub
bound
(bad)
mov
sub
pop
push
dec
or
inc
sub
fld
das
test
cmp
pop
jb
push
add
addr16
dec
or
inc
ins
das
lock
shr
and
add
ja
icebp
ss
sar
sti
jg
jge
repnz
jno
icebp
pusha
inc
mov
clc
ret
movs
add
sbb
jl
je
xchg
ins
push
fs
ins
outs
mov
arpl
cmp
add
xor
popa
punpckhwd
outs
cld
mov
mul
ins
outs
mov
pop
dec
sbb
ret
xor
fstp
pop
xor
das
xor
mov
jo
lahf
jo
imul
je
ja
retf
inc
aaa
sar
aam
jl
hlt
sbb
inc
inc
dec
jae
movs
imul
(bad)
aas
sub
test
dec
inc
push
dec
inc
dec
xor
add
inc
add
xchg
mov
lods
push
test
cmp
jbe
adc
adc
sub
add
xor
pop
or
outs
cmp
(bad)
adc
and
sub
sub
dec
and
dec
adc
xchg
pop
xor
push
sbb
cmp
mov
pop
xor
push
ja
fild
jnp
xor
xor
out
sbb
(bad)
(bad)
xor
popa
inc
daa
imul
pop
daa
xchg
mov
dec
sub
or
dec
xchg
shr
add
add
push
push
sub
add
cld
fild
push
pop
and
push
pop
pop
or
test
cdq
inc
push
clc
and
sbb
pusha
push
cmp
sar
or
cdq
pop
or
add
lahf
mov
mov
adc
iret
jae
sbb
xchg
nop
rcl
sub
xor
mov
je
and
add
ins
bound
inc
or
adc
mov
inc
mov
add
inc
iret
iret
(bad)
add
jo
sub
or
and
mov
aas
das
add
add
xchg
ds
xor
loop
adc
sub
ss
inc
ror
push
push
mov
loope
push
fdivr
cmp
es
lds
pop
mov
push
sbb
jg
sti
xor
or
sub
ror
rcr
out
sub
test
add
jo
xchg
inc
adc
pop
add
xor
movs
adc
mov
lahf
popa
and
ret
das
sbb
or
ret
add
xor
pop
adc
xchg
(bad)
add
ret
aas
and
mov
mov
pusha
inc
sub
add
adc
adc
stos
push
pusha
pusha
aas
aas
fmul
sub
push
inc
mov
rdtsc
ss
add
adc
push
dec
dec
sbb
loope
or
adc
test
inc
int3
rol
mov
arpl
push
or
jae
je
sbb
or
add
je
add
mov
mov
mov
lods
jecxz
xor
xchg
inc
inc
int3
pop
bound
and
pop
add
and
scas
mov
dec
or
nop
push
push
pop
jg
and
sahf
aam
and
adc
adc
bound
push
push
mov
pusha
or
(bad)
xchg
push
add
mov
or
ins
cdq
call
pop
test
and
dec
add
mov
and
mov
mov
in
fwait
dec
test
dec
ins
push
sbb
dec
add
sub
xchg
cmp
add
xchg
cmps
lods
rol
sahf
lahf
stos
push
adc
mov
or
xor
mov
test
or
jecxz
ret
xchg
mov
dec
adc
mov
and
(bad)
sbb
fisttp
shl
and
test
sub
jp
nop
inc
pop
sub
sti
inc
sbb
fdiv
lahf
jg
(bad)
je
jae
or
sub
push
or
cdq
or
sbb
rol
inc
and
inc
inc
inc
inc
inc
dec
inc
pusha
inc
inc
pop
push
pusha
and
outs
adc
pusha
and
xor
add
imul
dec
pop
add
add
push
add
xor
xlat
fist
rcl
(bad)
out
(bad)
xlat
push
xchg
sti
mov
sbb
or
fadd
xchg
fwait
lahf
jae
pop
arpl
sub
xor
fwait
sub
sub
add
ror
ins
fisubr
aam
push
sub
mov
mov
das
das
inc
bound
add
addr16
sbb
add
das
pushf
xor
call
pop
sub
mov
adc
xchg
pusha
add
pop
adc
cmp
inc
sahf
push
and
inc
xor
ja
imul
adc
aaa
addr16
fs
jno
int3
mov
ja
lods
rol
retf
sub
popa
mov
cmc
or
idiv
sub
xchg
dec
ins
cmp
mov
sub
data16
pop
mov
or
arpl
arpl
xor
adc
or
adc
jnp
push
sbb
inc
pop
jg
shr
sbb
jnp
outs
push
movs
xor
inc
add
cmps
push
inc
or
cmp
add
outs
ins
sub
outs
add
dec
scas
ins
add
add
bound
push
imul
jge
gs
je
pop
in
imul
outs
mov
add
jnp
retf
outs
(bad)
xchg
push
inc
ds
pop
mov
inc
and
xchg
add
leave
pop
jb
and
lock
inc
inc
jl
jo
shl
sub
jb
(bad)
std
mov
jb
pop
outs
jp
add
inc
ja
jo
jmp
dec
popf
xchg
and
push
rol
mov
and
(bad)
in
mov
inc
popa
inc
cmp
arpl
popa
push
push
scas
cdq
inc
fadd
cs
adc
es
or
push
jae
or
in
jns
loop
add
cdq
add
add
pop
bnd
ins
sbb
daa
jne
mov
mov
xor
lea
add
popa
lea
push
jnp
daa
and
mov
imul
inc
arpl
mov
push
gs
pop
gs
outs
pop
sub
jae
push
inc
pop
jno
mov
sbb
adc
je
ins
cld
outs
mov
in
mov
daa
arpl
loopne
js
pusha
fdiv
jb
sbb
imul
ds
and
or
bound
mul
cmp
bound
jbe
popa
pop
add
outs
je
mov
push
add
add
and
push
jmp
sub
jle
addr16
ins
mov
and
jae
daa
mov
dec
sub
popa
jge
lahf
nop
out
jno
imul
fimul
pop
jb
cmp
push
loopne
adc
daa
enter
mov
xor
outs
daa
pop
xchg
mov
shl
push
(bad)
pop
(bad)
daa
or
ds
popa
bound
call
das
dec
mov
in
imul
jns
or
aaa
mov
mov
rcl
push
imul
add
fisubr
sub
int3
arpl
outs
ja
pop
sbb
shl
mov
pop
xchg
pop
lds
sub
je
out
test
je
or
daa
fcmovb
xor
popa
lock
not
jo
cmp
or
xchg
(bad)
daa
orps
pushf
push
call
jmp
add
lods
bound
daa
and
mov
daa
fdivr
sbb
add
add
clc
inc
es
mov
jl
dec
dec
into
pop
inc
add
mov
pop
push
fmul
dec
adc
in
jbe
je
shr
pop
cwde
aas
test
xor
sbb
mov
rol
mov
adc
inc
mov
stc
imul
dec
add
test
push
movsx
mov
ds
imul
data16
movs
sete
xor
inc
push
mov
pusha
sti
pop
add
paddd
inc
inc
(bad)
div
sub
sbb
push
out
pop
add
jl
dec
push
inc
inc
sub
xchg
and
outs
mov
(bad)
div
push
push
into
cwde
push
inc
push
dec
jge
scas
mov
cmovl
dec
cmp
xlat
sahf
inc
bswap
xor
inc
into
xorps
cmp
inc
mov
xchg
inc
cmovs
ins
loopne
ds
pavgb
push
movs
movntps
scas
outs
nop
nop
stc
xor
ret
pop
add
retf
into
jo
scas
push
or
sbb
outs
inc
scas
sub
pop
sub
in
jnp
lods
push
and
sbb
scas
adc
inc
inc
sahf
or
sub
add
pop
ds
das
in
scas
inc
jno
pmulhuw
push
dec
add
movs
lods
dec
es
pop
dec
pop
cmp
jg
shld
pushf
push
push
dec
add
pop
inc
inc
jle
dec
sahf
jo
fsub
dec
push
push
mov
or
cs
inc
out
xor
sub
xchg
movs
dec
sbb
adc
mov
movs
inc
ret
or
or
xor
addr16
pop
dec
(bad)
push
fbstp
push
rol
sub
ja
dec
and
or
xchg
lds
outs
ja
mov
sub
add
inc
and
sub
add
sub
ret
rol
repz
dec
and
mov
pop
loopne
arpl
mov
and
pop
sub
inc
adc
and
fistp
adc
and
xor
pop
jecxz
sub
add
iret
ret
adc
scas
or
and
pop
pop
inc
and
arpl
gs
aaa
and
je
sub
and
mov
cmc
adc
lea
imul
ss
mov
sub
pusha
gs
mov
imul
add
imul
adc
mov
mov
pop
mul
xchg
pusha
inc
jbe
fst
push
or
or
out
fsub
pushw
pop
lea
add
movs
xchg
and
pusha
jno
sbb
outs
lahf
mov
add
rcl
lods
or
mov
pop
pop
xchg
mov
scas
add
cmp
and
rcl
call
mov
sub
push
lds
pop
pop
mov
sbb
add
iret
or
(bad)
adc
push
push
push
dec
test
and
mov
cmp
xor
(bad)
shl
scas
gs
adc
xor
lods
and
stos
sbb
jg
clc
xor
fs
jb
mov
mov
shl
mov
push
ins
ins
(bad)
jg
push
pop
(bad)
out
jb
addr16
sbb
mov
push
push
fld
xchg
xlat
bound
daa
popw
pop
sbb
jge
jl
es
or
ds
mov
push
sub
loopne
and
cmps
jle
jne
sbb
push
add
jl
cmp
sub
sub
pop
or
sbb
lea
outs
daa
daa
and
push
inc
and
fsub
jg
ds
mov
pop
jne
retf
mov
ja
push
jb
imul
xor
ret
xor
inc
cmp
xor
sbb
fcom
int
add
inc
jo
loope
out
inc
ja
fidivr
lock
fadd
fs
xor
mov
sbb
out
cmp
add
dec
in
in
or
jns
int3
repz
jnp
and
push
or
hlt
dec
aam
test
push
mov
sahf
out
sahf
mov
test
cwde
xchg
jnp
and
xchg
pop
nop
push
mov
cmp
cmp
outs
or
jl
jns
idiv
je
ins
out
mov
push
fs
pusha
daa
repz
mov
dec
pop
push
pop
push
push
push
dec
cmp
cmp
addr16
cmp
cmp
repz
adc
repz
out
loopne
int3
lods
mov
iret
repz
dec
sub
in
dec
jns
out
enter
push
loop
sahf
out
dec
cmp
out
lock
dec
es
mov
iret
repz
fs
hlt
jns
out
data16
lods
adc
add
addr16
outs
(bad)
outs
dec
pusha
add
inc
sub
or
(bad)
iret
mov
outs
test
adc
test
scas
or
xchg
add
add
adc
sub
add
cmp
jl
lock
js
leave
xchg
(bad)
add
mov
neg
and
or
je
push
iret
(bad)
or
jns
push
xor
sub
jmp
push
in
iret
js
push
mul
nop
ins
aas
fisubr
sbb
daa
popf
(bad)
ret
or
popa
fs
imul
and
pusha
rcl
pop
sti
xchg
mov
outs
add
adc
inc
and
and
das
jne
cs
sub
jo
mov
pop
fstp
cmp
pop
addr16
sbb
ja
pusha
or
and
push
dec
pop
outs
data16
add
or
pop
out
(bad)
sub
dec
adc
shl
shl
pop
xor
bound
pop
sub
out
add
sub
add
adc
addr16
pop
inc
pusha
pop
sub
and
sub
pop
sub
sub
pop
mov
clc
push
sub
mov
and
xchg
jnp
jo
arpl
outs
inc
sbb
mov
in
mov
cmp
mov
lds
outs
push
outs
cmps
add
xchg
mov
jmp
add
addr16
or
mov
outs
jae
sub
and
addr16
ret
add
outs
mov
add
daa
push
sub
xor
inc
mov
das
call
nop
pop
cmp
adc
cmp
mov
mov
jg
rcl
xchg
sbb
jno
data16
loope
sbb
sbb
je
ret
or
jae
pop
mov
push
push
xchg
adc
mov
add
inc
test
or
ja
popa
adc
out
sub
fadd
and
adc
fwait
xchg
pop
inc
jecxz
xchg
das
push
popa
sbb
(bad)
ja
xor
add
push
dec
inc
dec
dec
xchg
cmc
or
xchg
popa
aas
add
aaa
xor
sub
and
and
push
or
arpl
rcr
pop
fwait
xchg
inc
add
mov
lahf
push
fist
or
cmp
iret
mov
scas
test
and
mov
pop
pop
mov
imul
or
test
or
add
adc
lahf
push
inc
dec
iret
not
ret
xchg
addr16
dec
ret
ja
clc
and
dec
pop
sbb
lea
bound
jnp
jns
mov
mov
test
gs
inc
and
xchg
sbb
loope
sub
cmp
ficom
mov
and
aam
test
dec
cmp
and
dec
xchg
inc
and
pop
stos
push
div
test
int
adc
mov
dec
add
xchg
sti
jmp
outs
mov
xlat
jae
and
add
pop
fisub
add
in
pop
xor
xchg
cld
lods
push
dec
popf
sbb
frstor
add
gs
enter
or
fs
add
jb
fisub
mov
mov
out
cmp
inc
sub
test
jns
test
dec
sbb
and
aaa
pop
les
iret
popa
shl
jo
jno
cs
jle
xchg
inc
and
push
push
retf
inc
add
fst
retf
sub
popa
jbe
arpl
xor
test
std
mov
aam
int
pop
popa
push
imul
popa
jb
outs
outs
gs
jp
ss
adc
mov
mov
daa
mov
jns
inc
pop
lods
mov
pcmpeqb
mov
pop
jmp
push
jl
add
pop
lahf
icebp
adc
push
pop
je
and
add
sbb
vmovdqu
pop
mov
xchg
bound
jne
push
outs
inc
fstp
xor
dec
lahf
outs
sub
mov
dec
lea
jle
jae
out
push
sbb
daa
push
push
dec
sbb
and
and
mov
and
xor
xchg
fdiv
sub
aas
fbld
jnp
nop
hlt
test
or
lea
nop
and
inc
mov
fisttp
mov
cmp
pop
mov
fist
pop
dec
pop
ja
cs
sub
(bad)
adc
push
and
outs
test
ins
scas
mov
enter
fs
bound
and
inc
inc
cmp
sub
push
jo
neg
jmp
loop
cmp
push
xchg
add
inc
add
push
sbb
jns
sbb
dec
pop
inc
pop
retf
ror
daa
and
push
shl
jge
adc
adc
jbe
mov
test
arpl
push
fld
add
sub
cmp
sub
add
add
lock
add
lods
pop
cmp
pop
or
mov
pusha
sub
add
or
gs
test
loopne
push
lods
jecxz
sub
xor
addr16
mov
mov
outs
pusha
push
adc
daa
inc
daa
mov
inc
adc
call
fs
movs
xchg
pop
xor
and
jmp
mov
sub
or
xor
(bad)
mov
aaa
repz
inc
cmp
push
mov
add
add
es
scas
push
adc
rcl
cmp
cmp
dec
mov
retf
inc
pusha
or
inc
mov
(bad)
retf
inc
lea
aaa
icebp
(bad)
jnp
imul
sar
rcl
lods
nop
or
movs
cmp
call
test
fnstcw
scas
cmps
mov
and
mov
push
mov
xchg
(bad)
imul
loope
jns
xor
into
mov
scas
rcr
std
jne
lods
inc
cld
call
mov
bound
mov
ds
(bad)
cld
(bad)
call
hlt
dec
call
push
mov
xor
leave
pop
push
jg
xor
test
cmp
pop
add
xor
pop
sar
mov
mov
jbe
lahf
mov
add
lock
jbe
mov
xor
inc
cmp
push
mov
jg
dec
addr16
out
push
lods
jno
fistp
or
sub
mov
gs
dec
pop
or
ds
push
xchg
scas
ins
aaa
cs
das
in
cwde
mov
mov
(bad)
push
push
sahf
xchg
add
test
cmps
inc
pop
fwait
cmps
stc
sbb
rcl
mov
fidivr
mov
sbb
push
loop
hlt
jo
dec
lahf
ins
adc
mov
lods
test
pop
xchg
add
mov
push
mov
ins
gs
add
add
and
inc
mov
ss
cmps
add
(bad)
push
rol
push
pop
fstp
sub
push
cwde
push
mov
loopne
or
add
add
outs
and
add
aaa
fcomp
jbe
cmps
ja
lahf
add
jle
dec
(bad)
ins
pop
pop
(bad)
cld
lahf
or
dec
dec
ins
daa
(bad)
sub
push
mov
and
cwde
lahf
add
push
mov
pop
enter
call
mov
clc
pop
outs
push
aas
xchg
adc
ja
call
outs
addr16
sub
dec
outs
xchg
cld
addr16
cs
outs
add
(bad)
outs
mov
push
mov
sbb
call
shl
inc
fistp
outs
push
call
sti
add
(bad)
or
adc
push
xor
push
(bad)
pop
jnp
popa
addr16
je
pusha
(bad)
das
in
out
scas
jo
test
mov
push
test
cmps
jg
popa
iret
cmp
popa
(bad)
mov
fwait
int3
push
fsubr
mov
inc
sub
mov
adc
and
rcl
invd
daa
lock
add
call
push
jl
ret
push
enter
jg
sub
aaa
and
dec
lods
daa
pop
or
push
in
jno
jg
sbb
iret
cmps
test
add
xor
cmp
jge
inc
push
push
jno
pusha
bound
xchg
pusha
out
pop
(bad)
(bad)
icebp
dec
xor
push
cwde
daa
jl
ffreep
es
or
in
dec
dec
xchg
fcomp
in
mov
pusha
xchg
enter
push
cmps
jmp
pop
jb
and
xor
or
sbb
inc
dec
lds
or
push
push
jl
pushf
jb
xchg
outs
and
pusha
das
jb
js
int3
inc
lock
fcomp
in
ja
ins
and
arpl
int3
lahf
mov
mov
aaa
sub
xor
mov
adc
add
and
dec
fs
je
test
mov
fdiv
movs
fs
ja
adc
or
dec
int3
loopne
loopne
cmps
loopne
hlt
pop
inc
fimul
pop
les
(bad)
and
inc
fbstp
push
cmp
xlat
or
cmp
xchg
dec
ins
inc
scas
mov
mov
mov
rol
mov
xchg
add
loopne
fld
mov
inc
in
adc
and
mov
cmps
loopne
jne
in
adc
add
dec
pop
jne
sub
dec
ins
push
jl
add
out
or
lds
pop
lahf
and
lods
aaa
add
jmp
and
aaa
clc
es
adc
jne
sbb
jg
jbe
jbe
adc
pusha
data16
inc
jnp
(bad)
ja
dec
push
jbe
pusha
push
push
jp
popw
addr16
rcl
les
jbe
test
mov
mov
pop
(bad)
xlat
cwde
xchg
in
fwait
sub
pmuludq
add
lahf
mov
dec
loopne
in
or
addr16
xor
push
outs
aaa
inc
and
iret
jnp
ins
push
mov
jo
xor
lahf
cmps
jle
test
jns
push
push
adc
into
js
cmpps
in
cmps
sbb
pop
movs
ja
ja
pusha
xchg
mov
add
cmp
aas
push
rol
dec
test
aad
push
(bad)
js
adc
ins
ss
mov
push
mov
inc
leave
lds
test
movs
xlat
les
xlat
popa
aas
aam
call
push
or
test
mov
xor
adc
lods
in
sbb
das
out
fidivr
int3
push
fadd
clc
or
scas
adc
in
adc
jmp
inc
bound
jp
iret
mul
sub
xchg
push
push
fs
adc
popf
and
jne
cmp
pushf
clc
push
mov
lods
cmps
add
int3
jp
jl
loop
fcomp
lock
or
pop
inc
xchg
loopne
pop
push
fimul
(bad)
cmp
(bad)
cli
push
xchg
add
adc
ins
push
je
test
outs
lahf
add
movs
jnp
call
enter
mov
add
movs
cmps
fmul
adc
or
bound
adc
aas
fsub
clc
xchg
cmp
jo
add
(bad)
jl
push
push
loopne
jo
ins
push
mov
imul
and
pop
mov
jo
push
add
jl
in
push
pusha
or
imul
inc
mov
or
inc
jge
ins
imul
add
add
aaa
sbb
daa
xchg
daa
jo
add
bound
enter
in
push
aam
mov
bound
xchg
adc
and
push
enter
fsubr
cmps
ret
push
xchg
pusha
xor
xchg
add
push
jnp
jnp
sub
xchg
lods
push
mov
pop
sub
dec
call
jg
dec
mov
jo
xor
and
faddp
xchg
inc
push
push
xchg
jo
add
fisttp
xchg
add
pushf
xchg
xchg
imul
in
mov
int3
xchg
fsub
add
mov
jge
sti
fmul
adc
mov
sbb
clc
dec
fs
je
adc
fs
mov
xchg
rcr
xor
push
xor
lods
pop
jnp
pop
dec
cld
xchg
or
mov
sub
test
or
push
mov
aad
pusha
daa
test
addr16
add
dec
nop
adc
ja
imul
ss
xchg
xchg
pop
enter
add
xchg
faddp
test
pusha
dec
xor
pop
inc
push
push
adc
repz
jo
pusha
ins
(bad)
js
mov
mov
inc
pushf
cmps
pop
ja
loopne
xchg
lock
mov
or
adc
dec
lahf
sub
fdiv
dec
enter
js
or
je
add
adc
test
mov
jl
pusha
or
mov
fidiv
jno
cld
push
adc
cmps
test
dec
jo
mov
out
adc
test
mov
add
mov
dec
dec
ja
push
pushf
daa
or
ja
pop
xor
dec
jecxz
shl
clc
test
packuswb
pop
mov
dec
sub
adc
push
inc
daa
pop
inc
jl
or
dec
jo
dec
shl
jo
xchg
outs
call
jo
mov
fdivr
xchg
int3
push
fadd
hlt
das
mov
cmps
outs
dec
jo
ror
daa
adc
or
mov
daa
mov
pop
xbegin
jmp
xchg
push
test
daa
clc
jo
xchg
sbb
mov
iret
les
fdiv
inc
hlt
push
sbb
mov
jge
sti
cmp
xchg
sub
add
dec
pop
cmps
ins
push
adc
pop
mov
dec
mov
xchg
rcr
xchg
les
lahf
sti
neg
dec
add
mov
movs
ja
pop
lahf
movs
daa
dec
push
mov
pusha
pop
push
icebp
push
js
pop
les
mov
scas
cld
dec
test
xlat
mov
es
cld
jno
(bad)
in
lds
test
sbb
hlt
xchg
jmp
mov
adc
jno
sbb
hlt
ficomp
inc
mov
push
pusha
or
xor
xchg
faddp
fimul
xchg
pushf
push
test
les
push
in
push
in
pop
xchg
outs
test
arpl
dec
loopne
lock
mov
xor
dec
xchg
cli
and
sub
pop
add
pop
mov
xlat
movs
push
les
jae
xchg
mov
ficomp
mov
shr
push
jae
ja
jae
push
mov
cld
cmps
adc
add
mov
sub
xchg
cs
cmp
push
pusha
outs
mov
push
mov
loopne
add
mov
test
scas
or
mov
jmp
cmps
neg
mov
inc
jg
in
fwait
or
dec
pop
mov
ins
push
js
xchg
pop
fwait
and
dec
je
pop
xchg
push
dec
test
daa
mov
fwait
loopne
push
jl
lea
jnp
clc
lahf
or
mov
pop
mov
dec
(bad)
call
push
lahf
xchg
ja
mov
lahf
test
mov
lahf
test
mov
(bad)
out
ror
clc
push
or
xor
call
icebp
dec
cmp
mov
aam
outs
sbb
ja
jns
call
adc
outs
test
mov
call
add
cwde
mov
jne
mov
lock
clc
daa
or
bound
push
addr16
xor
adc
or
iret
add
and
jne
outs
ja
or
dec
je
test
mov
push
lods
das
push
xchg
outs
jo
add
or
(bad)
iret
fsub
ret
lahf
add
das
or
mov
ja
out
push
mov
xchg
push
pushf
add
push
hlt
push
dec
xchg
scas
call
or
(bad)
mov
or
or
sub
xor
aas
adc
nop
neg
push
add
outs
shl
es
jbe
pop
fimul
cmp
xchg
xor
scas
fs
ja
adc
push
lock
inc
out
push
std
pop
pop
ja
mov
test
enter
cdq
mov
pop
xor
xchg
call
dec
sti
adc
sub
cmps
jo
dec
mov
fild
and
in
nop
outs
adc
mov
nop
sub
in
adc
sbb
daa
sub
sub
xchg
ja
loope
or
add
jno
das
enter
mov
outs
bound
mov
(bad)
mov
cwde
push
test
les
mov
or
sbb
xchg
mov
mov
dec
push
adc
(bad)
push
pop
pushf
fcom
mov
js
jbe
jecxz
je
inc
test
pop
js
mov
inc
pop
enter
xor
xchg
xchg
ja
into
jnp
sti
mov
push
push
addr16
fbstp
js
adc
inc
test
sbb
add
xchg
jge
aam
imul
jnp
xlat
jns
in
mov
adc
and
inc
lahf
mov
cmp
jns
dec
jns
sub
inc
(bad)
xchg
jmp
jg
mov
rol
push
lods
xchg
scas
jo
sahf
xor
fsubr
in
push
cld
push
sbb
pusha
lahf
ja
scas
les
sub
xor
call
mov
fs
dec
scas
mov
mov
xchg
fisubr
mov
mov
aas
fiadd
add
or
mov
add
cwde
addr16
and
(bad)
bound
repnz
cwde
push
cmps
mov
jp
outs
out
pusha
ret
mov
fadd
jp
addr16
xchg
adc
dec
rcr
dec
loopne
lock
out
mov
pop
mov
aam
and
push
xor
dec
push
movs
adc
shl
jp
daa
or
pop
and
mov
loopne
rcr
or
hlt
out
call
xor
outs
dec
inc
shr
pop
jp
or
call
adc
ret
xchg
das
push
add
push
loopne
cld
or
pop
add
dec
aam
sbb
sub
dec
mov
call
jo
mov
outs
lock
inc
or
cmp
shl
pop
mov
pusha
mov
cmp
fwait
hlt
outs
shl
push
pop
jl
xlat
xor
call
pushf
call
mov
outs
or
and
xchg
pusha
mov
xchg
lahf
test
pop
jnp
mov
les
jnp
in
rol
(bad)
fild
lahf
and
xor
add
fcom
cmps
movs
jl
adc
fcom
test
(bad)
fadd
cwde
popf
xlat
adc
(bad)
mov
inc
es
dec
enter
xchg
test
push
in
aas
mov
xchg
pop
mov
adc
call
xor
xchg
push
outs
out
(bad)
iret
or
pusha
xchg
jo
jl
cs
imul
out
cwde
dec
lods
sahf
addr16
ret
inc
aaa
cwde
lods
lahf
es
cld
lahf
or
(bad)
or
push
cmp
je
loopne
push
lahf
out
mov
fwait
cmps
aaa
jge
cmp
push
pop
cmps
jle
lds
push
lahf
call
mov
jmp
jge
jnp
call
mov
nop
sub
inc
dec
cmp
call
push
mov
jne
jle
mov
mov
push
aaa
add
mov
mov
iret
loopne
add
mov
bound
lahf
hlt
mov
sbb
or
dec
and
adc
mov
in
add
push
jl
push
pusha
or
iret
outs
into
test
mov
lahf
adc
lahf
js
loop
xor
mov
adc
jg
cs
mov
scas
dec
dec
push
mov
adc
scas
dec
xor
nop
pop
push
mov
mov
enter
mov
xchg
adc
test
jmp
push
mov
mov
lahf
test
dec
mov
call
push
rol
ja
ja
adc
or
push
jl
ret
push
add
pop
fist
in
add
hlt
push
or
sti
jns
sbb
jl
and
mov
sub
test
loope
aam
push
pusha
movs
outs
or
jmp
dec
js
or
pop
ins
adc
push
in
(bad)
outs
shr
fild
or
cmp
xchg
or
nop
popa
imul
movs
daa
lock
loopne
cs
jl
lock
inc
mov
fs
cmp
out
movs
pop
sub
pop
xchg
pusha
dec
clc
xchg
or
test
xchg
mov
inc
cs
cwde
dec
inc
cmps
inc
mov
cwde
sahf
adc
fsubr
dec
nop
and
faddp
xchg
mov
mov
push
in
xchg
push
and
pop
(bad)
lahf
loop
pop
add
icebp
and
cmps
xor
dec
cmp
not
mov
dec
push
xchg
pusha
in
mov
cmp
imul
imul
js
pushf
xchg
lods
push
mov
mov
dec
push
clc
dec
call
or
cmp
pop
call
(bad)
bound
pop
or
pop
push
pusha
cmovle
ins
test
add
xchg
ja
dec
pushf
test
in
mov
xchg
and
imul
mov
call
sub
clc
cs
push
add
ja
les
pop
call
out
out
and
inc
push
pop
push
je
add
xchg
xor
das
sbb
test
dec
mov
dec
test
int3
test
add
sbb
lock
adc
shl
dec
(bad)
lock
and
adc
(bad)
xchg
mov
inc
inc
sub
jle
cmp
out
scas
lods
sub
mov
enter
add
pusha
imul
push
js
cmp
clc
iret
or
jo
lahf
dec
test
adc
dec
dec
stos
jmp
stos
mov
sahf
mov
dec
cwde
mov
lds
scas
mov
cwde
fmul
inc
and
push
or
or
ja
test
push
mov
mov
cmps
xchg
mov
push
mov
or
ja
adc
lahf
dec
mov
add
dec
test
lds
or
mov
dec
sbb
daa
pop
mov
dec
lods
mov
outs
push
xchg
lods
(bad)
clc
adc
mov
js
lar
xchg
lods
js
js
les
lods
dec
les
test
bound
inc
call
mov
push
xor
push
aaa
outs
and
(bad)
scas
hlt
mov
scas
out
and
call
sbb
adc
nop
and
cmp
jmp
push
or
call
scas
lea
adc
scas
scas
out
or
sub
outs
mov
xor
out
pop
scas
icebp
not
mov
push
je
inc
xchg
add
dec
push
movs
daa
mov
enter
shl
mov
aam
add
aad
lods
add
out
clc
push
or
daa
(bad)
mov
repz
rcr
cmp
mov
repnz
shl
iret
shl
test
fsubp
jns
out
shr
xchg
(bad)
adc
cs
fs
pop
ret
dec
cmp
out
jnp
cmp
jo
jns
out
rcr
dec
repz
xor
jl
out
(bad)
outs
lds
enter
jns
cmps
push
nop
mov
cli
retf
jns
jbe
es
int3
sub
mov
cdq
lahf
cmps
stc
cmp
aaa
into
jb
or
sahf
aaa
clc
xor
sub
test
call
rcr
adc
inc
in
sahf
cmps
fnstcw
dec
aad
mov
cmp
repz
and
jl
loope
out
sub
ss
mov
fsubr
iret
cmp
fnstenv
jl
out
pushf
(bad)
fimul
ds
test
adc
test
out
jl
lods
loopne
fsub
add
sahf
inc
jno
outs
fiadd
sbb
push
sbb
sahf
push
outs
repz
out
fist
sbb
push
loop
push
cmps
stc
xor
rcl
push
cs
iret
sbb
call
pop
sbb
out
xchg
repz
jns
aas
out
push
lods
es
jl
xor
scas
push
jp
mov
jmp
adc
jl
out
sub
(bad)
ror
in
repz
rcl
cwde
mov
out
call
mov
jge
mov
or
(bad)
push
pop
xchg
cmp
out
das
lock
fbstp
icebp
stc
cmp
aaa
inc
add
ja
dec
repz
hlt
dec
push
fst
cs
out
out
lock
test
cmps
jge
lock
clc
push
ss
jl
int
jns
ret
jge
lahf
data16
jmp
daa
std
cmp
scas
add
push
into
push
mov
mov
sar
sub
mov
(bad)
jmp
imul
loope
add
dec
arpl
mov
push
push
repz
out
in
add
cmp
daa
push
push
mov
(bad)
test
es
jo
lock
imul
mov
jl
out
xlat
cli
xor
add
(bad)
mov
jns
out
push
stos
adc
cmp
lock
push
scas
push
cmps
leave
hlt
sar
pop
jo
repz
adc
xor
cmps
stc
cmp
xchg
iret
sar
iret
or
es
adc
jns
out
push
js
(bad)
stc
loope
cmp
inc
pop
outs
test
sbb
jns
inc
push
int3
out
xor
rol
js
sbb
sbb
imul
sbb
out
inc
mov
push
push
jns
out
inc
jle
adc
aaa
lahf
cld
sahf
mov
push
xchg
cmp
repz
mov
outs
mov
dec
loop
mul
and
jns
out
out
push
dec
and
fdivrp
cmp
icebp
sbb
push
test
push
lahf
cmps
mov
popa
es
adc
call
aad
adc
sub
ret
out
push
push
std
imul
(bad)
out
lock
push
sub
mov
push
fcomp
inc
xor
add
fwait
dec
dec
push
dec
xor
jl
xor
push
or
out
ds
ss
call
loopne
cmp
in
cmp
push
test
fnstsw
repz
push
arpl
ds
cmp
push
push
push
mov
fidivr
xchg
test
cmps
stc
cmp
inc
push
stos
lahf
cmps
stc
push
xor
icebp
push
inc
adc
fsubp
jge
pop
inc
scas
dec
ss
out
ss
iret
mov
add
push
cwde
rol
out
ds
dec
jns
xor
cmc
jns
fistp
push
ret
push
add
(bad)
dec
repz
dec
mov
push
push
push
or
cmp
out
xchg
aaa
push
adc
ds
repz
mov
push
(bad)
fldenv
enter
pop
data16
push
fcmovnb
pop
(bad)
pop
push
mov
outs
push
and
jge
not
mov
pusha
jl
sbb
into
arpl
push
in
(bad)
shl
and
push
pusha
imul
push
inc
push
push
sbb
jge
sbb
push
rcr
pop
push
out
repz
movs
ret
adc
ins
repz
cmp
jno
cmps
retf
scas
iret
out
or
push
inc
pop
sahf
out
sahf
jbe
lods
(bad)
loop
out
pusha
jl
outs
or
mov
dec
sbb
push
test
jge
loop
out
jno
push
ja
jb
fsubp
sbb
push
pop
jae
push
mov
ret
out
fisubr
xchg
(bad)
repz
jbe
push
pop
ja
pop
lahf
ja
push
cmc
cwde
js
jns
clc
push
or
outs
jnp
push
and
mov
push
loope
jge
push
sar
loop
jl
jle
rol
mov
sub
jns
jbe
fwait
jmp
iret
repz
mov
cmp
out
push
mov
pop
cmp
imul
jmp
jl
out
mov
push
ja
cmp
pop
stos
out
xchg
out
xor
(bad)
xchg
mov
fild
lahf
jmp
mov
push
es
mov
or
push
jbe
ins
mov
push
in
add
jmp
push
or
lahf
out
sahf
out
push
js
sar
xor
xchg
mov
lock
sahf
push
je
sbb
repz
and
xor
out
xchg
fstp
xchg
push
js
or
adc
sahf
ja
out
sbb
out
out
not
xchg
inc
xchg
push
nop
mov
fidivr
cwde
push
cwde
shl
repz
daa
cdq
pop
mov
push
call
cmp
repz
lahf
ja
fisttp
pushf
xchg
push
pusha
loop
cmp
and
idiv
(bad)
push
mov
mov
mov
mov
ja
out
mov
aaa
mov
cmp
sbb
push
push
xchg
mov
iret
repz
repz
sub
sub
cmp
mov
shl
movs
fidivr
aaa
fiadd
pushf
fimul
cmps
out
jae
lahf
out
nop
shl
cmp
jns
fwait
shl
test
push
jmp
out
sub
add
out
sahf
or
push
push
add
push
test
repz
repz
jns
out
lods
xor
mov
repz
lahf
icebp
sbb
in
out
ds
ss
je
shl
jns
jl
mov
push
dec
js
cmp
jmp
mov
lahf
out
sbb
or
(bad)
push
shl
lahf
out
fimul
fcom
mov
iret
repz
inc
push
imul
out
push
push
jo
sti
sub
ds
mov
iret
cmp
xchg
mov
pushf
push
lods
fdiv
cmp
or
mov
call
push
(bad)
aas
cmp
mov
add
lock
inc
mov
scas
pusha
lahf
dec
pop
scas
sbb
stos
mov
push
test
jle
or
in
adc
add
out
stos
aaa
push
fimul
push
mov
mov
add
(bad)
adc
adc
dec
cs
imul
enter
or
rcl
sbb
sub
add
lods
sbb
add
lods
ss
push
lahf
cmp
mov
mov
push
pop
mov
pop
shl
in
(bad)
and
call
mov
xlat
dec
fld
daa
push
(bad)
pop
dec
push
dec
lds
push
mov
ins
imul
and
les
test
les
ja
and
jb
pop
loopne
xchg
xor
jbe
ins
mov
inc
addr16
xchg
mov
jmp
fmulp
scas
mov
rcl
mov
repz
and
xor
cmp
add
cmp
sahf
jmp
cld
aas
rcl
shl
rcl
invd
aas
jnp
scas
ins
sar
pusha
outs
aas
fidivr
inc
xchg
xchg
das
fcom
cmps
sbb
scas
neg
das
mov
cmp
jo
test
ret
and
cmp
dec
ret
dec
cmps
fiadd
xor
xchg
movs
jne
dec
fidiv
jo
ret
push
add
dec
mul
ret
xor
in
and
or
dec
jg
ret
loop
(bad)
fist
ret
pop
push
shl
ror
pop
mov
rol
push
mov
cld
les
les
sbb
inc
dec
jb
les
mov
(bad)
scas
lods
mov
int3
or
add
cmp
lds
stos
fs
pop
ins
scas
xchg
mov
jl
mov
xchg
xchg
dec
(bad)
aam
xchg
xchg
mov
(bad)
cmps
jecxz
shr
(bad)
call
adc
pop
in
push
lods
pop
loopne
jecxz
in
scas
cmp
jmp
cmps
test
in
push
jg
add
daa
or
out
xor
dec
fwait
push
xlat
or
mov
addr16
(bad)
ss
ret
mov
ja
jb
mov
movzx
xlat
jbe
xchg
js
inc
pop
ins
iret
in
scas
add
xchg
loopne
(bad)
fistp
add
fbstp
psubb
iret
push
enter
pusha
mov
jo
punpckhbw
les
enter
push
leave
js
mov
jo
add
scas
add
aaa
xchg
(bad)
dec
aaa
push
call
fidiv
out
mov
aaa
es
enter
pushf
inc
mov
push
leave
pop
test
push
loop
leave
das
arpl
mov
pop
(bad)
cmovl
call
fild
push
dec
(bad)
nop
mov
cwde
(bad)
lds
or
loop
lds
mov
push
xlat
fs
adc
and
push
pushf
inc
mov
retf
das
les
jo
push
inc
or
je
(bad)
xchg
retf
(bad)
dec
daa
cs
push
inc
pop
movs
daa
push
jnp
iret
mov
add
pop
and
retf
add
xlat
inc
mov
pop
dec
cmps
mov
(bad)
mov
retf
cmovge
xchg
pop
xchg
out
call
ja
(bad)
vmptrld
xchg
mov
aam
inc
icebp
xchg
xchg
inc
addr16
outs
shl
and
inc
ja
adc
test
pop
xor
lods
pop
xchg
jmp
cdq
sahf
pushf
(bad)
aaa
movs
(bad)
dec
add
iret
pop
dec
jno
add
lea
aaa
pop
(bad)
out
jle
and
loopne
mov
out
lock
fucomip
mov
enter
das
inc
stos
and
enter
ja
iret
ss
xor
enter
jbe
dec
lock
enter
pop
xlat
arpl
rep
pmuludq
push
test
popf
push
or
idiv
or
pop
fisttp
or
jg
out
push
emms
leave
pop
ins
jo
aaa
and
adc
das
dec
leave
jb
loopne
dec
adc
xchg
mov
cmp
aas
cmp
pushf
and
stos
mov
fdivr
leave
test
lods
into
lods
mov
mov
loop
adc
leave
(bad)
sbb
or
outs
adc
cmps
cmp
retf
push
push
ss
cmps
push
ja
aas
push
loopne
iret
repz
or
ins
repz
retf
push
push
mov
cdq
adc
outs
scas
push
adc
xchg
or
push
adc
sbb
add
dec
iret
cld
(bad)
movs
and
adc
retf
ficom
(bad)
xor
leave
leave
inc
jb
shl
loopne
leave
leave
jo
or
mov
add
test
rol
stos
retf
cmp
cs
lahf
movs
shl
nop
rcl
push
sbb
mov
stc
ja
int3
or
jb
and
int3
and
out
int3
inc
mov
cmp
inc
int3
dec
int3
pop
int3
in
xchg
and
int3
jp
mov
jb
int3
nop
int3
fwait
int3
cmps
int3
enter
mov
mov
aaa
jb
ror
(bad)
call
lea
push
mov
int
sbb
add
jae
sbb
jo
adc
int
dec
orps
and
int
hlt
push
add
mov
push
xchg
int
mov
shr
in
or
push
mov
leave
(bad)
int3
aam
jnp
cmps
call
mov
into
addr16
in
(bad)
movhps
daa
mov
push
add
(bad)
into
mov
xor
into
and
out
mov
dec
pop
mov
mov
dec
outs
pop
aaa
ror
fabs
jmp
icebp
stc
add
btr
ins
(bad)
out
and
mov
mov
xlat
sub
push
das
xchg
xchg
fcmovne
cmp
pop
pcmpgtw
xchg
xchg
xchg
jne
test
xchg
popf
movs
aaa
push
in
mov
shr
in
in
fsub
call
into
mov
aas
or
or
enter
shl
sar
add
cmps
cld
inc
inc
sub
scas
aad
or
aad
aad
enter
inc
lahf
dec
ror
rol
adc
pop
shl
or
jne
imul
shl
or
cmps
rcr
pop
and
cmps
pop
push
scas
pop
(bad)
(bad)
xor
dec
movs
push
out
mov
fsub
cld
fild
das
inc
das
sbb
iret
out
xlat
shr
mov
xchg
in
inc
dec
(bad)
out
imul
outs
sbb
(bad)
xor
jg
js
leave
test
push
icebp
jg
cmps
js
push
scas
pop
shr
shl
into
jo
ror
jl
out
xchg
das
jb
cmp
xchg
ror
shr
jb
mov
dec
dec
mov
ror
adc
scas
rcl
rcl
add
add
cmp
loope
cld
xlat
daa
(bad)
xlat
das
cmp
ss
ds
or
fmul
ror
scas
imul
pop
into
shr
neg
sysret
mov
jb
sub
pushf
shl
ja
pop
mov
ja
ror
jo
les
int3
jg
hlt
int3
mov
sar
rol
sbb
fistp
mov
push
cmp
nop
mov
push
inc
ror
push
ror
fisubr
aaa
pop
pcmpgtd
jno
aaa
loope
sar
jg
repz
movs
shrd
mov
or
mov
repnz
aad
pop
arpl
(bad)
iret
sbb
cmp
lods
fldcw
aam
pushf
int3
pop
xor
(bad)
arpl
movd
call
(bad)
call
movs
aam
mov
mov
jno
aam
rcl
scas
fcomp
out
ficomp
loop
iret
repnz
std
invd
aad
ror
add
retf
xchg
aas
dec
outs
aaa
inc
add
rcl
adc
arpl
shr
into
dec
mov
aad
nop
aad
lea
inc
dec
(bad)
ficom
inc
or
cmp
xlat
or
sbb
idiv
fcom
in
sub
mov
xchg
adc
(bad)
(bad)
and
fld
test
daa
jmp
pushf
jbe
inc
or
push
sbb
adc
test
inc
mov
aaa
fidiv
jno
js
cs
dec
cs
pop
into
rcr
not
mov
inc
mov
adc
iret
xchg
adc
adc
nop
adc
mov
mov
test
les
inc
aaa
aam
inc
pop
push
adc
test
popa
ror
or
pop
jb
push
adc
outs
xlat
mov
cmps
cmp
idiv
aaa
push
xchg
adc
cmp
xor
test
cmp
movs
fidiv
fidivr
jo
inc
repnz
fidivr
fidiv
xlat
jecxz
push
cmp
lds
aas
into
xchg
out
fcomp
jmp
xchg
cmp
and
xchg
cmp
push
fsub
mov
enter
fsubr
outs
pushf
in
xlat
push
dec
mov
fbstp
mov
jg
dec
pop
push
pushf
mov
mov
pop
add
add
push
push
fisttp
fild
jg
fild
lock
jb
fadd
shufps
jb
lahf
addr16
fdivr
fcomp
fcomp
sbb
out
or
jmp
inc
(bad)
adc
sbb
outs
movs
adc
sub
pop
dec
push
popf
loopne
loopne
mov
outs
pop
jo
loop
pop
add
out
fld
test
out
sete
cmp
xchg
leave
ja
dec
push
rol
dec
add
mov
mov
in
into
inc
jnp
out
loop
outs
retf
test
in
add
jg
fcmovu
pop
ss
push
outs
(bad)
sets
pop
mov
icebp
mov
jg
inc
vmwrite
loop
loop
xor
loopne
ret
fisub
pop
psrlq
idiv
add
inc
jmp
xlat
in
pop
(bad)
pop
shr
jecxz
fcmovnbe
mov
jecxz
and
iret
jb
push
js
popa
inc
ja
push
mov
or
iret
push
xchg
iret
xor
popa
and
shl
(bad)
mov
pop
in
jne
add
scas
xor
outs
pop
out
in
pop
in
loopne
test
adc
rol
pushf
xlat
enter
fcomi
bound
push
xlat
fcomp
data16
inc
push
addr16
out
in
adc
fs
ja
push
xor
pop
enter
js
lods
or
fsubr
sbb
cwde
xchg
xchg
or
xlat
es
ja
fmul
and
icebp
push
inc
fmul
fmul
push
fdivr
fdiv
je
sbb
out
leave
test
in
in
pop
fadd
out
mov
xchg
inc
jb
and
leave
ret
ficom
pushf
call
daa
std
jb
sub
out
out
loopne
add
fnsave
fstp
loopne
out
shl
scas
imul
dec
or
inc
mov
mov
pop
js
xchg
shl
out
js
add
inc
add
xchg
dec
or
inc
inc
mov
sub
or
mov
pop
xchg
fisttp
pushf
fst
aad
aas
lods
aas
(bad)
mov
pop
jmp
hlt
test
js
add
je
aas
in
pop
xchg
call
add
pusha
call
push
es
adc
les
cs
aaa
fild
cmp
cmc
movzx
arpl
movhps
and
data16
outs
pop
sub
aaa
aaa
push
imul
pusha
adc
inc
pop
fisubr
arpl
pop
fdivrp
js
and
fsubr
fwait
pusha
mov
ror
leave
in
jbe
pop
loope
(bad)
out
cmp
sbb
jmp
push
cmp
fistp
and
into
cs
jl
(bad)
jbe
addr16
jl
test
mov
enter
xchg
cld
fcomip
xchg
out
adc
add
loopne
pop
in
sbb
loopne
lock
adc
mov
das
and
das
cmp
call
push
jmp
mov
in
sub
mov
jo
mov
lods
ja
loopne
aam
ss
jo
mov
ja
es
add
or
in
jb
or
push
in
xchg
in
mov
iret
mov
mov
nop
fstp
inc
jb
inc
(bad)
lock
pushf
loopne
loop
sub
sbb
add
dec
loop
push
in
push
sub
jo
xchg
push
mov
sub
daa
push
cld
jo
mov
push
add
jg
in
add
jo
cli
aas
mov
aas
nop
loop
loop
push
mov
dec
mov
loop
lock
out
loop
mov
jo
outs
pop
enter
push
das
pop
cmc
ss
hlt
loop
daa
add
dec
dec
xor
out
jecxz
ins
xchg
inc
das
les
push
xchg
push
mov
push
call
iret
out
push
es
pusha
ja
jecxz
aaa
loope
sbb
iret
aas
jecxz
inc
jecxz
jecxz
sub
adc
sbb
cdq
nop
pop
xchg
xchg
or
xchg
loop
iret
and
ds
pop
lock
cmps
test
lahf
cmp
out
push
push
pop
scas
jo
adc
es
adc
test
mov
pop
push
daa
xor
adc
outs
inc
and
push
popa
pop
sbb
add
(bad)
jo
inc
jnp
and
jecxz
jge
jecxz
xchg
jecxz
pushf
jecxz
arpl
pushf
outs
movs
jecxz
jecxz
mov
ret
daa
loopne
aas
mov
lahf
or
aam
add
test
ja
jecxz
in
and
adc
pavgw
mov
jecxz
sub
push
in
out
rol
femms
cs
xchg
push
jnp
cmp
and
and
push
(bad)
jg
mov
jbe
nop
xchg
ds
mov
sub
bswap
ins
adc
in
push
cvtps2pd
jb
sub
push
jb
jmp
lahf
or
outs
popf
jmp
out
and
outs
clc
icebp
outs
pop
movs
mov
les
mov
mov
xchg
in
scas
popf
in
cmp
dec
jmp
loope
in
push
in
push
das
add
pop
mov
cmps
push
pushf
add
mov
inc
add
pop
enter
scas
and
in
bnd
loope
jb
repnz
in
push
in
adc
push
pop
sub
jg
lds
nop
xchg
pop
repz
adc
cmps
in
test
cmp
repz
add
jbe
daa
mov
xor
popf
in
in
jno
das
jg
in
mov
dec
stos
push
call
mov
das
inc
cmp
inc
hlt
jmp
hlt
cmp
out
(bad)
xchg
or
loopne
call
in
xor
addr16
or
push
cmc
addr16
mov
clc
hlt
call
dec
sub
xor
addr16
daa
in
jo
out
xor
dec
and
cmp
cmc
xchg
cmc
cmp
cdq
add
jbe
ror
cmp
scas
(bad)
dec
cmps
pusha
scas
push
lods
test
add
dec
push
test
jb
xor
pushf
nop
pop
mov
pop
mov
test
push
push
mov
in
fmul
cmp
cmp
in
hlt
je
dec
enter
mov
add
cmp
xor
push
(bad)
test
dec
dec
enter
pop
out
xchg
adc
das
out
adc
cmp
out
dec
mov
or
mov
mov
pop
clc
dec
clc
xchg
or
pop
out
addr16
mov
xchg
addr16
out
push
loopne
call
clc
push
and
add
mov
xchg
mov
mov
pop
add
jno
cmps
(bad)
stc
dec
js
inc
aaa
enter
out
cs
aaa
jecxz
jmp
repz
sub
xchg
or
das
aas
loop
clts
call
call
push
call
mov
mov
xor
push
(bad)
dec
sbb
sub
pop
loopne
rol
cli
mov
dec
call
sbb
push
jmp
cld
test
(bad)
ins
call
mov
mov
xchg
xchg
sti
xchg
rcl
cmp
mov
dec
cmps
call
scas
xchg
pop
jo
test
scas
jmp
pop
loop
add
out
xchg
pop
(bad)
movlps
jmp
ins
mov
popf
fcomp
mov
daa
pusha
jp
xchg
dec
les
outs
mov
xchg
js
cld
jg
cld
loope
ret
or
imul
jmp
dec
jno
xor
jmp
inc
dec
jmp
pusha
cmps
fs
nop
jb
xchg
jmp
cmp
rcr
in
jmp
ret
add
jae
pop
xor
add
push
std
xlat
clc
std
lahf
and
(bad)
std
push
pop
mov
cmp
cmp
std
push
outs
adc
or
cmp
xor
jmp
sub
or
(bad)
xchg
pop
jb
or
xlat
pusha
jmp
push
daa
fnsave
jnp
das
add
fstp
pop
cmp
test
fwait
mov
loope
pop
ror
out
enter
pop
leave
pop
sub
cwde
push
clc
and
dec
inc
sub
cmp
add
(bad)
rcr
xlat
(bad)
fild
pop
fldpi
xchg
inc
sub
loope
jg
jmp
xchg
adc
xor
(bad)
out
in
mov
test
jb
in
xlat
retf
aas
fisttp
push
call
lock
push
ja
into
fdiv
les
iret
pop
enter
sub
pop
add
nop
cmp
add
add
(bad)
xchg
cmp
mov
xorps
(bad)
jmp
in
xchg
test
push
add
pushf
add
push
rol
adc
inc
scas
stc
sar
add
js
push
inc
push
push
cmp
push
add
test
scas
icebp
in
xor
mov
daa
inc
dec
shl
push
mov
add
jb
loop
add
clc
add
adc
addr16
lock
add
push
lock
cmp
add
push
fcom
movs
add
add
in
cmp
pushf
les
in
pop
in
push
inc
in
jb
fisub
dec
outs
imul
dec
add
sub
adc
push
je
add
add
loop
sbb
leave
test
sar
scas
clc
inc
movs
in
or
add
xchg
(bad)
mov
add
jbe
cmp
or
fist
cmps
jl
call
push
cs
dec
cs
fadd
or
leave
xor
pusha
push
enter
mov
jmp
add
fistp
and
scas
jbe
cmps
(bad)
mov
xor
dec
cmp
cdq
xchg
adc
sub
xor
js
mov
mov
jp
sub
out
mov
pop
inc
mov
ret
ror
push
fadd
mov
mov
cmp
ror
pusha
pop
addr16
repnz
xchg
sbb
(bad)
jecxz
or
pop
lock
daa
lock
jecxz
outs
in
pop
mov
inc
into
daa
dec
lock
lock
mov
fucomi
jae
jnp
sbb
pusha
or
daa
mov
jbe
bswap
xlat
cmps
mov
or
pop
mov
cli
pop
icebp
(bad)
out
popf
sbb
mov
inc
cmp
or
outs
lock
outs
xchg
xchg
jg
xchg
pusha
push
mov
popa
or
cmp
movs
lock
pushf
or
cs
mov
idiv
inc
mov
fcom
mov
cs
retf
icebp
dec
push
xlat
out
inc
mov
mov
push
xchg
das
icebp
push
jecxz
out
jmp
repz
icebp
idiv
cmps
dec
dec
jo
adc
dec
or
and
or
cmp
pushf
sbb
repnz
es
dec
mov
repnz
repnz
mov
addr16
bnd
dec
add
fisttp
xchg
or
ror
inc
or
or
call
fcom
outs
scas
call
pop
jo
cmps
mov
inc
dec
cs
bt
dec
ror
jb
push
sbb
cmp
test
lods
or
leave
inc
xor
dec
std
add
pushf
cmps
or
cmps
adc
enter
repz
repz
sbb
adc
xchg
mov
les
pop
xor
out
adc
nop
inc
add
push
fwait
add
mov
xor
repz
outs
pop
jo
repz
repz
xchg
pop
cdq
repz
mov
xchg
outs
cmp
int3
in
das
or
push
iret
adc
(bad)
repz
clc
inc
xchg
push
hlt
femms
push
nop
adc
adc
adc
out
adc
inc
call
push
out
mov
movs
or
inc
pop
out
hlt
out
inc
hlt
mov
adc
mov
hlt
out
push
hlt
mov
ret
jb
inc
jp
xor
enter
cmps
inc
adc
adc
or
push
xor
mov
mov
shr
js
cmps
lods
out
hlt
push
xchg
inc
add
push
cld
test
mov
hlt
out
int
adc
and
jg
ja
adc
bound
popf
mov
jb
inc
sysenter
emms
ror
out
pop
add
and
(bad)
cmc
pop
adc
mov
jb
cmc
cmp
inc
cmc
dec
cmc
loop
pushf
or
stos
loop
cmps
pop
je
dec
dec
adc
ins
adc
adc
adc
and
cmc
pop
jl
test
pop
inc
out
push
cmc
cmc
fild
push
call
int
cmp
setl
xor
fstp
loopne
jbe
addr16
mov
adc
cli
mov
push
add
(bad)
loopne
sbb
adc
or
outs
lods
dec
lock
pop
sbb
(bad)
jno
or
and
(bad)
div
test
xchg
je
pop
in
sbb
sbb
dec
or
pushf
(bad)
or
imul
adc
loopne
data16
xlat
js
jbe
jle
mov
neg
inc
lds
test
int3
addr16
addr16
imul
pushf
sbb
mov
and
sbb
xchg
jo
push
cmps
adc
sub
(bad)
dec
sub
(bad)
jmp
(bad)
sbb
pop
and
cmp
jae
aaa
sub
xor
popf
out
jne
inc
cmovl
gs
push
xchg
pop
aas
shl
in
or
xchg
pcmpgtd
ror
pop
rcl
enter
scas
jo
mov
push
inc
loopne
cmps
call
neg
mov
cs
test
leave
inc
push
mov
inc
jb
je
xchg
mov
adc
out
fld
in
mov
lock
(bad)
sti
xchg
adc
(bad)
or
dec
movs
adc
sbb
shl
mov
push
pop
and
mov
stc
xor
cmp
mov
inc
cmovp
stc
(bad)
nop
jb
stc
gs
ins
stc
xchg
inc
call
cmps
or
call
xlat
mov
ror
dec
cs
sub
les
mov
(bad)
pop
int3
sub
out
or
mov
push
ja
pop
jne
mov
(bad)
or
das
mov
or
into
addr16
stc
(bad)
fdivp
ret
or
dec
add
xchg
rcr
jo
addr16
dec
add
ss
scas
(bad)
dec
fcom
ds
sbb
das
and
jbe
adc
xor
cmp
in
in
inc
dec
push
pop
in
in
popa
imul
or
lods
push
icebp
mov
outs
mov
and
push
and
pushw
es
daa
aas
jmp
sub
pop
das
sub
cmp
out
iret
test
dec
in
test
out
cmp
dec
jno
sbb
fcomp
das
shl
fsubr
add
outs
mov
shr
out
les
sti
out
sub
mov
out
and
mov
aaa
lock
ss
xor
pop
(bad)
sub
sti
iret
dec
sti
out
push
sti
das
loopne
cmps
cmp
out
addr16
push
jb
fwait
loop
pop
pop
jge
dec
mov
pop
dec
add
add
das
(bad)
or
das
out
pop
and
frstpm(287
icebp
sti
cld
pop
add
push
pop
fdivr
sbb
das
and
sub
push
xor
xor
push
cmp
push
mov
daa
iret
and
out
jno
mov
mov
cld
xchg
push
mov
test
push
cld
out
test
mov
jmp
outs
movsx
bswap
pop
aad
pop
or
xor
dec
outs
mov
push
xor
add
jp
xor
std
dec
pop
test
std
pop
das
cmp
jmp
push
in
scas
cmps
ds
sbb
mov
add
jecxz
ret
push
and
lock
int3
inc
addr16
ja
ss
mov
pop
std
xchg
outs
in
in
ja
xchg
xchg
lahf
cmps
scas
dec
out
in
mov
cmp
iret
std
ja
std
xchg
das
out
mov
mov
std
xchg
dec
cmp
movs
jg
inc
sub
sbb
(bad)
es
sbb
pop
(bad)
pop
das
pop
push
or
(bad)
inc
inc
add
cmp
sbb
mov
ret
add
jl
popa
(bad)
scas
imul
(bad)
xlat
cmp
push
pop
mov
aaa
xchg
setnp
cmps
dec
int3
cmp
pop
inc
outs
push
sbb
fist
aaa
sbb
cmp
sbb
int3
(bad)
out
mov
(bad)
ja
ja
(bad)
mov
std
outs
and
call
mov
dec
inc
pop
pop
call
jmp
daa
nop
xor
push
(bad)
cld
sbb
inc
mov
inc
push
adc
(bad)
push
pop
packsswb
imul
(bad)
(bad)
jnp
daa
ror
cmp
mov
xchg
add
fwait
pop
fwait
aas
fwait
pop
outs
xchg
dec
jo
mov
(bad)
jge
fild
pop
(bad)
push
shl
mov
loope
dec
jmp
dec
scas
icebp
(bad)
stc
inc
add
or
dec
outs
movups
scas
xor
sub
and
and
sahf
jo
cmp
arpl
imul
loopne
es
es
cmp
xor
push
test
pop
xor
jbe
lahf
aam
xchg
push
or
fadd
jne
aam
pop
inc
call
cmp
push
and
sub
push
inc
pop
in
inc
shl
push
pusha
sub
lea
or
mov
lea
push
test
lock
add
mov
daa
and
jg
push
loop
das
xchg
dec
add
out
shl
add
or
xlat
lods
bound
daa
loope
pop
ins
loopne
test
dec
jne
cmp
jae
cmp
add
ret
dec
dec
and
pop
and
(bad)
retf
add
(bad)
daa
cdq
sub
inc
and
and
mov
dec
clc
or
dec
or
pop
push
and
daa
inc
stc
js
and
nop
xchg
dec
mov
add
ja
jnp
adc
pop
in
xchg
fcmovne
mov
inc
xor
xchg
add
add
jb
cmps
loopne
add
pushf
push
dec
or
pop
enter
shl
sbb
sub
vmwrite
or
jg
das
cdq
push
sub
add
fstp
xchg
sbb
pop
xlat
add
shl
ja
mov
xchg
xchg
pushf
mov
and
inc
add
outs
js
imul
jmp
xchg
cmp
movs
fisttp
pop
in
adc
loopne
add
aaa
lods
ja
push
dec
dec
jo
adc
sbb
push
and
pushf
pushf
pop
mov
xchg
push
mov
daa
not
xchg
daa
iret
and
xchg
cdq
das
pop
mov
or
mov
mov
ja
pxor
ja
sar
push
addr16
dec
sub
adc
scas
sbb
and
sub
ss
pop
pop
xor
cmp
inc
pop
ja
(bad)
int
dec
push
sahf
push
das
pop
push
sti
(bad)
fstp
push
push
jb
xchg
mov
xor
(bad)
cmp
popf
pop
jo
cmp
mov
sbb
sbb
inc
cmp
ror
sub
inc
or
mov
xchg
push
aad
jl
outs
int3
lahf
mov
add
mov
inc
ror
into
lock
aas
loopne
das
call
pop
ins
hlt
xlat
or
ja
sub
push
add
leave
inc
push
nop
pop
mov
mov
cmp
loopne
or
jl
outs
mov
sbb
or
movs
or
lods
push
shr
(bad)
mov
fidivr
cmp
mov
repnz
lock
add
or
(bad)
daa
out
or
or
(bad)
repnz
or
xchg
or
dec
or
(bad)
jl
sahf
pushf
fmul
mov
ins
fcom
mov
mov
dec
iret
sbb
dec
sbb
movs
btc
jo
icebp
imul
push
mov
push
sub
cmp
mov
ja
or
or
rcl
push
push
iret
pop
jne
in
pusha
punpckhbw
jnp
cmp
out
or
push
pushf
mov
or
(bad)
push
(bad)
cmps
or
outs
test
lahf
mov
jbe
cmp
icebp
loop
outs
mov
or
sub
xchg
aas
jmp
push
or
xor
push
add
loopne
cmp
cs
inc
or
scas
push
popa
in
dec
pop
aaa
push
or
jb
or
pop
or
or
or
cmps
inc
setb
jmp
iret
inc
dec
enter
jmp
das
jmp
push
mov
loopne
sbb
add
or
mov
shr
mov
push
sbb
das
add
jo
iret
clc
or
add
or
sub
xor
das
xlat
js
loopne
xchg
or
or
addr16
aas
scas
jecxz
cmps
mov
loopne
add
push
out
xor
jb
jg
push
(bad)
outs
fimul
out
or
test
dec
mov
clc
test
or
push
dec
xor
add
or
xor
cmp
in
ins
in
inc
push
dec
push
push
pop
pop
push
call
push
push
dec
cmp
pushf
mov
xchg
xchg
xor
mov
mov
jnp
jbe
or
pop
or
xchg
sub
movs
aaa
fdiv
push
rcl
or
push
push
setnp
mov
(bad)
pop
xor
loope
inc
lds
pop
and
pushf
jg
maxps
add
or
cmps
pop
push
jg
mov
clc
jmp
inc
add
aaa
or
mul
push
xor
xor
fwait
aaa
mov
stos
maskmovq
div
pmaxub
pop
das
ror
sbb
das
pavgw
sbb
pop
lock
adc
mov
pop
xchg
sbb
ja
inc
jae
cwde
mov
sbb
lds
scas
mov
push
xor
loopne
adc
cmps
int
daa
cmp
add
(bad)
std
mov
xlat
movs
mov
push
ror
adc
mov
xlat
adc
nop
xchg
adc
xchg
(bad)
jo
adc
adc
pop
clc
bound
mov
push
ret
xchg
add
xor
jbe
mov
addr16
pop
cmps
adc
repnz
outs
mov
shr
mov
(bad)
jg
shl
cmp
out
rcl
cmp
sub
mov
sbb
dec
in
add
and
(bad)
sub
jg
rol
ret
xchg
test
addr16
dec
cmp
dec
adc
sahf
pushf
pushf
outs
ja
adc
mov
shl
adc
mov
jb
sti
lock
shr
and
daa
and
jg
addr16
cmp
add
shr
adc
clc
inc
adc
mov
pushf
cmp
cwde
dec
icebp
in
das
lods
cmp
cmp
mov
xchg
lahf
cmps
pop
fiadd
jl
adc
mov
sub
mov
fistp
push
pop
outs
daa
mov
scas
repnz
pop
adc
daa
sbb
adc
sub
and
ss
sub
rcl
iret
js
shr
mov
nop
aas
jnp
(bad)
pop
out
push
cmp
jbe
leave
inc
mov
cmps
ret
xchg
mov
leave
in
retf
xlat
rcr
adc
ret
clc
xchg
int3
inc
add
xchg
test
or
push
adc
xchg
test
sete
pop
repnz
sbb
in
cmp
adc
xor
(bad)
cmp
sub
cmp
mov
push
adc
jo
adc
js
push
loope
adc
adc
das
push
rol
pushf
cmp
in
lods
cmp
jbe
inc
out
pushf
scas
movs
out
in
(bad)
jo
lods
pop
mov
movsx
pop
inc
cmp
in
or
ja
pop
cmc
cmps
push
das
mov
push
push
dec
mov
outs
adc
cmovno
sbb
ins
(bad)
mov
leave
mov
xor
cmp
inc
cmp
xchg
aas
icebp
push
push
jg
push
ins
adc
cmp
nop
inc
aaa
dec
or
out
test
int3
(bad)
xchg
out
pop
fcmovne
sub
sbb
pop
and
sub
pop
fdivr
ret
xor
jg
pop
out
pop
add
add
jg
pop
xchg
addr16
push
push
addr16
add
pusha
(bad)
ds
adc
cmp
fisubr
daa
js
cmp
push
mov
ds
mov
mov
addr16
pop
rcr
outs
rcl
dec
fucomi
mov
cmps
jp
pop
pop
jmp
jecxz
mov
aas
iret
int
data16
push
sbb
sbb
sbb
mov
sbb
cmps
mov
leave
inc
pop
popa
xchg
jno
jmp
sbb
jns
sbb
ror
fcomp
pop
mov
dec
and
cld
aas
outs
les
movs
sbb
pop
mov
mov
les
mov
xor
cmp
out
cmp
and
pusha
inc
aas
dec
inc
push
inc
ret
and
xchg
rol
fs
or
sbb
mov
mov
das
dec
dec
push
pusha
or
inc
inc
shl
in
xchg
fstp
nop
dec
pushf
call
sbb
test
call
mov
mov
aas
repz
mov
into
jo
inc
rol
cwde
inc
cmps
cwde
cwde
fisub
in
lahf
hlt
sbb
cld
pushf
loopne
das
(bad)
sbb
sbb
or
pop
sbb
inc
nop
aaa
ja
div
xchg
dec
sbb
push
pusha
aas
fstp
dec
mov
pop
imul
mov
(bad)
jbe
sbb
out
das
xchg
cpuid
sbb
cmp
adc
push
sub
ret
push
adc
aas
das
adc
fnstenv
mov
pop
fnstcw
nop/reserved
ror
icebp
out
sbb
sbb
pop
daa
cmp
push
sbb
inc
or
add
mov
call
(bad)
jmp
ja
inc
push
aaa
mov
or
push
(bad)
cs
mov
mov
pop
out
sbb
sbb
loopne
adc
inc
wrmsr
inc
retf
lods
mov
sbb
mov
cmp
inc
sbb
dec
pop
push
sbb
cmp
cmp
sbb
pushf
loop
mov
jnp
cmps
sbb
cmp
out
pop
mov
(bad)
iret
out
pop
fistp
rcr
add
add
sub
outs
pop
sbb
sbb
pop
and
inc
push
and
inc
daa
js
adc
sub
outs
mov
shl
iret
xchg
out
call
dec
cmps
aam
fild
cmps
fnsave
add
stos
push
das
push
push
push
mov
jb
inc
ds
inc
push
dec
push
xchg
ss
in
ss
pop
pop
pcmpgtd
aad
mov
pop
jbe
pop
mov
mov
push
arpl
ja
push
push
jae
lea
jecxz
mov
lds
aad
push
repz
scas
das
pop
inc
cmps
cmp
pop
loopne
xchg
adc
pop
pop
gs
fsub
fwait
aas
ins
pop
jne
iret
jge
test
fsub
pushf
(bad)
pop
xchg
pop
aaa
mov
mov
xlat
(bad)
int3
mov
ret
fisttp
pop
fcomp
aaa
in
in
pop
pop
adc
daa
cmp
pop
out
and
test
and
inc
addr16
pop
inc
push
rcl
dec
addr16
add
jp
dec
xlat
sub
addr16
dec
mov
arpl
fisub
add
and
ins
xor
and
mov
mov
and
pushf
fsubr
pop
imul
xchg
inc
and
push
out
dec
ret
xor
iret
dec
push
push
sbb
pop
and
and
lock
mov
and
test
xchg
cmp
cmp
loope
hlt
dec
sub
mov
cmp
add
ficom
and
popf
push
(bad)
and
imul
lahf
fcom
dec
dec
lahf
cmps
scas
and
mov
addr16
aas
jb
scas
je
and
and
or
out
outs
pusha
dec
aas
and
and
and
and
jb
add
and
xor
cmp
ss
mov
xlat
pop
leave
mov
xchg
push
int3
lds
mov
and
clc
bound
jns
ja
and
addr16
inc
sub
dec
scas
addr16
and
dec
pop
push
aam
adc
inc
mov
or
loopne
push
lods
inc
cmovle
mov
adc
xchg
jno
cmps
mov
xchg
and
pop
mov
and
and
cmp
xchg
sbb
add
dec
pusha
dec
mov
mov
aam
fsub
mov
(bad)
jmp
dec
cmp
pushf
xor
and
xchg
adc
scas
jl
adc
add
dec
loop
inc
outs
inc
or
das
cmp
cmp
mov
and
xor
cmp
dec
and
pop
das
pusha
and
or
lea
push
mov
js
push
xchg
and
jo
and
push
and
test
dec
(bad)
daa
js
(bad)
xor
and
xlat
cmps
and
(bad)
scas
xlat
pop
fwait
call
shufps
and
and
and
dec
inc
push
call
ret
cmp
jo
rcr
pop
or
cmps
fadd
mov
icebp
(bad)
and
inc
add
out
or
adc
loopne
outs
sbb
and
sub
dec
sti
add
xor
iret
cmp
(bad)
or
mov
outs
dec
es
es
es
dec
push
push
loop
add
jl
dec
sbb
es
pushf
ja
cwde
loope
movs
pop
lods
fbstp
fistp
test
mov
cmps
dec
pop
xor
pop
push
or
inc
mov
loop
push
vmread
iret
bound
enter
sub
psrld
rcl
sub
xchg
outs
rcl
aas
sbb
push
cli
outs
daa
push
outs
ja
jle
xchg
xor
daa
xchg
inc
(bad)
daa
cmp
pushf
mov
sub
sub
call
cmp
mov
push
ja
daa
pusha
cmp
inc
das
jbe
rol
retf
out
das
cmp
dec
xor
addr16
dec
add
addr16
jge
mov
inc
push
iret
jbe
cmp
cmps
sbb
sub
sar
xchg
fild
cmps
or
pop
adc
daa
cmp
sub
sbb
outs
jmp
sub
sub
xor
lock
sub
mov
mov
out
push
dec
dec
subps
inc
mov
scas
sub
iret
inc
std
test
jg
sub
mul
lods
pop
add
add
ror
cs
mov
mov
int
mov
jo
dec
jnp
cmp
cmps
push
pop
into
lock
push
mov
push
cmps
or
add
pushf
push
cmps
mov
xor
in
push
sub
repz
pop
ss
fidiv
pop
lar
push
sub
pushf
loope
cmps
aaa
sub
mov
in
sub
xlat
out
xor
xor
in
in
pop
call
mov
pop
and
add
pushf
loop
sub
push
and
pop
popa
xor
inc
fmul
nop
push
call
dec
inc
stos
inc
xor
dec
das
adc
and
push
mov
loop
ret
pmullw
add
paddusw
xchg
sub
in
sub
sub
jnp
bndstx
(bad)
xor
(bad)
dec
sub
out
add
pop
add
dec
in
les
cmp
ins
cmp
or
aas
mov
outs
fcomip
push
mov
dec
pop
mov
add
add
jae
(bad)
adc
pop
pop
add
dec
es
sbb
pusha
xchg
ja
fdiv
or
mov
sub
(bad)
je
xlat
lock
scas
sub
mov
mov
mov
out
mov
adc
fimul
pandn
out
out
pusha
ins
scas
sbb
sub
pop
xlat
push
(bad)
push
cmps
iret
sub
aas
jge
pop
in
push
ud0
xchg
sub
lds
pop
sub
mov
and
xchg
pop
cmp
dec
mov
pop
test
sbb
call
xor
add
fcomp
cmp
adc
outs
out
sub
rsqrtps
mov
sub
dec
mov
push
(bad)
add
(bad)
sub
jp
cmps
sub
out
push
mov
loope
pop
out
pop
(bad)
fcomp
add
sub
aas
lds
push
mov
xchg
or
rcr
adc
cwde
loope
inc
not
neg
fwait
push
lahf
cwde
pop
mul
out
jmp
pop
or
es
pop
xor
shl
clc
add
xor
xchg
or
sub
popf
loop
(bad)
sbb
and
sub
mov
cmp
pop
inc
sub
pop
(bad)
rol
push
sub
pop
sub
cmp
pusha
sub
mov
mov
inc
out
lock
push
enter
push
adc
xchg
pop
push
mov
test
mov
jp
pop
outs
mov
aaa
stos
sub
loope
ret
fidiv
jo
inc
pop
out
fsubr
in
in
push
stos
hlt
inc
xlat
fiadd
jo
push
cmp
mov
inc
sbb
add
(bad)
pop
sub
pop
sub
pop
cmp
add
sub
les
cmp
aas
sub
dec
sub
aaa
push
sub
sub
jb
out
mov
leave
leave
adc
adc
jb
cmp
enter
inc
dec
fcomp
pop
sbb
inc
xchg
outs
jo
mov
inc
ror
daa
outs
sbb
(bad)
xlat
loope
jmp
loope
dec
outs
stc
inc
add
dec
add
mov
adc
xlat
or
jb
sub
pop
push
rcl
pop
xlat
adc
pop
push
inc
add
add
pop
pop
xlat
xor
cmp
inc
cmovge
enter
push
xlat
pop
cs
(bad)
iret
test
cmp
xlat
xchg
popf
shr
cmp
cs
mov
aas
adc
xchg
adc
adc
loope
outs
pusha
(bad)
ds
mov
add
enter
xchg
test
or
push
jb
pusha
xchg
pop
outs
xor
scas
pop
mov
aaa
push
outs
fidiv
loope
pop
xchg
out
xchg
das
loope
xor
push
das
je
xor
ucomiss
xor
ss
cmps
ds
xchg
xlat
cmp
pop
scas
setns
lock
jle
xchg
fcmovne
mov
xchg
outs
movd
adc
scas
push
xchg
cmc
sub
inc
inc
popa
call
mov
xor
inc
in
mov
inc
aam
dec
ret
ror
(bad)
retf
ja
add
jbe
pand
ret
lods
(bad)
mov
psubq
sub
or
ja
jae
jb
xor
inc
dec
push
out
ret
subps
jbe
mov
(bad)
addr16
vmread
dec
pop
je
(bad)
lahf
mov
xchg
xor
xor
test
pop
sbb
test
je
or
xchg
bound
pusha
bound
mov
or
pop
aaa
imul
xor
push
xor
xlat
retf
add
dec
loopne
aaa
jmp
out
lds
add
aaa
or
js
push
imul
loop
cmps
aaa
and
aaa
sub
je
cmp
cmps
add
test
mov
lock
arpl
and
pop
xchg
arpl
imul
jae
pop
jnp
add
mov
pop
fisub
jb
mov
test
test
fs
verr
sbb
xor
add
pop
push
or
ror
scas
xor
mov
add
xlat
addr16
adc
mov
in
pop
hlt
paddd
mov
pop
adc
sbb
sub
jg
xor
rcl
xor
inc
xor
dec
or
xchg
popa
cmp
leave
sbb
xor
out
gs
mov
lds
mov
rol
clc
mov
xchg
xor
adc
je
jl
push
mov
mov
jg
pop
pushf
xor
fild
shrd
fsubr
bsf
fisub
into
xor
xor
xor
das
adc
sbb
daa
mov
or
and
sub
xor
in
adc
cmp
das
aaa
xlat
dec
mov
fistp
inc
fucomp
add
addr16
outs
push
cmp
ja
jg
jle
xor
and
jg
not
push
and
cmps
xor
and
cmp
sub
int
iret
aad
and
push
lahf
xor
in
in
mov
lahf
cmc
xor
std
syscall
xor
cld
test
xlat
or
pop
and
or
cmps
gs
data16
inc
or
pop
mov
mov
je
pop
mov
xor
inc
xor
xor
jo
mov
xor
data16
add
das
jbe
jle
sbb
and
pop
add
jno
mov
xor
sahf
out
jb
pop
push
addr16
dec
xlat
push
mov
xor
adc
imul
out
leave
rol
loope
jp
add
jmp
addr16
icebp
xor
stc
xor
add
outs
and
mov
xor
cmp
imul
sub
jo
cmp
cmpeqps
push
adc
imul
mov
daa
cwde
jne
inc
movs
imul
xor
xor
cmp
stos
scas
cmps
xor
mov
(bad)
mov
or
mov
rcl
bound
js
aam
add
lods
push
js
outs
adc
mov
push
loope
jmp
adc
icebp
xor
xchg
adc
adc
xlat
lock
mov
cmp
pop
inc
sub
out
cmp
adc
jo
xlat
movs
jns
jp
daa
cmp
cwde
imul
pushf
xchg
push
imul
cmp
mov
ins
ss
pushf
pushf
pushf
mov
xchg
jb
jb
pushf
movs
lods
inc
pop
js
ss
fs
out
ins
cmps
adc
ss
(bad)
out
push
push
outs
mov
das
test
scas
pop
mov
push
push
mov
jle
stos
dec
push
xchg
das
adc
fmul
and
xchg
cmp
cmp
jecxz
push
add
shl
add
pushf
jmp
and
js
aas
xchg
ins
jg
cmp
inc
mov
cmp
es
mov
dec
cmp
pop
xchg
and
cmp
cmp
popf
jmp
jl
test
aas
mov
addr16
popa
cmp
test
mov
push
arpl
cmp
lods
outs
das
outs
mov
sbb
pop
call
or
iret
outs
outs
jmp
cmp
cmp
and
pop
and
push
jl
xor
fistp
cmp
lds
jae
lahf
xchg
mov
inc
movq
jecxz
dec
enter
lea
xchg
jo
jo
test
inc
cmp
xchg
or
js
jo
stc
cmp
rol
cmp
daa
adc
rol
daa
and
cmps
sub
xor
mov
(bad)
dec
cmp
push
test
add
inc
push
cmp
jnp
(bad)
pop
cmp
cmp
push
ret
js
cmp
mov
movs
cmp
dec
lds
pop
sub
jg
dec
enter
push
xchg
stos
adc
ret
push
mov
inc
pop
push
inc
(bad)
call
xor
cmps
or
pop
adc
jo
xchg
jg
cmp
and
jg
cmp
fild
das
cmp
push
xchg
cmp
mov
jg
cmp
cmp
cmp
(bad)
xchg
pop
ss
das
fmul
pop
mov
das
jl
loope
jmp
cdq
jp
pop
and
aaa
sbb
sbb
ja
pop
test
cmpxchg
(bad)
fcmovnb
pop
int3
cmp
aam
fdivr
int3
icebp
add
xchg
mov
daa
aaa
pop
cld
add
das
or
dec
adc
jp
mov
and
das
pop
xchg
dec
shr
das
xor
mov
cmp
das
inc
cmp
les
dec
dec
cmp
xchg
mov
(bad)
test
adc
je
lahf
xlat
test
das
fdiv
lahf
enter
test
out
cmp
ret
pop
cwde
xlat
cmp
cmp
pushf
pop
int3
jno
cmp
movs
cmp
lods
out
sbb
jno
cmp
mov
mov
aam
enter
(bad)
lahf
sar
into
lock
in
mov
xor
lahf
lods
cmp
xchg
shl
dec
push
adc
out
(bad)
mov
push
in
pop
adc
xchg
pop
pop
cmp
enter
daa
cmp
sbb
jb
aas
cmp
push
setnp
xor
cmp
jg
lahf
push
mov
iret
(bad)
iret
adc
xchg
je
jl
cmp
cmps
push
or
xor
pop
scas
cmp
xor
fwait
ja
test
jbe
push
jbe
clc
add
mov
inc
sbb
addr16
push
pop
adc
pop
add
cmp
or
add
shl
ret
add
jmp
add
mov
xchg
ror
out
adc
mov
sbb
sbb
outs
and
lahf
sub
in
ds
and
pop
inc
cmovge
cmps
loopne
sbb
aas
sbb
ins
outs
jne
jge
test
lock
stos
ds
rol
mov
sub
mov
mov
cmp
push
xchg
js
add
ds
mov
and
out
ds
or
retf
add
lods
js
and
(bad)
js
push
add
aas
xchg
sbb
addr16
nop
adc
xchg
aas
xor
push
call
iret
push
cmp
gs
test
push
and
pop
outs
adc
gs
aas
xor
jae
addr16
ja
lods
pop
jo
push
mov
push
out
add
aas
jg
aas
nop
pop
rol
pop
rol
sar
push
jp
xor
jns
rol
fsub
fdivr
call
enter
call
(bad)
jnp
aas
push
jp
movs
jp
add
dec
dec
or
push
jae
bndstx
inc
lahf
sub
rdpmc
push
inc
imul
push
mulps
aas
popa
inc
fild
pushf
or
inc
out
(bad)
add
xlat
push
hlt
out
sbb
out
cwde
inc
adc
jmp
cmps
mov
lahf
das
mov
cmps
out
xchg
mov
jl
rcl
out
iret
inc
push
sbb
cmp
mov
ds
inc
(bad)
out
out
outs
adc
mov
ins
mov
cmp
outs
add
test
jge
je
push
aad
pop
mov
outs
add
js
jl
dec
inc
mov
inc
test
ret
outs
jo
push
pcmpeqd
jle
xchg
pushf
sub
das
mov
paddusb
mov
lahf
loopne
lods
inc
dec
les
outs
adc
iret
je
cmps
mov
mov
dec
mov
inc
lahf
icebp
mov
psubusw
leave
add
or
daa
mov
jle
ret
fisttp
dec
add
fiadd
fdivr
or
xor
jle
add
and
cmp
push
xchg
cmp
inc
inc
dec
inc
cwde
sub
inc
mov
add
es
cmp
jg
pop
jg
and
cmps
xor
xor
inc
cmp
daa
sbb
inc
fist
dec
jno
inc
fild
cwde
dec
mov
inc
push
inc
dec
mov
int3
inc
push
inc
mov
inc
pop
in
inc
inc
mov
out
inc
aas
jecxz
inc
lahf
adc
push
inc
and
rol
inc
out
repnz
aas
inc
inc
push
adc
call
push
pop
inc
adc
stc
out
inc
ins
inc
js
add
and
cmps
mov
jo
or
fdiv
mul
add
cmp
and
push
and
pop
mov
inc
fisttp
fdiv
jo
pop
jmp
or
inc
push
sbb
adc
call
loopne
icebp
push
das
push
push
xor
inc
push
mov
stos
scas
xor
(bad)
xor
ds
ss
mov
push
push
aaa
pop
inc
addr16
(bad)
or
inc
pop
add
xchg
pop
push
aaa
mov
outs
push
push
pop
push
mov
mov
mov
outs
lahf
loop
xchg
jo
inc
jne
inc
jg
scas
xchg
sbb
mov
inc
scas
lahf
pmaxub
xchg
cmps
scas
scas
mov
mov
cmp
xlat
inc
icebp
xchg
xchg
cmp
inc
xlat
pop
out
inc
inc
into
xor
inc
pop
inc
in
push
adc
scas
pop
inc
lea
jb
inc
daa
inc
das
inc
aaa
fsubp
js
das
aas
outs
inc
inc
scas
dec
pop
push
inc
jb
enter
inc
addr16
outs
inc
inc
mov
ja
jg
xchg
in
cmp
jg
inc
scas
lahf
inc
cmps
inc
mov
jb
inc
mov
mov
xchg
and
inc
xlat
inc
fild
(bad)
out
out
mov
jmp
fucom
push
pop
inc
push
aaa
femms
xchg
and
fdivr
pop
inc
scas
pop
inc
daa
inc
cmc
mov
mov
push
iret
loopne
cmp
push
cmp
push
cmp
sahf
shl
push
cmp
push
out
lock
aas
(bad)
jg
push
inc
jmp
xor
inc
dec
stos
(bad)
push
fisttp
mov
call
js
iret
loopne
inc
dec
dec
dec
dec
or
shl
push
dec
dec
dec
push
and
dec
dec
dec
(bad)
jg
cmp
inc
push
outs
pusha
loope
cmp
jmp
push
xchg
test
push
sahf
ret
imul
push
push
pop
push
pop
xchg
lock
push
pop
pop
push
pop
pop
outs
cmp
cmp
pop
pop
inc
pop
rsqrtps
out
pop
bound
pusha
push
dec
fucomp
xchg
jb
(bad)
jp
push
addr16
push
arpl
push
call
mov
xchg
push
data16
pop
mov
push
push
push
jmp
das
retf
shr
rcr
jbe
outs
jbe
jmp
pop
push
jb
push
jae
mov
adc
adc
inc
jp
inc
push
ja
push
or
cs
stos
sub
jns
jnp
iret
repz
jp
jnp
push
mov
mov
push
lock
sar
cmp
sbb
push
cmp
cmp
mov
das
mov
push
xchg
push
sar
(bad)
repz
mov
push
push
mov
or
int
ds
fisttp
popf
test
in
in
xchg
ds
xchg
push
push
xchg
push
dec
aas
jmp
mov
or
xchg
fisttp
xchg
push
aas
sub
push
cdq
inc
push
call
fwait
es
dec
push
popf
xor
mov
pop
jmp
fisttp
gs
hlt
push
movs
out
movs
(bad)
outs
sbb
jbe
scas
mov
outs
ror
lock
adc
xlat
mov
call
rcr
or
adc
das
sub
mov
add
jl
pop
mov
addr16
xchg
jns
and
mov
xchg
dec
ja
and
lock
dec
ja
daa
mov
dec
pop
xchg
outs
cmps
xchg
push
jo
pop
push
mov
sbb
scas
and
pop
sub
outs
cdq
mov
pop
cmp
pop
in
ss
inc
dec
dec
dec
ja
outs
dec
jbe
cmps
loop
dec
xchg
loopne
mov
dec
fucomi
in
ret
out
xchg
mov
leave
xchg
inc
dec
pusha
sbb
inc
(bad)
out
and
shl
mov
mov
mov
fs
dec
dec
dec
mov
popa
dec
xchg
pop
test
stc
into
popa
dec
iret
imul
dec
push
add
dec
sub
nop
and
cmp
mov
dec
dec
es
cmps
scas
mov
mov
dec
mov
dec
lods
popf
pop
enter
das
jae
push
dec
daa
mov
mov
xor
test
sbb
dec
lock
not
mov
dec
adc
pop
outs
dec
fisttp
sub
xchg
inc
add
rcl
mov
jb
pop
pusha
iret
xadd
mov
(bad)
push
adc
inc
mov
les
dec
out
and
or
nop
outs
outs
sbb
mov
fisub
jle
aas
cmp
mov
sbb
sub
push
jmp
pop
xor
fidiv
out
out
dec
fsubp
js
push
test
clts
dec
lds
push
inc
jnp
pop
mov
dec
dec
es
lahf
cs
jae
aaa
inc
add
sti
xor
dec
scas
dec
dec
lahf
push
dec
push
das
or
ficomp
pop
pop
pusha
dec
ja
inc
sbb
sub
jno
lea
addr16
dec
je
bound
ror
cmps
pop
pop
cmps
dec
ja
dec
(bad)
dec
das
loope
dec
clc
(bad)
rcr
xor
out
cmp
or
cmovg
adc
mov
mov
dec
and
scas
sub
xor
dec
jne
dec
addr16
aaa
inc
dec
pushf
pop
mov
cmps
mov
jno
js
popf
pushf
or
pop
pop
mov
inc
xor
and
sbb
inc
dec
je
out
push
xor
jbe
push
xor
test
dec
test
pop
mov
inc
sub
daa
int3
es
pop
pop
pop
aam
fsub
mov
cs
in
xchg
paddb
push
jg
xchg
test
adc
addr16
daa
and
jo
popf
into
sub
inc
push
dec
mov
das
adc
fstp
push
pop
push
aas
push
push
pop
repnz
push
iret
pop
push
daa
arpl
and
shl
imul
loope
lds
xchg
push
pop
cdq
push
pop
fadd
mov
(bad)
mov
push
jg
push
leave
pop
aas
or
imul
xor
in
cld
lahf
add
mov
push
mov
add
inc
sub
push
mov
xchg
inc
sub
or
scas
daa
push
enter
pop
push
mov
push
aas
push
add
inc
pop
pop
xchg
call
jge
mov
mov
nop
cmp
cmp
pushf
push
push
hlt
xchg
sub
push
mov
push
(bad)
popf
mov
shl
xchg
addr16
inc
push
popf
pop
movs
push
scas
lods
push
in
add
(bad)
ror
vpmullw
and
push
in
in
psadbw
push
push
or
pop
cmps
popf
popf
mov
pop
push
pop
pop
push
call
fdivr
push
jg
push
push
das
ret
mov
ret
out
xchg
pop
loope
adc
inc
stos
(bad)
cmps
int
sbb
xchg
rol
dec
fisub
int
hlt
xchg
cmps
adc
loope
xor
xchg
cmps
pop
daa
addr16
sbb
push
fist
xchg
push
ja
daa
daa
mov
movq
daa
daa
test
ret
or
leave
cmps
ror
push
out
in
loope
not
sub
scas
std
push
iret
rcr
lea
dec
or
nop
jmp
ins
pop
add
es
push
test
rol
mov
inc
pop
test
inc
mov
xchg
inc
dec
js
rol
mov
xor
rol
mov
sub
push
fistp
and
pop
dec
inc
addr16
xchg
cmova
fld
cmp
jo
xchg
addr16
daa
pop
dec
iret
lds
push
mov
lock
jb
loopne
cwde
push
inc
or
add
push
xchg
jp
or
xchg
aaa
cmp
cwde
rcl
push
jg
push
adc
loopne
test
push
aaa
and
add
sub
push
in
addr16
jne
das
adc
push
or
cmp
push
mov
outs
(bad)
lock
mov
ret
int
fcom
xlat
fistp
pop
out
push
lahf
stc
push
clc
or
test
sbb
js
or
and
test
pop
cmp
inc
pop
push
push
add
in
add
pop
pop
addr16
pop
retf
pop
rcr
pop
fist
push
loopne
lock
cld
push
pop
pop
mov
adc
sbb
test
xor
ds
dec
push
add
in
add
push
pop
pop
push
pop
pop
rcr
gs
jo
js
pop
xchg
jo
push
pop
cdq
push
movs
fstp
add
scas
push
pop
mov
xchg
push
jbe
pop
pop
ror
push
jge
mov
gs
rcl
(bad)
mov
mov
push
aaa
into
mov
rcl
push
loope
xlat
in
push
dec
mov
das
push
pop
add
cld
aas
nop
push
inc
push
xchg
sbb
and
push
daa
nop
aas
daa
pusha
push
fistp
push
iret
setns
push
mov
or
pop
mov
mov
xchg
or
leave
rcl
fst
rcl
push
pop
jmp
adc
add
or
daa
jp
daa
adc
sbb
and
fild
sub
xor
cmp
pop
es
pop
push
cmp
fisttp
pop
das
pop
pop
push
fwait
pop
adc
in
xchg
cmps
mov
add
fs
out
scas
lahf
(bad)
pop
mov
xchg
pop
jg
xcrypt-ctr
cmps
pop
or
sub
iret
jmp
sub
pusha
pop
test
or
mov
div
pop
jo
jo
and
and
(bad)
popa
jg
daa
daa
lods
add
sbb
pushf
pop
push
loope
pop
(bad)
jecxz
add
ja
call
pop
sbb
push
inc
cmp
jo
pop
pop
sub
jg
(bad)
fld
cmp
inc
pop
push
das
pop
aas
mov
mov
pop
(bad)
jnp
clc
or
xchg
mov
xchg
in
ss
das
sahf
pop
jg
pop
scas
cmovle
rcr
pop
sbb
sar
rcr
fstp
mov
jo
loope
jmp
stc
add
(bad)
pop
or
jg
pop
ins
xor
sbb
dec
jg
pop
ror
add
pop
add
ror
pop
xchg
sahf
add
lahf
dec
pop
jg
pop
push
not
stos
push
rcr
ficom
test
neg
cmp
cmps
pop
(bad)
mov
pop
pop
cmps
loope
daa
cmp
pop
(bad)
ficomp
in
pop
mov
or
addr16
pop
scas
pop
inc
inc
cmps
cmp
pop
and
xor
inc
cmps
cwde
mov
cvtdq2ps
push
inc
js
xchg
adc
xchg
sbb
sub
xchg
in
call
fisttp
mov
outs
scas
pop
lea
daa
mov
loopne
bswap
add
loope
xlat
outs
or
out
out
repnz
cmp
inc
inc
ins
rcl
xchg
adc
ins
(bad)
enter
rcl
daa
pop
sub
or
adc
sahf
(bad)
and
mov
sahf
(bad)
sub
jns
and
xor
aas
cmovp
movs
push
ins
xor
push
pop
out
bound
outs
test
out
sbb
jo
pop
(bad)
cdq
das
movs
imul
mov
rcr
and
pop
out
icebp
pop
mov
cld
jg
push
pop
pop
pop
mov
movlps
sbb
test
inc
xor
pop
xlat
dec
or
or
push
pop
xlat
pop
pop
in
in
mov
pcmpeqw
out
add
pop
pop
and
pop
aaa
mov
ret
mov
pop
rol
dec
hlt
outs
(bad)
push
shl
test
and
mov
push
mov
loopne
or
pop
mov
test
out
or
mov
sbb
push
(bad)
je
adc
sub
cmp
dec
mov
pop
dec
andnps
mov
ins
fs
pop
push
jae
out
mov
push
pmulhuw
sub
pop
out
sahf
pop
cmps
pop
or
(bad)
ficomp
adc
mov
cmp
adc
fdivr
mov
aas
xor
scas
data16
inc
gs
mov
out
add
pop
pop
ja
pop
cdq
pmaddwd
adc
mov
or
mov
lock
jmp
add
neg
daa
in
rol
push
in
pop
mov
inc
sbb
mov
wrmsr
mov
sbb
adc
pop
push
jg
mov
in
pushf
lods
mov
add
sbb
popa
mov
inc
ret
pop
pusha
fcom
dec
cwde
mov
dec
xchg
fisub
loop
pushf
pusha
scas
movs
das
scas
pusha
ss
adc
pusha
dec
ret
fwait
jmp
pusha
scas
jecxz
pmaxub
(bad)
pop
and
sbb
mov
les
popa
mov
jo
mov
pop
xchg
pop
out
jae
pop
lahf
xcrypt-cfb
cmps
addr16
js
mov
pop
mov
mov
mov
xlat
inc
fistp
mov
pushf
(bad)
pxor
neg
inc
pop
outs
sysret
bound
punpckldq
add
pop
mov
getsec
pop
aas
pop
inc
paddsw
xor
push
pop
pop
movzx
add
pop
ja
jg
dec
sbb
jmp
xchg
out
mov
cmps
imul
pop
mov
mov
out
iret
pop
xlat
pandn
shl
jmp
div
inc
iret
in
movs
bound
sysexit
push
outs
xchg
arpl
daa
cmp
arpl
cmp
arpl
or
notrack
imul
jmp
push
stos
lea
add
repnz
cmps
xor
dec
adc
shl
adc
arpl
mov
cmp
lock
aaa
cmp
inc
mov
mov
cmps
(bad)
jl
add
daa
ins
cmps
push
adc
push
pop
pop
cmps
ja
gs
neg
arpl
rcl
in
jmp
xlat
fs
int
(bad)
fs
fs
fs
dec
fs
int3
dec
popf
scas
push
fs
mov
cwde
popf
jmp
fs
mov
out
data16
mov
cmp
cmp
cmp
mul
sub
scas
or
xchg
pop
gs
(bad)
int3
imul
sub
gs
dec
xor
xor
gs
je
das
lahf
outs
gs
jp
xlat
test
lahf
nop
gs
fwait
gs
jmp
mov
xchg
mov
sub
gs
cli
adc
call
gs
repz
ds
mov
push
repnz
xchg
pop
data16
sub
cmps
dec
cmc
xor
push
dec
data16
jno
pop
(bad)
push
xchg
popa
data16
ins
pop
je
xchg
data16
xchg
and
xchg
outs
stos
xchg
cbw
xchg
mov
jg
scas
push
mov
jmp
in
in
xchg
clc
enterw
addr16
jne
push
out
stos
pop
dec
mov
sbb
out
inc
xchg
cmp
out
push
es
mov
addr16
ss
cmp
addr16
push
pop
pop
addr16
jae
int
push
jle
jecxz
in
mov
addr16
pop
cmps
addr16
jae
fwait
inc
mov
shl
inc
cmp
push
push
jo
mov
pop
daa
push
sbb
icebp
push
pop
push
push
jge
xlat
mov
sub
xlat
add
cmp
push
jbe
xlat
or
imul
mov
iret
mov
dec
dec
outs
bswap
(bad)
loope
fwait
mov
neg
add
mov
xlat
or
or
xor
jo
push
addr16
aas
imul
and
in
pop
push
test
test
cdq
mov
lods
inc
or
lods
push
dec
daa
shr
or
or
mov
imul
sbb
mov
cwde
jecxz
outs
pop
shr
fldcw
loope
adc
and
call
jmp
iret
lods
lods
add
push
push
push
loopne
int3
aas
daa
push
das
push
fwait
loop
xchg
aaa
push
aas
jg
xor
lods
pop
mov
addr16
scas
pop
pusha
scas
dec
adc
cmp
bound
jnp
mov
push
mov
xchg
inc
dec
push
cmp
push
mov
rcl
push
call
jg
imul
adc
scas
dec
sbb
mov
aam
scas
daa
enter
jp
sahf
jo
lahf
js
pop
les
cmp
imul
imul
imul
pop
call
cmp
clc
out
xchg
xor
ds
push
jg
xor
aam
pop
mov
inc
push
xor
mov
mov
scas
xchg
test
jmp
scas
in
push
mov
enter
mov
cs
dec
pop
ja
lods
mov
int3
lods
xchg
test
push
mov
out
pop
jns
pushf
pop
ins
jl
mov
mov
aam
push
repnz
or
adc
push
dec
push
cdq
push
and
mov
inc
add
fcom
aaa
push
mov
ins
push
mov
loopne
int3
cmp
and
mov
sbb
dec
and
daa
sub
scas
cmp
bound
xchg
sub
xor
int3
repnz
mov
mov
mov
mov
xchg
pushf
dec
mov
jns
pushf
pop
mov
sub
in
leave
stos
in
stc
sub
push
mov
mov
pop
xor
xchg
sub
pushf
movs
sub
and
mov
aaa
leave
stos
in
xor
inc
push
leave
mov
add
mov
aad
leave
leave
and
push
loope
pop
iret
or
push
dec
outs
sbb
and
pop
into
in
sub
xor
cmp
adc
sub
js
adc
push
hlt
push
pop
push
pushf
aaa
dec
hlt
sbb
(bad)
mov
(bad)
jl
inc
ins
mov
mov
(bad)
test
inc
add
xchg
add
jo
mov
add
outs
cmp
jg
pandn
or
push
es
sar
inc
mov
test
int
pop
dec
outs
jo
xlat
xchg
fsubr
fidiv
add
and
popf
cld
popf
pop
jb
(bad)
mov
jo
mov
mov
fidiv
mov
xchg
sahf
(bad)
(bad)
mov
mov
adc
outs
mov
mov
push
mov
mov
mov
jno
jno
clc
sbb
ss
inc
jno
and
cmps
dec
jno
inc
add
adc
push
jno
dec
cs
fsubr
les
cmp
pop
popf
ja
cmp
mov
push
pop
fbstp
clc
dec
das
jmp
add
mov
out
jb
aas
push
and
rcl
cli
imul
aas
aaa
jb
inc
jb
xchg
out
(bad)
jb
popa
jb
jge
pop
imul
aas
jge
xlat
dec
loop
loope
jb
xchg
inc
ja
adc
add
mov
mov
add
and
push
les
push
mov
pop
rol
inc
(bad)
mov
(bad)
fdivr
daa
cmp
popf
loopne
cli
das
add
pop
sbb
mov
add
jae
xor
dec
icebp
ss
inc
jae
push
jae
sbb
outs
nop
jae
mov
adc
inc
add
xchg
push
ja
jo
adc
mov
(bad)
mov
cwde
add
movs
mov
bound
adc
icebp
aaa
stc
jae
(bad)
in
jo
or
or
sub
shr
xchg
mov
mov
pop
aas
loopne
jmp
div
add
and
cmp
mov
ja
cmp
daa
les
push
or
push
rol
js
inc
iret
add
xchg
pushf
sbb
or
int3
xor
jne
je
je
ja
rol
lods
je
(bad)
adc
inc
(bad)
sbb
inc
addr16
loop
push
das
das
shl
je
xchg
add
aas
fild
or
mov
pushf
(bad)
rcr
jne
pop
cmp
xor
jne
mov
loope
jne
sub
sub
inc
clc
cmp
inc
inc
and
and
add
xor
(bad)
(bad)
jne
pop
ret
cwde
or
ret
ja
test
mov
mov
inc
xlat
xchg
ret
ja
jbe
mov
add
cmps
jbe
clc
or
push
rol
dec
rcl
add
ret
or
ret
and
ret
inc
(bad)
loopne
das
cwde
call
push
pop
cmovb
dec
jbe
jbe
fcom
sbb
cmps
ficomp
jbe
ja
inc
sbb
lahf
cmp
ud2
mov
jg
cmp
call
ret
or
sbb
jg
(bad)
fcmovne
enter
jecxz
jmp
fbstp
adc
repz
sti
pop
push
fidivr
pusha
xchg
xor
jo
daa
sbb
and
cmp
ja
jmp
(bad)
daa
mov
sar
test
repz
movs
pop
xchg
mov
ret
test
ja
(bad)
sbb
dec
push
sbb
cmp
add
adc
cmp
sbb
jo
js
inc
js
dec
js
into
in
rcl
pop
das
pusha
punpckhbw
hlt
ss
js
js
cmp
loop
aaa
mov
nop
js
and
adc
sbb
jg
mov
(bad)
add
js
mov
movnti
shr
fisubr
cwde
loope
js
jecxz
jmp
repz
mov
jg
jns
jns
jecxz
add
nop
cmp
mov
xor
jg
inc
jns
push
maxps
pop
mov
push
outs
popa
xchg
pop
jg
xchg
(bad)
jns
retf
jp
iret
inc
and
push
rcr
dec
add
or
jle
dec
jo
push
(bad)
fisttp
cmpps
jns
pop
sbb
ja
pop
fimul
in
dec
dec
dec
in
clc
add
xchg
pop
push
pop
movlps
jecxz
fdivr
ucomiss
addr16
jp
pop
push
jp
loope
loope
bound
jp
jne
daa
mov
daa
pop
cmp
setae
test
and
iret
jp
in
dec
pop
xlat
pandn
ret
add
push
out
jp
push
mov
pop
ror
push
add
push
addr16
jnp
and
fwait
and
cmp
test
leave
leave
sbb
or
leave
(bad)
hlt
or
aas
js
mov
pusha
(bad)
loopne
jnp
jnp
xchg
pop
bound
iret
shrd
xchg
xchg
mov
int
fcomp
mov
ficomp
jecxz
mov
mov
push
mov
jl
(bad)
or
mov
xlat
mov
daa
dec
inc
outs
mov
cmp
les
retf
retf
in
inc
retf
pop
ror
daa
pop
jl
arpl
inc
nop
lahf
push
int
pop
das
xchg
mov
jmp
push
xor
mov
mov
push
mov
pop
jae
daa
mov
dec
jl
add
xor
sar
das
sub
mov
jl
fst
cmp
ds
sub
in
ret
push
dec
out
int3
retf
daa
adc
cmps
mov
call
jge
jge
xchg
popf
or
xor
xor
lock
sahf
enter
jl
mov
mov
add
cwde
inc
int3
push
inc
add
inc
loop
(bad)
shl
dec
das
aaa
jge
push
bound
(bad)
jge
inc
jge
ja
add
aad
cmp
vmread
jmp
mov
nop
loop
mov
or
push
sbb
int
xchg
test
mov
mov
ja
mov
in
retf
push
ja
push
or
or
xchg
xor
xor
xor
call
mov
ja
push
add
add
or
scas
xor
das
jle
add
dec
idiv
ja
rol
push
jle
daa
jle
mov
jle
inc
aaa
jle
pushf
loop
mov
jle
jle
dec
or
pop
aaa
(bad)
push
(bad)
sub
scas
aaa
aas
test
push
test
ror
sub
dec
lock
daa
sbb
(bad)
jb
add
jle
adc
push
mov
jle
call
stos
jle
mov
call
ret
retf
repnz
push
cmp
mov
rol
inc
xchg
addr16
lahf
fsub
js
addr16
xlat
mul
inc
mov
xlat
pop
jg
movq
pop
nop
pop
(bad)
jg
pushf
loop
daa
das
jg
aaa
jg
daa
sbb
xchg
and
cmp
cmp
shr
in
cmps
lock
out
or
jb
jg
jb
pop
xor
jb
jb
mov
popf
nop
cmp
cmp
push
inc
push
call
inc
int3
ror
outs
adc
aad
jmp
hlt
sbb
in
inc
in
jg
stos
xor
std
jg
add
push
inc
or
inc
mov
and
ror
xchg
inc
add
imul
push
push
adc
cmp
ja
sub
push
dec
shl
push
dec
aam
out
fiadd
in
xor
in
pusha
int3
mov
xchg
mov
pushf
cmps
iret
addr16
aam
mov
aam
pop
xchg
lock
inc
or
pop
sub
and
out
add
daa
aam
jge
inc
scas
and
push
mov
nop
cwde
xor
ins
mov
pop
and
leave
add
pop
rcl
cmps
nop
ror
jp
or
xchg
mov
aad
aad
add
(bad)
aad
addr16
and
(bad)
pop
cs
mov
dec
loope
mov
in
add
jp
dec
dec
aaa
test
sbb
or
ja
test
inc
fwait
inc
call
cmps
push
in
mov
cmp
sub
sahf
scas
sbb
xlat
mov
js
sub
or
dec
rcr
outs
cwde
(bad)
das
fimul
test
hlt
dec
jmp
cmps
das
test
mov
mov
pop
push
test
push
fmul
mov
mov
xchg
mov
(bad)
daa
pusha
js
fsub
xor
xchg
sub
or
js
mov
or
adc
pushf
cli
(bad)
daa
xchg
jbe
les
xchg
xchg
inc
xchg
dec
xchg
or
loope
inc
pop
xchg
pusha
xchg
fisub
push
fwait
lahf
mov
(bad)
xchg
xchg
fldcw
lock
iret
sbb
cmp
iret
mov
fisubr
fcmove
adc
push
xchg
je
mov
out
data16
xor
(bad)
or
adc
out
and
out
dec
xchg
inc
xchg
add
aaa
dec
lods
addr16
adc
fldcw
push
stos
xor
sbb
pop
xor
cmp
(bad)
(bad)
aas
jg
(bad)
js
imul
pop
add
test
sbb
(bad)
(bad)
div
rol
dec
scas
xchg
scas
sub
ror
das
inc
fadd
or
scas
cld
push
dec
inc
das
xchg
xchg
jecxz
out
loopne
cmps
add
es
xchg
mov
mov
mov
or
xchg
dec
gs
arpl
mov
outs
or
adc
cmps
or
dec
xor
loopne
push
dec
scas
rcr
ror
dec
rcr
daa
in
iret
jg
outs
mov
loope
pop
push
fisttp
addr16
test
mov
iret
mov
or
mov
ret
scas
or
retf
ds
pop
add
fisttp
jcxz
das
adc
loope
inc
mov
mov
adc
and
xchg
mov
das
sbb
jne
adc
fsubrp
and
mov
es
or
add
out
pusha
mov
push
js
pop
sbb
daa
mov
xlat
fwait
mov
lds
aaa
mov
jecxz
out
stc
push
add
(bad)
sbb
fist
iret
dec
or
dec
mov
push
add
jp
cmp
daa
daa
mov
push
pcmpeqd
daa
daa
daa
daa
mov
daa
daa
scas
mov
(bad)
daa
daa
daa
daa
into
(bad)
fsubp
daa
daa
daa
daa
out
idiv
push
outs
xchg
cdq
lods
mov
nop
dec
es
rcr
loope
pop
ret
pushf
loopne
retf
rol
pop
xchg
sub
loopne
xor
mov
fisub
rcl
mov
pop
outs
mov
jp
maxps
mov
enter
scas
mov
mov
mov
loop
mov
loope
les
mov
(bad)
aam
mov
sbb
mov
pop
lods
mov
mov
pop
xchg
test
leave
(bad)
push
mov
add
push
jmp
aas
or
outs
or
xor
push
push
or
iret
loop
call
gs
es
sbb
lea
push
inc
push
ficomp
dec
lea
mov
iret
pop
das
fistp
xchg
mov
into
int
setle
dec
dec
dec
mov
(bad)
into
jp
dec
dec
(bad)
fsubp
pop
js
jb
xchg
psadbw
push
mov
fdiv
dec
outs
movlhps
sbb
ins
fisttp
test
in
cs
(bad)
ds
jge
out
inc
cmovle
fwait
xlat
jae
pop
pop
pcmpgtd
xchg
pop
and
aaa
fsub
aaa
lods
repz
hlt
push
adc
push
sub
bound
stos
dec
mov
shl
and
or
sbb
bound
add
mov
es
in
xchg
ror
sub
in
mov
jmp
push
inc
and
cmp
xlat
lds
mov
loopne
shr
cmps
jp
mov
not
(bad)
movs
fsub
xchg
out
retf
xchg
push
xlat
push
xlat
(bad)
adc
data16
pop
jo
or
enter
cs
in
pop
jb
jo
push
pop
mov
nop
dec
ds
sti
nop
xor
inc
pop
in
cmc
shl
rcr
in
div
inc
sar
daa
fsub
jmp
or
add
dec
shl
push
pop
fs
sbb
dec
xchg
push
out
lock
adc
mov
nop
mov
(bad)
mov
ja
and
push
pop
je
jp
pop
and
inc
sub
push
mov
outs
adc
int3
out
out
test
nop
(bad)
call
push
lahf
pop
sub
and
call
popa
mov
xchg
(bad)
call
pushf
push
pop
mov
daa
fsub
in
mov
aaa
data16
mov
ja
dec
sub
test
pop
js
out
adc
jmp
dec
lock
xchg
xchg
xchg
dec
xor
xchg
dec
and
xchg
out
xchg
bound
jmp
mov
mov
es
push
daa
jmp
mov
rol
call
cmps
daa
loopne
push
jl
clc
jmp
sbb
outs
adc
das
jmp
jo
js
add
jecxz
pop
xchg
leave
test
aaa
xchg
jmp
sbb
cwde
jp
mov
pushf
xchg
xchg
outs
add
daa
fwait
mov
mov
xor
lock
mov
mov
xor
cmps
mov
xchg
pusha
cwde
or
daa
mov
lock
sub
das
xchg
xlat
dec
fisub
ficomp
mov
jl
dec
les
dec
push
mov
pop
cwde
xchg
fbld
xchg
scas
xchg
addr16
pop
cld
mov
int3
xchg
(bad)
xlat
xchg
cwde
and
inc
inc
adc
mov
xorps
leave
or
rcl
and
jno
cmp
mul
test
ja
shr
mov
jge
pop
in
out
push
push
repnz
aaa
xchg
mov
inc
(bad)
out
push
inc
adc
(bad)
out
pop
and
cmc
sbb
push
shl
and
test
add
xor
add
pop
push
sub
jne
test
test
stos
pop
pop
lock
pop
lock
pop
adc
rol
pop
loopne
dec
adc
xchg
(bad)
xchg
lfs
outs
mov
inc
push
ss
xor
ins
sar
push
dec
xchg
leave
nop
js
call
ja
jbe
adc
ins
pop
(bad)
xchg
addr16
or
pop
(bad)
xchg
inc
mov
icebp
or
mov
daa
clc
add
or
pop
cwde
lods
inc
push
enter
cmp
adc
pop
repnz
repnz
cmp
push
cdq
cwde
and
mov
inc
add
jbe
cmp
aas
xchg
mov
xchg
mov
test
mov
dec
sar
ret
cdq
fisub
or
cdq
pop
(bad)
pop
(bad)
cdq
mov
repz
xor
movs
imul
push
xlat
xor
aaa
js
or
lahf
mov
mov
push
out
sub
arpl
pop
setp
scas
pop
jo
hlt
daa
pop
cli
out
push
shr
scas
loopne
and
pop
and
fisub
pop
pop
out
addr16
stos
rol
push
cmc
mov
xchg
add
iret
je
dec
xor
fwait
inc
daa
fsubr
mov
push
dec
fwait
imul
add
ror
cld
shr
test
push
push
test
sub
cmp
nop
test
push
scas
mov
ret
es
dec
iret
push
sub
inc
out
sar
or
imul
test
aaa
call
pop
sti
fdiv
push
neg
dec
(bad)
cmp
aad
fs
div
push
add
ds
cmc
dec
dec
outs
dec
sbb
mov
mov
lods
add
add
js
ret
sub
not
inc
push
cdq
or
(bad)
clc
ins
sub
sbb
push
test
in
mov
xlat
mov
and
ss
aas
iret
mov
sbb
popf
(bad)
stc
not
xor
in
mov
pusha
mov
lods
pusha
pushf
mov
pop
call
mov
clc
and
inc
pop
mov
sbb
xor
pop
pushf
pop
mov
push
cmps
pop
mov
mov
das
inc
js
jecxz
cli
(bad)
xor
push
shl
mov
pop
push
add
push
inc
stc
fbld
push
js
ins
cld
out
sahf
pop
jo
adc
jo
aaa
andps
sub
loopne
adc
xor
(bad)
sti
sti
push
sub
or
sti
out
add
or
enter
ficomp
repnz
pop
or
mov
cmp
mov
xor
cmp
cmp
dec
push
pusha
imul
cmp
jbe
mov
aas
push
add
lahf
adc
dec
mov
pop
mov
add
pop
enter
stos
pop
mov
pop
or
fsubr
adc
(bad)
std
mov
xchg
cmp
push
cmps
outs
hlt
scas
and
js
test
pop
popa
xchg
dec
add
push
inc
outs
fsub
cmp
fcom
xchg
std
loopne
movs
sbb
dec
aaa
cld
dec
push
xor
mov
mov
mov
mov
mov
sub
mov
cwde
sub
imul
scas
mov
mov
aam
mov
or
adc
sub
mov
mov
xchg
test
inc
pop
out
sbb
xadd
xchg
or
outs
rcr
pop
adc
lods
mov
push
push
xchg
rcr
pop
xor
pushf
adc
clc
rol
push
cmps
mov
call
sub
test
adc
ins
add
xchg
sbb
adc
in
aam
in
and
xor
adc
add
mov
mov
das
mov
push
out
push
add
call
movs
and
xchg
or
cmps
adc
push
enter
and
add
dec
pop
dec
add
aas
clc
jecxz
pop
rol
push
pop
mov
mov
inc
out
add
or
mov
cld
pop
iret
in
leave
test
sub
icebp
lods
jg
dec
mov
xchg
das
xor
pop
popa
xchg
push
mov
sub
je
not
add
sbb
xchg
cmp
pop
movs
ja
movs
mov
jle
mov
fsubr
jae
out
jg
je
add
add
ficom
cmps
(bad)
push
xor
in
ins
ja
cmp
fimul
call
loopne
push
push
add
jo
push
sbb
add
fist
xchg
dec
xor
mov
lahf
mov
mov
mov
iret
mov
scas
or
xor
inc
push
scas
or
add
push
push
pop
adc
pop
cmps
xchg
mov
inc
ins
in
imul
cwde
dec
loopne
cmps
inc
push
test
jle
sbb
xlat
sbb
pop
cmp
movs
nop
push
xor
pop
je
daa
or
inc
out
pop
cmps
adc
ja
test
cmp
push
movs
dec
jp
dec
outs
test
call
fucomi
mov
xchg
jecxz
pop
dec
or
or
test
lahf
test
popf
pop
push
pop
addr16
dec
cs
mov
ror
or
rcr
or
test
call
stos
lahf
mov
aaa
xor
fwait
mul
iret
mov
nop
iret
add
dec
rcr
mov
out
push
or
fbld
ja
fcom
out
adc
inc
push
cmp
pop
mov
dec
lahf
out
pushf
loopne
ror
outs
sub
dec
(bad)
mov
and
push
pop
loopne
mov
in
or
or
stos
daa
xor
dec
scas
dec
xor
mov
das
mov
dec
les
sub
or
dec
push
dec
and
or
or
or
mov
push
sub
sub
ret
cmp
dec
or
mov
or
dec
cs
imul
mov
daa
movs
xor
daa
pop
add
lock
sbb
lods
pop
sub
sub
(bad)
push
outs
or
test
lods
dec
mov
bound
fmul
call
dec
hlt
jmp
lods
dec
xor
iret
cmp
dec
outs
pop
inc
daa
ins
push
es
and
jl
mov
rcl
out
inc
inc
and
mov
xorps
mov
xchg
mov
xchg
mov
xchg
mov
mov
mov
scas
jmp
and
or
xchg
pop
dec
je
push
xor
xchg
pop
jb
pusha
rcl
out
out
(bad)
cmp
push
adc
sbb
outs
movs
call
outs
xchg
push
in
adc
push
or
je
adc
inc
mov
jb
shl
adc
push
jo
jb
inc
mov
into
rol
mov
enter
les
mov
mov
mov
cld
xor
xchg
xlat
adc
mov
jmp
xchg
pop
mov
shl
das
(bad)
add
fisttp
mov
loop
mov
lock
fcom
mov
call
adc
push
pop
test
fisttp
movs
rol
adc
dec
test
mov
sbb
adc
adc
cmp
sbb
(bad)
call
mov
xor
sub
push
adc
test
inc
movs
push
aam
dec
lahf
fisubr
dec
repnz
adc
scas
dec
dec
and
adc
and
xor
pop
xor
push
or
scas
xchg
pushf
mov
mov
test
vunpckhps
cmp
mov
inc
lock
into
sahf
bound
push
push
xchg
push
push
enter
das
jnp
mov
push
enter
in
dec
pop
xor
mov
mov
xchg
sub
rol
das
mov
in
sub
adc
fbld
and
or
push
jo
sbb
mov
jb
adc
pop
mov
and
test
fdivr
pcmpeqw
mov
imul
sbb
ror
add
out
mov
nop
imul
mov
mov
inc
dec
jne
push
sub
cmps
mov
les
lock
es
aas
sbb
aam
dec
mov
cmp
mov
mov
scas
mov
push
aas
push
sbb
fs
push
aas
cwde
sbb
dec
jno
xchg
lock
mov
pop
in
test
push
mov
cmp
and
or
dec
out
sbb
dec
adc
fmul
(bad)
lahf
fs
dec
add
inc
scas
xchg
movs
jg
pop
and
push
shl
cld
dec
adc
adc
mov
push
push
cs
dec
cs
mov
lods
rcl
xchg
fcom
mov
rcr
jmp
pop
sub
js
dec
dec
outs
setae
inc
mov
test
mov
call
adc
xchg
xor
sbb
addr16
or
mov
mov
push
dec
cmp
jge
sbb
or
push
outs
sbb
add
movs
xchg
hlt
add
mov
das
mov
mov
scas
add
outs
scas
aas
mov
cmps
leave
mov
fmul
aas
je
cld
outs
das
es
ss
dec
pop
push
iret
and
mov
iret
dec
bswap
pop
fdiv
dec
dec
es
sbb
sub
in
mov
jnp
adc
xchg
adc
xor
fiadd
aas
mov
rcl
sbb
jg
dec
mov
inc
xor
jge
pushf
push
cmp
cmp
push
jg
inc
add
inc
dec
pop
shl
or
push
sub
jg
outs
mov
jo
cld
jno
shl
(bad)
sub
movs
cs
setle
jo
mov
push
ror
(bad)
aas
test
and
ins
mov
push
idiv
js
rol
pop
add
(bad)
scas
xchg
iret
sbb
dec
adc
iret
mov
jle
aas
adc
dec
add
fbld
pop
fwait
push
or
outs
fld
sti
test
dec
(bad)
jecxz
dec
vmwrite
adc
or
cwde
mov
or
(bad)
push
aas
sub
mov
in
mov
leave
or
aad
dec
dec
jl
ja
or
sub
fadd
scas
in
dec
mov
adc
aas
rcl
adc
bound
cmp
pop
cmp
in
or
pop
in
lock
paddusb
xor
dec
(bad)
call
mov
add
inc
popa
rcpps
int
dec
gs
sbb
mov
dec
cmp
fisttp
xchg
addr16
cmps
imul
imul
push
adc
mov
ss
adc
dec
ins
loopne
or
push
outs
dec
xor
and
xor
outs
das
mov
jno
fs
(bad)
(bad)
xor
test
ss
(bad)
dec
scas
loopne
daa
imul
aaa
lds
dec
lahf
test
fbld
cmps
cmps
cmps
aas
and
fimul
stos
dec
mov
xor
push
dec
cld
les
pop
iret
sbb
mov
jmp
out
dec
mov
ret
scas
xchg
and
cs
inc
rol
scas
mov
jnp
icebp
adc
sub
hlt
fcomp
mov
jbe
loopne
jbe
popf
cmp
(bad)
aas
jg
mov
dec
adc
shl
fdiv
cmps
add
(bad)
stos
dec
or
inc
add
jne
dec
lahf
mov
add
nop
mov
dec
test
out
adc
repnz
push
mov
dec
outs
addr16
ss
das
dec
mov
xchg
adc
pop
ins
ds
mov
sub
xchg
jo
lds
cs
aas
ss
ss
dec
add
in
dec
jmp
pop
inc
sub
cmp
dec
sub
jmp
and
dec
sete
adc
leave
pushf
cmp
or
add
push
dec
push
adc
push
inc
push
xchg
test
or
out
adc
cs
inc
push
aas
and
mov
inc
push
(bad)
push
inc
inc
aaa
stos
test
push
out
imul
dec
inc
aas
inc
push
dec
add
sbb
ret
jnp
aas
int3
sbb
adc
dec
aas
fcomp
xor
inc
pop
outs
pop
jb
aas
add
sbb
je
mov
mov
iret
mov
push
mov
inc
cmp
(bad)
aas
and
dec
aad
ficom
inc
das
or
shl
sub
sbb
jbe
imul
push
js
outs
fild
push
and
pop
je
xor
mov
cmps
xor
outs
or
jns
ret
jns
dec
xor
add
scas
and
js
data16
popa
adc
bound
xlat
xchg
call
inc
sbb
cmovs
in
inc
inc
inc
dec
mov
(bad)
je
add
das
ins
push
pop
rol
cmp
push
push
xor
and
or
dec
repz
lock
mov
lods
mov
repz
push
add
cmp
cmp
shl
xchg
mov
inc
sub
adc
inc
jg
mov
aas
push
test
loope
lods
add
in
test
inc
aaa
lods
es
inc
sbb
xchg
add
adc
inc
or
dec
loope
mov
jo
pusha
push
outs
and
pop
cdq
aaa
loopne
dec
mov
push
xchg
mov
dec
std
add
inc
je
mov
and
add
ins
inc
or
arpl
xchg
inc
and
xor
xchg
out
dec
jo
adc
or
jg
mov
and
push
pop
jmp
shl
mov
push
pusha
sub
outs
ins
inc
aas
mov
add
inc
or
mov
das
ss
rcl
sar
dec
adc
pusha
sub
push
lds
push
outs
push
push
hlt
test
pop
inc
cld
dec
pop
mov
rol
test
dec
or
iret
dec
addr16
pop
or
retf
xor
ins
ins
popa
outs
jne
mov
inc
out
inc
ret
bound
sbb
jmp
jmp
push
imul
xor
push
imul
sbb
cdq
jp
inc
(bad)
cmp
mov
xor
mov
cdq
inc
inc
inc
popa
jae
inc
inc
add
push
pop
xor
aas
inc
xchg
popa
fs
inc
pop
sbb
loop
pop
dec
outs
fs
xor
add
pop
pop
push
icebp
add
outs
outs
fs
(bad)
gs
fs
inc
lock
jne
push
dec
mov
dec
pop
add
mov
inc
inc
adc
dec
enter
outs
adc
sub
arpl
imul
imul
bound
aas
and
add
out
out
add
or
push
nop
and
xchg
outs
ins
or
push
xor
test
jns
add
mul
push
imul
mov
mov
cmp
jo
add
or
xchg
cmp
adc
inc
adc
fldenv
inc
add
xchg
pop
cmps
mov
jg
sete
push
add
sar
cmp
inc
inc
mov
test
aad
push
addr16
push
jnp
pop
inc
inc
out
adc
mov
imul
aas
push
inc
push
iret
sar
mov
push
inc
test
add
pop
add
outs
add
push
pop
aas
das
add
add
test
or
pop
push
lahf
inc
ret
cmp
jno
(bad)
jle
call
je
addr16
dec
arpl
add
adc
jbe
add
pop
ret
or
out
push
and
pop
lea
pop
aas
fsubr
das
inc
sbb
mov
inc
pop
dec
hlt
es
push
iret
repz
pusha
jl
mov
imul
add
add
xor
aas
mov
daa
cdq
adc
cs
mov
addr16
mov
or
aaa
aaa
pop
je
je
aas
iret
aas
dec
and
jo
aas
adc
mov
mov
jo
xlat
pop
inc
and
xchg
cmp
jmp
jo
(bad)
and
call
mov
mov
push
xor
xor
cmps
sysret
sbb
dec
ficom
stos
les
mov
add
outs
rcr
inc
dec
cmp
pop
cs
sbb
adc
imul
push
cmp
fs
sbb
cmp
pop
fdivr
daa
out
cmp
clc
add
pop
or
inc
stos
test
cmp
push
cli
lock
push
xchg
mov
fstp
mov
mov
add
pop
movs
mov
ficomp
push
and
mov
ja
inc
inc
mov
dec
bound
lahf
jge
mov
pop
pop
pop
rcl
or
(bad)
push
xor
inc
outs
dec
cmp
mov
outs
mov
mov
pop
loopne
aas
mov
inc
jg
push
gs
push
mov
call
or
clc
inc
outs
outs
lahf
inc
cmp
push
outs
jne
fistp
(bad)
mov
es
scas
shl
aas
aas
jno
in
and
inc
inc
pop
pop
dec
adc
add
lods
pop
dec
inc
daa
mov
push
sbb
ror
aas
mov
js
ja
jbe
cmp
repz
jae
jno
repz
jo
outs
ins
ins
imul
cmp
imul
out
lahf
adc
scas
push
iret
repz
inc
push
fs
test
iret
repz
int3
call
iret
repz
push
fs
test
test
adc
pop
out
adc
dec
inc
or
add
cdq
push
push
js
ss
test
mov
add
js
and
push
loopne
push
jo
gs
pusha
fistp
ins
sbb
sbb
sub
inc
jo
test
dec
sub
ror
(bad)
cmps
arpl
not
inc
aam
sub
aaa
(bad)
scas
ss
mov
adc
mov
mov
xor
add
push
xchg
ss
pop
pop
xchg
movs
pusha
mov
rol
das
inc
pop
ins
stos
dec
mov
in
inc
inc
dec
inc
js
inc
inc
add
daa
adc
bound
push
jb
xor
sbb
outs
jae
push
dec
arpl
push
mov
cs
jl
sub
inc
jbe
outs
imul
xor
xor
jmp
pop
pop
cmp
inc
sub
das
inc
inc
pop
jae
push
dec
adc
fs
cmp
je
lahf
push
pusha
xor
push
mov
(bad)
and
push
sti
and
mov
movs
ins
gs
inc
xchg
lods
pop
addr16
mov
adc
imul
sub
push
rcl
cmp
xchg
movs
ret
and
stos
mov
and
aaa
test
and
imul
das
test
das
push
inc
adc
xchg
pop
dec
jb
outs
cs
pop
pop
xchg
daa
test
ss
add
nop
out
inc
ins
(bad)
xchg
leave
aaa
mov
imul
iret
mov
mov
out
push
dec
push
mov
sti
sbb
or
pop
sub
push
dec
inc
cmp
jmp
cmp
push
inc
fwait
inc
loopne
adc
add
xor
mov
and
dec
jae
add
int3
add
sbb
or
and
gs
pop
ficom
push
push
xor
pop
sub
pop
or
mov
push
inc
cmp
xor
push
sbb
push
add
lods
cmps
xchg
bound
pop
xchg
outs
fcomp
or
iret
daa
adc
ss
mov
ins
add
daa
addr16
jne
and
cmp
je
(bad)
xlat
push
add
mov
(bad)
cmp
add
js
fs
mov
pop
pop
push
sbb
cmp
lods
push
rcl
lods
test
jae
push
inc
test
and
rcl
xor
inc
pop
retf
add
movs
aad
mov
xchg
cmp
data16
mov
clc
or
dec
cli
add
addr16
push
adc
xchg
mov
es
sub
xchg
sbb
add
cdq
in
mov
lock
xor
mov
inc
jno
dec
dec
cmp
push
adc
pop
pushf
outs
out
ror
ins
fiadd
xchg
cs
cld
outs
ror
cmp
add
xchg
mov
call
jg
(bad)
(bad)
call
fimul
mov
scas
div
loop
shl
jae
lea
jmp
(bad)
(bad)
(bad)
(bad)
fist
xor
inc
mov
test
sub
push
inc
adc
adc
xchg
dec
fwait
xor
add
rcr
jo
loopne
push
outs
push
sub
daa
out
xor
push
mov
mov
xchg
and
test
and
sub
aas
push
sub
push
fiadd
add
sub
inc
jb
add
outs
pop
test
pusha
push
das
push
shr
mov
shl
das
mov
jo
mov
dec
inc
inc
dec
or
sbb
fist
(bad)
retf
les
popa
mov
or
mov
and
pop
outs
push
retf
cmps
inc
mov
xchg
test
cmps
inc
inc
pop
jo
daa
lods
adc
add
push
out
ret
clc
add
add
inc
inc
inc
push
inc
inc
xchg
xor
jo
cmps
es
dec
fcomip
pop
adc
add
pusha
push
sbb
int3
(bad)
push
fnsave
test
imul
push
dec
int
pop
add
cmp
mov
inc
out
pop
push
ret
push
mov
add
add
and
pop
push
mov
mov
add
push
jl
cmp
repz
adc
lods
lea
add
xor
sub
mov
push
dec
dec
cli
cmp
sub
lock
in
and
xor
sti
xchg
cs
cs
or
repnz
inc
sub
mov
jae
add
lods
adc
retf
dec
push
xor
push
dec
out
xchg
add
retf
inc
inc
xchg
dec
rol
js
or
add
aas
cmp
test
lea
outs
jne
cmp
nop
cs
cld
cwde
paddb
xor
sbb
or
int
ins
pop
and
pop
or
outs
push
jg
xchg
sbb
jle
jg
sahf
push
or
enter
jns
sar
movs
cwde
mov
je
ins
iret
repz
fiadd
fs
pop
pop
push
cmp
repz
dec
dec
inc
xor
mov
pop
sbb
adc
call
in
repz
repz
loopne
fmul
mov
lods
or
loopne
or
push
cmps
pop
push
add
test
sbb
add
or
fadd
push
or
wbinvd
or
fisubr
mov
push
add
jno
cdq
adc
fcmovne
in
add
das
and
xchg
inc
inc
push
addr16
das
push
loope
mov
pop
imul
loopne
push
add
mov
push
pop
and
cmp
out
jbe
add
(bad)
mov
fbld
fsubr
aas
into
aas
xlat
sbb
and
xchg
pop
or
push
out
jg
frstor
sbb
pop
mov
mov
mov
mov
sgdtd
jno
xchg
bound
add
std
mov
fdivr
add
add
jae
add
and
or
xor
call
push
xor
pop
adc
sbb
addr16
sbb
xlat
enter
mov
pop
ins
push
adc
pusha
jmp
repz
pop
pop
push
sbb
xlat
push
sbb
lock
sahf
and
pop
push
pop
out
mov
inc
push
dec
pmaxsw
jo
push
(bad)
sbb
push
iret
add
pop
repz
jns
push
jp
push
cld
popa
pushf
out
(bad)
push
call
xor
inc
les
add
inc
sub
and
stos
add
punpcklbw
sub
cmp
inc
dec
pop
les
mov
sub
adc
cmp
adc
and
add
add
cmp
and
mov
and
adc
xchg
add
(bad)
pop
loope
or
and
cmps
fisttp
mov
stc
enter
lahf
loopne
inc
jle
push
cld
dec
push
xor
mov
popf
int3
push
cmp
in
push
inc
movzx
mov
in
call
jle
push
jle
adc
push
ficomp
hlt
test
push
xor
fcomp
loopne
mov
mov
mov
out
jo
in
mov
push
mov
push
mov
xchg
add
xor
(bad)
test
inc
inc
adc
(bad)
push
fld
push
or
pop
cmp
add
pop
data16
inc
or
xor
das
mov
cmp
push
push
push
jg
jg
test
xchg
les
cmp
pop
mov
xchg
mov
jns
or
xor
dec
ins
add
ficomp
cmp
push
xchg
push
out
sub
repnz
pop
adc
fild
sbb
jecxz
out
jg
pop
ss
shr
es
loopne
(bad)
fsub
mov
lahf
push
push
push
out
daa
ds
dec
push
lahf
inc
push
push
jg
mov
jno
iret
push
out
xbegin
cmp
add
mov
mov
das
out
push
out
cwde
push
or
push
or
sub
lahf
movs
and
(bad)
and
das
sbb
unpcklps
xchg
add
xchg
(bad)
or
jg
neg
mov
and
push
push
and
daa
clc
push
and
aam
lea
push
(bad)
psubb
ss
out
jg
or
inc
inc
add
add
push
adc
xchg
aaa
imul
ds
pop
or
rol
pop
jb
(bad)
pop
enter
inc
pushf
or
pop
repnz
mov
adc
xchg
mov
adc
and
leave
sbb
int3
(bad)
(bad)
(bad)
dec
sbb
ror
and
sahf
mov
sub
inc
rcr
and
sbb
add
(bad)
(bad)
(bad)
call
xchg
inc
push
add
inc
stc
mov
adc
mov
dec
js
(bad)
(bad)
fistp
outs
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
aaa
sub
stc
popf
sti
cs
inc
mov
(bad)
(bad)
(bad)
push
sub
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
and
sar
(bad)
xchg
push
cmps
scas
mov
sub
or
add
(bad)
jmp
mov
cmps
in
cmp
sahf
xchg
pop
call
lock
(bad)
movs
mov
popa
sar
mov
fsub
addr16
(bad)
jmp
mov
sub
fwait
xchg
and
and
sbb
sti
aas
jno
or
mov
pop
fs
(bad)
(bad)
(bad)
cmp
dec
lea
aas
ret
shr
mov
icebp
aas
ror
and
cmps
(bad)
(bad)
(bad)
(bad)
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
aad
mov
std
std
into
popa
test
(bad)
(bad)
call
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
(bad)
(bad)
(bad)
mov
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movs
jmp
jg
sub
jge
mov
(bad)
mov
fst
arpl
int3
and
call
cmp
jp
and
cmp
(bad)
(bad)
jmp
mov
cmp
std
xlat
cmp
mov
sbb
add
mov
(bad)
(bad)
(bad)
push
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
(bad)
jmp
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
(bad)
call
xchg
cmp
push
and
dec
dec
gs
std
or
pop
ficomp
xor
enter
fmul
add
pusha
mov
mov
or
cmps
add
inc
and
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
xchg
push
push
push
push
dec
test
mov
dec
shl
or
mov
xor
dec
push
mov
or
pop
(bad)
frstor
dec
add
xor
out
and
add
push
shl
xchg
sbb
pop
out
es
jle
aaa
pop
sub
add
out
inc
mov
pop
in
fwait
mov
maxps
push
dec
test
jle
pop
lods
xor
add
push
sub
adc
pop
repnz
add
push
jp
pop
dec
loopne
jecxz
mov
(bad)
add
or
add
(bad)
cmp
or
cwde
or
ja
js
or
out
xchg
mov
(bad)
sbb
jae
and
mov
mov
sbb
neg
mov
and
sub
mov
or
sub
mov
(bad)
out
std
dec
inc
or
and
and
push
fidivr
pop
jb
and
fmul
fdiv
and
mov
and
cmp
jo
and
inc
inc
push
lock
(bad)
xchg
pusha
inc
and
div
add
jae
cmp
clc
(bad)
jmp
cmps
xchg
outs
mov
and
jp
and
idiv
inc
push
outs
enter
clc
adc
jp
ror
inc
xchg
push
ja
jb
and
idiv
and
pop
rol
mov
mov
push
mov
sahf
std
add
cmps
mov
arpl
mov
fld
add
cmp
js
aas
cmp
dec
sahf
pop
mov
clc
add
inc
jg
mov
jmp
jae
push
sahf
mov
jp
pop
sbb
ins
and
mov
mov
test
stos
cmp
ret
pop
jp
mov
ja
push
mov
pusha
mov
mov
pop
enter
push
push
test
inc
sub
inc
hlt
pushf
mov
shl
(bad)
(bad)
adc
clc
inc
adc
dec
mov
push
adc
pop
jo
pop
pop
pusha
mov
into
cmp
pop
xchg
cmps
mov
xlat
out
jne
jb
iret
adc
and
and
add
jo
mov
mov
sbb
jb
inc
test
int3
mov
and
aas
xor
xor
adc
adc
sub
cmp
call
push
(bad)
xor
bound
mov
and
mov
test
mov
adc
sahf
sbb
xor
and
sbb
test
in
call
mov
jg
adc
das
sub
and
stos
ja
ror
cs
cmp
push
shl
out
fs
mov
test
mov
mov
pop
xchg
sub
mov
sbb
jl
aas
jp
mov
mov
rol
movs
fimul
ss
xchg
pop
scas
add
ror
add
push
clc
rol
mov
in
add
shl
scas
sub
nop
mov
and
adc
push
xchg
xor
arpl
and
xchg
lods
xor
daa
mov
and
loopne
push
jnp
test
or
mov
cmps
mov
ins
mov
rol
mov
fs
(bad)
cmps
cmp
push
xchg
cmp
ja
mov
or
sbb
mov
add
pop
pushf
mov
rol
clc
pop
lods
int
or
or
imul
and
pop
dec
jo
or
add
jl
das
es
sbb
(bad)
jle
add
xchg
es
test
jle
inc
mov
xlat
add
xchg
nop
or
push
mov
jge
add
xchg
push
xchg
push
push
lea
sub
jge
adc
adc
push
sbb
sub
mov
push
dec
loopne
sbb
es
push
or
sti
stos
xchg
inc
xchg
sbb
add
add
xchg
mov
fldcw
fwait
cdq
push
popf
push
outs
mov
fadd
mov
sub
or
adc
push
sbb
out
mov
neg
test
mov
outs
pushf
and
cwde
and
push
sahf
sub
cs
fcomi
add
lea
push
xchg
xor
xor
push
push
sbb
sub
rcl
sahf
call
je
js
movs
cmps
test
jle
jbe
and
cmp
mov
mov
bound
cvtps2pd
stos
add
fcmovnb
push
movs
mov
dec
sbb
inc
xor
aaa
push
sbb
mov
sbb
xchg
adc
push
fcmovnbe
push
jo
shr
(bad)
push
add
mov
pop
sar
or
jbe
call
xor
xchg
inc
add
mov
mov
mov
push
mov
daa
and
or
cmp
push
add
xchg
push
push
ins
sub
call
and
push
and
push
sub
and
xchg
sub
mov
add
mov
add
mov
sub
imul
push
sub
cmps
xor
cmp
mov
sub
push
mov
and
jmp
mov
rol
add
nop
fild
adc
sub
pop
add
dec
add
xchg
pop
add
pop
add
int
push
push
xchg
inc
mov
int
popa
pushf
data16
add
shr
out
xchg
inc
cld
push
sahf
jae
dec
mov
nop
ss
stos
mov
sbb
ins
movs
outs
mov
scas
movs
inc
jbe
push
data16
jmp
mov
jge
sbb
popa
movs
sub
mov
xor
lods
loopne
and
out
(bad)
pop
inc
(bad)
jo
fild
out
xor
ds
pusha
ins
fist
jmp
push
push
sti
sub
into
out
shl
fldenv
push
(bad)
nop
jo
fidivr
xor
test
jns
mov
shr
ret
lock
scas
push
add
xchg
cmps
add
pushf
xchg
test
sahf
sub
dec
nop
nop
xchg
fadd
add
mov
rol
and
xchg
xchg
push
test
ds
mov
cmp
call
xchg
frstor
mov
test
add
add
or
mov
retf
adc
fistp
movs
data16
cmps
leave
cli
fistp
leave
lods
pop
shl
mov
mov
add
mov
ret
aam
push
fnstenv
(bad)
fimul
rol
ret
add
enter
div
add
leave
xlat
retf
push
(bad)
into
add
aad
add
lods
dec
xor
aam
aad
jg
call
jmp
rol
fucom
fiadd
(bad)
jbe
imul
add
add
in
jecxz
add
add
add
call
push
jmp
in
pop
mov
in
clc
out
add
lock
icebp
add
repz
and
fmul
add
push
clc
div
fnsave
clc
add
add
lea
dec
mov
leave
jmp
(bad)
retf
in
cld
cld
repz
mov
retf
repnz
mov
fcmovnb
or
pop
pusha
test
or
mov
or
cli
jns
pop
pop
and
inc
jae
loop
add
aas
mov
cmp
add
adc
and
push
fs
in
mov
enter
or
adc
sbb
or
jnp
popa
fcomp
in
mov
in
xchg
xor
inc
pop
add
fwait
ja
(bad)
ins
pop
or
add
sbb
add
pop
out
lea
add
neg
mov
inc
push
dec
xchg
add
ds
jb
imul
ret
cmp
xor
out
cs
xlat
xlat
sub
inc
sub
add
repnz
fdiv
jg
and
inc
push
xchg
daa
ret
inc
add
loop
sar
mov
inc
sbb
sbb
inc
cld
in
(bad)
jmp
test
inc
cmp
jnp
aaa
push
sbb
in
repnz
fidivr
pop
xchg
inc
das
nop
in
adc
repnz
ins
ins
inc
and
(bad)
(bad)
call
scas
clc
fst
inc
retf
out
mov
icebp
test
cmp
out
out
out
xor
inc
out
sbb
int
(bad)
push
pop
pop
dec
aas
inc
xchg
and
out
add
imul
scas
rcr
push
dec
mov
jno
push
lods
data16
stc
loop
aas
jnp
or
rcr
ja
push
add
sti
(bad)
in
xchg
sub
adc
fisttp
fcomp
(bad)
sbb
jo
cld
cmp
mov
ret
(bad)
in
or
shr
call
cmc
test
sahf
dec
xor
xor
sub
add
sar
add
pop
fimul
inc
ins
sti
lds
loopne
xor
fisub
inc
push
lea
jno
imul
mov
mov
ret
mov
sbb
loopne
push
add
pop
xchg
repnz
lods
xor
inc
pushf
add
jno
fidivr
fmul
loop
mov
dec
jle
inc
mov
(bad)
test
inc
sbb
inc
cmps
js
je
mov
mov
cmps
inc
rol
hlt
fwait
add
sub
(bad)
hlt
mov
shl
movs
mov
mov
sub
ror
scas
xchg
scas
iret
(bad)
fstp
mov
cmp
dec
retf
les
add
or
dec
inc
add
jo
add
lea
xchg
scas
ficom
push
push
aam
push
push
xchg
add
lahf
test
popf
ss
cmp
push
sahf
aas
out
int
add
add
or
fbstp
adc
lahf
dec
add
xchg
stos
cdq
push
mov
ins
sub
push
pop
movs
inc
add
or
pop
(bad)
mov
or
inc
add
inc
jle
mov
xchg
retf
es
cmps
dec
push
test
inc
sub
mov
xchg
or
movs
dec
add
add
fisub
adc
in
push
adc
dec
outs
mov
add
inc
or
ret
mov
adc
mov
pop
and
call
mov
push
lods
sti
ins
add
adc
and
push
push
mov
sbb
pop
add
daa
mov
or
sub
push
sub
outs
cs
cs
es
and
pop
push
mov
mov
xor
mov
push
mov
mov
add
stos
pusha
inc
mov
add
dec
imul
xor
gs
mov
cmp
mov
mov
mov
ss
push
cmp
cs
in
cmp
mov
mov
cs
mov
inc
mov
ja
dec
mov
push
mov
push
mov
cli
mov
ret
shl
push
or
cld
pop
ret
pop
add
shr
(bad)
es
into
push
sbb
adc
sbb
push
sbb
rol
outs
jbe
les
clc
idiv
push
(bad)
js
dec
leave
jl
push
ret
jge
ret
jg
arpl
and
add
mov
pop
rol
pop
into
push
pop
rol
(bad)
fwait
int
lds
imul
push
enter
push
add
fcom
ins
retf
xor
push
cld
lods
pop
test
outs
fist
ficomp
add
(bad)
mov
add
pop
jo
jbe
(bad)
mov
xchg
pusha
ret
xchg
push
nop
push
xchg
xchg
xchg
add
outs
cmps
or
mov
scas
dec
mov
mov
cmc
mov
mov
mov
mov
push
mov
stos
add
push
cmp
aaa
pop
fs
shl
lea
daa
sub
int3
movs
add
xchg
mov
std
fist
mov
test
xchg
(bad)
scas
add
mov
push
cmps
fstp
add
test
out
in
movs
out
ret
(bad)
fwait
push
les
ret
push
(bad)
out
retf
push
mov
ret
sbb
push
mov
push
mov
loop
add
test
retf
add
push
retf
push
outs
enter
mov
iret
(bad)
jmp
rol
retf
neg
fistp
leave
fadd
int
rol
aad
shr
fst
add
rcl
ss
jle
fcom
add
fcom
aad
fadd
fcmovbe
push
(bad)
fcomp
ins
in
jg
fstp
(bad)
fld
loope
fild
retf
in
mov
dec
int
mov
(bad)
int3
jmp
shr
fcmovnb
outs
in
cmps
fidiv
(bad)
cmc
(bad)
not
fucomp
loope
jg
add
add
psrad
add
gs
(bad)
in
out
in
adc
mov
and
in
in
out
push
and
jmp
mov
icebp
add
out
add
jmp
outs
ss
add
lock
hlt
lock
repnz
push
cli
and
push
cmc
inc
std
cli
sti
add
cli
(bad)
push
(bad)
aaa
sub
add
jg
jg
xchg
xchg
xchg
cwde
sub
fsubp
(bad)
sahf
xchg
sub
add
pop
mov
adc
push
add
jmp
and
xchg
sub
mov
sbb
cmp
mov
in
jmp
xor
add
bound
je
mov
sub
adc
inc
or
daa
sub
inc
xor
lods
popf
and
outs
(bad)
das
int3
mov
or
rol
xchg
mov
cmp
cdq
call
sbb
popa
and
(bad)
jle
imul
and
sbb
sbb
push
repnz
clc
in
mov
loop
daa
or
xor
addr16
dec
pushf
push
lods
inc
mov
clc
jmp
jecxz
daa
xchg
xor
mov
movs
cmc
outs
(bad)
or
out
out
jmp
xor
inc
rol
popf
xor
cmps
dec
dec
test
pop
inc
and
scas
dec
es
lea
movs
cmovl
jg
jnp
sbb
sbb
push
mov
pop
ja
iret
cli
sbb
pop
sbb
mov
mov
add
mov
add
pop
outs
pop
cld
cmp
aaa
adc
xor
jg
pop
cmps
add
dec
dec
mov
dec
dec
cmp
in
jns
bound
cs
out
inc
js
ss
mov
xchg
xor
daa
stos
enter
mov
ja
xor
pop
sub
test
inc
mov
xor
cwde
je
les
mov
xchg
movs
leave
ffreep
mov
mov
repz
and
mov
cmps
xchg
adc
push
fmul
(bad)
(bad)
call
add
push
cdq
sbb
or
add
push
add
div
pop
jmp
cmp
pop
cmps
sub
sbb
sar
test
add
mov
scas
pusha
fldcw
cmp
mov
push
mov
cs
dec
xchg
cmp
or
fidiv
cdq
les
into
mov
out
mov
inc
dec
add
jle
sub
add
and
ret
pop
push
iret
arpl
sub
push
xchg
stos
sar
imul
push
rcl
fstp
dec
rcl
dec
aam
dec
(bad)
not
imul
inc
repz
ins
(bad)
push
push
aam
aad
push
or
ret
add
or
test
call
mov
add
mov
rcr
out
pushf
mov
cdq
mov
pop
lods
add
mov
mov
bound
xchg
add
jg
ss
add
stos
fimul
into
mov
mov
mov
cmp
mov
mov
mov
out
mov
sar
(bad)
xlat
out
push
mov
push
fnstcw
ffree
ss
ret
push
int
fsubp
enter
fadd
in
shr
out
repz
es
cmp
cld
sti
inc
(bad)
mov
pop
or
ds
sub
add
pop
dec
inc
mov
push
adc
dec
aas
add
inc
dec
sbb
adc
push
add
inc
inc
inc
cmp
sbb
sbb
sbb
or
cmp
jle
(bad)
and
sbb
adc
and
inc
mov
sub
and
cmp
or
adc
rcr
sub
data16
or
pop
out
pop
xor
and
mov
sbb
or
xor
add
retf
fucomi
ja
or
das
das
pop
daa
test
xor
loopne
int
jne
push
sub
xor
lock
fiadd
and
arpl
inc
push
dec
dec
inc
sub
push
inc
add
pop
inc
or
and
fild
and
daa
repz
push
pusha
xchg
mov
loope
loope
xchg
inc
cmc
inc
shl
xchg
inc
ins
pop
int
cld
sahf
test
icebp
sahf
lahf
lahf
idiv
mov
push
mov
dec
push
test
idiv
rcl
sar
mov
fwait
fwait
cmc
push
addr16
mov
jl
cwde
mov
mov
rcl
mov
(bad)
jbe
add
dec
jmp
mov
push
call
shl
mov
test
mov
out
xchg
test
cli
jmp
add
jmp
inc
mov
(bad)
dec
sbb
cmps
add
inc
pushf
pop
push
movs
and
ds
call
push
mov
dec
out
out
xchg
cmps
test
clc
or
(bad)
(bad)
jmp
and
jmp
adc
test
inc
mov
(bad)
pop
push
xchg
sbb
push
ret
lods
and
add
inc
(bad)
xor
out
call
cs
fcmovbe
call
loopne
out
dec
mov
aaa
mov
mov
or
scas
jg
mov
add
push
xchg
(bad)
jle
nop
call
xchg
aam
mov
fwait
sbb
inc
xchg
push
rcl
popa
shr
retf
xor
rcl
jmp
or
dec
(bad)
mov
jno
pop
inc
fbld
push
mov
xchg
imul
or
inc
mov
mov
push
cdq
ins
js
lods
push
add
inc
add
pop
sub
add
push
int3
push
pop
rol
dec
popa
leave
mov
pop
fnsave
into
jmp
pusha
jae
sahf
test
fwait
out
push
test
mov
(bad)
ds
int
jle
xchg
sbb
repz
sbb
mov
retf
adc
shl
inc
mov
scas
mov
jo
bndstx
out
inc
std
es
fisubr
mov
mov
mov
push
setl
neg
xchg
mov
mov
push
(bad)
loopne
jns
pop
cwde
sahf
cmps
push
lods
pop
lock
les
add
xor
call
call
dec
push
pop
mov
jmp
sub
mov
add
(bad)
std
out
lock
ficom
repnz
jnp
out
push
mov
push
(bad)
dec
push
mov
xchg
push
lahf
push
sbb
cmps
push
stos
pop
sub
sub
inc
shr
add
cs
ret
lds
out
add
add
(bad)
fdivrp
mov
into
(bad)
out
pop
(bad)
push
or
(bad)
out
cwde
and
(bad)
xchg
(bad)
xchg
push
(bad)
out
adc
and
test
xchg
xchg
pop
inc
neg
sub
(bad)
xchg
push
clc
sbb
fmul
push
sahf
movs
and
push
dec
cmps
pop
mov
daa
pop
add
loopne
cs
out
(bad)
jmp
call
cmps
pop
ror
lahf
scas
aad
(bad)
dec
inc
movs
cmp
mov
xchg
adc
aaa
lods
ret
fs
push
arpl
or
jmp
cs
cmp
nop
push
xchg
push
call
cmps
and
scas
daa
daa
and
inc
pop
and
dec
xchg
jmp
lahf
adc
jle
mov
imul
movs
add
call
hlt
hlt
hlt
add
or
push
xchg
pop
rcl
(bad)
js
inc
pop
pop
daa
cmp
xchg
sbb
xchg
sbb
(bad)
shr
mov
fwait
(bad)
mov
fiadd
inc
dec
fistp
lods
inc
push
lods
and
out
pusha
inc
movs
pop
add
adc
adc
ss
adc
in
in
in
(bad)
std
std
call
pushf
pusha
xchg
outs
(bad)
xchg
setb
pop
cdq
shl
sbb
push
movs
daa
push
add
sbb
call
call
fadd
add
(bad)
push
imul
jmp
mov
daa
mov
lods
inc
stos
jl
pop
mov
cmps
pop
add
adc
ficomp
psubq
(bad)
(bad)
fild
fadd
fcos
(bad)
fild
lock
stos
retf
mov
aaa
mov
pushf
jmp
add
inc
xchg
sbb
pushf
inc
xor
push
push
lock
scas
(bad)
jmp
jmp
xchg
mov
mov
jmp
mov
(bad)
scas
push
lods
jo
int3
adc
push
mov
loope
push
pushf
push
cld
cld
cld
(bad)
loop
neg
push
(bad)
fld
jmp
inc
and
idiv
xor
out
jbe
xchg
mov
pop
xchg
stos
rol
daa
pop
push
add
into
(bad)
stc
cli
stc
(bad)
jg
mov
jmp
dec
push
mov
mov
mov
push
cmova
scas
and
es
cmps
mov
dec
aad
movs
push
add
pushf
out
ds
pusha
add
push
add
mov
pusha
add
inc
ret
xchg
xchg
imul
pop
push
add
es
(bad)
cli
sti
mov
xchg
cmps
jge
ret
inc
mov
mov
ret
ret
sub
push
and
mov
pop
outs
in
add
jmp
pop
add
sbb
cmp
ror
adc
enter
inc
pop
in
in
in
jmp
push
cmp
outs
xchg
mov
imul
ret
mov
mov
push
pop
mov
mov
sub
jmp
mov
out
pop
in
repz
icebp
repnz
pushf
sar
out
ss
dec
and
xchg
push
push
ss
add
adc
mov
mov
mov
push
bound
addr16
sub
inc
(bad)
lds
xor
push
push
les
rcl
push
cmp
dec
(bad)
js
iret
add
sar
(bad)
jl
lods
push
outs
mov
add
fist
adc
add
inc
push
outs
into
inc
inc
rol
pop
pop
movs
shl
adc
dec
test
xchg
pop
push
push
xor
xor
inc
or
mov
ins
cli
add
cld
inc
sub
pop
add
xchg
inc
and
ds
cmp
xchg
dec
sti
out
adc
out
das
push
call
nop
push
mov
nop
push
add
test
mov
mov
into
xchg
mov
cmp
push
cmp
pop
(bad)
sahf
loope
sysexit
ret
pop
xor
std
sub
mov
cs
pop
pop
jbe
and
and
mov
cmp
sbb
push
and
add
mov
in
std
out
sti
shl
mov
mov
not
inc
pop
push
int3
pop
bswap
pop
jmp
sbb
out
into
xor
sub
cs
fs
sub
dec
scas
dec
push
daa
lods
add
test
and
push
push
adc
add
fwait
push
mov
out
(bad)
mov
cmp
loope
into
sahf
(bad)
mov
ds
pusha
(bad)
cmp
pusha
imul
push
cmp
(bad)
adc
(bad)
(bad)
sar
pop
(bad)
mov
cs
add
add
(bad)
mov
nop
sahf
push
and
ss
sahf
(bad)
mov
xlat
call
int3
aaa
(bad)
(bad)
fdivrp
or
fdiv
ins
add
aad
inc
rol
aas
shl
iret
push
push
cmp
cmp
add
or
push
aaa
ret
pshufw
cmps
outs
mov
das
mov
loope
aad
cvttps2pi
out
or
mov
fcom
inc
mov
mov
(bad)
jmp
and
rol
call
fldz
inc
xlat
arpl
xchg
loopne
loopne
aam
psrlw
add
int3
es
inc
cmp
es
push
in
(bad)
ret
push
push
push
xor
xor
mov
and
out
adc
dec
pop
or
ret
(bad)
ud0
mov
dec
add
outs
mov
inc
data16
(bad)
(bad)
inc
xlat
fs
aad
inc
push
push
mov
push
inc
rcl
iret
push
int
cmp
cmp
cmp
(bad)
cmp
pop
daa
ss
push
mov
loopne
mov
fisub
and
pop
scas
leave
mov
ins
push
mov
inc
fcomi
inc
mov
push
aad
inc
shl
int
inc
lock
daa
dec
(bad)
push
xchg
pusha
add
push
push
lea
int3
js
(bad)
(bad)
test
aad
daa
int
int
test
out
mov
fisttp
xor
fcmovu
(bad)
(bad)
das
retf
push
test
push
es
fdivrp
sbb
data16
jmp
adc
(bad)
(bad)
mov
jle
jmp
call
jl
mov
test
xchg
push
mov
push
inc
xchg
jo
cmps
(bad)
jle
idiv
inc
into
stos
add
(bad)
lahf
ja
cmp
add
dec
push
pop
xchg
cmp
into
pop
pop
jne
push
mov
lahf
sahf
inc
call
xchg
push
(bad)
inc
add
pop
adc
pusha
pop
mov
cmp
add
dec
pusha
or
xor
jg
add
cmp
or
sub
sub
(bad)
in
jmp
fs
cmp
dec
movs
dec
push
stos
inc
ds
mov
or
or
xor
add
or
sub
mov
aad
cmp
shl
daa
ror
je
jmp
push
pusha
(bad)
fst
call
es
popa
inc
(bad)
(bad)
jae
jne
sbb
pop
sbb
xadd
fcmovnbe
fdivr
sbb
jmp
inc
shr
push
mov
inc
sbb
sbb
push
jmp
ret
shl
dec
push
mov
cmp
add
or
pop
in
(bad)
cs
(bad)
das
inc
xor
cmp
pop
test
dec
call
mov
mov
adc
(bad)
call
sub
cld
and
das
push
jmp
out
push
jbe
cmp
ret
or
lea
push
add
sbb
xchg
inc
call
or
dec
xchg
push
ror
jle
mov
push
and
add
jbe
or
xor
mov
xchg
pop
push
outs
ret
add
add
cmp
loope
dec
mov
ds
lods
mov
xchg
or
or
push
adc
mov
rol
sti
scas
scas
mov
(bad)
pop
push
test
fild
jo
loop
push
cmp
xchg
add
inc
sbb
retf
mov
sub
xor
loopne
lahf
inc
out
mov
push
xor
hlt
popf
cmp
movs
js
sub
into
adc
rol
dec
inc
test
mov
inc
(bad)
in
scas
xor
cs
repnz
add
and
or
into
cmps
xor
mov
mov
and
out
inc
data16
(bad)
out
cmp
scas
sbb
aaa
inc
test
sbb
mov
shl
ror
adc
jge
fdivrp
inc
cmp
mov
xchg
out
sahf
add
out
sahf
or
test
mov
jmp
into
repz
jle
sub
push
sub
imul
lods
dec
daa
mov
and
xlat
scas
call
adc
jbe
popa
mov
not
adc
xchg
or
(bad)
fcmovbe
fld
ret
or
icebp
stc
jmp
dec
mov
mov
push
test
inc
ror
mov
loopne
fwait
sahf
inc
mov
or
mov
inc
dec
push
mov
jmp
mov
mov
lods
xchg
lahf
cs
cmps
retf
xor
cli
jmp
outs
loope
loopne
adc
ror
dec
mov
add
sti
out
ficom
sbb
pop
(bad)
adc
push
push
jmp
dec
fcmovu
dec
jo
mov
adc
add
cs
outs
(bad)
cmp
push
add
push
mov
mov
sbb
js
xchg
sbb
in
in
loop
in
sbb
out
adc
mov
adc
jmp
int
(bad)
out
push
adc
mov
jmp
sahf
shl
push
push
jp
jnp
es
sti
(bad)
cmc
mul
icebp
popa
jnp
or
add
push
xchg
(bad)
hlt
aam
adc
scas
lods
dec
scas
inc
mov
stos
push
cmps
jmp
or
push
adc
mov
push
sahf
rcl
mov
push
mov
(bad)
fld
loope
mov
cli
cld
or
sti
test
inc
or
push
sub
mov
xor
push
push
add
inc
(bad)
dec
(bad)
retf
shr
mov
push
inc
jbe
adc
pop
mov
shl
and
or
ins
add
jle
mov
sahf
cmp
test
test
cmps
outs
or
das
jb
mov
(bad)
mov
or
and
add
xchg
mov
mov
mov
inc
ret
je
ret
inc
icebp
jne
aaa
mov
sub
inc
ss
dec
and
cmps
jmp
mov
mov
ror
and
sbb
inc
sbb
mov
pop
outs
inc
imul
call
call
in
pusha
or
retf
es
mov
je
jbe
mov
push
mov
xchg
scas
ds
mov
push
sbb
out
das
mov
push
mov
out
(bad)
(bad)
xchg
pop
push
pop
cmp
fisubr
cmp
sahf
xchg
pushf
mov
hlt
es
dec
jnp
sub
sbb
xchg
jbe
aaa
mov
mov
pushf
mov
push
cmp
mov
push
in
sbb
mov
arpl
mov
clc
inc
mov
jmp
clc
syscall
mov
lds
mov
dec
retf
lds
inc
mov
es
pop
inc
shl
sbb
(bad)
cmp
ins
xchg
ss
xor
jo
dec
add
sub
xchg
outs
sub
push
jo
aam
shl
(bad)
(bad)
fild
cmps
push
notrack
les
add
ret
ret
into
mov
sub
es
ds
fwait
xchg
scas
fmulp
aad
jno
jno
mov
outs
push
ss
hlt
out
sahf
lock
clc
(bad)
jl
mov
inc
pop
push
sub
mov
out
and
ret
jg
lock
adc
in
push
(bad)
mov
jo
cmc
jmp
push
popf
int
retf
not
jmp
test
into
inc
(bad)
js
add
jmp
mov
test
loopne
dec
loope
mov
(bad)
mov
shl
xchg
mov
push
(bad)
sbb
imul
cmp
mov
lods
mov
dec
(bad)
mov
(bad)
push
leave
nop
(bad)
mov
mov
cmps
cwde
mov
inc
and
lock
dec
jmp
or
scas
add
loopne
add
sbb
sub
sbb
(bad)
das
mov
rcl
inc
fisttp
out
(bad)
(bad)
lock
daa
inc
adc
out
mov
push
mov
(bad)
jo
push
and
push
dec
fdiv
ret
rcr
(bad)
jle
daa
aaa
rol
ja
add
sub
jne
dec
push
add
inc
mov
jecxz
sbb
and
mov
cwde
jae
sub
inc
xchg
call
xchg
dec
push
mov
add
xor
pop
cmps
sub
xchg
dec
add
add
sahf
pop
call
cdq
test
dec
jo
cs
inc
pop
inc
mov
(bad)
mov
inc
dec
xchg
rol
sahf
or
call
push
mov
push
xchg
idiv
(bad)
push
ss
stos
test
loope
scas
call
adc
(bad)
ret
ret
ins
add
cdq
xchg
push
iret
mov
out
or
xchg
ror
adc
stos
std
inc
iret
xchg
test
xchg
out
or
inc
cmp
data16
outs
(bad)
push
inc
out
scas
pop
add
shl
mov
enter
xchg
adc
test
inc
arpl
add
mov
mov
call
mov
and
in
add
xlat
outs
or
cmps
xchg
vmfunc
inc
sub
scas
cmps
push
or
mov
jle
call
inc
sub
lea
push
push
fnstenv
(bad)
ins
or
mov
in
cs
pop
das
mov
inc
add
(bad)
jno
mov
xor
or
scas
aad
xchg
push
jbe
arpl
pop
xchg
ds
lea
mov
push
sub
test
jmp
xchg
xchg
shr
push
jmp
dec
jg
jne
push
or
xchg
fldcw
push
pushf
sub
imul
shr
adc
add
push
push
fidiv
add
movs
mov
xchg
sub
jle
xor
mov
mov
mov
add
fild
adc
sub
mov
sub
cmp
push
(bad)
(bad)
call
or
push
pop
dec
push
fcomip
shl
les
(bad)
(bad)
jmp
and
xchg
aad
dec
out
add
es
jmp
dec
popa
cmp
retf
add
(bad)
jmp
popf
sbb
inc
xor
adc
cmps
pusha
mov
inc
into
add
cmps
imul
(bad)
sub
jnp
mov
arpl
(bad)
bound
mov
sbb
test
push
ror
lea
nop
(bad)
(bad)
mov
mov
and
add
(bad)
mov
jne
scas
(bad)
sbb
(bad)
(bad)
jmp
test
dec
mov
test
mov
pushf
xchg
fld
movs
inc
add
fsub
ror
mov
cmps
mov
sbb
xchg
sahf
aad
xchg
repnz
lock
int
into
push
test
ror
sar
jmp
clc
mov
adc
mov
in
jnp
sar
push
jae
das
and
sar
adc
out
aam
test
das
adc
xor
call
dec
ret
mov
sti
add
daa
ins
out
xlat
scas
sbb
stos
shl
mov
(bad)
jns
das
xor
fwait
pop
mov
sbb
out
js
mov
cmp
dec
ds
stc
fs
sub
(bad)
call
xchg
dec
xor
cmps
stc
sbb
leave
sub
sub
call
add
stc
mov
fwait
mov
add
dec
lea
dec
mov
cmp
adc
dec
mov
cmp
nop
gs
std
daa
fmul
stos
data16
icebp
xchg
jnp
mov
inc
fs
dec
adc
(bad)
(bad)
jmp
popf
inc
or
movs
and
xchg
(bad)
dec
sbb
mov
(bad)
jg
adc
(bad)
(bad)
call
pop
and
mov
out
scas
or
push
dec
mov
xor
xchg
and
add
cmp
mov
or
cmp
(bad)
inc
or
lods
cmp
push
or
fisttp
sbb
xchg
cmp
imul
sub
retf
sar
jno
loop
or
inc
loope
sbb
push
dec
daa
mov
or
(bad)
jmp
mov
fwait
pop
inc
les
mov
fwait
sbb
cmp
not
ss
fstp
xor
jecxz
cmp
sbb
(bad)
inc
jb
popf
das
dec
pop
push
lahf
enter
dec
pop
cmps
xchg
add
(bad)
(bad)
(bad)
(bad)
fisub
mov
outs
jg
pop
mov
mov
cmp
cld
xchg
sbb
loopne
(bad)
fstp
cmp
lods
and
(bad)
xor
cmp
mov
cmp
pop
mov
add
mov
mul
pusha
cmp
mov
test
jbe
pusha
xchg
jo
jnp
jns
loopne
cmps
add
pop
nop
and
pop
(bad)
call
mov
lods
ja
fld
movs
int
xchg
(bad)
into
mov
(bad)
(bad)
(bad)
jmp
inc
jne
dec
jo
inc
dec
jge
pop
js
sbb
pop
mov
arpl
or
(bad)
(bad)
jmp
jp
aaa
sub
aas
push
jo
adc
sub
cmps
push
cmp
cmps
sbb
mov
loope
sbb
mov
call
lea
jp
int3
jns
mov
xor
pop
dec
dec
add
(bad)
push
push
mov
out
imul
mov
mov
push
xor
mov
enter
cli
cmp
add
(bad)
call
mov
outs
pop
pop
fisttp
sbb
imul
lahf
mov
(bad)
(bad)
inc
sub
xchg
sbb
cmp
pop
in
jp
dec
and
adc
je
cmps
cmp
(bad)
call
in
sar
ret
scas
aam
adc
(bad)
out
sbb
aas
bound
(bad)
call
push
fsubr
not
sbb
in
add
fwait
pop
inc
push
mov
jns
push
in
sar
hlt
fild
push
out
cli
nop
scas
or
pop
or
jb
into
(bad)
jmp
aam
mov
call
(bad)
call
imul
ins
dec
in
leave
sub
fbstp
loop
daa
add
repz
pop
mov
je
mov
sub
sub
(bad)
(bad)
fs
jge
jns
mov
mov
rcr
lock
stos
scas
les
(bad)
(bad)
inc
add
cmps
xlat
icebp
mov
sbb
(bad)
call
pop
xor
jae
cmp
rol
sub
clc
dec
cli
and
push
cmps
inc
dec
cli
cmp
(bad)
movs
xor
pop
(bad)
(bad)
(bad)
(bad)
fld
xchg
lds
lahf
movs
stos
pop
mov
sbb
or
cmp
push
mov
int3
sub
mov
call
mov
push
scas
lock
stos
cmp
mov
fadd
mov
call
mov
sahf
mov
sahf
or
rcr
ja
push
in
cld
nop
popf
fsub
(bad)
jmp
xor
ret
pop
idiv
push
icebp
arpl
(bad)
(bad)
push
mov
xor
or
push
clc
out
jae
push
out
or
call
(bad)
jmp
and
out
mov
repz
mov
scas
jns
and
(bad)
call
xchg
arpl
push
pushf
inc
mov
inc
outs
(bad)
add
int3
mov
(bad)
(bad)
(bad)
(bad)
cld
fwait
push
jns
in
push
mov
call
mov
cmp
fcos
(bad)
(bad)
push
(bad)
jmp
out
jl
mov
aam
add
movs
pop
jns
or
test
aas
(bad)
(bad)
(bad)
dec
mov
push
mov
repz
leave
aam
sbb
nop
enter
fnstcw
inc
mov
jecxz
test
clc
(bad)
call
xchg
fs
out
xor
(bad)
cwde
pop
rcl
push
inc
(bad)
inc
sbb
mov
fsub
(bad)
cmp
arpl
test
inc
and
std
(bad)
(bad)
mov
loope
ds
xchg
mov
sub
add
push
pop
add
clc
(bad)
call
adc
(bad)
push
jp
(bad)
retf
sti
sub
ins
inc
add
dec
jmp
ins
pop
loop
lds
ins
push
loopne
sti
inc
inc
inc
xor
inc
(bad)
(bad)
(bad)
push
retf
adc
pop
or
jge
movs
xchg
call
rol
gs
sub
jmp
push
fistp
mov
or
in
mov
jo
lea
pop
outs
mov
(bad)
(bad)
jmp
mov
and
mov
push
mov
ins
clc
test
js
push
adc
jmp
int
sub
adc
cs
sti
je
in
clc
mov
ins
jnp
repnz
(bad)
aas
cld
(bad)
cmps
mov
xchg
push
sbb
dec
cmova
cmc
jg
div
(bad)
mov
jae
pop
pop
fiadd
js
in
ret
(bad)
(bad)
cmp
add
pop
mov
enter
jbe
(bad)
(bad)
dec
fyl2x
nop
repz
sbb
xchg
dec
add
ja
adc
(bad)
(bad)
(bad)
jmp
mov
adc
xchg
pop
aam
retf
jp
dec
in
mov
xor
out
dec
sbb
(bad)
cmp
(bad)
mov
jle
ja
(bad)
push
(bad)
pop
cmc
imul
test
jmp
lahf
(bad)
xchg
or
(bad)
call
push
mov
jp
push
xor
dec
inc
fwait
pop
xchg
loopne
lods
and
and
mov
fptan
xor
call
cmp
jnp
mov
test
or
(bad)
(bad)
push
mov
sub
xor
(bad)
push
sbb
and
inc
inc
sub
and
fcomip
push
jno
outs
stos
into
push
pop
lock
sbb
ret
mov
(bad)
(bad)
(bad)
(bad)
jmp
ins
xor
cmps
inc
repnz
daa
mov
in
or
mov
(bad)
jmp
scas
jmp
pop
inc
stos
sti
mov
cmp
ret
fdivr
xor
out
mov
(bad)
dec
xor
jno
ins
(bad)
mov
jo
xchg
das
cmps
pop
jmp
loop
ins
pop
mov
dec
rol
imul
and
xchg
dec
jmp
movs
dec
xchg
adc
ins
pop
int
into
rcr
ss
aas
and
loope
sbb
ja
mov
in
mov
in
inc
popa
xchg
fcomip
(bad)
dec
outs
cmc
pop
xchg
js
ret
inc
cmp
std
add
jo
test
(bad)
(bad)
(bad)
inc
push
aad
mov
es
arpl
je
pop
jecxz
sub
jbe
fcomp
push
(bad)
(bad)
(bad)
jmp
xchg
sub
or
outs
xchg
jmp
fisttp
addr16
xchg
aaa
aaa
(bad)
(bad)
(bad)
push
fucomi
dec
add
dec
push
(bad)
jo
dec
test
jmp
cmp
sub
cmp
ja
repnz
pop
cmp
cmc
mov
(bad)
stc
mov
mov
push
adc
or
or
sbb
loop
movs
pop
mov
xchg
aam
cli
(bad)
(bad)
call
or
outs
sbb
pushf
outs
rol
loope
add
xor
(bad)
(bad)
(bad)
add
sub
lock
cmp
sub
stc
pop
inc
push
adc
add
cmp
inc
mov
movs
(bad)
cmps
add
pop
dec
popa
(bad)
(bad)
(bad)
(bad)
jmp
inc
popf
xor
fsubr
outs
data16
repnz
jl
mov
loope
cmp
inc
sub
movs
pushf
mov
scas
dec
fnstenv
ins
mov
and
jmp
outs
nop
jmp
mov
pop
or
(bad)
(bad)
jmp
mov
push
ror
out
out
dec
cmp
nop
pop
pusha
xchg
add
out
imul
(bad)
push
mov
retf
stos
sub
mov
jge
or
push
jmp
fsubr
(bad)
(bad)
mov
pop
sub
pop
ds
js
xor
and
lea
mov
fmul
pop
push
pop
retf
cmp
ja
movs
ds
aaa
xlat
clc
sbb
(bad)
(bad)
(bad)
jns
lahf
jbe
ret
sti
outs
adc
(bad)
dec
loope
dec
mov
imul
mov
mov
or
(bad)
(bad)
jmp
dec
fcom
inc
(bad)
(bad)
mov
ficomp
cmp
sbb
(bad)
(bad)
fcomi
and
iret
dec
xchg
cmp
or
imul
cs
xchg
js
ret
inc
xchg
rcr
stc
sbb
mov
aad
(bad)
(bad)
dec
xor
or
or
and
dec
mov
jge
dec
mov
(bad)
fbstp
imul
mov
inc
xchg
lahf
jae
sub
mov
mov
or
sbb
dec
inc
adc
adc
adc
cdq
xlat
(bad)
(bad)
(bad)
call
lds
out
into
into
jbe
jg
cmp
pop
adc
push
movs
sub
(bad)
(bad)
(bad)
(bad)
mov
xor
scas
sbb
jl
retf
dec
mov
push
iret
fsubp
enter
(bad)
(bad)
(bad)
inc
sar
xor
daa
hlt
or
arpl
pop
scas
add
jae
pop
out
aas
inc
es
(bad)
(bad)
(bad)
push
sub
jb
push
push
nop
xor
iret
scas
cs
dec
push
cmp
std
mov
fwait
test
adc
inc
scas
dec
xchg
push
adc
jo
cdq
outs
(bad)
(bad)
(bad)
push
(bad)
pop
inc
jge
sub
xor
mov
sahf
dec
js
mov
ins
push
(bad)
(bad)
cli
pop
dec
jbe
jg
add
(bad)
and
out
lds
add
(bad)
(bad)
mov
sahf
and
pop
inc
push
mov
cli
test
xor
mov
(bad)
(bad)
(bad)
call
mov
xchg
xchg
sub
int
inc
daa
lea
push
(bad)
(bad)
(bad)
inc
sti
mov
mov
jbe
sbb
lea
clc
repnz
aad
and
mov
fsub
shl
sahf
fisttp
cmp
or
retf
mov
(bad)
(bad)
cld
cmp
mov
or
in
sar
in
fmul
xchg
cmps
cli
cmp
pop
mov
xor
sub
xlat
sub
andps
out
mov
xchg
xchg
cmp
ds
daa
inc
call
(bad)
mov
sub
aas
or
add
or
jns
cld
(bad)
in
(bad)
dec
sbb
test
mov
xor
les
lods
rol
push
ret
iret
clc
(bad)
(bad)
jmp
nop
imul
addr16
push
ja
dec
dec
ficom
sub
call
sti
sbb
ja
dec
sub
add
fcomp
test
or
add
mov
mov
push
repnz
sub
mov
call
fs
push
sub
pop
clc
mov
jae
ja
test
(bad)
(bad)
call
xlat
ds
out
pop
ss
lock
inc
dec
jl
sbb
inc
pop
mov
mov
ret
push
(bad)
(bad)
jmp
sbb
xchg
inc
sbb
repnz
cmp
adc
iret
push
pop
sar
(bad)
mov
push
repnz
lahf
xchg
cmc
ss
and
mov
aam
cmps
je
arpl
(bad)
(bad)
(bad)
push
(bad)
dec
das
int
nop
rol
in
ret
mov
or
inc
and
sbb
push
xchg
popa
(bad)
(bad)
(bad)
(bad)
mov
dec
in
retf
int
push
adc
mov
mov
std
repz
lock
(bad)
jmp
(bad)
call
(bad)
or
jle
xor
(bad)
sub
outs
(bad)
call
push
(bad)
jmp
inc
dec
gs
ret
loop
clc
dec
or
dec
xor
xor
cld
call
jmp
jg
sub
mov
jmp
ret
fisttp
not
retf
jg
cdq
pop
xchg
mov
cmps
mov
pusha
pusha
pop
xor
icebp
(bad)
(bad)
mov
out
mov
fwait
and
shl
iret
movs
dec
mov
ja
movs
mov
xor
int
lds
(bad)
data16
in
addr16
(bad)
fadd
lahf
sbb
mov
cwde
sbb
and
(bad)
call
fs
xor
sub
sub
ret
(bad)
(bad)
(bad)
mov
fist
out
cs
imul
icebp
adc
pop
push
dec
les
(bad)
inc
dec
and
cmp
inc
icebp
push
xchg
aaa
and
gs
push
sahf
test
push
push
sbb
in
mov
les
jl
push
mov
inc
test
mov
repz
aas
push
(bad)
cmp
icebp
call
into
sub
xchg
fcomip
rol
pop
ret
xor
addr16
mov
fwait
inc
cmc
sub
pop
lea
mov
adc
fnstenv
(bad)
(bad)
(bad)
cld
mov
xchg
pop
scas
inc
mov
jge
(bad)
xor
push
and
cmp
add
xchg
jo
das
adc
call
int3
jmp
xchg
mov
(bad)
sar
(bad)
(bad)
push
pop
adc
rcr
sbb
cmps
push
daa
xlat
jg
pop
sub
(bad)
(bad)
(bad)
call
cmp
(bad)
push
jb
adc
cmp
retf
dec
or
(bad)
dec
add
shr
sub
dec
imul
pusha
xchg
sub
xchg
xchg
pop
out
(bad)
(bad)
(bad)
inc
call
xor
sbb
les
xchg
in
(bad)
(bad)
(bad)
jmp
enter
dec
mov
stos
xchg
sbb
and
adc
bnd
in
jns
stos
dec
adc
and
dec
jecxz
ins
mov
cmp
aam
(bad)
jg
stos
jg
xchg
lds
cmp
mov
ja
jae
rcr
cli
pusha
sub
movs
imul
daa
ror
and
mov
jmp
test
dec
(bad)
(bad)
(bad)
dec
xor
sub
les
pusha
retf
ret
inc
pop
repz
fst
cli
(bad)
(bad)
push
and
xor
cmp
into
out
mov
jl
(bad)
xchg
bound
mov
(bad)
retf
jno
pusha
addr16
sub
adc
(bad)
sub
mov
(bad)
(bad)
(bad)
(bad)
cld
xlat
jle
jl
or
mov
adc
arpl
daa
dec
in
stos
add
sbb
(bad)
(bad)
jmp
call
jno
aad
dec
leave
call
push
inc
fs
leave
mov
outs
(bad)
(bad)
(bad)
(bad)
jle
arpl
cli
ja
js
adc
mov
ss
mov
int
adc
(bad)
call
dec
imul
inc
pop
cld
call
mov
mov
int
jno
in
jmp
cmps
mov
mov
pusha
or
(bad)
(bad)
(bad)
(bad)
in
xchg
jns
mov
test
ret
pop
push
add
(bad)
jmp
test
retf
lods
dec
lock
cs
test
push
les
(bad)
dec
movd
xchg
inc
fcomip
(bad)
push
mov
loope
repz
mov
cmp
sub
(bad)
cmp
pop
sahf
mov
jns
sub
push
lods
nop
push
dec
lock
mov
(bad)
ja
ja
arpl
jecxz
add
push
ja
clc
(bad)
(bad)
out
cli
ins
das
add
in
rcr
adc
fmul
(bad)
(bad)
(bad)
dec
jecxz
jmp
movs
fistp
rcr
jl
fnstsw
dec
mov
(bad)
(bad)
call
test
(bad)
cmps
sub
add
add
adc
dec
std
(bad)
(bad)
(bad)
mov
dec
jge
outs
push
mov
sbb
div
ss
shr
add
(bad)
jg
pushf
fisttp
cmp
or
sbb
shl
lea
popa
xchg
mov
daa
js
or
clc
cmp
jg
out
dec
(bad)
dec
adc
clc
pop
inc
sbb
dec
cmp
mov
rol
inc
dec
scas
xchg
(bad)
(bad)
jmp
xor
das
(bad)
pop
push
dec
push
daa
(bad)
hlt
add
add
fmul
push
and
(bad)
inc
sub
adc
shl
jg
into
jge
jae
inc
pop
popa
cs
rol
or
aaa
loope
sahf
xor
add
test
push
sbb
std
shr
adc
(bad)
jg
jb
hlt
push
fldcw
mov
pop
cmps
ins
mov
inc
mov
mov
add
leave
mov
cmp
sbb
push
lods
call
push
lock
or
dec
mov
inc
rcr
loopne
lock
cmp
jl
out
or
ror
(bad)
mov
(bad)
dec
ret
push
jg
popa
loopne
mov
mov
inc
xchg
(bad)
(bad)
(bad)
les
daa
shl
out
fxsave
mov
rol
aas
jmp
jbe
aaa
rol
in
inc
dec
into
push
inc
adc
pop
lock
dec
bound
mov
cs
fnsetpm(287
push
jbe
out
outs
mov
das
adc
mov
(bad)
push
pop
mov
(bad)
(bad)
(bad)
jmp
lahf
push
call
adc
fnstcw
hlt
repz
jg
lods
imul
mov
jle
aad
adc
cwde
mov
push
push
dec
adc
cwde
xor
scas
push
adc
mov
into
pop
and
xchg
sar
jmp
lock
cli
xor
mov
and
jae
fldcw
inc
xchg
sub
xchg
ja
cmp
movs
cld
shl
in
stc
retf
(bad)
(bad)
(bad)
(bad)
fiadd
adc
(bad)
mov
mov
adc
and
sub
out
clc
inc
clc
and
popa
pop
mov
lds
adc
fs
(bad)
dec
or
adc
push
pop
mov
clc
cmp
mov
mov
(bad)
(bad)
(bad)
call
ret
ret
repnz
jno
mov
sbb
outs
clc
inc
ror
adc
test
sub
and
sbb
xor
or
sahf
or
mov
inc
mov
add
and
stos
outs
mov
(bad)
(bad)
(bad)
jmp
and
into
xchg
(bad)
cld
loope
xlat
scas
push
gs
xchg
add
mov
shl
fmul
idiv
(bad)
call
or
mov
ret
xor
sub
cmps
pop
mov
pop
pop
(bad)
(bad)
jmp
jno
mov
inc
int
sub
adc
jbe
jb
daa
int3
fsubr
mov
in
(bad)
js
shl
retf
xlat
jge
in
sahf
xchg
mov
jmp
(bad)
jmp
enter
jp
add
popf
mov
rol
movs
adc
pushf
std
(bad)
(bad)
dec
lock
inc
hlt
jb
loop
fbld
adc
sub
std
push
push
mov
mov
les
gs
pushf
add
les
jmp
xor
inc
cmps
inc
pop
cli
sbb
or
mov
mov
(bad)
push
push
loop
ja
sub
dec
(bad)
iret
xchg
xchg
dec
retf
cs
and
xchg
dec
(bad)
pop
inc
xor
or
add
sub
adc
cmc
pop
repnz
test
lods
call
jmp
not
mov
lahf
sar
pop
(bad)
jmp
icebp
aam
push
mov
fldcw
sub
jae
popf
adc
call
(bad)
jmp
pop
xor
out
fsub
sub
in
loope
push
outs
xchg
cli
fild
or
push
jb
(bad)
call
test
add
lea
call
retf
in
push
dec
pop
sub
mov
push
adc
jbe
xlat
rcr
adc
test
xchg
mul
(bad)
(bad)
jmp
cwde
stos
ror
and
pop
imul
and
mov
pop
ss
xchg
movs
(bad)
inc
jle
xchg
sub
cmp
xchg
(bad)
(bad)
out
dec
jo
bound
rcr
jnp
enter
cmc
pushf
fdiv
cld
repz
in
xchg
push
(bad)
jg
dec
stos
jne
or
xchg
ds
sub
inc
call
adc
push
sbb
jae
in
cmc
outs
and
out
xor
and
pop
(bad)
push
ret
dec
repnz
mov
test
repnz
mov
dec
adc
mov
mov
repnz
sbb
popa
push
punpckhbw
pop
cmp
(bad)
fcomip
add
adc
sbb
into
or
(bad)
call
cwde
adc
clc
cmp
cmp
loopne
fwait
mov
into
cwde
xchg
ja
call
push
mov
pop
jecxz
pop
mov
mov
cmp
(bad)
(bad)
(bad)
jge
es
pushf
mov
out
cmp
cmp
mov
jmp
es
(bad)
(bad)
dec
jne
and
retf
movs
mov
push
lods
cmps
inc
stos
pusha
or
sub
add
(bad)
jmp
test
push
mov
sub
leave
xor
add
pop
mov
fwait
inc
call
aaa
ret
(bad)
push
pusha
mov
dec
sub
add
cmc
out
in
mov
int
adc
inc
push
call
gs
mov
sub
(bad)
(bad)
jmp
xor
push
std
add
push
fst
loop
test
xchg
jle
lods
mov
nop
pop
add
(bad)
(bad)
call
push
cmp
add
(bad)
out
dec
addr16
pop
inc
repnz
xchg
out
ins
jae
cmp
aad
mov
mov
mov
iret
mov
add
sbb
fbld
xchg
cli
(bad)
push
bound
cmp
xor
call
lahf
mov
gs
push
adc
sar
cmp
in
fistp
and
nop
in
mov
ja
enter
stos
inc
pop
cmp
sti
sbb
cmp
fcom
leave
imul
nop
icebp
rol
(bad)
push
sub
pop
xor
std
push
clc
sti
mov
jbe
stos
fsub
call
mov
sub
ret
xor
ret
jp
movs
in
bound
int
rcr
inc
dec
in
je
and
sbb
jb
dec
inc
fwait
jle
popf
sub
mov
(bad)
fcomip
out
test
mov
jge
lock
outs
mov
mov
mov
(bad)
sbb
push
fst
(bad)
(bad)
call
xor
dec
xchg
idiv
jbe
loopne
sub
sbb
dec
cmc
push
ja
mov
xor
inc
pusha
(bad)
(bad)
(bad)
jmp
fnsave
xchg
jb
xor
fsubr
mov
xchg
imul
ins
cmp
sar
mov
mov
sub
and
scas
pusha
pushw
and
test
(bad)
lods
leave
call
mov
in
fcmovu
clc
mov
dec
jp
push
setae
xor
sbb
dec
cwde
(bad)
(bad)
fcomip
add
mov
add
(bad)
into
loop
in
add
pop
ficom
or
retf
(bad)
(bad)
(bad)
jmp
lods
fimul
cld
mov
and
out
fistp
mov
jo
out
mov
stos
adc
(bad)
(bad)
call
push
ja
pop
xor
sub
ins
popf
push
pop
mov
(bad)
cwde
jne
xor
mov
mov
xchg
adc
call
in
fld
inc
and
retf
sub
test
int3
inc
(bad)
into
push
mov
cmc
and
mov
jnp
xor
mov
call
dec
call
(bad)
dec
cli
in
mov
stc
jo
js
test
fldcw
cmps
shr
push
movs
and
jg
popa
mov
mov
sbb
sub
stc
sbb
retf
mov
jecxz
cmp
mov
pop
cmc
call
mov
mov
fs
scas
in
sbb
lea
(bad)
cmp
add
and
bound
call
(bad)
(bad)
call
mov
stc
int3
fild
jl
jmp
add
adc
(bad)
(bad)
(bad)
push
dec
cmps
out
mov
call
cwde
icebp
dec
dec
push
test
add
(bad)
in
inc
mov
(bad)
call
mov
das
pop
and
inc
pop
mov
lods
or
cdq
or
jnp
xchg
stos
push
lea
jns
mov
shl
(bad)
call
cmps
(bad)
scas
xlat
outs
sub
sub
(bad)
mov
outs
lea
jle
add
stos
(bad)
mov
test
loopne
nop
sub
adc
jmp
sub
mov
push
xchg
(bad)
(bad)
(bad)
jmp
test
cmc
inc
xor
addr16
adc
int
xchg
pushf
and
fisttp
pushf
xor
data16
outs
clc
mov
xor
mov
fbld
mov
mov
add
call
je
ss
push
adc
jg
jmp
hlt
adc
imul
and
das
mov
pop
dec
lea
test
xlat
pop
inc
push
ja
cmps
fucomip
dec
push
mov
push
addr16
sub
gs
mov
stc
adc
mov
mov
(bad)
jae
fwait
je
(bad)
aad
adc
sub
pop
adc
stos
es
(bad)
(bad)
jmp
dec
jge
adc
sbb
add
mov
xchg
or
add
xor
lds
in
mov
xor
xor
retf
test
shr
fst
fstp
xor
adc
sbb
leave
test
stc
fnstcw
pop
or
fadd
push
push
(bad)
(bad)
call
xchg
mov
xchg
cmc
(bad)
pop
xor
xor
pop
mov
imul
outs
test
xchg
inc
pop
add
pop
(bad)
out
xchg
cmp
imul
sar
scas
int3
add
mov
ret
sub
mov
arpl
cld
(bad)
(bad)
inc
(bad)
jmp
mov
cwde
mov
xor
popf
aam
es
loop
fs
jo
aaa
cld
push
(bad)
or
cmc
jle
(bad)
mov
or
xor
ret
xchg
adc
in
add
mov
aad
sti
movs
adc
call
cdq
and
and
jmp
fistp
ss
stos
and
lock
or
iret
mov
pop
hlt
call
scas
xchg
hlt
xchg
int3
push
addr16
xchg
outs
loop
adc
mov
push
imul
push
fisttp
repz
repnz
adc
icebp
push
fld
(bad)
xchg
and
das
jo
lods
dec
pop
mov
aam
xlat
test
(bad)
repnz
(bad)
(bad)
(bad)
(bad)
mov
pop
mov
pop
pop
idiv
in
das
xor
aas
retf
xor
sahf
xchg
xchg
mov
or
faddp
mov
xor
dec
je
cwde
mov
add
stc
jmp
cmp
loop
and
jae
test
(bad)
(bad)
push
inc
dec
mov
loope
cli
xor
je
and
movs
jne
daa
jmp
ss
sar
rol
push
jbe
cmp
push
neg
(bad)
(bad)
(bad)
inc
push
les
inc
jecxz
mov
xor
(bad)
jge
jbe
inc
js
or
(bad)
call
inc
or
out
jecxz
dec
or
mov
mov
cmp
loopne
(bad)
(bad)
(bad)
jmp
icebp
fst
adc
and
mov
mov
sahf
and
or
ja
inc
mov
jle
mov
and
sbb
inc
pop
push
mov
mov
dec
retf
leave
fs
(bad)
(bad)
(bad)
jp
dec
inc
mov
jg
pusha
ss
push
and
push
push
lds
shl
(bad)
jmp
div
test
push
aad
fwait
push
mov
sbb
gs
(bad)
inc
mov
sub
test
sbb
dec
pop
scas
sbb
(bad)
(bad)
(bad)
jmp
popf
inc
mov
fidiv
inc
and
cwde
scas
push
sub
jmp
stos
div
nop
mov
(bad)
(bad)
call
enter
xchg
mov
jg
and
jle
stos
das
add
xchg
push
lea
clc
pop
or
push
in
mov
inc
sub
xchg
sbb
(bad)
(bad)
out
cli
in
in
out
ds
xchg
movs
shl
sub
inc
or
and
daa
out
(bad)
(bad)
(bad)
call
jmp
sbb
cwde
sub
pop
push
jnp
adc
sub
(bad)
dec
not
and
in
jg
inc
dec
push
inc
sub
sub
mov
inc
lahf
loope
movs
jae
or
shr
das
iret
jmp
das
push
sbb
jne
in
cmps
mov
nop
fyl2x
(bad)
icebp
and
and
(bad)
pop
mov
mov
call
pop
xor
sbb
repz
cmp
inc
jle
(bad)
(bad)
(bad)
(bad)
fild
sbb
clc
aam
movs
test
out
(bad)
movs
(bad)
jmp
(bad)
into
call
xchg
inc
and
in
jae
data16
mov
xchg
or
sub
xlat
jg
mov
(bad)
(bad)
inc
es
mov
lock
(bad)
loopne
pop
movs
cmp
mov
fisubr
cld
call
ins
out
retf
adc
jg
aaa
cdq
and
(bad)
jmp
jmp
pop
jp
rcl
cwde
js
push
shl
into
imul
jmp
push
movs
xchg
mov
(bad)
test
jmp
loope
pop
leave
dec
pop
out
(bad)
(bad)
(bad)
call
jb
neg
retf
jo
adc
js
jmp
jmp
ret
cld
add
jo
jno
add
and
xlat
mov
(bad)
(bad)
call
jmp
pop
jmp
cmp
jge
fmul
clc
dec
push
xor
mov
je
jno
add
stos
sbb
aam
jg
enter
nop
stos
cmp
movs
mov
cmp
sbb
xchg
push
jmp
sbb
or
push
out
ds
(bad)
(bad)
call
shr
pop
mov
mov
movs
lea
inc
jo
mov
jmp
repnz
mov
sub
icebp
pop
xor
mov
(bad)
(bad)
inc
sub
mov
jnp
ret
scas
mov
fs
ds
scas
push
add
dec
mov
mov
std
mov
sbb
jo
(bad)
(bad)
jg
xor
(bad)
ficom
push
push
leave
std
mov
push
mov
jmp
icebp
inc
out
cwde
in
mov
mov
sbb
pop
and
pop
cmp
js
(bad)
ins
and
outs
in
(bad)
(bad)
(bad)
jmp
inc
push
ret
inc
mov
test
pop
cdq
test
retf
push
cli
fsub
out
fsubr
nop
add
call
or
icebp
(bad)
popf
xor
loopne
sub
sub
(bad)
(bad)
(bad)
dec
pushf
push
stos
mov
inc
push
mov
pop
ret
cmp
mov
sets
clc
dec
jl
cwde
aam
hlt
imul
inc
imul
(bad)
(bad)
jmp
hlt
mov
popf
ds
pop
pop
push
mov
lods
int
(bad)
(bad)
(bad)
call
or
mov
loop
lods
ret
clc
cmp
push
fdivr
xor
dec
pop
or
pop
adc
and
push
aas
(bad)
xchg
jbe
adc
jl
inc
mov
dec
push
jb
popf
pusha
jle
cmp
ret
lahf
aam
push
or
movs
test
(bad)
dec
pop
mov
ins
mov
jno
fadd
or
and
cli
shl
cmp
and
mov
pop
sahf
push
stc
sti
fidiv
add
icebp
jbe
add
repnz
mov
out
cs
fisub
cs
fcomip
inc
ss
or
inc
cmps
aad
repz
xchg
pop
or
(bad)
dec
mov
jle
out
lea
ret
retf
and
lds
call
jbe
rol
jb
popf
mov
stos
mov
sub
inc
and
(bad)
(bad)
push
or
out
cmp
(bad)
mov
xchg
inc
xor
sbb
imul
jmp
push
ss
out
fwait
lahf
test
movs
pushf
sub
outs
cmp
mov
sub
adc
fistp
lahf
and
jp
jg
test
and
push
or
mov
add
cs
fdivr
std
pusha
inc
mov
dec
pop
iret
(bad)
(bad)
(bad)
mov
sbb
push
sbb
mov
mov
mov
inc
mov
bnd
(bad)
(bad)
(bad)
mov
mov
rol
cld
inc
mov
or
(bad)
fldcw
imul
dec
mov
push
push
dec
fwait
lds
sbb
xor
pop
lock
mov
sbb
fimul
jae
mov
fldcw
ret
sub
fs
jb
ror
push
xor
sbb
jg
outs
sti
jecxz
mov
dec
stos
std
hlt
jb
sub
adc
cli
jmp
loopne
or
lahf
xor
dec
nop
push
mov
jmp
and
stc
adc
sub
imul
dec
add
notrack
ret
clc
psllw
cmc
dec
call
rol
mov
pop
pop
dec
aaa
mov
jmp
in
pop
adc
icebp
(bad)
fnstenv
es
inc
push
rol
jecxz
sbb
lock
xchg
cmp
or
pop
mov
rcl
pop
fidiv
xchg
out
push
hlt
int3
cmp
dec
rcl
pop
inc
mov
(bad)
(bad)
(bad)
push
add
cmps
xor
rol
sti
cwde
cld
ja
sti
push
daa
loope
lea
mov
stos
(bad)
inc
jbe
add
test
lods
push
lods
shl
adc
jne
mov
xor
mov
inc
adc
fmul
jae
push
daa
(bad)
cmp
loope
pop
or
jmp
sbb
adc
cmp
xchg
sub
cmp
xchg
or
dec
xchg
pop
lahf
jmp
sar
and
xor
popa
push
adc
ds
fstp
xor
(bad)
(bad)
dec
or
cmc
mov
cmp
lahf
fldcw
push
shr
mov
add
sbb
xchg
retf
hlt
(bad)
(bad)
(bad)
jmp
aaa
hlt
sbb
mov
cld
cmc
push
ret
out
ret
adc
pop
cli
adc
(bad)
jmp
mov
inc
mov
pop
cmp
enter
mov
call
idiv
das
xchg
dec
sub
push
mov
test
stc
pop
or
push
push
stos
inc
jmp
pushf
inc
repnz
into
mov
inc
add
int
pop
(bad)
(bad)
(bad)
(bad)
jl
cmp
mov
xor
jns
adc
test
in
sub
(bad)
(bad)
(bad)
call
or
push
cmp
or
scas
js
add
pop
inc
jb
xchg
inc
push
icebp
sar
(bad)
(bad)
inc
(bad)
mov
cmp
xchg
jg
jae
test
stos
pop
mov
fdiv
push
mov
(bad)
(bad)
js
scas
mov
cmp
fdivr
xor
sub
jns
int
push
push
rol
(bad)
(bad)
(bad)
inc
lea
movs
sub
and
or
push
(bad)
sbb
test
movs
pop
scas
cmp
pop
sub
(bad)
(bad)
inc
enter
and
push
loope
xlat
add
mov
xor
idiv
(bad)
(bad)
mov
je
jl
enter
hlt
cdq
mov
adc
sbb
shl
(bad)
(bad)
push
stos
push
mov
push
loope
lahf
jmp
imul
jmp
popf
hlt
pusha
cmp
ins
sbb
push
sbb
call
popf
sbb
js
hlt
outs
call
or
fs
je
in
std
pop
pop
(bad)
(bad)
(bad)
(bad)
cli
dec
mov
and
sbb
bound
xor
mov
call
mov
icebp
dec
push
in
dec
xor
shl
mov
mov
out
shl
push
cmp
inc
mov
pop
xlat
push
or
sub
(bad)
stos
xchg
and
in
mov
aad
(bad)
jmp
or
sbb
adc
ins
(bad)
popa
mov
push
jmp
daa
cmp
cwde
adc
xlat
mov
enter
inc
pop
fdivr
or
(bad)
push
fidivr
pop
inc
push
out
jecxz
dec
sbb
push
sub
add
imul
(bad)
dec
cmps
call
cmc
(bad)
(bad)
inc
push
cmp
pop
lods
jmp
add
mov
clc
aam
dec
cmps
mov
lods
push
lods
pop
test
popf
cld
outs
dec
outs
arpl
clc
ds
mov
push
or
scas
mov
adc
repz
push
aam
in
add
cmp
pop
and
lock
call
fs
jmp
mov
pop
lods
mov
in
or
leave
(bad)
(bad)
jmp
inc
rep
lods
outs
pop
xchg
dec
call
or
fwait
xchg
dec
dec
adc
or
mov
cmp
stos
(bad)
call
inc
lods
push
in
xchg
add
push
pop
sub
mul
fstp
lock
je
add
jmp
call
(bad)
out
rol
ins
pop
fist
add
shl
cmp
pop
int3
mov
(bad)
jmp
pop
(bad)
in
retf
adc
sbb
in
pop
and
ret
jno
mov
ins
aaa
sbb
(bad)
clc
pop
push
sbb
fmul
jle
nop
hlt
daa
out
(bad)
(bad)
inc
mov
out
xor
es
lahf
dec
mov
rcr
inc
ret
aaa
popf
push
fs
mov
shr
dec
xchg
cmps
aad
pop
nop
push
popf
adc
(bad)
call
mov
jg
xor
cmp
sti
fistp
nop
(bad)
mov
bound
rcl
sbb
mov
xor
or
fld
dec
jo
fs
or
hlt
cld
scas
out
mov
scas
sbb
lds
mov
cmc
stos
jg
sar
xor
push
pop
ds
scas
clc
(bad)
dec
mov
mov
mov
mov
(bad)
mov
jno
enter
out
jne
adc
and
add
cmp
cmp
jmp
cld
inc
xchg
cmc
pop
sbb
cmp
pop
ret
mov
bswap
add
ret
test
call
(bad)
xchg
adc
(bad)
(bad)
dec
push
leave
jae
add
sub
mov
stos
xchg
in
retf
test
pop
(bad)
(bad)
call
push
das
xor
(bad)
iret
data16
inc
ds
inc
(bad)
(bad)
(bad)
call
lahf
lds
inc
jae
mov
push
fwait
js
int
jg
push
fcmovnu
pop
icebp
(bad)
(bad)
fdiv
pop
xchg
xchg
ss
xor
sbb
cmp
in
pop
or
mov
pop
mov
repnz
and
adc
(bad)
sub
sbb
retf
ss
ret
sbb
inc
cwde
out
pop
xchg
gs
cmps
aas
pop
das
stos
cmps
push
fcom
cwde
retf
imul
es
ja
movs
(bad)
fstp
add
jb
mov
jb
(bad)
inc
test
or
cmp
aad
or
rcr
fild
dec
sub
or
popa
push
mov
pop
cmp
dec
loopne
jl
push
jp
lods
or
mov
aaa
mov
call
inc
jo
in
(bad)
sbb
push
push
mov
add
out
and
ret
dec
push
xchg
jecxz
xor
cld
fdivr
add
clc
rcr
jae
movs
add
scas
cmps
(bad)
(bad)
(bad)
call
pop
sub
mov
sti
adc
shl
mov
push
dec
pop
(bad)
(bad)
(bad)
(bad)
jmp
mov
lods
cmp
sti
vmptrld
jmp
sbb
mov
mov
rcl
retf
cmps
outs
push
rep
add
int
jno
test
into
push
mov
jg
lock
jp
cmp
imul
call
shl
pop
jle
sub
call
(bad)
rol
xchg
push
dec
xor
mov
cmp
rcl
pusha
pop
bound
mov
fs
adc
adc
(bad)
(bad)
mov
push
inc
loopne
movs
lods
addr16
scas
jns
fcomip
fcom
xor
(bad)
(bad)
dec
mov
cwde
stos
cmp
mov
inc
movs
imul
icebp
in
cmp
or
push
inc
adc
cmp
loopne
pop
jp
sbb
inc
mov
std
push
pop
mov
mov
dec
mov
ret
jo
(bad)
(bad)
out
test
outs
push
xchg
cdq
stos
int3
pop
(bad)
mov
sbb
gs
call
(bad)
jge
add
mov
(bad)
dec
inc
daa
je
ss
pushf
pop
dec
mov
pop
(bad)
lods
mov
int
or
ja
mov
(bad)
into
or
add
cmc
cmp
xor
xor
movs
ja
mov
xchg
cmp
ror
(bad)
dec
(bad)
cmp
cs
cld
xlat
cmp
in
(bad)
(bad)
out
mov
rcl
call
bound
mov
(bad)
(bad)
(bad)
push
adc
out
cdq
and
int
and
pop
push
idiv
lahf
xor
xchg
arpl
pop
add
(bad)
fsubr
je
mov
lds
xor
and
add
icebp
jl
jo
pop
push
neg
leave
enter
xlat
aas
jmp
aaa
jl
dec
retf
aaa
add
inc
jg
aas
(bad)
pushf
add
and
(bad)
(bad)
(bad)
jmp
adc
mov
pop
out
mov
sbb
mov
retf
stos
icebp
sub
dec
adc
sub
loopne
(bad)
push
das
clc
add
pop
das
cmovle
movs
enter
sbb
cmp
and
jp
test
enter
push
call
dec
jns
cwde
xor
test
mov
test
xchg
fsub
(bad)
out
cmc
test
adc
call
pop
or
dec
loop
or
mov
mov
pop
mov
or
sub
out
psadbw
inc
jns
mov
aam
gs
mov
mov
pop
retf
inc
pop
xlat
or
loope
adc
mov
adc
and
mov
xor
sbb
xor
sbb
jns
(bad)
pop
(bad)
(bad)
(bad)
call
push
cmps
xlat
jge
sub
add
movs
mov
daa
or
push
imul
scas
xchg
aaa
ficom
lock
outs
mov
cld
dec
ret
out
cmp
in
xchg
(bad)
(bad)
fcomip
sbb
cs
pop
cmp
cmp
mov
xor
mov
or
push
pop
dec
pop
iret
jge
mov
mov
(bad)
mov
sub
mov
xchg
dec
jge
mov
dec
pop
inc
daa
mov
cli
ja
mov
jae
loop
push
sbb
or
fbld
or
mov
retf
adc
out
cld
(bad)
(bad)
inc
mov
mov
repnz
mov
test
xor
add
xchg
push
push
cs
ret
stos
cmp
(bad)
(bad)
(bad)
jmp
rcr
daa
iret
jne
dec
push
fabs
push
pop
imul
rcl
pop
in
loope
xchg
cs
adc
loop
loopne
das
aad
out
scas
and
push
les
mov
call
(bad)
cmp
fnstenv
add
retf
pop
fidivr
loop
adc
iret
adc
xor
pop
xchg
fcomp
test
lahf
daa
hlt
out
xchg
mov
ret
sahf
or
sahf
mov
(bad)
or
scas
clc
(bad)
push
repz
retf
xchg
mov
dec
and
and
sti
scas
mov
call
out
cdq
lds
pop
in
(bad)
(bad)
jg
inc
cli
into
(bad)
daa
shr
rcl
xor
xlat
jnp
sub
mov
xor
(bad)
(bad)
call
and
mov
jnp
js
(bad)
rcl
imul
mov
sbb
imul
add
ins
sti
rol
call
mov
retf
in
addr16
dec
clc
sbb
mov
fucomip
cmp
jmp
sub
out
idiv
shr
stos
mov
jbe
jge
aad
mov
(bad)
call
pop
ficom
jno
jae
ins
jnp
adc
cdq
(bad)
into
test
(bad)
jg
fbstp
add
mov
retf
outs
cli
hlt
mov
adc
(bad)
(bad)
call
push
cmp
jp
jae
jecxz
clc
push
add
push
dec
xchg
mov
xchg
ins
sbb
dec
push
push
inc
sti
pop
pop
or
sub
dec
lea
lock
cmp
(bad)
inc
adc
add
inc
scas
into
adc
xlat
mov
inc
sub
std
(bad)
fcomp
jnp
iret
test
fcomip
out
or
xchg
test
inc
pop
adc
rcr
mov
(bad)
cs
data16
and
mov
mov
fiadd
xor
push
xchg
mov
daa
(bad)
(bad)
(bad)
(bad)
jg
jo
popf
stos
inc
mov
sbb
mov
neg
loopne
add
push
and
mov
(bad)
(bad)
(bad)
call
outs
inc
sti
add
out
in
mov
or
mov
and
(bad)
(bad)
(bad)
call
loopne
addr16
das
retf
add
(bad)
int
inc
sbb
loope
sub
fistp
popa
or
mov
lea
dec
pop
mov
or
jmp
cmp
in
dec
inc
or
add
mov
imul
jp
sub
xchg
pop
push
movs
adc
pop
xchg
xchg
xor
repz
movs
jge
mov
imul
(bad)
dec
jp
leave
rol
jne
add
sub
call
jo
fcomp
shl
mov
pop
jno
inc
in
mov
add
cmp
add
lock
repnz
in
in
(bad)
(bad)
(bad)
out
mov
(bad)
arpl
dec
aad
aad
jmp
inc
daa
jmp
test
outs
cmp
and
fcomip
dec
xchg
mov
push
pop
mov
cld
dec
xor
dec
inc
xchg
mov
fs
(bad)
(bad)
fcomip
jle
cmps
pushf
js
(bad)
mov
in
test
adc
or
(bad)
mov
inc
mov
cmps
xor
jns
push
or
sbb
call
data16
xchg
ds
lahf
stos
add
movs
ja
xor
add
and
ret
sub
push
call
mov
retf
ror
adc
(bad)
fwait
pop
loop
es
adc
fild
(bad)
(bad)
(bad)
jmp
push
push
(bad)
fs
add
and
ins
push
in
add
leave
push
push
add
add
jmp
shl
jmp
ss
sti
mov
icebp
outs
and
sahf
fistp
(bad)
aaa
pop
test
xchg
or
jmp
sbb
cli
mov
jmp
in
sbb
dec
shl
xor
fstp
addr16
loop
test
xchg
icebp
movs
(bad)
(bad)
mov
int3
xchg
fbld
test
sahf
(bad)
sbb
pop
out
ret
jae
(bad)
(bad)
(bad)
dec
rcl
out
call
call
mov
(bad)
(bad)
jmp
jmp
jne
and
in
daa
cmps
push
call
call
sbb
repnz
jle
aas
jmp
xor
push
(bad)
(bad)
(bad)
inc
lahf
or
repnz
pop
mov
nop
push
xlat
test
test
in
test
rol
xchg
stos
test
lods
clc
mov
mov
fist
cmp
(bad)
dec
fisubr
cmc
xor
in
jbe
aad
inc
shl
add
(bad)
(bad)
call
fsubr
add
xor
mov
jbe
inc
xor
test
xchg
outs
jno
pusha
mov
push
jecxz
push
retf
xchg
outs
in
leave
mov
cwde
cmp
mov
idiv
jmp
pop
jl
stc
(bad)
mov
into
add
out
sub
cmps
call
(bad)
jns
aas
das
inc
mov
xor
ins
xchg
jbe
mov
inc
jmp
add
cwde
ss
and
scas
clc
inc
and
cmp
fnsetpm(287
add
aam
sbb
mov
(bad)
xchg
push
cli
push
add
dec
nop
mov
xchg
jl
jmp
jp
rcr
sub
hlt
ja
rol
or
stc
lods
add
ror
mov
cwde
gs
(bad)
jmp
pusha
jmp
jo
popf
fmul
jmp
(bad)
call
jo
mov
jb
dec
adc
repz
adc
iret
xchg
jnp
inc
ss
dec
leave
(bad)
(bad)
dec
retf
loope
mov
and
scas
stos
mov
daa
sub
pop
lock
pop
stc
add
aam
jp
jecxz
pop
mov
mov
inc
movs
xchg
(bad)
(bad)
(bad)
call
inc
popf
jl
pop
shr
mov
test
xor
adc
ret
or
movs
inc
xchg
retf
push
stos
sub
(bad)
(bad)
push
cmp
mov
inc
mov
test
mov
pop
std
mov
inc
dec
sbb
sbb
push
bound
xor
cmp
fs
mov
(bad)
(bad)
push
jns
(bad)
in
fdiv
fisub
rol
sbb
or
fistp
mov
mov
mov
mov
adc
inc
je
sub
fld
ja
(bad)
call
xor
mov
sti
retf
(bad)
sub
mov
int3
idiv
imul
or
push
in
sbb
aad
inc
pusha
adc
(bad)
(bad)
dec
jmp
rol
xchg
(bad)
jp
shl
xor
(bad)
sbb
mov
stos
push
test
fwait
scas
xor
push
ds
fs
mov
jbe
mov
jo
mov
call
(bad)
jmp
aas
add
in
rdpmc
pop
add
mov
or
movs
in
stos
stos
outs
adc
outs
cdq
fs
std
cs
dec
mov
adc
fild
jle
cmp
adc
and
inc
and
sbb
out
cmps
jle
or
adc
add
push
popa
out
mov
mov
sbb
mov
mov
pop
inc
sbb
jb
shl
(bad)
in
cld
(bad)
(bad)
(bad)
call
sub
inc
ror
and
fucomp
adc
(bad)
in
fimul
imul
std
fcomip
outs
enter
lahf
out
fucomip
repz
mov
js
add
(bad)
dec
cmps
mov
add
cdq
inc
(bad)
iret
hlt
mov
xchg
xchg
jno
adc
sub
ds
mov
and
jecxz
(bad)
push
adc
push
repnz
fdiv
sbb
or
std
push
or
(bad)
lock
(bad)
(bad)
mov
popa
push
outs
(bad)
(bad)
scas
lock
aas
mov
jo
ss
inc
iret
add
(bad)
dec
fcmovb
into
ja
pop
iret
sub
cmp
push
fs
jmp
in
push
mov
leave
mov
xchg
mov
sub
add
(bad)
cmp
mul
push
fwait
jp
jg
es
je
dec
mov
(bad)
(bad)
(bad)
(bad)
jg
push
and
xlat
jns
push
xchg
ret
ja
sbb
adc
in
jae
(bad)
add
cmps
(bad)
(bad)
(bad)
ficom
cmp
sahf
pop
mov
int3
hlt
out
jecxz
lods
icebp
jge
pop
cli
(bad)
(bad)
(bad)
clc
mov
push
jecxz
or
xchg
shl
leave
push
and
mov
sti
popa
jge
pop
mov
int
mov
out
clc
outs
fdiv
jmp
inc
test
shl
ja
loope
fbld
cli
mov
lock
call
inc
jle
sbb
arpl
or
repnz
movs
sbb
mov
jg
cmp
push
lds
push
push
repz
push
mov
retf
push
jle
push
xor
(bad)
(bad)
(bad)
jmp
imul
movs
xlat
xchg
xchg
(bad)
sbb
push
dec
test
lods
pop
popf
jbe
sub
inc
jb
cmps
jns
inc
popf
nop
loope
(bad)
(bad)
(bad)
jmp
pop
lods
movs
sub
cdq
cmp
xchg
(bad)
fadd
stc
je
or
adc
inc
fld
je
test
inc
(bad)
(bad)
(bad)
(bad)
mov
jo
sar
push
out
aas
xchg
add
push
and
push
mov
rcl
jmp
(bad)
call
aas
xchg
pminub
add
dec
dec
mov
ret
rol
xor
cmp
inc
(bad)
(bad)
(bad)
mov
inc
addr16
inc
sub
push
jns
cmp
popa
pop
xchg
sub
sbb
loopne
sub
(bad)
dec
sar
scas
mov
add
fisub
xchg
xor
(bad)
(bad)
(bad)
dec
fmul
js
pop
inc
pop
xor
aad
aaa
jno
lock
mov
(bad)
jmp
rep
push
add
popf
add
jbe
adc
add
mov
aas
movs
(bad)
(bad)
push
jle
cdq
xor
pop
mov
mov
cmps
xchg
jmp
jp
mov
dec
jb
(bad)
(bad)
(bad)
call
test
or
in
jmp
mov
test
sbb
add
push
push
hlt
(bad)
(bad)
(bad)
(bad)
js
and
jnp
inc
push
pop
ret
cmp
hlt
xlat
sahf
pop
out
pop
jne
fcmovne
lahf
adc
aad
mov
(bad)
(bad)
call
mov
xchg
pop
bound
clc
xchg
add
ret
xchg
add
sbb
shl
loopne
(bad)
lock
jecxz
(bad)
(bad)
push
lock
test
imul
push
dec
or
retf
retf
push
daa
fisttp
lods
and
jmp
push
cmp
and
push
push
js
pop
pop
in
arpl
sbb
sar
push
aas
sbb
stos
push
retf
mov
adc
xor
(bad)
xchg
jge
into
push
mov
jmp
sbb
push
push
mov
loopne
adc
cmp
iret
adc
jnp
cmp
ret
mov
cmp
push
nop
(bad)
ja
out
push
add
gs
mov
pop
pop
dec
dec
push
ds
pop
bound
mov
xchg
aaa
pop
popa
cld
jns
(bad)
(bad)
(bad)
cmp
cwde
std
in
xchg
mov
dec
repnz
stos
adc
(bad)
push
dec
imul
jmp
outs
xchg
mov
dec
sbb
mov
ins
jl
pop
cmc
(bad)
xchg
cmp
loope
push
aad
xchg
mul
and
inc
xchg
call
cmp
addr16
fcomip
inc
inc
icebp
js
cdq
push
popa
adc
adc
call
push
into
mov
xchg
sahf
sbb
inc
sub
mov
call
outs
add
jmp
fstp
rol
loopne
mov
xchg
cmc
sub
(bad)
jmp
(bad)
lock
icebp
adc
xchg
xor
push
sub
mov
mov
xchg
inc
fidivr
pop
es
(bad)
xor
cmp
icebp
ret
sbb
stc
fwait
inc
aam
mov
cld
pop
loopne
fcmovnu
std
retf
lea
aad
jmp
pop
out
mov
ficom
and
sub
test
xchg
mov
cmp
ret
push
cmps
sbb
in
or
(bad)
mov
xor
loope
gs
hlt
scas
mov
sbb
or
stos
jbe
ss
adc
dec
jae
std
or
call
xchg
mov
jnp
dec
sub
das
jp
jmp
sbb
imul
leave
daa
and
rcl
or
fld1
push
(bad)
pusha
pusha
js
mov
sar
gs
mov
jmp
mov
shl
idiv
mov
das
fs
jl
loop
inc
loopne
jle
in
retf
adc
and
pop
or
pop
fstp
add
and
xchg
out
loopne
(bad)
lock
jae
repnz
(bad)
(bad)
(bad)
mov
cmp
add
or
outs
pause
jo
loop
cmp
pop
aad
cwde
add
mov
adc
fsub
repnz
(bad)
push
mov
popf
in
dec
and
pop
not
test
adc
(bad)
(bad)
jg
outs
fcom
or
repnz
(bad)
daa
cmp
test
test
(bad)
(bad)
(bad)
(bad)
mov
add
jmp
xchg
pop
pop
xor
jne
addr16
sahf
mov
aaa
cld
(bad)
dec
xchg
cld
xchg
in
lods
test
(bad)
ds
(bad)
mov
push
fdivr
jno
inc
(bad)
inc
ins
or
jg
fnstsw
dec
ja
(bad)
(bad)
(bad)
fucomip
aam
mov
in
call
mov
xor
add
sbb
out
inc
pop
cmp
xchg
in
cdq
jmp
pop
(bad)
jg
(bad)
dec
and
cmc
inc
cmp
sub
aas
test
les
push
or
mov
(bad)
(bad)
(bad)
push
loopne
sub
ficomp
frstor
push
test
out
mov
mov
fisub
(bad)
dec
hlt
rcr
hlt
mov
rcl
call
sbb
mov
mov
add
push
pop
or
xor
(bad)
(bad)
jmp
push
cmp
pop
or
adc
(bad)
aam
cld
mov
test
(bad)
popf
jno
fcomp
(bad)
(bad)
(bad)
jmp
inc
sbb
fs
sbb
outs
jmp
jno
in
adc
ins
pop
or
cdq
(bad)
fcomip
jmp
mov
(bad)
dec
mov
inc
neg
push
popa
mov
sti
(bad)
inc
lea
jg
shl
xor
out
pop
test
push
cwde
pop
sbb
int3
scas
jne
push
pop
aas
jne
fisubr
fdivr
jg
call
push
popf
movs
inc
int
mov
pop
push
adc
sbb
sar
pop
icebp
dec
cwde
ins
mov
lahf
fwait
rcr
cmp
(bad)
mov
and
iret
cmps
xchg
pop
into
lock
mov
pop
enter
push
cmp
(bad)
(bad)
jmp
test
sti
addr16
dec
sahf
jne
pop
scas
imul
inc
dec
xchg
jne
nop
jge
js
(bad)
(bad)
(bad)
jmp
sbb
ret
mov
xchg
push
stc
int3
jns
xchg
cdq
stos
shl
addr16
(bad)
(bad)
inc
aas
sbb
je
lock
inc
ss
in
ins
jnp
retf
xor
gs
jmp
loopne
xchg
rcr
stos
ja
xor
(bad)
jmp
js
mov
lds
pop
imul
(bad)
push
rol
cmps
xchg
xor
in
fsubr
xchg
mov
push
xor
jmp
or
dec
adc
aaa
add
call
(bad)
xlat
adc
dec
sub
clc
call
jnp
fstp
call
inc
dec
loope
pop
mov
xchg
xchg
jmp
pop
jmp
mov
jge
(bad)
(bad)
jmp
mov
daa
test
popf
inc
aaa
es
retf
out
and
cdq
pop
xor
(bad)
inc
movs
push
neg
push
sub
xor
aam
dec
mov
aam
sbb
jb
mov
jge
jmp
(bad)
call
addr16
rol
bound
jbe
mul
movs
mov
cmp
xchg
in
(bad)
(bad)
(bad)
jmp
jb
fcomp
lsl
dec
mov
and
scas
je
shl
das
sbb
(bad)
call
sbb
cmp
jo
fst
stos
mov
jg
pushf
sub
(bad)
(bad)
push
(bad)
retf
movs
popa
push
mov
scas
shl
mov
pushf
xchg
push
xor
or
(bad)
(bad)
jmp
mov
push
xchg
sahf
call
out
mov
test
loopne
pop
cmp
pop
ins
sti
cmp
(bad)
push
jecxz
movs
dec
nop
adc
inc
push
cld
(bad)
inc
pop
pusha
mov
mov
fmul
add
jo
call
and
ja
add
mov
sbb
test
lods
adc
out
(bad)
(bad)
(bad)
fistp
jge
and
out
(bad)
mov
mov
fist
js
and
(bad)
dec
(bad)
repz
hlt
sub
sahf
pop
or
lods
daa
aaa
pop
loop
xor
das
or
call
jmp
mov
hlt
arpl
stc
xchg
test
jb
xchg
mov
add
xchg
(bad)
(bad)
jmp
inc
jge
mov
cld
lods
pusha
in
ins
iret
mov
imul
adc
push
popf
cwde
jb
jp
(bad)
call
(bad)
jno
and
scas
and
dec
xor
mov
mov
cmp
outs
leave
outs
add
call
mov
ins
dec
xor
(bad)
jmp
push
or
pop
add
movs
push
xor
xor
jns
sbb
(bad)
(bad)
fst
cmp
ror
jnp
pop
push
lock
sub
(bad)
(bad)
call
aad
(bad)
jne
movs
xchg
xlat
xchg
retf
int
push
push
(bad)
adc
cmps
adc
cmp
addr16
(bad)
(bad)
(bad)
(bad)
cmp
enter
iret
add
test
fidivr
sbb
pop
dec
push
dec
(bad)
(bad)
(bad)
jmp
imul
inc
cmp
xor
imul
stc
cmc
ds
mov
or
(bad)
(bad)
(bad)
jmp
rcr
mov
inc
imul
fwait
and
imul
xor
retf
adc
loop
add
adc
call
(bad)
bound
mov
jle
pop
sub
cmps
or
sbb
mov
push
lock
(bad)
call
popa
cmp
je
aam
adc
das
mov
pop
out
icebp
(bad)
call
std
leave
mov
bndldx
repz
sti
call
mov
push
pop
fs
fcos
push
fld
popw
ret
outs
or
(bad)
(bad)
jmp
or
call
in
movs
jns
retf
adc
(bad)
(bad)
push
inc
test
mov
retf
je
aaa
stos
mov
out
movs
jg
or
es
mov
mov
fbld
scas
xchg
shr
or
inc
das
sbb
xor
pop
jle
inc
mov
(bad)
cmc
enter
(bad)
inc
push
xchg
xchg
dec
lds
gs
cmp
xor
or
and
in
hlt
fdivr
aas
inc
retf
mov
call
lds
sbb
xor
stc
out
shl
rcl
movs
leave
push
pushf
(bad)
(bad)
(bad)
push
adc
sahf
test
repz
(bad)
loope
xchg
repnz
and
sbb
(bad)
jmp
sub
(bad)
mov
cmp
mov
xor
mov
in
(bad)
jmp
inc
cmc
(bad)
(bad)
(bad)
jmp
inc
aaa
aam
pop
sbb
and
jg
add
pop
test
std
mov
leave
add
xchg
jae
add
(bad)
jmp
imul
test
sub
out
xor
and
pop
sub
pop
sar
add
xchg
test
(bad)
(bad)
push
mov
in
dec
xchg
scas
int3
arpl
or
sahf
cmps
xchg
dec
stos
popa
fistp
jmp
sbb
xor
xor
clc
(bad)
jg
or
inc
das
and
cdq
ds
mov
push
cmp
sub
iret
call
test
fdiv
jmp
ins
jmp
hlt
push
push
mov
mov
or
sbb
push
fnstcw
(bad)
(bad)
fist
outs
test
(bad)
jns
or
mov
fstp
xor
dec
push
jl
lock
fiadd
xchg
loop
push
outs
mov
test
repnz
push
fbld
mov
inc
ss
pop
stos
jne
clc
leave
into
scas
repnz
lock
(bad)
cmp
dec
inc
jb
pop
aas
fwait
sub
push
mov
pop
mov
jmp
std
(bad)
dec
ret
js
jo
jbe
ret
(bad)
fiadd
pop
std
mov
mov
pop
push
fnsave
gs
popa
and
cmc
(bad)
(bad)
(bad)
inc
leave
scas
sbb
(bad)
imul
rcr
call
xlat
or
or
fcmovnu
fsubr
(bad)
(bad)
(bad)
dec
in
cmp
(bad)
nop
scas
jmp
push
push
fwait
repz
stc
dec
sub
push
mov
(bad)
push
cli
dec
ret
mov
loopne
shl
hlt
(bad)
nop
jmp
mov
and
sti
pushf
frstor
mov
xchg
outs
jae
jo
adc
mov
sub
jmp
jns
repnz
sbb
pop
jl
add
iret
out
int3
mov
in
or
(bad)
(bad)
push
push
aam
fcmovbe
and
int
jmp
and
push
jge
sbb
mov
call
jmp
fidivr
sbb
xor
jns
hlt
pop
pop
es
(bad)
jg
jp
iret
dec
mov
jne
pushf
jp
outs
sub
(bad)
(bad)
mov
cmc
outs
fcomip
fimul
fs
jg
sub
inc
cmp
cmp
mov
add
out
es
ja
in
jns
cmp
fcomp
dec
lods
(bad)
test
call
sti
(bad)
(bad)
(bad)
dec
shl
fs
adc
movs
test
pop
adc
adc
sbb
test
(bad)
inc
cld
repz
inc
js
lea
xchg
enter
cmp
(bad)
fcmovb
(bad)
jmp
ffree
pop
xor
in
in
mov
dec
sub
in
ror
xchg
sar
mov
mov
dec
adc
sar
xchg
out
sub
lods
movs
mov
jecxz
add
rol
add
loope
std
arpl
dec
scas
fisub
in
cli
sub
cmc
(bad)
dec
js
ud0
xchg
sbb
xor
xor
ss
(bad)
jg
sti
icebp
pusha
push
mov
out
add
pop
sub
sub
aad
add
mov
jg
(bad)
(bad)
(bad)
(bad)
mov
cmps
sub
int3
pusha
pop
xchg
mov
xchg
lods
and
(bad)
jl
test
icebp
(bad)
inc
mov
mov
push
and
cmp
pop
jo
stc
mov
out
mov
jno
maskmovq
div
repz
jbe
cwde
mov
mov
mov
call
call
pop
jbe
and
jne
bound
call
cs
inc
aas
cmps
fwait
and
test
movs
das
pop
add
sbb
outs
pop
mov
adc
gs
(bad)
(bad)
jmp
dec
fwait
out
cmp
arpl
xor
fcomp
sbb
stc
psrlw
sbb
test
jge
jle
or
xor
xchg
add
or
mov
cld
(bad)
push
pusha
jbe
mov
int3
mov
xchg
cli
mov
movs
xor
ins
je
cmps
dec
fcomip
(bad)
jmp
pop
outs
xchg
jmp
rcr
inc
add
test
pop
sbb
mov
sbb
aam
sahf
ins
scas
add
push
pop
adc
sub
jmp
stos
mov
mov
sub
sbb
or
(bad)
(bad)
(bad)
add
inc
test
xlat
push
test
add
es
aad
stc
ret
aaa
jnp
(bad)
(bad)
(bad)
call
dec
in
out
popa
jle
mov
mov
sbb
sbb
popa
mov
dec
sub
(bad)
(bad)
std
inc
test
sub
es
scas
xchg
dec
sbb
iret
inc
and
test
xlat
cmp
clc
(bad)
ds
loop
add
mov
sub
imul
push
out
push
pop
cmp
cmp
call
sbb
test
push
mov
popa
dec
aaa
test
xor
and
pop
or
push
sub
and
sbb
dec
(bad)
inc
adc
mov
or
popf
ret
and
pop
adc
mov
sub
sti
adc
out
ror
sbb
(bad)
(bad)
(bad)
sti
cmps
aas
and
nop
push
sub
sub
inc
ins
dec
out
sub
pop
(bad)
daa
pop
xchg
mov
jg
ins
or
cmp
imul
or
enter
inc
push
scas
sti
rcr
inc
push
xchg
pop
cmps
(bad)
and
and
and
imul
retf
add
xchg
test
mov
mov
fcmovbe
ins
push
mov
push
or
call
imul
(bad)
(bad)
(bad)
jmp
dec
sub
sti
mov
sub
stos
inc
mov
mov
add
sbb
(bad)
(bad)
(bad)
(bad)
call
dec
fcom
sub
add
or
data16
push
mov
push
ret
mov
retf
rcl
jbe
clc
add
mov
cmp
add
(bad)
mov
cld
or
sub
adc
icebp
aad
(bad)
(bad)
(bad)
jg
and
inc
test
or
mov
outs
inc
dec
into
ins
mov
fwait
xchg
mov
(bad)
(bad)
push
aaa
fwait
mov
jmp
aas
push
repz
enter
icebp
pop
test
loop
inc
cmp
outs
js
not
sub
(bad)
jg
mov
stc
jg
jns
xchg
ja
retf
pusha
dec
in
mov
jmp
xor
inc
push
fnstsw
push
pop
mov
mov
pop
or
jg
sub
(bad)
(bad)
jmp
ret
pusha
inc
fild
(bad)
cmp
imul
pop
cmps
lock
xchg
nop
sub
(bad)
(bad)
(bad)
inc
inc
cld
int
pop
push
ins
inc
iret
adc
(bad)
imul
lds
add
(bad)
(bad)
(bad)
dec
ret
adc
fld
(bad)
iret
jnp
iret
ins
adc
je
imul
clc
mov
(bad)
(bad)
push
push
lock
(bad)
cmp
bound
mov
dec
sahf
xchg
das
adc
pop
or
jmp
inc
cdq
cmps
add
leave
pop
ins
xchg
mov
call
add
call
or
fwait
sbb
ret
mov
loop
inc
sbb
or
(bad)
out
shr
stos
cmp
cmp
xchg
enter
clc
inc
dec
loopne
(bad)
jg
dec
nop
cli
int3
adc
jecxz
inc
(bad)
in
cwde
dec
loop
clc
(bad)
(bad)
dec
adc
sti
mov
es
jnp
xor
dec
and
push
and
(bad)
(bad)
(bad)
mov
pop
cmp
cs
sbb
jle
jbe
mov
fild
jmp
(bad)
jmp
mov
cmp
ret
and
mov
movs
ret
jmp
cli
jb
jmp
xor
shr
(bad)
(bad)
(bad)
jg
leave
div
ja
imul
nop
les
or
fisubr
fisub
sbb
(bad)
(bad)
call
sbb
mov
repnz
(bad)
clc
pop
xchg
push
ficomp
ds
aam
push
dec
pop
int
(bad)
call
iret
adc
scas
ja
cmp
add
pop
data16
add
(bad)
out
push
cdq
out
fcom
retf
jl
xor
and
adc
fs
dec
and
mov
dec
enter
push
fwait
movs
(bad)
(bad)
(bad)
jmp
test
(bad)
jmp
jmp
xchg
sti
(bad)
push
int
nop
loop
jp
sub
cmp
(bad)
(bad)
(bad)
jmp
fldenv
lea
ret
jne
lods
scas
loop
out
stc
jl
into
popf
imul
push
jmp
icebp
es
cmp
mov
sub
adc
xchg
cmp
(bad)
(bad)
dec
xor
jg
shl
add
aad
xor
push
fdivr
es
scas
mov
(bad)
(bad)
(bad)
call
pop
fdiv
dec
and
repnz
adc
addr16
ret
cmps
cwde
xchg
jecxz
loope
xor
sub
(bad)
out
fs
jg
rcr
into
(bad)
movs
imul
or
loop
and
loope
nop
cmps
push
pop
mov
inc
fwait
cs
(bad)
(bad)
(bad)
jle
cmp
dec
adc
sbb
mov
xor
jg
into
jle
inc
xchg
and
inc
(bad)
call
dec
call
sub
push
ins
mov
js
push
xor
jae
imul
cmp
js
popa
mov
and
(bad)
inc
aam
loop
dec
cld
das
cwde
js
popa
lahf
pushf
push
das
pop
test
enter
mov
push
jnp
(bad)
(bad)
call
int
push
pop
sub
(bad)
mov
ror
fcom
hlt
add
int
retf
jo
mov
aam
(bad)
(bad)
adc
jg
bound
push
les
lods
xor
bound
ds
fnsetpm(287
mov
jecxz
stos
(bad)
jge
lahf
inc
data16
mov
jge
pop
aaa
ins
mov
retf
xor
in
in
ret
dec
std
jl
call
cli
or
mov
jge
jb
pop
and
(bad)
xor
dec
xor
hlt
(bad)
(bad)
(bad)
(bad)
jns
jae
or
in
ret
aad
inc
xor
cdq
cdq
pusha
push
rep
lock
dec
pushf
mov
jmp
xchg
xchg
pop
fwait
js
add
mov
xchg
mov
adc
dec
popf
or
or
xchg
fld
xor
dec
cdq
lea
lsl
into
mov
(bad)
dec
inc
jl
or
inc
out
repnz
sbb
leave
scas
cs
aad
repnz
cmp
sub
mov
int3
std
dec
push
sar
test
mov
jmp
pop
cmp
and
out
add
sbb
int
pop
fild
push
push
xor
pop
cmp
pop
in
or
pop
(bad)
(bad)
(bad)
jmp
mov
mov
(bad)
pop
ror
push
mov
jp
fld
in
or
(bad)
push
xor
pushf
(bad)
div
out
mov
ret
clc
mov
mov
inc
retf
sub
sub
and
cmp
js
imul
add
popf
(bad)
jmp
lahf
cmp
or
or
dec
mov
sub
in
xchg
mov
pop
mov
and
jb
mov
das
fdivr
(bad)
call
mov
sbb
xor
ja
hlt
add
adc
push
inc
aaa
mov
inc
push
aad
repz
test
mov
jg
inc
mov
pop
fwait
daa
sub
(bad)
jmp
in
icebp
dec
addr16
push
adc
mov
out
push
clc
or
jae
and
fisttp
(bad)
call
jmp
and
neg
sbb
mov
outs
fstp
outs
iret
mov
(bad)
(bad)
(bad)
in
fdivp
pusha
nop
clc
lods
dec
adc
cmc
sub
xor
fadd
sbb
(bad)
call
loope
push
xchg
jge
mov
fs
call
(bad)
(bad)
call
mov
in
ffree
push
mov
inc
pop
cmps
mov
lds
(bad)
(bad)
(bad)
(bad)
(bad)
jp
out
adc
test
ins
inc
or
dec
loope
lock
cmps
aad
jnp
mov
add
(bad)
(bad)
(bad)
jmp
shl
fild
lods
loop
xor
adc
and
inc
xor
sub
or
mov
(bad)
pop
push
(bad)
(bad)
inc
repz
mov
mov
xlat
cmp
arpl
(bad)
imul
cmps
xor
in
int
mov
std
pop
in
mov
xchg
cmps
fbld
sub
(bad)
jmp
data16
dec
(bad)
ins
je
push
(bad)
cli
dec
dec
jne
mov
jg
hlt
mov
cmp
aam
jo
movs
sbb
movs
jnp
repz
out
mov
push
xlat
mov
jbe
mov
add
mov
mov
mov
aam
(bad)
(bad)
(bad)
jmp
push
sti
add
pop
dec
test
sub
call
(bad)
(bad)
(bad)
jmp
dec
std
or
fsubr
stos
ss
lds
bound
sbb
sbb
aas
(bad)
(bad)
(bad)
push
inc
dec
hlt
jo
mov
ins
or
xchg
das
cmps
add
into
jns
fisttp
call
inc
dec
jp
sub
xor
data16
jb
mov
lea
(bad)
dec
push
ins
mov
and
iret
mov
retf
popa
push
ret
clc
ret
cmps
enter
mov
cld
(bad)
stc
cmp
mov
(bad)
(bad)
mov
xor
jecxz
dec
pusha
jo
lea
mov
(bad)
jmp
xchg
int
loope
loopne
loopne
or
push
int
xlat
nop
(bad)
(bad)
(bad)
inc
loope
in
pop
add
xor
fdiv
or
sbb
pop
inc
push
mov
test
(bad)
(bad)
dec
xchg
and
(bad)
push
xlat
popf
mov
aaa
mov
inc
ret
xchg
loope
aas
cli
inc
sahf
(bad)
(bad)
(bad)
push
out
sub
leave
pop
push
xor
stos
ror
xchg
call
(bad)
cli
and
in
imul
mov
mov
sti
xchg
cli
loopne
ja
(bad)
(bad)
mov
mov
or
mov
(bad)
mov
lock
jae
(bad)
(bad)
inc
push
addr16
sub
sar
sti
mov
push
retf
dec
(bad)
jmp
cmp
inc
ss
adc
adc
mov
loopne
stc
xchg
adc
(bad)
push
push
push
loopne
or
jae
push
jnp
pop
inc
mul
cli
movs
pop
jge
cmps
rcl
fstp
add
lds
adc
cmp
dec
cmp
mov
adc
mov
and
lock
add
test
stos
scas
inc
retf
add
fmul
inc
mov
(bad)
mov
fwait
cmp
xor
cmc
adc
jmp
mov
ins
mov
call
adc
jecxz
mov
leave
dec
jecxz
sub
add
scas
sbb
mov
(bad)
jmp
pop
mov
or
repz
mov
sbb
out
mov
mov
(bad)
(bad)
dec
lods
xor
pop
call
mov
and
fsubr
std
pushf
jne
ficom
aaa
dec
jmp
sbb
jecxz
push
cld
fidiv
xor
fldenv
in
sbb
pushf
fistp
jg
dec
loop
cmps
cmp
leave
rcl
mov
fidivr
ret
xchg
push
sbb
cmp
sti
and
(bad)
(bad)
ffree
mov
add
dec
aam
xor
or
and
(bad)
(bad)
(bad)
call
jnp
stos
outs
xchg
shl
cli
mov
mov
cmc
pop
inc
ins
call
mov
push
mov
pop
jne
mov
push
(bad)
stc
ins
pop
sbb
popa
loop
mov
call
out
xchg
(bad)
clc
and
cdq
xlat
fs
mov
js
in
jo
cmps
jns
xchg
xchg
mov
xor
sub
mov
(bad)
fs
and
and
cmps
rsm
jg
(bad)
(bad)
jmp
lods
mov
push
jb
dec
inc
xor
pushf
and
aaa
cld
or
test
dec
pop
into
push
in
repz
jl
or
(bad)
(bad)
dec
inc
mov
adc
mov
call
pop
xor
cmp
(bad)
dec
(bad)
cmp
or
xor
sub
sbb
dec
shl
pop
std
stc
les
call
fsubr
dec
sub
sar
test
daa
xchg
sbb
call
pop
movs
rcl
int
dec
cmp
push
xchg
mov
(bad)
call
js
cmc
nop
push
dec
jg
sti
mov
out
loop
pop
fld
xchg
lds
mov
es
mov
mov
jne
adc
mov
test
sahf
inc
or
dec
adc
pushf
bound
mov
(bad)
fld
stos
movs
rcr
pusha
inc
jno
cwde
repnz
sbb
pop
pop
ret
arpl
fs
jmp
movs
adc
adc
(bad)
mov
or
mov
lahf
mov
sti
cmc
jle
aam
pop
(bad)
(bad)
call
xchg
aas
ficom
ficomp
imul
fcomp
mov
jmp
xor
pop
sbb
ror
retf
scas
imul
mov
push
lock
call
pusha
stos
sub
(bad)
call
es
dec
push
movs
out
jecxz
ja
nop
inc
call
xchg
cmps
push
(bad)
(bad)
(bad)
call
sbb
or
imul
pop
push
xor
mov
add
mov
sbb
jne
(bad)
jg
jmp
jbe
cmc
mov
cmp
ret
(bad)
push
loope
in
int
sbb
xchg
(bad)
(bad)
(bad)
dec
ficomp
loop
mov
(bad)
dec
cmc
inc
das
nop
or
outs
cmps
dec
outs
clc
leave
movs
test
pop
(bad)
(bad)
(bad)
dec
arpl
push
mov
sub
cdq
rcr
cmp
mov
(bad)
ret
sar
sbb
sbb
pop
stc
out
(bad)
xor
(bad)
cmp
fisubr
(bad)
(bad)
jmp
mov
sub
cmp
add
push
pop
and
xchg
xor
mov
shl
push
sub
loopne
(bad)
call
sub
cmp
xor
xor
push
inc
stos
jecxz
(bad)
(bad)
(bad)
mov
and
xor
pushf
push
and
iret
dec
push
int3
les
test
(bad)
(bad)
push
mov
mov
mov
ror
sub
cld
cmp
add
and
ds
xor
(bad)
(bad)
(bad)
fild
xchg
ja
in
cmp
cwde
inc
fstsw
das
sbb
sub
(bad)
(bad)
(bad)
(bad)
out
xor
retf
out
bound
addr16
cmp
popa
adc
imul
jp
dec
(bad)
shl
retf
jle
push
inc
(bad)
push
in
inc
inc
sub
test
(bad)
dec
ins
test
xchg
dec
out
pop
jge
mov
add
call
jno
push
jae
push
imul
cmp
adc
xlat
add
pop
fs
aaa
out
call
mov
repnz
(bad)
mov
push
mov
dec
or
or
push
icebp
call
mov
sbb
add
popa
sar
fsubr
push
cld
fild
outs
(bad)
call
mov
dec
pop
mov
aad
jb
pop
outs
add
clc
wbinvd
inc
mov
fcom
xchg
imul
dec
and
xchg
scas
lods
xchg
xor
jmp
in
xor
jmp
adc
jle
jle
mov
jne
ds
(bad)
call
adc
add
and
ss
cmp
not
and
sahf
cmp
inc
in
inc
aas
inc
lods
(bad)
(bad)
(bad)
inc
cmps
cmps
jl
in
sbb
pop
addr16
cmp
loope
jmp
test
mov
(bad)
fcomip
xchg
or
mov
sti
xor
mov
xchg
mov
push
je
sbb
push
dec
(bad)
(bad)
(bad)
(bad)
call
pop
scas
sub
sub
pop
mov
inc
push
or
push
daa
add
iret
mov
(bad)
push
adc
lahf
jno
mov
loope
std
int3
push
and
cmp
jl
or
jae
jmp
popa
adc
stos
repz
scas
sbb
(bad)
jg
ss
imul
out
hlt
pop
idiv
aam
jno
jmp
sbb
pop
hlt
dec
pop
sub
jo
jnp
sahf
data16
pop
jae
adc
dec
jmp
add
call
out
loope
xchg
call
ror
call
xor
push
sar
(bad)
(bad)
(bad)
push
repz
pusha
sbb
mov
loope
pop
mov
adc
shl
xchg
call
and
jns
add
sar
(bad)
call
ins
shr
jle
aam
rol
ds
sti
adc
test
(bad)
(bad)
(bad)
mov
inc
repz
rol
stos
push
dec
fxch
psrlq
(bad)
outs
cmp
and
dec
ret
jbe
(bad)
(bad)
(bad)
aas
mov
fnstenv
cmp
mov
(bad)
outs
and
int
scas
mov
inc
mov
dec
xor
test
inc
data16
jle
inc
mov
(bad)
push
jmp
sbb
jb
icebp
mov
(bad)
pop
(bad)
jae
(bad)
(bad)
(bad)
repnz
jb
es
(bad)
iret
xor
jne
(bad)
jno
lea
pop
(bad)
call
mov
retf
inc
mov
in
add
jnp
cld
xor
jmp
xor
mov
ins
fsin
push
std
xchg
mov
mov
and
push
jecxz
jo
inc
mov
retf
add
movs
and
call
adc
xchg
inc
jnp
cdq
sub
xor
int
mov
jmp
(bad)
call
pushf
xor
and
dec
mov
popa
std
mul
(bad)
(bad)
mov
add
xor
push
cmovge
cld
push
add
xor
fnstenv
and
push
inc
cmp
sbb
push
and
popa
loope
jmp
xlat
out
mov
cdq
jnp
xchg
inc
out
xlat
nop
mov
or
push
ret
sar
call
std
(bad)
jp
in
mov
xor
sbb
or
mov
outs
push
xchg
test
push
inc
std
(bad)
(bad)
cmp
xchg
jno
and
(bad)
(bad)
pop
test
into
es
scas
test
xchg
sbb
fs
(bad)
mov
lods
mov
aad
push
icebp
packsswb
jno
cmp
js
jae
neg
iret
stos
aaa
std
call
sbb
and
fcmove
cmp
fmulp
js
inc
ins
lds
call
jo
ret
cmp
push
adc
mov
(bad)
call
mov
cmp
mov
mov
pop
add
dec
mov
mov
sub
das
test
cmp
sti
out
or
hlt
cmps
mov
add
dec
(bad)
(bad)
(bad)
inc
sti
xor
dec
mul
call
call
lock
cmc
sub
call
mov
add
outs
call
cwde
adc
fisttp
cmc
xchg
test
mov
push
adc
test
loop
or
ins
test
(bad)
(bad)
jg
xor
jg
xor
movs
gs
movsx
pop
ins
add
push
ss
(bad)
(bad)
(bad)
inc
rcl
pop
gs
pushf
jmp
adc
addr16
(bad)
call
xchg
xor
lods
jl
adc
inc
aam
cmp
cmps
mov
mov
cmp
repnz
xor
sub
cdq
outs
les
adc
adc
(bad)
cmp
shl
daa
(bad)
pop
dec
movs
cmps
jnp
in
lods
(bad)
(bad)
(bad)
(bad)
aad
int
mov
call
dec
unpcklps
dec
add
fwait
(bad)
(bad)
(bad)
(bad)
cmp
std
push
fdivr
xchg
(bad)
in
fiadd
fstp
mov
and
xchg
lods
nop
pop
bound
mov
(bad)
(bad)
(bad)
jmp
add
sbb
push
outs
cmp
cwde
div
fldln2
inc
lds
(bad)
icebp
xor
out
sbb
mov
mov
not
(bad)
(bad)
mov
lock
inc
mov
ret
push
loopne
iret
xchg
and
add
shr
mov
data16
sahf
cmp
inc
cwde
in
fistp
jle
stos
pop
(bad)
(bad)
inc
xchg
pop
mov
or
stos
(bad)
shl
movs
jmp
mov
mov
mov
repz
clc
xor
daa
(bad)
(bad)
call
sbb
xor
in
mov
call
enter
inc
push
adc
call
sub
dec
fnsave
je
jmp
mov
(bad)
(bad)
out
mov
jno
dec
sbb
or
(bad)
iret
ins
inc
les
cmc
sti
xchg
jmp
jmp
lock
stos
xchg
call
ss
ds
inc
jg
lods
pop
or
sub
pop
call
icebp
(bad)
(bad)
push
jle
and
(bad)
jns
sub
loope
mov
mov
dec
(bad)
fbstp
repnz
sbb
ins
sbb
add
ds
jge
leave
call
push
fmul
mov
leave
loopne
popf
sbb
neg
mov
gs
cli
pop
or
jle
jle
aaa
stos
add
pop
and
add
ret
or
jl
push
mov
int
(bad)
sub
(bad)
(bad)
dec
in
inc
xor
test
adc
std
popf
iret
xor
inc
mov
(bad)
dec
or
add
push
xchg
pop
mov
jmp
(bad)
(bad)
(bad)
jmp
mov
and
mov
mov
xchg
nop
mov
sub
(bad)
(bad)
jmp
(bad)
jbe
enter
mov
and
xchg
add
mov
(bad)
(bad)
(bad)
jmp
outs
dec
rcl
pop
xor
into
mov
xchg
mov
jl
or
push
imul
sub
hlt
(bad)
(bad)
(bad)
(bad)
call
lock
sub
enter
jbe
inc
dec
xchg
dec
or
bound
daa
xchg
cmps
cli
or
(bad)
(bad)
jmp
sub
in
xchg
inc
nop
hlt
ret
push
stc
arpl
add
jg
xor
(bad)
mov
lods
adc
push
push
retf
pop
outs
shl
add
jl
add
(bad)
(bad)
(bad)
(bad)
out
(bad)
ins
jge
iret
test
aas
mov
jge
xor
outs
cmc
repnz
and
mov
scas
(bad)
je
jb
xchg
mov
mov
ins
bound
mov
xor
mov
inc
bound
mov
sub
push
(bad)
in
(bad)
push
xchg
pop
ins
mov
rcl
int
sub
stc
rcr
mov
or
push
aam
cmp
pop
in
jno
sbb
inc
dec
sub
mov
lahf
push
push
and
and
jmp
sbb
outs
pop
scas
ror
dec
jb
call
add
adc
jnp
jmp
jb
xchg
ficom
mov
jmp
mov
add
lods
sbb
add
jb
mov
add
pop
or
hlt
(bad)
pusha
jb
repnz
pusha
out
mov
add
test
(bad)
(bad)
push
lock
xchg
xchg
jl
pop
mov
lods
jmp
shl
pop
inc
movs
lods
(bad)
(bad)
(bad)
push
and
ds
int3
pop
mov
nop
mov
sub
sbb
and
in
leave
mov
mov
cli
dec
xchg
add
leave
ficomp
ss
mov
fist
mov
inc
jmp
retf
and
jecxz
pop
sbb
cmp
int
adc
mov
ins
clc
inc
(bad)
sbb
push
mov
shr
je
leave
das
test
adc
stos
cmp
shl
cwde
scas
push
iret
sbb
(bad)
jg
dec
push
dec
cmp
xchg
dec
sar
sbb
cmp
sbb
out
movs
mov
push
add
or
adc
adc
bound
(bad)
(bad)
jmp
jbe
repnz
push
leave
sbb
loopne
mov
in
pop
ds
push
fmul
pushf
adc
dec
push
(bad)
sti
mov
push
mov
outs
aaa
mov
xor
xor
imul
inc
fsub
imul
(bad)
dec
jp
cdq
cdq
sbb
cmp
(bad)
(bad)
(bad)
(bad)
ficomp
mov
inc
sar
sub
out
cmp
mov
adc
sub
movs
shl
mov
out
aas
sbb
(bad)
(bad)
mov
cmp
lods
lea
mov
pop
sbb
mov
bound
inc
adc
xchg
jns
in
mov
aam
sub
retf
mov
sub
xchg
sub
call
jecxz
cs
mov
call
dec
xchg
in
or
jg
push
sub
dec
test
(bad)
sti
test
xchg
or
fisttp
fisubr
xlat
in
cwde
pop
fiadd
dec
jnp
push
sbb
ret
pop
out
cli
add
loope
push
sbb
pop
(bad)
adc
cmp
lock
push
enter
in
mov
jecxz
ficom
xor
sbb
mov
mov
not
(bad)
shl
pop
nop
adc
inc
adc
cmp
mov
(bad)
(bad)
mov
xor
mov
xchg
xor
stos
push
and
pop
das
mov
push
call
mov
(bad)
(bad)
jmp
inc
cwde
xchg
or
bnd
dec
dec
mov
jecxz
repz
or
aas
out
pop
jge
test
jmp
mov
sbb
call
xor
cli
mov
sar
sub
ret
cmp
ja
stos
leave
sbb
jmp
outs
clc
test
repnz
addr16
rcr
push
into
fidivr
mov
jae
jl
jl
mov
call
cmc
cmc
mov
ret
xchg
pop
scas
call
(bad)
push
popa
push
ret
daa
aad
out
dec
ret
imul
(bad)
xchg
pop
cmp
(bad)
(bad)
jmp
mov
inc
and
imul
lea
mov
aam
dec
(bad)
(bad)
(bad)
jmp
scas
pop
pop
(bad)
jmp
das
fsub
xlat
test
call
rcl
push
xor
xchg
cli
(bad)
(bad)
(bad)
jmp
mov
popf
rcl
int
xor
xor
sbb
(bad)
cli
out
push
ret
dec
xchg
mov
mov
movs
xchg
retf
ret
(bad)
retf
xchg
(bad)
outs
mov
dec
mov
stos
ss
(bad)
(bad)
(bad)
(bad)
mov
inc
mov
push
xchg
dec
xor
(bad)
and
pop
adc
test
pop
jmp
sbb
out
xor
xor
shr
add
cmps
jge
push
fdivr
(bad)
(bad)
(bad)
cmp
aas
push
xor
gs
int3
arpl
inc
or
in
and
lahf
jno
jl
jmp
lock
mov
outs
retw
(bad)
fst
mov
push
lods
test
retf
call
mov
push
push
mov
movs
mov
call
loopne
cmp
inc
mov
aad
in
and
pop
cmc
jecxz
cs
(bad)
sub
ret
(bad)
jmp
call
jp
xchg
out
inc
mov
and
das
(bad)
push
movs
inc
push
(bad)
(bad)
(bad)
jg
repnz
cmc
dec
xchg
loope
jg
pop
int3
inc
(bad)
adc
jns
stos
dec
pop
mov
int3
jl
cs
(bad)
(bad)
(bad)
dec
int3
mov
inc
into
ins
movs
adc
push
mov
(bad)
(bad)
(bad)
(bad)
cld
pop
outs
mov
dec
or
inc
and
and
pushf
addr16
push
xor
mov
ins
sbb
fcomip
dec
out
int3
mov
(bad)
mov
and
inc
push
mov
inc
out
idiv
(bad)
(bad)
(bad)
jmp
push
aam
xchg
or
xor
xchg
mov
jg
jecxz
in
rcl
call
xor
(bad)
(bad)
jmp
inc
lods
(bad)
hlt
mov
pop
(bad)
mov
add
dec
adc
or
(bad)
push
cmp
mov
mov
dec
pop
mov
xor
(bad)
(bad)
fbld
sar
xchg
out
test
movs
mov
jg
push
pusha
ins
adc
jmp
in
inc
or
add
fisttp
(bad)
leave
push
cmp
mov
xor
stc
mov
xchg
lock
(bad)
(bad)
dec
lea
les
mov
jo
jmp
arpl
fisttp
scas
rcr
fcomip
(bad)
mov
(bad)
lock
cld
mov
pop
stos
arpl
push
push
aad
sbb
call
mov
mov
mov
or
cld
mov
(bad)
(bad)
call
pop
jb
sbb
mov
(bad)
dec
into
push
(bad)
xor
sub
and
lods
(bad)
fstp
js
cmp
(bad)
jg
call
dec
fild
sbb
fs
xchg
pusha
sbb
dec
iret
test
(bad)
(bad)
fiadd
jmp
jmp
mov
test
fcomp
out
or
jmp
sahf
push
inc
xlat
and
xchg
les
(bad)
idiv
sub
mov
outs
aas
mov
jo
push
or
cmp
call
push
ret
xor
(bad)
out
and
hlt
movs
(bad)
jg
(bad)
mov
cmc
mov
nop
xlat
movs
loopne
daa
mov
aad
imul
call
lock
(bad)
out
je
icebp
cmp
loope
xor
in
add
ret
in
test
scas
lods
mov
mov
les
sar
imul
add
sbb
ds
sub
sub
and
and
push
mov
(bad)
push
les
aaa
xchg
push
push
push
mov
iret
adc
(bad)
call
jle
pop
scas
push
imul
mov
ins
and
and
(bad)
(bad)
(bad)
push
(bad)
daa
xchg
cmp
adc
mov
xchg
call
sar
and
adc
(bad)
(bad)
jmp
cli
je
(bad)
push
adc
xor
push
les
inc
test
jmp
bound
sbb
(bad)
(bad)
jmp
(bad)
les
imul
fistp
fstp
in
push
rcr
mov
add
dec
mov
aas
sub
(bad)
(bad)
(bad)
dec
call
push
pop
and
lahf
pop
xchg
je
daa
pop
outs
push
xor
pop
(bad)
(bad)
(bad)
push
outs
pushf
sar
xchg
inc
rcl
ret
(bad)
outs
(bad)
xor
sub
xchg
sub
loop
retf
xchg
push
sbb
add
jle
(bad)
(bad)
push
pop
mov
pushf
aaa
or
outs
jmp
dec
sti
inc
pop
mov
(bad)
(bad)
(bad)
jmp
mov
push
pop
and
sub
cmp
mov
xlat
xchg
(bad)
jmp
adc
bound
psubw
paddusb
jle
fadd
jne
xchg
xor
out
cli
inc
and
adc
in
(bad)
bound
aas
scas
(bad)
(bad)
mov
aad
ja
or
sbb
push
mov
(bad)
(bad)
jmp
cmp
nop
repz
xor
addr16
fninit
fisttp
push
js
cmp
iret
hlt
pop
sbb
outs
and
inc
xchg
stos
je
jmp
dec
adc
out
and
es
mov
stos
idiv
xchg
popa
pop
dec
jmp
and
and
retf
xor
add
cld
mov
out
mov
jg
and
lods
dec
mov
mov
jmp
sub
jg
xchg
push
mov
bound
mov
loope
(bad)
movs
leave
mov
add
(bad)
dec
pop
xor
mov
xchg
push
pop
lea
(bad)
out
repnz
pop
and
(bad)
dec
push
(bad)
cmps
dec
jmp
lds
dec
xlat
sti
fs
fidivr
mov
dec
cmp
ins
mov
in
call
js
aad
mov
dec
addr16
in
and
(bad)
(bad)
push
cmps
mov
out
mov
sub
clc
xor
mov
(bad)
inc
clc
call
pop
adc
sbb
sahf
mov
lods
shl
call
(bad)
jmp
inc
inc
imul
cmp
ins
out
cmp
xchg
sahf
cmp
lods
(bad)
inc
xchg
cli
or
(bad)
cdq
add
add
ss
outs
(bad)
(bad)
(bad)
dec
ja
nop
hlt
hlt
shr
pop
xlat
inc
ret
das
fdiv
jmp
mov
(bad)
(bad)
dec
js
push
add
pop
add
fild
sub
xlat
ret
push
ds
(bad)
(bad)
(bad)
call
mov
cmps
stos
mov
push
into
mov
cmps
adc
into
(bad)
rcr
ror
(bad)
(bad)
(bad)
call
addr16
push
cs
jb
sub
inc
jp
icebp
test
pop
in
add
xor
(bad)
(bad)
inc
out
les
stos
into
xor
jnp
pop
fisub
das
xchg
mov
xchg
jmp
(bad)
fistp
push
cmc
arpl
mov
sub
in
popf
call
inc
adc
and
mov
movs
sub
add
sbb
(bad)
dec
adc
(bad)
pushf
repnz
adc
jae
mov
retf
data16
xor
call
(bad)
(bad)
cmp
leave
mov
add
sub
outs
mov
push
mov
fadd
jns
pop
icebp
jmp
push
jbe
imul
add
inc
jno
fs
ror
xchg
push
es
adc
(bad)
(bad)
push
xlat
jnp
pop
(bad)
outs
jmp
cmp
add
in
jmp
daa
mov
cmp
mov
mov
pop
inc
vminps
out
retf
bound
mov
sahf
jae
out
pushf
and
(bad)
inc
(bad)
xchg
and
xor
imul
or
loope
jae
ror
fwait
cmc
jb
lea
enter
jmp
xchg
pop
cld
jp
jne
outs
ret
arpl
jbe
dec
(bad)
mov
rcl
(bad)
push
std
mov
jecxz
(bad)
out
and
ja
xlat
into
push
ret
inc
sbb
aas
pop
mov
(bad)
call
test
mov
jl
mov
(bad)
fcomp
and
outs
sub
lock
(bad)
(bad)
call
sahf
loope
sub
xor
out
cmps
xchg
inc
mov
dec
jle
pop
mov
mov
push
(bad)
fcomip
jmp
mov
mov
(bad)
mov
(bad)
mov
nop
sbb
(bad)
(bad)
(bad)
push
mov
sub
jp
(bad)
xor
mov
pop
inc
shl
inc
mov
pop
scas
add
bound
(bad)
(bad)
call
std
popf
sbb
cwde
xor
pop
xor
mov
call
test
sub
adc
(bad)
push
add
add
(bad)
shl
or
sbb
inc
popf
add
in
adc
push
inc
jmp
jnp
inc
or
jmp
shl
mov
clc
(bad)
mov
mov
sbb
cwde
popf
adc
fs
and
fidiv
scas
jo
mov
adc
sbb
test
and
inc
lods
inc
dec
pop
arpl
cmp
test
inc
mov
jmp
add
lahf
mov
sbb
mov
fcom
test
(bad)
jmp
cmp
or
in
dec
and
fwait
sub
imul
xchg
adc
repz
jmp
(bad)
(bad)
(bad)
cmp
out
xchg
or
jmp
sahf
(bad)
dec
jne
movs
xchg
mov
inc
fcmovnbe
call
mov
sub
mov
add
dec
inc
rcr
jnp
(bad)
jmp
xchg
xor
mov
xchg
push
imul
adc
(bad)
and
lock
lods
popa
ror
out
add
pop
cmps
ins
dec
xchg
jg
inc
(bad)
jmp
cwde
xchg
pushf
out
cmp
xchg
imul
jmp
(bad)
(bad)
(bad)
call
push
cmp
and
call
rol
and
outs
and
scas
jg
(bad)
(bad)
call
push
dec
cmp
int
xor
retf
cmp
push
push
das
push
(bad)
cmp
pop
pushf
pop
(bad)
(bad)
(bad)
call
jmp
mov
cmps
test
sbb
popa
adc
mov
jg
jg
ins
out
push
lock
sub
mov
push
mov
cmp
(bad)
(bad)
push
nop
leave
retf
dec
bound
sub
pop
ins
data16
out
imul
and
inc
mov
pop
jbe
fidivr
pop
mov
xor
(bad)
(bad)
fist
out
adc
pop
mov
ss
cld
int
pop
hlt
lea
movs
lods
push
cli
pop
cld
(bad)
(bad)
call
test
cmp
jp
enter
push
add
aam
(bad)
(bad)
(bad)
aas
jl
jmp
pop
add
mov
call
hlt
pop
adc
and
or
inc
(bad)
(bad)
(bad)
jmp
out
aad
cmp
sbb
std
push
mov
mov
mov
ins
out
dec
jb
push
jae
and
cmp
push
sub
mov
(bad)
(bad)
out
add
push
jae
test
xor
out
jns
mov
mov
mov
retf
or
jbe
or
inc
mov
dec
rcr
nop
inc
mov
aam
(bad)
call
or
sbb
in
cmp
rcr
scas
or
pop
xlat
loope
cmp
aad
aaa
ds
aaa
cld
jmp
ins
sub
scas
mov
movs
das
aad
adc
fdivrp
(bad)
call
inc
jbe
sub
or
lea
sbb
push
xor
(bad)
(bad)
call
repnz
(bad)
movs
js
out
(bad)
pushf
enter
cs
pop
dec
cmp
adc
and
fwait
push
enter
(bad)
out
icebp
xchg
shl
mov
lds
(bad)
cmps
pop
pop
cmp
(bad)
(bad)
(bad)
dec
sub
sub
dec
repz
sbb
xchg
and
loopne
scas
pop
sbb
xor
ror
clc
call
jg
(bad)
neg
(bad)
(bad)
(bad)
inc
stc
iret
jp
push
repz
clc
cwde
daa
push
cld
je
das
mov
jae
hlt
in
inc
dec
aaa
push
sub
jmp
rcl
sbb
mov
xor
xlat
pop
stc
add
lods
leave
ss
(bad)
(bad)
jmp
fadd
push
loop
ficomp
lea
mov
sub
in
push
out
mov
jmp
in
add
pop
fs
dec
xor
idiv
test
mov
call
cmp
inc
cmp
mov
mov
xchg
adc
lea
pop
int3
pushf
fdivr
add
(bad)
(bad)
jg
push
xchg
xor
ss
mov
dec
in
xchg
repnz
and
ins
mov
jecxz
(bad)
push
mov
sti
jp
call
sub
add
xor
mov
push
jno
jg
add
push
ud2
icebp
xchg
neg
enter
pop
pop
(bad)
jg
push
stc
jnp
xor
push
cmp
(bad)
xor
push
and
arpl
(bad)
jmp
add
ins
jle
mov
nop
push
mov
ins
fsubrp
mov
fisttp
sbb
(bad)
(bad)
mov
mov
loope
cmp
icebp
lock
ds
sub
adc
(bad)
(bad)
(bad)
(bad)
std
and
call
push
test
xchg
mov
retf
xchg
pop
movs
cmp
lods
jmp
not
stc
adc
cmp
jp
test
sub
sbb
and
ins
fcomi
adc
fidiv
inc
cmps
pop
xchg
out
jbe
sar
pop
fdivp
lock
repnz
(bad)
(bad)
(bad)
(bad)
fstp
xchg
jnp
jnp
fsub
cmps
push
fcom
mov
sub
(bad)
push
std
pop
mov
push
in
out
pop
daa
lea
xlat
mov
sar
(bad)
(bad)
jmp
cmp
cmp
cmc
xor
outs
jg
sub
jle
xchg
es
mov
(bad)
(bad)
inc
mov
jle
jp
push
mov
jmp
jg
inc
pushf
sti
add
cli
push
add
jmp
push
sbb
push
add
std
jp
cmps
mov
push
out
jp
(bad)
out
and
xchg
mov
inc
cdq
mov
cli
jo
jnp
jmp
cli
xchg
pop
mov
sub
xor
pop
retf
mov
movs
jmp
dec
adc
(bad)
(bad)
mov
push
jmp
aad
mov
popf
push
sub
in
icebp
cmp
(bad)
call
call
aas
iret
scas
jb
retf
loopne
ret
fs
cdq
in
cdq
nop
mov
(bad)
(bad)
(bad)
(bad)
cmp
xor
adc
cli
out
std
inc
jne
pop
cmp
shr
cmp
cld
(bad)
(bad)
(bad)
out
lock
sar
imul
dec
cs
mov
mov
sbb
and
ins
push
add
lods
retf
dec
inc
fdiv
xor
mov
mov
outs
ficomp
cli
daa
mov
(bad)
(bad)
(bad)
push
movs
cmps
pusha
or
and
mov
rcr
mov
std
pop
inc
cmp
mov
jmp
out
pusha
and
add
mov
repz
xor
pop
enter
xchg
jmp
push
leave
jl
xlat
jo
nop
into
out
xor
(bad)
popa
test
add
shl
je
mov
sbb
push
jne
xor
dec
pushf
jnp
xchg
pop
loop
sbb
(bad)
(bad)
call
(bad)
xor
js
mov
cmp
pop
mov
mov
xor
or
(bad)
(bad)
(bad)
frstor
push
inc
icebp
test
inc
mov
lahf
dec
mov
mul
pop
or
std
xchg
mov
mov
inc
ins
mov
fcomp
mov
pop
cli
cmp
js
shl
js
(bad)
call
xlat
(bad)
cld
jmp
inc
pusha
push
mov
dec
cmps
adc
(bad)
(bad)
dec
int3
mov
pushf
jb
sub
pop
js
xchg
xor
inc
xor
xor
out
clc
(bad)
(bad)
call
sub
mov
fbld
outs
dec
sbb
fld
add
retf
inc
in
push
mov
mov
jnp
sub
lock
fsub
out
sub
push
cli
jg
sbb
jno
mov
dec
xchg
dec
pop
xchg
(bad)
call
popa
dec
enter
xor
test
inc
jge
mov
ins
jmp
(bad)
mov
and
ss
adc
into
hlt
ret
inc
(bad)
(bad)
mov
jne
jns
icebp
sbb
cld
push
mov
and
arpl
cmps
into
cmp
(bad)
jnp
cmps
and
cmps
push
mov
sub
pop
xchg
pop
mov
mov
jbe
in
sub
pop
or
xchg
shl
cld
(bad)
inc
pop
sbb
inc
sbb
sar
(bad)
ins
mov
xchg
(bad)
(bad)
mov
in
xchg
sti
push
mov
rol
push
out
and
xchg
jmp
or
push
cmc
jbe
inc
fs
aad
cld
xor
(bad)
(bad)
call
ror
push
push
adc
ret
mov
out
adc
push
(bad)
(bad)
jmp
mov
add
push
in
add
in
mov
sbb
(bad)
inc
fst
(bad)
(bad)
jmp
mov
scas
cli
cmp
ins
mov
test
xchg
sbb
je
lock
(bad)
(bad)
push
aad
and
push
out
ja
loop
sub
xor
sub
xchg
jbe
cli
jmp
cmc
mov
sbb
shl
test
inc
test
out
xchg
jp
rcl
sub
jmp
xchg
xlat
and
dec
in
into
ficom
ins
imul
mov
push
pop
outs
push
or
sub
retf
(bad)
(bad)
(bad)
fcomp
lahf
jmp
jnp
ins
inc
ret
ja
mov
jns
lods
jb
push
xor
mov
push
(bad)
(bad)
(bad)
(bad)
aas
xchg
pop
cwde
push
inc
and
loope
mov
adc
mov
fisubr
ss
(bad)
jmp
sti
in
jmp
jp
test
(bad)
mov
cmc
ins
push
mov
push
inc
add
lods
adc
(bad)
(bad)
(bad)
(bad)
aas
fild
inc
pop
mov
sub
dec
xchg
rol
xlat
mov
or
mov
(bad)
(bad)
(bad)
dec
mov
lds
arpl
cmp
in
jnp
and
xchg
aad
(bad)
(bad)
mov
mov
sbb
push
jge
inc
in
mov
adc
nop
sahf
clc
inc
inc
mov
(bad)
(bad)
dec
pop
push
xchg
je
jbe
push
mov
sti
ficom
sti
cmps
adc
xor
pop
(bad)
(bad)
(bad)
(bad)
fisub
(bad)
out
fs
repnz
aaa
lea
mov
cmps
mov
add
jo
sub
test
or
(bad)
call
or
hlt
push
adc
mov
push
push
cmp
sbb
jmp
mov
cmc
jecxz
ss
push
std
cdq
xchg
(bad)
cmp
sbb
ins
(bad)
(bad)
(bad)
inc
outs
bound
mov
mov
mov
sbb
(bad)
(bad)
call
aas
lods
stc
test
ins
popa
mov
shr
fdiv
sub
mov
not
mov
inc
jg
pop
bound
cld
and
fcomp
or
push
push
mov
repnz
mov
fsub
(bad)
jmp
dec
dec
adc
inc
cmc
mov
xchg
xor
call
jnp
or
add
pusha
dec
or
leave
in
stos
popa
in
(bad)
(bad)
jmp
call
and
scas
pop
xor
inc
sbb
les
mov
cmp
ret
(bad)
(bad)
(bad)
jmp
out
and
mov
and
imul
sti
mov
xchg
dec
(bad)
(bad)
(bad)
(bad)
cld
mov
dec
mov
popa
sub
(bad)
loop
xchg
jnp
add
dec
outs
fld
pop
jp
mov
jmp
jecxz
(bad)
jnp
ror
pop
int3
fimul
enter
sub
cwde
(bad)
sub
(bad)
jmp
scas
out
or
inc
jmp
repnz
sbb
xor
xor
(bad)
jmp
fisubr
imul
outs
jp
adc
or
cmps
adc
cmp
(bad)
(bad)
(bad)
jmp
ins
mov
add
pop
mov
repnz
pushf
lahf
xchg
lods
(bad)
(bad)
(bad)
(bad)
inc
out
cmp
add
pop
popa
iret
scas
out
push
jb
les
cmp
aam
(bad)
(bad)
(bad)
jge
sahf
mov
test
enter
into
jns
mov
sub
int
mov
xchg
sub
(bad)
(bad)
(bad)
dec
lahf
fdiv
out
loope
out
popa
stos
xchg
xchg
cmp
loopne
pop
adc
pop
loopne
loopne
push
mov
lods
push
test
cmp
call
call
(bad)
push
bound
pusha
ss
ror
jns
inc
xchg
sbb
mov
cld
and
out
(bad)
(bad)
push
mov
pushf
fwait
test
dec
stos
push
fild
pop
and
(bad)
popa
jb
push
dec
fdivr
mov
mov
add
sbb
lea
int
repnz
jge
pop
sar
pusha
(bad)
(bad)
(bad)
(bad)
cmp
shr
(bad)
bound
out
imul
xchg
test
(bad)
mov
ds
shr
xchg
sbb
(bad)
jmp
neg
cdq
fld
retf
mov
mov
jle
jmp
popa
push
(bad)
(bad)
jmp
mov
into
sub
sub
jmp
loope
(bad)
(bad)
jg
or
mov
cwde
dec
aaa
push
icebp
cmp
(bad)
call
(bad)
f2xm1
mov
xchg
inc
(bad)
push
ins
inc
xchg
(bad)
in
adc
(bad)
(bad)
(bad)
cmp
sbb
push
out
stc
cmp
lds
inc
pop
into
jbe
sbb
fistp
pop
test
fisttp
jecxz
aad
jnp
in
dec
loop
movs
mov
loop
jmp
xchg
leave
daa
call
cmp
xor
pop
lock
clc
mov
and
jl
jecxz
cwde
xor
sub
repz
(bad)
(bad)
(bad)
jmp
lsl
push
test
outs
ror
xchg
jno
xchg
mov
(bad)
dec
mov
out
std
jmp
xlat
or
jb
shl
add
add
das
imul
inc
call
sahf
pop
idiv
add
into
mov
cmp
inc
jo
inc
addr16
int3
sbb
retf
retf
(bad)
(bad)
xlat
out
movs
cmp
adc
(bad)
(bad)
(bad)
inc
cmp
(bad)
(bad)
fld
(bad)
int
test
std
dec
push
ret
ins
cdq
mov
(bad)
(bad)
dec
xor
dec
iret
inc
xchg
adc
push
push
xchg
and
adc
mov
test
add
mov
pop
jo
sti
(bad)
(bad)
inc
xchg
scas
mov
popa
mov
arpl
lods
mov
push
ins
xchg
cmp
push
xor
popf
xchg
add
mov
es
(bad)
(bad)
call
stc
cwde
out
lea
mov
lea
std
lock
repnz
bound
(bad)
(bad)
xchg
imul
sub
scas
adc
je
jb
(bad)
(bad)
(bad)
jmp
retf
mov
cmp
clc
mov
cli
sub
enter
jae
jecxz
jl
add
cmps
pop
xchg
xor
and
and
sar
or
and
mov
add
(bad)
ret
ds
movs
aam
test
repnz
mov
sbb
loop
mov
outs
and
(bad)
sar
mov
xchg
pop
icebp
mov
mov
fadd
repz
(bad)
push
shr
add
ror
sahf
jnp
dec
(bad)
and
(bad)
jmp
xor
inc
mov
jecxz
add
mov
inc
xchg
mov
in
(bad)
(bad)
(bad)
call
jnp
and
dec
mul
je
loop
or
add
adc
(bad)
(bad)
ja
jb
in
ss
(bad)
(bad)
call
cs
pusha
push
test
scas
(bad)
(bad)
(bad)
jmp
shr
stc
or
loope
fisttp
push
fucomp
test
push
mov
int3
(bad)
jmp
es
(bad)
lds
es
test
add
xor
(bad)
pop
arpl
(bad)
(bad)
jmp
mov
stos
inc
movd
mov
fnstcw
dec
das
sbb
retf
test
lea
or
mov
mov
pop
jbe
(bad)
call
in
iret
test
lock
xchg
jl
jns
cld
jmp
adc
pop
xchg
xchg
push
aad
inc
add
dec
cli
leave
push
sbb
xor
push
mov
call
loopne
push
mov
mov
fadd
dec
ja
xchg
xchg
jne
das
cmp
(bad)
(bad)
(bad)
(bad)
mov
and
push
xchg
je
sub
push
or
ins
fcomp
adc
clc
(bad)
(bad)
jmp
ret
cmp
(bad)
call
push
jle
xchg
sub
inc
repz
jmp
push
scas
les
add
dec
mov
push
in
stos
xor
(bad)
(bad)
jg
lock
test
ins
pop
and
enter
sbb
xchg
ds
(bad)
(bad)
(bad)
inc
push
fcmovbe
mov
aam
jp
arpl
lock
jecxz
or
and
dec
push
pop
sbb
ret
xor
(bad)
(bad)
dec
jmp
cli
in
jmp
fsub
pop
clc
inc
sti
ja
xchg
ficom
mov
shl
hlt
mov
mov
pusha
adc
sahf
repz
adc
ss
cwde
sub
bound
mov
or
push
inc
call
xchg
adc
int
adc
call
xor
arpl
xor
retf
or
out
cmp
jno
adc
stos
call
pop
xlat
cld
mov
inc
xlat
aaa
out
push
cli
lahf
out
cmp
jmp
inc
jb
jne
test
dec
pop
loope
ins
mov
add
push
mov
(bad)
(bad)
(bad)
std
fimul
in
xchg
jnp
in
ret
outs
sbb
div
in
jne
int3
cli
pushf
pusha
(bad)
(bad)
(bad)
jmp
ins
retf
jo
popa
sti
ins
mov
in
xor
dec
repnz
sub
xchg
dec
addr16
mov
add
pop
mov
jnp
shl
cdq
jle
pop
dec
in
xor
jmp
clc
call
ret
std
rcr
ds
jge
popf
cdq
xchg
es
fdivrp
jp
test
and
out
cmp
jbe
mov
(bad)
(bad)
(bad)
aas
call
int
add
ss
xor
xor
pop
sub
jge
call
cld
xchg
fidivr
ss
jmp
xchg
pop
adc
imul
es
push
pop
sub
dec
out
(bad)
sbb
(bad)
adc
add
inc
ret
aam
shl
sti
cmp
out
(bad)
pop
sbb
call
sti
inc
(bad)
or
stc
inc
mov
aad
fcmovbe
imul
(bad)
lahf
sbb
inc
js
xor
stos
rol
mov
sub
add
(bad)
push
shl
test
rcr
adc
out
hlt
mov
(bad)
(bad)
mov
push
mov
mov
aad
or
adc
and
mov
stos
jg
sub
xchg
out
mov
(bad)
(bad)
(bad)
jmp
jle
call
fwait
aad
lds
push
dec
xor
add
jbe
arpl
clc
(bad)
(bad)
inc
dec
cld
pop
cmp
fwait
xchg
test
jae
xchg
mov
cs
push
test
(bad)
(bad)
out
mov
dec
push
pop
jb
(bad)
or
add
push
cdq
inc
or
jge
(bad)
(bad)
jmp
mov
lock
std
cmp
(bad)
gs
(bad)
fistp
cmp
pusha
push
fld
jmp
adc
clc
and
push
push
sbb
call
sbb
xchg
nop
ins
and
in
cmp
pop
or
fwait
sbb
(bad)
call
add
(bad)
adc
push
(bad)
in
test
(bad)
dec
push
lods
jne
jnp
mov
rcr
inc
pop
dec
adc
in
fild
or
cmps
loope
sub
mov
push
das
clc
call
out
cmp
pop
push
stos
cmps
push
das
or
idiv
(bad)
(bad)
(bad)
fcom
pushf
mov
inc
inc
fimul
gs
add
test
dec
cmp
(bad)
(bad)
jmp
pop
inc
icebp
neg
inc
cmp
test
jno
fdiv
pop
in
jne
cmp
(bad)
enter
sbb
test
clc
(bad)
dec
xchg
iret
not
imul
sbb
icebp
xchg
(bad)
jmp
into
imul
pop
and
sbb
add
and
retf
mov
cmc
hlt
mov
(bad)
fisttp
or
xor
jne
daa
scas
push
mov
xor
ja
mov
mov
rcr
or
aam
inc
lds
cmp
(bad)
(bad)
(bad)
fistp
sbb
sbb
test
cmp
mov
jl
cmp
pop
sahf
sub
(bad)
(bad)
(bad)
call
idiv
into
(bad)
rol
out
and
cmp
push
mov
cs
push
(bad)
out
outs
imul
xchg
cmc
(bad)
(bad)
dec
test
inc
cmp
(bad)
repnz
mov
pop
hlt
add
sbb
jle
and
stos
(bad)
(bad)
(bad)
call
mov
retf
scas
mov
inc
adc
xor
out
lahf
jl
mov
push
mov
jmp
(bad)
mov
and
jbe
imul
loopne
push
rcr
(bad)
(bad)
(bad)
(bad)
cmp
mov
cmp
pop
or
in
jmp
call
cmp
aaa
cdq
mov
out
cli
cmp
add
ds
mov
lea
cmp
icebp
clc
dec
inc
mov
mov
cmps
mov
mov
(bad)
(bad)
call
retf
hlt
sti
and
jg
adc
icebp
hlt
mov
in
aam
pop
pop
mov
(bad)
(bad)
(bad)
(bad)
(bad)
fld
cmp
mov
or
mov
int3
cwde
push
out
add
(bad)
(bad)
(bad)
call
sbb
pop
push
data16
loop
push
movs
retf
jne
jl
cmp
sub
jne
test
(bad)
(bad)
(bad)
sti
imul
stc
cwde
push
test
jbe
mov
push
sub
cmp
stos
mov
jl
(bad)
(bad)
call
pop
push
cli
push
out
or
js
fstp
pop
push
mov
adc
xor
(bad)
call
sbb
retf
push
jbe
dec
adc
pop
pop
dec
lds
mov
(bad)
(bad)
(bad)
call
dec
pushf
jae
or
and
shufps
push
das
jnp
xor
mov
pop
je
jb
push
repnz
std
push
inc
(bad)
rcl
xor
cwde
push
std
jmp
push
or
sub
outs
and
in
xlat
mov
sub
clc
loopne
das
mov
popf
push
and
(bad)
(bad)
push
(bad)
ins
sub
das
mov
out
(bad)
pop
das
mov
jne
aaa
icebp
call
jmp
xchg
mov
rcr
inc
inc
mov
xchg
lods
dec
rcr
jl
retf
pop
das
fs
(bad)
(bad)
(bad)
push
jae
cmc
sub
into
adc
icebp
mov
cmp
rcl
(bad)
dec
icebp
test
aaa
out
aaa
retf
popf
mov
jecxz
sub
adc
jno
ror
icebp
sbb
rol
loopne
push
fbstp
mov
neg
or
cmc
add
jbe
(bad)
call
mov
cmps
sahf
and
stos
pusha
mov
fdiv
pop
(bad)
repz
xchg
call
xor
ret
hlt
es
fdivrp
popf
mov
ins
outs
dec
sar
push
and
(bad)
jmp
fisub
add
inc
mov
inc
dec
sbb
mov
lock
mov
sbb
retf
dec
(bad)
(bad)
(bad)
inc
fwait
jge
dec
and
sbb
movs
adc
pop
shl
rol
or
jb
xor
inc
jo
sub
jmp
add
out
cmp
cmp
(bad)
lahf
adc
pop
call
call
jmp
jl
jo
cmp
aas
loopne
push
mov
mov
popf
call
mov
mov
test
(bad)
(bad)
(bad)
push
and
mov
inc
or
dec
ss
jae
fwait
leave
xor
test
pop
xor
lds
int3
jno
pop
fcmovbe
or
ret
adc
in
jge
cmp
loope
jbe
mov
(bad)
jmp
into
push
add
int
inc
das
pusha
stc
push
cli
arpl
adc
icebp
jb
jecxz
pop
inc
loopne
xor
pop
push
xchg
jo
outs
call
not
aam
lods
cmp
sbb
lahf
pop
jae
out
cmp
test
int3
jmp
mov
(bad)
(bad)
push
call
test
or
out
adc
push
cli
aad
rcl
cmps
js
cli
(bad)
(bad)
(bad)
push
xor
jecxz
adc
lds
jmp
xchg
pop
fs
lahf
lahf
xchg
iret
(bad)
push
inc
pushf
test
mov
imul
push
ins
jg
int3
(bad)
mov
in
jecxz
jns
cdq
cmp
xchg
mov
ret
sub
test
pop
loopne
sub
or
daa
xchg
stos
(bad)
adc
and
loope
or
xchg
imul
cs
inc
fidiv
outs
cmp
add
sti
and
in
adc
jbe
mov
xchg
(bad)
(bad)
out
adc
bound
fild
sub
(bad)
(bad)
jns
pop
jbe
jb
fucom
mov
xchg
retf
mov
mov
les
adc
mov
push
lods
jmp
(bad)
mov
inc
stos
inc
jae
leave
data16
xor
loope
jmp
in
iret
fcomip
(bad)
(bad)
cmp
add
cmp
push
jmp
ret
out
outs
or
mov
sub
call
lds
push
cmps
dec
mov
adc
inc
into
sbb
and
cmp
cs
in
fild
mov
call
(bad)
(bad)
call
xor
(bad)
or
push
(bad)
jl
rol
in
adc
(bad)
mov
xor
sbb
jae
test
stos
mov
(bad)
(bad)
push
sahf
sub
fld
leave
js
inc
sub
jle
push
cmp
pop
fucompp
daa
cwde
popf
jg
add
sbb
maxps
out
(bad)
(bad)
dec
lods
clc
mov
sbb
cmp
inc
mov
jmp
(bad)
(bad)
(bad)
jmp
cmps
mov
mov
push
or
and
je
movs
test
(bad)
call
xor
add
cmp
jae
adc
aad
mov
inc
pop
hlt
(bad)
(bad)
(bad)
call
sub
leave
pop
mov
push
cmp
pop
and
repnz
es
push
jg
cmp
ret
(bad)
(bad)
jmp
retf
inc
popf
mov
adc
call
and
es
leave
out
bound
rol
fbstp
ins
mov
sbb
jns
dec
out
int3
sbb
jmp
add
imul
jmp
jo
test
(bad)
push
jmp
push
hlt
dec
xor
hlt
xchg
arpl
cmp
dec
jle
mov
or
jle
scas
jle
adc
(bad)
push
pop
mov
aad
pop
add
xor
add
sub
lods
fnsave
dec
ds
(bad)
push
lock
outs
mov
jmp
jo
les
sub
or
(bad)
(bad)
(bad)
push
stos
cmp
scas
xchg
stos
cmps
xchg
repz
or
scas
inc
stos
push
(bad)
sbb
jmp
jmp
adc
and
repnz
mov
xor
(bad)
stc
scas
xchg
(bad)
(bad)
(bad)
push
add
add
sub
sti
and
jmp
jg
cmp
sub
mov
mov
loopne
fxam
jns
sar
fcomip
dec
ds
movs
fstp
outs
(bad)
in
dec
daa
(bad)
out
clc
(bad)
mov
loop
xor
gs
and
inc
pop
mul
lock
(bad)
(bad)
fiadd
clc
sub
or
push
xor
sub
xlat
xor
inc
jb
(bad)
jmp
and
stos
mov
outs
aaa
and
retf
mov
sbb
mov
and
arpl
stc
mov
pop
out
in
inc
jle
dec
loop
shr
jmp
pop
add
stos
sbb
and
(bad)
fcomip
call
icebp
stos
push
mov
dec
fisttp
pop
les
loop
xchg
jbe
in
mov
call
sbb
sbb
call
ins
xor
pop
inc
adc
cmp
jp
jp
fscale
ficom
call
or
cld
loopne
sbb
jl
jle
add
and
imul
pop
push
cmps
in
jne
push
mov
idiv
std
and
lock
repnz
cli
(bad)
dec
cmp
mov
sbb
lahf
push
daa
mov
pop
fwait
and
mov
(bad)
mov
movs
loopne
push
adc
mov
leave
sbb
mov
add
jg
push
xor
(bad)
enter
outs
das
add
cwde
ret
push
dec
mov
adc
(bad)
inc
fdiv
mov
xlat
mov
jnp
jl
xlat
(bad)
loop
lods
mov
push
pusha
rol
into
mov
mov
loop
(bad)
(bad)
dec
sbb
push
xor
jmp
push
in
xor
out
sbb
cmp
add
lods
adc
and
fucom
sub
push
cmp
push
mov
and
dec
repnz
nop
test
(bad)
(bad)
(bad)
cmp
mov
retf
adc
and
imul
scas
enter
stos
je
in
nop
out
loopne
out
dec
sar
dec
aas
fstp
js
xchg
cmc
push
xchg
mov
les
dec
fwait
cwde
mov
dec
arpl
jb
imul
adc
xchg
adc
push
fbld
movs
outs
stos
mov
(bad)
(bad)
(bad)
push
xchg
mov
mov
or
lods
popf
mov
leave
call
inc
mov
sbb
sar
scas
outs
xchg
out
jne
mov
leave
sti
xor
cmps
sub
push
out
xor
je
inc
sub
push
jle
clc
(bad)
jmp
pop
sub
pop
icebp
sub
push
mov
int3
leave
cld
(bad)
(bad)
(bad)
(bad)
cmp
xor
je
ja
inc
inc
and
push
pop
stos
push
and
lea
and
mov
test
jmp
sbb
pop
iret
ds
add
mov
push
cld
dec
sub
xor
jle
push
xchg
push
pop
rcr
mov
data16
xlat
cmps
sbb
sub
(bad)
(bad)
inc
push
dec
pop
popf
mov
xor
retf
mov
shr
test
in
adc
aaa
inc
lods
push
aad
adc
cmp
dec
sar
cmp
inc
sbb
(bad)
(bad)
call
lahf
je
jg
repz
in
pop
pop
jo
mov
icebp
sbb
cld
daa
inc
dec
xchg
repz
imul
inc
call
jg
push
mov
push
aam
hlt
mov
or
jle
jno
xchg
xlat
(bad)
(bad)
(bad)
mov
adc
sti
std
adc
sub
mov
mov
les
(bad)
or
loopne
(bad)
jg
inc
mov
aaa
and
nop
fcom
fnstsw
jg
add
dec
ss
imul
hlt
push
leave
idiv
and
xchg
mov
pop
call
shl
inc
mov
and
(bad)
(bad)
inc
stos
pusha
out
cmc
aaa
jge
leave
or
sar
repz
(bad)
arpl
xchg
inc
inc
cwde
mov
(bad)
dec
inc
cmp
imul
xor
jp
inc
mov
inc
std
call
test
test
push
arpl
inc
add
pop
mov
rcr
int
sbb
and
aad
add
(bad)
jmp
scas
(bad)
push
mov
gs
ror
test
(bad)
call
dec
arpl
and
push
out
pushaw
jno
bound
pop
ins
dec
and
(bad)
jmp
xor
test
ss
xchg
fldenv
push
sti
inc
popf
ss
adc
pop
das
and
cld
xor
ins
xchg
movs
mov
and
(bad)
(bad)
call
adc
push
jmp
add
pop
leave
mov
pop
call
mov
scas
cdq
sbb
lods
pop
das
(bad)
cld
mov
int3
test
sbb
jne
fst
fdivp
call
int3
fistp
imul
xor
add
dec
fdivr
std
xchg
add
cmp
jmp
xchg
or
(bad)
(bad)
dec
add
cmp
pushf
mov
stos
(bad)
shl
push
mov
sbb
(bad)
(bad)
call
in
shl
and
add
pop
test
xchg
arpl
cdq
imul
mov
push
cmp
fisttp
mov
sub
cmp
or
mov
mov
jecxz
pop
retf
mov
ror
jnp
mov
(bad)
inc
movs
gs
fldenv
adc
in
rcl
stos
cli
add
xchg
sub
inc
push
(bad)
(bad)
(bad)
push
loop
fsubr
xchg
nop
mov
xchg
mov
jbe
mov
jb
or
xor
(bad)
(bad)
dec
jbe
xchg
movs
sub
dec
cld
fsub
gs
hlt
(bad)
mov
push
ins
inc
inc
add
ins
and
jge
inc
push
inc
test
sub
pushf
fadd
call
or
(bad)
jg
call
xor
xchg
xchg
nop
ret
daa
cmp
dec
dec
ins
jmp
push
arpl
xchg
and
ja
cmps
call
loopne
inc
pop
dec
add
mov
mov
out
sub
jle
les
fldcw
shl
jns
add
adc
(bad)
jmp
icebp
and
ins
mov
sub
xlat
mov
fist
xor
in
push
into
adc
push
dec
sahf
cmp
mov
xlat
push
rcr
stos
xchg
push
push
xchg
ret
jg
sub
jle
sub
adc
cdq
daa
add
push
or
sub
out
or
(bad)
dec
push
repnz
into
xor
(bad)
mov
jae
js
jle
cmps
add
dec
mov
xor
sbb
push
mov
(bad)
out
es
mov
arpl
add
adc
fdiv
xor
sub
ret
pop
sbb
adc
stc
jno
jb
pushf
sbb
push
mov
(bad)
(bad)
(bad)
js
lock
test
enter
cmp
push
(bad)
mov
xor
and
or
lahf
aam
outs
sub
adc
push
jle
dec
loope
call
leave
add
add
pop
sar
push
fidiv
cmp
push
or
xchg
or
xor
std
add
out
imul
loope
ror
ja
call
bound
call
out
shl
dec
retf
outs
mov
outs
sub
mov
mov
(bad)
dec
ins
shl
mov
cdq
xor
sbb
iret
xchg
push
jo
(bad)
jmp
mov
sbb
cmp
test
cmp
(bad)
(bad)
jmp
dec
mov
jl
les
or
icebp
jle
mov
retf
and
(bad)
inc
retf
adc
xor
inc
movs
mov
loopne
xor
je
cmc
iret
mov
dec
std
adc
push
jo
mov
nop
ficom
jnp
lahf
add
jg
inc
add
sub
ins
sar
(bad)
jmp
and
cld
cdq
mov
cmp
mov
or
imul
dec
sbb
sbb
out
sbb
jae
out
mov
pop
xchg
imul
add
ret
arpl
(bad)
(bad)
jg
retf
enter
test
cmps
and
ror
(bad)
(bad)
fcomp
jne
je
scas
pop
jg
ficomp
sbb
jge
push
cmp
aaa
enter
inc
call
jnp
pop
cmc
mov
xor
pop
cmc
lods
fs
inc
xchg
pop
div
stos
cmp
sbb
mov
inc
bnd
push
inc
adc
and
and
(bad)
(bad)
(bad)
jmp
call
test
jp
jl
inc
push
out
mov
add
mov
addr16
dec
hlt
jo
(bad)
(bad)
call
xchg
sar
ds
xor
and
sub
adc
jne
shr
call
push
mov
call
dec
aaa
jle
sti
adc
test
xor
cli
(bad)
(bad)
(bad)
(bad)
cmp
mov
loopne
and
sahf
mov
es
mov
js
sbb
pop
lock
ds
xchg
loope
call
inc
es
mov
fild
dec
(bad)
(bad)
cmp
or
loope
mov
aaa
lock
call
mov
push
push
xchg
ins
add
xor
mov
push
mov
sar
dec
mov
add
mov
enter
fcos
mov
push
sub
inc
cld
push
retf
lea
fidiv
mov
xor
(bad)
(bad)
(bad)
push
into
cmp
mov
ja
xchg
pop
in
into
ds
push
shr
sbb
mov
(bad)
push
inc
in
jbe
leavew
stc
xor
xor
inc
cmp
or
jns
je
(bad)
(bad)
(bad)
inc
mov
add
lods
scas
xor
scas
add
push
scas
cmps
xor
inc
bound
ret
inc
(bad)
(bad)
(bad)
jmp
adc
push
fcmovnu
push
pusha
dec
mov
jns
mov
int3
mov
xor
je
stos
pop
cmp
jmp
sub
clc
inc
(bad)
mov
sub
jl
lea
retf
or
lods
inc
int
jle
sbb
add
out
call
call
sub
mov
outs
dec
pop
mov
(bad)
(bad)
jg
push
out
push
mov
dec
cld
lds
push
adc
push
leave
add
and
sar
sub
mov
sahf
out
inc
ds
cmc
les
stos
loope
xor
(bad)
(bad)
call
mov
cmp
add
out
jl
adc
mov
mov
xchg
xchg
xchg
or
in
push
aad
(bad)
(bad)
push
sbb
out
test
loop
shl
ins
iret
lea
xchg
ins
dec
popf
cmp
fcomip
mov
std
mov
jbe
mov
sbb
mov
jmp
dec
cld
mov
and
vmwrite
add
xchg
add
stc
dec
mov
call
inc
xor
xchg
neg
cwde
fwait
sbb
xlat
push
cdq
push
(bad)
(bad)
(bad)
call
sub
and
pop
fs
push
loopne
scas
jmp
mov
rol
jecxz
std
(bad)
call
(bad)
outs
mov
push
js
xchg
test
xor
ss
(bad)
pusha
movs
clc
push
jmp
jmp
int3
dec
sbb
jne
or
js
stos
jge
mov
jl
add
hlt
(bad)
inc
pop
ret
push
out
adc
out
inc
adc
push
(bad)
(bad)
(bad)
jmp
clc
pop
imul
or
int
repnz
das
or
lds
push
adc
mov
pushf
dec
cmp
ins
jp
lds
inc
ds
mov
ret
(bad)
(bad)
call
dec
not
dec
dec
mov
call
push
push
pop
ret
sub
cdq
mov
add
jg
loopne
push
dec
and
push
mov
inc
jge
dec
(bad)
jge
push
jo
sahf
js
pusha
xlat
leave
(bad)
(bad)
(bad)
push
cmp
loop
jae
sar
js
dec
xor
pop
adc
mov
dec
in
(bad)
(bad)
(bad)
push
or
lods
or
cmp
scas
cmps
mov
popa
lods
gs
popa
std
push
push
mov
cld
pop
ficom
jg
ror
jg
adc
and
cmp
loop
or
test
(bad)
push
xor
fs
push
mov
ins
xchg
add
aas
ins
inc
inc
mov
add
(bad)
jg
cmps
adc
xchg
pop
inc
test
add
test
(bad)
(bad)
dec
aad
mov
icebp
daa
(bad)
aam
mov
xchg
pop
call
sbb
enter
(bad)
(bad)
call
xor
or
daa
lods
mov
jmp
push
sahf
ffree
inc
fs
loopne
push
aam
movs
xchg
(bad)
(bad)
(bad)
(bad)
stc
push
sti
in
movs
xchg
cli
jae
lods
jo
inc
imul
loopne
out
mov
mov
(bad)
(bad)
(bad)
dec
hlt
xchg
(bad)
retf
es
aas
and
sahf
xlat
push
mov
add
(bad)
(bad)
(bad)
(bad)
fist
jo
dec
inc
adc
int
xlat
aam
mov
cli
(bad)
movs
sbb
ret
mov
(bad)
(bad)
call
test
or
xor
push
mov
dec
xlat
sub
iret
ret
ret
add
aad
lods
aaa
mov
sub
fsub
into
xlat
pop
add
cmp
xor
cmc
add
cmp
push
std
call
xchg
push
das
mov
push
fnstsw
push
lods
in
jmp
inc
sbb
(bad)
push
inc
les
aas
(bad)
(bad)
(bad)
jmp
push
push
in
push
stos
fs
jo
pop
sbb
call
sbb
mov
jp
or
(bad)
and
test
mov
(bad)
(bad)
(bad)
jle
mov
pop
hlt
fimul
adc
sub
icebp
outs
jle
rcr
pop
rcr
out
cli
jbe
and
cmp
es
retf
add
daa
mov
xor
jecxz
imul
inc
fsub
imul
in
and
jno
imul
push
jmp
repz
and
and
push
in
test
outs
mov
not
inc
push
scas
sar
dec
sbb
jge
mov
in
push
scas
(bad)
mov
xor
push
cmp
(bad)
(bad)
push
test
retf
ja
ret
es
neg
repz
call
or
pop
mov
popf
das
out
(bad)
(bad)
(bad)
(bad)
jmp
fstp
je
in
adc
leave
data16
and
adc
mov
shl
(bad)
cmp
in
sub
adc
or
je
aam
call
pop
xchg
clc
xchg
and
mov
mov
and
pop
(bad)
dec
pop
or
out
pushf
pop
mov
jmp
pop
push
xor
in
sbb
pop
jbe
sub
pop
sbb
cmp
loopne
push
sub
or
repnz
mov
mov
xor
cld
(bad)
ds
aad
ds
test
fwait
push
aad
sub
mov
jb
daa
mov
lock
xchg
inc
xor
(bad)
lods
sbb
std
adc
dec
adc
adc
xor
(bad)
(bad)
(bad)
call
out
mov
mov
cmp
dec
icebp
arpl
leave
stos
gs
inc
out
out
xor
fs
and
cmp
fcomip
movs
mov
or
xchg
call
push
jg
mov
leave
cmp
push
(bad)
(bad)
(bad)
jmp
dec
xor
imul
push
sub
or
fisubr
in
jmp
dec
pop
sbb
inc
push
mov
shl
je
adc
out
(bad)
(bad)
(bad)
call
je
(bad)
pop
sub
xchg
xlat
cwde
hlt
mov
scas
jmp
sahf
ud0
(bad)
(bad)
mov
cwde
sar
loope
or
punpckhbw
pushf
jb
aam
add
(bad)
ja
fcomip
(bad)
(bad)
inc
lods
mov
push
jb
addr16
push
xor
cs
pop
or
loope
(bad)
(bad)
call
mov
sbb
or
mov
or
sti
mov
(bad)
mov
mov
lahf
sbb
fwait
stos
cdq
aam
pushf
(bad)
dec
or
ja
xchg
mov
cmc
dec
adc
sub
dec
ret
in
dec
xor
jo
test
(bad)
dec
jle
lea
sbb
mov
jo
push
mov
(bad)
(bad)
(bad)
jnp
mov
nop
pop
repnz
pop
mov
fsubr
rcl
xchg
es
dec
div
mov
add
mov
dec
adc
fidivr
packssdw
jmp
mov
or
jl
xchg
inc
cdq
stos
or
mov
ins
ins
sbb
jmp
cwde
add
cmp
adc
cli
inc
cmc
repnz
push
mov
add
(bad)
cli
jl
mov
mov
or
mov
popa
jp
jb
xor
out
xchg
into
std
ss
mov
outs
xor
jecxz
mov
(bad)
mov
jne
out
xchg
and
test
sbb
ds
add
(bad)
cmp
(bad)
(bad)
(bad)
dec
jmp
faddp
nop
rcl
sbb
push
mov
(bad)
inc
and
inc
rcl
push
lock
xchg
cld
mov
shr
mov
std
fwait
(bad)
dec
pusha
mov
sbb
js
les
jae
sbb
jecxz
(bad)
sbb
jmp
inc
mov
add
movs
out
jnp
and
adc
dec
xchg
push
sub
call
jo
add
xor
in
mov
xchg
aam
pop
(bad)
nop
jno
pop
pop
lods
lods
stos
(bad)
pop
stos
fs
mov
fimul
add
add
xor
mov
xlat
fst
lods
je
push
test
adc
and
dec
or
fadd
aad
push
scas
pop
xchg
test
pop
js
jae
dec
test
loopne
jg
inc
push
pop
shl
fdiv
cmp
aas
push
jg
popa
dec
mov
outs
xchg
retf
(bad)
(bad)
call
sub
repz
mov
sar
jmp
xchg
call
jmp
sti
pusha
dec
(bad)
lea
mov
xchg
shl
aaa
(bad)
push
dec
aas
outs
gs
movs
pop
xchg
dec
test
out
into
xor
mov
(bad)
fcomip
jg
pop
inc
daa
inc
imul
xchg
mov
js
(bad)
out
and
xlat
add
dec
or
les
sar
and
(bad)
(bad)
(bad)
call
xchg
outs
adc
or
lods
pop
jnp
imul
lds
js
dec
xchg
dec
jmp
(bad)
call
add
push
cs
in
mov
in
mov
cmp
test
leave
dec
stc
push
fwait
jge
xlat
aaa
pop
sub
xabort
clc
jg
or
jmp
mov
mov
call
cmps
xchg
ds
mov
jb
adc
(bad)
jb
pop
call
lods
(bad)
(bad)
(bad)
call
pop
dec
fcom
inc
aaa
je
xor
test
push
outs
sub
push
in
les
adc
and
outs
icebp
js
adc
or
sbb
push
popa
adc
cmp
dec
ret
xor
fdivr
xchg
iret
loope
sub
(bad)
(bad)
(bad)
jmp
and
stos
xchg
ins
rcr
mov
sbb
jnp
xor
imul
(bad)
jmp
inc
pop
sbb
mov
arpl
fdivr
add
inc
fld
(bad)
dec
in
and
(bad)
icebp
loopne
pop
pushf
or
icebp
sub
(bad)
(bad)
(bad)
call
jmp
int
test
shl
dec
inc
mov
jno
stc
(bad)
(bad)
(bad)
jmp
or
aaa
cmc
mov
push
mov
aas
or
pminub
mov
xchg
lods
das
xchg
repnz
in
xor
test
jp
and
sub
mov
inc
xchg
add
(bad)
(bad)
inc
rcr
mov
xor
movs
les
lock
mov
add
sbb
push
gs
clc
xchg
pop
fnstcw
add
outs
out
(bad)
pop
and
fdiv
out
jecxz
(bad)
jmp
mov
xchg
mov
cmps
jo
add
xchg
inc
add
movs
xchg
fs
out
mov
mov
cmps
and
sahf
pusha
mov
cli
loopne
mov
aad
or
repnz
jmp
pop
fst
div
(bad)
int3
(bad)
int3
(bad)
(bad)
(bad)
call
(bad)
jne
scas
pop
gs
lds
out
mov
fisub
push
push
push
mov
push
das
jmp
sub
jb
test
mov
aaa
fld
lock
bound
xchg
cli
(bad)
dec
(bad)
cmp
push
call
inc
je
(bad)
call
out
int
clc
scas
push
lods
xchg
scas
mov
out
out
out
dec
mov
(bad)
mov
push
vpsrld
scas
data16
push
inc
xchg
push
js
xchg
cwde
or
cmp
pop
into
cdq
outs
add
rcr
icebp
inc
stos
xchg
pop
jp
cmp
xor
and
mov
adc
fsub
leave
cmps
pop
and
(bad)
(bad)
(bad)
call
retf
xor
in
retf
popf
and
cld
xchg
test
(bad)
(bad)
(bad)
out
mov
and
les
retf
mov
sbb
aam
or
push
out
sub
xor
mov
out
xchg
stos
test
inc
sar
or
std
ins
das
cmc
rcl
(bad)
(bad)
(bad)
fistp
mov
inc
inc
pop
jae
fcomp
dec
int3
mov
mov
xchg
mov
(bad)
(bad)
mov
jbe
push
call
mov
push
lahf
(bad)
cmp
cli
jb
(bad)
(bad)
(bad)
(bad)
jns
xor
and
or
dec
sub
adc
cwde
mov
mov
aaa
pop
mov
and
loop
cmp
dec
ret
(bad)
(bad)
(bad)
jmp
push
and
out
xchg
idiv
in
stc
scas
rcr
mov
(bad)
leave
gs
mov
dec
mov
out
(bad)
fisttp
or
cmp
xchg
inc
sub
mov
mov
xchg
cmp
les
push
push
sbb
push
xchg
jle
arpl
pop
fwait
rcl
jo
(bad)
fadd
call
and
(bad)
jle
int
mov
cli
(bad)
(bad)
call
inc
jg
push
and
jmp
je
cmc
(bad)
in
ja
push
mov
into
ja
adc
and
cmp
outs
mov
aam
fld
sub
xchg
cmp
and
retf
xor
(bad)
(bad)
push
dec
clc
sub
mov
outs
xlat
js
and
jno
rcl
xchg
aaa
das
mov
ret
push
ja
adc
pop
adc
(bad)
mov
retf
lods
mov
xor
xchg
mov
pop
cs
ins
(bad)
jmp
(bad)
test
loope
and
test
sti
inc
mov
pop
aam
jno
push
(bad)
(bad)
(bad)
jg
xchg
fisub
sbb
or
xchg
jb
pusha
stos
sbb
xchg
mov
pop
loope
dec
rcl
xchg
aam
lahf
or
int3
xor
ret
clc
jg
sub
pop
das
cwde
sar
mov
mov
jmp
mov
call
inc
sub
mov
fdivr
inc
or
sub
mov
push
or
ret
loopne
add
(bad)
(bad)
(bad)
jg
int3
push
mov
push
push
mov
xor
(bad)
sti
mov
sbb
jl
sbb
sbb
(bad)
call
push
add
dec
mov
xchg
or
add
push
sahf
mov
in
mov
dec
and
xor
js
aad
(bad)
(bad)
(bad)
mov
(bad)
and
jb
daa
nop
and
push
test
jl
test
jmp
or
ss
cmp
mov
xlat
(bad)
call
mov
xor
popa
xchg
out
ins
mov
or
inc
enter
jg
sub
push
jnp
cli
out
push
out
sbb
int
es
jmp
pop
or
call
out
xchg
or
scas
jne
add
jne
push
adc
(bad)
(bad)
call
(bad)
cmp
mov
inc
pop
lods
hlt
mov
lods
jmp
mov
(bad)
cmp
sahf
inc
inc
cmps
iret
lds
jmp
(bad)
call
ret
mov
repnz
mov
jmp
(bad)
les
or
es
dec
mov
dec
cmp
mov
inc
(bad)
push
mov
cmps
dec
sti
test
in
add
push
cli
xchg
inc
outs
ret
and
repnz
mov
cmc
sub
dec
jnp
push
jmp
inc
mov
sbb
in
call
test
lds
inc
aad
dec
xor
mov
cmp
cmps
inc
shl
ret
dec
popa
and
(bad)
(bad)
(bad)
jg
jne
sub
aad
aas
jnp
xor
inc
sti
js
dec
dec
aad
cdq
mov
jge
inc
or
(bad)
(bad)
(bad)
inc
and
ins
clc
ja
sahf
in
pusha
or
push
xor
js
leave
add
std
ins
sti
cmp
cmps
cs
(bad)
(bad)
call
mov
jmp
repnz
push
adc
cwde
xchg
fs
xor
push
(bad)
inc
push
add
test
jbe
loope
call
inc
retf
cmps
xchg
xchg
repnz
(bad)
mov
jmp
data16
mov
(bad)
dec
mov
mov
add
xchg
or
xlat
jno
pop
push
(bad)
(bad)
(bad)
inc
nop
push
pop
xchg
mov
or
adc
(bad)
cmp
xor
inc
scas
js
pushfw
in
sbb
(bad)
(bad)
jge
dec
imul
movs
nop
mov
cmc
cmp
(bad)
(bad)
mov
xchg
rol
push
xor
mov
mov
dec
push
add
xlat
(bad)
dec
shl
sahf
inc
sbb
sbb
inc
imul
(bad)
call
jle
repz
mov
pop
sbb
(bad)
(bad)
mov
test
hlt
rol
add
mul
shl
fsub
mov
add
out
mov
bound
test
mov
(bad)
mov
jbe
ins
fimul
outs
js
call
pop
pop
popf
popa
adc
pop
mov
push
retf
sub
push
mov
test
mov
pop
cmp
dec
push
nop
cld
jmp
fnstenv
add
dec
xchg
pop
and
adc
movs
(bad)
(bad)
inc
ficomp
les
ror
sub
test
xlat
cmps
xchg
retf
pop
scas
(bad)
(bad)
(bad)
jmp
lods
or
mov
jp
mov
in
fist
aaa
pop
pop
popf
lods
(bad)
adc
mov
(bad)
fwait
movs
xchg
into
inc
jo
and
loope
xor
sbb
or
mov
(bad)
(bad)
call
out
sbb
jl
mov
test
push
sub
ret
mov
pop
cmc
and
fidiv
mov
pop
push
loop
push
fdivr
test
int
scas
add
xchg
inc
fcomp
fwait
(bad)
(bad)
(bad)
dec
ret
rcr
out
mov
retf
sti
inc
adc
mov
mul
popf
push
xchg
sub
(bad)
call
test
push
adc
lods
jmp
ret
std
or
cmp
mov
pop
(bad)
push
adc
mov
adc
neg
fnstcw
pushf
mov
inc
inc
cli
ss
cmc
(bad)
(bad)
jmp
inc
xlat
pop
jmp
jbe
xchg
xor
cmp
mov
mov
test
or
adc
stos
mov
(bad)
(bad)
jmp
cmp
shl
mov
in
neg
cs
(bad)
jmp
mov
and
ins
lds
or
retf
push
xchg
repnz
mov
scas
(bad)
(bad)
mov
mov
inc
adc
clc
(bad)
retf
and
fisubr
test
dec
(bad)
(bad)
(bad)
(bad)
cli
fcomp
add
inc
in
das
(bad)
aas
xchg
clc
jmp
into
hlt
and
jmp
pop
and
and
sti
and
lods
inc
movs
(bad)
(bad)
(bad)
jmp
rol
add
ficomp
xor
out
xchg
adc
popf
and
inc
add
(bad)
(bad)
(bad)
(bad)
fsubr
in
pop
pop
sbb
lock
xchg
cmp
and
popa
lock
pop
jns
jp
(bad)
(bad)
dec
jecxz
mov
xchg
mov
test
or
jmp
or
loopne
xor
stos
(bad)
rcl
sbb
(bad)
(bad)
push
test
ja
int3
call
add
iret
outs
xchg
lea
in
iret
cmp
(bad)
out
shl
(bad)
(bad)
(bad)
dec
pop
xor
shl
xor
inc
sbb
sbb
jmp
jle
in
mov
mov
stos
ins
adc
push
and
mov
push
or
adc
mov
push
and
push
add
adc
ja
rcl
not
xchg
out
(bad)
(bad)
push
gs
push
or
add
sbb
popf
sti
push
popf
into
loope
cmp
(bad)
(bad)
(bad)
jmp
lods
pusha
les
push
adc
inc
add
jl
cmc
mov
dec
add
adc
(bad)
(bad)
(bad)
jmp
pop
pop
lock
sbb
in
loopne
jmp
push
jl
fisubr
je
pop
cmp
shr
and
add
lock
jmp
xor
sbb
ds
stc
cld
adc
push
add
cwde
mov
add
cs
fs
(bad)
(bad)
push
mul
(bad)
nop
in
mov
rcl
scas
mov
test
rcr
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
pcmpgtb
jmp
call
icebp
iret
hlt
cmp
shl
(bad)
(bad)
(bad)
dec
mov
xlat
loope
sbb
adc
iret
ds
in
jb
jnp
cli
(bad)
(bad)
(bad)
inc
cmp
mov
pop
js
shr
fsubrp
enter
ret
sahf
jno
xor
rcl
lock
(bad)
(bad)
jp
mov
ins
mov
sub
fimul
lahf
cmp
(bad)
call
mov
stc
adc
mov
sub
mov
loope
jae
retf
lock
(bad)
(bad)
(bad)
inc
push
mov
data16
nop
jne
adc
jne
jns
stos
arpl
cmp
xor
pop
dec
aaa
leave
cli
call
mov
cmps
jg
pusha
iret
and
leave
push
adc
out
clc
(bad)
(bad)
jmp
pop
aas
lds
in
cmc
imul
add
mov
stos
cmp
call
(bad)
mov
inc
push
imul
add
or
or
dec
xor
jecxz
jmp
in
pop
and
jmp
adc
jg
mov
gs
cmp
xchg
cmp
(bad)
nop
mov
xchg
or
out
mov
and
mov
nop
cmp
sbb
leave
jbe
jp
dec
ins
mov
call
loopne
cmc
jmp
sbb
pop
xchg
nop
pop
mov
mov
dec
jne
dec
cli
stos
clc
sub
fs
cmp
push
dec
mov
cmp
push
pop
mov
(bad)
(bad)
inc
inc
sbb
inc
test
std
imul
sahf
dec
and
dec
(bad)
jbe
in
stos
xor
mov
push
jl
and
cli
fbstp
inc
(bad)
loop
dec
lods
ins
call
test
shr
(bad)
(bad)
sti
xchg
(bad)
sbb
pop
jne
mov
push
adc
mov
push
mov
rol
push
and
in
test
mov
icebp
dec
cmc
movs
arpl
(bad)
mov
sub
call
push
jne
xor
add
xor
cmp
icebp
(bad)
call
(bad)
jae
addr16
xlat
and
fcomp
pop
xchg
ss
and
inc
fldl2e
pop
xchg
arpl
pushf
in
mov
(bad)
(bad)
(bad)
mov
fmul
fistp
cmp
and
or
or
(bad)
(bad)
mov
cld
mov
jmp
inc
retf
dec
fld
clc
out
inc
mov
sbb
hlt
push
mov
mov
cmps
cmp
into
cmps
out
ja
icebp
mov
xor
inc
out
stc
push
dec
das
xchg
dec
cld
sub
adc
lock
cmp
js
cmp
stc
lds
or
jbe
jmp
sub
mov
jmp
mov
xor
(bad)
(bad)
jmp
push
jb
push
jp
and
inc
mov
add
xchg
fwait
push
lods
cdq
jge
scas
das
mov
(bad)
(bad)
mov
and
arpl
pushf
pop
xlat
sbb
dec
das
or
pop
pop
xchg
(bad)
jmp
out
mov
sbb
pop
mov
das
int
js
int
rcr
out
(bad)
(bad)
(bad)
jmp
pop
cli
pop
pop
popa
cmps
xor
jg
lds
imul
cwde
xchg
xor
das
adc
(bad)
(bad)
inc
fstp
cmc
xchg
pushf
jmp
pop
je
and
sub
push
dec
loopne
xchg
sbb
xchg
(bad)
(bad)
call
xchg
jno
aad
jecxz
pop
test
jns
jae
cmp
jne
cmp
(bad)
(bad)
(bad)
call
(bad)
aad
jmp
xchg
sbb
jae
mov
int
outs
mov
loope
adc
xchg
add
jns
(bad)
(bad)
push
pop
xlat
mov
or
in
push
inc
adc
test
mov
push
xchg
and
mov
pop
mov
cmp
(bad)
(bad)
(bad)
push
xchg
arpl
push
inc
dec
mov
mov
sbb
jo
sbb
cmp
out
push
mov
jp
cmp
jl
xchg
cmp
(bad)
dec
jbe
and
and
out
cdq
shl
cmc
xlat
jne
inc
pop
dec
jno
(bad)
(bad)
(bad)
(bad)
(bad)
jl
int3
adc
aaa
fisubr
retf
repz
jae
or
into
cdq
push
es
(bad)
(bad)
(bad)
inc
mov
adc
das
jmp
add
cmp
jmp
fimul
pop
nop
cmc
in
dec
popf
dec
or
(bad)
(bad)
(bad)
mov
adc
sahf
leave
sub
shl
gs
lds
scas
mov
xor
in
(bad)
(bad)
(bad)
fild
sub
adc
fbstp
loop
scas
mov
call
pop
jb
call
std
xlat
mov
mov
popf
leave
icebp
popa
push
xchg
retf
(bad)
(bad)
jmp
mov
mov
cmp
call
jo
mov
(bad)
(bad)
jmp
(bad)
outs
ja
outs
push
mov
fstp
cs
sub
(bad)
(bad)
call
and
dec
inc
pushf
mov
pop
pop
test
je
add
pop
outs
clc
adc
pop
inc
add
xchg
jg
sar
push
jns
push
dec
and
(bad)
je
out
call
jge
add
mov
loope
lea
call
sahf
dec
xchg
or
push
movs
mov
push
(bad)
(bad)
fnstcw
pop
mov
xor
xor
sbb
adc
je
(bad)
mul
mov
cdq
into
(bad)
(bad)
(bad)
(bad)
sti
ss
lock
std
lock
cmps
fistp
sbb
dec
xchg
daa
pop
sar
cmp
int
dec
int
in
xor
mov
outs
das
inc
icebp
test
sub
adc
cli
fwait
cli
xlat
push
ror
push
sbb
imul
mov
fwait
cmp
cwde
sub
xchg
pushw
pop
xchg
jnp
(bad)
(bad)
(bad)
push
(bad)
xchg
(bad)
mov
mov
retf
loop
lods
call
or
mov
push
cmp
jmp
movs
xor
aas
pop
in
sbb
fs
inc
adc
in
(bad)
(bad)
inc
jbe
fs
aaa
and
loopne
jp
cmp
adc
xchg
loope
xchg
retf
or
(bad)
jmp
adc
inc
(bad)
pop
scas
inc
movs
inc
repz
jbe
(bad)
clc
out
xor
(bad)
mov
sub
aad
push
dec
fsub
(bad)
(bad)
(bad)
call
sub
and
fadd
out
inc
bound
mov
jg
push
fisubr
(bad)
(bad)
(bad)
(bad)
fstp
cdq
repz
xchg
push
jge
mov
adc
cmp
shr
xor
xchg
jp
std
(bad)
(bad)
dec
loope
outs
jg
fs
movs
adc
in
imul
das
jmp
pusha
fimul
and
dec
fisubr
jg
push
or
mov
cmps
xor
stos
add
data16
mov
std
sbb
pop
call
(bad)
(bad)
inc
jmp
jae
or
sub
jns
setbe
xchg
mov
cmp
mov
int3
mov
test
imul
xor
cwde
cmc
cmp
and
mov
mov
jns
cwde
ror
push
sbb
xchg
arpl
pushf
sbb
(bad)
(bad)
(bad)
(bad)
out
movs
adc
mov
in
xor
mov
les
push
push
aad
(bad)
(bad)
(bad)
dec
lock
inc
dec
mov
mov
push
mov
cmc
push
mov
sbb
(bad)
jmp
inc
ja
push
popa
adc
jae
lds
in
adc
in
(bad)
(bad)
dec
adc
jmp
sti
dec
or
push
cmp
jle
xchg
sbb
jne
(bad)
cmc
jo
dec
mov
ss
dec
mov
loop
icebp
loop
lds
inc
sahf
shl
stc
push
div
mov
xlat
out
cwde
push
scas
push
push
sbb
(bad)
(bad)
(bad)
jmp
xchg
rol
mul
push
add
jmp
sahf
pop
cmps
int3
retf
imul
stos
dec
and
retf
mov
or
adc
and
(bad)
(bad)
(bad)
jg
xor
iret
cmps
jge
repnz
pop
popf
jge
popf
mov
jns
sub
cmp
in
mov
(bad)
jmp
push
push
xchg
ret
push
sub
popf
adc
imul
ret
aaa
adc
(bad)
(bad)
(bad)
call
sbb
xchg
add
movs
or
rcr
ret
test
xchg
enter
jl
xchg
movs
pop
lods
stos
dec
mov
(bad)
out
jg
jg
xchg
push
shr
and
ret
push
in
dec
fsubr
or
xor
popa
(bad)
jo
(bad)
(bad)
(bad)
xor
cdq
stos
mov
daa
push
lds
(bad)
jle
daa
or
mov
(bad)
mov
add
adc
ret
test
mov
mov
inc
(bad)
(bad)
(bad)
push
loope
fs
sub
jae
sahf
inc
jp
inc
add
jg
data16
xchg
pop
pop
(bad)
(bad)
(bad)
fnstcw
add
jmp
ss
retf
xchg
sbb
in
(bad)
(bad)
jmp
add
fwait
test
arpl
inc
ins
jb
adc
mov
jecxz
aad
(bad)
(bad)
(bad)
call
fadd
xor
mov
hlt
pop
mov
into
and
ret
xor
ret
mov
(bad)
(bad)
(bad)
call
adc
mov
out
xor
add
ds
and
outs
jg
popf
ret
aaa
jns
pop
push
mov
std
test
mov
inc
jge
pop
xchg
pop
xchg
in
sub
xchg
ret
shl
sub
test
adc
fstp
(bad)
(bad)
jmp
mov
int
add
clc
(bad)
fbld
loopne
mov
cdq
jno
xchg
mov
or
ret
pop
push
sub
adc
mov
(bad)
fild
pushw
dec
push
xchg
ficomp
xchg
push
adc
(bad)
(bad)
mov
pop
add
dec
sub
rol
pop
enter
fwait
push
dec
cld
retf
push
push
xor
fst
sbb
inc
adc
mov
or
adc
pusha
sahf
or
std
(bad)
jmp
fmul
shr
neg
xor
add
call
adc
fdivr
(bad)
(bad)
dec
enter
sub
sub
jo
dec
daa
push
mov
inc
lods
dec
call
in
mov
xchg
je
or
imul
pop
mov
add
inc
out
add
(bad)
jmp
retf
hlt
mov
in
in
sar
imul
out
jl
int3
mov
hlt
fisttp
push
add
push
dec
out
int3
mov
jmp
enter
jmp
xlat
sbb
outs
jo
outs
adc
out
cwde
daa
in
stos
push
icebp
mov
repnz
test
and
add
movs
cmp
clc
(bad)
out
or
inc
jbe
addr16
ins
sbb
out
sub
add
(bad)
jmp
add
rcl
sub
mov
push
div
loop
pusha
fmul
inc
es
push
xchg
nop
out
ins
pop
mov
call
in
mov
ret
sbb
jl
sbb
(bad)
(bad)
jg
dec
xor
adc
and
inc
nop
dec
lock
mov
pop
ins
and
shr
push
push
ret
(bad)
(bad)
(bad)
jmp
cmps
add
pop
adc
and
pop
pop
cmp
xor
sti
fmul
adc
fst
mov
(bad)
(bad)
dec
(bad)
out
std
jmp
add
jg
or
mov
mov
inc
cwde
jae
push
clc
pop
pop
push
test
ins
enter
xchg
aad
lahf
clc
(bad)
jg
xchg
out
int
sbb
popf
mov
adc
repz
das
push
sahf
(bad)
(bad)
(bad)
out
cmp
mov
mov
sub
outs
xor
sub
sub
shr
fld
stos
hlt
jmp
dec
dec
sar
push
mov
mov
fnstsw
pop
movs
(bad)
(bad)
jmp
nop
xchg
jbe
and
outs
cmp
lahf
xor
and
mov
call
(bad)
jnp
daa
mov
smsw
pop
cld
jge
or
inc
lea
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
lods
mov
xor
and
mov
jbe
jecxz
fbstp
rcl
xchg
(bad)
(bad)
jmp
xchg
push
mov
jecxz
aaa
xchg
xor
adc
xchg
xchg
js
retf
pop
aaa
jne
dec
repz
or
int3
mov
push
xchg
test
mov
pushf
sub
fcomip
(bad)
inc
mov
adc
rcl
bnd
push
push
int3
sub
in
(bad)
(bad)
jmp
(bad)
outs
popf
inc
fucomp
mov
jnp
lods
imul
(bad)
enter
push
jmp
push
aam
dec
inc
cmps
jb
dec
and
(bad)
(bad)
(bad)
jmp
mov
jbe
push
cmps
dec
adc
jb
sbb
leave
or
test
inc
movs
(bad)
push
ret
in
xchg
lock
sub
aad
sub
mov
xchg
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
adc
adc
sub
cwde
ret
cmps
jmp
fdiv
mov
test
pushf
adc
gs
in
aam
adc
adc
(bad)
(bad)
(bad)
jmp
clc
arpl
dec
hlt
dec
pop
pusha
push
adc
ss
fnstsw
push
cmp
sbb
movs
lea
in
popf
(bad)
(bad)
(bad)
inc
repnz
sti
cmp
dec
movs
imul
cs
mov
cmp
fst
in
or
rcr
(bad)
(bad)
(bad)
call
mov
inc
pop
or
mov
adc
nop
sbb
arpl
sbb
adc
and
xchg
daa
(bad)
(bad)
(bad)
jmp
loopne
mov
add
or
mov
outs
mov
xor
sub
(bad)
push
sub
dec
ror
jmp
xchg
pop
and
or
ror
fwait
(bad)
mov
shr
scas
pusha
jle
pop
dec
mov
sub
out
pusha
outs
xchg
clc
or
hlt
sti
movs
repnz
call
movs
jnp
cmp
xchg
(bad)
dec
sbb
mov
sub
push
aaa
sar
gs
push
fisttp
or
aaa
aad
loopne
pop
ins
ret
dec
mov
(bad)
(bad)
call
test
cmp
dec
adc
push
xchg
push
adc
int3
pusha
ficomp
movs
ret
push
call
(bad)
(bad)
(bad)
(bad)
cli
lods
add
mov
ror
add
cmp
clc
stos
pusha
or
jge
(bad)
(bad)
(bad)
(bad)
cmp
add
ror
shl
fwait
push
ror
push
xchg
xchg
mov
(bad)
(bad)
(bad)
jns
out
add
(bad)
(bad)
iret
mov
ins
add
fistp
das
(bad)
xchg
out
mov
(bad)
(bad)
push
inc
lods
(bad)
loop
xlat
stc
repz
sub
xchg
pop
jb
mov
call
call
dec
cmp
or
inc
fbstp
push
push
cmps
xor
sar
sbb
mov
popf
(bad)
fst
test
outs
sub
cld
call
mov
(bad)
(bad)
(bad)
(bad)
jns
mov
jl
pop
idiv
sub
xor
hlt
rol
sti
(bad)
mov
loop
lahf
sbb
mov
lods
adc
xchg
scas
pusha
xchg
xchg
(bad)
(bad)
push
inc
jne
push
push
push
inc
repnz
daa
push
imul
sub
ins
dec
pusha
idiv
mov
(bad)
push
mov
add
clc
cwde
cmp
xor
leave
pusha
leave
clc
outs
or
xor
bound
in
das
call
and
xchg
jbe
jle
(bad)
(bad)
(bad)
call
mov
adc
inc
hlt
mov
xor
dec
dec
mov
jmp
repz
(bad)
(bad)
(bad)
cmp
pop
mov
jle
xor
ins
icebp
cwde
cmp
sbb
push
mov
fisttp
scas
clc
inc
es
nop
aas
lods
cmp
gs
pop
inc
xchg
(bad)
mov
leave
xchg
pop
xchg
loope
hlt
jmp
inc
out
fwait
ins
mov
mov
(bad)
(bad)
mov
push
mov
sub
fild
sub
leave
xor
pop
sub
xchg
xchg
lods
(bad)
call
mov
test
test
jl
adc
adc
sar
mov
(bad)
(bad)
(bad)
jmp
mov
fisttp
push
sbb
pop
fsub
outs
pusha
out
inc
cdq
jb
nop
cmp
out
pushf
mov
cmc
sub
rol
mov
cmp
fisub
mov
adc
adc
dec
ja
outs
adc
shufps
(bad)
jmp
scas
gs
cmp
add
test
stos
enter
mov
ds
dec
mov
push
(bad)
inc
xor
(bad)
mov
aaa
cmp
sub
ja
mov
dec
cmp
inc
push
popf
stos
pop
push
sub
adc
or
stos
ins
(bad)
(bad)
(bad)
dec
out
stos
jbe
mov
icebp
call
or
mov
jae
fist
jg
(bad)
jmp
push
fild
push
mov
cdq
frstor
je
add
push
xor
lods
sub
fld
sbb
out
(bad)
add
dec
popa
ret
mov
into
aam
or
sub
(bad)
(bad)
jmp
inc
jmp
ret
fldenv
aad
movs
pop
std
mov
inc
cmp
dec
call
in
jmp
cmps
aam
test
in
mov
push
stos
adc
jbe
pop
xor
jns
ret
call
loope
(bad)
sbb
or
and
(bad)
(bad)
mov
test
cmps
sub
lods
sti
or
sub
retf
aaa
retf
and
aaa
mov
sbb
add
adc
(bad)
(bad)
push
sahf
into
inc
call
ins
push
scas
jns
or
sbb
or
inc
repz
jg
hlt
int3
call
je
inc
ds
push
mov
ins
(bad)
(bad)
(bad)
jmp
ds
push
xchg
movs
ja
pop
dec
cmp
adc
sbb
sbb
retf
mov
(bad)
dec
ret
xchg
mov
cdq
lods
mov
cmps
fsubr
test
push
test
mov
sbb
je
(bad)
(bad)
push
(bad)
mov
mov
retf
sub
and
sbb
cmc
call
or
rol
sbb
test
pop
or
enter
sub
out
outs
data16
out
lock
mov
mov
xchg
mov
hlt
mov
mov
cmp
(bad)
dec
cmp
dec
mov
leave
jo
int
cmp
mov
inc
test
inc
inc
sbb
(bad)
inc
test
cwde
inc
or
daa
pusha
es
mov
inc
in
dec
jmp
sti
rcl
xchg
(bad)
lahf
cli
dec
repz
call
cli
out
dec
(bad)
add
mov
xor
into
mov
loop
enter
add
call
lock
aaa
push
std
bound
inc
mov
sub
push
clc
pop
ret
and
jge
jo
nop
push
sar
call
pop
inc
out
push
mov
nop
iret
mov
adc
mov
nop
inc
cmp
push
ins
js
mov
lods
inc
loop
lea
pop
mov
inc
or
fadd
add
leave
mov
push
ret
mov
(bad)
(bad)
mov
das
jae
gs
mov
and
and
dec
xlat
sbb
(bad)
jmp
add
fldcw
push
and
cmp
xlat
je
int
add
mov
test
add
and
leave
push
sahf
pop
push
add
(bad)
(bad)
jmp
(bad)
pop
mov
(bad)
iret
scas
shl
je
int
xchg
fsub
jmp
(bad)
fucomip
inc
jno
(bad)
aaa
jmp
mov
(bad)
mul
mov
or
push
outs
int3
pushf
push
jae
sub
mov
test
stc
into
hlt
(bad)
(bad)
(bad)
jmp
adc
inc
retf
jno
cld
push
adc
mov
lds
mov
mov
jle
pop
scas
add
(bad)
jmp
and
mov
sbb
mov
cmp
movs
in
fwait
sub
rcl
aad
je
sar
(bad)
(bad)
inc
pop
bnd
jbe
fbld
das
ja
cmp
mov
out
ins
dec
inc
int
(bad)
(bad)
(bad)
inc
jmp
aam
jge
stos
fwait
cmp
out
add
add
(bad)
pop
add
pop
mov
inc
aas
std
(bad)
(bad)
inc
ret
dec
pop
cmps
les
cdq
mov
sbb
push
ja
inc
cmp
push
rcl
mov
lahf
std
fdivrp
(bad)
(bad)
call
or
clc
or
test
clc
imul
test
(bad)
(bad)
jmp
cmc
sbb
adc
fidivr
push
xor
sahf
movs
dec
call
loopne
shl
mov
shl
sbb
arpl
(bad)
sbb
adc
push
pushf
(bad)
(bad)
(bad)
jmp
(bad)
inc
and
dec
daa
and
out
sahf
(bad)
pop
add
fs
es
adc
fbld
test
mov
xor
dec
(bad)
jmp
adc
mov
push
xor
xchg
xor
adc
(bad)
push
out
adc
jle
pop
(bad)
shr
push
push
inc
test
(bad)
fmul
daa
scas
xor
mov
or
aad
inc
sbb
daa
pop
jl
sar
call
je
loope
(bad)
jmp
icebp
xchg
jns
(bad)
call
dec
jp
mov
(bad)
xchg
xchg
jbe
data16
jp
imul
or
(bad)
inc
mov
pop
leave
jns
pop
int
cwde
ins
jb
cmp
(bad)
(bad)
(bad)
jmp
loope
mov
sbb
(bad)
mov
scas
enter
xor
(bad)
(bad)
call
(bad)
shr
xchg
pop
xor
popf
in
(bad)
jnp
sar
(bad)
(bad)
(bad)
push
pop
mov
stos
mov
mov
pop
aaa
cmp
retf
(bad)
(bad)
(bad)
jmp
mov
xchg
xor
sti
out
lds
rcr
arpl
out
xchg
ss
and
bound
clc
mov
test
dec
lock
xchg
test
jno
outs
pop
scas
sub
(bad)
cmp
(bad)
call
stos
cmps
in
stos
sbb
add
mov
adc
jns
jno
(bad)
(bad)
dec
and
mov
sub
in
and
gs
test
adc
sub
sbb
or
dec
lds
jl
cwde
xchg
xchg
inc
shl
adc
(bad)
(bad)
push
test
jne
retf
data16
mov
nop
cmc
es
test
sbb
sub
int3
cwde
pop
int3
shl
jge
lea
inc
add
mov
scas
repz
nop
mov
add
jle
int
not
enter
adc
mov
cmp
scas
sub
lods
les
(bad)
push
mov
test
lahf
test
outs
fsubr
cld
dec
and
push
das
jns
popf
cwde
mov
push
push
into
popa
(bad)
(bad)
(bad)
jmp
imul
bound
cdq
push
clc
push
pop
stos
out
outs
cmc
aas
test
inc
pop
aas
(bad)
(bad)
(bad)
push
dec
sub
push
int
push
dec
ret
outs
xor
jmp
test
rol
mov
xor
mov
ins
pop
jl
mov
gs
jl
fild
shl
mov
clc
mov
call
ret
lods
inc
je
push
les
mov
add
push
stos
adc
aaa
aaa
in
(bad)
(bad)
jg
push
cmc
imul
loop
mov
aas
mov
jmp
sar
add
cld
inc
xor
and
ret
pop
add
pusha
add
fs
(bad)
dec
or
cli
mov
fpatan
or
sub
frstor
sahf
arpl
(bad)
(bad)
jg
push
jge
add
rcr
cmps
xchg
lods
dec
test
in
rcr
dec
inc
add
and
or
xor
sar
pushf
adc
retf
inc
fld
mov
mov
dec
cdq
(bad)
(bad)
(bad)
(bad)
cmp
jmp
(bad)
retf
pop
sub
cmp
loope
xor
jg
(bad)
fbld
jae
mov
sbb
mov
push
gs
add
(bad)
(bad)
call
push
and
mov
test
or
or
pusha
xlat
xchg
loopne
xor
mov
cs
iret
pop
out
mov
lods
out
mov
cld
add
push
retf
ret
jnp
jmp
vmovq
cmp
inc
adc
push
repnz
(bad)
(bad)
dec
push
pop
popa
scas
jmp
pop
or
jge
mov
or
outs
mov
je
jmp
(bad)
fisttp
pop
imul
lods
dec
pop
sahf
das
push
and
or
cli
lods
cmp
int3
rcr
dec
das
(bad)
(bad)
(bad)
jmp
inc
sub
fcomp
or
test
cdq
or
sub
pop
pusha
ret
adc
cli
(bad)
jmp
jo
js
jl
out
xor
dec
jae
xlat
sahf
mov
das
dec
imul
sbb
bound
(bad)
(bad)
jg
pop
mov
jecxz
xor
addr16
jle
cmps
ds
mov
std
es
call
(bad)
dec
mov
inc
adc
ins
cmp
in
je
mov
xchg
push
(bad)
(bad)
(bad)
jmp
sub
cmps
iret
adc
dec
fsub
ror
mov
cmps
adc
cmps
into
jae
(bad)
(bad)
jmp
mov
cdq
shr
call
mov
dec
pop
mov
hlt
mov
int
mov
test
lods
push
outs
aad
mov
sbb
pushf
into
or
dec
lods
les
xor
dec
aaa
leave
lods
test
repnz
sar
push
je
cmp
push
test
xor
add
mov
mov
xchg
(bad)
daa
push
(bad)
(bad)
(bad)
mov
ins
ret
test
(bad)
in
adc
fsubr
enter
scas
sbb
test
inc
aas
ror
(bad)
(bad)
(bad)
push
(bad)
pop
push
lock
jmp
scas
mov
mov
xor
dec
aaa
inc
sub
mov
(bad)
(bad)
in
sahf
out
hlt
jmp
dec
les
cmp
xor
jns
(bad)
adc
outs
push
loop
(bad)
(bad)
(bad)
inc
repnz
in
add
adc
mov
mov
int
sbb
sar
push
mov
xchg
sbb
iret
or
xchg
sbb
or
mov
(bad)
(bad)
jg
jbe
xchg
ret
hlt
loopne
outs
icebp
inc
xchg
dec
sbb
inc
xor
out
xchg
cli
pop
lock
loope
jg
rcr
daa
retf
adc
xchg
mov
jae
(bad)
fisttp
shl
cmp
scas
aam
or
sbb
(bad)
(bad)
(bad)
clc
ror
mov
jl
mov
call
add
loope
or
(bad)
inc
fiadd
popf
into
push
mov
xchg
sbb
loopne
jns
cmps
aad
rcr
dec
fdivr
(bad)
(bad)
inc
and
lea
dec
jp
mov
lock
cmps
repnz
inc
repnz
cmp
ins
pop
clc
(bad)
mov
xchg
lahf
adc
(bad)
(bad)
fistp
sub
jnp
adc
ret
pop
xor
dec
scas
and
mov
je
push
push
pop
jne
popf
add
retf
(bad)
(bad)
out
xchg
mov
mov
sub
dec
ret
outs
stc
ja
out
push
push
inc
(bad)
aaa
rcl
xor
fnsave
jns
(bad)
mov
sub
outs
or
test
push
(bad)
nop
pop
test
sbb
ja
pusha
cmps
jmp
mov
stos
jl
jge
(bad)
fstp
stos
or
and
test
add
(bad)
(bad)
out
push
pop
mov
lahf
ret
in
pop
xor
cwde
dec
push
mov
add
mov
pop
lods
aas
in
jg
jmp
stc
(bad)
adc
retf
mov
sub
and
jnp
jno
and
call
inc
mov
dec
push
cdq
or
movs
xchg
cld
ror
aaa
mov
lock
ss
jmp
bound
(bad)
mov
pop
adc
jmp
jne
or
mov
xlat
in
dec
pop
mov
gs
enter
adc
mov
std
adc
(bad)
(bad)
fistp
test
cmp
inc
outs
in
inc
dec
clc
cmps
cmp
shl
cs
iret
cmp
daa
pop
cmp
add
(bad)
jg
rol
retf
sub
ins
push
sub
ins
fs
mov
xchg
adc
add
push
(bad)
(bad)
jmp
mov
jecxz
sbb
dec
rol
dec
push
enter
xor
sbb
mov
push
in
fisubr
popf
dec
cmp
add
(bad)
xchg
push
sbb
cwde
arpl
outs
inc
imul
outs
push
cmps
out
mov
add
xor
bound
imul
xchg
cmp
push
push
and
and
data16
mov
fs
sbb
(bad)
(bad)
dec
cmp
popf
inc
out
lea
out
out
jp
(bad)
data16
push
inc
outs
(bad)
leave
dec
repz
(bad)
inc
div
pop
pop
retf
addr16
push
ja
push
add
jmp
mov
jg
shl
out
shl
or
mov
das
retf
push
sbb
mov
loope
mov
(bad)
(bad)
(bad)
(bad)
in
jnp
push
mov
imul
fstp
cmps
and
retf
xchg
dec
push
sbb
movs
das
push
(bad)
(bad)
push
xor
xor
fdivr
leave
jl
xchg
pop
mov
(bad)
jmp
adc
lea
mov
(bad)
not
scas
in
rcl
(bad)
(bad)
(bad)
inc
mov
rcl
sti
sahf
mov
cs
inc
push
xchg
xor
pop
mov
cmp
pop
sbb
mov
add
inc
in
rcl
adc
dec
pop
(bad)
sbb
or
(bad)
and
out
push
sar
(bad)
add
aam
ror
add
(bad)
call
retfw
popa
add
push
jp
ins
std
cdq
jns
sar
mov
fnsave
int3
out
sub
mov
dec
(bad)
(bad)
jg
mov
(bad)
imul
out
pop
inc
adc
repz
xchg
stc
pop
xor
push
(bad)
cmp
dec
inc
sahf
sbb
mov
inc
pop
xlat
xor
and
xchg
outs
pop
lahf
xchg
or
or
(bad)
(bad)
dec
cli
jne
jo
into
add
jle
sbb
retf
(bad)
mov
mov
fcomip
push
mov
scas
dec
in
das
jmp
mov
mov
mov
cwde
daa
pop
cmp
or
(bad)
push
push
cmp
cmp
stos
mov
test
fstp
dec
(bad)
(bad)
mov
sbb
ror
jmp
adc
xor
(bad)
(bad)
fisttp
hlt
retf
fimul
fwait
and
call
pop
push
jecxz
or
pop
dec
scas
sbb
test
(bad)
mov
(bad)
(bad)
(bad)
sti
stos
cdq
dec
xor
xchg
push
or
rol
push
push
add
lahf
inc
idiv
push
std
(bad)
call
or
jne
ja
xor
pusha
lahf
retf
mov
pop
mov
mov
(bad)
call
dec
ret
adc
in
cli
push
out
jmp
cld
mov
push
dec
inc
(bad)
(bad)
(bad)
(bad)
call
inc
push
cmps
lea
ja
add
(bad)
into
fdivr
loop
and
shl
sub
pop
mov
mov
movs
or
mov
in
in
and
xchg
xlat
push
jns
(bad)
(bad)
dec
repz
je
adc
call
adc
(bad)
icebp
xor
jmp
sub
mov
retf
(bad)
(bad)
dec
lea
or
pusha
les
add
int3
ins
(bad)
dec
inc
push
out
(bad)
ret
or
add
pop
out
pop
jg
(bad)
pop
jnp
(bad)
(bad)
dec
or
cmps
push
ja
(bad)
popf
jecxz
mov
inc
or
fcomp
sub
mov
(bad)
(bad)
(bad)
jl
js
or
adc
mov
movs
ja
(bad)
sub
mov
jnp
cmps
mov
lahf
(bad)
out
clc
lock
inc
fs
aam
icebp
and
mov
scas
push
cdq
out
(bad)
sub
mov
(bad)
lods
popf
cmp
call
ret
outs
cli
(bad)
call
push
into
jmp
or
retf
sahf
retf
clc
cli
shl
mov
(bad)
(bad)
(bad)
jns
nop
sub
lahf
cmp
jecxz
loopne
(bad)
std
mov
aam
or
fs
sub
fbld
jns
daa
je
dec
xor
(bad)
dec
lods
xchg
mov
test
mov
push
into
cli
daa
ret
fmul
xor
mov
and
pushf
cmps
shl
je
cmp
inc
xor
in
mov
inc
call
lea
mov
out
les
mov
scas
mov
jo
fs
(bad)
(bad)
call
mov
mov
cli
mov
clc
mov
sub
es
test
addr16
or
(bad)
push
xchg
imul
jo
leave
push
sbb
sbb
jl
mov
out
dec
xor
jge
popa
jo
dec
stc
out
jecxz
inc
mov
int
inc
mov
dec
xchg
ja
(bad)
push
lods
scas
push
mov
xchg
das
jb
call
int3
inc
hlt
jo
(bad)
(bad)
frstor
ret
mov
sbb
mov
mov
mov
idiv
cmc
(bad)
mov
lods
movs
sbb
jp
cdq
mov
rol
std
jmp
test
pop
popa
sbb
fs
xor
jbe
cmp
imul
(bad)
push
inc
aaa
ins
jne
add
(bad)
(bad)
mov
ret
in
xchg
es
push
pop
sub
movs
xchg
add
mov
pop
sar
movs
mov
jns
in
xor
sbb
outs
push
out
(bad)
aam
shl
(bad)
hlt
jns
(bad)
(bad)
mov
call
cmc
int3
jns
cs
ins
lods
hlt
(bad)
(bad)
(bad)
inc
mov
inc
dec
(bad)
(bad)
pop
in
daa
dec
add
and
je
add
gs
pop
xchg
cmp
movs
and
push
pop
jo
(bad)
mov
idiv
aaa
mov
ror
scas
je
scas
aaa
cld
(bad)
call
cmps
idiv
fnstsw
xchg
js
dec
js
xor
pop
or
aad
(bad)
(bad)
push
pop
sbb
push
retf
hlt
xchg
pop
jb
xor
(bad)
mov
jg
ret
xor
retf
mov
lods
inc
call
std
outs
cmp
cld
je
push
(bad)
jb
sub
in
fdivr
mov
adc
cld
lods
mov
test
in
xchg
(bad)
(bad)
mov
mov
out
popf
adc
leave
into
cdq
xchg
hlt
pop
sahf
xor
pop
inc
jl
hlt
jg
imul
push
pop
dec
in
data16
(bad)
(bad)
(bad)
jmp
push
out
daa
stc
pop
cld
push
mov
jmp
aaa
jne
add
ins
pop
mov
sbb
cmps
mov
ds
add
add
add
(bad)
push
mov
lods
stos
mov
call
(bad)
call
add
neg
scas
sub
dec
jne
lds
sbb
test
call
std
arpl
add
pop
sbb
cmp
shr
in
pop
or
fwait
and
pop
iret
pop
pop
add
and
lods
or
add
(bad)
inc
push
retf
xlat
jg
sub
shl
pop
jg
out
xor
(bad)
dec
ja
sbb
xor
jb
xor
lea
in
(bad)
ins
and
(bad)
inc
repz
outs
sahf
or
out
clc
or
jle
xchg
lock
mov
sbb
or
(bad)
(bad)
(bad)
(bad)
jp
jmp
nop
xor
add
fs
loopne
fisttp
ss
bound
mov
pop
gs
mov
push
(bad)
(bad)
(bad)
dec
dec
push
fwait
icebp
xchg
in
and
add
jmp
cdq
pop
loop
jb
mov
(bad)
(bad)
dec
(bad)
repz
loop
lods
cmp
xor
repz
mov
addr16
add
or
fld
inc
loop
cmp
and
mov
and
lock
jp
add
dec
enter
jecxz
enter
cmp
and
inc
sbb
(bad)
(bad)
(bad)
(bad)
jnp
mov
retf
dec
lods
movs
test
jle
adc
xchg
std
pushf
xor
mov
add
imul
pop
xchg
pusha
sub
mov
jnp
jo
cmp
lds
es
pushf
ins
popa
sub
(bad)
(bad)
push
xchg
add
call
(bad)
fld
mov
lock
sbb
xor
test
test
dec
aad
cmp
mov
mov
ja
push
jo
enter
pop
(bad)
call
loop
adc
cmp
int
lods
dec
fnstsw
push
lods
cmp
call
cmps
iret
lahf
iret
out
mov
sbb
push
mov
mov
xor
and
dec
shl
psubusb
retf
pop
ins
(bad)
call
icebp
inc
adc
push
neg
xchg
outs
xchg
stos
mov
(bad)
(bad)
(bad)
jmp
mov
es
hlt
or
out
jno
sbb
sti
call
pop
dec
sar
(bad)
(bad)
call
add
ds
mov
scas
repz
enter
xor
iret
addr16
(bad)
mov
hlt
jle
dec
add
fistp
and
add
xchg
adc
lock
pop
(bad)
into
(bad)
test
mov
or
sub
fsubr
push
or
fdivr
(bad)
(bad)
(bad)
(bad)
std
mov
das
mov
les
add
jae
sub
push
pop
add
(bad)
out
add
aam
(bad)
(bad)
(bad)
jmp
lahf
retf
cs
push
jns
add
mov
into
dec
and
popa
jno
adc
mov
and
push
and
(bad)
cld
mov
jmp
ficomp
sbb
outs
(bad)
int
out
fs
(bad)
(bad)
call
fcompp
jg
fdiv
test
stos
push
mov
iret
mov
mov
xor
inc
adc
inc
fstp
lahf
cld
pop
jo
mov
retf
xchg
cdq
sar
pop
cwde
ds
(bad)
(bad)
call
adc
js
ins
push
aam
(bad)
lahf
fldenv
fimul
xor
xchg
gs
(bad)
(bad)
cmp
call
pop
dec
test
cmp
fwait
les
dec
sub
mov
outs
out
xor
adc
dec
sub
pop
xlat
cli
idiv
into
push
in
and
(bad)
call
cmp
(bad)
add
xor
in
dec
stc
fild
mov
(bad)
out
test
std
sbb
adc
xchg
inc
inc
int3
pop
lock
dec
dec
imul
nop
data16
retf
cmp
adc
sbb
int
hlt
mov
(bad)
(bad)
(bad)
dec
retf
mov
shl
mov
adc
push
cmps
adc
fist
xor
jmp
mov
mov
cmps
mov
movs
pop
sbb
pop
xor
(bad)
(bad)
dec
movs
ds
dec
jbe
js
gs
mov
(bad)
cmp
pop
fdivr
(bad)
(bad)
jmp
fwait
xchg
dec
fbld
mov
cmc
jmp
mov
pop
addr16
call
dec
push
mov
cmp
add
arpl
jp
xchg
jmp
call
mov
out
push
cmp
sub
or
cmc
(bad)
(bad)
inc
movs
cmp
xchg
mov
leave
xchg
cs
dec
push
loop
out
ins
int3
(bad)
fld
mov
mov
mov
(bad)
(bad)
(bad)
mov
jns
ja
sbb
sbb
inc
inc
movs
mov
mov
push
mov
and
out
mov
xchg
fsincos
leave
dec
add
pop
call
add
daa
daa
mov
(bad)
(bad)
(bad)
(bad)
dec
(bad)
sbb
mov
push
dec
jecxz
push
push
cmp
xor
fisttp
mov
(bad)
(bad)
(bad)
call
dec
repz
out
popa
cmps
js
jno
xchg
push
inc
xor
push
push
xchg
or
in
and
dec
(bad)
(bad)
(bad)
(bad)
jp
xchg
aaa
scas
cld
xlat
pop
dec
or
cmp
or
mov
sahf
leave
les
jmp
gs
and
adc
pop
pop
dec
xchg
cmp
pusha
loop
sub
xchg
xor
jae
in
pop
sbb
inc
imul
xchg
sbb
sbb
fistp
neg
arpl
pop
sbb
imul
ret
mov
mov
daa
ret
dec
(bad)
pop
cmp
mov
pop
cmp
cmp
inc
fs
sbb
stos
xchg
push
pextrw
and
add
repz
lock
dec
mov
cmp
mov
jmp
and
pop
add
movhps
mov
repnz
pushf
push
pop
lods
jl
call
test
repnz
movs
pop
out
mov
jecxz
cmp
iret
es
cmps
or
(bad)
mov
jo
fdivrp
mov
mov
pushf
lds
xchg
loop
push
jg
std
(bad)
(bad)
(bad)
cmp
popa
pop
xchg
lods
es
sti
mov
xor
scas
ret
xor
hlt
test
mov
ja
mov
rcl
inc
mov
jge
and
mov
pop
xchg
mov
jo
or
ins
jmp
(bad)
aad
loopne
shr
fsub
aaa
fdiv
mov
cld
and
lock
jg
jmp
imul
clc
jno
adc
cdq
push
xor
loopne
dec
inc
sub
ret
add
and
add
inc
into
sub
inc
push
inc
xchg
add
stos
push
cmp
mov
xchg
clc
pop
xor
xchg
ror
mov
(bad)
(bad)
jmp
or
xor
(bad)
js
xchg
xlat
pop
jp
pop
cmp
sub
sti
loop
rol
call
cmp
jg
and
dec
sbb
popa
dec
or
jb
pusha
dec
mov
dec
push
rol
push
(bad)
(bad)
(bad)
call
addr16
dec
mov
fwait
sub
cmp
inc
fidiv
and
mov
stos
ficom
(bad)
(bad)
(bad)
jmp
imul
mov
sbb
pop
jl
jns
aad
call
xchg
mov
ins
das
(bad)
(bad)
(bad)
inc
mov
adc
ffreep
push
jecxz
mov
and
inc
push
cdq
(bad)
sbb
sbb
cld
dec
imul
push
and
mov
jo
jmp
(bad)
push
hlt
pop
js
cmc
jbe
pop
dec
adc
add
js
leave
(bad)
(bad)
(bad)
out
push
and
mov
clc
or
fdivr
nop
leave
xchg
ficom
cmp
aas
push
sub
(bad)
(bad)
out
clc
push
mov
rol
call
scas
or
pop
outs
mov
pusha
sar
jmp
ins
sub
cli
outs
test
in
gs
sbb
ds
xlat
or
adc
jo
inc
dec
add
loop
scas
lods
movs
fsubr
(bad)
pop
inc
adc
mov
call
jnp
es
push
out
push
sar
sar
cmp
out
lods
add
xchg
inc
test
(bad)
(bad)
mov
jo
sahf
popa
outs
and
pop
jl
loopne
mov
sub
cwde
and
(bad)
(bad)
(bad)
dec
or
aad
dec
lods
dec
lahf
push
and
aaa
jmp
sahf
into
in
push
call
add
pop
mov
and
push
mov
pop
retf
movs
jne
out
aad
dec
shl
jl
mov
int
fwait
cmc
and
add
retf
mov
cmp
xchg
cmp
push
jno
imul
and
std
pop
push
nop
(bad)
xlat
and
aaa
lock
hlt
sbb
mov
(bad)
loope
push
cdq
cmp
loopne
sbb
xchg
call
ss
pop
dec
jmp
inc
in
xor
in
rcl
in
(bad)
(bad)
(bad)
jmp
test
dec
(bad)
cld
ds
ins
mov
sbb
cwde
dec
into
pop
dec
jb
ins
jmp
mov
xor
aaa
inc
push
pop
sub
xor
(bad)
cld
fcom
cmp
mov
mov
fmul
mov
xor
(bad)
es
xchg
push
lods
adc
ds
(bad)
(bad)
push
cmp
and
cwde
repz
lds
sbb
mov
jl
dec
cmp
in
retf
sub
(bad)
push
inc
pop
lods
scas
xchg
sbb
loope
(bad)
xchg
xchg
xchg
out
retf
pop
dec
int3
das
(bad)
jg
or
imul
sub
mov
(bad)
(bad)
dec
call
cld
cdq
ja
enter
xor
sub
stos
pop
add
lods
sbb
or
jb
je
mov
cmc
addr16
mov
push
fild
(bad)
(bad)
call
retf
faddp
repz
(bad)
pop
push
std
pop
and
hlt
xor
or
(bad)
(bad)
(bad)
fcmovbe
xor
enter
jmp
jge
(bad)
dec
addr16
cli
add
dec
xor
test
(bad)
(bad)
jg
sbb
and
shr
cli
outs
es
inc
jp
retf
lods
les
jmp
add
xchg
mov
inc
adc
stos
imul
xchg
cld
mov
rcr
rcl
cmp
imul
cli
sbb
lods
cld
(bad)
call
scas
les
mov
add
fcomp
mov
xor
push
mov
addr16
sahf
push
retf
jmp
je
mov
jo
cmps
leave
mov
movs
cmp
or
(bad)
(bad)
(bad)
jmp
jns
lahf
dec
fdiv
inc
out
aad
cmp
lock
push
repnz
leave
daa
das
sti
clts
jp
aam
popa
push
adc
adc
imul
(bad)
pop
add
imul
add
jg
(bad)
jbe
cs
xchg
add
ds
pop
aas
jecxz
dec
xor
call
fwait
jle
add
pop
inc
push
and
jmp
and
fwait
stos
fidiv
pop
push
inc
sar
jmp
inc
adc
out
or
nop
add
outs
mov
mov
push
pop
pop
out
leave
call
or
dec
clc
clc
inc
ret
lock
dec
sbb
mov
cmp
movs
(bad)
(bad)
jmp
mov
add
retf
push
or
fwait
pop
xchg
or
dec
xchg
push
push
aaa
jg
cmps
dec
cmp
push
dec
inc
cmp
inc
or
pop
sub
movs
arpl
inc
fld
fs
(bad)
call
call
sbb
xchg
(bad)
(bad)
jmp
rcl
js
js
pop
or
cmps
push
pop
jno
sbb
cmp
xchg
(bad)
(bad)
(bad)
push
mov
cmp
inc
(bad)
mov
mov
mov
adc
push
cmp
(bad)
(bad)
(bad)
jp
pop
mov
clc
sub
test
jl
and
inc
pop
test
js
add
(bad)
jl
or
cmp
dec
in
and
sub
or
push
dec
xor
xchg
or
lods
icebp
sub
int
leave
xchg
jae
movs
(bad)
fcomip
(bad)
(bad)
jle
and
shl
scas
std
cld
mov
ret
stos
fcomp
(bad)
out
ins
mov
fs
cli
es
xor
sbb
gs
fldenv
adc
test
xchg
(bad)
(bad)
jg
mov
mov
rcl
cmp
inc
xor
sbb
shr
jmp
inc
sbb
ins
cmp
shr
mov
xchg
retf
xchg
(bad)
(bad)
(bad)
jmp
jle
mov
sbb
or
or
sti
loop
movs
ss
(bad)
push
xchg
push
and
fisubr
mov
scas
call
cli
ret
fistp
imul
in
ret
test
loopne
stos
nop
xchg
cli
push
icebp
or
sbb
pop
enter
pop
loopne
push
enter
ss
stos
pop
das
and
ja
daa
div
(bad)
(bad)
(bad)
inc
pop
sar
nop
clc
das
(bad)
sar
sub
enter
mov
cld
(bad)
jmp
cli
jns
outs
dec
data16
test
jmp
ins
pop
data16
retf
addr16
(bad)
(bad)
push
push
and
jl
pop
sub
inc
pop
in
push
and
div
(bad)
(bad)
(bad)
(bad)
jle
loopne
stos
out
call
fild
fild
mov
mov
mov
inc
fbstp
jnp
and
and
and
arpl
dec
pusha
imul
mov
mov
xchg
mov
out
nop
inc
mov
inc
dec
and
mov
das
bound
cdq
push
pop
adc
(bad)
(bad)
cs
out
adc
loope
xchg
jne
(bad)
mov
sti
ins
test
outs
adc
lods
cmp
(bad)
(bad)
jle
out
xchg
sbb
(bad)
je
sahf
dec
sbb
dec
jg
ss
rcl
sti
(bad)
(bad)
(bad)
(bad)
stc
or
mov
mov
sbb
pop
or
mov
int3
sti
jbe
adc
(bad)
call
sub
mov
mov
mul
sar
cld
je
(bad)
(bad)
(bad)
jmp
mov
jno
into
cdq
lea
test
pop
or
je
mov
(bad)
out
push
test
ret
fimul
ror
push
scas
push
add
js
(bad)
(bad)
inc
shl
adc
fwait
ja
stos
loopne
xchg
cdq
ror
jmp
sbb
push
mov
std
push
xchg
xchg
pusha
sub
jmp
xor
adc
cmps
mov
dec
push
and
sar
loop
daa
rep
(bad)
(bad)
(bad)
(bad)
fsub
add
stc
mov
ret
jne
mov
dec
inc
bound
cmps
outs
sbb
inc
(bad)
bnd
retf
rcr
cmc
call
(bad)
xchg
cmp
push
ds
fwait
dec
push
cld
push
jo
cli
xor
mov
adc
loope
xchg
pusha
stc
(bad)
jmp
in
cwde
out
mov
fidivr
test
sti
dec
pusha
or
(bad)
push
dec
cmp
cmps
add
mov
lea
adc
xchg
bound
(bad)
(bad)
(bad)
jmp
sub
aas
sti
call
fwait
(bad)
mov
nop
mov
mov
jo
jmp
div
fdivr
lods
int3
test
cmp
lods
pop
fdivr
(bad)
out
cli
mov
repnz
lahf
cmps
jle
ret
int
and
push
out
xchg
mov
mov
stos
and
sbb
call
aaa
std
hlt
cmps
mov
outs
jne
loope
jg
in
inc
cmp
ins
add
jne
or
(bad)
cmp
inc
push
pop
xor
mov
ror
sar
mov
pop
dec
inc
xchg
je
push
mov
or
xor
jmp
daa
jmp
xchg
xor
sbb
cmp
(bad)
(bad)
dec
cs
and
mov
sbb
(bad)
aam
pop
scas
push
add
jp
and
mov
test
(bad)
(bad)
out
cli
jae
pop
rcl
inc
adc
mov
mov
mov
push
sub
(bad)
(bad)
push
(bad)
shl
xor
push
hlt
jb
dec
aas
ins
data16
repz
test
fmul
(bad)
(bad)
(bad)
jmp
jmp
jmp
xor
inc
jns
ret
mov
xchg
cmps
lds
ficom
mov
(bad)
(bad)
(bad)
jmp
mov
cmp
cld
sub
xor
nop
dec
(bad)
sub
push
aas
popf
mov
(bad)
(bad)
dec
xlat
xchg
pop
mov
lods
jmp
pop
jmp
jle
xor
icebp
cdq
jmp
dec
test
dec
(bad)
call
and
fucomp
outs
pop
fistp
sbb
cmps
push
ficom
mov
mov
and
arpl
push
jg
and
nop
push
xor
mov
(bad)
mov
int
inc
scas
inc
bnd
fsubr
mov
sbb
mov
inc
hlt
imul
outs
mov
mov
mov
and
inc
lods
mov
cmp
and
pushf
mov
sbb
ss
mov
xchg
out
jnp
inc
aad
sbb
push
and
cli
mov
pop
aaa
mov
and
dec
jp
aad
push
ret
push
jmp
jmp
shl
ss
out
push
outs
add
loop
pop
and
xor
inc
and
rcr
(bad)
(bad)
(bad)
dec
push
or
sbb
mov
jp
cmp
fcomp
mov
cs
sbb
add
inc
mov
mov
rcl
popa
xchg
push
imul
add
push
jmp
(bad)
jmp
dec
lods
push
adc
retf
jg
ins
ret
retf
int3
retf
push
mov
mov
(bad)
(bad)
(bad)
push
pop
sub
jmp
xchg
aad
dec
fiadd
mov
sub
(bad)
(bad)
dec
push
in
and
enter
rol
xchg
adc
sub
into
dec
dec
adc
(bad)
(bad)
(bad)
inc
pop
rcr
daa
xlat
out
mov
xchg
xor
xor
add
ins
xor
into
pusha
inc
jmp
fwait
(bad)
(bad)
(bad)
jmp
pop
sbb
fbstp
fcom
xor
shr
cld
fs
loopne
(bad)
sbb
leave
outs
ss
std
imul
sub
push
mov
mov
ret
test
xchg
cli
mov
in
mov
mov
jp
(bad)
inc
jo
mov
int
retf
ja
mov
mov
pop
cmp
fimul
mov
ret
xlat
mul
(bad)
repz
and
push
jmp
mov
mov
xor
cmps
ja
xchg
fld
push
xchg
nop
retf
jnp
pop
ja
or
in
pushf
mov
retf
into
aaa
pushf
cmp
sbb
xchg
jmp
sbb
add
push
in
pop
xchg
out
shl
clc
mov
pop
xor
not
stos
(bad)
(bad)
(bad)
jmp
mov
rcl
movs
sbb
in
cmp
movs
push
fidiv
push
adc
add
and
sbb
xor
(bad)
loope
or
rol
mov
add
packuswb
in
inc
mov
push
imul
push
pop
(bad)
adc
mov
movs
dec
(bad)
jl
mov
fidivr
outs
(bad)
jg
mov
push
das
mov
jmp
add
and
aad
sub
(bad)
(bad)
inc
outs
xor
inc
fistp
jg
(bad)
push
sbb
mov
jmp
(bad)
bound
lock
mov
xor
push
pop
mov
(bad)
stos
(bad)
dec
jg
cmc
sub
cmps
mov
sbb
sahf
call
cmp
jmp
dec
or
xchg
jae
and
push
inc
call
(bad)
ins
lock
call
cmp
(bad)
inc
cmp
add
inc
arpl
mov
leave
out
mov
lea
pop
std
(bad)
xchg
not
imul
movs
ins
out
inc
ret
data16
sbb
cmp
or
dec
ret
imul
inc
inc
mov
out
sub
mov
in
cmp
fwait
cdq
call
or
or
(bad)
(bad)
push
adc
cmps
mov
leave
das
out
fcomip
arpl
daa
(bad)
jbe
retfw
in
pop
(bad)
(bad)
jmp
aad
leave
pop
jnp
adc
dec
push
mov
not
push
sar
pop
mov
mov
xchg
xor
(bad)
ins
std
sbb
(bad)
jg
aas
jns
or
jg
test
inc
adc
shl
xchg
ret
inc
loopne
ds
(bad)
(bad)
(bad)
call
push
in
mov
xchg
adc
jle
adc
iret
in
cmps
or
int
shl
mov
ins
mov
push
inc
xchg
ror
mov
mov
fcomip
cli
push
mov
les
sub
sub
scas
dec
pushf
ss
sbb
(bad)
(bad)
push
pop
addr16
jo
mov
fbstp
inc
mov
jae
xor
mov
imul
add
push
(bad)
xchg
jg
jno
popa
bound
push
sbb
(bad)
sbb
cmps
or
scas
add
inc
fwait
jne
sbb
(bad)
(bad)
push
push
add
or
test
pop
fwait
stos
mov
lds
fdivp
xchg
pop
adc
outs
dec
push
jmp
jl
add
cdq
std
fcom
fs
(bad)
(bad)
inc
out
dec
pop
cmovp
jmp
inc
repnz
lock
dec
cmp
mov
mov
nop
stos
mov
(bad)
fbld
mov
and
sar
pop
cmp
lods
(bad)
(bad)
(bad)
(bad)
cmp
ret
mov
or
stos
jne
retf
outs
es
aas
sar
sub
pop
push
xchg
test
stos
jns
xchg
fs
cmp
aas
mov
fs
imul
mov
mov
pop
(bad)
(bad)
inc
sub
inc
retf
adc
mov
ins
or
mov
add
rcl
(bad)
(bad)
mov
mov
inc
push
sbb
mov
or
(bad)
call
mov
fxch
ret
popa
mov
and
adc
loope
mov
(bad)
(bad)
call
inc
and
jmp
std
jno
stos
dec
rep
pushf
jle
lock
inc
inc
mov
mov
test
mov
rol
(bad)
jmp
mov
sub
xor
(bad)
mov
sub
pop
mov
mov
add
push
outs
int3
jo
sbb
ins
and
data16
cld
call
mov
mov
or
pop
(bad)
jmp
cmps
push
cmps
pop
sub
sbb
or
sub
(bad)
std
jmp
jge
ins
xor
fwait
retf
scas
scas
scas
mov
dec
push
ror
xor
mov
or
test
pop
push
mov
lahf
ret
pusha
adc
scas
es
cmp
cli
aad
xor
sub
lahf
ja
shr
inc
(bad)
push
add
pop
fwait
in
pop
in
dec
outs
mov
or
in
jmp
xor
(bad)
(bad)
fild
push
xor
movs
mov
mov
aas
dec
test
cmp
mov
(bad)
(bad)
call
push
or
and
xchg
sahf
cmps
cli
push
add
mov
xor
(bad)
call
es
push
and
and
shl
mov
inc
repz
(bad)
(bad)
call
movs
out
ja
stos
xchg
mov
mov
jns
xor
xor
fwait
in
(bad)
call
push
mov
movs
mov
gs
jle
test
sahf
(bad)
(bad)
(bad)
jmp
test
ficom
sub
mov
vmovups
mov
ror
inc
mov
call
cmps
js
mov
jo
push
xor
ins
ja
mov
mov
(bad)
call
and
pop
jno
pop
in
cwde
jo
(bad)
(bad)
jmp
and
xchg
mov
popf
aad
jno
pop
jb
mov
aam
in
lods
call
dec
mov
ja
xchg
pop
test
inc
cmp
arpl
aas
inc
daa
retf
sbb
xchg
ins
ja
ficom
imul
push
add
jae
clc
sub
push
sti
xor
outs
mov
repnz
test
mov
lds
mov
nop
mov
je
sar
and
inc
dec
ins
pop
hlt
and
rdmsr
movs
rcl
add
(bad)
(bad)
jmp
xor
pop
mov
push
mov
xor
retf
shl
(bad)
(bad)
(bad)
call
data16
sub
out
add
adc
js
xchg
cld
mov
sti
adc
in
sub
mov
jge
or
jb
sar
rcr
std
mov
scas
and
cld
dec
cmp
scas
dec
or
fadd
dec
ins
mov
dec
jmp
ret
mov
inc
lahf
ss
lahf
(bad)
mov
cmp
jmp
jns
daa
in
jae
pop
scas
add
out
cli
call
ret
fcom
sub
xor
mov
bnd
sbb
or
daa
push
sar
(bad)
(bad)
ficomp
mov
mov
stos
jo
or
adc
es
call
cmp
pushf
dec
xchg
loop
add
ins
jmp
imul
mov
jb
adc
sar
jg
sub
jmp
dec
ins
ds
cmps
pop
(bad)
dec
push
sbb
fiadd
push
adc
jmp
clc
push
hlt
mov
mov
cmp
mov
jne
loopne
lahf
(bad)
(bad)
(bad)
inc
inc
xchg
int3
cmp
aam
ds
dec
sbb
aas
mov
pop
fsubr
sub
(bad)
shr
jle
mul
jle
call
adc
xor
dec
ret
sbb
daa
lods
jo
mov
shr
cs
(bad)
mov
inc
push
das
and
mov
aad
cmps
in
adc
jmp
or
mov
sbb
push
inc
add
xlat
and
(bad)
push
jmp
call
adc
aam
jg
aad
stos
ins
or
call
(bad)
push
sub
(bad)
(bad)
cmp
sub
sbb
loop
sbb
push
out
(bad)
dec
fisttp
movs
jg
or
ss
xchg
out
in
stc
aaa
je
call
mov
int3
mov
pop
imul
movs
loopne
sbb
(bad)
(bad)
jmp
vmaxps
popf
(bad)
pop
adc
cmps
mov
dec
scas
dec
dec
add
lock
std
sub
dec
adc
dec
lahf
loop
fmul
adc
mov
mov
aaa
cld
(bad)
call
adc
mov
test
daa
xlat
loope
call
fcomip
aas
jg
add
sbb
xchg
sub
add
(bad)
(bad)
fcmovnu
cmps
cld
mov
push
and
jb
retf
fcomp
push
dec
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
dec
std
inc
jmp
mov
mov
jne
fwait
shr
dec
lods
mov
dec
mov
ja
div
test
inc
nop
sub
(bad)
mov
push
test
test
test
sti
xchg
(bad)
retf
sub
sar
call
sub
dec
mov
push
pop
or
mov
add
call
call
imul
jae
lahf
les
mov
mov
dec
jb
sbb
shr
sub
(bad)
jmp
mov
and
xchg
test
sub
(bad)
data16
sahf
add
lahf
sub
movs
icebp
lds
mov
imul
das
sar
(bad)
jmp
or
mov
popf
and
mov
ss
aad
xchg
jbe
(bad)
(bad)
(bad)
inc
mov
(bad)
inc
fst
xchg
mov
test
rcl
cmp
xchg
outs
popa
(bad)
adc
jmp
(bad)
pop
es
addr16
dec
pop
mov
(bad)
(bad)
(bad)
mov
or
nop
ret
xchg
or
mov
sub
fidivr
inc
fwait
push
jae
(bad)
(bad)
push
jl
and
dec
pop
mov
arpl
lea
(bad)
(bad)
call
jecxz
mov
cli
add
jnp
fdivr
out
arpl
adc
fnstcw
clc
(bad)
(bad)
jmp
pusha
scas
or
inc
(bad)
test
(bad)
cld
push
and
mov
data16
(bad)
jg
scas
xchg
aas
in
jmp
jp
in
mov
push
push
jmp
(bad)
(bad)
(bad)
push
lds
cmp
aas
mov
xchg
out
pop
das
xor
outs
add
nop
mov
ficom
rcr
mov
mov
xchg
fldcw
cmps
sub
arpl
in
idiv
(bad)
(bad)
inc
inc
addr16
daa
movs
sub
jmp
dec
icebp
ins
sti
sbb
cwde
ins
and
xchg
push
dec
jp
call
xchg
jmp
push
fidiv
fisttp
(bad)
out
sub
or
jmp
inc
mov
dec
out
aam
loop
repz
dec
push
dec
in
xlat
sbb
jmp
(bad)
(bad)
(bad)
call
sub
inc
loope
cdq
repz
or
xchg
lock
(bad)
(bad)
inc
cwde
sbb
imul
jnp
ins
adc
xor
mov
(bad)
fcmove
push
leave
fld
adc
and
cwde
movs
add
inc
fisubr
(bad)
jg
cdq
or
jg
xchg
mov
inc
mov
shr
icebp
rcl
retf
stc
(bad)
(bad)
call
shl
(bad)
jae
cmp
pushf
movs
gs
(bad)
cmp
or
in
dec
xchg
sbb
xor
jp
sbb
jl
and
cli
xchg
and
adc
test
lods
push
(bad)
(bad)
(bad)
fisttp
sbb
bound
addr16
push
xchg
stos
mov
out
mov
fdiv
repnz
(bad)
(bad)
push
jmp
lods
daa
xor
xchg
mov
push
fldcw
into
xchg
not
cld
(bad)
dec
bound
fs
mov
jae
add
shl
int
dec
(bad)
call
and
mov
add
xchg
repnz
jnp
sbb
fidivr
ss
adc
or
inc
mov
pop
(bad)
cmp
xchg
call
(bad)
(bad)
call
ins
icebp
jnp
scas
sbb
mov
std
repz
xchg
push
aaa
in
in
pop
cmp
clc
adc
int
(bad)
mov
xor
xchg
jae
xor
les
(bad)
sar
aad
mov
push
ja
mov
(bad)
(bad)
(bad)
call
cmp
leave
out
aaa
(bad)
out
jne
push
cmp
sub
pop
jl
sub
push
iret
sub
and
std
(bad)
dec
ret
mov
jmp
inc
rcr
push
dec
stc
repnz
push
xor
daa
push
cld
mov
(bad)
sbb
sbb
retf
(bad)
jmp
shl
cld
popa
inc
int3
(bad)
jo
outs
jne
sbb
stos
aaa
push
cmp
mov
sbb
cs
sti
cmp
or
dec
push
mov
push
(bad)
(bad)
jg
into
jmp
dec
ss
outs
or
lahf
xlat
mov
jb
in
xchg
and
pop
cmps
arpl
adc
(bad)
(bad)
call
xor
cmp
push
adc
mul
(bad)
adc
mov
adc
(bad)
xchg
into
add
(bad)
fcomp
daa
outs
xchg
xlat
fsubr
int3
and
xchg
(bad)
lods
and
dec
idiv
pop
inc
add
add
mov
xchg
xor
(bad)
jmp
add
call
adc
push
jmp
pop
and
call
in
fidiv
(bad)
(bad)
(bad)
jmp
push
mov
data16
jae
lods
fdiv
adc
inc
test
and
inc
pop
cmova
call
push
jp
and
shr
js
sub
xor
loope
push
clc
mov
sub
add
lock
out
sub
movs
dec
jno
retf
inc
(bad)
sbb
fbld
xchg
cmp
or
or
xor
popa
in
(bad)
(bad)
inc
call
daa
repnz
xchg
inc
mov
sub
stos
cdq
repnz
repz
repnz
jle
inc
ror
jae
jmp
mov
out
sbb
add
inc
adc
(bad)
(bad)
(bad)
jmp
mov
setle
push
and
not
fmul
push
je
pop
mov
sbb
mov
(bad)
(bad)
call
cmp
pop
mov
ds
inc
pop
and
mov
ins
sbb
xchg
fwait
enter
(bad)
(bad)
call
pop
mov
pop
scas
xchg
pusha
cmp
jecxz
out
les
or
(bad)
call
loope
(bad)
fsub
lods
dec
loope
mov
(bad)
(bad)
dec
jg
pop
ror
push
imul
jge
or
dec
cli
fstp
js
jmp
jmp
cdq
movs
inc
dec
jnp
movs
jle
cmp
cmp
jmp
cdq
pop
mov
mov
and
mov
jno
pop
aas
jl
mov
adc
mov
aad
popf
push
xchg
dec
in
mov
aam
fsubr
sbb
pusha
pop
mov
les
(bad)
(bad)
call
cmp
push
jecxz
aaa
ds
pop
retf
fcom
push
(bad)
dec
xchg
mov
or
scas
sub
dec
(bad)
(bad)
(bad)
jmp
mov
jbe
mov
ja
inc
ins
inc
sub
sbb
mov
(bad)
(bad)
jmp
sar
cmp
sti
movs
pop
dec
jne
jmp
inc
(bad)
scas
pop
mov
jno
adc
(bad)
sub
fld
movs
mov
push
adc
(bad)
(bad)
inc
sahf
fidiv
or
(bad)
xlat
mov
and
sahf
repz
mov
dec
sti
fmul
in
add
sar
(bad)
(bad)
(bad)
jmp
cmp
jp
lahf
lea
sub
dec
sub
add
or
fmul
call
mov
call
cmp
mov
dec
test
adc
adc
fs
mov
aaa
sub
mov
inc
and
inc
in
mov
or
sub
(bad)
inc
xchg
(bad)
jbe
call
sub
mov
(bad)
fistp
or
inc
pop
pop
inc
xor
mov
push
xchg
mov
inc
mov
stos
xchg
inc
(bad)
inc
mov
mov
test
stc
push
(bad)
(bad)
(bad)
mov
sbb
mov
push
cwde
nop
call
xor
cmp
call
inc
enter
push
inc
cmp
pop
add
xchg
fisttp
das
addr16
pop
or
cmp
(bad)
(bad)
(bad)
call
(bad)
loope
mov
adc
xchg
outs
cmp
in
adc
fdivr
std
adc
(bad)
push
push
add
sub
dec
xor
adc
popf
ror
xor
xchg
pusha
call
icebp
(bad)
fldcw
test
sub
adc
movs
lods
out
mov
neg
arpl
in
add
shr
ss
repnz
inc
xchg
mov
(bad)
mov
sub
emms
lods
ret
pop
xlat
adc
hlt
jmp
fcom
ds
clc
sbb
pop
hlt
loopne
fbld
pop
test
sub
pop
push
aas
push
push
and
add
sbb
inc
jmp
mov
sbb
(bad)
ss
jmp
mov
fistp
xor
adc
std
(bad)
(bad)
in
outs
int
das
cmp
jns
test
arpl
fimul
mov
add
movs
mov
stos
sbb
mov
(bad)
push
cdq
sahf
arpl
push
inc
sub
mov
mov
mov
mov
lahf
adc
call
inc
and
push
movs
jmp
xchg
sbb
sub
mov
int3
shl
jo
js
les
call
sbb
in
leave
mov
mov
out
fsubr
inc
adc
arpl
lods
lds
int
fsubr
in
and
call
les
cmp
mov
mov
mov
fsubr
sbb
or
test
jno
ficom
out
cli
rcl
jne
arpl
ja
or
je
sub
jecxz
jle
cmp
push
aad
(bad)
jg
dec
repnz
and
cmps
js
push
sahf
cli
ins
arpl
and
add
repz
sar
mov
ret
clc
fist
loopne
inc
ror
push
mov
jle
sbb
loope
mov
(bad)
repnz
push
rcr
loope
mov
and
or
xchg
loop
lods
jmp
shr
(bad)
(bad)
fbld
test
add
jns
mov
rcr
adc
sbb
(bad)
leave
inc
les
loop
mov
fidiv
adc
(bad)
(bad)
(bad)
jmp
repz
mov
hlt
push
sub
or
je
add
push
push
clc
aaa
add
aad
shl
xor
out
cli
inc
inc
or
in
call
dec
popa
cmp
es
adc
cld
dec
sub
je
fist
repnz
inc
lods
aad
jle
sbb
arpl
mov
jg
les
mov
cmp
sbb
popa
fnstcw
or
test
scas
js
(bad)
mov
jno
mov
cwde
out
(bad)
dec
pusha
imul
(bad)
movs
fwait
and
adc
jg
(bad)
jmp
sub
xchg
mov
mov
into
ror
leave
mov
(bad)
adc
mov
mov
(bad)
(bad)
jg
test
xor
mov
cmps
int3
or
shr
push
mov
test
les
add
cmps
inc
stos
adc
repz
ret
shl
cmp
xchg
aas
jp
idiv
xor
loop
inc
inc
cwde
push
push
jl
fucomi
cmps
shl
lea
cs
jno
inc
adc
aaa
mov
loop
adc
stos
(bad)
ja
imul
jmp
sbb
xchg
xor
popf
xchg
(bad)
(bad)
(bad)
dec
mov
lds
and
inc
rcl
jecxz
and
add
push
inc
jp
in
fmul
push
dec
(bad)
(bad)
call
in
fsubr
and
fdivr
sub
add
and
mov
fimul
outs
(bad)
(bad)
call
hlt
xchg
xor
les
aam
pushf
sahf
pop
add
pop
ret
shl
xchg
mov
es
jg
out
sbb
or
or
test
(bad)
call
cwde
(bad)
sub
and
sub
adc
(bad)
(bad)
(bad)
call
xor
imul
push
sub
xchg
pop
mov
cmp
xchg
(bad)
out
jg
mov
(bad)
(bad)
inc
ins
imul
sbb
lods
add
in
sbb
xchg
adc
lods
arpl
cld
cmp
std
add
(bad)
push
fwait
stos
mov
out
mov
(bad)
sbb
(bad)
mov
repnz
lea
pop
xchg
lock
mov
jb
xchg
sahf
call
and
out
dec
and
xchg
(bad)
jecxz
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
ret
aaa
pop
xchg
(bad)
push
sub
push
aaa
pop
(bad)
retf
mov
push
push
retf
loope
(bad)
(bad)
(bad)
inc
sar
dec
scas
cmp
sbb
lahf
or
inc
jae
mov
shl
vmaxss
call
leave
dec
in
imul
cmc
inc
pop
jge
lock
cmps
leave
out
call
and
lea
mov
mov
push
adc
jmp
movs
mov
mov
pop
push
inc
push
icebp
leave
mov
(bad)
je
adc
lock
jp
pop
cmps
aaa
jg
pop
sbb
icebp
fs
mov
sub
push
(bad)
(bad)
(bad)
inc
jns
adc
and
dec
dec
outs
in
pop
retf
(bad)
push
(bad)
pop
scas
mov
push
jmp
adc
mov
xchg
out
loope
aad
push
iret
sahf
test
or
xor
pop
inc
(bad)
fcomip
(bad)
cmp
add
xor
imul
push
push
in
mov
push
and
push
xor
dec
xor
repz
pusha
(bad)
lock
mov
push
mov
shl
pop
xor
sbb
popf
jnp
add
or
(bad)
(bad)
(bad)
jg
test
cmp
push
mov
out
jae
cmp
cld
stc
dec
inc
retf
mov
(bad)
cs
(bad)
(bad)
cli
lock
mov
mov
(bad)
in
cmp
(bad)
cs
into
and
or
fwait
(bad)
js
sbb
dec
imul
fs
pop
cmp
jo
jecxz
test
call
stos
out
arpl
sub
fimul
inc
sbb
push
pop
icebp
repnz
stc
scas
rcl
mov
cmp
stos
add
(bad)
(bad)
out
hlt
sub
push
das
fnsave
jns
mov
and
sti
adc
mov
mov
jge
pop
cmc
(bad)
(bad)
jmp
pop
into
and
sub
movs
fadd
fwait
retf
adc
lea
dec
xchg
xchg
and
mov
jne
push
pop
adc
jb
(bad)
(bad)
(bad)
fistp
bound
popf
fisub
aas
nop
or
cmps
fstp
jnp
test
imul
xor
cwde
xchg
cs
pop
(bad)
fist
in
push
test
pop
movs
xor
call
(bad)
call
pop
in
repnz
jmp
cmc
jmp
adc
dec
daa
call
jmp
or
push
fld
sbb
push
movs
add
or
jns
ins
(bad)
(bad)
(bad)
fisttp
mov
mov
movs
movs
inc
jl
adc
or
jg
mov
outs
mov
into
jg
dec
and
cmp
sbb
push
inc
sbb
inc
cmp
xor
xchg
jno
xlat
not
call
xlat
clc
outs
lods
out
lods
xor
sbb
dec
adc
add
mov
mov
sub
popf
nop
add
daa
aad
clc
cs
gs
fsubr
pop
xor
xchg
sub
int
rol
push
inc
mov
fstp
lahf
jmp
xchg
data16
xor
jno
push
(bad)
loopne
cwde
cli
add
(bad)
call
scas
dec
arpl
push
push
adc
fldcw
ins
or
dec
mov
jns
mov
dec
jmp
(bad)
fadd
and
jp
inc
and
xor
lock
cmp
pop
rcl
pop
mov
sbb
push
fcomip
(bad)
dec
jno
jg
scas
mov
je
push
jmp
fcomp
mov
push
loop
mov
daa
(bad)
inc
outs
ret
js
shr
neg
int
(bad)
call
call
shl
outs
mov
jmp
cmps
lds
fistp
ja
pop
inc
mov
pop
repnz
(bad)
aad
cmp
arpl
sub
xor
(bad)
(bad)
(bad)
inc
pop
das
jne
sbb
sub
clc
test
(bad)
(bad)
mov
sub
and
sar
pop
and
jecxz
cwde
jg
iret
mov
test
jb
scas
leave
(bad)
(bad)
(bad)
dec
aad
fxch
mov
xchg
push
and
push
(bad)
sti
or
sub
aaa
out
inc
(bad)
fnstcw
(bad)
(bad)
inc
sar
test
in
ret
mov
and
mov
test
popf
mov
in
fidiv
aam
dec
addr16
(bad)
out
clc
lods
jne
jg
xchg
push
aaa
mov
mov
inc
jl
jns
dec
jmp
(bad)
(bad)
(bad)
inc
(bad)
xchg
pushf
dec
add
stc
sub
std
mov
xor
jnp
leave
cmp
inc
sub
push
(bad)
(bad)
(bad)
call
mov
jmp
mov
cmp
dec
jnp
ja
xchg
mov
cmp
xor
call
stos
cmps
pop
mov
pop
sub
add
xchg
in
leave
or
les
jo
sbb
pop
retf
cmp
(bad)
cmp
sti
mov
mov
out
(bad)
mov
ret
(bad)
call
xchg
xor
or
add
xor
aaa
inc
(bad)
call
sub
mov
lahf
call
scas
cmps
unpckhps
dec
fild
or
add
dec
in
xchg
(bad)
dec
adc
repz
call
test
cmp
sbb
(bad)
jg
xlat
add
and
iret
test
sub
sub
or
jecxz
(bad)
jg
cwde
into
test
mov
lock
or
inc
adc
(bad)
fild
sub
jno
ret
jge
xchg
inc
stos
adc
and
sub
dec
(bad)
(bad)
inc
test
xchg
sbb
cmp
cmc
pop
(bad)
(bad)
cmp
and
mov
mov
jmp
add
fdiv
jg
call
fstp
imul
aad
sub
rcl
dec
xchg
mov
or
out
sub
sbb
(bad)
call
cs
mov
arpl
jmp
stos
aad
add
je
dec
add
sbb
inc
adc
add
dec
imul
and
arpl
push
pop
in
scas
test
inc
jnp
sub
inc
mov
or
out
or
xchg
repnz
xchg
int
mov
jmp
sar
stos
clc
dec
imul
je
outs
mov
xchg
adc
jp
inc
xchg
cmp
loopne
lock
sub
push
inc
mov
pop
ss
pop
fstp
adc
outs
inc
movs
fsubr
ins
(bad)
(bad)
(bad)
(bad)
call
imul
mov
jg
ror
adc
xchg
shl
push
xor
pop
cmp
ss
(bad)
ficom
xchg
jb
adc
in
int3
sbb
cld
ror
push
push
std
or
mov
cmp
loop
inc
call
dec
pop
popa
test
xor
mov
test
(bad)
mov
nop
call
mov
cli
(bad)
(bad)
mov
pushf
pop
ins
jl
cli
sub
out
inc
fmulp
fnsave
idiv
or
adc
(bad)
jmp
iret
mov
dec
pop
(bad)
jg
xor
mov
inc
mov
mov
(bad)
(bad)
cli
or
mov
cmp
out
jle
loop
add
or
fucom
(bad)
cmp
jl
mov
arpl
cmps
mov
jle
add
mov
(bad)
inc
pusha
xchg
sbb
not
imul
sar
or
cmp
mov
cmp
(bad)
(bad)
inc
jo
and
add
arpl
nop
inc
xchg
clc
push
into
out
imul
mov
iret
rol
mov
fwait
inc
ins
dec
sbb
xor
xor
pop
push
or
popa
mov
clc
(bad)
call
xor
mov
repz
mov
mov
clc
pop
xor
sbb
shr
add
cmp
cld
lea
mov
int3
or
jg
call
popa
mov
xchg
xchg
into
rol
or
add
shl
pop
mov
shr
dec
mov
inc
jl
push
sbb
aaa
(bad)
(bad)
mov
test
mov
sub
add
loopne
mov
fsub
mov
push
(bad)
(bad)
(bad)
call
sub
sbb
je
adc
ins
aad
retf
pop
ror
jle
int
nop
cwde
fist
(bad)
push
and
or
(bad)
jmp
sub
loopne
mov
(bad)
(bad)
(bad)
(bad)
call
sub
mov
mov
lea
ds
in
ret
popf
inc
(bad)
call
or
sbb
xor
sbb
cmp
push
(bad)
push
mov
out
clc
call
or
inc
adc
mov
fidiv
mov
cmp
mov
(bad)
inc
rcr
clc
cmc
outs
jno
pop
dec
stos
sub
sub
lahf
jbe
(bad)
(bad)
inc
sbb
mov
ror
repnz
mov
add
xor
int3
ret
enter
fcmovnu
mov
fdivrp
scas
jmp
or
inc
arpl
(bad)
(bad)
(bad)
(bad)
inc
bound
jns
enter
or
and
shr
shl
repz
adc
out
pop
fsubr
cmp
fcmove
lea
add
sahf
(bad)
ins
(bad)
(bad)
call
aam
push
dec
int
xchg
aas
add
stc
inc
cwde
or
fst
(bad)
adc
push
xor
aas
jb
int3
add
jmp
adc
or
cwde
lods
cmp
imul
and
push
jecxz
push
push
retf
je
(bad)
(bad)
dec
pushf
movs
sbb
and
jns
ss
scas
pop
dec
xor
dec
add
fstp
loopne
adc
outs
clc
inc
sbb
dec
mov
and
adc
mov
sub
jno
(bad)
(bad)
jmp
jns
push
hlt
out
out
mov
iret
jmp
test
add
rcl
popa
and
(bad)
(bad)
call
mov
dec
data16
pop
loop
jne
fiadd
cld
out
stos
push
xchg
jmp
icebp
(bad)
push
dec
rcl
sbb
movs
sub
mov
jg
retf
lods
jl
fnstcw
add
xchg
pop
sub
gs
inc
add
lods
or
cmp
test
(bad)
out
je
retf
cmp
iret
dec
add
outs
in
dec
neg
xchg
xchg
jmp
xor
cs
pusha
shr
dec
push
and
fisubr
lock
jmp
inc
dec
pop
push
daa
arpl
lahf
test
fmul
dec
popf
fucomip
pop
(bad)
fcomip
dec
dec
mov
in
jne
sbb
mov
loop
jge
add
jbe
loopne
fild
clc
pop
icebp
movs
and
(bad)
in
jb
(bad)
call
(bad)
jge
mov
aad
mov
xor
xchg
icebp
mov
shr
std
shr
loop
cmp
ja
lea
inc
adc
rol
jns
add
jecxz
aam
(bad)
call
xor
sti
xor
jmp
(bad)
scas
int
in
test
outs
sbb
jle
shl
test
and
(bad)
dec
ins
mov
cmp
clc
sti
cdq
mov
in
xchg
in
ss
inc
cld
(bad)
inc
cwde
mov
shl
es
fs
mov
mov
scas
xor
cmp
mov
cmp
mov
xor
or
imul
push
sbb
xchg
gs
push
test
mov
fstp
icebp
add
in
mov
and
mov
(bad)
into
and
out
dec
(bad)
(bad)
(bad)
dec
sbb
nop
pop
and
gs
cmp
sbb
sbb
inc
mov
pop
in
addr16
(bad)
(bad)
jmp
scas
sbb
movs
addr16
test
push
sbb
mov
jne
frstor
call
(bad)
inc
push
adc
dec
ret
cli
rcr
retf
jno
sbb
dec
adc
call
test
movs
sub
xor
fldcw
jmp
enter
or
retf
xor
cmp
out
cmp
inc
std
mov
pop
cwde
(bad)
(bad)
(bad)
(bad)
jp
ret
mov
jnp
std
xchg
repnz
test
movs
in
or
sbb
imul
fnstenv
popa
lods
fadd
mov
adc
xor
sahf
dec
ds
sub
pop
add
jmp
inc
adc
mov
js
or
sub
(bad)
jg
mov
imul
fs
icebp
in
jae
add
sub
js
push
mov
(bad)
jne
retf
inc
cdq
mov
push
fst
jae
(bad)
jg
call
xchg
jmp
mov
jns
push
xchg
lock
dec
(bad)
call
repz
jno
bound
scas
xor
mov
inc
sti
sbb
jl
pop
push
inc
std
mov
(bad)
or
jge
jmp
aam
fs
mov
leave
mov
adc
xor
(bad)
call
or
in
mov
addr16
mov
cmc
int
repz
mov
mov
mov
out
(bad)
(bad)
(bad)
inc
jbe
or
mov
pop
int
and
push
sar
xor
outs
(bad)
(bad)
dec
jg
ficom
scas
imul
add
dec
mul
sbb
aas
adc
push
inc
inc
push
mov
outs
jo
les
jb
mov
add
sub
(bad)
js
std
xchg
fadd
aam
inc
sbb
ins
call
fcomp
add
push
dec
sbb
inc
loope
xchg
cs
adc
push
es
jmp
fwait
push
xchg
push
adc
push
sbb
test
stc
jnp
pop
fcomip
(bad)
push
push
push
aad
inc
ja
(bad)
jecxz
int
dec
lds
add
jns
sbb
call
nop
fidiv
imul
mov
pop
adc
repz
loop
rol
mov
(bad)
(bad)
(bad)
cmp
adc
sbb
mov
fcom
xchg
ds
or
repz
ds
lods
lods
add
sar
dec
pop
cmp
cld
(bad)
call
xchg
push
sbb
dec
push
pop
(bad)
pop
and
fistp
(bad)
(bad)
dec
nop
push
in
dec
jmp
sbb
or
js
mov
jg
outs
sbb
pop
cmc
lods
mov
mov
xor
mov
sub
mov
hlt
dec
je
push
not
std
dec
movs
inc
rcr
mov
cdq
jno
(bad)
(bad)
jg
push
inc
xchg
fcom
ret
in
jb
adc
popa
push
pop
ds
(bad)
push
cld
ja
out
jns
dec
fmul
rcr
cmp
pusha
sbb
inc
in
popf
cmc
popf
cmps
add
jns
scas
mov
shl
and
loopne
sbb
rcr
scas
mov
sar
das
clc
retf
(bad)
jb
push
add
popf
sbb
ss
outs
dec
or
test
(bad)
(bad)
(bad)
jg
mov
ins
imul
cdq
push
js
sub
xchg
push
mov
pop
pop
js
(bad)
(bad)
call
or
shl
hlt
in
or
out
inc
jmp
add
ficom
xor
lock
push
(bad)
lods
mov
mov
inc
out
xchg
mov
hlt
push
push
xchg
jne
enter
es
or
cwde
jno
enter
scas
std
jmp
and
icebp
jae
in
jae
iret
fistp
(bad)
jmp
cli
inc
(bad)
js
mov
push
mov
mov
fcmovnu
and
jo
ins
push
jno
loope
pop
loope
dec
nop
push
cld
or
push
test
loop
mov
xchg
mov
sbb
pop
inc
pop
push
pop
or
test
inc
dec
shl
in
jg
(bad)
call
ins
cdq
adc
ins
push
mov
fist
daa
aad
adc
(bad)
(bad)
push
xor
sbb
(bad)
movs
push
adc
rcl
mov
push
loopne
cwde
jnp
shr
(bad)
(bad)
(bad)
dec
pop
jl
rcr
cmp
retf
out
jnp
dec
fwait
mov
call
std
(bad)
mov
ret
push
push
jo
dec
mov
mov
mov
pop
xchg
inc
test
jmp
cmp
pusha
pop
sub
dec
jmp
inc
jl
mov
packsswb
add
(bad)
(bad)
(bad)
(bad)
cmp
adc
fist
pusha
push
cs
or
cli
es
sbb
(bad)
(bad)
out
clc
lock
outs
bound
pop
pop
outs
mov
mov
cmps
and
loopne
ss
push
lods
xor
mov
jg
sub
push
fidiv
jge
xor
sbb
dec
mov
jg
cmps
inc
cmp
fcmovnbe
repz
es
add
sub
ret
ja
push
mov
fwait
cmp
test
push
xchg
mov
cmp
cmp
(bad)
call
cli
out
push
jge
cmp
into
add
scas
enter
pusha
(bad)
(bad)
(bad)
(bad)
jmp
sub
dec
and
add
gs
cmc
cli
aam
repz
push
std
inc
push
inc
dec
clc
arpl
xchg
fsubr
mov
out
inc
neg
jecxz
xchg
xchg
jmp
sub
mul
call
ins
loop
jne
(bad)
fwait
xchg
test
lods
ja
xor
leave
stc
jge
(bad)
inc
mov
xor
addr16
adc
inc
int
lock
(bad)
(bad)
jmp
sub
inc
or
mov
mov
inc
test
popf
pop
dec
or
mov
cli
dec
xor
call
(bad)
std
xchg
pop
addr16
sub
sub
dec
inc
or
sub
jle
daa
in
push
icebp
call
retf
inc
jmp
mov
inc
or
aam
aas
(bad)
(bad)
jmp
pop
data16
xor
hlt
das
loope
and
lock
mov
sub
(bad)
sbb
lock
xlat
jae
addr16
mov
mov
hlt
add
fidiv
jg
xchg
dec
gs
push
icebp
push
(bad)
dec
xchg
push
aas
(bad)
int
lods
(bad)
dec
rcl
(bad)
push
mov
pop
mov
ja
inc
outs
mov
pop
cmp
(bad)
(bad)
out
xor
mov
dec
push
mov
(bad)
in
xor
jle
lods
test
movs
je
fild
pop
inc
daa
sbb
(bad)
out
pop
daa
and
out
cli
push
cwde
dec
dec
push
fs
push
sahf
pop
adc
pop
sub
ficomp
bound
jl
and
and
inc
sub
push
mov
jl
out
pop
(bad)
(bad)
dec
and
adc
scas
popa
pop
push
je
jp
(bad)
push
add
in
mov
clc
(bad)
(bad)
mov
es
jl
mov
and
ja
push
fsubr
and
clc
or
mov
adc
popa
(bad)
(bad)
(bad)
inc
hlt
sbb
fsubr
sub
jmp
int3
dec
mov
stc
pop
pop
sbb
(bad)
(bad)
call
cld
nop
xchg
sub
in
dec
push
jle
push
les
sub
mov
or
(bad)
(bad)
jmp
in
mov
das
scas
icebp
imul
push
ss
sbb
inc
fisubr
push
jl
mov
mov
ret
fdiv
or
jae
movs
(bad)
push
cs
dec
mov
(bad)
in
(bad)
sahf
sbb
mov
dec
fwait
loope
(bad)
(bad)
(bad)
inc
mov
stos
cdq
aas
push
xor
jb
sub
jp
lds
fisub
adc
(bad)
mov
(bad)
(bad)
and
lds
shl
gs
cmps
push
lock
xchg
push
jecxz
stos
push
mov
in
test
(bad)
(bad)
(bad)
push
ds
shl
push
xor
mov
xor
push
and
inc
ins
aas
call
ds
xor
inc
push
push
add
jecxz
ins
sbb
jnp
test
jno
(bad)
jmp
shl
sub
shr
dec
icebp
jns
cmp
pop
pop
(bad)
jg
dec
mov
push
xchg
and
cmp
ror
mov
(bad)
dec
mov
in
repnz
or
clc
bnd
push
inc
rcr
mov
and
lods
cmp
(bad)
fnstsw
enter
int3
adc
fist
and
jns
or
rcr
ret
loope
(bad)
loopne
(bad)
dec
das
xchg
inc
inc
das
push
cmp
retf
sbb
mov
add
imul
and
ret
loop
xlat
or
(bad)
repz
loopne
sbb
sahf
or
fwait
sub
test
and
push
leave
stos
je
call
cld
aaa
(bad)
jl
pop
jge
xchg
pop
jae
or
lods
xor
ja
xor
jg
(bad)
jmp
ja
mov
sbb
pop
mov
stc
(bad)
rcr
imul
sbb
mov
add
enter
(bad)
(bad)
push
and
dec
mov
jmp
jae
push
rcl
pop
call
inc
movs
push
push
pop
movs
cmovno
jbe
jmp
sub
jmp
or
pop
mov
adc
mov
push
(bad)
(bad)
(bad)
cmp
adc
sti
sbb
sbb
add
sar
retf
sahf
pop
nop
enter
(bad)
cmp
lea
mov
mov
fmul
jmp
mov
fcmovnu
icebp
cmp
pop
cdq
loop
(bad)
out
adc
call
(bad)
push
and
mov
lahf
push
retf
rcl
(bad)
add
repnz
js
pop
rol
dec
pop
and
push
jo
daa
cmp
add
dec
dec
(bad)
cli
inc
out
iret
ja
mov
mov
sbb
(bad)
(bad)
(bad)
(bad)
inc
jns
add
fwait
jns
(bad)
push
test
add
pusha
cmp
jnp
ja
jo
fisttp
sar
dec
add
push
add
adc
es
and
test
xor
push
out
lods
movs
xchg
or
rol
jecxz
dec
jecxz
dec
in
fild
shl
popa
daa
xor
ins
cld
push
std
jg
sub
adc
or
fild
xor
(bad)
and
ret
and
mov
mov
adc
sub
ds
imul
dec
(bad)
jg
(bad)
mov
les
xchg
push
xchg
dec
loope
mov
in
sbb
mov
(bad)
call
jle
adc
xchg
add
xor
outs
push
cmp
or
cmp
push
xchg
out
push
xchg
rcr
loop
add
in
icebp
and
mov
add
jmp
cmp
cwde
and
icebp
aad
nop
mov
dec
sar
xchg
jae
adc
(bad)
out
push
push
or
xlat
arpl
(bad)
icebp
pop
and
loope
repz
push
or
(bad)
dec
sbb
ss
cld
(bad)
(bad)
(bad)
fsub
enter
push
pop
repnz
inc
int
sbb
imul
sbb
test
pushf
lods
retf
mov
sub
xlat
out
(bad)
push
sbb
pushf
or
cmc
mov
inc
pop
(bad)
push
xchg
cmc
sbb
push
scas
cld
mov
(bad)
jmp
sbb
mov
jo
pop
jnp
lahf
sbb
(bad)
jmp
push
mov
pop
inc
xor
sbb
add
inc
mov
adc
leave
push
test
icebp
xchg
lock
jg
or
out
cmp
mov
out
mov
scas
fdiv
pop
jo
pop
fbstp
repnz
sub
das
fist
call
cwde
clc
xchg
repnz
sbb
bt
(bad)
(bad)
(bad)
call
ds
dec
cmp
cs
jnp
pop
mov
leave
fisttp
sbb
jmp
repz
dec
mov
jno
stc
hlt
(bad)
(bad)
(bad)
fnstcw
dec
mov
icebp
cwde
and
mov
(bad)
mov
fild
jb
outs
mov
cmp
adc
mov
(bad)
int
repz
sahf
scas
mov
jns
(bad)
(bad)
dec
push
out
in
repz
xchg
jmp
pop
cmp
pop
mov
(bad)
(bad)
(bad)
jmp
call
in
sbb
sbb
into
fcom
sbb
daa
retf
icebp
(bad)
call
cld
pop
push
imul
cdq
repz
xor
sahf
mov
add
mov
inc
inc
dec
aam
xchg
xchg
jae
(bad)
lds
cmp
(bad)
lock
(bad)
(bad)
jmp
out
mov
sub
sbb
bound
daa
ss
push
fst
adc
jmp
ins
mov
retf
ret
inc
ficom
test
repz
push
mov
(bad)
in
(bad)
dec
repz
mov
sbb
xchg
pusha
sbb
adc
jmp
dec
sbb
cmps
das
xchg
and
inc
rcr
mov
dec
repnz
xor
(bad)
jmp
fadd
sahf
loope
int3
hlt
retf
cmp
mov
(bad)
(bad)
(bad)
inc
retf
cs
push
add
lods
mov
push
cmp
mov
test
test
lods
push
and
hlt
jg
pop
lds
(bad)
(bad)
jg
push
pop
push
fdiv
std
(bad)
jne
repz
test
je
ror
(bad)
mov
dec
add
iret
inc
and
(bad)
push
sub
inc
cmp
xor
or
xchg
push
add
mov
ss
(bad)
(bad)
(bad)
(bad)
call
out
fidiv
lds
out
cmps
jmp
pushf
sbb
cli
cmc
jns
fdiv
test
(bad)
(bad)
(bad)
inc
mov
sub
xchg
inc
xchg
pop
mov
add
imul
icebp
pop
jnp
repnz
(bad)
(bad)
(bad)
jnp
lahf
mov
cwde
lods
sbb
rol
into
jg
sbb
js
xor
mov
add
cmps
xlat
pop
cmp
shl
imul
mov
cli
arpl
cld
jae
(bad)
(bad)
(bad)
jg
cmp
je
xchg
cmc
dec
ds
jmp
loop
fldcw
or
(bad)
(bad)
rcl
dec
movs
xchg
enter
ds
push
aaa
xor
or
cmp
call
popf
in
push
xor
or
push
(bad)
fidivr
mov
(bad)
(bad)
(bad)
(bad)
fcomp
adc
sub
test
test
xor
sbb
inc
xlat
adc
mov
sub
jne
arpl
gs
into
xlat
retf
jg
(bad)
mov
(bad)
sar
jge
push
imul
stos
adc
mov
mov
std
add
dec
sub
xor
sbb
xor
mov
mov
stos
aad
lods
jae
bswap
fidivr
jle
(bad)
(bad)
out
clc
fimul
dec
xchg
pop
push
test
xor
sub
daa
mov
(bad)
inc
enter
xchg
iret
nop
repnz
sub
movs
sub
pop
out
fsub
aaa
or
js
and
jae
jp
aas
jmp
repnz
push
add
xchg
pop
inc
xchg
repnz
sbb
mov
or
add
int
mov
(bad)
(bad)
inc
inc
jno
leave
ja
push
daa
mov
add
jne
cmp
sub
mov
repz
loopne
jg
test
pop
jo
jbe
inc
adc
movs
mov
cmp
push
xchg
add
sub
call
cwde
popa
adc
test
push
adc
add
out
in
mov
jp
adc
scas
pop
inc
mov
xchg
stc
mov
jmp
mov
jg
or
adc
xrelease
cmp
mov
sbb
jmp
cmp
retf
fsubr
(bad)
(bad)
jmp
xor
rcl
cmp
call
xchg
outs
mov
cmp
cmc
push
xchg
loop
icebp
mov
(bad)
fcomip
dec
xor
arpl
and
in
mov
xchg
stos
test
addr16
mov
ins
dec
outs
aad
cmc
mov
xchg
pop
or
ins
fwait
(bad)
call
cmp
lods
lahf
adc
stos
sub
jno
xchg
push
test
xor
(bad)
(bad)
inc
sbb
test
inc
std
leave
jl
pop
push
fistp
mov
mov
icebp
mov
inc
aad
js
push
aad
test
dec
ins
out
cld
(bad)
(bad)
jmp
cmp
pop
test
test
call
leave
ins
int
cs
add
(bad)
push
shl
jne
das
mov
or
test
aaa
data16
(bad)
(bad)
(bad)
cmp
push
into
push
xlat
sbb
sbb
jp
push
sub
inc
mov
mov
inc
(bad)
sti
shl
sub
aas
cmp
outs
jge
loopne
cmps
xor
adc
retf
or
sub
call
sub
int3
mov
lods
pop
xor
push
mov
mov
(bad)
(bad)
call
pop
sbb
dec
into
sub
adc
adc
outs
inc
sar
aam
xor
shr
shr
sub
fwait
loopne
out
es
test
cmp
xchg
pop
add
int
adc
ds
and
ins
clc
or
sbb
daa
sbb
xor
inc
mov
cli
enter
jmp
rcr
sub
pop
sbb
out
jmp
push
ss
dec
into
std
(bad)
dec
popa
dec
je
fld
xchg
inc
(bad)
xor
(bad)
cmc
std
cmp
add
cli
(bad)
call
vsqrtpd
test
cmp
pop
popf
ins
xor
pop
add
and
mov
or
repnz
sbb
mov
enter
(bad)
call
loop
cmps
and
in
push
adc
dec
call
stc
add
jle
jmp
cmps
fwait
pop
popf
outs
mov
mov
rcl
push
(bad)
cmp
shl
aam
fst
mov
repz
jmp
sbb
mov
pop
aaa
nop
cmp
jmp
adc
fs
mov
sub
pop
add
push
sbb
scas
nop
lods
inc
mov
sbb
das
in
loop
xchg
(bad)
(bad)
(bad)
(bad)
jmp
out
rol
push
jbe
jl
inc
aad
add
loope
mov
enter
pop
(bad)
jne
(bad)
(bad)
(bad)
jmp
lds
pop
cmp
add
adc
das
lock
call
jge
sbb
hlt
inc
std
fsubp
bsf
into
loop
sbb
outs
cdq
mov
call
jg
(bad)
push
jle
and
dec
jbe
clc
in
imul
(bad)
(bad)
(bad)
jmp
adc
cmp
in
pop
imul
inc
sub
pusha
xchg
xor
mov
cli
push
fst
stos
pop
pop
test
fild
add
ret
push
push
jb
mov
shl
inc
stos
push
mov
and
lods
cs
add
push
lahf
or
push
xchg
dec
js
mov
test
dec
(bad)
jmp
pop
jl
adc
sahf
popa
and
sbb
adc
gs
dec
mov
mov
ret
call
popf
mov
int
rcr
inc
dec
mov
sbb
push
mov
sub
(bad)
(bad)
call
lahf
push
sahf
inc
jns
pop
fwait
dec
jle
outs
aam
pop
dec
or
jnp
or
(bad)
(bad)
(bad)
inc
mov
aam
in
mov
xchg
and
mov
adc
sub
(bad)
jg
push
add
(bad)
in
xchg
push
movs
push
mov
cmp
(bad)
(bad)
(bad)
out
pusha
fucomi
cmp
push
mov
in
scas
add
sub
cwde
jbe
jne
imul
(bad)
jmp
scas
and
xlat
fisttp
inc
dec
arpl
jg
(bad)
(bad)
inc
and
push
add
pop
mov
(bad)
bound
jno
mov
(bad)
(bad)
call
ins
push
and
add
dec
xor
jl
imul
les
jmp
lods
and
or
add
add
out
inc
js
pop
mov
jecxz
jmp
(bad)
(bad)
jmp
sbb
push
and
dec
sub
push
push
pop
mov
xlat
xor
fsub
adc
jmp
xchg
sub
pop
ret
pop
addr16
dec
enter
xchg
cmp
lock
(bad)
(bad)
(bad)
cld
pop
or
mov
cs
mov
dec
sbb
neg
jbe
jp
add
aad
cs
mov
(bad)
(bad)
jg
popa
cwde
fsincos
mov
dec
out
test
mov
mov
xchg
(bad)
std
sub
jnp
(bad)
(bad)
(bad)
call
movs
retf
ins
sub
push
(bad)
mov
inc
mov
inc
pop
js
lahf
jns
xor
cld
push
or
data16
sar
mov
xor
into
dec
sub
fidiv
jecxz
iret
clc
imul
loop
dec
ds
aad
aam
call
fistp
dec
xchg
sbb
dec
loope
outs
scas
out
(bad)
mov
cs
enter
dec
lods
jl
inc
out
(bad)
mov
xor
jp
sub
(bad)
(bad)
push
mov
cld
mov
sub
mov
ss
loopne
add
rol
shl
(bad)
(bad)
(bad)
call
test
pop
mov
cmc
das
jo
pushf
cmp
or
sub
sbb
lods
mov
or
loopne
(bad)
(bad)
fdivr
push
js
std
ins
sar
inc
xor
or
jns
scas
mov
push
push
cmps
mov
(bad)
fstp
(bad)
(bad)
(bad)
call
ins
test
jbe
pop
shl
cmps
pop
lods
mov
(bad)
and
in
imul
aas
sub
dec
add
fstp
fsub
outs
cli
(bad)
call
pop
scas
pop
iret
xchg
fisttp
sub
add
out
adc
xor
pop
scas
xchg
mov
shr
(bad)
(bad)
(bad)
mov
mov
ja
inc
jae
cmc
mov
inc
in
stos
cmp
bound
rcr
(bad)
(bad)
(bad)
(bad)
jle
or
loope
or
shl
push
sbb
test
movs
stos
hlt
aas
jl
(bad)
(bad)
inc
jno
push
adc
xchg
cmc
nop
mov
and
xor
call
pushf
(bad)
shl
lods
test
and
mov
ds
pop
std
pop
outs
cmp
out
mov
push
cs
add
lea
icebp
lea
push
jns
push
mov
mov
and
sub
(bad)
xor
mov
push
push
movs
xor
push
mov
push
xor
jle
out
pusha
inc
dec
mov
xchg
mov
dec
pop
mov
(bad)
(bad)
out
(bad)
xchg
xchg
inc
push
add
je
mov
pusha
lock
jle
(bad)
push
push
xor
cmp
leave
or
or
inc
mov
mov
cli
mov
and
dec
fist
sti
sti
push
data16
loop
(bad)
jmp
adc
inc
rcl
jg
or
lea
in
(bad)
lods
cmp
pop
push
mov
add
dec
cmp
push
xor
dec
pop
cmc
(bad)
mov
inc
popf
jg
cwde
jecxz
(bad)
int3
inc
lea
sbb
ficom
cmps
(bad)
(bad)
ficom
stos
lahf
lea
fucomi
jns
xchg
(bad)
repnz
mov
xchg
mov
fdivr
mov
(bad)
mov
cli
test
mov
sahf
sub
repz
inc
xchg
jbe
or
iret
mov
inc
in
cmp
popf
push
in
xor
(bad)
push
bnd
fwait
cmp
cmp
pop
xchg
(bad)
hlt
mov
or
jge
sti
jg
jmp
xchg
mov
pushf
and
mov
lods
(bad)
(bad)
(bad)
(bad)
call
dec
paddq
xchg
rcl
leave
jle
stc
aas
xchg
ja
jns
mov
inc
push
mov
pop
aaa
outs
adc
and
(bad)
xor
mov
mov
pop
int
call
(bad)
aam
sti
lods
bound
inc
sub
push
stos
out
pop
ss
loop
or
mov
add
mov
cmp
xchg
or
movs
aad
std
push
mov
xchg
mov
sahf
push
test
jno
dec
and
fcom
xor
jae
xor
sub
test
(bad)
jmp
sar
jbe
in
push
adc
and
call
call
mov
test
std
xor
(bad)
cmps
dec
jmp
or
mov
push
(bad)
(bad)
out
and
or
or
push
mov
adc
xchg
cmc
cmp
cld
mov
mov
and
(bad)
(bad)
jmp
jne
data16
sub
adc
aas
bound
xor
push
aaa
fsubr
inc
sbb
(bad)
(bad)
push
pop
shr
retf
or
ja
mov
add
xor
(bad)
mov
dec
mov
mov
xor
sbb
mov
mov
push
clc
js
fsubr
into
or
push
xchg
dec
out
or
jmp
xchg
ret
fs
in
fisub
dec
jg
ret
jb
scas
mov
and
in
in
fidiv
aad
repz
nop
or
(bad)
push
rcr
cmc
jecxz
xchg
mov
mov
retf
out
sub
push
(bad)
jmp
dec
dec
test
rcr
js
loop
std
retf
mov
fistp
push
(bad)
ss
retf
into
xor
fistp
ret
pop
in
sub
cli
(bad)
call
(bad)
mov
cs
and
ins
pop
mov
mov
xchg
(bad)
mov
cmp
sub
(bad)
(bad)
(bad)
jmp
adc
in
inc
aam
push
ds
dec
ror
mov
retf
sub
xchg
pop
pop
in
imul
inc
pop
stc
mov
mov
push
inc
mov
cmp
and
add
das
and
std
test
(bad)
pop
xor
jmp
lock
rcr
iret
test
(bad)
call
(bad)
aas
or
lds
popa
or
mov
adc
(bad)
call
inc
cmp
out
out
sub
dec
inc
mov
dec
aaa
pushf
jl
mov
sbb
sbb
ret
aam
rep
mov
or
test
jmp
and
je
pusha
ror
jmp
leave
stos
add
repz
jmp
mov
(bad)
(bad)
mov
div
inc
cmp
push
mov
ret
iret
std
fmul
(bad)
xchg
daa
dec
enter
xor
xor
jle
inc
cs
(bad)
(bad)
(bad)
mov
mov
mov
test
lods
push
pop
sub
shl
mov
sti
xchg
outs
dec
por
ss
mov
add
inc
sbb
jmp
loopne
test
sub
adc
sbb
mov
pop
rol
aam
outs
das
push
push
push
sbb
xchg
and
inc
pop
dec
jnp
cmps
cmp
push
push
push
dec
fldcw
push
(bad)
rcr
pop
add
or
data16
lock
add
(bad)
and
cs
ds
dec
sar
ret
inc
push
dec
mov
xor
inc
sub
test
stos
add
mov
pop
cmp
add
cwde
push
xchg
jge
loopne
push
sbb
fs
xchg
aad
stos
push
add
jmp
test
jmp
es
pop
test
push
push
js
xor
or
add
pop
add
sti
clc
data16
mov
call
pop
and
push
mov
iret
cmp
mov
inc
inc
pop
pop
xchg
pop
pop
add
add
add
lock
and
inc
mov
pop
jne
xor
in
dec
loope
jle
pop
clc
jg
test
add
or
lea
add
sub
shl
inc
or
sbb
sbb
pop
daa
aaa
inc
push
mov
sbb
addr16
fld
and
add
inc
ja
cmp
cmp
pop
daa
aaa
inc
or
push
or
jbe
bound
pop
pop
(bad)
jg
or
add
addr16
adc
pop
add
iret
mov
xchg
add
or
pop
pop
daa
inc
sbb
inc
inc
addr16
sbb
sbb
paddusb
or
add
pop
pop
adc
std
daa
cld
cmova
addr16
cmc
and
ja
pop
out
jnp
inc
add
and
frstor
pop
inc
xchg
daa
adc
add
push
xor
cmp
mov
(bad)
popa
fucomi
in
inc
cmp
and
inc
push
pop
mov
clc
addr16
jg
or
adc
dec
jge
inc
lock
fidivr
loopne
adc
and
inc
test
cmp
cmp
push
or
and
cld
rcl
ret
sti
add
test
jnp
mov
push
and
sahf
out
mov
push
cld
clc
lock
scas
(bad)
rol
addr16
imul
(bad)
jnp
pop
push
and
and
and
fisub
and
(bad)
clc
add
and
addr16
iret
push
mov
shl
out
push
pop
pop
shl
mov
rol
or
arpl
cld
pop
adc
sbb
mov
add
and
or
adc
sbb
addr16
sbb
lahf
clc
mov
inc
ffreep
cmp
jecxz
cmp
fwait
pop
out
adc
or
mov
clc
loopne
ficomp
inc
adc
and
adc
ins
xor
mov
dec
jle
push
pusha
dec
add
scas
and
add
iret
call
pop
nop
jg
add
push
push
push
add
jle
push
lahf
xchg
cs
push
push
and
add
or
shl
aaa
loop
or
stos
dec
mov
adc
adc
or
cld
pushf
jae
pop
daa
aaa
inc
push
xor
pop
xchg
addr16
repz
mov
mov
add
movs
push
jg
jne
mov
aas
clc
push
jo
lock
loopne
pushf
jae
cli
pop
pop
pop
daa
aaa
inc
push
mov
or
addr16
scas
stos
les
pop
(bad)
call
and
or
push
or
sub
or
add
mov
xchg
addr16
adc
push
sbb
mov
or
inc
inc
and
pop
sub
cmp
pop
daa
aaa
inc
mov
aas
cld
addr16
int
mov
sahf
cmp
jg
into
ds
into
mov
sbb
pop
daa
aaa
or
push
jmp
inc
and
inc
aad
add
gs
movs
stos
test
push
es
pop
pop
daa
out
div
addr16
add
inc
ja
push
push
test
xchg
jno
inc
xchg
stos
std
inc
push
into
es
in
pop
pop
pop
daa
mov
or
sub
scas
push
adc
sbb
fild
add
inc
jle
call
pop
ud0
sbb
(bad)
sub
outs
fsubr
xor
pop
addr16
pop
call
pop
(bad)
mov
sub
jmp
mov
lock
es
lock
jb
mov
mov
pop
inc
mov
xchg
push
dec
lods
jb
js
lock
xchg
adc
or
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
push
push
and
xchg
or
push
and
sbb
add
dec
stos
add
xor
mov
daa
sub
ror
dec
ret
push
and
xor
add
ja
nop
ficom
jb
add
add
adc
jnp
sub
popa
add
push
sub
mov
pop
add
add
inc
xchg
or
jp
sti
inc
or
add
mov
add
jo
cld
inc
xor
mov
xchg
movs
ror
add
mov
xor
cmp
xor
push
mov
sub
pop
push
xchg
sbb
inc
add
push
sub
adc
add
xor
outs
idiv
inc
ss
add
jp
xor
jge
aad
add
and
hlt
push
lock
pop
push
add
add
or
imul
cwde
ss
xchg
xor
aas
add
sub
and
mov
in
fimul
nop
aas
xor
mov
add
or
dec
ins
adc
(bad)
mov
pop
add
aas
add
inc
imul
mov
mov
add
push
inc
jmp
ret
add
add
pop
mov
mov
add
jp
scas
stos
es
das
js
xchg
mov
fs
and
jne
cmps
jns
cmps
sub
imul
(bad)
gs
mov
or
ror
inc
loope
add
test
mov
add
sahf
inc
enter
add
add
inc
out
push
jle
lods
adc
cli
sldt
push
jmp
repz
push
nop
lods
or
je
mov
pop
and
inc
push
ret
cmps
sbb
fadd
push
inc
xor
mov
rcl
add
outs
and
push
adc
mov
fbld
dec
inc
inc
outs
and
or
aaa
or
sub
or
adc
xlat
and
and
jnp
es
imul
jb
dec
mul
add
ret
ret
and
add
pop
cmps
dec
jge
cmp
add
outs
fild
or
push
sub
sbb
add
adc
jecxz
or
jb
cmp
or
push
or
cdq
jnp
mov
push
inc
adc
or
mov
popa
imul
arpl
arpl
aam
cmps
adc
add
jae
rol
add
mov
or
adc
sub
push
fdivr
push
sbb
xchg
add
iret
jg
outs
mov
sbb
inc
inc
and
(bad)
sub
pop
aaa
out
push
or
je
out
add
push
imul
add
and
sbb
enter
xlat
add
sbb
push
add
jo
pop
or
inc
and
js
arpl
and
cdq
retf
fwait
fwait
pop
rol
push
push
add
add
mov
xchg
gs
adc
jg
or
mov
rcr
sub
add
dec
add
lldt
test
add
enter
rol
mov
bound
jmp
ret
inc
addr16
add
mov
xor
(bad)
sub
and
aaa
mov
or
mov
adc
aaa
add
sub
mov
or
adc
data16
pusha
test
mov
test
retf
sbb
cmp
pop
add
xchg
ins
inc
jae
add
jg
xlat
ins
in
adc
scas
xchg
or
mov
pop
rcl
(bad)
sbb
mov
and
loopne
retf
add
test
das
and
mov
rcl
adc
inc
and
test
ins
cli
cmps
gs
cdq
push
jo
xor
cmp
sbb
xchg
repz
inc
rol
add
push
pop
or
aaa
ja
pop
mov
and
adc
adc
and
push
sub
xor
xor
dec
jmp
iret
imul
sbb
push
stos
mov
(bad)
push
addr16
adc
or
inc
inc
mov
aaa
mov
pop
jb
dec
sbb
sbb
shl
pop
add
add
bound
cmp
dec
push
mov
jmp
add
ror
push
es
xlat
sub
add
ror
popa
sub
add
mov
pop
nop
lods
jo
repz
mov
mov
adc
push
test
sub
jle
movs
adc
cli
jne
out
jmp
dec
inc
adc
add
fs
fild
fist
jae
gs
lea
jnp
das
inc
xlat
xor
cwde
sbb
inc
adc
mov
test
ins
or
xor
xor
cwde
jne
push
imul
push
or
sub
xor
aas
(bad)
jge
xor
cmp
or
cmc
lea
dec
popa
push
adc
inc
add
mov
and
dec
bndstx
pop
adc
outs
xor
xchg
outs
xor
fild
je
sbb
jne
mov
and
arpl
daa
adc
inc
fsub
rcr
adc
cdq
cmps
push
in
push
dec
push
and
test
(bad)
xchg
sub
dec
mov
xor
mov
sub
mov
or
sub
mov
push
loopne
pop
pop
adc
mov
or
cmovb
scas
inc
div
xchg
add
outs
add
sbb
fisttp
xor
push
nop
sbb
in
(bad)
sbb
inc
shr
ror
sbb
add
adc
xor
fcmovnb
and
xchg
xor
ret
or
xchg
inc
jmp
mov
sbb
inc
iret
or
adc
dec
mov
xchg
in
lods
sbb
arpl
jecxz
push
test
iret
imul
inc
add
jmp
imul
inc
mov
inc
mov
scas
sub
add
sub
adc
dec
ss
out
xor
xor
pop
pop
test
daa
jbe
add
inc
ins
aaa
iret
sub
or
sahf
mov
push
movs
xchg
out
and
adc
add
imul
push
ret
or
scas
mov
inc
add
cmps
stos
add
fwait
adc
and
or
push
(bad)
lds
test
jae
push
mov
fild
aaa
popa
add
xchg
and
add
mov
pop
test
add
scas
or
add
push
test
or
js
add
xchg
pop
popa
pop
mov
inc
inc
and
pop
dec
xchg
fs
or
add
inc
repz
mov
adc
and
mov
cmp
mov
xor
or
daa
add
and
and
or
push
jb
or
push
jb
push
or
(bad)
test
adc
call
pop
dec
push
sbb
(bad)
fld
pop
add
sbb
xchg
dec
sbb
add
(bad)
and
adc
dec
xchg
adc
sub
add
inc
rol
add
je
rcr
push
xor
add
add
adc
and
push
or
imul
fs
pop
adc
and
mov
mov
cmp
add
ins
push
outs
into
lods
fld
or
scas
xor
add
xor
mov
push
in
jnp
mov
out
je
aam
mov
scas
dec
xchg
push
or
call
push
je
fcom
xor
test
outs
adc
sbb
inc
adc
loop
dec
jmp
dec
jnp
add
xchg
cmp
popa
je
shl
out
pusha
and
ret
fs
xor
jae
fistp
jnp
or
faddp
imul
into
inc
push
pusha
ins
imul
sbb
sbb
jno
push
push
add
dec
pop
in
les
jae
das
pop
sub
adc
jo
sbb
jne
push
loope
add
inc
nop
and
inc
mov
cdq
push
into
cdq
mov
push
or
out
add
dec
adc
sbb
sub
fild
xor
in
add
inc
push
sbb
mov
xor
and
push
and
leave
push
nop
cmp
sub
mov
dec
and
jp
pop
pop
outs
outs
gs
ficom
jno
dec
std
pushf
and
or
and
inc
sub
stos
call
jae
ins
or
test
dec
inc
pop
jno
or
inc
ja
cwde
mov
mov
inc
push
add
js
cmp
movs
and
mov
js
xchg
hlt
add
outs
imul
in
xor
inc
xor
pop
pop
xchg
leave
mov
(bad)
ror
inc
inc
jae
imul
and
rcr
add
outs
adc
stos
sbb
in
movs
mov
sub
add
imul
add
and
jmp
lods
inc
inc
sub
inc
add
and
pop
hlt
retf
push
mov
and
popa
jb
and
arpl
and
por
sar
cmp
push
pop
xor
jo
add
mul
adc
bnd
pop
dec
icebp
dec
dec
fwait
jge
pop
add
xor
adc
dec
push
setle
add
cli
dec
aas
gs
fiadd
or
push
fwait
add
test
jb
retf
icebp
sbb
add
push
and
imul
pusha
or
hlt
sbb
jb
add
aad
pop
or
cmps
inc
inc
js
adc
scas
pop
mov
inc
fs
dec
xor
xchg
arpl
mov
aaa
inc
xchg
add
adc
push
popa
cmp
add
nop
add
scas
outs
stos
or
push
lds
jne
xchg
push
push
adc
mov
xor
loopne
pop
sbb
gs
mov
pusha
or
pop
jno
pop
xor
rcl
mov
leave
jno
push
dec
push
inc
adc
pusha
cmp
sbb
or
push
add
aad
push
mov
add
retf
jmp
jmp
test
lods
xor
sbb
adc
gs
xor
ins
gs
dec
sbb
mov
pop
mov
enter
leave
test
mov
pop
(bad)
ror
mov
jo
fld
add
nop
sbb
leave
adc
aad
push
mov
jb
sub
add
cdq
or
mov
xchg
sbb
(bad)
lock
mov
adc
xchg
add
xor
jl
push
mov
adc
push
test
popa
and
mov
xchg
push
cmp
xchg
shl
jae
test
or
push
mov
jae
dec
adc
sbb
xchg
add
movs
test
adc
inc
or
or
mov
sub
jne
xchg
sbb
pop
inc
pop
das
(bad)
aad
and
or
add
push
popf
ror
or
dec
(bad)
gs
add
sub
xor
adc
sub
adc
add
das
test
cmps
dec
jmp
xor
fcmovb
sub
pop
and
push
jno
dec
jae
pop
(bad)
or
cbw
jo
fdivr
mov
dec
inc
push
ret
jp
stos
push
addr16
and
push
add
fmul
ret
add
sbb
adc
dec
std
mov
push
xchg
cmp
add
dec
pop
adc
add
push
add
sub
jns
xor
cmp
(bad)
jb
push
outs
mov
or
test
div
jmp
add
fwait
push
xlat
push
mov
das
push
mov
jne
aas
dec
sub
fcom
sbb
and
inc
jne
gs
adc
jnp
sbb
popa
sub
pop
rcl
xchg
je
add
fist
dec
push
das
sub
mov
stos
test
xor
aaa
in
add
push
inc
mov
fidivr
mov
aas
outs
lahf
shl
cmp
sub
data16
xor
xchg
lods
jmp
arpl
adc
mov
push
outs
adc
loopne
outs
sub
inc
xchg
std
inc
adc
outs
imul
dec
(bad)
push
outs
das
mov
les
push
inc
outs
inc
ins
outs
jb
dec
cmp
nop
and
or
rol
outs
xor
sahf
cmp
shl
arpl
inc
add
jmp
push
xor
cmp
xlat
cmps
and
push
xor
push
and
push
popa
jbe
sbb
mov
dec
push
or
push
dec
jb
inc
dec
jo
sbb
data16
push
scas
push
pop
add
sub
adc
and
jno
sub
jo
outs
das
ins
ss
ins
add
hlt
cmp
outs
cld
and
sub
add
loopne
and
fcmovu
aaa
or
outs
fidiv
or
aaa
and
xchg
les
xor
dec
(bad)
and
retf
dec
outs
dec
stos
push
sub
shr
xor
cmp
jge
mov
aaa
xchg
sub
test
dec
xor
test
and
mov
mov
pop
adc
mov
push
add
sbb
add
push
sbb
or
dec
cmp
xchg
xor
push
push
jns
and
stc
fcomp
sbb
in
and
xor
jle
jne
fs
inc
js
loop
add
or
or
mov
cmp
js
lds
popa
and
dec
int3
daa
jb
es
dec
sbb
ret
jbe
and
cmp
jo
call
imul
or
aam
and
mov
pop
dec
rcr
or
push
add
xor
xor
jno
pusha
pusha
adc
mov
repz
aam
clc
push
outs
jo
mov
add
mov
xchg
fs
add
or
fs
dec
sub
or
lea
bound
cmp
ds
aad
arpl
or
shl
mov
pop
jle
xchg
sub
xor
inc
sub
lods
pop
jecxz
sbb
loopne
xchg
push
mov
push
shl
gs
out
cli
mov
adc
in
mov
cmp
push
pop
ins
mov
jo
push
dec
jecxz
cmp
mov
or
mov
mov
jl
dec
add
sahf
add
in
ins
adc
pop
clc
jns
fsubr
pop
cmp
fild
ins
push
and
mov
and
dec
mov
repnz
push
pop
add
jb
xchg
sbb
popa
xor
and
int3
sahf
hlt
and
test
and
div
mov
adc
(bad)
popa
or
or
jae
xor
ins
and
imul
mov
and
into
dec
sub
sbb
mov
add
js
push
cmp
or
xor
ja
daa
dec
pusha
cmp
sbb
ret
push
outs
gs
sbb
lea
dec
int3
cmp
cmp
jecxz
hlt
xor
pop
push
outs
jae
inc
inc
sbb
sub
and
loope
gs
sub
call
xchg
sub
pop
mov
jecxz
jne
dec
or
fs
cmp
jnp
dec
imul
mov
pop
pop
add
xor
fwait
push
imul
push
stos
sbb
ins
into
and
test
leave
and
shr
pop
and
pusha
mov
or
pop
shr
dec
outs
jbe
lahf
mov
cmovno
imul
loope
mov
mov
inc
xchg
clc
jae
inc
loopne
mov
ins
sub
sbb
fcmovnb
jmp
popa
ds
jne
daa
imul
enter
inc
add
outs
add
imul
pop
test
add
jo
or
hlt
pop
jae
pop
or
(bad)
push
push
push
repz
jae
and
scas
jo
and
push
enter
cmp
ins
xor
cdq
inc
pop
and
mov
data16
and
fwait
add
cld
adc
push
sub
jae
push
jg
(bad)
or
imul
inc
gs
adc
mov
xor
or
jo
jb
test
push
dec
xchg
pushf
push
arpl
push
mov
dec
mov
sub
lods
push
mov
or
ja
sub
into
or
xchg
add
mov
sub
test
sub
jae
adc
inc
icebp
sti
dec
cmp
inc
dec
push
cmp
sbb
pop
sub
push
ret
adc
pop
ins
sub
jo
lods
pop
push
js
mov
dec
add
bound
inc
or
imul
shl
pop
jae
inc
inc
and
pop
inc
gs
sub
sub
outs
sbb
sub
dec
popa
pop
mov
add
mov
sbb
add
sub
xchg
mov
or
les
rcl
adc
into
sub
add
lea
dec
jne
sub
dec
int
add
adc
shl
mov
pop
adc
xor
mov
jle
sbb
arpl
sbb
ja
arpl
push
pop
and
mov
dec
pop
mov
adc
push
gs
push
mov
imul
or
or
enter
popa
jns
cs
mov
xchg
pusha
adc
(bad)
sbb
cwde
das
push
cdq
imul
dec
icebp
pop
les
outs
test
(bad)
js
dec
jno
popa
ins
ja
add
push
inc
pop
cmp
pop
js
ins
xchg
js
add
ins
mov
dec
js
movs
jmp
imul
xchg
mov
xor
xlat
adc
sub
mov
inc
les
add
jae
sub
jg
dec
leave
xor
enter
fst
xchg
dec
test
(bad)
and
(bad)
and
mov
popa
jge
add
mov
and
push
(bad)
(bad)
add
ret
inc
and
ret
cmp
sub
ins
add
arpl
jae
outs
pop
lods
push
jae
pop
cmps
ins
jo
enter
inc
mov
push
jb
std
inc
xchg
in
sbb
sbb
dec
mov
mov
inc
das
inc
add
add
adc
or
mov
cwde
jne
mov
adc
or
add
lea
mov
xlat
or
adc
or
dec
ins
cmp
dec
add
push
adc
pusha
jg
add
ins
adc
push
in
inc
dec
in
pop
pop
cs
jecxz
fbld
cmp
das
ret
adc
out
loopne
xor
mov
jb
and
push
jmp
(bad)
adc
add
inc
fistp
popa
jne
mov
pusha
pop
mov
std
dec
xchg
pop
dec
rcr
add
xlat
out
or
jl
outs
push
jle
xor
sbb
xchg
and
add
test
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
jo
push
add
scas
push
add
