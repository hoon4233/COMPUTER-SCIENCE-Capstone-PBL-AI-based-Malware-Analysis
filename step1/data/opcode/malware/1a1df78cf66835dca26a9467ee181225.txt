jnp
(bad)
add
sub
inc
add
pop
dec
or
fmul
sbb
push
dec
push
xchg
lahf
fucomp
mov
or
add
jp
lahf
xchg
lahf
lahf
jl
mov
mov
xchg
xchg
loopne
call
add
mov
cmp
add
add
push
aam
mov
movs
or
aam
std
fdiv
adc
or
lea
pop
call
mov
lea
cmp
inc
or
inc
push
pop
pop
stc
jl
inc
dec
rcr
das
mov
mov
pop
pop
dec
pushf
lods
pop
sbb
add
outs
mov
jge
lods
or
push
or
jle
out
push
inc
pusha
test
retf
adc
cmp
fdivr
push
ja
inc
pop
in
jbe
pop
mov
dec
dec
and
mov
ror
outs
xlat
fst
cmp
pop
clc
dec
inc
das
fist
jge
adc
inc
inc
mov
or
mov
imul
mov
sub
mov
imul
fcomp
and
imul
and
jbe
aas
imul
int3
mov
pop
fist
aas
and
pusha
mov
fadd
rcr
mov
add
pop
jo
mov
jl
pop
mov
mov
pop
pop
mov
add
or
dec
mov
mov
or
lock
xchg
inc
cmp
je
mov
test
cld
mov
sub
loope
pop
imul
jp
ja
pop
fst
imul
cmps
sbb
cwde
sub
dec
mov
and
retf
add
lock
pop
jl
test
sub
sti
out
cmp
sbb
int3
cs
ds
imul
pop
das
das
enter
loopne
adc
std
mov
fsubr
push
inc
shlx
pusha
and
dec
or
inc
sub
repnz
and
test
cs
pop
out
(bad)
(bad)
imul
sub
add
adc
cmp
sub
mov
dec
dec
nop
jmp
mov
shl
mov
out
jnp
xchg
jb
jp
mov
or
push
adc
or
adc
push
xor
push
pop
push
xchg
pop
jmp
xor
in
imul
shl
ret
pusha
mov
mov
push
mov
je
cmp
(bad)
outs
div
loop
dec
add
aaa
push
push
test
sar
add
shl
push
push
push
test
adc
push
stc
lock
xor
cld
ja
loope
sub
rcr
loope
cmp
jbe
ret
adc
ret
in
out
(bad)
aas
pop
mov
mov
ret
nop
mov
cld
pop
pop
sti
std
ds
mov
lods
or
(bad)
push
(bad)
jns
(bad)
mov
inc
nop
push
mov
mov
mov
cmp
adc
add
imul
int
or
jmp
mov
adc
fidiv
sub
mov
or
mov
mov
cmp
add
mov
jno
push
mov
popf
daa
jno
gs
enter
inc
adc
pop
in
fidiv
sbb
jecxz
pop
cmp
mov
add
adc
ror
(bad)
and
lock
jne
fistp
pop
pop
ret
xchg
adc
xor
push
mov
inc
pop
pop
sbb
push
jge
ret
jmp
mov
add
mov
mov
aam
hlt
push
in
scas
pop
cmp
in
(bad)
mov
inc
inc
mov
and
push
and
idiv
add
clc
and
aas
add
inc
jbe
test
add
mov
dec
lock
or
or
cmp
jl
adc
sahf
fsubr
ins
call
mov
sbb
sub
fstp
cld
or
adc
movsx
gs
push
jl
add
ret
sbb
cmp
arpl
je
outs
outs
and
das
add
xor
fsubr
push
dec
add
add
(bad)
mov
dec
dec
dec
call
ins
cmp
inc
outs
jae
push
je
scas
fistp
in
imul
add
mov
aas
add
enter
sbb
adc
jae
sub
aaa
ins
ins
sbb
add
add
sar
sub
fcom
inc
sbb
cld
mov
xchg
lds
or
lahf
test
jl
sti
shl
enter
dec
jecxz
div
rol
es
idiv
(bad)
mov
mov
dec
fcom
addr16
sub
adc
add
mov
loope
shl
add
pop
inc
dec
dec
call
push
dec
bound
arpl
nop
(bad)
lahf
loopne
jmp
xchg
fdivr
cdq
sub
mov
shl
xor
nop
outs
fs
and
sbb
xor
scas
sub
sub
xor
arpl
push
mov
cmp
add
call
jne
and
jl
fidivr
cld
inc
fmul
jle
inc
or
push
lock
lea
mov
enter
dec
sbb
enter
loopne
inc
aam
mov
add
adc
cmp
imul
and
push
and
cmps
dec
ja
jnp
lea
mov
push
and
mov
push
(bad)
sub
xchg
dec
jnp
xor
test
arpl
movsx
mov
mov
cwde
out
test
dec
div
ret
xchg
pushf
mov
add
movs
pop
and
fstp
mov
add
test
xor
jl
in
push
push
push
add
sub
cdq
test
xchg
inc
mov
jmp
mov
xchg
popa
mov
hlt
mov
stos
clc
push
add
cmp
push
and
mov
or
push
cld
push
and
ret
xchg
adc
rcl
lea
test
jle
xchg
in
and
fs
rol
lock
fimul
ret
jae
(bad)
stc
ret
shl
mov
ret
lds
ror
lods
test
or
ds
loopne
pop
jnp
jne
scas
std
xor
aaa
mov
mov
sbb
loopne
add
push
cmps
cmp
push
xor
(bad)
in
sbb
add
adc
mov
and
leave
mov
pushf
push
pushf
inc
adc
call
push
pushf
push
sub
xchg
sub
xchg
jo
fisttp
sbb
add
lock
jae
and
mov
add
mov
add
mov
outs
mov
pop
push
dec
jge
and
sbb
stos
das
ins
sbb
mov
sbb
test
and
jecxz
sbb
xchg
lock
inc
sub
ss
sub
adc
push
push
xchg
xor
mov
jmp
adc
out
push
adc
push
pop
adc
xchg
loope
adc
mov
mov
add
aam
mov
call
sahf
mov
dec
pop
clc
pop
push
push
(bad)
fisttp
sbb
(bad)
adc
push
xor
add
mov
fsubr
in
jbe
adc
push
(bad)
or
outs
mov
mov
xor
mov
les
mov
pop
sbb
jo
mov
ret
sbb
out
add
cmp
cmp
lods
add
fcomp
push
push
int
inc
(bad)
notrack
or
inc
inc
cmp
push
and
jnp
push
mov
add
mov
mov
push
or
jb
enter
mov
ret
call
mov
push
lock
in
cmp
je
lods
in
mov
pop
sbb
aam
cmp
les
mov
jne
fidiv
sub
mov
push
in
mov
jbe
mov
push
call
inc
sbb
adc
sub
or
jae
mov
add
out
mov
(bad)
sbb
push
mov
js
loopne
es
add
xor
mov
add
pop
adc
xlat
outs
or
hlt
loope
or
repnz
mov
stc
je
push
dec
cmp
push
ja
mov
adc
add
xor
fs
or
scas
sbb
scas
hlt
je
adc
push
jo
jo
mov
xor
mov
mov
cld
pop
mov
pushf
dec
ret
add
ja
gs
aaa
or
xor
adc
push
xor
pop
inc
dec
fild
pop
ins
sub
imul
in
or
add
jl
mov
inc
push
xchg
or
ss
push
xchg
inc
loopne
nop
or
or
out
je
push
movs
adc
loopne
cmp
mov
sbb
xor
cmp
aaa
push
jl
clc
add
or
sbb
dec
sbb
or
pop
loope
dec
(bad)
fwait
xor
ds
push
push
xor
lods
in
mov
ins
ret
(bad)
add
shl
xchg
inc
or
push
push
sub
inc
xor
xor
fwait
loop
jo
rcr
xor
shl
push
add
jae
int
mov
repz
mov
test
sub
pusha
stc
loope
pop
inc
ds
push
xor
or
adc
out
inc
xor
adc
js
xor
xor
xor
(bad)
neg
dec
push
xchg
das
test
and
and
dec
idiv
call
push
sbb
test
outs
(bad)
mov
add
shl
jmp
adc
scas
(bad)
or
mov
xor
jl
and
out
sub
push
mov
pop
pop
mov
daa
sbb
hlt
rcl
dec
das
out
in
dec
jle
rol
mov
add
and
(bad)
test
mov
mov
(bad)
cdq
push
rcl
xchg
adc
pusha
mov
push
rol
ins
cdq
mov
ret
ret
lds
push
lods
imul
data16
fisttp
sti
xchg
loopne
cs
pop
pop
(bad)
push
pop
lock
mov
push
(bad)
jo
enter
inc
add
push
je
das
sub
lea
lahf
iret
add
pop
gs
mov
jb
push
jg
daa
cmp
inc
push
cmp
xchg
push
mov
add
out
sbb
pop
adc
add
and
in
dec
xor
xchg
mov
mov
or
in
inc
push
push
jns
adc
imul
cmp
xchg
rol
addr16
adc
mov
rol
dec
ror
mov
push
mov
clc
mov
test
mov
imul
push
or
push
adc
lahf
sbb
add
mov
nop
clc
mov
mov
mov
mov
push
sbb
sub
lahf
sbb
jecxz
movs
mov
fild
scas
dec
jg
outs
sbb
dec
add
lods
imul
ret
mov
movs
test
in
jbe
xchg
daa
pop
dec
int3
mov
jmp
int
pop
stos
mov
(bad)
stos
jo
mov
test
pop
(bad)
push
sub
sti
shr
dec
lea
jmp
sub
mov
in
popf
rol
cmp
and
stos
movs
inc
cmp
je
adc
dec
das
dec
push
push
mov
sub
mov
pop
mov
dec
je
inc
test
out
into
or
inc
hlt
lfs
sub
jne
out
pop
test
cwde
movs
add
add
or
mov
enter
jg
iret
inc
pop
inc
add
jb
xor
(bad)
mov
mov
cs
push
dec
gs
cmp
gs
fcomp
popa
ins
inc
pop
xor
inc
sub
push
inc
inc
dec
cli
pop
inc
imul
addr16
not
fdivr
vpunpckhbw
or
mov
cmp
aam
add
outs
mov
pop
adc
or
or
mov
les
mov
test
add
stos
punpcklbw
inc
adc
test
(bad)
inc
cwde
sbb
push
push
dec
imul
shl
pushf
stos
mov
mov
cs
cld
mov
movs
and
add
lea
and
add
mov
scas
push
jge
in
stos
aam
fdiv
jmp
dec
push
jno
push
inc
push
mov
test
jle
ins
dec
xor
xor
dec
fild
and
push
call
jne
imul
xor
pop
adc
fidivr
rcl
pop
(bad)
mov
ror
jne
clc
add
inc
fsub
push
fisttp
or
dec
int3
mov
dec
pusha
mov
test
movs
loopne
test
push
sbb
or
icebp
and
mov
push
push
mov
push
xor
mov
lea
push
push
sub
retf
fucompp
movs
push
adc
adc
outs
sbb
fimul
je
add
cmp
push
jo
push
or
add
mov
sub
mov
fild
xor
dec
push
test
cmps
inc
mov
inc
mov
xlat
mov
cmp
jne
test
je
mov
cmp
aam
inc
jne
add
add
and
pop
adc
inc
mov
scas
mov
jb
inc
push
test
cmp
jne
push
sub
pop
push
popa
pop
loopne
mov
pop
ja
adc
push
(bad)
fldpi
ds
cmp
repnz
pop
ss
movs
jg
movs
push
shl
push
bound
sbb
pop
mov
xor
lods
xor
lods
mov
mov
cmp
fist
sar
xor
jnp
sub
push
xor
enter
xchg
dec
dec
rcr
stos
mov
cwde
add
sar
inc
xor
add
not
pop
hlt
cmp
inc
nop
fs
sahf
and
sub
xor
xor
jge
cmp
call
sub
inc
repnz
test
add
dec
mov
dec
cmps
jnp
in
inc
jl
mov
xchg
outs
ficom
iret
in
push
jmp
mov
test
mov
jmp
xor
push
test
cld
jmp
cmp
jae
mov
mov
daa
push
mov
aad
(bad)
addr16
add
cmp
jbe
jnp
dec
and
cmp
rcr
add
inc
push
add
ror
dec
sbb
mov
mov
cmc
test
in
mov
lock
cmp
imul
mov
mov
fdivr
loopne
or
into
test
cmc
xchg
jo
inc
adc
mov
mov
int3
lea
inc
sbb
retf
add
fistp
xor
add
push
cmp
dec
pop
out
hlt
push
cmp
push
mov
call
or
stos
sbb
mov
int
pop
push
cmp
popa
push
test
inc
lds
inc
pop
mov
add
jne
add
les
shr
cmp
imul
jne
sub
call
adc
dec
lock
push
xor
add
push
adc
jo
mov
mov
hlt
push
pop
push
xlat
mov
jne
mov
pop
sbb
movs
icebp
pusha
sub
sti
xor
jo
inc
fs
mov
aaa
(bad)
loopne
add
je
dec
loopne
push
inc
loopne
or
push
push
push
or
mov
dec
add
mov
adc
inc
sub
or
ror
push
pop
loopne
mov
mov
push
nop
and
sub
push
mov
and
xor
ins
mov
rcl
movs
popa
sbb
shr
ins
mov
dec
ror
mov
mov
ror
mov
sbb
fwait
or
jg
xchg
shr
jo
mov
push
mov
and
jne
dec
gs
fcom
add
rcl
jmp
jecxz
pusha
jmp
mov
cmp
pop
vmread
ins
add
call
jle
xchg
add
je
je
add
cmp
pop
jle
clc
adc
or
jo
je
rcl
mov
pop
and
push
jecxz
enter
inc
adc
push
loope
pop
jg
inc
push
fdivrp
call
into
push
push
popa
jb
popa
outs
je
cmp
popa
addr16
inc
push
dec
inc
dec
push
ds
push
xchg
jo
pusha
push
and
mov
mov
add
gs
mov
push
jo
imul
arpl
dec
inc
imul
ds
jg
push
mov
clc
push
dec
dec
push
mov
dec
pop
inc
outs
out
in
repnz
imul
push
and
xchg
xchg
mov
dec
add
mov
xchg
adc
add
or
add
jmp
inc
inc
cmp
xor
jl
jmp
cmp
xchg
add
push
mov
imul
pop
rol
push
lahf
sub
push
and
inc
ds
inc
push
cmps
push
stos
cmp
je
adc
aaa
or
mov
or
sub
add
sub
or
int3
inc
adc
inc
add
pop
pop
stos
mov
call
dec
push
inc
dec
setne
loopne
jp
add
adc
or
or
or
das
or
inc
inc
cs
in
out
or
push
adc
test
push
mov
les
fsub
mov
cmp
adc
mov
inc
adc
add
pop
mov
push
sbb
cdq
jl
mov
push
push
sub
pusha
out
sub
xchg
je
shl
test
jbe
inc
sbb
or
ror
fnstcw
fist
clc
adc
icebp
sahf
inc
jg
dec
sbb
pusha
les
xor
sub
adc
hlt
inc
pop
daa
push
hlt
fldenv
push
mov
popa
lock
inc
push
arpl
bound
test
int
pop
xor
add
fwait
out
movs
stos
inc
xor
adc
in
inc
cmp
add
inc
jnp
jae
push
xchg
xor
jl
call
xchg
clc
fisubr
adc
mov
arpl
sbb
mov
(bad)
int
cld
in
push
mov
pop
sbb
leave
(bad)
pop
mov
sbb
add
clc
fs
lods
adc
rcl
pop
or
and
xchg
iret
push
cmp
loope
clc
pop
xchg
popaw
arpl
sbb
rcr
push
sar
out
jmp
jnp
sar
add
imul
xor
sub
mov
fadd
cld
and
loopne
lock
mov
mov
or
mov
jo
out
or
push
push
xchg
push
call
dec
retf
push
popf
rol
jle
movs
adc
cld
cld
pop
les
lea
xor
sbb
pop
xchg
and
push
popa
je
fs
nop
loopne
loope
pop
leave
inc
mov
xchg
jne
call
inc
sub
cs
arpl
mov
adc
jp
test
add
mov
mov
ret
and
inc
pusha
je
loope
cmp
add
jnp
add
in
call
and
dec
cmp
push
and
cmp
lods
pop
shl
jmp
mov
cmp
test
stos
xor
pop
mov
cmp
in
les
sbb
inc
and
push
cmp
cmp
sbb
sbb
ror
imul
stos
daa
or
syscall
lods
push
out
fadd
in
cs
fdivr
fcomp
daa
fs
cs
daa
lea
pop
in
push
fcom
push
push
add
sbb
int
aad
add
pop
push
je
aam
inc
cs
aam
rcl
mov
aam
pusha
mov
cmp
enter
xchg
or
int3
mov
sti
mov
sbb
in
(bad)
cli
(bad)
les
rol
fs
cmps
les
cwde
iret
add
pop
mov
in
cs
popa
dec
mov
pop
sub
add
ds
jge
push
push
push
dec
cmp
adc
add
mov
xor
adc
adc
add
movs
test
sbb
arpl
adc
inc
inc
mov
ins
dec
sbb
add
test
xchg
enter
mov
pop
cmp
int
xor
cmp
shl
mov
fs
xor
or
jb
ret
scas
loopne
fidivr
xor
rol
push
je
lds
lahf
sbb
push
jle
mov
inc
inc
pop
ss
rol
xor
(bad)
push
xor
mov
and
std
and
sar
stos
jo
test
test
jae
xchg
pop
xchg
xchg
xchg
(bad)
jae
and
movs
movs
mov
jb
and
mov
sbb
scas
cdq
mov
aad
xchg
call
lods
and
sub
(bad)
daa
add
adc
mov
pop
rcr
leave
out
jno
ja
push
xor
lea
jge
push
fwait
(bad)
rcl
clc
mov
push
push
std
mov
stos
mov
add
xor
cs
mov
fadd
and
aam
push
mov
pop
mov
cs
sub
pushf
mov
mov
add
and
mov
inc
mov
jb
pop
cmp
adc
rcr
sub
or
(bad)
(bad)
jmp
rol
lock
jne
repnz
jo
push
add
sbb
fadd
sbb
jmp
sub
pop
cdq
pop
dec
shl
enter
dec
push
or
and
ja
push
mov
cmp
cmp
stos
fcmovb
xchg
int
jne
test
mov
add
dec
cs
adc
xor
imul
lods
mov
mov
(bad)
fild
fdiv
inc
mov
push
pop
imul
lods
add
add
push
pop
sbb
push
out
pusha
xchg
loop
add
out
push
xchg
pusha
add
add
sbb
push
js
add
icebp
(bad)
aaa
loopne
sub
push
mov
add
test
aaa
je
mov
or
aad
xchg
or
(bad)
cmp
jae
sbb
lods
in
mov
test
jb
push
cmc
aaa
pop
nop
nop
mov
push
xchg
and
and
add
fucom
test
xlat
mov
loope
pop
pop
mov
cmp
fadd
test
sub
add
mov
rcl
mov
(bad)
rcl
inc
pop
pop
mov
call
adc
ins
xchg
test
inc
imul
ficomp
ficom
lock
and
popa
add
xor
add
ret
add
cmp
retf
and
pop
aas
xor
lea
push
pop
mov
adc
lahf
pop
mov
jbe
test
pop
push
lock
leave
mov
xlat
push
cmp
mov
mov
mov
and
push
rcr
ret
xchg
cmp
sub
cmp
int3
cld
js
or
loopne
int
cmp
retf
push
inc
xchg
mov
call
sub
cmps
sub
pop
rcl
xchg
or
xor
nop
mov
jo
adc
mov
inc
loopne
call
mov
and
cdq
pop
push
pop
push
out
and
test
ficomp
push
mov
xchg
repnz
and
pop
clc
mov
icebp
inc
enter
sbb
mov
cmp
jmp
and
mov
adc
inc
pop
mov
cmp
xchg
bound
sub
dec
fild
cmps
pop
pop
test
sub
test
test
add
sbb
fdivr
mov
add
push
data16
loope
js
push
cmp
add
and
mov
add
repz
pusha
jb
xchg
lock
jne
push
cli
cmp
inc
or
inc
jmp
or
out
push
sub
clc
clc
clc
hlt
loop
add
scas
push
stc
jnp
ins
sti
in
jle
push
adc
call
ins
mov
mov
and
or
loopne
cmps
jnp
add
adc
mov
or
sbb
xchg
aam
mov
mov
rol
jge
jg
adc
xor
push
ja
mov
fisub
push
xor
out
or
cmp
clc
add
cli
test
mov
lock
fisttp
mov
push
jo
xchg
clc
std
out
outs
int
add
lea
(bad)
adc
cmps
ds
fild
push
pop
jne
imul
push
adc
arpl
push
movs
or
adc
int
mov
inc
adc
add
and
ins
aas
jl
jmp
es
push
push
push
mov
in
mov
enter
inc
test
pop
or
adc
in
mov
pop
fcom
sbb
lea
and
aam
aad
dec
mov
cmp
add
mov
popf
in
and
sbb
or
call
js
or
mov
inc
outs
ins
outs
bound
loop
ins
gs
inc
pop
shr
out
and
sbb
imul
hlt
mov
jl
mov
inc
stos
or
jp
fidiv
and
arpl
icebp
call
test
add
mov
sbb
nop
out
adc
(bad)
fisttp
xor
dec
(bad)
xor
adc
xchg
nop
out
jb
inc
mov
add
push
inc
pop
add
pop
mov
and
retf
add
jne
cs
jp
sbb
and
pop
les
xor
and
or
hlt
sbb
pop
jg
inc
mov
add
fwait
out
pop
and
(bad)
fbld
add
inc
cwde
pop
in
mov
mov
xor
add
(bad)
(bad)
cmp
add
nop
adc
or
ror
inc
jne
cs
ins
mov
add
xchg
ins
mov
jo
sbb
xor
inc
sub
ins
shl
sub
pop
jg
or
call
jae
gs
add
and
pushf
jle
sahf
dec
cmp
movs
dec
ins
dec
or
jecxz
adc
fadd
pusha
outs
pop
add
nop
jle
jl
lahf
inc
pop
ins
popa
jae
gs
(bad)
and
dec
xor
add
jg
add
fiadd
xchg
mov
stc
mov
(bad)
aam
pop
add
jl
inc
mov
rol
or
add
cmp
push
add
pop
push
jnp
adc
(bad)
dec
mov
sbb
push
xchg
xor
test
xchg
mov
jb
mov
mov
inc
push
pushf
ret
mov
or
mov
or
call
pop
jnp
loope
inc
xchg
adc
push
sub
(bad)
pushf
xchg
jg
mov
dec
sub
adc
clc
fisub
add
jmp
add
sbb
add
dec
push
inc
jb
mov
push
outs
mov
or
inc
cwde
and
fiadd
popa
(bad)
cld
adc
push
mov
xor
pushf
lahf
rol
jns
test
into
mov
cmps
pop
pop
out
neg
sti
dec
mov
inc
or
inc
or
add
mov
and
ja
cmp
mov
dec
daa
push
inc
out
gs
xor
sub
fiadd
(bad)
lock
push
cmp
mov
ja
pop
mov
cmp
pop
add
or
xor
enter
mov
nop
mov
add
or
sbb
mov
and
out
nop
pop
jb
add
mov
push
xchg
push
loope
add
pop
xor
loope
mov
rcl
add
xor
ins
rol
mov
sub
push
push
push
dec
and
cmp
sbb
jbe
aad
mov
pop
addr16
jbe
scas
mov
push
les
in
outs
xchg
adc
jo
popa
or
adc
(bad)
push
clc
scas
push
fidiv
push
dec
inc
pusha
sub
jae
push
mov
cmp
add
xor
dec
outs
dec
gs
jbe
jne
pop
jnp
or
jg
pusha
dec
pusha
push
push
dec
adc
ja
xchg
(bad)
in
imul
push
add
sbb
daa
hlt
mov
mov
test
cwde
add
(bad)
rol
jg
cmp
inc
(bad)
movs
adc
push
xchg
ret
test
xchg
setno
inc
push
arpl
data16
inc
fs
in
and
in
adc
(bad)
pushf
add
push
cli
add
popa
jbe
mov
jae
popa
ins
cwde
jo
dec
mov
fs
out
add
arpl
sbb
add
cli
inc
push
adc
push
push
inc
lds
in
outs
jne
pop
inc
ins
imul
dec
rcr
or
dec
pop
imul
das
mov
dec
dec
push
iret
or
pop
adc
push
push
dec
dec
mov
xchg
or
mov
dec
pop
add
pop
repnz
outs
outs
ja
pop
daa
(bad)
jecxz
arpl
adc
push
xchg
(bad)
jb
cmp
mov
pop
test
xchg
or
repnz
jb
leave
or
xor
add
xchg
and
and
cwde
adc
je
jae
or
pushf
retf
les
sbb
fidiv
push
or
mov
dec
sub
pop
fs
(bad)
stos
inc
inc
(bad)
ja
ins
outs
popa
fs
movs
outs
dec
mov
dec
js
or
adc
out
shl
mov
inc
scas
mov
pop
push
add
pop
in
jne
mov
dec
or
out
jns
fadd
ret
add
pop
or
inc
outs
push
fsubr
jl
popa
jbe
addr16
js
push
cwde
dec
cwde
push
sub
sub
ror
dec
push
add
fdivr
inc
mov
movs
pop
test
test
int3
mov
arpl
rcr
xlat
and
push
mov
adc
pop
push
jne
add
mov
xchg
push
sub
jmp
repnz
sar
inc
adc
jmp
pop
push
outs
outs
(bad)
popa
jb
enter
ja
inc
mov
ds
jl
rol
add
xlat
dec
fcom
push
pop
jnp
fmul
imul
add
loopne
loopne
jg
pop
pop
push
mov
fs
outs
fs
call
sub
sbb
sar
pop
in
cmc
sbb
pop
lock
lock
sbb
(bad)
pop
lds
clc
dec
clc
push
sbb
adc
sbb
cmp
cmp
or
push
push
add
push
sbb
adc
in
es
cld
je
push
or
jl
or
add
dec
and
je
push
adc
push
sbb
pop
xchg
shl
lods
mov
(bad)
scas
test
sbb
xlat
and
dec
dec
push
je
or
push
popa
addr16
and
sbb
mov
shr
arpl
dec
push
sub
push
pop
jnp
sub
or
ficomp
sub
in
lods
xor
push
mov
add
retf
out
adc
fidivr
dec
cmp
mov
sbb
gs
jae
sbb
imul
mov
loop
ins
and
ins
push
(bad)
mov
enter
dec
pop
dec
arpl
push
jo
push
push
ss
in
cmc
dec
xor
pop
and
data16
sub
arpl
mov
add
add
add
loopne
mov
data16
scas
outs
or
add
inc
js
aam
test
push
sub
pop
push
add
cmps
sub
xor
push
push
bound
mov
sub
inc
fwait
sbb
sar
cmp
sub
dec
movs
ds
or
pusha
push
ud2
jbe
mov
scas
sbb
pop
cs
inc
add
mov
adc
test
jp
cs
(bad)
stos
sar
sub
inc
jb
cmp
sub
inc
bnd
ror
add
paddd
dec
mov
sbb
adc
push
fadd
cmovs
add
es
cmp
or
xor
and
jo
pop
jne
clc
mov
cdq
inc
movs
cwde
ins
movs
inc
rcr
or
inc
add
in
or
xor
adc
cmp
repnz
fcomp
adc
rol
jo
shl
jg
adc
xor
sbb
adc
fadd
dec
repnz
inc
push
adc
rol
cmp
cmp
inc
pop
es
js
fdivr
sbb
jb
sar
test
in
adc
or
sbb
cmp
pop
push
jg
xchg
sbb
jmp
ss
cmp
add
aaa
xchg
inc
repnz
fstp
mov
inc
sbb
xchg
sbb
jl
add
or
dec
add
sbb
cmp
push
sar
sbb
add
js
dec
outs
push
pusha
cmp
cmps
daa
inc
call
call
test
ror
dec
xchg
pop
or
mov
mov
pop
ins
or
mov
icebp
dec
sub
or
fs
sbb
adc
sub
and
outs
(bad)
cmp
jmp
or
pushf
inc
jo
jo
daa
(bad)
out
adc
js
js
in
sbb
adc
add
sub
dec
mov
mov
push
fwait
cmp
nop
pop
sub
inc
pop
pushf
mov
inc
mov
dec
mov
loop
outs
test
test
cs
cmp
ja
inc
mov
das
inc
daa
test
inc
(bad)
(bad)
rcl
xor
enter
xor
(bad)
inc
sar
rol
loop
outs
loop
fdivr
fadd
jno
aaa
jno
loopne
loopne
xor
inc
call
pop
in
sbb
lock
aaa
mul
clc
dec
cmp
jbe
add
cmp
mov
pop
cmp
push
daa
test
cmp
adc
jnp
adc
inc
jo
(bad)
out
sbb
cmp
dec
pop
in
dec
and
push
cmp
add
dec
sub
jno
ja
inc
xor
aas
test
pop
inc
pop
jnp
daa
inc
inc
dec
inc
push
inc
bound
adc
dec
dec
push
in
sbb
push
fs
ins
mov
inc
pop
pop
pop
ja
mov
push
or
jno
pusha
pop
inc
inc
mov
clc
mov
aas
or
add
jp
icebp
add
rcr
add
cmp
mov
aam
fstp
xchg
or
inc
xlat
ds
retf
push
xchg
sti
int
nop
adc
cmc
sub
push
cmc
mov
xor
fbld
stos
bound
push
cwde
cmc
out
rol
fdiv
inc
mov
xor
(bad)
dec
sub
dec
sti
je
add
test
inc
jo
les
adc
xchg
adc
sub
cs
mov
adc
iret
dec
inc
mov
adc
adc
loop
iret
sbb
mov
test
sbb
inc
int
or
pop
fld
scas
inc
(bad)
fst
jl
mov
or
adc
(bad)
retf
adc
iret
and
push
dec
ins
adc
dec
shl
pop
pop
pop
test
push
sbb
frstor
add
arpl
xor
xor
jmp
add
enter
xchg
icebp
sub
iret
or
or
test
push
and
push
or
icebp
add
sbb
or
or
push
cld
jne
sub
ja
pop
push
sub
bswap
push
add
add
hlt
sti
or
jbe
mov
jecxz
and
add
mov
or
jg
dec
add
gs
jb
enter
mov
cmp
push
push
adc
in
add
outs
gs
lods
into
or
inc
outs
je
sub
pop
or
push
adc
test
paddb
scas
lods
test
pop
push
mov
mov
jg
(bad)
fisttp
push
jg
add
pop
xor
or
mov
mov
jne
or
inc
jne
(bad)
fcmovu
lods
mul
cld
lahf
add
fwait
adc
mov
aam
push
push
add
inc
add
add
imul
mov
arpl
jo
add
xchg
pop
add
pop
pop
sbb
add
and
adc
retf
cmps
mul
int
ror
or
ins
pop
inc
loopne
add
pop
xchg
xor
aaa
pop
or
pop
in
jb
add
add
dec
add
push
push
push
mov
inc
ins
push
add
mov
push
jmp
cmp
clc
or
push
dec
mov
mov
call
or
mov
inc
dec
dec
dec
or
add
mov
xor
leave
in
fcomp
push
add
adc
ror
push
or
sub
fisttp
xchg
cmp
popa
push
inc
outs
hlt
or
and
div
and
call
call
pop
test
push
test
leave
ret
mov
into
or
repz
mov
rol
fcom
or
cmps
push
add
or
mov
push
push
inc
mov
inc
lds
or
sub
xor
mov
jmp
sbb
mov
inc
xchg
mov
iret
mov
js
(bad)
or
add
sub
imul
add
mov
add
ins
fs
fcom
movs
shl
test
add
sti
adc
add
adc
lock
sub
or
add
inc
outs
fs
pusha
mov
ret
push
add
push
pushf
test
push
cmps
loopne
push
add
inc
add
outs
gs
test
imul
test
push
arpl
inc
add
inc
xor
pop
mov
mov
dec
sbb
ins
sbb
arpl
je
push
movs
clc
fld
adc
inc
jbe
cmps
and
loopne
inc
or
add
adc
sbb
(bad)
cmp
mov
push
pop
loopne
dec
(bad)
mov
mov
jo
cmp
fwait
inc
jl
add
sub
cwde
nop
(bad)
pusha
str
shl
fwait
push
xchg
call
js
add
inc
pop
fsub
lahf
xlat
jae
sbb
jecxz
nop
(bad)
cmp
sbb
push
push
adc
fs
nop
add
xchg
sbb
fimul
movs
ja
xchg
xor
mov
add
add
sbb
ins
das
adc
inc
imul
mov
fs
jo
dec
pop
enter
add
push
and
or
adc
inc
add
sub
inc
pop
add
xor
aam
scas
enter
inc
add
dec
dec
and
ins
jno
xlat
fmul
fsub
jg
aas
xchg
and
popa
dec
lock
fiadd
mov
test
jns
lea
fs
cmps
stc
add
ds
or
adc
and
sbb
adc
and
sub
aam
xor
mov
mov
jnp
xlat
jl
ds
fwait
mov
ds
das
xor
adc
pop
sbb
dec
push
sub
and
push
je
push
inc
ins
sub
cmp
pop
mov
fdivr
sbb
push
bound
mov
jge
movs
xchg
pop
inc
sub
push
mov
ret
jne
add
or
add
xchg
or
adc
pusha
add
and
add
add
stos
sbb
pop
inc
push
(bad)
pusha
out
inc
mov
ins
xchg
mov
add
jmp
ja
je
bound
cmp
icebp
and
jecxz
adc
add
inc
out
in
push
popa
add
retf
test
xchg
mov
jmp
inc
lock
fwait
call
push
jle
ss
cdq
inc
adc
out
sub
inc
xor
clc
add
push
in
jl
and
pop
idiv
adc
sbb
addr16
xchg
xchg
sahf
fmul
adc
add
pop
and
pusha
jnp
push
pop
xlat
adc
pop
add
mov
enter
or
rcl
push
mov
inc
push
rol
out
data16
xor
cmp
xchg
les
or
add
add
fist
and
pop
mov
fistp
or
nop
pop
or
or
lahf
fucomip
movs
nop
pop
add
lock
mov
push
push
xchg
call
cwde
and
fs
icebp
add
push
ins
push
and
rcl
pop
cmc
ins
mov
or
je
inc
add
sub
dec
adc
loopne
or
addr16
fwait
sbb
or
clc
xchg
aas
pusha
xchg
xor
aaa
int3
xchg
pop
in
xchg
pusha
les
dec
cs
mov
sbb
outs
sub
outs
imul
pop
add
mov
cmp
cmps
rcr
add
add
add
out
(bad)
pop
inc
jb
mov
xor
xchg
xchg
lahf
lods
sbb
mov
(bad)
or
iret
mov
movs
pop
jg
call
mov
and
inc
sub
ror
push
jge
push
pop
aam
inc
xor
dec
or
or
lahf
push
mov
iret
mov
push
loope
dec
mov
fbstp
ins
pop
jo
adc
mov
movs
sahf
lahf
enter
inc
add
add
mov
nop
(bad)
outs
ins
pop
adc
arpl
pop
xor
inc
mov
shl
mov
xor
dec
mov
and
add
cmp
inc
add
inc
adc
test
jl
adc
popf
ins
inc
sub
sbb
adc
inc
and
enter
mov
or
rol
jl
pushf
nop
push
xchg
add
push
and
inc
add
jno
pop
ins
pop
(bad)
fadd
pop
jmp
ror
add
das
add
ja
pop
push
nop
test
mov
inc
fisttp
rol
add
add
shr
aam
lahf
xor
pushf
mov
and
sahf
jecxz
xlat
add
leave
or
dec
into
shl
js
cmp
iret
pop
add
add
sbb
(bad)
nop
sti
lahf
inc
or
leave
or
fwait
xchg
inc
pop
sub
jne
inc
xor
mov
outs
inc
icebp
ss
sahf
sbb
popa
arpl
add
fwait
mov
(bad)
push
iret
jne
jmp
mov
sub
dec
(bad)
bound
inc
sub
test
retf
adc
retf
sbb
ds
je
jmp
adc
inc
push
add
(bad)
fs
add
mov
pop
mov
aas
mov
test
aad
sub
inc
inc
xchg
push
sahf
pop
dec
test
cmp
out
push
je
in
aam
sbb
pushf
stos
les
mov
bound
and
pop
shl
add
inc
push
inc
dec
push
dec
dec
ds
lahf
sub
outs
imul
jbe
sub
add
add
js
inc
dec
sbb
les
loope
adc
or
dec
repnz
add
and
jmp
dec
pusha
sub
sbb
call
add
pop
loopne
inc
jnp
add
pop
pop
sub
inc
sbb
inc
dec
das
pop
mov
push
sbb
or
dec
push
les
dec
mov
pop
pop
test
inc
rol
popa
addr16
das
cmp
lea
iret
mov
pop
push
cmps
mov
adc
sub
pusha
ret
add
das
and
xlat
aaa
jmp
in
inc
push
add
je
dec
test
jmp
bound
push
push
fs
mov
push
mov
in
test
mov
invlpg
or
lea
lods
ins
and
push
loopne
pop
mov
psubsw
pop
pop
add
xchg
div
jo
jnp
push
inc
pop
add
outs
enter
push
mov
dec
lea
xor
mov
cmp
idiv
pop
jne
push
inc
add
mov
std
xchg
out
push
dec
dec
data16
xor
lea
sti
addr16
std
ror
clc
es
(bad)
sub
jmp
inc
inc
jae
cmp
(bad)
mov
or
std
adc
ins
loopne
push
pop
aam
test
lea
pusha
mov
cmp
dec
mov
cmp
mov
(bad)
scas
xchg
pop
imul
retf
aam
int
popf
or
sbb
jae
cmp
or
add
dec
dec
imul
or
jne
add
ret
mov
cld
(bad)
fprem
lea
into
pop
mov
push
add
mov
ret
inc
fild
inc
jle
push
pop
cld
mov
fs
pop
shl
je
push
sbb
adc
xor
pop
test
movs
and
pop
pop
mov
mov
scas
jo
pop
push
adc
rol
aam
dec
jg
cmp
cmps
pop
xor
scas
add
push
adc
dec
or
jle
mov
or
push
mov
adc
inc
xor
mov
xor
inc
xor
add
inc
mov
sub
sbb
or
push
xlat
(bad)
and
xor
xor
nop
or
test
(bad)
xor
and
(bad)
lods
add
adc
arpl
push
adc
out
and
mov
add
xchg
sub
push
cmps
jns
dec
aam
pop
(bad)
cmp
stos
inc
scas
sub
jne
dec
add
pop
inc
push
inc
adc
test
dec
add
sub
add
dec
sbb
or
add
and
pop
and
sbb
rcr
fadd
xchg
inc
adc
inc
sbb
or
mov
ret
add
cvtps2pi
mov
ret
lock
lock
pop
outs
pop
loopne
inc
pushf
sub
push
ret
mov
outs
mov
push
push
or
fs
aas
fnstcw
adc
add
test
ret
test
add
adc
arpl
cmp
sti
xor
adc
and
add
mov
std
xor
mov
dec
test
loope
pushf
jne
je
mov
ja
sbb
fisubr
hlt
mov
mov
mov
test
pushf
adc
or
pushf
push
xor
or
dec
mov
sbb
cmp
pop
sti
mov
push
(bad)
shl
or
test
add
int3
pop
ss
iret
imul
mov
adc
mov
test
movs
lods
xchg
xchg
ja
enter
dec
aam
or
je
out
cmp
dec
or
ret
retf
inc
clc
and
rcl
mov
fmul
xor
pop
cwde
mov
jae
inc
js
xor
sub
jge
xlat
lock
pushf
pop
cmc
push
lea
cmp
lea
inc
sbb
sbb
and
mov
lds
xchg
adc
pop
and
inc
cdq
jmp
sub
(bad)
push
adc
popa
inc
les
jmp
imul
pop
cmp
dec
loop
add
dec
inc
jnp
sbb
add
outs
imul
ins
inc
jo
addr16
int3
mov
pop
(bad)
call
je
mov
mov
mov
inc
dec
popa
cs
cmps
lock
and
dec
adc
push
push
mov
push
and
add
repz
pop
adc
xor
xor
push
add
jne
test
xchg
mov
scas
push
adc
lahf
shl
arpl
add
jno
pop
cmps
xor
xor
sub
xor
xor
dec
sub
cmps
xor
inc
xor
and
add
xchg
xor
adc
adc
and
mov
and
cmps
jecxz
add
inc
cmp
adc
sbb
cmps
add
jb
xor
and
and
dec
push
out
aam
rol
ins
arpl
enter
mov
adc
or
fsubr
inc
sbb
push
and
push
jbe
pop
cs
xor
cmp
adc
cmp
(bad)
xor
ret
js
sub
or
mov
jne
sbb
jnp
dec
push
sar
inc
jecxz
xchg
inc
es
sub
or
addr16
in
in
jg
call
shr
popa
cmp
inc
inc
dec
sub
jo
inc
dec
fmul
mov
iret
or
or
adc
mov
pusha
jg
sbb
loop
inc
fs
or
inc
mov
mov
sub
add
and
in
je
ins
xor
pop
cmp
mov
sahf
retf
ficomp
sub
mov
enter
ja
iret
hlt
popf
popa
xchg
inc
retf
clc
add
idiv
(bad)
or
jmp
neg
in
repz
xor
inc
leave
inc
ss
movs
cmp
lock
loop
xchg
dec
cmp
test
clc
out
jo
ss
push
lahf
ror
jmp
dec
ds
ins
aaa
push
and
cwde
lea
push
mov
push
(bad)
push
jnp
xor
xor
pop
fidiv
jb
movs
cdq
pop
cmp
jo
mov
xor
retf
lea
adc
cli
mov
int3
mov
or
add
mov
mov
in
lea
mov
scas
rcr
push
xor
cmp
cmp
call
xchg
dec
sbb
es
push
cmp
push
loopne
dec
sbb
cmp
dec
add
jnp
pop
or
pop
xor
xchg
pop
adc
pop
in
cdq
cwde
mov
mov
loopne
mov
or
icebp
test
rol
cmp
or
inc
adc
fcom
aam
push
pop
rcl
ja
or
fcom
ins
pop
int3
xchg
add
aam
and
push
clc
pop
add
les
push
dec
movs
dec
xchg
mov
jmp
xor
and
jno
sub
fld
enter
dec
sbb
dec
rcl
stos
gs
lea
and
mov
mov
mov
push
cdq
pop
mov
push
outs
xor
fidiv
mov
call
test
mov
test
test
adc
outs
sub
sbb
push
dec
jns
push
pushf
jns
pop
gs
cwde
cwde
nop
and
push
mov
pop
pop
jb
pop
cwde
pushf
mov
movs
test
and
jb
mov
pop
jb
pop
mov
jb
(bad)
enter
jno
jmp
or
mov
push
adc
and
adc
call
ja
dec
push
xor
test
neg
jns
or
push
push
sub
xchg
lea
loope
mov
xchg
and
rol
popa
cmc
dec
lods
repz
jge
daa
xor
int
xchg
stos
ror
xchg
test
mov
test
and
sub
loopne
adc
add
xchg
test
mov
test
in
pop
iret
add
xchg
js
gs
mov
je
ror
adc
into
ja
nop
retf
(bad)
jmp
pop
jb
call
inc
fs
outs
fwait
jge
pop
inc
pop
cmp
cmp
enter
push
push
dec
dec
call
jecxz
dec
(bad)
(bad)
jmp
cdq
fimul
push
xchg
sub
cdq
xchg
sub
cdq
xchg
sub
sbb
cdq
xchg
js
xchg
test
pop
test
mov
pop
push
lds
sub
mov
call
adc
ror
push
loop
(bad)
pop
test
loope
push
(bad)
shl
xor
dec
nop
into
and
inc
inc
push
cmp
cmp
retf
leave
and
pop
ins
inc
es
test
mov
dec
sbb
and
jmp
push
lds
fs
cmps
xor
dec
cmps
fs
cmp
mov
sbb
lea
out
js
neg
and
add
pop
sub
xor
jecxz
jnp
cli
add
push
rcr
lock
xor
xor
sub
sub
fs
dec
fistp
rcl
jbe
push
push
inc
std
aaa
and
es
in
adc
dec
outs
xchg
pop
push
fsubr
fidiv
fs
xchg
push
outs
xchg
fnstcw
sub
add
xchg
dec
js
mov
nop
in
clc
dec
aaa
cmps
cmc
or
jge
sbb
push
pop
fldcw
aas
mov
push
stc
sbb
add
jae
imul
push
(bad)
jl
clc
aaa
ret
or
lock
test
add
leave
movs
inc
popa
mov
outs
retf
lock
add
mov
or
je
popa
adc
adc
rcl
sbb
sbb
test
sub
test
xchg
sbb
jb
adc
mov
sub
inc
sbb
or
or
popf
or
add
sub
test
(bad)
aad
hlt
inc
push
cld
(bad)
cld
(bad)
movs
fs
rol
retf
add
or
adc
cmps
fs
sbb
mov
or
jl
xlat
mov
pop
test
(bad)
cmp
sub
in
(bad)
cs
adc
and
inc
xchg
clc
xchg
(bad)
jmp
jno
lock
(bad)
repnz
inc
lock
hlt
(bad)
lock
clc
hlt
inc
dec
lock
call
cs
test
test
pop
in
loopne
es
fcomp
jmp
leave
aam
fs
and
dec
in
in
xchg
dec
leave
xchg
lock
xor
cmps
in
imul
test
mov
retf
enter
xchg
xlat
scas
inc
and
aam
lds
aam
mov
aam
repnz
mov
shl
daa
push
xor
int3
(bad)
int3
les
push
jl
les
(bad)
(bad)
cmps
inc
cs
mov
retf
leave
mov
test
ins
loopne
mov
mov
lods
xchg
dec
push
mov
dec
sbb
movs
movs
mov
lds
fs
cmps
mov
mov
mov
fs
enter
dec
cmps
rcl
push
popf
xor
xor
js
fiadd
loopne
pop
dec
jbe
popa
(bad)
sbb
dec
mov
outs
pusha
push
inc
mov
dec
add
dec
sbb
mov
add
sbb
add
das
pop
or
rcr
imul
and
enter
jnp
sbb
cs
xor
nop
sbb
int3
ror
fisttp
mov
mov
cmp
lea
push
push
cmp
xchg
pusha
js
cld
dec
sbb
pop
mov
push
xlat
or
sbb
mov
push
lea
inc
or
aas
dec
pop
add
repnz
jne
jge
add
jne
popf
loopne
rol
rcl
dec
adc
lea
sub
rol
sbb
inc
pop
pop
push
pusha
add
pop
jb
jmp
xlat
xor
xor
fimul
loopne
cmp
lock
pop
adc
ins
and
add
nop
push
pop
pop
mov
clc
inc
push
inc
cmp
pop
enter
cmp
pop
adc
dec
adc
dec
push
xchg
dec
adc
cmp
inc
and
mov
add
fcomp
and
xor
add
inc
and
mov
xor
dec
(bad)
jno
push
jo
xor
adc
or
jb
mov
adc
push
add
adc
fbld
xchg
push
inc
enter
push
repnz
mov
cld
mov
or
mov
fnstsw
mov
pop
mov
cmp
mov
xchg
clc
mov
fld
std
adc
sbb
sahf
sti
pop
mov
sbb
pop
push
and
fild
fdiv
repz
pop
pop
adc
nop
es
lock
out
scas
add
cmp
jne
mov
stos
sub
hlt
mov
loop
inc
and
fild
stc
mov
mov
ret
enter
inc
or
adc
xchg
inc
or
push
xchg
adc
dec
movs
push
popf
popf
es
les
inc
xor
cmp
or
and
sub
fld
dec
sbb
adc
ret
lds
and
or
sub
or
cmp
adc
or
add
mov
enter
ror
test
retf
hlt
es
inc
clc
add
dec
hlt
popa
add
ins
mov
cmp
or
sub
add
pop
or
and
mov
mov
test
mov
or
ret
xor
adc
jnp
pop
cld
cs
(bad)
mov
inc
inc
call
fistp
jge
ja
and
cmp
cmp
mov
in
call
imul
fwait
cmp
dec
or
push
in
add
jo
or
mov
cmp
adc
pop
push
sbb
je
push
inc
call
fs
sub
mov
push
inc
cld
push
iret
push
push
or
push
mov
or
cs
adc
les
sbb
xchg
mov
or
adc
or
test
cmp
pop
sub
mov
mov
adc
inc
dec
int3
mov
or
xor
inc
fcomp
lea
add
mov
fwait
add
pop
fmul
test
cmp
mov
adc
mov
rol
rol
xchg
sbb
enter
inc
sub
and
jae
shl
mov
adc
mov
mov
dec
adc
jae
mov
mov
dec
rcl
test
sub
push
xor
add
call
fcomp
xchg
es
push
jae
add
mov
clc
jecxz
ds
je
or
pusha
sub
cli
mov
push
inc
jle
xchg
sbb
shl
push
sub
dec
xchg
mov
sub
inc
nop
mov
xor
mov
xor
test
loop
pop
js
dec
sub
js
sub
test
ror
push
or
ins
sbb
and
xchg
add
int
adc
pop
adc
and
retf
fyl2x
pop
loope
sub
mov
sar
imul
add
cmp
sub
mov
cmp
adc
(bad)
adc
add
addr16
xchg
inc
xchg
jbe
in
mov
push
xchg
in
xchg
dec
xchg
shl
daa
pusha
xchg
and
nop
pusha
pop
pop
pop
enter
pop
xlat
stos
push
dec
push
mov
and
je
push
jne
test
dec
jmp
lahf
fimul
retf
jecxz
dec
mov
enter
inc
pop
mov
lea
mov
lds
sub
test
xor
mov
xor
inc
rol
jns
call
and
xchg
shr
sbb
xchg
xchg
sub
cmp
xor
mov
test
fst
xor
(bad)
fldcw
(bad)
xchg
adc
jb
sub
mov
or
scas
ret
daa
sbb
xchg
mov
sbb
sbb
push
pop
rcr
sbb
rcl
outs
adc
adc
lds
stos
adc
xlat
or
or
pop
inc
cs
cmp
add
daa
in
fs
cld
(bad)
clc
(bad)
je
daa
sub
(bad)
clc
mov
clc
lock
dec
cmp
add
mov
pop
in
call
retf
loopne
loopne
mov
mov
dec
push
fcomp
rcl
push
jb
sbb
rol
or
adc
xor
and
push
popa
aam
leave
push
or
sbb
xchg
icebp
(bad)
dec
push
sbb
mov
mov
inc
and
inc
mov
dec
xchg
mov
push
inc
cmp
les
(bad)
out
mov
test
xor
sti
scas
pop
inc
and
push
push
or
mov
inc
push
pop
cmp
cmps
nop
fwait
pop
and
push
push
int3
push
mov
jle
and
push
into
pusha
pusha
mov
mov
jns
mov
mov
das
mov
dec
and
pusha
mov
inc
dec
push
sub
or
sub
js
and
add
ror
aaa
out
mov
jbe
test
jbe
mov
lock
dec
inc
mov
add
sbb
rol
sbb
je
ror
scas
gs
(bad)
mov
push
mov
and
push
out
call
pop
clc
xor
(bad)
push
(bad)
in
mov
hlt
lea
mov
cmps
ds
lea
call
aaa
push
je
add
adc
fnsave
sub
inc
dec
in
xchg
in
mov
sbb
fadd
pop
cmp
add
int3
repnz
push
adc
dec
int3
dec
int3
nop
or
add
loopne
pop
jnp
mov
jmp
mov
aas
lock
hlt
clc
push
add
pop
sub
mov
jge
push
or
mov
and
std
sbb
sbb
adc
adc
jge
adc
addr16
sbb
push
mov
je
mov
adc
cmps
inc
or
sar
mov
and
jp
mov
jge
mov
jg
add
hlt
dec
rol
and
aad
pop
mov
aas
jmp
cmp
mov
mov
inc
add
push
lea
push
fisttp
mov
mov
addr16
test
sbb
rcr
xor
shl
pop
pop
aam
loopne
push
ins
mov
leave
sbb
mov
rcl
(bad)
adc
test
mov
pop
loopne
xor
cmps
push
sub
cmp
or
ins
adc
jae
add
inc
call
sub
push
push
jne
cmp
pop
jne
imul
loop
retf
test
je
pop
push
xor
movs
mov
in
ror
cld
or
inc
mov
pop
cld
cmp
sete
and
ds
fwait
movs
xor
inc
mov
jle
test
cli
adc
push
and
test
out
dec
imul
fcomp
adc
add
add
dec
jb
push
push
cmp
lods
add
dec
add
mov
sar
mov
out
xor
ss
call
push
in
lea
mov
fld
cld
lea
xor
pop
add
jle
xor
popf
dec
in
ret
pop
sar
add
push
push
push
mov
shl
scas
or
je
pop
jne
(bad)
std
jmp
inc
add
leave
push
scas
not
sub
mov
xchg
shr
(bad)
pop
push
sbb
xchg
rep
jmp
push
out
inc
add
leave
sar
add
push
adc
lock
fsub
or
(bad)
jns
jnp
cli
enter
mov
je
jmp
xor
inc
inc
fs
dec
mov
retf
xchg
hlt
ret
rcl
lods
dec
rcr
cmp
clc
push
push
sub
adc
outs
fidiv
cmp
and
inc
clc
rol
jmp
mov
pop
lods
call
and
mov
push
pusha
xor
ds
push
sub
add
adc
xchg
div
pop
push
or
mov
pop
pop
push
mov
push
add
cld
adc
jl
sbb
inc
cmps
in
xor
mov
pusha
xor
jb
ins
jmp
cmp
rol
inc
pop
mov
sub
or
pop
and
test
xor
icebp
jne
inc
sti
push
xor
neg
pop
je
push
adc
adc
jg
add
jg
push
add
ret
mov
jmp
jp
mov
push
cmp
(bad)
sti
nop
or
dec
cmp
mov
mov
sbb
jo
push
std
or
inc
lds
mov
adc
and
daa
sar
mov
div
lea
dec
add
loope
sbb
je
nop
adc
ja
xlat
imul
icebp
jns
test
(bad)
inc
adc
arpl
addr16
push
jmp
add
and
add
xor
adc
test
or
mov
sar
(bad)
mov
or
sub
add
or
jmp
jne
mov
cmp
jmp
add
call
add
test
mov
inc
inc
jmp
jmp
sub
sub
call
mov
inc
ins
jb
loop
adc
or
push
sbb
adc
mov
pusha
test
inc
aaa
push
imul
pop
idiv
je
push
sbb
loopne
inc
call
pushf
xor
sti
sbb
pop
or
lock
cmp
retf
jbe
mov
or
sbb
mov
or
mov
add
mov
pop
push
inc
pop
push
fcomp
test
adc
pop
leave
ret
cmp
jge
rol
dec
inc
and
adc
add
loope
sar
inc
and
icebp
(bad)
cmp
aas
jbe
mov
sub
dec
lea
jns
push
icebp
outs
adc
add
clc
add
push
or
clc
xchg
stos
and
xor
push
pop
add
add
rcr
repnz
shl
or
xor
or
add
inc
outs
push
imul
out
xchg
movs
test
pop
sub
pop
ins
in
test
test
add
mov
cs
add
aas
mov
or
lds
inc
add
add
shr
and
sub
cld
loope
add
and
ss
je
cli
gs
xchg
ss
sub
xor
aam
or
pop
xchg
push
push
push
inc
cli
sbb
jns
leave
test
add
jp
cmp
push
iret
std
dec
xchg
psubb
add
sti
mov
je
cmp
adc
sub
or
out
out
push
add
mov
sbb
and
lahf
adc
xlat
loope
pop
push
mov
mov
pop
jmp
and
lock
aaa
add
xchg
cmp
jle
out
adc
cmp
lock
sti
and
or
push
lahf
mov
pop
mov
mov
push
call
test
push
inc
push
out
pop
xchg
and
jge
mov
mov
das
push
ins
int
add
and
sub
and
push
jne
fcom
sahf
push
mov
loop
hlt
sti
cmp
mov
push
push
cmp
and
sar
ja
bound
lods
rcl
movsx
pop
(bad)
pop
xor
xor
mov
cmp
pop
sbb
dec
sbb
dec
mov
fsub
clc
or
cld
sbb
push
push
push
mov
mov
arpl
push
cmps
ret
daa
xchg
movs
jg
xchg
adc
jne
push
ins
sbb
push
sub
adc
pop
push
xor
mov
and
inc
sti
pop
sbb
mov
sti
pusha
ret
and
push
xor
jle
test
mov
xor
or
subps
or
mov
add
test
ins
or
ss
test
xchg
loop
daa
sub
adc
cmp
push
std
or
inc
mov
and
fdecstp
or
mov
les
jns
movs
inc
int
jge
push
mov
mov
jno
out
cld
cmp
pop
cmp
aad
sbb
fwait
lock
sbb
push
adc
lock
rcr
sub
fdivr
jb
add
ret
call
or
adc
push
add
and
ss
push
xor
jo
push
jge
out
mov
imul
inc
pushw
dec
cs
icebp
xchg
sub
cdq
sub
in
ret
int
fadd
sahf
outs
dec
dec
ret
sub
mov
mov
pop
cs
aam
or
inc
cmc
push
mov
sbb
mov
ror
pop
xchg
pop
jmp
push
adc
mov
add
mov
out
and
push
mov
sub
paddsb
or
js
jo
cmp
adc
mov
mov
cmp
cmp
xchg
mov
xchg
fdiv
movs
inc
sub
cli
jne
cmp
sbb
push
ret
add
mov
enter
fdiv
xor
imul
or
aaa
loopne
xchg
iret
out
das
in
xchg
jne
mov
add
add
adc
in
pop
hlt
add
jl
adc
jecxz
aas
dec
les
loopne
cmp
frstor
push
fisttp
jae
adc
sbb
push
dec
mov
dec
arpl
inc
mov
sbb
add
mov
pop
mov
and
jmp
fcomp
and
(bad)
pop
(bad)
cs
mov
sbb
sti
xchg
scas
repz
sti
and
ret
hlt
xchg
movs
mov
clc
je
mov
test
xchg
xor
cmps
or
ins
xchg
test
sbb
xchg
mov
push
lahf
lahf
dec
cmp
xor
fsubr
fmul
xchg
mov
scas
sub
addr16
xor
xchg
push
(bad)
xchg
jnp
push
neg
bound
inc
jae
push
das
test
cmp
xchg
sbb
xor
or
add
icebp
inc
in
push
sti
mov
cmp
pop
fadd
out
test
jno
inc
bound
fwait
sar
sub
mov
xchg
xor
xchg
movs
cmc
adc
add
push
fidiv
cmps
or
dec
mov
mov
inc
dec
cmp
cs
add
pop
add
pop
xlat
aaa
in
and
iret
cld
out
add
and
test
mov
add
xchg
push
push
dec
push
iret
fcomp
cmp
in
(bad)
xor
loope
cmp
cmps
xor
and
cld
out
mov
mov
sbb
push
sbb
add
sbb
outs
(bad)
je
sub
mov
and
jmp
mov
add
mov
loopne
jmp
sahf
scas
dec
inc
push
test
or
pop
or
je
loopne
loop
dec
push
cld
pop
mov
ins
lock
mov
sti
and
xchg
mov
push
repnz
div
lock
loope
sub
cmp
daa
(bad)
scas
ins
loopne
test
stc
jl
dec
cmp
bound
mov
test
sub
pushw
cld
cmp
mov
pop
call
cmp
or
xchg
sub
pop
sahf
jle
sbb
shr
cld
(bad)
cmp
sub
enter
dec
popa
jns
mov
cmp
add
sbb
mov
shr
imul
stos
add
push
retf
hlt
and
push
es
call
pop
sbb
or
dec
enter
mov
(bad)
xchg
cdq
lock
push
add
pop
mov
push
xor
jmp
mov
jp
cli
enter
jns
inc
jae
mov
xlat
mov
cmps
or
push
xor
gs
cmp
jg
popa
fisttp
xor
push
imul
sub
dec
cmp
and
jb
out
jge
jno
cmp
jne
pop
je
call
or
je
scas
popf
scas
lock
sbb
adc
xor
lods
mov
lods
mov
cwde
mov
pop
(bad)
jg
dec
stos
sub
adc
mov
cmp
fwait
or
mov
sbb
ss
inc
add
ins
or
hlt
and
adc
mov
mov
add
into
or
dec
xchg
jne
sahf
loop
ret
leave
sub
shr
movs
or
and
clc
jmp
push
inc
sar
bound
or
call
shl
cmps
lods
cs
jmp
dec
cmps
mov
inc
mov
lock
push
push
loope
(bad)
jae
push
sbb
repz
xchg
ror
lock
dec
mov
bound
cmp
outs
dec
mov
xor
sub
push
push
add
jmp
stc
xor
pop
inc
imul
sbb
pop
mov
ret
and
hlt
cwde
add
push
mov
leave
mov
mov
cmp
ja
inc
cmp
dec
jbe
jo
sub
call
jmp
int
push
push
es
and
outs
or
or
sub
push
adc
push
popf
cmp
pushf
ss
pushf
fistp
fild
mov
arpl
jo
push
push
or
xor
inc
outs
jb
arpl
ret
dec
popa
ins
ins
outs
arpl
and
data16
popa
mov
and
add
mov
fbstp
push
ret
cmps
pop
inc
popf
push
test
jg
jmp
add
mov
cli
sbb
push
dec
jmp
mov
inc
mov
inc
dec
test
jp
rol
call
pop
jle
ficom
clc
push
adc
dec
cs
aaa
ins
into
jb
out
jmp
dec
jbe
clc
in
(bad)
sbb
mov
dec
into
xchg
cmp
dec
sub
lahf
js
mov
bound
add
pop
jae
stos
add
sub
jmp
lock
(bad)
(bad)
xlat
add
add
mov
push
inc
xlat
pop
pop
movs
ins
retf
iret
adc
mov
sbb
retf
xchg
leave
stc
dec
jge
push
adc
mov
test
sub
fs
mov
jo
adc
es
daa
call
fwait
aaa
jne
mov
outs
mov
outs
mov
enter
add
neg
cmp
arpl
push
daa
jne
pushf
(bad)
call
arpl
in
adc
cmps
or
leave
push
xchg
cli
popf
mov
mov
or
lds
mov
pop
push
push
cmps
pop
fsubr
and
pop
je
push
push
xchg
mov
jno
inc
or
jg
call
mov
xchg
mov
stc
ud2
dec
adc
out
push
mov
js
pop
dec
mov
fisttp
add
pop
sbb
xor
xor
mov
sti
ficom
jmp
mov
push
js
add
jge
inc
jne
jne
loopne
movs
and
mov
push
pop
arpl
dec
inc
dec
add
fmul
pushf
push
add
mov
dec
ds
int
sbb
xlat
mov
mov
pop
ins
sahf
inc
sbb
sub
push
jbe
ret
leave
inc
ret
mov
add
fld
call
jbe
mov
add
push
mov
adc
sub
cli
add
mov
jecxz
jo
jno
stc
mov
iret
sub
jmp
ins
cmp
aad
cmp
xchg
add
inc
adc
pusha
sub
dec
in
pusha
fbstp
lods
push
inc
pop
ss
jge
jmp
or
jo
mov
mov
adc
daa
repz
xchg
fmulp
dec
cmp
shl
sbb
adc
push
out
je
adc
mov
and
add
fwait
bound
xor
sub
adc
push
test
jno
add
hlt
retf
xor
mov
inc
sbb
cld
cmp
pop
aad
push
sbb
jne
mov
dec
mov
sbb
sbb
mov
fs
cwde
ret
ins
fdivr
test
or
(bad)
jmp
add
sbb
xchg
shl
mov
sti
ss
jne
push
sub
pop
push
add
sub
jnp
xchg
adc
sbb
out
mov
push
in
cmp
push
icebp
ja
je
cwde
inc
mov
ja
mov
rol
mov
test
pusha
nop
mov
je
push
pop
les
push
and
mov
test
add
retf
add
stos
mov
mov
lea
adc
inc
add
mov
push
adc
inc
push
push
into
sbb
add
and
daa
dec
call
push
leave
mov
add
test
iret
cmc
mov
fsub
neg
push
pushf
lea
dec
scas
pop
add
or
cwde
sti
rcr
jae
je
xchg
mov
pop
test
dec
enter
mov
and
add
mov
xchg
jle
add
add
mov
dec
push
daa
fldcw
clc
cld
sti
(bad)
inc
sub
cmps
les
push
push
cli
popa
xchg
stos
aam
sti
scas
mov
pop
daa
leave
ret
test
push
cmp
test
lea
lea
dec
xchg
cmp
es
xor
sub
jne
adc
add
push
pushf
push
loop
call
dec
cld
push
cli
mov
push
in
cmps
andps
adc
daa
and
sub
push
(bad)
repnz
stos
cmps
jg
imul
pop
adc
into
adc
mov
xor
sub
push
xchg
mov
scas
mov
jbe
mov
or
scas
lahf
mov
cmp
jo
sbb
adc
dec
dec
adc
daa
div
push
and
inc
addr16
mov
call
push
mov
sub
fs
and
inc
mov
inc
and
mov
cmp
ins
inc
add
push
jl
jb
or
xor
arpl
les
ss
add
mov
mov
hlt
icebp
xchg
adc
stos
inc
call
pop
sub
add
(bad)
inc
mov
js
pop
pop
je
popf
rcl
add
dec
pop
lods
push
mov
push
adc
or
sub
iret
(bad)
cmp
jl
add
adc
cmp
pushf
gs
rol
stos
mov
xor
jecxz
cmp
pop
push
pop
mov
push
call
inc
in
xchg
inc
das
lods
inc
rcr
or
or
fsub
pop
imul
jb
push
push
mov
xor
jo
in
aas
lock
pop
sbb
shr
ret
xor
scas
pop
lahf
hlt
popa
cmps
adc
adc
das
pushf
jb
test
mov
bound
sub
cmc
sub
clc
inc
or
and
pop
and
mov
retf
jae
dec
push
push
call
lea
lea
fdiv
jnp
mov
jb
push
add
lods
das
mov
scas
inc
outs
rcr
jne
dec
shr
sti
outs
mov
inc
xor
mov
inc
mov
inc
loopne
test
adc
lods
xchg
je
sbb
pop
sbb
ret
mov
push
cmc
or
ret
es
cmp
daa
jge
pop
or
fbstp
or
mov
dec
pop
push
out
and
lahf
inc
addr16
add
aas
push
pop
or
push
or
add
push
or
adc
mov
inc
add
mov
pop
and
or
ja
sub
popf
pop
pop
gs
jo
js
add
add
sub
adc
inc
or
push
test
aam
pop
test
repnz
sub
push
test
push
push
daa
add
arpl
inc
add
addr16
in
cmp
enter
lds
add
lock
add
xor
cmp
and
xchg
xor
or
lods
or
push
adc
mov
sbb
addr16
sub
add
add
sbb
pop
shl
inc
add
add
pop
pop
inc
adc
adc
movs
add
adc
ror
dec
or
or
enter
add
push
in
in
out
daa
jb
push
popa
lea
or
push
pop
nop
mov
jg
test
xlat
adc
repnz
sub
add
or
xchg
inc
leave
(bad)
push
push
sub
pop
pop
ins
mov
inc
or
adc
in
sub
jo
js
push
push
or
and
sub
js
inc
xor
xor
push
and
pop
or
cmps
loopne
(bad)
out
inc
ins
sub
mov
jl
dec
out
nop
out
dec
sbb
sbb
call
jnp
sbb
add
scas
(bad)
rol
pop
sub
mov
cli
dec
inc
je
outs
or
mov
not
mov
sti
and
(bad)
fbld
fdiv
push
js
push
add
mov
shr
cld
call
or
mov
and
pop
and
mov
ja
dec
push
mov
call
shr
or
repz
jns
mov
lock
or
outs
mov
add
int3
shr
dec
adc
xchg
push
jle
repnz
repz
mov
and
dec
clc
or
into
mov
dec
mov
(bad)
shr
dec
push
or
icebp
add
dec
mov
dec
sti
adc
mov
dec
sub
xchg
sbb
dec
adc
test
sbb
sbb
xchg
inc
std
aas
and
pop
sbb
adc
imul
mov
sub
pop
(bad)
(bad)
aas
inc
add
mov
xor
add
nop
imul
dec
xchg
jno
std
add
cmp
inc
jns
aas
scas
inc
and
inc
aas
cmp
mov
int
push
and
mov
inc
xchg
mov
or
inc
scas
push
jo
es
and
dec
add
pusha
(bad)
inc
jmp
scas
dec
inc
mov
rol
or
sbb
(bad)
inc
jmp
scas
dec
push
pop
pop
es
or
pop
ins
adc
inc
(bad)
inc
in
push
adc
stos
(bad)
mov
sub
add
or
adc
adc
adc
sub
leave
das
(bad)
sub
inc
add
leave
sub
cmp
out
fcom
leave
sbb
shl
and
pop
leave
sub
int
and
(bad)
pop
leave
sub
leave
aaa
ret
or
or
sub
and
adc
inc
xor
pop
leave
sub
clc
mov
out
cld
sub
add
cmp
pop
sahf
inc
cmp
in
cmps
inc
lock
push
mov
inc
inc
es
icebp
xor
xor
mov
inc
cmp
push
aam
add
xor
xor
mov
div
sub
fidivr
or
ins
and
mov
mov
inc
adc
or
inc
or
in
or
jbe
inc
inc
jmp
add
inc
test
sbb
pusha
dec
mov
test
inc
jo
mov
fist
xor
(bad)
jle
sub
aaa
inc
lock
aaa
inc
cli
daa
mov
cld
sbb
clc
test
out
aam
sbb
sbb
or
cmp
aam
sbb
mov
cdq
(bad)
getsec
inc
lock
cmp
clc
jl
pop
invd
inc
sub
and
gs
lods
les
jle
dec
lock
and
hlt
adc
jnp
mov
inc
push
jne
ret
inc
pop
aam
js
jmp
inc
movhps
addr16
lock
xchg
pop
fcom
into
repz
cmps
and
sbb
dec
shld
mov
cmp
inc
adc
sbb
gs
and
int3
or
and
adc
out
call
push
mov
adc
rcr
test
cmp
or
dec
jle
outs
pop
adc
ds
mov
out
(bad)
pop
and
loopne
movs
or
aaa
mov
ds
mov
dec
cmp
pop
mov
push
movs
pop
xor
movs
or
inc
xor
pop
loopne
lock
sbb
adc
mov
add
cli
adc
add
pop
or
push
movs
adc
sbb
dec
add
or
add
and
rcl
repz
add
retf
stos
int
or
mov
inc
repz
fdivr
adc
shl
enter
push
xor
mov
addr16
fisttp
or
inc
add
and
cmp
jbe
inc
cmp
jmp
or
cmp
or
inc
or
inc
jne
(bad)
jg
or
mov
sbb
mov
push
fild
mov
shl
out
fbld
(bad)
adc
enter
std
or
mov
rcl
fwait
jne
and
adc
fs
aam
push
or
ja
jbe
retf
fdivr
adc
jne
outs
ror
retf
push
mov
mov
sbb
inc
inc
mov
dec
cld
sti
dec
push
pop
or
jge
mov
pop
mov
jno
nop
push
push
pop
arpl
add
inc
pusha
mov
or
retf
or
pop
stc
push
inc
imul
push
mov
pop
xchg
les
movs
lea
stos
jle
out
in
or
sahf
mov
mov
pop
add
jae
adc
sbb
sub
jb
scas
jo
cwde
mov
hlt
mov
fwait
lea
push
add
dec
add
xchg
adc
int3
inc
mov
mov
cmp
xor
pop
sbb
enter
cli
cmp
test
hlt
sti
sub
cmp
or
mov
shl
popa
jo
fs
fdiv
fs
and
test
pop
setno
push
lea
dec
cmp
gs
in
sub
xor
cmp
ror
add
push
jne
lea
push
push
call
mov
adc
jnp
sub
mov
jmp
mov
dec
aaa
(bad)
frstor
cmp
push
fwait
fwait
imul
add
inc
mov
dec
jecxz
xor
addr16
cmp
cmp
mov
in
mov
and
add
mov
inc
outs
mov
cmp
and
cmp
dec
stos
mov
dec
add
mov
scas
mov
xor
enter
mov
add
rcr
int3
add
sbb
pop
fstp
ror
shl
xchg
mov
retf
adc
je
push
push
xor
add
inc
in
mov
inc
add
rcl
and
movs
mov
push
jb
cdq
add
shl
shl
xchg
call
push
or
jmp
sub
mov
cmc
clc
je
addr16
clc
clc
scas
push
jecxz
xchg
scas
shl
fcom
mov
sub
xchg
ret
jbe
aaa
das
in
adc
mov
or
and
fimul
sahf
xchg
push
das
cmps
bound
std
xchg
sub
aaa
fdivr
shufps
xchg
push
movs
add
push
test
pusha
imul
mov
sbb
push
cmp
sbb
adc
or
pop
test
and
std
(bad)
iret
mov
mov
dec
cmps
nop
stos
and
xor
inc
jb
ins
nop
sub
pop
mov
mov
add
pushf
ror
add
sbb
cmps
imul
adc
mov
les
or
nop
dec
int3
scas
sbb
sbb
xor
cs
les
adc
(bad)
fcom
movs
mov
inc
and
sbb
push
mov
sub
pop
scas
shl
lods
push
ficom
add
push
pop
out
fadd
or
mov
sub
js
cmp
xor
xchg
inc
rcl
inc
pop
inc
loopne
in
inc
mov
sbb
sub
adc
inc
mov
neg
in
inc
adc
pusha
gs
lods
lods
inc
adc
push
xor
adc
inc
lods
inc
mov
xchg
sub
sbb
adc
mov
and
shl
sbb
call
scas
sbb
dec
inc
sub
mov
inc
and
fdivr
jb
mov
adc
cld
cmp
jmp
xchg
push
scas
inc
(bad)
loop
xor
mov
push
cmovo
dec
mov
xchg
in
sbb
or
or
or
clc
add
cli
not
push
add
in
push
or
dec
test
mov
xor
push
mov
mov
add
ja
aad
sbb
inc
adc
and
push
mov
lds
mov
lods
mov
call
inc
cmps
nop
iret
sbb
push
mov
clc
inc
xor
and
rcl
pop
rol
mov
sbb
inc
cwde
sbb
xchg
test
adc
mov
das
or
(bad)
sub
or
das
or
das
mov
push
or
xor
mov
mov
pushf
mov
xor
adc
push
or
add
or
sqrtps
cmp
sar
or
retf
scas
nop
push
mov
js
or
rcl
pop
adc
mov
nop
test
push
adc
aaa
sbb
add
adc
sbb
cli
xor
aaa
adc
or
movs
add
pop
cmp
xchg
mov
jae
xchg
add
sub
pusha
or
mov
ret
mov
sub
add
mov
xchg
xchg
mov
and
popf
ins
les
fmul
add
and
pushf
pop
inc
or
rcl
jne
lea
dec
aam
js
xchg
aas
and
psllq
test
ins
sbb
shr
fs
add
and
jnp
push
test
xor
aas
lds
aas
and
lock
mov
add
xchg
cmp
(bad)
nop
rcl
or
aaa
dec
test
test
inc
sbb
sub
pushf
push
mov
cmp
push
and
push
pop
mov
lods
sub
pop
or
lods
addr16
jb
lods
and
mov
add
jmp
nop
retf
les
xor
sub
add
xor
js
das
sbb
sbb
or
sbb
in
aad
pop
push
adc
(bad)
icebp
mov
movs
mov
adc
aaa
cmp
sub
scas
popf
sub
jbe
inc
push
mov
inc
ja
lahf
std
sub
and
test
out
mov
or
and
shl
aaa
dec
test
call
shl
inc
xor
sbb
xchg
fimul
fistp
add
aam
imul
xchg
push
jns
jnp
nop
fdivr
xor
push
xor
push
loopne
add
fldcw
push
loopne
out
dec
add
loopne
push
push
sub
loopne
nop
add
dec
mov
cdq
or
aaa
ret
push
call
mov
jo
sub
push
mov
or
jmp
jmp
mov
dec
clc
push
jo
or
cmp
loopne
inc
scas
retf
xor
dec
daa
pop
jno
mov
xor
movs
add
or
in
xor
mov
xchg
loope
je
clc
pop
clc
cdq
or
or
outs
shl
cmp
adc
add
xor
sub
out
add
mov
hlt
gs
add
test
mov
push
cld
jnp
pop
mov
inc
push
rcr
out
test
sbb
dec
sub
add
pop
push
mov
mov
outs
stos
sub
adc
out
(bad)
out
xchg
lods
adc
lea
imul
fdivr
mov
push
push
adc
push
fcom
cli
and
dec
add
add
leave
int
inc
inc
(bad)
cmp
and
ret
inc
shr
in
push
in
cmp
or
inc
mov
jo
jecxz
adc
pop
cmp
rol
add
xlat
or
xchg
outs
movs
xchg
push
cmp
les
adc
(bad)
push
jbe
repz
push
cmp
clc
or
jne
push
inc
inc
add
or
mov
sub
lock
jp
and
lock
mov
sbb
repnz
inc
bnd
add
push
lock
xor
cmp
hlt
jo
call
add
loopne
jle
outs
sbb
sub
and
(bad)
push
push
add
iret
lods
dec
push
sbb
int3
ins
dec
mov
dec
dec
call
clc
ins
int3
iret
cld
(bad)
push
dec
dec
mov
or
sbb
pusha
les
inc
shr
sbb
ret
(bad)
je
dec
dec
enter
cmp
inc
pop
and
inc
call
dec
mov
jo
icebp
pop
ss
mov
push
int3
mov
or
ret
sub
sar
or
adc
mov
test
cmp
adc
test
test
pop
and
sub
add
cmps
out
xchg
or
push
push
push
fs
adc
mov
mov
sub
inc
sbb
pusha
loopne
xor
pop
fisub
loope
fild
mov
add
xchg
in
test
mov
mov
cmc
sub
sub
pop
sub
test
inc
xor
loop
jg
sbb
sbb
ins
jg
adc
add
data16
add
dec
or
add
sbb
mov
ds
jl
pop
in
sbb
add
std
mov
ja
xchg
mov
push
push
iret
fldcw
pop
mov
push
mov
add
adc
dec
adc
shl
pop
ret
ret
push
cmc
(bad)
in
jge
test
les
ins
lds
push
sub
push
stc
out
mov
int
leave
js
outs
into
push
mov
pop
aas
adc
sets
push
mov
add
cmp
(bad)
push
lods
ret
pop
mov
push
mov
add
add
inc
adc
or
mov
or
adc
inc
jb
mov
rcl
mov
xchg
mov
aad
neg
push
push
pop
adc
push
cmc
out
imul
ss
out
mov
popf
adc
rcr
adc
or
cmp
aaa
add
inc
loope
pusha
enter
xchg
add
shl
in
int3
xchg
int3
xchg
or
test
sub
inc
aas
and
xlat
inc
loopne
shl
imul
aas
xlat
and
imul
(bad)
lea
clc
cmps
mov
aam
or
sbb
(bad)
dec
test
ret
popf
sahf
push
inc
jbe
ret
jo
rcl
enter
mov
dec
cs
shl
and
je
or
push
inc
push
and
leave
inc
shr
in
adc
sub
test
dec
inc
test
ret
mov
enter
cmps
xor
fs
push
mov
jne
and
jb
pop
jo
xchg
lea
not
mov
test
push
jns
(bad)
sar
bound
pop
test
add
cmp
mov
cwde
add
jge
rcr
cmps
stos
xor
inc
scas
pop
mov
push
mov
xchg
fs
stos
or
ins
pop
test
mov
jle
cmp
stos
jmp
push
dec
mov
mov
test
nop
or
push
pop
push
or
jmp
pop
push
push
sbb
jo
lods
pop
lods
sbb
push
cmp
xchg
adc
add
push
xchg
lea
or
sti
jge
dec
add
mov
dec
push
xor
pusha
test
in
retf
test
xchg
dec
push
cwde
cwde
leave
and
jb
inc
inc
and
add
xor
nop
nop
xor
nop
pop
push
and
in
fistp
cmp
jne
mov
push
or
sbb
sub
add
test
lds
movs
shr
xor
mov
mov
pop
stos
inc
daa
sbb
lea
call
and
mov
and
jb
jo
xchg
stos
mov
jbe
sbb
test
add
xlat
and
adc
pop
sbb
or
ja
out
das
sub
jbe
inc
cmp
xchg
sbb
lods
outs
adc
and
popa
arpl
outs
lock
js
das
dec
repnz
js
adc
shr
pop
cmp
xchg
add
and
jl
jl
xor
sbb
push
lock
fild
jae
add
adc
fchs
cmp
add
cmp
ror
scas
in
push
mov
xor
inc
scas
adc
loopne
mov
xchg
sbb
nop
je
or
in
(bad)
mov
pop
loope
in
ins
daa
ins
leave
ins
fld
retf
jae
mov
ret
push
mov
push
xor
rol
ror
xlat
inc
fs
inc
and
(bad)
add
push
push
call
lea
xor
popa
xor
scas
daa
xor
jno
mov
cs
je
(bad)
shl
mov
mov
and
pop
gs
pop
in
sbb
xor
xor
or
outs
pusha
in
and
mov
xchg
xchg
or
aaa
enter
leave
pop
mov
mov
and
jb
and
pop
sbb
xor
pop
mov
and
enter
jb
leave
in
push
rcl
jb
and
nop
nop
dec
pop
jb
in
dec
adc
in
and
adc
push
enter
push
mov
nop
in
and
fisubr
xor
dec
mov
leave
add
and
jb
add
pop
sbb
xor
dec
mov
and
enter
call
or
inc
shl
and
jo
cmp
mov
cmp
cli
cmp
cli
cld
sbb
pop
sbb
add
pop
enter
scas
fs
retf
call
in
dec
pusha
xor
inc
cs
xor
in
xor
gs
in
cmp
pop
and
and
inc
mov
lock
add
in
leave
in
aam
aam
xor
add
aam
cmp
fadd
cmp
mov
push
cli
es
clc
sub
cs
in
inc
inc
and
cs
pop
les
jb
fs
(bad)
int3
sub
nop
or
dec
inc
jns
retf
or
add
or
add
xchg
dec
push
and
xor
sbb
xchg
retf
xchg
xchg
mov
nop
and
xor
adc
sbb
and
pop
shl
xchg
xchg
or
xor
in
sbb
aad
inc
xor
xchg
dec
pop
push
cmp
adc
sbb
cdq
add
jne
or
xor
cmp
jb
or
test
adc
mov
and
or
retf
xchg
inc
xchg
inc
ds
addr16
inc
adc
jb
adc
cwde
inc
xchg
sbb
pop
xor
adc
sbb
add
xchg
sbb
push
loopne
add
mov
push
cmp
cmps
outs
lock
inc
push
rcl
cdq
inc
push
leave
loopne
lock
and
push
and
xchg
jno
stos
pusha
test
rcl
std
lea
mov
fld
repnz
or
push
ror
add
add
or
test
xchg
sub
sti
xchg
pushf
in
push
ror
push
mov
pushf
in
sti
hlt
sti
mov
mov
dec
ds
sti
mov
pop
adc
retf
add
add
xchg
mov
cdq
mov
sti
and
nop
pop
nop
sbb
mov
jae
jge
dec
sbb
in
xchg
jae
jo
jo
mov
(bad)
loopne
dec
in
pop
cmp
sti
loopne
loopne
dec
mov
mov
mov
xor
test
lock
push
icebp
loope
pop
mov
in
cmp
adc
pop
mov
cmps
mov
jmp
cmp
aaa
and
add
add
and
xor
(bad)
mov
loopne
fild
pop
adc
out
fild
pop
mov
push
in
adc
or
fcomp
pop
add
les
shl
nop
and
add
repz
add
call
repz
and
int3
jae
imul
test
add
inc
pop
aam
aam
mov
mov
mov
dec
inc
inc
xchg
out
jmp
add
push
add
sub
popa
adc
sub
je
xchg
je
pop
mov
sub
add
cmp
ror
mov
mov
mov
cmp
push
or
aaa
je
lock
inc
jge
in
mov
add
mov
add
push
push
cmp
jle
inc
sub
mov
ror
or
adc
inc
cmp
or
push
test
adc
adc
inc
jecxz
and
and
and
ror
adc
add
push
push
retf
push
cmp
aas
dec
daa
add
rol
cmp
das
or
adc
test
adc
mov
sub
rcl
adc
inc
and
push
add
xchg
and
adc
outs
imul
loopne
pop
add
inc
shr
xchg
adc
push
jns
pop
add
inc
jb
jns
jne
dec
push
fidivr
inc
inc
add
or
shl
adc
push
jmp
mov
test
fild
lods
test
pop
or
add
push
fistp
rol
rcl
adc
mov
cwde
push
dec
loopne
add
ss
fs
add
ret
pop
gs
fldcw
sbb
jle
inc
call
add
ds
je
adc
jmp
aad
hlt
inc
leave
push
ret
push
jo
jo
mov
inc
jmp
add
sti
jmp
xchg
lock
push
push
lds
cmp
mov
ret
jne
push
outs
loopne
shl
or
loopne
mov
repnz
fnsave
xor
call
xchg
shr
cld
aam
dec
cld
mov
push
adc
mov
cmp
(bad)
pop
push
enter
pop
retf
mov
push
jb
mov
in
cs
mov
lds
xchg
xor
xchg
add
es
push
pop
xlat
or
clc
inc
leave
stos
inc
or
mov
xlat
outs
push
rol
ds
sbb
ret
cmps
add
cmps
sub
ret
cmp
xlat
fmul
adc
xor
dec
or
mov
in
lock
sub
test
push
add
and
and
in
cmp
fld
fdivp
push
ret
cmc
stc
xor
adc
fistp
loop
stos
in
sbb
in
jle
mov
data16
cmp
shl
(bad)
call
ins
mov
push
popa
in
push
jmp
int
in
xchg
out
gs
sub
in
adc
icebp
add
xlat
retf
push
inc
xchg
xchg
pop
cmp
push
and
in
push
jb
dec
int
adc
sub
in
int
adc
cmps
loopne
xlat
into
ss
adc
jmp
iret
adc
mov
shl
cmp
rcr
in
or
inc
push
inc
enter
jns
inc
and
in
aam
sub
mov
or
pushf
aad
in
nop
pop
enter
in
jns
pushf
adc
in
pop
enter
loop
sbb
sub
jns
mov
nop
pop
in
fidiv
and
jns
in
adc
mov
fstp
enter
in
jns
cmp
fld
mov
fisub
mov
fbstp
cmps
and
add
mov
mov
loopne
in
jns
and
pop
push
and
or
mov
jecxz
in
push
repnz
mov
xchg
pop
in
in
or
pop
inc
in
inc
dec
inc
sub
rcl
inc
leave
stos
js
pushf
mov
xchg
in
mov
xor
mov
in
(bad)
test
cmp
jmp
mov
mov
mov
lds
bound
jl
dec
mov
inc
sub
adc
enter
nop
pop
in
fadd
aam
clc
or
sub
and
inc
aad
mov
cmp
inc
jae
push
pop
aad
cmps
bound
sbb
add
adc
and
imul
(bad)
in
es
mov
sub
xchg
je
test
xor
lods
sub
cwde
push
pop
in
std
mov
pop
inc
lods
arpl
inc
inc
fsub
and
sbb
adc
(bad)
mov
repnz
hlt
pop
bound
call
sub
jp
bound
add
or
jo
pusha
jbe
pop
dec
xchg
shr
mul
mov
add
clc
mul
cmp
dec
inc
mov
(bad)
sub
stos
mov
out
mov
mov
push
ret
mov
or
cmp
in
(bad)
adc
pushf
dec
cmps
adc
cmp
mov
cmps
xor
fmul
ins
pop
mov
and
push
inc
or
push
in
pushf
cmps
stos
or
pop
cmps
inc
xlat
inc
jmp
and
pushf
pop
dec
adc
inc
mov
inc
imul
xor
and
or
mov
leave
cwde
iret
pusha
mov
enter
scas
mov
add
dec
ror
and
xor
call
xor
xor
xchg
lock
add
and
cwde
or
pop
jbe
push
cmp
sbb
push
dec
mov
test
add
jo
sbb
add
inc
loopne
and
sbb
adc
aam
mov
shufps
outs
and
iret
aam
push
push
mov
(bad)
(bad)
pusha
jmp
jecxz
add
mov
cmp
dec
je
sub
jbe
int3
sbb
or
jae
xchg
adc
xlat
or
dec
add
and
pop
arpl
(bad)
dec
mov
mov
dec
or
call
jne
rcr
push
leave
or
sub
inc
push
mov
repz
cmps
in
add
mov
test
or
inc
pop
adc
es
leave
rol
and
xchg
mov
(bad)
and
jns
hlt
(bad)
hlt
(bad)
cld
dec
aaa
jb
in
leave
dec
in
in
sbb
adc
in
inc
push
mov
mov
aam
xor
dec
pop
push
push
mov
(bad)
ror
push
leave
fnsave
in
leave
inc
les
fdiv
push
dec
scas
dec
lods
add
int3
inc
mov
dec
shl
pop
pop
xchg
xchg
retf
lock
and
and
pop
and
push
cmovno
and
int3
cmc
lods
and
pop
cli
add
inc
mov
nop
mov
mov
leave
and
push
inc
shl
imul
jno
inc
lea
and
bound
ret
mov
ins
inc
and
push
mov
add
add
pop
cmp
cmp
jb
mov
mov
and
dec
sub
adc
or
arpl
test
(bad)
mov
mov
push
push
mov
dec
ficom
sub
adc
outs
test
ror
push
hlt
fld
sub
inc
test
push
xor
pop
daa
dec
push
mov
push
pop
popf
dec
(bad)
outs
add
cmps
ins
jbe
(bad)
adc
push
or
cmps
add
stos
bound
ins
fadd
add
cwde
call
ret
and
clc
jl
stos
sbb
adc
sbb
outs
test
bound
adc
sbb
push
daa
push
mov
test
push
in
inc
mov
mov
aas
mov
mov
mov
iret
sub
sbb
punpcklbw
je
lock
ret
je
test
xchg
pop
jbe
jo
mov
test
add
push
or
add
inc
dec
push
nop
fimul
cld
add
adc
daa
or
fisub
loopne
or
test
out
lods
test
pop
and
ins
iret
dec
pop
xchg
mov
push
aad
adc
(bad)
cmp
ffree
dec
xor
add
cmps
out
repz
or
and
xor
and
jae
mov
mov
(bad)
and
push
enter
dec
ret
and
xchg
sar
pop
mul
mov
pop
ds
mov
pop
push
inc
mov
add
adc
and
xor
dec
add
int3
mov
inc
or
movs
inc
or
or
add
jl
mov
inc
pop
mov
mov
adc
mov
cmp
dec
mov
ror
fwait
retf
les
and
add
mov
dec
neg
dec
add
(bad)
inc
pusha
adc
sti
jl
xor
daa
or
test
push
popa
add
cmp
mov
or
outs
or
shl
push
lahf
push
sbb
jns
in
jb
clc
cld
pop
pop
mov
loopne
inc
or
and
pop
sub
inc
cmp
add
lds
popa
mov
(bad)
out
dec
xchg
and
pushf
xor
mov
push
and
adc
pop
movs
dec
les
adc
inc
ins
sub
aas
sbb
rol
push
inc
dec
inc
mov
adc
out
inc
lea
ja
add
push
mov
xor
ret
sbb
pusha
cmc
movs
and
add
and
pusha
repz
nop
sub
pop
sbb
add
or
call
inc
and
mov
stos
dec
add
lahf
mov
adc
ror
pop
cmp
cld
outs
int3
xor
fwait
or
mov
cmp
add
in
xchg
inc
xchg
xor
mov
add
push
mov
xor
aaa
or
das
rcl
mov
mov
out
adc
sub
xor
and
out
test
rcl
lock
cld
std
inc
loope
addr16
jg
mov
lea
(bad)
xchg
dec
mov
add
imul
rol
push
or
movs
dec
sbb
push
xchg
ins
inc
sub
sub
sub
les
sub
inc
bound
and
sub
mov
je
sub
push
xor
mov
pop
sbb
vprotb
inc
test
xor
fstp
scas
push
push
push
mov
inc
fwait
mov
adc
xor
jmp
jmp
popa
pop
jb
cdq
mov
jno
mov
nop
movzx
jge
push
cwde
mov
shl
or
or
jp
ss
or
sbb
or
es
and
push
or
dec
repnz
loopne
hlt
mov
sbb
mov
sbb
or
(bad)
test
mov
mov
or
add
sub
ds
out
push
or
sahf
out
adc
sbb
scas
and
and
push
xchg
mov
rcl
pop
into
add
stc
mov
cmps
in
aam
clc
or
(bad)
out
jg
jg
mov
push
push
add
adc
pop
pop
cmp
inc
push
daa
mov
mov
fst
push
push
push
das
inc
out
mov
pop
shr
pop
cmp
inc
pushf
inc
push
pop
or
repnz
(bad)
lahf
xlat
bound
dec
or
ins
jo
inc
add
dec
push
push
dec
inc
inc
inc
mov
jne
gs
add
and
dec
push
inc
push
dec
pop
iret
mov
push
cwde
dec
push
push
pop
sub
push
pop
adc
mov
dec
dec
inc
push
das
out
inc
nop
sbb
dec
xchg
ins
inc
ret
cmp
or
add
jmp
js
ss
sub
sub
adc
cmp
add
outs
and
xchg
iret
cwde
push
inc
inc
xor
cwde
daa
add
shr
or
inc
sbb
inc
mov
jne
xchg
add
or
cli
in
mov
xchg
lods
call
inc
inc
jnp
mov
ret
cmp
inc
jne
cmp
xor
cmp
pusha
pop
mov
cld
fucomi
xor
test
mov
lock
dec
out
mov
lock
gs
mov
jmp
dec
add
ins
out
or
mov
add
or
cdq
mov
lock
out
pop
jg
push
ds
gs
imul
dec
outs
outs
inc
add
pop
pop
and
pop
add
mov
and
dec
lock
pushw
jb
out
je
dec
adc
adc
mov
shl
fisttp
sbb
mov
push
sbb
pop
push
gs
adc
inc
adc
cld
repnz
shl
mov
je
mov
add
pop
push
push
jmp
ss
lock
cmp
lock
jne
cmp
and
or
push
mov
in
dec
popa
cmp
jle
push
pop
inc
add
add
or
dec
nop
in
das
xchg
cmp
and
retf
sub
shl
mov
and
jmp
jmp
out
push
push
into
sbb
jo
sub
add
sub
or
pop
pusha
jmp
fild
xor
and
inc
jo
daa
adc
inc
push
dec
adc
and
and
mov
pop
push
lahf
xor
mov
sub
es
popa
and
jl
dec
lock
add
sbb
mov
push
mov
cmp
pop
das
adc
and
inc
es
lock
inc
or
aam
je
sbb
push
and
dec
jmp
xor
and
fs
cmp
add
loopne
jb
push
sub
pop
dec
ret
mov
nop
pop
or
adc
push
jmp
out
jg
push
lea
lea
movs
add
inc
and
ds
jb
push
test
lea
mov
loopne
jge
or
shl
dec
cmps
sbb
dec
dec
mov
add
xchg
adc
iret
cmp
and
cmps
(bad)
sbb
jb
push
test
es
dec
inc
sub
push
push
jge
xlat
inc
sub
push
dec
les
movs
in
leave
pop
std
rcl
js
push
push
mov
cmp
mov
addr16
in
je
aas
or
mov
xchg
inc
xor
add
jge
(bad)
adc
rol
ds
ja
neg
xabort
cmp
or
and
sbb
jmp
xchg
je
push
or
jne
jge
add
push
jmp
ficom
add
adc
sub
daa
dec
fsub
jne
adc
mov
outs
jne
mov
jae
push
outs
add
rol
jle
push
mov
jo
test
lods
mov
clc
daa
mov
and
mov
cmps
repnz
pusha
dec
les
mov
das
mov
push
push
inc
push
xor
cs
dec
dec
pop
cmc
in
mov
cmp
pusha
ret
jb
cmps
mov
fdivr
xlat
scas
or
out
ins
outs
loopne
inc
xor
je
sub
clc
cmp
adc
arpl
fdivr
clc
cmps
and
xor
fcomp
rcl
adc
dec
adc
sbb
inc
dec
repz
call
pop
loope
push
fbld
adc
sub
sbb
and
mov
std
pop
bound
mov
mov
call
into
xchg
call
jb
adc
and
lock
lock
nop
dec
hlt
or
jae
add
push
cmp
xchg
add
inc
jg
jb
xchg
sbb
cld
icebp
ins
arpl
fs
ins
test
pop
push
inc
mov
push
maxps
or
add
sti
cmps
std
xor
arpl
sub
lds
shr
jae
jbe
aad
daa
jg
fbstp
aaa
test
test
inc
inc
jne
pop
mov
inc
pop
cmp
jb
nop
fadd
jg
int3
or
pop
std
inc
jb
scas
outs
sbb
dec
sbb
in
sub
mov
pcmpgtb
sbb
dec
mov
pop
mov
pop
cs
push
adc
leave
mov
dec
outs
cmp
int3
dec
js
mov
or
dec
push
dec
pop
push
dec
or
add
fld
jge
add
inc
or
jo
int
clc
mov
je
nop
mov
loop
outs
xor
add
jae
aam
(bad)
dec
sub
mov
pushf
fld
xor
jae
jecxz
or
nop
and
rol
sbb
mov
or
inc
outs
or
inc
sti
push
imul
push
aas
cmp
mov
inc
into
imul
daa
push
or
dec
jo
pop
aaa
fsub
iret
inc
dec
push
dec
inc
push
inc
push
inc
outs
add
adc
aaa
push
push
inc
add
and
aas
cmp
or
sbb
cmp
push
outs
outs
stc
jne
pop
jle
into
gs
add
adc
(bad)
xchg
hlt
inc
fs
gs
dec
scas
or
adc
movs
in
or
or
test
inc
inc
inc
adc
fdivr
or
int3
add
push
loopne
fimul
push
cmp
dec
xor
fild
outs
pusha
ins
mov
adc
retf
inc
iret
adc
cmc
adc
out
bound
outs
adc
bound
jle
sbb
push
cmp
add
shl
in
js
push
or
inc
pop
sbb
shl
ror
push
(bad)
add
or
sbb
(bad)
icebp
lods
push
outs
aaa
inc
icebp
xchg
imul
add
fwait
loopne
sub
add
dec
push
jns
gs
cmp
repnz
adc
push
pop
or
pop
and
pop
add
mov
std
or
outs
jb
iret
mov
cld
aas
pusha
cmp
sbb
mov
sub
rcr
sbb
outs
add
(bad)
push
inc
inc
dec
cld
inc
icebp
int
andnps
je
sub
inc
ret
cs
dec
fidivr
adc
push
aam
ret
push
or
dec
dec
dec
inc
lods
(bad)
push
or
dec
jno
xchg
and
adc
xchg
xor
popw
xor
mov
fiadd
pop
add
inc
outs
sbb
pop
and
js
pusha
les
pusha
pusha
ja
xor
or
outs
cmps
adc
xchg
sbb
mov
push
xor
pop
dec
pusha
js
push
in
push
push
(bad)
inc
pop
mul
aad
inc
movs
or
push
mov
cmps
xor
mov
or
push
sub
jbe
test
jne
je
pusha
xchg
and
xor
sub
outs
sbb
jmp
pop
test
lods
cs
and
cld
mov
test
or
mov
cmp
outs
add
mov
cmp
test
mov
repnz
add
jbe
data16
and
or
and
nop
sbb
daa
inc
mov
or
ins
gs
jg
pusha
or
rol
ss
adc
adc
pusha
or
iret
push
push
fist
ret
outs
sbb
loop
push
push
cmp
sub
push
cmp
inc
add
adc
adc
pop
push
push
jmp
mov
js
xor
rcl
push
test
or
and
add
fsub
cld
push
mov
add
cmp
and
push
daa
aaa
and
outs
imul
add
test
dec
add
imul
lds
call
jmp
addr16
lods
adc
mov
(bad)
cli
fist
jae
scas
call
(bad)
lods
nop
sbb
movhlps
jg
mov
and
jg
dec
jno
cld
sub
scas
sub
nop
dec
or
dec
(bad)
ja
pop
dec
outs
mov
arpl
cmp
lahf
add
test
sub
or
leave
pop
mov
inc
js
push
in
lods
sub
pop
and
pop
cmps
movs
enter
stc
mov
shr
inc
cmp
arpl
pop
jbe
xchg
imul
cwde
adc
pop
pop
xor
jmp
pop
add
mov
pop
aas
push
int3
pop
and
add
mov
jmp
fwait
leave
mov
cmc
inc
add
loop
test
bound
sub
bound
call
sub
and
push
fdiv
or
lahf
or
cld
mov
pop
rcl
mov
cmp
jns
cmp
inc
jle
jae
adc
add
imul
inc
enter
addr16
fild
out
mov
sbb
fs
fild
jo
test
retf
fbstp
xor
data16
sub
add
ja
inc
cdq
jbe
test
arpl
cmp
pop
add
movs
pop
mov
pop
mov
pop
inc
add
aas
repz
mov
inc
push
pop
mov
imul
pop
js
test
ret
adc
aad
outs
push
mov
fcomip
mov
push
arpl
pop
pop
sub
pop
add
push
push
inc
out
mov
fimul
jle
shr
cvttps2pi
pop
test
adc
and
jbe
and
aam
fcom
push
lock
add
nop
arpl
leave
pop
or
fwait
aam
sub
in
int3
int3
and
push
xor
cmp
sbb
xor
iret
repz
inc
dec
push
pop
adc
movs
into
sbb
mov
pop
(bad)
sub
mov
dec
fisub
sbb
pop
inc
out
dec
or
outs
xor
xor
ret
jbe
cmp
cld
xchg
or
push
xchg
inc
aam
inc
sbb
arpl
cmp
ss
mov
lods
rcr
bound
pop
lock
psllw
movs
jae
repnz
cdq
add
sub
add
ja
clc
in
cmc
push
(bad)
call
aam
cmp
es
mov
mov
push
push
push
cld
mov
ja
sub
clc
fwait
xchg
xor
popf
out
add
xchg
push
sub
clc
scas
fnstcw
jl
call
mov
das
ret
fadd
out
add
sbb
xchg
adc
fst
(bad)
jmp
test
jmp
and
mov
cmp
addr16
pop
sub
push
push
and
fimul
lock
and
xor
nop
add
clc
cdq
mov
xor
push
mov
out
mov
fs
jge
(bad)
jo
sbb
jnp
jmp
push
add
nop
(bad)
sub
stos
loop
push
rol
sub
jmp
mov
adc
iret
mov
push
mov
pop
lock
mov
or
fcomp
loope
or
mov
cwde
pop
int
jl
fisttp
sub
add
adc
push
int
push
into
add
in
dec
and
mov
mov
mov
jmp
add
ins
mov
xchg
fs
jge
adc
adc
sbb
aam
xchg
div
fs
leave
sti
loopne
stos
mov
stos
mov
or
adc
out
das
and
xor
mov
push
pause
sub
inc
aam
pusha
sub
dec
jne
inc
jo
sub
dec
prefetcht2
imul
dec
inc
(bad)
icebp
sbb
ja
sbb
(bad)
sub
test
dec
mov
and
retf
adc
xor
xor
sbb
cmp
or
sbb
mov
mov
inc
test
dec
pop
mov
inc
push
mov
rol
inc
sbb
mov
enter
test
sub
je
push
sbb
into
aam
push
push
sub
pop
aam
int3
hlt
jne
cmp
jle
adc
xchg
nop
popf
pop
jg
xadd
arpl
adc
sbb
daa
movs
mov
push
(bad)
xor
sub
aam
dec
je
and
neg
lock
jnp
sahf
push
mov
and
(bad)
cmp
outs
add
pop
shr
icebp
cdq
clc
add
and
mov
cld
push
lock
pop
inc
fisubr
pop
mov
test
jg
jne
mov
cwde
add
sbb
popa
mov
xor
mov
lock
mov
into
pop
sbb
push
inc
cs
jbe
jge
lock
push
inc
inc
mov
sbb
outs
mov
inc
add
add
cmps
adc
aas
fdivr
push
mov
loopne
fnstenv
pop
in
xchg
add
cmp
lock
in
add
rol
popf
sbb
mov
xchg
jno
cmp
sub
cmp
add
lock
pop
fcom
(bad)
pcmpeqb
pop
pop
xor
mov
fadd
sub
mov
mov
mov
push
lock
dec
add
xor
pop
ins
fmul
cmp
mov
push
push
adc
push
and
hlt
mov
call
loop
mov
mov
int3
dec
cmp
cwde
test
add
xchg
jnp
in
sbb
fadd
aad
loopne
cmp
fadd
imul
inc
dec
lea
and
xor
jl
ins
loope
sbb
mov
sub
dec
push
in
pand
and
ror
shr
(bad)
jecxz
and
gs
ror
cmps
sahf
and
mov
call
inc
mov
fcomip
sub
out
popf
enter
das
adc
sbb
test
sbb
mov
inc
dec
out
loope
inc
test
adc
sub
xor
lea
mov
leave
mov
scas
cld
pop
leave
cli
jmp
setae
jmp
cld
cmps
cmp
xchg
mov
popa
and
rcl
nop
cmp
xor
or
xlat
ret
nop
outs
fldcw
jmp
popa
dec
aas
add
inc
sbb
inc
cmps
and
inc
xor
xchg
push
ds
leave
cld
addr16
xor
sbb
push
cmp
mov
stos
pop
repnz
or
sbb
loopne
jmp
push
test
je
lea
inc
inc
or
xchg
inc
mov
imul
add
iret
je
add
jne
aad
imul
cld
inc
cld
int
dec
je
pop
add
ror
sub
js
je
jmp
(bad)
mov
(bad)
inc
dec
jmp
sbb
jmp
fbstp
mov
adc
dec
xlat
and
(bad)
aam
movs
and
xor
xchg
push
and
mov
xor
pusha
push
and
sbb
lods
jmp
mov
xor
sbb
fnstcw
push
add
pusha
in
dec
jne
sbb
in
sbb
push
xchg
(bad)
cmp
dec
mov
(bad)
cmp
cmp
and
jae
hlt
imul
movups
and
ins
adc
cmp
mov
mov
int3
rcr
pop
push
popf
sbb
adc
je
pop
repnz
pushw
sub
pop
add
je
add
jne
pusha
cmp
jecxz
or
or
outs
arpl
push
sbb
sti
adc
add
or
mov
sbb
mov
mov
es
jae
cwde
cmp
inc
dec
loopne
pcmpgtb
pminub
add
sub
or
imul
pop
add
dec
dec
pushf
test
xor
psubq
movs
push
jg
or
cmp
movs
outs
lods
dec
inc
loopne
pop
sbb
nop
outs
add
or
dec
push
add
jmp
test
stos
gs
push
push
dec
fs
popa
sbb
or
pop
xchg
xlat
loopne
push
imul
sbb
es
sbb
add
pop
ins
jbe
mov
xchg
je
adc
inc
sub
out
popa
or
sbb
mov
sub
xchg
or
outs
ins
retf
sub
mov
bound
outs
test
nop
adc
dec
outs
sbb
sub
xchg
add
push
sbb
dec
outs
lock
neg
ins
jns
nop
pushf
scas
add
sbb
out
add
or
or
push
add
add
sub
gs
push
adc
int3
or
cmps
outs
scas
sub
imul
jne
add
or
add
add
(bad)
push
inc
xchg
mov
jbe
inc
movs
push
or
add
or
je
or
cmps
cs
shr
iret
(bad)
xchg
dec
sub
or
inc
dec
mov
gs
outs
in
imul
dec
fsubr
test
test
jb
(bad)
push
(bad)
push
leave
cmp
inc
mov
adc
mov
outs
scas
xor
inc
mov
jb
ret
mov
mov
inc
push
mov
call
jne
nop
je
or
daa
loopne
pop
call
adc
imul
dec
shl
xor
pushf
scas
pushf
xchg
int3
push
xor
add
test
outs
jno
sbb
add
inc
sub
mov
arpl
aas
(bad)
xchg
push
mov
mov
arpl
xchg
jae
jb
loop
and
or
outs
adc
outs
jbe
shr
popa
adc
or
ins
mov
fcomp
ltr
fwait
add
fild
push
push
rol
add
mov
(bad)
jb
pop
cwde
inc
cmp
mov
in
xor
sub
sub
js
adc
pop
sub
pop
push
jl
mov
add
mov
xchg
jae
cmps
cmp
js
push
adc
(bad)
push
adc
xor
clc
mov
in
aam
mov
pusha
or
pop
xchg
test
repz
movs
lock
mov
sbb
leave
jae
xor
sub
or
cmp
jl
xchg
push
push
xor
or
jae
cmp
loopne
enter
mov
and
out
xor
stos
dec
clc
inc
loopne
xchg
sbb
es
idiv
shl
mov
movs
aaa
adc
cmps
push
mov
ins
sbb
pop
pushf
mov
add
lods
outs
jne
lods
push
push
cmps
mov
out
fadd
sbb
shl
movs
push
push
test
sar
das
cmps
scas
pop
fbstp
pushf
adc
mov
(bad)
cld
(bad)
sti
push
pop
adc
pusha
push
ins
test
arpl
sbb
shr
pop
and
adc
addr16
jo
mov
test
pushf
jae
push
rcl
sahf
cmps
sub
xor
and
pop
adc
cmp
xor
ja
and
jns
push
xor
stos
push
stos
clc
sahf
fnstenv
scas
(bad)
push
and
push
push
mov
mov
mov
jnp
mov
hlt
pop
push
dec
lods
fsubrp
ins
fbld
inc
mov
mov
inc
push
jo
mov
lss
pop
push
lock
or
fwait
or
xor
sbb
inc
xor
in
inc
div
das
jbe
xchg
mov
repz
daa
cmp
push
push
je
xchg
mov
pop
popf
loope
outs
pop
push
int3
push
lock
mov
cwde
mov
pushf
loope
push
push
inc
mov
out
dec
xor
mov
push
je
clc
fidivr
les
mov
push
or
add
pusha
mov
ja
add
js
and
sar
pop
dec
(bad)
mov
mov
ds
fadd
push
adc
fisub
fild
sbb
inc
xchg
das
mov
movs
inc
jbe
sbb
ror
sbb
ins
gs
out
leave
pop
leave
leave
mov
(bad)
popa
sbb
in
imul
call
jns
add
ret
sahf
fst
adc
cmps
push
add
mov
fiadd
mov
jns
pushf
ja
dec
sti
into
inc
(bad)
idiv
les
push
stos
adc
fmul
imul
jnp
mul
mul
js
mov
(bad)
test
adc
repz
in
cmp
or
add
nop
add
nop
add
nop
sbb
and
bound
cmp
push
add
xor
xor
mov
out
mov
loop
ror
cmp
xor
jnp
into
repz
xchg
movs
sbb
popf
in
jnp
inc
push
mov
nop
jl
jl
shl
cmp
inc
js
es
push
daa
mov
cmp
mov
call
push
xlat
and
nop
sbb
clc
js
aad
or
add
pop
push
add
jle
in
pop
mov
mov
sub
add
push
push
imul
fadd
jle
dec
adc
outs
adc
jl
sub
mov
into
(bad)
sbb
push
push
shr
adc
out
cmps
push
mov
cmps
jp
pop
mov
jo
pop
rcl
push
sub
mov
dec
pop
cmp
in
repz
cmc
out
cwde
push
aam
clc
idiv
pushf
mov
sub
mul
jle
add
scas
rol
daa
cmp
not
xchg
pop
mov
sbb
pop
add
fcmovnu
jbe
sbb
jg
sub
fild
jo
or
jl
add
and
es
cmpxchg8b
xchg
and
adc
pop
call
rcl
stos
mov
sbb
out
gs
mov
aaa
cmp
(bad)
mov
mov
inc
aam
int3
add
cmp
repz
push
iret
push
fnstcw
lods
repz
fs
sbb
inc
(bad)
int
dec
add
in
or
loope
aaa
sbb
mov
repnz
inc
fmul
pusha
add
sbb
push
out
in
and
xor
jle
inc
sbb
out
icebp
and
inc
addr16
imul
push
fmul
aam
push
add
in
push
jmp
push
jl
inc
mov
int3
cwde
repz
cli
(bad)
stc
(bad)
clc
push
push
push
fdivrp
data16
push
push
push
xchg
push
inc
jns
out
movs
fsubr
mov
add
pop
lods
push
nop
xor
les
or
imul
and
mov
or
add
(bad)
ds
push
add
cmp
pop
aam
dec
out
inc
rcr
push
popa
outs
add
pusha
mov
or
data16
or
idiv
pusha
nop
es
cwde
push
or
or
outs
fiadd
fadd
push
push
pusha
adc
and
and
movs
pop
or
inc
inc
push
ja
jns
jo
nop
cmp
push
and
add
pusha
stc
jge
push
cli
or
stc
add
bound
and
xchg
call
and
push
gs
ins
or
xchg
nop
dec
pop
loopne
jmp
cmp
ret
sub
lods
mov
jle
add
mov
mov
test
bound
jb
jne
mov
xchg
ins
scas
sbb
sbb
xchg
sbb
loopne
test
push
scas
jae
daa
push
or
or
sbb
push
aam
push
push
sub
push
pop
sbb
jo
in
push
std
xor
les
inc
xor
and
bound
jmp
mov
sar
xchg
pop
ret
dec
in
mov
aad
jg
fmul
inc
dec
jne
mov
pop
pop
sub
mov
test
call
inc
mov
pop
ret
sub
pushf
movs
aad
jp
or
or
mov
jmp
push
(bad)
(bad)
adc
stos
add
cmp
cmp
mov
xor
dec
sub
jmp
in
inc
pop
inc
or
or
or
pop
aam
and
jl
jge
add
push
or
push
imul
xor
or
or
inc
add
bound
push
xchg
mov
into
lock
(bad)
clc
mov
jge
cmps
in
xchg
cmp
push
sub
loope
push
and
xlat
outs
test
shr
sbb
mov
inc
or
sbb
sbb
push
aas
sbb
lds
and
mov
loop
adc
pop
add
(bad)
leave
call
push
les
pop
cwde
inc
sub
not
or
add
popa
jmp
add
ret
sub
inc
call
or
outs
mov
pushf
aas
dec
push
jmp
ds
cmp
sbb
pop
sub
das
push
xchg
xor
test
push
shr
gs
adc
pop
leave
(bad)
rcr
movs
lds
inc
inc
sbb
jno
cmp
je
xor
mov
inc
push
lock
cmp
mov
arpl
cmp
arpl
adc
repnz
mov
add
adc
popa
add
or
mov
sahf
fsubr
inc
mul
dec
imul
dec
and
xor
xor
adc
add
stos
cmp
mov
fwait
or
jbe
mov
jne
or
nop
nop
push
cmp
mov
aam
xor
mov
push
call
jge
jb
ret
lds
in
lods
sbb
pusha
fcmovbe
cmp
test
mov
cmp
out
push
lea
scas
cmp
mov
jl
inc
xor
sbb
push
inc
dec
jne
(bad)
ret
inc
ffreep
rol
add
cmps
push
mov
inc
push
inc
inc
sar
rcr
imul
nop
sub
in
mov
add
popf
push
cmp
xchg
dec
xchg
in
xchg
call
jp
sub
cld
push
pop
mov
(bad)
or
lods
or
fucomip
mov
cwde
mov
adc
lock
inc
call
ret
sar
call
add
call
sbb
pushf
add
jae
jbe
ds
push
sbb
adc
fild
inc
add
jp
or
in
add
xor
xor
jmp
inc
mov
lock
es
icebp
cmp
jne
push
xor
sar
mov
mov
pop
fs
xchg
fbstp
js
test
mov
jle
add
jno
(bad)
adc
push
add
sbb
add
ja
dec
popa
inc
cs
out
psrlq
sbb
mov
mov
sbb
in
int
mov
push
(bad)
mov
nop
mov
pop
pop
movs
adc
inc
sti
jmp
les
hlt
mov
mov
les
clc
scas
jecxz
aam
pop
xor
add
dec
pop
fsub
cmovne
std
xlat
mov
hlt
fimul
cmp
mov
adc
popa
xor
and
cmp
mov
mov
inc
jno
out
add
xchg
sub
mov
cmp
adc
dec
jae
cwde
(bad)
lods
out
sbb
call
ror
loope
pop
js
pop
inc
add
and
retf
push
dec
push
fwait
imul
test
lea
sub
and
daa
push
cld
or
(bad)
loopne
out
pop
mov
sub
cmps
mov
mov
pop
xor
ror
ret
pop
adc
fisttp
xchg
daa
mov
pop
inc
mov
xchg
or
mov
scas
sub
das
mov
push
fwait
cmp
enter
dec
sbb
sbb
jns
arpl
out
lahf
or
ret
jg
inc
cwde
outs
jecxz
jge
mov
out
nop
inc
sbb
or
das
icebp
add
(bad)
je
ja
add
mov
cmp
rol
(bad)
in
and
fistp
sbb
mov
and
sub
cmps
dec
xchg
and
lods
dec
imul
adc
sbb
xchg
out
lahf
push
nop
mov
in
mov
in
ror
fldenv
js
call
cmp
or
call
and
les
jne
loope
cld
mov
mov
pop
hlt
nop
inc
mov
loopne
push
or
add
push
jbe
jae
test
mov
adc
dec
or
shl
adc
shr
fadd
or
retf
jb
(bad)
jecxz
pop
mov
inc
pop
mov
push
aaa
push
ret
sar
in
cld
cmp
call
xchg
pop
pop
mov
out
jg
pop
dec
cmp
jne
ins
ins
xor
fcomip
mov
popa
out
xchg
mov
imul
or
fwait
jb
add
add
lea
mov
clc
das
jl
enter
or
add
jmp
adc
or
loope
xor
iret
adc
push
add
cmp
jne
aas
(bad)
mov
mov
pop
pop
pop
inc
jmp
jns
mov
pop
mov
clc
fcomp
dec
sub
sbb
fldenv
pop
sub
mov
pop
add
sbb
ja
mov
push
loope
shl
mov
pop
addr16
push
out
cmp
pop
mov
dec
jl
mov
lods
add
call
push
lahf
clc
rol
and
push
mov
adc
pusha
sub
xor
sub
or
pop
ret
ja
ret
ror
xor
or
ins
imul
jns
ins
je
sbb
xchg
dec
push
xor
mov
mov
xchg
cmp
dec
cmp
arpl
pop
push
cmp
lea
or
cli
cwde
or
add
pop
fsubr
fptan
cmp
add
aas
pop
ror
xchg
pop
arpl
add
(bad)
ins
ror
int3
push
mov
adc
jo
xor
mov
leave
gs
lock
mov
push
or
push
push
jne
aaa
ds
arpl
aas
add
imul
cmp
aaa
jno
xor
jo
je
std
jmp
dec
sar
dec
ret
pop
mov
fstp
sub
test
pop
jno
or
sar
dec
cld
pop
fstp
aaa
icebp
mov
sbb
push
nop
xor
ret
not
or
push
push
push
call
mov
lock
sbb
cmp
std
or
out
or
pop
das
mov
in
(bad)
or
jge
retf
add
mov
std
fcomp
mov
and
outs
ret
add
pop
mov
ret
movs
adc
mov
dec
int
mov
cmp
(bad)
jge
jl
xchg
rcr
mov
shl
push
push
push
ss
ret
mov
pop
xor
xchg
das
sbb
xor
or
jo
jnp
in
xchg
sbb
bound
sub
sti
in
xor
hlt
push
arpl
stos
mov
sub
add
pop
pop
xchg
fdiv
cmp
pop
adc
addr16
xor
xchg
inc
arpl
test
cmp
clc
and
adc
mov
stc
push
(bad)
and
add
fmul
add
and
add
cmp
add
(bad)
xlat
or
jno
sub
mov
mov
popa
jg
jno
mov
in
sub
dec
lock
or
retf
jl
cmp
in
loopne
test
sbb
add
das
js
cmp
dec
or
loop
jge
sub
enter
fisttp
in
jle
lea
or
inc
cwde
cmc
mov
xchg
fcom
xor
add
bound
enter
(bad)
pop
add
add
addr16
aas
clc
fbld
mov
inc
loop
dec
pop
mov
jmp
out
mov
pop
adc
dec
cmp
int3
(bad)
push
cdq
mov
cmps
outs
mov
clc
imul
ret
fbstp
ror
adc
inc
dec
nop
mov
aaa
or
cli
inc
jle
std
pop
add
mov
test
xchg
rol
stc
add
adc
push
mov
mov
hlt
lock
stc
add
mov
aad
outs
clc
aad
add
inc
cmp
jge
pop
add
adc
add
repnz
leave
inc
rcl
movs
in
stc
std
jle
cmps
shl
lea
sbb
sbb
pop
jg
cdq
xchg
loopne
dec
jecxz
icebp
movs
loope
and
div
xlat
adc
call
and
lock
in
xchg
jmp
mov
mov
or
jae
popf
push
mov
clc
cmp
mov
mov
sar
das
add
sbb
add
jbe
mov
mov
scas
or
mov
(bad)
aas
ret
or
jbe
mov
jmp
jb
jg
loop
lea
mov
pop
jns
pop
mov
add
lods
cmps
sar
adc
cs
shl
xchg
lods
or
outs
mov
call
std
jg
dec
mov
dec
je
xchg
dec
inc
jne
fimul
aas
aas
into
lods
adc
movs
dec
add
and
clc
xchg
inc
lea
pushf
add
nop
and
sbb
cld
addr16
xchg
add
pop
pushf
xchg
xchg
dec
test
mov
in
jle
ins
xor
fsub
ss
mov
jmp
cli
xchg
cmp
je
ins
iret
push
pop
mov
(bad)
jmp
dec
add
loop
sub
mov
inc
aas
popf
xchg
bound
pusha
aam
in
and
inc
adc
mov
les
push
pop
aaa
jo
mov
xchg
cwde
and
add
sub
mov
scas
or
add
mov
fwait
xchg
cld
in
push
jo
enter
sub
fisubr
add
test
cld
mov
ror
and
pcmpgtd
pop
sar
mov
shl
sbb
call
std
in
cmp
je
lahf
or
ds
popf
rcl
es
xlat
inc
inc
test
call
jae
mov
aad
ds
fild
add
cmp
mov
clc
mov
inc
or
leave
je
stos
adc
btr
cmp
aas
jl
loope
mov
cs
push
inc
adc
pusha
adc
jmp
jmp
dec
push
mov
dec
jno
rol
dec
inc
call
push
fs
adc
je
sbb
push
cmp
ja
and
bt
jb
cmps
add
and
(bad)
and
ret
jg
lods
adc
push
inc
cmp
jne
inc
dec
jne
les
cmp
mov
xor
push
mov
push
push
xchg
push
ret
push
add
xchg
mov
movs
aaa
in
mov
push
div
sub
or
retf
pusha
mov
in
lock
sbb
xchg
add
or
add
push
or
inc
push
or
inc
and
mov
rol
cmps
mov
ins
xor
arpl
add
add
dec
mov
data16
pusha
add
and
ret
mov
inc
xor
imul
call
push
sti
cmps
push
js
add
sub
and
loopne
shr
push
xor
aaa
add
adc
loopne
inc
add
sbb
jmp
jae
mov
rol
adc
in
dec
mov
add
cmp
inc
inc
push
fdivr
or
enter
cli
push
or
add
jecxz
push
imul
pop
movs
push
dec
test
adc
or
scas
jle
pop
push
push
mov
mov
scas
sub
repnz
dec
pushf
inc
test
je
gs
aam
xchg
xchg
mov
push
push
adc
shr
xchg
in
adc
add
mov
mov
dec
outs
xor
mov
jnp
cld
xchg
fwait
lds
pop
pop
adc
in
icebp
js
popa
or
dec
add
adc
push
xchg
sbb
scas
popa
jnp
or
or
pop
in
xor
add
pop
jmp
mov
jne
pop
cmps
xor
pop
test
push
or
cmp
xlat
add
aam
aam
mov
mov
and
xchg
xor
dec
movs
pop
xor
sbb
shl
dec
or
aam
sub
inc
hlt
or
add
jg
lock
jne
arpl
aam
sbb
xchg
mov
jmp
bound
movs
in
addr16
or
cmp
movs
and
ins
pop
mov
sbb
and
lock
xor
ret
out
or
cwde
mov
repz
push
push
add
outs
xchg
mov
xchg
or
jbe
push
mov
cmp
(bad)
sub
inc
jecxz
inc
jl
je
xchg
in
push
(bad)
adc
xchg
test
jo
push
retf
mov
add
push
ret
sub
aas
mov
mov
cmp
fsub
imul
jb
and
bswap
in
mov
nop
xor
inc
add
ror
(bad)
jo
jbe
ror
mov
into
movs
daa
(bad)
nop
int
inc
pop
pop
jg
pushf
js
pop
xor
jecxz
out
mov
adc
loopne
push
sub
cmps
xchg
cmp
pop
pop
jnp
call
cmp
aam
clc
add
iret
dec
mov
sbb
rol
pop
lock
ret
fsubr
fcom
div
sub
add
or
test
mov
push
and
and
clc
inc
sbb
cmps
inc
add
xchg
popa
clc
dec
and
daa
pushf
inc
dec
pusha
cmp
ins
aaa
pop
add
cld
ins
ins
cmps
jne
outs
pop
loope
movs
jo
test
adc
push
ins
mov
push
push
popa
adc
mov
cmps
push
adc
movs
jo
adc
mov
or
test
mov
je
adc
loopne
inc
call
xchg
lds
aad
xor
mov
movsx
inc
repz
ins
test
imul
xchg
in
pop
sti
lahf
ret
dec
test
jl
inc
xchg
hlt
mov
mov
inc
ss
jge
cmp
jne
sbb
ja
and
fs
pop
adc
push
sbb
xor
pmullw
jne
je
inc
xor
gs
pop
aas
push
or
mov
stos
(bad)
jne
fwait
mov
add
fidiv
leave
icebp
and
(bad)
mov
mov
push
call
inc
adc
jl
pop
aas
nop
adc
sub
adc
arpl
jp
mov
add
mov
shl
popa
push
lods
adc
mov
or
dec
push
push
add
fdiv
(bad)
mov
sub
jb
dec
je
jmp
pop
clc
call
pop
ret
in
adc
nop
loop
test
scas
aas
test
mov
ret
or
jmp
mov
add
xchg
pop
and
movs
aad
sbb
and
ret
ja
shl
outs
xchg
hlt
sbb
ja
dec
fwait
cmp
jle
repz
pop
ret
retf
out
fwait
test
sub
imul
enter
pop
mov
and
mov
mov
cmps
xor
hlt
jbe
fadd
add
xor
bound
stos
cmps
ss
repz
imul
adc
push
add
add
xor
inc
movs
sub
sub
iret
xchg
and
add
nop
add
push
dec
je
arpl
mov
sub
mov
aaa
adc
daa
(bad)
dec
in
mul
loope
or
repz
adc
shr
clc
aad
lahf
ret
mov
inc
xchg
ret
clc
inc
adc
out
(bad)
push
inc
push
mov
add
add
push
and
push
pop
(bad)
lock
inc
pusha
inc
xchg
pop
pop
pop
and
push
add
jns
nop/reserved
or
mov
inc
xor
je
and
xor
inc
ds
xor
and
fs
jp
enter
mov
icebp
ja
lock
lea
dec
push
in
push
ds
adc
jne
xor
mov
cmp
and
jns
imul
mov
test
pop
and
pop
pop
lods
aad
jecxz
hlt
aad
rcr
jo
xlat
lock
ss
add
jns
and
ret
imul
add
xchg
add
enter
stos
and
lods
call
cmp
jmp
and
add
lods
mov
cs
inc
xchg
nop
nop
fstp
inc
xchg
xchg
mov
add
dec
mov
pop
mov
mov
add
loopne
loopne
add
or
inc
scas
mov
jb
test
jo
jbe
mov
mov
cmp
test
add
and
loopne
test
in
aas
push
sub
add
add
call
test
lock
pop
es
pop
call
adc
fwait
add
mov
push
dec
lea
ins
pop
add
ret
cmc
xchg
pop
or
in
enter
jmp
loope
add
(bad)
loop
rcr
or
add
pushf
or
push
cmp
inc
inc
or
nop
ins
lock
or
dec
cld
sbb
jbe
out
or
push
ror
mov
pop
xor
or
in
movs
jb
inc
xor
sbb
lock
xchg
inc
popw
fs
or
or
test
jo
ss
bound
jge
mov
ds
cld
imul
sbb
(bad)
lock
outs
neg
pop
xor
push
loop
cmp
inc
jg
retf
lahf
adc
aad
adc
xlat
cmp
add
call
or
and
push
adc
add
mov
pusha
sbb
jno
call
add
mov
stos
and
push
and
mov
ret
shl
popa
push
cld
(bad)
loopne
mov
mov
popa
cmp
xbegin
(bad)
clc
jmp
mov
jg
sub
lods
in
or
pop
adc
into
jmp
into
mov
(bad)
loopne
sbb
imul
or
clc
clc
adc
cmp
je
add
and
lea
push
adc
mov
mov
pop
dec
push
jmp
add
sti
pop
sbb
cwde
xchg
mov
pop
daa
jmp
pop
fst
fcmove
add
sbb
mov
adc
(bad)
loopne
adc
shl
mov
add
fnstcw
adc
movs
and
sbb
adc
int
dec
cmp
pop
repnz
fcom
mov
lods
pushaw
inc
hlt
push
mov
cmps
loopne
cdq
adc
test
sbb
scas
dec
mov
add
lock
mov
add
retf
(bad)
mov
dec
jmp
mov
adc
xor
ja
das
sbb
(bad)
je
push
jo
nop
daa
xor
mov
cmp
cmp
adc
daa
hlt
mov
cmpxchg
enter
les
(bad)
aam
cmp
jmp
inc
mov
dec
or
or
sub
add
push
xchg
xor
adc
cmp
mov
jne
add
sub
mov
daa
mov
mov
out
nop
pop
dec
mov
icebp
mov
pop
movs
adc
add
loopne
and
mov
and
mov
mov
das
call
and
movaps
cmp
cdq
sub
scas
mov
inc
or
add
adc
je
dec
sub
sbb
adc
cmp
xchg
or
cs
imul
xchg
fsubr
sbb
inc
sbb
dec
je
jmp
test
clc
adc
inc
in
push
push
and
movs
adc
in
mov
daa
retf
adc
lods
retf
and
call
inc
push
mov
pop
ret
aaa
sub
pop
mov
sub
(bad)
xchg
test
add
enter
inc
popaw
mov
ret
push
cmp
adc
stc
pusha
or
lea
in
(bad)
fst
jbe
stos
fld
inc
adc
push
add
adc
xchg
fld
push
shl
sub
add
push
xor
inc
dec
dec
push
fsub
push
les
and
mov
dec
add
popa
push
xor
fisub
xor
lea
in
in
not
mov
cmp
aas
mov
(bad)
jmp
ret
push
adc
or
movs
xchg
cmc
mov
jge
lea
jmp
(bad)
and
dec
mov
shl
add
repz
shr
add
adc
dec
clc
iret
out
test
bound
(bad)
iret
push
mov
mov
sbb
push
adc
aas
mov
ret
(bad)
aam
add
dec
push
sbb
push
in
xchg
stc
repnz
pop
mov
(bad)
push
cs
or
mov
hlt
cmp
cmps
dec
sbb
mov
sbb
mov
pop
(bad)
sub
mov
adc
outs
add
js
fs
mov
sti
test
es
rol
pop
pop
pop
push
cmp
outs
adc
inc
sbb
mov
pushf
or
or
nop
and
jb
jmp
dec
and
or
pop
push
icebp
(bad)
inc
adc
lods
or
sub
push
ror
push
sbb
lock
and
adc
inc
and
cmp
add
rcr
fs
add
jne
mov
dec
js
aas
dec
(bad)
jg
cmp
jl
add
cmps
(bad)
setbe
pop
lock
(bad)
ins
push
sbb
or
or
xor
inc
jge
push
or
outs
sbb
jle
inc
into
aas
sub
stos
test
pusha
hlt
jl
add
add
cmp
shl
lea
test
adc
sbb
sbb
mov
je
jb
mov
daa
pop
jbe
fisttp
inc
jo
je
loope
sub
movs
cmp
stos
dec
test
sbb
add
xchg
inc
push
jge
or
shl
jle
jns
ds
or
enter
adc
add
mov
push
cmps
dec
loope
ror
mov
out
rol
test
ret
or
out
es
mov
adc
ins
ret
jno
in
jp
dec
sub
fwait
jbe
fsubr
push
pop
and
pusha
pop
iret
mov
push
movs
cmp
cmp
add
jns
sar
ins
xor
inc
loop
sbb
dec
push
inc
xor
dec
js
ja
pop
ror
or
(bad)
arpl
and
aas
sub
stos
xor
jne
pop
adc
mov
(bad)
movs
sbb
test
and
lahf
cmp
mov
jmp
repz
mov
mov
sub
adc
cmp
out
jne
sbb
lods
rcr
mov
jne
loop
mov
cdq
push
push
mov
inc
inc
add
xlat
adc
nop
stos
and
clc
jecxz
pushf
add
adc
push
mov
call
or
pop
jl
sbb
fdivr
nop
outs
inc
mov
outs
or
sub
sbb
call
iret
jbe
fwait
push
push
push
pushf
push
add
test
out
add
ror
shr
jg
xchg
lock
std
call
jbe
cld
or
jge
fcomp
jmp
dec
in
pop
loop
clc
dec
out
call
mov
xor
cmp
add
or
jbe
add
adc
ds
push
mov
in
scas
adc
les
pop
sbb
mov
mov
adc
adc
push
out
ins
hlt
and
adc
dec
cmp
and
mov
enter
and
aad
inc
and
cmp
add
xor
iret
lods
xchg
or
mov
ror
shr
ins
inc
shr
sbb
mov
mov
dec
jo
inc
mov
lock
pop
mov
push
add
rcr
dec
and
das
dec
fsub
or
pop
adc
dec
dec
sub
inc
xchg
enter
lock
shl
xchg
adc
jle
test
xchg
xchg
mov
pop
sbb
add
sbb
cmp
(bad)
or
add
(bad)
sbb
inc
jo
jae
sbb
scas
and
mov
mov
aas
adc
enter
ss
mov
add
or
xor
add
cmp
or
jmp
movzx
xor
mov
(bad)
push
mov
push
dec
sbb
mov
out
pop
cmp
lds
stos
clc
or
fdivr
les
shr
leave
cli
jae
sub
test
add
into
mov
rol
icebp
repnz
mov
out
adc
cmp
dec
dec
or
adc
lahf
int
or
add
add
sbb
add
out
(bad)
mov
cmp
and
out
adc
es
or
lock
xchg
xchg
mov
push
js
adc
push
add
mov
cdq
fdivr
jbe
and
sbb
dec
or
outs
inc
add
pop
pop
addr16
and
std
in
idiv
and
and
inc
es
aas
push
test
inc
add
and
push
loope
loopne
cs
sbb
xor
cmp
hlt
cmp
je
mov
mov
inc
clc
adc
loopne
rcr
sub
stos
and
or
and
movs
xchg
test
aam
sub
int
rcl
xchg
mov
in
outs
(bad)
mov
mov
add
nop
jle
cmp
jle
or
jle
mov
sub
sub
test
mov
add
popf
and
mov
xchg
lar
mov
pop
daa
xor
and
push
lahf
or
push
aas
xchg
rol
or
(bad)
and
stos
xchg
push
add
inc
mov
loopne
or
adc
pop
stos
imul
aad
int3
call
cld
or
pushf
pop
nop
xor
xlat
adc
inc
adc
or
jg
sbb
sbb
out
adc
xchg
mov
adc
outs
nop
adc
or
outs
arpl
outs
mov
jg
push
or
ja
lods
add
push
dec
add
xor
push
jno
push
adc
adc
dec
sbb
mov
das
nop
(bad)
adc
mov
inc
stos
sbb
jne
cmp
mov
rol
pushf
sub
dec
pop
sbb
push
mov
xor
pop
int3
nop
add
pop
or
cmp
(bad)
out
out
enter
mov
add
mov
mov
inc
jmp
out
push
xor
adc
sub
dec
and
push
fs
add
add
imul
pusha
fsubrp
jg
add
in
jne
mul
mov
sub
(bad)
cmc
inc
loopne
int
cmc
hlt
int
sub
or
adc
cli
inc
dec
cmp
inc
mov
stc
cmp
(bad)
inc
ss
or
add
in
pop
sbb
mov
jle
inc
or
adc
mov
mov
add
push
mov
imul
add
or
xor
inc
add
mov
loop
leave
ret
pop
cmp
addr16
add
add
fisub
(bad)
jmp
jmp
add
push
inc
inc
fsub
loop
(bad)
repnz
retf
mov
mov
je
push
ds
pop
jbe
mov
sbb
jp
leave
sti
ins
xchg
sbb
ja
arpl
add
idiv
shl
dec
das
and
mov
mov
inc
iret
outs
je
sbb
lods
mov
mov
xchg
pop
mov
inc
sub
xchg
pop
daa
sbb
int3
mov
push
(bad)
clc
xor
inc
pusha
mov
cmp
sbb
dec
xchg
inc
cld
dec
out
retf
(bad)
mov
popf
cmp
cmp
and
imul
imul
adc
mov
sub
mov
sub
jo
xor
adc
sub
js
cmps
scas
push
sbb
fstp
fwait
mov
(bad)
loop
in
jmp
aaa
dec
pop
inc
cmp
jl
push
movs
retf
sbb
sbb
mov
mov
mov
dec
mov
(bad)
out
and
mov
clc
fldenv
cmp
cmp
sbb
cmp
lods
or
sbb
xchg
cmp
fiadd
inc
inc
test
mov
jno
xor
xchg
inc
inc
mov
(bad)
jl
push
mov
and
jmp
push
adc
adc
xor
adc
xchg
mov
adc
pop
sub
inc
scas
dec
je
inc
mov
sub
rol
cmp
xlat
xor
int
pop
and
jne
mov
add
mov
pop
add
mov
arpl
sbb
adc
stos
pop
pop
mov
dec
loop
xchg
push
adc
data16
inc
mov
pop
movs
cmps
or
jg
lock
cld
fistp
cmp
mov
sbb
sub
inc
sub
adc
lds
(bad)
adc
data16
or
inc
adc
lea
pop
rcr
xor
movs
mov
ret
xor
daa
jp
cmps
add
pop
mul
pop
cld
cmp
idiv
dec
and
push
mov
adc
or
hlt
shl
lock
add
or
hlt
xor
cmps
fild
dec
inc
or
iret
in
fimul
add
pop
in
nop
push
aas
adc
adc
xchg
sar
xor
or
sub
push
inc
retf
jmp
push
pop
xor
add
push
pop
jmp
sahf
cmp
neg
push
push
clc
dec
inc
mov
mov
adc
stos
jo
les
sbb
std
cmp
movs
cmp
xchg
sub
mov
add
nop
pop
std
cmps
clc
mov
and
cmp
sub
cmp
retf
dec
fcom
sbb
push
or
push
sbb
aam
push
adc
hlt
aas
shl
add
jg
jns
shl
or
aad
pop
int3
push
adc
or
cmovns
mov
xchg
mov
pop
dec
fcomp
fmul
mov
or
inc
push
clc
fcmovnb
xor
clc
arpl
(bad)
les
push
mov
dec
push
rcl
mov
mov
jmp
sub
inc
mov
jne
inc
add
or
rol
rol
scas
outs
ret
adc
fs
lods
hlt
inc
adc
xor
data16
movlhps
cmp
xlat
es
xor
movs
dec
and
jbe
jg
imul
xor
in
rcr
js
sbb
(bad)
jge
cmc
pop
inc
int3
mov
cmovbe
loopne
cmp
pop
jne
push
rol
push
dec
std
push
aaa
inc
cmp
xor
loopne
je
cmps
jl
cmp
jmp
mov
je
or
push
out
mov
clc
jmp
mov
jo
dec
lock
inc
outs
fcom
lods
in
mov
das
jle
push
cmp
pop
pop
aad
dec
cmps
xchg
jecxz
or
sub
mov
mov
mov
jmp
mov
loope
mov
jbe
ja
mov
jg
sbb
push
mov
sbb
push
sub
pop
add
add
mov
out
add
fist
rcl
rol
lock
pop
pop
pop
iret
jl
mov
mov
dec
mov
adc
xchg
or
or
or
nop
nop
out
cmp
aad
test
dec
loop
inc
ins
push
mov
or
repz
xchg
fmul
sub
sub
push
or
lahf
jecxz
(bad)
jne
mov
inc
lods
ins
add
sub
(bad)
pop
add
int3
sub
call
fsubr
mov
test
mov
loopne
mov
jno
call
inc
pop
push
push
inc
pusha
ins
push
sbb
sub
add
test
imul
aas
sub
push
(bad)
adc
inc
inc
cmp
add
xor
mov
xchg
mov
hlt
xor
mov
out
fimul
push
add
add
dec
jl
fcom
xlat
scas
dec
lods
movs
inc
aad
push
in
add
lods
adc
jecxz
(bad)
in
push
lock
and
jo
imul
xchg
ins
xor
pop
cmp
sub
inc
lock
add
pop
mov
dec
sbb
or
add
jp
pusha
pop
dec
sub
retf
loopne
loope
(bad)
jmp
mov
jnp
jp
das
(bad)
sbb
push
and
ret
mov
xchg
jne
outs
pop
pop
outs
das
add
adc
clc
call
bnd
icebp
xor
dec
sbb
and
bound
pop
call
out
cmp
in
add
fnstsw
fwait
sub
pop
enter
shr
sub
loopne
fadd
pop
mov
adc
outs
mov
xor
mov
mov
out
push
clc
out
mov
int
call
sbb
adc
rcl
lea
rcl
popa
adc
loopne
sbb
and
jmp
jne
test
pop
mov
je
data16
pusha
pop
jmp
les
sbb
out
shl
xchg
arpl
inc
imul
loope
rol
rcr
(bad)
mov
mov
scas
pop
call
push
in
sbb
pop
rol
xor
pusha
sbb
mov
xor
fadd
pop
fdivr
fldenv
fwait
and
lock
push
pop
aad
sub
adc
push
repz
lock
adc
adc
out
in
or
clc
call
jl
sub
inc
mov
ror
inc
stc
push
adc
xor
adc
add
add
sbb
(bad)
xor
test
rol
das
cmp
loope
(bad)
pop
pop
pop
jbe
das
lea
out
or
into
inc
prefetcht1
pop
cli
loopne
push
inc
add
sub
adc
sti
ror
sub
fimul
sub
frstor
sub
sbb
xor
repz
out
sbb
inc
repz
mov
adc
sub
lock
pop
sub
mov
aam
or
test
popa
ret
push
mov
or
pop
cmp
fld
gs
add
in
lahf
jg
aaa
aas
inc
enter
fstp
add
gs
out
inc
ret
hlt
adc
pop
jb
or
or
or
call
or
mov
fst
xchg
adc
sub
push
fst
fld
sbb
or
mov
ja
push
fstp
and
popa
mov
add
or
and
jns
out
lods
mov
mov
or
or
mov
nop
std
inc
sbb
push
pop
clc
mov
sub
cmp
jb
jmp
sbb
in
in
fsub
sbb
dec
rdtsc
in
adc
jge
adc
inc
inc
popa
ins
jae
pop
add
push
jb
add
add
adc
xchg
dec
jne
ins
xchg
sub
xlat
inc
je
or
push
ss
cmp
cmp
(bad)
lahf
movsx
add
dec
xor
mov
call
jecxz
lods
pop
pop
outs
ret
adc
jo
inc
mov
maxps
mov
mov
(bad)
and
jecxz
mov
mov
and
cmp
jne
mov
push
outs
adc
sbb
clc
rol
xor
sbb
jecxz
(bad)
push
xchg
jp
pop
popa
cld
xor
lea
loopne
pushf
mov
dec
and
and
inc
ja
pop
add
cmps
jo
movs
or
test
daa
test
sub
call
xchg
add
popf
fsub
xchg
mov
xlat
jmp
ficomp
xor
or
push
sbb
sub
pushf
(bad)
pop
ret
ja
add
push
jns
loopne
sub
pop
mov
(bad)
and
adc
cmps
mov
xlat
clc
sub
test
hlt
ja
dec
or
cmp
ja
sub
jne
xor
sub
mov
mov
add
add
add
jl
ins
and
out
push
jo
ret
mov
pop
mov
jb
mov
aas
popa
enter
jae
into
sub
mov
sbb
(bad)
test
push
lock
ror
jmp
add
test
mov
add
popa
adc
and
xor
pop
xor
adc
xor
(bad)
xchg
mov
xlat
int
ds
cmp
outs
jmp
dec
fimul
sti
xchg
cmp
push
fist
push
pop
loopne
pop
sub
mov
js
mov
mov
gs
sbb
call
add
inc
ror
add
lods
mov
stos
pavgb
add
in
inc
js
lods
sub
adc
mov
cmp
jmp
cld
mov
or
les
(bad)
loope
mov
loop
rcr
mov
push
hlt
mov
js
lea
loope
imul
add
add
fcom
or
push
outs
lock
mov
out
sub
sub
mov
retf
inc
clc
xor
test
mov
movs
pop
cmp
or
(bad)
mov
push
mov
stc
xchg
push
mov
(bad)
in
loop
push
(bad)
daa
add
sub
and
xor
dec
mov
pop
or
push
stc
sbb
fist
ja
loop
out
cmp
jle
mov
jecxz
cmp
shl
inc
sbb
mov
jo
pop
nop
jns
xchg
cmp
ds
adc
call
cmc
add
and
aam
mov
ficom
in
ret
sub
dec
or
cmps
mov
and
test
mov
mov
(bad)
mov
dec
loopne
mov
or
and
fidiv
mov
aam
cmp
adc
fcomp
sub
je
fcomp
sbb
xor
push
pop
or
daa
fistp
mov
cmc
test
cdq
xchg
push
lea
sbb
shl
into
sbb
add
sub
fsub
sbb
sbb
je
and
adc
push
push
or
bnd
mov
fild
push
push
and
and
pop
in
ror
and
call
pusha
loopne
lea
add
(bad)
das
lock
mov
mov
gs
sub
push
jge
mov
in
sub
sub
sbb
shl
and
dec
dec
test
xchg
xlat
aam
mov
fcomp
pop
pop
(bad)
sub
retf
push
fstp
lea
mov
jae
dec
sbb
out
adc
retf
jnp
and
or
jne
push
in
cmp
retf
test
js
push
popa
xchg
aam
je
mov
adc
sbb
cmp
arpl
inc
sub
or
(bad)
sbb
lar
push
shl
out
aam
mov
mov
retf
mov
addr16
pop
clc
inc
enter
jnp
popa
inc
sbb
je
xchg
imul
inc
aaa
fisttp
mov
cmp
xor
adc
inc
mov
jae
mov
xor
adc
mov
inc
mov
sub
lds
add
xor
fld
and
jne
xchg
rol
mul
movs
lock
pop
xlat
pop
and
add
push
push
imul
push
or
pop
pop
jmp
and
popf
arpl
dec
je
add
pop
in
jecxz
popa
xchg
js
dec
jmp
adc
xor
dec
stos
pop
cld
cmc
cmp
mov
pop
xor
jbe
aas
dec
in
mov
or
jb
test
push
push
cmp
rol
mov
push
mov
int3
mov
in
test
bound
fst
or
sub
sub
inc
ins
xor
fisttp
adc
dec
adc
mov
mov
addr16
ja
bts
jmp
(bad)
sub
inc
movs
sub
adc
xchg
push
xchg
das
ret
pop
push
cld
dec
and
cmp
push
sbb
mov
pop
ret
std
and
in
daa
fwait
pop
pop
pop
ret
or
adc
jmp
std
je
sub
jne
sub
xor
or
clc
add
jo
push
sub
push
je
push
adc
push
sbb
push
add
jmp
cld
fnstcw
ds
mov
push
mov
popa
or
dec
cld
jnp
xor
or
lea
mov
por
sbb
jae
push
hlt
ds
or
bound
or
cmp
jae
add
pop
push
lock
arpl
push
sahf
shl
cmp
add
or
pop
lock
outs
add
movs
out
or
adc
jmp
mov
mov
push
stos
xchg
add
aaa
push
sbb
cmp
xor
jae
popf
add
push
xor
pop
cmc
test
in
jmp
out
sub
push
out
adc
adc
xor
icebp
cmp
shr
and
scas
shl
loopne
scas
cmp
pusha
fmul
mov
les
sub
xor
leave
sbb
in
jno
adc
pusha
daa
out
ja
in
cmp
jnp
test
push
enter
(bad)
out
sbb
adc
movs
and
sahf
out
mov
pop
inc
push
dec
pop
ins
jl
and
mov
jecxz
xor
pop
pop
mov
in
and
add
xor
dec
ret
(bad)
mov
pop
fistp
das
pop
imul
pop
adc
adc
jmp
test
inc
mov
xchg
add
mov
sbb
or
sub
in
popa
xchg
xchg
pop
lods
pop
das
add
mov
cld
xor
test
inc
scas
sbb
sti
add
add
pop
sub
in
inc
aad
jno
mov
adc
ffree
mov
out
jmp
pop
fimul
adc
cmp
shld
movs
shl
clc
loop
cmc
sub
inc
cmp
ja
mov
or
mov
inc
fcom
es
movs
adc
add
daa
add
push
pop
les
or
or
push
or
mov
push
dec
js
adc
mov
dec
xchg
pusha
daa
xor
into
or
or
push
inc
add
adc
jmp
jo
(bad)
mov
imul
add
pushf
dec
jno
sbb
mov
mov
inc
sbb
bound
xchg
ror
push
fwait
inc
push
pusha
inc
mov
sar
add
repz
sbb
jle
cmp
or
aam
adc
aaa
je
push
sub
mov
and
and
jg
imul
in
pop
xchg
dec
sar
mov
movs
pusha
lods
or
cld
push
cmp
or
icebp
stc
mov
or
push
xor
pop
xchg
test
xchg
test
inc
pop
(bad)
lahf
add
dec
cld
icebp
xor
sub
ret
std
adc
pop
clc
fcomi
inc
outs
xor
cmp
rcr
jo
loop
inc
in
mov
or
fld
mov
or
mov
inc
in
push
add
ror
icebp
in
adc
push
dec
repnz
movs
cmp
push
test
inc
call
push
pop
mov
sub
aas
sbb
xor
popa
not
cmps
push
jge
push
push
out
rcl
in
out
neg
push
pop
push
das
push
jg
jnp
jne
lods
pop
ret
pop
jg
addr16
bound
out
push
imul
jo
or
mov
lods
shl
jp
jmp
shl
ss
lock
mov
mov
out
nop
mov
leave
imul
pushf
jl
pusha
sbb
call
pop
loop
mov
lea
add
pop
test
sub
jmp
aad
mov
popa
sbb
sub
push
mov
add
push
lock
test
das
dec
mov
ret
jno
inc
fcomip
and
add
mov
xor
xchg
loopne
sbb
add
loopne
(bad)
out
adc
inc
(bad)
dec
push
pop
arpl
je
or
rol
inc
test
push
xchg
or
xor
fwait
dec
dec
sbb
inc
es
frstor
add
pop
aaa
out
mov
inc
(bad)
xor
clc
add
cmp
jle
sbb
pop
cmp
and
retf
add
sub
adc
ret
sub
add
sub
pop
jnp
xor
aaa
(bad)
(bad)
dec
or
dec
clc
xchg
(bad)
aas
push
sub
aaa
sub
push
mov
add
add
int3
cmp
pop
or
xchg
pop
fcomp
inc
test
in
ds
mov
mov
pop
add
sbb
jp
push
push
in
add
sub
dec
clc
pop
dec
loop
movs
push
or
inc
add
fistp
inc
adc
add
(bad)
ss
in
mov
(bad)
mov
iret
mov
jae
jg
shl
test
dec
xchg
add
lahf
jp
mov
rol
pop
loopne
cmp
test
or
push
mov
dec
ja
xor
out
nop
fisttp
nop
(bad)
out
in
cwde
(bad)
and
es
and
cmp
mov
outs
in
jae
adc
pop
sub
jmp
retf
dec
dec
and
nop
xor
pusha
pavgw
test
in
push
pushf
push
dec
mov
fnsave
fistp
clc
daa
adc
or
dec
sbb
outs
je
xor
(bad)
lods
push
adc
sbb
movs
pop
das
pop
or
pop
dec
jge
add
cmps
rcl
mov
jae
les
jbe
(bad)
push
test
sub
inc
call
dec
out
push
inc
sti
lock
xor
test
sbb
inc
inc
clc
add
mov
test
scas
sub
adc
lea
aas
mov
repnz
jns
cld
mov
fmul
clc
push
xchg
add
and
add
pop
dec
fadd
ret
add
dec
xor
cmp
and
out
fbld
or
mov
inc
fstp
rcl
daa
test
clc
xor
xor
and
push
or
not
cdq
mov
dec
add
or
mov
sbb
jle
es
sbb
inc
jl
xor
repz
test
and
stos
dec
cmp
mov
rol
js
ins
jb
xchg
(bad)
test
lea
push
xor
fimul
or
adc
fwait
jbe
dec
push
test
push
int3
and
sar
fiadd
mov
jmp
lea
xchg
enter
pop
inc
(bad)
lock
dec
mov
sbb
add
pop
sub
idiv
inc
xor
cmp
jmp
cmp
cmp
adc
mov
pop
mov
adc
sti
ss
push
cmp
dec
cmp
(bad)
pop
test
sub
fwait
pop
dec
xchg
and
xchg
lahf
sbb
loopne
xchg
xor
sbb
sub
mov
push
cmps
hlt
add
xor
std
dec
jae
and
(bad)
in
sbb
mul
pop
xor
sti
out
or
push
in
test
in
aad
rcr
fcom
retf
in
cmp
cli
test
(bad)
mov
jne
lahf
(bad)
pop
clc
pop
(bad)
add
cmp
jne
mov
in
loopne
adc
das
sti
(bad)
les
call
pop
push
cld
add
add
adc
dec
loop
test
sbb
test
out
xchg
sub
pop
mov
popf
lea
jbe
rol
in
pop
das
in
cs
in
cmp
or
aas
inc
and
adc
xchg
std
inc
add
not
sbb
or
or
in
daa
pop
in
mov
or
dec
mov
inc
dec
xor
sub
hlt
pop
test
xchg
(bad)
adc
popa
push
sub
aaa
pop
movs
mov
pop
push
mov
cmps
cmp
jg
and
(bad)
cmp
pop
rol
and
(bad)
jg
fcmovu
mov
push
add
imul
inc
and
and
cmp
ja
and
push
dec
cmp
mov
sbb
lock
fstp
xor
(bad)
icebp
mov
mov
sub
adc
mov
or
mov
mov
and
jecxz
and
adc
mov
or
mov
pop
ror
imul
xchg
dec
loope
and
test
stos
dec
hlt
retf
and
sbb
jle
mov
daa
imul
cmps
sar
xor
std
mov
arpl
or
ret
dec
and
loope
fist
clc
ret
jmp
mov
pop
sub
sub
push
loope
sbb
cmp
dec
and
scas
inc
add
mov
clc
sbb
outs
jge
jmp
and
add
mov
mov
shl
imul
add
je
ret
jbe
bt
jae
mov
or
rcl
in
fcmovnb
std
add
aam
xor
dec
mov
add
and
pop
adc
xor
or
test
retf
retf
(bad)
xor
je
dec
sbb
or
jmp
adc
jnp
add
in
add
or
push
lock
inc
inc
cdq
scas
loopne
imul
add
push
pop
shr
pop
pop
sub
cmps
and
jne
pop
xchg
shr
call
(bad)
pop
dec
add
(bad)
jmp
es
(bad)
jg
lods
call
and
adc
mov
inc
cmp
mov
pop
ret
aaa
and
aad
or
je
dec
test
inc
adc
or
xadd
fs
in
push
jnp
cmp
inc
push
mov
je
aas
scas
(bad)
push
push
and
sub
cs
cmps
mov
add
add
jmp
dec
push
pusha
cs
cmp
out
arpl
stos
clc
pop
pusha
add
add
inc
enter
sub
adc
ret
and
push
cmp
jle
imul
daa
add
outs
mov
add
jge
fwait
popa
xchg
retf
repz
data16
pop
dec
push
add
jp
jo
inc
pop
loope
xor
ret
cld
push
or
fiadd
inc
jle
xor
add
add
and
push
inc
mov
and
rcr
mov
inc
inc
push
out
aam
dec
sar
pop
idiv
add
mov
xor
mov
mov
ret
jmp
push
xchg
scas
adc
and
sbb
pusha
loopne
js
or
xlat
inc
add
fsub
mov
sbb
and
leave
arpl
dec
add
test
add
or
xchg
jne
push
rcl
aaa
dec
push
push
in
dec
xchg
dec
push
add
pushf
nop
pop
mov
nop
(bad)
idiv
push
ins
pusha
das
jnp
sbb
bound
je
shl
cmp
or
sbb
adc
stc
cmc
mov
push
pop
ins
and
fs
push
jg
push
mov
imul
add
loopne
push
mov
cmp
hlt
jmp
pop
out
push
(bad)
add
mov
outs
or
mov
inc
cs
test
imul
mov
xor
movs
sbb
push
or
inc
arpl
sahf
(bad)
daa
or
je
xor
fstp
aad
clc
fsubr
(bad)
scas
sti
ins
test
or
sub
push
mov
add
aad
out
pop
adc
test
push
dec
sbb
or
lock
(bad)
je
mov
out
ds
cmp
jne
icebp
push
in
add
fistp
xor
pop
pop
in
sbb
cmp
hlt
dec
int3
or
sub
inc
js
mov
or
lds
das
inc
or
xor
inc
and
loopne
in
out
stc
ror
mov
mov
or
hlt
fist
jne
jecxz
fcom
xor
mov
sbb
xchg
fs
shl
pop
push
fadd
mov
enter
addr16
addps
push
sbb
xchg
test
add
xchg
ret
push
gs
cmp
push
jb
inc
push
sar
cmp
dec
adc
mov
or
and
nop
sub
popa
mov
sub
test
ds
test
xchg
pushf
adc
pop
and
mov
xchg
mov
jle
sbb
dec
jne
inc
jp
dec
in
dec
dec
xchg
sub
mov
pop
jge
cmp
jmp
hlt
leave
xchg
cwde
cmp
sub
fld
and
push
or
popf
je
sbb
sbb
mov
or
xor
adc
push
adc
aas
addr16
push
add
mov
dec
xchg
pop
daa
fisubr
jo
clc
daa
lea
popf
(bad)
popa
sbb
xchg
cmp
add
pop
in
popa
test
(bad)
push
fldenv
jno
pop
push
inc
(bad)
lock
add
fst
loope
shl
jg
add
loopne
add
adc
inc
xchg
push
mov
push
or
loope
or
mov
mov
prefetch
or
das
iret
outs
loopne
inc
test
les
(bad)
std
sub
mov
fsubr
or
dec
jl
cmc
push
or
sbb
mov
adc
or
fsub
jae
nop
jg
in
adc
jmp
add
jo
dec
test
dec
xchg
loope
mov
push
sub
(bad)
les
add
jne
imul
pusha
dec
ins
mov
inc
bound
test
add
mov
add
xchg
and
ja
cs
pop
outs
pop
ja
cmps
fld
add
mov
pop
fwait
inc
xor
repnz
addr16
xor
loopne
sub
xor
fisttp
pop
mov
sbb
inc
adc
sar
ffreep
add
mov
and
pop
dec
int3
stc
add
pop
repnz
sbb
add
inc
adc
adc
jg
gs
sbb
clc
push
sbb
cmp
loopne
psrad
xchg
(bad)
pop
int3
out
adc
sub
je
or
push
jmp
and
shr
fimul
add
or
sub
cmp
test
sar
xchg
imul
xor
dec
sbb
shr
mov
push
sahf
adc
xor
add
xlat
pop
or
in
les
sbb
enter
pop
inc
bound
lds
xor
or
xor
mov
fdiv
adc
mov
lahf
mov
test
mov
sbb
mov
jne
inc
xor
and
les
and
and
push
push
and
fmul
adc
out
int3
mov
sbb
jb
call
and
xchg
xor
push
outs
adc
inc
jbe
xchg
xor
mov
cmp
shr
and
add
fist
and
mov
lock
pop
lods
xor
or
add
xchg
sti
mov
imul
push
bound
push
hlt
jecxz
sub
xchg
retf
movs
xchg
jg
enter
hlt
cld
sbb
cs
push
adc
push
jmp
dec
and
push
pop
mov
rol
sbb
arpl
loope
adc
aam
or
or
pop
xchg
mov
pop
mov
out
pop
mov
inc
pop
hlt
dec
adc
daa
in
adc
xchg
inc
push
xchg
mov
in
push
sbb
cmps
test
ja
lock
sub
jle
add
add
xor
sbb
sub
pusha
daa
sbb
adc
enter
in
je
mov
stos
sbb
adc
mov
add
add
or
add
mov
pusha
adc
mov
dec
fs
xchg
adc
inc
add
mov
dec
ins
and
adc
xchg
add
adc
ficomp
sbb
mov
rol
xchg
jmp
add
cmp
jge
les
adc
inc
pop
jo
sub
jbe
hlt
jmp
mov
adc
cmp
mov
dec
adc
mov
xchg
in
inc
fcom
mov
sbb
loop
xchg
dec
dec
lahf
push
push
inc
js
pop
adc
cmp
call
xchg
jg
inc
cwde
in
jbe
jnp
ret
shr
pop
iret
and
jnp
mov
imul
(bad)
repnz
repnz
je
sbb
dec
jne
push
cwde
jle
and
dec
jmp
add
sbb
ret
(bad)
jge
jg
and
popa
xor
cmp
xor
sbb
or
add
in
mov
push
xchg
push
(bad)
and
adc
aam
pop
dec
jmp
mov
imul
or
mov
je
push
dec
fisttp
adc
outs
or
cwde
mov
add
nop
add
iret
adc
mov
fnstcw
je
inc
adc
lea
call
aam
inc
dec
call
cs
pusha
mov
(bad)
and
jmp
cmp
dec
xor
add
push
push
mov
imul
mov
shr
cld
pop
add
xor
or
lea
jb
cmp
add
mov
add
pop
shr
mov
add
push
add
sbb
mov
sbb
loope
cmp
sbb
xor
or
loopne
mov
add
je
frstor
cmp
call
xor
pop
test
adc
arpl
inc
fdiv
in
mov
add
test
pop
dec
lock
inc
and
inc
xchg
inc
sub
or
int
push
ror
outs
rcl
test
sbb
or
or
push
sahf
push
or
push
push
pop
mov
pop
js
xchg
jne
aad
add
ss
cmps
ja
or
or
cmps
xchg
sbb
inc
adc
sbb
adc
xchg
popa
dec
push
or
or
and
stos
mov
addr16
push
sbb
push
or
add
cmp
hlt
push
clc
mov
call
into
push
leave
ret
es
loopne
push
pop
cmc
cwde
or
inc
jne
xor
mov
and
add
pop
jo
cmps
adc
stos
or
xchg
fisttp
retf
inc
mov
add
mov
mov
imul
clc
jne
mov
and
mov
loope
sub
jp
lea
sti
add
icebp
xchg
xor
mov
in
push
les
test
jb
fld
aaa
adc
int3
fadd
out
leave
adc
leave
(bad)
stos
or
jo
call
arpl
mov
cmp
and
rol
inc
mov
daa
cmp
and
mov
and
add
and
gs
adc
push
add
sbb
sbb
add
mov
sub
or
sbb
in
shl
xchg
jp
ins
adc
test
outs
or
ret
sbb
or
mov
ja
mov
popaw
jmp
push
inc
mov
pusha
add
add
mov
xor
ffreep
popa
das
and
sbb
mov
or
push
adc
adc
mov
pop
ret
daa
sbb
mov
sbb
out
push
sbb
adc
adc
adc
outs
or
sub
ins
adc
or
fist
pop
adc
mov
or
rcl
sbb
or
mov
inc
(bad)
or
cwde
mov
push
test
(bad)
and
and
scas
add
or
cld
dec
or
sub
xchg
cmp
mov
adc
adc
rcl
dec
jmp
loop
lods
mov
aam
mov
inc
es
xchg
and
jecxz
sbb
adc
movs
mov
mov
or
rcr
mov
and
bound
sub
adc
xchg
push
mov
cmp
adc
add
adc
sbb
adc
pop
retf
push
cld
out
push
push
stos
adc
push
mov
js
sahf
or
adc
adc
mov
es
mov
sub
fsub
adc
xchg
sub
inc
push
pusha
das
inc
jge
sub
(bad)
mov
and
paddb
mov
sbb
enter
pop
inc
xor
sar
in
push
(bad)
cmp
adc
inc
add
js
push
push
out
pop
addr16
sbb
sub
lods
addr16
and
mov
fmul
add
popa
and
lahf
and
pop
inc
pop
ret
pop
arpl
aam
jb
dec
enter
adc
adc
ja
or
mov
or
and
pop
add
and
lock
daa
adc
(bad)
push
push
xlat
adc
add
jecxz
push
or
add
test
imul
ins
and
mov
rcr
and
fisub
or
mul
inc
xor
sbb
(bad)
adc
adc
dec
jne
psllw
add
pop
or
nop
cmps
pop
adc
std
(bad)
pop
push
jnp
pusha
push
mov
add
lds
jle
orps
(bad)
jmp
sbb
lods
sbb
sbb
pop
fistp
lock
sbb
pop
pop
jbe
cmp
daa
adc
sbb
lahf
sub
add
inc
or
arpl
lock
xor
ret
fbld
add
leave
aas
mov
pop
xor
push
jp
push
dec
jge
fstp
add
cmp
jg
push
dec
cmp
pop
add
xlat
sti
sub
(bad)
(bad)
retf
pop
hlt
pop
adc
jp
xlat
clc
jo
shl
jmp
or
sbb
add
das
loopne
daa
outs
adc
aam
xlat
and
add
sbb
jmp
or
inc
ins
or
les
out
out
rol
outs
je
out
cmps
popa
inc
jecxz
cmp
popf
pop
inc
add
shr
sti
imul
or
sub
cdq
bound
push
xchg
add
or
dec
sub
push
add
aas
mov
adc
adc
adc
jne
jb
adc
xor
sub
and
push
pop
dec
adc
and
ins
add
pushf
ret
push
rol
movs
test
aas
push
xor
dec
sbb
mov
and
je
mov
add
mov
add
adc
mov
add
or
or
mov
ins
stos
out
and
shr
push
or
jo
dec
xchg
pop
stos
or
jbe
push
adc
push
sbb
mov
sbb
sbb
pop
dec
pop
adc
inc
outs
add
js
push
inc
or
dec
add
lea
enter
add
add
loopne
test
mov
mov
js
mov
aas
pop
ja
repnz
jns
inc
out
inc
push
addr16
or
into
pop
inc
bound
ja
mov
push
xchg
xor
push
loope
mov
inc
xor
iret
inc
outs
sub
inc
fiadd
cmp
push
out
xchg
pop
in
add
aas
aaa
cmp
loopne
mov
aas
push
cmp
ins
das
add
inc
or
inc
je
cwde
test
sbb
inc
ror
inc
xlat
sub
rcr
stos
xor
sbb
lock
push
mov
out
cmp
push
add
fdiv
or
inc
or
mov
or
sbb
test
cwde
adc
js
inc
jmp
ins
or
sbb
inc
mov
cmp
add
ret
or
adc
in
or
movs
mov
add
push
push
mov
or
btc
add
xchg
ret
shl
popa
dec
adc
inc
push
adc
add
fisttp
call
cmp
sub
imul
nop
xchg
or
push
add
jmp
mov
or
jl
add
loope
mov
fiadd
inc
mov
test
shl
cmc
and
mov
push
or
adc
add
add
xchg
pop
dec
sbb
mov
and
jl
add
nop/reserved
push
adc
xchg
ret
out
add
lods
adc
jp
and
add
aam
xor
hlt
adc
jle
inc
fcomp
(bad)
xchg
xchg
jb
leave
(bad)
in
mov
data16
mov
lea
addr16
adc
inc
mov
jne
and
mov
and
stc
jg
add
cmc
aad
jle
mov
dec
add
push
mov
jne
jle
add
pop
adc
or
jo
loop
xchg
mov
or
xor
mov
mov
push
in
fidivr
fmul
or
lock
push
inc
xor
mov
xchg
pop
loopne
and
loope
mov
fmul
inc
jmp
pop
push
and
push
sub
jno
sbb
mov
(bad)
push
or
or
and
int
push
or
sbb
adc
cmp
icebp
xor
call
hlt
jmp
in
call
cmps
rol
ins
adc
ds
ret
xchg
sbb
lock
pop
lds
(bad)
pop
ret
jno
ret
add
add
mov
add
mov
add
xor
mov
mov
inc
mov
push
dec
sub
outs
xchg
pop
or
sbb
mov
fs
add
add
ins
pop
adc
inc
add
sub
fld
mov
xor
cmp
adc
fnstsw
pop
inc
push
rcr
cmp
fbstp
rcl
jmp
ror
add
pop
and
mov
mov
dec
call
mov
(bad)
jp
add
or
pop
(bad)
(bad)
sti
call
cmp
push
lea
mov
loope
xchg
sub
mov
fbstp
mov
dec
mov
and
lock
or
or
and
inc
pop
jl
mov
lods
jbe
mov
pop
push
push
push
push
aas
adc
push
or
pop
mov
push
push
push
push
je
ins
les
inc
xor
imul
xor
in
mov
mov
jg
rcr
mov
fdiv
lea
jae
loope
call
xor
lock
pop
adc
sub
fwait
rol
push
fcomp
cmp
and
icebp
cld
xor
mov
xchg
call
mov
dec
or
pop
dec
movd
cmp
xor
xchg
stos
xor
xor
mov
and
js
retf
add
mov
cmp
jge
stos
mov
out
sbb
mov
lea
jno
mov
xor
test
(bad)
cwde
jbe
mov
and
jnp
mov
cs
jne
inc
sub
pop
imul
iret
fld
clc
cwde
je
in
and
arpl
fstp
mov
icebp
bound
mov
mov
sbb
loopne
mov
xor
mov
lea
out
rol
bound
das
popf
cmp
clc
and
push
push
pop
popf
or
sahf
movs
inc
or
sub
cmp
js
(bad)
push
cld
cmp
dec
js
jge
cmp
loope
es
and
xor
ror
mov
jmp
add
(bad)
adc
mov
mov
and
sbb
shl
mov
or
inc
aad
lock
popa
sbb
das
mov
and
ret
pop
cmp
je
outs
dec
inc
or
add
lea
mov
xor
push
cmp
outs
in
(bad)
push
mov
xor
test
jne
dec
jne
jmp
cs
dec
xor
cmp
js
sub
jle
xor
cmp
or
les
pop
push
push
and
xor
inc
and
or
lds
push
sub
xlat
adc
push
or
sbb
int3
or
push
(bad)
aam
mov
or
popa
inc
and
sub
sub
fcmovu
mov
mov
sbb
mov
xchg
mov
push
or
scas
push
or
cmp
cmp
je
mov
dec
and
sbb
xchg
and
outs
mov
(bad)
jmp
jle
in
je
jmp
cmp
shl
ins
sbb
test
out
jne
ss
pop
mov
mov
sub
or
mov
push
or
stos
mov
push
dec
mov
and
inc
push
pusha
jl
or
std
fwait
ins
cli
dec
sbb
mov
bndstx
jmp
pop
sbb
jmp
ja
mov
test
movsx
adc
ja
movsx
add
rcr
cmp
icebp
mov
enter
mov
mov
cmp
je
outs
sub
push
pmaxub
jp
jnp
fdecstp
in
ja
jmp
jl
sbb
ror
out
neg
mov
mov
add
add
adc
add
mov
outs
adc
mov
inc
mov
xor
or
mov
fs
ds
pop
in
push
mov
cmp
retf
iret
shl
(bad)
ja
jb
xor
xor
push
add
out
retf
xchg
das
lock
mov
mov
xor
xchg
add
repnz
pop
adc
inc
push
push
lock
inc
and
rol
(bad)
jno
cs
cmp
jbe
adc
cmp
cmp
pop
push
jmp
test
mov
add
mov
or
lods
cmp
and
stos
mov
sbb
or
push
sub
outs
mov
leave
ret
fwait
pop
ret
in
and
cs
mov
popa
and
jnp
mov
mov
push
sbb
xchg
out
jo
fstp
enter
popa
pop
mov
inc
jge
push
pop
and
xor
push
cmp
and
cmc
pop
jo
sub
mov
xor
pop
xchg
add
mov
bound
adc
cmp
out
fcomip
mov
mov
mov
sub
je
or
jmp
mov
xlat
and
ret
adc
dec
enter
popa
and
mov
sub
mov
or
adc
xor
pop
mov
pop
fbstp
enter
xchg
shl
add
sub
fadd
repnz
sub
push
xchg
(bad)
lea
cmp
jle
xchg
rol
das
mov
sbb
loop
nop
fadd
cmp
std
sar
popa
sbb
inc
cmp
ficom
push
cmp
sub
or
add
or
cmp
pop
xchg
call
adc
dec
jae
pusha
cdq
(bad)
xor
adc
jmp
pop
mov
mov
iret
or
xchg
dec
loope
stos
sbb
jp
xlat
dec
jo
push
xor
mov
ja
inc
(bad)
adc
push
mov
or
cmp
jbe
arpl
adc
mov
pop
stos
or
or
popf
ss
aaa
add
pop
add
nop
dec
fdivr
loope
stc
or
test
es
add
mov
inc
fcom
ja
sbb
mov
clc
push
add
push
mov
xor
push
jmp
stos
fst
push
or
test
xor
cs
adc
fucomi
jle
fdiv
cmp
mov
jmp
das
adc
xchg
outs
push
jnp
inc
test
adc
add
inc
ja
xor
jmp
lea
xor
push
nop
add
dec
lods
adc
adc
mov
sahf
pop
sub
or
out
mov
pop
dec
inc
loop
test
sub
xchg
jecxz
cmp
push
and
in
lock
repz
push
fld
fstp
sub
mov
adc
test
add
or
inc
adc
inc
or
cmp
inc
fdivr
fmul
and
pop
arpl
xor
mov
ret
ss
stos
or
fist
or
or
leave
mov
or
aaa
mov
out
stos
inc
fmul
sub
dec
push
or
shl
and
cmp
loopne
test
ja
sahf
out
out
and
inc
inc
push
pop
imul
adc
or
cmp
push
lock
jmp
adc
push
add
or
inc
(bad)
imul
inc
leave
xchg
add
adc
add
nop
jle
(bad)
fild
sbb
adc
ror
xchg
and
add
cdq
xor
pop
clc
push
mov
ror
mov
jb
outs
ins
imul
pop
mov
sub
je
gs
(bad)
fisttp
push
out
enter
and
bsr
mov
xchg
lods
ja
ret
or
jb
int
adc
sahf
xor
int
dec
or
pop
pop
dec
push
mov
add
out
pop
sub
mov
add
out
xchg
jmp
adc
mov
in
int3
mov
and
aas
sbb
push
test
sbb
lea
xlat
(bad)
fld
cmps
shl
sti
sbb
stc
mov
idiv
js
fdivr
loopne
push
int
ror
cld
jmp
xchg
fisubr
into
mov
sbb
inc
jecxz
outs
adc
mov
lock
call
pop
mov
push
cmp
dec
push
sbb
push
cs
mov
scas
cmp
ins
and
or
xchg
or
test
test
adc
pusha
ret
jl
jb
es
cmp
mov
inc
cmp
sbb
ds
and
push
jns
data16
inc
or
lea
jl
mov
fcmovu
iret
call
leave
cmp
cmp
aas
jl
dec
mov
push
push
gs
iret
xor
nop
inc
ds
push
in
in
ds
cmp
adc
cmp
es
arpl
sbb
dec
xlat
fldcw
pop
cmovb
test
aaa
dec
mov
or
jne
mov
call
cdq
les
push
int
jbe
ret
pop
movlps
and
loopne
icebp
mov
sub
lods
or
les
retf
sbb
popa
pop
mov
pushf
in
cdq
mov
mov
stc
push
(bad)
aas
outs
mov
mov
mov
inc
lahf
pop
hlt
cmps
cmc
bswap
leave
leave
leave
div
clc
stc
leave
leave
leave
leave
cli
sti
cld
std
leave
leave
leave
leave
(bad)
jmp
loope
leave
leave
leave
loop
in
leave
leave
leave
leave
out
call
leave
jmp
leave
out
out
rcl
ins
call
aam
add
inc
jg
xor
or
adc
nop
ins
inc
dec
sbb
aas
paddsw
mov
das
les
aas
adc
sub
dec
in
mov
xchg
and
and
cmp
sbb
js
adc
cmp
pop
or
push
gs
or
inc
jo
cmovo
neg
pop
or
gs
outs
je
or
dec
gs
sub
push
mov
mov
mov
int3
mov
sbb
(bad)
sub
jo
aad
cmp
pop
test
or
and
and
push
rcr
pop
loop
dec
adc
mov
aam
add
cmp
clc
and
cmp
popa
jb
pop
and
test
inc
adc
or
aaa
add
fs
sub
out
add
lds
cmp
jae
push
or
sbb
ret
and
les
inc
add
adc
repz
mov
rcl
fadd
clc
or
push
adc
or
xor
mov
and
pop
call
and
adc
movs
retf
call
mov
dec
nop
adc
rcr
pop
xor
mov
push
dec
and
mov
cwde
ss
add
das
xor
push
pop
jle
clc
call
push
jne
std
add
cmps
mov
push
mov
push
fadd
je
and
cwde
mov
hlt
cmp
das
sub
adc
lea
dec
mov
sub
mov
mov
nop
in
(bad)
cmp
les
jge
movs
add
mov
mov
push
cmp
jo
sti
stos
push
ins
xchg
je
add
xchg
inc
mov
test
xor
or
fistp
fild
cmp
jmp
jmp
js
mov
add
loop
jbe
xor
add
(bad)
xchg
(bad)
icebp
sub
mov
mov
xor
add
mov
(bad)
loope
mov
jns
test
mov
lods
jl
inc
mov
je
add
das
pop
push
ret
push
es
push
mov
test
adc
mov
mov
jl
mov
test
dec
xchg
lds
mov
stos
inc
cmc
or
push
and
fmul
dec
mov
cmp
push
daa
dec
sbb
adc
push
ja
sub
dec
pop
out
arpl
push
push
pop
pop
pop
push
push
je
push
aad
pusha
push
movs
xchg
push
and
clc
ins
cld
test
push
and
jmp
popf
dec
sub
add
outs
or
into
xor
sbb
sbb
data16
jp
push
xor
mov
ja
xchg
mov
xor
jae
dec
xor
and
add
sti
inc
jae
pop
push
jne
adc
add
or
pop
addr16
sbb
in
ins
addr16
inc
inc
retf
push
fadd
add
scas
cmp
sbb
sbb
push
cmp
stos
clc
and
pop
jmp
sbb
loopne
and
xchg
test
retf
clc
add
test
out
add
loop
dec
inc
pop
mov
clc
and
rol
stc
and
add
inc
mov
js
mov
push
cmp
or
mov
and
cmps
lock
or
mov
add
add
adc
inc
sahf
shl
add
pushf
mov
in
(bad)
jmp
mov
sub
mov
adc
add
mov
and
inc
pop
sub
or
call
cmp
or
outs
mov
in
cmp
je
add
lock
pushf
xor
mov
pop
add
fadd
pop
in
and
inc
add
or
adc
pop
lods
call
pop
inc
outs
lahf
test
push
or
pop
pop
repz
lock
or
and
add
aaa
xor
jo
ror
or
add
push
call
adc
sbb
mov
fdivr
pop
test
cdq
inc
loopne
inc
or
loopne
fs
jns
xor
jmp
or
mov
push
adc
ins
jge
ficom
adc
not
xor
(bad)
adc
push
add
jmp
rcr
jg
dec
add
addr16
cmp
jne
dec
pop
outs
sar
shl
mov
mov
js
adc
mov
jne
mov
push
or
stc
or
mov
mov
mov
pop
inc
ret
fsubr
adc
mov
sbb
dec
add
push
cmps
xchg
lods
data16
call
mov
outs
sub
inc
mov
mov
jbe
dec
js
push
lock
dec
or
call
cmp
cmp
jecxz
addr16
repnz
sbb
push
inc
add
rol
and
movs
or
mov
or
lods
shl
hlt
sub
aam
dec
push
stos
inc
imul
sbb
and
pop
je
dec
ret
push
jg
clc
ret
rol
ror
aad
sbb
pop
pop
and
pop
js
or
call
sub
lock
mov
(bad)
mov
adc
mov
cmp
cmp
jne
adc
jp
das
call
and
stos
cmp
loope
jne
add
adc
popa
jl
gs
ins
push
dec
add
ficom
cmc
js
mov
fild
pop
add
push
(bad)
jmp
jbe
arpl
adc
rcr
cli
shl
fidiv
lods
jmp
pop
sbb
or
std
rcr
or
test
inc
or
enter
cmp
inc
test
xchg
shl
mov
adc
lea
or
or
mov
leave
dec
popf
cmp
or
clc
bound
pop
mov
adc
push
or
inc
adc
imul
or
ror
push
aad
xchg
inc
stos
gs
jmp
push
dec
sub
xor
fsubr
and
rcl
jmp
cmp
or
mov
adc
inc
push
mov
scas
pop
les
xlat
shl
xor
out
mov
add
pusha
sti
add
or
sbb
add
loopne
cmp
je
cmp
jb
cmp
ja
push
ss
push
add
jmp
inc
fcomp
push
ss
and
mov
and
fist
push
jne
push
sub
mov
cld
push
ja
mov
xchg
dec
jne
sub
stos
in
xchg
push
scas
or
mov
or
push
mov
inc
stos
xlat
ret
leave
mov
or
inc
in
mov
push
push
adc
sbb
xor
mov
hlt
mov
bound
xlat
mov
push
(bad)
or
sub
cmp
mov
lea
lods
mov
mov
jo
cmp
push
fst
jae
fistp
and
sub
rdpmc
push
inc
inc
pop
pop
daa
mov
mov
fisttp
push
fild
adc
dec
mov
outs
into
mov
or
push
lock
adc
xor
dec
add
add
add
out
sti
sbb
add
inc
inc
or
mov
xor
dec
mov
outs
inc
popa
cmp
adc
mov
cmp
pop
cs
mov
daa
pushf
and
movs
sbb
nop
inc
gs
hlt
push
test
inc
fmul
mov
ret
loope
fadd
sub
iret
jbe
cli
add
into
dec
mov
add
mov
ret
ins
inc
mov
adc
fisttp
mov
add
lock
mov
out
pop
fsub
jl
les
je
cld
in
scas
mov
iret
mov
dec
das
mov
fcom
mov
jecxz
mov
pushf
push
in
cmp
pop
mov
cmps
aam
out
aad
(bad)
(bad)
cmp
popf
pushf
fcomp
das
and
adc
test
sub
adc
pop
test
cmp
test
into
mov
scas
test
sbb
cdq
mov
jnp
add
aas
inc
add
ds
or
add
or
or
and
movs
add
cs
push
pop
mov
jb
or
test
add
inc
mov
jb
or
enter
inc
gs
ss
shl
adc
pop
outs
push
push
mov
adc
gs
dec
jne
bound
ss
jb
arpl
out
ret
adc
fidiv
sub
ror
jae
test
mov
ss
ret
cmp
lods
or
dec
add
or
xor
push
loop
pop
lahf
js
add
loope
pop
or
push
inc
jmp
inc
or
adc
and
mov
sub
je
inc
dec
mov
into
ss
or
rcr
cmp
cs
retf
je
lods
inc
push
add
adc
adc
gs
imul
test
add
shl
inc
jo
add
and
(bad)
pusha
fwait
add
push
cs
call
mov
ss
inc
dec
and
cmovb
inc
shl
ins
jne
mov
push
cmc
aad
mov
nop
enter
ds
cmc
enter
push
inc
daa
mov
mov
xor
jle
add
xor
push
inc
inc
bound
lea
add
cmps
cmps
xchg
jo
pop
mov
sti
loopne
loopne
pop
cmps
sbb
pop
or
sub
jno
push
xchg
sub
shl
inc
jecxz
(bad)
xchg
scas
adc
nop
mov
sbb
outs
pop
pop
in
xchg
cmp
push
fisubr
xor
xlat
dec
pop
mov
dec
pop
or
fimul
mov
cs
dec
add
fiadd
mov
outs
nop
cld
scas
push
lods
inc
cs
jle
pop
sbb
arpl
cmp
push
pop
or
fcmovb
lahf
inc
sbb
outs
ja
mov
add
dec
cs
inc
cmp
sbb
dec
popa
je
leave
or
sub
jb
or
pop
pop
mov
inc
not
popa
pop
add
imul
sub
adc
bound
shr
outs
xor
push
add
(bad)
movsx
pop
xor
les
cmp
inc
popa
cmp
mov
mov
pop
mov
pop
push
es
add
pop
ins
test
jl
jl
xchg
mov
inc
ret
push
popf
xchg
push
add
ins
fst
mov
mov
adc
sub
pop
scas
xor
ret
pop
push
inc
(bad)
and
sub
or
push
or
dec
pop
mov
test
add
call
push
cmp
pop
(bad)
pop
sub
inc
pop
mov
jae
inc
mov
xchg
add
mov
movs
fiadd
adc
add
arpl
pop
mov
and
adc
jae
pop
pop
pop
test
sbb
(bad)
adc
daa
mov
mov
push
clc
sbb
data16
(bad)
in
daa
(bad)
aaa
int3
jle
add
xor
add
ror
ja
adc
pop
es
mov
psubusb
dec
dec
mov
sbb
sbb
fstp
iret
imul
pusha
int3
add
sbb
and
addr16
pop
pop
pusha
inc
repz
jp
outs
aas
sub
push
mov
dec
popf
pop
sbb
xchg
sub
rcl
arpl
and
cmp
stc
fwait
push
or
adc
add
cmp
adc
outs
test
sbb
scas
mov
clc
lahf
ins
add
mov
mov
jnp
and
inc
sub
xor
stos
test
popa
inc
jae
test
mov
xor
mov
xchg
jle
adc
push
push
or
jns
bound
dec
call
pop
mov
cmp
popa
mov
gs
shl
js
mov
xor
inc
add
or
push
(bad)
or
(bad)
mov
mov
adc
push
cmp
ja
sub
jmp
push
inc
inc
pop
jmp
call
add
adc
mov
sbb
std
add
mov
sar
jbe
mov
cmp
repz
xor
nop
js
jmp
shl
pop
mov
xor
loop
shr
add
cmps
jne
push
push
jne
inc
aas
push
pop
sar
inc
push
sub
pop
cwde
add
push
(bad)
(bad)
out
and
out
pop
imul
je
loopne
add
in
cmps
cmp
je
mov
js
adc
cld
xchg
xchg
push
or
jmp
movs
xchg
push
ret
pop
shl
stos
loopne
stos
mov
pop
jle
mov
outs
sub
shl
sbb
test
push
jmp
jo
add
jl
add
xor
mov
and
jg
add
js
ins
(bad)
rol
es
mov
push
add
jmp
jbe
inc
and
in
imul
pop
dec
sub
clc
push
sub
inc
popa
pop
test
daa
cmp
pop
pusha
add
nop
sbb
push
mov
ins
(bad)
add
xchg
inc
int3
xchg
mov
lock
mov
pusha
jecxz
loope
pop
je
jmp
jl
jne
es
add
mov
out
mov
xor
sub
and
push
dec
sbb
bt
or
adc
ja
jne
jo
lods
xchg
loopne
mov
ins
fchs
cmp
cwde
pop
cmp
xor
outs
or
cmp
and
in
jge
aas
sub
jmp
mov
in
pop
adc
inc
push
or
dec
and
xor
add
push
push
aam
push
adc
and
xor
add
pop
scas
push
(bad)
or
pop
inc
push
xchg
push
inc
adc
add
add
cwde
fst
push
ins
sar
fist
mov
add
sub
jb
sub
je
(bad)
jae
cmp
jl
inc
mov
push
pop
xor
ret
adc
or
jmp
jae
inc
dec
jne
mov
dec
dec
outs
ret
mov
arpl
or
mov
mov
icebp
pop
leave
(bad)
call
mov
ja
xchg
or
add
int3
adc
in
data16
mov
push
retf
inc
jne
pusha
popa
pop
fs
mov
dec
sbb
adc
in
pusha
jb
add
ret
xlat
ret
aas
and
xchg
cmps
adc
lock
and
sbb
scas
mov
ret
(bad)
push
in
inc
mov
mov
ins
imul
pop
call
and
add
cmp
fadd
inc
imul
neg
and
cmc
or
dec
xor
adc
aas
xor
ds
aaa
cmp
repz
inc
mov
inc
enter
dec
(bad)
jge
xor
bound
ror
xor
add
test
inc
retf
add
mov
jb
mov
int
mov
jne
cmc
ror
mov
pop
nop
loope
push
pusha
out
add
push
enter
leave
jnp
test
mov
xor
xchg
les
xchg
push
push
sub
daa
test
inc
or
dec
enter
dec
retf
cmps
push
cmp
adc
scas
test
mov
mov
test
push
cmp
adc
xor
movs
(bad)
cmp
out
imul
icebp
xor
sbb
pop
je
mov
inc
cld
inc
cld
pop
dec
popa
cmp
inc
inc
cwde
add
call
test
push
(bad)
rcr
add
inc
dec
sbb
ss
mov
mov
jle
mov
sbb
lds
xlat
popf
adc
push
dec
dec
dec
jg
pop
pop
sbb
sub
cld
and
and
mov
pusha
(bad)
push
xchg
pop
cmp
das
cdq
inc
addr16
fimul
pop
outs
inc
fcom
out
mov
push
data16
clc
jle
cmp
adc
shl
sub
pop
lock
cs
dec
add
push
les
mov
jmp
jmp
inc
push
or
int3
ins
sub
cmp
adc
lods
not
adc
scas
imul
ror
int3
xor
push
mov
mov
mov
cmp
push
shl
mov
mov
ret
das
lea
daa
xchg
jo
test
mov
ins
mov
adc
xor
ror
clc
jp
and
or
aaa
pusha
or
dec
push
xor
pop
add
sub
pop
retf
fst
mov
pop
pop
pop
das
xor
dec
jl
mov
loope
xor
rol
or
call
and
inc
xlat
xor
repz
mov
mov
adc
add
dec
shl
cli
and
jmp
xor
mov
mov
or
add
mov
xor
or
push
push
xlat
add
rcl
or
pop
(bad)
dec
(bad)
push
jg
inc
inc
mov
mov
in
out
sahf
dec
pop
push
dec
je
mov
mov
pop
sub
jbe
cmp
fcomp
int3
adc
js
add
jne
mov
add
lods
cmps
ret
ret
add
xor
add
mov
mov
mov
daa
adc
or
cmps
loope
inc
jecxz
ins
sub
and
and
shl
out
mov
(bad)
fmul
add
dec
jge
stos
dec
pop
mov
les
mov
add
cmp
mov
loopne
push
and
mov
xchg
fdiv
call
imul
sub
and
mov
push
inc
pop
imul
sub
jmp
add
add
xchg
fadd
scas
dec
lods
cmp
mov
mov
(bad)
bound
jmp
mov
sub
es
or
fsubr
jne
sub
retf
lods
jmp
mov
idiv
sub
inc
sub
mov
shl
and
pop
push
mov
jae
(bad)
(bad)
repnz
sub
jae
add
movs
xchg
pop
push
pusha
imul
sbb
in
mov
div
or
add
pop
pop
mov
pop
imul
cmp
imul
mov
movzx
add
cld
add
in
dec
mov
es
ja
and
sub
pop
or
shl
xor
xchg
mov
add
ret
and
mov
mov
push
and
or
xor
mov
call
sub
outs
xchg
xchg
jo
push
jge
out
push
std
ret
jno
push
movs
mov
fldcw
push
imul
test
push
lock
sub
jnp
test
outs
fsubr
shl
or
sbb
test
adc
fdivr
das
dec
push
add
stc
inc
je
or
sub
int
les
add
xor
(bad)
(bad)
sbb
add
pusha
sub
mov
ret
push
inc
call
push
lea
push
push
push
push
push
push
add
ins
cli
push
pop
xchg
add
int3
cmp
pop
push
pop
rcr
inc
push
sbb
mov
jne
lea
push
cmp
jbe
add
or
push
jbe
dec
sbb
cli
ret
xor
and
arpl
pop
and
neg
and
lahf
xor
call
jmp
push
mov
addr16
sbb
(bad)
scas
jbe
mov
adc
and
leave
inc
mov
loop
lods
pop
enter
adc
inc
add
add
aas
xor
das
idiv
call
pop
js
mov
addr16
lods
loopne
or
je
mov
cmp
ja
mov
scas
dec
or
jmp
jecxz
jo
push
jo
mov
jp
ds
sub
pusha
push
add
add
scas
push
ret
mov
mov
add
stc
inc
je
mov
out
mov
or
je
mov
inc
je
mov
dec
je
or
jp
std
mov
mov
or
imul
jbe
lea
jne
xchg
adc
or
out
sub
cmp
js
wrmsr
inc
sti
jmp
mov
inc
iret
and
fist
rcr
ret
xor
mov
pop
fdiv
sub
clc
pop
pop
scas
push
arpl
push
or
and
sbb
xor
ds
inc
adc
push
es
push
mov
iret
jg
jg
dec
xchg
into
xchg
nop
fiadd
(bad)
pop
test
xchg
xchg
sub
les
mov
mov
mov
nop
xor
imul
jge
sbb
daa
arpl
daa
ret
or
jmp
mov
add
dec
cmp
dec
imul
jmp
add
shr
add
cdq
bound
fistp
jge
test
fdivr
lea
inc
aas
adc
imul
and
jge
add
(bad)
push
lock
add
mov
add
cld
jmp
mov
inc
dec
(bad)
in
or
jg
dec
mov
adc
mov
stos
cmp
jne
pop
pop
pop
aam
std
std
lds
mov
mov
mov
or
inc
fdivr
pop
jecxz
aam
repz
mov
jecxz
loopne
(bad)
jae
pop
push
jge
mov
mov
xlat
mov
daa
dec
jge
add
rcl
les
mov
sub
jae
mov
fs
mov
dec
sub
dec
loopne
add
mov
shl
rep
jmp
mov
xchg
sub
add
inc
jo
mov
enter
int3
pop
clc
rcl
test
or
rol
dec
mov
enter
push
jne
mov
mov
sbb
(bad)
(bad)
add
sbb
jo
ret
std
mov
aam
xchg
push
cmp
jl
pop
sbb
in
xchg
cmps
or
mov
stos
neg
sbb
mov
jmp
aas
inc
mov
loop
movlps
mov
stos
pop
pop
inc
clc
dec
mov
out
mov
dec
jmp
mov
dec
push
sub
jp
sub
xor
inc
mov
(bad)
jmp
aam
mov
ins
add
adc
mov
iret
sub
(bad)
in
stos
mov
enter
repz
inc
test
jne
cwde
sub
mov
cmp
sbb
sbb
push
add
enter
inc
jne
pop
hlt
test
(bad)
pop
repz
pop
mov
repnz
jbe
mov
push
lea
fwait
pop
jbe
xchg
and
je
push
push
cmp
ficom
mov
or
dec
arpl
pop
pop
inc
loop
add
add
loopne
add
sub
sub
in
stc
mov
adc
and
sub
inc
sub
jbe
sub
inc
es
sbb
jae
jne
and
sub
sub
sahf
popf
fs
xor
push
sub
xor
outs
je
or
scas
ret
mov
and
push
push
ds
pop
xor
adc
or
popa
icebp
adc
or
sbb
test
xor
or
cld
add
inc
add
addr16
fld
mov
aas
sub
adc
loop
xchg
ins
clc
out
xchg
loope
aad
inc
sbb
pop
frndint
fcmovu
scas
lock
outs
(bad)
fcomp
fstsw
fwait
mov
test
je
fidiv
(bad)
mov
lea
mov
inc
sub
cwde
shr
and
xchg
jp
jecxz
xor
pop
ds
shr
jmp
cmp
movs
out
(bad)
outs
or
cmp
jb
mov
js
dec
loopne
loopne
and
pop
data16
pusha
xor
jmp
mov
cmp
inc
xor
jne
sti
pop
cs
shr
mov
add
mov
sahf
lock
out
xchg
cs
push
add
pop
add
jge
ror
test
imul
push
dec
hlt
fadd
or
jge
cmp
jl
mov
cmps
sbb
(bad)
mov
or
sbb
inc
fild
cli
mov
push
mov
add
add
fwait
inc
sbb
shl
sbb
sub
call
and
jne
dec
xor
cmp
xchg
cwde
cmp
inc
or
jmp
dec
adc
sub
mov
cmp
imul
cmp
jbe
pop
jmp
mov
add
pop
pusha
sbb
dec
(bad)
and
fdivp
sbb
f2xm1
fclex
fcos
pop
sub
movs
jmp
mov
cmp
je
jmp
mov
daa
mov
inc
mov
rol
cmp
imul
js
cmp
icebp
je
and
fistp
sub
cli
xlat
jnp
pop
add
jg
jne
mov
ja
push
jecxz
add
push
mov
call
jp
add
aas
jmp
fstp
fstsw
test
push
cmp
mov
jmp
fstp
test
ins
and
and
add
and
mov
sub
add
jae
fimul
mov
fiadd
jmp
aaa
mov
neg
loopne
xchg
stc
mov
push
push
inc
imul
push
cmp
pop
cwde
jb
aaa
add
nop
mov
adc
mov
cvtps2pi
mov
inc
outs
or
movs
push
test
call
mov
mov
sub
mov
out
ja
sub
sbb
mov
adc
aas
cmp
das
pop
xor
mov
mov
add
push
hlt
or
xchg
add
pop
in
add
sbb
and
push
add
add
xlat
xchg
jle
rcl
jnp
lock
xor
aam
push
ins
inc
sub
push
fwait
and
xchg
sub
mov
xor
mov
shl
push
imul
adc
dec
mov
div
in
ins
inc
adc
mov
rcr
inc
loopne
retf
mov
add
pop
dec
test
inc
xor
push
(bad)
std
add
xchg
fmul
lds
outs
outs
fist
and
add
add
daa
ja
and
add
std
pop
imul
ja
sti
push
ins
cli
(bad)
cmp
ja
lea
jle
iret
data16
sub
pop
dec
inc
jne
sub
dec
mov
aas
cdq
idiv
imul
(bad)
mov
cs
inc
push
ret
cli
add
repnz
ds
mov
add
pusha
ret
or
mul
iret
sub
sbb
add
dec
inc
sub
push
movs
ds
xor
or
xor
sbb
sbb
jb
fld
in
mov
fadd
jb
(bad)
(bad)
nop
imul
sbb
gs
iret
imul
xchg
hlt
cwde
dec
add
fld
lods
pop
cmp
mov
cmp
jg
mov
icebp
and
fdiv
(bad)
cli
inc
sbb
mov
cmp
pushf
xchg
mov
ins
sbb
imul
xor
add
mov
jbe
fdiv
rol
mov
add
xor
sub
pop
push
in
jle
scas
xchg
add
pusha
cmp
jle
mov
popf
adc
lock
inc
xchg
pop
sbb
inc
sbb
jb
xor
adc
aaa
pop
adc
mov
xor
pop
(bad)
adc
js
test
push
add
pop
mov
ror
aas
pop
inc
mov
sub
fild
add
or
je
test
jle
sub
(bad)
jmp
mov
jmp
push
push
ret
jbe
push
adc
push
inc
mov
dec
ins
push
lock
xor
shl
add
ds
mov
test
pop
fld
outs
xor
inc
jg
jl
pop
dec
daa
push
mov
mov
mov
inc
push
mov
sbb
inc
js
clc
scas
test
mov
adc
cmp
dec
and
rcl
jecxz
fisttp
push
cmp
cmp
arpl
std
movs
push
aam
jo
enter
ret
pop
push
adc
add
fs
leave
clc
popf
add
push
adc
pop
cld
pop
test
cld
gs
pop
push
jne
pusha
inc
add
push
sbb
mov
in
add
add
add
xchg
xchg
inc
out
shl
test
test
call
ret
mov
ins
cld
mov
popf
add
out
push
and
jnp
dec
xor
js
pop
mov
sbb
mov
(bad)
and
test
inc
movd
jmp
mov
jmp
push
mov
mov
cmp
xor
(bad)
cmps
jle
xor
dec
mov
sub
test
jns
daa
nop
add
add
lock
add
bound
pop
sbb
mov
jmp
inc
add
ins
jge
and
(bad)
push
hlt
in
aas
out
xchg
out
push
repnz
jmp
aaa
repnz
in
sbb
jmp
cmp
retf
dec
push
xchg
mov
pop
xor
cmp
ja
int
add
mov
pop
retfw
ret
movs
and
cmp
cmp
dec
enter
xor
das
jne
test
inc
inc
jmp
repz
daa
cmp
or
cmp
xor
out
mov
aaa
jl
push
push
sub
in
inc
fwait
mov
icebp
jmp
jmp
imul
cmps
add
jne
mov
iret
mov
inc
mov
push
ds
mov
scas
imul
das
out
or
int3
push
xor
dec
fsub
rol
js
(bad)
dec
repnz
out
mov
sbb
sbb
sub
arpl
mov
mov
add
add
outs
mov
or
or
cmp
jl
nop
inc
or
inc
fcom
fsub
and
or
push
push
inc
xor
cld
inc
gs
add
fist
fiadd
or
xchg
cmc
movs
stos
cmc
in
sub
jge
fwait
pop
pop
or
dec
and
loop
icebp
inc
mov
enter
jmp
or
add
pop
(bad)
push
push
sti
push
add
add
push
push
add
addr16
gs
sbb
cld
adc
adc
xor
test
dec
movs
sbb
mov
ret
test
rol
sub
push
lock
or
push
push
mov
xor
dec
retf
pop
stc
add
inc
sbb
sbb
inc
pushf
std
add
add
sti
or
inc
cdq
push
sbb
push
or
mov
xor
xchg
xchg
push
xor
mov
aaa
ss
loope
call
nop
sub
in
jne
jnp
fdivr
retf
inc
push
jns
jg
inc
add
div
div
push
jl
je
xchg
cmp
js
es
repnz
icebp
sbb
pop
pop
loopne
popf
js
sub
cmp
cmps
test
dec
loopne
add
and
lea
test
add
mov
imul
dec
call
dec
mov
loope
lahf
loop
cs
xchg
and
cmp
mov
jp
ret
sbb
jbe
sub
push
push
in
je
or
push
mov
xor
in
out
cli
dec
jne
push
push
adc
push
es
dec
mov
xor
ss
arpl
mov
stos
fisttp
inc
clc
lea
mov
clc
adc
jb
inc
cmp
repz
dec
and
jmp
cmps
sbb
ja
jmp
je
sub
je
scas
ret
dec
push
push
add
js
call
sar
fdivr
adc
sbb
cmp
inc
cld
add
aas
sbb
mov
pop
cld
jg
mov
loopne
mov
add
mov
sub
add
jle
sub
add
mov
xor
les
inc
bound
jns
pop
dec
xor
pop
je
jne
xor
xchg
dec
push
push
jmp
in
in
ja
add
jle
sub
pusha
inc
in
push
push
pusha
mov
addr16
fld
fisub
jns
daa
jg
or
add
jns
das
gs
add
add
inc
cmp
rol
sti
aas
add
or
mov
pusha
or
adc
mov
cmp
test
inc
pusha
aaa
aad
mov
xor
popf
dec
xor
mov
mov
inc
push
repz
loope
loop
add
pop
fdivr
mov
or
(bad)
push
es
jmp
pusha
add
pop
imul
add
cs
lock
rol
add
cmp
and
jno
xchg
ret
test
pop
ja
test
test
mov
add
dec
loopne
(bad)
stos
add
pop
cmp
sub
mov
dec
enter
mov
add
les
mov
inc
sti
push
lea
or
test
bound
fmul
cs
or
mov
add
fsubr
inc
push
js
pop
jge
push
repnz
sahf
adc
push
(bad)
sbb
cmc
loope
push
push
inc
xor
jmp
push
xor
add
cmp
out
pop
add
add
inc
lds
adc
inc
pop
add
out
cmp
dec
pusha
pop
cmc
add
push
inc
inc
pop
imul
dec
mov
loop
lea
dec
and
les
ss
push
mov
cmc
sub
and
lea
stc
ja
jns
xor
mov
in
adc
test
mov
mov
sub
add
mov
sbb
cmp
xchg
mov
dec
je
pushf
sbb
or
push
es
inc
fld
sub
and
fild
jg
cmp
sbb
cmp
jno
lock
adc
pop
cdq
call
inc
dec
inc
inc
jmp
cmp
or
loopne
cwde
daa
dec
shr
sar
retf
test
jg
adc
jmp
outs
mov
inc
adc
enter
loope
out
retf
lea
pop
add
shl
jl
mov
jbe
mov
jmp
xchg
neg
cmp
add
mov
xlat
pop
mov
test
and
sbb
in
cmp
or
aad
(bad)
cmp
es
mov
ret
push
add
pop
xor
inc
jmp
jmp
push
pop
sbb
ret
mov
pusha
ins
add
or
ja
jge
sub
mov
add
scas
mov
enter
inc
rcl
push
cmp
(bad)
jg
je
cmp
push
sub
xchg
or
push
je
jmp
add
(bad)
or
je
jmp
cmp
xor
adc
fistp
das
sub
cmp
mov
ret
mov
add
shl
or
push
dec
shl
or
adc
dec
js
mov
nop
or
test
or
push
test
adc
nop
cmp
popa
push
cwde
rcl
push
ret
adc
pushf
icebp
jae
jmp
or
jmp
lock
test
cmp
fcomi
and
inc
arpl
out
test
add
add
dec
adc
jno
add
mov
inc
ret
shl
in
xchg
push
enter
rcr
jae
jo
aam
(bad)
pop
xchg
mov
loope
int3
ja
pop
out
shl
xchg
xor
pop
sub
cwde
mov
pop
mov
and
pop
data16
add
dec
and
nop
je
xor
int3
lea
cmp
dec
sub
adc
call
outs
add
out
dec
adc
add
stos
std
mov
sub
add
ins
mov
or
jae
mov
push
adc
pop
adc
les
inc
(bad)
aas
movs
xor
(bad)
lock
push
ret
add
dec
dec
push
sbb
xchg
ret
push
push
inc
cmp
xor
icebp
les
lock
mov
pop
sub
sub
inc
call
sub
sbb
popf
mov
and
mov
and
add
(bad)
std
fisub
ds
scas
mov
lods
adc
daa
leave
dec
jmp
movs
stc
sub
outs
mov
daa
adc
(bad)
jnp
inc
or
adc
add
call
inc
adc
sbb
and
mov
outs
or
imul
add
xchg
inc
jecxz
xor
mov
mov
scas
mov
cmp
cmp
out
sar
inc
or
mov
enter
fst
iret
jbe
jg
pcmpeqw
cmp
sub
add
pop
inc
xor
inc
pusha
xor
add
sbb
outs
test
dec
mov
dec
fbld
add
or
adc
or
sub
and
ss
and
inc
add
rol
mov
jmp
mov
xchg
add
mov
mov
(bad)
loopne
jge
shld
push
loope
pop
and
xor
cmp
jb
xchg
jp
mov
iret
xchg
sbb
xor
mov
mov
ret
pop
jns
mov
daa
ret
(bad)
das
mov
and
lahf
cmp
adc
sub
pop
(bad)
aam
sahf
add
bound
or
mov
ror
ret
add
out
pop
les
xor
sub
lock
add
sti
sub
inc
mov
outs
cld
in
fild
mov
xor
jmp
pop
mov
clc
sub
pop
in
push
out
adc
jmp
fstp
sbb
push
cmp
cmp
and
inc
sahf
jge
gs
int3
pop
adc
int
dec
shr
cmps
test
mov
vpsrlvq
jb
push
les
push
mov
aad
sbb
(bad)
xor
push
adc
xor
ret
push
push
add
adc
xlat
test
aaa
add
dec
mov
outs
mov
add
sbb
sar
cli
push
push
shl
pop
lsl
cmps
adc
add
imul
fisubr
inc
nop
repnz
or
jl
call
pop
inc
cwde
and
adc
jb
xchg
adc
inc
lock
scas
inc
xchg
ror
jl
fmul
push
pop
test
sbb
inc
dec
add
add
dec
adc
inc
cmc
and
in
or
mov
pop
popf
out
xchg
test
fisttp
pop
repz
add
push
mov
loopne
test
fwait
jmp
aaa
push
mov
sub
jb
inc
mov
adc
sti
stos
(bad)
sbb
retf
jne
ss
add
pop
or
add
push
(bad)
cmp
push
cs
pop
test
pop
setb
(bad)
mov
(bad)
add
movs
sub
js
dec
test
inc
in
mov
dec
data16
mov
lock
fmul
mov
or
mov
xor
movs
cmp
add
test
xor
fnstenv
add
fisttp
ja
xchg
call
jbe
mov
mov
setne
mov
cs
popa
mov
sbb
add
cmp
test
jo
adc
sub
and
ins
das
push
push
inc
scas
jae
imul
push
xchg
ror
cmps
test
sbb
push
xchg
int3
mov
and
add
push
and
pop
bound
add
loope
out
add
sub
mov
jmp
jge
popa
ss
lods
daa
pop
pop
pandn
adc
adc
rol
out
push
lock
lods
xlat
mov
mov
add
inc
dec
xchg
mov
inc
ds
sbb
mov
fld
(bad)
jae
mov
push
or
leave
ja
xchg
in
in
and
das
mov
push
call
sbb
add
loopne
mov
mov
stc
cmps
ss
fcomp
mov
pop
mov
mov
jle
cmps
cmp
sar
pop
movs
rol
sub
mov
inc
push
hlt
bswap
pop
xor
pop
out
and
(bad)
nop
(bad)
loopne
rcr
repnz
lods
sbb
and
jb
mov
fld
sar
inc
add
jbe
ret
hlt
mov
and
sbb
(bad)
or
mul
adc
pop
push
or
aam
or
sbb
jbe
xor
push
add
movs
data16
add
mov
ss
push
push
ins
das
fs
lahf
scas
ins
add
int
and
test
rcl
jo
push
jg
xor
inc
dec
push
dec
add
mov
add
sbb
cmp
push
cmp
inc
in
push
cs
or
lods
pushf
rol
aaa
mov
shr
xlat
clc
sub
xchg
leave
shl
gs
sbb
xor
sub
shl
pop
or
ret
pushf
xchg
xor
add
fimul
add
jb
sbb
adc
add
add
sbb
xor
adc
inc
or
mov
js
int3
jmp
push
lods
add
popf
sbb
add
xlat
and
cmp
jp
add
xor
sbb
movs
retf
test
mov
(bad)
(bad)
inc
js
add
aaa
add
xchg
lock
inc
fld
rcr
dec
ret
xchg
ror
inc
into
inc
sbb
add
lea
jns
pop
xchg
xor
inc
pop
jnp
das
pop
mov
xchg
das
xor
push
inc
jge
inc
add
dec
dec
xchg
je
test
out
push
lds
sahf
xor
or
mov
add
out
ins
mov
inc
or
push
outs
ins
in
sub
cld
pop
sbb
inc
cmp
jne
adc
dec
inc
arpl
call
sub
(bad)
jbe
pop
pop
(bad)
mov
inc
jmp
pop
pop
add
mov
inc
cwde
mov
test
or
fdivr
add
hlt
loopne
push
pop
call
xchg
sub
inc
(bad)
lods
rcl
adc
in
jg
inc
xchg
add
jl
xor
sub
mov
mov
shl
mov
icebp
xchg
(bad)
adc
dec
clc
hlt
je
call
rcl
dec
push
inc
inc
push
inc
adc
sub
cmp
and
(bad)
(bad)
jmp
adc
push
pop
mov
adc
sbb
push
xchg
xor
push
sub
pop
jg
sub
and
add
adc
inc
adc
and
idiv
add
inc
push
jnp
pop
popa
dec
jb
mov
aaa
mov
enter
adc
les
stos
cmp
add
jg
cmp
push
nop
ret
add
out
and
sbb
mov
mov
or
(bad)
nop
ror
cld
(bad)
(bad)
xor
stos
(bad)
push
subps
pop
cmp
sub
jmp
adc
pop
cmp
mov
jo
add
(bad)
jmp
jne
in
mov
and
or
adc
in
jmp
add
dec
bound
ret
lahf
pop
rcl
adc
mov
xor
shl
imul
mov
inc
dec
loope
cmc
xor
mov
sub
cmps
addr16
pop
in
fucomi
sbb
nop
inc
lock
es
retf
xchg
mov
fcmovnu
pusha
or
dec
cmps
add
mov
and
aam
jae
inc
sbb
mov
aaa
xchg
sbb
pop
sbb
adc
xchg
sbb
push
and
add
ror
das
sar
loop
dec
or
dec
jmp
adc
rcr
sbb
sbb
and
jne
and
and
iret
cmp
sub
or
ss
jmp
add
aas
aas
jp
pusha
pusha
dec
hlt
loop
scas
call
aaa
fnstcw
mov
and
jle
jmp
cmp
inc
pusha
fcomp
xor
test
mov
mov
sbb
sahf
xlat
test
mov
mov
jns
push
jns
out
mov
mov
sahf
xchg
inc
lods
cmp
jns
sub
out
sahf
out
je
jo
dec
repz
push
pusha
lock
imul
sahf
out
sahf
push
fcom
dec
enter
jns
rol
jns
out
cmp
cmp
xor
(bad)
cwde
push
ins
inc
dec
add
pushf
mov
fs
int
movhpd
push
aaa
sbb
das
sbb
or
pop
js
pop
je
data16
mov
ins
dec
pop
fwait
ror
push
pop
pushf
cmp
and
pop
xor
leave
jae
sub
sub
repnz
cmp
dec
and
daa
iret
leave
jae
sbb
cmp
repnz
cmp
cmp
cmp
iret
leave
or
add
add
sbb
pushf
sub
inc
and
dec
sahf
xchg
out
hlt
sbb
sbb
sar
jns
adc
in
push
adc
leave
mov
push
loopne
fsubr
cmp
add
in
jmp
cmp
mov
adc
in
test
cmp
push
rol
add
jle
mov
cmp
stos
mov
sub
enter
nop
xchg
pop
cwde
mov
jmp
inc
mov
iret
jle
add
in
pop
pop
jo
xor
mov
cmp
add
add
or
push
repnz
fadd
inc
dec
and
rcl
int3
enter
nop
sar
mov
adc
mov
shl
add
or
sub
inc
jae
mov
sbb
pusha
add
inc
cmp
sbb
shr
xor
push
mov
push
mov
ror
not
cmp
dec
fnsetpm(287
in
in
fstp
(bad)
in
in
rol
in
in
(bad)
(bad)
in
in
enter
in
in
int3
int
iret
in
in
mov
mov
in
in
mov
mov
in
in
mov
in
in
mov
in
mov
in
in
movs
cmps
cmps
in
in
test
stos
stos
in
in
lods
lods
scas
scas
in
in
nop
xchg
xchg
xchg
in
in
xchg
xchg
xchg
xchg
in
in
cwde
cdq
call
popf
sahf
lahf
in
in
add
in
test
in
mov
in
lea
in
jno
jae
loopne
in
jne
push
push
add
xchg
lods
iret
aam
inc
add
or
mov
cmp
aam
mov
rol
pop
mov
das
test
pop
or
les
xchg
xchg
sub
pop
xor
or
xchg
push
mov
add
(bad)
mov
push
dec
dec
lods
cmps
fsubr
lods
fadd
sbb
popa
cmps
and
and
adc
jns
xchg
nop
repnz
or
mov
push
fimul
scas
sbb
add
sub
mov
mov
les
movs
loopne
adc
cmp
pop
inc
push
les
ja
out
cmp
test
add
pop
push
outs
push
inc
fld
and
test
ins
mov
icebp
sub
scas
call
pushf
pop
push
add
mov
sar
retf
inc
scas
enter
jmp
retf
and
and
(bad)
test
xchg
mov
jmp
or
or
pop
or
and
push
inc
jb
and
jge
jo
jo
xchg
popa
adc
aam
mov
adc
or
js
cmp
sub
pop
or
jmp
xlat
mov
inc
and
mov
add
nop
or
mov
iret
adc
xchg
mov
adc
jb
or
ins
stos
add
fs
iret
aam
inc
jno
sub
push
outs
test
mov
cmp
inc
mov
or
add
arpl
inc
sbb
adc
call
mov
jle
loop
scas
pop
ins
loop
add
mov
shl
xor
imul
pshufw
mov
(bad)
daa
call
sub
je
or
lock
or
fs
push
rol
mov
xchg
xchg
mov
cmps
dec
push
and
jb
scas
sub
jp
mov
repnz
mov
push
push
xlat
mov
jge
mov
cmp
test
sahf
adc
sbb
imul
push
shr
mov
pop
sub
dec
je
sbb
adc
inc
push
push
or
adc
and
jno
cmp
and
add
mov
jne
mov
add
fnstsw
mov
popa
xchg
dec
push
movs
cmp
mov
lods
lods
cmc
pop
test
mov
hlt
dec
mov
add
xchg
lock
in
in
js
addr16
ror
and
dec
xchg
jge
mov
mov
jmp
je
mov
adc
add
jmp
cmps
nop
inc
add
mov
popa
dec
mov
cmp
aam
pop
sub
mov
add
cld
xchg
mov
dec
pop
xchg
aaa
add
sar
sub
je
add
idiv
std
jg
sbb
mov
inc
cmp
sbb
aas
sub
adc
sbb
dec
(bad)
sti
push
cmps
xlat
mov
test
adc
jbe
dec
jmp
inc
aam
add
push
ins
mov
lds
nop
shl
xchg
(bad)
mov
or
mov
mov
pop
stos
pop
mov
adc
jecxz
fisttp
add
jg
push
rol
shr
xchg
or
lahf
ret
and
jecxz
test
mov
inc
push
add
neg
add
xchg
jg
mov
ror
fimul
fs
mov
test
shr
test
adc
pop
mov
(bad)
call
loopne
movs
mov
imul
ret
shl
jne
lods
inc
sub
lock
nop
inc
aad
or
inc
mov
pop
les
adc
hlt
data16
test
adc
(bad)
and
and
sub
popf
or
imul
pop
sub
lea
ret
sti
adc
scas
xor
inc
add
pop
cmps
adc
leave
and
or
out
aaa
xchg
xchg
adc
push
add
pop
dec
inc
in
imul
sbb
test
xchg
dec
or
push
adc
push
dec
jnp
loopne
add
add
call
test
mov
out
test
ror
sub
les
xchg
stos
push
(bad)
mov
movs
xor
movs
sar
or
lock
or
retf
lock
push
add
jmp
sub
test
xor
iret
scas
clc
ret
div
and
ins
jmp
cwde
inc
inc
adc
xor
add
loopne
mov
and
cld
jl
loopne
xchg
in
ja
psraw
mov
cmp
(bad)
adc
lods
lods
js
(bad)
mov
or
mov
cmp
inc
and
call
inc
or
into
test
lods
jg
or
adc
or
out
jbe
inc
sub
(bad)
jmp
jl
add
hlt
(bad)
cmp
pop
jg
je
or
(bad)
adc
or
idiv
fistp
jne
cmp
in
clc
pushf
rcl
out
sub
jmp
jae
jbe
push
xlat
pop
inc
push
mov
inc
(bad)
lods
rcl
mov
das
mov
cli
lods
add
ds
mov
add
pop
call
jb
stos
add
mov
loopne
xchg
ficomp
mov
inc
push
cmp
push
sub
sar
or
stos
inc
das
in
or
adc
imul
nop
pop
and
in
in
out
sbb
lea
ja
stc
push
push
jno
cmp
fcmovb
iret
test
ins
rol
adc
and
push
dec
inc
mov
test
imul
inc
jne
out
cmp
sub
call
and
jmp
push
jmp
add
pusha
pop
and
mov
push
jmp
daa
rol
test
inc
ds
pop
dec
inc
push
push
push
popf
jmp
dec
mov
pop
dec
add
inc
addr16
(bad)
ret
jmp
add
mov
mov
xor
cmp
adc
in
inc
add
lods
adc
cmp
aam
(bad)
mov
jns
not
pop
xchg
sub
(bad)
jmp
inc
mov
je
jae
fnstenv
inc
push
cmps
(bad)
dec
add
ror
loop
or
jmp
adc
call
mov
mov
or
push
mov
ret
lahf
mov
retf
nop
(bad)
jle
pushf
inc
adc
aas
nop
add
imul
or
dec
sub
add
rol
push
je
mov
push
fadd
push
stos
shl
push
or
adc
repz
and
pop
mov
outs
iret
imul
pop
pop
cmp
repz
fwait
push
scas
push
rcl
test
mov
jg
add
mov
and
movs
fxam
imul
fild
jl
push
ins
dec
ins
adc
fst
nop
jbe
mov
add
dec
ficomp
shl
xor
adc
dec
fs
cmp
mov
(bad)
jmp
inc
xor
int3
and
sub
fs
push
add
jmp
dec
test
mov
mov
mov
jmp
or
shr
sbb
jle
adc
adc
cmp
adc
push
ret
xor
inc
adc
lock
outs
jae
sbb
cmps
push
inc
or
sub
adc
js
pop
fcmovbe
in
into
ja
lea
mov
xchg
jecxz
lock
sub
adc
dec
imul
xchg
inc
loope
vpaddsb
and
adc
popf
and
or
loope
iret
imul
ret
repz
jnp
mov
les
sub
cmp
inc
jne
pop
idiv
or
fdivrp
adc
pcmpeqb
daa
and
xchg
sbb
or
push
cmp
ret
jg
xor
ret
push
push
dec
gs
sar
cmp
pop
je
sbb
fild
in
sbb
sbb
mov
out
cli
sub
js
js
jmp
sar
xchg
std
bound
mov
xor
in
sbb
add
enter
or
and
add
add
test
scas
mov
je
cmp
push
call
into
jbe
fucomp
xor
xchg
fwait
dec
cmp
push
ja
or
sbb
data16
mov
mov
mov
xor
mov
push
pushf
xor
add
add
inc
adc
or
adc
sub
mov
(bad)
mov
dec
xor
leave
jmp
sbb
pop
mov
jmp
fcmovnu
jmp
fisttp
jmp
jae
push
fisttp
cmp
ret
xor
lock
xchg
mov
pusha
cli
add
into
shl
clc
xchg
inc
lock
xor
ror
call
adc
lods
mov
mov
or
cmp
add
iret
repz
outs
or
js
shr
sti
push
and
fild
jmp
sbb
(bad)
and
mov
cmp
pusha
das
sub
popf
xchg
bound
sub
add
or
adc
cmps
addr16
pop
pop
sbb
call
xchg
imul
shl
push
enter
jb
xchg
sub
mov
and
and
lock
or
movs
lahf
cmp
jb
ja
out
cmp
nop
sub
test
pop
push
adc
in
je
test
mov
ins
adc
sbb
sbb
adc
imul
in
jae
dec
push
dec
and
maskmovq
div
add
ins
repz
push
pop
or
sub
aas
je
jmp
jmp
jge
jl
push
(bad)
mov
call
adc
jo
mul
pop
mov
or
xchg
jo
pop
sbb
es
adc
push
push
aas
mul
or
mov
push
loope
xchg
(bad)
cmp
jne
in
pop
mov
cmp
sub
cmp
mov
xor
pop
retf
push
mov
(bad)
sbb
cmp
adc
cmp
sbb
rol
out
jne
in
xchg
retf
(bad)
pop
pop
cmps
rol
inc
jle
cmp
or
jecxz
pop
das
mov
int3
push
jmp
or
or
jle
mov
dec
das
dec
sti
ficom
jl
sbb
loopne
into
dec
js
les
std
pop
(bad)
mov
xor
mov
mov
inc
add
lock
xor
xchg
inc
pop
mov
mov
pop
leave
nop
mov
and
xor
outs
cmp
jmp
push
sub
inc
les
dec
add
shr
inc
sub
loopne
or
adc
jmp
add
adc
adc
retf
push
mov
jo
not
jb
push
mov
mov
std
cmp
mov
(bad)
lods
or
sbb
(bad)
lahf
sub
or
ret
mov
inc
push
pop
pop
iret
dec
push
inc
iret
fistp
push
int
rcr
ficomp
(bad)
pop
std
and
and
dec
out
(bad)
les
fld
push
mov
(bad)
enter
ds
add
push
cmps
xchg
adc
add
add
add
mov
pop
(bad)
push
mov
in
and
add
lock
mov
mov
or
xchg
inc
sbb
jns
xor
hlt
int
mov
outs
std
std
dec
(bad)
ins
jns
in
and
idiv
int
das
das
aad
ror
outs
in
adc
xor
rol
add
and
xchg
xchg
out
inc
inc
mov
adc
xchg
pop
shl
test
pushf
xlat
dec
shr
cmps
pop
cmp
jmp
inc
mov
into
cmp
push
and
add
call
cmp
test
ins
push
pop
xor
in
adc
add
pop
pop
lahf
lods
repz
es
push
mov
jnp
and
ret
stos
and
mov
fnstenv
inc
add
inc
inc
aad
leave
fstp
push
add
push
mov
add
ins
adc
mov
movsx
or
outs
dec
inc
mov
jecxz
mov
arpl
gs
mov
sbb
popa
lock
je
jmp
outs
push
pop
shr
dec
mov
and
test
sbb
xor
mul
rcl
in
hlt
pop
sar
jns
into
repz
jns
sbb
pop
cmps
es
xchg
jmp
pop
mov
fldcw
jno
jns
fstp
sub
test
xchg
or
test
mov
mov
sbb
push
sbb
jmp
sub
cmp
or
jmp
or
daa
mov
shr
add
mov
aaa
mov
jae
xlat
push
mov
inc
or
hlt
xchg
stos
shl
mov
cmp
mov
(bad)
and
xorps
aas
test
rcr
xchg
jg
sbb
jne
jmp
ror
push
push
rcl
add
mov
sbb
mov
call
dec
pusha
push
hlt
enter
jae
adc
sub
mov
enter
and
ja
mov
mov
and
ja
jp
idiv
mov
stos
pop
idiv
mov
sub
or
xchg
and
not
jl
mov
mov
iret
jnp
push
push
rol
jmp
neg
xor
iret
inc
inc
push
mov
pop
pop
push
push
xchg
push
and
jmp
cmp
mov
mov
in
sub
fadd
arpl
ret
fisttp
sub
mov
daa
lods
ss
fsub
sub
dec
fwait
or
imul
add
xchg
ret
pop
jno
xchg
sub
test
jns
push
dec
xlat
pop
xchg
push
stos
push
mov
sahf
out
or
cmp
lods
pop
out
sahf
outs
pop
dec
bound
push
xor
pushf
call
mov
fnstenv
cmp
sbb
das
fild
jecxz
xchg
sbb
cmp
push
adc
mov
mov
js
and
gs
push
sar
out
sub
loope
sbb
push
xchg
les
add
xor
adc
ror
push
loopne
fsub
lahf
cli
mov
inc
cld
mov
mov
jo
fbstp
add
fild
lahf
fadd
cld
ret
jg
ins
daa
nop
or
add
data16
dec
or
call
inc
xchg
(bad)
fs
(bad)
out
and
ins
pop
mov
fld
ror
or
mov
xchg
sbb
dec
xor
sbb
mov
(bad)
sti
imul
jmp
add
push
fisttp
push
sahf
out
ficomp
push
cmp
jp
mov
jnp
inc
mov
jecxz
pop
cdq
sar
not
cmps
push
mov
into
imul
int3
scas
outs
cmp
sbb
or
sbb
mov
inc
and
add
imul
mov
(bad)
sbb
inc
xor
call
dec
cwde
rol
js
jnp
jnp
cmp
inc
inc
leave
nop
mov
rcl
mov
sbb
das
add
and
add
arpl
inc
mul
cs
les
mov
mov
jns
(bad)
fcomi
or
and
inc
out
(bad)
fisubr
push
sbb
ds
add
outs
and
xor
aad
fld
rol
test
fisubr
push
push
adc
jne
sub
imul
enter
pop
jmp
pop
scas
bound
and
xor
jmp
jae
cmp
leave
mov
jbe
inc
xchg
or
mov
popf
movs
or
leave
sub
fucomp
mov
fsubr
inc
fdivr
cdq
jo
add
or
dec
inc
and
push
mov
repz
pop
shl
in
jno
ins
pop
adc
or
add
xor
or
movs
sbb
sbb
scas
mov
(bad)
push
adc
mov
fnsave
loopne
add
xchg
push
cld
and
add
loopne
inc
mov
and
push
or
sbb
add
mov
push
push
leave
fistp
push
fild
out
call
fidivr
cs
push
test
out
(bad)
pop
pop
inc
push
ins
add
test
sar
or
push
fcmovnu
fisttp
aaa
rcr
loope
add
daa
pop
arpl
int3
mov
add
sub
push
mov
ja
mov
mov
cld
mov
pusha
mov
adc
ins
adc
dec
in
inc
nop
and
mov
sub
in
(bad)
pop
pushf
pop
xchg
push
dec
sbb
and
pop
outs
repz
jnp
jl
mov
out
fcmove
inc
fcom
dec
pop
out
xlat
jns
jnp
add
pop
push
sub
mov
mov
fldenv
fild
push
rcl
fadd
inc
psadbw
jge
movsx
test
imul
lahf
push
push
adc
shr
cmp
movs
or
sub
sbb
test
add
rcl
jmp
adc
jmp
jb
mov
popa
inc
pop
dec
loop
add
add
sbb
stos
xlat
aam
movs
enter
hlt
call
jle
jb
mov
pop
jp
mov
and
push
ffree
lock
cld
jmp
mov
xor
add
out
or
add
call
retf
mov
jb
clc
xchg
neg
pop
cmp
add
adc
xor
stos
fld
nop
inc
or
fstp
inc
xchg
push
add
add
mov
cmp
inc
clc
pop
sub
loopne
add
out
xor
pcmpeqd
les
(bad)
out
jns
cmp
in
repnz
pop
in
jne
jns
sub
inc
cmp
jns
outs
pop
push
imul
adc
add
(bad)
(bad)
test
jl
or
in
(bad)
add
loopne
inc
add
xor
in
(bad)
pop
ror
cmps
mov
add
and
sub
hlt
loopne
daa
sbb
pusha
mov
dec
dec
mov
fstp
and
rcr
sbb
test
movs
int
popa
mov
pop
dec
js
xor
cmp
int
or
pop
xchg
xchg
push
movs
mov
imul
ret
inc
not
ja
repz
pop
(bad)
cmp
adc
cmp
das
lods
fs
es
adc
inc
or
cmp
dec
movsx
mov
add
ret
dec
sub
loopne
mov
jns
inc
dec
scas
loop
icebp
pop
xor
jmp
mov
pushf
add
add
cmp
push
push
rcl
adc
call
mov
mov
and
(bad)
lods
pop
out
jb
mov
mov
mov
inc
lock
lock
imul
push
mov
and
out
inc
mov
lock
push
inc
jb
cdq
push
fild
xlat
mov
sbb
jge
push
leave
imul
es
cmps
push
jl
dec
jmp
out
(bad)
call
psubsw
push
and
iret
repz
inc
push
stc
inc
out
jne
scas
addr16
call
xchg
push
stos
rol
inc
sbb
sbb
fstp
inc
sbb
aas
push
in
in
inc
add
or
jns
and
in
pop
sbb
push
fnsetpm(287
dec
jb
jns
in
in
clc
mov
pop
fist
fmul
xlat
jl
push
ss
adc
cs
ins
les
imul
fwait
mov
jmp
mov
sar
or
xor
mov
pop
dec
arpl
add
jns
cmps
imul
enter
in
in
loopne
sbb
sbb
add
repnz
shl
fnsetpm(287
adc
jmp
(bad)
push
in
pusha
ja
sub
cmp
ja
xor
and
in
fild
ret
aad
test
mov
in
or
lea
add
das
and
push
sub
enter
inc
popa
xchg
addr16
ror
sbb
jmp
sbb
sbb
add
pop
push
sbb
and
jne
movs
rcl
shl
dec
in
pop
xchg
mov
(bad)
cdq
cmp
fisttp
adc
mov
rcr
or
sub
fwait
ror
outs
cmp
pop
xchg
js
test
jne
mov
mov
scas
mov
mov
shl
and
stc
jmp
call
inc
push
lahf
mov
repz
(bad)
ret
or
pop
pop
and
inc
cmp
repz
jbe
xor
(bad)
adc
retf
pop
pusha
pop
adc
leave
hlt
les
(bad)
ficomp
pop
inc
xor
nop
pop
xor
into
das
sbb
sub
in
lock
cmp
sbb
cmps
fmul
sar
inc
push
xchg
or
bound
cmp
dec
push
add
dec
fadd
(bad)
xor
and
loopne
fcomp
sahf
nop
fwait
aaa
(bad)
movzx
and
inc
cmp
iret
adc
push
aam
mov
cmp
jne
adc
push
aaa
adc
int3
add
jg
fdiv
mov
popf
test
sub
xchg
enter
enter
adc
lock
repz
movs
push
shl
popa
out
xor
push
inc
inc
out
or
add
jae
nop
push
lods
add
les
xor
lock
pop
les
sbb
aaa
rcr
add
xchg
jecxz
mov
test
rcr
push
mov
push
mov
add
je
mov
and
popa
lods
test
cmp
add
popf
lods
or
enter
test
inc
outs
pop
cwde
movs
pop
cmp
outs
cmp
arpl
stos
pushf
jno
aas
jmp
xor
ins
or
jbe
in
shl
xchg
inc
jle
dec
sbb
movs
shl
fst
inc
pop
outs
adc
push
cmp
sbb
xor
pop
cli
nop
mov
xor
sub
in
add
int3
and
popa
xor
add
pop
mov
outs
rcl
push
adc
repnz
loopne
sbb
or
jb
jns
popa
sbb
repz
aam
jecxz
cdq
repz
push
sbb
loopne
mov
jbe
xchg
stc
clc
or
and
mul
repz
push
ret
cmc
int
iret
sub
push
ds
test
mov
pop
pop
push
inc
test
in
call
pop
pop
mov
xchg
xchg
xchg
xchg
pop
xchg
add
mov
cmp
sbb
rol
xchg
cmp
shl
xchg
jne
shl
jecxz
lock
loop
rol
jl
cmp
add
outs
xchg
jnp
lds
pop
int3
push
jmp
out
data16
dec
push
aaa
ins
xacquire
push
inc
pop
mov
loopne
idiv
sub
xchg
inc
mov
xchg
loop
sbb
xchg
test
nop
xchg
fadd
push
xchg
cmp
xchg
xchg
popa
xchg
jmp
pop
sbb
jmp
sbb
jb
xchg
bound
shl
sub
popa
sbb
xchg
pushf
add
in
loop
popa
sbb
add
cmp
add
add
fmul
shr
push
push
adc
or
mov
or
or
enter
clc
call
xchg
xchg
mov
repnz
and
mov
cmps
mov
or
adc
test
je
ds
inc
sub
jb
loopne
fdivr
jmp
(bad)
sbb
pop
jmp
or
or
jmp
push
mov
dec
mov
dec
popa
aas
jmp
fld
pusha
sbb
ja
cmp
inc
(bad)
cmp
sub
sbb
sbb
mov
cmps
add
sbb
inc
ds
push
or
sub
and
inc
adc
nop
and
or
push
xchg
inc
dec
push
sbb
push
adc
mov
and
out
push
cmp
(bad)
movsx
loope
ficomp
fs
jb
out
imul
dec
push
pop
bound
outs
pop
jns
and
mov
mov
outs
jmp
adc
mov
inc
push
cmp
fnsave
jnp
adc
adc
add
sbb
jnp
add
or
dec
arpl
sbb
rcl
adc
bound
lea
xor
push
pop
mov
mov
add
sub
shl
scas
mov
adc
loop
repnz
push
add
js
mov
and
cmc
inc
push
xchg
or
aas
paddw
adc
jg
std
je
rol
or
rol
cmps
jb
out
loopne
and
ins
pop
pop
mov
mov
xchg
scas
inc
jb
dec
jg
push
das
inc
xor
nop
ficom
cmp
(bad)
pop
bound
dec
sbb
nop
arpl
stos
inc
or
repnz
sub
jecxz
dec
dec
stc
(bad)
mov
es
add
jmp
push
add
push
xchg
hlt
pop
lock
inc
je
ss
push
xchg
push
je
jns
sub
mov
test
xchg
sub
add
int3
test
je
xor
push
sbb
add
aaa
(bad)
cmp
outs
jns
call
jb
loopne
dec
lods
push
adc
jne
jmp
lahf
add
push
(bad)
and
pop
das
out
cwde
jmp
cmp
sbb
xor
shr
call
lmsw
sub
push
sub
adc
and
das
pop
push
xor
xor
aaa
adc
inc
inc
leave
mov
jecxz
mov
sub
loope
push
sti
clc
icebp
clc
pop
sub
shl
fmul
imul
movs
dec
jmp
pop
bound
and
adc
add
sbb
test
out
dec
mov
lea
rcr
mov
pop
mov
popa
or
rcl
fist
in
arpl
into
push
popa
mov
adc
dec
cmp
sub
js
(bad)
cmp
pop
(bad)
jo
dec
cmp
adc
add
push
cld
cmp
add
cmp
fsub
jo
xor
push
mov
or
or
jmp
movs
cmp
nop
mov
fdiv
or
sbb
xor
mov
add
ret
test
add
int
clc
sub
movs
inc
add
xlat
ret
nop
and
je
aas
sti
sub
cmp
pop
jmp
dec
fsubr
add
lds
mov
sar
add
cmp
arpl
lock
xchg
add
icebp
inc
dec
push
addr16
add
stos
loopne
imul
(bad)
sub
sar
js
je
leave
inc
add
inc
push
xchg
dec
add
push
dec
sub
xchg
adc
loop
xor
call
fld
mov
cmp
add
add
aad
(bad)
dec
or
push
add
inc
jp
adc
xor
inc
mov
pop
test
push
sbb
hlt
adc
rcr
ret
pop
pop
ret
cmps
jg
sub
imul
fwait
sub
shr
fdivr
jb
je
dec
je
add
jmp
out
sub
fisttp
inc
jmp
pop
gs
inc
adc
fld
xchg
imul
jb
not
push
fcom
jmp
mov
je
je
pop
xchg
ja
ret
hlt
ss
pop
lods
mov
movs
and
or
cmp
imul
push
clc
jge
mov
repz
into
(bad)
fidivr
push
cmp
out
gs
imul
call
sbb
imul
dec
popa
fstp
inc
hlt
jmp
sub
idiv
and
pop
push
imul
shl
and
push
sbb
push
or
rol
push
or
cmp
cmp
or
sbb
pop
cmps
repz
pop
loopne
enter
jge
fcmovnu
and
inc
les
pop
clc
sbb
nop
pop
adc
xlat
or
sub
addr16
rcl
jns
or
dec
fs
enter
test
icebp
cld
pop
test
outs
cwde
mov
je
je
lods
aaa
or
in
add
fldpi
sub
sub
or
and
dec
xor
clc
xor
pop
hlt
jmp
add
push
mov
jmp
not
and
lods
cmp
and
aaa
push
arpl
xor
pop
jno
enter
enter
pop
mov
cdq
sbb
cmp
lahf
sub
cmp
sbb
pushf
daa
mov
lds
rcr
adc
adc
push
cs
daa
or
push
sbb
cs
push
or
iret
hlt
pop
js
xor
sbb
push
xchg
push
push
js
mov
repz
add
int3
pop
ss
add
cld
or
add
jns
in
popf
and
cwde
shld
sar
jo
dec
repz
or
cdq
or
(bad)
cmp
sub
pop
sbb
mov
adc
imul
test
ss
adc
mov
je
fbstp
test
push
sub
xor
adc
and
ins
fcomp
shl
aas
dec
loope
jle
inc
(bad)
repz
or
jg
jge
add
ins
leave
fdiv
(bad)
outs
pop
icebp
dec
ins
lds
mov
popa
lock
popa
fld
dec
rcr
mov
call
dec
xchg
loopne
mov
xchg
cld
pop
stc
mov
add
mov
lock
sub
cmc
push
sbb
or
xor
dec
leave
nop
rol
adc
rcl
push
jne
push
sti
mov
mov
push
xor
mov
inc
and
(bad)
aaa
or
jmp
popa
cmp
dec
in
mov
or
sbb
rcl
dec
or
jmp
jmp
mov
cmp
mul
xchg
adc
loopne
js
adc
jbe
leave
pop
cli
jno
clc
cld
jmp
push
and
inc
inc
jmp
or
jmp
pop
inc
and
int3
leave
sub
paddusw
mov
jp
or
icebp
sbb
fadd
sub
retf
push
scas
adc
xchg
sub
or
mov
mov
fistp
outs
out
fs
(bad)
xor
(bad)
js
or
push
or
jno
add
inc
fs
sti
rcl
xor
retf
mov
das
cmp
or
cli
pop
inc
adc
popa
clc
aaa
sbb
sub
je
dec
je
push
cdq
inc
jmp
repnz
mov
gs
mov
ret
xor
pop
retf
jne
xchg
push
loop
add
jmp
xchg
test
mov
cli
add
(bad)
push
adc
popf
sbb
pop
or
sbb
les
outs
xchg
fld
loop
fld
pop
or
adc
ror
or
jbe
adc
and
jae
std
push
xchg
inc
adc
jmp
sub
adc
push
inc
sbb
pop
push
test
or
adc
xchg
test
iret
pop
les
push
jmp
add
loope
(bad)
in
jno
pop
mov
adc
mov
pop
ins
mov
lea
add
cmp
movzx
xor
add
nop
cmp
jns
jnp
scas
jmp
iret
repz
inc
lea
lock
cmp
mov
add
(bad)
xchg
test
int
sbb
lahf
push
xchg
sbb
cwde
scas
pop
fistp
sub
jmp
adc
ror
dec
xlat
(bad)
sbb
add
push
pusha
xchg
jg
push
mov
push
mov
scas
add
fdiv
sbb
and
mov
adc
and
jge
mov
adc
inc
dec
pop
push
xor
cmp
inc
mov
iret
adc
fsub
adc
or
xchg
jne
(bad)
push
ss
push
mov
mov
scas
dec
ins
sbb
push
mov
test
mov
add
fcmovbe
scas
test
xor
cmp
jnp
sub
hlt
mov
iret
push
leave
sbb
push
fsub
xor
jmp
push
cli
xor
push
pop
mov
inc
jp
push
push
add
imul
rol
or
or
adc
jnp
add
or
ret
push
cmc
dec
ror
mov
or
pop
enter
cmp
mov
xor
in
mov
adc
sbb
add
lods
jb
mov
or
bnd
sbb
aam
mov
in
dec
rol
mov
jae
bound
jnp
inc
adc
jns
and
popf
sub
xchg
adc
mov
mov
adc
sub
loopne
push
mov
cmp
xor
jmp
or
ja
dec
sub
mov
adc
cmp
out
daa
mov
push
sub
jecxz
sti
outs
push
aas
mov
imul
retf
add
imul
pop
dec
enter
sbb
mov
or
cmc
gs
jbe
fst
inc
pop
pushf
mov
loop
inc
sbb
push
movs
add
dec
mov
aaa
aas
sbb
mov
das
sub
lock
and
in
nop
dec
dec
mov
retf
mul
and
or
pop
add
retf
lahf
push
(bad)
mov
js
add
fimul
test
push
or
add
xchg
neg
mov
add
mov
shl
ret
xor
enter
clc
(bad)
fisttp
mov
jg
cld
ret
add
out
mov
pop
aam
or
daa
outs
cli
imul
pop
push
cmp
push
je
inc
push
sahf
out
fimul
dec
pop
gs
fstp
in
jns
fmul
pop
pop
test
iret
repz
xchg
mov
fs
in
xor
neg
push
or
or
or
cmp
adc
mov
fstp
fild
jnp
aaa
movs
movlhps
push
xchg
xchg
cmp
cmp
rol
mov
inc
pop
push
xor
xchg
sub
or
test
add
lock
ret
mov
adc
mov
data16
dec
or
mov
push
clc
push
adc
and
jns
fwait
sub
jne
mov
mov
out
fldlg2
inc
ja
mov
pop
pop
cmc
or
push
push
and
xor
add
retf
push
jae
push
sub
xor
xor
and
and
dec
fwait
popf
popa
pop
jmp
(bad)
mov
out
mov
mov
sbb
mov
loop
add
dec
sbb
nop
pop
mov
mov
jno
daa
adc
sbb
adc
pushf
std
add
push
jge
nop
nop
mov
push
pop
xor
shr
add
sub
mov
xor
shl
sbb
pop
or
loopne
push
shl
lds
sar
push
fild
loopne
sbb
out
mov
push
es
repz
es
or
unpcklps
loopne
mov
retf
push
or
dec
pop
loopne
je
adc
vmovhpd
mov
cmps
shl
hlt
push
or
imul
or
mov
mov
mov
inc
mul
dec
sub
xchg
jl
fcom
repnz
pop
sbb
ficom
push
call
jns
pop
jno
lds
rol
dec
pop
mov
pop
and
leave
ror
push
adc
arpl
push
mov
mul
sub
xor
add
pop
aas
push
std
add
ds
ins
pop
dec
xchg
cdq
out
sbb
or
mov
push
inc
nop
test
jb
push
push
jnp
mov
dec
enter
mov
out
inc
ins
jo
jns
xchg
add
inc
sbb
ins
popa
and
aas
gs
dec
add
cmp
xor
xchg
fld
pop
dec
sbb
ja
xchg
ret
add
inc
popa
je
pop
or
bound
add
popa
fwait
lea
test
movs
cmovb
fcomp
pop
push
inc
xor
pop
loope
retf
shl
xchg
xor
cmps
or
inc
xchg
in
inc
inc
jns
push
jo
jo
mov
dec
outs
movs
xor
out
daa
add
aad
mov
(bad)
std
pop
or
inc
aas
lea
inc
and
sti
fs
add
clc
call
push
loopne
jle
xor
adc
mov
sub
adc
mov
inc
das
inc
pop
and
xchg
ss
xor
jno
push
mov
cmp
cmps
lods
mov
stc
inc
ror
mov
arpl
jae
and
lds
sub
lahf
mov
add
mov
ror
mov
or
push
nop
mov
and
test
std
mov
xlat
lahf
jecxz
push
inc
outs
jns
add
dec
es
and
push
push
movs
test
cmp
retf
dec
adc
cmp
test
int3
cli
fcomi
adc
int
movs
add
movs
adc
adc
sub
add
push
mov
cdq
sahf
rol
sahf
cli
arpl
and
popf
out
mov
mov
lea
dec
sti
mov
mov
dec
retf
loop
daa
hlt
adc
stc
xchg
rcr
add
adc
sub
adc
icebp
mov
pop
adc
inc
das
dec
(bad)
adc
mov
scas
pop
push
cmp
repnz
aad
mov
pop
sbb
adc
je
or
add
adc
jmp
xchg
xchg
push
cdq
and
sbb
hlt
aam
shl
or
add
sbb
dec
add
add
push
jo
das
mov
rol
adc
xor
sub
call
or
out
add
arpl
leave
xor
cmp
(bad)
shr
mov
adc
jg
cwde
(bad)
outs
mov
test
cmp
push
adc
or
stos
mov
or
test
add
inc
mov
xchg
mov
inc
jno
outs
add
sti
jg
or
pop
mov
movs
sub
sar
sub
inc
rcl
xchg
push
sahf
ds
fs
lea
sub
retf
mov
add
add
ret
push
add
out
or
pusha
shl
(bad)
push
loopne
adc
mov
movs
sub
adc
inc
or
add
xchg
outs
or
add
or
xor
out
das
and
xor
cmp
loopne
rol
shr
les
mov
test
repnz
mov
push
mov
pop
adc
push
dec
in
nop
push
in
call
movs
fs
mov
dec
pushf
push
arpl
pusha
xchg
enter
pop
adc
push
dec
adc
aaa
mov
fwait
dec
jns
jle
test
mov
adc
ret
pop
push
inc
loopne
ror
in
ret
xchg
adc
outs
je
dec
pop
pushf
mov
push
adc
iret
lock
adc
jl
jmp
or
cmp
add
adc
mov
repz
lods
cmp
push
adc
jl
add
int
(bad)
or
(bad)
in
int3
xchg
inc
sub
dec
inc
in
jg
inc
adc
cmp
or
movs
sub
and
sub
push
xor
or
and
mov
call
xchg
pop
rcr
ins
sub
clc
dec
mov
dec
pop
lock
adc
mov
mov
out
lock
push
dec
jns
push
lea
test
pushf
or
xor
add
xor
data16
out
(bad)
xor
or
push
ror
or
xor
in
ins
cmp
or
add
enter
enter
ret
fnstsw
daa
sar
test
stos
adc
je
sbb
adc
cs
and
mov
add
or
cwde
clc
inc
push
lea
test
xchg
push
inc
mov
mov
repz
into
ficomp
push
fld
out
push
push
clc
push
or
xor
test
jge
push
inc
sbb
inc
add
sahf
mul
jg
or
jmp
lds
retf
jle
mov
pop
add
ret
adc
cmps
fstp
mov
leave
adc
loop
cmp
inc
loop
lods
xor
add
stc
cmp
je
icebp
sbb
pop
lods
or
adc
fmul
mov
dec
inc
xchg
test
xchg
enter
loopne
inc
mov
call
cmp
daa
pop
push
adc
push
fs
jp
movs
or
jmp
mov
xor
std
sub
add
or
in
iret
cmps
(bad)
lds
sub
dec
outs
mov
add
sbb
(bad)
pop
push
repz
dec
mov
mov
mov
call
or
mov
fs
movs
test
jl
add
cs
mov
cmp
mov
sbb
dec
jne
cmp
clc
jae
and
ficom
ds
add
dec
mov
and
das
out
push
dec
and
xor
iret
and
pushf
and
inc
adc
add
cld
jge
add
popa
loop
fimul
cs
inc
cwde
inc
hlt
jnp
test
or
out
inc
fmul
shl
xor
mov
push
mov
dec
or
std
(bad)
lods
je
push
jmp
test
ja
sub
inc
hlt
and
jo
sbb
push
lods
fild
add
or
jle
xchg
iret
pushf
clc
jne
pop
mov
enter
ss
js
lods
adc
adc
mov
add
sbb
add
adc
sbb
das
push
iret
inc
leave
mul
outs
mov
icebp
lahf
pop
mov
pop
adc
lea
xor
cmp
ds
xlat
push
mov
je
cmps
test
lods
xchg
jg
aam
cmp
(bad)
test
outs
mov
xor
iret
repz
inc
push
data16
xchg
add
in
cmp
outs
adc
sbb
imul
(bad)
paddq
fld
sub
add
das
call
cmp
or
pop
adc
xchg
ret
movsx
cmps
sbb
add
sbb
pushf
push
lahf
mov
fld
and
jbe
inc
ficomp
or
call
rcr
cmp
jmp
inc
rol
adc
jns
jmp
ins
cmp
outs
inc
sbb
push
pop
movs
fld
xor
lock
xchg
iret
inc
adc
test
or
sub
push
mov
pop
inc
mov
cmp
and
sbb
push
mov
outs
sti
mov
mov
inc
inc
sbb
test
call
add
or
xor
pop
test
out
das
int
adc
test
or
dec
js
mov
add
dec
pop
push
adc
cmp
rol
cwde
dec
jne
pop
add
add
adc
inc
enter
push
dec
mov
dec
xchg
cmps
pop
call
jo
sahf
(bad)
dec
sbb
mov
pop
adc
mov
das
xchg
xchg
inc
jmp
add
sub
xchg
das
pop
sub
cmp
sahf
out
pop
imul
shr
stc
add
adc
or
pop
or
xlat
cmp
jmp
aas
pusha
(bad)
inc
jl
pop
in
lahf
fcomp
pop
fucomp
dec
mov
and
aas
aas
out
push
in
mov
std
and
jmp
pop
inc
jmp
int
pusha
pop
in
sub
rcl
jmp
dec
int3
inc
popa
pop
imul
inc
das
pop
and
in
adc
or
lea
jne
lods
sub
and
jmp
enter
mov
add
fs
aas
mov
(bad)
cmp
add
add
fs
inc
mov
daa
add
loope
pop
dec
call
loope
das
pop
test
ins
hlt
out
and
adc
cwde
cmp
fisubr
das
shrd
out
das
inc
fwait
xor
call
daa
push
inc
or
fstp
sbb
add
rcl
adc
aas
test
pushf
add
cli
cmp
je
xor
rol
pop
push
mov
clc
xchg
test
(bad)
loope
adc
dec
shl
push
jnp
fs
xchg
mov
dec
loopne
lock
add
mov
jg
out
xchg
adc
jae
or
adc
ror
ret
xchg
aaa
lea
cmp
add
arpl
mov
add
mov
lock
fild
sub
pop
mov
or
add
push
test
xchg
adc
sub
ins
cmps
sti
xor
ret
push
scas
lahf
jge
shl
movs
cmp
test
ret
nop
push
icebp
xor
test
inc
sbb
loop
xor
fwait
sub
std
ss
rcl
mov
pop
jbe
jle
mov
sub
aam
mov
hlt
das
mov
(bad)
and
es
mov
lods
stos
ds
add
lock
(bad)
loope
rol
cmc
xor
add
push
ja
(bad)
mov
xor
or
pop
popf
xor
and
call
jne
push
pop
inc
sar
add
xor
xor
aaa
in
add
pop
lods
xlat
imul
lds
jl
sbb
cmp
inc
jmp
xchg
push
les
push
cmp
mov
cmp
xor
add
push
add
cld
mov
jo
cmp
hlt
lods
dec
lods
int3
mov
push
xor
jno
test
jl
es
adc
cmp
and
xor
mov
mov
add
sub
or
adc
mov
xchg
inc
mov
lock
push
add
frstor
push
add
mov
ins
ror
mov
push
into
test
scas
push
adc
aam
sbb
mov
mov
js
and
repnz
push
fisubr
mov
cvttps2pi
stc
retf
xchg
mov
cli
(bad)
aam
mov
mov
push
sti
cmove
push
dec
jl
mov
mov
push
mov
cld
xor
sbb
shr
fs
mov
dec
jo
cld
xchg
call
or
vmread
fild
sbb
and
nop
push
pop
test
int3
pop
mov
mov
mov
adc
sub
and
lods
push
push
add
mov
push
in
mov
mov
movs
jo
xchg
pop
dec
rcl
dec
(bad)
dec
ss
test
or
add
inc
push
xchg
fs
dec
jl
push
(bad)
add
xchg
mov
add
add
mov
push
out
add
aas
cmp
sbb
sub
es
and
test
cmp
xchg
xchg
in
xchg
loope
idiv
add
hlt
pop
mov
adc
adc
xchg
cmp
cli
push
fcom
sub
aaa
push
adc
ret
jb
push
mov
mov
dec
push
into
push
inc
push
xor
sub
cs
fs
push
sbb
fwait
loopne
inc
cmp
push
inc
sbb
sub
das
jle
ds
repnz
inc
test
push
add
jg
ins
push
imul
pop
movs
aaa
add
add
retf
test
add
sub
add
pop
add
xlat
sub
inc
mov
add
add
push
adc
and
xchg
ret
nop
sub
add
not
pop
(bad)
cmp
push
adc
add
inc
add
aas
push
and
mov
aaa
ret
push
retf
pushf
popw
sbb
push
test
xchg
mov
pusha
push
ins
pop
loop
sahf
stos
mulps
and
enter
js
adc
jmp
sahf
repz
std
cmp
jnp
jns
cmp
cmp
imul
or
inc
jg
push
in
out
hlt
inc
inc
xor
cmp
add
inc
addr16
add
and
call
jle
xor
and
inc
adc
pushf
shl
push
ja
cmp
push
cmp
sar
xchg
cmp
mov
cmp
iret
mov
push
add
add
cmp
inc
adc
test
dec
mov
jmp
push
add
(bad)
ins
fcomp
and
or
mov
xchg
(bad)
sbb
inc
ror
mov
mov
inc
cmp
mov
popf
lock
ds
and
not
dec
test
aaa
data16
test
mov
xchg
sahf
fist
xor
inc
add
or
inc
add
bnd
xor
ss
and
or
or
mov
mov
rcl
push
push
cmp
push
or
cmp
sub
sub
clc
stos
and
adc
and
jne
aaa
sub
jne
sbb
lods
dec
sub
das
adc
pop
arpl
pop
mov
js
fsubr
cmp
jb
mov
add
call
ja
fnstcw
mov
inc
or
sub
std
dec
ret
xor
mov
into
mov
add
pop
repnz
dec
mov
jb
sub
push
sub
mov
pop
rcl
or
or
int
sbb
or
scas
sbb
sti
jne
xor
mov
mov
dec
jmp
leave
das
push
adc
jge
mov
dec
or
(bad)
sub
pusha
cmp
pop
jmp
or
mov
js
inc
sbb
outs
hlt
push
dec
dec
add
adc
(bad)
(bad)
pusha
test
movs
(bad)
pop
(bad)
xchg
pusha
or
push
lods
sti
mov
shr
push
and
jne
icebp
add
add
pop
or
or
pop
pop
adc
addr16
and
pop
movs
adc
lds
(bad)
sbb
jae
out
ja
xlat
shl
add
cmp
ja
cmp
pop
jbe
or
or
or
add
or
ss
inc
out
push
in
or
add
and
add
fild
or
nop
pusha
mov
in
add
sbb
sbb
loop
adc
sub
inc
loopne
jmp
or
dec
hlt
add
ror
imul
ret
loop
cmp
je
mov
sub
mov
in
pop
std
pop
jle
add
and
mov
cmp
mov
loope
loop
(bad)
jbe
scas
add
imul
sub
push
push
mov
dec
cmp
push
sub
sbb
mov
sar
or
mov
add
rcl
mov
out
aas
or
or
or
sbb
jae
add
or
out
jae
std
add
add
mov
push
and
xchg
rcr
icebp
std
inc
loope
mov
mov
jnp
dec
and
shl
cmp
jg
xor
push
stc
hlt
push
mov
inc
ds
ins
jmp
jne
sbb
cwde
imul
jne
cmc
dec
scas
imul
and
aam
je
(bad)
xor
pop
mov
add
cmps
sbb
mov
jne
or
and
cmp
stos
dec
test
cld
xor
add
gs
sub
fst
stos
in
ins
pop
push
push
cmp
jmp
mov
lea
icebp
add
jne
idiv
xchg
mov
shl
imul
jne
xchg
cmp
or
push
lds
and
push
sub
popf
adc
ss
xchg
lea
cmp
push
stc
mov
mov
push
lock
pop
jbe
cmp
out
sub
mov
rcl
xchg
cmc
adc
inc
imul
loopne
and
cmps
(bad)
in
rol
ja
mov
sub
mul
xchg
(bad)
ja
cmp
xor
je
movs
xchg
cmp
xlat
popa
and
adc
adc
call
or
push
sbb
xor
cmp
and
jo
push
ret
jl
mov
add
sub
jbe
ja
mov
mov
movs
add
iret
push
inc
into
push
inc
or
cmp
push
xor
arpl
outs
rol
sbb
sub
fs
and
dec
pop
jp
cmp
dec
mov
rcl
aad
mov
cmp
scas
mov
cmp
adc
sub
or
pusha
xchg
and
adc
cmp
add
loopne
cwde
mov
or
cmps
sub
mov
ins
aaa
mov
mov
xchg
scas
adc
out
fild
fadd
jb
add
or
mov
cmp
add
or
mov
aaa
mov
mov
loop
mov
int
jecxz
xor
hlt
test
add
mov
mov
mov
add
jmp
xchg
adc
adc
stos
sar
cli
or
push
or
push
rol
jle
outs
xor
xchg
or
ret
(bad)
fcom
push
xor
rcr
adc
je
cmp
and
sub
mov
adc
ret
xchg
test
add
dec
jb
sub
cmp
cmp
aaa
add
xchg
mov
pop
pop
add
mov
add
mov
pushw
fsub
test
ss
jg
add
and
mov
adc
pop
lldt
or
dec
mov
push
pop
(bad)
pop
mov
cmp
fst
ror
cld
jg
aad
sub
(bad)
sub
cmp
jge
mov
retf
mov
out
mov
sti
loopne
cld
lea
and
aaa
sti
push
fdiv
aad
(bad)
lds
imul
adc
shl
xor
jo
xor
sbb
or
adc
xchg
dec
dec
mov
cwde
dec
add
loopne
or
xor
cld
retf
aaa
adc
test
jbe
shl
mov
cmp
jmp
hlt
inc
adc
push
pop
(bad)
sub
cmp
cmp
call
cmp
jle
mov
pop
fs
jne
(bad)
cmp
inc
adc
push
xor
or
scas
jmp
mov
daa
or
adc
out
fsubr
sbb
mov
loope
pop
mov
movs
movs
mov
add
lods
or
cmp
cwde
or
or
pop
cmp
pusha
push
xor
pop
add
lahf
leave
and
or
add
jmp
dec
mov
(bad)
jae
xor
sub
inc
or
mov
add
xor
mov
push
les
pop
pop
aam
ror
xor
mov
mov
xor
mov
pop
inc
fld
push
(bad)
int3
(bad)
imul
ds
mov
adc
or
loope
jo
push
adc
or
jmp
iret
lock
mov
xlat
cmp
or
mov
out
inc
rcl
lods
cs
pop
fdiv
pop
(bad)
cmp
je
pop
jmp
sub
jecxz
dec
retf
dec
sbb
add
sub
xchg
xor
cmp
jne
movs
sub
cmp
mov
dec
add
xor
dec
(bad)
loope
sub
jno
fmul
xor
jmp
jmp
xor
and
jmp
(bad)
xchg
leave
sbb
push
pop
inc
pop
mov
pop
xor
ret
fwait
pop
outs
ret
rcr
jne
cwde
xor
sub
clc
stos
jle
xchg
movs
pop
mov
jbe
out
cmp
jne
repnz
dec
inc
mov
pop
sub
mov
add
(bad)
xchg
mov
pop
or
sbb
jns
mov
pop
inc
scas
shl
sub
or
cmp
es
jge
mov
sub
test
or
or
jbe
jmp
bswap
sbb
sbb
ja
dec
sub
mov
add
cdq
and
sbb
lock
inc
aaa
js
or
test
repz
arpl
repz
xor
aaa
fdivr
mov
movs
jp
push
out
jle
jo
push
enter
cmp
mov
lock
test
jne
test
ja
dec
movnti
push
add
adc
or
(bad)
or
fcom
clc
or
ret
jge
rcl
ins
add
das
add
jo
push
pop
in
ret
fsub
(bad)
jne
sub
add
xor
fistp
mov
adc
ret
sbb
loope
and
cli
add
or
or
xchg
and
and
(bad)
adc
clc
cmp
or
adc
adc
mov
cmp
in
dec
cdq
dec
pop
ret
dec
push
je
mov
(bad)
mov
add
sub
lods
xor
(bad)
cmp
sbb
sbb
jl
pusha
loop
mov
and
cmp
popa
int3
movs
in
stc
call
lea
sub
aam
jmp
pop
pop
mov
and
and
sbb
push
loopne
enter
ret
stc
imul
(bad)
adc
ins
lea
jl
ret
xchg
mov
dec
daa
clc
call
xor
jnp
cmp
and
jne
(bad)
xchg
sub
popa
dec
ror
push
loop
ret
add
addr16
stos
jb
push
inc
mov
mov
vcvttsd2si
or
jb
cmp
mov
pop
xor
cmp
xor
ret
nop
jmp
xchg
fdiv
fmul
test
sbb
inc
rol
push
pushf
or
mov
pop
pop
popa
cmp
(bad)
sub
and
and
or
jbe
pop
jmp
xlat
cmp
mov
ret
sub
adc
fsubr
adc
ja
cld
mov
sub
and
outs
adc
clc
adc
out
or
xor
inc
add
jae
aam
pop
add
cmp
push
dec
add
popa
loopne
push
sbb
enter
sub
dec
pop
fcomp
mov
ret
push
jmp
mov
mov
adc
adc
repz
dec
enter
and
dec
out
les
cmps
pop
outs
pop
cdq
aas
push
push
adc
rcr
and
ins
fcomp
jo
scas
add
jge
sbb
cmp
mov
test
inc
outs
fadd
fcom
cmp
inc
add
sbb
aas
sbb
fmul
add
push
inc
sbb
pop
or
and
xchg
or
add
or
push
mov
mov
and
loop
sbb
dec
or
test
or
aas
jle
jo
mov
mov
mov
cmp
lods
lods
ret
mov
xor
sbb
pop
jne
sbb
mov
xor
pusha
dec
add
(bad)
cld
push
mov
or
je
sub
cmp
jg
sub
inc
call
adc
sar
(bad)
mov
inc
xchg
push
or
xchg
xor
sub
adc
push
jo
call
and
cmps
pop
lock
aam
cdq
add
rcr
enter
adc
js
rep
xchg
pop
ret
pusha
fcmovu
dec
je
lea
adc
xor
outs
inc
idiv
cld
inc
pop
pop
push
jne
jbe
add
retf
add
xor
fldcw
(bad)
lock
push
xor
or
pop
pop
dec
movs
stos
in
das
in
or
fisttp
mov
inc
cmp
adc
or
pop
pusha
push
dec
jo
or
cmp
mov
jo
clc
xlat
jbe
mov
pop
cmp
add
ins
adc
cmp
adc
fiadd
inc
sbb
push
js
push
mov
push
inc
and
mov
sbb
test
add
or
lea
data16
push
fiadd
in
es
aas
aas
cmp
jne
xor
lea
jmp
or
push
bound
test
push
xchg
inc
inc
imul
push
or
arpl
sbb
repz
dec
call
call
and
outs
jecxz
es
jno
mov
cmp
data16
mov
cs
loopne
call
call
inc
mov
das
inc
add
and
push
clc
or
inc
push
inc
ja
mov
hlt
sbb
mov
lds
ins
dec
mov
mov
mov
(bad)
(bad)
or
xor
test
dec
sbb
icebp
dec
push
outs
sub
fld
es
fucomp
stc
mov
jnp
retf
loop
or
lea
pop
sub
xchg
jae
cmp
add
(bad)
dec
inc
xchg
jnp
xchg
dec
jne
jmp
pusha
loopne
fmul
xor
mov
mov
jmp
cmp
hlt
mov
aad
and
daa
xchg
cmp
jecxz
dec
mov
dec
add
ret
ret
outs
test
dec
push
clc
push
sub
pop
ret
xor
imul
sbb
(bad)
pop
sti
into
dec
add
jmp
jno
push
dec
add
call
(bad)
inc
loop
inc
sbb
pop
cmp
and
pop
and
mov
sbb
push
(bad)
nop
pop
or
and
xor
xchg
data16
div
mov
ja
and
scas
cdq
mov
rcr
les
adc
and
jmp
out
(bad)
jmp
test
fild
lahf
add
mov
cmp
call
retf
mov
inc
inc
idiv
xchg
movs
clc
into
xor
mov
inc
inc
push
scas
add
push
shr
dec
push
mov
cmp
and
fnstenv
dec
dec
cdq
inc
mov
sbb
dec
or
or
loop
movs
xor
mov
retf
outs
adc
das
push
adc
xor
mov
jne
adc
add
mov
add
adc
std
jne
shr
scas
add
sub
adc
add
push
mov
mov
out
loope
mov
mov
dec
pop
aaa
fisttp
cmp
loope
ret
cmps
jns
int
out
mov
cmp
jne
dec
dec
dec
ins
shl
and
sahf
mov
mov
adc
jecxz
mov
mov
mov
enter
enter
or
xchg
shl
stos
aaa
stos
pop
daa
push
push
sub
mov
push
inc
cmp
je
mov
mov
sub
je
and
je
push
fidivr
xor
dec
and
mov
and
add
sub
or
cmp
ja
push
and
fcom
cmp
es
int
or
jmp
jecxz
inc
jle
js
pop
sub
jmp
inc
inc
jmp
or
and
je
popf
popf
or
jbe
sar
stos
push
adc
ja
add
scas
leave
pushf
and
jg
add
aad
xor
mov
cmp
fild
xor
xor
mov
adc
enter
test
or
xchg
sar
jle
jne
mov
popf
fiadd
inc
js
wbinvd
sbb
pop
add
cmps
add
js
add
movs
sub
sub
cmp
jg
add
rcl
shl
movs
sti
daa
or
jmp
xchg
inc
jmp
or
dec
loop
add
mov
stc
inc
jle
imul
(bad)
xchg
inc
fs
xlat
pop
aam
js
pushf
pop
ret
and
test
clts
add
(bad)
xor
iret
adc
sub
ds
cmp
hlt
sub
aam
inc
mov
dec
jne
pop
cdq
push
inc
mov
lahf
jno
loopne
(bad)
repz
push
dec
add
dec
cmp
jae
jmp
xor
jge
push
dec
in
lock
inc
imul
pcmpeqb
or
je
out
fstp
and
jmp
or
sub
mov
xor
(bad)
and
jmp
fld
fldz
mov
(bad)
jg
aas
cmp
xchg
dec
mov
cli
or
xchg
dec
ds
pushf
or
ret
mov
adc
xchg
(bad)
jl
xchg
cwde
push
and
sbb
cld
mov
cmps
xchg
and
inc
mov
mov
jge
add
jns
sub
test
and
mov
mov
mov
xor
leave
sbb
aas
push
mov
jbe
imul
cmp
mov
(bad)
mov
push
mov
bound
inc
xchg
mov
xlat
fadd
lods
outs
xor
xchg
mov
or
push
push
int3
into
sbb
ror
mov
or
sbb
push
inc
enter
movs
outs
movs
push
inc
bound
hlt
(bad)
(bad)
(bad)
jmp
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
addr16
leave
(bad)
(bad)
(bad)
push
leave
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
(bad)
(bad)
fbstp
push
stos
mov
cmp
or
mov
pop
out
sub
(bad)
call
inc
imul
(bad)
div
jl
xor
cmp
call
mov
sti
(bad)
(bad)
(bad)
(bad)
jmp
stos
push
inc
mov
push
sbb
sar
repnz
test
nop
fild
daa
movs
(bad)
(bad)
(bad)
call
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
(bad)
(bad)
(bad)
inc
mov
ds
push
cmps
scas
mov
pop
or
add
(bad)
jmp
mov
pop
cmp
sahf
xchg
pop
cmps
lock
mov
popa
mov
(bad)
jmp
stc
(bad)
repz
mov
sub
and
and
push
pop
aad
bound
xor
outs
out
fbstp
sbb
add
adc
popf
test
faddp
add
add
add
faddp
pop
cld
push
push
fcmove
pop
inc
or
pop
inc
cmp
sub
mov
pop
xchg
shl
adc
pop
add
(bad)
shl
cmp
sar
adc
xor
and
jb
xchg
inc
aas
or
mov
mov
push
dec
inc
push
push
inc
push
inc
pop
inc
outs
jb
leave
adc
or
pop
inc
pusha
jmp
push
push
dec
add
push
dec
popa
jae
push
popa
ins
xor
fninit
fldcw
int
add
dec
push
jnp
xchg
jo
inc
or
mov
mov
or
adc
test
std
mov
xor
sbb
xchg
repnz
mov
push
fdivr
int
sbb
pop
dec
mov
retf
rcr
int3
pop
aaa
dec
xchg
movs
ds
pop
fsubr
dec
aad
mov
pop
and
push
mov
mov
jns
je
mov
mov
gs
stos
mov
xchg
dec
xchg
sbb
rep
pop
jmp
sub
and
hlt
jg
call
cmp
je
pop
mov
div
test
jnp
mov
push
fisubr
jl
sbb
cmp
jg
(bad)
sbb
mov
jbe
sar
js
arpl
fcom
inc
xchg
movs
test
inc
and
cmc
push
call
jmp
hlt
popa
shr
mov
shl
xchg
inc
mov
adc
(bad)
cld
pop
sbb
and
sub
pop
cmps
pop
add
or
mov
adc
clc
mov
mov
dec
jmp
pop
sub
add
jnp
inc
ja
dec
setne
dec
clc
sbb
pop
inc
and
add
jecxz
or
xor
sar
mov
xor
jb
cmp
xchg
jb
(bad)
dec
or
or
or
loopne
js
adc
fcom
xor
sub
sub
(bad)
sbb
hlt
pop
mov
shl
jae
pop
dec
jle
jne
mov
rcl
adc
mov
retf
call
les
push
add
repnz
je
pop
in
neg
or
pop
add
sub
mov
mov
and
mov
jmp
std
in
adc
xor
mov
xor
aam
jmp
mov
mov
out
stos
xchg
les
mov
movs
ret
inc
fwait
push
or
(bad)
mov
or
inc
rol
test
push
stos
pop
loop
pop
mov
cld
in
popa
lock
xor
dec
(bad)
es
xchg
adc
or
cmp
sbb
add
dec
jne
(bad)
fbstp
sbb
add
sbb
jecxz
xchg
lock
out
dec
cmp
xchg
(bad)
leave
lahf
adc
cmp
adc
fstsw
lods
sar
pop
ret
cmp
mov
enter
mov
lea
js
sbb
jg
xchg
sub
in
pop
jmp
push
xor
call
nop
jmp
lahf
push
push
push
loop
pop
or
jbe
mov
mov
mov
mov
mov
mov
jo
lock
xchg
in
clc
scas
scas
(bad)
or
pop
or
nop
daa
push
jp
in
enter
mov
fst
and
pop
pop
cmps
cmp
add
jbe
or
cli
mov
popa
(bad)
in
push
call
aaa
add
push
pusha
push
pop
rcr
pop
mov
in
mov
mov
imul
scas
fiadd
sub
or
jae
push
(bad)
jg
push
and
sbb
jmp
je
or
jne
cs
inc
jmp
pop
push
pop
and
cmps
and
push
jecxz
mov
int3
push
add
adc
loop
fiadd
push
fdivr
adc
add
test
sub
test
inc
cmp
aas
or
jb
pop
cmp
pop
xor
test
stos
mov
add
or
out
rcr
mov
sub
out
push
je
or
jbe
and
and
rcr
mov
stos
shl
or
xor
or
adc
or
push
jns
jo
dec
add
cmp
data16
sbb
xchg
push
push
cmp
sub
xchg
pop
push
mov
mov
push
addr16
dec
mov
add
inc
add
push
add
aas
jne
cmps
push
(bad)
mov
clc
jle
dec
adc
xor
rcr
xor
adc
pop
cmp
sbb
push
add
mov
pushf
add
test
pop
scas
ds
add
lds
mov
out
or
cld
pop
ss
fdivr
dec
fdiv
adc
mov
inc
or
mov
inc
inc
mov
jg
push
int3
inc
add
sar
ror
adc
inc
mov
sbb
mov
in
dec
daa
lahf
adc
dec
inc
push
daa
adc
push
stos
add
fs
mov
xor
aaa
mov
jmp
movq
inc
popf
pop
je
cmps
mov
jo
ret
push
add
cmp
shr
or
int3
inc
outs
(bad)
or
pop
ja
pusha
pop
push
push
push
push
je
pop
stos
add
adc
stc
shr
mov
gs
jne
or
inc
and
(bad)
pusha
add
sub
mov
test
xor
aad
or
adc
add
nop
xchg
jae
mov
or
mov
ins
jno
sbb
mov
mov
add
xor
xchg
ret
add
push
sbb
mov
jg
pushf
pop
mov
dec
je
jmp
dec
jle
pusha
ss
jmp
cmp
scas
and
cmp
es
mov
jmp
mov
jmp
mov
(bad)
(bad)
(bad)
std
jmp
mov
jmp
push
sbb
into
jmp
mov
jmp
mov
jmp
mov
jmp
mov
ins
mov
add
rcl
xor
shl
inc
mov
and
jg
(bad)
jns
push
fdiv
outs
xchg
imul
cli
call
mov
push
add
shl
sbb
or
(bad)
or
es
inc
adc
or
rcl
mov
inc
add
mov
ret
mov
scas
cmp
cmp
out
mov
dec
sub
add
rcl
and
or
adc
push
add
add
or
and
dec
mov
inc
fiadd
call
mov
mov
sub
clc
push
rcl
call
add
(bad)
cli
push
aam
cmp
sbb
add
add
jl
mov
pop
mov
push
js
xor
add
dec
or
push
mov
js
mov
or
mov
jo
test
jp
ror
outs
add
sti
mov
dec
cmps
(bad)
push
add
mov
fldenv
push
push
inc
push
out
out
ss
push
add
rol
fnstsw
adc
ja
add
mov
pop
xchg
test
inc
rep
pop
leave
aas
push
cmp
or
cmp
lock
adc
or
xchg
les
mov
push
test
inc
xor
xchg
pop
adc
lahf
jne
xchg
jl
jge
inc
rcr
les
mov
sbb
gs
mov
cmp
add
sbb
mov
pop
or
mov
loope
cmp
cmp
iret
adc
mov
mov
add
daa
mov
push
(bad)
xor
sar
repnz
add
cmp
or
fsub
jne
loope
sbb
rcr
cmps
dec
pop
mov
mov
imul
ret
pop
xchg
pop
lds
mov
loopne
test
ror
popa
rol
jmp
hlt
js
adc
outs
add
adc
cmp
xchg
push
push
sbb
jbe
add
cdq
or
or
mov
mov
push
call
xor
jno
push
jl
test
mov
ret
adc
cmp
pcmpgtw
imul
mov
or
push
jle
shr
lea
std
pop
ret
(bad)
mov
push
sbb
add
xchg
inc
push
or
fbstp
mov
or
inc
inc
jg
pusha
movs
std
pop
js
cld
cmp
mov
pop
push
dec
inc
cwde
jne
call
not
sub
xchg
xchg
jle
jo
jg
xchg
push
add
loopne
push
popa
adc
cli
adc
xchg
rcl
and
mov
lods
daa
cdq
pop
lods
daa
js
iret
mov
das
stc
mov
clc
fsubp
rol
stc
pop
lock
or
dec
add
data16
or
iret
jl
add
ins
add
jnp
add
mov
pop
sbb
mov
jg
pusha
std
xor
or
pop
lea
cmp
cs
push
or
(bad)
cdq
add
adc
dec
mov
or
lods
mov
jmp
and
gs
sar
mov
rcr
add
cmp
add
pop
(bad)
push
mov
leave
aas
sub
mov
leave
xchg
and
add
or
jbe
adc
or
add
fistp
add
jmp
out
pop
sub
and
pop
pop
or
sbb
xchg
push
addr16
in
pop
cmps
mov
add
xor
pusha
add
ja
or
push
dec
jg
and
jmp
rcr
clc
mov
xor
and
ror
inc
lahf
adc
pop
add
fnstcw
add
mov
inc
add
push
push
xchg
push
aas
in
add
jns
sbb
rcl
and
mov
sub
jmp
cld
(bad)
shl
out
popa
add
pop
cmp
xor
or
jnp
push
dec
pop
mov
ror
mov
mov
dec
movs
and
in
ja
cli
lds
push
sbb
fdivr
mov
mov
loope
ins
mov
in
or
xor
sub
push
mov
jne
iret
out
jmp
pop
or
inc
cld
cmp
and
dec
jne
xchg
adc
push
ret
jp
clc
data16
jae
push
jg
clc
add
dec
jmp
adc
sbb
or
dec
jne
adc
cmp
js
or
adc
inc
pop
pop
lea
push
pop
cmp
hlt
(bad)
mov
or
shr
ret
cld
in
test
(bad)
add
hlt
inc
push
ss
adc
ja
adc
dec
push
sbb
jmp
aam
shl
add
test
pop
dec
in
mov
test
pop
shl
sub
jo
dec
xlat
mov
aad
adc
mov
int3
cmc
pop
mov
dec
inc
clc
imul
shr
ret
mov
pop
mul
dec
jl
cmp
jge
sub
sbb
jb
adc
push
je
std
and
push
in
xchg
mov
xor
jmp
clc
shl
xchg
xchg
mov
inc
pop
jne
xor
jge
jg
jno
mov
sub
scas
jle
sub
add
lea
sbb
adc
push
cli
mov
clc
repz
push
lea
or
dec
fdivr
xlat
adc
imul
outs
clc
fucomi
add
gs
cmp
mov
mov
lea
sub
add
lock
add
lahf
push
pop
aam
in
repz
inc
pushf
xor
mov
push
pop
lock
sbb
adc
adc
hlt
loopne
cli
je
retf
xor
sbb
pop
or
shl
cmp
push
in
jmp
je
inc
aaa
outs
add
call
or
(bad)
mov
in
xlat
je
or
and
dec
fcmovu
fs
add
sub
jg
sar
stos
add
pop
cmp
retf
je
call
jl
mov
(bad)
sub
sub
ficom
fsubr
adc
mov
test
push
inc
cmp
movs
stos
xlat
push
push
fist
xor
dec
xor
jno
or
adc
and
push
cmp
adc
mov
mov
adc
push
inc
das
xor
xor
outs
pop
xchg
cs
adc
pop
sub
scas
add
mul
sub
xor
fnsave
pusha
or
sub
repz
push
jmp
push
push
das
rol
cld
pop
push
mov
and
mov
jns
inc
xlat
inc
dec
ret
mov
test
or
jbe
inc
add
push
sbb
call
shr
push
mov
mov
add
xor
test
add
mov
aas
mov
retf
push
sbb
sbb
xlat
add
pop
aam
rcr
loopne
jb
push
push
and
add
cmps
(bad)
data16
inc
and
sub
enter
pop
das
or
cmp
lahf
and
and
push
sub
pop
dec
cmp
push
and
inc
pop
fdiv
scas
or
ret
cmp
push
int3
add
add
test
push
loope
daa
push
ja
xor
pop
stos
lock
in
mov
inc
xchg
pop
pop
sub
mov
pop
lahf
ds
mov
or
inc
sub
jl
push
mov
retf
fs
int3
cmc
inc
fidivr
(bad)
rol
out
and
cmp
and
push
dec
add
cmp
out
ret
or
je
cmp
dec
cmp
je
mov
adc
ror
push
inc
adc
fimul
add
and
out
jmp
repnz
mov
or
pop
cs
cs
mov
jmp
call
xor
lock
mov
mov
push
cmp
add
xlat
stc
pusha
loopne
sahf
out
adc
cmps
and
out
pop
jbe
test
push
mov
fiadd
sbb
lea
in
jae
sahf
xor
ja
xor
or
lahf
sbb
jmp
stc
cmp
(bad)
pop
stc
inc
fs
jge
sbb
test
jo
data16
test
cmp
jo
icebp
jmp
mov
inc
lods
hlt
popf
adc
loopne
push
gs
nop
xlat
les
lea
outs
cld
sbb
push
popa
movs
sub
push
add
sar
add
loope
and
outs
ficom
and
pusha
or
sub
test
pusha
or
jo
psrlw
mov
pop
xchg
pop
loopne
in
mov
add
pop
inc
cmp
push
or
jge
popa
sbb
lea
daa
sub
push
xchg
nop
inc
ret
adc
push
dec
cwde
test
jle
or
adc
jmp
aas
add
xor
and
and
ds
sub
jbe
adc
ror
sbb
lock
test
(bad)
and
mov
push
sub
popa
jge
inc
push
mov
jno
adc
sub
jne
sub
push
repnz
jmp
jmp
ja
dec
cmp
mov
mov
(bad)
loopne
scas
les
cmp
or
ja
sti
add
add
pusha
mov
add
jmp
das
mov
test
jmp
add
add
dec
fisubr
in
sub
ja
adc
popa
push
out
popa
adc
in
pop
loopne
lods
or
push
xchg
out
icebp
inc
addr16
cmps
shl
call
pop
out
xchg
xchg
inc
or
dec
jg
add
imul
and
or
mov
adc
add
push
push
pop
movs
imul
pop
mov
push
js
cmc
mov
adc
cmc
adc
(bad)
xlat
cmc
nop
jns
mov
and
outs
pop
mov
cmp
clc
sub
mov
pop
mov
dec
test
clc
mov
daa
lock
jmp
jb
jb
fsub
in
jb
jb
in
hlt
clc
cld
add
or
jo
or
and
mov
jae
adc
prefetcht2
daa
daa
daa
and
sub
sub
sub
inc
jno
fstp
push
aaa
push
setno
lods
fcom
call
push
pop
jmp
and
mul
mov
in
lahf
rcr
jmp
pop
pop
cs
push
push
dec
sub
(bad)
xchg
mov
pop
or
je
(bad)
fldenv
xchg
out
or
xor
fincstp
fild
push
or
push
not
loopne
rcl
(bad)
rcl
cmp
outs
add
(bad)
cli
(bad)
fidiv
sub
sbb
inc
loop
pop
test
ror
mov
xor
repz
test
push
cdq
mov
pop
call
pop
mov
loopne
and
(bad)
mov
repnz
(bad)
mov
lahf
xchg
and
inc
jl
push
push
mov
int
mov
shl
or
movs
push
loopne
int
pop
xor
ror
lods
arpl
hlt
rcl
jmp
or
lock
mov
xchg
inc
inc
push
or
cmp
and
pop
xor
cmc
jo
mov
xor
inc
jmp
cmp
or
add
add
or
sar
add
(bad)
fdivr
push
retf
mov
inc
or
retf
jb
push
out
aam
inc
(bad)
sub
out
out
xor
sbb
mov
jmp
push
mov
push
push
jb
xchg
cmp
and
das
xor
jg
mov
cdq
int
or
inc
adc
movs
mov
push
rol
adc
pop
jl
or
inc
xor
shr
and
arpl
inc
(bad)
sti
push
and
cmp
je
push
pop
enter
repnz
sub
dec
inc
out
dec
test
adc
adc
int3
cs
jg
cmp
sub
(bad)
fdivr
add
cmp
xor
nop
sub
inc
int
jmp
adc
sbb
es
sqrtps
shl
add
ret
stos
or
mov
in
mov
clc
and
dec
sahf
lock
pop
cwde
or
xchg
ret
jp
add
pop
jecxz
add
dec
mov
call
pop
mov
dec
push
popa
cmp
fldcw
fisub
cmps
leave
lods
xchg
add
jo
inc
lock
aam
retf
(bad)
xor
and
add
or
xor
adc
xor
(bad)
imul
xor
(bad)
and
je
fsqrt
push
sbb
and
or
imul
sbb
cwde
imul
dec
lock
add
pop
and
pop
jmp
dec
mov
rcl
rol
xor
pop
iret
add
and
mov
fiadd
sahf
push
hlt
test
aam
aam
or
fsubr
into
stos
mov
push
push
dec
shl
add
add
inc
cwde
std
push
clc
(bad)
fimul
add
cmp
fcmovnbe
or
lahf
adc
fadd
ret
cmps
mov
add
cwde
or
dec
loop
gs
sbb
inc
jecxz
or
(bad)
hlt
(bad)
fstp
mov
call
dec
pop
gs
dec
jne
mov
mov
push
add
cmp
ja
mov
mov
outs
fmul
inc
mov
lods
inc
adc
cmp
jge
or
out
jbe
loop
aas
in
mul
jecxz
jp
outs
cmp
add
jo
fs
inc
add
cmc
mov
loopne
rol
or
pop
or
add
cmpps
adc
loop
daa
int3
lock
in
rcl
jo
inc
xor
sub
add
jbe
pop
add
sub
hlt
mov
xor
push
scas
inc
xchg
rol
retf
add
and
or
inc
rcl
cmp
jbe
xor
xor
sub
lock
jne
(bad)
out
(bad)
aas
pop
push
adc
push
cld
inc
add
pop
ret
fisub
sub
mov
adc
(bad)
adc
dec
jl
push
push
mov
inc
ss
pop
pushf
mov
in
sbb
sbb
and
push
cdq
jle
cmp
inc
sbb
adc
pop
or
or
xchg
xchg
test
push
and
xchg
or
and
mov
inc
adc
dec
loopne
jmp
inc
push
dec
add
rcr
adc
or
xchg
sbb
push
or
daa
push
icebp
xchg
retf
and
ret
jmp
jle
mov
clc
fs
jne
cmpxchg
adc
adc
(bad)
push
or
inc
push
add
inc
pop
mov
push
pop
or
cld
push
add
or
call
addr16
add
or
loopne
in
jnp
jae
sbb
js
pop
jne
and
mov
adc
add
inc
add
sbb
push
sub
mov
(bad)
mov
and
lahf
test
inc
cmp
inc
push
adc
imul
mov
(bad)
jns
adc
inc
push
ss
je
shl
pop
sbb
inc
sbb
mov
outs
neg
inc
cmp
test
sub
dec
push
push
xor
ins
fdivr
add
lahf
test
or
sbb
dec
jmp
jmp
fs
enter
push
xchg
adc
jg
cmp
out
inc
mov
mov
mov
aam
inc
or
mov
movs
cmp
push
in
add
lock
push
test
sbb
sar
(bad)
div
outs
inc
adc
mov
mov
mov
push
out
scas
pop
dec
add
inc
stos
pop
xor
push
cmp
cmp
mov
inc
cmp
and
and
and
(bad)
push
lods
repz
cmps
ret
sub
cmp
test
ss
push
pop
sub
jnp
pusha
push
movs
enter
nop
cdq
int3
xor
test
popf
sbb
dec
out
inc
sbb
scas
popf
loopne
ret
or
push
jnp
xchg
in
sbb
mov
je
das
outs
ins
sbb
repz
cmc
add
adc
data16
popa
jb
bswap
push
sub
jb
mov
dec
sub
ja
inc
mov
mov
and
sub
mov
neg
and
mov
and
add
pop
cmp
mov
lds
lock
mov
add
mov
push
adc
add
pusha
dec
jmp
(bad)
fldcw
pop
xor
mov
or
or
imul
or
pop
push
push
lock
call
or
xchg
jo
mov
mov
pushf
cdq
jp
lahf
jmp
in
test
je
neg
add
jmp
xchg
xchg
out
jnp
dec
add
rcr
mov
nop
enter
push
cld
jne
adc
xor
and
jmp
push
mov
call
xchg
fmul
add
enter
pop
mov
(bad)
and
push
inc
jns
je
inc
inc
sbb
mov
and
or
shr
mov
sahf
adc
mov
or
lods
push
xchg
dec
call
add
push
or
pop
xor
cmps
dec
dec
test
aaa
inc
cdq
xor
int
jge
and
inc
or
jo
ffreep
imul
ja
sub
test
ja
pusha
aam
jo
out
test
rol
sbb
movs
cmc
push
mov
mov
fistp
test
not
adc
inc
cmp
ja
scas
cmp
mov
inc
jmp
cmp
pop
add
pop
cld
ja
dec
or
retf
loopne
sbb
adc
fwait
div
pop
xor
and
retf
add
imul
shl
mov
add
or
data16
sub
jb
or
dec
mov
mov
push
or
xor
jge
adc
inc
add
jb
inc
add
outs
sbb
nop
pop
loopne
jns
pop
jnp
add
add
jp
jp
or
mov
adc
sub
(bad)
pop
mov
xor
rol
adc
invd
in
mov
and
je
cmp
adc
add
pop
mov
sti
xor
push
add
jl
mov
inc
iret
shl
or
mov
pop
cdq
dec
mov
(bad)
mov
adc
cmp
std
or
push
adc
inc
call
mov
adc
or
mov
and
inc
ja
mov
ret
rol
loope
cmp
adc
je
aas
xor
lods
jnp
rol
cmp
lock
sbb
xor
xor
mov
jbe
inc
mov
test
addr16
add
jg
mov
and
call
lock
lea
cmc
sub
xor
and
test
xor
ret
ins
jnp
stos
sub
pop
or
fcom
or
xor
jo
or
and
inc
int3
xor
mov
les
pusha
loopne
pop
dec
aam
int
rol
add
xchg
ss
cmova
outs
inc
stos
sub
sub
push
pop
js
mov
fsub
fistp
mov
sub
lahf
pusha
mov
add
into
and
add
jge
add
fwait
jno
jns
loope
hlt
pop
mov
nop
rcl
ja
xchg
pop
loopne
push
mov
lea
ds
mov
and
and
xchg
iret
inc
ins
or
dec
dec
(bad)
push
icebp
or
push
inc
lea
sbb
test
jae
mov
cli
add
into
jnp
jp
mov
adc
mov
dec
pusha
or
jns
lods
dec
mov
jge
mov
cmp
lods
data16
dec
push
dec
clc
and
lock
daa
dec
sub
mov
add
daa
scas
loopne
xchg
mov
sub
test
jb
in
sbb
cmp
adc
(bad)
jle
inc
xchg
shl
loopne
adc
rol
push
repz
add
or
adc
fdivp
cmp
and
xor
fld
inc
cmp
repz
jmp
lock
xchg
cld
mov
pop
rcl
mov
shl
push
and
add
fs
sub
adc
inc
pop
dec
jge
sbb
bound
and
push
pop
(bad)
cdq
dec
jl
clc
cs
cld
pop
xchg
sbb
push
push
outs
inc
mov
bound
push
imul
gs
push
pop
xor
xlat
push
add
sub
test
gs
mov
mov
xchg
mov
add
or
pop
call
cdq
add
mov
xchg
stos
and
nop
movs
sbb
push
jg
lock
xchg
loope
push
xor
adc
loopne
pop
xor
cmp
lock
(bad)
ret
pop
ret
add
sbb
jmp
cdq
cmp
sub
inc
add
sub
or
adc
xor
or
fucomi
ins
xchg
or
mov
ja
fisubr
cmps
jno
xchg
cmc
adc
nop
(bad)
pusha
pop
xor
xchg
lock
or
inc
sub
mov
js
sar
jl
and
push
ror
and
inc
mov
sbb
call
push
xchg
mov
pop
push
jecxz
xchg
aas
jl
adc
mov
ret
adc
xor
xchg
dec
cld
popa
mov
add
push
dec
push
cmp
inc
sub
inc
rol
or
and
dec
or
in
(bad)
cmps
add
push
mov
mov
lea
inc
cmps
ret
inc
in
xchg
fimul
xor
add
jle
inc
or
gs
ja
add
cmp
(bad)
rcr
fnstenv
ror
push
loop
inc
test
inc
add
or
sub
aad
test
ss
idiv
dec
sub
sub
and
sub
push
pop
sbb
cmp
sub
pop
mov
and
and
xor
xchg
or
arpl
jle
adc
in
add
call
rol
aas
addr16
sbb
or
test
push
clc
cmps
popa
(bad)
loope
add
dec
(bad)
stos
and
nop
bound
call
adc
jl
outs
inc
jo
retf
(bad)
xchg
rol
xchg
mov
mov
xchg
inc
add
xchg
mov
adc
jns
imul
and
xchg
pop
mov
add
out
fimul
cmp
pop
push
and
adc
sti
cld
xchg
outs
pop
and
xchg
inc
jmp
clc
push
dec
inc
stos
in
dec
jne
jo
inc
adc
mov
test
je
and
dec
clc
dec
mov
sbb
add
nop
loop
cmps
add
(bad)
hlt
adc
shr
imul
mov
push
xor
push
cmp
xchg
(bad)
popa
cmps
mov
inc
jge
cmc
pop
call
(bad)
fwait
jno
jge
sbb
xchg
test
mov
popa
cmc
add
adc
inc
sub
fimul
je
adc
outs
add
je
or
cmp
sub
dec
dec
jl
xor
(bad)
push
popa
pusha
or
mov
dec
xchg
mov
push
adc
inc
rcl
sub
adc
call
cmp
(bad)
loopne
and
or
leave
and
jmp
add
nop
(bad)
rcr
and
ret
add
std
jg
mov
jle
sub
or
push
xor
cli
sar
xchg
in
push
pop
push
dec
dec
dec
inc
dec
push
add
mov
retf
fcom
or
gs
mov
and
xor
aaa
or
dec
mov
js
or
xor
mov
test
or
and
lds
add
push
adc
fisubr
add
jne
push
add
pop
push
add
pop
add
and
stos
or
arpl
sbb
sub
jp
sbb
repnz
cmps
add
jl
or
push
pop
test
mov
test
pusha
sbb
sub
adc
inc
adc
or
sbb
jnp
test
aaa
loop
test
pop
mov
xor
test
sbb
and
sbb
ret
cmp
shl
pop
in
jmp
and
movs
pop
daa
push
call
call
cmp
or
mov
adc
(bad)
aam
mov
adc
outs
dec
setp
nop
cs
mov
mov
mov
cld
mov
pop
popa
out
sti
shr
icebp
sbb
sub
add
xlat
test
inc
scas
xchg
loopne
pop
or
xor
inc
or
jbe
mov
and
nop
fmul
inc
sbb
sar
push
mov
cmp
loopne
xchg
fmul
dec
and
out
mov
push
in
es
or
mov
jns
jge
or
push
lods
inc
inc
push
jo
adc
mov
rol
or
cmps
push
dec
inc
lods
rcr
inc
arpl
aaa
pop
and
add
or
mov
or
hlt
(bad)
out
push
je
outs
jae
daa
jl
xor
pop
outs
ins
rol
add
or
lods
js
and
pop
shr
and
jmp
adc
fwait
inc
or
ret
dec
pushf
sub
push
adc
shl
cmps
iret
xor
and
mov
test
lods
imul
pusha
dec
enter
ins
popa
push
psadbw
and
and
mov
or
push
sbb
test
pop
cwde
in
push
stos
push
push
cmps
(bad)
cwde
(bad)
mov
aam
inc
(bad)
pop
pop
mov
fucom
pop
test
push
adc
add
dec
cmp
lods
inc
daa
pop
xor
or
add
and
adc
sbb
add
mov
pop
cmp
xchg
adc
inc
push
movs
fstp
xor
jle
inc
les
push
aas
and
js
adc
mov
dec
mov
or
sbb
xchg
xor
adc
inc
or
into
in
test
ja
mov
nop
xchg
sbb
push
dec
sbb
jl
jg
add
pop
cdq
inc
and
out
in
sahf
add
mov
sub
cmp
lea
xor
jl
cmp
jnp
add
inc
inc
call
aad
push
dec
repnz
inc
cmp
inc
inc
add
xchg
xchg
js
sbb
movs
cmp
inc
jne
dec
mov
mov
ins
push
sbb
clc
mov
hlt
sahf
inc
or
push
xchg
sti
cmp
fsub
cmp
iret
nop
int3
mov
add
cwde
sbb
jle
lods
lahf
mov
jle
mov
or
xor
(bad)
movs
pop
lds
push
das
movs
or
add
add
or
ret
and
pop
sub
enter
push
pop
jae
sub
iret
shl
pop
(bad)
mov
mov
add
or
pop
sbb
mov
popf
xor
push
fbld
loopne
mov
add
ret
mov
mov
jb
fdivp
sbb
xor
pop
pop
sbb
inc
adc
and
(bad)
inc
adc
push
or
mov
mov
movs
sub
xchg
out
mov
cmp
movs
xor
dec
stc
or
loopne
cwde
sar
pop
xor
fidivr
out
test
sbb
daa
div
shl
mov
xor
push
push
adc
ffree
gs
pmaxsw
nop
xor
cmp
ss
pop
(bad)
and
jno
adc
jae
push
push
retf
lods
push
pop
(bad)
lods
inc
or
loope
inc
push
xor
xor
mov
cmc
stos
sbb
(bad)
mov
and
inc
or
push
sub
nop
xor
mov
jnp
ficomp
mov
jg
in
sbb
cmp
mov
jo
inc
or
xor
add
inc
sbb
sbb
cmp
and
sub
scas
cmc
or
cdq
ja
mov
xchg
mov
xor
inc
sbb
jne
mov
(bad)
js
push
loope
xlat
(bad)
pop
jle
aam
mov
lock
nop
rcr
and
push
push
int
and
test
jg
mov
adc
cmps
mov
jae
and
nop
and
fs
mov
adc
jg
inc
sbb
xchg
lock
out
cld
imul
mov
or
adc
xchg
sub
or
inc
push
pop
clc
add
add
mov
aad
pop
mov
push
dec
and
xor
push
jl
add
mov
xchg
sar
sbb
adc
inc
sub
inc
cmp
popa
scas
add
pop
dec
xor
fcom
lds
add
sub
ret
aaa
inc
fs
loopne
add
ror
mov
jnp
xor
mov
or
push
adc
adc
js
pop
in
mov
shl
call
outs
push
addr16
jge
push
inc
clc
adc
fst
dec
jl
fwait
adc
xchg
jg
ins
dec
stc
adc
push
or
mov
adc
sahf
inc
inc
jp
mov
js
xchg
dec
out
int3
adc
inc
xor
or
xchg
nop
dec
or
push
push
push
mov
push
and
dec
mov
add
mov
in
loop
add
jne
imul
pop
ret
and
mov
push
cmp
cmps
xchg
fist
push
xor
pop
pop
daa
inc
out
jmp
jae
test
nop
jo
mov
cld
xchg
sbb
ins
push
inc
hlt
jno
add
clc
push
(bad)
sbb
inc
rcr
push
lds
pop
sub
adc
dec
shl
add
ins
adc
jno
in
adc
pop
dec
pop
push
cmps
cmp
inc
mov
xchg
adc
mov
cmp
inc
fiadd
xchg
cwde
ja
fs
jne
lahf
fs
clc
pushf
inc
aas
loopne
fdivr
inc
pop
call
sti
inc
inc
mov
or
mov
aad
pushf
pop
rcr
inc
inc
ret
(bad)
int3
inc
(bad)
call
jmp
ins
adc
lock
xor
dec
mov
mov
xchg
xor
shr
mov
arpl
push
push
push
push
adc
ins
lods
cmps
outs
add
and
arpl
add
mov
inc
cmp
int3
mov
pop
and
(bad)
jl
pop
sub
loopne
movs
cmp
pop
aaa
test
mov
and
adc
dec
ret
dec
ret
(bad)
retf
cmp
loopne
lock
lahf
fadd
inc
pop
add
and
adc
and
inc
mov
aad
das
mov
push
mov
outs
jmp
or
add
test
cwde
xchg
into
xor
es
inc
dec
or
sbb
and
imul
dec
add
jbe
dec
jl
rol
clc
adc
adc
adc
jo
push
sbb
jb
pop
jne
inc
fsub
ins
cmp
push
add
inc
loope
or
xchg
daa
adc
ret
test
adc
xchg
out
sbb
jo
je
pop
cwde
fwait
xor
mov
ins
cmp
adc
test
repz
and
xor
into
iret
mov
xchg
je
adc
mov
or
adc
add
or
sbb
mov
ror
jmp
mov
xor
je
xor
or
push
pop
inc
add
imul
push
ja
add
lahf
shl
dec
adc
and
lock
std
mov
loopne
mov
dec
adc
inc
or
call
push
inc
imul
add
loop
shl
ret
scas
cs
and
in
inc
add
sbb
or
(bad)
push
xchg
jo
enter
lods
add
jp
add
xchg
mov
add
ret
ss
jge
gs
ret
and
inc
cwde
fsub
pop
push
in
and
ret
and
in
adc
jge
adc
inc
xor
and
ret
and
dec
xor
push
call
sub
dec
js
stos
fsub
cmps
push
xor
jo
or
push
mov
lock
add
dec
inc
imul
xchg
adc
fwait
ror
mov
inc
clc
add
and
sub
not
jl
inc
bound
es
dec
in
dec
jne
test
loopne
push
imul
cmp
add
loopne
dec
daa
cwde
mov
sub
lahf
jl
xchg
jl
or
pop
mov
pop
rol
push
lods
in
paddb
push
inc
hlt
scas
in
pop
test
mov
test
mov
or
lea
test
add
and
and
mov
mov
sub
rol
adc
fld
jge
push
push
aaa
xchg
in
aas
cmp
out
add
dec
cmp
add
cdq
out
jl
or
dec
or
pop
sub
inc
cmp
pop
or
jecxz
mov
and
or
inc
xchg
mov
(bad)
mov
mov
push
fmul
rcr
ss
loopne
pop
push
(bad)
cmp
xlat
mov
and
jecxz
cdq
xor
sbb
call
aad
or
(bad)
inc
pop
sub
cmp
jne
das
mov
pop
add
dec
movs
add
mov
fwait
hlt
loope
add
xlat
jb
retf
ret
punpcklwd
int
gs
gs
push
mov
fstp
push
outs
pop
mov
or
cmp
jmp
adc
js
add
dec
cmp
sbb
or
cmp
nop
test
dec
and
push
pop
dec
add
enter
icebp
mov
popa
in
pop
clc
mov
or
iret
xchg
enter
jl
jl
loopne
add
mov
xchg
add
ror
or
ins
mov
xchg
inc
pop
test
add
xchg
addr16
in
cmp
leave
pop
lahf
or
dec
rol
pushf
push
push
xchg
add
clc
add
enter
xor
and
inc
pop
lock
pop
add
js
inc
iret
add
and
or
adc
xor
aam
clc
inc
repnz
jmp
mov
jo
xor
pop
mov
pushf
mov
add
fwait
test
aam
out
push
pop
cmp
pushf
sub
mov
add
cmp
push
mov
mov
stc
push
push
(bad)
clc
sub
inc
mov
and
adc
xor
pushf
mov
push
sub
leave
arpl
jmp
fmul
adc
inc
adc
lods
ja
add
mov
mov
stos
push
stos
jbe
xchg
repz
push
je
nop
scas
ss
push
dec
mov
inc
mov
push
int3
fnstcw
(bad)
cld
jle
test
out
frstor
data16
inc
mov
mov
out
out
or
jle
push
jo
les
jo
jnp
rol
push
pop
lock
outs
jl
and
les
mov
push
or
push
xor
je
push
pop
sub
xchg
push
sub
pop
enter
or
sbb
add
jl
cmp
vmread
aam
ja
into
cmp
push
or
and
pop
mov
mov
inc
call
adc
pop
adc
add
sar
and
pusha
nop
jns
jno
es
cwde
push
inc
push
push
lods
loope
sahf
out
aam
cld
adc
repz
cs
cmp
pop
cmp
repz
pusha
fs
repz
js
or
aas
pop
stos
(bad)
jns
xor
adc
mov
pop
adc
xchg
push
xor
sbb
aam
adc
add
and
aaa
add
push
or
inc
mov
sbb
push
add
adc
sbb
pop
adc
push
mov
sbb
inc
sub
xor
jg
jo
frstor
add
pop
mov
inc
add
xchg
mov
mov
pushw
lea
add
pop
dec
add
add
imul
ret
movs
fisubr
mov
call
cmp
xor
sbb
(bad)
xchg
(bad)
mov
movs
pusha
(bad)
xchg
or
adc
ror
or
push
mov
out
mov
or
pop
sbb
mov
inc
adc
pusha
add
idiv
pop
arpl
mov
adc
cdq
mov
lods
sbb
add
movs
mov
add
in
cmp
pop
dec
ret
push
fwait
sti
or
mov
shl
ds
inc
adc
dec
xor
mov
clc
rol
mov
scas
xchg
mov
ja
scas
jmp
add
mov
outs
or
inc
cmp
frstor
inc
or
lea
inc
loop
loopne
add
dec
dec
jne
enter
cmp
inc
popa
stos
sub
mul
test
(bad)
push
pop
movs
and
adc
mov
mov
aad
cmc
cmps
rol
or
sbb
fild
jl
or
mov
adc
ss
mov
and
mov
cmp
jbe
inc
cmp
fcomp
cmp
or
rcl
sbb
pop
mov
or
push
mov
jl
and
cmp
and
test
sbb
push
mov
adc
mov
imul
loopne
out
or
sub
jle
and
adc
mov
lock
xchg
xchg
sbb
adc
or
push
jbe
loop
or
mul
cbw
xor
xchg
cli
xor
and
sbb
out
jle
sbb
mov
sub
cmp
mov
mov
lods
mov
sahf
sbb
or
je
push
jmp
ret
test
add
aaa
sbb
dec
sbb
and
int3
xor
and
push
dec
mov
mov
sar
add
pop
ret
daa
sbb
adc
nop
nop
pop
std
sqrtps
out
mov
mov
in
inc
xchg
lds
dec
mov
leave
dec
loope
sti
adc
pushf
adc
fdiv
movs
lock
adc
cwde
add
jns
sbb
(bad)
div
loopne
je
movs
stc
std
scas
(bad)
stos
scas
enter
adc
or
mov
ds
dec
adc
cmp
clc
mov
mov
sbb
and
xchg
xchg
mov
jae
add
push
das
push
cmp
mov
stos
add
xor
or
inc
inc
imul
add
or
mov
jmp
lahf
mov
cmp
sti
push
adc
push
mov
(bad)
jle
clc
ror
lea
cvtps2pd
inc
fisubr
push
xor
out
mov
in
adc
and
cmp
add
rcr
out
popf
push
add
and
adc
sub
jne
test
test
ins
add
out
je
je
pop
push
jnp
bound
inc
pop
ja
fmul
pop
stos
ins
push
pop
cld
je
add
cld
and
pushf
cmp
jne
sbb
rol
jns
rol
inc
lods
pop
mov
out
xchg
mov
inc
push
xchg
dec
cmp
mov
or
mov
dec
adc
push
js
fild
and
movs
bound
js
and
mov
xor
sbb
add
mov
cmps
sbb
leave
pusha
or
cmp
ror
sbb
cld
jno
xchg
test
jno
pop
jg
xchg
or
shl
and
add
jl
ret
outs
inc
jo
fld
inc
mov
mov
jns
mov
cdq
movs
sar
out
or
jo
jg
in
adc
mov
xchg
pop
mov
mov
pop
mov
adc
pop
lahf
jae
mov
mov
push
ror
mov
and
jmp
add
inc
pop
xchg
add
jnp
cmp
sbb
inc
mov
rcl
mov
mov
sub
call
mov
xor
sbb
cmp
or
cmp
jg
jle
repnz
aaa
jno
clc
mov
aaa
mov
xor
mov
cmp
enter
sub
mov
repz
lahf
mov
cmps
add
add
add
imul
and
xchg
ror
rol
test
fmul
add
pop
cmp
lea
test
aam
and
call
aad
add
jmp
aad
jns
mov
sub
cmp
aaa
pop
and
arpl
mov
pop
jecxz
aaa
jns
mov
cld
les
add
inc
push
es
fadd
lock
pop
retf
or
push
ja
ss
jp
dec
sti
unpcklps
loope
rol
fs
jo
ja
in
xor
pop
ret
adc
rcl
out
cmp
push
inc
sub
pop
loopne
jnp
xor
add
mov
sbb
test
sub
das
and
data16
cmps
sbb
lahf
add
xlat
sub
push
xchg
sub
xchg
push
rcr
sar
fcom
jmp
xchg
ret
repz
movs
pop
or
repz
add
dec
cmp
into
sub
mov
push
rcl
mov
add
adc
pop
cmps
inc
ss
ret
repz
xchg
cmp
cmp
push
or
es
(bad)
aaa
or
stos
jecxz
sub
mov
paddusb
es
mov
int
push
inc
sahf
xlat
pusha
adc
ret
adc
mov
jns
shr
sub
sbb
and
mov
push
inc
xor
jns
inc
or
cmps
sbb
(bad)
and
push
pushf
adc
sub
jmp
or
mov
rcr
push
push
imul
aaa
in
or
in
push
adc
fild
es
push
(bad)
add
(bad)
cmp
neg
call
cmp
inc
es
enter
xchg
push
add
movs
(bad)
push
xlat
out
add
jge
pushf
mov
fdivr
mov
rcl
push
rcl
pop
mov
fs
add
xchg
aam
clc
sub
sti
push
lock
ins
gs
jb
push
mov
nop
jg
and
out
mov
inc
js
je
in
movs
and
ret
inc
jecxz
mov
jge
inc
sahf
add
and
xchg
mov
xchg
pop
ins
sbb
add
jmp
ja
cmps
xchg
lock
lock
mov
lods
lahf
sbb
(bad)
pop
ret
enter
sbb
mov
mov
loop
retf
(bad)
add
sar
(bad)
adc
retf
test
push
mov
cmc
inc
neg
or
stos
sbb
inc
scas
mov
jbe
jp
mov
and
ror
sub
mov
sub
into
dec
sbb
xor
lds
int
ror
loope
xchg
inc
adc
adc
push
js
cmovs
sbb
in
add
and
in
(bad)
daa
sbb
dec
adc
ins
cmp
in
ss
aam
cmp
add
add
and
sar
xchg
dec
adc
(bad)
cwde
add
(bad)
or
pop
ret
jae
stos
and
xchg
stos
addr16
pushf
and
sub
scas
int3
rol
sbb
push
adc
mov
sub
mov
aas
push
dec
jae
and
mov
and
jbe
retf
nop
stc
pop
fdiv
pop
mov
dec
add
ret
outs
pop
or
(bad)
into
fldcw
fadd
mov
sbb
sbb
dec
cmp
push
or
mov
adc
sbb
icebp
adc
or
push
fs
sub
sbb
dec
mov
or
add
aas
or
leave
ins
adc
jmp
mov
stos
scas
sub
adc
xchg
sar
movs
mov
jmp
push
js
xor
mov
das
dec
mov
jge
mov
adc
or
push
loop
jo
mov
(bad)
sbb
push
mov
popa
push
mov
add
mov
mov
pop
add
xchg
sbb
pop
hlt
idiv
mov
and
(bad)
xchg
mov
xor
xchg
and
add
xchg
or
in
ret
dec
test
not
mov
hlt
mov
adc
in
fild
pusha
adc
lock
hlt
arpl
add
cmps
daa
mov
cmp
or
sub
leave
or
cmp
dec
add
sub
lds
xor
push
and
mov
adc
popa
mov
shl
mov
loopne
inc
psubsw
das
shr
aam
rcr
mov
int
lock
sbb
pusha
sbb
aam
fsubr
adc
bound
add
mov
push
sar
loopne
sar
das
pusha
cdq
sub
ret
int3
jbe
out
pop
test
add
sub
loope
mov
mov
inc
leave
test
mov
push
rol
(bad)
pop
rcl
loop
xchg
pop
dec
jbe
lock
shl
rol
push
pop
mov
scas
cmp
popa
mov
pop
dec
das
shr
scas
and
mov
rol
shl
ret
or
cmp
adc
shl
or
add
adc
inc
out
in
imul
pop
sub
pop
mov
test
push
ss
rcl
sbb
cdq
mov
or
jnp
mov
xor
inc
je
dec
and
cmp
add
jo
les
adc
adc
add
or
pop
push
or
add
inc
aaa
mov
fcom
sbb
adc
push
dec
repnz
fmul
sbb
mov
or
pop
mov
xor
adc
adc
enter
adc
daa
push
add
aam
inc
popa
cld
and
rol
add
loopne
aaa
dec
add
clc
enter
pop
in
sub
cs
xchg
and
dec
push
mov
ins
ret
js
add
call
cmc
mov
push
and
lock
rol
add
jo
leave
mov
push
xchg
jnp
nop
mov
cmp
ins
sub
je
fld
pop
or
imul
xor
pop
push
lea
mov
push
sub
sbb
test
push
sub
and
add
pushw
pop
ret
stc
adc
add
and
ficom
clc
and
and
js
add
jne
and
(bad)
and
or
mul
cmp
gs
mov
mov
cs
ret
pop
xor
test
and
jmp
or
out
xchg
add
adc
lock
push
add
xor
test
cs
(bad)
aaa
jno
sbb
loope
lods
mov
xlat
ficom
rol
and
adc
push
(bad)
pop
sbb
ret
ror
add
jg
pop
sbb
add
adc
(bad)
push
push
and
adc
add
or
fcmovnu
nop
or
xor
adc
pop
ret
nop
aaa
and
sbb
adc
inc
out
adc
pop
add
rol
fmul
dec
(bad)
dec
xchg
mov
sar
mov
fadd
mov
fs
add
hlt
rcr
pop
pop
ret
das
pop
setl
jb
in
dec
nop
or
mov
push
mov
xchg
jl
into
daa
test
push
les
add
adc
test
fprem1
dec
pop
ins
jmp
mov
sbb
mul
add
mov
ja
nop
inc
mov
or
aaa
mov
fldenv
add
inc
into
fnstenv
aaa
xchg
adc
push
inc
dec
sbb
cmp
push
jno
sar
rcl
sub
sub
mov
mov
sbb
mov
sub
test
in
or
fld
fs
test
jo
outs
inc
inc
sti
dec
dec
inc
adc
jo
add
out
jns
jb
sbb
mov
imul
arpl
xor
aaa
dec
outs
popa
xor
movs
dec
outs
and
call
test
sub
xor
movs
(bad)
push
cs
inc
pop
jmp
fisttp
and
ret
mov
fcmovne
test
pop
add
lea
out
mov
mov
sub
fadd
cmp
ret
add
pop
pop
daa
call
nop
push
jg
mov
cs
adc
or
or
inc
add
(bad)
fdivr
lods
pusha
mov
nop
sbb
js
dec
sar
retf
dec
mov
xchg
cli
popw
add
mov
in
cmp
cmp
add
jle
add
push
xor
imul
xchg
cmp
add
in
adc
aas
inc
loopne
push
aas
movs
enter
in
imul
test
push
inc
cwde
inc
inc
(bad)
lds
mov
outs
fnsave
add
sub
inc
js
dec
mov
or
sar
mov
jbe
ins
inc
fs
addr16
arpl
pop
pop
and
adc
jnp
xchg
add
xchg
gs
test
add
push
dec
dec
fcom
fs
xor
nop
sub
or
mov
push
inc
sub
xchg
xchg
adc
inc
imul
enter
not
push
add
add
dec
fs
mov
or
mov
xor
xchg
add
inc
xchg
es
sub
ret
add
popa
jo
cmps
je
jle
jae
repz
bound
or
dec
fcomp
cmp
mov
inc
test
jp
pop
push
hlt
push
sbb
mov
aam
adc
je
dec
or
cmps
dec
aaa
push
ss
ror
sbb
sbb
inc
in
adc
mov
mov
jo
inc
in
sbb
jo
mov
push
lods
mov
add
or
je
push
imul
int3
data16
out
cmc
dec
rol
ins
jo
gs
cmp
js
sbb
adc
rcl
cmps
and
add
aas
sub
adc
in
mov
cmp
or
mov
jg
pop
repnz
popa
js
jp
je
pop
adc
dec
ror
dec
imul
xor
dec
push
add
outs
outs
je
lahf
cs
push
pop
sbb
dec
and
push
sub
and
test
inc
and
mov
dec
pop
xchg
and
xor
call
daa
xor
inc
xor
arpl
xor
ins
fisttp
adc
push
push
outs
jo
jo
stc
shl
push
push
cmp
jg
add
outs
ins
jns
adc
sbb
adc
fs
mov
scas
jecxz
jl
cdq
add
ins
inc
sub
xor
sbb
pop
sub
es
add
int3
out
add
fst
ret
cwde
or
inc
cld
push
push
daa
push
push
jle
cwde
shl
sub
imul
ins
add
add
inc
jnp
xor
sub
or
sbb
outs
and
mov
adc
add
sbb
ss
sbb
xchg
ror
sbb
mov
je
add
movs
pop
lock
xor
ins
imul
jno
mov
cmp
jmp
pop
adc
loopne
je
xchg
sub
js
mov
push
xor
outs
inc
hlt
fwait
cdq
fadd
inc
call
scas
fldcw
push
xchg
push
dec
lock
lock
mov
and
ss
dec
pop
dec
or
or
aaa
jl
cmp
inc
outs
fiadd
sbb
jo
cmp
push
mov
add
ss
fsubr
inc
enter
cmp
push
js
je
fcomp
mov
int3
fdivr
fadd
int
gs
jnp
pop
adc
outs
and
cmp
mov
retf
add
push
fidiv
jge
bound
cmp
sub
mov
loope
shr
xor
pop
gs
fidiv
fst
mov
test
loopne
loopne
inc
add
mov
adc
shl
inc
and
adc
(bad)
inc
adc
or
inc
adc
les
leave
inc
ror
and
loope
in
push
pop
inc
loopne
es
outs
js
jae
icebp
jno
add
jle
and
ja
or
or
xor
in
repnz
cli
fcom
lods
push
add
push
push
es
popa
jns
mov
add
xor
mov
lock
pop
scas
adc
test
adc
out
enter
sub
loopne
cli
mov
inc
push
xor
inc
push
rcr
ins
mov
inc
mov
mov
push
nop
push
cmp
inc
and
push
gs
pop
cld
xchg
frstor
mov
cs
movs
mov
xchg
fcomp
icebp
push
push
in
(bad)
or
mov
add
push
cmp
xlat
fimul
mov
push
nop
sub
xlat
jl
call
lock
inc
pop
add
mov
mov
mov
mov
mov
inc
call
sbb
push
sub
push
fs
fmul
mov
push
or
nop
bound
push
cmp
pop
xor
fidiv
or
out
ja
adc
sbb
pop
or
call
inc
and
push
and
xor
sbb
add
xor
adc
cmps
adc
cdq
or
adc
xor
jae
adc
cdq
or
push
ins
mov
sub
rcr
(bad)
outs
push
nop
or
mov
nop
out
jo
push
clc
test
push
cmovle
loop
adc
inc
popa
jo
mov
es
or
adc
cdq
loopne
jno
mov
push
loop
stos
inc
pop
mov
or
or
stos
inc
data16
into
(bad)
dec
or
loopne
sbb
sbb
sbb
push
test
leave
sbb
sbb
jo
mov
push
icebp
pusha
add
retf
ins
cs
xor
mov
mov
jne
inc
ins
mov
test
xchg
jo
or
cmp
push
outs
int3
dec
and
pusha
mov
repnz
test
adc
inc
xchg
sub
cmps
xchg
stos
in
sub
in
or
sub
add
dec
dec
inc
jmp
js
enter
dec
das
loopne
mov
add
add
pushf
(bad)
or
aaa
out
pop
lock
mov
push
outs
add
pop
pop
mov
inc
(bad)
push
mov
add
and
add
push
mov
xor
dec
adc
data16
dec
daa
or
pusha
mov
dec
or
ja
cmp
(bad)
out
xor
pop
add
test
movs
in
shr
push
aam
push
in
mov
push
mov
inc
cs
or
or
jmp
(bad)
pop
push
in
sbb
mov
outs
in
mov
pushf
push
push
add
adc
sbb
mov
repz
sub
mov
pusha
mov
dec
test
in
or
ss
pusha
test
push
mov
sub
add
or
adc
pop
lahf
and
or
jl
pop
popf
lock
xchg
mov
lock
push
jae
dec
inc
or
or
push
dec
call
or
dec
or
and
test
adc
mov
pop
and
cvttps2pi
in
not
pop
push
sbb
sub
shr
xchg
pmulhuw
adc
adc
cmovs
cld
(bad)
pusha
adc
add
xor
nop
push
inc
aaa
sar
add
xchg
cmp
(bad)
cmp
ds
fsubr
int3
adc
push
outs
adc
sub
out
and
loop
out
inc
out
test
lock
in
inc
cmovl
pop
mov
ins
add
enter
loope
jne
nop
fdiv
jg
pop
sbb
call
pop
xor
jg
test
and
cwde
mov
xlat
mov
push
sub
mov
ffree
dec
adc
mov
jbe
push
hlt
xchg
enter
ds
dec
lods
(bad)
and
inc
or
pop
and
mov
hlt
add
inc
sbb
loop
aaa
inc
cmp
outs
repnz
aaa
hlt
in
gs
inc
adc
xchg
inc
fs
inc
movs
xchg
sti
or
sbb
inc
pop
leave
ds
mov
inc
test
scas
loopne
fcom
ds
mov
hlt
push
xor
push
and
outs
inc
push
mov
push
jne
jbe
cmp
repz
hlt
pop
push
fidiv
or
inc
out
daa
and
inc
inc
adc
xchg
seto
adc
mov
data16
in
fist
fdivr
xchg
inc
in
call
(bad)
fdiv
fdivrp
xchg
adc
push
push
jae
mov
test
inc
fisub
pop
ins
or
sub
div
ret
jnp
pop
shl
cld
push
sbb
push
repz
sub
add
push
jo
repnz
pop
inc
mov
inc
lock
ds
xchg
or
mov
dec
jmp
enter
push
sbb
xchg
enter
fnstsw
mov
mov
hlt
xchg
cmps
jmp
xor
xor
dec
adc
mov
fwait
or
add
push
loopne
pusha
lahf
adc
pop
shl
push
retf
ins
adc
or
push
adc
fcmovnb
lea
enter
adc
add
popa
mov
pop
adc
(bad)
rcl
adc
inc
push
dec
mov
add
ret
inc
adc
adc
pop
out
daa
adc
mov
xchg
push
xor
dec
sbb
sbb
mov
and
xchg
push
pop
stc
sub
or
sub
dec
scas
xchg
and
and
es
sub
xchg
es
sub
sub
inc
mov
cs
mov
bound
pop
movs
sti
inc
(bad)
les
cld
ja
repz
(bad)
push
cmp
out
loopne
push
xchg
push
push
mov
push
mov
mov
or
(bad)
cld
or
mov
inc
popa
mov
or
push
lods
shr
nop
nop
xchg
pop
sub
ret
cmps
out
push
adc
or
push
or
jnp
mov
mov
mov
adc
sbb
clc
xor
xchg
add
add
sbb
int
or
add
scas
or
rol
xchg
inc
jo
dec
fs
sub
xchg
nop
xchg
stos
rcr
fdiv
je
xchg
sbb
inc
inc
mov
adc
pop
(bad)
outs
dec
(bad)
pop
les
and
(bad)
fneni(8087
or
xor
aaa
and
add
and
fnstcw
jnp
xor
rol
in
push
add
out
das
add
and
retf
inc
xor
rol
push
push
popf
add
mov
mov
fisubr
add
sbb
add
and
and
ret
dec
pop
jo
out
pop
popf
mov
and
not
or
sub
jl
or
ins
ins
and
pop
das
or
pop
push
xor
adc
sub
adc
adc
jo
mov
add
mov
cmp
icebp
outs
and
mov
les
jmp
inc
daa
ins
or
mov
push
outs
ins
pop
push
lea
sahf
push
inc
stc
pop
mov
or
push
xchg
icebp
(bad)
imul
pop
add
push
das
int3
sbb
push
or
jmp
sub
clc
not
push
push
adc
cmp
iret
xchg
(bad)
aam
or
xor
add
or
(bad)
addr16
nop
scas
sub
test
sbb
mov
icebp
dec
test
mov
sbb
test
(bad)
aad
sbb
pop
pop
cmp
sbb
fadd
push
mov
add
jno
adc
xlat
push
xor
addr16
lahf
mov
or
fcomp
js
sbb
inc
pusha
fst
dec
cmp
bound
or
iret
push
loopne
add
or
adc
sub
les
inc
and
xor
xchg
cmps
je
mov
scas
cmp
nop
mov
xor
sub
movlps
test
jno
add
test
jmp
push
daa
(bad)
sbb
scas
jo
jg
or
daa
(bad)
cmps
cmp
jne
mov
je
sbb
and
fdivp
retf
xchg
jae
ja
mov
xchg
push
cmp
ja
sbb
and
mov
pop
mov
mov
sub
sub
mov
adc
mov
push
push
add
dec
cdq
pop
mov
mov
dec
mov
and
inc
retf
inc
mov
fadd
je
push
inc
and
and
repnz
rol
ins
inc
mov
je
mov
shl
add
add
rcl
aaa
sbb
mov
mov
icebp
lods
add
xor
inc
sub
xchg
pop
ret
inc
enter
xchg
jp
js
aas
rol
cmp
test
test
lods
xor
sbb
mov
pop
or
aad
std
xchg
mov
adc
xchg
jb
or
inc
adc
sub
mov
jbe
push
push
pusha
dec
je
inc
jg
aam
ja
je
je
mov
lods
test
cmp
loop
push
js
or
les
adc
cs
test
xor
pop
(bad)
dec
popf
and
(bad)
pop
les
add
clc
add
adc
mov
loopne
xor
test
or
clc
pop
jg
mov
add
mov
imul
mov
lods
test
mov
test
daa
dec
cmp
sahf
push
repz
iret
cmp
or
cmps
xchg
nop
fwait
inc
push
xor
daa
push
cld
mov
or
xchg
cmp
xchg
sub
mov
test
sub
mov
mov
test
push
or
movs
icebp
and
mov
sub
rol
jle
push
mov
add
add
pop
aaa
(bad)
mov
cmps
pop
inc
int3
push
lock
iret
and
pop
xchg
les
fadd
repz
outs
enter
or
cmc
push
aam
jge
jg
dec
nop
sahf
push
dec
adc
ja
les
xor
xchg
mov
sub
adc
or
dec
or
inc
sbb
pusha
mov
cld
mov
scas
and
push
cld
xlat
and
mov
aas
mov
adc
dec
mov
mov
retf
add
push
or
add
cmp
andps
add
int3
pop
xchg
dec
inc
outs
mov
inc
aam
adc
adc
inc
dec
inc
call
rcr
outs
and
add
pop
adc
jne
and
in
or
dec
cli
mov
(bad)
push
pop
out
je
sar
enter
inc
jle
(bad)
jg
inc
call
je
test
je
mov
fidivr
and
int
mov
jmp
add
mov
or
and
sbb
or
sub
pop
int3
arpl
arpl
xor
inc
add
out
add
dec
nop
cmp
mov
pop
adc
nop
adc
cmp
and
movzx
ins
call
test
sar
mov
clc
sbb
dec
test
test
popa
mov
inc
push
pop
js
xchg
idiv
in
ret
daa
cs
mov
hlt
sub
add
and
mov
push
jbe
movs
ret
cmp
xchg
push
daa
repnz
ins
inc
xchg
(bad)
and
cmp
pop
popa
cld
mov
push
cmp
imul
sub
push
jl
pushf
mov
add
mov
xor
daa
push
adc
sar
or
loope
mov
add
mov
jo
and
nop
pop
sbb
ret
add
out
add
add
and
inc
adc
mov
or
mov
mov
mov
and
inc
into
lock
sub
and
and
test
shr
(bad)
push
and
ja
js
and
std
icebp
mov
je
push
pop
lock
inc
push
imul
call
push
or
add
(bad)
(bad)
mov
aad
mov
cmps
adc
cmps
mov
jns
movs
inc
jns
cmc
push
aam
cmp
cmp
icebp
sbb
pusha
dec
loopne
out
movs
push
jecxz
test
and
adc
xchg
ss
cmp
ficomp
adc
sbb
dec
push
mov
sbb
mov
dec
cmp
and
lds
pop
or
dec
mov
or
push
push
cmps
xor
and
adc
push
pop
add
inc
ds
scas
mov
dec
aaa
rol
push
adc
adc
inc
push
loopne
cmp
add
and
add
jp
or
fisub
push
sub
xor
sub
adc
bound
pop
dec
shl
jecxz
pop
pop
test
aaa
pusha
and
or
fcom
or
fwait
xchg
push
push
push
sbb
pop
and
inc
js
or
add
adc
pusha
fild
xor
addr16
cmp
and
jge
xor
ss
push
cmp
add
xor
das
inc
adc
mov
cmp
dec
pop
jo
mov
add
push
ret
das
(bad)
leave
mov
add
cdq
mov
pusha
mov
adc
add
pop
lods
xchg
xchg
sbb
fistp
movlps
out
hlt
push
clc
aas
mov
lock
(bad)
aam
(bad)
jbe
and
fwait
mov
sar
sbb
or
enter
into
hlt
mov
jb
test
inc
add
push
inc
mov
loopne
movs
aaa
add
pusha
loopne
sub
inc
sbb
add
jo
mov
inc
js
pop
xor
ror
xchg
push
cli
pop
mov
out
jno
mov
and
mov
mov
inc
mov
cmp
pop
mov
mov
popf
idiv
ins
add
add
push
add
push
cmp
pop
and
ror
and
call
(bad)
and
or
or
dec
and
mov
rol
inc
repz
push
inc
cmp
mov
xchg
pop
retf
fs
jo
lea
inc
add
jl
or
jo
push
inc
dec
push
sub
cmp
cmp
add
je
stos
lods
fisub
cmp
movs
call
mov
fwait
sbb
pop
test
(bad)
mov
shr
cmp
jnp
push
mov
push
mov
jbe
and
jp
push
dec
loop
cmp
push
mov
pop
mov
dec
out
or
hlt
add
jae
push
out
and
and
dec
or
push
push
or
dec
call
inc
dec
inc
cmp
pop
sub
push
lock
or
jmp
and
and
inc
test
xchg
sbb
inc
jb
cld
scas
xor
add
inc
jmp
ret
pop
cmp
jne
pop
add
push
add
mov
add
ret
add
cmc
bound
adc
in
add
sbb
add
aas
add
add
cmc
test
inc
imul
adc
cmp
out
push
ins
rcl
fcom
cmps
or
adc
lods
jo
pop
fimul
fbstp
inc
xchg
xchg
push
push
or
pop
ret
mov
cmc
xor
inc
sub
add
or
push
stos
loopne
mov
nop
mov
pop
aaa
das
and
pop
sbb
cmp
or
jmp
add
mov
sbb
jo
mov
push
adc
lods
xchg
and
mov
push
cld
sar
add
mov
xchg
shr
hlt
pushf
movs
das
jle
add
add
mov
gs
(bad)
cs
or
push
xchg
imul
(bad)
or
sbb
out
ret
adc
pop
call
iret
cmp
js
add
jle
xor
lock
mov
adc
or
(bad)
mov
mov
and
mov
pop
sub
(bad)
mov
sub
jmp
xor
add
sbb
mov
ss
cmp
mov
inc
sbb
push
add
stos
or
push
loopne
aad
cmova
jns
aas
add
push
mov
and
loopne
test
xor
push
std
lea
sub
out
or
(bad)
mov
mov
leave
inc
and
leave
sbb
cli
push
mov
sub
(bad)
cmp
dec
xor
push
add
in
add
mov
adc
adc
aam
push
sbb
mov
mov
xchg
xchg
cmps
add
outs
lods
pop
es
or
test
adc
clc
loopne
inc
add
inc
push
lock
dec
xlat
sbb
dec
movs
push
dec
mov
shl
cmp
jmp
mov
out
jg
or
jne
adc
pop
sbb
adc
push
jo
ins
xor
adc
or
shl
arpl
add
ds
ret
stos
gs
call
adc
lock
add
inc
shl
popa
int
push
(bad)
add
jecxz
cli
leave
fs
cmp
xor
or
cli
add
leave
int3
mov
cmp
pop
lock
cmp
xchg
pop
pop
test
jno
(bad)
popa
sbb
add
add
inc
add
sbb
ficom
ret
movs
outs
(bad)
mov
or
xchg
mov
adc
fistp
cmp
add
and
ins
mov
jle
pop
faddp
sbb
inc
outs
sub
out
xor
call
push
jne
imul
add
dec
jb
gs
sbb
fcomp
xchg
ss
adc
and
addr16
je
adc
inc
je
je
or
push
pusha
and
rcr
add
cmp
clc
push
add
xor
xchg
repz
mov
dec
xchg
push
popf
cmc
repz
popa
imul
add
mov
call
or
add
sbb
bound
(bad)
sbb
add
and
push
xchg
(bad)
pusha
adc
cmc
inc
push
add
mov
out
mov
adc
adc
imul
imul
cs
imul
loopne
or
jg
push
push
add
ins
pop
inc
push
bound
jg
and
mov
out
in
loopne
mov
push
outs
inc
push
or
adc
(bad)
pop
and
jg
add
mov
or
and
push
lds
mov
push
add
mov
adc
adc
mov
pop
mov
out
pushf
sbb
inc
pop
pop
sti
(bad)
and
test
inc
sub
add
iret
nop
shl
in
fcmovnb
ror
dec
mov
push
fwait
or
mov
adc
add
das
mov
mov
inc
or
push
sbb
xlat
aas
sar
dec
(bad)
(bad)
dec
test
jl
adc
adc
sbb
loope
mov
and
push
sub
dec
push
cld
pop
sbb
pop
or
std
mov
sbb
aam
xor
and
ret
add
cwde
(bad)
fbld
dec
xchg
mov
xor
lock
popf
pop
fsqrt
ins
or
inc
ret
sbb
stc
cmp
xchg
adc
xchg
add
adc
add
push
xor
cmp
aas
cmps
jo
mov
mov
daa
sti
ret
nop
aaa
inc
sub
imul
pop
jae
cmc
mov
xor
inc
cmp
mov
cmp
pop
xchg
mov
call
test
adc
sub
add
loopne
cmp
or
xchg
mov
shl
pop
loop
enter
or
mov
adc
ss
sub
lds
cmc
cs
ja
frstor
lock
lods
(bad)
dec
sbb
je
rcr
call
xor
sbb
sbb
adc
enter
addr16
call
add
test
inc
ins
cmp
jmp
inc
pop
mov
mov
push
or
call
jno
(bad)
jmp
adc
and
movs
cmc
fidivr
jmp
dec
push
inc
inc
(bad)
push
(bad)
xor
dec
mov
inc
lahf
loopne
aam
xchg
mov
mov
push
mov
add
adc
loope
ss
or
aaa
adc
cmp
das
pop
jno
mov
sub
push
dec
or
ret
sub
hlt
cmp
jne
inc
adc
inc
ret
push
out
ins
push
and
xor
add
call
mov
fbstp
adc
(bad)
cmp
add
(bad)
mov
and
adc
sbb
nop
inc
cmp
sbb
lock
pop
out
push
ins
ret
out
cmp
pop
(bad)
jmp
add
add
aaa
and
ins
pop
sbb
push
xchg
and
aas
cmps
push
js
popa
push
mov
adc
test
sbb
adc
cmp
dec
sbb
mov
and
and
xor
mov
and
jb
lods
sbb
pushf
mov
add
mov
mov
lods
lods
test
fs
pop
jb
enter
push
fs
push
push
fadd
fwait
jl
mov
mov
repnz
jo
test
ins
inc
push
test
outs
test
xor
das
sbb
and
(bad)
shl
inc
push
in
inc
sbb
or
pop
inc
lea
mov
pop
xor
add
fs
pop
mov
add
or
ss
sbb
inc
push
mov
inc
push
fdiv
pushf
(bad)
inc
push
pushf
int3
inc
sbb
jns
out
sub
sar
jb
stc
or
jnp
repz
push
rol
fucomip
shl
push
iret
repz
fisub
cmp
repz
and
ds
dec
mov
repz
xchg
fdivp
cmp
jp
cs
push
add
mov
cmp
jnp
out
pusha
or
push
sahf
out
fidivr
repz
jns
div
xchg
xchg
movs
cmp
out
sahf
push
pop
ins
jns
cli
outs
or
push
sub
sbb
xchg
dec
push
lock
mov
dec
jno
outs
test
(bad)
ss
mov
fidiv
push
push
add
mov
pop
sbb
daa
push
adc
mov
mov
outs
ss
sbb
fsub
xchg
ss
add
xchg
sub
mov
cmp
mov
push
push
dec
push
push
lahf
les
lahf
add
push
ss
xlat
fiadd
inc
iret
sub
sub
(bad)
sbb
sbb
aas
inc
lahf
repnz
sbb
aaa
inc
cld
mov
cs
cmp
aam
sbb
inc
ins
sahf
sahf
fs
push
push
inc
das
jmp
push
aas
aam
adc
add
loop
loopne
adc
add
add
test
sub
cld
pop
adc
push
or
(bad)
or
mov
sub
fmul
cld
push
mov
dec
inc
mov
dec
dec
fmul
shl
dec
push
push
fcom
mov
mov
adc
and
sub
xlat
cmp
sub
(bad)
int
or
pop
inc
adc
or
or
lds
inc
sbb
sub
fwait
push
adc
out
inc
outs
cld
mov
lock
sbb
sub
adc
adc
mov
add
pop
ret
outs
push
stc
push
mov
loopne
jne
scas
cs
je
or
in
and
test
cmps
call
iretw
daa
xchg
push
or
jge
pop
and
sbb
test
movs
add
inc
mov
shl
xchg
pusha
jmp
and
and
in
and
push
and
add
cdq
mov
dec
mov
movs
mov
inc
(bad)
ins
loopne
adc
push
mul
jge
add
loopne
add
push
sub
stc
dec
lds
pop
and
mov
cmp
mov
add
xchg
inc
cmp
in
enter
enter
jg
dec
inc
sbb
mov
rcr
in
retf
and
ds
and
xchg
sbb
mov
cmp
add
add
int
out
fild
aaa
test
xor
cmp
adc
enter
add
ficom
ds
add
or
lock
in
inc
fidiv
adc
cmp
push
add
or
jo
or
rcr
ds
stos
nop
les
pop
pusha
sete
push
std
xchg
push
test
out
xchg
bound
icebp
and
jg
dec
sbb
scas
sar
inc
or
sub
(bad)
adc
repnz
(bad)
adc
adc
mov
(bad)
adc
mov
sbb
mov
mov
rol
pop
inc
and
or
xor
cmp
pop
mov
lock
daa
cwde
lea
mov
xchg
inc
sub
sbb
sub
add
js
xchg
inc
xchg
(bad)
dec
add
xor
cmp
push
inc
cld
dec
retf
pusha
xor
cmp
fistp
sub
inc
hlt
mov
fiadd
aaa
sub
push
rol
mov
and
ja
out
popf
das
xchg
in
es
adc
push
inc
or
gs
sbb
jmp
push
adc
popa
push
and
jno
push
pop
adc
pusha
lahf
mov
and
jo
inc
add
test
adc
and
cmp
inc
xor
jg
clc
sbb
push
sub
adc
mov
cmp
dec
push
outs
sub
repz
clc
dec
xchg
lea
mov
xor
push
adc
mov
cld
out
nop
lds
or
std
add
jnp
in
add
ds
jg
sbb
sbb
dec
add
sti
data16
jo
repz
adc
xor
rol
inc
adc
ror
aaa
inc
cmp
mov
lock
scas
fidivr
jne
lea
jb
jmp
and
add
inc
or
retf
sbb
aad
jo
sbb
imul
mov
adc
xchg
xor
inc
pusha
or
pop
add
inc
adc
sbb
add
cmp
push
sub
jp
xchg
cld
inc
aad
jecxz
inc
xlat
add
inc
pop
push
sti
xchg
sbb
clc
and
mov
inc
push
in
jne
push
aam
mov
pop
and
outs
dec
push
pop
adc
rcr
cmp
mov
lds
(bad)
loop
dec
call
pop
add
pop
add
cmp
into
imul
or
cmp
mov
jne
sub
adc
push
dec
mov
jae
push
xchg
or
inc
jbe
mov
cmp
add
add
cmp
add
pushf
loope
dec
xor
cmp
retf
mov
push
hlt
inc
xor
sar
dec
mov
push
inc
sub
cwde
mov
add
pop
shl
mov
inc
outs
xor
jg
stc
inc
mov
cmp
mov
enter
jae
add
add
jne
add
fistp
nop
clc
push
push
push
mov
popf
sub
je
jle
inc
or
sub
fdiv
ins
pusha
add
mov
rcr
imul
dec
imul
pop
das
pop
iret
mov
ret
add
inc
adc
jae
cwde
sar
mov
cs
jl
ss
mov
loop
push
shl
sub
add
push
or
popa
jle
inc
sub
lea
inc
xor
cmp
mov
(bad)
mov
sub
pop
adc
and
pop
sbb
cwde
out
or
bound
push
mov
mov
in
and
adc
cmp
add
sbb
loopne
and
inc
fwait
mov
and
arpl
cld
mov
and
pop
test
xchg
add
rol
(bad)
mov
ins
push
mov
pop
jno
or
mov
adc
je
inc
cmp
jne
mov
sub
xchg
jb
add
loopne
rcl
xor
push
add
and
add
pop
mov
or
pop
in
je
sbb
mov
mov
into
sub
jle
mov
xchg
ja
xchg
fcomp
sti
sbb
mov
mov
loope
and
cmp
ret
lock
clc
sar
cmp
dec
mov
sbb
jmp
or
(bad)
cmps
pop
add
leavew
ja
aas
jecxz
mov
and
inc
and
inc
pop
call
(bad)
or
popa
or
in
loopne
or
cmp
or
(bad)
cmp
mov
in
lock
imul
push
push
sbb
push
push
mov
mov
inc
in
loopne
fnstsw
loopne
or
sbb
pop
mov
sbb
icebp
lock
cmp
loope
outs
or
imul
rcl
cmp
or
iret
sub
pop
ret
adc
and
xor
int3
dec
inc
sub
je
push
dec
leave
into
add
inc
je
adc
sub
sub
ins
push
or
pushf
sub
sub
adc
sbb
xchg
daa
cdq
pop
add
xor
(bad)
clc
jmp
mov
push
pushf
test
pop
ss
push
add
push
mov
sbb
(bad)
lahf
push
mov
lea
mov
cmp
ja
nop
test
shl
or
ss
sahf
or
dec
clc
or
call
mov
pop
and
fs
fcom
lea
daa
sar
add
add
mov
lods
icebp
jl
leave
out
push
cmp
lahf
pop
test
jo
mov
jno
mov
or
scas
xor
sbb
mov
sub
add
xchg
or
or
or
dec
cli
or
inc
xchg
out
mov
and
mov
pop
mov
mov
aam
inc
add
push
dec
cli
mov
jmp
cmp
ret
and
xchg
bound
dec
jg
mov
ror
or
jb
dec
je
jmp
aaa
add
and
add
mov
jo
mov
sbb
mov
adc
nop
jne
adc
into
ss
call
mov
jne
xchg
add
xor
test
out
add
lea
rol
pop
mov
adc
dec
jl
loop
dec
add
xchg
pushw
clc
push
dec
pop
or
stc
(bad)
adc
fmul
adc
mov
je
lahf
fiadd
adc
xchg
add
adc
pop
push
push
das
sahf
shr
sub
jge
dec
aas
call
lahf
mov
mov
outs
pop
or
inc
mov
test
adc
shl
out
sahf
add
ja
adc
xor
pushf
and
icebp
inc
test
sbb
rcl
or
xor
dec
jne
or
ret
hlt
call
outs
push
xchg
or
jmp
nop
nop
push
es
mov
in
in
dec
ins
jmp
lsl
inc
ins
mov
xchg
mov
test
mov
aas
out
cmp
test
mov
lahf
adc
les
xor
inc
or
inc
inc
xor
sar
cmp
sbb
push
shl
and
in
mov
lahf
or
adc
mov
lds
enter
movs
add
int3
out
and
imul
or
add
or
mov
pushf
call
push
test
jp
jmp
daa
add
aad
xor
inc
add
mov
icebp
and
jmp
movs
xor
sbb
and
dec
inc
test
es
push
lock
cmp
gs
or
popa
jne
mov
arpl
mov
pop
push
xor
test
pop
iret
inc
lock
in
or
sbb
mov
nop
les
mov
lea
mov
adc
test
shl
and
mov
ds
or
cmp
in
and
das
add
cmp
shl
(bad)
inc
push
daa
out
jne
ret
mov
xchg
mov
iret
dec
xchg
xchg
add
adc
idiv
inc
sub
xor
adc
cli
inc
jmp
mov
lahf
sahf
dec
clc
pop
loopne
ret
test
jne
xlat
xor
xor
jno
fld
jge
add
jp
and
cmp
jle
dec
fldpi
pop
adc
add
das
push
out
popa
add
xchg
popf
add
inc
xchg
and
fist
push
jge
sbb
lahf
clc
push
jmp
adc
(bad)
and
adc
mov
(bad)
(bad)
dec
repnz
mov
popf
ror
jae
dec
or
inc
adc
jg
loopne
js
dec
jg
sub
pop
adc
dec
push
adc
jb
sbb
in
sub
mov
dec
lock
das
cld
or
sub
inc
les
or
les
cmp
mov
jl
push
bound
js
dec
pop
jne
not
shl
jp
cdq
(bad)
repnz
je
or
mov
pusha
loop
push
adc
jne
push
jno
adc
adc
pop
or
and
mov
xor
push
and
fsub
idiv
test
stos
ret
shr
(bad)
adc
or
and
add
mov
mov
sub
mov
jmp
add
mov
push
jo
movs
(bad)
xlat
sahf
inc
in
dec
popa
call
cmp
adc
xor
adc
cmps
mov
adc
inc
add
add
mov
mov
ret
mov
xor
pop
rol
pop
lahf
repnz
inc
mov
inc
cmc
mov
xchg
lea
inc
outs
test
inc
pop
addr16
fiadd
push
push
inc
pusha
cmp
pop
dec
gs
ss
arpl
cmp
mov
outs
or
adc
shr
je
icebp
clc
push
rol
mov
enter
xchg
mov
stos
dec
inc
(bad)
test
repnz
pop
adc
mov
mov
in
je
fnstenv
inc
cs
cdq
aad
inc
icebp
jbe
mov
add
jae
ret
sub
lahf
add
dec
cld
lock
inc
push
sbb
xchg
ins
pusha
sbb
push
and
cmp
les
int
push
jo
mov
repz
retf
dec
je
xor
push
test
push
ret
sti
out
pop
jne
jo
aad
cs
pop
sub
aam
xchg
out
push
adc
pop
mov
sbb
and
mov
or
nop
push
sbb
xor
jge
stos
push
sub
daa
mov
fwait
inc
sub
push
jge
lock
sub
jp
icebp
loope
adc
sbb
xor
fisub
jecxz
test
inc
jns
xchg
or
xchg
sbb
pop
repnz
jo
dec
das
inc
push
adc
and
and
push
rcr
cld
test
xchg
fcmovnbe
fcom
and
out
lds
adc
cs
movs
dec
add
sbb
dec
sub
mov
out
retf
or
cmp
addr16
jbe
sbb
ja
xchg
push
mov
pop
daa
cwde
pop
cmc
inc
dec
and
les
call
leave
or
pop
ret
mov
sbb
popa
aam
or
cli
lea
jbe
mov
adc
(bad)
xor
jle
call
dec
push
fdivr
sbb
enter
cwde
retf
xchg
rcr
push
fstp
push
xor
mov
and
push
int
add
inc
mov
xchg
cs
xchg
ror
dec
aas
jl
push
pop
inc
or
mov
test
or
xchg
dec
add
gs
push
dec
xchg
dec
lock
icebp
sub
jo
push
pop
and
or
hlt
arpl
push
sbb
dec
dec
inc
add
sub
pusha
mov
push
and
cs
xchg
dec
pop
retf
and
jo
je
mov
adc
or
leave
and
(bad)
shr
lock
sbb
aas
push
dec
and
add
cdq
pop
loopne
push
mov
std
fisttp
add
mov
lds
dec
sbb
push
outs
adc
push
push
lahf
movs
das
dec
cmp
jl
sbb
push
nop
mov
inc
fiadd
mov
inc
in
in
ret
add
aam
not
test
pop
push
rol
mov
jns
add
add
pusha
mov
ins
ins
data16
adc
fadd
cld
mov
inc
aam
sub
mov
add
pop
inc
mov
sbb
inc
and
sbb
or
test
rcr
add
and
je
test
cmps
es
(bad)
jnp
cmp
mov
mov
call
sahf
sahf
push
ja
and
fisttp
push
and
rcr
inc
ret
ror
xor
sub
outs
and
xor
pushf
push
sahf
or
das
mov
xchg
mov
rcr
add
mov
(bad)
pusha
jnp
cmps
push
das
add
add
jae
shl
ret
pop
or
push
dec
xchg
jp
addr16
shr
dec
add
nop
aad
fs
cmc
pop
mov
xor
or
gs
out
cmp
jle
mov
mov
test
push
js
push
lahf
lea
mov
mov
rol
pop
or
out
inc
(bad)
xchg
add
sbb
int
pop
or
pop
inc
add
add
adc
(bad)
pusha
(bad)
mov
push
fwait
inc
inc
add
pop
add
jmp
fstp
xchg
push
fmul
fcmovnu
stc
enter
or
fld
aaa
add
pusha
xchg
in
pop
dec
adc
rcr
push
inc
xchg
or
and
inc
sub
inc
xor
mov
or
add
aas
or
aam
lea
lea
xchg
xor
loopne
pushf
nop
adc
ror
and
jg
les
add
dec
push
sti
test
jne
daa
dec
retf
inc
sub
mov
adc
sub
ja
push
outs
push
lock
aam
push
sti
ficom
jne
clc
push
push
js
jmp
jno
out
or
mov
sbb
ja
mov
inc
add
aaa
or
loope
pop
sub
sbb
jg
xchg
punpcklwd
cmp
stos
push
xor
wrmsr
js
inc
jb
dec
cmp
sbb
sbb
mov
xor
adc
mov
pusha
jecxz
pop
ja
rol
sbb
iret
nop
xchg
add
xlat
stos
adc
push
shl
xor
push
jmp
out
fidivr
add
dec
hlt
jp
sbb
adc
mov
rcl
adc
jnp
xchg
mov
dec
cld
and
jle
inc
pusha
or
pop
mov
push
(bad)
in
mov
or
jmp
xor
push
mov
jo
xlat
and
ins
pusha
adc
out
pusha
add
mov
cmps
adc
scas
push
cmp
je
sahf
push
push
xor
(bad)
js
or
add
xchg
adc
repz
fwait
pop
push
push
and
div
outs
iret
jnp
out
shl
das
enter
add
jns
movs
ja
dec
call
push
jo
add
in
ror
inc
lahf
sbb
mov
push
jg
mov
mov
jle
add
adc
lea
imul
pop
sbb
pop
mov
mov
mov
ss
lahf
jno
js
mov
ror
pop
ret
mov
fs
test
(bad)
fst
dec
pop
cmp
and
and
adc
cmp
pop
adc
mov
jmp
add
and
sti
sub
stos
cmps
in
(bad)
xor
pop
ret
adc
shl
(bad)
(bad)
cmp
es
shl
dec
add
inc
cwde
or
xor
int
and
add
xchg
jno
or
xchg
test
pop
xchg
dec
sti
or
xor
ja
xor
mov
and
(bad)
std
mov
lods
inc
call
aam
loope
cmp
inc
dec
mov
mov
dec
adc
int3
xor
test
aam
mov
leave
dec
(bad)
xor
sub
mov
(bad)
std
inc
adc
inc
mov
sub
pop
pop
add
pop
cmps
pusha
push
jmp
lods
or
add
jo
sbb
and
inc
jo
inc
out
push
mov
push
inc
loopne
popa
add
ret
add
or
cdq
sub
fcom
inc
lock
push
or
nop
mov
xor
in
mov
jnp
jge
mov
int3
out
push
xor
ret
fcom
add
add
dec
jo
dec
or
ret
add
xor
or
or
inc
push
imul
data16
xor
ins
(bad)
out
sti
ds
pop
or
or
popa
jb
add
add
sub
loop
add
js
mov
xor
shl
cli
lods
adc
outs
jne
dec
push
lahf
or
mov
push
bound
ins
fs
test
adc
jae
add
dec
fwait
add
fstp
pop
mov
jbe
jae
(bad)
test
not
add
push
or
or
ins
mov
nop
aam
sbb
xchg
dec
fcomp
fs
mov
adc
add
ja
cmp
into
xchg
pop
nop
cmp
into
adc
dec
xor
lds
add
push
mul
adc
imul
cld
inc
sbb
add
mov
inc
ins
popa
cmp
cwde
or
das
or
outs
lods
cdq
or
dec
mov
popa
ins
adc
dec
jno
add
(bad)
or
xchg
rcl
mov
sar
adc
jb
mov
mov
daa
dec
ins
fiadd
inc
test
inc
mov
les
hlt
mov
push
fdivp
fidiv
push
clc
sub
mov
cmp
repz
test
call
or
outs
and
or
push
aad
sbb
add
sub
scas
jmp
push
enter
mov
shl
xchg
sahf
mov
lahf
(bad)
jbe
test
push
and
adc
mov
(bad)
dec
(bad)
js
mov
nop
fcmovnb
dec
jecxz
inc
push
xor
scas
shr
out
xor
(bad)
clc
xchg
rcr
inc
xchg
jmp
pop
adc
dec
push
mov
call
ret
cmps
pop
sbb
je
sbb
and
mov
xchg
lods
movs
adc
push
jge
push
add
out
test
cmp
add
add
or
push
mov
cmp
aam
mov
add
adc
jns
test
dec
cmp
mov
rol
push
lods
fs
add
pop
int3
inc
and
xchg
sub
popa
dec
aaa
add
or
or
pop
pushf
cmp
loopne
out
push
or
adc
mov
pushf
rol
or
rcl
or
ret
add
bound
bnd
cmp
add
rcl
sahf
aaa
inc
cmp
enter
add
inc
aas
and
inc
inc
sbb
or
outs
jne
dec
cwde
adc
scas
mov
dec
pop
or
fmul
aam
fsubr
mov
inc
pusha
adc
xchg
sahf
xor
or
mov
jmp
and
movs
sbb
add
ins
xchg
or
sbb
fs
in
sbb
adc
nop
dec
sbb
add
sahf
xlat
ins
and
lea
inc
xchg
push
popf
adc
mov
mov
sbb
nop
or
es
pop
adc
add
mov
rcl
jecxz
ret
(bad)
cmp
mov
ficom
adc
gs
mov
daa
mov
mov
scas
not
mov
pop
inc
push
mov
xchg
jl
fs
fistp
loop
mov
outs
xchg
stos
jp
cwde
movs
inc
xchg
add
jmp
pop
mov
push
pushf
cmps
mov
mov
pop
adc
cmp
add
mov
xor
fist
add
inc
pusha
fild
pop
and
pop
cmp
add
mov
scas
add
loop
mov
push
outs
sub
pusha
dec
and
inc
mov
or
stos
loopne
cmp
scas
or
add
dec
pop
inc
push
mov
mov
pop
addr16
add
icebp
out
jb
sub
fmul
leave
retf
shr
xor
adc
push
push
fsubr
dec
push
push
jnp
mov
test
inc
push
sub
xadd
xchg
add
sub
push
and
inc
pop
(bad)
mov
adc
popa
out
andps
add
fdivr
push
jo
dec
jo
dec
mov
mov
or
test
mov
fstp
pop
or
sti
or
sbb
cdq
mov
xor
jg
sbb
push
push
sbb
inc
xchg
pop
xchg
loopne
jmp
ins
call
or
test
fstp
mov
adc
sub
and
mov
sbb
les
push
push
iret
add
jae
mov
(bad)
cmp
xor
mov
mov
movs
outs
mov
mov
push
sbb
mov
adc
xor
daa
inc
xchg
fidivr
loop
jmp
or
and
cmp
and
mov
movs
mov
mov
and
pop
or
nop
imul
xor
jecxz
or
or
push
or
jmp
push
and
or
sbb
jo
jmp
paddsb
sahf
gs
loopne
pop
popf
add
adc
and
add
mov
movs
cdq
mov
not
rol
pop
mov
fistp
data16
inc
or
clc
cmp
mov
aas
push
loope
repz
jl
push
cmc
pop
sub
xlat
hlt
(bad)
jmp
xor
xor
inc
inc
inc
inc
inc
dec
dec
dec
dec
pop
or
pushf
dec
push
push
push
push
xor
xchg
sti
push
push
pop
pop
pop
out
ins
mov
add
pop
mov
pop
sub
xor
fs
fcmove
aam
pop
fwait
lock
mov
inc
(bad)
jp
fdiv
jno
jecxz
push
mov
push
inc
sbb
loope
lahf
push
mov
xchg
xchg
and
cwde
adc
push
neg
add
pop
sahf
retf
sub
and
add
add
pop
cld
(bad)
mov
lods
in
adc
hlt
pop
xchg
movs
adc
jne
and
cmp
rcl
(bad)
out
mov
sbb
pop
aam
and
loopne
cld
imul
in
sub
jge
add
or
fbld
cmp
call
dec
fst
and
sub
jbe
or
pop
int
inc
jge
sub
lods
imul
sub
or
jnp
mov
cmp
out
sbb
loopne
jbe
adc
push
adc
mov
fldenv
nop
dec
in
adc
ret
add
inc
dec
mov
clc
out
xor
or
jmp
loope
add
mov
cld
es
shr
push
inc
inc
inc
loopne
arpl
call
or
sbb
shl
xor
call
inc
pop
xchg
add
pusha
dec
xchg
adc
push
les
mov
xor
enter
mov
mov
iret
or
(bad)
sub
pop
xchg
js
ror
mov
ror
add
inc
iret
xor
call
out
(bad)
cvtps2pd
sar
(bad)
daa
xor
jnp
sbb
bswap
sbb
not
(bad)
mov
add
jmp
pop
inc
mov
add
mov
rol
lods
xchg
mov
add
dec
jl
iret
loopne
pop
add
add
test
inc
das
inc
jmp
jns
mov
mov
add
pusha
loopne
jmp
xchg
sub
sub
lods
rcr
test
or
xchg
jmp
lock
sti
jmp
inc
or
fadd
pop
test
mov
out
(bad)
loope
cmps
mov
adc
test
movzx
mov
and
mov
cmp
ret
sbb
push
or
inc
xor
adc
out
adc
jg
shl
iret
push
mov
ret
push
dec
or
or
push
jmp
add
(bad)
nop
mov
add
or
add
jle
cmp
jg
mov
aas
test
popa
inc
sub
jo
loopne
cmp
fwait
push
loopne
xchg
les
push
inc
out
rcr
lock
add
xchg
mov
and
inc
jmp
cmp
jle
xor
sub
retf
mov
cmp
jle
cmp
ins
imul
sub
add
ja
sti
popf
or
jo
pop
ss
fcomp
mov
jmp
inc
push
data16
scas
or
hlt
xor
scas
mov
push
aaa
in
xlat
add
nop
adc
in
push
cmp
loopne
jne
jb
(bad)
push
(bad)
jmp
lea
mov
jge
add
mov
mov
adc
adc
iret
sbb
mov
and
or
cs
adc
or
and
pop
ret
fnstsw
aad
imul
inc
mov
dec
leave
add
rol
add
sub
je
cmp
clc
xchg
mov
add
(bad)
jl
mov
xor
imul
cmp
daa
jns
jg
not
sbb
ins
movzx
cmp
fbld
ret
stos
mov
adc
loopne
mov
inc
je
lods
and
mov
test
pusha
inc
daa
adc
iret
movs
xchg
or
iret
add
out
and
jl
hlt
or
pop
dec
pop
in
inc
push
outs
ins
and
cmp
and
xchg
aas
lods
pop
repnz
sbb
outs
xchg
dec
add
jg
aas
inc
mov
mov
and
es
or
je
and
pop
and
mov
mov
aaa
cmp
ss
cmc
inc
mov
aas
jg
xchg
push
jo
inc
aas
jl
inc
movs
fiadd
push
jg
cmps
xchg
add
jg
ds
adc
nop
fwait
or
sbb
mov
mul
and
mov
push
cmp
add
mov
mov
lock
mov
adc
mov
inc
adc
adc
aam
add
popa
or
sbb
add
test
or
mov
jg
dec
sar
out
jle
or
sbb
mov
js
jle
push
ds
dec
add
mov
xchg
pusha
push
js
sub
lock
xor
and
inc
ins
jecxz
add
mov
sbb
sbb
push
xor
clc
and
or
mov
jg
jae
xchg
mov
sar
mov
mov
push
xor
and
lock
ret
imul
retf
call
mov
test
jae
test
fs
fprem
add
adc
and
mov
mov
xor
pushf
pusha
dec
es
jb
sar
pop
push
les
jb
jle
inc
(bad)
sub
or
aas
add
fcmovu
adc
adc
fidiv
and
adc
push
js
jno
test
jo
retf
lods
adc
loopne
xor
ja
pop
fxch
sbb
test
sub
push
cmp
stc
out
pop
leave
mov
or
add
xchg
ret
fisubr
cmp
push
not
and
iret
mov
repnz
out
cmp
cdq
cmp
clc
out
dec
rcr
or
inc
fisttp
(bad)
rcl
ss
adc
movs
or
ret
es
push
and
out
bound
cmp
jnp
test
sti
adc
cmp
js
shr
xchg
lock
shr
push
add
add
pop
push
clc
div
inc
cmc
in
push
or
push
in
jmp
pop
xor
adc
mov
rcl
sub
xlat
xchg
mov
sub
push
mov
pusha
jo
pop
iret
cld
add
push
popa
xchg
inc
add
pusha
dec
pop
jo
mov
mov
jne
je
shl
adc
sbb
xor
fwait
inc
xchg
sbb
inc
xlat
push
inc
call
pop
cmp
pop
(bad)
mov
je
ret
or
cmp
pop
les
or
pop
gs
mov
popa
add
aad
cld
test
jne
fisubr
shl
dec
or
and
ret
repnz
int
jle
inc
or
mov
loopne
inc
data16
(bad)
ss
ins
(bad)
jle
adc
mov
je
xor
lahf
call
and
adc
clc
icebp
and
mov
nop
gs
push
int3
sahf
pop
and
dec
shl
adc
add
xor
dec
fisttp
pusha
inc
in
adc
push
cwde
sub
jne
icebp
adc
xchg
dec
cmp
int3
test
gs
cmps
add
shl
das
loope
ja
jmp
inc
arpl
add
lods
cmp
fld
cdq
cmps
(bad)
dec
out
inc
inc
xor
cmp
jge
mov
mov
or
aas
jae
mov
mov
adc
fwait
arpl
mov
jne
sub
add
cmp
adc
cmp
add
sub
adc
push
or
mov
lds
ja
lock
push
sbb
movs
mov
add
or
xchg
shr
mov
pop
mov
add
sub
aas
hlt
pop
sbb
inc
sti
pop
pop
mov
fmul
mov
adc
scas
loope
call
mov
or
add
test
ret
dec
add
and
pushf
and
ins
add
data16
jg
mov
mov
std
fs
or
hlt
hlt
mov
fisttp
aad
sub
sbb
mov
ja
enter
movs
add
test
xchg
inc
push
cmp
imul
popa
mov
out
shr
push
dec
inc
adc
aam
cmp
je
and
add
jnp
scas
or
test
sbb
sbb
xchg
inc
js
and
and
hlt
fadd
je
push
mov
xor
jle
stos
adc
or
sub
cs
xchg
sbb
push
ret
jmp
and
scas
inc
in
adc
push
(bad)
js
add
add
test
cmp
mov
add
pop
add
icebp
into
lock
es
rol
lock
mov
loopne
aam
or
pusha
pushf
(bad)
in
jg
nop
or
inc
sbb
xlat
or
fadd
sti
or
(bad)
sub
ret
or
or
mov
pop
adc
add
sbb
rcr
(bad)
aam
js
aam
adc
fld
pusha
pop
inc
shr
pop
pop
xchg
out
and
pop
inc
lock
loope
inc
xchg
hlt
int3
test
adc
cdq
or
stos
movd
sbb
dec
cmp
fisttp
in
add
pop
inc
adc
sbb
jno
and
stos
loopne
jl
fstp
sub
aas
les
or
ret
jo
push
(bad)
cmp
aas
test
test
and
dec
cmp
ret
addr16
and
xchg
fsub
add
cmp
gs
inc
xor
cmp
sub
xor
jmp
es
push
push
cmps
dec
inc
inc
or
xchg
xor
jmp
mov
add
fild
out
mov
inc
cmp
call
packsswb
inc
ins
mov
das
stc
jo
dec
shl
stc
lock
push
xor
cmc
add
push
jbe
fisttp
inc
or
sub
mov
add
push
dec
xchg
inc
jge
std
push
cmp
out
jmp
adc
push
fsubr
add
icebp
xchg
sub
ins
rol
xlat
mov
mov
mov
sbb
or
push
stos
pop
jle
and
aad
sbb
pop
xor
cwde
and
mov
and
or
sub
sub
sar
cdq
test
rcl
aad
(bad)
inc
push
push
sub
ins
xchg
jb
call
inc
sbb
fxch
aad
(bad)
add
retf
cwde
or
xlat
jge
sub
pop
imul
inc
and
jp
sub
test
push
lock
jge
adc
and
cmp
or
pop
add
popa
pop
dec
inc
fdiv
pop
xchg
hlt
iret
xchg
mov
or
hlt
pop
into
hlt
adc
and
outs
add
clc
scas
xchg
xor
repz
fldcw
daa
outs
add
pop
dec
(bad)
popa
sbb
push
pop
pop
xor
mov
and
inc
xor
pop
push
xor
lock
cld
enter
and
shl
pop
push
aas
mov
test
ins
inc
xchg
add
mov
mov
sbb
dec
vmread
jmp
pop
mov
cmps
or
jge
int
jne
clc
mov
loopne
jmp
inc
or
fld
sbb
add
push
and
mov
mov
sub
or
mov
sti
sahf
call
sbb
xor
(bad)
ds
push
push
mov
in
lahf
mov
sbb
or
adc
xor
ds
bound
je
mov
adc
push
std
add
ffreep
ins
mov
xchg
mov
add
dec
sub
and
dec
xor
jl
mov
inc
lods
imul
inc
or
(bad)
ret
xchg
add
popa
repz
add
add
int3
loope
ror
repnz
or
dec
das
call
nop
fsub
sbb
sahf
into
push
aad
dec
cld
adc
shr
les
jb
xor
outs
out
out
mov
stos
push
inc
call
icebp
call
std
push
dec
sbb
and
inc
xchg
cmp
retf
mov
lods
clc
jnp
inc
add
ror
rcr
and
sar
dec
lock
leave
test
clc
repnz
jbe
inc
test
xchg
inc
add
inc
sub
pop
jmp
and
add
ss
push
inc
add
add
lock
test
inc
test
adc
popa
add
or
add
pop
cmp
js
enter
cmp
add
add
ins
inc
pop
shl
in
loop
inc
cmc
mov
adc
loopne
sti
and
push
add
mov
(bad)
fwait
and
add
aam
and
test
mov
sbb
fbld
add
sbb
mov
or
add
data16
cmps
cmp
clc
fmul
cmp
pusha
call
adc
pop
push
sbb
pop
fidiv
in
jne
sbb
aas
pop
and
lock
in
sbb
inc
mov
and
add
cmp
mov
xor
aaa
icebp
call
fist
sub
push
adc
pop
jmp
adc
pop
into
add
adc
push
and
and
jp
js
test
pop
jp
pop
jl
or
popf
pop
dec
and
aam
mov
push
add
inc
mov
inc
ror
(bad)
ds
or
addr16
inc
sub
jl
adc
call
fsubr
movs
rcl
cwde
lock
lea
pusha
repnz
sub
push
ud2
mov
mov
pushf
and
push
adc
popf
ss
(bad)
hlt
pop
mov
cmp
add
pop
lods
push
pop
mov
pop
sub
inc
push
mov
adc
push
adc
sbb
add
add
fist
inc
jne
cdq
adc
mov
or
stc
int
nop
jo
mov
das
call
cwde
xor
cmp
push
mov
inc
pop
sbb
xor
add
out
ja
dec
imul
sbb
pop
dec
push
xor
add
ret
pop
mov
movs
cmp
and
push
add
aam
add
loopne
adc
(bad)
vpcomuw
add
pusha
mov
mov
mov
pop
test
xlat
mov
add
mov
cwde
sub
(bad)
outs
test
(bad)
push
cmp
xor
pop
test
xor
fld
rol
adc
fstp
retf
adc
cmp
inc
sub
mov
add
pop
add
cmp
adc
or
div
jp
aas
jne
ins
jle
inc
adc
mov
cmps
xchg
pop
cmp
mov
fisttp
mov
add
mov
movs
jb
pop
nop
loope
fs
push
push
dec
stos
add
mov
xchg
add
or
and
or
fbld
inc
xchg
or
test
adc
pushf
ins
clc
mov
enter
test
aaa
add
cmps
lods
in
pop
jg
xor
jno
or
pop
out
aas
je
(bad)
adc
pop
xor
mov
mov
push
rcl
xchg
adc
dec
pop
leave
mov
test
in
das
xchg
repnz
movs
int3
push
or
sbb
add
push
inc
lock
div
cmp
nop
mov
popa
xchg
mov
and
inc
sub
pop
add
dec
je
lea
sub
(bad)
movs
or
ins
pop
add
(bad)
inc
lock
mov
mov
pop
mov
mov
mov
loopne
add
dec
and
push
rol
call
daa
pop
add
rol
sbb
adc
add
mov
ins
ins
and
enter
sub
cmp
mov
cmp
je
fs
mov
inc
retf
fs
inc
pushaw
fld
fimul
std
stos
dec
mov
push
ret
dec
xor
xlat
push
cli
and
icebp
mov
aaa
pop
mov
sbb
fdivr
jl
pop
cmp
jge
mov
jbe
inc
add
std
psrlq
jbe
and
jle
mov
mov
enter
pop
test
mov
pop
fcomp
add
add
into
add
adc
dec
add
mov
xchg
dec
je
push
popa
(bad)
inc
jg
clc
pop
or
add
mov
adc
or
push
enter
shr
out
fisttp
xor
jnp
test
adc
test
dec
push
daa
in
jbe
and
jne
xor
enter
xchg
mov
sub
cmp
inc
cmp
loopne
fld
xor
jo
jo
sub
mov
jmp
popf
sub
mov
je
or
mov
xchg
lock
lock
mov
dec
and
ret
(bad)
jg
add
lds
adc
sbb
and
or
and
test
push
mov
mov
xor
push
adc
hlt
ja
sar
xchg
add
xor
jmp
pop
ret
push
or
or
loope
or
fbld
or
mov
xlat
stos
jno
mov
push
(bad)
dec
jno
xor
nop
fisttp
dec
rcl
mov
test
or
add
mov
mov
sahf
dec
out
push
retf
js
mov
mov
stc
or
mov
test
sub
scas
test
pop
ret
xlat
into
and
imul
addr16
mov
mov
or
and
adc
pop
inc
loopne
xchg
jmp
jp
add
test
loop
ret
mov
jmp
shr
and
mov
js
and
call
das
add
ja
pusha
movnti
sub
cwde
call
fistp
push
cmp
dec
movs
pop
dec
cmp
jnp
mov
lahf
les
daa
out
(bad)
dec
lahf
imul
cmp
push
in
enter
xchg
cmp
push
fs
mov
lock
into
out
mov
int
daa
cmp
push
pop
call
je
fcmove
sbb
push
pop
mov
loopne
or
ja
mov
clc
data16
movs
ins
jae
inc
adc
test
(bad)
xchg
aas
fild
cmp
pusha
add
xchg
test
jl
sub
cwde
xchg
push
mov
shl
or
pop
popa
shl
inc
inc
mov
adc
ja
xor
or
sbb
std
pop
jne
arpl
inc
fst
rcl
sub
movs
xchg
mov
and
mov
cs
mov
xor
in
mov
sub
test
je
dec
or
mov
add
push
pop
push
sub
mov
push
xor
push
rol
fmul
mov
mov
ror
call
add
test
or
int3
jmp
cmp
pop
push
adc
aas
mov
push
push
push
mov
pop
push
inc
jl
retf
leave
pop
iret
js
jl
call
jl
mov
jns
push
rcr
jl
add
mov
cs
inc
and
js
test
push
(bad)
and
mov
add
xchg
inc
test
les
div
add
es
mov
sahf
in
sub
pop
(bad)
xor
add
inc
daa
in
adc
pop
or
sar
or
inc
popf
pop
mov
call
or
or
sar
and
cmps
push
adc
inc
arpl
xor
xchg
push
jo
ja
mov
mov
sbb
xor
mov
rol
gs
dec
jne
out
pop
(bad)
dec
add
in
test
add
pop
mov
nop
mov
in
dec
inc
or
enter
push
and
cwde
inc
aam
push
out
cmp
or
dec
adc
outs
push
mov
aaa
inc
and
mov
dec
inc
add
xchg
or
stc
pop
rol
jae
call
out
mov
add
mov
jg
add
cmps
mov
mov
out
add
rcr
xor
int3
clc
mov
inc
call
stos
lahf
lods
push
popa
jecxz
inc
out
out
sbb
test
sbb
sar
sbb
adc
icebp
popa
call
bound
xchg
jno
mov
dec
arpl
bound
jbe
clc
leave
push
xchg
add
leave
das
sbb
stos
mov
jmp
adc
les
rol
cmp
mov
(bad)
xor
dec
dec
mov
push
mov
mov
pop
mov
and
pop
dec
sbb
rcl
loopne
fs
sbb
leave
push
add
je
push
sbb
mov
mov
dec
cdq
fdiv
push
out
fadd
pop
sub
aam
retf
xlat
inc
dec
and
daa
movs
pop
add
inc
int3
jns
pop
sub
mov
inc
cmp
mov
int3
aas
push
loopne
aad
inc
xor
cmp
or
call
cs
test
fld
pusha
add
ror
add
dec
loope
fild
jae
inc
jmp
cmp
push
pop
rcr
ret
dec
mov
jns
loopne
sub
dec
jg
cmps
mov
mov
mov
sub
and
fwait
enter
push
cmp
and
push
test
inc
fistp
movs
add
mov
xchg
nop
add
inc
cmp
jg
pop
int
cmp
and
xor
scas
adc
or
and
push
or
and
jl
fsub
or
push
sbb
jo
add
add
add
psrlw
popa
add
movs
add
pop
outs
or
clc
and
(bad)
or
jge
push
mov
pop
in
and
cmps
sub
fs
mov
xchg
and
dec
imul
test
and
add
mov
mov
xor
bound
lahf
inc
xchg
ret
bnd
push
int
sar
fsubr
jmp
xor
jno
jmp
call
push
pusha
cmps
push
add
adc
cmp
call
mov
test
pop
aas
sbb
out
mov
(bad)
dec
xor
add
movs
call
inc
adc
sahf
mov
push
in
add
xor
and
sub
jl
inc
test
mov
(bad)
loopne
enter
and
inc
inc
xchg
sar
test
push
mov
pop
ret
sbb
fild
jge
or
inc
test
mov
jmp
add
pop
iret
or
fsub
fmul
cs
jg
inc
fdiv
dec
jnp
sti
adc
pop
dec
inc
jne
sti
loopne
sub
inc
cmp
mov
push
adc
xchg
pop
xor
div
adc
cmp
adc
mov
mov
int
std
inc
into
sbb
add
mov
jecxz
mov
and
dec
and
inc
rcl
sar
sub
mov
pop
test
cmp
push
cmp
stos
or
dec
sbb
xor
inc
inc
xchg
sbb
mov
push
jno
data16
cwde
ret
mov
sub
mov
inc
inc
stc
push
cmp
mov
mov
push
rol
(bad)
mov
cmp
stos
sub
jmp
dec
mov
std
adc
ret
sub
xchg
pop
daa
add
push
push
pop
add
adc
xchg
hlt
mov
xor
sbb
or
xor
js
fiadd
pop
inc
add
xor
fbstp
mov
xchg
or
and
lea
pop
test
add
(bad)
mov
mov
inc
add
ins
pop
lds
ret
sub
add
call
out
cmps
loop
and
dec
shr
les
(bad)
push
pusha
sbb
inc
call
add
mov
out
adc
cmp
pop
push
push
arpl
sub
daa
ds
cdq
mov
je
imul
movs
pop
fild
pop
mov
or
or
and
fs
push
push
mov
iret
add
cmp
dec
jne
(bad)
and
mov
add
push
cmp
xchg
pop
shl
cmp
sbb
or
ret
and
push
(bad)
and
sub
adc
add
or
wrmsr
dec
mov
add
hlt
inc
repnz
jle
add
fs
inc
or
jle
mov
fwait
pop
sub
sbb
enter
add
stos
nop
jbe
or
cld
imul
or
push
arpl
mov
in
or
lods
add
inc
je
jae
or
pushf
mov
cmp
gs
aas
xor
ds
mov
mov
loopne
pop
int3
cmp
jp
adc
hlt
test
int3
lock
add
ss
cmp
xor
mov
and
xchg
dec
jmp
add
idiv
ficomp
add
add
and
loopne
adc
push
ins
stos
add
jge
inc
sub
or
push
and
sbb
shr
sub
fld
xchg
add
cld
pop
cmps
ror
cdq
repz
int3
add
nop
mov
loope
push
je
sub
xchg
push
dec
xor
in
xchg
inc
mov
addr16
mov
in
add
enter
jge
add
push
mov
test
popa
or
ror
and
jg
adc
cli
adc
add
push
pop
lock
sub
adc
xor
and
sub
xor
fstp
ja
push
pop
pop
xchg
add
xor
pop
pop
outs
add
mov
xor
lea
call
into
ret
inc
mov
loopne
pop
add
les
adc
push
pop
aaa
nop
sahf
or
(bad)
jmp
repz
add
push
push
mov
aaa
xchg
add
leave
outs
test
adc
pop
mov
jge
push
lahf
in
ret
add
push
push
sub
adc
(bad)
sbb
jp
jge
cmp
jb
mov
add
or
xchg
mov
outs
mov
adc
retf
int3
imul
pop
cmp
cmp
inc
jecxz
cmp
lea
dec
jno
sbb
xor
or
cmp
clc
ins
and
mov
in
mov
jecxz
push
sbb
xchg
and
mov
mov
adc
ins
outs
dec
and
add
jmp
xor
pop
mul
pop
push
fidiv
in
inc
ds
adc
or
pop
dec
mov
lds
sbb
jbe
cld
cmp
je
inc
jmp
dec
lods
xor
sbb
cmc
or
sub
sbb
sbb
ret
xchg
cmp
mov
mov
adc
scas
mov
xchg
or
cmp
jl
push
dec
jne
pop
iret
dec
or
sbb
inc
dec
inc
dec
adc
rol
add
out
cmp
and
mov
nop
or
popf
jb
jp
or
push
cmps
js
dec
sahf
push
jmp
je
ret
sbb
inc
push
xchg
jno
add
out
lock
xor
test
and
push
cmp
sub
or
inc
pop
pop
pop
xchg
outs
xchg
adc
iret
push
pop
fldenv
lea
mov
jmp
and
or
jge
rcl
dec
xchg
xor
adc
stos
stos
je
clc
sub
pop
out
push
jp
jno
add
adc
add
es
cwde
xor
fcmovnbe
xor
mov
push
repnz
scas
sbb
fst
(bad)
inc
mov
push
dec
sub
jb
or
add
ficom
push
sbb
ja
adc
(bad)
and
in
push
mov
push
push
into
imul
add
loopne
mov
sar
(bad)
(bad)
cmps
lods
jmp
test
cs
out
int3
xor
jne
lods
adc
pop
push
push
jne
test
push
xchg
(bad)
jl
adc
xor
jne
or
jle
(bad)
jge
dec
stos
add
mov
sahf
or
loopne
movs
jb
or
mov
and
or
or
mov
add
push
add
test
push
dec
shl
in
aaa
jo
add
in
pop
push
add
add
daa
add
mov
rcr
js
sub
mov
sbb
addr16
xchg
mov
or
mov
mov
mov
aam
(bad)
test
push
dec
or
add
and
lahf
cvtdq2ps
mov
jnp
cmp
inc
adc
jmp
cmp
pcmpeqb
or
inc
inc
loopne
mov
addr16
inc
adc
xchg
loopne
aaa
sbb
add
mov
mov
push
mov
fsubr
push
sbb
add
inc
dec
pop
sbb
std
inc
into
mov
cmp
(bad)
cli
sub
jg
xchg
push
cdq
xor
cmp
cwde
add
push
inc
pop
jo
pop
out
bound
mov
or
mov
clc
rcl
mov
adc
out
out
(bad)
(bad)
xor
jne
arpl
jp
add
sbb
or
push
nop
mov
fisub
pop
fmul
repz
push
inc
adc
dec
xchg
inc
pusha
jg
push
or
shr
jl
and
nop
or
or
add
xchg
movs
mov
inc
jo
or
inc
adc
pop
in
inc
aas
cmp
sbb
mov
(bad)
add
cmps
dec
repz
and
int
popa
add
adc
pop
dec
jne
cmp
repz
sbb
jp
xor
adc
jmp
push
inc
xchg
mov
jge
push
dec
jne
sub
add
mov
pop
cmp
add
add
js
push
add
pop
and
push
mov
adc
ja
xor
xor
xchg
shl
mov
stos
pop
add
jg
je
sub
cmp
dec
or
xchg
push
daa
adc
cmp
push
sub
ins
fbld
and
inc
pop
add
lock
pusha
mov
es
mov
jle
pusha
xor
pop
lods
xchg
push
dec
or
test
mov
xor
imul
jg
test
sahf
repz
sub
jl
add
inc
mov
hlt
test
xchg
and
adc
or
add
ins
add
jnp
mov
mov
sbb
gs
add
pusha
in
in
mov
xor
sub
test
inc
loopne
sub
(bad)
fisub
hlt
jmp
pop
movs
add
and
adc
and
call
cwde
inc
or
cmc
dec
mov
jge
int3
ret
rol
shl
js
sub
icebp
pop
or
stos
js
fcom
test
mov
cmps
pusha
enter
jo
ss
or
icebp
xor
adc
sbb
dec
fdivr
push
cmp
adc
add
leave
mov
int3
add
test
rol
ror
dec
mov
fwait
dec
rcr
mov
xchg
mov
pop
push
sbb
test
add
in
in
std
push
and
and
fmul
sti
mov
add
test
xor
mov
sahf
or
xchg
add
xor
mov
inc
mov
adc
jb
fdiv
and
in
cli
jmp
pop
xor
sbb
add
or
in
jl
jo
mov
fadd
cmp
or
lock
(bad)
mov
into
mov
ret
in
loope
push
jecxz
lds
sbb
jne
push
popa
cmp
retf
cmps
call
test
out
dec
mov
shr
dec
add
cmp
in
xchg
cmp
repz
(bad)
sbb
mov
push
push
(bad)
inc
cli
mov
jle
mov
xchg
nop
cmp
add
pop
call
loopne
or
lods
sbb
sub
and
and
mov
clc
or
aas
add
mov
aam
xor
scas
push
fst
jg
xchg
mov
inc
pop
add
rcl
sbb
test
scas
jecxz
or
mov
pop
push
cmp
mov
inc
fiadd
push
popa
mov
add
xchg
inc
jb
pop
je
mov
sub
jns
jo
pushf
je
dec
xor
lock
add
dec
jmp
loope
inc
pop
jge
xor
push
enter
add
xchg
jns
pushf
nop
sub
jno
or
sub
jnp
or
idiv
push
pop
ret
or
or
cld
nop
nop
pop
int3
and
inc
ss
add
pop
std
cmps
test
mov
imul
xor
and
sti
and
sqrtps
bound
lods
lock
inc
in
xchg
(bad)
sub
out
jg
nop
inc
push
dec
sub
mov
pop
imul
or
call
cmps
xchg
mov
push
push
push
stos
daa
fcomp
inc
and
xlat
adc
adc
(bad)
clc
ret
inc
popa
and
add
dec
sub
sbb
test
push
imul
cwde
leave
cwde
es
inc
jmp
lods
aam
popf
cli
sbb
push
jne
add
xor
imul
mov
or
je
or
lods
push
fidiv
out
sbb
jge
in
pop
mov
mov
les
adc
xor
add
and
sbb
popa
iret
mov
mov
fcmovnbe
push
xchg
mov
lds
sbb
mov
in
lock
enter
add
mov
lock
jne
inc
ss
ret
fdiv
inc
fimul
int3
sbb
or
sbb
ror
(bad)
mov
add
push
mov
call
jg
or
nop
or
arpl
cmp
imul
mov
mov
call
lods
rol
and
out
mov
lods
mov
lds
inc
js
ret
pop
xchg
test
(bad)
ins
xchg
dec
xor
and
clc
std
jo
adc
shl
ret
push
lods
jnp
lds
xor
out
fld
mov
mov
out
sahf
sub
jns
out
sbb
sbb
out
adc
jns
or
fsubp
cmp
push
test
clc
inc
inc
push
hlt
jo
out
jl
js
shl
and
mov
sbb
shl
frstor
mov
push
inc
popa
jo
fbstp
adc
int
jnp
lahf
cmps
dec
mov
add
mov
add
std
inc
out
add
adc
or
pop
pop
add
es
jo
xor
dec
fcomp
aas
and
push
mov
lock
adc
or
push
sbb
inc
push
push
cmp
call
add
push
sbb
mov
mov
push
inc
mov
ins
popa
js
pushw
movq
imul
add
sar
add
push
push
outs
push
add
movs
sti
dec
add
mov
jo
inc
ins
dec
call
je
add
or
or
fstp
push
jns
sbb
or
or
pop
xchg
sub
xor
sbb
xor
aas
mov
adc
pop
outs
jb
pop
adc
into
adc
jbe
mov
inc
jb
jae
xor
pop
push
adc
pop
bound
outs
inc
push
inc
sub
aaa
adc
jb
bound
fild
mov
inc
imul
cs
outs
jae
es
(bad)
xchg
test
or
xlat
lea
nop
or
inc
ins
leave
xchg
xor
or
cmps
jne
sub
add
inc
add
push
(bad)
add
out
or
add
xor
jecxz
inc
mov
cmp
out
mov
or
mov
arpl
adc
push
jo
or
lock
and
call
gs
lock
loop
push
or
xchg
add
add
cmp
or
xchg
fstp
fbld
inc
imul
push
mov
dec
out
adc
push
fidiv
gs
sub
gs
cmps
ins
fisttp
jmp
or
mov
dec
int
ja
cmps
test
and
pusha
push
or
or
adc
mov
ja
push
sbb
adc
imul
adc
xor
dec
pop
pop
add
icebp
fiadd
dec
push
sbb
jae
inc
sbb
push
and
cmp
push
pusha
std
push
out
aad
mov
pop
sub
push
(bad)
cli
push
lock
mov
cmovns
add
aas
mov
or
mov
add
xchg
out
pop
jnp
cmp
es
cs
and
jl
lock
rol
fld
sbb
je
scas
loopne
retf
add
shl
adc
add
lock
fisub
fdivp
sbb
add
inc
fild
or
and
mov
frstor
fiadd
push
in
les
inc
sbb
add
cmp
inc
add
jmp
sbb
add
in
addr16
test
push
pusha
add
adc
xor
lahf
stos
loope
fcomp
rcr
loopne
fucomip
adc
(bad)
jle
sbb
lds
adc
sub
or
loopne
add
pop
mov
xchg
add
pusha
cmps
add
jge
sbb
aas
xor
cmp
cmp
mov
lsl
jno
nop
or
inc
(bad)
les
adc
loope
fisttp
mov
nop
lahf
pop
sbb
add
or
xchg
test
pop
inc
jecxz
mov
add
test
loopne
dec
add
add
les
pop
pop
pusha
pop
repnz
xlat
pop
daa
and
inc
js
loopne
mov
js
cwde
jmp
jecxz
pop
sbb
invd
sbb
adc
cwde
retf
sub
push
mov
imul
daa
and
and
push
int3
add
push
lods
xor
pusha
xor
fcos
cmp
mov
ins
sti
call
xchg
adc
push
cmps
retf
imul
mov
jb
or
pusha
inc
cdq
push
dec
add
add
dec
dec
sub
das
sbb
outs
cmp
pusha
add
mov
gs
scas
xor
mov
add
add
jae
jb
xchg
retf
daa
dec
cmp
inc
push
jne
es
aaa
sbb
dec
xchg
out
adc
or
jns
aas
test
test
movs
int3
int3
lahf
ins
lods
push
mov
cmp
adc
mov
and
stos
imul
ret
mov
idiv
xlat
(bad)
ffreep
(bad)
shr
cmp
push
sub
clc
jae
imul
dec
ja
enter
and
int3
(bad)
aas
mov
inc
in
ins
cmp
aas
aam
push
fadd
pop
pop
add
mov
ja
mov
in
add
pop
xor
xor
jle
sbb
pop
and
mov
push
mov
sub
pusha
seto
fsub
in
int3
icebp
xchg
inc
or
loope
enter
jmp
dec
clc
data16
jle
nop
cwde
sbb
enter
fmul
stos
loope
imul
push
lock
or
aam
or
adc
cmps
daa
sbb
sahf
loop
and
inc
push
push
or
xchg
and
or
inc
leave
xlat
jo
jl
lds
pop
pop
push
cld
les
mov
mov
inc
mul
imul
xchg
mov
mov
xchg
in
scas
or
or
call
sbb
inc
inc
gs
and
dec
mov
adc
pop
cwde
leave
(bad)
cld
inc
cmp
mov
inc
rol
push
lods
ret
movs
mov
sbb
pop
or
add
ins
cmp
aaa
mov
lods
jge
nop
inc
jl
inc
hlt
adc
adc
mov
mov
int
ds
ficomp
inc
mov
dec
sbb
mov
mov
dec
push
sbb
or
and
or
nop
push
pop
dec
dec
push
imul
mov
jg
mov
je
push
and
lods
push
mov
in
cmp
jnp
in
pusha
int3
pop
push
cmp
dec
pop
xor
cs
xchg
dec
xor
int3
xor
xor
xor
je
fidiv
jg
xor
adc
xor
aas
mov
mov
inc
es
push
and
fdivp
push
into
push
sub
mov
inc
push
sbb
pusha
inc
pop
xchg
addr16
sbb
retf
or
test
test
fisttp
enter
or
outs
outs
mov
bound
cmp
int
cwde
pop
mov
dec
stos
xchg
push
je
dec
pop
hlt
dec
xchg
push
pop
stc
or
clc
dec
xchg
imul
adc
pop
dec
xchg
sbb
pop
push
ins
add
ja
cs
sbb
int
xchg
mov
imul
loope
add
jb
jge
push
into
(bad)
aas
adc
pop
js
adc
rol
jae
(bad)
aas
adc
popa
pop
mov
mov
xor
rol
xor
push
sar
inc
dec
jne
scas
mov
js
loope
lea
adc
inc
in
lds
popa
jns
sub
jo
xchg
pop
jnp
aaa
mov
or
and
xlat
adc
mov
test
adc
jne
sbb
add
jmp
inc
loopne
adc
lock
or
jmp
mov
lods
out
push
push
dec
inc
mov
shl
inc
cmp
xor
clc
push
test
push
or
or
inc
or
xchg
push
dec
clc
ret
add
or
stc
inc
cwde
push
rcr
push
pusha
add
(bad)
iret
inc
add
movs
jmp
(bad)
xchg
lock
iret
(bad)
adc
mov
add
sub
lds
pop
rcr
dec
dec
mov
xchg
sete
pusha
and
aad
repz
mov
lock
psllq
mov
push
pusha
addr16
pop
lods
test
and
xchg
add
ror
or
jge
push
add
mov
pop
enter
aas
int3
ror
jno
mov
sbb
movs
ss
imul
sar
adc
mov
add
in
sbb
mov
jmp
sbb
pop
enter
call
sub
shr
and
adc
push
int
mov
mov
movs
add
loopne
nop
loope
and
adc
or
ret
lods
mov
lods
bound
pop
sbb
or
cmp
lea
and
test
xor
test
or
xlat
and
inc
cld
adc
cmp
jg
jno
cld
cld
jg
mov
sub
push
inc
adc
pop
cld
test
cmps
and
sbb
or
xor
rcl
rcr
retf
ret
pop
push
cs
fidivr
outs
add
add
inc
mov
outs
and
cmc
xlat
pop
dec
ins
imul
outs
push
dec
popa
jbe
add
fiadd
mov
ja
push
gs
ins
pop
int3
add
ss
imul
add
add
xchg
gs
mov
pop
gs
ins
outs
ja
inc
ins
jne
or
inc
inc
lock
arpl
imul
mov
cmps
xchg
es
jns
add
pop
test
push
imul
inc
jo
adc
dec
data16
ret
fst
arpl
xchg
fld
xor
movzx
xchg
or
pop
jo
push
pop
imul
pop
push
lock
arpl
das
inc
push
addr16
adc
push
jmp
inc
popa
arpl
daa
dec
in
ins
mov
cmps
das
or
dec
lods
outs
ja
adc
push
jno
or
enter
imul
loopne
loop
xchg
imul
jge
sbb
dec
outs
popa
inc
xchg
and
push
mov
addr16
pop
or
or
xlat
sub
popa
outs
adc
fcomip
aaa
ins
and
enter
aaa
cld
in
sbb
pop
or
outs
inc
imul
add
jg
nop
adc
ficom
outs
jne
or
jb
pop
daa
iret
inc
push
lahf
nop
add
(bad)
or
inc
xor
rcr
and
cmp
(bad)
sbb
or
daa
cmp
fs
mov
push
or
cld
or
fbld
mov
sbb
pop
pop
push
push
xor
or
das
and
mov
loopne
das
lods
jmp
xchg
out
push
inc
test
dec
inc
push
push
inc
push
add
sub
cmp
aas
inc
arpl
mov
not
dec
inc
dec
rcr
mov
arpl
inc
inc
push
sub
dec
dec
inc
push
dec
dec
push
mov
or
inc
inc
push
dec
addr16
dec
dec
and
es
pop
out
inc
inc
xor
xor
adc
fcmovu
in
and
inc
and
inc
xor
inc
sub
nop
dec
not
dec
sub
(bad)
in
sub
(bad)
jo
or
das
sbb
dec
inc
das
inc
inc
pusha
mov
mov
xor
mov
xlat
or
inc
inc
push
push
push
push
inc
dec
test
scas
adc
clc
arpl
push
mov
adc
or
scas
mov
test
sti
mov
pop
pop
js
neg
push
push
sbb
push
js
outs
sbb
inc
loopne
add
jo
add
clc
jl
or
and
add
(bad)
cmp
dec
add
inc
shl
std
and
mov
lea
or
outs
pop
dec
add
and
mov
imul
sbb
data16
mov
or
inc
inc
or
add
xor
adc
add
mov
pop
pop
pop
shl
mov
mov
push
mov
and
rcr
fbstp
adc
dec
out
adc
mov
push
mov
and
pop
dec
sub
shl
popa
cmp
xchg
les
ret
ficom
clc
mov
das
cmps
dec
add
sbb
mov
cmp
jg
cmp
je
jne
les
xor
xor
aam
mov
xchg
aad
outs
cmp
movs
popf
dec
scas
xchg
loopne
dec
or
sub
adc
mov
add
add
cmp
retf
jae
dec
push
sbb
(bad)
add
ror
cmp
bound
adc
or
call
add
mov
xchg
loope
retf
inc
adc
bound
mov
xor
sub
mov
jnp
cdq
fist
fcom
dec
sbb
imul
ret
push
inc
rol
jmp
adc
imul
gs
or
and
sbb
xlat
inc
inc
clc
and
jae
mov
je
mov
or
sbb
clc
inc
mov
sbb
sti
xor
jno
xor
push
dec
jg
dec
fcomp
test
cmp
in
hlt
jge
or
cmp
add
add
add
movs
mov
cmc
loope
push
sti
rcr
and
bound
or
mov
call
aad
mov
aaa
repz
mov
jle
aad
mov
outs
inc
add
retf
xchg
ret
sub
mov
add
push
inc
fmul
sbb
sbb
cmp
cmp
mov
pop
les
add
sub
(bad)
mov
(bad)
sub
fnstenv
stos
fwait
arpl
add
xor
mov
and
neg
test
inc
test
ficom
xor
rol
mov
xchg
or
push
dec
cmp
imul
imul
outs
outs
inc
sbb
sti
xchg
push
and
pop
and
sbb
rcr
or
mov
mov
mov
add
add
or
push
adc
in
push
cmp
and
mov
xor
pop
sbb
fisttp
mov
pop
pop
rcl
add
sbb
repnz
and
pop
jp
dec
push
lock
mov
xor
lock
inc
(bad)
jne
mov
test
loopne
mov
sbb
mov
rcl
mov
sbb
mov
xchg
add
mov
pop
nop
out
dec
in
xor
in
jnp
stos
push
cmp
push
or
add
adc
dec
mov
or
mov
sbb
xchg
sub
xchg
shl
xor
jo
in
inc
je
sbb
enter
xchg
xor
inc
add
adc
loop
sbb
cs
nop
scas
fs
pop
inc
ja
loop
popa
or
loopne
aas
push
sbb
fsub
out
mov
push
dec
jmp
xchg
aas
add
mov
stos
nop
nop
mov
xor
push
or
xor
nop
lock
call
adc
fistp
or
sub
sub
aam
loopne
pop
data16
or
inc
sbb
and
inc
cs
in
inc
arpl
sbb
add
imul
in
popa
gs
repz
and
gs
inc
dec
push
enter
push
sbb
sbb
adc
add
test
pop
jne
movs
xor
add
mov
mov
out
shr
push
add
pop
mov
dec
test
push
fs
cwde
inc
test
sbb
mov
test
shl
sbb
and
push
or
mov
das
xchg
sbb
mov
sub
lods
inc
popa
lahf
or
popa
xchg
and
or
loope
mov
adc
adc
xor
dec
dec
mov
outs
add
idiv
in
out
mov
xchg
add
inc
xor
in
sbb
mov
dec
push
mov
sub
or
add
or
pop
or
or
les
lods
or
xor
or
push
add
add
dec
mov
mov
inc
ja
mov
(bad)
not
cld
inc
mov
add
add
ja
mov
pop
ror
lds
sar
xor
jle
mov
adc
pop
adc
adc
pop
jmp
inc
pusha
dec
ss
inc
pop
fs
adc
add
aaa
add
add
add
sti
dec
push
(bad)
xchg
push
in
inc
push
push
in
xlat
bound
cmp
cdq
or
jns
movs
cmp
out
movs
mov
ret
ins
jge
rep
or
mov
repz
call
inc
retf
xchg
in
and
test
mov
mov
add
aaa
mov
gs
xor
arpl
sbb
mov
clc
ins
and
loopne
mov
cmps
mov
sbb
xchg
xor
iret
add
sub
ret
add
ja
adc
imul
pop
push
popf
xor
add
mov
inc
pop
xor
aaa
(bad)
pop
pop
out
ret
push
daa
shl
jnp
lock
mov
popf
pop
fcom
and
sub
or
add
add
dec
test
in
jmp
popa
lahf
hlt
jno
cdq
retf
add
push
test
dec
push
and
add
arpl
pop
(bad)
aaa
js
adc
addr16
pop
pop
pop
pop
scas
ror
popa
jp
add
movs
or
and
jmp
jle
inc
iret
add
out
cmp
pop
(bad)
push
push
pop
data16
dec
jg
mov
mov
and
aaa
mov
mov
mov
or
hlt
aam
dec
mov
(bad)
add
pop
push
add
and
jmp
test
xor
sbb
sub
loope
or
adc
fstp
sbb
scas
push
clc
inc
das
mov
not
and
mov
mov
push
cld
and
push
es
(bad)
or
inc
dec
add
sbb
mov
add
pop
imul
mov
xor
cmp
pop
xor
daa
inc
inc
jae
sub
movs
mov
push
cmp
(bad)
push
fdivr
int
fadd
sbb
repnz
sbb
jbe
(bad)
jle
cmp
sbb
sbb
icebp
and
or
test
inc
pusha
inc
je
or
arpl
add
mov
xor
sti
pop
ret
pop
enter
add
mov
nop
das
mul
or
in
das
add
push
sti
fsubr
js
inc
pop
dec
test
(bad)
in
neg
and
int
ds
xchg
imul
add
mov
ror
jb
scas
and
cmp
or
jo
in
jbe
nop
mov
daa
adc
jle
rol
or
(bad)
ror
inc
lea
add
cld
aaa
cmp
fst
adc
ror
mov
pusha
push
xchg
mov
jge
mov
xor
fld
int3
adc
adc
adc
push
xchg
fcomp
out
ror
push
push
inc
inc
pushf
adc
outs
enter
and
clc
lods
arpl
bound
and
fcomp
pushf
mov
pop
cmp
add
mov
(bad)
mov
jge
pop
add
dec
mov
xchg
addr16
sbb
fs
call
jecxz
jmp
sbb
test
das
or
xor
pop
push
mov
add
scas
fimul
push
(bad)
adc
das
sbb
push
inc
or
rol
mov
sbb
sahf
xor
inc
pushf
jmp
mov
sbb
xchg
test
xchg
aam
xchg
dec
div
rol
and
ror
dec
icebp
pop
sar
daa
fadd
push
jl
jge
add
xchg
jne
clc
test
pop
sub
cmp
adc
add
inc
je
ficom
iret
in
stos
xor
add
mov
sbb
sub
stos
outs
xchg
rol
repnz
push
and
iret
repz
sub
xchg
push
mov
mov
and
rcr
aad
pop
fdivr
add
cmps
cmp
cmp
push
push
jge
stos
in
jmp
or
loopne
push
xor
out
jge
cmps
adc
test
je
push
sub
dec
mov
mov
jmp
jns
pop
add
push
push
daa
push
ds
dec
pop
cmp
inc
loope
shl
inc
das
inc
push
xor
xor
and
dec
inc
imul
add
stos
push
out
pusha
dec
out
popf
lods
sub
and
dec
sbb
xchg
add
stc
ret
mov
add
xor
mov
inc
pop
lock
fucomi
and
add
push
add
mov
dec
sti
pop
add
add
rcr
add
faddp
inc
add
test
adc
aad
push
cdq
cmp
aas
(bad)
dec
test
push
call
adc
add
mov
add
sbb
inc
dec
jne
add
cmp
sub
mov
mov
mov
ins
mov
hlt
jnp
popf
and
les
rcl
inc
pop
xchg
push
pop
jne
push
(bad)
in
(bad)
fdivr
sbb
mov
and
stos
sub
and
ins
mov
enter
bound
mov
dec
jns
jmp
push
or
push
fisub
(bad)
mov
fcmovb
jecxz
sbb
test
sbb
jmp
fsubrp
or
mov
add
push
push
cld
push
mov
xor
cwde
repz
mov
push
jno
add
jl
push
add
in
or
cmp
cld
rol
test
mov
ds
cmp
dec
or
movzx
test
jmp
push
cmp
ss
xor
addr16
add
data16
es
sbb
hlt
inc
pop
fisttp
icebp
dec
lock
dec
aas
pop
pop
clc
push
mov
xlat
movs
ret
mov
clc
cmc
fwait
add
clc
adc
push
fstp
inc
mov
cmp
inc
add
or
lods
and
add
enter
fisttp
add
adc
adc
or
es
mov
push
lods
jo
or
add
xor
or
mov
dec
mov
fmul
jmp
es
daa
pusha
mov
pop
shl
retf
mov
mov
movups
jmp
scas
or
ror
xchg
mov
or
cmps
mov
inc
adc
fwait
test
and
inc
add
push
push
push
aaa
xor
and
fild
cmp
jge
inc
push
jns
sti
(bad)
pop
dec
je
(bad)
mov
pop
inc
inc
lods
add
pop
mov
icebp
shr
adc
ret
fbld
mov
mov
push
das
or
and
cdq
test
sub
mov
data16
shl
add
bound
push
push
add
mov
fsub
mov
test
ja
and
test
inc
xchg
test
(bad)
xor
data16
push
loope
inc
and
movzx
push
shr
test
ror
imul
add
ds
mov
in
seto
div
adc
add
retf
mov
jo
jae
scas
adc
test
add
loopne
and
push
mov
add
adc
xchg
or
lock
enter
push
dec
pop
pushf
fsubr
pop
adc
ret
fmul
mov
sbb
push
cmp
rcr
(bad)
fisub
jg
test
jle
cmp
jl
int
and
adc
outs
or
es
dec
data16
rcl
push
and
push
and
adc
fmul
lods
inc
dec
sti
rol
pop
imul
mov
jne
push
sbb
fsubr
pop
add
add
test
shl
fcomp
cmp
clc
sbb
fsub
sbb
scas
dec
enter
jbe
adc
test
jns
jns
stc
fadd
and
pusha
inc
jge
sub
mov
inc
sar
mov
inc
xchg
inc
ret
fidivr
sub
loopne
es
cmp
and
add
mov
add
sbb
lock
pusha
cvtps2pi
xor
mov
cmp
sar
adc
xchg
lods
xor
or
int3
push
sti
mov
push
movs
ins
ss
inc
adc
shl
add
out
push
pop
dec
adc
dec
or
add
aam
rol
dec
xor
popf
hlt
enter
and
dec
imul
test
pop
cwde
int
ja
jmp
mov
mov
imul
dec
mov
ret
rol
addr16
xor
jge
sub
div
jge
cmp
add
push
push
xchg
push
push
adc
in
sbb
mov
push
push
dec
inc
fistp
add
add
call
loopne
je
sahf
cmp
repnz
fst
sub
aas
rcr
xchg
xor
aam
rol
ja
jmp
jbe
inc
mov
pusha
sar
sub
or
loopne
cwde
ret
loope
fs
fistp
push
push
cli
(bad)
and
test
add
pop
js
sbb
sbb
sub
pop
mov
sbb
or
popa
inc
loop
push
pop
xchg
loop
sub
add
dec
mov
xor
adc
mov
mov
mov
lock
jmp
in
lods
dec
dec
push
mov
ret
fild
adc
daa
and
pop
ins
or
jmp
xor
cmp
fcomp
shl
or
cmp
mov
int3
mov
xor
inc
and
push
shr
and
enter
mov
mov
and
retf
push
ds
in
jo
rol
adc
rcl
inc
jo
call
jmp
sub
icebp
mov
inc
pop
hlt
mov
inc
popa
fld
xchg
ret
mov
dec
or
nop
and
adc
cmp
dec
or
adc
jno
cmp
cmp
mov
mov
adc
aam
add
sub
sbb
cmp
ficom
dec
fdiv
dec
outs
push
add
jge
cmps
sbb
push
dec
pushf
movs
xchg
fbld
jg
scas
shl
test
or
push
or
leave
jns
or
lods
daa
add
dec
shr
jg
out
xchg
pop
scas
adc
enter
add
add
lea
xchg
push
shl
push
inc
call
mov
pop
fist
dec
jmp
in
mov
loopne
es
call
dec
mov
and
mov
xchg
dec
loopne
das
add
add
lock
cdq
aam
cmp
dec
dec
jb
iret
(bad)
(bad)
mov
call
push
add
push
lods
or
lods
mov
add
scas
lods
fistp
(bad)
push
jo
mov
fs
and
pushf
cmp
push
mov
test
mov
test
mov
mov
data16
jae
add
mov
sti
fcom
pop
test
xchg
daa
int3
or
test
iret
aas
stos
inc
jg
push
mov
data16
lods
shl
mov
ret
push
loope
add
clc
(bad)
cmp
aas
xor
jmp
add
aas
and
add
push
ss
add
inc
jo
sub
das
adc
add
adc
pop
repnz
(bad)
inc
popa
add
sub
dec
or
cmp
pop
test
pop
dec
xor
std
jne
cmp
fisub
sub
add
(bad)
cmp
add
mov
add
push
xor
add
(bad)
adc
imul
add
inc
fcomp
cmp
add
mov
jmp
enter
add
jl
imul
adc
inc
and
inc
push
push
mov
mov
xchg
sub
xchg
and
mov
sub
add
inc
inc
inc
arpl
je
or
ja
sbb
pop
adc
mov
test
xor
push
and
out
pop
lsl
add
scas
pop
mov
aaa
mov
and
mov
inc
ret
outs
jmp
loopne
push
or
and
outs
mov
or
lahf
and
add
add
clc
push
fs
xorps
and
lods
add
adc
add
daa
and
add
adc
dec
repnz
push
or
test
leave
mov
hlt
hlt
add
cmps
inc
clc
mov
inc
sahf
in
fmul
hlt
mov
xchg
daa
stc
repnz
retf
lock
or
sbb
add
adc
mov
out
dec
mov
sbb
sbb
ja
popw
imul
bound
inc
push
lods
adc
jl
or
adc
std
mov
sub
push
call
add
xchg
sub
or
cmp
xor
adc
imul
outs
sbb
and
xchg
hlt
div
or
jmp
sub
sbb
pop
or
pop
cwde
add
mov
cmp
add
adc
fisttp
or
test
pop
cmp
add
xor
pop
pop
enter
sbb
pop
dec
mov
dec
test
push
xor
sbb
push
mov
(bad)
aaa
xchg
in
pusha
dec
out
dec
mov
test
enter
push
push
sbb
mov
push
push
in
dec
mov
stos
das
dec
pop
dec
xchg
retf
push
mov
bound
test
mov
ret
inc
add
push
or
push
mov
div
push
rcl
add
mov
or
or
iret
mov
pushf
add
cmps
push
inc
imul
aad
mov
mov
pop
push
fsubrp
push
loopne
pop
or
inc
pop
sub
shl
shl
cmp
dec
xor
or
ja
cmp
xor
jmp
pop
or
sbb
je
daa
mov
jle
dec
add
test
add
mul
clc
and
nop
adc
popa
mov
mov
inc
inc
cmps
call
add
inc
cmp
ss
nop
pop
inc
not
pop
jae
xlat
pop
jne
mov
and
add
xchg
mov
pop
dec
mov
mov
jbe
sbb
xchg
cmp
hlt
add
pushf
dec
push
adc
sbb
rcr
out
adc
retf
and
js
cmp
jecxz
ret
test
add
(bad)
pop
jl
pop
rcl
and
push
adc
sbb
cmp
std
inc
or
inc
lock
cmp
pop
inc
or
add
add
add
mov
adc
and
add
xlat
sub
sbb
add
add
(bad)
cmp
fisttp
mov
mov
xchg
or
ret
fisub
fisubr
(bad)
int3
xor
(bad)
popa
xor
hlt
hlt
xlat
rcl
ret
in
(bad)
enter
movs
sbb
sub
adc
sbb
shl
fsqrt
inc
push
lea
or
adc
and
sbb
and
and
pop
add
mov
sub
mov
add
nop
mov
es
xor
inc
xor
push
xchg
push
loope
add
cmp
pop
xor
and
mov
jo
js
lea
sbb
call
pop
inc
stos
hlt
dec
inc
sar
or
sbb
(bad)
xor
pop
jmp
pop
xchg
aas
mov
adc
sbb
(bad)
xor
or
jnp
xchg
in
xor
jge
rol
jo
push
arpl
pop
cs
dec
daa
fimul
inc
or
xchg
lock
je
sbb
dec
cmp
adc
nop
push
cmp
mov
dec
sti
pop
ret
xchg
fs
push
adc
sbb
les
inc
lock
dec
adc
mov
scas
shl
das
and
scas
push
adc
shr
mov
pop
nop
ret
(bad)
bound
add
icebp
lods
push
rcl
add
jne
jo
mov
sar
rcr
add
jge
sbb
rcl
push
bound
test
sub
inc
enter
mov
ficom
aam
add
add
outs
js
mov
ss
or
inc
or
ret
adc
cmp
mov
js
std
push
mov
sbb
add
cmp
(bad)
std
push
imul
push
or
push
dec
sahf
and
cli
(bad)
push
xchg
icebp
(bad)
fcmovnbe
push
adc
int
fild
mov
or
dec
es
and
mov
rcl
fild
add
jg
adc
outs
and
add
and
inc
popf
sbb
call
inc
loopne
mov
popf
ret
jl
repz
dec
imul
pop
or
push
lock
and
out
out
inc
add
inc
mov
stos
inc
cld
mov
shl
mov
sbb
sbb
add
test
pop
in
es
xchg
push
add
push
jno
arpl
xor
ins
jmp
dec
add
add
pop
adc
pop
out
nop
mov
push
and
popa
or
xor
jnp
inc
sub
adc
nop
cmc
lea
adc
mov
sub
cmp
inc
js
xchg
nop
cmc
call
or
mov
mov
mov
jmp
imul
mov
pop
(bad)
es
sbb
ja
mov
sub
cmp
(bad)
inc
or
and
sub
in
adc
add
jmp
mov
dec
xchg
sub
push
jecxz
pusha
pop
sub
push
mov
test
or
push
or
adc
xor
or
jbe
or
enter
movs
add
push
mov
xor
jno
lock
dec
cmc
jbe
pop
push
je
rol
pop
pushf
pop
sar
jle
dec
fisttp
loop
sub
push
push
fild
add
inc
mov
xchg
cs
pop
cs
into
inc
addr16
inc
push
jns
dec
mov
add
mov
enter
add
dec
xor
xor
je
mov
ror
neg
pop
add
mov
or
movs
xor
adc
and
xor
sti
bound
aam
or
push
sysenter
(bad)
jb
jns
adc
inc
fld
mov
in
push
mov
pop
ret
das
je
ret
pop
ret
aaa
fcom
mov
inc
dec
imul
mov
gs
dec
mov
jle
and
icebp
xchg
lahf
loop
loope
mov
mov
push
inc
popa
adc
shl
push
xor
sub
aas
sbb
shl
and
in
loope
or
or
js
inc
pop
push
or
push
adc
sbb
sbb
jg
lods
in
sub
cmp
inc
repz
pop
rcl
call
push
sub
pop
push
add
xchg
mov
add
ja
jecxz
mov
jg
mov
or
daa
cmp
ins
add
shl
loopne
inc
sbb
pop
pop
(bad)
(bad)
(bad)
(bad)
cwde
push
add
dec
cwde
mov
adc
dec
inc
je
jns
cmp
push
sub
aad
pop
imul
dec
jecxz
and
clc
adc
lds
or
jle
outs
jnp
sbb
push
pop
push
rcr
push
mov
inc
mov
jo
enter
js
and
pop
aam
fst
cwde
and
lods
fidivr
add
jne
data16
loopne
dec
pop
cmp
retf
sub
or
add
lods
xor
test
shl
xor
adc
inc
retf
xchg
js
jno
or
in
pusha
and
in
xchg
test
pop
arpl
mov
ficomp
mov
cmp
out
jl
sub
xchg
and
and
and
jle
test
bound
mov
imul
xchg
pop
mov
enter
push
cmps
cld
add
adc
mov
mov
xor
mov
addr16
rol
sbb
pop
sub
or
push
pop
add
fidivr
mov
add
loopne
add
pusha
mov
stc
cmp
and
mov
push
sbb
aaa
or
cmp
push
or
jo
icebp
xor
push
or
xchg
push
pop
or
shr
shl
add
mov
mov
nop
xor
jb
data16
mov
cmp
retf
inc
scas
or
adc
push
or
or
inc
pop
or
pop
lods
stos
adc
shl
sub
jo
jmp
pop
push
mov
mov
lahf
jno
or
mov
sbb
pop
aaa
in
bound
add
(bad)
cmp
je
or
adc
ja
pop
enter
ja
ret
nop
cdq
nop
sub
fistp
pop
and
push
lods
lods
mov
jmp
test
lock
test
push
mov
mov
and
and
gs
aaa
not
inc
or
ins
cmps
mov
adc
and
test
or
pop
or
test
dec
cmp
push
add
daa
and
(bad)
les
jl
adc
sahf
nop
adc
add
pop
pop
out
mov
mov
add
sar
and
mov
pop
ja
enter
imul
pop
scas
inc
jecxz
inc
and
in
ror
mov
sub
inc
aas
or
data16
adc
mov
xchg
fadd
fwait
aaa
adc
mov
adc
jmp
xlat
test
push
jo
push
inc
lea
push
jmp
ret
dec
sbb
and
or
push
and
sub
sbb
and
jmp
fcomp
test
add
push
loop
push
jp
pop
es
inc
sbb
xchg
push
xor
add
add
mov
pop
dec
cmp
sub
adc
leave
add
rol
mov
hlt
xchg
cmp
stos
jge
in
sbb
jae
sub
ret
cmp
jae
mov
or
push
test
lahf
call
rcr
ds
push
test
mov
test
mov
jae
test
adc
sbb
mov
test
or
adc
rol
add
mov
jo
dec
pop
xchg
or
pop
lahf
fmul
loopne
mov
jl
push
stos
dec
loopne
retf
out
pop
aaa
or
jo
fcom
xor
inc
fadd
or
pop
pop
in
pop
jmp
not
cmp
inc
and
or
in
leave
nop
nop
mov
sub
repz
mov
mov
xchg
scas
and
cmp
ret
dec
mov
loope
pushf
or
sti
adc
push
mov
xor
ins
xchg
loope
or
adc
and
loope
dec
arpl
stos
dec
or
add
jmp
pop
xchg
inc
sub
push
leave
lea
and
std
rol
cmp
and
push
ss
or
add
xchg
dec
add
add
enter
and
mov
mov
xlat
or
ja
cmp
and
stos
das
cmp
xor
or
jne
and
sbb
scas
add
and
xor
sbb
adc
or
push
mov
xor
add
ficomp
jg
in
pop
xchg
adc
cmp
inc
arpl
or
xor
pop
rcl
add
and
jnp
inc
jae
push
jecxz
out
int3
and
mov
sahf
and
push
js
movs
xor
pop
pop
jmp
in
or
das
out
pop
dec
cs
push
push
clc
pusha
xor
sti
pop
aam
pusha
scas
loopne
lods
push
aad
mov
add
pop
dec
js
je
dec
cmp
clc
xor
push
xor
pop
rcl
rol
div
adc
(bad)
imul
sti
xchg
ins
add
fcomip
add
or
push
and
fs
adc
add
nop
mov
inc
or
ins
ret
cmp
daa
jb
pop
rol
call
push
push
add
jno
fcomp
es
xchg
icebp
loopne
in
aas
mov
stc
jp
or
xchg
arpl
popa
and
mov
test
test
and
(bad)
push
imul
xchg
push
push
sar
sbb
(bad)
adc
and
and
cmp
fsubr
test
es
adc
mov
inc
or
loopne
dec
pop
pop
pop
stc
cmp
jne
add
add
adc
adc
add
outs
or
adc
sub
out
cmp
adc
and
push
out
nop
sbb
cmp
xchg
xor
push
mov
movs
nop
dec
sbb
test
sbb
js
push
xor
cmp
jge
fcom
cdq
call
mov
sub
rcr
jmp
jae
adc
adc
retf
or
pop
aaa
inc
(bad)
jne
xlat
or
jp
sub
mov
adc
aas
or
mov
ffreep
inc
mov
bound
fbstp
pop
sub
ds
add
push
lock
pusha
inc
and
adc
sub
jo
or
push
jp
cmp
arpl
loope
mov
out
pop
mov
jo
mov
mov
add
xchg
mov
in
repnz
and
lods
ss
(bad)
int3
sub
sbb
dec
loop
or
les
push
pop
xchg
popa
or
clc
push
data16
rol
retf
inc
ss
cmps
hlt
inc
mov
outs
cmp
pusha
stos
aad
or
nop
add
mov
je
scas
add
mov
cmp
and
sub
sbb
push
push
sub
mov
cmp
inc
cmp
je
jnp
pop
daa
sbb
call
js
mov
(bad)
ins
mov
mov
pop
xchg
(bad)
cmp
and
ror
push
inc
push
mov
test
dec
xchg
inc
xor
jbe
xchg
fcom
push
push
add
push
cmp
sub
push
xchg
pop
sub
pop
fistp
leave
jne
adc
cmp
mov
in
ror
imul
xchg
adc
jg
int3
pop
mov
int3
imul
dec
xor
mov
pop
inc
xchg
test
stos
sbb
test
push
fld
add
sub
jg
jno
shl
add
imul
pusha
pop
adc
adc
pusha
mov
dec
test
pop
enterw
inc
cmc
aas
adc
and
add
add
push
pop
pop
adc
dec
repnz
dec
loopne
mov
ret
loopne
mov
cmc
sbb
in
fld
dec
aaa
clc
mov
adc
in
ja
xor
loopne
sbb
enter
adc
adc
loopne
jns
test
adc
mov
loop
stc
push
inc
push
mov
sub
cmp
cmp
sub
sahf
xchg
sub
addr16
jecxz
cmc
(bad)
loope
and
aam
retf
sbb
or
lock
call
je
push
sub
or
call
lahf
pcmpeqb
test
push
jg
mov
xor
pop
rcr
or
mov
stos
dec
add
inc
add
and
repnz
inc
adc
out
add
add
inc
or
jecxz
movs
nop
out
push
or
dec
cs
out
nop
dec
dec
popa
stos
test
sar
push
xchg
test
ret
sub
or
iret
mov
dec
(bad)
xchg
xchg
cld
aas
lods
daa
aaa
loopne
add
lea
lock
pop
mov
addr16
mov
nop
sbb
jle
ja
and
mov
out
add
and
(bad)
clc
call
add
add
xor
sbb
push
vorps
mov
pop
ror
imul
adc
pop
int3
push
push
scas
sub
mov
test
js
popa
loope
xchg
pusha
ror
repz
dec
lea
aaa
fcom
and
inc
add
loop
rol
cmp
or
ja
cmp
pop
ror
and
push
inc
(bad)
es
(bad)
adc
pop
test
inc
sub
xchg
xor
shl
cmp
aam
cld
push
mov
jle
pop
pusha
cmp
xchg
sub
fcomip
adc
and
push
dec
add
rcl
(bad)
push
leave
mov
push
sub
das
inc
or
or
imul
adc
or
outs
and
leave
jmp
out
or
test
rep
pop
jmp
push
mov
imul
add
xchg
or
mov
aad
pusha
or
sub
outs
xor
dec
or
adc
pop
adc
jmp
out
clc
(bad)
outs
xor
rol
mov
fst
mov
add
mov
mov
out
enter
or
fdivr
lock
cmp
mov
loopne
sbb
leave
push
jo
test
add
hlt
retf
adc
(bad)
int3
iret
push
or
or
out
and
in
fwait
push
xchg
adc
fild
popf
(bad)
popa
daa
inc
ret
inc
test
pop
or
and
popf
add
(bad)
popa
push
sbb
push
sbb
pop
imul
pop
xor
push
sub
dec
sub
sar
ret
inc
movs
add
cmp
cmps
cmp
push
sbb
cmp
push
mov
jle
mov
or
sbb
push
add
mov
adc
push
sub
inc
sub
xor
int3
jo
mov
jmp
or
cwde
add
inc
adc
sbb
in
add
xor
leave
dec
or
or
in
mov
data16
inc
or
pop
and
push
fdivr
or
inc
add
leave
fld
jl
add
pop
dec
xor
cmp
inc
xchg
jecxz
test
mov
adc
imul
test
sub
adc
das
adc
mov
pop
shl
adc
nop
imul
arpl
push
add
xchg
mov
add
jo
jnp
cs
adc
add
mov
push
jo
imul
push
popf
call
pop
jmp
xor
add
retf
jo
loope
das
adc
jmp
mov
add
sub
movs
inc
sbb
lea
test
xchg
lock
push
adc
mov
adc
push
jbe
mov
sub
jmp
and
test
aaa
xlat
dec
cmp
adc
pop
sbb
cmp
jmp
pop
popa
and
scas
fisttp
in
sub
imul
and
add
adc
dec
or
adc
add
addr16
ins
pusha
inc
and
loopne
sbb
jmp
sbb
push
jmp
jmp
or
cmp
push
xor
add
xor
sub
jb
aaa
jns
dec
jmp
mov
jmp
cmp
and
mov
or
test
je
ret
push
add
mov
cmp
inc
add
xor
xor
sbb
mov
adc
mov
mov
ror
mov
cld
jle
sub
jo
push
nop
and
aas
stos
push
push
dec
inc
adc
ret
mov
pop
mov
cmp
cmps
mov
adc
js
jmp
leave
dec
mov
rcr
movs
add
lods
lods
test
xor
sub
add
cmp
sub
jl
dec
pop
or
mov
jne
xor
inc
dec
xor
sbb
(bad)
dec
dec
sbb
or
fcom
js
data16
push
push
adc
adc
push
ja
rol
jbe
jae
retf
inc
or
js
inc
loop
outs
push
sub
mov
add
das
std
cwde
push
mov
mov
adc
ret
ficomp
and
pop
push
mov
ja
inc
retf
add
adc
xchg
dec
ins
jo
add
rcr
jae
scas
in
push
hlt
pop
rcl
add
sub
(bad)
fdivr
add
or
xor
fs
inc
or
lock
pop
iret
jo
in
rol
out
inc
or
les
inc
xor
cs
mov
xor
ja
sub
and
mov
(bad)
(bad)
add
mov
add
add
(bad)
fstp
xor
pusha
aad
mov
mov
bnd
push
push
add
cwde
adc
push
cmp
in
push
sub
jmp
sbb
mov
and
add
push
pop
and
inc
jno
(bad)
xor
add
mov
shrd
js
add
fucomi
adc
ror
lahf
ins
mov
out
sbb
or
les
pushf
(bad)
push
jle
inc
jo
ret
sbb
inc
cmp
mov
test
mov
ja
ret
add
inc
addr16
das
xor
les
adc
jno
or
cmp
sbb
or
jle
inc
mov
das
jecxz
sbb
pop
shl
test
repnz
cmp
icebp
popf
adc
or
adc
ins
and
inc
sub
or
lods
adc
cmp
cmp
nop
sbb
nop
mov
xor
jno
mov
and
or
nop
sbb
adc
or
add
add
add
popf
and
or
mov
push
or
ffreep
jmp
jmp
adc
popf
ret
add
adc
je
push
cmp
shr
sbb
mov
sti
xchg
stos
mov
xchg
mov
sbb
dec
sub
mov
jo
cmp
out
mov
ret
out
or
sub
pop
jo
push
shr
inc
sahf
or
push
sar
add
push
enter
mov
inc
fimul
or
push
data16
and
or
(bad)
mov
ins
bound
jle
imul
and
(bad)
push
push
lds
test
neg
inc
inc
adc
push
dec
jbe
stos
or
mov
add
mov
in
or
je
inc
clc
loop
or
jne
push
push
popa
mov
adc
cmp
adc
mov
or
or
inc
mov
mov
push
and
mov
or
mov
inc
inc
and
int
ins
mov
adc
push
sub
lahf
pop
js
shl
(bad)
mov
mov
inc
sub
and
cmp
popa
into
or
push
inc
dec
(bad)
xlat
jecxz
test
xchg
push
inc
and
movs
cdq
xchg
adc
sub
pop
inc
add
mov
xor
in
mov
call
scas
fwait
int3
jecxz
ja
and
push
(bad)
adc
cmp
test
dec
into
mov
xchg
jle
loope
mov
dec
int3
das
mov
aam
loope
inc
test
arpl
rcr
push
loopne
lea
add
in
push
push
sar
cmp
or
add
inc
push
mov
xchg
(bad)
xor
adc
and
dec
push
push
loop
in
mov
xor
add
jbe
adc
or
push
dec
and
pop
push
sub
jae
sbb
mov
outs
push
xor
jnp
sbb
adc
mov
and
mov
enter
or
imul
ins
out
sub
pop
ret
scas
icebp
mov
sub
and
jnp
mov
mov
es
push
mov
push
mov
test
jg
jmp
mov
mov
cmp
push
ret
add
or
push
ja
mov
push
sub
lds
pop
dec
sub
jle
sahf
inc
test
imul
mov
stos
test
or
push
push
add
adc
or
jmp
sbb
fmul
and
sbb
mov
ffree
imul
or
cmps
pop
retf
pop
and
cmp
mov
push
add
adc
mov
pop
and
sub
js
add
(bad)
xchg
inc
xor
fcomp
push
jo
aas
or
push
xor
inc
mov
cmp
gs
or
stc
out
loopne
pop
or
cmp
push
fild
mov
movups
test
mov
push
xchg
int
xchg
fcom
test
hlt
dec
call
loope
jns
ja
add
into
adc
je
nop
lea
aam
cmp
movs
pop
pop
sbb
sub
loop
out
movntps
adc
add
inc
and
or
sbb
or
cmp
and
icebp
outs
and
(bad)
or
stos
mov
(bad)
mov
push
or
fs
xor
arpl
das
je
add
inc
xor
and
adc
sub
(bad)
int3
dec
mov
shl
dec
adc
xor
sbb
je
adc
inc
adc
inc
push
xlat
mov
lahf
inc
and
adc
ret
dec
xchg
push
jecxz
inc
jae
jnp
mov
jge
and
mov
inc
dec
mov
sbb
add
xchg
cmovae
push
movs
data16
or
dec
add
sub
lea
test
inc
jg
xlat
jle
mov
rcl
cmp
daa
mov
jecxz
cli
outs
es
push
sub
je
jmp
mov
mov
aas
div
mov
adc
mov
add
mov
mov
inc
mov
ins
push
cmps
sbb
add
cmps
cmp
jo
mov
mov
fsub
leave
cmp
sub
adc
xor
dec
out
aaa
push
fdivr
clc
jmp
aad
push
imul
rol
jmp
loopne
fmul
add
loope
push
scas
out
pop
jmp
nop
add
fxch
cdq
inc
mov
(bad)
and
add
(bad)
adc
scas
dec
mov
push
(bad)
or
fwait
sbb
hlt
es
popa
pop
sbb
push
sbb
loopne
aam
mov
xor
test
daa
sub
cdq
adc
mov
jo
and
push
push
mov
add
xchg
mov
add
push
pop
movs
ins
aad
add
push
jecxz
iret
mov
mov
xor
jl
outs
sub
seta
push
push
and
xor
add
in
push
cmp
sub
xchg
cli
dec
mov
push
mov
and
test
add
cvtdq2ps
xor
rcr
imul
movs
inc
sub
ds
pop
fld
sub
mov
or
inc
inc
add
dec
and
mov
cmp
jae
push
cmp
rol
cmp
ret
std
out
xor
jne
dec
call
pop
inc
or
push
push
addr16
aam
lock
js
cdq
add
xchg
cmps
adc
xor
dec
inc
(bad)
cwde
mov
or
and
out
cmc
pop
pop
aaa
and
lea
mov
cmp
mov
scas
sbb
adc
and
lock
sbb
push
mov
or
dec
jle
xchg
cld
push
push
mov
push
xor
rcr
inc
add
pop
jns
scas
inc
add
jo
push
imul
sbb
sub
ins
sbb
inc
sbb
add
add
mov
mov
clc
retf
and
sub
sar
ins
or
addr16
dec
adc
cdq
ds
xor
das
and
sub
push
pusha
loopne
inc
adc
mov
add
xlat
jnp
aam
js
jo
dec
adc
sbb
push
mov
jmp
movs
or
dec
and
and
call
dec
cmp
inc
sub
add
xchg
mov
inc
inc
and
or
xor
add
add
add
pop
(bad)
loopne
xor
sbb
popf
sahf
pop
add
hlt
jmp
retf
dec
loope
push
and
mov
fidiv
pop
mov
xchg
xor
or
stos
and
mov
dec
xchg
inc
test
mov
add
mov
xchg
lods
loopne
push
(bad)
lahf
cmp
inc
clc
pop
jnp
and
loop
add
bound
pop
leave
mov
inc
aad
js
movs
add
mov
or
nop
hlt
push
add
push
mov
movzx
push
and
lock
adc
push
adc
cld
inc
add
xor
or
jnp
jo
mov
sbb
jo
push
cmp
mov
push
div
in
and
sbb
adc
jmp
xor
gs
xchg
out
inc
les
push
mov
mov
pop
push
or
sub
cdq
adc
dec
add
(bad)
pop
cld
(bad)
or
int3
or
sbb
scas
add
or
xor
xchg
pop
sbb
mov
out
js
cmps
add
stos
ret
pop
sub
mov
xor
sbb
or
and
(bad)
mov
jns
jbe
daa
loopne
loopne
mov
pop
or
xor
sub
sbb
pop
bound
xor
inc
jae
and
and
pop
lahf
push
mov
and
mov
test
loopne
clc
adc
ds
jnp
daa
mov
or
ficom
dec
cli
adc
and
jno
add
add
cmp
fdivr
movs
addr16
jg
or
add
or
or
test
not
or
sub
pop
inc
movs
add
push
nop
arpl
mov
inc
sub
sub
sbb
dec
jmp
aas
and
stos
mov
add
ret
add
xchg
push
inc
scas
stos
push
test
sysexit
and
inc
hlt
sbb
pop
push
fmul
jp
in
aas
jne
dec
inc
or
std
bound
or
pmaddwd
jecxz
jg
fmul
fnstcw
xchg
outs
pop
ins
jge
into
mov
shl
mov
xlat
je
xchg
ja
fild
in
dec
inc
add
jmp
clc
add
ret
call
test
jno
imul
add
pusha
sbb
out
enter
clc
iret
hlt
sub
pop
add
mov
xlat
and
cmp
inc
out
dec
loopne
call
loopne
dec
and
add
dec
or
inc
test
retf
mov
shld
(bad)
out
or
addr16
inc
cmp
jne
inc
cmp
ret
add
and
add
cmps
test
sbb
pop
mov
in
inc
push
add
and
pusha
cmp
call
hlt
or
adc
inc
cmp
cwde
div
push
cwde
aas
and
add
clc
and
or
ficom
call
pop
xor
inc
ins
cmp
sub
in
xor
imul
daa
adc
or
or
cmp
inc
mov
add
inc
rcr
mov
and
syscall
mov
jecxz
imul
xlat
adc
xor
adc
movs
(bad)
imul
out
jmp
or
in
aad
jl
adc
inc
adc
aad
sti
outs
lock
pop
and
lock
movs
or
in
cmp
clc
xchg
fadd
shr
enter
cmp
fild
adc
cmp
fistp
xor
ins
dec
retf
ds
fldenv
add
sbb
lahf
and
mov
or
repz
add
lods
fdivr
mov
jo
push
inc
out
push
clc
and
mov
ins
jb
add
aad
mov
ja
mov
nop
les
push
sbb
je
adc
sbb
cmp
nop
xchg
ins
or
test
cmp
mov
xchg
dec
add
or
add
loope
daa
inc
xchg
movzx
dec
cmp
add
outs
push
fdivr
jo
popa
inc
ins
outs
jge
leave
imul
dec
cmp
adc
inc
inc
call
add
sbb
adc
add
inc
stos
jno
test
mov
mov
add
rcl
inc
add
xchg
or
inc
arpl
add
pop
or
add
dec
call
sub
add
pop
add
add
jo
xor
add
rol
dec
add
mov
sub
add
sbb
in
pushf
dec
imul
cli
pop
scas
jo
inc
sbb
cmp
push
gs
dec
dec
pop
sub
lock
add
(bad)
pop
adc
sbb
enter
mov
mov
sbb
in
jns
xchg
in
dec
push
add
rcr
inc
rol
or
add
jnp
ds
or
inc
es
pop
jae
aaa
dec
arpl
rcl
pop
mov
and
out
pusha
push
pop
dec
jmp
in
mov
push
daa
xor
popf
jb
gs
pop
push
or
and
rcl
and
test
mov
add
or
sbb
inc
sub
mov
js
das
nop
xor
push
pop
lock
or
ret
inc
add
dec
test
inc
movs
or
in
add
rcr
inc
or
or
inc
or
popf
or
xor
jp
pusha
cmp
scas
mov
adc
sub
sbb
or
sub
call
in
movs
sbb
daa
div
cmp
test
out
adc
xor
or
inc
pop
cs
ins
fs
inc
add
ins
push
pusha
fadd
pop
int3
sub
ins
enter
mov
jg
or
rol
mov
pushf
jno
push
and
xor
add
repz
and
xor
mov
fwait
popa
xor
inc
jae
pop
adc
sub
pop
or
pop
das
xor
jb
add
dec
jl
popa
sub
xchg
(bad)
pop
xchg
add
aas
fs
sub
and
mov
and
push
add
int
scas
inc
mov
aaa
pop
pop
sbb
inc
inc
dec
inc
adc
add
fidivr
inc
mov
(bad)
mov
jmp
add
jae
test
dec
pop
and
pop
adc
cmp
dec
mov
or
stos
and
jno
les
dec
dec
jmp
xchg
jl
inc
adc
rol
cmp
pop
sbb
cmp
dec
xor
push
cmp
pop
inc
jbe
ja
nop
rcl
leave
pop
jnp
gs
inc
cwde
cmp
jo
mov
push
jne
jns
and
add
add
push
adc
adc
add
test
push
sbb
add
mov
adc
sti
inc
add
and
push
mov
and
mov
lods
shl
dec
fadd
loopne
inc
add
dec
cmp
inc
mov
cwde
inc
inc
add
cmc
cwde
adc
add
add
lock
(bad)
cs
mov
in
dec
mov
loopne
add
sbb
call
add
dec
scas
call
mov
sar
rol
or
out
add
js
mov
cmp
mov
dec
loop
add
movs
dec
add
adc
push
cmps
test
test
dec
inc
call
add
fadd
pusha
or
add
push
push
pusha
push
out
push
pop
mov
out
and
sbb
call
push
xchg
add
push
bound
sbb
dec
add
mov
sbb
push
push
inc
inc
inc
dec
cmp
adc
push
dec
adc
push
push
add
or
lds
or
pop
add
fucomp
inc
clc
js
adc
icebp
rcr
enter
pop
in
add
add
test
ins
rcr
mov
shr
jo
fs
into
push
icebp
push
or
rcr
popf
adc
mov
adc
lea
pop
lock
adc
test
push
lock
lock
mov
ins
sbb
inc
gs
sub
and
sbb
push
(bad)
popf
inc
clc
jge
fsub
cmp
nop
inc
add
adc
mov
inc
and
mul
add
fidiv
inc
and
or
aaa
mov
xchg
addr16
ss
adc
je
xchg
loopne
adc
int
in
pusha
addr16
popa
pop
clc
ds
add
sbb
inc
mov
nop
nop
mov
imul
test
adc
shl
inc
sysexit
(bad)
int
sbb
pop
mov
inc
and
shr
(bad)
arpl
test
inc
lods
cwde
inc
adc
das
or
or
nop
mov
sbb
mov
xor
(bad)
fisub
cmp
push
call
js
sbb
jo
pop
adc
inc
adc
mov
xchg
in
xchg
fiadd
dec
push
sub
pop
ds
adc
sub
je
bound
call
(bad)
or
fisttp
adc
cmp
cmp
mov
or
imul
adc
push
pop
xor
pop
push
daa
clc
loope
arpl
inc
sbb
ret
mov
mov
clc
mov
add
add
repnz
iret
fs
aaa
lods
ins
or
dec
inc
pop
hlt
fs
popa
js
mov
outs
fimul
pop
push
jle
sbb
lock
xchg
add
je
inc
repnz
inc
push
(bad)
xchg
inc
bound
or
xlat
or
ror
fwait
mov
outs
aaa
mov
inc
rcl
and
xchg
push
add
pushf
dec
in
aas
mov
cmp
in
cmps
(bad)
and
jmp
fistp
or
inc
pop
adc
add
cmp
imul
pop
xor
sub
mov
in
rcl
in
dec
lods
rol
jns
mov
adc
push
and
or
pop
je
push
bound
or
cmp
or
sub
es
and
cmps
loop
or
push
outs
outs
mov
and
iret
or
mov
or
mov
(bad)
in
gs
fsub
mov
pop
mov
inc
jo
push
cmp
inc
(bad)
sub
dec
nop
pushf
or
test
ret
sub
js
xchg
ret
pop
xchg
and
js
inc
mov
add
imul
test
fisttp
stos
bound
adc
nop
adc
jb
pop
adc
xchg
or
and
pop
adc
mov
dec
adc
pusha
inc
or
mov
imul
xchg
dec
push
rol
imul
rcr
inc
cmp
stos
push
dec
sbb
xchg
push
xor
sbb
pop
and
inc
mov
in
pop
scas
push
bound
adc
pop
lods
or
or
push
loopne
and
and
add
inc
and
add
stos
cmp
test
inc
aaa
or
cmp
jae
mov
rcr
shl
inc
test
or
mov
and
xchg
xchg
push
movs
or
jae
and
add
add
xor
xor
xor
stos
fadd
mov
test
or
stos
cmp
pop
les
cmp
dec
add
add
cmp
add
cmp
lods
in
ds
adc
dec
add
inc
loop
cs
inc
nop
add
dec
jnp
daa
jl
pop
shl
fadd
and
mov
inc
and
xchg
sbb
popf
hlt
lahf
inc
adc
xchg
add
add
lock
dec
pusha
sahf
inc
add
push
xor
(bad)
jno
xchg
in
jo
add
mov
jmp
loope
push
push
dec
daa
pop
sbb
icebp
shl
js
cmp
nop
xor
movs
xchg
add
adc
bound
and
dec
xor
leave
push
adc
sbb
sbb
adc
sbb
sbb
pop
sbb
pop
leave
push
jb
and
xchg
sbb
inc
and
add
push
xor
es
sub
and
sub
push
jb
sub
cs
leave
push
xor
xor
dec
sbb
or
or
xor
jb
xor
jb
cmp
enter
cmp
or
leave
add
inc
prefetchw
cld
addr16
(bad)
fcmovnu
nop
dec
outs
outs
imul
inc
push
jmp
inc
std
das
mov
test
cld
nop
inc
sar
jo
dec
dec
mov
mov
ficom
pop
dec
adc
dec
pop
enter
nop
jo
cmps
jb
ss
sbb
jmp
adc
or
dec
inc
sbb
jo
bound
adc
mov
mov
lea
or
or
mov
push
jns
gs
jo
add
or
xchg
adc
xchg
push
adc
scas
ins
adc
or
jae
pusha
or
jbe
nop
sub
inc
test
inc
es
sbb
ss
cmp
jo
addr16
fcomp
rcl
fsub
or
mov
and
fisub
sub
sub
jge
int3
push
or
xor
and
imul
push
out
sbb
mov
xadd
or
xchg
jo
fs
mov
and
add
jns
adc
push
into
fcomp
cmps
sbb
fidiv
add
jnp
adc
push
shl
adc
adc
ds
outs
jb
inc
or
frstor
test
pop
ds
add
clc
pop
or
push
lods
mov
add
dec
fmul
mov
dec
sbb
js
lea
call
push
loop
or
pop
jae
das
adc
ins
fist
int3
add
dec
popa
out
je
push
ins
imul
jns
cs
or
adc
ins
dec
add
rol
out
add
xor
test
jmp
jecxz
sets
mov
mov
das
stos
push
sbb
adc
mov
and
mov
inc
in
mov
pop
test
push
hlt
cmps
inc
mov
xchg
(bad)
ins
scas
inc
enter
mov
(bad)
dec
lods
inc
inc
or
or
mov
scas
mov
pusha
lods
scas
inc
(bad)
mov
mov
(bad)
(bad)
in
cmp
aam
inc
test
inc
loopne
loopne
enter
push
xchg
pop
rcr
sub
mov
enter
lds
shr
aas
mov
js
xor
jns
pop
push
fs
pop
inc
in
aaa
add
mov
add
add
xor
adc
sbb
pop
cmp
loopne
add
jle
rcr
outs
sbb
mov
jo
pop
mov
mov
jne
lods
add
(bad)
das
mov
sbb
mov
mov
push
aam
push
mov
in
(bad)
in
push
jmp
imul
call
out
in
int
int3
jmp
dec
push
iret
inc
retf
mov
dec
pop
shl
jns
outs
add
sar
out
popa
mov
push
or
push
mov
aad
push
or
add
and
out
cld
push
push
ja
fisub
ds
mov
rcr
mov
jns
xchg
pushf
pop
ficom
ret
jnp
test
mov
imul
jecxz
retf
repnz
cmps
push
push
mov
sub
aam
jmp
push
sub
push
ins
lods
jbe
mov
(bad)
int3
or
dec
mov
jo
sar
icebp
scas
je
pop
jb
adc
push
pop
fs
dec
jnp
mov
ror
sbb
sbb
xchg
adc
push
loopne
xchg
mov
pop
and
inc
mov
mov
mov
(bad)
mov
out
mov
push
inc
out
cmp
jo
out
or
mov
mov
ss
int3
or
pop
sub
shl
inc
cs
add
js
mov
push
and
adc
jne
scas
mov
or
iret
es
mov
mov
or
je
(bad)
mov
scas
sbb
pop
lock
cmovae
pop
pusha
adc
loopne
nop
sysret
sbb
ss
pop
inc
lock
rcr
enter
push
push
sub
outs
sub
inc
pop
jb
inc
inc
add
in
div
mov
dec
pop
push
setae
or
dec
lock
and
imul
pushf
adc
jo
or
mov
and
je
push
(bad)
fild
std
call
jne
or
je
or
je
and
movs
xchg
inc
add
push
add
fcom
clc
and
sbb
xchg
and
ins
jecxz
push
in
fild
lock
push
sbb
jmp
or
imul
sbb
push
or
or
or
(bad)
or
adc
push
push
pop
pop
adc
pop
jg
iret
pop
nop
fmul
push
hlt
mov
and
sar
(bad)
in
stos
add
push
add
int3
movs
xor
out
and
sub
jo
fldenv
mov
je
xchg
(bad)
sahf
iret
ins
cmp
(bad)
fstp
sbb
sbb
or
fimul
fdivrp
jo
jge
and
mov
xchg
mov
push
test
ja
mov
in
(bad)
cmp
je
mov
sub
test
cmps
jle
cmp
cmp
mov
pop
mov
jl
adc
pop
js
outs
add
loopne
xor
test
mov
jl
mov
aas
sbb
cmp
pop
adc
or
movs
or
enter
xchg
(bad)
jae
ret
mov
std
dec
jmp
loope
mov
(bad)
les
outs
enter
pop
and
mov
sub
push
jecxz
jae
dec
adc
lock
lea
cld
mov
push
push
xor
jl
jle
mov
inc
out
jae
out
mov
mov
iret
shl
xor
cmp
pop
mov
add
(bad)
test
cmp
iret
in
ret
add
adc
jbe
(bad)
adc
inc
test
ins
jle
pop
cmps
and
jge
in
add
sbb
and
fcmovb
lahf
ins
test
sbb
xchg
out
adc
add
add
fsub
xchg
add
sbb
imul
add
cmp
xor
cmp
cmps
icebp
pop
shl
pop
aam
aad
inc
mov
jmp
or
adc
inc
push
pop
xchg
add
push
movs
and
mov
lds
inc
cli
jge
mov
pusha
add
and
or
add
mov
data16
shl
or
mov
call
test
das
mov
inc
sbb
push
push
inc
rol
movs
dec
or
add
int
inc
div
push
inc
or
pop
gs
adc
and
dec
(bad)
in
or
out
inc
and
push
inc
add
call
inc
pop
loope
sbb
scas
fbld
cmps
popa
sub
add
mov
push
adc
mov
ins
or
and
or
imul
fcmovu
jnp
and
xchg
and
mov
push
mov
rol
sar
shr
push
adc
ja
mov
test
sub
pusha
clc
jbe
jne
jmp
sub
add
xor
and
mov
or
sbb
sub
adc
push
or
inc
add
mov
mov
pop
and
lea
and
xor
push
hlt
add
add
fcmovnbe
dec
add
retf
add
push
jns
jo
add
adc
dec
xchg
mov
out
and
sbb
loopne
pop
test
push
lock
test
test
hlt
gs
leave
mov
add
and
ins
daa
sbb
clc
jae
push
cmp
mov
inc
je
jns
pop
jmp
sub
pop
xchg
leave
xchg
push
fmul
add
sbb
or
pop
lds
push
cli
jp
cmp
mov
adc
sbb
movs
clc
add
lock
inc
js
push
test
or
xchg
mov
xlat
sbb
dec
inc
aas
fadd
fmul
xchg
rol
cli
adc
inc
mov
adc
pusha
adc
mov
add
inc
sub
jnp
add
dec
xchg
push
mov
pusha
pushf
mov
dec
mov
sub
neg
jmp
arpl
rol
and
sub
dec
cli
and
pop
or
lock
and
aam
test
xchg
repnz
or
mov
xlat
jle
pop
mov
ins
mov
aas
cld
xchg
test
inc
push
pusha
test
vfnmsubps
pushf
shr
push
cmps
xor
pop
stos
sbb
inc
aas
ret
and
inc
add
test
fiadd
add
shr
push
jne
mov
inc
test
pop
pop
cmp
fwait
imul
or
cld
call
and
or
jmp
xchg
add
mov
arpl
jo
push
mov
loopne
test
cld
cmp
nop
cs
icebp
jmp
ja
es
or
xchg
push
cmp
cs
or
not
sub
sbb
fwait
lods
add
mov
sub
mov
and
outs
add
les
shl
push
je
jmp
push
push
fs
xor
pop
jbe
lods
push
mov
and
ret
adc
pushf
adc
sub
call
shl
adc
or
jmp
lock
sub
add
push
rcl
push
and
pop
or
mov
icebp
cmp
ret
or
imul
iret
repz
aam
cdq
jb
in
nop
daa
xchg
shl
add
mov
cmp
fmul
inc
sub
jecxz
fnsave
cmp
out
jle
push
dec
inc
mov
and
sahf
push
push
and
ficomp
pop
sbb
sub
push
sbb
sbb
rcl
push
movs
adc
mov
mov
and
add
mov
jno
xor
pop
loopne
ror
add
push
xchg
test
sub
sub
mov
mov
mov
push
dec
inc
adc
sub
adc
or
(bad)
cmp
or
add
cdq
mov
mov
(bad)
mov
enter
jmp
test
and
or
cmp
shl
or
fbstp
push
dec
pop
das
adc
ret
add
jg
mul
enter
sub
xor
pop
mov
add
fild
and
xchg
mov
push
and
pop
or
cmp
test
xor
inc
xor
xor
mov
xor
sysenter
dec
add
mov
jmp
retf
jae
lock
jge
aaa
xor
fwait
adc
sahf
add
cmp
(bad)
jae
cmp
sbb
push
sub
xlat
mov
(bad)
mov
adc
push
call
mov
add
or
fcmovnbe
pop
add
jl
cmp
(bad)
fucom
sub
xor
cwde
in
push
sbb
cmp
xor
push
sub
pop
movs
and
cmp
and
inc
push
nop/reserved
js
lock
lods
ret
push
(bad)
and
push
mov
mov
clc
sub
inc
aad
mov
sub
inc
push
inc
fdiv
inc
xor
add
loop
add
out
adc
xchg
ror
or
jmp
pop
jmp
push
sub
or
ss
mov
or
ret
mov
call
test
ret
xchg
sbb
push
mov
and
or
mov
cmp
add
lods
(bad)
sbb
or
or
push
adc
xchg
add
aas
xchg
xchg
ins
add
clc
push
js
mov
add
sbb
fiadd
bound
pop
pop
(bad)
jle
popa
xchg
jecxz
push
add
sbb
and
push
and
jne
daa
movs
mov
pop
mov
lock
sub
or
fwait
and
pop
daa
push
push
pop
or
lea
ret
sbb
loopne
mov
lds
test
je
adc
jmp
add
dec
add
in
pusha
outs
add
sub
pop
xor
jbe
cmp
pop
cmp
cmovns
daa
popf
test
cmp
pop
fcmovb
aaa
sbb
clc
inc
or
pop
rcr
xchg
in
sbb
sub
add
inc
or
xchg
add
add
out
or
outs
pop
xor
(bad)
leave
mov
popf
mov
or
sbb
or
dec
xchg
inc
inc
imul
or
(bad)
jmp
push
mov
or
xchg
add
ja
outs
je
mov
sbb
(bad)
cld
or
mov
cmp
ja
xchg
in
std
pop
or
adc
test
push
pop
xor
dec
mov
xchg
inc
mov
add
loope
test
cmp
blcfill
push
xchg
inc
out
and
pop
push
in
scas
add
(bad)
(bad)
push
and
dec
adc
dec
sub
add
sub
and
push
add
add
rol
mov
fdiv
xlat
rol
and
jnp
mov
xchg
sub
add
xlat
sbb
mov
sbb
shl
inc
sbb
cmp
mov
cmp
ret
push
push
lea
push
inc
or
jmp
inc
jl
add
add
popa
stos
sub
dec
mov
(bad)
jge
sbb
out
sbb
pop
mov
push
jle
fs
dec
cwde
(bad)
dec
ja
mov
ins
scas
int
inc
pop
cwde
mov
pushf
ss
ss
div
add
mov
mov
cs
and
jns
pop
inc
and
(bad)
or
ins
leave
sub
mov
cmp
xor
aas
mov
(bad)
or
push
cmp
add
mov
aas
cmp
js
mov
(bad)
div
xor
add
or
loopne
sub
mov
sahf
add
or
cwde
je
pop
pop
dec
je
push
push
dec
xchg
sahf
ret
pop
outs
add
mov
jns
stos
mov
xlat
cmp
call
inc
mov
fistp
shr
mov
inc
or
aam
jmp
inc
or
fcomp
fisttp
or
add
or
arpl
add
call
push
pop
add
mov
inc
shr
and
adc
enter
mov
add
(bad)
popa
dec
imul
sti
mov
add
mov
and
inc
xchg
inc
fwait
cmp
fwait
mov
adc
or
sbb
leave
and
push
push
dec
xlat
pop
out
jne
pushf
mov
arpl
sbb
xlat
fadd
or
out
add
pop
pop
aas
push
test
mov
pusha
inc
mov
push
push
inc
mov
pop
xor
or
ret
daa
stos
add
push
xchg
xchg
(bad)
and
enter
add
and
add
cmps
sbb
or
cmp
xchg
add
(bad)
adc
scas
adc
pop
mov
mov
mov
mov
jg
xchg
cmp
lahf
add
mov
inc
sbb
sbb
test
adc
rol
popf
ds
dec
add
cmc
mov
arpl
jo
push
outs
fs
sbb
jmp
mov
pusha
test
stc
pop
pop
fisubr
hlt
adc
pop
xor
mov
loope
jns
inc
dec
jg
inc
sbb
pop
das
push
mov
popa
dec
sar
sbb
fcmovnbe
jne
add
pushf
or
and
xor
fadd
ret
or
jo
or
shl
mov
xchg
push
or
xchg
add
dec
clc
jne
pop
pop
enter
add
push
mov
mov
jne
das
shl
xchg
movs
push
(bad)
xchg
push
cmp
(bad)
sbb
out
or
pop
add
adc
jmp
adc
jl
push
jmp
mov
add
jbe
and
aaa
pop
sub
xchg
clc
add
pushf
(bad)
dec
inc
xor
loope
mov
sbb
mov
mov
outs
sub
adc
sbb
(bad)
out
or
sbb
and
loopne
fisub
push
mov
dec
sbb
xlat
cmc
jne
sub
pop
shl
jno
rcl
sbb
in
and
ss
cmp
sub
mov
mov
mov
xor
push
or
sbb
imul
std
add
dec
jnp
je
nop
daa
aas
stos
sbb
mov
lods
pop
xchg
je
loopne
int
add
dec
clc
ret
dec
mov
fbld
call
lock
pop
jb
in
inc
sbb
xchg
arpl
inc
adc
sub
mov
ret
xchg
sar
fld
xchg
mov
inc
mov
cmp
inc
sbb
xor
cmps
ja
popa
inc
repz
mov
icebp
test
and
ret
or
mov
cmps
shl
add
cdq
imul
xlat
mov
adc
fld
or
loope
pop
hlt
inc
ror
mov
cmp
shr
push
mov
daa
add
enter
adc
hlt
and
inc
gs
cmp
(bad)
xor
sub
cmp
(bad)
mov
lods
and
add
inc
push
sub
xor
inc
sbb
jl
inc
dec
cmp
pop
push
xor
inc
jmp
mov
pop
loope
ret
mov
call
or
das
mov
add
mov
push
ret
jge
pop
xchg
mov
pusha
sub
aas
jl
push
xor
mov
mov
cdq
movs
or
fadd
rol
and
cmc
cmps
jae
jne
add
je
jns
sbb
inc
dec
inc
lods
mov
adc
dec
mov
mov
pop
(bad)
mov
sub
loop
mov
jo
mov
add
cmp
or
cvtpi2ps
mov
dec
test
adc
aam
pop
adc
rol
sbb
pop
leave
xor
xor
out
push
jmp
push
and
add
and
xchg
imul
fiadd
jb
dec
popa
neg
fcom
inc
push
pop
push
cld
aad
dec
fadd
jecxz
shl
mov
iret
clc
inc
lods
rol
push
(bad)
(bad)
or
and
mov
mov
shl
or
jns
add
pop
and
xchg
shl
jl
sbb
sub
and
inc
inc
xchg
pop
push
test
bound
jp
jle
jne
lods
fs
stos
sub
mov
sbb
vpor
dec
out
xor
mov
out
add
movs
and
pusha
divps
xor
(bad)
xchg
or
push
push
push
pop
jno
sbb
pop
lds
lods
push
sbb
nop
push
cdq
adc
mov
add
add
lock
and
pop
imul
adc
and
add
daa
cmp
adc
fsub
sub
das
daa
push
mov
push
and
fdiv
sub
inc
sbb
or
adc
call
adc
loop
push
enter
and
cmp
imul
cmp
je
jnp
push
adc
sbb
aad
pop
or
cdq
nop
sub
and
cli
add
xor
pop
retf
push
inc
(bad)
(bad)
js
xor
adc
or
or
pop
mov
xor
cmp
retf
or
and
mov
add
fwait
cmp
push
cmp
or
inc
push
test
fld
lds
mov
or
mov
icebp
push
or
jg
dec
pop
xor
mov
and
fisubr
sub
inc
cmp
jns
push
aaa
or
ins
clc
test
cmp
or
dec
xor
inc
lahf
ins
mov
cld
cmp
lahf
adc
dec
outs
outs
jb
fld
pop
or
or
scas
mov
pop
pop
add
sub
jo
shr
das
call
sub
aaa
lods
push
xor
idiv
xchg
lahf
test
mov
mov
add
mov
and
sbb
jge
push
push
adc
cmps
mov
and
add
ja
push
imul
les
jge
test
fmul
pop
cmp
ret
fnstsw
cmp
add
mov
mov
add
mov
sbb
mov
shl
pop
fwait
mov
and
aas
and
mov
mov
inc
xor
outs
stos
xor
outs
dec
dec
sbb
iret
push
adc
add
dec
mov
adc
jle
adc
dec
inc
adc
xor
cmp
jg
aas
int3
enter
xor
jnp
and
frstor
jl
in
inc
ds
add
push
cmp
xor
push
sti
add
or
or
cwde
inc
dec
adc
or
or
push
push
mov
cmp
sub
adc
shl
jg
adc
pop
mov
add
dec
lock
sbb
pop
hlt
cmp
movs
xor
xchg
push
repz
add
jmp
push
sub
mov
inc
pop
push
imul
or
je
aaa
inc
and
jo
sbb
sbb
cmp
or
(bad)
dec
lods
inc
adc
leave
ror
arpl
adc
cmp
je
mov
mov
adc
sub
add
or
mov
clc
adc
sub
or
mov
dec
fdiv
cmps
pop
ins
test
or
je
xchg
pop
sub
shr
iret
jmp
and
aas
adc
loop
and
push
scas
hlt
rcl
out
jb
and
add
mov
clc
daa
cmp
in
xchg
icebp
jbe
test
or
enter
xchg
out
aam
mov
test
push
movs
(bad)
fld
mov
xchg
and
sub
inc
pop
add
rcr
add
call
adc
das
sub
retf
ret
and
jg
ret
cli
inc
jg
xor
cmp
sub
and
loop
or
test
mov
push
cmp
call
daa
mov
cmp
test
cmp
mov
xor
test
daa
cmp
xchg
test
inc
sub
add
sub
add
jmp
in
adc
and
adc
sbb
add
xchg
push
in
leave
adc
pop
repz
and
inc
movs
pop
push
gs
mov
inc
les
mov
and
cmps
loop
and
pusha
cmps
push
mov
cmp
ins
hlt
jg
add
mov
jae
add
pop
test
push
mov
dec
sbb
inc
sub
add
add
push
into
movs
lea
jmp
xchg
jge
add
fidivr
mov
mov
test
cmp
or
and
in
add
jmp
(bad)
mov
shr
mov
nop
push
rol
or
cwde
ret
push
sbb
cwde
jb
dec
xchg
out
hlt
call
in
iret
in
xor
jp
jnp
and
popa
fisttp
xchg
xor
cmp
mov
in
int
mov
lock
sbb
or
add
and
das
arpl
add
and
xor
xor
mov
sub
or
pop
daa
rdpmc
push
lock
xor
lea
lea
xor
xor
lahf
and
push
mov
lock
lahf
xor
or
jl
and
out
add
push
sub
cdq
and
mov
dec
xchg
cmp
xor
xor
adc
imul
adc
adc
push
add
sbb
inc
aam
jl
mov
pop
ret
adc
es
add
ret
sub
fldcw
mov
jns
push
jo
and
loop
ror
and
imul
jmp
lock
pop
mov
inc
enter
xchg
mov
mov
dec
or
add
push
adc
movs
scas
dec
or
dec
sar
lea
mov
inc
or
loope
mov
pop
or
(bad)
sahf
jno
sar
scas
loope
in
dec
jle
movs
sub
loope
shr
add
dec
loopne
dec
xor
jmp
sub
push
adc
(bad)
aaa
test
jg
mov
loop
jne
mov
fdivr
out
inc
inc
fnstcw
mov
add
push
gs
dec
imul
pop
fs
mov
hlt
pop
push
push
mov
jnp
sub
push
adc
call
retf
push
push
cmp
push
jge
cwde
cwde
sub
lahf
cmp
push
add
dec
fistp
xor
pop
les
push
push
pop
sbb
push
push
inc
fwait
sub
das
bound
(bad)
(bad)
jg
mov
inc
addr16
jne
icebp
stos
hlt
or
mov
nop
push
les
in
and
cmp
xor
or
sbb
mov
pop
ret
inc
add
mov
mov
je
or
mov
cmps
or
add
stos
fcomip
add
ret
mov
sbb
in
xchg
inc
jno
pop
pop
sub
sbb
xchg
loope
adc
bound
mov
out
int3
imul
fadd
push
jb
xor
inc
fadd
test
adc
add
sbb
loop
mov
or
aas
jmp
dec
mov
call
add
lea
xor
movs
xchg
int
and
les
int
test
xchg
lahf
xor
dec
arpl
pop
dec
aaa
cmp
cli
xchg
dec
sbb
imul
out
mov
sbb
xor
mov
sti
loope
mov
ds
and
ins
cmp
call
or
or
sbb
sar
jmp
mov
mov
ins
sub
or
in
aam
std
das
adc
cmp
jne
in
loopne
movs
sbb
fld
and
dec
sbb
aam
and
dec
push
fist
or
mov
out
ins
or
or
push
cdq
and
fiadd
jmp
mov
add
mov
punpcklwd
cmps
pop
xor
xchg
aas
mov
stos
xchg
and
add
push
mov
enter
push
jno
icebp
lods
pushf
cmps
in
jne
movs
mov
push
cmp
sbb
into
fwait
jne
test
add
inc
xchg
hlt
out
out
stos
sahf
test
jecxz
pop
call
cmp
adc
fild
and
and
adc
clc
xchg
jg
push
xchg
shl
ret
lods
xor
lds
xchg
push
ss
push
daa
fimul
mov
and
xchg
movs
or
dec
out
jle
mov
xchg
jmp
push
mov
mov
inc
mov
ins
pop
cdq
dec
out
sub
fidiv
dec
mov
test
popa
cld
add
mov
dec
mov
daa
fdiv
inc
data16
jbe
cmp
xor
inc
or
popa
sub
and
imul
or
sub
ins
and
frstor
xchg
int
xlat
sbb
or
aas
and
mov
popf
or
push
adc
xor
clc
scas
jge
push
(bad)
dec
clc
je
cmp
mov
adc
push
xor
mov
pusha
jmp
sub
mov
sti
mov
sub
imul
pop
enter
lahf
xchg
bound
fs
cli
test
mov
shl
add
mov
sbb
push
out
or
push
cmp
jl
std
or
xor
loope
mov
xchg
xchg
pavgb
adc
nop
arpl
sar
and
jo
js
dec
adc
xchg
and
xchg
add
ror
loop
(bad)
adc
cmc
ins
iret
adc
pop
add
ret
mov
jmp
inc
jo
daa
mov
sqrtps
mov
adc
arpl
mov
xor
fistp
pop
push
adc
dec
pop
mov
shl
xor
cmp
mov
test
sub
sbb
shl
xor
rcr
or
test
push
div
jp
movs
and
test
lods
or
adc
lods
xor
(bad)
and
sbb
push
push
rcl
cmp
shl
aam
mov
dec
dec
cmp
inc
cmp
mov
movs
add
aad
cmp
test
xchg
fiadd
add
rcl
pop
mov
fiadd
add
sbb
fsubr
dec
add
push
push
and
mov
outs
xchg
jno
sub
xor
pop
mov
fisttp
(bad)
inc
sti
or
hlt
push
and
sub
lds
lahf
jg
add
push
cmp
outs
mul
or
mov
add
aad
pop
mov
call
test
sti
pop
(bad)
clc
push
add
gs
sub
mov
call
and
sar
add
cmp
jge
aaa
add
sub
jmp
add
aaa
add
xchg
adc
dec
adc
sub
push
dec
mov
clc
sub
and
pop
pop
jl
and
dec
push
popf
dec
int3
or
jg
add
push
ret
lds
adc
jo
jg
sbb
pop
push
push
inc
outs
ins
cld
mov
mov
(bad)
fbstp
or
dec
mov
aas
mov
mov
add
test
arpl
adc
pop
sub
scas
mov
rcl
sub
push
add
inc
js
adc
add
push
dec
aaa
mov
(bad)
repz
push
cmp
std
adc
ja
add
pop
psrld
dec
lock
jo
add
mov
sub
cmp
or
jmp
add
or
imul
es
push
ret
xor
xchg
mov
adc
add
retf
mov
shl
add
sbb
xchg
inc
add
xchg
add
cmps
sbb
shl
sub
add
sbb
and
ret
and
ds
jmp
rcl
sbb
jmp
(bad)
aas
add
push
or
mov
pop
vandps
jecxz
sbb
or
sub
add
or
lock
cmp
xchg
jmp
aad
xor
das
add
out
and
into
sub
add
and
or
cmp
xchg
mov
cld
sbb
or
scas
push
outs
adc
inc
scas
sub
pop
sti
push
push
or
mov
inc
fiadd
adc
push
push
div
scas
add
cld
and
cld
arpl
sbb
out
imul
jmp
inc
xor
scas
std
xor
cmps
pop
pop
jnp
dec
dec
inc
dec
push
ja
clc
dec
xchg
lea
dec
rol
or
dec
fisttp
test
inc
sbb
jne
add
daa
lea
add
xor
mov
icebp
lea
cmps
pop
pop
js
call
inc
ins
push
mov
and
adc
inc
sbb
bndstx
test
jle
popa
add
push
push
mov
inc
pop
dec
lock
std
and
stos
repnz
or
movs
pop
inc
idiv
add
pop
daa
dec
sub
mov
mov
pop
cld
lea
mov
cmps
mov
fild
sub
and
icebp
sbb
xor
lea
mov
add
inc
cmp
jne
xchg
mov
xor
xchg
or
push
outs
or
stc
push
push
fcomp
inc
cmp
test
shl
fdivr
fdiv
jne
inc
pusha
mov
jecxz
push
dec
ins
mov
push
push
(bad)
jno
cmp
push
ret
clc
and
xor
enter
xchg
or
icebp
popf
dec
or
mov
cmp
rol
mov
in
div
mov
mov
sub
sahf
cs
push
push
sub
cmp
movs
mov
cmc
outs
push
(bad)
rcr
add
adc
jne
cmp
add
shr
sub
out
xchg
mov
sub
fs
mov
inc
push
rcl
mov
xor
sub
fdivr
hlt
sub
and
mov
dec
jno
or
jmp
and
push
in
xchg
push
and
add
jg
cmp
add
mov
arpl
retf
cdq
js
iret
xchg
inc
(bad)
sub
push
(bad)
xor
js
mov
movs
test
adc
add
jns
js
dec
add
ret
push
and
mov
mov
push
jnp
xor
and
sbb
jo
pop
sbb
mov
loop
aam
(bad)
btc
sbb
cld
out
lock
(bad)
mov
mov
(bad)
and
nop
lock
xor
mov
or
push
ror
adc
mov
push
ret
wrmsr
inc
adc
cmps
add
adc
mov
adc
adc
retf
inc
cmp
jbe
lds
and
pop
mov
xor
or
cmc
sub
and
and
movs
imul
mov
mov
int
hlt
(bad)
add
sbb
inc
nop
nop
cmp
leave
sub
imul
rol
sub
inc
fistp
and
push
in
sbb
fwait
ds
popa
dec
cld
popf
push
gs
pop
add
sbb
sbb
pop
scas
adc
add
mov
adc
jbe
lock
jl
ficom
mov
or
mov
or
jg
xchg
mov
cmp
inc
inc
fbld
(bad)
je
outs
je
dec
cmp
jmp
and
movs
xchg
sub
cmp
or
jns
outs
adc
sbb
in
lahf
in
jmp
adc
fs
pop
cmp
push
(bad)
das
dec
jl
fimul
dec
pop
or
out
ret
and
push
and
or
xchg
and
mov
xor
arpl
add
add
mov
xor
jb
movs
mov
pop
mov
scas
pop
outs
adc
mov
out
and
cmp
mov
inc
sbb
lock
ja
pop
push
fnstcw
enter
hlt
outs
nop
add
push
push
sub
or
lods
repnz
dec
data16
xor
fcom
mov
call
xor
(bad)
add
inc
loope
ds
outs
fisubr
inc
or
add
adc
xor
mov
dec
jmp
test
sub
popa
shl
inc
mov
lds
mov
idiv
mov
cmp
mov
add
mov
out
mov
sub
jne
mov
inc
push
jbe
push
push
(bad)
push
mov
add
and
jmp
mov
repz
pop
add
xchg
cli
mov
add
movs
jge
inc
adc
jmp
and
pop
jge
mov
test
xor
sbb
rol
or
loopne
shr
mov
test
push
lods
mov
rcl
nop
out
pop
sub
fist
inc
fiadd
and
in
movs
mov
cmc
push
icebp
rcr
fwait
add
add
icebp
es
stc
pop
sbb
dec
lock
or
sbb
fwait
jmp
dec
or
mov
add
push
outs
jg
aaa
add
add
mov
clc
ds
dec
xor
xchg
inc
jmp
rol
mov
jecxz
pop
stos
fwait
add
lea
adc
sbb
shl
mov
pop
xor
and
repnz
cld
mov
and
test
push
or
cmps
and
xor
sbb
xor
aaa
or
add
(bad)
or
enter
mov
(bad)
repnz
adc
push
mov
xor
fidivr
inc
or
pop
mov
dec
rol
push
loopne
imul
pushf
pushf
mov
leave
call
(bad)
mov
nop
out
sbb
adc
fwait
rcr
mov
pop
and
bound
jp
sub
mov
xchg
loopne
add
inc
sbb
mov
scas
rol
adc
ror
or
sbb
test
cmps
inc
lahf
inc
ficomp
or
xor
sbb
mov
je
or
lods
and
pop
lahf
push
mov
lds
push
push
mov
dec
mov
push
mov
sbb
adc
xchg
xchg
loopne
test
jbe
cmp
out
mov
push
sub
or
push
xchg
stos
jo
push
or
nop
jp
push
xchg
lock
or
sub
push
xor
mov
mov
mov
retf
(bad)
cmp
sar
lock
je
aas
mov
cmp
rcl
push
cmp
aaa
arpl
stc
pusha
jmp
dec
adc
test
cmp
in
lods
cmps
stc
pop
cdq
or
pop
adc
popa
push
pop
or
cld
and
jmp
lods
and
(bad)
movs
add
and
sahf
add
pop
adc
pop
add
icebp
je
and
mov
dec
sub
shl
popa
rcl
sar
cmp
cmp
and
mov
push
and
push
enter
fs
mov
mov
pop
ret
les
(bad)
sub
add
leave
neg
lds
dec
(bad)
jle
xlat
sbb
mov
aad
add
pop
retf
pop
inc
push
or
push
pop
adc
in
xor
outs
adc
(bad)
lods
push
add
pop
mov
cdq
push
adc
loop
int
(bad)
sub
add
es
outs
mov
mov
and
jne
outs
adc
add
sahf
sub
xchg
xchg
imul
lahf
push
scas
ret
and
in
xchg
pop
fadd
add
adc
jl
adc
enter
ret
call
pop
leave
xor
sahf
xor
mov
xor
push
(bad)
mov
or
test
fild
adc
cmp
sahf
adc
push
push
sbb
or
fcomp
xchg
adc
inc
push
ret
in
jmp
test
xchg
fwait
and
popa
mov
push
xchg
push
(bad)
test
les
push
and
or
xor
pop
out
sar
push
cli
clc
sbb
loopne
sub
les
add
sub
add
pop
adc
dec
adc
xchg
sub
loope
and
dec
mov
enter
dec
sbb
cmps
mov
sbb
adc
mov
sub
cmp
xor
enter
and
and
dec
sbb
inc
pop
push
adc
push
cmps
xor
gs
iret
pop
or
jno
ins
fnstenv
add
push
ficom
sar
cmp
inc
add
cmp
and
push
dec
arpl
gs
pusha
mov
inc
fldcw
mov
dec
sub
fchs
inc
dec
out
sub
cmp
jbe
xor
cmp
xor
pop
adc
push
test
cmp
jecxz
jl
rcr
pop
pop
push
or
push
add
outs
jb
jmp
std
mov
push
sar
inc
std
setge
and
(bad)
or
xor
mov
xor
push
push
movs
cli
daa
je
or
push
leave
and
sbb
fld
lock
push
mov
fistp
jns
lahf
xor
inc
sub
(bad)
js
inc
mov
imul
or
int
mov
ffree
movs
fild
jge
ror
add
mov
push
sub
jns
fild
scas
xchg
pop
test
push
add
mov
dec
and
push
int3
mov
repz
jne
fist
fdiv
pop
sbb
(bad)
loopne
sar
adc
add
cwde
in
mov
(bad)
sub
inc
xor
inc
or
test
push
cmps
jae
js
add
xchg
jo
push
test
or
push
dec
push
or
js
int3
add
das
mov
cdq
js
int
sub
loopne
add
ret
jmp
inc
dec
cmp
and
test
cli
and
sbb
fmul
add
js
js
adc
inc
inc
pop
enter
mov
cmp
and
jge
and
and
push
mov
es
ss
push
inc
popf
push
inc
cmp
stos
jmp
mov
sbb
call
adc
adc
shl
or
push
test
sar
sub
in
inc
cmp
iret
mov
push
mov
lock
(bad)
fidiv
push
pusha
add
jae
or
imul
mov
sbb
aas
mov
pop
popa
je
push
fmul
add
xchg
xor
and
dec
and
sbb
and
jp
pop
mov
inc
sub
ja
or
adc
dec
xchg
cmp
loopne
mov
jmp
or
ins
in
mov
xchg
pop
addr16
dec
dec
fwait
and
xchg
daa
(bad)
add
pop
test
lods
cmp
test
mov
call
xor
xchg
test
pop
lods
shl
(bad)
push
cmp
sbb
cmp
push
sbb
cld
add
inc
sub
add
xchg
sbb
dec
in
nop
stos
retf
inc
icebp
cmps
rcl
outs
push
loopne
mov
or
hlt
aaa
dec
rol
(bad)
fs
test
adc
cmps
and
hlt
mov
add
loop
pop
xor
dec
jne
cmp
dec
or
add
daa
pop
push
inc
inc
mov
sar
add
popf
scas
mov
dec
loopne
fld
shl
out
jo
nop
jne
push
mov
add
inc
fistp
clc
ds
jno
mov
inc
xor
cli
(bad)
aam
sahf
call
test
addr16
inc
add
in
and
out
push
jmp
loop
mov
add
pop
or
lea
mov
or
dec
mov
por
and
nop
out
fisttp
movs
mov
mov
mov
push
xchg
inc
sahf
test
mov
aas
sbb
mov
cld
or
dec
aaa
push
jecxz
xchg
mov
sbb
xor
push
int
or
clc
jno
loope
sbb
add
(bad)
aam
pop
and
add
outs
loopne
mov
ror
cmp
push
and
mov
jne
mov
jge
adc
pop
js
and
loopne
scas
dec
rcl
adc
lods
es
or
or
inc
ror
inc
in
jg
sbb
inc
popf
mov
push
adc
mov
arpl
push
jnp
les
mov
out
arpl
movs
gs
jno
pop
and
sub
out
mov
sti
ret
nop
scas
push
ror
add
add
rol
add
add
add
sbb
adc
dec
mov
jns
out
iret
shr
lea
xchg
pusha
inc
call
xchg
pop
or
ret
hlt
je
xor
test
mov
xchg
inc
(bad)
rol
cmp
sbb
out
daa
add
and
jmp
int3
popa
pop
jl
xor
lds
dec
or
sub
sti
fwait
cmp
ret
imul
or
add
lock
adc
pop
add
inc
add
in
xor
clc
(bad)
lahf
mov
lods
xor
pop
pop
daa
in
mov
xor
inc
sbb
inc
inc
mov
dec
inc
rcl
push
or
test
jmp
aad
pop
cld
rcr
xor
and
data16
lea
or
(bad)
mov
or
and
inc
inc
imul
xlat
call
daa
pop
xchg
shl
fistp
push
pop
mov
dec
or
xchg
sti
in
hlt
xor
inc
xchg
fistp
mov
mov
pop
and
ret
adc
xchg
sbb
lahf
inc
es
(bad)
pop
dec
mov
loope
adc
(bad)
mov
jo
cmp
and
bndldx
loop
xor
loope
cld
stos
ds
push
push
mov
push
ror
xchg
or
stos
pusha
push
sub
xchg
add
nop
xlat
xlat
fdiv
add
push
fwait
sbb
cmc
sub
mov
xchg
inc
adc
frstor
lods
(bad)
xor
ror
or
scas
and
rol
mov
lea
cmps
xchg
sbb
dec
test
shl
ror
lds
addr16
xor
movs
js
push
clc
add
jo
test
fdiv
pop
pop
mul
adc
hlt
popf
sar
ja
adc
pop
add
xchg
jmp
sub
cli
add
or
add
xchg
xchg
loope
dec
add
lods
test
xor
inc
fwait
and
add
or
test
mov
popf
pop
shl
adc
mov
pop
inc
mov
lds
mov
and
shl
loopne
adc
ja
jo
jno
test
inc
push
fild
popa
aaa
fdiv
mov
loopne
inc
outs
mov
sbb
cmp
out
in
ins
lock
bswap
sub
push
sbb
cmp
aad
cmovae
outs
std
ret
es
cmp
in
nop
in
loop
daa
hlt
xchg
je
rol
call
jmp
pop
push
dec
std
and
xor
xchg
fadd
xor
js
add
out
mov
aad
lock
adc
fist
jo
mov
fucomip
int
std
jmp
pop
out
dec
jne
or
adc
add
lea
mov
loopne
or
cmp
pop
push
aam
jg
mov
push
hlt
mov
sar
sbb
sub
je
or
xchg
ror
imul
(bad)
out
test
fidiv
je
inc
test
in
mov
pop
cmps
loope
mov
je
cmp
in
retf
inc
enter
adc
in
or
inc
clc
push
shl
pop
test
xchg
es
xor
add
inc
fs
push
mov
cmp
ds
mov
rcr
int3
inc
dec
jne
(bad)
xchg
test
push
fisub
push
pop
shl
push
push
lea
movs
movs
stos
jmp
mov
and
sbb
xchg
rcl
jb
mov
xchg
add
sbb
mov
aas
jge
je
outs
outs
loopne
mov
pop
fnstcw
push
jo
push
pop
ret
out
mov
mov
push
ror
xor
repnz
ret
dec
out
cmp
out
sub
cmp
rcr
sbb
xor
push
int3
xor
jmp
push
dec
dec
mov
mov
sbb
adc
fcmovb
(bad)
es
sub
mov
mov
test
loop
push
push
and
mov
inc
push
fs
cld
cld
dec
push
jb
inc
xor
cld
cld
xchg
xchg
es
cld
jmp
data16
inc
pop
shl
add
or
stos
movs
fimul
mov
mov
mov
(bad)
lock
cmp
jge
sbb
push
mov
xor
jmp
das
es
imul
add
or
das
xchg
shr
test
cld
sbb
aaa
das
or
adc
ss
and
dec
inc
pushf
push
mov
push
sbb
xchg
push
sub
pusha
loopne
mov
xor
das
xor
add
hlt
int3
inc
cld
into
mov
sbb
in
test
loopne
mov
popa
xor
adc
dec
sbb
and
pop
jl
adc
popa
imul
sbb
cmp
and
ins
and
pop
dec
and
dec
push
call
fadd
mov
mov
adc
add
leave
(bad)
pusha
sub
call
sar
xchg
test
leave
in
inc
push
(bad)
dec
xor
ror
leave
xor
pop
mov
ret
shl
and
sbb
pop
inc
pop
pop
lds
inc
call
mov
inc
inc
fisub
ret
mov
(bad)
sub
add
mov
pop
dec
dec
and
and
loopne
add
inc
cwde
scas
rcl
add
xchg
or
push
push
mov
in
ror
xchg
imul
push
std
xlat
push
in
call
je
mov
add
sbb
add
push
inc
jo
mov
add
(bad)
ror
mov
add
shl
cmp
or
pop
pop
ret
outs
mov
dec
adc
cmp
movsx
aas
push
mov
add
icebp
pop
jne
xor
movd
pop
sub
leave
ret
nop
sbb
ret
out
outs
push
scas
mov
inc
pusha
mov
add
dec
adc
ins
outs
test
out
jl
or
jle
add
push
inc
cmp
outs
adc
push
pop
cmps
mov
xlat
jg
int3
inc
add
mov
adc
retf
sub
xchg
add
imul
jmp
push
add
dec
adc
stos
xor
mov
int
inc
xchg
rcl
mov
arpl
in
int
daa
mov
dec
rcl
xchg
and
(bad)
sbb
cwde
in
pop
ins
loopne
dec
xlat
add
call
cdq
and
mov
pop
add
add
inc
arpl
ins
pop
pusha
sar
cmp
cli
jg
jns
pop
ficom
addr16
lock
mov
inc
in
jmp
push
push
cmp
ret
add
loopne
add
mov
pusha
xlat
push
and
cmp
sbb
rcr
les
jbe
test
bound
xor
gs
rol
mov
sub
rcl
mov
div
jns
push
jp
jmp
dec
cmp
lea
and
adc
mov
rcl
cmp
and
out
jno
sbb
mov
dec
mov
add
dec
lock
idiv
mov
inc
sbb
mov
xor
xchg
add
ffree
or
and
scas
lods
pop
mov
outs
not
outs
sbb
add
test
fiadd
(bad)
fistp
and
outs
jne
jae
and
test
mov
inc
pop
in
push
cmp
call
cmp
sbb
inc
cmp
int3
jne
cmp
clc
xor
dec
jnp
push
cmp
pop
lods
push
xchg
push
push
cmps
mov
cli
retf
push
xor
cmp
add
sti
add
scas
add
cmc
adc
es
lods
dec
or
inc
aaa
clc
xor
jae
cmps
mov
mov
add
jne
cmps
call
js
and
pop
sbb
cmp
add
sub
adc
cs
test
dec
push
mov
add
es
jl
and
mov
mov
dec
pop
pop
inc
pop
pop
xchg
push
inc
dec
xor
nop
sbb
or
shr
add
stc
test
dec
or
push
inc
shl
ret
and
das
sbb
or
add
mov
ja
sub
cmps
int3
cld
jmp
in
cdq
push
add
mov
es
(bad)
(bad)
call
inc
pop
xor
mov
and
ss
jbe
or
int
out
dec
inc
mov
add
sub
popa
pop
sar
or
xchg
or
add
inc
adc
sbb
push
mov
or
push
test
jmp
in
add
in
hlt
mov
cmp
ds
(bad)
std
repz
adc
mov
in
call
push
inc
setg
jmp
mov
add
mov
add
cmp
setl
or
and
push
inc
scas
call
cmp
imul
daa
cmc
add
icebp
push
mov
jnp
jbe
das
sub
or
jb
or
add
push
xchg
or
dec
jae
stos
xchg
push
add
outs
dec
sahf
movs
and
dec
inc
arpl
js
push
xor
and
and
add
add
add
cmc
repnz
push
add
ret
jmp
movs
aad
add
or
iret
sub
out
pushf
add
push
sbb
pop
sti
outs
aas
xor
inc
inc
push
lock
jmp
sbb
push
or
inc
imul
pop
sbb
xor
adc
push
or
sub
sub
cmp
sbb
add
jne
or
popa
inc
test
sub
sahf
push
icebp
scas
xchg
add
xchg
pop
sti
loop
push
jo
clc
popf
out
xchg
sahf
stos
mov
pusha
add
push
inc
and
inc
or
xor
pusha
pop
rol
add
mov
inc
jmp
sbb
or
xchg
clc
sub
jb
test
and
add
mov
add
xor
sbb
cmp
inc
and
pop
mov
cmp
pop
add
in
je
std
lock
jae
call
test
aam
inc
test
stos
mov
fcom
hlt
inc
or
push
and
and
pop
jno
dec
hlt
inc
dec
arpl
cmp
je
inc
sub
add
sub
jge
popf
or
mov
xor
mov
cmp
(bad)
cli
dec
jne
sub
or
fyl2xp1
sub
inc
rcl
outs
nop
jmp
ins
fild
nop
mov
rol
xor
(bad)
test
ret
sbb
add
xchg
lea
gs
lea
jl
into
jne
mov
inc
pop
jmp
mov
adc
in
adc
jo
cmp
jnp
ss
arpl
and
pop
aas
jmp
pop
adc
add
mov
add
cmc
adc
dec
jo
mov
cld
cmc
sbb
sbb
dec
cld
or
jmp
xor
add
or
retf
out
cwde
test
popa
push
in
mov
push
stc
xchg
mov
test
cmp
xchg
add
cmp
les
push
dec
mov
dec
dec
test
fimul
loopne
sbb
jmp
pop
jmp
lock
push
int
and
enter
pop
add
(bad)
sub
push
stc
sbb
mov
in
xor
cmp
push
popa
dec
mov
mov
adc
sub
nop
adc
retf
xchg
mov
sbb
dec
mov
or
pop
pop
dec
or
loope
fstp
pop
imul
mov
cmp
mov
ret
and
in
nop
push
mov
mov
or
pop
xchg
or
ret
dec
sub
add
inc
xor
xchg
mov
mul
(bad)
bound
jne
fsub
and
add
cs
sbb
cmp
jl
bound
push
xor
mov
je
call
pushf
adc
jle
cmp
je
fiadd
or
mov
push
jo
aaa
jmp
or
jmp
pop
sbb
mov
xor
test
add
or
sub
jmp
xchg
nop
nop
pop
cmp
ficomp
jno
inc
arpl
test
loopne
add
inc
lock
mov
xor
lock
popa
shl
(bad)
fldenv
mov
icebp
repz
cmp
add
cld
(bad)
call
sbb
std
xchg
jne
pop
int
sbb
mov
pop
sub
sub
sbb
inc
xor
jno
mov
nop
add
and
cli
inc
sbb
pop
sbb
mov
js
mov
dec
jmp
or
dec
jnp
int3
popa
or
add
and
outs
lods
lock
and
cmp
inc
push
daa
cmp
push
mov
cmp
mov
dec
sbb
in
mov
hlt
arpl
daa
or
mov
pop
mov
sub
shl
xchg
fld
cwde
lea
daa
das
xor
sbb
and
mov
or
lea
xor
mov
pop
lock
pop
add
pop
pop
add
sub
enter
adc
jle
iret
adc
or
and
dec
inc
dec
dec
dec
inc
dec
dec
outs
ret
lds
aam
sbb
shr
lods
shl
mov
cmp
jne
mov
xor
inc
or
adc
imul
sbb
or
sub
xchg
and
mov
outs
pop
mov
or
sbb
inc
push
add
ja
jg
sub
mov
adc
outs
cmp
and
outs
and
or
or
loop
mov
inc
push
ja
sub
cmps
or
jns
sbb
sbb
push
xchg
dec
xchg
sub
and
push
inc
jle
dec
fild
pop
(bad)
jne
sbb
dec
aas
sbb
push
cli
and
rcl
pop
cmp
or
fsubr
or
adc
mov
aam
cmps
inc
adc
scas
push
sbb
fild
and
in
bound
pop
lock
jle
call
sub
xor
cmp
xchg
inc
mov
call
iret
add
xchg
inc
das
repnz
inc
popa
cmp
fidiv
sbb
adc
inc
(bad)
out
gs
aam
test
retf
push
inc
(bad)
or
cmp
jp
and
fs
ss
xchg
lods
jae
sbb
push
push
outs
ins
sub
js
mov
adc
add
sub
mov
ret
sub
inc
xor
or
pop
(bad)
imul
inc
ins
adc
daa
inc
cmp
stos
push
dec
and
push
adc
gs
adc
or
sbb
push
fiadd
and
and
xchg
cmps
outs
fsub
inc
les
or
sbb
mov
icebp
push
ret
dec
push
xlat
dec
inc
push
fsub
int3
or
add
add
lods
or
dec
adc
shr
adc
mov
aad
(bad)
inc
movs
mov
push
add
inc
mov
addr16
outs
idiv
pusha
das
js
jns
pop
jno
push
fadd
xor
stc
sub
mov
mov
repz
or
or
jo
sbb
das
and
adc
xchg
adc
mov
xchg
sbb
mov
mov
push
mov
pop
add
ret
pop
sub
daa
or
cmc
out
jl
ret
mov
jo
inc
sti
int
dec
add
and
add
xor
or
push
push
ds
out
xor
and
add
and
add
nop
out
or
jl
inc
sbb
and
push
sbb
or
jno
cli
mov
mov
pop
fxch
inc
out
cwde
sub
inc
cmp
cmova
lea
sbb
add
daa
mov
icebp
push
xchg
mov
sub
pop
or
stos
push
cmp
jmp
pop
xchg
cli
outs
mov
clc
adc
sbb
push
jg
cmp
and
jnp
inc
call
add
es
adc
mov
and
pop
retf
or
push
or
fsub
aas
jnp
or
mov
mov
sbb
repz
xor
add
mov
mov
xchg
fistp
aaa
xor
adc
pop
je
jns
sub
and
dec
mov
enter
push
jmp
push
ins
cld
bound
or
pop
jb
inc
out
jne
sar
add
pop
mov
jp
dec
icebp
add
and
out
sbb
xor
mov
add
or
mov
mov
sub
aaa
or
jmp
adc
ret
pushf
sbb
add
or
pop
xor
xor
mov
shl
loopne
xor
or
stc
adc
clc
mov
in
add
add
jp
or
aaa
ret
add
xlat
mov
addr16
jle
js
popf
add
sbb
data16
sbb
lea
addr16
mov
mov
fld
add
lea
adc
sub
test
pusha
shr
and
jmp
fsubr
lods
mov
div
and
push
sbb
push
add
or
ret
xchg
mov
push
rol
pop
pop
nop
xor
popa
xchg
rcl
mov
call
cmp
jne
sahf
daa
adc
pop
sub
or
sbb
sbb
ja
dec
and
test
cmp
jne
je
cmps
push
jne
pusha
inc
sti
jp
repz
fbld
cmp
pop
shrd
rcl
push
inc
loopne
lods
mov
jg
add
sbb
dec
or
inc
repz
or
pop
add
aad
push
jmp
movs
lahf
cmp
cmp
xor
lods
repz
jno
ror
and
cwde
inc
shl
mov
arpl
popf
mov
(bad)
mov
add
adc
cmps
add
cmp
outs
xchg
cli
std
inc
addr16
addr16
inc
jno
(bad)
clc
dec
pop
sbb
push
mov
rcr
ret
pusha
xchg
pop
scas
xor
sbb
push
jo
pop
pop
aad
xor
and
call
pop
jne
int
jo
push
inc
add
jne
das
push
add
jb
jne
loope
or
cmp
jge
jmp
sbb
es
in
sub
mov
daa
dec
inc
and
ins
shl
shl
fild
mov
xor
mov
adc
(bad)
addr16
arpl
jae
xor
fs
inc
xchg
or
fiadd
add
cs
cli
mov
daa
movs
push
enter
adc
dec
rol
je
inc
xchg
mov
pop
cmc
pop
add
add
imul
dec
sbb
scas
ret
ins
out
cmp
inc
fdiv
mov
inc
inc
push
inc
push
dec
js
imul
adc
hlt
mov
int3
retf
jle
jmp
mov
jg
adc
add
adc
ret
xchg
pop
pop
pop
adc
push
cmp
xor
sub
sub
or
pop
or
inc
sbb
sub
inc
mov
fsubr
rol
mov
bswap
lock
ror
mov
or
or
add
inc
or
ja
jg
rcr
cld
cmp
je
push
add
and
or
mov
sbb
dec
or
inc
(bad)
ror
jmp
or
xchg
mov
inc
sbb
imul
ss
xor
or
and
cmp
lock
test
add
cmp
jg
rcr
mov
xor
pop
jmp
add
adc
sbb
push
or
xchg
cmp
out
ins
mov
add
mov
ss
(bad)
or
adc
xchg
ja
inc
adc
(bad)
fild
in
push
inc
adc
add
mov
dec
push
idiv
jne
mov
sbb
test
xchg
loope
cdq
jp
call
add
ror
scas
jno
cmp
pusha
jmp
js
pushf
test
add
add
sub
push
jmp
push
pop
cmp
add
pop
sub
pop
loope
outs
xor
sbb
call
pop
aas
lea
and
inc
and
pop
pop
adc
outs
(bad)
pusha
mov
ins
sub
push
adc
pop
pop
into
sbb
add
retf
pusha
(bad)
cli
inc
cmp
mov
(bad)
adc
inc
fld
mov
adc
cmps
mov
xchg
sbb
push
push
sbb
scas
mov
js
jne
dec
adc
sbb
or
inc
aam
arpl
push
xchg
push
mov
mov
and
or
das
sbb
sub
xor
jg
test
inc
loope
xor
xor
ret
pop
push
in
js
add
jnp
pusha
or
or
push
sub
sub
(bad)
adc
add
cmps
pop
inc
push
or
push
inc
inc
pop
adc
xchg
jge
mov
pop
xchg
in
inc
xor
fsub
sbb
inc
jnp
pop
push
push
mov
ins
inc
dec
ja
jmp
xchg
cmp
js
out
inc
stos
or
sar
jne
mov
ss
dec
mov
dec
jne
pop
inc
add
mov
sbb
rol
aaa
add
push
hlt
rol
adc
or
or
and
retf
sub
jmp
sti
adc
inc
pop
movs
jg
jle
ret
into
icebp
les
xchg
or
sti
sar
mov
fbld
adc
mov
mov
lea
xchg
scas
add
pop
arpl
push
push
pop
adc
or
push
sub
push
movs
mov
jecxz
cmp
add
sub
jno
(bad)
(bad)
fisttp
scas
jecxz
mov
loopne
mov
cdq
jne
add
mov
add
and
xchg
xor
fcmovnbe
push
cmp
jno
add
sar
dec
outs
(bad)
xchg
inc
daa
in
inc
aam
(bad)
in
ror
pop
cmp
adc
pop
cmp
in
fdivrp
or
or
xchg
pop
xor
lods
add
push
sahf
sub
hlt
or
icebp
sub
inc
mov
sub
sub
inc
loop
in
cmp
je
mov
ins
inc
test
loope
shl
push
inc
push
mov
and
les
retf
sub
add
retf
ins
add
inc
test
push
push
and
adc
adc
adc
leave
mov
and
mov
scas
jge
inc
push
push
push
icebp
aam
sub
sbb
mov
add
pop
mov
mov
int3
xor
xor
cmc
or
sub
sub
test
or
xchg
mov
pop
cmp
pop
retf
jg
imul
inc
aam
mov
loopne
or
into
call
jnp
adc
jno
scas
call
mov
test
(bad)
jl
push
adc
in
js
xor
add
xchg
adc
(bad)
shl
jmp
sub
add
mov
pop
js
fisub
mov
lods
in
xchg
sti
dec
or
jl
lods
sub
test
fsubr
adc
cmps
sbb
xchg
fadd
add
or
jl
das
sbb
imul
ror
pop
cmp
idiv
xor
push
mov
es
out
adc
scas
inc
adc
push
mov
xchg
mov
shl
out
push
test
and
jne
xchg
or
adc
fsub
mov
ret
cmp
adc
daa
add
in
push
or
repz
fistp
aaa
mov
sbb
fiadd
add
xor
fsub
xor
adc
xor
or
cmp
loopne
add
mov
mov
jecxz
push
push
call
mov
sub
xchg
or
adc
and
or
sbb
(bad)
and
in
and
(bad)
call
and
ins
mov
fdiv
pop
fadd
push
(bad)
pop
fisttp
pusha
inc
sbb
mov
clc
cmp
rol
dec
cmp
inc
xor
cmp
jne
imul
sbb
inc
dec
test
push
dec
adc
pop
dec
pushf
test
dec
hlt
data16
and
cmp
cmp
es
les
mov
adc
cmp
popa
inc
out
mov
jmp
out
or
mov
push
imul
mov
xchg
sti
int
(bad)
out
popa
and
(bad)
and
lock
pop
out
stc
mov
nop
push
nop
xchg
push
movs
shl
ja
xchg
rol
iret
inc
pop
inc
xlat
adc
add
add
pop
xchg
js
imul
test
pusha
in
jmp
popa
jmp
or
jmp
sbb
pop
mov
or
outs
out
outs
jbe
pop
pop
inc
inc
loop
inc
xchg
sysenter
in
loopne
or
pop
cmp
xchg
call
test
fcom
inc
ins
and
out
push
rcl
cmps
sub
jge
jl
sbb
inc
cmps
shl
cmp
or
jne
cmp
imul
lods
test
dec
jge
inc
or
and
ret
ja
adc
push
xor
inc
sbb
adc
pop
or
je
gs
dec
add
adc
push
add
jle
adc
jmp
push
mov
xor
sbb
test
aas
or
ins
add
stc
add
push
adc
push
test
mov
lahf
sub
pop
add
popa
jp
sahf
(bad)
push
add
adc
das
push
add
movs
data16
sub
dec
sub
or
pop
jmp
sub
add
in
retf
popa
lods
adc
in
mov
adc
pop
rol
stc
or
ja
mov
pop
pusha
jne
xchg
rcl
add
repz
jg
inc
pop
mov
arpl
mov
or
xchg
xor
mov
mov
mov
mov
mov
inc
dec
fisttp
adc
mov
loope
fimul
add
pop
lock
inc
rol
mov
mov
cmps
test
and
lock
dec
(bad)
or
and
sub
and
je
jnp
or
inc
or
sub
add
add
xchg
out
push
lea
ins
xlat
popf
mov
lock
fiadd
xor
icebp
mov
pop
repz
mov
mov
aaa
fsub
pushf
mov
hlt
jge
and
fmul
je
push
push
sbb
sub
mov
mov
add
lock
retf
mov
add
inc
loopne
push
inc
into
xor
arpl
jo
or
les
push
jne
stos
lods
outs
push
mov
inc
xchg
add
and
test
or
add
ret
cli
add
ror
mov
mov
sub
in
xlat
rol
push
inc
mov
shl
ror
dec
sub
jle
or
inc
js
idiv
adc
sub
js
and
rol
adc
add
mov
cmc
call
pop
in
dec
(bad)
lds
jecxz
add
and
or
sbb
dec
or
sbb
jnp
je
aas
mov
inc
mov
mov
hlt
xor
or
dec
and
ror
mov
imul
mov
inc
mov
bound
out
mov
sub
lock
adc
adc
jecxz
and
movs
test
mov
test
or
pop
sti
and
pop
xchg
addr16
adc
je
lea
mov
dec
add
and
sbb
syscall
mov
mov
test
push
jmp
or
daa
ret
xchg
arpl
repz
or
pop
retf
scas
adc
movs
ja
int3
jne
and
mov
dec
inc
test
imul
sub
push
or
sub
mov
addr16
add
sub
pop
mov
cmp
sub
add
daa
out
sar
or
in
jmp
mov
jns
jo
xor
sbb
cli
cmp
add
dec
add
jmp
lea
jb
push
push
and
test
push
adc
xchg
xor
mov
mov
add
(bad)
jo
push
test
ja
add
push
xor
movs
adc
ret
and
mov
or
adc
jecxz
jge
or
sbb
iret
pop
xor
xchg
enter
sbb
push
jl
rol
sbb
cmp
jge
adc
sub
and
in
into
adc
shl
jmp
js
pusha
ins
or
push
sbb
push
xor
lods
mov
inc
pop
dec
or
add
shr
push
fsubp
(bad)
fsubr
add
sub
pop
fisub
ret
scas
mov
push
or
adc
shl
or
ins
jo
push
mov
or
pop
scas
jecxz
push
add
shl
test
data16
outs
dec
sub
xchg
jae
test
sub
push
pop
(bad)
push
aam
sbb
lods
xchg
(bad)
leave
ror
js
push
(bad)
rcl
shl
xchg
xchg
sahf
pop
mov
das
mov
gs
xchg
adc
jno
or
push
pop
pop
pop
sti
sub
js
xchg
push
dec
ror
arpl
icebp
pop
dec
xor
inc
cmp
je
test
aaa
lds
push
popa
add
xchg
rcl
sbb
or
inc
add
fbld
mov
push
mov
cdq
stc
add
mov
add
mov
add
dec
and
rol
sub
xchg
jp
ja
sbb
cwde
jp
mov
test
jecxz
mov
xor
jae
outs
xor
push
gs
jl
pop
inc
je
or
bound
xchg
adc
and
add
pop
or
mov
xor
push
mov
pusha
sub
add
mov
or
inc
aad
sub
es
mov
or
pop
test
mov
cmp
inc
inc
pop
call
lock
xchg
add
mov
fnstsw
js
sbb
sbb
dec
inc
add
xchg
mov
bound
cdq
fs
xor
push
pop
push
out
xor
imul
js
clc
cs
jb
jae
add
xor
jne
inc
mov
ret
or
add
pusha
dec
lods
int
retf
push
inc
add
cli
add
and
xor
xchg
movs
jp
inc
pop
push
aas
pop
or
div
std
cmps
sbb
push
push
sub
ret
js
rcl
mov
call
mov
cwde
mov
sbb
add
mov
push
inc
jnp
ret
mov
fcomp
mov
(bad)
sar
xchg
mov
sub
mov
cmovo
push
xlat
inc
dec
sub
push
sti
shr
push
fsubr
xor
sbb
xor
pop
movs
or
or
push
aaa
mov
(bad)
(bad)
xor
leave
jecxz
test
push
xchg
push
jb
or
fdiv
adc
push
jb
pop
adc
add
cmps
or
adc
ja
inc
das
or
inc
imul
ret
jns
xor
icebp
aam
inc
jmp
add
adc
xchg
inc
cs
popa
mov
outs
jge
sub
fistp
ins
sbb
sbb
pop
aaa
in
or
inc
js
cld
inc
inc
push
xor
sbb
push
sub
out
test
inc
jnp
xlat
mov
cli
sbb
or
fcmovb
add
or
push
inc
(bad)
and
sbb
jb
pop
xchg
pop
adc
aad
push
leave
push
jb
and
add
add
add
and
or
and
es
add
pop
add
push
jo
daa
mov
mov
add
or
add
push
cmp
pop
mov
dec
jnp
sub
push
add
stos
push
xchg
aaa
push
xor
and
aaa
mov
das
xor
(bad)
js
inc
add
jnp
pop
int3
xor
mov
mov
das
mov
ins
ja
inc
pusha
jecxz
es
scas
mov
aas
fwait
sbb
push
pushf
dec
inc
add
and
scas
or
lock
outs
shl
jbe
outs
fisttp
adc
clc
data16
fsub
dec
mov
add
iret
mov
adc
adc
mov
pop
jle
icebp
jnp
jns
xchg
rcl
inc
mov
sub
sbb
jg
sub
int3
shl
dec
or
add
mov
xor
adc
mov
out
js
ins
sbb
pop
pop
sbb
push
cmp
cmps
inc
jnp
push
sbb
push
pop
fsubr
pop
add
imul
popa
xchg
cmps
or
push
cmp
dec
jno
pop
xchg
pop
sbb
add
adc
sbb
(bad)
adc
ss
repnz
mov
add
arpl
sar
loope
fcomp
je
cmp
mov
adc
inc
and
mov
and
sbb
dec
in
adc
push
shl
sbb
dec
adc
adc
inc
adc
test
xchg
popa
push
adc
pop
scas
movs
mov
scas
(bad)
loop
aam
sbb
(bad)
sbb
aad
sbb
xor
inc
leave
sbb
dec
jnp
sbb
inc
(bad)
aaa
adc
jne
push
jo
imul
call
sbb
pop
sbb
call
fs
xchg
or
popf
and
add
sbb
mov
in
in
es
dec
mov
sub
sub
xchg
cs
daa
push
inc
das
xor
sbb
div
pop
jo
xor
and
xor
ss
aaa
in
sbb
cmp
adc
cmp
and
leave
add
rcr
sbb
aas
and
add
cmps
inc
adc
inc
pop
pop
cld
je
(bad)
adc
retf
adc
jne
inc
adc
mov
or
xor
add
loopne
mov
add
push
loopne
in
das
sbb
aam
and
add
addr16
nop
out
or
add
push
pop
ds
imul
pop
loopne
mov
sti
icebp
in
call
sbb
gs
xor
inc
pop
mov
mov
cmp
sub
sbb
pop
sub
pop
rol
fcomp
cld
mov
std
mov
out
inc
push
inc
or
push
mov
aam
aam
pusha
xchg
or
aam
leave
pop
add
loopne
or
adc
inc
pop
pop
dec
js
pop
pushf
mov
inc
cld
push
add
mov
add
pop
pop
or
pop
and
je
or
xchg
add
xor
pusha
mov
adc
fimul
dec
shl
xor
jmp
add
sbb
inc
sub
out
mov
adc
js
sar
jecxz
adc
inc
(bad)
idiv
xor
jg
fimul
ret
add
mov
stos
xchg
push
inc
jbe
bound
adc
cld
cmp
pusha
fdivr
fucom
js
add
fwait
cmp
jge
je
lock
jo
adc
idiv
inc
mov
push
add
dec
xor
jmp
out
sar
sbb
fcom
loopne
add
pop
jne
das
add
xor
mov
popa
lods
sbb
bound
sbb
mov
cmp
je
xor
sbb
cmp
cwde
test
inc
sbb
sbb
adc
dec
push
test
fld
dec
add
(bad)
pop
sub
ret
rol
sub
cmp
mov
mov
cdq
dec
or
(bad)
out
out
cwde
sbb
js
push
sti
mov
xor
xor
or
xor
and
(bad)
xchg
add
in
outs
cmp
test
jne
iret
push
in
push
mov
push
pop
fbld
add
mov
mov
mov
pcmpeqd
add
and
add
fisubr
xchg
cmp
or
push
fwait
mov
jp
pushf
mov
ret
xor
or
jnp
mov
leave
jmp
pop
mov
jb
rol
adc
or
je
shl
js
pop
cmps
cmp
cdq
les
clts
shl
jnp
icebp
mov
sub
enter
cs
pushf
pop
enter
ret
movs
mov
or
aaa
pop
mov
sub
push
xor
and
mov
ja
test
in
test
inc
dec
aas
jne
mov
sub
sub
push
aaa
or
add
push
jne
xor
add
sbb
not
and
pop
bound
mov
and
pop
inc
jne
or
ja
inc
inc
and
fadd
sub
cmp
mov
mov
aam
and
or
out
mov
xor
sbb
mov
pop
jmp
inc
inc
add
sub
gs
push
push
adc
push
xor
add
cmps
lahf
jle
or
add
mov
add
ins
ins
out
inc
lods
and
outs
popa
stos
pop
pop
jne
int
inc
xor
pop
shr
xor
mov
js
push
cld
jbe
addr16
lock
in
arpl
pop
sbb
mov
and
sub
sub
xor
or
clc
xchg
hlt
cwde
mov
cld
mov
add
add
push
mov
xor
mov
lods
or
mov
dec
sbb
or
cmp
add
jp
dec
adc
or
cmp
pop
ret
cmps
sbb
inc
or
sub
and
mov
out
add
mov
pop
cmp
push
fwait
enter
sub
add
add
jns
std
hlt
mov
jmp
iret
sbb
dec
loop
neg
hlt
das
mov
add
push
jno
push
dec
sbb
push
xchg
js
pop
sbb
out
push
mov
add
mov
push
mov
in
mov
or
cld
(bad)
sbb
push
in
xchg
xchg
push
jle
mov
jmp
mov
add
adc
push
add
movs
inc
inc
loopne
cmps
sahf
sub
dec
scas
dec
add
mov
je
xlat
fimul
gs
cmp
xchg
ret
adc
push
adc
adc
inc
xor
inc
lods
outs
add
push
hlt
xlat
sbb
cmp
imul
arpl
cld
adc
rcr
das
test
adc
adc
into
ret
push
sahf
das
mov
adc
in
xchg
cmp
in
push
dec
fist
pop
inc
data16
cld
or
jno
add
js
mov
dec
retf
dec
dec
cld
jmp
sbb
xor
xchg
xchg
push
aaa
push
and
enter
sbb
push
es
jo
pop
cmp
ror
mov
mov
add
jg
xchg
daa
sbb
daa
fnstcw
mov
adc
xor
je
add
cmp
push
add
(bad)
pop
cmps
sbb
add
iret
inc
iret
mov
xor
push
in
xchg
mov
inc
movs
test
(bad)
call
mov
in
je
mov
mov
or
push
mov
inc
test
add
test
adc
sbb
adc
cmp
mov
mov
inc
and
mov
aas
push
neg
jne
fidiv
popf
cmps
mov
adc
add
dec
add
mov
ins
enter
push
pop
lahf
pop
cdq
xor
mov
data16
adc
stos
or
sbb
call
popa
out
pop
inc
lock
retf
jne
adc
cmp
mov
fist
sub
mov
jnp
jb
ret
pop
mov
nop
icebp
pusha
fisttp
sbb
xor
clc
inc
sub
out
jmp
arpl
push
adc
xchg
in
or
push
div
jmp
xor
mov
in
shr
jge
xchg
sub
mov
fisub
lods
ret
call
adc
dec
inc
inc
push
pusha
inc
xchg
shl
out
xor
add
dec
movups
aad
pop
or
fs
stos
popf
sbb
and
punpcklbw
and
dec
inc
neg
xchg
add
sbb
jl
or
ret
push
add
push
enter
ret
das
sub
pushf
shl
push
ror
pushf
neg
inc
mov
jle
push
cld
out
shl
add
aas
mov
ss
ror
dec
outs
push
or
xchg
bound
std
nop
nop
adc
adc
pop
sub
cld
push
add
and
sti
pop
add
push
mov
add
add
test
add
and
pop
and
test
push
sti
add
adc
inc
bound
or
andps
fs
dec
or
inc
jmp
push
xor
movs
xchg
mov
adc
push
ins
sbb
adc
inc
cmp
les
jecxz
rcr
cli
xor
sub
push
lods
jle
dec
mov
jl
add
adc
es
sub
ror
or
scas
or
popa
in
jg
xchg
sbb
ja
rcl
pop
sbb
pop
pop
inc
test
xchg
cwde
cmp
fucomip
dec
jecxz
pop
sbb
or
inc
lock
sub
add
and
in
test
jge
dec
xchg
imul
push
call
mov
imul
cwde
pop
cwde
inc
fnclex
fldcw
lea
mov
push
daa
fnsave
pop
(bad)
push
pop
jp
mov
mov
sub
test
scas
dec
sbb
or
push
inc
add
stc
xchg
lods
outs
cmps
scas
pop
gs
inc
shl
outs
add
dec
dec
mov
xor
arpl
pop
add
inc
bound
je
push
gs
jns
jge
jo
mov
add
test
inc
ins
ins
out
mov
fcom
(bad)
push
outs
pop
or
and
xchg
rcr
jg
push
mov
shr
push
arpl
sub
adc
ins
push
sub
sub
into
mov
cmp
rcr
and
and
mov
js
enter
(bad)
jg
jmp
ins
addr16
push
popa
pop
inc
(bad)
pusha
movhlps
push
ins
adc
adc
xchg
and
jb
ins
add
or
mov
(bad)
mov
push
mov
(bad)
push
add
das
add
loopne
iret
in
popf
cld
in
fcom
clc
fdiv
jae
pushf
cmp
lock
in
cmp
iret
leave
enter
ror
repnz
mov
lods
mov
test
movs
mov
cmp
sbb
inc
push
fs
or
add
xor
sub
or
adc
mov
jo
jnp
rol
test
sub
cmp
inc
cmp
mov
dec
idiv
rcl
(bad)
addr16
push
or
popa
addr16
pushf
add
ja
xor
fs
sub
jbe
fist
dec
gs
jbe
or
adc
mov
ins
mov
push
popa
jb
je
and
jae
test
or
jns
push
imul
inc
cmp
adc
dec
adc
ret
(bad)
xchg
pop
es
xchg
imul
nop
inc
pop
or
xor
nop
adc
or
add
sub
test
js
pop
or
or
in
xor
pop
les
add
dec
add
cmp
add
xor
inc
test
shl
in
add
dec
jge
sbb
adc
dec
aam
pusha
out
jns
or
and
adc
call
push
add
or
jecxz
test
xor
popf
push
or
or
dec
loope
ja
mov
pop
dec
mov
add
sub
push
dec
lds
cmp
add
push
inc
popf
adc
push
and
cmp
ins
gs
nop
and
data16
test
jno
outs
movs
or
dec
or
loopne
push
mov
push
and
pop
or
jo
or
dec
add
pop
mov
cmp
ins
fld
jo
and
adc
dec
setns
js
mov
add
xor
mov
out
or
nop
sbb
cli
push
fiadd
add
xor
add
not
pop
push
jp
push
jp
or
mov
jns
jns
jns
push
rcl
xor
xchg
call
mov
xchg
idiv
fistp
push
int3
push
inc
mul
jp
or
call
enter
ds
inc
in
xchg
pushf
nop
jp
jp
es
push
push
push
call
adc
and
lock
ja
ds
enter
push
retf
add
jnp
jnp
push
pop
mov
pop
pop
push
leave
push
leave
dec
jl
adc
or
pop
cld
push
ja
lock
in
pop
outs
dec
dec
lds
adc
jo
cmp
push
das
push
xor
dec
push
push
cmp
test
mov
das
and
pushf
jo
adc
inc
shl
hlt
aaa
and
aad
jmp
or
xor
inc
push
cs
jmp
ret
imul
or
punpckhwd
xchg
pop
ja
add
ds
push
mov
aas
fcom
icebp
mov
(bad)
cwde
xchg
mov
inc
inc
xchg
fimul
fs
inc
les
and
stos
ret
cwde
push
movs
xchg
je
xchg
sar
out
push
aam
nop
inc
dec
push
adc
push
jl
jns
dec
push
loopne
add
pop
push
adc
fidivr
cmp
push
xor
and
je
inc
shr
cmc
nop
sub
pusha
mov
add
push
add
sub
cs
imul
pop
add
push
mov
add
add
bound
mov
test
sbb
or
pop
or
lods
cmp
int3
pop
or
jae
jns
loopne
andps
lock
mov
push
pop
nop
dec
pop
addr16
ror
pop
and
mov
jo
pop
mov
inc
cmps
test
and
adc
dec
add
inc
jmp
pop
xor
rol
or
cmps
adc
pop
clc
or
jl
clc
nop
fild
sbb
movs
cmp
inc
or
add
je
cmp
inc
adc
mov
jbe
add
sbb
add
mov
mov
adc
nop
xor
push
or
ret
add
cmp
and
sbb
push
dec
mov
loope
nop
mov
push
pop
lahf
adc
arpl
pop
(bad)
retf
add
iret
add
pop
in
pusha
movs
in
push
dec
gs
fisttp
bound
movs
aam
int
(bad)
pop
or
jle
push
daa
add
add
mov
and
adc
pop
mov
rol
add
mov
imul
mov
push
fs
(bad)
(bad)
and
adc
pushf
ret
adc
retf
mov
or
cmc
test
imul
nop
push
jg
push
add
dec
lock
rcl
push
nop
sub
cmps
dec
rcl
cmps
shl
push
and
inc
mov
dec
les
ja
or
int
ins
outs
ja
les
adc
sub
mov
icebp
cmp
adc
sar
push
add
fist
or
call
je
rcr
popa
(bad)
out
xor
jmp
push
lock
xor
sbb
mov
and
retf
xchg
add
add
pop
mov
adc
movs
(bad)
iret
(bad)
cmp
cmps
dec
rol
scas
pop
bound
out
adc
or
and
lahf
add
adc
sbb
fsub
push
jb
outs
pop
mov
or
retf
js
pop
adc
adc
add
rcl
call
mov
push
repnz
mov
mov
push
xchg
aam
dec
addr16
pop
add
mov
push
call
add
push
add
add
add
add
inc
add
add
pop
xor
(bad)
mov
cmps
or
mov
mov
mov
mov
mov
mov
mov
adc
cmp
pop
(bad)
dec
jmp
jmp
jmp
dec
cld
dec
test
loope
loopne
(bad)
(bad)
cmp
fdivr
(bad)
(bad)
fcos
fdivr
xlat
call
call
call
call
call
adc
push
test
iret
(bad)
clc
dec
push
adc
pop
bswap
dec
push
push
sbb
popa
push
loop
dec
mov
sbb
jnp
dec
push
inc
push
pop
push
lods
push
add
jge
ja
ret
mov
cmp
push
sahf
sbb
cs
adc
adc
and
push
fidivr
cmp
sub
cld
push
mov
sahf
neg
add
mov
ret
fbstp
ficomp
int3
add
push
in
out
lds
xchg
add
sti
push
adc
cmp
dec
repz
push
mov
js
(bad)
ror
iret
lea
sub
push
dec
sbb
push
dec
loopne
loop
xchg
xor
sbb
out
loopne
into
aam
jl
test
repnz
(bad)
pop
mov
push
clc
inc
inc
cli
shr
pop
pushf
repnz
push
hlt
cs
push
jl
mov
push
push
nop
cmp
mov
ds
dec
pop
inc
adc
inc
jb
in
leave
inc
pusha
leave
mov
push
ror
add
cmp
jb
sub
imul
sub
and
outs
or
adc
in
or
sbb
adc
adc
push
fdivrp
inc
dec
imul
or
jmp
add
addr16
aad
into
fisubr
adc
pusha
mov
sbb
jl
stc
jl
add
(bad)
test
jne
jmp
cs
bound
dec
xor
or
test
or
jl
adc
leave
les
inc
inc
fs
shl
or
or
daa
outs
fmul
jge
push
mov
dec
jae
jns
push
xor
cld
or
imul
xor
push
xor
(bad)
dec
mov
xchg
frstor
add
enter
(bad)
sub
mov
xchg
imul
pop
fimul
in
add
sub
jg
retf
shl
push
mov
lock
jg
dec
and
fisttp
ja
xor
or
push
push
(bad)
rol
dec
int3
push
cmp
sub
add
inc
int3
scas
mov
movs
mov
and
add
add
xor
mov
pop
test
test
adc
sbb
push
add
aaa
mov
pop
loopne
xchg
repnz
idiv
mov
pop
adc
and
and
(bad)
(bad)
fist
and
mov
mov
mov
add
push
mov
xor
cmp
rdpmc
es
(bad)
out
mov
(bad)
inc
inc
inc
inc
mov
push
pop
add
scas
mov
jmp
jo
cli
mov
push
push
pop
in
jbe
out
xchg
add
sahf
out
sahf
bound
jo
mov
cld
xchg
jl
lock
sub
and
fucom
jns
mov
dec
cli
cs
sbb
inc
add
out
mov
loopne
cld
jp
scas
or
int3
push
loop
dec
js
(bad)
push
mov
sti
mov
repnz
in
add
jns
ins
adc
jmp
mov
or
lods
out
call
rol
jns
mov
sub
mov
sahf
out
mov
xor
repz
push
add
add
jl
and
mov
cs
or
clc
jbe
scas
call
hlt
cmps
lock
inc
ds
push
add
jnp
lock
inc
lods
push
int3
push
dec
aad
lock
xor
mov
mov
or
or
fild
push
in
or
movs
or
data16
cs
popa
(bad)
es
push
dec
das
add
jno
push
cmp
int3
ins
daa
js
add
mul
pop
add
cmps
rcr
push
adc
fs
test
dec
pusha
aaa
mov
dec
sbb
mov
add
sub
add
in
ins
jmp
outs
pop
mov
mov
push
add
and
es
fisttp
adc
pop
mov
scas
inc
and
fidivr
pop
lods
ret
aaa
pop
sub
ins
bound
sbb
xchg
ins
push
pop
and
cmp
sbb
test
scas
jge
and
push
dec
rcl
sar
push
ins
and
push
push
idiv
add
mov
pop
imul
outs
jo
jge
es
sub
xor
add
and
aaa
mov
or
cmp
out
hlt
and
jge
enter
sbb
or
or
sbb
sbb
stc
sbb
and
add
and
lock
push
dec
pusha
int3
sbb
movs
es
iret
repz
xor
(bad)
cmp
loopne
cli
pop
pop
and
rol
xor
cs
nop
loopne
jae
lahf
into
lock
push
xor
xchg
cld
xchg
imul
mov
jno
sahf
push
pop
xor
rol
ds
cs
ds
outs
cs
push
jl
popa
cmp
out
push
jb
fs
push
inc
dec
fs
push
scas
push
(bad)
sub
push
sub
push
jecxz
push
add
or
mov
test
push
inc
das
pushf
mov
sbb
nop
and
rol
sbb
xchg
mov
ins
adc
call
fcom
adc
push
and
daa
push
enter
sub
jbe
push
add
ret
std
ds
or
or
nop
adc
ror
push
push
je
cmp
add
lods
or
popf
mov
mov
push
adc
pop
xor
pop
das
std
sub
push
sub
mov
or
cmp
lock
add
jp
mov
adc
and
sbb
inc
sbb
push
mov
shr
and
pusha
jb
pop
daa
add
(bad)
inc
jb
ja
adc
icebp
pop
dec
inc
not
pop
add
or
inc
imul
outs
aam
xchg
daa
push
add
add
sbb
xchg
inc
push
inc
retf
sub
or
push
jo
daa
or
fsubr
popa
clts
ja
push
dec
lods
cmp
cmp
push
mov
dec
lods
or
mov
invd
imul
popa
imul
xchg
fiadd
mov
adc
cmp
aam
push
mov
sbb
outs
and
dec
retf
adc
and
xchg
pop
les
or
jne
xchg
push
rol
sub
adc
cmp
dec
mov
pop
mov
dec
cmp
mov
add
add
or
lea
mov
add
test
cmp
in
adc
adc
mov
adc
and
aad
pop
adc
mov
daa
or
mov
adc
dec
sub
jbe
add
inc
out
push
push
in
cwde
inc
pushf
ja
xchg
iret
push
mov
xchg
fldenv
ret
xor
mov
lock
dec
pop
js
cmc
push
fdivr
add
push
or
and
nop
addr16
add
inc
test
in
add
adc
mov
adc
sbb
ins
or
jp
adc
adc
and
mov
lea
loopne
adc
dec
xchg
push
test
clc
adc
or
push
test
sbb
sbb
sub
dec
push
ins
add
sbb
add
or
push
mov
or
(bad)
push
push
mov
bound
jne
jno
loopne
add
cmp
cmp
inc
sbb
fstp
or
out
add
push
or
push
sub
xor
and
xor
jmp
inc
mov
dec
adc
test
dec
adc
adc
sbb
and
sub
sub
scas
push
push
push
or
dec
add
jne
add
scas
lahf
mov
mov
adc
add
pop
or
fadd
sbb
fnsave
mov
dec
(bad)
fcmovu
call
cmp
je
sub
add
push
jecxz
mov
or
je
call
test
cld
ja
add
dec
or
mov
add
mov
push
adc
jns
jmp
mov
adc
int3
adc
cmp
dec
call
inc
add
adc
or
cmp
popa
es
pop
xchg
pop
cmc
mov
xchg
sub
mov
xor
adc
pop
xlat
dec
push
mov
hlt
(bad)
jmp
or
(bad)
fcom
pop
ret
nop
nop
es
dec
daa
and
jne
lods
inc
(bad)
sbb
mov
adc
pop
jecxz
adc
test
inc
push
pop
stos
and
push
js
adc
cmp
mov
js
sub
aam
push
lock
fucom
pop
xor
jg
lods
or
sub
icebp
or
sar
add
and
ret
outs
add
lods
sub
push
jp
and
cmps
test
sbb
test
cmp
or
pop
ret
aas
mov
invd
cmp
and
pop
push
adc
adc
mov
dec
inc
inc
ins
arpl
and
push
femms
daa
call
sbb
xor
push
adc
out
push
test
not
push
pop
mov
rcr
mov
push
ins
ins
push
pop
jnp
inc
int
adc
push
pop
pop
enter
stos
cs
add
jae
dec
loop
push
push
cmps
or
sub
and
xchg
push
enter
or
lock
mov
les
or
adc
lock
add
mov
or
add
jecxz
jle
mov
sub
inc
(bad)
mov
ins
test
nop
in
dec
enter
adc
xor
and
ss
xor
cld
neg
or
add
xchg
inc
inc
pop
rol
jae
push
push
jecxz
out
daa
ficomp
or
cmps
mov
shl
add
adc
(bad)
sub
dec
jecxz
sub
cmp
cdq
inc
add
dec
adc
test
sub
sbb
je
mov
js
jb
and
or
mov
cmp
pop
inc
pop
and
enter
mov
jmp
or
sub
test
les
jge
shl
and
push
leave
and
sbb
jbe
add
ss
dec
cmp
test
push
cmp
cs
push
nop
repz
in
call
int
inc
pop
add
dec
fild
fild
lods
lock
in
sub
adc
sub
adc
sbb
mov
lods
inc
add
and
nop
mov
je
aaa
cmp
jns
xor
xor
xlat
mov
pop
adc
les
sar
rcl
add
sbb
mov
jns
loopne
adc
push
jo
and
fcom
sub
je
dec
dec
and
or
and
cmp
add
aaa
adc
js
rcr
xor
mov
clc
inc
sub
pop
ret
cmp
push
aam
and
test
pop
mov
iret
xor
adc
retf
mov
repnz
ins
mov
das
sub
in
push
lock
sbb
sbb
mov
or
push
test
call
pop
jne
push
out
dec
jle
jecxz
mov
jo
sub
add
daa
and
and
jne
add
ror
or
daa
push
in
mov
shl
cmp
inc
or
lea
and
jnp
jle
cmp
cmp
mov
jecxz
test
mov
shr
dec
adc
xor
jne
stc
test
jo
push
(bad)
cmp
adc
(bad)
and
pop
and
push
jno
enter
mov
iret
mov
mov
pop
sub
or
and
adc
outs
enter
jbe
sete
mov
dec
xchg
xchg
push
push
or
push
jae
sbb
mov
or
mov
ins
sub
inc
iret
int
or
pop
pop
push
fstp
pop
sti
dec
rcr
fcomp
pop
inc
jno
jne
jae
and
jmp
pop
jne
leave
jne
dec
mov
jmp
or
pop
ror
jmp
jecxz
inc
xbegin
add
mov
pop
pop
jmp
cmp
jb
fisttp
imul
addr16
shl
pop
mov
inc
jo
jl
mov
arpl
mov
inc
cmp
(bad)
add
dec
push
mov
retf
and
je
out
push
add
push
push
fisub
add
pop
xchg
fnstsw
mov
jmp
and
cmp
jne
cmps
pop
xchg
loop
push
clc
xchg
add
mov
lock
sub
lods
add
mov
adc
sub
mov
pusha
cmp
mov
fwait
(bad)
pusha
fsubr
mov
cmps
es
dec
cwde
sub
push
sbb
add
mov
or
test
mov
jmp
and
adc
mov
ins
xchg
add
add
rcr
clc
cmp
je
ret
jb
retf
into
jmp
shl
mov
data16
adc
sahf
adc
adc
dec
in
adc
shr
ret
sbb
bound
lea
add
fs
lds
mov
xor
sbb
push
xor
sbb
or
mov
mov
add
add
inc
adc
sbb
add
mov
add
push
and
ja
dec
retf
jo
sbb
mov
mov
pand
imul
and
in
mov
sbb
sub
imul
dec
sbb
jl
xchg
inc
push
push
cmp
xchg
out
pop
(bad)
adc
pop
pop
and
(bad)
fisub
pop
mov
adc
push
mov
xor
push
jno
popa
inc
push
and
mov
dec
out
adc
sbb
mov
mov
jge
lock
sub
jbe
stos
adc
or
lods
js
dec
cwde
nop
inc
pop
stc
inc
mov
dec
push
or
push
fistp
mov
retf
sbb
adc
mov
aam
shl
dec
mov
cmp
loopne
or
(bad)
lea
js
mov
inc
xchg
stc
shl
jp
cmp
adc
mov
xor
mov
rcr
fwait
jmp
push
fcomp
and
add
out
and
retf
enter
pop
sbb
je
adc
cli
imul
dec
jns
cs
ins
pop
sub
ret
mov
add
nop
adc
and
sbb
les
outs
bnd
fucomi
pop
sub
mov
mov
inc
test
xor
inc
call
mov
xchg
out
call
adc
mov
clc
and
dec
mov
add
les
add
add
shl
leave
sub
scas
scas
inc
ret
jne
jns
pop
bound
and
ret
push
push
jmp
fs
add
xchg
jecxz
mov
lea
imul
nop
stos
jo
leave
lea
and
pop
and
and
bound
jne
inc
or
cdq
and
add
mov
sub
es
cwde
loopne
pop
or
call
sti
outs
push
dec
sub
add
xchg
add
mov
pop
jnp
call
sahf
xor
push
ror
jno
clc
test
xor
push
jmp
in
push
mov
xor
cmp
rol
pusha
(bad)
out
cli
(bad)
je
push
jne
mov
scas
add
push
sbb
mov
(bad)
sub
xor
sbb
test
lds
sbb
test
ret
sbb
and
cmps
inc
je
lock
or
pop
addr16
clc
cmps
ret
add
jge
ja
cmp
mov
add
je
pusha
mov
cdq
mov
adc
test
adc
fcomp
or
in
mov
cmc
sub
rol
sub
adc
dec
div
cli
jmp
and
or
mov
fs
stos
ins
test
popa
cwde
sbb
jp
adc
mov
mov
(bad)
sub
(bad)
push
adc
in
or
punpcklbw
sbb
stc
cmp
cwde
fs
das
movs
or
inc
sbb
mov
mov
jmp
or
test
pop
gs
mov
(bad)
cmp
pop
jo
xchg
pop
mov
add
sbb
xchg
or
lods
adc
sub
mov
and
xchg
mov
adc
mov
cmp
jno
lea
add
mov
scas
pusha
mov
mov
cli
xor
push
and
dec
not
xor
xchg
shl
mov
mov
cmc
ins
fadd
adc
outs
push
ins
sub
dec
push
adc
and
mov
outs
sbb
jecxz
fwait
stos
pop
fidiv
imul
es
add
imul
sbb
adc
out
test
xor
stos
jl
push
jl
push
xchg
mov
adc
dec
jnp
sbb
aam
les
push
rcr
movs
(bad)
and
and
cmp
push
mov
dec
(bad)
ret
push
(bad)
int
add
adc
add
jo
mov
or
mov
repnz
adc
mov
sub
push
or
(bad)
jno
inc
pop
lahf
ror
push
inc
push
nop
and
jo
or
pop
int3
ins
cmp
xor
inc
add
or
ins
aas
jnp
add
jg
call
or
ins
push
dec
xchg
or
enter
(bad)
jle
inc
hlt
jne
dec
ja
popa
add
cmp
adc
popa
add
cmp
(bad)
retf
adc
imul
add
jmp
je
sbb
pushf
add
addr16
add
add
repnz
sub
icebp
aad
mov
les
out
jp
jl
cmps
jle
data16
pop
lea
addps
rcl
sbb
push
adc
dec
mov
jge
cmp
test
inc
iret
sub
imul
cmp
xchg
adc
mov
push
test
xchg
pop
xchg
cmp
je
inc
xor
loope
add
pop
cdq
clc
aas
call
push
jmp
and
push
inc
sub
and
add
ds
pusha
cld
pop
and
push
(bad)
mov
add
xabort
push
sub
nop
xchg
add
lock
test
and
add
dec
out
mov
jmp
cmp
je
mov
test
jbe
push
test
add
data16
movs
adc
je
or
adc
fcom
aaa
pop
pop
sar
sbb
jbe
cmp
cmp
and
or
or
sub
and
leave
add
iret
or
test
pop
dec
cmps
jbe
xor
sbb
lds
adc
jbe
xlat
lods
or
or
scas
cmp
cmp
dec
cmp
inc
push
jmp
in
or
xor
push
inc
loope
xor
inc
adc
in
clc
mov
ss
add
mov
shl
push
mov
mov
mov
in
inc
and
xor
jae
sub
sub
test
add
ret
sub
xor
dec
cmp
dec
dec
cld
push
icebp
jo
mov
or
push
push
adc
adc
pop
pop
pop
or
cmp
test
rcr
sub
push
push
xchg
mov
ror
xchg
mov
loopne
daa
add
jmp
mov
mov
mov
cmp
gs
add
jmp
and
push
adc
adc
mov
nop
or
pop
xchg
adc
dec
gs
mul
jb
cwde
shl
jle
xchg
xor
add
mov
xchg
adc
mov
xchg
pop
aam
or
mov
cs
and
cmps
add
sar
jne
scas
bound
in
mov
cmp
jle
aaa
cmp
mov
or
stos
jne
jge
jo
xchg
adc
xchg
xor
(bad)
int3
out
or
addr16
and
fimul
unpcklps
cmp
cld
or
mov
xchg
xlat
push
jae
mov
add
adc
sahf
mov
popa
paddsw
sahf
add
pop
xor
pop
sbb
hlt
enter
mov
mov
adc
ins
out
add
mov
call
dec
jp
jmp
fcom
inc
add
dec
push
add
and
add
push
lods
ffree
xor
clc
daa
rol
mov
cmc
call
push
xchg
fcom
movs
cmp
call
mov
push
xchg
jmp
(bad)
(bad)
jmp
pop
sub
xor
cmp
adc
inc
push
pcmpgtb
mov
add
push
sub
pop
jo
pop
pop
ret
cmova
sbb
pop
or
arpl
jmp
sbb
daa
push
inc
and
lock
add
add
xlat
fxtract
les
sbb
lds
dec
xor
jnp
xor
xchg
push
jge
int3
inc
shl
paddq
mov
push
aaa
push
pop
add
pop
dec
lds
or
add
jle
aaa
adc
push
push
daa
adc
cmp
mov
bound
mov
xchg
mov
nop
outs
adc
fwait
lock
or
mov
fld
lods
call
push
cmp
loop
stc
push
sbb
rcl
ror
sbb
or
add
pop
push
add
inc
sbb
ds
push
push
push
xor
mov
push
adc
cwde
(bad)
adc
pop
cli
add
shr
mov
(bad)
dec
dec
push
or
aaa
ins
and
sbb
jne
aam
clc
push
arpl
push
add
ins
or
xor
cmp
or
xor
sbb
cmp
jne
xor
outs
aas
pop
and
clc
jne
sub
add
push
pop
add
test
mov
pop
pop
mov
nop
jno
mov
movs
fbstp
adc
add
push
adc
pop
(bad)
push
je
adc
push
out
out
pop
ret
setb
adc
les
add
cmp
jne
fbld
sub
je
add
sub
scas
inc
dec
push
push
mov
je
ss
inc
mov
test
setno
or
sub
adc
clc
loope
lea
lea
stos
sar
cs
jb
inc
jbe
jnp
jne
rol
and
dec
or
push
dec
and
test
sub
push
push
cwde
cwde
dec
mov
sbb
rol
xchg
and
es
dec
nop
pop
adc
retf
inc
add
fcmovb
xor
jbe
sub
and
push
mov
pop
out
or
pusha
(bad)
fcmovb
les
pop
popa
mov
push
loopne
ret
cmp
adc
jmp
push
jmp
mov
dec
cs
or
adc
add
sub
add
sub
fs
gs
add
mov
imul
je
adc
and
(bad)
sub
inc
dec
fiadd
inc
xor
xor
jbe
xchg
ss
sbb
inc
dec
das
pop
rcl
lods
dec
xor
cdq
ret
das
xchg
loopne
clc
lds
loopne
inc
mov
rol
push
pop
cld
inc
inc
retf
inc
inc
ins
arpl
add
push
or
dec
add
push
(bad)
adc
inc
or
xchg
into
push
test
outs
fs
push
adc
cmp
sub
dec
je
das
das
add
cdq
jb
cmp
dec
mov
ins
and
add
inc
mov
dec
inc
xchg
inc
adc
xor
(bad)
cld
or
popf
sub
shr
mov
in
loope
fdivr
clc
mov
and
arpl
(bad)
lds
or
pop
std
sar
adc
enter
mov
leave
pop
repnz
add
pop
out
xchg
add
shl
or
fidivr
adc
cmps
test
or
pop
or
or
adc
push
ret
pop
mov
mov
scas
pop
sbb
add
mov
outs
xchg
adc
dec
add
add
push
or
mov
or
push
add
dec
stos
sub
outs
das
mov
jmp
int
xlat
add
add
cmp
or
leave
xchg
lea
inc
xchg
mov
fwait
rol
or
int3
pushf
sbb
push
xor
mov
add
mov
xor
adc
add
push
cwde
jge
lahf
test
xor
mov
mov
and
adc
mov
mov
add
fs
inc
dec
dec
jo
sti
nop
mov
mov
add
mov
add
dec
xchg
dec
or
add
inc
add
pop
fild
xchg
cwde
push
inc
outs
and
imul
adc
dec
sub
and
lock
cdq
add
test
mov
aaa
mov
mov
adc
iret
add
loopne
add
pusha
xchg
es
retf
mov
sub
popf
js
push
pop
dec
aaa
or
(bad)
lahf
add
or
lock
je
mov
jg
push
mov
push
mov
push
mov
pop
mov
add
xor
adc
pop
jmp
inc
adc
mov
push
push
xor
and
inc
dec
pop
call
xor
or
loope
stos
dec
adc
mov
jle
and
ret
or
jmp
shl
jmp
daa
or
dec
adc
inc
rcl
call
push
sbb
mov
(bad)
fsub
inc
and
mov
sbb
lea
xchg
xchg
dec
push
xchg
pop
cmp
jne
(bad)
cli
sbb
inc
pop
push
scas
ds
loopne
xchg
mov
out
mov
adc
push
add
pushf
or
pop
adc
push
xor
cs
ret
push
(bad)
hlt
add
sbb
mov
ret
test
je
mov
mov
inc
pop
jo
inc
xchg
pop
ds
test
add
and
and
adc
sbb
mov
sbb
fldenv
gs
(bad)
adc
mov
cmp
jmp
popf
inc
dec
jo
cli
loopne
sbb
aam
sbb
inc
add
nop
es
mov
test
sub
movs
ss
imul
sub
clc
and
loope
and
and
popf
pop
dec
sub
adc
mov
ds
push
je
pushf
int
mov
inc
inc
push
add
or
aas
loope
mov
adc
je
pop
mov
(bad)
ds
pop
push
add
or
daa
adc
add
and
test
test
dec
inc
dec
dec
dec
idiv
push
add
or
outs
push
fs
jmp
pusha
movs
ret
push
sbb
idiv
int3
sub
inc
dec
or
dec
mov
mov
movs
ret
mov
loope
push
aad
adc
add
dec
ret
mov
aaa
sub
movs
or
outs
pop
shl
loopne
je
mov
mov
arpl
ror
test
push
push
jmp
and
(bad)
cld
int
cmp
div
nop
xor
sub
or
push
mov
js
push
or
dec
cmps
retf
push
mov
xor
cmp
mov
adc
pop
je
pop
pop
push
or
lock
ins
aas
cmp
ins
sbb
mov
(bad)
mov
and
sub
call
jo
add
inc
jo
mov
push
pop
lea
cmp
pop
pop
pop
xchg
movs
jnp
inc
or
push
pusha
inc
pusha
jbe
dec
mov
mov
inc
ror
jne
bound
nop
nop
mov
and
cmps
xchg
xchg
js
fldenv
jmp
adc
ins
cmp
fidiv
adc
int
mov
ins
sub
ret
and
pop
or
push
inc
dec
mov
sbb
cli
idiv
(bad)
jg
bound
adc
je
mov
xchg
repz
xor
lea
inc
aaa
mov
inc
sbb
or
inc
cmovs
leave
je
cmp
mov
inc
cmp
mov
push
adc
les
adc
iret
(bad)
cmps
movs
inc
sub
adc
es
inc
shl
xchg
hlt
sbb
inc
inc
pop
cmp
pop
xor
test
adc
sbb
push
mov
mov
jb
xchg
mov
dec
mov
xor
lock
(bad)
mov
jle
dec
xor
mov
mov
and
add
test
add
add
out
sbb
pop
jg
dec
call
inc
dec
nop
aaa
mov
ja
pop
dec
mov
adc
pusha
mov
and
dec
(bad)
sti
add
cmp
jne
aas
pusha
mov
sub
cmp
or
or
mov
test
cmp
xor
and
mov
or
mov
and
and
or
ja
push
adc
cmove
and
(bad)
leave
jg
ror
xchg
dec
xchg
xchg
pop
mov
loopne
test
or
inc
(bad)
xchg
adc
add
cmp
clc
inc
ss
add
sbb
sahf
fisttp
(bad)
add
fst
and
pop
or
add
cmp
inc
and
sti
add
or
fbld
pop
cld
add
push
popa
sub
sbb
or
sub
movs
xchg
sub
aaa
bound
clc
mov
rol
add
int
mov
jecxz
pop
xor
adc
and
add
or
pop
pop
pop
adc
das
or
inc
dec
jb
popf
std
adc
dec
or
mov
sbb
pop
xor
add
mov
jae
popa
and
or
lea
push
aad
cmp
sub
adc
jne
sbb
pop
test
test
cmp
sbb
dec
outs
add
cmp
rol
push
popa
add
cmp
add
fidivr
js
dec
or
je
add
ja
add
add
mov
xchg
mov
mov
aaa
pushf
mov
sub
push
dec
push
mov
push
dec
adc
push
stos
sar
sbb
shr
ret
sub
pop
bound
push
pop
dec
bound
retf
dec
pop
xchg
xchg
pop
push
adc
xchg
mov
add
xchg
movs
std
cmps
in
add
sbb
xchg
cmp
sub
fidiv
xor
add
jne
mov
xchg
hlt
mov
adc
(bad)
jg
lock
mov
dec
and
inc
or
loope
sbb
push
dec
xor
fwait
mov
adc
call
inc
fisttp
mov
call
or
or
outs
add
adc
adc
or
push
inc
pop
sub
inc
lea
in
adc
es
daa
mov
push
ins
push
mov
or
push
js
call
mov
or
mov
mov
xchg
nop
imul
add
adc
xchg
lock
add
inc
idiv
(bad)
lods
cmp
push
xchg
div
mov
cmp
pop
jge
mov
add
sub
push
test
aam
xor
outs
cs
mov
test
lock
pop
inc
pop
add
xor
mov
imul
aas
movs
loope
mov
js
xchg
xor
add
sub
add
mov
or
jecxz
inc
inc
xlat
push
add
jo
lock
or
out
cmp
pop
add
mov
and
ins
xchg
dec
dec
xor
and
xor
out
sbb
jo
push
mov
pop
loopne
mov
outs
arpl
adc
(bad)
mov
add
pop
cdq
cmp
test
loope
popf
sub
pusha
adc
cwde
pop
push
pop
xor
scas
sub
sub
cmp
mov
ret
outs
xchg
icebp
mov
inc
sbb
(bad)
cmp
or
xlat
push
(bad)
aaa
call
inc
jne
idiv
das
in
or
inc
in
push
add
add
pop
push
add
add
fdivr
adc
adc
call
jo
mov
or
jne
retf
jo
adc
aas
or
pop
push
fwait
aam
ja
jo
js
pop
add
push
sbb
add
inc
test
add
pop
mov
inc
pushf
and
shl
cs
fld
call
rol
xchg
ret
or
pusha
push
mov
inc
jmp
mov
mov
xor
or
dec
sbb
inc
mov
je
retf
ins
mov
mov
aaa
pop
sahf
sub
add
adc
push
test
and
mov
pop
dec
inc
sub
test
shr
push
push
or
sub
add
cmp
mov
xor
icebp
je
inc
pop
fmul
imul
pop
or
push
in
aas
retf
loopne
(bad)
xor
push
pop
and
sbb
enter
ret
daa
pop
jae
jne
stos
in
lock
dec
mov
inc
mov
mov
test
or
add
je
xor
div
xchg
je
xchg
sub
cmp
pop
mov
popa
or
mov
mov
js
xchg
push
sbb
sub
inc
jo
add
lock
mov
push
std
mov
adc
js
jne
xor
push
ja
mov
shr
push
ja
and
xor
xchg
add
inc
adc
jge
inc
dec
aaa
fsubp
sbb
mov
test
sbb
sbb
hlt
xor
mov
or
pop
cmp
xor
mov
mov
push
sbb
loope
ret
dec
or
pusha
lahf
jmp
mov
and
cmc
jecxz
and
push
das
mov
mov
movs
out
xchg
jbe
mov
sbb
push
popf
adc
adc
and
int3
sub
sbb
add
mov
loope
xlat
ret
sub
(bad)
mov
xor
push
sub
inc
or
or
add
es
xor
mov
hlt
mov
js
mov
bound
adc
pop
ds
mov
cdq
xor
adc
jg
and
movs
xor
pop
movs
hlt
out
add
jg
movs
adc
aaa
xchg
push
cmc
fwait
js
mov
or
idiv
enter
test
push
sub
xor
mov
add
or
xchg
pop
loope
and
lock
push
je
push
or
add
jbe
ins
mov
jnp
adc
sbb
mov
or
sub
or
push
loope
jb
rcr
loop
rcr
fnstsw
or
or
or
cmp
sub
rol
sub
push
add
jmp
mov
mov
add
push
and
cli
or
sbb
pusha
test
push
mov
clc
pop
fmul
imul
or
mov
out
xchg
dec
loop
add
cmp
punpcklbw
cmp
(bad)
je
sar
push
or
cmp
add
jmp
inc
add
mov
fwait
mov
or
dec
inc
stc
lock
or
sbb
sbb
and
aam
and
pop
mov
and
mov
pop
mov
xor
adc
or
sbb
cwde
adc
mov
and
add
jb
and
mov
mov
gs
jo
jo
pop
dec
fadd
sub
jne
bound
idiv
stos
jb
adc
and
sub
mov
or
push
dec
sti
and
bound
or
sbb
fisubr
fsubr
cmp
(bad)
cmc
push
xchg
adc
mov
pop
add
sub
sub
dec
push
add
jle
call
push
(bad)
jmp
xchg
jmp
cli
je
mov
adc
inc
sbb
push
pop
(bad)
popf
adc
mov
sbb
hlt
pushw
pop
fist
cmp
mov
inc
or
or
ror
jg
aas
in
and
adc
test
pop
dec
test
add
jmp
outs
push
and
in
mov
out
xchg
add
cmp
sub
mov
mov
push
shl
mov
xor
loopne
pop
mov
inc
and
mov
adc
mov
sub
xchg
sbb
pop
(bad)
mov
mul
dec
mov
or
sbb
add
gs
pushf
leave
call
cmp
pop
sar
or
mov
adc
into
loopne
pop
push
mov
shr
cld
popa
loopne
inc
push
add
adc
jg
dec
jae
fsub
xor
aas
shl
adc
je
adc
or
and
dec
or
sbb
mov
jle
test
invd
in
fsubr
sbb
lea
test
pop
sub
sub
and
icebp
retf
(bad)
push
outs
mov
push
xchg
pusha
add
dec
xchg
xchg
cmp
sar
or
div
mov
push
add
cmps
(bad)
jg
adc
sub
movs
shr
jle
add
pop
or
push
add
shl
movsx
or
mov
or
add
rol
push
mov
inc
inc
cmp
and
shl
push
imul
cmps
fiadd
mov
adc
(bad)
outs
xor
aaa
stos
push
imul
ror
sbb
sub
and
mov
inc
fwait
mov
jl
addr16
or
push
pop
push
add
aam
movs
add
scas
inc
push
gs
sub
push
dec
inc
outs
push
test
cmps
cmp
sbb
add
sub
(bad)
add
pop
dec
call
icebp
pusha
push
jge
add
mov
shr
stc
loope
pop
mov
in
scas
add
push
in
add
adc
sti
inc
lahf
fs
push
(bad)
push
sbb
sub
test
stc
sub
jnp
sbb
adc
shl
cmp
pop
js
(bad)
aam
pop
icebp
fidiv
push
rcr
dec
or
pop
or
loop
lea
pop
mov
mov
xor
ror
and
jp
call
add
sbb
std
aam
xor
test
std
mov
popa
push
ret
dec
std
stos
jmp
mov
jnp
lods
mov
mov
nop
pop
add
xor
ins
inc
aas
add
inc
jo
pop
xchg
jne
adc
fidivr
fs
xor
inc
xchg
add
inc
out
mov
mov
or
addr16
ret
xchg
pop
shl
test
nop
xor
sbb
cwde
xor
push
inc
daa
lods
pop
ret
mov
outs
mov
loope
in
addr16
add
and
or
fild
lods
jge
mov
adc
repnz
dec
aas
jbe
es
adc
jmp
dec
dec
mov
push
inc
cmp
dec
es
fmul
mov
bound
inc
sbb
test
loopne
movs
adc
or
add
push
jne
add
push
fwait
jae
xor
icebp
add
test
sub
cdq
sbb
and
add
inc
or
cmp
and
or
mov
add
popf
jmp
adc
jo
bound
mov
inc
jmp
push
pop
dec
push
and
add
fld
aam
push
mov
inc
sbb
mov
adc
ja
push
aad
inc
pop
lea
mov
and
movs
push
mov
shr
jne
mov
pop
or
mov
or
push
jo
int3
jae
dec
jnp
out
cmp
fcmovne
inc
push
stos
xor
mov
nop
test
sub
pop
pop
shufps
cld
mov
mov
leave
shr
xor
movs
pop
add
add
and
sbb
adc
jns
daa
or
adc
retf
dec
and
inc
outs
mov
xor
rcr
sbb
mov
jo
adc
inc
cmp
add
lea
daa
push
cmc
ss
inc
or
pop
mov
pop
std
(bad)
xchg
xor
lea
or
test
jb
nop
sub
loopne
mov
mov
hlt
or
dec
pop
pop
sub
mov
sub
inc
add
sub
inc
push
loopne
(bad)
ror
adc
add
cld
sub
adc
or
cmp
add
mov
push
jnp
push
repnz
sbb
sub
pushf
push
adc
fld
in
add
cmps
xchg
fimul
xchg
xor
sub
les
mov
and
rol
mov
sbb
and
loope
or
mov
adc
shl
push
imul
mov
inc
fs
or
cmp
push
lea
jl
or
pop
cmps
xor
cmp
mov
xchg
setae
data16
and
xchg
add
inc
mov
popf
mov
loope
inc
adc
les
lea
add
cmp
les
jmp
shl
pop
mov
pop
out
ins
adc
pop
inc
jmp
dec
aas
sub
leave
inc
jb
xor
and
xchg
arpl
sti
push
shl
push
or
xchg
in
aaa
(bad)
or
dec
mov
inc
xor
xor
xor
sbb
test
rol
enter
mov
mov
loopne
xor
outs
pop
sub
test
inc
addr16
adc
dec
xchg
adc
jo
dec
pop
or
or
fnstsw
sahf
jae
sbb
dec
jne
cmc
(bad)
icebp
xor
jl
pop
movs
das
and
jg
mov
add
rol
adc
loopne
mov
std
sti
daa
mov
add
ins
cmp
push
add
gs
or
inc
dec
push
mov
fisttp
out
push
pop
dec
or
pop
sub
sub
repz
jl
add
iret
and
xor
fwait
outs
xor
test
sbb
(bad)
or
je
add
jmp
and
fisubr
aam
int3
or
xor
push
add
add
sbb
shl
xchg
fcomp
adc
mov
lods
pop
loope
call
dec
push
push
cwde
call
adc
(bad)
jno
xor
clc
das
call
jecxz
jmp
sbb
retf
add
mov
or
mov
daa
mov
mov
fld
pop
out
stos
xor
arpl
popa
stos
out
pop
daa
push
sbb
movs
mov
clc
pusha
scas
add
and
pop
mov
mov
mov
nop
add
cmp
push
mov
add
inc
mov
outs
arpl
sti
jae
xchg
loope
or
and
pop
in
mov
or
or
jne
xor
lock
addr16
mov
dec
adc
jb
cmp
jge
jne
xor
mov
jnp
jbe
shr
ror
fs
sbb
mov
(bad)
push
cmp
push
mov
inc
sub
jne
aad
or
xor
add
push
clc
xor
adc
loop
mov
add
push
push
xor
je
(bad)
imul
dec
and
push
add
sar
inc
test
dec
ret
push
mov
pop
adc
arpl
dec
sbb
test
jmp
les
add
sbb
inc
or
mov
in
push
sub
mov
leave
adc
adc
or
mov
mov
add
outs
sbb
ficom
out
ss
mov
pop
inc
jbe
mov
cvttps2pi
arpl
add
retf
scas
jno
outs
push
push
inc
cmp
retf
inc
lods
mov
rol
lods
outs
outs
mov
mov
jecxz
sub
sub
or
dec
pmaddwd
cmp
ja
xchg
shl
xchg
adc
rol
xchg
inc
add
(bad)
out
jbe
test
cmp
lods
shl
add
sbb
hlt
push
jmp
add
push
dec
mov
push
jne
shl
adc
mov
adc
cmp
sbb
mov
pushf
adc
lea
movs
pusha
add
xchg
ins
mov
mov
add
mov
mov
adc
push
push
push
test
mov
pushf
add
jnp
jl
cmp
or
fstp
mov
aam
outs
sbb
rcr
loopne
cmp
jbe
and
and
test
outs
int3
xchg
dec
inc
pop
and
and
pop
out
int3
imul
mov
mov
ss
mov
aam
jns
xor
inc
clc
psrlq
scas
dec
ss
(bad)
sti
push
ja
jmp
mov
mov
dec
push
daa
cmp
ja
push
lahf
inc
cwde
ins
mov
sahf
and
lahf
imul
in
cmp
mov
dec
cld
xchg
xchg
mov
enter
ins
leave
iret
aam
pop
lea
xchg
push
pop
pop
push
mov
lods
xchg
push
jno
cmp
inc
popa
jmp
or
pop
pop
mov
leave
loope
inc
jo
and
jnp
lahf
dec
cmps
cmp
mov
xchg
fld
add
fwait
enter
pop
stos
test
das
push
pop
ss
pop
enter
inc
dec
jecxz
xchg
inc
adc
movs
out
pop
clc
xchg
nop
xchg
sub
adc
pop
push
in
jmp
aaa
hlt
jmp
sub
dec
push
xchg
pusha
inc
pusha
mov
mov
sub
mov
or
dec
xchg
add
in
mov
(bad)
push
aaa
lock
add
jb
in
call
popf
mov
(bad)
dec
ficomp
push
movs
pop
ret
lock
sbb
jne
xor
icebp
inc
sub
add
lock
adc
cmp
sub
and
cmp
(bad)
jl
push
push
push
icebp
xor
jb
sub
xchg
cmc
xchg
pop
push
adc
add
fistp
xchg
mov
pop
add
in
cmp
xor
lock
jg
cmp
ja
push
ror
out
pop
mov
addr16
add
inc
dec
and
jle
sub
pop
(bad)
loopne
pop
mov
xor
add
jmp
adc
rcl
cmp
mov
in
ins
adc
rcr
outs
adc
mov
add
add
xchg
pushf
add
ror
ror
xchg
lods
push
shld
dec
cli
call
lahf
mov
out
out
movs
inc
xchg
dec
arpl
and
ja
xchg
stos
push
sub
xchg
push
es
inc
push
daa
ins
sbb
add
lods
popa
cmp
sbb
sub
add
xor
add
enter
lock
fistp
pop
inc
lock
pop
lea
adc
pop
mov
data16
pop
cmp
jne
adc
or
adc
pushf
add
mov
nop
ins
sub
lods
mov
cmp
add
push
mov
sbb
sub
adc
or
inc
out
cmp
inc
call
hlt
and
inc
inc
add
out
bound
sbb
retf
inc
mov
inc
mov
cmp
out
add
outs
ins
push
lock
jmp
add
hlt
xchg
jge
out
push
cld
iret
pop
ror
mov
push
nop
fxch
das
push
sbb
loope
add
call
xor
sub
xor
jl
xor
sbb
push
inc
pop
idiv
push
popa
pop
xlat
pusha
sub
push
inc
jecxz
not
lock
mov
ret
pop
sub
cmps
sub
jl
test
into
add
pop
xchg
shl
mov
sub
push
xchg
add
movs
cs
sbb
arpl
inc
test
mov
mov
add
xchg
inc
push
add
or
adc
push
cmp
cmc
sub
fidiv
imul
in
and
mov
ins
mov
pusha
nop
sbb
jnp
aad
test
ror
jp
or
outs
push
pop
(bad)
pusha
push
out
lods
call
mov
fs
mov
sbb
mov
inc
ja
adc
clc
and
in
(bad)
and
loop
imul
xor
mov
mov
and
shl
mov
cld
rcl
or
dec
lods
add
dec
cmp
lods
dec
mov
and
(bad)
pop
sbb
and
cmps
and
cmp
popf
inc
xor
jbe
sbb
mov
test
lods
push
mov
dec
push
inc
push
ret
imul
clc
push
lock
sar
push
shl
mov
ror
and
pop
test
and
mov
adc
mov
dec
mov
and
and
mov
pop
inc
and
fs
ficom
adc
sub
popf
add
inc
push
xchg
in
push
xor
inc
outs
lds
out
mov
dec
pop
sbb
push
sbb
xchg
pop
jge
sbb
sub
push
(bad)
pop
jne
test
adc
dec
fcmovbe
or
iret
add
repz
mov
add
aas
(bad)
nop
or
jecxz
test
fiadd
pop
jne
js
lea
ret
inc
jecxz
inc
jmp
add
sub
mov
sbb
js
mov
data16
cmp
dec
sti
mov
aas
(bad)
jmp
adc
jmp
(bad)
jo
or
dec
loope
push
add
sti
mov
fmulp
mov
inc
or
cmps
sbb
xlat
stos
(bad)
add
sub
cmp
jle
push
adc
xlat
sub
add
icebp
(bad)
and
jns
imul
add
sbb
add
bound
fbld
mov
jnp
xchg
call
cmp
sti
dec
retf
loop
mov
sbb
xchg
cmp
push
or
mov
aam
rol
xor
cmps
js
ins
or
sub
or
into
outs
sub
jbe
daa
push
pop
and
popa
stc
mov
retf
dec
test
mov
adc
in
enter
loope
pop
iret
outs
xchg
fstp
jle
or
les
inc
xor
pop
mov
sub
mov
adc
int3
add
xchg
lahf
mov
cld
sti
(bad)
push
icebp
add
nop
mov
jne
and
mov
(bad)
jge
lock
add
dec
sub
jmp
adc
ins
lods
push
mov
xor
add
inc
call
xor
xchg
xchg
and
and
sbb
mov
fs
jo
cmp
cwde
cdq
mov
lock
add
xchg
fimul
inc
cmp
or
push
retf
and
lea
fld
pop
push
data16
adc
add
popa
aad
fcom
xchg
repnz
push
cmp
(bad)
fst
enter
xchg
je
sub
retf
call
add
add
push
inc
jmp
inc
jge
mov
nop
jmp
and
pop
jl
dec
into
sbb
mov
out
add
xor
push
lea
sbb
pushf
mov
add
or
push
push
sbb
pop
test
lock
cmp
es
cmp
je
sbb
add
scas
leave
cmp
pushf
aas
push
add
sub
dec
add
adc
mov
pusha
out
add
push
mov
rol
fsubr
loop
cmp
(bad)
jo
inc
ror
mov
dec
cli
mov
add
mov
sub
ret
add
pop
and
test
ss
sbb
adc
mov
and
jle
mov
pop
or
scas
mov
xor
push
fwait
mov
add
sbb
aas
and
add
ins
les
jg
jae
popa
aas
test
nop
mov
cmp
inc
cwde
and
or
adc
add
cmp
pop
and
sbb
stos
push
add
call
mov
clc
adc
sub
div
add
mov
stos
jno
jmp
mov
xchg
ins
cmp
jne
js
push
mov
lea
jecxz
or
adc
lahf
mul
sahf
shl
pop
test
ds
out
mov
fmulp
mov
fild
rcl
cmp
(bad)
cmp
lock
mov
and
std
scas
mov
fs
lea
sbb
add
pop
fs
ret
das
xor
js
ret
dec
fwait
mov
xor
xlat
sbb
add
mov
loopne
jge
repnz
mov
loopne
xchg
(bad)
sub
std
ret
mov
pop
jg
rol
and
pop
mov
pop
repnz
sub
xchg
jmp
sbb
xchg
in
rcl
push
lock
xchg
dec
lahf
mov
or
xor
push
sub
push
bt
test
sbb
test
cmps
mov
loope
lock
push
movs
mov
je
inc
dec
jne
data16
dec
shr
shrd
cld
dec
sbb
mov
pop
pop
js
outs
je
and
and
sbb
push
inc
mov
cmp
test
loope
pop
push
xor
cmps
sbb
cmp
mov
add
sbb
pop
not
or
jo
jg
or
push
or
add
je
mov
dec
or
and
cmps
popa
lds
sbb
test
movs
inc
rol
ds
adc
loopne
in
mov
retf
imul
inc
push
jecxz
adc
pop
gs
retf
ds
add
ja
inc
adc
or
aad
xor
fdiv
dec
lahf
add
sub
out
jbe
cmp
jne
mov
aam
movs
stos
rol
add
xor
adc
das
sbb
add
jns
push
xchg
sar
and
mov
fnsave
or
cmps
inc
xchg
add
ja
movs
dec
sub
clc
or
lea
jmp
popf
dec
and
cmp
jo
add
mov
test
test
or
dec
les
jne
nop
movs
ficom
lea
sbb
cmp
stc
repz
in
or
adc
add
lods
xor
xchg
rcl
mov
or
xchg
adc
imul
mov
cmp
or
xor
push
ror
xchg
sar
lock
loop
xchg
adc
ins
add
or
mov
add
xor
xor
(bad)
das
sub
loopne
jns
js
cmp
adc
mov
sbb
imul
inc
(bad)
lds
adc
retf
outs
out
xchg
add
push
mov
or
and
jo
cmp
cmp
xor
jo
out
aam
adc
je
push
pop
adc
rol
push
or
sub
fwait
jo
adc
or
sub
pop
adc
dec
cmps
div
xchg
xchg
in
test
push
sahf
add
xchg
fwait
lods
sbb
int3
jno
cmp
retf
les
mov
bound
add
jmp
aam
xchg
(bad)
retf
mov
mov
jae
push
mov
jmp
push
push
mov
inc
jmp
push
cmp
aad
clc
dec
clc
jne
inc
push
pop
int
sbb
mov
xchg
retf
xchg
cmp
pop
jecxz
cmp
mov
jb
xor
sbb
iret
mov
(bad)
xor
test
mov
rcl
into
(bad)
fld
jb
add
mov
adc
imul
retf
mov
xchg
dec
add
sbb
push
adc
and
inc
ret
pusha
add
das
jge
cmp
pusha
call
outs
aad
mov
push
adc
shl
or
sbb
pop
pop
test
cmps
sbb
shl
sub
jp
push
dec
mov
add
jne
(bad)
mov
sbb
sbb
pop
mov
push
xor
xor
inc
call
movs
pushf
jmp
dec
add
aad
inc
fldcw
mov
in
xchg
fadd
cmp
mov
add
jl
imul
and
pop
xor
adc
nop
cmp
ja
mov
inc
push
inc
test
push
lahf
xor
sbb
clc
mov
dec
cwde
scas
adc
sbb
sahf
imul
xor
out
push
fwait
or
fst
daa
sub
(bad)
or
inc
push
mov
cmc
dec
mov
loop
adc
sub
mov
fwait
pop
sbb
pop
cmp
add
add
pinsrw
xchg
outs
xor
clc
shrd
xlat
cmps
je
inc
cmp
cmp
jp
mov
sub
xchg
movs
dec
cmps
adc
adc
ss
inc
fiadd
inc
sbb
sbb
mov
loop
mov
test
pusha
jge
adc
inc
nop
test
jne
sbb
mov
jge
int
movs
pushf
cli
xchg
add
mov
jge
arpl
out
pop
(bad)
sbb
inc
imul
clc
add
movs
in
sahf
xor
inc
call
rcr
adc
aas
mov
add
dec
inc
pop
mov
mov
or
sbb
xchg
popa
dec
or
unpcklps
xor
lods
dec
cmp
mov
xor
cdq
or
dec
sbb
loop
retf
out
loopne
xchg
pop
push
in
push
push
ror
(bad)
hlt
jl
and
jge
mov
adc
int
and
add
push
(bad)
sub
lods
xchg
jp
mov
mov
xchg
je
inc
pusha
popf
lods
retf
add
aas
gs
lea
or
shr
push
or
loopne
stos
ror
movs
push
cmc
das
pop
cmp
add
adc
pop
sbb
cmp
inc
xor
test
pop
fcom
clc
stos
push
sti
dec
inc
stos
fadd
or
adc
lock
push
push
popa
int
(bad)
lds
cmps
xchg
sub
adc
jmp
fdivr
sbb
jg
or
rcr
iret
fdivr
dec
push
push
popa
cld
movs
stos
nop
push
imul
in
sub
push
rcl
adc
and
xchg
cld
mov
fistp
scas
out
inc
pusha
ret
mov
lock
adc
mov
adc
inc
jmp
add
add
add
inc
(bad)
jl
fxch
inc
cmp
dec
shr
add
pop
mov
push
adc
mov
aam
xchg
sub
pop
iret
mov
packsswb
gs
inc
pusha
out
xchg
in
xor
push
add
add
add
rcl
enter
and
dec
es
daa
xchg
mov
addr16
mov
rol
inc
cmp
jg
dec
aam
pop
pop
cmp
and
xchg
mov
mov
test
dec
adc
aas
cmp
sbb
shr
pop
js
pop
mov
pusha
jmp
jno
push
xlat
sbb
fild
icebp
fiadd
dec
push
mov
mov
adc
pushf
fnstsw
push
cli
push
sbb
jo
add
scas
pop
jno
sbb
push
jne
shl
inc
rcr
icebp
xchg
mov
dec
iret
js
nop
inc
mov
or
adc
push
adc
push
or
mov
jecxz
push
mov
mov
jno
and
adc
(bad)
ja
ret
iret
out
pop
stos
pop
es
jne
pop
mov
je
jbe
ret
jp
inc
push
jmp
js
push
jb
pop
push
dec
push
sbb
xchg
dec
xor
adc
imul
js
adc
inc
sub
pop
(bad)
shl
movsx
sub
cmc
dec
mov
inc
cmp
xchg
pop
adc
imul
push
adc
inc
xor
inc
cmp
adc
xchg
mul
jecxz
pop
daa
push
add
cdq
cld
mov
inc
shl
mov
adc
xchg
das
repz
sbb
das
cld
fld
cmp
cmp
mov
push
cmp
cmp
inc
rcr
imul
cmp
in
xor
test
in
and
(bad)
jl
cmp
inc
inc
inc
popa
sbb
sbb
or
lods
mov
(bad)
or
cli
repz
mov
shl
push
retf
je
jo
push
sub
adc
popf
inc
cmp
loopne
cmp
push
xor
les
inc
mov
rol
out
dec
and
pop
scas
call
mov
rcr
dec
rol
aas
xchg
(bad)
call
mov
ror
pusha
jmp
add
into
mov
int
jl
data16
(bad)
push
add
sub
or
dec
cmp
mov
stos
add
jns
addr16
mov
add
je
xor
repz
shr
or
aas
adc
pop
push
sbb
shl
ret
push
js
xchg
dec
pop
and
xlat
loopne
pop
mov
hlt
jmp
lock
adc
sbb
je
add
addr16
add
xchg
adc
cmc
pop
inc
mov
jo
and
sbb
mov
not
xchg
pusha
xor
inc
dec
je
dec
pop
icebp
addr16
sbb
dec
ret
push
add
or
test
add
push
inc
dec
jmp
rol
add
pop
(bad)
shl
out
mov
popf
add
ja
mov
mov
xchg
movs
outs
aad
mov
xor
cmps
fwait
enter
xor
daa
adc
xor
jno
(bad)
cli
inc
adc
add
fcmovu
add
dec
fmul
xchg
(bad)
adc
clc
cmp
mov
adc
fistp
lahf
in
je
dec
clc
inc
mov
fs
mov
aaa
or
adc
push
sbb
xchg
jle
jae
aaa
cmp
rcl
push
cmp
addr16
leave
push
cld
jno
shl
clc
call
mov
xor
test
adc
push
push
test
inc
mov
xor
cmp
out
iret
je
push
add
or
mov
pop
push
pop
in
or
lahf
pop
mov
push
cmp
add
inc
adc
loopne
push
pop
stos
in
clc
pop
xlat
ret
out
xchg
dec
sbb
mov
cwde
add
fcom
and
sub
dec
push
cmps
retf
add
aam
icebp
mov
lock
ins
push
push
sar
or
xchg
pop
lea
pop
sub
pusha
dec
sti
and
hlt
outs
psubw
imul
pop
cmps
test
mov
aas
push
mov
enter
lock
fmul
pop
mov
push
xchg
xor
dec
xor
ret
cmc
cs
sbb
adc
jmp
test
sub
push
jbe
inc
frstor
or
mov
add
ret
mov
(bad)
add
sub
iret
xchg
or
pusha
rcl
aas
lahf
jmp
jmp
jmp
rol
mov
in
add
sbb
loopne
(bad)
jmp
push
pop
sbb
sub
sbb
aam
mov
scas
push
add
push
add
outs
inc
or
adc
sbb
add
inc
dec
jmp
inc
push
add
xor
movs
push
add
inc
mov
push
dec
cld
jp
mov
ds
pop
fstp
jne
stc
pop
push
jo
xor
jmp
pusha
pusha
pusha
inc
mov
dec
xchg
or
je
adc
movs
push
sbb
cmp
daa
dec
inc
popf
jne
test
data16
lea
mov
mov
jae
pop
cwde
sbb
adc
sub
call
(bad)
push
lock
or
push
(bad)
pushw
or
imul
xor
inc
pop
cmps
out
xchg
lea
push
mov
clc
dec
js
pop
addr16
inc
xchg
push
iret
mov
dec
lea
mov
cmps
(bad)
inc
and
mov
lods
pop
outs
pop
xchg
xor
or
mov
push
and
leave
je
xor
shl
push
not
push
test
or
or
xor
cmp
pop
retw
jge
xor
pop
outs
mov
rcl
inc
jle
mov
mov
add
mov
fistp
pop
sbb
je
xchg
and
hlt
movs
push
xchg
cmp
jo
inc
add
cmp
mov
cmp
ret
ins
push
loope
sbb
call
aad
xor
add
adc
add
mov
mov
pop
adc
or
jne
sbb
jo
call
cmp
jg
ror
fcom
test
inc
push
xor
pop
ret
dec
push
add
mov
aam
sbb
retf
push
and
push
movs
and
jno
mov
out
push
adc
push
or
mov
int3
(bad)
dec
sbb
dec
or
pop
add
js
add
and
in
add
push
jo
add
popf
movs
mov
pop
pop
aas
pop
test
mul
iret
adc
cmps
push
pop
mov
movs
je
mov
push
lock
sub
adc
xchg
cwde
test
adc
push
mov
shr
push
pop
adc
repnz
mov
or
movs
pop
and
jb
retf
aaa
add
jmp
inc
add
add
shl
cmp
clc
xor
pusha
jmp
outs
aad
xor
loopne
rcl
or
or
and
pop
push
jg
(bad)
in
inc
out
push
adc
add
test
xor
xor
jbe
arpl
ror
inc
push
adc
inc
adc
pop
shl
ss
cmp
inc
push
inc
pop
outs
jge
ret
iret
nop
push
adc
sbb
pop
add
push
jg
add
ja
and
enter
pop
repnz
cli
add
dec
push
sbb
mov
outs
mov
sbb
xor
sbb
je
sar
or
bound
cli
pop
jmp
add
lods
push
add
arpl
jb
jmp
cmp
add
test
and
popf
dec
fild
sbb
push
xchg
daa
clc
out
or
fs
sti
gs
sbb
mov
add
sub
push
ds
jle
push
cdq
mov
sbb
loopne
jb
jmp
add
fisttp
mov
cmp
popa
inc
test
or
inc
xor
iret
aad
pop
push
mov
xor
retf
inc
stos
loopne
and
rcr
inc
and
adc
or
inc
imul
adc
or
aam
adc
test
inc
cmp
add
lock
ret
xchg
rol
aam
add
lahf
xchg
mov
cmps
lea
sub
lock
jne
retf
inc
and
add
and
fistp
inc
add
xchg
adc
cmps
fwait
shl
dec
dec
test
inc
movs
xchg
mov
and
call
dec
loope
mov
sub
repz
or
mov
mov
add
jno
xor
push
mov
add
imul
push
mov
pop
add
sbb
and
out
out
pusha
gs
add
push
jmp
or
jnp
and
jl
les
mov
mov
ins
inc
xor
mov
jg
mov
daa
inc
je
in
xchg
adc
fadd
cli
clc
mov
jmp
retf
jne
cmp
(bad)
and
push
inc
aaa
add
push
mov
sti
inc
or
jne
int
inc
lods
mov
xchg
and
in
cmps
sbb
inc
add
test
cmc
add
jb
mov
or
cmp
fist
push
nop
sub
leave
add
mov
mov
mov
mov
leave
pushf
add
pop
inc
and
pop
dec
test
mov
test
ret
dec
or
cmp
mov
fs
dec
js
lea
das
dec
sti
ins
daa
test
adc
jle
mov
mov
daa
adc
or
outs
pop
cmc
ja
test
test
call
dec
jo
and
xchg
js
rcr
or
retf
sahf
clc
cmps
adc
sar
mov
sar
call
jnp
ret
pop
pop
cwde
inc
fstp
push
fnstcw
jmp
inc
shl
jle
ficomp
fs
loope
push
or
jmp
test
ret
jle
jmp
mov
aaa
in
je
jl
daa
adc
mov
xchg
xor
add
fsub
mov
dec
(bad)
fsub
sub
je
sbb
push
xchg
icebp
xor
mov
mov
xlat
cli
pop
fisttp
sbb
lea
push
push
adc
loope
pushf
lea
add
adc
cmc
aam
sub
fist
fcomp
dec
and
nop
push
cli
and
call
mov
lock
ss
pop
(bad)
push
push
mov
and
inc
cmps
and
pop
sub
shl
mov
imul
outs
xchg
inc
jne
movs
add
sbb
gs
push
sti
cmp
ret
xor
clc
and
out
add
push
and
or
inc
fs
cmps
pop
or
inc
scas
push
or
push
jle
out
adc
dec
imul
jae
push
or
push
retf
ds
or
adc
das
xor
push
or
or
add
cmp
dec
or
push
jle
mov
add
sahf
mov
push
jecxz
and
push
stos
adc
sub
add
mov
(bad)
cmp
jno
dec
cmp
pop
out
inc
dec
mov
std
mov
sub
pop
test
pusha
test
push
or
xchg
lods
dec
inc
and
or
pop
push
jnp
je
jg
cld
movsx
inc
ds
stos
arpl
out
into
aam
add
shl
push
aad
xlat
fwait
jo
out
scas
pop
retf
icebp
pcmpgtw
cmp
sbb
pop
inc
movs
iret
jmp
cmp
lea
dec
mov
mov
shr
lea
dec
imul
mov
add
out
cdq
loope
and
pop
icebp
pop
push
arpl
cmps
loope
mov
pop
add
imul
cmp
inc
xor
xchg
(bad)
arpl
dec
mov
movs
es
les
xchg
and
je
inc
ret
and
adc
mov
adc
sti
push
jmp
push
xor
sbb
es
sub
jge
sub
adc
test
xchg
adc
and
add
xor
test
push
cmp
cmp
cdq
push
cmp
call
gs
inc
xor
outs
jae
shl
pusha
inc
xchg
pusha
dec
jne
cmps
or
mov
add
(bad)
xor
jnp
adc
mov
cmps
hlt
sbb
xchg
movmskps
cdq
push
shr
ud0
mov
arpl
mov
add
or
or
invd
or
push
sbb
clc
mov
xchg
add
and
pop
rcl
xchg
dec
push
mov
xor
mov
add
add
ret
sbb
adc
hlt
(bad)
in
cmp
bound
add
add
push
xchg
push
add
sbb
mov
es
loopne
iret
or
and
enter
push
add
dec
jne
add
add
push
xchg
or
or
fwait
sbb
pop
test
xchg
fadd
out
dec
or
aam
iret
sar
and
loopne
jbe
push
push
mov
jmp
movs
cmc
add
pop
push
daa
adc
or
jbe
daa
mov
push
xchg
or
adc
fs
inc
pop
pop
sbb
mov
jmp
mul
pusha
aaa
xor
iret
test
pop
pop
ja
mov
loope
push
sbb
test
jne
(bad)
call
movs
ins
adc
test
xchg
jb
sub
add
cmps
xlat
or
dec
scas
sub
sub
ror
jae
mov
cmp
sub
sub
sub
dec
or
adc
push
loope
popf
je
or
sbb
sub
pop
mov
stc
mov
inc
sbb
jg
and
dec
sub
or
les
or
add
and
jnp
(bad)
in
je
sub
and
inc
jge
lea
adc
inc
or
les
push
fist
jle
add
xchg
push
cmps
jmp
mov
jmp
mov
cmp
add
lods
push
mov
scas
and
cmp
add
and
sar
and
mov
test
or
or
and
or
rcl
add
mov
push
mov
retf
xchg
cmp
cs
mov
push
or
pop
fcmovnbe
(bad)
and
push
mov
or
push
jo
int
das
mov
jmp
or
and
adc
sar
add
dec
imul
sbb
adc
stc
mov
and
or
fdivr
adc
sub
push
rol
dec
sub
mov
enter
add
jecxz
mov
daa
add
mov
iret
inc
or
mov
lahf
stc
mov
adc
aam
adc
mov
inc
dec
push
push
ins
mov
repnz
(bad)
mov
and
loopne
mov
(bad)
jle
sbb
or
push
mov
and
sbb
push
sahf
fdiv
int3
cmp
div
sbb
xchg
and
clc
cmp
cmp
xchg
mov
or
xor
mov
sub
cmps
lds
push
smsw
inc
cs
add
adc
pop
inc
dec
mov
ss
or
add
(bad)
ja
sbb
add
cmp
movs
mov
add
add
sti
cmp
stos
dec
push
jmp
mov
adc
inc
add
mov
test
jge
ja
jae
dec
mov
imul
cs
sub
je
dec
sub
and
je
jmp
out
or
fmul
mov
sbb
xor
sub
adc
mov
xchg
pop
and
mov
pusha
cs
dec
in
dec
xchg
stos
dec
xor
push
dec
xor
rcr
mov
jge
in
in
or
or
dec
add
stos
lock
fimul
cmc
cmp
push
call
inc
sub
adc
jbe
or
dec
retf
jecxz
sahf
pop
nop
inc
or
sbb
aaa
mov
scas
xchg
push
sub
jle
cld
add
loopne
or
js
enter
ret
or
cli
pop
adc
xor
add
in
test
cmps
movs
push
imul
pop
dec
cmc
add
jo
cmp
mov
je
mov
pop
mov
mov
sub
add
push
pusha
ja
std
mov
add
push
mov
nop
gs
nop
gs
cmp
sbb
xchg
jecxz
daa
js
outs
movs
int
retf
adc
(bad)
push
sbb
mov
xor
fs
mov
mov
lock
add
push
adc
ret
and
add
inc
pushf
add
xchg
or
iret
sbb
mov
loop
push
cmp
add
add
xchg
sub
xor
sbb
inc
in
push
jno
jno
shr
ret
inc
push
daa
sub
ja
xor
div
or
sub
lahf
add
inc
xor
sbb
les
mov
inc
push
ins
push
loopne
adc
or
jmp
and
push
aad
sub
outs
cmp
xchg
mov
test
cli
popa
dec
in
fmul
add
je
jge
data16
and
inc
fmul
out
dec
movs
loopne
adc
fimul
mov
fdiv
xchg
sub
sbb
movs
adc
arpl
test
cmc
dec
fs
inc
xchg
(bad)
jmp
jecxz
test
mov
nop
and
adc
inc
ret
jne
and
dec
shr
push
jns
rol
sbb
adc
or
push
daa
inc
adc
ss
xchg
adc
or
mov
popa
adc
push
mov
inc
sub
popf
dec
(bad)
das
dec
or
test
pusha
add
xchg
(bad)
nop
add
add
adc
adc
add
dec
jne
mov
ss
xchg
push
mov
inc
movntps
pop
jns
push
in
xor
fwait
sbb
ficomp
js
mov
xlat
inc
sar
dec
movs
or
or
mov
fnstenv
pop
push
nop
out
je
add
adc
add
add
add
cmp
inc
jne
or
mov
stos
lahf
retf
or
add
xchg
xor
cmp
in
add
out
jns
call
or
lea
mov
cmps
inc
movs
push
mov
fld
push
sbb
push
dec
jg
sub
test
pop
adc
sbb
test
push
hlt
add
adc
add
adc
or
add
or
movs
pop
sub
ins
mov
and
pusha
pop
dec
xor
or
push
adc
call
jbe
jnp
jbe
mov
stc
mov
je
push
add
cmp
(bad)
push
jns
sub
xchg
mov
sub
arpl
and
push
or
mov
add
pop
mov
xor
rcr
and
loope
and
mov
dec
cmp
sbb
add
mov
leave
test
cmp
xchg
add
das
dec
or
clc
add
xchg
pop
pop
pop
pop
mov
repnz
cmp
pop
hlt
cmp
sbb
stos
and
xchg
mov
add
mov
(bad)
test
push
lds
sub
dec
in
nop
(bad)
xor
daa
pushf
pop
cmp
nop
mov
mov
jbe
mov
(bad)
cwde
pop
pushf
cmp
jle
pop
sub
push
inc
call
inc
js
popf
cmps
dec
cmp
dec
call
movs
fst
inc
sub
cmp
mov
cmp
jge
cmp
jecxz
push
loope
push
adc
add
xor
iret
add
jb
mov
bound
mulps
push
dec
jb
mov
cmps
xor
test
push
add
cmp
adc
or
loope
adc
add
adc
cld
xchg
mov
pop
add
push
inc
pop
lock
adc
cmp
repnz
sub
ret
push
mov
or
iret
cmp
and
cld
or
jl
lock
movs
jecxz
add
push
push
or
pop
pop
add
pop
mov
ins
pop
lock
dec
dec
mov
xadd
xchg
or
jnp
movs
xchg
enter
and
mov
xchg
xor
adc
adc
mov
push
js
pushf
and
sub
call
and
ror
add
xchg
rol
hlt
stos
jnp
jmp
add
dec
stos
sbb
je
jmp
and
inc
jecxz
or
mov
stos
add
or
loope
outs
pop
cmc
cmps
xchg
lea
sub
ja
ins
lods
sbb
pop
(bad)
cmp
daa
and
addr16
pop
stos
movs
ss
mov
add
hlt
fsub
push
mov
mov
fs
adc
push
push
cmp
test
nop
xor
nop
loopne
dec
fisttp
pop
mov
es
ds
adc
adc
xor
mov
stos
dec
(bad)
cmp
or
aam
js
fs
in
adc
or
mov
sub
push
cli
or
inc
dec
pop
ret
out
ret
jb
ja
cmp
ja
je
pop
or
pop
ins
pop
in
dec
rcl
sbb
and
cs
(bad)
pop
cmc
mov
ins
fild
ret
pop
pop
or
dec
daa
test
lods
sbb
popa
inc
adc
sub
and
pop
and
inc
ret
inc
ins
fld
fisttp
mov
inc
mov
add
push
dec
das
add
lock
sbb
add
add
fadd
cdq
mov
xchg
ret
retf
jo
sub
test
cmp
mov
test
add
sub
add
sar
sbb
test
sub
add
sub
push
(bad)
(bad)
scas
cmps
adc
mov
scas
adc
dec
adc
adc
and
dec
pop
daa
dec
jbe
mov
dec
dec
movs
dec
add
mov
(bad)
or
sbb
nop
adc
dec
or
push
adc
sbb
inc
fs
and
sbb
and
inc
loopne
inc
adc
cs
or
pop
shr
leave
mov
push
and
inc
(bad)
idiv
sbb
in
outs
push
js
xchg
push
mov
pop
push
jmp
mov
push
push
clc
adc
sbb
out
dec
cmp
pushf
add
dec
adc
test
stc
xchg
arpl
and
mov
loopne
push
add
mov
xchg
push
sub
mul
stc
ret
nop
(bad)
pop
xor
sbb
imul
jmp
adc
pusha
fcmove
xchg
cmp
pop
add
xchg
add
out
jmp
loopne
ret
push
loope
and
data16
or
jg
and
xchg
lods
mov
cmp
lods
sbb
pop
das
fldcw
popa
nop
scas
cli
adc
out
fs
push
push
cmp
jne
lods
xor
mov
inc
push
jbe
ds
inc
iret
inc
(bad)
rcl
pop
xchg
cmp
jo
dec
inc
jmp
mov
and
adc
fwait
sbb
pop
xchg
sub
jmp
mov
sti
jmp
iret
stos
push
fs
add
les
pushf
ret
or
popa
xlat
pop
jp
loopne
adc
lock
inc
xor
fmul
sti
ja
push
push
adc
and
shr
pop
add
jmp
lock
mov
nop
push
call
lds
cmp
adc
or
adc
(bad)
daa
sbb
sti
or
adc
xor
mov
sbb
inc
inc
outs
adc
sub
(bad)
(bad)
popa
xchg
hlt
test
or
xor
mov
(bad)
cmp
clc
xor
hlt
out
mov
loopne
sbb
inc
inc
call
cmps
lock
mov
jae
lock
test
sub
jl
std
mov
leave
cmp
(bad)
cmp
call
push
call
cs
jmp
inc
pusha
xor
inc
jbe
fadd
(bad)
out
ret
daa
mov
and
mov
dec
xor
adc
dec
pop
test
inc
arpl
sbb
mov
adc
jne
adc
icebp
(bad)
cmp
mov
sbb
ins
in
jmp
test
or
sub
jmp
or
jo
imul
jge
repz
and
pop
fistp
addr16
push
push
and
loope
inc
lock
add
pop
cmp
jge
jo
add
dec
dec
push
pop
ins
add
push
jmp
mov
pop
jae
in
addr16
add
or
xchg
nop
push
and
rol
mov
add
mov
loope
dec
(bad)
adc
rcr
pusha
lds
and
mov
sbb
sbb
cli
and
or
sub
xor
arpl
out
int3
and
les
arpl
and
dec
fiadd
(bad)
cwde
jle
cdq
inc
cmps
pop
cmc
inc
sbb
push
into
mov
and
push
mov
add
fistp
fsub
and
dec
add
inc
push
pop
ror
shl
adc
nop
push
(bad)
mov
adc
cmp
mov
or
mov
mov
add
inc
sbb
fmul
pop
pop
dec
jo
test
loop
bound
adc
bound
ret
fstp
and
xor
sbb
add
mov
pop
jecxz
loopne
cwde
es
add
lock
dec
mov
mov
pop
ja
call
fisttp
xor
or
cmp
out
add
dec
and
jmp
mov
test
inc
inc
mov
test
xor
and
or
mov
mov
in
hlt
add
es
popf
dec
add
add
add
dec
fsubr
inc
push
dec
ins
cs
lock
scas
retf
ret
pop
cmp
sbb
pop
push
clc
or
rcr
pop
mov
in
cmp
or
or
cmp
pop
aaa
or
mov
clc
fs
mov
aam
(bad)
or
or
call
inc
inc
pop
test
mov
mov
push
pop
mov
and
adc
fs
mov
sub
mov
xor
push
call
cmps
adc
jp
inc
push
cwde
jmp
inc
ja
daa
(bad)
dec
pop
sti
jge
add
cmp
rcl
ror
inc
nop
cmp
push
loopne
inc
or
xor
fsub
jo
jg
cs
inc
jp
mov
add
cmc
jmp
add
xchg
(bad)
mov
fadd
adc
inc
jge
sub
sti
ins
sbb
mov
fsub
test
je
hlt
pop
add
sbb
loopne
or
inc
jo
(bad)
jle
add
and
add
xchg
fimul
sbb
rol
cwde
ror
add
inc
inc
and
popf
or
test
fld
inc
inc
daa
(bad)
sbb
repz
mov
push
or
and
or
dec
mov
ret
push
cmp
push
jnp
mov
mov
or
mov
push
or
test
(bad)
(bad)
jecxz
dec
pop
mov
jmp
mov
mov
rcl
cmps
mov
or
push
lahf
pusha
out
jp
push
into
push
mov
push
idiv
add
sbb
loopne
mov
mov
lahf
loopne
sub
not
gs
cmp
je
ret
(bad)
inc
aaa
pop
ret
dec
loope
cmp
mov
dec
or
inc
adc
sub
inc
daa
neg
scas
or
inc
dec
and
dec
and
cmc
xor
pop
dec
sub
or
pop
add
sbb
pop
fs
call
pusha
push
gs
jmp
xor
sbb
add
or
add
inc
ins
inc
mov
test
cmp
ret
adc
ss
xor
stc
ja
adc
cmp
lock
les
loop
sbb
push
push
inc
or
inc
jmp
sbb
push
cli
loopne
scas
xor
adc
aas
pop
adc
push
mov
adc
(bad)
push
rol
fld
jmp
mov
xor
mov
inc
sub
daa
fnstcw
rcl
mov
rol
or
fiadd
jne
sbb
sub
pusha
or
or
inc
push
push
adc
and
mov
cdq
push
test
sbb
and
sbb
movhps
aad
push
pop
test
in
inc
icebp
lods
pop
mov
adc
xor
clc
sub
or
fadd
xor
add
stos
xchg
add
dec
lock
mov
in
daa
jno
add
add
pop
mov
xchg
pop
sbb
sbb
xor
add
aaa
mov
cmp
mov
xchg
push
ins
add
and
mov
loopne
movzx
jg
(bad)
jne
add
add
cmp
xor
push
pop
or
fidivr
sbb
adc
inc
lock
clc
aaa
mov
in
mov
sub
aas
adc
ja
retf
xor
pop
imul
outs
jecxz
mov
(bad)
jg
pop
neg
jmp
jg
cmp
ss
loopne
sbb
(bad)
loop
add
add
mov
ror
sti
jmp
cmc
adc
adc
cmp
xor
cmp
dec
push
adc
jo
data16
pop
inc
call
xor
add
push
mov
inc
adc
lods
das
add
jg
mov
jb
mov
fisubr
mov
push
add
cdq
add
lods
cwde
movs
and
sbb
xor
shl
adc
pop
cwde
lods
movs
push
shr
push
xchg
mov
mov
dec
jge
jecxz
xchg
or
jnp
or
and
sub
push
daa
aaa
and
aam
add
in
push
cld
pop
mov
add
imul
push
jle
jge
pusha
inc
add
sbb
popf
dec
mov
or
ja
leave
cmps
jecxz
add
mov
adc
sbb
hlt
mov
add
sbb
cmp
fwait
icebp
push
in
aas
mov
js
push
mov
imul
jns
adc
adc
or
fcomp
je
and
push
dec
les
ret
push
pop
inc
sbb
lock
xchg
push
mov
adc
pop
or
mov
test
fcom
fucomip
and
cmp
shr
or
or
sub
dec
clc
cmp
add
dec
outs
addr16
and
or
imul
outs
or
push
pop
daa
shr
cmp
push
add
and
fs
add
repnz
sti
add
sub
add
imul
repnz
je
jle
pop
push
cmp
sbb
sub
mul
daa
add
scas
sub
adc
sub
test
inc
or
dec
inc
test
inc
movs
add
xor
js
dec
inc
sub
push
imul
add
call
push
jno
iret
add
sub
or
or
cld
loope
rol
jle
pop
das
push
add
or
adc
dec
retf
and
and
sbb
push
(bad)
in
sbb
jnp
das
adc
or
adc
cmp
(bad)
pusha
ja
test
inc
mov
clc
test
sub
sbb
jmp
sbb
xor
enter
add
inc
test
and
adc
push
jmp
push
xor
call
lods
outs
inc
and
dec
sbb
xchg
mov
or
xchg
and
inc
imul
jo
rol
add
push
fild
xchg
push
push
loopne
inc
inc
adc
jmp
shl
pop
or
inc
repz
(bad)
dec
dec
xchg
nop
inc
hlt
scas
add
mov
call
inc
adc
cmp
jne
jmp
or
test
sub
mov
lock
add
sub
inc
inc
adc
call
push
ss
inc
dec
faddp
in
fdiv
pop
lock
cmp
or
push
cdq
mov
in
(bad)
(bad)
setnp
sbb
jmp
pop
ds
mov
(bad)
mov
popa
out
cmp
push
dec
cmp
mov
out
or
clc
dec
cld
mov
sub
push
inc
jge
xor
mov
jo
xor
or
shr
clc
jecxz
jecxz
sbb
mov
outs
sbb
adc
sub
push
push
(bad)
cmps
push
jae
sbb
or
or
ss
adc
sub
imul
dec
cld
cmp
push
clc
add
ret
je
cld
or
sbb
out
and
sar
jns
adc
jmp
inc
loop
mov
or
inc
hlt
sub
xchg
or
jge
lahf
add
sbb
mov
rol
sbb
lock
pop
xchg
inc
xchg
mov
inc
pop
pop
shl
and
icebp
adc
mov
xlat
sbb
jae
dec
push
pop
push
outs
rcl
push
or
js
test
rol
mov
fs
mov
dec
add
sbb
and
inc
sbb
test
jge
jmp
or
add
stos
out
sub
add
push
add
inc
mov
fdivr
push
inc
div
clc
mov
add
aam
les
adc
repnz
lock
pop
arpl
pop
(bad)
clc
add
and
or
fs
and
inc
adc
pusha
movs
es
sub
fdivr
dec
clc
mov
pop
push
call
push
inc
movs
sbb
cwde
push
cmp
jo
or
mov
add
lock
imul
push
pop
add
pop
neg
inc
add
mov
out
movs
inc
push
adc
mov
test
push
or
loope
push
push
inc
or
ins
fidiv
das
push
or
push
pop
or
cmp
jne
sbb
imul
pop
fmul
xor
xchg
push
loope
xor
std
(bad)
fld
push
(bad)
mov
nop
ret
popa
inc
sbb
or
push
das
sbb
or
test
lock
rol
ja
adc
pop
jle
(bad)
adc
add
push
mov
inc
cmps
inc
test
add
push
sbb
inc
inc
xor
add
jg
mov
xchg
jl
push
adc
retf
mov
xor
std
dec
clc
add
jmp
xor
dec
xor
add
mov
test
mov
movs
aad
xorps
push
or
sub
adc
inc
dec
jne
lahf
mov
clc
xchg
fs
stos
dec
sub
sbb
fadd
punpckhwd
mov
and
sub
sbb
stos
aas
clc
xchg
and
sbb
test
jle
mov
mov
or
sub
loop
inc
jmp
jbe
sub
mov
or
ss
dec
xor
sbb
pop
pushf
push
daa
movs
sub
cmp
xor
popa
push
add
mov
cwde
jecxz
or
ja
inc
dec
xchg
xor
aad
inc
mov
leave
jecxz
xchg
inc
lea
out
xor
or
mov
inc
pop
inc
and
jg
out
mov
inc
js
or
cmp
in
sub
sahf
mov
mov
cmp
add
psadbw
js
in
hlt
in
mov
adc
hlt
lahf
push
push
inc
push
xor
xor
add
inc
inc
dec
fisttp
push
es
mov
jo
sbb
addr16
sahf
inc
and
dec
pop
inc
dec
cdq
dec
inc
and
dec
jbe
nop
dec
xchg
dec
add
outs
xor
mov
cmp
jne
pop
push
jnp
adc
push
dec
sbb
push
jmp
pop
or
ret
add
xchg
or
js
retf
imul
mov
ret
jmp
adc
addr16
adc
ss
push
pop
adc
add
xor
dec
clc
mov
inc
push
xchg
add
push
push
pusha
ja
(bad)
fcom
stc
clc
daa
les
mov
adc
inc
pop
mov
inc
pop
retf
and
mov
cmp
outs
rcl
inc
add
xchg
pop
neg
mov
push
adc
mov
cs
out
mov
push
and
add
arpl
and
and
sub
inc
or
out
pop
sbb
sbb
xor
push
dec
add
xchg
jo
jne
sbb
fs
test
call
cmps
inc
inc
and
(bad)
loopne
add
test
lods
adc
inc
cld
(bad)
aam
inc
or
add
pusha
xchg
in
addr16
std
adc
add
test
sahf
pop
or
ret
mov
mov
int
and
mov
push
adc
dec
ret
mov
pusha
sub
pop
sub
je
pusha
ret
popa
xor
cmp
jb
arpl
daa
adc
mov
and
sbb
jecxz
ins
add
popf
nop
pop
daa
jne
cwde
cmp
iret
clc
sti
adc
scas
sub
or
or
sbb
mov
mov
inc
sbb
cmc
cwde
add
push
std
mov
xchg
push
inc
pop
jle
das
mov
jo
aas
xor
lea
inc
inc
and
retf
pop
jp
scas
add
into
outs
pop
cmp
lock
loopne
adc
jge
jle
ror
add
add
mov
mov
test
sub
mov
sbb
jmp
add
(bad)
pop
ret
xlat
fsubr
xor
rcr
pop
inc
fdiv
xor
unpckhps
add
test
xchg
fwait
adc
lods
lods
out
mov
push
push
arpl
and
cs
aas
es
cmp
cs
or
sub
sub
ins
out
pop
ret
cdq
inc
sbb
scas
lock
ror
(bad)
cmp
pop
sub
loope
lock
(bad)
sub
mov
mov
mov
adc
sbb
pop
cmp
add
and
or
sbb
adc
inc
bound
sbb
in
aad
sub
or
and
sbb
dec
pop
retf
and
sub
jmp
push
inc
jg
push
lea
mov
inc
mov
add
adc
inc
imul
mov
jecxz
loopne
test
push
movs
pop
ltr
dec
or
pop
sbb
jo
aas
add
xchg
ss
add
mov
popf
sub
idiv
inc
push
jl
pop
mov
std
retf
fldcw
sub
jg
jmp
mov
mov
mov
push
push
jg
push
retf
cwde
xor
mov
fistp
add
cmp
sub
and
jge
cmp
dec
dec
sbb
jg
loop
dec
inc
jno
jns
sub
sbb
jne
xchg
fild
xchg
mov
sbb
dec
in
add
jnp
lods
jns
mov
pop
add
cmp
mov
shl
test
mov
sub
cmp
rol
jle
lea
cmp
and
adc
mov
jge
jmp
xor
mov
cdq
inc
add
popf
cmp
jb
xchg
sbb
outs
mov
add
hlt
lahf
sahf
jo
push
aaa
cwde
jne
dec
add
sbb
or
sbb
sbb
inc
xor
pop
and
sbb
or
sahf
imul
sbb
push
pop
adc
sti
leave
jmp
or
clc
jmp
inc
in
repnz
mov
jle
xchg
sub
sub
popa
xchg
jecxz
jo
ins
sbb
cmp
int
js
mov
pop
ret
mov
adc
or
inc
add
xor
dec
es
test
mov
xor
add
adc
pop
pop
adc
adc
cmp
dec
add
sbb
adc
inc
push
dec
inc
xor
push
xor
fidiv
or
retf
mov
mov
xor
or
jnp
cdq
daa
and
jp
jbe
movs
mov
pop
enter
lods
mov
xchg
xchg
xlat
jmp
lock
aas
cld
call
call
lods
adc
fsubr
inc
pop
mov
loopne
inc
inc
js
lea
add
daa
add
pop
sbb
lods
push
(bad)
push
cmps
data16
pushf
movs
cmps
dec
push
popa
leave
shl
shr
jmp
mov
rol
or
adc
popa
add
sbb
dec
or
pop
dec
std
adc
jge
inc
or
sbb
add
pop
pop
inc
clc
mov
mov
fimul
pop
and
push
ret
mov
sbb
xor
mov
daa
xor
sbb
mov
sub
adc
rol
inc
mov
daa
add
dec
push
lea
mov
ror
and
sbb
and
cwde
and
adc
pop
add
add
daa
mov
or
jmp
dec
dec
fisttp
and
or
and
push
mov
loopne
popa
test
sbb
jmp
scas
adc
ret
cs
cmp
or
push
mov
adc
add
xor
adc
and
pop
lock
(bad)
inc
in
push
ss
leave
sub
hlt
aas
xchg
jp
push
sbb
cld
es
mov
aam
dec
or
and
push
out
fs
adc
push
jnp
mov
data16
aaa
and
dec
in
iret
(bad)
xor
cld
inc
xchg
or
add
add
movs
jb
or
push
mov
push
mov
js
out
sbb
cmc
push
shl
test
fwait
mov
pop
and
push
xor
mov
dec
dec
dec
dec
push
aaa
dec
dec
fistp
push
dec
je
dec
dec
inc
dec
ins
popf
in
hlt
ins
inc
gs
pop
push
fldenv
or
inc
xchg
mov
sbb
jne
das
push
test
retf
cmps
push
ins
jo
mov
das
inc
in
inc
cmp
movs
out
and
pop
mov
dec
jae
jbe
fistp
data16
jno
mov
outs
xchg
or
adc
aam
xor
mov
call
add
add
push
mov
push
int
jecxz
fiadd
lods
inc
(bad)
nop
xchg
test
sti
sbb
jl
or
add
test
test
mov
jbe
ret
(bad)
mov
push
adc
mov
sbb
into
or
adc
inc
jecxz
les
ret
sar
js
dec
add
add
repnz
and
cmp
push
mov
nop
pop
jnp
cmp
cmp
data16
imul
mov
push
dec
pop
mov
pop
and
mov
push
lods
sub
or
pop
jns
ja
push
dec
ret
inc
sar
pop
and
adc
jns
add
das
adc
mov
xor
mov
mov
push
inc
adc
add
repnz
scas
movs
jns
and
or
sbb
and
fidivr
mov
mov
sub
sahf
jbe
jb
js
aas
add
inc
test
and
jb
inc
lods
jno
adc
inc
cwde
adc
push
loopne
mov
push
xor
pop
popa
xchg
in
sbb
push
or
push
rol
sti
add
sbb
inc
pop
(bad)
imul
pop
and
or
sbb
pop
repnz
dec
das
xchg
mov
and
ret
xor
retf
and
mov
pop
dec
add
jle
jo
fidivr
mov
pusha
clc
movs
xchg
pusha
inc
clc
loopne
mov
xchg
adc
add
and
test
pop
(bad)
inc
fxch
ds
and
iret
add
sti
mov
(bad)
jmp
clc
add
xchg
add
movs
ret
inc
popa
aad
add
push
ds
add
jl
cmp
leave
or
sbb
rol
jo
out
and
mov
push
dec
add
xor
(bad)
pop
das
jo
je
push
adc
or
and
jne
pop
mov
push
pop
mov
sbb
or
add
jl
(bad)
dec
dec
dec
dec
jle
pusha
popa
dec
dec
dec
dec
bound
gs
dec
dec
dec
addr16
dec
dec
dec
push
ins
ins
dec
dec
dec
dec
outs
outs
push
push
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
push
pop
pop
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
pop
pop
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
dec
dec
dec
dec
xor
xor
dec
dec
dec
dec
ss
cmp
dec
dec
dec
dec
cmp
cmp
dec
dec
dec
dec
ds
and
dec
dec
dec
dec
and
and
test
je
push
pop
sub
xchg
scas
sub
daa
(bad)
pushf
xlat
jne
imul
scas
or
pop
fidiv
ja
push
es
(bad)
cmp
jbe
and
pop
pop
dec
mov
adc
adc
add
mov
lods
push
test
cmp
or
inc
pop
push
mov
shr
cmp
jmp
xor
mov
neg
add
pop
dec
adc
mov
mov
(bad)
clc
invd
push
push
fstp
cmps
or
xchg
cmps
mov
fiadd
lock
adc
and
mov
jnp
add
inc
add
jp
fcom
add
pop
fsub
or
pop
xchg
push
add
cmp
bound
pop
sti
fimul
scas
outs
add
dec
dec
add
dec
adc
aaa
fdivr
pusha
inc
mov
adc
or
add
ret
and
sub
add
fisubr
nop
add
xchg
frstor
sub
pop
fcmovnb
add
out
add
xchg
test
dec
push
add
add
gs
inc
imul
mov
cmp
rcr
xchg
adc
adc
pop
xor
xchg
sbb
push
cld
and
out
push
and
push
lods
pop
ret
cmps
nop
nop
sbb
adc
arpl
push
dec
fild
adc
aas
dec
or
in
jle
sub
push
add
push
push
push
fdivr
loopne
jecxz
pop
sub
daa
push
add
cld
push
je
push
addr16
pop
pop
das
mov
adc
fdiv
pop
cmp
cmp
pop
push
out
push
xchg
daa
inc
push
call
clc
sbb
push
push
push
adc
jo
das
jmp
aas
test
cmp
movs
and
lock
adc
inc
clc
leave
mov
imul
dec
push
dec
push
ds
cmp
cmp
push
push
call
adc
inc
push
sub
inc
adc
dec
jne
xor
mov
xor
les
adc
or
(bad)
fstp
push
out
cmp
adc
cmp
sub
mov
cmp
add
add
xchg
outs
lods
inc
or
ret
sub
add
xchg
xchg
bound
test
push
shl
push
scas
rol
pop
enter
add
add
jg
into
xchg
inc
fidiv
pop
ret
daa
mov
xor
das
test
add
test
mov
in
mov
adc
sar
adc
push
mov
and
(bad)
xchg
fld
es
mov
es
xlat
bound
or
push
in
xor
add
paddusw
or
ret
std
jmp
add
stos
pop
sbb
outs
add
rcr
adc
and
mov
add
into
adc
cmps
fadd
mov
popf
or
push
sub
add
inc
xor
loop
push
hlt
lahf
hlt
push
out
mov
fadd
daa
jbe
cmovb
inc
dec
les
adc
adc
jmp
sbb
mov
mov
jl
jmp
leave
pop
mov
inc
jl
sar
outs
dec
cmp
movs
jge
and
adc
xchg
cmp
adc
jle
or
add
jge
nop
pop
cld
jg
push
fbstp
push
xchg
jo
cli
dec
add
frstor
gs
div
fs
cwde
and
gs
add
inc
pop
stc
(bad)
push
inc
add
adc
add
push
push
mov
ror
add
or
fidiv
jo
mov
dec
inc
cmp
into
imul
or
cmp
mov
dec
enter
mov
push
push
jns
iret
inc
cs
inc
xchg
ins
les
xchg
mov
mov
cmp
scas
sbb
ret
out
add
sbb
call
nop
scas
inc
add
push
push
push
inc
dec
jne
imul
imul
sbb
jnp
mov
ret
sbb
imul
add
lds
je
test
out
imul
mov
lahf
mov
fmul
je
test
movs
test
ja
lahf
dec
mov
mov
or
adc
adc
in
pushf
pop
mov
cli
(bad)
cli
inc
cmp
or
jns
popa
adc
inc
ror
add
xor
call
in
jecxz
mov
repnz
jne
lea
pop
test
stc
lea
sti
daa
push
inc
(bad)
and
mov
shr
add
rep
mov
and
rep
pop
pop
pop
ret
inc
fsincos
jmp
cmp
jb
je
std
lea
lea
dec
pop
mov
out
add
jmp
cld
pop
lea
sub
pusha
pop
pop
pop
push
push
cmps
and
lahf
push
mov
(bad)
sub
test
mov
lea
inc
add
push
imul
inc
and
dec
je
xchg
pusha
int
adc
daa
or
adc
push
es
outs
lods
mov
adc
adc
sub
lea
xor
loopne
jne
les
adc
pop
add
sahf
or
inc
pop
or
or
data16
add
and
(bad)
ds
xor
dec
xor
lea
jge
pop
adc
fistp
not
sub
xchg
push
ret
push
adc
retf
pop
or
mov
cmp
je
and
pop
add
jge
add
and
adc
sbb
jl
sub
mov
aaa
call
or
add
add
(bad)
sub
clc
lods
pusha
test
push
or
not
add
mov
jmp
jmp
(bad)
enter
shl
shl
test
jne
sahf
js
sbb
push
test
adc
std
lds
pop
sbb
inc
dec
and
loope
inc
bound
dec
sub
loop
and
lea
jecxz
shr
mov
xor
dec
jne
xor
jmp
sub
ret
out
and
add
fldenv
add
mov
ins
rol
add
ret
pop
out
ds
push
inc
and
dec
js
lods
scas
sbb
jecxz
shr
cmc
push
sbb
or
push
div
add
movs
or
pop
test
inc
outs
call
outs
add
fbstp
xor
add
inc
repz
fist
push
add
and
add
imul
push
inc
add
rol
jne
fwait
data16
test
mov
pushf
push
cmp
or
push
add
ret
ror
retf
and
inc
or
cmp
inc
jmp
push
jmp
pushf
or
movsx
pop
jnp
call
pop
sbb
push
(bad)
xchg
sub
idiv
fdiv
or
test
ret
xor
call
std
fsub
or
cmp
jbe
adc
push
icebp
movs
jg
jnp
push
push
sbb
sub
add
push
and
pop
(bad)
call
stos
pop
test
dec
inc
inc
push
sub
test
xchg
movs
je
sub
dec
fsub
js
push
cmp
jns
clc
clc
push
and
into
test
and
ds
pop
cmp
push
dec
pop
mov
push
hlt
jno
xchg
sub
(bad)
adc
outs
jne
push
test
ret
jmp
cmp
lock
dec
loopne
stos
cmp
jne
pop
pop
cmp
pop
xchg
test
bound
xor
add
add
or
add
pop
sti
and
ins
test
sbb
sub
je
push
add
test
add
sub
mov
in
push
mov
jl
(bad)
sbb
lods
or
push
push
adc
cmp
cmp
adc
mov
or
mov
lock
fucomp
sbb
jne
mov
push
mov
jmp
loopne
test
or
or
adc
dec
add
sbb
adc
fst
pop
sbb
inc
jmp
aas
rcr
jmp
inc
xor
cwde
test
imul
(bad)
lock
add
xor
mov
adc
add
test
mov
inc
xchg
add
cmp
fbstp
mov
shl
scas
(bad)
fld
pop
mov
gs
inc
push
xchg
push
sar
rcl
add
jle
cmp
add
or
add
mov
ret
sub
add
push
xor
adc
push
push
fbld
pop
fcom
inc
or
add
rol
rol
idiv
jne
push
in
adc
mov
dec
shl
mov
test
sbb
jns
inc
or
ds
lea
adc
clc
add
and
or
cmp
adc
loopne
add
add
aad
push
mov
dec
xor
in
pop
lahf
dec
fmul
or
inc
hlt
add
pusha
fisubr
inc
cld
popf
pop
lods
shr
and
and
out
jne
ins
nop
ins
ror
xchg
sub
pop
adc
xor
enter
sub
clc
pop
loope
add
pushf
vcmpps
pop
mov
fisttp
add
xchg
inc
ror
adc
push
lods
pop
pop
leave
xchg
(bad)
mov
inc
(bad)
or
or
jl
mov
loope
popf
adc
jmp
ins
test
inc
pop
add
push
retf
cmp
stos
stc
adc
shr
push
adc
dec
push
mov
in
adc
in
pop
test
sbb
inc
dec
push
dec
sbb
or
sbb
pop
(bad)
and
push
icebp
pop
outs
sub
jb
fild
or
(bad)
push
movs
(bad)
mov
aas
sbb
jge
dec
or
add
test
inc
push
psubusb
mov
sub
jae
sub
into
fs
add
push
and
jne
fimul
xor
out
test
jne
add
mov
add
mov
xor
popf
or
inc
nop
inc
lock
xchg
push
push
jmp
cmps
xchg
and
(bad)
in
push
femms
aad
cmp
ret
outs
lods
and
into
or
retf
je
push
mov
imul
hlt
or
clc
xchg
or
aam
or
popa
mov
push
cvtdq2ps
sbb
sbb
dec
pop
adc
clc
xor
adc
aas
rol
jo
or
push
icebp
stc
ins
inc
adc
std
sbb
dec
loope
mov
add
push
adc
pop
dec
mov
dec
pop
inc
push
stos
ins
push
mov
aaa
fadd
je
dec
call
call
mov
push
bound
or
outs
arpl
push
arpl
jns
iret
scas
movs
mov
pop
popf
or
mov
mov
xor
ret
fs
push
mov
push
xchg
(bad)
nop
push
or
lods
push
push
xor
add
or
movs
and
test
sbb
or
pop
xlat
mov
or
dec
add
push
call
sbb
sub
mov
add
cmp
ja
xor
aaa
pop
pop
jb
or
ret
popa
push
pop
and
push
fld
in
and
ficom
jl
lods
inc
pop
lock
fbstp
adc
cmp
scas
or
in
ret
dec
mov
xchg
inc
add
adc
push
gs
or
mov
loope
and
test
je
and
add
inc
out
je
cmps
ds
dec
and
and
xor
scas
pop
fbstp
test
sbb
pop
and
jle
sbb
and
shl
and
test
sub
jecxz
dec
sub
repnz
inc
or
inc
or
dec
push
or
lock
pop
daa
test
or
or
idiv
add
pop
mov
add
out
rcr
pop
das
int3
std
add
cwde
adc
dec
push
test
sub
or
inc
add
sbb
lahf
jge
rcl
addr16
push
push
jnp
cli
pop
clc
or
or
int3
adc
or
push
pop
add
mov
loopne
add
mov
ficomp
inc
mov
bts
adc
mov
push
inc
fcomp
mov
ja
call
jmp
push
inc
in
push
adc
push
jbe
jle
lock
xchg
mov
stos
lahf
jle
sbb
in
mov
clc
add
sbb
test
push
add
xchg
int
sbb
xchg
retf
push
jae
pop
add
imul
sar
dec
arpl
cs
shl
test
mov
int3
pusha
mov
call
mov
mov
jnp
or
or
int3
or
pusha
dec
call
mov
sub
mov
xchg
add
mov
or
sbb
in
fsubr
or
add
sbb
mov
xor
jp
movzx
fwait
pusha
unpckhps
dec
push
inc
push
pop
test
push
push
cmps
and
cwde
outs
inc
in
jns
dec
arpl
(bad)
push
pop
or
js
daa
inc
test
pusha
adc
or
push
pop
dec
push
jns
cmp
pop
jl
and
push
jle
call
std
push
cmp
and
jne
cli
arpl
outs
aas
jb
bound
cmp
fmul
enter
or
add
pop
push
cmps
jle
sbb
rcr
test
seta
mov
and
adc
and
clc
pusha
mov
xchg
dec
dec
mov
je
and
dec
(bad)
sbb
jmp
mov
adc
sub
add
jne
xor
mov
cmp
add
and
aam
push
not
jg
mov
jp
cmp
adc
in
fcomp
dec
inc
fdivr
adc
mov
xchg
add
(bad)
cmps
or
outs
icebp
or
popa
mov
je
mov
cmp
jb
push
adc
cmc
int3
or
test
and
out
stos
xchg
ja
cmps
adc
or
add
push
div
adc
push
aaa
push
mov
fs
std
xchg
ror
mov
dec
jae
or
mov
outs
xchg
add
jae
jno
push
sub
div
and
je
or
push
push
shr
jl
ins
es
stos
pop
into
jne
push
lock
loop
add
cmp
sahf
or
adc
push
push
mov
pop
ror
push
in
dec
mov
cmp
stos
mov
adc
jl
xchg
pusha
rol
sub
jbe
push
push
push
loop
bound
cld
add
adc
cs
ins
mov
lock
aas
test
pusha
add
jnp
xchg
ins
fcomp
pop
in
ret
xchg
movs
push
adc
popf
jecxz
into
adc
mov
sub
mov
push
push
loopne
fbld
push
(bad)
push
mov
outs
(bad)
rol
xor
cmc
push
sub
add
push
jecxz
rcr
ds
push
push
sub
adc
dec
sub
xchg
jp
inc
test
fsubr
and
call
push
adc
and
pusha
inc
loopne
mov
jmp
cmp
sbb
or
loop
mov
jmp
(bad)
jge
test
ret
inc
pop
push
mov
es
lahf
dec
in
cmp
popf
les
xor
loop
lods
clc
jnp
pusha
pop
fimul
das
daa
pop
or
loope
jb
cli
js
mov
push
pop
icebp
and
and
or
dec
call
add
outs
fadd
mov
mov
inc
test
jmp
dec
(bad)
jle
xor
push
sub
aad
daa
or
dec
sahf
sub
cmps
pushf
cdq
xlat
sub
dec
mov
add
jne
ret
rcr
adc
pop
ret
mov
push
adc
mov
test
in
mov
adc
or
adc
cmp
adc
or
and
jnp
add
mov
or
cld
adc
ficomp
fdiv
or
sub
and
xchg
loope
clc
or
push
jg
je
jmp
stos
je
lss
mov
je
adc
je
and
je
jmp
popa
sbb
adc
inc
add
lea
(bad)
loop
loopne
out
inc
cld
and
sub
outs
mov
mov
adc
add
push
int
imul
jmp
inc
cbw
std
pop
sub
adc
adc
fild
or
jge
xor
ja
dec
movs
xor
pop
cmp
xchg
xor
pmaxsw
pop
sub
or
fcomp
mov
push
xchg
push
adc
neg
scas
and
aas
ficom
inc
fsubr
gs
xor
jb
lock
add
xchg
or
sti
mul
adc
ficom
mov
inc
push
push
jmp
pop
inc
or
popf
and
rsqrtps
enter
and
jmp
icebp
test
push
fdiv
push
push
mov
dec
mov
sbb
shl
or
mov
adc
adc
or
xchg
xor
cmp
add
cmp
clc
and
push
push
push
rcr
pop
dec
cld
dec
cmp
nop
mov
sub
ins
or
push
mov
xchg
add
test
cmc
int
repz
ret
shl
inc
cmp
jae
popa
aad
or
jp
sti
add
outs
(bad)
lds
adc
xchg
mov
jnp
movs
sti
cdq
jae
dec
add
jecxz
cs
out
sub
mov
adc
dec
sub
jge
psignb
das
inc
dec
adc
iret
call
xchg
push
fwait
inc
lock
adc
idiv
ja
push
push
pushf
and
popf
and
xor
sub
and
mov
jl
dec
rcr
dec
add
push
lahf
inc
xchg
xor
jno
(bad)
dec
cmp
jae
mov
inc
add
jne
das
add
je
lock
loop
aas
and
fild
lds
lods
addr16
xlat
and
(bad)
dec
add
inc
je
pop
test
mov
mov
ficom
xchg
iret
add
loope
jbe
cmp
iret
dec
(bad)
nop
shl
cmc
fnstsw
jnp
popf
sbb
pop
mov
inc
cmp
jne
push
mov
loopne
fisttp
jmp
mov
inc
lea
sbb
jge
adc
(bad)
cmp
xchg
lea
lea
cld
sub
cmp
je
and
loope
push
xchg
adc
and
dec
or
imul
addr16
rol
pop
je
repz
ret
(bad)
xchg
mov
adc
lock
mov
push
imul
or
mov
fmul
aam
(bad)
inc
addr16
mov
mov
inc
sub
or
push
push
out
loopne
cld
es
push
add
and
dec
je
test
pop
adc
test
dec
pusha
or
and
or
(bad)
jl
pop
add
add
stos
ins
inc
add
das
jno
push
les
loope
add
inc
add
es
or
sbb
add
or
movs
xor
ds
jbe
cmps
sbb
scas
dec
push
sbb
fwait
inc
stos
sbb
pop
scas
call
jle
mov
mov
je
mov
jnp
jo
movs
xor
jmp
dec
imul
pop
je
push
mov
jo
cmp
adc
mov
cmp
mov
push
in
icebp
movsx
cdq
ins
test
add
loopne
out
sbb
test
out
inc
push
jmp
aas
and
mov
rcl
xchg
hlt
pop
push
mov
(bad)
xchg
mov
mov
pop
xor
adc
fdivr
jmp
dec
mov
dec
inc
int
jl
sbb
pop
lea
cmp
jne
sub
pop
inc
dec
or
push
inc
xor
jae
add
inc
sub
inc
or
or
add
xor
push
(bad)
hlt
adc
sbb
lds
push
add
and
jb
mov
mov
push
push
jge
shl
or
fsubr
jb
inc
leave
iret
add
jne
adc
xor
pop
sbb
xor
ins
mov
pop
mov
mov
dec
or
dec
call
inc
cmp
test
cld
pop
das
xor
mov
and
popf
lock
sub
pusha
pop
js
mov
dec
add
jne
cmp
sub
and
cs
mov
sti
ins
ins
retf
jnp
shl
retf
xor
push
dec
sbb
xor
inc
jmp
xchg
lahf
jg
or
mov
shl
mov
add
outs
add
adc
pop
stos
lods
push
add
pop
pop
fs
add
mov
jecxz
lods
mov
and
and
jnp
outs
ret
es
adc
dec
adc
jo
fisttp
adc
pusha
mov
mov
jge
or
jmp
cmp
int3
add
and
add
sub
push
jnp
push
ins
iret
fdivr
or
jne
je
pop
pop
call
iret
mov
dec
clc
pop
shl
lea
add
daa
cmp
icebp
add
cmp
fdivr
dec
fidiv
ja
jns
cs
mov
scas
adc
add
mov
mov
sbb
cmps
push
ins
mov
pop
jge
(bad)
je
out
sar
lods
and
mov
rol
or
jp
jmp
hlt
ficomp
mov
and
icebp
cmps
(bad)
xchg
mov
inc
sbb
add
sub
jl
push
or
or
pextrw
or
lock
adc
pop
push
jg
mov
sbb
xor
pop
mov
adc
mov
out
pop
push
hlt
inc
ss
jbe
loopne
mov
mov
lahf
clc
test
movs
mov
mov
test
mov
add
ins
les
add
scas
sub
add
adc
cmp
add
or
or
idiv
jnp
add
sub
and
sub
icebp
jb
js
mov
cli
jae
adc
lock
sbb
repz
mov
call
push
nop
shl
jo
add
or
jne
jmp
icebp
add
adc
mov
mov
in
outs
loop
mov
dec
jmp
inc
inc
mov
adc
inc
mov
cmp
mov
(bad)
ds
dec
pop
(bad)
jmp
xchg
mov
jne
sbb
add
and
adc
sub
push
xchg
inc
ja
fcomp
cmc
(bad)
jo
sub
jnp
sub
sub
not
nop
push
fcmovbe
test
dec
shl
push
push
ret
mov
mov
xor
dec
lods
dec
add
mov
jge
sub
xor
inc
sar
lock
mov
inc
cmp
add
out
mov
pop
pop
xor
fs
push
dec
pop
retf
push
and
into
and
pop
sub
int3
pop
(bad)
xor
push
push
and
xor
pushf
retf
mov
dec
mov
sbb
or
xor
adc
je
add
std
xchg
push
pop
in
(bad)
push
push
int3
rcl
pop
adc
adc
jmp
lock
inc
inc
or
ds
pusha
xchg
lock
test
push
push
mov
push
xlat
push
lds
js
adc
shr
stos
jo
repz
push
mov
daa
mov
jmp
pop
psllw
and
int
adc
add
jp
pop
lahf
ret
addr16
ds
ja
cmp
imul
cmp
sub
aad
pop
test
jne
(bad)
cwde
mov
enter
mov
int
pop
loopne
movs
popf
adc
out
sysenter
shr
add
aas
cld
inc
or
or
dec
mov
(bad)
push
cmp
mov
pop
push
push
mov
clc
or
or
push
cdq
cli
xchg
add
lds
inc
loope
hlt
mov
cmp
clc
je
pop
fs
inc
enter
pcmpgtd
dec
sub
in
ret
inc
sbb
mov
pop
cmp
in
es
(bad)
sbb
add
jge
cmp
test
shl
adc
pop
gs
ret
inc
clc
add
inc
inc
mov
adc
adc
sbb
pop
addr16
and
lods
stos
mov
repz
adc
mov
adc
sbb
test
loopne
and
shr
aas
and
sbb
mov
neg
mov
jne
jecxz
repz
and
inc
mov
inc
push
sub
pop
jg
shl
push
push
inc
mov
push
sbb
adc
jno
push
dec
add
pop
mov
push
mov
mov
adc
out
(bad)
sar
push
sub
push
ror
js
pop
push
mov
mov
lds
push
pop
pushf
push
pushf
je
call
ret
adc
enter
rcl
cdq
xor
mov
add
mov
cmp
out
shl
and
les
movs
or
mov
xchg
inc
and
and
lods
cmovae
aad
mov
jl
mov
lea
test
inc
mov
sbb
lock
shl
push
push
add
js
adc
or
gs
fldcw
div
mov
je
xchg
sub
and
mov
xor
fsub
cmp
or
adc
inc
jmp
and
add
or
adc
jle
adc
sub
add
mov
inc
mov
fsubr
adc
push
push
(bad)
sub
shl
lahf
push
fnstcw
and
pop
ret
cmp
sub
mov
imul
sbb
call
pop
popf
push
pop
xor
jne
dec
push
add
or
or
push
mov
sbb
pop
jle
add
push
xchg
jne
data16
fdivr
pop
adc
loop
(bad)
or
mov
jmp
or
adc
(bad)
jg
sbb
lea
int
push
es
mov
sbb
cmp
inc
push
adc
add
inc
mov
loopne
mov
idiv
and
jmp
mov
push
mov
ret
xchg
ret
mov
lods
ins
test
mov
add
outs
xor
dec
push
movnti
push
dec
sub
ins
cld
pop
xor
jle
dec
dec
adc
adc
inc
mov
mov
push
fistp
(bad)
std
stos
mov
push
inc
or
push
lea
mov
sub
push
sub
add
sub
test
pop
je
or
int3
push
daa
iret
add
imul
push
push
or
ficomp
nop
(bad)
test
xor
add
inc
adc
popa
mov
and
sub
cmps
adc
lods
(bad)
fwait
clc
or
dec
inc
push
or
mov
mov
inc
push
or
sbb
pop
test
jo
jmp
add
call
pop
inc
and
add
mov
or
pop
jg
lods
dec
jg
push
push
push
popf
inc
punpckhdq
daa
dec
mov
call
push
xchg
pop
lods
xor
fcmovu
cmp
push
adc
mov
lock
lea
or
ins
cdq
loope
scas
inc
sub
and
push
js
data16
push
sbb
loope
and
sbb
cld
cwde
hlt
sub
mov
scas
add
pushf
add
dec
imul
xchg
adc
mov
pop
xchg
dec
cs
mov
lock
push
pop
cs
out
cli
jo
xchg
and
jbe
pushf
adc
and
mov
add
call
pop
pop
popa
xchg
push
or
or
add
cmp
bound
cmovae
mov
(bad)
push
inc
in
ret
mov
pop
push
rcr
pop
push
pop
or
fidivr
daa
adc
cmp
je
xor
cmc
push
xor
inc
jp
test
adc
call
push
inc
loopne
leave
dec
mov
jae
sub
jmp
pop
push
push
sahf
call
in
mov
loope
retf
mov
stc
or
or
mov
and
or
sub
shl
pop
or
dec
push
je
fcomp
adc
in
ja
jno
and
rcl
jle
stc
mov
popf
(bad)
xchg
push
pop
sub
mov
push
cdq
push
dec
push
xor
inc
jnp
out
mov
sbb
lahf
neg
add
mov
cdq
push
cmps
or
jl
mov
pop
jp
pop
xchg
mov
sbb
mov
or
das
push
adc
jge
gs
rcl
or
add
lea
movs
add
and
popf
in
mov
sub
retf
inc
ret
xchg
and
ss
add
add
jmp
sub
xor
mov
sub
xor
repz
sub
cmp
add
outs
ds
inc
jecxz
or
adc
pusha
and
nop
js
loopne
cmps
push
cdq
loopne
adc
inc
clc
xchg
mov
lock
mov
push
cmps
adc
adc
push
ror
lods
sbb
test
imul
mov
inc
jl
or
or
adc
rcr
add
(bad)
pop
rol
mov
sbb
xor
add
sbb
or
mov
cwde
or
(bad)
jmp
cmp
xchg
fadd
pop
xor
nop
dec
xor
xor
adc
add
mov
andnps
outs
mov
paddd
mov
xor
mov
pop
xor
lds
out
push
nop
xchg
fwait
mov
pop
and
movs
jg
pop
dec
add
loope
dec
lea
loope
and
push
enter
mov
pushf
dec
fld
jmp
shl
cli
mov
shl
or
ins
test
jo
add
adc
push
les
clc
mov
xor
jmp
loopne
not
add
inc
add
jne
dec
les
xlat
dec
shr
dec
jge
js
(bad)
ror
pop
inc
ja
pop
lahf
jg
jne
jae
and
mov
mov
sub
cmpxchg
loopne
adc
popf
pop
cmp
or
lea
data16
jns
mov
mov
test
inc
cmps
push
sbb
dec
je
add
adc
test
data16
xor
mov
mov
pop
cli
(bad)
dec
or
loope
loop
jb
add
loope
mov
inc
pop
jne
sbb
mov
(bad)
sbb
and
pop
adc
sbb
sbb
cld
inc
mov
ja
lock
jo
mov
add
daa
inc
sbb
sub
ret
push
(bad)
lods
sub
(bad)
xchg
push
mov
add
adc
push
cmps
ret
add
sub
push
nop
call
call
sti
pop
push
inc
push
pusha
clc
jge
mov
mov
lock
push
xchg
mov
jge
or
sar
loopne
or
fwait
mov
sti
sub
daa
scas
or
ret
xor
imul
add
(bad)
xor
jne
fdivr
cwde
mov
inc
and
jmp
into
cmp
inc
aaa
mov
fisub
enter
test
and
ins
xor
loop
call
loopne
mov
or
jns
or
inc
xchg
adc
test
pop
jge
arpl
sbb
lods
in
retf
mov
addr16
xor
add
out
ret
imul
mov
hlt
push
clc
loope
push
in
scas
adc
adc
add
aam
adc
push
sar
sar
fadd
mov
sbb
mov
call
test
div
cmp
or
push
or
sti
and
mov
jmp
inc
jne
mov
inc
jne
and
mov
or
in
lods
pop
sti
js
scas
lock
inc
pop
cs
pop
pusha
and
push
mov
iret
inc
inc
fsub
xor
push
in
mov
and
fst
inc
fwait
sub
xor
fidivr
add
jo
cmp
xor
je
and
jp
test
pop
imul
inc
jl
xor
popa
pop
icebp
call
cmp
mov
sub
lods
add
and
adc
shr
inc
les
adc
mov
in
dec
clc
ds
inc
sub
pop
pop
push
aaa
push
and
cmp
push
mov
aaa
or
or
xchg
movs
jmp
add
scas
xchg
cmp
push
pop
jae
push
mov
or
neg
cdq
pop
inc
xor
and
(bad)
mov
and
and
dec
sbb
add
cmp
lods
ror
pop
fs
and
sbb
inc
dec
cmp
dec
loope
add
or
loop
clc
push
push
or
push
xor
out
lock
add
mul
inc
sbb
in
xor
add
mov
les
pop
or
iret
mov
pop
ret
dec
and
push
loope
popa
cmps
data16
push
xchg
ficom
push
les
pop
ret
(bad)
push
inc
adc
pop
(bad)
ficom
stos
pop
into
pusha
sti
inc
fsubr
rcr
popw
std
pusha
arpl
add
outs
mov
inc
outs
ds
bound
add
ficom
loope
xchg
xor
adc
dec
das
add
mov
adc
(bad)
das
or
jge
add
adc
dec
add
test
pop
cwde
xchg
mov
inc
push
sti
xor
imul
test
clc
pop
jo
shl
lea
add
mov
add
aad
xor
cmp
cmp
or
xchg
inc
inc
inc
mov
add
mov
test
std
xchg
inc
and
jbe
cmc
and
out
push
xchg
xor
and
jmp
out
test
sub
in
or
push
or
add
cmc
pop
sbb
popa
mov
imul
dec
scas
loopne
mov
sub
sub
dec
mov
mov
xchg
cwde
sbb
pop
inc
adc
call
pusha
mov
cs
or
repnz
dec
cmp
aaa
dec
push
or
dec
ins
pop
or
or
mov
mov
xor
frstor
and
lea
or
or
fcmovne
mov
loopne
mov
sbb
cmp
or
inc
ret
push
nop
dec
pop
lea
movs
push
scas
xchg
mov
add
sub
and
cmp
ja
pop
into
icebp
add
scas
push
push
stos
add
mov
and
pop
push
(bad)
jnp
jae
inc
jg
or
(bad)
fs
push
mov
mov
mov
jmp
pop
not
inc
cmp
push
(bad)
cmp
jmp
pop
add
hlt
fbstp
mov
dec
or
shr
dec
dec
test
jge
add
std
and
test
int
pop
jns
cmp
add
pop
jno
xchg
xor
stos
push
loopne
repnz
adc
mov
and
sub
mov
inc
xchg
rol
and
clc
push
or
add
push
cmp
(bad)
xchg
fld
cmp
test
or
in
adc
mov
sbb
add
in
dec
div
(bad)
and
mov
dec
cli
jg
(bad)
xor
push
mov
add
rcl
in
mov
jb
stc
sbb
jmp
cmps
jns
out
cs
xchg
xor
icebp
mov
cmps
mov
pop
test
repz
add
or
outs
test
repz
and
neg
xor
jbe
push
jne
add
push
add
movs
push
or
fisttp
xchg
jnp
xchg
add
xor
sub
clc
out
xor
and
mov
xchg
jl
iret
and
jns
jno
xchg
adc
xlat
push
push
adc
sbb
add
jge
push
rol
jge
mov
jl
lock
add
mov
push
cmp
inc
(bad)
sub
jl
add
sub
sub
lds
lock
aam
and
retf
cld
mov
lods
dec
clc
cmp
iret
adc
or
and
add
add
call
outs
imul
xor
test
xor
enter
mov
and
xor
adc
cmp
jmp
xor
inc
enter
pop
jecxz
adc
or
out
mov
push
sub
retf
or
mov
test
xchg
mov
mov
fcomp
je
jge
mov
leave
aaa
aam
aam
and
fnstsw
sbb
add
jnp
(bad)
data16
je
movsx
imul
cdq
fdiv
imul
rcl
push
sub
sbb
lods
sub
cld
inc
ins
shl
add
adc
clc
mov
call
add
jecxz
sub
sbb
push
push
leave
add
and
sbb
pop
mov
jmp
movs
nop
mov
push
push
cmp
jne
inc
fcmovnb
dec
les
outs
test
cmp
add
mov
sbb
push
les
inc
ret
mov
dec
sub
into
cli
or
fwait
cmps
jnp
lea
jb
ror
in
mov
push
xchg
cmc
dec
sti
ret
or
mov
fadd
or
js
mov
dec
je
xchg
sub
test
add
rcr
test
sar
push
fmul
(bad)
pop
pop
push
or
popa
cmc
and
add
ror
jne
inc
mov
movs
mov
int
sar
loopne
inc
pop
cwde
fwait
inc
add
into
xor
and
test
rcr
pop
mov
outs
dec
shr
mov
or
add
jg
xor
inc
arpl
mov
out
jg
pop
mov
mov
push
mov
push
and
or
push
sbb
push
inc
call
loop
pop
call
mov
enter
iret
and
jmp
xchg
add
ja
mov
jp
push
dec
test
sbb
adc
cmp
rol
call
push
push
lock
push
jne
cld
cmp
or
push
dec
or
jle
sub
xor
xor
cmovne
cmp
sbb
js
xor
add
pop
dec
inc
sub
rcr
add
lock
repz
add
fbstp
sbb
popa
adc
push
pop
je
mov
add
cmp
in
inc
shl
and
mov
ins
push
out
rcl
sub
or
jle
xor
je
(bad)
and
sub
mov
mov
jae
dec
enter
outs
sub
ffreep
lock
sbb
or
in
or
mov
stos
inc
dec
cmovno
lods
mov
inc
mov
xor
mov
rcr
fs
or
mov
xchg
xor
lea
mov
jge
mov
inc
mov
inc
or
sbb
in
lods
test
and
dec
mov
cmp
js
jo
push
stos
jmp
jg
push
mov
mov
push
cmps
test
je
xchg
inc
cld
mov
and
(bad)
mov
and
xchg
push
adc
adc
mov
mov
or
ja
xor
pop
sub
xchg
cmp
inc
les
pop
jmp
or
pop
jmp
ret
stos
div
xchg
js
sti
sbb
inc
add
xchg
call
cmp
sti
sub
outs
adc
fcmovnu
push
inc
bound
inc
dec
and
loop
xchg
(bad)
popa
dec
push
int
and
inc
mov
jg
je
or
mov
cli
push
int3
scas
push
jmp
fimul
rcl
xchg
pop
shr
dec
sub
push
add
imul
dec
dec
pop
push
dec
adc
imul
sar
push
push
dec
add
popf
fidivr
fld
ds
xor
dec
sahf
popa
and
sahf
add
pusha
jae
dec
sahf
add
push
add
jo
jne
cmp
sbb
inc
mov
inc
cmp
je
(bad)
mov
test
das
inc
popa
jbe
bound
hlt
add
sub
fcom
push
scas
fs
test
mov
jmp
fisttp
ficomp
jns
add
sub
je
jmp
push
pusha
push
xor
xchg
and
fwait
push
call
or
add
pop
sbb
hlt
mov
push
jmp
outs
sub
mov
cli
adc
mov
jmp
adc
sbb
test
mov
mov
ror
and
enter
pop
ret
sub
push
jecxz
fild
add
mov
xchg
inc
(bad)
(bad)
setb
push
add
nop
sub
add
pop
in
xchg
push
jbe
or
aam
xlat
or
add
aad
add
fisttp
pop
movzx
hlt
pop
and
sbb
pop
push
fcmovb
bound
pop
in
sbb
aam
scas
jbe
adc
or
imul
(bad)
adc
mov
pop
ret
(bad)
adc
or
sub
cwde
adc
add
add
retf
in
sub
mov
cmp
add
add
mov
fadd
ja
add
push
dec
xchg
(bad)
push
or
pop
pop
mov
pop
push
ror
cmp
dec
adc
xor
ja
clc
xchg
fdivrp
stos
add
nop
xor
dec
sbb
ret
cdq
mov
and
pop
popa
leave
or
and
hlt
dec
cmp
add
dec
mov
push
je
sbb
cmp
popa
idiv
or
mov
push
cmp
push
cmp
jmp
popf
stos
rcr
add
xor
push
dec
ja
xor
jne
pop
test
adc
mov
push
mov
jbe
mov
or
pop
jne
or
popf
push
push
icebp
dec
pusha
adc
cmp
jg
jne
push
jbe
adc
mov
icebp
stc
imul
sub
inc
inc
push
sti
arpl
bswap
push
xor
je
test
lock
stc
ret
sti
jl
cmovb
aas
je
out
fimul
push
mov
and
mov
out
pop
movs
add
jne
push
out
out
jo
lods
dec
into
and
cmp
xor
pop
push
or
test
les
dec
and
add
sqrtps
shr
xchg
and
xor
pop
inc
pop
cmps
and
mov
sub
xlat
push
mov
or
push
adc
xchg
ret
inc
dec
or
cmps
aaa
ret
mov
push
jecxz
xor
add
mov
bound
cmp
in
dec
xor
or
stos
mov
js
and
aam
push
fisub
rcl
xchg
xchg
and
fadd
jo
retf
push
and
jb
push
out
scas
inc
xor
inc
push
xchg
cmp
mov
dec
inc
bound
sub
je
mov
mov
shl
mov
jmp
cwde
cmps
mov
jo
jne
cli
inc
jne
or
pop
jne
pop
mov
jg
js
push
(bad)
cli
js
aaa
or
stos
mov
sub
add
mov
test
xor
dec
add
mov
and
inc
sub
ins
fiadd
pop
and
adc
mov
jg
jmp
mov
mov
adc
cmps
and
lods
adc
mov
push
pop
xor
retf
jmp
sbb
mov
jecxz
adc
imul
shl
adc
push
pop
sbb
lods
jl
or
adc
and
add
jb
xor
arpl
xchg
ret
pop
jo
sar
xor
push
push
popa
mov
mov
add
mov
mov
adc
rcl
lds
jno
in
push
loopne
sub
adc
jbe
pop
daa
repz
cmp
dec
pop
push
cli
or
pushf
adc
in
or
mov
adc
mov
mov
push
mov
fdiv
jnp
add
jp
sar
or
jg
push
push
push
push
pusha
dec
ds
in
pop
enter
push
lea
xor
fstp
pushf
push
stc
fs
xor
or
gs
arpl
jmp
dec
cmp
jle
adc
sbb
push
aas
enter
inc
xor
frstor
cmp
pop
fs
mov
stos
or
dec
loop
int
add
push
sub
cmp
push
sub
add
test
pushf
inc
and
aaa
sub
sbb
xor
test
test
nop
pop
enter
shl
or
dec
jno
xor
add
xlat
push
jle
fdivr
shl
ret
rol
repnz
push
mov
push
inc
xchg
push
fisttp
gs
push
pop
push
add
xchg
retf
retf
lock
push
in
bswap
jne
ret
push
popf
dec
dec
jg
push
sub
mov
loop
mov
ret
(bad)
inc
and
and
jno
mov
rol
cmp
jne
push
icebp
pop
or
dec
mov
push
push
and
(bad)
call
jb
mov
push
sbb
mov
adc
(bad)
and
mov
sub
cmp
mov
(bad)
clc
jne
push
xchg
or
and
in
adc
jne
xchg
push
jae
adc
in
mov
out
inc
sbb
add
cmp
fwait
jmp
xchg
sbb
push
and
and
pushf
pop
fiadd
add
lahf
pusha
adc
or
push
bound
mov
or
jae
pop
rol
inc
mov
cmp
ror
sbb
dec
adc
inc
adc
outs
or
out
push
dec
sbb
sbb
aaa
test
push
and
or
sub
test
adc
adc
push
jne
add
or
add
adc
inc
cmp
icebp
jne
in
gs
shl
add
mov
sbb
dec
adc
add
and
sub
and
xor
xor
add
and
cmp
inc
and
xor
dec
dec
xor
add
push
push
pop
add
and
pop
pusha
and
xor
push
xor
js
loope
add
xor
fcmovu
push
mov
mov
pop
in
cs
cs
pushf
mov
movs
test
inc
cs
mov
cs
cs
ret
and
push
cmp
sbb
sbb
xor
add
sbb
sbb
scas
push
in
sbb
pusha
pop
ins
mov
inc
rcl
xlat
test
pop
adc
test
imul
mov
or
add
cmp
push
pop
sub
adc
sbb
into
add
push
inc
dec
push
and
dec
cwde
add
xchg
push
inc
add
and
mov
mov
imul
dec
rcl
out
fild
xchg
or
mov
xchg
add
nop
mov
xor
test
(bad)
push
lahf
movs
lock
sar
xor
sbb
xlat
dec
add
xchg
mov
mov
xchg
xor
bound
movs
jne
push
dec
push
xchg
or
jb
and
arpl
addr16
mov
ret
jmp
push
xor
add
aad
push
stos
mov
jne
rcl
sub
jns
add
xor
fsubr
push
popf
jae
add
xor
pushf
pusha
jnp
jbe
adc
inc
mov
pop
add
dec
imul
jmp
clc
mov
(bad)
inc
arpl
xchg
and
mov
cdq
inc
sub
add
sar
inc
ins
push
push
addr16
add
push
iret
xchg
popa
sub
jne
lods
sub
and
nop
pop
dec
and
pop
enter
mov
adc
dec
add
(bad)
minps
ins
push
or
add
ror
lods
sar
dec
and
jmp
or
ss
mov
sbb
adc
cli
xchg
(bad)
adc
add
mov
inc
inc
test
inc
(bad)
jmp
adc
popa
push
sub
in
pop
lods
xor
ins
or
(bad)
adc
add
jecxz
cmc
sbb
sub
or
in
sbb
in
add
inc
repnz
movs
in
jmp
lds
(bad)
outs
inc
inc
inc
mov
add
ret
jle
xor
ins
and
jne
mov
dec
add
add
push
ja
dec
lods
pusha
loop
mov
push
fild
jge
(bad)
iret
sar
jne
mov
push
cli
push
pop
sar
sub
push
icebp
mov
and
fadd
push
and
adc
mov
and
and
call
std
mov
sub
and
push
push
pop
xor
pop
mov
sbb
(bad)
mov
and
dec
inc
push
adc
sbb
push
inc
push
mov
dec
or
dec
mov
bound
push
push
jecxz
mov
push
adc
cmc
pop
add
mov
push
mov
push
test
rcr
sbb
and
add
xchg
call
push
adc
popa
sub
rcl
sbb
sub
sub
push
movs
cmp
sub
out
call
cmp
imul
dec
xor
inc
call
cmp
inc
call
cmp
cmp
cmp
nop
out
jo
xor
jmp
(bad)
cmp
js
arpl
cmp
sbb
push
daa
sbb
int
jo
daa
mov
jbe
mov
inc
in
and
retf
sbb
cmp
enter
dec
test
xchg
add
dec
push
in
and
pop
dec
mov
cmp
dec
dec
add
push
mov
jmp
call
and
mov
and
stos
es
cmp
push
jnp
mov
push
sahf
fimul
sbb
mov
cli
out
or
shl
push
push
cmp
outs
repnz
or
xor
xchg
(bad)
mov
adc
push
adc
loopne
in
rcl
xlat
(bad)
pop
and
in
inc
xchg
lock
fcom
bndstx
sbb
dec
stos
push
and
pop
sti
sbb
push
and
add
mov
push
loope
popa
or
out
mov
sub
inc
mov
pop
and
ret
add
je
icebp
cmp
mov
sbb
and
dec
lods
mov
mov
ror
pop
daa
int3
or
and
add
dec
jae
sub
pusha
xor
mov
outs
pop
adc
dec
adc
or
loop
push
sbb
dec
add
inc
mov
mov
adc
sub
fwait
cmps
imul
test
inc
das
mov
das
test
shl
fcomp
fadd
movs
and
mov
sbb
jne
mov
cmps
xor
push
xor
iret
or
sub
sbb
mov
push
mov
loop
movs
push
fistp
mov
mov
mov
push
jnp
dec
bound
sbb
in
es
add
ins
or
test
(bad)
sub
or
test
loopne
and
mov
xchg
jl
mov
add
scas
pop
mov
or
movs
add
xlat
adc
xor
div
mov
adc
mov
(bad)
mov
and
adc
inc
or
loopne
loop
mov
test
inc
cmp
test
pop
enter
push
outs
jbe
sub
push
ss
inc
aaa
adc
fcomp
inc
test
or
mov
fnsave
or
imul
inc
sub
fwait
jp
(bad)
aam
(bad)
arpl
xor
popa
aam
jbe
mov
mov
mov
pop
fcom
inc
cld
mov
arpl
add
and
and
and
jl
xor
loope
or
or
mov
xchg
ret
or
ja
sub
xchg
sub
jl
push
jle
cmp
loop
mov
pop
inc
push
cmp
loop
in
pop
push
lods
push
push
mov
push
cld
add
push
leave
nop
das
adc
in
nop
out
and
pop
xchg
sbb
sahf
outs
(bad)
jmp
lea
adc
and
add
rol
lods
cli
cmp
jecxz
(bad)
dec
add
inc
js
stos
or
mov
fadd
mov
jmp
jmp
or
jns
and
inc
mov
or
inc
xchg
push
sbb
adc
stos
in
add
dec
add
adc
add
inc
xchg
shl
ret
hlt
out
fild
push
add
rol
xchg
retf
jo
(bad)
and
inc
(bad)
(bad)
cmp
inc
pop
mov
inc
es
cs
adc
or
test
sub
cmp
jb
sbb
ds
and
fisubr
sar
aas
add
inc
arpl
stos
push
or
ret
daa
hlt
xor
aas
sub
frstor
scas
lock
push
jmp
push
jns
sbb
push
sahf
push
ficomp
cdq
dec
in
out
hlt
add
push
icebp
inc
pop
add
cmp
jbe
xchg
rol
mov
ja
cli
cmp
jge
jmp
out
pop
(bad)
gs
inc
inc
inc
sub
lods
sbb
sbb
sub
or
sub
aas
or
or
pop
leave
mov
add
test
idiv
es
dec
aam
pop
mul
adc
mov
adc
adc
pop
pop
ret
dec
shl
jp
mov
or
or
pop
or
pop
push
jns
neg
neg
sbb
xor
fincstp
into
fstp
div
retf
dec
out
add
shl
rcl
rcl
rcl
cmp
jb
ja
(bad)
pop
imul
std
inc
loop
pop
test
jmp
repz
out
jmp
shr
sahf
das
sub
xchg
add
pop
xchg
pop
and
mov
sub
add
test
out
das
mov
rol
mov
jl
or
pop
dec
bound
lock
rcl
cmps
jle
mov
ret
ret
aaa
push
sar
mov
ret
clc
lods
inc
cli
ret
outs
xor
shr
aaa
jmp
pop
or
(bad)
(bad)
jge
mov
adc
dec
sbb
or
adc
in
js
push
mov
sub
cmps
sub
adc
inc
and
out
add
or
mov
test
xchg
mov
and
out
test
in
jns
clc
data16
pushw
cld
je
xchg
add
ins
hlt
fmulp
fstp
fwait
mov
sbb
stos
add
(bad)
mov
mov
push
and
enter
adc
push
sbb
pop
nop
add
mov
packsswb
and
sbb
cmp
test
call
out
mov
or
lea
adc
test
call
mov
add
adc
ins
lahf
push
adc
xlat
sbb
shl
outs
add
inc
mov
dec
xor
jle
bound
sub
(bad)
ss
shl
enter
lea
(bad)
fnstsw
fnclex
ficom
es
fstcw
loop
cli
cmp
add
not
fwait
clc
sti
add
or
data16
ins
cld
pop
jmp
dec
inc
dec
dec
push
test
push
clc
dec
cs
jecxz
call
or
push
scas
nop
xor
js
inc
pop
hlt
fwait
mov
imul
xor
int3
clc
(bad)
mov
rol
ja
dec
dec
(bad)
test
jne
fild
sub
ss
call
push
inc
lds
(bad)
ds
and
inc
retf
add
mov
or
pop
fld
fistp
fwait
in
push
add
test
mov
mov
fnstsw
fstp
fwait
mov
inc
(bad)
mov
xor
mov
push
add
add
cmp
jae
cld
jge
sbb
jge
clc
pop
mov
inc
iret
push
clc
and
or
pop
mov
inc
pop
xor
mov
and
aaa
pop
push
cmp
rcl
cli
sub
dec
mov
cmp
push
push
nop
fmul
push
arpl
add
not
adc
fidiv
mov
cmp
jne
xchg
in
push
pop
call
jle
mov
or
dec
push
sub
sbb
pop
loop
nop
sub
sub
jge
and
cli
shufps
fstp
fld
retf
retf
cli
mov
pusha
dec
cmps
sbb
lock
jns
jecxz
add
popa
outs
icebp
push
push
outs
sub
enter
in
lods
inc
in
stos
lock
jmp
mov
jnp
adc
shl
push
fsubr
jmp
sub
jns
add
retf
add
add
jne
mov
fld
pop
jmp
in
fidiv
ror
jb
and
mov
pop
je
mov
loopne
(bad)
jmp
inc
loopne
shr
xchg
pop
das
push
call
pushf
jl
xchg
jg
inc
xchg
lea
or
adc
xchg
aam
scas
mov
inc
neg
ds
sub
add
mov
inc
adc
jmp
dec
mov
add
cmp
add
push
fsub
loop
adc
or
popa
shr
push
dec
or
retf
test
inc
popa
lds
ret
add
loope
adc
push
dec
es
sub
sub
arpl
mov
nop
lahf
inc
xchg
sbb
push
jmp
or
sbb
ins
sqrtps
outs
or
add
pop
es
mov
adc
push
aam
and
xchg
stos
pop
cmp
cwde
mov
pop
call
mov
or
add
xchg
mov
jp
(bad)
push
rol
aaa
push
push
push
xor
mov
add
cld
fadd
sbb
pop
pop
xlat
aas
add
clc
(bad)
push
pop
cmp
je
or
adc
or
div
hlt
pop
dec
loopne
push
jg
xor
adc
in
dec
mov
daa
sbb
das
mov
cdq
les
xor
and
mov
jle
or
idiv
cmp
mov
and
mov
cmp
jne
call
clc
neg
jle
lods
add
enter
sbb
push
jg
ss
inc
or
inc
jp
jo
sub
sbb
sbb
cld
pusha
jno
add
jo
das
movs
or
and
shl
mov
imul
add
inc
fisubr
ds
fisttp
fs
scas
outs
add
fild
inc
in
bound
sub
inc
jne
pop
retf
std
fisubr
push
dec
mov
clc
nop
inc
sub
xchg
mov
pop
xor
mov
adc
push
pop
mov
cld
div
sbb
test
inc
(bad)
and
movs
cmp
jmp
jge
fisubr
iret
mov
add
add
mov
sub
pushf
jmp
or
pop
adc
cmp
movs
not
dec
int
mov
cmp
shr
xchg
shl
fimul
test
fmul
inc
and
xchg
out
mov
jne
fwait
and
push
addr16
pushf
jmp
ja
mov
rcl
and
adc
jl
inc
jmp
sub
lock
shr
pop
xor
rcl
push
add
push
mov
lea
jno
and
data16
cmps
dec
push
mov
(bad)
pusha
fild
(bad)
(bad)
popa
rol
ror
jbe
push
or
mov
test
mov
inc
mov
add
data16
shr
or
adc
sub
add
fisub
mov
or
push
(bad)
jne
xor
mov
es
push
pop
dec
add
aas
or
adc
or
int3
mov
xor
inc
or
not
mov
loopne
and
jmp
cs
mov
or
ins
rol
je
push
pop
(bad)
out
in
enter
push
push
inc
pushf
movs
pop
add
sub
and
adc
sub
or
(bad)
ror
sub
fs
mov
and
dec
or
inc
mov
jmp
ror
or
push
xor
outs
jb
mov
cmc
mov
(bad)
stc
and
push
or
xchg
mov
adc
fmul
push
stc
std
sar
and
sub
or
loop
test
neg
mov
xlat
jmp
xchg
cmp
jb
or
sbb
aas
mov
xchg
fnstenv
xlat
daa
cmp
jmp
fwait
inc
mov
inc
xchg
dec
xchg
leave
popw
adc
inc
cld
inc
or
jmp
dec
aad
and
in
xor
add
add
jnp
or
and
dec
pusha
call
pop
repz
mov
test
enter
mov
lods
and
add
dec
ret
mov
pop
push
adc
enter
inc
test
add
push
hlt
push
repz
mov
test
xor
jmp
test
jl
inc
inc
pop
inc
pop
mov
inc
sub
and
loopne
cmps
cmp
mov
and
scas
mov
movntps
fadd
mov
clc
push
mov
mov
pop
dec
lock
inc
out
jecxz
adc
sbb
clc
add
or
push
enter
adc
add
imul
or
ret
sbb
add
test
scas
int3
scas
jns
lods
push
mov
movs
adc
jmp
push
xchg
cmp
adc
xor
int3
test
push
or
mov
adc
test
add
fs
jg
and
add
mov
sub
jne
mov
xchg
pop
mov
mov
enter
adc
nop
push
ror
mov
pop
call
mov
enter
inc
lods
pop
mov
cdq
enter
lods
out
inc
adc
cld
mov
or
dec
xchg
pop
add
sbb
xor
aas
or
je
out
xchg
mov
cdq
jmp
sub
inc
and
xlat
xchg
ss
and
mov
mov
jmp
xchg
aam
adc
push
xchg
mov
in
add
add
pop
cmps
mov
test
sar
stos
mov
dec
or
or
sub
adc
into
mov
dec
sub
or
add
cmp
jmp
ss
push
and
inc
in
(bad)
inc
jmp
jo
lods
add
push
push
rcr
pop
sbb
push
add
cmp
je
fisttp
pusha
rcl
xor
ja
push
neg
mov
jge
retf
in
fld
add
fdivrp
push
les
leave
nop
sti
cmp
or
fchs
sbb
test
sbb
dec
sbb
push
call
or
shl
jp
out
lock
retf
jl
pop
mov
add
das
sub
out
push
cmp
xor
(bad)
and
xor
sbb
stos
sbb
inc
sbb
inc
adc
enter
mov
fdivr
and
fsub
add
or
inc
sbb
dec
push
add
call
fist
xchg
ss
mov
xchg
cli
lock
xchg
sbb
xchg
test
jp
xor
lock
sbb
push
push
mov
retf
fstp
lock
inc
test
inc
xor
mov
mov
mov
mov
dec
or
sub
mov
clc
fwait
pop
xor
int3
add
jbe
add
mov
mov
xchg
out
fcom
rcr
ret
cmp
retf
fld
cmp
rol
and
jb
or
push
rcr
sub
sub
daa
and
fnstcw
push
nop
add
add
fild
test
sbb
iret
push
pop
inc
enter
fist
add
sar
and
xor
inc
push
sbb
mov
add
mov
xchg
call
mov
mov
outs
enter
and
neg
and
imul
add
jmp
clc
fld
adc
push
sub
and
cld
fld
and
mov
push
rcl
mov
test
les
add
mov
enter
inc
pop
cmp
mov
jg
neg
and
add
and
push
cmp
inc
les
mov
add
add
loopne
jb
fiadd
mov
ret
sub
ret
and
inc
clc
add
rcl
add
mov
mov
shr
pop
or
add
ret
mov
sub
ret
sar
test
dec
fs
dec
jge
cwde
fsub
out
or
mov
call
jne
fisubr
imul
jne
or
add
add
test
push
xchg
xchg
cdq
popa
jmp
loope
test
loopne
icebp
cdq
add
jmp
or
in
push
and
ds
adc
sbb
shl
push
jle
pop
mov
(bad)
cld
fild
lahf
dec
jmp
(bad)
add
lea
push
jg
push
push
dec
jne
inc
sub
cmc
inc
mov
cmp
push
dec
movs
lock
or
push
mov
fadd
outs
out
lock
movzx
and
ficomp
(bad)
sbb
and
(bad)
xchg
add
ror
repnz
pop
push
sbb
mov
xor
push
call
add
sbb
inc
add
cmp
mov
jmp
pop
mov
mov
pop
mov
adc
fisub
add
push
sub
push
push
bound
xlat
cmps
js
xchg
pop
ss
push
scas
pop
push
call
imul
pop
inc
dec
inc
stos
jecxz
push
adc
inc
adc
or
xlat
test
mov
or
in
push
mov
and
xchg
push
hlt
add
mov
sbb
adc
(bad)
sbb
and
(bad)
and
int3
test
stos
inc
add
add
sub
xchg
xor
sub
adc
cmp
in
fild
(bad)
in
jg
icebp
rol
push
dec
and
sbb
ror
repz
or
jne
fcmovne
add
and
cdq
push
xor
and
pop
in
mov
dec
mov
cmp
jl
es
jle
jl
leave
in
add
xchg
push
es
push
adc
fld
pop
shl
aam
and
dec
adc
jne
loope
dec
push
sub
out
or
lods
jno
cmp
pusha
mov
pop
dec
xchg
repnz
(bad)
fiadd
leave
mov
jle
ds
daa
and
add
mov
mov
adc
mov
loope
test
pop
out
and
mov
sbb
or
inc
mov
repz
mov
jge
aam
or
pop
add
fistp
push
pop
mov
xor
adc
inc
bound
test
push
stc
add
add
pop
or
test
pop
push
lock
xor
loope
jbe
ja
aaa
ss
pop
xchg
xchg
jmp
adc
inc
ja
aas
xchg
or
pusha
sbb
jecxz
lea
fcomp
ret
les
shl
xor
adc
fimul
sub
add
inc
ror
movs
(bad)
repz
lock
adc
dec
call
sub
(bad)
nop
js
into
or
pop
jecxz
loope
add
dec
jp
push
add
xor
sbb
sub
or
or
fstp
sub
add
fidivr
retf
jne
sub
dec
loope
mov
adc
mov
dec
xor
adc
jp
movs
movs
mov
ret
dec
sti
mov
push
push
sub
sbb
and
xchg
add
push
pop
xor
mov
mov
adc
add
push
je
push
ins
push
das
lods
xchg
or
sbb
add
sbb
mov
cmp
pushf
ret
call
push
add
pushw
fimul
pushf
dec
jp
dec
and
push
sub
adc
sbb
fmul
das
sbb
mov
mov
aam
pop
ins
adc
xchg
or
cdq
sahf
sub
push
(bad)
int
jb
aaa
or
sub
add
push
push
sbb
and
dec
add
jmp
or
stos
and
xor
inc
inc
popa
daa
test
fcom
or
nop
or
dec
jae
cmp
icebp
xor
mov
inc
inc
sbb
push
(bad)
shr
cmp
and
add
pop
ret
mov
rcl
mov
jge
je
loope
gs
add
adc
and
push
mov
or
out
rol
test
sbb
pop
arpl
inc
neg
out
lea
dec
push
lea
gs
pop
push
xchg
test
sub
cmp
in
or
cmp
mov
aam
jmp
adc
fcom
push
les
dec
add
mov
addr16
js
cmp
adc
push
push
cmp
shl
call
push
or
cmc
mov
aam
mov
call
sbb
sbb
jmp
sub
in
or
add
adc
les
cmps
lea
pop
sbb
mov
push
pop
mov
movs
cmp
test
sub
jo
push
enter
pop
les
or
adc
loopne
mov
or
xchg
jp
jl
and
neg
xor
and
lods
aaa
nop
pop
sbb
add
inc
xchg
fnstenv
add
cmps
push
outs
inc
push
lock
sbb
pusha
imul
add
inc
adc
cmp
out
rol
push
ret
add
fbstp
icebp
fld
xchg
mov
inc
mov
call
sbb
into
mov
mov
test
add
sbb
dec
pop
sbb
and
fs
or
mov
xchg
shl
pop
mov
push
push
mov
or
test
or
and
mov
push
jo
jb
test
jbe
test
leave
jmp
dec
int
adc
xchg
mov
mov
outs
mov
cwde
or
push
adc
inc
sbb
mov
movs
pop
xchg
push
fcom
or
loopne
or
xor
invd
rcr
call
popa
push
jae
sbb
sbb
dec
sbb
inc
push
push
dec
pop
cmp
push
mov
inc
or
lock
mov
adc
add
adc
cmps
push
lea
sbb
push
sub
ror
js
or
jecxz
adc
and
or
cmp
retw
sahf
sub
and
xor
into
mov
push
adc
cmp
jo
mov
mov
pop
or
inc
pusha
jg
jmp
mov
out
test
push
xchg
ins
inc
mov
jne
fimul
popf
out
sbb
pop
sbb
js
sbb
sub
aas
jne
add
arpl
aam
cmp
mov
add
push
ficom
lods
mov
push
(bad)
fild
cs
test
pusha
mov
pop
je
dec
sbb
mov
sbb
add
pop
(bad)
jl
sbb
stos
mov
mov
jne
xchg
pop
or
add
fisubr
sti
pop
aas
cs
fs
pop
sub
mov
fadd
or
lahf
sub
sbb
pop
mov
or
xchg
add
push
test
add
xchg
idiv
and
or
push
inc
gs
pop
mov
or
jbe
inc
enter
fsubr
xchg
aas
push
sbb
sub
push
aaa
mov
add
mov
push
cmp
test
pop
mov
pop
lock
mov
xlat
sbb
push
pop
cs
popa
mov
sub
pop
lock
call
push
out
dec
and
jno
and
push
or
jns
cwde
cmp
jno
add
push
add
loopne
adc
shl
psllw
inc
sub
leave
aam
add
add
xchg
cli
jle
add
loopne
or
add
mov
dec
ss
cs
sub
mov
jmp
cmp
je
sbb
mov
mov
adc
add
pop
pop
push
test
mov
(bad)
sbb
aas
push
mov
clc
and
sbb
femms
add
aas
nop
pop
xchg
and
les
inc
mov
dec
ficom
daa
daa
sbb
adc
sbb
or
sbb
aaa
cmp
in
enter
pop
sbb
inc
add
add
lock
dec
clc
push
aas
xor
inc
repnz
push
adc
adc
mov
fisttp
into
outs
popf
xchg
adc
mov
ja
pusha
ret
jle
call
pusha
std
fisubr
nop
mov
call
int3
or
stos
jge
rol
sbb
jb
add
bound
inc
inc
add
inc
jmp
ja
out
clc
jmp
icebp
sbb
cli
add
add
add
push
inc
or
loop
jo
xchg
mov
sbb
call
(bad)
push
mov
push
adc
jne
pushf
mov
out
sahf
inc
sub
pop
popa
ret
dec
fstp
push
dec
mov
into
push
loop
sar
dec
test
adc
(bad)
jl
pop
pop
and
and
jo
push
xor
lds
xchg
mov
dec
sbb
or
sub
cli
push
jg
scas
lods
lahf
dec
push
fisubr
add
test
cmp
imul
pop
cs
add
sub
rcl
ret
das
xor
in
lods
cwde
mov
dec
add
push
sti
ror
add
cmp
xor
mov
push
or
mov
sub
test
or
outs
and
xchg
dec
pop
sbb
add
jmp
sbb
sub
add
adc
xor
out
out
push
and
adc
sbb
jns
xor
cmp
or
fldenv
ret
xchg
sti
add
add
ret
push
inc
or
movs
push
adc
dec
ret
xchg
clc
std
sbb
xchg
xchg
popf
mov
push
add
or
xlat
and
jmp
xor
add
sub
jle
pusha
and
cmp
addr16
popa
cmc
les
add
add
pop
push
clc
xor
jne
adc
add
xchg
push
or
ret
mov
test
ror
inc
jne
mov
shl
arpl
(bad)
sbb
mov
ret
clc
xchg
dec
and
sub
mov
sbb
jbe
inc
mov
cli
lea
xor
mov
mov
mov
and
mov
sbb
shr
sbb
dec
test
stos
cmp
movs
add
or
mov
or
xchg
js
pop
push
adc
add
mov
(bad)
sbb
cmp
push
jmp
loopne
lea
paddusw
aas
fistp
ret
xlat
lock
aam
bound
out
add
push
adc
and
add
and
inc
fbld
or
push
sbb
dec
in
jmp
mov
push
pop
icebp
mov
js
and
es
xadd
lods
cld
cli
outs
or
sbb
(bad)
cmp
add
push
add
push
and
jae
mov
neg
ret
cli
cmp
ja
cmp
inc
jmp
jo
jbe
jo
ret
jle
aas
ret
dec
clc
jg
add
test
add
mov
in
jp
jne
add
inc
xchg
aaa
div
push
xchg
js
stos
sbb
mov
push
sub
fmul
sbb
add
inc
or
add
sar
push
add
jl
xor
popa
pop
sub
repnz
enter
and
and
cli
pop
mov
add
mov
inc
stos
xchg
mov
aam
jo
hlt
fwait
ja
push
inc
push
sahf
loopne
retf
adc
int3
pop
cmps
mov
jecxz
push
ins
les
ins
xor
mov
lock
or
sub
imul
cmp
fidiv
or
out
push
(bad)
cmp
add
push
pop
cmp
jo
and
aaa
adc
sbb
pop
es
jg
push
shl
ret
or
mov
sbb
jecxz
add
cmc
cmp
lock
inc
add
fiadd
or
xor
mov
xor
jne
add
sub
add
cmc
icebp
test
push
loope
xchg
cmp
jmp
cwde
adc
rcl
xchg
sbb
push
inc
and
test
adc
fcmove
push
lahf
jb
xchg
xor
adc
fmul
les
mov
pop
lods
push
add
sub
fist
aaa
retf
aam
jp
add
out
mov
ss
fcmovnbe
mov
sbb
retf
sar
xchg
pop
fst
adc
cwde
pop
les
push
test
mov
daa
pop
(bad)
dec
mov
(bad)
jmp
fadd
es
prefetchnta
mov
popf
inc
cld
cwde
imul
push
and
or
jo
and
jns
cmp
add
cwde
mov
cwde
lea
popf
pop
ror
mov
mov
pop
in
push
adc
pop
(bad)
ror
retf
shl
mov
mov
push
inc
sub
lods
and
jle
mov
xchg
or
pop
pop
loop
adc
nop
jmp
inc
fcomi
mov
xchg
pop
fmul
fdivr
or
shl
aas
pop
jbe
js
inc
mov
imul
push
xchg
adc
fsub
and
cld
mov
std
pop
push
shl
sti
dec
out
jg
in
scas
adc
push
in
push
inc
xor
push
in
dec
sub
bound
mov
adc
sbb
sahf
loopne
gs
call
loope
sub
retf
sti
cld
enter
hlt
loope
sub
pop
lods
adc
xor
das
repnz
std
jbe
mov
call
lahf
xchg
pop
imul
pop
mov
clc
xchg
cld
sahf
lea
mov
push
add
movs
test
daa
or
adc
mov
pop
pusha
pop
pop
jg
sub
in
add
inc
pop
fcmovnb
add
fsubrp
aaa
push
ret
inc
adc
(bad)
pop
dec
mov
sub
cmp
lea
test
int
xchg
add
lods
mov
mov
std
cmp
sbb
jbe
jmp
add
mov
enter
add
jb
sahf
out
ins
or
jbe
(bad)
cmp
jbe
jae
sti
or
stc
es
adc
xor
fdivr
scas
sbb
ret
pop
jmp
push
retf
xchg
je
dec
sbb
ja
mov
add
ror
sub
test
mov
mov
or
enter
fisub
std
sbb
adc
dec
add
out
jbe
test
cmp
stc
jmp
xchg
inc
cmp
loopne
ret
repz
inc
jl
cmp
jle
dec
ficomp
cmp
add
adc
and
fadd
sbb
daa
shl
adc
sbb
out
fimul
adc
xor
mov
adc
jo
clc
xor
sar
push
jmp
or
and
jge
adc
mov
cs
pop
add
fcmovnbe
inc
shl
and
cmp
jge
sub
lea
ja
outs
out
adc
add
clc
add
js
push
stos
jge
dec
cmp
loope
mov
adc
sub
fiadd
loop
and
dec
mov
add
lods
loope
call
inc
adc
cs
or
in
call
rol
add
pop
sub
mov
cwde
push
inc
push
push
jg
loope
pop
std
sub
sbb
rol
adc
jg
and
mov
pop
sbb
mov
inc
mov
test
repz
cmc
fcom
mov
in
sbb
inc
push
dec
outs
pop
ins
gs
mov
jb
hlt
mov
mov
pop
push
sbb
push
sbb
ret
push
aaa
mov
cmp
je
mov
xor
ins
mov
push
mov
(bad)
ins
add
sbb
ins
in
stos
cmp
jne
test
jmp
es
dec
add
mov
jl
or
add
push
rol
sbb
pusha
xchg
push
push
test
mov
mov
push
cli
jmp
stos
rcr
push
sbb
add
and
cmovae
mov
cwde
adc
dec
sub
ret
mov
cmp
or
pop
mov
push
add
call
scas
rcr
lock
push
lea
push
xchg
add
mov
add
ds
das
cld
push
rcr
jnp
adc
push
add
or
add
xchg
jo
outs
xchg
cmp
jg
pop
lock
test
ds
pusha
xor
test
xor
cli
ins
and
bound
rcr
dec
clc
dec
mov
and
add
inc
aaa
mov
add
mov
dec
out
inc
cmp
or
mov
sub
out
mov
xor
movs
xchg
repnz
mov
je
sub
jge
popa
push
mov
push
pop
ja
sbb
add
je
call
push
pop
xchg
adc
dec
xchg
pop
das
xchg
jbe
or
add
jmp
push
std
jns
push
fst
es
add
add
add
push
pop
or
or
loopne
sahf
or
push
adc
jle
mov
jo
(bad)
sub
aaa
fnstsw
or
jle
xchg
push
jg
add
or
scas
mov
fninit
xor
lock
sar
or
xchg
iret
repz
sub
and
sbb
dec
add
les
int
jns
adc
js
ficom
jns
sub
push
mov
hlt
shl
(bad)
or
xor
mov
fimul
inc
add
sub
loope
lods
test
dec
int3
add
das
push
adc
push
in
je
adc
clc
mov
leave
and
cmp
and
or
ss
xchg
or
call
lahf
push
cmp
mov
sub
xchg
cmps
in
adc
sub
out
push
in
inc
mov
or
and
in
pop
in
pop
pop
ja
mov
push
les
in
cmp
dec
mov
xor
cmp
nop
dec
(bad)
nop
lock
out
push
fdiv
push
jns
and
pushf
fdivr
pop
jno
out
aam
mov
add
jmp
adc
jge
mov
push
aam
sub
(bad)
adc
xchg
xchg
(bad)
imul
loopne
(bad)
and
adc
xchg
xor
inc
lods
push
daa
jo
icebp
mov
push
sar
add
les
mov
pushw
sbb
adc
xor
popa
test
adc
sub
cld
add
cmp
xor
cmp
(bad)
fcomi
call
inc
inc
add
inc
add
or
pop
add
pop
nop
push
dec
lea
test
add
push
sbb
ret
imul
xchg
pusha
enter
icebp
and
ja
test
jo
add
jmp
fistp
and
pop
cmp
mov
das
cmp
mov
(bad)
and
xor
stos
call
push
push
pop
xchg
pop
mov
cld
frstor
or
xor
movzx
mov
out
adc
and
retf
and
xchg
pop
dec
shl
jbe
ja
cmps
and
dec
out
sbb
push
sub
ret
adc
pop
adc
add
popa
pop
pop
cmp
xor
and
xor
adc
imul
(bad)
(bad)
xchg
(bad)
ds
dec
inc
std
or
adc
add
rcr
xchg
les
std
adc
pusha
addr16
dec
ret
mov
mov
nop
dec
in
push
mov
in
das
and
pop
dec
je
add
and
inc
inc
pusha
lock
das
push
sbb
add
xor
pop
neg
xlat
sbb
dec
jmp
mov
inc
pop
shr
int
(bad)
mov
push
(bad)
adc
sbb
sbb
and
cmp
call
call
out
stos
dec
sub
inc
sar
stos
in
mov
push
in
aam
movs
dec
jmp
inc
mov
inc
(bad)
clc
jmp
mov
retf
push
jo
fistp
fdiv
loopne
adc
pop
push
and
lods
shr
adc
push
or
adc
loop
cmc
sbb
es
lods
out
stos
add
out
push
loope
xor
push
push
add
or
aaa
test
sahf
xchg
int3
add
pop
dec
pop
or
add
jmp
xchg
push
(bad)
fucomip
cmp
inc
retf
and
mov
(bad)
adc
and
or
sbb
sub
push
jmp
sar
dec
cmp
fist
push
jmp
lds
or
ret
adc
les
mov
ret
nop
or
scas
inc
mov
mov
pop
cmp
lock
jmp
lea
push
add
in
pop
jecxz
and
dec
and
mov
sbb
cmp
sub
jmp
sbb
jb
dec
sub
(bad)
test
mov
std
mov
xor
inc
mov
xor
xor
pop
(bad)
xor
fadd
dec
fadd
call
cmp
cmp
stc
sub
push
or
push
jle
mov
clc
retf
push
mov
lods
or
es
aam
lock
cmp
dec
lea
push
fbld
push
and
fisttp
test
or
ret
add
fbld
jp
stc
mov
and
inc
mov
mov
ins
cmp
imul
sub
xor
inc
mov
push
and
adc
inc
dec
les
loope
adc
and
div
out
mov
mov
nop
or
add
push
xchg
add
mov
push
les
push
mov
xor
lds
sbb
push
jbe
dec
fimul
jno
and
or
xchg
clc
push
cs
rol
pop
fwait
mov
inc
push
push
inc
fisub
sub
add
xor
aam
loopne
adc
bound
sahf
add
sahf
lahf
xchg
cmp
or
in
adc
mov
outs
or
add
push
nop
or
jge
ror
lea
pop
movsx
scas
aam
mov
(bad)
int
jecxz
test
out
dec
rcl
mov
push
mov
clc
iret
pop
mov
add
push
mov
or
cld
jno
add
mov
adc
add
or
sbb
jmp
add
pop
cld
or
push
lds
addr16
adc
add
mov
pop
push
add
push
movs
mov
jmp
or
imul
pusha
(bad)
xchg
pop
push
jae
add
fidivr
add
xor
push
push
inc
push
in
xor
add
loop
cmp
dec
push
shl
jg
mov
or
sbb
mov
leave
dec
sub
les
jns
cmp
mov
xchg
mov
pop
mov
lds
aaa
adc
mov
(bad)
test
ins
adc
pusha
and
fdiv
pop
dec
sub
jo
mov
pop
and
(bad)
push
scas
inc
mov
add
mov
push
sahf
idiv
ror
or
jle
sbb
xchg
adc
pushf
jbe
retf
fwait
xor
add
es
push
lock
fcmovnb
bound
mov
xchg
fimul
adc
or
sub
jo
mov
ds
cmp
jge
jl
movs
div
cmp
or
jo
mov
(bad)
push
inc
add
data16
jne
pop
inc
or
mov
or
outs
sbb
and
jae
add
jbe
pop
xor
mov
punpckldq
add
add
push
mov
loopne
xor
lds
push
sbb
mov
push
ret
imul
pop
fiadd
sti
fs
xchg
dec
int3
push
or
xor
pop
loopne
xor
mov
dec
xor
xchg
lods
sbb
movs
sub
sub
inc
inc
gs
adc
push
jo
or
dec
loop
sahf
adc
(bad)
inc
add
lea
dec
push
mov
add
(bad)
ror
xor
add
lods
add
add
add
leave
add
sbb
pop
icebp
push
jl
or
dec
dec
jnp
mov
inc
shr
xor
cmp
leave
lods
and
popa
mov
rcr
xor
ret
fs
mov
inc
lods
adc
xchg
mov
add
inc
or
lea
scas
jmp
adc
movs
repnz
inc
or
and
ds
shr
cmp
es
movs
ja
cmp
mov
mov
and
add
test
ss
xlat
sub
test
jg
sbb
add
lea
mov
clc
jne
dec
mov
ds
test
je
add
fisub
push
lock
je
lods
add
mov
or
les
lock
jbe
(bad)
movs
cmps
push
adc
xchg
retf
mov
jmp
mov
adc
jmp
cmp
adc
stc
add
or
dec
lods
push
cmps
mov
jb
or
daa
ins
lock
lahf
add
xor
and
mov
je
test
out
fst
push
mov
or
jmp
adc
mov
ds
and
sbb
add
xchg
fild
inc
sub
pop
fisttp
cmps
adc
or
add
repnz
or
mov
mul
adc
pop
push
das
push
popa
inc
lock
sbb
and
inc
jmp
cmp
mov
xchg
scas
neg
jbe
xchg
lock
inc
imul
sahf
add
fs
addr16
sub
jne
inc
xor
xor
adc
and
mov
mov
ja
int
xchg
(bad)
push
sub
ds
sbb
add
ret
push
cld
and
mov
mov
jno
loopne
dec
cmp
add
sbb
js
je
cld
stos
gs
sub
lahf
jne
dec
ja
inc
add
hlt
push
inc
inc
daa
retf
push
test
scas
ret
enter
mov
or
cmp
dec
pop
mov
xor
inc
adc
test
xchg
mov
into
sub
pop
in
add
push
pop
out
aam
add
call
out
inc
sbb
or
sub
mov
ret
add
jge
push
aaa
pop
loopne
cmp
push
sbb
push
sbb
add
fcmovb
jmp
inc
add
mov
adc
or
push
jle
or
add
xchg
and
add
mov
shl
rcr
lods
xchg
je
pop
mov
retf
(bad)
(bad)
call
jmp
cmc
jo
bound
mov
xchg
les
add
es
retf
maskmovq
cmc
loope
inc
ror
pop
cmp
int3
mov
jo
adc
mov
ror
sub
rcl
push
push
dec
mov
pop
push
push
lds
add
jne
jmp
add
lods
and
push
push
call
inc
imul
clc
fcom
inc
dec
jg
lea
add
icebp
loop
(bad)
xor
je
rcl
sti
inc
mov
aam
adc
test
int
fadd
cld
std
or
mov
jmp
(bad)
jmp
xor
pusha
sbb
ret
pop
imul
aas
add
jmp
nop
je
ds
mov
es
jbe
push
dec
or
les
pop
dec
rol
push
xchg
test
inc
test
nop
mov
call
push
sbb
inc
mov
inc
ret
dec
and
push
add
cmp
dec
pop
aam
pop
ret
mov
push
mov
cmp
push
je
cdq
jg
nop
inc
mov
test
call
mov
stos
mov
pop
cmp
jecxz
xor
pop
or
jne
and
(bad)
fcomp
mov
scas
in
aad
movs
loopne
les
push
inc
ret
add
adc
retf
adc
cdq
es
ins
enter
sbb
pop
xor
sbb
or
repnz
sub
mov
movs
sub
or
pop
pop
inc
popf
es
test
and
dec
sub
mov
(bad)
mov
dec
clc
hlt
or
ret
(bad)
and
pop
call
scas
jno
or
pop
fmul
lock
mov
das
or
pop
jno
mov
mov
sbb
dec
pop
jne
out
popa
jge
jp
mov
jmp
add
jb
push
shl
xor
jp
pop
daa
inc
add
push
test
push
dec
ret
cmp
push
jp
inc
adc
pop
adc
add
mov
inc
mov
add
js
sbb
sub
lock
or
xor
cdq
jbe
pop
inc
sub
repz
je
sbb
add
aas
mov
test
sub
popa
and
dec
mov
data16
imul
lods
data16
fs
push
add
jae
or
sbb
outs
add
in
sbb
pop
adc
jbe
sub
mov
adc
push
arpl
dec
add
cmp
mov
je
and
pop
aam
sbb
adc
inc
jmp
add
and
mov
popf
and
test
imul
fmul
inc
cli
sbb
or
lahf
(bad)
inc
inc
push
pop
dec
mov
adc
mov
mov
test
cmp
enter
pop
jecxz
pop
sbb
inc
mov
xor
jge
sbb
fs
aam
sbb
sbb
clc
mov
les
and
jne
fs
fadd
add
xchg
push
pop
retf
stos
je
or
add
mov
pop
jecxz
arpl
cwde
inc
push
push
add
add
cmc
pop
pop
sbb
sti
sub
push
cld
add
push
sub
enter
(bad)
(bad)
mov
sar
add
sub
mov
lock
or
ja
mov
test
cmp
cmp
rcl
or
lds
adc
mov
jae
xchg
push
mov
loop
or
xchg
push
mov
mov
mov
out
jb
pop
call
push
ret
jae
push
push
mov
enter
sbb
push
and
add
sbb
mov
mov
ret
gs
xchg
push
or
sbb
dec
jb
aad
cmp
sbb
nop
sub
cli
cmp
jae
and
jecxz
inc
imul
imul
in
mov
push
or
ins
inc
std
mov
cmp
ja
retfw
popa
add
pop
in
sbb
or
xchg
rcl
push
call
sbb
sub
sbb
shl
pusha
xchg
dec
jnp
sbb
rcl
and
icebp
arpl
push
lahf
sbb
test
xor
jg
and
fidiv
inc
ja
in
dec
outs
sbb
stos
cmp
fimul
push
adc
call
adc
popa
mov
push
push
call
ins
pop
or
mov
push
test
jge
icebp
dec
cld
cmp
ja
sub
adc
push
lock
sbb
rcr
pop
adc
fadd
sbb
xor
inc
sub
jle
stos
imul
xchg
dec
in
popf
jmp
cmp
sbb
add
jmp
add
inc
aas
jg
add
lea
xor
clc
cmp
pop
loopne
fwait
aas
aas
jns
add
in
mov
std
add
xchg
lock
mov
mov
and
or
call
rcr
jmp
rol
outs
and
pop
loop
adc
jmp
push
ins
adc
mov
call
inc
adc
aaa
push
and
adc
sbb
jmp
out
add
leave
ret
hlt
fild
test
or
adc
or
jmp
stos
dec
pushf
mov
sti
inc
inc
loopne
mov
into
push
sbb
retf
out
rol
xchg
movs
int3
aas
xor
cmp
push
out
pop
lock
test
test
inc
cmp
pusha
adc
mov
add
call
or
dec
clc
cmp
jbe
popa
dec
movs
sti
addr16
ds
imul
out
sub
mov
fbld
inc
ja
imul
add
jne
mov
test
sbb
stos
jmp
add
in
pop
sub
xor
mov
fimul
mov
jno
ret
mov
jns
dec
xor
mov
push
hlt
lods
sbb
sbb
bound
mov
push
cmp
xor
jmp
test
popf
pop
push
adc
jmp
sbb
add
outs
sbb
push
fdivr
add
sub
sub
inc
fnstsw
lahf
(bad)
les
push
mov
mov
test
test
cmps
push
ror
js
daa
cs
std
hlt
dec
inc
sbb
or
jmp
xor
jl
jne
ficomp
ja
ucomiss
les
jo
mov
push
push
jnp
cmp
lds
mov
mov
mov
icebp
jl
xchg
out
jl
test
inc
and
les
pop
call
test
add
add
xchg
loop
inc
and
push
inc
fstp
add
and
lock
popa
cmp
sbb
or
std
call
mov
lods
cmp
test
loopne
adc
gs
verr
adc
fsubr
sbb
add
and
rcr
test
lods
in
and
loope
cmp
jns
or
jo
xor
je
xor
and
lock
add
adc
inc
pop
inc
push
lock
(bad)
xor
jo
add
mov
jo
dec
movs
mov
inc
jl
add
jmp
sub
add
push
jne
iret
xchg
or
push
(bad)
outs
inc
ret
outs
adc
jae
sub
inc
add
sub
or
into
sub
rol
jae
xchg
inc
add
or
sub
mov
fidiv
ret
ret
inc
sub
dec
js
xchg
out
inc
inc
imul
repz
adc
add
xor
sub
ins
pop
mov
jbe
sub
mov
call
xchg
je
js
pop
mov
pushf
in
cli
inc
jne
call
pop
or
and
mov
in
push
out
es
fmul
adc
adc
add
mov
inc
pusha
retf
in
outs
add
fbstp
movzx
add
sub
nop
dec
sar
and
cwde
rol
sub
push
adc
mov
mov
adc
in
adc
loopne
adc
sbb
sar
push
aaa
add
push
or
or
xor
push
xor
cmps
sahf
pop
sahf
and
or
xlat
aaa
inc
inc
or
retf
and
enter
dec
ins
in
cmp
xor
and
lock
sub
sbb
cmp
(bad)
jge
cmps
xor
dec
mov
sbb
dec
pushf
pop
fst
sub
movs
inc
adc
push
pop
daa
add
dec
xor
jo
sar
and
mov
push
cmp
retf
jbe
cmp
xchg
std
rcl
dec
push
inc
(bad)
bound
loope
sti
cli
and
cmp
and
add
or
push
and
cli
es
add
xor
rol
adc
dec
jmp
push
inc
sbb
sub
dec
push
and
sub
fimul
push
inc
int3
xor
sub
push
mov
scas
in
dec
push
aam
inc
mov
mov
shl
sbb
rcl
lds
xor
sar
cs
aam
inc
mov
inc
mov
sub
mov
outs
inc
push
bound
xlat
retf
sbb
mov
xor
and
mov
daa
aas
mov
not
das
hlt
sbb
or
in
and
push
xchg
cld
xchg
rcr
inc
mov
stos
adc
or
pop
pushf
adc
xor
fs
nop
mov
scas
aam
and
push
add
call
nop
sub
cmp
je
or
inc
enter
xor
in
adc
push
jb
xchg
sbb
lock
pop
lods
dec
dec
add
js
ror
aam
popa
ins
sbb
dec
xchg
pop
das
dec
dec
popa
je
inc
jo
mov
nop
addr16
ss
ret
inc
xor
or
lods
sub
push
pop
and
mov
outs
rol
push
jb
jbe
fmul
addr16
aaa
inc
mov
or
ins
push
xchg
pop
outs
inc
aas
or
outs
fs
rcr
adc
or
pop
sub
inc
in
loope
xchg
adc
dec
jo
add
mov
aaa
and
aaa
push
or
and
gs
mov
or
inc
jns
cmps
mov
adc
jl
inc
add
movs
dec
xor
outs
cmp
xor
mov
ret
adc
mov
or
sub
pop
or
pop
es
ja
xchg
sbb
cmps
fisttp
add
or
pusha
lahf
cmps
jbe
cmps
cmps
push
sar
sub
jge
fcomp
mov
dec
add
add
pop
or
cs
add
push
jns
jne
ins
jae
cmp
inc
mov
dec
xchg
pop
mov
push
dec
mov
sbb
fld
dec
mov
pop
jae
dec
sub
sub
inc
inc
cs
lods
pop
cmp
sub
ja
dec
add
mov
aaa
dec
enter
add
pop
push
mov
or
add
(bad)
test
sbb
(bad)
push
add
mov
push
mov
or
inc
mov
inc
jb
aas
push
dec
cmp
or
jg
dec
stos
popa
adc
test
dec
retf
xor
dec
dec
ja
std
sub
mov
nop
adc
jg
sbb
jnp
pop
pop
pop
adc
hlt
imul
mov
jne
cmp
xor
jle
sub
ss
loopne
adc
stos
inc
movs
and
enter
or
and
xor
in
inc
jb
add
dec
mov
mov
les
or
xor
dec
xor
add
pop
les
inc
sbb
(bad)
mov
and
in
test
dec
push
mov
ins
xchg
dec
movs
test
mov
ds
imul
and
popa
in
cmc
push
inc
or
mov
pop
loopne
and
mov
push
xchg
outs
or
and
jae
inc
les
js
pop
in
mov
and
(bad)
jg
add
addr16
sbb
mov
xor
inc
mov
xor
sub
push
mov
mov
call
lods
and
or
popa
fist
and
ins
mov
in
dec
loope
ret
iret
repnz
mov
lock
je
cld
xchg
inc
mov
sbb
or
daa
lea
mov
add
mov
popf
in
mov
pop
inc
in
cmp
dec
enter
(bad)
ficom
push
add
xchg
hlt
cmp
popf
or
push
daa
sub
pusha
shr
push
dec
lock
pop
push
or
pop
mov
add
dec
sbb
das
xchg
adc
inc
daa
das
push
packssdw
ret
push
rol
jmp
es
mov
mov
inc
xor
js
cmp
jl
rol
jge
fstp
mov
or
or
cmc
xchg
or
xchg
jno
jmp
sar
cwde
shr
repz
cmp
add
mov
push
add
ror
jp
xchg
push
xor
iret
sub
popa
sbb
out
pop
inc
adc
jg
fsub
xor
mov
lods
or
test
push
push
jl
lea
and
in
fadd
xor
mov
test
and
jge
hlt
mov
push
popa
call
(bad)
out
movs
getsec
inc
add
jb
popa
outs
je
sub
push
aad
cmp
push
and
shr
lahf
sub
adc
sub
lea
clc
push
adc
ret
loope
push
pop
test
mov
pusha
mov
inc
fcom
fdiv
mov
sub
or
xor
dec
add
cmps
adc
or
jg
pop
push
adc
mov
xor
sbb
jmp
sbb
(bad)
push
mov
inc
in
call
enter
test
xchg
rcl
sbb
dec
or
add
jle
push
call
adc
inc
movs
fwait
xchg
xor
loope
(bad)
sub
mov
imul
enter
or
sub
es
dec
jb
pmuludq
mov
xor
xor
inc
call
leave
loope
push
cwde
inc
cwde
retf
pop
adc
pusha
loopne
xchg
xchg
inc
sub
pop
and
sbb
or
(bad)
dec
in
ret
test
jg
ret
push
push
jmp
push
sbb
pop
sbb
in
or
ins
and
fistp
pop
pop
(bad)
or
inc
add
or
inc
inc
dec
ins
test
inc
lds
pusha
sbb
addr16
xlat
mov
xlat
push
push
dec
arpl
fadd
scas
(bad)
sti
dec
ja
jmp
or
ins
jo
xor
das
add
pop
lods
mov
xor
push
pop
fadd
sub
cmp
les
mov
or
cmp
or
mov
xchg
fist
inc
adc
mov
shl
inc
mov
push
mov
mov
std
add
and
add
jno
push
lea
push
pop
lea
and
mov
push
xchg
icebp
clc
or
pop
jo
int
push
add
nop
push
repz
repnz
cmp
cli
(bad)
xor
cmps
fisttp
or
and
jl
push
out
jg
and
or
fs
cmp
adc
loope
sbb
outs
sbb
dec
add
daa
inc
loopne
je
dec
loopne
sub
or
pop
sti
icebp
(bad)
or
add
sub
mov
sub
and
xchg
popa
enter
jg
jmp
inc
add
pusha
or
mov
out
mov
xchg
loope
in
mov
pop
add
dec
mov
lods
add
and
adc
inc
clc
jle
or
stc
nop
push
test
cs
inc
inc
xor
inc
in
sub
cli
bound
ror
movs
imul
mov
mov
ffreep
arpl
dec
scas
jnp
xor
jmp
push
add
aaa
adc
mov
jno
mov
ffree
jg
out
mov
and
mov
ret
jmp
cmp
test
xor
fiadd
sub
dec
pop
dec
mov
inc
push
push
add
add
or
mov
pop
sbb
test
iret
repnz
cmp
leave
or
mov
jbe
push
adc
stos
nop
mov
sub
mov
sbb
jmp
rcr
ja
and
ret
mov
mov
pop
and
idiv
lahf
add
add
ja
mov
inc
test
add
add
add
mov
mov
cmps
je
or
retf
cwde
int3
push
adc
fimul
push
or
add
xor
fsubrp
xor
jne
cmc
inc
fdivr
fsub
or
dec
arpl
(bad)
das
or
ds
jl
cmp
ins
xchg
xor
ret
addr16
adc
retf
mov
stos
popf
jns
into
outs
ret
fisttp
sub
cmp
nop
xchg
mov
cmp
jae
mov
ror
ret
fisttp
ret
inc
cmp
iret
jns
and
adc
imul
inc
mov
push
xchg
cmp
loop
mov
inc
jno
mov
cmps
push
xor
xbegin
cmp
cmp
inc
js
dec
pop
cmps
add
or
es
lock
xchg
js
and
adc
sub
ret
mov
cmp
jl
inc
sbb
pop
dec
or
adc
dec
(bad)
xlat
dec
rcr
sub
jne
in
adc
stos
movs
les
call
sahf
adc
mov
xor
adc
dec
add
imul
dec
add
adc
test
mov
out
sbb
pushf
push
mov
fild
push
pop
xchg
jbe
in
or
shl
and
mov
mov
jmp
fnstsw
add
adc
or
retf
add
popa
leave
fmulp
ds
or
es
cmc
pop
mov
xor
jne
dec
or
adc
in
push
mov
add
jmp
les
call
inc
xlat
loope
jge
add
lds
sbb
lds
cmp
jnp
sbb
ret
idiv
dec
add
add
mov
xor
sub
push
xchg
stos
add
mov
xchg
mov
pushf
pop
pop
xlat
sub
add
outs
ror
fld
mov
sub
jmp
outs
lock
add
add
push
push
mov
sahf
dec
push
mov
inc
or
xchg
fst
dec
call
inc
sub
pop
fdivr
mov
jbe
jns
push
push
call
inc
or
ret
xchg
sti
dec
xor
shl
in
call
adc
or
push
push
call
cmp
scas
xchg
xchg
jle
test
dec
xchg
cmps
cmp
ss
loop
mov
mov
mov
out
mov
pop
mov
pop
cmp
push
xor
add
leavew
jmp
mov
nop
mov
xchg
xchg
cmp
xor
mov
mov
sahf
adc
or
sahf
or
fild
dec
push
sub
in
and
dec
inc
add
es
push
retf
adc
rol
nop
inc
(bad)
das
add
or
outs
add
call
inc
in
jno
jmp
mov
xor
(bad)
push
enter
add
repnz
pop
sub
add
fcmovu
push
inc
sub
xor
cmp
push
shl
call
fs
into
mov
add
sti
imul
hlt
push
cld
dec
and
pop
sub
enter
xor
jne
pop
mov
idiv
sahf
add
xchg
adc
mov
pop
test
push
into
ror
or
cmp
jl
dec
cmps
sbb
fisubr
xor
shr
cmp
sub
push
dec
xor
xchg
aam
add
add
rol
sbb
push
xchg
mov
add
outs
jecxz
and
xor
loop
dec
test
add
pop
xchg
pop
(bad)
cmp
fldenv
mov
sar
push
sbb
into
and
xchg
add
imul
ja
(bad)
sub
retf
je
or
addr16
inc
lods
sbb
ss
sbb
retf
jl
adc
xor
mov
(bad)
dec
or
mov
pop
and
add
add
mov
xor
add
push
adc
sub
loopne
xor
jae
aam
adc
call
lods
(bad)
pop
inc
nop
(bad)
or
mov
add
mov
and
js
mov
ja
inc
or
add
out
adc
std
inc
mov
ja
movs
clc
jbe
or
add
adc
pop
inc
dec
jbe
adc
lds
push
lock
int3
add
cwde
pusha
mov
test
sub
jge
in
inc
xor
inc
sbb
leave
pop
sub
(bad)
jp
jae
sbb
(bad)
or
shl
jne
and
jae
inc
add
shl
add
sub
(bad)
jbe
test
(bad)
mov
(bad)
(bad)
sbb
jmp
aaa
and
cmps
pop
or
jp
inc
loop
mov
add
pop
xchg
or
pushf
xor
xor
add
inc
add
add
jge
pop
stos
les
gs
jne
mov
(bad)
push
cvttps2pi
jnp
or
adc
mov
into
push
inc
dec
inc
xchg
xor
ds
cli
inc
mov
mov
adc
rol
test
add
mov
cmp
adc
dec
sub
mov
mov
sahf
je
(bad)
jne
xor
jnp
or
mov
dec
or
add
push
in
pop
div
cmp
repnz
daa
js
cmc
shl
dec
imul
sub
loope
ret
cmp
cmp
add
daa
cmp
jmp
mov
popf
ret
or
or
sbb
mov
inc
int
lock
dec
call
add
pop
dec
xchg
pop
stc
repnz
or
or
pop
adc
lods
adc
sbb
sbb
arpl
pushf
aaa
call
call
bnd
lea
xor
dec
mov
or
test
push
hlt
push
inc
mov
cld
inc
mov
ins
sub
pop
shld
mov
pop
scas
rol
movs
pop
jmp
adc
mov
les
dec
pusha
fdivr
jns
adc
sar
and
jge
jg
cmp
cmp
lock
jle
cmp
ins
xor
or
test
jo
and
fisub
xor
push
mov
adc
mov
jmp
or
add
stos
adc
shl
or
rcl
add
mov
or
lahf
pop
mov
adc
or
add
jnp
mov
dec
or
adc
push
out
add
and
xor
or
jno
inc
and
add
adc
imul
or
pop
enter
dec
push
cmp
sbb
xor
mov
or
sub
clc
or
lock
(bad)
leave
mov
cld
lods
loop
mov
push
add
cmp
shr
sbb
or
fsub
fidiv
loope
pushf
adc
movs
mov
xchg
mov
fist
pop
jae
data16
lods
xchg
jmp
mov
xchg
pop
int
pop
in
nop
inc
xor
inc
cmp
rol
inc
inc
sbb
or
jno
div
mov
fcmovb
aam
loop
xor
sbb
add
ret
mov
sub
push
cdq
ret
jle
not
or
or
fstp
jo
sbb
mov
push
mov
xor
jmp
(bad)
or
cli
jbe
push
ror
push
xor
mov
sbb
sub
loopne
imul
sahf
push
fiadd
test
cmp
cmp
mov
push
push
and
or
out
sbb
pusha
mov
mov
push
(bad)
pop
inc
adc
sbb
cmp
into
pop
sbb
inc
cmp
cmp
xchg
lea
ds
imul
inc
scas
nop
inc
jle
dec
pop
add
jl
add
cmp
mov
inc
rcl
sti
xor
add
push
or
loopne
or
dec
add
imul
add
outs
dec
cwde
sub
in
mov
or
pop
mov
push
cmc
jnp
pop
sbb
pop
test
mov
push
dec
inc
ficom
movs
mov
imul
fdivp
push
cmps
jno
add
mov
jle
mov
mov
call
dec
(bad)
es
add
xor
jo
jg
push
or
push
aam
jmp
sbb
popa
es
add
push
lods
and
mov
jno
and
outs
aad
and
idiv
add
or
mov
dec
and
dec
rcr
xor
mov
or
cld
mov
adc
adc
std
loope
cmp
push
mov
js
jbe
mov
rcr
push
mov
mov
sbb
or
mov
add
shl
pop
jb
mov
sbb
push
mov
not
imul
out
ja
aad
jo
cmp
mov
daa
sbb
or
scas
and
mov
inc
and
pop
(bad)
enter
call
adc
clc
cmp
pop
std
bound
sub
jmp
sub
(bad)
pusha
inc
iret
pop
les
jg
mov
lock
sub
cmp
es
shl
pop
test
aad
adc
sbb
bound
sub
ret
repnz
dec
sub
sub
ins
cmp
add
xor
sahf
dec
sbb
dec
pop
cmp
mov
jmp
push
js
add
jnp
and
jnp
aam
ins
(bad)
jne
jne
dec
(bad)
addr16
or
mov
inc
push
jb
sub
std
inc
rcl
dec
add
into
jg
xchg
sar
sahf
dec
jle
cmp
and
pop
fdivr
adc
mov
(bad)
(bad)
xchg
mov
loopne
(bad)
push
loopne
inc
add
pop
cwde
neg
jbe
mov
imul
mov
push
movs
test
pop
xchg
es
out
or
jb
mov
not
clc
adc
mov
add
xor
mov
push
aam
add
mov
loope
js
sub
add
in
ss
sbb
sbb
loopne
add
adc
pushf
add
ret
ja
stc
test
fisubr
inc
mov
repnz
cmp
pop
movs
add
retf
add
cmp
push
inc
rol
jbe
mov
(bad)
mov
add
jo
inc
add
and
les
lds
and
sbb
leave
adc
(bad)
fsubr
imul
loopne
adc
xlat
push
mov
add
sub
and
add
push
pop
pop
cmps
inc
lods
cmp
xor
xor
adc
bswap
mov
clc
mov
or
dec
jg
sbb
shl
pop
test
sar
add
jg
pop
cmp
push
pop
xor
or
dec
xor
mov
div
mov
adc
and
gs
test
aaa
mov
aam
jp
sub
pop
add
add
lock
or
sbb
cwde
sti
sahf
mov
pop
and
mov
jne
cmp
jne
mov
out
popa
fiadd
out
inc
fsub
ret
sub
cmp
ja
add
sbb
inc
test
mov
cmps
out
jg
mov
add
rol
add
xor
arpl
jg
xor
enter
fnstsw
lea
lea
aam
jge
add
ja
inc
xchg
push
ret
ins
inc
and
dec
cmp
dec
dec
cmps
sbb
jo
test
dec
mov
jmp
call
clc
or
push
or
add
mov
lock
xor
idiv
and
add
cmp
jl
lods
and
fidivr
cmp
test
and
sbb
out
inc
cwde
or
cmp
or
sbb
adc
or
mov
pop
cwde
mov
jb
or
jecxz
and
inc
je
sbb
add
add
fisubr
call
push
adc
ss
imul
pop
jecxz
jl
mov
scas
add
dec
ss
or
add
sbb
lock
lock
(bad)
xchg
and
into
(bad)
mov
add
mov
xchg
jle
pusha
loope
dec
js
mov
add
jo
outs
jbe
push
pop
mov
add
jl
scas
lea
movs
push
jecxz
(bad)
and
outs
push
aas
add
fs
adc
xchg
cmp
je
adc
lahf
pop
dec
or
jmp
inc
adc
and
inc
sbb
push
sub
test
rol
jle
loopne
bound
push
ss
pop
cs
dec
sbb
sbb
ret
push
or
mul
not
div
or
dec
ja
bound
xchg
mov
sbb
pop
xchg
jnp
aaa
stos
cld
and
push
jne
cwde
jle
loop
je
aaa
xchg
or
std
mov
push
leave
bound
xor
inc
fcomp
adc
add
mov
mov
ja
jmp
adc
ret
mov
jne
inc
push
jle
push
fisttp
adc
imul
adc
pop
or
rol
or
adc
popa
pop
jo
in
in
test
xchg
push
pop
rcr
add
or
ds
push
cmp
ret
xor
and
mov
cwde
cld
test
add
and
loopne
pop
test
mov
movs
gs
aad
adc
test
pop
pop
mov
loopne
js
inc
ins
jne
pop
sbb
test
adc
cmps
jns
nop
cmc
loop
imul
sub
or
test
add
(bad)
mov
(bad)
mov
push
or
sub
adc
rol
fcom
rol
outs
popf
pop
mov
call
and
dec
mov
and
arpl
add
test
dec
xor
lea
sbb
mov
pop
push
or
cmp
cwde
test
add
inc
or
push
fs
and
in
sub
mov
lea
or
mov
stos
or
inc
mov
sbb
sub
mov
mov
lea
mov
adc
push
jo
push
add
and
mov
test
mov
call
mov
sub
dec
add
cli
inc
jl
sbb
or
xchg
int3
inc
test
je
dec
call
sbb
mov
push
movs
xor
xor
nop
loopne
and
xchg
lea
mov
sub
inc
mov
int3
mov
loopne
add
out
dec
push
popa
mov
add
xor
(bad)
add
xchg
outs
cmp
int
popa
sub
add
mov
cmp
pop
js
aaa
clc
push
cmp
add
sbb
cmp
or
lods
or
ret
add
imul
push
xor
add
loopne
cld
add
mov
xchg
pusha
mov
pop
jno
aam
inc
jmp
adc
jg
das
pusha
pop
jl
rol
xchg
lea
inc
and
push
mov
add
mov
pop
inc
lods
stos
in
imul
(bad)
je
dec
push
mov
xor
pop
add
aas
xor
leave
xor
pop
fbld
and
loopne
xchg
sti
adc
dec
jo
test
mov
dec
sub
push
add
sub
adc
sahf
sahf
shl
ss
jp
dec
and
or
or
dec
sti
push
pop
sub
inc
retf
loope
ret
(bad)
jne
mov
mov
pop
jmp
inc
sub
push
adc
shl
test
mov
xlat
xchg
xchg
jns
and
and
add
ins
dec
push
(bad)
movs
mov
punpcklbw
or
(bad)
or
and
out
mov
push
fadd
je
mov
pusha
jo
adc
adc
inc
adc
sub
je
and
lea
lea
in
call
call
outs
ret
cmps
ss
and
rcl
scas
mov
cmps
xor
jge
push
test
(bad)
push
cld
fs
xchg
call
test
jge
adc
mov
pop
jp
sub
xor
dec
or
and
mov
push
sar
and
push
fisub
or
scas
or
bound
test
(bad)
add
xor
or
into
push
push
mov
in
aam
jge
push
inc
push
fidivr
push
loopne
sbb
cmp
mov
lods
adc
pop
mov
ret
popf
movs
mov
or
in
add
dec
jmp
xchg
pop
test
mov
enter
shl
(bad)
call
or
sub
add
mov
xchg
jg
mov
jb
mov
daa
les
jmp
mov
jno
jmp
or
lea
rep
add
jb
sbb
dec
xchg
jbe
add
les
scas
rol
or
cmp
ficomp
mov
inc
mov
daa
mov
and
jno
add
mov
inc
sub
call
sbb
scas
inc
or
mov
cwde
sub
xor
adc
pop
adc
push
leave
xor
inc
popa
shl
mov
xchg
cmp
cmp
pop
jo
sti
push
mov
aad
dec
ins
fdivr
and
dec
add
lea
lds
or
fisub
movzx
mov
push
push
aas
cmps
or
clc
(bad)
mov
fsubr
rcl
pavgb
je
adc
lods
push
xor
fistp
pop
(bad)
cmp
sar
mov
ja
loopne
and
cmp
xor
jb
lock
test
add
cmp
sbb
ins
xor
dec
mov
por
pusha
icebp
sub
xchg
out
xor
push
add
or
loopne
lods
pusha
lock
dec
sub
(bad)
mov
ror
fucom
js
cdq
jmp
call
enter
test
mov
xor
retf
push
and
imul
icebp
pop
or
dec
dec
adc
or
cwde
and
mov
fdiv
je
inc
pop
pushf
push
shl
rol
jecxz
hlt
add
xor
ret
loopne
jmp
(bad)
mov
adc
add
push
and
cli
lods
add
sar
rol
pop
cmp
and
adc
cmps
icebp
push
and
jb
test
jge
or
shl
lea
dec
sub
jge
pusha
dec
mov
shl
sub
mov
pop
adc
or
cmps
mov
xor
aaa
jl
mov
or
aaa
retf
jmp
test
add
inc
or
mov
jne
xchg
jae
ret
cmp
test
dec
outs
cmp
mov
push
push
popf
ja
sbb
mov
inc
xchg
xor
addr16
jno
sbb
inc
addr16
and
cmp
and
mov
fcomi
add
lea
cmp
xor
add
mov
add
dec
in
xor
jl
mov
xchg
sbb
je
inc
xchg
fs
push
iret
mov
stos
lods
iret
in
frstor
iret
stos
leave
sti
in
mov
cmp
lock
pop
jnp
mov
mov
sar
push
dec
jp
mov
cs
sbb
xlat
mov
add
xchg
dec
push
pusha
bound
cmp
push
adc
or
pop
or
jmp
cmp
out
cmc
xor
in
jo
inc
jmp
and
push
mov
fld
lods
lock
(bad)
mov
add
jne
mov
xchg
popa
aam
inc
add
mov
and
je
sbb
adc
add
inc
loope
fist
mov
push
pop
pusha
jl
(bad)
sub
add
jmp
inc
dec
sbb
dec
js
(bad)
(bad)
arpl
sbb
xchg
mov
loopne
addr16
cmp
add
mov
div
add
cld
sbb
mov
stos
and
or
xchg
or
or
popf
add
add
sbb
xchg
push
cmp
xor
and
sbb
push
cmp
jmp
mov
sub
xchg
push
jle
mov
sar
movs
jo
pusha
cli
jge
add
add
cmp
loop
or
outs
aam
add
addr16
inc
sar
mov
sub
pusha
mov
and
mov
leave
add
repz
shl
add
lods
fsub
add
iret
sar
inc
jl
inc
(bad)
les
pop
sub
lahf
adc
sub
pop
call
jne
xor
add
jecxz
ficomp
inc
inc
jp
or
and
(bad)
scas
inc
jecxz
xchg
js
cmc
add
add
out
stos
mov
mov
mov
js
push
aaa
push
sub
and
mov
add
add
mov
bound
fiadd
mov
add
adc
fdivr
sub
(bad)
push
or
dec
(bad)
mov
pop
mov
add
les
push
mov
add
or
nop
push
lds
ror
js
mov
fisttp
sbb
pop
lods
jmp
jle
ret
cmp
dec
mov
movsx
xor
jp
sub
jecxz
jo
xlat
sub
xchg
xchg
and
or
bound
and
je
add
inc
add
mov
aam
mov
cmp
add
test
das
push
mov
or
sar
mov
or
xchg
imul
xchg
mov
push
inc
add
inc
xor
or
jnp
or
fiadd
sub
add
jle
mov
xchg
add
sbb
jle
sbb
sbb
and
add
shr
cdq
push
daa
scas
pusha
xchg
sbb
retf
add
jmp
aam
and
or
retf
inc
xlat
jne
sbb
repz
xchg
pop
mov
leave
lea
cmp
push
dec
cmp
enter
out
push
jmp
or
and
xchg
inc
and
les
out
sbb
loopne
sub
push
and
xor
push
xor
pop
add
jge
inc
fistp
xchg
or
sbb
int3
or
fcomp
xor
adc
jne
mov
je
dec
add
pop
xor
push
sub
sub
jge
and
sbb
or
sub
loop
mov
jnp
and
icebp
xchg
mov
mov
mov
add
inc
or
inc
add
xor
push
pushfw
shr
push
jge
call
retf
push
cmp
inc
or
and
fscale
pop
adc
mov
movs
into
push
adc
in
mov
(bad)
and
lea
push
inc
add
and
push
mov
shl
mov
clc
jo
mov
push
(bad)
hlt
or
mov
cmp
jg
das
outs
bound
push
mov
lods
mov
sbb
cmp
xor
adc
cmps
sub
inc
xor
xor
rol
mov
mov
adc
loopne
add
movs
cmp
and
fmul
dec
jle
inc
xor
lea
jns
fs
sahf
scas
loop
push
(bad)
out
add
lea
cli
ins
call
out
mov
sbb
lahf
xchg
or
or
add
sbb
inc
cmp
xchg
mov
retf
jmp
movs
push
cmp
inc
dec
or
sbb
sbb
cmp
ss
sub
or
(bad)
xchg
mov
sbb
(bad)
in
retf
and
mov
push
(bad)
out
push
mov
cmp
and
and
mov
add
aam
jne
fs
inc
or
xchg
inc
mov
sbb
je
dec
das
mov
and
xor
mov
inc
mov
aas
and
cdq
in
sbb
and
cmp
xchg
aas
and
sub
sub
and
xor
jo
add
out
dec
fs
push
jp
jmp
mov
mov
sub
inc
sar
sub
inc
imul
inc
mov
(bad)
add
cmp
and
adc
or
jne
fistp
js
adc
sub
mov
sbb
aad
add
sbb
push
mov
inc
sub
cmp
fisttp
lea
in
mov
dec
subps
cdq
mov
cmps
mov
(bad)
pop
pop
nop
xchg
fcom
lock
dec
sub
jnp
add
pop
lock
and
test
fild
xor
rol
adc
add
inc
mov
retf
sub
shr
dec
dec
cdq
jae
or
mov
sub
xchg
fild
pop
out
sbb
inc
loopne
test
and
adc
mov
inc
jo
inc
sub
sbb
popa
add
adc
sub
rcr
test
or
arpl
rcl
bnd
xor
xchg
(bad)
xchg
enter
cdq
sub
push
and
shr
xor
push
sar
add
enter
sbb
xchg
add
or
sub
js
stos
outs
push
lock
inc
dec
popa
inc
rcl
loope
sub
or
call
ins
cld
adc
sub
ds
sahf
hlt
inc
xchg
adc
add
(bad)
mov
loopne
mov
repnz
dec
mov
into
(bad)
bound
sbb
add
inc
add
test
pop
shr
call
adc
add
jne
mov
mov
jne
pop
sbb
out
push
call
sbb
inc
mov
adc
js
call
mov
cmp
das
mov
shr
push
mov
test
sbb
or
pop
in
sbb
push
sbb
mov
es
xor
adc
add
inc
adc
outs
or
sar
outs
push
icebp
push
(bad)
dec
in
ja
clc
lea
push
cwde
idiv
mov
mov
adc
pop
hlt
mov
fcom
or
lock
sbb
inc
pop
adc
je
inc
ins
add
dec
inc
or
ja
or
push
and
out
add
out
add
mov
mov
sbb
out
(bad)
test
loope
xchg
or
pop
xchg
leave
cmc
or
int3
mov
enter
sbb
loopne
mov
dec
loop
add
push
inc
xchg
and
js
lods
inc
adc
push
adc
test
add
xor
dec
enter
push
add
loop
sbb
sub
adc
(bad)
fsub
in
push
fmul
jne
add
cmp
stos
pop
fdivr
xor
mov
loope
adc
loopne
out
daa
push
hlt
lea
pop
repz
out
lea
xor
mov
adc
mov
add
sbb
loopne
leave
in
fsubr
mov
adc
inc
add
or
movs
sbb
(bad)
sbb
imul
xchg
mov
fdiv
or
inc
add
sbb
or
mov
push
mov
loopne
adc
call
adc
dec
mov
xor
dec
add
call
adc
xlat
xor
adc
add
fcom
fdivr
push
ins
imul
ror
add
cmp
sbb
cmp
outs
and
sbb
mov
add
call
aaa
fmul
add
sbb
inc
ins
pop
xlat
shr
test
scas
or
inc
cmps
or
adc
nop
sub
or
inc
cwde
inc
es
adc
es
cmps
das
add
fisttp
fld
inc
rol
pushf
ds
nop
xchg
adc
aad
ins
mov
add
mov
les
mov
add
cwde
adc
xor
push
stos
xor
ret
cwde
ror
adc
in
push
nop
pushf
sbb
jo
adc
cli
or
mov
in
xor
push
lock
add
sbb
cdq
ror
(bad)
xor
sti
adc
cmp
fsubr
jp
dec
loop
rcr
jb
mov
jns
or
pop
rcr
imul
and
xchg
xor
xor
ins
xor
hlt
xor
arpl
add
inc
rol
jbe
mov
mov
inc
jo
mov
sbb
dec
push
ja
mov
or
int
repz
out
loopne
and
push
cmp
add
sar
pop
push
push
adc
aas
or
shl
out
cld
jmp
inc
call
jne
in
xor
call
sti
inc
jle
push
add
cs
xlat
push
cs
mov
les
in
fsubr
stc
pop
cs
mov
ins
cmp
in
pop
into
inc
or
push
jae
in
les
push
mov
sub
inc
inc
out
add
mov
jno
pop
int3
stc
enter
lea
pop
add
sub
ret
sbb
cmp
add
aas
sti
jmp
test
or
inc
add
mov
mov
ficom
sbb
adc
dec
sub
add
enter
enter
test
jo
jno
or
js
mov
mov
sbb
fisttp
scas
fwait
bound
in
push
or
aam
int
jmp
inc
je
jmp
fisttp
sub
je
xchg
lahf
arpl
std
sub
add
sbb
ss
and
adc
dec
inc
cld
dec
aas
lea
pop
and
and
mov
cmp
dec
imul
aaa
pop
js
imul
ror
push
mov
cmp
add
push
mov
inc
sbb
mov
daa
imul
int
rcr
cmp
mov
aas
xor
int3
out
xor
cdq
and
and
je
sbb
arpl
dec
add
mov
inc
sub
jns
mov
es
cmp
dec
push
xor
or
mov
jb
cmc
push
lods
or
js
mov
je
dec
js
call
enter
xchg
mov
pop
xchg
mov
add
mov
jbe
jbe
or
scas
ret
inc
adc
sbb
fdiv
loop
stos
push
adc
mov
aaa
jbe
sbb
sbb
leave
test
sub
fidivr
mov
add
jl
nop
call
outs
cmps
adc
aaa
dec
ret
push
rcl
push
push
or
loop
or
pop
mov
(bad)
shl
call
mov
or
add
pop
retf
inc
sub
jns
retf
ja
sub
mov
test
and
mov
call
loopne
stos
shr
shl
jbe
sti
ret
pop
test
jnp
dec
push
dec
inc
add
add
add
(bad)
inc
shl
mov
mov
and
sub
dec
je
cmp
ret
sbb
pop
call
cld
push
jmp
adc
adc
arpl
jb
xchg
mov
pop
xlat
sbb
jmp
lea
ror
inc
jbe
ins
mov
popa
or
xor
cmp
jae
sahf
sbb
ror
lea
mov
nop
jns
adc
fsub
loopne
lock
lock
jae
lahf
hlt
mov
loope
jge
jle
push
pop
fadd
dec
pop
jae
dec
ins
test
ret
dec
inc
repnz
or
es
push
fwait
adc
sbb
fld
fadd
mov
pop
sbb
fidivr
add
sbb
mov
daa
shr
or
shr
arpl
push
adc
(bad)
shl
mov
rol
jl
loopne
inc
mov
aas
push
(bad)
aas
jne
lea
inc
fisttp
push
and
fs
aaa
jl
jecxz
push
mov
pushf
stos
imul
inc
sbb
inc
clc
xor
sub
pop
sbb
mov
add
jo
pop
pop
call
test
dec
and
das
push
lock
xor
push
add
or
push
loope
cmp
(bad)
shl
fstp
(bad)
ins
ret
jge
mov
dec
inc
push
mov
inc
mov
sbb
mov
inc
out
mov
inc
mov
and
idiv
mov
sar
neg
add
mov
mov
(bad)
mov
adc
jmp
mov
(bad)
add
and
xor
ficomp
mov
push
add
shl
add
or
push
sbb
loopne
or
inc
clc
bound
popf
test
cdq
xchg
adc
mov
inc
shl
pop
xchg
test
jp
js
stos
movs
mov
idiv
repnz
es
jmp
push
fwait
mov
in
or
pusha
aad
inc
sub
inc
divps
cmc
lds
jo
int
sahf
idiv
xor
popa
cli
and
fidivr
cmp
mov
jmp
inc
mov
jg
mov
aaa
sub
shl
dec
pop
sub
add
or
jl
pop
jmp
or
xchg
pop
sbb
cld
mov
ins
je
je
jmp
and
fcom
pop
or
mov
mov
jb
cwde
add
push
ret
mov
push
cmp
sbb
pop
add
sub
(bad)
xchg
clc
mov
imul
fsub
add
add
pop
nop/reserved
in
rol
mov
jle
xor
outs
neg
es
in
pop
rcr
dec
in
add
push
jmp
es
pop
push
call
xor
mov
daa
cmp
adc
pop
cmp
inc
cmp
adc
mov
mov
ja
add
inc
sub
push
cmps
jl
pop
bswap
shl
or
jno
ins
or
push
pop
mov
int3
fsub
ficomp
xchg
jge
push
add
add
pop
push
ds
xor
ins
mov
ror
dec
xor
(bad)
push
loop
ficom
and
jne
shl
in
jge
mov
mov
xchg
or
mov
scas
test
shl
clc
ret
or
pusha
gs
adc
push
mul
jmp
cmp
mov
out
loopne
mov
add
lods
(bad)
inc
adc
iret
xor
loop
lock
setne
ss
xor
inc
int3
fcom
push
and
pop
test
mov
pop
pusha
js
sbb
daa
add
mov
sbb
cli
cmp
inc
inc
sahf
cmp
sbb
xchg
retf
pop
repz
adc
rol
xchg
sbb
inc
sbb
xor
dec
xor
loop
fisttp
cs
cmp
mov
or
sub
push
push
test
pop
call
or
mov
lds
ret
icebp
adc
xchg
jmp
pop
lock
xchg
loop
cmp
mov
ja
cli
ja
xchg
sbb
cmp
ret
add
in
sar
xor
mov
fadd
enter
test
ror
out
sbb
mov
iret
adc
sbb
or
test
push
jno
cmp
test
out
sbb
ret
inc
push
push
adc
lds
sbb
push
dec
or
push
xchg
push
push
push
push
jmp
fcomp
mov
inc
fist
rcl
or
enter
inc
fdiv
add
add
aam
movs
push
pop
in
adc
loopne
push
xor
aas
inc
or
adc
int3
outs
xor
inc
inc
int3
sbb
push
jno
sbb
pusha
push
repnz
mov
aaa
stos
add
les
jecxz
stos
add
sub
add
mov
inc
inc
mov
sbb
data16
out
neg
ror
add
or
js
push
sbb
mov
fdiv
xor
out
push
stos
int3
mov
push
retf
xchg
mov
mov
sub
and
inc
or
inc
dec
loope
fiadd
fiadd
xchg
pop
ror
xor
mov
add
pusha
mov
(bad)
or
(bad)
call
jo
sbb
mov
lahf
sar
in
leave
jnp
jl
or
inc
add
and
std
xlat
inc
mov
inc
adc
adc
movs
and
mov
dec
push
sub
mov
push
clc
es
je
sbb
ins
or
arpl
and
js
pop
cmp
je
sub
movs
cmc
inc
xor
cmps
and
or
clc
(bad)
sub
xchg
mov
cmps
add
(bad)
iret
push
sar
cwde
dec
mov
lea
add
xchg
lock
shr
adc
push
popf
shl
or
mov
mov
addr16
or
pop
or
les
(bad)
test
jmp
add
ss
jp
xchg
and
int
cmp
lock
mov
idiv
add
mov
jge
xchg
xor
prefetchnta
cmp
sbb
fdivr
js
sub
inc
ror
loopne
inc
shl
mov
xchg
add
sub
inc
add
adc
push
xor
add
inc
cmp
leave
mov
hlt
add
jl
fisttp
dec
imul
rcl
sti
mov
cmp
jge
js
jle
jge
pop
(bad)
fiadd
sar
fsubr
dec
pop
push
xor
push
dec
add
and
in
mov
lahf
sbb
push
push
inc
push
xor
mov
or
or
add
inc
or
adc
stc
mov
cmp
sahf
leave
adc
clc
sti
scas
test
lea
fs
cmp
pop
push
rol
and
and
sbb
adc
daa
neg
clc
dec
jo
loopne
add
or
ror
or
cmp
mov
dec
or
aaa
popa
xchg
add
jmp
inc
xor
in
jge
sbb
sbb
adc
mov
jle
gs
add
(bad)
mov
sub
push
es
add
cmp
sti
cli
push
add
in
dec
outs
cld
jnp
aaa
jbe
jge
sub
ror
xor
lahf
mov
rcr
xor
movs
shl
popa
call
xchg
mov
pop
jmp
adc
adc
xor
mov
xor
ins
out
dec
dec
sar
je
jle
jns
dec
inc
cwde
mov
das
cmp
mov
mov
mov
das
loopne
fidivr
cwde
mov
xor
mov
sbb
inc
cwde
ror
movs
loope
mov
cmp
arpl
cmp
mul
fst
fstp
or
sbb
adc
sbb
cmp
test
lahf
cmp
sub
jmp
add
sub
sub
hlt
fiadd
mov
add
shl
add
test
sbb
retf
sbb
push
std
inc
xor
sti
jg
push
inc
sub
ret
loop
jo
in
inc
cmp
sbb
(bad)
retf
stos
xor
mov
sub
mov
lock
cmp
neg
jp
add
(bad)
mov
mov
xchg
jmp
pop
ins
call
ror
xchg
es
or
mov
adc
clc
or
and
sbb
pop
fild
cmp
add
lea
dec
pop
sub
adc
int
push
adc
call
mov
dec
pop
hlt
pop
leave
fs
je
xor
je
jmp
xchg
add
push
push
inc
rcr
add
sub
les
sub
outs
call
sub
cs
dec
add
movs
add
mov
mov
xchg
mov
dec
inc
xor
jmp
imul
ja
or
jno
push
test
pop
push
pop
pushf
pop
dec
gs
adc
pop
adc
adc
in
jg
sub
pop
das
xor
adc
cmp
scas
mov
fdivr
jae
mov
push
sar
pop
sbb
mov
cmp
add
and
shl
lds
hlt
dec
test
(bad)
sbb
add
cmp
inc
test
jl
movs
mov
inc
mov
push
sbb
movs
sar
shl
ret
fstp
ja
sbb
dec
cmp
xchg
sbb
movs
movs
dec
sti
sub
loope
jno
sbb
mov
ror
cmp
add
lods
mov
cmp
sbb
pop
cmc
in
stos
ins
mov
dec
adc
mov
sub
sbb
or
icebp
mov
xor
adc
scas
add
mov
cs
aam
xor
jg
mov
ss
adc
lock
add
adc
adc
daa
sbb
sbb
loop
js
jp
xchg
test
ret
or
daa
and
mov
call
call
test
jo
cmp
xchg
or
push
pop
or
push
ds
enter
xchg
push
xor
sbb
shl
add
fcomp
cld
popa
dec
sub
or
(bad)
outs
or
mov
push
loopne
je
adc
enter
inc
pusha
jmp
sbb
xor
push
cld
sbb
or
mov
cmp
popa
(bad)
push
sub
in
enter
push
push
add
pop
add
xor
in
emms
add
jmp
inc
in
jle
clc
fdiv
and
jg
sbb
or
jmp
push
ror
fwait
mov
ins
inc
inc
call
mov
fdivr
outs
push
dec
cmc
fbstp
dec
aam
inc
stos
adc
into
or
push
add
cli
and
ror
idiv
lea
dec
mov
sbb
push
aam
lods
inc
xchg
fiadd
mov
inc
leave
fcom
call
ss
rcr
lods
outs
jle
(bad)
adc
sub
inc
add
arpl
movs
mov
add
lock
jge
js
cmp
push
out
test
clc
adc
and
push
push
stos
(bad)
jbe
fmul
xchg
sub
mov
loopne
pop
sub
jne
sub
sub
jo
xor
add
sub
lea
aad
xchg
add
scas
sub
dec
test
mov
sbb
daa
fs
retf
adc
test
ins
sbb
adc
xchg
sbb
and
or
daa
ss
or
imul
and
cmp
xor
mov
pusha
add
loopne
pop
add
add
inc
pusha
push
cli
inc
loopne
push
lods
adc
adc
xor
jge
out
push
outs
add
sub
add
lldt
jno
adc
push
inc
mov
(bad)
mov
sbb
ins
pop
fdiv
adc
in
out
inc
adc
into
jge
add
push
push
or
push
fisttp
test
shl
pop
push
add
jp
cmp
lds
push
in
(bad)
sub
or
mov
jmp
push
lea
ret
mov
xchg
cdq
out
gs
inc
imul
(bad)
cmp
xchg
pusha
jp
add
mov
or
sbb
xor
add
inc
sub
aad
retf
mov
fucomp
sbb
bound
or
jecxz
fld
js
mov
adc
push
or
mov
cmc
inc
jecxz
nop
sbb
xor
jbe
imul
inc
fsubr
adc
add
pushw
mov
sar
lds
sub
(bad)
xor
xchg
pop
icebp
or
leave
inc
jae
or
repnz
and
call
mov
mov
push
xchg
xchg
ror
cmps
jge
sub
and
ja
xchg
nop
inc
shl
loope
ret
call
or
xchg
cmp
mov
cmp
inc
loope
lea
mov
add
mov
test
call
loopne
mov
inc
data16
xor
shl
add
sahf
dec
and
add
mov
test
cmps
(bad)
es
bound
aam
jmp
xor
pushf
xchg
or
js
xchg
ss
pop
adc
and
mov
ja
call
lock
imul
in
out
fs
sub
jmp
mov
jp
adc
xchg
sbb
add
mov
push
push
inc
add
bnd
pop
add
ficomp
sar
ret
out
push
dec
call
or
cmp
cwde
xor
sbb
push
add
imul
rol
int3
rcl
xlat
or
pushf
mov
cs
mov
cwde
lock
xchg
adc
push
adc
pop
adc
(bad)
ss
adc
popa
hlt
xor
push
stos
mov
sbb
les
jne
sub
into
test
(bad)
pop
neg
mov
add
fstp
and
mov
mov
ror
adc
push
jge
and
mov
and
xlat
push
jmp
or
pop
adc
dec
(bad)
sub
jle
pop
cwde
cmp
fadd
lock
(bad)
add
aam
adc
xchg
pop
sub
retf
call
rcr
mov
retf
in
ss
adc
cwde
call
mov
bound
inc
je
pop
adc
dec
clc
mov
jmp
test
jbe
not
mov
dec
mov
adc
test
repnz
xchg
out
xchg
mov
push
test
daa
push
or
and
xchg
fimul
add
rol
(bad)
cmp
adc
cli
neg
mov
fidiv
push
clc
adc
sbb
push
xor
mov
xor
jp
cmp
inc
test
imul
jo
loopne
imul
sub
pop
adc
daa
mov
sbb
neg
xchg
and
adc
jmp
or
pop
xchg
pop
pop
adc
jle
xchg
jo
loopne
mov
(bad)
mov
stos
shl
aam
mov
dec
add
add
dec
jge
or
sbb
lods
and
stc
push
aam
or
int3
add
mov
jmp
int3
test
xchg
hlt
(bad)
mov
jle
add
lea
push
or
xor
adc
aaa
lods
xlat
lods
iret
xor
les
adc
loopne
and
xchg
call
pop
(bad)
pop
je
mov
pop
arpl
inc
in
mov
je
sbb
jl
or
cs
retf
and
dec
jp
test
lds
push
pop
(bad)
or
push
fdivr
loope
lock
sub
pop
push
daa
(bad)
cs
test
pop
inc
sbb
sub
adc
add
xor
mov
adc
push
jnp
jne
mov
mov
imul
test
mov
or
jle
add
add
inc
jnp
inc
loope
mov
ret
add
pop
pop
ret
ds
xor
inc
and
mov
lock
or
xor
and
fcomp
add
add
mov
sub
test
mov
repnz
(bad)
push
mov
or
imul
mov
sbb
mov
test
je
imul
pop
jg
mov
mov
adc
rcr
rcr
movs
into
shl
pop
adc
dec
cmp
xor
push
pop
mov
sbb
mov
jmp
inc
or
clc
shl
scas
adc
je
or
or
inc
leave
ja
rol
inc
cld
or
ins
outs
sbb
sbb
inc
cmp
stos
push
test
cmps
and
lods
(bad)
repnz
jne
mov
sbb
jl
sbb
and
jmp
mov
mov
adc
or
sbb
lea
cli
mov
(bad)
jl
aaa
mov
dec
adc
repnz
cmp
pop
cmp
mov
cmp
fst
push
pop
dec
inc
ss
call
or
cmp
or
sub
mov
jo
mov
shl
or
lods
cmc
jns
and
add
push
jne
sub
mov
xchg
call
add
cmp
mov
or
jle
rol
mov
sub
lods
mov
daa
adc
rol
retf
mov
adc
inc
in
add
(bad)
scas
add
dec
cs
add
add
mov
jnp
dec
jg
sahf
sbb
inc
mov
cmp
mov
stc
jmp
add
shr
sub
push
add
push
lea
ss
sar
adc
sbb
jp
xchg
cmp
sbb
lea
test
cmp
sub
mov
pop
inc
pusha
xchg
mov
jno
idiv
jmp
add
sbb
into
rol
dec
pusha
lods
push
inc
inc
in
sub
dec
or
push
add
add
dec
xor
fdivr
mov
add
ret
ret
cwde
add
shr
or
lock
sahf
out
mov
sbb
pop
xchg
mov
add
(bad)
jae
push
mov
test
push
push
jo
push
(bad)
retf
retf
bound
pop
mov
xor
inc
jb
adc
pop
add
out
xchg
sbb
(bad)
icebp
fadd
xchg
xchg
rcl
add
je
mov
outs
or
pop
push
test
rol
test
mov
sbb
push
add
(bad)
in
and
lahf
arpl
mov
xor
xor
fild
mov
daa
ret
int3
cmp
cwde
inc
sub
cmp
mov
xchg
or
addr16
sti
mov
xor
add
inc
add
sub
popa
movs
xor
fwait
shl
ins
mov
add
jo
mov
push
retf
mov
cwde
mov
sbb
fiadd
push
add
scas
and
pop
lock
loope
mov
add
lods
lahf
pop
add
jns
cmp
jge
outs
loopne
jns
lods
sbb
xchg
dec
ret
or
call
push
xchg
mov
push
je
mov
mov
nop
dec
and
add
adc
adc
sbb
add
sahf
in
ret
test
cli
dec
sbb
inc
and
mov
or
leave
adc
lock
push
pop
sub
das
dec
cmp
mov
and
fisttp
adc
sbb
fs
fstp
sbb
fsub
pop
mov
push
xchg
fild
mov
cmp
and
mov
dec
cs
mov
fcomp
clc
xor
rcl
mov
inc
shl
and
inc
mov
sub
dec
xor
cmp
ret
fidiv
popf
xor
popf
cmp
pop
adc
xor
add
pusha
xchg
mov
test
and
mov
mul
loopne
cli
sbb
aas
mov
dec
loopne
imul
aam
sub
pop
cmp
sahf
pop
adc
pusha
cmp
inc
push
scas
pop
sbb
cmp
mov
sub
inc
inc
imul
adc
xor
adc
fdiv
inc
std
scas
add
dec
mov
js
push
mov
das
dec
movs
in
push
lahf
jmp
jno
repnz
add
shl
retf
in
add
hlt
jge
jl
not
sub
push
lock
add
or
pop
mov
dec
xchg
mov
sub
and
dec
jl
std
inc
or
pop
push
inc
push
pop
inc
mov
mov
aas
inc
loopne
mov
test
sbb
pop
or
sbb
ja
daa
add
cmp
arpl
and
and
or
nop
adc
sub
jb
or
jae
fsubr
adc
adc
or
push
fstp
xor
scas
enter
pop
ins
lea
lds
scas
add
sbb
push
retf
js
mov
repz
iret
mov
push
or
push
and
data16
ret
std
sbb
and
or
scas
sbb
pop
fidivr
pop
push
and
jo
jecxz
sub
loopne
xor
retf
and
mov
out
sub
xor
mov
and
mov
mov
adc
fwait
bnd
mov
lods
push
xlat
clc
mov
inc
cwde
inc
or
inc
inc
dec
loopne
mov
dec
xor
jmp
jo
mov
mov
aas
mov
jae
jno
and
dec
inc
pop
dec
cmp
imul
mov
or
jmp
jmp
push
(bad)
push
movs
and
xchg
ret
adc
or
sti
adc
or
xchg
cmp
test
das
aam
mov
cmp
or
push
shl
test
repz
mov
in
ror
ja
jl
daa
jne
or
scas
push
(bad)
test
test
add
mov
pusha
cmc
je
xor
mov
mov
adc
imul
mov
jmp
popa
mov
sbb
jae
and
test
or
and
mov
xchg
xchg
sbb
inc
and
and
or
jge
movs
in
cld
adc
push
dec
das
add
add
mov
xlat
ror
push
push
sysret
loop
add
jmp
jmp
inc
xchg
test
cmps
stos
mov
fstp
and
jno
daa
loope
popf
push
sbb
idiv
jmp
push
or
and
fwait
cwde
adc
xor
iret
xchg
mov
xchg
add
mov
xor
jo
push
sbb
push
ss
pop
fsubr
jo
mov
jo
(bad)
jno
xor
sbb
pop
dec
das
xchg
push
inc
add
xor
sub
cmp
xchg
adc
or
or
(bad)
(bad)
jae
or
jno
or
xlat
xchg
or
ret
xor
not
pop
or
sti
mov
mov
cmps
or
cld
adc
dec
in
stc
add
mov
push
push
lods
outs
pop
cmp
xchg
(bad)
call
or
or
arpl
xchg
xchg
outs
ret
or
loope
add
mov
and
mov
add
cmp
ja
imul
mov
out
jae
mov
jbe
dec
sbb
adc
inc
js
xor
sub
js
inc
inc
dec
stos
push
mov
sub
jae
or
cmp
inc
push
inc
sbb
add
and
push
xchg
dec
jmp
cmp
sbb
inc
and
mov
xor
jae
or
cmp
(bad)
dec
js
jmp
jbe
rol
sub
inc
or
in
sti
cmp
dec
ds
or
push
ret
adc
jge
ja
movs
(bad)
and
sub
ins
mov
adc
dec
inc
jno
dec
fiadd
cs
sub
movs
add
enter
mul
push
push
scas
dec
adc
inc
push
(bad)
out
or
pop
nop
adc
add
pop
inc
jne
mov
and
mov
mov
adc
pusha
and
aad
mov
nop
repnz
inc
jne
shr
scas
pop
and
inc
retf
push
adc
add
rol
rol
sub
dec
push
xchg
mov
mov
fadd
lea
adc
cmp
addr16
push
cli
adc
push
add
mov
xor
mov
stos
es
jo
and
mov
pop
ja
mov
daa
mov
test
add
cmp
xchg
add
add
std
arpl
mov
adc
xchg
dec
add
cwde
jmp
or
mov
enter
and
mov
push
pop
inc
dec
lock
pextrw
sbb
add
test
sti
aaa
add
xchg
ror
test
sub
dec
pop
je
leave
ret
mov
xor
adc
movs
pop
push
rcl
aaa
and
dec
inc
cmp
jl
pop
loopne
push
in
mov
pop
or
jmp
push
cmp
xchg
test
rol
iret
or
xchg
imul
dec
or
js
dec
and
lods
arpl
xchg
xchg
xchg
retf
mov
jl
jl
push
add
sub
pop
mov
imul
inc
mov
arpl
inc
dec
sub
push
sub
js
sti
add
push
or
ins
adc
push
sbb
mov
daa
sbb
push
and
stos
shr
je
imul
sar
js
dec
arpl
and
cmp
lods
imul
mov
loope
add
jmp
mov
test
sbb
add
out
mov
xor
jo
fistp
mov
cmp
cmp
mov
mov
dec
add
shr
sbb
mov
hlt
cli
std
jno
ss
sbb
(bad)
das
stc
push
inc
adc
adc
add
jecxz
jg
sub
je
rcr
cmp
inc
les
push
iret
push
adc
push
les
call
mov
clc
push
jecxz
jmp
mov
mov
cmc
mov
add
mov
sbb
sbb
fs
dec
or
fwait
call
rcl
lea
adc
xor
aam
jg
ror
(bad)
dec
add
inc
ins
repnz
adc
push
sub
fmulp
pop
ss
mov
adc
xchg
pop
out
and
les
adc
(bad)
mov
out
push
sahf
test
dec
je
push
or
add
dec
shl
push
and
mov
test
popa
push
mov
jo
pop
xchg
xor
dec
ror
dec
mov
pop
push
sti
sti
idiv
add
cmp
shl
pusha
(bad)
daa
das
ins
rcr
iret
and
push
xchg
shl
xchg
push
xor
cli
dec
mov
dec
inc
shl
push
pop
test
mov
mov
adc
mov
lahf
rcl
sub
xor
inc
and
cli
add
hlt
add
push
or
adc
sbb
sub
sub
sub
cmp
dec
xchg
push
adc
add
shrd
adc
pop
loopne
arpl
mov
hlt
jbe
sub
verr
fisub
or
fbstp
mov
je
sub
or
adc
push
xchg
fs
test
or
out
xchg
and
add
sbb
add
jmp
jmp
cwde
mov
jg
repnz
leave
dec
add
xor
sub
sbb
iret
xchg
movs
mov
mov
mov
inc
xchg
push
shr
xor
jae
das
pop
rcl
cmp
push
lds
add
fwait
and
push
sub
dec
pop
hlt
add
jge
repnz
cld
add
add
loope
jnp
dec
add
ins
imul
add
xchg
sbb
popf
shl
push
fwait
push
adc
sbb
outs
xchg
aam
and
je
rol
or
mov
xor
ret
enter
popf
adc
stos
and
shl
pop
mov
push
or
imul
rcl
pushf
cmc
adc
clc
xor
out
add
mov
jbe
in
in
jecxz
not
jmp
pop
pop
loope
outs
outs
pusha
jl
fs
inc
dec
je
add
jmp
mov
int3
jns
add
jmp
and
add
mov
and
jne
sbb
inc
add
push
movs
push
add
ins
(bad)
fcomp
cmp
xor
inc
aam
cmp
jp
daa
(bad)
out
mov
pop
test
add
inc
add
jae
dec
sub
mov
mov
sub
pop
imul
and
xor
in
out
push
sbb
xor
mov
icebp
in
mov
dec
add
mov
ret
loop
sbb
push
fsub
sti
out
dec
out
es
add
xchg
or
xlat
jmp
cmp
lock
addr16
cmp
js
add
adc
shr
sub
fist
clc
inc
ds
inc
fmul
fmul
dec
fstp
xor
(bad)
es
or
sub
sbb
mov
adc
retf
inc
or
mov
test
push
repz
pop
add
mov
icebp
mov
sbb
div
lea
mov
add
mov
add
sub
cmp
push
mov
mov
xchg
push
adc
mov
push
je
and
sbb
push
mov
ror
punpcklbw
add
and
mov
sti
inc
pop
cmp
mov
(bad)
mov
in
push
jo
sbb
mov
loope
push
xor
mov
pop
sbb
mov
xor
inc
rol
sub
pop
sub
shl
add
call
stos
aaa
pop
sbb
xor
sub
or
test
sbb
mov
sub
push
outs
or
sbb
mov
add
adc
push
push
fld
or
dec
sub
mov
push
add
mov
or
mov
adc
inc
sbb
push
dec
adc
arpl
inc
cmp
push
dec
cdq
jne
pop
outs
sahf
sbb
sub
adc
sbb
add
lea
inc
pop
je
push
cld
pop
mov
ret
jp
push
jbe
mov
inc
clc
fidivr
jle
mov
inc
dec
push
jg
ja
inc
add
mov
cwde
fadd
add
outs
xchg
jo
gs
cld
inc
aas
sbb
bnd
push
adc
add
mov
mov
xchg
jmp
das
cwde
hlt
jne
mov
add
add
movs
jmp
push
add
lock
and
jns
div
add
jbe
mov
inc
add
add
adc
mov
pop
pop
mov
mov
aaa
in
push
push
mov
xor
(bad)
sbb
add
mov
add
clc
dec
aam
mov
or
aaa
imul
or
lock
inc
mov
int3
dec
in
add
fadd
loop
inc
ins
andnps
nop
or
in
pusha
in
or
hlt
jg
scas
push
sub
mov
pop
fidivr
movs
push
in
rcl
inc
dec
or
sub
sbb
push
add
jmp
jo
sub
push
dec
jbe
in
push
dec
mov
mov
mov
inc
loop
sbb
gs
loope
movs
sub
mov
add
fisubr
pop
jnp
adc
jbe
aam
inc
dec
sub
das
fcom
mov
inc
jl
iret
and
dec
loopne
dec
cmp
ins
dec
aam
dec
call
push
fist
movs
loopne
sbb
fist
dec
mov
pop
or
fcomp
inc
(bad)
adc
or
cmovs
lock
push
sbb
xor
pop
add
mov
in
jbe
mov
sbb
call
adc
neg
cs
lea
adc
inc
push
mov
mov
lea
inc
jge
ja
mov
scas
data16
jecxz
add
sub
push
or
sub
dec
sub
jg
test
dec
cmps
mov
mov
jnp
and
add
add
add
adc
jo
pusha
or
cmp
fwait
pop
retf
cmp
add
or
jne
inc
and
sub
mov
std
mov
rcl
lea
fs
and
mov
aas
push
dec
and
jmp
mov
or
inc
cwde
enter
es
das
mov
inc
test
jp
cs
push
xchg
sbb
out
mov
add
ins
pop
jne
push
cmp
repz
je
cmp
loope
or
jne
inc
and
lahf
and
jg
add
pop
cmp
dec
add
xor
jl
dec
fmul
ins
pusha
or
sar
ss
xchg
sub
adc
fnsave
mov
and
jle
dec
push
and
xchg
add
imul
js
mov
and
nop
mov
ret
cmp
mov
cmp
fmul
and
inc
cwde
imul
gs
sub
sub
movs
pop
ret
test
fistp
sbb
(bad)
push
inc
inc
sub
(bad)
lock
pop
sbb
popa
mov
inc
int
xchg
arpl
pushf
push
sbb
lea
loope
daa
pop
xor
data16
cmp
jnp
or
push
xor
jo
sbb
mov
adc
imul
adc
addr16
call
mov
push
aaa
mov
ins
inc
jae
push
dec
sbb
adc
icebp
or
mov
xchg
in
sub
lea
mov
sub
or
mov
or
add
test
outs
xor
shl
test
div
mov
ins
inc
cmp
push
test
jo
sbb
(bad)
xchg
loopne
and
cmps
ror
lock
sbb
hlt
or
inc
hlt
mov
neg
dec
push
in
stos
imul
cs
add
retf
cli
adc
jns
adc
test
sub
inc
lock
fisub
daa
hlt
neg
and
test
imul
push
in
int
mov
xor
sub
add
or
rcr
ja
cld
add
mov
std
sbb
xor
sub
mov
and
retf
fild
and
cmp
shl
add
in
scas
daa
lods
scas
jle
call
dec
jge
pop
enter
xchg
sub
mov
or
jne
or
adc
sbb
stos
push
xor
add
sbb
fisttp
inc
cdq
not
mov
add
mov
mov
int
shl
add
aad
pop
and
inc
retf
retf
enter
sbb
jecxz
fild
add
add
test
popa
inc
(bad)
(bad)
xor
mov
cmp
sub
jmp
cmc
add
aam
out
xchg
inc
neg
and
test
div
or
push
pop
data16
xchg
xchg
das
cld
(bad)
outs
sar
sub
push
lods
je
xor
fnstenv
xchg
adc
pop
loopne
movs
jmp
loope
ret
bound
cmp
mov
test
push
or
push
dec
jmp
test
mov
jp
adc
lock
mov
and
xchg
and
xor
pop
xor
push
and
ret
adc
pop
rcr
and
mov
lds
sub
cs
out
hlt
sub
imul
(bad)
(bad)
jmp
and
mov
inc
fidiv
int
sub
pop
pusha
and
xlat
(bad)
(bad)
mov
xor
sahf
add
(bad)
or
inc
xchg
adc
or
add
pop
add
add
mov
jp
jb
(bad)
imul
and
sbb
mov
pop
mov
and
pop
mov
enter
or
dec
or
push
mov
mov
inc
mov
add
mov
add
sbb
ss
and
mov
loopne
jge
jo
lods
es
or
push
ror
pop
add
push
ins
retf
push
mov
jg
aaa
pop
nop
push
dec
shl
cmps
mov
mov
ret
aaa
aad
aas
mov
lods
pop
inc
xchg
popa
mov
jns
or
adc
in
and
int
push
mov
pop
push
test
ja
fcomp
sbb
inc
add
cmp
test
mov
add
pop
aaa
xor
add
jl
hlt
xchg
add
ins
inc
and
jle
lods
xchg
xchg
sub
mov
mov
sbb
sub
sbb
and
ja
xor
dec
and
std
adc
or
(bad)
pushf
mov
adc
xor
mov
adc
adc
push
ret
jno
jnp
movs
ror
test
xchg
fadd
rol
jecxz
xchg
sbb
clc
xor
ret
call
outs
sti
adc
sbb
dec
movzx
shl
inc
add
add
test
pop
mov
and
pop
add
popa
es
jnp
movs
or
jp
inc
sbb
scas
bound
add
push
mov
inc
sbb
push
mov
or
xchg
jge
cmc
or
outs
push
test
push
pop
dec
or
retf
shl
cmps
arpl
cmp
daa
jle
sbb
and
add
out
fmul
pop
inc
sub
pop
add
adc
les
mov
fisttp
dec
and
rcl
int
test
mov
sbb
(bad)
mov
nop
inc
jno
inc
add
inc
iret
stos
pop
pop
sbb
loopne
sar
add
inc
fsub
bswap
mov
ja
lods
mul
jp
sub
je
inc
sub
adc
mov
and
mov
ret
push
cmps
arpl
sbb
or
cmps
int
sbb
mov
sar
push
loope
jae
fcom
cmp
mov
mov
mov
mov
outs
jne
ret
sub
cmp
adc
jl
daa
fisub
push
xchg
dec
retf
push
or
jl
cmp
add
inc
sub
and
cmp
fcomp
dec
cdq
mov
or
nop
loope
or
jnp
sbb
inc
inc
and
and
loopne
jnp
loopne
(bad)
add
(bad)
in
push
jmp
xor
and
pop
inc
or
cdq
lds
pop
pop
(bad)
pop
cli
add
jne
inc
sbb
test
add
mov
xor
test
inc
mov
in
xor
into
mov
dec
stc
popa
inc
lods
dec
dec
nop
push
sbb
test
lods
or
add
mov
push
inc
rcl
jnp
lods
add
xor
nop
mov
push
or
js
leave
add
mov
mul
sbb
or
cwde
imul
clc
xchg
push
xchg
pop
inc
add
cmp
sub
imul
cmp
pop
mov
mov
sbb
rcr
loop
cmp
and
shl
sub
mov
adc
ficomp
(bad)
not
leave
push
cli
push
xor
mov
mov
inc
xchg
xchg
mov
push
jl
pushf
push
or
out
sbb
push
adc
inc
pop
in
lea
push
dec
push
cvtpi2ps
call
add
adc
xchg
add
push
push
push
neg
add
add
pop
push
adc
and
cld
jle
cs
adc
jbe
pop
cmp
or
push
adc
xor
fdiv
or
bound
adc
ja
add
enterw
push
cmp
mov
sbb
mov
ficom
mov
pop
or
loop
sbb
rcl
scas
mov
push
sbb
in
sbb
jns
push
out
call
mov
out
and
pop
mov
xor
jmp
cmp
cs
nop
mov
loope
pusha
sub
sbb
dec
add
add
fadd
or
sbb
pop
sub
retf
lds
mov
xor
dec
repnz
xchg
inc
add
dec
dec
xor
nop
out
enter
xor
inc
in
fs
lds
push
cwde
cmp
or
inc
call
jl
call
or
sbb
jae
adc
outs
loop
pop
bound
out
mov
push
cs
dec
call
fs
pusha
enter
fimul
and
push
out
(bad)
mov
or
and
inc
test
(bad)
leave
stos
inc
daa
cdq
fdivr
cwde
xchg
xor
retf
or
and
xchg
sbb
and
cmp
test
cwde
jne
lock
test
cmp
pop
mov
clc
lds
mov
pop
mov
cmp
loop
test
hlt
or
cmp
mov
(bad)
adc
pusha
or
dec
mov
add
retf
fucomip
ret
cmps
popa
mov
test
adc
pusha
and
inc
dec
jnp
and
int
lods
jo
loopne
add
or
mov
and
(bad)
loop
mov
add
mov
mov
adc
mov
loopne
add
push
and
cmp
jae
(bad)
sbb
or
mov
or
shl
fmul
sti
adc
add
ret
inc
push
push
sbb
dec
dec
and
push
jmp
push
push
ins
push
mov
jo
stos
and
add
fnstcw
test
retf
mov
(bad)
push
push
push
(bad)
xor
rol
jae
lds
fwait
aam
mov
mov
cwde
push
jo
or
jle
bound
jmp
jmp
data16
jge
jbe
and
mul
sbb
and
mov
push
inc
push
xor
add
and
mov
add
jbe
shl
and
fs
inc
and
xchg
or
ss
iret
or
mov
loop
ret
sub
pop
add
sbb
jge
jno
lods
cmp
pop
adc
push
(bad)
sbb
lds
sub
mul
out
mov
or
or
xlat
push
add
jmp
and
or
out
jl
mov
sub
sbb
popf
not
ret
pop
repz
mov
sub
push
inc
ret
or
cmp
mov
pop
cmp
push
adc
cmp
pusha
rcr
cdq
jo
jno
mov
add
aas
call
sahf
inc
enter
sbb
daa
jmp
sub
xchg
add
popa
dec
mov
stos
popa
cmp
fcom
xchg
fistp
inc
bound
add
leave
imul
push
push
sbb
ret
leave
lods
loope
sti
ret
push
lds
mov
jle
popf
cmc
repz
test
mov
dec
sub
stos
adc
add
pop
sbb
or
dec
les
shl
pop
push
and
not
add
inc
jmp
mov
fs
sub
sbb
inc
loopne
push
or
movs
dec
into
add
dec
cmp
test
jl
imul
fldenv
dec
add
mov
push
call
sbb
mov
or
sbb
out
test
mov
pop
jmp
ret
fld
icebp
push
push
repz
test
push
iret
mov
adc
(bad)
mov
push
xchg
sbb
inc
cmps
clc
pop
inc
dec
and
fimul
ins
cmps
pop
test
xor
mov
lods
outs
ins
xor
xchg
scas
arpl
xchg
dec
inc
add
inc
adc
adc
stos
arpl
xor
pushf
stc
mov
pop
rol
or
or
imul
into
xchg
ins
and
or
inc
dec
push
xlat
or
mov
push
add
popa
test
ds
(bad)
and
mov
mov
sahf
adc
inc
xor
(bad)
jno
pop
sbb
aam
push
fstp
mov
mov
mov
js
clc
sub
cmp
mov
fisttp
fadd
fsubr
enter
mov
fnstcw
pop
lds
sub
jecxz
pop
dec
loope
popf
xor
aaa
es
push
pop
loop
jo
mov
sub
and
or
jno
jl
cmp
xor
sub
push
icebp
xchg
xlat
jne
mov
(bad)
fiadd
lahf
jp
fist
sbb
inc
adc
cmc
or
add
mov
int3
mov
loopne
sbb
sbb
aas
xor
ins
mov
push
clc
push
push
push
add
add
pop
ja
nop
add
xchg
jmp
cmps
push
imul
int
jge
push
lds
xchg
lods
dec
ret
cmp
push
ret
cli
imul
jb
sub
sub
dec
mov
ret
das
ret
cli
pop
ja
outs
jae
(bad)
std
dec
or
pop
(bad)
loope
push
call
fist
sbb
push
ret
or
sbb
inc
jg
inc
push
in
fidivr
sbb
jmp
dec
repnz
std
call
pop
jmp
mov
lahf
scas
mul
shr
test
push
dec
inc
nop
pop
xor
in
pusha
imul
xor
rcr
popa
cmp
pusha
xchg
test
outs
jbe
mov
test
scas
xlat
jb
int
sti
adc
xchg
scas
jmp
mov
push
gs
(bad)
jmp
add
inc
sub
out
inc
sub
movs
xchg
jmp
sbb
pop
mov
call
mov
jle
pop
ins
pusha
cmp
addr16
dec
enter
dec
retf
pop
pop
(bad)
aaa
or
not
xor
jbe
pop
inc
sub
leave
mov
xor
xor
sub
call
adc
push
dec
pop
add
fistp
jne
sub
mov
xor
mov
or
fild
adc
stos
adc
paddusw
test
adc
xor
push
sahf
mov
fcmovu
cmp
sub
mov
cmp
in
mov
inc
jl
adc
mov
push
xlat
jle
aad
mov
add
jnp
je
lea
fcomp
fidiv
or
dec
sub
inc
mov
(bad)
leave
bound
js
mov
and
or
in
or
add
cmc
fiadd
or
sub
mov
pop
mov
clc
dec
lock
mov
sub
adc
jg
mov
jl
xchg
jmp
inc
pop
popf
jmp
ja
add
or
in
pop
push
int3
add
sub
mov
(bad)
pushf
in
add
or
cli
dec
push
push
test
sbb
in
ja
mov
mov
or
into
inc
loopne
lock
fisubr
fidiv
arpl
sub
sbb
inc
mov
imul
push
sub
adc
icebp
add
dec
lods
sbb
mov
movs
xchg
adc
cmp
adc
xor
push
jg
mov
aam
pop
xor
ret
nop
fild
or
retf
add
sbb
jg
or
retf
push
enter
je
in
iret
inc
adc
mov
mov
and
adc
sub
sub
jmp
sbb
aaa
adc
adc
add
inc
test
enter
bound
push
pop
xchg
adc
xchg
inc
or
push
add
sbb
and
(bad)
(bad)
ss
sbb
xchg
addr16
xor
cmp
sub
jbe
out
les
cmp
call
push
adc
push
sbb
sbb
pop
comiss
push
jg
inc
sub
jb
dec
add
sahf
mov
push
pop
add
or
adc
pop
pop
xlat
xchg
adc
outs
loop
adc
xchg
inc
popf
enter
ds
sbb
fistp
push
dec
cld
add
ins
add
dec
pop
xor
adc
hlt
add
or
adc
je
push
jp
mov
inc
adc
ret
mov
ret
mov
test
xchg
push
in
ficom
dec
jnp
les
inc
push
xchg
nop
push
jge
mov
retf
adc
jecxz
push
pop
pop
mov
jmp
add
mov
cld
fimul
jmp
mov
xor
push
add
mov
jg
hlt
xchg
les
jne
shl
adc
in
and
sbb
gs
sub
loopne
xchg
xor
(bad)
push
cmp
push
push
aad
push
jmp
int
jl
jb
scas
cmp
cmp
push
and
push
or
and
dec
add
mov
fstp
mov
cmc
mov
sub
lea
in
mov
add
or
mov
mov
and
pop
jnp
jle
(bad)
jmp
or
dec
mov
cmp
(bad)
aaa
repnz
mov
add
into
add
adc
jmp
and
(bad)
fsub
jbe
pop
and
pop
nop
cmp
repz
pop
outs
outs
sub
shr
ret
mov
pusha
adc
add
xor
cmovg
or
gs
mov
or
cmps
enter
dec
xchg
mov
aam
int
jge
int3
or
in
push
or
mov
or
stos
fcom
es
enter
cdq
adc
xchg
daa
inc
test
or
fimul
mov
dec
adc
adc
adc
add
jb
dec
test
dec
sbb
in
push
lds
adc
lds
add
jns
enter
cmovbe
mov
and
std
fimul
sbb
and
adc
shl
inc
std
dec
das
ret
test
clc
dec
mov
daa
push
or
adc
sbb
adc
mov
shr
cld
add
mov
xchg
ret
call
pop
enter
xor
movs
pop
or
cmp
adc
sahf
sub
fsubr
push
xor
adc
sbb
test
ret
cmp
lea
push
xchg
adc
jge
pop
push
arpl
test
mov
and
add
ins
sub
mov
jle
addr16
push
test
or
cs
movs
push
fcomp
test
adc
sub
sub
test
test
es
pop
adc
mov
cmp
jmp
push
rcr
fs
sti
ins
pop
mov
mov
push
cmp
ja
je
mov
push
adc
std
sbb
inc
jne
inc
cmp
add
test
dec
sbb
or
pusha
mov
or
mov
or
and
jne
mov
cs
sahf
adc
enter
xchg
stos
in
fadd
push
add
or
lods
mov
bound
add
cmp
ds
stos
rcl
push
add
jge
sti
inc
sub
push
mov
ss
add
mov
cmp
mov
add
add
cmp
inc
mov
add
dec
adc
and
sub
mov
add
adc
pop
mov
adc
ds
mov
sub
pushf
inc
cmp
push
sub
jno
mov
add
and
addr16
inc
or
jle
gs
rol
in
xchg
adc
adc
not
mov
cmp
inc
xor
data16
sub
cmp
arpl
imul
outs
mov
dec
and
cmp
pop
xchg
cli
and
rol
loop
icebp
shl
inc
push
add
fadd
arpl
inc
pop
inc
or
push
repnz
adc
add
repz
sub
popa
shl
or
test
in
jmp
and
and
int
les
out
xchg
dec
xor
jmp
dec
cmps
add
mov
loope
mov
cmp
xor
push
mov
or
mov
xchg
sub
je
add
je
fimul
mov
repnz
push
cld
push
clc
data16
sbb
cmp
cmp
or
jns
addr16
cmps
add
adc
sub
adc
call
cmps
dec
adc
mov
out
inc
cmp
xor
cwde
sub
clc
push
movs
inc
iret
ds
cmp
std
fwait
idiv
adc
pop
je
or
movs
cmp
push
out
imul
(bad)
call
pop
jo
fadd
bound
push
jo
hlt
push
adc
inc
dec
or
inc
cmp
dec
add
lock
adc
push
(bad)
or
mov
add
(bad)
adc
or
cli
(bad)
(bad)
xor
sbb
add
test
clc
add
xchg
add
stos
mov
movs
fs
stc
pushf
mov
sub
add
aaa
and
cmps
sub
cmp
test
push
add
mov
(bad)
call
popw
mov
sub
inc
sub
and
adc
pushf
lea
pusha
push
inc
je
xor
jo
imul
jecxz
jb
sub
ss
jmp
pop
push
in
add
dec
test
and
adc
mov
aaa
iret
jl
pusha
or
pop
sbb
(bad)
jmp
xor
dec
movs
mov
les
in
ss
pop
xchg
add
push
adc
lea
(bad)
adc
jo
ret
dec
push
dec
into
pop
fdivr
jle
mov
xor
add
rol
clc
dec
in
jo
dec
sub
jmp
inc
mov
mov
pusha
in
jecxz
jl
add
push
xchg
rcr
jbe
xchg
outs
fcom
pop
adc
in
fwait
les
inc
xchg
outs
xor
push
sbb
push
sbb
xor
push
or
push
jae
pusha
push
pop
or
test
jmp
les
mov
adc
adc
and
aam
mov
push
nop
mov
sbb
xchg
nop
mov
ss
loopne
inc
mov
inc
push
mov
adc
and
inc
pop
mov
sub
clc
mov
adc
jne
rol
add
shl
out
xor
and
mov
pop
sahf
and
loop
dec
mov
mov
add
dec
das
test
xor
sub
inc
add
and
hlt
mov
fild
leave
dec
sbb
xor
test
out
mov
jb
fiadd
fs
outs
bound
ss
xchg
gs
out
adc
mov
sahf
mov
mov
or
je
sbb
inc
adc
and
sbb
dec
int
pop
f2xm1
clc
xor
fs
clc
ja
mov
daa
add
jno
push
add
pushf
jmp
adc
mov
test
dec
shl
fbstp
jle
call
push
and
mov
ror
dec
xchg
mov
test
add
enter
dec
adc
xchg
mov
jle
jmp
sub
lods
sahf
xor
mov
sbb
jle
ss
or
test
js
je
xor
add
pop
or
jg
je
mov
jmp
frstor
ret
push
sar
mov
ins
pop
jg
or
mov
ins
dec
fwait
mov
lods
pop
mov
outs
xor
jne
pop
push
adc
fdiv
jmp
test
cmp
cmp
popf
pushf
rol
mov
fst
call
(bad)
sbb
inc
cmp
shl
pop
add
add
movs
fwait
loop
mov
or
leave
dec
mov
(bad)
cmp
daa
jne
mov
movs
(bad)
or
push
adc
repnz
or
sbb
pop
adc
and
sub
or
jle
mov
push
sub
or
inc
add
imul
pushf
es
call
js
xor
cmc
inc
mov
inc
adc
pop
jns
add
add
cmps
push
in
addr16
xchg
and
and
(bad)
xchg
xlat
imul
loopne
and
dec
adc
dec
push
loopne
in
fs
es
mov
cmp
dec
and
push
dec
add
cmc
or
je
mov
call
add
add
dec
sbb
or
pop
add
or
adc
dec
mov
sbb
je
mov
add
(bad)
mov
push
inc
icebp
call
mov
inc
cs
sub
xchg
jae
push
bound
shr
enter
mov
in
in
pop
dec
stos
inc
pusha
xor
addr16
inc
cmp
adc
pusha
sbb
dec
pop
mov
adc
leave
in
add
ret
xchg
cdq
and
or
jl
and
mov
fld
shl
jb
jne
jle
add
jg
push
(bad)
sahf
aam
test
das
(bad)
jg
std
or
pop
or
push
mov
int3
sbb
test
fisttp
jecxz
mov
inc
jge
ins
inc
mov
jmp
cld
jl
cmp
jg
sbb
add
or
or
jb
dec
mov
adc
imul
test
or
sbb
lea
add
add
dec
add
fbstp
jge
pop
out
sbb
add
pop
inc
push
sub
cmp
outs
aaa
add
and
sub
dec
jmp
sbb
jp
add
mov
inc
adc
fdivr
add
jle
sbb
jp
mov
mov
jmp
loopne
xchg
sbb
adc
jne
sub
xchg
sub
jns
repz
cmp
sbb
pushf
and
push
das
rol
lsl
xor
out
lods
or
add
sbb
lds
sbb
outs
push
sub
jge
sub
mov
aaa
pop
stc
or
out
je
and
jmp
lods
dec
or
add
mov
push
ins
mov
retf
or
dec
and
add
ror
xor
test
sbb
lea
add
shl
add
mov
rol
add
add
jl
or
mov
inc
mov
or
mov
push
and
imul
xchg
add
mov
mov
cdq
lods
push
cmp
jmp
inc
mov
cmp
or
jmp
inc
mov
jo
inc
and
arpl
std
xchg
test
fild
adc
cmps
add
popa
lock
cmps
push
or
sar
add
gs
or
or
jo
mov
fcom
int3
outs
mov
xchg
mov
sbb
arpl
shl
jmp
add
inc
jmp
int3
xor
and
ror
pop
or
cmp
inc
sbb
and
mov
push
es
and
sbb
and
imul
add
or
jnp
gs
inc
cdq
jnp
xor
test
and
mul
jne
loopne
loopne
jne
xor
add
dec
adc
pop
outs
pushf
jne
dec
xor
sub
xchg
mov
and
push
add
cmovle
call
and
aad
dec
dec
mov
mov
clc
or
add
push
or
inc
sub
mov
pop
jecxz
sub
aad
mov
push
stos
div
inc
outs
(bad)
das
inc
in
jne
rol
daa
xor
test
pop
push
or
add
jmp
call
push
sbb
lock
ja
add
or
or
or
mov
daa
pop
xor
shr
pop
adc
sahf
xchg
xor
adc
mov
adc
dec
cmp
imul
cmp
sbb
or
cwde
push
test
cmp
or
xcrypt-cfb
cmps
cmps
mov
lea
push
push
out
add
cmp
and
or
sti
pusha
pusha
xor
inc
mov
pop
js
in
pop
or
jmp
not
cmp
(bad)
cmp
xchg
call
sub
and
or
push
pop
sbb
pusha
ins
cs
add
pop
lods
push
sbb
in
jmp
or
cmp
loop
sbb
add
ins
stos
sar
jae
jne
xor
mov
or
or
jbe
pop
jmp
and
jne
xlat
movs
ss
mov
or
dec
adc
sahf
jo
add
pop
sub
adc
daa
cmps
push
(bad)
cld
push
jne
inc
mov
loopne
add
adc
je
scas
hlt
jne
add
or
push
lods
xor
and
ins
rcr
inc
loope
aaa
sbb
sbb
aas
pushf
cmp
arpl
mov
ret
pop
dec
icebp
push
mov
dec
inc
adc
stos
sbb
and
ja
jne
pushf
add
push
jns
add
adc
popa
add
push
popa
and
mov
jp
add
cwde
sbb
push
sub
(bad)
pop
pop
cmp
add
ror
inc
test
push
dec
ds
in
push
xlat
or
adc
in
test
mov
pop
pop
neg
cmps
ss
fild
or
pop
dec
jmp
into
push
inc
xor
dec
jge
mov
xchg
mov
std
xor
push
(bad)
xor
mov
sub
ret
mov
test
shl
xor
sbb
cwde
push
dec
sar
mov
mov
mov
add
dec
add
sub
jp
cmp
rcl
sbb
inc
jmp
push
pop
mov
mov
and
fistp
adc
mov
loopne
pop
cdq
jl
or
ins
sar
pop
push
ja
or
push
adc
xor
sbb
shr
pop
pop
adc
and
adc
add
sub
imul
jl
dec
or
mov
sbb
loop
and
add
adc
fwait
bound
jmp
in
mov
adc
push
daa
or
or
mov
ins
jns
rol
pusha
daa
cwde
stos
add
sar
cmp
fwait
adc
call
jo
shl
sub
jmp
lock
lock
push
jns
mov
ret
add
cli
outs
xor
(bad)
(bad)
inc
shr
std
aam
icebp
xchg
adc
cmp
jne
add
pusha
gs
jmp
pop
clc
aaa
cmc
das
aam
mov
neg
push
lods
push
sbb
loopne
adc
push
inc
cmps
or
or
imul
mov
sub
add
mov
xor
inc
pop
test
jno
jbe
xor
sub
cmp
pop
mul
push
sbb
cmps
ror
pop
cdq
cli
mov
jne
mov
imul
or
pop
mov
push
xor
test
cmp
inc
add
jl
cmp
adc
scas
pop
dec
sbb
xor
add
mov
and
in
or
sub
jb
add
inc
or
shr
dec
std
cdq
cmp
pop
mov
mov
mov
cmp
xor
in
or
mov
mov
pop
push
xchg
les
add
imul
jb
idiv
inc
jo
sbb
push
inc
cwde
cmp
rcl
push
ret
fwait
dec
cdq
sub
adc
in
call
or
and
cmp
mov
push
cwde
js
jb
pop
pop
in
inc
ret
push
pop
push
add
jb
add
sbb
mov
jle
mov
or
mov
out
pop
loopne
add
lds
(bad)
call
mov
test
je
fisttp
inc
retf
mov
mov
loop
es
pusha
push
cmc
xchg
or
inc
test
sub
cwde
out
(bad)
in
push
jmp
push
dec
daa
pop
adc
xchg
or
mov
inc
cmp
cmp
cwde
lea
(bad)
or
push
push
sbb
pusha
mov
pop
mov
aam
cmp
mov
or
stc
and
adc
dec
adc
mov
sbb
adc
sub
rcr
fbstp
sbb
out
add
dec
je
add
jmp
lock
and
icebp
add
hlt
sub
or
adc
xchg
sub
fadd
inc
aas
les
imul
lock
adc
call
and
push
adc
or
sti
mov
add
inc
xchg
add
push
add
cmp
cmp
test
fmul
add
shl
(bad)
ret
cmc
sub
imul
fadd
jno
iret
adc
xchg
daa
call
lea
mov
wrmsr
sbb
lods
sub
jge
leave
stos
mov
add
mov
push
xor
xor
and
mov
xor
mov
jg
or
add
sbb
cli
xchg
sbb
fistp
or
outs
or
adc
mov
inc
or
or
jmp
xchg
jg
mov
sqrtps
sbb
in
inc
adc
movs
or
jbe
push
dec
jle
add
mov
mov
and
adc
call
call
inc
cmp
xor
xor
dec
cwde
mov
lea
adc
popf
mov
jo
rcl
push
xchg
outs
push
cmp
pop
inc
clc
mov
jbe
sbb
add
loopne
push
rol
(bad)
es
fiadd
loop
mov
mov
jmp
fild
pop
dec
pop
push
add
mov
dec
das
cmps
and
fdivr
add
inc
lds
push
inc
jg
mov
cmps
and
or
aas
or
add
add
popf
add
mov
add
jno
or
add
and
stos
adc
neg
jl
sbb
sub
sub
pop
add
jbe
dec
pop
xchg
rol
leave
loopne
(bad)
push
or
xchg
(bad)
pushaw
inc
add
fsub
add
test
add
sahf
and
lea
shl
xor
mov
(bad)
stos
push
out
out
cmc
adc
retf
dec
inc
ret
int
pusha
jo
(bad)
int3
repz
pop
dec
mov
push
(bad)
cmp
or
and
push
mov
adc
jg
dec
outs
call
mov
test
dec
jne
inc
add
push
sub
xchg
cld
ret
sub
inc
inc
pop
inc
sub
addr16
aaa
js
nop
ret
add
dec
rol
ja
push
dec
add
jmp
cmp
pop
cwde
add
outs
push
and
sbb
fmul
mov
cmp
xchg
or
push
jb
xchg
inc
add
push
sbb
mov
fild
pop
add
daa
aam
pop
xchg
xor
loope
mov
and
mov
adc
out
lahf
rcl
jns
add
push
imul
bound
packssdw
into
cdq
xor
mov
jo
mov
and
push
cmp
cdq
sbb
mov
cdq
lock
add
push
sbb
add
add
add
jnp
or
cdq
adc
mov
cdq
add
or
das
leave
and
inc
or
add
ds
pop
and
aad
(bad)
aaa
push
pusha
sbb
or
pop
cmp
inc
jmp
inc
push
mov
mov
dec
lahf
xor
cdq
add
les
imul
jg
ss
xor
push
xchg
imul
outs
dec
push
xor
jno
call
jmp
lock
mov
jle
pop
add
iret
inc
add
pop
test
lods
shl
inc
adc
pop
adc
mov
jno
sbb
push
sahf
pop
inc
int
push
or
stos
lods
inc
ret
test
movmskps
sti
cs
cmp
xchg
sbb
test
sub
xor
sbb
loopne
push
loope
inc
jb
aaa
in
xchg
mov
std
cmp
add
xchg
icebp
sbb
daa
push
dec
add
or
dec
sbb
add
pop
mov
enter
mov
push
sbb
loopne
push
sbb
jecxz
lock
sub
(bad)
mov
cmc
dec
inc
hlt
call
and
pushf
mov
or
lods
or
call
pushf
adc
mov
aas
adc
in
xchg
out
ror
add
add
dec
sbb
sar
repnz
js
out
inc
out
add
or
cmp
adc
mov
aam
aad
mov
call
adc
loopne
xchg
(bad)
les
or
mov
mov
adc
ss
sbb
jns
in
int
pop
and
xchg
inc
shl
sbb
push
add
pop
pop
es
movs
into
and
and
(bad)
mov
in
sub
fadd
rcl
or
push
scas
sub
fsubp
mov
mov
je
jo
push
push
sbb
retf
iret
add
sti
pop
and
mov
push
jl
popa
sbb
mov
fwait
inc
jb
dec
loopne
lods
movs
mov
fadd
and
test
adc
add
and
push
and
pop
add
xor
add
mov
mov
mov
adc
loop
mov
mov
js
repnz
or
loopne
sub
fsub
ror
inc
rcl
cli
ret
in
or
mov
or
xor
les
mov
fcmovnbe
push
inc
ds
jl
popa
mov
clc
jl
mov
or
scas
pop
and
dec
and
adc
pop
jl
dec
daa
and
adc
mov
add
mov
daa
jecxz
or
sub
iret
inc
pushf
test
lea
cmp
mov
or
jnp
cwde
push
iret
sbb
push
push
mov
popa
pop
xchg
add
ret
aaa
or
aaa
inc
outs
adc
stos
adc
xor
in
xor
add
sbb
and
inc
xor
je
cdq
add
or
pop
sbb
cmp
xor
add
adc
add
pop
xchg
push
add
bound
dec
or
mov
nop
mov
lods
rol
sbb
dec
adc
js
jle
sub
mov
and
xchg
or
ret
add
add
mov
push
or
rcl
xor
inc
xor
jl
pop
pop
mov
sub
call
sub
test
or
rol
es
fucom
xchg
jno
push
in
xchg
sbb
stos
inc
inc
in
bound
add
clc
jbe
dec
test
dec
or
test
sar
adc
mov
fucomi
(bad)
cmps
pushf
inc
and
mov
pop
int3
fxch
jo
or
adc
inc
lahf
xchg
out
sub
or
and
in
es
mov
inc
sub
ins
call
inc
in
pop
fild
test
aam
in
push
adc
and
sub
xchg
sbb
adc
adc
dec
sub
les
rcr
(bad)
or
or
aam
push
(bad)
fistp
or
inc
idiv
mov
and
and
das
mov
xor
into
inc
dec
out
adc
dec
jl
push
dec
xor
sub
adc
cmp
or
movs
sbb
imul
jb
call
lods
pop
and
add
jp
(bad)
js
and
adc
xchg
cmp
int3
and
mov
addr16
inc
loopne
mov
push
lock
shl
sbb
test
gs
dec
jl
addr16
ret
mov
loopne
push
or
mov
dec
ror
lds
mov
shr
add
test
cmp
test
adc
adc
inc
inc
fidivr
or
fild
fld
cmp
nop
add
pusha
mov
jle
clc
jg
dec
call
daa
mov
pushf
or
daa
call
adc
inc
adc
mov
rcl
xor
and
shl
inc
sbb
or
or
add
and
test
add
call
jb
inc
or
mov
fcomp
ins
xchg
nop
pop
aam
ins
icebp
mov
rcl
dec
lea
push
jno
scas
clc
push
dec
sbb
jnp
sub
dec
push
cwde
xor
loopne
or
dec
jb
retf
jno
push
(bad)
(bad)
mov
add
jp
rcr
xor
aam
jecxz
cmp
cwde
cmp
and
(bad)
test
mov
dec
cld
pop
sar
mov
pop
call
ds
fidiv
jle
or
or
push
cs
push
popa
sbb
xchg
mov
add
outs
test
sub
cs
add
jns
mov
add
add
jle
jge
adc
aad
in
xchg
(bad)
or
jmp
mov
and
les
push
or
xchg
or
add
add
push
add
pop
call
inc
dec
xchg
sub
les
scas
adc
sahf
add
out
repnz
sbb
add
ins
cld
inc
test
or
in
push
dec
and
or
adc
inc
push
call
or
jo
shl
push
xchg
dec
movs
adc
pop
fcomp
inc
adc
dec
out
mov
or
sbb
sbb
add
cmp
xchg
add
jb
aam
int3
shl
aam
test
adc
stos
jge
leave
adc
lods
ins
mov
or
pushf
pop
mov
or
mov
mov
pop
or
(bad)
pop
sub
(bad)
sbb
repz
xor
sub
xlat
ror
and
dec
xor
cs
stc
clc
add
mov
pop
dec
pop
jmp
jno
dec
jbe
xor
enter
bound
cmp
mov
aam
jnp
repnz
mov
ja
cmps
sub
add
mov
inc
shr
ins
fsubp
inc
or
lods
cwde
sbb
lds
inc
adc
outs
and
inc
cmp
push
call
pusha
mov
add
dec
and
dec
repnz
dec
mov
add
jae
ss
adc
loopne
mov
sbb
push
int3
or
jp
cmp
pop
fadd
or
in
jnp
mov
adc
sbb
add
mov
mov
dec
xor
ror
rcl
push
dec
rcl
pop
cmp
inc
and
ficom
stos
mov
push
xor
jbe
movs
repnz
sbb
sub
add
mov
jl
xor
xlat
sbb
adc
mov
adc
pop
push
add
test
and
mov
pusha
add
push
cmp
cmp
fstp
xor
mov
lock
fdivr
pop
mov
cmps
xor
mov
test
sbb
inc
hlt
dec
je
add
popf
ins
push
sbb
inc
mov
sbb
xchg
shl
loopne
jne
add
idiv
(bad)
dec
outs
inc
push
stos
and
add
add
inc
out
add
adc
cli
dec
or
jmp
test
inc
jl
ret
add
cmp
and
dec
ret
clc
dec
jecxz
mov
mov
cmp
jle
lea
mov
movs
loope
dec
add
add
mov
push
(bad)
fistp
sub
pop
icebp
or
or
or
cmp
inc
shr
js
(bad)
ss
and
leave
or
or
inc
sbb
mov
xchg
imul
lods
(bad)
imul
cmp
fiadd
cdq
sub
inc
sub
add
add
mov
ss
dec
push
cwde
cmps
or
inc
nop
loopne
jl
sbb
inc
add
leave
pop
test
inc
xchg
or
push
add
mov
adc
inc
inc
dec
cmp
pop
pop
lock
pop
movs
inc
adc
fs
xchg
sar
or
jle
add
add
and
mov
ja
add
mov
fdivr
neg
inc
sub
(bad)
ror
je
ret
cmp
add
jmp
xor
sbb
shl
(bad)
add
or
inc
(bad)
jge
xor
dec
or
sbb
xor
xchg
or
test
pop
je
xchg
mov
fcmovnb
fstp
imul
sub
xchg
stos
dec
das
test
pop
sub
addr16
pusha
lock
sub
sub
push
outs
lea
int
dec
add
jl
mov
fst
push
cmp
and
fadd
push
and
add
sbb
and
lds
shr
add
call
call
loop
mov
sahf
das
mov
or
dec
cld
adc
and
push
or
out
sub
adc
pop
clc
or
sub
add
fsub
adc
mov
sbb
cmp
sub
add
push
lock
and
inc
or
add
or
mov
out
fstp
inc
add
dec
fidivr
adc
xor
shl
push
and
pusha
push
push
adc
call
dec
retf
mov
pushf
idiv
inc
or
push
pop
pop
adc
lea
seto
pop
add
lock
fdivr
movs
sub
mov
rcl
pop
or
cmp
mov
add
popa
mov
jbe
or
push
pusha
push
dec
mov
mov
add
mov
sbb
sti
test
pop
pusha
push
movs
jbe
scas
jne
pop
pop
xor
or
fmul
pop
sbb
push
cs
xor
xchg
cmp
adc
lea
and
es
and
jp
arpl
dec
outs
and
adc
push
ret
aam
pop
ret
movs
or
dec
cmp
test
jb
sbb
ret
inc
popa
adc
inc
inc
and
nop
add
psubusb
test
adc
inc
mov
pop
inc
dec
sub
or
push
rcl
xor
test
lods
or
test
pop
daa
xchg
inc
adc
sub
sbb
and
sub
shl
or
call
call
fstp
fcmovb
call
jae
push
les
adc
adc
and
xor
add
inc
mov
cmp
nop
jge
mov
imul
popf
dec
and
psrad
repz
jmp
fcomp
mov
mov
clc
or
test
mov
mov
loope
xor
mov
addr16
icebp
and
fcmovb
xchg
xor
inc
pop
push
adc
rol
ja
jnp
fimul
jbe
ins
loope
inc
push
add
clc
jne
dec
mov
add
cmp
cmp
cmp
lahf
add
clc
test
clc
mov
data16
or
xor
dec
lods
sbb
(bad)
pop
ds
sub
ret
adc
push
and
xchg
iret
sbb
adc
cmp
and
jp
cmp
and
jg
fisub
pushf
fsub
push
xor
pop
push
adc
or
mov
(bad)
dec
jbe
adc
pop
mov
push
dec
arpl
fs
push
push
xor
mov
jo
pop
push
adc
mov
dec
xchg
xchg
movsx
out
rcl
(bad)
sub
lods
cmp
mov
push
xor
sub
mov
pxor
push
fcmovnu
fild
data16
call
ret
or
or
aas
push
push
add
xor
dec
xchg
push
xchg
sub
inc
xor
pop
popa
push
dec
pop
dec
dec
movs
mov
outs
pop
in
popa
or
cwde
pop
cmp
mov
jae
fadd
mov
inc
ret
loopne
shl
imul
inc
sub
outs
or
xor
cld
xchg
sbb
add
xchg
sbb
rcr
pop
mov
inc
in
lock
mov
neg
je
not
push
and
sub
outs
add
sbb
nop
dec
xchg
jnp
add
idiv
movd
mov
lock
sub
in
mov
fidivr
sar
mov
ffreep
add
dec
mov
add
xor
std
xlat
neg
xchg
sbb
mov
mov
cmp
push
xor
add
push
inc
mov
bound
sbb
dec
rcr
jnp
inc
arpl
sbb
and
xchg
popf
dec
iret
mov
xor
or
sbb
dec
inc
inc
das
sbb
mov
and
lods
push
xchg
mov
adc
xor
adc
push
jmp
(bad)
adc
push
adc
ret
sub
xor
add
ins
test
(bad)
sbb
mov
cmp
xchg
or
cmp
call
mov
xchg
repz
and
sub
xchg
call
mul
jg
xor
jne
dec
gs
mov
neg
rcr
out
in
add
sbb
mov
ret
dec
popf
in
(bad)
out
jle
jecxz
inc
add
xor
repz
lea
clc
and
or
aam
xchg
lock
scas
sbb
js
jne
inc
loop
xor
sbb
sbb
and
aad
sub
push
rol
fnstsw
pop
inc
and
push
retf
mov
xor
iret
jnp
xchg
nop
push
or
aas
shl
cmp
add
sub
add
gs
fwait
sbb
in
ins
xor
adc
jg
pop
jge
in
pop
in
add
repz
cli
in
je
adc
add
add
ret
pop
imul
xchg
(bad)
fwait
inc
push
push
cmp
pop
mov
fld
movs
inc
iret
jmp
in
xchg
xchg
mov
inc
cmp
aad
mov
adc
cmp
test
and
push
add
sbb
or
out
les
inc
jmp
call
aaa
loope
(bad)
(bad)
jmp
or
jmp
push
aas
pusha
(bad)
leave
scas
fiadd
pop
mov
xor
mov
ror
jae
pop
(bad)
sub
(bad)
outs
ins
sbb
inc
enter
mov
or
dec
push
dec
push
sbb
(bad)
push
pushf
pop
adc
cmp
xor
sbb
cmp
mov
xor
pop
sti
mov
inc
mov
adc
or
les
add
pop
dec
add
mov
fs
and
jecxz
push
mov
lea
shr
add
adc
mov
xchg
jl
jmp
cmps
push
sar
jnp
inc
mov
ins
push
mov
out
ret
pop
adc
movs
out
mov
pop
push
inc
cmp
sbb
dec
or
mov
ins
mov
addr16
xchg
adc
ins
into
inc
xchg
daa
arpl
ret
add
shr
inc
xchg
imul
mov
inc
movs
mov
jmp
iret
(bad)
jne
mov
adc
lock
je
mov
movs
cmp
ss
js
sub
jp
stos
mov
add
mov
out
(bad)
lea
cmc
add
fidiv
inc
neg
cmp
jle
inc
js
add
mov
dec
lods
add
mov
lea
adc
jno
or
inc
inc
pop
cmp
je
add
inc
cmp
add
retf
adc
retf
lea
jne
fmul
add
dec
pusha
mov
out
scas
push
xor
sbb
lea
or
mov
push
jl
in
add
and
iret
icebp
pop
sbb
dec
xchg
pop
arpl
(bad)
mov
dec
mov
stos
jno
out
adc
add
add
or
xor
xor
sbb
call
or
stos
dec
mov
add
imul
inc
lock
add
push
and
pop
sub
push
pop
shl
sub
or
mov
add
call
test
retf
mov
je
sar
adc
adc
aam
ficomp
push
in
test
add
jmp
or
neg
dec
sub
je
push
lock
mov
add
add
or
mov
les
inc
ins
ja
js
dec
jb
jle
into
(bad)
lock
pusha
(bad)
xchg
rol
add
jmp
dec
jg
test
adc
jne
jae
int
cmp
add
ret
(bad)
inc
sbb
inc
addr16
xchg
(bad)
dec
push
sub
xor
clc
test
sbb
in
sbb
lea
pop
loope
adc
xchg
mov
sbb
cwde
xlat
call
call
aaa
or
cmp
jp
push
push
add
shl
mov
fimul
iret
xchg
pop
outs
jmp
jne
xchg
xchg
loope
jo
movs
pop
sub
pop
loope
jno
inc
pop
and
mov
push
sub
xor
hlt
dec
xor
dec
lods
pop
out
cli
inc
mov
jbe
xchg
popa
mov
cmp
dec
in
mov
sub
dec
xchg
sub
mov
push
inc
push
add
xchg
mov
add
ss
sbb
mov
and
shl
xchg
lock
jge
test
push
add
jge
inc
and
xchg
and
mov
inc
mov
inc
push
xor
xor
scas
movups
pop
add
add
inc
icebp
dec
jb
pop
sbb
(bad)
and
adc
mov
jns
sbb
cli
inc
loope
mov
pop
fnstsw
push
call
sbb
sti
inc
test
imul
shl
pop
mov
rcl
xchg
dec
add
adc
sti
dec
jo
xor
mov
sbb
dec
add
pushf
outs
cli
inc
jmp
cmp
push
inc
or
sbb
popf
rol
inc
mov
sbb
and
movs
xor
fld
jl
xchg
fimul
push
inc
add
loop
sub
cmc
mov
aaa
je
mov
add
or
cmp
inc
mov
callw
lea
jo
inc
sub
pop
rcl
jmp
inc
cmp
ss
xor
rcl
mov
clc
ret
mov
mov
mov
data16
push
xor
movs
adc
mov
dec
pushf
loope
mov
enter
mov
push
pop
adc
test
push
test
and
ror
or
cmp
pop
out
push
mov
mov
xor
or
cmp
jl
sub
and
sahf
arpl
adc
dec
xor
int
mov
push
ret
je
mov
inc
add
jge
push
loop
jl
dec
pop
push
push
add
imul
popa
jo
dec
and
jnp
imul
xchg
out
mov
scas
int3
xlat
loopne
xchg
xchg
cmp
push
dec
fisub
cmp
mov
sub
pushf
cmps
jle
sub
mov
es
dec
(bad)
mov
inc
or
stos
sbb
adc
jo
into
lea
adc
add
idiv
(bad)
mov
stc
add
inc
inc
add
add
dec
movs
fisub
dec
dec
in
cld
xor
rcr
dec
cmp
fldcw
rcr
adc
leave
xor
imul
sub
jnp
cmp
sbb
aam
push
inc
inc
dec
push
pusha
aas
add
in
inc
movs
pop
(bad)
mov
xor
data16
or
push
and
sbb
loop
ret
adc
sbb
add
je
jno
xor
sbb
add
mov
popf
add
je
sub
mov
addr16
mov
xchg
mov
jns
xchg
mov
ret
xchg
mov
push
arpl
xor
jae
retf
fidivr
xor
and
mov
cld
push
sub
xor
push
test
lock
adc
fisub
mov
dec
add
sar
pop
loop
add
pop
inc
push
push
sbb
xor
out
adc
pop
js
bound
xchg
xchg
pop
push
popa
je
mov
pusha
dec
enter
push
dec
pop
mov
dec
cmp
jge
clc
(bad)
mov
mov
mov
push
cmp
inc
add
enter
push
sub
dec
sub
mov
jno
or
ds
mov
inc
mov
and
ins
rol
out
fst
les
or
push
xchg
fadd
es
dec
daa
movs
repz
clc
jae
push
int3
lea
xor
inc
sub
loopne
cmp
jo
xchg
pop
pop
push
pop
mov
arpl
addr16
and
imul
inc
aam
push
or
fisub
cwde
jg
js
call
sbb
sbb
aam
rol
xchg
aaa
or
rol
clc
ins
loopne
loop
sbb
dec
add
adc
mov
aas
or
aaa
push
icebp
push
in
ja
push
add
xor
inc
mov
data16
push
mov
mov
or
(bad)
loope
adc
or
fs
lds
mov
xchg
test
shl
push
add
mov
mov
mov
jo
inc
pop
sbb
adc
mov
neg
xchg
cmps
pop
lock
jmp
pusha
fdivr
and
pop
mov
clc
add
dec
jo
adc
and
mov
mov
dec
out
push
dec
inc
rol
mov
jle
xchg
mov
adc
jo
pop
push
xchg
or
xor
add
ds
push
rcr
bound
mov
mov
mov
imul
add
shl
inc
add
xor
or
cmp
ds
mov
pop
push
xor
dec
add
stos
mov
inc
sub
inc
sub
push
adc
test
and
(bad)
fs
fadd
mov
dec
dec
or
add
int3
or
outs
ja
mov
(bad)
in
cmc
sub
adc
and
sbb
push
pop
add
out
or
xor
retf
inc
(bad)
mov
mov
dec
cmp
push
or
adc
iret
std
lods
cmc
sbb
jge
outs
pop
shr
xor
ins
(bad)
outs
nop
outs
push
sub
adc
adc
adc
fsub
movs
jp
adc
ror
cld
sub
cmp
sub
lods
loopne
and
lock
cmp
push
sub
push
retf
rcr
das
(bad)
out
fmul
jae
or
mov
and
sbb
jo
adc
sbb
inc
data16
fucomi
fild
add
fdivrp
or
rcr
int3
mov
jnp
mov
push
xchg
js
je
mov
ror
push
push
repnz
mov
add
adc
dec
cli
popf
test
add
pop
sub
fdiv
int3
(bad)
mov
adc
mov
and
push
add
inc
hlt
mov
adc
xor
mov
sbb
mov
cmp
ds
arpl
sbb
dec
xchg
xchg
mov
ud1
sbb
stos
mov
mov
mov
fmul
xor
inc
gs
je
cwde
cmp
mov
jno
pusha
(bad)
mov
xor
inc
inc
sti
ret
outs
add
mov
lock
test
es
dec
rol
dec
movs
scas
push
inc
mov
cmp
out
fcom
jnp
add
sbb
pop
hlt
cmp
outs
xchg
outs
je
imul
add
add
jl
mov
clc
(bad)
mov
cmp
push
in
push
inc
ds
and
dec
ror
lahf
das
cld
jmp
dec
add
add
adc
add
ret
jle
ds
sub
imul
fisub
fild
mov
inc
push
add
jl
xor
add
add
mov
jmp
rol
pop
call
int3
adc
mov
pop
daa
add
dec
cs
rcr
loop
ja
lea
iret
mov
cmps
or
push
pop
psignd
test
xor
mov
mov
dec
fadd
pop
jae
lock
cmc
xchg
addr16
inc
cmp
push
sbb
add
mov
jo
adc
push
fadd
pop
add
lea
sub
or
push
nop
pop
imul
sub
loopne
jge
arpl
jge
hlt
std
and
xor
(bad)
sub
inc
inc
adc
or
sbb
dec
nop
mov
inc
hlt
dec
or
inc
adc
lds
retf
add
pop
xchg
sbb
sub
in
add
sbb
retf
jmp
add
push
sub
mov
sbb
lock
sbb
pop
sbb
push
daa
repnz
adc
mov
pop
add
enter
test
out
rcr
test
xchg
xchg
ss
push
sbb
sbb
mov
fidiv
imul
mov
into
jle
mov
cmp
cmp
adc
outs
pushf
add
inc
xchg
(bad)
mov
sti
hlt
xor
xlat
movs
mov
movs
and
xchg
fsubr
pop
hlt
jo
shl
fcomp
dec
loopne
cmp
or
add
xchg
add
xor
or
in
mov
popf
out
clc
add
xchg
std
fcom
and
pushf
push
hlt
and
movs
and
dec
mov
mov
xchg
es
add
ja
hlt
adc
add
fnstsw
add
sub
push
aas
(bad)
outs
pop
enter
mov
(bad)
and
sbb
mov
push
and
adc
push
inc
arpl
fiadd
icebp
push
imul
cmps
push
sbb
pop
adc
pop
add
fadd
ins
add
repz
clc
xor
test
and
mov
aas
popa
pop
dec
mov
mov
mov
sete
mov
cmps
out
dec
cmp
inc
xor
jmp
push
xor
and
call
xchg
data16
add
movzx
push
jl
inc
and
xchg
fisubr
test
sub
add
inc
add
pop
and
dec
jne
jmp
pop
cmp
inc
or
add
add
sub
xchg
(bad)
retf
lods
and
add
js
or
jl
push
fadd
test
jge
fdiv
push
les
gs
(bad)
call
ret
mov
dec
add
mov
retf
(bad)
mov
sar
jbe
mov
mov
dec
push
dec
adc
push
rcr
dec
add
push
lea
mov
jle
dec
jne
or
xor
jp
in
push
xor
test
mov
mov
dec
or
imul
into
cmps
or
lea
add
imul
jo
lahf
jo
pop
jge
shr
movs
jge
clc
hlt
ror
cmp
aad
sti
jmp
add
or
and
inc
mov
stos
lods
and
mov
out
dec
cmp
aas
aam
pusha
mov
inc
add
enter
in
test
clc
pusha
jmp
adc
fbstp
pop
push
pop
sub
lods
imul
ret
jne
sbb
xor
das
mov
xor
add
test
add
lahf
gs
mov
test
scas
lahf
test
cmp
cmps
xchg
mov
rol
add
mov
xchg
jle
push
fidiv
pop
lods
je
add
dec
inc
add
and
lock
pop
mov
and
jl
mov
cmp
sbb
retf
aam
pop
sbb
mov
cwde
ficomp
popa
hlt
adc
dec
sub
test
pop
ins
add
ins
pop
and
jl
cmp
mov
add
inc
adc
inc
adc
test
rep
inc
enter
dec
out
or
inc
xor
out
inc
inc
xor
adc
mov
add
mov
push
add
push
and
gs
aaa
nop
adc
inc
sbb
cmp
ins
aad
push
adc
jmp
add
test
inc
add
sub
jbe
fwait
sbb
jg
sbb
repz
lods
add
add
mov
pop
add
nop
jmp
int
sbb
dec
push
scas
mov
mov
inc
movq
outs
jo
mov
push
push
xchg
call
adc
retf
jg
sbb
add
or
sub
and
xor
lds
and
inc
inc
test
inc
ret
push
add
ret
push
sub
dec
loopne
adc
pop
pushf
add
daa
pushf
mov
js
xor
jbe
dec
shl
xchg
cmp
mov
ss
cmp
shrd
sub
lds
and
jb
dec
pop
ins
sbb
xor
xor
test
inc
in
jl
xor
nop
repz
and
push
jge
mov
(bad)
test
or
pop
and
pop
or
jmp
adc
ins
imul
pop
sub
js
add
or
xor
add
loopne
or
je
scas
dec
jle
mov
test
test
pop
cmps
dec
icebp
lea
(bad)
lods
inc
pop
pop
lea
or
push
or
adc
ins
test
jo
xlat
hlt
ins
push
test
adc
loopne
mov
ror
jno
inc
cmp
inc
mov
xchg
sub
inc
inc
test
shr
mov
lds
das
out
or
test
xlat
cmc
pusha
(bad)
push
or
repz
enter
mov
pop
or
mov
add
inc
or
add
bound
cmps
sahf
push
push
sar
add
cmp
test
ret
pop
inc
cmp
sub
clc
cmp
pop
hlt
or
jnp
adc
push
dec
es
pop
adc
mov
jle
xchg
arpl
inc
hlt
xlat
mov
sub
add
ret
aas
add
and
add
jne
pop
xchg
cmc
es
out
(bad)
sbb
mov
test
sar
les
or
imul
lea
push
fcom
call
out
adc
push
or
add
cdq
xchg
push
adc
push
pop
fadd
xor
xchg
outs
lea
lock
jnp
mov
js
mov
dec
and
xor
iret
repz
push
pusha
jo
push
fcomip
add
fstp
stc
jbe
xor
or
dec
and
inc
rcr
jb
mov
adc
shl
ret
add
outs
stos
pop
addr16
cwde
xchg
cld
fild
fmul
adc
xor
jae
inc
fmul
rcl
mov
inc
hlt
adc
gs
frstor
fdivr
and
pop
rcl
lock
sub
fisub
pop
aam
fdiv
cld
ja
imul
jl
and
mov
int
mov
loop
ficom
xor
pop
pop
shr
push
fsub
pop
imul
call
fist
cs
les
gs
repz
mov
sbb
enter
ror
add
push
dec
dec
and
xchg
add
(bad)
fiadd
add
int3
jns
pusha
pop
(bad)
cmps
in
or
jnp
pxor
sbb
push
setnp
inc
fwait
inc
or
outs
addr16
adc
inc
adc
fwait
lods
pop
sub
ins
outs
pop
gs
pusha
push
dec
lss
ror
gs
mov
add
dec
and
xor
ins
or
sbb
test
repz
inc
xor
sbb
push
jl
repz
or
adc
not
jo
ret
inc
sbb
adc
gs
or
mov
sub
mov
xchg
mov
mov
cmp
in
adc
sub
add
cmp
or
cmp
adc
add
inc
adc
sub
sub
ret
fdivp
inc
ret
and
inc
sbb
pop
fs
jg
jmp
aas
pop
sub
aam
mov
jne
daa
rcr
retf
pop
mov
(bad)
inc
icebp
inc
sbb
pop
call
aad
push
movs
call
test
pusha
cmp
shl
mov
dec
and
dec
dec
cmp
push
dec
push
scas
mov
adc
or
idiv
lods
mov
jnp
inc
push
shl
jne
jnp
ret
dec
and
repnz
test
mov
mov
in
add
rcr
or
sub
stos
in
or
pop
pop
jge
sub
imul
pop
mov
dec
add
sbb
sub
push
fbld
js
sbb
sub
xor
adc
pusha
dec
loopne
xor
pusha
jbe
and
mov
adc
pop
jo
loopne
or
bound
mov
jge
sub
fdivr
lea
sub
push
sub
fisttp
jp
imul
arpl
adc
push
sti
sub
or
adc
or
sti
or
data16
adc
into
ds
mov
cmp
adc
repz
and
rcr
sbb
sub
push
rcr
pop
(bad)
lock
pop
in
sub
cwde
shl
sbb
data16
cwde
dec
in
jns
or
or
fcmovnb
push
sti
inc
inc
pop
das
inc
inc
push
and
das
fs
xchg
popa
rcl
outs
add
or
add
adc
aam
add
adc
add
sbb
adc
or
cmp
push
loop
or
xor
mov
add
push
pop
jnp
ins
mov
stos
jo
or
fwait
sbb
inc
test
lds
imul
test
test
retf
add
add
mov
in
add
je
js
in
inc
and
add
fs
and
sub
das
pop
pop
cmp
imul
add
enter
nop
call
test
sub
pop
or
sub
cmp
jle
enter
xchg
out
dec
add
sub
out
add
sbb
or
test
xor
aaa
rcl
mov
idiv
sub
push
out
sbb
cmp
jae
xor
push
inc
mov
add
dec
cmp
pop
jg
add
bound
inc
adc
movs
pop
inc
and
push
push
or
movs
jno
jno
add
add
scas
push
enter
push
pop
sti
mov
retf
adc
repz
mov
outs
fisubr
xlat
rcr
sbb
push
add
pop
(bad)
nop
sahf
jno
cmp
jmp
or
fimul
cmp
(bad)
sub
sub
mov
cmp
cmp
cmp
sub
cli
ins
mov
and
not
test
adc
out
outs
sub
add
jge
mov
enter
and
sar
daa
popa
cmp
xchg
add
aam
nop
add
icebp
and
test
or
mov
fs
push
mov
dec
or
mov
test
or
sbb
pop
push
jo
test
cmp
dec
adc
and
(bad)
lock
jmp
nop
inc
cmp
dec
xchg
dec
nop
ja
push
popa
nop
test
mov
inc
adc
lods
je
push
pusha
add
mov
addr16
pop
inc
mov
push
scas
mov
in
xor
das
jns
adc
js
dec
fidiv
fcom
mov
sti
inc
sbb
sbb
push
bound
inc
add
sbb
pop
imul
add
sbb
es
or
test
adc
or
push
cwde
push
bound
cmp
inc
and
mov
fs
out
jns
xchg
sub
push
and
sub
ds
mov
adc
adc
sub
fmul
dec
xor
sub
pop
or
sbb
sub
push
push
sti
mov
push
sbb
fs
or
sti
ds
fld
icebp
inc
and
ja
popf
mov
cmp
and
cmp
sahf
retf
in
sbb
cmp
inc
fs
dec
not
cs
adc
fs
sub
xchg
repnz
xchg
adc
test
and
mov
xchg
sbb
or
pxor
xor
rcr
mov
mov
or
es
pop
sbb
mov
test
add
mov
call
cwde
call
and
call
dec
xchg
add
aas
adc
cmp
ds
or
daa
lahf
mov
test
cmp
jno
retf
mov
xchg
(bad)
and
push
hlt
xor
fs
retf
cmp
xchg
test
jne
and
pop
mov
popa
cmps
std
mov
mov
in
dec
and
pop
nop
clc
clc
mov
jmp
lods
test
inc
dec
and
outs
dec
lods
in
daa
mov
std
adc
add
and
aam
lods
adc
ins
retf
sbb
fwait
pop
dec
push
mov
fadd
jne
pop
sub
les
lea
push
or
jmp
push
ss
mov
in
dec
lock
into
pop
test
(bad)
mov
pop
dec
(bad)
mov
add
pop
ror
push
push
fsubr
dec
pop
dec
outs
fs
inc
ins
ins
outs
arpl
push
imul
xor
outs
add
test
push
sbb
push
or
inc
sub
stos
mov
mov
loope
std
cmp
and
dec
test
add
adc
inc
or
loopne
js
shr
cmp
sub
aad
inc
es
shr
dec
cld
inc
or
push
fidiv
ss
cmp
adc
push
shl
mov
mov
add
nop
mov
jb
and
fadd
pop
loopne
loop
push
cmp
jle
mov
cld
xchg
test
lods
pop
inc
jmp
adc
or
push
or
ja
mov
mov
out
pusha
mov
dec
cld
push
ins
ja
pusha
test
mov
mov
lea
aaa
add
dec
adc
shr
jl
and
dec
inc
sbb
and
dec
add
rol
test
mov
loope
sti
add
jmp
push
inc
jmp
adc
pop
shr
test
imul
mov
push
xlat
jl
or
pop
mov
int
aam
js
cmp
add
nop
shl
mov
outs
adc
(bad)
imul
pop
dec
add
jg
and
sbb
rol
adc
inc
and
loop
es
jbe
xchg
fs
in
xchg
(bad)
rcl
jge
cmp
add
rol
fild
adc
mov
mov
std
ja
mov
dec
fld
push
add
mov
in
push
lea
sbb
xor
or
or
jge
xor
push
pop
inc
shr
ror
jbe
lock
pop
ds
shl
and
call
or
(bad)
ret
or
aas
pop
or
in
retf
xor
dec
dec
cdq
lea
jne
retf
pop
xor
retf
dec
adc
div
mov
mov
lods
bound
xor
push
(bad)
sub
dec
pop
mov
mov
or
mov
outs
sub
and
pop
fistp
or
and
xchg
out
in
sub
adc
pop
mov
jb
pop
cs
mov
mov
xor
cmp
xchg
retf
in
inc
dec
dec
push
push
jb
pop
cs
pop
pusha
fs
retf
in
ins
jo
js
jb
pop
jl
test
mov
in
mov
mov
mov
mov
jb
enter
jb
pop
cs
loopne
cs
retf
in
in
lock
clc
jb
mov
add
cs
retf
in
adc
sbb
jb
pop
and
sub
cs
retf
xor
cmp
retf
in
mov
mov
pop
pop
pusha
fs
retf
in
push
jb
pop
cs
test
mov
jb
pop
mov
cs
retf
mov
mov
jb
(bad)
enter
pop
cs
aam
fsub
in
mov
mov
mov
xchg
retf
in
mov
mov
in
mov
mov
cs
retf
mov
mov
mov
in
mov
pop
movd
int3
mov
mov
mov
in
mov
in
in
mov
cld
retf
in
jecxz
mov
mov
mov
pop
cs
mov
mov
mov
retf
in
mov
mov
mov
mov
mov
mov
dec
push
push
pop
xchg
retf
in
pop
pusha
fs
cs
js
cs
retf
in
test
mov
mov
movs
test
mov
retf
in
mov
mov
int3
rcl
fcom
loopne
call
das
add
in
mov
mov
mov
retf
in
mov
mov
mov
retf
in
mov
retf
in
mov
xchg
retf
in
add
mov
mov
xchg
retf
in
mov
jb
pop
mov
cs
retf
mov
retf
in
mov
mov
mov
fbstp
or
jb
xchg
cwde
pushf
mov
movs
test
mov
xchg
retf
in
mov
jb
pop
cs
rcl
fsubr
xchg
retf
in
loopne
call
pop
lock
clc
cld
retf
in
loope
mov
mov
mov
retf
in
mov
jb
pop
cs
xchg
retf
in
mov
jb
pop
mov
cs
retf
mov
retf
in
mov
mov
mov
retf
in
mov
jb
pop
cs
xchg
retf
in
mov
jb
pop
mov
cs
retf
mov
retf
in
mov
pop
mov
xchg
mov
xchg
retf
in
mov
in
stc
or
in
lock
xchg
pop
das
xchg
clc
cld
add
mov
mov
in
mov
jb
pop
mov
jb
pop
cs
dec
dec
push
jge
into
in
pop
out
test
mov
mov
mov
outs
ror
add
and
push
mov
mov
ins
popa
outs
and
sub
sub
pusha
ins
in
push
addr16
xor
and
push
jo
fnstcw
adc
add
pop
out
outs
outs
int
adc
xchg
inc
push
push
mov
dec
add
fmul
mov
add
sbb
shr
and
cmps
push
nop
and
dec
add
inc
pusha
and
mov
nop
push
dec
sub
mov
test
(bad)
idiv
push
inc
aas
adc
inc
add
std
aaa
jae
das
add
pop
add
les
fistp
cmp
add
xchg
push
add
pop
inc
test
dec
add
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
xchg
push
push
adc
dec
test
dec
xor
adc
inc
mov
in
add
std
dec
push
fdivr
jg
jmp
daa
push
dec
push
push
dec
dec
cmp
push
dec
dec
dec
(bad)
(bad)
jg
or
add
add
add
and
push
push
dec
inc
dec
dec
inc
and
imul
imul
pop
add
inc
push
inc
dec
pop
dec
push
inc
pop
cs
outs
imul
inc
pop
add
aaa
sti
pop
add
pop
and
cs
add
dec
(bad)
std
sti
frstor
push
dec
dec
push
push
push
inc
inc
dec
and
push
fmul
(bad)
inc
inc
test
push
cmp
xor
xor
mov
inc
outs
(bad)
ins
pop
push
push
pop
inc
rcl
mov
dec
dec
jg
(bad)
outs
push
push
dec
pop
inc
dec
dec
push
dec
dec
inc
es
fs
popa
jb
dec
fdivrp
add
arpl
cmp
push
pop
push
push
inc
push
inc
pop
dec
imul
outs
jae
data16
dec
inc
push
and
popa
ins
gs
jb
and
je
mov
mov
clc
inc
push
pop
jbe
dec
outs
push
cmp
pop
in
xor
imul
jb
add
ins
pop
lock
imul
inc
dec
push
movq
sbb
xchg
inc
inc
inc
dec
push
dec
(bad)
dec
mov
sbb
pop
outs
and
push
das
das
outs
ja
ins
outs
scas
imul
cs
call
sbb
mov
jae
gs
push
cmp
xor
and
ins
ins
and
mov
xor
xor
das
sbb
sbb
adc
push
outs
mov
(bad)
jb
outs
je
gs
mov
add
retf
arpl
add
pop
arpl
arpl
iret
fcmovnb
in
dec
inc
das
lock
push
pop
sub
and
inc
xchg
(bad)
lock
in
jae
ins
sub
sub
outs
ins
fs
dec
dec
xor
dec
popa
imul
ins
push
test
lods
ss
xor
push
add
and
push
and
mov
pop
inc
outs
jp
or
lods
or
adc
fucomi
jnp
or
push
bound
or
inc
out
mov
addr16
adc
jp
inc
sbb
out
sbb
cs
inc
aaa
and
mov
shr
push
push
sbb
popa
bound
pop
fdiv
fiadd
cmp
dec
gs
adc
jle
cwde
inc
addr16
mov
and
cmp
cmp
arpl
pop
fwait
and
ins
inc
ret
and
js
sub
pop
arpl
imul
jne
jbe
and
or
ins
fwait
jmp
and
das
and
aas
xchg
mov
mov
inc
aam
test
push
lahf
ins
cmp
add
push
sbb
test
out
add
ins
sub
(bad)
lods
popa
or
es
pop
push
add
outs
push
mov
jne
sbb
pop
add
fnsave
pop
adc
cmc
(bad)
jg
push
or
scas
int
adc
leave
loop
add
add
rcl
inc
shl
add
jle
sti
(bad)
jg
test
or
add
out
test
mov
movs
inc
ds
jmp
(bad)
cmp
loop
jb
push
pop
pop
mov
stos
fs
adc
jns
(bad)
jmp
leave
shl
mov
pop
aad
jbe
xor
add
mov
push
jmp
bnd
lds
cmova
std
adc
mov
add
shr
push
jg
movhps
(bad)
ds
jb
cmp
xor
add
fcomip
pop
mov
inc
push
test
mov
sub
add
pop
js
ret
pop
hlt
cld
pop
jnp
in
pop
and
pop
test
pop
fdivr
mov
fsub
xchg
xlat
pop
adc
movs
mov
popf
pop
enter
les
cmp
scas
ja
pop
hlt
call
adc
(bad)
cmps
and
js
dec
addr16
mov
sbb
pop
lock
fisttp
add
test
aas
jae
mov
enter
xchg
pop
loopne
jge
mov
xlat
rcr
int3
xor
pop
mov
pop
mov
cs
mov
movs
pop
loopne
cs
mov
in
mov
mov
outs
js
je
jecxz
pop
ret
jo
dec
xchg
sahf
popa
mov
das
cmp
pop
and
imul
das
nop
inc
or
(bad)
aaa
mov
imul
rcl
pop
pusha
stos
pop
loopne
pop
inc
lock
cmps
jne
add
sbb
adc
pop
mov
pop
and
rol
in
scas
sbb
add
repnz
stos
inc
les
div
shl
dec
shl
add
mov
repnz
dec
inc
add
adc
outs
shl
out
test
or
fist
(bad)
xchg
in
ud1
(bad)
aam
cs
or
enter
nop
dec
sar
pop
mov
lods
or
pop
movs
cs
pushf
aaa
cwde
xchg
jbe
(bad)
xlat
pop
nop
dec
mov
mov
sbb
dec
(bad)
jl
call
das
and
mov
(bad)
adc
mov
aas
sbb
das
cwde
pop
rcl
in
dec
loopne
sbb
leave
and
leave
and
mov
xchg
pop
jb
aam
call
sbb
sbb
mov
aaa
xchg
push
pushf
lea
(bad)
jg
push
jg
fstp
dec
jbe
and
or
add
pop
mov
add
aaa
xchg
or
add
pop
cmps
dec
push
lahf
jae
mov
mov
push
lods
add
adc
fadd
cld
lahf
clc
push
sub
adc
fcomp
pavgb
sbb
pop
push
pop
mov
inc
test
fstp
dec
add
mov
cmc
and
add
and
push
cmp
jle
add
and
mov
push
test
inc
fisubr
cmp
dec
push
test
(bad)
movs
pop
(bad)
int
push
call
mov
ins
scas
imul
push
enter
pop
dec
adc
inc
(bad)
cwde
xchg
inc
or
push
dec
lods
ss
push
add
xchg
push
in
inc
lods
push
or
sti
call
cwde
push
mov
xor
add
fisub
or
or
jmp
retf
cmp
sub
cs
mov
lock
dec
ret
lds
push
scas
ins
pop
pop
mov
loopne
sahf
fisttp
js
push
rcr
cld
mov
push
mov
push
test
cs
push
rcl
(bad)
push
dec
movs
push
out
pop
inc
outs
push
lods
enter
ins
push
inc
jecxz
out
or
cmp
test
mov
rcr
push
jp
clc
pop
pop
inc
jo
ins
imul
stc
aas
or
clc
ins
cmp
jmp
add
or
outs
gs
pop
cld
add
inc
push
jnp
cdq
hlt
bound
xor
adc
dec
adc
imul
add
add
add
jae
fist
gs
or
lds
js
xor
loope
add
je
push
jb
inc
addr16
or
lods
mov
stc
inc
outs
arpl
fwait
sub
outs
push
jle
adc
(bad)
cmp
inc
adc
add
ins
or
dec
push
aad
sub
in
sbb
jnp
dec
or
adc
gs
xlat
add
adc
call
adc
call
add
shl
cmp
sub
ds
jg
and
dec
xor
push
dec
inc
inc
push
dec
inc
pop
push
enter
or
pop
inc
inc
dec
dec
inc
push
pop
push
and
dec
dec
popa
jbe
jl
inc
mov
mov
imul
daa
adc
or
iret
adc
or
mov
gs
push
cmp
push
and
push
mov
add
mov
fcom
lock
nop
nop
mov
xor
jl
push
and
into
inc
sbb
jge
repnz
loopne
inc
clc
outs
js
mov
hlt
xchg
mov
fsubr
in
aas
(bad)
aam
inc
imul
pop
inc
pushf
and
pop
fnstcw
adc
inc
push
push
pusha
push
cld
push
push
clc
sbb
xchg
xchg
arpl
jae
pusha
movs
or
dec
inc
fwait
nop
adc
pop
test
pushf
xchg
pop
rcl
call
test
pop
lods
adc
loopne
push
ins
sti
push
xchg
adc
nop
adc
adc
inc
push
mov
mov
push
nop
add
lock
dec
mov
push
ds
cmps
in
dec
int3
or
adc
pop
jbe
dec
push
mov
out
call
sbb
je
inc
cwde
cmp
add
and
mov
add
pop
shr
add
mov
pop
cwde
add
js
cmps
cmp
out
add
adc
and
rcr
dec
or
dec
enter
pop
mov
push
aas
sar
inc
les
loopne
and
pop
hlt
sti
inc
inc
inc
cld
push
(bad)
or
fdivr
adc
pusha
cmp
jnp
out
inc
and
es
pusha
inc
ds
add
nop
push
jb
xlat
sbb
fisttp
mov
inc
inc
(bad)
loopne
dec
(bad)
sbb
push
push
inc
xchg
push
es
jo
test
loopne
in
rcl
pop
mov
fwait
loopne
mov
pop
mov
cmp
in
je
push
jo
xchg
loopne
add
mov
nop
push
sub
dec
enter
ins
xor
ds
mov
mov
inc
les
inc
mov
push
ss
dec
outs
dec
test
adc
xchg
inc
inc
jo
cmp
xchg
jbe
nop
cmp
pop
sub
dec
loopne
inc
and
ret
inc
jle
cmps
inc
pop
in
inc
inc
mov
aas
inc
lock
test
inc
pop
adc
pop
outs
mov
push
aam
and
inc
ins
(bad)
and
hlt
cmp
inc
(bad)
aam
push
sub
sbb
rol
push
push
jae
bound
sub
fdiv
sbb
clc
add
jl
nop
adc
push
jge
cld
xchg
pushf
xor
adc
(bad)
data16
pop
push
xor
mov
mov
or
mov
es
sub
je
add
cs
mov
mov
add
das
nop
loopne
mov
sub
sub
inc
fimul
add
invd
mov
mov
(bad)
call
call
inc
mov
wrmsr
inc
sub
es
mov
adc
inc
inc
repnz
fwait
(bad)
pushf
inc
dec
sbb
xchg
into
rol
add
pop
add
push
dec
test
stos
stos
and
aas
push
push
inc
dec
push
dec
dec
dec
inc
inc
pop
xchg
push
pop
mov
cmp
call
mov
sbb
loop
pop
pop
aam
dec
jl
pop
aam
xchg
test
xor
in
jle
sbb
imul
in
sbb
je
push
push
push
push
dec
retf
div
mov
sbb
pop
dec
pop
xor
sbb
xor
dec
adc
js
dec
out
adc
dec
mov
push
adc
stos
cmp
inc
sub
pop
adc
pop
push
inc
dec
push
push
sub
xor
and
es
shl
jno
gs
push
jbe
sub
popa
bound
jb
jo
jae
outs
and
or
aam
and
dec
lea
mov
test
add
or
inc
vmovapd
xchg
aaa
adc
or
push
mov
pop
fdivr
movs
out
in
ins
leave
iret
pop
or
mov
daa
push
(bad)
xor
(bad)
jb
jmp
iret
pop
fs
mov
pop
je
add
add
add
mov
pop
lea
add
pop
pop
pop
push
inc
jg
retf
adc
icebp
imul
fs
cld
gs
xchg
test
xchg
data16
push
and
repnz
cmp
pusha
addr16
mov
test
into
push
cmp
push
in
inc
xor
cmp
push
push
cmp
pop
or
sub
adc
sti
mov
and
outs
data16
or
jo
imul
outs
push
stos
push
sub
and
mov
add
adc
jae
outs
xor
in
(bad)
gs
fs
push
xor
sbb
popaw
jp
ins
call
mov
imul
push
add
mov
addps
das
das
xor
dec
inc
xor
retf
xor
arpl
mov
add
and
fs
pop
and
mov
fs
cwde
ins
and
or
popa
sbb
pusha
or
mov
jns
sar
sub
sbb
and
dec
push
push
dec
inc
dec
inc
dec
dec
push
pop
inc
pusha
mov
ss
dec
lock
(bad)
sahf
pop
fs
dec
dec
push
add
dec
inc
outs
aaa
hlt
std
adc
das
inc
gs
popa
jae
outs
dec
arpl
imul
mov
in
bound
sub
or
sub
das
push
xchg
dec
cs
cmp
pop
pop
xor
out
iret
adc
pop
xchg
scas
cmps
push
dec
add
add
add
xor
pop
jg
xor
or
mov
xor
pop
pop
xchg
pop
jb
cmp
int3
add
and
leave
and
push
jbe
pop
jb
dec
lahf
dec
aaa
and
pop
inc
cmp
pop
jb
cmp
sub
jbe
and
jb
fcmovb
pop
sbb
sbb
adc
and
or
add
dec
inc
add
(bad)
mov
jb
in
call
in
(bad)
mov
aam
rcl
int3
in
dec
cs
dec
cs
cs
mov
pop
ret
(bad)
cmps
outs
(bad)
and
pop
add
pop
add
jb
and
push
test
xchg
dec
jl
jge
jo
and
(bad)
jle
or
add
dec
mov
add
outs
or
add
aam
lahf
lock
ins
sar
add
pop
adc
dec
add
push
push
adc
adc
xchg
test
push
repnz
xchg
xchg
mov
mov
(bad)
xchg
mov
stos
sbb
stos
pop
adc
in
inc
adc
scas
add
or
sub
jae
sub
add
sbb
jae
xor
pop
adc
hlt
outs
arpl
popa
ins
push
inc
mov
sbb
pop
mov
xor
sub
and
fs
fdivr
and
jne
jae
outs
or
inc
stos
xor
sub
xchg
popa
jnp
or
inc
push
les
gs
sub
or
pop
adc
ds
add
and
dec
xor
xor
inc
xor
xor
xor
ss
(bad)
push
ss
xor
inc
xor
xor
inc
jge
dec
retf
add
jne
dec
adc
cdq
pop
jne
jns
mov
push
jmp
test
mov
inc
add
sub
adc
pop
jne
outs
add
jmp
push
mov
outs
inc
fld
push
ja
mov
stos
loop
add
adc
or
push
and
and
mov
pop
push
fadd
or
mov
add
lods
dec
or
imul
inc
sbb
add
xchg
dec
jl
cmp
in
mov
xlat
inc
mov
stc
dec
cmp
cmp
into
inc
push
push
pop
imul
sbb
and
add
test
inc
mov
add
aas
push
push
and
pop
mov
dec
movs
push
adc
add
mov
push
std
ins
and
pop
add
adc
loope
mov
or
les
add
add
mov
fidiv
adc
and
stos
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
stos
stos
and
out
inc
adc
aas
add
cmp
or
add
add
add
jg
movs
pushf
gs
push
jns
cmp
popa
xchg
mov
mov
das
js
ja
sub
popf
int3
sub
das
movs
or
fs
push
sub
stos
stos
sub
push
inc
push
xchg
test
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
mov
fs
add
mov
inc
dec
test
pop
stos
jbe
add
test
mov
cmp
cmovo
dec
pop
pop
push
adc
jbe
out
and
adc
dec
daa
add
lods
aaa
add
push
aas
(bad)
jnp
mov
cmp
cmp
sbb
add
add
add
push
(bad)
in
(bad)
inc
or
or
or
push
movups
adc
adc
push
pop
sbb
imul
sbb
push
pop
and
(bad)
jmp
and
and
es
sub
sub
sub
cs
xor
cmc
add
(bad)
out
mov
inc
inc
dec
dec
dec
dec
dec
dec
dec
push
push
push
(bad)
(bad)
(bad)
call
push
push
push
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
into
pusha
pusha
and
jns
sub
loopne
ret
and
and
imul
sub
inc
cmp
add
repz
sti
push
imul
xchg
add
ins
jo
sub
add
in
fwait
gs
dec
pop
add
or
inc
push
dec
inc
dec
xor
cs
cli
in
inc
dec
dec
cmp
outs
ja
xor
add
aas
retf
mov
jb
sub
bound
imul
mov
mov
adc
push
add
sbb
jbe
and
xor
daa
mov
cmp
push
sub
arpl
pop
push
adc
push
xor
pop
imul
and
cs
sub
lods
cmp
add
sub
xchg
dec
scas
jge
xor
lods
jge
ficom
inc
sbb
xlat
mov
call
xchg
mov
jo
xchg
and
(bad)
out
loop
xor
cmp
cmp
pop
jae
ss
pop
fadd
pop
ret
test
lahf
and
dec
sbb
(bad)
and
add
add
push
hlt
(bad)
ins
jnp
inc
lds
call
cmps
jb
retf
dec
dec
arpl
ins
pop
inc
or
fild
nop
mov
pop
push
outs
(bad)
jne
rol
aas
inc
fmul
ss
add
push
sar
jp
das
outs
sub
cmp
arpl
cmp
and
popa
clts
add
js
outs
and
jae
jb
fs
mov
das
push
and
sub
mov
pop
add
or
inc
mov
ins
and
arpl
scas
add
or
mov
mov
add
in
dec
pop
push
jns
outs
add
hlt
inc
sub
adc
add
ja
mov
add
ret
into
push
sti
xchg
in
inc
mov
add
push
inc
add
inc
mov
sbb
push
js
loopne
or
add
mov
addr16
and
clc
or
dec
call
fidivr
cmp
cmp
out
sub
lods
das
sub
adc
mov
iret
and
add
rcl
inc
out
mov
fs
je
pop
add
push
add
daa
in
in
mov
dec
in
in
add
dec
sub
dec
in
in
dec
out
dec
jo
dec
sub
loopne
xchg
out
dec
fild
inc
fsubr
add
inc
cmp
les
mov
or
pop
leave
loopne
daa
sub
jne
or
xchg
jle
add
add
jg
(bad)
call
hlt
dec
add
xor
popaw
popa
aaa
bound
aaa
popa
xor
(bad)
(bad)
push
xor
arpl
xor
add
push
dec
inc
inc
dec
gs
push
ja
inc
push
dec
push
(bad)
(bad)
in
inc
dec
jp
imul
inc
xor
popa
js
dec
inc
ins
ja
push
push
jne
inc
(bad)
(bad)
(bad)
inc
push
imul
push
push
push
push
addr16
cmp
push
ins
push
xor
gs
xor
(bad)
(bad)
jmp
arpl
dec
imul
inc
inc
push
addr16
push
addr16
push
inc
push
dec
push
push
idiv
inc
push
xor
push
js
xchg
js
dec
ja
push
inc
xor
inc
push
dec
cwde
push
(bad)
jg
push
bound
outs
xor
dec
xor
fs
push
jne
push
cmp
push
dec
inc
xor
mov
push
push
pop
jbe
push
push
ja
push
push
in
mov
inc
dec
pop
push
cmp
js
inc
pop
ins
js
inc
push
outs
dec
pop
ja
inc
xor
push
add
push
inc
push
js
outs
inc
push
dec
pop
inc
xchg
pop
pushf
pop
(bad)
inc
push
ins
xor
dec
xor
jb
inc
je
dec
push
pop
xor
clc
(bad)
dec
dec
inc
dec
dec
push
jns
pop
inc
push
jae
dec
push
js
jp
je
ror
ins
jp
nop
push
inc
ja
in
jg
ja
sbb
jns
xor
addr16
mov
push
(bad)
(bad)
push
xor
bound
cmp
or
sti
dec
fidivr
sbb
cmp
popa
out
(bad)
(bad)
(bad)
mov
add
shl
into
fadd
(bad)
sbb
and
(bad)
dec
or
(bad)
in
pop
xor
int
pop
xchg
gs
inc
ss
popa
stos
sbb
lods
outs
(bad)
(bad)
(bad)
dec
pop
push
pop
add
mov
mov
nop
push
int3
aam
(bad)
xor
test
(bad)
(bad)
dec
or
int
dec
pop
cmps
xlat
dec
fs
sbb
pop
mov
xchg
xchg
out
sbb
or
adc
(bad)
(bad)
call
aas
sti
leave
lea
add
adc
(bad)
cld
movs
inc
jecxz
pop
bound
cld
(bad)
(bad)
(bad)
jmp
rcr
ror
dec
das
sahf
push
or
pop
mov
inc
jb
sub
rcr
(bad)
(bad)
call
jl
mov
outs
mov
and
ret
dec
fdiv
arpl
push
call
int3
sbb
in
int3
sub
jb
jno
mov
outs
in
(bad)
(bad)
(bad)
(bad)
mov
imul
loopne
movs
lods
push
into
sub
jl
cld
xor
push
mov
jb
dec
shl
setge
jg
and
cwde
adc
jmp
sub
mov
(bad)
(bad)
dec
(bad)
mov
push
dec
(bad)
test
sbb
pop
mov
cmc
retf
adc
and
jb
and
mov
(bad)
(bad)
fistp
imul
jns
pop
(bad)
leave
mov
xchg
retf
stos
mov
ss
adc
cwde
scas
mov
mov
in
bnd
xor
popa
test
cmp
fwait
xchg
(bad)
(bad)
(bad)
inc
xor
mov
pusha
mov
test
stos
xchg
pop
pop
sar
outs
cs
or
add
jmp
fcmovnbe
nop
adc
jae
imul
adc
push
sub
(bad)
les
jb
(bad)
(bad)
jmp
bsf
nop
stc
sti
lods
unpckhps
mov
jns
aaa
fst
mov
int
fcmovb
and
rcr
outs
mov
int3
xchg
das
push
lock
into
xchg
mov
sbb
retf
(bad)
call
in
pop
dec
int3
leave
push
cmp
mov
xlat
loopne
scas
jo
push
sbb
inc
push
add
mov
int3
adc
xchg
mov
ins
inc
sbb
pop
in
mov
sbb
sar
(bad)
(bad)
jg
xor
inc
lock
movs
add
test
nop
popa
retf
(bad)
(bad)
jmp
call
hlt
ins
(bad)
aad
xlat
pop
stos
cwde
add
cmp
pop
pop
jl
jae
in
push
add
cmp
stc
test
icebp
(bad)
jbe
dec
movs
sbb
sbb
cmp
mov
jg
jmp
push
fs
mov
(bad)
(bad)
repz
arpl
mov
xchg
sub
push
arpl
and
test
or
loopne
cmps
sbb
nop
(bad)
mov
(bad)
(bad)
(bad)
push
dec
enter
ins
jns
mov
into
jge
cmc
xchg
push
test
and
dec
in
scas
fdiv
dec
lock
in
je
xchg
fcom
in
movs
sti
test
retf
(bad)
(bad)
push
in
xchg
push
jbe
sbb
and
neg
and
sub
mov
fsubr
(bad)
call
pop
icebp
pop
retf
dec
mov
dec
aam
fcmove
inc
std
fwait
ins
xor
or
inc
in
sahf
(bad)
(bad)
(bad)
push
xor
in
hlt
in
inc
and
sbb
out
mov
stc
in
nop
in
rcl
ror
test
(bad)
(bad)
jmp
add
mov
gs
jne
and
mov
pop
outs
into
jmp
jmp
(bad)
cmp
jne
mov
stos
mov
and
push
pop
inc
ret
out
sub
(bad)
in
dec
js
add
mov
sbb
jne
mov
add
cmp
jg
xchg
cmps
sti
fdecstp
jae
(bad)
fcomip
sti
clc
stc
push
fisubr
pop
cmp
xchg
imul
jg
mov
repz
(bad)
(bad)
push
jecxz
cwde
sub
mov
loop
mul
aaa
shl
or
ret
jne
(bad)
(bad)
call
daa
pushf
push
or
jecxz
lock
push
(bad)
jmp
sub
lock
jmp
jb
pop
call
and
xchg
mov
(bad)
push
mov
push
sub
sar
out
jmp
jae
push
(bad)
call
movs
push
push
retf
xor
sub
add
fnsave
sub
cmc
add
out
cmps
push
inc
stos
inc
movs
xor
mov
call
loopne
xchg
pop
mov
dec
xor
xchg
shr
cmp
xor
loop
(bad)
jg
jno
inc
jb
sar
sbb
mov
loop
cmps
push
xchg
mov
in
(bad)
(bad)
jmp
jecxz
or
dec
lods
inc
adc
out
enter
push
loop
adc
cmp
mov
out
(bad)
(bad)
(bad)
call
inc
cwde
cmp
cmp
dec
jnp
(bad)
stos
xchg
lods
ret
loop
idiv
(bad)
(bad)
inc
stos
loop
in
jp
inc
sub
mov
test
fcompp
mov
mov
sbb
mov
xchg
loopne
adc
mov
addr16
repz
rcr
adc
inc
rol
push
test
cld
pop
or
arpl
and
(bad)
(bad)
(bad)
jg
lods
sbb
dec
xor
mov
ret
and
cli
xchg
fdiv
xchg
mov
pop
cmp
sub
stos
hlt
bnd
sbb
mov
jbe
(bad)
(bad)
(bad)
jmp
sbb
addr16
jmp
popa
or
push
cld
mov
adc
pop
stc
mov
(bad)
call
fdiv
hlt
push
jns
xlat
arpl
sub
loop
pop
pop
jmp
xchg
out
jp
(bad)
(bad)
(bad)
inc
jmp
mov
inc
daa
leave
test
hlt
in
sub
imul
or
cmp
jmp
movs
push
sbb
pop
ret
test
xchg
aad
stc
inc
cld
pop
adc
(bad)
call
repnz
loopne
mov
pop
in
dec
jnp
sti
je
clc
sar
pop
test
push
adc
icebp
lds
ja
leave
dec
jmp
cs
push
jo
mov
dec
xor
movs
(bad)
push
std
(bad)
push
mov
aam
dec
arpl
test
mov
sar
add
aaa
test
and
mov
das
fstp
aam
push
push
add
inc
jmp
jae
or
aaa
bound
sub
jmp
ja
inc
pop
cmovle
aaa
gs
(bad)
(bad)
(bad)
call
inc
adc
pop
dec
or
or
dec
pop
pop
pop
sbb
add
sbb
push
sbb
(bad)
jg
popa
or
dec
inc
sub
push
inc
inc
add
push
pop
or
fist
inc
pusha
push
cs
(bad)
(bad)
call
adc
pop
pop
jns
inc
push
arpl
add
or
or
pop
sbb
push
push
adc
pop
inc
(bad)
pop
pop
pop
pop
or
pop
pop
inc
pop
pop
inc
pop
or
push
push
dec
pop
sbb
inc
adc
(bad)
(bad)
push
or
adc
xor
jb
adc
adc
add
push
push
push
push
pop
push
pop
dec
push
push
add
add
add
push
add
push
pop
sbb
push
pop
add
mov
push
inc
pop
inc
inc
inc
pop
inc
adc
adc
xor
and
mov
jg
or
inc
adc
sbb
inc
push
sbb
dec
pop
inc
loop
pop
or
dec
push
pop
push
loope
(bad)
call
sbb
add
or
add
pop
adc
adc
inc
or
add
push
dec
mov
mov
mov
add
or
push
cld
inc
adc
pop
pop
inc
pop
sbb
inc
jl
(bad)
pop
adc
sbb
das
js
dec
movlps
add
push
add
pop
push
dec
push
sbb
idiv
in
pop
adc
pop
inc
pop
adc
adc
push
dec
pop
inc
push
pop
pop
or
(bad)
(bad)
push
push
dec
add
inc
sbb
push
sbb
aaa
sbb
pop
xor
ret
or
push
push
xor
add
pop
or
pop
push
mov
pop
push
pop
adc
push
add
push
dec
jmp
jle
or
sbb
inc
push
push
inc
sbb
inc
das
cs
js
xchg
mov
push
adc
mov
adc
(bad)
inc
syscall
pop
push
pop
dec
jno
jae
push
add
push
add
add
push
or
dec
jg
and
jae
cmp
push
pop
and
inc
(bad)
sub
pop
jo
push
adc
loop
sbb
adc
or
add
and
push
and
and
and
je
push
add
push
pop
(bad)
mov
cwde
push
pop
add
inc
adc
jle
mov
ds
or
push
or
push
je
add
pop
jno
pop
and
push
jne
or
adc
push
sbb
push
pop
or
inc
dec
pop
inc
jg
das
clc
pop
and
push
add
inc
xor
adc
xor
pop
or
(bad)
(bad)
inc
or
jno
push
inc
dec
jp
add
pop
adc
adc
or
or
cs
daa
add
cld
push
cld
inc
pop
adc
push
je
or
inc
push
xor
push
pop
pop
xchg
or
jg
call
and
dec
pop
adc
add
je
push
pop
push
add
push
add
sti
sbb
daa
push
add
sbb
push
int3
add
push
cld
mov
xor
pop
jle
adc
add
inc
js
or
push
dec
push
and
push
push
jno
jne
push
push
add
jmp
jle
push
or
jae
jne
jne
pop
pop
add
and
push
pop
mov
(bad)
cwde
pop
jae
adc
inc
or
pop
pop
pop
ds
adc
je
mov
and
adc
dec
or
or
push
dec
pop
pop
nop
cli
xchg
push
inc
adc
or
inc
fwait
mov
outs
clc
aaa
cmp
add
push
bound
mov
xor
aaa
(bad)
jmp
xor
bound
xor
xor
pusha
pusha
xor
xor
xor
sub
and
xor
popa
jl
arpl
out
jmp
xor
push
imul
ins
aas
jg
xor
xor
std
lahf
neg
popa
xor
imul
cmp
imul
imul
jmp
sbb
cmp
aas
iret
cmps
arpl
xor
jne
(bad)
mov
jo
popf
cmps
(bad)
int
xor
xor
test
pushaw
cmp
xor
aaa
(bad)
pop
mov
dec
xor
ss
ins
xor
xor
idiv
xor
gs
fld
das
ss
cmp
push
and
(bad)
(bad)
(bad)
jmp
jne
hlt
loop
sub
inc
mov
xor
xchg
sub
adc
mov
push
push
adc
dec
rcl
jb
rcl
inc
in
push
jbe
sahf
les
loopne
hlt
push
mov
inc
cmps
les
push
pop
and
in
xor
cmp
(bad)
(bad)
xor
gs
and
inc
jae
adc
jbe
push
lock
jecxz
mov
(bad)
jmp
fs
adc
xlat
cmps
in
jb
push
and
push
jnp
and
and
(bad)
(bad)
cmp
icebp
inc
inc
adc
inc
ins
aam
adc
inc
cld
mov
jo
push
xor
dec
pop
into
arpl
sub
dec
(bad)
dec
sar
push
fmul
jg
lock
loopne
jmp
(bad)
or
outs
lea
push
jnp
inc
add
aad
push
(bad)
(bad)
call
retf
and
and
mov
add
jnp
cmps
push
lahf
dec
(bad)
(bad)
(bad)
jmp
std
mov
add
popf
cwde
pushf
out
clc
(bad)
add
mov
out
daa
gs
(bad)
(bad)
call
add
jge
pop
xor
inc
xchg
adc
and
sub
or
pusha
hlt
jmp
(bad)
bound
les
add
push
mov
call
ins
(bad)
(bad)
call
stos
and
dec
mov
dec
pcmpeqw
xchg
(bad)
push
hlt
or
jl
mov
(bad)
(bad)
mov
cmp
ficom
and
inc
into
cmp
mov
mov
(bad)
(bad)
jmp
mov
loopne
push
int3
sub
mov
mov
int
xchg
je
inc
(bad)
(bad)
(bad)
jmp
sub
outs
and
mov
and
xchg
sbb
or
add
(bad)
(bad)
call
fdivr
xchg
cmp
push
mov
ffreep
push
fsub
mov
push
add
jmp
xor
and
jae
mov
ja
movs
(bad)
repz
cmc
movs
mov
mov
leave
and
out
xchg
ds
(bad)
(bad)
push
ins
stc
adc
adc
es
push
fst
hlt
sub
rcr
add
gs
or
mov
pop
mov
mov
les
lahf
mov
mov
mov
(bad)
(bad)
call
sbb
popa
mov
jno
add
push
int
sbb
xor
xchg
xor
xchg
lock
das
neg
daa
sbb
js
xchg
jae
mov
(bad)
jg
int3
imul
push
xor
(bad)
arpl
push
xor
(bad)
dec
push
xchg
jae
xchg
add
xor
retf
cwde
arpl
je
jecxz
test
push
psubw
stos
cld
jno
in
(bad)
(bad)
(bad)
mov
adc
pop
into
push
mov
jecxz
or
inc
push
or
lods
jne
adc
les
pop
xchg
enter
push
les
mov
je
cwde
jmp
iret
push
xor
jg
(bad)
and
xor
inc
repnz
push
ret
jno
sub
inc
retf
(bad)
pop
dec
fsubp
cdq
out
ds
xor
cld
pop
stc
sub
movs
push
ja
cmp
loop
mov
aaa
jb
mov
outs
and
(bad)
(bad)
(bad)
jp
mov
test
dec
xor
sub
ins
push
out
xchg
cmp
call
test
(bad)
(bad)
jmp
mov
inc
mov
or
dec
mov
iret
push
and
dec
call
(bad)
(bad)
(bad)
inc
loopne
int3
push
sub
sbb
cli
and
push
int3
and
mov
call
or
jae
int
xor
jecxz
test
jmp
cld
fdiv
sbb
xchg
(bad)
adc
xor
loop
inc
sub
icebp
call
sahf
js
mov
aam
inc
inc
sbb
inc
push
pusha
dec
pop
(bad)
mov
scas
cli
push
mov
loope
adc
mov
(bad)
(bad)
(bad)
dec
retf
pop
jmp
sub
loope
or
cmp
pop
movs
bound
nop
popa
call
mov
shrd
fcmovbe
pop
sub
mov
(bad)
jmp
or
test
jne
stc
loop
clc
mov
pop
jg
inc
sbb
shl
sbb
leave
in
(bad)
(bad)
jmp
mov
mov
addr16
mov
(bad)
pop
pop
inc
cpuid
lds
pop
mov
clc
(bad)
(bad)
call
xchg
hlt
sub
cli
mov
bnd
jo
dec
sbb
(bad)
out
clc
scas
dec
lods
pop
sahf
xor
ret
out
fistp
mov
push
rol
sbb
repnz
and
nop
aas
shl
nop
scas
jge
and
pminub
retf
retf
(bad)
(bad)
(bad)
call
sub
outs
push
ins
and
push
add
arpl
cwde
or
sahf
jmp
in
or
cs
cmc
dec
mov
push
es
aam
or
cmp
(bad)
(bad)
(bad)
jg
sbb
adc
(bad)
in
pop
xor
or
adc
and
bswap
call
dec
mov
movzx
inc
mov
pushf
gs
adc
add
adc
hlt
adc
xchg
and
(bad)
(bad)
inc
mov
call
into
jb
and
ret
add
aas
add
(bad)
(bad)
(bad)
jmp
mov
call
call
sub
mov
xor
mov
dec
pop
lahf
sub
fcom
std
(bad)
call
cdq
(bad)
xor
dec
fdiv
mov
lock
or
sub
(bad)
(bad)
inc
mov
data16
jo
hlt
shl
(bad)
icebp
xor
pop
dec
out
xchg
fstp
cmp
(bad)
(bad)
push
jmp
fstp
in
lods
jnp
pop
jl
(bad)
jmp
ins
ins
shl
mov
mov
(bad)
(bad)
jmp
adc
and
test
jl
cs
aad
pusha
(bad)
das
repnz
(bad)
jmp
in
in
std
movs
cmps
sub
sub
loopne
stc
mov
fwait
add
lods
in
out
aaa
imul
(bad)
(bad)
call
cmps
aad
scas
sbb
fucomip
outs
out
ret
jns
dec
fdivr
push
fcom
std
mov
(bad)
(bad)
inc
lods
jno
cs
outs
cmp
fdiv
(bad)
inc
cmp
imul
(bad)
(bad)
dec
jecxz
scas
mov
(bad)
cmp
ja
adc
fdivr
idiv
bound
push
and
mov
(bad)
(bad)
(bad)
call
stos
and
push
arpl
or
inc
test
add
mov
loope
call
(bad)
(bad)
(bad)
push
inc
mov
add
push
les
xchg
arpl
aad
or
inc
mov
imul
in
(bad)
(bad)
call
add
fbstp
jle
adc
call
and
cld
test
(bad)
dec
jnp
call
dec
mov
out
retf
inc
mov
pop
lahf
dec
cld
fsubr
(bad)
rcl
(bad)
(bad)
call
and
push
push
js
jb
jae
adc
shr
les
test
xor
stos
jmp
jae
dec
call
mov
pop
imul
sbb
(bad)
call
int3
sti
adc
cmp
sbb
mov
jbe
pop
int
std
out
sbb
scas
or
(bad)
jmp
outs
dec
sub
pusha
push
jmp
add
ret
gs
les
xor
or
(bad)
(bad)
inc
call
adc
pop
daa
inc
je
cmp
jle
ja
inc
inc
ins
(bad)
(bad)
(bad)
(bad)
inc
iret
dec
loope
dec
dec
sub
and
loope
mov
push
fiadd
adc
call
idiv
(bad)
push
xchg
push
movs
arpl
jmp
shl
ret
or
cld
pop
inc
inc
ins
or
call
push
adc
es
and
std
pop
arpl
cmp
or
xchg
fwait
(bad)
jmp
mov
jle
sar
xor
imul
js
inc
jl
sar
(bad)
inc
shr
mov
in
ss
add
jmp
xor
inc
frstor
push
mov
popa
jnp
call
inc
cmp
xor
inc
gs
and
push
imul
sbb
mov
xor
enter
jo
retf
mov
(bad)
(bad)
jg
push
cmps
sti
outs
stc
outs
xor
xlat
repz
mov
(bad)
fldenv
lahf
repnz
int3
(bad)
(bad)
(bad)
jmp
ja
adc
or
sub
ins
mov
test
jmp
jbe
(bad)
(bad)
(bad)
(bad)
jp
out
sub
cld
pop
(bad)
lds
ss
pushf
retf
inc
bound
jo
aas
and
mov
or
adc
ins
or
into
fs
xchg
inc
dec
ret
(bad)
sbb
retf
outs
push
lods
outs
sar
(bad)
call
add
cmps
mov
ret
enter
das
enter
add
add
mov
inc
push
in
mov
(bad)
push
iret
popf
fidivr
mov
mov
sbb
(bad)
(bad)
dec
sahf
dec
or
cld
mov
push
stos
scas
sub
push
add
xchg
mov
adc
jmp
shr
test
outs
mov
sub
sar
mov
pushf
call
or
push
mov
or
cmp
mov
mov
inc
add
call
lea
push
shr
xor
pop
mov
push
mov
ss
(bad)
(bad)
jmp
xlat
test
jmp
fld
leave
inc
mov
movaps
sar
retf
push
(bad)
(bad)
(bad)
jmp
mov
fldcw
test
popf
jg
icebp
pop
pop
popf
lea
movs
inc
imul
(bad)
(bad)
(bad)
jmp
dec
add
in
je
cld
cwde
popa
sbb
xlat
cmc
aaa
mov
xchg
or
popf
(bad)
(bad)
(bad)
(bad)
call
repnz
push
gs
jle
xchg
and
adc
push
fcomp
seta
mov
or
(bad)
jmp
add
(bad)
sbb
mov
ins
sti
mov
(bad)
or
pop
repnz
add
or
sar
in
or
cld
xor
arpl
xchg
sbb
aas
sub
or
jmp
(bad)
and
cmc
repnz
sub
xor
scas
jmp
and
repnz
pusha
(bad)
(bad)
(bad)
inc
popf
jmp
test
dec
add
mov
pop
xchg
popf
mov
xchg
(bad)
(bad)
(bad)
jmp
xchg
sbb
push
(bad)
je
and
loop
out
fdivr
(bad)
aad
clc
jmp
(bad)
(bad)
(bad)
dec
enter
or
add
jmp
movs
std
lea
(bad)
jmp
push
mov
call
(bad)
add
jbe
cmp
(bad)
(bad)
(bad)
inc
dec
push
adc
fimul
jns
scas
fist
push
imul
lea
std
pop
push
stos
jecxz
cmp
jg
(bad)
js
shl
ja
int3
or
push
inc
imul
(bad)
(bad)
jg
push
sbb
(bad)
xor
stc
xchg
arpl
sub
jge
mov
pop
je
xor
shr
jne
jle
cmp
rol
stc
sbb
scas
mov
sub
(bad)
(bad)
(bad)
jns
mov
imul
push
xor
hlt
out
xchg
cmps
fadd
push
int
(bad)
(bad)
(bad)
mov
sbb
ror
mov
sbb
sub
stos
ja
fcomp
push
add
push
cs
shr
inc
(bad)
jmp
fcomip
call
mov
mov
xchg
mov
cmps
and
(bad)
(bad)
call
xchg
(bad)
inc
and
(bad)
cmp
cwde
std
jnp
ss
inc
enter
jg
add
in
mov
(bad)
jmp
cmp
push
mov
add
cmp
lods
mov
imul
(bad)
(bad)
(bad)
in
out
push
jecxz
cdq
xor
(bad)
push
fnstsw
mov
cmc
scas
in
push
dec
lods
neg
pop
(bad)
(bad)
(bad)
adc
loopne
scas
cmp
std
lods
mov
xlat
js
in
fimul
dec
sub
jbe
idiv
cmp
pop
test
das
lea
xchg
(bad)
int3
pop
(bad)
(bad)
(bad)
dec
or
sub
xchg
push
lea
repz
xchg
(bad)
mov
pop
xchg
(bad)
(bad)
(bad)
push
int
push
ins
adc
(bad)
and
and
inc
retf
daa
xchg
jle
jecxz
loop
and
in
das
cli
(bad)
in
adc
into
addr16
xchg
push
add
push
retf
in
adc
call
jno
(bad)
(bad)
jmp
bound
jmp
cmc
dec
cmp
int
movs
add
fnstsw
loopne
cli
inc
popf
add
xor
hlt
inc
xor
add
(bad)
(bad)
mov
into
mov
push
not
cmp
test
sub
mov
call
inc
xor
inc
jne
cmps
jne
dec
scas
cmp
xor
cli
test
fs
add
add
(bad)
call
aad
adc
in
xor
ds
sbb
cdq
pop
into
jae
xchg
sub
inc
xchg
(bad)
call
or
popaw
dec
inc
and
cmp
aam
push
es
movs
adc
(bad)
jg
jmp
ja
mov
sub
lds
js
add
mov
(bad)
(bad)
call
mov
xor
(bad)
int3
data16
xor
fs
ret
add
aaa
pop
not
por
sbb
jo
(bad)
(bad)
inc
sub
(bad)
mov
fisubr
fsubr
jb
lahf
mov
call
lock
(bad)
(bad)
inc
add
fs
mov
shl
sbb
and
mov
sbb
in
outs
jmp
jno
mov
enter
std
and
dec
ins
xor
(bad)
(bad)
(bad)
call
dec
and
out
scas
xchg
cmp
inc
jno
arpl
xor
xor
lods
cmps
nop
clc
xor
inc
(bad)
sbb
retf
(bad)
ret
mov
and
sbb
cmps
mov
sbb
cmps
and
push
ret
pop
sub
(bad)
(bad)
(bad)
jmp
sbb
out
pop
dec
xchg
add
inc
jae
inc
or
lds
pop
dec
xchg
call
(bad)
sbb
test
les
fs
jle
(bad)
(bad)
(bad)
inc
ret
pop
push
ror
jmp
pop
mov
mov
mov
lods
retf
lock
(bad)
(bad)
(bad)
jmp
ret
xchg
mov
jmp
inc
test
test
lods
movs
pop
push
pop
or
(bad)
(bad)
xchg
imul
adc
movs
addr16
adc
cmc
add
cmps
xchg
and
cli
(bad)
dec
(bad)
(bad)
dec
or
push
pop
mov
add
xor
mov
cs
(bad)
(bad)
(bad)
push
jg
js
push
xchg
xchg
push
js
ds
outs
xor
cmp
dec
dec
mov
(bad)
call
sub
(bad)
jmp
in
(bad)
out
mov
repz
mov
call
and
jecxz
mov
dec
sub
ds
in
sub
adc
jmp
add
or
xor
(bad)
loop
or
add
imul
mov
das
cli
in
sbb
leave
fs
pop
outs
aam
adc
lock
add
sub
out
sbb
(bad)
push
inc
mov
(bad)
cmp
popf
movs
jno
stc
cld
xchg
cmp
call
inc
mov
popf
sub
mov
dec
scas
nop
push
je
mov
and
outs
clc
call
jge
jge
mov
call
mov
ficom
add
(bad)
jg
mov
pop
loop
mov
jo
xchg
mov
cli
cmpxchg
(bad)
(bad)
call
fcomp
test
cmc
or
xchg
setnp
adc
in
fidivr
cmp
int3
dec
pop
mov
push
fistp
inc
mov
pop
push
mov
mov
add
jp
repz
cwde
cli
(bad)
(bad)
(bad)
(bad)
jge
push
and
dec
xchg
pop
xor
cmps
arpl
lods
dec
xor
pusha
cmps
fwait
adc
es
jbe
xchg
pop
icebp
(bad)
call
outs
and
pop
push
add
push
lods
push
dec
lods
loope
cmp
push
(bad)
(bad)
(bad)
(bad)
cmp
sahf
cdq
sub
or
retf
(bad)
fidiv
fild
scas
shr
adc
cmp
ins
mov
repz
sbb
test
xchg
repz
inc
ins
imul
cmps
inc
jge
lea
out
popa
stos
ja
repnz
push
(bad)
(bad)
(bad)
(bad)
jnp
pop
xchg
sbb
movs
pop
or
mov
fmul
fs
xchg
lods
sbb
(bad)
(bad)
call
and
addr16
(bad)
nop
jae
cs
mov
nop
push
movs
int
or
(bad)
(bad)
jmp
nop
aaa
adc
jb
(bad)
ss
inc
cmps
mov
and
xchg
fnstenv
stc
sub
(bad)
call
std
push
push
out
imul
pop
loop
sub
test
aam
bound
stc
(bad)
(bad)
(bad)
dec
inc
cmps
xchg
mov
sbb
jnp
mov
movs
xchg
or
adc
sub
cmp
inc
retf
push
sbb
pop
mov
sbb
arpl
rol
imul
add
push
adc
(bad)
(bad)
call
xlat
nop
mov
inc
mov
fistp
(bad)
xchg
jg
xchg
xchg
sbb
setge
or
(bad)
(bad)
(bad)
jmp
add
push
xchg
dec
mov
in
mov
mov
fmul
shl
(bad)
(bad)
(bad)
jmp
xlat
mov
fmul
dec
jmp
cmp
not
or
xor
out
icebp
(bad)
(bad)
call
sbb
xchg
neg
mov
xchg
lea
int3
inc
add
test
das
popa
das
cli
sbb
bound
jo
stos
mov
pop
mov
xchg
jmp
sbb
das
inc
inc
adc
or
adc
xchg
(bad)
(bad)
(bad)
cmp
retf
dec
stc
out
(bad)
(bad)
cmps
sub
(bad)
call
adc
test
cli
add
sub
fld
stos
cwde
xchg
fimul
(bad)
(bad)
jmp
or
scas
dec
pusha
mov
adc
popa
sbb
mov
fs
(bad)
(bad)
(bad)
call
in
cmc
cmp
mov
mov
out
test
lea
popf
push
popf
or
sub
(bad)
(bad)
jmp
or
dec
shl
lods
imul
push
out
or
inc
mov
push
dec
stc
mov
fcomip
call
lock
dec
xchg
pop
sub
div
fsub
(bad)
dec
pop
jbe
xchg
add
cwde
leave
or
jo
ret
mov
cmp
(bad)
jmp
retf
mov
sti
(bad)
sub
fmul
dec
cwde
inc
aad
dec
dec
pop
add
outs
jg
or
mov
nop
xchg
fsub
daa
cld
(bad)
(bad)
lods
ror
lods
mov
lock
dec
ds
neg
xchg
pop
retf
fimul
push
fldcw
fnstcw
(bad)
mov
into
add
jle
mov
call
or
(bad)
sahf
adc
jmp
(bad)
(bad)
(bad)
(bad)
out
fnstsw
out
mov
inc
mov
mov
ja
addr16
and
and
icebp
outs
mov
sub
sbb
push
pop
sub
sbb
and
(bad)
(bad)
jmp
cmc
outs
sub
repz
ret
inc
rcr
leave
pusha
add
scas
dec
mov
lods
sub
mov
(bad)
(bad)
dec
dec
or
dec
jb
lock
xor
jb
hlt
adc
(bad)
loop
or
(bad)
call
call
ror
call
test
test
(bad)
(bad)
(bad)
mov
pop
cdq
xor
popf
retf
fld
jp
lea
add
rol
(bad)
(bad)
(bad)
out
or
xor
es
fld
lahf
mov
dec
daa
outs
mov
(bad)
and
xor
jmp
and
add
inc
int
(bad)
sbb
cwde
(bad)
pop
fisttp
cli
mov
pushf
enter
jmp
popa
neg
or
mov
test
fwait
scas
mov
bound
sar
call
jp
movs
cwde
jg
clc
mov
add
sub
add
(bad)
inc
(bad)
bound
adc
jg
retf
les
xchg
mov
mov
mov
(bad)
(bad)
out
clc
mov
fmul
sar
mov
loop
retf
popa
stc
call
(bad)
sti
lods
imul
push
jp
rol
pop
xchg
in
sar
(bad)
(bad)
inc
arpl
add
es
xor
stc
cmp
inc
daa
or
les
(bad)
(bad)
(bad)
push
xchg
mov
dec
jno
mov
dec
(bad)
fidiv
js
mov
mov
(bad)
(bad)
(bad)
(bad)
cmp
jecxz
cmp
test
out
add
gs
or
jl
lahf
addr16
sbb
(bad)
mov
test
xor
mov
sub
mov
fidivr
lea
and
mov
pop
std
adc
js
ret
cmc
sub
ins
pop
push
inc
adc
push
test
fbld
adc
cdq
cwde
push
mov
retf
adc
(bad)
(bad)
call
cwde
xchg
push
add
inc
inc
outs
aas
test
adc
inc
pop
(bad)
call
dec
mov
adc
push
cld
outs
add
pop
xchg
pop
addr16
xchg
sbb
(bad)
(bad)
inc
cmps
mov
jmp
jecxz
sti
jmp
pop
sti
xchg
js
ret
adc
jmp
cli
mov
mov
rcl
aaa
push
jmp
cmps
xchg
ret
icebp
dec
adc
in
dec
mov
aad
jle
jnp
imul
pop
leave
jl
aas
(bad)
xchg
pop
xchg
(bad)
dec
arpl
lods
stos
pop
stos
or
xor
adc
(bad)
dec
fcomp
mov
pop
fsub
fdivp
aad
aad
mov
(bad)
(bad)
call
test
pop
adc
dec
or
rcr
(bad)
loopne
xchg
repz
mov
(bad)
(bad)
sahf
fmul
inc
jo
mov
iret
fcomp
mov
mov
xchg
gs
xor
and
and
outs
loop
push
sbb
(bad)
push
xor
es
lock
sub
stos
push
int3
dec
cmp
jno
adc
(bad)
push
icebp
fdivr
inc
cmp
mov
cwde
jmp
xor
and
and
aam
pop
(bad)
(bad)
(bad)
(bad)
mov
stc
lds
mov
rcl
sbb
pop
or
adc
and
dec
clc
pop
adc
add
shr
in
ss
fwait
mov
in
pop
mov
sbb
mov
mov
dec
jae
loopne
scas
cwde
ins
push
jo
xor
dec
(bad)
jo
xor
mov
not
xor
(bad)
(bad)
jmp
ret
jbe
fs
mov
mov
add
adc
(bad)
call
mov
mov
add
ss
or
dec
xchg
arpl
lahf
fnstcw
mov
sbb
(bad)
(bad)
push
xor
cdq
in
inc
jecxz
or
out
test
xor
(bad)
dec
dec
xor
fidiv
push
push
jmp
add
scas
enter
sbb
adc
xchg
arpl
(bad)
(bad)
inc
cs
inc
push
call
(bad)
sti
fadd
xchg
push
push
cmps
sbb
(bad)
(bad)
call
sub
es
pop
rcl
xlat
pop
ins
and
(bad)
dec
mov
(bad)
(bad)
(bad)
call
pop
add
pop
mov
mov
inc
push
test
sar
adc
das
shl
mov
stos
xchg
dec
pushf
cmps
adc
inc
push
push
cdq
sbb
rcl
(bad)
mov
arpl
test
push
add
mov
adc
push
(bad)
(bad)
jmp
cmp
inc
in
cdq
xchg
out
lods
and
stos
inc
mov
ror
sahf
outs
mov
or
(bad)
(bad)
jmp
lods
retf
aam
icebp
cld
dec
or
mov
sti
cdq
test
ss
icebp
aas
sahf
lds
lahf
mov
(bad)
jmp
ret
and
dec
call
retf
leave
jmp
and
(bad)
(bad)
inc
ins
fst
call
dec
aam
rcl
or
add
sub
and
xlat
out
mov
(bad)
jg
or
in
add
mov
push
pop
sahf
xor
in
mov
xchg
das
cli
call
mov
pop
mov
push
mov
sub
ror
jmp
test
icebp
out
fisub
xor
adc
and
sar
jg
mov
test
pop
lock
mov
add
dec
mov
fild
xor
pushf
in
fild
les
jmp
jno
(bad)
jmp
push
mov
dec
dec
xor
fbstp
fdiv
sbb
mov
pop
out
(bad)
int3
mov
lods
(bad)
(bad)
(bad)
call
(bad)
sub
or
mov
push
mov
cmp
dec
sbb
adc
leave
in
and
retf
xchg
jae
sar
gs
mov
les
mov
lods
test
xchg
(bad)
(bad)
call
mov
arpl
push
dec
repnz
scas
dec
add
rcr
inc
(bad)
(bad)
(bad)
inc
in
aas
inc
mov
loop
pop
jecxz
sbb
sub
xchg
push
dec
cmp
(bad)
(bad)
fist
test
adc
or
jmp
xchg
data16
dec
dec
mov
push
sbb
dec
sbb
adc
repz
(bad)
out
mov
jecxz
mov
data16
dec
sub
dec
scas
xchg
cli
ins
jmp
mov
icebp
pop
mov
loopne
(bad)
(bad)
(bad)
call
inc
pop
cmp
sbb
fst
add
getsec
cdq
inc
bound
(bad)
mov
adc
(bad)
(bad)
jmp
and
and
(bad)
push
adc
repz
mov
cld
int
push
jns
(bad)
(bad)
(bad)
call
(bad)
(bad)
in
jno
hlt
xchg
mov
fcom
das
in
dec
or
stos
pop
mov
jns
sub
jmp
jmp
movs
not
aas
and
test
mov
mov
(bad)
(bad)
(bad)
inc
fcomp
leave
pop
sub
or
call
daa
dec
mov
scas
jg
jmp
(bad)
call
imul
cmp
fmul
mov
pop
pusha
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
xor
dec
int
fnstsw
retf
into
outs
movs
aaa
cs
push
scas
cld
stos
cmps
cmp
mov
call
dec
outs
push
pop
pop
mov
(bad)
mov
cmps
retf
sbb
into
int3
jbe
lahf
xchg
push
(bad)
(bad)
(bad)
dec
mov
dec
sub
pop
and
adc
push
div
fs
mov
jmp
popf
popa
push
sbb
arpl
xchg
or
mov
fwait
pushf
push
xchg
push
hlt
(bad)
dec
cmp
jl
iret
in
test
or
mov
out
mov
in
add
fbstp
in
jg
les
retf
pop
push
sub
(bad)
(bad)
(bad)
in
out
fld
pop
jne
lfence
into
out
add
adc
push
push
mov
(bad)
dec
(bad)
push
jmp
js
fisttp
cs
push
fcom
loope
ret
or
test
push
cmp
mov
call
mov
fdivr
add
(bad)
(bad)
call
test
mov
mov
test
stos
cld
pop
les
add
dec
jmp
(bad)
(bad)
jmp
sub
(bad)
sub
push
inc
xor
cli
movs
daa
or
and
dec
jmp
inc
xchg
or
mov
jb
pop
cs
(bad)
(bad)
(bad)
push
retf
push
inc
pushf
add
xor
xchg
or
lods
in
push
lods
sbb
jp
leave
retf
(bad)
(bad)
(bad)
push
cmps
mov
dec
cmp
cmc
loope
add
in
jbe
test
sub
(bad)
(bad)
(bad)
jmp
sub
adc
scas
(bad)
imul
iret
dec
repnz
xchg
cmp
xor
or
(bad)
(bad)
(bad)
(bad)
mov
fisub
inc
std
fld
arpl
pop
repz
inc
js
popf
rcl
pop
add
aad
and
or
mov
and
(bad)
daa
data16
scas
push
add
inc
cld
call
cdq
add
xor
cmps
push
sub
or
jmp
mov
mov
xchg
outs
add
leave
pop
xor
scas
vmread
jg
fcomip
push
adc
(bad)
into
or
(bad)
call
(bad)
mov
cmp
sub
ret
cmp
jmp
cs
xlat
(bad)
(bad)
(bad)
call
and
dec
push
aad
push
push
mov
inc
dec
(bad)
pop
cwde
pop
cli
inc
enter
add
test
(bad)
mov
out
retf
cmc
mov
(bad)
adc
pop
std
ror
add
repnz
(bad)
(bad)
jg
mov
cdq
xor
sti
(bad)
fimul
stos
mov
push
data16
daa
(bad)
(bad)
(bad)
jmp
jmp
sti
mov
outs
test
jmp
cmp
in
stos
adc
cld
rol
(bad)
(bad)
push
scas
dec
inc
mov
aas
(bad)
ss
ja
mov
jmp
xor
(bad)
call
mov
jp
dec
not
test
iret
aam
jecxz
cdq
pop
mov
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
sbb
ror
std
xor
mov
sbb
movs
inc
jns
inc
pop
sub
(bad)
push
sbb
dec
in
das
xchg
sbb
sbb
inc
add
(bad)
(bad)
push
sbb
test
scas
sahf
popf
push
rol
loop
sub
pop
sar
(bad)
(bad)
(bad)
push
push
mov
fmul
sar
push
movs
into
std
push
fnsave
cmp
mov
test
lds
sub
out
push
mov
xchg
cs
aad
or
ss
and
(bad)
jmp
pushf
enter
mov
xchg
mov
push
mov
inc
mov
loopne
mov
(bad)
(bad)
(bad)
cmp
add
mov
inc
in
rol
jne
pop
out
pop
test
loopne
push
and
and
out
cli
(bad)
fadd
cli
inc
lods
and
mov
dec
fisubr
sub
xchg
dec
sub
(bad)
(bad)
call
leave
jp
std
push
pop
or
(bad)
shl
mov
sbb
imul
call
out
push
inc
repnz
aas
jno
test
mov
icebp
xor
or
pop
scas
cli
sub
xlat
mov
fsubr
dec
push
loope
add
movs
jns
jns
(bad)
(bad)
(bad)
mov
and
pop
into
dec
adc
mov
mov
sahf
jge
(bad)
(bad)
fwait
into
test
clc
sar
mov
imul
sar
adc
(bad)
(bad)
mov
call
mov
add
adc
mov
mov
and
imul
(bad)
call
pop
add
xor
(bad)
stos
fadd
mov
pop
inc
adc
(bad)
inc
cmps
mov
push
push
push
mov
mov
adc
imul
mov
lods
shr
mov
xchg
mov
(bad)
(bad)
(bad)
(bad)
jmp
push
jo
xor
xor
icebp
(bad)
adc
dec
arpl
retf
push
push
js
(bad)
call
inc
std
push
cdq
scas
mov
jb
sbb
pop
push
or
arpl
ror
(bad)
(bad)
(bad)
jmp
pushf
imul
mov
sbb
push
pop
cmp
jmp
dec
inc
add
icebp
mov
or
mov
iret
scas
jmp
push
cs
push
int3
sbb
fwait
clc
jmp
call
test
clc
call
cmp
sub
(bad)
(bad)
(bad)
dec
dec
int
jg
in
jle
mov
mov
fistp
int3
xchg
jnp
pop
pop
mov
test
(bad)
call
int
out
sub
test
pop
mov
pop
push
stos
xchg
xor
jg
retf
(bad)
(bad)
(bad)
call
adc
ins
push
mov
(bad)
dec
(bad)
or
iret
adc
cwde
xchg
lds
(bad)
(bad)
(bad)
push
push
sub
aaa
jp
push
adc
push
sub
loopne
push
and
sbb
push
or
sar
sbb
or
shl
xchg
push
mov
push
out
outs
(bad)
pop
inc
aam
sub
xchg
jmp
test
or
inc
mov
dec
xchg
push
jg
(bad)
(bad)
dec
pop
in
jno
mov
fld
or
fdivr
pop
mov
movs
(bad)
(bad)
(bad)
(bad)
fidiv
fcmovnu
call
fsub
jp
pop
lea
ret
pusha
jle
in
ins
cmp
(bad)
(bad)
jmp
aaa
test
lods
cs
mov
mov
mov
add
outs
lock
(bad)
inc
imul
(bad)
push
adc
stos
jmp
call
or
push
enter
lahf
ins
fist
xlat
scas
sar
(bad)
dec
dec
les
retf
enter
cmp
jb
arpl
lock
(bad)
(bad)
dec
(bad)
(bad)
adc
movs
in
mov
and
retf
out
mov
sti
mov
(bad)
(bad)
(bad)
dec
mov
test
adc
hlt
fcom
and
add
(bad)
(bad)
jmp
mov
cld
push
xor
cmc
mov
adc
std
xchg
adc
mov
out
mov
(bad)
(bad)
(bad)
dec
(bad)
fadd
popf
dec
jge
ret
inc
sahf
xchg
mov
jl
stos
and
sub
(bad)
(bad)
dec
pop
addr16
jp
adc
lods
sbb
inc
mov
rcl
cmps
arpl
sahf
xchg
(bad)
inc
xchg
sub
(bad)
(bad)
dec
inc
jp
and
out
push
lds
mov
add
mov
mov
mov
(bad)
(bad)
(bad)
dec
call
out
push
jg
jb
add
mov
mov
jb
jns
ss
rol
in
xchg
retf
dec
hlt
xchg
stc
sub
and
arpl
iret
pop
push
sbb
sub
sbb
call
add
add
sbb
dec
mov
(bad)
mov
push
in
pop
sbb
dec
fcomp
inc
pop
(bad)
jnp
leave
xchg
ja
(bad)
(bad)
inc
cdq
and
js
test
rcr
fisub
repz
add
jo
(bad)
(bad)
dec
dec
fwait
test
sbb
and
fwait
xlat
push
xor
xchg
jle
push
push
mov
mov
sar
cli
out
or
push
push
rcr
call
mov
pushf
loop
dec
(bad)
mul
retf
outs
mov
sbb
pop
call
(bad)
(bad)
dec
daa
dec
or
xor
pushf
mov
add
es
lar
sbb
(bad)
(bad)
(bad)
(bad)
stc
retf
iret
or
push
xchg
je
push
or
push
cmp
add
adc
add
sbb
(bad)
(bad)
(bad)
call
jne
aaa
or
mov
add
int
and
lods
enter
push
pop
dec
push
xor
jmp
jp
pop
xlat
jns
mov
mov
clc
stos
(bad)
jno
popa
sub
(bad)
push
inc
add
movs
add
icebp
daa
push
fucomip
out
aas
mov
mov
push
ud0
cld
jmp
jmp
push
out
stos
das
mov
mov
dec
pop
rcr
adc
xlat
sbb
data16
jne
outs
pushf
pop
clc
sti
xchg
fs
sar
sbb
mov
pop
repz
shr
shr
(bad)
xchg
push
clc
lods
rol
mov
xor
push
(bad)
jmp
or
mov
mov
pop
jo
mov
inc
call
addr16
mov
(bad)
(bad)
(bad)
ficom
xchg
pop
inc
dec
loope
leave
sbb
in
xor
jns
push
cmp
adc
dec
dec
(bad)
(bad)
(bad)
(bad)
in
das
lock
inc
les
scas
fsubr
leave
clc
ret
js
mov
jae
xor
jno
add
jmp
cli
test
mov
and
cmp
sbb
test
add
clc
ins
sar
(bad)
(bad)
inc
mov
ret
cmp
(bad)
cld
and
add
adc
mov
and
inc
cmp
(bad)
(bad)
inc
iret
rol
and
das
cmps
hlt
add
sbb
stc
or
jbe
mov
(bad)
push
test
aad
mov
inc
leave
jae
and
std
adc
jne
push
or
daa
pop
lds
(bad)
(bad)
(bad)
call
leave
adc
fstp
dec
xor
stc
sub
and
test
into
(bad)
(bad)
(bad)
jmp
dec
sbb
lods
inc
jae
out
(bad)
xor
jmp
cmps
mov
cmps
(bad)
rcl
arpl
push
in
pop
ds
xchg
jbe
mul
repnz
icebp
mov
mov
mov
sbb
xor
mov
mov
call
(bad)
push
call
ret
jp
xchg
pop
cli
add
add
loopne
cmp
(bad)
lods
stos
add
xor
out
push
and
stc
test
xor
adc
mov
or
cwde
pop
jns
(bad)
(bad)
(bad)
inc
xchg
mov
outs
sbb
dec
icebp
lea
inc
out
ins
iret
push
jnp
cmps
test
rcl
scas
ds
jecxz
(bad)
(bad)
std
imul
sub
rcl
mov
lahf
lods
push
data16
cmps
sbb
fcomip
(bad)
mov
jmp
mov
mov
int
test
aas
sub
(bad)
jmp
add
push
sub
in
jb
mov
inc
mov
daa
aaa
(bad)
(bad)
(bad)
inc
mov
fdivr
ror
mov
in
cmp
or
(bad)
sahf
popa
in
(bad)
(bad)
(bad)
push
movs
es
stos
push
pop
sub
dec
add
ss
je
push
jbe
repz
(bad)
(bad)
jmp
xor
and
test
or
cmp
cli
loope
mov
or
pop
(bad)
(bad)
(bad)
(bad)
stc
dec
int
cdq
mov
retf
int
lahf
sbb
push
mov
cmp
jmp
xor
push
push
fcom
sti
cmp
jnp
fs
(bad)
(bad)
inc
pop
outs
dec
sbb
pop
retf
xor
push
stc
(bad)
xchg
or
push
xchg
leave
cmp
jo
stos
loopne
(bad)
(bad)
jmp
pop
sub
aam
mov
sbb
push
movs
mov
inc
in
dec
test
push
inc
fisttp
xchg
cmc
inc
repnz
add
call
fldl2t
jno
ins
fucompp
mov
mov
lahf
sar
call
int
inc
(bad)
jnp
xlat
cld
xchg
mov
add
fstp
or
dec
repnz
hlt
test
add
xor
(bad)
(bad)
(bad)
call
inc
outs
add
jo
and
pop
js
cs
stc
in
and
(bad)
mov
outs
aaa
aam
or
inc
dec
sub
mov
ret
inc
sub
lods
(bad)
(bad)
(bad)
dec
int3
mov
pop
cmp
xor
call
out
jb
popf
retf
call
test
adc
mov
jb
jmp
(bad)
loopne
sub
pop
fld
sbb
push
std
dec
mov
mov
popa
or
cmps
test
mov
rol
or
sbb
inc
nop
(bad)
(bad)
(bad)
jmp
shl
xor
and
aaa
inc
fnstsw
xor
(bad)
icebp
data16
(bad)
(bad)
(bad)
stc
hlt
ss
je
dec
rcr
push
xor
ret
rol
or
fs
pop
jg
into
(bad)
(bad)
mov
je
and
sbb
es
lahf
dec
cmps
cmp
(bad)
in
retf
adc
push
pop
aad
mov
pop
mov
cmp
ja
lahf
cmp
(bad)
(bad)
call
cmp
xchg
sar
bnd
lods
into
xor
cmp
cwde
xor
fcomp
adc
fs
push
and
rcl
mov
add
sub
adc
ud0
outs
clc
adc
push
cmps
inc
into
pop
xor
cld
js
push
mov
retf
cdq
mov
dec
pop
push
jns
mov
or
cmps
xchg
jg
pop
repnz
or
dec
or
jg
lods
(bad)
retf
rcl
push
and
imul
cwde
dec
add
mov
in
cmp
retf
test
jae
stos
fcmovnu
je
outs
fwait
adc
pop
loop
fwait
aaa
js
xchg
dec
iret
lods
(bad)
dec
(bad)
(bad)
(bad)
(bad)
cld
push
push
cdq
push
jp
aam
cmp
shl
outs
jmp
push
scas
stos
xchg
inc
mov
(bad)
(bad)
(bad)
(bad)
jg
xchg
add
fs
fimul
stos
ficomp
shl
mov
shr
cmp
das
pop
loopne
push
ret
fcom
sub
pusha
and
scas
adc
push
adc
(bad)
jl
adc
aam
mov
cmc
xor
stos
(bad)
(bad)
jmp
fisttp
cli
scas
lock
aam
sbb
push
retf
dec
pop
xchg
sahf
and
jg
stos
(bad)
mov
loop
add
fidivr
test
or
jmp
call
and
push
push
mov
push
mov
cmps
adc
btr
scas
arpl
xchg
dec
sbb
shl
(bad)
(bad)
jmp
mov
aam
adc
imul
push
loop
xlat
les
(bad)
mov
arpl
popa
int3
jo
test
imul
mov
rcr
fcomp
call
(bad)
(bad)
dec
mov
mov
mov
and
and
sbb
test
push
pushf
rol
mov
or
mov
lods
push
push
imul
mov
(bad)
mov
aas
iret
fisttp
push
mov
out
mov
adc
inc
push
sbb
(bad)
(bad)
call
jno
mov
mov
mov
scas
mov
clc
(bad)
std
fbld
pushf
dec
jmp
(bad)
(bad)
inc
mov
ud2
mov
in
mov
xor
movs
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jge
popf
out
inc
pop
push
pop
xchg
call
jns
adc
sub
jne
aad
loope
push
cmp
or
mov
out
clc
xchg
std
jle
retf
mov
inc
or
jge
xor
js
out
mov
test
(bad)
scas
push
out
test
(bad)
(bad)
push
imul
jo
pusha
jnp
icebp
push
ja
inc
hlt
syscall
sub
lods
div
pop
cmc
(bad)
(bad)
jg
adc
or
loop
mov
jbe
pop
fdivr
iret
xchg
mov
(bad)
fisttp
sbb
jmp
inc
inc
rdtsc
sub
mov
arpl
cmp
or
aas
lods
fidivr
mov
sbb
dec
rcr
jmp
xchg
(bad)
xor
xchg
loop
(bad)
jmp
jns
mov
or
xchg
sub
sub
mov
std
(bad)
jmp
nop
ss
bound
and
cld
sbb
sub
xlat
sbb
mov
daa
(bad)
mov
js
mov
(bad)
test
loope
and
lods
mov
(bad)
call
push
jns
inc
and
and
in
xchg
xchg
adc
fisttp
jle
jmp
pop
(bad)
(bad)
(bad)
call
adc
or
data16
(bad)
mov
lock
inc
add
(bad)
(bad)
(bad)
call
mov
adc
fistp
cmp
dec
retf
mov
jmp
xchg
call
cs
add
stos
test
stos
pop
mov
xor
sub
sar
call
in
int
push
jbe
xchg
sbb
aad
ins
in
enter
inc
pop
movd
(bad)
mov
out
stos
push
sub
cmps
es
out
inc
fcomp
popa
sub
or
cli
(bad)
(bad)
inc
ror
cmp
in
call
sub
and
push
js
cmp
(bad)
jmp
ds
leave
xor
dec
(bad)
fxch
or
jae
js
(bad)
and
(bad)
mov
mov
test
dec
into
sbb
jns
imul
inc
scas
mov
dec
les
lods
mov
lods
(bad)
(bad)
(bad)
(bad)
stc
mov
shl
stos
or
fisub
inc
add
test
fisttp
(bad)
(bad)
(bad)
inc
test
loope
xor
jecxz
xchg
xchg
and
jmp
lods
js
mov
(bad)
(bad)
(bad)
jmp
mov
and
adc
add
push
stos
in
fild
cmp
or
(bad)
(bad)
(bad)
call
adc
in
fsubr
add
je
dec
mov
cmp
jle
adc
mov
test
mov
mov
adc
add
sub
(bad)
jg
not
ds
out
call
xchg
iret
xchg
adc
mov
mov
sbb
(bad)
push
sbb
cmc
lea
add
and
jne
lods
jmp
cli
jmp
jmp
jnp
imul
mov
lea
add
aad
(bad)
(bad)
dec
jno
fwait
pop
dec
ds
(bad)
bnd
push
pop
mov
out
repnz
cld
cld
stos
mov
call
movsx
and
xor
pusha
jecxz
mov
fdivr
(bad)
dec
mov
fs
in
in
sbb
add
lahf
pop
dec
sub
add
(bad)
(bad)
call
outs
ins
mov
ss
and
adc
or
sbb
mov
add
(bad)
(bad)
push
sti
jmp
pushf
mov
adc
xchg
xchg
pushf
js
lods
mov
adc
or
mov
mov
div
pop
cs
ss
mov
xchg
aam
(bad)
(bad)
call
adc
ret
xor
scas
outs
fist
push
xchg
cmp
les
dec
(bad)
(bad)
(bad)
(bad)
mov
mov
xor
push
mov
into
in
ins
loopne
pop
sub
dec
movs
jns
rcl
adc
mov
(bad)
jmp
adc
push
jp
and
call
test
(bad)
mov
dec
es
jle
or
jmp
scas
lock
mov
mov
dec
push
pop
or
dec
ja
pop
jmp
jle
pop
mov
aam
ss
adc
mov
stos
pusha
pushf
arpl
push
(bad)
(bad)
(bad)
(bad)
fucomp
add
ror
jmp
movs
pop
mov
clc
add
inc
cmps
push
retf
pop
jo
sar
(bad)
mov
mov
cmps
xchg
push
or
xchg
loope
fwait
push
scas
aam
sub
(bad)
(bad)
jmp
clc
mov
(bad)
aas
or
and
pop
movs
adc
ftst
sub
push
and
or
(bad)
(bad)
(bad)
jmp
sub
cmc
mov
push
jno
outs
outs
dec
fisubr
xor
retf
xor
(bad)
(bad)
(bad)
dec
sbb
test
ja
ror
xor
mov
sub
mov
(bad)
(bad)
call
mov
pusha
pop
push
call
pop
sub
or
pop
lds
push
gs
fist
pop
lock
out
out
aad
(bad)
rcr
mov
add
cmps
ffreep
(bad)
push
push
adc
jmp
mov
shl
adc
push
in
outs
sti
inc
xchg
(bad)
(bad)
(bad)
jmp
push
popf
pushf
addr16
daa
lods
fwait
test
outs
add
stos
adc
sbb
inc
idiv
pop
dec
mov
xchg
mov
scas
push
sbb
scas
ds
sub
inc
mov
pop
push
dec
in
mov
push
dec
pop
shl
leave
push
(bad)
(bad)
(bad)
dec
push
push
xchg
popf
sub
test
movs
add
aas
sbb
xchg
cmps
jns
(bad)
call
std
push
inc
push
rcr
adc
hlt
push
sbb
push
stos
inc
test
(bad)
(bad)
jmp
adc
dec
stos
sbb
repz
stos
jle
pop
push
sub
sub
xchg
sub
(bad)
jmp
push
(bad)
retf
(bad)
aam
adc
sbb
or
std
lea
sbb
sbb
mov
iret
or
leave
dec
dec
(bad)
out
clc
call
pop
xchg
movs
sar
push
lods
shr
ins
test
xchg
std
stos
idiv
(bad)
(bad)
jmp
or
aad
add
push
push
ret
adc
movs
fs
test
jnp
add
(bad)
(bad)
(bad)
cmp
sbb
lahf
mov
sub
jae
movs
dec
std
pop
(bad)
(bad)
(bad)
push
jl
jbe
cdq
daa
pop
ja
xlat
mov
iret
cdq
stos
mov
jno
push
jnp
add
(bad)
(bad)
call
inc
adc
pop
fidivr
sar
push
inc
dec
sub
dec
out
(bad)
(bad)
dec
add
cmc
mov
retf
sub
sti
les
arpl
popf
mov
sub
sub
jle
pop
call
mov
sbb
cmp
aam
xchg
cmp
(bad)
(bad)
(bad)
fstp
mov
inc
jg
sti
idiv
xchg
popf
or
loope
xchg
jl
ja
(bad)
(bad)
(bad)
inc
jo
add
add
in
cmc
jo
pop
in
sbb
mov
or
inc
enter
(bad)
(bad)
fld
pop
outs
xor
sbb
cld
mov
in
enter
cdq
or
jbe
inc
mov
or
jmp
enter
xchg
int
scas
mov
lahf
out
lods
or
test
xor
or
mov
(bad)
(bad)
fimul
pusha
push
rcl
pop
sub
xchg
mov
mov
test
lahf
xor
bound
inc
pop
pop
aaa
(bad)
push
or
sbb
inc
shl
jns
dec
fistp
push
(bad)
(bad)
(bad)
jmp
mov
sub
ror
mov
shr
(bad)
(bad)
(bad)
(bad)
jle
ret
scas
lds
sub
and
ins
mov
xor
(bad)
push
add
adc
(bad)
inc
call
pop
adc
out
test
fdivr
inc
xor
sbb
(bad)
(bad)
(bad)
call
lahf
scas
call
clc
test
adc
sub
sbb
(bad)
(bad)
(bad)
jmp
out
pop
aad
jp
stos
jl
jg
sub
add
stos
push
imul
and
xchg
(bad)
(bad)
dec
data16
icebp
out
nop
int3
in
xchg
das
mov
fs
ret
xchg
int
test
or
fisttp
ror
sub
sbb
dec
call
ds
sahf
scas
mov
rcl
dec
int
mov
add
push
pop
push
adc
(bad)
fwait
jmp
(bad)
(bad)
jmp
jl
out
pop
loop
shl
loope
sub
add
js
push
jnp
(bad)
mov
mov
fcomp
mov
or
arpl
aam
call
(bad)
(bad)
mov
push
mov
sbb
push
push
xor
add
pop
js
ds
add
(bad)
adc
push
mov
mov
test
mov
push
(bad)
xchg
repz
cmp
loope
popf
mov
cmps
mov
jl
(bad)
loopne
(bad)
(bad)
stc
in
mov
xor
mov
cmp
stos
mov
std
popf
(bad)
(bad)
call
jo
iret
mov
xchg
and
push
push
mov
std
cmp
or
out
or
jg
cmp
inc
(bad)
(bad)
(bad)
(bad)
jmp
pop
fstp
push
rcl
jns
hlt
push
cmps
mov
cwde
(bad)
call
add
mov
sbb
push
jae
loope
xchg
cmp
xchg
ror
cmp
jg
(bad)
and
inc
aam
stos
test
(bad)
mov
mov
(bad)
(bad)
inc
aad
scas
pop
xchg
ins
inc
xchg
lahf
cli
sub
inc
xchg
out
in
fstp
fistp
jne
es
(bad)
(bad)
(bad)
mov
dec
mov
scas
popf
aaa
call
cmps
pop
fwait
pop
xchg
inc
add
dec
jmp
adc
fs
aad
add
jge
(bad)
(bad)
out
xor
adc
xchg
lea
pop
out
jae
std
pop
or
pop
(bad)
dec
mov
(bad)
inc
stos
shl
jge
push
xchg
ins
outs
xchg
push
push
(bad)
xlat
add
test
test
ret
dec
imul
out
xor
out
and
hlt
mov
lea
pushf
ja
je
retf
xchg
mov
imul
xchg
movs
fidiv
int
aaa
out
cmp
in
cs
xor
add
add
(bad)
inc
pop
ins
sub
and
mov
shr
dec
jmp
lock
int
add
lahf
(bad)
mov
inc
enter
je
jo
in
data16
out
mov
das
mov
sar
(bad)
jg
inc
add
leave
sub
shr
cli
bound
pop
mov
clc
(bad)
(bad)
jmp
stos
sbb
inc
xchg
ror
out
ret
pushf
bound
out
mov
push
inc
adc
(bad)
pop
(bad)
(bad)
(bad)
dec
adc
(bad)
fnsave
je
inc
mov
xchg
xor
cmp
arpl
cmp
pop
(bad)
(bad)
(bad)
jg
and
fcom
xor
in
sti
mov
cmp
dec
or
push
and
mov
mov
jno
adc
inc
outs
out
imul
sti
dec
pop
clc
jmp
clc
call
dec
inc
push
jmp
push
sbb
inc
rcl
push
jp
xchg
push
add
(bad)
(bad)
(bad)
(bad)
mov
inc
jne
loop
(bad)
iret
mov
in
or
cld
mov
or
jmp
movs
inc
push
add
les
pop
hlt
ror
arpl
pop
and
jmp
shl
push
xor
jne
pop
xchg
scas
out
mov
adc
add
out
mov
pop
scas
fnstcw
jge
mov
fcomi
jae
pushf
dec
aad
jo
(bad)
(bad)
mov
(bad)
rcl
xchg
push
and
mov
push
ins
pop
sub
shl
(bad)
(bad)
(bad)
call
jmp
mov
dec
movs
push
pop
mov
lea
push
mov
out
sbb
cld
(bad)
sbb
repnz
fstp
jne
and
fdivr
outs
cli
push
ret
call
push
push
inc
cmps
push
ins
adc
mov
push
mov
add
cmc
mov
jg
adc
sbb
pushf
inc
jo
or
cwde
dec
adc
push
lea
daa
cmps
push
and
call
loopne
mov
mov
das
xor
bound
std
scas
repnz
push
xchg
enter
(bad)
jl
xchg
push
shr
jmp
mov
or
mov
xchg
cdq
(bad)
(bad)
(bad)
(bad)
fadd
aas
push
test
fisubr
test
adc
test
push
pop
popa
jns
call
or
out
repz
inc
xchg
pop
inc
popf
xchg
jl
fsub
jecxz
aaa
sbb
(bad)
push
sbb
xchg
sub
aad
aas
xchg
mov
push
cld
popf
push
fstp
xor
not
xchg
mov
(bad)
inc
pop
xchg
mov
mov
cmp
pushf
scas
dec
jg
mov
icebp
push
bound
inc
jns
(bad)
(bad)
(bad)
push
push
outs
mov
movs
test
mov
cmp
ins
and
and
out
rcl
cld
inc
(bad)
jmp
call
outs
jo
dec
ins
into
push
xor
dec
xchg
and
iret
jb
push
push
retf
inc
jp
sbb
cmp
sub
dec
cwde
adc
scas
mov
shl
imul
mov
sahf
jecxz
pusha
or
data16
(bad)
(bad)
mov
mov
lock
mov
pushf
mov
imul
retf
loopne
inc
(bad)
(bad)
(bad)
inc
popaw
xor
arpl
fisubr
popa
fldenv
mov
xchg
mov
ret
sti
jmp
(bad)
(bad)
std
inc
add
mov
jmp
mov
xor
ja
dec
lods
jo
and
into
scas
aam
aad
call
jle
sub
cld
mov
je
dec
fmul
test
xlat
or
(bad)
(bad)
cmp
push
ss
sar
push
mov
mov
xchg
xchg
or
rcl
sub
mov
ins
pusha
lods
(bad)
push
ins
inc
add
or
mov
adc
(bad)
(bad)
(bad)
(bad)
inc
gs
mov
or
jmp
mov
cmps
jg
je
(bad)
pop
cdq
int3
outs
cli
(bad)
jmp
test
mov
fistp
retf
push
sub
inc
push
pop
in
das
shr
(bad)
jg
(bad)
mov
bound
repz
pop
fdiv
lahf
xchg
sub
pminub
(bad)
jg
xor
mov
pop
lods
add
jp
inc
add
push
mov
sahf
call
jmp
xor
mov
mov
iret
mov
add
jno
jmp
inc
pop
push
sbb
mov
loopne
xor
in
fstp
repz
ss
(bad)
(bad)
call
or
adc
inc
loope
add
jb
cmp
loope
(bad)
dec
psadbw
mov
int
push
cmp
into
loop
retf
(bad)
(bad)
(bad)
mov
inc
das
sub
dec
push
pop
push
inc
nop
ins
sbb
stc
or
jae
in
imul
(bad)
(bad)
(bad)
(bad)
mov
cmc
(bad)
push
pop
retf
int
or
pop
hlt
pop
adc
ins
pop
sub
add
mov
(bad)
(bad)
mov
adc
sbb
sbb
jmp
aas
shl
(bad)
(bad)
jg
stos
cs
mov
gs
dec
adc
jecxz
fcmove
lods
(bad)
(bad)
(bad)
jmp
lea
fist
sbb
popa
dec
push
or
icebp
int
pop
cmc
(bad)
test
in
fnsetpm(287
data16
(bad)
(bad)
inc
jge
into
mov
mov
js
mov
fcom
(bad)
(bad)
(bad)
call
cli
xor
push
rcl
jecxz
(bad)
jns
pop
dec
mov
add
fxch
sbb
fs
jg
jmp
(bad)
out
lods
iret
(bad)
fmul
stc
pop
psubsb
cwde
out
(bad)
(bad)
(bad)
(bad)
fiadd
adc
fwait
mov
lds
rcl
mov
cmc
call
test
mov
add
xor
inc
jle
cs
(bad)
(bad)
(bad)
dec
shr
idiv
or
(bad)
pop
mov
sbb
mov
dec
(bad)
(bad)
jmp
out
repnz
sbb
fidiv
mov
jl
enter
jl
pop
(bad)
cmp
(bad)
(bad)
(bad)
mov
iret
(bad)
xlat
outs
mov
mov
sub
es
jnp
daa
ja
dec
adc
sar
inc
add
jp
jb
iret
fnstsw
out
(bad)
mov
add
ret
scas
clc
(bad)
jg
dec
dec
test
mov
hlt
ins
cmp
mov
inc
outs
mov
or
shr
or
mov
mov
xchg
into
push
imul
(bad)
(bad)
(bad)
(bad)
jg
lock
repz
cmp
sub
jnp
repnz
ficom
and
xchg
pop
push
(bad)
mov
xor
and
sbb
fnstsw
into
das
add
(bad)
(bad)
(bad)
(bad)
jle
stos
fcmovne
in
mov
shl
imul
scas
ret
cmc
pusha
fadd
imul
hlt
imul
repnz
sub
push
inc
repz
mov
pop
sub
jge
pop
sbb
xor
(bad)
(bad)
inc
jne
cwde
jnp
rol
aam
push
xchg
or
mov
pop
adc
fwait
(bad)
(bad)
(bad)
inc
popf
mov
xchg
push
pushf
mov
(bad)
or
push
(bad)
int3
test
xchg
sub
(bad)
(bad)
dec
outs
and
push
and
lods
(bad)
fisttp
pushf
shl
arpl
jmp
movs
pop
mov
(bad)
(bad)
(bad)
push
gs
outs
aam
ror
inc
inc
sbb
push
rol
sub
push
popa
add
out
mov
sub
(bad)
(bad)
dec
call
addr16
dec
mov
inc
cli
sti
add
nop
xchg
or
out
in
clc
(bad)
inc
dec
xchg
mov
jmp
mov
push
stc
dec
lock
xchg
rcr
and
popf
cmc
cmps
xor
(bad)
(bad)
dec
sub
call
xor
repnz
clc
or
jne
mov
(bad)
(bad)
jmp
add
retf
in
jl
out
mov
mov
or
iret
fild
retf
test
aaa
std
push
fdivr
repnz
in
mov
loope
div
in
(bad)
fcomip
call
retf
sbb
ss
xor
out
repnz
jb
aas
out
push
dec
inc
adc
(bad)
(bad)
(bad)
js
popf
mov
fstp
pmullw
(bad)
std
aaa
jno
stos
icebp
outs
cmps
inc
adc
(bad)
(bad)
(bad)
call
xchg
outs
mov
repz
pushf
cld
cdq
movsx
ins
mov
inc
xchg
jp
lock
std
lods
jno
jnp
adc
dec
adc
cmps
pushf
ud0
(bad)
call
dec
xlat
pop
movs
aad
in
rcl
scas
fstp
sub
push
aaa
push
push
inc
mov
adc
(bad)
jmp
sub
jb
cli
jmp
cmp
(bad)
inc
das
inc
push
stc
jb
test
mov
mov
loope
(bad)
call
xchg
ins
push
mov
add
ret
push
jns
add
dec
scas
xor
(bad)
mov
add
adc
lods
fwait
cdq
stc
aaa
inc
sti
jae
jecxz
(bad)
(bad)
dec
test
inc
rcr
cld
daa
xor
mov
pop
add
int3
fwait
xlat
jae
add
pushf
cmp
test
push
jl
in
or
aam
sbb
(bad)
(bad)
cmp
mov
jo
ret
pop
sbb
les
out
ins
fsubr
mov
xacquire
add
jmp
retf
sub
jbe
push
fs
pop
cmp
call
jmp
xchg
imul
mov
xor
mov
inc
inc
dec
sbb
retf
test
sbb
sar
pop
jecxz
rcr
sar
mov
push
retf
sbb
mov
mov
push
fisttp
add
push
test
(bad)
call
mov
push
test
lods
lea
inc
xchg
jmp
pop
cwde
jge
mov
pop
sahf
dec
ins
jle
adc
mov
clc
les
rol
cli
mov
(bad)
(bad)
inc
fiadd
arpl
lods
add
mov
das
add
xor
lods
aas
cmp
lods
es
stos
or
sub
leave
inc
lahf
push
lods
push
das
aaa
das
cmps
fs
and
inc
gs
add
jg
(bad)
mov
push
push
mov
ror
out
xor
test
mov
call
push
dec
sti
dec
pop
xchg
in
and
jg
pop
daa
jae
dec
mov
or
fist
(bad)
(bad)
jmp
adc
mov
lea
sti
fcmovbe
jp
es
inc
or
mov
jl
dec
cmp
neg
das
(bad)
mov
call
lds
movs
jle
sbb
fcos
(bad)
(bad)
inc
fisttp
xchg
adc
stos
mov
or
dec
addr16
cmps
idiv
xchg
aaa
stos
jmp
xchg
sbb
push
jle
push
fild
adc
call
loopne
sbb
popf
out
sbb
pop
das
pusha
pop
fcmovu
push
call
(bad)
call
inc
jno
mov
sti
inc
and
adc
push
dec
mov
shl
inc
stos
(bad)
(bad)
inc
inc
adc
pop
cmp
adc
mov
inc
lods
cmp
dec
xor
ret
mov
xchg
lods
push
mov
mov
outs
nop
push
(bad)
addr16
(bad)
(bad)
in
(bad)
fstp
mov
int3
pop
mov
inc
retf
ds
add
retf
pop
fcom
(bad)
(bad)
(bad)
call
inc
sbb
pop
xchg
xor
xchg
pop
(bad)
cwde
adc
(bad)
or
inc
add
push
dec
jns
mov
xor
and
inc
lds
add
outs
add
ss
je
push
call
inc
(bad)
mov
dec
pop
(bad)
(bad)
(bad)
inc
cwde
shl
sub
ficomp
xchg
mov
jmp
and
(bad)
(bad)
(bad)
jmp
jge
ins
push
adc
lahf
in
mov
xchg
pop
std
imul
fiadd
(bad)
(bad)
(bad)
call
and
aas
jmp
adc
push
xchg
in
and
loop
nop
ds
enter
jecxz
mov
ins
repz
(bad)
(bad)
push
dec
mov
stos
push
les
xlat
iret
ds
and
xchg
mov
and
add
lock
movs
mov
push
jbe
mov
fadd
(bad)
(bad)
(bad)
mov
out
jmp
fdivrp
movs
clc
push
into
(bad)
jmp
jb
sub
pop
cmp
inc
(bad)
(bad)
(bad)
dec
pop
imul
loop
aaa
mov
cdq
cmp
in
movs
pop
dec
xlat
jmp
ds
(bad)
(bad)
inc
in
inc
inc
inc
call
add
cmp
pop
in
(bad)
mov
stc
clc
scas
or
(bad)
(bad)
(bad)
mov
sub
xor
dec
add
fstp
pop
fdivr
push
scas
cli
(bad)
dec
in
cmps
pop
jecxz
lods
hlt
retf
retf
daa
in
adc
scas
pop
jae
stos
pop
cmp
pop
ds
(bad)
(bad)
call
movs
aad
hlt
mov
dec
arpl
mov
sbb
mov
(bad)
(bad)
(bad)
(bad)
xchg
pop
pop
fcomp
mov
add
jle
pop
sbb
rol
dec
dec
(bad)
(bad)
(bad)
dec
fs
or
std
sbb
push
add
push
sbb
stc
push
pop
(bad)
(bad)
(bad)
call
(bad)
retf
lods
pop
icebp
in
ins
bound
dec
sub
mov
(bad)
in
aad
(bad)
push
or
(bad)
(bad)
(bad)
push
push
adc
repz
and
xor
in
shr
out
dec
pop
(bad)
(bad)
(bad)
inc
enter
sub
repz
mov
cmps
and
ja
adc
or
stc
lods
idiv
mov
push
sti
mov
mov
lods
stos
imul
cmps
mov
int
movs
call
jl
(bad)
(bad)
(bad)
mov
sub
mov
mov
push
out
sbb
jecxz
in
xchg
cli
(bad)
out
xchg
cmc
mov
pop
pop
adc
cs
sbb
inc
cmc
sbb
jl
stos
mov
enter
call
rol
mov
shr
or
jmp
cmp
(bad)
(bad)
inc
pop
inc
cdq
pop
and
jmp
shr
inc
outs
inc
hlt
test
(bad)
(bad)
(bad)
mov
inc
daa
jg
xchg
mov
arpl
xor
and
cmp
push
pop
or
shl
jl
push
adc
in
inc
cld
pop
push
ds
imul
sub
or
(bad)
(bad)
call
inc
pop
gs
mov
add
mov
jmp
test
and
pop
test
xchg
cld
das
cli
fisttp
ret
xchg
(bad)
movs
fcom
sbb
mov
(bad)
(bad)
(bad)
jmp
lods
jg
popfw
clc
xor
bound
or
mov
jo
inc
push
sbb
loopne
(bad)
(bad)
(bad)
call
and
jmp
cld
pop
ffreep
ins
dec
xor
in
das
or
adc
(bad)
jmp
stos
pop
cmp
or
pop
stos
or
cli
dec
retf
popf
sar
(bad)
sub
jmp
pop
cmc
test
test
clc
pop
fdivr
push
xchg
ret
pop
inc
or
imul
and
inc
jg
imul
mov
lds
idiv
inc
cmp
(bad)
(bad)
(bad)
jmp
sbb
sahf
xor
xor
loope
sub
lds
mov
in
lds
(bad)
sub
repz
mov
mov
jg
cmps
movs
mov
mov
jg
inc
in
xor
repz
push
sahf
mov
adc
push
fcomip
(bad)
push
fs
xchg
sub
mov
or
and
jne
or
mov
dec
mov
xchg
dec
add
stc
push
in
fs
jmp
mov
(bad)
fcomip
call
xor
fld
cwde
pushf
mov
mov
xor
pop
or
jno
push
std
call
dec
push
mov
mov
loop
xchg
aam
in
add
(bad)
call
leave
sar
jmp
fcomp
mov
leave
inc
push
xchg
call
fnsave
xlat
bound
push
movs
cs
mov
add
mov
pop
adc
mul
jg
aas
sbb
dec
int
xor
sar
cs
stos
pop
icebp
push
cmps
sub
xchg
aad
mov
jg
jmp
inc
jbe
mov
ins
xchg
push
adc
(bad)
fild
dec
fbld
dec
scas
or
jg
jmp
cli
fidiv
mov
add
(bad)
xchg
sub
jb
push
dec
jge
jb
iret
or
hlt
(bad)
jmp
rcl
jbe
pop
mov
or
mov
jnp
ss
outs
inc
les
out
inc
xor
push
iret
pop
xor
inc
movs
dec
jg
neg
ins
out
ins
in
xchg
push
mov
cli
mov
test
dec
mov
add
cmps
enter
sub
dec
mov
icebp
(bad)
(bad)
in
jmp
dec
daa
inc
push
push
xor
mov
mov
mov
(bad)
call
test
cmp
push
xchg
jge
cli
dec
movs
(bad)
mov
add
jmp
push
fnstsw
lods
xlat
xchg
ror
push
jne
addr16
cs
arpl
mov
mov
(bad)
(bad)
jmp
retf
out
inc
imul
or
cmc
pop
lea
mov
inc
inc
jle
cld
(bad)
(bad)
inc
jle
mov
movs
jmp
lahf
jmp
inc
pop
repnz
push
clc
loop
call
mov
cmps
or
mov
jl
inc
imul
(bad)
mov
(bad)
mov
jle
xchg
or
int3
push
mov
sub
push
sar
aam
push
dec
shl
(bad)
fbstp
leavew
pop
cmp
ins
sbb
enter
jmp
(bad)
(bad)
(bad)
push
pop
inc
cmp
xor
std
xor
inc
mov
adc
popf
push
test
(bad)
call
push
retf
or
repnz
adc
dec
sti
inc
xor
loop
ds
push
in
idiv
dec
(bad)
(bad)
(bad)
(bad)
jp
icebp
movs
lods
mov
pop
fs
push
lock
lods
js
sbb
ret
cs
(bad)
(bad)
fnstsw
inc
xchg
adc
mov
add
jnp
(bad)
(bad)
(bad)
inc
sbb
dec
pop
push
jg
jb
pop
popa
push
out
mov
mov
test
call
(bad)
(bad)
jmp
out
and
idiv
mov
cmp
les
loopne
cld
cmc
add
sbb
(bad)
fdivr
(bad)
(bad)
call
lds
jnp
or
popa
adc
in
loop
fsub
and
mov
add
scas
xchg
nop
cmp
(bad)
call
scas
and
xchg
xchg
lahf
jo
outs
add
xlat
aaa
dec
or
fbld
or
inc
scas
(bad)
(bad)
jmp
adc
dec
add
imul
mov
sbb
int
(bad)
(bad)
(bad)
call
sub
ret
cmp
push
adc
cmp
adc
push
(bad)
fcos
(bad)
(bad)
jmp
or
jle
mov
fdivrp
(bad)
pop
inc
jne
scas
sub
sar
rcr
sbb
(bad)
(bad)
(bad)
cli
lods
xchg
(bad)
jmp
adc
add
and
dec
out
sub
dec
xor
adc
lods
nop
mov
(bad)
(bad)
(bad)
call
mov
inc
xor
cwde
mov
cmp
add
or
test
loope
(bad)
repnz
xlat
(bad)
(bad)
(bad)
out
dec
add
cmp
mov
mov
or
adc
loopne
push
push
(bad)
mov
mov
jg
nop
cmps
or
mov
sub
sub
jp
(bad)
(bad)
(bad)
call
test
in
stos
imul
mov
out
push
push
jecxz
dec
fs
rol
adc
out
jbe
mov
cmps
xor
pop
cmp
add
icebp
nop
das
dec
cmps
push
or
fwait
fs
jo
(bad)
(bad)
(bad)
call
and
push
(bad)
adc
mov
ret
out
scas
ja
sbb
ja
in
ja
xchg
adc
(bad)
(bad)
jmp
leave
fs
imul
dec
sub
mov
xor
aad
cmp
and
or
lea
push
xchg
and
cmp
out
cmp
xor
dec
(bad)
(bad)
(bad)
inc
and
jbe
cmp
adc
data16
call
and
push
xchg
mov
push
or
(bad)
ja
jae
adc
data16
ss
lahf
adc
pushf
or
jmp
mov
(bad)
(bad)
(bad)
call
shr
ret
and
mov
cmp
sub
jmp
sub
sbb
(bad)
(bad)
(bad)
(bad)
push
mov
inc
sub
dec
xchg
pusha
pop
test
jne
jge
test
jno
(bad)
(bad)
inc
xor
or
pop
and
mov
call
xchg
icebp
rol
shr
cs
(bad)
(bad)
(bad)
cmp
loop
and
lds
sahf
xor
and
ds
or
mov
cld
(bad)
inc
sbb
lods
push
in
rol
dec
xchg
(bad)
(bad)
call
fimul
fdiv
stc
mov
cmp
outs
mov
fadd
jg
(bad)
(bad)
jmp
dec
sub
je
scas
test
mov
leave
dec
xchg
xchg
int3
(bad)
stos
mov
(bad)
(bad)
call
dec
or
imul
mov
sbb
xchg
and
add
clc
(bad)
(bad)
(bad)
call
sar
(bad)
out
(bad)
jnp
or
add
sub
cmc
xchg
ins
dec
cmps
popf
les
(bad)
(bad)
(bad)
call
add
or
dec
data16
cmp
mov
(bad)
(bad)
inc
cmp
aad
sbb
jne
jg
dec
arpl
xchg
pop
jmp
(bad)
(bad)
(bad)
dec
xor
mov
sub
lods
push
cmp
iret
popa
xor
clc
mov
arpl
clc
leave
jmp
sbb
mov
lds
movs
out
(bad)
pop
(bad)
(bad)
(bad)
push
adc
pop
mov
xor
mov
stos
mov
retf
enter
push
mov
(bad)
fucomip
mov
enter
inc
nop
inc
xchg
comiss
test
scas
mov
pop
sti
scas
sbb
(bad)
(bad)
jmp
(bad)
jno
cmps
xchg
push
sub
adc
and
test
mov
push
dec
aad
or
inc
adc
jo
and
or
jns
iret
popf
sub
(bad)
addr16
push
jecxz
es
aaa
(bad)
(bad)
(bad)
call
das
mov
rcr
imul
fs
and
xor
push
xor
(bad)
aas
gs
(bad)
(bad)
call
xor
cmps
ja
jge
xor
(bad)
bound
cmps
inc
mov
or
cmps
adc
es
push
dec
(bad)
mov
icebp
leave
fimul
(bad)
(bad)
push
add
aad
(bad)
xchg
push
push
test
pop
fstp
jg
shr
add
stos
jle
(bad)
jge
and
cmp
popf
mov
sar
das
clc
call
sub
test
jle
mov
jge
xchg
inc
sbb
je
(bad)
(bad)
(bad)
call
push
out
ror
movs
out
fild
jns
xor
mov
inc
add
jmp
mov
inc
movs
xor
xchg
xlat
ins
sub
dec
dec
adc
dec
in
dec
adc
loopne
add
mov
jmp
int3
lods
push
outs
xchg
jge
enter
call
gs
mov
cmp
retf
loope
jl
aaa
jns
mov
ins
clc
sbb
mov
retf
fsub
(bad)
(bad)
(bad)
out
xor
jecxz
mov
sub
sbb
addr16
mov
mov
shl
add
(bad)
(bad)
push
rol
jbe
addr16
and
out
jnp
in
lds
xchg
mov
(bad)
push
mov
fdiv
dec
adc
imul
mov
mov
stos
(bad)
jmp
std
pop
inc
adc
ins
in
cmp
pushf
push
mov
mov
(bad)
fbld
leave
or
jbe
lds
ss
ins
and
xor
loope
push
enter
test
inc
cwde
stc
sbb
stos
mov
pop
push
xchg
jo
ret
push
cld
(bad)
(bad)
clc
ins
sbb
xlat
mov
ret
rcl
stc
cmp
loope
cmp
mov
sbb
(bad)
(bad)
call
add
add
in
lahf
xchg
ret
and
(bad)
add
in
jns
(bad)
(bad)
jmp
xor
xor
scas
mov
xor
and
pop
jno
(bad)
(bad)
(bad)
call
xor
xchg
mov
jle
(bad)
out
mov
xor
cmps
pop
add
mov
jns
jmp
xchg
js
jp
cmp
mov
xor
xlat
fisttp
stc
repz
push
(bad)
(bad)
(bad)
jmp
loopne
cmp
jl
xchg
or
shl
stc
iret
mov
xchg
mov
(bad)
(bad)
dec
adc
pop
mov
jge
jl
inc
xchg
mov
icebp
adc
jmp
(bad)
(bad)
(bad)
(bad)
jmp
ins
pop
in
ficomp
adc
and
dec
xchg
ins
mov
pop
mov
xchg
and
(bad)
dec
cmp
(bad)
push
add
arpl
jmp
mov
mov
(bad)
(bad)
(bad)
(bad)
call
pop
cmp
mov
rcl
arpl
leavew
div
xor
not
push
mov
les
mov
(bad)
(bad)
call
imul
mov
or
rol
sbb
lods
into
jmp
jno
sbb
cmp
(bad)
dec
popf
push
jae
cdq
es
div
or
jp
jns
sub
mov
(bad)
(bad)
(bad)
mov
xor
push
lods
out
vmovshdup
or
hlt
aam
popf
mov
add
(bad)
inc
mov
dec
jnp
not
mov
dec
aad
call
(bad)
push
cmp
xlat
inc
fisub
add
pop
pop
cmp
push
pop
arpl
sbb
lods
add
and
out
(bad)
(bad)
(bad)
(bad)
mov
and
dec
scas
icebp
ins
push
jmp
inc
daa
call
(bad)
call
icebp
jo
lods
enter
lea
aad
in
shl
into
add
(bad)
(bad)
dec
int
jbe
aaa
and
mov
pop
repnz
leave
inc
cpuid
test
repz
call
(bad)
jge
(bad)
fcomip
inc
inc
adc
and
xchg
(bad)
jmp
arpl
push
popf
popa
push
out
vcvtss2si
in
mov
mov
(bad)
out
push
push
mov
mov
inc
test
add
es
in
outs
jmp
xor
int3
(bad)
mov
lahf
xchg
xor
call
out
jmp
ss
dec
push
loopne
mov
adc
cwde
ss
mov
jbe
mov
(bad)
jmp
aas
adc
nop
mov
lock
das
and
xor
sbb
mov
or
pushf
aaa
cld
(bad)
push
add
dec
je
sar
and
push
xor
mov
cmp
and
sar
(bad)
call
jne
cdq
(bad)
ss
jb
mov
inc
mov
sbb
mov
(bad)
(bad)
(bad)
push
cli
jge
rcr
and
pop
dec
fiadd
repz
ret
es
push
xchg
fidivr
mov
mov
movs
popf
push
sub
sahf
push
fdivr
fimul
push
(bad)
or
or
test
(bad)
(bad)
(bad)
jmp
ret
sub
cwde
pop
not
aas
in
or
dec
and
test
inc
mov
sahf
fisttp
loop
sub
aas
dec
aad
fst
lea
push
mov
hlt
(bad)
(bad)
call
dec
xchg
sbb
test
lods
retf
dec
clc
jge
mov
pop
dec
pop
mov
pop
mov
xchg
ror
mov
ret
popf
mov
sub
cwde
and
jmp
sti
cdq
xchg
mov
sbb
in
xchg
adc
inc
mov
or
lea
jl
inc
xchg
mov
lea
inc
(bad)
call
ds
mov
ins
mov
lods
push
push
mov
xchg
js
push
pusha
test
inc
sbb
add
(bad)
(bad)
(bad)
call
js
bnd
jnp
aad
sbb
pop
retf
or
pop
fisttp
test
(bad)
push
mov
adc
in
mov
dec
fsubr
mov
retf
push
(bad)
push
(bad)
jmp
mov
enter
cmp
mov
mov
(bad)
(bad)
(bad)
dec
pop
xchg
xor
push
cmp
ds
xchg
sbb
mov
sbb
inc
mov
cmp
std
test
daa
cmp
adc
fisttp
call
ret
cmp
out
inc
xchg
mov
clc
lea
(bad)
jg
aas
lds
fldcw
sti
xchg
imul
pop
popf
pop
jmp
jmp
sbb
dec
mov
and
xlat
or
or
data16
mov
fdivr
stos
mov
lds
stc
lods
mov
xchg
dec
cli
fmul
add
inc
fcom
loop
imul
pop
or
aad
pop
sub
clc
das
rcr
lea
lea
retf
xchg
cmp
idiv
sbb
mov
(bad)
lahf
not
xor
fimul
and
jl
inc
add
call
or
pop
dec
mov
push
pushf
rcl
mov
std
inc
shl
mov
fucom
mov
popa
adc
pop
pusha
test
xchg
push
(bad)
fcomip
ja
test
in
sbb
pop
into
aad
jp
movs
mov
dec
mov
out
jle
scas
addr16
push
cmps
(bad)
out
lahf
sar
and
scas
sti
(bad)
(bad)
(bad)
(bad)
jmp
out
sub
mov
pop
pop
(bad)
or
aam
shr
lea
fld
sti
cs
mov
dec
sub
xor
test
out
(bad)
jmp
jne
jbe
mov
lea
js
xchg
mov
lahf
cmps
mov
adc
inc
xchg
into
or
jbe
and
popa
in
(bad)
jg
(bad)
push
call
inc
scas
scas
fstp
fdivp
xor
outs
(bad)
jmp
or
dec
pusha
mov
add
mov
mov
loopne
xchg
ins
cmc
pushf
inc
pop
jmp
adc
pop
ds
(bad)
(bad)
call
into
xor
cld
dec
fistp
mov
jecxz
rcl
jp
(bad)
std
push
inc
(bad)
nop
(bad)
(bad)
(bad)
dec
fidivr
dec
fimul
push
fstp
adc
pop
cdq
sub
jl
jge
lea
sbb
(bad)
(bad)
jmp
mov
inc
test
add
lahf
mov
cwde
ret
pop
add
fsubr
xchg
ja
xchg
jb
(bad)
(bad)
(bad)
(bad)
jl
leave
pop
jmp
pop
sbb
xrelease
movs
jp
xchg
pop
test
cmp
sbb
(bad)
(bad)
dec
les
retf
outs
adc
fcomp
ror
xchg
jle
mov
cwde
cmp
clc
or
sbb
xor
mov
or
(bad)
aam
aam
adc
retf
gs
fistp
imul
aas
xor
pop
pop
mov
push
pop
mov
test
call
lock
(bad)
out
cmp
(bad)
in
(bad)
(bad)
dec
ret
inc
leave
mov
movs
or
outs
mov
pushf
pop
in
sbb
ret
(bad)
dec
adc
or
leave
test
ins
lods
fdiv
popa
les
adc
jmp
sar
(bad)
cld
fmulp
mov
sbb
mov
inc
clc
arpl
mov
popf
mov
std
pop
pop
and
cmps
mov
jmp
dec
lods
leave
ret
test
jmp
(bad)
sbb
iret
mov
sbb
ins
popf
inc
cwde
das
sar
xchg
push
push
scas
sub
bnd
mov
mov
popf
(bad)
fidivr
(bad)
dec
push
sub
lock
cli
adc
(bad)
les
mov
ins
sti
fcom
mov
jmp
sti
sbb
dec
jecxz
mov
fst
(bad)
stc
enter
cmp
rol
(bad)
mov
inc
sbb
(bad)
sub
xchg
pop
jnp
hlt
aad
dec
ins
adc
cmp
out
std
das
cli
(bad)
push
adc
fs
popf
xchg
cs
mov
dec
mov
cmp
bound
out
add
mov
mov
sbb
outs
cli
dec
inc
sbb
(bad)
iret
outs
jle
sahf
rcl
(bad)
fist
lock
add
(bad)
(bad)
inc
(bad)
dec
or
jnp
(bad)
fcom
pushf
jp
mov
imul
mov
mov
dec
movs
inc
jae
(bad)
call
popf
int
dec
test
push
fld
cmp
(bad)
(bad)
jmp
sar
add
movs
adc
call
dec
(bad)
sbb
or
aaa
push
scas
scas
into
jmp
pop
pop
cdq
cmp
nop
ror
aad
push
sbb
js
dec
add
mov
scas
mov
mov
pop
dec
pop
mov
push
std
mov
sahf
xchg
inc
pop
add
push
cmps
clc
scas
and
loope
call
cdq
jmp
sbb
mov
mov
pop
sub
ficom
push
adc
ror
out
into
sub
sar
(bad)
dec
ds
(bad)
test
into
int
retf
std
(bad)
jmp
cmp
ds
cmp
enter
pop
dec
pop
outs
int3
stc
call
(bad)
(bad)
fcomp
pushf
push
sbb
xchg
or
mov
ins
add
inc
pushf
dec
sbb
jmp
into
psubsb
cmp
mov
iret
rcr
arpl
add
(bad)
outs
(bad)
(bad)
(bad)
mov
push
cli
shl
call
pusha
add
jle
ret
out
pop
call
scas
pop
cmc
push
mov
xchg
jle
jge
enter
push
pusha
sub
aad
movs
mov
(bad)
xor
fs
cmp
(bad)
jp
push
(bad)
mov
add
add
inc
aas
ret
or
(bad)
(bad)
(bad)
push
fwait
mov
jl
cmc
enter
pop
xor
bound
pusha
push
ret
leave
fnstcw
jmp
dec
mov
sub
jl
sbb
in
dec
mov
frstor
(bad)
(bad)
fcomip
out
call
xchg
jecxz
fmul
and
pop
call
aaa
cwde
aaa
ret
mov
scas
mov
into
pop
xchg
aas
push
loope
paddb
test
inc
or
hlt
jne
repnz
jb
sbb
jmp
mov
fwait
pop
adc
jb
es
mov
stc
cli
or
jbe
iret
lock
pop
hlt
pop
cmp
leave
jg
(bad)
cmp
pop
xchg
sub
(bad)
(bad)
push
jp
cmc
pop
xchg
xchg
mov
mov
pop
stos
dec
fimul
fdivr
ds
adc
mov
xlat
outs
clc
call
mov
pop
dec
test
into
mov
dec
jg
fmul
dec
ins
push
push
stos
mov
lock
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
cmps
fisttp
aas
lock
fsub
cmps
or
movs
jns
out
stos
ins
xor
in
(bad)
(bad)
fdiv
mov
mov
test
test
cmps
aas
or
(bad)
(bad)
jg
inc
push
scas
(bad)
mov
iret
or
ret
cli
or
jg
xchg
aad
loope
sbb
adc
sbb
es
repz
std
(bad)
call
(bad)
pusha
adc
push
xchg
clc
call
mov
out
pop
mov
inc
nop
into
loope
cs
repz
add
pushf
bound
into
xor
inc
dec
test
stos
sahf
mov
push
aam
out
adc
(bad)
(bad)
call
in
dec
pop
sahf
repz
xchg
jl
hlt
lahf
cmc
in
pcmpgtd
cmp
test
pop
adc
lock
mov
(bad)
(bad)
dec
(bad)
sub
fiadd
dec
std
mov
mov
dec
pushf
(bad)
(bad)
mov
mov
stos
and
mov
mov
mov
pop
hlt
mov
mov
jg
or
mov
inc
fld
fdiv
(bad)
(bad)
call
imul
into
inc
data16
dec
arpl
mov
add
cld
in
(bad)
(bad)
mov
add
fisttp
frstor
retf
cmc
pop
xor
pop
add
mov
xchg
sub
pushf
pop
add
lds
sbb
(bad)
fist
int3
icebp
jmp
jg
test
retf
test
(bad)
(bad)
inc
enter
xor
xchg
dec
(bad)
mov
pop
repnz
mov
mov
(bad)
jmp
loopne
add
cmp
inc
into
cmps
in
xlat
xor
arpl
mov
lea
cmp
fcomip
(bad)
call
add
push
xchg
adc
fld
lock
sar
stos
loope
pop
sub
cmp
in
push
dec
int3
xchg
sbb
add
mov
fdiv
xchg
ret
xchg
dec
lea
leave
mov
inc
ds
dec
(bad)
sub
in
movs
push
xor
xchg
lahf
aad
pop
mov
test
inc
mov
sbb
out
cmp
dec
cmp
icebp
(bad)
(bad)
(bad)
inc
jnp
iret
adc
(bad)
fldcw
add
out
push
cmp
call
(bad)
(bad)
(bad)
inc
sbb
adc
jmp
out
adc
adc
xchg
shl
push
imul
and
clc
retf
retf
mov
(bad)
(bad)
(bad)
call
je
mov
add
push
inc
inc
jnp
inc
sub
add
ss
test
dec
add
mov
in
inc
sbb
in
mov
imul
in
leave
mov
out
inc
in
xchg
or
mov
popf
cdq
fcomip
pusha
aaa
jne
or
pushf
xor
ins
(bad)
(bad)
(bad)
inc
jge
movs
add
dec
fdivr
push
fild
fcmovnbe
adc
mov
in
jbe
(bad)
(bad)
(bad)
inc
xchg
mov
or
jmp
out
je
jmp
iret
fldenv
(bad)
(bad)
call
out
inc
inc
inc
pop
(bad)
in
mov
test
fadd
(bad)
(bad)
mov
sub
test
push
sbb
push
xchg
cdq
neg
shl
(bad)
(bad)
inc
push
aas
bound
bound
jns
lea
push
pop
and
(bad)
(bad)
(bad)
call
les
xchg
dec
jg
out
ins
pop
mov
test
or
mov
pop
daa
call
inc
fwait
call
ss
or
mov
iret
xchg
mov
xchg
inc
adc
(bad)
arpl
(bad)
(bad)
jmp
ror
mov
push
fbstp
push
ins
and
pop
cmp
add
sub
(bad)
(bad)
(bad)
inc
add
retf
adc
pop
pop
add
pop
push
sbb
sbb
(bad)
push
int
(bad)
(bad)
(bad)
(bad)
or
fcomp
pop
ror
ss
jge
enter
fstp
dec
jns
or
sub
mov
loopne
fnstenv
mov
cmp
and
or
call
iret
xor
cmps
mov
jno
hlt
push
xchg
in
outs
nop
outs
scas
mov
mov
mov
jmp
sbb
out
dec
xchg
xchg
in
stc
sub
test
rol
mov
jle
retf
(bad)
(bad)
inc
loopne
inc
lea
mov
scas
dec
(bad)
sbb
add
mov
movs
cmp
or
enter
inc
aaa
outs
push
pushf
xor
jmp
out
or
lea
pop
leave
ja
or
dec
hlt
sti
in
iret
data16
xor
pop
mov
aas
aas
jle
sbb
(bad)
(bad)
(bad)
call
sbb
mov
mov
xchg
movs
jmp
xor
or
les
loope
xchg
outs
pusha
(bad)
(bad)
jmp
out
mov
lods
mov
push
mov
mov
or
lahf
mov
dec
(bad)
out
clc
call
cdq
in
dec
rcl
pop
push
mov
into
mov
mov
gs
std
cmps
(bad)
cld
jmp
inc
loope
lahf
stc
dec
ror
add
mov
addr16
mov
jo
mov
(bad)
(bad)
(bad)
jmp
fwait
lods
in
out
mov
lahf
and
or
pop
xchg
mov
int
cdq
sbb
aad
jmp
sahf
mov
or
xor
call
and
add
mov
or
xchg
js
sahf
aaa
jmp
xlat
xchg
aas
sub
(bad)
(bad)
(bad)
fbld
sahf
retf
imul
fcmovb
in
call
out
jae
or
mov
aas
nop
clc
(bad)
jmp
mov
shl
add
push
or
(bad)
(bad)
mov
dec
movs
push
out
sub
mov
fidiv
(bad)
mov
hlt
inc
cld
(bad)
in
jae
xchg
add
dec
(bad)
mov
pop
ret
(bad)
mov
clc
jns
(bad)
jg
push
mov
xchg
fldcw
(bad)
(bad)
(bad)
(bad)
fsub
lds
jecxz
ds
inc
test
imul
pop
sar
lock
pop
(bad)
call
(bad)
(bad)
mov
data16
loop
sar
(bad)
cmp
push
jne
dec
lods
push
(bad)
mov
cmp
pop
add
loopne
(bad)
(bad)
push
cmp
ffree
sbb
sub
jne
and
sbb
sub
inc
adc
cld
mov
jmp
pop
pop
sar
fcomp
push
pushf
jne
pop
ins
dec
movs
stos
jecxz
jle
outs
sahf
fscale
mov
aaa
nop
pop
dec
aas
aas
das
test
(bad)
(bad)
(bad)
call
pop
rcl
sar
xor
dec
fwait
in
enter
(bad)
pop
fs
mov
sar
push
lods
ror
clc
push
int3
sbb
call
fs
fldenv
adc
test
sahf
aas
aas
(bad)
(bad)
(bad)
jmp
push
out
push
sbb
jg
sbb
int
fadd
out
nop
outs
ss
scas
(bad)
(bad)
out
cli
add
inc
pusha
cmps
and
add
mov
(bad)
pop
cmp
cdq
mov
loop
call
push
enter
jge
into
lods
dec
rcr
push
pop
sub
xchg
ss
add
sub
sub
xchg
xor
call
fsub
mov
jp
aad
mov
lock
int
or
cwde
mov
sbb
int3
mov
pop
xchg
or
leave
sbb
rep
sahf
test
cmps
mov
popa
push
std
hlt
ret
(bad)
jmp
pop
sahf
lods
sbb
pushf
sub
xor
std
and
and
(bad)
(bad)
(bad)
push
or
add
sub
dec
mov
retf
or
xchg
aad
ror
nop
sub
(bad)
jmp
neg
popf
push
mov
mov
jg
loope
(bad)
xor
jo
inc
lahf
push
cwde
jno
push
or
pmaddwd
jg
(bad)
inc
cmp
push
jae
rcl
xchg
inc
pop
popf
cwde
popa
shr
mov
(bad)
(bad)
inc
(bad)
fisub
iret
ror
ss
pop
mov
mov
(bad)
(bad)
jg
ss
cmp
rcr
xchg
push
mov
pop
retf
sbb
ret
or
and
mov
jne
stc
mov
ror
ins
lods
(bad)
(bad)
(bad)
push
dec
loope
jmp
jns
add
lahf
sbb
loop
dec
ret
xchg
mov
test
loope
(bad)
aas
stos
mov
shr
test
fdivr
mov
lahf
dec
adc
push
jmp
dec
cmp
in
loop
pop
xchg
not
movs
pop
mov
lods
inc
inc
ret
mov
cdq
xor
or
jle
int
cmp
push
jne
jg
aaa
dec
lods
pop
mov
push
mov
(bad)
jmp
mov
imul
fnstcw
xchg
and
sub
push
daa
lods
mov
clc
(bad)
call
pop
or
pop
dec
pop
popf
je
or
push
icebp
scas
jecxz
jle
cmp
std
lods
mov
mov
cmps
push
movs
or
call
inc
lea
jmp
xor
call
(bad)
fsubr
pop
js
and
jg
cmc
jmp
stos
mov
sbb
sti
int3
jle
into
arpl
or
sbb
adc
and
adc
mov
popa
cmp
or
jl
test
in
inc
pop
mov
nop
cmp
scas
push
sub
adc
dec
add
mov
or
mov
pop
aad
popf
arpl
xlat
enter
sbb
stos
(bad)
aas
push
xlat
sbb
jns
jp
out
in
sti
sar
(bad)
jmp
inc
mov
xchg
mov
cmps
stc
ins
pusha
cmc
(bad)
adc
(bad)
(bad)
(bad)
(bad)
fstp
cwde
loopne
sbb
call
push
into
sbb
imul
lds
scas
icebp
(bad)
jg
scas
(bad)
mov
pop
retf
cli
dec
ror
add
mov
iret
xor
xchg
std
shl
ins
daa
dec
cmc
pop
arpl
add
inc
xlat
and
lock
clc
nop
push
add
(bad)
jmp
jne
fdiv
mov
popa
cmp
aad
or
xor
dec
es
dec
lods
pop
mov
(bad)
(bad)
(bad)
call
scas
(bad)
mov
iret
mov
push
cmp
daa
int3
and
lock
xor
push
jbe
(bad)
(bad)
(bad)
jmp
or
mov
arpl
lds
sbb
sar
(bad)
dec
and
jns
scas
out
push
sub
and
je
test
leave
xchg
stos
(bad)
(bad)
(bad)
inc
sub
scas
loop
loop
mov
cdq
je
pop
rcl
mov
stc
call
jmp
add
aam
xor
xchg
adc
push
pop
out
ds
ror
movs
sar
(bad)
(bad)
(bad)
(bad)
jmp
rol
cmp
cmc
xchg
(bad)
xchg
pop
iret
popf
xor
cmp
fild
mov
sub
(bad)
inc
mov
push
(bad)
psubsb
arpl
mov
cmps
xor
ffree
or
fmul
outs
mov
xor
(bad)
(bad)
fistp
jbe
jl
test
out
aad
sub
mov
(bad)
mov
cli
(bad)
push
xchg
push
(bad)
(bad)
fimul
nop
mov
scas
jle
mov
arpl
cmp
adc
lea
outs
call
dec
in
sub
ret
jg
inc
mov
lods
adc
ret
(bad)
mov
xor
xor
ins
cs
dec
clc
or
call
outs
add
push
fsubr
movs
ins
into
mov
jmp
rcl
int3
and
dec
cmp
adc
scas
out
mov
(bad)
(bad)
call
dec
add
fisttp
sbb
pushf
and
pop
ins
dec
hlt
scas
mov
jle
cmp
fwait
mov
sbb
cmps
dec
icebp
sar
(bad)
dec
or
push
fadd
out
fistp
mov
jecxz
push
add
or
adc
and
adc
scas
mov
dec
(bad)
sti
call
mov
inc
pop
enter
nop
adc
jbe
test
mov
jmp
inc
mov
sbb
adc
(bad)
ins
bound
inc
jge
inc
xor
mov
out
xchg
lods
push
lahf
lea
mov
push
pushf
bound
stos
stos
loope
push
jp
retf
xchg
dec
sbb
retf
(bad)
call
jns
jg
mov
in
lods
xchg
movs
sbb
fdiv
xchg
fcmovnbe
xor
jmp
cmps
mov
push
pop
and
inc
sbb
mov
mov
pop
push
into
dec
popf
push
xlat
add
stc
xchg
lock
mov
add
mov
popf
stos
sbb
int3
sub
mov
jg
lods
shl
pop
xor
pop
out
push
nop
out
inc
push
jle
(bad)
mov
out
out
sahf
je
xlat
(bad)
(bad)
call
lds
mov
retf
imul
(bad)
call
pop
push
mov
mov
fs
add
and
call
(bad)
popf
xlat
pop
mov
mov
and
xchg
ds
lock
scas
xchg
or
sar
dec
cmp
fiadd
mov
xchg
out
enter
push
xchg
pop
out
daa
xor
enter
mov
addr16
push
xchg
or
mov
pop
mov
pop
int
test
or
(bad)
(bad)
jmp
mul
stos
jecxz
test
call
fsub
mov
mov
xchg
mov
(bad)
inc
push
xchg
enter
ficomp
xchg
xchg
out
scas
sub
mov
bound
push
cs
aad
mov
fdivr
leave
pop
adc
mov
xchg
cmp
(bad)
pop
cmp
jle
(bad)
(bad)
(bad)
(bad)
in
loop
pop
xchg
cs
mov
sti
adc
jl
xchg
outs
jo
mov
sub
or
cmp
je
sbb
(bad)
(bad)
jg
outs
push
or
frndint
xchg
sahf
mov
xchg
daa
popf
ja
dec
xlat
das
mov
outs
jnp
adc
and
jmp
nop
dec
movs
sbb
sbb
xchg
inc
mov
out
mov
and
mov
imul
in
int3
push
push
inc
(bad)
(bad)
(bad)
dec
call
int
sbb
stc
scas
jecxz
dec
(bad)
lods
lahf
dec
sub
jnp
xor
or
inc
add
nop
inc
pop
ja
rcl
int3
jg
call
jle
mov
dec
rcr
mov
adc
push
jmp
lods
push
sub
inc
xor
xlat
out
(bad)
scas
add
(bad)
fcomi
cdq
cmp
(bad)
push
xlat
(bad)
call
aaa
ja
sub
iret
cld
pop
aad
dec
dec
js
ror
mov
xor
int3
jnp
mov
mov
retf
inc
fnstenv
les
sti
idiv
(bad)
(bad)
jmp
fiadd
push
pop
jge
pop
neg
loope
out
push
rcl
pop
push
cwde
dec
popf
cmps
aas
push
repnz
(bad)
sahf
cld
ret
nop
addr16
movs
inc
loope
(bad)
(bad)
(bad)
dec
cli
dec
nop
int3
jge
fistp
scas
xor
xor
(bad)
mov
inc
inc
sub
(bad)
(bad)
dec
scas
out
out
mov
sahf
and
cmp
pop
xchg
mov
into
outs
fwait
dec
(bad)
xchg
(bad)
mov
sahf
mov
mov
loope
and
adc
pop
cwde
and
ds
xchg
idiv
(bad)
push
(bad)
jmp
and
aam
sub
or
mov
jg
mov
pop
frstor
retf
fs
out
jno
mov
out
inc
jmp
imul
outs
mov
outs
clc
call
pushf
imul
jecxz
or
cs
mov
sub
push
push
stos
fsub
xor
xchg
rol
fs
or
je
or
mov
cmps
mov
(bad)
(bad)
(bad)
(bad)
mov
xchg
int3
dec
(bad)
out
sbb
mov
outs
adc
cmp
xchg
sbb
(bad)
(bad)
dec
mov
lds
inc
cmps
xchg
jae
dec
inc
lahf
inc
fs
pop
or
dec
shl
jle
push
inc
lock
(bad)
(bad)
call
mov
int
data16
or
ret
movs
sub
(bad)
(bad)
(bad)
jg
xor
pop
pop
aad
shl
not
out
jae
sbb
push
popa
dec
or
test
loop
dec
call
mov
int3
inc
xor
pop
ret
sub
shr
(bad)
(bad)
(bad)
push
sbb
arpl
pop
or
dec
xchg
js
add
cmp
push
aaa
dec
or
or
(bad)
call
test
icebp
sub
int
sbb
or
lds
(bad)
(bad)
inc
sar
call
dec
xchg
icebp
shr
and
dec
(bad)
(bad)
(bad)
jg
aaa
sbb
pop
xlat
sbb
mov
(bad)
push
push
mov
sbb
cwde
inc
fs
pop
pop
test
out
(bad)
jmp
inc
not
mov
leave
adc
dec
(bad)
xchg
xor
(bad)
(bad)
(bad)
dec
dec
inc
xor
pop
xlat
dec
aad
jns
push
inc
mov
sbb
into
adc
or
(bad)
(bad)
mov
jecxz
inc
test
int3
inc
xor
shl
add
aaa
jmp
sbb
sahf
sbb
ror
in
xchg
push
inc
add
jne
dec
pop
into
inc
xor
pop
or
cs
and
stos
(bad)
(bad)
inc
inc
sahf
inc
popa
sbb
rcr
aad
jl
add
sar
(bad)
jg
fwait
pop
and
or
sub
add
cmp
inc
sbb
pop
(bad)
jmp
(bad)
sbb
test
jb
push
adc
or
dec
shl
sub
add
icebp
dec
push
sar
into
adc
or
push
adc
sar
call
pop
xlat
dec
shl
and
jb
sbb
int3
adc
call
ss
or
sub
push
adc
dec
adc
jo
pop
and
push
xlat
mov
xchg
push
inc
movs
aad
sbb
inc
dec
test
jnp
add
and
fimul
int3
inc
xor
or
pop
sbb
cmps
shr
and
data16
mov
or
xlat
out
xchg
add
sar
call
cld
push
dec
or
test
repnz
inc
leave
inc
fs
pop
pop
rcr
clc
jmp
sbb
call
mov
adc
or
cmp
das
and
out
xchg
add
hlt
cmp
(bad)
call
aas
pop
cmp
cdq
push
xchg
ins
lods
call
or
adc
cmp
inc
(bad)
cmc
pop
xchg
in
pop
aam
cmp
mov
mov
(bad)
mov
aas
lock
jb
xchg
inc
xchg
mov
pop
repnz
fisttp
std
(bad)
(bad)
cmp
xchg
mov
or
bound
inc
out
jbe
(bad)
(bad)
jg
cmp
fiadd
sub
inc
fsubp
cmps
push
nop
leave
mov
data16
call
jmp
loope
bound
pop
jo
mov
mov
loopne
(bad)
(bad)
in
and
daa
jmp
cmp
jmp
sar
fld
(bad)
jg
dec
aas
xor
or
mov
jmp
mov
mov
push
sar
(bad)
sub
xor
or
(bad)
fsubr
lahf
scas
inc
dec
outs
mov
loopne
call
test
jmp
into
outs
(bad)
(bad)
(bad)
jmp
sub
retf
xchg
inc
out
pop
dec
outs
int3
cwde
sbb
mov
out
dec
ds
movs
push
xor
jle
pop
(bad)
(bad)
(bad)
(bad)
ds
cdq
sub
inc
inc
and
test
mov
sahf
mov
into
mov
es
(bad)
dec
clc
mov
and
std
rep
xor
es
mov
es
add
or
mov
mov
mov
push
stos
(bad)
cmps
in
das
or
cmc
ror
(bad)
lahf
sbb
stos
(bad)
(bad)
(bad)
inc
(bad)
fmul
xchg
adc
cmp
imul
icebp
cwde
xor
(bad)
inc
add
cli
(bad)
mov
icebp
cld
movs
mov
fcmovne
xchg
call
(bad)
jmp
(bad)
and
rol
xchg
push
data16
es
xchg
frstor
(bad)
(bad)
jmp
cld
ret
inc
and
sub
jecxz
nop
outs
push
sbb
test
mov
call
sbb
mov
inc
inc
mov
sub
sbb
xchg
mov
jecxz
ds
mov
ficom
frstor
cld
mov
xchg
jecxz
fidivr
loopne
out
rcr
leave
pop
mov
(bad)
out
push
sbb
lea
arpl
mov
xlat
shl
pushf
(bad)
mov
(bad)
(bad)
call
xchg
add
xchg
addr16
push
inc
hlt
sbb
mov
nop
dec
mov
and
push
stos
sbb
xsaves
cmc
xchg
lock
xor
xchg
loopne
mov
dec
cmp
sub
xchg
mov
scas
fcomi
mov
stos
cmp
sar
(bad)
(bad)
fiadd
(bad)
inc
(bad)
push
daa
jmp
xlat
fsub
xchg
fcomp
or
lock
sti
pop
or
es
inc
stc
into
adc
xchg
jp
(bad)
addr16
jge
sbb
inc
mov
push
sbb
inc
jmp
jg
dec
jno
fistp
fmulp
(bad)
(bad)
(bad)
push
mov
add
ror
lea
iret
(bad)
call
mov
pop
mov
(bad)
(bad)
mov
mov
fistp
movs
xchg
or
aad
(bad)
out
fistp
sbb
icebp
(bad)
(bad)
(bad)
cmp
popf
xchg
loope
ret
dec
in
sbb
fwait
push
inc
repz
in
add
jmp
and
nop
push
jle
setb
cmps
xchg
movs
mov
out
es
pop
xchg
sahf
fdivrp
mov
cmp
inc
xlat
jmp
stc
mov
(bad)
inc
dec
xor
(bad)
hlt
out
ins
fidiv
jmp
xchg
clc
das
stc
stc
adc
(bad)
(bad)
call
jb
jl
ins
or
sbb
(bad)
out
fisttp
push
or
lods
cld
or
pop
and
inc
scas
cwde
clc
(bad)
jmp
or
jge
shl
push
cdq
jle
sbb
inc
fwait
mov
push
sbb
inc
out
(bad)
(bad)
jmp
or
mov
(bad)
lock
add
xchg
or
xchg
mov
(bad)
(bad)
dec
es
loope
mov
pop
in
retf
cwde
dec
sti
adc
(bad)
(bad)
mov
stos
fmul
xchg
fsubr
mov
dec
rol
bound
call
add
add
push
cld
addr16
push
adc
sbb
xchg
push
lea
jmp
out
mov
fisttp
(bad)
mov
aas
stos
fimul
mov
scas
jmp
aas
test
(bad)
jmp
mov
xor
push
(bad)
(bad)
dec
lods
mov
fld
sti
inc
mov
cmovge
(bad)
(bad)
call
(bad)
vminps
in
in
pop
dec
stos
lods
or
inc
test
(bad)
cld
(bad)
(bad)
inc
popa
movlhps
js
sbb
shr
retf
dec
inc
inc
in
test
jno
(bad)
(bad)
(bad)
fistp
lahf
test
fcmovnu
daa
stos
mov
xchg
mov
cmp
fwait
(bad)
xchg
call
dec
mov
(bad)
mov
dec
add
(bad)
pop
sbb
cmp
cwde
xchg
loop
sti
(bad)
inc
push
sbb
bound
rol
(bad)
dec
fistp
loop
jg
xchg
push
jns
pop
ret
das
mov
lods
cmp
fmul
fdivr
mov
pop
jno
xchg
cmp
inc
xchg
cli
mov
mov
dec
xor
ins
(bad)
(bad)
(bad)
jmp
fisubr
fcmovnbe
pop
test
jg
cld
push
enter
and
js
ins
cmovp
(bad)
jg
ror
mov
mov
or
and
inc
test
(bad)
jge
cmp
outs
inc
data16
cwde
jle
inc
popf
mov
push
sbb
nop
fild
jmp
(bad)
dec
sub
jo
xchg
(bad)
pushf
jecxz
cmp
fstp
fcom
fidivr
(bad)
push
mov
lds
xchg
out
(bad)
pop
in
retf
std
adc
ins
(bad)
(bad)
(bad)
mov
cmps
lds
xor
sub
(bad)
fldenv
inc
ret
(bad)
cmp
dec
push
sti
rcr
out
add
xchg
dec
fcos
(bad)
call
std
(bad)
xchg
es
push
sub
or
jle
xchg
rep
xor
xchg
retf
mov
call
in
scas
cmps
push
mov
out
sbb
scas
fldenv
dec
cmp
ret
(bad)
sub
cld
inc
into
fldcw
xor
or
mov
or
mov
in
pop
sbb
prefetch
inc
clc
pop
cmc
(bad)
cli
popf
inc
sbb
or
test
jmp
ja
fiadd
mov
sahf
sub
dec
and
fcomp
movs
ins
scas
fcomp
ffreep
(bad)
fcmovu
and
mov
nop
mov
fstp
retf
dec
pusha
dec
cli
adc
(bad)
ficomp
or
xchg
mov
fidivr
jmp
(bad)
mov
fstp
lahf
xchg
loop
fiadd
push
test
test
add
test
fist
(bad)
dec
push
sub
shr
xchg
cmps
mov
mov
xchg
popf
fbld
jg
movs
jns
dec
nop
cmp
inc
xlat
in
mov
sbb
or
cld
fdivp
in
cmp
xor
scas
jg
dec
push
(bad)
(bad)
pop
test
das
(bad)
sti
pop
enter
in
js
outs
or
(bad)
mov
mov
movs
fsubr
pop
sbb
mov
clc
jmp
fiadd
xor
inc
pop
inc
test
pop
icebp
(bad)
in
retf
stc
push
sbb
sbb
cwde
fimul
pop
xchg
lea
(bad)
int
mov
das
rcr
movs
mov
push
push
xchg
(bad)
(bad)
scas
mov
jg
(bad)
push
xchg
mov
sbb
dec
loope
mov
push
cld
stos
fbld
shl
fisubr
mov
sbb
shl
aas
leave
cmps
mov
into
xchg
jecxz
(bad)
cmp
dec
in
test
scas
ficomp
jecxz
pop
mov
nop
sbb
xchg
push
fisttp
repnz
jg
movs
addr16
fisttp
enter
sub
sbb
cmp
mov
sbb
jmp
call
test
jo
jg
jle
lea
stos
adc
(bad)
cmp
sub
rcr
push
pop
mov
out
shr
call
jb
inc
(bad)
popf
inc
test
xor
lahf
jns
and
pop
loopne
inc
leave
mov
push
dec
inc
movs
rcr
add
pop
xchg
clc
jmp
cmp
mov
lods
ficomp
push
fcmovnb
pop
pop
xchg
fcomp
jmp
cld
add
clc
mov
int
mov
cmp
adc
push
movs
lock
rcr
jle
push
loopne
cld
adc
aas
pushf
mov
add
push
jl
call
movs
aad
push
lods
bound
in
ficom
inc
and
pop
ret
mul
dec
inc
fist
cmp
pop
in
sub
lock
mov
jg
movs
mov
imul
ins
mov
(bad)
dec
lock
cli
jl
call
and
xlat
mov
(bad)
(bad)
sub
(bad)
pop
sbb
les
test
adc
movs
sub
xor
adc
jle
sbb
inc
iret
(bad)
int
push
call
loopne
sbb
call
cs
dec
movs
ret
mov
cmp
(bad)
jg
data16
lds
push
xchg
(bad)
fidiv
mov
(bad)
mov
sub
mov
mov
dec
mov
dec
out
mov
movs
(bad)
icebp
inc
xor
movs
mov
or
rol
(bad)
fidivr
enter
sar
ficom
add
in
or
rcr
xchg
call
stos
add
dec
ficomp
xchg
push
fisttp
les
xchg
lock
loop
or
xor
cdq
fisubr
xchg
cmp
ins
cli
mov
mov
in
pop
lock
clc
jmp
aam
mov
fst
pop
sar
jp
adc
(bad)
xor
pop
dec
(bad)
loopne
or
mov
jmp
push
test
mov
inc
(bad)
lahf
inc
sbb
or
movs
dec
cli
inc
int
sar
inc
sub
out
retf
dec
inc
adc
fld
lock
fcmovne
loop
mov
das
shr
mov
fcmovb
ud2
xchg
(bad)
jae
lock
add
push
into
clc
mov
mov
or
es
or
lea
mov
cld
add
dec
xlat
test
mov
fnstcw
sbb
cmps
cmp
xchg
pop
jae
(bad)
inc
jecxz
pushw
les
inc
cmps
(bad)
(bad)
(bad)
mov
jb
sub
push
ficom
mov
mov
mov
push
mov
mov
scas
test
(bad)
(bad)
(bad)
cmp
or
dec
cmps
push
or
adc
stos
jp
push
inc
adc
add
push
cmp
xchg
or
cld
adc
mov
cdq
add
clc
(bad)
dec
mov
stos
ret
pop
pop
sbb
or
hlt
fistp
jmp
xor
sbb
jmp
cmps
ins
out
pop
rcr
inc
sti
lods
cld
adc
dec
in
adc
(bad)
(bad)
jmp
aam
icebp
mov
(bad)
push
push
pushf
sub
(bad)
stos
or
int3
sub
jmp
mov
mov
push
mov
sbb
(bad)
fnstenv
and
pop
es
push
movs
sbb
xchg
pop
in
push
jns
sub
jmp
push
mov
mov
xchg
jns
(bad)
(bad)
jmp
fsubp
stos
cmp
push
add
sub
xchg
leave
add
in
push
sbb
(bad)
(bad)
(bad)
fidiv
(bad)
mov
mov
ficom
jne
and
std
add
ss
and
dec
clc
aaa
dec
or
(bad)
inc
jns
mov
push
xchg
jg
inc
std
mov
add
cmc
add
fs
in
test
or
push
fbstp
dec
std
xchg
xchg
(bad)
(bad)
(bad)
jmp
cdq
push
aaa
jns
jg
jnp
cmp
jnp
add
mov
fldcw
movs
pusha
movups
mov
cmps
adc
inc
sbb
mov
mov
scas
call
and
fdivr
jmp
push
push
ret
xchg
(bad)
(bad)
(bad)
dec
cwde
sbb
adc
pop
inc
add
jle
cld
inc
iret
popa
in
into
xor
fdivr
cwde
aaa
add
call
mov
shl
pop
inc
call
cmp
sti
retf
les
(bad)
jbe
add
or
clc
mov
fmul
xchg
iret
pop
fist
retf
cdq
arpl
(bad)
out
cli
hlt
addr16
jl
xor
adc
mov
into
loope
in
(bad)
(bad)
(bad)
jg
cmp
les
in
dec
int3
xlat
fcomp
js
ja
cdq
scas
les
mov
inc
(bad)
(bad)
(bad)
push
dec
mov
fsub
int3
mov
xlat
push
scas
jnp
pop
pause
shl
adc
sub
cld
(bad)
(bad)
inc
sbb
pop
and
(bad)
xor
cmp
mov
ins
repnz
push
cmp
cli
jmp
xor
jge
out
sahf
and
cmc
adc
inc
adc
jb
cmps
int
fild
and
fcomip
call
jo
adc
ja
int3
dec
xchg
scas
pop
dec
and
repz
repz
hlt
sbb
(bad)
(bad)
(bad)
push
sub
jl
movs
jmp
xchg
inc
push
and
adc
retf
cmc
sar
loopne
int
(bad)
(bad)
dec
rol
test
mov
pop
imul
fs
xchg
pop
fst
mov
(bad)
(bad)
inc
in
repnz
ret
das
movs
sbb
mov
out
sub
or
(bad)
(bad)
in
cmp
pop
mov
ss
push
aam
inc
std
test
mov
jnp
(bad)
(bad)
(bad)
call
ins
or
out
stc
outs
sbb
pop
push
jnp
and
fcmovnu
fs
clc
popa
push
enter
dec
pop
mov
adc
call
mov
xor
mov
adc
mov
inc
(bad)
(bad)
(bad)
(bad)
out
or
cmc
add
(bad)
mov
fstp
int3
jb
loopne
cmp
xchg
daa
(bad)
(bad)
(bad)
call
add
inc
jl
loopne
sbb
xor
retf
ucomiss
sbb
gs
mov
(bad)
(bad)
push
cdq
lahf
lahf
pushf
cld
add
jns
les
mov
xchg
int3
jne
cdq
fistp
(bad)
(bad)
fbld
xchg
sahf
cmp
cmp
cmc
cmc
mov
pop
jp
(bad)
(bad)
jmp
push
scas
mov
xor
ret
loope
mov
push
and
push
push
add
mov
(bad)
(bad)
(bad)
inc
imul
mov
fld
dec
and
call
shr
ins
(bad)
(bad)
(bad)
(bad)
cmp
ret
or
jl
test
mov
sahf
mov
and
in
test
(bad)
jmp
and
mov
and
and
dec
inc
and
hlt
hlt
mov
(bad)
(bad)
(bad)
call
adc
sar
or
and
push
loope
push
mov
push
add
cmp
jmp
dec
fsubr
jo
or
xchg
fcmove
and
into
clc
push
(bad)
(bad)
(bad)
mov
daa
imul
loopne
adc
arpl
(bad)
jg
ds
test
mov
push
pop
scas
mov
mov
dec
cmp
call
sbb
mov
hlt
xor
cs
(bad)
adc
daa
cld
into
rcr
js
fisttp
jns
loop
xor
imul
dec
cmp
dec
or
call
(bad)
jmp
xor
sbb
lds
xor
mov
test
mov
(bad)
(bad)
call
dec
mov
adc
pop
inc
xor
test
bound
(bad)
or
js
out
(bad)
(bad)
call
cmp
xchg
or
ja
mov
fcom
cmp
stos
(bad)
(bad)
(bad)
jmp
cmp
lds
(bad)
mov
or
ror
es
jp
push
cld
xchg
add
(bad)
(bad)
inc
inc
mov
xchg
xor
sbb
mov
push
fs
cmp
mov
pop
jmp
or
mov
stc
jno
sub
fldcw
out
das
(bad)
(bad)
(bad)
call
test
mov
leave
mov
pop
and
push
fdivr
in
sub
push
(bad)
jge
in
and
push
test
test
out
mov
loopne
mov
std
push
shl
(bad)
(bad)
(bad)
jmp
mov
mov
lods
pop
call
shl
rcl
cmc
or
push
inc
ins
sti
pushf
push
daa
dec
scas
ret
sbb
pop
pop
(bad)
(bad)
(bad)
jmp
ds
fmul
outs
hlt
cmp
sti
mov
(bad)
jo
xor
test
(bad)
(bad)
(bad)
fcomp
and
lock
push
and
lods
xchg
loop
shl
(bad)
(bad)
(bad)
dec
rol
inc
adc
sub
jae
push
and
cmp
repz
pop
xor
sub
(bad)
(bad)
inc
add
xor
sub
call
lds
pop
(bad)
(bad)
call
ret
out
sub
into
les
xor
fsub
(bad)
(bad)
(bad)
(bad)
jp
pop
jb
adc
data16
gs
std
fld
adc
or
imul
je
jg
jmp
add
outs
adc
scas
ja
(bad)
out
(bad)
pop
dec
movs
aaa
xor
cmc
(bad)
mov
(bad)
in
fistp
push
and
in
xchg
sbb
dec
or
(bad)
(bad)
(bad)
push
jo
sub
in
popa
aas
(bad)
dec
inc
add
mov
mov
in
pop
js
or
mov
(bad)
jmp
xlat
sub
iret
xor
mov
add
sti
xor
retf
je
mov
mov
and
push
(bad)
(bad)
(bad)
call
dec
and
retf
pop
add
int
xchg
cmp
cmp
mov
xchg
icebp
dec
push
not
mov
(bad)
jle
push
jae
xchg
and
cmc
(bad)
(bad)
call
retf
stos
(bad)
xchg
ficom
retf
dec
add
faddp
sub
sar
stos
pop
dec
es
mov
cwde
retf
adc
outs
sahf
push
mov
dec
dec
js
xor
and
cmc
dec
push
(bad)
(bad)
(bad)
call
mov
and
pop
imul
scas
mov
rcl
push
daa
aas
imul
xor
jg
xor
xor
int3
jp
test
sub
fiadd
add
(bad)
(bad)
inc
push
das
ds
test
shr
icebp
daa
cmp
repnz
push
jmp
call
in
add
jge
popf
aas
shl
aas
pop
repz
(bad)
(bad)
mov
icebp
(bad)
jp
mov
es
stc
push
jl
xor
cmp
in
outs
clc
inc
(bad)
pushf
sub
inc
imul
push
int
test
push
(bad)
mov
fisub
mov
inc
xor
je
mov
sar
jg
call
dec
or
or
pop
sbb
inc
rcr
(bad)
(bad)
inc
(bad)
cwde
in
mov
jnp
jg
mov
fisub
adc
loope
(bad)
in
ins
shr
jecxz
(bad)
fmul
or
fistp
cdq
pop
js
aaa
push
push
mov
mov
(bad)
(bad)
(bad)
push
cmp
test
xlat
bound
out
or
or
(bad)
shl
xlat
adc
dec
and
icebp
das
clc
xchg
call
xor
pop
xlat
mov
(bad)
cmps
cld
xchg
jae
nop
xchg
dec
pcmpgtb
xchg
out
hlt
retf
pusha
(bad)
fidiv
sbb
cmps
inc
(bad)
(bad)
(bad)
call
int3
cmp
push
mov
xchg
inc
cmp
js
stos
mov
jmp
lea
xor
and
cdq
retf
sub
retf
daa
add
fs
rcr
(bad)
(bad)
mov
push
loopne
test
sar
pop
pop
pop
dec
retf
popf
(bad)
(bad)
(bad)
call
shr
xor
mov
into
pop
scas
cdq
ins
test
and
push
xchg
sti
(bad)
(bad)
(bad)
push
pop
jmp
enter
add
lock
outs
sub
inc
cmp
movs
div
pop
dec
fidivr
(bad)
(bad)
call
stc
mov
adc
add
(bad)
jo
sub
or
and
jg
call
sub
shl
sbb
in
sbb
xor
or
(bad)
(bad)
(bad)
push
repnz
mov
adc
repnz
loop
sbb
cld
mov
lock
ss
sbb
or
(bad)
(bad)
(bad)
call
ss
fcmovnbe
iret
popa
leave
sti
mov
xor
push
and
sub
cmp
(bad)
push
and
ja
fadd
data16
pop
push
xchg
push
inc
shl
mov
gs
mov
(bad)
jne
or
mov
(bad)
(bad)
mov
add
mov
cmp
in
rcl
xchg
and
mov
push
cs
jo
fwait
push
dec
xchg
repz
in
sbb
mov
inc
outs
loope
inc
ss
jnp
aaa
out
(bad)
(bad)
(bad)
dec
or
jb
sub
mov
test
cs
(bad)
(bad)
(bad)
dec
xchg
mov
adc
sub
data16
arpl
inc
jns
pop
(bad)
bound
les
pop
pop
fs
xchg
(bad)
(bad)
(bad)
jmp
pop
je
ins
sahf
aas
inc
add
test
inc
and
(bad)
in
rol
rcr
mov
(bad)
call
ss
movs
sbb
xchg
xor
mov
cmp
cmp
cmp
(bad)
(bad)
jmp
repz
out
or
mov
lods
jle
fnsave
loop
sub
call
loopne
dec
(bad)
(bad)
push
and
sbb
and
cmp
add
cmp
sti
out
push
xor
mov
pop
hlt
dec
dec
dec
or
daa
sbb
out
adc
(bad)
dec
pop
pop
outs
add
jl
(bad)
jmp
dec
mov
int
popa
hlt
dec
(bad)
ds
jg
jnp
push
dec
sub
jmp
mov
fiadd
mov
jno
(bad)
mov
or
call
movs
jle
dec
ror
mov
retf
add
mov
mov
add
jmp
jnp
xor
jmp
int3
push
je
data16
(bad)
(bad)
jmp
mov
lds
cli
stc
mov
jecxz
cs
push
scas
mov
adc
cmp
or
inc
ret
cmp
inc
adc
or
and
test
(bad)
push
adc
out
fsubr
pushf
cmps
test
movs
and
and
cmps
inc
cmp
scas
mov
xchg
push
daa
add
cmp
out
push
or
(bad)
test
(bad)
(bad)
(bad)
in
mov
and
lods
push
fs
xchg
inc
cmp
and
push
sub
lods
iret
bound
or
imul
nop
cmp
aam
mov
adc
and
(bad)
(bad)
(bad)
jmp
mov
rcr
stc
add
xchg
mov
pop
out
aaa
sub
(bad)
(bad)
(bad)
push
aas
div
mov
xchg
inc
push
dec
mov
mov
loop
xchg
adc
pop
sub
aam
(bad)
(bad)
(bad)
jmp
mov
jmp
lock
int
cli
push
paddusw
mov
adc
idiv
(bad)
(bad)
call
call
push
jnp
invlpga
push
into
fist
and
fisttp
call
(bad)
inc
test
adc
mov
hlt
xchg
cmp
sub
movs
clc
test
loope
mov
(bad)
(bad)
(bad)
test
in
pop
jmp
nop
ja
stos
clc
xchg
add
out
xchg
ins
mov
or
(bad)
out
cli
jmp
(bad)
add
loopne
mov
sti
mov
xchg
jae
and
(bad)
(bad)
(bad)
jmp
jo
jl
out
mov
mov
pop
and
lods
inc
xchg
pop
fdivr
(bad)
(bad)
mov
mov
(bad)
repz
pop
and
adc
enter
jns
arpl
(bad)
call
cmp
mul
jmp
xor
mov
adc
mov
repnz
sub
(bad)
xchg
mov
inc
aam
(bad)
(bad)
(bad)
call
xor
adc
jle
dec
jno
int
xchg
ror
icebp
cmp
push
cmovne
(bad)
(bad)
(bad)
inc
loop
and
nop
and
(bad)
jmp
jo
or
in
(bad)
ficomp
mov
aam
xor
(bad)
mov
jmp
push
lods
jae
jle
inc
pop
aas
pop
in
(bad)
(bad)
call
inc
test
js
jno
sub
xchg
dec
ins
mov
push
dec
and
stos
bound
jmp
(bad)
(bad)
inc
retf
ret
sar
dec
fcomp
xlat
mov
fist
out
adc
lods
add
jmp
adc
xchg
lods
rol
pop
stos
(bad)
mov
cmp
in
iret
add
jmp
sub
lods
sub
aad
inc
in
ret
and
push
add
dec
pop
outs
push
dec
cmp
loopne
rcr
xchg
call
sbb
adc
adc
inc
rcl
mov
aas
(bad)
jmp
fdivr
(bad)
jg
lods
or
sub
add
(bad)
sbb
inc
in
mov
sub
fcos
(bad)
(bad)
call
jecxz
sti
or
or
lods
dec
xchg
pushf
iret
and
popa
icebp
popa
call
cmp
pop
push
in
fyl2xp1
cmp
add
sbb
loope
call
mov
popa
sbb
pop
dec
out
jb
enter
outs
sub
push
cwde
xor
mov
xchg
inc
fld
and
mov
adc
daa
(bad)
(bad)
(bad)
call
cmp
pusha
mov
out
cmp
bound
dec
mov
add
push
push
inc
xchg
fcmovbe
das
leave
cli
add
(bad)
(bad)
inc
and
jmp
or
in
bound
and
data16
ins
cmp
xor
(bad)
(bad)
push
push
popa
and
xchg
jnp
sub
mov
or
mov
(bad)
(bad)
(bad)
inc
retf
pop
mov
imul
xor
sahf
rcl
scas
mov
(bad)
(bad)
(bad)
call
xlat
pop
not
int3
jge
shl
addr16
add
inc
pop
mov
and
mov
sub
(bad)
mov
addr16
cs
dec
inc
inc
or
das
icebp
push
dec
sub
(bad)
(bad)
(bad)
(bad)
jmp
out
imul
call
sbb
pusha
in
mov
inc
jle
mov
stos
cmp
dec
(bad)
(bad)
(bad)
(bad)
mov
sub
mov
out
(bad)
mov
(bad)
int3
inc
loope
imul
sbb
or
(bad)
mov
mov
add
cld
fs
mov
mov
scas
outs
call
ins
std
mov
lods
pop
push
xchg
pop
mov
arpl
stos
and
(bad)
jmp
jmp
mov
sub
mov
pop
clc
ror
push
fistp
into
fcomip
(bad)
call
cwde
cmps
jg
add
lods
add
mov
add
(bad)
push
cmp
ret
pop
mov
fadd
in
mov
add
(bad)
dec
or
mov
stos
push
xchg
inc
or
mov
cmp
mov
jge
fisubr
(bad)
push
xchg
(bad)
mov
in
adc
and
pusha
mov
(bad)
jmp
leave
pop
xor
pop
xchg
in
mov
stos
jmp
sbb
(bad)
(bad)
(bad)
cld
inc
mov
mov
sar
cld
jmp
jmp
inc
cmp
xchg
(bad)
(bad)
(bad)
inc
push
(bad)
mov
test
sahf
push
sub
data16
xor
mov
aam
sbb
push
xchg
add
in
dec
or
mov
cmp
movs
cld
std
(bad)
(bad)
call
add
push
and
jmp
mov
inc
xchg
sub
clc
std
call
mov
mov
sbb
lea
data16
addr16
aaa
stos
ins
or
data16
clc
fmul
cli
jnp
(bad)
(bad)
inc
add
jmp
mov
fistp
push
xor
jl
xchg
ja
push
inc
(bad)
(bad)
jmp
xor
leave
adc
into
and
les
pop
inc
test
je
mov
mul
gs
mov
push
out
jp
(bad)
loop
or
(bad)
(bad)
inc
cld
dec
mov
push
int
mov
iret
pop
cmp
push
and
aad
add
jge
arpl
mov
je
fwait
cmp
test
jo
inc
retf
sbb
mov
fidiv
jmp
leave
test
sar
mov
push
sar
add
(bad)
jo
(bad)
(bad)
call
mov
push
hlt
dec
ror
cdq
jae
fwait
jl
xchg
(bad)
(bad)
(bad)
call
pop
xchg
mov
rol
mov
outs
push
ret
or
test
add
inc
mov
xor
sbb
dec
push
jge
mov
mov
push
lods
or
mov
je
inc
or
int
mov
mov
add
aad
call
(bad)
call
popa
shl
(bad)
inc
call
int
add
add
mov
(bad)
sbb
mov
cmc
jb
xor
ins
addr16
rol
test
sbb
sub
jae
(bad)
mov
in
in
push
push
pusha
lahf
test
or
test
xchg
mov
cmps
push
pop
sbb
and
jle
adc
mov
inc
cli
and
inc
pop
mov
mov
std
push
push
cmps
outs
xor
loopne
or
lods
(bad)
ins
and
pop
out
jp
in
cli
(bad)
call
lods
(bad)
repnz
adc
pop
and
sbb
cli
cmp
out
test
sbb
je
adc
pop
jmp
mov
inc
jmp
(bad)
(bad)
(bad)
jmp
mov
les
mov
rol
adc
adc
and
add
dec
stos
mov
das
cli
(bad)
jmp
hlt
or
test
int3
jbe
xchg
mov
call
into
mov
(bad)
inc
mov
aaa
adc
inc
mov
mov
dec
fdivr
aam
push
push
or
ret
(bad)
(bad)
jmp
or
jbe
jecxz
std
add
pop
xor
int3
imul
inc
div
add
pop
xchg
push
iret
push
imul
(bad)
mov
shr
mov
mov
push
xlat
ror
xchg
and
jmp
push
jmp
sbb
int3
(bad)
(bad)
in
xor
js
push
dec
(bad)
pop
and
(bad)
(bad)
jmp
mov
inc
stos
and
mov
cmp
jmp
repz
enter
mov
jmp
dec
fs
xchg
enter
fstp
sbb
das
ror
jg
push
or
scas
int
adc
outs
pop
in
syscall
or
mov
gs
xchg
inc
sub
dec
and
aas
sti
dec
push
add
test
or
add
out
test
clc
pop
mov
mov
call
movs
je
leave
or
in
cmp
lahf
jb
push
rcl
pop
pop
aas
adc
aad
jg
shl
mov
aaa
loop
sbb
jbe
xor
pop
mov
push
push
pop
mov
inc
push
cld
pop
mov
std
adc
ds
imul
sub
or
pop
ins
(bad)
push
(bad)
ds
jb
cmp
jg
push
push
mov
pop
inc
pop
mov
ins
push
test
(bad)
mov
ins
leave
inc
arpl
arpl
cmp
dec
pop
in
mov
push
or
call
(bad)
call
ins
add
popa
jne
je
imul
add
inc
jg
icebp
jmp
push
ja
dec
inc
pop
arpl
loopne
cmp
and
add
pop
push
pop
gs
jne
arpl
je
ins
or
movs
icebp
ins
jae
pop
and
add
add
and
inc
push
push
inc
cmp
sub
and
or
gs
pop
pop
pop
or
mov
in
and
gs
shr
sub
dec
pop
push
in
fwait
popf
push
and
js
rcl
mov
arpl
xor
cmp
mov
and
push
sbb
pusha
inc
je
mov
addr16
lds
ds
inc
(bad)
(bad)
jmp
sub
dec
push
push
inc
push
inc
dec
sub
es
add
sti
outs
or
inc
mov
daa
or
cmp
add
or
and
(bad)
lahf
sub
pop
and
ins
sub
dec
push
sahf
inc
inc
sar
mov
dec
cmp
xor
add
push
add
daa
lods
jbe
add
inc
rcr
outs
jne
push
xor
ins
pop
movs
add
dec
adc
adc
dec
and
data16
and
and
adc
mov
inc
push
dec
inc
dec
push
lds
push
popa
ins
jne
leave
fild
test
fiadd
(bad)
fist
pop
jne
push
inc
sub
fs
inc
sbb
fs
mov
bound
cmp
fimul
inc
xor
shl
pop
add
jmp
mov
add
inc
sub
mov
inc
cmp
add
sub
test
push
dec
dec
leave
jae
arpl
mov
mov
ret
sub
adc
ret
(bad)
sub
hlt
sub
mov
cmp
inc
loope
pop
jae
jbe
inc
inc
in
call
pop
push
dec
dec
dec
dec
push
dec
jno
imul
sub
jl
inc
pop
push
inc
inc
sub
jmp
push
gs
repz
imul
iret
repz
leave
int3
ins
(bad)
aas
iret
rep
outs
jo
sub
adc
ss
scas
or
pop
adc
jmp
add
sar
add
test
pop
lea
not
ss
lock
lahf
add
push
pop
inc
pop
push
mov
ss
mov
mov
and
sbb
sar
xlat
int3
cmps
repnz
cld
sub
jb
xor
pop
mov
jb
mov
adc
in
jl
in
in
fmul
iret
push
jne
cli
push
sti
daa
push
add
std
jns
jnp
push
inc
mov
add
add
jns
out
or
or
pushf
out
sahf
pop
or
push
ud0
push
jecxz
push
popa
stc
push
mov
jno
pop
cmc
xor
adc
add
aad
and
mov
inc
xchg
pop
(bad)
or
push
add
mov
pop
pop
in
inc
mov
jl
adc
mov
push
xchg
(bad)
lods
inc
mov
(bad)
call
or
xor
js
xchg
stos
in
shl
cmp
scas
or
or
int3
inc
mov
fistp
xor
test
outs
mov
shr
dec
sar
mov
scas
xchg
stos
in
in
ret
dec
and
iret
push
je
lods
inc
das
pop
enter
hlt
clc
pop
pop
jb
cmps
scas
push
pop
xor
add
add
test
jg
and
dec
cwde
push
adc
mov
push
and
add
js
outs
fsubr
inc
pop
call
mov
loopne
mov
mov
sub
pusha
ret
mov
or
ret
dec
out
stos
add
pop
mov
dec
aas
inc
add
adc
lahf
push
adc
add
dec
add
mov
iret
scas
add
adc
mov
inc
pop
sbb
(bad)
pop
shl
fadd
nop
in
mov
xor
pusha
xchg
dec
cs
mov
and
in
mov
lock
mov
(bad)
mov
mov
or
nop
or
mov
xor
pop
mov
add
lock
mov
imul
mov
pop
shl
mov
pop
jb
mov
pop
push
inc
mov
xor
and
std
xor
cld
(bad)
mov
pop
int3
mov
es
push
sub
mov
jb
das
and
aad
fcom
jl
mov
cs
stos
jbe
inc
(bad)
aam
add
hlt
nop
or
(bad)
or
sub
nop
inc
push
fs
or
add
and
nop
inc
lods
mov
das
int3
cmps
pop
or
ror
(bad)
(bad)
sbb
ins
mov
pop
jnp
pop
pop
(bad)
or
inc
pop
dec
cld
retf
retf
repnz
pop
enter
retf
dec
retf
push
adc
paddq
or
add
(bad)
lock
nop
pop
test
int3
mov
jp
adc
ror
int
push
pushf
pusha
xchg
int
jbe
pop
mov
inc
push
mov
mov
ss
lock
or
fadd
cmp
add
cs
or
push
mov
cs
or
mov
pop
mov
in
iret
and
xor
push
ins
adc
shr
das
nop
out
mul
(bad)
jo
inc
rol
adc
in
seto
mov
sub
sub
(bad)
adc
add
(bad)
push
aam
cwde
mov
add
xchg
cmp
adc
aad
aad
scas
or
test
ja
test
adc
jb
pop
(bad)
idiv
aad
(bad)
xchg
xchg
pushf
inc
sbb
sub
mov
add
cmp
dec
xlat
cmp
or
xlat
mov
mov
adc
neg
inc
adc
dec
dec
and
xor
inc
dec
inc
jb
fcom
enter
jno
(bad)
fcomp
inc
hlt
fmul
cmps
add
xchg
loopne
cmps
dec
mov
(bad)
fld
call
out
mov
iret
and
xor
push
xor
hlt
(bad)
cmp
sub
fcmovb
add
adc
dec
dec
jb
and
xor
mov
or
loop
and
fcomp
push
fdivr
(bad)
cwde
fadd
rol
sbb
test
dec
dec
and
cmp
dec
(bad)
add
pop
fst
fisttp
loopne
inc
cld
frstor
cmp
xchg
push
mov
fimul
jo
sbb
fist
adc
test
mov
pop
jg
fisttp
and
and
enter
adc
or
out
sbb
inc
cmp
xor
xor
sub
inc
out
and
out
fsub
dec
and
out
and
dec
and
out
push
dec
jl
jmp
aam
stos
jbe
cmps
clc
inc
sbb
(bad)
and
mov
fld
not
xor
pop
jmp
mov
into
shl
cs
les
inc
push
mov
add
sbb
into
cmp
add
cmp
or
sbb
fld
xor
and
sbb
inc
inc
out
mov
loopne
pusha
das
sub
xor
pop
sbb
adc
test
mov
push
mov
dec
not
jbe
imul
cmp
or
aas
adc
jns
out
fsubr
fadd
loopne
call
out
hlt
clc
cld
ja
push
add
iret
repz
or
adc
repz
repz
and
sub
repz
xor
cmp
inc
cmp
repz
dec
push
push
pop
repz
repz
pusha
fs
rol
add
add
stc
in
in
gs
pop
inc
mov
jb
push
pop
or
dec
inc
sahf
pushf
mov
pop
xchg
xchg
daa
and
nop
pop
xor
enter
inc
pop
in
push
sub
mov
rcr
and
ret
add
jns
add
add
pop
push
leave
add
mov
mov
pop
add
xlat
call
jno
cmp
inc
dec
shr
adc
pop
or
add
mov
mov
into
add
mov
mov
arpl
add
das
add
add
add
jg
movs
aaa
add
add
(bad)
(bad)
fstp
sub
add
xor
test
push
daa
add
add
test
mov
or
add
movs
push
daa
ds
pop
dec
pop
ja
add
add
or
or
xlat
push
mul
es
add
add
fbld
rol
pop
fild
xchg
enter
add
jb
and
add
sbb
imul
inc
iret
repz
push
push
cmp
repz
int3
fsubr
clc
jo
cmps
stc
or
sbb
inc
or
js
add
mov
nop
nop
xchg
cmp
xchg
xor
jl
nop
fcmovnu
imul
push
je
push
jne
(bad)
dec
int3
enter
enter
fmul
(bad)
(bad)
(bad)
loopne
jecxz
in
imul
dec
fisubr
jb
add
and
test
test
(bad)
stos
jle
daa
add
xchg
xor
adc
sbb
ss
add
inc
and
test
mov
push
ins
inc
xchg
adc
xor
lea
std
sub
push
inc
xchg
cmps
loope
jo
call
xor
pop
inc
pop
data16
in
add
(bad)
pop
pop
loop
add
outs
or
add
dec
sub
jbe
outs
add
inc
pusha
ret
fmul
jmp
sbb
pop
add
add
push
or
popa
outs
and
out
ret
ja
cmps
dec
rol
pop
push
mov
jo
push
sbb
nop
aas
jnp
imul
aas
push
(bad)
rol
jae
outs
add
push
stc
call
mov
or
jg
sbb
inc
sub
mov
inc
pop
push
push
rcr
pusha
push
cmps
retf
dec
jmp
xchg
das
sti
push
mov
cmp
cmp
push
add
or
repz
loopne
clc
movups
sahf
out
sahf
adc
adc
push
mov
fs
jl
sbb
jae
push
nop
push
sbb
push
adc
or
call
aad
jns
cmps
or
add
repz
pusha
sbb
push
pop
xchg
add
iret
repz
push
mov
into
repz
in
pop
clc
aad
out
sahf
test
push
xor
out
sahf
add
je
in
pusha
ja
lock
fbld
xlat
cvtps2pi
repz
push
dec
cmp
out
out
push
sub
out
sahf
cwde
mov
sahf
out
in
cld
mov
fdiv
cmp
sar
outs
jno
out
push
out
je
nop
fadd
rcr
adc
test
add
adc
cmp
xchg
or
rol
push
punpckldq
shr
add
add
fwait
jge
js
nop
add
xchg
or
adc
sbb
not
or
in
or
adc
sbb
cmps
outs
inc
add
jno
add
lar
and
cmp
and
mov
(bad)
ins
popf
or
push
xchg
ja
pop
mov
aad
xchg
sahf
out
push
stc
mov
sahf
out
cld
std
(bad)
(bad)
sahf
out
sahf
add
add
add
add
cld
jmp
push
xor
inc
pop
xchg
add
adc
cmp
push
fnstsw
mov
dec
out
mov
adc
push
dec
push
sbb
repz
repz
push
fs
cmp
jnp
xchg
shl
enter
cmp
repz
loopne
call
shl
ficom
das
jo
push
lsl
jae
(bad)
test
imul
clc
cld
or
jns
out
stc
sub
inc
sahf
out
sahf
not
cmc
jl
sahf
out
hlt
nop
repz
out
icebp
enter
repz
out
lock
add
in
adc
iret
repz
sub
cmp
cmp
add
xchg
add
mov
add
test
imul
add
inc
inc
xlat
pop
outs
lahf
mov
adc
or
add
or
or
pop
jb
das
xchg
adc
pop
add
dec
add
inc
sub
retf
rcl
jmp
push
shl
push
push
xor
push
dec
sar
or
fild
add
pop
xchg
pop
int3
imul
pop
dec
mov
out
inc
add
jge
sbb
(bad)
push
push
pop
xor
pop
(bad)
fcom
cmp
pusha
test
inc
into
add
outs
fs
ins
add
std
(bad)
jmp
imul
and
fs
imul
sub
in
loopne
fs
ins
and
adc
jno
inc
adc
jns
gs
test
bound
jno
jb
xor
fistp
xor
xor
outs
arpl
in
ins
sbb
inc
fs
pop
pusha
mov
jbe
sub
popa
jae
mov
push
nop
xor
movs
mov
fist
pop
sbb
push
inc
dec
and
cdq
xor
dec
sbb
pop
mov
outs
and
jne
push
cmps
sub
ds
sti
fldenv
retf
arpl
outs
outs
imul
sbb
push
icebp
sub
arpl
and
cmp
int3
ds
jl
push
push
cwde
gs
ins
jp
jno
lock
xor
(bad)
or
repnz
(bad)
dec
(bad)
mul
mov
add
sahf
push
push
sbb
ja
xor
aaa
je
add
cmc
or
hlt
ss
gs
lods
xchg
fdivr
push
es
sub
xor
je
mul
(bad)
cli
dec
add
das
push
sub
adc
test
aam
ds
imul
sti
and
js
and
fsub
xor
imul
sub
push
or
fstp
inc
dec
push
imul
push
sbb
xor
loop
ins
(bad)
jae
push
arpl
addr16
and
inc
jl
push
inc
push
popa
sub
jne
jae
outs
cmc
sbb
pop
sub
sub
popa
sub
scas
add
pop
sub
push
lea
mov
and
push
xor
xchg
into
adc
(bad)
enter
and
xor
(bad)
fsub
jno
je
xchg
fwait
pop
xor
jl
pop
or
pop
xor
push
arpl
and
pop
sub
loope
adc
dec
lea
push
fldcw
dec
aam
in
enter
jbe
pop
inc
popa
outs
daa
je
sub
jae
arpl
jns
pop
cmp
inc
gs
sub
mov
and
outs
loop
shl
sbb
and
jno
imul
je
cmps
aas
call
push
pushf
enter
pop
aam
dec
add
les
add
dec
test
std
dec
add
ins
jo
add
jb
inc
push
push
cmp
loopne
add
(bad)
mov
(bad)
sub
and
or
inc
inc
data16
add
dec
add
pusha
(bad)
sub
add
imul
add
add
add
add
or
push
ins
stos
dec
add
add
mov
popa
mov
mov
ins
and
imul
add
gs
iret
jbe
jae
and
xor
ins
cwde
sbb
pop
add
add
(bad)
jae
fild
adc
adc
push
add
sub
add
add
push
add
sub
add
sub
adc
sbb
div
outs
js
lar
sub
adc
cmp
push
bound
and
fldenv
sub
pop
push
add
add
push
das
add
fdivr
sbb
push
adc
add
dec
sub
inc
add
sbb
fcmovnb
(bad)
push
add
adc
nop
push
dec
push
add
and
repz
(bad)
ds
out
xor
repz
inc
push
addr16
sahf
cmp
repz
iret
fdivp
(bad)
jns
cmps
stc
or
sbb
pop
out
sahf
out
adc
sahf
retf
out
push
or
repz
pop
imul
cmp
repz
mov
fdiv
out
sahf
out
or
inc
push
fs
jns
je
test
mov
xchg
xor
dec
outs
jbe
imul
dec
fld
outs
jne
outs
add
gs
outs
and
adc
push
(bad)
hlt
add
dec
jns
aam
xchg
test
es
pop
mov
sti
add
push
jnp
sar
jae
popf
sub
sub
inc
popa
fs
mov
dec
aas
clc
popa
mov
mov
jae
dec
dec
test
stos
addr16
jg
popf
bound
xchg
adc
jnp
fs
pusha
xor
adc
imul
arpl
inc
js
pop
daa
xor
das
lahf
pop
push
push
and
fmul
mov
mov
je
jo
xchg
cwde
pop
inc
add
jne
sbb
addr16
sbb
cwde
inc
imul
rol
jb
jne
inc
adc
and
adc
addr16
js
pop
or
dec
pusha
dec
add
sbb
popf
push
outs
imul
addr16
adc
outs
mov
pop
and
sbb
shl
dec
das
dec
mov
and
(bad)
add
sbb
mov
inc
pop
and
xor
jae
popa
std
gs
outs
push
dec
ins
and
bound
ins
or
ss
jns
jae
jae
adc
push
jae
push
or
mov
cld
imul
add
(bad)
lock
jl
ins
je
mov
cmp
mov
js
rol
dec
nop
adc
pop
sub
dec
xchg
add
sbb
dec
fs
clc
retf
ficomp
or
arpl
adc
mov
push
jo
in
mov
cmp
sbb
(bad)
es
cs
imul
inc
popa
lods
adc
fdiv
xor
idiv
out
mov
jae
push
pop
popa
sldt
jmp
sub
sbb
inc
cmp
ret
or
mov
add
and
pop
sbb
pop
add
or
or
in
test
add
or
adc
adc
push
fcomp
mov
or
adc
add
unpckhps
aas
inc
cs
mov
loop
jae
and
and
pop
mov
outs
cmp
pop
fsub
ins
pop
ja
scas
mov
sub
sub
fucomip
cs
jne
ins
add
add
push
add
pop
sbb
sbb
add
or
push
mov
adc
adc
push
sbb
adc
mov
jmp
or
str
or
push
push
adc
push
push
adc
or
mov
cmp
sub
dec
add
mov
pusha
and
add
add
add
add
add
arpl
sbb
cmp
repz
inc
dec
dec
dec
dec
in
idiv
dec
dec
dec
jg
cs
jbe
jnp
addr16
xor
add
dec
or
lods
popf
mov
push
or
dec
or
out
neg
or
inc
ins
sbb
jmp
jns
or
sub
(bad)
fs
mov
ret
aam
inc
cdq
pop
pop
call
mov
jl
jle
add
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
mov
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
ret
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
dec
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cmps
inc
adc
std
(bad)
(bad)
jmp
inc
dec
int
aas
test
inc
nop
inc
lods
fadd
xor
xchg
(bad)
call
add
dec
inc
pop
dec
dec
dec
inc
push
inc
push
pop
jle
out
out
pop
dec
push
dec
inc
push
dec
inc
adc
cmovae
dec
inc
push
addr16
outs
iret
adc
outs
pop
push
jb
push
adc
jmp
inc
inc
add
pop
inc
push
add
mov
bound
cmp
sbb
sub
leave
mov
add
ja
dec
push
cmp
aad
xbegin
sti
cld
data16
out
(bad)
inc
adc
push
pop
or
or
or
sbb
xor
aaa
es
inc
repz
repz
pop
pusha
imul
js
add
xchg
popf
mov
rep
mov
mov
iret
rcr
loop
jmp
idiv
(bad)
outs
popa
out
adc
or
add
mov
fidivr
aaa
add
adc
push
enter
xchg
std
or
add
and
sub
push
das
add
push
pusha
add
cmp
pop
ins
pop
rol
adc
and
add
or
inc
mov
add
sbb
popa
xor
jne
jae
mov
gs
adc
jb
inc
jb
or
add
jb
jne
jo
into
cmp
imul
inc
cmp
(bad)
out
imul
popa
jb
bound
dec
aam
mov
xchg
mov
dec
or
add
inc
jne
pushf
inc
outs
sub
mov
pcmpgtb
arpl
pop
cwde
jae
stos
mov
inc
into
cmp
lea
iret
jnp
and
dec
dec
dec
push
push
push
cmp
repz
pop
bound
jge
iret
rep
je
lea
or
and
push
jbe
jbe
and
add
in
in
jge
push
sub
and
and
sbb
fist
adc
adc
push
repnz
inc
pushf
or
pop
stc
in
ret
mov
adc
(bad)
(bad)
jg
mov
leave
sbb
jo
test
lds
iret
dec
(bad)
(bad)
call
js
rol
mov
or
mov
fdivrp
popf
sti
jmp
stos
push
inc
(bad)
xchg
push
cmps
scas
mov
jmp
mov
add
lds
mov
and
and
jne
jg
(bad)
pop
adc
jle
pop
push
cmp
and
das
loope
xlat
jo
and
das
fidiv
(bad)
jae
xor
jae
test
sbb
dec
pop
loopne
mov
sub
xor
push
jo
loope
xor
sar
neg
imul
jg
add
(bad)
(bad)
rol
shl
outs
lock
mov
nop
lock
jo
(bad)
adc
fdivr
sub
sub
sub
arpl
sbb
dec
sub
sub
jnp
sub
daa
adc
mov
shl
es
dec
fbld
and
ret
pushf
popa
addr16
and
xlat
clc
stos
fisub
and
inc
push
jmp
xchg
or
pop
sahf
hlt
adc
dec
nop
inc
jp
js
jb
rcl
sub
outs
jno
mov
adc
arpl
mov
nop
fs
or
and
cmp
jb
sbb
or
dec
ja
repnz
imul
bound
rol
fs
addr16
ins
cmp
mov
xchg
outs
xchg
lods
stc
dec
pop
test
mov
inc
nop
and
dec
aas
xor
es
adc
mov
push
mov
add
je
push
jo
data16
in
cli
pop
sti
sub
jne
inc
jno
div
je
jbe
out
mov
rol
push
ret
push
dec
icebp
or
ja
cld
jne
outs
sbb
ret
xchg
sti
fild
push
and
or
add
and
es
push
or
sahf
out
sahf
movups
adc
push
test
enter
mov
arpl
pop
fiadd
imul
ret
popa
jmp
mov
adc
outs
jb
mov
inc
and
sbb
sbb
sbb
repz
sbb
adc
and
iret
repz
cmp
dec
dec
repz
repz
push
pop
pop
popa
iret
repz
imul
repz
mov
iret
repz
sar
sbb
push
add
pop
sahf
out
popf
or
push
pop
js
mov
shl
aam
ja
xor
dec
push
cmp
cmp
into
pop
push
and
adc
adc
jne
add
xor
call
mov
push
push
pop
fild
out
outs
inc
mov
add
iret
push
sysret
dec
dec
dec
dec
or
or
jp
add
das
femms
add
(bad)
test
pop
or
fmul
or
mov
fcom
stos
and
scas
sbb
js
mov
mov
mov
dec
fsubr
clc
fmul
xchg
dec
sbb
pop
and
iret
movs
sbb
in
bound
fdivr
inc
add
test
pop
or
das
push
sub
dec
add
ins
sub
mov
cmp
addr16
sbb
xchg
add
rcr
movs
add
mov
(bad)
jns
pop
add
lods
push
adc
sbb
in
add
inc
xchg
xchg
mov
pop
inc
enter
pop
sub
jl
pop
jb
jb
aam
inc
pop
and
hlt
lock
pushf
in
daa
cmp
dec
and
adc
xchg
fsub
les
and
and
sub
pushf
pop
pusha
mov
inc
xchg
in
in
iret
sbb
dec
cs
xchg
mov
and
inc
jb
and
pop
jb
lods
mov
jb
adc
and
nop
mov
and
and
in
mov
xor
repnz
inc
in
ins
mov
hlt
mov
add
iret
adc
and
inc
sti
and
add
sub
inc
repnz
xchg
or
lock
xchg
inc
(bad)
in
dec
inc
and
pushf
mov
sub
in
nop
dec
sahf
mov
mov
inc
repnz
push
and
jmp
es
sbb
jmp
ja
inc
imul
outs
loop
jb
adc
popa
outs
addr16
shr
imul
(bad)
dec
jo
push
sbb
push
sbb
xor
push
outs
fs
test
push
imul
fmul
loope
pop
pusha
inc
cmovae
sar
inc
cmc
jg
mov
or
sub
push
push
adc
jecxz
mov
sbb
adc
mov
xchg
sub
(bad)
fst
js
xor
xor
mov
mov
pop
(bad)
cmp
lock
ja
fdivr
(bad)
(bad)
dec
mov
sub
fs
sub
cmp
inc
mov
imul
shl
cmp
sahf
sar
cmp
inc
inc
inc
inc
adc
sub
dec
push
dec
dec
inc
pop
inc
push
push
dec
dec
dec
sub
jnp
addr16
pop
inc
call
js
popa
out
adc
jo
or
jne
sub
dec
mov
(bad)
mov
loope
arpl
mov
add
ins
mov
dec
sub
add
jle
shl
cmp
fs
pusha
and
and
push
cmp
call
arpl
or
call
xor
rol
(bad)
mov
das
cmp
push
or
aas
ins
cmp
mov
mov
mov
dec
jae
pop
test
adc
dec
inc
jae
xor
jae
jp
std
(bad)
mov
sub
sub
bound
push
xchg
mov
mov
jmp
outs
sub
shl
inc
ficomp
(bad)
add
(bad)
jno
les
pop
inc
pop
dec
push
(bad)
push
dec
mov
mov
inc
add
pop
and
inc
push
dec
push
pop
inc
lods
cmc
ret
jb
sub
cwde
arpl
mov
inc
arpl
ds
ja
push
sbb
dec
jnp
shl
ins
adc
jo
xor
scas
fs
addr16
sub
cmp
out
and
sbb
add
cs
aas
(bad)
fadd
xchg
aam
sbb
lods
mov
jp
pop
dec
mov
call
ins
int
add
jmp
leave
fldcw
sbb
mov
popa
jnp
pop
xchg
push
inc
dec
push
sub
sbb
and
stos
cdq
data16
xchg
add
push
shl
pop
xor
mov
inc
rcl
dec
jl
ret
push
add
sub
test
push
(bad)
loopne
jo
jp
inc
movs
mov
sti
sub
push
test
mov
movs
jbe
inc
mov
jnp
mov
adc
clc
cmps
sub
stc
dec
sub
inc
inc
inc
js
jge
cli
nop
mov
push
add
push
cmp
das
dec
inc
cmps
xchg
push
leave
clc
sbb
inc
mov
cmps
jne
xchg
adc
add
pop
xor
dec
pushf
(bad)
add
daa
xor
jmp
mov
xor
test
dec
ret
data16
out
mov
add
push
sbb
mov
xchg
clc
sbb
sub
or
pop
and
sysenter
pushf
jbe
jl
xlat
ins
xor
adc
fimul
and
or
push
pop
outs
outs
in
popa
ins
push
inc
cmp
cs
push
cmp
push
ret
mov
outs
push
daa
sub
pop
(bad)
adc
xchg
sti
popf
inc
adc
push
inc
push
push
inc
dec
push
dec
inc
ins
adc
push
movs
pop
adc
dec
imul
cmp
xor
sbb
test
and
jnp
mov
loopne
popa
daa
(bad)
push
gs
add
and
sub
inc
add
les
js
test
pop
jne
prefetch
xor
nop
xor
xor
or
xchg
into
or
movs
inc
rcl
mov
dec
add
mov
aas
cmp
pushf
icebp
sub
jae
rcr
cld
dec
push
inc
inc
sub
add
ja
xchg
out
jl
leave
sub
test
dec
xor
ds
push
dec
scas
cwde
xor
mov
jae
inc
mov
jbe
inc
loopne
add
inc
loopne
mov
push
cmc
mov
mov
xor
das
and
xor
push
addr16
pop
jp
jo
inc
or
aaa
or
adc
add
aas
test
inc
cmp
jne
mov
stc
push
retf
iret
icebp
loope
add
(bad)
cld
clc
lock
inc
jle
(bad)
(bad)
inc
xor
or
cmp
add
(bad)
(bad)
(bad)
push
repz
aas
inc
dec
mov
jae
dec
mov
shr
sbb
and
(bad)
(bad)
(bad)
call
shr
out
pop
fbld
ins
pushf
pop
mov
outs
lahf
pop
or
cmp
add
xor
or
(bad)
(bad)
(bad)
(bad)
cmp
pop
(bad)
aaa
test
dec
mov
ja
call
adc
sub
(bad)
(bad)
(bad)
call
(bad)
out
xlat
test
cwde
pop
movs
fs
push
stos
imul
add
xor
push
into
inc
sar
(bad)
push
icebp
or
inc
mov
mov
jle
inc
mov
lea
jge
loop
shr
out
push
fisub
loope
(bad)
(bad)
call
shr
bound
pop
mov
ins
popf
pop
or
cmp
push
(bad)
test
(bad)
(bad)
(bad)
(bad)
cmp
add
dec
mov
jbe
dec
mov
jne
jmp
sub
sub
fldenv
push
pop
cmps
xchg
push
test
gs
push
fld
inc
mov
dec
push
dec
xor
and
call
push
mov
sbb
sbb
(bad)
fbstp
mov
push
mov
inc
sub
sbb
push
and
mov
sub
adc
or
ss
xor
xor
daa
aaa
sbb
or
push
sbb
xor
outs
push
ss
(bad)
dec
or
dec
mov
xor
aas
retf
xchg
scas
out
aas
stos
(bad)
inc
(bad)
adc
shl
aas
aas
cmp
jmp
jnp
push
loope
pop
sub
cld
stos
jb
push
test
add
mov
ret
add
(bad)
(bad)
sbb
js
sbb
or
inc
mov
sbb
lahf
out
sahf
and
xor
and
add
or
or
add
add
and
add
jbe
push
sahf
out
sahf
and
xor
cmp
cmp
mov
sub
sbb
iret
repz
push
and
adc
cmp
cs
push
es
daa
cs
cmp
ss
aaa
ds
pop
xchg
cmp
adc
or
sbb
sbb
xor
or
push
jbe
loopne
dec
cmp
aaa
das
or
sub
inc
pop
push
pop
or
loope
pop
scas
push
push
push
xchg
rep
mov
aaa
and
addr16
adc
xlat
cmc
push
add
pop
out
das
dec
scas
neg
mov
gs
dec
dec
(bad)
add
pop
push
bound
push
fs
arpl
fld
aaa
adc
das
daa
pop
adc
out
inc
aas
sbb
shr
cmp
inc
aaa
jp
add
add
xor
inc
add
and
add
cmp
add
add
add
add
out
xor
lods
adc
push
adc
pop
and
xor
std
dec
and
rcl
bound
jo
enter
ret
mov
aaa
mov
popa
push
mov
mov
mov
inc
mov
adc
sbb
dec
mov
mov
gs
test
add
data16
lahf
adc
inc
adc
pop
popa
jno
and
adc
push
mov
lock
loope
icebp
imul
sub
rol
add
pop
outs
jns
or
test
dec
add
lock
and
mov
add
iret
pop
add
inc
ds
sbb
mov
add
in
scas
sub
aas
xor
add
add
mov
fidiv
ds
inc
add
push
lock
push
push
or
sbb
sub
cmp
push
pop
jns
out
pusha
push
jns
out
nop
cwde
mov
sahf
mov
ror
fsub
jns
jnp
rsqrtps
call
lahf
clc
mov
push
mov
xchg
sahf
out
sahf
pushf
movs
lods
mov
les
out
int3
aam
in
repz
out
cld
add
or
iret
repz
sbb
sub
cmp
cmp
repz
push
pop
fs
repz
repz
test
movs
mov
cld
add
mov
cmp
repz
stos
stos
stos
stos
repz
rep
stos
stos
stos
stos
into
repz
stos
stos
stos
stos
stos
repz
repz
xchg
pushf
movs
lods
mov
repz
mov
in
iret
repz
hlt
cld
add
(bad)
lods
repz
rep
lods
lods
lods
lods
into
repz
lods
lods
lods
lods
lods
fiadd
inc
sahf
jbe
push
fdivr
out
int3
xchg
in
in
jns
ret
out
sbb
mul
dec
pushw
push
ins
jo
add
cwde
pushf
movs
test
mov
mov
dec
outs
out
or
cwde
push
fcom
push
cmp
push
inc
dec
push
pop
ss
ds
push
inc
push
inc
push
cmp
sahf
ja
mov
jl
test
lahf
push
adc
push
push
push
fcomp
out
push
push
in
hlt
cld
add
cmp
repz
sbb
push
pop
repz
rep
je
test
repz
mov
iret
repz
(bad)
int3
aam
cld
cmp
repz
hlt
cld
add
dec
repz
xor
push
adc
and
iret
repz
xor
inc
dec
push
pop
cmp
repz
ins
je
test
cmp
repz
cmp
mov
(bad)
int3
aam
ds
repz
in
hlt
cld
add
ret
cmp
repz
pop
pop
pop
push
call
mul
mov
push
hlt
test
push
push
mov
(bad)
lock
clc
cld
fiadd
lock
push
sub
xor
cmp
popf
out
inc
dec
or
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
push
adc
mov
nop
mov
movs
push
fiadd
lahf
add
mov
push
and
push
dec
push
adc
push
push
adc
test
jbe
xchg
shr
push
inc
pop
sub
push
pop
xchg
ss
in
mov
sbb
sub
xchg
push
pop
mov
dec
pop
jle
push
cmps
mov
fnsave
jbe
dec
push
cmp
sahf
data16
xchg
nop
inc
jle
xor
call
jge
push
test
(bad)
xlat
popa
push
mov
adc
mul
cs
in
push
cmps
jbe
gs
push
into
push
les
pop
mov
cdq
scas
push
adc
adc
test
mov
push
les
xchg
cmp
(bad)
jle
ds
call
les
pushw
sbb
xlat
popa
enter
mov
push
mov
inc
es
xchg
push
sub
iret
es
aad
or
push
fisttp
mov
inc
in
push
movs
jmp
push
push
cwde
lods
mov
shl
push
mov
add
jge
push
es
lock
pop
aam
xor
out
or
adc
inc
jl
idiv
and
sub
and
fwait
iret
rcr
mov
out
out
repz
ds
jo
mov
js
loopne
outs
into
push
pop
je
ds
push
sbb
add
or
test
lahf
data16
hlt
adc
xchg
ins
mov
xchg
ss
jl
add
mov
sub
inc
inc
fwait
inc
push
mov
popf
push
shr
add
out
jge
jns
mov
mov
stc
push
or
cmps
cmp
imul
cmps
(bad)
push
mov
push
mov
es
nop
stos
dec
push
je
(bad)
mov
call
mov
pop
out
loopne
rcr
aam
(bad)
into
xlat
cs
out
cmp
push
cmc
es
fdiv
push
stc
loopne
cmp
cli
es
hlt
sti
mov
add
ds
mov
call
jl
dec
pop
mov
cwde
add
or
xor
fucomi
add
or
add
idiv
int
dec
nop
push
mov
adc
adc
cmps
stc
mov
push
mov
imul
sbb
push
hlt
adc
pusha
cmp
data16
enter
mov
sti
pop
pop
and
fmul
out
fisub
push
cmp
shl
inc
sub
sub
imul
pushf
mov
and
(bad)
in
out
push
cwde
mov
mov
push
or
mov
pop
daa
or
push
test
sub
mov
push
loopne
push
xor
fcomp
push
and
int3
or
cld
pop
out
ins
movs
pusha
dec
popa
clc
pushf
(bad)
fld
inc
arpl
nop
shl
sub
ja
add
shr
push
lock
cs
inc
call
in
nop
jmp
xor
jge
jmp
in
ds
mov
stc
or
mov
in
call
fst
mov
push
jecxz
sahf
int
push
aam
in
in
pop
sahf
cmps
cmp
in
push
xor
out
fwait
mov
repz
repz
jno
mov
out
add
ss
dec
jae
mov
loop
out
sub
jns
jl
out
leave
icebp
sbb
inc
out
cmp
imul
xor
lods
aad
out
fidivr
repnz
push
jnp
iret
iret
repz
stc
and
dec
jnp
rcr
sub
inc
pop
ins
jns
out
jg
mov
lahf
out
jmp
cmc
mov
dec
loopne
cmp
outs
xchg
mov
sbb
dec
repz
push
push
fcomp
cmps
stc
cmp
push
clc
test
jl
stc
inc
imul
ja
repz
sti
outs
push
mov
sar
push
std
cmp
mov
int
jns
dec
jo
hlt
ss
js
(bad)
repz
cld
ss
ds
sub
cli
sub
repz
into
das
add
ret
sahf
cmps
stc
cmp
or
ds
sar
pop
lahf
fimul
add
xchg
mov
xor
call
sub
sar
ins
mov
or
inc
sahf
cmps
cmp
test
enter
cmp
repz
pop
or
lods
jns
iret
repz
jmp
sahf
out
mov
out
ds
xchg
aam
or
xor
in
push
inc
ja
lock
repz
sub
sub
sbb
test
dec
repz
adc
cmp
jns
iret
repz
add
xor
out
mov
adc
out
ds
mov
adc
jne
repz
cmps
into
stc
and
repz
stc
push
push
pop
pushf
cmp
out
ret
pop
push
test
iret
repz
sbb
inc
push
(bad)
repz
out
in
sbb
loop
cmp
lea
int
jns
out
push
imul
iret
repz
sar
sub
push
cmps
stc
cmp
jle
aad
sbb
sahf
pop
xchg
ret
push
dec
call
adc
dec
push
lahf
out
jae
(bad)
and
cmp
repz
pusha
xchg
sahf
out
and
repnz
and
push
sar
and
neg
lahf
mov
xor
push
mov
enter
push
push
push
inc
aad
jmp
xor
and
cdq
sub
loope
repnz
mov
retf
and
inc
mov
jb
inc
aam
pop
dec
sahf
in
call
sub
add
es
dec
cli
and
and
xor
mov
dec
xor
jmp
or
dec
sahf
gs
mov
fcomp
adc
pop
outs
das
mov
inc
jl
mov
fwait
cmps
mov
out
jb
js
add
add
inc
mov
fs
test
popa
ret
retf
les
(bad)
test
push
add
push
sub
mov
push
bound
leave
aam
or
pop
mov
add
shl
(bad)
in
add
add
(bad)
push
test
mov
or
cmps
bound
inc
xor
jp
rcl
shl
bound
repnz
sub
js
or
or
or
imul
add
adc
test
popf
dec
add
and
add
and
retf
scas
cmp
mov
call
add
cld
ss
into
and
call
inc
and
cmp
pop
nop
shl
add
shr
mov
jle
push
sbb
sub
jecxz
adc
call
adc
sbb
in
jno
xchg
mov
pop
into
pop
add
ror
add
add
call
jne
push
call
add
and
lea
xchg
push
add
add
add
cs
add
pop
sbb
fwait
jbe
add
fbld
adc
dec
sbb
jae
out
test
les
pop
loop
call
je
cmp
loop
ret
js
inc
stos
sbb
jns
jp
jnp
add
xchg
lods
sub
inc
lea
sub
add
fimul
add
out
push
add
sbb
nop
sbb
dec
dec
xor
inc
scas
sbb
add
add
in
sbb
add
imul
xchg
cs
xor
and
jo
xor
cmovo
sbb
lds
push
dec
mov
nop
sub
push
dec
or
xor
inc
pop
inc
xchg
sbb
inc
jne
sbb
inc
xor
adc
pop
sub
or
sub
add
movs
xor
inc
dec
or
inc
inc
imul
mov
sbb
leave
shl
xor
xchg
or
xor
or
mov
gs
xchg
cmp
shl
bound
std
push
sbb
clc
jo
cmp
push
sub
int3
fsubr
sbb
inc
data16
inc
adc
xchg
popa
ins
cld
int3
xchg
mov
and
(bad)
loopne
inc
int3
bound
outs
popa
cmp
and
dec
fistp
fs
bound
dec
jns
js
pop
and
mov
mov
xchg
pop
push
and
sbb
and
arpl
cdq
imul
jno
outs
imul
and
sub
inc
test
xchg
or
lds
inc
inc
add
or
xor
sar
pop
cmp
xor
ss
xor
pop
adc
sub
lea
arpl
pop
mov
jno
pop
ror
xor
push
or
inc
push
js
inc
jmp
push
imul
jns
ss
hlt
imul
mov
dec
ins
gs
push
xor
xchg
loop
rol
inc
pop
sub
add
add
add
pop
inc
aaa
pop
mov
mov
xor
inc
jge
or
pop
sub
add
add
and
jae
or
sub
sub
pop
inc
dec
and
mov
cmps
test
add
inc
jne
mov
movs
dec
popa
inc
and
xor
mov
add
rol
xor
pop
adc
xor
add
outs
or
add
call
push
mov
pusha
add
sbb
les
test
or
ss
jne
pusha
add
and
add
test
mov
imul
lea
mov
and
inc
sub
or
push
pop
push
test
push
sub
xchg
stos
mov
push
ins
jae
push
and
dec
inc
mov
add
mov
ret
xchg
push
xchg
and
or
inc
mov
mov
pusha
dec
pop
ss
push
dec
into
pop
pop
jbe
rol
dec
inc
ret
mov
and
push
ins
imul
push
mov
or
fstp
dec
or
or
mov
dec
push
inc
push
sbb
or
scas
dec
inc
jae
fld
inc
repz
dec
in
push
add
fnstcw
shl
mov
sub
or
push
jle
push
adc
int
add
xor
nop
push
or
(bad)
push
sti
cdq
bound
outs
jb
inc
outs
nop
add
retf
popa
pop
xor
popa
arpl
outs
inc
pop
add
fld
dec
jp
lods
add
popf
outs
mov
test
pop
call
jbe
addr16
je
dec
add
add
push
test
jge
push
hlt
inc
dec
jo
out
pusha
mov
inc
push
jne
int
add
jae
mov
xchg
sub
lock
les
inc
dec
or
and
rcl
outs
arpl
push
pop
pop
jb
stos
js
or
(bad)
dec
push
add
imul
inc
add
pop
pop
or
add
pop
dec
(bad)
aam
rcl
and
aas
mov
les
mov
dec
adc
or
inc
sub
dec
loope
adc
push
push
push
test
cmp
mov
push
in
or
ins
pop
repz
loope
adc
stc
pop
lea
or
addr16
or
sbb
test
adc
add
add
ret
mov
and
mov
adc
popa
xchg
adc
es
or
mov
sub
adc
stc
cdq
add
or
xor
xchg
or
ja
mov
pop
or
pop
mov
sbb
mov
xor
adc
adc
push
sbb
popa
and
adc
and
inc
retf
mov
dec
dec
imul
jecxz
adc
inc
add
push
push
adc
inc
push
sbb
stos
fwait
call
sub
dec
or
jbe
sub
pop
add
xchg
add
add
lods
add
dec
cdq
or
add
mov
or
sub
rol
pop
nop
int
sbb
push
mov
or
repnz
add
bound
and
pop
jl
repnz
jg
clc
aas
push
pop
jmp
int
jae
rol
add
or
cmp
jnp
clts
aas
(bad)
jg
pop
inc
add
addr16
jnp
ret
pusha
jge
or
cmp
jo
inc
sti
cmp
add
rol
pop
xchg
movs
inc
lock
clc
mov
pop
int
fcmovne
repnz
sbb
ficomp
imul
ja
add
add
loopne
lock
push
mov
cld
pop
das
lock
pop
sbb
ret
add
icebp
fisub
xor
sub
(bad)
out
mov
mov
jb
push
jbe
movs
fcmovnu
stc
jg
lock
inc
mov
push
pusha
aas
iret
inc
inc
jle
rol
inc
lock
loope
or
jo
xor
push
add
jns
xchg
dec
pop
aas
jg
out
pop
xchg
dec
(bad)
cmp
cmp
add
jnp
mov
push
or
aam
sti
retf
daa
add
in
in
pop
fdivr
xorps
outs
inc
push
mov
aaa
loopne
jns
add
push
clc
lock
outs
mov
neg
rcr
es
add
pop
push
xlat
mov
popa
inc
loopne
outs
clc
pop
adc
push
ret
add
addr16
pop
cmps
adc
pop
add
xlat
pop
fldl2e
xchg
je
lods
adc
mov
add
inc
nop
stos
sbb
add
mov
bound
pusha
pop
cld
pop
pop
in
out
mov
test
cmp
xadd
jle
les
aas
addr16
adc
ret
pop
cld
pop
cmp
fadd
push
inc
adc
into
add
lds
lock
jo
dec
sub
or
mov
cmp
sbb
sub
inc
add
xchg
in
inc
add
xor
shl
sbb
push
push
push
sbb
pop
sbb
inc
dec
in
adc
cmp
not
clc
dec
sbb
cmp
sbb
fld
or
test
cmp
jge
pop
push
push
pop
aam
add
push
xchg
push
and
xchg
push
and
push
dec
jmpw
sbb
pushf
into
add
arpl
add
jbe
sahf
xor
ins
adc
outs
adc
popa
add
pop
mov
push
jns
dec
ss
xchg
add
ss
add
out
fstp
imul
popa
mov
bound
mov
push
addr16
jne
jae
sub
outs
std
fidivr
mov
push
data16
pop
add
fstp
adc
imul
outs
dec
jb
ins
fild
addr16
xchg
and
cmp
popa
imul
add
stos
rol
inc
jb
jbe
lahf
ret
mov
ins
fs
and
pop
pop
sbb
scas
push
push
sub
jp
lods
fld
je
jne
jp
pop
adc
or
pop
lock
sbb
push
addr16
jae
and
add
outs
aas
sbb
rol
out
add
inc
jmp
jo
xlat
mov
adc
ss
loopne
inc
(bad)
dec
addr16
test
add
xchg
mov
or
add
push
xor
add
xchg
push
add
inc
dec
add
mov
and
dec
dec
or
xchg
scas
mov
out
pop
push
fdivr
ja
dec
or
inc
pop
sub
mov
push
inc
jae
push
data16
ja
add
ins
inc
jo
mov
push
mov
gs
je
ffree
sti
mov
jo
pop
dec
pop
rol
push
shl
or
dec
out
out
out
or
pop
add
data16
add
mov
dec
fimul
push
pop
icebp
add
push
iret
arpl
xlat
sub
push
inc
add
sbb
lock
push
retf
jns
es
xor
pop
test
or
ret
sub
imul
pop
sbb
pop
fsubr
add
sub
mov
jae
arpl
sub
hlt
fisubr
sahf
ins
pop
pop
pop
pushf
out
or
mov
mov
daa
dec
ds
and
lahf
imul
fbstp
fs
lahf
xlat
pop
or
lods
add
inc
(bad)
mov
cwde
out
fbstp
je
jb
adc
jae
je
je
(bad)
call
sub
or
(bad)
(bad)
retf
cmp
fucomip
sbb
dec
das
gs
jne
mov
lock
jb
jbe
iret
popa
mov
inc
add
daa
dec
jnp
sbb
pop
pop
enterw
scas
call
or
sbb
sub
jae
and
mov
daa
das
xlat
cld
add
je
xor
push
ret
or
dec
xor
jb
arpl
jl
xchg
retf
arpl
dec
sub
inc
and
movs
push
call
inc
or
ins
arpl
daa
out
iret
or
and
loopne
sbb
es
or
jb
push
jge
add
dec
add
or
sysret
ins
daa
pop
push
adc
out
outs
mov
pop
lock
sbb
push
sti
mov
push
push
(bad)
and
mov
mov
cmps
pop
or
imul
add
push
add
or
inc
cmp
mov
push
add
addr16
outs
inc
mov
lock
add
xchg
jae
pop
cmp
test
div
or
mov
jbe
scas
sbb
sbb
push
jo
ja
adc
sbb
sbb
push
inc
adc
push
push
xchg
inc
mov
imul
fisttp
outs
mov
adc
jae
je
lods
cli
xor
jb
bound
test
pop
mov
xor
pop
mov
xlat
arpl
gs
les
aam
push
cmp
mov
inc
fwait
push
arpl
lock
fs
cmp
ret
push
and
xor
scas
inc
xlat
pop
mov
xor
and
aaa
push
xor
pusha
test
jp
inc
rol
push
inc
jle
jns
rcl
outs
shl
(bad)
pop
or
push
neg
cmps
ja
outs
daa
or
dec
jae
div
in
jecxz
adc
push
inc
or
and
mov
sti
add
xlat
sub
push
xchg
or
and
add
jmp
repz
outs
add
scas
and
adc
scas
sbb
pop
jg
sbb
ror
stos
imul
sbb
xchg
ficomp
or
mov
add
data16
loopne
les
mov
arpl
dec
dec
xlat
mov
arpl
and
and
lahf
mov
data16
push
popa
pop
jne
outs
neg
push
arpl
je
mov
mov
sbb
sbb
addr16
pop
das
or
and
loope
mov
(bad)
sti
out
xor
or
cmp
sub
call
rcr
jo
js
add
les
add
jge
shl
add
and
mov
jnp
adc
(bad)
or
bound
outs
pop
(bad)
lahf
pop
add
outs
pop
or
imul
outs
arpl
scas
mov
add
add
stos
stos
add
push
enter
scas
pop
cmps
cwde
sub
push
fiadd
arpl
jo
pop
repz
arpl
push
add
ins
or
dec
add
sub
sbb
pop
pop
mov
xor
daa
iret
jb
add
bound
clc
mov
je
add
ins
das
push
outs
xor
imul
push
adc
out
sub
jmp
inc
sub
sub
test
cmp
and
das
add
mov
rcl
adc
outs
pop
adc
pop
shr
nop
call
mov
sbb
imul
test
out
dec
jo
jo
sbb
jne
add
inc
js
outs
and
jo
and
inc
mov
retf
dec
test
and
adc
add
mov
pop
js
jae
gs
or
jg
(bad)
adc
xor
sub
popa
movs
mov
xor
adc
add
and
xor
fidivr
cmp
jae
inc
add
add
movs
(bad)
std
add
push
and
mov
jmp
push
adc
jecxz
add
xor
pop
xor
inc
mov
inc
xchg
cmp
sub
jg
mov
mov
imul
xchg
adc
pop
sub
jbe
icebp
jecxz
add
jbe
addr16
add
xchg
xchg
ret
sub
cs
jnp
aas
cmp
xor
adc
pop
pop
adc
jo
or
pop
xchg
arpl
aas
or
mov
xor
inc
and
lds
sbb
jnp
(bad)
jbe
and
jo
xchg
jmp
in
iret
das
fwait
data16
and
addr16
jae
outs
cmp
ds
push
ja
add
stos
adc
sbb
(bad)
adc
sub
aaa
and
push
aaa
sub
movs
punpckldq
add
add
xchg
sbb
mov
sbb
inc
xchg
inc
mov
addr16
and
push
cmp
add
mov
out
adc
push
mov
imul
jns
adc
push
imul
arpl
pop
fs
imul
pop
aas
jns
icebp
pop
or
fs
adc
(bad)
or
inc
sbb
push
sbb
outs
cmps
out
lds
jo
adc
enter
inc
cmps
push
mov
(bad)
jp
and
add
arpl
push
in
shr
sbb
stos
outs
enter
arpl
and
inc
arpl
add
jg
sbb
je
pop
jne
arpl
loop
sub
push
and
sbb
mov
add
inc
mov
inc
and
xor
lods
push
sti
addr16
push
push
(bad)
sbb
and
shr
or
or
fwait
adc
push
(bad)
sbb
sub
sbb
xor
and
mov
or
push
cmp
adc
in
inc
inc
sti
jmp
push
call
push
cmp
stos
add
mov
xor
arpl
dec
lods
inc
or
scas
dec
mov
nop
sbb
mov
add
popa
xlat
push
sbb
test
jnp
add
inc
rcl
adc
ins
cli
call
xor
shl
pop
popa
lahf
call
mov
dec
rcr
dec
stos
shl
or
fstp
and
inc
and
and
add
adc
fadd
xchg
div
jns
and
fild
ja
inc
dec
adc
or
mov
outs
or
das
add
test
mov
sbb
add
adc
xchg
mov
add
pop
pop
mov
sub
push
add
aas
push
sub
adc
mov
push
movs
add
cmps
push
mov
jmp
lods
bound
ja
fiadd
dec
add
shl
mov
fsub
in
adc
addr16
push
ret
jecxz
mov
popa
outs
dec
pop
nop
sbb
add
sti
add
rcr
pop
ret
cmc
jno
mov
pop
sub
sub
sti
xchg
sub
add
mov
pop
sub
cli
xor
stos
add
jp
sbb
ins
add
fbld
add
dec
shr
mov
sub
push
or
sub
fimul
aas
or
or
rcl
xchg
and
push
fild
sub
push
dec
add
sub
add
mov
(bad)
je
sub
xchg
popa
pop
ja
or
pusha
rcl
loope
add
jae
je
dec
shr
scas
sbb
test
add
jno
cmp
dec
add
pop
pop
pop
jae
fisttp
loopne
sub
retf
daa
add
mov
jecxz
ror
mov
daa
cmps
sti
inc
add
loopne
adc
add
outs
mov
les
ret
es
sub
sub
add
inc
or
mov
pop
(bad)
jnp
xor
fist
pop
and
and
jae
test
push
jb
dec
clc
shl
sub
and
adc
push
out
daa
xor
and
push
inc
adc
and
adc
jmp
(bad)
inc
es
aaa
mov
pop
fwait
cmp
pushw
push
rol
add
cmps
add
jo
add
dec
loopne
add
cs
inc
inc
xor
bound
clc
add
lock
jns
gs
push
bound
loopne
in
pop
pop
and
imul
ret
jg
imul
inc
outs
ins
push
inc
je
inc
add
lods
inc
xor
cmp
inc
push
pop
dec
cld
pop
jle
jl
call
dec
inc
push
push
inc
push
or
addr16
or
retf
push
int3
nop
lock
mov
cmc
or
or
push
cmps
add
or
push
dec
ins
and
ins
lock
ins
or
js
cld
dec
inc
imul
mov
or
into
gs
inc
push
xor
dec
adc
or
pusha
loop
pop
scas
and
fdiv
into
jne
or
pop
or
loopne
out
lods
popa
outs
jns
or
sbb
push
xchg
add
and
pop
xchg
xchg
add
or
or
ins
jae
mov
arpl
pusha
or
out
push
push
ror
or
or
dec
popa
ror
add
jg
mov
inc
pusha
div
mov
ins
ret
or
je
out
or
dec
outs
jne
inc
outs
ja
push
test
das
inc
or
inc
add
adc
xor
or
pop
push
jo
push
add
add
inc
icebp
pop
dec
add
push
inc
jne
je
push
adc
imul
jl
pop
push
stos
loope
pop
idiv
sti
push
push
outs
clc
cmps
and
jae
mov
lock
pop
inc
mov
inc
mov
gs
dec
jne
push
or
inc
imul
hlt
pusha
into
fsub
mov
jle
xor
enter
sbb
ins
xor
push
mov
cmp
cli
outs
push
fs
call
xchg
shl
sbb
push
fld
cmp
jae
push
popa
(bad)
int
cwde
fs
add
push
sbb
add
xor
stos
mov
or
xchg
ss
cmp
dec
adc
xor
in
enter
pop
lock
scas
outs
outs
pop
sbb
mov
ret
adc
leave
bound
xchg
bound
push
pop
adc
fs
mov
bound
inc
loope
cmp
cmps
or
test
lea
inc
dec
pop
add
mov
or
loopne
push
mov
iret
adc
adc
mov
add
add
add
sub
out
adc
push
adc
jne
mov
jo
inc
mov
and
xor
pop
or
arpl
push
cmp
or
adc
int
outs
adc
cmp
sub
loope
imul
sbb
inc
popa
out
adc
ss
add
add
arpl
add
lock
mov
pusha
add
ret
sbb
ins
pushf
jmp
in
push
data16
xchg
dec
movs
and
or
push
clc
adc
and
or
sbb
cmc
in
push
lods
addr16
sub
gs
sub
aaa
add
je
jmp
pop
ins
mov
ret
lods
add
arpl
add
outs
and
adc
jbe
fs
add
gs
outs
jmp
sti
adc
or
popaw
jbe
jbe
sti
(bad)
mov
jae
push
addr16
popa
ret
cmps
ret
mov
jae
xchg
push
mov
imul
mov
gs
loopne
out
js
push
mov
jbe
push
scas
sub
push
sbb
push
add
scas
fiadd
add
mov
and
ror
mov
xchg
js
add
add
lds
in
jmp
jmp
or
xor
mov
sub
sub
mov
mov
sub
or
add
pop
add
mov
shl
rol
sub
adc
test
add
sbb
pop
and
adc
rol
and
inc
fld
mov
xor
shl
add
push
jb
add
push
pop
add
dec
test
xchg
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
sub
xor
pop
ret
test
xchg
or
cmovo
sbb
inc
or
sbb
add
daa
repz
push
and
sbb
mov
out
and
gs
add
fisub
push
push
or
jns
je
push
imul
sub
arpl
push
outs
popa
push
add
sub
dec
and
sub
inc
push
add
dec
pop
mov
cmps
cs
js
jmp
dec
inc
dec
fidiv
cmp
loopne
mov
push
imul
ror
(bad)
inc
dec
sbb
(bad)
ret
nop
sub
mov
dec
pop
push
imul
jb
sbb
mov
addr16
fimul
jb
jns
mov
sbb
inc
inc
push
bswap
nop
sbb
or
adc
or
movs
loopne
and
ins
cmp
cmp
mov
inc
dec
shl
and
rcl
sbb
or
cdq
popf
inc
sub
and
popa
sub
push
inc
fs
inc
add
dec
add
ds
daa
cmp
out
sbb
xor
fs
mov
mov
mov
ins
and
jmp
das
lock
sbb
jg
inc
fs
sbb
sbb
pop
dec
jnp
add
jb
jne
shl
ror
fs
sbb
add
pop
jmp
pop
cmp
and
inc
das
and
push
push
jo
rol
shl
push
inc
push
and
push
movzx
jne
je
ins
pop
outs
outs
xor
add
pop
pop
mov
and
aas
pop
sbb
and
cdq
in
leave
adc
fmul
push
push
cwde
(bad)
out
jle
pop
xchg
sub
sbb
arpl
mov
loopne
and
xchg
pop
popf
sbb
push
cmp
movs
imul
gs
cmp
js
pop
push
outs
ins
push
push
dec
adc
scas
popa
into
inc
shr
or
pop
shl
arpl
sub
and
(bad)
in
sub
push
jae
mov
mov
xor
mov
(bad)
mov
push
jo
add
out
popa
fs
fild
inc
js
mov
scas
add
mov
sub
jl
add
fcomp
cmpps
xor
rcr
push
jne
sub
outs
rcl
push
add
adc
push
lods
adc
je
stos
lahf
add
aas
push
je
push
pop
cmp
ja
adc
mov
ins
in
mov
push
jb
inc
adc
adc
in
xchg
sbb
push
stos
pop
jbe
sbb
int
movs
imul
push
mov
cmps
adc
adc
fld
jmp
pop
xchg
jo
ins
jae
adc
adc
lods
sbb
jne
push
pusha
xor
fs
cli
sbb
lods
rcr
popf
repz
mov
inc
inc
push
xor
mov
ret
dec
bound
add
fucomi
fcom
mov
imul
adc
pop
arpl
inc
adc
ins
test
sbb
jne
cmp
sub
imul
xchg
sbb
nop
add
jno
adc
adc
outs
imul
or
mov
cmovnp
sbb
sbb
rcl
add
call
jbe
dec
movs
push
inc
push
loopne
lods
pop
in
pop
rol
inc
clc
outs
inc
jb
sub
sbb
jno
push
retf
inc
sub
and
push
movs
jbe
sub
daa
jbe
pop
lahf
sahf
dec
outs
add
ja
mov
adc
and
jp
outs
ins
outs
jb
neg
bound
push
and
pop
add
fisub
xchg
sbb
or
popf
cmp
sahf
stos
sub
push
sub
or
push
jns
jno
sub
cmps
movs
(bad)
in
inc
sbb
ins
je
and
imul
aam
popa
imul
and
fiadd
jo
jb
jns
jecxz
jae
fsub
mov
push
dec
fxtract
bound
ret
popf
inc
inc
daa
inc
dec
inc
xor
and
arpl
inc
cli
jmp
(bad)
sub
pop
sahf
ins
data16
push
bound
adc
daa
xchg
sbb
push
sub
push
push
jmp
adc
push
fcomp
adc
jmp
pop
mov
sti
mov
push
js
push
and
inc
ins
mov
jnp
push
mov
mov
dec
jb
das
into
push
and
sub
jecxz
and
inc
add
dec
and
push
popa
bound
mov
jbe
add
inc
(bad)
jmp
sub
daa
sub
ficomp
pop
imul
inc
aaa
mov
mov
mov
sub
jo
gs
add
adc
test
pop
push
pop
xlat
cmp
lods
push
gs
in
push
cmp
fdiv
xor
inc
sub
push
dec
arpl
ss
adc
push
pop
jo
scas
adc
dec
push
sbb
mov
inc
push
push
ds
enter
cdq
xlat
shl
adc
and
popa
xor
stos
xor
jns
push
jo
pop
sbb
outs
sbb
ret
mov
inc
fs
popa
outs
addr16
pop
adc
(bad)
arpl
aad
fcomp
(bad)
loope
inc
cwde
lock
fwait
gs
outs
push
sbb
or
fisttp
movlps
or
xor
pusha
or
fcom
movs
cmp
ja
in
dec
imul
out
in
xchg
movs
sub
call
add
sbb
pop
je
popa
jo
xlat
add
call
or
pop
loope
loop
inc
rol
es
imul
pop
sbb
sub
push
aas
dec
adc
sub
ins
dec
outs
popa
das
icebp
mov
add
daa
je
or
fwait
jo
add
ins
xchg
add
cwde
or
push
push
mov
pop
fisubr
sbb
jbe
icebp
and
movs
call
and
nop
xchg
sbb
add
dec
shl
add
xor
shl
pop
inc
lods
dec
shl
or
pop
mov
mov
mov
dec
mov
dec
inc
cmp
fisub
push
and
dec
add
ins
mov
xchg
mov
lahf
scas
push
push
dec
inc
sub
mov
stos
into
jmp
mov
push
bound
jg
je
fs
in
outs
jle
fs
jae
fs
(bad)
lea
imul
adc
sar
js
cmp
retf
pop
pop
popf
and
push
imul
sbb
pop
inc
jne
data16
adc
dec
shr
cmp
xchg
or
push
cmps
adc
sub
and
pop
and
popa
ins
cmp
loopne
sbb
pop
sbb
nop
adc
add
or
sahf
retf
sbb
add
xchg
push
popa
imul
sub
add
adc
fidiv
cmps
adc
retf
retf
pop
mov
push
push
enter
(bad)
fst
inc
nop
mov
push
and
rcl
mov
add
scas
xor
sbb
inc
xor
jbe
cmp
outs
pop
cmpxchg
jne
iret
adc
stos
aas
cwde
push
sbb
push
push
sbb
stc
mov
pop
xor
fstp
jnp
add
jecxz
push
outs
ins
ret
mov
or
ss
cld
or
sub
addr16
jne
fs
cmp
shl
mov
push
je
je
mov
cwde
ret
and
arpl
movs
jae
fcmovnb
mov
adc
imul
inc
jbe
push
bound
in
xchg
sbb
pop
and
ins
and
pop
ret
loope
sbb
int
push
call
jne
pop
rcl
push
test
or
scas
mov
or
mov
addr16
gs
bound
sbb
pop
pop
stos
outs
pop
push
mov
cmps
mov
cmp
popa
gs
inc
sbb
pop
cmp
mov
push
adc
xchg
and
cmp
xor
ss
pop
or
adc
fs
pop
mov
outs
outs
ins
xor
dec
loop
jb
sub
and
mov
out
sbb
mov
cmp
jbe
pop
rcr
xchg
call
xor
jo
push
push
sbb
dec
dec
dec
sahf
push
imul
data16
push
push
gs
inc
bound
outs
je
xor
and
xor
cwde
inc
sar
jno
inc
pop
imul
scas
and
movs
gs
cs
jbe
cmp
stc
pop
mov
dec
pop
stc
test
add
lods
push
outs
nop
int
pop
outs
pushf
push
mov
or
push
push
mov
add
jae
stos
add
or
push
push
sti
mov
test
push
mov
mov
aad
pop
push
js
or
push
push
out
xor
and
sub
ins
daa
outs
xchg
jo
xor
push
loope
jae
cwde
in
frstor
adc
push
dec
ja
mov
loopne
test
sbb
xor
stos
mov
pushf
push
push
arpl
push
loop
mov
pusha
xchg
push
pop
pop
sub
mov
(bad)
icebp
cmc
mov
sbb
push
lahf
sub
fdivr
mov
inc
adc
int
pusha
dec
push
and
js
imul
pusha
loopne
push
add
out
gs
jb
arpl
and
push
dec
dec
je
jo
xor
xchg
mov
je
and
fstp
xlat
inc
adc
test
arpl
in
inc
lods
xor
add
dec
std
add
outs
add
add
xchg
push
sub
hlt
scas
cmp
or
push
nop
or
add
rcl
adc
inc
mov
push
mov
add
mov
add
add
or
cs
in
push
and
adc
and
and
add
mov
mov
xor
dec
dec
pusha
fwait
cmp
cs
xchg
inc
or
sub
in
ss
sbb
adc
adc
or
add
test
adc
sbb
add
movs
push
mov
dec
inc
mov
or
rcr
cmps
jbe
push
stc
cs
dec
jb
leave
inc
jb
xchg
dec
xor
imul
inc
add
xor
cs
sbb
cmps
add
pop
dec
pop
ret
shl
movs
dec
add
dec
shl
pop
stc
test
push
sub
sub
mov
xchg
pusha
adc
add
mov
lea
mov
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
test
add
inc
dec
