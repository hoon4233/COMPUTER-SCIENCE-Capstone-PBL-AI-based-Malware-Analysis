xor
add
add
add
add
add
or
add
add
add
push
test
add
xor
add
add
add
add
and
xor
add
add
add
jb
add
jo
add
add
sub
add
or
add
or
add
or
add
jo
add
add
add
or
add
add
xor
push
add
jo
push
add
or
add
add
add
sub
xor
add
add
adc
or
and
push
push
add
xchg
jle
add
add
jle
add
add
imul
add
pushf
push
pop
pop
or
add
imul
add
add
or
add
or
add
add
pop
add
jo
or
add
jae
add
or
pop
outs
or
or
add
pop
adc
push
add
or
jae
add
push
jp
jle
add
add
pop
add
jo
or
add
sub
add
push
or
add
fiadd
jle
add
add
pop
add
jo
or
add
sub
add
or
sub
sbb
add
add
or
or
add
add
add
push
ins
add
add
add
adc
add
add
add
adc
add
or
push
outs
adc
add
jb
add
jo
adc
add
es
jb
add
jo
adc
add
push
push
outs
adc
add
push
pop
outs
adc
add
add
push
add
or
pop
lea
add
or
push
add
add
or
outs
sbb
add
jae
add
push
sub
add
push
add
sbb
add
sub
jb
add
jo
sbb
add
add
add
sbb
add
add
add
sbb
sbb
add
sub
push
add
or
sub
add
push
add
pop
add
or
push
add
add
add
and
add
add
add
add
add
add
sbb
add
add
sub
add
push
sub
adc
add
push
add
add
add
add
pop
add
push
outs
and
add
or
adc
outs
and
add
sub
add
test
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
(bad)
sbb
add
add
loope
add
and
add
push
add
pop
add
ins
add
add
dec
add
add
inc
add
add
add
clc
sbb
inc
cmps
cwde
stos
xor
retf
xlat
fs
cli
cdq
jo
jae
pop
cmp
enter
xchg
pop
and
xor
mov
sahf
(bad)
fisttp
sbb
inc
int3
fwait
sbb
pop
ficom
scas
pop
xchg
sub
sbb
pop
movs
xchg
mov
retf
out
dec
(bad)
push
fimul
mov
xlat
cmc
push
icebp
mov
adc
mov
retf
ror
dec
inc
mov
in
push
jecxz
xchg
(bad)
popa
pop
mov
in
or
or
fidivr
outs
inc
mov
inc
aas
out
adc
lods
xchg
jge
jmp
test
pop
sbb
push
fsub
sub
das
mov
test
xor
push
push
popf
mov
dec
out
fist
repnz
jbe
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
push
aaa
stc
repnz
lods
inc
lds
cs
fucomi
jbe
xor
pop
dec
jo
push
and
mov
mov
ins
(bad)
and
jbe
lds
adc
ds
sbb
mov
add
xor
retf
enter
jns
push
mov
dec
xchg
les
and
rcl
shl
add
stc
repnz
lods
inc
jecxz
fidiv
cs
fistp
and
dec
mov
inc
cs
mov
fild
cli
or
xor
xor
jo
adc
imul
xor
(bad)
sbb
and
fist
repnz
jbe
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
ja
mov
push
aaa
stc
repnz
repz
push
pop
fidivr
cs
call
stos
pop
ins
push
mov
jl
mov
mov
jmp
jno
int
sbb
das
mov
test
xor
sbb
and
retf
xchg
aaa
mov
jb
ins
jbe
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
push
aaa
stc
repnz
lods
inc
jecxz
fidivr
cs
cld
fist
xor
pop
ins
push
mov
jns
mov
mov
jmp
jno
iret
xor
das
mov
test
xor
outs
inc
cmp
scas
xchg
aaa
mov
arpl
aad
lock
xchg
mov
push
std
rol
stos
sar
outs
ja
mov
push
xor
repz
mov
jp
push
ds
cli
fist
xor
pop
ins
dec
mov
jl
mov
mov
jmp
jno
int
push
jo
adc
inc
inc
scas
pop
sbb
sbb
and
retf
xchg
aaa
mov
jbe
test
repz
dec
xchg
les
and
rol
stos
rcr
test
ja
mov
push
aaa
stc
repnz
lods
inc
jecxz
fisubr
push
pop
idiv
fist
xor
pop
ins
push
mov
ins
lahf
xor
jmp
jno
mov
mov
jnp
xor
mov
dec
out
fist
repnz
jbe
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
push
xor
les
fwait
lods
inc
jecxz
fidivr
sub
jmp
(bad)
xor
pop
ins
push
test
jno
mov
mov
cs
lahf
(bad)
jne
or
int
sbb
das
mov
lods
push
xor
sbb
ins
jecxz
fwait
aaa
mov
pop
push
mov
fs
ret
mov
and
shl
fwait
stos
sar
arpl
adc
stc
clc
mov
aad
outs
lods
lods
inc
loope
cmps
ss
neg
jbe
cmp
or
pop
ins
dec
mov
mov
mov
jmp
jno
out
pop
aaa
jo
adc
imul
sbb
mov
dec
out
aad
aaa
mov
jb
inc
outs
push
fsub
push
cmps
inc
rcl
mov
xchg
mov
ja
xor
ins
fwait
lods
dec
loope
cmps
sub
(bad)
je
xor
cmp
xor
call
cli
or
cmp
xor
jae
adc
imul
ja
mov
jl
fld
repnz
je
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
add
fnstsw
sbb
fadd
push
ficom
sub
cli
cld
fnstcw
sbb
stos
sbb
cs
mov
fild
lock
or
pop
sbb
cmp
sbb
cmp
stos
cmps
cmp
aad
sbb
ins
pop
push
popf
pop
repz
fs
nop
pop
sub
rol
stos
sar
pop
jge
mov
retf
repz
dec
cdq
mov
pop
fidiv
pop
test
jbe
or
sbb
push
mov
in
mov
mov
fdivr
sbb
xor
xor
pop
add
das
mov
test
xor
mov
jl
fist
lock
jp
test
mov
dec
cmps
into
xchg
inc
in
jno
div
mov
jecxz
mov
pop
jp
xchg
adc
retf
icebp
sbb
mov
in
fidivr
sub
(bad)
clc
imul
popf
sbb
mov
or
fild
lock
aas
iret
xor
push
mov
cmps
bound
jg
mov
jl
test
gs
fcom
fimul
push
stos
pop
stc
mov
xchg
jo
out
and
rol
xchg
scas
das
test
push
xchg
sahf
sbb
cld
repz
outs
mov
pop
in
(bad)
adc
jbe
push
push
push
inc
mov
jle
mov
jge
mov
mov
fst
sbb
xor
xor
jne
addr16
sahf
imul
sub
lods
sti
push
and
xchg
aaa
mov
outs
inc
mov
stc
(bad)
fisub
les
and
rcl
xchg
mov
jae
stos
mov
adc
repnz
push
inc
mov
sub
jns
pop
pop
sbb
and
xchg
scas
lahf
es
pop
into
(bad)
and
xor
sbb
cmp
imul
pop
movs
xor
bound
and
fnstenv
sti
ins
pop
push
popf
pop
repz
ins
test
xchg
fs
nop
add
fcmovnbe
test
jmp
leave
das
test
jne
mov
clc
test
jmp
fwait
lods
dec
out
hlt
daa
or
push
(bad)
ds
xor
inc
cs
test
call
icebp
aas
mov
je
push
push
int
ds
add
adc
jg
mov
ja
xchg
out
fist
aam
pop
inc
lea
mov
dec
xchg
les
and
ins
xchg
(bad)
movs
pop
ja
mov
push
aaa
stc
repnz
movs
inc
sar
cs
stc
(bad)
rcl
xor
pop
ins
push
mov
dec
movs
mov
mov
in
repz
add
xor
das
mov
fidiv
movs
cmp
into
test
out
fnstenv
repnz
inc
pop
popf
pop
repz
inc
out
cmps
fs
jno
xchg
shr
xchg
xchg
retf
das
test
jne
leave
mov
aaa
stc
clc
xor
lods
inc
jecxz
stos
cmp
or
cld
fdivr
add
dec
mov
inc
cs
popf
mov
retf
fild
cli
es
jbe
jno
retf
inc
add
and
imul
xor
(bad)
or
sub
out
fist
hlt
adc
push
stos
pop
stc
mov
jg
les
sub
rol
popf
int
test
jne
xchg
hlt
push
aaa
stc
clc
mov
jecxz
ins
fwait
add
fidivr
cs
aam
call
stos
pop
ins
push
stc
inc
add
mov
outs
jmp
push
es
sbb
pop
mov
lods
imul
cmp
mov
ins
out
fist
repnz
jl
nop
jle
mov
fs
mov
out
jb
std
rol
rol
aas
stos
pop
jge
mov
les
sahf
mov
jecxz
out
or
or
cld
fnstcw
jo
dec
mov
dec
cs
lahf
mov
mov
jmp
jns
int
sbb
cmp
aas
std
imul
cmp
lahf
sbb
and
(bad)
bnd
push
mov
xor
jno
std
shr
(bad)
mov
ja
sahf
stos
sbb
stc
repnz
dec
ins
cwde
mov
or
fst
xor
push
jge
mov
add
mov
mov
out
fsub
xchg
sti
jbe
jb
fdiv
sbb
and
test
cmp
(bad)
xor
ficom
les
push
lea
mov
xchg
dec
call
ror
mov
push
mov
stc
out
sar
imul
out
leave
push
sbb
push
sar
jo
dec
stos
pop
jle
add
mov
mov
sub
dec
loope
and
ss
sbb
add
data16
mov
clc
adc
jb
mov
aaa
mov
dec
push
mov
dec
xchg
out
sbb
call
imul
add
test
jae
xchg
stos
push
aaa
stc
repnz
jp
mov
ds
fdivr
inc
je
arpl
sbb
mov
jge
mov
repz
out
cli
or
and
and
xor
add
or
scas
adc
into
cmps
rdpmc
and
fst
loop
jbe
stos
dec
loope
fldenv
(bad)
xchg
fs
jb
(bad)
or
dec
add
stos
adc
stc
repnz
dec
data16
dec
in
(bad)
xor
adc
aas
push
and
stos
pop
ins
js
inc
or
mov
retf
ds
jg
std
and
xor
and
das
mov
stos
jae
movs
sbb
movs
mov
pop
out
fist
repnz
jo
lea
xchg
jmp
je
xchg
js
mov
test
out
movs
cwde
shl
sbb
out
adc
(bad)
jae
mov
dec
cs
not
push
fidiv
pop
ins
push
fwait
dec
cs
lahf
mov
inc
jmp
add
shl
jb
xor
add
mov
xor
or
sbb
daa
jl
fist
repnz
jl
cmp
lock
fwait
(bad)
mov
and
fnstenv
(bad)
cdq
push
jg
mov
adc
int3
leave
mov
repz
outs
mov
retf
aaa
stc
retf
rol
xor
adc
mov
ds
xchg
mov
addr16
jno
iret
sbb
pusha
daa
and
fild
popf
jnp
movs
xor
mov
sbb
and
(bad)
xchg
aaa
mov
inc
pop
stos
pop
repz
ins
mov
loopne
in
jno
cmc
aam
jp
ins
or
jl
mov
adc
fadd
mov
repz
outs
mov
inc
out
pop
aad
cmp
cli
cld
fnstcw
and
dec
pushf
sbb
add
xchg
mov
mov
cs
mov
jne
jns
into
sbb
or
xor
add
cmp
mov
ins
out
fist
aam
jae
lea
mov
xchg
jl
xchg
std
shr
mov
jge
mov
push
aaa
jmp
dec
outs
mov
fidivr
cs
cld
fist
aaa
jo
dec
stos
sbb
push
mov
pop
lahf
mov
mov
jmp
pop
adc
add
mov
mov
icebp
imul
add
mov
dec
out
fist
fdivr
push
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
ja
mov
pop
add
repnz
outs
push
test
fidiv
push
fsubr
fist
aas
jp
xor
inc
cs
scas
mov
xchg
xor
fild
lock
mov
jbe
push
pop
int
sbb
sub
pusha
test
add
mov
aaa
and
rcl
aam
pop
inc
popf
pop
repz
jl
rol
fst
mov
aam
or
push
test
test
xchg
pop
scas
xor
xlat
fs
test
inc
arpl
inc
cs
mov
(bad)
dec
fild
lock
clc
jbe
push
call
sbb
stos
imul
inc
movs
cmp
mov
sbb
and
out
xchg
aaa
mov
jbe
stos
pop
rep
hlt
ins
xchg
les
es
lods
and
ins
or
ja
mov
push
aaa
stc
repnz
cmps
xor
pop
fidivr
sub
inc
call
fdivr
dec
push
mov
add
pop
stc
arpl
mov
mov
inc
fs
xor
xor
add
jg
push
movs
cmp
mov
dec
jecxz
xchg
aaa
mov
inc
push
stos
pop
cmc
mov
mov
and
fldcw
mov
jb
mov
adc
icebp
retf
sbb
jle
pushf
mov
xor
adc
call
stos
sbb
sbb
xchg
mov
jg
fmul
cwde
out
jbe
jno
enter
or
fwait
das
mov
mov
push
cdq
mov
ins
out
fist
retf
dec
dec
pop
mov
arpl
mov
lea
(bad)
outs
or
xchg
and
sar
ins
outs
fwait
scas
je
pop
(bad)
ds
fadd
cmp
stos
pop
jle
call
retf
cmp
(bad)
sbb
xor
cmp
pop
add
mov
mov
test
add
mov
cmp
fst
les
lea
mov
inc
call
xor
icebp
lea
xchg
outs
or
xchg
test
adc
std
clc
xor
jg
fwait
lods
inc
out
in
sub
fist
xor
jle
sbb
ds
cdq
nop
test
cmp
clc
bswap
std
jbe
jno
leave
pop
sub
pop
mov
mov
mov
ja
mov
inc
jecxz
xchg
aaa
mov
outs
push
stos
pop
stc
mov
cmp
xchg
inc
and
rcl
xchg
mov
jae
stos
mov
adc
repnz
inc
push
dec
fidivr
or
(bad)
repz
data16
jo
push
mov
inc
pop
dec
cmps
xchg
mov
sar
or
and
pop
add
das
mov
sbb
cmp
and
int3
xchg
xor
in
jne
jbe
push
mov
dec
lahf
ret
retf
test
std
shr
mov
jae
mov
sbb
xlat
repnz
test
pop
fidiv
push
fidiv
cmp
push
or
mov
mov
jmp
jno
iret
add
jns
adc
jb
and
cmps
pop
and
pop
(bad)
daa
test
pop
icebp
imul
jecxz
cmps
int3
mov
in
pop
es
aam
add
imul
xor
popa
cwde
test
cmp
paddq
fdivr
adc
pop
pop
push
mov
or
mov
mov
sub
pop
into
cli
or
xor
xor
pop
ja
fwait
pop
mov
test
xor
sub
leave
xchg
aaa
mov
jbe
stos
sub
xchg
les
and
rol
mov
das
test
add
xor
repnz
lods
inc
in
fidivr
fist
cmp
dec
mov
inc
cs
mov
stc
jnp
std
das
sbb
imul
add
fwait
das
mov
test
movs
cmp
mov
jno
aad
aaa
call
stos
pop
loopne
fsubr
xchg
fs
jno
out
test
stos
ret
inc
je
mov
adc
enter
fwait
lods
dec
out
scas
sub
sub
aam
push
call
mov
inc
cs
mov
mov
inc
idiv
cli
or
pop
retf
jo
adc
jl
mov
movs
adc
into
cmps
(bad)
and
fst
loop
jbe
stos
push
sti
xchg
sbb
xchg
push
cmc
nop
jno
std
shr
mov
ja
sub
repz
movs
inc
(bad)
addr16
ds
xor
sbb
push
pop
pushf
mov
mov
jmp
jno
int
adc
cmp
fcomp
sub
cmp
mov
sbb
and
push
repnz
bound
dec
cld
mov
sub
es
rol
fsub
or
xor
in
repnz
lods
inc
loopne
stos
adc
js
and
push
dec
lods
adc
pop
xchg
lahf
mov
stos
das
sub
or
xor
xor
inc
daa
popa
mov
jns
mov
xor
cmp
test
xor
and
stc
xchg
xor
jbe
stos
jbe
mov
push
sti
xlat
xchg
fs
pop
or
rol
mov
ja
mov
adc
(bad)
sbb
movs
inc
jmp
ds
fbstp
adc
dec
test
inc
cs
mov
lahf
dec
or
outs
jmp
jno
int
add
pop
fwait
xor
imul
xor
arpl
xor
xor
shr
jbe
lea
mov
jae
les
or
rol
cmps
sar
imul
add
addr16
ds
cmp
dec
stos
pop
inc
jg
inc
cs
movs
mov
dec
out
or
add
xor
adc
pop
fild
popf
jg
movs
cmp
stos
(bad)
pop
aaa
and
icebp
mov
mov
jp
stos
pop
icebp
mov
push
add
push
retf
xchg
jno
stc
aam
sub
inc
xchg
fwait
stos
sar
jp
mov
retf
fld
lods
movs
push
loopne
jmp
cs
clc
clc
jns
cmp
outs
test
push
mov
push
scas
mov
mov
stc
clc
xor
iret
inc
xor
cmp
fild
xor
sbb
jmp
mov
out
mov
lods
sti
jb
jle
inc
popf
pop
repz
inc
xchg
loopne
inc
in
jno
in
stos
or
mov
je
test
mov
ror
adc
clc
xor
ds
cli
sar
cmp
jge
stos
pop
ins
inc
pushf
inc
aaa
inc
cwde
mov
mov
jmp
inc
sbb
adc
adc
xor
imul
xor
mov
dec
out
fwait
aaa
mov
jb
jne
push
mov
inc
cdq
rol
stc
rol
stos
sar
add
sti
(bad)
jmp
push
icebp
cmc
cmps
fsubp
dec
ins
fwait
mov
ds
push
call
mov
inc
cs
mov
mov
sub
outs
jmp
jle
int
sbb
cmp
bts
mov
mov
cmps
add
mov
lods
sti
jb
jle
inc
popf
pop
repz
inc
xchg
jecxz
jo
xchg
jno
mov
test
jecxz
test
outs
je
mov
repnz
mov
pop
fidivr
and
and
xor
sbb
mov
popa
lea
fild
lock
mov
jbe
jns
mov
adc
fdiv
mov
movs
add
mov
dec
out
fist
test
popf
jp
mov
mov
xchg
jne
enter
in
scas
lahf
call
add
retf
outs
mov
inc
in
(bad)
xor
int
loop
push
sbb
pop
je
inc
daa
jp
nop
call
stc
sbb
pop
cmp
and
jle
add
sub
mov
arpl
and
aad
adc
push
gs
lea
mov
jnp
(bad)
mov
aam
popa
pop
(bad)
push
jecxz
mov
gs
mov
icebp
repnz
cld
repz
ins
fwait
lods
inc
jecxz
fimul
into
push
cld
xor
inc
mov
ins
push
mov
jbe
mov
mov
cli
cli
das
mov
ss
sbb
and
fcomp
movs
sub
sar
cmp
inc
icebp
dec
dec
push
mov
inc
xchg
ret
std
xchg
jno
call
mov
scas
(bad)
cmp
pushf
sbb
jmp
pop
mov
out
fidivr
cs
cld
fist
and
push
dec
mov
dec
cs
mov
mov
int3
clc
das
test
sbb
xor
jbe
cmp
or
mov
adc
mov
jae
les
fiadd
inc
pop
popf
jb
mov
xchg
fs
jbe
clc
fcom
mov
xchg
mov
sbb
in
repnz
in
repz
ins
cwde
lods
inc
jecxz
fidivr
es
call
stos
pop
ins
push
mov
push
lahf
mov
mov
sti
hlt
sbb
cmp
pop
test
xor
mov
inc
sahf
fcom
repnz
pusha
jg
dec
repz
js
(bad)
mov
out
inc
xor
fld
xchg
mov
jae
mov
les
fwait
lods
inc
out
fidivr
sub
repnz
fisub
xor
pop
mov
inc
cs
mov
scas
or
div
cli
das
mov
xor
and
ja
xor
ds
fild
mov
push
mov
dec
(bad)
fist
aam
jle
lea
mov
dec
xchg
les
and
rol
popf
ret
popa
push
test
lock
(bad)
jo
lods
mov
or
ds
idiv
jbe
and
scas
sbb
jo
imul
cmps
mov
mov
sub
jp
clc
jbe
inc
inc
into
xor
inc
add
adc
imul
cmp
add
or
icebp
sahf
daa
mov
jg
test
mov
mov
adc
ror
bextr
inc
mov
fidivr
sub
fmul
fdivr
and
stos
adc
mov
jne
mov
mov
retf
mov
xor
xor
sbb
mov
add
and
fst
imul
push
stos
inc
(bad)
mov
push
cmps
(bad)
jecxz
(bad)
xchg
popa
and
icebp
div
ins
cmp
ja
mov
sbb
loope
(bad)
(bad)
dec
ins
cwde
test
cmp
or
xor
pop
test
jge
mov
or
mov
stc
addr16
shl
movs
clc
jbe
jne
into
and
sub
data16
jnp
mov
dec
int
xchg
aaa
mov
jle
adc
dec
xchg
xchg
fs
jno
std
xlat
xchg
adc
popa
mov
test
adc
xchg
pop
mov
mov
xchg
scas
jns
dec
fidivr
sub
aam
fdivr
cmp
pop
inc
and
or
fdivrp
or
cmp
add
xor
ins
mov
scas
aas
push
popf
mov
jl
jmp
inc
mov
jno
outs
inc
jbe
sub
out
mov
and
fild
stos
sar
ja
mov
add
stc
repnz
inc
fs
scas
inc
jecxz
fdiv
and
cli
cld
fisttp
adc
dec
scas
sbb
cs
cwde
test
push
clc
jne
push
cmp
push
sub
adc
pop
pusha
test
xor
(bad)
sbb
and
inc
mov
dec
push
stos
pop
cmc
mov
dec
pushf
(bad)
mov
popf
mov
test
loope
cli
xor
xchg
mov
lock
fisttp
fwait
mov
jecxz
into
cmp
fdivr
fist
add
sbb
mov
or
mov
mov
stc
stc
or
cli
jno
pop
xor
pop
fs
add
sub
mov
jg
mov
aad
daa
int
pop
leave
jns
push
stos
pop
(bad)
mov
inc
cwde
mov
je
xchg
arpl
rol
mov
jge
mov
adc
mov
or
dec
ins
cwde
mov
xor
ds
cld
fsub
xor
sbb
jbe
dec
ds
mov
xchg
cmp
outs
jmp
add
xor
sub
sbb
cmp
movs
(bad)
cmp
out
daa
mov
inc
push
stos
pop
stc
xchg
(bad)
ins
xchg
leave
mov
ss
rol
mov
push
xchg
mov
adc
sar
and
imul
inc
icebp
push
ds
out
pop
pop
cmp
sbb
jbe
dec
sbb
mov
mov
sub
dec
in
or
and
xor
bound
jle
cmp
movs
mov
fmul
xchg
repz
dec
outs
and
jecxz
cdq
ret
(bad)
xchg
inc
or
sar
and
in
nop
adc
in
aad
iret
mov
ins
lods
lods
inc
jecxz
div
es
mov
and
adc
cmp
and
iret
mov
mov
xchg
loope
adc
ds
xor
mov
xchg
sub
dec
scas
outs
mov
mov
aas
and
jmp
xchg
push
mov
jbe
ins
pop
push
fstp
mov
jae
shr
cmc
xlat
xchg
adc
push
sub
push
push
aaa
stc
loope
into
shr
xchg
int3
jno
sbb
cmp
jmp
jne
rcl
inc
mov
dec
scas
movs
mov
clc
cli
and
adc
and
bswap
ja
arpl
xchg
jnp
cmps
cmp
into
mov
lds
pusha
les
fild
shl
dec
jmp
mov
movs
test
jl
mov
not
daa
(bad)
lock
fiadd
mov
aaa
and
(bad)
hlt
fld
sub
jge
fwait
sbb
popf
inc
push
ins
xchg
int3
pushf
sub
sbb
and
and
adc
lahf
and
xchg
push
push
mov
mov
cmp
jl
out
push
mov
ins
push
xchg
dec
loopne
enter
xchg
fs
pop
es
(bad)
xchg
sar
imul
hlt
mov
mov
fwait
scas
push
out
retf
or
cld
fist
and
dec
mov
inc
cs
rol
(bad)
in
or
and
pop
aaa
arpl
cmp
imul
and
mov
xor
cmp
int3
xchg
pop
lods
loop
or
sbb
inc
mov
xchg
popa
push
(bad)
mov
icebp
push
sub
mov
jmp
pop
jp
mov
sub
ds
fdiv
cmp
dec
lods
sbb
xchg
inc
sbb
mov
mov
sub
imul
and
xor
and
xor
ja
pop
adc
pop
mov
dec
fmul
xchg
mov
jbe
pop
arpl
push
loope
lock
adc
retf
xchg
push
cmc
push
sbb
mov
and
shl
stos
aad
push
pop
stc
sub
sub
call
js
dec
fidivr
ins
jae
dec
pop
dec
mov
mov
pop
repnz
or
addr16
ret
js
add
jns
mov
inc
xchg
cmps
adc
dec
jmp
xchg
cmp
jle
mov
dec
adc
dec
in
sahf
inc
ss
aam
or
mov
push
mov
std
hlt
test
sub
push
loope
(bad)
sub
mul
test
push
dec
mov
dec
add
mov
lods
xor
jmp
mov
and
and
jg
sub
jb
fcomp
cmps
adc
mov
arpl
fstp
icebp
popa
jo
mov
dec
add
adc
std
rol
mov
ja
mov
addr16
std
mov
xchg
fwait
lods
jnp
pop
fidiv
es
cmp
push
jmp
je
cmp
xor
mov
fild
out
and
daa
(bad)
adc
add
cmp
fs
jae
shl
leave
int3
xchg
and
add
pop
repz
inc
cdq
ret
inc
xchg
es
jp
idiv
jle
movs
test
xor
ret
cld
push
outs
cwde
xchg
jns
ss
clc
(bad)
int3
adc
xor
inc
pop
jge
nop
mov
pop
sub
jp
fadd
adc
cmp
add
out
sbb
cs
adc
xor
and
out
cdq
aaa
mov
arpl
inc
shl
xchg
push
ficom
xchg
and
lods
lds
movs
jl
lods
stos
xchg
sbb
cld
cwde
out
mov
inc
mov
pop
call
fucompp
dec
ret
and
sbb
fwait
inc
adc
aam
sub
jg
in
sbb
retf
jbe
add
jae
mov
ja
mov
cmp
stc
inc
mov
outs
push
mov
push
test
sahf
pop
in
xchg
jno
std
xlat
xchg
and
imul
mov
aam
(bad)
dec
ins
pushf
movs
push
in
cmps
das
cmp
into
es
pop
mov
sbb
jl
mov
mov
repz
clc
jbe
jb
leave
or
arpl
sub
imul
cmps
adc
sar
cmp
(bad)
loopne
mov
ja
imul
repz
xchg
rol
out
rcl
lahf
mov
push
mov
stc
repnz
dec
push
dec
sti
sbb
fbld
es
pop
mov
sbb
jne
rcr
enter
enter
adc
xor
das
mov
lods
outs
aaa
movs
cmp
(bad)
sbb
and
fist
repnz
push
pop
stos
dec
repz
pop
xchg
les
and
jecxz
sub
adc
(bad)
sbb
dec
outs
fwait
mov
sub
stos
and
and
pop
mov
inc
or
mov
pushf
cs
sbb
sub
lahf
and
and
jo
sahf
dec
and
pushf
pop
cmp
leave
sti
loopne
xchg
out
ja
jns
push
mov
dec
xchg
(bad)
xchg
inc
lock
cmc
sar
xlat
push
sar
xchg
mov
out
cld
aad
push
fisubr
int
in
jns
inc
mov
inc
cs
mov
imul
sbb
xor
xor
gs
sub
dec
jbe
push
es
lahf
or
xchg
xor
arpl
push
loopne
dec
sar
out
hlt
aaa
rcr
cmp
mov
add
cli
xchg
test
and
fld
daa
je
pop
scas
adc
xchg
jbe
mov
cli
pusha
bnd
fs
sub
inc
sub
add
inc
shl
mov
pushf
pop
ds
xchg
(bad)
xchg
daa
rcr
or
mov
inc
mov
jno
out
(bad)
mov
xchg
mov
popa
xchg
clc
(bad)
dec
ins
pushf
movs
push
out
fist
cli
cld
xlat
inc
call
mov
sbb
jl
mov
mov
in
sbb
clc
jbe
jb
leave
pop
push
inc
mov
cmps
push
and
(bad)
cmp
shl
sbb
gs
xchg
jle
mov
dec
xchg
rol
call
push
inc
cmps
ja
mov
repnz
in
aad
imul
sub
pop
(bad)
cmc
fild
sub
sbb
ds
mov
sub
jns
div
push
cmp
inc
or
cmp
mov
push
mov
pop
test
jo
imul
lds
rol
call
sbb
sub
dec
push
in
nop
adc
(bad)
mov
out
imul
sub
pop
(bad)
in
inc
popf
cmp
sbb
call
stos
push
sub
dec
jecxz
xor
pop
aam
sbb
es
cmps
dec
jnp
jg
mov
pop
xchg
mov
sub
int3
xchg
or
std
jo
imul
pusha
cdq
(bad)
test
nop
jb
call
imul
jnp
xchg
mov
sbb
iret
loope
(bad)
inc
jg
mov
sub
ds
hlt
fld
sub
jge
fwait
sbb
popf
inc
pop
jge
mov
iret
pop
cdq
clc
or
dec
int
sbb
or
mov
push
mov
pop
call
ficomp
push
mov
inc
mov
cmps
inc
ret
cld
inc
and
rol
fwait
mov
dec
mov
lods
mov
push
aaa
stc
repnz
repz
pop
frstor
fidivr
dec
jo
dec
stos
adc
popf
inc
push
jl
mov
mov
stc
jmp
mov
jbe
jno
(bad)
adc
add
jae
sahf
pop
adc
mov
jb
(bad)
loopne
sahf
out
jno
imul
(bad)
iret
test
xchg
inc
sub
mov
xchg
xchg
fld
aas
mov
out
xchg
shl
xchg
into
shr
xchg
int3
jno
sbb
dec
out
fcmovu
push
fldcw
or
mov
pop
mov
sub
pop
int3
enter
pop
dec
pop
adc
add
lahf
sub
stos
push
adc
mov
xor
xchg
xor
jb
mov
dec
test
xor
jne
(bad)
xlat
mov
test
xlat
cmp
data16
movs
xchg
adc
loopne
shl
and
cmc
aam
call
ds
repz
inc
pop
(bad)
fdiv
inc
js
inc
pop
imul
(bad)
sbb
adc
sbb
lahf
es
shl
mov
push
adc
out
fist
les
push
lods
ins
jmp
loopne
loop
xchg
jl
xchg
push
push
hlt
rol
(bad)
les
imul
imul
test
shr
fwait
lods
inc
jecxz
(bad)
sub
int
in
jp
outs
mov
xor
mov
fild
out
and
xor
xor
imul
mov
add
jg
test
push
mov
cmp
retf
mov
inc
push
sbb
ins
test
xchg
push
(bad)
mov
icebp
outs
xchg
mov
popa
xchg
fmul
mov
dec
out
retf
sub
out
je
push
sbb
inc
xchg
inc
pop
dec
scas
xchg
scas
mov
pop
stc
jg
(bad)
jb
pop
add
xor
jae
adc
imul
xor
sbb
and
xchg
aaa
test
jb
ins
jbe
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
jns
lods
leave
test
aaa
std
clc
cmp
xchg
pop
sar
sub
jmp
daa
dec
scas
push
pop
pop
xchg
inc
sbb
mov
int3
sub
int3
arpl
stc
xor
aas
fimul
adc
add
jle
add
scas
mov
pop
xchg
fist
les
pop
mov
jg
iret
sub
pusha
pop
std
rol
mov
jae
sahf
mov
daa
enter
out
outs
mov
sub
retf
push
ret
push
dec
mov
dec
sub
mov
mov
repnz
xor
xor
and
jge
adc
arpl
inc
xchg
mov
pop
fmul
xchg
leave
bnd
bound
popf
jb
mov
ins
mov
cmps
dec
not
div
idiv
mov
jl
test
sti
xchg
cld
push
outs
lods
mov
pop
retf
ds
out
fld
and
ss
mov
dec
push
popa
lods
mov
cwde
and
scas
dec
out
sbb
xor
cmp
xor
es
cmps
imul
pop
sar
jae
mov
cmp
rol
aam
jle
mov
jnp
leave
loopne
out
nop
jne
out
rcl
test
data16
(bad)
xchg
cld
push
jg
movs
dec
in
shl
sub
aad
int
int
jb
jnp
or
xchg
jbe
mov
pushf
cmp
inc
loop
sbb
fild
push
mov
test
cmp
cmp
movs
test
call
xchg
add
push
and
jecxz
fwait
rcl
ss
rol
fwait
mov
jne
cdq
mov
aaa
rcl
lock
aad
outs
cwde
sahf
push
cmc
pop
call
call
pushw
cmp
inc
cs
mov
jmp
xchg
in
pusha
add
(bad)
and
adc
mov
js
mov
arpl
dec
and
aam
xor
arpl
sub
mov
inc
mov
xchg
dec
in
add
not
mov
sti
imul
mov
sbb
loope
retf
jnp
fld
sub
ret
add
xchg
inc
pop
dec
scas
test
nop
sub
rcr
out
std
cmp
jne
(bad)
pop
push
jae
adc
imul
xor
sbb
push
dec
jmp
xchg
aaa
test
jb
ins
jbe
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
jns
lods
leave
test
aaa
std
clc
cmp
mov
sar
sub
jmp
or
pop
xchg
inc
mov
iret
jnp
mov
in
je
jne
les
imul
mov
mov
mov
arpl
and
(bad)
xchg
xor
jbe
xchg
dec
jmp
push
(bad)
xchg
imul
idiv
sbb
cmc
jecxz
jecxz
inc
mov
pop
jmp
sub
sub
jns
and
or
jo
inc
cmp
ret
cmp
(bad)
xor
sub
pop
add
and
mov
push
out
stos
pushf
pop
xor
clc
fnstsw
repnz
gs
xchg
cmps
sti
pop
xchg
les
xor
(bad)
lods
and
ins
or
jb
xchg
nop
adc
retf
push
sub
sub
int
in
jae
jnp
or
popf
inc
cs
xchg
movs
mov
pusha
repnz
aas
mov
sub
or
je
add
js
stos
jnp
mov
push
mov
and
fst
aam
jge
mov
inc
mov
cmps
dec
loopne
je
(bad)
rol
mov
jb
leave
xchg
sbb
stc
rol
mov
sub
cmp
jmp
je
cmp
loopne
cs
mov
iret
dec
cwde
(bad)
and
sub
inc
xor
cmp
cmp
pop
iret
pusha
jae
ja
cmps
cmp
mov
xor
push
cmp
(bad)
test
mov
outs
push
mov
outs
add
je
jecxz
add
aad
or
mov
popa
xchg
mov
out
fiadd
push
loopne
repz
fnstsw
add
mov
inc
cs
xchg
movs
mov
jg
call
sub
je
cmp
inc
or
cmp
mov
push
mov
dec
jecxz
xchg
daa
mov
fs
mov
inc
xchg
les
xor
shl
lock
cmp
add
mov
sbb
inc
jnp
test
sub
jmp
sbb
jl
xor
(bad)
mov
stos
adc
cmps
pusha
repnz
aas
mov
daa
(bad)
ins
jns
cmp
sbb
cmp
mov
ins
pop
dec
jae
fist
loop
push
and
lock
mov
loope
jmp
adc
outs
cmp
add
mov
sbb
dec
arpl
mov
jne
cmp
cmp
xchg
es
inc
mov
sbb
jne
rcl
repz
jp
aad
ja
and
adc
pop
pusha
test
xor
adc
and
fist
aam
jbe
scas
sub
xchg
les
and
rol
mov
jle
mov
adc
repnz
cdq
mov
cmp
cs
repnz
inc
cdq
xor
dec
mov
inc
cmp
mov
call
jbe
popa
pop
leave
pop
add
sub
mov
inc
xchg
movs
lahf
add
or
fist
fstp
push
stos
pop
div
mov
and
(bad)
xchg
sub
sbb
xor
movs
pop
push
(bad)
fdiv
fld
push
cmc
pop
hlt
daa
cmp
int
data16
es
dec
les
push
mov
mov
fsub
stc
cmp
repz
jbe
pop
mov
push
aaa
scas
sub
js
cmps
js
cmps
inc
jnp
mov
sbb
add
retf
sti
xchg
shr
cld
ins
push
inc
xchg
mov
pusha
mov
loop
aam
jno
shl
lock
ins
sbb
pop
mov
test
cld
repz
outs
fwait
mov
sbb
(bad)
fnstcw
and
stos
xor
sub
mov
jmp
inc
xor
and
jle
add
sub
sahf
push
and
mov
rcr
jp
jg
xchg
repnz
test
clc
aad
or
cdq
leave
das
mov
mov
adc
stc
in
outs
jmp
gs
retf
sbb
adc
in
jge
cmp
inc
mov
sbb
or
sub
pusha
icebp
cmc
jo
icebp
jne
push
daa
(bad)
es
adc
data16
inc
cwde
cmps
adc
dec
jmp
xchg
xor
jg
nop
push
hlt
mov
ins
test
xchg
push
in
xchg
pop
or
(bad)
shr
cli
stos
ret
sub
mov
push
cmp
icebp
sbb
lods
push
jecxz
jmp
inc
in
jge
push
mov
dec
ds
mov
mov
imul
daa
enter
jno
iret
pop
push
push
sub
das
mov
mov
add
sbb
rcr
loope
addr16
popf
pop
repz
js
loopne
adc
icebp
fild
movs
(bad)
push
movs
imul
adc
cmc
hlt
cmp
lods
inc
loopne
stc
sub
dec
enter
ret
and
sbb
test
add
mov
jmp
mov
ss
sbb
es
xor
data16
nop
outs
mov
jmp
pop
push
pop
jecxz
xchg
push
mov
fs
imul
repnz
pop
add
xlat
mov
imul
fwait
mov
je
xchg
nop
adc
fadd
mov
popf
es
fwait
scas
gs
neg
cmp
xlat
out
retfw
sub
or
popf
inc
pop
jge
movs
mov
js
jmp
je
aas
int
das
dec
or
ja
js
xchg
dec
es
addr16
mov
faddp
xchg
add
jno
mov
inc
xchg
mov
push
lock
icebp
movs
mov
xchg
ficom
xchg
int
pop
outs
mov
fist
or
cld
stos
and
inc
jo
bound
dec
daa
jno
mov
nop
cmp
iret
jl
cld
sub
jecxz
push
pop
add
and
add
mov
mov
mov
pusha
test
adc
add
mov
pop
xor
jmp
xchg
dec
mov
jbe
inc
gs
mov
push
mov
jmp
es
xchg
pop
lea
mov
stos
fadd
ja
mov
cmc
sti
lock
inc
jle
scas
jnp
dec
cli
sbb
pop
sub
pop
call
mov
inc
pop
dec
scas
xchg
stos
stos
cs
dec
(bad)
in
or
and
sbb
jbe
cmp
imul
and
test
rcr
xor
int
repnz
repz
sub
rol
mov
popa
push
xchg
adc
stc
clc
mov
fstp
cwde
lea
dec
fidivr
cs
jmp
xor
sbb
mov
cwde
nop
nop
or
xor
and
or
adc
imul
push
mov
cmps
pop
cmp
data16
and
fnsave
pop
jge
mov
xor
xchg
pop
push
fcom
test
out
nop
(bad)
test
jae
mov
jmp
test
mov
cmp
ds
cli
fsubr
in
bound
dec
xchg
cmp
stos
push
pop
add
repnz
loopne
push
xchg
in
jne
push
and
and
ss
adc
outs
arpl
push
mov
pop
call
les
push
test
cmc
movs
mov
sahf
dec
in
jno
out
shr
and
xchg
mov
stc
mov
fstp
jmp
sub
aam
fnstcw
and
outs
sbb
jge
mov
mov
sub
dec
fpatan
sbb
and
sbb
jp
add
enter
push
adc
dec
bound
xor
retf
mov
mov
mov
xchg
jo
jecxz
or
xchg
mov
jae
xchg
popf
addr16
(bad)
sbb
inc
push
mov
sub
fisubr
cmp
aaa
dec
mov
inc
ds
xchg
int3
pushf
sub
imul
aas
xchg
retf
jae
jne
retf
imul
mov
mov
mov
pop
cdq
scas
cmps
cmp
test
jno
jne
push
mov
arpl
jecxz
or
fidiv
mov
push
mov
xor
retf
outs
mov
cvtpi2ps
jmp
cmp
test
ret
cmp
int
test
jge
fistp
jnp
add
outs
push
cmp
mov
cmp
and
jmp
sbb
sbb
popf
outs
xlat
mov
imul
aam
add
push
or
test
aaa
icebp
repnz
lods
inc
lds
xor
xor
dec
stos
pop
ins
push
mov
jno
mov
mov
jmp
jge
int
sbb
das
mov
test
xor
sbb
sbb
xchg
cmp
jb
stos
pop
repz
dec
xchg
les
and
rcl
stos
lds
mov
sahf
adc
ret
ror
fsubr
push
daa
pop
dec
rcr
fild
cmp
cmp
push
cs
mov
sub
xor
or
and
push
jl
fwait
das
mov
sahf
pop
sub
mov
cmp
pop
jecxz
xchg
dec
mov
add
imul
lock
add
popa
mov
xchg
sub
fs
cli
stos
sar
pop
add
and
aam
jp
aam
loopne
std
sub
push
enter
retf
cmp
pop
sbb
xchg
or
cmp
jg
icebp
sbb
pop
adc
add
xchg
aaa
retf
arpl
mov
pushf
sub
ss
xchg
fistp
add
fisubr
clc
mov
mov
loopne
popa
sub
(bad)
mov
mov
push
add
aad
leave
ret
mov
shl
sub
push
popf
xor
inc
mov
dec
dec
test
mov
lods
xor
jmp
mov
sub
sbb
inc
add
adc
bound
jo
(bad)
add
test
bound
and
int
imul
jns
popa
jle
rcl
(bad)
leave
dec
cdq
int3
sbb
shr
stos
xlat
das
xchg
test
xchg
aaa
stc
les
mov
ficomp
sub
push
call
scas
adc
daa
mov
ret
sbb
iret
inc
int3
xchg
aas
mov
jbe
jns
(bad)
and
mov
leave
ja
dec
fs
jg
mov
jl
int
cmp
jns
mov
inc
sahf
mov
jl
xchg
jno
call
inc
movs
sub
xchg
mov
adc
loope
cmp
push
imul
(bad)
stos
and
and
pop
mov
inc
or
mov
mov
jecxz
cmp
push
adc
pop
aaa
data16
xchg
and
bound
push
xchg
scas
test
fst
aam
pop
inc
stos
pop
repz
inc
popf
rol
in
hlt
and
bound
test
jae
rcl
retf
imul
jmp
sub
sbb
xchg
xor
cdq
mov
mov
sub
jg
dec
mov
sbb
and
aas
mov
lods
jae
mov
pushf
adc
pop
fxch
xchg
push
mov
jbe
stos
inc
xchg
xchg
jl
xchg
popa
push
sti
fadd
xchg
mov
jne
mov
adc
std
cld
test
rcr
mov
clc
cmp
sub
lds
sbb
add
mov
nop
sub
sbb
adc
sbb
cmp
cmp
fs
jg
mov
jae
fst
loop
gs
lods
jle
mov
or
(bad)
shr
mov
jae
mov
adc
fcomip
xchg
leave
(bad)
imul
out
(bad)
sub
fadd
cmp
sbb
popf
inc
cmp
mov
sub
outs
stc
(bad)
and
in
jb
jne
leave
and
push
mov
test
and
mov
ss
jmp
xchg
daa
test
jbe
gs
lea
movs
loopne
xchg
(bad)
mov
cs
xlat
or
ja
xchg
sahf
xchg
adc
loop
xchg
mov
sub
sub
fisub
jae
dec
lods
adc
cs
lods
mov
mov
loopne
das
mov
jne
jns
leave
and
sub
test
inc
stos
cmp
mov
pop
rcr
daa
and
inc
mov
repz
dec
add
jl
xchg
jbe
(bad)
lock
jmp
stos
mov
je
mov
add
imul
in
fidiv
sub
into
es
dec
mov
inc
cmp
nop
sub
fsubr
cld
and
hlt
jb
pop
daa
iret
xor
jge
and
cmp
sar
mov
cmps
sub
movs
lahf
sub
fstp
bnd
push
add
loopne
fwait
rol
call
outs
add
xchg
adc
add
mov
clc
sub
fild
and
xor
loopne
ds
cdq
mov
and
or
add
pop
gs
or
cmp
add
jns
mov
jnp
mov
dec
jmp
xchg
and
jecxz
(bad)
bound
lea
loopne
lock
mov
loope
aad
bound
in
lds
mov
addr16
call
leave
call
mov
sub
int
in
je
bound
inc
cmp
lods
es
outs
fprem
and
sub
inc
sub
add
ins
mov
mov
lahf
add
xor
xchg
pop
mov
jne
inc
gs
stos
jbe
mov
inc
cwde
rol
not
mov
lock
mov
movs
jp
nop
xchg
xchg
xchg
pushf
cmp
dec
je
fild
sub
ret
daa
dec
lods
sbb
jl
push
pop
push
mov
pop
repnz
sbb
xor
cmp
bound
imul
add
movs
pop
xor
xchg
push
shr
fdiv
push
mov
ins
test
and
jno
std
(bad)
lods
push
cmc
gs
mov
push
mov
jno
mov
sbb
fcos
dec
fs
inc
jecxz
(bad)
sub
call
mov
dec
aas
or
mov
mov
in
icebp
sbb
xor
adc
test
inc
shl
mov
cmps
sub
push
addr16
xchg
daa
lods
repz
inc
outs
inc
fsubr
mov
xchg
jl
xchg
popa
add
lds
xor
test
ret
fisttp
fwait
mov
sbb
fist
xor
adc
mov
pusha
(bad)
popf
lods
mov
sar
or
xor
xor
das
mov
mov
addr16
lahf
sbb
and
xchg
aaa
mov
jns
popf
pop
repz
push
sub
jae
(bad)
rol
stos
sar
dec
addr16
shl
push
bound
inc
jmp
ds
push
call
stos
push
dec
pop
mov
mov
mov
sar
iret
inc
inc
jne
int
pop
arpl
add
pop
inc
fisubr
sub
(bad)
mov
push
in
mov
mov
data16
ja
dec
retf
scas
sbb
xchg
mov
iret
fild
not
jp
mov
or
int3
mov
mov
or
adc
out
push
pop
pop
fidivr
add
xchg
mov
adc
fstp
out
add
sbb
inc
or
adc
sbb
adc
inc
mov
call
mov
mov
arpl
push
sub
jae
mov
xor
fsub
test
loop
mov
xchg
or
ret
clc
arpl
mov
ds
(bad)
fist
xor
pop
push
lea
jp
mov
stos
ins
xchg
cli
or
xor
xor
push
mov
mov
movs
cmp
test
sub
and
out
(bad)
xor
sti
push
fiadd
push
mov
jp
les
and
rol
stos
shl
outs
ja
mov
push
aaa
fcomi
test
sti
dec
outs
lods
mov
ds
fucomi
jbe
xor
pop
dec
jo
push
and
mov
mov
ins
(bad)
and
jbe
lds
adc
ds
sbb
mov
add
xor
retf
enter
jns
push
mov
fs
in
xchg
push
mov
std
shr
mov
inc
xchg
fiadd
fwait
mov
dec
enter
fdivr
jmp
sub
cmps
das
jle
loopne
and
mov
cmp
inc
shl
or
hlt
adc
inc
daa
add
bound
jg
cmps
or
mov
pusha
leave
fistp
repnz
jbe
mov
ret
ins
xchg
aam
outs
aam
add
iret
rol
test
xor
test
aaa
std
cmc
adc
xchg
dec
fidivr
pop
ds
aam
inc
fidiv
jb
dec
stos
sub
mov
pop
mov
pop
call
jbe
jno
mov
add
imul
jae
mov
dec
jmp
test
fidiv
jnp
bound
dec
xchg
loop
push
in
je
std
aam
add
ins
or
push
mov
cmc
repnz
into
repz
ins
fwait
xchg
push
loope
into
ds
repnz
jecxz
call
cwde
pop
ins
push
sahf
xor
pop
lahf
mov
stc
addr16
jns
into
pop
adc
daa
mov
test
xor
or
add
(bad)
fist
aam
gs
stos
pop
shl
inc
out
pusha
es
fild
xchg
fidivr
scas
push
outs
test
lock
(bad)
js
xchg
mov
pop
fstp
cmp
stc
out
retf
push
call
test
jl
mov
imul
fistp
cli
ud1
jbe
jae
mov
adc
push
inc
fidiv
cmp
mov
dec
out
fild
cld
sbb
cmps
pop
repz
xchg
sbb
xchg
jno
aad
add
inc
mov
mov
ja
mov
adc
repnz
movs
dec
jecxz
cmps
cmp
das
sbb
push
jecxz
pop
fs
imul
lahf
cmps
int3
mov
in
jp
sti
jbe
jae
into
pop
xor
sbb
arpl
mov
jne
fwait
in
push
and
inc
repz
test
push
stos
push
lds
xchg
ins
rcr
nop
sbb
sar
bound
ror
loop
inc
loop
dec
lock
adc
dec
enter
fst
je
jns
sbb
mov
pusha
mov
cmp
dec
jmp
pop
sbb
pop
xor
adc
das
xchg
push
iret
popa
push
lea
mov
jb
mov
pop
fisub
push
aam
jl
mov
jge
repnz
in
or
cmps
sub
ins
mov
outs
jb
enter
mov
stc
aam
jle
mov
dec
aad
fimul
cmp
clc
adc
pop
mov
jl
xchg
inc
or
mov
xchg
aas
sub
arpl
aaa
lds
pop
jnp
add
ins
dec
sar
xchg
sbb
popf
xchg
pop
xor
inc
fsubr
pop
repnz
popf
mov
dec
sub
pusha
xchg
xchg
inc
and
(bad)
mov
adc
push
stos
je
mov
hlt
sbb
fcomip
clc
(bad)
fs
xchg
cwde
dec
loopne
repz
push
fistp
push
jg
or
lods
cs
mov
stc
inc
loope
aas
movs
xchg
jne
or
fnstenv
sbb
sub
or
dec
ins
(bad)
pop
add
sub
sbb
or
sahf
rol
cmc
dec
jge
mov
mov
dec
out
cmps
inc
in
bound
xchg
jmp
mov
pop
ja
mov
addr16
(bad)
cdq
movs
ins
mul
sub
fsubr
fist
xor
dec
test
pop
push
mov
jbe
fwait
sar
iret
cli
sbb
cmp
cmp
sbb
adc
add
jno
mov
std
or
dec
jno
shr
repnz
jbe
shl
(bad)
dec
xchg
ror
cmp
rcl
(bad)
fmul
call
(bad)
inc
ins
mov
cmp
jmp
sub
jno
dec
xchg
aaa
and
rcl
cmp
neg
fistp
jno
call
cmp
gs
rcl
sbb
mov
dec
out
fucomip
aaa
mov
popa
aam
sbb
ins
cmc
mov
inc
in
cwde
jo
cld
dec
add
retf
out
jnp
ins
xchg
neg
les
or
fcmovu
xchg
in
aad
ins
mov
in
push
or
ret
cmp
cmp
pusha
les
and
mov
dec
fcomi
and
or
inc
or
or
mul
mov
rcr
popf
mov
add
and
daa
call
lea
mov
jge
in
in
xchg
xchg
jno
std
sti
xchg
and
inc
cli
test
jg
add
hlt
sbb
mov
push
fisub
pop
xor
(bad)
fist
cmp
outs
xchg
jl
adc
mov
loope
and
xor
xor
jg
cmp
ins
ins
mov
push
popf
mov
leave
fist
hlt
pop
push
push
test
jl
aam
dec
call
rol
stos
sahf
rcl
fs
stc
lock
fcmovu
inc
jns
test
jno
adc
ds
cld
fist
cmp
cmp
inc
cs
cmp
out
sub
jns
int
ins
jg
sbb
bsf
fld
fisttp
mov
lahf
push
add
pop
(bad)
retf
test
rcpps
outs
repz
out
call
xchg
add
ins
mov
arpl
stc
repnz
leave
jecxz
js
cwde
inc
loopne
cli
ds
cli
(bad)
(bad)
push
sar
sub
or
cmp
fst
shl
or
jg
xchg
sbb
ds
xor
add
pop
fistp
test
sbb
mov
ins
out
iret
adc
sti
jbe
ins
jl
test
repz
dec
test
xchg
ja
xchg
jns
fdiv
test
jecxz
xchg
mov
pop
je
mov
xor
loope
test
aad
ins
cwde
stos
cmp
jp
sub
fisttp
xor
dec
mov
imul
lahf
popf
lods
mov
fild
xchg
js
mov
cmp
xor
pop
add
cdq
sub
add
addr16
scas
pop
cmp
mov
int
xor
sti
or
rcpps
pop
push
xchg
ret
xchg
push
in
jle
not
mov
(bad)
push
cmp
imul
stc
loope
(bad)
dec
push
pop
xlat
and
clc
lds
or
mov
pop
push
test
jns
mov
mov
sub
or
cmp
xor
add
cmp
pop
(bad)
imul
movs
cmp
test
inc
(bad)
xchg
daa
test
jb
ins
jle
mov
repz
xchg
not
xchg
adc
ins
or
test
xor
repz
mov
daa
sbb
cli
cld
out
inc
call
sahf
pop
jge
mov
mov
fdiv
or
xor
es
es
add
addr16
cmps
pop
cmp
sbb
xor
adc
sti
jb
arpl
and
cmp
stos
jno
std
xlat
cmps
and
ins
add
test
cmp
lds
mov
adc
sbb
cld
fist
add
sbb
sbb
pop
lea
dec
pushf
mov
stc
fs
jb
popa
xor
and
pop
shr
dec
jb
ja
mov
mov
inc
and
lahf
aaa
mov
jo
test
repz
dec
adc
jl
xchg
inc
xor
rcr
mov
push
je
mov
cmp
shl
clc
(bad)
xor
fwait
inc
lea
cs
adc
cld
repz
sbb
xchg
push
mov
fld
in
add
(bad)
jbe
jno
fld
adc
test
jnp
mov
mov
pop
popf
test
xor
xor
add
sti
jbe
jle
push
mov
aad
cmp
popa
es
rol
rol
sbb
test
aaa
mov
xchg
lds
jmp
push
neg
aaa
cmp
cld
xlat
push
cwde
adc
push
cmp
cs
stos
(bad)
xchg
xor
mul
in
or
xor
sbb
sub
adc
and
push
and
aam
and
bound
popf
push
jecxz
repz
neg
and
cmps
mov
call
les
stos
ins
add
stc
repnz
lahf
inc
int
iret
push
add
inc
sahf
sbb
cmp
sub
mov
mov
(bad)
dec
mov
push
push
and
add
pop
fild
stos
inc
dec
movs
cmp
cmp
push
dec
out
fbstp
ins
push
push
test
cdq
movs
loopne
mov
cmps
inc
into
xchg
jae
(bad)
movs
test
out
mov
fs
xchg
test
mov
ds
sub
call
pop
sbb
push
push
jl
stos
nop
xchg
cmp
xlat
arpl
cli
add
daa
into
xor
jle
push
xchg
das
call
cmp
or
mov
jl
iret
mov
shr
push
stos
pop
cmc
mov
dec
mov
mov
sub
xchg
mov
xchg
pop
push
test
neg
xchg
mov
dec
pop
dec
sar
repz
retf
pop
ja
pop
mov
push
or
mov
fs
shl
loopne
inc
jno
out
inc
sbb
pop
test
idiv
mov
pop
xchg
and
scas
xchg
aas
(bad)
jp
push
cwde
pop
cmc
mov
addr16
retf
(bad)
xchg
jbe
xchg
shr
sahf
les
test
test
call
cmc
or
cld
repz
and
aaa
sbb
call
mov
repnz
imul
adc
xlat
imul
cmp
clc
outs
xor
dec
iret
shr
adc
jne
mov
ins
xchg
xlat
xchg
loope
adc
rcl
call
nop
mov
popa
cmp
cli
sbb
lahf
gs
fidiv
pop
clc
repz
inc
sti
adc
xor
push
xchg
pusha
in
fwait
lds
jecxz
sbb
cmp
cmp
jae
adc
and
pop
jmp
ss
pop
mov
xor
fistp
cmc
imul
test
mov
xchg
push
int
test
push
in
mov
cs
in
(bad)
push
inc
cmc
xor
clc
add
repz
retf
cmp
mov
push
stos
ret
sub
enter
jl
fistp
inc
adc
inc
aas
jl
adc
jge
fist
mov
push
lods
into
test
fist
retf
push
test
fidiv
or
xchg
or
sti
and
outs
or
jl
ficom
cwde
stos
xchg
mov
or
in
fistp
cmp
ins
lods
sbb
xchg
jl
xchg
inc
les
jne
xor
adc
inc
pusha
mov
ins
mov
sub
stc
cmps
sbb
imul
test
movs
dec
out
xchg
jno
sti
rcl
mov
ja
mov
adc
into
jmp
push
ds
sbb
(bad)
in
push
jmp
fs
xor
sbb
and
mov
popf
and
int3
add
imul
cmp
and
sbb
(bad)
adc
push
push
xchg
test
stc
shl
xor
inc
push
mov
js
xlat
mov
xchg
sahf
jns
icebp
rol
mov
push
dec
lea
fld
mov
and
int
fild
xor
pop
stos
or
sti
inc
pop
outs
cmc
mov
cwde
cmp
std
jns
(bad)
gs
xor
cmp
pusha
adc
cmp
sahf
pop
xor
aaa
cmp
fs
xchg
aas
(bad)
std
jno
inc
bound
cmc
mov
ds
xchg
dec
loop
or
into
loopne
or
dec
xchg
add
ret
xchg
aas
adc
aam
rcl
and
inc
les
cmp
dec
icebp
iret
in
inc
int3
cmp
dec
stos
aaa
pop
push
mov
cmpxchg
into
pop
cdq
clc
add
jmp
mov
adc
sbb
jae
sub
sub
push
inc
fdiv
add
fst
cdq
jge
xchg
add
shl
adc
inc
and
push
mov
test
inc
xchg
mov
mov
sub
repnz
call
stos
sbb
push
test
movs
int3
enter
inc
loop
or
pop
ret
inc
imul
sbb
dec
xor
sub
stos
sub
lods
dec
scas
leave
add
dec
jbe
mov
mov
push
fwait
out
xchg
push
loop
popa
or
ror
lods
stos
sar
movs
outs
add
xchg
xchg
push
xor
jmp
mov
pop
outs
jmp
fidivr
push
dec
out
hlt
test
sbb
or
std
pop
imul
cmp
clc
jbe
inc
xor
cmp
jns
sbb
pusha
jnp
push
xor
dec
outs
stos
mov
(bad)
in
xor
jg
dec
mov
push
in
cdq
pop
hlt
cdq
jno
retf
movs
test
xlat
ins
or
arpl
sar
mov
jmp
ds
cli
iret
pop
lds
jb
dec
fistp
es
cmps
mov
mov
out
daa
sahf
shl
in
outs
push
imul
sub
bswap
inc
or
bound
aaa
cmp
(bad)
push
scas
mov
out
jbe
mov
fstp
xchg
popa
in
mov
xchg
jecxz
sbb
push
mov
in
dec
jmp
sub
cli
cld
test
clc
pop
inc
push
dec
test
pop
push
mov
mov
xchg
push
cmp
dec
jmp
je
aam
push
pop
and
and
jle
mov
je
mov
fucomp
aaa
lods
mov
imul
in
mov
nop
popa
es
mov
xchg
jp
add
mov
imul
cdq
mov
adc
ds
(bad)
inc
into
sbb
dec
mov
dec
sub
mov
push
in
hlt
aas
mov
jb
add
(bad)
xor
pop
adc
push
stos
imul
xor
mov
aaa
and
fist
bnd
push
mov
pop
xchg
les
add
fsub
mov
jne
mov
test
pop
fnstsw
cs
(bad)
rcl
ss
pop
rcl
inc
stos
pop
sub
mov
mov
dec
fisub
lea
mov
jae
int
adc
das
mov
stos
pop
inc
mov
je
mov
imul
sbb
sti
jle
inc
pop
jb
outs
repz
dec
xchg
cwde
outs
(bad)
cdq
jb
fadd
xchg
repz
inc
arpl
in
icebp
xchg
int
ins
jne
mov
dec
xor
push
call
lods
push
ins
push
sahf
je
pop
lahf
mov
mov
(bad)
or
xor
add
pop
sub
loop
stos
push
hlt
inc
push
sahf
imul
mov
(bad)
cmp
and
fstp
repnz
dec
push
lods
dec
inc
test
xchg
std
rol
lahf
lods
aad
lahf
popa
pop
mov
lock
mov
mov
dec
leave
pop
clc
aaa
cs
sti
fst
push
pusha
xor
cmp
xor
pop
xchg
mov
mov
adc
jno
cli
pcmpeqb
in
push
outs
sbb
sbb
mov
add
and
aaa
mov
outs
jg
cs
jmp
pushf
cld
sti
inc
xchg
xchg
inc
and
clc
cmps
je
ins
lock
add
mov
xor
mov
or
test
push
(bad)
xor
add
cmp
sbb
retf
adc
lods
dec
fdivr
sub
dec
int
sbb
pop
xchg
xor
pop
xchg
or
sbb
or
mov
mov
sbb
dec
jle
mov
jmp
adc
mov
cmp
cmp
mov
movs
imul
mov
aas
lock
aad
out
shr
cmp
(bad)
(bad)
aaa
jo
dec
stos
aas
pusha
inc
mov
jnp
call
(bad)
push
mov
pop
jo
dec
mov
and
das
iret
or
sbb
sahf
jns
mov
mov
and
shl
cli
ins
push
ins
sbb
lock
loopne
mov
popa
or
fisttp
xchg
ret
dec
bound
cmc
xchg
retf
enter
movs
inc
jecxz
fisubr
pop
sub
jmp
jae
dec
cmps
adc
xchg
push
mov
cs
jg
out
jns
xchg
jno
dec
and
xor
inc
add
and
imul
adc
mov
(bad)
jmp
aam
inc
push
cmp
repnz
mov
xchg
jne
stc
stc
nop
jae
sbb
stos
pusha
pop
inc
mov
ret
retf
inc
mov
lea
retf
cmp
clc
repz
pop
pop
pop
push
aaa
adc
xchg
pusha
mov
retf
nop
adc
(bad)
outs
out
sbb
dec
add
pop
sbb
push
mov
fst
shr
inc
mov
xor
in
inc
enter
inc
jg
shr
mov
push
xor
cmp
(bad)
test
jne
cmps
mov
ja
mov
bound
not
fwait
scas
push
jne
cmp
cs
fist
sbb
pop
stos
pop
push
adc
xlat
pusha
test
or
xor
sbb
mov
pusha
pusha
lods
jg
mov
sbb
daa
pop
cli
mov
add
cdq
outs
test
cmps
data16
xor
leave
push
cmp
mov
and
mov
out
scas
xor
lods
pop
clc
dec
add
pop
xor
pop
cwde
inc
pop
jne
call
int3
into
or
shl
js
mov
or
bound
ins
jmp
(bad)
(bad)
pop
mov
ja
imul
loope
xchg
stos
cmps
inc
call
hlt
xchg
sub
jns
cmps
mov
outs
mov
mov
(bad)
ds
mov
xor
cmc
enter
pop
cmp
or
fwait
aaa
sub
mov
cmp
dec
pushf
ret
jmp
int
sub
push
sbb
sbb
push
pop
stos
dec
outs
in
mov
sti
rcl
dec
jbe
sar
popf
test
xchg
stc
(bad)
lods
sub
pop
mov
stos
ret
adc
test
mov
mul
jmp
cmp
jge
sbb
bound
pusha
sbb
mov
jmp
pop
pop
mov
push
aaa
nop
imul
pop
stos
aaa
inc
nop
mov
push
sbb
jae
fist
fst
stos
pop
lds
loope
mov
jmp
les
mov
push
xchg
cwde
mov
adc
loope
mov
mov
dec
fidiv
pop
(bad)
enter
jae
dec
xchg
pop
jo
push
daa
ins
mov
scas
jge
xchg
or
popa
xor
cmp
aas
mov
movs
dec
add
sub
cs
out
xlat
mov
xchg
hlt
(bad)
imul
test
sahf
mov
inc
out
jno
stc
stos
xchg
add
pop
repnz
outs
jb
enter
cli
ret
fistp
mov
dec
pop
es
jmp
jp
ss
jnp
dec
ss
cwde
mov
mov
out
sbb
or
and
add
mov
sahf
pop
ds
jae
xlat
in
or
inc
fdiv
xchg
pop
gs
dec
add
iret
loopne
cdq
fistp
push
fcomip
test
(bad)
pop
mov
test
mov
in
test
sub
xor
dec
int
repz
sub
jg
mov
dec
pop
push
mov
pop
xlat
inc
iret
mov
pushf
call
pop
cmp
jge
mov
iret
pslld
mov
pop
mov
cmp
aam
das
stos
lock
pop
jl
sub
sahf
out
xchg
in
xchg
loope
pop
psubusb
mov
(bad)
dec
xchg
in
rcl
push
test
jmp
inc
fyl2xp1
cwde
ret
jne
xchg
dec
cli
jl
adc
sub
and
add
jnp
ins
es
mov
sbb
sub
xor
imul
mov
mov
inc
xchg
into
mov
adc
cmp
mov
pop
jbe
popf
xor
fadd
or
out
xor
ficom
mov
push
in
fsubrp
aas
adc
jecxz
(bad)
dec
outs
jmp
and
mov
aam
fnstsw
jae
pop
stos
aaa
adc
inc
xchg
mov
xchg
cmp
or
push
ret
dec
sbb
and
and
and
pusha
jae
jl
test
neg
clc
mov
jmp
mov
push
loopne
loope
std
mov
cmc
sbb
inc
repz
outs
inc
pushf
mov
repnz
loope
dec
adc
push
jmp
inc
ds
sti
sti
inc
xchg
jnp
lods
and
mov
pop
mov
addr16
rcr
xchg
std
jbe
jae
mov
adc
outs
pusha
test
pop
scas
xor
stos
mov
aaa
sub
in
repz
mul
inc
mov
mov
dec
xchg
les
and
cmps
popf
sbb
sbb
stos
bound
sbb
out
and
test
dec
cmp
fsubr
repnz
out
jo
dec
mov
sbb
mov
xchg
mov
fbld
jns
mov
popa
daa
into
and
pop
iret
and
add
(bad)
adc
mov
dec
out
into
mov
repnz
div
xchg
inc
hlt
mov
mov
retf
and
mov
test
inc
loopne
xchg
xlat
xchg
xchg
fild
lea
mov
ds
or
lods
sbb
mov
cs
mov
mov
jg
rcr
popa
and
xor
pop
iret
add
jp
mov
ja
mov
xor
icebp
lahf
aaa
xchg
int
dec
push
popf
pop
test
sbb
mov
loopne
inc
and
fld
les
mov
mov
std
lock
inc
(bad)
fiadd
push
cli
cld
lods
inc
ficomp
jo
ins
fwait
pop
outs
push
mov
mov
or
ins
out
cli
add
jecxz
aas
ja
push
call
dec
arpl
cdq
xlat
add
fsub
xor
jae
stos
pop
test
(bad)
and
jmp
xor
inc
repnz
(bad)
sti
fiadd
stos
(bad)
es
lahf
lods
push
out
test
retf
into
and
cmp
sbb
push
mov
or
mov
mov
jmp
jae
pop
pop
retf
pusha
or
and
popa
pusha
scas
jp
lods
sub
xor
ds
fucomip
and
dec
jbe
fisubr
out
test
loop
inc
in
dec
and
retf
out
xchg
std
mov
jb
fidiv
out
test
outs
inc
jmp
inc
dec
jecxz
mov
icebp
pop
fs
jge
jne
push
adc
(bad)
movs
mov
out
cmp
rep
push
pop
pop
mov
add
adc
or
cmps
sub
mov
xor
and
out
mov
jb
ficom
mov
jg
stos
xchg
dec
jmp
add
ror
scas
jmp
lods
addr16
ret
cmps
popa
cmp
fiadd
(bad)
fisub
push
fidiv
xor
icebp
ds
popa
stos
cmp
mov
jns
mov
clc
inc
fist
arpl
aas
push
or
fwait
ds
and
add
mov
test
adc
add
xchg
inc
lods
loop
loop
jnp
sbb
jmp
jb
test
int
mov
int
call
pop
mov
cld
js
xchg
ret
test
(bad)
mov
cmp
xlat
sti
jmp
call
stos
pop
imul
test
ins
loope
cs
jmp
int
sbb
add
xchg
pop
cmp
cmp
movs
lahf
sbb
xor
fsub
pushf
popa
addr16
xor
mov
dec
in
mov
out
add
call
mov
loopne
or
push
mov
sbb
ret
scas
jmp
pop
fnstsw
push
cs
sti
rcr
xor
sbb
push
mov
jns
mov
mov
in
fsubr
mov
pop
jmp
cmp
cmp
sbb
stos
or
mov
and
out
test
mov
jno
mov
data16
pusha
test
adc
jns
mov
pop
xchg
test
mul
mov
ss
repz
pop
rol
mov
gs
mov
in
mov
fcomi
pop
ins
jb
int
pop
je
sbb
das
mov
shr
sahf
jnp
test
inc
out
mov
dec
in
out
lods
clc
or
imul
push
(bad)
fadd
inc
(bad)
cmps
inc
es
stc
mov
outs
or
jne
mov
add
std
aam
fpatan
inc
ins
lahf
stos
dec
aad
clc
ss
cli
vdivss
xor
sub
stc
inc
sub
xchg
mov
mov
out
sub
lds
add
ja
fwait
sub
(bad)
into
push
sbb
xlat
test
pop
and
repnz
pop
mov
jae
movs
dec
mov
cdq
dec
loop
js
pop
mov
xchg
ja
mov
adc
stc
fcom
sub
cmp
out
push
into
and
sbb
js
inc
sub
mov
in
pop
pushf
jmp
addps
jl
inc
(bad)
jb
dec
pusha
mov
retf
popf
movs
mov
aas
and
test
jp
pop
orps
js
les
pmulhuw
stos
sbb
sbb
mul
jg
mov
and
fdivr
adc
scas
dec
call
sub
cld
fistp
pusha
push
dec
mov
jns
mov
bound
fild
icebp
sbb
data16
cmp
add
or
push
cmps
ss
cmps
sti
sbb
pop
jl
fbstp
sti
jns
push
lds
mov
lahf
inc
(bad)
loope
es
lds
mov
jb
enter
loop
or
jnp
mov
fdivr
or
sar
fisub
push
aas
dec
jge
or
mov
test
in
or
jns
in
add
pop
leave
xor
pop
adc
sbb
mov
jmp
push
loopne
jae
mov
pop
xchg
jecxz
je
mov
add
test
scas
out
sahf
outs
push
cmp
dec
dec
mov
dec
or
fdivr
xlat
sub
adc
dec
stos
aas
pop
mov
popf
cwde
retf
jmp
or
xor
pop
sub
(bad)
das
mov
stos
jge
mov
(bad)
sub
rcl
repnz
push
je
dec
ret
cmp
mov
test
jmp
mov
scas
ins
jo
mov
adc
iret
repnz
fisub
cwde
scas
pop
loope
fstp
cmp
cli
cld
fistp
xor
cmp
mov
push
lods
mov
mov
jmp
jb
rol
jo
pop
lods
aaa
lods
pop
ficomp
(bad)
adc
add
nop
(bad)
ret
mov
jb
nop
dec
xchg
(bad)
imul
cmc
mov
lods
fsub
sbb
test
cwde
call
test
xor
shl
imul
mov
pop
mov
sub
ins
stc
clc
adc
mov
sbb
arpl
dec
dec
mov
cwde
ins
xor
call
bnd
imul
(bad)
dec
xchg
les
push
in
cli
mov
movs
mov
push
mov
sbb
js
sbb
das
repnz
inc
ret
or
aas
outs
pop
add
fwait
mov
nop
cmp
into
pop
call
push
and
or
pop
adc
jns
ja
movs
xor
test
(bad)
cli
pop
jg
mov
and
xchg
ja
inc
stos
push
out
fs
mov
jp
mov
shl
sbb
test
aad
into
xor
sub
cld
fistp
cmp
stos
ins
sbb
mov
jne
xchg
xchg
or
(bad)
aam
xchg
clc
pop
ins
push
inc
jne
mov
imul
xor
xlat
add
and
test
ror
lods
jnp
pushf
sahf
pop
jmp
inc
push
xlat
shl
(bad)
fcmovnb
cmp
cmc
sbb
into
cld
not
repz
ins
fwait
scas
xchg
gs
pop
add
fidiv
jno
dec
xchg
sub
mov
mov
fdivr
or
fidiv
inc
xor
cmp
mov
stos
pop
xor
sub
and
dec
inc
push
mov
jge
mov
adc
xchg
jno
into
std
test
mov
fs
xchg
or
into
jmp
pop
mov
inc
(bad)
jne
push
or
clc
fild
cmp
ds
cmp
mov
inc
pop
xchg
mov
stos
sbb
imul
cmp
jne
(bad)
or
sub
xor
cmp
pop
dec
and
xor
and
aam
in
cmps
fs
popa
push
(bad)
mov
mov
mov
and
or
(bad)
push
test
out
ss
ja
cmps
aaa
jle
mov
add
cs
dec
loope
or
jno
rcl
jo
adc
dec
adc
lahf
xchg
test
xor
jl
leave
movs
adc
pop
dec
mov
iret
loopne
loop
test
call
retf
and
fwait
cdq
xchg
data16
std
repnz
neg
imul
push
and
into
inc
add
dec
stos
or
mov
mov
mov
loopne
or
enter
adc
cwde
or
and
push
mov
mov
pop
jmp
pushf
adc
idiv
mov
es
retf
in
lock
mov
add
bound
mov
sbb
mov
sub
(bad)
je
cmp
pop
xchg
ins
sbb
gs
sub
jl
sar
mov
jbe
or
mov
pop
loop
mov
(bad)
jnp
mov
mov
cmp
jae
aam
inc
stos
xlat
pop
loope
jnp
nop
jne
mov
loopne
(bad)
mov
mov
popf
fadd
cs
push
lods
mov
pusha
aas
mov
xchg
aad
ins
fwait
lods
inc
enter
pop
cmp
call
adc
sahf
inc
sbb
cmps
int
sbb
repnz
fninit
cs
ja
sbb
jb
call
sbb
pop
xor
cmp
and
rol
pushf
imul
out
pushf
mov
jg
nop
jno
jmp
jmp
ret
jbe
xchg
mov
push
aaa
sti
std
cmps
in
enter
adc
test
mov
pop
pop
mov
push
sbb
pushf
test
in
repnz
sbb
xor
add
scas
and
lods
ja
mov
mov
hlt
fst
les
push
lods
pop
aad
std
dec
jecxz
xchg
dec
sar
add
sbb
mov
sahf
cmp
repnz
rol
scas
inc
xchg
jnp
push
inc
inc
fsubr
fist
ds
dec
stos
xor
pusha
mov
jl
mov
in
pop
cdq
enter
or
aas
xor
push
mov
not
test
and
popf
outs
adc
inc
in
rcl
repnz
popa
bound
mov
dec
jmp
out
(bad)
mov
(bad)
sbb
out
adc
ret
test
pop
lock
fild
and
dec
movs
sub
mov
es
cmps
mov
mov
pop
rcr
jl
neg
push
mov
imul
scas
and
shufps
jae
lea
pop
xchg
mov
pop
jmp
or
mov
mov
mov
jmp
repz
int
or
push
xchg
mov
sub
aad
inc
ins
pushf
scas
push
hlt
xor
in
cmc
data16
or
gs
pop
xchg
fsubr
add
fsub
sub
xor
fiadd
mov
data16
mov
fist
jbe
dec
cdq
push
aam
lds
sar
push
lock
cmps
hlt
push
nop
pop
dec
mov
stc
repnz
mov
(bad)
cmp
sub
jo
xor
inc
sub
call
int
fwait
icebp
jbe
dec
idiv
ins
ja
sbb
das
xchg
and
imul
addr16
push
pop
mov
dec
jmp
imul
inc
mov
mov
mov
in
adc
xchg
es
sbb
repnz
jmp
push
dec
out
lock
icebp
pop
pop
sbb
or
(bad)
aaa
and
mov
adc
push
jmp
jo
xor
sub
inc
sbb
call
(bad)
mov
dec
sub
jno
mov
dec
in
call
add
loopne
add
ins
test
pop
jg
sahf
xchg
ss
cld
pushf
xchg
fcomp
fwait
scas
ins
ror
sub
cmp
in
push
jmp
jle
xchg
jp
xchg
mov
push
and
push
jmp
jae
ret
push
and
xor
sub
bound
sub
(bad)
cld
out
mov
pop
jmp
push
stos
pop
xchg
mov
(bad)
nop
push
rcr
xchg
xor
shl
lods
js
sahf
mov
sbb
cli
or
ficom
sub
xor
data16
xor
xor
inc
mov
push
scas
ror
cld
shr
mov
jne
jne
mov
adc
dec
jb
jge
mov
fs
xor
jmp
movs
es
std
pop
retf
outs
je
shr
adc
mov
enter
push
test
lea
call
movs
mov
fcomip
test
cdq
cmps
jb
fs
es
mov
repz
cmp
lea
(bad)
mov
iret
ds
das
mov
jo
jns
mov
sub
adc
push
xor
mov
ins
out
fst
in
pop
jbe
push
clc
mov
and
std
nop
add
adc
aas
sahf
push
push
mov
mov
lock
inc
imul
int3
call
pop
clc
push
inc
sub
pop
inc
dec
lods
push
stos
enter
sbb
mov
push
jo
sub
imul
jb
scas
call
movs
cmp
push
scas
pop
loopne
inc
ret
mov
adc
cmc
add
xchg
mov
mov
mov
out
in
cdq
dec
arpl
lock
pop
stc
fmul
jge
add
or
das
cdq
and
mov
ret
stc
push
cli
push
xchg
cmc
sbb
inc
and
inc
add
add
mov
imul
pop
call
cld
scas
xchg
adc
and
repz
mov
mov
or
stc
cmps
jnp
ins
test
outs
jae
mov
(bad)
test
cld
js
mov
or
fdivr
bnd
inc
jns
ins
call
push
lahf
xchg
call
std
pop
mov
inc
in
fs
sub
mov
retf
add
push
mov
push
nop
fldcw
jmp
movs
sbb
data16
sahf
stos
cdq
push
in
std
add
dec
movs
in
jecxz
mov
mov
xor
loope
hlt
(bad)
jno
cdq
mov
adc
cmp
mov
js
xor
pop
gs
jb
inc
test
sub
or
adc
aas
xor
cmp
bound
add
xchg
sahf
fst
pop
add
dec
repz
mov
ret
xchg
in
cld
aaa
imul
xchg
ja
mov
push
aas
into
xchg
mov
clc
ds
dec
jecxz
sti
jbe
and
test
push
lods
mov
loope
jo
sti
jbe
ja
iret
add
add
adc
jmp
and
pushf
push
or
ins
jmp
aad
pop
pop
mov
std
shl
xchg
les
push
jmp
icebp
jb
imul
mov
fild
mov
stos
add
leave
push
fisub
pop
sub
mov
jns
jns
mov
jmp
xchg
jbe
jb
ret
sub
js
and
outs
dec
mov
addr16
cmps
pushf
push
add
inc
(bad)
sbb
jl
fsub
lock
addr16
(bad)
cdq
push
jmp
push
add
dec
lock
jns
call
aad
inc
outs
mov
dec
retf
sub
jmp
sub
mov
jbe
je
mov
mov
out
rcr
mov
xor
add
sub
sahf
js
movs
sub
mov
call
sti
sbb
jne
pop
fs
jmp
xor
(bad)
scas
aaa
loopne
mov
outs
mov
cmc
jecxz
retf
imul
sub
sub
push
sbb
mov
in
imul
pop
ja
mov
inc
or
xchg
mov
imul
seta
jbe
jno
mov
add
push
pop
mov
cmp
mov
out
iret
mov
cli
pop
jo
mov
test
mov
loop
jno
std
aad
sbb
jl
mov
mov
retf
repnz
(bad)
dec
sbb
fisttp
and
in
(bad)
inc
fidiv
push
sbb
cmps
sbb
xor
lahf
xor
lock
jl
or
pop
or
and
inc
sahf
add
imul
xor
mov
aaa
push
and
out
push
stos
sti
jnp
popa
dec
daa
ficom
test
push
xor
shl
mov
inc
test
in
xlat
fsub
outs
mov
in
cmp
inc
aad
fst
jl
inc
cwde
sbb
mov
outs
cmps
fldcw
sbb
mov
xchg
sbb
push
pop
adc
loop
mov
lods
jg
xchg
add
xlat
sahf
imul
add
and
repz
dec
xchg
lock
pop
or
ror
(bad)
mov
je
call
loope
inc
ja
or
(bad)
dec
add
ds
and
or
sbb
inc
mov
mov
mov
dec
jmp
jle
int
or
das
adc
add
mov
inc
xchg
pop
test
je
imul
(bad)
gs
jmp
xor
(bad)
hlt
add
adc
cmp
ja
mov
stos
and
shl
dec
imul
into
aad
push
clc
adc
push
movs
pop
push
imul
repnz
add
sub
or
lods
jnp
mov
inc
xchg
inc
in
sar
repnz
arpl
sub
mov
inc
mov
jbe
idiv
adc
add
lea
xchg
xchg
icebp
push
adc
add
lods
fs
xlat
dec
cs
std
lock
inc
gs
mov
inc
sbb
xchg
lods
mov
shl
fwait
icebp
inc
push
inc
and
sub
push
adc
dec
gs
pop
xor
add
sbb
rcl
mov
and
cmps
idiv
mov
adc
xchg
je
clc
cmps
xchg
sub
outs
xchg
lea
je
mov
add
xchg
test
test
addr16
dec
cmp
push
rcr
push
pop
xchg
aaa
js
test
mov
xchg
icebp
or
and
sub
push
mov
mul
stos
outs
adc
stos
xor
fistp
cmp
stos
js
mov
dec
sahf
xlat
xchg
je
cld
dec
xor
jecxz
test
xchg
ror
stos
inc
add
ffreep
test
dec
jp
mov
cld
ds
cs
icebp
fimul
push
gs
dec
test
popa
loopne
inc
add
mov
pushf
dec
sub
push
stc
bnd
clc
push
inc
jl
out
xor
imul
iret
dec
dec
xchg
push
mov
pop
sti
fbld
cld
dec
inc
and
push
mov
mov
jmp
add
pop
mov
pushf
jmp
lods
sbb
int3
icebp
xor
lahf
jp
xor
(bad)
xlat
push
icebp
inc
or
pop
bound
push
ds
mov
mov
sub
sbb
sbb
xor
jl
adc
data16
mov
push
nop
aad
sub
and
adc
add
pop
fnstsw
xchg
push
test
jnp
ins
or
inc
mov
test
cmp
jecxz
inc
mov
jae
jbe
ds
cmp
out
into
push
jmp
gs
popf
mov
mov
out
cli
and
repnz
inc
inc
pop
ret
jo
sbb
sbb
mov
lea
jb
mov
jl
into
mov
aam
pop
jl
jae
fcomp
or
rcl
mov
outs
push
test
out
std
popf
es
or
call
int
inc
fidiv
js
dec
test
push
sbb
mov
mov
in
dec
mov
pop
retf
gs
xor
aas
scas
xor
dec
push
sub
into
in
sbb
pop
jmp
in
inc
ret
inc
stos
pop
(bad)
mov
dec
and
push
loopne
push
xor
mov
or
mov
iret
rcl
lods
inc
jecxz
neg
or
in
not
xor
sbb
push
mov
(bad)
mov
pop
(bad)
imul
pinsrw
push
push
sbb
push
adc
and
sahf
jg
lea
sbb
sub
test
mov
dec
push
popf
pop
push
fwait
adc
xchg
jge
lock
add
outs
mov
test
jp
xchg
mov
and
fadd
fadd
pop
hlt
push
cmp
(bad)
in
repnz
clc
cmp
xchg
add
jnp
dec
cmp
mov
shr
mov
xor
xor
gs
jb
jae
test
xor
(bad)
jno
or
xchg
ror
lods
sub
xchg
mov
pop
loope
jae
(bad)
rol
test
or
mov
xor
call
rcl
xor
push
clc
sbb
dec
stos
and
pop
mov
mov
xlat
inc
fwait
icebp
or
sti
jbe
je
in
or
das
mov
mov
je
stos
lea
daa
or
cmc
and
icebp
jle
inc
jge
lds
mov
call
retf
jecxz
xchg
mov
ja
mov
push
add
stc
mov
or
test
div
ds
enter
pop
addr16
jg
or
popa
cli
aaa
es
mov
sti
jle
stc
das
mov
push
pop
jns
loope
or
(bad)
jmp
ins
push
cmp
stos
xor
push
pusha
sahf
rol
cld
inc
fs
mov
push
xchg
les
xor
lock
xor
push
aas
stos
bound
mov
loop
in
aam
dec
mov
cs
cmp
cld
fild
imul
arpl
xchg
iret
call
jns
fist
js
iret
cmp
push
adc
ins
push
scas
jo
mov
jne
retf
sub
and
mov
sub
out
sbb
gs
fimul
in
loopne
sbb
ret
lea
mov
pop
(bad)
ret
adc
sti
inc
sbb
inc
in
cmp
mov
mov
jecxz
pop
adc
push
pushf
push
add
(bad)
mov
call
inc
xor
push
add
loop
xchg
or
sbb
js
mov
xchg
es
fdivr
aam
jbe
lods
jb
mov
dec
in
cmps
dec
cmc
cld
add
jmp
inc
mov
(bad)
aad
and
xchg
stc
cld
cdq
dec
pop
lods
aad
jmp
fadd
fcom
pop
jae
dec
stos
aaa
add
cmp
imul
lea
xchg
into
push
je
and
xor
or
arpl
inc
fwait
xchg
xchg
dec
dec
hlt
mov
sbb
jecxz
loopne
jecxz
in
fsubrp
pop
jg
inc
call
arpl
mov
nop
(bad)
dec
call
xchg
lock
cld
cmp
adc
cs
mov
mov
test
js
fisub
push
fdiv
adc
arpl
push
mov
push
stos
xlat
(bad)
pop
in
les
loope
add
pop
cmc
mov
movs
pop
(bad)
mov
jmp
shr
push
dec
sbb
sbb
push
mov
sti
sub
rcr
push
call
scas
pop
arpl
dec
and
popf
mov
xchg
cmp
scas
inc
(bad)
sbb
cmp
pop
push
pop
or
out
ds
or
imul
ds
pop
mov
(bad)
xor
inc
push
mov
imul
sti
std
ins
int
movs
xchg
inc
mov
cld
xchg
xchg
add
cmps
cmp
ss
fcomp
jnp
dec
test
inc
push
mov
pop
jns
stos
int3
int3
or
out
icebp
stc
cs
pop
or
mov
sbb
jb
test
cmp
cmps
and
(bad)
jmp
add
lods
sub
mov
in
in
jno
clc
movs
xchg
cmc
inc
in
mov
sbb
inc
(bad)
stc
mov
loop
dec
mov
fnsave
ds
cld
repz
xchg
jo
push
or
mov
(bad)
cmp
inc
(bad)
rol
test
jge
jne
fcom
and
jl
xchg
ss
jbe
ins
popf
dec
or
jno
push
inc
fwait
int
inc
mov
jl
mov
jg
(bad)
xchg
jl
jmp
and
imul
stos
test
jno
popf
xchg
jl
loopne
movs
frndint
fs
lods
mov
dec
sub
jmp
fstp
cmp
cmp
movs
jne
dec
mov
mov
idiv
cli
es
pop
in
add
pop
or
push
dec
cmps
dec
inc
mov
mov
dec
and
rol
fcomp
sub
pop
repz
(bad)
pop
xchg
mov
pop
pop
sti
ror
std
(bad)
jmp
fwait
xchg
out
loope
cmp
mov
ds
cs
in
push
and
add
arpl
xchg
mov
add
cmc
jbe
add
inc
jge
out
cmp
stos
jnp
xchg
add
cmps
mov
and
adc
inc
inc
lea
mov
inc
xchg
mov
dec
xchg
xchg
push
es
mov
in
mov
ja
xchg
test
mov
fstp
mov
cmp
ds
sti
jbe
pop
jo
pop
test
jle
mov
ds
(bad)
jnp
fdiv
xchg
cld
jae
popa
mov
imul
pusha
mov
push
mov
xor
fistp
fdiv
push
sbb
bnd
mov
dec
shl
and
outs
add
pop
in
xchg
aas
adc
fisubr
mov
sub
adc
stc
repz
es
jle
mov
aaa
inc
dec
icebp
xchg
call
call
inc
dec
add
lods
and
mov
outs
popf
test
imul
cmp
add
shl
test
mov
cmc
mov
push
mov
xor
movs
neg
mov
xchg
movs
mov
inc
fcos
clc
(bad)
aad
ins
fwait
lods
inc
out
and
rcr
fisub
xor
cmp
and
xchg
mov
or
push
std
adc
xor
adc
add
popa
mov
mov
in
imul
mov
jg
test
add
push
ins
(bad)
out
(bad)
xchg
sbb
pop
jb
mov
dec
xchg
aam
dec
loope
gs
shr
add
mov
out
test
push
int
mov
mov
ds
inc
lock
lods
jno
jle
data16
mov
cdq
adc
(bad)
xchg
fist
jno
mov
imul
fs
je
into
xor
mov
cmp
jb
xchg
mov
inc
xchg
rol
and
rep
and
ins
test
outs
push
xchg
(bad)
jmp
and
loopne
(bad)
inc
jns
xchg
dec
lock
adc
or
jne
dec
cmps
and
cmp
jbe
jl
mov
fistp
shl
call
push
sbb
fcomp
cmp
sbb
pop
(bad)
xor
inc
movs
add
xchg
pushf
sbb
and
mov
cmc
bound
fdivr
mov
dec
xchg
in
jmp
and
rcl
jmp
pop
test
loopne
lods
ror
xchg
xchg
dec
jecxz
idiv
sub
fsubr
out
jle
sub
sbb
push
mov
push
xchg
xchg
mov
or
lea
call
aas
xor
xor
mov
sahf
pop
out
inc
sahf
dec
xor
lahf
sbb
sub
fcom
out
fwait
loop
in
inc
jl
dec
sti
popf
jmp
loope
cwde
in
dec
xor
(bad)
icebp
sbb
pusha
sub
xchg
ss
pushf
movs
dec
inc
push
icebp
xchg
xor
das
push
sub
mov
ds
sub
cmp
mov
add
xchg
xchg
mov
out
ret
das
mov
cmp
adc
sbb
pop
inc
mov
push
test
cmp
inc
sub
push
xlat
mov
call
rcl
pushf
call
xor
rol
inc
inc
cmp
push
ds
repnz
fnstcw
jae
(bad)
fisttp
ins
jne
gs
lahf
(bad)
lds
rcr
inc
cmp
xor
push
sub
mov
leave
xor
pop
je
outs
xor
xchg
add
es
add
lds
popf
sahf
fidivr
mov
xor
cmc
std
add
sbb
mov
dec
jns
xchg
test
sahf
pushf
dec
loopne
(bad)
das
pop
cmp
jmp
pop
fwait
aas
dec
cmp
cs
push
test
iret
data16
jno
int
aaa
push
imul
jle
outs
pop
mov
jp
dec
jl
stc
mov
xchg
cld
jb
jl
push
lea
mov
dec
jmp
sbb
shl
lahf
mov
jg
mov
sbb
loop
dec
outs
cdq
mov
cmp
pop
loopne
jo
cmp
mov
mov
mov
xor
cli
das
mov
addr16
imul
adc
or
mov
pop
cwde
xchg
cld
pop
das
push
inc
fcmovbe
xchg
xor
(bad)
jns
dec
jbe
popf
push
repz
(bad)
addr16
in
push
into
fadd
mov
push
sbb
retf
repnz
lds
cwde
stos
popa
loope
fisubr
add
enter
call
cmps
sbb
ds
lahf
stos
test
xor
lea
clc
inc
ins
pusha
add
adc
addr16
mov
stc
arpl
sbb
cmp
into
cli
imul
inc
ret
cmp
pop
inc
mov
pop
mov
test
(bad)
(bad)
sbb
inc
add
gs
mov
add
(bad)
clc
in
popf
es
scas
test
jg
cs
inc
retf
sub
ins
push
mov
cmp
cli
or
cmp
cs
sbb
movs
dec
xor
sahf
sbb
xor
add
outs
daa
fidiv
mov
popf
inc
loop
jbe
hlt
in
das
fwait
pop
mov
pusha
out
test
pop
xlat
sti
and
lahf
xor
pop
xlat
cmp
cs
enter
sbb
or
stos
pop
jbe
xchg
add
es
pop
sti
jecxz
mov
pop
pop
pop
xor
cmp
or
sbb
sbb
jl
sar
sbb
and
shl
inc
push
inc
mov
bound
loopne
cmp
les
(bad)
mov
jae
leave
xchg
push
xor
rol
mov
sub
cmp
call
stos
data16
(bad)
push
pop
ins
mov
pop
iret
ja
ret
aas
movs
shl
inc
xor
pop
adc
aas
(bad)
jbe
outs
ins
mov
push
sahf
test
xor
jae
retf
mov
data16
jl
push
lahf
jo
shl
and
dec
push
fcmovnbe
mov
jecxz
neg
outs
pop
mov
xchg
ds
lock
xchg
lock
ins
mov
sbb
push
(bad)
aad
xchg
ja
cmps
aas
dec
push
fwait
push
ds
les
ins
out
or
cmp
ss
add
and
pusha
jno
outs
inc
lea
add
sub
jmp
pop
les
jg
sub
mov
inc
mov
mov
sub
rcr
stos
iret
push
lea
pop
xchg
xchg
xlat
jmp
mov
dec
clc
ds
shr
jle
mov
inc
sub
les
outs
in
xor
dec
retf
sub
add
jbe
jae
(bad)
cmp
add
xlat
test
jmp
jle
pop
jns
mov
bound
xchg
dec
sub
les
mov
pusha
loopne
mov
aas
aam
stc
(bad)
(bad)
dec
push
xchg
xchg
push
clc
sbb
inc
call
les
gs
sub
fwait
lds
retf
mov
jae
jge
lds
xor
or
stos
jg
sbb
mov
mov
pop
and
adc
jp
fldcw
sti
sahf
retf
inc
lahf
enter
mov
sbb
mul
mov
jg
mov
cli
test
mov
push
or
clc
test
cld
push
pop
jg
scas
adc
jbe
inc
sub
xchg
mov
pop
jmp
jb
call
or
push
call
xchg
sti
sar
jmp
jle
fimul
mov
test
popa
sub
shl
mov
das
test
add
(bad)
repnz
aam
jae
lods
mov
and
adc
cmp
push
fidiv
push
imul
mov
out
int3
mov
test
je
jl
aam
sub
add
cmc
jnp
fdiv
movs
add
movs
mov
in
xchg
xor
jnp
stos
dec
cld
nop
(bad)
xor
pushf
pop
or
inc
mov
test
bound
rcl
xchg
xchg
jbe
jp
push
sub
jmp
leave
push
jmp
addr16
sahf
xor
lods
mov
les
push
sub
xor
pusha
sub
das
mov
call
add
push
push
cmps
fsub
fist
mul
mov
mov
xchg
push
(bad)
fmul
stc
test
or
outs
ja
mov
(bad)
mov
out
xchg
shl
ds
pop
jg
jno
inc
(bad)
push
movs
retf
cmp
fsubr
in
or
sbb
pop
ja
add
pop
fild
test
xor
adc
and
fistp
icebp
dec
jbe
stos
push
repz
sar
ret
test
xor
(bad)
out
add
push
xchg
in
aam
fldcw
xchg
ficom
out
mov
inc
jns
mov
ss
(bad)
lods
push
cld
and
outs
stos
aas
jl
loopne
inc
pop
icebp
(bad)
aam
add
aas
mov
push
addr16
out
sub
imul
pushaw
stos
jg
cmps
or
mov
pushf
or
daa
(bad)
in
mov
sbb
sti
jbe
ins
fs
test
jmp
loopne
add
jbe
rol
mov
mov
ret
or
adc
stc
loope
loop
dec
push
push
fld
cs
cld
lock
xchg
jb
dec
mov
inc
and
mov
mov
cli
leave
or
aas
int
pop
push
pop
and
or
stos
jge
cmps
or
mov
and
stos
xchg
add
pop
push
test
shl
in
jae
lock
(bad)
mov
jae
xchg
mov
xor
test
lahf
inc
shr
inc
push
xchg
shr
jg
scas
aaa
sbb
ds
mov
mov
jmp
jns
(bad)
push
fs
mov
mov
cmps
mov
ins
mov
lea
push
and
fstp
shr
pop
lds
popf
fcomp
inc
iret
cld
je
icebp
xlat
(bad)
sub
ins
mov
jl
mov
fcomi
mov
inc
mov
hlt
xor
sub
shr
imul
movs
sbb
cld
inc
cs
mov
test
(bad)
cli
or
mov
push
fwait
das
cwde
and
inc
mov
pop
xchg
mov
jl
fbld
hlt
push
popf
and
fwait
les
and
out
xor
ins
or
adc
mov
sbb
lods
push
sti
push
sub
neg
push
jmp
jb
dec
mov
inc
sub
xchg
mov
mov
jmp
inc
or
pop
sub
adc
int3
jb
sahf
push
sbb
mov
dec
(bad)
rcl
cmc
inc
jae
cmps
das
(bad)
fdivr
(bad)
in
cdq
ins
(bad)
xchg
add
shr
sti
add
scas
push
test
std
xchg
fsub
pop
js
fwait
dec
call
(bad)
rcl
and
test
sbb
inc
es
lahf
mov
stos
adc
fisttp
sar
ficomp
popa
sbb
cmp
and
test
imul
or
nop
mov
or
or
cmc
xchg
aas
mov
push
fcomp
jl
outs
fnstcw
mov
or
fadd
lea
pop
mov
sti
div
fcos
pop
inc
cwde
scas
addr16
fnsave
sub
hlt
hlt
push
retf
ss
fnsave
outs
jo
jb
ins
mov
jmp
cwde
mov
gs
or
push
jl
call
jg
fiadd
aaa
movs
xor
xchg
arpl
mov
rcl
sti
jns
jb
and
mov
pop
sti
out
data16
pushf
add
fcomip
add
inc
sti
mov
outs
jl
mov
xor
rcr
out
test
dec
add
clc
ds
inc
fst
jo
inc
stos
sub
cld
pusha
aas
add
rcr
xchg
jnp
call
mov
adc
dec
pop
ficomp
mov
std
push
or
xlat
mov
xchg
int
rcr
inc
mov
pop
call
xchg
std
test
shl
outs
inc
xchg
lds
test
icebp
ins
outs
lods
scas
dec
retf
ds
int
inc
cmp
bound
push
sbb
xchg
jnp
in
adc
adc
or
or
test
scas
pop
xor
pushf
cs
and
(bad)
loop
mov
jl
push
arpl
inc
mov
mov
hlt
adc
sbb
stos
pop
jne
xchg
cmc
out
sbb
rcr
cs
stc
f2xm1
push
(bad)
adc
pop
cmps
sbb
pop
mov
jl
cwde
lea
adc
xchg
pcmpeqb
add
pop
fs
adc
outs
pop
fisttp
add
popf
test
(bad)
pop
sar
aad
jge
lea
mov
js
out
test
shl
je
(bad)
mov
lods
test
bound
cwde
mov
rcr
xor
mov
push
rcr
aaa
adc
mov
jbe
ss
dec
rcr
dec
daa
mov
or
mov
in
clc
div
clc
pop
jo
adc
sbb
add
fistp
mov
jae
mov
adc
cs
jmp
mov
cmc
sbb
push
lods
jge
mov
mov
ficom
or
cmps
stos
daa
and
test
ds
imul
jmp
cmp
imul
scas
pop
jge
mov
test
imul
jmp
bound
cmc
xor
xor
pop
aam
fs
jne
movs
mov
xlat
out
xchg
xor
push
jl
sub
mov
mov
lock
pop
rcl
test
jecxz
cmp
xchg
add
sti
stc
xor
and
jmp
jmp
add
mov
hlt
data16
aaa
inc
or
popa
mov
or
mov
pushf
or
ret
fidiv
push
or
xor
or
nop
or
sar
fisttp
xor
and
jmp
imul
inc
lds
xchg
imul
mov
call
in
and
xchg
out
mov
dec
pop
xchg
mov
adc
adc
push
ja
inc
cmps
and
jle
inc
pop
jno
mov
xchg
pop
sub
or
add
inc
ins
js
push
mov
mov
lods
outs
adc
outs
inc
sub
aam
aaa
sub
pop
popf
pop
in
or
sub
push
and
(bad)
mov
out
xchg
movs
lods
rcr
shr
call
jecxz
jo
out
xchg
pop
fidivr
sbb
cld
xlat
imul
movs
outs
dec
call
dec
mov
pop
cli
pop
fwait
repnz
iret
cmp
sub
fst
movs
and
mov
and
mov
adc
push
push
mov
jecxz
mov
loop
jl
xchg
jb
inc
test
dec
movs
mov
shl
inc
ja
mov
push
add
xchg
inc
lock
aaa
out
jmp
dec
(bad)
jnp
inc
and
xchg
xchg
ds
ret
js
lock
jae
retf
xor
add
push
nop
mov
and
and
stos
xchg
daa
shr
pop
lds
push
xchg
pop
repz
lock
xchg
std
xchg
push
idiv
mov
jmp
ret
add
nop
sbb
loope
cmp
movs
inc
jecxz
clc
cmp
fild
xor
cmp
or
mov
fild
fdivr
mov
jno
sti
cmp
push
and
or
cmp
pop
xor
inc
jecxz
xchg
xor
jl
sub
dec
mov
adc
rcl
fwait
mov
lods
imul
out
minps
sub
push
out
fist
pop
sbb
(bad)
fisttp
and
push
pop
inc
cld
push
cmp
cwde
mov
mov
jmp
jbe
jp
mov
add
je
push
adc
xor
xor
jb
aam
or
retf
outs
push
push
fimul
mov
dec
xchg
hlt
xchg
fs
mov
test
dec
or
jne
xchg
adc
(bad)
test
scas
inc
repz
mov
sub
loop
jmp
jnp
lods
jne
arpl
ret
sub
cli
add
(bad)
jno
fiadd
lahf
das
scas
adc
fs
jp
xchg
cmp
add
add
sbb
fdiv
mov
mov
daa
mov
mov
lods
shl
sbb
mov
imul
(bad)
mov
lods
sub
or
cli
fistp
xor
push
push
outs
inc
or
rol
stc
das
mov
popa
push
pop
pop
int
adc
pop
lods
imul
call
xor
out
add
jbe
lods
sub
mov
xchg
arpl
jmp
scas
dec
mov
mov
das
lock
test
iret
dec
cld
cmp
or
out
int3
inc
shl
push
push
jno
aaa
sbb
pop
test
or
mov
xor
xor
ja
pusha
mov
jle
pusha
ja
push
ss
or
mov
pop
out
add
outs
ins
pop
shl
movs
leave
pop
mov
mov
pop
fcom
mov
in
xchg
add
cmc
js
repnz
add
inc
ds
sti
fist
and
push
inc
lahf
sbb
mov
or
mov
jnp
fistp
mov
arpl
(bad)
dec
xor
and
xchg
jge
mov
bound
inc
loopne
xchg
aaa
mov
jbe
lea
movs
sahf
fs
in
xchg
push
fcom
and
mov
dec
loopne
mov
xor
repnz
or
repz
sub
nop
jmp
pop
fbstp
pop
jl
mov
aaa
push
push
mov
mov
loopne
jp
clc
push
inc
je
shl
sbb
ja
adc
push
cmp
outs
cdq
into
mov
xchg
lods
xchg
cmp
je
mov
jl
fnstsw
and
int
mov
scas
les
push
sbb
inc
(bad)
imul
retf
ins
mov
xlat
pop
sub
test
push
enter
push
mov
gs
xchg
mov
mov
cwde
(bad)
sbb
jl
in
add
add
outs
inc
mov
sbb
cmp
xchg
inc
lahf
loopne
bnd
pusha
mov
inc
xchg
enter
movs
pop
cs
lods
xor
dec
xchg
mov
dec
jnp
lds
movs
mov
dec
jle
mov
xchg
sub
sbb
cmp
cld
fild
or
dec
jo
js
jle
cmps
xchg
xchg
adc
icebp
pusha
(bad)
stc
or
jno
out
or
pop
mov
mov
outs
popf
xlat
mov
add
sti
iret
stos
sbb
(bad)
jbe
sbb
lea
mov
dec
in
mov
ficom
lods
sub
push
xchg
mov
bound
test
adc
fsubr
xchg
data16
lds
push
push
inc
mov
ret
push
and
or
xchg
xchg
mov
int
cmp
add
and
sub
push
movs
cmp
lahf
xchg
shl
cmp
jbe
sbb
jmp
and
mov
sti
stc
test
aas
stos
inc
ja
mov
or
fdivrp
dec
dec
pushf
xchg
push
icebp
pop
fdivr
xor
push
jmp
outs
inc
loopne
sbb
xchg
mov
jmp
punpcklwd
mov
or
jge
(bad)
push
sbb
scas
mov
ret
aas
(bad)
std
jne
inc
jg
mov
addr16
ret
jecxz
jns
hlt
fimul
mov
ja
call
rol
pop
inc
lods
fimul
dec
fdiv
mov
jecxz
jo
xor
ss
jnp
dec
push
jo
mov
mov
and
pusha
out
add
cmp
or
adc
cdq
and
scas
addr16
mov
pop
in
mov
push
call
mov
rcr
jp
dec
repz
inc
mov
in
sub
rol
mov
(bad)
das
test
push
xchg
imul
mov
mov
push
inc
(bad)
sti
mov
cmp
les
dec
jge
push
push
add
ror
rcr
mov
aas
cmc
add
cdq
push
mov
movs
jae
xchg
ss
mov
aaa
cmp
sar
repnz
jbe
stos
push
enter
mov
xchg
arpl
jmp
or
jl
cmp
mov
test
es
ins
test
cmps
sub
iret
inc
jmp
gs
inc
add
mov
out
sar
add
int
pop
jge
adc
push
mov
pusha
movs
xlat
mov
and
in
call
in
jle
stos
pop
std
mov
test
xchg
pop
pop
cmc
rol
loope
les
stos
push
fs
xchg
test
aaa
sti
aam
ret
ins
mov
adc
or
(bad)
fist
xor
pop
push
xchg
push
lea
fild
mov
cdq
std
ins
inc
inc
xor
inc
add
add
xor
or
dec
arpl
sub
stc
jmp
fisubr
push
mov
jg
ret
fwait
callw
and
(bad)
cmps
add
outs
xchg
pop
je
mov
hlt
cwde
in
ror
cwde
inc
out
test
push
cld
xor
mov
je
cmp
push
out
mov
lods
jg
call
ja
aaa
into
pop
pop
jp
xor
jp
mov
push
jmp
and
mov
mov
inc
mov
inc
cwde
les
adc
retf
lea
loopne
idiv
addr16
test
out
hlt
fiadd
pushf
mov
jle
adc
das
fst
jne
pop
stos
aaa
push
jae
xor
or
mov
jbe
cli
das
mov
dec
ins
inc
and
pop
cmp
and
ret
retf
sahf
test
sahf
rcl
icebp
jbe
push
mov
dec
xchg
mov
push
xchg
add
lea
xchg
mov
add
addr16
cli
test
(bad)
mov
not
and
repz
ret
xor
cmp
les
sbb
adc
nop
les
stc
ret
aas
mov
add
adc
adc
jae
sbb
lods
xor
xchg
aam
adc
aaa
and
div
mov
pop
lds
cmps
fisub
scas
lahf
dec
icebp
mov
mov
shr
add
mov
in
lock
into
ror
dec
jecxz
scas
ds
ds
std
imul
push
push
pop
scas
adc
(bad)
jnp
jne
mov
out
repnz
jle
lock
dec
aas
fidivr
je
imul
add
jns
scas
dec
inc
fnstsw
pop
rep
xchg
push
inc
(bad)
div
pop
data16
arpl
ror
rol
xchg
pop
int
xchg
popf
mov
and
pop
arpl
int3
div
popf
scas
dec
(bad)
dec
mov
or
ret
cli
fdiv
xor
push
or
mov
sub
mov
sbb
std
jnp
jae
jmp
xor
mov
push
fnstenv
cmp
into
loope
or
inc
fsubr
mov
mov
jbe
lods
xor
(bad)
fnstsw
mov
mov
repz
adc
loope
sub
stos
(bad)
adc
xchg
and
loope
stos
out
bound
fisubr
fidiv
adc
inc
lods
xor
mov
push
mov
mov
dec
jmp
jp
jp
mov
and
rcr
fisttp
mov
xchg
mov
xor
outs
in
rol
rcl
inc
mov
movs
aad
movs
(bad)
mov
out
mov
xchg
jo
inc
xchg
xchg
sbb
test
xchg
fiadd
adc
mov
in
sbb
sti
jg
cmp
dec
mov
inc
pop
test
push
mov
sub
pop
test
push
test
pusha
inc
sbb
add
add
cmp
mov
int
xchg
xor
dec
jbe
cmps
jno
mov
mov
push
repnz
xchg
jnp
sbb
mov
xchg
fcmovb
xchg
rol
ins
shr
call
test
push
inc
xchg
push
xchg
inc
cmp
cmps
sahf
adc
cli
or
int
sub
sub
imul
ss
jb
mov
dec
jmp
or
sub
mov
mov
dec
stc
frstor
cli
fadd
sub
mov
jecxz
rcl
outs
lods
test
loopne
fidivr
fdivr
xor
jns
sbb
xchg
push
nop
lds
pop
in
setg
jae
bound
lds
aas
jo
adc
pop
frstor
mov
jp
cmps
inc
inc
sub
ret
aam
adc
dec
inc
lods
imul
mov
nop
sbb
imul
mov
inc
mov
int3
cmc
mov
cdq
dec
push
fwait
cwde
inc
out
ja
cmp
(bad)
hlt
stc
jl
inc
arpl
je
inc
sub
mov
test
sub
ins
call
pop
inc
pop
xor
cwde
sub
fwait
jge
mov
cli
imul
dec
in
leave
xchg
test
pop
hlt
xor
cdq
scas
xor
push
retf
aad
pop
lds
xchg
or
sahf
outs
ja
cdq
mov
daa
stc
repnz
cdq
movs
inc
leave
inc
call
mov
and
xor
dec
cs
mov
dec
out
mov
xchg
pop
adc
or
and
add
jb
test
sbb
pop
out
fistp
bnd
sub
sahf
and
mov
dec
mov
pop
pop
idiv
nop
jo
sbb
ins
add
cmps
or
jmp
sahf
mov
les
xor
retf
inc
sahf
add
ss
scas
pop
inc
push
fwait
push
add
movs
mov
arpl
leave
addr16
std
cmovo
(bad)
pop
adc
and
cmps
pop
sbb
push
popf
(bad)
call
loop
pushf
add
fistp
movs
loopne
in
cmps
dec
xchg
popf
pop
add
icebp
mov
out
arpl
mov
adc
imul
fisttp
inc
mov
inc
and
ror
pop
ret
push
pop
scas
sbb
arpl
mov
jmp
xor
push
dec
push
mov
arpl
inc
imul
mov
cmp
rcl
je
jno
dec
(bad)
cmps
loopne
inc
cdq
push
out
jle
repnz
test
sti
add
mov
test
test
fdiv
lods
scas
push
idiv
cmp
ds
lods
pop
int3
sbb
dec
sub
test
call
aas
mov
jp
jno
int
sbb
sub
pslld
push
xor
xor
cmps
xchg
es
aas
fstp
cmp
hlt
inc
dec
and
aad
jmp
out
or
inc
repnz
mov
arpl
enter
loope
jp
lods
inc
repz
cmp
xchg
(bad)
inc
loope
jne
pop
mov
sub
mov
mov
jmp
ja
int
push
pop
add
sub
push
frstor
mov
mov
aaa
push
dec
hlt
jmp
jb
dec
dec
cmp
inc
repz
repnz
pushf
loope
jbe
loope
adc
in
jb
pop
mov
outs
push
test
retf
sti
dec
adc
push
jmp
pop
cmp
mov
and
push
xor
dec
mov
nop
ret
es
stc
je
stc
daa
xor
adc
push
int
pop
je
pop
jmp
(bad)
adc
dec
popa
mov
std
rcl
ins
jb
fwait
sub
out
mov
hlt
mov
test
loopne
mov
ffreep
adc
lock
int3
mov
rcr
inc
imul
cld
ds
sbb
cld
stos
callw
sbb
sbb
mov
mov
mov
lods
inc
out
repnz
sbb
and
gs
mov
mov
stos
data16
xor
call
pop
cli
inc
jno
mov
addr16
lock
push
leave
xchg
pop
and
stc
mov
repz
mov
push
and
mov
scas
(bad)
inc
outs
mov
adc
out
retf
inc
call
sbb
sahf
aaa
sub
mov
call
cli
and
sbb
inc
imul
paddusb
or
add
and
aam
pop
xchg
call
jle
dec
lds
cmps
push
loope
push
and
rol
xchg
fdiv
dec
popf
dec
jne
mov
loop
fimul
push
sub
leave
fcmove
data16
dec
jnp
mov
or
mov
into
jnp
shr
sbb
cmps
cmp
or
cmp
xor
adc
mov
outs
cdq
mov
pop
(bad)
retf
jge
sub
(bad)
pop
fwait
in
cmps
data16
jae
(bad)
fdiv
mov
ja
mov
cs
mov
out
adc
jbe
dec
pop
xor
out
shl
sbb
push
inc
inc
xchg
dec
or
mov
test
sub
mov
dec
inc
inc
cmp
xor
cmc
inc
(bad)
je
add
cmps
dec
ja
(bad)
cld
scas
xchg
or
sti
inc
xchg
jl
jne
shl
mov
xchg
sbb
leave
loope
add
outs
in
mov
pop
in
mov
and
cli
movs
fild
jbe
dec
fidivr
push
inc
stc
out
jne
and
add
inc
mov
fwait
lods
mov
cmp
jge
call
fs
cmp
pop
xor
and
and
add
cmps
aas
push
lea
pop
in
cli
cmps
adc
jbe
lea
mov
loope
fstp
mov
cwde
mov
push
xchg
stos
cmc
adc
aam
sbb
jnp
sbb
cmp
pop
std
add
dec
test
jl
std
inc
sub
mov
pop
cdq
stc
pop
cdq
fdivr
jb
hlt
xor
inc
jne
mov
jb
(bad)
push
sbb
xchg
xchg
retf
out
stos
into
inc
repnz
lods
pop
xchg
xchg
idiv
jmp
arpl
mov
jl
test
std
movs
loope
pop
sbb
hlt
cmp
sbb
cld
sti
sub
xor
dec
mov
pop
pop
mov
jae
sub
clc
pop
push
pop
add
sub
ja
sbb
pop
scas
pop
call
cmp
lahf
and
push
gs
mov
fdivr
inc
fistp
lahf
loop
mov
cmps
popa
xchg
and
test
jmp
xchg
les
test
outs
outs
lods
scas
jb
push
fdivr
int3
jle
or
aaa
dec
mov
inc
or
sub
fs
jle
push
xor
and
push
jb
mov
inc
pop
lods
jae
movs
cmp
test
fwait
sti
out
int
jb
inc
jne
mov
sti
sahf
adc
sbb
loop
ja
jl
mov
jmp
nop
outs
daa
retf
enter
mov
sbb
pop
cld
adc
cmp
mov
fwait
stos
iret
dec
push
fcomp
cli
jecxz
xchg
sbb
imul
add
jg
add
mov
push
popf
(bad)
stc
shl
cmp
jbe
test
ret
dec
pushf
xlat
sbb
cmc
jo
add
cmp
xchg
mov
loopne
hlt
les
sbb
retf
dec
lods
adc
sub
in
repz
call
jns
mov
stos
mov
jnp
cli
add
and
and
das
leave
or
ins
je
adc
dec
jb
mov
push
or
aad
xor
aad
aam
inc
stos
jbe
mov
pusha
fwait
les
dec
xchg
mov
movs
mov
clc
dec
stos
push
aas
and
idiv
push
mov
call
int3
rcr
cmp
xchg
jge
mov
call
cli
clc
push
mov
xor
jae
cdq
and
and
jp
mov
ja
cmps
lahf
push
add
popf
call
repnz
jbe
mov
cli
mov
or
std
ror
mov
das
test
push
xchg
mov
aas
pop
rcl
sub
inc
jnp
mov
inc
lods
cmp
xor
pop
push
movs
xor
sub
xchg
xor
into
push
clc
cli
add
add
pop
jae
sub
adc
jge
stos
jns
cmp
imul
and
mov
inc
scas
push
dec
jbe
mov
and
stos
sti
dec
int
popa
and
clc
xchg
adc
inc
call
push
(bad)
rol
mov
imul
call
cld
stc
inc
stc
ds
sbb
or
lahf
inc
cmp
(bad)
cmps
stos
mov
loope
or
mov
add
adc
(bad)
jae
mov
pop
xchg
nop
xchg
cmp
inc
ret
aas
xchg
hlt
push
cli
inc
pop
jp
sub
iret
clc
jge
in
mov
ret
in
cmp
xlat
mov
loopne
cmps
cmps
scas
clc
cmp
and
retf
sti
adc
add
cmps
aaa
sub
stc
in
enter
inc
jnp
les
fs
mov
jnp
mov
jmp
test
inc
jo
xor
dec
xor
sub
xor
imul
or
mov
fcmovu
mov
cli
pop
jno
mov
jg
mov
dec
loopne
jns
cli
cmps
mov
out
xchg
ja
mov
aam
mov
rol
sub
xor
push
jmp
pop
sbb
add
inc
aas
jns
mov
xlat
inc
shl
add
in
xor
sbb
sbb
push
inc
mov
pop
in
xchg
retf
sbb
jae
mov
cmc
mov
dec
xor
push
lock
mov
jle
mov
mov
(bad)
lock
jnp
fdivr
icebp
jb
inc
xor
jo
ds
cs
cmp
test
imul
arpl
sar
lock
jne
loope
sub
add
ja
imul
add
or
std
mov
neg
jae
stos
pop
fistp
mov
add
rcr
xchg
sub
cmp
fyl2xp1
xchg
jecxz
inc
jg
mov
xor
(bad)
jo
and
sbb
push
adc
xchg
mov
clc
inc
loope
sub
cmc
push
inc
push
or
sbb
data16
jl
stos
sub
mov
out
call
fadd
jb
pop
icebp
mov
xchg
push
loop
jno
in
mov
mov
pusha
pop
mov
mov
test
loop
inc
mov
ror
sub
nop
in
int
ret
push
push
fnstcw
jge
mov
test
(bad)
cmp
stc
add
icebp
jbe
jle
clc
xor
pop
mov
lods
jg
lea
addr16
mov
jl
aam
daa
adc
mov
pusha
stos
mov
jno
jmp
adc
test
push
mov
ja
popf
sahf
aas
adc
xchg
mov
cmp
aaa
xlat
stc
int3
jle
and
push
jg
push
cs
ret
cmp
inc
in
int3
add
sbb
sbb
add
pop
std
imul
inc
cmps
dec
inc
call
jmp
fbld
jae
fild
lods
fisub
ret
out
add
fcmovu
mov
and
test
jecxz
retf
outs
lods
scas
dec
hlt
jns
adc
sub
fsubr
push
out
inc
jp
inc
shl
push
lahf
imul
mov
sti
fsub
hlt
jbe
js
int
sbb
lea
iret
push
mov
mov
fst
cmp
bound
jbe
push
ret
mov
pop
xchg
les
sbb
cmc
std
push
out
movs
scas
fucomp
cmp
xchg
or
mov
sbb
mov
push
retf
add
mov
push
pop
xchg
jmp
xchg
clc
jb
inc
sub
xor
jg
and
imul
and
test
int
xchg
xor
inc
push
popf
pop
retf
mov
jns
ret
cmps
fs
xchg
std
xlat
mov
ins
xchg
jbe
xchg
mov
fisttp
cwde
mov
sub
push
retf
or
sub
xchg
inc
sub
mov
jecxz
das
mov
xor
pop
cmp
aas
xchg
adc
imul
inc
cmps
cmp
mov
jl
iret
mov
aam
add
jp
mov
ins
mov
and
push
jmp
lea
jb
mov
pushf
out
cld
les
retf
inc
lods
dec
push
push
shl
repz
icebp
dec
imul
mov
ins
xchg
retf
cmp
fidivr
div
cli
add
inc
mov
sbb
or
pop
std
imul
add
aaa
adc
mov
xlat
add
lds
test
je
xchg
jns
sti
shl
and
ins
xchg
js
test
repnz
mov
xor
ds
cld
iret
push
in
add
sub
ins
xor
pusha
mov
clc
push
fcmovnb
adc
inc
push
inc
add
sbb
pop
mov
add
dec
and
in
xchg
adc
pop
jl
dec
sti
mov
mov
pop
test
mov
out
xchg
daa
test
xchg
mov
add
fsub
pop
inc
jmp
pop
retf
dec
into
adc
cmp
xchg
repz
ficomp
bound
cmps
adc
outs
test
dec
mov
cmp
inc
fwait
icebp
js
pop
out
xor
mov
imul
mov
or
or
cmc
xchg
aaa
sar
pop
lock
je
test
pop
mov
test
ja
not
mov
jnp
lahf
stos
sar
fs
mov
call
cdq
mov
adc
ss
test
push
jmp
sbb
inc
sbb
retf
sub
clc
sub
icebp
jbe
inc
pop
ret
cmp
jne
push
or
imul
test
sbb
std
unpckhps
pop
push
mov
mov
pop
push
mov
pop
xchg
rcl
cli
lds
mov
sar
rcl
fsub
sbb
fstp
and
cmp
push
jecxz
jo
dec
scas
adc
inc
cli
push
adc
mov
out
fisttp
mov
inc
ret
pop
sub
mov
call
and
cmps
sbb
cmps
mov
cli
inc
jp
test
pop
in
test
sahf
jns
icebp
fadd
lahf
mov
sub
test
jmp
mov
jmp
push
and
repnz
cdq
xor
adc
mov
jae
xchg
mov
ja
mov
(bad)
jae
push
and
pop
sub
push
add
sar
mov
push
call
sahf
scas
mov
hlt
pop
dec
inc
lods
js
mov
jge
into
call
add
shl
scas
out
mov
xchg
add
hlt
les
fwait
xchg
dec
lock
into
dec
push
dec
jmp
push
jge
adc
push
test
cwde
mov
nop
and
sar
shl
pop
and
inc
or
bound
imul
mov
jb
movs
mov
cmp
pop
xlat
aam
aas
(bad)
fidivr
push
jno
dec
(bad)
mov
popa
mov
cwde
or
mov
xchg
push
mov
pop
test
test
dec
jmp
repz
inc
call
scas
adc
push
test
push
test
xchg
pop
and
xor
push
nop
add
(bad)
rcr
popf
lea
in
rcl
cmc
sbb
cdq
mov
inc
mov
xchg
fs
rol
cli
stos
jmp
call
aas
call
dec
push
inc
fstp
cs
(bad)
push
in
add
and
pop
push
lea
cs
mov
fnstsw
shr
pushf
mov
push
push
add
push
bnd
rcl
sbb
stos
cmp
shl
aad
sbb
lds
sub
popa
mov
popf
jb
outs
mov
lods
jl
pushf
mov
cmc
or
lods
inc
lds
(bad)
clc
pop
push
sbb
inc
sub
jmp
pop
(bad)
icebp
or
xor
inc
add
and
mov
pop
dec
mov
jb
into
in
xor
outs
fmul
lahf
and
outs
push
shl
mov
inc
mov
xchg
popa
(bad)
mov
mov
fadd
movs
loope
jecxz
fisttp
mov
mov
xor
out
jecxz
pop
inc
mov
in
push
push
pop
clc
div
je
cmp
dec
mov
sbb
icebp
mov
lods
xor
iret
inc
fadd
js
call
in
outs
inc
cmp
xchg
es
mov
cmps
or
xchg
mov
ins
(bad)
aam
and
popa
sub
outs
aad
sbb
nop
popa
es
xchg
fwait
add
fiadd
add
repnz
mov
lods
push
retf
xor
cs
in
test
in
xor
sub
mov
into
push
sub
data16
clc
sbb
xor
sub
push
imul
jno
outs
inc
ret
mov
add
mov
push
aam
sub
repnz
jmp
pop
loope
lock
in
xchg
jb
icebp
shl
xchg
lods
ret
sbb
or
std
jmp
inc
fwait
movs
push
out
fidiv
cmp
push
cli
cmp
dec
movs
sbb
jo
dec
aas
pop
icebp
(bad)
mov
and
outs
sti
ror
mov
inc
and
inc
cmp
cmp
es
mov
aad
sbb
aaa
and
aad
dec
nop
mul
push
gs
jmp
loopne
xor
jge
hlt
shl
mov
sbb
xchg
aaa
(bad)
lods
fadd
inc
push
dec
(bad)
cmp
inc
xlat
(bad)
xlat
push
pusha
scas
push
and
mov
jmp
dec
aas
ficom
xor
sbb
and
sbb
fadd
xchg
mov
xor
daa
dec
(bad)
xchg
nop
imul
ins
sbb
icebp
nop
cmp
les
push
hlt
ror
scas
repz
mov
jmp
inc
jmp
or
dec
lods
mov
aaa
enter
out
adc
dec
test
dec
push
mov
mov
push
jecxz
add
pop
mov
and
inc
mov
lods
jl
movs
sub
mov
xchg
into
mov
mov
jb
imul
mov
xchg
data16
pop
xor
cmc
jmp
stc
das
mov
cmp
test
aad
ins
fwait
lods
push
(bad)
jb
sbb
adc
cld
mov
cli
xor
push
stos
pop
arpl
fwait
int
pop
push
scas
push
fcom
sbb
aas
fcom
sub
push
fwait
aaa
nop
jbe
inc
bound
inc
xchg
xchg
xchg
aas
or
fst
repnz
jge
stos
push
fidivr
mov
push
leave
shr
add
sbb
cmp
xchg
cs
fcomi
stos
retf
inc
mov
cmp
pop
nop
(bad)
and
gs
inc
cmp
mov
stc
push
stc
add
pop
mov
sbb
dec
ror
cmp
sahf
sbb
cmp
jmp
into
xchg
sbb
pop
jb
mov
inc
mov
xchg
jns
xchg
ror
lea
out
hlt
sbb
cld
loop
stos
jmp
pop
mov
cs
clc
ret
inc
xchg
aaa
add
aaa
adc
mov
mov
aad
fdivr
sbb
aaa
mov
and
sbb
jp
mov
jb
aad
aas
xor
push
xchg
fist
out
jae
mov
lock
adc
call
xor
mov
and
ret
jp
xchg
sub
outs
cwde
test
cli
push
cs
cld
fistp
pop
jns
dec
lods
add
jl
push
jno
fwait
stos
mov
fwait
repz
aas
cmps
pop
outs
add
adc
inc
rcl
fisttp
nop
test
in
xchg
xchg
xlat
push
pushf
pop
jns
fimul
adc
xchg
fistp
dec
stc
(bad)
mov
pop
xchg
arpl
lahf
out
adc
in
in
(bad)
pop
jne
xchg
dec
test
cs
repz
fidiv
inc
or
mov
inc
or
mov
lods
adc
iret
ins
cli
jmp
pop
iret
inc
or
lods
and
pop
arpl
dec
nop
mov
push
in
fisubr
aad
inc
push
lds
popf
fmul
dec
xchg
sar
dec
xchg
inc
pushf
enter
sbb
shl
test
aam
add
ret
jae
sub
aaa
cs
repz
sub
aaa
pop
push
movs
push
movs
enter
dec
cwde
rcr
push
inc
cmp
sbb
fistp
fldcw
mov
(bad)
adc
pop
inc
stc
clc
xchg
cs
ja
jns
push
lea
xchg
(bad)
dec
cmps
ret
xchg
popf
add
sti
cmc
jmp
cmc
aas
mov
sti
cdq
cld
adc
loop
fcmovbe
dec
pusha
loop
jns
sub
cmp
and
les
and
cmps
mov
call
jp
std
sbb
inc
les
ja
cmp
xchg
das
rcl
outs
or
data16
mov
pop
jmp
movs
or
(bad)
sbb
inc
push
es
xor
popa
fcom
xchg
and
xchg
add
pop
jb
movs
mul
inc
fcomi
icebp
ret
imul
sub
xchg
in
jbe
inc
jae
xor
inc
and
in
test
callw
mov
jns
jne
fbld
adc
or
mov
push
fnsave
pop
test
dec
out
fild
rol
cmp
xor
scas
xlat
dec
cwde
les
and
sti
nop
or
dec
sti
xchg
mov
xchg
imul
xchg
cwde
cmp
ds
test
pusha
les
outs
daa
mov
jl
fstp
ins
jecxz
cmp
loopne
jae
sbb
pop
cmp
add
sub
mov
pop
xchg
mov
aas
cld
out
and
clc
jle
inc
jno
mov
and
int
jne
mov
stc
ret
xchg
cs
imul
push
in
xchg
aas
es
stc
sbb
fcom
push
in
or
das
cli
hlt
sti
js
and
aaa
jns
movs
push
movs
scas
inc
inc
mov
test
pop
cwde
repz
je
cmp
pop
sbb
push
sahf
jle
ins
ins
sar
popf
cmp
shl
ret
aas
xchg
mov
popa
and
inc
out
cmps
inc
in
inc
sub
rcl
in
mov
adc
aam
mov
hlt
inc
popa
xchg
mov
(bad)
pop
clc
dec
push
sbb
xor
ss
jl
imul
mov
sti
rol
jne
aam
ja
jne
mov
jl
scas
pop
or
movs
cli
or
ins
int
mov
fisubr
jp
push
test
fs
jb
xchg
inc
and
jmp
push
out
fs
stos
int3
das
ret
mov
xlat
lock
mov
cmp
(bad)
xor
cmp
loopne
or
movs
pushf
mov
jmp
add
sti
aas
(bad)
and
cdq
sub
mov
jae
mov
test
inc
mov
jbe
mov
js
mov
add
retf
ins
lea
(bad)
mov
sbb
(bad)
push
xor
fldcw
jmp
or
xchg
inc
xor
and
pop
xor
test
cmp
jge
in
adc
aaa
mov
ja
sbb
cdq
sub
mov
sbb
and
cmps
in
(bad)
mov
jnp
push
stos
pop
repz
call
xor
shl
scas
mov
inc
out
mov
test
aad
ins
fwait
scas
jb
push
cld
cmp
fisttp
ss
dec
and
push
jl
mov
fdiv
hlt
or
mov
xor
mov
push
ficom
movs
or
imul
call
not
push
push
daa
lods
jbe
fadd
adc
cmps
push
xor
shr
les
scas
cwde
mov
adc
in
shl
inc
sbb
rcl
int
repz
call
ins
push
mov
push
mov
clc
outs
jmp
inc
add
outs
add
push
pop
test
or
outs
inc
and
sbb
jo
shr
popf
sahf
jmp
jb
mov
cmc
adc
inc
xchg
cdq
mov
pop
mov
jmp
mov
cs
ds
clc
rcr
add
sub
aaa
popa
jo
inc
cs
fldcw
fsubr
aas
mov
jb
sbb
cmc
pop
aaa
jo
add
pusha
pusha
lods
jnp
mov
lahf
sbb
pop
test
xchg
xchg
sti
push
sbb
jg
push
lds
mov
dec
hlt
test
fidiv
xchg
fiadd
xchg
fld
dec
in
fisubr
cs
aam
enter
push
pusha
es
ins
es
nop
test
(bad)
cli
aas
mov
add
adc
jns
adc
pop
retf
jb
dec
dec
test
cmp
sbb
or
repz
xor
inc
jno
stos
sub
in
mov
popf
cld
pop
dec
int3
mov
xchg
add
ret
mov
and
loop
stos
and
outs
lods
ds
and
sub
aaa
je
lods
push
mov
jns
rcl
cmps
rcr
addr16
sub
inc
or
ds
or
inc
arpl
push
lahf
(bad)
test
out
ficom
les
mov
js
in
call
ret
in
and
fiadd
fldenv
cwde
cmps
lock
cld
stc
sbb
cwde
dec
xchg
push
icebp
cmp
xor
cs
popf
pop
imul
mov
mov
(bad)
jmp
inc
sbb
std
pop
aaa
jo
add
ds
or
jnp
mov
lahf
push
add
dec
int
mov
mov
jb
ins
addr16
lds
(bad)
xchg
mov
je
movs
pop
jge
dec
nop
mov
pop
jl
call
(bad)
fild
mov
aad
pop
xor
neg
push
jmp
jo
dec
cdq
pop
dec
push
mov
xchg
call
sar
(bad)
jae
push
xor
pop
cmp
mov
mov
in
imul
and
mov
aas
dec
xor
fsubr
xor
clc
or
push
jge
(bad)
aad
xchg
in
call
or
shl
fcmovnu
aaa
popf
js
xchg
mov
in
retf
repz
inc
mov
jae
push
xor
sbb
stc
mov
xchg
and
sub
test
push
adc
xchg
adc
iret
imul
bound
mov
add
sbb
xor
lea
ins
int
mov
xchg
ret
add
jbe
cmp
fs
jmp
data16
xchg
clc
hlt
mov
cwde
(bad)
lds
stos
push
add
int
inc
outs
mov
fisttp
xchg
xchg
jmp
call
mov
ja
je
mov
(bad)
jmp
inc
fs
sub
js
add
sub
pop
fldenv
mov
mov
jge
mov
xor
push
nop
hlt
add
pop
jl
push
jmp
and
inc
xchg
lahf
pusha
add
enter
mov
push
mov
lea
aas
jmp
push
xchg
mov
cmp
adc
pushf
inc
jne
pop
movs
sbb
cmps
js
dec
out
mov
lods
jnp
shr
jae
in
adc
and
stos
pop
and
loope
pop
xor
fcmovu
call
push
mov
xor
repz
adc
stos
jbe
xchg
not
test
or
xchg
push
cmp
jecxz
(bad)
fist
out
scas
inc
fwait
push
iret
dec
or
nop
clc
stos
jae
inc
jo
dec
fstp
sbb
mov
cmps
xchg
xor
clc
dec
xchg
rcr
mov
jb
jno
clc
daa
das
jo
sbb
push
dec
fimul
mov
and
into
mov
fldcw
jl
sub
mov
dec
mov
mov
repz
or
ret
jmp
hlt
dec
shl
popf
test
out
rol
ins
adc
dec
fdiv
cmp
push
retf
jbe
aaa
jo
inc
stos
sub
mov
pop
xchg
mov
retf
jle
clc
or
adc
and
imul
or
jae
(bad)
push
pop
sub
sbb
sbb
fadd
jmp
pop
mul
mov
push
or
inc
call
jb
test
add
mov
call
push
jecxz
fidivr
adc
cld
in
jb
inc
push
pusha
and
push
or
fwait
int3
mov
es
cwde
call
xchg
jmp
ins
pop
pop
in
sub
sbb
dec
dec
lods
push
xor
or
mov
jl
(bad)
xchg
and
dec
jne
mov
mov
pop
test
xchg
jl
mov
mov
xchg
mov
ja
mov
push
daa
call
sbb
scas
inc
rcl
sbb
push
fisttp
add
test
dec
out
rcl
cmp
sti
shr
mov
and
add
sub
mov
pusha
mov
call
pop
and
adc
call
addr16
push
fidiv
mov
sub
(bad)
cmps
adc
ins
lods
mov
sbb
test
cmps
std
les
add
cli
adc
sbb
lahf
and
inc
scas
sbb
aaa
pusha
out
les
push
ror
inc
pop
add
pop
add
and
xor
pop
jns
adc
xchg
mov
cmp
std
xchg
push
mov
data16
mov
clc
nop
sahf
arpl
jno
fcomi
mov
lea
push
xchg
mov
adc
lods
dec
fwait
mov
or
or
cld
aad
fisub
sub
pop
push
lahf
imul
stos
sub
loop
mov
ss
aas
jo
adc
pop
dec
sahf
pop
xor
adc
push
outs
(bad)
stos
push
mov
jb
mov
addr16
jno
cld
pop
sub
ret
xchg
jae
inc
xchg
xchg
jb
movs
mov
daa
sti
repnz
in
cdq
dec
push
xchg
mov
push
cs
rcl
sub
and
bound
je
dec
popf
mov
scas
jns
cld
or
cmp
push
or
ss
cmp
mov
movs
xor
(bad)
push
sti
mov
jecxz
add
push
enter
xchg
out
data16
inc
dec
cli
movs
mov
int3
mov
push
inc
test
cmc
sbb
fyl2xp1
sub
test
ds
pop
cwde
and
arpl
inc
aas
imul
ficomp
mov
sbb
add
data16
push
cmp
pop
cmp
js
into
mov
hlt
imul
pop
cld
lahf
fidiv
(bad)
out
out
add
stc
sti
cmc
jo
inc
fwait
std
test
mov
mov
into
sbb
jg
pop
sub
inc
shl
add
ss
jl
imul
mov
in
mov
fcomi
js
jno
int
sbb
adc
imul
sbb
and
loope
cmp
in
xchg
adc
dec
fld
iret
repz
inc
mov
sub
cli
mov
jecxz
or
mov
xacquire
fwait
mov
cmp
fst
jb
dec
lods
push
es
retf
inc
and
inc
jmp
jle
gs
pop
or
add
inc
pusha
(bad)
push
xor
sub
test
xor
jecxz
xchg
aaa
sar
dec
les
push
xchg
movs
sti
push
cwde
les
push
cli
in
jo
sbb
ret
mov
mov
sbb
lock
call
sbb
ds
dec
fwait
jne
ins
loopne
pop
push
nop
shl
test
add
pop
mov
jae
sub
and
pop
dec
stos
outs
xor
cmps
sbb
and
adc
jbe
movs
jae
mov
pop
sti
in
mov
pushf
in
sub
imul
pop
jp
mov
add
ficomp
or
inc
das
fucom
lods
inc
cli
inc
jae
dec
mov
inc
inc
mov
mov
mov
push
into
add
or
out
cmp
lods
pop
(bad)
pop
ficomp
mov
nop
or
popf
mov
(bad)
xlat
xchg
cmp
aad
repnz
pop
ja
pop
repz
inc
cdq
les
and
icebp
cmc
add
pop
test
pop
addr16
mov
adc
fcomip
mov
fiadd
xchg
mov
pop
fidiv
push
sub
cld
fist
cmp
jp
pop
dec
pop
add
xchg
mov
mov
repz
sbb
xor
xor
cmp
stos
jg
movs
sbb
mov
(bad)
push
add
mov
xchg
in
pop
cmp
mov
addr16
jecxz
icebp
in
aaa
in
(bad)
mov
mov
je
mov
arpl
loop
shl
ds
mov
ficom
sub
retf
cld
retfw
pusha
ins
fcom
sbb
dec
push
bound
clc
push
out
daa
mov
xor
mov
enter
pusha
sahf
pop
aaa
cmps
adc
fdivr
cmp
or
mul
inc
icebp
popa
jb
scas
outs
xchg
lahf
push
nop
mov
adc
(bad)
jmp
(bad)
sbb
not
or
loopne
lods
ror
xchg
mov
xor
push
shl
repz
cli
adc
push
and
sbb
inc
sti
adc
iret
aaa
es
mov
addr16
inc
cmp
add
aas
icebp
ins
fs
adc
xor
cli
or
int
and
jle
pop
jb
popf
push
mov
pop
mov
xchg
addr16
nop
inc
and
cli
xchg
xor
inc
xchg
cdq
rol
stos
push
pushf
xchg
hlt
add
loope
clc
retf
js
mov
cmp
push
rol
sbb
pop
mov
inc
sub
mov
stos
cmp
ins
cli
jecxz
(bad)
sbb
or
xor
mov
mov
mov
popf
mov
xor
or
mov
daa
mov
add
ins
jbe
xchg
push
aad
(bad)
pusha
sti
les
sbb
shr
movs
mov
je
ror
leave
hlt
cmp
mov
cmp
test
and
cmp
mov
fnstenv
ins
(bad)
stc
jp
sti
inc
adc
call
pop
pushf
sub
jg
jle
(bad)
jg
lods
cmp
cmp
mov
dec
and
mov
mov
call
mov
xchg
pop
pop
add
add
mov
out
(bad)
aaa
sub
data16
push
sub
addr16
inc
cwde
imul
(bad)
xchg
rcl
in
cmp
icebp
gs
pop
inc
iret
xor
or
loop
scas
pop
hlt
inc
jb
jge
mov
dec
call
std
lods
mov
mov
daa
fimul
mov
and
xchg
pusha
pop
cli
xlat
test
jecxz
or
jge
test
xchg
out
xchg
jmp
retf
fist
push
sbb
popa
xchg
jns
jg
fwait
les
sti
iret
aas
mov
xor
and
es
mov
pop
mov
aas
std
les
aam
jb
nop
pop
test
dec
xchg
jmp
(bad)
test
fcmovnu
or
mov
les
lods
fs
pop
lods
push
cs
in
and
sbb
cld
inc
cmp
mov
out
std
sbb
and
xor
jnp
push
lahf
xor
jb
ins
bound
sbb
add
pop
out
(bad)
cmps
and
jb
rcl
mov
and
cmps
mov
xchg
pop
mov
push
js
mov
(bad)
mov
sti
jle
mov
sub
jp
or
sub
(bad)
repz
ds
ins
lods
jno
je
inc
cs
xchg
ins
test
sub
inc
sti
sub
add
imul
inc
mov
movs
cmp
mov
xor
rol
fcomp
inc
ficom
xchg
cmp
shl
in
xchg
pop
add
sti
std
or
push
xchg
sbb
ror
(bad)
dec
push
cwde
fnstenv
repz
iret
dec
sbb
sbb
dec
scas
jne
dec
dec
push
adc
(bad)
jmp
jae
cmps
cmp
jo
mov
mov
mov
push
lods
mov
bound
cmp
in
mov
(bad)
push
cmps
push
out
jecxz
fwait
ret
mov
lock
out
xchg
bound
mov
and
cld
repnz
std
jecxz
pop
mov
aad
push
sub
sar
push
push
jno
inc
mov
test
push
fdiv
test
fisub
inc
xor
cmp
jge
adc
sbb
cmps
xor
mov
inc
(bad)
xchg
aas
enter
jne
ds
xor
mov
cmp
mov
test
out
or
arpl
ret
adc
mov
cwde
test
fimul
cs
repnz
jmp
sbb
bound
push
mov
mov
sbb
hlt
sbb
out
pop
push
inc
xor
or
sub
scas
push
xor
sahf
cmp
and
dec
xchg
test
pop
jno
dec
lock
pusha
stos
cld
mov
mov
cmc
sti
std
je
jnp
mov
pop
push
xchg
cdq
xchg
ds
shl
scas
cmp
call
ds
repz
push
jmp
jle
pushf
pop
cs
xchg
mov
lahf
cmp
(bad)
pop
in
nop
sbb
ds
sbb
and
scas
or
xchg
sbb
scas
stos
mov
inc
adc
in
aas
mov
ja
jle
inc
shl
loopne
xchg
in
popa
in
adc
jecxz
xchg
mov
repz
test
push
nop
mov
(bad)
mov
jecxz
inc
mov
push
or
cmp
arpl
inc
dec
movs
ret
adc
fdiv
add
xor
adc
sub
inc
jo
pop
xor
cs
and
(bad)
xchg
aas
(bad)
std
jno
pop
jle
movs
jle
mov
dec
add
neg
jmp
ret
pop
add
and
(bad)
out
in
popf
es
test
out
push
jmp
hlt
fist
and
xor
sbb
and
mov
in
or
(bad)
js
add
inc
inc
jb
mov
dec
jns
outs
xor
stc
adc
and
enter
(bad)
jno
dec
jo
test
xor
cld
add
retf
ror
pushf
ror
ja
mov
add
xchg
call
fwait
mov
jp
xor
xor
cld
xlat
pop
rcr
add
and
movs
call
out
adc
xor
adc
psubsb
shl
into
cmp
aaa
sub
xlat
sahf
aaa
mov
pop
dec
stos
jp
mov
outs
test
mov
ret
jmp
and
iret
ins
or
ja
xchg
mov
inc
loope
xchg
rol
ins
sbb
aad
jmp
clc
cmp
xlat
jmp
cmp
and
movs
call
fnsave
mov
dec
adc
cmp
push
mov
dec
pusha
mov
inc
cwde
mov
sub
sbb
loop
xchg
sti
add
movs
jbe
sahf
ret
les
xor
rcl
mov
inc
adc
repz
loop
xchg
hlt
and
scas
dec
shr
and
(bad)
sti
mov
or
cmp
inc
cwde
aaa
es
or
jmp
gs
pop
sbb
inc
mov
test
push
sbb
xchg
aas
push
xor
aam
add
je
stos
pop
icebp
cmps
loope
mov
xchg
imul
int
test
mov
ja
sahf
or
fcos
clc
ret
loopne
js
aam
xchg
inc
rcr
cs
out
sub
cmp
mov
jo
inc
pop
jo
call
jmp
jne
loop
push
pusha
jb
jmp
mov
mov
js
mov
pop
iret
rol
div
call
stos
stos
inc
retf
out
adc
out
jp
lahf
stos
leave
cmp
mov
sub
jmp
in
repz
xchg
push
push
ins
cmps
xchg
mov
push
cli
adc
icebp
jbe
je
les
jo
sbb
ins
bound
je
xchg
not
mov
mov
pop
and
inc
popf
loopne
push
mov
das
loopne
cmp
adc
loopne
scas
les
jb
xor
iret
(bad)
push
(bad)
jae
inc
mov
sub
mov
mov
ds
jl
jmp
xchg
data16
adc
dec
ja
xor
icebp
sub
scas
pop
sbb
mov
inc
ret
aas
mov
jb
jbe
jg
dec
jmp
loope
jecxz
xchg
pop
xchg
xchg
popa
and
shl
adc
imul
enter
mov
test
icebp
inc
dec
mov
dec
pop
sbb
vmovaps
stos
pop
imul
inc
aaa
jno
mov
or
(bad)
push
rcr
pop
adc
sbb
mov
test
stos
imul
jo
mov
dec
out
retf
scas
int
cli
pop
js
cmps
push
out
repz
mov
xchg
fs
push
xor
cld
lods
adc
adc
cmp
mov
stc
xchg
fsub
push
out
mov
ds
dec
jmp
or
sub
loopne
pop
dec
mov
push
fsub
repz
leave
popa
inc
push
xor
xor
dec
push
and
mov
inc
sahf
ins
cmp
cmp
xlat
mov
dec
and
rol
div
jbe
jae
xchg
repnz
mov
xchg
jne
repnz
mov
mov
xchg
mov
ss
(bad)
xchg
fucomp
dec
push
icebp
mov
pop
fst
cmp
fisubr
dec
scas
adc
mov
mov
jmp
mov
daa
ficom
ja
or
fstp
or
movs
cmp
lahf
mov
jno
(bad)
xchg
inc
scas
xlat
addr16
jbe
lds
mov
pop
sti
rol
cmc
ror
std
scas
int
movs
pop
mov
push
aaa
ffree
or
stos
rol
ss
(bad)
push
retf
sbb
jle
ins
jno
imul
(bad)
xor
into
push
loop
push
(bad)
aad
fs
ficom
sbb
add
jae
fistp
lods
xor
adc
and
fcmovu
loop
sar
loop
inc
(bad)
lock
and
icebp
mov
mov
push
ja
cwde
mov
daa
stc
repnz
fwait
jns
push
ror
cs
fucomi
push
fidiv
push
jge
mov
fs
adc
fidivr
stc
das
mov
jne
inc
aaa
clc
pop
or
adc
imul
and
mov
xor
arpl
fnsave
out
jno
scas
inc
sti
sahf
(bad)
dec
cwde
les
sub
aam
add
dec
sbb
nop
push
aaa
stc
fadd
lods
movs
inc
out
push
sub
pop
loop
xlat
push
int3
cmp
pop
test
dec
add
xchg
dec
cs
add
jl
daa
(bad)
adc
mov
scas
outs
sbb
movs
sbb
and
fcomp
les
inc
mov
idiv
mov
adc
(bad)
push
int
or
pop
mov
xchg
aas
cmp
out
in
repz
lods
mov
cmp
in
bnd
ss
dec
mov
imul
(bad)
dec
and
or
aas
leave
cmp
jle
sbb
fidivr
mov
daa
scas
aas
ja
mov
jl
jmp
jne
pop
jl
shr
loopne
loopne
cdq
into
dec
mov
mov
fsubr
or
movs
inc
data16
mov
push
aas
int3
dec
cdq
mov
push
sub
in
pop
arpl
mov
js
sub
icebp
and
dec
mov
pop
pusha
inc
xor
and
jae
sub
jl
cmps
jl
scas
cmp
test
test
in
lods
bnd
pusha
inc
push
nop
dec
and
sbb
xlat
fild
mov
sbb
movs
mov
jmp
mov
neg
xchg
aam
call
mov
inc
ficomp
jnp
mov
jge
pusha
cmp
mov
mov
and
jl
call
fidiv
or
cmp
fs
push
movs
cmp
xchg
mov
or
aam
xchg
xor
pop
sub
(bad)
dec
movs
les
and
loope
jnp
ins
mov
stos
into
cmp
test
(bad)
dec
pop
stos
lods
inc
jecxz
clc
ds
xor
call
addr16
mov
sbb
movs
dec
es
popf
mov
rcl
fsub
rcr
pop
dec
mov
pop
mov
stos
sub
addr16
mov
jb
mov
dec
(bad)
leave
test
mov
jp
addr16
push
xchg
inc
lock
xchg
ja
in
sub
mul
lahf
mov
popf
rol
retf
addr16
call
das
nop
(bad)
(bad)
ret
push
jg
sub
inc
dec
scas
lahf
sahf
xchg
xor
fistp
or
cmp
xor
inc
(bad)
imul
movs
mov
ins
cdq
mov
inc
mov
jns
inc
sbb
mov
out
(bad)
dec
xchg
std
in
icebp
sbb
test
out
jg
cmps
lods
div
mov
xchg
xor
leave
div
mov
lods
cmp
inc
std
fnop
push
in
push
sub
sub
dec
mov
retf
push
and
sbb
fisttp
mov
aaa
in
add
and
pop
sar
mov
jp
movs
adc
and
xchg
sbb
inc
cmp
ss
(bad)
in
jno
adc
movs
add
cmps
mov
jg
xchg
stos
cld
add
icebp
inc
inc
mov
adc
xor
sti
mov
int
pop
pop
cmp
mov
stos
mov
inc
icebp
aad
mov
add
sbb
mov
mov
out
pop
mov
mov
push
cwde
xchg
imul
xchg
inc
stos
jmp
jb
sub
xchg
in
fwait
dec
jecxz
jns
test
adc
mov
fs
test
and
fdiv
sar
ins
ins
fwait
scas
inc
les
or
out
cli
enter
pop
sbb
shr
jg
inc
cs
cmps
sahf
adc
cli
or
jmp
and
add
paddusb
or
pop
mov
test
(bad)
fist
ins
jbe
mov
and
xchg
jns
mov
mov
jl
loopne
mov
clc
leave
out
inc
jmp
sub
loop
iret
push
jecxz
push
xor
inc
mov
mov
lea
rcr
pop
and
add
pusha
add
ja
outs
pop
fldenv
(bad)
sbb
movs
mov
cmp
fstp
sbb
fimul
xchg
push
xchg
in
xchg
mov
test
pop
xor
seta
ret
icebp
dec
jns
mov
cmp
or
iret
frstor
jne
pop
fstp
jge
mov
jne
test
jmp
inc
xor
pop
cmp
addr16
mov
(bad)
imul
xor
cli
adc
es
jmp
sbb
jl
pop
cld
mov
xor
call
mov
outs
pop
in
mov
fcmove
xor
cmp
xchg
fld
pop
jmp
(bad)
inc
lock
nop/reserved
inc
sub
retf
or
iret
ja
sar
cld
fs
aaa
ret
and
nop
pop
mov
sahf
ins
cmp
cmp
mov
(bad)
leave
xchg
cmp
jne
stos
pop
aam
clc
jg
(bad)
xchg
dec
in
mov
sub
sti
xchg
adc
inc
xchg
cdq
ror
aas
cmp
(bad)
stos
gs
shl
sbb
fld
pop
sar
or
hlt
rcr
jbe
cmp
dec
xchg
outs
push
test
test
mov
jmp
dec
push
int
gs
push
xor
sub
pminsw
pop
cmp
xor
mov
mov
pop
mov
jb
dec
jne
mov
dec
pushf
fnsave
jmp
mov
pop
popf
test
movs
fcmovu
pop
sbb
aad
sub
push
stc
ds
cmp
sbb
push
xchg
popf
mov
mov
loope
push
cdq
repz
dec
add
or
adc
inc
fimul
inc
movs
cmp
xor
inc
fcmovu
fwait
xor
bound
lea
xchg
loope
jmp
jns
mov
lea
fmul
mov
push
pop
xchg
xchg
test
cmp
fdivr
aad
outs
mov
sub
pop
fistp
jne
pop
cdq
ins
arpl
sbb
icebp
ret
mov
gs
mov
cdq
sti
add
xor
xor
adc
add
sti
fs
ins
inc
sar
bound
and
test
popa
les
dec
lea
mov
dec
mov
xchg
jne
cmc
clc
nop
xor
data16
push
xcrypt-cbc
cmps
xchg
sbb
lods
lods
inc
lds
cmps
ss
repnz
inc
push
or
mov
cs
call
out
cli
or
and
dec
cmp
sbb
jp
ret
cmps
dec
arpl
and
shr
aam
pop
scas
jo
mov
test
jg
hlt
mov
cmp
nop
adc
cld
retf
adc
dec
adc
ret
sub
jnp
das
pop
ds
xor
sub
imul
mov
scas
push
sub
ins
stc
cli
aas
(bad)
jp
add
(bad)
cmp
es
add
dec
xor
ss
sub
aam
xor
inc
jl
dec
fnstenv
xchg
ins
cld
xchg
icebp
clc
movs
adc
push
or
mov
fimul
xor
fadd
ss
fist
and
or
pop
je
mov
jge
test
add
clc
sbb
popa
sbb
cmp
sbb
outs
mov
dec
addr16
test
(bad)
inc
rcr
jge
and
dec
xchg
ret
loope
jnp
(bad)
add
imul
stos
pop
ja
mov
pop
daa
stc
lock
lock
jmp
inc
fisubr
into
adc
cmp
xor
cmp
and
mov
mov
cli
ret
hlt
jge
pop
adc
or
sbb
fisttp
sub
add
pop
test
sub
cld
jp
push
push
pop
stos
pop
ficomp
xchg
push
rcl
hlt
and
js
cmps
mov
push
mov
xchg
xor
icebp
repnz
scas
dec
neg
sbb
dec
(bad)
clc
shl
cmp
push
data16
pop
test
push
mov
mov
jmp
js
call
push
jo
adc
sub
cmps
push
cmp
or
popf
mov
xor
daa
dec
jmp
loop
inc
push
or
iret
cwde
fs
jbe
lock
movs
ret
jg
call
rol
mov
aaa
sbb
repz
icebp
xor
or
and
cwde
call
cli
ds
sbb
pop
dec
(bad)
xor
ds
xor
push
test
xor
dec
xchg
aam
stc
push
aam
loopne
xchg
std
cmps
imul
pop
and
shl
fcmovnbe
sbb
add
mov
cmp
out
pop
into
cmp
sbb
retf
iret
push
out
pop
sbb
adc
ds
mov
mov
shl
cdq
cmp
sbb
scas
or
jno
inc
sbb
sbb
push
inc
(bad)
lahf
aaa
mov
jb
scas
outs
xchg
xchg
push
aad
jg
mov
xchg
adc
ins
mov
ins
xchg
psrlw
adc
inc
addr16
scas
dec
(bad)
pop
int3
xor
int
rcr
jle
mov
dec
sub
mov
retf
push
(bad)
jns
cld
gs
pusha
xor
cmp
sbb
outs
dec
mov
push
sahf
mov
ss
jge
mov
add
add
xor
(bad)
loopne
xchg
les
xor
add
sahf
outs
push
xchg
cwde
xor
jmp
pop
inc
mov
or
dec
jmp
or
movs
sbb
popf
dec
or
(bad)
lods
pushf
sbb
sbb
cli
add
sbb
aas
xor
pop
mov
shr
xchg
pusha
mov
dec
and
mov
adc
push
cmp
xor
xor
push
loop
pop
or
sti
mov
(bad)
mov
je
mov
test
popf
pop
jecxz
call
shl
ja
xor
dec
test
popa
sahf
inc
ds
xchg
mov
sbb
fcomp
xchg
mul
popa
add
and
sbb
stos
outs
add
and
loope
inc
and
fist
(bad)
inc
pop
cmp
ss
mov
mov
mov
pop
or
ror
les
mov
xchg
xor
fadd
mov
jmp
cld
icebp
pop
ret
cmp
les
push
mov
mov
stos
inc
out
cli
das
mov
cmp
xor
or
rcl
mov
pop
xchg
mov
ins
in
enter
clc
pop
jmp
test
jb
repnz
mov
cmc
sbb
outs
mov
scas
ficom
fdivr
loopne
test
xchg
rol
mov
ds
dec
in
(bad)
inc
cld
xor
sbb
pushf
aaa
sub
mov
pushf
xor
fldcw
shr
call
pop
sbb
daa
mov
mov
pop
mov
test
int
xchg
xor
sti
jle
jge
push
test
test
xchg
data16
bound
imul
stos
outs
inc
xchg
fimul
xchg
retf
mov
mov
sub
nop
hlt
ret
inc
call
fcomp
sbb
xchg
push
cs
lahf
fwait
mov
out
out
or
inc
popa
push
cmp
and
jne
adc
inc
pusha
scas
jl
cmps
sub
mov
dec
jmp
xchg
adc
inc
push
test
into
clc
xchg
rol
add
jecxz
and
ror
outs
ja
xchg
xchg
aas
cld
test
mov
jecxz
iret
or
fistp
xor
pop
cmps
addr16
test
and
pushf
dec
sub
push
jmp
inc
fisttp
adc
add
mov
mov
mov
loopne
mov
jmp
outs
and
jl
mov
and
stos
in
repz
xchg
add
ins
xchg
ja
mov
cmc
lock
lahf
scas
jns
pop
fist
in
pop
cld
cmp
or
cs
test
cli
(bad)
jl
retf
jns
push
xor
inc
add
or
das
lahf
pop
fistp
mov
push
call
jmp
jmp
pop
jecxz
(bad)
dec
xchg
in
cmps
popa
fcom
test
jl
xchg
pop
popf
rol
in
repz
imul
fdiv
sub
dec
cli
arpl
arpl
sub
lahf
imul
cmp
clc
aas
mov
inc
jg
and
add
pop
fsubr
mov
popf
mov
inc
ret
fmul
leave
js
push
mov
and
xchg
fs
cli
xchg
add
ins
add
xchg
push
aaa
cli
ret
idiv
pop
mov
fisubr
pop
sub
retf
pop
outs
test
imul
mov
loope
sbb
aaa
retf
pop
sbb
pop
xchg
es
and
bound
jne
cmps
or
sahf
xchg
(bad)
or
pop
xor
fist
rcl
mov
mov
out
mov
xchg
add
ret
push
xchg
mov
pushf
out
mov
inc
pop
mov
cmp
dec
mov
inc
push
out
cld
fistp
ss
push
scas
adc
mov
mov
mov
call
sbb
or
sbb
ins
inc
sahf
outs
xor
sbb
adc
not
xchg
cmp
cmp
push
iret
loopne
xchg
jecxz
je
xchg
add
call
pop
test
push
xchg
fmul
mov
add
cmp
and
dec
mov
jne
jne
xchg
test
cwde
clc
or
cmp
and
pop
add
aas
scas
imul
xor
loope
pop
or
std
xchg
mov
jg
stos
outs
repz
xlat
push
loopne
cmps
push
xchg
or
(bad)
mov
add
pop
sub
outs
outs
mov
jae
pop
jmp
retf
rol
cmp
and
scas
adc
imul
sahf
cmp
test
test
jnp
lock
gs
in
adc
nop
or
mov
ja
test
jl
icebp
xor
addr16
lds
nop
cmp
les
adc
repz
lods
pop
jno
mov
out
(bad)
jmp
ins
fwait
lods
inc
(bad)
dec
(bad)
dec
or
int3
in
repnz
in
jo
dec
fidivr
dec
inc
lahf
imul
mov
in
and
hlt
js
data16
xor
popa
sub
xchg
pop
mov
mov
add
add
mov
pushf
adc
jecxz
mov
xlat
mov
push
hlt
cli
xchg
or
ins
mov
test
test
sub
cld
sbb
fwait
inc
jmp
idiv
pop
or
jmp
push
cli
xor
pop
test
inc
pop
outs
mov
clc
je
fstp
adc
outs
jns
int
or
adc
jp
mov
cmps
cmp
test
adc
and
fistp
xchg
inc
stos
jle
sahf
mov
call
sub
movs
(bad)
stos
repz
mov
cld
xor
fwait
scas
push
jmp
neg
jb
cmp
jge
cmp
cli
push
movs
mov
(bad)
add
and
pop
ja
or
stos
and
sbb
jl
mov
cld
stos
adc
int
icebp
ins
add
mov
call
repz
pushf
xchg
jno
rcr
std
and
sar
sbb
fiadd
or
mov
sub
into
leave
callw
adc
jb
or
fldcw
jmp
sbb
add
xor
pop
fisub
mov
test
ret
cmp
sbb
jne
into
imul
aad
push
xchg
in
pop
clc
(bad)
mov
out
add
mov
xor
add
add
lock
xchg
mov
cmp
jg
test
dec
cs
mov
mov
enter
leave
add
push
xor
adc
jb
adc
add
mov
scas
xchg
mov
popf
iret
xchg
add
js
test
mov
in
cld
xchg
popa
ss
(bad)
mov
jl
mov
pop
jb
test
sbb
stc
aam
retf
ins
lods
test
adc
push
cli
in
bnd
inc
jb
dec
fsubr
pop
xchg
jb
push
mov
xchg
mov
or
mov
inc
inc
imul
jae
mov
fist
(bad)
xchg
sbb
stos
movs
cli
or
and
out
mov
sahf
div
popa
jno
lea
nop
mov
fnsave
pop
jmp
xchg
(bad)
sbb
not
stc
test
lods
fild
ds
clc
jmp
sbb
push
clc
jns
je
les
js
fidiv
xchg
jmp
lds
sbb
sbb
stos
jg
lea
sbb
into
loope
push
das
popa
call
xchg
aaa
ror
push
test
hlt
sahf
mov
cmps
jne
mov
cmps
push
out
in
loope
call
xchg
mov
aad
dec
icebp
add
fisubr
or
clc
fisttp
sbb
inc
fwait
or
sub
mov
test
jmp
pop
dec
cmps
pop
jae
or
push
iret
push
lock
mov
jb
mov
jae
lods
xchg
aaa
mov
pop
and
push
mov
in
or
aam
jnp
ins
sbb
jo
mov
xlat
cmp
pop
jle
lahf
inc
jecxz
clc
or
jecxz
mov
cmp
cmp
pop
push
lea
and
fnsave
(bad)
cli
sbb
pop
sbb
adc
sahf
push
xchg
aas
xlat
push
mov
test
pop
push
push
fdiv
jne
adc
(bad)
add
in
xchg
data16
std
shr
add
jnp
mov
fs
mov
mov
in
cdq
dec
jg
(bad)
dec
jecxz
jmp
sub
(bad)
(bad)
inc
fdiv
aaa
sbb
sahf
jns
pusha
mov
xlat
inc
in
or
std
jne
sbb
mov
ins
js
push
cdq
and
jb
ins
lods
dec
cmps
cmp
aas
and
test
jb
pop
jb
mov
dec
cmp
pop
(bad)
mov
xchg
xchg
mov
sub
adc
lods
fnstsw
fwait
lods
push
(bad)
jb
add
loop
ret
rcl
push
dec
cdq
sbb
inc
adc
cmc
xchg
call
dec
call
pop
aaa
jo
sbb
push
movs
cmp
sbb
jno
(bad)
mov
sar
dec
aam
jbe
stos
jp
mov
push
enter
xchg
jns
test
icebp
das
fwait
push
mov
push
cmp
cli
les
cmc
ret
jae
das
in
add
stc
xor
pushaw
jnp
inc
sub
mov
xchg
dec
pop
fnstenv
push
mov
inc
push
push
add
daa
and
push
into
xor
mov
call
clc
jno
push
not
pushf
push
loope
jl
clc
cmc
mov
repnz
mov
sbb
sahf
xchg
adc
loop
fiadd
dec
jecxz
stos
sub
(bad)
call
xchg
push
cs
pop
outs
call
xor
aas
(bad)
orps
aad
aas
je
or
daa
iret
and
inc
sbb
pop
nop
xchg
test
test
mov
jb
pop
jno
mov
dec
cmps
in
mov
mov
in
out
xor
ins
or
lea
push
icebp
div
retf
jns
cmps
dec
lock
cmp
push
lock
sub
scas
jne
jl
imul
xchg
mov
mov
(bad)
and
out
xor
jnp
xor
jns
mov
push
popf
cdq
inc
das
sub
fsubr
lock
pop
fisubr
xchg
lock
cmps
in
loopne
nop
nop
popa
es
xchg
sbb
ins
xchg
mov
sbb
aas
aam
lock
dec
sti
push
mov
sub
jo
ds
push
and
inc
es
mov
sub
das
movs
in
add
mov
mov
mov
test
xor
sub
ror
icebp
mov
xor
inc
jmp
mov
loop
dec
into
xchg
jbe
mov
mov
test
outs
jnp
fiadd
mov
lods
mov
es
hlt
(bad)
inc
in
aas
pop
sbb
mov
push
inc
jl
mov
xchg
sar
ficomp
push
and
pop
sub
mov
imul
xor
and
(bad)
fist
bnd
push
mov
pop
test
add
iret
xlat
mov
xchg
mov
dec
fisub
add
ds
mov
test
in
cwde
dec
out
fidivr
sub
(bad)
push
retf
ja
test
dec
pop
mov
fst
shl
cmp
jnp
clc
pop
jo
sub
inc
add
add
cmp
jle
data16
push
ds
jne
mov
push
mov
(bad)
xor
(bad)
(bad)
and
xchg
jns
cli
in
sbb
pop
lock
movs
ret
aas
stos
bound
xchg
icebp
add
repz
sahf
cwde
inc
les
pop
ds
fcom
cmp
pop
jle
mov
fwait
call
retf
aas
shl
push
adc
xor
fiadd
test
xchg
mov
and
out
fiadd
aad
jbe
mov
jge
sar
sbb
xchg
jns
repz
lods
sub
sbb
test
jl
mov
les
mov
add
repz
call
inc
js
inc
and
call
cli
sbb
xor
xor
addr16
icebp
sub
xor
adc
cwde
cdq
mov
in
test
and
shl
jne
bound
dec
pushf
xlat
mov
hlt
cmps
inc
or
mov
and
leave
or
mov
adc
ficomp
dec
jecxz
fidivr
and
int
fisub
pop
mov
push
or
mov
mov
cli
out
jns
cli
bound
xor
inc
adc
adc
jle
fimul
call
out
xchg
adc
jge
dec
xchg
adc
mov
mov
aad
test
aas
pop
rol
xchg
xchg
pop
call
mov
jbe
sbb
push
mov
inc
in
ds
lahf
test
inc
call
sbb
push
xor
xor
xchg
daa
mov
(bad)
ins
cmp
cmp
mov
cmp
mov
pop
repnz
jbe
test
and
(bad)
call
and
(bad)
push
imul
cld
scas
enter
bound
sti
inc
jmp
and
jecxz
repz
ss
push
pop
mov
dec
pop
dec
jmp
inc
loope
add
add
or
cmc
and
and
pop
push
mov
mov
dec
lods
xchg
stos
xor
and
fstp
call
sbb
jecxz
lock
xchg
iret
mov
pushf
loop
sub
sti
hlt
sbb
bound
push
test
fild
fwait
scas
inc
(bad)
dec
leave
or
cld
retf
push
stc
cmp
or
mov
mov
stos
dec
sub
add
shl
cmp
cmp
jl
or
arpl
inc
jmp
lahf
jno
push
jns
(bad)
xchg
aas
enter
sbb
loopne
lock
(bad)
xchg
push
div
cmps
jo
push
dec
mov
jmp
dec
fcomi
mov
hlt
dec
push
sahf
sub
xor
(bad)
fsub
sbb
outs
rcr
pop
cli
or
test
imul
push
inc
pop
push
ret
dec
sbb
sbb
fsubr
mov
jnp
mov
sbb
or
leave
fstp
addr16
scas
push
popf
lods
fidivr
enter
mov
add
(bad)
stos
das
hlt
inc
xchg
mov
jb
cmps
stos
jl
loope
clc
fcmovu
inc
pop
mov
push
sub
in
pop
lds
or
cmp
inc
adc
push
fistp
inc
sub
jl
ss
(bad)
push
xor
pop
jae
ins
cmp
xchg
stc
xchg
sub
clc
data16
inc
jno
mov
jno
in
test
mov
cmc
or
mov
jnp
xchg
test
sbb
push
(bad)
push
sub
cs
fdivr
nop
inc
jne
cmp
inc
and
fldcw
ins
out
ret
or
inc
fisubr
sbb
xchg
daa
mov
test
xor
cmp
test
cmp
into
mov
repnz
push
dec
test
(bad)
mov
mov
mov
loopne
xchg
in
mov
mov
xchg
and
jle
test
dec
jmp
xlat
sti
stos
pop
lds
push
movs
imul
gs
xchg
mov
mov
test
jg
jmp
fcom
and
sub
adc
jp
lods
push
and
mov
(bad)
cmp
data16
inc
loop
or
xchg
(bad)
xlat
sbb
bound
mov
jb
mov
pushf
test
icebp
inc
jg
lods
push
retf
cvtps2pi
clc
sti
in
push
cmp
or
dec
mov
or
push
iret
dec
test
sbb
adc
xor
ja
or
imul
pop
daa
or
int
mov
sbb
push
fisubr
fstp
fistp
xchg
mov
push
dec
clc
jmp
sub
ins
mov
pop
jge
mov
jecxz
rcl
imul
sub
js
xor
pop
ret
in
iret
jle
and
jg
push
cs
mov
nop
cmp
call
mov
inc
pop
push
aas
sti
sbb
sub
test
aaa
mov
inc
mov
and
rcl
pop
jle
ficom
mov
and
mov
neg
les
test
test
cmc
adc
into
jmp
mov
aam
not
dec
inc
push
xchg
int
push
popf
xor
dec
stos
ss
cli
cs
pop
scas
(bad)
mov
(bad)
call
push
inc
pop
jmp
xor
and
mov
mov
push
popf
xchg
xchg
aas
add
stc
xor
sbb
mov
fs
int3
mov
cmps
push
cmp
sti
nop
sbb
imul
mov
xchg
ds
(bad)
test
mov
lods
dec
and
call
hlt
jbe
adc
cs
mov
sub
push
jmp
arpl
out
add
and
adc
add
pusha
pusha
cmp
or
call
jmp
cdq
aas
or
lea
cld
dec
xchg
int3
xchg
jb
and
inc
fucomip
sub
test
daa
icebp
test
dec
std
dec
pop
or
(bad)
jmp
sbb
cmp
pop
inc
push
mov
mov
cs
push
xchg
jmp
ins
pop
sub
cmp
pop
and
jecxz
mov
sahf
jg
aad
push
cdq
test
aaa
and
pop
in
iret
adc
hlt
jne
addr16
mov
xchg
lock
xchg
xlat
mov
xchg
adc
aad
mov
xchg
sbb
fimul
jmp
aam
outs
mov
jae
push
xor
cmp
mov
inc
mov
jb
pop
test
mov
test
jns
in
xor
pusha
loop
shl
pop
push
rcr
mov
jne
(bad)
movs
sbb
adc
cmp
addr16
scas
jle
nop
out
cdq
les
and
(bad)
nop
and
pop
repnz
gs
mov
add
mov
nop
mov
push
cmp
fdivr
mov
push
aas
mov
ins
push
not
lahf
cmps
mov
jl
call
jo
xor
sub
jo
adc
imul
xor
adc
mov
dec
jmp
neg
mov
dec
mov
xchg
fs
ja
cmc
rol
mov
fsubr
mov
xchg
ror
(bad)
dec
jne
mov
pop
stos
ss
inc
imul
stos
imul
inc
and
mov
retf
dec
jmp
jle
fbstp
push
push
push
push
mov
imul
add
(bad)
cmp
xlat
xchg
cmp
jne
scas
jle
mov
xchg
adc
xor
(bad)
jecxz
repnz
mov
gs
mov
push
inc
fcomip
scas
jmp
dec
ins
lahf
mov
cmp
dec
fdivr
ret
cmp
or
sub
mov
sar
call
adc
imul
pop
fstp
dec
mov
ins
xchg
mov
dec
jmp
shr
movs
rep
lock
mov
test
xchg
fs
ror
mov
mov
lea
cmp
in
(bad)
cmp
inc
lds
stos
ds
leave
push
call
scas
sbb
inc
mov
pop
xchg
mov
xchg
xor
fistp
in
das
enter
jns
retf
data16
mov
dec
imul
outs
adc
jb
neg
repnz
jb
mov
dec
xchg
out
jl
cdq
dec
add
fldcw
movs
sar
ja
mov
sbb
repz
mov
inc
jecxz
fidiv
aam
cld
inc
jg
outs
ficom
js
cli
dec
add
mov
hlt
push
test
or
jno
(bad)
xor
inc
push
arpl
jb
push
cmp
test
in
(bad)
mov
sbb
lea
mov
dec
xchg
les
add
rol
std
fwait
int
mov
mov
adc
call
dec
xchg
pop
iret
xor
rcl
push
fs
mov
push
pop
mov
pop
pusha
xchg
mov
mov
mov
dec
or
pop
mov
scas
pop
cmp
(bad)
adc
inc
out
fstp
aad
addr16
pop
div
mov
push
icebp
fucomip
sub
pop
mov
ins
pop
mov
cld
ds
outs
add
enter
push
or
(bad)
jecxz
lds
or
sbb
es
lahf
retf
mov
sbb
cli
or
and
inc
das
jo
pusha
(bad)
daa
retf
arpl
dec
xor
sub
movs
mov
fsubr
sbb
inc
jbe
mov
jnp
shl
lds
xchg
add
jnp
fwait
stos
out
cmp
mov
push
stos
xlat
outs
imul
sar
or
cld
fcom
and
cmp
or
sbb
mov
mov
fsubr
aas
mov
inc
fld
cmp
lods
ds
mov
outs
call
xor
ficom
idiv
lea
sahf
adc
mov
repnz
mov
and
mov
xchg
retf
jg
mov
jecxz
std
aaa
cmp
inc
iret
add
es
(bad)
jle
push
or
mov
mov
sub
outs
jmp
inc
pop
and
dec
push
and
mov
mov
fs
sub
shl
and
je
push
fiadd
cwde
(bad)
dec
xchg
jecxz
dec
jmp
push
lods
les
fimul
loopne
cmps
cmp
in
fidivr
imul
daa
aaa
test
pop
ins
push
mov
add
mov
push
or
jns
cli
sbb
cmp
and
push
and
mov
adc
popf
cmp
mov
arpl
or
jecxz
xchg
inc
mov
jo
ins
dec
sub
jne
sar
mov
cdq
adc
out
xchg
jecxz
xchg
outs
addr16
mov
xlat
test
test
mov
xchg
dec
(bad)
xor
lods
inc
loopne
jo
dec
and
sub
cwde
retf
xchg
test
xchg
clc
or
mov
jge
jmp
imul
pop
mov
call
xor
mov
jl
in
test
(bad)
std
pop
loop
jno
lea
mov
dec
sahf
(bad)
xchg
inc
nop
xchg
js
repnz
sti
mov
das
scas
pop
jb
popf
mov
xchg
lods
mov
mov
dec
ds
(bad)
loop
fcomp
push
jg
sub
test
cs
les
pusha
cld
shl
loope
jo
es
xor
add
nop
pop
add
cdq
movs
add
lahf
xor
imul
pop
cld
mov
test
ffree
mov
fisubr
stos
int
ret
mov
mov
daa
(bad)
repnz
fimul
sahf
mov
ds
data16
js
addr16
sbb
ds
xchg
call
mov
mov
sbb
inc
cmp
or
mov
inc
dec
sahf
js
nop
cmp
mov
jae
stc
mov
repnz
cmps
cmc
pusha
xchg
aam
je
mov
sub
ror
scas
mov
add
add
test
mov
cmps
push
cmp
loop
fst
xor
xor
sub
ror
push
or
push
(bad)
add
ror
add
adc
imul
cmp
push
jb
mov
jmp
cld
inc
pop
popa
test
cmps
dec
in
dec
not
test
jmp
or
popf
add
fdiv
pop
inc
mov
stc
or
repz
icebp
add
sbb
xor
sub
fwait
ror
cmp
jmp
(bad)
addr16
in
pop
sbb
inc
retf
pop
rcl
cmps
cmp
lods
sub
and
(bad)
inc
scas
xchg
pop
std
pop
pop
and
ins
xchg
test
mov
push
pop
xchg
shr
scas
cmps
mov
in
shl
rol
dec
(bad)
stos
jns
push
scas
cmp
cmp
jae
arpl
push
and
(bad)
mov
sbb
push
(bad)
cmp
cmc
arpl
sti
aaa
ss
jbe
mov
nop
adc
inc
cmps
push
es
sub
mov
push
push
cmp
rol
movs
jno
mov
imul
mov
mov
sbb
mov
repnz
mov
push
pop
leave
xor
cs
cld
repnz
call
scas
sbb
push
mov
movs
mov
jmp
jbe
je
mov
add
imul
ds
push
push
lahf
shl
jne
add
stc
in
sar
jo
pop
and
fcomp
fsubr
std
xrelease
aam
mov
xchg
js
xchg
jmp
scas
dec
lock
into
das
push
inc
nop
sti
mov
sub
lods
pop
arpl
jno
pop
icebp
xchg
iret
stos
pop
sub
ins
in
and
leave
add
and
dec
jae
es
sub
mov
lea
adc
dec
fcomp
mov
shl
popa
lock
jge
pop
xor
push
lds
mov
in
test
imul
stos
cmp
iret
xchg
cwde
mov
test
or
jo
inc
test
ins
push
popf
push
enter
cmc
outs
repnz
fisttp
ror
add
ins
cmc
pop
push
(bad)
adc
and
mov
add
daa
xchg
mov
jbe
pop
stos
dec
xor
in
addr16
(bad)
cmps
mov
sub
mov
adc
into
(bad)
lock
imul
xor
fadd
lods
push
jno
aaa
adc
mov
mov
mov
out
aam
test
cmp
and
mov
mov
fild
sahf
jnp
movs
xor
xchg
mov
(bad)
sti
daa
mov
inc
push
mov
pop
xchg
rcr
add
lds
movs
lods
jmp
xchg
mov
adc
(bad)
call
jb
push
jmp
(bad)
push
loop
inc
pop
pop
cmps
sub
popf
push
mov
cwde
rcr
mov
jnp
jge
shl
jl
cmp
ins
ins
mov
jle
test
and
and
fistp
div
sub
shl
pop
out
xchg
add
imul
push
add
xchg
add
ror
ins
xchg
call
dec
enter
cli
and
push
dec
mov
push
cmp
xchg
lods
xchg
xor
jmp
movs
ret
inc
pusha
je
into
adc
mov
repnz
fs
dec
ds
pop
jnp
(bad)
(bad)
iret
jecxz
xchg
sti
pop
in
push
jl
sub
sahf
out
mov
stos
jno
(bad)
rcl
mov
paddsw
fcom
lods
lods
inc
leave
push
ds
sti
call
jl
(bad)
js
and
mov
out
cli
sbb
xor
cmp
fwait
das
mov
pop
mov
mov
xor
cmps
mov
jmp
sbb
mov
cdq
mov
sbb
xor
(bad)
idiv
movs
mov
ret
loopne
adc
(bad)
loop
mov
cmp
fwait
lods
inc
retf
dec
daa
dec
iret
repz
push
dec
pushf
sbb
mov
sub
mov
out
jmp
adc
sti
pop
sub
xor
sub
or
pop
push
(bad)
adc
or
lods
sbb
and
lods
popf
add
pop
dec
and
pop
ret
inc
xchg
les
es
hlt
and
dec
xchg
cmps
cmps
mov
lahf
dec
jb
mov
repnz
lods
repz
fwait
(bad)
dec
loope
in
cmp
xor
stc
cld
jbe
sbb
push
jge
sbb
daa
jne
xchg
rcr
stc
jp
ret
dec
jl
aaa
enter
add
pop
fbld
mov
pop
test
cmp
(bad)
pushf
ins
jge
(bad)
sub
mov
dec
call
add
mov
mov
pop
jb
xchg
scas
sbb
fdivr
dec
jl
mov
retf
sbb
cmp
sti
fstp
aaa
or
cdq
cs
mov
retf
sbb
(bad)
jg
(bad)
je
sbb
pop
sub
sub
sub
push
jno
push
xor
lods
xchg
cmp
xchg
ds
fsubr
jl
pop
mov
inc
call
push
div
mov
call
test
push
xchg
mov
fdiv
lods
scas
ins
jecxz
mov
or
icebp
enter
jo
pop
lahf
sbb
push
mov
dec
in
shr
div
repz
inc
add
and
dec
adc
and
pop
dec
xchg
outs
inc
ror
scas
mov
dec
jecxz
xchg
adc
jae
lea
xchg
stc
pop
sahf
rol
push
std
rcl
neg
ret
sar
call
adc
es
mov
dec
bnd
push
or
call
inc
push
push
jno
or
inc
mov
sub
mov
out
pop
mov
inc
jmp
sbb
sub
dec
fldcw
retf
nop
mov
or
cs
in
scas
xchg
or
test
popf
pop
repz
sbb
xchg
popa
and
jmp
mov
sbb
test
inc
sbb
std
mov
pop
sahf
mov
xor
sbb
(bad)
test
pushf
inc
or
cmp
jbe
jo
cwde
test
xor
rcr
add
pop
adc
pusha
mov
nop
jne
adc
dec
pop
or
cmps
into
in
adc
mov
cmp
test
icebp
mov
dec
xchg
aad
inc
(bad)
mov
mov
sahf
cwde
ret
cmp
ds
cmp
in
hlt
pop
outs
mov
sub
add
into
ds
pop
mov
jns
pop
out
mov
mov
int3
inc
test
je
imul
adc
ja
sbb
pop
ss
dec
jo
mov
cmp
dec
cmp
lods
add
pusha
jbe
dec
jecxz
mov
retf
in
xchg
add
out
mov
jecxz
mov
mov
lea
fcomi
test
lods
mov
aaa
cmp
pop
fadd
pcmpeqb
aaa
pop
jle
xchg
ror
into
cli
sub
hlt
cmovb
aam
cmovne
stos
and
lea
or
popf
mov
pop
xchg
lods
mov
mov
inc
push
mov
jge
stos
stos
inc
mov
cmc
xor
sbb
mov
test
xor
hlt
cmps
mov
jge
xchg
mov
push
cmp
call
push
jle
scas
aaa
adc
adc
xlat
pop
call
pop
sbb
and
jo
adc
jmp
xor
adc
or
inc
sti
sti
mov
test
push
mov
push
in
mov
or
push
scas
scas
stos
pop
xchg
push
add
paddq
push
lods
xor
pop
(bad)
cmp
(bad)
jecxz
enter
popa
(bad)
imul
pop
or
test
jge
lea
fwait
sti
push
pusha
pop
cmp
sub
popa
jb
cmc
or
jb
jae
lods
cmp
cdq
(bad)
cmp
add
fld
fcomp
push
push
lods
pop
neg
mov
rcr
jp
inc
call
je
mov
pushf
out
mov
cwde
inc
out
and
cmp
dec
cdq
xor
(bad)
jo
sub
mov
stc
jle
imul
mov
bound
iret
aas
ss
adc
bound
push
xor
add
add
idiv
pushf
ins
jl
test
(bad)
mov
xchg
adc
std
(bad)
xchg
add
sbb
lods
add
cdq
mov
das
iret
repnz
repz
ins
mov
dec
in
fidivr
sbb
or
sbb
fs
inc
pop
pop
xchg
mov
push
pop
iret
dec
adc
add
aas
cmp
pusha
mov
jb
lods
jae
movs
sub
mov
jge
aad
aas
test
jge
(bad)
test
mov
std
das
cmc
pusha
in
scas
(bad)
sub
ins
jg
xchg
mov
and
loop
(bad)
dec
ins
stos
fadd
ss
sub
push
test
push
sub
push
dec
jle
pop
or
mov
lods
stos
adc
popa
int3
cli
or
ss
pop
test
ins
adc
data16
xchg
adc
add
adc
jge
mov
cmp
mov
out
in
nop
ja
clc
mov
scas
scas
scas
stos
sub
mov
xor
cwde
push
out
iret
cmp
jbe
or
cmp
ds
xchg
xchg
call
ror
movs
cli
jbe
je
mov
adc
sbb
jns
into
cmp
mov
jmp
xchg
inc
lods
mul
inc
push
push
mov
pop
mov
mov
test
xchg
ja
mov
add
mov
xchg
xchg
push
lea
pop
das
fdivr
fist
xor
jg
mov
bound
push
cmp
jmp
mov
and
dec
cmp
adc
push
mov
sbb
aaa
pop
dec
shl
sbb
jg
mov
cmc
mov
and
loop
jbe
xor
fmul
add
stos
pusha
setge
rcl
mov
das
pop
xor
in
fdiv
es
or
push
mov
mov
inc
mov
iret
mov
clc
add
pop
cmp
add
pop
repz
pusha
mov
mov
dec
(bad)
xlat
mov
aas
and
fstp
(bad)
gs
stos
pop
cmc
shl
jmp
add
cli
hlt
cmp
ret
dec
arpl
loopne
repz
ficomp
mov
int
inc
dec
out
lock
pop
call
shr
das
lahf
imul
xchg
cmp
cld
add
inc
mov
xor
sbb
sbb
xchg
outs
inc
aam
jns
movs
cli
or
and
(bad)
adc
cmp
push
jmp
add
dec
cmps
lea
arpl
popf
mov
clc
(bad)
fs
jmp
cld
xor
dec
mov
bnd
and
sbb
mov
dec
or
mov
mov
fistp
cli
or
inc
into
sbb
sub
jbe
jae
mov
gs
mov
and
inc
ret
cmp
sti
jp
pop
jg
popf
pop
retf
sahf
cmp
nop
mov
xchg
add
ja
adc
das
test
pop
xchg
call
out
add
call
repz
sub
adc
pop
mov
inc
cs
mov
mov
out
cmp
int
fs
sbb
and
and
push
pusha
lods
inc
test
push
nop
mov
cmp
int
cmp
je
xchg
cwde
loopne
xchg
mov
push
xor
in
add
dec
in
test
push
pop
test
retf
test
sti
inc
ins
pushf
mov
ds
fisub
push
stos
cmp
das
movs
inc
pop
outs
movs
mov
mov
sar
test
es
add
aas
mov
mov
inc
popf
cmp
ud2
ins
neg
jecxz
mov
jb
imul
jno
sahf
(bad)
dec
call
daa
mov
mov
jecxz
cmps
lahf
xchg
scas
dec
call
inc
in
(bad)
test
in
(bad)
pusha
rcl
pop
sbb
out
jae
xor
fstp
push
lahf
data16
mov
pop
in
aas
stos
lock
ja
out
and
pusha
add
jb
sbb
jne
mov
push
mov
pop
in
mov
les
inc
xchg
dec
idiv
xchg
arpl
mov
test
jecxz
call
pop
mov
mov
mov
loope
ins
mov
jmp
jbe
adc
dec
test
sbb
push
cdq
xchg
cmp
(bad)
jg
leave
aas
mov
cmp
adc
jge
mov
inc
sahf
mov
dec
(bad)
icebp
mov
sahf
sti
jb
pop
jne
fimul
hlt
js
rol
aaa
hlt
(bad)
mov
out
mov
test
das
mov
adc
(bad)
pushf
out
mov
fistp
jp
sbb
sar
lods
pop
lds
push
dec
stos
xor
std
jno
or
or
push
jmp
pusha
or
xor
jbe
adc
adc
cwd
mov
jl
mul
adc
push
(bad)
(bad)
xchg
aam
push
out
shl
std
mov
dec
mov
test
sbb
jmp
ins
xchg
xor
jle
cmp
nop
in
jmp
jnp
(bad)
ins
gs
lods
inc
pop
imul
mov
dec
fist
cld
xor
push
xchg
pop
sar
fistp
mov
(bad)
dec
loope
xchg
cmp
imul
(bad)
dec
mov
add
js
rcl
xchg
jmp
aam
mov
loope
stos
push
xor
jmp
in
repz
sbb
xchg
xor
pop
lds
and
push
dec
test
imul
xchg
mov
in
cli
push
ret
jecxz
push
imul
and
and
inc
arpl
jae
mov
cmp
fst
out
pop
jg
popa
mov
movs
dec
retf
and
(bad)
mov
mov
mov
popf
inc
pop
test
test
mov
in
sub
xor
out
mov
ret
sub
sbb
pop
inc
jl
xchg
mov
push
hlt
or
xor
aaa
xor
jb
mov
sbb
js
(bad)
xor
in
stos
mov
sub
pop
mov
inc
add
push
sbb
cmc
mov
in
mov
lahf
add
in
mov
sbb
cmp
fidivr
pop
sbb
mov
push
repz
dec
pop
js
mov
in
mov
mov
and
outs
cli
jmp
xchg
clc
jb
jns
int
push
jp
and
or
mov
js
scas
mov
int
cdq
xor
push
jae
dec
hlt
mov
pop
movs
rol
(bad)
cmc
sbb
inc
repnz
pushf
mov
xchg
mov
gs
test
mov
cs
xor
div
jbe
xor
pop
push
and
xchg
lods
mov
pop
cli
inc
loope
mov
add
xor
jo
js
push
mov
test
xor
mov
(bad)
icebp
mov
cld
inc
inc
sbb
fidiv
les
or
loope
push
in
or
ja
mov
loop
(bad)
dec
push
pop
fisttp
cs
fldcw
push
dec
fcomp
jge
mov
stos
iret
mov
pop
ficom
(bad)
cli
add
in
sbb
pop
pop
cli
or
push
stos
pop
stc
push
movs
cmp
mov
cmp
mov
pop
xchg
fcomp
jne
je
dec
fnsave
mov
dec
xchg
repz
and
adc
cmp
ins
jae
mov
add
(bad)
pop
pusha
mov
adc
cli
cld
fist
sub
cmp
mov
push
or
call
in
rcr
js
shr
popa
add
xor
push
jnp
outs
inc
mov
outs
test
push
out
mov
test
bound
sub
(bad)
(bad)
popa
xchg
(bad)
cmps
fs
inc
adc
xchg
jl
sahf
sahf
mov
stos
inc
push
sti
xchg
mov
inc
not
test
mov
aaa
cli
and
xor
(bad)
sub
xor
dec
stos
or
cwde
imul
mov
in
pop
cwde
loopne
dec
or
ret
inc
add
add
inc
arpl
jl
lahf
xor
retf
adc
pop
jmp
cmp
add
push
xchg
pop
(bad)
fdiv
xor
xchg
bound
jmp
mov
sbb
sbb
fld
mov
shr
sbb
fdivr
mov
sub
les
je
xchg
aaa
cmp
shl
cmp
sub
bnd
jae
out
imul
pop
fnstsw
fnstcw
mov
mov
wrmsr
dec
in
out
movs
xor
jbe
lods
pusha
(bad)
cmps
lock
cwde
mul
fs
pop
xor
rcl
(bad)
fdiv
cmp
test
cmp
adc
lods
inc
cmc
sub
ds
retf
push
jmp
popa
and
stos
daa
jns
xchg
jns
mov
mov
pop
fild
(bad)
and
ss
and
and
and
imul
jg
movs
test
sahf
fist
ins
addr16
sbb
loopne
cmp
fs
jecxz
add
stos
xchg
es
jg
mov
jle
lahf
xchg
adc
fdiv
inc
push
mov
fdiv
sub
and
cmps
sbb
sbb
xchg
cwde
xor
fisttp
loope
pushf
jmp
(bad)
pop
das
jg
add
sub
mov
jl
mov
(bad)
xchg
sbb
jo
lods
and
fcom
cmp
xchg
jno
in
xchg
icebp
pop
repnz
add
test
adc
repnz
(bad)
dec
ins
xchg
fadd
push
iret
dec
sub
icebp
not
sub
arpl
outs
movs
sbb
lods
inc
sub
int
push
mov
in
ret
fstp
push
adc
add
sub
pop
cmps
push
xor
xor
fld
aam
popa
inc
lea
mov
inc
mov
test
push
(bad)
test
jmp
mov
test
inc
movs
pop
push
mov
in
icebp
cdq
inc
adc
xor
cmp
xlat
sub
sbb
inc
rcl
imul
aaa
add
and
sbb
jmp
addr16
cmp
xor
push
xchg
pop
(bad)
imul
xor
sub
mov
xor
jmp
imul
clc
movs
(bad)
arpl
xchg
je
(bad)
fistp
idiv
ja
rol
repz
movs
pop
xchg
imul
push
add
pop
cmps
imul
xchg
cmps
mov
sbb
arpl
(bad)
(bad)
adc
mov
push
scas
imul
sbb
mov
inc
adc
xor
ret
jp
jbe
jl
jb
into
fidivr
rcl
sti
hlt
mov
les
and
mov
add
repnz
ret
dec
sahf
(bad)
dec
out
pop
shl
aaa
or
test
or
push
daa
mov
retf
and
iret
imul
sbb
inc
in
push
data16
cwde
sub
pop
(bad)
pop
arpl
push
cmps
xchg
sub
(bad)
out
xchg
jmp
dec
xchg
mov
xor
in
pop
out
lods
xchg
stos
in
mov
in
hlt
outs
and
repnz
xchg
mov
dec
sub
iret
cli
lods
jbe
or
or
sbb
push
mov
imul
out
daa
sub
addr16
int
push
imul
xchg
sub
or
pop
dec
lea
das
popfw
mov
sub
cmovp
div
popa
jne
sub
loopne
xchg
repnz
je
std
movs
mov
repnz
mov
lahf
outs
push
push
or
adc
mov
es
cdq
and
push
pop
mov
pusha
add
retf
xor
retf
jbe
loope
fwait
cld
fs
sbb
int
add
sub
sbb
cmp
ins
fxch
movs
dec
mov
addr16
push
clc
mov
dec
mov
mov
jmp
ret
das
lods
pop
je
enter
call
js
icebp
mov
sbb
adc
in
(bad)
in
push
or
addr16
adc
mov
jmp
cli
jmp
test
jbe
add
in
or
js
or
jo
outs
or
mov
aas
std
fcom
std
pop
jae
scas
pop
loop
rcl
(bad)
cmps
pusha
cmc
mov
push
test
not
inc
test
mov
inc
mov
jmp
cmp
icebp
inc
imul
in
rcr
jne
ss
push
pop
mov
jge
mov
adc
sahf
sub
mov
cli
div
aam
push
add
fistp
jge
and
(bad)
movs
cmp
scas
idiv
(bad)
xchg
adc
outs
pop
(bad)
jo
mov
dec
add
rcl
adc
out
mov
push
mov
popf
xor
repnz
mov
cmps
sub
ds
(bad)
fcom
and
jg
mov
fs
imul
aas
(bad)
into
data16
es
sbb
add
jge
fldcw
test
pop
mov
pop
imul
jl
jne
bound
cmp
mov
test
jecxz
xchg
sbb
ficom
mov
jae
cmc
ret
sub
dec
fidivr
cs
(bad)
in
pop
lds
push
pusha
les
popa
lea
pusha
scas
mov
clc
imul
sbb
std
jg
push
xor
aaa
sub
adc
pop
mov
shr
sahf
dec
add
xor
fild
sti
sbb
mov
pop
inc
cwde
sbb
mov
cmp
push
fucomip
das
mov
mov
mov
retf
popf
es
mov
jae
cmp
push
in
fucomip
push
out
cmp
cmp
loopne
pop
push
cmp
arpl
adc
and
jge
js
add
movs
jl
scas
or
sahf
mov
sbb
sbb
int3
test
inc
push
jbe
pop
repz
mov
ja
xchg
push
and
in
adc
jge
pushf
(bad)
cmp
mov
cmp
out
retf
outs
mov
inc
xchg
js
push
or
jecxz
(bad)
push
out
imul
push
fwait
int3
scas
xor
hlt
js
cld
push
adc
aaa
cmps
pop
fs
sub
cwde
add
mov
xlat
and
movs
mov
cmp
pop
(bad)
lods
sbb
push
cmp
popf
dec
test
dec
cld
nop
popa
add
outs
cmp
mov
in
loopne
inc
lods
mov
pop
imul
pop
cmp
xchg
stc
inc
cld
xor
es
jno
mov
pushf
cmp
out
sbb
(bad)
or
cmp
cmp
jns
sbb
outs
push
fst
cmps
xor
neg
adc
mov
test
jb
pop
addr16
mov
dec
mov
in
push
test
call
mov
mov
mov
in
sbb
sub
adc
rcr
push
into
sub
sbb
test
mov
sbb
jl
rcr
gs
and
pop
or
mov
sbb
xor
mov
popa
fcomp
mov
iret
mul
jle
and
dec
inc
mov
or
rol
mov
add
xchg
test
xor
mov
aad
cmps
sbb
dec
sar
fbld
or
push
dec
lods
pop
ins
push
mov
popa
popf
(bad)
iret
ret
pop
and
dec
out
pop
shr
inc
inc
push
out
and
sub
add
jns
cmps
xor
mov
dec
iret
aam
xor
dec
and
cld
outs
mov
mov
loope
dec
add
(bad)
xchg
push
in
scas
mov
push
mov
sahf
push
adc
stc
test
cli
cmp
inc
jecxz
fdiv
leave
push
(bad)
ss
outs
mov
inc
aas
pop
mov
cdq
mov
out
jmp
mov
pop
or
les
sub
sub
jb
movs
dec
dec
movs
sub
scas
mov
leave
fadd
xchg
push
mov
push
rcl
mov
popa
xchg
(bad)
stos
addr16
mov
add
cld
pop
jl
mov
inc
repz
and
callw
push
arpl
or
mov
retf
fld
jmp
push
jno
int
xor
push
adc
daa
lahf
add
outs
sbb
sti
push
pop
dec
aas
fisubr
pop
lock
pop
mov
jl
les
push
stc
xlat
xchg
add
js
jmp
pop
mov
stc
shr
sahf
mov
adc
xor
fxtract
xchg
add
ss
cld
inc
or
call
jmp
jno
mov
arpl
inc
jno
jl
lea
bound
pop
dec
cld
leave
dec
lods
jmp
or
fldcw
mov
xchg
jbe
xor
lock
and
gs
xchg
sbb
and
cs
in
inc
ficomp
add
xor
or
mov
std
div
mov
pop
imul
adc
addr16
pop
xor
sbb
aas
test
jo
pop
jbe
movs
jno
xchg
fiadd
enter
mov
xchg
ins
mov
inc
jb
sahf
xchg
daa
stc
test
aad
not
xor
iret
push
jmp
jge
test
pop
ins
mov
int
cmp
jmp
xchg
jae
gs
push
sbb
and
xchg
scas
cmp
mov
ins
sti
fist
hlt
push
pop
push
popf
xor
mov
fs
les
cmp
not
mov
add
jmp
dec
pusha
xchg
test
dec
in
sbb
call
pop
push
sub
pop
ins
push
mov
test
mov
lahf
ficomp
test
sbb
cmp
push
adc
outs
pop
lods
xchg
outs
movs
mov
cmp
cmc
fwait
es
loope
sbb
dec
rol
clc
xor
les
not
xchg
push
loope
mov
cdq
(bad)
adc
imul
cmp
(bad)
data16
mov
fadd
das
xchg
xchg
jmp
sub
sbb
mov
dec
out
mov
call
mov
pop
pop
pop
inc
into
pop
pop
jge
adc
imul
push
es
push
popf
mov
pop
aaa
dec
cmp
cmc
xchg
aas
test
add
fadd
and
jmp
jno
xchg
jne
call
pop
or
xchg
mov
repnz
jecxz
outs
in
jg
adc
cmp
(bad)
rcr
sbb
pop
cmps
pop
imul
mov
(bad)
ja
jmp
push
jno
int
add
push
adc
imul
pop
jmp
jecxz
mov
icebp
dec
add
pop
fnstsw
fwait
pusha
(bad)
mov
mov
cld
adc
lods
inc
jb
xchg
mov
xor
jmp
aad
popa
lods
scas
inc
out
stc
adc
mov
xlat
inc
xor
jp
add
daa
imul
cli
or
sbb
ds
sbb
(bad)
or
adc
mov
cli
and
dec
(bad)
aas
fwait
rcl
pop
add
mov
inc
xchg
out
mov
and
hlt
xchg
imul
mov
jl
cwde
mov
retf
imul
cmp
cs
fcom
xor
push
cs
fnstcw
in
stc
addr16
push
push
push
xor
inc
push
jns
add
addr16
sahf
jl
add
popf
movs
cli
push
and
(bad)
xchg
cmp
jbe
fisub
(bad)
fadd
dec
mov
xchg
gs
jmp
scas
sar
push
add
stc
leave
mov
fwait
mov
or
in
push
call
pushf
or
popf
xor
jnp
cmps
mov
repnz
jecxz
pusha
jno
in
sbb
sahf
das
lods
pop
out
jb
push
pop
mov
jne
xchg
loop
xchg
aas
mov
jb
mov
push
xchg
iret
xchg
je
mov
pop
(bad)
(bad)
icebp
pop
xchg
imul
jmp
inc
xlat
not
xchg
scas
push
jecxz
(bad)
cmp
push
call
test
pop
pop
psllw
leave
mov
jmp
mov
es
sbb
pop
icebp
daa
mov
xchg
jp
test
in
xor
dec
not
xchg
aaa
mov
add
lahf
push
hlt
mov
fs
les
and
shl
loope
aam
ret
test
jmp
pop
aam
mov
aam
sbb
iret
adc
sbb
pop
push
jns
stos
pop
ins
daa
mov
mov
in
ins
loop
or
pop
mov
sbb
sbb
test
cmp
mov
cdq
mov
inc
(bad)
idiv
dec
jle
mov
and
xchg
les
dec
xchg
mov
add
sbb
mov
test
mov
jo
icebp
mov
idiv
dec
inc
or
or
pop
pushf
cmp
pusha
call
mov
push
scas
pop
out
aas
mov
cmp
xor
es
retf
mov
ja
xchg
xchg
xor
lahf
aam
adc
pop
mov
pop
xchg
fcom
stc
aad
add
push
push
mov
fs
shl
mov
ret
inc
jl
stos
dec
lock
cmp
std
les
push
inc
mov
ins
push
mov
or
fwait
mov
xlat
pop
in
clc
jo
call
push
jne
enter
sub
add
popa
(bad)
movs
cmp
xchg
sahf
fist
sti
gs
jl
push
neg
adc
fist
mov
ja
call
cld
repz
pop
cwde
mov
cmp
inc
(bad)
cli
mov
jnp
mov
push
test
push
mov
xchg
ds
pop
(bad)
aas
mov
xor
sub
adc
jnp
pushf
push
xor
mov
sbb
pop
lahf
rcl
out
inc
js
jbe
mov
cmp
xchg
pop
push
fidivr
or
jb
mov
adc
jmp
dec
dec
mov
sbb
ret
add
jl
imul
inc
cs
mov
retf
fsubr
or
xor
sbb
sbb
sbb
into
cmp
movs
cmp
and
shl
fdiv
cmps
pop
sbb
fs
cmps
jae
cli
xlat
mov
nop
outs
xchg
test
movs
mov
pushf
test
ror
mov
jecxz
iret
xor
ret
and
inc
mov
inc
xchg
out
mov
ret
xlat
inc
in
dec
cwde
fidiv
je
out
xor
jae
adc
jmp
ins
sar
xlat
sbb
lahf
mov
xor
rcr
test
jne
cmps
jbe
mov
pop
cmps
(bad)
xchg
adc
mov
pop
shl
mov
and
sbb
jmp
push
js
cmp
nop
sti
repz
xor
pop
jle
cmp
imul
stos
jle
icebp
jnp
adc
xor
push
rol
jl
cmp
or
repz
ins
xchg
scas
cmps
add
stc
jb
ins
jbe
fnstsw
fcomp
sbb
rcl
pop
loopne
xchg
ja
mov
sti
loope
cld
fisub
xchg
xchg
dec
jecxz
std
adc
dec
(bad)
retf
fild
cmp
mov
dec
cmp
cs
add
pop
stc
(bad)
lock
pop
pop
mov
jl
sub
mov
jne
mov
dec
out
fst
jecxz
jns
fisubr
mov
fs
in
jecxz
loope
push
and
les
mov
push
call
sbb
dec
dec
xchg
mov
jp
add
fist
and
dec
mov
js
jo
xchg
inc
out
shl
xchg
push
je
daa
ret
xor
inc
add
jb
add
retf
in
mov
add
aaa
mov
jb
gs
push
fisub
fild
test
pushf
gs
icebp
scas
adc
dec
movs
lahf
scas
scas
dec
lea
scas
xchg
stos
adc
rol
dec
dec
loop
dec
out
and
shl
fdivr
ret
imul
push
lahf
inc
cs
xchg
in
(bad)
hlt
push
mov
jno
pop
inc
les
sbb
pop
mov
mov
cmps
adc
popf
test
idiv
xchg
xor
add
mov
inc
xchg
int
addr16
or
not
scas
sbb
pusha
cmps
mov
bound
xchg
and
loope
dec
ins
pushf
mov
cmp
stc
dec
fild
push
jns
pop
sbb
jge
mov
xchg
sub
aad
sar
sbb
xor
sub
pop
mov
movs
outs
sub
sbb
cmovo
rcr
icebp
dec
jbe
lea
repz
popf
ret
fcom
test
into
sbb
stos
dec
push
xchg
test
push
xor
sti
dec
imul
cmp
loop
fcomp
jo
dec
fstp
jnp
lahf
pusha
sub
mov
test
sub
outs
fdivr
jl
retf
pop
fs
int
xor
add
fwait
cmp
mov
push
stos
mov
xor
dec
fsubr
xchg
mov
add
mov
cdq
push
loope
pusha
pop
retf
movs
mov
imul
mov
das
(bad)
pop
jae
cdq
sbb
fcmovnbe
mov
out
cwde
dec
out
push
in
xor
jmp
std
imul
jne
ds
or
pop
jl
(bad)
outs
jmp
add
and
jp
xor
sub
jns
mov
jne
fwait
mov
(bad)
xchg
es
loop
jbe
pushf
and
mov
ins
(bad)
xchg
jno
(bad)
add
push
call
fdivr
popf
movs
test
inc
loopne
test
lods
mov
cmp
shr
inc
cmps
ins
je
imul
mov
cld
xchg
aas
mov
fs
popa
xor
ss
and
mov
pop
fstp
cmps
jnp
scas
ss
ss
sti
fist
cmc
push
je
sub
xchg
repnz
xchg
ret
mov
xchg
jbe
jmp
inc
sbb
cmc
cmp
in
cdq
inc
sbb
(bad)
cmp
sbb
jmp
lods
or
push
lea
or
fst
ret
leave
pop
loop
and
sbb
xor
sbb
add
push
sbb
sub
mov
pop
inc
add
ror
lea
sahf
mov
les
sub
fadd
lods
ret
je
in
sbb
stos
hlt
outs
inc
mov
aaa
retf
dec
lods
inc
xor
push
xor
add
pop
gs
mov
pop
ins
xchg
mov
mov
in
jp
icebp
je
jno
fadd
sbb
adc
and
popa
jne
push
ds
gs
cwde
xchg
or
or
in
ficomp
fdivr
jno
inc
(bad)
mov
dec
xchg
loope
push
loope
push
pop
rep
mov
lods
les
movs
imul
fcos
lock
rol
sub
lock
adc
clc
jecxz
(bad)
cmp
dec
cmps
push
jge
or
mov
sub
pop
jmp
inc
and
adc
mov
sbb
pop
dec
(bad)
aas
mov
xchg
mov
test
test
shr
ins
mov
mov
jg
enter
xchg
popa
and
(bad)
mov
jecxz
mov
lods
sar
je
mov
push
add
call
call
cmps
ds
out
jae
xor
jle
cmp
pusha
mov
shr
jmp
add
mov
or
add
mov
fistp
mov
xchg
mov
ret
inc
(bad)
std
push
cwde
ins
addr16
fsub
mov
push
xlat
xchg
jge
mov
stc
sar
shr
mov
push
(bad)
into
retf
rol
lahf
mov
or
sbb
stc
xlat
(bad)
in
ds
jl
scas
ins
outs
cmp
jbe
mov
test
stc
in
das
mov
push
dec
je
ficom
sub
fwait
das
iret
add
sub
cli
or
inc
out
int3
mov
loop
jnp
movs
jle
mov
cmp
jae
std
(bad)
mov
in
outs
mov
pop
ja
mov
shl
fsub
mov
cmps
add
ret
push
call
stos
outs
jl
mov
mov
retf
enter
das
mov
cmp
pop
add
and
pop
repnz
ins
sahf
jnp
(bad)
mov
arpl
inc
(bad)
cmp
jbe
lea
(bad)
retf
pop
xchg
les
mov
scas
xor
pusha
mov
jge
xchg
mov
or
push
scas
cmp
ss
fistp
add
sub
push
jne
push
daa
dec
out
shr
mov
jb
(bad)
jnp
add
clc
jo
cmps
push
cmp
mov
or
lock
push
ja
pop
(bad)
mov
mov
(bad)
daa
fsub
call
add
cmp
cmc
(bad)
fdivrp
dec
adc
push
jmp
inc
cmp
test
pop
fnstsw
push
or
inc
mov
mov
(bad)
sbb
fcomp
std
or
sti
push
fs
retf
push
daa
sub
ins
jbe
push
ss
pop
pop
cmps
xchg
sub
xor
aam
inc
test
fs
movs
outs
fadd
popf
jo
jmp
sub
jns
mov
(bad)
sbb
mov
test
lods
mov
xor
cmp
stc
mov
popf
and
jnp
mov
imul
inc
cwde
(bad)
cs
pop
sbb
xor
add
jg
sbb
xchg
dec
adc
push
push
and
loope
stos
pop
nop
fidiv
imul
(bad)
bound
sahf
or
mov
call
dec
call
leave
sbb
or
aad
inc
xor
int
data16
jae
push
sub
loopne
push
cmpxchg
stos
pop
cdq
clc
add
cmp
and
push
adc
pop
mov
stos
jae
movs
sub
cmps
neg
aaa
push
ds
cmps
xor
jbe
fist
mov
xchg
jae
add
jecxz
mov
stos
shl
add
sar
pop
jg
scas
dec
fcomp
ds
cmc
fistp
and
aaa
jle
sub
sbb
cmps
mov
ins
jecxz
sbb
aaa
mov
scas
daa
mov
mov
add
xchg
mov
pop
ins
aam
mov
xlat
imul
sub
sti
(bad)
xchg
inc
hlt
mov
mov
in
test
movs
xchg
aas
dec
iret
clc
sbb
mov
jp
or
dec
loop
mov
push
jae
push
addr16
test
call
outs
fdivr
pop
cwde
repz
je
enter
and
retf
(bad)
push
ds
vrndscalepd
jge
scas
call
lock
jbe
stos
pop
fstp
xchg
addr16
in
add
rol
movs
(bad)
or
mov
cmc
in
shl
mov
inc
rcr
inc
pop
dec
rol
cmp
jo
jne
je
imul
mov
mov
call
jle
call
add
je
xor
xchg
test
(bad)
rcl
fnstcw
sub
test
fwait
(bad)
xchg
dec
cmc
mov
mov
or
mov
xchg
popa
xor
out
retf
push
mov
rcr
cmp
cld
repz
pop
push
fs
je
jns
cmps
mov
add
stc
adc
fcom
and
and
mov
jne
xchg
fisubr
imul
jns
lds
neg
rep
jecxz
mov
xchg
mov
push
repz
test
lea
cdq
test
adc
mov
pushf
movs
leave
lock
jnp
test
push
or
cmp
fninit
jb
adc
pop
stos
push
and
mov
out
ins
xchg
shl
clc
outs
inc
add
pop
push
and
cmp
jbe
imul
movs
xor
mov
mov
jmp
xchg
aaa
mov
jne
mov
push
xchg
(bad)
mov
jecxz
popa
sub
fild
mov
jg
mov
push
xor
jmp
bound
jmp
sub
cmc
sti
fst
and
or
xor
daa
add
out
mov
stc
push
loop
or
call
jmp
cmp
adc
pusha
jae
or
mov
mov
inc
lahf
(bad)
xchg
and
lock
aam
push
js
arpl
mov
inc
jmp
nop
jns
repnz
mov
sbb
(bad)
fnstcw
out
xchg
cmp
(bad)
push
ins
fwait
test
fist
pop
dec
retf
(bad)
fild
and
push
jge
sbb
or
mov
jmp
mov
cmp
xor
daa
nop
jbe
sbb
jnp
mov
inc
and
fcmovu
xchg
aas
xchg
cmc
add
fs
push
mov
jg
fcomp
cs
lea
retf
inc
mov
fcmovb
cmp
dec
js
mov
adc
dec
push
pop
fnstsw
in
pop
cdq
add
sbb
pop
pushf
inc
aaa
push
xchg
into
iret
xor
lock
out
jns
(bad)
pusha
inc
jno
int
or
and
and
mov
sbb
cmp
enter
scas
loop
les
jb
imul
cdq
ins
mov
lea
shl
adc
adc
inc
push
mov
jmp
pop
sbb
dec
cmps
cmp
aaa
mov
retf
imul
pop
pop
push
test
test
mov
pop
cmps
pop
repz
das
mov
je
jno
ficom
and
and
mov
popf
add
arpl
pop
cmp
movs
adc
call
repnz
jno
mov
inc
mov
xchg
jbe
fldpi
cmps
adc
outs
lods
sahf
cwde
lds
fmul
xchg
fwait
stos
adc
into
pushf
out
scas
loop
push
push
and
lods
push
out
or
mov
imul
mov
clc
lea
clc
add
pop
aas
into
pop
sub
sbb
sub
mov
js
mov
pop
jecxz
cmps
cmp
jae
stos
dec
loope
sahf
pop
cmps
les
and
out
or
imul
mov
and
lock
mov
cmp
jecxz
xlat
dec
cmp
jecxz
shl
or
jnp
cwde
sbb
xchg
push
rcr
jmp
pop
ins
jge
shr
imul
pminsw
push
add
mov
(bad)
out
inc
(bad)
xchg
imul
jbe
adc
loop
imul
popf
sbb
pop
mov
pushf
ret
inc
sbb
test
cmps
inc
out
push
sub
stc
in
fist
xor
dec
mov
push
cs
lahf
mov
mov
cld
shl
(bad)
jg
push
xor
and
bound
test
xor
sbb
fcom
lds
sbb
pop
loope
fcomp
mov
jo
movs
jne
fxam
imul
inc
sti
stc
test
aas
lods
imul
test
call
pop
jnp
mov
xor
(bad)
fadd
es
push
pop
mov
pop
pop
lods
jbe
push
popf
fwait
(bad)
sub
addr16
inc
add
add
sub
(bad)
ins
ds
cli
sub
push
pop
loopne
xchg
cmp
jmp
pop
jmp
fs
xchg
dec
sti
shl
pop
cs
addr16
mov
mul
out
mov
ds
inc
shl
ret
sbb
jg
jno
popa
sti
inc
add
or
jge
jmp
adc
mov
adc
add
ins
sar
mov
xchg
inc
and
fild
fbld
push
pushf
pop
loopne
in
popf
in
adc
mov
or
(bad)
mov
mov
rcr
stos
jg
mov
aam
not
fld
lods
ret
sub
jp
dec
and
call
lods
push
ins
push
mov
lahf
lods
enter
pop
fcmovbe
sbb
and
push
and
add
mov
mov
call
and
xchg
adc
outs
jg
sub
sar
jecxz
call
test
jmp
cmc
adc
js
movs
lea
cdq
mov
loop
mov
inc
pop
fwait
and
iret
repz
and
xor
push
test
fs
add
es
dec
sbb
adc
cmp
adc
addr16
es
in
stc
sbb
hlt
add
data16
mov
pusha
cdq
rcl
jmp
aaa
in
mov
push
and
mov
test
lock
dec
mov
xor
xor
out
inc
in
and
cmp
mov
pop
xchg
xchg
cdq
test
pop
fadd
repnz
jb
in
cmp
or
frstor
mov
jno
xchg
lahf
adc
daa
cmp
std
mov
shr
push
mov
jecxz
clc
jg
rcr
aad
xchg
jnp
ins
mov
addr16
mov
leave
mov
les
jnp
mov
cmp
jmp
cs
stos
or
dec
jns
sbb
(bad)
retf
aas
mov
jae
inc
xor
adc
add
sbb
imul
xor
dec
push
fwait
mov
outs
cwde
aam
xor
jle
sub
(bad)
aas
xchg
enter
xchg
fs
mov
shr
scas
mov
jp
mov
adc
mov
adc
inc
push
mov
inc
out
and
int3
repnz
xor
pop
je
add
in
cmps
iret
xchg
cmp
xlat
pop
in
dec
mov
add
xor
xor
pop
pop
aas
cwde
pop
mov
test
and
mov
xor
pop
(bad)
daa
sahf
out
jl
outs
dec
jno
push
lahf
xlat
push
loopne
in
mov
scas
xor
dec
xchg
cld
scas
div
or
mov
or
mov
fld
jle
dec
and
mov
repz
pop
pop
sbb
aaa
jp
xchg
push
mov
cli
dec
adc
jae
aas
fisub
ss
adc
das
mov
cli
imul
arpl
or
std
mov
repnz
test
out
or
cmps
test
rcr
xchg
stos
in
mov
mov
retf
retf
inc
loop
imul
ds
fist
adc
inc
cwde
sbb
and
call
outs
in
aam
mov
arpl
fisub
fs
adc
imul
outs
stos
mov
dec
out
fild
aam
inc
mov
mov
loopne
nop
xchg
inc
daa
(bad)
es
jg
cmps
cmps
enter
je
test
clc
shr
es
(bad)
ds
sbb
hlt
fist
inc
sbb
and
cmp
pop
xchg
fwait
test
stc
loope
cmp
dec
inc
xor
and
xor
sub
xchg
dec
xor
test
popf
jmp
addr16
js
mov
jae
(bad)
cdq
push
lock
jns
out
(bad)
icebp
adc
ins
or
pop
mov
sar
xchg
(bad)
inc
jnp
mov
xor
adc
bound
pusha
cmps
sbb
xor
mov
(bad)
cmp
adc
sbb
arpl
daa
mov
mov
sbb
inc
dec
dec
test
adc
ins
jle
popf
push
jmp
xchg
jae
xlat
fdiv
or
ins
icebp
xchg
fadd
das
ret
mov
test
xor
ror
lods
test
loopne
(bad)
es
or
test
or
jl
cs
pop
icebp
or
sub
je
and
inc
cmovbe
add
adc
outs
in
cli
or
and
out
xchg
adc
sbb
fisubr
mov
jge
shl
jmp
aad
xor
inc
xchg
std
pushf
rcr
test
push
xchg
mov
adc
(bad)
repnz
mov
(bad)
dec
(bad)
add
(bad)
sbb
imul
bound
push
jmp
push
out
add
in
ds
sub
in
push
mov
test
dec
movs
xor
xchg
cmp
cmp
(bad)
fwait
aaa
mov
outs
jl
js
xchg
fnstcw
mov
aam
pop
push
xchg
mov
add
sbb
lock
out
mov
jae
xchg
adc
adc
(bad)
rcr
ss
dec
mov
inc
pusha
mov
sub
mov
sar
cs
les
cld
pop
sbb
arpl
push
mov
mov
addr16
(bad)
jno
push
dec
fst
test
cwde
neg
cld
inc
add
stos
pop
aad
call
mov
add
out
jnp
push
or
jmp
inc
rol
sbb
out
sub
inc
popf
and
ins
jp
loopne
ds
mov
ror
push
push
out
(bad)
or
repz
inc
pop
and
push
sbb
push
xor
add
cmp
or
repz
pop
ret
call
aad
pop
inc
mov
std
shl
call
xchg
push
daa
(bad)
add
push
mov
mov
jae
popf
out
adc
shl
mov
idiv
cmc
test
jnp
dec
and
or
dec
cmps
and
jge
dec
sbb
xchg
iret
mov
(bad)
cld
or
pop
rol
or
mov
pusha
pusha
fdiv
xchg
sbb
popf
mov
(bad)
lods
out
int
sbb
dec
jns
nop
push
mov
cmps
ret
cwde
imul
add
stc
sti
popf
ja
inc
stos
mov
je
rol
cmc
mul
pusha
cmc
aam
xchg
pop
into
push
pop
sbb
cld
ficom
push
imul
push
mov
(bad)
mov
xlat
inc
in
std
or
jmp
(bad)
and
mov
mov
fld
mov
jp
nop
movs
xor
push
fcmovbe
xchg
aas
(bad)
clc
jno
inc
jo
mov
push
out
xchg
pop
pop
(bad)
(bad)
mov
in
xchg
imul
je
mov
adc
iret
les
dec
lahf
mov
loope
fidiv
or
fucomip
repz
fimul
inc
arpl
fnstcw
call
push
loope
add
push
and
pop
mov
sahf
adc
fwait
mov
dec
jmp
loop
mov
inc
push
lods
pop
fld
xchg
push
std
stos
test
out
mov
scas
in
mov
mov
adc
fmul
icebp
call
ss
in
fbld
and
outs
test
inc
cs
(bad)
enter
icebp
jbe
fild
jmp
ins
je
int
sbb
or
pusha
mov
push
cdq
mov
inc
fsubr
jb
ins
jbe
mov
cmp
shl
jmp
mov
pop
push
loopne
cmp
into
aad
dec
pushf
mov
jnp
or
mov
push
fistp
sbb
or
pushf
push
fwait
sub
into
and
cmp
sbb
adc
outs
pusha
(bad)
pop
xor
call
xchg
xor
sbb
xchg
push
repz
pop
pushf
xlat
mov
xchg
lahf
add
repnz
mov
jecxz
add
ja
test
xchg
ret
out
jne
fsubr
dec
shr
push
dec
loop
repz
inc
pop
js
cmps
punpckhbw
jnp
adc
mov
lock
arpl
xor
pop
sub
addr16
inc
mov
mov
cmps
sbb
popf
xchg
test
mov
stos
out
pop
adc
mov
xor
dec
cld
add
clc
nop
jnp
sbb
stos
jbe
xchg
xchg
stos
push
daa
cli
jmp
push
mov
dec
jecxz
jmp
fsubr
sub
xor
dec
sbb
jns
xchg
mov
or
fild
out
jl
jmp
fs
int
push
imul
retf
push
pop
fldenv
cmps
or
(bad)
aam
outs
aaa
and
call
shl
mov
inc
out
xchg
dec
call
hlt
mov
xchg
jle
mov
div
jmp
push
out
int
sbb
div
cmc
push
sar
push
ss
scas
jne
push
lahf
imul
mov
jmp
imul
push
cmp
cmp
mov
ja
xchg
xchg
and
fcmovbe
out
xchg
clc
popa
aad
jnp
mov
mov
pusha
out
mov
hlt
mov
mov
in
in
adc
outs
pop
xchg
test
call
lods
test
fadd
or
fcmove
je
cmp
dec
mov
push
or
mov
mov
in
cli
push
sahf
int3
dec
adc
or
add
stos
jb
(bad)
jg
cmps
adc
popf
test
inc
(bad)
stos
xchg
add
cld
push
shl
mov
and
xchg
jle
sti
mov
mov
lods
les
pop
inc
mov
test
inc
retf
rcl
lods
xchg
inc
out
fadd
cs
cld
xor
xor
jo
inc
es
call
ins
out
jo
clc
rsqrtps
stc
and
pop
ror
pop
dec
(bad)
mov
xchg
mov
xor
or
out
iret
jmp
sti
jb
inc
jbe
mov
dec
mov
mov
add
sti
hlt
sbb
rcr
inc
test
cli
sbb
lods
inc
call
xchg
xlat
pop
icebp
inc
push
or
push
mov
mov
retf
rol
call
push
pop
daa
(bad)
and
add
jle
outs
push
sahf
dec
cmp
test
(bad)
(bad)
aaa
mov
sbb
dec
add
lds
fstp
xchg
jmp
(bad)
nop
xor
imul
mov
sahf
test
cmp
xlat
not
xchg
(bad)
inc
call
(bad)
push
dec
xchg
sbb
lahf
imul
push
and
or
pop
sbb
and
lods
es
pop
dec
mov
push
scas
mov
inc
(bad)
test
add
jbe
stos
imul
(bad)
pusha
xchg
mov
dec
out
xchg
inc
es
mov
mov
cmps
mov
test
pop
sahf
mov
rcl
icebp
fmul
dec
(bad)
cmp
xor
cld
fistp
and
cmp
ins
imul
mov
mov
shr
jge
icebp
jae
jno
retf
jo
adc
bound
push
cmp
or
and
fild
lds
jns
(bad)
pop
loopne
in
loopne
xchg
jne
retf
jmp
lods
in
aas
mov
xchg
cmp
in
(bad)
pushaw
mov
dec
jecxz
fisttp
mov
jl
test
sbb
push
xchg
xchg
stos
test
pop
lock
idiv
cmp
ss
sub
frstor
movs
or
popf
mov
add
or
popf
scas
mov
fsub
jl
push
lds
mov
loopne
jno
in
cli
xchg
jne
outs
movs
lea
lods
call
ffreep
dec
imul
jmp
pusha
outs
mov
dec
es
lahf
(bad)
test
cmp
aad
mov
or
and
add
or
or
add
xlat
xchg
inc
push
inc
(bad)
movs
sbb
xchg
jb
pop
js
fimul
mov
dec
mov
call
out
mov
jle
mov
loop
xchg
cld
aad
pop
jmp
sub
repnz
in
inc
out
sbb
outs
mov
jae
popa
lahf
test
nop
or
aam
sahf
cli
sbb
xor
inc
outs
pop
sub
ja
arpl
ins
cmp
mov
popf
icebp
stos
daa
mov
jb
fisttp
(bad)
dec
loope
lahf
push
loopne
pop
xor
dec
stos
mov
mov
cld
test
popf
dec
icebp
pop
int3
xor
leave
push
sar
sub
(bad)
outs
test
inc
icebp
mov
nop
sub
add
mov
push
jo
adc
jnp
mov
push
mov
bound
ret
outs
jnp
(bad)
jo
mov
pop
mov
mov
out
and
movs
xchg
jnp
ins
xchg
lea
push
mov
stos
addr16
hlt
cdq
(bad)
inc
dec
mov
cmps
cmp
cs
and
pop
jle
outs
mov
inc
or
mov
pushf
push
cmp
outs
out
jmp
mov
pop
je
cmp
and
popa
add
cmp
mov
push
xchg
mov
aas
std
jmp
adc
jb
lahf
jb
mov
push
test
repz
test
test
jmp
int
cmp
mov
clc
cmp
bnd
inc
ja
cmp
lea
push
les
data16
or
jecxz
push
jbe
pusha
add
xor
add
movs
adc
mov
pop
neg
xchg
and
jo
xchg
xor
lds
push
lock
mov
out
or
je
mov
popa
cmp
fild
lods
mov
inc
sub
jmp
repz
jnp
mov
inc
sbb
sahf
mov
loop
aas
mov
dec
push
cmp
add
ins
cmps
dec
and
xor
mov
or
imul
mov
ins
pop
push
mov
iret
loopne
call
push
jmp
pushf
sub
bound
sahf
outs
push
in
sub
sti
mov
jmp
ins
mov
into
inc
pop
das
or
jp
sub
mov
pusha
lea
fild
cli
jle
gs
dec
add
(bad)
sub
pop
frstor
adc
call
out
stos
mov
lea
sub
ins
fistp
loope
nop
mov
mov
in
rcr
mov
stos
cmp
icebp
jle
mov
cmp
push
or
in
(bad)
repz
scas
aaa
sbb
sti
push
test
xor
sbb
push
daa
int
push
pusha
cmp
pushf
pop
mov
mov
jne
mov
sbb
xor
retf
mov
jbe
ficom
mov
push
xchg
xchg
data16
mov
xchg
push
mov
sub
jg
sahf
test
mov
fistp
fwait
lods
jp
jnp
cmp
(bad)
push
out
xor
push
inc
fimul
push
adc
pop
(bad)
push
out
sbb
cld
pop
adc
int
push
ja
and
or
cdq
ins
xor
(bad)
cmp
fsubr
cmp
sbb
push
test
in
icebp
cld
pusha
dec
xchg
movs
xchg
add
outs
lods
xchg
movs
lds
stos
fs
mov
es
repnz
mov
inc
test
iret
(bad)
inc
call
fistp
dec
push
inc
jae
test
fisttp
ins
jno
into
sub
sub
pop
fldcw
fisub
retf
xchg
xlat
xchg
sub
and
aam
adc
jae
mov
inc
call
dec
xchg
mov
mov
add
mov
cli
fild
lea
aaa
or
add
cmp
clc
imul
nop
cmp
cli
add
shl
jno
in
aas
jo
cmp
es
test
xor
sub
fistp
bnd
pop
stos
dec
repz
xchg
mov
je
mov
lock
mov
stos
jecxz
mov
mov
fisttp
or
sub
cli
cld
in
jbe
xor
pop
ins
push
mov
scas
mov
mov
jecxz
pop
mov
pop
inc
add
int
pop
jge
aaa
mov
stos
pop
(bad)
xchg
jae
movs
sub
mov
or
aas
mov
jp
mov
push
popf
xor
ror
stos
loope
scas
pop
ja
mov
test
mov
jecxz
fdiv
cs
call
mov
inc
or
xchg
xor
retf
fnstsw
stos
out
jbe
ja
fsub
or
cmp
sub
imul
movs
cmp
lahf
bound
adc
in
into
xchg
xor
push
dec
test
dec
xchg
out
nop
xchg
jno
std
clc
pushf
push
in
or
arpl
jmp
outs
inc
(bad)
mov
xor
repnz
int3
pop
jo
dec
mov
push
sbb
mov
out
or
adc
cmp
pop
stos
add
adc
mov
aam
xchg
aaa
mov
jbe
fimul
mov
aas
xchg
int3
call
mov
xchg
in
jmp
mov
cmp
lock
mov
pop
test
push
sti
pop
ja
dec
test
ins
cmp
mov
out
retf
clc
push
push
or
in
adc
sub
jb
sbb
jg
mov
push
cmps
mov
or
and
sahf
out
or
adc
pop
jge
inc
cdq
mov
inc
call
cs
test
xchg
(bad)
xor
mov
or
dec
inc
loop
ins
xchg
jp
ds
(bad)
fisub
dec
xor
jns
mov
lods
arpl
cli
or
out
data16
inc
jmp
sub
pusha
pusha
lods
jnp
mov
lahf
sbb
and
stos
sbb
jae
fimul
mov
dec
xchg
(bad)
xchg
push
loope
jno
std
ret
xchg
push
repnz
pop
imul
(bad)
xchg
fcmovu
inc
dec
cmc
mov
or
xlat
sti
fst
xor
mov
arpl
jle
cwde
xchg
xchg
dec
sub
or
jmp
int
push
jbe
pop
mov
sbb
addr16
sub
rcr
cli
inc
bound
outs
loop
sub
jecxz
and
ror
mov
jns
xchg
xor
jmp
cmp
mov
or
pop
fnstsw
jnp
jo
jne
inc
lahf
imul
call
cmp
aas
mov
dec
adc
or
sbb
imul
add
xor
xchg
adc
jne
stos
pop
sti
ret
mov
nop
push
and
rol
(bad)
lds
stos
pop
jns
test
adc
and
aad
inc
ins
xchg
call
adc
xchg
mov
xchg
cmp
mov
inc
es
mov
mov
jmp
pop
inc
jp
enter
sub
lahf
das
mov
test
xor
popf
mov
add
push
push
(bad)
out
es
add
pop
loop
sar
loope
mov
call
(bad)
mov
lea
neg
pusha
push
mov
mov
sbb
ret
sub
sub
(bad)
in
repnz
inc
jae
dec
mov
xor
push
xchg
fild
jmp
fs
sbb
inc
add
add
dec
dec
sahf
pop
and
das
arpl
or
push
cwde
aas
mov
push
out
jb
stos
xor
test
pop
xchg
mov
dec
xchg
xchg
pop
cmp
xlat
xor
ins
add
test
inc
stc
repnz
mov
loopne
aad
aaa
ds
fisttp
xor
imul
ins
xchg
mov
in
jmp
js
jmp
sub
adc
sbb
jg
mov
ja
cmps
xchg
cs
adc
popa
jbe
mov
cmc
mov
dec
add
push
jmp
(bad)
test
dec
call
hlt
shl
pop
add
fist
or
loop
fistp
pop
push
or
jle
push
inc
pop
icebp
or
out
fbld
mov
pcmpgtb
aas
mov
add
jl
cmps
cmp
sbb
and
enter
repz
pop
push
bound
xchg
enter
cdq
jl
not
scas
adc
sbb
add
mov
repz
fsub
push
mov
repz
sub
or
outs
stos
pop
gs
cdq
mov
scas
outs
cli
fisubr
mov
bound
mov
jl
and
mov
inc
jmp
mov
pop
and
pop
shl
pusha
loop
pusha
and
pop
xchg
les
and
push
test
mov
ja
mov
sbb
std
lock
in
rep
imul
leave
retf
shl
pop
fs
imul
cmps
movs
leave
mov
push
fild
ficomp
cmps
in
inc
ins
inc
xor
xor
je
cmp
sbb
inc
mov
gs
pop
cwde
div
pop
ins
jl
pop
clc
xchg
xlat
jb
scas
xchg
ja
xchg
inc
pop
(bad)
(bad)
or
push
mov
mov
or
xor
fcomip
cmps
mov
imul
rcr
inc
push
call
xor
or
cdq
cmp
ins
lahf
mov
out
jecxz
cmp
jge
int
sub
popa
out
inc
mov
mov
jb
into
std
cmp
repz
xor
sbb
shl
out
xchg
les
push
fcmovnbe
mov
test
pop
je
fiadd
adc
cwde
push
loope
jmp
sub
lock
pop
into
push
popa
cmp
data16
loopne
sub
xchg
lods
adc
repnz
jno
fbld
xchg
or
sbb
sbb
nop
mov
cmp
dec
jno
icebp
mov
mov
jle
mov
dec
call
or
fdiv
mov
outs
jl
mov
push
adc
retf
out
(bad)
(bad)
dec
ins
xchg
xchg
pop
lock
sbb
fild
cmp
popa
stos
pop
imul
les
inc
jmp
jb
mov
es
pop
pusha
test
aaa
movs
sub
xlat
test
and
icebp
xor
dec
jbe
mov
dec
test
xchg
inc
in
pop
adc
inc
cmps
mov
mov
stc
repnz
ficomp
push
add
fdivr
fbld
jo
push
test
ins
push
lods
aaa
sub
mov
fsub
(bad)
or
push
xor
sub
adc
jae
sahf
jg
lods
cmp
test
dec
in
mov
or
(bad)
push
fist
test
xchg
stos
add
mov
test
cmps
mov
call
adc
pop
js
mov
cmp
jle
inc
arpl
and
dec
sub
call
sti
iret
js
lock
dec
pusha
inc
(bad)
or
pop
lods
sub
inc
jnp
outs
inc
mov
addr16
mov
(bad)
cld
mov
test
popa
dec
test
mov
mov
dec
stc
lock
ja
ins
mov
dec
pop
mov
cmc
pusha
das
retf
sti
xchg
fcmovu
jle
sbb
push
or
icebp
inc
arpl
mov
inc
add
mov
xchg
cmp
fild
repnz
and
add
fild
mov
daa
retf
repz
movs
add
inc
ret
aas
xchg
cld
inc
cli
inc
jno
scas
jle
fmul
outs
xchg
shl
cld
xchg
push
and
fst
mov
ja
mov
adc
retf
(bad)
stos
fadd
in
sub
lock
and
bound
cmp
mov
stc
ins
loope
sbb
push
pop
jae
mov
mov
sahf
jp
cmps
and
mov
fstp
mov
test
mov
pop
push
inc
add
ror
stos
jmp
xchg
mov
push
sbb
std
xchg
retf
imul
sbb
mov
ret
push
inc
pop
sub
mov
dec
adc
fistp
jmp
xor
lods
ss
sahf
jg
mov
popf
mov
std
fsub
sbb
jae
sub
in
xchg
repnz
outs
loopne
push
das
xchg
(bad)
mov
mov
bound
mov
push
sbb
std
test
xchg
lahf
jp
inc
enter
loop
repz
in
cmp
les
js
push
cmp
call
retf
test
pop
adc
cmp
add
sbb
ins
imul
sub
add
(bad)
mov
xchg
enter
jae
lea
mov
cmp
stos
loopne
out
xchg
pusha
and
rcl
mov
fs
xchg
ret
mov
daa
jmp
mov
sahf
call
dec
xlat
fldcw
jle
stos
aaa
jns
mov
jp
mov
out
inc
jmp
jns
int
ins
jo
adc
data16
outs
inc
mov
mov
xor
cwde
aaa
mov
dec
push
mov
mov
(bad)
dec
cmps
les
push
jmp
mov
(bad)
sub
(bad)
cmp
xor
retf
ins
xchg
mov
xor
rcr
or
sbb
mov
in
mov
scas
cs
ins
loope
sub
xor
add
call
ins
adc
push
cmps
cmps
mov
in
jmp
aaa
mov
push
stos
pop
hlt
mov
dec
cwde
mov
adc
pop
or
outs
xchg
call
ror
inc
ins
lea
cmp
ds
fild
sbb
cmp
dec
add
test
cs
dec
fyl2xp1
or
inc
into
adc
xchg
aaa
xchg
pop
fstp
mov
xor
sub
xchg
aaa
mov
js
stos
pop
fbstp
adc
jle
mov
xchg
xchg
movs
mov
pop
cdq
leave
mov
aaa
loope
cmp
test
dec
div
mov
sub
pop
das
lahf
imul
mov
out
sbb
inc
les
or
add
mov
imul
ds
fs
movs
test
ds
add
jbe
stos
pop
lds
mov
push
in
cli
or
ins
or
je
mov
and
cli
call
inc
in
pop
cld
cmp
loop
std
ds
cmp
sub
inc
test
dec
mov
fld
(bad)
jl
int
inc
jb
aam
xor
das
xchg
add
arpl
pop
inc
cmps
xor
xchg
test
mov
lods
sti
jb
pop
sbb
dec
shl
in
shr
sub
jmp
das
hlt
push
mov
ins
ja
xchg
xchg
sbb
cld
sti
xchg
enter
fwait
test
aad
jmp
mov
jle
dec
pop
cmp
ss
loopne
push
jp
mov
ret
adc
retf
jbe
mov
xchg
rcr
or
xor
jo
sbb
(bad)
fnstcw
lea
jnp
cmps
test
fsubr
mov
xchg
jmp
(bad)
imul
lock
pushf
shl
dec
cli
cld
lods
jae
push
pop
mov
test
and
cwde
xchg
clc
push
imul
clc
(bad)
leave
push
loopne
pop
cmp
push
outs
push
mov
popf
mov
imul
jbe
jae
clc
daa
sbb
pop
or
sbb
xor
lea
fs
cwde
aas
lea
push
scas
dec
div
loope
std
xchg
jno
stc
(bad)
push
call
aam
nop
xchg
pop
stc
div
rol
dec
push
xchg
jle
dec
inc
push
nop
stc
cld
jbe
xor
pop
mov
push
pop
mov
pop
cwde
mov
jecxz
or
call
int
pop
or
add
dec
push
sub
mov
push
in
repnz
and
addr16
push
std
mov
dec
mov
xchg
jns
stc
stc
xchg
adc
jns
lahf
fwait
sar
ins
pop
and
dec
dec
pushf
mov
jnp
adc
inc
call
cwde
pop
gs
div
es
cmp
push
ret
cld
pop
sbb
pop
pop
add
fwait
or
cmp
(bad)
sbb
xor
pop
leave
std
jb
addr16
mov
mov
inc
jecxz
cmps
(bad)
in
jns
test
mov
rol
cmps
ret
jle
popf
xchg
xchg
loop
dec
ins
and
ss
jmp
pop
cmp
mov
or
lahf
mov
mov
fldcw
cli
add
or
aaa
push
add
jno
jge
mov
je
cmps
mov
sahf
fild
aam
add
sbb
dec
xchg
repnz
pusha
xchg
stos
add
out
repz
lods
test
and
ins
addr16
sub
ret
icebp
repz
inc
fwait
add
fnsave
adc
pop
rcr
or
lods
outs
addr16
inc
and
mov
sub
pop
jmp
pushw
mov
cmp
inc
mov
sbb
xlat
xchg
push
aaa
and
scas
xchg
aas
(bad)
in
inc
cli
pop
js
cmps
jge
(bad)
cli
dec
xchg
int3
popf
inc
loop
push
xor
in
mov
test
push
lea
stc
cwde
dec
data16
sahf
fcom
inc
jmp
cs
loope
jo
pop
mov
push
sub
movs
lahf
xchg
adc
dec
jmp
jp
into
add
mov
pop
mov
adc
inc
mov
and
cld
rcl
cli
pop
popa
pusha
mov
pop
cmps
les
and
jmp
cwde
jmp
xchg
mov
std
lock
rol
cmp
pop
pop
mov
sbb
in
pusha
sbb
cmp
mov
jge
mov
scas
push
push
out
out
es
sti
jo
add
dec
and
lahf
ss
mov
inc
in
mov
icebp
mov
loop
andps
dec
mov
mov
pushf
xchg
bound
fcmovbe
mov
retf
mov
shr
jb
mov
push
and
xor
cmc
(bad)
dec
shl
ds
shl
enter
jo
inc
movs
jne
je
push
pop
xchg
mov
iret
add
sti
inc
inc
push
aas
ficom
pop
jnp
mov
mov
iret
jge
sahf
pop
sbb
(bad)
adc
and
rol
aam
dec
push
movs
push
xchg
enter
mov
cs
xchg
add
push
xchg
pushf
test
pop
mov
sbb
test
sahf
sub
sub
xor
xlat
out
push
popf
xor
aaa
sbb
jns
les
push
lea
lea
or
cmp
push
mov
xchg
pop
fisttp
mov
je
mov
dec
fmul
xchg
inc
lods
out
jle
outs
jnp
movs
dec
icebp
nop
sahf
dec
pushf
shl
xor
stc
test
icebp
push
cmp
pop
add
test
stos
retf
sbb
shl
add
push
jmp
push
jl
mov
ins
cmp
dec
sub
cmps
int
xor
rcr
mov
pop
ins
inc
sub
pop
pop
pusha
jb
cmc
pop
(bad)
imul
mov
and
mov
aaa
call
test
push
xchg
fwait
inc
sub
stos
jmp
jmp
xchg
mov
jl
stc
(bad)
cmps
int3
rol
mov
xor
jae
adc
(bad)
sub
sub
mov
jns
mov
cdq
adc
fistp
call
mov
add
pop
sub
add
imul
push
add
xchg
adc
xchg
aaa
shl
jbe
pop
sbb
lds
fld
xchg
data16
xchg
push
and
sti
std
je
dec
repz
stos
shl
sbb
dec
loope
cmps
mov
mov
(bad)
cmp
cld
jmp
sub
outs
jl
loopne
pop
jbe
cdq
mov
inc
jmp
inc
inc
cld
xor
jle
mov
shl
mov
ja
push
and
push
sbb
xlat
lods
push
and
mov
loope
inc
push
stos
pop
out
hlt
dec
call
or
fcomp
movs
mov
scas
xchg
stos
pop
pop
loope
xchg
in
mov
imul
(bad)
(bad)
fistp
xor
fldcw
pop
cli
cs
cmp
add
inc
data16
inc
das
jbe
sbb
sub
dec
mov
sbb
into
call
sbb
cdq
retf
xchg
aaa
mov
jbe
fimul
mov
and
xchg
jae
cli
mov
xchg
mov
mov
test
aaa
stc
fcomi
(bad)
outs
ins
cwde
movs
inc
jmp
ficom
cs
(bad)
fst
sbb
sub
push
cmp
xchg
fisttp
dec
loopne
or
mov
sbb
sub
or
inc
arpl
pop
mov
sbb
(bad)
add
pop
arpl
out
xchg
jl
lahf
inc
xor
mov
mov
(bad)
jmp
div
adc
popa
ins
sahf
test
xchg
push
lock
cs
fldcw
or
add
mov
or
mov
pop
sbb
jg
cli
or
add
sbb
or
push
in
push
fdiv
xchg
sub
into
idiv
xor
dec
out
xchg
cmp
inc
push
lods
sub
shl
out
dec
call
cli
mov
lea
mov
(bad)
outs
ja
mov
div
test
xor
push
cs
dec
aam
xlat
pop
fild
add
inc
pop
(bad)
xor
push
mov
add
pop
shr
or
xor
inc
push
jns
sbb
inc
dec
lods
pop
xor
(bad)
and
and
out
inc
mov
arpl
cli
mov
and
mov
xchg
adc
inc
mov
adc
lods
dec
setno
test
(bad)
dec
jecxz
iret
daa
add
fdivr
lods
pop
jmp
jo
pusha
or
mov
cs
mov
leave
adc
jmp
mov
sbb
xor
xor
cdq
sub
adc
outs
pusha
test
daa
movs
cmp
mov
jnp
(bad)
xchg
cmp
fsub
ins
outs
sub
xlat
pop
xchg
les
out
stos
nop
add
ins
or
ja
mov
jl
int3
sti
adc
lods
dec
int3
pop
cld
cmp
std
cld
fist
inc
pusha
push
dec
mov
inc
je
outs
aas
outs
lahf
mov
mov
out
dec
mov
je
pop
push
fiadd
pop
add
cmp
imul
inc
mov
jb
(bad)
movs
cmp
adc
fist
repnz
jbe
stos
pop
fidiv
fwait
dec
xchg
xor
cld
out
add
pusha
mov
push
xchg
movs
mov
inc
retf
loop
mov
lods
addr16
sub
out
call
pop
sbb
sbb
jae
inc
sub
xchg
scas
mov
loope
sub
push
jmp
xor
and
xchg
add
(bad)
lahf
sub
adc
and
adc
pop
pop
xchg
mov
mov
pop
lock
lods
les
push
pop
adc
fild
cdq
mov
and
loopne
lock
sbb
fwait
cmp
add
sub
callw
mov
jg
jno
enter
cmp
jbe
js
lods
ja
popf
dec
outs
stos
mov
rcr
adc
push
lea
iret
lock
test
xchg
jns
xchg
sti
cmc
push
out
dec
mov
(bad)
outs
pop
mov
retf
jmp
retf
sti
dec
sbb
fdiv
cmp
and
cmp
xor
sbb
out
mov
fild
rcr
mov
pop
mov
sbb
(bad)
or
inc
jnp
imul
add
mov
(bad)
or
adc
jge
mov
dec
jecxz
cwde
addr16
jne
idiv
mov
jg
stos
mov
xchg
(bad)
cmps
in
repz
jle
adc
cmps
sub
nop
(bad)
js
and
xor
bound
cwde
mov
mov
jmp
jne
in
cmp
and
imul
lea
add
xor
stc
xchg
add
inc
mov
xor
test
or
inc
in
test
pop
jae
lds
sbb
lods
inc
out
fld
cs
(bad)
fist
jne
cmp
sbb
test
or
xchg
mov
ret
sti
jp
sbb
out
inc
or
out
and
ror
movs
sub
mov
jmp
mov
fld
cmp
cmp
ret
in
mov
mov
push
xchg
mov
jae
rcl
loope
jle
lahf
mov
ucomiss
mov
iret
pop
stc
xor
fs
outs
je
dec
cs
call
popf
cmc
or
sbb
inc
sbb
push
mov
nop
jg
pop
jb
jns
mov
mov
test
xchg
add
jp
jno
imul
cld
ins
xchg
les
and
ror
lods
mov
fs
stos
sbb
jmp
sbb
cmps
cs
call
lea
dec
push
popf
aaa
sub
mov
mov
add
jne
pop
pop
mov
add
push
pop
mov
retf
mov
popf
cmp
and
mov
adc
add
aad
in
xchg
repnz
test
adc
adc
mov
xchg
(bad)
lods
inc
hlt
dec
repz
clc
fist
and
dec
cmps
pop
addr16
stc
jbe
pop
lahf
mov
inc
out
fmul
mov
add
and
jae
adc
addr16
scas
jo
mov
pop
xchg
stos
mov
aas
and
push
lods
sti
jb
pop
push
push
scas
dec
repz
(bad)
arpl
mov
std
sti
popf
xor
mov
cmp
sbb
mov
cmp
scas
push
fiadd
arpl
fld
mov
sub
cwde
cmp
fild
clc
jl
hlt
pop
adc
cmp
pop
imul
fwait
ss
frstor
mov
mov
mov
push
out
mov
jb
dec
jae
cdq
jge
mov
xchg
popa
ficom
std
sbb
addr16
inc
jle
mov
adc
(bad)
jae
mov
sar
pop
sbb
cmp
cmp
sbb
test
cdq
cwde
test
loope
or
jae
mov
add
pop
mov
out
pusha
mov
pop
repz
jl
fistp
pushf
sbb
cmps
jnp
mov
dec
xchg
rol
xor
(bad)
scas
xor
cmps
jecxz
mov
xchg
and
cli
neg
icebp
pop
dec
sahf
(bad)
pop
lds
clc
add
fdivr
xor
adc
mov
sub
mov
xlat
jle
in
add
xor
xor
jae
add
add
jo
jge
movs
adc
call
pop
pop
out
sti
xchg
aas
mov
pop
push
stos
pop
repz
outs
out
mov
xor
clc
xchg
adc
ins
mov
imul
cmp
in
repnz
scas
jno
pop
retf
adc
retf
rol
js
dec
scas
sbb
dec
mov
xchg
mov
add
repz
aas
fidiv
or
or
mov
cmp
mov
cmp
jl
retf
mov
jae
shr
hlt
into
fist
in
call
es
ror
stos
(bad)
cmp
outs
ja
sahf
mov
sti
cmc
sbb
dec
ins
xchg
movs
sub
pop
int
cs
jmp
jl
mov
push
mov
sub
cli
cmp
adc
pop
add
das
test
call
movs
add
cdq
mov
out
lahf
xor
sti
gs
gs
dec
fnstenv
xchg
je
cwde
jno
retf
mov
add
inc
xchg
mov
and
in
out
stos
(bad)
imul
aad
repz
jae
inc
jae
dec
scas
push
dec
inc
popf
outs
ds
call
jmp
jae
jmp
aas
jbe
sbb
dec
inc
xchg
or
mov
lahf
sub
inc
test
jnp
push
loop
mul
jecxz
and
xor
ret
test
pusha
xchg
outs
jg
adc
cld
loope
jnp
mov
adc
das
idiv
sar
inc
je
dec
stos
sbb
push
jge
xchg
mov
loopne
jns
sar
pop
ss
xor
jge
cmp
das
popf
or
push
mov
mov
jmp
jbe
imul
clc
ds
xchg
push
adc
bound
lods
jg
xchg
mov
test
mov
xor
cmp
retf
clc
pop
bound
jp
aaa
jp
movs
push
es
test
xlat
pop
enter
inc
dec
popa
or
inc
or
push
int3
aas
(bad)
imul
xor
cli
or
jmp
arpl
addr16
stos
push
popf
mov
test
js
jmp
cmc
adc
je
mov
pop
jno
mov
and
fcomi
add
dec
dec
mov
inc
fisttp
pop
push
ret
mov
push
stc
aaa
jne
push
cmp
cmps
push
mov
push
cli
or
and
and
dec
push
adc
push
movs
adc
push
adc
arpl
fistp
loop
fs
test
inc
mov
cmps
inc
out
and
(bad)
lods
sbb
push
aas
scas
pop
ja
mov
adc
hlt
test
xchg
add
(bad)
xor
push
retf
jle
mov
inc
sub
mov
enter
call
fidiv
sub
mov
pop
fistp
cmps
pop
and
xor
xchg
xor
sti
add
jnp
ds
inc
cmp
popa
and
shl
add
stos
loope
add
mov
cmc
or
mov
or
sub
clc
repz
imul
movs
push
aas
add
inc
stc
dec
sti
rol
enter
jae
mov
sbb
sbb
mov
xor
stos
lea
inc
and
out
call
pop
pop
mov
dec
add
pop
out
xchg
add
fdivr
mov
mov
jb
mov
repnz
push
jecxz
lock
sar
(bad)
pop
into
xor
inc
mov
inc
add
call
pusha
loope
xor
into
inc
jo
aaa
into
xor
add
sub
mov
outs
movs
mov
jl
fist
cmc
dec
jae
cmps
sub
mov
dec
jecxz
test
mov
xchg
jmp
mov
pop
mov
mov
xor
test
movs
inc
int
hlt
cmp
dec
out
lock
retf
add
sub
inc
push
mov
mov
out
out
cmc
jp
std
je
jne
rol
adc
xchg
sub
push
lea
jl
out
aas
mov
popa
popa
scas
push
mov
ins
xchg
rcl
jmp
mov
fsubr
mov
jl
xchg
rol
leave
repz
dec
cdq
pushf
push
retf
cmp
(bad)
jmp
push
sub
sub
lahf
inc
sub
leave
xchg
dec
pop
fcomp
sar
enter
xor
jno
(bad)
rcr
stos
outs
dec
lods
or
call
xchg
fcom
(bad)
sbb
inc
mov
dec
mov
movs
jno
stc
shl
pushf
call
sti
fidiv
(bad)
repz
dec
loop
push
jecxz
fiadd
ds
(bad)
fisub
push
sbb
lods
inc
aas
jge
xchg
test
(bad)
sbb
xchg
sbb
inc
aaa
into
aas
xor
add
outs
imul
mov
cli
adc
pop
dec
fwait
rcr
fnsave
jl
push
xchg
in
test
call
sti
nop
xor
jle
mov
bound
test
push
add
repnz
lods
push
xchg
pop
(bad)
ds
test
sub
adc
pop
movs
push
mov
add
scas
dec
clc
jmp
mov
jo
pop
sbb
and
jne
cmp
pop
pusha
mov
movs
add
test
pop
jmp
mov
mov
pop
pop
test
addr16
dec
out
jae
fcmovnb
mov
test
cmp
sahf
lods
pop
xor
les
lods
mov
xor
cmp
clc
xor
push
pop
inc
mov
jne
mov
iret
gs
push
ss
xor
pop
add
add
jp
cmps
pop
and
pop
and
inc
dec
cdq
adc
jbe
mov
aas
xchg
repz
dec
ret
mov
nop
sbb
jns
mov
addr16
test
and
test
mov
push
cs
std
adc
push
mov
inc
cs
les
outs
jmp
inc
es
pop
add
imul
aaa
mov
nop
movs
lea
xor
dec
sti
fcomp
retf
ins
pop
outs
pushf
sub
mov
pop
call
lahf
jno
hlt
ret
aad
cmp
sbb
fiadd
xchg
retf
outs
jmp
sub
daa
loop
push
or
lahf
pop
ins
cmp
sbb
mov
xchg
and
mul
mov
push
pop
gs
xor
imul
xor
fs
cmp
mov
or
or
iret
mov
les
push
mov
pop
mov
cld
pop
pop
icebp
rol
and
mov
lock
xchg
call
jmp
and
push
in
add
pop
or
pushf
cwde
test
xor
fild
js
mov
js
int
das
jns
xor
pusha
movs
imul
ss
cmps
mov
dec
int
call
sar
cmp
xor
cmps
loopne
mov
xchg
add
in
jmp
ret
dec
sbb
stc
xchg
in
fwait
dec
jmp
aad
and
inc
jo
dec
fwait
cmp
mov
jae
movs
mov
pop
out
cli
or
cmp
sbb
jnp
add
ror
cmps
push
inc
retf
repz
sahf
shl
aad
jne
(bad)
jne
into
sahf
and
in
test
xor
retf
push
mov
stos
leave
das
test
jge
mov
cmp
iret
ret
or
xchg
jne
das
and
(bad)
(bad)
sub
push
jo
pop
fist
inc
test
imul
nop
js
clc
jb
sbb
jl
mov
shr
add
lea
push
call
std
ficomp
lds
jge
jb
lahf
call
callw
cs
test
jle
(bad)
stos
sar
dec
ja
mov
loope
in
sti
pop
data16
mov
adc
cmp
neg
inc
retf
cmp
sub
test
inc
xchg
mov
test
xchg
std
sbb
push
and
ds
push
jg
inc
arpl
jg
xlat
(bad)
sbb
add
xor
out
jbe
ins
push
dec
lds
mov
dec
loopne
mov
sbb
rol
lahf
or
mov
out
cmp
cli
mov
out
mov
sbb
ss
(bad)
ja
cmp
pop
fwait
cmp
sahf
inc
add
pushf
mov
retf
xor
xlat
inc
jmp
sbb
sbb
jmp
and
jo
adc
test
dec
test
test
loopne
outs
fidiv
mov
mov
cmc
test
lea
loope
test
test
xor
ds
stc
imul
xchg
(bad)
out
xor
fisub
push
sahf
sbb
or
mov
imul
adc
xor
cmp
cwde
das
retf
jl
stos
jl
movs
xor
or
xchg
cmp
dec
repnz
(bad)
ins
xor
fs
mov
mov
xchg
dec
sbb
sbb
xlat
repnz
mov
or
dec
mov
iret
push
ret
pop
jae
jp
ss
push
test
es
jmp
js
leave
jp
sti
jb
pop
and
or
mov
stc
imul
gs
movs
stc
arpl
and
icebp
add
call
les
push
scas
jno
mov
pop
mov
xchg
std
inc
cdq
mov
mov
jb
test
les
mov
xor
lock
in
ss
push
inc
fimul
outs
inc
xchg
jne
mov
mov
enter
clc
je
jae
fidiv
push
or
mov
inc
mov
push
cdq
stos
test
cmp
dec
jmp
xchg
xor
rcl
js
push
lea
mov
addr16
iret
cwde
dec
xchg
pushf
inc
xor
cmc
jmp
(bad)
das
cmps
pop
jnp
pushf
mov
cmc
mov
fsubr
icebp
dec
add
and
pop
push
push
pop
scas
data16
mov
outs
jmp
jg
fisttp
lahf
call
int
sbb
pop
mov
mov
(bad)
and
mov
dec
jecxz
test
mov
jbe
mov
bound
add
xlat
fisttp
cmps
retf
jg
test
mov
enter
xchg
retf
sub
mov
rcr
xor
sbb
cmp
imul
cli
or
hlt
jge
jae
int
push
fs
pop
mov
mov
rcl
lea
add
push
jl
lods
xchg
inc
(bad)
idiv
js
jno
dec
aad
ror
xchg
fs
pusha
pop
xchg
rol
mov
jle
mov
cmp
fsqrt
arpl
scas
inc
jmp
clc
xlat
and
pop
jl
pop
mov
jge
cmps
push
sbb
cdq
lods
stos
sub
idiv
shl
add
lds
xchg
or
test
ds
jae
mov
pop
popf
call
repnz
push
popf
callw
add
cli
nop
xor
ins
or
jle
mov
adc
ret
jecxz
jle
scas
sub
dec
fisubr
ss
cld
iret
pop
lock
jno
inc
sahf
pop
sbb
mov
iret
outs
cli
ficomp
xchg
jbe
pop
cmp
xor
add
xor
inc
push
mov
inc
mov
(bad)
cmp
aam
aaa
leave
int
cli
push
jl
popf
pop
retf
push
xchg
enter
call
repz
aaa
popf
pop
jb
enter
sti
std
xchg
fsub
cmp
cwde
inc
call
ss
stc
aas
jo
jle
push
gs
inc
es
mov
push
jmp
call
jge
pop
inc
ret
jbe
cmp
addr16
mov
addr16
sahf
sub
fadd
(bad)
jge
push
mov
push
out
jne
mov
xchg
xchg
dec
mov
(bad)
in
mov
mov
scas
(bad)
outs
jg
mov
inc
aaa
or
in
fisub
push
test
or
cmps
fst
shl
cmp
addr16
out
jae
add
add
jb
add
sub
ins
inc
scas
cmp
mov
gs
mov
mov
fs
sub
dec
repz
adc
clc
test
dec
gs
xchg
mov
sub
pop
jl
lods
inc
out
push
lods
cvtps2pi
cli
(bad)
fild
sub
es
mov
inc
sub
mov
(bad)
outs
jmp
jnp
je
(bad)
pop
adc
imul
iret
and
sbb
test
or
in
inc
adc
xchg
sbb
std
jp
inc
jno
xchg
inc
fisub
je
xchg
pop
daa
xchg
stc
test
aad
sbb
inc
test
fcomip
retf
imul
mov
fistp
and
pop
xor
jnp
pop
mov
mov
loop
pop
test
inc
jmp
das
nop
jbe
arpl
outs
sbb
sti
push
and
xchg
cmp
jmp
repnz
xchg
cdq
loopne
xchg
in
addr16
xchg
dec
daa
hlt
shl
test
cs
inc
xchg
xchg
sbb
xor
fldcw
daa
or
cld
enter
push
cmp
sub
cmps
inc
ss
call
jmp
inc
and
xor
or
sahf
inc
(bad)
ins
cmc
jae
test
inc
movs
sub
mov
jae
shl
bnd
jl
push
ret
dec
xchg
mov
or
loopne
push
icebp
gs
cli
test
je
mov
cs
retf
jecxz
ins
stos
fadd
push
clc
sub
xchg
dec
xchg
or
lea
pop
popf
movs
mov
jmp
jbe
jnp
enter
adc
imul
xchg
movs
cli
or
pop
xor
clc
popa
xlat
push
retf
inc
call
es
enter
imul
call
push
lock
sub
adc
sub
in
repnz
xor
inc
pop
jns
mov
iret
ins
out
or
es
adc
push
js
es
mov
jge
mov
jl
stc
mov
fld
and
pop
mov
cdq
pusha
adc
inc
xchg
mov
push
add
cli
xor
fiadd
jnp
das
pop
cmp
sti
fist
sbb
or
pop
sahf
jns
jnp
cwde
mov
push
ror
mov
xor
cmp
pop
je
sub
shrd
jp
movs
adc
mov
xor
dec
(bad)
(bad)
retf
jge
jbe
jb
xchg
out
jmp
sbb
xchg
add
inc
mov
movs
inc
jno
mov
cli
test
mov
jecxz
fisub
aaa
sbb
aad
and
inc
mov
pop
pop
mov
jge
mov
push
push
push
aas
int
sbb
sub
bound
xor
test
pop
std
rol
(bad)
sbb
jmp
xlat
and
mov
push
shl
cmp
fcom
test
sbb
fimul
adc
dec
inc
mov
fidivr
cs
shr
ss
scas
sbb
and
retf
fwait
aam
sbb
dec
jmp
js
push
and
xor
cmp
add
sbb
xchg
sbb
popf
movs
xchg
and
ins
jecxz
xchg
or
aad
icebp
dec
push
push
adc
jecxz
xchg
test
xchg
mov
mov
(bad)
jg
in
fisubr
out
mov
gs
fwait
sub
into
or
ror
inc
sub
pop
data16
or
icebp
xchg
xchg
xchg
adc
(bad)
clc
and
xor
xor
aas
mov
fmul
mov
mov
sti
sti
push
mov
jb
inc
jae
mov
lock
movs
call
inc
sub
aad
xor
leave
dec
(bad)
sbb
cmp
fpatan
push
mov
iret
sub
into
push
clc
adc
add
aaa
pop
push
popf
push
test
enter
fidiv
jno
in
or
mov
pop
mov
add
push
sbb
lods
stos
xor
adc
in
jmp
push
mov
cmp
pop
inc
sti
inc
add
arpl
xchg
inc
and
movs
lahf
sub
push
pop
scas
pop
setno
out
inc
dec
outs
sbb
xchg
jnp
cs
cli
repnz
cli
sbb
dec
stos
pop
dec
cmp
inc
cs
mov
fld
cli
or
pop
es
adc
pop
pusha
and
push
inc
movs
mov
cmp
aam
adc
jbe
movs
push
lock
clc
pusha
xchg
mov
push
iret
xchg
jne
mov
mov
add
ret
scas
rcl
dec
sbb
sub
sub
repnz
call
fcomp
inc
and
or
icebp
mov
neg
fadd
or
and
(bad)
retf
jl
mov
cmps
cmp
mov
dec
call
xchg
cmp
add
pop
loopne
call
xchg
arpl
mul
mov
mov
ja
mov
adc
hlt
mov
clc
dec
imul
ds
int3
(bad)
fcom
pop
jl
popa
mov
daa
mov
push
mov
mov
push
pop
clc
dec
(bad)
stc
das
mov
jne
arpl
imul
xchg
pop
(bad)
imul
jae
lea
in
mov
ins
neg
test
nop
xor
sbb
dec
aad
or
in
adc
loopne
mov
imul
mov
fmul
mov
xor
cs
(bad)
fist
xor
ins
dec
and
mov
stc
addr16
jns
out
aas
xor
pop
cwde
cmp
adc
dec
pusha
sahf
jge
mov
test
les
pop
les
inc
pop
sub
shl
icebp
fadd
lea
add
repnz
aam
dec
adc
aam
jecxz
xlat
adc
and
jp
aaa
sbb
dec
test
pop
stc
inc
stc
sar
mov
jbe
jno
int
sbb
das
lods
add
jb
fimul
scas
cmp
scas
mov
pop
(bad)
fadd
test
inc
push
scas
pop
lock
pop
mov
xor
sti
popf
xor
push
aas
mov
jnp
test
test
jns
cmc
aam
fwait
push
xchg
xchg
repz
and
sbb
lea
jo
mov
into
jp
xchg
jl
clc
jb
pop
pop
mov
fs
push
xchg
aaa
mov
cmps
push
sbb
adc
lods
mov
push
adc
fistp
les
addr16
inc
test
xchg
js
in
shr
movs
leave
daa
fwait
pop
jg
nop
mov
out
scas
(bad)
cmp
add
fidivr
or
ret
pop
(bad)
cmp
push
scas
sbb
add
mov
fcmovnbe
cmp
sbb
sbb
test
pop
pop
mov
jne
mov
cs
and
fadd
out
jbe
mov
push
std
xchg
gs
mul
mov
jb
mov
xor
out
icebp
adc
scas
imul
cs
push
into
cmp
dec
test
dec
sbb
mov
ret
ss
outs
fwait
clc
js
clc
inc
inc
inc
xor
xor
je
add
imul
cmp
sbb
mov
hlt
imul
pop
fcomp
or
xchg
push
sub
aam
or
ins
or
je
mov
push
adc
in
(bad)
dec
outs
mov
fidivr
ds
fldenv
cmp
xor
inc
sub
cwde
push
cs
jg
cld
or
and
add
jo
jp
retf
popf
xchg
lods
add
leave
inc
or
popf
popa
lock
push
into
mov
mov
(bad)
movs
shr
lods
pop
inc
mov
xchg
jmp
test
cmp
ds
adc
stos
sub
cs
les
arpl
into
or
pop
cmp
xor
cwde
push
mov
movs
push
cmp
sbb
and
lods
call
jmp
cmps
(bad)
jb
scas
xchg
arpl
sti
xchg
or
(bad)
neg
mov
lock
fmulp
out
loop
dec
jne
mov
cmp
dec
mov
(bad)
xor
push
or
mov
inc
int
or
jmp
push
cmp
pop
cmp
add
sub
movs
xor
cmps
(bad)
adc
and
out
mov
or
pop
jno
mov
push
in
and
repz
ins
idiv
outs
jb
mov
out
rcr
dec
arpl
ds
ds
in
pop
fist
(bad)
push
adc
mov
inc
(bad)
jmp
xor
xor
adc
sub
jle
sahf
jg
mov
mov
ret
add
jbe
popf
dec
repz
xchg
(bad)
lock
out
mov
lods
les
pop
jno
mov
xor
iret
repnz
not
pop
inc
xchg
fimul
pop
fisttp
aaa
(bad)
test
in
ss
dec
sbb
push
in
or
mov
mov
cmp
or
inc
push
sbb
ds
adc
jp
lea
rdtsc
and
fidivr
aam
jle
lea
cmc
jle
les
dec
repnz
cmp
outs
xrelease
dec
mov
loopne
test
cmc
mov
es
fist
push
jb
cmp
push
es
icebp
xchg
lahf
nop
add
into
outs
retf
mov
xor
cmp
jbe
mov
iret
jle
sbb
fisttp
xchg
push
inc
mov
and
call
push
mov
inc
test
lahf
xlat
xor
xchg
jnp
cli
mov
mov
mov
lods
adc
retf
icebp
test
mov
push
aad
jmp
out
fild
and
sub
mov
pop
fwait
call
test
pusha
inc
int
ja
add
(bad)
ins
lock
ja
stos
xor
mov
xor
retf
cmp
pop
sub
fdivr
in
cmps
dec
out
xchg
jl
(bad)
mov
out
sbb
ret
mov
mov
sbb
fld
lods
lods
dec
lea
cld
cmp
sub
sbb
les
and
fst
aam
pop
hlt
jle
cli
or
jmp
pop
pusha
xor
arpl
outs
inc
sahf
je
lahf
cmp
or
mov
jmp
mov
pop
mov
movs
pop
adc
sti
nop
push
jmp
mov
pushf
les
mov
test
add
repnz
mov
fidiv
xor
std
ds
es
pop
ficomp
push
mov
jge
call
cli
(bad)
jl
xlat
pop
je
add
inc
ins
jl
arpl
imul
outs
popf
xchg
cmp
into
xchg
daa
mov
jno
test
pop
in
or
std
ror
mov
ja
mov
adc
xor
shl
ins
ins
mov
push
(bad)
push
ds
dec
div
fisub
dec
cmp
jns
mov
scas
sub
out
jmp
sbb
add
pop
test
cmp
mov
jl
fcom
sbb
mov
inc
mov
xchg
jno
in
cli
(bad)
and
outs
movs
mov
ror
mov
xchg
dec
cli
aad
cld
lds
test
ficomp
daa
ds
fist
cmp
sub
xchg
jnp
xchg
mov
popa
out
aas
mov
inc
inc
js
into
xor
jbe
sub
dec
mov
movs
cmp
xlat
xor
xor
into
mov
loop
pop
es
dec
cmps
(bad)
mov
xchg
xchg
push
daa
fsub
xchg
lods
mov
cmps
mov
loope
xlat
xchg
fwait
mov
or
loop
xlat
es
jg
dec
mov
pop
es
in
mov
mov
call
jbe
imul
or
pop
fist
mov
pushf
or
lea
cmp
rcl
(bad)
pop
jbe
mov
addr16
stos
mov
xor
movs
mov
mov
outs
mov
(bad)
sbb
mov
call
sbb
in
lods
and
push
test
inc
sbb
fwait
mov
out
cmp
push
ds
outs
dec
add
pop
fsubr
test
xor
push
ja
movs
(bad)
adc
and
rcl
repnz
cli
iret
loopne
add
push
es
xlat
xor
ins
sbb
push
xchg
mov
sub
retf
imul
ror
out
call
push
dec
mov
push
lahf
inc
daa
jle
mov
(bad)
inc
xchg
(bad)
aas
mov
inc
int
sbb
arpl
addr16
sahf
jnp
mov
inc
lahf
mov
dec
int
mov
mov
jle
sbb
cmc
js
(bad)
xchg
outs
out
pop
push
xchg
mov
mov
jp
mov
sti
cmc
stc
cmc
jecxz
dec
mov
fidivr
add
jb
add
dec
mov
imul
stos
adc
adc
cmp
adc
jnp
fldenv
xor
xchg
mov
jl
out
xchg
aaa
mov
inc
push
test
fnstsw
sti
dec
(bad)
xchg
jno
std
mov
sbb
jo
cwde
scas
push
xor
in
retf
inc
lods
scas
fs
jmp
icebp
lock
xchg
add
sub
outs
push
mov
mov
xlat
push
jmp
arpl
ds
pop
xchg
or
outs
jne
jnp
mov
jnp
xchg
pushf
xor
add
iret
mov
mov
push
mov
dec
pushf
(bad)
sti
inc
loop
jno
jmp
mov
jg
sahf
call
rol
jae
sub
sub
cld
jecxz
in
pop
sbb
inc
cdq
adc
inc
pop
imul
cli
push
rcr
ins
inc
cmp
xor
add
or
aas
movs
or
call
fst
xchg
aaa
mov
inc
cmp
stos
stos
dec
call
movs
xchg
fadd
in
neg
mov
mov
retf
test
push
in
xor
ds
cli
fdiv
add
data16
sbb
mov
in
mov
mov
test
pop
and
inc
or
adc
arpl
jnp
xlat
or
mov
or
mov
inc
xchg
xor
jg
mov
mov
dec
xchg
int3
mov
das
retf
fist
(bad)
mov
mov
(bad)
jmp
sar
aam
retf
dec
retf
inc
fdivp
jecxz
ret
push
jle
ss
mov
ret
cmp
outs
in
cli
add
inc
fld
sbb
adc
jp
(bad)
jnp
movs
sub
mov
pop
out
loop
mov
jb
fimul
mov
pusha
xchg
mov
push
dec
xchg
sti
neg
jmp
rep
mov
push
xchg
fiadd
sbb
scas
push
xchg
pop
fcomp
pop
sbb
call
cmp
pop
pop
pop
xchg
inc
icebp
(bad)
(bad)
xor
pop
sar
add
and
adc
imul
add
push
imul
clc
jbe
ins
push
push
stos
pop
xchg
loopne
loop
jno
in
cli
mov
mov
movs
mov
call
daa
aam
or
fcom
dec
fidiv
fadd
ss
pop
cmps
pop
inc
and
xchg
test
fcmovne
adc
cmp
adc
ins
pop
nop
or
movs
xor
test
(bad)
or
mov
xchg
clc
jb
jge
push
cmps
jne
mov
inc
in
cmps
push
loope
add
std
xlat
mov
(bad)
ins
add
jne
mov
outs
aaa
std
fcomip
cli
cmp
cdq
movs
cmp
push
cld
and
jmp
push
pop
mov
jns
sub
icebp
fwait
mov
(bad)
clc
add
int
adc
sub
pop
div
mov
jae
retf
xor
dec
out
mov
mov
jge
dec
shl
dec
shl
mov
mov
outs
jae
call
test
pop
sbb
iret
aaa
inc
sbb
ret
sub
push
popa
lahf
fwait
int3
mov
sub
or
inc
sbb
inc
imul
pop
fisttp
lods
jg
mov
lahf
sbb
dec
dec
out
stc
test
xchg
mov
popa
jbe
shr
mov
popa
mov
xchg
jbe
cli
ret
add
sbb
mov
hlt
push
inc
jmp
push
ins
xchg
scas
push
out
ror
ds
in
lock
dec
pop
cmp
sbb
and
mov
mov
ret
nop
fist
int
sbb
pop
enter
gs
xor
or
mov
inc
fcom
out
mov
jnp
mov
push
call
retf
or
ins
or
ja
xchg
mov
cmp
test
popf
add
adc
and
loope
jle
dec
shr
cmpxchg
rol
(bad)
test
clc
jbe
inc
cmp
adc
sahf
and
push
in
imul
inc
mov
push
inc
fucomi
call
aam
lock
jb
mov
push
xchg
xchg
addr16
adc
enter
ins
mov
pop
gs
mov
sti
nop
leave
jecxz
js
mov
cmp
ret
sub
jp
mov
dec
push
popa
mov
imul
aam
mov
dec
push
pop
dec
inc
cmp
xor
push
shl
push
pusha
stos
jp
mov
inc
call
out
sti
adc
fs
push
loope
hlt
xor
xchg
jno
xlat
shr
sub
sbb
stc
loopne
fadd
ja
pop
fmul
or
jmp
cmp
xor
push
scas
pop
ins
inc
stc
xor
jns
les
cli
lea
mov
jbe
je
mov
add
push
pop
mov
movs
ss
call
(bad)
cli
xchg
xor
adc
pop
movs
jno
cdq
fcomp
les
cmp
xlat
scas
sub
ins
or
stos
ss
pushf
out
scas
(bad)
cmp
cwde
cmp
push
jmp
repz
xor
pop
push
mov
mov
mov
retf
mov
jnp
push
xor
cmp
loop
mov
rcl
sbb
mov
jno
out
xchg
es
jb
inc
sbb
shl
and
shl
push
xchg
fisubr
xchg
lds
test
push
mov
pop
sbb
xlat
cs
xor
xchg
loopne
call
movs
pop
outs
push
mov
imul
call
inc
js
into
and
pop
or
mov
pop
jno
pop
and
ds
mov
jl
int
adc
fs
test
fisub
xchg
imul
imul
cmps
pushf
push
psubsw
jmp
(bad)
xchg
cmps
adc
sbb
jmp
jb
jg
aaa
push
push
mov
(bad)
retf
ds
dec
(bad)
das
mov
add
ds
adc
das
mov
test
jae
outs
xor
cmp
stos
div
sub
pop
sahf
xlat
mov
fcomp
js
outs
les
test
mov
lahf
sub
add
push
jns
mov
ret
shl
lea
cmp
mov
retf
sub
sbb
mov
mov
iret
dec
rcr
mov
xor
aas
xor
xor
sbb
lahf
pop
pop
retf
xchg
xlat
lahf
push
inc
dec
and
clc
pushf
pop
xchg
lea
xor
mov
gs
dec
mov
push
push
int3
movs
lods
push
jecxz
xchg
outs
add
in
fiadd
mov
dec
and
push
in
xor
es
dec
mov
mov
pop
std
jle
cli
sbb
xor
and
jo
pop
lods
push
iret
sub
imul
xor
into
loope
sub
dec
rcr
aaa
retf
hlt
ja
ins
add
mov
cli
mov
inc
movs
les
xor
mov
movs
mov
je
movs
test
xor
ret
test
movs
sub
dec
idiv
retf
inc
jmp
jns
dec
stos
sub
aas
pop
mov
daa
fld
rol
jns
frstor
sbb
cmp
push
mov
jne
cmps
mov
aaa
xor
fcom
loop
outs
push
mov
dec
cwde
les
and
fist
mov
mov
std
fist
fwait
mov
dec
int
adc
jb
cmp
pop
pop
mov
jge
loopne
pop
pop
lahf
(bad)
xchg
retf
shr
jmp
xor
pop
adc
and
sub
lods
jnp
cmps
cmp
mov
pop
in
jmp
ins
jp
stos
pop
jmp
lock
cdq
les
pop
hlt
rol
(bad)
cmp
push
xor
js
lods
mov
pop
call
cld
fist
xor
outs
imul
mov
push
ror
xor
aaa
adc
add
imul
movs
cmp
mov
xor
(bad)
xchg
cmp
push
repz
leave
addr16
les
push
std
stos
xchg
push
loopne
xchg
mov
mov
std
repnz
(bad)
fiadd
xchg
sahf
dec
lock
adc
cmp
cld
fist
ss
pop
test
ins
push
lea
dec
icebp
xchg
mov
(bad)
sti
jmp
pusha
jne
ret
jae
adc
jle
xchg
outs
xor
sub
push
jecxz
and
imul
lock
les
add
stos
test
call
stos
ins
ja
xchg
mov
mov
cwde
cwde
inc
xchg
dec
repnz
(bad)
fist
xor
sbb
popf
push
add
mov
add
fstp
out
jle
div
jle
in
xor
adc
test
push
mov
ja
mov
inc
lahf
int
lods
fistp
sbb
fldcw
std
cwde
clc
pop
out
cwde
adc
idiv
(bad)
jp
imul
mov
xor
neg
sbb
sub
clc
mov
inc
in
sbb
jnp
test
ins
push
mov
cwde
(bad)
iret
pop
add
add
loopne
inc
inc
and
ds
pop
xchg
add
adc
popf
mov
jle
(bad)
mov
mov
add
jo
xchg
loopne
sahf
out
adc
mov
movs
mov
xchg
mov
xor
stc
jmp
icebp
fild
jp
xor
repz
adc
dec
lods
cmp
mov
je
mov
aam
cmps
inc
loope
cs
push
inc
sbb
call
adc
push
mov
mov
xchg
or
add
icebp
out
mov
jb
pop
add
dec
neg
mov
xchg
xchg
jns
in
fsubr
xchg
mov
ror
jne
movs
dec
out
push
neg
std
pop
fbstp
pop
jl
shl
dec
jb
data16
fwait
sar
jmp
pop
add
mov
add
mov
(bad)
adc
and
and
dec
push
fstp
sahf
cmp
in
xchg
mov
mov
in
loop
mov
mov
xor
cld
out
mov
dec
push
fwait
fwait
jns
jne
ds
int3
int
lahf
sbb
dec
cmps
(bad)
inc
or
mov
lahf
scas
cmp
shl
clc
packuswb
aas
in
ja
pop
and
and
xor
data16
push
cmp
mov
aam
xchg
aas
(bad)
ficomp
cmc
jbe
push
mov
hlt
ret
test
mov
xlat
stos
add
retf
rol
cmps
jmp
cmp
fld
lods
test
fs
pop
push
ds
rol
xor
ins
ins
push
mov
imul
jmp
fs
retf
ja
adc
das
call
xor
mov
out
fist
lds
and
dec
stos
stos
sti
push
jmp
xor
rol
mov
push
xchg
cmc
cmps
iret
in
push
jmp
pop
or
cli
fist
adc
outs
stos
cmp
inc
push
xchg
mov
out
stc
or
inc
into
sub
jge
add
outs
push
nop
ins
xor
cmp
mov
inc
jmp
les
movs
ins
fnstenv
call
or
in
add
jne
mov
test
aaa
stc
retf
mov
in
imul
sub
in
inc
sbb
pop
inc
dec
mov
jge
movs
xchg
cwde
cmp
nop
sbb
ficom
inc
and
pop
cmp
add
inc
jns
jno
mov
mov
jmp
repnz
bound
pop
icebp
mov
push
loop
jae
(bad)
ror
test
jp
mov
sbb
jmp
outs
mov
call
in
out
and
aaa
push
pusha
jns
sbb
inc
cdq
dec
sbb
xchg
ror
fcmovnb
xor
(bad)
jbe
pop
push
les
pop
dec
and
icebp
inc
jo
jl
scas
adc
mov
dec
loope
xchg
aaa
mov
jg
mov
inc
xchg
les
daa
retf
shl
cmp
jnp
mov
dec
pop
mov
int3
mov
xchg
xchg
fdiv
ret
cmp
sub
pop
jbe
test
push
xchg
stos
cdq
mov
in
pop
mov
fs
ficom
and
and
daa
mov
cli
ins
dec
mov
push
call
(bad)
stc
xchg
xor
jns
pop
stos
pop
cli
movs
jmp
popa
in
adc
call
shl
and
mov
aas
adc
(bad)
cmp
inc
outs
mov
iret
push
sub
clc
icebp
fisttp
xor
push
lods
sub
lea
push
cwde
test
in
int3
add
mov
fs
push
sub
jle
pusha
jae
push
and
test
leave
test
pop
xchg
xchg
data16
stos
jae
(bad)
shl
sub
test
loop
(bad)
jge
fwait
(bad)
fs
pop
sub
icebp
sti
fst
sbb
movs
pop
outs
push
xchg
inc
sub
cwde
mov
inc
stos
outs
jmp
pop
xor
outs
sbb
cmp
test
inc
xchg
or
xchg
stos
popf
sbb
add
fistp
les
inc
stos
jle
mov
dec
lahf
shl
rcl
xchg
cmp
jg
popf
mov
je
xchg
pushf
push
xor
repnz
mov
push
scas
cmp
stc
push
inc
cld
cmp
mov
push
inc
pop
mov
mov
mov
pop
call
jne
push
inc
mov
pusha
test
outs
dec
scas
jg
movs
xor
xlat
mov
dec
dec
jno
fbstp
cmc
inc
inc
cmp
and
mov
pop
sahf
rcl
mov
mov
test
pop
outs
mov
hlt
div
int
dec
inc
xchg
fwait
inc
jecxz
fdiv
cmp
ret
or
or
mov
(bad)
mov
mov
rcl
aas
mov
aaa
ret
jbe
sbb
and
mov
jo
cdq
dec
out
inc
mov
jno
lods
push
lock
sbb
jae
cmc
(bad)
test
test
(bad)
cmp
outs
jg
test
stos
in
aad
arpl
adc
nop
stc
cld
jae
ss
pop
fisub
dec
push
xchg
jp
xchg
mov
cmp
addr16
jp
jnp
into
pop
ins
js
or
push
push
add
inc
dec
dec
jmp
sbb
scas
pop
test
loopne
loope
inc
and
rol
test
pop
popf
movs
xchg
aaa
cli
cli
movs
clc
loope
add
clc
ds
ds
out
es
pop
sbb
mov
push
or
mov
mov
inc
je
ss
sbb
xchg
pop
mov
stos
dec
aaa
movs
cmp
mov
aas
dec
mov
mov
addr16
fimul
scas
aam
xchg
aam
dec
retf
test
(bad)
or
jnp
movs
(bad)
fcomp
and
cwde
popf
add
cld
fcom
xchg
aam
out
scas
inc
cs
call
stos
pop
popa
pop
test
fnsave
lahf
ficomp
sar
je
xor
add
add
jb
test
or
mov
(bad)
inc
retf
jmp
aam
inc
push
fisubr
out
in
popf
out
test
in
xchg
jnp
js
stos
test
inc
mov
test
xchg
pushf
stos
into
mov
(bad)
mov
or
dec
mov
mov
cmp
sub
cmp
lea
jnp
mov
iret
inc
jmp
or
sti
and
mov
add
(bad)
mov
ins
fdiv
jbe
jns
push
scas
pop
ffree
loope
out
xchg
addr16
mov
scas
add
ins
or
sbb
enter
xlat
repnz
in
sti
dec
ins
lods
mov
pop
pop
dec
jecxz
repz
outs
lea
fs
adc
mov
fmul
fs
cmps
cmp
push
pop
sbb
cmp
and
jae
mov
dec
retf
mov
fwait
push
pop
dec
and
(bad)
mov
sahf
stc
jg
outs
gs
lods
pop
xchg
lahf
dec
(bad)
sahf
jno
out
stos
mov
(bad)
bound
fwait
xchg
inc
in
div
mov
shl
push
push
ror
fild
xor
jno
jns
pop
bound
into
push
test
jno
mov
adc
inc
iret
and
inc
cmps
cmp
mov
and
fsub
xor
jno
lods
push
in
lock
xchg
push
adc
icebp
mov
in
mov
mov
ja
mov
sti
sbb
test
cmp
aaa
ror
jg
dec
mov
es
leave
xchg
cmp
xlat
pop
in
enter
je
inc
aaa
into
cmp
sbb
jl
test
aaa
movs
sub
mov
or
jnp
cmc
xchg
inc
mov
(bad)
dec
and
dec
mov
call
das
jmp
sahf
scas
ret
outs
push
mov
mov
adc
fisubr
mov
inc
aad
fdivr
pop
ds
xor
sub
scas
jno
inc
movs
inc
cs
mov
mov
out
stc
add
add
pop
or
pop
pop
xchg
ds
and
jae
mov
movs
dec
pop
xchg
mov
pop
idiv
lahf
dec
mov
je
xchg
pop
lds
cmp
popf
jo
inc
xchg
lods
test
jb
mov
aam
rol
push
lea
push
or
call
aad
lahf
daa
jae
dec
cmps
aaa
sbb
push
xchg
cmps
fwait
pushf
dec
sub
jg
stc
sbb
xor
xor
mov
xor
imul
adc
lahf
add
cs
sahf
cld
xchg
and
push
push
mov
jl
rcl
add
(bad)
mov
xchg
stos
shl
test
xor
pop
inc
cdq
aad
loopne
(bad)
sub
jns
and
push
data16
pop
inc
inc
push
jge
ret
cmp
rcl
ret
adc
sbb
sub
push
mov
ja
xchg
in
fidiv
les
aad
fld
mov
sbb
(bad)
lock
sbb
ins
lods
movs
fld
aas
test
push
mov
jmp
cmps
jecxz
dec
add
mov
or
jbe
cmp
js
mov
push
mov
push
cmp
sbb
xor
push
add
sub
ja
inc
outs
shl
adc
xor
inc
fcmovbe
loopne
sahf
int3
or
dec
jnp
test
xbegin
dec
jecxz
or
jg
mov
bound
mov
xchg
lahf
inc
retf
sub
int3
fcmovu
pusha
loope
jo
inc
mov
inc
sub
mov
rol
cli
push
mov
pop
inc
pop
and
xor
pop
daa
or
pusha
stos
imul
xchg
cmp
ret
xor
ins
pop
push
scas
push
hlt
(bad)
cmps
(bad)
mov
cmp
jecxz
add
pusha
sbb
ja
stos
and
xchg
leave
lock
pusha
mov
fidivr
or
(bad)
fisub
cmp
push
jns
call
jmp
jno
in
push
pusha
push
xor
and
fnsave
movs
cmp
sbb
pop
jmp
repnz
loopne
cmp
push
adc
fisttp
mov
or
jnp
xor
lock
push
ror
sub
jmp
push
lock
sub
mov
mov
mov
ss
imul
sub
xor
add
or
push
push
mov
outs
popf
movs
cli
cmp
into
mov
repnz
jae
lea
retf
xor
add
(bad)
cmps
cmp
ins
xchg
fwait
mov
jb
sahf
xchg
ds
dec
push
cmp
aas
or
(bad)
and
and
dec
fistp
dec
jae
xor
sar
sbb
aas
mov
jne
push
xor
pop
ja
jno
mov
mov
fisttp
into
xor
movs
cli
or
and
jmp
and
(bad)
sbb
dec
jnp
fidivr
mov
xchg
jo
jmp
and
hlt
mov
mov
aad
mov
cmp
fcmovu
dec
imul
fidivr
or
mov
arpl
push
pushf
sbb
pop
add
sub
add
(bad)
jbe
jb
mov
add
push
popf
xor
mov
pop
(bad)
fist
inc
jbe
mov
mov
cmp
mov
and
rol
mov
push
ja
mov
outs
adc
dec
ins
sahf
lahf
(bad)
lds
ds
cs
cld
lock
into
ss
pop
mov
cmp
jns
mov
mov
jecxz
arpl
ficom
xor
push
adc
dec
pop
call
movs
mov
xor
int3
test
xchg
std
add
lods
pop
call
mov
rcl
pop
(bad)
outs
xchg
(bad)
mov
test
inc
mov
inc
xor
push
ror
push
ins
push
adc
popf
mov
fild
retf
xor
sbb
sub
mov
jp
into
cli
cmp
inc
fcmovu
xchg
aas
mov
pop
and
popf
dec
lds
mov
loope
jno
jmp
mov
ja
mov
loop
test
inc
imul
fdivr
ds
icebp
ficomp
and
jg
mov
dec
pop
imul
cmp
jg
loope
mov
adc
pop
or
push
and
das
rol
arpl
ins
pop
adc
mov
sbb
and
mov
xor
jle
cdq
jnp
mov
mov
(bad)
jmp
sub
rcl
mov
imul
scas
xor
out
call
sbb
push
sub
push
add
dec
mov
pop
add
test
mov
cli
sbb
out
sub
aaa
hlt
pop
pop
jnp
xor
pop
push
(bad)
test
jl
mov
in
out
dec
sti
jb
popa
jns
cdq
sub
sar
cdq
shl
xor
xchg
imul
sbb
inc
mov
sbb
dec
jns
adc
ss
sbb
(bad)
xlat
arpl
add
pop
mov
jnp
add
or
push
(bad)
int3
sbb
sbb
xor
jo
test
or
addr16
test
xor
sbb
xor
call
xchg
sbb
gs
lods
push
neg
cmps
jl
xchg
in
cli
mov
sbb
aas
ret
cmp
sub
inc
out
pop
shr
pop
sub
and
shl
loopne
cs
cmps
int
dec
or
bound
dec
inc
and
add
clc
imul
and
aad
sub
or
scas
popf
aas
enter
ins
sbb
mov
outs
pushf
aam
pop
call
mul
movs
cwde
ret
inc
js
mov
jl
xchg
pushf
imul
mov
dec
int
pop
cs
ret
jae
cmp
jge
imul
cmp
jnp
cmps
lahf
test
ds
inc
loope
cmp
pop
pop
jmp
cmp
ds
daa
lock
adc
add
into
mov
int3
icebp
movs
and
and
dec
sahf
ror
sub
rol
mov
jg
xchg
mov
xor
aam
repnz
push
add
ficomp
or
test
and
push
ins
push
lahf
imul
inc
ficom
push
dec
loopne
jae
sub
jbe
dec
dec
mov
sub
push
cmp
fsub
xor
pop
arpl
sub
mov
dec
stos
cld
mov
out
add
(bad)
lea
rol
mov
les
mov
xor
stc
hlt
movs
retf
inc
mov
jmp
inc
jmp
push
adc
mov
sub
outs
jmp
popa
xor
and
push
imul
pop
in
imul
sub
into
in
add
jge
mov
dec
xchg
retf
jge
inc
mov
xchg
mov
adc
cmc
jmp
shr
mov
sbb
movs
xchg
ds
in
(bad)
xchg
idiv
inc
push
icebp
test
jnp
push
pop
sbb
xchg
mov
nop
sbb
add
pop
arpl
push
sbb
icebp
fwait
into
mov
enter
cli
jle
inc
call
and
cmp
add
jl
mov
mov
in
aaa
and
daa
mov
je
fimul
movs
in
xchg
les
and
inc
or
lea
repnz
lds
sahf
test
retf
sub
into
fist
xor
pop
jnp
jno
daa
mov
ins
test
mov
push
pop
call
sti
stc
das
mov
jne
jle
fild
add
or
sahf
outs
adc
sub
mov
dec
ror
sub
jecxz
jmp
push
push
mov
js
mov
push
out
(bad)
mov
pushf
mov
ja
test
add
loop
not
aam
jl
mov
ss
cmp
pop
inc
cmp
cmp
mov
add
cs
gs
sub
cmp
xor
jo
adc
fild
mov
and
cli
and
fst
mov
repnz
push
jle
push
mul
cdq
dec
repnz
sub
mov
scas
ins
sbb
dec
(bad)
fsubr
mov
cmp
aaa
mov
fild
cmp
bound
aaa
sub
icebp
fisttp
dec
rol
ins
add
lds
aaa
inc
imul
pop
fild
sahf
jl
lea
ja
mov
out
fbstp
inc
jbe
(bad)
jo
fcom
cmp
loop
je
xchg
popa
and
mov
movs
xchg
pop
fwait
mov
js
xchg
ret
lods
(bad)
dec
ins
popf
add
mov
and
mov
stos
and
push
stos
aaa
sbb
pusha
test
ds
push
(bad)
aas
mov
gs
arpl
sub
shrd
mov
fisttp
nop
xchg
pushf
fcom
dec
fs
fisubr
shl
mov
xchg
pop
ss
sbb
ret
mov
out
fisttp
xchg
cwde
push
loope
clc
dec
add
xchg
xchg
lods
ja
inc
push
pop
pop
mov
fld
jns
lea
ffreep
jno
je
in
add
jb
mov
mov
stos
jg
fmul
call
(bad)
fst
out
jge
lea
scas
(bad)
fs
mov
xchg
mov
adc
xchg
add
not
sbb
inc
enter
loopne
outs
mov
call
int3
cld
fs
sub
or
in
or
adc
out
das
test
xor
pop
sbb
add
into
inc
or
ja
mov
pop
(bad)
leave
mov
xchg
jl
je
shl
pushf
in
push
pop
daa
(bad)
rol
popf
mov
pop
mov
jmp
pop
adc
pop
out
xor
xlat
lock
jo
jg
aaa
jge
adc
xchg
mov
stc
inc
loope
sbb
cmp
and
push
add
pop
fld
cmps
push
inc
xchg
or
cmps
xor
enter
jnp
fisubr
mov
dec
inc
cmps
adc
stc
test
dec
ja
mov
push
cmp
test
stos
jo
dec
jmp
push
sti
and
pop
outs
jl
push
pop
pop
xchg
mov
fild
in
or
cmp
xor
mov
jle
stos
jg
mov
mov
xor
inc
out
xlat
xchg
aaa
mov
jb
ins
add
pop
lds
dec
jecxz
jns
stc
fadd
lahf
add
stos
jns
add
cmp
cmc
test
ds
fisub
dec
stos
aaa
sbb
dec
call
ins
out
xor
inc
iret
or
popa
jl
mov
gs
sahf
pop
xor
xor
dec
(bad)
int
adc
push
push
mov
xchg
dec
jecxz
jl
leave
shl
mov
jnp
xchg
mov
mov
out
jg
mov
ds
dec
jmp
push
and
cmp
jbe
mov
out
sti
rol
mov
inc
fisttp
or
and
or
popa
(bad)
xchg
popf
mov
pop
daa
sbb
push
xor
jb
scas
jo
mov
dec
xchg
out
inc
in
jne
in
out
push
jmp
in
or
hlt
sbb
fsub
inc
sbb
mov
or
jmp
and
sbb
std
inc
cmp
mov
sahf
cmp
or
sub
xor
cmp
mov
je
jg
xor
xchg
lods
lahf
pop
push
or
daa
sahf
ret
dec
fdivr
js
pop
ficomp
sub
xchg
add
push
not
outs
jnp
xchg
sbb
xchg
mov
sbb
std
cld
loop
clc
pop
inc
or
cmp
dec
pop
or
pop
fcomp
loop
or
and
sub
jo
addr16
sahf
ss
dec
push
(bad)
adc
xchg
mov
pusha
test
jne
jns
inc
mov
mov
dec
xchg
sar
icebp
mov
adc
pusha
or
fs
rcr
cdq
mov
sbb
cs
cld
repz
and
pop
inc
push
xor
lahf
cmp
test
cmc
dec
push
pop
xor
sub
add
ins
fnsave
cmp
mov
inc
in
xor
mul
inc
jle
shl
sar
fs
js
in
ror
cmps
sar
push
xchg
xchg
adc
std
jecxz
ret
outs
mov
div
or
clc
cs
jl
mov
inc
cs
mov
add
inc
pop
les
sbb
adc
arpl
pop
xor
cli
mov
ins
in
fist
jmp
inc
push
lea
mov
dec
pushf
xlat
mov
hlt
mov
xchg
aad
mov
test
jnp
mov
xor
lds
out
mov
in
aad
aaa
sbb
icebp
retf
imul
lods
ins
pop
inc
lods
imul
mov
sub
push
lea
mov
js
ret
dec
cmp
pushf
daa
stos
pop
out
pop
bound
repz
or
and
int
xchg
cmp
imul
pop
lds
xchg
fidivr
cmc
(bad)
icebp
adc
outs
xchg
fwait
xchg
ret
shr
xchg
lahf
xchg
push
xor
jmp
inc
mov
adc
mov
pusha
sbb
mov
push
je
mov
shl
xchg
ds
dec
inc
jle
out
sub
adc
sub
mov
jp
into
loope
cmp
dec
sahf
fstp
repnz
fldcw
cmps
or
hlt
xchg
call
call
add
test
and
jmp
push
inc
stos
pop
push
mov
mov
mov
jmp
arpl
es
or
or
push
mov
aaa
movs
cmp
lahf
lods
xchg
cmp
dec
jecxz
call
out
jbe
fisubr
sahf
cmp
jne
mov
xchg
adc
ja
mov
imul
push
aas
int3
test
mov
or
es
test
push
sar
push
dec
xchg
ins
sbb
popf
inc
es
popf
mov
sahf
push
sub
cld
jl
arpl
iret
sbb
mov
mov
lods
jg
lea
arpl
inc
lods
sti
or
imul
clc
jg
iret
xchg
push
xchg
xor
jecxz
movs
mov
popf
test
sbb
dec
bound
fisubr
cs
cli
push
imul
movs
das
ins
pusha
mov
or
and
add
mov
jae
call
ins
inc
add
inc
iret
xor
imul
mov
sti
xor
and
lock
mov
pop
push
call
iret
xchg
dec
retf
out
xor
ins
lock
imul
hlt
sbb
dec
ins
mov
dec
jmp
in
cmp
or
(bad)
xlat
sub
ds
data16
add
jl
aaa
and
mov
stc
cli
aas
mov
dec
push
push
aaa
sti
cmp
jbe
pop
lods
adc
add
data16
inc
movs
sub
xchg
xchg
add
fistp
jmp
jb
xchg
pop
jecxz
(bad)
ins
and
addr16
jbe
sti
ror
mov
js
fwait
scas
and
mov
mov
retf
inc
jg
mov
xor
retf
xor
adc
mov
dec
pushf
mov
mov
stc
cli
sbb
or
bound
add
pop
xor
cdq
inc
das
push
ins
loope
dec
in
add
lds
in
loop
call
sbb
mov
or
cmps
imul
push
daa
(bad)
dec
cdq
mov
cmp
inc
clc
and
daa
arpl
jno
cmp
(bad)
retf
fistp
fdivr
jmp
fidiv
or
sbb
push
adc
std
cmp
iret
xor
sti
push
pop
jb
fmul
cld
pop
popf
ret
xchg
popa
(bad)
nop
jbe
(bad)
test
mov
xchg
mov
dec
mov
inc
jecxz
retf
sbb
(bad)
push
jmp
arpl
stos
xor
pusha
movs
pop
aas
dec
cwde
mov
cmps
outs
pushf
dec
mov
jbe
jb
hlt
inc
or
sub
imul
mov
xchg
and
fcomp
cmc
push
jnp
test
cmp
cld
ja
sti
rol
mov
jg
xchg
test
push
cmp
lds
mov
push
cli
pop
fisttp
push
dec
sar
enter
inc
sub
push
lahf
imul
jg
stc
and
mov
sbb
stc
inc
add
pop
mov
(bad)
mov
(bad)
sbb
ins
test
cwde
sbb
jle
fimul
mov
pusha
test
xchg
jns
stc
shl
mov
mov
sti
call
out
and
fimul
cmp
fnsave
jnp
jae
daa
add
test
jp
fld
jge
lea
cmp
fs
(bad)
aaa
jae
add
inc
inc
mov
outs
xchg
cmps
test
jmp
cmp
cld
sbb
jge
jl
fst
xchg
inc
retf
stos
inc
sub
sar
(bad)
mov
inc
xchg
test
xor
(bad)
pop
sbb
(bad)
xor
enter
push
pusha
outs
test
inc
inc
push
mov
scas
aam
inc
mov
out
jl
mov
jne
pop
fiadd
push
sbb
sub
dec
fisubr
mov
fwait
mov
inc
int3
mov
inc
sahf
loopne
cld
inc
add
nop
stc
cmp
in
sbb
shl
test
pop
mov
inc
push
jae
cmp
pop
fistp
sub
sbb
movs
mov
aaa
sub
mov
jne
push
and
jl
and
and
data16
pop
(bad)
xlat
(bad)
sbb
and
fst
jmp
jne
popf
pop
hlt
fild
call
nop
data16
mov
scas
mov
pop
sbb
fsubrp
push
dec
loope
stos
jmp
(bad)
dec
repz
cmc
mov
idiv
fistp
cmp
or
push
sub
lods
mov
sub
cwd
lea
mov
add
jns
sar
dec
xor
pushf
das
test
hlt
pop
dec
stos
jnp
mov
ja
xlat
stos
adc
and
out
adc
and
inc
xchg
retf
jmp
jno
call
push
adc
idiv
out
mov
fwait
fs
sub
sub
push
cmp
push
mov
cmp
xor
dec
fwait
test
dec
out
fimul
cwde
icebp
pop
jae
inc
enter
or
sub
jb
sbb
ror
sub
nop
mov
ins
test
sbb
dec
rcpps
and
pushf
imul
xchg
imul
mov
xchg
fiadd
lods
test
sbb
ss
aad
lahf
cmp
jo
or
push
test
pop
mov
stos
popa
adc
mov
inc
retf
inc
add
xchg
sub
mov
gs
add
icebp
cdq
adc
jae
stos
dec
hlt
lds
loop
jbe
lock
daa
out
mov
sub
mov
mov
leave
retf
inc
add
(bad)
fild
or
cmp
pusha
movs
or
inc
sahf
cs
ins
pop
mov
arpl
iret
xor
sub
and
push
add
add
data16
jge
mov
jnp
movs
mov
out
test
push
les
sub
clc
addr16
ret
lahf
inc
loope
pusha
dec
xchg
fstp
test
add
in
fdivr
(bad)
cld
popa
ins
mov
xor
dec
iret
ds
fld
jmp
jnp
sbb
xchg
fwait
test
xor
repnz
in
cli
sub
out
jbe
gs
add
pminsw
movs
push
xor
sub
movs
cli
add
das
ins
neg
mov
loope
sbb
lds
cld
cmps
loopne
pushf
in
sub
rol
test
fnstenv
mov
add
call
stos
aam
data16
sub
inc
stc
ja
adc
mov
inc
arpl
(bad)
mov
pusha
jecxz
add
inc
fild
push
js
adc
daa
mov
sahf
xor
call
(bad)
out
pop
(bad)
xchg
add
dec
outs
shl
sahf
and
mov
push
nop
movs
dec
or
test
mov
pop
in
shr
mov
es
loop
xor
pop
mov
sbb
int
xlat
sub
xor
pop
ins
push
test
cwde
int
sub
stc
ins
call
inc
xor
xor
pop
sub
das
rol
popw
cmps
or
mov
es
ret
aas
(bad)
hlt
jo
inc
push
je
pop
loopne
mov
mov
loopne
ficom
xchg
jnp
ins
test
mov
inc
cmps
dec
dec
mov
adc
(bad)
pop
inc
xchg
fmul
fnsave
or
jmp
test
push
inc
rcr
push
dec
dec
xchg
fwait
mov
out
add
add
pop
or
add
mov
adc
inc
ins
in
cmps
cli
xor
push
cmp
xchg
(bad)
addr16
addr16
pop
std
mov
dec
pushf
cld
sti
dec
pushf
mov
std
je
inc
mov
imul
cmc
div
scas
xlat
outs
imul
fisttp
pop
jg
scas
adc
test
popa
fwait
mov
fnstsw
jnp
clc
pop
push
jae
fidiv
or
pop
mov
mov
inc
sahf
test
dec
sahf
aaa
mov
dec
push
fimul
mov
in
jmp
jns
sar
sbb
pop
lods
mov
adc
test
inc
inc
loop
pop
xchg
pop
fcom
push
nop
sti
test
ret
adc
sub
adc
daa
mov
rcl
fisttp
ffreep
jbe
popa
inc
mov
sbb
sbb
jg
adc
test
dec
lahf
scas
cmp
(bad)
popa
fstp
push
mov
js
stos
stos
popa
retf
mov
mov
out
lock
scas
mov
adc
xchg
mov
inc
jmp
inc
retf
push
aaa
ds
(bad)
fild
xor
pcmpeqw
pop
jl
mov
mov
jmp
push
sub
xor
or
cmps
dec
pop
shr
jnp
mov
dec
fwait
jmp
popa
les
push
mov
ins
xchg
loope
imul
push
cmp
adc
stc
div
mov
lds
clc
cmp
sub
stc
aas
jns
dec
test
inc
mov
push
ret
or
aam
cdq
repz
jmp
pusha
jne
out
pop
or
and
mov
or
mov
pusha
fwait
(bad)
xchg
xor
sbb
jp
mov
dec
xchg
les
es
in
add
imul
xchg
cmp
shl
dec
push
lahf
xchg
sub
aam
fsubr
cmp
bound
adc
mov
shr
fwait
xor
and
add
fwait
das
mov
(bad)
push
push
dec
bound
pop
ins
out
test
mov
pop
pop
lods
pop
popf
xchg
loopne
pushf
cld
sti
dec
retf
adc
xlat
mov
push
cmp
nop
das
add
loopne
fsub
inc
(bad)
jmp
in
and
loop
int3
jns
xor
adc
push
clc
fs
ret
add
std
add
adc
jae
mov
jns
fnstcw
cmps
cmp
mov
das
xor
aas
sti
cli
xchg
daa
mov
push
push
stos
pop
loopne
lock
add
push
lock
test
dec
sbb
jge
mov
add
repnz
(bad)
fsub
fldcw
cs
call
mov
push
mov
jp
fwait
int
xor
cli
or
jae
int
sbb
and
add
mov
push
xchg
mov
(bad)
xchg
dec
xchg
dec
jne
push
movs
and
movs
cmc
pop
mov
(bad)
jg
xchg
push
cmp
dec
stos
cld
cmps
sar
xchg
xchg
pop
mov
in
cdq
xor
ficomp
sub
repnz
out
data16
js
inc
mov
dec
daa
jne
mov
out
pop
call
sbb
int
or
add
adc
imul
sbb
(bad)
sub
fld
lock
jp
sub
xchg
ret
mov
daa
int3
retf
jmp
xchg
pop
arpl
test
test
repz
push
ret
inc
loopne
lds
inc
inc
out
cli
mov
fs
push
outs
pop
add
pushf
xchg
mov
add
sar
cmp
push
sbb
jns
ja
lea
lea
dec
jmp
les
and
pop
repz
pop
in
loopne
loopne
gs
jmp
xchg
out
shl
mov
out
test
xchg
sub
push
cs
dec
aam
loop
(bad)
sub
push
inc
arpl
pushf
mov
outs
loopne
or
and
adc
cdq
inc
stos
xor
dec
jno
jl
xchg
aaa
seto
dec
out
enter
sti
jne
jge
push
test
sti
mov
pushf
sbb
jmp
push
(bad)
ror
mul
ja
mov
and
repnz
push
pop
ds
fdiv
jo
push
pushf
or
push
mov
aas
push
icebp
mov
fild
ret
aas
movs
cld
inc
pusha
inc
xor
adc
jl
test
xor
(bad)
sbb
daa
dec
rcr
and
sti
pusha
les
jo
pop
aad
cld
dec
pushf
les
jmp
(bad)
mov
jnp
mov
sbb
xlat
repnz
into
test
test
repnz
(bad)
fistp
inc
jo
pop
mov
push
cs
lahf
mov
pushf
add
clc
das
mov
ins
push
sbb
sbb
mov
pusha
in
lods
test
rcr
ds
aam
inc
jb
pop
(bad)
mov
popf
inc
loop
jb
std
xlat
xchg
add
ins
xchg
lea
inc
mov
sti
jmp
lods
push
int3
pop
lock
stc
enter
pop
jb
dec
mov
inc
cs
out
mov
pop
jmp
addr16
rcl
xor
mov
mov
stos
cmp
sbb
and
cmps
xchg
xor
jbe
mov
push
mov
mov
repnz
or
aam
and
ins
adc
mov
xor
mov
(bad)
lahf
inc
aad
call
(bad)
jmp
stos
adc
ins
lea
jge
mov
xchg
cmp
call
fs
(bad)
cmp
out
push
mov
mov
test
call
cmps
and
jne
popf
pop
repz
lock
adc
arpl
xchg
ja
fcmovnbe
xchg
adc
mov
jo
mov
jmp
stos
dec
jecxz
fiadd
xor
into
in
inc
fidiv
pop
popa
je
bound
jno
mov
stos
aaa
fdivr
imul
mov
push
fs
xor
sub
jae
and
add
dec
movs
js
movs
sub
mov
ins
out
enter
sti
jne
push
inc
push
test
dec
xchg
shl
and
pop
mov
imul
xchg
and
icebp
repnz
lds
cwde
mov
sar
pop
cmp
cld
iret
jb
bound
dec
mov
ins
push
sahf
xor
or
mov
mov
sar
or
and
or
sub
cmp
jp
mov
jb
mov
push
sbb
dec
in
int3
(bad)
cmp
andps
pop
xchg
ret
xor
mov
loopne
xchg
mov
jnp
mov
iret
repnz
fdiv
dec
jle
test
fwait
dec
clc
cmp
sub
(bad)
fist
sbb
dec
adc
pop
scas
inc
cmp
test
fiadd
aas
mov
cmovno
aad
or
and
cmp
mov
pusha
xchg
mov
dec
call
repnz
dec
cmps
push
(bad)
mov
ins
call
movs
pop
adc
std
test
cwde
cwde
int
test
push
xchg
sahf
test
cs
mov
aad
cs
test
push
jmp
push
test
mov
jmp
addr16
xor
arpl
nop
and
stos
jge
cmps
sbb
lea
imul
mov
ins
popa
arpl
dec
fwait
les
adc
fmul
xchg
push
mov
(bad)
sbb
lods
push
xchg
pop
(bad)
sub
jmp
and
stos
pop
dec
jne
jns
pusha
jmp
pusha
out
cli
add
jns
(bad)
xor
jne
xor
add
pusha
mov
push
sahf
mov
push
xor
jl
stc
movs
aaa
mov
jnp
mov
dec
cwde
mov
add
data16
pop
jne
mov
sbb
idiv
adc
stos
inc
aad
in
cmp
int3
(bad)
fadd
jo
pop
mov
push
daa
pop
lahf
mov
mov
repnz
js
clc
push
popa
inc
xor
daa
or
and
inc
test
lods
ja
mov
mov
sub
out
enter
sti
data16
jae
popf
pop
sti
cmps
lock
mov
popf
imul
js
fcomi
test
hlt
inc
xchg
gs
cmps
xchg
sbb
stc
in
fcmovu
dec
js
test
icebp
push
sub
ds
out
call
add
inc
mov
xchg
loopne
or
and
cmp
mov
add
jnp
mov
xchg
or
and
(bad)
xchg
adc
jbe
(bad)
pop
stc
mov
inc
mov
cmps
je
std
retf
xchg
pop
out
mov
cmps
ror
xchg
mov
cmp
gs
xchg
mov
cmp
std
out
ficomp
jo
jle
pop
imul
sub
fwait
fwait
mov
enter
out
jle
pop
xor
xor
je
adc
imul
mov
jb
mov
sbb
xor
rcl
repnz
popa
inc
scas
push
repz
pop
fwait
les
and
mov
ror
test
push
mov
cld
not
xchg
mov
push
cs
call
fstp
sbb
dec
lahf
mov
pushf
cmp
mov
mov
addr16
in
or
push
mov
mov
(bad)
cmp
mov
push
xor
jl
rcl
jmp
pop
hlt
cmps
lock
sub
ja
xchg
jne
test
xchg
int
movs
(bad)
mov
jo
xchg
cmp
pop
pop
xchg
mov
jg
xor
cmp
cld
loop
fidiv
or
mov
jp
mov
fisub
std
sub
bnd
push
addr16
mov
mov
mov
jle
cdq
mov
aaa
push
dec
(bad)
xchg
adc
add
pop
in
cmc
inc
xchg
iret
xchg
popa
loop
push
and
ror
(bad)
rol
cmp
fs
repnz
fmul
fwait
test
ds
sti
leave
jmp
lods
adc
dec
test
cmp
mov
pop
jmp
jb
(bad)
pop
sbb
pop
mov
mov
mov
add
and
iret
test
mov
push
neg
inc
mov
dec
sahf
aad
repnz
aam
adc
ins
sbb
test
ds
jae
mov
fdiv
cs
call
stos
pop
jne
lea
pop
xchg
mov
lods
xor
stc
outs
std
ror
lahf
clc
bound
xor
adc
cwde
cmp
or
pushaw
mov
popa
mov
test
rcr
adc
ret
jb
jnp
push
lea
cmp
inc
pushf
xchg
jbe
cmc
jmp
stos
(bad)
sbb
test
fdiv
(bad)
out
ins
mov
pop
fimul
ds
je
xor
dec
mov
ins
push
test
and
mov
mov
std
or
jno
popa
cmp
xor
add
mov
in
dec
test
and
xchg
dec
and
test
mov
jns
sbb
push
test
pop
xchg
ret
add
jae
fucomip
stos
and
or
stos
jl
cdq
stos
mov
aas
fisttp
push
mov
inc
xlat
ja
sub
fadd
fist
dec
jb
dec
mov
inc
cmp
mov
mov
jmp
pop
xor
pop
sbb
das
mov
stos
push
mov
add
and
icebp
xchg
adc
jnp
cmps
pop
mov
mov
adc
aam
add
ins
sbb
test
das
rol
mov
inc
xchg
pop
call
cli
leave
jmp
scas
sbb
mov
sub
mov
(bad)
cli
and
and
cmp
mov
outs
pop
or
dec
addr16
not
xchg
adc
jbe
movs
dec
cmc
(bad)
lock
xor
and
test
stos
jecxz
xchg
imul
and
repnz
repz
ins
cwde
mov
out
jp
sub
cld
ret
push
in
cmp
cmp
addr16
mov
xchg
mov
fild
dec
mov
xor
and
aaa
xor
cmp
sub
daa
dec
(bad)
mov
mov
pop
es
repz
pop
test
nop
push
and
ret
jecxz
xchg
jl
cdq
xchg
mov
xor
lock
push
jmp
cs
call
stos
sbb
mov
sub
mov
retf
iret
ds
push
jecxz
aas
mov
addr16
jmp
sbb
adc
and
cmp
cmps
xchg
or
dec
stc
xlat
mov
mov
jnp
lods
pop
mov
loopne
in
push
pop
sti
ror
xchg
ja
cmps
stos
xor
(bad)
(bad)
inc
pop
mov
inc
jecxz
cld
cmp
xor
icebp
fist
dec
jo
push
stos
es
mov
inc
cdq
mov
cwde
cmp
fisub
std
sub
ds
pop
push
arpl
and
scas
jbe
popf
dec
inc
popf
xchg
cli
(bad)
add
shl
ins
popa
and
jl
les
and
stos
test
js
mov
ror
stos
dec
xchg
mov
adc
sar
adc
mov
cmp
sub
clc
and
pop
test
inc
sub
mov
pop
jmp
jno
clc
xor
das
mov
stos
outs
inc
pushf
sub
cmps
call
test
neg
dec
lods
pop
sti
movs
(bad)
dec
xchg
rcl
rol
(bad)
mov
ja
test
adc
stc
clc
sbb
lods
push
fwait
dec
clc
cmp
daa
out
hlt
leave
in
sbb
dec
mov
inc
cmp
lahf
mov
mov
fdivr
imul
mov
pop
fs
xor
sub
js
and
aas
test
movs
push
movs
xor
mov
out
xchg
pop
mov
pop
pop
lea
xchg
popa
mov
xchg
stos
jne
std
fild
mov
ror
test
jae
xchg
sbb
lods
push
fistp
sub
retf
loope
dec
or
or
mov
jl
mov
in
jmp
push
addr16
mov
ins
pusha
scas
jbe
pushf
ds
popf
test
cli
aam
add
jbe
stos
jae
iret
lock
xchg
xchg
dec
in
jb
mul
test
hlt
imul
fs
cli
loope
(bad)
fiadd
xchg
mov
jecxz
retf
sbb
jmp
push
(bad)
xor
cs
push
movs
dec
and
mov
mov
jmp
dec
cmp
pop
sbb
add
xchg
cmp
outs
cmp
sbb
cmp
fild
les
inc
stos
pop
aad
cld
addr16
les
cs
test
push
jnp
mov
xor
xlat
repnz
aad
ins
cwde
test
xchg
pop
fldcw
fistp
dec
jo
dec
mov
ins
push
lea
mov
outs
sar
or
and
cmp
lods
push
mov
mov
js
mov
ins
out
enter
sti
jne
jge
push
test
sti
mov
dec
xor
adc
rol
mov
push
ja
test
in
fcmovu
dec
imul
or
sub
std
bound
dec
mov
ins
push
test
and
mov
scas
adc
fild
stc
add
gs
pop
sbb
pop
mov
cdq
jg
mov
pop
xchg
mov
sbb
xor
stc
call
inc
inc
stos
pop
in
cmc
inc
xchg
ret
adc
jae
retf
jmp
add
imul
push
dec
mov
iret
repnz
into
fadd
lods
scas
jns
pop
fisubr
cmp
repnz
fadd
aas
jo
pop
mov
push
cs
lahf
cmps
stos
mov
int3
jmp
mov
push
push
or
sbb
push
xor
mov
and
mov
call
push
lods
pop
jecxz
fidivr
in
mov
xchg
xchg
jb
jmp
inc
and
ja
cmps
mov
mov
ret
xchg
fwait
cmp
pop
fmul
adc
cld
leave
cmp
dec
jo
pop
fist
dec
push
cdq
ja
push
lahf
mov
mov
out
clc
das
mov
dec
push
sub
add
sub
dec
dec
movs
cmp
lods
test
rcr
adc
pop
push
lea
iret
cld
jnp
les
sub
mov
nop
lahf
stos
stc
dec
mov
(bad)
push
xor
cli
cmp
dec
imul
fdivr
fcomp
jo
pop
rcr
push
test
pop
dec
lahf
test
mov
sub
jg
cli
or
sbb
cmp
(bad)
sbb
movs
dec
movs
ds
or
cmp
fistp
dec
inc
scas
push
repz
jl
les
and
les
mov
pusha
nop
xchg
xchg
in
icebp
dec
jge
lods
push
rcr
sub
cli
neg
push
inc
dec
mov
push
ss
mov
fild
add
push
dec
int
or
xor
cmp
mov
inc
movs
cmp
mov
inc
fcmovbe
xchg
ds
jb
outs
inc
ins
fisubr
xchg
jmp
jb
sahf
push
and
out
sub
imul
outs
jne
mov
cs
inc
popf
test
fld
inc
jl
dec
mov
inc
or
mov
mov
stc
mov
inc
dec
int
sbb
mov
mov
ja
mov
pop
cli
shl
repnz
jbe
mov
dec
mov
fwait
jge
lock
movs
mov
jo
mov
fmul
fwait
add
retf
xor
clc
test
push
jmp
pusha
add
pop
push
sti
inc
sub
mov
jmp
popa
sbb
cmp
pushf
aaa
add
imul
dec
xor
sbb
push
jns
fist
icebp
jp
push
lea
xchg
cmc
jl
ret
mov
jbe
test
xor
push
xchg
arpl
mov
pusha
or
repnz
lds
cwde
mov
sub
cmp
cld
iret
dec
ret
cmp
dec
mov
outs
and
mov
mov
int3
leave
add
pop
or
xor
das
mov
stos
imul
(bad)
xor
rol
repnz
push
and
repz
stos
aad
fs
sub
aam
and
ins
adc
test
adc
(bad)
xchg
in
lock
jge
lods
push
fwait
pop
lock
cld
fdiv
or
sbb
and
mov
scas
scas
cmp
ins
stc
inc
popa
dec
int
sbb
das
xor
push
pusha
stos
outs
adc
popf
sbb
popf
adc
jbe
mov
dec
mov
xchg
addr16
cmp
ror
(bad)
mov
jo
mov
cli
(bad)
cld
repz
jns
add
retf
xor
clc
into
retf
adc
cmp
push
cs
test
mov
sub
dec
loopne
or
and
adc
mov
stos
xor
arpl
jl
lea
pop
nop
mov
dec
out
enter
sti
jne
pop
jl
test
jecxz
(bad)
dec
mov
xchg
pop
and
call
xchg
pusha
mov
iret
repnz
lds
cwde
mov
sub
cmp
cld
fdiv
dec
jo
dec
stos
das
dec
push
sahf
sub
jns
cmps
sahf
xor
jmp
mov
pop
popa
jns
retf
jp
adc
jl
test
xor
mov
in
stc
call
icebp
je
jo
pop
in
cmc
inc
xchg
ret
mov
out
xchg
jb
test
mov
clc
sahf
shr
addr16
mov
iret
repnz
(bad)
inc
jle
scas
ins
mov
ds
push
in
and
data16
sbb
mov
sub
mov
mov
in
aas
mov
addr16
ret
cmp
mov
jl
lods
ja
mov
mov
xor
enter
sti
in
js
popf
pop
mov
popf
adc
xchg
jle
test
xchg
mov
jo
xchg
mov
mov
cmp
aas
ds
(bad)
pop
pushf
cmp
xor
imul
pushf
aaa
fdivr
jmp
mov
pop
imul
pop
and
pop
test
movs
or
movs
xor
in
mov
enter
sti
jne
ins
dec
push
test
adc
adc
xchg
jge
test
add
push
test
stos
mov
xchg
test
in
fcmovu
dec
imul
es
ds
out
scas
pop
pushf
cmp
dec
rcr
imul
add
lahf
stos
fwait
test
sub
das
mov
push
fs
xor
push
xor
push
stos
and
js
movs
pop
movs
sub
mov
cmp
fild
lock
outs
fmul
mov
ins
fwait
les
adc
sar
mov
jge
enter
in
test
xchg
aad
jecxz
lods
or
ds
jmp
push
loopne
ja
jle
pop
outs
inc
mov
jno
mov
fild
out
add
push
dec
int
or
arpl
imul
xor
aas
jg
cmps
cdq
sbb
xor
in
push
neg
inc
mov
loop
(bad)
dec
xchg
aad
div
lock
cdq
stos
int
test
pop
xchg
sahf
test
das
fisttp
outs
mov
cmps
xor
cmp
test
push
jmp
dec
jno
inc
sub
mov
jmp
addr16
pop
push
arpl
push
jecxz
mov
movs
data16
lahf
dec
inc
popf
test
int
test
rcr
push
test
jecxz
(bad)
dec
xchg
sbb
shl
mov
ja
mov
push
xor
ror
add
int
cs
out
es
dec
cmps
pop
popa
push
test
mov
icebp
or
retf
jo
adc
inc
imul
sub
push
dec
(bad)
mov
mov
push
push
fisttp
mov
pop
test
nop
push
and
ret
jecxz
xchg
jg
xchg
lds
or
lahf
inc
fstp
inc
cs
call
mov
inc
cmp
mov
lods
pop
sub
ins
stc
fld
mov
jbe
push
dec
int
push
add
test
stos
adc
push
mov
push
cld
stos
xchg
xor
ins
jp
mov
jecxz
(bad)
dec
cmps
aad
addr16
mov
mov
repz
(bad)
mov
jo
mov
fcom
fwait
add
retf
cs
stc
clc
retf
es
add
pop
inc
test
mov
jmp
push
arpl
cwde
and
scas
jp
aad
inc
popf
mov
dec
div
popf
adc
jbe
mov
inc
xchg
sbb
shl
mov
xor
mov
aaa
stc
fadd
mov
adc
xor
test
push
clc
sub
or
popf
push
sbb
mov
shr
cli
or
mov
jno
shl
mov
test
and
cmp
mov
push
and
jl
mov
lods
dec
fistp
xchg
ins
in
data16
rol
pop
jne
mov
addr16
repnz
lds
xchg
mov
push
and
fdivr
fmul
or
sbb
and
lahf
mov
stos
inc
fsubr
mov
inc
xor
cmp
push
mov
mov
mov
pop
popf
stos
test
and
ins
out
mov
sub
mov
jl
shl
and
ret
hlt
pop
xchg
gs
test
in
ffreep
dec
adc
dec
in
ds
pop
retf
add
pop
push
test
mov
jmp
push
arpl
pushf
and
scas
jnp
aad
inc
popf
and
mov
repnz
jbe
mov
pop
test
bound
out
shl
mov
ja
(bad)
xor
ror
add
retf
sub
ds
(bad)
aad
in
jo
dec
stos
outs
inc
mov
dec
lahf
cmps
test
das
cmp
ins
clc
jmp
mov
bound
xor
es
aaa
mov
test
xor
mov
in
int3
mov
mov
jb
jne
push
test
cmp
dec
in
push
adc
dec
or
test
out
lock
aam
jecxz
enter
cli
jmp
push
(bad)
xor
adc
movs
jno
jno
mov
mov
jmp
ja
mov
cmp
jmp
xor
xchg
stos
xchg
xor
jbe
scas
outs
repz
cmps
popa
jmp
jno
jmp
lahf
mov
push
mov
sbb
clc
pop
adc
cmps
dec
jecxz
clc
inc
cs
cld
stos
and
xor
adc
inc
fwait
jno
jge
mov
xchg
cmp
fimul
mov
jb
jle
int
sbb
arpl
imul
mov
jb
mov
sbb
sub
fist
icebp
jns
inc
stos
pop
in
cmc
jl
rol
mov
test
lds
and
xchg
mov
repnz
repz
ins
cwde
mov
sub
cmp
cld
iret
inc
in
and
dec
mov
ins
push
popf
arpl
jbe
mov
iret
inc
fdivr
imul
mov
push
fs
xor
sub
or
pop
fmul
cmps
jo
movs
cmp
(bad)
sbb
or
rcl
icebp
jnp
pop
lea
call
lock
test
js
movs
mov
xchg
mov
and
idiv
sbb
mov
sub
ds
rcr
dec
sub
es
mov
mov
fild
push
mov
dec
int
add
or
cmp
pop
icebp
imul
pop
movs
cmp
sar
outs
xor
ins
jmp
repnz
cmp
call
loop
xor
aam
adc
ins
sbb
jl
mov
xchg
loopne
ins
xchg
mov
jecxz
ficomp
pop
cmp
cld
std
jnp
xor
pop
outs
inc
mov
mov
retf
cli
push
mov
push
pusha
inc
xor
push
mov
stos
xor
jge
test
and
aas
jg
cmps
fwait
sub
iret
xor
in
neg
push
lods
outs
xlat
mov
dec
jmp
xchg
arpl
mov
xor
ror
mov
dec
xchg
test
xor
xlat
repnz
out
dec
fwait
test
adc
cld
cld
stos
push
fidiv
or
call
mov
jmp
addr16
xor
das
lods
daa
retf
sahf
jl
mov
je
xchg
or
and
cmps
xchg
xor
mov
ins
popa
pusha
stos
jbe
mov
jae
les
and
jmp
adc
ins
mov
jnp
xchg
add
call
jo
cwde
mov
loope
fisubr
pop
cmp
cld
fdiv
jo
inc
cwde
outs
imul
fwait
xchg
sub
push
jmp
mov
sbb
xor
and
addr16
cmp
adc
imul
jae
rcr
(bad)
mov
in
pusha
les
pop
lea
mov
dec
test
nop
push
and
(bad)
lahf
cwde
mov
sahf
ins
arpl
cld
xchg
xchg
mov
inc
cs
call
stos
sbb
test
mov
std
call
pusha
inc
xor
pop
or
push
test
imul
or
sbb
add
fist
cmc
push
and
push
mov
cdq
dec
repnz
rol
xchg
sar
jne
mov
cmp
iret
repnz
aad
ins
pushf
stos
fs
dec
in
ds
int3
cld
iret
jo
and
dec
mov
jb
jno
mov
stos
aaa
fdivr
imul
mov
inc
fs
xor
adc
addr16
and
cmp
cmps
push
in
mov
and
out
enter
sti
jne
pop
dec
push
test
aad
(bad)
dec
xor
xor
movs
mov
sbb
adc
clc
sbb
mov
sub
std
out
ficomp
cmp
jle
pop
imul
add
lahf
cmps
xchg
mov
cs
enter
sti
jno
jno
int
or
xor
add
pusha
fdivr
aam
inc
popf
(bad)
mov
leave
add
jmp
pop
retf
mov
pop
xchg
(bad)
mov
repnz
nop
xor
ins
test
jl
mov
push
and
aam
lock
fdivr
jecxz
leave
adc
sbb
jmp
push
(bad)
xor
pop
outs
inc
mov
xchg
mov
xor
fstp
cli
btr
push
dec
inc
xor
or
adc
jl
test
xor
mov
int3
mov
hlt
pop
andps
xchg
icebp
stos
push
in
push
adc
rol
(bad)
mov
jo
xchg
(bad)
push
xor
repnz
lock
fwait
inc
sti
push
in
cmp
cli
jmp
ja
dec
xchg
pop
outs
dec
call
mov
sub
pop
loopne
push
mov
xor
xor
jo
xor
fcomp
jg
fdivr
jg
cmps
test
cmp
popf
adc
pop
push
mov
js
mov
push
in
bound
in
mov
aam
or
ja
movs
cmps
adc
stc
in
(bad)
dec
addr16
mov
sub
fild
dec
jo
dec
fild
mov
out
mov
scas
inc
and
outs
std
jmp
sub
xor
das
mov
sahf
jg
movs
or
mov
and
xor
xor
in
push
gs
mov
pop
mov
mov
adc
(bad)
popf
pop
cli
jle
mov
push
call
sbb
lods
push
retf
pop
lock
int3
(bad)
fist
and
or
xchg
push
sbb
mov
ror
cli
pop
fcomip
pop
fs
std
xor
jo
xor
pop
jno
jg
xchg
xor
sbb
fistp
inc
inc
popf
pop
cld
mov
mov
fst
mov
mov
jbe
xchg
mov
inc
xchg
mov
xchg
sub
cmc
sti
fistp
or
inc
stos
sbb
test
pusha
jmp
dec
jmp
fs
je
fdiv
push
arpl
sbb
scas
adc
outs
daa
xlat
xor
cmps
pushf
cmp
std
loop
mov
jl
lods
pop
ffree
hlt
js
mov
je
in
mov
sti
arpl
mov
xchg
movs
cld
adc
stc
in
(bad)
dec
addr16
mov
sbb
xor
icebp
fist
xor
dec
mov
bound
inc
sub
mov
fisub
std
pop
mov
jbe
data16
xor
das
lods
push
fidiv
sahf
jg
mov
je
xchg
fldenv
jle
ins
popa
jge
jbe
mov
ins
test
nop
push
and
dec
lahf
rol
cmp
test
iret
repnz
jecxz
ins
cwde
mov
sub
pop
in
sub
sub
add
out
mov
pop
jmp
push
adc
and
adc
data16
fnstsw
je
rol
out
cmps
xchg
xor
jbe
scas
jp
mov
push
mov
jmp
or
aam
adc
ins
sbb
arpl
sti
fcom
xchg
or
clc
inc
cs
in
test
clc
ss
pop
mov
inc
or
mov
fsubr
mov
inc
xor
xor
imul
cdq
or
addr16
arpl
mov
dec
rcr
and
jle
mov
jl
rcl
mov
test
repz
mov
addr16
xchg
cmp
pop
ja
fwait
inc
test
(bad)
retf
es
add
pop
pusha
dec
test
mov
jmp
jns
in
xor
sbb
jg
stos
dec
xor
push
xor
cmp
fist
icebp
jnp
push
lea
xchg
aas
xchg
ret
mov
pushf
xchg
jbe
mov
xchg
je
mov
std
repnz
out
ins
cwde
mov
loope
fisubr
adc
jne
dec
jo
inc
mov
jns
mov
dec
lahf
stos
mov
es
ins
fucomi
adc
or
xor
pop
xor
cmp
add
imul
sub
cmp
xor
and
cmps
xchg
xor
sub
lock
cmc
xchg
pusha
repnz
jno
std
aam
adc
ins
sbb
arpl
sti
(bad)
nop
(bad)
outs
popa
xchg
pushf
dec
jecxz
(bad)
push
or
cli
jmp
push
into
xor
pop
outs
inc
sti
xor
popa
pushf
mov
fsub
push
xor
outs
popa
dec
int
push
pusha
jbe
test
adc
push
mov
pop
fldenv
add
gs
mov
dec
call
mov
adc
ror
cwde
(bad)
sbb
test
das
stc
mov
fwait
scas
push
enter
cs
test
push
jmp
adc
mov
mov
fild
std
sub
sbb
xor
arpl
sbb
fist
pusha
scas
jge
xlat
adc
cmp
fistp
repnz
jbe
mov
mov
push
popf
xlat
mov
ret
loop
adc
rol
fidiv
xchg
test
(bad)
jecxz
ins
cwde
mov
loope
fisubr
pop
xor
cld
fdiv
inc
jo
inc
fild
mov
dec
lahf
cmps
lods
scas
push
cmp
ins
leave
jmp
mov
je
inc
sbb
and
jl
xor
cmp
push
xchg
mov
dec
fldenv
add
outs
repz
jl
les
and
fadd
movs
mov
aas
scas
jl
call
sbb
lahf
inc
shl
es
jbe
and
data16
sbb
test
mov
out
push
xchg
xor
das
jo
and
sbb
and
cmp
cmps
xchg
sub
fild
std
pop
jnp
lods
outs
mov
loopne
in
jne
iret
rcl
(bad)
mov
jo
mov
push
xor
jecxz
js
xchg
popa
icebp
push
ss
ds
in
out
push
(bad)
xor
sbb
mov
sub
mov
jmp
js
mov
pop
lods
das
mov
stos
jl
cmp
mov
mov
aaa
daa
outs
call
xchg
xor
aad
aam
popa
and
pop
mov
cmps
xchg
xor
ror
pushf
ffreep
cmp
mov
clc
sbb
add
fidiv
cmp
in
push
fidiv
pop
outs
inc
lods
push
sbb
cmps
xchg
pushf
cmp
cli
or
sbb
ds
pop
retf
imul
mov
jb
mov
sbb
xor
rcl
repnz
popa
inc
scas
push
repz
dec
fwait
les
and
lds
mov
xchg
mov
xor
(bad)
pop
jge
lods
push
rcr
sub
jmp
sub
cmp
mov
ins
mov
sub
adc
fdiv
sbb
das
mov
stos
imul
mov
(bad)
std
add
frstor
outs
gs
movs
popa
(bad)
mov
popa
mov
sahf
push
and
in
sub
imul
imul
ret
in
repz
scas
fs
push
out
cs
call
stos
sbb
test
pusha
mov
call
out
cs
fs
jb
fdiv
sbb
das
mov
stos
outs
xor
sbb
cmps
lahf
or
jecxz
sahf
clc
jne
pop
jl
lods
pop
out
in
xchg
fist
fadd
mov
out
xchg
mov
push
ja
movs
stos
adc
stc
fmul
mov
sub
fistp
dec
jo
dec
scas
ins
jns
mov
pop
out
mov
outs
std
out
or
pop
mov
sbb
fmul
mov
inc
popf
mov
jl
retf
mov
jne
pop
dec
push
test
lds
ins
in
push
add
push
xchg
mov
outs
outs
popf
mov
xchg
lds
sub
sub
cli
jmp
pop
into
xor
pop
push
movs
xor
dec
lahf
(bad)
mov
push
call
dec
inc
xor
adc
pop
mov
stos
ja
mov
jb
mov
sbb
test
jecxz
andps
js
lock
fs
xchg
jb
in
mov
mov
inc
ja
test
loop
fld
pop
jecxz
fisttp
ds
in
(bad)
jg
xor
pop
ins
push
scas
inc
sub
lahf
ror
std
sbb
and
pop
lods
das
lods
adc
dec
jb
jp
xchg
cmp
test
outs
aaa
daa
pop
call
xchg
xor
jge
push
mov
dec
loopne
mov
adc
retf
add
jle
(bad)
mov
jo
mov
cli
cmp
pop
jns
movs
inc
in
fidiv
cmp
in
jp
xor
or
stos
push
sbb
xchg
jmp
data16
pop
sbb
das
lods
push
in
jb
jl
mov
je
mov
sahf
cmps
xchg
xor
idiv
ins
popa
jle
jbe
mov
pop
test
nop
push
and
std
mov
ins
test
pop
add
push
out
hlt
adc
movs
inc
in
into
xor
cmp
call
stos
or
stos
push
sbb
mov
rcr
out
or
into
jbe
push
addr16
mov
mov
stos
adc
je
xlat
sub
inc
jmp
add
pop
jbe
test
mov
push
in
mov
repnz
jno
std
fadd
mov
arpl
sti
out
(bad)
pop
push
aad
jecxz
scas
dec
cs
fisubr
sbb
mov
dec
or
mov
retf
call
fs
fdivr
gs
adc
bound
jg
movs
cmp
mov
dec
out
xchg
and
bound
fisubr
test
jl
rol
daa
stc
out
add
ja
xchg
ja
cmps
mov
adc
in
fcmovu
dec
push
pop
fiadd
cmp
clc
test
and
sbb
mov
sub
mov
jmp
ja
mov
pop
lods
das
mov
sahf
jp
xchg
or
cmps
scas
sub
jmp
inc
mul
push
mov
mov
inc
xchg
mov
push
in
je
std
(bad)
cmps
cmp
jle
mov
push
nop
mov
clc
sbb
lods
push
xchg
pop
lock
out
fcmovne
in
add
dec
mov
inc
aas
imul
and
outs
std
nop
or
or
xor
sub
pop
hlt
dec
jb
jg
cmps
xor
mov
jl
repz
sti
jns
inc
push
gs
pop
in
lock
ret
and
xlat
shl
mov
ja
mov
arpl
retf
repnz
ffreep
dec
imul
ds
cli
jmp
push
loopne
ja
outs
mov
xor
mov
push
int3
call
pop
push
ss
dec
add
and
jl
test
xor
mov
push
dec
fstp
sahf
xor
push
inc
popf
pop
jmp
lock
xchg
xchg
adc
xchg
imul
sbb
test
ja
mov
arpl
retf
repnz
ffreep
dec
push
pop
fld
ds
jmp
push
loopne
ja
jle
pop
outs
inc
mov
xchg
imul
aad
ss
pop
and
or
adc
imul
or
sbb
push
dec
out
call
and
pop
call
test
in
hlt
mov
(bad)
xchg
sar
jne
mov
jl
mov
or
fwait
dec
jecxz
fidivr
pop
sub
cld
repz
fidiv
or
cs
mov
mov
repnz
das
mov
jg
pop
xor
and
add
adc
imul
xor
sbb
push
inc
leave
fist
icebp
jns
push
lea
cmps
lock
iret
xchg
jno
fwait
jno
out
(bad)
mov
rol
cmp
test
std
mov
fwait
lods
push
sti
pop
lock
push
in
pop
push
add
sbb
push
mov
ret
mov
push
ret
call
fs
jmp
adc
and
inc
mov
(bad)
cmp
mov
push
push
xor
xor
call
push
mov
pop
mov
mov
movs
xor
ins
sbb
mov
es
mov
(bad)
lahf
inc
shl
cs
call
stos
sbb
mov
(bad)
cwde
mov
enter
clc
jnp
dec
cmp
cmp
pushf
and
and
(bad)
cld
stos
xchg
xor
mov
outs
push
push
movs
push
(bad)
mov
jl
(bad)
xchg
imul
jg
lock
pop
ja
movs
xchg
adc
stc
fadd
mov
aaa
cmp
aam
callw
push
dec
mov
arpl
inc
sub
mov
fisub
std
sbb
bnd
popa
dec
mov
push
fwait
push
mov
or
aas
inc
popf
mov
jl
frstor
dec
dec
push
test
shl
inc
in
ja
aad
test
cmps
sar
push
ja
mov
arpl
shl
ins
cwde
mov
sub
ds
fmul
dec
jo
pop
mov
push
jb
mov
mov
ins
enter
clc
add
dec
int
or
xor
cmp
mov
movs
cmp
xchg
test
in
xchg
mov
and
inc
call
sahf
push
and
jmp
sub
imul
jg
mov
xchg
gs
inc
cwde
test
out
pop
fisubr
pop
sub
cld
fdiv
jo
push
cwde
sbb
sub
mov
stos
aaa
fsub
(bad)
and
xor
xor
pop
pop
and
ds
add
imul
aas
ror
sahf
cmps
pushf
sbb
in
test
jns
inc
pop
jbe
pop
loopne
inc
les
and
cmps
cmc
xor
inc
mov
jnp
mov
sbb
xlat
repnz
aad
ins
cwde
mov
sub
fistp
dec
jo
dec
mov
fs
out
mov
outs
std
in
or
sbb
pop
push
arpl
pop
std
ins
arpl
inc
popf
mov
data16
scas
in
mov
inc
jmp
mov
xchg
dec
in
imul
out
call
xchg
inc
mov
cli
aam
aam
inc
ins
xchg
mov
pop
fisubr
add
repnz
fdiv
aas
jo
pop
sub
mov
stos
mov
mov
fmul
popa
inc
xor
cmp
pop
pop
and
or
mov
movs
cmp
mov
pop
out
fist
cmc
bound
fisubr
mov
lahf
popa
into
add
aam
xor
imul
inc
jne
mov
pusha
xor
repnz
repz
ins
pushf
movs
aaa
xchg
sub
int3
cld
ret
push
std
pop
bound
dec
fstp
push
push
mov
mov
inc
jmp
popa
es
add
jg
test
adc
mov
dec
out
enter
sti
jne
ins
jl
test
xor
aad
and
xor
pop
xchg
inc
mov
iret
repnz
rep
cwde
mov
sub
cmp
aas
jo
dec
sub
mov
sub
stos
mov
pop
cmp
ins
(bad)
sbb
clc
jno
popa
or
xor
add
lahf
add
dec
movs
cmp
sub
push
dec
(bad)
mov
push
pop
sub
jmp
test
nop
push
and
std
xor
sar
pop
add
into
les
lahf
lahf
inc
loopne
lods
sbb
sub
call
stos
sbb
test
pusha
xchg
mov
mov
out
or
adc
pop
lods
das
mov
stos
sbb
mov
sub
stos
aaa
mov
jnp
scas
pop
mov
test
sahf
fs
fadd
mov
jl
mov
test
in
ins
mov
pop
xchg
dec
in
cmp
int3
cld
ret
push
std
sbb
dec
test
inc
mov
pop
cmps
mov
scas
cvttps2pi
outs
std
test
jno
popa
cmp
sbb
jno
test
imul
mov
jb
mov
sbb
xor
and
bound
pop
in
stc
ins
xchg
rol
and
ret
lds
cwde
cmps
sar
pop
push
xchg
mov
xor
fcomip
xchg
jecxz
ins
cwde
mov
adc
xor
in
jge
xor
jp
ss
jl
mov
retf
std
adc
sub
pop
sbb
das
mov
scas
jns
shr
inc
popf
(bad)
cmp
repnz
bnd
pop
jbe
mov
mov
pop
call
movs
je
std
aam
adc
ins
test
outs
inc
nop
xchg
xchg
in
icebp
jge
sahf
fwait
inc
in
call
fcmovu
jbe
and
inc
stos
sbb
test
jo
(bad)
test
cmp
loop
mov
fs
jno
ret
jo
adc
jl
test
xor
(bad)
pop
sbb
xchg
xor
daa
scas
outs
repz
repnz
mov
in
add
aam
adc
ins
sbb
test
(bad)
pop
bound
into
inc
cs
clc
scas
jp
xor
pop
outs
inc
xchg
mov
enter
or
and
aas
push
jge
sbb
push
mov
or
add
cmps
cdq
sub
jmp
push
cld
dec
inc
push
test
jl
ror
daa
mov
test
lock
mov
ja
cmps
xchg
sbb
stc
in
fcmovu
dec
imul
sbb
ds
(bad)
pop
repz
jle
or
and
mov
mov
fwait
imul
mov
inc
fs
xor
adc
das
lea
fdivr
cmps
fs
cmp
mov
ins
out
fcom
gs
mov
mov
push
mov
xchg
fs
adc
(bad)
mov
pop
fwait
stos
mov
aas
int3
retf
neg
sahf
movs
inc
call
sbb
call
jnp
arpl
inc
and
mov
outs
enter
clc
pusha
adc
push
or
cmp
mov
scas
aam
or
xor
cli
lock
fldenv
outs
gs
movs
jge
mov
fs
sahf
push
and
rol
sar
push
xchg
mov
add
fdivr
adc
stos
push
inc
sub
(bad)
fadd
or
sbb
sub
mov
stc
push
cmc
jbe
jno
int
pop
js
arpl
pop
pusha
stos
imul
mov
jmp
arpl
outs
gs
jge
mov
pop
call
out
adc
icebp
mov
(bad)
xchg
sar
jne
mov
and
iret
repnz
retf
cmp
inc
xchg
sub
int3
cld
ret
pop
in
sbb
dec
scas
sub
imul
mov
clc
jno
jno
int
sbb
adc
popa
js
push
mov
je
fcomp
leave
out
xor
xor
pop
push
movs
jo
mov
pop
xchg
(bad)
mov
not
mov
xchg
ins
test
outs
sbb
xor
fdiv
cld
neg
fwait
add
into
push
cs
shr
dec
test
cs
mov
fistp
(bad)
popaw
jns
retf
jp
adc
jne
push
xor
sbb
and
and
inc
inc
stos
pop
in
cmc
inc
xchg
ret
xchg
xchg
jb
iret
lock
cmps
pushf
ret
cmp
test
iret
repnz
ret
jle
test
repnz
fisubr
push
cmp
cld
fmul
aas
jo
pop
mov
ins
cs
lahf
cmps
cmps
adc
jmp
mov
inc
push
aas
int
cmp
add
and
jl
test
xor
lea
inc
push
dec
leave
int
adc
outs
outs
inc
stos
pop
aad
(bad)
arpl
jno
jmp
lahf
mov
add
xlat
repnz
(bad)
out
jle
scas
push
push
xor
icebp
fist
dec
jo
push
fist
dec
push
cdq
sub
push
lahf
mov
mov
lea
(bad)
sti
bound
fild
push
add
cwde
cmp
or
pushaw
mov
addr16
scas
or
pop
(bad)
xchg
xor
fnstsw
ins
pop
pop
movs
jne
mov
dec
mov
mov
sub
adc
test
jo
xchg
cmp
pop
jg
fwait
inc
in
clc
inc
cs
in
lods
inc
fidiv
or
mov
mov
fisub
std
pop
mov
sbb
xor
or
pop
mov
inc
popf
mov
jl
rol
jmp
mov
dec
xchg
xchg
push
in
push
not
add
xchg
mov
outs
arpl
cli
ret
repz
pop
sahf
movs
inc
in
call
retf
call
stos
or
mov
mov
rol
cli
add
push
addr16
mov
mov
stos
sub
xor
sar
inc
jnp
scas
push
cmc
xor
xchg
push
xor
rol
(bad)
mov
arpl
stc
aam
(bad)
pop
push
push
rol
cmp
call
ja
outs
mov
aaa
push
jno
mov
fild
lock
xor
popa
inc
dec
int
sbb
das
cmp
inc
test
ja
mov
xor
out
xchg
adc
inc
inc
popf
pop
fidiv
cmps
jae
in
adc
lds
movs
call
mov
retf
in
outs
mov
call
int3
enter
push
add
pop
gs
test
mov
cli
or
and
add
mov
mov
test
mov
bound
xor
stc
mov
cmc
push
inc
stos
pop
in
cmc
inc
xchg
ret
mov
out
xchg
jb
iret
test
pop
mov
cli
loope
aam
inc
ins
xchg
test
and
cli
jmp
push
(bad)
xor
pop
outs
dec
call
mov
sar
cli
(bad)
(bad)
add
xor
sbb
test
xor
mov
inc
and
xchg
cmp
andps
js
rol
in
movs
repz
imul
ja
out
xchg
and
clc
sbb
lahf
inc
out
cmps
sbb
adc
retf
fidiv
sbb
mov
sub
mov
jmp
jbe
mov
pop
lods
das
lods
adc
pop
jb
jge
mov
ja
mov
adc
daa
pop
(bad)
xchg
xor
fnstsw
ins
popa
dec
stos
jbe
mov
cmps
addr16
jno
out
test
mov
xchg
xor
xlat
repnz
jecxz
ins
cwde
mov
sub
fist
dec
jo
dec
mov
mov
test
and
outs
std
retf
or
or
xor
inc
pop
xor
cmp
or
pushaw
mov
jle
xlat
(bad)
sub
or
fist
icebp
je
push
lea
(bad)
cmc
inc
xchg
ret
mov
out
xchg
jbe
in
cmc
xor
inc
xchg
pop
mov
stc
in
(bad)
dec
imul
or
sbb
jmp
push
(bad)
xor
or
cs
mov
xor
fsubr
iret
or
sbb
and
pusha
pop
xor
add
pusha
xchg
imul
sbb
mov
inc
fldenv
add
pop
jbe
mov
dec
test
nop
push
and
fisttp
fwait
rol
sbb
mov
cmp
mov
lahf
lahf
inc
mov
sub
jmp
sub
push
push
jns
mov
mov
jmp
fs
pop
sbb
adc
push
pusha
stos
push
mov
inc
cli
in
push
mov
pop
cld
push
jnp
stos
outs
jecxz
lock
sub
jns
test
xchg
shr
test
pop
xchg
sahf
test
pop
jmp
data16
fisttp
or
ror
push
jmp
inc
add
pop
pusha
addr16
cs
test
jg
cli
or
and
adc
mov
jno
jl
shl
nop
mov
ins
out
sti
xchg
and
jl
test
shl
pop
loope
add
mov
xchg
pop
mov
iret
repnz
fdivr
fwait
test
ds
push
in
pop
ja
cmp
cmp
fwait
mov
inc
fucomip
aas
mov
bound
xor
and
dec
add
and
jl
lods
ja
mov
mov
push
pop
fstp
mov
not
inc
popf
pop
cmc
nop
xlat
dec
xchg
ret
xchg
jb
jmp
jp
xchg
push
xchg
mov
or
xlat
aad
ins
pushf
stos
je
dec
in
or
fdivr
fmul
or
sbb
and
mov
mov
loop
sbb
inc
xor
cmp
inc
pop
and
add
aaa
fild
pop
or
sbb
push
inc
leave
fist
cmc
imul
repz
cmc
jl
shl
daa
(bad)
test
gs
test
fdivr
lea
sub
in
pop
push
sbb
sub
inc
mov
mov
fild
std
sub
push
arpl
jmp
mov
scas
jnp
rcl
inc
popf
mov
or
mov
repnz
jbe
stos
arpl
call
in
bound
leave
shl
mov
xor
bound
test
mov
sti
dec
imul
or
sbb
jmp
push
(bad)
xor
or
cs
mov
frstor
or
xor
es
cmp
cs
cmp
sub
or
fild
les
arpl
inc
xchg
ret
mov
jb
mov
mov
mov
pop
mov
cli
aam
aam
inc
ins
fwait
xchg
push
int3
pop
hlt
sub
cmp
cld
fmul
aas
jo
pop
mov
dec
push
cdq
outs
cs
lahf
cmps
pushf
xchg
or
ins
fsubr
or
aas
int
adc
add
and
jl
test
xor
mov
xor
ins
in
int3
stos
cmp
div
pop
andps
dec
sub
push
adc
rol
(bad)
mov
jo
xchg
(bad)
push
xor
(bad)
div
ror
fwait
inc
idiv
or
(bad)
fmulp
push
call
sbb
inc
mov
jns
mov
rcl
cs
out
jno
cli
bound
add
adc
cwde
or
movs
jge
cmp
mov
pop
leave
aad
xor
dec
jne
mov
dec
in
loopne
in
jb
in
test
out
repz
push
ja
cmps
lea
adc
in
fcmovu
dec
imul
or
stc
out
ret
cmp
dec
rcr
outs
push
mov
sahf
test
pop
loopne
or
add
pop
sbb
das
mov
scas
jns
ror
popf
lods
mov
call
arpl
ins
popa
jle
push
repz
pop
fwait
les
and
cld
test
js
call
xchg
mov
and
cmp
ins
cwde
mov
sub
ds
fdiv
aas
jo
push
stos
sbb
and
xchg
mov
mov
dec
jb
retf
push
add
and
jl
stos
ja
mov
mov
add
mov
mov
push
inc
inc
inc
popf
pop
clc
iret
xlat
jl
ret
mov
fst
mov
outs
xchg
mov
gs
mov
outs
xor
repnz
cwde
xchg
je
push
xor
ds
stc
fadd
adc
pop
sbb
jnp
mov
stos
xorps
outs
loope
sbb
into
fs
jae
fdiv
push
push
adc
add
jae
test
and
aas
jg
cmps
fwait
cmp
rol
jecxz
add
pop
jmp
hlt
js
lock
push
in
addr16
retf
shl
mov
jo
xchg
nop
(bad)
pop
dec
sahf
fwait
inc
test
in
push
jmp
pop
pop
dec
cmps
pop
push
test
mov
jmp
addr16
pop
push
arpl
add
adc
jns
fnstsw
inc
popf
rcr
out
icebp
xchg
xor
mov
ins
popa
pusha
scas
push
repz
jl
les
adc
xlat
xchg
ins
scas
mov
jae
lahf
mov
xor
out
cld
repz
pop
fwait
add
call
fcmovu
jbe
es
pop
dec
cmps
pop
push
jo
retf
cmp
std
cs
shl
dec
iret
pop
sbb
add
mov
sub
mov
dec
jmp
call
fstp
pop
test
retf
dec
xchg
xchg
dec
in
arpl
(bad)
push
int
movs
mov
ja
xchg
cld
push
xor
mov
into
ror
popf
xor
pop
leave
and
cli
jmp
push
(bad)
xor
sub
cdq
push
cs
lahf
cmps
stos
scas
add
jmp
mov
outs
jne
aas
int
or
adc
imul
cmp
sbb
add
fild
les
inc
stos
pop
loopne
loope
pushf
les
xor
fbld
mov
push
ja
cmps
xchg
adc
cli
loope
retf
hlt
inc
ins
xchg
mov
adc
enter
fidiv
pop
outs
inc
mov
xchg
fdivr
or
retf
jae
xor
jg
test
and
cmp
mov
outs
call
xchg
xor
jecxz
aam
popa
mov
pop
test
cmps
fs
xor
stos
xchg
add
mov
xchg
xchg
test
adc
clc
sbb
lods
push
cs
hlt
mov
or
pop
outs
inc
mov
sbb
stos
test
inc
ror
or
xor
and
add
ins
mov
inc
in
mov
inc
pop
pusha
fstp
mov
out
pop
push
test
repz
dec
xchg
xchg
dec
in
jne
(bad)
or
js
test
ja
mov
outs
sbb
lds
lea
adc
sbb
jmp
push
(bad)
xor
pop
push
(bad)
cmp
lahf
lahf
mov
push
call
fs
and
add
mov
sbb
scas
xor
xchg
(bad)
adc
or
in
xchg
cmp
jnp
sub
repz
mov
movs
xor
ins
sbb
test
adc
retf
icebp
cmp
fisttp
xor
xor
jmp
inc
stos
sbb
test
pusha
mov
fild
out
sub
je
fdiv
push
push
jae
nop
and
test
and
aas
jg
cmps
test
cmp
mov
mov
jbe
mov
dec
mov
xchg
pusha
sub
clc
jge
pop
ja
movs
popf
adc
stc
fmul
mov
cmp
(bad)
leave
in
inc
popa
push
dec
mov
jl
add
mov
and
addr16
data16
xor
das
mov
sahf
jg
mov
mov
or
jl
mov
and
dec
push
test
aad
(bad)
dec
xchg
xchg
push
in
addr16
rol
mov
outs
jl
mov
cmps
(bad)
dec
imul
ss
cli
jmp
push
(bad)
xor
or
cs
popf
lods
mov
sub
das
mov
inc
fs
xor
adc
jp
adc
js
mov
push
in
mov
xor
fstp
mov
icebp
je
pop
lea
(bad)
lock
iret
sahf
popa
fidivr
test
js
mov
ror
stos
dec
xchg
mov
popa
es
or
scas
dec
loopne
(bad)
sub
cli
neg
push
icebp
inc
jl
dec
mov
push
ds
mov
fild
sbb
inc
fdiv
sbb
add
bound
fs
pop
inc
call
les
inc
stos
pop
aad
loope
pushf
les
and
fadd
test
push
xchg
mov
push
xor
repnz
into
fdivr
jle
scas
fs
(bad)
fistp
dec
jo
pop
mov
dec
push
cdq
pop
cs
lahf
mov
mov
shr
mov
push
jne
aas
int
or
pop
rol
imul
dec
xor
mov
enter
sti
jmp
pop
neg
ja
xchg
jge
test
add
adc
mov
push
ja
cmps
mov
mov
fisttp
mov
enter
stc
out
out
inc
sti
cmp
outs
rcr
imul
sub
cdq
into
mov
jbe
repz
mov
dec
fs
xor
adc
lea
fmul
mov
push
mov
pop
cld
rcl
repnz
popa
and
jl
les
and
stos
xor
shr
push
ja
mov
outs
and
repnz
loope
dec
addr16
xchg
xor
pop
fisubr
sub
aam
rcl
inc
inc
push
dec
sbb
inc
movs
inc
cmp
retf
test
cmp
loop
mov
jmp
pop
mov
mov
stos
aas
inc
popf
cmps
call
jmp
neg
dec
lods
pop
and
in
data16
rol
(bad)
mov
jo
mov
push
xor
fdivr
into
ror
fwait
inc
sti
push
retf
dec
cmp
cli
repnz
imul
ja
outs
xchg
pop
outs
inc
test
mov
cli
push
mov
push
jo
xor
xor
jo
or
pop
jno
jg
mov
jg
cmps
scas
sbb
xor
in
inc
neg
inc
mov
movs
(bad)
dec
mov
movs
pusha
xor
jecxz
or
jo
mov
cli
nop
(bad)
pop
push
sahf
fwait
inc
idiv
dec
cmp
(bad)
cld
retf
es
popa
jl
inc
sub
mov
jmp
push
arpl
mov
mov
scas
jg
fcom
inc
popf
lods
xchg
and
xlat
jmp
loop
jl
test
jecxz
(bad)
dec
mov
xchg
data16
xchg
sbb
mov
iret
repnz
lds
cwde
mov
adc
das
loop
fadd
inc
or
dec
lods
pop
imul
mov
pushf
aas
fist
aas
mov
pop
popa
inc
xor
es
cmp
test
xor
mov
call
add
cmps
lock
xchg
xchg
adc
xchg
push
adc
mov
arpl
cli
(bad)
nop
(bad)
pop
inc
mov
inc
cs
call
stos
sbb
test
daa
imul
repz
aas
int
sub
add
sub
pop
inc
movs
cmp
lods
test
rcr
adc
je
push
lea
(bad)
loope
pushf
les
sub
stos
scas
xor
pop
xchg
mov
push
ja
test
in
(bad)
dec
imul
dec
push
adc
cld
lock
fidiv
or
add
xchg
mov
fild
clc
or
inc
in
xor
add
mov
lods
adc
sbb
jge
mov
je
stos
sahf
cmp
dec
std
xlat
movs
aaa
mov
jbe
mov
pop
cmps
enter
popf
jno
std
(bad)
xchg
cmp
sar
stos
jl
test
mov
mov
lock
push
in
or
or
cld
push
sbb
mov
dec
out
or
jno
out
xor
jo
or
push
jno
jg
cmp
popf
movs
xchg
add
dec
jmp
xchg
xor
jbe
scas
outs
repz
pop
test
nop
push
and
cld
xor
sar
inc
pmulhuw
jmp
lahf
inc
call
into
fild
dec
jb
dec
mov
inc
push
imul
pop
sti
inc
ret
xchg
addr16
dec
fs
aam
adc
scas
sub
mov
push
cdq
xchg
cmp
ss
loopne
xchg
aaa
leave
sti
jno
inc
push
sub
call
sahf
or
clc
hlt
mov
in
mov
mov
mov
in
fidivr
jmp
cmp
jnp
das
pop
cmp
shl
sub
push
jge
mov
dec
out
mov
lea
push
mov
les
adc
aam
cmp
adc
push
push
scas
or
xchg
sbb
popf
mov
sub
xor
jmp
sti
ja
je
inc
popf
inc
repz
(bad)
cmp
ret
in
pop
or
out
xchg
test
ins
fs
test
cmp
stc
jmp
mov
or
inc
into
icebp
fdivr
cmp
dec
scas
aaa
jns
xchg
or
call
out
stc
das
mov
push
je
pop
call
add
imul
pop
mov
je
scas
xchg
xor
aas
xchg
std
addr16
inc
js
stos
pop
repz
sbb
mov
push
lock
xchg
retf
add
aas
pop
div
cmp
outs
jne
call
ds
(bad)
in
pop
fild
jl
cmps
push
ds
test
clc
rcr
data16
pop
sbb
cmp
and
lods
adc
jle
movs
xchg
pop
dec
jl
fist
repnz
data16
pop
repz
dec
xchg
(bad)
jmp
push
clc
les
mov
dec
mov
pop
out
lea
inc
in
cli
adc
mov
xor
xlat
fnstenv
push
gs
jne
jnp
ss
mov
sub
sub
pop
into
push
add
sub
test
sbb
push
sbb
xor
clc
lods
xchg
das
(bad)
bnd
pop
jle
movs
jae
mov
jmp
xor
outs
mov
pop
jl
fsubrp
ds
les
lods
lods
jnp
push
cmc
sub
or
stc
lods
pop
stc
pop
jo
inc
stos
adc
mov
mov
stc
imul
or
cld
add
daa
int
sbb
ds
ror
sbb
into
loope
inc
and
rcl
cmc
jl
jno
jae
xchg
xlat
pop
jmp
mov
mov
mov
mov
pop
popf
movs
adc
aad
dec
test
inc
jecxz
in
adc
adc
ds
push
inc
pushf
sbb
mov
movs
iret
xchg
sub
lea
mov
jbe
jb
in
sbb
sub
pop
cmps
push
push
cmps
or
movs
test
push
inc
test
mov
jge
mov
mov
dec
mov
xchg
fs
mov
mov
mov
mov
xchg
cdq
mov
cmp
shl
jmp
test
cs
ret
cmp
dec
mov
cmp
mov
fsub
xchg
push
je
inc
int
sbb
sbb
imul
xor
pop
aaa
and
fist
ins
jp
scas
pop
div
cmps
popa
rcr
add
pop
cmp
cmps
es
jecxz
stc
call
dec
lock
fdiv
enter
arpl
jo
cmp
loopne
xor
mov
jmp
push
ja
pop
enter
pop
xor
push
mov
hlt
add
movs
xor
call
shr
push
mov
jbe
lea
mov
pop
xchg
xchg
callw
add
(bad)
xchg
adc
jns
(bad)
cdq
stc
aaa
lahf
ins
pop
xchg
inc
jmp
fisubr
sub
idiv
(bad)
cmp
push
gs
inc
mov
sub
mov
fwait
(bad)
pop
lahf
cld
jge
je
retf
inc
sbb
add
fsubr
pop
inc
mov
sahf
arpl
dec
rcr
adc
push
and
jle
fadd
jge
mov
and
(bad)
xchg
jnp
inc
mov
push
pusha
xor
repnz
loope
bound
fwait
inc
ret
jp
push
or
in
repz
add
push
test
jl
dec
add
mov
stos
push
or
inc
(bad)
fmul
stos
cmc
js
jae
mov
arpl
jb
(bad)
jg
xchg
das
push
fwait
mov
cmp
mov
adc
jnp
mov
ins
lahf
les
pop
cli
fisttp
stos
fldcw
rcr
pushw
mov
sbb
add
sti
cmp
(bad)
in
fisttp
cmp
pop
xor
inc
sub
mov
fst
or
inc
leave
cmp
cmp
push
inc
mov
xchg
and
inc
cwde
in
and
jge
jbe
and
fdivr
push
cdq
les
daa
xchg
shl
mov
dec
pop
sub
cdq
lods
(bad)
mov
inc
out
mov
pop
add
fidivr
jle
mov
dec
pop
test
sub
les
push
out
pop
fwait
rcr
inc
push
xor
and
sbb
icebp
and
adc
pop
je
pop
xor
cmp
xlat
cwde
push
pop
dec
and
retf
pop
jle
outs
outs
je
push
aam
mov
out
test
retf
mov
mov
(bad)
fsub
push
stos
fs
sar
cwde
repz
inc
jg
scas
dec
lock
adc
imul
pop
sbb
add
jnp
dec
and
mov
hlt
push
loope
and
cmp
sbb
jnp
aas
mov
sub
pusha
jns
inc
cmp
mov
shl
icebp
imul
lds
les
and
clc
stos
xor
ins
or
xchg
repnz
cmps
push
retf
jg
ss
cld
lods
push
call
mov
inc
ds
fwait
movs
mov
stc
fisttp
test
xor
xor
or
xor
push
sahf
pop
fld
mov
inc
popf
movs
xchg
cmp
retf
xchg
daa
mov
jo
test
repz
fs
xchg
(bad)
(bad)
xchg
push
and
std
test
jecxz
mov
imul
hlt
sbb
lods
push
fistp
or
int3
(bad)
fist
adc
aas
cmps
sbb
popf
outs
add
lahf
mov
fild
cli
add
je
in
cmp
adc
dec
jbe
push
aaa
mov
push
xchg
mov
pop
test
cmps
sbb
js
mov
cmp
call
ret
and
test
test
aas
stos
push
test
pushf
cmps
in
or
je
pop
rol
scas
push
ret
push
jle
or
test
jns
cmps
mov
jg
out
or
xor
pop
aaa
push
outs
adc
ins
or
pop
xchg
mov
dec
out
aam
aaa
mov
jle
mov
js
stos
call
lahf
je
std
xlat
xchg
ins
test
inc
xchg
hlt
mov
popf
es
mov
inc
sub
cli
in
into
push
(bad)
xor
jno
cmp
pop
ds
popf
int3
mov
cmp
ins
ret
dec
pushf
hlt
jbe
jle
iret
pop
sbb
das
mov
stos
jg
cmps
sbb
lea
dec
in
test
pop
pusha
push
test
aad
(bad)
dec
and
pop
xor
(bad)
mov
mov
inc
jge
popf
mov
xor
jecxz
repz
arpl
mov
dec
add
idiv
fisttp
xor
dec
stos
sbb
push
mov
mov
pushf
sbb
outs
jmp
jno
jmp
outs
je
cmp
pusha
imul
add
sub
call
repnz
gs
inc
repz
ins
add
(bad)
(bad)
xchg
jno
out
std
test
jecxz
mov
sbb
mov
or
jecxz
inc
adc
and
xor
cmc
repz
scas
jne
and
cmp
add
push
fistp
int3
add
iret
cmp
jae
push
mov
pusha
pusha
mov
jae
into
std
(bad)
and
jecxz
out
test
jno
imul
lock
pushf
rcr
(bad)
fiadd
(bad)
mov
mov
in
cli
out
jecxz
outs
sbb
mov
pop
fisttp
sub
in
icebp
lods
pop
fnstsw
jb
pop
fidiv
inc
adc
out
mov
push
inc
jmp
mov
jbe
or
int
push
imul
cmp
jbe
imul
ss
mov
leave
fild
retf
jp
push
mov
inc
pushf
(bad)
cdq
outs
call
movs
xchg
jmp
not
stos
imul
les
lods
mov
or
sbb
bound
jp
ins
and
push
leave
(bad)
push
cmp
dec
test
sbb
and
xor
inc
add
and
imul
pop
xchg
lea
outs
(bad)
add
sbb
lea
loope
popf
les
psubd
mov
xchg
add
mov
imul
push
aas
int3
xlat
xchg
loop
bound
std
or
jbe
cmp
dec
cmps
or
outs
cli
inc
ds
mov
lea
or
inc
sahf
cli
das
mov
inc
(bad)
pop
ja
xor
lahf
das
mov
test
add
lea
out
lahf
cmp
pop
mov
fs
shl
jg
in
add
rol
mov
test
rol
push
hlt
pop
cmps
ds
bnd
and
dec
mov
sub
pop
mov
fbld
nop
or
xor
adc
and
outs
pusha
add
fnstsw
mov
pop
test
xchg
and
inc
push
stos
xor
scas
in
xchg
rcl
std
ret
lods
add
inc
xor
shl
dec
fs
test
adc
fstp
mov
inc
jecxz
shr
cmp
fsubp
fild
inc
jae
dec
mov
inc
sbb
mov
mov
out
fidivr
(bad)
jbe
inc
and
adc
cdq
cmp
pusha
test
cmp
mov
sti
fst
lock
jne
stos
jnp
mov
dec
xchg
sar
xchg
mov
sti
cmps
scas
mov
fnstsw
xchg
mov
push
xor
ret
or
dec
outs
mov
clc
das
pop
xor
clc
hlt
inc
jmp
jb
and
inc
sub
mov
(bad)
or
add
and
and
je
push
movs
sub
(bad)
pop
or
mov
pop
(bad)
xchg
push
loope
sbb
pop
ret
and
stos
jecxz
into
mov
icebp
adc
add
loope
shl
mov
stos
adc
stc
repnz
es
aad
hlt
test
lods
inc
in
push
pusha
and
inc
sub
xchg
mov
(bad)
enter
jbe
pop
add
or
jp
mov
sbb
dec
call
in
popa
loop
jbe
mov
dec
xchg
mov
pop
(bad)
mov
daa
retf
rcl
idiv
je
mov
push
adc
sti
xchg
(bad)
ins
ins
mov
fidiv
inc
es
(bad)
push
sti
add
sbb
cwde
push
cs
mov
icebp
pop
sti
loop
sar
ins
push
add
or
push
arpl
sbb
and
ficom
imul
push
lods
inc
shl
jge
mov
mov
jecxz
mov
add
movs
xchg
add
repnz
xchg
leave
loopne
imul
cmps
cmp
(bad)
add
pop
pop
mov
add
gs
mov
mov
jge
sar
mov
inc
outs
jno
int
sbb
cmp
pop
sbb
popf
mov
dec
out
fbstp
xor
and
les
adc
fmul
scas
rcl
arpl
loop
in
lock
jne
xchg
ins
fwait
ins
(bad)
cmp
nop
icebp
mov
cmp
pop
push
pop
clc
dec
cs
xchg
int
cmp
push
sti
rcr
add
ds
inc
sub
jbe
ins
pop
mov
sbb
dec
push
cwde
mov
(bad)
stos
xchg
inc
popf
int3
ja
dec
jbe
mov
mov
xor
and
rcl
sar
outs
sbb
retf
hlt
xchg
(bad)
dec
dec
mov
sub
clc
mov
pop
call
mov
inc
sbb
call
jmp
jnp
jbe
int
xor
add
imul
xor
mov
inc
or
stos
out
mov
jno
inc
jg
stos
pop
retf
mov
gs
shl
loop
sbb
fnstsw
hlt
mov
mov
std
repnz
hlt
dec
ins
xchg
xchg
je
dec
fisub
pop
cmp
cld
jmp
pop
xor
inc
cs
mov
stos
cmp
das
test
xor
and
jbe
xor
sub
pusha
rcr
cmps
adc
(bad)
pop
adc
cmp
inc
jecxz
jae
lods
popa
out
(bad)
les
dec
xchg
mov
mov
imul
and
loope
scas
(bad)
es
out
and
retf
push
sub
in
inc
pop
sub
ss
inc
add
cdq
mov
call
jl
jecxz
push
imul
add
and
js
mov
mov
ja
xchg
out
out
adc
data16
stos
jp
xchg
clc
cmp
xchg
push
adc
rol
(bad)
rol
test
ja
mov
ds
loope
out
loope
imul
xor
inc
clc
pop
je
jge
adc
outs
test
imul
mul
out
bound
inc
into
xor
mov
mov
mov
scas
xor
push
add
aas
fcmovb
cmp
sti
addr16
je
jo
js
fsub
xor
xchg
push
and
mov
xrelease
sahf
mov
push
aaa
cli
in
scas
rcl
lahf
inc
jecxz
fdivr
pop
dec
out
enter
pop
jne
jp
push
inc
pop
mov
mov
imul
cmp
pop
mov
xor
sbb
mov
xchg
push
inc
test
mov
sti
fcom
les
and
ins
xchg
fsub
xor
ret
hlt
and
shr
ret
push
in
repnz
retf
dec
mov
ds
sub
iret
clc
ds
inc
or
pop
mov
add
(bad)
cs
add
fnstcw
addr16
add
in
push
sub
fwait
daa
mov
cmp
fadd
ret
aas
mov
gs
push
sti
cmps
clc
addr16
mov
pop
dec
xchg
sar
push
xchg
jg
mov
enter
push
fwait
mov
test
shl
push
repnz
fsubr
cs
cmc
in
lock
in
pop
push
pop
lods
jne
inc
mov
mov
stc
jge
and
neg
push
push
inc
das
and
das
lods
xor
push
xchg
cs
popf
mov
(bad)
stc
fwait
dec
(bad)
call
push
test
cmp
xchg
js
retf
(bad)
scas
jae
inc
cdq
mov
add
xchg
and
xchg
mov
xor
sbb
stc
mov
nop
inc
inc
push
inc
mov
pop
jle
inc
or
fwait
int
dec
push
scas
jnp
fdiv
call
cmp
jg
sbb
push
push
fisubr
mov
outs
in
std
add
add
test
lahf
aad
retf
jne
push
lods
inc
repz
cmps
jno
xchg
cmp
xchg
cmps
fidiv
add
in
stos
imul
out
cwde
addr16
hlt
cmp
fadd
jecxz
fistp
ja
lea
popa
dec
mov
sbb
cmps
fwait
mov
loope
sub
pop
xor
inc
add
add
add
js
pushf
push
aaa
mov
push
stos
mov
inc
fwait
out
mov
out
bound
push
jecxz
in
cdq
in
test
mov
stos
adc
push
xchg
mov
add
loop
scas
cdq
pop
jge
mov
out
int
aas
cs
std
cmp
cmp
or
adc
pushf
cmp
clc
or
int
sub
outs
add
sub
pminsw
jns
mov
in
xchg
sbb
push
xor
retf
mov
jle
fist
cli
pop
pushf
shl
sbb
(bad)
mov
in
jecxz
mov
in
xchg
popa
xor
repnz
ret
fs
fidivr
sub
clc
stc
cld
ja
pop
pop
jl
fistp
ins
jae
push
sbb
mov
mov
daa
stc
push
clc
pop
jo
add
pop
cmp
add
pop
dec
mov
inc
retf
scas
sub
icebp
mov
mov
jle
fiadd
ror
in
fs
fist
mov
gs
mov
xor
ret
cld
out
ins
xchg
stos
dec
lds
scas
xor
jmp
and
pop
addr16
xchg
inc
pop
jg
test
arpl
loop
movs
jmp
fs
ret
jne
pusha
xchg
sub
cmps
jl
sub
popf
stos
(bad)
cmp
mul
cmp
push
jae
pop
out
std
pop
cdq
rcr
call
jnp
mov
pop
inc
mov
mov
inc
jmp
(bad)
retf
jnp
scas
jnp
jle
das
pop
push
test
push
inc
xchg
push
test
jno
mov
nop
adc
(bad)
cmc
sub
std
push
ins
pop
dec
cmps
cmp
add
pop
out
dec
mov
js
into
mov
daa
push
dec
neg
cdq
aaa
nop
shl
ins
je
mov
dec
test
call
and
ins
xchg
outs
push
xchg
xchg
xchg
sbb
mul
jmp
scas
cs
dec
jmp
sbb
jo
inc
cmp
lahf
mov
mov
call
dec
dec
add
mov
push
mov
pop
dec
mov
sub
test
es
dec
xlat
sar
inc
mov
jnp
scas
jb
xchg
lock
pushf
aam
jno
jmp
pop
repnz
test
stos
jmp
xchg
mov
loope
into
cmp
jecxz
retf
cmp
into
xor
sub
push
sahf
je
ins
lahf
mov
iret
imul
or
xor
sub
je
outs
mov
aaa
cmp
sub
and
inc
mov
pop
pop
test
bound
inc
add
ror
lods
ret
aaa
test
sbb
(bad)
mov
repz
outs
mov
inc
call
fmul
dec
fild
fs
mov
dec
outs
mov
imul
call
ja
ss
pop
jge
sbb
dec
dec
mov
inc
fwait
mov
inc
fsub
mov
lahf
int
sub
xchg
loopne
sahf
xlat
mov
call
mov
sbb
pop
lea
call
icebp
fmul
jb
cmp
jmp
inc
pushf
jno
bound
xchg
stos
mov
in
or
retf
cmp
add
mov
mov
fidiv
mov
stos
cmp
xlat
dec
jmp
jae
rcl
out
test
dec
cli
loope
sbb
inc
add
xchg
or
mov
ds
retf
push
inc
rcr
ins
push
test
jns
fwait
stos
mov
lea
ror
or
push
jge
mov
pop
mov
bound
and
xor
sti
ja
jnp
dec
stos
push
aad
in
mov
mov
push
rcl
cmps
push
repnz
sti
sub
xchg
mov
adc
cmc
jecxz
push
scas
push
jecxz
ficom
push
push
xchg
xchg
iret
pop
into
and
push
push
pop
dec
push
xchg
inc
push
push
lahf
mov
stos
or
fild
cli
sbb
pop
iret
ss
ss
cmp
pop
pusha
scas
pop
sbb
into
cli
adc
add
bswap
std
jb
pop
jns
cmps
and
(bad)
loopne
mov
xchg
pushf
or
clc
mov
ins
or
add
iret
icebp
mov
jmp
sub
retf
cmp
dec
scas
push
aas
pop
stos
movs
mov
out
mov
fwait
clc
data16
and
cmp
jnp
adc
leave
jg
xchg
xchg
xor
jno
pop
data16
fist
outs
pop
jae
jle
mov
push
cmps
(bad)
mov
out
jno
in
cli
nop
add
je
sti
mov
sbb
cwde
adc
mov
dec
fld
cmp
clc
stc
shl
sub
jg
mov
dec
and
jo
jp
fwait
int3
scas
xor
pop
mov
pop
dec
push
pop
mov
sub
jl
test
adc
movs
cli
add
ins
out
fmul
les
jl
jo
mov
pop
popf
shl
and
aam
pop
loopne
in
in
iret
aaa
call
xor
jle
mov
rcl
sub
imul
pushf
pop
gs
in
adc
xlat
jbe
fistp
sahf
xchg
jns
push
and
cmp
add
mov
pusha
jns
jg
scas
sbb
sahf
mov
out
call
cli
inc
cvtps2pd
addr16
push
in
pusha
push
hlt
mov
xchg
cli
movs
jecxz
mov
mov
xor
jecxz
frstor
in
jbe
xor
push
bound
dec
ss
cmps
ret
or
inc
iret
xchg
ds
arpl
sbb
inc
adc
add
lahf
or
cmp
aas
or
sti
rol
cmc
jbe
pop
shl
fidivr
lock
push
mov
and
pusha
call
push
sti
cdq
jmp
xor
cmc
mov
mov
iret
dec
ds
jmp
push
inc
cdq
outs
gs
in
pop
ins
out
xchg
xchg
adc
out
ror
push
leave
fsub
jne
mov
xor
jb
and
(bad)
pop
pop
mov
sbb
push
pop
fcom
mov
fisub
sub
mov
sar
xor
add
mov
xchg
dec
shl
jmp
loop
jg
xchg
sub
xor
hlt
lods
push
cwde
sbb
dec
mov
jne
mov
cmc
mov
retf
(bad)
pop
in
or
xchg
push
push
popa
inc
mov
imul
pusha
mov
inc
mov
mov
rcl
aaa
add
xchg
push
scas
jne
mov
pop
test
xchg
gs
ror
(bad)
les
pop
push
mov
push
call
ins
lds
push
inc
dec
iret
repnz
jbe
daa
popa
push
arpl
or
jg
inc
aas
jns
cwde
lods
mov
hlt
jo
ret
jge
pusha
cmp
pop
push
push
sub
ins
xlat
jp
movs
jbe
xlat
sub
mov
xor
pop
out
fbstp
cmc
inc
jnp
mov
aas
xchg
mov
push
call
sti
cmc
sbb
inc
mov
mov
jmp
adc
jmp
fcomp
es
fwait
test
(bad)
jp
adc
(bad)
cld
retf
pop
clc
and
pop
jl
movs
push
ss
cwde
mov
call
pop
cdq
repz
push
pop
pop
fldenv
adc
or
mov
into
jae
imul
inc
mov
xchg
xor
inc
fcom
out
ror
pushf
add
mov
mov
xchg
push
leave
aam
sub
ins
sbb
test
xor
pushf
xchg
(bad)
inc
pusha
xchg
cwde
inc
out
shr
push
sub
lock
ds
xor
push
mov
dec
test
mov
out
add
cmp
pop
xor
and
mov
outs
pop
lods
pop
and
lahf
sbb
in
mov
jnp
mov
cmp
loop
and
lds
mov
add
shl
std
inc
mov
inc
xchg
push
repz
ds
icebp
stos
push
les
add
and
inc
es
nop
mov
xchg
ss
fistp
cli
sbb
and
add
jb
add
sub
aas
cli
jb
mov
fs
mov
jg
fmul
mov
mov
xor
and
ror
sahf
scas
lds
lahf
js
mov
mul
test
xchg
call
das
iret
(bad)
pop
clc
xor
jl
scas
add
inc
mov
push
dec
and
call
and
sbb
add
ins
push
ficomp
mov
in
movs
stc
cmp
add
(bad)
stos
lahf
cs
xor
fisttp
loope
cmc
in
and
rcl
movs
scas
aaa
popf
push
adc
retf
pop
mov
lock
sub
inc
and
sbb
inc
pop
icebp
xchg
scas
int
cs
jo
std
push
or
enter
cs
das
sahf
imul
sbb
in
inc
push
cmp
fist
shr
mov
inc
sti
(bad)
xchg
arpl
xchg
add
dec
xchg
popf
stos
out
sahf
outs
jb
mov
repnz
mov
sub
jp
sbb
add
ret
sub
fistp
push
cmps
inc
pop
jnp
xchg
call
lea
jecxz
adc
(bad)
pop
jae
adc
mov
test
cmc
outs
sbb
inc
cdq
mov
prefetcht0
cmp
xlat
mov
mov
jnp
lods
jnp
mov
out
xchg
xchg
addr16
movs
scas
sub
jnp
test
push
je
mov
les
fwait
mov
sbb
retf
push
int3
xor
and
or
add
in
mov
mov
cld
test
loopne
fs
leave
and
jl
add
addr16
mov
inc
popf
cdq
mov
(bad)
xchg
adc
push
outs
popf
dec
aad
jecxz
mov
and
fistp
stos
lds
test
ja
mov
pop
add
les
fwait
test
test
inc
dec
aam
ret
dec
data16
adc
jg
inc
sub
mov
imul
pop
ja
add
pop
sbb
or
stos
jg
mov
mov
(bad)
cmp
shl
outs
jb
lea
mov
xchg
jmpw
and
fcomp
cdq
mov
gs
mov
and
ror
mov
fiadd
ds
fistp
xor
dec
(bad)
ins
ins
dec
mov
cdq
mov
mov
jmp
jb
jecxz
cmp
es
movs
jg
lea
mov
xor
lahf
fdivr
xor
inc
and
dec
lahf
loope
sbb
mov
jmp
cmp
movs
lea
push
into
fadd
fwait
stos
jnp
pop
xlat
sub
std
cmc
into
pop
fnsave
jb
inc
mov
push
xchg
pop
fidivr
repnz
xchg
jb
jbe
(bad)
xor
dec
je
mov
jnp
ror
pop
mov
data16
ret
xor
jge
jl
dec
fnstcw
xchg
dec
out
mov
xor
sti
xchg
adc
jge
sahf
ffreep
das
ret
movs
xchg
mov
rcr
in
lea
push
fisub
sub
in
lods
pop
jmp
jo
pop
mov
inc
es
mov
sub
pop
(bad)
stc
and
daa
(bad)
xor
jo
add
fistp
test
xor
sbb
cdq
scas
not
inc
daa
fs
xchg
aas
(bad)
repz
pop
jp
(bad)
jo
mov
and
in
test
je
std
les
xchg
mov
pop
test
jmp
inc
into
les
lods
movs
xor
dec
clc
ds
cli
clc
repz
pop
outs
pop
movs
dec
ds
mov
lea
or
arpl
pop
je
sbb
xor
jl
fwait
add
rol
mov
fs
xchg
pop
aas
and
icebp
lahf
and
push
pop
test
pop
mov
cdq
je
xchg
test
fcmovne
cmp
xchg
add
cmc
clc
retf
ins
fwait
lods
inc
retf
cs
cs
inc
nop
icebp
mov
pop
les
adc
xchg
or
mov
in
fist
in
pop
inc
push
add
dec
inc
test
shl
fs
mov
and
rol
pop
pop
cmp
and
sahf
mov
shl
hlt
retf
rcr
shl
push
add
lahf
stos
js
xchg
pushf
test
div
scas
xchg
lea
mov
push
sub
cmc
fistp
push
arpl
dec
fistp
sbb
mov
add
iret
push
fidivr
clc
add
adc
adc
add
imul
cmp
sbb
dec
int
test
repnz
(bad)
inc
xchg
(bad)
xchg
jo
xchg
jno
cli
rol
mov
jne
sahf
adc
retf
std
sub
jnp
mov
cmp
mov
push
xor
or
push
and
ret
sub
in
sbb
cli
or
fs
add
icebp
sub
lahf
or
dec
gs
retf
stc
xchg
cmp
jge
(bad)
dec
(bad)
rcr
jmp
clc
mov
test
inc
ja
mov
ds
in
cli
test
mov
out
inc
sbb
xor
inc
fstp
pop
cmp
outs
sbb
cdq
mov
ja
stc
das
mov
pop
push
pop
and
ss
pop
sub
fwait
sub
xchg
sbb
and
xor
rol
inc
jge
mov
mov
mov
out
adc
idiv
test
dec
je
mov
js
in
rcl
sahf
test
xor
dec
clc
icebp
retf
and
cmp
jo
cmp
and
mov
mov
ret
(bad)
add
in
adc
sahf
es
and
push
(bad)
fdivr
mov
jp
mov
push
pop
add
adc
push
push
mov
xor
rcl
inc
mov
aad
repnz
mov
pop
xchg
xchg
mov
xchg
enter
stos
lods
inc
jecxz
fdiv
add
inc
in
cmp
dec
xor
ds
ds
add
(bad)
jbe
push
xor
xor
adc
jmp
push
cmps
sub
popf
mov
or
push
dec
jecxz
xchg
aas
mov
jbe
stos
xor
mov
mov
cmc
cld
add
retf
aaa
test
das
sbb
xor
aad
inc
ins
xchg
fisttp
push
imul
or
jb
dec
mov
push
or
mov
push
inc
mov
shr
push
xchg
(bad)
pusha
push
jno
int
sub
pusha
xchg
cmp
mov
rol
xchg
movs
popf
push
push
dec
jp
fucomip
xor
jg
mov
dec
out
xchg
inc
in
jle
hlt
rcl
(bad)
mov
arpl
(bad)
xlat
xchg
in
icebp
pusha
push
(bad)
pop
imul
or
or
xchg
pop
mov
pop
cmc
dec
jmp
js
fiadd
pop
push
ja
mov
bound
push
adc
or
fwait
sar
cmp
push
push
test
inc
cmp
les
and
mov
mov
test
mov
fcmovnbe
and
pop
inc
lods
fisttp
pop
(bad)
cmp
sti
xor
push
dec
je
cmp
psllw
mov
loop
or
xor
xor
pop
adc
jmp
mov
pop
mov
adc
les
aad
pop
and
js
retf
int3
sbb
out
imul
mov
push
inc
retf
(bad)
mov
les
mov
xor
call
adc
dec
mov
pop
add
into
push
sub
pop
std
lock
mov
pop
push
arpl
ret
and
add
xor
adc
jl
nop
and
xlat
mov
add
dec
jmp
sar
cmp
ins
cli
movs
fstp
jecxz
ins
out
jb
aam
xchg
and
inc
repz
mov
push
mov
cmps
xchg
adc
shl
mov
xor
sub
cmp
ficom
xor
or
push
mov
or
fwait
test
sbb
scas
jnp
clc
das
mov
ins
arpl
xor
xor
dec
add
sahf
or
pop
cld
push
mov
pop
mov
or
xlat
mov
in
and
and
call
test
sbb
(bad)
and
dec
inc
sbb
retf
inc
stos
xor
sub
and
pusha
and
pop
add
stos
xchg
mov
jecxz
es
jbe
jp
in
push
push
and
das
test
fsubr
xchg
mov
popf
mov
dec
iret
aam
sbb
int
fldcw
jnp
pop
retf
mov
dec
xchg
call
inc
add
rol
mov
adc
bound
mov
enter
mov
hlt
add
hlt
in
enter
or
mov
push
pop
or
sbb
ja
cli
or
and
cmp
add
pusha
movs
push
aas
test
pop
sahf
mov
xor
enter
call
inc
mov
arpl
jp
std
std
xchg
sub
inc
xchg
lods
add
stos
ins
jb
mov
add
lock
add
out
in
push
call
mov
inc
pop
push
out
mov
mov
cmp
pop
leave
cli
jle
ret
sbb
pop
inc
enter
push
sbb
imul
add
mov
xor
fidivr
leave
inc
add
pop
clc
mov
pusha
xchg
les
push
repz
test
loopne
and
ja
pushf
xchg
mov
inc
pop
scas
or
rcr
inc
or
in
mov
xchg
cmp
cdq
ins
sbb
push
pop
mov
sub
pop
in
inc
mov
or
and
pop
mov
lods
jnp
movs
sub
mov
sub
inc
lods
aad
repnz
fs
mov
pushf
test
xor
stos
mov
into
ss
xchg
xor
loopne
xchg
(bad)
jle
lods
aam
rcl
cs
fcomi
inc
popf
sub
push
cmp
jbe
pusha
cmps
mov
enter
outs
(bad)
xchg
fisttp
inc
sub
sub
inc
and
pop
lods
jb
jp
mov
ja
mov
in
cli
xchg
aaa
ror
jbe
jne
sar
xchg
call
and
aad
sbb
ins
mov
push
add
rcr
inc
push
push
repz
test
pop
icebp
ds
pop
xchg
adc
sbb
mov
xlat
popa
adc
mov
xor
add
cmp
dec
addr16
dec
nop
mov
or
aaa
outs
leave
in
cmps
das
xchg
cld
or
pop
jno
test
push
mov
xchg
mov
xchg
sbb
inc
xchg
std
xor
test
bound
into
sti
test
xor
dec
fdiv
or
shl
into
je
sbb
inc
cwde
pop
dec
push
mov
add
or
push
(bad)
rcl
mov
inc
iret
pop
adc
pop
cwde
add
mov
ja
mov
arpl
repz
loop
push
sub
pop
jmp
fld
into
cdq
push
loop
jae
std
in
and
outs
lods
fwait
mov
or
cmps
mov
inc
mov
clc
in
fstp
mov
dec
inc
ds
in
in
js
xor
outs
test
inc
daa
imul
cmp
ficom
pop
ss
and
xor
loop
mov
lods
jp
mov
(bad)
sbb
aaa
pop
(bad)
shl
aam
jno
mov
dec
xchg
mov
inc
in
jge
clc
cmps
xchg
repnz
xchg
test
fiadd
mov
lock
jecxz
jmp
sub
(bad)
enter
inc
jns
lods
(bad)
jae
push
mov
adc
scas
je
loope
popf
icebp
inc
je
and
sub
or
sub
bound
mov
inc
fwait
mov
xor
fisttp
cmc
push
lock
pushf
stos
stos
dec
rol
ror
mov
aas
stos
pop
ja
mov
aam
scas
loopne
addr16
stos
adc
dec
jmp
xor
pop
fs
lea
aaa
jns
mov
mov
sub
ins
fwait
iret
sub
inc
xor
sbb
sub
ins
adc
xor
movs
mov
sub
sub
cld
stc
mov
stos
mul
push
push
ins
popf
sub
mov
stos
dec
rcl
xor
js
cmps
cmps
ret
daa
and
add
stos
mov
mov
inc
repz
das
fst
fisub
movs
adc
jo
pop
cs
cmps
mov
sar
sbb
dec
in
cli
add
cld
cmp
jae
push
add
(bad)
jnp
test
mov
sub
retf
out
xchg
sti
inc
loop
jbe
mov
dec
xchg
std
xchg
pop
leave
mov
push
mov
xchg
push
mov
arpl
cli
out
cmc
loopne
inc
jmp
lds
sub
cld
sar
pusha
push
dec
pushf
sbb
pop
jbe
cmps
fwait
ret
sub
shr
add
aas
fisub
and
cs
lods
das
add
jo
retf
xchg
mov
out
xchg
and
imul
inc
in
test
pushf
add
icebp
icebp
mov
scas
mov
ja
mov
loop
(bad)
inc
pop
in
mov
sbb
aaa
std
clc
aam
sahf
push
add
inc
stos
imul
or
mov
fistp
cs
push
je
sub
inc
add
add
inc
mov
ds
push
pop
cdq
mov
inc
(bad)
call
bnd
je
push
rol
sti
(bad)
out
cmps
push
call
shl
cmps
test
jl
cwde
mov
daa
sar
xchg
fsub
jp
jmp
and
cmp
jb
aas
jo
dec
stos
sbb
inc
sub
mov
jmp
push
aaa
int
or
sbb
mov
mov
pop
xor
aas
clc
repz
imul
and
inc
xchg
into
xchg
dec
fcom
mov
jmp
mov
pusha
fs
mov
push
aam
dec
ins
xchg
add
enter
clc
stc
cld
jbe
aaa
jne
pop
lahf
sbb
lea
imul
jmp
xchg
neg
jge
mov
or
add
imul
aaa
movs
cmp
mov
inc
(bad)
add
jns
test
xor
mov
mov
out
or
sbb
mov
adc
sti
std
sbb
mov
or
cmp
ficomp
jle
imul
cs
mov
stos
inc
xchg
icebp
or
pop
sub
sbb
push
mov
stos
add
or
mov
lea
aaa
and
fisttp
stc
fs
rcl
test
and
mov
std
(bad)
into
adc
push
xchg
xchg
mov
adc
inc
outs
stos
fcom
jp
cmp
push
enter
shr
ins
ins
loopne
ds
xchg
mov
outs
lahf
nop
add
xor
xor
pop
add
cmp
add
sbb
cmp
fist
imul
jl
inc
(bad)
mov
dec
mov
test
lock
xchg
pop
in
lea
and
cli
test
(bad)
push
xor
pop
clc
hlt
retf
inc
jmp
jle
adc
xchg
mov
test
sbb
xor
and
mov
mov
mov
arpl
mov
dec
ret
das
(bad)
hlt
jo
dec
jp
cmps
je
mov
call
out
inc
adc
jmp
ret
mov
xchg
xor
fucom
sbb
xor
fisttp
sub
repz
stos
pop
gs
push
mov
push
or
pop
(bad)
daa
xchg
add
xor
pop
ja
ds
sub
sub
inc
inc
mov
scas
or
cmps
pop
aaa
xor
out
cdq
xor
push
adc
loopne
cmps
leave
sbb
fisttp
call
mov
mov
cwde
in
sti
outs
imul
cmp
jmp
pushf
or
lahf
aaa
and
popf
mov
test
in
cli
add
aas
fisub
xor
sub
pop
inc
retf
nop
mov
xor
xor
or
aad
aad
sbb
xchg
imul
xlat
xchg
je
xchg
popa
and
aam
push
jecxz
and
mov
xor
fmul
xchg
sahf
pop
fwait
imul
(bad)
fistp
inc
push
shl
mov
ins
call
jg
std
add
cmp
xor
cmp
sahf
imul
xor
movs
lahf
sbb
or
stc
xchg
xor
jb
mov
dec
call
xchg
add
aam
mov
(bad)
mov
ja
mov
cmp
(bad)
dec
sbb
iret
dec
push
sub
(bad)
rcr
ds
pop
mov
imul
sahf
adc
xor
add
adc
pop
or
ds
daa
rol
jp
mov
js
mov
inc
clc
in
and
jge
stos
push
push
xchg
jmp
rol
shr
xchg
mov
mov
ror
inc
retf
dec
clc
sub
fist
cmp
pop
inc
inc
mov
imul
iret
inc
(bad)
icebp
xchg
pop
xor
sbb
inc
add
sub
pop
inc
cmps
arpl
push
pop
(bad)
icebp
xchg
pop
lods
sti
jb
dec
jbe
cmps
push
div
xchg
imul
jb
lock
neg
mov
stos
arpl
leave
xchg
and
in
in
fcomip
pop
inc
cwde
cdq
push
jecxz
fcomp
sub
leave
lock
xor
inc
adc
mov
cmp
mov
mov
pop
fidivr
stc
addr16
pop
adc
xor
adc
dec
push
scas
push
cmp
mov
and
sub
mov
inc
(bad)
hlt
sbb
popa
je
mov
inc
xchg
rcr
or
out
jne
push
lea
jg
test
aam
(bad)
repz
inc
xchg
pop
(bad)
cmp
sub
shl
sub
pop
jne
mov
sub
mov
fwait
repz
sbb
add
pop
add
ins
ficom
dec
mov
ja
fwait
xchg
imul
inc
out
xlat
mov
jmp
mov
xchg
ins
int
add
add
pop
lock
scas
jmp
popf
or
rol
push
xchg
push
fidivr
add
fistp
pop
pusha
arpl
adc
xchg
cmp
xlat
inc
adc
ret
retf
inc
cmp
adc
mov
mov
mov
and
push
push
pop
in
int
aaa
xchg
aad
cld
sbb
ins
les
mov
dec
in
stos
mov
loopne
or
inc
mov
cmc
test
dec
cmps
ds
das
shl
mov
xchg
jo
pusha
scas
cmp
mov
ins
mov
test
out
sbb
aaa
cmps
xor
push
sbb
arpl
imul
or
xchg
xchg
stos
adc
or
mov
repnz
jae
movs
jno
(bad)
cmp
into
xchg
or
(bad)
in
xor
xchg
jmp
add
int
xchg
fadd
cmc
ret
sub
and
in
stc
scas
inc
shl
add
pop
jl
mov
push
out
mov
jl
icebp
or
add
xor
out
and
dec
mov
pop
in
stos
mov
sbb
jl
xlat
cdq
add
pop
push
mov
inc
mov
xchg
jle
std
retf
scas
adc
jg
cld
mov
addr16
icebp
clc
sbb
(bad)
push
loope
fimul
pop
cmp
retf
cld
sbb
pop
outs
push
test
mov
fdivr
or
js
leave
pop
sbb
das
rcl
imul
cmp
xchg
sub
fist
loopne
jbe
mov
mov
dec
xchg
les
adc
rol
mov
jl
mov
adc
sti
test
scas
dec
jecxz
fdiv
pop
or
(bad)
fist
cmp
jp
stos
pop
ins
push
xchg
push
stos
mov
jg
call
pusha
dec
ds
xor
nop
aaa
mov
stc
imul
adc
adc
fistp
repnz
dec
jbe
pop
call
loope
pusha
jmp
fmul
pushf
ror
cmp
outs
jg
mov
loop
ror
push
cmp
loop
fist
ds
pop
cmps
pop
ins
push
mov
mov
mov
icebp
clc
sbb
and
xor
and
stos
ja
mov
ja
(bad)
(bad)
dec
neg
cmp
push
cli
lahf
repnz
mov
movs
jb
std
(bad)
mov
jecxz
or
inc
lahf
xchg
xchg
push
xor
jmp
mov
in
sub
ret
data16
jo
dec
mov
pop
sub
xchg
sub
add
xor
xor
jo
xor
pop
xchg
add
jl
sar
ja
mov
dec
in
fistp
out
bound
pop
call
rol
mov
xchg
add
pop
mov
pushf
jmp
mov
xchg
cmp
rcr
dec
addr16
pop
push
lods
aaa
pop
ds
push
dec
clc
pop
jns
cmp
dec
ss
fwait
(bad)
ds
or
clc
jb
popa
adc
xor
or
and
push
xchg
add
jg
retf
popf
mov
fs
(bad)
sti
aaa
leave
sti
jbe
js
push
mov
jae
les
adc
xlat
mov
mov
mov
jno
add
hlt
lds
mov
dec
call
cmp
loopne
pop
or
sbb
pop
test
push
mov
mov
loope
or
and
xor
jo
cmp
aad
arpl
outs
popf
mov
xor
and
cli
xchg
xor
sti
js
imul
lock
les
xor
les
(bad)
mov
ja
movs
test
sbb
inc
cwde
cmps
ins
loope
fisubr
aas
ds
neg
jbe
xor
pop
ins
push
sahf
inc
sbb
fwait
mov
outs
jmp
jbe
jae
retf
jo
xor
push
mov
fidivr
mov
ja
cwde
mov
inc
and
out
xchg
inc
mov
pop
lock
push
mov
ins
xchg
sar
daa
retf
ficom
test
aaa
mov
lods
adc
loopne
(bad)
jle
mov
ds
cld
ror
cs
dec
stos
or
pushf
dec
sub
mov
out
or
ss
pop
push
bound
adc
pushaw
scas
jns
movs
sub
xchg
mov
dec
and
cmc
mov
mov
jbe
movs
outs
(bad)
mov
dec
stos
les
and
out
add
mov
pop
mov
stc
stc
test
cmc
ins
outs
mov
adc
cs
repnz
(bad)
adc
dec
scas
cmp
lods
inc
adc
push
lods
jg
icebp
setg
pop
adc
adc
adc
dec
inc
mov
mov
mov
inc
dec
jge
aam
xor
sbb
(bad)
clc
scas
repnz
mov
mov
cdq
jns
mov
cld
or
idiv
xchg
add
mov
test
lods
dec
cmc
inc
(bad)
or
(bad)
repz
addr16
inc
add
push
push
jne
mov
mov
enter
cmc
outs
je
inc
int
pop
jge
adc
push
dec
mov
ja
and
cmp
cmp
scas
cmp
(bad)
jns
dec
addr16
popf
jo
fsub
pop
sub
push
lds
repnz
inc
xchg
lahf
add
lahf
addr16
in
scas
adc
std
cld
clc
retf
imul
xor
cmp
shr
and
jns
ins
nop
mov
mov
(bad)
shl
repnz
pop
ds
push
push
adc
outs
jo
outs
inc
test
sbb
xor
dec
test
cdq
and
sti
push
dec
pop
push
fimul
call
hlt
mov
xchg
pop
aad
xchg
idiv
je
mov
add
mov
scas
dec
loope
xlat
adc
dec
call
jo
inc
scas
ins
pop
test
mov
int
xor
call
je
sbb
and
sub
adc
outs
inc
stos
outs
sub
sbb
or
cs
or
popw
pop
scas
jo
mov
xchg
je
xchg
pop
add
cli
cmps
add
iret
xor
jle
out
(bad)
outs
aaa
iret
leave
mov
cwde
xchg
xor
(bad)
repz
clc
pop
jbe
xor
loopne
cmp
les
push
cli
sbb
pop
mov
gs
sub
add
pop
pop
retf
lods
cwde
xchg
sub
shl
xor
dec
and
dec
xchg
in
mov
out
xchg
gs
fst
mov
mov
sbb
pop
hlt
sti
xchg
std
aad
ins
mov
(bad)
push
pop
sbb
xor
push
or
push
mov
mov
stos
das
or
dec
out
and
jmp
in
ins
js
push
and
jb
inc
push
ins
adc
xchg
xor
popa
(bad)
inc
test
jle
ins
pop
and
mov
xchg
add
jmp
std
add
imul
mov
xchg
retf
pop
xchg
mov
lea
xor
fcom
dec
push
jp
sbb
sub
leave
nop
xor
scas
pop
into
ret
rcl
sbb
add
jmp
push
ror
mul
and
icebp
and
addr16
ins
xor
pusha
push
xchg
sti
nop
sbb
push
repz
cmps
call
mov
mov
mov
add
mov
push
(bad)
dec
or
aam
fcomp
sub
pop
data16
sbb
xchg
movs
call
clc
daa
test
jne
gs
cmp
jb
sbb
add
mov
test
xor
pop
push
cdq
cmp
sbb
push
mov
pop
in
mov
in
popa
or
stos
test
jecxz
xchg
test
rcl
mov
push
xchg
mov
pushf
movs
fld1
pop
gs
lods
push
inc
dec
(bad)
fstp
inc
jae
inc
mov
imul
pushf
cmps
mov
jg
cld
push
mov
sbb
add
ja
cmp
pop
pusha
xchg
push
xchg
sbb
cs
sub
lods
cmps
add
je
xor
jecxz
pushf
rol
xor
lock
loopne
mov
outs
popa
xchg
mov
adc
cwde
cmp
dec
pusha
cwde
test
sub
(bad)
iret
and
push
mov
pop
xchg
jns
or
(bad)
rol
mov
xor
xor
cmp
mov
xor
mov
int3
icebp
xchg
xor
sti
push
fist
arpl
jg
mov
inc
ret
mov
icebp
aaa
(bad)
popa
movs
mov
pop
sbb
xor
fcom
call
jmp
cs
dec
inc
sub
adc
mov
ins
mov
leave
mov
cs
imul
add
daa
leave
pop
sbb
sbb
cmps
push
sbb
push
repz
dec
sbb
mov
cli
inc
pop
pop
scas
jo
xchg
repnz
call
mov
xor
movs
retf
pop
frstor
add
(bad)
int3
enter
mov
xor
in
cld
repz
pop
jg
push
scas
pop
gs
push
xchg
mov
int3
push
out
xor
daa
mov
adc
outs
sbb
pop
ds
dec
pop
in
stos
mov
sbb
out
xchg
xor
add
dec
jmp
adc
mov
test
imul
mov
cwde
fcom
dec
jl
mov
dec
cli
(bad)
fist
xor
dec
mov
inc
pop
jp
mov
cmps
ja
or
in
pop
jo
sbb
aas
cmp
and
iret
inc
jne
push
add
and
dec
jge
into
movs
add
jle
mov
pop
mov
pop
or
test
fcmovnb
adc
cmp
fsub
pop
inc
xchg
fmul
push
fstp
add
mov
jg
sbb
jle
or
sahf
ins
cs
mov
cmc
push
fpatan
sub
and
sbb
pop
stos
adc
dec
pusha
test
xor
xor
sar
cdq
mov
inc
mov
ja
push
push
cmp
mov
and
xchg
repz
stos
pop
ja
mov
sbb
repz
into
hlt
outs
sbb
fiadd
cmp
ror
add
cmp
mov
mov
call
mov
mov
and
adc
fs
jo
shl
push
lods
into
mov
jmp
loop
ror
scas
je
mov
dec
mov
cmps
addr16
mov
icebp
pop
ror
xchg
dec
mov
mov
and
loop
aam
pusha
add
daa
sbb
repz
mov
enter
outs
stos
sub
add
mov
outs
jmp
arpl
fisub
xor
or
adc
ja
outs
ja
push
and
xor
(bad)
test
add
cli
pop
jno
mov
jg
rcr
in
sti
cmc
push
repz
or
xchg
ds
sti
xchg
std
jecxz
inc
fwait
xchg
jnp
adc
repz
ja
test
jge
xchg
jge
xchg
xchg
(bad)
es
repnz
hlt
jo
jecxz
dec
jbe
enter
push
and
das
mov
(bad)
cmps
sub
test
(bad)
aaa
mov
jb
mov
outs
cwde
in
call
sbb
clc
mov
in
shl
pop
push
popf
test
adc
call
dec
jge
mov
pop
out
ds
push
int3
adc
cmp
movs
or
outs
sahf
imul
mov
sub
ins
fcmovu
sub
pop
pop
in
push
add
xor
cmps
sbb
jge
mov
jb
mov
ret
adc
dec
jae
xchg
ret
sti
fdiv
add
ror
cmps
sar
pop
jg
(bad)
aas
adc
adc
fisttp
push
test
iret
pop
pop
ss
test
jbe
pop
lahf
mov
clc
ja
jmp
and
sub
push
jl
xchg
daa
xchg
pop
int3
pop
jns
outs
and
add
and
std
xchg
lods
ret
inc
push
jl
sub
enter
mov
mov
pushf
mov
das
stos
inc
pop
xchg
mov
push
xor
test
mov
int
push
push
icebp
out
inc
call
dec
and
mov
mov
leave
cli
sbb
add
inc
cmp
or
inc
mov
fs
stos
xchg
adc
fcmovbe
jmp
cmp
test
mov
out
mov
mov
push
pop
in
lock
fimul
out
mov
push
es
dec
jbe
or
and
dec
mov
xchg
lods
mov
in
int3
or
jmp
jno
int
sub
sbb
pop
pushf
push
xor
xchg
push
inc
(bad)
lods
mov
into
xchg
pop
sbb
inc
shl
lock
xchg
sar
dec
in
xchg
jno
out
fxtract
add
mov
mov
test
xor
fadd
cmc
fld
pop
fcom
out
(bad)
fst
aaa
pop
sbb
cs
test
test
addr16
adc
or
or
(bad)
adc
sbb
cmp
rol
stc
inc
pusha
and
dec
jmp
pushf
jno
(bad)
sti
std
je
pop
scas
fwait
mov
add
stc
icebp
out
rol
cmp
cli
push
and
iret
not
cmp
or
test
inc
sub
mov
mov
in
sbb
dec
dec
push
cmp
and
cmp
or
push
or
xchg
xor
xchg
and
inc
and
loop
and
xchg
into
popa
or
lods
mov
aad
scas
repz
ja
xchg
sub
cmp
push
call
mov
dec
pop
jb
les
ins
out
dec
xchg
(bad)
push
inc
inc
xor
cwde
das
mov
scas
or
sar
pop
popf
mov
push
(bad)
stos
inc
shr
inc
(bad)
popa
jo
lea
mov
dec
test
mov
pushf
xchg
ja
xchg
aam
cmp
jle
(bad)
pop
xor
imul
push
xor
bound
jo
pop
lock
das
inc
mov
lds
pop
pop
mov
and
cmp
sti
pop
jo
cmp
sub
pop
out
outs
lods
push
pop
stos
xor
lods
mov
jno
xor
rcl
dec
jb
rcr
movs
xlat
bound
xchg
push
es
(bad)
add
imul
popa
mov
jmp
nop
mov
jecxz
in
xor
das
in
retf
fsub
inc
js
pop
xchg
aas
dec
jge
xor
out
mov
fistp
sar
lock
push
inc
cmp
inc
sub
add
arpl
outs
cmp
neg
xor
(bad)
in
inc
xchg
repz
push
mov
inc
xchg
les
and
sti
jmp
ret
js
fwait
test
mov
sbb
or
mov
fild
push
addr16
les
inc
pushf
push
scas
lahf
push
cmp
pop
cdq
test
(bad)
data16
inc
shl
jbe
adc
rol
xchg
sbb
or
or
scas
lahf
daa
mov
jno
mov
dec
cdq
(bad)
cdq
imul
jno
std
hlt
xchg
xor
dec
cmp
je
mov
repnz
fwait
scas
xor
fiadd
iret
inc
enter
popa
mov
gs
xchg
retf
inc
call
dec
push
imul
pop
mov
in
ins
sbb
inc
nop
mov
or
ins
std
rol
aam
jnp
stos
pusha
clc
cmps
(bad)
jno
les
or
fxtract
or
sbb
push
lahf
imul
xchg
adc
mov
repz
push
fcom
jo
inc
xchg
sub
mov
popf
xchg
lods
mov
cs
popa
jmp
jne
in
sbb
and
(bad)
push
cmp
loope
xor
ins
(bad)
mov
(bad)
aad
or
shr
(bad)
fdivr
jge
mov
dec
loop
pop
cs
mov
shr
(bad)
in
sahf
jge
test
mov
es
test
dec
add
clc
ds
inc
in
daa
jbe
inc
mov
sbb
cs
lahf
xchg
into
retf
and
aam
leave
mov
or
aaa
xor
add
gs
xchg
push
popf
mov
(bad)
(bad)
sbb
fiadd
jbe
stos
jb
mov
dec
mov
in
and
rcl
scas
shl
jge
xchg
pushf
xchg
adc
ror
jmp
test
add
mov
ror
or
(bad)
repz
add
jge
mov
popa
jo
inc
ds
xchg
mov
outs
jmp
sbb
inc
xor
cmp
jns
sbb
pop
pop
mov
pop
xchg
mov
pop
cdq
mov
sbb
pop
add
ss
inc
in
xchg
arpl
not
out
idiv
ins
lea
aaa
test
mov
div
sub
jmp
and
jl
loopne
inc
push
call
push
scas
jnp
mul
cmc
jp
inc
adc
sub
cdq
push
stos
xor
inc
outs
mov
ja
mov
or
push
aam
mov
pushf
pop
pop
push
fimul
vdivps
mov
add
sbb
mov
xchg
xchg
hlt
push
xor
jo
lods
fld
dec
lods
or
mov
push
gs
lods
push
cmp
mov
adc
cmp
xor
add
push
retf
neg
pop
out
(bad)
dec
mov
pop
mul
push
movs
outs
loope
(bad)
jl
(bad)
cmps
popa
(bad)
stos
add
cmc
(bad)
mov
mov
dec
je
mov
sbb
(bad)
clc
sub
jle
mov
fimul
es
(bad)
test
callw
sub
pop
push
mov
mov
mov
(bad)
mov
jno
pop
adc
pop
sbb
xor
xor
pop
data16
push
and
xor
jmp
jno
ins
inc
push
movs
jne
mov
dec
cmps
(bad)
movs
dec
xchg
xchg
inc
and
shl
mov
call
mov
repz
ins
xchg
xchg
xor
dec
in
add
pusha
les
push
mov
xchg
lds
test
js
call
adc
sub
adc
aaa
shr
mov
push
jl
jmp
sbb
add
jle
dec
test
mov
adc
ror
test
cmc
dec
mov
cwde
test
in
test
pop
sub
aaa
cmp
inc
inc
and
stos
or
push
lea
pop
mov
lods
mov
jmp
inc
sbb
and
dec
jo
lahf
das
pushf
and
push
mov
jne
aad
pop
aaa
or
fcom
loop
push
and
dec
xchg
les
and
cmps
nop
push
jecxz
mov
push
mov
fcomi
xchg
stc
retf
xchg
mov
adc
(bad)
cld
out
arpl
cmp
add
pop
push
test
sub
retf
lahf
xor
pop
xchg
jmp
jo
xor
adc
add
bound
ins
dec
mov
je
xchg
fwait
cmp
cmp
(bad)
xchg
ds
clc
popa
les
arpl
cmp
add
jecxz
cmps
mov
test
xor
repnz
fisubr
lock
xor
sub
cld
call
or
or
push
call
mov
fidivr
stc
or
fiadd
pop
dec
xor
das
xor
pusha
lods
outs
xor
fwait
pop
aaa
ss
(bad)
xchg
cmp
inc
and
dec
xchg
les
and
cmps
nop
push
jecxz
mov
mov
mov
fcomi
mov
lock
ins
popf
mov
dec
sbb
fdivr
leave
pop
out
ss
imul
cmp
fwait
mov
xor
aam
jmp
inc
jo
xor
add
jns
sbb
sub
xor
sbb
pop
xor
sahf
imul
mov
les
and
inc
xchg
les
icebp
rol
lods
lahf
ret
das
stos
add
mov
test
fwait
mov
jp
sub
push
jecxz
addr16
xchg
xor
add
test
aam
inc
lods
push
fld
and
inc
into
sbb
popa
and
sbb
add
jp
sahf
jns
mov
mov
(bad)
mov
lahf
aad
fild
sbb
lds
add
cmp
push
and
out
pmullw
stc
scas
jmp
pushf
mov
(bad)
xchg
ficomp
inc
jecxz
test
and
cmp
outs
mov
inc
ds
mov
mov
sbb
inc
jmp
jae
inc
xor
cmp
add
mov
mov
jae
xlat
pushf
sbb
and
ficomp
jmp
jno
mov
outs
xchg
mov
in
jge
mov
pushf
aaa
in
test
scas
cmc
cmp
mov
(bad)
aam
jae
fwait
lods
inc
retf
xor
and
fnsave
jo
dec
stos
or
xor
jns
mov
mov
out
add
push
je
into
pop
sbb
adc
jnp
test
mov
mov
xor
xchg
sbb
push
jno
mov
push
xchg
retf
xchg
popa
in
nop
inc
and
fiadd
stos
call
popf
test
out
scas
(bad)
out
mov
sub
bnd
ds
dec
mov
sbb
icebp
retf
cmp
xchg
jnp
clc
outs
addr16
xor
xor
pop
nop
sub
adc
gs
stos
or
movs
cmp
mov
ins
call
int3
pop
in
push
jl
push
aad
out
mov
mov
call
popa
scas
mov
jle
fwait
popf
adc
lods
mov
ss
nop
sti
in
push
xor
jg
lods
pop
push
push
mov
mov
call
gs
xor
test
inc
dec
lods
dec
add
cli
or
xor
fistp
out
inc
jl
inc
lds
cwde
jl
fwait
jno
in
fcomi
xor
adc
sbb
lock
fcomip
xchg
rol
pop
fsubr
or
or
stc
cld
ja
ss
push
pop
lods
orps
push
test
cmp
div
jecxz
sbb
(bad)
adc
sahf
adc
ja
push
jo
jl
mov
pop
xchg
aam
and
enter
fnstenv
outs
jb
mov
dec
loopne
xchg
push
out
jmp
push
mov
cli
lea
push
xchg
test
pushf
icebp
hlt
cld
xor
sub
xlat
stc
xlat
jns
xor
outs
inc
pop
cwde
outs
imul
lea
xchg
jbe
jge
int
sbb
aas
popf
and
and
push
gs
add
and
cmp
sbb
push
div
mov
jecxz
push
pop
(bad)
ror
and
xchg
mov
push
cmp
hlt
mov
lock
jne
movs
inc
jecxz
ficom
cs
hlt
fld
ds
ja
mov
pop
jo
dec
inc
pop
xchg
mov
clc
ins
in
addr16
sbb
gs
dec
ss
sub
pop
frstor
mov
jne
mov
and
push
cmp
out
xchg
xor
call
jo
dec
enter
xchg
aam
dec
aam
add
jmp
idiv
test
xchg
(bad)
mov
adc
rol
fwait
scas
xor
pop
neg
adc
cld
mov
(bad)
and
aaa
jge
mov
imul
inc
mov
cmp
pop
pop
push
add
add
dec
dec
lods
push
xor
sub
fstp
les
push
movs
jae
mov
push
loope
fs
ror
xchg
mov
adc
stc
cmc
cwde
call
scas
dec
jecxz
clc
cmp
jecxz
out
sbb
xor
inc
sub
mov
mov
es
inc
sar
xchg
inc
push
push
xor
pop
sub
pop
call
dec
bound
jne
mov
sbb
inc
sti
(bad)
popf
dec
mov
inc
nop
dec
sar
xchg
push
in
jne
mov
mov
cwde
fcmovbe
sub
test
aaa
sti
mul
lahf
fimul
js
sbb
ret
xor
jle
sbb
pushf
inc
sub
ret
sbb
int3
jg
cli
bsf
fbstp
sbb
daa
enter
inc
mov
mov
jnp
mov
jge
(bad)
loopne
scas
int3
add
lea
mov
dec
xchg
std
in
aam
jno
hlt
rcl
std
stos
lds
sahf
outs
ja
movs
popf
ds
cmc
test
lds
cwde
fcom
pop
(bad)
sbb
cmp
iret
fdivr
sub
sub
mov
or
mov
stos
cmp
(bad)
jg
std
push
sbb
adc
cmp
pop
bound
imul
and
mov
adc
and
into
mov
mov
sub
xlat
cmp
mov
jae
cdq
add
std
(bad)
xchg
add
push
(bad)
dec
push
test
div
int
cmp
loope
imul
aas
sbb
jnp
jp
ins
pop
push
std
jns
jge
mov
mov
sahf
rcr
movs
clc
add
adc
cmp
jg
adc
retf
pop
imul
xor
popf
sbb
and
std
mov
nop
not
push
ins
inc
mov
loop
out
in
call
(bad)
daa
jmp
stos
outs
inc
loopne
adc
or
fld
ins
out
and
xchg
xchg
mov
(bad)
cmp
push
jg
ss
jnp
dec
or
rcr
(bad)
cli
adc
and
xor
pop
adc
push
xchg
shr
enter
(bad)
fistp
jmp
jnp
mov
dec
mov
sahf
or
repnz
lods
sub
push
icebp
scas
mov
add
(bad)
jmp
inc
into
cld
neg
(bad)
xor
lods
mov
or
xor
push
sbb
icebp
mov
test
sub
pop
xor
and
pusha
sbb
inc
call
neg
xchg
cmp
pop
jbe
nop
dec
shl
xchg
je
xchg
ja
neg
mov
mov
ja
call
std
jecxz
ins
cwde
movs
aaa
loopne
fisttp
cs
int3
aam
push
in
cmp
push
dec
or
sub
fwait
scas
retf
cmp
out
jmp
jno
lds
sub
add
jg
mov
mov
pushf
sub
cmc
xchg
adc
jbe
mov
dec
test
bound
aam
add
bound
sahf
dec
ja
mov
push
xor
jmp
ins
fwait
test
xchg
gs
ds
xlat
rcl
cmp
xor
inc
or
cmp
mov
daa
out
or
das
mov
stos
ins
aas
cmps
cmp
fldcw
in
iret
out
mov
jb
outs
outs
jg
dec
fldenv
dec
loope
jne
std
(bad)
mov
in
jl
(bad)
popf
sar
test
inc
jmp
dec
adc
push
test
push
(bad)
aaa
jo
dec
test
inc
dec
mov
dec
nop
cmp
cli
or
repz
pop
and
xor
pop
add
cmp
xor
arpl
push
pop
movs
xor
mov
or
xor
jmp
loope
jbe
xchg
push
lds
in
loope
jb
in
(bad)
mov
mov
push
xchg
ret
test
jne
fidiv
hlt
jp
or
dec
int
bnd
ss
dec
cmps
pushw
jbe
push
sub
mov
add
jg
sar
hlt
dec
inc
popa
add
cmp
imul
sahf
sbb
mov
xlat
dec
js
mov
and
dec
leave
fcom
retf
jns
and
loopne
xchg
mov
push
jmp
inc
sub
cmps
hlt
add
mov
je
or
jecxz
jo
xchg
mov
idiv
ds
dec
out
lock
ja
mov
inc
cmp
mov
int
and
xchg
pop
jo
add
sbb
pusha
sub
daa
in
js
jg
mov
inc
out
movs
movs
pop
aas
push
cmp
int
in
add
xlat
popa
mov
cld
or
enter
fisub
(bad)
xchg
pop
sbb
es
mov
jmp
je
lods
inc
xchg
push
or
sbb
xlat
icebp
data16
and
sbb
jo
push
cs
xchg
lds
inc
mov
adc
or
and
lods
jp
mov
je
mov
ins
fyl2xp1
xchg
add
retf
jb
push
(bad)
pop
mov
sub
retf
out
cmps
cli
mov
add
cli
inc
xchg
or
cld
add
retf
and
add
and
stos
xor
and
push
stos
enter
data16
xchg
ds
enter
cmp
cs
xor
or
jle
fidivr
fstp
test
mov
dec
jge
rcr
repnz
jns
(bad)
jae
shl
jmp
dec
or
div
jo
inc
fwait
xchg
test
xchg
mov
repnz
out
ins
xchg
scas
xor
pop
fidivr
cs
sar
push
clc
add
push
lods
cs
mov
xchg
fwait
sub
cmps
jge
out
cs
jle
je
fiadd
sbb
mov
mov
mov
movs
cmp
(bad)
mov
aaa
xor
(bad)
lahf
es
jno
outs
push
push
stos
push
shl
test
and
fiadd
sbb
das
stos
sbb
mov
ds
shl
retf
pusha
cmc
mov
out
pop
(bad)
dec
or
fadd
in
push
popf
add
push
pop
cmps
(bad)
inc
fwait
push
sahf
mov
jmp
jbe
sti
xor
push
sub
scas
pop
mov
jmp
pop
test
xor
push
pop
and
(bad)
dec
xchg
jne
push
lds
loopne
pushf
sbb
out
sbb
cli
xchg
idiv
lods
pop
dec
mov
jmp
mov
pop
adc
test
add
sbb
sahf
js
jge
mov
idiv
iret
das
mov
jae
push
xor
inc
push
imul
cmp
mov
retf
xor
lods
and
lahf
clc
aas
mov
cmps
pusha
cld
mov
or
test
fdiv
xchg
xchg
adc
jmp
cdq
mov
das
add
jbe
xor
and
mov
inc
sub
mov
int
sub
push
std
and
or
into
pop
sbb
sbb
adc
imul
xor
xchg
push
aas
(bad)
stos
sahf
inc
mov
jne
test
xchg
jmp
xchg
les
or
loopne
mov
stos
scas
aas
test
ins
mov
cld
jmp
cmps
xor
or
jmp
cmp
inc
ds
adc
iret
clc
ds
push
je
sub
push
push
add
icebp
pop
mov
mov
pusha
or
(bad)
cs
lahf
mov
inc
frndint
cmps
es
jecxz
loop
jno
lds
(bad)
mov
fisub
adc
add
not
jb
movs
xchg
add
cld
fs
in
scas
jb
xor
hlt
iret
pop
fisttp
pop
inc
scas
xor
mov
imul
clc
sbb
aas
into
cmp
jge
sbb
ins
ins
xchg
pop
xor
sbb
adc
mov
shrd
xchg
pusha
mov
push
add
jo
mov
mov
les
(bad)
stos
dec
jo
mov
loop
(bad)
dec
adc
sub
(bad)
(bad)
inc
in
sbb
jg
jno
arpl
inc
sub
cwde
call
lea
adc
push
jns
cli
adc
cmp
xchg
shl
outs
sahf
mov
rcr
aas
mov
jb
ins
jo
fiadd
sahf
(bad)
pop
xchg
in
cmps
callw
xor
rcl
les
inc
jle
mov
push
dec
xchg
fdivr
mov
xor
bnd
inc
jae
jle
pop
imul
fnstsw
gs
arpl
xor
xor
xchg
and
test
sbb
into
cli
sub
aaa
fs
xchg
ror
movs
jl
mov
lahf
inc
out
mov
push
xchg
lds
stos
mov
add
mov
add
test
push
sbb
pop
lds
add
or
mov
lahf
movs
mov
lea
xchg
jmp
pop
jp
rol
sbb
inc
sbb
ja
mov
leave
fistp
xor
shl
fisttp
and
add
clc
not
fwait
int3
mov
scas
mov
in
mov
dec
lods
lods
inc
jecxz
jmp
sub
xchg
adc
push
(bad)
jg
mov
je
mov
iret
je
lea
xchg
jbe
jb
mov
xor
or
push
enter
pop
aas
fisttp
cwde
(bad)
mov
and
fs
mov
cmc
arpl
xchg
loopne
sahf
xlat
mov
cmc
mov
adc
dec
cmp
xchg
push
ds
fsub
in
mov
push
and
and
scas
adc
test
pop
dec
cmps
xchg
call
jecxz
mov
cmp
sub
add
dec
push
lahf
adc
nop
mov
xor
add
xor
pop
cmp
sub
mov
inc
pushf
mov
sbb
(bad)
add
jns
mov
repz
mov
inc
int3
cmc
adc
jle
mov
jmp
sub
shr
scas
pop
fidiv
adc
je
dec
cmp
mov
iret
data16
sbb
xor
sub
imul
inc
movs
and
shr
out
xchg
test
inc
loope
jg
mov
xor
xchg
je
sti
ret
mov
out
xchg
mov
sbb
dec
mov
clc
(bad)
(bad)
dec
inc
mov
test
rcr
addr16
aaa
addr16
pushf
or
mul
jns
cwde
test
sbb
cmps
dec
(bad)
repz
mov
jne
or
in
push
outs
sbb
push
mov
jmp
cmp
xchg
pushf
sbb
or
iret
mov
cli
outs
push
push
pushf
pop
(bad)
(bad)
arpl
add
lds
xchg
push
mov
mov
(bad)
fsub
lahf
movs
push
retf
and
loopne
std
pop
push
jnp
mov
data16
les
inc
(bad)
out
or
inc
mov
push
mov
scas
xor
jle
mov
addr16
xchg
ret
aaa
sar
pop
test
fadd
and
je
retf
or
push
in
idiv
je
mov
add
rcr
movs
in
rep
inc
jmp
pop
add
clc
and
push
js
push
jge
xchg
push
lds
cli
jmp
adc
and
push
mov
pop
inc
lods
pop
and
movs
mov
out
hlt
xchg
xor
pusha
pop
stos
pop
aad
test
in
add
rol
test
cmp
icebp
push
add
xchg
mov
shl
dec
iret
test
pop
fisttp
sub
fisttp
jne
loopne
pop
imul
cs
jg
lea
cdq
neg
dec
jno
shl
gs
or
imul
pop
scas
sbb
push
pop
das
jle
retf
xchg
add
jae
stos
arpl
mov
push
cmc
xchg
rol
test
ins
mov
dec
gs
stc
jecxz
cli
mov
mov
cmp
xor
cld
fild
aaa
jo
pop
lods
pop
push
cmp
push
mov
es
jnp
fistp
or
push
push
push
fild
imul
sub
das
nop
adc
arpl
push
pop
stos
push
push
mov
cmp
xlat
out
mov
jge
xchg
mov
arpl
xchg
push
xor
sti
hlt
push
int
in
mov
ins
sbb
dec
stc
in
retf
repz
pop
mov
adc
or
xchg
mov
stc
xor
or
movs
xor
ins
lahf
mov
mov
enter
call
leave
ds
aas
mov
test
xor
sbb
sbb
mov
repnz
pop
pop
test
push
test
xor
xlat
mov
in
or
test
cmp
cmc
sbb
scas
push
in
fnstenv
cs
sti
rcl
cmp
jnp
pop
popa
dec
mov
jp
mov
mov
out
add
add
aaa
aaa
jne
adc
push
dec
(bad)
cmp
or
nop
cmps
cli
cs
dec
fidiv
jle
pop
push
inc
fadd
mov
xchg
xchg
popa
and
fisub
cmps
mov
cmp
mov
adc
std
cmp
movs
push
cs
stos
push
stc
push
push
jl
mov
push
sub
xchg
xchg
call
call
push
pop
pop
mov
pusha
jmp
(bad)
xchg
popf
and
xchg
xor
jp
outs
fbld
cmps
sbb
fwait
inc
and
sti
stc
test
in
mov
xor
loopne
push
icebp
mov
cmps
cmp
mov
in
addr16
adc
jbe
push
mov
js
fisub
mov
xor
add
and
push
arpl
push
aaa
scas
cmp
mov
or
xor
pushf
sar
inc
pop
pop
mov
pop
mov
cdq
jb
lock
or
lds
xchg
(bad)
inc
push
icebp
mov
dec
mov
add
inc
iret
cmp
cmp
sbb
add
mov
not
lea
mov
sbb
sbb
out
aaa
jo
ss
call
xor
(bad)
cmp
or
add
gs
jl
mov
dec
add
outs
out
mov
test
(bad)
ins
lea
add
mov
sub
(bad)
dec
dec
ficom
jp
ds
cmc
lods
inc
sahf
pop
jp
pop
test
inc
cmp
mov
nop
cmp
xlat
jg
inc
data16
aas
cmp
jl
inc
scas
xor
pop
(bad)
shl
movs
dec
push
cwde
(bad)
jecxz
mov
and
fisubr
sar
mov
mov
add
mov
mov
imul
mov
out
in
mov
nop
fwait
dec
jmp
ror
sbb
jmp
cmp
push
inc
inc
mov
jne
mov
mov
repnz
addr16
xchg
inc
pop
pusha
xor
dec
cmp
adc
imul
movs
cmp
mov
dec
sti
fucomip
aaa
mov
jp
pop
jbe
fwait
dec
aad
fidivr
movs
je
xchg
mov
xchg
add
pop
neg
addr16
sahf
adc
mov
lods
xor
je
sub
ds
cmc
fisttp
xor
inc
mov
jge
lea
imul
cli
or
dec
enter
xor
fwait
aaa
lods
pop
fistp
mov
add
push
dec
fsubr
xchg
inc
mov
jbe
fisubr
sahf
imul
enter
mov
scas
xor
iret
adc
popa
seta
jmp
(bad)
dec
bound
call
xchg
fild
or
push
pusha
scas
jno
jo
imul
mov
mov
test
movsx
sbb
inc
leave
sub
add
imul
repz
inc
call
cmp
arpl
movs
lock
xchg
stos
cmps
dec
xchg
nop
add
xchg
ror
imul
jns
mov
and
cli
(bad)
xchg
stos
cdq
js
mov
fisttp
fdiv
xor
arpl
dec
ds
les
outs
loope
push
mov
xor
and
sub
pop
ficomp
xchg
outs
xor
inc
push
xchg
dec
loopne
dec
lods
out
arpl
imul
jo
iret
cmc
jge
shl
test
mov
mov
sbb
xor
loop
shl
pop
inc
jmp
pop
cmp
aad
push
loopne
or
dec
pushf
pop
dec
jo
dec
ds
mov
icebp
push
out
stc
and
fsub
jns
iret
and
and
mov
push
popf
mov
cmp
and
call
neg
push
repz
fisubr
loop
je
mov
lods
add
push
popf
sub
stos
push
je
mov
adc
jmp
sar
dec
js
and
cld
xlat
ficom
inc
pusha
jle
call
dec
mov
push
cmps
sbb
in
add
cmp
sbb
jb
sbb
sub
add
addr16
mov
inc
mov
and
aam
pop
mov
push
bound
arpl
jmp
adc
les
cmps
xchg
aas
test
popa
add
mov
out
pusha
test
jmp
clc
bnd
inc
jo
inc
mov
inc
ds
mov
nop
cmp
repnz
cmp
xor
pop
sub
inc
(bad)
ja
js
stos
jg
xchg
sub
or
fcomp
je
es
inc
test
xchg
pusha
out
cwde
push
and
movs
mov
enter
movs
aam
add
mov
fld
mov
into
adc
xor
clc
fistp
jo
dec
xchg
gs
cmp
jnp
movs
lods
xchg
xor
push
out
nop
sbb
xor
aaa
sub
sbb
jnp
fnstenv
adc
mov
cmp
arpl
(bad)
aaa
stos
mov
pop
je
lods
pop
(bad)
mov
dec
mov
jecxz
sub
shr
cdq
scas
mov
sbb
icebp
push
inc
sti
stc
xchg
std
fild
mov
cmp
cmp
cld
in
push
out
bound
outs
scas
and
jnp
cs
popf
mov
jmp
mov
cmp
xor
jne
adc
jns
shl
mov
pop
xchg
dec
(bad)
mov
enter
pop
pop
jl
push
fst
mov
push
cmc
sti
xchg
push
rol
jmp
mov
cli
in
rcr
dec
push
sub
into
xor
pop
fdivr
in
inc
retf
aaa
inc
ficomp
outs
pop
and
xchg
lods
mov
ss
inc
ret
sar
mov
push
jae
adc
jnp
mov
add
ins
(bad)
xchg
xor
mov
dec
pop
fimul
mov
lahf
jo
out
push
lock
sub
dec
sti
sub
mov
mov
add
les
fwait
test
push
cmp
pop
ror
test
frstor
push
or
or
push
mov
push
jp
cmps
mov
sub
jmp
jno
mov
adc
int3
sbb
push
push
shl
push
fwait
mov
pop
in
jmp
push
lock
jl
outs
fnstenv
mov
(bad)
movs
imul
mov
push
mov
stc
jecxz
repnz
ins
(bad)
fwait
inc
jecxz
shl
push
dec
out
int
data16
jo
inc
fidivr
ins
push
mov
adc
ror
ret
cmp
inc
enter
push
or
push
cmps
aas
outs
popf
mov
int
xchg
aaa
mov
dec
push
test
hlt
fwait
(bad)
dec
mov
xchg
jae
in
xchg
sbb
adc
adc
popa
daa
jmp
movs
cld
loope
outs
out
(bad)
pop
mov
pop
or
(bad)
fbstp
and
sub
scas
push
or
mov
mov
loop
jo
icebp
jbe
jno
call
sub
jb
push
dec
mov
stos
mov
or
add
inc
rcr
cli
jl
pop
lods
inc
loop
adc
mov
and
imul
(bad)
lods
jp
mov
repnz
(bad)
call
push
shl
xor
cmp
jmp
arpl
dec
xchg
push
cmp
lds
int3
rcl
enter
push
cmp
bound
fs
lahf
push
cmp
sub
(bad)
outs
sub
dec
(bad)
xchg
aaa
int
jno
pop
jbe
stos
and
mov
jl
mov
dec
(bad)
test
in
lock
je
inc
fwait
lods
shr
push
shl
xchg
lds
sbb
mov
pop
cmps
ds
jbe
xor
bound
inc
pop
add
add
das
leave
xchg
jae
add
sub
fs
mov
mov
jge
mov
pop
jmp
call
aam
aad
jae
mov
inc
xchg
mov
push
clc
popa
or
fnstenv
popf
mov
pop
popf
xchg
(bad)
dec
sbb
iret
sbb
or
hlt
mov
cli
xor
pop
jle
push
dec
push
xor
mov
push
and
or
frstor
sbb
das
lods
push
scas
push
mov
xchg
mov
push
(bad)
(bad)
xchg
das
mov
jb
fs
push
test
mov
pop
xchg
(bad)
in
in
mov
jmp
jmp
jl
mov
push
das
call
inc
ins
mov
inc
in
(bad)
adc
cmp
call
test
jns
jge
mov
lods
xor
in
jl
repz
pop
dec
frstor
pop
or
lahf
das
lea
scas
push
mov
jne
into
fwait
pop
aaa
cvtdq2ps
and
jp
mov
pop
lahf
mov
dec
loope
sbb
lock
mov
popf
imul
add
stos
loope
adc
xor
xor
inc
cli
and
push
jge
xor
jle
push
es
jmp
inc
out
shl
div
add
int
sbb
sub
pop
cmps
push
fsubr
jne
fstp
aam
and
pop
jbe
test
and
out
sub
adc
shl
xchg
ja
mov
push
push
jmp
dec
imul
mov
push
or
ss
sahf
dec
and
mov
scas
ds
iret
ja
xchg
cs
sbb
sub
push
adc
imul
cmp
sub
stos
mov
pop
loop
mov
xchg
pop
mov
cdq
fwait
lock
xchg
leave
and
mov
xchg
sti
test
test
adc
f2xm1
ret
ins
out
mov
sub
fsub
jecxz
jo
dec
mov
ins
pop
movs
inc
cs
lods
mov
mov
cs
jle
shr
mov
pop
pop
xor
cmp
jl
adc
sbb
jp
movs
dec
data16
shr
in
call
xchg
jle
push
clc
mov
popa
call
and
xchg
jp
ins
xchg
addr16
mov
add
xor
jl
scas
jno
jp
dec
and
call
xor
jo
or
and
mov
(bad)
cmp
add
in
pop
adc
xor
cdq
and
mov
inc
cdq
mov
xchg
xlat
mov
cli
inc
jb
popf
dec
shl
and
pop
dec
stc
mov
xchg
imul
test
aaa
stc
imul
mov
shl
cs
jo
inc
mov
inc
cs
mov
cmp
or
es
xor
imul
test
xor
adc
mov
sbb
fsub
adc
jbe
mov
xor
mov
fcmovnb
lods
pop
shr
pushf
ficomp
rol
je
test
xor
xlat
sub
mov
sub
pop
popf
xor
or
cs
mov
ret
fnstenv
fnstsw
clc
ins
inc
or
push
pop
add
pop
mov
fiadd
add
mov
jl
fucomip
aaa
mov
push
shl
ins
mov
loop
mov
mov
jbe
jecxz
xor
clc
lahf
ss
ins
movs
test
mov
sti
std
cmps
jecxz
inc
dec
mov
cmps
dec
and
int
in
je
aaa
push
push
cmp
imul
fwait
cwde
movs
ret
cmp
jbe
shl
std
add
enter
adc
and
push
(bad)
sbb
jg
mov
inc
popf
add
shl
hlt
pusha
pop
shr
sahf
mov
les
add
aam
or
data16
stos
push
gs
test
test
out
xchg
loop
(bad)
aad
lds
cs
fsub
adc
es
fs
and
mov
mov
sar
add
add
aas
das
jg
pusha
(bad)
daa
iret
add
dec
inc
sahf
dec
adc
mov
dec
sahf
fild
add
mov
cmp
mov
mov
jmp
loope
add
adc
loop
stos
jmp
pop
scas
add
xlat
jge
cmp
sbb
stos
dec
push
mov
mov
mov
fwait
stc
jns
(bad)
je
jb
iret
xor
add
cmp
pop
pusha
mov
inc
mov
aaa
fs
icebp
xchg
aaa
sar
add
jne
push
scas
jle
lahf
cld
pop
cwde
les
daa
std
ret
jecxz
mov
jle
lahf
adc
fst
dec
push
mov
fidivr
sbb
mov
aad
loopne
pop
push
inc
test
jne
pop
mov
(bad)
jg
div
call
push
sbb
adc
mov
pop
mov
push
mov
and
lods
adc
popa
fs
push
repz
mov
xor
les
movs
ror
sbb
mov
mov
ds
dec
push
mov
gs
scas
xor
pop
cmc
cld
lods
data16
dec
sbb
sbb
pushf
inc
add
mov
(bad)
aas
sub
das
mov
inc
popa
add
add
imul
xor
dec
ins
lahf
mov
jb
icebp
xchg
inc
mov
imul
addr16
adc
les
dec
mov
mov
xchg
jae
mov
adc
hlt
sbb
dec
outs
nop
test
sub
inc
xor
sub
test
jns
mov
cwde
adc
(bad)
jg
cli
je
jns
int
sbb
or
and
jp
xor
sub
movs
lahf
jno
and
rcr
loop
push
push
mov
dec
mov
mov
push
repnz
repnz
imul
mov
xchg
cld
xchg
fwait
mov
ds
es
jne
dec
stos
sbb
inc
in
or
fwait
int
sub
call
dec
jno
clc
push
push
sub
adc
jns
scas
pop
pop
mov
cmps
sbb
and
int
xor
gs
adc
rol
repz
mov
nop
jl
cmp
xor
out
stos
sti
pop
lods
test
ds
(bad)
fadd
imul
pop
cdq
arpl
jns
mov
ret
adc
(bad)
jg
cli
jno
jns
int
sbb
or
cs
jp
xor
sub
movs
cwde
aas
and
dec
inc
lahf
inc
mov
pop
loop
push
push
mov
dec
cmps
rol
or
out
or
dec
mov
scas
lds
fld
xchg
leave
movs
adc
lock
sti
dec
ins
mov
retf
dec
(bad)
(bad)
es
jbe
dec
stos
sbb
push
mov
sbb
mov
not
cli
or
ficomp
xor
sub
add
pop
mov
jo
(bad)
movs
cmp
xchg
call
aam
jae
mov
xor
sbb
rol
xchg
retf
or
sub
loope
mov
ret
xor
xor
jmp
jne
push
sbb
push
mov
push
imul
xlat
pop
in
mov
cli
add
jmp
aaa
jge
pop
mov
inc
inc
test
lods
xor
cwde
mov
jle
into
movs
sbb
ins
jae
cdq
pop
(bad)
out
out
pop
sub
sar
mov
inc
mov
stc
sti
test
fild
mov
pop
xor
shl
push
inc
mov
arpl
mov
mov
jmp
jb
mov
es
mov
stos
ja
xchg
scas
movs
stc
add
xchg
push
mov
outs
inc
lahf
outs
test
xchg
or
xchg
clc
(bad)
mov
addr16
push
aaa
cmc
loopne
loop
dec
jne
fcom
jbe
or
sbb
stc
fisttp
sbb
imul
xchg
stos
dec
jmp
jae
int
jae
adc
sub
pop
pop
(bad)
sbb
pop
and
iret
push
shl
test
sub
mov
loope
sub
lock
je
imul
mov
lods
mov
outs
adc
ds
mov
sbb
adc
inc
push
cmp
pop
ins
pop
popf
imul
int3
dec
sub
mov
sbb
pop
push
push
jge
icebp
pop
test
mov
adc
cmp
inc
and
inc
sahf
sti
jno
imul
jg
scas
xchg
sbb
call
sbb
movs
stos
loop
ficomp
jb
stos
xchg
repnz
scas
mov
dec
ds
aam
push
in
inc
ss
stos
cmp
and
inc
pop
bound
sub
or
inc
fld
and
and
lods
mov
mov
pop
stos
test
cdq
cmps
xchg
inc
mov
jbe
call
stos
mov
xchg
add
rol
(bad)
or
jle
mov
stc
cmc
scas
shl
dec
pusha
loop
dec
aad
mov
pop
cs
fadd
jle
inc
xor
stos
sub
test
mov
xor
inc
or
out
or
fisub
sbb
mov
inc
out
xchg
and
je
fsubr
mov
sub
mov
mov
call
mov
test
lods
push
div
sub
cld
fsub
adc
aaa
sbb
mov
sahf
mov
jmp
push
xor
pop
sub
adc
imul
aaa
cmps
cmp
test
sbb
xchg
inc
call
popf
pop
sti
ror
xchg
mov
inc
in
sbb
rol
stos
int3
dec
ficomp
mov
mov
adc
mov
mov
(bad)
push
cs
clc
and
cmp
pop
ins
test
xchg
retf
aas
push
stos
dec
jmp
jge
jmp
pop
mov
iret
jp
mov
mov
(bad)
bound
and
int3
lahf
cmpxchg
jbe
sbb
stos
xor
mov
push
add
inc
in
push
add
outs
test
fadd
dec
mov
movntq
fucomp
fiadd
inc
loope
sar
es
in
shl
cmp
pop
outs
pop
or
mov
(bad)
sbb
lock
inc
xor
jl
ss
scas
jae
lods
dec
add
lods
test
(bad)
xchg
pop
int
jb
jge
push
stos
and
mov
dec
add
ins
in
pop
push
mov
test
ins
adc
ja
mov
js
icebp
imul
out
mov
push
or
int3
retf
stc
inc
inc
sub
push
arpl
(bad)
mov
fbld
xlat
and
clc
jle
pop
sbb
pop
or
das
mov
test
adc
cmp
mov
(bad)
sbb
(bad)
out
xchg
sbb
pop
add
loopne
sti
push
xchg
add
rol
(bad)
scas
leave
cs
sbb
mov
stc
cli
test
mov
das
xor
jae
sbb
xor
sbb
mov
stc
push
cli
add
xor
pop
sub
cmp
add
imul
cmps
cmp
and
xchg
inc
call
lea
mov
in
in
pop
daa
xchg
mov
mov
(bad)
or
jbe
xchg
fisub
lock
fnstcw
cmps
fs
mov
cs
call
jge
scas
sbb
or
cmps
nop
cwde
cmp
stos
dec
jmp
jb
mov
sub
and
arpl
jnp
mov
ja
xchg
int
xchg
push
mov
jp
ins
addr16
popf
dec
sti
mov
cmps
test
stos
mov
fs
repz
add
cmc
sbb
cmp
mov
int
clc
cmp
push
icebp
call
pop
push
outs
mov
inc
add
mov
ret
fisttp
jecxz
mov
sbb
add
or
imul
inc
mov
pop
stos
mov
dec
dec
xchg
inc
mov
jbe
sbb
stos
xor
mov
inc
mov
mov
jmp
sub
push
mov
fbstp
ficomp
jmp
retf
sub
iret
(bad)
mov
xor
sub
jno
jnp
inc
sub
mov
jmp
(bad)
or
shl
jge
leave
daa
sbb
jecxz
int
std
outs
arpl
ja
mov
or
and
sahf
not
les
lea
mov
and
cmps
lahf
and
imul
mov
xchg
add
test
jp
das
cmp
jmp
or
inc
lahf
ins
sbb
mov
mov
fcomi
js
leave
pop
push
jno
mov
sub
xchg
cmp
mov
ja
movs
cmps
pop
pop
and
(bad)
xchg
aaa
sahf
fld
je
push
test
std
mov
cmps
fs
jge
(bad)
fisub
mov
outs
jb
xchg
mov
in
repz
dec
test
cld
ds
icebp
mov
jbe
and
cmp
sbb
cmps
inc
sub
stos
sub
jmp
mov
or
inc
adc
xor
aas
shl
fmul
add
mov
sbb
dec
dec
(bad)
cdq
cmp
addr16
stos
dec
clc
mov
dec
mov
test
in
inc
fcmovne
or
xchg
xor
mov
inc
outs
cwde
stos
ja
push
sub
or
hlt
fisubr
ss
inc
cmps
pop
dec
push
lahf
push
sbb
mov
nop
adc
in
aas
mov
xor
and
imul
sahf
jg
fmul
cdq
test
cmp
daa
sahf
jmp
dec
(bad)
xchg
inc
idiv
scas
jne
outs
and
sar
jl
xchg
test
adc
in
aad
ins
cwde
stos
dec
jmp
ficomp
or
sbb
and
dec
cs
mov
lods
mov
cwde
xchg
addr16
arpl
clc
pop
adc
sbb
push
iret
jge
sar
fcom
jae
movs
lahf
or
daa
pop
in
repnz
bsr
jb
imul
loopne
mov
test
mov
hlt
imul
mov
add
frstpm(287
xchg
xchg
(bad)
scas
dec
aad
repnz
mov
push
push
jle
sub
lahf
jne
pop
xchg
mov
test
cs
call
jne
clc
sbb
sub
push
adc
dec
ins
fwait
mov
ins
out
rcl
lock
cld
(bad)
hlt
pop
cdq
shl
in
mov
repnz
sbb
stos
jl
xchg
les
xchg
retf
outs
mov
inc
int
stos
cmp
xor
out
retf
jbe
push
ja
inc
stos
pop
dec
mov
push
xchg
mov
cmc
addr16
inc
cmp
pop
push
dec
add
xchg
das
lea
fsubr
cmps
push
and
sbb
mov
jl
fst
aam
popa
push
mov
arpl
adc
xlat
or
pop
stos
pushf
test
xor
mov
adc
icebp
repnz
cld
mov
cdq
(bad)
push
repz
xor
jbe
aaa
jo
jp
cmovnp
pop
jno
xchg
mov
loopne
das
mov
jae
jns
cmps
and
jb
adc
jmp
xor
mov
push
imul
add
inc
jle
mov
mov
inc
in
and
or
rcr
xchg
sub
rcl
sbb
test
add
dec
clc
jb
xor
adc
pop
or
cmp
mov
ins
xchg
movs
xchg
lea
and
addr16
iret
aas
adc
je
and
es
aas
mov
frstor
stos
outs
aas
mov
mov
xchg
and
xor
push
push
mov
(bad)
mov
jecxz
iret
nop
pusha
sub
movs
hlt
jae
ins
mov
outs
ja
mov
and
aam
stos
ror
mov
inc
iret
dec
sub
sub
add
dec
lods
sbb
popf
push
mov
and
lock
inc
jno
int
sbb
sbb
pop
xchg
movs
dec
push
xchg
aas
test
aaa
xchg
aad
icebp
push
retf
pop
mov
mov
mov
ror
test
scas
dec
mov
je
sahf
mov
mov
aam
imul
cld
cmc
sub
inc
gs
dec
and
es
in
xchg
lods
lods
or
int3
jl
aam
dec
inc
add
dec
adc
adc
sbb
stos
jl
movs
cmp
mov
loopne
push
mov
pop
daa
xchg
jno
iret
clc
addr16
popf
inc
loop
jnp
mov
mov
dec
mov
pushf
shl
inc
jge
rol
(bad)
out
ja
mov
cmp
int3
jle
inc
jae
dec
cmps
pop
push
loopne
cmp
mov
in
fsqrt
sbb
dec
mov
sbb
jae
fnsave
mov
jb
stos
test
add
inc
lahf
into
xchg
aas
test
add
mov
jmp
add
fdivr
test
outs
jns
mov
push
sbb
hlt
test
loop
xor
jae
xor
cmp
shr
push
dec
cmps
adc
pop
mov
cdq
xchg
xchg
into
sub
std
or
xor
add
push
push
fisubr
mov
fwait
sub
xor
(bad)
aaa
mov
jbe
mov
js
enter
xchg
push
pop
rcl
mov
jecxz
mov
shr
xchg
mov
sti
pop
jnp
sub
lds
sub
clc
sti
jecxz
call
pop
or
adc
mov
es
mov
xlat
inc
in
js
(bad)
pop
jo
ss
push
sbb
xor
sbb
adc
fwait
adc
add
sbb
jl
inc
idiv
loopne
in
jb
lock
mov
(bad)
stos
pop
jne
cdq
or
jmp
inc
jmp
push
ds
mov
jle
cmp
cmp
cs
mov
mov
push
iret
dec
out
sbb
cmp
pop
pop
push
or
pop
fild
test
xor
lahf
xor
push
gs
(bad)
out
ror
repnz
repz
dec
mov
xchg
jl
xchg
mov
mov
nop
push
add
jmp
lock
outs
dec
mov
jno
dec
in
das
sbb
jmp
sub
xchg
adc
cld
inc
es
dec
push
rcr
shl
jmp
ret
dec
cmp
popa
sbb
std
ins
inc
sar
mov
neg
xor
mov
scas
xlat
jl
outs
pop
ins
stos
xor
std
mov
and
shr
fcmovb
cmp
movs
test
aaa
sti
idiv
lods
lods
push
jmp
cmp
jmp
inc
fwait
sbb
pop
ds
cwde
ror
xor
lods
jnp
shr
stos
mov
push
push
jecxz
push
pusha
add
out
inc
pusha
movs
jp
mov
popf
mov
dec
retf
fisub
jecxz
jg
mov
addr16
push
rol
iret
(bad)
sti
mov
inc
movs
xchg
test
es
xor
pop
fisubr
sub
fdivr
fcomp
xor
pop
inc
jbe
cs
imul
or
inc
fdecstp
aas
fisttp
mov
sbb
push
mov
mov
xchg
ja
movs
sub
mov
jle
lods
cwde
pop
sar
loope
addr16
rcr
mov
dec
jmp
xchg
jo
xchg
pusha
es
call
mov
fdiv
cmp
mov
js
cli
(bad)
xchg
test
inc
inc
jmp
inc
es
fld
ss
cmp
jo
dec
jmp
inc
(bad)
call
ins
popa
sub
cmp
sahf
inc
popf
and
add
mov
cwde
xor
out
aaa
mov
jae
lds
popf
mov
xor
add
in
fadd
(bad)
cmps
pop
jl
mov
push
xor
fsubr
lods
lds
xchg
lods
inc
jecxz
(bad)
push
sbb
int3
fild
xor
xor
test
and
mov
mov
ror
(bad)
aas
mov
add
xor
aas
ins
js
adc
arpl
jbe
fsub
jg
stos
popf
sbb
and
fist
les
and
mov
xchg
ja
cmc
mov
mov
pop
jb
mov
add
test
cdq
sahf
cmp
adc
in
push
jmp
arpl
pop
jne
retf
aas
inc
cmps
ins
out
ret
das
mov
or
or
or
lods
das
mov
stos
dec
sbb
xlat
xchg
and
shl
fiadd
cmp
dec
stos
repnz
push
out
ja
std
repz
popf
movs
sar
jg
mov
shl
cdq
rol
jle
scas
mov
outs
ror
fdiv
adc
inc
lods
pop
outs
push
mov
xchg
ror
arpl
add
aaa
ins
popa
or
stos
cmp
mov
sub
(bad)
(bad)
call
cld
pop
addr16
pop
xor
dec
xchg
xchg
inc
dec
out
loope
pop
aad
mov
dec
outs
mov
mov
cmp
(bad)
mov
mov
or
cs
fist
sbb
cmps
pop
arpl
push
cs
xchg
call
or
std
ins
inc
inc
xor
or
push
lods
das
mov
mov
push
call
jecxz
xchg
aaa
mov
pop
push
stos
pop
push
xchg
fs
mov
xchg
add
outs
test
dec
mov
repz
cwde
jmp
dec
pop
jmp
retf
dec
sub
xchg
jmp
pop
mov
or
lds
pop
pushf
nop
jnp
loope
fs
ret
and
add
lods
pop
call
and
mov
and
fist
cmc
jne
pop
mov
hlt
(bad)
xchg
mov
je
repnz
lea
in
xchg
xchg
mov
xor
mov
xlat
icebp
rcr
dec
sbb
out
sbb
cmp
pop
ret
and
push
dec
mov
push
cmp
mov
pop
stc
cli
or
ss
sbb
jnp
mov
outs
mov
mov
aaa
dec
ins
out
iret
jmp
clc
dec
jne
lods
ja
fcomp
fs
jno
int
mov
les
mov
pusha
loope
adc
iret
lock
mov
xor
push
(bad)
dec
jl
xor
or
pop
ins
push
xchg
cs
mov
cli
sbb
inc
add
and
inc
and
pop
fisttp
mov
jge
cdq
mov
(bad)
xchg
inc
int
inc
pushf
add
mov
repz
lock
stos
repnz
shl
fistp
stos
shr
ins
jg
test
xchg
loop
ins
cmp
sbb
out
retf
sti
cs
dec
scas
daa
jl
stos
jbe
jge
mov
mov
cli
or
and
adc
jo
add
out
ja
inc
cmps
sbb
or
add
(bad)
mov
xchg
std
push
mov
sub
je
(bad)
(bad)
dec
jecxz
mov
jge
ins
test
pop
push
xchg
mov
and
inc
jg
scas
dec
cli
jnp
cmp
(bad)
fmul
xor
cmp
mov
mov
mov
sar
add
aas
jmp
das
mov
stos
imul
pop
nop
mov
iretw
aam
inc
test
jg
sub
les
frstor
adc
stos
mov
hlt
imul
gs
test
icebp
add
cmc
lds
(bad)
mov
add
into
inc
jmp
jns
pop
mov
inc
cmp
mov
cli
clc
daa
test
je
push
iret
pop
add
and
sbb
adc
popa
pop
sahf
push
lea
addr16
or
popf
pop
not
loopne
in
xchg
add
not
mov
cs
push
mov
mov
int
mov
loop
adc
mov
xor
adc
stc
mov
lds
jnp
test
jge
cmps
inc
inc
ja
mov
outs
(bad)
lock
add
out
pop
into
add
xor
(bad)
and
and
fld
aam
add
sub
jecxz
mov
cld
add
repz
std
or
imul
jns
in
enter
adc
outs
cmp
sbb
(bad)
jecxz
out
cmp
data16
or
mov
mov
stc
pop
jmp
add
inc
mov
adc
inc
imul
cwde
(bad)
mov
inc
sub
in
shr
cmp
push
inc
mov
sbb
cdq
in
in
cmc
xchg
jp
cli
icebp
test
jmp
xchg
lea
je
cmps
not
retf
ins
cwde
scas
cmp
dec
retf
daa
fdivr
xlat
jl
cmp
sbb
cld
inc
cs
mov
mov
(bad)
pushf
push
cmp
and
sub
mov
pop
xchg
movs
lahf
sbb
adc
fist
repnz
bound
jecxz
lock
test
loopne
cmc
mov
scas
add
inc
mov
addr16
xchg
movs
xchg
and
mov
mov
jnp
dec
retf
dec
jmp
(bad)
jne
push
sbb
je
dec
push
jg
mov
scas
xor
ins
(bad)
in
xor
or
xor
mov
and
push
push
xchg
push
xor
xor
xlat
mov
sbb
jl
neg
fldenv
mov
dec
mov
in
psubd
test
fs
xchg
das
inc
loopne
xchg
cld
repz
ins
xchg
mov
pop
into
aaa
es
in
push
loope
jne
dec
les
dec
inc
cmp
pop
xchg
fwait
int
sbb
fadd
out
sub
add
pop
ja
push
ss
aas
lods
ins
stc
inc
push
mov
mov
mov
add
std
xlat
xchg
adc
arpl
test
jmp
test
stos
imul
jmp
imul
movs
outs
ja
mov
sbb
mov
scas
xor
jne
ds
jecxz
(bad)
push
loopne
jo
bound
cmp
mov
call
mov
pcmpeqw
or
pop
or
push
sbb
push
mov
dec
cdq
xchg
xchg
wbinvd
inc
cld
scas
call
jbe
test
ret
pop
cmps
loope
imul
mov
nop
mov
ins
sbb
mov
sbb
scas
inc
hlt
inc
jmp
hlt
xlat
inc
retf
cs
cmps
pop
fs
sahf
inc
adc
scas
cmp
stc
jp
clc
or
xor
pop
gs
mov
bound
ja
test
jo
and
aam
adc
push
dec
cdq
sub
test
stos
pop
add
shl
adc
mov
stos
adc
cld
icebp
xor
mov
adc
push
stc
(bad)
in
jne
cmp
sub
mov
mov
mov
call
jne
js
leave
ss
add
ins
jmp
or
pop
push
jmp
or
fist
loop
jno
(bad)
hlt
and
mov
cmps
jae
ins
mov
push
call
xchg
dec
push
mov
cmp
(bad)
retf
call
mov
pusha
add
mov
pop
cmps
arpl
out
xor
int
sbb
das
mov
movs
pop
xor
mov
jecxz
loopne
mov
inc
stos
xor
mov
ja
xchg
dec
das
retf
xlat
test
rep
repnz
in
xchg
xchg
js
mov
test
inc
enter
inc
cs
jmp
push
add
and
addr16
popa
mov
xchg
lods
mov
push
into
outs
loop
jo
fistp
push
ja
sbb
imul
dec
mov
(bad)
fist
les
ja
dec
div
xchg
jg
mov
std
add
pop
mov
mov
jne
test
cmp
mov
push
inc
ds
in
lock
xor
es
dec
loopne
sbb
xchg
call
cli
or
and
pop
cmp
add
daa
mov
test
inc
pushf
sub
sbb
and
sbb
jg
rcr
mov
xor
shr
fucomip
dec
movs
addr16
in
mov
repnz
mov
adc
add
cwde
inc
jb
pop
test
arpl
mov
stos
adc
iret
outs
jmp
bound
in
das
jl
jl
pop
mov
(bad)
aas
jo
mov
sbb
rcl
les
loop
leave
dec
loope
and
push
(bad)
out
repz
shl
inc
mov
in
mov
popa
dec
jmp
jae
call
mov
push
sub
cld
scas
push
fbstp
push
add
scas
outs
pop
jnp
cs
pop
icebp
mov
cwde
ds
inc
fdivr
and
dec
inc
leave
sbb
(bad)
stos
outs
pop
pushf
dec
and
bound
sub
loop
xchg
je
lea
mov
dec
pushf
(bad)
cmps
dec
leave
xchg
add
mov
mov
push
fwait
mov
or
stos
test
lods
dec
out
dec
shr
or
and
fisubr
jnp
lahf
gs
mov
(bad)
lea
xor
add
and
and
js
add
push
mov
repnz
or
dec
sahf
movs
stc
cmp
xor
repz
dec
mov
pop
push
mov
jge
loope
inc
call
shl
mov
pop
push
mov
cmc
jecxz
jecxz
fs
cmps
dec
push
cmp
in
(bad)
jne
add
dec
test
dec
cmp
ret
lds
cli
push
mov
add
aaa
fs
sbb
jnp
(bad)
pop
and
test
sbb
ins
out
fsincos
ds
imul
inc
test
pop
sti
mov
push
call
call
xchg
mov
in
lea
inc
fcomi
call
jbe
dec
fidivr
push
inc
shl
in
js
cmp
sub
or
outs
stos
pop
add
xchg
mov
add
dec
popa
xor
icebp
pop
mov
fldenv
mov
call
dec
imul
add
sub
shl
xchg
xor
div
sahf
lods
les
gs
sub
inc
je
call
dec
shl
mov
push
outs
stos
cmp
loopne
ds
scas
mov
ret
dec
and
inc
(bad)
mov
pop
inc
inc
adc
and
jb
cwde
or
mov
js
mov
pop
xchg
fist
ror
movs
jbe
iret
lock
sahf
shl
das
xchg
mov
mov
add
push
sbb
hlt
mov
stc
dec
bound
jmp
icebp
repz
xor
jge
sbb
sub
(bad)
lods
test
sub
add
aas
sti
and
je
daa
sub
push
retf
js
(bad)
cmp
test
stc
xchg
xor
inc
pop
jl
xor
(bad)
mov
or
(bad)
lods
add
leave
inc
scas
jg
out
popf
ds
in
out
cld
icebp
dec
fs
push
retf
sub
out
repz
push
jl
mov
inc
jns
cmps
mov
jnp
fdiv
shl
xor
and
jae
add
add
cmps
sbb
pop
inc
cmp
scas
xchg
inc
(bad)
in
jnp
jl
inc
fisubr
mov
and
mov
jne
pushf
fcmovb
add
dec
jno
test
xchg
xchg
cwde
push
jmp
retf
icebp
and
mov
fs
or
mov
lods
mov
call
jl
arpl
push
jo
jl
add
test
add
fcomp
fisubr
push
icebp
dec
jae
mov
mov
cld
add
shl
stos
push
mov
jae
shr
add
stc
test
fidivr
outs
mov
sub
cmc
repz
cmp
aaa
dec
test
jle
xchg
pop
add
mov
icebp
jle
jecxz
mov
inc
rcr
jns
push
sbb
jb
gs
xchg
movs
sbb
out
mov
inc
idiv
mov
icebp
imul
dec
loopne
mov
cwde
or
in
and
in
aas
test
ja
mov
add
bound
scas
or
in
xrelease
sbb
popf
push
or
mov
mov
shr
sub
clc
dec
popa
adc
dec
adc
pop
fwait
or
lods
ins
and
sub
not
push
fcmovu
call
inc
sub
jmp
sbb
xchg
adc
dec
scas
mov
pop
jge
mov
sbb
sar
mov
mov
push
cs
call
test
dec
push
popf
dec
push
jl
xchg
movs
(bad)
cmp
sbb
sub
add
add
pop
mov
cmc
push
dec
(bad)
daa
mov
mov
aaa
sub
int
daa
mov
jbe
cmps
jne
sahf
loopne
xchg
repnz
sbb
in
rcl
test
outs
pop
mov
cmc
adc
xlat
in
hlt
fnstcw
mov
pop
or
icebp
bnd
inc
push
and
or
xchg
jg
mov
mov
out
sbb
or
pop
das
jae
imul
sbb
data16
mov
dec
ret
shl
fild
push
mov
cmp
xchg
cli
mov
or
js
enter
(bad)
inc
mov
sub
loop
gs
push
mov
pop
pusha
xchg
xchg
mov
pop
(bad)
popa
inc
push
in
cmp
pusha
lahf
das
shr
sbb
push
inc
rcl
xchg
test
in
aaa
ror
bound
inc
xor
psrlw
xchg
pop
test
mov
lea
mov
jle
cmp
jge
adc
inc
mov
cmp
push
les
out
int3
or
sbb
sbb
add
pop
retf
push
pop
cmps
push
push
mov
adc
and
les
shl
push
cmps
pop
repz
dec
mov
xchg
shl
mov
icebp
das
fwait
sbb
outs
pusha
mov
xlat
icebp
xchg
fistp
test
repz
ds
stc
repz
fwait
pop
imul
nop
mov
imul
aas
mov
bound
aaa
cld
pop
or
add
mov
push
mov
popa
xchg
mov
and
dec
cmp
sar
out
bound
mov
and
in
sub
jmp
add
jle
(bad)
stos
shl
pop
add
cli
ret
mul
popf
fisttp
dec
fisubr
pop
sbb
mov
or
or
inc
cwde
push
and
xchg
call
fdiv
hlt
push
ins
add
scas
sub
add
outs
dec
mov
add
aaa
and
fistp
cli
sbb
push
stos
arpl
mov
inc
movs
les
pop
int
mov
mov
add
sahf
(bad)
adc
mov
sub
es
mov
push
or
in
pop
push
sbb
mov
dec
cmp
stos
les
inc
loop
add
out
jae
or
iret
pop
sbb
das
mov
shr
mov
push
cmps
into
cli
add
cmp
sti
or
inc
inc
inc
stos
pop
repz
loope
retf
movs
jno
std
rol
mov
push
xchg
popf
sahf
aas
adc
adc
lods
inc
lea
fisttp
or
hlt
int
cld
xor
push
pop
mov
cs
push
cdq
movs
mov
cmp
fadd
rcr
vmaxps
inc
int
cmp
jl
pop
mov
nop
pop
xor
mov
aas
push
jle
fcom
aad
jl
lds
sar
in
call
mov
hlt
and
stos
sar
push
inc
xchg
les
mov
lock
test
hlt
pop
clc
ds
fdivp
jbe
xor
cmp
sub
mov
xlat
pop
in
add
cmp
adc
mov
push
mov
stos
push
sbb
jle
mov
inc
mov
pusha
and
dec
pushf
mov
jb
clc
in
adc
outs
repz
lods
mov
mov
pop
lods
mov
adc
fadd
scas
dec
xchg
pop
fiadd
or
stc
inc
jb
test
xchg
pop
lahf
mov
mov
les
jne
and
add
sub
jo
cmp
mov
and
fcomp
loop
inc
push
mov
xor
jb
xchg
ja
in
stos
cld
and
pop
xchg
jns
xchg
adc
jl
stos
imul
lds
ss
mov
push
retf
sbb
push
stos
sbb
and
inc
sub
out
mov
mov
sub
ins
stc
cli
sbb
inc
mov
add
bound
gs
mov
or
xor
hlt
xchg
daa
mov
pop
pop
lods
dec
repz
bound
imul
in
mov
add
sti
leave
xchg
push
cmp
fdiv
loop
inc
repnz
retf
sub
cmp
and
jp
cmp
call
mov
jmp
gs
xor
add
pop
icebp
outs
pusha
stos
pop
cmp
xchg
add
add
(bad)
jb
push
jle
fnstsw
mov
mov
shl
jno
mov
lahf
push
mov
sub
xchg
adc
sar
or
dec
arpl
jmp
(bad)
(bad)
push
fdiv
inc
push
inc
mov
inc
or
lds
sti
xlat
sub
add
sbb
jo
pop
lods
sub
arpl
jae
xlat
clc
push
inc
and
cmps
xchg
dec
xchg
enter
jbe
popf
push
inc
cdq
push
loop
jbe
in
out
sub
jnp
movs
mov
je
mov
pop
inc
into
sbb
cmps
dec
xchg
das
(bad)
dec
pop
daa
jmp
and
outs
inc
dec
mov
mov
cwde
xor
mov
(bad)
lock
inc
sub
and
or
mov
mov
pop
nop
shr
call
not
je
shr
mov
push
in
mov
xchg
popa
daa
retf
shl
mov
pop
ins
loopne
xchg
adc
fcos
xchg
retf
push
pop
jmp
icebp
mov
or
pop
mov
jno
cmp
loope
xchg
push
ja
inc
int
sbb
imul
fwait
xor
outs
xor
mov
out
xchg
mov
jl
xchg
and
mov
pop
movs
repnz
push
call
icebp
mov
in
arpl
mov
mov
dec
loop
cwde
clc
loop
ins
mov
adc
dec
(bad)
repnz
adc
adc
movs
gs
mov
sub
ins
sti
fild
jno
iret
inc
adc
pop
mov
mov
add
test
lahf
stos
inc
mov
pop
jmp
push
and
jb
rcl
and
test
movs
out
mov
pushf
xor
icebp
xchg
icebp
pop
dec
mov
hlt
daa
or
clc
hlt
push
popf
push
pop
cmp
sbb
add
sbb
stos
mov
push
xor
pop
push
das
sahf
and
add
popf
dec
pop
test
mov
and
adc
jns
scas
push
aam
test
cwde
arpl
mov
lea
div
movs
pushf
ret
dec
test
popf
test
call
mov
iret
cmp
test
push
enter
pop
pushf
jne
push
pushf
jns
pop
pushf
stos
fwait
mov
and
sar
pop
jb
in
push
add
cmp
inc
test
or
stos
adc
pop
(bad)
fistp
loop
pop
inc
mov
pop
or
retw
fwait
push
dec
(bad)
fstp
rol
cmp
lea
add
loop
fcomip
dec
push
push
(bad)
adc
(bad)
fstp
je
push
movs
push
or
test
int
sbb
imul
push
adc
imul
and
sub
cdq
mov
xor
jge
aam
inc
mov
pusha
inc
lods
sub
cwde
in
fwait
rcl
xor
retf
shr
cmps
pushf
ret
inc
(bad)
in
mov
cmps
std
mov
fwait
lods
inc
(bad)
pop
fdivr
fist
inc
jp
inc
les
ins
push
lea
imul
cld
or
xor
xor
pop
es
repz
pop
mov
pop
cwde
into
mov
(bad)
enter
ret
inc
jbe
stos
pop
ret
dec
xchg
les
or
rol
mov
cmp
mov
add
fimul
xchg
call
sbb
cli
repz
xor
cmps
pop
ins
cmp
push
sub
mov
cld
lea
cmps
cli
jbe
je
into
or
jge
add
sbb
pop
aaa
movs
and
mov
cmp
xor
sbb
pop
and
dec
call
les
dec
div
mov
(bad)
mov
dec
inc
cli
test
scas
test
jnp
sub
callw
add
sbb
sahf
aaa
and
popf
mov
mov
inc
ins
inc
push
sti
push
das
ja
js
or
fisttp
mov
outs
popf
xchg
dec
movs
add
pusha
dec
push
fidiv
mov
jnp
retf
test
dec
xchg
mov
lea
ins
jg
call
iret
and
test
cmp
(bad)
inc
out
or
daa
jne
xchg
pop
fwait
fwait
mov
out
neg
mov
xor
xor
test
imul
aas
movs
push
inc
mov
sbb
out
mov
jb
imul
clc
dec
mov
mov
push
cmc
rol
fwait
mov
add
xlat
shl
hlt
cli
pusha
ins
xchg
lods
inc
jecxz
lods
cmp
sbb
dec
data16
ss
jle
mov
mov
mov
sub
out
jmp
dec
add
in
sbb
lods
adc
data16
inc
es
push
call
sahf
iret
mov
xchg
push
cmps
sub
mov
pop
jecxz
xchg
jmpw
pop
hlt
shl
mov
push
add
mov
loopne
mov
ds
xchg
mov
xor
das
sbb
jbe
cmp
dec
stos
aaa
adc
dec
xchg
mov
mov
sbb
outs
cli
out
aas
leave
call
in
adc
push
cwde
cmp
mov
push
nop
mov
or
ins
(bad)
fsub
xchg
mov
arpl
mov
xchg
jp
outs
xchg
neg
mov
lods
imul
fimul
xchg
cld
jecxz
outs
mov
inc
out
jmp
hlt
lods
and
mov
dec
pop
inc
mov
mov
ins
in
sar
clc
push
pusha
add
dec
adc
or
jle
shl
xchg
adc
call
in
jmp
sbb
add
inc
mov
push
mov
mov
repz
fucomip
inc
lods
sbb
xchg
xchg
dec
stc
icebp
xchg
retf
pop
mov
inc
shl
cmp
ror
pop
fnsave
jb
push
mov
aaa
aas
jb
movs
lods
mov
and
push
cli
xor
aas
fcomp
xor
sub
and
outs
cmp
sub
or
mov
aaa
mov
inc
cmp
popf
int3
xchg
push
xchg
mov
mov
mov
add
mov
adc
lods
inc
lds
scas
xor
aaa
jmp
or
lea
ins
xchg
mov
enter
sbb
xor
pop
cmp
adc
inc
imul
or
mov
daa
xchg
aad
in
jbe
cdq
dec
jecxz
sahf
popa
mov
mov
ss
jnp
test
pop
jb
cwde
mov
adc
les
fwait
lods
jns
sub
sbb
jmp
repz
mov
jl
or
cmc
cmps
mov
cmp
jmp
mov
xor
pop
sbb
and
push
mov
push
xchg
mov
xor
sub
xchg
jbe
push
scas
pop
adc
mov
add
lock
lock
mov
push
fwait
add
cs
loop
gs
fs
sar
add
push
in
push
jae
arpl
cmp
mov
into
scas
or
iret
push
int3
cmp
sbb
dec
adc
push
xor
cmp
pop
rcl
sahf
imul
or
add
cmp
sti
jbe
arpl
pop
repz
jbe
loope
ss
out
sub
jp
(bad)
call
pop
shl
stos
retf
dec
cwde
and
sub
stc
fild
add
scas
xor
cs
test
xchg
sub
in
arpl
test
rcr
popa
xor
xor
sahf
aaa
mov
fidivr
fcom
xor
jl
iret
out
shr
lock
jge
stos
pop
xor
or
fwait
pop
pop
sti
(bad)
and
(bad)
cmp
jmp
inc
cld
fsubr
pushf
xor
pop
hlt
sbb
fild
es
dec
mov
push
mov
pop
dec
cdq
mov
stos
cmp
fbld
ds
(bad)
jae
popa
xor
test
arpl
pop
pop
test
test
and
push
mov
jge
loope
push
call
in
sub
dec
call
mov
add
stc
cli
cmps
mov
cwde
dec
loope
rcl
sub
jge
cmp
jge
sub
js
aaa
sub
mov
mov
cli
ret
sbb
and
and
push
add
xor
inc
pop
nop
push
mov
push
dec
out
scas
xchg
aaa
xchg
in
jb
imul
cld
aas
jmp
clc
popa
xor
(bad)
call
mov
xor
(bad)
outs
sub
cs
jmp
or
inc
std
push
movs
mov
int3
icebp
or
add
or
data16
fs
push
cmp
mov
adc
inc
lods
ja
movs
xlat
jb
mov
(bad)
pop
aad
in
mov
jg
popf
xor
xor
or
inc
inc
pusha
push
jle
cmp
sahf
aaa
sub
cs
mov
xor
xor
jbe
lea
mov
mov
inc
sar
bound
dec
rcr
cmp
jae
movs
pop
neg
(bad)
dec
pushf
std
jecxz
loopne
add
fbld
(bad)
stos
jg
mov
stos
sbb
cld
fadd
icebp
xchg
aaa
lea
cmps
ds
fcom
es
dec
scas
xor
push
add
mov
shr
xchg
jl
mov
ins
inc
xor
cmp
das
popf
adc
data16
push
cmp
sbb
mov
loope
sub
jl
repz
mov
jne
fnstsw
ror
out
and
push
and
jmp
mov
stos
arpl
mov
repnz
retf
pop
icebp
mov
or
into
inc
sar
aas
pop
(bad)
sbb
std
inc
sub
mov
xchg
out
pop
lahf
sti
pop
jo
cmp
es
pusha
jb
cdq
aaa
(bad)
pop
(bad)
lods
outs
xor
inc
dec
push
inc
popf
stos
loop
leave
stc
pusha
retf
jns
ins
mov
icebp
mov
jl
enter
adc
xlat
xchg
das
shr
scas
mov
and
cdq
nop
add
add
gs
mov
cs
dec
pop
jg
test
jle
sahf
inc
or
cs
jp
clc
jbe
gs
cmp
call
jns
mov
xchg
or
test
push
mov
jnp
mov
xchg
(bad)
jl
loope
inc
call
xlat
test
(bad)
(bad)
pushf
mov
les
loop
jae
jbe
cmp
ret
sti
lods
pop
out
push
push
dec
rcl
popa
mov
pop
xchg
fwait
test
xor
(bad)
jg
clc
bound
sbb
aas
cmp
and
xchg
cmps
cmp
lahf
mov
popf
cmps
test
mov
inc
push
(bad)
jno
mov
xchg
push
out
xchg
pusha
and
jmp
sub
add
stos
ins
pop
in
stos
ss
pushf
mov
mov
aad
daa
or
retf
add
push
dec
stos
sub
mov
mov
xlat
jbe
fistp
movs
lea
popa
and
cmp
pushw
add
pop
inc
(bad)
adc
dec
callw
mov
jl
hlt
xchg
inc
mov
pop
gs
pop
lds
out
repnz
jno
mov
mov
test
outs
je
mov
aad
stos
sti
dec
ins
jmp
pop
sbb
cld
scas
inc
out
aaa
jo
pop
test
pop
or
stos
mov
mov
jmp
jb
in
ins
jle
and
fadd
sar
lods
inc
jl
scas
not
inc
sub
xor
pop
and
push
cmps
(bad)
cwde
je
cmp
ror
stos
fcomp
add
clc
std
cmp
loopne
fisubr
sbb
jmp
or
xor
cld
push
ds
icebp
fisttp
ja
stc
jle
jmp
cmc
sub
das
sbb
sub
xor
push
pusha
mov
arpl
push
outs
cmp
push
aam
push
push
lods
pop
aad
in
xchg
fnsave
and
cmps
xchg
sub
out
sahf
ins
je
xchg
cmp
xor
stc
sbb
sbb
xchg
test
jge
les
pop
push
mov
aas
or
sub
xchg
inc
push
or
push
cmp
pusha
stos
jae
xchg
or
mov
cs
lahf
fsub
fisubr
push
mov
dec
xchg
mov
popa
std
movs
push
push
(bad)
test
(bad)
sbb
xchg
cwde
mov
and
shl
stos
fdivr
in
cmc
dec
add
push
push
in
push
jg
ins
mov
inc
cs
mov
mov
pop
out
repz
cmp
jb
mov
add
js
mov
arpl
xor
icebp
mov
leave
sti
push
inc
ins
inc
mov
aas
popf
repnz
pop
jmp
fadd
in
call
fwait
xchg
mov
loopne
mov
inc
fst
ds
test
push
xchg
xor
ins
js
movs
pop
add
mov
(bad)
pop
(bad)
fsub
xchg
pop
jb
sbb
cmp
push
jb
stos
or
test
add
aas
jg
mov
outs
ret
fdivr
repnz
sar
xchg
dec
call
movs
test
ins
xchg
(bad)
mov
scas
adc
fild
inc
loop
push
iret
cs
dec
push
sti
pop
jo
pop
lods
push
cs
(bad)
lods
mov
in
or
cmp
xor
popa
sub
call
pusha
push
movs
imul
adc
popf
mov
ins
out
fild
cli
pop
jp
stos
xor
ret
call
push
out
mov
(bad)
sub
sahf
arpl
cmc
mov
xchg
scas
inc
jmp
ss
sti
pop
jmp
jo
data16
sbb
mov
jns
mov
retf
cmp
cli
(bad)
(bad)
sbb
int
sub
sub
sahf
jg
fcom
addr16
test
out
popf
dec
into
clc
inc
sti
popa
jno
stos
imul
xlat
push
xchg
iret
xchg
adc
mov
daa
fxam
cmps
and
ins
or
dec
mov
xchg
sbb
fbld
jmp
cs
fucomip
callw
cmp
aaa
adc
jns
xchg
cwde
mov
fsubr
clc
aas
mov
jne
gs
inc
or
pop
xchg
and
outs
add
xchg
or
mov
stc
pop
push
jbe
jae
(bad)
ror
mov
jbe
fmul
xchg
sub
ins
call
jb
mov
repnz
(bad)
outs
sbb
fnstsw
and
dec
in
xor
ss
test
or
sub
addr16
jge
jb
fcom
popf
or
cmps
push
cmp
dec
addr16
mov
call
into
push
lock
jge
mov
inc
mov
push
sub
xlat
mov
loope
mov
mov
xchg
(bad)
idiv
stos
fadd
push
lods
es
sbb
int
jo
xor
jno
jnp
xor
jnp
mov
jmp
add
(bad)
xor
cdq
adc
xor
push
movs
jp
retf
xchg
and
sti
mov
lahf
fnstenv
outs
push
inc
popf
pop
cdq
adc
xchg
mov
pop
shl
xor
retf
test
mov
sahf
(bad)
mov
(bad)
xchg
mov
cmp
retf
mov
xchg
mov
xor
sub
(bad)
xor
cmp
mov
lahf
mov
sbb
xchg
and
jmp
fs
or
xor
jne
xor
push
mov
pop
add
xor
mov
aas
fmul
test
enter
jnp
push
mov
loopne
idiv
into
xchg
mov
xor
movs
mov
(bad)
cmp
not
aaa
stc
leave
mov
mov
clc
inc
cmp
pop
cdq
xor
xchg
adc
inc
and
mov
mov
sbb
pop
iret
inc
test
push
push
pop
sbb
cmp
pop
pop
ret
xchg
sbb
mov
xchg
aas
and
shl
es
ins
jbe
fisubr
ror
std
mov
not
lods
stos
sar
outs
add
loopne
xchg
(bad)
dec
pop
(bad)
lahf
inc
xchg
pop
aam
pop
sbb
retf
fcom
sbb
xchg
aaa
and
mov
outs
in
das
cmps
clc
dec
push
pop
adc
and
xchg
daa
mov
stc
jo
mov
stos
sbb
mov
cli
or
dec
aas
imul
fidivr
sub
in
xchg
les
cmp
dec
xchg
sbb
sti
enter
rcr
mov
shl
mov
sub
cmp
mov
inc
in
add
dec
lods
sub
push
pop
icebp
les
pop
jmp
dec
sbb
adc
xchg
add
(bad)
movs
xor
mov
dec
(bad)
icebp
lahf
xor
pop
ins
popf
sub
mov
cmps
fs
popa
or
rcr
mov
pop
add
call
dec
dec
fwait
mov
jecxz
(bad)
or
scas
inc
retf
sbb
je
inc
sbb
mov
retf
cmp
ror
cli
or
xor
cmp
add
lahf
and
dec
xor
cmp
cmp
ret
ds
pop
sbb
mov
mov
push
call
xor
(bad)
ins
xchg
mov
mov
mov
mov
(bad)
cmp
mov
(bad)
pop
call
cli
inc
inc
add
push
cmp
daa
sub
imul
lea
movs
out
jnp
jle
in
push
add
cmp
push
dec
fimul
and
loope
xor
test
in
mov
jns
mov
popf
mov
cdq
jge
mov
ss
sti
xchg
and
imul
mov
aas
inc
loope
clc
(bad)
pop
add
mov
push
jmp
dec
inc
mov
jns
sar
mov
mov
inc
lds
or
and
fcomp
gs
pop
cmp
cmp
push
outs
fstp
mov
jmp
mov
dec
xchg
les
sub
(bad)
dec
mov
cld
add
rol
clc
push
inc
dec
xchg
mov
cmp
ds
repnz
arpl
pop
stos
jne
jmp
jge
ret
or
clc
inc
out
movs
retf
jge
push
sbb
inc
(bad)
add
push
cmps
sbb
dec
cmp
xor
test
xlat
xlat
xchg
sbb
inc
jns
mov
xchg
in
jle
in
cli
xchg
jb
outs
or
ja
movs
xchg
cmp
inc
mov
fimul
pop
cmp
in
and
sbb
mov
pop
scas
mov
mov
pop
(bad)
pop
clc
cli
jae
and
add
fwait
sub
stos
ins
and
adc
lahf
adc
jno
in
pop
mov
pop
pop
mov
pop
mov
mov
push
mov
mov
repnz
fwait
cmps
(bad)
push
rcr
jne
cdq
mov
lods
into
cld
aas
ins
fwait
movs
jne
dec
fsubr
and
cmp
je
pop
jl
jle
xor
cdq
inc
cs
fwait
movs
enter
addr16
push
dec
jmp
sbb
sub
jo
pop
sub
sbb
out
ficom
cmp
mov
popa
jecxz
mov
rcr
mov
loope
movs
mov
int
mov
repnz
daa
inc
dec
cwde
fild
pop
fimul
cs
mov
dec
std
xor
pop
jge
inc
push
aas
sub
sub
cmc
sbb
xor
pop
das
jne
push
mov
outs
pop
test
mov
xchg
test
out
(bad)
mov
aam
add
fdivr
cwde
jno
jmp
xchg
inc
test
ins
ins
xchg
mov
sub
(bad)
clc
bound
inc
retf
dec
sbb
(bad)
call
jo
dec
scas
jno
push
cld
arpl
xchg
fbld
int3
add
cmp
xor
inc
or
mov
stos
pop
fild
mov
jo
shl
jne
sub
mov
cli
pop
js
popf
push
enter
and
sbb
shl
in
cmps
lods
scas
dec
mov
cmps
sbb
in
les
fst
test
inc
push
or
cmp
or
pop
mov
push
xchg
mov
outs
jmp
pusha
push
inc
fiadd
cmc
inc
scas
and
pop
jo
or
movs
cmp
mov
inc
fcmovbe
xchg
aas
(bad)
cld
jo
jl
pop
ror
scas
rcr
les
pop
sti
(bad)
mov
out
xchg
mov
xchg
mov
push
and
idiv
mov
pop
rcl
dec
fdivp
enter
jne
dec
mov
xor
ins
test
cs
icebp
div
retf
jbe
inc
dec
enter
adc
xchg
inc
(bad)
jb
ins
gs
push
aaa
xchg
xor
xchg
push
dec
or
jmp
jb
jge
fs
jno
mov
pusha
xchg
(bad)
xchg
fs
popa
add
repnz
xchg
mov
inc
fwait
(bad)
mov
pop
push
mov
xchg
sahf
mov
push
add
ss
jns
scas
sbb
inc
push
jns
mov
test
out
cmc
sbb
xor
add
fwait
das
rol
adc
push
and
mov
(bad)
fdiv
xlat
pop
pusha
and
inc
mov
mov
aad
jne
icebp
les
mov
add
das
aaa
cli
sti
mov
nop
mov
dec
cs
repnz
inc
js
dec
stos
pop
arpl
ja
jns
popf
cwde
scas
cmp
(bad)
push
retf
mov
pop
mov
or
adc
inc
adc
mov
mov
cmp
out
sar
repnz
pusha
inc
shl
xlat
and
in
jmp
jbe
mul
mov
neg
ror
mov
adc
shl
in
lahf
inc
jecxz
jmp
lock
call
pop
jnp
inc
es
sub
stc
outs
jmp
addr16
push
sbb
jl
and
nop
jne
popf
or
sbb
call
gs
ins
pop
push
sahf
push
jecxz
(bad)
outs
xchg
ret
xchg
or
xchg
jns
jmp
fwait
mov
pop
in
mov
repnz
in
shl
call
adc
lock
les
cmp
or
mov
mov
test
sub
fnsave
jne
cli
es
jo
add
adc
jg
mov
popf
test
jno
dec
jl
fnstsw
adc
(bad)
push
les
jno
jl
adc
sti
rcl
and
cld
cmps
sub
fs
ja
sahf
test
jmp
cmp
test
pop
test
clc
icebp
lock
popf
xor
aaa
sbb
inc
cs
mov
out
fdivr
sbb
mov
push
and
sub
adc
pop
(bad)
movs
sub
sub
fistp
retf
pusha
gs
inc
mov
sahf
and
shl
pop
jmp
in
loop
mov
jg
(bad)
pop
adc
icebp
xchg
mov
bound
test
sub
call
pop
sbb
stos
xor
sti
inc
pop
pop
cdq
mov
mov
test
sbb
inc
rol
push
ds
out
push
push
push
xor
cli
imul
push
nop
hlt
(bad)
imul
imul
cmps
inc
and
in
add
pop
repz
ins
pop
mov
cmc
addr16
mov
nop
retf
data16
scas
dec
loopne
xlat
(bad)
sub
cld
fidivr
ss
sbb
cs
xchg
mov
inc
loope
adc
clc
jb
add
int
push
dec
add
das
mov
mov
inc
fwait
cmp
jmp
jnp
pop
jg
mov
push
xchg
rcr
enter
out
mov
sbb
mov
in
in
cld
out
dec
lods
movs
je
pop
iret
push
pop
sbb
cld
fist
push
push
cmp
cmp
cmp
mov
cwde
sub
(bad)
pop
(bad)
das
xchg
lock
jns
iret
or
inc
add
or
push
nop
and
mov
dec
int
mov
cli
pop
jae
mov
js
jmp
add
std
(bad)
or
adc
stos
scas
les
test
ja
mov
add
xlat
repnz
iret
ror
lods
xchg
ss
pop
fisubr
or
jmp
add
popa
mov
mov
fistp
cli
or
add
xor
jge
sub
inc
pusha
mov
jp
mov
pop
xor
inc
leave
fild
fcomp
push
call
les
not
or
inc
xchg
lahf
mov
jle
mov
popa
cmp
ret
xchg
fld
ins
iret
push
clc
cmp
sub
pop
pop
and
pop
mov
mov
stos
push
and
sbb
icebp
jbe
jb
mov
add
sub
xor
inc
jae
inc
xor
sbb
push
pop
jecxz
mov
fnstcw
xchg
pop
ffreep
repnz
xchg
push
xlat
repz
movs
pop
popf
xchg
add
aad
out
test
xor
fwait
mov
push
or
ret
in
pop
in
inc
jo
dec
cmps
or
push
xchg
push
cmp
mov
push
call
jae
pop
adc
push
bound
jns
stos
or
mov
test
inc
sub
std
test
mov
push
jg
dec
(bad)
pop
cwde
shl
or
fisttp
lahf
xchg
mov
lods
cmps
xchg
addr16
fcomip
cmps
mov
es
xchg
cmps
dec
fisubr
or
out
push
retf
or
pop
ins
push
mov
mov
stos
cs
pop
iret
repz
hlt
jg
jno
in
sub
or
(bad)
adc
mov
pop
movs
scas
mov
ret
fsubr
sbb
jb
(bad)
fadd
jge
jecxz
add
les
(bad)
xchg
lods
cmps
mov
fcomip
mov
xchg
test
cmp
sar
retf
xor
ss
pop
dec
jge
mov
scas
sub
(bad)
jmp
sar
dec
push
jns
adc
outs
push
mov
arpl
ss
fcmovu
xchg
aas
xchg
stc
jno
inc
add
stos
pop
repz
jmp
pop
pop
mov
test
in
push
stos
test
push
xchg
lds
xchg
jecxz
sbb
fmul
push
shl
fistp
ds
sub
pop
push
pop
div
call
jge
imul
leave
loopne
addr16
cmp
adc
mov
mov
xlat
adc
push
xor
cdq
outs
aaa
adc
cli
xchg
xor
imul
loopne
mov
xchg
push
rcl
and
inc
xchg
(bad)
lahf
je
xchg
mov
test
fwait
push
sub
push
lds
add
ficomp
fs
stos
jo
jns
mov
mov
fisttp
inc
add
add
or
movs
push
adc
scas
pop
daa
and
lods
loop
mov
push
stos
das
aad
jecxz
xchg
jecxz
je
xchg
js
jmp
xchg
and
data16
call
lods
mov
repnz
lods
push
fimul
sub
(bad)
(bad)
fist
jp
bound
arpl
jns
retf
ucomiss
push
nop
adc
fidiv
or
int
cmp
xor
aas
mov
mov
and
sbb
inc
pushf
clc
test
mov
jne
mov
(bad)
add
jno
std
out
jp
data16
movs
out
stos
bound
call
ror
out
fisubr
sbb
and
sbb
mov
ds
xchg
mov
es
rcr
xchg
sbb
jmp
add
pop
sahf
add
jae
dec
pusha
mov
bts
push
call
mov
dec
xchg
iret
popf
pop
rcr
add
js
xchg
test
and
outs
pop
xchg
leave
mov
fsub
xchg
movs
pop
xchg
push
cmc
push
pop
or
out
gs
ds
dec
mov
inc
and
mov
mov
sar
pop
mov
pop
inc
jno
call
cmp
pop
pusha
xchg
mov
addr16
test
(bad)
adc
jb
(bad)
outs
rol
adc
add
shl
mov
bound
jmp
pop
inc
(bad)
fwait
inc
jecxz
(bad)
sub
rcl
ds
sbb
adc
dec
(bad)
jns
jns
mov
fild
fst
shr
jbe
inc
loop
sbb
aas
mov
test
mov
ja
xchg
test
in
stc
test
mov
jbe
mov
dec
test
test
out
pop
xor
cld
not
jecxz
cmps
mov
pop
xchg
mov
adc
test
lahf
mov
dec
and
iret
push
in
sbb
push
mov
popw
inc
(bad)
mov
stos
or
fsubr
(bad)
jns
fidiv
jge
into
and
imul
stos
push
icebp
dec
adc
je
(bad)
(bad)
sbb
adc
leave
cmc
popf
aas
leave
hlt
inc
div
and
mov
or
jmp
sub
mov
add
mov
push
xlat
(bad)
imul
push
in
shl
cs
rcr
pop
fiadd
push
and
jo
push
test
cmp
inc
fdivr
sbb
xor
and
or
lahf
or
add
push
movs
sub
lods
test
fstp
xchg
cmp
bound
data16
mov
out
pop
dec
into
call
stos
mov
jbe
mov
rcl
lods
enter
fwait
movs
inc
out
fidivr
jecxz
call
mov
dec
pop
push
test
add
outs
jmp
jp
jbe
mov
pop
mov
mov
fstp
lods
jg
test
(bad)
pop
xor
stos
adc
jne
mov
dec
jecxz
pushf
data16
sahf
jno
aad
lods
pop
sar
fwait
neg
outs
ja
sahf
test
xor
leave
adc
test
fcomp
test
sub
dec
push
mov
pop
lods
mov
fnstsw
(bad)
pop
movs
clc
jbe
jns
lds
arpl
add
dec
dec
stos
jae
stos
sub
xchg
cmps
xor
xchg
aaa
mov
jns
(bad)
pop
ret
dec
sub
inc
and
outs
mov
lea
mov
out
jmp
lods
inc
fmul
aaa
sbb
in
jmp
cmp
adc
ds
les
outs
in
repnz
sbb
pop
fs
pop
cmp
ins
dec
call
fnstcw
(bad)
fisttp
jmp
push
inc
stos
pop
fbstp
mov
retf
clc
ja
in
icebp
cld
add
idiv
mov
pusha
xchg
cmps
mov
mov
rcr
ret
push
fld
sub
cli
cld
inc
push
cmp
outs
neg
pop
movs
mov
outs
jmp
push
(bad)
xor
push
push
adc
jp
lahf
pop
inc
scas
aaa
inc
test
sti
pop
aaa
pop
dec
leave
iret
mov
cli
pop
bound
push
out
out
mov
cdq
jno
not
xchg
int
scas
imul
jp
mov
xor
cld
les
mov
(bad)
das
sbb
dec
ja
cmp
dec
rcl
js
mov
cs
xchg
retf
xlat
dec
int3
mov
clc
cmovb
adc
aaa
aas
jo
add
inc
shl
mov
sbb
and
xor
push
jb
and
mov
mov
jecxz
inc
es
shl
mov
jle
test
mov
aad
imul
cli
cmc
xlat
push
in
sbb
pop
ins
pop
mov
mov
ret
or
iret
outs
int
or
sti
je
jno
mov
adc
jp
mov
jae
lods
(bad)
pop
and
dec
out
fcom
in
push
push
mov
movs
lock
loopne
xchg
loope
add
shr
stos
ret
ins
ja
xchg
repz
add
xchg
cmps
dec
sub
std
cmc
ror
push
js
mov
mov
mov
(bad)
jg
shr
stos
mov
push
add
pop
sbb
das
rol
pop
inc
mov
sar
jg
mov
outs
(bad)
aam
adc
sbb
inc
clc
pop
jge
xchg
inc
adc
sar
add
jg
popf
movs
shr
jg
sti
enter
mov
hlt
(bad)
inc
sahf
lahf
imul
int
bnd
inc
jle
xor
push
mov
ins
jmp
or
int
push
gs
mov
xor
sub
cmp
stc
jmp
mov
jnp
fdivr
test
dec
mov
xchg
push
in
pop
or
retf
jecxz
stos
call
mov
mov
test
mov
int
pop
das
cli
(bad)
push
call
adc
inc
test
add
movs
xchg
nop
dec
daa
fild
lea
xchg
jecxz
jne
and
daa
xor
adc
aad
sbb
pop
xchg
mov
inc
lahf
int
aas
mov
push
clc
bound
mov
xor
in
xor
retf
int
cmps
loope
scas
dec
test
je
mov
sbb
int3
aam
clc
ror
aam
jmp
repnz
xor
push
jp
(bad)
push
xchg
jbe
push
xchg
mov
mov
cmp
mov
jbe
jno
ret
pop
sbb
cmp
inc
lods
or
pop
adc
adc
push
(bad)
fist
loopne
jbe
mov
push
(bad)
nop
pop
push
sti
fild
mov
sar
stos
dec
arpl
jmp
mov
inc
jmp
(bad)
or
ds
(bad)
ficom
bound
stos
cmp
mov
ins
xchg
xchg
lds
fdivr
or
xor
sbb
add
dec
gs
shld
jl
fild
aam
pop
inc
movs
push
test
xchg
push
clc
bound
test
mov
jmp
push
mov
sti
mul
mov
sub
jmp
push
inc
mov
inc
sub
mov
outs
fdivr
or
pop
retf
inc
pop
jge
es
mov
cmp
movs
stos
xor
or
jno
jns
pop
rcr
(bad)
fsubr
les
and
outs
cmps
cmps
xchg
leave
aas
lods
pop
ja
mov
cmc
xchg
frstor
loop
sub
ja
cmp
inc
aam
fistp
cmp
pusha
mov
sub
imul
sbb
in
or
push
and
fisttp
test
jp
test
shl
xor
add
mov
aam
jge
mov
ss
xchg
add
sbb
mov
pusha
jb
mov
fisubr
mov
hlt
or
retf
push
in
push
js
pop
stos
data16
xchg
add
xor
daa
fwait
icebp
ins
dec
pop
aas
jmp
fs
imul
pop
sub
dec
inc
mov
and
jmp
xor
fstp
loopne
call
xor
retf
in
lock
mov
ja
mov
bound
in
(bad)
push
call
sub
cld
lods
pop
out
dec
push
pusha
and
inc
aas
imul
xor
push
out
pop
es
xor
mov
pop
pop
fist
mov
pop
fwait
mov
and
fadd
stc
bound
lahf
jo
(bad)
cli
push
mov
or
jno
not
test
clc
inc
mov
mov
jae
mov
fmul
mov
retf
inc
cmp
fmul
jns
dec
test
pop
or
mov
mov
test
add
aaa
int
push
pop
sub
adc
add
cli
cmp
ret
cmp
jne
mov
jge
stos
call
in
cli
xor
mov
mov
mov
sbb
xchg
js
dec
cs
cli
out
ja
sub
pop
jg
cmp
mov
jl
mov
mov
jecxz
xor
xor
adc
dec
imul
adc
pop
enter
sar
cmp
fiadd
mov
push
call
mov
mov
out
adc
cmp
xchg
lea
adc
aad
out
rcr
mov
and
xor
popa
ret
or
push
mov
les
ins
loope
jl
clc
push
je
aaa
sti
xor
jne
imul
push
xchg
dec
xor
adc
and
fcmovbe
xchg
aas
(bad)
fistp
inc
jbe
lds
cmps
repz
mov
loope
retf
test
and
inc
mov
mov
cmp
mov
cmps
push
hlt
push
out
cld
fcom
inc
jo
dec
mov
jge
popf
ins
adc
pushf
dec
cs
repnz
(bad)
pop
jo
cmp
and
pusha
add
cmc
sbb
ja
pushf
xor
xchg
not
mov
mov
popa
retf
dec
jae
mov
cmp
stos
mov
hlt
xchg
jns
in
test
stos
mov
(bad)
pop
sbb
fiadd
cmps
(bad)
dec
push
cmp
inc
cli
cmc
fld
out
cs
sub
pop
outs
push
adc
lahf
test
out
int3
or
repz
dec
cmp
sub
pushf
es
cmps
jp
movs
pop
cmp
lea
inc
xor
jmp
adc
outs
pop
push
sbb
pop
mov
cdq
jne
test
in
fst
faddp
das
test
push
sti
cdq
mov
inc
xchg
cwde
out
enter
xchg
mov
adc
inc
clc
xor
sbb
cs
lahf
mov
aam
leave
cli
push
mov
push
bound
call
adc
outs
inc
sahf
ins
xor
mov
and
jmp
repz
dec
addr16
jle
mov
dec
jmp
and
bound
xchg
not
mov
ja
mov
adc
loopne
test
scas
push
mov
add
push
call
mov
jge
test
es
pushf
movs
xchg
stos
or
stc
jg
cli
or
and
and
jo
and
ds
xor
pop
pusha
stos
jp
scas
sub
test
dec
clc
rcl
les
dec
test
sahf
sbb
cld
inc
or
(bad)
lods
and
outs
cdq
test
ins
add
fninit
stos
mov
scas
jb
push
repz
stos
jg
aaa
pop
jbe
sbb
push
pushf
aaa
or
mov
cmp
imul
or
sti
and
sub
fwait
das
mov
scas
jl
mov
addr16
(bad)
jno
or
(bad)
xchg
xor
fld
repnz
push
cmp
dec
jecxz
(bad)
inc
jmp
or
in
adc
inc
mov
mov
ja
mov
add
pop
inc
jmp
push
cmp
(bad)
fist
inc
inc
push
and
inc
es
lahf
xchg
mov
add
cld
or
clc
jb
add
or
cwde
das
or
imul
push
lahf
mov
ins
jmp
xchg
inc
shl
repnz
fs
jp
cmp
mov
call
repnz
xchg
outs
add
xchg
call
fwait
lods
push
enter
cs
mov
data16
dec
test
outs
pop
test
sbb
xchg
call
cli
push
mov
ss
sbb
das
test
stc
sbb
movs
sub
mov
sbb
xor
stos
call
jmp
pop
mov
xchg
repnz
pop
add
enter
outs
test
stos
repz
mov
mov
xor
div
mov
add
inc
jmp
arpl
inc
pop
imul
pop
fisttp
ror
enter
jb
enter
adc
add
arpl
jae
movs
adc
mov
outs
neg
xchg
xor
pop
push
test
fadd
push
int3
jmp
jo
ins
test
pop
xchg
popf
mov
test
mov
lods
mov
ds
jg
cmp
aaa
cmp
mov
test
sbb
adc
xor
data16
sub
pop
fld
mov
jg
xchg
(bad)
pop
adc
inc
fcomp
xchg
sbb
jb
or
pop
cwde
in
addr16
cld
add
(bad)
stos
sub
dec
mov
test
or
jns
call
loop
leave
fild
mov
dec
sub
jmp
int3
jp
xor
pop
sbb
mov
push
lahf
mov
mov
(bad)
icebp
daa
cmp
fs
int
adc
add
cmp
and
sbb
movs
adc
or
cmp
jmp
dec
push
fadd
mov
arpl
mov
push
clc
mov
sbb
ja
mov
add
scas
aaa
loope
iret
dec
sub
nop
repnz
pop
push
arpl
dec
and
rol
int3
fsub
into
jae
sub
and
aas
mov
stc
push
mov
pop
in
mov
xor
jle
test
or
imul
test
rcr
std
sti
cmc
jae
sbb
mov
mov
out
loope
pop
inc
(bad)
mov
push
and
shl
sub
add
dec
lods
adc
push
lods
test
int3
cli
sbb
add
and
jns
add
das
mov
stos
ins
and
adc
mov
loope
pop
dec
cmp
stc
mov
les
dec
lods
ja
(bad)
mov
or
aad
pop
fisubr
fcmovb
ss
mov
pop
ret
test
xchg
cmp
cli
into
(bad)
loopne
push
pusha
les
add
inc
pop
add
and
ins
(bad)
fisubr
mov
sbb
push
adc
imul
and
xor
mov
inc
(bad)
stos
xchg
inc
shl
bnd
scas
outs
lock
dec
mov
fwait
pusha
dec
(bad)
lock
lds
lea
imul
test
cmp
out
in
popf
es
test
sbb
std
push
lock
or
inc
fwait
sbb
xchg
scas
mov
cld
idiv
mov
jae
inc
cmp
inc
ins
fs
xor
push
jo
push
es
sub
cs
and
idiv
mov
mov
ja
ins
pop
inc
sbb
jecxz
or
popa
xchg
mov
or
rcl
sahf
test
cmp
mov
into
fsub
jle
mov
retf
sub
jmp
sbb
mov
pop
test
xchg
cmps
mov
pop
shr
aas
mov
jle
jge
int
add
or
mov
push
jmp
div
cmp
popa
in
repz
aam
sbb
inc
rcl
cmps
arpl
xlat
pushf
sub
dec
call
mov
mov
hlt
loop
add
(bad)
sub
or
test
ja
and
ficomp
fs
cmps
push
xchg
(bad)
dec
sub
dec
sti
iret
xor
inc
enter
and
sub
inc
sahf
addr16
or
in
xlat
popf
outs
aaa
das
fs
in
popf
xor
jnp
mov
dec
pushf
rol
and
rcl
mov
pop
in
mov
sbb
cmc
repnz
dec
pusha
cmc
mov
retf
dec
(bad)
sub
sub
inc
je
popa
fistp
sub
mov
enter
or
(bad)
pop
adc
les
pop
jne
xor
push
xchg
cmp
stos
in
xor
loop
xchg
leave
jno
ins
jbe
lea
mov
push
mov
mov
call
sbb
ja
mov
bound
mov
call
dec
lock
adc
dec
repnz
sar
or
cmp
mov
sub
movs
xchg
lahf
adc
retf
jbe
rcr
push
daa
fiadd
ja
sbb
and
push
fld
popf
mov
inc
dec
mov
out
pop
jge
pop
loop
std
outs
xchg
xchg
fs
popa
or
xlat
xor
in
fwait
inc
inc
call
test
mov
cld
ds
fsub
cmp
dec
cdq
sbb
mov
mov
fild
fild
fcomip
jne
add
int
pop
jne
xor
aas
mov
mov
shl
pop
call
fcmovu
jecxz
xchg
sti
sbb
outs
add
hlt
lds
dec
xchg
xchg
jae
int3
mov
test
scas
clc
cmp
gs
sti
mov
inc
jmp
in
or
in
icebp
fidivr
jae
push
mov
push
xor
jbe
frstor
cmc
push
inc
bound
cmp
cwde
xor
jle
imul
aaa
mov
(bad)
imul
and
sti
jb
inc
jae
fnstsw
lods
ficom
loope
push
mov
fnsave
add
lea
in
mov
(bad)
xor
addr16
test
sub
jne
inc
lahf
imul
pushf
sub
cli
setg
pusha
popa
inc
and
inc
pcmpgtw
push
out
push
into
adc
mov
or
push
(bad)
clc
mov
mov
ja
jnp
push
mov
popa
mov
xchg
addr16
in
adc
stos
mov
mov
aam
xchg
xor
jbe
das
pop
and
jmp
pop
cs
pop
push
cmps
aaa
push
ins
pushf
mov
mov
cmp
xchg
clc
push
dec
add
loopne
sbb
push
mov
mov
cmps
push
or
xor
stc
xchg
cmp
inc
inc
popf
pop
repz
pop
cwde
(bad)
mov
das
shl
stos
pop
shl
stos
shl
push
(bad)
sti
xchg
xchg
daa
xchg
mul
cmc
aam
out
out
sub
inc
loope
jo
and
inc
es
dec
push
fild
cld
jp
jp
mov
jl
fwait
sub
ficomp
mov
push
call
stc
ficom
icebp
push
lds
cmps
ror
test
out
mov
mov
xor
and
jecxz
(bad)
bound
jb
dec
mov
add
enter
(bad)
xor
pop
lods
pop
ins
push
mov
imul
or
and
and
(bad)
and
mov
and
cmp
loope
mov
jo
pop
jnp
mov
mov
jle
xlat
mov
rcl
mov
repz
in
movs
test
ja
mov
aam
hlt
ror
(bad)
jle
push
sub
enter
retf
and
cmp
test
jb
mov
mov
clc
clc
xor
clc
push
fs
mov
sbb
add
mov
cmp
add
call
xchg
xor
call
push
mov
addr16
test
xchg
imul
jmp
sbb
mov
popa
pmovmskb
or
cwde
cmp
out
xchg
(bad)
jne
and
jl
mov
dec
call
pushf
pop
push
out
arpl
out
and
and
xor
inc
add
icebp
sub
ret
retf
rep
neg
push
pop
jge
mov
inc
scas
test
inc
pop
mov
inc
mov
call
push
xlat
fucomip
and
jg
call
xchg
repnz
cld
cmc
dec
inc
jmp
dec
retf
das
pop
xor
out
(bad)
dec
je
pop
mov
imul
mov
out
sbb
ds
add
sub
pop
fild
mov
jns
mov
sub
cld
popf
aaa
mov
jle
fnstsw
sahf
out
in
out
(bad)
mov
xchg
cmp
stos
cmp
mov
ds
shr
mov
inc
repz
stos
or
jmp
rol
adc
movs
sbb
and
movs
scas
sub
(bad)
push
sar
sbb
aaa
fmul
adc
push
cmp
bound
jl
(bad)
mov
test
jne
jge
inc
lods
pop
fnstsw
xchg
push
fucomi
mov
ret
ins
xchg
(bad)
movs
div
mov
hlt
adc
repnz
mov
or
mov
lock
stos
push
cs
retf
mov
inc
stc
shr
mov
jb
pop
and
jb
(bad)
or
mov
movs
xor
(bad)
xlat
xchg
leave
xchg
xor
ins
jbe
mov
dec
loopne
in
jmp
push
mov
outs
xchg
mov
icebp
(bad)
fild
dec
not
push
sbb
xchg
xchg
int
into
xor
data16
aas
dec
push
cmps
inc
or
mov
out
pop
jmp
pop
es
ds
or
cmps
push
add
cmp
add
mov
cmc
inc
add
jbe
mov
push
in
and
adc
adc
stos
outs
ja
mov
adc
sti
loop
fsubp
dec
ins
xchg
mov
xlat
dec
in
cmp
fistp
sub
cmp
mov
pop
ja
xchg
mov
sbb
add
int
ja
xor
or
or
gs
imul
xor
fild
icebp
imul
lock
fwait
inc
push
(bad)
mov
icebp
jns
mov
addr16
mov
retf
repnz
in
fsub
imul
add
lock
dec
add
dec
stos
xor
jl
retf
adc
aad
loop
or
rcr
or
mov
add
inc
fs
jle
mov
cmp
fbstp
gs
mov
dec
xchg
les
and
in
pop
xchg
imul
mov
adc
cmc
repnz
dec
jnp
test
dec
mov
pop
cmp
xchg
jge
inc
rol
push
popf
push
and
mov
xlat
pop
call
jle
mov
push
cdq
and
pop
cmps
pop
or
push
sbb
cmp
shr
mov
bound
cmp
xchg
push
or
(bad)
movs
mov
jg
mov
icebp
cwde
clc
loop
inc
loop
inc
jecxz
repz
inc
or
jo
dec
mov
cmp
nop
int
cmp
aam
xchg
into
jne
jb
retf
inc
add
jb
pop
bound
outs
rep
test
adc
dec
in
iret
mov
loopne
sbb
dec
ret
inc
popf
loop
fs
or
xchg
fmul
stos
scas
pop
mov
xchg
cmp
pushf
mov
sub
pop
out
ds
in
jp
xor
cmp
sub
mov
fild
icebp
das
mov
jbe
pusha
xor
pop
or
adc
imul
xor
scas
adc
sub
fcomp
icebp
sbb
fstp
loopne
jmp
loopne
in
ja
call
xchg
aam
movs
(bad)
mov
xchg
aaa
rol
cld
repz
dec
jmp
cs
clc
lock
arpl
xor
inc
xor
push
fwait
cwde
(bad)
xchg
xor
sbb
inc
ss
pop
jnp
sbb
sbb
mov
gs
mov
ins
inc
or
into
sti
aas
(bad)
call
push
jge
mov
pop
sahf
les
xor
shr
and
ins
nop
lea
pop
xchg
mov
push
adc
shl
aad
jecxz
ficom
cmp
or
pop
ins
pop
in
cs
mov
mov
int3
cli
or
cmp
pop
fs
sub
push
fs
jp
xchg
push
popf
sub
sar
jg
push
mov
dec
or
jg
lock
(bad)
stos
leave
xor
sbb
mov
xor
icebp
repnz
shl
dec
ins
cdq
mov
or
sbb
out
lods
imul
pop
ins
push
lods
inc
daa
bound
push
fisttp
leave
or
aaa
mov
add
jnp
test
xor
(bad)
sbb
push
ins
loope
out
sahf
stc
jo
outs
dec
push
mov
dec
sahf
(bad)
and
std
lea
loope
mov
pop
push
xchg
mov
lock
test
rcr
pop
inc
aam
fisub
jmp
jl
dec
lahf
pop
jl
lea
pop
out
xchg
mov
ins
call
inc
jno
out
sub
jae
arpl
outs
inc
mov
fnstsw
ja
cdq
test
out
ficomp
aam
dec
jl
jp
mov
dec
cmps
out
mov
iret
xchg
popa
das
(bad)
rcl
sahf
mov
dec
mov
jb
test
repnz
add
xchg
jp
dec
xor
and
or
sbb
adc
inc
lea
jns
stos
mov
arpl
repz
cmp
add
gs
mov
inc
cwde
mov
into
mov
loopne
jbe
mov
cmp
mov
mov
call
(bad)
or
test
xor
repnz
xchg
mov
cmp
or
(bad)
fist
aaa
jo
dec
mov
inc
sub
lahf
mov
mov
cli
or
add
sbb
mov
mov
(bad)
jge
cmps
adc
mov
and
leave
xchg
es
cld
or
outs
fs
sbb
lock
mov
xchg
dec
rcl
(bad)
and
pop
xchg
pusha
push
mov
jmp
es
jecxz
ret
cmp
mov
or
mov
bound
pop
mov
arpl
push
nop
mov
xor
cmps
ins
jmp
je
iret
sub
ja
adc
jp
mov
movs
sub
mov
adc
ins
out
mov
mov
jp
dec
mov
cwde
je
and
ror
(bad)
lods
ror
pop
jne
mov
repnz
int
ins
pusha
loop
popa
clc
pop
ror
sub
iret
sti
fstp
je
jno
pop
gs
jge
mov
pop
jmp
jbe
addr16
mov
sbb
pusha
movs
pop
xor
cdq
movs
add
and
mov
mov
dec
fistp
push
bound
dec
xchg
mov
jl
xchg
jae
std
rol
mov
sbb
xor
stc
repnz
scas
xor
dec
cmps
dec
sub
push
icebp
adc
aaa
sbb
mov
popa
fwait
test
outs
jmp
jbe
int
add
das
mov
mov
push
mov
mov
cmp
xchg
les
test
vcvtpd2ps
jg
enter
lea
test
dec
push
sbb
sbb
inc
dec
mov
sti
cs
cmp
xchg
ret
adc
inc
mov
pop
sbb
xchg
lea
(bad)
sbb
cli
add
ss
add
bound
je
xchg
dec
inc
sahf
mov
pop
stc
stos
xchg
cmp
jne
mov
jl
sar
xchg
fimul
call
mov
cmps
inc
pop
in
lea
inc
mov
mov
jecxz
adc
lods
push
(bad)
pop
div
cs
cld
mov
fnsave
jne
jnp
cs
lahf
xchg
mov
inc
fwait
stc
jo
dec
fs
loope
sbb
xor
(bad)
pop
fs
jb
cmps
popf
push
and
dec
jmp
ror
inc
movs
popa
sti
mov
popa
mov
out
aam
jbe
lock
mov
loope
mov
test
push
lea
aam
clc
lock
mov
xchg
and
loop
clc
(bad)
jmp
jne
dec
stos
add
cmps
jbe
popa
mov
scas
imul
jae
push
jge
cmp
pop
lahf
jle
pop
arpl
push
movs
dec
ja
mov
outs
rcr
xor
jne
popf
pop
aad
in
test
xchg
addr16
xchg
popa
and
retf
test
jecxz
test
pushf
jmp
test
clc
cmp
call
ds
iret
(bad)
push
mov
push
cmp
call
add
xor
xor
add
sub
adc
outs
jb
inc
adc
test
call
jecxz
mov
fimul
mov
jge
sar
sub
rol
mov
outs
push
mov
retf
in
popf
popa
imul
ror
fbld
cmp
mov
jns
xchg
pop
or
sar
cld
and
inc
clc
and
jae
and
or
dec
inc
mov
pop
stos
mov
jno
fmul
sti
jne
inc
pushf
and
xchg
dec
les
adc
fbld
lods
stos
repz
cmp
xor
stos
push
imul
(bad)
push
call
test
pop
push
std
jnp
pop
icebp
fwait
les
call
jbe
int
adc
and
test
sbb
lahf
sbb
and
mov
ins
push
jl
js
mov
cmp
mov
adc
rcl
call
mov
stc
not
mov
and
mov
push
xchg
xor
pop
ins
pop
test
sub
lods
mov
fild
(bad)
cmp
call
iret
inc
sbb
cwde
pop
test
fadd
(bad)
(bad)
jnp
mov
or
call
pop
rcr
(bad)
shl
(bad)
jmp
(bad)
in
mov
mov
jmp
xchg
std
fild
mov
fidivr
cs
stc
repz
movs
sbb
cmp
mov
aaa
enter
or
cmp
sbb
test
jle
mov
push
popf
cdq
inc
inc
push
jae
jmp
pop
jmp
data16
jae
xchg
lock
pop
cs
fisttp
(bad)
lods
je
mov
xchg
push
xor
cli
test
icebp
dec
jg
xchg
repz
int
sub
into
fstp
arpl
pusha
cmps
or
push
test
dec
(bad)
les
out
inc
pushf
call
pusha
inc
mov
adc
fs
ins
ds
push
cdq
mov
std
(bad)
mov
rol
jo
outs
in
inc
les
or
mov
xor
push
mov
shl
(bad)
fdivr
jae
mov
rol
cmp
lock
inc
jns
outs
mov
push
pop
pop
xchg
mov
mov
in
or
sub
cmp
jne
adc
data16
inc
sbb
xchg
mov
cmp
cmp
stos
lahf
and
pop
daa
stos
pop
loope
fidivr
mov
jl
xchg
jbe
test
cmp
outs
cli
test
pop
add
nop
pop
adc
ins
push
xchg
mov
cmp
sbb
push
or
pop
dec
jl
inc
and
xchg
test
sbb
stos
cli
jbe
je
stc
sbb
sbb
inc
stos
xor
push
mov
mov
sub
pop
call
int
mov
stos
pop
(bad)
cmp
jno
in
inc
(bad)
mov
lahf
mov
in
stos
fld
mov
pop
or
int3
rcr
callw
push
dec
test
pop
or
sub
imul
(bad)
call
add
cld
adc
loop
cwde
sub
push
mov
sahf
sbb
sar
cli
inc
jno
mov
dec
cmps
fld
cli
mov
mov
fs
mov
adc
sti
in
(bad)
dec
fs
fist
jp
sbb
sbb
cli
fistp
dec
dec
pop
cmp
jno
jbe
ins
or
mov
mov
jmp
jno
in
or
add
mov
sbb
pop
popf
into
xchg
es
jno
mov
cmp
jmp
nop
ins
mov
outs
pop
in
cld
ds
loopne
mov
repz
imul
cld
retf
fist
inc
jo
inc
cwde
jno
cmp
cs
ins
xchg
int
cmp
enter
bound
inc
leave
pop
sbb
aas
mov
mov
jp
mov
inc
in
xchg
cmp
inc
mov
js
enter
xchg
push
pop
out
xchg
jnp
outs
mov
mov
pop
xchg
add
stos
and
loopne
retf
cmp
in
cmp
mov
aaa
and
mov
mov
(bad)
arpl
or
and
sub
test
xchg
adc
mov
ins
loop
mov
into
xchg
sbb
dec
pop
inc
mov
dec
sbb
jbe
jmp
mov
test
pop
ja
xchg
jmp
sbb
pushf
movs
(bad)
cmp
aad
(bad)
dec
mov
push
dec
fdivrp
fadd
inc
jo
dec
mov
addr16
mov
cld
or
fstp
ins
push
or
mov
mov
stos
push
add
xchg
inc
and
(bad)
dec
xchg
add
pop
jno
mov
dec
loopne
mov
and
sbb
mov
hlt
mov
pop
enter
cli
cld
iret
inc
xchg
pop
or
push
mov
daa
ins
xchg
mov
icebp
jg
cli
or
inc
(bad)
sbb
push
test
data16
push
xor
xor
pushf
xor
inc
fcmovnu
mov
leave
inc
outs
jno
push
jecxz
repnz
movs
stos
dec
mov
mov
pop
mov
mov
push
xchg
lds
sbb
fadd
jnp
dec
or
rol
call
add
xor
movs
push
mov
cmp
int3
inc
call
jno
int
outs
sbb
adc
pop
push
(bad)
adc
popf
mov
dec
in
int3
fwait
dec
popf
jmp
jmp
push
test
jmp
(bad)
dec
xor
adc
std
fisttp
xchg
mov
pop
mov
mov
test
idiv
mov
fidivr
push
cs
fisub
pop
and
sbb
cmps
aaa
daa
jp
mov
mov
into
aam
mov
jbe
add
and
bound
arpl
dec
dec
sahf
pop
xor
xor
xchg
iret
out
scas
fdiv
imul
lock
xchg
mov
jmp
jmp
stos
outs
je
mov
push
and
repnz
mov
pop
cs
(bad)
int3
fs
cmp
dec
scas
or
mov
jge
call
(bad)
in
jl
cmp
cmp
ss
jne
xchg
inc
shl
ins
inc
xchg
dec
push
sahf
test
adc
es
out
fsubr
adc
push
stos
pop
shl
mov
and
retf
jecxz
xchg
xchg
ja
xchg
sbb
scas
dec
mov
sbb
sbb
in
fild
es
jbe
lea
push
inc
test
scas
mov
xchg
dec
pop
fsub
jmp
mov
or
sbb
xor
jo
sbb
push
lods
dec
xor
lea
xor
data16
mov
adc
icebp
dec
jbe
mov
rcr
dec
ret
in
xor
cmc
mov
lods
fisubr
mov
stos
fs
int3
repnz
dec
ja
fwait
inc
lea
sub
dec
enter
repz
add
pop
arpl
inc
sub
mov
test
(bad)
stc
cs
pop
adc
call
sbb
and
mov
sub
arpl
aas
fcmovu
xchg
aas
mov
pusha
jl
pop
test
sbb
in
nop
in
push
test
xchg
or
push
lods
test
daa
fnstcw
xchg
mov
add
dec
jecxz
into
aaa
cmp
shr
mov
cld
xor
push
sub
mov
adc
and
jmp
aaa
imul
mov
test
jne
mov
dec
pushf
cmc
xchg
add
jae
stos
dec
xor
je
cmp
(bad)
add
pop
cmc
mov
mov
lods
getsec
fcomi
test
aad
ins
cwde
stos
push
loopne
fidivr
fistp
cmp
or
push
ds
mov
mov
or
pop
out
sbb
cmp
and
jo
adc
das
mov
cmps
jl
cmps
jo
movs
xor
scas
xchg
xor
jl
iret
mov
call
mov
jg
mov
imul
fwait
add
add
adc
aad
dec
lods
xchg
push
lea
scas
add
lods
push
fcom
sbb
cld
js
push
jmp
sub
inc
pushf
repz
xor
adc
popf
and
dec
pop
mov
ins
nop
cwde
lahf
xor
stos
lahf
daa
mov
jb
fidivr
movs
fisub
mov
popa
es
rol
mov
ins
add
sar
jp
fwait
mov
sub
adc
mov
push
int3
cmp
arpl
jno
cs
dec
cmp
xchg
mov
xor
int
mov
push
fs
enter
or
mov
mov
outs
arpl
ja
cdq
std
push
inc
or
sti
add
xchg
dec
fdivr
push
scas
pop
aad
call
ins
out
dec
pop
in
out
push
loopne
hlt
lods
stos
mov
fstp
dec
out
mov
pop
mov
clc
fcmovbe
outs
jl
call
cs
dec
std
xor
jno
dec
mov
pusha
out
lods
mov
cmp
mov
daa
mov
adc
adc
mov
lods
cmp
mov
jno
pop
ins
in
fild
out
jno
scas
pop
cld
lahf
xlat
jno
stos
call
xlat
rol
xchg
jae
sahf
stos
push
ds
fsubr
out
mov
or
push
lahf
xor
sbb
mov
inc
out
rcl
push
sub
dec
call
jbe
jno
leave
pop
push
push
imul
inc
nop
bswap
gs
js
ror
xchg
(bad)
(bad)
xor
adc
test
add
fisubr
in
lock
cmps
sar
sti
pushf
sbb
push
mov
(bad)
push
mov
retf
scas
loop
fs
mov
xor
ds
cld
fistp
ss
jp
cmp
daa
xchg
inc
sub
xchg
mov
rcr
jl
int
cmp
sub
pushaw
mov
shld
dec
xchg
sti
popf
dec
enter
adc
jo
inc
jecxz
(bad)
jae
ret
ret
add
mov
movs
ffreep
sbb
xchg
xor
jmp
jp
xchg
mov
adc
cs
shl
jo
dec
lods
push
ds
mov
xchg
sbb
push
out
or
cmc
push
pop
pop
cmp
adc
cdq
add
xor
sbb
inc
cmp
syscall
push
cmp
fistp
retf
cmp
stc
push
stos
call
mov
pushf
das
jmp
cmps
fs
mov
xchg
js
in
(bad)
lock
aad
sbb
shr
add
push
call
sbb
mov
sub
xchg
jl
jmp
std
xor
push
jbe
mov
int3
or
adc
push
adc
mov
jl
jmp
jo
pop
jo
stos
xor
xchg
(bad)
dec
xchg
les
cmp
xlat
xchg
adc
ins
xchg
ins
jno
mov
sub
repz
popf
test
xor
adc
push
(bad)
xlat
and
pop
jo
dec
mov
push
push
xchg
xchg
lods
xchg
cmp
add
fsub
push
pop
cmp
cdq
push
nop
jbe
inc
inc
mov
pop
sahf
retf
aaa
xor
fmulp
out
xchg
xlat
fs
pop
inc
(bad)
mul
repnz
ret
mov
scas
add
ins
movs
in
mov
xchg
test
icebp
test
pushf
inc
out
clc
dec
sub
push
jmp
push
push
jge
sbb
pop
mov
fwait
int
xor
cli
or
adc
inc
or
and
adc
and
lea
jl
repz
repnz
push
scas
push
rol
fs
mov
popa
es
rol
scas
(bad)
sub
addr16
lea
repnz
rcr
cmp
xchg
movs
sub
pop
shr
or
popf
or
ds
mov
push
sbb
(bad)
(bad)
mov
out
int3
sbb
inc
int
sbb
xor
or
cwde
pop
retf
xchg
test
cmp
fist
imul
jae
jno
mov
popa
mov
movs
sbb
(bad)
cmc
jmp
stos
add
outs
jnp
mov
repnz
fidivr
outs
mov
cmp
push
nop
icebp
loop
rcr
les
inc
std
inc
dec
mov
cmp
cdq
cmc
push
je
sbb
sub
add
dec
adc
sub
mov
xchg
dec
and
les
pushf
ins
addr16
nop
dec
popf
sahf
mov
call
push
in
mov
scas
mov
xchg
mov
and
sti
stc
xchg
(bad)
jecxz
ins
fwait
mov
cmp
jecxz
fidiv
cmp
mov
mov
out
out
sbb
out
ins
bound
shl
je
aas
xchg
es
mov
jo
cmps
cmp
mov
jl
(bad)
xchg
es
outs
inc
fistp
fwait
rcl
in
rcl
adc
imul
popf
mov
cmps
rol
inc
xchg
jae
pop
push
adc
push
pop
jecxz
jbe
and
sbb
sbb
cmps
call
hlt
jo
mov
dec
pusha
xor
pop
sbb
or
(bad)
cmp
xchg
mov
ins
ret
out
(bad)
in
sbb
sbb
stos
dec
clc
lahf
fidiv
xchg
loop
dec
rcl
ja
bound
jg
mov
in
ret
mov
repz
ins
sahf
xchg
les
cs
jmp
cmp
les
jle
mov
push
push
icebp
mov
mov
fdivr
pop
fucomi
sbb
sbb
ficom
mov
fs
cwde
push
sbb
stos
or
cs
in
shr
fsubr
jge
pop
cmp
loope
jb
(bad)
mov
sub
pop
lahf
mov
test
test
or
in
stc
in
inc
loop
jle
dec
fisub
arpl
test
out
xchg
aas
mov
pop
mov
xor
es
and
push
mov
pop
repz
ins
iret
rol
push
pop
inc
popf
pop
aam
fidivr
fistp
sub
clc
nop
sub
jns
xchg
xchg
(bad)
or
xchg
and
inc
outs
mov
ds
stc
cmc
jae
sbb
dec
scas
aas
dec
jg
push
and
call
fs
or
aaa
jmp
add
push
mov
or
movs
mov
(bad)
repz
add
jbe
or
(bad)
xor
xchg
je
test
mov
addr16
xchg
icebp
adc
stc
loope
fimul
ins
jmp
sub
in
fist
cmp
pop
push
lea
inc
pop
scas
mov
and
push
(bad)
clc
sbb
cmp
push
imul
dec
fimul
sbb
cmps
mov
out
mov
(bad)
call
and
mov
sub
fild
stos
int
lea
xchg
mov
outs
aaa
(bad)
jmp
jmp
test
or
push
push
popa
test
cs
jno
or
call
xor
sbb
sub
jp
mov
jle
into
not
xor
inc
fisubr
pop
les
push
lods
ja
mov
dec
test
lahf
dec
loopne
jno
(bad)
les
mov
push
xchg
xchg
mov
cmc
out
js
test
loopne
fidiv
ret
push
lds
es
daa
mov
push
mov
mov
push
inc
mov
into
jecxz
mov
and
sahf
add
cmps
jp
mov
loope
and
inc
loopne
xchg
ror
lds
xchg
hlt
ins
xchg
rcl
xor
retf
loope
leave
cmp
hlt
sbb
ret
sbb
aam
leave
inc
(bad)
or
retf
sbb
pop
mov
jbe
jbe
mov
shl
sub
cmp
add
jmp
push
imul
stc
imul
xor
cmp
xchg
jmp
dec
jb
push
lds
fs
add
div
lods
adc
dec
lods
mov
pop
lea
repnz
je
sub
dec
std
daa
enter
pop
stos
aas
dec
and
inc
push
or
and
pop
cdq
fimul
inc
xor
sbb
add
adc
dec
sbb
mov
and
push
inc
sti
xlat
mov
xchg
ja
and
mov
jb
repnz
(bad)
test
xchg
aaa
mov
mov
cld
jae
(bad)
push
clc
sub
stc
lds
test
jl
cmp
jb
mov
xchg
push
fild
div
std
push
popa
jae
fst
sbb
cmp
sbb
mov
outs
mov
cwde
xor
and
call
aam
pop
sub
mul
repnz
je
sahf
push
fld
sub
inc
mov
mov
or
leave
mov
xchg
lods
scas
push
jecxz
fidiv
cmp
rcl
push
cmp
xchg
jl
test
pop
push
scas
cmps
call
xchg
fist
into
add
pop
xor
jb
imul
xor
cmp
pop
xor
dec
sahf
xlat
test
xchg
repz
mov
dec
cwde
loope
dec
ror
xchg
xchg
ins
add
test
mov
xchg
retf
pop
sahf
lahf
dec
fidivr
adc
stc
(bad)
shl
jmp
jne
lea
ss
cmp
stc
pop
repnz
mov
pop
mov
aas
mov
add
push
cmp
xchg
cli
sub
sbb
icebp
add
fimul
imul
test
loopne
sub
fst
lahf
call
mov
push
cmp
call
je
push
in
dec
push
cs
in
cmc
data16
sbb
test
iret
xor
retf
cmp
and
inc
push
push
push
test
imul
add
sbb
or
aaa
lods
sti
ja
ins
jbe
mov
dec
xchg
aad
jae
mov
xchg
add
sbb
stos
sbb
mov
adc
shl
stos
mov
es
aam
jmp
retf
int3
pop
jge
dec
xchg
adc
pop
dec
mov
sub
mov
jb
pusha
pop
retf
bound
adc
dec
push
(bad)
adc
xchg
ins
test
mov
std
inc
push
jb
sub
xchg
jecxz
je
mov
or
js
sahf
lods
ret
aaa
mov
mov
sbb
pop
push
cwde
add
cmc
or
nop
stc
retf
or
jg
pop
outs
jge
dec
imul
cli
or
xor
xor
add
jne
arpl
inc
dec
lea
jne
mov
arpl
icebp
xchg
pop
sbb
les
push
fistp
hlt
push
sti
stos
dec
in
xchg
jno
(bad)
shr
mov
add
movs
cmc
or
in
div
cwde
mov
ds
xchg
fadd
and
dec
mov
pop
inc
dec
xchg
movs
mov
(bad)
sbb
mov
and
sbb
mov
mov
jae
test
leave
fadd
imul
inc
dec
mov
sub
shl
(bad)
xchg
idiv
shr
xchg
mov
ds
in
cli
out
loope
dec
bound
mov
add
(bad)
into
push
call
lahf
or
daa
ins
xchg
ffree
mov
test
adc
(bad)
adc
pop
or
cwde
aas
(bad)
jne
arpl
outs
pop
movs
repz
xchg
and
adc
fld1
mov
repnz
enter
xchg
inc
jmp
sti
xchg
jecxz
cmp
mov
mov
xchg
js
out
loop
stos
aad
adc
mov
jecxz
into
cmp
dec
(bad)
lods
pop
(bad)
xor
jns
daa
dec
mov
jle
fwait
xchg
and
aad
jg
and
xor
add
add
sbb
mov
pop
xchg
into
mov
pop
push
inc
(bad)
stos
mov
lods
clc
popa
fadd
push
mov
dec
xchg
mov
jbe
mul
hlt
sbb
dec
mov
add
fwait
xchg
add
sti
dec
nop
mov
sbb
stc
in
sub
xor
dec
test
ins
and
mov
scas
sub
fsubr
(bad)
aas
mov
sbb
jno
leave
pop
sbb
das
mov
stos
jns
mov
(bad)
sbb
sub
loope
mov
je
ins
pop
push
test
fnsave
xchg
push
aam
test
cli
inc
mov
lods
ja
mov
cmc
repnz
lds
cwde
test
push
sub
fst
jo
dec
sbb
push
xchg
push
sub
mov
fadd
(bad)
aas
mov
pop
addr16
retf
ss
add
ja
jae
xchg
js
stos
mov
(bad)
xchg
aaa
mov
push
push
lea
cwde
cmp
arpl
cld
jb
std
aad
add
ins
or
jno
mov
les
cwde
mov
sub
cmp
call
stos
sbb
inc
sub
mov
jmp
pop
inc
leave
pop
sbb
das
mov
stos
jns
mov
mov
aaa
and
fxch
xchg
xor
push
ins
gs
clc
ins
test
xchg
ins
ret
xchg
inc
and
clc
xchg
jecxz
test
sbb
test
cli
out
jecxz
xor
mov
sub
xor
hlt
fist
pop
ja
arpl
pusha
or
mov
mov
lahf
lock
mov
jbe
pop
aaa
mov
adc
push
movs
push
pop
test
lahf
push
add
inc
neg
mov
sar
arpl
dec
je
stos
pop
lock
jecxz
mov
cdq
je
std
(bad)
xchg
adc
data16
lea
ja
movs
movs
adc
stos
aad
dec
fwait
pushf
inc
lds
clc
daa
or
inc
in
pop
cdq
xor
jae
cmp
and
mov
shl
stc
daa
mov
jbe
jne
fnsave
cmp
pop
scas
and
or
sbb
aaa
and
out
xchg
pop
xchg
int
loop
data16
jle
mov
pop
add
fs
push
xor
retf
jecxz
not
popa
ja
mov
icebp
out
jmp
dec
adc
pop
fidivr
lock
sar
pop
pop
push
mov
jns
cmps
mov
arpl
xchg
das
leave
into
jp
inc
xor
or
lahf
das
mov
mov
inc
popf
mov
cmp
ins
neg
xchg
xor
jbe
pushf
ins
(bad)
mov
dec
mov
popf
popa
xlat
xor
fist
rol
aas
test
ja
mov
outs
aaa
stc
icebp
xchg
icebp
jo
out
sub
fadd
jo
dec
xchg
aaa
dec
cmp
imul
cwde
pushf
mov
pop
jmp
pcmpgtb
int
adc
and
pop
fistp
scas
fs
cmp
sbb
daa
dec
neg
xchg
cmp
js
jp
pop
jecxz
rol
xchg
inc
retf
mov
cmp
rol
(bad)
mov
test
xor
fcomp
mov
clc
cs
cld
sti
push
in
add
dec
mov
inc
and
mov
js
mov
cwde
shl
adc
imul
dec
dec
ror
cmps
ds
aas
dec
jge
mov
sbb
fldenv
jge
inc
mov
xchg
lock
xchg
les
push
cli
rcl
lea
inc
xchg
mov
movups
fdiv
jmp
push
jecxz
fidiv
cmp
sub
pop
out
cmp
or
test
les
push
int3
jns
sti
jbe
je
fidivr
cs
imul
mov
nop
pop
mov
in
div
and
aaa
ror
bound
pop
xchg
shl
jge
mov
push
lock
xchg
cmp
dec
cmp
pop
in
lea
dec
mov
mov
inc
jmp
or
in
(bad)
inc
jmp
jo
pop
test
addr16
cdq
push
nop
xchg
adc
fistp
fisub
popf
clc
pop
je
xor
xor
pusha
and
and
test
mov
push
cmps
cdq
cwde
sbb
mov
xchg
repnz
(bad)
sbb
push
fidivr
mov
jl
into
xchg
xchg
jns
std
test
stos
sar
outs
arpl
hlt
pushf
(bad)
fcmovb
dec
arpl
jmp
and
ds
and
sbb
jo
outs
pop
push
cmps
mov
into
push
push
mov
iret
int3
jl
inc
ins
inc
xor
dec
xor
adc
jp
movs
jns
xchg
sbb
or
mov
or
sti
jle
ins
je
popf
pop
icebp
mov
dec
xor
dec
leave
sahf
popa
or
cmp
outs
push
sbb
movs
retf
sbb
clc
das
add
stc
fldln2
and
push
or
and
xor
and
inc
add
popf
mov
ja
cli
add
aaa
mov
and
arpl
dec
xor
xor
into
loope
sbb
pop
cli
mov
inc
(bad)
sti
(bad)
push
sahf
dec
sti
xchg
sahf
and
mov
inc
fisub
adc
pop
(bad)
xchg
stos
shl
inc
push
sahf
mov
add
cli
imul
xchg
lods
idiv
adc
lods
push
lock
sbb
mov
add
mov
stc
ins
cwde
std
xor
jecxz
or
add
pop
retf
imul
xor
sbb
add
icebp
fwait
aas
sahf
sti
or
push
popf
mov
mov
fdivrp
add
test
mov
jg
xchg
cmps
mov
sbb
lock
enter
cdq
movs
jno
inc
into
ss
std
(bad)
ret
ss
sbb
pop
sbb
xor
push
xchg
xchg
cdq
xchg
cmp
jnp
fdiv
xchg
add
dec
mov
cdq
push
mov
fmul
pop
or
inc
and
(bad)
out
retf
xchg
and
js
(bad)
ficomp
shl
xchg
mov
add
test
test
cs
xchg
or
mov
es
cdq
xor
sub
cli
in
cmc
inc
cld
xor
es
movs
jb
jns
popf
lods
scas
cmp
ret
js
rol
jno
jecxz
or
cmp
dec
adc
aas
jno
mov
sub
cli
xchg
cmp
pushw
push
fdiv
shl
pushf
stos
dec
loop
add
cmc
repz
lods
movs
sar
ins
push
xchg
pushf
cmp
add
mov
cmp
sub
jmp
push
push
mov
or
xchg
test
xor
sub
ds
pop
adc
add
daa
popf
adc
push
push
mov
jne
rcl
out
out
sahf
sti
jb
imul
sahf
mov
cld
sbb
test
jmp
xchg
inc
ja
mov
fs
cmc
adc
cwde
dec
xchg
push
repz
cs
jmp
fst
or
pop
mov
jae
push
sbb
mov
mov
pop
call
inc
dec
mov
add
jo
xchg
push
xor
mov
aam
inc
mov
jo
fiadd
sahf
in
mov
mov
add
jns
mov
(bad)
sbb
sahf
ds
in
cli
pop
test
jmp
sti
ficomp
ss
jg
cmp
or
movs
lods
mov
lock
hlt
adc
aas
sti
and
ds
stos
jl
scas
push
pop
stos
(bad)
(bad)
xchg
aaa
mov
pusha
and
and
in
cmp
stc
test
cmps
mov
jne
mov
push
cmp
cmc
xchg
fst
data16
stos
dec
in
fisubr
sbb
out
cli
fistp
je
push
mov
dec
push
mov
aas
inc
cwde
fst
sar
sbb
outs
pushf
add
cld
jp
pop
add
pop
ss
add
sahf
sbb
mov
sete
mov
(bad)
jmp
repnz
retf
jb
into
fwait
sbb
mov
mov
lds
cwde
mov
sbb
fcomi
sbb
fld
lock
sub
hlt
repz
repz
or
inc
mov
mov
mov
pop
jae
sub
es
and
stos
jl
mov
outs
popf
movs
mov
and
xor
outs
push
pop
mov
dec
out
jmp
or
(bad)
sti
inc
repz
add
(bad)
push
pop
sti
mov
and
fmul
xchg
call
inc
repz
enter
pop
jle
sbb
arpl
mov
mov
stc
mov
enter
aas
cmc
sub
jge
xchg
and
push
cli
inc
imul
cdq
stos
mov
inc
push
ins
dec
mov
int
gs
jno
jno
mov
jg
iret
xchg
dec
xchg
nop
gs
into
rol
add
mov
scas
adc
int3
out
fcmove
cmp
lods
mov
and
ds
inc
retf
and
dec
test
inc
daa
push
call
push
loop
arpl
inc
int
aaa
js
xor
sbb
pusha
out
mov
inc
rcr
inc
lods
jmp
shr
push
test
mov
jno
loop
inc
iret
mov
pop
call
pop
mov
fcom
mov
fistp
dec
mov
(bad)
push
sub
cli
(bad)
je
cmp
pop
xchg
add
mov
mov
out
xchg
xor
in
add
adc
das
popf
adc
jb
movs
dec
or
pop
aas
and
fcom
repnz
xor
push
and
ins
or
jnp
mov
ret
fild
mov
dec
and
push
fidiv
adc
pushf
inc
sub
stos
mov
xor
test
xchg
packuswb
mov
pusha
(bad)
aas
nop
adc
sbb
inc
mov
pop
xchg
xchg
mov
in
les
out
inc
inc
mov
outs
jecxz
mov
in
pop
cmp
rep
cs
jg
neg
push
mov
sar
retf
sbb
leave
sbb
sbb
inc
jb
pop
mov
jnp
inc
inc
jns
mov
xchg
xor
jno
aam
sbb
or
or
and
push
sbb
inc
mov
ins
(bad)
fisubr
aad
add
fst
xchg
loopne
out
mov
xchg
xchg
add
jnp
test
add
shl
repnz
cwde
xchg
jae
jnp
push
inc
dec
fdivr
inc
sbb
pop
stos
aaa
adc
mov
mov
dec
fild
fadd
xchg
hlt
pop
inc
pop
inc
shr
push
imul
jne
inc
pop
lods
jp
(bad)
sbb
popf
mov
imul
(bad)
cmp
jnp
ins
lds
shl
outs
(bad)
xchg
add
push
int3
ins
mov
ins
pop
adc
mov
movs
xor
push
dec
es
es
and
pop
outs
push
stos
arpl
pusha
movs
mov
stos
mov
pop
in
sbb
mov
xor
sub
jbe
add
mov
outs
cmps
shl
dec
mov
shr
pop
fimul
mov
jl
loop
inc
iret
mov
cmp
out
add
ins
or
inc
fwait
mov
fadd
in
(bad)
pop
retf
xor
push
sub
hlt
test
sub
push
dec
inc
and
ret
sub
or
fnsave
push
pop
in
pop
xor
sub
jle
imul
cmp
test
cmp
mov
jns
dec
test
mov
test
dec
(bad)
fisubr
mov
ins
push
mov
lods
adc
add
mov
cmp
in
lock
arpl
pop
mov
addr16
mov
repnz
add
int
adc
push
popf
pop
int3
pop
bound
jge
cmps
xchg
inc
and
sti
in
test
lock
ins
pop
jno
sub
mov
pop
jecxz
mov
pop
fxtract
mov
sahf
lods
ret
push
cs
loop
in
mov
out
add
repz
fmul
je
cmp
cmp
mov
test
or
enter
arpl
xor
sub
js
push
sbb
lock
movs
adc
mov
adc
popf
sbb
popa
push
pushf
pop
idiv
push
sar
pop
repnz
mov
xlat
ins
mov
scas
ret
aas
ret
mov
aam
sub
cmps
dec
aad
jmp
aad
addr16
xchg
adc
lahf
jne
jbe
mov
stos
adc
xlat
pop
loop
adc
mov
adc
pop
scas
and
ror
mov
imul
jno
pop
je
add
fistp
retf
xlat
mov
push
(bad)
mov
mov
sbb
mov
repnz
fiadd
mov
xor
fnstsw
and
jno
dec
lods
aaa
aas
jg
mov
mov
(bad)
add
sub
pop
xor
add
xor
inc
push
movs
jae
sub
sbb
cmp
sar
fsub
popf
push
lds
xchg
jne
pushf
or
(bad)
aam
xor
pusha
cli
test
push
mov
lock
add
ror
cmc
xchg
ja
adc
or
sbb
dec
scas
addr16
pop
lea
push
call
add
repnz
std
jbe
popa
aas
mov
arpl
jg
rcl
add
(bad)
fcmovu
(bad)
cmp
addps
push
(bad)
mov
mov
fs
ret
adc
test
dec
add
jecxz
(bad)
inc
jns
xchg
dec
loope
iret
xor
mov
jmp
add
dec
fistp
arpl
xchg
lods
leave
xor
pop
into
mov
mov
xor
and
jmp
scas
jge
mov
jb
mov
dec
popf
cmps
sti
aaa
mov
jne
dec
je
stos
dec
loopne
fidivr
(bad)
pushf
dec
mov
inc
and
enter
dec
xchg
lahf
xchg
div
xchg
mov
(bad)
mov
(bad)
xor
push
(bad)
sbb
enter
retf
add
xor
dec
not
pushf
cwde
test
xor
xchg
xor
xor
adc
push
test
inc
mov
inc
mov
xchg
sub
shl
inc
je
cwde
dec
jecxz
hlt
aas
popf
in
dec
movs
imul
in
sbb
test
out
mov
xor
popf
jns
mov
jnp
outs
fnstcw
or
mov
stc
inc
fidiv
data16
mov
rcl
ds
jg
rcr
(bad)
cld
push
push
jne
call
xor
sub
and
cmp
movs
xchg
adc
(bad)
xlat
xchg
sbb
push
push
mov
inc
mov
test
test
int
movs
mov
imul
mov
test
loop
dec
mov
or
ds
out
and
cmp
imul
pop
popa
xchg
fwait
mov
xor
stc
imul
jo
inc
cmp
cmp
jg
sbb
pusha
inc
sbb
mov
adc
and
sar
xchg
mov
jg
loop
or
mov
lods
mov
push
xchg
xchg
icebp
hlt
retf
imul
in
mov
pop
push
test
inc
sub
cmps
int3
mov
pop
sar
or
ss
cmp
nop
jbe
arpl
imul
cmp
cmps
movs
or
xor
aam
daa
cmp
and
dec
test
loope
jmp
rcr
in
shr
or
into
shl
lahf
push
push
jmp
sub
sbb
push
shr
jl
mov
push
ror
rcl
ret
or
pop
in
add
push
xor
or
stos
jge
xchg
cmp
test
imul
mov
icebp
fs
push
lea
(bad)
lock
xchg
shl
hlt
mov
call
mov
fwait
mov
test
enter
aam
int3
dec
(bad)
cmp
out
int3
lods
pop
mov
sbb
push
stos
cs
add
pushf
lahf
or
daa
test
inc
jne
pop
mov
add
es
sahf
jg
lea
pop
xor
mov
jmp
fs
and
sar
std
fisttp
mov
sbb
ficomp
mov
xchg
cdq
xor
dec
jmp
sti
lock
fistp
jle
stos
pop
ins
push
xchg
ins
jmp
sub
ins
stc
fcomp
xchg
int
pop
push
fwait
cmp
imul
(bad)
mov
aas
(bad)
int3
xchg
adc
jns
(bad)
pop
aam
fstp
loope
sbb
in
in
pop
int
xchg
test
jle
mov
mov
adc
xchg
dec
loope
stos
ss
in
ja
xor
inc
stos
sbb
fs
inc
ds
mov
mov
jecxz
jl
leave
je
jno
mov
sbb
imul
pop
movs
sub
repz
xor
push
jmp
aaa
mov
jb
add
enter
pushf
les
es
movs
mov
(bad)
mov
jg
call
mov
dec
dec
sahf
add
dec
shl
(bad)
push
fwait
xor
push
inc
cmps
sub
push
test
pop
pusha
nop
mov
mov
jmp
add
cmp
xor
je
xor
cmp
xor
add
xor
test
outs
fdiv
mov
mov
add
xchg
mov
in
in
mov
add
jmp
add
push
xchg
mov
outs
jb
popf
lock
stc
retf
aam
jl
lods
inc
in
fst
pop
sub
neg
push
jmp
adc
test
jp
mov
popf
ds
stos
push
cdq
cli
movzx
inc
inc
jno
cmc
cmp
jge
pop
sahf
push
mov
repz
xor
lods
lahf
xor
and
xchg
pop
(bad)
leave
jb
outs
jno
stos
pop
fistp
xchg
outs
xchg
xchg
je
in
sti
xchg
cmp
ins
add
ja
xchg
test
xor
aad
ins
fwait
xchg
dec
clc
ds
(bad)
into
xor
adc
pushf
inc
sub
lods
cmp
fwait
in
jl
lea
bound
in
sbb
pushf
pop
mov
fmul
xor
sbb
mov
dec
in
fsubr
repnz
popf
fmul
push
xchg
nop
js
jmp
inc
xchg
(bad)
test
ja
mov
push
cmp
icebp
mov
aam
push
mov
test
inc
dec
aam
int
fild
pop
inc
push
mov
adc
mov
stos
dec
and
jnp
sar
fnsave
pushw
jmp
fs
sbb
outs
push
test
movs
cmp
push
push
pop
pusha
jecxz
fwait
es
sar
push
pop
cmp
aam
jmp
dec
mov
add
(bad)
imul
imul
test
xor
test
out
mov
adc
dec
mov
retf
push
xor
cmp
sbb
push
inc
ins
scas
mov
mov
out
(bad)
sbb
cmp
sbb
mov
mov
(bad)
sbb
push
pop
adc
cmp
cmp
inc
mov
xchg
dec
xor
std
xchg
and
ins
xchg
mov
data16
mov
cmp
lock
cld
div
mov
cmp
cld
dec
stc
sbb
pop
mov
push
sub
xchg
mov
add
clc
jbe
pop
adc
xor
cmp
mov
imul
movs
or
mov
or
xor
int
aaa
mov
jb
outs
jns
mov
mov
dec
inc
cmps
addr16
pop
and
shr
fwait
test
push
fwait
lahf
lods
push
adc
repnz
mov
test
or
fild
inc
jo
pop
fwait
daa
dec
push
lods
inc
sub
out
mov
pushf
ds
and
jno
int
das
je
adc
sbb
je
add
mov
fisubr
repnz
jb
mov
dec
xchg
loope
inc
call
shl
lods
jmp
test
repnz
cld
(bad)
es
fidivr
push
sbb
clc
in
push
xor
sub
pop
popa
pop
mov
adc
test
popa
jmp
pop
fs
shl
arpl
or
sbb
push
xor
cmp
fsub
das
mov
jb
outs
jae
lods
jle
lahf
(bad)
jl
les
dec
stc
sti
mov
test
pop
sbb
std
aam
cld
loopne
ins
mov
cmp
cs
(bad)
pop
cs
fdiv
cmp
jbe
jp
mov
fild
not
cdq
dec
push
xor
xor
cdq
and
fidivr
sub
popf
lods
mov
cmp
pop
xchg
fadd
test
push
mov
dec
in
call
and
rcl
scas
mov
jnp
mov
lock
fisttp
mov
cs
sbb
(bad)
aam
fld
jae
push
fnstcw
outs
cmp
jbe
jne
adc
jmp
jae
int
sbb
and
das
mov
lods
outs
cmp
push
push
adc
fist
cmc
dec
pop
js
jp
mov
mov
cdq
popa
sub
icebp
test
sbb
jbe
xchg
add
inc
popf
(bad)
push
enter
inc
push
or
dec
lock
push
dec
xchg
add
gs
scas
nop
int3
nop
dec
sbb
add
clc
jbe
jb
int
sbb
sub
jne
dec
inc
mov
movs
adc
mov
pop
xor
inc
fidiv
inc
in
jl
mov
pop
xchg
les
and
rcr
mov
je
call
in
mul
jmp
cs
loopne
jo
dec
sbb
push
cld
jbe
push
call
imul
add
cmp
and
pusha
sub
and
inc
cmp
push
push
cmps
mov
ins
out
test
mov
je
lea
sbb
xchg
mov
inc
and
ror
cmps
pop
das
test
pusha
call
cli
cmp
add
aaa
jmp
sbb
pop
test
jns
mov
fistp
mov
movs
out
je
pop
xor
imul
(bad)
psllq
jg
lods
sub
daa
and
inc
lods
out
jb
outs
push
scas
pop
jecxz
xchg
les
and
les
lahf
mov
jae
mov
addr16
into
test
mov
fisttp
es
test
jbe
push
jo
pop
mov
pop
pop
mov
cmp
mov
icebp
cli
or
cmp
and
das
mov
mov
push
mov
dec
dec
xchg
adc
(bad)
(bad)
test
mov
dec
mov
xchg
push
and
ror
xchg
les
sbb
call
icebp
in
loope
sbb
hlt
cmp
shl
ret
or
cmp
pop
jle
sahf
xor
jge
mov
xchg
dec
and
jns
test
std
inc
arpl
in
outs
js
and
push
nop
pop
(bad)
popa
inc
sahf
pop
xor
sbb
mov
and
add
call
jbe
lea
mov
inc
loop
loopne
xchg
xchg
push
dec
xchg
shr
shr
in
rcl
pop
jne
mov
outs
aaa
in
(bad)
test
sbb
sbb
enter
xchg
dec
cmps
jne
jo
sub
jno
mov
(bad)
pop
out
hlt
jo
ret
jb
push
sub
pop
add
mov
call
xor
sbb
sbb
fnstsw
out
fs
lahf
push
nop
call
mov
adc
shr
mov
bound
xchg
lods
stc
inc
pop
mov
mov
sbb
not
jbe
add
xor
sub
mov
repnz
repz
sub
pop
xor
xor
jnp
push
test
ins
push
test
and
ss
and
call
sahf
call
inc
mov
cmp
in
and
div
cwde
mov
cmp
mov
test
dec
adc
inc
(bad)
sub
ds
cld
retf
inc
popa
or
adc
xchg
je
mov
idiv
call
or
in
cmp
ds
fdivr
adc
cmp
xchg
test
mul
fwait
dec
fwait
call
pop
mov
arpl
mov
hlt
add
dec
or
jnp
fiadd
xchg
fadd
inc
retf
dec
fidivr
sbb
cld
lods
inc
jecxz
push
es
mov
sbb
xchg
sahf
lods
mov
fst
ins
gs
fsub
push
dec
adc
add
stos
jae
movs
cmp
popf
movs
or
mov
fild
push
sbb
out
xchg
enter
sbb
jmp
adc
adc
and
mov
xlat
repnz
(bad)
jle
pushf
test
call
in
std
es
pop
jae
dec
stos
aaa
push
lea
adc
cs
ins
in
aas
mov
jbe
inc
cmp
adc
inc
push
pop
cwde
daa
nop
pop
enter
jns
mov
mov
fdiv
add
lea
sahf
call
push
leave
rol
lods
stos
leave
xor
xchg
cmc
aam
scas
and
stos
dec
hlt
pop
fiadd
or
lock
push
repz
dec
les
arpl
dec
or
mov
pop
cli
inc
adc
mov
ss
sub
ins
ins
mov
rcr
dec
in
mov
cmp
shl
imul
call
xchg
je
cli
in
and
ins
xchg
mov
les
scas
jg
xchg
cdq
xchg
popa
cmp
retf
out
push
pop
fisubr
cmp
fdiv
std
inc
retf
sbb
pop
push
mov
popa
mov
stc
add
clc
jbe
pop
xor
cmp
popf
sub
fnstsw
xchg
sub
into
mov
fcmovnbe
cwde
daa
mov
pop
les
pop
test
jl
les
adc
into
dec
mov
xchg
sar
jle
cwde
xchg
hlt
js
add
fwait
aam
call
(bad)
fistp
adc
dec
mov
jns
mov
or
sbb
stc
ins
ret
aad
mov
xor
xor
push
adc
pop
retf
test
xor
(bad)
cmp
iret
inc
repz
mov
cmp
xchg
jns
cmc
mov
stos
mov
jecxz
mov
mov
loopne
cmps
xrelease
pushf
scas
pop
lea
retf
adc
out
add
pusha
les
adc
and
icebp
xchg
mov
add
(bad)
mov
jnp
push
aas
call
pusha
jmp
sahf
inc
xor
sbb
pop
jl
fbstp
jg
inc
mov
jg
loop
jl
xchg
fcom
mov
ror
cmps
shr
jg
in
lea
add
inc
sbb
cmp
ss
sti
fst
adc
adc
inc
es
mov
fmul
jmp
xchg
xchg
jg
je
int
or
inc
sub
add
imul
arpl
and
push
scas
leave
add
dec
jbe
shl
lock
nop
push
or
shl
fwait
mov
sub
inc
arpl
enter
rcr
mov
jmp
dec
enter
aas
sub
stc
std
dec
retf
jg
test
sbb
push
pusha
cmps
mov
test
out
jo
lea
xor
jb
fwait
daa
mov
rcr
inc
mov
pop
xchg
mov
ins
rcr
adc
jle
mov
movs
xlat
pusha
xchg
aam
push
loop
ja
(bad)
mov
movs
sti
mov
daa
fsubr
xchg
mov
adc
cld
leave
sub
iret
cmp
ss
inc
inc
arpl
pop
fistp
push
sub
scas
jbe
bnd
hlt
push
ins
add
xor
sbb
jp
mov
gs
mov
xor
or
scas
xchg
das
mov
add
popa
cmp
push
stos
push
push
out
inc
mov
mov
push
test
stc
cmp
mov
dec
sub
(bad)
cld
mov
sub
les
js
pop
add
les
add
fld
jle
in
xor
sbb
jge
ror
and
lahf
or
push
neg
mov
mov
addr16
sar
inc
loope
pop
add
shl
jb
imul
ja
xor
movs
retf
ins
xchg
lods
inc
retf
sbb
or
or
pop
fnsave
inc
lahf
push
les
loope
or
inc
push
lds
sbb
add
add
ror
mov
cmp
cld
add
pop
jb
stos
outs
imul
mov
hlt
mov
test
fcomp
mov
jg
in
test
test
inc
in
lock
adc
enter
dec
stos
cmp
mov
jb
mov
fisttp
ret
mov
pusha
xor
push
push
add
sbb
iret
sbb
or
dec
jns
stos
lahf
sbb
or
mov
lock
bound
push
in
mov
pop
sti
mov
lock
mov
ins
mov
int3
lock
mov
lea
inc
iret
cmp
repz
sub
sbb
fwait
inc
or
movs
mov
imul
das
mov
addr16
jae
mov
sbb
dec
pusha
mov
xor
xor
cdq
dec
aas
sub
xor
push
pop
stos
pop
loopne
clc
jg
(bad)
lahf
push
icebp
xchg
js
(bad)
stos
xor
dec
sti
xchg
test
aas
test
popa
mov
xchg
adc
les
loop
xor
jp
cmp
scas
sub
xor
dec
movs
pop
push
lea
pop
jo
ret
cmp
repnz
jne
aam
imul
ins
jmp
aaa
mov
sbb
and
inc
xchg
cld
add
pop
jno
lods
pop
enter
xchg
mov
cmp
fild
mov
add
push
pop
cld
jmp
mov
push
or
loope
repz
push
jg
cmp
dec
and
popf
(bad)
iret
cmp
dec
out
cli
movs
call
push
xor
and
push
and
cs
arpl
arpl
and
(bad)
mov
xor
inc
rcr
loopne
iret
mov
pushf
das
jmp
mov
mov
icebp
out
mov
call
ds
stc
fist
xor
inc
mov
addr16
retf
scas
stos
xor
retf
jns
div
in
jp
inc
xor
pop
xor
sbb
ja
push
inc
xchg
xor
xchg
ret
aas
xchg
ficomp
push
jg
outs
test
test
mov
add
out
or
push
xchg
mov
repnz
adc
sti
cmp
ds
iret
jns
and
data16
pop
lahf
jne
dec
call
ja
out
adc
inc
fsubr
xor
push
or
ins
inc
shl
rcl
xchg
mov
xor
and
(bad)
sub
jle
ins
pop
jnp
je
mov
dec
mov
xchg
pop
pslld
mov
xchg
outs
mov
mov
ja
leave
scas
aas
das
xchg
adc
aad
in
sub
ror
(bad)
shl
sub
outs
inc
arpl
mov
leave
cli
sbb
and
pop
sbb
sub
fimul
shr
inc
in
test
dec
cwde
(bad)
daa
mov
pop
aad
je
lea
cmps
(bad)
jle
in
outs
xchg
mov
xchg
sub
jns
mov
popa
popf
popf
mov
lea
mov
or
push
std
in
push
stc
add
pop
call
push
lods
xchg
mov
pop
fwait
lock
inc
cmp
cmp
jne
push
xchg
ds
ss
imul
pusha
mul
dec
(bad)
aam
and
je
lea
xchg
(bad)
imul
repz
loope
scas
dec
fsubr
sahf
lea
fcmovne
test
stos
dec
call
xor
cmp
adc
inc
push
cwde
movs
mov
dec
push
rol
xchg
fist
(bad)
sbb
inc
add
cmp
test
sbb
inc
je
and
mov
repz
fldenv
inc
mov
xchg
shl
les
push
clc
mov
call
jb
xchg
mov
and
cli
cmp
cwde
dec
into
push
iret
sbb
daa
mov
repz
inc
pop
pop
pop
test
add
inc
cs
mov
stos
sbb
stc
ins
stc
nop
sbb
cmp
cmp
inc
add
sub
imul
popf
mov
stc
stc
mov
shr
pop
lods
push
repz
sbb
jecxz
xlat
xchg
pop
add
(bad)
test
jecxz
mov
pop
pop
out
stos
pop
aaa
stc
fsub
cwde
lods
pop
leave
push
sub
and
or
push
lea
jl
mov
into
sbb
je
ss
pop
aaa
jo
push
xchg
ds
sub
sbb
fdivr
mov
sbb
aaa
xor
in
std
out
(bad)
xchg
push
loop
gs
mov
cmp
add
cli
bnd
sbb
sbb
mov
add
stc
xchg
stc
out
ins
sub
pop
sbb
test
push
inc
test
sub
mov
nop
xor
dec
clc
cli
or
add
popa
mov
sahf
jle
add
mov
call
out
mov
mov
push
jg
jo
mov
dec
sahf
les
mov
imul
outs
add
mov
push
xor
jecxz
sbb
xchg
ja
sbb
aaa
jmp
sbb
cmp
test
add
xchg
xchg
scas
sahf
cmp
mov
jbe
sbb
xor
push
cwde
and
bound
jnp
mov
in
adc
cmp
scas
mov
or
mov
mov
mov
sbb
fisub
xchg
mov
outs
inc
cmps
xchg
xchg
push
pop
shl
out
stos
repz
ins
fwait
scas
sub
push
sar
cs
cld
scas
dec
stc
cs
aaa
push
call
jns
movs
mov
xor
jmp
mov
inc
bound
cmc
cmp
and
sub
dec
test
mov
jg
(bad)
out
fistp
pushf
dec
outs
jno
je
movs
xlat
push
loop
inc
and
shl
movs
loope
sub
retf
imul
mov
lock
ds
repnz
pushf
inc
jb
popa
test
gs
push
xchg
cmps
pushf
xor
std
jl
out
add
pop
cmp
xor
daa
mov
call
mov
or
in
mov
les
push
mov
fs
enter
fwait
jl
std
stos
test
repnz
repz
scas
sar
ins
sbb
mov
js
and
fcom
dec
ins
fwait
scas
aaa
rcl
xor
ss
ret
push
fidiv
or
jle
pop
pop
push
mov
jmp
dec
int
arpl
es
add
and
and
jp
movs
adc
cdq
(bad)
fist
mov
bound
loopne
mov
in
mov
es
(bad)
icebp
pop
jecxz
movs
(bad)
and
cwde
lock
call
inc
inc
popf
mov
jecxz
(bad)
sub
push
cld
repz
jae
sbb
push
les
dec
and
nop
cmps
lahf
xchg
ss
dec
sti
iret
js
repnz
adc
cmp
pop
sbb
add
mov
pop
mov
jb
test
add
fs
aaa
test
inc
pusha
test
repz
lock
fnsave
xor
retf
call
in
xchg
inc
jns
mov
xor
leave
sub
xor
inc
into
das
or
out
iret
pop
int
inc
pop
cmp
imul
mov
fisub
int
enter
jno
call
xor
imul
xor
adc
xor
inc
int
call
jmp
mov
dec
loope
mov
stos
jno
(bad)
sar
mov
sbb
call
lock
jl
mov
dec
fnstsw
sub
xlat
out
pop
cld
xor
fld
imul
push
jbe
fwait
test
or
adc
in
pop
jge
sbb
push
sbb
jmp
or
wrmsr
cmps
xor
pop
int
mov
test
jl
sub
mov
and
in
mov
ret
xchg
add
test
xchg
jno
(bad)
lock
sbb
mov
adc
aam
dec
outs
mov
out
sbb
jmp
jg
mov
pop
jo
inc
inc
jp
fwait
test
pop
pop
std
inc
test
jl
neg
inc
dec
loopne
push
sub
arpl
outs
repz
ins
cmp
add
ins
lea
mov
dec
call
cmp
dec
xchg
bound
xchg
mov
cwde
push
rcl
pop
xor
int
data16
daa
inc
pop
les
ins
push
xor
push
ss
jge
in
sub
push
in
push
push
cmp
sub
add
mov
pop
pushf
ror
lds
push
fnstsw
sahf
in
mov
jmp
adc
inc
repz
mov
inc
movs
ins
add
cld
loope
stc
repz
jg
scas
dec
lock
cmp
lods
sub
add
or
test
inc
xchg
mov
cli
jl
shl
cmp
adc
and
xchg
adc
adc
pop
fnstcw
cmps
inc
jo
mov
popf
retf
out
stos
xlat
pop
xor
pop
repz
dec
mov
xchg
pop
sub
enter
outs
lods
xchg
shl
ins
ja
cmps
test
inc
loopne
cmps
mov
es
mov
xor
iret
inc
jmp
pop
jg
mov
dec
fs
mov
xchg
add
fisttp
rcr
test
gs
inc
ds
sbb
pop
sub
xor
imul
adc
ds
or
leave
mov
sbb
pop
mov
push
out
cwde
push
cli
mov
test
bound
mov
clc
ret
xor
cmp
mov
dec
call
mov
inc
es
mov
mov
in
rol
fisttp
pop
pop
cmc
cmp
ja
sbb
inc
push
(bad)
adc
dec
outs
xchg
movs
stc
cmp
inc
fcmove
test
lea
push
movs
push
sahf
mov
repnz
fidivr
cmc
adc
fs
mov
ins
ja
mov
loop
in
idiv
xchg
lahf
dec
retf
and
aam
repz
cmp
jle
cmps
sub
xchg
cs
mov
iret
pop
(bad)
rcr
push
xor
sub
jbe
imul
jns
outs
cmp
push
push
movs
mov
push
mov
pop
rcr
(bad)
cmps
(bad)
dec
lahf
idiv
add
stos
test
jl
mov
add
enter
inc
xchg
cld
repz
lahf
movs
inc
out
fnstsw
xor
retf
retf
jbe
inc
jne
data16
cmp
cmp
scas
xchg
lea
int3
lea
enter
jne
jmp
add
cmps
dec
sbb
cwde
xor
inc
loope
mov
les
addr16
pop
xchg
les
push
lock
lea
gs
movs
xchg
push
cmp
ror
mov
sbb
cs
cld
int3
imul
mov
push
mov
mov
mov
cmp
push
fucomip
aas
mov
jns
jb
(bad)
cmp
add
cmp
inc
adc
jle
into
cli
sub
or
into
mov
lds
inc
xchg
sahf
cmp
in
call
xor
cmc
std
push
out
inc
call
jns
cdq
mov
lock
dec
bound
iret
xor
repnz
call
mov
xor
adc
xlat
jle
stc
adc
cmp
xor
jo
sbb
pop
leave
pop
fsubr
mov
cmps
ss
test
out
fadd
sbb
jl
inc
aad
and
xchg
push
loop
je
sti
stos
test
leave
jne
mov
data16
mov
repnz
std
mov
mov
cmp
fistp
push
and
sbb
mov
jbe
mov
mov
jmp
jno
sti
cmp
jnp
arpl
ins
jae
imul
mov
dec
cli
in
mov
mov
jbe
mov
pop
test
test
xchg
popa
and
cmc
lods
push
jecxz
xchg
jl
xchg
mov
push
xor
ror
test
sub
push
enter
les
and
sbb
mov
sub
xchg
test
ins
jmp
imul
and
mov
mov
mov
pop
mov
std
pop
xor
out
fist
outs
jae
mov
pusha
xchg
mov
push
in
push
or
icebp
sub
ins
mov
add
mov
xchg
icebp
mov
aad
(bad)
cmp
add
cli
xor
outs
stos
cmp
mov
ret
push
fsub
or
jmp
pop
jg
xor
aas
(bad)
ds
inc
adc
pop
xor
dec
outs
xchg
cdq
inc
dec
dec
jge
mov
pop
sahf
retf
popa
aam
jbe
lea
nop
call
mov
or
imul
mov
and
cld
fsub
mov
push
sub
rcl
inc
jge
mov
imul
mov
mov
in
jl
mov
ins
jle
mov
js
sub
dec
adc
sub
iret
fwait
xor
sti
or
outs
jae
mov
mov
mov
loopne
add
in
clc
nop
bswap
ins
movs
mov
jne
xchg
test
fisttp
fwait
scas
dec
les
xor
push
inc
ja
dec
fdiv
cmp
ins
cs
mov
mov
call
push
xor
add
arpl
adc
das
nop
adc
push
xlat
or
mov
dec
int
mov
mov
outs
push
test
cmp
sahf
fs
rol
add
lods
pop
je
mov
mov
out
cwde
xor
ss
test
add
pop
outs
pop
mov
jl
(bad)
mov
out
jmp
cmc
push
pop
inc
inc
loope
pop
push
xor
into
push
fnsave
popf
(bad)
clc
mov
pop
xchg
enter
sbb
ret
mov
mov
jmp
imul
fcmovnu
daa
and
mov
xor
in
ror
xchg
xchg
push
test
jb
inc
mov
cmp
ja
test
push
mov
inc
inc
imul
mov
or
mov
(bad)
fadd
in
outs
pop
test
(bad)
dec
xchg
std
xchg
pusha
cmc
nop
sbb
sbb
inc
cmps
bound
mov
jmp
jnp
call
adc
cld
call
inc
pop
sub
cmp
and
mov
lea
push
jmp
mov
addr16
es
or
pop
test
lahf
pop
inc
stos
dec
inc
lods
(bad)
(bad)
cs
pusha
sti
jge
inc
mov
jns
mov
dec
div
hlt
add
mov
jae
mov
inc
xchg
lahf
push
xchg
pop
in
or
data16
pop
or
cmp
dec
cs
mov
ins
in
cli
add
inc
mov
adc
inc
ins
nop
push
xor
lods
ss
sub
rcr
retf
sbb
mov
mov
pop
mov
cmp
shl
mov
ret
imul
and
cld
xchg
retf
sbb
fisubr
pop
dec
(bad)
(bad)
rcr
imul
or
aaa
push
mov
cmp
pop
icebp
int3
cs
or
and
pop
add
pop
clc
add
movs
cmp
stos
sbb
fs
out
xchg
ds
pusha
jmp
jle
mov
out
les
rcl
jmp
xchg
add
inc
nop
mov
push
je
mov
in
sar
xor
xor
pop
fidivr
pop
cs
inc
push
pushf
and
cmp
dec
or
mov
mov
sbb
pop
out
int3
adc
aaa
in
sbb
mov
xchg
or
add
cld
or
inc
fcmovnbe
mov
xor
inc
shl
and
mov
div
mov
xchg
pushf
aad
sub
add
(bad)
dec
push
fwait
xchg
cmp
pop
fldcw
cs
cld
cmc
and
xor
pop
jge
mov
adc
mov
enter
lock
bound
jmp
sub
push
adc
inc
jnp
pop
xor
cwde
xor
dec
lds
pop
out
push
jp
pop
clc
mov
mov
xor
(bad)
test
out
mov
mov
test
aaa
retf
xrelease
fwait
scas
dec
loope
repz
jmp
fcomp
xor
push
pop
test
je
or
sub
sub
push
cmp
adc
add
xor
es
adc
pop
sbb
mov
outs
call
jecxz
jae
mov
jle
jecxz
jbe
adc
push
xchg
in
aad
mov
mov
movs
fstp
dec
add
ds
ds
(bad)
into
jo
cmp
jno
inc
lods
pop
sbb
movs
cwde
mov
lahf
aad
mov
pop
int
xor
ja
test
data16
push
cmp
sbb
add
in
(bad)
hlt
push
test
mov
addr16
mov
jne
xchg
jns
jmp
mov
stos
sbb
xchg
das
retf
test
inc
call
cs
retf
cmp
dec
mov
ins
mov
aas
jns
fwait
int
pop
pop
iret
dec
test
arpl
cmps
pop
adc
xor
imul
xor
mov
push
idiv
mov
into
xchg
push
icebp
arpl
pushf
sub
mov
and
xlat
mov
jmp
ror
and
lea
ret
fdivr
mov
inc
lea
stc
sub
stc
in
inc
jmp
jne
fs
add
cwde
(bad)
test
jmp
inc
ins
popa
inc
in
push
das
mov
xchg
mov
jne
mov
sub
push
and
fidiv
adc
push
stos
pop
icebp
mov
and
shl
les
xchg
mov
jmp
push
jmp
ds
rol
arpl
pop
stos
push
cmp
fwait
retf
inc
cmps
pusha
(bad)
arpl
add
aaa
xor
pop
cdq
sbb
lahf
adc
adc
into
mov
popf
sar
rcr
push
fcomp
test
dec
xchg
les
or
mov
cdq
sub
test
lock
mov
adc
aad
cli
xor
sbb
push
mov
call
and
lea
jbe
leave
pop
add
add
pop
mov
(bad)
pop
xor
loope
add
jle
test
jle
inc
(bad)
test
clc
pop
sub
and
ror
mov
bound
cwde
mov
adc
in
fadd
push
push
fimul
dec
jae
dec
xchg
sub
mov
sbb
mov
push
inc
cmps
pusha
std
shl
lea
addr16
xor
aas
xor
pop
pop
mov
rol
data16
dec
or
pop
push
nop
retf
xor
inc
div
popa
bnd
pop
cmps
sub
shl
xlat
out
dec
xchg
fst
lods
xchg
div
xchg
mov
aam
mov
ret
sub
dec
cmc
adc
push
sar
ret
jns
xor
or
sbb
mov
mov
out
add
inc
add
and
arpl
and
cmp
sub
cmps
or
push
ins
xor
and
mov
mov
xchg
push
push
repz
lea
cdq
lahf
mov
aaa
stc
aam
call
stos
pusha
jecxz
fisttp
sbb
xchg
lods
inc
shl
pop
ins
push
mov
jns
xchg
mov
fs
out
pop
xchg
call
shl
push
xor
mov
mov
hlt
ins
dec
mov
mov
outs
popf
movs
cli
or
ss
call
(bad)
dec
jg
or
lock
xchg
loop
push
loope
jno
std
ror
loope
jmp
in
call
(bad)
inc
inc
mov
and
cli
(bad)
fisub
mov
push
mov
jge
cli
and
adc
xor
or
adc
outs
adc
jg
mov
inc
jmp
xchg
cmp
mov
ins
pop
arpl
dec
fwait
in
mov
xor
clc
xchg
adc
lds
ret
mov
mov
test
fsub
mov
push
push
enter
repnz
repnz
fisub
push
xor
inc
cmp
xchg
lods
nop
aaa
sub
mov
pop
inc
jno
in
emms
or
xchg
push
mov
sbb
cmp
mov
add
dec
imul
popa
aad
jle
mov
lods
repz
in
xchg
popa
(bad)
test
xchg
in
pop
int
xchg
xchg
fs
test
test
sahf
lods
jno
jp
push
and
cli
(bad)
fisub
popa
stos
pop
inc
pop
sub
mov
sar
adc
pop
enter
outs
adc
imul
pop
mov
je
xlat
mov
pop
and
scas
xchg
daa
mov
outs
jno
and
mov
jl
les
and
fimul
mov
pop
sub
jle
mov
fimul
inc
pop
in
fdivrp
popa
call
stos
(bad)
push
sahf
pusha
pop
dec
lahf
mov
int
jmp
jb
bound
and
dec
add
pop
fistp
scas
jp
cmps
cmp
mov
push
and
rol
test
jnp
sbb
lock
cmps
shl
int3
sahf
push
adc
sti
mov
jecxz
and
mov
fldenv
test
repnz
repz
jp
scas
push
fidiv
dec
sub
int3
cld
fild
and
push
dec
stos
cmp
daa
lea
jge
cwde
mov
cmp
rcr
sar
pusha
push
add
pop
das
inc
and
test
push
pusha
xchg
mov
lahf
pop
and
pop
xchg
fcom
jmp
push
test
imul
rcl
movs
test
sub
outs
jnp
test
icebp
cmps
(bad)
fmul
lods
inc
cmc
dec
(bad)
dec
aas
sbb
retf
cld
and
and
sub
mov
fsubr
or
xor
add
cwde
es
and
imul
inc
popf
aad
xor
test
test
retf
cwde
pop
pop
jl
sub
movs
(bad)
inc
mov
nop
sub
adc
arpl
lea
mov
(bad)
inc
mov
(bad)
xor
cmp
call
stos
sbb
sub
mov
mov
cs
outs
rol
je
xor
and
sub
jg
stos
and
movs
cli
cmp
jl
fistp
fcomp
es
pop
retf
cmp
clc
jno
(bad)
rol
sub
popf
cwde
mov
pop
loopne
out
scas
idiv
mov
cmp
fdiv
inc
cmp
dec
lods
pop
pop
mov
dec
mov
fsub
cli
or
xor
cmp
imul
das
mov
fisttp
sbb
fwait
xor
dec
and
in
loop
xchg
sti
pop
jmp
mov
xchg
fs
push
es
shr
(bad)
fstp
xchg
mov
xchg
fwait
(bad)
dec
ror
sub
iret
js
aaa
jle
pop
mov
inc
pop
jno
cmps
scas
stos
cmp
shl
clc
sbb
jns
in
cmp
add
and
imul
xor
lahf
pop
aaa
add
mov
lods
shl
imul
clc
jge
les
and
rcl
scas
rcr
ret
xchg
(bad)
fsubr
ds
mov
sub
sbb
cmp
inc
mov
adc
mov
jne
xchg
lds
rcr
jo
hlt
jbe
jae
cmps
push
imul
adc
push
rcl
jns
xchg
movs
cmp
mov
dec
jmp
call
push
scas
jp
mov
cmps
pusha
idiv
test
push
or
adc
(bad)
cld
xor
test
and
mov
repz
(bad)
xor
cmp
inc
cs
mov
lods
inc
cs
fld
ds
clc
pop
dec
data16
imul
jo
outs
xor
sbb
cs
cmps
xchg
aas
mov
push
dec
test
sahf
leave
pop
xchg
int3
mov
and
fst
sub
xchg
test
push
ds
icebp
lea
push
out
retf
das
dec
mov
nop
es
push
cmp
dec
push
jg
mov
fsubr
int3
push
mov
push
push
dec
(bad)
pop
or
add
imul
ja
xchg
test
in
xchg
adc
inc
bound
push
jmp
imul
lea
pop
das
rcr
ja
test
xor
(bad)
or
pop
push
jmp
inc
jmp
pop
fs
cs
ins
xchg
(bad)
lods
scas
aas
and
imul
or
xor
and
jae
bound
imul
pop
scas
retf
xor
pop
fsubr
sbb
add
and
cmp
in
add
out
jnp
arpl
mov
(bad)
ds
std
lock
loope
cmp
lods
test
pop
ror
cmp
dec
(bad)
inc
lods
addr16
inc
movs
pusha
or
mov
rol
das
(bad)
icebp
jbe
popa
ds
pop
inc
xor
hlt
pop
jno
pop
sbb
into
push
das
bound
(bad)
jno
jne
sub
hlt
dec
loopne
mov
pop
ss
(bad)
pop
shl
test
aas
test
jle
sahf
mov
fcmovb
jo
lods
mov
push
or
xor
fmul
and
pop
movs
push
pop
jle
sbb
icebp
mov
data16
or
adc
push
sbb
inc
(bad)
cmp
imul
cmp
and
loope
cmp
ins
out
fst
bnd
pop
mov
dec
mov
mov
jecxz
jae
cli
jmp
sbb
push
cmp
arpl
xchg
and
loope
mov
out
add
ret
ins
shl
push
inc
push
fdiv
stos
inc
call
xchg
sbb
cwde
inc
cs
mov
mov
jmp
jle
mov
sub
outs
or
jmpw
or
or
jmp
clc
sbb
je
and
ins
jecxz
movs
push
loop
inc
and
shl
(bad)
les
jle
mov
test
daa
stc
hlt
mov
lds
lods
fwait
ja
pop
fmul
cs
(bad)
cli
xor
sbb
ss
mov
mov
ror
add
aaa
fsub
sbb
sbb
fs
mov
add
cmp
dec
cli
fistp
aad
sbb
jb
lahf
lock
fadd
add
rcl
lea
ja
test
ret
or
dec
inc
(bad)
movs
fs
test
(bad)
xor
sbb
js
inc
sbb
fwait
xchg
ds
fcom
mov
cmp
pop
xor
cmp
daa
leave
adc
imul
(bad)
cs
mov
push
(bad)
sbb
sbb
mov
dec
xchg
les
psllw
xchg
xor
pop
mov
scas
mov
test
jge
mov
add
inc
ror
pop
sub
in
jne
dec
mov
inc
cs
cmps
mov
dec
and
jnp
iret
xor
pop
int
pop
jo
adc
sub
sahf
push
aas
movs
aas
jg
fdiv
xor
and
les
loop
jbe
mov
dec
xchg
into
mov
rcl
mov
out
inc
xchg
movs
stos
ror
pop
ja
add
(bad)
inc
not
cs
cli
cld
sti
inc
call
stos
pop
jle
mov
pusha
lahf
xchg
fdivr
jl
rcl
xor
pop
sbb
add
add
mov
test
xchg
movs
stc
ins
xor
xor
iret
xchg
dec
mov
pop
and
inc
call
or
lods
mov
loop
mov
not
inc
in
shl
fbld
cmc
fld
aaa
out
lock
pop
popf
add
add
sbb
add
mov
mov
sar
lahf
clc
js
ja
in
sbb
or
pusha
mov
push
sahf
scas
xchg
daa
or
retf
fisub
les
push
stos
pop
ret
cmp
stos
stos
push
ficomp
lods
add
dec
mov
add
(bad)
lds
test
lods
inc
repnz
hlt
das
pop
xor
hlt
fist
jne
pop
mov
adc
ds
dec
sti
rol
lahf
lock
jp
enter
push
sub
imul
pop
popf
aad
pop
adc
push
clc
scas
xchg
inc
mov
jne
movs
jo
mov
cdq
jge
mov
or
cli
cmps
sub
pusha
test
push
test
cmc
es
repnz
not
fld
fwait
scas
dec
enter
or
jmp
ficomp
ss
push
pusha
lods
sbb
popf
push
mov
adc
lods
jcxz
or
sbb
and
pop
pop
aas
sahf
push
(bad)
pop
(bad)
imul
xor
cli
jne
and
fist
push
pop
push
mov
and
les
sbb
movs
add
in
mov
jge
mov
adc
(bad)
imul
in
mov
push
(bad)
ss
fistp
jo
push
lods
adc
add
scas
xor
imul
int3
pop
mov
cmp
push
or
push
test
imul
add
cmps
xor
in
xchg
daa
mov
jb
push
icebp
mov
sbb
xchg
push
movs
mov
pop
lea
lock
in
test
cmp
ds
fist
and
data16
push
inc
fwait
jns
dec
lahf
retf
xor
icebp
jbe
fisttp
enter
pop
push
ret
and
add
mov
mov
(bad)
jae
popf
movd
xlat
call
xchg
sar
inc
bnd
scas
jno
xchg
stc
dec
fwait
into
and
pop
sub
fisttp
scas
(bad)
sbb
xor
sti
(bad)
fwait
lods
inc
sti
dec
fidivr
pop
ds
aad
pop
cwde
and
dec
mov
pop
cs
mov
mov
jecxz
or
sbb
jl
daa
mov
fistp
nop
pop
xor
pop
xor
inc
rcr
adc
jbe
test
xchg
cmc
inc
cmps
into
xchg
pop
pop
std
stos
std
or
push
cmp
test
adc
clc
mov
fldcw
sbb
jecxz
fisttp
or
repnz
(bad)
add
imul
scas
xchg
mov
(bad)
xor
and
xor
arpl
(bad)
ds
add
jae
lods
jl
mov
test
(bad)
out
mov
stos
(bad)
sbb
sbb
pop
mov
xchg
sub
rcl
movs
shr
test
aas
int3
pushf
out
aam
jno
lods
lods
inc
fld
sbb
ds
sti
fcom
adc
adc
sub
scas
xchg
xchg
retf
ds
(bad)
or
or
leave
and
push
add
xor
inc
push
jge
mov
lahf
movs
cli
or
and
(bad)
idiv
mov
fnstsw
dec
retf
cmp
ins
xchg
scas
xchg
das
stos
bound
test
mov
popf
es
sahf
dec
loopne
shl
sub
imul
pop
sub
pop
mov
mov
mov
cs
outs
in
cli
add
cmp
sub
pop
push
add
outs
inc
mov
retf
mov
adc
fbstp
les
inc
mov
dec
sub
ins
in
push
ss
(bad)
test
nop
ins
xchg
pusha
ja
xchg
xchg
js
out
(bad)
lock
mov
cmp
cmp
mov
pop
icebp
pop
jnp
dec
stos
aaa
push
jo
dec
ds
mov
int
adc
xor
jb
mov
imul
xor
xor
push
and
jmp
pop
(bad)
pop
jne
(bad)
jle
mov
pop
add
ins
retf
cs
shr
mov
jb
popf
cld
js
xchg
pushf
sbb
dec
inc
mov
cmps
or
ss
rol
xor
xor
sahf
pop
add
lahf
mov
mov
cwde
cli
or
(bad)
and
fs
and
push
call
dec
mov
mov
and
cld
fwait
sub
cmc
push
retf
pusha
add
mov
and
les
das
xchg
jmp
push
out
mov
mov
mov
add
fadd
xchg
fadd
and
and
not
or
pop
push
xchg
xor
mov
or
call
jmp
jno
int
add
sub
push
push
xchg
sbb
mov
and
leave
fwait
and
int
aam
jne
stos
pop
repz
lock
in
push
int3
rol
jmp
fs
cld
xor
mov
pop
or
(bad)
cwde
cmp
aaa
outs
stos
or
mov
mov
xchg
nop
cmp
cli
daa
xchg
add
cmp
xor
jo
adc
sbb
ja
xchg
imul
scas
std
jb
ins
jbe
lea
call
je
mov
and
ret
adc
sub
inc
lock
fincstp
push
cwde
movs
les
ds
cs
es
inc
jae
dec
cdq
sub
mov
dec
cwde
fnstsw
cdq
int3
aas
mov
fnsave
cmp
sbb
sbb
scas
jge
popf
cmp
xchg
cdq
(bad)
sub
sar
loopne
jo
mov
dec
cmps
rcr
xor
jmp
fcmovne
sbb
xchg
xor
or
mov
push
test
jmp
xor
dec
scas
sbb
xchg
inc
xor
mov
out
and
and
pop
sbb
xor
ss
mov
xchg
jo
mov
push
aam
xchg
and
jge
pop
mov
popf
mov
jecxz
xchg
mov
xchg
sbb
inc
xchg
xchg
fld
nop
mov
popa
ds
lds
mov
cmp
cmp
(bad)
and
ss
scas
daa
pop
cmp
inc
cmp
lods
mov
cli
imul
push
xchg
(bad)
sbb
add
fs
shufps
outs
and
cmp
mov
and
fist
icebp
imul
je
lahf
ror
ret
xchg
mov
lods
or
movs
lahf
scas
enter
addr16
lods
ds
inc
lods
lods
dec
retf
dec
inc
push
nop
icebp
in
jle
dec
pop
pop
cmp
jno
push
test
mov
mov
add
inc
jmp
pusha
cmp
imul
ins
stc
inc
push
fidivr
lods
sub
add
inc
fcom
mov
out
jbe
mov
mov
push
cwde
aam
fs
stos
jne
std
dec
xchg
dec
xchg
mov
lock
cwde
push
out
lds
cmp
(bad)
fdivr
inc
jb
dec
fist
dec
test
pop
xchg
fwait
mov
loop
sbb
cli
jae
push
xor
cmp
inc
rcl
cmps
aas
sbb
adc
mov
loop
push
pop
mov
jl
ret
test
cwde
and
add
sbb
popf
push
adc
xor
imul
cmp
xchg
icebp
int
les
daa
pop
test
jnp
inc
and
sub
test
jg
ret
jo
add
sbb
jp
mov
cmps
(bad)
xor
enter
bnd
js
ds
dec
clc
movs
aam
pushf
mov
jne
fwait
or
(bad)
shr
scas
ror
arpl
fldenv
mov
xor
cmp
repz
push
dec
fist
or
(bad)
xchg
sub
fistp
mov
cmp
and
mov
shr
jae
lods
inc
inc
retf
xchg
lods
xor
fst
fstp
ins
lahf
push
xchg
jae
loope
ja
in
sub
out
xchg
inc
jnp
xchg
mov
and
fmul
mov
retf
sbb
xchg
fldenv
in
pop
push
sbb
pop
mov
push
test
into
scas
pop
inc
lods
jnp
(bad)
sbb
mov
push
out
add
pop
xlat
js
cmps
push
sub
pushf
pop
sub
push
mov
push
push
lods
jl
into
fistp
mov
mov
xchg
jmp
mov
pushf
ret
fs
xchg
(bad)
mov
stos
cmp
jb
or
dec
mov
xlat
xchg
jp
dec
mov
push
mov
jge
ret
clc
js
gs
pop
sbb
pop
mov
mov
pusha
xchg
mov
dec
out
xchg
cs
repnz
jnp
mov
push
call
add
rol
mov
inc
mov
cmp
nop
scas
add
inc
call
clc
fist
inc
ja
jg
push
cs
shl
cli
jo
hlt
inc
inc
push
add
adc
lods
pop
mov
lea
cmps
sbb
shr
(bad)
ficom
cld
pop
je
shr
sbb
xchg
cld
add
jmp
dec
nop
pushf
fcmovnb
aas
test
jne
mov
cs
push
movs
std
fidivr
popf
add
shl
cs
ror
jl
push
fs
scas
outs
jle
cs
jge
mov
xchg
dec
shr
out
sbb
cmp
add
sbb
mov
ja
mov
pop
fldcw
push
adc
pop
(bad)
je
mov
mov
daa
(bad)
jecxz
lods
(bad)
scas
out
mov
xchg
push
call
dec
dec
lods
mov
adc
or
xchg
fild
xor
cmp
inc
jp
call
in
int
mov
jbe
imul
jge
sbb
jb
lahf
pop
inc
into
xor
test
sub
cmp
out
inc
mov
dec
bound
mov
xor
mov
lock
mov
dec
mov
add
sti
(bad)
jmp
shl
cmp
pop
xor
cmc
fist
cmp
cmp
inc
adc
ret
sbb
cs
jb
or
cmp
jl
mov
stos
and
sbb
mov
sbb
dec
in
idiv
inc
lods
jecxz
cmp
popf
pop
lds
xor
hlt
mov
stos
cmps
aam
or
mov
push
es
aam
into
out
jnp
xor
xlat
sbb
fprem
enter
add
bound
inc
cs
movs
nop
call
jo
leave
(bad)
or
int
or
sub
ja
arpl
sar
lea
je
mov
dec
fdivr
loop
sar
jecxz
sbb
pop
aad
jmp
addr16
push
sbb
shl
mov
enter
pop
add
xchg
add
cmp
fdivr
rcr
sbb
pushf
sbb
jnp
inc
and
fisttp
jle
loope
pushf
mov
push
add
mov
test
xor
arpl
xor
sahf
std
call
dec
push
movs
push
xchg
(bad)
dec
mov
xchg
push
icebp
fstp
imul
push
test
cwde
sub
cwde
inc
out
hlt
dec
aaa
push
cmp
push
jmp
jge
lahf
jne
ins
xchg
shr
ret
cli
sbb
ss
and
add
add
pusha
jne
or
mov
pop
in
sahf
adc
push
push
sahf
rcl
xchg
push
mov
dec
loope
test
movs
dec
cs
stos
test
lea
mov
push
unpckhps
fisubr
lods
test
push
ds
adc
mov
jg
xor
pop
cdq
push
ds
mov
lea
or
cbw
jmp
push
push
xor
and
ja
sbb
pop
pop
mov
xor
sbb
xchg
(bad)
xor
sub
(bad)
test
jno
pop
lock
repnz
mov
out
loope
jno
int
mov
in
or
popa
xchg
ret
inc
(bad)
cmps
mov
dec
ins
loop
addr16
shl
pop
cmp
out
std
cmp
add
pop
scas
or
mov
mov
xlat
data16
sbb
and
pop
sub
adc
idiv
fidiv
sar
ja
xchg
xchg
xor
and
push
repz
lock
cmc
cld
add
icebp
clc
nop
push
lds
lock
xchg
mov
and
icebp
repnz
mov
sub
jmp
fdiv
pop
popa
sbb
or
aaa
ins
scas
call
out
cld
push
xchg
std
add
pop
aam
or
or
mov
inc
mov
std
pop
cmp
(bad)
rcl
lock
push
lods
pop
frstor
popf
inc
loope
pusha
dec
xchg
fild
movs
lods
sar
dec
lods
cdq
sahf
add
int3
std
out
(bad)
inc
jne
test
dec
mov
push
push
in
fpatan
cmp
push
pop
cmp
sbb
sbb
mov
not
iret
clc
sbb
xor
add
ins
pusha
test
sub
xchg
push
cmp
dec
jmp
xchg
add
data16
dec
fst
mov
aam
bound
std
mov
mov
sbb
xchg
fiadd
xchg
test
jae
sbb
cmp
call
sub
or
mov
std
push
out
sbb
inc
aad
xor
jmp
cmps
push
xor
xor
nop
mov
push
fcmovbe
out
sahf
in
jb
ins
push
test
shl
ins
repz
jae
mov
lods
sbb
push
cli
mov
add
sbb
aad
inc
xchg
and
cmp
mov
stos
popa
(bad)
xor
sbb
inc
test
jl
mov
scas
sub
int
mov
jbe
push
or
sbb
fs
push
xor
push
add
push
pusha
dec
mov
repnz
hlt
mov
dec
cdq
les
sbb
outs
(bad)
(bad)
mov
je
mov
add
faddp
xor
dec
outs
sahf
fisttp
mov
or
fadd
mov
sahf
arpl
ins
pop
jl
xor
lahf
retf
ds
push
(bad)
push
push
jno
jmp
cmp
cmp
sub
sub
ins
bound
jae
scas
neg
sub
xlat
mov
fdiv
mov
hlt
lahf
xlat
xor
les
cmp
mov
movs
pushf
fcmovnb
aas
fldcw
xchg
mov
ds
xor
cmp
pop
sbb
(bad)
(bad)
adc
pop
cmps
ins
jle
mov
mov
lods
jg
fisub
mov
push
arpl
xor
cdq
pop
mov
stos
jl
cmps
dec
pop
mov
and
call
or
sbb
cmps
pop
sar
xchg
outs
in
arpl
xchg
not
mov
jnp
test
pushf
movs
retf
ins
mov
test
fldln2
cmp
sbb
les
push
ins
icebp
xchg
scas
scas
xor
(bad)
cli
or
int
ins
ja
adc
rcr
mov
cmps
cmp
xor
and
ficom
jecxz
jbe
fimul
mov
(bad)
xchg
jbe
and
jmp
mov
pushf
rol
gs
mov
xchg
mov
dec
push
sub
repnz
stos
push
lds
aaa
pop
daa
xchg
sbb
popf
xchg
mov
gs
cli
or
int
ds
add
js
lods
ja
fmul
jae
movs
lahf
sbb
adc
dec
gs
test
jecxz
loopne
xchg
rcr
jmp
outs
mov
mov
cs
jg
in
lea
pop
stc
loop
into
test
dec
clc
cmp
cmp
into
daa
jo
pop
mov
inc
imul
cli
or
and
and
jo
adc
arpl
cmps
pop
adc
sahf
cmp
mov
add
mov
js
in
xchg
dec
loopne
jno
cmc
stos
mov
jmp
or
xchg
xchg
mov
lock
cwde
inc
loope
repz
enter
in
jg
pop
scas
sbb
mov
jns
mov
retf
dec
jmp
jbe
lds
adc
js
inc
sahf
jle
imul
push
popf
mov
push
push
and
jmp
jp
push
jo
test
mul
adc
std
xlat
xchg
or
ins
xchg
pop
ja
mov
div
in
rol
test
jecxz
retf
sbb
ss
gs
cmps
xor
mov
outs
loope
or
xor
xor
add
or
data16
push
sub
ss
and
sti
fist
hlt
outs
push
pop
mov
dec
xchg
xchg
fs
or
movs
mov
mov
add
movs
test
xor
aam
stos
out
push
mov
dec
cs
call
mov
pop
push
mov
mov
fsubr
stc
or
cmp
aaa
xor
xor
ss
ds
inc
inc
sbb
fsub
(bad)
fidiv
fsubr
push
stos
jb
mov
add
stos
jmp
sar
pop
movsx
clc
fcmove
outs
inc
lods
stos
inc
xchg
pop
ror
push
jmp
mov
stc
sbb
pop
popf
or
daa
imul
stc
add
(bad)
push
jae
imul
pop
int3
imul
add
sahf
cmp
and
fist
cwde
sbb
test
adc
xchg
loop
fs
adc
rcl
stos
mov
jo
adc
cld
sbb
mov
sub
not
jo
pop
test
inc
inc
xchg
cmp
shr
jmp
outs
adc
pop
int
sbb
sub
add
outs
push
mov
jo
cmps
cmp
sti
jb
outs
push
(bad)
loopne
xchg
aad
push
retf
rol
mov
bound
call
mov
lea
pop
scas
inc
push
sbb
cmc
repz
arpl
cmps
pop
gs
xor
pusha
xchg
xchg
mov
arpl
jmp
ja
cmp
adc
mov
stos
and
data16
inc
and
mov
sti
stc
mov
cmp
lea
mov
bound
adc
jecxz
mov
lods
mov
lods
inc
inc
loopne
mov
xchg
out
ficom
cmc
ret
sub
jns
cmp
imul
imul
jl
pusha
mov
cmp
jne
les
add
jmp
fs
cmp
inc
xor
add
inc
push
dec
jnp
mov
sbb
and
cmps
xchg
cld
jo
inc
jbe
scas
push
cmps
(bad)
cmps
fs
jne
clc
enter
imul
call
add
icebp
(bad)
(bad)
dec
ins
xchg
scas
xor
sub
dec
daa
cs
stos
inc
in
inc
add
imul
xchg
test
out
loope
cdq
xchg
jp
jno
fnsave
sub
and
sub
or
movs
cmp
xor
cmp
fnstcw
aad
push
and
jb
(bad)
xchg
idiv
test
movs
cmps
lods
ret
cmp
xchg
xchg
or
fsubr
inc
push
fwait
(bad)
xor
inc
repz
xor
leave
ficom
xor
or
cmps
inc
aas
jno
mov
mov
and
pop
out
push
test
je
inc
inc
sti
and
add
lods
or
add
imul
jp
mov
div
pop
js
iret
mov
mov
jg
jge
push
stos
pop
div
mov
shl
push
or
stos
mov
lods
test
add
xor
(bad)
ins
dec
mov
(bad)
cmp
fdiv
xor
adc
pusha
mov
call
inc
jecxz
or
sub
adc
push
push
sbb
hlt
inc
imul
cwde
mov
dec
(bad)
fisttp
shr
inc
mov
inc
xchg
push
adc
mov
mov
jp
test
das
adc
mov
mov
push
fidivr
cmp
test
jnp
cmp
mov
pop
push
out
test
inc
jmp
jno
int
push
pop
add
mov
push
jb
jge
ror
popf
mov
and
iret
xchg
dec
mov
sbb
ins
jo
stos
xor
(bad)
mov
xchg
jno
std
out
ins
mov
xchg
dec
fisub
mov
repz
fcomi
clc
fpatan
inc
adc
pop
(bad)
das
sub
mov
rcl
or
xor
bound
mov
call
(bad)
jns
aad
inc
jno
jmp
sbb
pusha
stos
jnp
cmps
sub
test
std
fmul
lock
pusha
pop
mov
iret
lock
call
lea
jp
out
xchg
das
adc
sti
dec
ja
lods
fs
push
xlat
dec
cs
fcmovbe
push
fidiv
pop
bound
ds
sysret
(bad)
outs
jecxz
or
cmp
xor
push
add
pop
cmps
pusha
pusha
mov
outs
movs
movs
jmp
sbb
xchg
(bad)
sti
add
dec
push
(bad)
iret
(bad)
xor
test
(bad)
hlt
cmp
adc
sbb
mov
clc
cld
mov
call
call
in
loop
in
xor
sub
mov
pop
lahf
pop
and
mov
mov
sub
inc
loope
pop
jmp
mov
gs
jne
xchg
ds
fcom
sbb
mov
cmp
repz
push
lods
xchg
jns
outs
sbb
mov
stc
xor
xchg
inc
ss
ror
xchg
ret
cmp
mov
push
dec
repz
cdq
call
ds
icebp
stos
pop
loope
imul
jle
inc
sub
mov
fnstenv
(bad)
and
push
enter
push
xor
cmp
movs
je
mov
mov
in
repz
dec
lods
jmp
push
movs
ins
xor
sbb
movs
popa
and
mov
cmps
sti
xchg
pop
mov
xchg
fdivp
push
cmp
(bad)
cld
mov
cmc
movs
push
cmc
jnp
adc
push
fdiv
cmc
push
clc
xor
imul
stos
retf
and
xchg
aas
mov
jl
jno
mov
adc
sbb
ja
mov
out
fisubr
xchg
mov
xor
test
(bad)
pop
out
movs
div
pop
test
retf
lds
mov
sbb
or
cld
(bad)
adc
xor
cs
mov
fild
stc
cmp
aam
adc
and
pop
gs
cmp
ja
jb
mov
sub
dec
inc
popf
mov
sub
and
fisttp
pushf
gs
mov
dec
test
mov
jmp
(bad)
hlt
das
mul
mov
les
data16
mov
mov
test
mov
jmp
cs
imul
mov
dec
pop
lahf
push
and
mov
scas
cmp
sbb
jmp
enter
push
xor
aaa
(bad)
sub
jp
(bad)
push
or
test
xchg
fild
sub
mov
inc
adc
push
repnz
out
xor
adc
or
mov
call
inc
xchg
dec
into
adc
ss
fist
jo
cmp
stos
xor
mov
addr16
inc
mov
jae
fs
(bad)
pop
gs
je
cwde
add
mov
fnsave
push
mov
dec
fcomp
mov
sahf
sti
ja
jge
dec
xchg
jnp
(bad)
dec
sub
jo
xchg
jno
(bad)
mov
xchg
sahf
stos
ficomp
rcl
mov
out
std
dec
mov
repz
das
cli
call
sbb
lods
pop
or
stos
mov
mov
(bad)
(bad)
jnp
in
ins
inc
pop
sub
pop
sub
ss
inc
lahf
xor
imul
sbb
xchg
pop
xor
dec
in
in
xchg
push
mov
jbe
fimul
mov
pop
xchg
les
sub
fadd
stos
leave
adc
mov
cwde
cld
repz
mov
inc
icebp
push
cmp
sbb
dec
jbe
add
bound
inc
push
push
pushf
(bad)
lods
mov
out
nop
and
pop
mov
sub
outs
jno
ins
and
sub
loope
sbb
add
jbe
mov
inc
xchg
stos
cmps
addr16
jns
cmc
fsub
(bad)
lods
shl
ins
pop
mov
test
aaa
xchg
sti
repz
ror
add
stc
sub
cs
cld
lods
dec
lock
jae
dec
xchg
sbb
jp
mov
mov
out
retf
lock
push
je
mov
imul
ds
xor
inc
fisubr
mov
je
aad
or
inc
cld
int
daa
test
gs
push
stos
jg
mov
inc
cwde
les
dec
test
test
dec
mov
test
xor
jle
cmc
add
fdiv
cmp
in
std
je
add
dec
sahf
pop
fs
mov
or
mov
jmp
mov
jae
pop
xor
pop
gs
jl
sahf
sub
test
sbb
mov
js
test
add
ins
push
lea
mov
xchg
arpl
mov
test
clc
sbb
fldcw
mov
cs
jecxz
aad
fs
mov
push
es
data16
adc
bound
or
mov
out
fsubr
inc
push
shl
popa
sub
out
(bad)
and
imul
xor
lahf
pop
and
dec
fstp
xchg
dec
xchg
clc
jb
gs
mov
dec
xchg
std
mov
loopne
addr16
retf
xchg
and
dec
sub
push
cdq
mov
fcom
fwait
movs
fs
cld
adc
repnz
retf
cmp
push
ins
push
pushf
dec
pop
dec
lahf
retf
add
sub
call
int
sbb
sub
xor
inc
test
movs
pop
jb
mov
js
fcom
loopne
jnp
pushf
sub
mov
pop
xchg
enter
cld
pop
or
fist
xchg
lds
mov
mov
adc
repz
sbb
fst
cs
jmp
jo
inc
sbb
push
add
mov
sbb
ja
neg
(bad)
pop
dec
pop
xor
cmp
and
popf
adc
jp
sbb
pop
and
aaa
mov
sbb
dec
call
(bad)
call
rol
xchg
mov
ja
mov
sbb
ret
adc
push
cmps
xor
enter
cli
data16
jne
push
inc
popa
mov
jmp
mov
push
dec
push
inc
int
aaa
fs
jg
pop
push
ror
xor
cmp
sahf
xchg
loop
xchg
push
mov
push
and
push
retf
push
les
and
jmp
xor
stos
loope
mov
stos
push
xor
test
mov
pop
jecxz
int
cs
mov
push
pusha
bound
ss
mov
jmp
push
push
inc
adc
pop
sbb
pop
lods
sub
jg
shl
movs
sub
mov
inc
ret
aaa
stos
inc
test
fs
les
and
jmp
stos
out
mov
ja
mov
push
aaa
xchg
not
pushf
lea
push
iret
sbb
dec
repz
fild
xor
inc
call
jae
movs
retf
sub
and
clc
jbe
dec
pop
enter
add
aas
xlat
imul
xor
mov
aas
and
xchg
sbb
fs
inc
lea
mov
xchg
jo
nop
dec
and
fisttp
lods
stos
shr
(bad)
dec
inc
mov
add
sti
push
fwait
mov
sbb
fdivr
in
and
and
pop
outs
scas
dec
cs
push
sub
mov
fbstp
jp
mov
or
mov
ins
pop
add
cmp
pop
mov
inc
test
pusha
in
repz
inc
lods
mul
inc
push
mov
push
mov
mov
(bad)
cmps
mov
bnd
mov
jl
mov
popf
cs
cli
cdq
test
pop
sub
ss
test
push
pusha
cmp
stos
jae
jp
retf
es
add
and
xor
ja
sbb
jae
lods
push
cmp
mov
ret
hlt
xchg
daa
mov
je
pushf
ss
mov
mov
pop
not
test
int
mov
mov
bsf
test
(bad)
ins
lods
stos
pop
loopne
iret
ds
fcom
int3
(bad)
out
aaa
jo
dec
fwait
sub
pusha
lea
jp
xchg
rcl
clc
cli
and
xor
es
push
mov
test
cmp
cmp
movs
movs
push
push
pop
dec
xchg
mov
pop
push
(bad)
cmps
(bad)
inc
add
dec
out
jns
retf
ins
lea
(bad)
lods
shl
mov
hlt
push
and
fiadd
fbstp
fidivr
cs
stc
iret
jl
and
sub
aas
dec
jl
data16
mov
mov
sub
cmp
std
jbe
jns
aad
or
jl
inc
iret
adc
jae
fisttp
scas
cmp
mov
pop
jecxz
mov
jecxz
sbb
lds
out
mov
(bad)
jmp
adc
xlat
xchg
add
pusha
mov
mov
or
add
rcl
mov
ror
mov
(bad)
xor
icebp
icebp
inc
retf
aaa
pusha
pop
pop
test
dec
daa
test
cmp
mov
xchg
mov
sbb
addr16
jno
iret
dec
push
add
pop
xchg
sbb
test
inc
aam
pop
xchg
shr
ret
icebp
xchg
adc
jae
stos
pop
(bad)
(bad)
mov
jne
std
retf
xchg
pop
fld
scas
mov
fidiv
lahf
scas
cmp
mov
out
cwde
imul
sar
mov
push
dec
xchg
pop
outs
push
stc
push
or
mov
xchg
dec
cmp
cmp
push
jae
iret
add
add
daa
mov
mov
gs
sahf
jg
lahf
add
aad
xor
push
dec
(bad)
mov
into
loopne
fdivr
mov
cmc
fwait
(bad)
dec
xchg
xlat
xchg
fs
inc
and
aad
pop
lds
xchg
mov
je
fwait
xchg
test
stc
pop
ins
fwait
stos
jcxz
out
or
cli
retf
cld
and
push
dec
stos
das
dec
push
test
jp
mov
xchg
and
retf
stc
or
clc
jbe
pop
xor
xor
mov
iret
imul
outs
sub
mov
cmp
dec
(bad)
add
popa
daa
mov
fdiv
aas
xchg
int3
cdq
push
xacquire
cli
mov
xchg
lahf
stos
shl
xchg
mov
adc
stc
lock
aad
push
inc
jecxz
fs
jae
push
pop
sbb
(bad)
jo
sbb
dec
fstp
outs
pop
stos
inc
cs
xchg
mov
dec
int3
int3
jg
cld
jbe
je
cmps
cmp
xor
sahf
sbb
adc
outs
push
mov
push
cwde
(bad)
mov
and
mov
ficom
inc
pop
inc
mov
into
lock
xchg
ret
sahf
adc
nop
jle
sti
cmc
std
adc
in
mov
inc
mov
call
jle
sub
sub
(bad)
hlt
inc
rcr
pusha
and
xor
push
movs
mov
in
pop
test
jp
repz
jae
pop
mov
add
pop
dec
test
xor
and
add
fcom
repnz
push
jl
sub
mov
dec
xchg
mov
ins
cmc
clc
push
daa
(bad)
sti
mov
leave
imul
stos
ins
add
xchg
rol
mov
cld
and
out
inc
into
xor
cmp
lea
or
xchg
and
cli
xchg
sub
call
gs
dec
cmp
sbb
inc
adc
inc
popf
test
xor
jl
stc
test
cwde
inc
add
popf
pop
jecxz
lds
les
or
mov
cli
mov
add
in
test
stc
hlt
in
add
ret
sub
push
into
ss
or
jmp
pusha
push
inc
mov
inc
xchg
inc
push
pop
test
int3
arpl
neg
mov
add
cmp
xor
jae
and
push
or
mov
xchg
adc
outs
out
icebp
and
sti
inc
shr
pop
stos
pop
popf
scas
lock
add
inc
push
cmc
shl
(bad)
pushf
les
lods
imul
xchg
cmps
and
jmp
mov
dec
pop
or
in
inc
in
and
sbb
fbstp
jns
movs
push
int
sub
retf
jbe
rcr
gs
and
pushf
cmp
pop
mov
pop
call
(bad)
mov
sbb
jle
mov
inc
xchg
les
sbb
cmps
mov
mov
add
adc
pop
addr16
mov
cmp
ds
stc
jecxz
nop
sbb
pop
sbb
mov
sub
stc
cmp
xor
dec
sub
adc
imul
arpl
and
clc
mov
test
jnp
lea
shl
sahf
les
psubw
test
out
jl
popf
cmps
ret
sbb
inc
dec
xchg
xchg
xchg
fsub
dec
inc
mov
adc
inc
jmp
jnp
test
popa
pop
adc
xchg
mov
int3
imul
sub
sbb
xor
dec
pop
adc
inc
dec
sahf
outs
sbb
mov
(bad)
stc
cdq
ds
pop
mov
push
push
mov
ins
cdq
les
or
ret
pop
mov
mov
xchg
sbb
retf
ins
cdq
(bad)
pop
into
ds
test
push
call
stos
sbb
sahf
inc
sub
out
mov
int3
inc
icebp
cli
add
inc
into
pop
xor
push
iret
add
push
movs
xor
mov
pop
jmp
lock
jb
movs
outs
(bad)
mov
lahf
dec
loopne
jl
retf
enter
push
cli
mov
fs
test
fs
in
fmul
cdq
xchg
pop
sar
cs
(bad)
hlt
fidivr
jg
bound
push
cdq
retf
fild
bnd
xor
pop
cmp
push
jae
pop
and
cwde
xor
push
inc
popf
les
mov
pop
test
dec
xor
and
shr
mov
or
mov
xchg
cli
inc
pop
mov
icebp
cmp
(bad)
in
pop
(bad)
es
lods
sbb
ds
mov
xchg
adc
mov
lahf
cli
or
retf
pop
or
(bad)
aas
popf
push
in
pop
cmps
push
and
xchg
xor
cli
loop
xchg
jecxz
cld
inc
pop
push
stos
pop
repz
dec
xchg
loope
fadd
cli
aad
push
lods
div
xchg
mov
test
aaa
stc
xchg
mov
inc
in
scas
push
cs
call
fwait
cmp
xor
push
mov
frstor
clc
jns
clc
jbe
jge
mov
sbb
and
mov
ins
lea
pop
(bad)
scas
pushf
and
jno
sahf
dec
mul
and
jnp
mov
add
inc
test
les
test
cmc
xchg
(bad)
imul
mov
sub
sub
lock
inc
push
push
popa
fimul
bound
mov
pushf
retf
dec
inc
call
(bad)
jo
and
adc
arpl
add
push
xor
or
push
sti
jmp
adc
jbe
mov
dec
add
je
leave
shl
mov
or
push
xor
xlat
xchg
les
mov
xor
xor
and
enter
jb
dec
ficomp
arpl
mov
cmps
bound
pop
adc
cmp
push
sbb
pop
call
sbb
mov
aaa
pop
pop
test
adc
gs
stos
outs
clc
xchg
xlat
pop
jecxz
in
shr
add
xlat
aad
add
mov
push
mov
fadd
mov
into
xor
sbb
repnz
sub
cmp
cmp
sub
pusha
pop
jp
mov
mov
rol
sbb
xchg
jp
inc
aas
mov
xor
jno
mov
iret
push
aad
push
mov
mov
das
cmp
outs
out
test
repnz
addr16
and
mov
dec
mov
xchg
jns
stc
out
sbb
dec
test
push
adc
dec
dec
mov
dec
lock
mov
jle
cmp
or
adc
loopne
pop
push
cwde
test
pop
shr
mov
jns
pop
sub
jl
xor
adc
imul
nop
aas
push
popf
add
icebp
add
fldcw
and
jnp
mov
xchg
in
and
mov
sti
cmps
cwde
shl
sub
jmp
pop
dec
mov
sbb
das
sub
pop
out
jo
inc
stos
sbb
pop
mov
dec
lea
xlat
inc
call
ja
lds
sbb
sahf
pop
mov
mov
pop
mov
push
cmp
add
pop
jbe
stos
pop
dec
or
movs
add
test
add
xlat
sbb
xchg
add
jmp
frstor
call
int3
rcr
es
sbb
shl
jns
sti
push
and
xchg
lds
in
fistp
xchg
jmp
cmps
aaa
sbb
or
pop
call
inc
cmp
or
das
ins
out
shr
leave
jl
and
dec
out
sub
sti
cld
cs
mov
cdq
ret
xor
test
cld
sti
jae
mov
xor
jbe
adc
pop
or
data16
xor
sbb
mov
mov
jmp
pusha
inc
fld
ja
sub
push
int3
sbb
pop
adc
mov
and
shl
arpl
test
cmp
je
mov
add
neg
mov
fs
xchg
js
icebp
cmc
scas
shl
inc
push
pop
fidivr
or
cld
ficom
add
cmp
adc
push
lahf
imul
push
out
test
xor
aas
xor
and
shr
mov
rcl
aam
and
sbb
stos
or
sti
pop
(bad)
pop
pop
jb
sub
shl
daa
into
retf
stos
adc
jnp
pushf
mov
push
nop
test
or
mov
cmp
sbb
jo
dec
stos
pop
fs
cli
data16
lahf
mov
in
in
mov
movs
int
dec
js
mov
js
pop
xchg
and
sbb
jne
lahf
add
movs
mov
pop
and
rcl
ins
jbe
movs
push
sahf
sbb
xchg
je
mul
sahf
lods
rcr
sbb
xor
loopne
out
in
popf
es
jmp
pop
sbb
cld
fist
adc
inc
mov
pusha
sub
mov
int
test
sbb
or
sub
scas
pop
ss
push
mov
jl
stos
xchg
adc
retf
jno
inc
jp
mov
popa
jmp
mov
ss
std
sbb
dec
mov
mov
lea
xor
aad
(bad)
ins
lods
lods
push
out
cmps
or
repnz
lods
push
popa
cwde
push
pop
push
call
sar
cs
sbb
dec
(bad)
shl
pop
xor
pop
sbb
imul
dec
mov
retf
mov
(bad)
adc
xor
iret
mov
pushf
adc
fst
test
icebp
and
mov
in
imul
ja
test
clc
retf
outs
xchg
or
repz
ss
repz
inc
jne
mov
push
push
push
mov
mov
dec
pushf
cli
addr16
jno
inc
ds
xor
adc
cwde
cmp
adc
imul
ja
mov
(bad)
cmp
push
push
mov
jb
stos
jno
sahf
loop
add
fidivr
mov
sti
outs
mov
push
jno
test
out
cmc
jecxz
inc
jmp
push
inc
adc
clc
aad
jecxz
jge
cmp
cmp
lods
jb
jnp
mov
xchg
xor
stc
or
xor
and
daa
iret
add
adc
jge
scas
or
popf
movs
lahf
sbb
sub
fist
cli
adc
inc
popf
pop
aad
mov
fucom
adc
movs
add
icebp
fadd
xchg
aas
scas
pop
je
mov
sbb
clc
fcmovb
inc
jle
mov
push
cmc
sbb
sbb
jbe
xor
aas
add
and
push
rol
or
and
xor
or
fsubr
mov
addr16
mov
aam
mov
xchg
xchg
push
loopne
pop
push
mov
popa
xchg
(bad)
xchg
repnz
call
pop
xchg
push
movsx
rcr
out
call
sub
jmp
dec
mov
jl
cmp
lea
bnd
mov
mov
xor
sbb
xchg
das
lods
and
push
push
sahf
jg
scas
sbb
mov
lods
sbb
test
ror
mov
mov
mov
in
nop
push
ss
fild
test
push
mov
out
lea
pop
(bad)
cwde
movs
leave
fsub
out
test
lea
rcr
cs
mov
pop
clc
xor
mov
dec
push
scas
inc
or
cwde
retf
xchg
xchg
dec
and
jnp
icebp
or
jbe
ret
pop
cs
bound
add
mov
movs
cmp
pop
pusha
jmp
jo
dec
pop
inc
mov
push
in
cmps
adc
mov
hlt
sbb
or
add
mov
repnz
jmp
ins
xchg
mov
push
inc
dec
jmp
mov
sar
js
mov
push
xchg
push
(bad)
xchg
inc
sbb
pop
jmp
bound
jecxz
sbb
sub
xor
sbb
pop
xor
sbb
stos
movs
(bad)
sbb
and
(bad)
mov
sbb
push
mov
in
(bad)
inc
mov
cld
add
sti
jmp
out
sbb
mov
ror
js
aam
lea
ss
inc
inc
jl
dec
pushf
push
add
mov
iret
cmp
int3
cs
call
push
adc
sbb
and
fs
stos
sub
mov
int3
icebp
mov
hlt
push
icebp
mov
mov
test
aaa
xchg
outs
xchg
xchg
lods
les
cmps
push
jg
stos
adc
rol
outs
xchg
xchg
xor
lock
adc
jbe
push
or
mov
fild
cli
add
and
and
sub
xor
dec
inc
fnsave
retf
jmp
test
xlat
icebp
mov
sar
or
ins
jbe
mov
pop
sti
(bad)
pushf
retfw
xchg
pop
xor
cmc
std
and
inc
xchg
lods
cmps
mov
call
aaa
(bad)
stc
xchg
in
retf
jns
fwait
test
xor
iret
jbe
xor
aaa
sbb
xchg
pop
icebp
xchg
test
repz
or
fnstcw
cmp
xor
aas
add
ins
add
mov
xchg
into
mov
jmp
mov
mov
xor
jnp
test
push
jb
(bad)
hlt
sbb
(bad)
xor
cmc
(bad)
dec
call
shl
jnp
mov
sbb
popa
call
inc
into
lea
cmps
lea
outs
add
int
sub
push
adc
sbb
js
mov
(bad)
sbb
jae
fist
loope
add
xchg
repz
jecxz
cmps
push
in
jno
std
not
scas
ret
popa
pop
mov
jmp
dec
inc
mov
jno
dec
stc
sub
stc
scas
push
jmp
pop
outs
mov
ins
mov
mov
imul
daa
test
call
sbb
sbb
mov
push
pop
xchg
mov
hlt
sti
mov
cli
push
cmc
rol
cmc
mov
sub
mov
add
in
loope
mov
aad
out
lock
ror
sar
xor
cmp
mov
(bad)
mov
xor
(bad)
jnp
fdiv
mov
pop
mov
and
aas
rcl
js
pop
add
sbb
cmp
iret
mov
mov
pop
jg
outs
xor
je
call
loopne
add
outs
mov
lea
stc
repnz
mov
ds
mov
push
pop
stos
pop
ins
push
sti
cs
pop
icebp
xchg
xchg
jmp
jb
int
sbb
and
das
mov
fisub
cmp
jmp
test
jecxz
xchg
inc
leave
(bad)
(bad)
in
pop
dec
stos
pop
call
aad
pusha
ficomp
add
sbb
test
push
mov
mov
cmp
dec
xchg
mov
pop
fimul
not
push
and
pop
bound
cs
pop
call
pop
(bad)
fsub
mov
jb
in
push
imul
and
pusha
jne
push
cmp
xchg
ucomiss
stc
sar
pop
shl
jl
inc
dec
inc
lea
mov
addr16
fs
push
and
sti
add
fadd
sub
imul
sbb
fnsave
pusha
mov
fidivr
cs
int
push
(bad)
ds
or
js
push
mov
sbb
cli
or
xor
push
add
xor
add
jo
mov
jae
xlat
test
xor
ins
jmp
mov
les
fiadd
mov
dec
xchg
retf
jmp
ror
mov
xchg
sahf
scas
push
add
fimul
lods
(bad)
sub
pop
test
and
dec
test
je
lods
inc
pop
cmc
fwait
int
xor
retf
jbe
lea
in
jbe
jno
cmc
ds
and
call
and
cmps
mov
in
fsub
cld
jg
outs
lea
mov
push
call
(bad)
xchg
lods
sar
pop
ja
sahf
test
adc
pushf
movs
retf
ins
mov
xor
jmp
fist
xor
jg
adc
xchg
movs
mov
sbb
rcr
inc
mov
or
and
and
pop
pusha
(bad)
jnp
mov
addr16
and
cmps
mov
cli
dec
pop
lds
cld
mov
xchg
push
hlt
(bad)
stos
add
(bad)
sbb
adc
rol
mov
pop
call
cmp
sti
mov
push
inc
mov
pusha
or
mov
mov
push
enter
jo
cld
jo
gs
and
push
add
sub
dec
cmp
mov
loopne
popf
adc
je
mov
in
hlt
cmp
leave
movs
jno
fcmovnbe
cmp
ins
cdq
lea
push
pushf
mov
adc
loopne
adc
cmp
xchg
push
int
add
inc
xchg
inc
jbe
cmp
data16
test
jnp
test
push
(bad)
cli
cmps
(bad)
push
inc
jae
ficom
sbb
test
arpl
push
repz
les
pusha
les
push
scas
push
cmps
test
xchg
inc
cs
jmp
cmc
aas
mov
and
inc
xchg
lahf
aaa
retf
sub
stc
sar
jbe
cmp
jno
or
push
popf
jnp
add
sbb
pop
stc
or
test
inc
xor
das
mov
stos
jp
fisttp
movs
xor
(bad)
jno
enter
sti
pop
fdivr
push
mov
addr16
mov
in
jno
std
(bad)
icebp
adc
ins
scas
cli
mov
jb
test
xor
dec
imul
jmp
push
jg
xor
pusha
sti
push
test
pop
and
(bad)
frstor
jno
enter
outs
sbb
jp
cmps
jae
movs
cmp
xchg
xchg
or
dec
hlt
fld
clc
sbb
sub
cmc
jge
out
pop
jmp
xor
xlat
aaa
mov
and
repnz
lea
push
jmp
sub
cld
(bad)
sti
jbe
cmp
xor
inc
sub
mov
out
in
sbb
inc
jmp
pop
popf
sub
jl
stos
pop
xor
sub
mov
hlt
mov
mov
push
aam
add
and
xlat
movs
push
leave
stos
push
cmp
sti
mov
jmp
xchg
(bad)
scas
jmp
mov
loopne
test
(bad)
cmp
jp
es
inc
out
cmp
sbb
clc
or
xchg
xchg
scas
push
inc
mov
fld1
jp
sti
push
push
or
mov
sbb
jl
mov
jb
test
ret
xlat
xchg
sbb
pop
popa
sub
push
mov
push
mov
and
or
jecxz
add
jmp
fwait
add
lock
ins
mov
jmp
jmp
jae
dec
stos
pop
gs
loopne
pop
ins
out
mov
inc
in
rol
push
add
pop
sbb
pop
mov
into
jns
xchg
mov
addr16
mov
(bad)
call
sti
adc
pop
lds
mov
ds
shl
jecxz
push
and
test
mov
inc
mov
sti
cmc
mov
out
sbb
shr
and
fdivr
stos
pop
retf
dec
push
pusha
xor
inc
cs
xor
stc
je
cli
and
lock
popa
push
cmp
push
sub
scas
sub
bswap
sbb
xchg
mov
call
or
les
test
lea
mov
push
xchg
mov
pop
adc
xchg
pop
lods
mov
ins
arpl
cli
fild
cwde
test
es
dec
mov
stos
je
and
adc
pop
push
lahf
xchg
mov
inc
fild
std
adc
aas
cmps
aas
adc
arpl
push
(bad)
imul
lahf
xchg
mov
xchg
pop
shl
addr16
dec
inc
push
popf
pop
jecxz
aam
out
sbb
fdivr
jnp
adc
adc
mov
pop
aam
cmp
fbld
int
push
dec
jecxz
repz
cs
inc
mov
push
mov
pusha
std
fisubr
ret
icebp
gs
adc
xor
pop
mov
mov
outs
jmp
std
or
cmp
cmps
sbb
ret
jo
pop
push
jg
push
cdq
mov
mov
es
sbb
ins
fwait
lahf
lods
loope
fdiv
xchg
leave
lods
push
xor
test
lods
aam
jecxz
aad
cs
clc
cld
into
push
into
xor
dec
stos
jno
ins
in
inc
push
call
add
addr16
fcom
push
inc
pop
aas
stos
add
(bad)
sbb
popf
rol
out
xchg
sbb
ret
jb
arpl
lods
pop
(bad)
fdiv
and
(bad)
in
in
jno
stc
fsubr
mov
jl
mov
loopne
cmps
mov
test
pop
clc
ds
dec
inc
call
test
pop
jo
pop
add
les
ins
(bad)
rcr
(bad)
std
dec
inc
jnp
hlt
pop
adc
and
das
mov
test
add
movs
xor
sbb
xchg
push
mov
jbe
jle
jge
pop
loop
sar
(bad)
mov
and
cli
mov
mov
jae
mov
cmc
jmp
out
outs
fwait
stos
push
xor
push
loopne
arpl
outs
mov
inc
sub
mov
or
pusha
int3
fisubr
and
sbb
or
das
int
mov
xchg
ja
mov
(bad)
xor
ins
faddp
xchg
mov
jae
mov
dec
call
pushf
jno
std
fcom
call
mov
test
pop
lock
cs
repnz
push
dec
scas
xor
test
or
test
lods
mov
(bad)
call
jae
inc
hlt
push
or
sbb
jnp
mov
pop
mov
pop
jmp
xchg
mov
jns
stos
stos
jne
in
cmp
rol
mov
outs
js
fwait
stos
push
or
repnz
int
cmp
cmc
ret
xor
dec
ficom
sub
fsubr
std
inc
lds
jne
push
mov
or
mov
mov
cli
div
clc
add
daa
mov
pop
mov
dec
mov
inc
cwde
mov
adc
(bad)
out
fist
imul
push
lods
jno
(bad)
mov
nop
jae
(bad)
cli
or
sahf
call
mov
mov
xor
sti
mov
mov
jg
cmp
fld
push
cmp
sub
pop
jp
mov
mov
pop
fist
nop
pop
sub
ins
jb
int
adc
or
arpl
jbe
xchg
sub
movs
cmps
syscall
and
scas
xchg
aaa
mov
jb
imul
mov
test
pop
(bad)
rol
popf
cmps
sar
sbb
out
xchg
sbb
stc
lock
div
out
mov
xor
dec
fst
push
jle
les
jge
sahf
cs
outs
test
push
cmps
inc
out
nop
addr16
mov
xor
xor
je
sbb
add
jnp
test
jne
cmps
xchg
sub
push
ins
leave
fdiv
bnd
push
cmps
push
fbstp
xchg
jno
mov
hlt
jbe
pop
icebp
mov
jnp
xchg
std
clc
cld
not
xor
push
xchg
xchg
inc
sbb
inc
(bad)
pop
jg
popf
pop
imul
xchg
aas
fcomi
pop
jae
xor
inc
adc
or
(bad)
pop
xor
outs
mov
movs
adc
es
std
(bad)
aaa
mov
pop
inc
mov
mov
dec
test
mov
push
std
rol
mov
hlt
pop
rcl
call
in
rol
jle
jecxz
jno
js
or
cli
lds
dec
mov
adc
push
sar
xchg
cli
or
in
add
rcr
push
ja
scas
pop
retf
add
inc
dec
mov
data16
mov
aaa
das
inc
(bad)
retf
mov
leave
sti
inc
mov
mov
push
std
movs
dec
xchg
mov
push
(bad)
stos
xchg
sub
js
scas
cmps
in
xor
pop
xchg
pushf
cmps
mov
call
adc
fistp
jbe
cdq
or
inc
or
sub
fs
xchg
xor
and
inc
adc
bound
add
aad
pop
sahf
mov
ins
(bad)
rol
rol
mov
(bad)
mov
xchg
push
in
or
(bad)
jmp
xor
pushf
scas
push
rcr
dec
pushf
mov
jmp
inc
mov
adc
cmp
sti
fistp
add
daa
push
sub
sahf
inc
es
pop
and
das
mov
cmp
add
jne
xor
cmp
outs
sub
cmp
aaa
cmp
sahf
adc
gs
sub
repz
xchg
js
fcom
(bad)
push
enter
fucomp
dec
test
ja
xchg
sbb
movs
xor
or
nop
stc
rcl
xor
or
mov
test
ret
adc
sti
jecxz
(bad)
adc
and
pop
fs
push
add
jo
mov
push
mov
cmp
cmps
cdq
pop
mov
sbb
pop
test
add
clc
enter
inc
xchg
pop
popa
mov
test
call
push
cmc
push
in
sub
cld
mov
and
sbb
mov
popf
mov
cmp
dec
mov
inc
fs
xor
add
sbb
xor
adc
aas
stos
inc
fcom
mov
add
and
xor
sbb
popf
jle
cwde
fistp
xchg
addr16
xchg
push
sub
lds
xchg
add
iret
loopne
mov
scas
outs
(bad)
dec
xlat
or
dec
(bad)
jecxz
call
mov
dec
es
pop
fwait
pushf
push
pop
fstp
(bad)
adc
adc
add
je
jae
mov
or
add
(bad)
cmp
push
mov
addr16
dec
sub
jno
xchg
jae
rcl
mov
movs
(bad)
sar
lahf
mov
test
jecxz
ins
mov
sbb
cmp
rcr
imul
cwde
adc
push
mov
jb
mov
mov
ret
lea
mov
xor
xor
dec
push
arpl
pop
jbe
or
fnstsw
outs
popf
xchg
(bad)
inc
fwait
sti
push
fcomp
mov
out
lock
xchg
scas
movs
sbb
(bad)
xor
pop
movs
cli
stos
sar
pop
je
sahf
xchg
pusha
aaa
icebp
jecxz
fdiv
dec
pop
cwde
scas
dec
hlt
pop
into
cmp
sub
xchg
cs
sub
sbb
inc
or
pop
test
xor
dec
call
sub
dec
ins
adc
cmp
sbb
fist
repnz
push
push
lods
push
rcr
je
xchg
js
(bad)
fisubr
fwait
mov
das
lods
dec
push
pushf
enter
mov
xchg
fadd
addr16
clc
aaa
cs
mov
gs
dec
sbb
fwait
aam
inc
lods
push
xchg
cli
or
xor
push
add
pop
ins
adc
sbb
stos
mov
dec
stc
shl
aas
mov
jle
pop
sbb
fist
(bad)
mov
xchg
pop
rcl
mov
out
ins
or
sti
fsubrp
xor
mov
ins
icebp
test
pop
fidivr
cmp
stc
test
(bad)
adc
js
push
imul
(bad)
retf
push
fistp
cli
or
fild
addr16
int
sbb
sub
scas
jo
movs
cmp
(bad)
cmp
mov
daa
mov
jno
imul
pop
loope
mul
movs
dec
ret
and
(bad)
mov
loope
or
sti
fsubrp
popa
cmp
jmp
pop
jmp
inc
aad
test
test
sbb
(bad)
xor
mov
cmp
mov
loopne
add
inc
fisttp
sbb
pop
loop
mov
iret
push
fimul
xor
jne
push
dec
sti
jmp
add
outs
dec
test
mov
jmp
and
test
idiv
movs
jg
mov
(bad)
mov
idiv
clc
jb
cmp
or
sbb
pop
xor
inc
pop
popa
out
mov
dec
ds
pushf
cld
or
or
aas
sub
xor
aas
mov
mov
test
test
(bad)
dec
(bad)
fstp
popa
pop
es
sub
mov
test
daa
repnz
(bad)
sahf
sar
jp
mov
adc
loope
repz
inc
hlt
jno
xor
sub
xchg
mov
nop
xor
cmp
jno
cmp
cmp
outs
mov
int3
pop
xchg
rcl
movs
lock
inc
add
int
sbb
xor
push
sub
adc
adc
cli
mov
icebp
imul
sub
xchg
les
push
in
in
add
sbb
cwde
jg
xchg
enter
out
clc
test
es
mov
inc
loope
(bad)
cmp
fidiv
jae
dec
test
outs
cmp
fst
aam
or
sbb
push
ja
hlt
and
gs
cmp
sub
stos
jnp
sar
add
adc
fs
inc
xlat
pop
in
sbb
test
mov
cmp
nop
add
cli
mov
mov
lahf
mov
and
pusha
xchg
add
lock
push
rcl
leave
inc
inc
push
jbe
fild
cmp
mov
hlt
pop
in
jmp
cmp
xor
das
mov
(bad)
jnp
test
adc
movs
(bad)
cmp
cmp
in
mov
vscalefss
loop
pop
sub
repnz
mov
xchg
adc
sahf
jl
fcmovnu
mov
mov
outs
cdq
stos
test
call
pop
jmp
cmp
in
rcr
sbb
arpl
sbb
xchg
(bad)
nop
ds
inc
xchg
stc
jnp
(bad)
pcmpgtb
int
sbb
inc
mov
ror
add
test
out
xchg
adc
sbb
mov
mov
xchg
sbb
mov
xchg
add
ins
test
inc
jo
mov
push
aaa
cld
test
dec
ficom
sub
cli
retf
fist
and
sbb
inc
jle
retf
stos
mov
fdivr
or
push
out
sbb
pop
mov
fcom
stos
cmp
fdivr
add
daa
ins
hlt
repz
inc
xchg
test
pop
pop
cmps
pop
fbstp
mov
add
(bad)
hlt
sub
dec
mov
test
aas
mov
xchg
push
xor
inc
pop
mov
fs
iret
dec
cs
fcomip
std
ds
pop
push
or
test
inc
cmp
mov
clc
std
push
fwait
sti
jbe
pop
xor
cmp
xchg
aas
mov
fistp
adc
xor
rcr
(bad)
inc
mov
jb
push
ret
cmp
mov
(bad)
mov
mul
mov
xor
iret
lock
ins
lahf
scas
pop
aad
in
xor
sbb
in
(bad)
imul
push
dec
pop
loopne
pop
imul
loope
leave
loope
inc
jns
aam
xor
add
xchg
sub
jne
ins
pop
cmps
das
jg
mov
or
and
xlat
xchg
add
pop
and
pop
mov
xchg
outs
rcl
mov
lock
cmps
xchg
scas
or
outs
jne
mov
jl
cli
sub
lea
pop
into
ds
fsubr
retf
cmp
pop
inc
mov
inc
or
mov
iret
mov
(bad)
(bad)
jns
out
inc
popa
push
sbb
pop
sbb
pop
stos
pop
fistp
test
add
xchg
sub
enter
lock
bound
lea
ret
repz
xchg
enter
xchg
pop
(bad)
dec
mov
inc
add
mov
xchg
mov
clc
or
ds
cld
fsub
call
mov
push
inc
test
stos
mov
(bad)
push
(bad)
jns
fstp
sub
bound
push
mov
dec
xchg
mov
ins
out
iret
loopne
int
jp
arpl
mov
dec
mov
xchg
jl
xchg
add
icebp
rol
(bad)
mov
aas
sahf
outs
jo
mov
push
xor
repnz
repz
adc
outs
(bad)
and
hlt
jbe
and
inc
mov
inc
pop
pop
cmps
sbb
jmp
jae
add
sti
xor
jnp
add
dec
bound
jg
mov
sub
pop
pop
test
xor
pop
push
fldcw
jmp
loopne
xchg
mov
jge
mov
mov
mov
js
mov
sahf
fs
jecxz
fld
inc
cli
imul
out
lods
imul
stos
or
cmps
jbe
jne
xchg
xchg
lods
or
jmp
cmp
push
jge
jmp
das
test
retf
movs
dec
or
jno
and
(bad)
add
dec
push
fld
mov
pop
xchg
fbstp
cmp
mov
cdq
xchg
test
test
cli
or
test
jecxz
ficomp
pop
cs
aad
ret
push
cmp
and
mov
test
pop
fild
or
xor
and
jo
push
das
mov
lods
pop
inc
sahf
jbe
movs
cmp
bound
push
cmp
enter
shl
fs
pop
xchg
sub
xchg
mov
inc
out
xchg
jge
mov
lods
scas
enter
jo
popf
xchg
sbb
loop
dec
push
dec
fdiv
cs
cld
cmp
push
inc
mov
inc
and
xchg
mov
fsubr
cli
sbb
jmp
push
imul
idiv
mov
movs
sub
mov
dec
(bad)
repz
inc
into
stc
or
adc
mov
mov
dec
call
das
(bad)
pop
loopne
xchg
loope
ret
inc
inc
mov
cmc
repnz
stc
ror
mov
ds
or
in
jecxz
loope
push
pusha
xor
dec
and
ror
sub
ror
(bad)
ds
add
inc
fadd
push
pusha
add
cmp
js
aam
outs
mov
dec
ret
cmp
outs
ds
push
loop
cld
inc
test
or
shl
mov
popa
push
mov
popf
outs
pop
icebp
jecxz
in
xchg
movs
inc
retf
push
sar
and
xchg
xor
adc
push
test
add
mov
rol
adc
cmp
pop
gs
je
mov
mov
stos
jae
lods
cmp
or
jl
out
pop
mov
add
gs
dec
test
dec
xchg
enter
test
(bad)
mov
neg
in
sub
sar
xchg
mov
or
stc
aad
shl
jnp
lahf
push
aaa
push
sub
mov
(bad)
loope
(bad)
inc
bound
ficom
mov
dec
jbe
pop
sub
add
and
clc
mov
mov
and
push
loop
jmp
mov
loopne
imul
loopne
sub
jae
test
test
pusha
ins
mov
push
fidivr
cmp
sbb
cld
mov
fild
jo
dec
mov
gs
mov
mov
stos
das
push
stc
pop
icebp
jmp
movs
into
jbe
jne
mov
imul
scas
and
push
and
sbb
mov
aaa
dec
sahf
stc
test
jecxz
dec
push
(bad)
iret
(bad)
xor
xchg
inc
es
cmps
mov
ins
test
mov
test
xchg
hlt
pop
ja
aad
jmp
repnz
cmp
or
mov
pop
push
xchg
xchg
inc
out
add
(bad)
pop
jae
add
cmp
je
push
xor
sub
xchg
test
out
(bad)
adc
jmp
clc
jge
push
test
pusha
xchg
ret
sahf
push
into
xchg
jns
(bad)
sub
ja
div
pop
test
repnz
retf
ins
xchg
xchg
pop
retf
ds
mov
icebp
pop
fidiv
js
pop
mov
outs
cs
lahf
mov
fisttp
cli
add
pop
cld
pop
sbb
add
jnp
stos
pop
xor
sysenter
sub
out
daa
or
pushf
gs
mov
mov
popa
loopne
mov
shr
hlt
sub
pushf
mov
xor
pop
sbb
dec
cs
call
push
ja
stos
sbb
sub
out
stos
xchg
cs
fistp
fsub
loope
jb
sub
pop
jmp
mov
push
xchg
xchg
test
xchg
(bad)
(bad)
cmp
gs
movs
jge
mov
inc
test
mov
sbb
stos
mov
xchg
mov
jb
mov
add
fsubr
pop
jp
aad
out
cmc
sub
iret
push
retf
sub
ins
add
jbe
popa
pushf
retf
es
leave
ja
in
push
mov
xor
cmp
dec
or
pop
(bad)
pop
arpl
mov
dec
cmp
ins
xchg
jmp
ja
push
pop
sub
sahf
dec
xchg
les
sbb
rcl
mov
outs
mov
cli
jmp
fadd
push
and
pop
(bad)
ss
dec
stos
pop
outs
pop
mov
ins
cmps
mov
xchg
sub
pop
repnz
sti
jae
jns
sti
push
sbb
push
cmps
outs
pusha
test
xor
sbb
sahf
test
ins
inc
push
jl
iret
cdq
cmp
ret
pop
jae
mov
push
out
inc
add
enter
dec
xchg
lods
fwait
out
mov
jmp
inc
call
push
pop
mov
hlt
sub
xchg
iret
push
jmp
sbb
jp
mov
rol
std
aas
mov
adc
push
sub
sub
pop
std
bound
imul
or
mov
dec
loopne
xchg
dec
mov
inc
push
lds
lods
(bad)
xor
mov
pop
rcr
lods
push
hlt
pusha
test
test
jns
xchg
test
xor
jmp
cld
mov
lahf
inc
jecxz
stos
cmp
fadd
xor
mov
dec
ds
mov
retf
cmp
out
jmp
push
or
inc
ss
and
ficomp
lahf
adc
dec
push
call
out
fcom
imul
lock
xchg
fcom
or
shl
dec
xchg
icebp
sbb
lods
inc
loopne
fimul
ss
repnz
(bad)
call
mov
pop
cs
lahf
sub
ret
ret
and
add
pop
sbb
add
test
cmp
(bad)
sbb
and
stos
popf
add
push
popf
pop
jecxz
loope
test
nop
inc
xor
xchg
jl
mov
push
test
xchg
in
cdq
dec
push
movs
push
jecxz
xlat
or
fdivr
sub
ss
xchg
sbb
add
mov
or
outs
jmp
jb
data16
push
inc
push
add
sbb
jge
movs
or
xchg
pop
jecxz
test
lods
sti
jp
push
sub
ret
sar
out
xchg
cmp
outs
xchg
and
test
loope
retf
ins
mov
sbb
sub
(bad)
fild
xor
pop
lods
adc
push
xchg
ins
(bad)
mov
mov
out
cli
push
mov
outs
dec
dec
ss
gs
mov
sub
dec
js
mov
out
retf
xchg
and
gs
mov
push
mov
in
xchg
jae
out
lock
loopne
mov
sbb
sbb
in
in
loope
dec
ins
mov
adc
cmp
mul
or
pop
cmps
dec
or
mov
retf
aas
sub
mov
dec
inc
push
aaa
loope
sbb
sbb
pop
jae
and
xchg
mov
jae
into
mov
aam
jbe
mov
inc
adc
dec
enter
in
stos
jmp
lds
mov
pop
add
loop
std
sti
pop
jne
mov
push
cs
retf
in
xor
push
or
mov
cmp
clc
or
inc
leave
ss
and
nop
pop
push
cmps
sub
mov
dec
out
xchg
xor
ins
and
inc
lock
pop
xchg
shl
jmp
test
xchg
test
(bad)
dec
ins
stos
test
clc
jp
es
sub
in
stc
pop
(bad)
aas
jg
inc
xchg
or
push
pushf
sub
jno
movs
mov
dec
cs
fmul
bound
leave
and
js
sbb
pop
shl
jnp
(bad)
popf
xor
cwde
fldcw
jmp
xchg
pop
leave
repz
inc
cvtps2pi
ins
xchg
les
call
sbb
adc
adc
(bad)
dec
xchg
mov
pop
or
es
jle
stos
sbb
inc
mov
jnp
mov
mov
sub
pop
call
push
into
and
pop
add
cmp
sahf
jnp
mov
arpl
and
xlat
mov
mov
pusha
bound
inc
xchg
les
xor
rcl
fwait
pushf
in
mov
mov
stc
icebp
cmps
fcmovu
arpl
test
and
repz
stc
add
push
das
mov
jno
retf
and
cli
or
bnd
pop
xor
inc
sbb
sub
and
dec
outs
test
mov
sbb
push
xlat
xchg
inc
lahf
loop
loop
jne
stos
jle
mov
dec
push
cmps
fs
push
sub
fisub
mov
jb
movs
mov
test
rep
jne
adc
(bad)
or
cld
std
jb
xor
sbb
mov
cmps
mov
addr16
das
fwait
call
rol
cmp
pop
cli
jo
mov
ja
shr
dec
call
hlt
jne
pop
movs
pop
fbld
mov
or
in
or
inc
xchg
fwait
stos
loope
sub
mov
repnz
repnz
loop
outs
out
in
cmp
sahf
inc
imul
mov
dec
lahf
dec
daa
pop
(bad)
pop
pop
jmp
dec
mov
jbe
jb
sar
jo
cmp
add
dec
push
sahf
pop
xor
cmp
xchg
inc
sahf
mov
adc
(bad)
xchg
addr16
xchg
add
mov
mov
(bad)
mov
ja
mov
adc
stc
loopne
fincstp
dec
ins
mov
inc
not
adc
dec
aad
fcom
aaa
imul
mov
push
or
mov
mov
call
cmovb
sub
inc
add
sub
movs
push
or
(bad)
ins
xchg
(bad)
stos
es
jbe
pop
push
xchg
push
xchg
mov
fst
mov
in
xchg
addr16
mov
add
ror
jge
fadd
jnp
xor
add
rcr
daa
dec
mov
aaa
sbb
movs
lahf
mov
int3
jecxz
ret
shl
and
xor
jne
xor
or
jbe
or
or
jmp
push
jl
iret
test
xchg
(bad)
jb
sbb
push
mov
pop
xchg
int3
cwde
sbb
std
in
and
ja
inc
les
mov
xchg
fs
stc
fisttp
mov
ds
popf
xor
dec
sbb
outs
test
sbb
mov
mov
test
popa
sbb
xor
or
test
and
lods
(bad)
and
aaa
mov
jbe
pop
push
jge
sub
in
test
retf
xchg
jno
in
ficom
(bad)
fldcw
xchg
xchg
(bad)
enter
cwde
fwait
inc
call
in
fcomp
inc
daa
dec
fst
ins
push
mov
pop
jl
xchg
(bad)
mov
pop
fistp
add
jecxz
aas
jb
adc
jo
mov
jg
mov
push
xor
stc
in
mov
jle
mov
xor
sbb
lds
xchg
xchg
mov
adc
(bad)
dec
jg
cwde
push
cli
push
out
adc
push
rcr
fstp
imul
mov
inc
pop
jo
mov
or
setb
jns
jb
shl
pusha
je
jmp
stos
or
stos
test
add
ss
stc
stc
mov
cmc
inc
pop
sub
sahf
inc
adc
dec
leave
xchg
push
daa
mov
xchg
or
add
cmps
inc
jb
fwait
cmc
or
fcmovu
jo
jmp
jno
pop
out
cmp
shl
je
outs
mov
push
sbb
retf
and
shl
cmp
add
add
and
xor
mov
cli
fist
aam
fs
mov
inc
cdq
int3
sub
cmp
shl
xchg
fld
test
loop
fldpi
inc
pop
fwait
test
sub
cs
out
sub
sub
sub
mov
out
or
xor
xor
push
and
cdq
sbb
cmps
pop
cmps
dec
ja
movs
lods
cmp
not
loop
gs
test
dec
xchg
leave
xchg
outs
rol
test
aam
mov
jg
mov
xchg
cs
imul
mov
cmp
enter
call
scas
sbb
stos
inc
sub
ret
inc
cmp
sbb
rol
jge
or
adc
push
push
mov
pop
call
(bad)
xchg
ds
sbb
jns
pop
scas
outs
enter
pushf
cld
lahf
push
loop
push
sub
ret
mov
out
jg
popf
fnsave
xchg
or
mov
sub
lock
jo
dec
mov
jp
mov
test
dec
sti
rol
jl
into
and
sub
jnp
test
inc
scas
sub
mov
or
push
and
aam
inc
lods
shl
ins
jbe
fiadd
mov
dec
cwde
les
or
rol
in
lods
dec
ja
test
hlt
aad
dec
inc
(bad)
mov
xchg
dec
lods
adc
xor
add
jbe
mov
dec
push
lahf
imul
mov
cli
repz
add
adc
add
pop
fldenv
scas
sub
mov
sbb
push
push
out
aaa
stos
mov
ins
add
icebp
rol
shl
pop
add
movs
xchg
sbb
ins
or
ja
mov
js
xchg
pushf
mov
cwde
lahf
inc
in
in
sbb
fist
es
dec
stos
sub
mov
xchg
(bad)
pushf
sbb
fisttp
xchg
lock
pusha
pop
cmp
xor
jb
mov
xchg
pop
retf
inc
pusha
mov
cmps
and
xchg
cmp
stos
mov
mov
jge
test
retf
iret
lock
sub
inc
cmp
rol
rol
cmp
mov
daa
cmc
loopne
leave
idiv
mov
jns
push
sti
cmp
repnz
fist
add
cmp
les
jns
push
scas
pushf
dec
fistp
cli
add
pop
xor
jl
sub
cmps
jae
mov
(bad)
sbb
dec
jb
fdivr
(bad)
popa
jbe
shr
dec
mov
xchg
jg
imul
cmc
sbb
inc
mov
mov
dec
in
cmps
das
cmp
repnz
jmp
pop
fisubr
cs
cld
fistp
cmp
inc
(bad)
sbb
xchg
je
pop
pushf
movs
mov
cld
leave
sbb
sbb
or
push
aaa
mov
jnp
rcr
(bad)
ss
mov
cmp
std
mov
std
pop
jne
mov
(bad)
sar
xchg
mov
arpl
jmp
daa
hlt
shl
stos
mov
scas
jg
test
(bad)
cmp
lods
inc
jecxz
scas
cmp
mov
ret
xor
lods
pop
sbb
mov
jbe
mov
cwde
push
ds
mov
aaa
int
or
and
pop
mov
shr
mov
push
mov
mov
jecxz
xchg
and
ins
pop
inc
popf
pop
xchg
mov
xor
movs
add
mov
fisubr
mov
cli
inc
mov
int3
cmp
nop
mov
inc
lahf
cmp
add
sbb
movs
js
dec
movs
xchg
nop
mov
dec
arpl
int
push
sub
or
pop
call
(bad)
fdiv
sar
fimul
mov
jg
sar
std
fisttp
mov
in
test
pop
iret
loop
(bad)
cli
ins
jne
mov
aaa
push
sbb
int3
fstp
pop
pop
pop
dec
scas
pop
ins
push
stos
push
or
mov
fild
adc
inc
leave
sbb
push
jbe
mov
retf
or
add
movs
sbb
sub
pop
js
stc
mov
xchg
out
add
inc
jae
test
lock
dec
xor
xor
movs
movs
mov
push
mov
shl
sbb
mov
xor
fucomp
fist
or
push
dec
mov
inc
ds
mov
jmp
gs
and
mov
imul
jp
test
je
xchg
mov
cmp
inc
(bad)
sti
test
(bad)
xchg
pop
loopne
pop
pop
lahf
dec
ret
mov
ins
xchg
fdivr
or
mov
lods
mov
pop
pop
xchg
mov
out
rol
jns
scas
dec
loopne
fdivr
sbb
jmp
cmp
pop
mov
inc
inc
pop
icebp
movs
movs
stos
dec
inc
lods
jg
jmp
ins
pusha
pop
retf
inc
push
and
push
sahf
jle
dec
je
push
and
xor
xor
push
jge
scas
mov
aad
sbb
nop
push
xchg
xchg
inc
(bad)
mov
cmps
and
les
mov
cmc
repnz
clc
std
cmp
jecxz
ror
ds
fild
xor
dec
test
push
sahf
push
ss
lods
fwait
int
sbb
lea
mov
add
xor
add
fist
mov
add
aaa
ss
(bad)
dec
mov
pusha
inc
xor
in
mov
xchg
jno
int
xchg
lds
(bad)
mov
ja
leave
test
(bad)
dec
sbb
idiv
xor
jle
xor
imul
mov
repnz
inc
add
int
push
inc
push
adc
inc
mov
cmps
push
sbb
sbb
(bad)
push
xor
sar
and
mov
addr16
mov
jne
cld
add
hlt
xchg
loopne
repz
jae
sahf
mov
and
icebp
cmps
fld
outs
xchg
movs
xor
lds
lods
pop
shl
pop
dec
mov
adc
mov
mov
lahf
or
mul
sti
bound
sbb
pop
aaa
jo
sbb
ins
or
arpl
or
shl
pop
mov
jge
mov
lods
mul
call
jne
add
and
lahf
idiv
retf
sti
or
movs
inc
jecxz
sar
in
pop
xchg
xor
cmps
data16
xchg
fs
lea
lahf
shl
jno
hlt
sbb
cmp
fisttp
fdiv
cmp
mov
outs
(bad)
loop
test
jg
mov
movs
jmp
push
fiadd
mov
out
mov
(bad)
int3
aaa
lahf
ins
push
in
test
sbb
shl
cmp
pop
or
retf
dec
mov
inc
inc
sub
lods
mov
mov
xchg
add
jmp
push
arpl
and
pop
push
dec
cmp
xor
scas
test
loope
mov
xor
loop
bound
cld
mov
test
retf
add
rol
lods
mov
sub
jmp
sbb
fsub
xchg
mov
cmp
sbb
cld
out
jae
inc
bound
dec
ficomp
jp
jne
dec
lahf
fwait
int3
cwde
pop
and
mov
push
je
xor
and
jae
add
jnp
xchg
ins
xor
push
add
push
ret
es
jecxz
inc
and
dec
mov
xchg
jbe
out
jmp
les
test
pusha
mov
rcr
icebp
(bad)
dec
inc
mov
dec
lock
and
mov
xchg
xor
pop
jl
xchg
pusha
or
mov
bnd
enter
jbe
jle
lds
pop
jnp
and
sbb
add
pop
adc
je
mov
ins
cmp
cmp
xlat
mov
mov
je
mov
jl
rcl
sbb
shl
xchg
scas
into
cmp
test
aaa
into
fcom
mov
inc
jmp
fidivr
sub
idiv
aad
out
pop
push
cmp
pusha
or
sar
(bad)
setp
bound
rcr
push
imul
iret
add
pop
sub
sub
xor
aam
adc
jnp
stos
pop
repz
mov
(bad)
mov
add
fist
stos
mov
dec
cmc
out
(bad)
imul
lea
or
xchg
xchg
test
push
dec
stos
pop
push
adc
cs
rol
popa
or
xor
fcomp
lods
dec
cmp
aaa
je
mov
(bad)
leave
fucomip
add
jp
stos
xor
(bad)
lock
xchg
les
push
test
hlt
lods
lods
scas
aas
mov
sti
sahf
lea
xor
xchg
mov
ss
mov
inc
add
pop
mov
dec
or
retf
xchg
xchg
cmp
stc
cs
and
pop
das
add
cdq
cmp
ja
jnp
mov
push
cdq
mov
ins
(bad)
xchg
aas
test
jbe
mov
inc
xor
jb
nop
jno
in
loop
and
jl
xchg
fmulp
and
inc
ja
mov
cmc
scas
fdivr
dec
push
pop
fisubr
sbb
in
fcomp
push
jmp
push
jl
mov
inc
or
int3
mov
inc
lods
ja
out
jns
(bad)
jbe
popa
xor
xor
dec
add
scas
and
mov
inc
inc
lods
mov
and
in
mov
or
push
xchg
enter
xchg
aam
push
aad
jno
std
xlat
test
in
xchg
(bad)
mov
push
mov
mov
adc
sti
sub
scas
push
neg
push
cs
in
iret
and
pop
push
daa
pop
call
jbe
mov
mov
xchg
add
jbe
inc
cmp
add
add
pop
inc
mov
inc
mov
neg
sub
(bad)
mov
mov
push
push
pushf
pop
hlt
scas
cmp
cld
mov
xchg
jecxz
sbb
xchg
sbb
out
repz
xchg
loop
cmp
sub
cli
hlt
fistp
cmp
test
pop
push
mov
pop
out
mov
mov
inc
xlat
pop
jmp
inc
push
xor
pop
ins
je
push
test
imul
pop
movs
sub
test
jge
mov
xor
inc
inc
popf
pop
fnsave
jne
mov
xchg
jo
inc
xchg
std
sub
fimul
add
and
fs
push
in
jnp
ds
xor
mov
sub
or
inc
sahf
aaa
aas
pop
call
sbb
outs
jmp
je
out
adc
cmp
je
jg
movs
das
jae
movs
test
and
mov
aaa
mov
jle
mov
inc
mov
mov
sub
stos
lods
sub
shr
lods
inc
jg
test
push
xor
(bad)
jmp
fidiv
pop
xchg
mov
(bad)
push
clc
dec
daa
dec
jmp
aas
gs
dec
lods
sub
push
sub
xchg
test
fwait
lock
cmp
aas
ss
jl
inc
scas
adc
inc
pop
(bad)
pop
pop
retf
(bad)
xlat
mov
cmp
jl
int
or
sti
data16
jns
ins
fiadd
test
ins
mov
and
and
movs
mov
nop
add
lods
add
mov
sbb
sar
add
dec
inc
fwait
xchg
inc
aad
mov
cs
cld
fist
ss
pop
test
sbb
loopne
pop
or
mov
fstp
into
cli
or
xor
aaa
xor
pop
cmp
rcr
adc
pop
xor
loope
pop
and
aaa
mov
push
push
sbb
jecxz
xchg
out
xchg
push
out
cmp
cmps
and
jge
lods
test
sbb
mov
sbb
repz
pop
jecxz
fstp
(bad)
push
fcomp
push
jg
pop
imul
aaa
pusha
mov
fsub
jmp
dec
popa
xor
cwde
aas
lods
je
add
retf
lods
into
cld
xor
inc
repz
jnp
outs
cmp
sbb
jecxz
cmc
xchg
js
idiv
cmc
sbb
inc
mov
mov
je
sahf
test
push
fild
outs
popf
sahf
sub
push
fimul
cmp
call
stos
pop
imul
mov
mov
rcl
test
pop
push
push
add
mov
jmp
sbb
movs
rol
out
fistp
loop
jbe
mov
dec
sub
push
lahf
jge
clc
(bad)
div
jecxz
lock
mov
xchg
or
pop
scas
fsub
cld
cmp
cmp
cmp
sub
test
jp
xchg
pop
test
and
inc
fcmovnb
sbb
dec
arpl
fcom
lods
sbb
pop
stc
adc
adc
movs
cmp
push
jno
cld
mov
rcl
jae
pop
ret
mov
ins
test
popf
jo
jmp
xor
ret
xchg
jl
stos
mov
cs
sahf
ss
stc
mov
fwait
movs
push
xchg
push
inc
and
xor
and
dec
shl
inc
mov
xchg
movs
(bad)
xchg
sub
iret
outs
sti
repnz
mov
pcmpgtb
jmp
pop
retf
pop
repnz
jg
movs
xor
cdq
inc
adc
cmps
adc
jb
cmps
outs
call
les
cmp
jne
mov
rcr
mov
xchg
in
neg
lods
add
clc
adc
xchg
xchg
shl
add
jle
outs
ins
jno
pop
or
aaa
int3
ins
cld
in
jl
std
jae
push
inc
push
and
int
jae
ins
pop
mov
jae
mov
push
fcomp
mov
xlat
pushw
push
fisubr
test
imul
jecxz
xor
sti
cmc
push
neg
(bad)
adc
popa
add
cld
adc
lahf
inc
retf
dec
retf
es
retf
fdivr
call
mov
cmp
or
inc
(bad)
pop
out
sub
sti
and
push
imul
and
outs
push
mov
mov
test
push
push
ret
pop
iret
mul
inc
jnp
mov
jge
retf
(bad)
mov
sub
in
sub
jg
mov
sbb
cmp
in
icebp
scas
std
jecxz
dec
mov
adc
sub
jmp
dec
scas
sbb
sahf
imul
(bad)
cmp
xlat
pop
jmp
pop
aas
int
sbb
pop
ror
stos
pusha
push
or
mov
outs
popf
mov
pop
fwait
xlat
xchg
aaa
mov
jnp
mov
inc
fwait
rcl
fcmovnbe
div
inc
repz
or
movs
inc
xchg
shl
test
cmp
cs
inc
ds
pop
mov
pop
ss
mov
cs
sbb
inc
mov
inc
in
pop
jnp
add
ins
sbb
fwait
mov
add
jl
cli
xchg
aaa
mov
jb
fs
mov
pusha
lahf
loop
pusha
in
jae
cli
mov
mov
outs
push
nop
xchg
mov
mov
ficomp
push
sub
stc
push
pop
add
add
push
mov
mov
fdiv
and
ret
sbb
inc
ss
xor
cmp
stos
jp
xlat
sub
xchg
cmp
cmc
xchg
aas
xchg
out
jns
outs
jnp
test
dec
xchg
xchg
push
in
jb
test
adc
outs
sti
mov
(bad)
aaa
popf
arpl
test
aaa
out
sti
nop
jecxz
pop
inc
mov
lock
cs
call
arpl
mov
xor
jo
ret
xor
jbe
and
pcmpeqw
xor
aaa
xchg
cmp
push
fs
ins
inc
cmps
xor
scas
dec
sbb
test
jmp
jno
jg
(bad)
mov
jmp
push
(bad)
lods
pop
mov
xchg
inc
mov
cmc
repnz
retf
pop
ins
fwait
cmps
outs
jmp
sar
inc
out
addr16
mov
inc
es
mov
call
out
add
xor
add
adc
inc
mov
dec
out
xchg
and
jbe
test
sti
into
sbb
call
sar
add
mov
jne
mov
fadd
mov
sub
push
clc
cmp
pop
sbb
cs
je
jp
stos
int3
lea
sub
ins
stc
idiv
mov
inc
leave
cmp
add
cmp
mov
arpl
pop
dec
idiv
xchg
sbb
aad
test
lds
scas
fnstsw
xchg
shl
push
(bad)
cwde
pop
push
not
pushf
and
imul
mov
mov
movs
retf
imul
dec
es
out
xlat
sub
push
add
stos
sbb
inc
sub
mov
jmp
popa
add
xor
jp
sub
push
mov
cli
imul
iret
fmul
fnstcw
popf
pop
jecxz
retf
pop
xchg
rcl
aad
std
sub
imul
mov
mov
mov
call
(bad)
fist
adc
pop
mov
inc
es
mov
inc
enter
add
pop
pop
jmp
ss
jb
mov
mov
lea
shl
jb
into
mov
xlat
fdivr
add
call
add
mov
mov
dec
xchg
loope
inc
xchg
mov
and
cli
mov
fsubr
mov
ins
mov
iret
(bad)
sbb
lods
inc
jecxz
(bad)
cmp
or
mov
inc
jmp
add
pop
mov
inc
es
sub
lods
inc
loope
sbb
sbb
sbb
pop
mov
mov
jne
retf
inc
xor
fcmovbe
xchg
aas
(bad)
inc
mov
bound
mov
test
pop
xchg
mov
xchg
lahf
mov
inc
int3
cmc
sbb
cmp
scas
inc
in
pop
fisttp
es
repz
jmp
adc
loopne
cmp
lahf
sub
out
jp
sti
outs
je
xor
and
push
daa
mov
imul
jg
rol
pop
jmp
sahf
sub
mov
(bad)
xchg
sbb
inc
jnp
movs
push
mov
cmps
push
(bad)
xchg
jbe
(bad)
(bad)
mov
xchg
push
xchg
xchg
mov
inc
mov
out
scas
lock
fwait
scas
xor
sub
xor
cmc
aad
inc
fwait
cmp
jl
adc
cmps
inc
cmp
scas
sbb
iret
push
int3
cli
sub
push
inc
push
sbb
inc
push
scas
push
cmp
aaa
inc
sahf
mov
and
out
mov
loope
jnp
mov
pop
xchg
in
test
mov
sbb
(bad)
mov
lods
shr
rcr
leave
aad
add
ret
sub
cs
xor
fistp
push
pusha
jnp
movs
pushw
sahf
cs
ins
mov
dec
rol
or
inc
leave
pop
add
and
sub
and
pusha
pop
lods
je
retf
nop
lods
sub
mov
xor
jne
jb
sub
fadd
fs
cdq
gs
xlat
xchg
out
xchg
mov
sbb
adc
stos
xchg
lea
push
or
mov
(bad)
push
loop
jo
pop
lea
sbb
dec
(bad)
stos
mov
jle
into
arpl
cmp
packssdw
add
pop
stos
sub
mov
in
repz
sub
std
jb
jns
sub
loopne
sahf
frstor
push
xchg
rcl
lea
je
add
leave
test
imul
add
cli
(bad)
into
push
call
lahf
or
adc
mov
enter
int3
jp
pop
pop
call
adc
fisttp
test
aas
mov
mov
aaa
push
pusha
leave
fild
sbb
push
mov
dec
cmps
shl
das
(bad)
shl
and
jge
lahf
stos
sar
push
jne
add
retf
pop
mov
(bad)
sbb
xchg
fst
xor
cmp
and
mov
inc
out
lahf
mov
clc
popa
inc
or
cmp
jo
adc
dec
inc
test
cmp
getsec
daa
inc
fldcw
pop
mul
push
lds
mov
xchg
fs
movs
jne
std
stos
test
cmc
inc
lock
mov
bt
xchg
stos
(bad)
dec
imul
iret
mov
lds
je
jp
aas
inc
scas
inc
pop
pop
fwait
mov
mov
in
and
aaa
sti
xor
sbb
sub
jnp
sahf
ins
sbb
mov
inc
xor
lods
xchg
push
sahf
sti
or
sbb
rcr
fistp
fistp
xor
xchg
pop
xchg
in
stc
aas
ret
mov
int3
(bad)
cwde
std
idiv
mov
adc
cmp
hlt
std
cmp
and
ja
mov
jge
lea
push
xchg
mov
outs
(bad)
stc
xor
cmp
pop
gs
push
add
imul
sbb
popf
or
fidiv
jge
pop
stos
dec
out
jmp
pusha
in
xchg
je
jmp
ins
xchg
(bad)
mov
addr16
call
fld
ins
(bad)
pop
icebp
push
inc
inc
ret
shr
add
or
loopne
cmp
mov
fsub
stc
and
(bad)
jne
jne
int
das
js
arpl
imul
mov
stos
pop
cmp
loopne
sahf
sti
pop
leave
jnp
pop
scas
outs
repz
jecxz
cmps
les
cmp
lods
fwait
test
push
cmps
pusha
fs
xchg
cmp
fst
push
jnp
xchg
dec
aam
aaa
sbb
stc
loop
cli
sbb
les
cs
pop
dec
cwde
fnstcw
pop
shr
adc
hlt
pusha
fs
cmp
dec
sbb
pop
lods
and
push
mov
mov
out
fisttp
sub
xchg
mov
cmps
popa
fcom
test
ror
aas
scas
arpl
mov
idiv
lods
stos
jo
pop
fiadd
sub
stc
repz
and
pop
stos
sbb
and
xchg
cmps
dec
jmp
push
jnp
cmp
sub
movs
pop
xor
cmp
cmps
popf
push
dec
and
aad
aaa
mov
fs
jne
push
mov
loopne
mov
stos
cmps
push
icebp
movs
ja
aad
std
push
loope
in
cmps
mov
push
fwait
add
rol
in
hlt
fs
mov
das
sbb
cld
stc
in
inc
jecxz
pop
sub
fist
gs
loopne
or
mov
int
xor
hlt
js
adc
or
push
mov
sahf
jno
shr
jge
xchg
cli
sti
xor
jb
popf
pop
repz
jl
mov
(bad)
sbb
mov
xchg
xor
sub
mov
mov
jbe
jle
es
or
stc
in
inc
jecxz
imul
mov
xchg
xchg
and
aas
mov
jge
push
inc
or
push
repnz
pusha
test
sub
add
inc
jmp
call
(bad)
outs
jnp
lods
imul
mov
adc
mov
mov
jecxz
xchg
mul
add
mov
xor
loopne
movs
fmul
dec
adc
mov
or
hlt
fist
inc
jns
inc
lea
jo
dec
or
les
fist
push
push
add
and
imul
retf
cmps
shl
xor
dec
popa
(bad)
jmp
jb
inc
push
jl
dec
out
sahf
xor
movs
add
repz
xchg
mov
sbb
and
stc
sub
dec
inc
mov
dec
sbb
jmp
cmp
shl
call
jne
retf
sub
jmp
pushf
aam
inc
jb
mov
add
sub
pop
xor
xor
and
mov
cmp
js
xor
hlt
pop
xchg
inc
pop
out
scas
jno
jp
mov
push
xchg
mov
fcom
mov
(bad)
or
std
jmp
popa
(bad)
sbb
mov
pusha
lahf
xchg
test
cmp
jmp
(bad)
imul
add
push
mov
add
mov
xor
fsub
xor
pop
rcr
scas
cmp
repnz
retf
movs
(bad)
jo
add
call
and
fsubr
pushf
test
ret
addr16
inc
inc
ret
int3
(bad)
loop
add
inc
cmps
sbb
cs
mov
sub
outs
in
and
cmp
add
pop
fistp
sahf
push
xor
lods
or
cmp
in
jb
ins
jbe
test
popf
ret
(bad)
push
shl
jb
aam
test
aad
call
ins
mov
test
sbb
pushf
xchg
out
call
inc
jecxz
mov
and
(bad)
fimul
xor
fsubr
inc
mov
dec
lahf
(bad)
iret
call
xor
add
xor
sbb
(bad)
adc
xchg
push
popf
lods
lahf
xor
sub
int
daa
mov
inc
pop
pushf
and
test
dec
cdq
les
sub
in
xchg
addr16
enter
aam
cmc
lock
sbb
retf
inc
(bad)
repz
jo
inc
mov
ins
popa
xchg
or
pop
mov
pusha
push
push
and
cmp
add
mov
push
fld
mov
push
mov
retf
and
mov
outs
jo
xchg
sub
fdiv
ins
xchg
mov
pop
push
clc
jmp
fisubr
sub
push
js
mov
imul
(bad)
sub
aaa
push
mov
pop
add
movs
int3
aam
sbb
movs
into
jbe
pusha
and
adc
add
xor
ja
push
adc
mov
sub
add
pop
mov
pop
push
fimul
mov
call
pop
call
mov
xchg
ins
test
and
xor
fucomip
dec
inc
mov
cmp
sbb
rcl
pop
ret
jge
fnsave
cs
cmps
mov
sbb
fistp
cdq
cmc
gs
arpl
sub
adc
imul
mov
jne
mov
or
sbb
int3
lahf
daa
mov
jne
mov
inc
mov
cld
add
int
xchg
mov
ja
xchg
mov
es
hlt
clc
(bad)
data16
sahf
sub
and
int
sti
jbe
sbb
cmp
jno
jl
inc
ds
mov
mov
call
pop
pop
(bad)
outs
jne
cmp
sub
jnp
mov
sahf
sbb
sub
jmp
cli
je
jno
pop
cmc
mov
xchg
dec
in
dec
ss
xchg
sub
push
cs
pop
mov
cmc
nop
cmc
(bad)
fcmovu
inc
ins
xchg
mov
inc
pop
or
inc
jns
pop
shr
adc
stos
mov
mov
loopne
or
cmp
xor
jbe
sbb
rsm
xor
pop
stos
add
mov
outs
xor
pop
int3
in
in
xchg
stc
je
ins
fs
xchg
jle
cmps
fidivr
mov
push
xchg
xchg
push
and
shl
xchg
fcmovnb
dec
fwait
dec
jnp
mov
test
icebp
test
(bad)
pop
add
cld
inc
jae
dec
scas
sbb
cs
mov
mov
dec
inc
mov
icebp
shl
out
bound
push
and
xor
inc
add
mov
scas
pop
(bad)
dec
inc
stos
imul
jnp
stos
loope
and
pop
(bad)
clc
mov
mov
push
cmp
add
arpl
stos
inc
sub
cmps
xchg
call
les
movs
jle
xchg
cdq
test
test
mov
xor
(bad)
imul
mov
jae
jb
mov
out
jmp
test
inc
retf
pop
xor
lahf
ss
mov
outs
popf
test
(bad)
adc
jnp
mov
inc
mov
xchg
jno
jmp
xchg
or
ins
xchg
cmp
xchg
mov
ds
loope
(bad)
in
out
pop
(bad)
lahf
inc
(bad)
pop
sti
cs
xor
pop
jg
mov
inc
or
test
jg
stc
sbb
add
pop
push
jne
pop
test
imul
movs
ds
scas
mov
out
int
push
mov
(bad)
retf
push
mov
inc
loopne
mov
loopne
je
cli
ret
jecxz
scas
xchg
jns
cmps
xchg
adc
stc
loopne
fsincos
dec
jl
fwait
xor
dec
into
sub
cmp
jmp
pusha
or
or
mov
lea
jmp
mov
jo
jns
fld
push
push
add
cmp
mov
aas
inc
call
int3
icebp
inc
shl
aam
pop
inc
mov
cmc
mov
cmps
fs
loop
pop
std
retf
icebp
aaa
in
xchg
outs
jae
movs
xchg
push
xor
cli
(bad)
in
out
push
gs
ds
into
daa
jo
inc
sbb
push
mov
dec
cwde
cmps
mov
push
clc
cli
or
and
aaa
push
pop
mov
mov
outs
xchg
xlat
mov
shl
xor
and
test
je
in
xor
xchg
data16
mov
push
cmp
mov
xchg
mov
loope
fiadd
and
fmul
fst
or
add
sbb
and
mov
mov
std
clc
or
cmp
or
imul
dec
ror
lahf
or
icebp
call
imul
and
dec
cdq
mov
ins
in
xchg
je
icebp
movs
mov
ins
xchg
addr16
mov
popa
cmp
cli
sbb
movs
dec
jecxz
fstp
xor
hlt
fist
adc
add
pop
push
push
xchg
mov
mov
loop
or
retf
pop
cmp
xor
inc
jb
xchg
daa
mov
mov
jo
xlat
xchg
aas
and
cmps
out
mov
jb
outs
add
mov
jl
les
adc
xlat
xchg
push
out
ins
or
pusha
mov
test
aas
iret
in
fxtract
inc
outs
lods
lods
inc
lea
pop
cmp
icebp
fist
and
dec
mov
inc
cs
mov
cwde
pushf
or
aad
test
aas
int
pop
push
pop
and
cmp
pop
in
imul
movs
cmp
mov
dec
fstp
mov
into
xlat
sbb
add
popa
cwde
jle
mov
inc
stos
(bad)
cmps
fs
movs
jno
std
xlat
mov
mov
add
cmp
inc
lods
lods
push
fistp
es
rcl
jbe
and
pop
dec
jle
inc
ds
xchg
sbb
cli
or
jecxz
das
jo
sbb
fnstenv
sahf
jg
(bad)
cmp
movs
xchg
push
and
stc
xchg
add
jbe
movs
push
mov
cmps
fs
in
cmp
xlat
xchg
xor
ins
or
test
cmp
inc
lods
lods
push
call
icebp
fist
inc
jb
dec
mov
inc
aas
pop
xchg
mov
mov
cli
xchg
or
aas
int
pop
jl
sub
imul
cmp
mov
sar
daa
mov
jp
popf
pop
aad
call
nop
inc
and
stos
test
jecxz
sbb
xchg
adc
retf
repnz
fld
cwde
lods
pusha
loope
fisubr
fistp
and
arpl
dec
sub
nop
xor
fsubr
clc
aas
mov
inc
inc
inc
xor
xor
jge
adc
jnp
test
xor
mov
inc
and
mov
test
mov
dec
adc
push
add
outs
mov
mov
jae
mov
fcomi
int3
jmp
push
pop
fldcw
sub
cli
in
into
push
fidiv
pop
outs
push
sahf
inc
sbb
mov
fdivr
cli
or
and
xor
jo
add
dec
bound
inc
popf
movs
mov
cmp
dec
jmp
test
mov
jae
mov
dec
cwde
enter
adc
idiv
lods
xchg
scas
dec
mov
push
test
mov
(bad)
push
lods
fsub
and
xlat
sti
rcl
sub
jl
mov
cs
ins
(bad)
cwde
lods
scas
cmp
iret
outs
jmp
pusha
add
ds
es
ficomp
sahf
jg
movs
xor
sahf
xchg
xchg
mov
or
hlt
jno
sbb
push
stos
pop
repz
loopne
xchg
les
or
stos
jmp
mov
mov
stc
repnz
cld
pop
sbb
lds
cmp
jecxz
(bad)
pop
in
sbb
dec
cmps
sbb
and
mov
mov
sub
outs
loopne
cs
fs
daa
fiadd
add
add
pop
mov
sahf
push
xchg
jb
test
iret
xchg
ror
stos
dec
cli
iret
loopne
in
movs
dec
rcr
pushf
xor
pushf
fmul
dec
pop
in
cld
sbb
fadd
jecxz
dec
sti
push
iret
or
das
or
pop
mov
gs
mov
sub
ins
cli
lea
mov
js
pusha
les
mov
mov
pop
jo
adc
inc
jne
mov
sub
in
add
mov
pop
jns
mov
pop
fwait
out
jo
in
mov
sbb
sbb
repnz
cwde
scas
dec
jecxz
test
sbb
je
les
pop
test
mov
mov
loop
das
mov
pop
mov
add
dec
jb
ja
fnstsw
jl
mov
and
dec
(bad)
ficom
cwde
inc
add
lahf
ror
mov
and
jns
lea
ja
mov
push
aaa
loope
mov
sub
lods
fs
dec
clc
cmp
xor
pushf
cmp
push
xchg
jge
mov
int3
push
cli
stc
aas
mov
jne
inc
cmp
xor
pop
pop
adc
pop
arpl
dec
mov
dec
in
rol
repnz
jbe
stos
dec
fdivr
cdq
adc
nop
jnp
test
test
aad
call
dec
mov
iret
repnz
test
adc
fistp
jp
cmp
dec
or
cwde
mov
jmp
movs
lea
and
pop
push
push
xor
xor
sbb
and
fstp
xchg
add
lock
je
dec
jmp
aam
xchg
in
cmps
push
out
movs
add
icebp
shl
mov
arpl
movs
sahf
xchg
xor
mov
aad
out
jmp
sub
jecxz
(bad)
push
sar
addr16
inc
scas
dec
push
jp
fwait
lods
popf
adc
retf
gs
addr16
jnp
fs
mov
(bad)
out
or
xchg
movs
xor
xchg
add
mov
lock
dec
push
fnstsw
lods
fisub
ret
mov
push
fcmovnbe
cmc
das
xchg
sbb
test
push
xchg
mov
retf
xchg
std
popf
es
mov
jno
jno
xor
jmp
repz
inc
arpl
jno
sbb
add
stos
ss
jle
cli
and
in
sbb
and
add
outs
sub
dec
inc
mov
and
(bad)
mov
cmp
lds
jmp
push
jmp
jge
jg
loope
jmp
add
adc
iret
repnz
lods
inc
ret
pop
fidiv
cs
in
push
rol
dec
les
jnp
pushf
push
cs
retf
dec
or
jg
(bad)
jnp
loope
adc
int
sbb
aas
mov
mov
je
cmps
lahf
sbb
xor
(bad)
xchg
xor
gs
lods
push
(bad)
mov
inc
test
xchg
popa
mov
add
(bad)
mov
repz
icebp
sub
xchg
mov
out
(bad)
inc
imul
sub
cli
call
or
or
sub
mov
fild
aam
mov
aas
call
cmp
iret
dec
dec
fldenv
xlat
adc
mov
add
lahf
cs
icebp
sbb
std
cmps
(bad)
dec
sahf
les
(bad)
ror
mov
pop
add
stc
xlat
test
lock
(bad)
addr16
dec
push
sbb
aad
push
int
push
jbe
les
es
cwde
lds
sbb
(bad)
pop
inc
pop
inc
rol
adc
inc
stos
dec
cmp
pop
dec
mov
and
shl
xor
pop
xor
arpl
xlat
mov
in
ins
or
pop
mov
test
into
hlt
movs
fsub
pop
add
mov
push
pop
ss
bnd
inc
ja
inc
mov
imul
mov
mov
icebp
cli
or
xor
xor
jo
adc
sbb
cmp
sub
test
sbb
inc
sar
idiv
xchg
mov
inc
or
mov
mov
xchg
sbb
test
ret
fild
mov
leave
dec
sbb
enter
clc
sbb
daa
outs
test
inc
jbe
inc
inc
jns
mov
xchg
xor
inc
jmp
jbe
jb
int
xor
or
lods
sub
ret
aam
add
movs
pushf
sbb
sub
iret
xchg
mov
add
mov
mov
and
jg
leave
cli
cmps
das
xchg
push
mov
push
je
mov
imul
sbb
or
in
sbb
es
push
adc
lea
aaa
repnz
cmc
add
pop
cs
and
lahf
sbb
sub
ins
dec
test
or
mov
add
xor
jge
jl
push
neg
mov
daa
retf
cli
mov
test
dec
popa
out
xchg
sbb
stc
loop
enter
pushf
test
lock
xlat
push
cs
iret
jmp
push
dec
sbb
pop
dec
mov
sub
jle
xchg
movs
test
and
test
push
imul
xchg
mov
xor
fdivr
aaa
scas
inc
loope
addr16
mov
dec
xchg
shl
loope
jno
clc
cmps
add
pop
call
test
add
stc
icebp
mov
loop
push
dec
test
aad
in
and
and
pop
ins
push
mov
xchg
mov
fxch
push
ret
std
inc
dec
je
loop
ja
xor
sub
movs
dec
adc
movs
xchg
cmp
dec
in
adc
xlat
jl
imul
rol
xchg
adc
fcom
or
ret
sub
push
xor
std
stos
int
cmp
lods
outs
lds
sub
cmp
call
stos
sbb
call
iret
ds
cmp
adc
xor
add
pop
(bad)
imul
test
dec
xor
push
stos
pop
jmp
pusha
std
xchg
jb
retf
add
js
sti
mov
push
(bad)
mov
lock
xchg
xchg
cmps
ins
in
fild
cs
mov
xor
and
adc
pushf
cmps
mov
data16
pop
int
or
aas
retf
ds
imul
sub
mov
aaa
and
sti
call
jle
ins
jbe
mov
dec
mov
mov
and
loope
stos
mov
jg
cmps
xchg
test
xchg
cwde
dec
call
ss
lock
inc
jb
jge
adc
inc
cld
xor
mov
pop
repnz
mov
jns
pop
xor
pop
sbb
cmp
push
xor
cmp
mov
dec
out
fist
retf
push
ficomp
mov
addr16
mov
inc
rcl
xchg
xor
inc
fwait
mov
test
out
into
test
dec
enter
(bad)
hlt
std
and
xor
bound
sub
outs
lahf
xchg
lds
sahf
call
xchg
jne
ja
into
xor
aas
mov
(bad)
pop
xor
cmp
mov
sti
lods
xchg
daa
mov
inc
jle
arpl
or
loopne
pusha
pop
mov
test
mov
sbb
sbb
fcom
out
call
sbb
cli
lods
ja
add
cdq
pop
inc
popa
mov
jns
mov
stc
add
shl
adc
and
cmp
pusha
mov
pop
xchg
mov
dec
(bad)
xor
inc
mov
jl
(bad)
and
cmc
sub
addr16
jmp
test
inc
xchg
add
mov
outs
jp
movs
imul
sub
test
and
scas
cmp
gs
out
mov
enter
cs
add
or
push
sbb
pop
(bad)
imul
jmp
sub
xchg
into
xchg
ds
jmp
inc
scas
inc
sbb
push
xchg
nop
jne
not
out
xor
imul
mov
add
fneni(8087
stc
enter
xchg
mov
cmp
pop
sar
imul
lods
sbb
pop
pop
fst
add
aam
je
aaa
into
pop
adc
add
pop
stos
pop
div
cmps
push
aas
scas
sub
mov
xor
mov
mov
push
fistp
and
inc
mov
mov
or
retf
in
lock
mov
push
xchg
icebp
clc
(bad)
dec
pusha
loop
outs
retf
dec
clc
add
jecxz
out
push
jl
mov
push
sbb
cmc
(bad)
(bad)
cmp
popa
lahf
retf
xlat
jo
jno
retf
jg
sbb
jp
mov
sub
into
(bad)
cmp
adc
jecxz
mov
jo
movs
jno
scas
(bad)
push
cmps
(bad)
xchg
dec
loop
js
std
sti
div
dec
lock
shl
inc
jns
enter
out
stc
xor
inc
imul
clc
or
int3
jl
ds
jl
scas
or
js
or
mov
scas
pop
fsub
xabort
inc
jne
call
pusha
mov
adc
imul
pop
mov
jb
test
in
(bad)
sahf
adc
jbe
mov
pop
lahf
mov
jo
cld
pop
dec
clc
call
and
push
mov
xchg
adc
xchg
sbb
inc
inc
enter
(bad)
xor
jno
inc
sub
(bad)
fst
cli
ret
mov
dec
ss
adc
sbb
jp
fnstcw
mov
mov
xchg
aaa
and
fsub
fadd
sub
fisub
mov
imul
jecxz
test
add
mov
ds
mov
mov
repz
pusha
jecxz
dec
les
xor
enter
sbb
inc
stos
jno
dec
dec
movs
fwait
lds
(bad)
sbb
jmp
das
mov
mov
add
sub
fist
jmp
push
mov
cmp
mov
jae
mov
pushf
das
hlt
push
mov
ins
pop
sbb
icebp
cld
loop
pop
mov
lods
sub
sub
clc
std
je
adc
dec
stos
cmp
test
push
mov
and
(bad)
in
add
aaa
jmp
jae
sub
sub
outs
dec
(bad)
jg
lea
addr16
mov
xor
stc
jmp
stc
je
and
push
cmps
loope
push
out
or
test
or
pop
sbb
and
retf
cs
(bad)
push
shl
add
adc
sub
mov
sbb
dec
inc
ss
pop
jge
xor
adc
outs
test
pop
fcmovu
test
mov
jl
sub
movs
fisub
jmp
inc
cmp
fdivr
movs
in
lods
sbb
cs
test
cmp
cmp
stc
and
jnp
movs
outs
arpl
ret
adc
aam
(bad)
sbb
push
leave
sub
jl
lods
and
mov
fisttp
mov
sahf
sbb
loope
test
(bad)
jmp
mov
jge
into
cmps
jo
xchg
xor
jl
xchg
leave
aaa
lahf
push
add
add
movs
inc
jecxz
jmp
pop
mov
push
jg
xor
idiv
and
call
data16
stc
sub
aas
ficom
pop
jb
fwait
sbb
test
add
xchg
(bad)
stc
mov
mov
add
mov
ins
mov
mov
stos
aaa
test
cmps
push
addr16
leave
call
cwde
push
xchg
pop
shl
repz
icebp
adc
cmp
ins
sbb
jns
jo
mov
retf
fld
lock
cmc
gs
popa
or
jl
pop
or
dec
sahf
jne
mov
add
xor
std
aam
aas
retf
cwde
inc
jb
mov
fcomp
mov
mov
mov
xchg
mov
push
mov
(bad)
stc
xchg
push
inc
jns
scas
inc
jecxz
fadd
sub
cmp
dec
mov
and
into
enter
dec
out
push
mov
xor
push
icebp
sub
sahf
jbe
cmps
adc
lods
loope
ds
and
out
inc
neg
pop
push
push
lds
xchg
aam
out
cdq
push
loop
jbe
stc
rcl
adc
xor
mov
sti
dec
outs
xchg
test
sbb
sbb
sti
rol
adc
xchg
pop
jge
clc
inc
cmp
mov
cld
into
sbb
cmp
and
add
mov
pop
pusha
test
xor
xor
test
sub
xchg
jno
push
lds
xchg
dec
(bad)
stos
pop
add
out
inc
xchg
std
mov
dec
mov
xchg
dec
int3
retf
jmp
push
cdq
mov
sbb
sub
repz
add
aaa
jns
test
pop
pusha
xchg
mov
ficomp
fld
xchg
cmc
push
inc
pop
aas
hlt
push
fs
aas
mov
retf
cmp
gs
test
inc
movs
sub
mov
jle
(bad)
call
(bad)
xchg
jl
push
jbe
mov
jb
shl
and
ret
mov
jmp
pop
xchg
mov
and
rol
dec
dec
xchg
mov
adc
push
clc
(bad)
jo
cmp
outs
mov
jp
test
cmp
mov
iret
outs
ror
je
ss
outs
js
add
ror
add
lahf
xor
popf
movs
mov
std
out
add
jbe
scas
dec
shl
mov
out
jno
retf
cmc
xchg
sbb
push
stos
mov
push
ja
cwde
lods
push
xor
test
push
repz
int
int
fild
jp
inc
mov
inc
cmp
fwait
int3
test
cmp
imul
add
cmp
cmp
jae
daa
stos
sub
and
adc
fisttp
xlat
xor
cwde
xchg
xor
clc
stos
inc
sahf
clc
jb
outs
jnp
mov
mov
dec
xchg
mov
ins
in
or
lock
mov
inc
test
push
mov
into
les
lods
lods
dec
(bad)
jnp
cmp
mov
jle
xor
push
fcomp
pop
call
inc
cwde
ficomp
test
dec
iret
inc
pop
bound
adc
jg
test
sbb
pop
and
aaa
lods
sti
js
imul
fldenv
mov
xchg
add
add
ins
xor
ret
jl
pushf
mov
push
cmp
repz
ins
cwde
mov
cmp
xor
cld
fisub
call
cmps
pop
ins
and
xchg
mov
fs
fmul
test
gs
daa
in
ins
pusha
or
cmp
jl
mov
outs
in
pushf
adc
aam
add
addr16
pop
lock
dec
pushf
cld
mov
pminsw
mov
push
pop
mov
scas
daa
pop
out
fild
jmp
xlat
cmp
loopne
loope
jns
pop
fstp
sbb
mov
mov
sbb
jg
cli
or
xor
or
mov
arpl
pop
mov
push
fst
mov
mov
push
mov
aas
cdq
mov
add
div
xchg
push
test
test
jns
mov
adc
cld
ficomp
and
and
icebp
jmp
cmp
outs
xchg
sub
add
nop
retf
mov
jg
ret
std
jp
jb
in
sub
add
jnp
fimul
in
xchg
add
and
fist
shl
sub
cmps
(bad)
jge
in
loopne
in
xchg
or
xchg
rcl
test
fs
mov
mov
xor
stc
xchg
std
loope
dec
mov
fimul
adc
clc
aad
nop
push
jae
pop
mov
push
lods
mov
pop
lock
rcr
jns
neg
adc
aas
mov
xor
and
mov
inc
ret
aas
mov
jbe
stos
pop
repz
(bad)
bound
and
jmp
movs
lea
inc
xchg
fiadd
out
stos
dec
sahf
mov
or
cmp
jg
adc
mov
(bad)
xchg
mov
in
xchg
add
js
leave
xor
imul
nop
pop
call
inc
xor
fcmove
xchg
es
stc
imul
dec
(bad)
mov
cdq
push
in
xchg
out
mov
cmp
arpl
loopne
mov
lock
dec
xchg
or
sub
hlt
ret
sbb
inc
mov
inc
and
mov
scas
adc
ror
cli
add
dec
sbb
and
jbe
arpl
inc
inc
scas
adc
in
mov
or
gs
(bad)
inc
fnstsw
ins
jb
mov
push
movs
les
sub
mov
lods
sahf
(bad)
es
pushf
push
aaa
jmp
jae
lods
lods
inc
xchg
fiadd
ds
fist
adc
dec
stos
push
cs
mov
repnz
mov
jo
pusha
add
adc
popa
mov
scas
push
cmps
sbb
dec
cmp
imul
inc
mov
jb
jl
and
and
add
inc
cmc
add
clc
das
fldcw
xchg
or
push
enter
push
cmp
retf
or
mov
dec
add
xchg
mov
call
mov
aas
fisub
xor
btc
repnz
push
mov
push
mov
dec
out
cmps
xchg
daa
mov
add
pop
test
call
or
scas
mov
pusha
outs
mov
nop
add
rcr
mov
ficomp
cmp
jmp
adc
push
mov
or
mov
mov
out
sbb
cmp
pop
add
add
das
(bad)
xor
ins
inc
mov
outs
sahf
mov
clc
iret
out
mov
inc
push
test
xchg
repz
xchg
stos
cmps
push
icebp
movs
push
push
div
mov
lds
mov
xchg
mov
ret
xchg
in
sti
dec
ins
sahf
mov
adc
es
icebp
in
and
es
inc
scas
cmp
mov
or
cs
outs
cli
xor
add
sub
jp
sbb
outs
imul
sbb
or
and
jmp
mov
gs
stos
push
cmc
mov
jg
(bad)
cdq
push
out
cdq
push
dec
xchg
(bad)
mov
out
movs
and
xchg
or
(bad)
(bad)
dec
push
mov
inc
jecxz
fisttp
fstp
xor
inc
cmps
and
jbe
push
or
(bad)
scas
cmp
stc
imul
aas
fcomi
gs
arpl
jmp
das
popa
das
or
arpl
dec
xor
xchg
xor
int
mov
xchg
sti
ja
dec
je
stos
push
lds
cdq
push
loop
jl
std
rol
cmps
call
loopne
xchg
inc
icebp
test
stos
dec
idiv
das
sbb
jmp
add
cs
cmp
cmp
jne
mov
mov
loope
or
mov
pusha
aaa
in
ins
jl
bound
data16
outs
and
fwait
mov
pop
loop
xchg
add
jo
fidiv
mov
addr16
stos
xchg
inc
loop
js
int3
enter
dec
test
pop
jno
cmps
test
pop
sbb
dec
mov
jb
push
scas
cmp
into
neg
pop
in
inc
imul
lods
cmp
gs
xchg
mov
xchg
push
pop
stos
pop
iret
or
push
ins
popa
es
and
inc
pop
pop
mov
mov
xchg
ror
not
jl
mov
es
sbb
sbb
popf
push
loopne
imul
mov
dec
rcl
aaa
in
mov
ins
pop
sti
mov
push
and
jecxz
pusha
sub
or
dec
push
pusha
lea
inc
pop
xor
jb
retf
push
pop
fstp
nop
or
pop
into
xor
js
xor
sub
shl
ror
add
xor
fucomp
dec
xchg
out
add
dec
push
jl
cs
mov
dec
out
cwde
pop
out
pop
cmp
stos
mov
mov
jg
mov
adc
(bad)
dec
pusha
xchg
mov
iret
ds
sub
rcl
ds
jb
jg
cmp
loopne
ss
sub
fstp
out
jns
(bad)
sbb
sbb
xor
jnp
add
jnp
xor
or
movs
cmps
call
pop
and
int3
out
xchg
shl
outs
jge
(bad)
jno
sahf
out
mov
movs
fs
(bad)
lods
push
loope
xchg
cmps
stos
out
test
jo
mov
loop
shl
pop
ins
lods
test
sbb
or
aad
push
out
and
bound
inc
or
inc
lods
jnp
lea
mov
lds
sbb
pusha
jmp
cmps
push
sbb
mov
pop
out
in
inc
(bad)
stc
pop
xlat
data16
cli
nop
mov
retf
jmp
out
ja
ins
xchg
test
dec
sbb
fidiv
shl
xor
scas
xor
push
jmp
sub
jmp
bnd
and
ja
mov
dec
cmp
mov
scas
push
mov
cmps
repz
jno
leave
xor
arpl
push
ins
mov
or
mov
cmp
jl
fsub
sbb
in
pop
fdiv
pop
popf
push
fmul
hlt
push
les
and
ins
xchg
mov
push
in
fwait
jmp
and
(bad)
movs
fcmovbe
inc
pop
mov
retf
xor
mov
inc
jmp
cmp
outs
inc
dec
xchg
cmp
lods
dec
add
adc
in
push
fs
xor
sbb
jge
add
imul
inc
test
mov
inc
and
jmp
ficomp
nop
outs
out
lock
inc
and
shr
mov
pusha
mov
not
(bad)
dec
jne
mov
or
cs
and
dec
mov
pop
ds
mov
out
jmp
popa
push
pop
xor
push
jae
add
mov
pop
mov
mov
add
push
ror
sbb
gs
sub
mov
cwde
je
cld
push
aaa
(bad)
adc
add
fwait
mov
sbb
fimul
xchg
popf
es
loop
jno
pop
call
ror
js
pop
jo
dec
lods
push
pop
popa
movs
push
push
icebp
mov
hlt
jle
fdivr
in
jnp
inc
cmp
inc
or
adc
dec
fcom
xor
stos
or
or
fadd
loope
jbe
popf
xor
and
xchg
loop
jne
xchg
or
test
dec
jg
test
ds
loopne
or
mov
push
or
iret
sbb
pusha
cmp
imul
lahf
cwde
mov
arpl
clc
sbb
xor
adc
jne
dec
jb
(bad)
shl
pop
call
cdq
mov
inc
lods
repz
aad
pop
push
sbb
cmc
mov
rol
xor
add
loope
in
das
stos
push
je
mov
or
fld
dec
idiv
dec
adc
and
and
scas
adc
mov
jle
mov
ins
sahf
stc
and
add
and
cwde
inc
mov
pushf
push
add
add
sub
ret
add
sbb
jbe
mov
inc
xchg
cmps
fs
add
iret
lds
mov
outs
jp
mov
repnz
fldenv
test
out
(bad)
xor
fld
jg
cmp
sub
pop
mov
mov
ins
repz
mov
add
inc
cmps
xor
inc
add
stc
outs
adc
inc
cwde
stos
(bad)
cmp
adc
xor
icebp
push
(bad)
inc
fst
mov
mov
out
push
sub
shl
in
(bad)
xor
jmp
dec
call
inc
dec
mov
cs
xor
in
push
loop
jbe
dec
mov
inc
ds
mov
mov
sar
push
mov
gs
push
aaa
sti
or
cmp
test
mov
pop
(bad)
movs
mov
(bad)
sbb
inc
inc
push
mov
dec
mov
call
jecxz
xchg
mov
ja
sahf
mov
daa
icebp
clc
mov
repz
sbb
dec
rcl
cmp
jmp
jo
dec
fcomp
pop
das
mov
mov
mov
ins
jmp
jge
pop
xor
add
cdq
and
ins
cmp
neg
add
pop
idiv
xchg
inc
lods
clc
push
mov
jg
outs
xchg
cdq
push
jecxz
or
xchg
imul
add
add
cmc
icebp
(bad)
cmp
mov
fdivr
inc
das
ret
test
imul
ja
cmp
inc
add
mov
clc
inc
loop
addr16
hlt
jbe
je
mov
add
bound
ja
mov
(bad)
sbb
adc
cld
iret
xchg
lahf
aad
aad
push
push
test
rcr
loopne
mov
xchg
jno
fcmovnbe
add
sbb
mov
mov
test
xor
pushf
movs
into
sti
push
fwait
mov
push
inc
dec
iret
jmp
pop
fisttp
push
data16
inc
ss
xchg
lds
fwait
stc
js
out
jbe
jno
call
cmp
sbb
sahf
push
dec
mov
mov
das
and
mov
in
jnp
sub
scas
mov
or
shr
mov
fs
cld
sbb
sub
cmp
(bad)
inc
cwde
add
pop
mov
inc
and
mov
mov
stc
fdivr
lock
push
xor
cs
sbb
idiv
jg
lods
or
cmps
mov
pop
jmp
lock
js
push
mov
hlt
mov
dec
mov
xchg
ja
cmc
sti
xchg
add
push
xor
ja
mov
add
cld
(bad)
mov
cli
data16
mov
sub
cli
iret
pop
sar
les
add
aaa
sbb
xchg
test
adc
or
and
or
inc
mov
jge
mov
sbb
xchg
sbb
bound
lea
mov
jns
in
mov
jecxz
jge
lea
movs
mov
shr
imul
(bad)
rol
test
retf
cmp
fldln2
imul
add
dec
stos
cmp
or
out
mov
call
sbb
xor
and
add
(bad)
jg
mov
lods
adc
add
fist
repnz
jne
scas
dec
and
adc
cli
in
push
loope
mov
mov
add
repnz
cli
cli
jle
xchg
movs
pop
lds
stos
dec
sub
shl
fdiv
xor
jno
inc
pushf
inc
or
mov
pop
in
push
mov
jbe
add
imul
aas
leave
ins
in
jb
mov
sbb
lea
add
in
xchg
xor
jb
mov
pop
sub
sbb
xchg
inc
adc
cli
test
or
jb
mov
adc
and
push
js
or
sbb
clc
cmc
push
lahf
ds
arpl
aaa
pop
push
out
int3
mov
cwde
iret
push
and
inc
jne
mov
xor
adc
dec
jnp
dec
xor
aaa
pop
repz
push
imul
ja
je
jno
ins
jmp
outs
enter
icebp
movs
mov
retf
div
jg
fsubrp
ds
add
and
iret
(bad)
fdivr
pop
push
or
mov
dec
and
cwde
mov
push
mov
jae
jbe
fiadd
inc
add
add
jge
mov
aas
test
pushf
or
fistp
jmp
pop
mov
call
xchg
jbe
mov
mov
mov
outs
jg
mov
cmp
out
ror
mov
jp
jp
sub
xchg
int
ja
sub
pop
inc
pop
xchg
imul
out
jl
fisub
ja
mov
adc
outs
dec
mov
inc
mov
mov
sbb
cmp
fucomi
aaa
cmp
jbe
outs
loop
(bad)
bound
push
jp
dec
cmp
push
xchg
shl
pop
stc
repnz
(bad)
dec
icebp
push
leave
dec
push
pop
dec
fsub
xor
inc
pushf
sbb
pop
je
mov
xchg
cs
jmp
cmp
inc
pop
adc
add
stos
pop
push
sub
test
jl
(bad)
and
mov
jl
push
test
nop
sahf
pusha
mov
xchg
inc
loopne
push
daa
xchg
movs
mov
mov
add
sti
idiv
mov
fdiv
cmp
inc
int3
cmp
cmp
push
ss
les
outs
ret
cld
add
and
and
add
add
adc
xchg
jno
in
movs
xor
jnp
lahf
jle
movs
in
and
dec
mov
xchg
ins
lea
mov
pusha
outs
mov
xchg
pushf
test
icebp
mov
xor
std
out
test
sub
push
dec
jge
push
or
mov
mov
jmp
jge
in
xor
add
mov
jo
mov
pop
out
cdq
and
repz
loopne
pop
dec
mov
bound
mov
or
xchg
int3
sub
mov
retf
out
jg
mov
xor
and
sub
sbb
mov
pop
pushf
cdq
lods
aam
pop
out
out
sbb
xor
cmp
jae
adc
jb
jl
pushf
sbb
cmps
mov
daa
add
fstp
out
mov
sbb
pop
jae
(bad)
mov
loope
dec
loop
push
dec
jmp
sahf
test
push
(bad)
jp
mov
xlat
cli
xchg
fld
in
fidiv
pop
sbb
lea
push
dec
fistp
sbb
inc
sub
icebp
fisttp
dec
leave
int3
or
jle
mov
add
jge
mov
sar
sbb
mov
jecxz
sbb
lds
fnsave
test
cs
mov
push
jb
cwde
mov
adc
mul
cdq
mov
and
in
jb
inc
jae
pop
adc
pop
cmps
inc
add
mov
sub
jp
xchg
xor
sbb
and
cmp
ins
xor
xchg
adc
retf
aas
xchg
leave
or
addr16
mov
mov
addr16
popf
jg
cld
dec
daa
into
shl
mov
dec
sbb
rol
mov
lods
push
retf
aaa
and
out
fcmovu
pop
into
push
jne
dec
call
pop
pushf
mov
mov
in
hlt
sbb
arpl
fcom
ja
sub
pop
rcr
test
xor
mov
aas
add
xor
pop
sbb
fidiv
sahf
sbb
in
push
fcomp
test
mov
xor
xchg
cmp
retf
loop
retf
sar
mov
push
into
das
push
inc
(bad)
cld
fist
inc
jb
dec
fnsave
jp
sti
aaa
sbb
icebp
mov
mov
in
stc
aas
mov
jo
jae
jmp
cmp
mov
sub
add
(bad)
fcomp
mov
xchg
enter
push
pop
rol
mov
pop
mov
mov
es
mov
mov
pop
jno
xchg
sub
rol
mov
xchg
push
aaa
cmp
inc
call
mov
jbe
ins
lahf
mov
mov
out
cli
or
sbb
xor
or
pop
fld
mov
inc
mov
xchg
or
xchg
aaa
mov
dec
and
inc
stc
mov
dec
xchg
(bad)
and
xchg
add
dec
xchg
outs
ja
mov
repnz
test
sbb
fisubr
sub
(bad)
cld
mov
pusha
les
je
inc
cs
mov
lea
and
mov
jne
js
in
add
sub
jle
pop
pusha
mov
jae
mov
xor
hlt
and
inc
cli
pop
jae
stos
inc
enter
call
and
xchg
xchg
pushf
ret
adc
lock
aaa
stc
repnz
dec
adc
dec
stc
cmp
fistp
ds
sub
stos
pop
jl
test
pusha
mov
lds
jmp
jno
int
xor
add
bound
jl
cmps
xor
xchg
fdivr
jmp
cld
dec
jne
lds
popf
sahf
cmp
in
add
movs
add
scas
les
inc
popa
mov
fcomi
xchg
cld
jno
lahf
aam
lea
mov
cs
sti
icebp
addr16
inc
or
jge
sbb
sub
retf
sub
sbb
mov
jne
inc
cmps
and
add
aaa
(bad)
pop
iret
outs
jo
inc
cmp
mov
or
popf
stos
jmp
fcomp
pop
rcl
sbb
test
mov
xor
mov
xchg
xchg
mov
push
mov
out
adc
(bad)
dec
inc
(bad)
fbstp
test
(bad)
fist
or
pop
dec
pop
clc
inc
add
call
cs
bound
es
pop
jae
adc
mov
mov
xchg
push
add
test
out
pushf
inc
scas
stc
arpl
ins
jp
mov
arpl
xchg
push
pop
lea
lea
sbb
mov
stos
push
push
into
add
lods
inc
xchg
sub
cmp
mov
jle
cmp
jg
cdq
sbb
pop
pusha
nop
mov
mov
test
arpl
pop
in
add
adc
aam
pop
mov
mov
push
cdq
cmps
mov
retf
xlat
xchg
sar
imul
ins
cld
mov
jns
iret
xchg
dec
in
adc
jecxz
or
inc
mov
test
es
cmp
mov
push
inc
dec
leave
xchg
mov
iret
sbb
outs
mov
dec
push
dec
call
jge
in
sub
or
adc
cmc
inc
sahf
adc
outs
pusha
test
xor
in
adc
jge
mov
adc
inc
push
mov
hlt
(bad)
test
loopne
or
ins
(bad)
(bad)
lods
mov
mov
enter
mov
sbb
cmps
dec
pop
xor
xor
sub
fwait
push
or
xor
call
push
outs
add
ficom
ja
adc
mov
mov
mov
aad
js
cmps
cli
xor
idiv
xchg
pop
mov
jge
scas
pop
repz
js
(bad)
call
xor
in
sbb
push
cmp
mov
mov
or
test
inc
cs
(bad)
fidiv
daa
jo
cmp
mov
imul
repz
add
inc
sub
add
adc
jge
sub
outs
xor
mov
into
mov
ins
addr16
outs
lock
lock
xchg
mov
inc
out
jno
cli
stc
test
imul
mov
neg
mov
ds
ds
cld
(bad)
push
fiadd
push
and
inc
es
in
mov
test
jmp
jne
in
aaa
inc
jl
lea
(bad)
and
sbb
outs
pop
cmps
sub
aaa
and
xchg
daa
mov
jbe
cmps
dec
in
loopne
add
push
out
add
rcl
test
jecxz
xchg
mov
ja
mov
aas
cmp
jmp
mov
test
lock
push
call
stos
dec
and
icebp
fwait
int
femms
stc
fs
mov
inc
int
ja
sub
(bad)
pop
push
fimul
lahf
cmp
mov
pop
out
iret
in
shl
cli
add
pushf
and
mov
pop
mov
jns
(bad)
shr
scas
int
test
adc
cmp
mov
dec
pop
cmp
call
les
dec
push
mov
ss
rcr
call
(bad)
imul
addr16
add
shl
popa
mov
and
in
xchg
adc
arpl
stos
pop
lds
or
shr
xchg
shr
cmps
addr16
xchg
mov
xchg
dec
ds
xchg
test
out
lock
sbb
sti
lods
pop
cdq
xor
ins
gs
lea
bound
cmps
dec
cwde
cli
or
int
aas
jo
sbb
dec
adc
add
rcl
jecxz
mov
test
jp
mov
popa
xchg
mov
inc
out
xor
mov
neg
scas
xchg
mov
and
(bad)
mov
scas
mov
retf
gs
adc
das
cli
repz
jbe
ss
sbb
pop
movs
jbe
jge
mov
xlat
inc
out
and
inc
aam
ins
add
ds
and
lea
cmp
dec
loopne
xchg
test
dec
fisttp
dec
mov
dec
loopne
call
shr
xchg
(bad)
ret
pop
ja
mov
xor
ficomp
lods
mov
pop
ficomp
or
out
xlat
arpl
ds
jle
test
push
jno
cs
dec
lahf
mov
mov
out
cmc
arpl
pop
fist
cmc
inc
nop
ds
pop
call
mov
(bad)
sbb
add
lds
ret
movs
hlt
inc
test
popa
push
cli
repz
movs
(bad)
in
and
mov
repnz
(bad)
ins
pop
loop
inc
jecxz
fidivr
cmp
int
iret
and
sub
sbb
aas
dec
push
mov
stos
mov
jmp
inc
aas
mov
jl
and
ins
ds
inc
cmps
cwde
xor
mov
das
(bad)
aad
cli
pop
pop
lods
push
(bad)
mov
xchg
je
nop
jae
cmc
retf
iret
dec
mov
fs
fwait
test
push
cld
idiv
mov
push
push
or
xor
pop
les
jge
mov
jnp
test
jle
out
add
cld
jge
bound
jecxz
adc
and
fcomp
mov
xchg
xchg
ins
pop
add
xor
jge
pop
(bad)
mov
test
mov
nop
xor
imul
mov
fadd
lahf
mov
xor
fld
and
sbb
cld
inc
sub
fwait
lods
retf
shr
ret
or
aaa
ror
sub
psubusb
arpl
je
movs
xchg
and
inc
fcmove
xchg
xor
jno
stos
pop
fdiv
jecxz
xchg
add
shl
xchg
mov
jmp
mov
mov
and
fild
and
aas
dec
addr16
inc
push
jnp
mov
stos
cmp
jmp
mov
push
pop
add
ret
jo
adc
iret
push
cmps
aas
popfw
xlat
cld
adc
or
scas
xchg
or
mov
(bad)
jno
dec
fstp
jge
mov
or
rol
mov
jns
xchg
xchg
cmp
(bad)
out
in
mov
cmc
xchg
sub
adc
cs
cld
inc
dec
jl
mov
pop
jbe
push
sub
xchg
scas
mov
loop
pop
call
pop
add
and
icebp
sub
xchg
sbb
sbb
and
fisubr
loop
inc
test
mov
outs
xchg
push
daa
stc
(bad)
mov
lods
test
add
aam
cmps
stos
xchg
(bad)
dec
out
push
hlt
ucomiss
mov
ret
push
jmp
jne
arpl
inc
sub
out
scas
mov
fmul
sbb
push
into
cmp
inc
nop
jbe
arpl
jbe
mov
push
xchg
mov
and
xor
in
sar
dec
bnd
lea
scas
(bad)
pop
mov
xchg
js
int
mov
mov
scas
idiv
mov
inc
cmc
scas
xor
sub
adc
inc
jecxz
into
imul
jae
imul
push
in
mov
iret
inc
(bad)
fst
test
je
inc
cmp
and
mov
imul
gs
in
out
xchg
repz
jl
push
stos
pusha
inc
(bad)
jg
loop
dec
ret
mov
not
add
neg
(bad)
dec
mov
xchg
ds
xchg
(bad)
mov
lods
mov
js
cmp
push
(bad)
stc
mov
sub
mov
add
fwait
mov
stc
fs
out
jns
(bad)
outs
adc
into
ss
add
cmp
sub
test
cmp
dec
aas
cmp
push
xchg
stc
pop
out
cmovo
mov
xchg
popa
retf
mov
out
rol
mov
push
xchg
sub
in
cdq
cmp
fsubr
pop
(bad)
cmp
int
int3
and
dec
cmps
pop
ins
push
lahf
sbb
out
mov
mov
cwde
fistp
fisttp
sti
add
pop
adc
adc
inc
popf
movs
mov
adc
pop
xchg
fist
xchg
ror
mov
cmps
push
rcl
out
ins
icebp
ja
neg
mov
mov
push
cdq
test
mov
mov
xchg
and
nop
test
inc
stc
cmp
sub
mov
cmp
push
call
pusha
(bad)
push
jecxz
sbb
and
imul
pop
fmul
movs
cmp
jne
push
cmp
fbstp
test
xchg
(bad)
dec
test
xchg
pop
cmp
(bad)
sub
jg
stos
lods
stc
es
test
rol
test
fst
sub
jmp
pop
sbb
ins
mov
pusha
stos
stos
lds
test
imul
add
das
mov
ficom
movs
dec
pop
retf
repz
adc
and
pop
mov
inc
scas
pop
jecxz
mov
ret
xchg
popa
rcl
xor
pop
lea
pop
pop
out
lea
dec
sti
idiv
mov
inc
jecxz
stc
and
repz
cmp
sub
cmp
lea
pop
out
fisttp
pop
jecxz
push
enter
jae
fisub
or
ss
jne
addr16
(bad)
fs
mov
mov
sahf
into
mov
sahf
call
pop
jnp
sbb
inc
xchg
jecxz
push
in
inc
xor
(bad)
xchg
pop
in
movs
lea
pop
in
mov
sbb
repnz
mov
push
inc
dec
aam
lods
sub
and
cmp
mov
mov
dec
out
mov
mov
and
pop
das
jne
cmp
imul
cmp
pushf
push
xor
dec
in
fsubr
not
jae
sub
mov
push
xchg
enter
pushf
je
mov
xchg
xchg
in
mov
addr16
mov
sbb
fcom
scas
push
hlt
push
mov
ret
jns
push
inc
or
push
pop
pusha
mov
dec
mov
lods
stos
cmp
out
jns
std
pcmpgtb
call
add
inc
jnp
push
retf
call
jecxz
sbb
inc
add
pop
stc
mov
pop
mov
mov
hlt
pop
int
cli
test
scas
dec
lahf
addr16
in
mov
dec
jmp
cmp
mov
sub
inc
add
das
ins
push
(bad)
sub
popf
xchg
mov
pop
jmp
jb
mov
add
or
jae
lahf
sub
imul
xchg
aaa
xchg
int3
add
arpl
stos
push
fcom
xchg
push
into
loopne
adc
fiadd
mov
jl
lea
call
lods
(bad)
xor
pop
(bad)
xor
ss
in
je
xor
inc
les
push
mov
pop
lahf
xchg
mov
imul
jae
jae
int
or
or
pop
nop
adc
adc
fs
mov
mov
call
mov
repnz
jbe
xchg
dec
xchg
xor
les
sub
dec
cdq
idiv
arpl
fyl2xp1
movs
fcmovu
jnp
xchg
fiadd
dec
call
(bad)
es
xor
aaa
add
ss
pusha
pushf
(bad)
call
sar
lock
inc
jne
in
or
xchg
sub
xchg
mov
movs
cli
sub
and
lahf
stc
jmp
fsub
popf
jo
mov
dec
call
push
icebp
sti
lock
ins
cmp
ins
mov
adc
pusha
mov
cmp
xlat
sti
test
js
movs
or
push
sahf
aaa
sub
ret
leave
jnp
or
enter
and
pop
sub
cmp
imul
push
shl
ja
mov
outs
xlat
aam
add
pop
jl
push
loop
adc
call
sti
jnp
movs
mov
arpl
in
out
cld
div
and
sbb
inc
call
test
push
jo
(bad)
pushf
xor
fbld
fmul
xchg
out
popa
jno
pop
rcr
push
popa
loop
mov
scas
jl
fldenv
mov
jge
sub
fcom
leave
jl
jl
push
mov
xchg
addr16
xchg
or
into
shl
sti
data16
mov
aam
mov
sbb
mov
jmp
mov
jge
adc
popa
xchg
imul
jmp
test
jge
bound
cmp
add
jne
dec
aaa
scas
cmp
mov
or
xor
pop
push
scas
sub
mov
push
and
jmp
xor
cmps
stc
aaa
lahf
imul
repnz
cwde
test
xor
ja
pop
or
sub
and
mov
or
jge
and
neg
pop
ss
adc
ins
pop
scas
push
cmp
mov
sbb
pop
jmp
out
mov
sbb
jns
jge
inc
xor
in
popa
add
shl
pop
ja
mov
cmp
retf
pop
stos
test
lea
in
dec
ss
icebp
into
inc
sar
jb
pop
test
jp
xchg
imul
sbb
pop
fwait
repz
xchg
jbe
inc
xor
and
add
pop
lods
add
mov
xor
mov
adc
ins
data16
outs
enter
mov
cdq
dec
std
mov
idiv
ins
fwait
cli
mov
sub
mul
inc
xlat
cli
xchg
aam
jno
test
dec
call
lock
imul
stos
pop
ins
push
lahf
jne
dec
mov
mov
loop
xor
push
fiadd
(bad)
aaa
nop
add
push
sub
adc
inc
enter
add
dec
enter
(bad)
in
jecxz
icebp
mov
nop
sbb
jmp
in
jmp
daa
xchg
test
mov
cmp
das
(bad)
fbstp
pop
bound
add
lods
mov
(bad)
inc
fwait
clc
or
loopne
bound
iret
aas
sub
cmp
outs
push
xchg
jl
mov
xchg
and
pop
jmp
sti
jns
jl
sub
jmp
call
or
adc
mov
push
outs
aas
int
mov
icebp
pop
inc
jmp
aaa
retf
dec
(bad)
or
dec
fincstp
call
and
cmp
push
mov
push
mov
dec
fmul
dec
js
shr
je
cmp
inc
xchg
adc
dec
jno
push
and
cli
or
sub
fild
retf
inc
mov
mov
ins
out
mov
popa
ss
mov
mov
gs
test
rol
mov
xor
push
out
adc
pop
mov
cmp
push
xor
int3
add
ror
pop
xor
cmp
imul
aaa
sub
sbb
cs
mov
mov
jne
xchg
sub
jecxz
cdq
jge
mov
add
sbb
bound
cwde
xchg
adc
icebp
hlt
stc
call
mov
or
mov
cmp
mov
xor
jo
mov
nop
or
addr16
add
pop
sbb
cmp
jg
imul
sub
mov
leave
(bad)
add
jne
stos
pop
repz
popa
mov
xchg
sub
repnz
mov
cmp
sub
lds
cwde
mov
or
cmp
cld
mul
ss
pop
fbstp
je
inc
and
cmp
out
setg
bound
aaa
in
xor
add
mov
jo
mov
dec
out
les
cmc
jns
push
test
cli
iret
lock
in
arpl
test
mov
mov
pop
in
or
ret
push
pop
in
or
xlat
int3
fstp
and
pusha
fst
ins
push
cdq
js
pop
xchg
mov
enter
or
xor
and
mov
mov
sahf
push
xor
sbb
cdq
xchg
lahf
sbb
and
xchg
aaa
mov
sbb
arpl
movs
mul
mov
dec
test
adc
pop
mov
bound
mov
loop
fdiv
inc
add
(bad)
dec
jecxz
cmps
sbb
inc
aad
sti
pop
cld
xor
push
ins
mov
imul
sbb
test
scas
jbe
in
adc
pop
iret
cmp
adc
fwait
sbb
sahf
jl
ror
cmp
dec
enter
mov
jp
mov
pusha
mov
mov
lea
dec
sti
cmps
lods
mov
in
mov
pushf
out
scas
(bad)
cmp
xchg
push
lock
sbb
in
fidiv
cmp
push
imul
aas
add
retf
adc
dec
adc
inc
in
pop
pop
pop
add
or
arpl
dec
pop
lea
je
and
in
ds
fisttp
pusha
mov
dec
add
ja
cld
pop
dec
xchg
(bad)
out
and
(bad)
in
loope
xlat
sub
nop
add
cld
xor
les
jecxz
dec
iret
inc
jmp
in
shr
sar
sub
sbb
mov
mov
cdq
adc
inc
(bad)
mov
jne
jle
cmps
cmp
imul
shr
push
fistp
sbb
repz
in
icebp
xchg
ds
sbb
pop
ret
dec
xchg
retf
adc
shr
mov
inc
pusha
in
pushf
add
xchg
fst
push
dec
mov
(bad)
push
or
stc
int3
fild
sbb
outs
mov
ins
push
pushf
inc
add
ror
sub
jb
or
sbb
fs
inc
sub
mov
in
fsub
jmp
(bad)
stos
arpl
lock
dec
loopne
arpl
test
sub
movsx
loop
jecxz
dec
js
mov
or
jbe
xor
push
pop
stos
pop
ins
push
mov
jnp
mov
mov
fsubr
and
xchg
push
ja
sbb
inc
sub
imul
lods
push
retf
bound
add
call
xchg
sbb
pop
push
mov
lock
pop
xchg
rcl
dec
xchg
not
mov
dec
mov
std
aam
retf
test
ss
push
dec
mov
jo
pop
mov
push
sub
les
push
cli
jl
into
add
call
aas
cwde
cmp
pop
fstp
test
pop
xchg
dec
inc
mov
inc
frndint
cdq
adc
jae
mov
(bad)
dec
jmp
xchg
push
or
sar
stc
fld
sub
adc
jecxz
repnz
inc
xchg
aam
fwait
dec
cmps
cmp
cmp
cld
iret
imul
pusha
or
or
push
xor
nop
xchg
cwde
mov
loope
sub
cmp
adc
and
jb
dec
push
lods
push
xor
xor
xlat
mov
aas
sbb
test
mov
and
push
idiv
lods
add
push
stos
mov
les
sbb
mov
clc
movs
(bad)
dec
push
mov
xlat
or
retf
dec
stc
inc
jb
and
inc
aas
add
ds
enter
push
xor
pop
adc
lods
or
sahf
jge
xor
popf
mov
dec
ror
daa
scas
retf
jno
inc
inc
ins
lea
cdq
sbb
mov
xor
(bad)
stos
adc
ins
mov
lods
call
nop
mov
les
fwait
mov
xor
cmc
and
aaa
pushw
gs
xor
lods
dec
push
jp
fwait
test
pop
cmp
outs
fcomp
cmp
sbb
aaa
xor
mov
sbb
jp
test
sahf
xor
(bad)
sbb
popa
je
stos
pop
repz
pop
sti
rcr
mov
xchg
push
stos
sar
imul
and
ret
fidivr
add
ret
sub
pop
fisttp
mov
xchg
push
dec
stos
sbb
inc
pushf
cs
pop
icebp
xchg
lods
xchg
or
stos
jl
repz
mov
arpl
add
add
add
adc
dec
inc
mov
inc
nop
mov
or
add
sbb
xchg
jne
jl
push
mov
clc
nop
(bad)
cmps
aam
inc
cld
sbb
sub
jl
mov
int
fiadd
mov
sub
stos
dec
cmc
push
or
nop
clc
repnz
in
xor
sbb
inc
mov
les
arpl
mov
mov
pop
jo
sbb
inc
or
es
sbb
mov
dec
xchg
movs
fwait
xor
and
scas
jmp
cli
pop
jno
mov
pop
inc
xchg
fs
and
ror
sti
rol
cmp
inc
push
test
loope
shl
dec
jl
fcom
pop
shl
cld
jns
xor
xor
and
cs
add
pop
call
sahf
leave
jbe
popa
xor
cdq
and
daa
imul
mov
lea
repz
loope
pop
and
inc
(bad)
xchg
pop
out
sbb
mov
dec
test
cmps
inc
aad
push
or
mov
mov
mov
push
xchg
mov
push
and
loopne
in
jecxz
outs
xchg
xchg
fild
cs
stc
jecxz
nop
sub
push
inc
add
sub
jl
jmp
aaa
std
xor
push
and
mov
iret
sub
imul
pop
and
stos
das
pop
cmp
in
inc
cwde
rcl
inc
and
dec
xchg
mov
psubd
sbb
adc
cmp
out
js
xchg
not
mov
inc
scas
es
test
les
sbb
mov
push
imul
inc
pop
lods
mov
xlat
pop
ror
jo
add
pop
add
sub
sbb
addr16
mov
ins
in
jmp
ja
sbb
stos
pop
repz
mov
xchg
push
and
stos
cmc
sub
rcl
and
fs
test
test
lods
inc
lds
clc
or
(bad)
test
retf
pop
jle
jno
push
xchg
pop
xchg
cmps
pushf
sub
inc
jmp
inc
push
aaa
in
outs
inc
sub
fwait
ds
xsaves
test
and
movs
xor
es
lock
inc
mov
mov
xchg
imul
mov
mov
jge
test
cmc
mov
cld
cmp
mov
(bad)
dec
sar
or
into
aas
jo
inc
cdq
cmp
movs
inc
aas
jns
mov
ret
ucomiss
outs
jmp
pop
pop
enter
add
or
push
jb
jge
sar
inc
push
jl
fist
icebp
outs
dec
inc
popf
pop
add
xchg
dec
rcl
or
ins
xchg
pusha
dec
fwait
lahf
mov
adc
repnz
pushf
mov
xor
(bad)
jo
xor
pusha
push
mov
jp
mov
jmp
add
sbb
jae
cmp
adc
push
(bad)
cs
xchg
test
cmp
ret
aaa
ror
inc
mov
dec
and
shl
sar
mov
das
sar
sbb
pop
pop
cmc
lods
push
jecxz
fidiv
push
sub
sub
aaa
je
movs
pop
add
mov
cs
outs
jmp
jle
int
pop
add
mov
fstp
movs
sbb
popf
xchg
and
ins
in
stc
mov
nop
lock
inc
pop
mov
push
and
ja
jmp
aad
mul
jbe
out
lea
ds
loope
test
dec
ins
xchg
mov
adc
sub
repnz
ja
ss
dec
(bad)
inc
cwde
push
sbb
mov
push
loope
push
fwait
cld
push
je
inc
retf
sub
add
ja
pusha
jae
jge
mov
pop
xchg
xchg
fdivr
inc
int3
fstp
je
jg
dec
cmc
popf
in
cdq
in
test
mov
mov
call
hlt
or
xchg
and
cli
aad
dec
lods
xchg
dec
cli
inc
into
dec
or
ret
(bad)
fadd
dec
inc
pop
inc
mov
sbb
inc
pop
dec
cwde
call
in
ror
xchg
xchg
jbe
inc
xor
add
add
inc
xor
and
add
cmp
push
mov
inc
scas
xor
movs
jmp
call
dec
repz
not
inc
repnz
mov
dec
fidivr
mov
xchg
aaa
stc
repnz
mov
xor
ja
cmp
fadd
jmp
icebp
or
sub
cmps
outs
adc
mov
mov
mov
cmp
ins
loope
sub
sar
cmp
and
add
pop
into
add
sbb
xchg
mov
sbb
outs
(bad)
repz
aam
jbe
mov
dec
inc
jmp
mov
pushf
aaa
mov
mov
in
mov
add
retf
call
xor
dec
shl
cmp
shl
in
(bad)
adc
movs
sub
cs
cwde
xor
iret
pop
inc
pop
aas
cmps
push
gs
sbb
ins
adc
outs
xchg
sub
enter
mov
dec
jnp
nop
dec
popf
movs
adc
loop
out
adc
outs
test
sbb
mov
push
xor
test
mov
fidivr
or
cmp
push
in
xor
or
jbe
sub
add
mov
icebp
inc
iret
mov
mov
push
in
add
xor
mov
rol
jns
dec
pop
stos
inc
jo
mov
outs
(bad)
add
jge
mov
shl
push
call
shl
add
jg
scas
cmps
aam
stos
sbb
mov
test
cmc
jmp
mov
inc
xchg
jp
dec
add
(bad)
enter
arpl
pusha
mov
push
or
mov
movs
mov
ror
pop
mov
jno
loopne
push
js
add
ins
pusha
mov
pop
call
ret
aas
lods
(bad)
push
sti
jnp
jge
inc
loop
in
jmp
xchg
push
adc
out
jo
inc
repnz
lods
jmp
mov
xchg
popa
or
leave
out
scas
les
loop
dec
call
jmp
dec
mov
push
sub
les
push
clc
xor
add
cmp
jge
push
or
jne
addr16
fldcw
mov
mov
ret
sbb
jae
mov
cmp
into
mov
cld
pop
dec
mul
lock
dec
xchg
push
nop
pushf
xchg
add
ret
dec
out
stos
inc
jecxz
test
sar
jp
xor
pop
outs
mov
jns
xchg
int
cmp
cli
push
xchg
cli
push
jb
call
ja
add
mov
mov
push
cwde
xchg
retf
xor
dec
push
sbb
mov
adc
push
repz
mov
jo
fwait
mov
int
inc
inc
(bad)
mov
sub
ds
retf
data16
pop
cmp
cvtdq2ps
push
xchg
mov
in
xchg
aas
(bad)
pop
fs
and
sub
add
pop
fisttp
nop
ja
nop
ss
(bad)
neg
inc
jge
jl
push
icebp
sahf
hlt
js
fbld
and
sti
std
or
push
movs
cmps
scas
shr
pop
jb
cmps
mov
xor
jmp
fs
movs
jnp
dec
(bad)
xor
fst
aaa
push
push
pop
lods
daa
je
xor
lahf
mov
mov
jmp
push
push
jmp
outs
js
sub
imul
xor
and
add
xlat
xchg
and
jno
mov
ficom
and
aam
pop
int
mov
stos
ret
or
xchg
aas
pop
mov
sbb
mov
adc
cmp
cld
fdivr
sbb
or
push
mov
cs
movs
test
outs
jmp
jp
mov
adc
pop
shl
mov
sub
xor
sti
addr16
je
mov
mov
ins
cdq
cld
or
in
das
in
pop
and
stc
sub
mul
shl
clc
(bad)
jae
call
out
xor
into
jae
cmp
cs
test
push
xor
mov
test
jge
jmp
adc
sbb
pop
arpl
jne
mov
sub
aad
inc
xchg
jmp
aam
push
jl
inc
fstp
mov
pushf
xchg
add
std
les
mov
shl
pop
xchg
pushf
mov
jmp
inc
scas
inc
pop
xor
shl
inc
call
inc
jl
inc
cmp
cwde
cdq
mov
sbb
neg
jge
lds
adc
push
xor
cmp
adc
pop
pusha
rcr
movs
sbb
or
stc
xchg
inc
lahf
mov
jnp
inc
test
popf
clc
addr16
cdq
dec
shr
psubusb
test
push
mov
aam
scas
rol
cmp
mov
cmp
test
push
cmp
popa
stos
add
arpl
jo
jns
mov
fmul
fcom
test
push
jbe
cmp
and
add
and
sbb
and
cmps
sub
out
call
push
jp
pop
xor
jg
cmps
jae
cli
xlat
mov
xlat
outs
movs
(bad)
mov
push
popf
rcl
rcr
cmp
mov
les
xor
sbb
repz
push
push
pusha
cmps
or
test
jnp
xchg
inc
sti
iret
xor
and
pop
xor
and
pop
int
outs
lods
pop
inc
fnsave
pop
in
mov
jmp
jle
jbe
and
pop
call
sub
(bad)
mov
push
inc
lock
(bad)
dec
push
add
retf
fs
icebp
(bad)
jae
cmp
dec
scas
sub
mov
push
cwde
xchg
mov
dec
sbb
jbe
(bad)
jl
mov
pop
sbb
adc
jge
xor
(bad)
fldcw
mov
outs
popf
mov
popa
fcmovnu
cmps
xor
ins
stos
dec
repz
mov
mov
sbb
in
xlat
mov
in
movs
(bad)
lahf
ins
inc
mov
jmp
aaa
stc
idiv
cld
loop
inc
xor
sbb
shl
ja
xor
inc
les
pop
push
mov
jns
mov
mov
iret
int3
add
or
pop
or
or
and
and
inc
mov
cmp
mov
add
inc
retf
mov
push
mov
repz
out
xchg
mov
retf
cmps
xchg
ins
lock
mov
mov
adc
jmp
dec
mov
lock
sub
cmp
pop
mov
ins
mov
mov
mov
push
retf
jbe
sar
into
add
push
in
add
xor
jmp
xchg
mov
arpl
and
in
xchg
and
jl
sub
mov
dec
mov
mov
adc
ror
xchg
xchg
inc
mov
mov
adc
sti
xchg
retf
push
mov
inc
repz
xor
sbb
repz
pop
jg
stos
push
ins
inc
mov
dec
jmp
addr16
adc
aas
lds
dec
add
and
pusha
jne
pop
ds
fs
xchg
imul
xchg
and
fldenv
jns
and
addr16
cdq
dec
fcom
movs
cmp
outs
sbb
sbb
fcos
xchg
(bad)
loope
dec
mov
cmc
cmp
iret
push
call
sbb
or
(bad)
lods
dec
cmp
js
mov
xchg
mov
sbb
inc
pusha
call
mov
jmp
movs
pop
nop
fbstp
pop
jge
mov
shl
in
in
jno
clc
rcr
les
jl
mov
fcmovnb
mov
sti
dec
pop
lods
movs
push
out
jp
and
imul
sbb
inc
mov
push
xchg
retf
int
and
cmc
das
mov
push
inc
popa
xor
and
das
popf
or
adc
push
xor
sub
imul
adc
sbb
hlt
(bad)
call
mov
test
push
or
pop
push
popf
test
lods
rol
aaa
sar
inc
or
ds
sub
mov
push
int
sub
cmps
dec
call
arpl
dec
std
cmp
ja
sbb
data16
jge
mov
gs
xchg
lahf
adc
cmps
sbb
outs
sbb
ins
mov
pushf
dec
out
ja
cli
mov
test
push
cwde
mov
test
loop
dec
xchg
push
sbb
repnz
in
jbe
daa
or
dec
test
bound
ds
sub
enter
pop
jae
dec
in
or
and
xor
jle
fistp
mov
jb
mov
jae
fsub
sbb
jb
pop
repz
pop
jmp
and
in
xchg
mov
ins
pop
test
cmp
stc
repnz
and
fstp
cs
sar
or
xchg
pop
inc
xchg
movs
fwait
mov
call
inc
aaa
int
xor
sbb
sbb
jg
mov
test
cmp
aas
fcomp
cmps
adc
jbe
rcl
mov
ins
pushf
mov
ins
sar
add
in
adc
jnp
mov
mov
xchg
mov
mov
das
aam
jmp
rcr
fild
cmp
icebp
jecxz
jmp
jb
popa
xchg
jns
mov
les
inc
(bad)
cli
and
xor
push
adc
cmp
call
mov
outs
xchg
mov
outs
jmp
loop
push
movs
pop
icebp
mov
dec
xchg
mov
imul
in
mov
fs
mov
repnz
xlat
fisttp
jmp
cld
sub
sbb
cld
aam
lds
pop
or
mov
inc
add
xchg
ds
je
stc
or
lock
je
add
xor
add
cs
push
pop
movs
dec
pop
nop
mov
outs
xchg
iret
mov
(bad)
xchg
arpl
dec
ret
mov
addr16
adc
les
cmps
clc
or
mov
div
in
loop
outs
jecxz
dec
xchg
pop
retf
cmp
push
pop
jl
mov
jge
pushf
ja
jne
retf
push
pop
clc
pop
sahf
cmc
addr16
fist
push
pop
int
sbb
and
test
movs
ds
sahf
movs
mov
sti
shl
xor
lock
jge
(bad)
pop
hlt
fadd
addr16
or
lock
cmps
movs
out
mov
mov
sub
stc
xchg
cli
loope
jg
test
pop
mov
push
ds
cld
fistp
xor
push
lods
pop
dec
inc
and
xchg
mov
out
mov
xchg
pop
adc
aaa
push
cs
mov
mov
fisttp
mov
test
pop
xchg
cld
xchg
es
sbb
dec
call
dec
jmp
adc
jmp
repz
icebp
cmc
cmps
mov
dec
dec
lods
mov
cmp
es
repz
pop
fbld
aaa
sbb
xchg
push
add
fdivr
mov
pop
adc
inc
int
add
add
and
push
and
xor
aad
push
xor
movs
adc
jb
lea
sahf
xchg
mov
dec
out
jb
stc
fisttp
test
sub
mov
aas
rcl
imul
dec
retf
sub
in
test
pop
sahf
cmp
and
xchg
mov
iret
addr16
cmc
adc
xor
and
add
push
sub
cmc
sbb
stos
inc
(bad)
mov
jl
mov
das
(bad)
cld
pop
lock
jle
movs
jb
sahf
hlt
ins
xchg
shl
out
mov
adc
mov
sbb
fimul
(bad)
shl
dec
bound
jmp
icebp
into
dec
in
inc
jo
cmp
sbb
push
mov
mov
iret
push
(bad)
sub
pop
pop
div
or
sbb
imul
jnp
cmp
sbb
and
leave
xchg
sti
jb
ins
jbe
sbb
(bad)
jge
mov
jno
repnz
test
sbb
test
aaa
std
clc
sbb
scas
sub
mov
fist
cmp
sbb
or
mov
fwait
repz
inc
mov
push
pop
mov
test
xor
or
xchg
mov
inc
fstp
xchg
daa
mov
add
repz
xor
mov
or
rol
mov
push
xchg
xor
sbb
loope
ret
repz
inc
mov
inc
lds
div
retf
push
fidiv
ins
pusha
sub
fnstsw
pop
rol
sub
add
xor
sbb
arpl
pop
cmp
sbb
and
frstor
sti
ins
jne
stos
push
xor
popa
out
add
in
out
add
sbb
mov
outs
add
dec
test
lods
test
jecxz
into
or
aam
fst
xor
outs
pop
inc
pushf
data16
pushf
mov
mov
sti
lea
xchg
bound
int
adc
add
or
fisubr
mov
ja
mov
inc
out
fist
mov
and
dec
fistp
and
and
hlt
xchg
cmp
jg
cmps
cmps
mov
sti
mov
das
add
les
xchg
mov
aad
(bad)
ds
sbb
(bad)
fcom
inc
inc
or
dec
jge
arpl
push
mov
push
scas
jbe
mul
(bad)
jbe
jbe
hlt
pop
sbb
das
mov
stos
jb
popf
sbb
(bad)
fwait
mov
cdq
fst
mov
ins
or
bnd
scas
mov
in
dec
sbb
mov
mov
popa
inc
mov
mov
mov
xchg
lahf
jns
pop
fadd
cmp
jmp
push
or
dec
mov
mov
fmul
or
xor
cmp
mov
das
frstor
mov
jp
test
jl
jmp
adc
dec
ins
mov
repz
out
xchg
rcr
fcom
xchg
push
jmp
call
dec
test
aam
scas
loop
ins
mov
inc
in
ficomp
cs
shr
(bad)
and
dec
mov
je
or
stos
mov
pop
jmp
outs
jge
adc
push
xor
adc
rcr
xchg
movs
cmp
cmp
and
fcomp
aad
jne
lods
push
add
mov
std
push
(bad)
ins
xchg
pop
ja
mov
sti
cmp
cmps
dec
fisub
sub
fucomp
shr
in
cmp
jg
sbb
inc
inc
jns
cmps
mov
pop
inc
clc
add
push
xor
push
jae
adc
scas
addr16
fldcw
pushf
cmp
movs
test
and
rcl
les
push
stos
pop
fadd
mov
les
and
cmc
mov
(bad)
test
dec
xchg
mov
cmp
std
leave
mov
mov
inc
loope
scas
cmp
repz
push
jo
jg
push
sbb
popa
xchg
fild
aad
mov
cmp
cmp
adc
pop
test
inc
push
lea
(bad)
xlat
cdq
cmp
(bad)
push
repnz
stos
push
in
mov
sub
stos
adc
dec
movs
mov
dec
ja
mov
cmp
cmc
loopne
ror
gs
fidiv
sub
sub
ss
pop
push
inc
jo
mov
mov
in
clc
jo
retf
jbe
inc
xor
inc
imul
push
cmps
outs
arpl
jns
mov
xor
cmp
fild
loope
pop
push
pushf
dec
cdq
fmul
fs
jg
(bad)
cmps
mov
movs
les
lods
cdq
xchg
aas
adc
sbb
test
jp
ds
push
stc
out
dec
lds
push
push
fnstcw
imul
xchg
xor
jmp
ror
or
(bad)
jbe
sbb
sti
cmp
ja
pop
test
inc
jo
je
shl
lods
cmps
mov
inc
xor
leave
int3
mov
repnz
(bad)
mov
xchg
je
and
mov
mov
mov
mov
hlt
add
shl
clc
cmc
(bad)
xchg
mov
sbb
cmc
push
cdq
adc
dec
mov
fs
mov
(bad)
xchg
push
ds
ins
ror
add
jmp
sbb
pop
mov
stos
push
push
movs
cmp
xchg
xor
inc
cli
fnsave
loop
jbe
mov
add
imul
sbb
mov
mov
aad
in
mov
push
xchg
xchg
add
cli
adc
test
imul
fist
inc
ja
bound
inc
es
mov
xchg
xor
iret
inc
fdivr
js
mov
pop
ss
inc
cmp
das
popf
and
push
retf
cmps
and
scas
mov
mov
push
cmp
xchg
rcr
std
fisttp
(bad)
xchg
les
jg
xchg
lock
mov
movs
xor
jp
xor
das
xchg
xchg
mov
cwde
ss
inc
mov
cs
add
(bad)
mov
fidiv
dec
pop
leave
or
sbb
fld
cmps
cmp
test
jl
in
mov
repnz
push
push
stos
pop
adc
dec
in
mov
pushf
adc
ins
scas
mov
out
xchg
aas
loopne
movs
(bad)
pop
js
test
dec
fnstsw
cmp
ror
pop
pop
pop
xor
sbb
retf
mov
cmp
clc
push
jmp
pop
pushaw
xor
ss
add
mov
jnp
mov
pop
repz
lea
push
add
int3
fwait
add
gs
mov
ins
test
xchg
push
lock
xor
mov
mov
mov
dec
mov
add
out
fdivr
pop
adc
inc
rcl
cs
cld
lods
inc
in
pop
jl
bound
dec
sbb
(bad)
xchg
mov
iret
or
ret
dec
jl
xor
push
push
add
cmp
fs
ins
xor
test
and
aas
lahf
fcom
cld
dec
inc
pusha
lea
fdiv
addr16
jmp
ss
repz
cwde
(bad)
retf
jge
mov
in
sar
mul
mov
aaa
or
clc
int
fidiv
popa
and
cmp
mov
jp
fwait
lds
int3
sar
ror
pop
sbb
xor
sub
pop
and
dec
arpl
pop
jl
jmp
jno
inc
jb
nop
outs
mov
cwde
je
mov
cmp
fldenv
movs
ffree
xor
push
add
(bad)
cwde
scas
les
mov
inc
jmp
sbb
xchg
(bad)
pop
push
push
stos
adc
xchg
push
pop
bound
pop
aad
call
pop
je
xor
sbb
sbb
sahf
jae
ror
jae
cmps
pushf
add
das
arpl
leave
test
(bad)
pusha
pop
cmp
jmp
mov
mov
xchg
push
cmp
stos
adc
jmp
pop
inc
cmc
test
out
jnp
dec
sub
enter
cwde
xor
or
push
ds
mov
iret
sbb
clc
jg
inc
aaa
retf
and
pop
sahf
ins
jmp
xor
cmp
rol
cli
inc
jno
mov
outs
call
sbb
stos
stos
ja
jnp
mov
mov
mov
test
mov
and
rol
xor
push
sbb
out
xchg
jmp
sbb
or
cmp
ja
pop
mov
adc
inc
cmps
dec
inc
call
out
fstp
aad
pop
push
mov
jb
retf
xchg
nop
ja
inc
mov
stos
shl
addr16
mov
popa
adc
std
or
stos
sub
pop
lock
call
es
xor
inc
daa
ins
fwait
mov
mov
xchg
lea
mov
xor
jae
mov
jne
inc
dec
sbb
ss
in
rcl
in
out
xor
jae
stos
push
xchg
out
loop
add
fidiv
imul
push
mov
mov
xor
in
in
icebp
pop
outs
sahf
sahf
push
out
lds
push
xchg
xchg
xlat
data16
add
fdiv
cmp
push
inc
pop
mov
clc
pop
call
inc
cmp
and
xchg
pop
mov
mov
mov
inc
mov
pop
and
(bad)
aaa
mov
arpl
sbb
inc
mov
dec
mov
jmp
mov
xor
in
and
inc
movs
loope
jmp
out
mov
mov
mov
cli
or
test
les
add
es
inc
stos
xor
jns
xchg
lds
int3
shr
jmp
mov
add
inc
inc
mov
xchg
mov
lods
sbb
and
scas
xchg
inc
mov
sbb
je
je
jb
mov
dec
pushf
les
and
sti
xor
repz
add
mov
aas
cmp
mov
lods
lea
pop
fmul
sbb
inc
push
push
addr16
mov
int
pop
pop
jmp
test
push
popa
and
adc
sub
pop
fisubr
mov
sbb
cmp
outs
in
retf
cmp
js
pop
test
dec
mov
test
test
mov
mov
lea
sahf
test
inc
(bad)
in
popf
add
mov
mov
cwde
mov
add
lods
pop
fnsave
jne
jge
sbb
or
out
mov
xchg
cmp
stc
and
inc
fbld
sub
push
loop
rcl
jnp
fisubr
(bad)
cs
pop
dec
jge
mov
and
push
popf
xchg
jecxz
jmp
or
bound
(bad)
rol
cmps
lods
rcl
shl
mov
repnz
ret
outs
cwde
mov
pop
lods
cmp
dec
fst
(bad)
loope
pop
pusha
les
jo
push
inc
push
icebp
and
jmp
push
je
sub
pop
xor
das
call
cmp
sbb
cmp
jmp
cmc
push
shl
sbb
and
mov
outs
ja
call
xlat
ret
lods
(bad)
dec
hlt
dec
idiv
pop
adc
call
add
pop
fimul
pop
inc
stos
sbb
movs
retf
mov
fwait
mul
mov
pop
inc
fadd
add
adc
fld
scas
push
sub
jno
push
ins
hlt
fistp
icebp
push
je
lea
cmp
cmps
shl
out
xchg
pop
add
in
push
jmp
sti
test
pop
jb
sar
lods
aam
bound
repz
dec
loop
sar
push
sub
mov
push
ds
out
mov
lea
(bad)
das
mov
and
add
dec
pop
mov
mov
push
lea
push
sahf
xlat
mov
lods
mov
je
jno
das
(bad)
scas
loopne
xchg
mov
je
mov
std
jbe
push
dec
sub
xchg
or
test
fidivr
cs
out
in
iret
inc
out
pop
push
pop
mov
jns
inc
xchg
retf
add
iret
das
mov
add
sbb
data16
mov
mov
movs
cmp
(bad)
xchg
rdtsc
dec
pop
out
sbb
jle
mov
mov
jge
loope
ins
(bad)
jmp
or
loope
xor
stos
stc
sbb
mov
mov
mov
push
sbb
call
rcl
cmp
pop
scas
sub
mov
fld
(bad)
push
inc
push
(bad)
xor
je
mov
rcl
inc
rcl
inc
jg
xlat
imul
fisub
mov
mov
push
xchg
repnz
jne
mov
or
mov
jnp
xchg
fwait
mul
adc
loope
aad
inc
outs
mov
inc
jecxz
in
xor
cmp
clc
jecxz
sti
es
dec
pushf
adc
dec
mov
fwait
lds
cld
clc
jno
cmc
je
pop
pop
mov
imul
pusha
(bad)
jg
into
and
into
cli
or
dec
jno
into
popf
dec
cwde
inc
jne
mov
dec
loope
xor
jae
mov
or
inc
mov
loopne
cwde
test
push
cmp
icebp
retf
fiadd
jl
fnstenv
popa
push
push
add
sahf
cmp
jp
int3
sub
jle
retf
jo
sbb
iret
ins
dec
cmps
ins
inc
lahf
push
inc
mov
dec
in
rol
les
push
pushf
sub
mov
dec
call
lahf
inc
es
loope
jo
jp
stos
mov
jae
xchg
movs
retf
dec
mov
push
sbb
clc
repz
inc
jmp
dec
jae
dec
sbb
xchg
mov
imul
add
jns
ret
add
xchg
add
or
jg
cdq
movs
sub
add
daa
mov
jge
lahf
pop
xor
mov
pushf
xor
(bad)
stc
sbb
cmps
cmps
addr16
fcomip
out
loop
sbb
outs
in
fidivr
cmp
int
int3
addr16
and
pop
mov
inc
sub
mov
scas
sub
outs
jecxz
xor
mov
adc
call
and
stos
(bad)
push
add
push
fisub
jo
inc
push
push
mov
cmp
xchg
push
dec
hlt
stos
mov
jecxz
xchg
test
mov
sar
mov
scas
mov
dec
test
pop
xor
(bad)
fadd
aas
je
inc
stos
sbb
inc
and
mov
mov
ret
cli
add
mov
pop
mov
mov
xchg
inc
pop
mov
sub
xchg
xor
sti
inc
bnd
cmp
call
add
xlat
mov
mov
add
cmc
cli
test
idiv
xor
or
xchg
xlat
inc
xchg
and
pop
mov
inc
pop
jnp
mov
mov
cli
cli
cmpxchg
mov
and
imul
sbb
xor
jl
lods
xchg
xor
jns
pop
mov
dec
adc
jg
test
mov
pop
ja
xchg
xchg
cld
repz
outs
out
mov
xor
je
xor
aas
dec
addr16
pop
add
mov
mov
call
pop
inc
jb
(bad)
pop
sub
pop
mov
data16
sar
adc
fwait
xlat
stos
or
and
stos
xchg
das
leave
sti
pop
jecxz
je
stos
pop
clc
movs
(bad)
popa
mov
out
xor
rep
sub
inc
xchg
scas
mov
jo
mov
outs
and
cmc
dec
dec
lods
fwait
dec
retf
jp
ds
inc
rcl
jmp
test
outs
pop
mov
movs
mov
pop
sti
icebp
aas
mov
dec
push
xor
xor
daa
add
add
fisttp
mov
outs
pop
and
call
data16
pop
jl
test
fbstp
xchg
jmp
rol
(bad)
pushf
jmp
mov
mov
icebp
(bad)
imul
push
repz
repz
call
jae
test
xchg
cmp
into
dec
out
cli
adc
es
add
or
push
fist
rcl
cmps
cmp
sar
arpl
and
clc
add
popa
jbe
mov
dec
mov
cmps
sar
std
xlat
mov
out
test
push
pop
in
test
inc
cli
test
pop
sar
and
std
stc
fist
sbb
cmp
xor
scas
cmp
jnp
lds
jnp
shl
mul
dec
sbb
and
add
add
imul
xor
test
add
movs
aaa
mov
push
xor
mov
inc
xchg
shl
(bad)
rcl
mov
push
lods
ins
ja
xchg
test
dec
aaa
lds
call
jmp
pop
push
fcomp
outs
push
mov
jge
mov
fild
jecxz
xchg
jb
jge
mov
adc
sbb
push
push
or
cmp
ins
(bad)
iret
xchg
sbb
jp
and
dec
cli
mov
xchg
sbb
fsqrt
mov
mov
pusha
jne
xchg
movs
aad
pop
sbb
shl
cmp
shl
enter
jle
xor
push
arpl
mov
mov
loop
daa
test
sbb
push
xor
xor
inc
popf
and
add
movs
cmp
into
mov
in
test
pop
mov
pop
inc
mov
addr16
cdq
dec
xchg
out
jge
sbb
sahf
pop
jnp
leave
xchg
adc
icebp
repnz
fidivr
mov
int3
push
cs
fcmovnbe
ja
pop
pop
es
sbb
sub
mov
mov
leave
frstor
xor
fdivr
inc
mov
fisubr
mov
sbb
mov
jl
fisub
test
xchg
pop
test
xor
and
lea
xchg
js
(bad)
mov
mov
push
aaa
cli
std
or
lahf
jnp
jp
sub
stc
inc
ret
pop
ja
jae
or
sub
mov
iret
cli
or
ret
inc
arpl
add
pop
sbb
and
cmps
push
pop
mov
mov
mov
and
ins
jns
mov
jno
loope
dec
loopne
push
xor
clc
nop
jo
dec
sti
xchg
mov
xor
pop
sbb
rcr
movs
loop
dec
push
imul
and
aam
fist
and
or
loopne
push
imul
loop
xchg
(bad)
add
or
xor
jb
add
jb
(bad)
push
ss
cld
cmp
and
(bad)
mov
cli
sbb
cli
mov
dec
xchg
rcr
push
xchg
sti
mov
movs
test
pop
mov
mov
(bad)
cld
and
inc
jne
lahf
inc
out
pop
(bad)
xor
sar
ret
dec
out
je
dec
mov
push
add
xchg
fld
mul
xchg
inc
pop
inc
adc
sbb
jns
xor
and
sbb
pop
push
stos
mov
jno
fnstsw
sbb
jb
lds
popf
xchg
fstp
retf
xchg
inc
and
inc
sti
movs
test
sbb
ds
cwde
mov
xchg
dec
jecxz
aad
sub
ror
jp
jns
or
pop
push
xchg
mov
mov
jmp
data16
pop
sub
arpl
and
mov
cmps
pop
jle
cmps
mov
call
and
scas
les
icebp
call
test
les
xchg
jnp
xchg
cmps
aam
cmp
cmc
ret
sub
push
cli
cli
fadd
adc
outs
call
jns
shr
fisttp
ret
je
xor
and
inc
pop
adc
imul
cmp
cmps
mov
aam
das
(bad)
sti
ja
pop
jbe
scas
jae
shl
xchg
in
test
sahf
or
into
shl
lea
ja
call
cld
ror
mov
xor
push
(bad)
dec
or
std
neg
push
out
cmp
dec
mov
inc
cs
mov
ror
fmul
std
cmovb
xor
pop
sub
adc
and
sub
push
mov
xchg
and
inc
(bad)
fdivr
retf
jl
jbe
jle
mov
inc
mov
xchg
jg
clc
sti
cmc
push
out
inc
xchg
xchg
lahf
shl
jbe
xchg
xchg
test
sbb
dec
fs
cwde
inc
ror
sub
pop
into
xor
adc
pop
lahf
mov
mov
push
stc
pop
in
add
add
adc
jae
(bad)
aas
nop
adc
(bad)
push
sbb
pop
jmp
jmp
bnd
mov
push
loope
dec
repz
test
out
jg
lea
outs
mov
stc
cli
stos
into
jmp
js
aam
out
push
rcl
sub
jns
cmp
dec
cmps
and
jle
sbb
icebp
mov
fild
push
mov
adc
mov
outs
jne
jbe
mov
pop
mov
fs
aaa
cwde
div
push
push
stos
push
ret
dec
mov
mov
xchg
add
ins
xchg
xchg
aad
mov
test
in
scas
sar
pop
clc
ds
clc
in
pop
clc
push
addr16
movs
sbb
sub
xchg
xor
sbb
cmp
adc
dec
dec
sahf
push
or
(bad)
jno
push
inc
rcr
xor
jnp
movs
dec
popf
fcomp
push
mul
mov
mov
jne
call
lock
adc
das
mov
jns
adc
cmp
or
jns
call
sti
lea
adc
pop
sub
sbb
bound
jl
into
call
cmp
cmp
mov
je
jno
push
(bad)
movs
enter
xchg
jg
xchg
jns
std
not
imul
push
xchg
call
ret
sub
sub
inc
inc
ds
mov
outs
stos
cmp
mov
cs
mov
xchg
dec
sub
aas
test
je
inc
xor
pop
outs
add
lahf
and
and
cmp
cmp
adc
pusha
xlat
rol
sbb
cmp
and
mov
call
push
std
shl
add
inc
mov
inc
je
mov
repnz
fidivr
mov
(bad)
scas
pop
fbstp
addr16
lods
jno
popa
xchg
imul
cwde
cmp
jmp
mov
sbb
es
jl
sub
jne
sbb
fs
mov
js
mov
push
jmp
loope
outs
ins
stos
pop
aad
repnz
jmp
or
mov
mov
add
mov
js
in
cli
repnz
dec
sbb
out
inc
pop
out
lock
pop
ja
ficomp
jns
xchg
(bad)
mov
dec
stos
loope
or
ficom
and
or
mov
stc
imul
or
mov
(bad)
mov
data16
pop
hlt
into
(bad)
and
xchg
jnp
inc
mov
rol
mul
inc
mov
test
aas
cld
ret
lock
push
mov
sub
cs
fist
inc
jbe
dec
pushf
sbb
jmp
push
mov
into
lods
dec
push
cmc
addr16
jmp
dec
fstp
das
js
add
cmp
pminsw
mov
xor
mov
sub
pop
xchg
int3
cdq
cmp
jnp
push
lea
mov
inc
cmps
jmp
xchg
mul
xchg
inc
mov
xchg
push
sbb
aad
into
jmp
inc
test
inc
push
cmp
push
icebp
inc
pop
cmp
pop
outs
push
cli
inc
or
nop
cdq
mov
inc
inc
mov
fcomi
das
mov
xor
sbb
cdq
sub
test
sbb
cmp
imul
ins
in
int3
fwait
aas
mov
add
(bad)
mov
inc
mov
jmp
sub
(bad)
xchg
jp
gs
stos
mov
xchg
mov
js
loopne
out
jecxz
inc
sbb
mov
inc
lods
or
sub
nop
sbb
outs
cwde
cmp
and
fnstenv
cwde
sar
sbb
es
sbb
pop
mov
mov
js
mov
cmp
in
mov
xchg
shl
data16
push
enter
loopne
loop
xchg
mov
sbb
in
aaa
in
xchg
neg
mov
test
loopne
(bad)
pop
pop
jmp
es
bnd
ss
sbb
test
scas
test
ret
ds
add
cmc
jg
inc
xor
inc
das
jo
adc
imul
mov
or
pop
dec
cli
jmp
sbb
adc
inc
mov
jg
scas
cmp
jno
mov
mov
scas
int
mov
test
adc
in
fsqrt
cmp
shr
push
add
enter
jmp
imul
or
mov
fistp
loope
mov
jp
pop
cmp
inc
adc
add
lods
outs
pop
(bad)
and
mov
xor
fistp
loop
jae
test
xor
dec
in
jno
std
enter
outs
test
push
mov
(bad)
xchg
lock
cmp
or
idiv
out
jnp
add
push
fisttp
ins
dec
mov
pop
jno
fwait
int
or
or
xor
inc
gs
push
popf
sub
mov
mov
ja
cwde
xchg
and
cmp
icebp
jns
pop
jne
sar
repz
cdq
loope
adc
mov
pop
cmc
not
mov
je
sahf
nop
popa
add
ret
fild
mov
dec
repz
xor
pop
call
sbb
inc
mov
inc
jnp
inc
add
mov
push
out
sbb
inc
out
outs
or
cmc
pop
(bad)
jbe
popa
pusha
stos
dec
fstp
mov
shl
sbb
pop
pop
fstp
iret
out
mov
mov
pushf
ins
call
sahf
add
push
and
icebp
xor
cmp
in
fadd
inc
push
push
jg
push
sbb
test
mov
aam
lahf
clc
pusha
fs
jmp
and
aaa
xor
das
lods
ja
jb
add
fnstsw
jno
xchg
fadd
mov
les
gs
dec
test
mov
cmp
add
mov
out
popf
data16
loopne
test
rol
call
or
xor
sbb
mov
fwait
mov
push
cs
in
add
pop
fidiv
sub
and
das
mov
scas
jne
mov
push
mov
pop
out
mov
lods
sti
jbe
dec
pop
push
test
les
imul
(bad)
mov
adc
aas
mov
adc
stc
hlt
jmp
icebp
inc
outs
mov
push
out
jmp
(bad)
mov
push
push
mov
sbb
sbb
fisttp
addr16
or
aad
push
bound
aas
sahf
inc
lods
adc
and
mov
in
scas
xchg
aas
(bad)
cld
or
sbb
not
push
xchg
sbb
xlat
mov
lea
add
adc
stos
cmp
cmp
sti
in
pop
cld
inc
add
inc
stos
or
add
icebp
xchg
cdq
mov
out
sub
jno
int
sbb
adc
mov
stos
and
sbb
mov
dec
lea
inc
test
jo
dec
add
pop
retf
xor
xchg
mov
dec
call
fucomp
push
repnz
test
les
lahf
mov
xor
int3
std
out
rol
inc
out
fnstcw
test
sub
pop
jg
mov
retf
lods
test
out
add
add
cmp
jae
cdq
and
mov
mov
paddsw
xchg
pop
inc
(bad)
(bad)
cwde
cmp
inc
push
mov
dec
test
xchg
retfw
and
mov
sbb
xchg
mov
cmc
sbb
stos
dec
shr
push
push
dec
mov
push
jle
mov
inc
ds
test
inc
mov
cwde
mov
enter
pop
inc
mov
sub
adc
movs
xor
in
lahf
adc
and
rol
aad
inc
pop
mov
popf
fadd
pusha
xchg
xchg
push
and
(bad)
cld
add
jns
mov
ret
inc
inc
call
mov
in
add
retf
dec
jecxz
rcl
and
outs
test
outs
inc
add
popf
mov
stc
outs
in
icebp
sbb
aas
into
sbb
push
adc
mov
rol
stc
imul
cmps
sbb
test
out
fst
ficomp
jbe
jl
mov
mov
sub
add
lods
inc
dec
test
fdiv
call
in
push
sub
push
loope
push
pop
xor
and
xchg
(bad)
inc
cld
cli
or
into
pop
push
inc
or
and
jnp
add
add
mov
lahf
ds
sub
add
mov
dec
push
pop
popf
pop
(bad)
popa
loopne
cmps
pop
mov
xchg
adc
inc
mov
(bad)
iret
sub
arpl
mov
scas
(bad)
pop
sbb
cmc
pop
adc
cmp
dec
mov
jo
push
out
iret
pushf
adc
iret
push
(bad)
cmp
mov
adc
out
jae
push
sub
sbb
dec
jae
jmp
pop
bnd
jg
pop
retf
inc
cmps
rcl
and
mov
mov
sahf
outs
jg
cmps
hlt
sbb
mov
mov
mov
(bad)
cs
ds
or
rcl
jo
call
in
or
neg
fs
mov
bound
pop
fldenv
retf
popf
mov
dec
(bad)
fucomip
aaa
mov
pop
xor
dec
sti
(bad)
aam
stos
cld
mov
jmp
aam
add
je
mov
js
loopne
out
mov
test
(bad)
dec
ficom
pop
push
int3
jmp
inc
out
pop
jb
dec
scas
outs
arpl
jae
dec
xchg
mov
nop
cmp
push
out
sbb
xor
dec
sub
adc
arpl
pop
ss
jne
xlat
test
add
jb
scas
test
shl
hlt
inc
jbe
mov
jecxz
inc
rcr
cli
stos
and
ins
repnz
sbb
fcomip
cmp
scas
dec
idiv
sub
iret
jbe
cmp
rcl
es
icebp
xchg
mov
outs
out
rcr
test
bound
and
jbe
mov
test
repnz
sbb
push
mov
dec
jmp
sti
jno
sbb
inc
mov
ins
mov
pushf
push
retf
(bad)
icebp
or
jle
mov
mov
mov
daa
retf
repnz
xchg
xor
add
test
lds
push
push
stos
sbb
inc
movs
inc
cs
call
in
or
push
arpl
mov
sahf
cs
inc
mov
mov
mov
imul
jbe
dec
jb
xchg
jb
xchg
clc
jg
scas
xchg
push
xchg
mov
and
dec
cmps
popf
mov
ja
stos
mov
lea
xor
pop
fidivr
cs
clc
fistp
cmp
dec
fimul
imul
mov
mov
or
push
test
sbb
cmc
gs
pop
xor
xor
pop
xchg
adc
dec
outs
sahf
jp
cmps
sub
mov
sub
scas
xchg
mov
pop
push
pushf
inc
hlt
(bad)
lock
loope
mov
in
push
clc
inc
pushf
xchg
in
aaa
popf
pop
push
xchg
mov
push
xor
dec
mov
sub
xor
(bad)
or
pop
dec
movs
ss
arpl
inc
sbb
mov
pop
scas
imul
push
dec
push
cmp
push
sbb
cmp
sub
mov
jo
cwde
xchg
or
(bad)
cs
mov
jge
jno
dec
loopne
(bad)
inc
mov
xchg
js
repnz
cmps
mov
aas
mov
mov
ret
inc
cmp
sbb
mov
int
lds
je
dec
mov
imul
mov
cld
lea
(bad)
push
or
(bad)
or
adc
loop
mov
mov
inc
popf
or
leave
test
nop
repnz
ja
mov
dec
xchg
ret
xchg
dec
cmc
mov
and
leave
sbb
das
movs
pop
jnp
mov
ds
shl
xchg
icebp
loop
jnp
fst
sub
sbb
fisttp
xor
fcomp
cmp
out
rol
es
add
ds
mov
mov
adc
mov
sub
add
fisubr
lds
bound
inc
mov
in
or
movs
mov
scas
fnstcw
mov
xchg
outs
aaa
sar
test
mov
or
into
icebp
fiadd
es
dec
mov
inc
push
jne
mov
mov
int3
xchg
aas
movs
cld
jb
inc
xor
mov
cwde
or
dec
jb
jl
xchg
cmp
mov
jae
(bad)
loope
sahf
sti
push
aam
pop
js
outs
shl
mov
aaa
idiv
xchg
test
jns
fwait
les
cmps
cld
lds
mov
inc
jmp
sti
lods
push
call
cmps
or
adc
mov
popf
stc
sbb
inc
in
sub
lods
sub
stos
dec
xor
cmp
sbb
or
rcl
cli
sbb
fidiv
xor
sub
fist
movs
rcr
xchg
jg
mov
aam
out
retf
mov
xchg
scas
gs
fidivr
fild
xor
or
push
fwait
push
and
test
scas
sub
ror
mov
(bad)
pop
pop
mov
xor
or
xchg
jae
stos
cmp
lods
mov
aam
xchg
and
jno
mov
popf
out
sub
bound
jmp
lea
ja
mov
push
and
repnz
cld
out
dec
lahf
popf
dec
idiv
cmp
daa
jmp
arpl
pop
movs
or
popf
push
or
xchg
mov
outs
cdq
cli
addr16
and
inc
sbb
adc
icebp
imul
inc
popf
movs
or
and
fsubr
xor
add
pop
retf
sbb
xchg
jmp
jbe
int
mov
in
mov
jl
test
jecxz
retf
sbb
(bad)
xor
enter
jo
cmp
inc
cmp
mov
nop
sub
fstp
out
sbb
cmp
and
and
arpl
dec
xor
and
mov
pop
int
xchg
inc
popf
bnd
outs
outs
jg
pop
aad
cmc
jb
ret
jmp
cmp
jge
mov
ja
mov
ret
xchg
mov
aaa
hlt
push
sub
or
xor
sbb
and
mov
mov
jmp
add
xor
outs
sbb
cmp
pushf
push
cmp
or
stos
fwait
in
xor
ins
out
fisttp
sbb
sbb
jecxz
or
push
adc
fdivp
sbb
push
mov
mov
dec
rol
mov
adc
retf
ficomp
gs
in
cmp
icebp
jbe
xor
ins
jge
mov
mov
call
ret
mov
jno
into
pop
sbb
scas
pop
mov
ror
retf
nop
retf
xor
mov
xchg
stc
sbb
pushw
pop
pushf
and
mov
inc
cdq
les
ss
mov
xchg
test
addr16
test
out
in
mov
js
mov
test
stc
ret
ss
sbb
push
test
mov
fild
cli
push
mov
dec
jge
and
adc
mov
push
inc
cmps
js
mov
sahf
ss
and
in
sbb
add
movs
jno
mov
dec
xchg
in
loopne
loope
or
repz
movs
test
ret
inc
cmp
sub
dec
lods
mov
das
push
or
mov
push
bound
sbb
lds
sbb
int3
das
xchg
clc
popa
dec
inc
or
inc
push
or
jle
jnp
scas
jp
sbb
cmp
sti
stos
loopne
sahf
sti
sbb
jne
and
xor
cld
jle
cmc
rcl
mov
dec
jo
test
add
std
aam
mov
movs
popa
div
cmps
pop
push
push
retf
in
pop
lds
push
pop
xor
dec
add
stos
call
stc
and
and
pop
xor
cmp
imul
ss
pop
mov
and
fist
icebp
outs
jge
test
fs
shl
popa
mov
xchg
add
sar
sahf
js
sbb
push
aaa
sti
or
movs
push
jecxz
fimul
(bad)
in
xlat
sub
xor
les
js
sti
inc
sub
mov
stos
push
and
sbb
fld
arpl
sub
add
lods
and
lea
mov
aaa
xchg
sti
push
bnd
push
(bad)
lds
les
dec
xchg
retf
test
jecxz
movs
mov
in
pushf
sbb
stc
les
cwde
aam
loope
fisubr
stc
pop
cld
cmp
cmp
add
pop
scas
push
or
xchg
xchg
mov
(bad)
out
add
in
sub
xor
icebp
ins
ins
mov
push
test
mov
xor
inc
(bad)
fist
fs
mov
mov
dec
xchg
in
test
mov
test
in
xchg
mov
push
arpl
std
rcr
mov
sbb
adc
clc
into
inc
sti
inc
jp
cmp
inc
cmp
mov
mov
inc
out
loop
or
cmp
add
fwait
das
mov
fld
mov
outs
in
(bad)
sbb
and
mov
mov
sbb
dec
in
loopne
cmps
shl
into
nop
push
push
in
mov
test
js
call
xchg
dec
imul
das
pop
cmp
(bad)
fist
sbb
jle
adc
mov
mov
pushf
inc
fild
stc
das
mov
je
ja
mov
adc
btc
ficomp
dec
mov
inc
mov
mov
cmp
pop
out
fild
icebp
bound
lods
jnp
movs
aad
xchg
(bad)
loope
in
adc
ja
stos
lods
mov
test
dec
in
scas
xor
cmc
jecxz
aam
pop
push
lods
ret
sub
jp
ds
cs
iret
jb
cmp
sub
cmp
mov
movs
lds
jmp
jns
push
sbb
xor
add
stos
adc
push
xor
(bad)
sbb
jmp
loope
add
popa
cmp
dec
ror
std
das
shr
mov
push
pushf
out
test
push
(bad)
mov
not
daa
aaa
and
call
fistp
jne
mov
jns
mov
ror
stc
ds
xor
add
mov
and
fs
ins
and
add
cmps
(bad)
sbb
xor
scas
pushf
aas
(bad)
cld
jp
adc
lds
jno
mov
es
xchg
xchg
ins
xchg
mov
lods
cmps
mov
cmc
repnz
ficom
cwde
movs
push
jmp
in
mov
cld
pop
pop
add
pop
ins
push
mov
or
mov
fist
sub
add
inc
ss
push
fwait
cmp
push
mov
dec
(bad)
fs
cmps
dec
push
repz
xchg
or
and
mov
aaa
popf
loop
retf
jnp
dec
popf
pop
lock
aam
xchg
repnz
adc
rcl
mov
pop
push
fwait
xchg
xchg
add
retf
jecxz
jp
mov
or
sub
in
pushfw
sbb
add
jno
cmp
outs
sbb
mov
ja
lea
mov
jns
ja
call
push
cmc
push
(bad)
imul
stos
mov
or
dec
out
mov
jecxz
jbe
(bad)
movs
call
xchg
pop
xor
repz
xchg
pusha
mov
cli
ret
fisubr
mov
push
in
push
sar
pop
cld
ds
outs
lea
sbb
test
scas
sub
mov
icebp
cli
push
mov
push
dec
add
popa
aaa
add
add
mov
mov
xor
xchg
scas
cwde
aaa
test
jbe
ins
add
pop
xor
out
jno
jmp
mov
dec
xchg
mov
cmova
test
push
rcl
push
ds
fidivr
and
jg
or
fs
inc
sub
mov
mov
out
sbb
inc
sbb
pop
cs
imul
(bad)
bswap
outs
mov
dec
nop
mov
or
fs
xor
push
jl
pop
cld
mov
stos
jbe
sahf
inc
pop
(bad)
rcl
(bad)
mov
cmp
xchg
or
repnz
icebp
cdq
inc
dec
mov
int3
xor
fst
xor
sub
call
test
sbb
imul
push
sbb
cmp
add
mov
sbb
mov
dec
nop
mov
or
or
stos
lahf
inc
mov
jnp
shl
fsub
mov
es
les
movs
(bad)
(bad)
sub
cld
xor
stc
les
lods
dec
repnz
fidivr
aaa
or
aam
inc
lock
inc
or
push
dec
cmp
jbe
jns
mov
cmps
pop
cdq
cli
xor
adc
xor
jg
or
fs
jl
mov
sbb
pop
dec
out
fdivr
push
scas
rol
test
shl
mov
mov
jno
in
mov
in
idiv
pop
xchg
shl
mov
push
cmp
int3
(bad)
in
pop
stc
inc
jo
and
cmp
jne
test
jnp
fsub
cli
push
inc
jae
cmc
xor
arpl
cdq
and
adc
add
xor
xchg
cmp
jnp
lea
(bad)
xchg
repnz
ja
mov
scas
jns
aad
test
sbb
pop
cmp
repz
inc
jns
mov
xor
aad
popf
xor
jl
push
pop
inc
sub
pop
call
ins
out
and
xchg
jns
pop
and
pop
adc
add
mov
pop
pusha
scas
push
inc
sbb
aad
cs
dec
inc
(bad)
jmp
sti
jge
inc
mov
push
mov
xchg
pop
out
enter
dec
mov
pushf
(bad)
push
mov
test
lock
jecxz
jo
pushf
call
sub
jmp
pop
sbb
or
adc
mov
xchg
lea
mov
aas
call
and
sbb
mov
pop
xchg
mov
pop
out
mov
fstp
jno
imul
retf
fucomp
jg
test
test
gs
mov
lea
test
inc
into
sub
cli
out
iret
dec
ret
sbb
pop
jge
std
inc
add
fwait
(bad)
xor
xor
xor
xor
jl
push
mov
jle
fist
xchg
push
stos
mov
inc
loopne
xchg
xor
jnp
lods
jbe
mov
cdq
push
loop
jb
in
mov
mov
xchg
cmp
ins
mov
xor
or
test
or
or
jg
jbe
jne
cmps
mov
sbb
shl
push
leave
fld
jns
jecxz
sbb
scas
push
mov
xchg
pop
pop
mov
call
inc
and
lods
xchg
xor
push
mov
push
call
stos
repnz
push
das
stos
pop
ja
mov
add
int3
add
cwde
cmp
push
jmp
sub
pop
fistp
add
sub
loopne
or
sahf
mov
test
cmp
pop
pop
in
aas
je
bound
arpl
cwde
or
int3
out
sahf
fdiv
ins
jb
popf
dec
test
ja
mov
std
sbb
jp
std
test
xor
outs
push
xchg
les
mov
repz
ins
xchg
scas
cmp
pop
fisttp
ss
cld
lods
data16
jo
pop
mov
cs
push
pushf
xchg
mov
jmp
push
cmp
xor
push
add
push
fild
test
pop
test
push
mov
dec
les
sbb
jge
jle
dec
cld
movs
aam
test
mov
and
fild
xchg
pushf
int3
dec
mov
jmp
daa
mov
xchg
std
jecxz
jg
xchg
pop
jmp
xor
xchg
repz
and
arpl
cmp
adc
lods
mov
cmps
(bad)
stc
nop
or
mov
sbb
add
add
mov
imul
fimul
cmp
pop
xor
xchg
aaa
mov
jb
pusha
andps
pop
cmp
jo
xchg
jb
std
xlat
test
test
push
mov
test
sti
xchg
leave
jecxz
push
lods
inc
fcomp
sub
aam
ret
xor
test
ins
push
mov
cmp
cmps
lods
pushf
dec
cmp
push
xchg
call
jbe
xor
pop
sbb
adc
pop
mov
retf
ins
push
fisubr
ror
mov
sub
xchg
enter
repz
inc
jbe
xchg
dec
add
ins
xchg
shl
sbb
jmp
add
mov
bound
adc
imul
jmp
jnp
mov
xor
lods
pushf
add
fisubr
mov
add
jno
ret
and
jae
xor
das
mov
mov
ins
test
ins
loopne
mov
neg
jne
mov
js
enter
stos
popa
pop
std
mov
xchg
loope
jmp
sti
xchg
xchg
xor
loopne
(bad)
push
ins
nop
test
xchg
repz
out
fpatan
and
and
inc
call
jns
mov
stos
push
sub
arpl
push
push
or
adc
pop
bound
inc
xchg
mov
imul
sti
(bad)
fiadd
je
and
les
or
sti
xchg
add
ins
or
pusha
out
test
aaa
std
repnz
mov
sub
sub
cmp
sbb
push
mov
pop
xchg
cmps
mov
(bad)
stc
addr16
xchg
jbe
je
ret
jb
adc
jle
rcl
mov
dec
xchg
mov
push
aaa
and
stos
movs
add
inc
push
fisubr
mov
popa
cmps
mov
dec
in
jg
mov
repz
arpl
fwait
lds
or
pop
pop
retf
dec
iret
repz
xor
sbb
xchg
push
lods
mov
call
push
xor
sbb
jg
data16
pop
inc
mov
dec
movs
mov
cmp
retf
(bad)
out
add
jnp
mov
xchg
mov
test
lock
shl
adc
mov
add
shr
cwde
test
sub
iret
addr16
jne
xor
pop
pusha
out
call
in
xchg
or
icebp
push
fs
sub
xor
jbe
cmp
je
pop
adc
sub
mov
cmp
fstp
fldenv
inc
(bad)
in
lock
stos
(bad)
xchg
addr16
addr16
jmp
push
out
mov
test
das
scas
push
jnp
mov
push
daa
jmp
dec
ins
xchg
lods
inc
xchg
pop
cmc
sbb
enter
call
dec
cs
dec
or
(bad)
fwait
(bad)
daa
fadd
fdivr
ds
sub
add
sub
jne
bound
xor
xor
ins
out
(bad)
sahf
pop
int
jns
sbb
lea
mov
aas
xchg
fdivr
es
ror
mov
jb
test
retf
mul
sahf
fmul
push
sar
and
callw
sbb
pop
push
xchg
data16
xchg
dec
shl
das
mov
push
pop
add
leave
pop
adc
jl
movs
push
xor
lahf
sbb
jae
fist
hlt
outs
arpl
lds
xchg
dec
lock
jbe
retf
sti
mov
int
repnz
popf
mov
sbb
fmul
xchg
and
fidivr
and
cli
out
fild
xor
xor
lea
add
cmp
push
out
nop
sbb
repz
pop
xor
sub
sbb
arpl
bound
and
cmc
mov
fistp
dec
(bad)
(bad)
bound
bound
shr
retf
inc
in
cmps
mov
pop
mov
jmp
fdiv
jecxz
leave
sub
ds
out
clc
inc
into
xor
ss
push
mov
push
xchg
mov
retf
cli
add
cli
jne
jns
clc
cmp
ja
sbb
inc
je
jl
stos
sub
movs
(bad)
sbb
xor
rcr
aaa
lods
clc
jb
ins
jbe
popf
ins
repz
loope
call
shr
stos
jecxz
popf
pusha
jne
mov
add
xchg
sub
push
daa
pop
cmp
mov
push
loopne
addr16
mov
jb
jno
(bad)
xchg
mov
add
jl
repz
mov
dec
int
(bad)
and
into
add
shl
push
mov
dec
jl
mul
mul
pusha
mov
pop
call
xor
xchg
(bad)
mov
jae
mov
push
xor
xchg
cdq
test
cmp
sbb
sti
(bad)
ss
outs
les
je
dec
sub
mov
fld
or
xor
xor
pusha
and
and
imul
ins
xchg
mov
pop
or
sbb
arpl
mov
inc
cdq
(bad)
mov
sub
xlat
test
stos
lds
movs
inc
ja
mov
adc
fiadd
dec
loope
mov
cs
shr
or
xchg
pop
jl
dec
sbb
mov
fwait
cli
or
inc
ret
addr16
pop
(bad)
das
mov
lods
je
nop
xor
mov
dec
out
xchg
daa
mov
jb
add
lods
dec
aad
aam
mov
xchg
std
fsub
mov
lea
pushf
xchg
fst
imul
ds
fdiv
shl
fidiv
or
test
pusha
lahf
xchg
movs
mov
test
or
cmp
add
pop
mov
mov
xor
or
and
int
adc
jbe
adc
repz
ret
jecxz
lds
mov
cmps
cwde
(bad)
sbb
test
repnz
fadd
jle
fwait
scas
jno
dec
aad
or
push
out
adc
scas
xor
mov
mov
cld
in
xor
aas
mov
xor
push
mov
lahf
jg
(bad)
cs
into
loope
cmp
(bad)
test
jo
nop
fnstcw
xchg
les
add
rol
mov
mov
fild
xchg
mov
add
rol
retf
mov
add
repz
mov
loop
lds
dec
or
pop
push
dec
xchg
mov
mov
jmp
pop
cmp
ss
pop
daa
sub
inc
pusha
test
cmp
xor
and
fst
push
repz
pop
xchg
fistp
xor
ret
cmc
push
jmp
mov
movs
inc
push
xchg
mov
push
adc
add
xchg
je
xor
dec
cs
jmp
mov
retf
add
sbb
js
bound
push
out
xchg
(bad)
mov
pop
iret
outs
clc
int3
sub
clc
jb
jae
into
pop
sbb
cmp
outs
dec
mov
pop
mov
mov
jmp
mov
scas
stc
pop
aad
addr16
push
mov
dec
call
mov
sbb
rol
(bad)
mov
test
shl
mov
neg
adc
adc
xchg
mov
stc
xor
cmp
aaa
daa
jnp
(bad)
jbe
frstor
rcl
xor
add
xor
push
bound
(bad)
jmp
push
inc
sti
shl
les
ins
shl
(bad)
jno
shl
push
test
hlt
cmp
xchg
xchg
mov
mov
fwait
mov
daa
cmp
cld
fistp
aas
jo
inc
stos
sbb
mov
lds
ins
out
push
xchg
neg
or
rcr
adc
lahf
sub
or
imul
mov
(bad)
sbb
or
icebp
stos
sbb
jnp
lods
js
movs
shl
shl
(bad)
hlt
xchg
add
ins
or
pop
mov
fcmovnb
test
inc
xlat
dec
fidivr
push
sbb
fcmovbe
pop
out
cmp
inc
mov
aaa
sub
(bad)
jle
hlt
jp
sbb
xor
jo
adc
sbb
or
movs
inc
inc
popf
mov
xor
aam
aas
mov
inc
repnz
jmp
popa
rol
sbb
outs
test
sbb
push
dec
(bad)
stc
xchg
(bad)
fidivr
cwde
aam
not
pop
xor
sti
jecxz
jmp
add
data16
sbb
mov
jne
mov
fild
fistp
fsubr
gs
inc
push
pop
movaps
fs
mov
push
mov
cld
sbb
hlt
xchg
cmp
data16
outs
rol
inc
xchg
stos
inc
out
call
out
xchg
lea
btc
fiadd
mov
das
cmp
jecxz
(bad)
push
sti
add
aas
dec
pop
mov
(bad)
mov
repnz
das
mov
pop
je
xor
pop
sub
sub
jnp
mov
push
call
fst
mov
pushf
inc
inc
push
mov
add
xchg
fs
je
lock
xchg
es
adc
or
mov
mov
mov
xlat
or
das
cld
repz
ret
pop
push
pusha
and
jb
dec
out
(bad)
retf
cmp
leave
dec
in
stc
pop
clc
jbe
inc
xor
sbb
arpl
or
or
scas
(bad)
sbb
out
enter
outs
jnp
mov
inc
xchg
rcl
retf
shr
cwde
fbstp
mov
enter
neg
cwde
mov
out
push
idiv
xor
cli
fld
xor
jno
inc
add
mov
(bad)
cs
je
leave
xor
gs
push
fidivr
test
or
dec
js
stos
test
cs
outs
out
iret
mov
sahf
clc
test
sub
xchg
fcomp
mov
sub
fs
mov
jge
mov
adc
std
repnz
mov
jmp
sbb
out
iret
push
int3
cmp
jno
sub
mov
mov
mov
cwde
(bad)
ds
jge
jno
cld
xor
pop
cwde
pop
in
jle
test
xor
or
popf
sar
leave
rcr
loopne
push
and
dec
movs
(bad)
mov
daa
retf
rol
mov
pusha
xchg
mov
fadd
aad
in
jb
xor
ss
idiv
inc
cli
xor
pop
popf
cmp
gs
stos
adc
not
add
xor
xor
je
sbb
adc
or
sbb
or
sub
mov
inc
test
jbe
sbb
push
mov
pop
cdq
mov
adc
xchg
jb
clc
xlat
hlt
sub
ins
mov
scas
outs
pop
sti
mov
stc
(bad)
clc
fisttp
mov
(bad)
sbb
aaa
mov
fist
aaa
popw
pop
scas
adc
mov
lea
jmp
gs
pop
adc
ss
stc
push
pusha
lahf
jg
sbb
dec
dec
and
lods
mov
fld
inc
(bad)
arpl
add
aad
jbe
xlat
shl
mov
xchg
mov
not
lods
movs
fs
jne
push
cs
jmp
jp
cmp
bound
dec
nop
mov
ret
dec
push
lods
jns
(bad)
cmp
mov
xor
push
lahf
sub
mov
inc
mov
cs
scas
xchg
inc
ror
jle
adc
push
lods
jp
mov
xchg
arpl
rcl
loope
scas
pop
ja
mov
mov
dec
scas
xor
xor
inc
arpl
pop
stos
cmp
mov
pusha
out
xchg
(bad)
clc
jl
loop
pushf
mov
xor
cmp
jecxz
mov
mov
fs
mov
cmp
xlat
mov
mov
push
fst
loopne
stos
les
and
lock
mov
ja
mov
test
popf
xor
pop
aam
cmp
pusha
jmp
gs
loopne
pop
imul
lods
mov
dec
push
ss
outs
push
sub
test
imul
cmp
or
add
xchg
aaa
xchg
mov
push
jae
dec
cld
mov
inc
fwait
mov
push
sbb
jns
mov
bound
mov
mov
mov
dec
(bad)
dec
mov
cmp
jns
aas
je
dec
mov
push
mov
daa
jnp
(bad)
rol
call
add
pop
mov
adc
fld
mov
cmp
mov
cmp
dec
popf
scas
mov
mov
gs
inc
pop
inc
popf
push
(bad)
addr16
mov
ins
not
or
sbb
mov
sti
mov
ds
fdivrp
sub
pop
inc
jmp
dec
hlt
jno
sub
push
aad
mov
sahf
daa
jle
inc
xchg
add
bound
push
mov
mov
sub
ins
(bad)
pop
cmp
pusha
push
int
sbb
inc
leave
jb
imul
pop
mov
data16
mov
inc
test
sbb
jns
sub
clc
jge
in
cmps
inc
out
adc
jg
mov
rcr
xor
mov
add
in
icebp
inc
dec
mov
xor
icebp
data16
push
jg
test
jo
jp
mov
mov
jmp
jbe
jae
fisub
xor
sub
pushf
push
inc
(bad)
ins
sbb
dec
enter
mov
jb
jge
je
push
jmp
xchg
inc
fsub
jg
repz
test
leave
push
and
mov
adc
cld
les
sahf
mov
dec
mov
sub
sti
lods
push
jmp
pop
ja
test
pop
pop
mov
dec
lahf
xchg
mov
xor
imul
je
jno
in
sub
pusha
(bad)
and
pop
push
movs
cmp
xchg
mov
(bad)
aam
add
jp
scas
ins
jmp
fs
add
mov
test
imul
lods
addr16
mov
mov
not
fstp
mov
lods
es
xor
div
sbb
pop
call
mov
sti
sar
xor
sbb
pop
xor
add
scas
jl
mov
clc
sbb
mov
xor
shl
sbb
arpl
ins
call
mov
and
jns
test
pusha
bound
xchg
fmul
cwde
xor
pop
shl
adc
ja
pop
push
es
lea
jl
gs
iret
ds
xchg
xchg
jp
mov
popa
and
pop
sbb
sbb
add
movs
push
inc
test
arpl
icebp
jnp
push
loop
loope
dec
movs
dec
hlt
xchg
xchg
sti
div
jp
mov
pop
sbb
into
mul
test
pop
fist
adc
pop
cld
xor
xor
and
mov
iret
jle
cli
aas
mov
jbe
jb
into
pop
sub
push
mov
adc
dec
cmp
lahf
adc
out
xchg
xor
inc
push
lea
mov
dec
pushf
mov
jge
xchg
push
xor
in
outs
xchg
jp
mov
jmp
pop
xor
int
outs
mov
or
ss
in
repz
les
push
mov
popa
lahf
mov
mov
cli
(bad)
sbb
sbb
cmp
jle
adc
and
mov
cmps
push
paddsw
inc
leave
fst
les
inc
popf
jp
xchg
loopne
xchg
mov
je
in
xor
hlt
xchg
das
loope
mov
fs
test
adc
(bad)
cmp
(bad)
jnp
pop
lock
ror
jae
pop
test
inc
or
mov
cmp
cld
push
lea
mov
and
pop
push
pop
adc
loop
mov
mov
add
and
(bad)
mov
mov
popa
push
lods
push
call
xchg
dec
in
jg
in
mov
jmp
lods
inc
dec
mov
mov
sbb
fwait
inc
jecxz
cmps
cmp
sub
mov
fs
lods
push
jp
mov
mov
mov
sub
jp
mov
jne
inc
mov
add
add
dec
add
adc
cmp
aam
aaa
mov
pop
dec
fld
mov
imul
fist
(bad)
fldenv
mov
xchg
(bad)
inc
push
jp
sub
(bad)
cld
xlat
inc
xchg
and
dec
mov
cmp
les
push
jecxz
jge
and
pop
push
gs
sbb
test
pop
sub
xor
cmp
je
jno
pop
shl
xchg
popa
(bad)
jmp
cli
inc
lock
mov
sub
jle
lods
mov
adc
(bad)
pop
inc
loop
ins
int
stc
inc
inc
dec
enter
cld
sbb
push
pop
fstp
push
mov
lds
pushf
clc
or
pop
iret
xor
push
or
jle
sbb
wrmsr
movs
and
mov
xor
push
inc
sti
call
pop
mov
pop
lahf
jnp
fcomp
jl
mov
lock
mov
retf
or
mov
into
fsubr
aad
loopne
cmps
add
in
inc
push
sbb
add
lahf
mov
mov
and
pop
(bad)
hlt
jo
mov
or
leave
pop
and
add
jb
outs
pusha
test
xor
lahf
push
pop
and
xchg
cmp
stc
push
jecxz
pop
cmp
js
aad
not
xchg
call
ret
jg
in
test
clc
cld
loop
add
cwde
dec
loope
mov
cs
mov
jl
inc
dec
and
dec
push
mov
jne
mov
mov
repnz
stos
jmp
adc
es
imul
pop
test
fmul
mov
lea
fucomip
add
pop
push
mov
xchg
inc
out
popa
add
cmps
mov
repnz
xor
lds
mov
inc
out
out
scas
les
mov
inc
inc
sbb
retf
(bad)
ss
test
cmp
cs
outs
xchg
ret
xchg
pushf
cmp
repz
mov
inc
sbb
loope
sbb
add
fild
test
aaa
mov
mov
in
out
dec
(bad)
aad
loop
jbe
movs
outs
clc
mov
cmp
xchg
je
mul
cld
pop
int
mov
mov
inc
scas
xchg
test
cmp
add
fisub
sub
and
inc
add
inc
stos
or
das
cdq
push
and
mov
rol
sub
outs
call
sbb
sbb
cmp
and
mov
bts
(bad)
lods
mov
cmc
dec
pop
jae
sub
mov
dec
mov
cmps
dec
jmp
ins
lea
(bad)
mov
js
test
sub
pop
push
cld
xor
daa
mov
call
or
dec
dec
lahf
inc
sbb
lahf
mov
jmp
fisttp
lds
gs
add
das
popf
adc
pop
xor
sbb
add
add
pop
inc
mov
dec
xchg
enter
stos
push
or
shl
mov
lea
cld
jmp
enter
mov
cmp
sbb
icebp
int3
data16
cmp
dec
scas
jne
inc
dec
xchg
mov
lea
and
test
jne
inc
cmp
pop
push
push
adc
mov
adc
push
es
xchg
add
popf
es
rol
imul
lock
xchg
in
mov
xchg
je
rcr
mov
(bad)
xchg
fsubr
stos
pop
test
cmc
stc
out
mov
mov
xchg
dec
stos
cmp
ds
jmp
inc
push
inc
shl
mov
dec
mov
icebp
fs
add
(bad)
sbb
sbb
sbb
ds
adc
jl
retf
in
movs
cmp
dec
inc
jecxz
xchg
das
xchg
mov
push
cli
mov
aas
xchg
aam
inc
retf
mov
repz
repnz
or
push
xchg
test
mov
jmp
add
dec
fwait
and
push
dec
xchg
push
cs
call
sar
mov
pop
jl
adc
xor
add
add
jg
sahf
jg
test
cmps
arpl
and
iret
mov
in
jnp
lahf
jo
nop
fidivr
neg
sub
neg
outs
push
test
repnz
movs
jo
inc
(bad)
ds
int
(bad)
jne
xor
dec
mov
inc
xchg
sbb
test
fild
push
test
add
xor
jo
adc
push
pusha
test
adc
clc
sub
cmps
xchg
aaa
mov
pop
push
test
sar
mov
fld
mov
mov
pop
ja
mov
loopne
repnz
mov
sub
jns
sub
cmp
loopne
ja
xor
inc
cs
mov
mov
push
fst
jmp
jne
int
sbb
sub
stos
push
xor
mov
cmp
xor
inc
jbe
xchg
xchg
int3
movs
dec
xchg
lahf
inc
and
movs
test
jecxz
mov
pop
ja
mov
icebp
xchg
aad
ins
mov
ucomiss
call
adc
push
lahf
mov
iret
ds
jge
sar
sar
js
fnstcw
xor
jae
mov
pop
arpl
jg
xchg
mov
adc
outs
test
xchg
and
pop
cmp
in
mov
fnsave
mov
test
shr
add
stos
adc
mov
ins
pushf
scas
xor
push
jmp
pop
retf
push
popa
mov
outs
adc
mov
and
jbe
fimul
xchg
xor
or
test
iret
paddusb
lahf
pop
cmp
test
(bad)
mov
push
jl
dec
hlt
mov
dec
mov
xchg
inc
rol
les
adc
mov
scas
xor
loop
sbb
mov
jne
cs
or
(bad)
shl
aaa
pop
cmp
sbb
and
(bad)
push
mov
test
js
jge
in
pop
sbb
cmp
and
dec
pusha
movs
jg
lods
sub
mov
adc
push
inc
(bad)
out
mov
mov
pop
cli
pop
jno
lods
js
iret
out
xchg
cmc
mov
and
loop
adc
imul
pop
mov
(bad)
mov
fisttp
fwait
movs
inc
(bad)
push
sbb
dec
loop
fist
inc
pop
pop
cmps
sub
mov
jne
mov
mov
sub
add
sbb
adc
data16
jae
xchg
xchg
or
cmc
xchg
cmp
js
jae
pop
loope
ror
xlat
mov
cdq
jae
out
xchg
push
hlt
jg
lahf
test
xor
jmp
das
into
cli
test
xchg
mov
(bad)
pop
int3
xor
nop
sti
mov
js
scas
cmp
sahf
aaa
sub
cwde
movs
lods
mov
sub
es
enter
sbb
cmp
add
sbb
sbb
shr
add
ins
jmp
lahf
dec
mov
pop
(bad)
dec
je
stos
pop
rol
inc
hlt
mov
test
lock
movs
(bad)
pushf
scas
dec
mov
xchg
mov
adc
repz
inc
mov
cmps
cmp
notrack
js
and
sbb
push
lea
jnp
cwde
movs
stos
pop
and
addr16
data16
sbb
imul
das
mov
lods
outs
imul
xlat
adc
pop
out
iret
xchg
xor
inc
mov
dec
mov
xchg
int3
sti
test
fld
popf
mov
ja
nop
mov
add
fadd
xchg
xchg
dec
fidivr
push
sub
(bad)
fcom
push
push
push
cmp
push
cs
lea
(bad)
dec
out
in
ds
pop
cmp
sub
push
mov
jmp
inc
mov
ja
mov
out
jmp
inc
les
and
dec
mov
lahf
jg
stc
ror
test
push
gs
cmc
rol
lods
inc
out
xor
cmp
daa
jmp
or
jle
inc
sub
call
jmp
inc
push
imul
add
inc
imul
or
xchg
es
jl
lds
popf
in
mov
mov
sbb
push
test
xchg
lds
lods
ins
addr16
hlt
sbb
test
dec
inc
lods
mov
push
into
pop
push
dec
mov
iret
daa
call
sahf
sbb
inc
lahf
imul
scas
ds
jge
cmp
clc
push
je
inc
sti
and
aas
xchg
aaa
stc
outs
ins
sub
xor
movs
xchg
inc
and
fild
out
pop
push
mov
jb
xlat
xchg
je
mov
xchg
push
sub
jg
test
icebp
xchg
shl
inc
inc
loop
inc
xchg
dec
jmp
and
inc
out
pop
add
sbb
mov
mov
stc
outs
int3
xor
jne
jbe
leave
pop
sub
fwait
sbb
add
outs
aaa
movs
add
movs
mov
jmp
fwait
inc
test
jnp
inc
sbb
pop
shl
and
(bad)
mov
mov
hlt
push
xchg
call
icebp
(bad)
cld
hlt
dec
jg
test
dec
cs
call
sbb
aas
adc
pushf
lods
stos
or
ja
cli
add
inc
mov
adc
imul
mov
gs
sar
(bad)
inc
jae
test
cli
mov
ins
sti
les
xor
out
imul
mov
add
fs
mov
xor
cs
fstp
aaa
jl
dec
mov
dec
sbb
movs
xchg
mov
xchg
repnz
pop
jge
xor
pop
xor
sbb
push
mov
mov
pop
stos
test
jge
scas
xchg
aas
xchg
repnz
inc
add
inc
icebp
scas
(bad)
(bad)
sti
dec
in
stos
push
add
shl
sub
ins
xchg
xchg
jb
mov
sbb
leave
xchg
rep
dec
mov
hlt
xor
sbb
(bad)
fidiv
cmp
jp
pop
outs
das
mov
push
(bad)
pushf
test
cli
push
(bad)
cmc
outs
dec
jb
iret
xor
add
pop
jmp
mov
js
mov
jl
fucomip
sbb
mov
dec
jno
shl
ror
test
mov
rcl
mov
out
jne
pushf
mov
sub
hlt
pop
das
retf
pushf
test
lods
mov
daa
inc
das
and
jb
inc
ja
jge
jno
jbe
jns
jno
retf
adc
cmps
inc
test
or
shl
aas
hlt
add
mov
popf
pop
(bad)
jnp
mov
xor
or
bound
push
dec
dec
popf
daa
lods
(bad)
jle
pop
jns
test
repz
test
cld
add
sub
jnp
mov
jns
lods
cmps
test
fcomip
mov
repz
ins
lahf
test
in
std
adc
push
out
out
retf
jb
inc
ja
push
mov
cmp
lahf
xchg
mov
cmp
sti
imul
add
push
sbb
pop
mov
mov
jb
mov
jb
cmc
loope
nop
xchg
jo
push
inc
mov
clc
jge
shl
adc
xchg
pusha
adc
ret
mov
jecxz
xchg
ffreep
dec
stos
push
lea
fadd
xchg
mov
(bad)
pop
out
cs
iret
(bad)
ficomp
xor
push
jge
sbb
jb
sbb
mov
fstp
rcr
jne
int
pop
push
or
xchg
sub
pmaddwd
rcr
mov
pop
xchg
mov
jl
aam
add
push
dec
xchg
mov
dec
mov
stos
fs
xchg
cmp
shl
add
jnp
mov
jle
xchg
test
mov
lds
xchg
mov
or
lods
pop
ror
jae
dec
mov
dec
arpl
inc
or
mov
push
leave
inc
call
jg
je
les
sbb
add
jge
adc
popf
xchg
(bad)
add
loopne
leave
pop
jae
mov
dec
test
push
and
rcl
adc
push
mov
icebp
js
xchg
rol
mov
daa
pop
das
shl
fist
add
data16
push
add
fld
jns
cli
or
pop
aaa
rcl
jo
adc
or
test
pop
mov
jae
xchg
sub
in
adc
(bad)
dec
xlat
mov
loope
out
sahf
jbe
xchg
fild
xchg
push
sti
fwait
jmp
and
dec
sbb
(bad)
ds
out
xlat
pop
in
xor
pop
ins
and
mov
mov
jmp
sbb
and
and
sub
push
xor
xor
and
fst
aam
sbb
mov
arpl
pushf
pop
cs
cli
mov
lock
fimul
sbb
cmp
mov
lock
loop
add
gs
push
mov
sbb
(bad)
dec
enter
xlat
jb
jle
fld
sub
popf
and
inc
adc
pop
lods
mov
dec
ret
rol
xchg
push
mov
jnp
mov
adc
lock
lods
lahf
cmps
jmp
mov
aad
sub
dec
pusha
jecxz
dec
lock
push
sub
push
int
jle
cmp
test
movs
retf
add
jle
hlt
add
test
adc
sahf
or
push
mov
pop
movs
mov
pop
sahf
fild
neg
pop
test
pop
mov
xchg
push
loope
pop
or
xlat
lods
add
ins
add
stos
sbb
fld
jmp
daa
sbb
fcmovbe
inc
xchg
sbb
inc
test
gs
mov
mov
pop
retf
xchg
(bad)
ins
addr16
xor
and
push
add
push
iret
pop
adc
dec
or
xor
cmp
mov
adc
jl
mov
pop
mov
sahf
add
shl
xchg
push
cmp
mov
daa
loop
cmps
std
loop
add
scas
cmp
pop
fisttp
out
cld
retf
pop
rcr
jne
push
pop
inc
push
lods
push
and
cmps
mov
push
cli
jecxz
mov
push
outs
push
pop
and
add
push
xor
sbb
and
fdiv
hlt
bound
mov
jl
les
or
xlat
mov
iret
ins
or
mov
sbb
repnz
enter
mov
lea
xor
fld
cmp
jno
or
jle
or
mov
stos
pop
lahf
in
jns
std
pop
push
push
cli
push
es
or
add
mov
pop
mov
popa
(bad)
daa
xchg
out
(bad)
les
bound
push
(bad)
call
aad
lea
inc
mov
fimul
xchg
mov
(bad)
imul
pop
or
cmp
or
mov
cmp
mov
icebp
in
xor
cmp
cmp
add
push
iret
ins
jae
outs
cmp
xchg
add
dec
mul
xor
jne
lea
movs
repnz
mov
or
mov
cmp
(bad)
add
jnp
mov
ins
js
mov
push
daa
xchg
div
or
hlt
ds
cli
ret
dec
jmp
jne
dec
ficomp
push
das
mov
xchg
mov
int
jmp
jge
jmp
sbb
jb
imul
jns
mov
inc
(bad)
out
lahf
sbb
push
mov
aas
add
(bad)
frstor
test
add
movs
stos
cmp
into
retf
add
mov
loope
test
dec
out
sbb
cmp
push
ds
call
xchg
icebp
or
xor
cmp
add
pop
fstp
pusha
scas
jge
mov
addr16
pop
cmp
push
fistp
out
pop
and
arpl
mov
sbb
ins
rep
cmps
ret
cmp
pop
push
xchg
mov
sbb
shl
or
dec
ins
mov
inc
jmp
fimul
ds
aad
inc
iret
inc
jb
inc
ficomp
js
sahf
sub
mov
scas
ds
outs
cli
rol
cmp
dec
jne
fld
pop
xor
sub
add
jle
mov
pop
lahf
mov
pop
aaa
and
jecxz
call
les
jno
dec
test
fistp
stos
jecxz
in
mov
mov
xchg
lods
jmp
in
mov
adc
fadd
pop
outs
mov
xor
ror
jnp
dec
fidivr
adc
jbe
mov
fdivr
clc
or
bnd
jg
iret
pop
sbb
pop
mov
xchg
jg
movs
aas
push
xchg
mov
pop
(bad)
fist
out
inc
bound
pusha
xchg
ret
in
push
bswap
aad
xor
(bad)
out
fldenv
lea
test
cwde
aam
rcr
push
or
shl
jge
test
add
sar
ss
mov
push
popa
and
xor
pusha
pop
sbb
add
jl
cmps
aaa
ja
xlat
mov
cmp
jb
in
pop
int
push
out
jbe
xchg
pop
in
std
push
mov
stos
pop
add
rol
stos
neg
fldcw
xchg
mov
cmc
sub
test
in
fimul
sub
(bad)
es
push
js
cmp
lea
outs
xchg
fsubr
cmp
xor
xor
js
push
cwde
pop
mov
cwde
dec
cmp
(bad)
pop
or
pop
rcr
aaa
mov
push
push
lea
mov
pop
in
and
push
test
cld
or
inc
xchg
pushf
mov
je
mov
ror
aad
xchg
push
(bad)
or
cs
int3
imul
push
push
mov
mov
icebp
popa
cwde
cli
add
sub
adc
popa
ja
pop
cmp
mov
pop
sbb
jecxz
xchg
sti
push
mov
and
xor
cdq
pop
sbb
inc
or
ja
mov
ds
(bad)
std
xchg
cld
out
outs
mov
inc
in
push
fmul
jo
dec
mov
js
mov
add
or
movs
hlt
bound
aas
mov
or
adc
inc
mov
mov
sbb
cmp
popa
in
aam
sbb
xlat
pop
out
(bad)
mov
inc
sub
jl
xchg
push
sbb
imul
test
xchg
std
test
repz
mov
sbb
fisub
xor
sub
sahf
inc
or
mov
shl
cs
pop
cli
cli
jo
repz
and
inc
adc
add
add
cs
popa
pusha
lods
jnp
xchg
dec
inc
xchg
test
push
fcmovu
xchg
aas
xchg
cmc
jnp
pop
jl
mov
imul
(bad)
icebp
adc
out
xchg
pushf
movs
cmp
icebp
loop
inc
jmp
push
xor
out
push
jmp
push
aaa
dec
lods
sub
xchg
outs
lea
fdiv
clc
cmp
jmp
das
jo
or
outs
pop
xchg
jnp
stos
sbb
cmps
sub
icebp
and
jg
test
fdiv
xchg
addr16
xchg
jns
sti
fisttp
lea
jne
mov
push
cmp
(bad)
xchg
in
repz
fs
scas
imul
xor
not
push
jmp
jb
push
or
mov
outs
xchg
mov
lods
dec
shl
cmp
push
pop
sbb
xor
add
and
imul
xor
jno
push
xor
fucomip
aaa
stos
hlt
gs
push
jns
mov
movs
xlat
popa
mov
xchg
jns
hlt
clc
xchg
sbb
add
lods
add
mov
or
pop
mov
cmp
inc
in
pop
push
and
pop
or
movs
mov
mov
mov
push
sub
add
arpl
jge
lods
xor
mov
pop
xchg
int3
xchg
ds
sbb
pop
jmp
lock
pushf
shl
jecxz
jns
out
(bad)
mov
in
lock
mov
push
mov
retf
std
mov
popf
add
in
aaa
and
dec
fiadd
cmp
or
lods
ins
pop
inc
mov
(bad)
out
lds
xchg
ficomp
mov
dec
push
push
pop
int
sbb
sub
fsub
cmp
xchg
call
aad
pop
push
test
push
xchg
xacquire
sahf
jns
cli
(bad)
mov
outs
mov
outs
push
xchg
mov
xor
inc
jmp
dec
retf
dec
pop
ss
repz
xor
inc
cdq
sbb
mov
jnp
mov
enter
sbb
je
mov
adc
daa
mov
mov
inc
movs
xlat
test
and
pop
call
div
dec
jbe
test
lahf
loopne
stos
(bad)
movs
dec
loop
push
and
sar
and
add
sahf
ins
js
movs
stos
ss
xacquire
lods
dec
retf
dec
(bad)
ss
cmp
cmp
cmp
xchg
jns
mov
mov
out
jl
aam
fs
ficom
and
sub
sahf
outs
add
mov
pop
or
jno
mov
ds
sbb
jne
and
inc
call
or
mov
outs
jne
popf
out
adc
cld
out
jne
test
dec
aas
adc
div
push
xor
addr16
push
stos
mov
jecxz
das
call
pop
pop
ja
cmp
aam
push
fdivr
or
mov
inc
(bad)
jmp
daa
mov
push
pop
popf
pop
icebp
and
xchg
in
adc
cmc
aam
and
ins
xchg
jo
mov
adc
call
dec
inc
jmp
dec
call
in
and
cmp
dec
fistp
es
inc
es
cdq
les
jg
cli
es
aas
iret
aaa
xor
xor
xchg
pop
mov
scas
pop
ds
pop
xchg
test
hlt
retf
xchg
clc
jno
dec
je
mov
cmc
mov
inc
add
popa
cs
mov
mov
lock
retf
hlt
mov
mov
ins
jmp
call
push
jle
mov
jge
sahf
dec
sub
pushf
cmp
jmp
add
adc
jecxz
scas
jno
bound
fs
scas
cdq
sub
push
inc
int
in
mov
push
push
mov
jge
shl
retf
mov
adc
aad
movs
xchg
fcmovnb
adc
hlt
adc
in
ret
loop
ins
xchg
imul
fbld
ret
sub
push
bound
inc
sub
mov
stc
jg
div
clc
inc
fs
xor
sub
pslld
data16
(bad)
sbb
push
inc
(bad)
shl
shr
sub
loope
xchg
sahf
jg
xchg
jns
lea
sub
sbb
stos
mov
sbb
(bad)
jmp
popf
pop
js
add
(bad)
dec
inc
pop
out
hlt
rcl
and
adc
xchg
dec
or
fld
inc
jmp
push
add
nop
pop
std
jns
lods
jge
mov
fs
mov
xor
out
int3
test
mov
jnp
lea
mov
mov
in
popa
pop
in
mov
in
jg
mov
rcl
arpl
cmp
add
ins
jge
mov
inc
or
cld
icebp
enter
sub
pop
add
push
or
mov
sbb
jbe
js
fnstenv
xor
sbb
add
ins
mov
mov
lahf
adc
jl
test
jl
ins
fs
movs
outs
lock
jge
les
adc
(bad)
imul
dec
test
nop
bound
xchg
push
and
cli
stos
fucomip
pop
jg
xchg
sub
ja
cmp
sub
in
repz
cmp
stos
sbb
test
jle
mov
mov
test
das
call
xor
jbe
push
fwait
daa
(bad)
ds
dec
gs
jnp
mov
dec
xchg
mov
inc
ret
aas
xchg
fbld
inc
push
pop
movs
push
cmps
cmc
pop
mov
xchg
push
and
retf
out
jns
mov
stc
es
mov
xchg
pushf
test
mov
je
dec
fiadd
and
shr
rol
xor
adc
push
push
mov
xchg
mov
pushf
cli
sub
cmc
arpl
or
lods
inc
nop
jbe
addr16
sahf
or
cdq
mov
or
and
sbb
jno
mov
rcr
loopne
loope
bound
ins
or
inc
sbb
or
mov
or
sub
loopne
or
dec
inc
dec
xchg
mov
std
inc
fwait
call
mov
cmp
cmp
das
mov
mov
xor
cmp
(bad)
mov
cmp
ins
in
iret
mov
sub
xchg
dec
jmp
fisubr
xchg
fs
inc
sub
aam
pop
cmc
jle
(bad)
xchg
div
sbb
mov
add
fcmovu
pop
ins
cwde
lods
dec
(bad)
pop
fimul
sub
shl
div
aaa
jns
dec
mov
inc
cmp
mov
call
pop
je
aaa
fnsave
adc
sbb
push
arpl
jg
mov
cmp
retf
mov
mov
push
push
mov
arpl
nop
jno
inc
test
in
jg
cmps
cmps
sar
and
mov
call
inc
loope
jmp
sub
loop
fist
cs
pop
stos
pop
jp
mov
jp
mov
stos
adc
int3
dec
repnz
or
cmc
fs
cmp
cmp
jge
and
sub
fisubr
xlat
cmp
movs
(bad)
sbb
es
out
fbstp
in
jb
popf
pop
out
test
xchg
jbe
std
loope
push
jmp
xchg
movs
cmps
jmp
in
mov
sbb
repnz
retf
inc
loop
inc
fwait
jae
xor
xor
xor
push
mov
dec
push
sahf
imul
(bad)
xor
fisttp
xchg
clc
push
dec
inc
xor
daa
and
das
popf
adc
ins
pop
mov
cmp
push
sub
sar
xor
lea
ror
out
xchg
pusha
nop
popf
jno
aam
stos
or
cmps
out
adc
test
add
and
retf
push
cmp
sub
out
cli
fdiv
jo
inc
mov
inc
sub
mov
clc
outs
loop
add
(bad)
cmp
and
adc
pusha
jb
pop
or
popf
sub
dec
out
int
add
jbe
cmps
jge
mov
push
popf
fdiv
xor
mov
xchg
lahf
stos
mov
scas
ret
xchg
xchg
pushf
movs
xlat
fstp
lds
cmp
ds
(bad)
in
push
into
aaa
je
push
lea
dec
push
cmp
dec
mov
push
cmps
add
mov
fidiv
jne
in
push
cmp
dec
sahf
jg
movs
aaa
inc
in
mov
xchg
fistp
fldcw
fnsave
vcvtsd2ss
xchg
jne
lea
(bad)
mov
inc
mov
fcos
xchg
fcmove
jnp
xchg
or
fisubr
retf
jg
add
and
pop
outs
push
inc
lea
hlt
jp
sar
retf
jno
aam
or
add
pop
inc
(bad)
adc
dec
inc
in
mov
aaa
and
int
xchg
xor
jnp
lea
mov
dec
pushf
stos
jecxz
jmp
mov
mov
mov
and
repz
imul
mov
fist
add
cmp
test
sbb
mov
pop
cld
inc
enter
jmp
dec
jno
int
adc
sbb
xor
dec
addr16
arpl
pop
outs
jecxz
xchg
adc
in
jb
dec
jp
fdiv
mov
inc
stos
repnz
ins
loope
jne
int3
shl
xchg
stos
sar
scas
ja
mov
cmc
out
(bad)
dec
push
jb
dec
sub
iret
repnz
es
and
cmp
test
jge
mov
mov
loopne
or
inc
lds
js
adc
inc
nop
sub
popa
pusha
mov
mov
cmp
dec
out
into
cmps
inc
mov
jo
imul
loopne
call
xor
sti
cmc
add
dec
xchg
xchg
ja
mov
and
(bad)
test
loop
fs
sub
enter
(bad)
aaa
fs
cmps
or
inc
adc
in
mov
cdq
push
or
push
stc
xchg
jns
retf
js
into
sbb
imul
lods
pop
fist
mov
mov
sahf
xchg
lahf
sbb
inc
rcr
aaa
enter
sbb
dec
popf
mov
jae
(bad)
xchg
fs
xchg
jno
leave
shl
cli
sar
mov
test
stos
aad
ins
fwait
mov
push
or
jecxz
je
dec
mov
inc
sub
stos
cmp
out
sbb
aas
fbld
ss
adc
sub
push
mov
bound
and
cmc
xchg
aaa
mov
arpl
push
mov
ins
xchg
les
pop
(bad)
(bad)
test
pop
mov
bound
jmp
aaa
in
rol
mov
out
jmp
and
xor
gs
sbb
in
ds
mov
leave
cmp
ins
out
fstp
xchg
push
ins
push
xor
add
adc
outs
dec
mov
add
movs
pushf
and
addr16
(bad)
inc
mov
jbe
mov
shl
dec
in
xor
in
test
addr16
mov
daa
adc
loope
(bad)
inc
ins
or
push
inc
xlat
jmp
outs
mov
pusha
pusha
lahf
inc
add
cmp
sbb
or
sub
push
adc
cwde
add
sahf
pop
xor
cld
jno
dec
pop
cmp
pusha
les
sub
lock
xchg
loop
adc
cmc
cmc
ja
jle
cmp
in
mov
push
es
repnz
fimul
xchg
add
cmp
xor
mov
rcr
sub
or
jo
imul
xchg
cmp
std
setg
push
push
sbb
and
mov
sbb
jl
sar
jnp
mov
dec
in
rcl
std
jp
push
mov
dec
add
pop
sub
xlat
pushf
aaa
loopne
xchg
fs
popf
xchg
adc
int3
loope
rol
dec
imul
call
xor
jg
add
push
inc
or
les
pop
(bad)
ds
mov
or
add
fwait
or
js
or
(bad)
jge
fldcw
retf
xor
pop
jb
pop
repz
cmp
xchg
push
and
ins
xchg
addr16
test
adc
cld
aam
loope
ins
jle
lahf
lea
ss
loop
sti
pop
fcomp
add
or
cs
bound
or
mov
add
xor
cmc
ss
mov
pusha
xchg
mov
inc
dec
mov
mov
gs
lea
jmp
jecxz
je
mov
xor
rcl
movs
lods
(bad)
sbb
scas
add
in
repnz
lea
js
adc
and
jge
imul
xchg
fwait
test
dec
push
scas
jbe
lock
repz
cmp
push
and
pop
xchg
xor
pop
bound
jns
mov
or
ins
(bad)
scas
xchg
inc
(bad)
fbstp
popa
sbb
mov
push
xlat
mov
jmp
push
out
xchg
sub
cwde
xor
fadd
push
cmc
mov
ds
(bad)
fist
and
push
mov
inc
ds
mov
mov
test
jb
leave
pop
sub
adc
ins
adc
push
add
test
add
aas
fcmovbe
jmp
cli
outs
jnp
mov
mov
aas
xchg
aam
inc
(bad)
adc
sti
sbb
cmp
nop
add
rep
fwait
mov
ss
std
repz
pop
into
inc
sbb
pop
add
push
or
(bad)
mov
jg
jmp
inc
jb
into
and
jo
sub
adc
mov
and
mul
and
push
push
mov
dec
mov
xchg
jbe
rcl
mov
sbb
adc
stos
popf
(bad)
call
inc
ins
mov
fidiv
fild
and
dec
test
dec
push
call
add
inc
call
xchg
inc
imul
push
jbe
adc
push
mov
je
mov
and
enter
enter
jbe
lea
inc
push
std
loope
add
jns
call
out
xchg
daa
stc
icebp
call
jns
inc
iret
or
cmp
in
xor
push
outs
test
imul
mov
jmp
pop
and
aaa
xor
xor
fiadd
mov
ja
mov
cmp
sar
jmp
sahf
in
in
loope
xchg
mov
cld
xor
jmp
popf
popf
mov
out
fadd
pop
inc
jmp
fimul
sar
fdiv
push
cmp
aas
dec
addr16
dec
push
jle
mov
mov
push
xlat
pop
in
dec
lahf
cld
pusha
adc
cmps
dec
adc
add
jne
arpl
jnp
cmps
cmp
test
fstp
xchg
and
lea
fs
dec
mov
jge
in
xchg
xchg
pusha
es
mov
lahf
fdiv
adc
bound
test
call
xchg
lods
jno
das
lock
mov
fldenv
es
inc
pushf
aaa
sbb
and
call
pop
sar
or
and
push
add
push
lea
inc
in
mov
outs
cmp
xchg
cmp
jno
scas
outs
sti
xchg
(bad)
push
xlat
xchg
mov
cmc
jo
(bad)
cli
mov
les
lahf
ins
pop
in
mov
cs
aam
stc
rcr
inc
add
jmp
int3
fist
inc
pop
jg
cmps
or
mov
sub
xchg
call
lea
inc
xor
and
imul
xor
test
out
in
xchg
aaa
mov
jo
stos
pop
fnstenv
mov
and
loope
xchg
scas
cmps
mov
mov
lock
test
test
pop
or
jmp
jae
inc
lods
adc
push
mov
imul
cli
sbb
xor
jb
jecxz
lods
aas
lods
pop
pusha
test
xor
mov
aas
xor
leave
test
mov
jns
mov
and
xlat
and
and
add
jmp
inc
sar
mov
mov
mov
or
jmp
push
pusha
mov
js
push
xchg
mov
fstp
jmp
addr16
pop
int
sbb
or
fs
pop
add
xchg
stos
cmp
lods
cmps
and
jg
mov
cmp
xchg
jbe
lock
xchg
adc
inc
in
mov
sbb
loopne
not
in
ficomp
xchg
lea
daa
sar
jmp
pop
pop
lods
adc
je
bound
ins
cmps
test
outs
repnz
daa
test
cmps
sub
and
mov
imul
pop
adc
jne
dec
aas
loopne
xchg
aaa
mov
add
sar
call
test
or
aad
cmp
ret
data16
leave
mov
adc
jl
xchg
stos
inc
aad
into
cmp
or
iret
(bad)
xor
cmp
mov
pop
icebp
(bad)
call
cli
jl
lock
xor
aas
cmp
or
dec
data16
ss
dec
add
fwait
xor
inc
push
ficomp
mov
push
(bad)
sti
dec
enter
(bad)
stos
xchg
xchg
imul
test
popf
popf
not
aas
neg
xchg
idiv
jmp
(bad)
es
sub
in
dec
retf
jge
mov
gs
xchg
sbb
mov
dec
loop
add
inc
enter
or
out
pop
mov
(bad)
dec
xor
outs
cmp
inc
ret
inc
mov
pop
out
pcmpgtb
pop
cdq
les
daa
rcr
mov
call
mov
pushf
mov
adc
icebp
fadd
cdq
add
lods
ss
inc
shr
xor
jg
aaa
sub
mov
mov
(bad)
shr
leave
mov
add
leave
adc
pop
push
ss
sub
sahf
or
mov
pop
xchg
mov
or
and
fnstsw
xor
(bad)
imul
pop
inc
test
fdivr
js
in
test
pusha
add
shl
cdq
iret
dec
fsubr
out
popf
aas
adc
pop
outs
xchg
call
cmp
call
popa
push
dec
stos
sbb
in
cmp
xchg
mul
std
or
in
sbb
push
popf
push
mov
push
fidiv
mov
mov
daa
inc
fcmove
push
sti
add
sbb
ins
clc
mov
addr16
ret
cdq
push
repz
test
out
ins
or
jno
xchg
xchg
push
inc
in
cli
cmp
sub
cmp
xchg
retf
repz
popa
and
push
sbb
xchg
retf
cmp
jg
shl
(bad)
jno
fs
mov
jl
push
mov
pushf
push
add
cmp
or
iret
inc
call
fs
push
test
mov
dec
dec
loope
retf
pushf
inc
push
xchg
mov
repz
mov
je
mov
outs
daa
retf
mov
inc
jne
mov
es
or
inc
je
jp
or
popa
lahf
aaa
sub
jmp
mov
jge
cli
sub
jns
fisttp
sbb
or
pop
(bad)
push
ja
pop
xor
mov
inc
lahf
fcom
js
pop
scas
dec
shl
lahf
dec
lds
cmc
push
jmp
repz
mov
cmp
popf
mov
mov
fisubr
add
ds
xlat
cli
(bad)
pop
cwde
xor
or
sbb
call
cwde
cmp
fcomp
clc
inc
ins
add
aas
ss
xor
das
stos
jne
push
gs
jp
retf
xchg
ror
sahf
shl
cmp
jle
cmps
push
out
imul
mov
jno
(bad)
(bad)
scas
in
mov
out
js
aam
mov
call
dec
hlt
fs
sub
push
icebp
push
je
jge
adc
es
fwait
cdq
lods
test
sub
imul
dec
jns
mov
cmp
push
mov
inc
dec
fld
sbb
into
sahf
jno
xor
adc
dec
push
movs
jo
fcomp
sbb
int3
rep
pop
fwait
add
and
enter
cli
(bad)
mov
fldcw
add
clc
(bad)
std
and
cmp
sbb
cwde
aaa
sub
mov
stos
cmp
xchg
fist
push
add
and
das
sahf
jle
outs
je
push
and
xor
sbb
and
fbstp
or
nop
dec
lds
mov
loopne
pop
xor
call
inc
mov
sar
cmps
leave
retf
dec
add
mov
or
inc
cmp
sub
addr16
jne
cs
add
retf
lods
ret
into
push
std
jecxz
test
aas
enter
imul
xchg
adc
pop
pop
stos
jge
movs
adc
in
cmps
fwait
cmp
dec
ins
(bad)
out
xadd
(bad)
aad
push
cmp
dec
fwait
(bad)
mov
std
xchg
jns
repnz
mov
xchg
sbb
call
es
repnz
retf
push
mov
jmp
daa
ss
fidiv
jl
pop
scas
sub
popf
inc
sub
mov
rcr
lea
enter
je
retf
jl
imul
imul
mov
cmp
xlat
inc
fstp
ins
push
cmp
pop
mov
jecxz
std
in
sub
jnp
mov
ins
jns
mov
cmp
mov
neg
and
mov
dec
mov
repz
cdq
sbb
pop
outs
push
xchg
or
sub
aas
xchg
xchg
bound
fisub
pop
jnp
sbb
sbb
dec
cwde
test
retf
stos
xchg
adc
pop
sub
dec
sti
mov
pop
mov
sbb
ror
faddp
dec
mov
mov
xor
stc
icebp
mov
repz
jnp
lods
fs
cs
into
stos
push
pop
movs
ss
dec
inc
dec
cwde
mov
xchg
sbb
(bad)
aas
mov
ss
cmp
sub
mov
cmps
pop
jle
retf
pop
dec
cmp
sar
test
lea
ret
(bad)
js
les
push
jmp
mov
jg
test
jmp
call
sbb
fdiv
inc
lock
fs
xchg
or
mov
push
scas
ja
dec
xchg
into
jbe
js
int
sbb
and
ss
add
sbb
(bad)
adc
sbb
mov
cmps
getsec
push
inc
dec
mov
add
fsub
dec
xchg
int3
cwde
je
in
sub
jmp
sub
inc
in
loope
jmp
mov
(bad)
xchg
leave
loope
add
mov
xlat
jp
sbb
inc
stc
(bad)
sub
ss
gs
push
and
mov
lea
sbb
arpl
loope
cmps
call
enter
cmp
jecxz
into
pop
lock
arpl
pop
mul
inc
ret
aas
enter
inc
add
inc
fnstenv
xchg
bound
ret
xchg
adc
jg
mov
shr
and
mov
daa
sar
icebp
out
ins
nop
lods
jo
pop
aad
and
iret
sti
fcomp
xor
cmp
and
mov
nop
cmp
fistp
mov
or
and
sbb
pop
test
dec
xchg
jae
fsub
cmp
mov
cmp
test
jmp
int
call
es
add
sub
cmp
in
mov
in
push
jo
inc
mov
inc
sub
cwde
stos
mov
fdivr
add
retf
and
jo
sbb
and
sahf
pop
cmp
pushf
sbb
fwait
adc
inc
and
add
dec
ret
push
int
test
out
mov
outs
add
stc
icebp
xchg
lods
push
jecxz
fist
sub
sar
fistp
cmp
bound
cmp
jg
cmps
xchg
mov
xchg
xchg
jl
idiv
add
cmp
or
adc
data16
push
and
fnstcw
out
fist
les
push
mov
push
mov
stos
inc
repz
(bad)
ins
xchg
test
leave
cmp
imul
xchg
ds
test
jecxz
dec
loopne
rol
cs
int3
fistp
inc
sbb
les
add
imul
iret
sub
outs
out
sar
mov
push
pop
push
cmp
sbb
js
adc
and
aaa
movs
or
mov
xor
cmp
loop
loop
dec
push
popf
pop
xlat
mov
dec
out
mov
adc
ins
mov
scas
sar
jl
mov
out
fld
inc
jecxz
into
cmp
inc
mov
fist
add
dec
stos
adc
popf
xor
jne
mov
cwde
sub
fistp
stc
add
pop
fiadd
fwait
das
retf
pop
shl
mov
bound
and
cmc
sti
aas
mov
pop
repnz
inc
pop
popf
pop
cmp
callw
or
rol
jmp
popf
test
rcr
inc
jg
mov
inc
inc
or
out
fstp
ds
or
stos
push
sub
retf
push
or
jl
sar
lock
jo
sbb
cmp
je
adc
adc
fisttp
mov
pop
cdq
stos
mov
daa
push
inc
cdq
xlat
call
shl
or
sbb
clc
xchg
repnz
cmps
mov
dec
repz
pusha
pop
(bad)
mov
neg
outs
jns
lds
sbb
dec
inc
jmp
push
es
fist
xor
aaa
jp
movs
dec
and
cmps
mov
sar
xchg
inc
inc
jne
in
or
sub
stos
outs
adc
mov
xor
mov
pop
pop
dec
mov
arpl
call
jmp
test
ja
xchg
sbb
lahf
xchg
inc
call
cld
fsub
xor
aaa
jbe
movs
imul
xchg
xchg
stos
pop
ds
jp
call
dec
push
sbb
cmp
push
push
push
mov
mov
fldcw
test
push
mov
xor
fistp
les
mov
repnz
cmps
retf
icebp
mov
add
jmp
push
stos
shl
dec
jl
mov
jecxz
stc
(bad)
mov
xor
dec
cli
clc
lock
rol
pop
xor
inc
mov
mov
jmp
mov
cmp
inc
sub
adc
sub
mov
push
mov
lahf
cmp
xor
retf
mov
push
leave
dec
push
push
fimul
(bad)
dec
xchg
xlat
mov
adc
enter
outs
mov
inc
jb
nop
mov
daa
jmp
adc
inc
ins
mov
or
ficom
arpl
pop
cmps
daa
sbb
div
dec
xchg
mov
lahf
cmp
jmp
je
xor
adc
sbb
inc
mov
ja
mov
or
pop
fcmovne
xchg
add
outs
jl
pop
test
jmp
movs
mov
(bad)
ins
or
push
xchg
xchg
lock
jmp
mov
mov
dec
loopne
jmp
pop
into
cmp
cmp
cvtdq2ps
push
sbb
cwde
test
pop
sub
fwait
sti
pop
push
pop
call
push
cs
mov
sbb
jge
into
test
cmp
inc
mov
je
outs
jnp
test
addr16
iret
xchg
ja
in
sbb
fisttp
movs
xchg
ret
add
mov
ss
mul
test
int3
dec
sub
push
ret
cmp
jge
mov
pop
inc
xchg
mov
enter
add
inc
popf
sbb
stos
or
sbb
mov
pop
int
xchg
aaa
mov
add
jl
inc
fisubr
popf
jecxz
test
mov
xchg
add
loop
mov
mov
mov
fidiv
addr16
mov
cmp
dec
into
aaa
inc
and
test
jns
movs
push
es
fwait
mov
idiv
cli
adc
inc
(bad)
xor
pop
jno
fwait
and
mov
ja
mov
fcmovu
mov
mov
pop
and
test
mov
jmp
add
and
sbb
and
jecxz
mov
pop
outs
xchg
stos
dec
neg
xor
dec
(bad)
clc
retf
ss
dec
mov
push
jl
jno
dec
fwait
mov
xlat
pop
out
icebp
or
pop
cmc
sub
adc
jg
fldcw
lods
cmp
loope
inc
and
rol
cmc
jge
inc
test
loop
lds
stos
dec
call
sti
popf
adc
mov
inc
ja
mov
adc
pushf
stos
into
(bad)
dec
dec
xchg
xchg
dec
fdiv
and
pop
int
jnp
dec
lods
push
pop
cmps
push
sub
mov
mov
cmp
test
pop
dec
mov
adc
je
xchg
sub
mov
addr16
(bad)
sbb
and
icebp
sahf
cmp
jp
mov
dec
mov
xchg
pusha
and
fisttp
stos
lds
cmps
jp
xchg
mov
cmp
loopne
out
stos
aad
push
fnstenv
push
dec
jmp
ja
mov
push
mov
imul
jl
retf
add
mov
adc
inc
push
mov
mov
mov
sahf
bound
fdivr
xchg
adc
inc
test
pop
xchg
(bad)
pushf
adc
out
mov
fcomp
hlt
mov
outs
add
int3
icebp
xchg
aam
pop
dec
mov
inc
jecxz
into
cmp
xor
stc
mov
xchg
and
dec
mov
jo
cs
lahf
mov
xlat
push
jmp
jbe
add
out
xor
adc
or
sbb
jg
pushf
sbb
popf
cmp
ficom
out
jbe
fimul
mov
dec
mov
cld
pop
adc
ret
test
jecxz
xchg
mov
shl
jns
mov
cmc
not
shl
mov
xor
push
sti
cmp
push
enter
jle
aaa
jp
loopne
sbb
mov
xchg
xor
fsubr
fmul
shr
sbb
ss
xor
add
cmps
jg
mov
xchg
xor
push
push
call
jbe
fstp
cdq
loopne
test
popf
inc
xchg
cld
pusha
dec
repnz
cmp
xchg
scas
int
mov
test
inc
stc
icebp
clc
fcmovbe
push
push
fild
cs
mov
pop
fst
jb
jg
sub
mov
ja
mov
mov
jmp
jb
jno
int
push
je
sbb
sbb
and
and
mov
xor
call
icebp
jge
ins
fldcw
pushf
mov
pop
cmp
shr
stos
aad
nop
outs
xchg
mov
repnz
in
push
xchg
(bad)
jbe
pop
ficomp
pop
cmp
(bad)
call
pushf
or
arpl
mov
stos
pop
out
add
aas
fbld
pusha
jb
out
sub
cmps
push
pop
mov
fwait
push
sbb
and
data16
mov
arpl
mov
push
lock
sbb
push
sbb
adc
jmp
lods
lahf
fs
jg
push
cs
retf
fadd
jb
jp
sub
test
xchg
or
push
fdivr
jp
dec
imul
pop
sub
popa
fs
jae
mov
pusha
cld
rcl
les
push
sahf
jb
scas
or
movs
jae
imul
xchg
mov
mov
mov
lea
dec
rol
inc
mov
hlt
xor
or
int
jbe
dec
jne
dec
test
inc
es
xchg
lods
shl
cmp
inc
les
arpl
cmp
sbb
push
or
aas
mov
fnsave
cmps
cmp
mov
dec
in
xchg
das
enter
pusha
sbb
popa
loopne
or
mov
nop
loop
sub
xchg
push
lods
sahf
cwde
lds
lahf
arpl
out
lea
sti
mov
retf
outs
cwde
xchg
dec
fsubr
push
inc
das
xchg
xchg
mov
cld
cmp
sbb
call
mov
dec
test
add
push
jae
sub
and
jg
fstp
mov
or
scas
xchg
sbb
pusha
push
movs
jle
mov
dec
add
jo
call
out
jle
mov
dec
jl
lds
jmp
call
mov
xor
sub
inc
je
xor
sbb
cmp
mov
loop
jp
fidiv
pop
aaa
mov
adc
imul
xor
test
out
fidivr
cli
sbb
popf
xchg
loopne
stos
mov
jg
shl
mov
aad
repz
cmps
retf
jle
xchg
mov
and
mov
jmp
rcr
icebp
pop
pop
fisubr
sbb
clc
(bad)
and
xor
cmp
mov
dec
nop
fnstenv
push
test
jg
lock
sbb
adc
sub
ja
adc
and
or
add
stos
and
movs
cli
or
out
fistp
mov
pop
and
xchg
mov
jmp
sbb
test
inc
je
mov
jl
retf
in
retf
add
(bad)
dec
lock
sub
ret
(bad)
fistp
cmp
pop
jnp
or
out
test
mov
in
push
mov
pop
je
add
pop
fs
and
sub
xor
imul
xor
pushf
getsec
and
sti
cmc
xchg
xor
inc
inc
mov
pop
sti
call
addr16
rep
or
arpl
retf
fiadd
aam
lea
sbb
xor
jmp
push
jl
cmps
sbb
adc
test
cmp
inc
loope
push
(bad)
repz
dec
popa
xor
xor
popa
push
adc
imul
aaa
movs
outs
mov
pusha
(bad)
fild
cli
adc
inc
stos
pop
loop
ficomp
iret
cmps
sbb
xchg
jno
in
rol
sar
ins
ja
sahf
(bad)
adc
cld
ror
mov
fidivr
fild
ss
push
jle
adc
pop
std
outs
cs
call
dec
jmp
push
adc
cmc
pop
(bad)
imul
repz
(bad)
fcom
jg
sub
idiv
popf
mov
push
call
stos
jmp
rcl
ja
mov
or
mov
mov
cmp
pop
fnsave
jb
fistp
arpl
aaa
or
fisttp
outs
out
in
das
lahf
call
mov
or
adc
sub
lods
outs
xor
pop
aas
or
sar
out
bound
arpl
movs
lock
pushf
mov
jns
mov
mov
add
fwait
mov
push
(bad)
shl
es
cmc
xchg
clc
les
mov
fmul
adc
ret
pop
jo
dec
fimul
bound
dec
sub
mov
stos
dec
cmp
pop
out
cld
push
mov
inc
dec
popa
adc
ds
xor
mov
inc
pop
pushf
push
push
lods
mov
push
jecxz
xchg
inc
scas
in
js
push
xchg
loopne
out
mov
push
in
cli
mov
(bad)
stos
in
sbb
popf
addr16
repnz
mov
fdiv
fmul
bound
dec
cmps
jne
dec
loopne
sub
xchg
mov
xchg
push
cs
shl
add
inc
int
push
and
adc
imul
sbb
inc
push
call
out
int
cmp
jns
xchg
jno
xchg
(bad)
dec
sub
and
add
sahf
outs
pop
loope
xchg
aaa
sti
mul
mov
xor
daa
in
push
je
ins
scas
sbb
push
lea
jl
mov
mov
call
jbe
jne
int
sbb
mov
mov
mov
cmp
outs
aas
sbb
xchg
daa
cwde
loopne
imul
outs
lahf
jae
mov
push
lahf
rcl
(bad)
(bad)
add
inc
movs
mov
jae
mov
adc
(bad)
div
fwait
test
jecxz
fist
push
ds
fst
and
outs
stos
sbb
mov
sub
jmp
xor
add
and
xor
jo
xor
pop
mov
fistp
mov
jnp
movs
(bad)
xor
xchg
xor
clc
inc
retf
pop
dec
inc
mov
jecxz
(bad)
js
lock
arpl
xchg
jns
(bad)
(bad)
push
in
idiv
addr16
mov
mov
push
rcr
imul
add
cmp
repz
pop
jp
sub
stos
inc
aas
jne
(bad)
stos
ret
out
in
xor
mov
adc
push
movs
and
mov
cmp
fild
clc
inc
jno
mov
repz
jecxz
jmp
xor
push
or
rol
lea
jb
movs
stos
push
xor
(bad)
out
test
inc
inc
lods
stos
ins
jecxz
retf
cmp
call
mov
add
jnp
push
out
call
clc
push
mov
pop
je
xor
pop
bound
ja
js
mov
movs
ds
into
std
nop
jl
fstp
cld
dec
push
lods
pop
div
cdq
ins
in
bound
aam
xchg
leave
pop
movs
mov
je
mov
add
fmul
jnp
pop
retf
das
cli
icebp
std
and
mov
outs
jo
push
sbb
cmps
mov
loope
daa
test
push
or
xor
add
and
or
adc
ja
stos
mov
out
fsub
xor
jbe
mov
cmp
stos
call
xor
rol
(bad)
in
lods
add
mov
test
mov
daa
push
sbb
rcr
push
out
and
sbb
call
mov
(bad)
xchg
xor
and
adc
jbe
adc
dec
sbb
gs
mov
and
mov
inc
lods
sti
push
lock
xlat
pop
mov
xchg
or
(bad)
rol
cwde
les
dec
push
xchg
mov
xor
mov
sub
fistp
jae
js
pop
dec
pusha
mov
popa
fwait
cmps
mov
out
or
cmp
daa
and
pop
mov
mov
mov
lods
bound
and
fst
sbb
loop
cmc
dec
xchg
mov
mov
mov
in
adc
sbb
mov
xor
loop
stos
sti
push
mov
rcl
std
mov
and
dec
fcomp
push
inc
cmp
mov
sbb
in
jae
push
xor
push
gs
add
(bad)
scas
js
cmps
ss
into
sahf
jne
dec
xor
fidiv
lock
jp
popf
push
jecxz
stc
xor
xchg
pop
ss
xchg
add
pop
xchg
idiv
ja
test
out
shl
outs
jl
test
dec
sub
dec
fnsave
je
inc
mov
push
fwait
xor
out
jecxz
jo
shl
aam
xor
and
frstor
xchg
ins
cmp
mov
rcr
daa
retf
lock
retf
dec
mov
xor
rcr
std
les
(bad)
mov
lods
cmps
mov
les
mov
inc
retf
and
enter
loopne
fs
xor
aaa
pop
inc
xchg
push
sbb
shr
sar
hlt
pop
jae
dec
fstp
xor
add
test
push
je
push
and
cmp
mov
(bad)
fsubr
sbb
(bad)
mov
outs
mov
and
popa
xor
cmc
div
ins
mov
jg
xchg
mov
jmp
mov
cmp
fwait
mov
aaa
push
fmul
pop
pusha
cmp
aaa
sbb
sahf
push
pop
push
jmp
pop
mov
cdq
clc
pop
xchg
aad
sbb
es
or
mov
inc
addr16
bound
dec
aas
(bad)
fist
fist
push
mov
pop
xchg
loope
dec
call
shl
cmp
mov
xor
ret
neg
pop
jp
mov
jnp
push
cmp
shr
lods
pusha
ret
or
pop
gs
xchg
pop
mov
scas
scas
cmp
aam
mov
cmp
cmp
and
test
mov
mov
push
lea
arpl
fst
lock
dec
mov
push
scas
xchg
sbb
xchg
pop
pop
jmp
mov
bound
mov
repnz
fnstenv
not
sub
hlt
icebp
retf
push
shl
cmp
mov
dec
aaa
inc
mov
int
cmp
into
add
cmc
or
loope
imul
pop
cmp
inc
scas
adc
sbb
paddsw
dec
jmp
in
pusha
jl
jae
mov
fs
out
push
test
sbb
jecxz
mov
xchg
mov
ror
test
out
jns
cmp
rol
add
xchg
inc
jle
push
push
jnp
cmps
mov
cmp
ins
(bad)
xchg
xor
aaa
fnstcw
or
or
ja
xlat
cmp
fwait
mov
jg
fisttp
mov
and
pop
div
movs
jl
xchg
lock
jmp
xchg
mov
bound
shr
sbb
mov
dec
mov
cmp
aam
fistp
cmp
adc
mov
mov
push
scas
jnp
fisub
cdq
mul
jb
mov
add
imul
aas
movs
inc
ja
mov
dec
enter
mov
je
lea
xchg
fnstcw
mov
mov
add
retf
in
mov
scas
retf
aas
test
inc
mov
sbb
retf
repz
js
cwde
addr16
cmps
dec
sub
fdivr
fcom
xor
sbb
mov
or
sbb
add
sbb
push
sbb
pop
cmp
call
xchg
and
sbb
sub
in
call
cmc
rol
mov
sbb
sbb
add
in
jae
xor
and
inc
jb
push
xchg
push
sbb
movs
mov
push
out
fmul
mov
push
dec
jb
into
add
jne
and
sbb
jg
sar
add
inc
hlt
hlt
xchg
xor
inc
push
mov
cmp
mov
xchg
add
mov
pop
xchg
dec
push
mov
add
mov
ss
retf
adc
mov
popa
ficomp
push
jbe
inc
sub
mov
mov
call
inc
xor
cmp
aaa
mov
std
jg
mov
ja
movs
(bad)
sbb
and
stc
xchg
add
es
sub
mov
jae
shl
jg
mov
xchg
sbb
push
test
shl
popf
push
adc
in
(bad)
test
mov
std
sub
sub
jmp
gs
cmp
es
cdq
mov
stos
cmp
cli
or
xor
aas
xor
xor
aas
mov
lods
push
cmp
push
push
das
pop
neg
xchg
aas
(bad)
cld
jo
dec
jb
test
loop
repnz
lahf
les
sbb
jmp
cmp
js
cmps
cmps
sar
nop
fs
xchg
mov
fmul
sahf
scas
xor
push
jmp
(bad)
fstp
adc
inc
mov
inc
es
retf
pop
push
scas
outs
out
daa
test
je
jb
ret
sub
push
mov
neg
inc
fisttp
lods
cmp
mov
std
sbb
sub
shl
leave
outs
outs
dec
xor
test
xchg
pusha
out
inc
das
call
mov
(bad)
movs
(bad)
cmp
xchg
mov
xor
lds
xchg
lahf
dec
hlt
sub
push
cmp
icebp
enter
pop
sub
mov
inc
add
mov
mov
cdq
cli
or
popa
adc
arpl
jo
mov
fs
cmp
test
push
jecxz
sbb
fcom
test
fdiv
cmp
jg
lahf
test
cmp
fs
mov
add
repnz
(bad)
js
xchg
add
frstor
loop
iret
sbb
jp
scas
adc
push
mov
sbb
mov
xchg
and
sar
mov
aas
fst
jmp
inc
imul
or
retf
mov
inc
push
lods
push
sbb
push
dec
into
aad
sbb
ins
mov
stos
leave
xor
test
jmp
xor
xchg
push
jecxz
sti
push
push
inc
hlt
in
push
in
add
push
push
inc
push
lods
inc
aas
jge
test
pop
cli
shl
jecxz
jae
sbb
cmp
or
pop
lods
pop
stos
add
fs
movs
sbb
popf
mov
sub
sar
inc
lea
jl
pusha
icebp
sbb
xchg
mov
jbe
lock
mov
push
xchg
call
xchg
cwde
inc
loope
out
xor
ds
jbe
xor
jge
adc
inc
test
imul
xlat
pop
fwait
icebp
or
fs
cmp
inc
and
mov
imul
sbb
idiv
cmp
push
stos
lock
lock
push
fimul
sbb
cmps
xlat
xchg
ja
test
cmc
adc
jg
in
jmp
hlt
sbb
mov
mov
push
cs
shr
pusha
dec
cmps
cmp
mov
xchg
mov
inc
out
icebp
or
mov
inc
ss
xor
popa
xor
add
xchg
mov
addr16
xor
fucomip
aaa
mov
jnp
test
xor
mov
sub
jmp
test
ja
cdq
idiv
out
fcom
dec
fs
cwde
push
push
dec
int3
(bad)
aam
into
xor
sbb
sub
(bad)
mov
xor
sbb
mov
jae
fidiv
push
js
adc
jnp
pushf
push
and
mov
and
dec
fprem1
xchg
push
popf
call
je
sub
mov
cmp
out
adc
jnp
mov
ja
mov
aas
cmp
add
mov
or
(bad)
pop
sti
cmp
push
add
mov
stos
dec
cmp
jg
fsub
leave
push
addr16
inc
fdivr
xor
and
lods
das
popf
and
jge
sahf
jg
ror
mov
pop
out
(bad)
inc
mov
pop
pop
lea
cmps
loopne
xchg
fbstp
daa
into
fbld
cli
mov
cmp
inc
jb
mov
add
mov
cmps
fchs
js
pushf
test
push
jmp
cld
jecxz
stc
ds
jg
movs
sbb
or
mov
mov
fmul
inc
jne
cli
xor
push
mov
mov
xor
or
aaa
dec
push
mov
loop
push
pop
lea
mov
pop
xchg
fistp
pop
jmp
jge
mov
outs
push
xchg
mov
call
jmp
push
cmp
and
aaa
pop
push
inc
mov
cmp
push
mov
inc
out
loop
movs
lock
adc
sbb
cmp
xor
lods
add
imul
mov
inc
sti
(bad)
mov
int
jb
push
push
lods
jbe
mov
dec
cmps
(bad)
xchg
push
in
nop
jno
aad
xchg
or
movs
in
mov
hlt
sbb
shl
pop
inc
jmp
dec
test
mov
inc
call
les
pop
ins
icebp
mov
test
sub
add
mov
push
or
fwait
or
fidivr
xchg
dec
inc
sahf
scas
mov
out
xchg
ds
jl
pop
pop
inc
mov
addr16
iret
xchg
dec
out
push
pop
(bad)
stc
add
aad
lods
inc
dec
add
mov
mov
adc
pop
sbb
sub
pop
jae
jns
or
mov
bound
add
imul
bound
cmp
sub
imul
pop
mov
pushf
sbb
dec
xchg
jmp
pop
mov
dec
mov
ins
pushf
les
and
jecxz
mov
sbb
ds
in
shr
xchg
fadd
sub
or
shl
enter
pop
cmp
push
jge
mov
imul
cli
or
add
xor
push
lahf
add
push
mov
lea
daa
or
lahf
and
sbb
push
fdiv
xchg
dec
ret
cmp
inc
mov
scas
iret
inc
sbb
push
xor
cli
cdq
retf
jge
fadd
dec
into
adc
cmp
cld
iret
inc
jmp
pop
pop
imul
jge
test
adc
mov
stc
cli
add
adc
xor
ja
cmp
int
pop
cmps
jbe
retf
xchg
mov
sub
add
mov
xor
pusha
push
jno
jl
xchg
repnz
mov
cld
push
pop
xlat
rcl
mov
add
and
ins
sahf
lods
je
push
cld
xor
ds
fild
adc
inc
cmps
or
inc
mov
or
stos
int3
into
adc
fild
repz
bound
in
xor
sub
outs
dec
adc
cmp
mov
cmp
aaa
ins
cld
int
adc
jmp
cli
pop
popa
sub
ins
cli
mov
mov
pop
(bad)
or
scas
dec
scas
arpl
lds
cmps
in
jecxz
dec
xchg
cmps
inc
nop
cs
and
mov
ja
inc
imul
push
gs
cmp
dec
xchg
cmps
xchg
mov
inc
scas
imul
sub
xor
jl
mov
xor
jns
fisub
mov
jle
dec
inc
lahf
enter
repz
mov
jg
stos
cdq
push
fstp
xchg
and
imul
push
in
lock
retf
scas
mov
mov
xor
sub
xchg
inc
jne
push
mov
inc
ds
mov
sub
pop
or
mov
sbb
cmp
jns
and
ss
scas
js
sahf
pop
xor
xor
lods
cmps
adc
pop
inc
jecxz
xchg
sbb
push
imul
pop
out
lock
mov
test
aad
xchg
xchg
fcomi
sbb
add
fcompp
test
lods
dec
fistp
adc
and
push
dec
push
lods
sbb
popa
mov
push
xchg
mov
clc
push
jecxz
sub
xor
adc
add
pop
mov
cmp
outs
stos
cdq
inc
add
call
in
add
and
ret
xchg
sbb
pushf
add
retf
test
test
popa
xchg
mov
ret
fimul
mov
push
(bad)
js
xor
jg
add
dec
lods
sbb
js
inc
sub
mov
iret
push
cli
das
mov
add
sbb
mov
ins
arpl
ja
mov
pop
pop
and
test
jne
ins
push
pop
nop
dec
repz
cwde
dec
in
js
stc
rol
sbb
lods
test
movs
retf
fs
test
dec
fidiv
sub
clc
into
and
pop
fist
pop
popa
fwait
fwait
into
enter
inc
xchg
in
add
retf
pop
sbb
push
add
pop
mov
fisttp
cmps
xor
xlat
mov
fmul
and
outs
inc
jl
inc
neg
xchg
dec
out
in
sub
rol
call
mov
xor
(bad)
icebp
lea
lods
xor
pop
mov
or
fdivr
fild
ss
or
or
lahf
imul
cwde
mov
stc
pusha
retf
(bad)
rcl
gs
sti
pop
xor
adc
es
mov
adc
imul
cmp
bound
jmp
xchg
xor
adc
push
mov
inc
cdq
rcr
lock
mov
pop
in
mov
das
idiv
or
inc
ins
cwde
lods
dec
loope
fisttp
sub
dec
into
and
pcmpeqw
inc
es
cdq
mov
xchg
aas
xor
or
clc
bound
push
in
cmp
add
dec
mov
cmps
cmp
mov
sbb
xor
test
nop
lock
inc
lea
movs
repnz
mov
cmc
sbb
jne
mov
imul
jmp
cmp
loope
jmp
jmp
gs
dec
cs
mov
mov
sub
add
adc
jge
mov
mov
fst
mov
ja
mov
cmp
xlat
xchg
aas
mov
jp
mov
dec
adc
jbe
icebp
ror
scas
mov
outs
call
xchg
cld
fidivr
xchg
add
jmp
sub
(bad)
icebp
retf
push
into
push
add
push
adc
jmp
int
cmp
clc
setg
ins
dec
pop
cmp
cmp
jo
push
fwait
daa
nop
pop
fdivr
fnstcw
mov
sbb
xor
xor
sbb
inc
cdq
jge
mov
pushf
ja
mov
cmc
sbb
push
repz
jae
mov
push
xor
fsubr
popf
xchg
pop
fnsave
or
push
enter
aas
cmps
or
jg
inc
pop
push
(bad)
mov
mov
jmp
jae
fnstcw
or
adc
fiadd
movs
cmp
xchg
fstp
cdq
push
mov
jne
lea
sahf
clc
ins
sahf
les
psrlw
pushf
sub
shr
push
xchg
mov
cmc
cmc
(bad)
dec
inc
loop
jb
push
repz
xlat
rep
push
shl
cmp
movs
adc
xor
cmp
jmp
or
mov
sbb
adc
test
inc
lods
ds
mov
jmp
or
xlat
mov
loope
inc
pop
rcr
popf
out
xchg
out
xor
cmp
movs
mov
(bad)
fadd
mov
movs
fcmovb
fs
jmp
mov
pop
sbb
cld
fist
push
imul
mov
es
nop
(bad)
mov
xor
add
sti
jbe
pop
xor
xor
jmp
bound
dec
xor
fwait
sub
fsub
repnz
outs
pop
rcr
mov
xchg
jl
xchg
pop
xor
repz
ss
pop
lods
mov
dec
ins
mov
(bad)
fimul
fwait
mov
add
aad
out
cmp
js
sbb
push
into
enter
outs
jmp
jno
sti
cmp
and
mov
mov
jmp
dec
add
aaa
cs
cmps
out
mov
data16
inc
push
stos
popa
icebp
cmps
clc
cmp
nop
js
clc
sti
nop
sbb
inc
repz
cmps
jmp
and
cli
loop
mov
mov
imul
(bad)
cld
cmp
sbb
test
jns
call
(bad)
or
adc
xor
frstor
test
ds
ja
mov
arpl
jmp
add
ins
(bad)
fdivr
addr16
(bad)
cdq
push
cmc
mov
adc
pop
mov
scas
mov
out
test
inc
in
xchg
mov
inc
xchg
push
cld
cmp
ds
icebp
into
jbe
and
ds
rcr
cmp
mov
jmp
cmp
popa
pusha
and
and
js
arpl
imul
dec
cmp
xor
mov
push
ret
aas
leave
fldenv
jne
pop
(bad)
sahf
cmp
shl
and
icebp
xchg
push
cmps
out
xchg
jge
popf
mov
adc
retf
test
lods
je
pop
lds
cs
neg
push
jecxz
jo
dec
stos
or
mov
pusha
mov
or
test
pop
je
xor
adc
jg
add
dec
pusha
(bad)
jg
shl
inc
mov
xchg
dec
push
dec
jmp
lea
pop
jp
lds
popf
fadd
popa
retf
lahf
jle
mov
hlt
add
push
mov
push
xchg
lds
cwde
hlt
(bad)
loop
jno
jl
cmp
in
jns
sbb
ror
push
lea
pop
mov
mov
loop
sbb
or
ds
add
imul
sbb
mov
not
popf
pop
shl
in
inc
inc
xchg
xlat
pop
call
and
fimul
ffreep
aaa
test
ja
test
add
rol
dec
adc
call
pop
jecxz
sti
jns
sub
imul
xchg
sahf
mov
push
jmp
je
iret
sub
add
sbb
pop
xchg
jg
mov
jb
mov
inc
(bad)
in
loop
retf
pushf
outs
jnp
mov
inc
in
mov
mov
xchg
jne
imul
jl
in
and
repz
push
inc
frstor
sub
loope
iret
ds
and
jp
ins
pop
sti
je
jns
mov
mov
call
bound
adc
add
push
mov
ins
lods
into
call
xor
xchg
enter
repz
sbb
fld
mov
dec
adc
jg
nop
jg
leave
mov
and
jne
sahf
lea
enter
mov
repz
rcl
stos
jb
daa
jg
jg
push
pop
push
mov
pop
pushf
mov
fild
nop
push
xchg
leave
jbe
inc
iret
ss
imul
(bad)
movs
xor
or
imul
cmp
inc
jae
push
dec
xchg
popa
call
retf
hlt
inc
cmps
mov
sbb
mov
ds
jmp
fwait
lods
inc
sar
adc
adc
mov
push
out
push
sub
adc
inc
mov
and
leave
pop
(bad)
xchg
aas
mov
hlt
inc
or
jo
mov
scas
sub
push
pusha
mov
xor
sbb
xor
sti
(bad)
cld
pop
push
dec
sub
loopne
mov
movs
imul
cli
dec
movs
mov
cdq
sahf
mov
aas
into
xchg
mov
dec
ret
jp
sbb
xor
shr
ja
lods
jno
cmp
jbe
or
mov
mov
cs
or
call
in
pop
xor
or
pop
mov
mov
cmp
mov
(bad)
scas
test
mov
jb
pop
jbe
lea
mov
dec
mov
cmps
div
mov
cmc
imul
mov
mov
xor
test
mov
ds
sbb
hlt
sar
pop
jg
mov
push
pop
pop
xchg
mov
pushf
dec
pop
into
add
je
and
pop
sbb
pop
mov
fist
mov
pop
fwait
mov
fyl2xp1
xchg
aaa
mov
add
jp
lahf
out
xchg
ret
test
into
out
and
shl
mov
js
xchg
mov
shr
test
mov
cs
mov
repz
cdq
cmp
aaa
outs
inc
lea
jnp
fisttp
inc
in
out
sbb
inc
cmp
pop
sbb
aas
mov
fild
mov
je
fwait
test
leave
fild
in
add
dec
not
and
bound
int
hlt
sub
inc
xchg
and
es
cld
aam
in
xchg
mov
xor
enter
jae
dec
scas
and
jge
jae
pop
lahf
ret
xor
cmps
inc
jmp
jne
pop
aas
fist
or
sbb
sub
mov
arpl
or
ftst
sbb
repz
cmp
adc
(bad)
pop
xchg
in
test
test
jmp
adc
dec
fnstcw
mov
cmp
mov
inc
out
retf
dec
jecxz
lock
in
cmp
pop
adc
popf
pushw
jns
cmps
mov
or
or
aas
fisub
pop
jnp
adc
data16
push
ds
jne
mov
pop
(bad)
xlat
mov
jecxz
bound
jb
sahf
test
ret
cdq
push
rcl
add
jl
mov
je
test
xchg
retf
pop
jmp
stos
cmp
cs
(bad)
call
cmps
sub
mov
or
mov
lods
xchg
dec
and
pop
xchg
repnz
(bad)
sbb
mov
mov
sar
dec
push
xchg
movs
add
and
fnstsw
les
ins
mov
test
pop
sbb
aam
or
js
xchg
mov
dec
fldenv
call
pushf
xchg
scas
les
fwait
lods
inc
bnd
ds
pop
fidiv
ja
mov
push
push
fwait
push
sbb
mov
int3
push
cli
retf
push
mov
jbe
inc
sbb
and
jmp
xchg
ror
popf
outs
add
mov
and
jae
jmp
jno
pop
addr16
fimul
fcomp
pop
in
mov
or
not
scas
in
fisub
mov
out
push
cmp
out
loope
cmp
scas
dec
jecxz
cmps
sub
das
(bad)
in
push
out
inc
jne
push
div
sub
xchg
fwait
mov
push
jmp
sti
clc
or
call
adc
jle
lods
js
movs
xor
fsub
fcom
lahf
or
call
push
mov
iret
cmc
jle
xlat
add
(bad)
stos
aaa
in
imul
cld
js
retf
ret
out
js
cwde
push
out
pop
fist
sub
icebp
fnstenv
pop
sub
aaa
sbb
and
xchg
(bad)
scas
xor
xchg
sbb
xchg
push
je
pop
retf
add
mov
scas
imul
cmps
mov
xor
outs
xchg
cli
call
cmc
jnp
jae
pop
repz
hlt
and
pop
daa
test
lock
mov
push
cwde
mov
js
into
jmp
fisttp
push
cmc
push
pop
sbb
xchg
bnd
pop
jns
cmp
push
retf
retf
sbb
fistp
cli
add
mov
pusha
mov
imul
or
dec
inc
cwde
xlat
mov
cli
icebp
xchg
inc
mov
jno
mov
(bad)
xchg
lock
mov
call
sahf
pusha
pop
mov
xchg
jp
jl
mov
sbb
(bad)
mov
scas
loop
push
add
or
sar
sar
inc
push
dec
mov
push
pop
std
pop
cs
mov
mov
les
jne
aas
call
add
ins
or
pop
mov
and
daa
mov
jp
scas
dec
jecxz
repz
in
call
sbb
dec
lock
cmps
jmp
nop
push
das
shl
xchg
fcmovb
jle
lahf
mov
or
sub
jmp
xor
aaa
adc
mov
fisttp
push
aad
add
cmp
cmp
and
jle
shl
cmp
mov
pop
out
fistp
add
mov
jg
(bad)
cwde
pop
loopne
add
shl
in
out
sahf
outs
popa
lea
repnz
leave
dec
cdq
test
dec
sub
clc
icebp
loopne
rol
cmp
cmp
sbb
mov
nop
sbb
rcr
rcr
stos
icebp
jbe
jg
shr
pop
add
pop
les
inc
and
lods
mov
hlt
fcom
or
movs
push
les
mov
(bad)
xchg
jae
aam
mov
mov
ins
je
add
retf
imul
in
sub
repz
lock
ss
mov
pop
add
mov
sub
inc
jmp
bound
ds
sbb
cdq
sbb
shl
retf
xchg
movs
mov
sbb
inc
in
rcl
dec
pop
push
mov
dec
mov
and
rcl
shl
jg
xor
adc
dec
mul
push
sbb
shl
pop
sar
jo
push
cwde
cmp
jne
xchg
xchg
mov
in
stc
aas
mov
gs
pop
sti
pop
or
add
add
push
inc
lods
sub
mov
pop
out
jecxz
xchg
in
push
jecxz
push
push
test
shl
popf
dec
jmp
xor
pushf
(bad)
or
mov
adc
hlt
or
xchg
lea
das
sbb
cli
mov
(bad)
sbb
daa
pop
inc
movs
pusha
push
pop
mov
or
pop
sti
iret
aas
stos
aam
sbb
add
and
xchg
retf
xchg
xlat
mov
or
and
out
mov
cmc
push
repnz
mov
xor
mov
dec
xchg
mov
lods
mov
bound
mov
inc
mov
sti
sub
aam
fistp
cmp
lods
jno
cmp
xor
mov
imul
add
sti
jne
inc
inc
ret
sub
jne
xor
sub
mov
push
xchg
dec
cdq
iret
call
shl
jo
jl
push
shl
in
call
dec
xchg
stos
push
push
xchg
sti
cmc
jae
ins
xchg
adc
xchg
nop
mov
ret
xchg
mov
dec
lock
xor
push
(bad)
fsub
inc
jo
dec
fisttp
and
ret
fwait
int3
push
and
ja
in
jnp
cmc
push
ins
add
int
pop
jge
xor
add
lods
aaa
dec
mov
and
fistp
aam
sbb
push
sar
cdq
les
or
sti
pushf
jb
pop
mov
add
mov
xor
iret
rol
test
push
add
rcl
sub
or
popa
sti
aaa
sub
mov
xacquire
int
sub
xor
push
xchg
and
sbb
sbb
mov
and
retf
mov
jbe
bound
scas
pop
loope
repz
xchg
shl
std
xlat
add
ins
repnz
mov
pusha
mov
cmc
cli
out
retf
mov
xchg
xchg
dec
jecxz
scas
ds
loop
retf
and
xor
loopne
pop
or
cmp
push
jmp
sbb
sbb
aas
int3
push
ficom
push
fist
test
inc
popf
movs
lahf
sbb
sbb
fistp
les
pop
scas
jne
mov
dec
mov
xchg
arpl
std
fbld
xchg
stos
lds
mov
outs
sbb
repz
mov
dec
jecxz
fisttp
das
or
jno
or
jle
dec
pop
dec
lahf
les
push
stc
and
and
xor
jo
pusha
lea
jne
pop
inc
mov
mov
mov
sub
out
mov
cld
dec
add
pop
retf
ins
test
movs
jg
int
stos
xor
ins
mov
mov
scas
cmp
(bad)
out
mov
mov
jecxz
fistp
pop
push
xchg
xchg
repz
and
or
mov
jle
cmps
lods
ret
sub
js
cld
aas
mov
jne
jae
fcom
mov
(bad)
jb
add
jl
lods
dec
pop
stos
sar
xor
adc
test
inc
repz
cld
ins
dec
inc
popf
pop
frstor
lahf
dec
jmp
jae
jge
(bad)
mov
sub
jg
xchg
mov
or
mov
es
sahf
lods
dec
xchg
gs
cvtps2pi
ss
pop
mov
dec
sbb
cmps
mov
xor
inc
cld
xlat
jo
push
popa
aas
int
sbb
and
fild
jp
shl
push
fwait
cmps
(bad)
sbb
and
fstp
xchg
xor
jecxz
icebp
bound
push
stos
pop
jecxz
lock
cmp
mul
xchg
add
call
hlt
aam
data16
cli
outs
icebp
cmp
cmp
clc
mov
or
cmps
pop
gs
mov
adc
sub
dec
ret
mov
jno
push
jnp
xor
imul
inc
into
adc
popf
test
dec
sti
into
popf
adc
dec
push
stos
pop
shl
xchg
imul
js
in
cli
cmps
das
xchg
imul
mov
rol
fadd
push
in
xor
sar
xlat
pop
lds
xor
and
mov
out
fsubr
xchg
jbe
gs
and
sub
push
fisttp
cmps
xor
xchg
(bad)
sbb
cmp
(bad)
imul
jb
iret
lock
call
mov
call
shl
lods
stc
es
mov
xchg
repz
pushf
ficom
pop
fidivr
sub
inc
fld
aaa
jl
imul
add
push
push
in
mov
mov
xchg
xchg
jns
fdiv
jns
ficomp
or
or
mov
add
popf
push
push
nop
(bad)
ret
and
dec
bound
push
in
ja
test
adc
js
mov
outs
stmxcsr
mov
mov
out
cmp
es
fisttp
aaa
jo
popa
test
inc
add
mov
mov
sub
add
xor
sub
jae
xor
imul
adc
mov
push
sahf
fiadd
leave
fs
jge
dec
repz
inc
mov
xchg
addr16
jb
std
retf
test
lea
call
mov
lds
mov
xor
enter
arpl
dec
call
jl
movs
mov
push
std
lea
ror
adc
int
sbb
aas
sahf
add
ins
dec
mov
arpl
and
push
xchg
sti
push
loop
jo
lea
ror
(bad)
mov
and
ins
xchg
mov
call
xchg
mov
xor
adc
cld
lock
ins
mov
(bad)
sub
cmp
in
add
inc
test
cs
pop
icebp
mov
mov
jmp
sbb
add
pop
(bad)
pop
adc
jg
movs
cmp
sbb
and
enter
repz
pop
push
and
xchg
loop
dec
out
sahf
inc
and
jecxz
lea
push
pop
xchg
mov
ss
xor
fadd
jae
sub
(bad)
callw
push
dec
cdq
aas
inc
push
mov
xchg
xchg
mov
jmp
jb
pop
xor
sbb
xor
add
push
xor
mov
adc
jl
fst
test
sub
loopne
test
mov
push
lock
push
out
mov
aas
loopne
movs
(bad)
push
inc
loop
ins
not
dec
sub
stc
int3
xlat
pop
(bad)
or
ins
xchg
sbb
aaa
pop
fwait
mov
xlat
jle
jmp
xor
pop
or
pop
mov
push
js
ja
adc
mov
xor
int
mov
fcomp
push
scas
ss
(bad)
pop
xchg
in
test
mov
add
sti
cmc
push
jmp
mov
pop
jne
mov
cmp
ret
fcmovbe
dec
dec
mov
fisttp
mov
sub
ss
das
mov
jl
sbb
jmp
jno
in
add
sub
dec
pop
mov
(bad)
sbb
xor
jge
push
pushf
pop
retf
inc
loopne
xchg
push
enter
test
not
xchg
jge
pushf
fninit
cmp
cld
push
cs
sahf
xchg
addr16
pop
fiadd
dec
jmp
inc
or
cmp
imul
push
mov
ficom
fisttp
bound
fdivr
xor
adc
add
adc
outs
inc
mov
inc
in
scas
mov
add
mov
clc
sbb
pop
scas
pusha
les
cwde
je
cmp
cmp
shl
dec
mov
hlt
adc
rol
mov
dec
repnz
cld
das
pop
sub
xchg
mov
xchg
sub
adc
mov
add
cmp
mov
inc
ret
inc
add
pop
mov
retf
push
push
ficomp
retf
scas
sar
fisubr
jbe
adc
push
movs
jge
mov
jge
loope
dec
lock
push
xchg
mov
call
test
fs
ret
in
std
inc
dec
mov
jmp
inc
shl
push
jle
pop
ins
push
mov
jp
fwait
sar
in
std
or
xor
pop
push
arpl
xor
das
pushf
pop
shl
mov
jae
xchg
mov
xor
inc
call
lahf
xor
jle
or
fstp
les
and
aam
sub
imul
ja
mov
sbb
loope
test
repz
gs
inc
repz
cld
dec
cmp
push
call
fwait
sbb
mov
push
cwde
movs
mov
out
cmp
fidiv
jno
in
push
or
or
jp
movs
jp
pushf
cmp
xchg
and
mov
loop
js
mov
and
stos
in
(bad)
fwait
jno
fcom
xchg
outs
xchg
imul
ja
mov
pushf
xchg
in
lock
inc
pop
sub
xor
in
inc
into
xor
pop
push
xchg
dec
push
ins
(bad)
pop
sub
pop
cdq
cli
aas
mov
aas
fsubr
ins
jne
add
push
adc
popf
test
fcom
(bad)
dec
js
pushf
dec
jecxz
mov
repnz
dec
in
jp
clc
rcl
cli
scas
ret
sub
test
aaa
stc
fadd
cwde
mov
repz
fnsave
or
aam
fistp
xor
cmp
mov
test
mov
inc
stc
cmc
aas
mov
push
addr16
int
push
jl
and
es
pop
shl
mov
push
popf
mov
pop
clc
out
xchg
sbb
sti
jne
sbb
push
test
in
(bad)
dec
xchg
sar
or
cmps
add
stos
test
out
xchg
mov
jbe
mov
int
cmps
xrelease
cwde
scas
popa
out
jp
sub
add
in
jo
dec
lea
pop
jo
outs
es
(bad)
xlat
pop
in
dec
mov
sbb
pop
sbb
push
or
bswap
jp
test
or
dec
je
mov
dec
dec
mov
hlt
dec
jge
test
pop
test
mov
or
shl
lahf
add
fsubr
xchg
xchg
jmp
rol
fwait
mov
adc
aad
mov
fnstenv
adc
popa
clc
aaa
sub
fnstsw
dec
(bad)
call
imul
pop
add
add
add
fisttp
fsubr
cmp
mov
dec
mov
add
mov
dec
cdq
(bad)
cwde
ja
mov
push
(bad)
rcl
sbb
daa
mov
xor
(bad)
out
jecxz
ins
mov
adc
cmp
xchg
inc
add
xor
loopne
and
mov
xchg
ds
lock
out
cmp
fs
add
jnp
cmp
jae
fisttp
cmp
mov
xchg
cmp
jno
fistp
jmp
jl
mov
fnstenv
lahf
dec
aam
pop
dec
xchg
rcl
mov
ja
popf
pushf
adc
cli
icebp
xchg
cli
jns
mov
cld
cmp
fstp
cmp
xor
inc
movs
inc
and
retf
sub
stc
outs
jmp
inc
cmp
sbb
pop
jo
sub
add
imul
addr16
mov
outs
aaa
and
rcr
retf
push
mov
dec
xchg
(bad)
loopne
loopne
jno
call
dec
mov
mov
sbb
lea
loope
mov
(bad)
pop
outs
mov
es
xor
(bad)
fdivr
xor
sbb
stos
pop
jae
cs
pop
icebp
cwde
test
sub
(bad)
pop
in
add
aas
jmp
and
mov
movs
ds
mov
fcmovnbe
sbb
int3
jb
bound
xchg
outs
loop
and
popa
out
arpl
clc
(bad)
cmps
push
loopne
scas
(bad)
cmps
jmp
mov
in
(bad)
mov
cmp
ss
mov
add
fild
ins
push
popf
push
or
mov
stos
pop
pushf
enter
pop
jg
add
push
sbb
and
(bad)
dec
pop
retf
sahf
mov
sub
push
dec
clc
icebp
xchg
aaa
stos
icebp
jb
fs
and
rep
sahf
xlat
mov
out
xchg
js
enter
jecxz
lock
cmps
leave
das
lods
inc
inc
test
test
lds
lea
cmp
ss
lock
call
sbb
jmp
or
push
(bad)
ror
push
add
loop
retf
jbe
fs
inc
cmp
xchg
cmp
out
lods
repz
push
sub
pop
cld
movs
sar
mov
daa
sar
lahf
xor
ins
test
xchg
xor
cwde
mov
arpl
xchg
jnp
push
sub
(bad)
cld
int3
jnp
add
arpl
adc
xchg
lods
mov
pop
mov
call
inc
je
in
add
and
ss
push
fist
(bad)
xchg
xchg
and
pop
jg
cmps
inc
mov
pop
push
and
pop
call
or
jecxz
lea
inc
pop
call
sbb
adc
fiadd
and
loope
retf
sub
or
jl
aaa
or
mov
daa
fild
aad
xchg
jp
push
xor
pop
mov
jg
imul
pop
retf
mov
cld
sbb
inc
clc
in
adc
dec
pushf
pusha
retf
inc
in
xchg
fs
xchg
jb
in
xlat
test
lock
cwde
mov
ja
mov
or
fsubr
dec
push
mov
dec
inc
push
sub
pop
jecxz
imul
les
sbb
jl
mov
mov
cmp
jp
cld
jns
inc
xor
pop
and
add
inc
dec
sahf
push
xor
imul
dec
in
lock
xor
sbb
xchg
push
xchg
cmps
ins
imul
push
cmp
cli
mov
sahf
mov
push
rcr
inc
test
hlt
and
sti
adc
xchg
jbe
dec
fidiv
or
loope
std
ds
sbb
jno
pop
(bad)
push
add
cwde
test
inc
pop
into
pop
(bad)
xchg
push
shl
fs
out
outs
push
jb
out
and
(bad)
dec
xor
test
rcr
inc
mov
je
test
dec
mov
xchg
xchg
fisub
test
add
adc
test
cmp
shl
ss
push
dec
mov
inc
aas
push
scas
mov
mov
iret
or
lock
ins
add
cmp
aas
iret
add
outs
pusha
test
add
(bad)
and
push
pop
jmp
xchg
aaa
mov
jbe
mov
and
xchg
pusha
pop
xlat
cli
xchg
jp
jg
(bad)
xchg
ret
dec
add
cli
add
inc
rcr
xor
fsubr
inc
call
cmps
sbb
ds
call
jmp
inc
xor
xor
adc
pop
pop
and
sub
ds
inc
popf
test
aas
enter
pop
js
stos
xor
mov
pushf
addr16
jae
cli
aam
and
push
cmp
sahf
test
aaa
lock
xchg
iret
sti
dec
ins
mov
inc
out
repz
(bad)
(bad)
push
stc
adc
dec
stos
push
add
mov
and
imul
or
and
adc
pop
and
cwde
push
xchg
pop
fild
scas
ja
movs
aas
jne
xchg
test
jecxz
xchg
cmp
push
scas
jle
mov
push
lock
icebp
adc
movs
(bad)
mov
ja
leave
test
push
shl
mov
loopne
push
scas
push
jecxz
repz
fist
add
dec
sbb
mov
fsubr
sbb
and
adc
jo
add
jb
scas
imul
cmp
aaa
cmp
rcl
fistp
inc
test
repz
pop
mov
xchg
imul
rcr
pop
jno
mov
aas
aas
stc
cli
adc
xchg
ins
call
(bad)
pop
mov
push
dec
push
lahf
imul
mov
jmp
jne
int
das
add
xor
add
stos
jne
mov
xor
iret
cwde
add
push
push
test
sar
adc
call
or
ja
xchg
test
adc
dec
push
push
(bad)
ds
dec
in
stc
cld
js
xor
sbb
push
test
sbb
icebp
(bad)
iret
iret
xor
stc
js
fiadd
pusha
add
retf
xor
push
daa
adc
data16
pop
sbb
and
popa
(bad)
xor
imul
(bad)
dec
xchg
enter
movs
jl
call
lods
and
ror
outs
inc
xlat
xchg
in
repz
push
mov
fdiv
adc
jbe
add
dec
cmps
push
cs
test
inc
in
or
inc
inc
popa
xor
and
cwde
sub
test
xor
ds
test
sbb
and
fild
idiv
pop
scas
pop
div
xchg
addr16
and
sti
cmc
add
test
data16
test
or
test
scas
je
pop
retf
xor
adc
sti
sbb
inc
cwde
push
or
xchg
call
nop
setno
gs
dec
push
into
sub
pop
jge
cmc
inc
xchg
adc
sbb
cmp
mov
pop
out
xchg
daa
mov
jno
ins
push
push
test
aas
xchg
rcl
ffreep
mov
nop
push
test
add
mov
add
cli
fisubr
lods
test
dec
ds
icebp
aam
in
and
dec
mov
inc
sub
ret
xchg
(bad)
xor
ja
nop
sbb
xor
cmp
jg
sbb
push
shl
add
lods
cmp
test
sub
out
pop
rcr
xchg
push
test
sti
pop
dec
test
mov
retf
xchg
popa
and
(bad)
lock
in
je
mov
data16
mov
clc
mov
test
push
test
push
xor
sub
or
call
mov
out
leave
or
and
inc
cvtdq2ps
jle
inc
push
(bad)
push
retf
popf
test
(bad)
retf
xchg
sbb
add
mov
pop
xchg
ret
mov
jb
in
mov
(bad)
mov
inc
mov
xchg
xor
icebp
not
xor
inc
retf
sbb
cld
fist
ss
pop
cmp
or
lahf
mov
mov
into
fadd
(bad)
out
jbe
sub
add
dec
ficomp
dec
ja
lods
lea
add
ins
(bad)
xchg
aaa
mov
js
fiadd
mov
ins
xchg
in
arpl
mov
sub
rol
idiv
ja
test
adc
dec
adc
and
jmp
mov
out
cmp
jle
cmp
mov
xchg
call
fild
call
aas
das
inc
and
add
pop
test
or
stos
sub
(bad)
fiadd
pop
shl
aad
xchg
rcl
or
shl
mov
arpl
cld
pushf
cmc
jecxz
pop
outs
pushf
mov
sub
sub
not
and
ss
dec
test
or
mov
stos
sub
or
add
leave
add
add
jbe
push
rcl
stos
lods
mov
jmp
movs
aaa
lods
in
jb
jnp
pop
stos
pop
clc
mov
mov
out
jno
std
movs
sub
jnp
mov
ja
mov
xlat
or
mov
cmp
mov
out
xor
inc
scas
push
sbb
out
fldcw
inc
cdq
stc
sbb
push
xor
inc
add
push
add
push
movs
sub
mov
sbb
push
inc
retf
aaa
mov
push
and
dec
lock
imul
loope
dec
call
inc
cmps
cmps
cli
or
jmp
and
repz
inc
mov
je
push
ficom
int
inc
xor
cmp
mov
jno
xchg
scas
mov
jmp
popa
xor
inc
cmove
jne
dec
pusha
scas
jae
lea
inc
xchg
mov
pop
xchg
enter
hlt
jle
pop
jb
call
fmul
push
std
sti
mov
repz
aas
test
push
xchg
or
rcl
pop
ins
fwait
scas
push
cs
jmp
jo
dec
fistp
jle
jbe
jns
xchg
lods
mov
jmp
jno
enter
adc
test
js
mov
push
popf
movs
mov
and
scas
xchg
sbb
dec
addr16
cmp
loop
inc
out
ja
in
jmp
mov
xchg
mov
push
xor
fmul
mov
inc
rcl
dec
out
cld
(bad)
push
cdq
pop
jo
dec
ficom
fs
sahf
cmp
jge
mov
mov
int3
dec
sar
fs
fnstenv
xor
xor
push
mov
test
xor
lahf
sbb
and
(bad)
fist
fcomp
inc
stos
xor
les
daa
(bad)
ror
mov
jp
jecxz
mov
(bad)
inc
inc
sbb
cs
mov
jbe
sub
sbb
mov
or
int3
dec
jmp
jno
clc
sbb
pop
adc
fldenv
ret
mov
mov
aaa
and
sti
enter
jmp
jns
dec
repz
pop
xchg
xchg
fs
popa
and
(bad)
repnz
lods
jle
pushf
xchg
mov
pop
adc
jg
mov
das
pop
cs
out
fistp
xor
pop
test
inc
ds
mov
scas
ret
adc
hlt
and
int
sbb
ss
sub
cmp
inc
pusha
mov
jae
lods
or
(bad)
in
mov
bound
push
out
jb
std
xlat
mov
mov
jle
mov
popa
daa
std
aad
mov
dec
outs
cwde
test
xchg
dec
fidivr
fstp
xor
push
ds
mov
mov
jmp
jbe
jge
int
push
push
or
jne
imul
add
xor
and
out
mov
loop
ins
push
stos
jae
mov
inc
add
fs
xchg
push
daa
hlt
rcl
fadd
sbb
test
cli
out
ins
cwde
movs
inc
in
fidivr
push
or
in
lock
bound
test
pop
popa
mov
cmp
lds
imul
cs
lea
gs
pop
sbb
mov
jne
inc
dec
mov
push
mov
ins
out
retf
xchg
mov
pop
jno
mov
imul
retf
(bad)
jg
movs
(bad)
fcomp
sbb
cmp
cli
adc
aam
call
iret
into
ja
cmp
jle
or
inc
test
push
xchg
mov
sti
inc
iret
jecxz
mov
pop
push
js
mov
sbb
mov
sbb
bound
and
stc
xchg
btc
test
and
xlat
xor
(bad)
mov
and
cli
mov
(bad)
imul
xchg
aas
stos
push
mov
test
add
inc
ins
nop
fsub
push
jmp
cmc
shl
daa
jo
mov
push
loopne
cmp
mov
ins
cld
aam
xchg
fistp
push
js
adc
push
dec
mov
push
mov
lea
cmp
cmp
pop
jbe
shl
mov
fs
rcl
and
std
xchg
sbb
ins
xchg
outs
push
xchg
xchg
mov
inc
int3
cmc
out
sar
xor
scas
xor
jb
inc
sub
stc
mov
pop
icebp
xor
push
pop
push
test
inc
jp
mov
stc
push
fistp
xor
addr16
dec
inc
stos
jl
movs
sub
in
cmps
test
add
pop
les
push
mov
pop
pushf
in
test
cli
sub
test
jae
fwait
mov
sbb
ror
mov
dec
cmp
ja
xor
pop
imul
or
xchg
inc
in
lea
xchg
fstp
push
arpl
jmp
nop
jp
mov
sti
cmp
enter
repz
jne
sub
imul
mov
jns
sti
shr
lods
lods
clc
cmp
pop
jle
test
or
retf
pop
xchg
cwde
inc
test
hlt
fist
inc
inc
or
jne
push
sub
shl
fisubr
mov
inc
inc
inc
cmp
sbb
sbb
js
test
outs
stos
fdivr
in
stc
xchg
add
push
push
lea
mov
dec
cmps
les
sub
retf
fld
stos
ret
imul
shl
xor
ins
sbb
lds
cs
(bad)
in
and
xor
adc
push
lea
jb
cwde
test
sub
imul
jno
leave
outs
push
lods
adc
jb
(bad)
push
or
adc
xchg
mov
inc
call
sbb
sti
jo
jl
push
mov
aas
and
jg
(bad)
mov
or
sbb
test
fmul
cwde
mov
ds
sbb
rcr
push
jmp
jge
cld
fs
xchg
inc
out
cmp
(bad)
jne
ja
iret
and
push
add
pop
test
outs
inc
cmps
xor
mov
and
div
aam
jne
mov
pop
jecxz
test
shl
gs
rcl
mov
bt
repnz
mov
push
scas
sub
(bad)
push
lds
cmp
jo
addr16
ja
fnstcw
inc
jmp
jns
js
retf
arpl
adc
jge
fisubr
stos
sub
movs
test
retf
cmps
sahf
daa
mov
popa
push
lods
js
mov
jge
in
add
mov
cmps
mov
addr16
mov
repz
push
jmp
cmp
(bad)
(bad)
fist
cmp
sub
ins
push
js
push
call
out
add
cmc
jg
jge
into
inc
aaa
push
iret
xor
push
fist
mov
push
mov
pushf
cmp
pop
pop
jmp
test
mov
jbe
mov
ins
cdq
in
xchg
call
aad
add
mov
daa
loop
adc
mov
sub
push
repz
(bad)
arpl
and
inc
mov
gs
xchg
mov
retf
es
inc
in
sbb
xor
cmp
jae
xor
inc
mov
cmps
push
aaa
mov
movs
or
or
icebp
mov
dec
pop
pop
mov
jge
fnstsw
add
icebp
mov
in
sbb
ret
scas
mov
push
aaa
stc
les
fwait
test
jecxz
fimul
pop
sbb
mov
dec
fnsave
jae
jge
sbb
add
xchg
mov
(bad)
cmp
rol
test
push
jno
sbb
and
jo
sbb
pop
sub
add
sub
(bad)
jmp
loopne
jae
mov
dec
xchg
in
popa
mov
or
add
shl
fwait
cdq
mov
sub
in
cmp
repz
push
aas
adc
or
add
enter
jg
jno
in
sbb
mov
pusha
jae
jp
mov
je
fadd
lahf
shl
es
fisub
jg
je
mov
inc
cmps
stos
jecxz
xlat
mov
push
retf
shl
xor
inc
xchg
xchg
cwde
aad
cmp
fsubrp
ds
sti
imul
in
mov
popa
test
inc
sti
push
into
adc
dec
jecxz
fistp
aas
pusha
push
cmp
inc
sub
mov
lahf
cmp
outs
fimul
push
jno
out
outs
push
sub
jg
push
gs
jg
shl
mov
test
pop
push
jl
icebp
cmp
pop
inc
cmp
dec
jecxz
mov
loope
pop
repz
cmp
loope
xor
pop
stos
mov
jnp
mov
xchg
aas
adc
jecxz
shl
aas
ins
mov
jmp
sub
fmul
push
cmp
jno
jno
inc
pop
pop
xchg
mov
outs
jmp
dec
cmp
adc
mov
lods
xor
jnp
fldenv
cmp
movs
cmps
mov
add
xchg
cmp
in
sbb
pop
jnp
popf
dec
(bad)
mov
jg
(bad)
cdq
dec
out
xchg
jno
std
stos
test
loopne
mov
imul
icebp
adc
cli
or
dec
xchg
push
aam
sub
cli
enter
aaa
bound
dec
fisttp
inc
popa
test
jns
mov
push
(bad)
jmp
jo
ss
xor
pusha
aaa
sbb
xlat
imul
es
or
stos
mov
aas
fcom
out
lods
mov
pop
jnp
lea
mov
mov
sub
sti
nop
sbb
jmp
test
pushf
adc
fwait
inc
out
int
cs
cld
fadd
and
dec
xchg
jno
jae
dec
aaa
or
pop
jmp
mov
pop
sbb
das
addr16
and
add
inc
push
mov
je
mov
inc
(bad)
fist
test
sar
mov
mov
push
lock
fcmovbe
push
sub
mov
sub
mov
test
jecxz
xlat
adc
ds
out
lods
pop
fidiv
je
dec
mov
jns
mov
xchg
mov
pop
iret
cli
adc
cmp
cmp
ins
jmp
push
ins
call
fst
cmp
jg
push
mov
pushfw
jmp
sub
(bad)
lods
or
push
mov
pushf
fisubr
stos
push
inc
mov
cld
fcom
lods
mov
sub
push
(bad)
int3
jbe
xor
or
cwde
aaa
sub
mov
mov
fpatan
cs
push
bound
inc
sub
sbb
push
xchg
jl
movs
aas
jb
cmps
(bad)
sbb
stos
xchg
or
xchg
add
xchg
in
test
call
mov
xchg
add
ins
xchg
std
pushf
ret
xor
xchg
xchg
jmp
call
ds
cld
std
push
dec
pushf
adc
lea
jle
sahf
test
xor
aad
(bad)
cli
push
mov
jae
inc
sbb
xor
pop
adc
mov
(bad)
ja
add
jl
test
inc
nop
fwait
mov
out
div
imul
loope
in
sbb
nop
jo
sbb
stos
pusha
fs
mov
xchg
(bad)
dec
dec
mov
in
inc
inc
dec
int
ret
or
sbb
sub
mov
in
mov
mov
jecxz
or
sbb
pop
sbb
sbb
mov
(bad)
ss
mul
dec
jmp
xchg
and
gs
mov
cmp
xchg
jb
int3
hlt
mov
cli
stos
lds
mov
xor
into
test
fnstsw
iret
push
fidiv
jnp
cmp
xor
popf
dec
daa
push
popf
retf
and
mov
out
aas
mov
cmp
push
and
es
fcomp
jne
pop
push
fnstsw
outs
mov
sbb
cmps
ds
pop
cmp
fnstcw
mov
pop
xchg
in
cmps
pushfw
xchg
inc
and
ret
test
ret
push
mov
lods
cmps
xchg
add
jmp
lahf
test
xchg
push
fst
es
lock
mov
fidivr
push
mov
push
mov
pop
out
neg
mov
xor
xor
sbb
fldenv
xchg
popf
scas
mov
push
ins
out
neg
les
push
cmps
pop
sti
mov
js
div
sbb
gs
test
out
aas
mov
jle
mov
push
and
cwde
adc
jnp
mov
test
iret
and
sbb
jge
mov
jns
cmp
je
mov
test
xchg
xchg
jl
xchg
jne
jb
in
xor
or
scas
sub
stos
push
xor
cmp
std
add
xor
(bad)
in
mov
xor
cmps
push
fidiv
popf
dec
loope
jne
icebp
fscale
push
lds
movs
ret
pop
ja
mov
cmp
fidivr
inc
mov
inc
retf
inc
stos
cmp
cli
retf
inc
out
imul
push
xchg
dec
xchg
lahf
mov
cmp
jl
lea
ret
or
add
aas
cmp
xor
fdiv
(bad)
fs
sub
stos
xchg
add
ss
jmp
sbb
add
or
sub
mov
test
scas
mov
fldenv
popf
sahf
scas
outs
daa
int3
loope
stos
call
dec
nop
js
cmp
shr
sub
fistp
and
xchg
xchg
sar
lock
jo
ss
cmovnp
adc
imul
cmp
std
push
dec
dec
and
(bad)
popf
aas
retf
neg
pop
jo
scas
jg
xor
inc
xchg
jbe
lahf
jno
jmp
jnp
(bad)
mov
push
xchg
mov
das
add
in
ins
mov
cs
jbe
pop
push
sbb
sbb
cwde
inc
daa
jnp
lds
push
aad
mov
inc
retf
or
adc
push
sub
xchg
mov
aas
lahf
scas
xchg
daa
mov
je
stos
pop
(bad)
fdivr
pop
jmp
jbe
lock
mov
pop
sub
inc
pusha
fwait
lods
inc
jecxz
clc
inc
pop
cmp
xor
aaa
pop
jbe
inc
inc
dec
mov
int
dec
inc
out
out
add
sbb
xor
jo
sbb
jae
test
and
lods
and
dec
in
sar
hlt
outs
jns
mov
mov
inc
in
mov
pop
jmp
(bad)
mov
je
mov
fs
shl
cmps
test
push
fwait
mov
dec
jecxz
mov
(bad)
sub
and
inc
cmp
jnp
mov
iret
pop
ror
inc
push
xor
add
and
pusha
jne
inc
cmp
stos
cmp
lock
std
sbb
je
jns
and
xchg
loopne
lahf
mov
and
movs
cli
aas
mov
add
jmp
bound
sti
cmp
cli
hlt
fist
push
je
inc
rcr
ins
push
inc
add
fild
jmp
ss
push
pop
sahf
push
stos
arpl
outs
or
lea
cmp
popa
(bad)
and
jnp
and
jle
mov
test
out
xchg
clc
mov
call
ja
xchg
xchg
retf
jl
xchg
jno
sub
cmp
ss
jecxz
out
add
adc
das
cdq
ins
and
xchg
mov
add
fidiv
je
mov
adc
push
mov
inc
xor
inc
out
mov
out
outs
jg
sub
popf
in
out
cmps
push
aam
inc
and
stos
test
add
xchg
call
mov
inc
dec
cwde
mov
dec
sub
(bad)
stc
lods
data16
xor
sub
dec
inc
mov
jno
retf
xchg
nop
adc
shr
lahf
into
popa
adc
inc
in
pop
push
inc
and
loop
popf
add
inc
mov
add
or
rcl
out
jb
mov
ins
movs
out
pop
mov
xchg
jae
ins
mov
push
ja
mov
sbb
(bad)
outs
data16
test
out
push
fmul
sbb
in
fistp
sbb
cmp
sbb
mov
ins
mov
xlat
jle
loope
shl
outs
jge
int
push
inc
add
and
sbb
jg
xchg
cmp
sbb
or
ret
inc
mov
jb
push
inc
mov
pop
mov
mov
xchg
xor
jns
movs
test
dec
sahf
pop
ja
mov
loope
clc
lock
(bad)
jp
push
fidiv
cs
cld
lods
data16
pop
push
cmp
push
ds
les
push
pushf
nop
add
call
inc
adc
pop
xor
sub
bound
jnp
stos
push
pop
neg
mov
inc
pop
jb
out
xchg
cmp
pop
sub
ins
(bad)
mov
dec
call
and
rol
call
loopne
lea
retf
dec
icebp
xchg
inc
fisubr
sub
lock
icebp
xor
dec
jae
ja
pop
popf
xchg
mov
add
repz
jae
int
sbb
add
jnp
ror
cmp
lea
push
and
xchg
cmp
push
cmp
push
xchg
mov
add
in
mov
aad
xchg
outs
ja
test
and
inc
mov
fidivr
or
rcl
addr16
xor
jno
pop
sahf
ins
pop
jno
retf
cmp
aad
loop
or
cmp
adc
pusha
adc
sahf
sbb
sub
arpl
addr16
or
sahf
mov
dec
sti
fistp
aam
popaw
mov
cmp
into
movs
popa
xchg
cld
add
mov
xchg
add
imul
mov
popa
xor
fisubr
(bad)
mov
jecxz
fimul
sub
cdq
ss
dec
fisttp
ins
push
mov
test
mov
loope
sbb
and
aas
adc
adc
jp
cmps
push
xor
cmp
fcom
loope
jo
sar
in
test
mov
(bad)
xchg
pop
xor
imul
sbb
mov
xlat
xchg
enter
stos
push
in
and
hlt
mov
sub
xor
lods
jne
jo
push
int3
cwde
or
out
cs
bound
in
add
jb
out
sub
stos
jge
mov
gs
mov
out
fidiv
sti
jge
inc
fnstenv
sahf
cmp
in
loopne
nop
mov
xchg
aaa
lea
mov
pop
and
repz
push
pop
shr
cmp
stc
(bad)
and
scas
sbb
inc
add
push
stc
popa
les
pop
jge
aam
or
or
and
fdivr
cmp
fwait
sbb
push
and
xlat
test
cmc
pop
jne
mov
dec
mov
and
mov
xchg
test
scas
push
rcl
xchg
leave
xor
mov
mov
xchg
mov
cmp
sbb
fcomp
jge
and
outs
test
dec
push
mov
stos
lods
mov
sub
pop
sar
lahf
icebp
pusha
pop
inc
inc
enter
add
jno
jnp
mov
push
cwde
cmps
mov
jmp
call
lock
jb
jle
mov
js
in
test
xchg
jno
cli
loope
add
outs
xchg
mov
je
mov
sbb
repnz
push
pop
mov
inc
call
in
push
(bad)
xor
adc
ins
xchg
imul
cmc
das
movs
call
shl
das
mov
scas
dec
inc
mov
add
or
iret
mov
mov
jbe
scas
jle
mov
pop
xchg
out
fs
mov
or
aad
add
mov
stos
pop
ja
mov
fcom
mov
fidivr
inc
dec
enter
add
cmp
aaa
imul
test
xchg
xchg
xor
inc
mov
adc
bound
dec
adc
xchg
mov
xlat
ror
loop
fs
fidiv
iret
lock
repnz
je
sahf
or
int
hlt
add
jle
cmps
xchg
dec
movs
imul
mov
push
pop
rcl
xchg
mov
es
test
push
and
std
cld
lods
in
jae
dec
mov
pop
push
mov
jnp
lds
ins
std
stc
ds
push
je
aaa
mov
sbb
das
mov
sahf
and
xchg
mov
dec
test
inc
stos
mov
jae
xchg
repz
xchg
addr16
xlat
mov
mov
pop
jae
add
(bad)
dec
addr16
inc
out
cld
es
enter
data16
or
stos
inc
and
mov
dec
xchg
out
sbb
add
cmp
jo
adc
imul
aas
xchg
sbb
push
ss
(bad)
and
jbe
lea
xchg
loopne
cwde
xlat
mov
not
cmc
sbb
sar
ins
push
popf
test
adc
scas
xor
inc
jmp
pop
xor
stc
(bad)
push
shl
cmp
push
mov
or
cmp
stc
daa
mov
bound
aad
adc
xor
add
imul
sub
movs
(bad)
push
and
imul
xchg
jle
dec
jle
mov
popf
mov
mov
jmp
rol
lods
mov
mov
test
aas
int3
std
test
fistp
test
in
in
sub
dec
sti
inc
push
pusha
cmp
mov
or
mov
(bad)
jg
cld
or
xor
aaa
or
cmp
pop
adc
mul
pop
in
cmc
mov
sahf
push
jle
push
lea
(bad)
dec
mov
xchg
popa
daa
mov
add
mov
sbb
push
xor
pushf
(bad)
retf
dec
fwait
test
js
ud2
das
nop
xchg
fild
add
dec
xchg
jl
xchg
ins
xchg
fwait
int3
scas
xor
shr
mov
inc
and
sbb
js
mov
inc
lahf
mov
bound
xor
fisub
and
fild
scas
in
xchg
les
or
stos
test
idiv
test
(bad)
or
sbb
in
mov
xor
les
or
shl
and
sub
xor
sub
arpl
inc
cmp
call
test
sar
popa
xor
xor
add
adc
inc
addr16
ud1
aas
cld
icebp
xchg
cmp
jnp
test
inc
pushf
std
mov
push
xchg
stos
test
clc
jle
fwait
popf
ficom
jle
add
mov
aad
push
fwait
inc
xchg
pop
lds
fsubr
xor
pop
arpl
pusha
cs
test
fmul
call
push
jns
leave
cmp
jl
xor
inc
mov
mov
inc
sahf
mov
ins
out
fcomp
out
pop
push
movs
jae
cwde
(bad)
cmp
shl
and
movs
mov
in
not
arpl
into
jmp
jg
mov
pop
sub
cmp
or
cmp
inc
sub
mov
mov
cmp
jo
call
les
ds
adc
push
jae
ins
adc
mov
test
loope
mov
jb
scas
pop
repz
dec
xchg
shl
out
jecxz
das
retf
aad
adc
arpl
(bad)
ins
ja
mov
push
ds
bound
mov
(bad)
dec
mov
data16
push
dec
stos
pop
push
xor
pop
fwait
mov
fild
repz
bound
sbb
push
outs
push
adc
mov
mov
ficomp
mov
js
test
xlat
fnclex
inc
xchg
(bad)
push
mov
sub
push
lock
lock
xchg
cld
xchg
dec
call
rol
test
test
adc
xor
retf
ror
xchg
mov
dec
es
in
repz
cdq
xor
adc
arpl
dec
sub
pushf
test
cwde
lock
inc
rol
cmp
ins
sbb
popfw
mov
cmp
xor
sti
push
icebp
imul
enter
mov
nop
pusha
lock
ret
outs
pop
sti
mov
add
les
cmc
ret
jno
pop
iret
xor
shl
jmp
or
jg
push
sbb
dec
pop
dec
mov
mov
inc
out
cli
pop
mov
jp
or
aas
adc
sub
dec
movs
jl
scas
dec
inc
xchg
into
xchg
inc
and
fprem
lahf
add
sti
jp
pop
jbe
xchg
jl
mov
cmp
les
(bad)
rol
mov
ficomp
movs
push
ja
mov
retf
cmps
mov
xor
fwait
mov
dec
(bad)
ss
sbb
in
repz
cmp
sub
lea
push
std
je
or
fwait
int
sub
stos
push
fwait
stc
cs
push
sbb
push
inc
pop
adc
repnz
scas
push
push
aad
jne
movs
cli
or
and
fild
repnz
jbe
mov
dec
loopne
loopne
xchg
fwait
pop
or
cdq
in
ret
dec
outs
mov
mov
sbb
sahf
xor
cli
in
mov
jl
stos
cmp
mov
push
xchg
mov
inc
iret
mov
test
popa
inc
push
inc
cmc
inc
and
or
pusha
sub
or
call
neg
test
xchg
sti
pushfw
adc
jbe
push
lock
sbb
adc
outs
idiv
sbb
xchg
ds
in
out
scas
loop
inc
lods
(bad)
fs
sub
cld
(bad)
inc
cmps
and
jg
cmp
icebp
xchg
mov
call
add
aas
mov
cs
and
pop
test
stos
pop
sbb
jle
into
loope
xor
xor
clc
jb
outs
jbe
mov
mov
xchg
pusha
jmp
add
mov
stos
imul
mov
ds
ficomp
dec
call
stc
loopne
xor
pop
cmp
cwde
push
add
ror
cmp
shl
push
push
jno
(bad)
and
pop
mov
test
dec
dec
nop
fwait
cld
xor
iret
xchg
inc
mov
push
push
stos
push
mov
dec
loope
mov
aad
jno
mov
xchg
shl
(bad)
mov
push
xor
xchg
std
retf
inc
je
scas
inc
fidiv
ss
int3
repz
jae
inc
call
pop
icebp
ret
nop
xchg
cmp
cli
or
and
pop
cmp
xor
imul
pop
xor
xor
stos
lods
imul
inc
cmp
xchg
das
xchg
fdiv
pop
inc
jb
and
mov
pop
mov
xchg
std
shl
or
pusha
mov
fs
xchg
and
fadd
xchg
mov
cmp
call
ja
dec
mov
xor
pop
lahf
cmps
mov
repnz
and
xor
jo
add
fistp
dec
adc
xchg
cmp
cs
rcr
adc
pop
push
lds
mov
outs
pushf
jecxz
fs
add
(bad)
nop
jo
inc
xchg
std
rcr
adc
dec
pop
xchg
xchg
ss
iret
adc
je
pop
or
(bad)
icebp
ret
cmp
test
inc
push
jle
lahf
mov
jnp
cli
add
pop
int
sbb
ds
mov
mov
jg
mov
inc
leave
(bad)
xchg
xor
in
je
ins
push
mov
push
mov
call
aad
or
adc
shr
xchg
(bad)
inc
pop
xchg
lahf
popa
ret
jp
xor
fist
and
aaa
pop
mov
outs
inc
mov
es
mov
sub
daa
xchg
jg
jbe
leave
pop
sbb
add
(bad)
into
push
(bad)
ficomp
retf
xchg
xchg
stos
pop
xor
push
mov
add
popf
push
repz
pop
cmps
sar
sub
loop
jnp
inc
mov
jl
xchg
mov
aas
adc
inc
stos
fwait
dec
jecxz
fisubr
sbb
fdivr
fist
sub
or
jne
cmp
add
xchg
mov
je
shl
xchg
push
dec
fs
push
imul
adc
dec
inc
test
dec
mov
mov
aaa
adc
(bad)
mov
(bad)
gs
xchg
xor
xchg
jnp
stc
stos
test
out
inc
sti
stc
test
out
std
popa
add
cmp
(bad)
xlat
aaa
inc
push
or
pop
fistp
pop
add
pushf
jno
cmp
jbe
push
mov
mov
out
or
push
mov
adc
adc
sbb
ja
movs
xor
test
(bad)
jmp
sbb
pop
js
mov
dec
and
pop
sub
mov
stos
int
and
and
arpl
lods
jb
dec
(bad)
aaa
cmp
iret
retf
shr
cmp
jno
cs
push
fwait
mov
cwde
clc
add
clc
jle
push
int
cs
push
push
mov
data16
push
sub
adc
and
aam
das
mov
ja
imul
addr16
(bad)
lahf
push
loopne
gs
stc
mov
movs
cmps
add
test
ja
mov
xor
jmp
out
test
ins
sbb
fidivr
fidivr
cmp
or
sbb
jnp
push
or
sahf
lea
stc
push
leave
fadd
push
and
push
push
arpl
lahf
sbb
ins
mov
lods
or
push
sbb
test
sti
aaa
mov
jno
pusha
jbe
xchg
jl
mov
mov
in
xchg
lock
xchg
sub
jg
mov
jmp
mov
mov
mov
(bad)
daa
sbb
repz
push
lock
pop
outs
jge
inc
sbb
stos
rol
out
jno
lock
inc
or
push
add
and
pop
and
mov
add
daa
xchg
std
popa
aad
jne
test
jmp
loope
xchg
retf
fucom
imul
shr
xchg
sbb
movs
test
adc
dec
adc
inc
jmp
sub
fst
repnz
xchg
data16
jno
jp
fwait
(bad)
ds
push
jmp
jle
mov
or
adc
mov
outs
in
(bad)
push
push
inc
mov
es
enter
jbe
mov
pop
xchg
int3
mov
into
xchg
addr16
repz
rol
lods
mov
pop
sbb
es
icebp
sbb
dec
pop
jmp
fisttp
mov
icebp
and
pop
cmp
ss
pushf
mov
fmul
call
pop
jno
out
sbb
jbe
lods
das
sahf
ins
(bad)
lea
fnstsw
jle
and
stc
xchg
mov
pop
mov
jg
outs
mov
xchg
push
add
mov
sti
mov
push
sbb
test
adc
ror
push
push
cmc
aad
retf
dec
shl
pop
das
into
fdiv
xor
jne
imul
mov
int
and
out
jp
jne
call
add
pop
dec
mov
movs
xor
lahf
test
sub
fistp
imul
push
sbb
fstp
inc
and
mov
movs
(bad)
mov
outs
cwde
mov
retf
(bad)
popf
mov
sbb
or
retf
fild
xor
or
push
mov
sahf
xchg
scas
sub
loop
xchg
add
pop
cmps
inc
fs
cmp
jnp
movs
dec
xor
cmp
stc
or
push
jae
popf
jle
nop
sub
lahf
dec
into
in
adc
repz
lea
ja
sahf
test
dec
repz
and
inc
sbb
outs
retf
adc
test
aaa
pop
test
inc
inc
jns
movs
leave
(bad)
dec
sub
push
mov
bound
sub
sbb
push
mov
scas
push
adc
cmp
mov
pop
(bad)
test
adc
cli
pop
push
cmp
push
mov
mov
cld
add
lock
add
fcmovb
cmp
add
loope
stos
add
ss
xor
mul
pop
sbb
arpl
jns
xchg
mov
jmp
pop
add
es
sub
fs
jl
movs
cmp
xor
pop
inc
sti
fistp
repnz
jbe
mov
jg
rcl
jmp
xchg
add
xchg
xchg
stos
not
aaa
neg
mov
idiv
jg
fwait
inc
(bad)
pop
lock
fild
xor
or
pusha
mov
dec
(bad)
mov
mov
jmp
push
push
shl
jg
mov
add
or
movs
cmp
popf
mov
cmp
and
in
xchg
adc
jbe
test
fmul
callw
or
rol
cwde
jmp
mov
sahf
push
and
loope
hlt
les
xchg
mov
ds
or
stc
loopne
shl
outs
gs
outs
sub
mov
mov
(bad)
cli
push
(bad)
cli
jbe
jbe
iret
pop
sbb
gs
cmp
cmp
inc
push
(bad)
adc
add
cwde
(bad)
adc
dec
out
popf
sbb
jbe
movs
jo
mov
dec
mov
xchg
jno
lock
test
pusha
loopne
lock
scas
fiadd
xchg
mov
iret
pop
scas
xor
repz
sub
xor
jl
mov
adc
dec
cdq
mov
pushf
cmp
icebp
inc
in
ror
pusha
xor
pop
ins
add
xor
data16
inc
sub
loope
pop
xor
fsubr
out
mov
jbe
lds
scas
(bad)
and
xchg
add
adc
retf
outs
jne
xchg
test
fcos
clc
ret
outs
fwait
test
lock
into
xor
notrack
jmp
std
pop
push
jge
scas
push
sbb
cmps
lods
xchg
ss
jo
cld
jbe
jg
int
push
imul
mov
push
cmps
into
cli
add
add
push
sbb
push
xchg
adc
in
mov
xchg
fsubr
mov
stos
xor
mov
mov
jmp
(bad)
or
mov
cmp
dec
call
inc
jmp
arpl
xor
cmp
jo
add
pop
mov
mov
adc
(bad)
mov
add
and
jmp
jp
and
jle
xchg
(bad)
push
xchg
loop
push
nop
xchg
jne
(bad)
cdq
xchg
mov
add
xchg
std
lods
jmp
cmp
test
xchg
push
in
xor
cmp
call
lods
push
pop
push
stc
inc
add
scas
mov
into
shr
mov
js
pop
xor
or
fwait
pop
iret
or
sbb
pop
add
sahf
pop
xor
jae
fnstsw
sbb
fs
nop
push
repz
inc
sahf
out
xchg
call
jecxz
mov
movs
jmp
xchg
add
lock
icebp
xchg
cwde
mov
imul
shr
push
int
jo
dec
test
sbb
imul
pop
jge
(bad)
mov
sbb
ins
dec
pop
ficom
cs
adc
lahf
das
test
fistp
je
pop
add
sar
in
repnz
xor
push
push
mov
push
mov
adc
call
rcr
stos
sbb
test
push
aas
call
aas
imul
cld
mov
out
pop
add
pop
jl
xchg
inc
sbb
cmc
sbb
ror
jge
mov
and
or
add
adc
jg
shr
arpl
or
xlat
stos
movs
xor
sti
jb
dec
jb
lds
popf
mov
mov
cmp
mov
test
les
xchg
mov
and
fsub
or
lods
fs
cs
rcl
inc
call
stos
xor
or
mov
mov
jmp
sbb
adc
aad
ja
jnp
(bad)
and
cdq
mov
push
int
xchg
xor
sti
jb
adc
inc
xchg
shl
mov
xchg
(bad)
cmp
rcl
lods
stos
leave
cmp
mov
xchg
cld
neg
xchg
test
lods
push
or
call
or
pusha
mov
jl
mov
mov
loope
add
sti
pop
pusha
push
push
add
ds
test
and
(bad)
push
inc
sub
aaa
sar
ja
imul
loope
in
xchg
addr16
xchg
jb
in
lock
repz
xchg
imul
pop
test
rcl
dec
repz
lods
cmp
mov
add
inc
pusha
mov
jne
mov
scas
sub
fild
cli
or
and
cmp
jo
adc
imul
inc
xchg
add
add
dec
sahf
xlat
xchg
inc
stos
loopne
bnd
push
stos
pop
out
lock
xchg
les
cmp
in
adc
add
mov
pushf
ror
shl
inc
bound
sbb
ds
mov
js
push
arpl
xor
add
xchg
mov
arpl
cli
or
and
add
xor
jp
mov
scas
add
mov
pop
int3
mov
adc
gs
inc
cdq
mov
push
xchg
stos
cmps
or
shl
les
mov
xchg
add
stc
retf
rol
dec
jecxz
fdiv
dec
mov
jecxz
retf
push
inc
cwde
sbb
xchg
push
and
movs
nop
pushf
dec
sub
movs
sbb
pop
sbb
cmp
call
imul
xchg
push
addr16
lods
mov
adc
mov
div
mov
popf
xchg
loopne
loopne
mov
jmp
rcl
xchg
cwde
mov
mov
sti
fwait
jmp
cs
pushf
xchg
fcomp
lods
scas
push
jecxz
retf
sbb
fcmovnu
push
loopne
add
dec
sbb
mov
push
jmp
sbb
mov
adc
sbb
jnp
mov
sub
or
cmp
in
sahf
and
jnp
sub
imul
mov
dec
(bad)
xchg
inc
and
cli
mov
xchg
imul
js
loopne
and
fadd
test
fidiv
or
std
je
inc
jae
dec
stos
or
lods
push
add
mov
fnstsw
lea
mov
inc
enter
add
mov
js
mov
pop
scas
mov
inc
jmp
shl
arpl
test
pop
cmps
xlat
xchg
je
xchg
popa
and
fld
mov
imul
adc
stc
sti
mov
(bad)
pop
jg
mov
push
or
fadd
or
pop
stos
sub
add
mov
fnstsw
jmp
arpl
adc
or
test
jnp
stos
jg
movs
cmp
mov
sbb
sub
pop
mov
jb
ins
outs
jns
pop
loope
test
xchg
push
adc
outs
call
mov
cmc
cmp
retf
fsubp
bound
cdq
dec
retf
jno
adc
push
aam
fistp
cmp
push
dec
pop
add
lahf
nop
(bad)
retf
cmp
xlat
jle
xchg
jle
repz
add
leave
xor
jle
xor
cli
pop
pusha
mov
jge
mov
and
ins
(bad)
(bad)
mov
pushf
adc
push
test
push
les
sub
ror
(bad)
mov
jne
xchg
neg
sti
inc
ins
xchg
mov
sbb
cmp
out
or
pop
pop
call
pop
call
ins
iret
cli
sub
in
pop
push
pusha
jb
mov
pushf
pop
shl
mov
sar
dec
lods
mov
adc
dec
dec
sahf
fistp
pushf
imul
stc
pop
cdq
in
call
adc
cli
mov
mov
sbb
movs
lea
inc
mov
inc
mov
dec
or
rcl
and
adc
dec
test
push
sub
mov
stc
or
call
in
pop
adc
aas
cwde
cmp
adc
add
movs
bound
daa
pop
(bad)
fild
out
jbe
test
mov
cmps
inc
ret
mov
or
(bad)
lods
add
imul
mov
stc
movs
dec
inc
dec
mov
int3
xor
fadd
daa
bound
dec
lea
jle
sti
or
call
in
pop
fwait
std
jae
inc
xor
and
pop
sbb
inc
ret
xor
mov
xchg
ds
clc
fist
and
stos
pop
fsub
sub
xor
jnp
sahf
stos
jmp
xchg
aas
aaa
cli
icebp
test
or
mov
out
fdivr
cs
jmp
jae
dec
stos
pop
gs
mov
push
xchg
mov
mov
pop
stc
outs
shl
jl
mov
jae
mov
pop
mov
into
pop
mov
sbb
inc
in
mov
dec
(bad)
lods
xchg
sahf
jmp
sar
push
fld
mov
xchg
fs
jns
std
rcl
stos
sar
xchg
mov
lock
and
xchg
push
test
fcmovu
pop
fld
dec
call
push
mov
in
arpl
jmp
sbb
cmp
cwde
add
scas
pop
pop
mov
push
call
or
pop
shl
pop
xlat
pop
jo
cmps
dec
cld
ret
jmp
inc
push
xchg
mov
or
jge
mov
lea
fidiv
dec
mov
sbb
nop
mov
inc
call
xchg
aaa
sbb
mov
jl
fnstcw
dec
out
hlt
push
mov
mov
adc
add
xchg
xor
test
dec
int3
mov
and
xchg
addr16
ins
addr16
lods
pop
fnstsw
mov
cmp
les
mov
arpl
shl
mov
dec
cdq
scas
inc
aad
into
and
cld
lods
jae
xor
xor
pop
ins
(bad)
movs
mov
sub
xlat
jg
inc
cmps
icebp
jbe
jns
enter
jbe
out
aaa
rol
dec
adc
arpl
or
xlat
mov
push
jg
jle
mov
outs
cwde
rcl
std
fst
lods
mov
ret
test
pushf
adc
mov
dec
sub
cli
fcmovbe
pop
loop
je
inc
mov
push
ds
mov
mov
xchg
dec
jno
ret
dec
sub
add
pop
lods
xor
data16
pop
and
mov
retf
sbb
cld
or
outs
jp
mov
js
mov
pop
pop
std
rol
clc
mov
dec
pushf
mov
aad
test
add
cmps
cmp
sti
jbe
and
sbb
and
mov
mov
sub
pop
jmp
je
mov
adc
pop
mov
(bad)
or
pop
push
lods
stos
movs
(bad)
cmp
shr
adc
jb
mov
repz
jecxz
loope
mov
and
mov
repz
mov
inc
xchg
mov
sti
test
fstp
out
test
fwait
xor
shl
aaa
inc
mov
pop
popf
jae
jns
mov
mov
push
fbld
fistp
mov
pop
imul
unpcklps
pop
push
mov
arpl
and
in
std
xchg
xor
sbb
scas
pop
fistp
xchg
rcl
add
imul
xor
repnz
(bad)
outs
jg
mov
adc
ds
in
fist
cmp
aaa
popa
mov
imul
dec
fbld
stc
and
or
adc
fwait
sub
pop
fsubr
rcr
(bad)
sbb
xchg
xor
fbstp
fsub
pop
stos
pop
retf
mov
pop
mov
xchg
data16
mov
daa
ffree
xchg
add
sbb
test
jno
mov
popa
paddd
cmps
lods
cmp
sahf
xchg
pop
cld
adc
shl
xor
or
mov
jl
xchg
mov
push
fsub
(bad)
aas
mov
pop
je
adc
add
push
add
sub
outs
add
fwait
sbb
sub
fcmove
xchg
aaa
retf
xchg
sub
clc
addr16
mov
adc
loopne
xor
ins
xchg
(bad)
cdq
call
lea
ret
rol
mov
xor
jae
push
push
inc
cld
icebp
into
inc
rcr
pop
sbb
je
jne
push
test
(bad)
jbe
rcl
ret
lea
push
jg
fsub
and
lea
aam
dec
lea
pop
outs
mov
and
enter
mov
dec
pop
jge
push
or
jg
scas
cdq
push
loop
jne
repnz
cmps
fcmovnb
cmp
not
xor
test
test
dec
mov
ds
mov
pop
icebp
push
jl
dec
xchg
jge
mov
sbb
xchg
data16
ins
jbe
aam
or
pusha
(bad)
and
cmps
push
aas
mov
popf
mov
inc
out
xchg
aaa
test
jno
push
popf
mov
in
lock
int
xchg
jnp
pop
mov
push
aas
adc
test
mov
sbb
ret
push
rcl
pop
pop
xchg
addr16
call
mov
jmp
jle
int
xor
sub
adc
pop
data16
movs
add
mov
jge
enter
repz
dec
jno
lods
push
in
retf
pop
mov
call
sub
shl
or
scas
ror
jl
sti
or
push
lods
dec
call
aaa
out
clc
int3
and
push
jne
inc
rcr
ds
movs
(bad)
mov
cmp
call
xor
or
(bad)
jg
nop
dec
addr16
(bad)
sbb
or
fcmovnbe
sti
add
sbb
fstp
xchg
rol
or
push
call
xchg
jns
xchg
mov
adc
not
dec
ins
fwait
test
xor
sbb
xor
xor
pop
ins
push
test
jl
mov
mov
(bad)
fdiv
(bad)
clc
push
addr16
sub
inc
sbb
aas
mov
pop
push
(bad)
dec
adc
div
sub
test
add
mov
call
les
xor
aad
jb
sbb
stos
jbe
in
sub
and
jmp
(bad)
dec
sbb
outs
fisttp
push
ds
cld
fist
sbb
pop
stos
ins
push
sahf
push
xchg
stos
cmp
jmp
jo
push
int
push
add
adc
(bad)
jnp
fcom
movs
adc
popf
cmps
mov
jmp
neg
test
fcom
inc
jmp
sahf
pop
add
loope
xor
lods
xchg
stos
fsubr
imul
cli
jmp
rol
inc
shl
cmp
in
pop
inc
xor
dec
mov
mov
into
push
std
out
push
xchg
bnd
jno
sar
ja
adc
das
nop
cmp
jge
mov
mov
je
xlat
xchg
and
cmps
adc
jmp
loop
pop
lods
imul
add
mov
xor
movs
mov
int
test
inc
arpl
sti
retf
xchg
mov
xor
fild
jno
adc
push
std
into
fist
push
jb
push
mov
outs
js
inc
daa
jle
mov
jmp
cli
fmul
mov
xor
and
pop
sbb
es
fdivr
stos
ins
inc
retf
repz
in
ficom
aad
sbb
jno
sahf
in
xchg
enter
xchg
imul
jecxz
xchg
cmps
mov
jae
cdq
mov
not
(bad)
jns
mov
(bad)
or
icebp
enter
bound
jo
or
lahf
jne
jle
mov
popf
aas
sbb
inc
cli
out
push
mov
add
and
cmp
cmp
or
inc
pusha
mov
pop
movs
mov
ins
(bad)
retf
nop
rcl
push
mov
inc
xchg
(bad)
xchg
fs
pop
cmp
mov
pop
add
fwait
std
js
enter
dec
stos
pop
push
xlat
or
ds
fist
dec
and
sbb
outs
mov
mov
add
mov
test
sbb
int
pop
jge
es
mov
mov
ds
push
push
scas
sub
jmp
(bad)
push
fstp
xlat
and
sar
(bad)
rol
xchg
scas
push
mov
push
xchg
mov
adc
rol
xchg
fwait
inc
sti
push
lods
cmp
xchg
mov
cld
aas
je
ins
mov
ins
pop
add
mov
cwde
sar
hlt
jp
pop
inc
iret
push
or
and
xchg
pop
xor
xchg
outs
add
retf
mov
jne
movs
ins
sti
xchg
(bad)
pop
jmp
pushf
imul
mov
test
push
call
sbb
test
dec
lods
push
or
xchg
lock
cwde
push
jo
dec
test
ins
mov
push
mov
scas
inc
clc
repnz
cdq
icebp
jns
jae
retf
addr16
mov
fs
xchg
imul
push
pop
xchg
mov
ins
sti
fisttp
mov
jl
ins
fistp
mov
sahf
pop
and
movs
test
imul
test
pop
test
lock
data16
xchg
lea
sub
mov
(bad)
ss
outs
mov
gs
pushf
mov
iret
push
and
ins
stc
out
or
fs
adc
inc
ins
mov
stos
sbb
sahf
cdq
pushf
push
or
fs
xor
bound
sahf
mov
dec
out
jecxz
adc
jmp
repnz
cwde
int
stos
jp
adc
inc
data16
dec
call
cld
mov
pusha
xor
bound
dec
out
mov
lahf
sub
aas
mov
js
jb
mov
sbb
daa
cwde
or
push
imul
adc
fsubr
xchg
mov
lock
outs
inc
lahf
jno
mov
xchg
cld
add
mov
xchg
add
push
xor
jecxz
adc
push
imul
sbb
mov
arpl
pop
mov
imul
lods
fwait
scas
shl
cmp
jno
mov
popa
and
es
cmp
mov
inc
sbb
xor
fisub
cmp
test
vmulpd
xchg
push
or
fist
lahf
mov
jnp
mov
(bad)
clc
cld
icebp
inc
push
scas
xchg
jecxz
fidivr
pop
xor
mov
and
pop
ja
pop
adc
test
or
mov
mov
in
cs
push
je
sbb
sbb
or
loop
call
and
or
xor
rcl
mov
fdiv
mov
pushf
adc
(bad)
out
or
lds
fisub
xchg
test
adc
loop
add
cmc
or
fisttp
xor
cdq
pop
pop
jno
push
mov
inc
(bad)
(bad)
push
mov
sub
or
jns
sbb
sbb
mov
pop
sti
fisttp
mov
mov
inc
mov
clc
jno
fcmove
stos
push
cmc
ja
adc
aas
stos
pop
jb
mov
sti
mov
rol
lods
inc
lock
fisttp
xor
clc
hlt
ds
sbb
push
or
call
jg
retf
mov
jno
sti
or
jo
and
aas
lods
and
imul
ja
sub
iret
test
shr
std
jne
push
mov
dec
mov
jmp
push
test
mov
cmps
mov
test
cdq
test
gs
inc
jmp
(bad)
push
and
int3
cld
fisttp
daa
or
jo
or
inc
adc
xchg
cs
setns
push
pusha
popa
xor
sbb
xor
(bad)
sbb
jns
mov
dec
cwde
cdq
mov
aaa
and
xlat
test
shl
addr16
mov
outs
mov
xchg
jne
std
mov
adc
ja
mov
idiv
mov
dec
jmp
or
in
mov
or
push
cld
xor
dec
in
mov
neg
sar
hlt
push
sbb
adc
and
add
and
data16
pop
ss
adc
call
jmp
mov
aad
sbb
pop
in
lock
mov
cmps
push
in
jno
inc
xchg
push
aad
mov
jg
loope
xchg
xor
cmc
mov
cdq
dec
inc
mov
inc
out
into
sub
cmp
jmp
inc
jg
jbe
push
mov
sub
dec
cld
cli
add
add
add
imul
xor
aaa
inc
mov
pop
out
out
xor
bound
pop
repz
xchg
pusha
in
jae
out
ror
mov
push
adc
in
repnz
xchg
ins
clc
dec
stos
ds
jecxz
lock
in
imul
test
push
popf
fst
aam
cmp
jg
call
ins
popa
aaa
rol
jne
cmp
arpl
push
xor
cwde
sbb
xor
jmp
repnz
punpckldq
jle
mov
lahf
push
jecxz
pop
daa
into
shr
mov
push
call
scas
inc
inc
lds
push
or
enter
std
adc
dec
mov
push
push
xchg
xchg
xchg
sub
clc
pop
mov
xor
imul
cwde
or
lods
jg
adc
adc
daa
dec
out
repnz
daa
mov
pop
ja
sub
hlt
add
stos
test
in
sbb
std
les
mov
jmp
pop
fdecstp
mov
cdq
dec
pop
mov
xor
sbb
aas
pop
sub
fimul
inc
jo
dec
sbb
popf
retf
and
jg
cld
sbb
xor
inc
add
jb
sub
fstp
mov
xchg
ja
mov
inc
sti
rcl
cmc
jbe
and
dec
test
xchg
pop
and
movs
mov
sbb
test
popa
test
jmp
addr16
mov
(bad)
inc
hlt
das
and
push
call
stos
or
lods
ins
ss
lahf
mov
stc
outs
out
(bad)
sbb
pop
mov
pop
cwde
pop
mov
scas
pop
add
push
jbe
pop
jge
mov
inc
mov
jg
ins
gs
dec
out
(bad)
addr16
out
test
out
push
and
mov
xchg
dec
ja
mov
js
xlat
loopne
leave
mov
xchg
mov
dec
sar
cmp
jmp
inc
rol
daa
inc
mov
ins
push
lahf
dec
pop
ins
call
jnp
nop
aas
mov
push
inc
push
cmp
push
sub
and
and
bound
outs
xor
test
retf
out
das
lods
sti
sbb
add
inc
xchg
loopne
call
cmp
shl
stos
out
sbb
mov
shl
lods
in
aad
inc
mov
sbb
cmp
cld
xlat
repz
push
mov
inc
cmp
fld
outs
out
inc
xor
data16
mov
adc
sub
pop
shl
cmps
dec
sbb
sbb
bound
pop
dec
sti
test
jne
sbb
xchg
outs
repz
stc
push
mov
mov
ret
cwde
inc
daa
faddp
imul
out
dec
xchg
fs
leave
test
and
aad
inc
ins
xchg
test
cmp
fidivr
sbb
push
cmps
pop
push
sahf
jae
push
mov
ret
sub
fadd
fcomp
cdq
call
push
popa
inc
in
ins
inc
add
and
inc
pop
mov
arpl
dec
jae
fndisi(8087
and
pop
sub
pop
repz
ins
inc
xchg
xor
ror
cmps
fdiv
scas
cdq
nop
add
mov
repz
lods
lods
imul
lock
sub
clc
xor
dec
mov
dec
daa
imul
call
sbb
sbb
aas
nop
imul
inc
sub
or
dec
sti
ficom
pushf
inc
push
jl
sub
mov
cdq
push
out
or
out
div
inc
mov
lahf
push
test
out
scas
(bad)
dec
push
fdiv
cld
js
cmp
jg
pop
dec
push
test
inc
pop
mov
lods
mov
inc
(bad)
push
out
rcr
call
inc
ins
fs
sub
add
pop
inc
sbb
sti
mov
sti
sbb
rcr
fisubr
sub
ror
mov
popa
in
mov
cmps
dec
pop
push
imul
rol
pop
xchg
aaa
push
cs
jns
inc
pop
jbe
fstp
pop
call
jnp
int
sbb
sbb
xor
push
dec
fwait
movs
sbb
mov
dec
leave
fidivr
idiv
mov
push
out
add
xlat
shl
xor
outs
mov
mov
pop
movs
gs
mov
outs
aaa
idiv
repnz
fidivr
enter
push
push
not
into
fs
pop
push
jle
sahf
sbb
popf
dec
pop
dec
lahf
retf
dec
sub
js
std
sbb
jb
ret
pop
or
adc
xor
dec
add
push
and
dec
jmp
shl
stos
pop
lock
loope
out
jbe
in
(bad)
nop
sub
ins
mov
jg
xchg
mov
adc
call
jae
lahf
scas
dec
in
jne
cs
repnz
ret
xor
jno
jo
inc
pop
jns
retf
adc
icebp
pop
rcl
cs
lea
ss
pop
sbb
or
dec
jnp
xor
mov
push
lahf
fsub
xor
fs
lods
jbe
mov
inc
xchg
enter
clc
jae
std
(bad)
not
xchg
outs
movs
xchg
add
and
outs
push
frstor
in
ds
cmp
(bad)
jbe
inc
dec
and
push
or
fwait
call
cli
sbb
cmp
jb
mov
(bad)
push
cmps
inc
adc
jb
mov
sub
cmp
mul
inc
(bad)
jp
mov
pop
mov
sub
dec
add
push
and
sbb
pop
cld
jmp
(bad)
jae
pushf
test
jecxz
fdiv
pop
sbb
retf
jmp
sbb
ins
cmps
pop
jl
cwde
pop
add
mov
mov
out
das
xchg
into
push
data16
retf
jae
sub
sbb
jnp
mov
paddsw
sahf
jne
or
scas
cwde
inc
popf
loop
xchg
jno
pop
frstor
xchg
test
std
ret
mov
(bad)
mov
ja
stos
test
(bad)
mov
loop
imul
xor
or
jmp
sbb
xchg
addr16
dec
lods
gs
cmc
mov
mov
clc
test
mov
add
(bad)
sbb
push
movntps
adc
fldenv
fisttp
xchg
xor
adc
pop
and
push
mov
rcl
sub
arpl
ins
jnp
fwait
hlt
push
adc
cli
mov
(bad)
push
imul
cmp
aaa
out
iret
mov
shl
cmp
mov
cmp
pusha
out
iret
xchg
push
sub
push
jmp
push
xor
pop
push
imul
xsave
mov
pop
mov
pop
dec
loope
call
loop
dec
bound
cmp
loope
push
cld
in
daa
not
cmc
add
dec
or
pusha
mov
cld
test
addr16
xor
repz
inc
add
jle
aaa
adc
cld
xor
fwait
popf
es
inc
stc
lea
mov
sub
or
das
nop
adc
adc
jg
mov
dec
mov
das
aas
(bad)
in
pushf
xor
jle
mov
ds
mov
dec
in
push
adc
mov
cmp
xor
shr
call
inc
loope
repz
retf
icebp
inc
push
or
pop
inc
sbb
nop
mov
stc
jg
shr
mov
jne
addr16
push
sbb
aas
scas
and
pop
jnp
dec
aas
mov
fs
dec
xor
iret
aam
add
jae
popf
dec
std
xchg
aad
pushf
fld
pop
(bad)
jmp
jbe
inc
xchg
mov
ret
push
xchg
xchg
mov
inc
into
rcl
out
call
sbb
stc
mov
int
bound
inc
mov
push
in
fwait
movs
cwde
cmp
retf
pop
clc
std
cs
pop
inc
inc
pop
shl
add
adc
jo
mov
outs
call
fcmovbe
sti
aas
(bad)
cld
sbb
push
push
mov
and
movs
push
es
sti
nop
sbb
iret
push
cmps
push
push
cwde
mov
minps
clc
mov
lock
pusha
xchg
xor
es
int3
lock
jge
cmp
and
jg
div
pop
popa
(bad)
mov
cmps
pop
sti
sbb
enter
pop
fld
or
push
adc
sub
pusha
mov
jae
lods
(bad)
jno
or
aaa
stos
hlt
popa
aad
pusha
inc
movs
jle
xchg
cmp
out
adc
nop
cmp
mov
add
mov
xchg
not
inc
outs
icebp
xchg
hlt
aaa
or
call
or
adc
movs
cmp
imul
clc
xor
and
pop
xor
es
mov
fistp
xor
or
mov
jge
mov
aaa
mov
jno
stos
pop
retf
dec
loopne
in
xchg
mov
neg
(bad)
mov
xor
stc
shl
out
lea
push
cmp
fstp
pop
imul
jnp
mov
test
retf
lahf
clc
outs
arpl
mov
gs
inc
bound
push
stos
mov
jl
iret
pushf
pop
mov
jb
inc
push
pop
scas
jp
mov
cmps
adc
xchg
adc
scas
pavgw
adc
in
popf
pushf
add
in
aam
xor
fild
xor
and
scas
inc
pushf
cs
pusha
mov
add
push
add
retf
xchg
mov
(bad)
sar
mov
xor
push
sbb
ins
sbb
pop
xchg
mov
and
xor
sbb
int
ficom
cmp
loopne
mov
adc
loope
repnz
shl
mov
lea
xor
test
test
dec
pop
fwait
stos
data16
sub
push
daa
push
dec
mov
or
pop
add
push
pop
dec
cmps
les
add
jecxz
sbb
sbb
or
es
and
pop
pusha
test
xor
mov
retf
inc
mov
jae
scas
jne
mov
pop
mov
mov
or
(bad)
mov
repz
imul
push
xchg
fisub
(bad)
push
shl
leave
jmp
pusha
jp
cmp
mov
sbb
out
mov
ror
jmp
cwde
mov
pusha
inc
fstp
or
cmp
bound
pop
add
add
(bad)
pop
stos
jmp
repnz
addr16
stos
inc
aam
leave
inc
pushf
mov
push
fcmovbe
mov
retf
test
ja
mov
and
or
lahf
inc
div
imul
or
rcl
add
inc
or
pop
fwait
inc
sbb
mov
stos
sub
out
(bad)
in
xor
pop
in
xor
sbb
push
mov
mov
je
mov
sbb
aaa
aas
fsubr
xchg
mov
pop
stos
pop
loopne
fnstsw
mov
call
sub
aam
sub
rcr
rcr
jae
lahf
lea
sbb
cmp
lods
es
cld
fistp
pop
push
jl
cmps
pop
fs
stos
dec
sbb
mov
mov
cli
lea
(bad)
clc
jbe
jb
in
and
cdq
sbb
scas
or
mov
xchg
dec
dec
out
test
jnp
jns
cmp
dec
sti
mov
xchg
push
ficom
xchg
cmp
jmp
fnstcw
lods
mov
push
ds
clc
fcmove
data16
xchg
lea
stc
sub
mov
push
dec
stos
cmp
mov
jge
xchg
mov
inc
(bad)
sbb
pop
iret
ss
adc
jb
add
push
pop
cmps
xor
movs
xchg
xor
neg
mov
mov
jb
pop
jae
mov
jg
rcr
clc
sti
nop
push
jmp
xchg
scas
lods
div
mov
mov
xor
mov
dec
into
das
add
dec
add
cmp
sahf
cmp
mov
push
fiadd
jmp
je
aaa
sti
xor
inc
or
pslld
push
pop
lods
sbb
(bad)
push
jl
shr
test
mov
loopne
jns
repz
mov
ja
mov
adc
(bad)
mov
icebp
inc
jnp
mov
jae
push
add
aam
jmp
mov
data16
add
xchg
mov
cmps
je
int3
jl
sti
jae
pop
aaa
mov
or
pop
stos
dec
inc
into
inc
push
nop
fstp
not
mov
cld
inc
jns
lds
xchg
(bad)
arpl
mov
mov
test
shr
mov
int3
cmc
sbb
pusha
sbb
in
cmp
inc
xlat
shl
inc
into
aaa
pop
ja
mov
sbb
lds
dec
out
adc
ss
aas
je
arpl
arpl
addr16
mov
pop
mov
ins
aam
mov
out
push
jl
jge
mov
loope
retf
cmp
ror
fabs
pop
stos
dec
add
and
ins
sahf
cmps
dec
fidiv
sub
cmp
icebp
into
inc
shl
dec
cs
lods
inc
jo
push
xchg
(bad)
dec
sub
inc
pushf
shl
hlt
push
or
mov
imul
sbb
or
loope
cmp
fcomp
mov
leave
iret
js
ins
jo
stos
pop
ret
inc
sahf
rol
sbb
xchg
add
add
fld
xchg
icebp
inc
jne
fwait
ss
dec
fisttp
cmp
xchg
enter
imul
stos
dec
or
xchg
test
sahf
cld
add
add
inc
cmp
adc
sbb
cmps
xor
into
mov
loopne
xchg
aaa
mov
jg
test
xor
addr16
mov
das
xchg
shr
mov
push
mov
in
leave
or
test
dec
pop
sbb
retf
cmp
add
push
add
dec
push
dec
lods
mov
stos
push
push
mov
out
out
cs
cmp
jb
add
js
mov
dec
lea
loop
mov
mov
jg
(bad)
outs
sti
mov
dec
xchg
mov
adc
cmc
mov
xchg
scas
cmps
shr
and
mov
mov
out
dec
mov
ror
cs
hlt
loop
call
cmps
push
pop
pop
xchg
mov
(bad)
jle
xchg
addr16
mov
pop
xor
adc
adc
pop
addr16
add
dec
xor
fild
pushf
pop
inc
push
mov
inc
test
mov
rcr
mov
sar
mov
inc
jl
xchg
call
push
retf
dec
call
out
int3
and
dec
mov
push
mov
push
cmp
xor
cmp
and
jo
sbb
and
xor
add
mov
mov
xchg
sub
or
popf
out
sbb
jnp
mov
xor
pushf
or
mov
sub
xchg
xchg
fdiv
es
mov
sbb
test
push
ds
das
(bad)
(bad)
inc
jmp
imul
mov
fmul
cli
or
pop
es
add
push
test
sbb
adc
jl
mov
inc
test
pop
pop
sub
cmc
mov
sar
pusha
dec
into
out
or
mov
cmp
jl
xchg
out
fcomp
inc
jecxz
fst
into
inc
call
push
call
dec
mov
sub
inc
sar
or
call
int
sbb
and
pop
mov
adc
(bad)
test
inc
popf
movs
sti
bound
dec
call
jmp
arpl
inc
mov
xchg
adc
xchg
popa
es
rcr
(bad)
jmp
pushf
rol
in
rcl
(bad)
mov
or
ds
out
retf
push
in
pusha
sbb
sbb
inc
cmp
mov
jmp
imul
cmp
add
inc
adc
pop
cdq
stos
lea
xor
dec
test
xchg
mov
jb
inc
jne
lea
movs
sahf
cmp
fistp
dec
cli
shl
mov
add
and
fiadd
out
lahf
dec
in
sub
repnz
(bad)
xor
pop
jl
add
xchg
mov
fnstsw
shr
pushf
mov
or
ss
jne
sbb
aas
iret
add
xor
xor
stos
lea
sub
pop
ret
adc
jne
mov
std
nop
cmp
addr16
xchg
add
not
mov
out
sbb
nop
bound
aam
xchg
cld
icebp
pop
sbb
into
or
inc
cli
fmulp
in
xor
or
add
mov
test
push
iret
pusha
jmp
jno
sar
jg
arpl
imul
pop
movs
sub
mov
inc
lahf
fistp
out
pop
pop
stos
dec
repz
lock
mov
xchg
inc
mov
test
test
add
mov
aas
das
loop
sbb
aam
neg
cmp
int
xchg
jg
inc
fwait
ins
push
mov
or
or
data16
or
and
arpl
aas
nop
pop
fldcw
outs
sbb
lea
xor
in
cwde
das
test
outs
jb
jle
xchg
repz
xchg
scas
xchg
addr16
xchg
pop
or
(bad)
shr
clc
or
adc
aad
sbb
scas
les
aaa
cmp
inc
stc
or
jnp
lods
sbb
dec
push
icebp
mov
(bad)
or
aas
fdiv
or
add
dec
fldcw
mov
xchg
cs
and
scas
call
push
push
test
xor
jbe
test
not
mov
mov
jnp
xchg
movs
xchg
out
stc
xchg
(bad)
inc
addr16
test
loopne
scas
cmp
and
xor
dec
lods
cmp
add
mov
mov
ins
cli
(bad)
jle
cld
jge
dec
aas
fidiv
or
pop
mov
mov
test
xor
pop
(bad)
push
mov
jl
push
popf
movs
repnz
and
jns
int
xchg
ins
lea
(bad)
mov
jle
mov
loop
loope
inc
jg
test
out
dec
cmps
dec
pop
aaa
fisttp
imul
mov
mov
scas
jg
inc
rcl
sbb
adc
push
add
iret
push
movs
cmp
in
mov
xor
add
sub
xchg
jmp
addr16
add
(bad)
mov
cmps
mov
inc
add
rcl
test
icebp
inc
pop
xchg
lahf
imul
ds
retf
into
cmp
or
mov
push
xchg
fwait
int3
mov
ror
push
pop
cmp
and
and
add
jnp
movs
pop
cmp
not
or
clc
cli
cmps
push
adc
icebp
data16
js
(bad)
xchg
in
call
daa
test
call
ja
mov
cwde
test
fwait
scas
inc
out
jnp
xor
cmp
les
push
popa
mov
cs
xchg
inc
inc
scas
inc
icebp
shr
mov
jno
add
mov
ins
push
add
xor
pop
pushf
pop
add
mov
push
or
rcl
addr16
mov
std
movs
(bad)
dec
cmps
(bad)
xchg
pusha
loopne
inc
or
shl
aaa
in
mov
outs
jnp
mov
push
aas
std
hlt
adc
cwde
dec
loopne
iret
push
pop
sbb
(bad)
fld
sbb
les
ins
jo
push
mov
jnp
xchg
jnp
call
jmp
or
sbb
setnp
std
imul
push
pop
mov
xchg
pop
or
ror
cmc
bound
(bad)
(bad)
pusha
call
add
rol
stos
rcr
or
jecxz
outs
mov
ficomp
inc
sbb
mov
pusha
dec
lods
addr16
inc
mov
or
les
jge
out
movs
sti
add
retf
jge
adc
push
cmps
xor
mov
inc
fcmovu
xchg
aas
test
jl
fsub
ret
dec
cdq
(bad)
jmp
stos
add
repz
mov
pop
mov
lea
lock
xchg
cld
enter
test
xchg
jns
dec
and
dec
clc
sub
pop
outs
inc
popf
push
sub
rol
dec
sub
inc
in
cli
sbb
aaa
mov
push
ja
add
inc
inc
(bad)
push
pop
sub
xor
inc
cld
int
xor
gs
pop
mov
jl
rcr
retf
shl
cli
test
inc
sar
mov
test
xchg
int
pop
sbb
(bad)
or
cmp
out
rcl
es
pop
adc
mov
test
(bad)
(bad)
sbb
clc
jle
pop
and
pop
sbb
cmp
jge
ret
fmul
js
test
call
sahf
aaa
mov
jbe
mov
cmp
nop
mov
cmc
sbb
outs
mov
stos
shl
dec
js
mov
adc
jmp
cwde
cdq
inc
mov
das
pop
cs
rcl
push
loopne
jo
pop
shl
cmp
mov
(bad)
cmp
sub
add
jbe
pusha
(bad)
aas
retf
pop
dec
ror
sbb
into
imul
pop
inc
sahf
sti
test
mov
and
dec
fwait
shl
icebp
xchg
inc
daa
retf
ror
mov
pop
je
fiadd
adc
ficom
push
aad
and
xchg
repz
enter
pop
cmps
push
inc
arpl
mov
stc
outs
cli
cli
es
jle
add
clc
sbb
je
adc
imul
xor
or
jmp
or
lods
cmps
add
pop
push
stos
pop
xor
adc
icebp
cli
mov
xchg
outs
icebp
xchg
stos
jecxz
call
daa
loope
adc
(bad)
fisubr
sbb
cld
xor
jno
cmp
dec
ds
xchg
add
jmp
aaa
jae
addr16
mov
fiadd
sar
mov
(bad)
addr16
mov
fisub
pop
mov
pusha
test
mov
rcl
add
call
mov
xchg
add
cld
fmul
cmc
mov
out
fdiv
or
shl
loopne
sti
sbb
pop
arpl
push
or
movs
mov
pop
in
pop
fwait
jmp
(bad)
push
jne
imul
retf
ins
test
add
mov
pop
adc
and
test
push
mov
inc
and
dec
cmps
mov
push
or
stos
std
push
loope
test
jg
lahf
mov
in
ror
jnp
mov
sbb
stos
je
sbb
pop
stos
sbb
pop
mov
mov
fadd
loop
mov
jne
jge
mov
sbb
xor
iret
dec
je
pop
inc
fnsave
jmp
jmp
les
and
xor
jbe
rcr
xchg
adc
ins
xchg
(bad)
mov
dec
in
test
pop
add
fdiv
aam
es
cwde
dec
call
or
clc
aam
fiadd
or
arpl
push
inc
push
mov
mov
push
cmp
pop
jmp
pop
xor
pop
ins
jne
add
and
sahf
push
sbb
lea
adc
cmp
(bad)
aaa
test
push
mov
pop
rcr
lods
fisub
aad
dec
xchg
sahf
pop
sbb
jl
pop
ja
mov
pop
es
in
mul
popf
(bad)
jnp
cmp
test
and
cmp
mov
fst
mov
pop
aam
fucomip
aas
mov
pop
push
jno
les
push
jae
add
imul
xor
loope
pop
or
test
retf
jmp
jno
pusha
stc
mov
arpl
mov
mov
repnz
mov
mov
jb
mov
add
xlat
icebp
clc
leave
xchg
cmc
fild
dec
leave
(bad)
ss
or
inc
cwde
mov
leave
jle
xchg
jp
jmp
enter
and
and
ja
movs
ds
mov
cmp
jmp
push
les
popa
fdiv
mov
xor
clc
pop
push
out
fild
cwde
or
stos
dec
dec
mov
mov
mov
std
inc
imul
(bad)
jmp
cmp
mov
jbe
mov
mov
out
fadd
enter
pop
sbb
pop
outs
dec
add
ja
push
push
ret
movs
sbb
mov
dec
leave
into
mov
icebp
dec
jnp
stos
dec
enter
cmps
out
test
iret
mov
popf
jae
inc
fwait
std
cwde
mov
mov
mov
aas
mov
cmc
aam
push
bound
dec
sub
int3
cld
rcr
inc
gs
es
movs
lods
mov
loope
sub
pop
cmp
pop
jl
daa
xchg
adc
inc
je
push
and
sbb
(bad)
or
sar
sti
jns
and
inc
xchg
aad
push
popf
nop
jns
(bad)
mov
lock
ret
test
stc
xor
dec
je
mov
cmovo
(bad)
dec
jbe
xor
pop
movs
sbb
sub
stos
mov
cmp
imul
or
inc
pop
in
sbb
pop
mov
movs
or
mov
dec
xchg
xlat
call
sub
xor
jge
mov
inc
popf
cld
push
dec
stc
in
push
int
sti
loope
stc
push
test
mov
iret
xchg
cdq
lahf
inc
jecxz
(bad)
cmp
es
fist
xor
pop
fnstenv
jne
mov
dec
lahf
mov
(bad)
xor
fwait
cli
cs
add
cmp
add
lock
mov
xchg
lods
imul
xor
xor
repz
fstp
push
test
les
xchg
jmp
out
push
fimul
(bad)
mov
jg
xchg
cld
xor
stc
loop
retf
push
lahf
popf
inc
jecxz
ror
cmp
shr
aad
jmp
or
shl
js
inc
es
mov
mov
out
arpl
and
sbb
xor
imul
xor
cli
and
inc
fstp
mov
aam
jge
mov
bound
adc
ret
xchg
cmp
jl
lea
addr16
in
pushf
adc
mov
cmp
(bad)
mov
push
bound
cmp
fwait
int
sub
sar
in
addr16
add
and
cmp
jbe
dec
dec
mov
jb
rol
fcomp
mov
retf
cmc
jge
push
lods
pop
icebp
test
cmp
xchg
add
sti
sti
cmc
and
bound
dec
pop
sub
dec
outs
xchg
cwde
dec
call
ds
cmc
push
xchg
cmp
xor
dec
xchg
and
mov
fsub
in
das
mov
pop
inc
inc
xor
and
gs
(bad)
addr16
mov
pop
mov
dec
in
int3
xchg
xor
inc
je
inc
icebp
sahf
xor
repz
jg
aad
mov
lahf
mov
inc
mov
mov
adc
lea
mov
and
repz
in
and
dec
mov
jns
lods
push
test
pop
xor
daa
cmp
fs
inc
into
sub
push
cmp
sub
and
jnp
test
cmp
or
dec
call
loopne
test
addr16
stos
pop
cld
movs
fstp
xlat
mov
xlat
xchg
push
and
jmp
stos
jmp
popf
popf
out
adc
and
aad
imul
dec
enter
cmp
mov
dec
popf
add
or
push
mov
cmp
mov
outs
jmp
jp
int
fs
add
aas
fiadd
cwde
dec
xor
or
xchg
test
add
daa
stos
mov
pop
jne
lea
mov
jg
iret
xchg
adc
xchg
ja
clc
(bad)
icebp
xor
sahf
shl
inc
inc
xchg
xchg
test
add
out
pop
hlt
ds
mov
cld
add
movs
or
inc
sahf
cs
outs
fwait
ret
cmp
hlt
sbb
jle
in
add
add
push
pop
sahf
and
in
mov
dec
fstp
xchg
inc
xchg
sti
jb
sbb
movs
jo
fcomp
fs
inc
and
out
jnp
dec
test
add
std
icebp
test
lock
lea
push
cmc
or
or
inc
pop
data16
cmp
(bad)
in
mov
cdq
push
sub
push
(bad)
call
je
xor
inc
fs
adc
pop
pusha
cmp
sbb
popf
mov
inc
jecxz
cdq
xor
dec
pop
jo
cs
hlt
dec
xchg
popa
es
fdivr
xchg
gs
nop
cmp
loope
cmp
inc
bnd
cmp
fsubr
push
jle
xor
inc
cmp
mov
mov
jmp
push
cmp
adc
scas
pop
mov
test
and
xor
mov
dec
jmp
fisubr
push
mov
cmp
stos
jecxz
jmp
rol
mov
addr16
push
aaa
stc
repnz
(bad)
dec
popa
mov
fld
or
fistp
and
or
mov
cdq
mov
pop
in
int3
sbb
inc
pop
mov
cmp
imul
sbb
into
mov
neg
test
enter
inc
add
pop
retf
bound
xchg
pop
xor
movs
movs
sub
mov
pop
sti
pushf
cmp
test
mov
aad
test
fadd
and
dec
mov
outs
aas
add
fcom
iret
int3
arpl
inc
mov
push
sub
xchg
outs
inc
mov
mov
sbb
out
out
lahf
xchg
sbb
pop
jl
mov
pop
mov
xchg
imul
add
loope
jmp
mov
test
cs
test
lods
mov
dec
sub
mov
mov
sub
adc
lahf
inc
and
fst
aam
pop
out
out
xor
sbb
cmp
sbb
and
pop
leave
outs
pop
mov
mov
sahf
das
sbb
call
pop
pop
stos
pop
dec
and
shl
call
xor
jle
sbb
sub
enter
lds
jns
dec
mov
push
ss
out
mov
nop
xor
fidivr
jmp
ins
popa
pop
in
sub
adc
das
mov
mov
dec
mov
add
push
inc
sahf
rcl
hlt
inc
jbe
popf
jo
(bad)
call
xchg
pop
(bad)
movs
mov
call
stos
dec
je
mov
pusha
aaa
sar
int
push
pusha
cmc
ret
dec
lock
dec
cs
clc
idiv
ja
ds
sub
sbb
arpl
push
mov
mov
sar
cmp
pop
call
cmp
sub
cmp
test
in
rcl
(bad)
push
outs
jg
inc
and
jno
xchg
data16
out
rcl
fcmove
sub
jnp
mov
loopne
movs
fscale
dec
push
mov
xor
jo
cmp
jecxz
into
pop
push
cmp
les
dec
bound
mov
scas
jg
sbb
enter
xor
xor
jo
add
add
mov
je
mov
inc
iret
fsub
les
inc
push
mov
in
(bad)
ins
xchg
retf
sar
jmp
int
mov
mov
xchg
dec
iret
repnz
push
lods
mov
pop
lds
push
or
shr
push
loope
jo
inc
lahf
daa
dec
push
test
pop
ins
pushf
mov
stos
aaa
fsubr
das
mov
push
jo
xor
cmp
adc
fbstp
rcl
mov
mov
sbb
retf
mov
cli
js
push
test
mov
call
sbb
rol
pop
jne
mov
(bad)
shl
repnz
jecxz
jle
mov
rcr
sbb
mov
or
sbb
add
xchg
adc
or
fld
push
xor
jl
lea
jne
sar
jle
mov
pop
int
xchg
aaa
stos
bnd
push
lock
inc
mov
xchg
jno
call
ins
idiv
lods
ret
cmp
xchg
cmp
scas
sub
ins
shr
repz
and
add
push
jno
cs
add
sub
xchg
std
push
push
je
ror
add
sub
push
mov
pop
popf
movs
mov
icebp
add
push
out
jae
mov
jns
ret
mov
or
in
jno
add
fwait
cmps
jmp
lea
daa
jmp
jno
out
mov
(bad)
dec
cli
xor
xchg
and
jno
jns
inc
cs
mov
retf
imul
push
mov
add
pop
mov
adc
jle
scas
xor
xchg
fldcw
popf
out
cmps
add
jnp
mov
inc
call
jecxz
or
rol
cmps
jmp
test
gs
mov
adc
dec
adc
movs
push
not
sub
clc
repz
jbe
sub
sbb
mov
xchg
mov
in
add
jne
loopne
sbb
das
mov
mov
inc
mov
ret
daa
mov
dec
pop
lods
js
xchg
xlat
pop
stos
(bad)
mov
pop
std
ror
div
ja
mov
ds
sbb
cmps
cs
sbb
test
push
dec
test
fs
xchg
cs
jne
fld
push
int3
jbe
push
fldenv
sub
addr16
ins
dec
mov
mov
(bad)
imul
push
mov
jae
stos
push
hlt
fdivr
jg
(bad)
cdq
dec
loop
jle
cli
stos
or
mov
mov
add
inc
retf
repnz
ret
mov
ficom
pop
sub
ds
cmp
sub
test
sub
mov
mov
jmp
pop
aaa
hlt
xor
popa
add
xor
js
fdivr
mov
cli
xor
call
std
jb
inc
jne
fwait
push
mov
cmps
jb
mov
xor
movs
mov
mov
dec
mov
xchg
push
daa
std
icebp
test
jmp
push
mov
xor
jecxz
(bad)
push
iret
sbb
(bad)
fst
ins
inc
sti
xor
pop
lahf
xchg
mov
inc
cli
shl
ret
dec
jno
cmp
cmp
data16
xchg
pop
mov
cmps
inc
sbb
test
and
inc
in
xchg
aas
xchg
std
jle
imul
jmp
sbb
call
add
test
add
mov
mov
lahf
(bad)
dec
out
not
xor
xchg
aam
xchg
and
inc
mov
inc
sbb
lahf
mov
(bad)
pop
in
jmp
sbb
xor
sbb
das
fmul
fisub
adc
test
sbb
and
std
test
retf
addr16
lea
mov
in
in
mov
adc
add
in
out
mov
mov
aam
dec
pusha
mov
ds
ds
cmp
cmps
jne
cmp
push
lds
test
dec
inc
or
inc
push
add
add
inc
pusha
mov
ja
mov
xchg
int
daa
test
jb
test
mov
push
xlat
mov
leave
mov
stos
das
in
mov
movs
iret
dec
shl
xchg
xor
test
push
mov
repnz
jmp
push
bound
push
cmp
mov
inc
loop
js
hlt
pop
jo
mov
cmp
pop
imul
mov
loope
daa
add
add
jae
test
cmp
xchg
jb
std
rol
movs
test
jns
xchg
test
aaa
sar
ret
dec
fwait
mov
xchg
push
aad
inc
dec
fdivr
jmp
lods
pop
ins
push
mov
and
mov
mov
ins
loop
movs
mov
adc
lds
sub
xor
cmp
pusha
movs
xor
out
mov
jl
int
inc
leave
sti
jno
jge
jle
inc
enter
mov
test
adc
stos
mov
out
add
fwait
mov
pop
xchg
test
lock
test
dec
ds
jmp
or
xchg
add
gs
xchg
sub
fdivr
fsub
in
push
or
jmp
xor
and
mov
sahf
imul
or
mov
xor
ds
jb
jge
jae
push
lds
xchg
jl
xchg
bound
jmp
xchg
les
(bad)
pushf
call
mov
in
repnz
mov
dec
cmc
adc
push
nop
mov
inc
jmp
jae
jp
xor
or
movs
movs
lea
cmp
sahf
(bad)
push
jne
add
xor
add
adc
and
add
jg
(bad)
adc
sbb
jl
mov
xor
sbb
lods
je
into
fistp
(bad)
xchg
inc
in
pop
cmp
shr
mov
jg
mov
arpl
neg
mov
icebp
dec
ja
mov
and
(bad)
in
iret
inc
rcl
jl
imul
adc
fist
aas
mov
sbb
sub
jo
sbb
jl
lahf
jg
or
fwait
mov
ins
jmp
repnz
jbe
mov
jae
stos
sbb
test
ins
or
je
add
scas
jmp
outs
mov
inc
jecxz
in
ds
rcl
inc
jmp
je
ins
lods
sbb
test
mov
mov
push
scas
push
loop
xor
xor
cmp
daa
xchg
xor
imul
xor
sub
mov
sub
push
dec
fcmovne
xchg
(bad)
push
loop
jno
(bad)
mov
xchg
je
xchg
jno
test
popf
adc
imul
mov
add
stc
icebp
xor
jle
xchg
test
jnp
and
mov
call
add
outs
stos
or
ins
mov
int3
inc
out
add
xor
aas
stos
add
pushf
pop
cmp
or
adc
xor
fdiv
outs
push
mov
fs
loopne
jmp
xlat
mov
imul
add
lahf
inc
inc
mov
test
mov
jno
mov
xor
cmp
sbb
inc
fistp
pop
mov
jbe
mov
icebp
jbe
fisttp
test
js
jle
fiadd
aaa
jo
adc
outs
or
pop
lea
(bad)
(bad)
sbb
add
call
aad
dec
loope
pusha
pop
xlat
cli
xchg
cs
or
push
mov
mov
sbb
cli
xchg
int
inc
jl
test
dec
(bad)
cmp
rol
int
popf
cmp
jae
sbb
arpl
mov
scas
aaa
push
jmp
mov
push
sti
pop
outs
pop
push
adc
imul
aaa
movs
sub
mov
dec
jmp
xchg
adc
jbe
stos
dec
div
cmps
fs
push
sub
rcl
stos
hlt
or
xchg
ds
rcr
stos
rcr
push
fwait
lods
inc
(bad)
push
or
fdivp
enter
push
or
cmp
xchg
outs
xchg
xchg
mov
js
clc
or
addr16
jae
mov
pop
cmps
push
inc
sbb
adc
jle
(bad)
xchg
aaa
mov
jle
fldenv
push
jecxz
jmp
movs
mov
ins
xchg
xchg
in
fisubr
out
mov
cmp
aam
div
adc
dec
not
pop
jge
cmps
cmp
fwait
dec
sbb
into
scas
or
idiv
jae
or
in
xor
pop
xchg
adc
outs
inc
mov
arpl
xor
jmp
fadd
push
movs
push
xchg
(bad)
inc
mov
xchg
xchg
div
neg
in
sub
xchg
push
ds
stc
cwde
cld
enter
test
pop
fiadd
pop
xor
inc
data16
movs
push
sub
xchg
mov
fsubr
stc
addr16
sbb
pusha
and
inc
aas
jl
cmp
or
callw
push
push
dec
cld
scas
xchg
inc
test
push
jb
jle
mov
cmp
out
inc
cmc
clc
jno
in
clc
repnz
ins
stos
xchg
into
sbb
scas
pusha
daa
sti
les
adc
retf
ds
(bad)
(bad)
xor
or
jno
das
mov
les
out
sbb
inc
into
pop
adc
add
nop
pop
fwait
jb
gs
lods
dec
pop
retf
lods
mov
inc
(bad)
cwde
aaa
mov
push
jl
jp
mov
addr16
(bad)
cdq
push
jecxz
imul
cdq
mul
popf
pusha
jne
popf
cmp
shr
mov
xor
adc
hlt
aad
out
jae
bound
push
adc
sahf
ss
jmp
fwait
clc
add
aas
into
inc
aaa
inc
push
cmp
bound
pop
aaa
lods
sub
mov
sbb
add
add
mov
cmp
movs
jno
std
not
stos
jmp
mov
and
mov
cmps
mov
dec
dec
mov
cmp
pop
fisubr
inc
ds
in
fnstcw
inc
jb
pop
lods
cmp
jo
gs
mov
loop
add
pop
mov
es
stos
xor
imul
add
mov
jge
mov
add
push
push
cmps
jb
iret
repz
xchg
jmp
mov
adc
not
mov
lds
bound
mov
ds
call
cwde
inc
loope
hlt
sub
in
push
pushf
or
pop
jne
sahf
xor
jl
mov
mov
cli
add
aaa
ror
sub
nop
inc
mov
test
add
fsub
out
(bad)
pop
(bad)
xchg
push
loop
jne
rcr
mov
mov
sub
int3
ins
test
cdq
imul
mov
movs
retf
dec
mov
sub
cli
retf
inc
es
adc
or
xchg
popa
out
icebp
or
aaa
(bad)
xor
jo
sub
outs
outs
fcom
movs
cmp
sub
push
inc
jmp
call
sti
dec
pop
jl
xor
mov
js
loop
jge
mov
bswap
rol
test
push
jo
mov
adc
scas
les
fwait
(bad)
ja
dec
mov
sub
inc
cdq
cmp
adc
je
dec
lahf
retf
xor
aas
mov
pop
into
xor
or
add
dec
rcl
sbb
test
nop
pop
jmp
mov
test
push
repnz
dec
push
popf
pop
(bad)
mov
dec
xchg
repnz
jbe
xchg
into
rol
mov
jge
mov
test
xchg
(bad)
mov
jmp
gs
je
cmp
icebp
jg
xor
arpl
push
pop
inc
mov
stos
lods
mov
sub
add
inc
and
xor
push
sub
add
shl
dec
xor
sub
out
fdivr
les
and
(bad)
pop
in
mov
sub
rol
mov
pop
mov
mov
test
fwait
test
ds
stc
mov
in
and
cmp
data16
outs
xchg
jg
mov
mov
sub
pop
jmp
pop
ss
cmp
data16
sub
adc
ds
cmp
push
dec
dec
aas
fst
xchg
clc
add
lea
sahf
mov
cld
mov
inc
sub
xlat
mov
xchg
jnp
fimul
xor
cmp
lds
dec
cs
fist
inc
jo
dec
mov
xor
fwait
int
inc
push
jmp
mov
aas
cmc
pop
xor
das
mov
fisttp
mov
cmp
ins
aam
xchg
sbb
add
cmc
movs
retf
jg
(bad)
cwde
pop
pushf
xchg
fs
in
add
pop
mov
mov
sbb
sahf
lea
jmp
xchg
xchg
hlt
cs
sbb
(bad)
ror
xor
xor
inc
mov
(bad)
mov
mov
(bad)
sbb
into
jne
push
sbb
xor
ja
adc
push
xchg
sub
test
sbb
or
out
fld
dec
push
stos
outs
cdq
mov
dec
xchg
(bad)
call
in
es
pop
cmps
movs
call
movs
stos
xor
icebp
repnz
retf
repz
jmp
fmul
sub
cli
lock
pop
jb
rcr
jnp
inc
and
fwait
rcr
out
mov
mov
dec
jne
inc
enter
cmp
pop
int
jae
push
cmp
pop
sub
pop
xlat
rol
lds
and
pushf
rol
cmp
test
aad
lahf
popa
add
xchg
rol
xchg
shl
inc
adc
and
dec
mov
add
dec
ss
xor
xlat
pop
in
inc
mov
ss
sbb
bound
cmp
mov
in
rol
aad
pop
inc
adc
test
loope
outs
call
movs
mov
lock
repnz
test
dec
mov
mov
fdecstp
jle
xchg
fisttp
push
cmc
das
pop
sbb
pop
sub
push
xchg
aaa
sub
mov
out
das
mov
and
pop
adc
cs
xchg
das
test
stc
dec
pop
mov
xor
outs
and
test
hlt
pop
cli
pop
add
cmps
jnp
fcomp
addr16
mov
mov
in
in
std
(bad)
aad
rcr
add
int3
fild
xchg
fisttp
push
clc
and
lods
and
cmp
jp
aaa
pop
jbe
push
or
mov
xlat
inc
in
add
fld
push
iret
ds
push
jl
test
push
adc
jno
mov
jb
mov
push
ret
xor
pop
push
fld
nop
out
sahf
xlat
mov
cmc
test
or
(bad)
xchg
pop
aad
or
jmp
adc
leave
repnz
cmp
mov
push
clc
sbb
sub
hlt
lods
pop
frstor
push
sbb
sbb
test
jp
mov
lea
pop
fstp
cld
cli
jo
sti
jbe
or
xor
cmp
outs
pusha
movs
adc
test
and
fist
repnz
outs
push
stos
pop
sti
mov
dec
mov
mov
push
stc
rol
mov
arpl
mov
test
out
addr16
out
inc
rcl
jb
cmp
mov
mov
fmul
ret
adc
mov
xor
hlt
push
push
mov
push
mov
sbb
mov
inc
mov
add
sub
mov
dec
pushf
aam
popa
loopne
or
mov
mov
out
lock
cmps
les
mov
mov
hlt
fld
jmp
cs
hlt
repz
into
cmp
aaa
jns
sub
jo
mov
cwde
sub
rcr
ret
call
int
sbb
adc
pusha
inc
test
and
cmp
retf
xor
ins
leave
fisttp
cmc
jbe
jl
ja
movs
stc
pop
mov
add
lds
dec
lahf
pop
inc
mov
xlat
fld
mov
leave
sub
enter
jo
dec
mov
dec
sub
fwait
into
scas
xor
stc
daa
xchg
xor
add
sub
outs
pusha
test
add
or
or
not
mov
xchg
push
mov
push
loop
lahf
ins
retf
mov
mov
mov
mov
addr16
pushf
lea
aaa
out
aam
jecxz
js
xchg
mov
pop
cs
test
jnp
lods
sbb
mov
push
cwde
les
loope
or
sub
xor
sub
push
(bad)
arpl
ja
movs
sub
xchg
in
out
xchg
xor
add
fisubr
mov
xchg
dec
hlt
cmps
add
sti
nop
sbb
sar
outs
ja
xchg
mov
mov
cwde
lods
inc
loope
fisubr
fist
cmp
dec
mov
inc
cs
xchg
mov
mov
jmp
imul
push
add
jl
cmps
ins
cmp
cmp
in
inc
test
jae
test
sub
jno
retf
mov
mov
lods
mov
xchg
fwait
xchg
add
sti
cmc
mov
cdq
inc
push
xchg
movs
inc
call
xchg
(bad)
ja
cmp
dec
test
dec
popa
loopne
pop
jl
mov
xchg
sub
call
enter
bound
int
sbb
sub
jns
inc
add
(bad)
adc
and
in
cwde
adc
sbb
push
mov
ins
xchg
retf
cmps
ins
call
rcl
mov
sub
mov
push
xlat
lock
mov
lods
dec
cs
repnz
xor
imul
mov
fistp
inc
mov
sbb
xor
jnp
add
bound
sbb
jne
movs
test
cmp
dec
in
test
daa
mov
jno
je
jno
inc
in
adc
test
xchg
test
cmp
dec
xchg
inc
add
loope
mov
rol
mov
int3
xor
enter
pop
cmp
arpl
xchg
cwde
xchg
push
push
into
add
jge
inc
fnstsw
xor
pop
scas
sub
push
out
pop
mov
adc
aam
xor
cld
add
imul
lock
xchg
idiv
push
in
add
mov
lods
pop
int
xchg
clc
lahf
sar
jge
xchg
mov
sbb
mov
retf
jp
cmp
xor
retf
push
inc
lods
imul
cdq
xchg
mov
or
stc
outs
jmp
jne
int
aas
jo
sbb
inc
mov
mov
arpl
push
pusha
pushf
ficom
aam
jge
mov
dec
pushf
mov
adc
std
fistp
mov
ja
fidiv
neg
hlt
jo
mov
jae
imul
inc
dec
mov
test
pop
popa
test
add
mov
ret
stc
outs
in
das
cwde
xchg
jbe
add
in
push
inc
mov
(bad)
jl
movs
adc
xchg
clc
sbb
dec
(bad)
and
fadd
jge
bound
pop
test
xchg
data16
cmps
add
xchg
mov
lahf
pop
je
movs
adc
stc
cmc
or
dec
ins
lods
mov
cmp
cs
jmp
cmp
ss
add
push
mov
fwait
les
out
nop
or
aaa
out
adc
sub
push
stc
jb
fstp
lahf
add
stos
xchg
fbstp
les
push
adc
in
jecxz
xor
push
jmp
sahf
(bad)
int
mov
nop
mov
mov
scas
jmp
pushf
xor
hlt
retf
retf
add
pushf
jno
cmp
mov
mov
push
retf
mov
fisttp
mov
and
sbb
pop
mov
inc
sahf
push
add
adc
out
mov
cmp
xlat
mov
clc
ins
inc
push
stos
pop
xor
push
mov
aaa
into
out
das
jmp
and
mov
fs
cmp
test
in
jmp
cmp
adc
cmp
stos
push
or
stos
xchg
adc
push
mov
mov
push
cmp
inc
push
push
imul
fiadd
(bad)
mov
(bad)
jno
push
dec
mul
pop
jmp
jle
ficom
mov
dec
xor
pop
shl
idiv
ins
and
shr
add
test
mov
mov
and
cmc
ret
sub
dec
cld
and
jmp
fadd
add
inc
mov
mov
lahf
cmp
outs
sti
iret
js
fdiv
jno
mov
sbb
fidivr
mov
lea
and
mov
xor
outs
and
inc
or
je
mov
out
sub
imul
jns
sti
mov
outs
inc
mov
inc
(bad)
mov
ror
xor
ja
and
pop
mov
xor
pusha
xchg
les
ins
fscale
sbb
cmp
add
test
imul
cmp
sbb
aad
adc
and
scas
test
mov
inc
cmp
xor
mov
mov
xchg
cld
sbb
icebp
mov
fwait
mul
push
pushf
movs
mov
aaa
cli
retf
xchg
(bad)
inc
ins
xchg
xchg
pop
call
repz
dec
rcr
inc
sbb
sbb
test
mov
call
bound
xor
lods
adc
sub
fs
ins
and
xchg
inc
pop
inc
fst
xchg
mov
jnp
(bad)
clc
dec
mov
mov
add
clc
movs
idiv
jo
xchg
sbb
mov
pop
pop
dec
div
fisubr
inc
bound
dec
test
add
retf
dec
pop
xlat
pop
loop
push
mov
add
cmp
out
pop
mov
cdq
push
cmp
std
or
xor
mov
imul
and
in
test
mov
repnz
dec
movs
movs
mov
addr16
xchg
and
loope
mov
out
fs
aam
in
dec
fild
cs
sti
lods
pop
ret
sbb
push
sbb
mov
xchg
cmp
out
or
or
fwait
adc
cs
inc
pusha
xchg
jb
sar
je
mov
or
and
jmp
mov
jb
dec
jbe
stos
and
mov
mov
cmc
lahf
popa
sub
rol
lahf
scas
pop
mov
adc
shl
jae
(bad)
mov
pop
retf
xor
stc
add
jp
aas
dec
jnp
pop
add
fwait
int
xor
cli
add
in
cmp
adc
jb
test
and
dec
ja
xlat
test
cmp
dec
in
(bad)
xchg
xor
clc
pop
(bad)
dec
(bad)
and
sbb
push
call
pusha
mov
jg
xchg
mov
(bad)
idiv
call
cwde
scas
ja
push
sbb
in
push
pop
push
ss
dec
lahf
imul
sbb
cli
add
pop
enter
pop
and
or
cmps
push
inc
cmps
sbb
lahf
cmp
mov
dec
xchg
sti
add
cmps
push
fcmovu
loope
push
pusha
sbb
fs
shl
cwde
enter
std
loop
fadd
dec
lea
movhps
aam
fstp
xor
adc
cs
ret
push
inc
out
jmp
sbb
xor
jae
cmc
inc
iret
pop
icebp
jl
(bad)
ja
mov
jb
xchg
fwait
or
push
inc
clc
fist
repnz
repz
les
daa
test
adc
jnp
cwde
scas
sar
pop
fs
mov
and
jmp
dec
ins
sahf
(bad)
xor
pop
fiadd
pop
cli
cld
fbld
fidivr
jo
inc
mov
imul
mov
mov
stc
or
xor
xor
pop
cmp
or
and
ds
stos
stc
xor
and
fist
idiv
inc
lea
mov
xchg
fstp
std
fild
scas
shl
sbb
push
aaa
stc
fiadd
fwait
scas
dec
jecxz
fidivr
cs
fst
sbb
mov
inc
cs
mov
hlt
outs
loop
jnp
div
je
cmps
pop
push
dec
(bad)
scas
cmp
paddw
mov
push
fwait
mov
jle
lods
xchg
aaa
mov
jbe
stos
sub
mov
xchg
adc
test
(bad)
das
test
leave
sbb
mov
out
clc
sar
out
cwde
xor
push
jmp
neg
pop
jmp
jb
jg
push
inc
pop
lods
nop
test
inc
repnz
sbb
inc
int
adc
adc
ins
je
dec
cmp
cwde
test
imul
test
(bad)
adc
push
stos
pop
loopne
enter
xchg
mov
mul
movs
mov
inc
dec
mov
repz
retf
jecxz
pop
ins
cdq
test
in
cld
ds
jmp
push
jle
sbb
lea
stos
mov
mov
call
jbe
mov
adc
jg
sar
cmps
adc
xchg
movs
test
in
test
mov
pop
xor
sbb
jmp
xchg
(bad)
mov
(bad)
movs
mov
in
add
mov
jae
mov
sbb
div
mov
icebp
dec
je
mov
sub
dec
add
lock
add
mov
pop
dec
test
fild
loop
mov
jbe
pop
xor
and
lea
sub
inc
lahf
inc
pop
xlat
push
pop
stos
mov
pop
out
movs
adc
jno
lea
neg
cdq
jge
mov
(bad)
std
xor
stos
lds
stos
push
push
mov
test
std
icebp
adc
mov
ds
sub
add
sbb
mov
sub
shr
out
or
xor
xor
and
test
xor
cli
ss
and
pop
mov
jbe
movs
das
(bad)
movs
loopne
mov
loop
loopne
jno
in
stos
mov
call
rcl
outs
push
mov
(bad)
xchg
in
idiv
mov
fidivr
lods
pop
fld
pop
es
pop
pusha
mov
ds
lods
cmps
lahf
xchg
cmp
stc
outs
jmp
push
jge
js
pop
cwde
xor
add
cmps
push
pop
mov
test
pop
push
outs
mov
cmp
push
and
pop
mov
stos
push
and
rol
stos
mov
aas
stos
jp
xchg
mov
ss
sti
clc
(bad)
dec
ins
fwait
lods
inc
xchg
dec
(bad)
dec
pop
sub
in
xor
adc
mov
aaa
push
xchg
mov
stos
jnp
cli
or
fidiv
jae
int
sbb
xor
push
inc
lods
adc
mov
jae
fadd
lock
jle
lods
inc
lock
pop
xor
das
int3
fsubr
ins
lea
repz
xchg
loopne
mov
xor
ret
movs
std
popf
es
adc
fisttp
sub
cld
cmc
inc
xchg
or
or
mov
mov
mov
enter
int3
jae
jno
iret
pop
push
jo
sbb
imul
xor
sbb
lea
fcom
out
rcl
repnz
jno
mov
dec
xchg
rcl
lock
lea
into
ins
xchg
mov
xchg
mov
loop
ret
rol
imul
fldenv
ret
inc
call
stos
pop
push
mov
jbe
mov
mov
and
outs
out
loope
mov
add
inc
aas
cmc
pop
xor
add
xlat
imul
pop
inc
mov
inc
call
neg
mov
(bad)
xlat
pop
aad
push
inc
test
shl
mov
fwait
push
add
jmp
mov
div
xchg
div
lahf
stos
xor
jb
xor
shr
mov
cmp
jnp
pushf
aaa
add
dec
pop
push
out
mov
lods
inc
sub
ins
retf
mov
push
push
sub
imul
mov
mov
ins
test
fs
xchg
aaa
mov
arpl
sbb
lea
scas
xor
les
cmp
(bad)
mov
xchg
dec
cli
(bad)
mov
ja
test
and
mov
push
call
lods
dec
push
cs
fsubr
fild
cmp
or
addr16
aaa
pop
push
mov
dec
icebp
cmc
or
or
int
or
and
and
mov
jge
xchg
xchg
or
and
xlat
xchg
ds
push
rcr
jb
mov
ins
xchg
test
xchg
(bad)
stos
xor
inc
mov
stos
outs
ja
mov
adc
fcomip
test
sti
outs
ins
mov
sbb
inc
loope
jecxz
out
push
push
jle
cmp
add
lahf
xchg
mov
inc
out
nop
sbb
iret
xor
add
pop
fwait
sub
jb
pop
gs
or
xchg
cmp
xchg
das
mov
push
loop
je
sbb
sbb
pushf
ins
sar
dec
or
mov
in
in
ret
bound
movs
cmp
std
hlt
xchg
neg
cmp
push
fdiv
(bad)
push
fdiv
sbb
popa
ficomp
inc
lea
jns
test
mov
sbb
mov
enter
outs
adc
dec
jb
outs
adc
xchg
and
inc
sti
idiv
sub
mov
inc
cmps
(bad)
mov
adc
repz
sahf
test
es
hlt
adc
rol
jl
stos
dec
repz
call
lock
cmp
pop
les
dec
push
cld
push
sbb
mov
xchg
and
fild
aam
mov
arpl
iret
cmp
push
sbb
push
cmps
add
mov
pop
sbb
pop
leave
test
dec
mov
jno
pop
jbe
mov
and
mov
sbb
(bad)
movs
xchg
fcomp
xchg
xor
xchg
cld
repz
add
jmp
inc
cmp
(bad)
pop
ret
push
dec
mov
js
mov
test
mov
loope
cs
fidiv
js
stc
and
jo
adc
sub
and
dec
ins
sahf
jns
xchg
sub
mov
fisub
fsub
scas
sub
mov
jno
in
test
xchg
jnp
neg
mov
mov
jne
mov
cmp
icebp
fisttp
cmp
sub
dec
inc
pop
les
je
dec
or
xchg
mov
jbe
cli
or
add
cmp
push
aaa
adc
outs
dec
mov
movs
sub
xor
(bad)
and
cmp
xchg
mov
inc
fidivr
test
fcomp
movs
lods
jmp
mov
jmp
cmp
std
test
test
dec
mov
and
stc
aad
inc
jecxz
push
sub
and
push
test
sbb
mov
push
jmp
xchg
jp
jbe
int
sbb
das
mov
mov
pop
fwait
mov
pop
in
(bad)
call
retf
fcomp
(bad)
mov
and
dec
repz
pop
pop
(bad)
shr
mov
push
push
mov
not
lods
les
lods
lods
inc
fwait
xor
xor
jmp
lock
clc
adc
cmp
std
push
ss
cmps
mov
(bad)
pop
in
add
pusha
or
and
push
adc
and
das
iret
jnp
cmps
jae
mov
inc
jmp
ss
loope
mov
repnz
jbe
popf
dec
fxch
loopne
mov
cld
push
dec
lock
sbb
jmp
das
aad
xchg
(bad)
dec
ins
xchg
mov
(bad)
pop
out
pop
dec
jmp
or
push
inc
pop
scas
mov
mov
repnz
mov
cmovl
in
sbb
adc
test
fs
mov
adc
fist
cli
bound
stos
pop
cmp
repz
jno
mov
test
loopne
sub
ja
mov
and
push
push
scas
cmp
ficomp
and
add
push
mov
mov
mov
adc
aas
mov
jl
jb
jmp
add
sub
test
xor
sbb
dec
aas
call
loop
dec
jge
and
mov
sbb
in
mov
mov
test
loop
in
jmp
push
push
fidiv
or
ret
int3
fnstcw
add
push
es
push
cmp
out
je
jne
(bad)
push
jae
imul
pop
fild
shl
mov
stos
sub
xchg
es
ja
add
cmp
dec
mov
call
xor
mov
movs
in
mov
mov
sar
mov
xchg
mov
sub
(bad)
neg
inc
xchg
sbb
data16
mov
adc
scas
sbb
add
jb
mov
xor
repnz
imul
xor
dec
dec
out
fist
test
popf
call
fs
ja
xchg
(bad)
xchg
data16
mov
inc
pushf
movs
xchg
sbb
mov
movs
fcmovu
es
mov
ins
(bad)
inc
inc
dec
xlat
int3
fstp
fbstp
pop
sbb
sahf
push
es
xchg
fwait
stos
iret
xor
enter
adc
xor
imul
pop
(bad)
imul
movs
cmp
mov
pusha
leave
rcl
jmp
dec
div
and
fist
mov
outs
mov
stc
aam
fdivr
inc
ins
xchg
lods
jns
pop
fisttp
loopne
ror
inc
mov
gs
test
mov
outs
in
idiv
mov
jp
add
jmp
sub
sub
pop
sbb
pop
in
(bad)
sbb
sub
(bad)
sti
jno
sbb
stos
dec
std
mov
dec
test
and
movs
test
ins
movs
(bad)
scas
(bad)
dec
popf
add
outs
cmp
fild
mov
mul
or
clc
(bad)
jle
inc
jo
pop
call
or
mov
cdq
adc
(bad)
sar
xchg
cli
inc
ins
js
mov
sbb
ins
addr16
push
jmp
shr
pop
outs
push
mov
dec
mov
call
fwait
add
test
pop
loope
xchg
xor
push
cdq
scas
inc
xchg
dec
(bad)
or
aam
fist
jae
dec
movs
pop
arpl
or
xchg
fwait
xor
clc
jge
sar
xor
aaa
sbb
das
(bad)
sub
jl
mov
(bad)
sbb
and
adc
pop
stos
pop
sti
mov
dec
xchg
in
ja
in
cmp
sti
jmp
mov
mov
push
xchg
xchg
xchg
popa
xor
fsubr
std
mov
out
mov
jecxz
(bad)
sub
fild
xor
push
inc
pop
mov
lea
test
jmp
inc
or
and
pop
mov
jmp
ja
outs
xor
push
add
in
fsubr
xor
rcr
mov
mov
cmp
mov
cli
mov
inc
pushf
movs
xchg
das
sbb
rol
test
cmps
ds
loop
fistp
xor
pop
je
xchg
push
int
cmp
stc
dec
ret
cli
sbb
cmp
mov
cs
jae
push
add
xor
fucomip
aaa
call
stos
xor
xlat
mov
in
movs
push
es
sar
and
pop
test
rol
test
sbb
int3
cmc
sbb
jle
(bad)
lahf
inc
retf
dec
div
cs
cli
in
loop
icebp
dec
jo
outs
mov
jl
loopne
or
movs
scas
lea
ret
cld
jbe
push
aas
cmps
sub
push
add
popf
and
mov
push
movs
mov
pop
iret
shl
pop
jg
lea
sahf
xor
out
pop
xor
xlat
test
rep
xchg
mov
ja
mov
add
(bad)
inc
jmp
jbe
xor
ins
pop
pop
sahf
pusha
cmp
mov
mov
jecxz
or
clc
jp
inc
aaa
cld
or
jb
adc
sbb
jne
mov
int
call
jmp
push
cmp
inc
shl
out
(bad)
xchg
jno
std
movs
mov
mov
movs
(bad)
mov
dec
mov
ja
mov
ds
mov
sbb
stos
dec
loopne
fnstcw
fild
ss
jns
sbb
es
xchg
test
mov
jne
push
pop
in
fs
pop
mov
mov
sahf
jge
sub
sbb
add
cdq
adc
inc
dec
popf
pop
jecxz
enter
mov
ret
xor
fsub
mov
jno
enter
stc
loop
div
dec
fs
test
jp
cs
pop
(bad)
cld
fstp
and
dec
mov
push
into
mov
sub
(bad)
(bad)
jnp
jno
int
xor
add
dec
jns
pop
inc
mov
dec
in
mov
dec
out
out
loopne
mov
jle
ins
add
jle
fwait
ror
in
mov
jno
in
rol
mov
test
ret
les
out
call
xor
jmp
jp
pusha
mov
inc
sub
test
in
and
xor
xor
add
fwait
sub
push
fisttp
(bad)
and
mov
cmp
icebp
mov
test
outs
je
jne
sahf
mov
rcl
in
mul
(bad)
scas
mov
sbb
xchg
mov
cmc
aad
retf
adc
sbb
mul
or
jno
inc
lahf
inc
es
test
inc
clc
push
out
add
icebp
push
sbb
vmwrite
add
ds
fdiv
mov
jl
or
fstp
cli
adc
pop
fidivr
xchg
jecxz
mov
test
(bad)
clc
xchg
adc
js
jmp
pop
scas
popf
repz
aaa
cld
les
mov
jmp
cmp
xor
cmp
test
ins
xchg
mov
jmp
sar
bound
jecxz
das
dec
sub
add
push
cmps
sbb
cli
xor
ret
cmp
inc
push
mov
xchg
xlat
jno
xlat
mov
(bad)
cdq
fs
shl
ffree
or
js
xchg
xlat
repnz
inc
sbb
mov
sub
stc
ror
in
sbb
pop
test
push
cli
inc
adc
pushf
dec
sub
addr16
adc
xor
add
ja
pop
sbb
into
loope
inc
and
out
fucomip
add
sbb
nop
dec
cmp
dec
call
(bad)
xchg
and
adc
push
mov
xchg
mov
add
dec
aad
out
cs
sti
out
pop
call
test
pop
jbe
movs
xchg
out
pop
cwde
fdiv
ja
aam
(bad)
xor
mov
push
mov
jo
mov
dec
neg
xchg
and
pop
push
lea
xchg
lock
xchg
ror
mov
lods
mov
outs
pop
popf
mov
stc
cmps
cli
fsub
sahf
test
imul
add
pop
fdiv
sbb
movs
xor
ins
sti
cs
pop
mov
fwait
enter
dec
test
aas
mov
or
pop
sub
or
imul
stos
cs
popf
shl
(bad)
fcom
shr
jge
dec
retf
fcomp
push
stos
inc
dec
cli
loopne
add
ins
mov
ins
jnp
fiadd
(bad)
ret
adc
xchg
dec
jmp
retf
or
inc
call
lods
ins
push
loopne
ds
mov
stos
mov
call
add
es
jecxz
iret
or
jp
pop
pop
movs
cmp
mov
jl
into
add
push
adc
pop
movs
jo
scas
cmp
xchg
jno
repz
(bad)
test
jp
leave
mov
xor
loop
in
lock
sbb
hlt
ss
stc
(bad)
fsub
(bad)
xor
sbb
sbb
movs
fwait
test
xor
repnz
in
cs
jb
jb
call
sub
jge
mov
movs
cmp
movs
(bad)
push
add
fs
jmp
les
inc
test
ret
mul
test
xchg
inc
and
(bad)
mov
jg
xchg
mov
push
xor
ror
fwait
jno
pop
(bad)
and
cli
out
fisubr
xor
es
mov
add
test
mov
jmp
jg
leave
xor
jo
pusha
mov
ins
jae
push
sbb
sbb
and
aas
test
jo
outs
inc
jno
outs
lock
addr16
mov
jge
mov
pop
int
mov
scas
scas
ror
mov
lods
mov
loop
(bad)
repz
add
(bad)
sbb
inc
nop
sti
stos
jbe
cmp
bound
inc
push
jge
test
addr16
sub
fs
pop
fs
add
xor
cmp
xor
mov
hlt
lods
sti
pop
(bad)
div
push
and
fsub
fnsave
and
mov
nop
lods
test
xor
mov
and
hlt
(bad)
mov
xor
out
cwde
addr16
push
jmp
sub
jmp
enter
jo
dec
cwde
xor
and
aaa
sub
out
fldcw
call
fs
sbb
scas
and
mov
inc
xchg
movs
cli
and
dec
retf
adc
pop
sub
dec
repz
cwde
je
loopne
and
(bad)
xchg
jnp
push
lea
add
cli
mov
in
neg
add
sbb
repnz
fld
xor
sbb
mov
jns
mov
mov
sub
add
lds
cmp
cmp
jge
test
adc
mov
inc
(bad)
icebp
lahf
es
xchg
sbb
je
jno
jne
mov
inc
mov
cdq
jo
in
xor
not
stos
lds
mov
xchg
adc
stc
icebp
mov
lock
outs
jmp
jno
gs
ds
ss
in
push
jmp
pop
jg
inc
sbb
xchg
lods
mov
cmp
pusha
xchg
repz
mov
xor
adc
pop
ins
rcl
retf
cdq
lods
neg
pop
das
jno
cld
mov
repnz
pop
jg
jle
mov
dec
popf
(bad)
mov
idiv
lahf
adc
ins
or
test
pop
stc
hlt
sbb
test
idiv
cmp
inc
nop
idiv
ja
sbb
pop
test
pop
sahf
jb
pop
call
je
nop
addr16
jmp
jl
inc
fidiv
adc
pop
sub
fs
xor
test
sub
pop
xchg
lods
mov
and
ficomp
xchg
loope
inc
cmps
fs
jmp
repnz
stos
bound
mov
lock
loope
imul
mov
aam
clc
or
jno
je
jns
dec
out
mov
xchg
ds
iret
ja
cli
or
sub
pop
push
jo
xor
std
imul
test
jle
cmps
lahf
pop
adc
(bad)
rcl
hlt
pop
add
mov
call
mov
pusha
push
xchg
sti
neg
aad
movs
neg
jmp
cmp
not
xor
(bad)
dec
idiv
cmp
mov
pusha
xor
sbb
fwait
sub
pop
icebp
cmps
leave
(bad)
sbb
fsub
cli
cs
inc
inc
jl
mov
pop
scas
push
into
push
iret
jl
pushf
push
dec
mov
inc
popf
test
xor
jl
jmp
jg
add
cmp
push
icebp
cmps
jmp
dec
out
push
add
rcl
mov
jae
shl
and
cmc
cdq
in
neg
lea
aaa
cs
loope
jo
outs
mov
jl
loopne
inc
push
xchg
movs
mov
push
pop
jmp
mov
or
inc
or
mov
int
icebp
outs
pop
mov
inc
mov
(bad)
xor
lods
sbb
sti
sbb
bound
lods
jbe
xchg
(bad)
dec
add
inc
adc
sti
ins
or
arpl
iret
jmp
retf
lock
xchg
test
cmp
call
in
push
call
lods
sub
mov
jge
mov
retf
cmp
cli
sbb
xor
jb
out
pop
shr
inc
(bad)
push
pop
test
jle
xchg
test
and
(bad)
mov
div
dec
stos
pop
icebp
cdq
add
in
jecxz
pop
cs
rol
mov
test
leave
lea
lea
pop
scas
or
ds
test
push
in
inc
pop
cmp
cmp
sub
jmp
outs
jmp
pop
xor
sub
add
and
aas
lods
add
jge
test
cmp
cmp
dec
jmp
inc
shl
push
movs
pop
mov
mov
ss
xlat
mov
xchg
jge
xchg
bt
xchg
stos
aam
pusha
out
call
ds
fisubr
dec
cmps
push
sbb
les
inc
in
lea
xchg
std
inc
addr16
and
and
dec
pop
xor
pop
shr
popa
jae
adc
cmps
das
jp
mov
jmp
mov
pushf
adc
fnsave
call
sbb
call
test
mov
xlat
repnz
fwait
lods
inc
repz
lock
cmp
rol
dec
scas
jno
inc
add
mov
xchg
cmp
in
ds
jbe
int
ds
add
fmul
mov
mov
mov
popf
mov
inc
mov
jne
or
ins
xchg
stos
jecxz
in
xchg
popa
and
repz
cli
test
js
mov
clc
or
mov
or
sub
xchg
int3
and
xor
push
inc
pop
icebp
mov
scas
pusha
(bad)
add
call
jae
test
inc
scas
imul
mov
std
adc
cmp
out
xchg
cmp
pop
pop
stos
pop
aad
in
mov
cwde
popa
and
movs
cmps
add
pop
xchg
pop
arpl
and
sbb
jae
dec
inc
dec
fdiv
(bad)
xor
pop
push
inc
jbe
mov
mov
fcom
fs
enter
je
sahf
pop
(bad)
je
add
rol
pop
test
jmp
mov
enter
bound
scas
jbe
mov
and
mov
add
sbb
cmp
not
cmc
movs
ss
fisttp
ss
rcl
sbb
and
jno
inc
mov
push
pushf
mov
stc
outs
fsqrt
sbb
sbb
xor
push
add
mov
pop
pusha
stos
addr16
cmps
cmp
lods
xchg
xor
inc
(bad)
cmp
jge
mov
imul
rol
xchg
pusha
mov
mov
mov
icebp
movs
push
leave
push
xlat
dec
and
push
pop
mov
jne
mov
push
mov
cmp
iret
sbb
inc
(bad)
sbb
jge
add
mov
push
popf
mov
sub
push
inc
hlt
fdivr
es
enter
sbb
neg
stos
push
rcl
xor
dec
icebp
xchg
cmps
shl
inc
je
mov
das
sbb
outs
dec
mov
push
jecxz
fdivr
xor
push
shl
or
or
pushf
gs
aam
and
inc
out
xlat
sbb
or
inc
or
bound
dec
arpl
outs
lea
cmp
retf
mov
fdiv
jl
jp
popf
in
mov
cdq
adc
call
out
mov
data16
in
test
aaa
(bad)
in
fpatan
dec
outs
lods
test
and
(bad)
neg
push
ret
or
ins
mov
mov
call
pop
call
and
jecxz
(bad)
push
cmps
jge
cmps
pop
pop
mov
add
and
out
cmp
fcomp
pushf
pop
add
mov
dec
cwde
les
add
loope
cmp
cli
or
test
inc
jmp
dec
ins
xchg
mov
push
cmp
rcl
ja
dec
mov
js
imul
lea
mov
sbb
adc
push
imul
lods
adc
imul
je
mov
call
and
popf
pop
into
xchg
push
neg
add
mov
in
out
jb
(bad)
aad
ins
call
ret
test
not
in
ins
xchg
call
dec
mov
out
pop
xchg
jle
call
jp
mov
aam
sub
ins
in
rcr
pop
inc
cmps
pop
fs
add
pop
ficom
movs
inc
sbb
into
cli
das
cs
dec
out
fist
sub
(bad)
mov
xchg
cli
mov
xchg
loope
aad
sub
pop
cli
in
aad
dec
adc
mov
dec
inc
xor
cmc
mov
iret
cmp
aas
push
jp
les
addr16
dec
movs
clc
jb
jb
into
pop
adc
jge
lods
inc
xchg
and
sbb
pop
xor
retf
sbb
inc
(bad)
aam
xor
sti
or
inc
jb
mov
popf
in
mov
fwait
inc
mov
pop
dec
clc
hlt
xchg
xor
dec
xchg
bound
mov
ret
(bad)
fwait
lahf
inc
out
stos
adc
cmp
sti
test
pusha
pop
xchg
pop
push
popf
imul
mov
fisub
lea
xchg
aam
addr16
(bad)
pop
push
inc
ds
adc
pop
xor
cmp
mov
add
fdiv
sbb
je
cmp
inc
mov
test
in
pmulhuw
mov
mov
jg
sti
movs
test
add
aad
bound
in
sbb
das
cli
(bad)
fistp
sub
or
push
loopne
or
adc
sub
cmp
xor
jo
sbb
push
jne
dec
and
cli
bound
dec
jecxz
xchg
aaa
mov
inc
cmp
and
cwde
xchg
xchg
popa
retf
jecxz
add
rcr
mov
arpl
cdq
mov
mov
xlat
ret
inc
push
jp
cmp
ds
shr
sbb
arpl
ja
pop
pushf
mov
mov
jmp
je
pop
xor
xor
fs
mov
xchg
or
dec
push
mov
mov
mov
inc
(bad)
pop
(bad)
fistp
adc
xlat
fcomp
je
mov
fdivp
test
neg
xchg
mov
addr16
popa
daa
jmp
jmp
out
add
mov
(bad)
pop
lds
push
or
shr
dec
mov
pop
pusha
lea
inc
mov
fwait
enter
ins
xchg
jmp
test
add
and
and
pop
sbb
lods
and
adc
fist
les
inc
lea
pushf
out
xchg
les
sbb
cli
xchg
jecxz
mov
test
setne
test
shr
cmps
xor
sub
jmp
jae
xor
sbb
push
cld
dec
or
retf
mov
ins
jmp
jae
mov
adc
and
mov
stos
pop
stc
ins
pusha
mov
pop
xchg
rcr
in
fsub
adc
outs
push
stos
pop
retf
popa
add
jg
cmc
cli
mov
mov
jnp
fsubrp
js
loope
stc
icebp
loop
dec
jmp
lds
push
es
cld
scas
inc
xchg
add
sbb
add
(bad)
movs
xchg
scas
ss
out
loop
js
clc
bound
aaa
fisub
cmp
adc
add
stos
cmp
mov
outs
(bad)
xlat
call
sbb
push
pushf
pop
cmc
sahf
sbb
fwait
pop
sub
cld
test
jecxz
xchg
jg
pushf
cdq
mov
add
repnz
xchg
stos
outs
mov
mov
cs
neg
push
jmp
jge
cmp
jno
pop
mov
lahf
mov
shl
xchg
aas
xchg
clc
jbe
imul
jae
mov
bound
pop
xchg
fld
fdiv
data16
push
js
add
std
jns
rcr
mov
xchg
xor
mov
push
test
lds
mov
cmc
push
add
xchg
repz
cmp
outs
mov
inc
dec
mov
add
cs
ja
repnz
xor
adc
push
add
push
out
imul
xor
aas
out
xlat
mov
repnz
(bad)
sub
test
mov
int
jno
rol
sub
dec
ja
mov
sbb
(bad)
retf
(bad)
dec
add
fcom
sub
cli
neg
push
jmp
push
and
pop
mov
add
fs
ret
jo
xor
mov
cmp
mov
in
mov
add
xchg
jecxz
mov
cld
add
not
test
xchg
ins
xchg
inc
data16
mov
add
(bad)
(bad)
push
in
fidivr
cs
fcmove
data16
xor
pop
fistp
mov
push
cmc
mov
mov
cs
inc
rol
sbb
fldenv
xor
sub
sub
outs
dec
mov
je
mov
dec
fst
mov
mov
jno
pop
js
mov
push
xchg
shl
adc
jecxz
repz
mov
je
enter
in
jmp
ins
xchg
mov
sub
sbb
rol
data16
xor
pop
jle
mov
stos
sahf
mov
sub
inc
jmp
jbe
jge
ret
fs
test
arpl
xchg
imul
dec
push
popf
mov
xchg
out
daa
mov
jb
push
push
mov
cmp
adc
xlat
xchg
add
js
cmps
mov
dec
call
xor
div
mov
retf
or
jmp
xor
inc
mov
push
fwait
mov
mov
enter
hlt
sbb
cmp
(bad)
and
add
jnp
(bad)
xchg
cmp
or
out
xchg
inc
popf
loop
les
push
stos
and
(bad)
loope
xchg
stos
call
std
rol
mov
paddsw
mov
sbb
repnz
or
dec
retf
dec
inc
push
nop
icebp
fdiv
sbb
ja
test
inc
jp
aaa
aas
pop
icebp
fld
outs
jmp
push
pop
mov
and
sub
cmps
push
cmp
sbb
push
xor
inc
(bad)
fist
dec
jge
(bad)
pop
std
mov
xchg
arpl
xchg
pop
add
jecxz
test
arpl
shl
xchg
mov
pop
bound
cmp
aaa
out
jmp
inc
push
dec
mov
bound
inc
cmp
lods
mov
mov
and
jle
jmp
pop
int
pop
jne
add
inc
pusha
lahf
jg
sub
nop
mov
or
sub
fcom
out
iret
retf
pop
jnp
sahf
push
lock
repz
pushf
ret
loope
je
lock
xchg
sub
jg
lahf
fucomip
dec
lods
arpl
mov
repnz
mov
or
or
jmp
inc
sub
or
inc
sahf
push
test
pop
sub
imul
sbb
ds
sub
add
das
nop
adc
inc
imul
or
mov
lods
rol
or
lahf
arpl
xchg
je
in
adc
mov
xchg
outs
push
xchg
adc
inc
cmc
call
cs
fcmovbe
jns
dec
push
jnp
stos
cmp
xor
jno
mov
jmp
(bad)
pop
fs
int
or
add
mov
stos
pop
(bad)
test
and
popf
adc
das
jno
fbld
mov
cmp
sub
mov
mov
int
push
mov
xchg
mov
les
mov
repz
retf
mov
sahf
mov
sub
jmp
sub
fiadd
push
jg
dec
sbb
call
sar
enter
add
int
push
pop
or
cwde
es
adc
xor
cmp
movs
cli
cs
and
xor
lock
add
lea
mov
dec
xchg
in
adc
mov
push
std
fdivr
(bad)
mov
jno
mov
std
xchg
fsub
outs
sbb
mov
sub
aam
stc
push
and
inc
cs
mov
stos
cmp
xlat
push
xchg
jl
hlt
jge
je
in
inc
sbb
imul
mov
fmul
ret
cmps
sub
mov
adc
dec
iret
fidiv
mov
cmp
jg
(bad)
cdq
push
in
nop
jg
aad
mov
(bad)
scas
clc
adc
mov
icebp
stos
retf
cdq
addr16
cmc
(bad)
dec
lock
xor
cmp
call
mov
cs
pusha
out
mov
rcl
fist
call
sbb
push
cmp
lahf
test
fcmovu
xor
jmp
dec
mov
outs
sub
xchg
xor
ins
sbb
ja
xchg
xchg
and
inc
cmc
or
ds
sub
aaa
je
movs
dec
and
cmps
lods
mov
out
or
pop
daa
mov
push
pop
mov
stos
push
mov
test
adc
mov
pop
pop
pop
mov
addr16
xchg
jbe
mov
mov
mov
pushf
rcl
aas
xor
inc
jns
mov
sbb
cs
(bad)
fisub
cmp
push
xor
mov
and
and
aaa
fnsave
(bad)
pop
adc
sbb
cmp
or
xor
add
inc
lds
fnstenv
mov
xor
sti
adc
ins
test
movs
sar
mov
loop
in
repz
outs
mov
cs
dec
jmp
sub
ss
push
inc
push
adc
gs
sbb
and
inc
cmovns
xor
aas
mov
mov
inc
cdq
stos
lea
xor
dec
(bad)
(bad)
aaa
xchg
mov
jge
pop
lods
push
clc
movs
repnz
xchg
in
(bad)
jmp
es
clc
dec
mov
mov
adc
fdivr
out
mov
xor
push
iret
dec
jle
dec
mov
push
sub
mov
jmp
mov
xor
adc
jbe
and
cmp
ins
add
sbb
xor
ret
xor
pop
dec
scas
dec
repz
ror
or
sbb
movs
(bad)
and
jmp
xchg
mov
stc
xchg
in
out
sbb
jmp
fcmovu
inc
loopne
addr16
mov
pop
cmp
dec
push
jp
cmps
leave
xchg
xor
fsubr
cli
daa
test
jne
pusha
cmp
jl
cmp
sahf
jnp
shl
pmulhw
xor
cmps
xchg
adc
int3
imul
pop
shl
ins
fst
test
rcr
mov
rol
pop
(bad)
dec
fs
xchg
retf
pusha
scas
cdq
inc
les
cmp
pop
cld
icebp
enter
js
pop
lahf
cmp
sbb
call
arpl
mov
mov
cmp
mov
outs
mov
lea
push
and
fstp
mov
test
inc
push
mov
push
mov
jmp
sbb
stos
mov
call
aad
mov
mov
aaa
fcomip
mov
call
mov
inc
jecxz
call
test
inc
loopne
popa
push
pop
mov
dec
sub
test
in
or
push
jno
int
adc
das
test
cmps
pop
and
xchg
xor
data16
in
mov
mov
jne
ins
pop
ds
pop
xchg
mov
inc
xchg
mov
mov
cmc
ins
test
sbb
test
adc
mov
sbb
popf
xor
sub
fsubr
fist
xor
aaa
pop
frstor
outs
dec
mov
mov
stc
je
lea
cdq
pop
addr16
xor
sub
imul
mov
ins
lods
mov
dec
(bad)
cld
jmp
test
dec
cmp
sahf
xor
sahf
jb
shl
xor
lods
lahf
add
sub
mov
das
sbb
clc
cmps
mov
arpl
test
pop
(bad)
dec
shl
rol
xor
daa
jge
test
test
rol
addr16
xchg
pusha
jo
aaa
fidiv
or
sub
cwde
pop
xor
or
xchg
mov
int
test
call
jno
arpl
cdq
add
in
iret
cdq
je
std
repz
sahf
mov
mov
ror
mov
inc
jecxz
ficomp
sbb
(bad)
jp
dec
push
jnp
xchg
adc
arpl
pop
or
fldenv
lea
leave
sbb
pop
add
sbb
sub
scas
cs
outs
push
or
mov
inc
out
fiadd
mul
inc
mov
popa
mov
sbb
xchg
dec
mov
cdq
enter
jl
movs
mov
sub
push
fld
lock
sbb
shr
push
pop
stos
sbb
std
sbb
mov
scas
cmp
icebp
data16
add
pop
xor
dec
aaa
pop
add
add
imul
pop
test
cmp
cld
or
sbb
pop
scas
inc
cmp
inc
(bad)
xchg
pop
and
imul
add
dec
mov
jmp
das
in
xchg
lods
test
dec
push
das
sub
push
into
cmp
lods
sub
dec
cs
les
add
cld
adc
sbb
aas
cmp
imul
scas
jb
arpl
push
xor
xor
cmp
jmp
sbb
repz
jl
shl
in
arpl
std
movs
jae
imul
mov
sti
fisub
jmp
aad
pop
mov
fidivr
sub
(bad)
push
inc
push
dec
cmp
inc
mov
xchg
pushf
retf
cmp
in
das
mov
jge
add
and
sub
and
dec
pusha
mov
jae
retf
xor
outs
aam
call
jno
cmps
sub
xchg
mov
dec
lock
inc
pop
lea
lods
xchg
stos
in
add
mov
pushf
push
aas
cli
fmul
pushf
test
lock
retf
dec
mov
std
sub
cmp
dec
fld
jge
sub
lods
mov
sti
inc
fisttp
imul
sbb
ss
or
imul
sbb
add
stos
(bad)
adc
sub
call
jb
test
ins
mov
xchg
addr16
mov
add
in
add
outs
xchg
(bad)
(bad)
or
mov
fcomip
neg
jmp
push
sar
inc
ds
test
dec
stc
inc
jo
cmp
mov
jns
stos
lods
mov
push
out
push
jecxz
pop
mov
pop
popa
inc
aas
int
sub
cmp
pop
jae
outs
add
retf
xor
pop
neg
mov
cld
dec
data16
pop
jecxz
xor
retf
mov
scas
sbb
data16
inc
jle
fwait
mov
es
pushf
xchg
retf
inc
add
lea
cmps
dec
sub
fdivr
scas
push
enter
es
adc
or
mov
movs
adc
pop
std
ins
addr16
sbb
sub
push
imul
lods
add
inc
adc
push
cwde
movs
mov
pop
xor
(bad)
mov
mov
pop
pop
popf
dec
lds
xchg
ins
out
jno
cmc
ror
xchg
shl
mov
sahf
ds
int3
cli
movs
fcmovb
outs
sahf
xchg
dec
jecxz
hlt
das
cs
cld
sti
inc
clc
inc
bound
dec
fwait
sbb
js
inc
and
mov
mov
cli
mov
lahf
clc
jb
or
int
sbb
fwait
aas
int3
pop
icebp
imul
movs
cmp
mov
fnsave
jge
and
xor
mov
add
dec
idiv
jle
cwde
add
icebp
ror
mov
sbb
or
out
(bad)
xor
dec
sub
mov
iret
jg
shl
fbstp
jne
fnsave
fs
sub
pushf
and
mov
mov
jne
mov
cmp
std
xor
sti
add
stos
jp
mov
xchg
inc
in
jbe
rol
test
jecxz
xchg
outs
jnp
mov
repnz
fild
inc
out
pop
lds
xor
push
nop
sbb
push
adc
mov
mov
fisttp
test
(bad)
pop
fs
xor
xor
pop
sub
mov
inc
dec
test
xor
and
and
(bad)
aaa
mov
inc
push
fisubr
mov
cdq
push
out
inc
sub
int
mov
mov
add
enter
aad
dec
mov
inc
jecxz
cmps
xor
cmp
icebp
mov
std
sbb
dec
mov
inc
mov
bound
cmp
and
ss
imul
sub
sub
fs
movs
cmp
sbb
push
pusha
(bad)
fisttp
(bad)
jbe
push
lods
fbld
mov
add
ficom
test
dec
jne
mov
stc
cmps
into
cmp
sub
xlat
cld
xlat
pop
lds
push
or
pop
stos
pop
ds
lahf
fwait
mov
call
gs
cmp
adc
pushf
or
sahf
jp
xchg
jmp
cli
adc
pop
dec
in
adc
mov
jns
inc
scas
jle
shl
xchg
cmps
fs
jns
lea
lock
shl
sbb
mov
xor
fdivr
iret
enter
test
sbb
fstp
inc
or
jp
push
or
cmps
cwde
stos
sub
jmp
adc
inc
jb
iret
cmp
or
sbb
retf
outs
dec
mov
pop
test
jge
(bad)
in
xchg
mov
pop
jno
mov
inc
mov
test
out
sub
clc
pushf
sbb
push
movs
add
add
lock
lods
dec
retf
and
ror
hlt
pop
lock
addr16
adc
retf
or
shl
js
and
sbb
js
and
xchg
pop
inc
movs
cmp
ins
sbb
or
sti
jb
outs
outs
cmp
dec
out
mov
mov
test
out
dec
xchg
mov
mov
pushf
mov
(bad)
nop
std
enter
add
fdiv
fsub
pop
lods
or
mov
pop
or
cmp
das
mov
dec
fnstcw
adc
aaa
adc
outs
inc
mov
test
div
inc
jmp
mov
fbstp
push
lods
jbe
ror
sub
inc
ficom
jmp
shl
addr16
test
cs
rol
stos
in
les
sbb
iret
cmp
fild
xor
aas
inc
addr16
pop
add
int3
dec
cmp
sbb
jmp
int
adc
push
lods
sub
xchg
imul
push
inc
(bad)
lods
xchg
xor
fbstp
sbb
mov
dec
xchg
sar
pop
(bad)
call
mov
xchg
mov
in
aam
dec
js
test
cs
adc
shr
dec
jne
dec
cmps
sbb
pop
mov
sub
mov
xchg
xor
call
adc
pop
adc
pop
push
popf
sub
pop
iret
arpl
ja
mov
dec
in
cdq
inc
dec
and
fist
fld
push
cmps
pop
cld
mov
mov
pushf
jmp
jecxz
mov
pusha
popa
xchg
mov
sbb
in
repnz
mov
aad
jecxz
int
cs
lods
push
icebp
add
aaa
dec
stos
sub
mov
push
xchg
cdq
fwait
lea
jmp
mov
sbb
add
loop
mov
(bad)
jns
mov
add
std
bound
cmp
xlat
mov
xor
lods
(bad)
pop
cmp
inc
out
cmp
jmp
ret
jle
xchg
leave
mov
or
jle
mov
sub
in
and
push
cmp
jno
dec
popf
dec
or
xchg
test
iret
cmp
jecxz
mov
add
or
jne
pop
cwde
sub
fst
retf
popf
xchg
(bad)
and
sbb
fsubr
out
xchg
mov
pop
jae
fild
mul
cdq
push
in
push
and
movs
mov
iret
ins
or
mov
daa
sar
xchg
call
dec
outs
mov
inc
xchg
pop
shl
ds
rcr
dec
int
jns
dec
test
gs
iret
mov
or
push
std
adc
inc
(bad)
dec
gs
jl
loop
mov
mov
inc
popf
rcr
call
loopne
push
push
shr
adc
xchg
je
mov
and
shr
xchg
push
fwait
cwde
popf
xor
loope
mov
mov
mov
retf
cmp
cmp
retf
xor
inc
pushf
daa
dec
push
lahf
jns
jns
mov
stc
outs
out
cmp
jno
mov
adc
imul
pusha
movs
mov
cld
stos
xchg
and
aad
loop
inc
and
addr16
mov
jg
sar
mov
xchg
outs
call
push
adc
cmp
lds
dec
or
(bad)
fstp
xor
pop
fs
lods
gs
nop
mov
stc
dec
jmp
bound
mov
sub
inc
inc
mov
ja
mov
xor
cmp
fimul
cli
pop
jg
sar
repnz
add
rcl
lea
cli
jle
cmps
fcmovnb
dec
mov
add
inc
ins
xchg
test
es
clc
fbld
add
and
add
dec
mov
mov
mov
pushf
xchg
jl
xchg
push
addr16
into
xor
ja
cmp
push
pushf
sub
xchg
mov
pop
jecxz
in
rol
sti
inc
outs
push
popf
dec
repz
lock
mov
sahf
imul
popa
xor
(bad)
xchg
and
bound
mov
xchg
jmp
pop
inc
jmp
dec
hlt
jno
xor
cs
enter
jo
inc
les
sbb
mov
loop
pop
xchg
int3
add
and
pop
sub
adc
imul
lea
arpl
inc
out
fstp
xchg
cmp
inc
adc
je
lahf
jbe
in
rol
mov
jnp
and
imul
sub
fdivr
into
inc
fiadd
or
fs
mov
movs
movs
mov
sub
daa
xor
data16
jmp
and
fistp
movs
dec
push
cmps
mov
sub
push
inc
idiv
mov
lahf
ret
jb
outs
jno
mov
outs
movs
scas
dec
(bad)
xchg
or
lock
sbb
ins
cdq
mov
jae
mov
sbb
rol
inc
sbb
push
cs
or
sbb
cmp
push
push
jns
mov
scas
cmp
loope
mov
push
push
gs
pop
aas
jo
cmp
js
sub
movs
movs
sbb
push
and
mov
xor
inc
jno
test
repz
push
repnz
and
ror
xchg
je
mov
out
fld
dec
imul
push
add
sar
arpl
popa
mov
push
push
mov
(bad)
mov
lahf
lea
enter
jns
fadd
lahf
das
mov
xor
push
pop
popf
movs
mov
in
out
xchg
xor
inc
and
stc
cmp
fsubr
dec
lock
mov
dec
pop
xchg
leave
lods
xor
rol
mov
mov
or
int3
cld
(bad)
push
les
pop
outs
pop
mov
mov
into
push
stc
cli
jno
clc
jb
push
sub
xor
add
adc
ins
mov
or
inc
dec
pop
xchg
scas
xchg
aaa
mov
jle
mov
pop
mov
jmp
pop
in
mov
jecxz
test
jbe
in
(bad)
mov
xor
popf
pop
nop
mov
xor
mov
rcl
ss
dec
mov
sbb
mov
imul
lock
jle
(bad)
xor
push
add
or
arpl
(bad)
adc
mov
mov
jmp
mov
mov
(bad)
neg
inc
push
mov
dec
loop
xchg
fs
stos
pop
repz
mov
cmps
(bad)
shl
ins
push
xchg
(bad)
jmp
and
jmp
mov
or
cmp
cld
sti
jbe
add
ins
inc
jo
cs
ins
mov
mov
inc
into
fidivr
mov
add
inc
mov
cmp
cmps
jl
cmps
push
cmp
adc
and
xchg
aas
lods
clc
jbe
inc
inc
push
scas
pop
cmc
mov
jle
ret
mov
sar
hlt
or
dec
in
mov
jge
xchg
mov
add
hlt
fild
mov
inc
lock
cmp
(bad)
fist
push
ja
cmp
dec
es
cmp
repz
shl
popa
adc
pop
das
ja
cmp
pusha
test
xor
sub
fstp
pushf
pop
jo
fidivr
mov
mov
call
call
scas
mov
jbe
mov
stc
xchg
mov
pop
and
xchg
jo
dec
mov
inc
ds
lahf
mov
xchg
cmp
fsubr
stc
sbb
sbb
pop
xor
or
pop
adc
mov
dec
and
fidiv
jge
jge
jne
mov
fs
fucom
push
loope
jno
stc
in
adc
dec
sti
imul
jb
mov
push
es
rol
mov
cmp
inc
cmp
and
pop
je
inc
test
sub
lahf
sub
sar
lock
adc
sbb
cmp
push
pusha
sbb
and
jns
mov
inc
xchg
xlat
test
and
test
loop
dec
push
mov
xchg
sti
cmp
scas
call
fadd
lahf
fcmovnb
cmp
push
and
jmp
pusha
sahf
test
(bad)
pop
(bad)
ds
and
inc
stos
ins
and
xchg
fist
or
xor
sub
add
dec
dec
sahf
push
ss
adc
stos
mov
pop
xor
(bad)
fsub
loop
pop
sub
push
xor
push
leave
xchg
jns
in
sti
mov
lea
movs
cdq
(bad)
cmp
outs
jae
call
cld
lock
ins
fwait
movs
fs
out
cmp
fisubr
dec
scas
cs
mov
pop
dec
test
pop
les
cli
or
inc
inc
retf
pop
or
and
scas
jge
cmps
inc
arpl
push
les
add
test
aam
loopne
xchg
rol
ss
sahf
call
mov
push
aaa
loope
sbb
cmps
pusha
fdivr
xor
aam
ret
jnp
cmps
adc
jg
cs
mov
push
enter
add
and
jbe
xchg
push
(bad)
xor
dec
push
mov
gs
mov
or
add
add
jmp
cmc
jle
pop
stos
pop
stc
mov
dec
xchg
and
rol
fwait
stos
repz
scas
adc
cli
out
jecxz
push
inc
mov
fdiv
sub
sub
fistp
inc
mov
(bad)
mov
inc
scas
pusha
int3
cli
or
xchg
jno
arpl
iret
pop
pop
jns
pop
cdq
and
(bad)
jg
xlat
dec
outs
xchg
test
fcom
fsub
push
mov
pop
xchg
(bad)
xchg
push
(bad)
mov
and
clc
dec
xchg
mov
cli
or
repz
stc
cmc
stos
into
jecxz
imul
cs
(bad)
js
inc
push
fs
push
sub
xchg
cwde
xchg
cmp
rcr
mov
pop
push
inc
xor
xor
test
imul
inc
movs
or
mov
inc
loope
xor
hlt
addr16
and
xor
les
adc
call
cmps
retf
aas
test
jne
sahf
xchg
aas
aam
mov
cld
jae
mov
scas
cmp
sbb
cld
stc
jle
xor
sbb
jno
cs
inc
cmp
mov
fdivr
sbb
cmp
adc
jne
jl
sbb
(bad)
jbe
movs
or
sbb
add
fcmovnu
mov
fstp
push
mov
js
loop
inc
jmp
mov
repz
cmps
mov
xchg
sti
leave
mov
mov
ror
lods
push
out
into
das
push
or
jmp
pop
pop
pop
lods
pop
ins
push
mov
pop
jns
les
arpl
(bad)
push
fwait
mov
ja
aad
sub
bound
pushaw
pop
add
cmps
mov
aas
and
lock
(bad)
xchg
imul
dec
in
sahf
and
int3
in
jmp
cmp
sbb
(bad)
sbb
xchg
mov
test
fwait
scas
push
loopne
fnsave
sub
cld
icebp
mov
fs
stos
adc
sub
lahf
stos
mov
jge
shl
mov
pop
push
pop
out
pop
jae
sub
xor
ins
jae
push
cmp
cmp
mov
ins
aam
movs
aaa
mov
push
cwde
pop
bound
inc
jmp
inc
aam
or
aam
adc
fnstcw
fwait
inc
sbb
cmc
test
jecxz
outs
jmp
(bad)
adc
call
ja
pusha
mov
cmp
adc
fsub
(bad)
adc
in
jbe
jge
call
adc
pop
fs
jl
movs
adc
sub
cmc
xchg
test
push
jo
sub
scas
cmc
ins
xchg
rol
in
test
mov
mov
mul
add
loop
(bad)
cmp
test
fisubr
pop
loop
fild
and
pop
sbb
push
pushf
inc
sub
mov
(bad)
seta
jbe
push
push
jb
jmp
mov
fldenv
lods
sbb
mov
pop
ins
jmp
out
retf
push
inc
mov
jno
xchg
lock
adc
ins
cld
jmp
and
sti
cmc
sbb
inc
in
mov
imul
stos
xor
into
xchg
call
cmps
xor
fldenv
gs
add
xor
dec
popf
mov
rcl
jmp
popa
inc
int
push
js
sbb
push
enter
inc
ret
into
sub
mov
and
test
ja
pop
add
ficom
mov
dec
xchg
les
or
jmp
sub
jnp
movs
stos
clc
ss
hlt
adc
(bad)
(bad)
mov
mov
scas
or
idiv
leave
jbe
adc
jge
mov
sub
mov
pushf
sub
call
jbe
jp
mov
adc
into
push
mov
call
dec
pop
test
test
xchg
stc
jb
outs
jge
test
mov
fs
in
cmps
dec
retf
mov
xchg
push
loopne
sub
jmp
inc
cmc
rol
mov
sub
xor
cs
stc
(bad)
push
shl
sub
pop
dec
pop
mov
mov
lea
or
test
and
xor
pop
adc
lea
adc
inc
fs
xor
cmp
lods
mov
in
enter
jmp
les
pop
scas
je
mov
xchg
jno
xchg
arpl
std
xlat
test
ins
or
cdq
mov
test
loope
dec
dec
mov
ss
jmp
sbb
cdq
adc
sbb
xchg
lahf
mov
test
pop
cdq
lea
inc
jne
int
sbb
cmp
mov
cmps
sub
mov
dec
hlt
(bad)
popf
dec
mov
jno
add
(bad)
enter
mov
and
fs
cmps
shr
mov
xchg
ds
(bad)
neg
repz
lods
adc
stos
sbb
loop
repz
popf
xor
ss
cmps
sbb
inc
loopne
pop
pop
fwait
cmps
int
and
cmps
sbb
xlat
sub
out
jbe
js
retf
or
mov
mov
test
xor
cmp
mov
jb
retf
call
jbe
xchg
inc
lock
(bad)
aas
in
dec
xchg
xchg
jno
rcl
xchg
bswap
inc
mov
stos
lds
stos
dec
jo
mov
push
and
loope
retf
mov
sahf
fwait
dec
jmp
into
xor
iret
pop
ficomp
dec
and
cs
lahf
ds
test
cld
jl
jl
mov
xor
sub
pop
retf
pop
mov
outs
popf
aad
add
add
rcl
not
inc
lea
sbb
xchg
xlat
cdq
push
out
jno
std
retf
nop
cmp
jl
mov
rcr
push
xchg
fwait
jmp
aas
int3
or
add
idiv
(bad)
push
ret
push
data16
pop
imul
mov
ins
cli
shl
(bad)
sbb
sbb
sub
and
jnp
mov
mov
pop
xchg
int
and
stc
imul
jbe
mov
pop
fwait
ret
iret
nop
pop
and
sti
sbb
outs
fwait
mov
pusha
pusha
xchg
mov
retf
aad
push
lods
push
call
cmp
icebp
fst
pop
fs
push
lahf
inc
or
xchg
call
dec
mov
pop
pop
xor
cmp
add
test
jle
sahf
pop
add
lea
adc
test
mov
data16
outs
fnstcw
jecxz
inc
icebp
and
(bad)
sub
stos
cs
fld
push
test
push
push
or
call
pop
rcr
sbb
adc
fwait
push
mov
ja
out
or
xor
aas
ja
outs
popa
lods
and
lods
dec
xor
lea
xor
cwde
push
xor
inc
stos
pop
in
in
xchg
rcr
(bad)
inc
stos
(bad)
ss
ja
ret
cmp
repnz
fiadd
mov
sub
fcomip
fist
xor
dec
xchg
jne
inc
sub
mov
jmp
dec
aas
iret
ss
aaa
iret
pop
fistp
scas
jnp
mov
mov
xor
out
enter
sti
jne
jp
push
test
pusha
xchg
sar
icebp
aam
sub
pusha
sti
mov
inc
xchg
xchg
lea
fwait
push
and
cli
retf
ret
dec
inc
cmp
pop
push
mov
xchg
call
icebp
or
push
cmp
xor
sub
pushf
pop
sbb
call
mov
mov
jl
popa
push
daa
pushf
and
mov
inc
mov
mov
xchg
sub
ins
mov
cmps
rcr
dec
jg
xchg
mov
icebp
fdiv
inc
dec
mov
pop
aas
dec
fmulp
(bad)
and
push
fcomp
aas
add
mov
rcr
cli
sbb
xor
and
jnp
xor
add
lahf
adc
add
mov
in
fisttp
pushf
adc
jae
dec
cli
mov
jp
iret
in
loope
addr16
ror
cwde
clc
cmp
test
xchg
lods
(bad)
pushf
test
pop
shl
and
shr
pop
enter
pop
cmps
adc
push
mov
jnp
mov
mov
out
nop
cs
or
int
pop
jge
adc
imul
or
mov
fcmovnu
call
bound
fstp
dec
call
repz
push
loope
xchg
jge
xchg
mov
(bad)
mov
lock
dec
jmp
(bad)
xor
cld
leave
push
std
sbb
xor
push
pop
imul
jmp
pop
cmp
jle
adc
arpl
nop
inc
cmp
cmp
mov
fsubr
xchg
push
xor
push
stos
pop
ficomp
cdq
imul
test
jecxz
sbb
sbb
inc
cmc
test
in
mov
pop
(bad)
sub
jbe
xor
pop
outs
je
inc
or
mov
lods
inc
call
push
or
xor
sub
pop
out
je
push
or
or
loop
mov
push
loop
inc
push
xchg
shl
stos
scas
call
xchg
jb
retf
fst
cmps
iret
adc
xchg
mov
(bad)
dec
push
pop
(bad)
dec
pop
xor
shl
inc
jo
inc
cmp
mov
mov
shl
mov
sbb
sbb
or
jge
mov
inc
nop
mov
dec
retf
cmp
ja
dec
mul
xchg
jge
(bad)
mov
mov
mov
cmp
push
xor
dec
cdq
popf
outs
jecxz
fnsave
cs
call
sbb
inc
lea
dec
icebp
xchg
call
out
aas
mov
popa
jo
xor
inc
gs
add
and
jp
stos
dec
and
nop
mov
and
in
xchg
xor
(bad)
les
bound
pop
xchg
shl
pop
std
aam
jne
ins
cmp
jo
popf
xchg
push
xor
fldenv
mov
sti
add
out
push
inc
mov
push
jge
pushf
call
std
sbb
fadd
sbb
das
mov
stos
ins
sbb
xchg
mov
(bad)
xchg
add
add
push
jmp
lock
xchg
out
xrelease
cli
lock
or
mov
ja
mov
push
cmp
in
shl
inc
pop
out
xchg
dec
fisttp
(bad)
and
xchg
adc
lods
inc
ds
mov
mov
sub
push
cli
push
xchg
cmc
je
add
imul
popf
and
cmp
push
sbb
les
push
neg
sub
dec
jmp
sbb
test
repnz
mov
jecxz
xchg
stos
test
cmp
popf
add
(bad)
jmp
cdq
imul
cmp
or
jmp
data16
xor
pop
gs
movs
dec
sub
mov
out
jg
repz
fs
xor
xor
cmp
test
sbb
into
clc
sub
fsub
loop
jne
xchg
dec
repz
mov
nop
push
mov
adc
jns
sti
movs
xchg
sub
lock
mov
cmp
dec
jecxz
fist
add
dec
lods
adc
cmps
push
or
mov
mov
(bad)
std
ds
xchg
push
dec
dec
sub
adc
test
push
mov
stc
or
and
cmps
xchg
sbb
inc
push
pushf
sub
les
es
mov
popf
scas
clc
cmp
outs
ja
mov
test
mov
sub
jne
adc
dec
scas
adc
outs
call
mov
ror
dec
inc
fiadd
xor
and
scas
and
test
and
sub
into
test
sub
addr16
les
div
push
stos
pop
sub
pusha
out
pop
adc
rol
movs
ret
sbb
xchg
enter
in
repnz
lods
inc
xchg
addr16
sbb
add
jle
sbb
adc
mov
stc
addr16
cli
or
and
cmp
pop
mov
stc
sbb
and
rdmsr
add
(bad)
out
xchg
into
ja
js
push
mov
jge
out
mov
fs
std
fild
movs
call
xchg
rol
aam
and
movs
inc
aad
int
or
xlat
push
jmp
jge
push
mov
out
mov
(bad)
jnp
out
push
mov
outs
pop
push
inc
adc
mov
mov
mov
push
mov
inc
lahf
fistp
repnz
push
mov
dec
xchg
fsub
xor
fidiv
popf
cmps
shr
jae
mov
add
repnz
sti
pop
ins
lahf
scas
inc
call
sbb
vrsqrtss
and
dec
and
jge
cmp
cli
cmp
and
pop
sbb
push
mov
stos
jge
mov
mov
and
jp
outs
jbe
mov
cmp
jae
icebp
test
call
test
cmps
into
jmp
js
fimul
pop
into
cmp
sbb
cld
lock
ficomp
jns
arpl
dec
sub
mov
(bad)
cli
sbb
xor
sub
pop
mov
std
imul
add
mov
cs
jae
in
cmps
adc
pop
jns
jo
mov
pop
test
test
cmc
mov
xor
ret
test
inc
mov
pop
ja
mov
sub
cld
fsub
mov
jmp
cmc
fcom
aaa
jo
dec
stos
push
aas
add
retf
jg
inc
test
jne
inc
cmp
xor
push
add
lahf
push
cwde
and
js
fwait
jnp
retf
mov
sahf
bound
push
pop
fxtract
jmp
test
jb
sbb
mov
imul
fadd
mov
jae
mov
adc
jmp
mov
cs
aad
inc
retf
push
dec
mov
dec
pop
push
xchg
lods
sbb
cli
or
pop
pop
iret
pop
push
arpl
jle
push
arpl
gs
xlat
sub
and
in
test
in
lds
push
popf
push
(bad)
mov
dec
mov
mov
or
xlat
stos
and
ins
or
mov
(bad)
test
stos
xor
pop
hlt
add
std
push
shl
jg
mov
ins
aaa
ins
xchg
cmps
mov
sub
iret
outs
jmp
push
sub
sub
jl
push
ss
jle
inc
push
or
nop
mov
sbb
sub
fbstp
cli
pop
and
test
dec
test
xchg
dec
nop
in
das
mov
xchg
mov
sbb
cmp
lock
les
push
push
ds
fcmovu
push
in
pop
push
aas
jle
pop
outs
push
mov
jp
xchg
test
cmp
push
sti
call
dec
add
enter
je
cmc
inc
iret
and
xor
sub
and
rcl
cli
pop
jnp
mov
dec
xchg
retf
int3
mov
aaa
into
shl
aaa
xchg
imul
stos
sbb
in
test
loope
dec
push
jmp
and
push
cli
arpl
mov
jns
movs
dec
es
cmps
mov
sub
fild
call
int
sbb
aaa
out
cmp
imul
popf
xchg
lods
xchg
aaa
test
push
push
mov
mov
shl
neg
xchg
jecxz
xchg
mov
jae
sahf
out
adc
(bad)
inc
jmp
inc
xchg
pop
cli
xor
ja
pop
push
jge
cwde
pop
gs
mov
mov
xchg
ss
sti
outs
jmp
push
dec
gs
xor
mov
rcl
dec
inc
mov
sbb
test
pop
jecxz
mov
(bad)
jg
and
xchg
gs
in
loop
popa
daa
fcmovnb
mov
les
std
(bad)
xlat
sub
mov
retf
ins
xchg
scas
jb
push
repz
fadd
mov
enter
dec
mov
push
movs
enter
sbb
ficomp
add
hlt
inc
add
add
pmuludq
mov
jns
mov
dec
(bad)
aaa
xchg
sti
or
bound
mov
dec
mov
xchg
inc
idiv
std
add
bound
scas
bound
mov
loopne
(bad)
clc
dec
outs
xchg
lahf
inc
ret
jp
cs
sbb
xchg
fmul
ds
inc
mov
jbe
dec
in
mov
call
and
pop
(bad)
and
inc
add
add
imul
add
sbb
cmp
es
fistp
repnz
je
stos
pop
fistp
mov
mov
cmps
and
aad
test
popf
popf
cmc
adc
rcl
test
and
loopne
sar
or
ror
sub
push
mov
mov
fidivr
out
add
clc
jbe
jno
in
add
jae
mov
stos
and
jnp
xchg
imul
test
fst
aad
sbb
sub
test
and
daa
shr
mul
add
ds
xor
test
outs
ins
mov
cmp
sbb
xor
push
or
xchg
xchg
lods
xchg
es
jle
cli
jnp
jmp
iret
aas
cmp
sbb
pop
jo
dec
cmp
xor
add
dec
and
icebp
xchg
sbb
jbe
lea
ret
leave
inc
xchg
rcl
in
xlat
mov
add
test
sbb
mov
cmp
sub
pop
call
mov
or
mov
mov
and
outs
jmp
jns
lds
cmp
adc
arpl
push
cmps
aas
data16
mov
imul
dec
in
mov
cli
outs
fs
xchg
fadd
push
imul
jno
cmc
mov
repz
fucomi
sub
mov
adc
or
frstor
dec
fsubr
daa
or
xlat
(bad)
imul
mov
data16
xchg
fstp
pop
jmp
push
jo
add
and
and
jo
mov
push
call
in
aam
adc
bound
pop
dec
clc
push
loop
xchg
dec
out
push
and
sbb
mov
test
add
dec
pop
lahf
mov
hlt
jb
cmp
sub
push
enter
bound
dec
cmp
lahf
cdq
mov
(bad)
das
mov
jbe
jns
fisttp
pop
jb
lods
sbb
stos
jge
xchg
push
pop
mov
loop
xchg
daa
mov
jno
arpl
lea
loopne
mov
xchg
pusha
fisub
sub
ins
xchg
lods
movs
lds
mov
loop
fst
cmp
mov
in
or
adc
mov
push
out
addr16
cwde
cmp
sbb
mov
shl
xchg
xor
xor
and
das
iret
xor
push
push
mov
inc
mov
mov
inc
and
mov
loop
jp
test
push
scas
xchg
push
xchg
xchg
add
sti
shr
mov
stos
cmp
mov
and
into
cli
xchg
idiv
mov
dec
or
jmp
ss
or
imul
es
xor
mov
rcr
or
pop
inc
fdivr
or
and
imul
ss
cmp
in
stos
mov
(bad)
push
icebp
jnp
lods
dec
xor
loop
popa
es
ror
(bad)
fistp
gs
test
in
shl
dec
ins
fwait
test
out
lock
xor
idiv
jbe
push
sbb
data16
inc
xor
xchg
xchg
lods
pushf
xor
jmp
popa
sbb
cmp
jo
sbb
das
test
enter
push
sub
rdmsr
and
or
jnp
ins
outs
jl
pop
cld
mov
inc
xchg
lahf
fs
mov
nop
adc
mov
sbb
in
fmul
out
fiadd
pop
(bad)
ds
repz
xor
outs
stos
or
mov
mov
fstp
out
xor
sub
xor
das
mov
test
dec
cmp
(bad)
sub
rcr
std
imul
call
pop
lock
ret
les
and
pushf
mov
repnz
(bad)
jg
jmp
inc
jmp
mov
and
int3
retf
icebp
pop
push
sbb
inc
sahf
push
mov
imul
push
cmp
popa
bound
mov
and
push
jns
jg
retf
fwait
mov
pop
(bad)
xchg
adc
jo
fst
repz
ret
cmps
test
into
ins
or
mov
pop
cld
jecxz
lods
inc
xchg
lahf
inc
retf
lock
aaa
jmp
or
gs
push
mov
stc
outs
jmp
pop
and
inc
das
jo
cmp
das
mov
stos
dec
daa
mov
addr16
mov
inc
mov
add
stos
ss
lock
xchg
aam
push
jecxz
jle
out
and
mov
stos
shr
cmp
cmp
test
mov
aaa
xchg
dec
mov
inc
push
nop
icebp
fldenv
int3
cmp
pop
mov
push
aas
dec
mov
pop
scas
inc
shl
test
sbb
add
inc
sub
pop
test
adc
arpl
push
outs
(bad)
in
xchg
adc
pop
test
popf
mov
dec
mov
and
imul
mov
sbb
mov
jl
test
repnz
pop
jmp
inc
push
nop
sti
in
pop
into
adc
dec
mov
sbb
xchg
jne
xchg
mov
sub
int
xchg
into
cmp
aas
stos
pop
in
push
fimul
sbb
cmp
call
fld
jno
sub
xchg
(bad)
dec
sahf
rcl
push
shl
add
jo
add
cld
ror
mov
sub
cli
and
outs
dec
inc
mov
cmp
stos
adc
stc
aas
enter
push
aaa
mov
sbb
cmp
scas
pop
xor
mov
inc
pushf
fistp
fldcw
pop
lods
dec
stc
mov
dec
jmp
xchg
je
in
pop
out
test
imul
cld
scas
retf
dec
ja
mov
pop
aaa
cli
repnz
xchg
mov
push
cs
lock
pop
rol
sbb
stos
pop
arpl
dec
pop
push
mov
call
cli
sub
push
cmp
jb
pushf
sbb
mov
jnp
cmp
not
icebp
jge
inc
popf
pop
test
mov
sub
les
movs
ffree
pop
lods
add
mov
iret
lock
loop
push
scas
pop
sar
cs
dec
int3
(bad)
rcl
cmp
pop
mov
push
popf
push
sub
scas
mov
(bad)
stc
xor
xor
xor
sbb
pusha
mov
mov
outs
repz
in
xchg
movzx
jb
jge
push
sbb
mov
aam
inc
daa
out
icebp
pop
int
mov
popf
dec
jne
leave
adc
iret
cli
mov
ret
lods
stos
inc
out
cmc
sub
push
in
sbb
ds
pop
push
pop
inc
call
ins
jmp
jbe
push
and
cmp
jo
xor
or
sahf
ins
add
xor
not
repnz
push
jbe
jo
(bad)
les
rol
or
fld
mov
push
pop
test
rcl
mov
daa
cs
cli
stc
iret
and
jp
cmp
xchg
add
sbb
jg
neg
mov
bound
daa
mov
add
adc
fst
retf
sahf
xchg
(bad)
sub
enter
in
push
cwde
pop
outs
inc
fild
popf
in
mov
clc
pop
pop
sar
mov
add
mov
add
rcr
xchg
sar
out
cwde
cmp
pop
cld
cmp
das
mov
shl
or
or
mov
mov
mov
cli
ret
sbb
cmp
or
inc
add
add
push
mov
stos
ss
mov
dec
(bad)
mov
(bad)
xchg
sbb
je
jl
inc
sti
xchg
loope
inc
xchg
popa
mov
jmp
clc
das
test
push
mov
scas
adc
(bad)
ds
mov
xor
dec
mov
lods
pop
sar
push
dec
lods
adc
jno
inc
pop
push
sub
cmps
inc
repz
pop
adc
xor
pop
daa
bound
imul
movs
cmp
mov
dec
loopne
dec
sti
data16
jbe
mov
dec
xchg
sar
push
out
(bad)
xchg
jmp
in
mov
stos
js
xor
in
mov
nop
mov
sub
cmp
cli
ret
push
shl
inc
push
and
cmp
jns
les
add
(bad)
pop
dec
(bad)
xor
pop
push
xor
mov
jns
ins
cmp
mov
jmp
in
pop
pop
scas
push
iret
lock
gs
aad
sub
inc
xchg
mov
imul
outs
add
pop
adc
pop
clc
das
sbb
jmp
pop
ja
pop
fst
sbb
dec
sub
nop
add
iret
pop
fdivr
sbb
add
pop
sbb
sub
mov
sub
pushf
adc
into
mov
out
jle
or
(bad)
lahf
push
xchg
call
aam
movs
dec
push
in
test
mov
jg
mov
cmp
daa
(bad)
lock
clc
pop
je
push
fiadd
fs
sub
scas
mov
xchg
xor
ja
or
lock
inc
pop
inc
leave
cmp
imul
cmc
arpl
push
aas
mov
adc
sbb
inc
xchg
xor
jle
cmps
pop
repz
cmps
addr16
jns
out
lea
jecxz
or
ja
xchg
(bad)
gs
(bad)
dec
repnz
(bad)
and
adc
mov
push
popf
cwde
test
ds
inc
call
add
adc
and
mov
lods
ja
pop
pusha
pushf
dec
or
cmp
into
std
(bad)
or
cmc
xchg
xchg
fnstcw
push
jg
test
jle
mov
fs
cld
pusha
dec
clc
jmp
mov
jnp
mov
and
fsincos
dec
pop
xchg
mov
cmp
nop
repnz
jbe
xor
pop
push
dec
icebp
cmps
enter
cld
imul
jl
push
dec
into
xor
pusha
imul
push
mov
cmps
dec
sbb
scas
sbb
sti
pop
shr
cmp
test
fs
loop
fs
jp
repz
xchg
add
sbb
xor
jmp
add
retf
(bad)
aam
pusha
jns
lods
je
pop
jmp
sub
out
xlat
push
in
pop
push
cmp
pop
outs
pop
stc
push
ds
mov
(bad)
jp
ret
jp
cmp
ss
cmp
je
jp
cmps
adc
push
dec
dec
cmp
shl
(bad)
push
(bad)
and
mov
mov
loop
inc
pop
(bad)
add
sbb
lods
jp
fwait
fwait
mov
jecxz
inc
jnp
mov
dec
es
enter
cwde
or
ja
call
jno
mov
in
sar
or
inc
cmp
adc
jnp
scas
addr16
mov
lea
inc
pop
addr16
xchg
and
sbb
fldenv
xchg
dec
into
clc
inc
sub
sti
out
xor
lods
retf
imul
jmp
inc
iret
fmul
lods
aad
call
daa
idiv
mov
pusha
xor
inc
sub
mov
jmp
sbb
fadd
mov
sbb
fcom
pop
xchg
xchg
xchg
scas
xchg
sbb
jb
mov
sti
rol
pushf
stos
mov
sbb
hlt
xchg
rep
mov
pop
pop
adc
cmc
xchg
out
mov
call
icebp
mov
lock
jg
popa
fimul
jne
xchg
inc
sub
movs
stos
xchg
xor
push
call
pop
adc
cmp
sbb
mov
cmp
or
nop
cdq
mov
in
and
sbb
lock
loopne
xchg
shl
adc
call
jmp
add
or
movs
ins
aad
in
inc
add
repz
or
daa
popa
popf
retf
pop
and
or
mov
adc
inc
test
xor
stc
imul
sbb
inc
pop
pop
mov
shl
add
repz
test
arpl
cwde
enter
xor
push
jne
xor
sbb
cld
jmp
add
sbb
mov
mov
cdq
mov
ds
fld
pushf
int
outs
je
ficom
sub
jb
cdq
and
mov
add
sub
push
jl
fcomp
cld
popa
jne
mov
push
mov
xchg
jle
in
div
inc
xchg
std
shr
inc
mov
(bad)
cld
xor
loop
cmps
loop
dec
push
jmp
cmp
loope
loop
cld
and
pop
push
mov
push
cs
mov
(bad)
cdq
pop
sub
outs
sti
aad
movs
jmp
cld
pop
or
ds
push
scas
cmp
mov
cmp
xlat
mov
sub
mov
dec
mov
cwde
jno
xlat
clc
xchg
sbb
sbb
mov
mov
sbb
std
not
aad
arpl
fidivr
scas
jl
dec
jae
inc
mov
ins
inc
mov
ins
mov
cwde
mov
sub
and
daa
fstp
ja
xor
pop
pusha
fisttp
cmp
cmp
sbb
sub
cmps
xchg
add
popa
cmp
dec
call
dec
xchg
mov
xchg
mov
add
fadd
mov
inc
jmp
repnz
push
retf
push
inc
stos
sbb
push
mov
pop
jbe
mov
cwde
add
lods
jbe
xchg
aas
stos
call
mov
and
addr16
mov
dec
mov
mov
and
std
out
xchg
call
imul
repz
sti
(bad)
mov
push
mov
mov
pusha
pusha
mov
stos
pusha
inc
xchg
ret
imul
fwait
lods
dec
xchg
jp
sub
sub
(bad)
xor
pop
cdq
adc
cdq
cmp
cmp
aad
jecxz
or
or
ss
pusha
adc
cmc
cmp
adc
cmp
xchg
mov
jmp
icebp
popa
push
inc
mov
jge
mov
ins
rcl
mov
sbb
adc
xor
loopne
(bad)
xor
fs
pop
rol
cmp
sti
fst
xor
pop
test
dec
and
(bad)
xchg
aas
cmp
jp
(bad)
jl
mov
jge
int
push
shr
sbb
test
jae
mov
jle
sti
xchg
aaa
mov
jo
test
mov
imul
mov
mov
fs
fwait
lods
and
into
pushf
test
mov
hlt
cmp
inc
iret
stc
repz
call
bound
push
cs
movs
retf
xchg
xchg
cmp
pop
repnz
mov
dec
adc
cmp
add
lods
xor
pop
arpl
pop
popf
mov
xor
out
xchg
and
add
fisubr
fwait
stc
outs
xchg
jmp
add
ror
mov
in
mov
xchg
push
add
jmp
loop
dec
push
pop
fdiv
or
push
fild
cmp
sub
sbb
inc
or
mov
cmps
inc
(bad)
daa
sar
jae
inc
mov
sbb
pop
pusha
(bad)
push
sub
xor
aaa
ins
cld
out
xchg
das
(bad)
icebp
add
cmps
jg
xchg
jmp
imul
push
and
(bad)
ins
add
xchg
add
rol
mov
(bad)
pop
repz
cs
jbe
aaa
pop
xor
inc
cmp
pushf
call
stc
aas
mov
inc
cli
xor
ds
stos
push
pop
stos
or
stos
into
test
xchg
in
xor
and
dec
mov
xchg
fs
jns
test
lock
add
cmc
fild
mov
xor
cmp
(bad)
jecxz
popf
and
inc
scas
sub
scas
cmp
mov
mov
in
jmp
ss
adc
add
pop
ficomp
fist
mov
mov
sbb
ret
xor
xlat
jl
push
push
stos
dec
std
rcr
leave
pushf
add
icebp
not
lods
ficom
mov
pop
xchg
mov
adc
call
jnp
mov
sub
push
cmp
cli
dec
cs
mov
mov
test
sub
jno
(bad)
pop
sub
sub
pop
bnd
fimul
mov
in
sbb
mov
adc
add
xchg
sub
ret
(bad)
popa
mov
xchg
jl
repnz
faddp
sbb
idiv
call
xchg
into
or
rcl
repnz
xor
bound
inc
sbb
mov
mov
int3
jmp
adc
xor
dec
push
adc
addr16
mov
push
jmp
and
mov
daa
mov
jo
mov
pop
mov
mov
and
ret
xchg
cmp
jns
lahf
mov
pusha
fwait
xchg
out
and
cmc
(bad)
fcomip
data16
fisubr
cs
sar
shl
sbb
push
dec
pushf
aaa
pop
jge
inc
pop
pop
jmp
push
fistp
or
pop
into
xor
jge
adc
int3
outs
pop
mov
xchg
mov
push
inc
(bad)
idiv
pop
rcl
not
push
stos
sub
call
push
std
loope
das
out
or
mov
push
xchg
retf
loop
add
fidivr
cs
mov
xor
cmp
pop
push
je
cwde
scas
xchg
ds
pop
xchg
aam
push
inc
pop
in
aaa
aas
jo
add
das
mov
retf
dec
ins
stos
js
scas
push
je
mov
push
dec
and
aas
retf
idiv
adc
and
push
and
jb
shl
or
jle
xchg
add
xlat
repnz
out
sbb
pop
sti
xor
sub
in
sbb
inc
(bad)
jnp
dec
sub
mov
add
push
jecxz
addr16
aam
pop
pop
dec
call
push
cwde
and
mov
inc
xchg
mov
cmps
xchg
aaa
mov
jae
scas
jle
sar
mov
call
rcl
xchg
xchg
sbb
shl
fwait
lds
cmps
leave
repz
dec
mov
jb
push
aad
sub
int
lods
pop
out
bound
dec
stos
and
outs
mov
sub
mov
scas
inc
icebp
lea
(bad)
into
je
jne
in
pop
adc
and
pop
xor
or
mov
nop
hlt
sbb
add
pop
jecxz
cmc
jge
stos
or
xor
les
mov
pop
xchg
add
fsub
dec
outs
lods
test
in
push
iret
cmp
ss
test
push
cli
ds
or
adc
js
push
cmp
lea
aad
(bad)
mov
jbe
jae
in
or
inc
mov
test
xor
fwait
cmp
jb
les
icebp
adc
repz
xchg
dec
rol
sbb
ins
mov
add
mov
push
pandn
xor
mov
push
(bad)
or
(bad)
loopne
call
stos
or
pop
ins
lahf
mov
stos
sub
fdivr
std
sbb
xor
and
daa
mov
mov
jae
mov
dec
in
fbstp
shr
jp
je
mov
xchg
addr16
xchg
add
(bad)
rol
mov
call
loopne
mov
adc
lock
div
cmc
mov
(bad)
ds
clc
icebp
push
call
test
ins
loopne
cmp
retf
fst
add
icebp
inc
or
in
or
sub
ret
mov
pop
popf
retf
aas
cmp
call
cmc
sbb
jno
mov
jge
retf
nop
in
adc
fsub
pushf
pushf
jmp
xchg
xor
fld
pop
imul
pop
cmp
fidiv
or
test
je
sub
lods
mov
aad
jmp
je
int
sub
sbb
add
xchg
jnp
xchg
cmp
pop
add
out
lahf
ret
imul
lock
test
nop
popa
and
fisttp
xchg
inc
test
fdiv
mov
ins
int
hlt
ds
rcl
idiv
cmp
imul
inc
and
mov
fbld
add
add
and
lea
sahf
add
push
pusha
lahf
pop
inc
cmps
xor
into
mov
adc
xor
shr
aas
test
dec
dec
cmp
enter
xchg
pusha
jmp
rol
cwde
(bad)
cmp
jbe
xchg
mov
div
fwait
cwde
dec
out
jmp
sub
fucomp
shr
shl
sub
cs
mov
ins
cwde
mov
mov
cwde
cli
or
or
inc
ds
add
fld
test
aaa
mov
cwde
mov
outs
out
xchg
cmp
sti
jbe
inc
inc
push
scas
pop
(bad)
scas
xlat
jno
int
fst
xchg
add
pop
xchg
pop
ja
mov
lock
repz
push
cwde
pop
je
daa
cs
in
mov
iret
pop
push
sbb
inc
(bad)
mov
fdivr
cmc
and
sub
pop
sbb
sub
pop
fnstsw
call
xchg
cmps
sbb
and
in
into
popf
add
jl
and
pop
shl
cdq
je
xchg
pop
sub
aam
shr
(bad)
or
hlt
add
fnstsw
xchg
icebp
pop
gs
xor
push
jmp
sub
mov
lods
inc
ret
pop
cmp
sbb
push
or
mov
test
fist
in
cli
sbb
add
xor
add
xor
jp
mov
lods
push
pop
fwait
mov
pop
out
enter
enter
jp
test
(bad)
mov
call
dec
enter
xchg
jp
mov
dec
sbb
add
test
dec
in
sbb
adc
mov
and
ss
dec
fiadd
je
add
mov
and
outs
rcr
stos
aad
pusha
jp
lds
sub
and
pop
rcr
cmp
das
pop
sahf
mov
or
xor
retf
shl
(bad)
jl
fst
mov
adc
fadd
dec
jge
mov
sub
sub
xor
sub
call
stos
pop
ins
push
std
push
push
pop
(bad)
mov
lods
cmp
jbe
clc
jo
(bad)
add
inc
mov
adc
sbb
dec
xor
test
fcom
mov
stc
outs
add
scas
dec
cmc
cmps
lock
shl
rep
lea
ins
xchg
(bad)
scas
ret
adc
popa
cmp
jnp
mov
inc
loopne
iret
ds
rcr
imul
dec
test
jge
sbb
lahf
sbb
sti
jg
pop
xor
adc
jbe
adc
inc
jo
push
aaa
fnstsw
push
test
test
inc
dec
and
in
sahf
inc
(bad)
cmc
add
lds
(bad)
mov
cdq
push
out
xchg
jns
not
mov
inc
mov
(bad)
aad
mov
test
in
loop
push
dec
(bad)
cmp
fld
retf
or
ins
pop
cld
inc
add
fwait
(bad)
aaa
fst
jns
cmc
dec
adc
cmp
push
or
pop
mov
retf
outs
push
sbb
pop
pop
leave
fist
lock
inc
xchg
xlat
dec
call
daa
(bad)
cmc
sbb
rcr
xchg
inc
ja
mov
adc
repz
xchg
(bad)
fsub
mov
xor
sub
clc
iret
inc
jmp
dec
inc
(bad)
push
call
std
add
mov
and
stc
push
movs
cmp
xchg
cmp
fstp
cli
push
jno
lods
dec
idiv
sub
mov
loope
xchg
cmp
call
repz
jge
cdq
test
int
(bad)
ds
cld
fild
xor
jne
cmp
ins
ds
mov
mov
xchg
cld
or
xor
sub
pushw
adc
imul
inc
lods
or
call
daa
dec
leave
aad
xor
mul
push
sbb
jae
mov
dec
movs
rol
xchg
mov
mov
pop
jg
test
mov
sti
push
mov
int
cs
leave
jbe
and
pop
mov
inc
cs
mov
stos
xor
(bad)
jl
neg
or
pop
mov
addr16
pop
arpl
dec
mov
mov
and
cmp
push
jl
push
ror
xchg
jb
in
push
cli
stos
xchg
xchg
pusha
cli
xchg
je
test
ds
mov
test
outs
retf
dec
daa
dec
enter
retf
push
lods
sbb
mov
mov
cmc
imul
aas
mov
xor
push
sbb
sub
arpl
pop
repz
push
(bad)
stc
add
fistp
mov
xchg
push
test
adc
les
loope
test
pop
(bad)
stc
movs
std
(bad)
scas
inc
jmp
(bad)
addr16
shl
popa
xchg
dec
push
jb
call
jmp
arpl
xor
adc
test
dec
fs
jb
cmp
das
and
aaa
mov
add
retf
mov
in
out
arpl
rol
scas
jmp
mov
aam
xor
mov
aad
fidivr
pop
dec
iret
test
pop
lds
jbe
jg
sbb
and
inc
cs
mov
clc
ja
cli
or
xor
inc
add
sub
jb
jl
scas
jno
mov
sti
push
inc
dec
cmp
in
xchg
adc
mov
sbb
jbe
dec
popf
xchg
loopne
test
lahf
dec
mul
hlt
sbb
lds
mov
repz
(bad)
clc
loop
dec
adc
ja
dec
sub
ret
dec
in
jo
dec
fsubr
mov
in
xchg
mov
push
out
jo
clc
jl
jge
mov
sub
sbb
sub
frstor
mov
loope
pop
or
stos
xchg
inc
enter
sbb
repz
inc
lahf
into
call
add
stos
popf
jbe
inc
in
movs
fdiv
mov
shl
in
repz
test
push
jecxz
fdiv
cmp
pop
lock
cmp
mov
cmps
xchg
lea
test
mov
jbe
inc
inc
ret
dec
cmp
add
push
mov
fcomp
arpl
sbb
and
mov
xchg
push
mov
inc
xchg
les
or
shl
mov
mov
sub
mov
adc
(bad)
xchg
repz
mov
pop
fnsave
cs
(bad)
idiv
xor
push
inc
mov
pusha
mov
xchg
stos
cmp
into
and
sbb
sbb
add
mov
addr16
mov
or
add
fild
fstp
inc
mov
pop
xchg
aad
jne
lahf
pop
xor
ret
int
stos
lahf
stos
shr
fiadd
mov
xchg
fdivr
jmp
dec
ins
mov
pusha
xchg
push
stos
sub
cmp
and
cmp
sub
xchg
les
push
retf
(bad)
in
jbe
add
mov
pop
jmp
lods
push
sar
push
push
dec
call
lock
bound
in
repz
test
and
add
cmc
les
jmp
jne
cdq
xchg
cmp
pushf
xchg
aam
ds
mov
or
xor
(bad)
fistp
ret
dec
sbb
and
mov
mov
ficom
jno
or
imul
add
jb
sahf
push
sbb
cmps
sbb
sar
cmp
sbb
aam
jecxz
xchg
retf
and
(bad)
mov
cli
mov
pop
mov
hlt
adc
mov
xchg
fcmovu
push
in
mov
cmp
(bad)
fbld
push
pushf
sub
clc
aaa
outs
mov
pop
jmp
mov
jb
jb
mov
add
addr16
(bad)
jge
retf
mov
fs
xchg
xor
add
fstp
mov
cmps
jne
xchg
pop
lds
or
jg
mov
adc
stc
cli
mov
in
pop
cdq
lods
fs
fist
push
sbb
mov
fs
pop
and
ror
xor
arpl
jmp
es
push
js
sbb
pop
xchg
pop
fnstsw
mov
data16
pop
out
jmp
dec
test
push
call
sar
sub
les
cwde
aad
xchg
jb
call
retf
repz
inc
jmp
push
add
sti
daa
fs
test
pop
clc
cs
jnp
mov
ins
stc
lea
xchg
cld
jbe
jae
sti
cmp
inc
and
or
paddsw
(bad)
jg
mov
jne
stos
test
retf
aam
adc
jbe
fidivr
mov
lahf
jbe
cld
pop
dec
int3
in
add
push
mov
jo
test
adc
out
aad
shl
pop
sbb
mov
pop
adc
hlt
jmp
ja
test
sbb
jno
xchg
pusha
(bad)
nop
or
xor
adc
sub
adc
cmps
push
sub
or
or
out
enter
outs
jno
test
push
xchg
cdq
jno
in
xlat
xchg
jecxz
xchg
mov
push
mov
fcomip
sbb
movs
jb
pop
(bad)
xor
sbb
(bad)
ror
or
push
mov
mov
mov
int3
retf
xlat
jne
push
dec
retf
add
out
or
fidivr
xchg
or
(bad)
sar
xor
aam
adc
add
fidiv
mov
pop
test
jns
cli
call
mov
add
push
sbb
stc
xchg
std
enter
mov
dec
in
push
add
push
ret
push
jge
jno
jo
gs
leave
xor
cli
push
in
or
xor
and
daa
fwait
sub
jnp
test
lods
outs
scas
mov
aaa
xor
inc
sti
push
loopne
pop
push
mov
jl
mov
inc
pop
call
dec
movs
xchg
inc
mov
into
pushf
imul
mov
push
daa
sub
cld
and
call
push
in
(bad)
shl
daa
jmp
(bad)
sar
lock
aaa
leave
aas
and
add
jne
outs
push
or
popf
mov
xor
push
dec
leave
fist
fisubr
inc
(bad)
arpl
(bad)
fdivr
out
and
push
add
out
or
js
mov
add
ds
cmp
into
xor
loopne
retf
ss
fcmovnu
pop
lds
sbb
inc
fcomp
ins
inc
inc
push
adc
fild
clc
jbe
push
and
cmp
pop
stos
sub
or
xlat
mov
push
dec
imul
xchg
aas
mov
push
mov
inc
xchg
les
and
rcl
jmp
lahf
mov
cld
neg
lds
xchg
mov
cmp
retf
callw
or
imul
mov
mov
fisubr
lea
mov
aas
test
sub
sbb
push
mov
xchg
cmp
mul
cmp
jnp
mov
cmps
loopne
pushf
shl
and
sti
mov
fwait
stos
aad
mov
mov
cli
repnz
mov
test
fld
push
jp
aaa
adc
mov
mov
mov
iret
cli
or
pop
sub
xor
cmp
pop
fistp
pop
lods
dec
inc
mov
jae
scas
loope
inc
and
fcom
fld
and
pop
mov
loope
fdivrp
add
test
mov
dec
jne
test
ds
loope
stos
into
cmp
pop
out
cmove
stc
lods
push
jmp
gs
inc
and
(bad)
mov
cs
out
(bad)
sbb
es
sub
xor
pop
nop
and
imul
aas
mov
add
and
icebp
xchg
adc
inc
jl
ja
mov
dec
mov
xchg
fs
rep
mov
ins
or
arpl
cwde
cmp
out
leave
cli
pop
adc
aad
jecxz
jmp
mov
jl
test
imul
jnp
jns
stos
(bad)
ds
sbb
int3
push
xchg
jne
add
int
pop
jnp
adc
inc
inc
mov
push
mov
and
les
sbb
stos
push
jmp
loopne
xchg
les
and
sti
std
je
data16
popa
test
fdiv
in
loope
ins
fwait
sub
shl
lock
ficomp
and
sbb
clc
cs
dec
out
mov
push
sub
fs
cld
adc
neg
push
imul
imul
test
sbb
cmps
mov
xor
xor
leave
jb
ins
jle
(bad)
mov
js
in
loopne
loope
inc
cs
lock
ins
mov
test
popa
mov
xchg
daa
sti
fild
mov
test
push
int
ret
xor
pop
jnp
movs
sub
xchg
into
iret
xor
int
mov
fs
sub
imul
mov
mov
mov
je
cmp
out
xchg
aaa
test
(bad)
(bad)
dec
inc
jno
pusha
(bad)
mov
and
or
std
shl
mov
ja
mov
js
retf
stc
neg
cld
push
ins
fwait
mov
jecxz
std
and
shl
sti
and
pop
xchg
cmp
pusha
xchg
ins
or
stos
sahf
xor
stc
inc
in
sub
js
mov
sbb
pop
rcr
retf
popf
mov
and
test
inc
icebp
dec
dec
jb
and
test
inc
cmps
sar
out
(bad)
jmp
out
shr
mov
jmp
xchg
call
ss
fidiv
pop
jl
or
mov
mov
mov
test
or
inc
mov
arpl
inc
jne
outs
xor
cmps
pop
es
cmp
jg
test
shl
push
repz
jns
not
mov
fistp
mov
jl
lea
fsubr
test
xor
jmp
(bad)
adc
push
fsubr
mul
add
mov
js
dec
test
inc
mov
(bad)
mov
jp
jno
(bad)
pop
fs
add
sub
pop
cmps
jle
mov
dec
mov
lea
xor
and
test
aas
xchg
fnstcw
push
rol
loopne
and
push
push
enter
jmp
mov
pop
add
mov
loop
in
out
dec
mov
adc
push
in
rcr
es
jnp
dec
scas
pop
jge
mov
out
(bad)
mov
pop
stc
call
adc
sub
aas
into
aaa
(bad)
imul
xor
pop
and
xchg
xchg
add
lea
movs
(bad)
inc
mov
call
sub
ret
ins
xchg
(bad)
mov
das
test
pusha
mov
xchg
adc
std
loop
not
dec
jl
call
cmp
ror
jle
push
jae
and
data16
mov
jnp
lds
sbb
out
adc
mov
xor
(bad)
outs
mov
adc
mov
adc
dec
(bad)
icebp
stos
pop
je
push
rol
sti
arpl
loope
push
sti
xlat
mov
mov
sub
dec
push
pop
xlat
or
ds
out
mov
pop
pop
les
popa
js
xor
cdq
xchg
cmp
sbb
mov
or
mov
ds
sbb
sbb
fmul
mov
popf
push
and
scas
xchg
push
mov
push
aam
pop
sub
rol
test
fs
in
sti
mov
shr
mov
push
in
(bad)
jmp
jns
inc
jl
mov
jmp
repnz
mov
sbb
push
lea
jns
mov
lock
out
lock
xor
pop
sub
xor
cmp
ja
outs
push
(bad)
retf
mul
ins
xlat
shl
inc
test
(bad)
fld
pusha
mov
jmp
fmul
(bad)
xchg
push
out
jg
(bad)
fild
scas
lds
cmp
mov
adc
fld
nop
movs
push
jecxz
xlat
es
dec
jecxz
repz
xor
inc
test
addr16
push
mov
scas
mov
lds
push
adc
cmp
sub
mov
xchg
mov
rcr
aaa
lods
aad
fistp
jbe
sub
call
add
int
cmps
mul
je
movs
xchg
adc
std
mov
out
lahf
inc
out
in
ss
rcl
jle
adc
and
inc
add
mov
mov
fisttp
lea
mov
push
fs
loop
ins
jo
sbb
pusha
lods
pop
sbb
mov
pop
out
fistp
icebp
pop
sub
mov
inc
in
mov
xor
test
mov
push
mov
jmp
sahf
mov
adc
xor
jecxz
jne
jge
addr16
xor
bound
sub
jle
stc
add
and
xor
jo
aas
mov
mov
(bad)
test
inc
(bad)
mov
cs
pop
adc
(bad)
rep
or
push
lock
mov
(bad)
retf
addr16
mov
aas
stc
loop
aad
pop
push
cmc
ret
push
xchg
pop
(bad)
ds
sti
(bad)
xor
popa
movs
jne
cmp
gs
lahf
mov
mov
loop
jnp
fstp
jb
fldcw
das
js
sbb
inc
jbe
add
bound
xor
fcom
test
sahf
or
pop
dec
xchg
les
in
shr
test
jno
rol
shl
jp
nop
movs
inc
call
sti
sti
jbe
and
bound
sub
icebp
mov
mov
in
or
xor
xor
gs
jae
mov
pop
call
out
xlat
test
enter
outs
arpl
mov
dec
xchg
repnz
push
loope
popa
and
ror
(bad)
int
popf
jbe
loopne
and
std
xchg
(bad)
loopne
jnp
cmp
push
repz
shl
lods
and
cmp
dec
movs
or
mov
stos
lods
mov
jmp
jbe
lds
sbb
sub
pusha
mov
outs
mov
mov
inc
or
aad
add
inc
push
test
fstp
xchg
dec
loope
jno
jmp
xchg
adc
pop
movs
stc
cwde
stos
push
(bad)
pop
jle
xchg
stc
retf
pusha
loop
inc
ret
jp
xor
repz
pop
jo
addr16
cs
ins
xchg
mov
ret
add
rcr
jg
stc
pop
xor
or
pusha
mov
sub
pushf
sbb
xor
push
lods
clc
push
jmp
jno
fld
mov
leave
cmp
jmp
cmp
dec
test
fsubr
mov
mov
and
mov
cmp
dec
stc
int3
fild
cmp
add
mov
inc
lea
push
jmp
dec
jmp
jle
push
les
push
adc
xor
push
cmps
sub
ins
inc
dec
jge
out
loope
xchg
stc
gs
inc
pop
daa
fstp
mov
push
cwde
int3
xchg
inc
xlat
xor
mov
test
je
mov
fild
mov
inc
jmp
fsubr
cmp
jl
ss
sub
jno
and
mov
mov
jmp
jbe
popa
xor
push
xor
add
js
mov
push
cmps
cwde
fwait
sbb
and
out
xchg
xor
jo
movs
jp
mov
dec
mov
cmps
adc
xlat
rcl
(bad)
pushf
mov
sub
mov
add
mov
push
mov
inc
jecxz
stos
cmp
dec
shl
rcl
sub
sub
or
xchg
dec
inc
pop
mov
mov
lahf
(bad)
or
ds
xor
imul
add
dec
pusha
mov
outs
popf
test
xlat
xlat
xchg
pop
mov
jl
xchg
mov
pop
mov
xchg
pop
sub
movs
test
ins
cmp
jo
shr
in
les
sbb
fnsave
sbb
pop
call
popa
jnp
inc
add
mov
xchg
push
sub
inc
call
jne
je
mov
add
pop
arpl
pop
fwait
movs
mov
in
xchg
adc
push
and
push
loopne
cmp
lods
add
fs
mov
pop
je
xchg
cmps
cmp
mov
mov
out
sbb
aam
pop
cs
rcl
daa
pop
push
pop
xchg
jbe
fwait
inc
sub
cdq
les
inc
jecxz
cmp
push
sbb
adc
outs
ins
test
or
dec
push
xchg
sbb
std
mov
mov
jb
mov
dec
xchg
mov
dec
loope
jb
lock
mov
mov
inc
inc
mov
loope
retf
dec
mov
neg
add
(bad)
cld
lods
inc
lock
dec
call
push
push
push
leave
inc
in
shl
retf
jno
in
sub
add
pop
cmps
data16
retf
xchg
ret
xor
cld
sbb
pop
js
test
js
(bad)
mov
sub
(bad)
mov
aad
xchg
inc
jo
xchg
mov
mov
inc
daa
add
out
adc
pop
jg
mov
jne
mov
fbld
add
and
sbb
sub
mov
arpl
and
mov
xor
int
aam
inc
lods
pop
fstp
mov
daa
(bad)
push
jmp
mov
test
xor
jecxz
dec
fwait
aam
lds
adc
sbb
cld
rcl
sbb
aas
stos
add
jnp
inc
add
mov
outs
call
jne
pop
cmp
pop
sub
sub
add
outs
pop
sahf
pop
adc
or
and
seta
jb
inc
sbb
dec
shl
mov
rol
mov
loopne
call
and
in
(bad)
sub
ins
jmp
in
push
stc
inc
jb
inc
test
cmp
cs
dec
mov
imul
sbb
in
outs
add
add
arpl
stos
push
and
sub
packsswb
not
pop
sbb
push
out
clc
aas
cdq
aam
popa
retf
mov
test
mov
je
mov
(bad)
stos
in
out
push
pop
std
adc
xor
shl
pop
adc
jg
mov
mov
call
outs
inc
dec
xor
pop
arpl
jp
test
and
lar
xor
icebp
mov
icebp
push
repz
dec
cmps
(bad)
lahf
inc
enter
fcmovnbe
icebp
aaa
in
test
addr16
xchg
xor
icebp
or
dec
imul
sbb
stc
shl
inc
(bad)
aas
jo
bound
sbb
mov
sti
dec
pushf
xchg
jl
shl
push
aaa
loop
or
cmp
jb
imul
movs
sub
mov
inc
xor
ins
retf
xor
pop
je
sahf
push
(bad)
scas
clc
jg
(bad)
lahf
dec
std
mov
adc
mov
fxch
cmp
mov
(bad)
mov
mov
int
push
inc
int
out
inc
icebp
inc
push
pusha
xor
aaa
sub
xchg
fwait
mov
cli
clc
and
cmp
pop
push
jne
sbb
addr16
push
mov
mov
(bad)
adc
and
pop
mov
gs
mov
sar
mov
out
mov
pop
lea
mov
pop
jle
nop
mov
mov
ror
aam
out
clc
xor
xor
and
aaa
push
push
cmp
lea
cmc
sbb
fdiv
xchg
bound
sub
aaa
xor
add
push
iret
push
fadd
sahf
ja
xchg
aas
jae
xchg
add
cli
xchg
aaa
mov
jb
imul
ss
mov
dec
mov
mov
in
hlt
hlt
ja
push
aas
mov
std
cmp
shl
dec
fs
sar
mov
out
push
xor
jb
bound
jns
mov
fistp
cli
js
cli
jae
jns
into
and
daa
xor
cmp
scas
jno
cmps
sub
imul
mov
cld
dec
pop
and
pop
cli
lods
lock
loope
loopne
in
sahf
or
mov
mov
in
(bad)
or
mov
xor
repnz
mov
adc
ds
stc
push
out
imul
jo
dec
sub
scas
cmp
aas
mov
jae
inc
xor
xor
sub
test
xor
xchg
imul
xor
hlt
jb
bound
mov
dec
xchg
idiv
es
lock
sbb
gs
mov
(bad)
adc
sbb
loopne
std
add
(bad)
inc
dec
cdq
mov
das
pop
cmp
(bad)
fist
xor
or
mov
outs
test
cmps
pop
out
jl
fnstsw
je
leave
sub
push
push
pop
mov
mov
mov
sbb
mov
cmp
dec
(bad)
stc
mov
dec
pop
test
pusha
xchg
ret
in
jae
in
fld
stos
les
jl
xchg
test
loop
mov
mov
adc
jmp
ss
stos
sub
inc
clc
cs
jne
mov
iret
cmp
sti
pop
call
pop
push
pop
int
sbb
lods
and
mov
cmps
cmp
mov
(bad)
mov
neg
pop
mov
inc
jmp
sahf
pop
add
rol
pushf
ret
pusha
fs
mov
dec
xchg
xchg
lea
jmp
and
jbe
xor
dec
test
dec
push
pop
mov
int
(bad)
out
adc
jmp
jbe
out
or
sub
pop
out
inc
je
push
aas
movs
aaa
pop
xchg
movs
(bad)
sub
cmc
fwait
pop
xchg
fnstcw
ins
jbe
cmps
pop
cmp
fdiv
test
add
mov
mov
sbb
outs
(bad)
jle
push
and
cmp
pop
ret
adc
js
mov
(bad)
lea
pop
out
int
or
es
xor
pop
mov
inc
jns
or
cmps
sub
and
(bad)
xchg
aas
iret
jmp
push
mov
inc
test
mov
in
inc
add
icebp
mov
fild
mov
jmp
sahf
mov
xor
test
dec
jecxz
in
adc
sub
(bad)
xlat
pop
lds
pop
lahf
pop
jle
sti
jae
jge
mov
iret
pop
enter
mov
bound
inc
sub
sub
jne
sbb
outs
sbb
xchg
push
dec
jmp
xchg
add
jns
and
dec
xchg
shl
(bad)
mov
mov
pop
mov
test
fcom
sub
loopne
pop
sbb
pop
ins
push
pushf
inc
cmp
les
js
dec
bound
inc
or
sub
mov
ja
xchg
iret
fst
aam
inc
pop
fdiv
(bad)
xchg
in
xchg
pusha
fsub
jge
repz
push
lock
mov
sbb
daa
rcr
mov
mov
je
push
mov
inc
das
and
dec
icebp
xor
pop
inc
bound
mov
fild
hlt
arpl
sbb
xor
inc
add
cmp
jg
mov
jae
xlat
mov
rol
pop
jnp
mov
pop
xchg
ret
xchg
jl
xchg
jae
test
xchg
lahf
mov
test
retf
mov
(bad)
lahf
inc
retf
sub
loop
bnd
inc
imul
mov
push
xchg
fcomp
jmp
jbe
daa
cli
cmp
sub
mov
pop
xchg
xlat
mov
dec
or
out
sbb
jl
dec
sti
sahf
sub
inc
adc
(bad)
icebp
aaa
jmp
ret
ins
jnp
fimul
nop
rcr
dec
(bad)
jmp
dec
shr
pop
or
stc
shl
push
jge
scas
pop
gs
mov
or
mov
jmp
fwait
icebp
jnp
je
call
arpl
arpl
addr16
mov
push
xchg
mov
add
or
iret
mov
out
bound
jmp
in
mov
loopne
(bad)
mov
cmc
sbb
inc
xchg
lods
mov
dec
mov
pop
adc
inc
jmp
inc
or
test
jmp
inc
inc
test
imul
in
out
and
aas
ficomp
pop
jnp
arpl
ins
jae
jge
mov
bound
dec
aas
fcmovu
xchg
xchg
repnz
sbb
cld
mov
and
mov
mov
pop
pop
loopne
xchg
cmp
fnclex
test
jmp
fs
cdq
inc
jmp
es
fist
aas
pop
cmp
pop
ins
push
mov
outs
xchg
mov
mov
push
jno
out
sbb
gs
pop
sbb
cmp
dec
arpl
jg
aad
outs
daa
or
retf
mov
in
push
and
and
ret
mov
jmp
pop
xchg
add
jmp
xchg
mov
cmp
rol
data16
push
imul
cs
cld
repz
and
push
cmps
aaa
sub
mov
mov
jmp
ja
in
push
pop
or
pop
mov
mov
cmps
cmp
lea
in
rol
jmp
jg
mov
dec
xchg
loop
inc
out
inc
daa
retf
aam
add
ins
mov
imul
stos
adc
in
cli
cmps
stos
xchg
mov
pop
idiv
push
daa
out
clc
std
and
cmp
xchg
ins
lahf
xchg
xchg
retf
ror
and
pop
je
or
cmp
jo
imul
jo
push
cmp
bound
mov
fcomp
and
dec
xchg
retf
xchg
jmp
les
lods
loope
test
popf
test
mov
xchg
or
jmp
or
xlat
cmc
inc
adc
dec
movs
sbb
mov
pop
push
in
mov
mov
or
jge
(bad)
call
xor
das
or
push
push
mov
cmp
sub
cmp
stc
call
cwde
push
jnp
mov
inc
mov
adc
ret
xchg
adc
jl
cmps
mov
addr16
mov
daa
sar
repz
inc
jl
test
jecxz
jmp
sub
xlat
(bad)
fcomp
aaa
jbe
gs
dec
es
pushf
mov
xlat
inc
jmp
emms
inc
sbb
and
xchg
add
fnstenv
mov
jae
mov
adc
or
jmp
inc
in
je
stos
pop
in
sahf
inc
mov
cld
add
repz
mov
jecxz
or
jne
mov
sbb
ffreep
sbb
jno
xchg
mov
fiadd
cmp
(bad)
fst
and
xor
mov
mov
fdivr
cli
or
std
add
or
mov
mov
cmp
xchg
(bad)
adc
jae
cmps
loopne
sahf
sti
pop
out
outs
and
aas
xchg
rcr
repz
cmp
jl
and
je
test
in
fiadd
cmp
ror
pusha
add
sbb
and
mov
mov
enter
into
jb
pop
es
push
sub
pop
jmp
cmp
and
mov
jle
jmp
jne
es
jb
popf
in
xchg
frstor
adc
sbb
(bad)
sbb
test
in
(bad)
ins
fwait
mov
cmp
fidivr
or
sbb
mov
jle
movs
xchg
leave
add
fst
in
cmc
jo
(bad)
pop
dec
pop
xor
dec
aaa
pop
add
sbb
data16
cmp
ds
dec
loope
cwde
daa
mov
jbe
mov
mov
pop
xchg
repnz
retf
cdq
jb
std
xlat
mov
lea
mov
jne
mov
cmc
mov
mov
je
jp
xor
sbb
stc
int
sti
ds
sub
or
fwait
aaa
cs
stos
mov
push
loop
jno
mov
pop
inc
(bad)
and
jg
adc
pop
arpl
mov
add
ins
(bad)
aad
aaa
mov
jb
mov
inc
in
xchg
push
fcmovb
mov
loope
scas
stos
cmps
mov
add
adc
add
out
xchg
hlt
sub
push
cs
xchg
fdiv
daa
bound
dec
xchg
daa
jne
mov
jp
mov
mov
cli
iret
aas
test
xor
pop
sub
adc
ins
(bad)
sar
movs
cmp
xlat
scas
getsec
and
retf
int3
out
pop
les
push
xchg
mov
outs
cwde
loopne
dec
in
add
retf
mov
lock
mov
rcr
adc
aad
inc
ins
xchg
xchg
lock
jmp
sub
sbb
xor
popa
xchg
mov
mov
(bad)
fnstsw
mov
inc
aad
sbb
add
sahf
ss
pop
frstor
mov
inc
lea
jle
call
gs
adc
jge
push
iret
lock
xchg
xchg
jne
nop
or
in
xor
mov
jns
movs
xchg
xor
xlat
les
mov
in
xor
sbb
in
iret
pop
fistp
pop
pop
cmp
test
es
icebp
xchg
mov
js
mov
clc
pop
push
jle
fild
or
sub
addr16
mov
inc
fwait
mov
pop
sbb
dec
in
test
jne
fs
push
xchg
enter
test
test
(bad)
lods
retf
sbb
lea
pop
shl
test
repz
js
mov
push
sub
shl
push
fcom
push
or
push
cs
mov
pop
in
sbb
adc
aaa
xor
addr16
mov
stos
jl
scas
dec
ja
add
call
jnp
outs
jbe
mov
xor
xchg
jnp
lock
mov
pop
inc
test
icebp
xchg
stos
loop
dec
mov
xor
div
jecxz
call
mov
push
lds
out
das
mov
adc
cmp
push
add
adc
mov
pop
call
jmp
and
xchg
scas
loopne
loopne
xchg
(bad)
call
shl
mov
in
mov
hlt
adc
call
inc
lods
scas
push
jecxz
jmp
in
lods
pop
in
cmp
sbb
mov
dec
xchg
cmps
xchg
stos
(bad)
cmc
sbb
cli
sbb
inc
mov
push
mov
outs
bound
push
popf
mov
pop
aaa
or
into
out
mov
jb
push
repz
in
jg
(bad)
rol
mov
pusha
bound
(bad)
out
(bad)
pop
ins
mov
call
into
ficom
pusha
and
jno
push
cdq
inc
sub
mov
push
fsub
cli
or
ficom
or
sub
mov
xor
xor
cwde
xchg
xor
jl
int3
call
add
push
aam
lock
loope
jbe
mov
sbb
ins
or
sbb
shl
test
jecxz
add
mov
or
neg
iret
inc
nop
push
je
xor
cs
pop
fwait
inc
pop
pusha
lahf
xchg
scas
test
in
jl
jmp
int
sbb
and
das
mov
mov
jle
cmp
and
pop
xchg
enter
stc
pushfw
outs
jno
test
lock
cmps
rcr
fcomi
xchg
xor
dec
and
ja
mov
push
aaa
cld
adc
lods
inc
(bad)
pop
out
sub
addr16
jne
dec
call
push
icebp
mov
scas
and
fild
out
sbb
xor
or
jo
add
cmp
cmps
dec
sbb
or
repz
(bad)
xchg
push
repnz
push
lods
pop
(bad)
mov
and
rcl
psubusb
mov
in
test
jbe
adc
test
ficom
xchg
call
ds
lods
pop
cld
cmp
push
inc
sbb
popa
lahf
aaa
sub
mov
lock
in
and
adc
and
jne
add
sub
adc
jo
mov
cmp
fild
pushf
inc
inc
pop
mov
std
shl
cdq
stos
popf
outs
(bad)
dec
lock
mov
(bad)
jmp
out
adc
stos
dec
scas
dec
fsubr
adc
or
xchg
mov
lock
push
inc
pop
lods
mov
xchg
sbb
inc
jmp
jb
enter
add
adc
pusha
sbb
mov
jl
icebp
movs
cs
lea
pop
add
mov
pop
cdq
ror
push
cmc
cmc
mov
mov
imul
idiv
add
xchg
cmp
cmp
out
shl
jbe
cmps
es
dec
test
xchg
xor
clc
push
test
or
retf
jae
sbb
push
push
cmp
nop
mov
cmp
mov
and
sti
push
out
jne
stos
pop
repz
pop
xchg
mov
jne
mov
adc
shr
lahf
mov
ja
mov
adc
(bad)
cmps
mov
pop
inc
fwait
fwait
jns
push
in
cmp
sub
(bad)
ficom
pusha
pop
push
cmps
aaa
sbb
add
sahf
fwait
adc
or
ss
imul
(bad)
and
mov
mov
push
xor
mov
les
and
and
les
adc
out
in
loope
scas
dec
mov
lea
aas
iret
fsubr
mov
pop
cs
jmp
xor
aaa
sub
xchg
mov
mov
clc
int
call
aaa
xor
and
add
mov
je
or
xor
dec
inc
inc
pop
mov
ins
jmp
xchg
push
not
xchg
xor
add
call
aas
stc
pushf
or
movs
jno
jb
ss
iret
mov
pop
lds
jnp
jno
sbb
mov
mov
mov
out
cmp
repz
fs
cmp
pop
pcmpeqb
(bad)
and
xor
cmp
sub
adc
jmp
sahf
aaa
mov
push
sbb
lods
jl
fsubr
pop
mov
jecxz
loope
or
mov
xchg
add
test
jb
sahf
test
adc
cli
data16
into
cmp
sar
inc
push
dec
mov
dec
pop
pop
mov
int
iret
neg
mov
sbb
jne
jecxz
ins
imul
rcl
mov
cwde
test
sbb
xor
sbb
push
adc
out
xchg
enter
xchg
jbe
std
fbld
lahf
test
cs
imul
xchg
fs
pushf
test
mov
ds
mov
jns
es
ss
lea
jns
imul
inc
add
inc
into
push
sti
rcr
mov
daa
into
sbb
(bad)
and
or
inc
or
pop
popf
mov
cmp
shl
jecxz
push
push
mov
popa
call
xchg
ja
in
mov
lea
addr16
in
icebp
push
adc
aad
into
ror
mov
jecxz
jmp
sub
iret
cld
fcom
xor
pop
push
sahf
push
mov
arpl
mul
loope
je
add
cmp
js
adc
add
movs
push
pop
sahf
mov
sub
sub
fidiv
cli
pop
jle
lods
jl
fsub
and
dec
xor
xlat
mov
leave
ins
sbb
test
add
ret
(bad)
push
push
fwait
inc
in
out
push
cs
(bad)
sti
fisub
inc
push
xor
jnp
inc
es
mov
or
push
(bad)
push
mov
sbb
xor
in
sbb
aas
cmc
push
adc
ins
xchg
test
(bad)
xlat
mov
xor
jno
dec
loope
(bad)
inc
mov
call
icebp
push
movs
test
inc
test
shl
aam
jecxz
fisttp
iret
gs
js
jp
das
dec
pop
mov
ds
les
add
jmp
addr16
(bad)
or
adc
dec
fs
jns
movs
adc
test
loop
sbb
fbstp
pop
push
je
pop
ret
mov
js
mov
outs
cmc
test
mov
mov
outs
mov
in
aad
in
neg
mov
ror
cmp
iret
mov
sub
or
jnp
dec
cs
lahf
mov
mov
jmp
jbe
or
lds
sbb
test
xor
test
pop
dec
cmp
fild
cmc
dec
jns
test
dec
xchg
mov
inc
ficom
nop
xor
imul
sbb
ds
fmul
cdq
mov
dec
pop
or
xchg
repz
popf
xor
jno
pop
add
push
add
xchg
call
fisttp
mov
sbb
adc
jo
add
outs
pop
ret
scas
aaa
addr16
mov
push
sbb
mov
aaa
test
imul
pop
jb
dec
xchg
xchg
fs
test
call
push
or
ja
test
sbb
movs
jnp
pop
fisubr
fild
add
dec
mov
push
ds
movs
xchg
leave
xor
sbb
pop
mov
push
lods
add
arpl
inc
mov
(bad)
sbb
aas
fst
mov
bnd
and
pop
add
addr16
or
scas
add
pop
xchg
cmps
aad
adc
xchg
popa
inc
in
pushf
movs
clc
aad
js
xchg
(bad)
push
add
xchg
fcmovbe
pop
out
jnp
outs
stos
aaa
jns
movs
inc
es
fwait
mov
test
mov
aas
into
dec
cmp
sub
pop
(bad)
push
sar
jae
cwde
(bad)
inc
(bad)
shl
adc
pop
and
dec
adc
dec
jmp
gs
xchg
jne
cmps
fcmovb
das
ret
mov
retf
test
sub
push
lods
daa
sbb
cli
cld
fist
adc
pop
scas
xor
jae
push
call
hlt
jo
mov
push
fstp
and
popf
pop
jmp
aas
jl
mov
addr16
leave
test
shr
stc
jns
sub
cmc
jge
loope
je
movs
jg
fcomi
mov
or
push
mov
mov
adc
loope
icebp
clc
pop
inc
mov
aaa
retf
inc
mov
push
loopne
jae
dec
stos
sbb
mov
pop
ja
cwde
mov
(bad)
sub
xor
es
sub
mov
push
stos
movs
stc
bound
sub
fcmovbe
mov
mov
outs
push
or
mov
push
and
fst
test
inc
jle
mov
fsubr
mov
jp
dec
imul
cmp
aam
iret
push
mov
dec
lahf
ins
or
mov
retf
mov
sub
(bad)
fsqrt
cmp
adc
sub
pop
mov
fcomp
arpl
ja
mov
pop
in
stc
xchg
vphadduwd
and
jle
in
je
add
imul
mov
je
mov
xchg
add
stc
clc
cdq
fstp
inc
lea
sub
cmp
fucomip
jbe
and
pop
ins
push
sub
test
test
push
mov
je
jb
ret
outs
or
adc
jle
stos
push
xor
sub
mov
in
dec
dec
aas
fcmovu
(bad)
aas
test
jo
test
xlat
mov
push
xchg
loope
pop
call
shl
cmps
iret
sub
lds
mov
fwait
aam
iret
dec
jmp
pop
xor
into
mov
nop
or
bound
push
sub
cmps
int3
mov
sub
and
add
inc
add
xor
ds
jnp
sahf
push
add
cwde
xchg
(bad)
adc
xchg
fistp
stc
sbb
scas
jnp
adc
push
nop
stos
inc
and
mov
hlt
imul
ja
mov
and
cli
aam
lock
sbb
stos
sub
loop
jmp
jg
fild
push
xchg
aaa
sub
lods
mov
outs
rcr
test
mov
adc
js
lods
jg
ror
mov
jle
sti
xchg
aaa
mov
inc
push
mov
pusha
xchg
loope
or
in
or
ins
xchg
test
mov
mov
(bad)
shl
xor
xchg
push
xor
ds
arpl
popa
ficomp
and
mov
xchg
cmp
ficomp
fild
sbb
fisub
pop
imul
fwait
aas
mov
mov
aaa
mov
mov
cmps
push
inc
dec
aas
lahf
xlat
cdq
cmp
js
lahf
jae
mov
mov
adc
stos
test
out
inc
cdq
mov
push
out
mov
cs
push
mov
dec
add
cmp
inc
loopne
pop
pop
gs
aaa
sbb
mov
jp
mov
in
(bad)
aas
enter
push
cmp
sub
jns
push
cwde
aas
(bad)
cmp
pop
ins
stos
ja
mov
mov
and
xor
aam
adc
and
xor
mov
sbb
test
ficom
cmp
test
and
cli
fisubr
lods
mov
inc
into
dec
cmp
jmp
sub
sbb
xor
or
ret
mov
clc
fsubr
xchg
iret
cmp
lods
aaa
mov
mov
jb
mov
dec
in
fistp
ror
push
lods
push
mov
dec
xchg
loop
pop
jmp
fucomip
and
jg
cmps
mov
inc
test
repnz
mov
mov
retf
dec
(bad)
ss
sub
test
inc
icebp
pop
pop
sbb
aaa
jns
lods
imul
out
cmps
mov
dec
in
iret
add
sbb
and
push
adc
xchg
sub
pusha
test
add
xlat
pushf
sbb
pop
pop
in
retf
leave
mul
adc
(bad)
mov
lahf
dec
aam
pusha
adc
jmp
xchg
mov
pop
dec
fwait
cwde
movs
adc
sti
fcomi
rol
sub
jns
adc
or
cmp
dec
mov
aaa
daa
dec
mov
retf
pop
jmp
pop
pop
enter
jae
jmp
lods
add
bound
test
sbb
mov
xor
cmp
rol
out
jbe
stos
inc
fstp
rcr
xchg
popa
retf
mov
cmc
or
adc
cs
add
sub
fild
mov
int
or
(bad)
cmp
jl
scas
pop
ins
push
mov
pop
jl
mov
iret
ins
jmp
add
aad
ja
add
and
pop
frstor
jne
rol
(bad)
jmp
ds
repz
jge
jb
outs
jecxz
lock
cmps
les
pop
jmp
mov
mov
gs
mov
call
dec
push
(bad)
push
aad
in
push
sub
call
mov
loope
push
jle
sbb
xchg
push
mov
dec
jmp
ja
mov
jne
and
das
cwde
add
inc
pusha
test
cmp
inc
jg
movs
mov
cmp
ins
in
ficom
(bad)
inc
outs
jl
je
lds
jo
mov
stos
and
mov
pop
je
mov
outs
cmp
mov
or
rol
jo
dec
mov
data16
jns
cmp
cld
pop
jbe
xor
pop
adc
sbb
ja
inc
pusha
test
or
adc
mov
mov
jbe
popf
push
enter
xchg
les
xchg
call
mov
nop
sbb
mov
loope
in
cdq
inc
jg
mov
ds
pop
in
push
jge
mov
jbe
pop
xchg
retf
xor
or
cmc
data16
and
and
mov
(bad)
aas
icebp
imul
jne
xchg
xor
xchg
sbb
and
mov
mov
jle
test
mov
cmp
pushf
push
xor
pop
cmc
xchg
mov
add
rcr
inc
mov
push
cs
icebp
enter
arpl
xor
sti
inc
aas
add
sub
sub
ds
and
lods
sub
mov
push
in
cli
adc
and
les
xchg
push
mov
popa
xchg
mov
outs
cmc
cld
add
stc
(bad)
out
sub
inc
in
mov
scas
dec
mov
add
lock
or
(bad)
adc
ds
mov
ja
inc
jne
jge
sbb
cmp
mov
into
pop
in
clc
add
and
test
arpl
jnp
lea
jl
mov
pop
out
rcl
neg
jno
push
clc
mov
jg
(bad)
cwde
jo
mov
mov
loope
out
mov
test
test
scas
gs
fidiv
sbb
and
add
dec
jmp
aas
adc
aaa
clc
inc
out
ret
push
cmp
push
cmp
xor
cli
ins
movs
push
xor
mov
out
enter
sti
js
je
inc
stos
pop
aam
in
xchg
(bad)
mov
xchg
xchg
inc
daa
mov
popf
add
pusha
test
push
outs
xchg
fwait
mov
cmps
mov
scas
dec
test
or
shl
inc
cld
cmp
sbb
or
mov
xlat
pop
in
jg
mov
arpl
out
xor
inc
iret
add
inc
push
mov
push
popf
aad
or
or
loop
mov
dec
outs
lahf
jno
mov
jecxz
jmp
call
mov
push
ja
mov
add
retf
jl
mov
sbb
xor
dec
sub
les
cs
retf
adc
scas
arpl
rcr
push
pop
pop
pusha
xchg
pop
(bad)
cmp
sbb
dec
inc
stos
and
test
std
rcl
push
xchg
cwde
imul
call
mov
outs
ja
mov
popa
cmp
(bad)
jmp
jecxz
dec
mov
stc
daa
pop
cmp
push
inc
or
scas
pop
jl
test
dec
xchg
fwait
int3
scas
xor
mul
(bad)
push
dec
jno
mov
adc
dec
pop
xchg
jg
or
mov
pushf
sbb
xchg
inc
xchg
hlt
sbb
bound
push
stos
imul
mov
add
test
mov
pop
in
lea
and
and
scas
sub
dec
fimul
dec
fisub
lock
sub
mov
sub
mov
ficomp
out
lea
mov
sbb
inc
or
pop
mov
stos
imul
movs
aaa
jb
cdq
loope
pop
or
imul
pushfw
dec
pop
inc
test
jecxz
mov
jmp
inc
add
div
movs
les
xchg
mov
push
cmp
lock
jmp
retf
dec
aam
fstp
and
jp
or
and
mov
xlat
pop
fmul
sbb
sbb
sbb
mov
(bad)
bswap
add
add
mov
jne
push
jb
(bad)
mov
aad
add
dec
adc
pop
pop
test
xchg
in
sar
push
mov
loopne
imul
call
push
hlt
test
and
scas
pop
jl
popf
inc
ss
mov
sar
jmp
cmp
dec
sbb
sbb
sub
outs
push
push
ja
mov
cmp
rcr
stc
gs
(bad)
fisubr
jmp
call
xchg
jae
mov
mov
jecxz
mov
fcmovne
dec
ficom
pop
add
pop
push
xchg
call
or
sti
fstp
xor
mov
inc
cs
mov
into
outs
out
xchg
jp
mov
adc
cmp
add
arpl
push
addr16
push
pop
mov
cld
bound
push
pop
(bad)
es
test
sbb
xchg
jnp
(bad)
xchg
out
callw
add
out
ins
or
push
xchg
mov
xor
sar
ins
mov
aaa
jecxz
mov
or
push
jmp
ja
dec
mov
dec
sub
mov
pushf
aas
and
jle
inc
shl
pusha
jno
in
ss
aaa
and
jae
movs
push
lods
push
pop
call
jmp
loop
inc
and
xor
mov
xchg
add
js
mov
sbb
xchg
and
loopne
out
loop
dec
pusha
xchg
cwde
inc
loope
clc
ds
ds
cld
fcom
cmp
push
jp
push
inc
adc
add
sbb
add
xor
jo
adc
sbb
je
outs
pusha
mov
push
mov
and
cmps
sti
add
enter
sbb
repz
fldenv
pushf
rol
sub
not
mov
sbb
mov
(bad)
fdiv
icebp
cwde
inc
repnz
fidivr
cs
test
pop
fnstsw
jne
dec
scas
data16
adc
mov
icebp
add
cmp
pop
push
sub
pop
fiadd
nop
ins
push
movs
sub
popf
mov
sbb
push
dec
(bad)
sti
pop
shr
icebp
jnp
cmp
dec
xchg
ret
test
ss
loope
add
pop
mov
scas
push
ja
mov
loop
jmp
or
push
cmp
pop
popf
pop
inc
sub
es
jp
inc
sub
mov
jmp
jbe
jmp
sub
push
sub
push
cmp
or
xchg
cmp
xlat
mov
mov
popa
movs
jae
mov
mov
mov
and
(bad)
mov
jecxz
movs
mov
push
mov
cmp
ret
call
je
sub
icebp
into
mov
nop
cmp
cmp
gs
jbe
mov
scas
xor
(bad)
xchg
jnp
lea
pop
aas
in
gs
sbb
add
cmps
push
cmp
test
sbb
(bad)
xchg
cs
jmp
pop
hlt
scas
aam
loope
jecxz
loope
jnp
inc
lea
clc
sbb
mov
cmp
loopne
mov
popf
cmps
inc
loopne
in
sub
fist
sbb
ss
mov
inc
pop
popa
xchg
mov
nop
cmp
or
dec
out
pop
sbb
or
push
cmc
imul
xor
adc
xor
xlat
out
scas
clc
jb
pop
add
pop
repz
jg
les
cmp
lock
jae
fs
lods
repnz
mov
repnz
xor
(bad)
neg
les
mov
sub
enter
ficom
adc
inc
jns
popf
mov
inc
in
jl
(bad)
outs
inc
push
aas
cmps
aas
ss
xor
sub
jnp
rol
addr16
adc
loop
cdq
daa
mov
gs
popf
pop
loope
in
test
mov
retf
xor
shl
cmps
call
or
jecxz
jo
mov
sub
dec
idiv
fist
aas
ja
cmp
sbb
push
mov
sub
mov
jmp
popa
add
sbb
adc
jns
xor
dec
inc
mov
and
ror
cwde
dec
jae
test
repz
repz
loopne
mov
xchg
jno
(bad)
ret
icebp
xor
test
push
mov
sahf
xchg
aas
aam
jmp
(bad)
dec
outs
xchg
adc
cmps
or
hlt
test
cmp
push
dec
jge
imul
sbb
cmp
cld
push
push
sbb
test
sub
add
data16
js
mov
jno
out
xchg
inc
(bad)
cmc
add
lods
jle
sahf
mov
in
xchg
xchg
push
jp
sbb
dec
pop
in
(bad)
stos
xor
inc
lods
lods
imul
fst
cs
fist
inc
push
sub
stos
jno
jg
pop
add
or
mov
sbb
dec
adc
imul
mov
retf
imul
or
xchg
and
dec
loop
cmps
cmp
inc
lea
mov
pop
xchg
int
fs
in
or
lock
in
or
ja
mov
xchg
mov
dec
loope
cmc
or
sbb
sti
xlat
jbe
adc
inc
stos
sbb
pop
dec
xchg
mov
xchg
dec
and
outs
int
xor
and
xor
das
mov
cmc
push
pusha
test
cmp
lods
sbb
jb
cld
in
mov
sbb
pop
loop
(bad)
pusha
xchg
les
or
sti
div
pusha
cli
mov
jp
xchg
enter
repnz
mov
ds
into
icebp
into
data16
sbb
and
sbb
push
dec
push
xchg
mov
scas
dec
and
cwde
loope
inc
jb
cmps
pop
ja
jge
cmc
pop
mov
pushf
push
dec
xchg
add
mov
ret
imul
aam
jnp
shl
sahf
jge
ret
test
repnz
not
cmps
shl
pop
push
mov
jmp
dec
repnz
or
dec
sar
mov
pusha
pusha
cmps
pop
jge
pusha
or
movs
xchg
lahf
das
cmp
inc
out
addr16
xchg
pop
push
add
in
ja
jl
lods
bswap
add
add
mov
cwde
bound
push
jno
enter
leave
jle
outs
dec
arpl
jge
stos
mov
mul
test
scas
std
popf
les
scas
pop
jae
xchg
test
test
push
adc
dec
enter
lds
push
pop
sub
and
mov
cdq
sub
in
out
mov
mov
aaa
jmp
sub
mov
jg
xlat
sub
dec
and
(bad)
aaa
mov
jno
lea
shl
sti
scas
out
call
rcl
mov
ins
ja
mov
and
xchg
div
cld
repz
ins
xchg
mov
cmp
fild
xor
sbb
xchg
es
mov
mov
(bad)
sbb
ss
and
dec
add
add
mov
jne
mov
sub
scas
xchg
xchg
std
imul
sub
mov
dec
call
pop
std
stos
xchg
and
cdq
mul
test
popf
popf
adc
cld
cmps
ret
std
dec
pop
xchg
fnstenv
jnp
push
inc
or
test
push
jmp
sbb
push
in
xchg
scas
pushf
cmp
std
push
out
cmp
xor
cmp
je
sbb
imul
sbb
test
imul
cmp
inc
(bad)
arpl
scas
xlat
pop
in
and
xor
movs
sbb
(bad)
rcr
mov
mov
clc
shr
inc
xchg
dec
lods
or
aaa
in
test
push
in
inc
push
add
ins
pop
dec
cmps
xor
pop
icebp
fst
(bad)
aaa
cmp
outs
clc
stc
or
pop
push
mov
pop
sahf
cmp
or
jge
(bad)
adc
mov
dec
nop
fwait
(bad)
pop
aaa
and
cld
fcom
std
bound
lds
(bad)
scas
aam
pushf
(bad)
sti
inc
ret
xchg
jno
(bad)
mov
sti
fwait
cmps
ret
dec
fldcw
sahf
cmp
sbb
push
xchg
mov
xor
xor
aam
rcr
dec
jp
inc
stos
push
ins
pop
mov
mov
mov
jmp
jae
pop
aaa
int
adc
add
data16
dec
pop
retf
xchg
mov
push
push
dec
xchg
retf
test
add
pop
jle
mov
pop
xchg
into
mov
and
retf
jecxz
xchg
(bad)
mov
push
mov
int3
add
adc
sbb
cmp
(bad)
(bad)
push
fwait
cmp
popa
fistp
dec
jo
ja
dec
icebp
fwait
int
xor
fisttp
inc
icebp
jp
js
iret
sbb
jo
add
cld
pop
jo
dec
push
mov
loope
xor
push
mov
arpl
outs
icebp
xchg
leave
outs
test
cld
add
call
mov
lahf
lods
shl
ins
outs
mov
(bad)
fdivr
fwait
movs
inc
loopne
aad
sub
and
jge
push
push
push
mov
xchg
shr
(bad)
fdiv
mov
in
gs
cmp
pusha
sbb
add
add
add
pusha
and
dec
sahf
aam
imul
gs
mov
test
cmp
test
out
loop
into
dec
mov
jne
sub
mov
ja
mov
dec
sbb
add
inc
fs
xor
and
push
jb
lods
pop
enter
inc
ret
into
adc
stos
mov
(bad)
push
arpl
retf
sahf
fld
pop
sbb
ins
out
(bad)
dec
cmps
aam
dec
shl
push
sar
sbb
sbb
and
std
xchg
fsub
bound
aad
out
jmp
hlt
lods
pop
in
xor
sub
imul
mov
mov
jg
ret
js
shl
je
fbld
push
gs
pslld
stos
ins
cmp
mov
xor
mov
test
jb
jne
push
nop
pop
jmp
sahf
fs
xlat
mov
out
pusha
pop
(bad)
xlat
mov
sbb
xchg
mov
ds
add
test
fisttp
adc
(bad)
(bad)
push
into
add
dec
mov
gs
sbb
mov
pushf
xor
fsubr
leave
adc
sub
or
pop
push
ss
jp
(bad)
dec
pop
xchg
or
mov
sahf
enter
(bad)
imul
push
je
pop
jecxz
call
xchg
js
fdivr
xchg
sub
inc
stos
mov
gs
mov
adc
stc
not
sbb
sub
and
cmp
dec
stos
push
outs
push
cmps
pop
or
and
ins
fmul
push
mov
xor
xor
xchg
sbb
mov
movs
aaa
ja
mov
xor
fsubr
loope
jb
lods
sub
mov
mov
ret
nop
pop
and
mov
and
push
xchg
mov
add
stc
test
xchg
test
dec
ds
into
add
dec
adc
pop
cmp
out
cwde
mov
out
cmp
inc
pop
in
or
mov
push
inc
mov
pop
nop
mov
pop
xor
and
dec
xchg
mov
gs
(bad)
in
ror
mov
test
jmp
mov
xchg
sub
icebp
push
sub
loop
in
inc
push
jnp
movs
adc
daa
call
into
xor
rcr
fimul
xchg
xchg
fs
je
sti
adc
imul
mov
fwait
outs
cmp
or
sub
add
icebp
mov
mov
jbe
imul
(bad)
arpl
call
jno
into
shl
clc
mov
or
push
jae
mov
push
adc
rol
mov
cmp
mov
stc
push
pop
sbb
sbb
test
mov
sar
cmp
ja
or
push
sub
cmp
arpl
pop
fild
sahf
jp
mov
jae
xlat
test
inc
and
fist
les
lods
jnp
fadd
addr16
xchg
imul
bound
lods
inc
jg
xor
jecxz
aas
jge
sub
fdiv
repz
cmp
pop
adc
cmp
mov
(bad)
(bad)
and
adc
and
das
int
fld
stos
push
or
loope
sbb
jle
test
pop
fwait
(bad)
jb
jge
jg
outs
fnstcw
stos
je
mov
cmc
xor
fcmovne
cmp
imul
xchg
sysenter
jmp
cmp
mov
dec
and
sub
cmp
pop
mov
aaa
and
fst
inc
out
daa
shr
addr16
sbb
aas
ins
popa
add
aas
fistp
stos
outs
xor
sbb
xor
sbb
jne
mov
and
stos
call
cs
rcl
lea
push
pushf
xchg
xchg
push
ds
icebp
xchg
in
dec
xchg
movs
inc
in
scas
xor
cmp
int3
xor
add
cs
mov
mov
repnz
das
mov
jb
ja
mov
xor
(bad)
sbb
jns
sub
nop
rcl
hlt
fdivr
add
addr16
cmp
iret
mov
ret
adc
in
mov
inc
sbb
cld
fsub
jmp
cs
cld
shl
jae
pop
test
js
clc
cs
pop
call
push
jmp
jno
fisttp
cmp
cmp
cmps
push
cmp
(bad)
adc
xor
shr
daa
mov
push
lds
fnsave
(bad)
jg
in
sub
stc
mov
(bad)
mov
outs
mov
xlat
lock
repnz
mov
push
and
push
(bad)
or
das
mov
cwde
test
dec
cmp
ja
fcom
sar
arpl
aaa
push
push
push
jl
sub
outs
xchg
push
cmp
dec
mov
xor
addr16
mov
test
jb
jg
dec
mov
and
(bad)
mov
adc
out
xchg
je
movs
(bad)
sbb
fdiv
stc
(bad)
dec
ins
fwait
scas
xor
push
in
cmp
push
nop
icebp
leave
push
sti
add
pop
adc
mov
retf
dec
sbb
pop
test
adc
hlt
push
pop
imul
push
and
inc
call
inc
retf
mov
mov
iret
hlt
xchg
adc
jae
fidivr
mov
jge
loopne
dec
(bad)
call
(bad)
push
mov
mov
push
test
arpl
stc
icebp
adc
xchg
sub
dec
fdiv
cmp
rcl
aad
rol
jge
les
pop
push
mov
or
cmp
push
std
sbb
inc
cmps
or
sbb
shr
cmps
pop
and
sub
neg
adc
ins
leave
fcom
jecxz
sbb
sti
fmul
dec
jmp
loop
add
aam
jae
pop
sbb
ja
xchg
adc
icebp
sbb
mov
push
or
mov
imul
das
popf
inc
sub
test
mov
inc
out
lea
rcr
or
aas
mov
add
cmp
or
pop
imul
mov
and
scas
xchg
inc
mov
jo
cmps
outs
jmp
push
call
out
xor
outs
mov
mov
xchg
mov
adc
cmc
mov
sahf
mov
push
pop
das
sar
lods
push
fidiv
push
aaa
popa
test
cmp
jns
xchg
shl
call
pop
sbb
das
rol
adc
cmp
aas
xor
inc
cld
retf
mov
retf
shr
push
mov
xor
ret
repnz
test
shr
lods
jmp
stos
popa
and
pushf
out
mov
inc
ins
mov
sub
xor
hlt
fistp
xor
pop
jl
test
dec
xchg
fst
icebp
nop
addr16
loope
pop
push
jo
add
fcomp
mov
push
mov
and
scas
mov
sti
jg
jl
push
(bad)
call
mov
test
fs
xchg
rol
or
ins
dec
call
xlat
xchg
fcomp
data16
call
cs
inc
push
fisub
outs
pop
sahf
inc
pop
add
adc
sub
clc
bound
fcom
jae
or
sub
(bad)
cmp
mov
or
push
dec
in
sti
pop
ror
lea
mov
popa
test
xchg
fisubr
lea
inc
cli
mov
imul
test
(bad)
pop
mov
add
stc
aad
pop
iret
inc
push
jge
mov
dec
sub
(bad)
mov
pop
lock
cli
sar
ret
jne
imul
sub
add
pop
movs
aas
jne
cdq
loope
push
and
iret
loope
mov
pop
push
mov
dec
add
adc
mov
mov
xchg
add
mov
inc
add
cli
repnz
(bad)
js
mov
inc
sar
pop
cmp
shl
push
dec
mov
inc
cs
in
mov
mov
les
adc
xor
js
xor
push
mov
(bad)
push
push
adc
fist
loop
jbe
stos
pop
jecxz
(bad)
inc
inc
mov
test
call
ja
leave
mov
aad
bound
cmc
ret
jno
sub
sbb
sub
mov
push
in
xor
pop
push
mov
push
or
mov
aad
push
xor
cmp
pop
sbb
sub
pusha
stos
jo
cmps
sub
movs
stc
adc
dec
out
(bad)
mov
mov
dec
cwde
inc
inc
dec
mov
js
(bad)
call
sub
sti
mov
add
xchg
mov
add
fldenv
mov
cmp
sub
stc
(bad)
jecxz
sbb
or
inc
movs
dec
add
fwait
mov
mov
test
jnp
lea
jb
in
cmp
and
or
fs
dec
aaa
movs
sub
cmp
sub
xchg
enter
clc
pop
neg
jg
inc
xchg
mov
or
in
xor
scas
xlat
or
test
inc
retf
cli
xor
movs
retfw
fidivr
push
inc
mov
clc
push
ret
and
aaa
sbb
in
pop
jle
mov
lea
mov
out
or
add
and
jne
adc
imul
aaa
mov
(bad)
sbb
and
xchg
cmp
dec
jns
mov
xchg
sti
ins
out
xchg
or
xchg
pop
sub
fwait
jle
mov
push
test
jmp
aaa
sti
(bad)
jmp
mov
pushf
fwait
inc
out
(bad)
sub
cld
icebp
loopne
rol
cmp
inc
es
xchg
add
sti
lea
cmps
rcr
or
push
aam
or
adc
xchg
bswap
pop
addr16
cmps
xor
into
mov
aas
and
les
repnz
dec
push
lds
sahf
adc
test
xlat
mov
mov
popf
mov
jp
mov
outs
aas
int3
lock
fimul
mov
inc
xchg
push
stos
cmp
(bad)
mov
add
adc
mov
(bad)
add
add
xor
add
cmp
ins
push
cmp
mov
or
and
cld
mov
(bad)
pop
jne
mov
fcmovnu
sahf
xor
test
xchg
clc
nop
jo
sbb
lods
ins
jno
call
scas
(bad)
dec
outs
sahf
mov
cmp
callw
sbb
push
outs
inc
call
mov
cdq
dec
pop
add
add
sub
add
mov
cli
add
add
sahf
repnz
inc
mov
push
lds
sbb
outs
jmp
lock
mov
cmps
pusha
lds
adc
addr16
(bad)
pushf
ret
aaa
mov
test
inc
mov
inc
jecxz
cmps
sub
cmp
shr
or
fisttp
popa
push
mov
or
add
arpl
lock
or
pop
push
ds
mov
test
add
xchg
inc
dec
and
in
fwait
and
push
lds
test
ja
fdivr
test
data16
or
cli
icebp
inc
jg
scas
dec
test
cmp
sti
shl
xor
add
imul
aaa
pop
or
mov
scas
push
cmp
mov
or
push
ja
add
adc
sbb
push
xchg
mov
cmp
pop
arpl
(bad)
mov
cld
inc
jl
mov
pop
mov
add
repnz
repz
scas
sar
add
mov
sbb
jmp
popf
scas
dec
lea
mov
cmp
and
xor
push
aas
adc
cmp
ds
ins
jns
mov
sbb
icebp
jp
test
inc
cmps
xor
or
cmp
(bad)
and
jg
lods
jbe
sahf
or
xchg
(bad)
retf
and
test
int3
push
lea
mov
shl
xchg
in
repz
popa
cdq
mov
jne
xor
push
jmp
jae
inc
cmps
adc
push
mov
jns
mov
int
fdivr
or
dec
and
xor
gs
adc
pop
pushf
push
ds
cmp
lahf
push
mov
sub
sti
jle
js
push
mov
pop
xchg
in
push
in
xchg
jg
rol
xchg
adc
jnp
lea
js
mov
cs
repnz
repz
push
cmc
dec
fstp
sub
int
lods
inc
jecxz
push
sub
cmp
mov
sub
mov
stc
ins
stc
clc
add
adc
xor
popa
sub
xchg
and
xor
outs
jne
ins
daa
shl
add
sub
fist
hlt
pop
jp
stos
push
lds
inc
ror
mov
out
push
mov
mov
pop
mov
cmc
adc
fsub
dec
push
fwait
movs
push
jecxz
stos
xor
adc
clc
sti
inc
call
stos
adc
movs
inc
sub
retf
cmp
dec
in
int3
add
add
inc
and
das
sahf
imul
ss
ds
in
mov
pop
test
mov
neg
pop
stos
push
rcl
push
in
inc
add
test
sar
sbb
popa
xor
stc
xchg
fsub
inc
ins
fwait
cmps
imul
cs
aam
push
add
outs
test
arpl
jb
jge
cmps
xchg
xchg
xor
aas
mov
inc
pop
jge
mov
sbb
pusha
bound
jle
mov
sbb
and
(bad)
aam
xor
jnp
inc
mov
jae
rol
stc
fadd
movs
aad
stos
pop
ja
add
mov
jge
mov
inc
sti
jbe
sub
fistp
ss
add
loopne
add
stos
int3
xchg
adc
add
popa
jne
lds
sub
add
data16
push
repz
mov
cmp
jle
repnz
daa
mov
pop
pop
mov
jge
mov
push
rcl
pushf
jno
pop
or
jne
xchg
cwde
in
neg
xchg
test
or
rcl
inc
jb
xor
inc
or
mov
lods
jg
lock
int
sbb
sub
pop
test
xor
xor
mov
xor
mov
pop
(bad)
xchg
push
lock
inc
mov
(bad)
mov
cwde
adc
nop
add
(bad)
not
scas
mov
fwait
fwait
mov
imul
mov
aaa
push
sbb
int
inc
xchg
jns
inc
fcomp
imul
pop
push
popf
les
out
lea
sahf
xchg
sbb
ficomp
inc
xor
pop
std
imul
arpl
cmp
xlat
mov
mov
sbb
shr
iret
repz
mov
test
xchg
add
cli
rcl
mov
pop
mov
adc
mov
cmp
das
ror
pusha
add
lsl
mov
imul
repz
jmp
jae
fisub
xor
pop
or
pusha
pop
mov
addr16
out
xchg
aaa
mov
inc
push
fisttp
(bad)
les
mov
sti
cmc
push
out
xchg
xchg
(bad)
mov
mov
daa
sar
std
mul
ins
xchg
add
not
sbb
xchg
mov
icebp
inc
je
push
test
imul
test
sub
ja
out
adc
add
and
das
nop
adc
xor
add
mov
xor
hlt
push
les
inc
mov
mov
xchg
dec
out
push
or
in
movs
(bad)
call
sbb
test
xchg
scas
xor
ss
xor
sbb
out
xlat
push
jmp
ins
cmp
mov
cdq
sub
jl
cli
or
pop
fistp
mov
mov
sahf
jge
test
imul
dec
dec
ret
aaa
mov
jns
lods
jo
mov
xor
xchg
jno
(bad)
repz
icebp
test
push
test
mov
fsub
push
(bad)
mov
push
sub
(bad)
jmp
pop
mov
jns
movs
inc
es
fwait
mov
int
jecxz
or
aas
neg
or
jb
(bad)
daa
mov
sar
cmps
push
sbb
adc
push
ins
in
frstpm(287
inc
xchg
lea
sbb
pop
test
ret
aas
xchg
loop
je
fwait
jns
xchg
shr
mov
loopne
xchg
sbb
fucom
dec
jl
xchg
push
push
sub
inc
stc
aas
pop
or
cmp
mov
mov
or
arpl
shl
cmps
fisub
popa
adc
xor
imul
popf
cmp
pop
lods
data16
outs
adc
ss
lea
dec
(bad)
fist
lock
dec
inc
test
inc
mov
xchg
js
int
pushf
aaa
jmp
mov
push
xchg
mov
adc
aam
dec
push
dec
rol
mov
sti
or
aaa
sbb
xor
push
jmp
mov
xor
std
ins
sbb
mov
cmp
pop
push
js
sbb
cmp
pop
sahf
jno
pushf
sub
es
inc
dec
mov
mov
pop
pop
mov
pop
popf
not
and
hlt
xchg
out
ins
mov
mov
sbb
adc
loop
in
jecxz
outs
mov
mov
push
dec
enter
call
lods
jno
das
cmps
inc
sub
mov
stc
jmp
sbb
cmp
jge
xor
jmp
inc
xchg
jnp
xchg
lahf
pop
and
inc
jecxz
mov
(bad)
(bad)
jno
inc
jp
stos
popa
push
or
rol
mov
ja
mov
fcom
mov
jae
outs
hlt
push
add
fdivr
lods
pop
jmp
pusha
and
push
cmp
les
imul
xor
cli
fs
sbb
and
add
jnp
scas
dec
adc
aas
je
mov
(bad)
call
sti
jle
js
inc
mov
bound
push
and
xchg
outs
test
ja
mov
cli
cmps
mov
es
fwait
mov
cs
cli
icebp
hlt
jbe
ss
dec
pushf
adc
cs
dec
out
mov
test
mov
pop
fadd
sbb
and
and
outs
imul
popf
lods
xchg
xor
sahf
int
and
jno
mov
inc
xchg
rol
push
neg
test
shl
popf
mov
jg
mov
push
xor
loopne
in
repz
imul
cmp
push
push
sbb
jl
cmp
push
call
pop
call
pop
cmp
pop
sbb
cmp
jg
inc
pusha
mov
jl
xchg
sahf
jne
add
rcl
mov
jl
push
mov
mov
and
out
ins
cmc
dec
mov
push
sbb
stos
stos
ds
retf
repnz
call
test
push
sub
das
xchg
jmp
inc
mov
data16
cmps
mov
in
clc
aas
mov
pop
jne
and
cmp
cmp
jg
inc
dec
test
xor
mov
in
int
es
in
push
bnd
lods
push
aad
mov
in
adc
mov
mov
push
sbb
std
in
aad
inc
imul
in
jmp
pop
xor
inc
xchg
push
mov
cmp
scas
jge
leave
add
pop
enter
(bad)
fwait
cmp
mov
pop
mov
fwait
cmp
pop
int3
in
xchg
sbb
jae
popf
dec
aad
call
mov
adc
sti
jmp
(bad)
sub
jbe
xchg
mov
add
in
aam
lods
sar
lods
push
xchg
push
icebp
push
inc
push
nop
icebp
enter
arpl
pusha
cmps
or
inc
and
scas
mov
jmp
rol
pop
pop
xor
inc
adc
jl
sub
push
fisttp
into
xor
xlat
(bad)
sbb
and
fsub
xor
inc
pop
mov
jno
shl
xor
fimul
mov
jae
xchg
mov
repz
mov
ficom
cs
retf
fistp
jge
mov
push
push
xchg
push
mov
arpl
retf
sbb
sti
sbb
xor
sbb
push
imul
nop
jle
inc
dec
mov
jnp
cmps
mov
popf
stos
mov
clc
jge
push
mov
inc
xchg
repnz
mov
mov
call
dec
(bad)
fadd
mov
dec
fnstsw
ds
into
push
call
mov
jbe
pop
xchg
les
add
enter
sbb
and
pusha
jb
mov
shl
jl
mov
push
mov
mov
and
clc
mov
mov
or
jns
popa
lea
(bad)
lock
mov
add
jl
(bad)
fdivp
jne
pop
movs
xchg
push
test
sti
cmps
test
inc
ins
mov
dec
lea
sub
dec
call
fld
sbb
pcmpgtw
add
mov
mov
in
xchg
jnp
(bad)
jg
jno
loope
or
das
mov
retf
mov
pop
nop
mov
and
or
ficomp
les
push
scas
push
test
xor
stos
push
test
adc
fmul
fldcw
scas
mov
adc
(bad)
dec
fs
mov
repz
cmp
fistp
pop
sbb
test
push
xchg
mov
out
(bad)
sar
xchg
clc
add
cmp
fwait
sbb
bound
jnp
test
or
aas
xchg
cld
pop
lock
mov
movs
aam
test
xchg
ins
retf
sahf
popa
and
movs
add
test
adc
mov
(bad)
or
pop
ins
xchg
test
imul
push
pop
xor
mov
imul
fdiv
popa
mov
mov
stos
push
cs
pop
rol
push
and
xor
pop
and
mov
ins
dec
test
adc
xlat
sahf
xor
dec
loop
xchg
cmp
add
repz
addr16
mov
pop
es
mov
call
mov
test
popf
mov
hlt
mov
sar
add
(bad)
dec
nop
push
rcl
ds
xor
aaa
adc
mov
retf
dec
and
pop
sti
lea
mov
pop
into
and
cwde
push
mov
mov
aaa
(bad)
pop
pop
xchg
mov
retf
cmp
jbe
fild
mov
mov
adc
mov
pop
sbb
test
in
sar
inc
ins
xchg
mov
dec
pop
xor
into
push
add
jge
sahf
aaa
and
(bad)
jle
mov
mov
jne
pop
xor
add
imul
popf
pop
cmp
dec
je
sar
fxch
xchg
cs
inc
jbe
jp
lods
(bad)
dec
inc
and
aam
push
int
mov
pushf
mov
push
inc
xchg
mov
adc
fcmovnb
out
loope
jle
in
stos
dec
lock
into
cmp
int
lods
pop
int
push
cmp
xor
xchg
push
mov
pop
jmp
int3
rcl
enter
jno
in
adc
adc
pop
addr16
movs
xor
cmps
nop
xchg
xor
sub
jmp
jns
jne
push
test
inc
and
push
iret
xchg
jg
call
mov
cmp
xchg
mov
adc
cli
test
in
shl
mov
cmc
dec
sub
adc
or
movs
outs
sbb
jno
mov
xchg
sub
shl
jae
xor
sbb
inc
adc
lahf
adc
imul
in
stos
sub
in
fwait
push
inc
pop
xchg
mov
dec
mov
cmp
sti
repnz
shr
xchg
aam
pop
imul
out
test
dec
jmp
gs
mov
mov
das
inc
mov
repz
or
xor
push
or
cmp
mov
push
jmp
and
xor
ds
(bad)
mov
xchg
sbb
mov
pop
fisubr
stos
int
stos
outs
jns
mov
xor
sar
xchg
in
retf
mov
inc
int
retf
adc
mov
sub
mov
push
push
dec
xchg
mov
mov
sbb
inc
cli
fimul
mov
jbe
je
retf
imul
mov
jge
mov
sahf
jne
push
pop
shr
sbb
aad
dec
push
xchg
push
cmc
scas
(bad)
pop
mov
xchg
jp
rol
xchg
jp
outs
mov
data16
mov
js
loopne
icebp
stos
aad
dec
mov
jnp
dec
fist
sbb
in
push
jmp
dec
push
inc
add
fadd
fsub
xchg
push
jb
xor
cmp
pop
add
pop
fild
mov
jae
(bad)
leave
mov
add
jb
test
fst
loope
loope
pop
and
movs
or
stos
shl
outs
push
xchg
rcr
in
mov
sbb
push
sbb
int3
fadd
cmp
pop
shl
sbb
sub
icebp
les
std
jecxz
mov
jbe
inc
sub
xor
jae
adc
sbb
xor
in
stos
mov
xor
inc
jmp
cwde
and
add
pop
repz
fistp
stos
add
ret
shr
fcmovnb
sub
gs
mov
xor
fisttp
lods
fwait
jns
pop
lock
iret
fcom
xor
sbb
clc
push
inc
pop
icebp
les
(bad)
inc
sbb
sub
add
lahf
cmp
xchg
mov
data16
mov
cmp
cmc
xchg
es
std
push
push
mov
outs
cdq
les
sbb
lock
fisubr
test
xchg
mov
pusha
xor
neg
(bad)
fbstp
hlt
sub
xor
lock
push
outs
xchg
jno
inc
mov
push
jmp
or
pushf
call
sbb
sbb
sub
mov
or
mov
inc
out
mov
add
movs
sub
fcomp
adc
xchg
jne
in
movs
mov
movs
mov
jne
stos
mov
xchg
(bad)
dec
mov
dec
call
ds
(bad)
fcomp
pop
jg
les
jbe
inc
sub
mov
fisubr
lea
mov
fs
jns
in
xor
and
and
inc
dec
stos
jg
movs
cmp
xor
push
inc
out
xchg
aaa
test
js
mov
fstp
xchg
sbb
clc
pop
pop
into
stos
hlt
and
jg
mov
mov
xchg
push
sbb
pushf
mov
adc
std
movs
(bad)
outs
imul
cmovo
fdivr
fld
xor
addr16
inc
cld
pop
or
mov
ret
fmul
fistp
cwde
out
push
je
sbb
and
jo
sbb
sub
push
iret
jb
test
ds
inc
pop
mov
or
fdiv
gs
sbb
ins
ficom
mov
jecxz
xchg
lahf
popa
xor
aad
or
sbb
lods
jns
mov
repz
(bad)
ins
jle
xchg
retf
adc
cmp
hlt
lods
pop
call
mov
adc
popa
xchg
les
outs
int3
lea
div
je
fld
jge
cdq
and
test
push
cmps
push
addr16
mov
jl
cmps
jmp
hlt
inc
jbe
xchg
dec
inc
fisubr
mov
ss
mov
xchg
fwait
lods
shl
add
sbb
loop
push
mov
push
(bad)
outs
jmp
in
ss
jne
movs
inc
aas
add
push
stc
ins
jmp
or
add
ja
popa
pusha
stos
js
pushf
sbb
lea
ins
cld
(bad)
mov
xlat
js
pop
test
xchg
rcr
(bad)
mov
mov
imul
sar
xchg
retf
jg
xchg
ins
fwait
dec
ror
dec
cmc
xchg
fst
cmp
imul
nop
mov
out
(bad)
fbstp
mov
inc
fiadd
cmp
sahf
inc
mov
imul
retf
popf
lods
(bad)
movaps
fadd
stc
sbb
xchg
xchg
fs
mov
test
xchg
sbb
add
push
push
std
jecxz
retf
outs
cwde
mov
dec
inc
dec
int
lods
data16
dec
push
jge
sbb
push
adc
mov
xchg
mov
sub
inc
jmp
jns
mov
aas
js
pusha
lea
jbe
pop
fadd
retf
call
call
clc
pop
push
cmp
pop
xchg
sar
or
jmp
mov
pusha
fs
xchg
sbb
loopne
inc
lahf
fmul
sub
xor
daa
jecxz
lods
pop
loopne
jp
dec
xchg
aaa
jns
mov
call
lahf
div
cmc
inc
push
push
sub
and
sub
add
dec
cmp
cmp
cmp
(bad)
fldenv
pushf
dec
addr16
pop
push
loop
add
test
fwait
std
pushf
call
mov
test
aaa
stc
test
mov
cmp
jmp
call
daa
inc
cmps
pop
js
lahf
imul
mov
inc
and
pop
cld
push
sub
pop
add
pop
pop
fist
mov
sbb
jl
scas
xchg
inc
lea
and
pop
xchg
scas
xchg
push
popf
stos
ja
std
repz
sahf
test
daa
sub
ds
out
fcos
pop
inc
mov
aad
or
mov
jne
(bad)
sar
inc
and
lods
mov
pop
fbld
into
or
rcl
imul
shl
xchg
pop
or
push
adc
cmp
jmp
pop
fdivr
jg
dec
in
jmp
(bad)
and
loope
lock
fcmovnb
dec
mov
ja
or
(bad)
fild
mov
xor
sbb
push
add
cmp
push
ss
nop
mov
scas
ss
gs
arpl
push
leave
add
inc
push
aas
mov
mov
lods
pop
add
push
ins
xchg
mov
dec
loop
mov
aam
sbb
jno
sar
xchg
xchg
lds
push
jecxz
xchg
(bad)
mov
push
lea
sbb
aad
cli
push
das
pop
xor
lock
xor
aaa
pop
jge
pop
sub
xchg
lahf
and
call
fnstenv
cwde
add
lahf
jg
mov
mov
mov
inc
dec
cmp
icebp
xchg
adc
push
inc
lea
fmul
pop
mov
mov
adc
icebp
test
sti
outs
mov
lods
ret
popa
add
xchg
call
sbb
or
out
push
loope
or
bound
dec
push
jp
xchg
call
repz
mov
inc
(bad)
xor
push
pop
sbb
pusha
stos
data16
scas
cmp
mov
pop
jmp
(bad)
imul
jle
pop
call
cld
scas
ins
xchg
add
xchg
stos
lds
lods
outs
jnp
xchg
cmps
retf
sar
add
add
into
cs
je
ds
cmp
les
jnp
inc
pop
dec
mov
mov
add
pop
xor
xor
das
rcr
in
arpl
jbe
mov
sbb
and
repz
(bad)
push
repnz
push
test
mov
fs
loopne
fs
call
(bad)
push
mov
scas
int
mov
test
mov
out
test
inc
sbb
fidivr
sub
mov
fadd
and
dec
pushf
data16
xchg
jp
mov
xchg
pop
aas
repnz
jmp
popa
aaa
test
sbb
jno
jnp
mov
ja
mov
jl
fbstp
shl
push
stos
pop
lock
push
sti
(bad)
loopne
loope
jp
xchg
loope
push
retf
xchg
rol
lods
inc
ja
mov
outs
adc
pushf
mov
cli
jnp
mov
fst
or
jecxz
mov
in
pop
sbb
inc
in
inc
jns
mov
fmul
jmp
mov
sbb
inc
cmp
jl
pop
mov
mov
pop
test
jb
cmps
mov
(bad)
dec
mov
jno
cmps
jno
mov
sahf
inc
in
xchg
jg
xlat
mov
mov
mov
das
mov
jg
mov
cwde
xchg
retf
popf
es
mov
cmp
sub
loopne
pop
sbb
push
mov
jno
xchg
mov
dec
fcomip
das
mov
jbe
jb
(bad)
xor
inc
and
mov
jnp
movs
jg
lods
xor
sub
jmp
jle
pop
inc
pop
scas
dec
sti
mov
xchg
inc
call
(bad)
out
sub
jge
mov
ja
xchg
mov
ds
sar
mov
fwait
mov
dec
push
sbb
xchg
jnp
(bad)
cmp
inc
or
fwait
test
dec
push
std
outs
leave
cli
or
pop
inc
iret
xor
sub
push
(bad)
adc
and
mov
jge
enter
lock
sbb
lea
mov
xchg
ins
in
js
out
test
xchg
cmps
mov
shr
test
fld
mov
cvtpi2ps
icebp
fld
ret
cmp
test
inc
jno
dec
sub
mov
out
(bad)
ds
jbe
jae
int
cs
and
add
and
sbb
add
retf
daa
dec
jae
(bad)
mov
mov
jne
xchg
mov
pusha
xchg
mov
adc
cld
pop
dec
sti
rcl
shr
mov
xor
retf
dec
fwait
movs
inc
lock
pop
cmp
sti
and
jp
aaa
adc
push
mov
xchg
shl
or
pop
add
pop
sbb
aas
nop
jle
inc
inc
mov
je
mov
ins
jmp
add
outs
pop
mov
pop
mov
xchg
fs
jno
std
retf
scas
and
loope
test
jae
mov
js
loopne
mov
rep
dec
mov
outs
out
lods
xor
cld
jmp
popa
cmp
adc
cmps
dec
sub
mov
fbld
cli
or
xlat
pop
push
pop
xor
and
sbb
and
add
fdiv
test
and
sub
fild
repnz
pop
data16
fimul
in
loope
loope
dec
sub
div
adc
mov
cld
rcl
sahf
push
jecxz
cmps
dec
pop
cs
out
xlat
pop
cwde
xor
jg
mov
outs
push
clc
inc
aas
push
fwait
movs
rol
sub
dec
loop
add
adc
jl
cmp
or
imul
and
cmp
stos
(bad)
xor
push
dec
out
call
jb
dec
outs
pop
lods
inc
jmp
pop
retf
xchg
pop
aaa
mov
mov
imul
cli
cwde
cwde
jecxz
and
xchg
jb
sub
cmp
aaa
out
xlat
iret
push
into
aaa
jo
outs
scas
pop
dec
dec
mov
pop
test
pop
scas
inc
jmp
pop
add
pop
sub
adc
sub
cmp
pop
imul
sbb
dec
cmp
cmps
dec
mov
jbe
stos
pop
aad
repz
les
and
(bad)
xchg
jecxz
and
ja
test
shl
shl
inc
outs
fwait
scas
dec
xchg
push
test
pop
loope
jle
outs
cmps
sbb
pusha
mov
outs
xchg
mov
pushf
or
sar
cld
pop
sbb
aas
fist
(bad)
sbb
mov
mov
fisttp
fdivr
jne
retf
sbb
jge
mov
pop
(bad)
xchg
push
loope
inc
push
lods
push
xor
arpl
enter
in
inc
mov
mov
fs
lock
inc
lock
xchg
pusha
jecxz
(bad)
add
imul
lods
pop
fidiv
jl
popa
fwait
daa
jg
mov
ins
pushf
xchg
movs
xchg
xor
jle
out
push
mov
jge
jno
fnstenv
sbb
and
push
mov
mov
jge
mov
sbb
push
inc
in
mov
aad
pop
jnp
jg
fmul
dec
xchg
sar
ror
cmps
shr
inc
outs
mov
pushf
add
cmp
mov
mov
cmp
cli
cld
fistp
pop
push
or
test
sbb
jbe
mov
nop
das
fild
sbb
aad
push
jno
call
xor
pop
mov
mov
inc
xchg
test
jmp
xchg
sbb
sbb
push
xchg
push
in
popa
es
out
daa
in
ins
xchg
mov
jne
mov
adc
ret
mov
lahf
outs
retf
sub
cmc
in
push
fisubr
push
or
les
pop
test
aas
mov
jbe
pusha
pop
mov
sbb
add
or
cmps
push
jae
mov
xor
or
fdecstp
xchg
add
pop
jnp
jo
mov
dec
pushf
scas
cdq
push
out
xchg
jg
rcr
mov
mov
popa
lods
call
not
imul
or
sub
int3
icebp
pop
cdq
sub
adc
dec
add
mov
stos
cmp
lods
pop
call
jbe
imul
or
in
jl
stos
push
cmp
and
cmp
(bad)
xchg
dec
into
aad
fsub
push
sahf
pop
hlt
fadd
and
mov
sbb
cmps
xor
xchg
xchg
stos
cmc
sbb
xchg
adc
jmp
mov
sub
adc
sbb
cld
fistp
inc
push
aaa
push
scas
xor
popf
inc
inc
add
xchg
iret
xchg
cmp
lea
mov
inc
enter
push
adc
addr16
mov
popa
mov
mov
in
cmps
xchg
add
pop
push
test
addr16
iret
xchg
pop
call
repz
sub
xchg
xchg
xchg
push
aaa
fcomip
test
loopne
outs
mov
xor
dec
loop
rol
add
arpl
adc
stos
inc
cs
call
sbb
mov
xor
imul
aaa
add
rcr
call
loope
jbe
mov
inc
loope
lahf
dec
(bad)
sahf
popa
and
(bad)
test
sbb
push
sbb
stc
test
jecxz
ins
jmp
inc
call
pop
rol
fild
inc
sbb
mov
inc
sbb
les
inc
jmp
dec
add
push
sub
mov
mov
shr
stos
outs
pop
mov
test
aaa
and
fist
(bad)
pop
jb
mov
pop
cmps
in
jecxz
pushf
xchg
jno
std
retf
mov
cli
scas
ret
je
sbb
sbb
leave
push
sub
aam
test
pop
cmp
xor
push
pushf
movs
leave
xchg
sbb
inc
out
xor
aaa
leave
xor
jg
adc
push
jo
adc
dec
pop
sahf
mov
cmp
sub
sahf
jmp
setnp
pop
out
je
stos
cs
rcl
xchg
(bad)
cmps
pusha
mov
mov
aad
cli
mov
jnp
jecxz
adc
fsub
dec
add
lods
ss
scas
cmp
sbb
ror
push
call
mov
outs
push
lahf
imul
mov
mov
repz
push
and
cmp
jb
sbb
pop
dec
mov
jle
lods
div
xor
ins
in
test
lock
jge
lahf
jo
mov
pushf
ins
loopne
jge
in
retf
lock
call
sbb
aaa
fyl2x
mov
loop
add
add
fsubr
sub
iret
fcom
data16
push
push
pop
cmps
and
jg
dec
cs
cwde
mov
pushf
cli
das
mov
jbe
jb
mov
sbb
add
sar
inc
in
mov
and
int
cdq
adc
push
xchg
sahf
out
popf
in
or
mov
xchg
push
in
not
neg
test
push
xchg
xchg
mov
mov
lock
scas
lahf
xor
sub
cli
cld
xlat
je
cmp
stos
or
xchg
and
fnstcw
vmovntps
dec
ret
xor
sub
lahf
adc
or
mov
cli
and
daa
jl
mov
aaa
stos
leave
jb
push
inc
fild
shl
xchg
in
arpl
mov
mov
into
ins
xchg
movs
lods
rcl
lock
adc
test
test
sbb
sub
(bad)
lock
xor
inc
es
mov
mov
and
dec
in
repnz
add
inc
xor
mov
inc
push
mov
movs
cmp
and
jno
mov
adc
div
addr16
shr
mov
imul
mov
cmc
cli
add
stos
push
pop
sti
xchg
or
lods
push
idiv
cmp
fild
dec
jo
pop
les
pusha
lea
movzx
mov
pop
jmp
inc
xor
adc
adc
ins
arpl
inc
in
mov
cmp
pop
leave
sti
add
jle
lods
jg
mov
mov
rcr
xchg
idiv
jl
in
pushf
add
retf
test
cmp
lods
stos
dec
retf
dec
sub
aam
iret
push
lock
push
pusha
es
data16
call
mov
cs
lahf
clc
push
push
pop
add
adc
cmps
pop
pop
movs
dec
dec
movs
cmp
test
inc
out
sti
pop
shl
add
pop
pop
and
hlt
inc
mov
mov
xchg
retf
outs
mov
push
pop
and
or
pop
js
fld
pop
out
cmp
xlat
lock
arpl
mov
inc
cmp
xchg
mov
cmp
sbb
cmp
pop
push
jp
cmp
gs
mov
sbb
scas
and
das
ins
int
xchg
and
jmp
push
idiv
cmps
ficom
xchg
adc
jg
lahf
mov
pop
mov
fs
mov
push
xor
jmp
jmp
sub
jg
aaa
sub
jbe
cmp
sub
cmp
sub
mov
fisttp
(bad)
jl
(bad)
jnp
jns
lds
adc
das
mov
ret
xchg
adc
mov
or
loop
lods
sti
or
je
jb
inc
icebp
sahf
jmp
push
loope
popa
and
rol
and
xchg
pushf
pushf
jl
sub
imul
stc
in
xlat
inc
sti
inc
jnp
pop
mov
fs
or
mov
test
push
sbb
outs
clc
out
or
clc
popaw
jno
int
pop
jge
cmp
jle
fdivr
mov
jb
into
cld
xor
int3
xchg
lods
sti
pop
icebp
outs
jnp
mov
inc
inc
mov
out
js
in
(bad)
repnz
mov
push
mov
xchg
xor
into
rol
mov
stos
ds
aam
dec
clc
ss
cmp
cmp
imul
icebp
or
daa
fiadd
ja
cmp
mov
pusha
ret
mov
outs
cdq
test
inc
enter
xchg
out
jl
bound
inc
fbld
repz
pop
mov
cmps
sbb
mov
mov
retf
cmp
xchg
popa
xor
ret
jmp
aad
inc
mov
dec
inc
dec
iret
lock
pop
jo
dec
lods
addr16
inc
mov
or
sbb
push
lock
call
or
adc
mov
cwde
xor
imul
je
mov
pop
not
xchg
xor
sbb
fbstp
retf
(bad)
(bad)
inc
xchg
aam
inc
retf
in
daa
in
test
ins
scas
(bad)
pushf
jmp
out
movs
push
daa
cld
jmp
(bad)
inc
outs
mov
inc
retf
push
cld
cmp
aaa
(bad)
lock
xchg
pop
sub
test
dec
sub
mov
dec
leave
shl
xchg
clc
jp
pop
add
sbb
jo
cmp
data16
scas
push
xor
cs
push
dec
jecxz
in
fwait
stc
jno
outs
addr16
mov
inc
and
jns
cmc
movs
mov
sbb
sbb
stos
pusha
aaa
(bad)
cld
xor
pop
outs
mov
jmp
cs
fisttp
cmp
inc
pop
outs
scas
mov
ret
or
arpl
push
je
or
pop
(bad)
jl
scas
and
or
inc
push
cmp
mov
pop
xor
push
stos
jne
mov
lahf
push
out
inc
add
xlat
xchg
clc
ins
xchg
inc
ja
call
cld
dec
xchg
outs
shl
inc
push
enter
(bad)
adc
pop
jl
mov
cs
lahf
fwait
int
xor
jle
jmp
xchg
into
sbb
les
gs
adc
and
fistp
mov
push
popf
lods
mov
sbb
dec
int
popf
xor
jbe
lods
push
fstp
xchg
push
retf
mov
adc
pop
sub
inc
xchg
xchg
test
xor
fdiv
cdq
aad
xchg
pop
cld
and
shr
or
test
je
dec
sub
cwde
cmp
dec
cmc
jbe
inc
ds
xor
jns
adc
iret
adc
dec
cmp
stc
add
call
jmp
jo
movs
loopne
cmps
jmp
jo
cmps
inc
push
cli
ror
mov
push
movs
les
xchg
retf
inc
mov
inc
xchg
sub
fmul
inc
in
xor
pop
stos
addr16
mov
inc
mov
add
mov
jae
inc
cmp
daa
xor
and
mov
je
xlat
mov
jmp
sahf
cmp
pusha
push
fld
mov
xchg
push
fcomi
xchg
pop
test
test
jns
mov
outs
aaa
jmp
dec
js
(bad)
xor
jp
sub
xor
into
mov
xchg
add
or
push
mov
or
ss
pop
jmp
data16
sbb
adc
cmc
inc
mov
fdivr
mov
jl
into
std
(bad)
push
inc
out
xchg
aaa
mov
inc
outs
mov
dec
mov
xchg
je
fwait
jns
(bad)
test
out
add
in
in
add
mov
sbb
fsub
push
mov
cmps
sub
loope
fist
pop
ja
arpl
or
(bad)
mov
pop
shl
test
mov
add
fs
mov
arpl
xor
leave
fdiv
loop
(bad)
mov
cmp
mov
adc
movs
mov
retf
add
sahf
push
lods
mov
xor
out
imul
mul
and
dec
cli
jbe
adc
ss
lock
add
add
addr16
pop
xchg
push
or
fwait
int
pop
and
ins
loope
or
sbb
xor
jo
adc
outs
fs
jp
movs
sub
cmps
mov
pop
sub
shl
inc
(bad)
test
xor
(bad)
repz
xchg
repnz
jbe
mov
add
div
adc
push
neg
retf
popa
ja
mov
push
es
icebp
cwde
aam
and
icebp
call
sub
icebp
enter
gs
mov
inc
sbb
test
push
cmps
dec
sti
leave
jno
ret
pop
push
js
int
ins
je
aas
mov
imul
mov
pop
in
shl
sbb
int
add
or
lock
xlat
mov
loopne
jno
mov
mov
test
push
test
in
mov
ds
mov
rcr
sub
int
std
cmp
xor
pop
fadd
jge
mov
add
test
inc
sti
(bad)
jg
jmp
ins
jo
add
sub
adc
imul
push
popf
mov
ins
(bad)
pop
mov
ja
ins
jo
stos
pop
jecxz
(bad)
pop
cdq
retf
fst
lods
pand
mov
test
cmc
mov
pushf
aam
bnd
sub
pop
cli
in
fisub
add
dec
test
jnp
jns
mov
ret
cmp
std
add
cld
pop
dec
pop
xor
add
mov
pusha
call
mov
and
dec
js
fild
fnstcw
stos
pop
fadd
test
jmp
push
jecxz
movs
xchg
mov
push
lods
mov
repnz
(bad)
ds
mov
sub
int
aad
cdq
and
outs
inc
jnp
ins
ds
call
(bad)
arpl
add
xor
sub
notrack
mov
xchg
adc
xchg
fld
test
cmps
or
jmp
sub
in
sahf
push
xchg
xchg
imul
jmp
xchg
neg
ret
popa
je
popf
out
adc
repnz
stos
jmp
push
fisub
cmp
je
pop
cmps
or
jo
push
or
mov
stc
push
xchg
je
inc
push
enter
punpckldq
sub
mov
inc
test
out
dec
mov
dec
dec
mov
hlt
mov
xor
out
or
shl
scas
mov
mov
mov
pop
(bad)
mov
mov
xor
sbb
daa
push
push
inc
fsubr
std
gs
xchg
stos
call
stc
add
mov
or
adc
pop
pusha
xchg
mov
stos
or
int3
test
ror
mov
mov
mov
repz
dec
ss
fst
xor
mov
stc
leave
mov
mov
(bad)
xor
enter
sbb
jno
inc
xchg
outs
jmp
dec
out
sbb
aas
jmp
inc
enter
pop
mov
jno
mov
ins
aam
xchg
xchg
sti
pop
pushf
dec
dec
push
lods
pop
jmp
dec
in
mov
cld
and
mov
call
xchg
fcomp
fwait
scas
push
lea
sub
cli
in
mov
clc
cmp
sub
imul
mov
stc
call
sbb
adc
sbb
test
xor
ins
pop
or
retf
mov
mov
jg
mov
mov
dec
cdq
std
loopne
xchg
nop
jno
std
ror
mov
jg
xchg
mov
and
jmp
pop
fs
adc
sub
fistp
dec
je
dec
mov
inc
cs
xchg
lods
mov
cmp
mov
xor
and
adc
fwait
push
mov
mov
jg
retf
cmp
daa
mov
push
ret
inc
scas
jle
shl
mov
stos
pop
pop
(bad)
hlt
xchg
xor
dec
movs
cld
cmps
aam
mov
xchg
xchg
push
ds
cmps
dec
out
fcom
sub
fsubr
shl
pop
inc
push
dec
fistp
je
dec
cs
stos
mov
dec
dec
or
sbb
pop
ja
xor
mov
pop
bound
data16
mov
jmp
pushf
pop
pop
push
mov
push
call
nop
ja
std
clc
nop
sbb
js
mov
add
fwait
xchg
add
sti
imul
in
mov
push
pop
(bad)
sub
xchg
xchg
test
mov
sub
or
xchg
mov
ins
out
int3
add
sub
mov
mov
scas
jl
sar
and
sub
shr
xor
js
test
repz
cli
dec
xchg
xchg
addr16
xchg
jno
jmp
mov
inc
jne
mov
loop
iret
(bad)
jle
mov
inc
call
icebp
enter
arpl
pop
mov
sub
dec
mov
push
iret
js
xchg
push
mov
inc
imul
and
jge
cmc
cmp
mov
inc
test
in
fst
mov
pop
push
lods
push
repz
fistp
in
cmps
dec
loopne
jbe
jmp
test
movs
stos
mov
test
mov
fwait
scas
jb
pop
fst
cs
cld
iret
push
out
sbb
popa
cmps
pop
push
loopne
pop
bound
aas
retf
pop
jmp
pop
cmp
add
push
or
pushf
daa
mov
(bad)
jp
aad
je
scas
(bad)
push
daa
or
iret
call
xchg
data16
pop
jbe
pushf
and
movs
repz
xchg
idiv
fbld
lods
mov
push
push
sti
fdivp
sbb
mov
cmps
push
lea
sub
stc
in
iret
push
shr
push
sahf
pusha
add
xchg
mov
xchg
es
mov
cli
xchg
xor
sbb
daa
es
adc
pop
ins
mov
push
jmp
dec
aas
(bad)
adc
sti
jbe
inc
pop
pop
mov
xchg
fstp
xacquire
mov
push
into
in
or
sar
jg
loopne
std
adc
lock
(bad)
jecxz
jle
scas
ins
jecxz
(bad)
ds
xchg
in
imul
test
ins
push
movs
inc
sub
xchg
mov
ins
cli
xchg
jno
xlat
jo
push
into
xor
imul
mov
js
mov
test
jg
mov
dec
out
iret
pushf
and
dec
jne
mov
add
fs
out
xchg
ins
mov
add
rep
add
push
test
inc
ja
mov
push
xor
in
cld
loopne
ins
xchg
test
in
in
cmp
stc
fucomi
inc
jecxz
inc
js
fnsave
js
inc
cmp
call
inc
cld
jmp
pushf
clc
dec
dec
inc
cmp
adc
(bad)
aas
nop
pop
mul
jne
pushf
add
mov
jl
shr
cli
dec
jle
lea
mov
out
in
jno
clc
(bad)
mov
std
sub
test
cld
fadd
mov
fidivr
pop
dec
jecxz
icebp
push
in
xor
outs
gs
and
mov
cmp
into
ins
sar
xor
sub
cmp
add
sahf
jno
lea
je
mov
fs
add
jns
popf
push
loope
lock
sahf
les
sub
shl
movs
rol
stos
push
xchg
lds
scas
mov
cmp
xor
stc
pop
jo
inc
mov
sbb
mov
jne
(bad)
sar
inc
into
pop
fwait
jmp
mov
jle
jns
leave
xor
pop
mov
mov
ja
movs
xor
idiv
aas
test
js
popf
pop
retf
arpl
in
xor
pusha
xchg
call
fwait
mov
jecxz
hlt
aam
outs
mov
shl
pop
cmp
repz
inc
push
push
dec
pushf
sbb
mov
cs
mov
retf
sub
rcr
pop
inc
sti
and
pop
and
popa
dec
mov
jge
cdq
loope
xor
inc
dec
xchg
inc
into
sti
push
cwde
ins
je
mov
dec
xor
push
iret
sti
mov
loope
xchg
(bad)
mov
fs
mov
aam
clc
retf
ror
cmp
or
shl
enter
inc
sbb
stos
sub
std
jbe
jp
mov
scas
aaa
sub
sbb
inc
mov
adc
jb
icebp
and
mov
xor
cmp
mov
(bad)
mov
cmp
fiadd
mov
xchg
fs
jg
clc
fisttp
fwait
scas
sar
jg
mov
shr
or
cmps
inc
lea
push
aaa
sbb
xchg
fld
inc
dec
push
inc
cmps
sbb
inc
sahf
xor
mov
jl
mov
mov
push
inc
fs
call
xor
rcr
rcr
mov
mov
jmp
xchg
xor
jns
and
adc
xchg
jno
cli
fnsave
test
ja
mov
xor
loop
int
push
dec
fdiv
push
dec
cs
icebp
in
sub
cmp
pop
mov
inc
push
jl
ror
loop
jns
enter
adc
pop
adc
add
push
(bad)
ds
outs
adc
sbb
aaa
and
retf
mov
pop
sub
sahf
dec
xchg
scas
xchg
inc
mov
test
shr
movs
scas
cmp
mov
sbb
aam
fcom
sbb
inc
into
xor
pop
gs
cdq
xor
jb
mov
xchg
xor
repz
call
bound
xor
pop
or
mov
mov
scas
jl
xchg
xor
sub
ds
xor
js
fistp
mov
xor
jmp
push
lock
xchg
add
push
xchg
in
shr
mov
xchg
idiv
es
xchg
ins
jecxz
fidivr
cs
jmp
push
aaa
pop
cwde
outs
imul
mov
aam
test
sbb
daa
in
cmp
add
adc
data16
inc
sbb
mov
(bad)
out
cdq
xor
arpl
push
in
leave
pop
cmps
mov
inc
in
push
or
rol
mov
sbb
popa
and
jmp
mov
or
fistp
xor
mov
dec
pop
loopne
or
xchg
scas
mov
out
addr16
jne
fiadd
fs
pushf
cmp
sub
jge
(bad)
push
cmps
das
jge
xchg
call
in
gs
jo
popf
dec
aam
hlt
xor
adc
out
xchg
mov
push
ja
mov
sbb
loopne
ret
adc
push
test
dec
stc
inc
jo
inc
mov
sbb
mov
jns
mov
stos
xor
iret
outs
out
in
or
sbb
cmp
imul
jmp
mov
cmp
fsub
jecxz
mov
shr
jecxz
je
adc
test
mov
imul
jbe
clc
hlt
xchg
xor
dec
stos
sti
cdq
shl
mov
adc
pushf
test
lock
call
sbb
xchg
retf
xor
dec
les
js
mov
ins
mov
scas
mov
inc
mov
in
into
add
cmp
adc
mov
adc
imul
mov
imul
in
gs
jae
mov
inc
mov
mov
xchg
add
add
mov
jg
mov
stc
mov
mov
push
lods
imul
ss
into
inc
sar
push
jge
sbb
push
mov
cs
stos
shr
loop
sbb
jp
in
sub
push
jmp
jb
sahf
jg
sbb
out
fistp
xor
push
popf
xchg
aad
mov
inc
sub
cmc
std
add
js
mov
js
xchg
lds
or
mov
sbb
add
in
pop
jne
dec
rcr
sub
mov
retf
xlat
pop
shr
xor
pop
mov
sbb
sub
imul
add
fwait
mov
shl
and
mul
push
add
sub
mov
popa
jmp
mov
mov
imul
sub
or
cmp
std
test
ins
fwait
scas
xor
sub
push
sub
in
push
jmp
pop
sbb
sub
push
pop
mov
into
mov
and
jg
xchg
cmps
clc
jbe
pop
xor
adc
add
outs
fs
xor
loope
add
dec
clc
cmps
out
xchg
frstor
inc
jno
mov
dec
test
clc
pop
dec
into
ret
fcom
test
or
xchg
stos
loop
add
sub
div
push
cmp
mov
push
in
and
pop
jl
lea
or
fmul
cmp
(bad)
sbb
sbb
xor
jo
(bad)
out
or
mov
push
nop
fst
out
mov
cwde
pop
outs
jb
push
(bad)
arpl
call
push
or
call
mov
add
mov
add
cmc
dec
inc
dec
iret
cli
fcom
pop
pop
inc
mov
push
lods
mov
inc
into
pop
icebp
rcr
xchg
retf
jne
pusha
sbb
xor
fwait
das
xor
push
mov
push
mov
arpl
leave
xchg
mov
jnp
mov
pop
mov
xchg
inc
(bad)
xchg
arpl
cli
rol
mov
outs
jnp
fwait
out
js
adc
(bad)
inc
jecxz
(bad)
cmp
mov
(bad)
pop
js
dec
mov
sbb
imul
inc
dec
cmps
movs
xchg
mov
jmp
jne
out
xor
sbb
mov
cmp
cmp
push
dec
dec
cmp
icebp
mov
retf
jge
jb
js
iret
aam
mov
xchg
fs
jno
(bad)
sti
cmc
sbb
jne
sbb
ja
mov
leave
shl
mov
mov
pop
xor
mov
fs
jl
test
pop
jo
inc
sub
lahf
mov
test
enter
jmp
push
gs
sub
sbb
inc
xchg
test
fprem1
cwde
cmp
sbb
jge
mov
mov
out
pushf
add
test
xchg
lea
call
xchg
mov
adc
(bad)
dec
ins
xchg
adc
fist
sub
call
jb
rcl
outs
test
imul
jmp
adc
ja
outs
and
or
mov
movs
ds
in
or
clc
xchg
daa
mov
outs
push
test
inc
fwait
les
add
rcl
cmp
mov
fdiv
leave
sti
dec
imul
inc
pop
xor
inc
push
rcr
or
mov
sbb
xor
mov
mov
dec
out
std
das
mov
add
pop
int
push
push
iret
push
out
outs
arpl
ja
mov
(bad)
retf
mov
jp
sbb
dec
mov
push
les
add
movs
lea
push
in
neg
clc
adc
inc
jo
mov
add
rcr
mov
sahf
stos
fs
push
dec
fcmovbe
rcl
adc
pusha
cmps
sbb
lods
dec
sub
pushf
cmp
icebp
or
sbb
es
addr16
add
ins
push
mov
pop
xchg
mov
ins
(bad)
jmp
inc
mov
inc
and
xor
xchg
je
(bad)
test
call
sbb
pushf
mov
(bad)
not
fisubr
mov
in
cmp
inc
clc
test
jg
scas
ss
push
sti
dec
ss
nop
mov
xchg
cmp
scas
push
cli
or
(bad)
jo
push
pop
mov
push
mov
imul
push
jp
into
in
das
push
cmp
cmc
lahf
aaa
mov
inc
push
xor
in
mov
cdq
je
(bad)
rol
mov
bound
call
cmp
cmc
ret
xor
push
cmovo
cli
cld
fistp
xor
inc
mov
pop
daa
jns
fwait
(bad)
or
addr16
pop
daa
aam
sbb
xor
or
mov
adc
fwait
mov
out
(bad)
adc
push
mov
and
mov
div
movs
pushf
ret
inc
sbb
ret
ficomp
pop
cmc
inc
(bad)
sbb
fiadd
or
ja
test
pop
pushf
inc
sbb
mov
aam
and
pop
out
add
int
push
or
add
inc
data16
imul
sub
mov
dec
in
xchg
adc
je
mov
arpl
xchg
inc
xor
int
mov
imul
add
fdiv
js
nop
aam
in
dec
in
das
cs
(bad)
sar
add
dec
call
ins
pushf
movs
xchg
stos
sub
dec
cld
jbe
pusha
xor
sbb
sub
xor
jns
xchg
addr16
sub
fsub
ret
xor
jge
ins
or
(bad)
out
loopne
inc
add
sti
popf
adc
push
xchg
test
cmp
jge
xchg
nop
retf
outs
loop
inc
call
cmp
fcmovu
jnp
dec
push
jnp
scas
adc
pop
mov
add
mov
shr
cwde
iret
push
inc
add
add
and
test
mov
fadd
cmps
push
cmp
imul
dec
(bad)
iret
mov
mov
pop
daa
lods
jb
iret
lock
in
xchg
cmps
jne
lock
mov
jle
xchg
mov
add
lock
shl
bound
call
sbb
or
es
cdq
adc
mov
cs
xchg
les
add
mov
inc
and
xor
push
pop
and
aas
cwde
and
pop
pop
movs
imul
cmp
xchg
(bad)
pop
jmp
mov
cwde
div
dec
sbb
dec
repz
repnz
test
cwde
ja
mov
and
mov
xchg
idiv
outs
lods
ret
xor
jmp
dec
adc
jp
adc
stc
icebp
fist
xor
cmp
loopne
or
xchg
stos
cmp
out
or
ds
xor
loop
xchg
and
imul
aaa
outs
popf
lods
cdq
xor
lock
ds
inc
push
mov
inc
inc
xchg
outs
xchg
cdq
arpl
rol
fwait
and
cmps
inc
jae
xchg
xchg
in
loopne
push
lahf
inc
retf
sub
adc
xor
jmp
inc
push
inc
adc
mov
imul
out
or
xor
xor
jo
sub
js
mov
je
test
dec
fprem1
xchg
add
in
inc
in
arpl
dec
lds
loop
(bad)
cld
add
(bad)
(bad)
cdq
push
jge
mov
ds
cwde
out
test
movs
inc
jecxz
hlt
cs
fcom
adc
sub
ds
movs
(bad)
xchg
or
inc
jmp
inc
and
add
pminsw
bound
bsr
(bad)
adc
sub
aam
xor
outs
jnp
test
mov
cmps
dec
xchg
xchg
addr16
cli
mov
jecxz
or
push
mov
fistp
mov
out
cs
cmp
jmp
dec
push
call
jge
xchg
mov
push
push
scas
sbb
sar
fidiv
jnp
test
jae
cmp
fistp
fadd
xor
mov
sar
aaa
mov
jne
imul
loopne
xchg
rol
daa
xchg
mul
mov
jp
mov
rol
xor
test
dec
sub
enter
nop
and
or
push
xchg
mov
mov
fcmovne
addr16
mul
inc
sbb
aas
xor
add
inc
ja
jl
mov
mov
ds
out
(bad)
cmps
sbb
sti
jp
popa
inc
mov
mov
mov
mov
mov
out
sbb
jp
mov
cmp
cmp
fs
xchg
clc
push
sub
out
jbe
add
pop
popf
adc
mov
jns
mov
stos
das
(bad)
sar
xchg
jp
inc
aaa
jmp
and
mov
popfw
mov
jb
test
inc
bnd
inc
xchg
mov
js
fcom
sbb
dec
mov
push
inc
xchg
mov
push
daa
dec
inc
lods
sub
ss
dec
push
sbb
in
callw
or
sub
pushf
dec
and
mov
cmp
gs
add
xor
add
lock
(bad)
pop
sub
adc
push
pop
in
icebp
xchg
sbb
push
jg
outs
fnstcw
test
leave
xchg
aad
mov
loopne
lea
inc
sbb
xor
jecxz
push
mov
adc
cs
out
fild
dec
jo
inc
cmps
cs
gs
pop
inc
scas
mov
repz
sbb
in
pop
inc
jb
(bad)
pop
sub
sbb
js
mov
pop
jmp
cmp
fild
add
mov
data16
xchg
popa
and
rol
mov
push
jg
mov
sbb
(bad)
inc
ins
mov
ins
shr
(bad)
dec
add
int3
(bad)
in
data16
pop
add
daa
jge
movs
push
call
jmp
xchg
into
jbe
pop
and
inc
push
das
xchg
push
jmp
push
xchg
push
push
xchg
mov
imul
dec
in
iret
mov
clc
je
push
test
mov
pop
mov
(bad)
jg
jmp
das
(bad)
xor
jns
mov
outs
xchg
mov
fmul
test
xchg
ror
dec
div
fadd
inc
dec
and
mov
inc
and
mov
pushf
cmp
retf
mov
mov
and
dec
imul
xchg
inc
mov
mov
outs
in
test
jecxz
cdq
adc
test
mov
dec
pushf
(bad)
cdq
adc
cdq
ja
rol
mov
mov
(bad)
xor
nop
add
fmul
xchg
call
ds
mov
inc
jmp
jle
dec
pushf
or
stc
ins
ds
sbb
out
icebp
push
mov
jbe
jp
mov
sbb
pop
pusha
cmp
dec
popf
lea
std
jmp
pop
pop
pop
stos
push
cli
movs
repnz
mov
xchg
js
mov
mov
inc
jle
xchg
mov
sbb
sub
jecxz
mov
clc
aaa
jnp
jp
adc
mov
or
and
jnp
fimul
ret
popa
dec
adc
xor
cmp
imul
mov
fs
aad
out
jbe
mov
xor
nop
inc
push
std
sti
cmc
adc
data16
dec
jne
mov
adc
cld
sti
xchg
fsub
cmp
lods
lea
xor
push
(bad)
ror
imul
mov
inc
add
call
jmp
popa
sub
inc
punpcklbw
xor
imul
cmp
(bad)
ds
dec
cmp
(bad)
mov
cli
pop
jb
test
pop
sub
jb
out
xchg
repz
cmp
mov
es
clc
test
xchg
cwde
dec
call
cmp
sti
add
jo
cs
inc
mov
fstp
out
nop
or
inc
(bad)
xor
push
and
mov
sbb
ja
scas
mov
fprem1
xchg
aas
(bad)
fnsave
push
push
ficomp
mov
cmps
push
std
call
mov
lods
stos
sbb
mov
aas
retf
mov
fwait
movs
sub
sub
or
addr16
sub
or
test
push
jg
cmps
mov
inc
jmp
js
push
ss
xor
xchg
sub
mov
pop
mov
cmp
std
dec
scas
sti
push
fs
test
mov
mov
cdq
jae
in
mov
in
neg
retf
outs
xchg
mov
test
cwde
inc
call
dec
cli
call
gs
test
pop
push
mov
jp
movs
movs
mov
fwait
cli
or
aas
cmc
cmp
ja
xchg
pop
mov
stos
push
xor
mov
call
stc
push
cld
inc
data16
inc
fwait
rcl
sar
nop
xor
jl
and
mov
cmc
icebp
cmps
retf
ins
mov
jae
dec
test
add
jmp
cmp
sbb
push
xchg
cs
pop
nop
cmps
mov
popa
ret
sar
adc
sbb
cmp
sub
sahf
jo
sbb
mov
and
xchg
cs
pop
jg
ss
test
(bad)
cdq
push
cld
xchg
jns
mul
mov
je
cdq
mov
ret
repz
sti
pop
adc
jbe
xor
(bad)
rol
jge
sbb
jg
inc
add
retf
ss
das
mov
pop
outs
inc
xor
xor
jne
xor
ds
jo
dec
arpl
cmps
shl
xchg
rcl
leave
add
test
sahf
xor
loop
adc
mov
xor
(bad)
mov
lea
dec
test
hlt
(bad)
hlt
rol
fmul
jnp
or
jbe
sbb
pop
les
cmp
call
cmp
mov
daa
cmps
xor
and
push
iret
or
gs
fild
xchg
or
stos
mov
and
fidiv
xchg
push
mov
push
sub
cmps
xor
js
sahf
rol
mov
mov
sbb
aad
out
call
out
fstp
cmp
push
mov
inc
sbb
mov
retf
xlat
dec
stc
int3
add
iret
and
imul
push
or
xor
or
xchg
mov
xor
inc
mov
bound
xchg
pusha
and
(bad)
mov
out
mov
(bad)
jmp
mov
xchg
aaa
sti
std
xchg
clc
lock
inc
mov
add
push
iret
pop
je
cmp
pop
or
mov
test
or
and
sbb
pusha
add
fcomp
lods
cmp
popf
mov
fsubr
imul
clc
xchg
mul
les
ss
or
js
test
add
stc
fmul
lods
aam
rcr
inc
dec
repz
iret
push
call
movs
sbb
mov
dec
icebp
mov
into
dec
stc
dec
test
jbe
jbe
mov
adc
imul
or
mov
push
test
and
xchg
add
xchg
imul
add
pop
sti
mov
inc
sahf
fcom
xor
dec
test
bound
mov
out
test
pop
imul
fisubr
sbb
in
push
loope
ja
dec
mov
dec
cs
mov
mov
cmp
pop
fcom
imul
add
and
jge
xchg
jnp
(bad)
sbb
mov
xchg
and
cli
in
cdq
adc
fs
inc
aad
loope
add
imul
mov
xchg
ins
xchg
xor
popf
mov
leave
out
scas
fimul
xchg
mov
out
retf
xor
sbb
(bad)
ja
and
dec
rcr
inc
mov
jle
lds
fsubr
and
clc
jbe
jae
loope
add
daa
xchg
adc
inc
dec
sahf
pop
sub
add
or
fist
repnz
jnp
mov
mov
outs
xchg
enter
jmp
jecxz
xchg
mov
sbb
loopne
(bad)
int
cmp
mov
ss
or
out
repz
add
push
xchg
pop
jg
mov
ins
out
fwait
int
dec
add
aas
cwde
jmp
arpl
sbb
jl
mov
pop
popf
mov
arpl
inc
fcmovu
jecxz
(bad)
cld
pop
cli
pop
jno
lods
pop
(bad)
mov
pop
xchg
mov
popa
or
les
xchg
pushf
iret
dec
mov
push
movs
test
xchg
loope
xor
mov
adc
(bad)
std
ds
xor
fs
jno
dec
mov
mov
mov
jmp
arpl
int
add
scas
sub
push
cmps
sbb
mov
jno
xchg
xchg
sbb
cmp
cmc
mov
sahf
std
push
loopne
outs
push
popf
push
div
call
in
adc
stos
scas
and
ins
adc
fs
mov
in
popf
es
mov
inc
add
jbe
es
pop
scas
xor
dec
cmp
xchg
mov
push
cwde
cli
sbb
xor
and
push
add
mov
stos
pop
ficomp
test
aaa
lods
sbb
xchg
mov
xor
pop
jmp
mov
mov
push
and
xor
nop
pop
sub
stos
xchg
bound
ret
cdq
mov
mul
mov
xor
das
sub
pop
out
cmp
ss
push
inc
pop
xchg
mov
into
push
std
xlat
or
and
and
push
mov
mov
je
test
xor
leave
xchg
es
add
lds
xchg
sbb
xchg
jge
cli
mov
mov
mov
bound
sar
clc
test
lods
inc
loopne
(bad)
ds
dec
jecxz
shl
add
ins
lods
imul
mov
int3
xchg
inc
inc
stos
pop
std
clc
add
and
inc
or
sub
add
imul
add
sbb
stos
mov
jl
fistp
repnz
jnp
test
cdq
fadd
xor
xchg
pushw
stc
in
push
scas
lds
cwde
sbb
xchg
icebp
leave
mov
jmp
push
fidiv
push
or
icebp
leave
push
sar
cmp
cmp
mov
mov
sar
stc
sbb
and
add
add
fs
inc
and
sbb
stos
mov
cmp
retf
mov
fsub
sub
and
(bad)
lahf
dec
out
popa
es
xchg
sti
js
xchg
fs
cld
push
adc
leave
or
adc
cmp
ds
icebp
mov
push
jno
aaa
je
dec
push
lahf
lds
pop
loop
daa
ret
inc
ja
fstp
ins
addr16
int3
jns
mov
cmps
cmp
lahf
xor
dec
cmp
scas
test
shr
cmc
dec
jge
mov
push
xchg
mov
jbe
cli
in
sub
pop
xchg
movs
stos
rcl
jbe
mov
repz
in
loop
in
hlt
outs
js
cwde
dec
mov
adc
int
fbstp
and
cmp
mov
add
xchg
call
out
adc
test
sub
cmp
frstor
add
movs
sbb
shr
sti
xlat
xchg
in
sbb
jns
and
pop
shl
test
loope
adc
jecxz
sbb
mov
out
lock
inc
outs
xchg
mov
or
fild
sub
jnp
mov
imul
sbb
fisubr
sar
mov
push
ret
and
pop
bound
pushaw
cmps
push
and
in
xor
mov
nop
hlt
popa
sar
push
mov
dec
cmps
(bad)
sahf
ja
xchg
jno
in
(bad)
mov
std
scas
aad
lea
test
and
and
idiv
fnstcw
sub
or
adc
cwde
aaa
cmp
mov
jmp
gs
dec
sub
jmp
inc
or
adc
xchg
test
in
(bad)
xchg
xor
sbb
popf
jb
mov
dec
xchg
loope
jne
in
cs
mov
mov
data16
mov
cmova
dec
jne
mov
add
ret
inc
pop
and
pop
ins
push
dec
dec
cdq
sahf
xchg
mov
call
push
and
xor
mov
mov
lods
push
add
mov
rcl
repnz
jbe
mov
dec
mov
xchg
jg
stc
sti
xchg
cmp
bound
fnstcw
call
cdq
ret
pop
xchg
fld
push
sti
daa
cmp
ss
dec
mov
arpl
push
inc
psllw
cli
add
inc
push
or
push
sub
or
fiadd
xlat
dec
pop
xchg
cwde
mov
sbb
pop
les
push
aam
push
pop
mov
dec
mov
cld
add
repnz
movs
sub
inc
hlt
cli
mov
arpl
xchg
fadd
mov
pop
cmp
aam
inc
jmp
jo
pop
cmps
xor
and
mov
mov
add
clc
jl
test
xor
inc
nop
jne
addr16
pop
and
xchg
sbb
dec
in
scas
fwait
ror
mov
out
loope
pushf
rol
and
movs
mov
mov
mov
ja
mov
push
add
pushf
cmps
test
dec
popa
mov
stos
sub
enter
xor
pop
jp
pop
outs
push
cdq
xor
jns
mov
repz
or
and
xor
jo
sub
outs
pop
lods
push
pop
movs
cmp
lods
test
out
inc
bnd
pop
jns
mov
dec
cmps
les
adc
xlat
lods
jnp
ins
or
stos
aas
sbb
test
in
cdq
cmp
lea
push
retf
dec
fcomp
repz
mov
inc
sub
mov
stos
stos
sub
xchg
clc
arpl
inc
mov
pusha
jmp
fstp
test
mov
jns
scas
xchg
xor
idiv
outs
inc
push
mov
and
mov
jne
retf
jnp
ins
adc
test
cmp
xlat
out
cld
mul
xchg
xchg
dec
jmp
hlt
sti
jbe
sbb
cmp
mov
imul
lea
test
pop
inc
jb
mov
and
add
and
inc
jo
push
and
sbb
inc
ret
aas
(bad)
clc
jo
jne
jp
pop
call
cmps
jmp
rol
mov
dec
ja
mov
ds
mov
xchg
jmp
sbb
scas
xor
fsubr
rcr
sub
sub
fs
xchg
jo
mov
xchg
and
call
sar
arpl
adc
mov
nop
adc
inc
mov
push
fnstsw
add
ret
clc
addr16
xchg
inc
out
adc
outs
repnz
aad
mov
mov
adc
stc
cwde
cli
fild
mov
int
sub
call
lock
inc
push
jge
stos
cmp
inc
adc
cs
outs
out
sar
mov
dec
xor
xor
scas
ins
fdivr
mov
inc
lahf
mov
inc
lahf
fsubr
shl
popf
push
lock
bound
xchg
pop
adc
rol
xchg
stos
xlat
xor
jmp
aaa
div
xchg
(bad)
es
lods
inc
out
not
cs
cli
fld
cmp
pusha
call
adc
shl
xchg
ds
arpl
sbb
cmp
pop
imul
mov
mov
push
stos
mov
xor
(bad)
mov
in
inc
and
and
call
aad
fwait
call
mov
xlat
hlt
lea
dec
(bad)
jg
xor
sbb
fisttp
push
jg
push
or
mov
call
add
jno
fstp
aaa
add
mov
mov
fsub
pop
jne
cwde
in
and
int3
jmp
pop
cmp
fisubr
sti
xchg
(bad)
addr16
call
rcr
out
cmp
std
js
into
xchg
mov
in
xor
cmp
jmp
push
mov
dec
and
mov
pop
in
xlat
push
stos
call
mov
cmp
sub
cmps
push
dec
rcl
scas
xchg
(bad)
adc
iret
inc
jmp
out
pop
ins
fiadd
lahf
(bad)
dec
cmps
les
adc
jle
lea
jnp
fsubrp
push
daa
cld
retf
xor
lock
xor
enter
push
sub
cmp
mov
call
ror
pop
xchg
hlt
je
jno
fnstenv
sbb
adc
imul
add
retf
cmp
pop
int
mov
xchg
cld
add
pop
jno
stos
jb
mov
jmp
xchg
dec
push
std
(bad)
cld
xor
add
lods
inc
dec
mov
out
push
xor
fist
mov
ficom
pop
daa
fcom
add
push
mov
ins
cs
push
mov
pop
icebp
rcr
push
cmp
adc
mov
stos
and
pop
bound
inc
xchg
mov
push
xor
fisttp
sar
jno
jo
xchg
shl
xlat
mov
loopne
jno
retf
aad
adc
inc
xchg
cdq
mov
lea
ret
or
mov
retf
inc
enter
cmc
out
mov
cmp
push
jo
es
outs
test
imul
stc
fs
push
mov
jno
push
int
sbb
xor
stc
imul
inc
retf
xchg
ror
les
jo
inc
jle
mov
pushfw
jecxz
dec
loop
add
aad
cmc
sbb
in
sub
mov
les
pushf
movs
sub
jle
push
or
xchg
(bad)
jae
pop
push
sub
inc
sahf
cs
outs
(bad)
mov
add
jae
ss
or
cwde
pop
mov
lods
pop
pop
mov
outs
stos
mov
ins
xchg
stos
xchg
inc
(bad)
hlt
je
sbb
fst
sub
inc
or
in
jnp
xchg
mov
add
xchg
pushf
test
mov
push
cs
cli
leave
fldenv
adc
pop
test
inc
stc
cs
adc
sub
jge
cli
and
add
sbb
push
mov
xchg
mov
xchg
ss
push
inc
ret
aas
xchg
fiadd
cli
inc
push
daa
mov
addr16
popf
inc
loop
pusha
push
rcl
mov
lea
btr
adc
fwait
mov
das
imul
fcom
xor
sub
gs
xor
pop
cdq
mov
mov
stc
fisubr
mov
pop
pusha
jb
int
adc
cmp
ds
and
dec
pusha
mov
add
mov
sahf
ficom
cmc
dec
add
popa
xor
outs
call
ror
stos
lds
pop
ja
mov
adc
mov
mov
les
sbb
lea
push
pop
ss
aam
push
out
jb
test
popa
lahf
aaa
xor
mov
ror
or
pop
push
ret
dec
xor
adc
scas
cmp
or
ins
bound
jne
shl
sti
lods
xchg
xor
push
jno
inc
repz
cmps
push
loopne
popa
sbb
test
shr
shr
mov
es
mov
cmp
fist
jae
ins
lods
sbb
mov
inc
cmps
mov
xchg
sub
in
daa
xchg
push
push
jns
out
sbb
adc
call
ss
sbb
(bad)
xchg
sahf
cmp
and
call
int
loope
inc
inc
xchg
sub
mov
inc
xchg
les
xor
rol
mov
jnp
xchg
mov
call
call
dec
jecxz
repz
inc
pop
pop
cwde
aaa
add
xor
mov
mov
cmp
jle
sar
loopne
sbb
or
or
sahf
add
fstp
rol
ja
fdivr
push
sbb
cmp
mov
pop
jae
mov
lock
sub
data16
nop
jb
imul
pop
jo
test
adc
lock
shl
dec
adc
xor
xor
jnp
and
cmps
pop
outs
pop
adc
fwait
retf
xor
int3
ins
popf
clc
or
sbb
cmp
jl
inc
mov
or
sub
movs
mov
pop
daa
pop
les
addr16
jge
mov
movs
aad
call
xor
shr
mov
imul
idiv
movs
cld
fimul
icebp
fcom
dec
scas
and
(bad)
cmc
pop
fisttp
pop
push
lods
sbb
or
mov
cli
jl
call
sar
push
sbb
retf
imul
jp
cmps
and
mov
jmp
jecxz
bound
mov
js
loop
je
mov
push
mov
mov
sbb
xchg
jge
xchg
mov
std
xchg
stc
retf
mov
cs
vpackuswb
or
inc
les
outs
jo
inc
sbb
xchg
mov
inc
or
mov
add
pop
push
imul
cwde
add
mov
in
xlat
mov
cmp
inc
enter
dec
jns
mov
pop
call
adc
fistp
mov
pop
jp
mov
les
lea
cs
inc
xchg
shl
inc
retf
pop
push
jnp
mov
jne
cdq
inc
or
mov
mov
cmp
jl
cli
jo
(bad)
jle
dec
pop
mov
push
mov
scas
or
inc
adc
or
sub
and
fadd
pushf
inc
inc
push
mov
js
not
xor
lds
mov
pop
ins
test
fcom
mov
dec
(bad)
pop
in
pop
xor
repnz
xchg
and
adc
mov
jns
xchg
lods
xchg
or
hlt
sbb
mov
inc
xor
mov
mov
ret
xlat
or
or
and
fisubr
popa
aam
inc
mov
pop
in
mov
not
mov
jle
stc
(bad)
jmp
mov
test
xor
(bad)
test
mov
retf
or
into
stc
cld
jbe
inc
jo
dec
scas
adc
mov
ja
lds
pop
call
dec
pop
mov
and
cmps
sbb
pop
adc
push
add
mov
cmp
dec
xchg
rol
and
shl
cdq
les
push
icebp
(bad)
cmc
and
je
neg
les
fsub
nop
xchg
scas
aad
inc
add
test
aaa
adc
iret
fsub
cmp
dec
test
push
clc
cs
jbe
(bad)
retf
leave
cs
das
movs
leave
jle
dec
and
xor
jo
sbb
jnp
stos
dec
inc
retf
mov
xor
iret
shl
inc
jno
test
xchg
lock
cmps
in
call
push
mov
or
dec
sti
enter
add
xchg
push
xlat
dec
inc
push
xchg
iret
fsub
(bad)
xor
pusha
pop
scas
daa
jl
test
pushf
mov
fdivr
add
ficomp
xor
sbb
ins
or
push
call
out
mov
mov
(bad)
aam
jnp
mov
arpl
shl
out
jnp
cli
movs
xchg
jp
outs
test
jb
mov
adc
mov
es
fisttp
push
jmp
in
cmp
and
mov
inc
and
scas
xor
stc
push
xchg
loope
inc
jno
mov
push
jmp
dec
dec
mov
add
cmp
in
aam
adc
jno
mov
dec
cwde
xlat
mov
mov
stos
das
in
lods
mov
jle
in
(bad)
xor
pushf
xchg
ret
adc
lahf
inc
retf
jb
xor
adc
fadd
jnp
add
jge
sbb
test
jp
mov
(bad)
cmp
call
mov
bound
add
outs
adc
pop
pusha
mov
jae
mov
call
jecxz
jb
mov
dec
cdq
loop
dec
in
mov
push
cmc
test
fcmove
push
sub
mov
call
xchg
xchg
mov
adc
inc
iret
add
push
les
outs
push
lahf
aaa
sbb
cmps
movs
retf
rol
lea
adc
cmp
ja
add
sub
mov
cmps
xor
call
(bad)
repz
imul
ds
xor
mov
xchg
fs
rol
xchg
ret
imul
test
(bad)
ins
imul
rcr
cs
mov
out
cmp
popa
mov
cs
mov
mov
(bad)
cli
or
inc
int
sbb
adc
sub
cmps
pop
ss
outs
mov
sub
in
mov
mov
popa
cli
inc
jb
mov
pop
loopne
mov
pslld
mov
fcmove
adc
test
xor
dec
pop
mov
inc
enter
cmp
fdiv
ret
pop
fistp
pop
add
arpl
stc
dec
ss
test
xchg
mov
in
pop
xchg
int
dec
jno
(bad)
ds
and
and
jg
test
jb
movs
mov
out
into
movs
inc
mov
add
dec
(bad)
xchg
fbstp
mov
mov
xor
hlt
xchg
cmp
ins
icebp
mov
jle
in
mov
daa
fsubr
sbb
mov
push
div
or
stc
loopne
and
sbb
push
sub
cmps
lods
or
sbb
into
je
add
jo
pop
mov
mov
sahf
jl
mov
and
pop
out
mov
hlt
sbb
mov
pop
(bad)
jmp
fs
mov
nop
pop
int
mov
add
xchg
xchg
ds
mov
test
sub
sbb
icebp
mov
cmp
ss
push
dec
ins
call
imul
das
mov
xor
in
sub
jo
mov
lods
mov
aas
fsubr
push
aam
jnp
popf
dec
(bad)
mov
cmps
push
cmc
les
movs
xchg
repnz
scas
cmova
dec
jnp
call
cs
(bad)
fsub
jge
sbb
test
bound
mov
loope
das
movs
(bad)
gs
pop
xor
cmp
add
sub
dec
sbb
sbb
dec
jl
clc
mov
mov
data16
dec
(bad)
movs
(bad)
jae
retf
in
mov
push
repnz
mov
jmp
mov
mov
test
aam
imul
stc
and
lods
pop
cld
add
pop
and
push
ss
jmp
inc
in
int3
add
xor
and
push
adc
lock
mov
cmps
xor
xchg
mov
and
xor
iret
mov
cmp
pop
mov
test
ror
push
lock
xchg
sub
outs
call
push
mov
icebp
shl
jmp
and
dec
push
push
pop
fcom
jg
mov
retf
pop
sub
jo
(bad)
pop
outs
inc
inc
mov
sbb
imul
sar
cmp
(bad)
xchg
sbb
(bad)
jp
pop
jae
fisub
mov
jnp
(bad)
xchg
dec
xchg
movs
pop
sub
sti
cld
add
jnp
mov
ins
pop
test
lock
lock
dec
mov
cmp
or
popf
cmp
sbb
mov
xchg
mov
jp
cmc
add
(bad)
je
mov
sbb
sub
pusha
mov
pop
xchg
scas
std
outs
aas
add
in
xchg
aas
mov
ja
outs
jae
lea
mov
xchg
fs
dec
paddsw
stos
xor
lahf
shr
jns
mov
sar
xchg
in
fild
mov
out
cmp
inc
xchg
and
jne
cmp
push
push
jp
cwde
test
sbb
pop
in
nop
xor
xor
mov
scas
sub
dec
ja
dec
dec
cmps
ds
mov
pop
hlt
mov
inc
mov
jo
nop
pop
dec
xchg
adc
xchg
js
mov
mov
(bad)
outs
stos
(bad)
fpatan
sub
pop
ja
mov
in
into
sub
xor
cld
fild
sbb
inc
mov
inc
pop
jo
les
push
pushf
int3
aas
(bad)
inc
pop
jns
loopne
adc
ss
cmp
jnp
lods
sub
fstp
out
xchg
adc
jno
mov
addr16
scas
cdq
push
out
jns
repnz
xchg
jnp
inc
xchg
xchg
shl
movs
stos
pushf
and
xlat
rcl
(bad)
fbstp
stos
adc
mov
jmp
arpl
push
mov
sbb
push
ja
and
pop
push
inc
and
or
jnp
shl
inc
mov
fdiv
pop
adc
mov
pop
xchg
int3
pushf
inc
out
mov
push
std
cmps
mov
out
js
cli
mov
jo
mov
cmp
jmp
pop
push
cmc
ret
jo
dec
aad
push
sbb
xor
pop
cwde
adc
mov
ins
mov
cmps
inc
test
jl
loope
push
arpl
fbld
or
cmp
xor
pop
xchg
xchg
cmp
into
in
and
fistp
loop
jbe
rcr
mov
pop
test
call
daa
mov
test
jecxz
mov
imul
ds
inc
outs
cmp
push
dec
mov
retf
pop
ret
ja
test
or
pop
stc
popa
jmp
inc
pop
mov
add
dec
dec
mov
jae
mov
cmp
xlat
mov
retf
arpl
popf
dec
lds
xchg
popa
aam
inc
or
stos
test
hlt
push
push
ret
mov
(bad)
stc
(bad)
out
ficomp
mov
fisttp
push
cmp
push
cld
xor
sbb
sbb
les
inc
fwait
dec
imul
je
and
dec
xor
and
xlat
mov
jmp
lock
imul
repnz
xchg
jmp
mov
test
popf
test
dec
mov
xchg
(bad)
jmp
cwde
dec
inc
outs
mov
cs
cmp
icebp
and
pop
pop
mov
inc
sbb
xchg
xchg
fwait
mov
jecxz
cs
cmc
jbe
jno
mov
cmp
arpl
sahf
pop
mov
mov
inc
dec
ins
cli
int
inc
mov
jae
test
and
adc
jmp
cs
cmc
out
sub
dec
sbb
add
(bad)
test
clc
push
lea
hlt
aaa
cmp
cli
dec
push
jmp
pusha
cmp
sbb
jle
inc
cmp
mov
scas
dec
sbb
gs
test
test
and
push
or
cwde
add
push
(bad)
jg
fisub
mov
xchg
xor
dec
shl
add
add
jle
lahf
loopne
mov
nop
js
fst
mov
outs
mov
add
xchg
test
xlat
test
mov
cmp
retf
inc
out
add
xor
pop
ja
mov
imul
aas
fcomi
rsqrtps
int
add
sbb
sub
or
and
cmp
or
and
fsub
and
sti
jp
jle
lea
mov
call
xchg
push
and
mov
lock
cmps
shl
mov
xchg
cmp
rol
inc
xchg
imul
fist
inc
gs
push
test
jnp
mov
fistp
neg
or
pop
hlt
inc
add
add
lods
das
mov
(bad)
add
stos
or
mov
test
rcl
push
add
fld
mov
pop
xchg
mov
jno
rcr
cmc
push
jmp
xchg
push
or
icebp
test
lods
test
cmp
sbb
push
push
inc
mov
data16
test
jo
les
push
in
repnz
xor
imul
push
or
popf
movs
(bad)
sbb
dec
cmp
jmp
dec
stos
shl
push
push
lods
push
popf
mov
mov
xor
mov
mov
lods
pop
inc
mov
lea
push
shl
(bad)
jle
lahf
mov
retf
xor
xor
ds
sbb
dec
outs
mov
mov
mov
std
stc
movzx
ins
inc
jno
in
push
fs
pop
push
cwde
sub
add
pusha
jne
ins
and
xchg
in
stos
cwde
and
(bad)
popf
dec
lock
xchg
adc
xchg
ja
int
stos
xor
lahf
sar
inc
add
stc
aam
(bad)
pop
ins
cdq
scas
xor
push
ds
repz
sbb
fdiv
pop
mov
ror
sbb
jns
std
addr16
jb
ficom
ja
or
push
pusha
mov
sub
sub
scas
stos
aaa
xchg
call
inc
stos
push
xor
outs
ret
mov
sbb
js
test
dec
pop
test
cli
cmps
xlat
fdivr
call
(bad)
dec
cs
retf
dec
push
cmp
fwait
cmp
cs
jge
retf
xor
scas
ja
mov
mov
inc
fnstsw
ins
jg
sbb
dec
push
mov
push
retf
mov
pop
inc
(bad)
int
pop
mov
ins
fimul
mov
cmp
mov
mov
out
jg
mov
je
mov
add
(bad)
stc
test
fist
mov
fdiv
stos
jbe
xor
push
dec
stos
pop
gs
imul
or
call
loope
adc
mov
jb
fist
or
sub
xor
js
fisubr
sbb
sbb
or
call
lock
stos
sub
mov
pop
pushf
les
xor
shr
int3
inc
cmps
mov
popa
gs
cmp
stc
xchg
dec
inc
jns
test
into
push
(bad)
sbb
ret
inc
pop
jnp
test
jns
pusha
out
sahf
scas
aaa
push
int3
js
hlt
sbb
sbb
ret
xor
add
and
arpl
pop
sub
add
xchg
mov
arpl
or
stos
test
mov
dec
cwde
inc
jge
pushf
imul
xchg
test
lock
mov
mov
ja
mov
xor
div
cld
cdq
dec
pusha
popf
lods
inc
repz
std
cmp
dec
in
add
cmp
les
inc
mov
mov
mov
repnz
add
cmp
push
xchg
or
sbb
sysenter
nop
cmp
xor
icebp
sub
outs
push
cmp
dec
loope
in
loop
jns
sti
movs
mov
cmps
call
mov
ss
repz
repz
cmc
adc
cmp
int3
fstp
cmp
sbb
lea
pop
je
mov
mov
call
jno
ret
dec
jl
xor
pop
xor
adc
mul
mov
mov
pop
xchg
mov
xor
adc
in
xchg
sbb
je
jns
push
lds
xchg
jne
cld
inc
add
aam
das
in
mov
push
sbb
(bad)
jle
fwait
xchg
push
out
and
(bad)
hlt
inc
cmp
pop
test
inc
inc
cmps
push
sub
mov
mov
sub
add
call
div
or
adc
sub
pusha
mov
xor
cwde
fwait
adc
dec
fstp
mov
iret
test
lds
xlat
dec
xchg
loop
push
std
call
in
sbb
mov
shrd
mov
mov
lock
sbb
repz
std
pop
js
cmp
mov
ds
mov
leave
mov
inc
stos
pop
sti
stc
add
and
pop
(bad)
and
sub
pusha
ja
push
cmp
cli
and
dec
ror
and
inc
arpl
dec
mov
xchg
jae
mov
mov
jecxz
mov
test
pop
xchg
xchg
mov
adc
icebp
sub
dec
push
push
fdiv
cmp
rcl
push
jge
mov
push
or
mov
mov
cli
lea
or
xor
sub
test
sbb
sub
bound
out
pop
lds
jl
das
(bad)
movs
enter
mov
pop
retf
movs
mov
push
mov
call
adc
(bad)
ds
xchg
scas
inc
xchg
push
(bad)
or
std
shl
or
pop
jl
mov
(bad)
mov
int3
jmp
imul
pop
sbb
cmp
mov
addr16
mov
jl
mov
adc
pop
push
scas
pop
cmc
test
fs
inc
add
(bad)
stos
das
in
mov
popa
pop
mov
shl
(bad)
retf
fs
dec
lds
inc
xor
stc
repz
stos
pop
jge
sahf
push
pop
dec
fwait
fwait
mov
dec
loopne
sbb
push
enter
jb
cmc
pop
mov
test
je
push
inc
retf
call
and
fbstp
idiv
lds
cdq
mov
inc
popf
scas
mov
ret
in
push
fnop
xchg
idiv
lahf
mov
add
jmp
sahf
movs
inc
out
push
idiv
retf
push
cld
xor
dec
lea
pop
sub
out
mov
mov
sti
shr
sar
fs
frstor
sbb
push
jl
das
mov
lahf
dec
pop
mov
call
or
fninit
add
inc
test
mov
inc
mov
test
test
sub
ins
xchg
dec
jno
mov
push
daa
xchg
(bad)
mov
mov
fwait
mov
sbb
xlat
sub
arpl
dec
fimul
jg
dec
inc
adc
call
jmp
sbb
sbb
sti
xor
and
pop
jo
push
xor
aas
inc
call
in
iret
movs
adc
outs
ds
and
mov
xchg
jl
xchg
jb
test
mov
pushf
rol
mov
lea
daa
xchg
cmc
mov
sti
dec
ins
lahf
stos
inc
les
ds
pop
call
inc
jne
xor
push
mov
jg
int3
add
aas
in
push
gs
cmp
push
mov
push
xchg
(bad)
call
mov
sahf
std
push
bnd
jno
dec
stc
rol
xchg
aam
dec
jmp
push
sub
js
lea
inc
mov
mov
test
lods
inc
in
fisub
or
loop
cmc
pop
dec
pop
sbb
pop
ins
push
mov
mov
mov
xor
or
call
jne
int
ss
jge
(bad)
das
mov
leave
pop
push
test
adc
(bad)
mov
aas
or
(bad)
(bad)
mov
lds
push
lds
test
xchg
jmp
mov
jecxz
sti
mov
jl
in
lea
das
aam
jmp
les
mov
dec
nop
js
cmp
into
inc
std
push
jo
dec
mov
inc
cs
call
out
hlt
jns
lea
add
aam
sub
add
ja
push
movs
sub
mov
pop
aaa
sub
frstor
loope
jbe
mov
dec
mov
xchg
gs
shl
sbb
add
mov
mov
sub
cmp
stc
xchg
repz
adc
cmp
cmp
mov
mov
ror
fild
rcr
inc
xor
and
cmp
mov
jae
mov
or
push
inc
call
test
mov
jbe
(bad)
adc
mov
push
xchg
jg
test
pop
bound
int3
ret
aad
pusha
cwde
mov
ds
mov
or
dec
inc
dec
fwait
mov
scas
imul
arpl
or
cmp
push
ds
xchg
aas
mov
(bad)
push
dec
mov
dec
inc
xchg
lods
neg
cmp
ins
xchg
fist
loop
inc
push
mov
xor
outs
repz
loope
or
fwait
pushf
mov
movs
in
jecxz
ins
cdq
stos
inc
test
mov
sbb
jg
arpl
icebp
fwait
sar
jmp
imul
jl
jmp
mov
mov
inc
call
fcmovu
movs
ds
imul
dec
lds
cwde
jo
mov
neg
xchg
jg
mov
retf
pusha
je
(bad)
fadd
popf
pushf
sub
jb
or
in
jae
addr16
pop
jns
test
jp
mov
out
inc
out
sbb
sbb
add
sub
lods
outs
xor
sub
int3
mov
xor
(bad)
push
dec
push
xchg
(bad)
jns
in
test
xchg
xchg
arpl
stc
stc
lahf
xor
jl
cdq
mov
cmp
aas
das
enter
icebp
arpl
scas
dec
loopne
(bad)
add
repnz
in
push
pusha
xor
inc
cs
mov
mov
out
arpl
xor
or
push
or
sub
inc
dec
test
ins
mov
ins
ror
daa
xchg
mov
jge
je
ja
mov
outs
mov
test
or
rol
mov
adc
pop
inc
in
mov
pop
int
out
test
jle
icebp
mov
push
or
push
call
test
inc
cs
mov
xchg
ss
ins
fiadd
cmp
fs
out
sbb
js
or
data16
mov
xor
lahf
sar
cwde
inc
dec
je
imul
mov
loop
pop
sub
sti
cmc
push
out
stos
stos
xchg
mov
test
popf
popf
mov
adc
aad
fisubr
cli
cld
fist
aas
js
pop
cmps
xor
sbb
mov
jmp
xchg
call
int
aas
ja
aas
popf
and
mov
xor
mov
and
pop
imul
push
sti
js
cmp
outs
jmp
aad
sub
adc
out
repz
push
cmp
sbb
test
movs
fprem
inc
imul
ficomp
or
jmp
pop
bound
cmp
rcl
mov
jp
push
into
xor
jge
adc
push
stos
cmp
cli
cs
dec
fidiv
sbb
pop
jle
scas
jle
mov
push
not
adc
or
ja
rol
(bad)
pop
inc
loop
ins
jmp
cmp
jmp
jae
jge
jne
inc
test
imul
retf
dec
out
hlt
or
mov
pop
xor
adc
inc
pop
pop
cwde
sub
inc
shr
arpl
sub
in
lahf
daa
mov
rol
test
push
jmp
add
adc
dec
mov
mov
adc
rol
dec
jmp
std
push
and
not
inc
cmp
dec
pushf
sbb
sahf
push
daa
ins
lea
rol
clc
or
add
pop
adc
xor
mov
sub
xor
mov
imul
jb
pop
jb
test
cmc
cmps
loopne
pushf
shl
and
stos
mov
repnz
test
mov
enter
test
sub
sub
fdivr
aam
lds
jne
fnsave
push
imul
add
stos
xor
scas
sbb
retf
js
pop
add
or
ja
adc
push
rol
add
xor
rol
cli
fs
and
mov
cmp
scas
adc
mov
mov
popf
popa
xor
cli
sbb
movs
dec
jecxz
mul
pop
ds
stc
clc
jbe
add
jle
daa
dec
fs
pop
pusha
jmp
sbb
cld
ds
sbb
cmp
add
jle
bound
dec
xor
mov
xchg
iret
test
sbb
(bad)
dec
xchg
rcl
and
aam
jnp
adc
adc
mov
aaa
sti
(bad)
mov
mov
ficom
inc
mov
std
je
sbb
inc
test
pop
jbe
inc
and
mov
lods
mov
fadd
fs
iret
cmp
jle
push
mov
lods
ja
push
sbb
ja
xchg
sahf
bound
inc
fadd
mov
cmp
movs
popa
clc
mov
addr16
cdq
dec
xchg
mov
mov
xchg
push
mov
push
and
aam
mov
fimul
xchg
xor
push
repz
pop
xlat
sti
scas
pop
int
sbb
dec
mov
or
fwait
mov
jecxz
jnp
hlt
pop
jo
inc
hlt
inc
add
or
das
xor
xor
mov
fstp
mov
mov
jle
inc
pop
pop
xchg
inc
idiv
xchg
dec
out
jns
hlt
sti
hlt
push
out
test
cmps
ret
je
test
jecxz
retf
sbb
into
ds
cs
cmc
repz
lods
jne
xchg
pop
xchg
mov
stc
ins
cli
sar
lock
ja
cmp
sub
imul
or
pop
push
fnstsw
movs
cmp
lods
cmp
pop
dec
out
mov
mov
pop
les
cld
mov
aas
xchg
rcl
hlt
sti
hlt
adc
mov
bound
std
jecxz
stos
test
pop
in
cmp
in
push
xor
cmp
imul
ds
xchg
mov
lods
cmp
jmp
xchg
in
jle
inc
push
cld
and
pop
and
mov
mov
mov
arpl
and
daa
mov
add
sub
shl
test
xchg
movs
xchg
ins
xchg
pop
xchg
mov
jl
in
add
(bad)
dec
popf
sub
fsubr
push
sub
lea
dec
mov
xor
push
jmp
lods
mov
enter
mul
pop
aaa
into
pop
pop
inc
add
fldenv
mov
mov
test
out
test
loop
jbe
stos
pop
repz
inc
test
stos
sbb
in
xchg
add
push
adc
mov
pop
xor
retf
sbb
fidivr
cmp
mov
lods
pop
xchg
pop
push
pop
stos
outs
arpl
push
daa
pop
lahf
xchg
mov
pop
jmp
pop
push
popa
and
cmp
jnp
and
aas
mov
test
aaa
lahf
push
addr16
mov
sti
aad
and
jno
mov
ins
cwde
not
push
xchg
mov
xchg
mov
dec
je
(bad)
xchg
push
xor
out
(bad)
dec
adc
movs
jnp
push
clc
or
cli
vdivss
sbb
dec
pushf
arpl
dec
inc
psllw
cld
imul
dec
jbe
ret
je
add
sbb
cmp
cmp
mov
pusha
int3
out
mov
mov
jp
inc
dec
gs
pop
mul
mov
loopne
arpl
enter
loope
or
jmp
pop
xchg
shl
test
das
push
or
jmp
jp
addps
imul
xor
fild
ret
pop
cwde
xchg
je
jae
cld
aas
ss
or
in
inc
mov
ficomp
mov
push
xchg
mov
dec
enter
mov
jae
stos
xor
mov
aas
xchg
(bad)
pushf
adc
xchg
jns
not
mov
jecxz
mov
stos
bound
fwait
test
add
sbb
fld
cmp
dec
push
lock
sbb
pop
sar
pop
push
mov
jle
movs
xchg
lea
pop
aad
(bad)
retf
into
jne
pop
sbb
inc
jae
and
cmp
inc
lods
jl
cmp
outs
inc
and
repnz
xor
sbb
xchg
jle
mov
pop
sahf
icebp
lahf
dec
int3
movs
push
push
xchg
movs
mov
test
test
test
in
mov
sahf
movs
push
jnp
push
cs
fist
pushaw
jg
adc
push
mov
pop
test
mov
jg
rol
xchg
add
push
mov
adc
das
mov
stos
add
and
lods
push
sbb
ins
leave
fbstp
retf
pop
sbb
fisubr
mov
pop
add
inc
loope
add
jmp
mov
data16
rcr
lock
xchg
pushf
popa
clc
ja
es
xlat
fldenv
pop
pop
mov
sbb
test
and
mov
mov
cmp
mov
jbe
jno
ficom
sub
add
data16
(bad)
aas
data16
and
xlat
add
sti
jb
pop
jnp
mov
dec
xchg
(bad)
cwde
jo
adc
enter
adc
fwait
scas
rcr
call
daa
(bad)
les
or
push
dec
mov
repz
lods
es
xchg
pop
cs
popf
fwait
mov
fmul
push
jbe
jmp
and
fbld
test
ds
dec
lods
mov
or
and
fucomip
aaa
xchg
(bad)
push
mov
cmp
rcr
add
mov
repz
cmps
scas
dec
xchg
mov
mov
add
cdq
inc
jne
test
push
int
or
xchg
sar
or
pop
stos
aas
dec
push
adc
mov
test
js
cld
add
cmp
pop
push
jo
sbb
js
mov
dec
sahf
xlat
mov
dec
push
jl
iret
xchg
aas
enter
dec
data16
pop
dec
xchg
dec
out
jno
sar
nop
push
out
sbb
(bad)
pop
ins
test
nop
in
repz
jp
mov
das
aas
or
retf
mov
pushf
ss
stc
imul
inc
cdq
cli
sub
mov
imul
popf
push
les
mov
push
in
retf
cmp
pop
xchg
iret
mov
mov
add
nop
dec
add
jl
int3
xchg
dec
loope
push
and
mov
xchg
sbb
das
cmp
out
mov
fwait
aaa
in
fmul
dec
(bad)
clc
repz
inc
fs
scas
cmp
ds
nop
cmps
lahf
stos
dec
sub
push
lea
jmp
stc
and
bndldx
imul
add
or
and
iret
xchg
aas
xchg
repz
adc
repz
xchg
je
clc
jno
(bad)
fprem1
add
jmp
mov
xchg
aaa
mov
mov
jmp
pop
fistp
pop
push
pop
xchg
jge
mov
mov
mov
test
sbb
xor
xor
jge
aaa
mov
inc
pusha
mov
pop
lahf
mov
inc
fcmovbe
sti
pop
shl
popa
rcl
pop
movs
jle
mov
sbb
hlt
sbb
inc
mov
movs
ret
ins
popa
mov
in
(bad)
mov
xchg
push
clc
cmp
sub
(bad)
fild
pop
jo
dec
test
fs
scas
xchg
int3
mov
lea
cmps
mul
inc
xor
and
mov
retf
imul
sbb
into
call
xor
(bad)
call
jp
pop
gs
pop
aad
in
mov
in
and
out
xchg
scas
cmps
mov
xchg
mov
call
(bad)
push
sub
int
jbe
pusha
(bad)
sbb
loopne
inc
push
test
into
pop
call
jae
neg
push
sysexit
lods
inc
iret
xor
push
push
fisttp
cmps
xor
mov
(bad)
repnz
jbe
mov
dec
xchg
loope
push
xor
les
mov
ins
push
xchg
cmps
mov
lods
fdivr
mov
sbb
sbb
(bad)
fild
xor
cmp
mov
lods
mov
fsubr
in
sbb
adc
and
add
call
ins
pusha
mov
pop
stos
xchg
xor
fbstp
inc
jbe
and
mov
dec
sahf
ret
shl
sub
aam
and
outs
or
test
aaa
sti
cmc
mov
jecxz
inc
jmp
and
imul
sub
cmp
push
pop
push
inc
push
cwde
mov
into
imul
int
ins
dec
imul
xor
pop
(bad)
imul
or
dec
aas
aaa
popa
call
in
jns
mov
xchg
xor
xchg
jbe
int
mov
mov
je
pushf
mov
adc
(bad)
mov
pushf
stos
push
hlt
jb
pop
add
pop
rcr
sub
sbb
mov
popa
fwait
fwait
scas
call
aas
mov
ins
inc
and
push
push
je
adc
dec
mov
arpl
or
sti
xchg
pop
mov
jb
stos
xor
fistp
and
shl
mov
add
movs
cmps
ds
into
shl
ror
mov
data16
fimul
fild
xor
push
mov
pop
ds
scas
mov
fcomp
jmp
je
inc
into
pop
sub
sbb
ins
jnp
outs
inc
or
mov
xor
push
mov
jnp
mov
pop
cdq
xlat
cmps
xchg
mov
xor
shl
mov
dec
fcomp
mov
pop
aas
int3
std
test
std
inc
jne
test
int3
xor
fadd
mov
fnstcw
pop
pop
cmp
aaa
add
dec
push
jae
mov
mov
or
jg
xlat
add
pop
or
sbb
add
jbe
pop
push
xchg
ja
mov
mov
div
test
lods
repnz
aad
push
pop
adc
xlat
mov
jmp
xor
ja
sahf
(bad)
es
hlt
sbb
retf
sbb
(bad)
or
cs
repnz
xor
daa
pop
pop
lea
mov
cmp
lea
cmc
gs
inc
ss
lea
aas
lods
push
lea
push
inc
xchg
mov
and
outs
(bad)
rol
loop
jge
mov
pop
mov
cmp
(bad)
stos
xor
push
aaa
popf
dec
jno
movs
nop
ss
stc
inc
dec
lods
mov
cmp
out
(bad)
repz
sbb
bound
cmps
cwde
xchg
xor
out
dec
jmp
jb
fdiv
mov
mov
cmps
jp
sahf
jg
movs
and
popf
mov
push
xchg
fucomip
and
fild
jl
inc
mov
inc
xchg
retf
xchg
xchg
imul
loopne
mov
xchg
dec
mov
push
xchg
fiadd
xchg
idiv
xchg
fmul
sub
hlt
test
sbb
sub
mov
(bad)
jp
repnz
push
pop
or
cwde
push
mov
cmp
inc
jne
mov
pop
mul
or
push
data16
inc
mov
cdq
push
(bad)
mov
xchg
push
mul
xor
cmc
adc
out
aam
dec
jl
sub
push
sub
dec
fild
sbb
sub
cmp
cmp
xchg
mov
xor
cli
sub
sti
pcmpgtb
(bad)
xor
push
mov
fsub
cs
sbb
jl
(bad)
cmp
jo
lea
mov
in
shl
jae
jmp
mov
out
jl
test
sbb
sahf
mov
xchg
hlt
js
mov
cmp
jmp
sub
cmp
popf
imul
lods
or
xchg
leave
pop
inc
jno
int
sbb
or
or
inc
scas
movs
cld
cmp
push
inc
dec
test
sti
jbe
dec
pop
push
scas
pop
loop
(bad)
pop
jecxz
mov
cmc
in
pop
jmp
test
add
es
test
mov
dec
pop
cmp
xchg
fdiv
daa
bound
dec
movs
or
mov
imul
call
push
js
shl
pop
adc
xor
inc
push
(bad)
cmps
adc
mov
sub
xor
sar
add
jecxz
repnz
jns
lods
pop
fbld
dec
std
xchg
jne
aad
mov
lea
jg
call
(bad)
cmp
fwait
mov
push
fld
push
push
leave
xchg
repnz
fld
jge
sbb
sbb
cwde
mov
js
clc
or
dec
out
push
sub
add
pop
(bad)
pop
pusha
mov
js
mov
lahf
shl
cmp
jbe
mov
mov
ins
xchg
(bad)
sahf
popa
retf
xchg
push
xor
rcl
imul
fs
xchg
aaa
stc
repnz
xchg
sahf
pop
retf
dec
(bad)
dec
push
sub
into
repz
inc
dec
mov
pop
cmp
test
repz
cli
add
fidiv
popa
xor
aas
pop
dec
add
adc
push
mov
cmp
shl
inc
jbe
mov
dec
xchg
mov
jl
fwait
js
in
cli
or
cmp
and
jmp
test
dec
in
push
inc
dec
jecxz
mov
icebp
and
or
pop
mov
jno
cmps
mov
sub
int3
aas
mov
push
ins
push
jge
js
cmp
mov
jb
mov
aaa
xor
pop
jmp
icebp
jge
jbe
pop
repz
lock
mov
loopne
jmp
rol
mov
dec
ja
mov
and
les
mov
sub
dec
out
cli
iret
fs
push
dec
pushf
bound
push
push
les
pop
(bad)
add
pop
xor
add
or
jl
movs
lea
pop
out
out
mov
lahf
cld
jb
outs
jnp
mov
movs
shl
out
test
xchg
cmc
movs
cld
or
dec
mov
pop
add
stc
loop
rol
dec
mov
verw
shl
push
dec
xchg
inc
jle
inc
sub
fwait
fwait
xchg
push
fidivr
jecxz
cwde
repz
push
adc
cmp
jge
add
sbb
jae
movs
cmp
cmps
mov
pop
and
mov
retf
adc
xchg
xchg
inc
fdivr
mov
repz
scas
outs
inc
fwait
cdq
out
sbb
sti
xchg
aad
popw
lea
ds
xor
hlt
fist
pop
add
cmp
mov
pop
test
or
fstp
inc
xor
xor
je
adc
bound
inc
adc
mov
(bad)
int
and
pop
push
fcom
mov
mov
hlt
xchg
push
das
mov
mov
imul
cmp
xlat
aad
sbb
pop
lds
xor
cmc
mov
cmp
sub
sbb
lods
bound
jle
cmps
cwde
mov
ret
mov
inc
je
and
sub
inc
mov
ficomp
mov
pusha
repz
inc
vcvttpd2dq
(bad)
fistp
fsubr
inc
mov
dec
mov
xchg
jns
sti
hlt
test
aad
xchg
mov
push
jb
sub
das
aam
out
shl
dec
inc
jmp
test
add
imul
jle
cmp
cmp
pop
or
xchg
outs
in
add
cmp
pop
sub
jae
scas
or
add
jns
(bad)
jnp
retf
mov
mov
inc
dec
aas
(bad)
fist
outs
push
pop
pushf
and
in
call
sub
(bad)
or
imul
test
push
test
push
xchg
mov
add
enter
out
dec
mov
dec
aas
ds
call
jnp
inc
push
jl
adc
jns
inc
and
retf
cmp
scas
ja
and
clc
popa
adc
ins
jg
push
mov
jnp
test
sbb
add
mov
out
(bad)
mov
repz
jmp
jge
in
or
lds
mov
bound
xchg
xchg
add
in
loope
jl
test
xor
dec
or
mov
aad
out
inc
jb
xor
sbb
mov
fldcw
push
jmp
gs
adc
add
pop
into
inc
inc
mov
inc
xchg
mov
dec
fmul
xchg
daa
(bad)
jmp
cli
pop
arpl
aam
hlt
dec
xchg
out
xchg
ja
lahf
inc
es
rcl
test
cmp
stos
daa
adc
rol
je
push
xchg
rcr
sub
ficom
sub
test
shl
mul
jb
out
outs
push
adc
call
and
sahf
jne
or
jmp
pop
repnz
jno
ins
div
cdq
inc
xlat
xchg
jno
std
not
cmp
fwait
cdq
hlt
outs
pop
xchg
pushf
cmps
rol
retfw
sub
jecxz
fdivr
into
cmp
cmp
aaa
pop
jae
push
call
(bad)
addr16
xchg
add
ficom
push
pusha
sub
push
test
add
cmps
sub
xor
mov
pushf
jns
jbe
pop
cld
mov
xchg
xchg
pop
and
fisttp
mov
push
cwde
stos
(bad)
jo
mov
or
into
fist
and
jge
sbb
sub
add
pop
fistp
clc
jmp
or
and
sbb
fistp
fisttp
retf
movs
mov
inc
fcmovu
mov
(bad)
pop
sbb
sub
mov
push
sub
jo
xchg
add
sub
dec
call
add
add
xchg
push
stos
and
mov
sbb
push
xchg
jnp
mov
mov
inc
ficomp
call
inc
inc
pop
pop
mov
sbb
aaa
mov
adc
push
pop
test
or
out
cwde
add
add
fisubr
mov
jnp
retf
mov
ss
lods
pop
aad
mov
jg
xor
cmc
aam
xor
mov
jb
cmp
inc
xlat
rcl
push
jmp
sbb
outs
inc
stos
inc
sub
xchg
lods
scas
sbb
clc
inc
out
arpl
pop
in
pop
jge
es
mov
call
inc
mov
mov
and
pop
xchg
int
aad
sbb
inc
repz
dec
mov
xchg
dec
jecxz
dec
xor
enter
ins
mov
push
jl
enter
jmp
inc
pop
mov
lock
cli
test
inc
push
jge
sbb
xor
test
mov
lahf
jmp
ins
jl
cld
xor
push
scas
cmp
add
sbb
add
inc
xchg
cld
inc
sti
jge
inc
mov
arpl
mov
test
out
sub
mov
daa
sar
xor
movs
inc
retf
dec
fidivr
push
dec
repnz
repz
in
cmp
aaa
jns
sub
(bad)
fwait
test
sub
int3
sbb
aaa
(bad)
aaa
jae
and
pop
mov
mov
cmps
cmp
cmps
lahf
sub
xlat
xchg
xor
push
push
cmps
pop
clc
cmps
loopne
cwde
les
and
in
add
ins
stos
lahf
test
jnp
rcl
rcr
push
push
fst
cmp
push
clc
or
push
dec
mov
outs
inc
sti
inc
ds
les
pop
shr
cmps
aad
fs
enter
imul
sub
outs
cmp
test
out
fistp
loope
jbe
(bad)
jp
mov
sti
jno
mov
sbb
shl
or
pop
xchg
jle
mov
or
ror
fmul
and
xor
or
in
inc
clc
pop
ja
inc
mov
inc
popa
xchg
dec
mov
mov
add
xlat
pop
in
add
jl
leave
inc
das
jae
push
mov
arpl
gs
mov
xor
dec
cld
icebp
mov
sbb
mov
inc
jmp
xchg
pusha
es
mov
test
inc
lods
jl
mov
sar
fyl2xp1
inc
jnp
mov
dec
and
iret
mov
pop
fistp
pop
or
jne
cmp
dec
or
call
hlt
jg
cld
jbe
inc
sbb
dec
jae
imul
mov
test
cmp
fwait
or
call
inc
inc
mov
pop
sub
jbe
(bad)
adc
jl
mov
sbb
fwait
scas
adc
jmp
push
cdq
ret
ja
pop
call
(bad)
fld
fistp
arpl
stos
cmp
mov
jnp
test
test
shl
sbb
clc
push
inc
jle
mov
push
mov
jmp
sbb
test
out
xchg
sbb
jns
test
dec
sahf
rcl
xor
aam
sub
not
popf
push
jl
cwde
mov
aaa
fcos
mov
mov
into
adc
cmp
call
mov
inc
es
cmc
xchg
rol
and
in
add
(bad)
ss
add
add
dec
push
or
lea
dec
cld
retf
mov
cld
inc
pop
push
(bad)
repz
loopne
xchg
loop
ins
hlt
and
xlat
mov
jge
test
fs
xchg
mov
loop
scas
jmp
sub
cmp
inc
(bad)
and
ins
dec
mov
push
xchg
fwait
int
cmp
scas
jg
repz
fidiv
sbb
mov
mov
lea
mov
lahf
push
add
cmp
sbb
fnstenv
call
and
in
jl
mov
inc
xchg
call
fld
dec
jg
mov
xor
aad
repz
popa
jnp
test
adc
xchg
imul
and
fidiv
loopne
sbb
cmp
add
and
sbb
dec
inc
mov
data16
cmps
xchg
sbb
pop
loope
sbb
iret
pop
retf
sbb
bound
jg
iret
xchg
dec
call
sti
idiv
adc
cmp
xor
shl
dec
inc
mov
iret
sub
dec
repnz
retf
inc
stc
cmp
dec
rcl
inc
arpl
call
loope
mov
inc
hlt
pop
aas
pusha
sub
add
js
movs
jge
mov
pop
xchg
mov
or
pop
jae
aam
adc
fnstenv
outs
js
popf
ins
(bad)
lahf
lock
mov
xchg
retfw
and
rol
(bad)
leave
sub
inc
push
mov
int3
mov
sahf
lods
xor
pop
int
sub
repz
fidiv
push
sbb
inc
push
push
pushf
ret
cmp
(bad)
out
xchg
ds
bound
pop
es
adc
cwde
daa
nop
jle
jnp
scas
pop
inc
retf
lods
mov
pop
cld
iret
xchg
(bad)
jns
dec
jbe
stos
pop
jecxz
div
popf
loop
(bad)
neg
lea
call
jecxz
mov
out
ds
(bad)
les
lods
aad
clc
sub
xor
repz
pop
xor
inc
sub
cdq
xchg
cs
ins
in
das
mov
push
pop
pop
and
xor
ins
pop
stos
dec
inc
into
or
sub
fist
loope
inc
push
lods
jp
mov
dec
popf
mov
ins
(bad)
xchg
popa
or
xlat
add
inc
sbb
push
test
or
sub
and
(bad)
rcr
aaa
je
pop
mov
ins
pop
cld
inc
aas
jns
fwait
test
pop
and
inc
jecxz
xchg
fidiv
push
jl
imul
dec
sahf
js
xchg
cmp
xchg
(bad)
dec
out
fist
out
jne
cmp
repz
dec
sub
mov
add
jmp
es
ror
jecxz
retf
cmp
sbb
xchg
sti
jle
xor
lods
push
inc
jge
add
jmp
jge
fiadd
add
jbe
outs
pusha
ror
cmps
inc
dec
test
dec
int3
jmp
sbb
stos
pop
jmp
callw
or
rcl
test
sbb
mov
adc
fcomp
pusha
sbb
aaa
dec
int
lods
push
in
push
cmp
cmps
daa
sbb
aaa
sub
(bad)
aam
ds
mov
cmp
inc
outs
je
sbb
and
pop
aam
pop
movs
push
xor
test
push
xchg
aaa
sahf
lea
inc
jne
lds
mov
dec
xchg
(bad)
test
aad
jno
in
sti
mov
int
cmps
lods
mov
xor
push
jne
enter
rcr
sub
add
leave
xchg
jmp
mov
pop
pop
or
test
dec
cli
sbb
sti
add
xor
adc
pushf
and
mov
jo
mov
pop
fucomip
cwde
pop
mov
outs
je
inc
rcl
call
or
pop
mul
add
loopne
mov
out
lods
xchg
lahf
inc
enter
inc
push
xchg
xchg
jmp
rcl
pop
popa
loopne
pop
dec
pushf
mov
mov
fdiv
push
mov
inc
mov
adc
sbb
lea
pop
jmp
loope
push
and
cli
and
shl
imul
sub
les
or
xlat
adc
ins
or
jo
cdq
movs
push
xor
retf
repz
sbb
jmp
cmp
cld
fbstp
sbb
inc
mov
dec
push
jnp
test
ins
(bad)
adc
pop
mov
xor
dec
ins
mov
push
popf
cmps
mov
jmp
loop
icebp
fs
jns
pop
fiadd
xchg
ins
ret
lahf
jno
stc
loop
jno
sbb
test
test
imul
xlat
xchg
mov
ficomp
sub
int3
(bad)
fild
sbb
cmp
dec
ss
nop
mov
neg
cli
or
shl
jo
pop
lods
add
mov
push
lahf
fstp
cli
cmps
call
xchg
pop
lock
jbe
xchg
mov
inc
add
imul
popa
and
std
mov
lds
mov
scas
dec
xchg
lea
test
repz
cwde
stos
inc
out
dec
fidivr
ds
jmp
push
sbb
outs
es
mov
stos
or
test
cmp
add
and
pop
pusha
stos
jns
lahf
xor
mov
push
ret
shr
cmc
inc
jno
lea
repnz
movs
push
adc
rol
mov
mov
xor
mov
test
aad
ins
cwde
scas
outs
cli
jp
push
sub
mov
pop
sbb
push
cmps
dec
aas
or
(bad)
iret
sbb
sbb
shl
jno
int
adc
xor
aas
mov
dec
jae
push
movs
or
into
test
pop
and
fist
les
inc
test
dec
xchg
shl
rcl
repz
xchg
shl
pop
sbb
fisubr
(bad)
inc
jp
add
sub
test
push
inc
xchg
pop
imul
inc
adc
push
stc
jl
shr
ror
sub
fs
imul
movs
cmp
mov
ins
jmp
mov
imul
pop
mov
mov
inc
in
push
add
retf
das
stos
jp
in
mov
and
hlt
fs
out
adc
xor
int3
fist
inc
jp
dec
mov
inc
sbb
mov
pushf
or
into
imul
adc
pop
in
pop
sub
or
daa
(bad)
xor
add
or
sub
mov
add
inc
pop
mov
data16
enter
call
sti
bound
mov
ja
mov
adc
fld
xchg
hlt
fistp
mov
ss
fstp
or
jb
dec
rcr
mov
movs
mov
mov
sbb
pop
(bad)
or
add
mov
in
inc
(bad)
xor
and
lea
aaa
and
fist
repnz
pop
push
sbb
(bad)
dec
xchg
hlt
adc
cld
add
jne
popa
movs
(bad)
mov
ja
mov
mov
pop
fidivr
cmp
fldcw
sub
pop
outs
inc
xchg
dec
or
movs
lods
mov
jmp
pop
push
int
sbb
sub
imul
inc
movs
aas
jg
mov
pop
loop
xchg
daa
mov
inc
jg
pop
popf
cmps
loopne
test
or
cld
add
xchg
movs
xchg
js
movs
les
mov
xor
in
repz
jns
mov
ss
dec
loop
iret
inc
(bad)
xor
rcl
sub
lahf
mov
fsubr
not
popf
fst
push
xor
sub
or
stos
pop
xor
sbb
cmp
(bad)
sub
jnp
imul
stc
cmp
mov
push
lock
mov
imul
test
aaa
fmulp
test
rol
mov
lods
xor
dec
enter
enter
cmp
cmp
lods
fwait
shr
call
push
dec
inc
cmp
pop
and
or
mov
push
xchg
mov
dec
xchg
jmp
pop
sbb
jne
mov
mov
in
jno
fdivrp
mov
lea
movs
(bad)
aas
cmps
imul
das
int3
mov
mov
cmp
std
jmp
jae
cmp
jno
jo
xor
mov
or
hlt
sbb
xor
pop
cmp
es
imul
jge
into
or
or
push
inc
push
mov
fldenv
push
mov
dec
xchg
retf
xchg
xchg
je
faddp
hlt
push
imul
mov
push
loop
lock
cmp
rol
cdq
dec
imul
cmp
pop
fisttp
sbb
jge
mov
add
retf
adc
test
addr16
jb
inc
xor
movhps
ins
gs
push
inc
(bad)
push
inc
mov
imul
sbb
sar
shr
push
scas
jne
mov
pop
call
and
movs
mov
out
inc
cmp
ret
fs
mov
outs
sbb
test
lods
fs
pop
repz
pop
clc
test
cdq
daa
jb
dec
mov
inc
ss
mov
sahf
cmp
sti
sar
int
addr16
and
je
xor
and
ret
or
cmp
and
leave
out
mov
sbb
adc
cdq
fcomp
ins
in
push
and
sti
cmc
jae
sbb
(bad)
pop
inc
movs
or
call
lods
call
sub
jbe
dec
pushf
adc
popa
xor
dec
mov
rcl
cmp
aas
mov
jne
jne
fadd
loop
iret
jle
jp
xchg
dec
add
in
pop
push
pop
loope
mov
sbb
aad
jnp
lahf
jae
mov
mov
jmp
adc
sbb
test
ins
test
(bad)
scas
fstp
cwde
scas
popa
icebp
dec
test
mov
lds
jae
inc
test
cmp
retf
xor
stc
inc
repnz
pushf
inc
ins
inc
aaa
in
add
cs
add
or
sbb
or
dec
inc
mov
cmp
retf
out
mov
sbb
adc
lds
imul
jno
std
stos
mov
xchg
stos
jmp
xchg
leave
add
jmp
lods
mov
cmp
and
xor
pop
pusha
push
lods
inc
cs
mov
stos
ss
sbb
and
xor
bound
adc
push
adc
dec
cmp
xlat
mov
inc
xor
or
xchg
jne
js
inc
stos
pop
ret
fadd
inc
xchg
rcl
add
cmc
xchg
jbe
push
mov
xchg
sbb
dec
jno
mov
and
xchg
mul
sahf
cwde
inc
loopne
rcl
inc
shl
inc
push
cmp
or
inc
mov
cwde
test
ds
addr16
push
push
inc
pop
in
sbb
daa
sbb
sbb
push
test
cmps
sub
xor
pop
cmp
into
xor
jg
push
scas
pop
sar
jg
xchg
sar
mov
fwait
(bad)
cmc
adc
mov
repnz
icebp
dec
xchg
scas
pop
mov
push
sbb
iret
fcomip
inc
xchg
xor
dec
pushf
sub
push
pop
xchg
mov
mov
cmp
pop
in
rcr
inc
and
push
(bad)
push
xor
and
mov
push
popf
mov
out
cmps
adc
sbb
pop
xor
push
in
arpl
in
lea
xchg
outs
call
bound
fiadd
je
movs
je
jno
xor
jmp
(bad)
pop
fnsave
jne
inc
cmps
(bad)
inc
cwde
push
leave
lea
cmps
sbb
(bad)
movs
(bad)
jae
pop
inc
mov
sbb
aad
jae
ins
inc
mov
xor
sub
in
movs
daa
into
int
out
inc
cmp
pop
stos
mov
push
in
push
xor
jmp
sub
add
mov
push
dec
test
or
mov
push
inc
or
pop
jl
xor
inc
es
test
cs
pop
test
js
lea
imul
ja
sbb
cmp
xor
ins
dec
ficomp
movs
sub
mov
enter
(bad)
std
push
retf
push
jnp
mov
dec
cdq
mov
push
in
clc
inc
dec
repnz
add
movs
outs
je
cwde
mov
cmp
lock
mov
push
retf
push
sub
jb
xor
pop
imul
cs
xchg
mov
inc
fst
sbb
cmp
sub
cmp
mov
push
sahf
xchg
test
cld
leave
dec
scas
out
add
inc
push
pop
test
mov
sti
dec
test
cmp
mov
lods
ds
fild
jne
scas
jp
pop
int3
xor
rcl
fadd
xor
pcmpeqw
xor
mov
and
jp
(bad)
jp
clc
jl
add
(bad)
xor
pop
rcl
sbb
xchg
push
adc
sub
mov
cmp
stos
xchg
sbb
arpl
ret
mov
movs
dec
ret
jecxz
push
xchg
movs
mov
out
push
scas
lods
stos
in
cmps
js
mov
retf
jmp
pusha
loop
popa
loopne
fidiv
push
inc
shl
retf
imul
mov
push
or
mov
stc
inc
call
pop
ja
xor
add
inc
pusha
mov
ja
cmps
xchg
inc
and
fcmove
xchg
and
jae
sbb
fidivr
xchg
les
xlat
aad
sub
adc
sub
xchg
aas
inc
icebp
icebp
sbb
mov
loope
lds
cs
out
adc
ins
cmps
daa
gs
cmp
push
mov
and
add
sti
push
push
push
pop
imul
aas
mov
lods
pop
and
sub
xchg
out
test
pop
mov
inc
movs
jle
cmps
(bad)
jno
in
jecxz
in
mov
xchg
cmp
dec
mov
mov
aas
fbld
mov
sti
aam
cld
fisttp
lods
(bad)
dec
loope
div
or
repz
outs
lahf
adc
sbb
fstp
jg
sar
call
int
sbb
aaa
nop
jbe
adc
dec
sub
xor
sar
push
bound
xlat
mov
xchg
fs
mov
es
rol
cmps
xchg
lds
outs
jnp
rol
stos
mul
mov
fisubr
and
popf
cmp
push
sub
les
fs
cli
cmp
pop
hlt
push
cs
jb
mov
mov
mov
aas
cmps
push
pop
mov
loope
pop
push
cmp
clc
xchg
add
pop
ds
dec
test
test
lahf
les
add
rol
mov
dec
ja
nop
lea
jecxz
dec
inc
mov
mov
mov
aaa
cs
enter
jo
imul
sub
stos
sbb
icebp
cli
push
xchg
fnstsw
pop
add
or
jo
sub
pop
(bad)
sub
imul
push
cmp
test
xor
jl
fdivr
out
add
push
mov
jl
stos
mov
push
repnz
sub
sbb
xchg
nop
xchg
mov
ror
scas
imul
xor
xchg
int3
jbe
or
aaa
adc
mov
(bad)
scas
cmp
fisubr
xchg
push
je
aas
int
das
jb
imul
dec
frstor
movs
cmp
lahf
xchg
sub
les
out
ins
inc
stos
sub
mov
cmp
popa
or
sar
sub
mov
pop
xchg
fwait
jmp
pop
xchg
mul
mov
jmp
jbe
xor
dec
mov
cmp
dec
xchg
mov
mov
in
cli
add
sub
xor
mov
mov
mov
mov
(bad)
sbb
xor
(bad)
xor
jbe
lea
mov
dec
mov
add
ror
mov
imul
test
and
in
test
inc
pusha
loop
jns
push
std
retf
sar
adc
pop
mov
cs
mov
into
push
fadd
das
cmps
mov
inc
xor
sub
push
adc
push
fisttp
lods
xor
test
sbb
dec
cmp
iret
mov
lock
jo
pushf
and
xor
xchg
out
dec
loope
jae
hlt
rol
cwde
shl
sbb
test
xor
std
cwde
lock
inc
jg
mov
adc
sbb
xchg
mov
(bad)
ss
push
dec
test
ins
push
adc
(bad)
cmp
or
mov
sub
adc
mov
jnp
mov
inc
call
sti
jbe
outs
data16
pop
jecxz
repnz
xchg
scas
cmps
push
xchg
loope
sub
ror
cli
scas
mov
add
inc
jle
mov
cmp
fild
outs
mov
add
xor
mov
stc
das
mov
jns
inc
xor
xor
add
pop
frstor
mov
jae
retf
cmp
fs
mov
xlat
ja
imul
repz
test
mov
add
jmp
mov
jnp
mov
ds
loope
(bad)
stos
jmp
dec
mov
scas
dec
and
rcr
into
ds
xor
or
test
sbb
lahf
xchg
xchg
mov
loope
sbb
add
ss
jbe
mov
mov
mov
scas
sbb
in
movs
mov
aas
dec
jge
fsub
inc
test
pop
cmp
ficomp
sahf
(bad)
pop
in
mov
and
outs
add
mov
xchg
fidivr
loope
(bad)
sub
rcr
and
sub
pop
add
sbb
stos
mov
pushf
jecxz
mov
xor
inc
push
inc
mov
mov
pop
scas
lods
mov
pop
and
scas
mov
scas
jmp
stc
je
cmp
and
mov
inc
xchg
sti
pop
aad
bound
std
aam
push
imul
add
stos
bound
mov
cli
not
test
mov
div
dec
fiadd
push
sbb
sbb
inc
aas
popa
xchg
mov
mov
jmp
jno
int
xor
pusha
fwait
aas
(bad)
ds
pop
xor
xchg
cmp
dec
hlt
int3
out
cmp
lds
push
lods
pop
idiv
lahf
push
jecxz
jge
shl
xchg
dec
pop
mov
cli
retf
test
xchg
mov
jg
cmp
cmp
mov
jg
xor
aaa
sbb
test
cdq
xchg
lods
xor
xlat
xchg
in
jl
clc
pop
sbb
sbb
cmp
add
push
daa
mov
xchg
sbb
and
stc
xchg
aaa
mov
jb
gs
lods
push
in
test
enter
xor
ror
test
sbb
aaa
aad
mov
mov
aam
pop
adc
xor
sbb
sub
mov
in
push
cwde
mov
push
arpl
in
sbb
adc
outs
sub
mov
xor
pop
dec
jecxz
inc
mov
jb
scas
pop
rcr
and
loope
je
mov
xchg
add
ins
or
pop
in
cmp
mov
xchg
je
xor
leave
inc
call
stos
sbb
test
jge
les
outs
stc
test
push
aas
dec
adc
inc
nop
jle
pusha
inc
stos
outs
sbb
xchg
and
dec
out
xchg
adc
jle
mov
icebp
mov
jge
out
outs
out
xchg
xlat
(bad)
jbe
imul
pop
lea
lock
ror
test
xor
add
clc
pop
ja
jp
aaa
gs
push
call
hlt
add
cmps
push
ja
mov
popf
add
push
push
lods
jge
movs
push
ja
mov
jmp
cwde
pop
inc
je
push
jmp
(bad)
dec
test
clc
inc
dec
lock
mov
loopne
test
rol
cmp
arpl
mov
add
mov
mov
out
push
mov
sub
clc
test
cmp
sub
push
lds
call
add
cmp
adc
sub
adc
xor
or
sahf
test
cld
(bad)
out
mov
jbe
test
pop
loope
mov
adc
ins
call
mov
cmps
add
fnop
(bad)
(bad)
fidivr
adc
fmul
jne
sbb
pop
clc
sti
shl
xor
sub
test
inc
mov
test
ds
shl
cmc
sbb
pusha
adc
pop
ins
jl
adc
push
lods
ja
cmp
adc
aaa
stos
std
imul
sub
ror
xlat
xchg
imul
call
in
mov
popf
push
xor
or
fdiv
push
fst
and
ror
inc
push
rcr
jnp
inc
and
retf
cmp
sbb
pop
jo
sbb
cmp
jl
cdq
and
cmps
pop
adc
and
mov
push
(bad)
aaa
mov
js
scas
pop
pause
mov
retf
mov
in
inc
daa
retf
xlat
mov
(bad)
xchg
idiv
cdq
outs
inc
mov
cli
fadd
xchg
movs
jbe
imul
cs
in
mov
cld
xor
jg
stos
or
add
fwait
fwait
rcl
icebp
lea
xchg
int
sbb
add
inc
test
sub
push
sbb
and
rcr
les
sbb
adc
rcl
lea
inc
test
fldpi
lock
pop
fild
aad
in
cmp
fs
cmp
lea
push
adc
scas
imul
daa
pushf
icebp
jbe
inc
add
add
sub
pop
ror
stos
jnp
mov
xchg
xchg
mov
enter
mov
dec
aam
jae
stos
push
xor
adc
xchg
arpl
std
stc
pushf
jb
and
xchg
sbb
sti
xchg
nop
push
xor
(bad)
mov
mov
push
loope
clc
cmp
push
idiv
fstp
je
jae
sbb
pop
mov
mov
(bad)
push
rcl
sbb
ins
jge
int
or
aas
xchg
add
popa
arpl
addr16
mov
inc
jecxz
mov
leave
cmc
popa
bnd
je
ins
(bad)
mov
call
cs
mov
movs
(bad)
ret
sbb
pushf
adc
into
pushf
cmps
in
test
sbb
cmps
dec
retf
sub
ds
fadd
mov
icebp
ds
or
and
mov
mov
out
fsubr
pushf
ror
inc
inc
call
cmp
outs
inc
mov
sub
das
xor
ins
in
fst
repnz
jp
inc
out
sahf
and
xchg
pop
pop
out
rcl
mov
ja
mov
cli
lea
mov
sub
dec
or
mov
enter
pop
cmp
sub
and
imul
cmp
nop
addr16
jle
int
sub
adc
pop
push
lahf
adc
xchg
mov
dec
in
rcr
std
dec
dec
pop
stos
pusha
pause
call
mov
test
push
mov
shl
mov
int
cdq
retf
fs
dec
xchg
pop
cld
sub
sbb
cld
fisub
and
dec
stos
pop
gs
dec
lea
clc
sbb
std
sbb
add
sub
adc
or
xchg
ja
mov
xor
rcr
loop
push
push
test
fbstp
mov
out
adc
out
ins
xchg
add
fidiv
mov
enter
lahf
dec
jecxz
(bad)
dec
push
dec
(bad)
hlt
sti
js
sbb
inc
mov
es
xchg
mov
pushf
sbb
lods
outs
in
loop
pushf
mov
dec
inc
retf
jo
and
push
arpl
dec
ds
gs
mov
pop
xchg
jmp
jns
js
and
pop
test
and
pusha
in
pop
dec
mov
nop
mov
add
hlt
loop
rol
inc
out
jmp
(bad)
rcl
aaa
push
outs
push
adc
cwde
mov
and
div
enter
pop
call
push
mov
gs
jp
aam
sbb
into
push
daa
pop
pop
out
mul
and
inc
xchg
les
push
call
nop
push
rep
or
mov
aas
into
jecxz
fdivr
inc
ins
cwde
movs
jb
push
cs
push
nop
and
or
orps
push
test
dec
out
or
sbb
adc
sbb
mov
mov
fimul
movs
sbb
lahf
nop
mov
xchg
lods
xchg
xor
pop
jl
sub
in
mov
xlat
in
aaa
xchg
mov
sbb
inc
sti
sub
dec
int3
imul
sbb
xchg
push
cmc
or
sbb
cmc
fistp
sbb
sbb
loopne
cmp
test
and
dec
jecxz
aas
mov
pop
sbb
and
cs
sbb
scas
pop
ins
mov
pop
fadd
push
sahf
mov
cwde
fsub
hlt
jge
jp
pop
cli
call
pushf
xchg
or
shl
mov
mov
call
mov
sbb
icebp
repnz
mov
pop
sub
int
lods
push
inc
test
inc
add
mov
in
repnz
xor
xor
sub
cmps
pop
ss
jne
retf
push
and
cmps
cmps
pop
sar
fidivr
push
mov
pusha
xchg
mov
in
add
test
xor
repnz
rcr
lods
inc
xchg
jp
daa
aas
adc
ret
ss
movs
sub
mov
push
popf
mov
iret
addr16
loop
xchg
sbb
add
sub
sub
pusha
xchg
test
pop
mov
neg
inc
cmp
fwait
aas
(bad)
cmc
ja
inc
push
pusha
mov
aas
xor
arpl
jmp
mov
ja
call
retf
pop
mov
jae
je
cs
mov
cmc
inc
stc
ds
jl
sbb
mov
imul
rol
(bad)
add
leave
xor
inc
or
sbb
fisttp
xor
sub
aam
cmp
pop
push
xchg
mov
dec
mov
xchg
inc
es
fcom
imul
je
mov
ds
(bad)
inc
mov
stos
cmp
inc
call
jp
xchg
cs
test
mov
es
sub
xor
or
add
cwde
cmp
mov
retf
mov
lahf
sbb
cs
popf
mov
inc
test
jo
pop
jbe
mov
inc
inc
mov
repz
push
fcom
mov
mov
ja
mov
xchg
cwde
scas
jne
inc
fisttp
ss
out
mov
nop
es
dec
xchg
sbb
jge
push
or
mov
into
scas
xor
cli
add
into
inc
xor
add
jp
movs
push
lea
ins
dec
out
mov
jnp
shl
(bad)
jge
loop
push
std
(bad)
mov
xchg
stc
aas
mov
xchg
mov
ds
repnz
mov
jecxz
hlt
dec
and
inc
(bad)
cmp
pop
push
loopne
or
mov
(bad)
jnp
out
add
clc
jne
imul
add
jle
inc
inc
lods
xor
xchg
xchg
xchg
enter
repz
popa
push
pop
sahf
jle
mov
adc
fwait
add
push
icebp
mov
shr
sbb
aad
mov
mov
(bad)
cmp
sub
test
aas
bound
ja
psllw
test
adc
xor
adc
inc
or
js
sub
jo
cmps
cmovno
and
sti
out
xchg
jmp
push
mov
arpl
bound
out
push
call
jle
call
stos
jmp
dec
in
xor
inc
std
(bad)
fbstp
xor
dec
fidiv
das
test
fnsave
out
daa
xchg
cli
pop
dec
inc
cmps
push
ja
outs
add
pop
stos
add
jge
lahf
push
push
xchg
shr
leave
fist
repnz
push
stos
pop
fcmove
out
mov
mov
mov
repz
xchg
xchg
shl
mov
retf
repnz
ret
out
dec
mov
shl
mov
fidiv
push
aaa
push
pushf
outs
inc
jo
push
sub
movs
nop
pushf
aaa
sub
pusha
icebp
cli
ds
dec
ins
pop
cmp
add
sub
pop
fild
(bad)
push
pop
mov
test
xor
test
sar
js
imul
in
xchg
les
and
mov
mov
test
pop
xchg
leave
xchg
aaa
cli
ret
fisttp
icebp
xchg
jnp
push
cmp
aam
int3
jge
sbb
jg
jno
arpl
js
dec
out
mov
and
shl
(bad)
jge
dec
inc
mov
xor
sub
fnstenv
movs
cmp
mov
cli
icebp
lahf
jle
jnp
mov
mov
inc
sub
popa
adc
loope
test
addr16
push
xor
loope
cld
lock
pop
xchg
cwde
cmp
xor
xor
dec
mov
xor
dec
popf
mov
scas
sbb
lods
sbb
call
les
or
cmp
adc
push
sbb
scas
mov
dec
out
clc
xchg
and
imul
pop
test
xchg
push
in
jne
lock
lea
inc
pop
sub
pop
lods
stos
push
(bad)
dec
fdiv
sub
and
les
jg
inc
add
mov
stc
cmc
jns
clc
jp
dec
aas
cmps
xor
and
add
pop
in
sbb
cmps
cmp
mov
cmp
call
add
test
jmp
lock
test
cdq
push
hlt
in
and
rol
(bad)
in
mov
out
xchg
add
retf
sti
mov
cdq
mov
ss
jmp
pop
pusha
test
inc
cs
movs
xchg
sahf
xor
fnstsw
lea
or
add
add
dec
xor
sbb
inc
test
push
lock
push
inc
mov
aas
xchg
jmp
rol
and
sar
lods
cmp
jmp
inc
inc
cdq
mov
ds
cli
fst
or
or
mov
jge
lea
cmp
int3
inc
inc
stos
sbb
icebp
add
enter
add
pop
sbb
push
mov
lods
push
or
lahf
cmp
neg
retf
pop
lods
pop
repz
sahf
push
std
mov
xchg
clc
pushf
adc
inc
xchg
pusha
bound
repz
cdq
inc
jg
mov
dec
and
push
sti
pop
pop
or
mov
cs
les
push
int
push
call
sbb
and
pop
rcr
pusha
mov
push
popf
sub
int
pop
(bad)
xchg
sbb
dec
push
push
mov
jl
int3
cdq
push
rcl
and
js
mov
inc
jo
sub
dec
cli
loop
(bad)
dec
js
mov
dec
inc
dec
int
std
sub
pop
pop
ja
test
dec
jl
inc
cs
mov
mov
sti
rol
mov
aas
mov
sbb
pop
mov
int
jae
outs
and
adc
and
icebp
mov
sti
or
jbe
pop
test
pop
pushf
(bad)
mov
xchg
jbe
lock
sub
jne
mov
inc
ja
mov
push
daa
stc
repnz
(bad)
dec
lods
test
loope
in
xor
rcr
xor
pusha
lods
daa
jnp
mov
outs
xchg
mov
inc
les
sbb
ss
xor
aas
mov
mov
fs
mov
xchg
scas
mov
cld
inc
push
daa
pushf
ss
mov
inc
in
inc
adc
(bad)
xchg
or
imul
bound
xchg
adc
into
pushf
cmps
loop
inc
outs
sahf
mov
adc
cmp
(bad)
out
addr16
cmp
push
dec
mov
inc
cmp
mov
int3
mov
cli
stc
add
repz
pop
jmp
ins
popa
add
pand
pop
inc
retf
popf
xchg
retf
mov
gs
mov
pop
mov
cld
add
rcl
lea
aam
mov
dec
gs
mov
clc
xchg
shl
inc
pop
fwait
lods
inc
jecxz
fisttp
test
sub
push
lea
sbb
ss
ins
jmp
inc
xor
aas
push
or
push
cmp
mov
call
cwde
inc
jno
pushf
cs
mov
xchg
jo
jmp
xor
rcl
jmp
popf
movs
adc
sti
div
mov
cmp
fist
pop
jb
inc
shr
dec
and
pop
sbb
fwait
nop
xor
fisttp
jmp
push
jne
fistp
sub
adc
add
lahf
inc
push
xchg
into
(bad)
sbb
and
fist
shl
xchg
pop
cld
mov
xor
mov
mov
lods
ins
jae
leave
xchg
adc
(bad)
inc
mov
xor
fld
sub
adc
jno
xchg
mov
adc
add
inc
cmp
(bad)
sbb
sahf
push
nop
xlat
and
dec
leave
int
inc
mov
jp
jns
push
stos
push
enter
jmp
mov
or
test
lds
mov
pushf
mov
aaa
jmp
dec
ins
mov
push
cmp
cld
fistp
adc
outs
cmps
and
push
movs
add
mov
mov
sbb
pop
test
outs
jle
idiv
mov
iret
or
dec
ja
ja
mov
movs
into
std
(bad)
cmp
hlt
xchg
cmp
jbe
lea
mov
dec
xchg
xchg
in
xor
rol
fwait
cmps
jmp
xchg
mov
ss
fsub
mov
dec
div
cmp
ret
pop
push
jl
mov
pusha
or
mov
imul
jp
sti
gs
pop
xor
adc
dec
arpl
js
sub
call
repnz
shr
mov
xor
mov
dec
ja
mov
push
cmp
cmc
or
jle
pushf
scas
jb
push
cmc
movaps
cmc
(bad)
fist
cmp
popa
fcomp
ins
push
lods
inc
sub
les
dec
clc
cli
or
aam
sbb
xor
xor
push
xor
xchg
das
mov
stos
push
or
mov
(bad)
shl
das
mov
jo
imul
pop
pause
stc
push
test
loopne
lock
or
fneni(8087
mov
lea
ja
mov
push
xor
cli
neg
xchg
popf
movs
push
retf
and
repnz
fisubr
sbb
bound
push
or
mov
lahf
popf
or
imul
jne
jne
int
sbb
sub
scas
jnp
mov
sahf
sbb
cs
not
mov
shr
inc
(bad)
bound
lds
xchg
(bad)
ins
xchg
loope
addr16
mov
xchg
jnp
inc
lea
pop
inc
pushf
mov
cmc
xchg
in
lock
add
fnstsw
in
cmp
cmp
or
jp
cwde
test
sub
nop
ds
pop
dec
fldcw
ins
ja
adc
out
jne
push
cmp
loope
xor
jmp
loope
jnp
mov
jb
scas
cmps
outs
fstp
popf
add
inc
sti
stc
test
dec
mov
mov
call
pop
jecxz
(bad)
push
sub
stc
in
repz
sbb
data16
inc
dec
call
je
std
sbb
sbb
pop
push
pop
outs
sbb
add
jg
retf
mov
mov
and
lods
xchg
mov
pop
jl
jp
xchg
fsub
out
push
in
bound
mov
mov
mov
inc
push
lods
test
adc
mov
mov
stc
outs
lods
mov
xor
cmp
cld
stc
fild
push
bound
popa
stc
sbb
in
test
xchg
in
jns
mul
bound
aas
xor
jge
lods
inc
nop
jbe
jnp
mov
push
cdq
mov
stc
mov
mov
inc
lahf
mov
push
xchg
xchg
pusha
es
sti
neg
call
and
mov
stc
repz
ins
mov
div
fmul
and
dec
cmps
jne
dec
std
gs
mov
mov
pop
icebp
shr
mov
pusha
sbb
xor
jo
add
pop
mov
jmp
or
lea
jl
aad
xor
push
cmps
jbe
cwde
lock
out
in
(bad)
xchg
jns
fldenv
xchg
push
xchg
(bad)
mov
adc
call
mov
inc
jecxz
fisttp
shl
aaa
inc
or
inc
loopne
pop
jbe
mov
fwait
loope
mov
adc
and
add
pop
retf
mov
pop
repz
call
xchg
sbb
outs
jge
stos
jbe
lahf
ror
(bad)
movs
popa
ror
jb
sbb
or
pop
iret
cmc
sub
xor
push
fidivr
and
cmc
test
and
cmp
push
or
sahf
xchg
nop
or
and
xor
pop
push
imul
test
pop
mov
(bad)
jno
sbb
shl
sti
jns
pop
cdq
pop
shl
push
int3
mov
mov
mov
push
test
aam
shl
inc
outs
xchg
mov
imul
push
sbb
shl
imul
xchg
pop
push
pop
xchg
mov
mov
repnz
mov
ss
sbb
sub
add
cmps
cmp
mov
dec
(bad)
mov
mov
pop
data16
xchg
xchg
ja
in
cmp
inc
call
jnp
pushf
sbb
mov
repz
and
push
clc
and
jle
sbb
lods
dec
sub
stos
adc
mov
loope
or
or
inc
ins
pusha
sub
cwde
pop
mov
stc
imul
sbb
jmp
ret
xor
jns
inc
test
fst
cmps
ins
jmp
or
(bad)
das
(bad)
mov
stos
add
repnz
retf
dec
mov
mov
pop
cmp
sbb
pusha
and
push
mov
dec
sub
mov
push
push
push
xor
pop
cmp
or
jns
movs
jl
mov
mov
xor
inc
test
jo
dec
jb
mov
lods
fisub
iret
lahf
fs
pusha
add
loopne
mov
inc
jl
mov
adc
rol
jle
loop
ins
xchg
jno
sub
push
clc
icebp
fstp
or
cmp
cmp
inc
adc
sub
pop
stc
std
xor
and
and
jo
cmp
daa
nop
xor
inc
pop
stos
pop
inc
retf
popf
movs
test
stc
int
add
jbe
mov
dec
pushf
jmp
and
(bad)
lods
sbb
ins
mov
mov
mov
inc
retf
imul
mov
push
jmp
fisubr
or
int3
cld
fist
cmp
push
inc
add
icebp
dec
jmp
or
mov
adc
add
ss
imul
xor
test
pop
and
dec
xchg
test
pop
jno
outs
test
and
jmp
mov
retf
mov
mov
ja
xchg
cdq
neg
loope
or
fldenv
pop
fisubr
sub
fdivr
retf
jbe
and
or
test
imul
pusha
pop
dec
out
mov
pop
fild
(bad)
and
jb
int
sbb
pusha
mov
imul
popf
test
std
les
(bad)
inc
inc
gs
lock
xor
in
and
rol
(bad)
mov
pusha
xchg
mov
dec
jmp
(bad)
sub
cmp
rcl
dec
fistp
jnp
fbstp
cmp
jbe
setb
fstp
loop
mov
jbe
push
aaa
jmp
imul
movs
jg
movs
cmp
retf
inc
es
out
in
pop
into
test
push
pop
sahf
and
iret
call
mov
jl
and
pop
imul
ror
or
retf
fldenv
sub
fist
push
test
jno
mov
mov
std
xchg
cs
jb
jae
cmps
aas
cmp
and
cmps
jb
mov
xchg
xor
cdq
test
(bad)
scas
sti
adc
mov
push
pop
ds
fs
ret
ficom
xchg
add
push
sub
inc
gs
repz
ror
outs
mov
clc
dec
sub
cli
retf
nop
add
adc
std
jbe
jl
mov
mov
and
sbb
out
sbb
pop
cmp
cmp
imul
mov
sahf
jg
mov
push
cwde
mov
pop
xchg
scas
sub
bnd
pop
jle
stos
pop
fdiv
adc
xchg
es
fild
stos
fmul
mov
repnz
xor
cmp
fnstsw
pop
xor
(bad)
sar
ss
add
cmp
loopne
pop
imul
icebp
or
inc
pop
retf
pop
and
and
test
sbb
mov
or
and
xor
jno
scas
jp
mov
imul
sti
not
test
fiadd
mov
repnz
int3
cmc
out
test
bound
or
cld
ds
cld
enter
push
cmp
sahf
inc
sub
fwait
sar
cmp
test
sbb
cmp
add
sub
dec
sbb
gs
pop
ins
(bad)
out
inc
mov
jo
outs
push
dec
stos
jp
mov
mov
xchg
mov
xor
pop
xchg
push
jne
sahf
test
dec
rcr
repnz
and
retf
dec
test
es
(bad)
jbe
es
aaa
data16
pop
arpl
mov
mov
out
xchg
js
lock
jge
ss
imul
and
jb
fcomp
(bad)
cdq
mov
add
ss
fst
loop
jbe
lea
mov
mov
push
test
cmp
imul
lea
ja
mov
js
fiadd
fwait
scas
pop
retf
xor
dec
daa
dec
iret
cli
fstp
xor
push
pop
sahf
cs
popa
fwait
movs
(bad)
xchg
dec
pop
clc
pop
test
inc
pop
and
and
aas
lods
ins
hlt
addr16
dec
pop
mov
xchg
imul
je
rcl
mov
stos
dec
std
xchg
(bad)
sti
cmc
sbb
inc
xchg
(bad)
mov
aaa
mov
mov
xchg
hlt
(bad)
lods
lods
inc
out
clc
ds
test
je
pop
xchg
ins
pop
xchg
jb
mov
xchg
cmp
imul
aas
(bad)
add
mov
sbb
push
fisttp
call
in
scas
xchg
das
(bad)
std
jo
sbb
stos
dec
ret
movs
(bad)
dec
mov
stos
jne
cmps
dec
cmp
rcl
lahf
add
mov
mov
adc
(bad)
jmp
jecxz
fs
mov
jp
sub
sbb
cld
xlat
jnp
sbb
bound
imul
cwde
mov
mov
(bad)
in
cmp
add
cmp
jl
sub
sbb
test
add
mov
dec
jmp
cli
pop
inc
push
mov
dec
pushf
in
and
sti
nop
push
out
repz
adc
test
test
xchg
retf
ins
xchg
fbstp
(bad)
or
pop
std
out
jmp
sbb
cmps
sbb
data16
jo
mov
mov
(bad)
and
test
dec
inc
cmps
push
adc
adc
push
mov
mov
inc
popf
test
call
test
ror
test
pop
mov
mov
xor
js
mov
dec
inc
xchg
mov
adc
sti
icebp
sbb
push
mov
(bad)
ds
(bad)
inc
jle
mov
inc
and
fwait
into
stos
pop
sub
pop
out
icebp
or
sbb
and
xor
aas
iret
pop
sar
scas
pop
pop
mov
mov
inc
or
int3
xor
sti
jb
imul
add
sti
dec
fmul
jmp
fcomp
xchg
pop
arpl
retf
jecxz
aad
dec
pusha
lahf
lahf
push
retf
sbb
dec
jmp
push
dec
mov
ins
push
sahf
cs
popa
fwait
mov
iret
inc
(bad)
mov
adc
dec
adc
add
inc
pop
nop
dec
dec
movs
cmp
mov
push
and
fmul
cwde
inc
add
mov
cmps
push
out
mov
std
out
xor
add
lahf
add
sar
call
scas
retf
jnp
mov
adc
xor
cli
fist
xor
push
dec
push
xchg
dec
out
mov
dec
cli
or
xor
adc
jbe
xor
das
mov
mov
dec
lahf
mov
dec
jmp
out
int
push
les
push
fist
in
sahf
rcl
xor
rol
cdq
lahf
mov
outs
xchg
mov
in
aad
dec
imul
cmp
sbb
call
ja
dec
fstp
outs
bound
mov
fcom
test
fiadd
pop
and
inc
sub
adc
addr16
mov
xchg
sbb
mov
mov
cmp
popa
out
out
mov
pop
and
inc
cdq
mov
je
jecxz
or
mov
stos
xchg
ja
mov
std
sub
mov
sub
out
jmp
test
jge
mov
jl
xchg
mov
or
jmp
mov
inc
mov
add
inc
outs
scas
pop
cmp
sbb
mulps
ficom
retf
ins
pop
push
mov
dec
mov
xchg
dec
es
test
loopne
add
jae
xchg
cmps
push
push
jmp
pop
popa
sahf
test
cs
cmp
repz
jbe
inc
jo
pop
lods
aas
dec
push
mov
xchg
into
mov
and
ins
fwait
idiv
fwait
cli
jb
bound
add
and
pop
pusha
(bad)
push
xor
jne
push
jle
fcom
aam
pop
push
nop
pop
idiv
mov
or
out
js
lods
test
aaa
call
adc
sti
dec
ins
xchg
fadd
enter
xchg
iret
iret
and
arpl
push
dec
mov
fnstsw
out
adc
hlt
jge
dec
and
inc
cmp
mov
shl
cmps
arpl
jo
test
push
mov
out
xchg
and
pop
dec
mov
cmp
int3
mov
jmp
ror
xchg
ja
mov
or
mov
mov
cmp
fist
pop
or
push
mov
cs
call
jg
cli
push
mov
xor
xor
add
fcom
mov
and
pop
jmp
lock
repz
mov
sahf
jg
not
xchg
add
js
movs
stos
mov
mov
xchg
mov
xor
enter
mov
fcomp
ret
push
jmp
jge
popf
push
sub
call
int3
or
xor
sbb
jo
add
dec
ins
scas
jp
sub
adc
push
dec
jmp
xchg
xor
sbb
dec
sti
and
call
or
pop
or
jae
xchg
mov
adc
repnz
mov
pop
int
sbb
std
jmp
dec
xchg
sbb
mov
mov
(bad)
jl
xchg
das
mov
aas
fld
push
cs
lods
add
pusha
stos
jg
mov
pop
lea
fs
cli
test
mov
jne
lods
js
mov
dec
xchg
les
push
xchg
movs
mov
xchg
mov
sti
loopne
test
bound
mov
xor
(bad)
dec
push
loopne
add
dec
mov
inc
cmp
mov
pop
fistp
sar
mov
push
pop
xor
sbb
pop
or
das
lods
aas
hlt
inc
ins
stos
adc
movs
sub
mov
sub
sar
sub
shl
in
xchg
aam
dec
retf
cld
push
sub
rol
xchg
mov
add
cmc
out
stc
clc
pop
jne
lahf
inc
int
fisubr
rcl
pop
cmp
dec
jle
inc
cmp
popf
mov
mov
clc
cli
sbb
and
aas
xor
add
shr
xchg
jg
stos
sbb
mov
ins
rol
and
lock
les
and
inc
loop
mov
je
mov
cmp
test
jo
mov
push
and
repz
inc
cwde
cmps
dec
mov
sub
sbb
iret
leave
arpl
aas
jae
cmp
inc
push
imul
int3
pusha
dec
inc
jb
rcr
jo
sbb
icebp
push
cmps
cmp
retf
daa
aaa
rcr
add
jnp
mov
and
rol
fcmovb
mov
loope
mov
cmps
retf
jl
sti
xchg
std
push
and
fcom
mov
push
aas
sbb
jmp
dec
xchg
xor
xor
mov
inc
push
mov
call
fisttp
mov
add
inc
xor
and
sbb
(bad)
movs
push
ins
test
(bad)
sbb
cs
into
mov
repnz
jae
stos
push
loop
idiv
ret
loope
fs
imul
lea
push
sti
xchg
mov
inc
out
in
retf
jg
or
out
sub
jecxz
fdivr
cmp
and
sbb
cdq
inc
xor
(bad)
cmp
jle
in
jns
loopne
popa
jg
aam
and
add
dec
lahf
jb
mov
pop
cdq
mov
xor
push
pop
lahf
(bad)
xchg
cmp
(bad)
jns
push
and
inc
mov
xchg
or
icebp
das
out
sbb
pop
in
adc
div
pop
imul
loope
xlat
sub
and
sbb
push
cmps
imul
ds
addr16
jae
pop
ss
xor
sub
jbe
inc
mov
sbb
aaa
and
int
sbb
out
popa
lds
push
push
mov
fxch
lock
popf
in
push
(bad)
mov
neg
xchg
imul
fs
lds
(bad)
mov
mov
cli
pop
test
sub
int
jmp
mov
aaa
cmp
lods
cmp
inc
out
or
xor
or
scas
cmp
or
mov
sbb
and
(bad)
xchg
aas
xchg
mov
adc
and
outs
mov
cdq
push
hlt
in
and
push
test
outs
jae
mov
adc
(bad)
cld
adc
dec
jp
(bad)
jns
jno
sub
stc
jmp
dec
mov
push
inc
dec
icebp
fwait
mov
cmp
xchg
inc
outs
pusha
pop
mov
imul
fnstcw
mov
pop
cmps
xlat
xchg
jno
and
cld
xchg
and
sti
push
loop
inc
gs
popa
(bad)
mov
dec
or
push
(bad)
rcr
test
jno
rol
(bad)
dec
sbb
lea
ss
sbb
sbb
xchg
lods
imul
mov
mov
sahf
xor
sbb
pop
mov
xor
pop
fsub
or
aaa
pop
dec
ins
(bad)
xchg
push
mov
bound
loopne
clc
push
xchg
aam
dec
retf
stos
pop
add
outs
xchg
mov
jl
rol
cld
repz
mov
fimul
sub
shl
pop
popf
dec
jo
inc
pushf
push
sub
les
add
std
or
xor
cmp
sahf
imul
xor
cmp
mov
adc
and
int3
std
xchg
aaa
shl
jno
adc
dec
popf
inc
fimul
mov
into
xchg
pop
add
xlat
mov
lahf
fwait
xlat
push
add
cmp
fild
mov
shl
sub
repz
jbe
pop
jb
inc
scas
push
pop
fs
imul
lahf
inc
cs
fucomi
adc
aaa
cmc
pop
xor
add
cmp
sub
cmps
test
jmp
jmp
cmc
ins
dec
sub
inc
cld
mov
dec
cdq
mov
pusha
daa
faddp
xchg
add
add
lahf
and
mov
stos
adc
in
sti
outs
add
retf
dec
iret
hlt
fcom
cmp
cmp
push
sub
scas
lds
inc
in
fcom
pushf
xchg
jae
sbb
cli
xor
add
das
fstp
shr
mov
ja
movs
cli
cmp
jl
retf
sahf
retf
dec
jns
stos
dec
ficom
cmps
popa
mov
and
dec
mov
pop
push
loopne
mov
daa
iret
loopne
enter
mov
je
push
fist
inc
push
nop
repz
jb
dec
sbb
pop
test
mov
in
int
aas
mov
and
and
pop
adc
pop
mov
mov
push
mov
dec
test
xchg
aas
mov
pop
push
lods
push
jecxz
mov
test
in
aaa
out
test
imul
add
(bad)
mov
adc
repnz
mov
jecxz
aad
push
xor
cld
fdivr
sbb
or
mov
inc
push
ins
lahf
mov
jmp
mov
jl
gs
and
jae
and
and
push
stos
imul
dec
js
lods
loope
ds
cmp
mov
jge
popf
pop
fst
xchg
fs
mov
xchg
push
repz
call
xor
fisttp
(bad)
fld
push
sbb
dec
in
jmp
jo
inc
fst
push
lea
xchg
mov
stos
jle
cli
and
pop
ss
xor
pop
or
lods
push
sbb
sbb
mov
inc
mov
bound
pop
cdq
mov
xchg
test
mov
lea
xchg
inc
popf
call
fld
inc
loope
retf
inc
icebp
shl
inc
sti
xor
jg
cmp
aaa
push
mov
mov
jmp
push
and
xor
and
jne
inc
data16
ja
mov
cmp
(bad)
mov
mov
inc
push
mov
fs
rcl
(bad)
mov
cmps
mov
rcr
pop
ja
mov
popa
xor
mov
lods
inc
shr
sub
dec
mov
sar
jb
dec
xchg
pop
test
jp
movs
leave
(bad)
xor
xlat
sbb
adc
pop
sbb
pop
mov
les
scas
js
cmps
xor
fwait
mov
push
(bad)
push
mov
jb
mov
dec
xchg
div
or
outs
or
gs
xchg
sbb
cli
cmps
retf
sbb
fimul
frstor
dec
jo
inc
mov
inc
sbb
popf
test
dec
inc
lods
inc
loop
sbb
inc
mov
xor
cmp
popf
inc
cmp
cmp
mov
sbb
ss
neg
mov
scas
lea
ins
je
stos
arpl
mov
pop
sti
stos
in
cld
xchg
jns
in
test
inc
lock
jbe
mov
xchg
add
sar
mov
mov
sub
pop
ror
cs
aam
iret
imul
sbb
jae
adc
mov
mov
mov
cld
clc
das
test
daa
into
and
and
or
inc
push
inc
outs
xchg
xor
les
inc
jbe
stos
jle
popf
in
adc
jp
test
xchg
call
or
clc
(bad)
pop
dec
mov
(bad)
or
ss
fistp
or
sub
outs
test
ret
leave
lea
nop
addr16
arpl
cmp
add
and
add
jb
mov
inc
lods
retf
push
add
rcl
repnz
pop
push
cdq
jp
mov
aas
mov
cdq
pusha
cs
xlat
mov
pop
movs
mov
jle
mov
test
aaa
sti
test
lods
mov
jecxz
fstp
sub
cli
jmp
js
dec
rcl
sub
mov
fdivr
std
sbb
xor
pop
cmp
adc
jns
mov
ins
mov
mov
inc
and
out
in
add
fnstenv
ins
fs
inc
out
xchg
pusha
in
inc
xor
rol
mov
push
test
fadd
mov
inc
call
iret
aam
fnsave
jb
push
pop
pop
push
mov
dec
scas
mov
mov
jmp
jno
iret
pop
sbb
das
mov
mov
cmps
or
mov
push
inc
jecxz
mov
loopne
inc
push
(bad)
pop
stc
add
in
imul
mov
das
mov
mov
(bad)
pop
js
fld
pop
fdiv
pop
sbb
test
jg
and
push
dec
inc
xchg
inc
icebp
ret
scas
stos
ds
sbb
jmp
mov
and
aas
or
cmp
mov
mov
pop
mov
out
fdiv
jnp
push
stos
dec
cmc
mov
sti
dec
hlt
cld
pop
dec
xchg
mov
stos
(bad)
pushf
les
jg
test
out
test
inc
inc
push
nop
clc
in
push
cld
xor
sbb
push
cmps
mov
inc
les
addr16
in
sbb
push
cmp
or
shufps
imul
pop
in
mov
pop
xchg
enter
repz
imul
lock
jecxz
cdq
push
loop
jno
cli
shr
lea
hlt
(bad)
lahf
fs
loopne
std
popa
aaa
cli
hlt
adc
call
dec
mov
shr
sbb
push
sbb
mov
retf
sub
nop
ds
jle
retf
xor
push
sub
push
aam
ja
(bad)
mov
loope
pop
add
sti
mov
int
out
inc
push
mov
pop
mov
xchg
je
mov
mov
(bad)
call
call
retf
test
inc
cmc
scas
inc
lea
dec
cs
iret
mov
pop
fnstsw
jb
push
mov
jns
call
mov
retf
imul
mov
sbb
inc
mov
arpl
daa
iret
or
ins
outs
test
adc
mov
out
leave
mov
stos
jmp
loope
jnp
mov
arpl
xchg
fstp
test
pusha
inc
lods
movs
add
in
fsub
mov
cs
ds
jmp
mov
je
mov
ja
xchg
mov
call
sbb
inc
and
ss
and
movs
rdtsc
movs
cmp
adc
and
(bad)
mov
xchg
push
lods
inc
jmp
fs
or
xchg
add
mov
sbb
mov
adc
clc
(bad)
enter
mov
outs
mov
mov
cmp
pop
repz
dec
xchg
addr16
dec
cli
bound
push
in
mov
mov
lea
fidiv
jno
les
sbb
and
and
test
xor
sub
and
pusha
fdivrp
inc
shr
jecxz
jbe
cmps
pop
adc
addr16
xchg
pop
cmp
movs
mov
shl
stos
jmp
mov
mov
or
add
fld
or
mov
jle
cmp
add
xor
push
mov
push
inc
stos
pop
cld
shl
(bad)
jo
push
pop
mov
sbb
outs
fwait
jge
mov
inc
repz
cmp
mov
and
jnp
mov
pop
xchg
retf
mov
fcomp
test
scas
cli
push
mov
test
pushf
xchg
retf
outs
sbb
or
aad
pop
clc
xor
push
sub
popf
scas
mov
(bad)
std
aas
mov
sbb
add
je
adc
sub
pop
fsubr
cdq
pop
aaa
movs
xor
mov
cmp
fistp
cmc
popa
add
mov
inc
xchg
(bad)
cdq
push
in
in
push
repnz
imul
dec
fs
mov
adc
xlat
xchg
fbstp
(bad)
or
cs
ficomp
pop
jnp
dec
mov
inc
cs
fwait
lds
in
add
mov
xor
js
sahf
outs
adc
test
leave
fdivr
ret
sbb
mov
aas
mov
xchg
in
inc
daa
clc
ret
mov
mov
jle
xchg
ret
xchg
sbb
out
fdivr
mov
fld
pop
ss
neg
pop
lds
or
and
cs
dec
mov
mov
push
clc
je
pop
pop
fistp
xchg
and
and
ins
jae
pop
xor
cmp
sbb
and
xor
fstp
jns
jbe
outs
loop
mov
std
movs
jno
xchg
add
mov
mov
jmp
rcr
jl
enter
ror
push
jp
sub
or
out
idiv
sahf
pop
pop
cmp
sub
mov
(bad)
int
sbb
sbb
aas
fcom
mov
imul
jg
sub
clc
mov
cli
pop
jno
lods
js
cmps
lock
sahf
test
cmc
movs
xchg
xor
sahf
ret
addr16
push
and
fcomp
dec
inc
xchg
fisttp
push
rcr
cs
shr
pop
pop
(bad)
xor
inc
xchg
xchg
les
in
aam
xchg
add
sbb
push
fwait
das
mov
(bad)
ins
inc
mov
pop
mov
(bad)
sbb
aaa
jl
fistp
aam
pop
jbe
pop
cmc
mov
dec
popf
shl
div
xchg
cmp
ins
or
test
xor
inc
mov
cmp
or
(bad)
cwde
adc
add
lods
jne
mov
scas
rcl
dec
pop
fstp
adc
dec
arpl
fsub
es
and
and
cdq
push
cmp
lahf
xor
fs
movs
add
je
stos
pop
jmp
sti
dec
mov
loope
cld
mov
xchg
cmp
out
sbb
loopne
cmc
adc
fucomi
stos
fcmovu
data16
scas
mov
sbb
fmul
iret
pop
lock
sub
test
and
jmp
mov
out
(bad)
xchg
cli
jo
jno
iret
aas
xor
aas
(bad)
jne
outs
dec
mov
outs
in
mov
sbb
fsubr
daa
mov
jnp
jle
jg
inc
xchg
lahf
inc
(bad)
cld
pop
dec
xchg
mov
lea
pop
xchg
mov
adc
test
mov
cmps
sub
cmp
jecxz
jae
dec
rcr
add
xchg
call
inc
xchg
mov
add
push
dec
mov
add
xor
pop
popf
stc
out
sub
icebp
bound
mov
and
add
sar
mov
outs
push
xchg
mov
jmp
shl
and
adc
fldcw
and
ror
fs
test
jns
cs
push
nop
retf
push
or
dec
out
ret
out
js
inc
pop
in
outs
inc
jb
fwait
cmp
mov
dec
mov
dec
(bad)
xchg
adc
jnp
sar
loop
xchg
into
xchg
fs
inc
push
sar
(bad)
adc
ins
stos
(bad)
mov
pusha
mov
std
(bad)
ret
inc
jmp
dec
retf
sub
icebp
(bad)
(bad)
push
stos
cmp
test
jmp
push
iret
ja
out
das
mov
and
ss
and
inc
pusha
mov
arpl
push
ins
leave
test
mov
pop
xchg
mov
push
aam
xchg
cdq
shl
popf
sbb
mov
stc
stc
not
jecxz
ins
nop
scas
xor
push
jmp
shl
fs
push
jb
inc
lea
js
push
stos
mov
fbld
cli
sbb
and
sbb
jb
sbb
fs
cmps
jl
cmps
xor
xchg
ins
pop
push
inc
loope
sti
add
hlt
push
clc
imul
lock
loop
adc
xchg
cmc
movs
lea
call
ret
add
sbb
mov
lock
mov
dec
retf
and
int
cld
jbe
cmp
ss
adc
mov
xchg
out
sar
add
inc
out
and
je
imul
pusha
mov
mov
gs
mov
xor
or
out
fild
cmc
dec
jge
test
inc
in
movs
sbb
in
cmc
or
ins
or
jmp
and
cli
push
inc
mov
std
add
fld
sahf
sbb
pop
shl
mov
stos
int3
nop
dec
cmp
inc
sar
das
fwait
dec
fs
and
and
push
and
add
pop
pusha
xchg
outs
inc
mov
mul
and
(bad)
loop
add
sahf
aas
xchg
loope
inc
call
mov
cmp
sbb
mov
add
icebp
inc
ins
mov
imul
dec
ret
jbe
and
add
stos
pop
ins
push
mov
or
call
pushf
adc
mov
push
inc
fsub
out
cmp
stos
jg
xchg
sub
test
add
and
icebp
mov
frstor
inc
test
bound
in
sub
mov
xchg
(bad)
pop
cmps
test
(bad)
inc
inc
mov
push
or
retf
js
push
pop
and
test
push
mov
imul
push
cmp
sbb
cmp
fs
inc
dec
fisubr
scas
sub
cld
sub
lods
mov
cmc
sbb
(bad)
ins
(bad)
mov
mov
cld
inc
pop
in
xchg
push
out
repz
jo
mov
adc
ror
xchg
in
repz
inc
lods
aam
cli
jne
or
ss
fisttp
cmp
pop
xor
jne
cmp
mov
aam
repz
sbb
aaa
push
jl
adc
push
pusha
lods
pop
sbb
(bad)
fst
repnz
push
scas
jbe
mov
push
pop
pushf
das
out
xchg
mov
imul
push
daa
iret
loope
repz
bound
fsubr
sub
shr
or
cmovnp
aaa
sub
xor
jmp
movs
out
outs
dec
jne
int
aas
je
sbb
daa
mov
fsubr
or
test
outs
aas
push
jl
iret
jecxz
mov
jle
rcr
xchg
(bad)
ins
xchg
out
jo
xchg
pusha
and
rol
scas
dec
mov
push
xchg
cmps
cmp
xor
mov
dec
out
sub
inc
int
retf
inc
push
fs
or
mov
outs
xchg
test
into
lock
mov
xor
pop
or
sbb
das
mov
cmp
inc
push
xchg
cmp
fstp
fcomp
pop
nop
pop
loop
neg
sar
xchg
sbb
nop
outs
lods
mov
js
mov
fninit
xchg
out
aad
pop
lods
sub
idiv
inc
push
or
push
fwait
inc
or
xchg
(bad)
dec
out
cmp
pop
pop
ret
pop
xor
pop
cmp
and
adc
pop
cmps
mov
cmp
(bad)
xor
std
push
les
and
jge
shl
out
jb
std
retf
repz
fwait
mov
imul
sti
jae
xchg
add
iret
dec
cs
jmp
aaa
push
or
or
mov
fst
mov
pop
test
das
mov
add
je
int
or
icebp
sub
cmps
push
pop
lea
or
push
dec
in
scas
sti
add
std
jl
dec
dec
push
stos
inc
lds
lahf
dec
ret
cmp
cmc
mov
int
mov
test
mov
fcmovnb
mov
lahf
scas
push
xchg
push
mov
inc
push
and
sub
arpl
jle
addr16
pop
inc
jp
retf
mov
cmp
(bad)
and
jbe
int
push
push
push
add
arpl
jb
mov
add
jge
(bad)
shl
push
mov
pop
fwait
loop
push
mov
jle
test
xchg
sti
test
je
xchg
cmps
std
shl
jmp
dec
push
sub
pop
jmp
jo
dec
mov
push
push
add
lahf
rol
(bad)
mul
leave
shl
jg
int
sbb
add
lods
jg
mov
outs
in
mov
retf
sar
das
(bad)
cmc
pop
loopne
gs
shr
or
loope
stos
data16
adc
jecxz
xchg
jns
xchg
mov
xor
shl
fcmovu
dec
outs
lahf
test
sub
cmp
ds
cld
leave
pop
sti
sbb
pop
mov
push
adc
sbb
ja
sar
in
add
cmps
push
ja
and
mov
inc
arpl
or
mov
sub
in
test
xor
lds
inc
stos
sub
movs
loopne
adc
popa
retf
xchg
mov
movs
cmps
(bad)
sub
outs
jnp
mov
xchg
std
loope
pop
xchg
mov
sbb
fmul
repnz
fistp
jbe
lods
ins
pop
jo
inc
dec
test
mov
xchg
sar
retf
push
inc
imul
inc
(bad)
ins
es
mov
mov
fadd
out
cwde
imul
inc
jnp
mov
scas
(bad)
pop
fwait
les
or
mov
xchg
pop
addr16
popa
cmp
loop
shl
inc
jg
xchg
dec
repz
xor
(bad)
inc
jo
outs
xchg
jns
xor
jns
mov
mov
ret
hlt
add
adc
xor
add
jb
dec
gs
inc
cmps
dec
push
call
(bad)
mul
xor
jmp
fnstsw
jb
jp
mov
dec
xchg
loope
push
call
mov
stos
mov
inc
mov
and
icebp
cdq
(bad)
push
out
xor
push
ss
call
ja
and
cmp
push
or
and
outs
sahf
int3
or
xor
xor
sbb
je
dec
pusha
test
adc
mov
adc
dec
out
out
test
je
popf
sub
mov
pop
xchg
into
xor
movs
test
out
pusha
movs
mov
sbb
fwait
mov
xor
jmp
inc
pusha
fwait
lods
pop
(bad)
ds
dec
cli
retf
retf
push
push
cmp
sahf
jbe
jne
mov
mov
icebp
fmul
mov
jg
inc
adc
and
das
mov
test
adc
adc
dec
call
aad
jmp
pop
lock
xchg
fs
push
and
rol
(bad)
(bad)
jg
xchg
mov
pop
inc
mov
sbb
mov
jne
sbb
retf
and
sub
pop
inc
das
mov
stos
mov
cvtpi2ps
pop
in
push
lahf
jmp
add
das
mov
mov
ja
movs
test
cli
icebp
popf
sbb
jbe
test
aas
xchg
in
call
cld
xchg
jno
int3
ror
mov
outs
inc
xchg
jmp
fld
pop
fist
and
(bad)
(bad)
fadd
pop
or
je
xor
jbe
movs
xchg
(bad)
cmp
stc
xor
xor
inc
cmp
in
add
mov
cmps
adc
lahf
scas
(bad)
sbb
jl
iret
mov
sar
inc
scas
inc
lds
xchg
jo
and
shl
jmp
pop
sub
outs
adc
aad
call
hlt
fistp
cmp
add
pop
mov
xchg
mov
xor
fsub
xlat
das
mov
jo
push
fdiv
sub
pop
mov
mov
scas
dec
push
cmps
sbb
call
out
div
inc
jns
test
push
xlat
in
and
fbstp
(bad)
mov
ja
leave
test
cmp
push
fdiv
push
cmp
push
push
daa
outs
mov
jbe
push
les
dec
fsubr
das
fcomi
addr16
dec
add
cmp
jl
adc
outs
pop
or
xor
mov
cmp
cmc
sahf
cmp
sbb
fnstenv
xchg
adc
xchg
jg
lock
test
pop
test
repnz
into
out
data16
dec
and
(bad)
(bad)
sar
inc
push
fs
jge
mov
daa
pop
out
xchg
mov
imul
jg
lock
dec
dec
into
and
push
push
add
imul
movs
xor
mov
or
or
scas
cdq
pop
leave
repz
pop
add
lock
cdq
dec
(bad)
cld
sbb
(bad)
shl
fwait
ror
aas
mov
test
xor
(bad)
neg
jmp
and
aam
xlat
push
ror
or
sahf
aaa
cs
cmc
mov
rcr
loop
or
xor
mov
cwde
push
mov
push
fiadd
add
push
paddsb
cmp
iret
inc
sar
inc
pop
and
and
(bad)
loopne
dec
call
fucomip
and
imul
fdivp
gs
cmp
into
dec
mov
jb
sub
dec
cs
int3
fild
xor
adc
inc
mov
jle
mov
lods
dec
out
fisttp
popa
adc
dec
sbb
add
pop
imul
sbb
dec
fst
cdq
adc
retf
jb
sbb
stos
push
cmp
data16
add
fcmovu
std
or
test
pusha
mov
jmp
jle
mov
inc
out
shl
sbb
rcr
inc
jmp
outs
inc
movs
push
call
test
(bad)
jl
or
int
fs
add
pop
inc
mov
scas
xor
mov
xor
icebp
xchg
daa
mov
jb
jns
push
xchg
ret
xchg
mov
jo
xchg
pop
push
repnz
mov
outs
pop
add
js
lods
mov
push
ror
push
push
inc
fisttp
jge
inc
popa
cmps
mov
mov
jmp
imul
add
add
inc
jo
inc
inc
retf
scas
mov
sub
and
scas
out
mov
pop
test
pop
mov
xchg
ja
retf
movs
lea
push
mov
lods
sar
imul
xchg
mov
xor
add
dec
lock
into
cs
xor
neg
pop
lds
pop
mov
push
mov
sub
call
xchg
push
inc
jbe
iret
pop
sbb
sub
ins
fs
je
mov
inc
cdq
cld
jmp
dec
jbe
test
fstp
sti
push
jmp
and
inc
lock
push
inc
jecxz
test
add
in
mov
mov
rcl
inc
dec
int3
cld
xlat
jns
sbb
dec
test
xor
dec
xchg
mov
mov
lahf
lock
sbb
pop
cs
imul
mov
fstp
mov
inc
cwde
mov
dec
jmp
call
sbb
xchg
xchg
xchg
push
or
xlat
lea
mov
sbb
mov
rep
jmp
ins
xchg
test
push
inc
or
sub
push
pop
mov
inc
pop
or
fld
pop
cwde
fcom
jno
out
cmp
and
cmp
mov
xor
(bad)
sbb
fistp
sub
adc
in
fwait
les
push
fcmovnbe
test
jecxz
add
jne
test
push
xor
inc
js
mov
xchg
ficom
rol
inc
jo
dec
mov
jle
mov
xchg
mov
jmp
lahf
shl
lds
mov
pop
pushf
push
xor
cdq
sbb
sub
in
xchg
inc
mov
jb
push
push
scas
ins
jmp
stc
push
xchg
in
loope
loope
jno
call
ins
mov
sbb
ds
(bad)
fcom
mov
dec
push
or
xor
andnps
push
mov
adc
jl
std
jb
bound
int
sbb
addr16
mov
rcr
fmul
mov
push
xchg
xlat
(bad)
outs
dec
and
(bad)
adc
sbb
test
mov
lahf
dec
ret
or
out
xor
add
fiadd
sbb
sub
xlat
adc
sbb
(bad)
fldenv
inc
jo
pop
mov
aaa
cs
mov
mov
sub
in
out
arpl
pop
in
cmp
adc
jle
mov
inc
cmps
cmp
fdivr
sti
sbb
push
mov
addr16
out
call
mov
mov
xchg
mov
jmp
pop
jl
test
cmp
lods
xchg
js
test
xor
jge
mov
mov
pushf
clc
add
cmp
xor
and
adc
retf
not
lahf
or
and
fcom
loop
jnp
mov
jnp
stos
cmps
push
nop
xchg
inc
and
(bad)
xchg
or
test
xor
test
inc
in
cli
imul
out
outs
mov
cmp
std
ds
xor
dec
cmps
or
mov
or
mov
retf
dec
fmul
and
xchg
sbb
pop
ret
pop
and
sub
fistp
fidiv
lods
cmp
sub
dec
jge
rcl
jns
jge
ins
sub
(bad)
call
rcr
test
ja
mov
stc
xor
sahf
jno
push
scas
xor
ror
jecxz
out
aaa
arpl
dec
mov
dec
ds
mov
fsub
xchg
addr16
mov
ins
inc
cmp
adc
das
mov
scas
jp
cmps
sub
popf
mov
jno
(bad)
xchg
daa
mov
jp
popf
pop
fcmovb
enter
cmps
addr16
xchg
popa
sub
sar
movs
mov
sub
mov
das
inc
mov
test
pushf
mov
pop
fdivr
and
jbe
xor
sub
and
mov
sar
repnz
aad
je
pop
stc
pop
push
add
fcomp
mov
jnp
stos
(bad)
cmp
scas
sahf
aaa
mov
jb
bound
popf
push
div
cmps
fs
test
aad
mov
sti
ins
test
jne
ror
shl
dec
outs
sahf
mov
cmp
sub
cli
inc
inc
daa
mov
imul
or
fwait
add
fwait
clc
popa
push
pop
cmp
pop
sub
adc
mov
dec
sahf
jg
movs
cmp
mov
jle
in
daa
mov
pop
je
outs
in
repz
mov
and
test
int3
data16
(bad)
mov
pop
in
xchg
lea
xor
cli
movs
fdivr
inc
dec
cwde
or
into
das
sbb
loope
lods
pop
xchg
push
jo
dec
scas
ss
push
call
push
stos
xchg
lds
in
jo
cli
push
inc
fs
sbb
pop
xchg
or
or
lea
je
mov
jle
out
sbb
cmc
push
loope
inc
push
shr
xchg
loop
inc
(bad)
mov
adc
mov
xchg
mov
push
call
test
(bad)
jg
mov
fnsave
cs
inc
and
pop
mov
gs
shl
cli
or
xor
test
sbb
push
or
dec
outs
jmp
add
fst
lds
inc
mov
loopne
repnz
add
imul
popa
and
not
mov
gs
movs
mov
add
fisub
test
rcr
daa
push
idiv
fist
push
jo
inc
mov
gs
pop
lods
mov
pushf
cmp
repz
inc
fs
stc
cmp
jae
add
fs
xchg
sbb
add
ins
test
jno
dec
jge
test
mov
push
sar
(bad)
xor
pop
repnz
cmps
mov
sahf
js
mov
xchg
ror
fwait
mov
cmp
fild
adc
jle
or
mov
cmp
test
inc
call
mov
arpl
call
mov
jae
test
sbb
into
cli
push
aaa
add
adc
jbe
stos
pop
fiadd
xchg
dec
xchg
xchg
pop
and
fisttp
adc
cmp
jecxz
push
inc
mov
sub
sbb
(bad)
fstp
sub
cmp
daa
je
stc
cs
jns
mov
stc
ins
int
addr16
and
pusha
adc
ds
test
and
lahf
adc
and
les
cmc
imul
jno
mov
xchg
adc
cld
inc
ss
(bad)
xchg
or
push
mov
sub
cdq
xchg
adc
fcmovnb
mov
jmp
pop
lods
frstor
jmp
sub
mov
shl
xor
jno
daa
mov
out
mov
push
jmp
je
cmc
dec
sbb
inc
popf
and
pop
pusha
movs
jne
cmps
push
pop
mov
ss
call
loop
jl
stos
pop
fbstp
popa
pushf
xchg
repnz
sti
xchg
stos
or
jg
lahf
popf
mov
xor
in
leave
call
ins
shr
fcom
sub
cli
hlt
lods
pop
fnsave
jo
arpl
inc
or
xchg
jmp
test
jp
jne
jmp
sub
mov
fst
retf
repz
cmps
sti
cmp
push
push
cmps
das
test
or
in
ret
out
sub
jnp
stc
(bad)
jmp
out
xchg
pop
rcl
mov
dec
mov
pop
fistp
pop
jmp
(bad)
icebp
adc
dec
cmps
aaa
jns
movs
sbb
cmps
cdq
xchg
xor
mov
jb
inc
adc
xor
or
sahf
sbb
mov
addr16
mov
(bad)
cmps
out
mov
add
mov
cmp
xchg
inc
adc
inc
xchg
xchg
test
aaa
lahf
bound
cdq
test
pop
aaa
rcr
movs
enter
mov
ds
in
jns
and
bound
sbb
call
arpl
aam
cdq
cmc
bound
in
ss
sbb
inc
arpl
outs
mul
inc
sti
in
sbb
hlt
add
mov
scas
test
jmp
jl
xor
rol
rcr
test
jnp
mov
ds
(bad)
fsub
scas
mov
cmps
and
(bad)
enter
jae
pop
mov
inc
sub
movs
mov
test
aas
cdq
cmc
adc
leave
and
jp
adc
adc
stos
mov
dec
rcl
inc
xchg
repz
inc
add
mov
js
mov
inc
fsub
popa
ss
mov
lock
scas
loope
test
sti
xchg
mov
call
mov
dec
cli
dec
mul
push
dec
enter
cld
xor
or
test
cmp
test
mul
xchg
jl
xchg
push
addr16
adc
xor
inc
pop
or
add
lods
sbb
mov
dec
cmp
mov
sbb
stos
pop
sti
mov
bound
mov
xchg
ins
mov
cmc
and
in
mov
cwde
mov
pop
pusha
xchg
mov
push
or
jecxz
fistp
xor
pop
inc
push
sub
push
popf
mov
hlt
ja
(bad)
sub
sub
or
add
stos
push
xor
cmps
adc
out
mov
add
mov
xchg
push
in
push
xor
rol
xchg
jl
sahf
test
adc
aam
aam
xor
cmc
sub
int
push
inc
xchg
shl
pop
loopne
jo
inc
adc
pop
cmps
data16
xchg
mov
leave
or
lods
iretw
fidivr
(bad)
xchg
add
int
or
or
or
sbb
cmps
sbb
sbb
fst
fcomp
jmp
push
xchg
inc
cmp
rcl
mov
jge
shl
loop
jno
mov
pop
push
dec
(bad)
call
inc
nop
add
dec
mov
cs
jbe
mov
mov
cs
stc
vpcmpeqd
aas
fisub
cmp
push
popf
sub
or
mov
pop
mov
mov
and
out
mov
sbb
adc
push
pushf
pop
pause
cmc
cmp
xchg
jbe
lock
xchg
scas
les
test
push
adc
pusha
inc
jmp
and
push
in
cmp
data16
sbb
pop
sahf
push
and
stos
scas
cwde
adc
call
mov
jbe
jne
fstp
aaa
push
outs
and
int
adc
gs
mov
inc
fdiv
mov
loopne
jno
mov
dec
xchg
repz
je
xchg
popa
ss
hlt
mov
add
loopne
mov
xor
or
stos
cmp
bnd
inc
jns
inc
test
js
cmp
mov
xlat
pop
loop
or
fstp
pop
cmp
xor
jne
and
fist
fstp
mov
bound
and
(bad)
add
jbe
mov
aas
mov
mov
pop
(bad)
mov
imul
cmps
mov
mov
sbb
xor
cld
cdq
rol
inc
outs
xchg
cwde
cmp
dec
lock
add
jmp
shr
fld
ficom
sbb
jp
cmps
iret
xchg
ds
jmp
mov
and
push
mov
pop
fisttp
sar
jno
das
jb
rol
cli
dec
inc
jbe
push
retf
xchg
jecxz
pushf
rcl
adc
repz
mov
call
pushf
xchg
retf
jnp
call
cmp
retf
sbb
movs
cmp
inc
push
nop
cwde
les
(bad)
adc
and
and
ret
movs
xor
sub
fiadd
call
add
fiadd
xchg
(bad)
push
shl
and
ins
or
ja
xor
into
lds
xchg
cwde
inc
loopne
cmps
or
shl
jmp
sub
or
mov
retf
sub
std
cmp
pop
pop
fnstcw
outs
popa
or
xchg
das
mov
mov
pop
popf
mov
inc
(bad)
aam
add
inc
push
xchg
pop
fist
je
loope
pop
xchg
xlat
xchg
add
jne
sahf
fmulp
sbb
mov
adc
les
mov
clc
ds
cmc
mov
inc
retf
or
pop
mov
aaa
jno
xchg
scas
mov
sahf
xchg
arpl
pop
leave
inc
sbb
push
fwait
cmp
add
pop
adc
jne
xchg
(bad)
out
int
jge
ins
fs
test
pause
out
mov
cld
add
in
test
enter
adc
xchg
test
cdq
pop
outs
xchg
call
xor
xlat
stos
imul
pop
push
jle
jns
jge
retf
or
stc
outs
jmp
pop
sub
pop
ja
cmp
push
lods
push
dec
mov
pop
sahf
retf
(bad)
js
mov
push
jb
ficom
sahf
js
shl
enter
out
mov
outs
jnp
mov
cmp
cmc
repnz
retf
fild
out
mov
daa
pop
pop
(bad)
in
stc
je
aaa
jnp
pop
xor
cmp
xchg
dec
daa
retf
inc
fwait
std
sbb
jno
lds
ins
jo
sbb
pop
inc
mov
or
cmps
into
cli
push
and
rcr
fdiv
bound
ins
mov
cld
add
repz
mov
inc
cli
fwait
sub
mov
test
mov
adc
ds
stc
rcl
jo
inc
mov
xor
(bad)
call
push
(bad)
jg
jmp
push
gs
xor
sub
and
jae
movs
xor
movs
xchg
inc
and
shr
aad
sbb
pop
xor
ja
cld
inc
dec
int3
fsub
(bad)
mov
data16
cwde
cmps
ss
in
retf
inc
jg
mov
xor
mov
mov
nop
add
xchg
imul
mov
test
es
arpl
test
xor
sbb
adc
inc
push
sub
into
mov
push
out
mov
sbb
add
jno
dec
shl
xchg
xor
loope
push
jecxz
mov
stos
leave
sub
outs
add
(bad)
lods
icebp
lds
xchg
mov
adc
std
(bad)
callw
aaa
dec
fdiv
push
cmps
cmp
mov
rol
cli
das
mov
inc
dec
popa
inc
int
adc
jae
(bad)
adc
or
pusha
dec
ror
sbb
into
in
cmp
leave
cld
xchg
xor
out
je
outs
pop
push
lods
imul
xchg
jl
xchg
inc
push
jmp
xchg
adc
imul
xchg
js
rol
sub
fwait
fs
aam
es
out
fbstp
cmp
bound
pop
and
mov
mov
jmp
jp
int
sbb
inc
iret
and
jg
stos
push
lods
cmp
mov
sbb
add
cmp
pusha
push
test
hlt
mov
dec
test
mov
icebp
xchg
js
rol
lods
add
mov
jl
fwait
stos
adc
out
mov
inc
jle
lods
push
call
(bad)
fist
push
jl
dec
pushf
or
pop
dec
call
sub
inc
(bad)
or
sbb
xor
xchg
add
sbb
popa
pusha
mov
ja
mov
(bad)
in
fcom
loop
push
cmp
inc
sti
sar
mov
xchg
add
rcl
mov
test
xchg
mov
sti
mov
mov
ja
push
retf
or
push
mov
jo
dec
fisttp
daa
mov
stos
mov
mov
(bad)
ror
mov
add
jno
leave
cmp
sbb
ja
jae
cmps
sbb
adc
pop
dec
in
stc
mov
cwde
inc
ins
pop
popf
pop
out
cmc
inc
xchg
sar
std
fisttp
mov
sti
ret
pop
rol
addr16
imul
sbb
call
js
dec
mov
inc
sub
les
ja
(bad)
cmp
out
jbe
jno
fnsave
mov
outs
mov
nop
cmp
movs
mov
stc
mov
xor
sbb
mov
mov
pop
or
dec
cs
xlat
xchg
ja
ins
mov
sub
ret
or
test
fdiv
dec
push
(bad)
fs
iret
das
aaa
sbb
inc
jne
movs
pop
jle
xchg
dec
cs
mov
fisttp
mov
mov
xor
adc
imul
add
cmp
stc
sahf
add
jne
sub
mov
cdq
inc
in
js
mov
add
mov
inc
mov
mov
stos
retf
jle
test
loope
test
stc
out
je
ss
pop
(bad)
pop
push
movs
jnp
pop
lods
mov
mov
in
popf
out
or
clc
jb
jne
int
adc
and
cmp
pop
test
movs
cmp
mov
inc
sti
iret
cdq
adc
sbb
popf
dec
jecxz
(bad)
popa
cdq
mov
je
shl
fbstp
mov
inc
mov
hlt
pop
add
mov
adc
das
xlat
int3
fcom
and
pop
test
pusha
cmp
inc
cmp
lods
mov
xchg
cmp
repz
jmp
pop
inc
(bad)
xor
or
add
imul
pop
mov
ja
mov
adc
push
inc
shl
neg
pop
test
scas
(bad)
dec
test
xchg
push
leave
test
mov
jecxz
mov
mov
ja
mov
adc
cli
out
retf
outs
test
lds
repz
fidiv
je
dec
or
in
nop
call
ficomp
test
add
xor
pusha
push
es
es
and
jp
retf
xchg
stos
test
xchg
repz
and
inc
ds
in
in
nop
xchg
popa
and
movs
scas
xor
add
lods
pop
inc
xchg
fsubr
jmp
and
stc
in
fstp
add
bound
dec
cs
mov
mov
push
out
jmp
jae
jle
out
cmp
jp
ss
(bad)
adc
dec
and
mov
pop
(bad)
(bad)
mov
call
push
test
cli
mov
mov
xor
ret
xchg
idiv
stos
lahf
shl
je
add
cdq
retf
push
push
jmp
cmp
sbb
push
outs
mov
inc
imul
lea
xchg
(bad)
sbb
cmp
and
jae
lea
pop
test
pop
sbb
aad
push
push
and
ftst
loop
mov
popa
lock
inc
fisubr
idiv
mov
xor
hlt
xchg
jmp
lea
push
xchg
xchg
mov
fnstsw
cdq
lods
push
hlt
fidivr
cs
cld
fild
add
pop
dec
fbstp
je
movs
push
and
mov
fld
repnz
cmp
je
adc
imul
xor
sbb
(bad)
cwde
popf
outs
aaa
pop
jae
in
xor
inc
push
stos
pop
jmp
push
pushf
clc
inc
dec
into
fisttp
fadd
cs
dec
int
cmps
cld
retf
inc
gs
inc
imul
jmp
sub
fs
add
mov
dec
push
inc
pop
mov
lods
imul
and
xor
xor
push
add
xor
pop
movs
cs
cmp
fnsave
sti
inc
outs
push
lea
mov
dec
call
xchg
bound
fcomi
and
push
xchg
ja
mov
retf
cld
popa
ins
mov
fidivr
adc
stc
fisttp
sbb
inc
scas
pop
outs
pop
call
xchg
mov
iret
imul
and
inc
int
pop
jb
add
imul
adc
sub
out
fwait
adc
push
and
inc
cwde
(bad)
pushf
pusha
fcomp
xchg
and
push
cmp
imul
stc
(bad)
mov
(bad)
mov
cmp
mov
fild
xor
dec
movs
sbb
cs
mov
mov
or
or
add
inc
sbb
and
mov
mov
fmul
movs
adc
or
icebp
jmp
cld
jge
je
pop
ret
mov
ins
xchg
rcl
mov
xchg
push
xor
xchg
out
mov
cmp
mov
stos
sub
in
cmp
dec
mov
inc
push
and
mov
lods
nop
adc
stc
or
add
pop
xor
or
aas
popf
sub
imul
inc
movs
cmp
scas
test
sti
(bad)
xor
sbb
and
xchg
call
les
and
mov
scas
mov
ins
jnp
sahf
mov
xchg
cld
repz
push
lea
xor
push
in
js
inc
movs
outs
imul
mov
jmp
addr16
int
sbb
add
fdivr
stos
ja
mov
jne
mov
jge
in
test
jmp
inc
jne
(bad)
das
push
inc
in
jg
sti
(bad)
xchg
sbb
jg
jmp
jg
fwait
nop
adc
stc
out
rcl
dec
fs
lods
cmp
leave
inc
std
sbb
dec
sbb
inc
mov
bound
pop
scas
gs
repz
mov
jb
add
xor
sub
xchg
mov
mov
pop
sub
pushf
sbb
bound
loope
lock
add
pusha
sub
rcl
(bad)
scas
in
mov
fwait
xchg
jmp
aaa
stc
out
stos
repz
push
pop
fdiv
and
aam
jecxz
jmp
jl
sbb
js
aaa
cs
mov
lods
sub
fistp
fisttp
fisub
sbb
das
mov
out
data16
arpl
or
leave
retf
mov
retf
inc
push
push
fistp
lea
jo
xchg
ror
xchg
jmp
cmps
fwait
bnd
loope
call
xor
sub
mov
fist
cs
dec
test
pop
jle
inc
pop
add
pop
scas
pop
xchg
xchg
arpl
sbb
add
push
push
adc
sbb
jbe
test
push
xchg
mov
push
sbb
inc
mov
inc
pop
mov
bound
xchg
push
add
rcr
(bad)
mov
pop
in
popf
xchg
and
jno
lods
mov
adc
jbe
and
test
inc
test
mov
test
fild
fsub
(bad)
push
push
pop
aas
aam
or
sbb
add
imul
sbb
or
cmp
xlat
mov
sbb
push
lea
mov
ins
cwde
ret
sar
jns
repz
mov
mov
stc
aaa
test
fwait
xchg
cmc
ss
icebp
xchg
(bad)
inc
jg
xchg
dec
out
sub
icebp
fucomi
inc
in
js
dec
stos
cmp
push
jne
mov
mov
cs
push
lea
xchg
cmc
dec
push
pop
xor
pop
push
pusha
adc
repnz
jo
mov
paddsw
jge
mov
inc
xchg
bnd
push
add
popf
dec
lock
ins
xchg
jmp
push
out
jno
out
les
loope
sar
dec
je
call
test
stos
pop
shl
sub
cli
in
lods
push
out
adc
inc
stos
cmp
and
lahf
mov
jmp
mov
jl
push
inc
mov
xor
and
cmps
push
inc
lahf
sbb
sub
fistp
rcl
fist
call
xchg
jnp
jmp
jmp
mov
(bad)
pop
push
test
mul
mov
jb
pop
fnstenv
sub
shr
ret
xor
or
pusha
lea
pushf
xchg
lods
mov
into
stc
sbb
sbb
push
ja
sub
add
jae
movs
sub
xchg
test
jmp
xchg
inc
mov
jbe
sbb
stos
dec
lock
pusha
mov
mov
mov
xchg
mov
je
xchg
cld
cmp
out
repnz
fcomp
mov
cmp
sbb
mov
push
call
xchg
push
imul
inc
push
mov
test
adc
cmp
xchg
das
mov
retf
dec
adc
jne
test
jno
and
sbb
dec
pop
push
mov
inc
call
mov
mov
in
cli
pushf
mov
push
xchg
lds
xchg
rcr
cmp
jno
jp
adc
inc
loop
sbb
outs
scas
adc
data16
ins
cs
les
popf
aad
call
xor
or
xor
dec
pusha
fnstsw
mov
test
out
xchg
cmp
shl
fs
jge
push
repz
inc
lahf
les
push
call
ins
mov
inc
ja
mov
in
mov
dec
addr16
adc
rcl
cmp
mov
add
pop
jo
inc
sub
mov
jmp
jns
retf
push
or
push
(bad)
ins
cmc
add
test
pop
lods
mov
dec
out
enter
sti
jne
inc
pop
push
test
std
movs
lock
add
adc
xchg
jle
std
xlat
scas
xor
ins
or
stos
cmp
hlt
test
in
cdq
cmp
test
in
jp
cmp
pop
std
aam
jbe
ss
or
sbb
jo
bound
push
out
mov
mov
std
inc
call
jne
jne
mov
add
inc
bound
jg
mov
or
or
idiv
adc
enter
jle
popf
pop
loope
cmc
dec
xchg
(bad)
mov
add
shl
cli
movs
sar
fiadd
adc
rcr
jl
fwait
mov
loopne
repnz
and
cli
shr
inc
popf
adc
push
dec
lahf
mov
iret
ds
push
clc
(bad)
mov
pop
inc
jb
jmp
or
test
inc
ins
mov
movs
sbb
cdq
mov
dec
dec
add
jge
je
pop
fidiv
test
and
mov
out
outs
xchg
mov
mov
shl
imul
fcomp
mov
fidivr
add
iret
jmp
push
enter
inc
xchg
ins
push
cli
inc
aaa
jp
mov
mov
pop
rcr
std
push
pusha
dec
and
dec
imul
mov
jg
fild
lea
pop
jmp
add
mov
cmp
test
jl
int3
movs
push
jmp
jno
std
sti
mov
call
ret
pop
shl
in
test
test
(bad)
stos
sub
imul
test
sbb
adc
xchg
je
mov
test
inc
xlat
inc
out
icebp
or
repz
dec
hlt
inc
or
or
jae
outs
sub
or
mov
xchg
(bad)
jns
push
pop
pop
mov
inc
or
pusha
xlat
test
adc
sbb
call
xor
pushf
(bad)
aam
jno
cmc
call
ds
fsubr
or
jno
push
mov
sbb
mov
mov
jecxz
addr16
js
leave
or
jbe
xor
push
mov
pushf
push
sbb
add
mov
dec
(bad)
inc
(bad)
enter
jbe
mov
pusha
mov
xchg
dec
retf
loop
or
xchg
pop
adc
jne
repz
into
jecxz
jl
scas
pop
xchg
pop
leave
and
(bad)
push
and
and
or
movs
inc
inc
dec
icebp
xchg
test
lahf
cli
sbb
add
pop
sbb
sbb
sub
and
jp
mov
jb
movs
(bad)
sub
out
aaa
int
push
repnz
jnp
jle
iret
lock
mov
xchg
jne
test
(bad)
rol
mov
ins
jae
mov
push
adc
imul
xchg
test
pop
div
cmp
ds
xor
cmp
inc
sub
nop
mov
(bad)
lock
jb
retf
inc
add
or
or
loope
xor
(bad)
jmp
xchg
xor
jmp
aam
fs
nop
push
repz
cmp
test
jmp
xchg
out
movs
xchg
xchg
aad
popf
bound
mov
xor
mov
test
frstor
mov
xor
mov
mov
cmp
cmp
pop
dec
cmp
cs
dec
xchg
lahf
lods
mov
(bad)
or
aas
fbld
or
and
add
jo
into
or
adc
inc
out
std
mov
mov
js
push
jecxz
lock
xchg
(bad)
xchg
popa
rcl
xchg
add
dec
and
mov
test
aas
int3
test
das
into
adc
ds
cld
rol
xor
push
pop
cmp
inc
cmp
mov
or
pop
(bad)
dec
mov
push
inc
jne
in
or
sub
stos
outs
aas
mov
push
mov
add
and
fistp
cmp
test
mov
test
retf
loop
add
(bad)
xchg
jnp
dec
lea
jl
mov
cwde
sbb
scas
inc
in
clc
pop
ss
(bad)
fild
xor
push
jno
inc
sub
xchg
ror
cmp
sbb
cli
sbb
ds
and
cmp
pusha
test
sub
cmp
sahf
jno
push
dec
out
fist
std
dec
pop
inc
mov
mov
arpl
jmp
xchg
ins
call
add
mov
ror
mov
pop
ficomp
pop
adc
out
enter
jo
dec
mov
inc
pop
push
mov
outs
jmp
jbe
fnstenv
push
pop
jl
stos
and
xchg
imul
dec
push
popf
mov
jmp
jmp
in
pop
pop
lea
mov
dec
call
xor
jnp
test
outs
popa
test
rol
lods
inc
call
das
or
sbb
stos
pop
jl
fwait
inc
sub
mov
jmp
pop
adc
push
aaa
jne
cmp
sbb
push
and
xor
add
add
cmp
pop
push
sub
test
xchg
iret
xchg
addr16
mov
and
jecxz
lods
mov
retf
outs
push
mov
cmc
not
mov
clc
or
repz
pop
gs
scas
adc
inc
mov
mov
iret
outs
jmp
or
add
add
jo
test
popf
dec
pusha
in
popf
xor
and
icebp
loope
call
mov
fstp
xchg
ins
jecxz
je
in
mov
xchg
xchg
nop
test
xor
pop
addr16
test
out
jmp
and
jnp
and
outs
gs
dec
sub
mov
fstp
xor
into
xor
inc
add
scas
and
stos
outs
daa
stos
inc
jo
movs
xchg
push
and
aam
add
pop
push
stos
xor
repnz
adc
jecxz
movs
(bad)
mov
push
jmp
loop
aam
ins
inc
mov
(bad)
jmp
sbb
inc
sahf
inc
sbb
stos
mov
adc
pop
in
xor
inc
sub
jne
inc
sahf
imul
cmp
lods
sahf
bound
daa
inc
retf
xor
jnp
xchg
dec
test
pusha
test
fwait
popa
and
mov
mov
(bad)
aas
test
dec
mov
loopne
movs
retf
adc
pop
(bad)
adc
imul
add
mov
pop
push
cwde
inc
sub
xchg
mov
mov
fwait
icebp
or
inc
int
cs
adc
pop
xchg
and
add
mov
pop
lea
aas
fcom
out
leave
call
pop
mov
cmp
les
and
in
sbb
sbb
test
add
pop
rcr
xchg
cli
retf
mov
sbb
ds
shl
inc
add
mov
jno
pop
pushf
mov
pushf
cmp
cli
or
xor
pop
sub
adc
inc
push
(bad)
adc
sahf
mov
bound
jge
not
loop
fs
xchg
repnz
call
ss
retf
xchg
add
pop
cmc
mov
fs
mov
jmp
cmc
movs
ins
jecxz
fisttp
sub
ret
sub
adc
cli
dec
sub
stos
mov
fsin
sub
jmp
ja
and
sub
test
xchg
pop
mov
or
and
jno
gs
mov
dec
test
loopne
in
in
pop
call
push
hlt
mov
push
loope
nop
add
pushf
test
mov
(bad)
cmp
dec
int3
(bad)
ficomp
cmp
les
cmp
sub
jle
mov
lods
sbb
ror
lahf
sti
sbb
pop
retf
fs
adc
and
pop
and
test
in
rol
loop
jnp
mov
sbb
and
in
jmp
adc
aam
movs
in
rcr
mov
cmps
add
cmc
(bad)
mov
into
jl
dec
inc
dec
iret
jmp
push
stc
xor
pop
ins
inc
lods
inc
cmp
lods
int3
push
pop
(bad)
dec
(bad)
lock
gs
bound
fstp
xor
mov
mov
mov
jb
xchg
mov
(bad)
icebp
xchg
adc
jno
test
jg
mov
je
mov
mov
mov
pop
inc
sti
lahf
jmp
inc
loopne
lea
pusha
hlt
jb
cmp
repz
jle
dec
add
fisubr
jge
jno
push
mov
fmul
cli
push
stos
call
pop
xor
adc
adc
inc
push
jg
shl
pop
mov
sahf
pop
xor
inc
lahf
shl
cmp
sbb
push
dec
movs
dec
jmp
retf
icebp
adc
push
mov
ins
jg
xchg
mov
mov
stc
aas
ins
mov
outs
ror
ds
ret
push
popa
xchg
push
sbb
lods
mov
rcl
repz
mov
cmp
xor
add
stos
jp
scas
add
lods
mov
or
push
inc
sar
push
mov
push
repnz
jbe
stos
pop
icebp
iret
leave
push
xchg
std
mov
xchg
cld
add
test
mov
fwait
in
xchg
mov
cmp
rol
popa
inc
fwait
test
out
lock
icebp
fist
xor
push
sbb
cmps
mov
xor
das
mov
jo
or
and
ins
test
cmp
stos
clc
cmp
fist
inc
jb
test
out
in
mov
mov
mov
shl
test
btr
test
loop
(bad)
shl
mov
inc
neg
or
repnz
mov
jg
mov
push
mov
mov
push
sub
bnd
dec
adc
and
or
pop
mov
bsr
cmp
in
xor
inc
jae
mov
dec
xchg
(bad)
mov
call
div
(bad)
scas
ret
daa
mov
xchg
in
call
(bad)
aam
sti
pop
stos
dec
sub
jmp
int3
and
xchg
jno
jb
inc
sub
mov
popf
xchg
jl
fdiv
pop
pop
mov
and
pop
mov
fisttp
and
sbb
movs
mov
add
xchg
xchg
in
inc
in
jne
test
test
addr16
xchg
xlat
fld
mov
dec
jl
mov
or
popf
ins
neg
sub
fdivr
rcl
add
or
push
pushf
push
cmp
lahf
mov
mov
jmp
jno
lds
push
cmp
fidivr
movs
cmp
movs
xor
int3
out
mov
fs
pop
popa
push
mov
pop
xchg
ret
xchg
xchg
jae
leave
lds
mov
shr
adc
int
nop
retf
outs
xchg
mov
dec
retf
sub
(bad)
(bad)
inc
sar
push
arpl
pop
ins
xchg
shr
(bad)
fild
xchg
(bad)
sbb
xor
cmp
and
xor
imul
xor
test
(bad)
cld
add
pop
ins
fild
fmul
pop
xchg
int3
mov
sar
xor
imul
dec
popa
popf
leave
test
xor
jmp
cwde
pop
jmp
(bad)
adc
cmp
mov
pop
jecxz
jo
scas
push
sbb
jns
mov
mov
or
xchg
sti
js
push
int
or
pop
adc
fidivr
push
xor
cmp
outs
jmp
xchg
movs
pop
idiv
xchg
outs
in
mov
stos
and
ins
test
imul
movs
sbb
std
fucomi
rol
push
push
adc
fcom
fcom
and
jnp
push
sub
mov
add
repnz
and
cmp
ja
add
sub
push
test
xor
xor
inc
ret
popa
jle
movs
jo
fmul
js
leave
in
(bad)
pushf
inc
xor
xlat
mov
and
push
aaa
cmc
jmp
aad
mov
or
fadd
xor
inc
rcr
outs
je
pop
sbb
xchg
dec
fcomp
fidivr
mov
push
je
es
jo
ss
or
jo
ja
shr
sbb
or
call
outs
pop
lea
sahf
(bad)
gs
mov
test
les
mov
addr16
stos
push
aaa
stc
icebp
adc
mov
sti
pop
aam
daa
xor
xchg
jecxz
(bad)
pop
pop
jnp
fld
outs
push
test
push
pop
pushf
mov
mov
out
push
lahf
cld
push
push
pop
fist
cs
or
arpl
ja
mov
(bad)
fsub
leave
jge
push
lods
pop
cli
mov
sbb
in
imul
icebp
and
stc
loop
loop
dec
dec
jmp
test
pop
sbb
aad
push
jmp
jo
dec
test
sbb
stc
cs
lea
pop
into
pop
leave
or
out
push
jbe
inc
mov
add
imul
sbb
sub
xlat
popf
bound
cmp
test
jb
inc
jl
mov
sti
mov
dec
call
and
lea
mov
out
mov
mov
adc
dec
ins
fwait
(bad)
push
shr
cs
rcl
sar
push
inc
sbb
outs
test
dec
test
push
fisttp
fld
xchg
cmc
push
push
popa
aaa
int
push
pop
imul
mov
stos
inc
ds
jb
mov
retf
xor
inc
push
xchg
mov
dec
mov
jmp
leave
push
mov
jl
(bad)
jmp
adc
xlat
sbb
lods
push
retf
sub
cld
icebp
mov
fnstsw
inc
sub
outs
inc
or
les
sbb
dec
inc
cmp
or
add
scas
pop
mov
int3
add
push
xor
cwde
sbb
and
fcom
xor
lea
sahf
in
cmps
mov
arpl
shl
jo
sbb
rcl
nop
mov
inc
aam
not
fsubr
fadd
push
jmp
sti
fild
pop
ja
bound
push
cmp
movs
lods
int3
push
pop
out
(bad)
ds
cmp
adc
mov
sbb
outs
out
test
idiv
push
mov
or
addr16
lahf
jb
mov
dec
xchg
in
imul
push
jo
imul
test
pusha
mov
out
cli
adc
and
cmp
int
jp
cmp
or
sub
push
lea
jle
xchg
cdq
sub
or
adc
push
syscall
imul
and
push
shr
test
aaa
sbb
out
les
loop
inc
push
fstp
(bad)
ins
mov
xchg
lea
mov
fsubr
popf
cmps
mov
xchg
std
retf
(bad)
mov
in
sub
(bad)
icebp
(bad)
ja
cmp
pop
cdq
xor
aas
add
fnstsw
jnp
sar
lea
or
add
or
jl
fisub
retf
test
dec
jmp
xor
jne
into
cmc
jg
mov
or
neg
xchg
sub
retf
pop
scas
js
mov
int3
xor
stc
inc
fs
lods
push
push
sbb
xchg
(bad)
je
sbb
(bad)
imul
and
mov
mov
push
cmps
sbb
out
pop
test
dec
je
xor
test
push
test
xor
cwde
add
and
sahf
sbb
sbb
pop
jmp
dec
cld
xchg
std
rol
ror
jg
mov
test
dec
fidiv
ds
not
push
call
stos
sbb
dec
cdq
inc
sub
scas
mov
mov
rcl
sbb
aas
int
adc
jb
stos
aaa
mov
lods
or
xor
mov
pop
push
sub
stos
aam
aad
jle
lods
imul
loopne
adc
jns
retf
rcl
(bad)
stos
pusha
fs
mov
ret
ror
scas
push
xchg
dec
sti
sbb
sbb
or
aas
inc
jp
push
sub
xchg
adc
shr
loop
test
dec
push
push
fbstp
jge
adc
inc
push
dec
sbb
or
sub
xor
test
pop
pop
mov
and
mov
inc
xchg
cld
add
mov
lahf
cwde
retf
dec
sahf
inc
jl
test
test
jmp
cmp
push
retf
add
arpl
mov
mov
sub
addr16
push
jns
int
push
js
adc
scas
imul
and
lahf
sbb
sub
fistp
shr
test
cli
sahf
in
mov
mov
scas
push
jmp
repz
ja
xchg
cdq
(bad)
push
es
test
jle
push
sub
pop
popf
cmp
sub
pop
jle
mov
mov
fnstsw
rcr
mov
ds
xor
aas
popf
pop
jmp
aas
sub
sbb
push
cmp
neg
pop
pop
push
lods
pop
cld
mov
mov
div
mov
aam
mov
stos
rcl
lock
in
aam
stos
cld
pop
outs
mov
adc
xor
out
ret
pop
push
and
push
imul
cmp
or
cli
add
pop
int
or
or
push
mov
mov
push
mov
mov
jmp
xchg
xor
xchg
imul
push
hlt
iret
aam
mov
mov
sbb
mov
mov
stos
sbb
rol
rcr
pop
ins
mov
adc
jecxz
into
and
cmp
add
or
test
sub
mov
pop
fild
repnz
mov
and
xor
jo
addr16
pop
arpl
push
cmps
into
cld
xor
mov
jle
cmp
push
xchg
(bad)
aas
mov
xor
rol
(bad)
sar
pop
mov
xor
loop
ins
ins
mov
dec
int3
pop
ficom
add
push
out
push
sub
pop
sbb
mov
sbb
call
jle
stc
jl
lea
gs
add
pop
scas
and
xor
(bad)
adc
pop
fwait
aad
add
jbe
xchg
mov
mov
jmp
adc
outs
cmp
fs
jmp
add
in
mov
xchg
fnstenv
cs
repz
lods
push
out
bound
dec
lods
aaa
pop
je
inc
pop
jns
mov
cmc
pop
in
cli
sbb
xor
cmp
jns
cmp
push
lods
cmp
cwde
fdivr
out
xlat
xchg
aas
mov
fs
pop
xor
push
xlat
test
jmp
mov
outs
ja
sahf
sbb
rol
mov
lahf
mov
xor
cmp
(bad)
call
mov
push
ds
pushf
mov
dec
out
cli
jo
(bad)
jbe
push
inc
mov
imul
xchg
xor
imul
and
adc
fwait
mov
and
iret
rol
jl
and
jl
fistp
mov
repnz
ja
xchg
mov
jmp
lods
inc
xchg
push
sti
es
call
stos
pop
jle
lea
jns
mov
mov
test
or
xor
xor
push
lods
xor
imul
and
lahf
pop
sbb
std
jmp
inc
repnz
push
ins
fstp
movs
loopne
cdq
les
add
rcl
test
jp
mov
into
xchg
rol
pop
push
mov
(bad)
dec
or
xlat
mov
and
fsubr
mov
inc
cmps
mov
aam
or
sbb
inc
pop
inc
sbb
xor
daa
mov
into
jns
xchg
stos
push
jl
cmps
xchg
es
pop
enter
mov
js
test
mov
jge
jecxz
ins
fisub
push
fcomp
mov
add
lock
mov
es
cs
hlt
fstp
pop
pusha
cmp
aas
dec
push
mov
fwait
movs
mov
(bad)
test
pop
(bad)
inc
adc
or
imul
add
cmp
mov
sbb
sub
xchg
out
xchg
aas
xchg
xchg
jno
inc
sbb
movs
jle
xchg
(bad)
jge
ror
adc
shl
cdq
scas
push
ret
popf
call
retf
outs
xchg
mov
cmp
push
(bad)
neg
and
dec
movs
or
mov
mov
mov
jecxz
add
retf
cmp
jbe
sbb
ins
push
xor
fwait
movs
sub
jmp
pop
fistp
clc
mov
cmp
nop
jb
std
stos
mov
xchg
in
stos
js
loopne
out
stos
fild
mov
push
jecxz
fdiv
sub
jecxz
(bad)
push
repz
push
cmp
xor
xchg
retf
ror
mov
sahf
xchg
popa
push
pop
cmp
xor
bound
or
jbe
jge
lea
sahf
fldenv
jmp
les
push
lea
mov
lahf
inc
(bad)
mov
or
pop
xchg
loope
scas
dec
fsubr
xchg
mov
add
in
idiv
test
iret
dec
inc
dec
out
cld
(bad)
push
pushf
and
pop
test
inc
clc
cs
dec
test
or
pop
(bad)
sbb
inc
mov
jl
and
pop
sub
pop
xor
fs
mov
mov
add
inc
mov
lock
(bad)
mov
cmp
sti
cmc
push
repz
xchg
xchg
mov
dec
mov
cmps
ds
in
jmp
scas
push
pop
xor
in
ja
adc
inc
mov
dec
cs
mov
rol
fldcw
mov
add
inc
or
sub
add
pop
pusha
stos
jp
mov
lahf
and
sbb
out
xchg
aaa
scas
jmp
ins
xchg
movs
(bad)
pop
test
test
in
mov
daa
in
(bad)
mov
mov
jnp
out
popf
push
ds
mov
jmp
mov
(bad)
cs
stc
in
inc
rcr
push
sbb
push
popf
mov
ret
ds
fild
jecxz
mov
push
push
inc
ss
das
jne
addr16
mov
fidiv
retf
xchg
ror
xchg
enter
lock
hlt
pop
push
inc
pushf
and
(bad)
dec
les
and
outs
lea
push
xchg
pushf
(bad)
ret
gs
mov
dec
fdiv
sbb
loope
fcom
ss
fs
mov
inc
jns
cmps
mov
adc
repnz
jp
add
cmp
pusha
(bad)
aaa
scas
sub
jge
mov
jo
mov
dec
rcr
pop
xchg
loop
rcr
stos
imul
loop
push
cmc
xchg
jno
std
rcr
xchg
call
test
jmp
inc
mov
mov
fidiv
fwait
(bad)
sub
sub
ds
fbld
dec
mov
imul
mov
in
icebp
or
clc
push
fs
retf
jo
adc
jns
add
movs
cmp
xor
scas
xchg
aas
xchg
lea
dec
pop
inc
mov
jg
fnsave
daa
retf
shl
stos
aad
popf
dec
jne
xchg
mov
rol
cmp
in
(bad)
push
and
int
aad
in
or
jnp
stos
cmp
cli
push
ds
mov
fild
nop
aas
mov
xor
sub
jl
pop
mov
imul
stos
adc
cmps
div
aas
pop
jl
out
xchg
aaa
mov
jg
fimul
mov
cmp
mov
sub
fst
(bad)
fcmovb
cmp
inc
js
mov
adc
inc
jg
lahf
xor
pop
div
cs
mov
into
jle
adc
cmp
pop
push
push
lahf
pushf
call
cli
or
aaa
ret
dec
imul
mov
scas
jl
sub
cmp
xlat
mov
mov
inc
pop
mov
test
jae
sti
xlat
test
imul
mov
adc
(bad)
outs
mov
gs
jp
or
iret
sti
rcr
inc
push
jl
scas
aas
dec
pop
xchg
inc
pop
(bad)
xchg
lods
mov
push
fbld
out
sbb
cmp
adc
add
pusha
(bad)
sub
ja
ins
ss
sbb
popf
(bad)
sahf
jmp
jle
push
jmp
inc
rcl
test
fwait
mov
push
xchg
loop
test
lahf
inc
retf
pop
fiadd
pop
xor
(bad)
scas
push
repz
cmp
xchg
push
push
jge
mov
shl
aam
mov
pop
ficomp
addr16
adc
sbb
pop
inc
test
ja
mov
arpl
fisttp
lds
pop
test
pop
xchg
fucom
push
ror
push
fwait
push
cmps
cmps
sar
pop
jb
cwde
xchg
adc
ret
ins
fwait
lods
inc
rcr
pop
xor
(bad)
repnz
out
ja
dec
mov
dec
cmp
xchg
scas
adc
scas
push
fcom
jns
fisub
push
push
retf
pop
add
sub
jg
dec
adc
pop
xchg
dec
loop
mov
les
ins
mov
push
xlat
or
imul
iret
inc
repz
mov
adc
ds
in
cli
call
je
jb
das
pop
sbb
retf
ret
cmp
ins
xchg
cmp
mov
xchg
mov
sbb
std
adc
aas
enter
add
or
bound
pop
mov
cwde
imul
add
jno
mov
dec
sub
jl
jmp
and
(bad)
jmp
fmul
fiadd
push
scas
leave
test
das
fucomi
xchg
repz
inc
lahf
mov
adc
scas
jmp
stos
pop
ins
push
sahf
push
add
xchg
test
addr16
push
inc
inc
sub
and
gs
add
push
xor
mov
sti
icebp
test
outs
push
rcr
movs
loop
xchg
cmps
ins
out
jno
rcr
hlt
add
ins
mov
add
push
das
int3
std
mov
ror
fwait
mov
xor
ds
xchg
fisttp
cmp
arpl
cmp
loopne
cmp
cwde
mov
mov
or
jl
test
sub
add
imul
xor
std
or
xchg
xor
jbe
nop
jl
mov
pop
out
xchg
outs
xchg
mov
mov
jecxz
cdq
mov
outs
ja
call
fcmovbe
cmp
dec
jecxz
(bad)
sbb
das
cli
(bad)
std
jp
xor
adc
lea
pop
test
int
clc
cli
or
jmp
hlt
and
inc
daa
pop
mov
add
inc
inc
xor
movs
popf
xor
aaa
mov
jb
arpl
test
xlat
lahf
lock
stos
les
xor
mov
xchg
cdq
(bad)
sbb
test
(bad)
pushf
xchg
cld
repz
inc
jmp
jo
xor
dec
cs
fist
sub
push
inc
cmps
outs
arpl
xchg
lods
lods
dec
push
fisttp
(bad)
sbb
dec
int
adc
adc
ja
js
mov
js
mov
cmp
dec
in
xchg
xor
push
push
xchg
sahf
loopne
xchg
cld
sbb
sti
cmc
push
div
movs
mov
cmp
bound
mov
xchg
test
test
and
sub
dec
shl
fild
jl
push
ficom
dec
js
inc
sub
mov
scas
cmp
cli
adc
mov
pop
jmp
adc
jno
xlat
sbb
popf
mov
jb
(bad)
fmul
jl
inc
out
clc
push
in
mov
and
sar
sar
push
xchg
lds
sub
dec
inc
(bad)
mov
dec
sub
shr
fst
pop
or
imul
nop
mov
mov
call
inc
xor
and
mov
nop
xor
pop
dec
sahf
push
cmp
test
std
stos
xor
mov
pop
je
cmps
pop
mov
jecxz
jmp
hlt
test
aad
lock
cmps
jmp
adc
ds
mov
xor
sub
lock
and
scas
cmp
cmp
cs
pop
xchg
cdq
call
fisub
xchg
sbb
add
int
bound
ja
adc
add
popf
adc
xor
adc
gs
dec
icebp
sahf
mov
xlat
and
ss
out
add
inc
test
or
fcomp
ja
sahf
xchg
add
mov
mov
hlt
pop
inc
fwait
stos
push
imul
lock
cmp
repz
cmp
data16
inc
loopne
pop
or
push
jmp
inc
pop
pop
xor
es
adc
pop
shl
add
mov
je
sub
icebp
xchg
sbb
call
dec
test
loopne
xchg
xchg
jge
jmp
mov
jp
movs
call
(bad)
dec
push
fwait
mov
cmp
ds
cld
iret
pop
rol
push
dec
stos
aaa
add
cmp
mov
mov
gs
sbb
xor
xor
fs
add
imul
addr16
mov
dec
hlt
mov
inc
mov
jbe
popf
jle
sar
test
cmps
popa
in
jbe
xchg
aam
pop
hlt
jle
mov
ja
mov
loop
jmp
sahf
inc
(bad)
push
cmp
sbb
fcmove
and
cmp
dec
test
push
mov
mov
retf
adc
cli
xor
xor
sub
pop
stos
adc
push
adc
cmp
mov
xchg
fist
jecxz
je
lahf
push
lds
mov
jmp
js
xchg
mov
das
test
pop
xchg
mov
xchg
mov
out
aaa
and
call
push
and
call
push
ror
pop
jb
out
push
adc
mul
stos
fs
(bad)
sbb
pop
push
cwde
test
and
xchg
inc
aam
jne
mov
inc
xchg
fistp
aaa
enter
in
xchg
cdq
mov
push
inc
hlt
imul
jmp
dec
(bad)
push
sub
hlt
lods
pop
jecxz
sbb
xor
push
cs
call
in
or
fistp
add
xor
jecxz
mov
fmul
mov
dec
in
retf
rcl
push
stos
jle
mov
jl
les
es
xlat
add
ins
or
je
cwde
std
and
loope
imul
test
lea
retf
ds
call
fsubr
inc
popf
inc
push
jbe
mov
rcr
cli
das
mov
jbe
or
in
adc
xor
sub
jbe
outs
movs
cmp
mov
push
fcom
leave
popa
inc
lds
(bad)
mov
mov
loop
jb
jmp
add
ja
mov
inc
inc
xchg
mov
push
sbb
div
f2xm1
dec
adc
test
jp
pop
cs
cld
iret
pop
ret
bound
pop
test
xor
dec
xchg
lods
push
loop
jo
clc
jb
gs
xor
pusha
adc
sub
jb
pop
sbb
mov
js
iret
mov
retf
hlt
addr16
gs
mov
fs
mov
jae
cli
stos
mov
jmp
popf
push
or
loope
dec
jl
mov
push
(bad)
adc
ds
jbe
cmp
pop
scas
sbb
push
mov
lahf
popf
mov
push
call
jbe
jne
neg
or
and
sub
jne
dec
outs
(bad)
or
sbb
mov
mov
fdivr
mov
scas
lea
loop
push
and
out
or
dec
xor
ret
add
dec
test
add
fwait
stos
push
adc
repnz
push
inc
jg
xchg
dec
out
(bad)
sub
ds
(bad)
int3
pop
fnstsw
ja
push
ficom
je
mov
mov
mov
jmp
inc
xor
add
mov
pop
fs
sbb
xchg
cmp
mov
xchg
repz
(bad)
ins
jp
lods
jle
mov
pusha
call
xor
ret
cmp
mov
test
ja
fwait
xchg
cld
ror
mov
stos
xor
fadd
cmp
cmp
xchg
jl
mov
mov
push
fild
repnz
and
sub
inc
sahf
imul
xor
sbb
lahf
lods
(bad)
movups
imul
retf
add
ins
jno
lea
mov
loopne
in
jns
mov
xchg
sbb
popa
mov
mov
jnp
mov
adc
shl
xor
lods
scas
xor
das
lock
pop
stc
rcl
jns
es
dec
mov
js
jp
mov
jmp
mov
adc
inc
or
or
imul
add
(bad)
sbb
and
jmp
pop
xlat
inc
push
cmp
xor
movs
aam
mov
out
adc
fidiv
stos
lods
mov
shr
xchg
mov
add
(bad)
inc
ins
xchg
fld
pop
ficom
cs
in
lods
pop
call
cmp
dec
sahf
inc
daa
jb
xchg
ror
(bad)
(bad)
aas
mov
dec
push
popa
sbb
xor
sahf
add
test
movs
cmp
mov
pop
sti
int3
loopne
xchg
sti
or
jg
inc
(bad)
jmp
push
iret
mov
std
das
iret
inc
call
pop
sub
jnp
mov
or
jmp
std
dec
stc
ds
xor
jp
ins
cs
mov
mov
sar
das
xchg
fiadd
pop
sbb
sub
inc
lods
ja
jb
mov
and
cmp
xor
and
cmc
sahf
xor
jl
pushf
inc
lock
dec
mov
test
jmp
sub
jns
mov
ret
pop
jl
xchg
xchg
in
loope
inc
lods
scas
dec
in
push
repz
and
xchg
xor
xor
es
cdq
mov
mov
cli
out
seta
jb
je
into
push
sbb
das
mov
fdivr
aad
inc
mov
mov
cmp
jns
fistp
loop
push
je
pop
(bad)
mov
dec
mov
cmps
dec
out
adc
sti
ins
add
js
popf
sub
cmc
mov
fisttp
xchg
test
fisub
cs
idiv
fbstp
aas
jo
dec
cmps
or
xor
dec
cwde
fnstsw
pop
out
mul
pushf
div
or
sar
cmp
ja
xchg
xor
xchg
call
fld
fs
push
test
sahf
popa
jmp
mov
out
adc
inc
call
pop
sub
push
mov
fisub
cs
in
repz
icebp
xor
pop
ins
push
adc
mov
or
push
rcr
pop
pop
enter
imul
pop
pop
mov
jae
movs
cli
or
pop
in
iret
test
lea
dec
test
lods
(bad)
dec
cmps
les
and
hlt
mov
mov
outs
jb
mov
pushf
stc
lock
dec
fidivr
sub
icebp
aad
xchg
pop
pop
dec
cmps
pop
arpl
mov
lea
sbb
inc
sar
seta
js
jae
ret
dec
push
push
add
pop
sub
ja
mov
mov
(bad)
fnstcw
in
push
push
stos
push
shl
retw
in
or
out
jg
mov
cmc
xor
ins
jnp
enter
iret
icebp
clc
in
cmc
inc
jg
xchg
jb
inc
in
xor
sbb
add
add
test
xor
add
pop
stc
add
inc
bound
fnstcw
out
add
(bad)
inc
addr16
rcr
fadd
xchg
and
gs
cmps
jne
mov
sahf
adc
mov
pushf
sbb
ins
xchg
js
xchg
xchg
test
aaa
stc
aam
ret
outs
mov
out
pop
or
neg
cmp
cmp
dec
stos
cmp
xchg
ds
mov
cs
imul
add
pusha
sub
and
add
xchg
adc
push
xor
stos
adc
or
repnz
aaa
mov
jb
jne
pop
mov
bound
xchg
js
(bad)
nop
sbb
js
xchg
fs
xchg
adc
loopne
jecxz
cmp
rcr
xor
and
pop
mov
jge
pushf
ins
sub
ret
cs
repnz
mov
inc
xor
jne
cwde
add
pusha
mov
movs
xor
into
std
unpckhps
cmp
iret
xchg
add
repz
imul
leave
pop
test
push
mov
lea
jmp
movs
lahf
mov
jae
(bad)
test
cmp
movs
push
jecxz
int
and
jmp
aad
retf
sbb
xor
dec
adc
mov
int
pushf
fidivr
sti
outs
data16
jmp
das
mov
mov
push
mov
in
fst
outs
pop
push
popf
jb
mov
inc
in
adc
rcl
(bad)
or
test
add
rol
fwait
xchg
jnp
jne
or
ds
jmp
jle
pop
ins
pop
cld
inc
ss
xchg
scas
mov
cmp
xor
inc
int
add
and
pop
dec
fldenv
mov
outs
xchg
scas
cwde
outs
cmp
aaa
mov
jb
outs
pop
jb
sub
mov
outs
xchg
call
and
mov
repz
mov
inc
mov
rol
sbb
fidiv
sub
stc
retf
fst
jns
lods
ins
imul
cmp
cmps
int
cmp
fadd
test
push
addr16
push
in
imul
popf
das
lahf
ja
push
movs
sub
mov
pop
call
repnz
jne
stos
jp
fsub
dec
loopne
mov
rcl
add
ror
cmp
xchg
outs
add
aam
std
mov
push
gs
(bad)
int3
and
push
jae
inc
call
add
mov
out
sbb
xor
pop
cmp
sbb
(bad)
pop
arpl
outs
repz
call
lock
loop
push
and
jbe
fadd
push
out
inc
add
repz
(bad)
cdq
ret
bound
mov
icebp
stos
int
outs
sbb
in
cs
cmp
clc
fist
or
jno
dec
popf
inc
sbb
mov
mov
out
sbb
pop
shl
add
nop
btr
jle
test
pushf
cmp
(bad)
xlat
mov
and
fdivr
repnz
lds
(bad)
(bad)
dec
test
mov
add
rol
stc
mov
push
test
repnz
lods
inc
lds
scas
sbb
fdivr
icebp
pop
cld
xor
pop
mov
pop
daa
movs
sbb
test
stos
dec
and
dec
repnz
add
and
cmp
push
adc
fadd
push
sub
xor
cdq
mov
inc
cld
jmp
gs
mov
imul
xchg
add
int
sub
pusha
movs
test
pop
popa
mov
ficomp
lods
scas
jnp
imul
fistp
and
mov
dec
cs
rcl
jmp
pop
xor
pop
push
imul
or
pop
pusha
mov
ja
scas
cmps
pop
xor
dec
(bad)
out
inc
lods
aad
jecxz
outs
inc
cdq
jle
mov
xchg
sbb
in
es
enter
outs
xchg
mov
arpl
loope
mov
mov
lods
test
sbb
cmp
in
aad
std
pop
fs
cmp
test
cs
mov
pushf
das
sub
jg
out
jno
in
bound
push
xor
pop
push
pop
and
pop
fdivr
cmp
cld
cmp
fld
or
mov
test
add
ror
sahf
mov
popa
scas
leave
xchg
adc
icebp
cli
adc
inc
dec
xchg
pushf
jae
push
retf
sbb
cld
fist
xor
pop
jne
mov
pop
movs
mov
mov
call
gs
dec
sbb
and
lods
add
adc
push
and
mov
cmp
dec
in
int
xor
jp
stos
and
enter
nop
pop
or
clc
nop
push
loopne
repnz
mov
xor
xchg
es
inc
jecxz
inc
jecxz
int
cmp
into
enter
inc
sbb
rcr
pusha
push
mov
pop
xchg
mov
fild
sbb
inc
sti
pop
sbb
or
jmp
test
sbb
ds
and
mov
test
jb
adc
bound
inc
cmps
les
and
in
jae
je
mov
ret
outs
add
jmp
inc
ins
lahf
lods
inc
loopne
fist
sub
fdivr
fild
cmp
sbb
lods
sbb
daa
jne
fwait
lds
(bad)
rol
dec
inc
inc
(bad)
sbb
(bad)
scas
popa
dec
add
or
mov
jle
fiadd
cmc
dec
jae
adc
or
loopne
loopne
add
icebp
mov
idiv
mov
inc
movs
mov
stc
test
fisttp
xchg
lea
fidivr
cs
cmc
(bad)
daa
jo
pop
mov
jle
mov
ror
call
add
leave
cmp
sub
scas
jg
cmp
xchg
fnstenv
(bad)
jle
cmp
inc
out
inc
xlat
mov
out
xchg
jno
std
repz
fnstcw
movs
jl
loope
test
das
aad
sbb
xchg
inc
fld
xor
repz
in
pop
jae
dec
pushf
pop
dec
imul
pop
mov
mov
dec
aaa
hlt
inc
fwait
call
test
inc
inc
jno
sti
xor
inc
mov
mov
add
mov
dec
out
sar
lds
inc
cmps
push
out
out
test
sub
les
mov
pop
js
leave
xchg
cmp
stc
mov
sahf
mov
cmp
stc
cld
bnd
inc
jae
pop
mov
push
cmp
xchg
xchg
scas
mov
fmul
jl
bnd
pusha
pop
in
sbb
sub
aas
mov
aad
adc
push
mov
mov
cmp
adc
inc
push
popf
ins
cmc
mov
mov
loopne
jno
call
(bad)
jo
addr16
xchg
addr16
mov
out
cld
lock
mov
cmp
dec
(bad)
cli
call
push
pop
mov
outs
push
mov
mov
addr16
jecxz
mov
xor
pop
sbb
pop
mov
test
inc
test
inc
mov
sub
rol
cmp
stos
push
lds
cmps
or
not
test
scas
dec
mov
mov
add
ins
cdq
stos
dec
(bad)
dec
into
cmp
fsub
aas
inc
cmp
adc
mov
or
xchg
(bad)
or
jbe
in
das
mov
xor
sub
mov
mov
mov
jae
mov
xor
aas
out
fstp
retf
dec
add
repz
stc
pop
mov
xchg
je
hlt
shl
lods
div
and
test
test
(bad)
dec
push
cdq
mov
sub
xor
xlat
rep
pop
icebp
xor
sbb
mov
jns
mov
mov
out
sbb
aas
fisub
push
inc
pop
cmp
sub
add
fs
mov
and
cmps
xchg
xchg
das
xor
dec
jmp
jmp
loop
sbb
fiadd
xchg
lock
call
aaa
leave
sar
test
sbb
aas
retf
cli
imul
std
inc
jle
mov
das
cs
repnz
fnstenv
xor
dec
stos
jno
cmp
mov
xchg
cmp
add
out
add
cmp
xor
jnp
lahf
addr16
or
xchg
mov
sbb
xor
icebp
xchg
and
sti
jb
outs
jge
nop
dec
popf
(bad)
fimul
aam
push
in
xchg
jns
std
rol
mov
jne
mov
push
sbb
aad
jl
mov
cmp
ds
in
lods
push
loopne
inc
sub
push
jo
xchg
scas
mov
in
out
push
mov
aas
int
adc
push
mov
shr
data16
gs
test
sti
retf
out
cmp
pushf
adc
xor
idiv
in
xchg
pop
call
retf
cmp
mov
cdq
in
cmc
jae
lods
test
ja
cmp
int3
inc
in
inc
jo
pop
mov
inc
pop
ins
in
fwait
int
xor
ret
rcr
fdiv
jbe
les
sbb
addr16
pop
arpl
pop
sahf
scas
sahf
jne
add
mov
das
mov
gs
stos
pop
shl
inc
rcl
or
js
lods
mov
jae
cwde
mov
xor
or
mov
or
fcomp
cmp
or
pop
inc
fwait
fwait
lods
ret
rol
cli
or
push
inc
es
and
jl
xchg
inc
mov
fimul
cmp
xor
xor
push
test
jp
push
bound
inc
repz
jecxz
xchg
in
ins
rcr
xlat
ins
or
ins
test
retf
test
lods
adc
(bad)
sub
into
stc
mov
jmp
bound
pop
mov
dec
push
sti
xor
push
sub
mov
out
or
std
sbb
add
jnp
and
inc
popf
pop
idiv
mov
cmps
sub
mov
fstp
call
cli
inc
jne
xchg
jl
movs
loopne
mov
xchg
push
add
push
add
mov
pop
(bad)
cmps
scas
stc
inc
outs
mov
hlt
cs
dec
out
lock
rol
sub
sbb
inc
push
jg
mov
iret
jns
ret
retf
jge
inc
xor
xor
js
and
or
adc
mov
mov
in
int
aaa
mov
jbe
mov
dec
test
mov
jmp
lea
loopne
stos
idiv
pop
in
mov
psubw
idiv
ror
mov
cs
sbb
in
push
jnp
mov
inc
or
fwait
xchg
fistp
mov
sbb
jne
out
aas
jne
xor
or
mov
sbb
and
aaa
mov
pop
ja
jno
mov
pop
mov
movs
fs
(bad)
hlt
daa
int
sbb
je
xchg
test
ror
sub
inc
or
xor
push
or
jle
dec
sbb
mov
call
add
and
push
cmp
imul
or
pop
sub
xor
pop
std
fnsave
pop
jo
mov
dec
cwde
retf
and
test
int3
pop
add
jle
mov
add
stc
in
mul
dec
inc
jmp
push
adc
into
xor
sbb
je
cmp
pop
lahf
xchg
scas
mov
sti
rol
push
jae
out
es
imul
add
adc
jg
popf
dec
arpl
cmp
loope
(bad)
cld
pop
cld
inc
ins
push
mov
jl
in
fwait
jo
mov
xor
jge
and
loopne
adc
icebp
sti
cmps
mov
pop
imul
fidivr
and
in
jbe
sbb
dec
stos
pop
push
test
pop
pushf
mov
ret
aaa
fcomp
fcomp
mov
jb
jae
ficom
add
xor
imul
xor
cmp
mov
lahf
sbb
push
inc
lahf
fsub
xor
add
cli
movs
aam
inc
cmps
fs
push
fucomi
cmc
sbb
jnp
lods
scas
ror
lods
outs
push
xchg
xchg
mov
pop
shl
or
dec
js
test
jp
sbb
fimul
jo
pop
test
imul
cmps
call
stc
add
cli
jbe
inc
cmp
sub
mov
mov
test
xor
sub
or
fwait
and
inc
jns
mov
and
nop
popa
daa
retf
rol
mov
inc
xor
out
test
mov
dec
mov
inc
pop
cli
out
fisttp
inc
jne
ins
lods
add
cmp
sbb
mov
mov
sub
outs
out
fistp
adc
pop
xor
jl
inc
nop
jbe
addr16
mov
jg
scas
(bad)
sbb
jl
retf
mov
jbe
dec
jl
mov
and
mov
addr16
popa
daa
std
clc
nop
sub
imul
mov
mov
dec
dec
loop
inc
retf
dec
jmp
cld
std
imul
pushf
sbb
daa
imul
ret
mov
jno
int
sbb
sub
sahf
or
jmp
sub
out
jmp
cli
pop
jne
lods
imul
or
dec
out
adc
outs
mov
cdq
sar
fs
out
sar
jg
fwait
inc
call
clc
fisttp
sbb
jg
aaa
pop
dec
sti
imul
mov
retf
stos
mov
jge
ret
add
adc
sub
psadbw
stos
js
xlat
xor
xchg
xchg
mov
dec
mov
repnz
jle
lea
mov
cmp
pop
add
shr
sahf
fincstp
sub
mov
push
aaa
in
sti
adc
mov
or
into
mov
push
out
xor
inc
test
dec
cs
lahf
mov
shl
jns
in
jae
arpl
int
cmp
add
pusha
pusha
scas
jg
mov
mov
aaa
and
fcomip
xchg
xor
sub
push
cli
popf
test
xchg
bound
std
shl
mov
(bad)
or
jmp
inc
fdivr
stos
div
pop
pop
jmp
add
push
into
and
jp
pop
jl
lea
outs
xchg
mov
stos
cmp
rol
xchg
sbb
xchg
pop
jno
add
sbb
out
sub
inc
lods
pop
add
mov
cmp
dec
jmp
fistp
dec
inc
push
fstp
mov
xchg
in
es
xchg
pop
xchg
data16
add
sub
mov
mov
sbb
in
sbb
dec
aam
fist
cmp
and
inc
and
mov
mov
call
push
inc
jno
jmp
imul
inc
mov
dec
inc
stos
mov
arpl
dec
(bad)
daa
(bad)
retf
pop
sbb
fisubr
retf
fs
in
call
daa
shl
idiv
push
arpl
aam
movs
retf
outs
cwde
lods
dec
icebp
pop
fstp
push
inc
(bad)
icebp
mov
shr
push
dec
stos
or
sbb
xchg
xchg
lods
test
push
mov
loope
or
out
push
cmp
jle
inc
sbb
pop
nop
cdq
in
sbb
dec
jmp
cwde
inc
dec
pop
mov
xor
popf
js
call
pusha
in
in
shl
jbe
fwait
xchg
xchg
ss
into
pushf
test
jmp
ficomp
pop
daa
rcr
fistp
xor
and
sbb
loopne
sub
mov
mov
stc
cli
or
adc
sbb
jnp
xor
sbb
jp
mov
inc
cdq
test
loopne
add
pop
cmc
outs
outs
je
push
mov
inc
xchg
jmp
inc
out
jnp
rcl
mov
(bad)
fld
pop
test
ja
call
repnz
fwait
or
stos
cmp
sub
jecxz
pop
jbe
xchg
daa
jnp
clc
imul
sub
ror
aad
enter
push
xor
adc
ja
js
mov
arpl
dec
and
les
repnz
inc
ins
mov
push
call
dec
xchg
(bad)
out
sub
push
mov
addr16
lods
sbb
(bad)
inc
ins
mov
ds
bound
dec
mov
sub
jae
ret
cmp
xlat
pop
in
clc
or
pop
xor
xor
(bad)
das
lods
sub
jl
mov
jne
xlat
fwait
push
inc
dec
and
out
xchg
sbb
inc
push
lea
mov
pop
push
sub
in
movs
mov
addr16
xchg
cmp
fcomi
xchg
ret
out
push
jmp
pop
adc
stc
iret
push
out
inc
add
daa
jge
lea
dec
cwde
stos
mov
ret
ret
hlt
jbe
dec
ds
add
out
daa
mov
ror
pop
xor
cwde
bound
pop
dec
fcmove
mov
pushf
dec
jnp
mov
pop
test
call
or
idiv
lods
mov
xchg
test
cmc
adc
xlat
(bad)
lock
push
inc
jmp
cmp
fidivr
pop
arpl
fwait
int
pop
push
mov
out
mov
adc
pop
das
dec
add
sub
test
add
mov
inc
jecxz
xchg
push
mov
jb
jnp
pop
call
(bad)
mov
out
pop
pop
lea
mov
jg
xchg
mov
adc
retf
mul
jmp
ficom
cmp
in
addr16
sbb
dec
sbb
push
test
jnp
xchg
test
jle
jmp
adc
xor
outs
and
cmp
add
imul
or
or
sahf
mov
jl
out
xor
mov
jno
lods
pop
test
inc
xchg
cld
pop
sub
icebp
mov
(bad)
mov
lea
fmul
mov
xor
ficom
cmp
sbb
or
lahf
cmps
mov
inc
retf
mov
add
outs
sbb
adc
jg
mov
pop
xchg
movs
xchg
inc
or
aad
dec
sar
repnz
jge
mov
scas
loopne
mov
cld
add
xchg
rol
shl
or
mov
push
cmp
call
mov
or
fistp
cmp
pop
fistp
pop
and
mov
jmp
cwde
mov
inc
leave
cmp
cmp
pop
leave
data16
inc
xor
cmp
pop
dec
cmp
fadd
cld
inc
arpl
outs
popf
movs
jecxz
cmps
stos
jecxz
xchg
cld
dec
test
nop
lods
fadd
mov
test
inc
shl
mov
es
mov
adc
sub
fisub
ja
dec
mov
inc
aas
add
sub
inc
sahf
repnz
mov
cmp
cmp
je
cmp
pusha
nop
pop
aas
cmps
dec
push
popf
mov
and
lods
mov
lock
addr16
sub
mov
dec
loope
sahf
jg
xchg
ja
in
fistp
xchg
(bad)
into
push
(bad)
jns
mov
xchg
bound
shl
test
test
mov
or
mov
xchg
pusha
outs
mov
ins
addr16
mov
int
inc
imul
sub
fist
pusha
add
and
imul
mov
lahf
adc
or
or
xor
rol
bnd
and
test
(bad)
lahf
dec
retf
adc
xchg
ins
movs
sub
pushf
test
xchg
mov
pop
(bad)
dec
scas
xor
sub
call
lea
jg
mov
imul
stc
sbb
pop
mov
jl
pop
(bad)
or
push
push
jg
add
scas
movs
mov
shl
stc
dec
jl
lea
mov
pop
xchg
(bad)
mov
out
xchg
push
xor
out
xor
ins
stos
mul
jae
fwait
xchg
adc
clc
xor
mov
dec
sbb
jmp
aaa
dec
mov
and
mov
mov
fdivr
add
and
add
xchg
and
mov
dec
mov
and
rcl
ins
jbe
mov
and
nop
pop
daa
mov
stos
adc
dec
xchg
mov
dec
jne
mov
loop
in
jecxz
push
pop
fistp
sub
dec
in
shl
and
xchg
mov
or
mov
(bad)
fild
xchg
loope
ja
add
pop
sbb
xor
add
push
adc
sbb
mov
push
(bad)
xor
inc
movs
jno
mov
adc
fs
(bad)
mov
mov
ja
xchg
test
cmp
mov
(bad)
xor
jle
ss
push
dec
stos
pop
arpl
cmp
lahf
mov
mov
cli
repnz
and
and
jno
cdq
and
cdq
jae
rcl
in
xlat
xchg
inc
pop
inc
ret
aas
xchg
mov
dec
pop
dec
stos
pop
repz
mov
adc
pop
es
(bad)
pushf
aaa
in
sbb
test
pop
sub
xchg
ret
dec
inc
mov
in
dec
pop
xor
(bad)
aam
fidiv
push
or
pusha
mov
push
xchg
cmps
scas
mov
out
loope
fwait
rcl
add
cmp
out
or
mov
jb
test
cmp
in
movs
aaa
xchg
rol
(bad)
jno
mov
dec
mov
xchg
jae
mov
mov
mov
lds
mov
mul
cmp
cli
(bad)
rcl
dec
outs
xchg
mov
jb
cmp
adc
cld
mov
cli
xor
lods
add
inc
mov
add
xchg
lds
out
cli
or
pop
call
adc
inc
stos
cmova
lahf
push
pop
or
imul
data16
dec
jnp
stos
pop
repz
test
in
out
and
iret
bound
push
je
nop
sub
in
jmp
xlat
dec
stos
fsub
pop
cld
sub
or
test
daa
dec
stos
pop
sbb
sbb
cmps
mov
cmp
sbb
jbe
xor
cmp
jo
adc
jge
fisub
mov
sbb
xor
fcom
xchg
push
movs
push
lock
inc
xchg
jmp
std
fisttp
(bad)
stos
fldcw
rcr
jb
cwde
cmps
xor
std
jecxz
int3
clc
ins
fwait
scas
push
out
gs
ds
lds
push
sub
test
sub
mov
(bad)
stc
sbb
adc
xor
das
xchg
add
jge
mov
dec
lods
mov
pop
sub
jb
scas
xchg
mov
inc
push
pushf
pop
stc
mov
popa
xchg
les
sub
add
mov
nop
enter
cli
fcom
sahf
xchg
das
clc
cmp
iret
sti
mov
out
js
jge
jno
jl
inc
inc
popa
nop
mov
iret
cmp
imul
pop
inc
or
or
adc
rcl
test
adc
mov
js
aam
sbb
neg
pop
jno
cmps
pop
ret
mov
xchg
jg
in
or
mov
mov
mov
mov
mov
ror
mov
cmps
and
dec
loop
(bad)
xor
aaa
jns
and
nop
mov
repz
int3
fldcw
mov
jb
bound
mov
es
push
lods
ins
div
(bad)
and
test
idiv
pop
rcl
cmp
xchg
mov
test
gs
aad
pop
clc
ins
xchg
scas
cmps
rcr
test
add
std
cli
cmps
retf
jp
mov
cmp
and
inc
pop
sbb
or
mov
mov
mov
sar
or
neg
pop
and
and
gs
loop
mov
test
test
pop
call
call
xchg
push
int3
add
ins
pop
es
shl
xchg
fs
arpl
(bad)
add
jg
popf
mov
jno
rol
cli
loopne
dec
cwde
lods
inc
jecxz
shl
cs
iret
fstp
and
or
outs
xchg
aaa
daa
pop
mov
cmp
mov
jno
push
sbb
xor
pop
add
xchg
das
int
fistp
lods
pop
xor
mov
aaa
sub
mov
sub
jge
jle
mov
dec
xchg
rcr
imul
mov
(bad)
aad
mov
data16
mov
push
es
ins
fwait
test
jecxz
retf
mov
fdivr
fild
sbb
dec
mov
push
sahf
inc
pop
pop
call
outs
xchg
(bad)
aas
mov
sbb
jnp
enter
imul
(bad)
adc
imul
xor
jno
adc
(bad)
es
inc
xorps
outs
xchg
arpl
int3
in
or
ins
xchg
test
inc
mov
mov
xchg
fld
sub
dec
cmc
aaa
sub
cli
cld
xlat
pushfw
push
push
jl
cmps
sbb
dec
sbb
mov
inc
mov
test
jl
lea
adc
xor
mov
(bad)
imul
test
out
(bad)
test
mov
jp
xchg
dec
add
push
xchg
rcr
cmp
bound
pop
pushf
rol
mov
outs
mov
dec
inc
push
or
add
and
je
inc
sbb
xchg
lods
mov
test
pop
sbb
xor
jae
xor
frstor
fisttp
mov
jne
xchg
movs
add
and
fst
aam
inc
popa
add
les
and
inc
(bad)
xchg
lods
sar
sbb
and
repnz
call
ss
(bad)
ficom
xor
pop
cmps
sbb
add
cdq
mov
cwde
xor
cli
aas
xchg
jbe
jne
out
pop
sub
add
jmp
into
add
sbb
into
mov
cmp
push
lahf
fcom
cld
inc
pop
push
movs
push
hlt
mov
aas
mov
mov
and
hlt
mov
call
jmp
mov
cld
les
(bad)
mov
dec
xor
je
adc
fs
push
cdq
xchg
push
sub
pop
in
or
aad
sbb
or
(bad)
dec
pop
sub
xor
popf
aaa
xchg
neg
imul
jecxz
xchg
jecxz
fs
popa
sbb
shr
cwde
mov
mov
mov
fsubr
out
test
push
inc
(bad)
mov
lea
retf
push
or
pusha
xchg
outs
dec
cmp
push
inc
dec
popf
mov
xlat
popa
iret
aam
sahf
xchg
pop
sbb
das
push
or
and
imul
and
cmps
adc
ss
icebp
mov
cli
sbb
out
cld
inc
test
xchg
fs
inc
and
enter
outs
sub
adc
cli
fild
mov
dec
xchg
push
in
es
add
retf
push
jl
cmp
xchg
dec
mov
lahf
aam
inc
stos
inc
in
or
mov
pusha
xor
cmp
add
icebp
ds
je
push
and
mov
test
jb
outs
jge
fimul
mov
arpl
mov
nop
adc
jg
cmps
mov
push
xchg
mov
out
retf
inc
scas
mov
rcr
pop
aaa
out
call
or
inc
pushf
sbb
inc
mov
fwait
mov
in
or
xor
and
test
imul
inc
mov
push
mov
mov
ror
push
mov
inc
stos
pop
fbstp
sti
fs
test
icebp
cmc
xchg
es
outs
call
jae
mov
push
inc
(bad)
repnz
loop
ins
cmc
mov
retf
cmp
ds
(bad)
xor
jne
cmp
pop
popa
xchg
shr
call
dec
inc
cmp
inc
sbb
sbb
sub
mov
push
call
in
test
hlt
dec
jge
nop
push
repz
inc
pushf
mov
jb
lock
test
inc
add
enter
fimul
mov
inc
call
sti
fist
sub
pusha
xor
push
jo
dec
ds
les
cld
loope
test
jbe
push
add
adc
jnp
add
pop
jae
ins
cmp
movs
sbb
iret
and
ret
dec
jbe
stos
push
lock
(bad)
pop
xchg
les
cmc
rol
(bad)
rol
mov
icebp
aam
in
loope
push
push
retf
pop
jecxz
(bad)
addr16
xor
aas
dec
pop
lods
push
test
cld
in
aas
mov
add
or
mov
push
pusha
mov
test
inc
neg
mov
sub
inc
mov
(bad)
loop
mov
xchg
dec
rcl
mov
(bad)
mov
fs
stos
push
xor
xchg
mov
sub
pop
in
cmp
stc
pop
fistp
sbb
inc
fwait
inc
or
mov
int3
fisttp
xchg
repz
data16
out
push
ja
adc
arpl
mov
mov
fst
mov
xchg
and
jg
(bad)
cwde
jae
mov
bswap
shl
cwde
mov
push
add
stc
xchg
shl
jg
xchg
xor
fdiv
and
fdivr
(bad)
and
sbb
sub
mov
fwait
int
dec
or
gs
pop
clc
jp
jnp
mov
sbb
pusha
ja
ins
cmp
test
xor
cmp
hlt
popa
shr
push
mov
ins
xchg
shl
inc
jmp
sub
ins
mov
jbe
xchg
mov
add
jmp
pop
imul
fild
sub
jp
ss
dec
movs
cmovns
sub
jno
call
cld
clc
aas
mov
jb
jae
sti
cmp
addr16
fstp
ret
lods
xor
xchg
mov
fyl2xp1
mov
imul
je
jge
mov
popf
fs
mov
xor
xchg
idiv
ja
mov
adc
stc
loopne
rcl
dec
pop
xchg
cwde
inc
out
repz
pop
(bad)
ds
inc
xchg
cmp
loopne
cmp
xchg
lods
mov
cli
or
add
daa
or
sub
pusha
mov
jne
test
push
add
cmp
fadd
inc
jp
lea
mov
xchg
dec
popf
xchg
jns
test
test
rcr
mov
mov
add
bound
dec
lea
sbb
fucomp
fist
push
jge
stos
es
push
mov
cs
xchg
into
(bad)
adc
(bad)
jg
mov
mov
push
adc
(bad)
xor
jns
arpl
push
mov
ja
xchg
in
xlat
xchg
add
js
dec
sti
mov
addr16
pushf
push
pop
jecxz
nop
test
ret
push
cmps
pop
jno
test
mov
lods
stos
push
lock
out
or
ret
jmp
inc
icebp
push
popa
fs
pop
gs
cmp
pop
xchg
retf
cmp
fist
jmp
inc
jae
ficom
ss
add
cwde
cmp
mov
stos
sub
mov
les
jno
bound
scas
pop
lds
xor
rol
mov
xchg
and
mov
xor
ss
(bad)
ss
cmp
pop
sbb
push
sbb
mov
fild
clc
and
xor
and
inc
or
sub
imul
inc
movs
arpl
cs
in
int
inc
retf
rol
jge
dec
repz
pop
xor
js
mov
mov
test
pop
mov
iret
icebp
(bad)
leave
mul
sbb
add
repnz
and
xor
imul
out
retf
mov
pop
loop
sbb
jp
aad
outs
jl
and
pop
mov
sahf
or
movs
push
addr16
mov
imul
and
int
jecxz
arpl
sub
stos
mov
push
lock
add
outs
movs
fwait
mov
jne
mov
ss
fadd
mov
push
repz
hlt
ds
retf
repz
or
cdq
dec
cs
cmp
retf
call
mov
ds
add
jb
pop
dec
fld
retf
nop
cdq
mov
(bad)
icebp
xchg
daa
test
jns
sbb
xor
or
xchg
jno
mov
mov
lea
jb
nop
test
add
les
mov
xor
dec
test
and
and
outs
scas
cmp
add
dec
sub
inc
(bad)
das
xchg
jbe
pop
and
inc
ins
jl
fs
inc
fs
cmp
pushf
jno
push
jno
out
inc
push
jmp
push
fcomp
xchg
loopne
xchg
jecxz
imul
imul
jecxz
or
jae
mov
push
aaa
sti
hlt
mov
cld
ins
push
pop
fstp
push
sbb
lock
push
call
cmps
sub
mov
jns
mov
mov
test
sbb
aas
iret
cmp
add
cmp
cmp
cmp
mov
dec
stc
(bad)
xchg
push
mov
(bad)
aam
jbe
lea
mov
in
not
add
int
mov
jo
nop
mov
loope
inc
dec
mov
xor
enter
je
lods
sbb
dec
inc
push
out
mov
xchg
cmp
fild
clc
pop
push
push
cmp
adc
mov
mov
scas
sbb
(bad)
or
in
sti
sbb
jnp
(bad)
jno
mov
jg
mov
gs
xchg
adc
add
and
jmp
and
cwde
xor
xchg
jnp
cmp
cmp
stc
mov
push
pop
fnsave
inc
mov
pusha
out
int
and
rcr
mov
adc
and
jmp
mov
retf
addr16
mov
arpl
add
cs
jnp
fnsave
cmc
mov
stos
push
out
js
int
xchg
add
fcmovb
rcr
jne
leave
xchg
arpl
std
loope
(bad)
pop
js
test
imul
or
mov
fild
xor
inc
scas
sbb
inc
mov
ret
into
cmp
lods
jns
dec
mov
jge
push
and
cmp
jae
pop
scas
sub
sahf
addr16
test
add
daa
rcr
sbb
arpl
push
div
test
clc
pop
push
(bad)
sti
neg
xchg
ja
pop
gs
test
dec
(bad)
lock
test
outs
fidivr
fmul
cmp
or
and
movs
ror
cmp
icebp
pop
fsub
and
and
xor
jge
add
jae
mov
ja
mov
add
pop
in
test
leave
pop
sbb
popf
pop
repz
(bad)
cmp
xchg
jno
call
test
in
mov
stos
ret
adc
call
mul
es
pushf
movs
ins
rcr
sub
repnz
ret
xor
mov
xor
push
pushf
lds
pop
out
icebp
push
xchg
jbe
add
add
add
imul
xor
cmp
mov
dec
push
call
jnp
mov
dec
xchg
in
test
jae
jmp
adc
mov
jo
xor
paddw
mov
cmp
and
aaa
pop
jbe
cmps
sub
mov
jns
mov
mov
stc
out
cmp
inc
pop
hlt
inc
or
sub
test
xor
adc
and
cmc
inc
sar
adc
data16
dec
sti
mov
dec
xchg
jmp
fsubp
xchg
add
ins
or
jo
mov
xchg
fwait
xchg
push
call
mov
data16
push
bound
imul
mov
int3
stc
or
clc
bound
out
add
adc
fstp
mov
jne
mov
sbb
dec
std
retf
xchg
aaa
mov
pop
push
mov
pop
xchg
(bad)
call
xor
shr
(bad)
mov
xchg
es
repnz
test
push
fidivr
ds
(bad)
fnstcw
cmp
sbb
pushf
imul
mov
ret
xor
lock
fwait
jmp
mov
add
sub
add
mov
test
adc
or
and
push
mov
jb
inc
jge
cmps
ss
fadd
xor
cwde
jg
(bad)
cmps
mov
lea
(bad)
xchg
ret
sub
mov
scas
retf
popa
pushf
scas
push
lea
into
adc
xor
clc
rcl
add
mov
pop
ins
xchg
push
mov
out
lahf
dec
ret
into
jb
sbb
fiadd
imul
jl
sub
(bad)
dec
bound
and
(bad)
in
xchg
sbb
jne
stos
push
test
addr16
xchg
popa
push
hlt
(bad)
mov
nop
jg
lahf
ffreep
ss
xor
hlt
fimul
test
pop
iret
push
or
repz
xchg
xor
pop
push
popa
mov
mov
ins
fwait
cld
sbb
int
sbb
add
mov
js
mov
mov
xor
dec
in
std
xchg
adc
jne
stos
pop
add
pusha
out
jno
lock
scas
mov
push
cwde
cmp
fcmove
inc
dec
lods
mov
cmp
ds
cld
fist
daa
jbe
dec
mov
cmp
mov
shl
popf
sti
jle
jno
mov
xor
pop
pop
xchg
mov
addr16
mov
add
cs
out
xchg
mov
jbe
mov
xor
int3
xchg
popa
(bad)
xchg
add
jmp
and
ins
mov
xor
mov
push
and
loop
jecxz
pop
outs
in
fadd
dec
into
adc
ss
xchg
aam
lds
jnp
pop
mov
ins
pop
mov
mov
stos
pop
aas
fadd
or
retf
push
xor
dec
xor
sub
add
push
retf
repz
cmc
mov
xchg
mov
push
jg
test
inc
xchg
out
mov
fcom
and
fcmovne
daa
fsubr
sti
xchg
popf
adc
fild
lods
mov
cmp
sub
repz
or
sbb
push
test
sub
mov
mov
int3
cli
sbb
inc
sti
pop
sbb
pop
test
rcl
imul
xchg
cmps
xchg
xor
cmp
cmc
mov
mov
arpl
outs
jne
shr
lds
dec
out
jno
xlat
shr
pushf
pushf
loope
popf
fs
mov
adc
icebp
icebp
lods
cld
ret
cmc
scas
dec
fisubr
or
cs
lods
push
retf
sbb
dec
mov
push
daa
imul
cli
or
sti
jp
sbb
leave
and
jne
sbb
sub
cmps
push
and
mov
pop
(bad)
daa
mov
jo
mov
dec
mov
mov
and
loopne
add
sbb
xchg
pop
cdq
sahf
test
mov
repz
call
ds
fidiv
and
stos
adc
(bad)
jno
add
mov
into
outs
out
lea
xchg
sbb
pop
add
inc
xor
pop
mov
xchg
add
addr16
test
aas
xchg
adc
scas
(bad)
or
cmp
xchg
push
mov
push
jl
dec
fnstcw
xchg
push
jecxz
ja
std
retf
repz
(bad)
mov
push
test
mov
jecxz
jl
lahf
xor
push
or
call
push
push
pop
scas
cmp
mov
mov
cmc
dec
jmp
js
into
and
icebp
sub
pop
fild
test
and
jno
push
pop
int
popf
sbb
jo
xchg
xchg
retf
pop
out
xor
cmps
jmp
jmp
xor
repnz
xchg
mov
adc
cmp
(bad)
pop
jmp
outs
inc
xchg
cs
ins
jmp
pusha
jmp
pop
xor
xor
imul
mov
ja
mov
das
xor
in
aam
xor
ins
inc
pusha
mov
inc
test
cwde
je
xchg
or
(bad)
in
push
out
xchg
xchg
jg
mov
imul
sbb
inc
dec
jmp
js
stos
aaa
sbb
push
jns
test
inc
test
sbb
dec
xor
inc
sbb
adc
push
test
push
inc
cdq
mov
or
call
inc
push
lods
jnp
mov
das
mov
xchg
add
jl
lahf
mov
inc
test
repnz
cwde
mov
sub
dec
mov
repz
adc
push
sub
mov
dec
lahf
mov
fist
ret
stc
das
mov
cmp
sbb
push
lods
and
popa
arpl
jae
xchg
mov
and
inc
leave
fadd
les
ins
push
cdq
pop
jmp
jne
cld
add
into
(bad)
repnz
outs
stos
mov
push
xchg
mov
mov
mov
dec
retf
push
fdiv
inc
add
cmp
pop
gs
add
lahf
mov
mov
or
xchg
std
dec
inc
pop
add
sub
push
adc
das
sar
arpl
ja
test
sbb
and
out
xchg
xor
arpl
rcr
cli
dec
xchg
rcl
xor
jne
mov
pop
jae
mov
in
out
lds
popf
stos
dec
idiv
xor
fist
add
dec
stos
cmp
scas
inc
pop
jns
xchg
scas
mov
push
stc
ins
(bad)
cmc
and
pop
int
pop
jnp
xor
frstor
mov
mov
aaa
cs
call
mov
inc
jbe
lds
in
(bad)
dec
xor
mov
lock
or
xchg
mov
mul
lods
push
ret
je
add
fist
xor
dec
fcomp
push
mov
sub
mov
push
jecxz
sub
sbb
adc
es
nop
jge
movs
push
arpl
cmp
xchg
aas
(bad)
idiv
jg
jbe
push
repz
jl
les
pandn
xchg
in
xchg
add
adc
les
fwait
aam
retf
ss
lock
dec
stos
sbb
cs
lahf
mov
scas
or
sbb
cld
je
jno
fnsave
ins
popa
sub
fwait
daa
mov
(bad)
movs
sub
mov
(bad)
or
into
and
idiv
jl
jg
dec
fnstcw
xchg
addr16
out
push
rol
(bad)
cmp
mov
add
aam
mov
dec
dec
loop
push
retf
dec
into
adc
xor
clc
rcl
pop
jae
dec
cmps
sbb
jnp
dec
sub
movs
mov
outs
cli
cmc
add
cmc
jp
popa
sbb
sbb
adc
jge
stos
jge
mov
jae
cwde
lahf
or
push
jle
test
add
jnp
mov
js
loop
dec
cmc
xchg
js
mov
imul
sti
ins
mov
jg
xchg
xchg
mov
sbb
ss
jmp
jo
dec
mov
aaa
and
test
or
test
(bad)
pop
adc
das
call
xor
mov
lods
and
jb
adc
bound
arpl
sahf
inc
daa
mov
repnz
ins
or
jno
mov
xor
repnz
dec
xchg
scas
push
ret
jp
push
cmp
dec
push
dec
stos
aaa
je
sahf
aaa
sbb
xchg
mov
mov
rol
sbb
xor
sbb
inc
popf
pop
out
jne
push
mov
mov
(bad)
aaa
mov
pop
push
lds
or
pusha
in
popa
and
(bad)
hlt
or
add
xchg
pop
and
icebp
sbb
add
cmps
ds
idiv
jge
sbb
fisubr
pop
test
sub
scas
xchg
sub
ins
cli
xchg
xor
cmp
or
add
outs
pusha
test
sub
inc
jns
xchg
cmc
call
xchg
sbb
jns
cmp
dec
out
repnz
mov
xchg
popa
aam
push
dec
xchg
mov
movs
mov
rcl
jno
mov
ds
shl
hlt
(bad)
cmp
call
cs
cld
fistp
inc
popa
jge
stos
or
jg
dec
sbb
icebp
(bad)
mov
sub
outs
jmp
bound
sbb
or
or
sub
adc
dec
sbb
xor
test
iret
cmps
call
inc
ins
jbe
popf
pop
idiv
mov
sub
(bad)
movs
add
push
mov
push
adc
stc
lock
into
xor
xchg
push
fild
or
es
ja
mov
dec
and
stos
mov
fwait
hlt
jl
call
ins
inc
cmp
and
add
cmp
sub
pop
dec
inc
repz
in
das
dec
cmp
fstp
bnd
push
lds
lds
adc
cld
jbe
mov
xchg
add
sbb
mov
mov
or
mov
or
xchg
rcr
add
push
stos
aas
gs
inc
cs
stos
stos
xchg
aaa
sub
and
jno
fadd
jge
and
sbb
sahf
jg
mov
pop
xchg
mov
data16
fst
add
mov
cmps
rcr
mov
aad
scas
cmps
scas
ret
pop
jo
xchg
adc
lods
scas
push
loope
lock
or
xor
sbb
xchg
imul
lods
xor
cmp
mul
sub
inc
add
sub
mov
lahf
dec
outs
popf
(bad)
and
pop
jecxz
xchg
xor
mov
push
jecxz
(bad)
dec
cdq
mov
jl
xchg
or
sti
rol
(bad)
(bad)
mov
mov
jl
mov
push
xor
repz
lahf
mov
pop
fimul
sub
imul
mov
outs
push
mov
jl
ret
xor
cli
das
mov
pop
push
gs
inc
add
aaa
nop
jle
inc
arpl
pop
cwde
aad
sbb
ficomp
not
inc
test
jp
in
adc
mov
cdq
test
pop
jno
test
adc
neg
call
(bad)
pop
or
xchg
(bad)
and
adc
dec
scas
cmp
mov
sub
xchg
lock
pop
and
pop
aas
jb
pop
icebp
cmp
fiadd
mov
(bad)
adc
and
xor
gs
push
(bad)
xchg
lock
je
retf
xlat
mov
stos
jmp
popf
rol
ret
lds
xchg
mov
cmp
push
repz
pop
inc
push
sti
push
aas
add
fmul
cli
add
clc
jb
jb
int
sbb
adc
fdivr
xchg
imul
sbb
mov
outs
(bad)
mov
mov
jne
outs
pop
push
nop
sub
mov
xchg
addr16
pop
pop
jmp
lahf
add
(bad)
lahf
movs
xchg
adc
sar
dec
adc
mov
push
inc
adc
cld
fbstp
gs
dec
mov
les
jp
out
or
sbb
and
push
adc
dec
dec
mov
movs
sbb
test
popa
ret
xor
push
pop
scas
pop
lock
(bad)
pop
xchg
loope
pop
aad
pusha
pop
mov
mov
hlt
imul
sahf
xchg
es
stc
mov
out
dec
loop
fs
inc
call
cld
fild
xor
sbb
mov
inc
popf
xchg
call
(bad)
js
aad
dec
jbe
rcr
pop
das
cmp
sub
mov
addr16
cwde
aas
cmp
dec
in
out
inc
lock
sbb
pop
in
lock
cdq
iret
xchg
addr16
pushf
inc
pop
std
std
jmp
sar
mov
push
daa
call
inc
outs
mov
inc
jecxz
aad
sub
stc
(bad)
enter
popa
jge
stos
cs
lea
jle
fnstsw
imul
das
mov
pusha
je
xor
push
(bad)
cmp
pop
or
test
jmp
xchg
add
(bad)
jb
dec
jge
test
mov
jl
les
and
rol
mov
jne
mov
in
test
pop
inc
loop
inc
xchg
dec
fdivr
pop
sbb
in
imul
or
test
inc
out
mov
xchg
xor
push
(bad)
xor
and
xor
inc
add
fistp
mov
outs
call
xor
fist
fisub
cmp
dec
mov
mov
enter
hlt
rcl
rcr
mov
xor
lock
icebp
mov
dec
pop
fwait
lods
cmp
pop
in
sbb
cmp
cld
mov
cld
inc
js
inc
mov
xor
mov
cmps
dec
test
mov
inc
int
sbb
and
out
push
rcr
mov
pop
movs
mov
pop
loop
mov
adc
in
sbb
jne
into
idiv
mov
arpl
(bad)
stos
test
lods
scas
dec
mov
sbb
test
loop
test
inc
js
aam
out
pop
scas
ds
fdivr
rcr
cmp
sbb
je
dec
add
xchg
mov
icebp
jle
cli
adc
enter
add
push
call
and
add
mov
sub
fidiv
lock
mov
mov
ins
jmp
mov
mov
out
movs
mov
ja
mov
loop
ret
ins
cdq
pop
das
in
push
cmp
(bad)
(bad)
std
push
retf
sbb
fdiv
test
lahf
movs
fwait
ret
fdivr
mov
mov
ins
inc
inc
loop
adc
add
imul
xor
popf
adc
push
dec
int
xchg
aaa
sahf
call
inc
mov
dec
xchg
mov
je
in
daa
leave
xlat
pop
jmp
xchg
xchg
pushf
aad
pop
jo
xchg
adc
std
retf
inc
jg
mov
jnp
or
call
or
arpl
mov
in
ret
into
or
clc
cmovge
xor
xor
in
sbb
push
aas
movs
xor
mov
loope
and
inc
hlt
xlat
xchg
aas
mov
outs
cmp
dec
xchg
rcr
icebp
ror
xchg
idiv
shr
mov
shl
neg
lock
inc
jmp
dec
lds
iret
jmp
push
fbstp
inc
adc
mov
into
jg
cli
add
fbstp
pop
pop
and
repnz
sbb
add
and
rcl
cli
inc
popa
push
lods
pop
xchg
addr16
add
ret
out
imul
ins
jae
mov
push
and
les
sub
cs
(bad)
inc
int3
aas
push
sbb
stos
punpckhbw
gs
mov
xchg
mov
stc
fistp
mov
sbb
xor
add
call
pop
sub
adc
and
or
rcl
jnp
test
into
(bad)
js
aad
push
idiv
mov
out
ins
xchg
scas
stos
(bad)
sbb
cmc
sbb
test
mov
inc
xor
stc
repz
cmp
pop
bound
arpl
pop
icebp
(bad)
mov
sti
ror
xchg
sbb
dec
add
pop
add
and
lea
lahf
and
ins
push
ficomp
mov
inc
scas
cmps
call
xchg
inc
(bad)
repnz
xchg
pop
lds
or
nop
inc
es
aaa
(bad)
imul
xchg
xchg
add
pushf
xchg
int
inc
jg
xchg
inc
aad
into
ss
push
fmul
aad
loope
pop
cmp
adc
jle
push
or
movs
movs
lea
clc
add
push
inc
popa
or
aas
das
pop
adc
pop
mov
fcomp
sub
pop
daa
sub
in
repz
fld
push
mov
cmp
mov
cmps
add
jp
std
test
aas
stos
jns
lods
mov
pushf
test
icebp
inc
push
xchg
mov
(bad)
pop
scas
sub
dec
loop
mov
ja
test
jno
cs
push
es
out
repz
addr16
ss
sub
sub
sbb
fisttp
adc
mov
and
sar
sti
jge
jl
inc
shl
cdq
push
in
cmps
pop
sub
rol
mov
pop
lea
repnz
(bad)
jle
xchg
lods
push
xchg
dec
jmp
aaa
or
jmp
cmp
xor
outs
stos
cmp
stos
inc
or
stos
cdq
popf
dec
inc
stos
pop
loop
sbb
xor
cmp
push
sahf
imul
mov
mov
xor
popf
xor
jle
stos
dec
xor
push
out
xchg
xchg
test
les
outs
ja
mov
add
fcmovne
mov
fistp
mov
cmp
xlat
pop
icebp
pop
push
sbb
ins
cdq
push
cs
mov
stos
sbb
fsubr
in
or
inc
int
pop
jg
and
stos
sbb
dec
sub
xchg
aas
or
fwait
stos
xchg
daa
mov
inc
and
inc
jecxz
repz
call
xchg
jb
std
ror
mov
inc
ja
mov
cmc
mov
loop
add
ret
sub
sub
ss
dec
loope
fild
xor
adc
mov
dec
lahf
mov
mov
cs
in
dec
cwde
xor
dec
les
sbb
push
xchg
sub
mov
ins
in
movs
mov
out
in
loop
mov
push
mov
not
xchg
arpl
mov
imul
fwait
movs
cwde
out
shr
xchg
(bad)
mov
and
call
scas
push
xchg
push
out
pop
inc
push
nop
icebp
loopne
rol
cmp
ss
dec
inc
jg
mov
add
adc
sbb
js
sbb
mov
pop
in
fwait
sub
retf
mov
cli
jl
dec
mov
inc
pushf
les
daa
into
shr
cwde
(bad)
cmps
mov
add
std
retf
cmps
test
pop
inc
mov
and
jmp
inc
in
cmp
sbb
mov
dec
pop
xchg
push
mov
lahf
in
jp
(bad)
jp
inc
cmp
add
lahf
and
ficom
mov
test
out
xchg
xor
add
mov
dec
out
mov
fcmovnbe
mov
jnp
mov
bound
lock
fadd
mov
push
es
(bad)
lock
and
xor
pop
mov
push
or
mov
xor
fild
lea
cmc
jae
jae
sti
and
pop
ds
pop
(bad)
ins
in
sbb
imul
dec
add
pop
jl
jmp
jl
mov
in
in
mov
in
adc
mov
cmps
test
sbb
mov
push
adc
fisttp
fwait
scas
jo
push
dec
sub
inc
or
inc
test
push
inc
add
push
iret
ins
out
frstor
xchg
clc
push
addr16
inc
enter
adc
cwde
pop
mov
mov
outs
test
mov
sbb
mov
sahf
sti
or
gs
fld
xchg
sahf
jae
xchg
jns
sti
aad
push
out
xchg
inc
sbb
xor
fld
cmp
push
hlt
cmp
fild
inc
pop
sub
pop
pop
jo
inc
ss
lahf
mov
mov
in
clc
add
mov
push
jae
sbb
imul
cmp
or
mov
loope
jnp
lea
(bad)
mov
les
adc
xlat
sub
nop
mov
push
sbb
xchg
leave
lock
push
lea
dec
pop
pmaxsw
(bad)
ss
inc
stos
push
sbb
inc
cs
or
lahf
clc
jbe
jno
int
add
push
nop
cmp
dec
adc
xor
mov
pusha
jmp
xchg
aas
xchg
std
push
cld
pop
je
mov
movs
loopne
mov
xchg
fs
imul
loopne
test
stos
in
mov
lds
cdq
fmul
push
mov
call
neg
jge
push
inc
or
push
jne
scas
inc
inc
push
lahf
mov
iret
outs
call
jp
je
jecxz
sub
add
idiv
fisttp
test
sbb
sub
adc
jle
cmps
jle
mov
dec
xchg
int3
jmp
add
out
in
stc
(bad)
in
stos
jns
mov
std
fild
mov
rol
das
or
or
sbb
lea
cs
mov
fild
or
jl
(bad)
pop
sbb
ja
lods
pop
stos
sub
dec
inc
stos
ins
add
xchg
xor
hlt
scas
xchg
daa
mov
jae
mov
ins
movs
rcl
in
xlat
nop
add
imul
mov
jmp
mov
imul
clc
icebp
xlat
pop
fidiv
jl
imul
jge
loopne
sbb
fwait
(bad)
inc
cmps
popfw
xchg
jl
sti
jbe
ja
int
push
push
sub
fwait
aas
xchg
jne
imul
jnp
sub
sar
aad
je
fiadd
sahf
cmp
into
xchg
fcomp
test
mov
sub
xor
in
in
(bad)
pop
pop
mov
ins
loopne
fdiv
sar
xor
inc
mov
push
test
pop
ja
xchg
xchg
in
sub
inc
xor
pop
cmp
arpl
sbb
sbb
push
mov
sub
xchg
and
cld
jno
inc
dec
jl
inc
xchg
(bad)
pusha
xor
and
rol
lea
ja
mov
add
stc
repnz
in
lock
jge
mov
jecxz
mov
sub
std
aad
je
xor
aas
pop
inc
sahf
inc
or
aaa
iret
inc
cli
loope
mov
bound
outs
inc
jno
cwde
das
mov
mov
and
xchg
pop
inc
fstp
mov
std
ins
jo
lods
jg
mov
dec
jmp
adc
icebp
adc
sbb
push
mov
cld
xchg
cmc
aam
loope
fist
cs
jmp
push
pop
scas
daa
je
pushf
or
call
push
cli
mov
aaa
call
and
pusha
ja
inc
xor
and
mov
xor
and
popf
mov
inc
mov
add
aam
loopne
xchg
fist
xor
ret
xchg
push
aaa
mov
ja
mov
adc
repnz
js
nop
pop
std
daa
inc
or
pop
pop
jp
mov
push
call
scas
xor
retf
sbb
cmc
jbe
pusha
inc
les
cmp
fs
ins
pusha
mov
add
dec
jl
scas
test
mov
add
xlat
xor
popf
push
sbb
sbb
mov
test
add
repnz
int
inc
pop
test
fdivr
inc
dec
(bad)
fcom
fld
jge
jne
pop
mov
mov
mov
popf
cli
add
pop
std
pop
jae
sub
add
popa
jns
dec
inc
movs
cmp
(bad)
sbb
fidiv
icebp
add
push
fnstsw
sbb
js
repnz
stos
ret
aas
stos
ins
sbb
loopne
test
mov
ss
clc
icebp
into
ja
cmp
jo
ss
pusha
mov
pusha
lahf
xchg
lea
out
jnp
mov
jno
fld
fs
das
and
push
lods
or
pop
push
(bad)
adc
sub
repz
loope
sub
dec
in
std
mov
scas
call
jge
pusha
clc
mov
inc
loopne
jecxz
jmp
rcl
neg
test
add
cmps
ins
int
fidiv
sub
out
sub
or
mov
inc
push
xchg
fisttp
outs
jmp
packuswb
and
jge
mov
(bad)
xor
xor
xchg
xor
in
mov
jo
mov
dec
mov
test
sti
ror
mov
ins
ja
mov
cmc
sub
inc
ins
lods
test
cmp
daa
ret
sbb
mov
inc
sbb
xchg
lods
xchg
dec
fild
cli
push
xchg
cmc
js
push
inc
add
pop
mov
push
inc
retf
repz
(bad)
mov
mov
jnp
pushf
pop
loopne
aam
cdq
mov
pop
adc
repz
sti
cmps
sar
inc
jle
fwait
repz
xlat
loop
cld
icebp
and
aad
jecxz
std
adc
add
stc
xor
pop
stos
or
mov
dec
icebp
cmps
mov
outs
test
or
and
sbb
pusha
adc
hlt
bound
jg
mov
je
fwait
mov
adc
imul
imul
jno
mov
pop
xchg
les
sbb
jmp
stos
aad
popf
push
outs
aaa
cli
in
stos
dec
add
repnz
aad
out
jo
dec
mov
dec
sub
xchg
mov
push
loop
sbb
aas
sti
xor
add
mov
push
cwde
add
int
add
loopne
imul
popa
cdq
inc
test
xchg
push
cmps
dec
sub
cmps
xchg
add
scas
dec
mov
(bad)
xor
fstp
mov
ds
aam
xlat
jp
inc
je
bound
inc
add
mov
inc
stc
sar
lock
inc
pop
int
push
sbb
xchg
and
pop
ror
mov
jg
movs
xchg
pop
and
xchg
aaa
mov
pop
jle
pop
loope
jmp
push
xchg
test
mov
mov
pop
jb
popf
test
aaa
stc
aam
cld
out
ins
fwait
stos
jp
pop
mov
cs
fcmovnu
dec
lock
xor
mov
jp
mov
cwde
or
shl
cli
adc
aaa
int
sub
add
rol
jle
test
mov
jb
mov
sub
aas
(bad)
xchg
xor
jno
stos
pop
ffree
retf
push
out
mov
push
clc
mov
test
outs
arpl
cwde
jmp
adc
pushf
cmps
mov
fadd
sub
adc
adc
iret
sub
jno
push
xchg
pusha
and
mov
test
cmp
or
aaa
fst
fwait
cmp
outs
test
sbb
test
cmp
jmp
push
sti
push
jbe
mov
outs
xchg
jecxz
inc
in
arpl
in
in
and
pushf
retf
jg
jecxz
mov
les
mov
sub
dec
clc
stc
cld
ja
xor
pop
js
test
jl
sahf
mov
xor
int3
outs
repz
fiadd
sbb
and
and
imul
pushf
sub
scas
cdq
mov
loope
and
call
jg
inc
mov
cmps
je
xchg
in
sub
movs
mov
push
mov
retf
dec
pushf
mov
push
ror
cmp
cli
(bad)
push
fidivr
jo
dec
cwde
xor
xchg
jmp
dec
leave
cli
or
ss
push
jo
xor
imul
xor
add
push
cmp
into
movs
dec
mov
inc
inc
fiadd
xchg
fcom
les
or
mov
movs
(bad)
mov
add
stc
loop
cmc
lds
cmc
scas
les
cs
cld
in
pop
shl
bound
dec
fwait
ins
pop
and
cs
jp
mov
retf
sub
aam
dec
fs
iret
push
add
or
sbb
jp
mov
pusha
scas
test
dec
in
aam
inc
nop
mul
dec
push
push
mov
push
mov
call
lea
fwait
test
bound
call
aas
add
aad
retf
outs
rcr
mov
push
jo
imul
movs
(bad)
mov
out
cli
aas
mov
jbe
push
sub
pop
adc
popa
mov
imul
popf
sub
lods
mov
sahf
xlat
xchg
xor
out
jb
ins
jne
lods
jg
mov
pop
adc
callw
cmp
shl
mov
push
add
idiv
fsqrt
jnp
mov
sub
jle
sub
ds
int3
fistp
cmp
or
or
loopne
or
mov
mov
test
sub
xor
xor
adc
or
jl
movs
sub
mov
out
fcos
xor
jle
scas
dec
popf
mov
mov
out
mov
sbb
sbb
bound
enter
call
jg
cdq
scas
dec
lea
adc
cmp
call
jo
cmp
cs
jns
cwde
test
pop
cmp
inc
repnz
das
mov
jl
xor
scas
and
mov
arpl
or
repnz
xor
inc
lea
mov
mov
adc
(bad)
mov
in
test
push
ds
(bad)
adc
mov
dec
sub
or
push
jge
sbb
xchg
push
xchg
cld
sbb
jmp
dec
inc
aaa
leave
xor
sub
mov
inc
jmp
es
cmc
xchg
add
jno
lea
mov
jge
mov
push
iret
cld
pop
dec
lock
mov
xchg
xchg
call
lods
mov
ror
das
cmp
pop
lds
or
mov
dec
inc
lea
jo
mov
lea
jmp
cdq
cmc
data16
xor
sub
add
add
stos
or
in
mov
cmp
lock
and
and
push
or
rol
call
mov
adc
mov
stos
inc
mov
dec
sub
inc
jmp
popa
and
mov
retf
sub
fdivr
clc
and
or
and
pop
add
cmp
cmps
dec
sub
adc
dec
in
iret
xchg
inc
lahf
clc
pop
loop
je
mov
dec
xchg
les
xor
(bad)
mov
jnp
mov
adc
xlat
hlt
(bad)
ret
outs
pushf
fadd
pop
cli
cmp
cmp
call
arpl
cs
mov
jmp
dec
pusha
inc
mov
adc
mov
jne
push
scas
sbb
test
xchg
scas
xchg
es
hlt
inc
jbe
mov
inc
loopne
test
xor
repz
test
adc
xchg
in
mov
xchg
test
out
fidivr
fcom
pop
ja
pop
mov
push
or
xchg
clc
push
std
out
push
mov
jbe
imul
retf
or
arpl
or
mov
jns
xchg
sub
stos
xchg
aas
mov
or
outs
pop
push
mov
enter
sahf
stos
cdq
jge
xchg
add
retf
aam
add
js
lods
xchg
scas
add
add
popa
adc
repnz
frstor
pop
in
cmp
ds
repz
mov
inc
cs
xchg
lods
nop
aas
push
enter
sbb
add
inc
pop
inc
sub
and
bound
jne
sbb
mov
jae
jmp
jge
push
popf
xchg
xlat
pop
sub
add
rol
stos
mov
mov
cmc
xor
sar
dec
imul
fsubr
lods
push
into
xor
pop
jl
fwait
inc
push
jno
mov
jmp
xchg
jbe
jge
mov
push
pop
and
and
push
and
add
xchg
mov
cmp
ins
les
or
adc
cli
mov
pop
xchg
iret
call
and
fistp
(bad)
lods
pop
jb
xchg
mov
and
inc
fwait
stos
dec
lds
div
repz
cld
cmp
cmp
test
xchg
call
cli
sbb
xchg
sbb
adc
push
fs
add
imul
xor
mov
or
sbb
arpl
out
lock
mov
popf
push
xchg
cld
add
(bad)
fld
movs
ror
fcom
xchg
mov
out
into
jmp
inc
mov
fisubr
cs
jmp
xor
inc
or
retf
out
jmp
jb
fild
add
mov
mov
test
inc
movs
sub
mov
cmp
xlat
cmps
add
imul
sbb
cmps
inc
test
xchg
mov
dec
out
inc
xor
sti
std
je
pusha
mov
pusha
mov
mov
xor
gs
scas
push
lea
retf
ds
fild
add
pop
test
jns
mov
stos
sub
nop
add
sub
(bad)
call
inc
retf
xchg
sar
ror
aas
mov
inc
jl
outs
(bad)
jmp
jb
in
out
jae
imul
shr
xchg
mov
repnz
movs
fs
cmp
sbb
retf
out
dec
jne
and
dec
aas
add
es
jns
stc
das
mov
push
imul
adc
add
fwait
and
add
inc
push
pushf
dec
pop
retf
lea
inc
(bad)
test
add
jmp
imul
(bad)
dec
cmps
shl
cmc
mov
xchg
out
jne
sub
xchg
out
(bad)
inc
jl
mov
pop
fimul
cs
into
fist
add
xor
mov
dec
lahf
les
push
clc
cli
add
inc
(bad)
xor
pop
push
pop
jmp
push
pusha
lea
mov
lea
sbb
mov
mov
pop
fadd
push
mov
dec
mov
mov
mov
into
data16
add
popf
xchg
clc
fiadd
imul
and
std
and
pop
jnp
dec
scas
add
inc
mov
cmps
mov
jg
test
pop
add
sbb
or
addr16
jge
mov
addr16
cdq
dec
sbb
xchg
aas
mov
addr16
ja
xchg
(bad)
inc
mov
jmp
xor
rol
movs
mov
xchg
pop
add
es
mov
jns
dec
call
sti
test
add
pop
outs
and
mov
mov
int3
fcomp
sahf
xchg
pop
inc
dec
xor
adc
in
push
pop
cmps
ins
adc
dec
arpl
push
dec
les
jbe
push
push
stos
xor
std
out
out
jno
out
shr
movs
test
cmp
outs
jo
mov
in
in
sti
dec
js
lods
xor
icebp
fcmovbe
pop
fidiv
push
push
jp
sbb
test
sub
mov
or
dec
jmp
jno
enter
add
and
inc
js
jg
movs
cmp
mov
gs
scas
loope
sahf
sti
add
xchg
jg
mov
dec
loope
sbb
rol
lahf
sub
adc
fst
pop
test
sub
xor
fistp
sbb
sub
add
imul
mov
cld
cli
add
and
and
sahf
or
ja
movs
cmp
daa
add
xlat
pushf
pop
mov
push
push
mov
pop
loop
mov
xchg
jns
xchg
not
(bad)
jmp
xchg
mov
fld
xor
jb
es
push
(bad)
call
cdq
push
inc
pop
stos
inc
sub
test
mov
stc
ins
jmp
jae
jp
sar
add
and
jnp
mov
je
stos
(bad)
push
adc
out
inc
sti
push
loopne
jnp
test
bound
xchg
add
in
rcl
mov
pop
fwait
cdq
cmc
outs
es
pushf
test
dec
pop
mov
into
xor
cs
std
pop
rcr
and
mov
push
cmp
lahf
mov
shl
nop
addr16
jecxz
ja
and
es
sub
mov
push
nop
mov
inc
ret
xor
hlt
popa
lock
inc
cmps
jge
mov
xchg
fs
jb
into
mov
and
ja
mov
push
xor
std
push
ins
test
into
inc
sub
cli
cld
fistp
jnp
dec
mov
dec
pop
jl
mov
mov
shl
mov
jbe
jae
mov
sbb
jl
cmps
ja
adc
mov
xchg
aaa
pop
arpl
leave
out
mov
jo
push
popa
inc
stos
pop
test
mov
and
sti
movs
(bad)
iret
inc
movs
jle
mov
loop
jmp
jns
or
sub
fdivr
rcl
imul
inc
mov
xchg
stos
mov
in
sub
popa
es
or
add
pusha
mov
add
or
mov
mov
jb
pop
jnp
test
dec
call
sub
jecxz
xchg
mov
outs
jnp
xchg
cdq
(bad)
inc
jg
aad
idiv
cmp
das
sub
push
lock
je
jge
pop
jnp
xchg
push
inc
push
in
lds
outs
int3
fstp
mov
push
ja
and
dec
fs
xor
add
mov
movs
sbb
in
(bad)
pop
sbb
dec
out
xchg
inc
mov
in
pusha
inc
fisubr
scas
(bad)
pop
mov
in
push
xchg
movs
mov
loopne
mov
pushf
shr
pop
jb
movs
mov
pop
loope
mov
repz
ins
fwait
lods
push
retf
sbb
push
(bad)
clc
enter
push
aaa
push
mov
push
add
xchg
fwait
adc
xor
clc
jp
or
add
out
or
inc
xor
mov
push
and
call
pop
fmul
push
pushf
pop
call
xchg
pop
in
popa
pop
mov
icebp
pop
xchg
push
cmp
sar
shl
fs
fwait
add
fidivr
sbb
out
into
inc
shl
xor
jge
or
mov
retf
cmp
lea
int3
jne
ja
into
and
scas
ss
outs
sbb
data16
lods
ins
inc
dec
and
scas
xchg
xor
add
lds
mov
xor
jge
xchg
les
fcmovnb
or
cmp
mov
cmp
call
or
pop
push
jl
test
je
add
pop
mov
test
addr16
and
cmp
add
inc
arpl
jns
cdq
sahf
or
or
xchg
ror
stos
pop
loope
out
cwde
les
adc
sti
xchg
add
pop
movs
(bad)
mov
jae
test
fiadd
pushf
mov
inc
fld
cmp
fdivr
fild
aaa
or
dec
mov
push
sub
(bad)
scas
push
inc
stos
pop
(bad)
icebp
or
aas
mov
or
inc
outs
movs
dec
mov
mov
xor
leave
fst
ret
inc
test
cmp
mov
jmp
jmp
xchg
mov
add
cmc
aam
in
popf
bound
movs
push
enter
cs
sti
in
push
cmp
push
dec
stos
pop
imul
xchg
mov
pusha
enter
shl
jns
jmp
add
stos
jge
nop
xor
adc
xor
(bad)
mov
popf
aad
test
cmp
cdq
pop
add
rol
mov
ja
mov
push
aaa
std
std
sub
imul
jecxz
(bad)
and
inc
xor
sbb
pop
mov
mov
fild
xchg
sbb
retf
inc
or
cmp
ds
inc
adc
data16
mov
add
sub
scas
xchg
aaa
mov
bound
cmps
sub
mov
mov
adc
imul
lods
mov
das
mov
pop
test
not
xchg
mov
lds
sti
jbe
xor
xor
stc
cs
jbe
mov
shr
stc
das
mov
jbe
dec
sbb
dec
aas
push
add
xor
inc
pop
mov
je
mov
adc
das
jle
out
dec
mov
arpl
push
pop
ins
scas
jp
mov
pop
jecxz
xchg
data16
push
or
out
xchg
mov
ret
pop
push
call
hlt
div
fsub
sahf
mov
sub
sti
push
in
add
inc
test
cs
ins
xchg
push
test
sbb
sbb
and
sub
mov
jg
mov
arpl
call
inc
fs
popf
pop
call
enter
xchg
jbe
std
ror
mov
imul
xchg
fucomp
js
xchg
lods
inc
int
not
add
xchg
xchg
mov
cld
sub
pop
ins
push
movs
inc
cmp
mov
jmp
bound
int
sbb
and
stc
pop
pusha
mov
ja
xlat
sahf
sub
dec
and
in
xchg
adc
idiv
pop
arpl
pop
idiv
xchg
nop
push
and
repz
mov
dec
jnp
mov
shr
popf
mov
jecxz
hlt
cmp
sbb
cmp
and
jo
inc
sub
mov
out
cmc
daa
mov
cmp
cmp
pop
push
xor
cmp
mov
je
aam
and
fcmovbe
xor
sbb
dec
call
cdq
dec
repnz
jno
cli
clc
xchg
pop
in
ins
mov
mov
mov
cs
test
mov
aaa
in
push
or
cmp
cld
cld
inc
mov
dec
lods
aaa
pop
inc
xchg
push
xchg
test
loop
adc
call
adc
push
gs
sbb
mov
imul
inc
loop
jns
test
push
call
adc
out
xchg
xchg
pushf
jmp
mov
jmp
aam
retf
cmp
jecxz
fdivr
inc
pusha
xor
and
movs
fwait
sbb
jmp
mov
data16
sub
cmp
add
sbb
push
test
test
mov
daa
and
out
xchg
xor
jbe
stos
push
mov
mov
jmp
loopne
adc
pop
mov
bound
icebp
sbb
std
(bad)
cmc
test
dec
or
and
push
aaa
je
movs
push
sub
mov
lahf
push
or
dec
cli
or
clc
jbe
pop
sub
and
sbb
test
inc
sub
xchg
into
test
pop
add
adc
push
push
popf
jp
mov
mov
in
ja
cli
xlat
xchg
stos
shl
outs
ja
movs
sub
inc
mov
(bad)
sub
xchg
(bad)
data16
sbb
arpl
jno
inc
lods
pop
add
lahf
lods
mov
in
shr
xchg
clc
bound
sti
pop
pop
sbb
add
ins
ins
mov
pop
popf
fldcw
int
out
sar
repnz
dec
daa
fist
xchg
lock
les
xor
stos
xchg
adc
sbb
test
add
ret
add
dec
ins
sahf
fbstp
push
or
enter
call
outs
push
mov
xchg
mov
test
ss
add
push
jb
fcom
sbb
add
push
fistp
or
movs
cli
mulps
int
mov
mov
jo
dec
jl
mov
std
mov
ins
xchg
rcr
xor
loop
adc
jg
pushf
mov
sub
nop
xor
popa
mov
(bad)
adc
ds
repnz
adc
dec
shr
inc
mov
jnp
test
outs
sti
rol
pushf
jecxz
inc
jno
loopne
xor
add
adc
js
fld
sub
scas
xchg
xor
sar
sti
jge
push
fnstsw
pushf
(bad)
dec
xchg
les
cli
ret
xchg
xor
fdivr
sbb
jle
xchg
xchg
test
std
imul
lods
test
rcr
cmp
pop
cld
inc
arpl
push
xchg
sbb
mov
push
xchg
adc
repnz
aas
mov
jne
add
cmp
ins
push
test
cmp
cld
xor
div
repnz
add
ret
mov
jge
stos
test
xchg
xchg
jnp
sar
cmps
add
shr
jns
mov
mov
out
mov
cmp
lods
push
in
jnp
ds
inc
xchg
inc
push
jbe
cmps
pop
jg
lods
or
mov
fild
repnz
mov
jbe
pop
dec
mov
sub
jp
cmps
inc
dec
retf
stos
mov
dec
(bad)
jmp
sbb
pop
jae
popf
outs
lock
sti
stos
dec
loopne
pusha
and
cli
div
pusha
and
call
cdq
mov
push
and
ror
mov
sbb
cs
cld
std
shl
jnp
fwait
pop
imul
imul
stc
add
cld
jge
je
into
and
push
mov
(bad)
jge
mov
gs
into
test
pop
push
pop
sti
fsubr
aaa
mov
jns
ins
dec
daa
fisubr
sahf
test
dec
and
sti
pushf
or
imul
jmp
push
in
fild
lods
mov
dec
cmp
in
bnd
dec
push
pusha
and
inc
adc
mov
jmp
push
pop
mov
push
nop
add
mov
movs
adc
popf
mov
in
xchg
xor
data16
pop
jecxz
loopne
xchg
mov
test
mov
jecxz
in
neg
idiv
cmps
xchg
addr16
repnz
cwde
test
sub
sbb
int3
fld
pop
inc
ss
pushf
or
outs
adc
mov
mov
jp
jno
int
sbb
xor
imul
aas
test
ins
fwait
xchg
(bad)
cmp
xor
scas
call
inc
and
push
adc
je
repnz
cmps
fdiv
xchg
mov
adc
scas
cmp
pushf
lea
pop
fldenv
sub
inc
xchg
inc
fs
xor
inc
sub
lahf
test
pop
test
or
add
sub
jns
adc
imul
jp
ror
popf
xlat
mov
mul
or
pop
jb
mov
dec
out
in
loop
popa
or
ret
mov
mov
sbb
mov
pushf
mov
xchg
fwait
add
fidivr
and
rol
ds
inc
pop
ja
test
jne
cs
push
cmp
pop
test
arpl
fadd
adc
push
and
adc
xor
mov
and
gs
xchg
add
cld
inc
loopne
jbe
or
mov
jae
std
sti
cmc
adc
mov
pusha
fs
mov
fild
mov
add
int
mov
les
jnp
dec
stos
addr16
outs
popf
sub
xchg
mov
push
ror
mov
xor
and
push
jne
sub
add
gs
dec
inc
cwde
xchg
out
fist
les
je
pop
out
mul
rol
(bad)
mov
fwait
xchg
fcmovnb
push
mov
stos
push
aaa
retf
in
(bad)
jo
mov
xlat
aaa
cmp
inc
loopne
push
sub
adc
lahf
imul
ret
stc
inc
pushf
clc
xor
inc
mov
add
ins
cmps
push
pop
into
adc
adc
pop
arpl
mov
outs
fnstcw
loopne
out
inc
and
call
movs
mov
fs
xchg
mov
pushf
movs
enter
mov
cmp
sbb
in
jns
xor
cmp
gs
push
bound
sub
pusha
cwde
rcl
mov
ss
cmp
jae
sbb
jns
sahf
adc
fwait
mov
pop
clc
lock
and
in
jb
jg
jb
jae
xchg
fistp
fst
push
enter
loopne
or
psubq
icebp
mov
jecxz
pop
fwait
mov
adc
sbb
(bad)
out
inc
call
ficomp
push
push
inc
dec
out
mov
fild
cli
add
xor
and
mov
mov
enter
jp
movs
sbb
mov
mov
cmp
dec
aam
xchg
pop
mov
jbe
scas
popa
out
retf
dec
jmp
xchg
je
xchg
jno
aad
hlt
or
imul
cdq
cmc
sbb
(bad)
rol
mov
dec
aaa
xor
(bad)
(bad)
and
inc
mov
dec
sbb
lahf
mov
mov
cwde
mov
movs
clc
jo
pusha
xor
add
imul
sbb
cdq
lahf
sbb
jge
mov
inc
lods
(bad)
jle
pop
dec
test
icebp
mov
dec
loopne
mov
and
(bad)
cmps
push
out
movs
popf
test
push
sbb
pop
dec
cwde
fadd
gs
sub
fsubr
repnz
ret
push
dec
lahf
pop
ins
push
lea
adc
inc
in
leave
fcom
pushf
lock
jno
mov
and
sbb
or
mov
xchg
inc
and
(bad)
and
gs
dec
jecxz
(bad)
dec
mov
test
mov
xor
shl
or
ins
and
jge
mov
add
movs
dec
ror
pop
sbb
jo
inc
mov
inc
pop
inc
push
xchg
mov
out
jmp
jb
loope
or
adc
push
mov
bound
ss
ror
pop
shl
repnz
bound
push
call
out
rcl
xchg
sbb
arpl
mov
outs
push
sti
lds
test
xlat
inc
ins
sub
sub
jmp
sbb
jb
inc
aas
jge
mov
scas
xor
repnz
(bad)
aam
fist
call
arpl
cmp
jne
ficomp
mov
push
popf
mov
push
call
mov
stos
mov
ins
jno
test
mov
xchg
push
nop
inc
sub
movs
xchg
cmc
inc
lock
mov
jb
cmps
mov
mov
test
mov
xor
xor
retf
pop
ja
arpl
or
sub
ins
(bad)
ds
xor
or
sbb
(bad)
push
dec
in
movs
xor
xchg
sar
inc
call
xchg
jp
mov
aas
xchg
(bad)
mov
push
in
fadd
(bad)
lods
mov
xchg
jae
mov
fdiv
lods
cdq
inc
ins
xchg
lods
pop
retf
dec
lods
dec
or
(bad)
inc
retf
add
jge
or
arpl
fnstenv
cli
fisubr
fist
fild
cs
push
jl
sbb
pslld
dec
and
xor
movs
cli
ins
sbb
ins
out
fistp
ret
pop
jle
movs
push
loope
test
in
add
rol
stos
mov
test
xor
fst
js
jmp
dec
les
and
jmp
pusha
dec
lods
sub
sti
imul
iret
ds
jmp
push
popa
and
adc
fwait
inc
mov
mov
popa
repz
cmp
aam
adc
ins
sub
das
dec
lock
in
jecxz
xchg
movs
jno
retf
adc
adc
mov
add
xchg
xchg
leave
icebp
push
adc
fbstp
retf
dec
retf
sub
in
push
jne
cmp
sbb
jb
imul
lea
(bad)
jl
bnd
jno
mov
adc
das
popf
add
sbb
mov
arpl
add
and
mov
pop
push
mov
pusha
mov
xchg
js
std
stos
test
lock
je
in
mov
les
out
(bad)
push
jecxz
fdiv
cmp
inc
call
lods
sbb
mov
mov
out
call
inc
jne
xor
xor
cmp
stos
inc
add
mov
cmp
retf
mov
loopne
jno
lods
sub
xchg
les
sub
scas
cli
stos
fnstenv
add
movs
rol
dec
add
iret
cmp
aaa
hlt
icebp
into
inc
clc
push
dec
or
cmps
push
jge
test
push
jae
(bad)
mov
add
clc
pop
or
into
cmp
das
popf
add
jp
mov
inc
call
loopne
movs
xor
jmp
retf
inc
addr16
jp
mov
dec
mov
xchg
imul
mul
sbb
cmp
lea
xor
jecxz
in
lock
adc
cmps
inc
(bad)
pop
fisttp
fist
inc
je
jle
ins
push
mov
fnstsw
dec
adc
and
ds
and
pop
into
arpl
push
daa
test
mov
jl
stc
in
mov
jg
mov
dec
loope
xchg
cld
inc
and
repz
xchg
push
xchg
nop
mov
adc
jmp
scas
dec
idiv
xor
cs
repz
cdq
cmp
sbb
sbb
out
mov
stc
cli
or
lock
inc
or
sub
ins
jmp
push
outs
mov
mov
adc
xor
jbe
mov
jp
in
loope
xchg
and
std
mov
movs
(bad)
leave
adc
mov
cmp
cli
adc
mov
das
sbb
(bad)
(bad)
sub
aaa
pop
lods
cs
pop
mov
add
ret
test
jmp
sbb
sub
pusha
fwait
aas
nop
jbe
imul
sub
cmps
mov
cld
cld
mov
sahf
fst
inc
jae
test
cmp
repnz
push
and
rol
mov
pop
in
(bad)
stos
xor
(bad)
pushf
out
mov
jp
cwde
mov
div
inc
push
inc
mov
ret
jns
xor
pop
push
or
mov
mov
in
or
pop
sbb
adc
push
imul
add
addr16
test
inc
scas
xor
xchg
cdq
mov
popf
xlat
xchg
btc
jbe
dec
jne
mov
mov
jl
mov
sub
repnz
jnp
mov
sbb
loopne
mov
daa
stc
repnz
mov
mov
aaa
cs
mov
and
push
pop
cmp
cmp
lahf
jne
jge
les
ins
cdq
fistp
mov
xor
inc
sub
adc
adc
pop
xor
add
and
stos
mov
neg
push
fimul
mov
dec
xchg
repnz
jb
iret
aad
add
push
add
mov
add
pop
dec
jmp
cmp
ret
jmp
fst
jne
es
add
stos
mov
sub
mov
ret
fistp
jne
(bad)
sbb
ja
sbb
ins
or
jne
and
fnstenv
dec
jbe
mov
dec
xchg
mov
dec
call
shl
cmps
mov
gs
movs
mov
cld
les
mov
xor
ja
adc
clc
repz
push
jl
scas
cmp
js
sub
xchg
into
push
sub
pop
call
jo
push
or
pop
sub
and
imul
xor
lahf
sbb
push
gs
cld
mov
mov
andps
arpl
int3
xchg
push
xchg
stos
push
dec
mov
and
pusha
and
int
sahf
ins
jg
test
(bad)
loop
inc
retf
and
out
aad
push
jge
sbb
lods
push
fwait
xor
clc
inc
out
nop
sbb
ret
data16
or
sbb
outs
dec
mov
pusha
xchg
mov
(bad)
es
xchg
jge
sbb
mov
mov
cmps
jl
in
xor
mov
or
adc
fsub
dec
test
jmp
stc
ret
push
in
sbb
sbb
or
xchg
xchg
(bad)
cwde
and
mov
inc
ins
bound
fbstp
push
jge
and
ss
mov
add
or
fsub
add
jo
mov
pusha
xchg
loope
jbe
adc
out
ins
mov
bound
xchg
mul
into
repnz
repz
push
pop
int
cmp
enter
call
xchg
jne
cmp
gs
call
jnp
rcr
and
pop
ins
dec
imul
xchg
adc
add
mov
stc
cmp
add
aad
cmp
je
fnstsw
movs
aad
mov
cld
push
add
cli
mov
(bad)
mov
test
adc
cmc
lock
lock
ins
sahf
fwait
dec
(bad)
pop
call
hlt
retf
inc
jae
pop
mov
js
jge
test
add
jmp
inc
gs
pop
sub
add
arpl
inc
cmps
xor
aaa
and
dec
mov
inc
daa
lea
and
dec
xchg
and
rcr
xchg
gs
mov
aaa
xlat
repnz
mov
cmp
or
(bad)
retf
jnp
aaa
push
add
ins
pop
push
push
sbb
(bad)
jmp
sar
inc
push
in
or
pop
or
popa
mov
pop
xchg
movs
cli
or
and
in
xchg
adc
sbb
pop
retf
pop
or
popa
dec
stc
shl
mov
ja
mov
mov
pop
(bad)
sbb
cmp
mov
data16
push
bound
aaa
aaa
jle
mov
mov
loopne
add
cld
pop
jge
push
fist
sbb
addr16
mov
stos
jge
mov
loope
or
dec
ret
cmp
dec
pop
mov
inc
stos
repnz
sbb
mov
lock
mov
fcmovnb
sub
mov
xor
repz
mov
inc
test
aaa
(bad)
cli
enter
jae
push
outs
dec
dec
xchg
ins
popf
mov
cwde
sub
call
cwde
mul
or
fs
sbb
ds
push
mov
loope
pop
ss
neg
mov
or
aad
je
test
mov
cmps
jne
sbb
out
xchg
loope
ror
ins
dec
mov
fcos
clc
ret
outs
fwait
(bad)
xor
imul
fadd
daa
inc
pop
pop
mov
inc
es
pop
add
stos
mov
xor
movs
call
imul
or
pop
test
fisubr
mov
std
or
fs
stos
xchg
shl
dec
jo
test
mov
inc
mov
xor
mov
mov
inc
inc
test
jmp
inc
loopne
movs
retf
jne
popf
inc
fidivr
das
sbb
loope
bnd
inc
inc
fs
stos
xor
push
jnp
mov
enter
pop
enter
inc
aas
mov
sub
sbb
retf
lea
pop
aam
xchg
aaa
mov
pop
jbe
das
(bad)
mov
mov
(bad)
cwde
pop
xor
(bad)
add
ins
repz
xchg
mov
rcl
out
fmul
dec
aam
aaa
sbb
rcr
pop
in
inc
push
jnp
pushf
adc
pop
lahf
push
add
cmp
or
out
and
bound
or
jg
ficomp
movs
adc
in
mov
add
gs
scas
xchg
inc
call
mov
xor
out
push
rcl
aaa
mul
or
lods
mov
loope
retf
ins
mov
inc
out
int3
sub
cs
fldcw
loopne
jle
inc
cmp
or
fwait
int
sub
jo
aam
jo
xor
inc
push
add
adc
jl
mov
inc
nop
xlat
mov
dec
and
mov
xor
jns
pushf
pop
cli
add
jmp
sub
dec
lea
data16
mov
and
stc
sti
scas
int3
jmp
push
fwait
mov
cmp
neg
push
loope
jo
dec
stos
sub
xchg
inc
cmp
cwde
add
cmps
push
dec
mov
push
ja
xor
cmp
pop
mov
fistp
stos
pop
xor
cmp
(bad)
xchg
cmp
ins
jbe
lds
mov
and
fld
mov
ja
mov
push
add
leave
sbb
stos
inc
lea
in
das
pop
ds
fist
dec
jne
pop
les
gs
mov
mov
xchg
mov
fdivrp
and
xor
or
jne
adc
and
mov
push
popf
mov
adc
and
out
mov
fisub
popa
popf
pop
neg
test
xchg
pop
mov
pop
dec
clc
mov
test
mov
mov
icebp
repnz
int3
rcr
mov
push
jecxz
fisttp
sub
mov
and
cmp
inc
cs
les
push
jmp
imul
loop
mov
(bad)
or
fwait
mov
inc
out
into
movs
inc
mov
push
jl
push
(bad)
fs
fs
in
push
fcmovnbe
lods
add
sbb
lods
test
ja
mov
cmc
mov
repz
pusha
fwait
mov
ds
xor
jle
xor
cli
inc
aas
dec
lahf
mov
mov
sti
stc
and
int
sbb
push
mov
imul
xchg
mov
dec
fisub
pop
loop
jo
xor
lock
pushf
mov
push
dec
xchg
sti
jmp
mov
sti
mov
fcomp
jmp
pop
ret
jae
dec
cs
cli
dec
and
xor
imul
fwait
mov
int3
push
inc
mov
sti
xchg
fist
mov
xor
add
fwait
push
lea
cli
sbb
push
inc
mov
inc
popf
movs
mov
push
ror
and
cmp
mov
pop
inc
stos
or
add
mov
cmp
cli
xchg
in
rep
mov
inc
clc
push
aaa
cs
enter
jb
push
es
xchg
push
xchg
mov
scas
dec
jmp
inc
aas
fiadd
sbb
and
pop
fistp
test
xor
sbb
push
ins
enter
mov
jne
stos
pop
icebp
mov
dec
call
or
rcl
test
jp
mov
push
adc
out
in
dec
fwait
mov
ds
stc
fcom
xor
sbb
mov
pushf
mov
mov
call
je
jns
int
adc
ss
jbe
sbb
adc
mov
xor
inc
call
sti
sbb
rol
pop
idiv
xchg
jnp
push
(bad)
jmp
popa
lea
ret
shl
jmp
inc
dec
loop
iret
cmp
adc
cmp
aaa
sbb
movs
dec
pop
popa
(bad)
xchg
lds
jmp
je
jno
out
push
jne
push
add
cmp
mov
sbb
pop
call
mov
push
fsubr
mov
xchg
xchg
xor
ror
test
sbb
aaa
sar
test
fisub
adc
sub
inc
cmp
enter
iret
add
pop
cmps
jno
jb
push
or
stos
fwait
xor
iret
jg
xchg
aas
fisttp
in
adc
pop
mov
test
sbb
mov
dec
and
xchg
lods
idiv
push
neg
fbld
pushf
shl
and
push
aaa
mov
and
jle
mov
jmp
inc
ss
fcomp
pop
pop
sub
sbb
popa
test
les
add
call
(bad)
sbb
js
addr16
pop
mov
shr
mov
or
mov
dec
jmp
xchg
and
sbb
jp
pop
out
fisttp
xchg
dec
call
rcl
mov
sbb
mov
std
jecxz
out
jecxz
je
aad
out
scas
xor
push
(bad)
dec
inc
icebp
inc
pop
or
pop
inc
jns
mov
xchg
es
fcom
xchg
clc
ins
sbb
pop
sub
adc
ins
pop
mov
push
popf
aad
jno
or
repnz
dec
sbb
inc
lahf
ja
mov
mov
sub
mov
movs
popf
scas
mov
sub
cmps
mov
neg
dec
je
mov
dec
out
stc
fistp
inc
jo
dec
fmul
pop
mov
es
ss
outs
int3
cli
addr16
xor
jle
cmp
jge
mov
inc
add
mov
sub
push
and
clc
xchg
adc
jg
popf
push
test
inc
loopne
ja
test
stos
adc
out
sbb
and
test
pushf
mov
sub
enter
imul
xchg
sbb
inc
mov
fst
mov
push
call
adc
cmp
jl
sbb
movs
jae
mov
ja
movs
movs
cmp
add
(bad)
xchg
xor
outs
pop
push
cmp
les
and
(bad)
scas
and
movs
sti
mov
mov
fcomi
mov
xchg
fmul
push
dec
sub
cld
fist
ss
inc
test
jge
mov
imul
cli
add
xor
pop
add
cmp
mov
push
popf
cmps
mov
aas
sub
adc
sub
loopne
xchg
mov
xor
imul
mov
xor
retf
outs
mov
inc
jecxz
(bad)
fild
sbb
dec
scas
add
jo
pop
cs
and
jmp
jl
cmp
add
mov
sub
fs
scas
pop
xor
sbb
mov
push
jge
scas
xchg
aas
enter
jne
inc
sar
loopne
xchg
std
xchg
jbe
movs
js
in
retf
hlt
outs
mov
and
in
pushf
ss
aad
mov
les
inc
mov
mul
repz
jo
lods
addr16
sub
movs
iret
xchg
adc
retf
jbe
in
add
cmps
cmp
xchg
aaa
mov
test
xor
add
ins
test
mov
out
jle
test
ins
xchg
mov
pop
or
(bad)
icebp
adc
ins
xchg
(bad)
cmps
fs
mov
repz
ror
(bad)
fisub
mov
clc
push
add
(bad)
enter
js
jge
imul
fwait
lods
mov
sub
pop
in
dec
(bad)
inc
push
jge
int
or
add
or
push
pusha
mov
add
cmp
fsub
lods
jmp
jl
inc
mov
test
cmc
in
push
out
retf
test
xchg
jg
pushf
fcmove
push
mov
mov
xchg
mul
popf
xor
lock
dec
(bad)
fsubr
push
inc
cmp
cmp
mov
jp
xchg
cwde
mov
int
jmp
imul
adc
shl
mov
scas
sub
add
cwde
adc
gs
mov
mov
mov
in
pop
cmp
fisttp
cmps
mov
pop
xchg
mov
push
xor
ror
xchg
mov
cmp
cli
(bad)
jnp
adc
dec
ficomp
pop
pusha
mov
imul
(bad)
jle
jmp
movs
call
push
sbb
and
fisubr
xchg
stos
dec
push
xchg
test
ror
xor
pop
jae
(bad)
xlat
jae
retf
xchg
xchg
add
lds
mov
addr16
xchg
sbb
call
sub
lock
shl
pusha
js
inc
cs
mov
mov
std
cld
add
(bad)
add
icebp
sub
mov
inc
sahf
test
xor
dec
out
fild
test
push
pop
mov
jnp
les
and
(bad)
icebp
push
ret
imul
mov
push
sbb
icebp
lea
xchg
pop
into
ds
sti
jp
cmp
dec
xchg
jge
(bad)
xor
push
mov
mov
pop
sti
shr
cmp
push
jb
ror
push
or
pop
pusha
mov
pop
xchg
mov
push
sti
fstp
fiadd
pusha
call
(bad)
jmp
bswap
retf
in
mov
add
js
in
cld
cmps
mov
ins
dec
mov
sbb
push
fist
adc
inc
xchg
pop
push
jnp
inc
add
retf
int
sub
cli
cmps
loope
or
fld
jo
and
jo
mov
mov
mov
xor
sti
jmp
add
jbe
cdq
jp
mov
cmps
fs
push
and
(bad)
add
mov
push
xchg
fadd
xchg
mov
cmp
dec
jecxz
fisub
dec
stos
or
inc
dec
xchg
into
scas
sub
call
leave
mov
inc
mov
xor
or
test
sbb
xchg
icebp
xchg
ds
jl
dec
push
jbe
push
xor
adc
mov
daa
xchg
idiv
cmps
scas
loop
mov
mov
adc
sar
jmp
lods
dec
add
and
pop
jp
outs
fsub
je
push
xchg
(bad)
sub
fsub
sti
push
pusha
pop
aas
jmp
sub
inc
xchg
ror
nop
retf
xor
cmp
(bad)
push
loope
jbe
mov
mov
cmps
inc
xchg
nop
jb
(bad)
xchg
push
hlt
pop
cdq
mov
jae
mov
aas
cs
out
mov
jnp
out
call
sub
cli
std
sub
pop
pop
pop
push
shr
push
mov
dec
lods
mov
fidivr
or
inc
retf
or
pop
mov
lods
push
xor
mov
std
aam
pop
mov
jb
pop
jbe
test
(bad)
mov
xchg
mov
xchg
push
xor
pop
ja
call
iret
icebp
dec
imul
int
int3
and
data16
cmp
inc
cmp
fwait
cmp
cmp
add
cmp
pop
data16
adc
mov
push
mov
dec
xlat
jg
inc
lea
(bad)
fstp
loope
jae
pushf
pop
pop
mov
xor
fs
sub
in
retf
fwait
cmps
xor
sub
push
in
xor
dec
ficomp
push
sti
inc
aas
jge
ret
cmp
fild
clc
add
add
inc
sub
sbb
push
scas
sub
mov
push
fsubr
mov
xor
pop
mov
cmc
mov
push
out
xchg
(bad)
(bad)
mov
sahf
mov
sub
push
pushf
test
add
fincstp
cmps
cld
clc
ins
dec
mov
cmp
es
fstp
xor
cmp
inc
add
xchg
ror
(bad)
rcr
mov
aaa
cmps
xor
jno
scas
sub
jg
movs
cmp
mov
xor
clc
xchg
cmp
jge
mov
xor
call
ss
stos
lods
add
inc
xchg
xchg
shr
sub
mov
inc
into
repnz
inc
pop
fwait
(bad)
xor
push
not
cmp
clc
(bad)
in
jl
adc
dec
test
ins
pop
mov
pusha
lahf
xchg
mov
pop
in
xchg
add
fbstp
pop
push
jmp
sub
jbe
mov
jnp
sahf
jg
mov
jle
cmps
inc
inc
or
in
mov
hlt
pop
sbb
xor
(bad)
cmps
data16
xchg
popa
dec
(bad)
(bad)
std
cmp
jle
lea
inc
popf
call
in
xchg
lods
movs
jne
jnp
cmp
cmp
rcl
sub
or
push
push
dec
clc
jns
pop
out
call
cli
or
bnd
add
jb
jl
lea
fcomp
mov
jae
lods
neg
aaa
push
jae
fisubr
sti
jns
pop
popf
pop
lds
xchg
fs
inc
and
mul
mov
outs
outs
test
out
aam
arpl
movs
inc
xchg
jp
pop
cmp
(bad)
xlat
push
fimul
push
jnp
movs
jno
jae
sub
sar
shl
and
in
pop
fs
fs
jnp
sar
cmps
sub
mov
cmp
cmc
mov
cli
sbb
lds
repz
aas
pushf
in
loopne
jmp
rol
mov
jno
movs
xchg
ds
(bad)
sub
scas
gs
jb
cmp
std
sub
aaa
jle
dec
mov
arpl
inc
sub
mov
jmp
jl
(bad)
pop
pop
jo
js
sub
sub
inc
inc
(bad)
or
mov
call
retf
push
repz
leave
pop
adc
push
rcl
cmp
adc
aaa
popf
push
popf
test
movs
std
fild
lahf
test
jae
or
xchg
lods
inc
ret
or
mov
bound
jbe
cmps
mov
pop
icebp
jmp
mov
popa
adc
xor
add
and
dec
jo
inc
cmp
mov
fsubr
xchg
inc
mov
jno
outs
inc
push
adc
(bad)
sub
test
xchg
imul
gs
mov
(bad)
push
dec
icebp
(bad)
mov
fwait
lods
inc
out
sti
sub
dec
fcomp
repz
add
or
push
sahf
inc
push
push
or
fisub
fsubr
mov
cmp
pop
sub
xor
outs
push
push
aas
lahf
adc
cmps
sub
pop
fcom
mov
retf
div
jns
push
fistp
mov
xchg
push
xchg
xchg
jle
rcl
mov
in
xchg
(bad)
mov
dec
mov
xchg
scas
loop
outs
sahf
call
cs
std
and
xor
or
ins
mov
(bad)
mov
rcr
shr
xchg
push
pop
inc
pop
fistp
sub
sbb
outs
outs
sahf
adc
call
jmp
mov
mov
jnp
mov
jl
in
xchg
icebp
cmc
mov
xchg
jb
test
adc
aam
sbb
dec
push
cdq
mov
cmp
nop
mov
cmp
not
dec
movs
xchg
retf
mov
(bad)
sar
xchg
std
dec
inc
jnp
hlt
pop
adc
das
xchg
xor
and
test
and
fs
mov
(bad)
push
mov
jp
shl
or
(bad)
push
jmp
xchg
cli
scas
div
test
popf
test
xor
jmp
inc
outs
xchg
mov
cmp
fdiv
cs
sub
ficomp
gs
aaa
push
dec
xchg
cmps
lods
xor
fimul
inc
test
fs
pusha
add
xor
adc
(bad)
sbb
fisttp
mov
test
xor
pop
cld
lods
mov
(bad)
pop
jae
pushf
jne
xchg
(bad)
dec
adc
fs
in
push
out
add
jecxz
xchg
dec
std
lock
imul
ds
ja
cmp
inc
dec
jae
push
les
cmp
jbe
push
push
push
bnd
iret
aas
mov
xor
and
pop
or
nop
pop
mov
xchg
movs
push
outs
jmp
mov
fsubr
popf
aaa
mov
jnp
mov
push
mov
mov
xchg
xchg
pop
adc
xchg
push
adc
mov
add
xchg
pusha
jecxz
fstp
sbb
cld
(bad)
into
xor
or
mov
mov
mov
push
enter
jl
xor
inc
fadd
jge
and
inc
push
adc
stos
loope
sbb
(bad)
out
cmps
inc
sar
icebp
sbb
test
call
sub
shr
sbb
mov
shl
jmp
ret
cmp
inc
dec
into
dec
fnstsw
jne
pop
mov
aaa
push
popa
xchg
jmp
ror
je
inc
leave
pop
adc
add
pop
out
fs
lea
push
push
jmp
mov
popf
jmp
inc
(bad)
pop
ins
pop
rcl
xchg
loopne
loop
loop
loopne
inc
push
repnz
shl
sbb
xchg
inc
(bad)
rcr
lea
aaa
push
cs
in
fnstcw
xor
fstp
inc
push
xor
mov
call
(bad)
adc
clc
pcmpgtb
in
pop
jae
add
pop
pusha
test
mov
jl
nop
test
jmp
fld
pop
rcr
(bad)
out
in
mov
or
rcr
xchg
or
mov
cwde
bound
mov
lock
(bad)
mov
cld
dec
push
fwait
lods
inc
icebp
push
cli
(bad)
mov
push
dec
stos
cmp
mov
add
mov
cwde
sbb
leave
ins
out
and
inc
pop
int
push
jp
and
sbb
lea
cmp
sahf
fstp
jecxz
inc
enter
jae
xchg
outs
retf
cmp
sahf
imul
cmps
aad
mov
mov
stc
leave
lock
cdq
cmp
lahf
cmps
dec
nop
dec
iret
dec
push
sub
mov
ja
push
jae
dec
mov
inc
add
xchg
(bad)
mov
out
jo
(bad)
jbe
bound
shl
add
pop
mov
xchg
and
add
neg
inc
add
xchg
pop
mov
inc
fnstsw
jb
inc
aad
mov
cmp
cmc
repz
call
leave
or
mov
movs
iret
sbb
fadd
push
rcl
fcom
es
inc
mov
sbb
or
test
inc
jmp
push
je
or
dec
xor
cs
mov
cmc
sbb
push
mov
daa
out
into
movs
push
cwde
test
push
lea
mov
dec
mov
out
or
rcl
xchg
push
mov
mov
sub
mov
and
fild
xor
ss
gs
inc
pop
scas
popf
mov
cmp
xlat
dec
out
(bad)
sbb
inc
jmp
cmp
(bad)
cmps
sbb
xchg
mov
xchg
cmc
mov
les
push
(bad)
mov
xchg
pusha
in
dec
cmp
stos
test
icebp
sbb
jg
and
out
ficomp
push
xchg
js
es
push
(bad)
cmp
jp
sbb
cmp
mov
cs
push
jmp
inc
and
cmp
fwait
cmp
sub
(bad)
cmps
or
(bad)
aaa
mov
pop
cld
pop
jns
mov
push
cmps
shl
xchg
xchg
inc
xor
repnz
mov
gs
mov
les
lea
in
xor
not
jo
dec
test
pop
push
lea
adc
ds
inc
sti
ror
repz
or
retf
pusha
add
loop
lods
push
stc
outs
(bad)
cmps
sub
mov
pop
fdiv
sbb
pop
enter
out
xchg
push
loope
add
cli
(bad)
mov
call
out
mov
es
pushf
out
lods
fsub
outs
lods
lods
inc
enter
and
xchg
xchg
aad
into
push
dec
sub
aas
dec
pop
mov
sub
mov
ficomp
(bad)
jl
(bad)
inc
fs
and
pop
push
inc
add
sub
ins
dec
mov
inc
xchg
xlat
mov
imul
cwde
inc
mov
jbe
test
cli
mov
jl
xlat
cmps
addr16
fwait
jne
std
clc
mov
movs
mov
or
test
sar
fld
ins
jg
scas
jb
dec
cld
ds
pop
fidiv
jo
dec
scas
push
jp
lea
ins
mov
fild
mov
call
or
je
push
mov
mov
ficom
xchg
jns
sar
bound
cmp
mov
cwde
(bad)
sbb
adc
repz
retf
inc
mov
sti
jno
loope
daa
out
xchg
sti
push
lock
pop
jl
mov
add
jecxz
push
pop
in
pop
es
inc
cs
pop
cmps
sbb
lea
ds
mov
mov
test
jae
fidiv
or
das
iret
aas
jmp
sub
sbb
push
ins
jmp
jecxz
je
lea
xchg
shl
fst
daa
retf
sar
sub
lods
stos
or
inc
fs
mov
cmp
loop
retf
shl
mov
cmc
dec
inc
dec
shl
fild
es
aaa
dec
stos
pop
imul
cs
xchg
mov
mov
adc
xor
pop
add
cwde
or
fist
mov
pushf
pop
aaa
push
dec
out
lahf
pop
lods
mov
inc
push
push
lea
cmps
leave
inc
xchg
jmp
std
(bad)
pushf
aaa
jecxz
sbb
add
fsub
aam
jecxz
fist
sub
mov
push
dec
mov
pop
sub
ret
imul
repnz
mov
xor
and
sahf
add
push
add
mov
aaa
pop
dec
fsubr
mov
mov
jl
movs
jnp
fcomp
push
mov
push
dec
in
mov
rcr
movs
mov
add
push
aas
into
cld
neg
shl
dec
fdiv
movntps
and
les
je
sub
pop
scas
ror
fwait
bnd
clc
add
dec
cmps
push
ja
das
adc
inc
or
pop
popf
movs
xchg
and
jmp
pop
loop
jbe
mov
pusha
mov
mov
mov
xchg
imul
mov
bound
in
test
scas
ror
lods
xor
dec
clc
das
pop
sub
(bad)
mov
xchg
push
inc
or
adc
jne
cs
dec
xchg
mov
cdq
push
sub
pop
sti
lea
ret
jno
inc
mov
sbb
xor
jmp
sub
xor
dec
jno
aam
adc
jle
rcl
cld
inc
jecxz
adc
mov
repz
jb
ret
stos
adc
std
mov
jnp
test
nop
imul
or
in
repz
int
pop
sub
mov
dec
cmp
push
sbb
fisttp
inc
fwait
sar
sahf
xchg
pop
adc
or
adc
and
add
sahf
cmps
cmps
or
and
jmp
leave
sbb
push
stos
pop
icebp
xchg
leave
cmp
mov
sub
push
sbb
add
and
xchg
fiadd
inc
xchg
sub
xor
inc
call
xchg
outs
das
lods
push
sbb
test
push
icebp
sbb
xchg
sbb
pop
pop
loop
and
jge
mov
lods
imul
addr16
adc
(bad)
sbb
push
dec
fxtract
sti
adc
not
push
inc
inc
test
inc
xchg
int
lock
std
loope
push
retf
push
movs
not
jb
movs
test
xor
aad
push
jp
cmp
push
call
mov
inc
and
mov
retf
cmp
bnd
clc
push
push
pop
add
and
mov
jns
mov
push
lahf
xlat
sahf
xor
stc
xchg
xor
popa
pop
inc
mov
pusha
mov
cmps
dec
mov
out
sub
adc
mov
gs
mov
add
dec
mov
push
sub
ds
pop
push
daa
dec
test
outs
jnp
inc
sub
mov
stc
push
std
sbb
add
sbb
add
popa
test
(bad)
cmp
pop
pusha
mov
push
mov
mov
jmp
fisub
push
movs
jb
mov
inc
xchg
mov
inc
adc
sbb
std
les
xchg
stc
nop
stc
lds
fwait
test
cmc
pop
std
dec
inc
push
(bad)
hlt
inc
rcr
add
ss
daa
cdq
sub
add
mov
clc
jg
nop
cs
jbe
jae
in
or
imul
pop
fild
test
or
movs
xor
or
icebp
out
xchg
aad
aad
jns
(bad)
jo
lds
fs
inc
and
movs
pop
cli
push
movs
loope
sar
dec
ja
mov
adc
pushf
xchg
in
(bad)
xchg
lahf
pop
mov
push
cs
div
xchg
es
aaa
pop
stos
pop
sbb
dec
pop
pusha
mov
mov
fucomi
aas
mov
jno
fs
xor
jae
xor
imul
push
pop
stos
or
cmp
(bad)
aaa
mov
jge
inc
jle
test
test
pusha
sub
push
mov
mov
xchg
stos
lock
xchg
jl
xchg
ret
scas
fcmovbe
cmp
cmc
aam
xchg
pop
fdiv
sbb
(bad)
stos
jp
xor
jne
cmp
push
cmp
cwde
xor
(bad)
jg
sti
bound
or
and
pop
add
adc
outs
xor
lahf
sbb
and
jmp
and
add
pop
out
mov
not
and
ror
mov
inc
sbb
(bad)
retf
sub
es
sahf
fild
fsubr
sub
(bad)
fsub
pop
inc
pusha
dec
mov
jge
mov
sub
mov
mul
xchg
arpl
aaa
fnstenv
push
arpl
add
fcom
scas
dec
dec
retf
lods
into
movs
xor
iret
test
mov
inc
push
adc
dec
xor
add
fcmovb
cmp
mov
out
std
mov
ins
mov
inc
fisttp
inc
push
xlat
test
addr16
pop
jl
imul
inc
jns
fwait
scas
stos
dec
inc
stos
jle
cli
cmp
add
inc
jae
imul
popf
pop
jmp
xor
cmp
jns
fadd
jecxz
sbb
ins
mul
xchg
jg
mov
mov
lea
rep
fdivr
adc
pop
push
mov
fyl2xp1
test
out
ins
xchg
test
int
fisttp
add
cld
inc
sbb
xor
es
mov
push
cmps
sbb
std
cmp
cmp
add
outs
fcomp
retf
xchg
mov
and
mov
add
dec
lea
mov
add
imul
iret
jg
lahf
popf
repnz
xchg
imul
sbb
loop
or
pop
sbb
xchg
lea
scas
cmp
sub
(bad)
fcom
xor
fidiv
jnp
ins
inc
push
icebp
fwait
mov
sub
cmps
dec
les
ja
add
inc
add
je
test
mov
(bad)
pop
or
jb
(bad)
sbb
inc
xchg
aad
jmp
mov
dec
mov
xchg
push
and
std
adc
mov
das
(bad)
pop
pop
in
cld
push
sub
(bad)
not
shr
mov
fcom
clc
icebp
loopne
into
aaa
popa
cmp
or
push
sahf
aaa
sub
mov
popf
cli
les
lds
adc
adc
ins
pop
mov
jl
sub
out
in
shr
std
jbe
push
movs
jne
into
xlat
popa
(bad)
in
loopne
in
mov
lea
test
sbb
test
add
cld
icebp
std
shl
jmp
retf
sbb
sbb
in
fistp
adc
pop
jns
mov
mov
cdq
or
jnp
nop
addr16
jecxz
jo
and
ss
add
jge
scas
pop
pop
retf
xchg
mov
sbb
out
retf
jecxz
arpl
(bad)
loop
loopne
jbe
in
cli
mov
test
pop
in
(bad)
stos
add
loope
xchg
test
cmp
div
enter
ja
inc
stos
aaa
jle
mov
mov
adc
(bad)
into
dec
fs
or
inc
cmovs
and
pop
jb
jge
mov
addr16
test
and
xchg
ds
jb
jge
push
lea
xchg
fst
rcl
in
aam
add
ja
xchg
stos
fisubr
mov
repnz
repnz
xchg
xchg
scas
xor
jb
aaa
sub
fdivr
fisub
es
sbb
jo
imul
out
fwait
test
xor
nop
cs
arpl
add
add
mov
mov
push
xchg
mov
inc
fstp
xchg
xor
bound
aad
aad
test
pushf
arpl
xchg
in
jns
movs
test
adc
cwde
mov
aam
dec
arpl
cs
pop
retf
sbb
fcomp
outs
inc
mov
jns
test
push
test
or
cmp
adc
pop
mov
shr
cmp
lods
test
call
repnz
push
push
test
aas
xchg
rcr
(bad)
rol
sahf
sar
push
adc
repnz
xchg
test
jecxz
fidivr
pop
sbb
enter
cmp
dec
mov
outs
and
mov
xchg
sbb
jmp
jae
rcl
fs
out
das
mov
stos
jg
nop
cmp
(bad)
bound
sub
fwait
add
jbe
movs
ins
les
sub
jb
inc
xchg
xchg
adc
aas
lods
push
jge
fwait
xchg
adc
cld
fadd
lods
inc
lds
iret
(bad)
out
addr16
add
dec
fist
ins
push
test
sub
mov
or
inc
out
ret
repz
pop
cmp
pop
and
add
push
ret
mov
je
cmps
cmp
int3
add
inc
pusha
and
and
test
or
lea
or
fdivr
xchg
mov
xor
cld
mov
mov
cmp
test
in
in
cmp
dec
or
mov
inc
pop
jno
mov
rol
cli
or
xor
xor
pop
push
adc
push
push
fild
xor
mov
test
dec
(bad)
xchg
add
test
push
xchg
enter
xchg
add
std
stos
test
les
xchg
mov
std
xchg
fsub
cmp
retf
ins
fisttp
add
cld
cmp
jg
mov
cmp
jne
fwait
xchg
jmp
jae
fmul
or
or
pop
(bad)
imul
mov
movs
cmp
and
enter
ret
inc
sbb
popf
pop
retf
mov
popa
jmp
test
mov
pop
pop
sar
mov
cmps
pop
ss
stos
data16
mul
xchg
aad
inc
ins
xchg
lahf
inc
lea
adc
push
fucomip
fistp
inc
push
push
dec
fist
jl
lea
pop
lods
xchg
adc
sbb
pop
mov
adc
arpl
jb
lods
xor
mov
inc
shl
lock
repz
stc
dec
xchg
rcr
imul
movs
xchg
fidivr
out
lock
shl
or
es
loop
inc
fwait
jae
pop
sub
stc
in
fst
sbb
dec
mov
inc
aas
jge
fwait
mov
sbb
fistp
cdq
lock
je
cli
add
pop
imul
mov
mul
pushf
push
or
lahf
outs
aaa
and
sti
not
jmp
pop
fcomp
mov
jns
into
sti
xor
sbb
test
jl
cmps
out
adc
stc
loope
enter
mov
or
sbb
vdivss
adc
dec
pushf
sbb
xchg
xsave
inc
out
add
pop
in
das
push
add
(bad)
or
inc
arpl
jnp
xlat
call
xchg
aaa
mov
add
mov
cmp
loope
push
in
or
mov
xchg
mov
fs
mov
mov
pop
jmp
sub
dec
aaa
sub
fmulp
inc
jmp
imul
fnstcw
dec
bound
mov
scas
ins
out
int3
sbb
cmp
and
or
loop
retf
cmp
pusha
jnp
xor
test
cmp
pop
(bad)
rcl
cmc
outs
jge
mov
movs
xlat
jl
icebp
call
cmp
mov
fadd
cmp
inc
pop
mov
cmc
pusha
inc
int3
mov
shr
inc
dec
fimul
jnp
xor
adc
loope
inc
sub
popa
mov
or
pushf
cmp
xlat
jge
sar
sahf
xchg
add
pop
imul
mov
adc
jnp
test
lods
aaa
pop
mov
jl
fcomp
xchg
pop
stos
pop
loop
repnz
fwait
les
add
mov
hlt
sahf
(bad)
nop
xchg
xchg
(bad)
jns
mov
sti
cmp
cmp
in
add
sbb
jg
inc
add
mov
sub
jo
(bad)
jle
inc
and
pop
or
xor
pop
pusha
xchg
or
into
or
sub
lods
mov
xchg
xchg
add
mov
addr16
mov
jo
mov
cmps
daa
ret
push
xchg
mov
pop
popa
mov
loopne
mov
mov
test
cmp
push
dec
stos
cmovg
push
dec
(bad)
mov
mov
add
cmp
jb
mov
push
pop
mov
xor
xor
test
adc
or
fist
sbb
clc
jge
mov
jb
mov
out
sub
inc
mov
xchg
inc
je
mov
hlt
xchg
stos
jmp
js
call
or
push
push
fisub
jg
outs
stos
push
jns
mov
mov
mov
(bad)
js
cld
push
sbb
push
ja
xor
aas
lods
or
cmp
call
test
or
cmc
pop
add
nop
sub
cmps
loopne
xchg
out
inc
loopne
jg
mov
test
jecxz
xchg
mov
push
arpl
enter
xchg
ja
sub
and
out
and
inc
jne
dec
cmps
ss
mov
nop
cwde
mov
out
sub
jecxz
inc
push
add
inc
sbb
das
mov
test
and
ds
and
(bad)
add
jle
mov
dec
mov
mov
mov
cwde
fdivrp
sbb
sub
jmp
mov
xchg
mov
(bad)
pop
aam
cmp
push
jecxz
pop
pop
dec
movs
ss
push
test
aas
add
les
jg
(bad)
or
add
inc
xor
add
inc
jne
jno
movs
sub
mov
add
xor
inc
pusha
inc
mov
lock
mov
sar
test
aam
cli
cmp
and
jmp
gs
mov
cld
cmp
icebp
popa
(bad)
cmp
pop
popf
imul
inc
ds
mov
sahf
mov
cs
ror
popa
add
pop
jb
pushf
pop
mov
test
inc
mov
(bad)
xor
and
xchg
and
gs
stos
push
xor
popa
rcl
out
sub
dec
mov
(bad)
ror
pop
sbb
jmp
mov
mov
div
adc
push
lahf
pop
sbb
mov
imul
mov
sub
pop
clc
cli
or
rcl
imul
jno
imul
into
and
lods
(bad)
dec
(bad)
call
aad
inc
fstp
xchg
xlat
jno
mov
adc
add
cmps
pushf
mov
sbb
loop
mov
lahf
jno
pop
fisttp
dec
mov
jne
dec
(bad)
sbb
inc
mov
or
pop
retf
ror
or
imul
out
add
ja
mov
retf
jge
mov
sbb
inc
or
popf
cmps
xchg
test
jbe
fwait
dec
rcl
push
call
mov
cli
std
mov
aaa
sub
mov
dec
mov
neg
lock
mov
int3
cmp
ds
in
lods
push
shr
push
dec
lahf
aaa
jns
add
out
mov
aas
sub
arpl
stc
add
pop
inc
cmc
push
cs
sub
pop
stc
arpl
movs
sub
movs
(bad)
outs
popf
call
std
pop
outs
and
ins
jecxz
mov
out
and
in
mov
je
test
cmps
add
(bad)
mov
out
push
push
rcr
je
cmp
arpl
bound
or
and
outs
jmp
or
mov
adc
sbb
mov
push
mov
and
test
retf
popa
jl
test
push
ins
loop
jbe
out
movs
and
sbb
rcl
mov
test
fisttp
lods
cdq
cmp
dec
fisttp
sub
cmc
retf
xchg
inc
sbb
and
cs
push
xor
iret
jg
hlt
jo
mov
pop
and
jne
mov
lods
aas
std
outs
sbb
je
lods
xchg
xor
xchg
xlat
out
scas
mov
aad
jnp
(bad)
dec
aam
repnz
jmp
xchg
jno
sti
fild
mov
popf
test
bound
fcmovu
xchg
cwde
inc
xchg
push
repz
sti
fstp
inc
jne
jp
pop
add
inc
daa
push
xchg
xchg
fwait
xchg
sub
fmul
int
xchg
retf
jno
enter
push
cmp
sub
mov
pop
call
shl
sti
pop
je
mov
pop
xchg
cld
sti
inc
aam
add
std
ret
mov
int
mov
mov
mov
daa
mov
xchg
stos
mov
xchg
stos
inc
aad
int
push
dec
div
mov
ret
sbb
pop
mov
push
pop
jno
mov
jmp
mov
cmp
push
ja
pop
arpl
jns
xor
cmp
xor
and
xchg
add
pop
jae
stos
push
hlt
mov
dec
mov
xchg
pusha
es
(bad)
mov
out
outs
sbb
pusha
loopne
add
fdivr
add
cwde
inc
out
fnstcw
sub
data16
jne
pop
mov
push
and
mov
int3
out
or
or
adc
and
add
jg
movs
cmp
mov
dec
(bad)
xor
push
stos
pop
aad
lock
data16
je
mov
stos
jb
cmp
test
jl
mov
adc
test
stos
ficom
add
cmp
pop
ret
add
sub
sbb
dec
add
push
fbld
fisttp
pop
inc
leave
and
jo
adc
daa
retf
imul
scas
or
stos
mov
cmp
iret
test
lods
std
or
ins
jns
test
js
int3
xchg
imul
jbe
not
mov
ins
or
lea
das
shl
sbb
scas
push
not
adc
(bad)
fsubr
pop
jo
dec
sub
mov
cs
mov
test
test
cmp
sbb
pop
mov
sbb
ins
je
push
pop
into
push
inc
lea
xor
(bad)
repnz
jbe
fldcw
xchg
lds
mov
jno
cld
add
shl
mov
repnz
xchg
mov
mov
jmp
xor
popf
cmp
mov
pop
sti
sub
repz
fild
jb
fs
push
lds
test
sub
pop
pop
out
push
pop
mov
ret
xchg
sbb
xor
call
jecxz
sbb
xor
in
outs
lds
xchg
addr16
stos
fnstcw
mov
aam
fcmovb
cmp
mov
aad
into
or
dec
cmp
and
dec
mov
jnp
dec
icebp
movs
cwde
xchg
adc
addr16
gs
daa
cmp
inc
nop
jbe
outs
dec
mov
jo
into
call
aas
push
xor
retf
mov
jb
ins
jb
xchg
mov
cmps
jg
mov
xor
jg
lea
jnp
xchg
cmc
add
shl
clc
leave
cld
cmp
mov
imul
and
int
popa
in
push
jnp
mov
sbb
popf
push
push
icebp
(bad)
les
cli
rcr
pop
cmp
sbb
push
jno
mov
xchg
imul
popf
(bad)
shl
aad
sbb
arpl
fadd
pop
out
loope
repz
jb
fcmovnbe
mov
mov
scas
push
adc
cmp
jmp
cmp
xchg
dec
hlt
jnp
xor
jle
xor
sbb
pop
mov
fwait
int
cmp
xor
push
mov
ss
xchg
adc
xor
sbb
imul
mov
test
dec
repz
push
xchg
les
and
icebp
mov
rcr
mov
push
pop
sub
jle
mov
fdiv
ds
aad
jmp
jne
pop
test
and
mov
xor
fisttp
fmul
mov
sbb
add
inc
pop
inc
add
add
arpl
dec
xor
dec
arpl
push
dec
shl
cld
inc
arpl
jbe
cmps
clc
jge
in
not
xchg
in
or
inc
popf
mov
js
dec
ins
fwait
scas
inc
repz
fimul
dec
out
(bad)
repz
pop
pop
sbb
packsswb
inc
inc
push
icebp
xchg
call
ror
mov
xor
inc
or
sub
imul
cdq
scas
test
in
fild
repnz
jbe
stos
pop
repz
push
iret
fwait
inc
out
xchg
jle
sar
test
stos
in
pushf
pusha
fs
mov
retf
loopne
dec
lahf
lods
xor
push
xor
push
call
mov
imul
mov
mov
fwait
repnz
xor
xor
sub
adc
adc
jl
cmps
adc
jmp
ss
loop
xchg
xor
data16
push
clc
movs
repnz
in
call
cs
(bad)
sbb
pop
and
xchg
mov
cmp
mov
lods
retf
jg
pop
jp
ds
dec
jmp
add
stos
sbb
mov
mov
mov
popf
xchg
jl
lea
push
and
and
pop
mov
sahf
jl
movs
ss
xchg
mov
inc
retf
aaa
call
or
mov
in
jb
xchg
(bad)
popf
xor
pusha
test
pop
add
xchg
call
(bad)
mov
cmp
dec
in
adc
les
pop
pusha
movs
dec
cs
xchg
mov
push
jmp
fs
enter
sbb
add
ins
fisub
mov
pop
popf
movs
mov
out
loop
mov
push
and
and
mov
xchg
or
ins
test
add
push
xor
ror
sbb
daa
pop
int3
cld
in
pop
fnsave
jae
pop
lods
sbb
sub
scas
mov
retf
cmp
(bad)
and
aam
jne
xor
add
je
cmp
sub
stos
inc
ss
sbb
lods
xlat
cli
pop
xor
dec
xchg
fistp
loop
inc
push
fimul
mov
dec
xchg
out
mov
rcl
jmp
jmp
xchg
mov
adc
mov
pop
add
cmp
jbe
sub
sub
mov
dec
xchg
mov
mov
inc
scas
addr16
rcl
xchg
jbe
je
mov
adc
pop
arpl
xrelease
fisubr
push
out
jns
test
dec
cmps
les
dec
repnz
xchg
aad
or
sbb
std
sbb
test
repnz
fidivr
add
stc
stc
rcr
cs
xor
push
cld
inc
pop
in
xchg
scas
xchg
xor
fnstsw
shl
(bad)
pop
inc
push
ss
xor
popa
sub
pushf
add
lods
jg
shl
addr16
xchg
adc
test
lods
retf
sbb
jnp
push
sar
adc
xchg
add
fidiv
mov
ja
mov
pop
ds
ret
add
(bad)
dec
imul
cmp
(bad)
xlat
and
jge
aaa
jl
mov
xchg
into
stos
adc
jg
hlt
add
mov
je
into
push
sbb
inc
xchg
adc
inc
scas
jge
mov
addr16
add
icebp
mov
cwde
pop
jg
shl
fld
cmps
ins
ficom
nop
adc
pusha
xchg
jle
mov
loope
(bad)
(bad)
aad
dec
mov
div
cmp
call
ds
push
dec
mov
or
xchg
cmps
mov
gs
sbb
pop
pop
mov
ss
mov
mov
aas
scas
xor
pushf
outs
xor
gs
mov
retf
loopne
jge
lea
mov
sub
(bad)
xchg
jp
outs
mov
sbb
test
nop
popa
xor
lock
add
mov
push
cmp
xchg
inc
mov
push
sub
fwait
les
add
aad
xchg
mov
sbb
xor
push
stos
pop
les
jae
jl
shl
jnp
into
test
push
pop
jae
fucomip
push
mov
jns
inc
jne
lea
fcomp
adc
fadd
pushf
mov
push
fbld
pushf
rol
rol
inc
jecxz
scas
cmp
aam
retf
push
in
sbb
dec
rcr
push
sub
mov
mov
and
cli
or
ficom
jb
into
xor
add
adc
sub
mov
pop
call
xor
fxch
xchg
add
outs
and
push
cmps
rol
rcr
mov
xchg
add
jg
lea
out
mov
es
xor
int3
adc
pop
stc
ds
jnp
stos
aas
dec
inc
test
jp
stos
nop
call
sbb
and
sub
aas
mov
into
push
gs
push
aam
pop
mov
push
pop
enter
sahf
rol
push
fist
into
mov
xchg
mov
jmp
les
sub
mov
add
sar
and
repz
xor
out
stc
ja
pop
popa
sbb
sbb
xor
xchg
mov
lods
dec
loope
sub
jae
ficom
or
ds
push
fld
test
cmp
(bad)
adc
xor
push
leave
(bad)
(bad)
fdivr
push
sar
mov
dec
sahf
mov
dec
xchg
xchg
jns
cli
movs
mov
dec
mov
lods
inc
add
push
std
loopne
(bad)
dec
pop
mov
xorps
in
sbb
cmp
xchg
push
(bad)
pop
stc
inc
out
adc
into
cmp
ja
sbb
ds
fistp
sub
ds
xchg
lahf
cli
in
xchg
ret
ins
pop
push
mov
mov
dec
mov
and
repz
xchg
shr
in
mov
cs
xchg
jmp
lods
imul
lods
ds
ss
mov
cmp
cmp
cmp
mov
test
ret
aam
mov
and
inc
sbb
sbb
add
jp
mov
jb
cmps
test
pop
and
pop
mov
inc
push
mov
mov
mov
cld
add
lea
mov
inc
jle
xchg
cld
dec
sahf
mov
or
sbb
xchg
repz
cmp
addr16
cmp
movs
push
or
mov
dec
(bad)
xlat
xor
cmp
cs
jmp
sbb
(bad)
adc
rep
cli
add
jge
mov
inc
sar
sbb
jg
inc
jecxz
(bad)
arpl
jmp
sub
xchg
sbb
xchg
cmp
stos
fimul
xchg
test
pop
call
rcr
push
in
push
js
test
jbe
dec
mov
movs
mov
test
fs
retf
pusha
ds
and
xor
add
popf
sbb
cmp
daa
dec
retf
es
add
shr
ins
out
in
into
mov
cmps
or
push
mov
cmps
sar
add
cwde
cdq
xchg
popa
cmp
popf
es
mov
iret
sbb
ds
aad
pop
fistp
pop
add
jge
mov
or
mov
pop
lods
imul
and
and
adc
inc
ss
pop
(bad)
ja
pop
pusha
mov
outs
in
push
sub
cmp
cmps
xchg
inc
mov
pop
pushf
pop
sbb
mov
jmp
dec
ret
xchg
push
std
stos
push
and
(bad)
pushf
jb
pop
test
outs
outs
xchg
cmps
mov
aas
call
dec
jl
mov
pop
imul
sub
pop
into
push
bound
dec
mov
push
or
fwait
test
mov
sbb
dec
shr
aas
mov
gs
jno
into
sbb
jns
aaa
lods
sub
cmps
ins
xor
lods
and
and
fistp
call
and
loope
mov
xchg
popa
dec
cli
rcr
test
dec
mov
push
mov
jmp
jmp
cdq
cmp
test
push
iret
dec
sub
cld
fst
xor
jg
fist
push
jbe
cs
dec
out
mov
call
jp
into
pusha
jb
xor
push
cmp
inc
(bad)
push
pop
rol
jge
retf
or
sti
adc
fnstenv
push
fistp
mov
xchg
mov
xor
stc
jmp
ret
dec
push
mov
cli
aam
test
cmp
icebp
adc
fild
sub
lock
sub
daa
je
mov
jle
mov
ret
sub
out
add
cmps
and
add
jbe
outs
dec
mov
inc
jmp
das
push
shr
sti
inc
jae
lea
into
clc
pop
xchg
mov
add
jns
cli
stos
mov
pushf
mov
js
fincstp
jmp
fstp
mov
xor
adc
mov
jle
cmps
cs
and
lods
lods
xor
sar
call
les
xor
sbb
pop
fwait
imul
daa
(bad)
cs
inc
push
inc
fwait
stos
sti
adc
retf
push
rcl
mov
loopne
push
in
mov
movs
faddp
sbb
fs
fcom
lea
jnp
minps
dec
jne
pop
fistp
dec
push
mov
push
cmps
mov
sar
and
push
ror
push
sbb
xor
sub
dec
test
xor
xchg
xor
inc
jmp
hlt
push
dec
stos
pop
retf
cmp
xchg
mov
mov
test
aas
test
pop
test
fadd
mov
sti
cmp
fdivr
fistp
daa
jo
dec
lods
pop
ins
cmp
dec
add
ffree
xchg
xor
enter
rcr
cmp
adc
push
add
xor
add
mov
fwait
imul
test
xchg
and
fisttp
mov
dec
xchg
xchg
jno
iret
xlat
cld
add
jmp
xchg
mov
lock
cld
xlat
outs
add
mov
retf
dec
lods
dec
cmp
fadd
out
and
ss
pop
pusha
cmps
or
movs
inc
aaa
jb
mov
inc
test
xor
sub
and
mov
stos
and
adc
jae
shl
cmp
inc
fisubr
sbb
pop
add
mov
xchg
aad
add
pusha
loopne
jle
enter
fwait
sbb
test
mov
(bad)
les
lods
lods
sub
push
sar
cmp
cli
leave
retf
pop
out
sbb
xor
push
jns
ret
add
lea
pop
add
inc
imul
adc
imul
push
cmps
movs
sahf
arpl
add
retf
mov
pop
jl
pop
mov
test
call
or
add
xchg
fndisi(8087
aaa
sahf
dec
ja
stos
mov
add
loop
fcomp
sub
pop
scas
dec
push
or
(bad)
aad
loopne
je
push
xchg
sbb
push
cli
inc
sub
cmc
nop
call
mov
cdq
lock
jno
iret
pop
pop
add
xor
out
add
sar
outs
out
mov
pop
int
xchg
es
int
repnz
outs
push
stos
pop
xor
jae
mov
nop
mov
push
mov
icebp
aam
fadd
xor
sbb
out
je
inc
mov
jb
pusha
jmp
leave
(bad)
xor
out
ret
ret
loope
dec
dec
cmp
cmp
popa
or
inc
mov
stos
adc
lods
movs
cdq
sub
and
test
xor
jmp
imul
push
test
cli
mov
pop
in
xchg
push
nop
loope
push
jmp
repnz
in
mov
test
add
ret
inc
mov
pop
(bad)
fcom
out
push
inc
sbb
inc
pusha
push
dec
lea
mov
jp
xchg
mov
sub
mov
push
push
pop
pop
in
or
cmp
push
inc
(bad)
push
pop
popf
or
repz
loope
pop
push
pop
call
(bad)
sbb
jne
jge
sub
fsub
pop
cmps
les
add
rol
fisubr
call
test
jecxz
pop
mov
ins
rcl
dec
inc
dec
not
fistp
sbb
stos
pop
arpl
add
fwait
aam
mov
mov
xor
aas
xor
jae
mov
pop
inc
mov
ja
cmps
mov
out
fisub
xor
mov
jg
rcr
(bad)
shl
mov
ins
jne
mov
adc
retf
jmp
mov
ficomp
cmp
cli
sub
cmp
pop
jns
test
aas
dec
mov
pushf
mov
push
stc
sbb
fs
in
cmp
add
pop
xchg
jo
imul
xor
pushf
or
es
fist
icebp
dec
jp
mov
dec
sub
push
movs
inc
sub
xlat
mov
sbb
rcl
ja
mov
aas
aaa
fcmovnu
test
mov
ds
notrack
idiv
fistp
xor
dec
inc
pop
mov
mov
outs
int3
mov
clc
pop
or
mov
add
rcr
bound
push
mov
add
and
aam
adc
outs
push
mov
push
call
add
fcom
mov
mov
lahf
sbb
ret
push
out
xchg
into
aad
dec
mov
retf
inc
(bad)
aam
ret
and
dec
call
push
cwde
(bad)
push
lock
jb
mov
jl
xor
and
fs
scas
jl
mov
(bad)
pop
adc
dec
in
iret
mov
mov
add
dec
sti
mov
js
les
sub
rol
imul
jg
mov
adc
stc
dec
lods
lods
inc
(bad)
push
pop
push
dec
mov
jae
jp
aas
dec
pop
lods
aaa
sbb
stos
fwait
test
call
jbe
pop
xor
xor
ss
jg
pop
pusha
fist
mov
inc
cwde
mov
and
mov
aaa
mov
inc
push
lods
pop
popf
mov
mov
test
add
add
test
mov
jmp
das
stc
jmp
dec
cwde
or
in
or
mov
mov
xor
and
or
xor
or
cmp
int3
inc
jmp
inc
push
sti
inc
sbb
sub
xor
push
push
mov
(bad)
pop
sbb
pop
and
mov
cmp
out
jb
ins
jbe
mov
jns
stos
in
jecxz
jno
std
ror
mov
inc
movs
cmps
xchg
adc
call
test
out
jmp
pop
les
popw
jae
jno
and
icebp
(bad)
mov
enter
clc
add
fsub
sbb
das
mov
mov
test
sbb
data16
addr16
in
lock
mov
jmp
ss
fild
cmps
scas
mov
scas
movs
cld
adc
iret
repnz
out
fadd
stos
fmul
pop
in
sbb
rcl
bound
dec
movs
or
xor
je
fldcw
push
ficom
je
retf
push
jl
mov
lods
imul
(bad)
xlat
test
adc
test
lock
push
nop
jne
cmps
lock
mov
lahf
and
fwait
call
out
xchg
adc
xor
test
sub
ds
pop
sbb
push
mov
add
and
cdq
rol
add
int
adc
shl
mov
jae
jg
lods
push
pusha
mov
cmp
fucomip
aaa
mov
jo
inc
pop
pusha
pushf
imul
mov
xlat
clc
inc
dec
hlt
sar
stos
sbb
test
add
(bad)
inc
inc
xchg
dec
(bad)
cmp
fisttp
jo
cmp
xchg
jp
fwait
stos
cwde
or
jnp
cld
sbb
xor
xor
xchg
inc
mov
mov
push
stos
mov
sbb
sub
call
bnd
outs
jbe
mov
popa
in
loope
lock
jecxz
mov
pop
pop
mov
shr
stos
cld
repz
jecxz
push
in
fild
mov
nop
and
sbb
and
mov
mov
and
ins
in
or
in
add
sbb
xor
mov
retf
and
push
cmps
xor
xchg
mov
arpl
(bad)
loope
mov
jbe
fidiv
shl
mov
xchg
add
(bad)
mov
call
scas
push
xor
lahf
jmp
sbb
repz
inc
mov
movaps
jecxz
out
push
out
and
aas
sbb
jl
mov
fisubr
fnstcw
fnsave
jno
in
or
sub
and
cmps
outs
sbb
into
in
adc
and
mov
and
pop
and
dec
mov
xchg
pop
and
cld
mov
xchg
add
lea
jle
lahf
bnd
int3
(bad)
out
cld
test
push
ror
push
rcl
cld
pop
fidiv
push
or
or
inc
lods
push
or
mov
mov
fmul
ins
pusha
sub
push
sub
arpl
push
pusha
(bad)
sbb
sbb
xor
les
jmp
jae
test
sti
cmps
(bad)
dec
cwde
les
cs
rcl
(bad)
mov
ja
xchg
(bad)
adc
repnz
js
mov
hlt
cmp
int
dec
fild
cmp
or
outs
sahf
pusha
cs
mov
mov
stc
stc
add
in
sbb
pop
mov
test
xor
pop
and
lods
lahf
aaa
mov
sbb
dec
xchg
ins
fcom
mov
mov
add
xchg
(bad)
and
xlat
lock
fdivr
mov
ss
cld
retf
inc
clc
and
aaa
pop
mov
inc
or
mov
mov
inc
clc
add
push
popa
push
aas
fisub
xor
and
sub
outs
je
push
cmp
push
pop
sub
fwait
cmc
cdq
das
xchg
std
jge
jbe
inc
popf
push
xchg
and
inc
into
xchg
jbe
iret
rol
mov
jle
xchg
call
retf
ins
mov
inc
rcl
push
cs
xchg
xlat
fild
add
fstp
push
mov
fstp
outs
out
fistp
cdq
cmc
arpl
daa
cmc
pop
aas
jp
push
mov
jnp
mov
dec
mov
int
xchg
dec
mov
gs
jae
mov
ins
xchg
scas
mov
xchg
movs
bound
in
cli
xchg
and
ins
lea
arpl
test
adc
loope
test
scas
je
push
into
and
int3
and
and
adc
sbb
icebp
mov
cdq
adc
lods
data16
sbb
adc
pop
sbb
das
shl
jl
lahf
or
scas
mov
int
sti
adc
dec
inc
popa
je
push
aam
and
cmps
fs
jmp
aad
mov
mov
fiadd
out
scas
cld
fs
fwait
test
lock
cmp
es
scas
imul
mov
cmp
jle
mov
stos
dec
inc
lods
jnp
clc
jo
leave
jg
jle
into
pop
sbb
sbb
jmp
xor
into
cli
imul
dec
in
(bad)
mov
in
sbb
pop
out
lock
pushf
(bad)
sti
dec
mov
inc
or
push
xchg
test
dec
xchg
fcom
xchg
push
repz
std
push
jle
pop
imul
add
xchg
mov
ins
(bad)
and
push
jo
pop
sbb
jmp
add
shl
fstp
xchg
xor
pop
ds
dec
mov
jmp
and
(bad)
hlt
or
mov
sbb
cmp
xchg
sbb
push
sub
dec
inc
call
fsubr
xchg
pushf
xchg
ins
in
cs
push
push
je
mov
pop
lahf
das
mov
mov
mov
and
dec
(bad)
aam
and
jp
test
mov
imul
movs
or
push
movs
test
add
sti
clc
mov
fistp
cmc
sahf
sub
jb
das
pop
xor
les
sub
xor
mov
xchg
les
ins
out
pop
popf
std
inc
push
inc
push
int
sbb
mov
nop
jbe
arpl
je
test
xor
(bad)
call
repnz
test
test
fadd
es
add
imul
stos
ins
add
fcomip
clc
leave
sti
inc
imul
icebp
push
push
dec
out
in
fiadd
xor
dec
mov
push
cs
cdq
movs
popf
dec
inc
mov
call
dec
sbb
inc
push
fs
jmp
inc
data16
ss
call
int3
stos
call
shr
data16
lea
xchg
jmp
push
mul
jne
fnstcw
movs
call
or
xchg
retf
dec
lods
mov
cmp
dec
repnz
repz
lock
push
pop
arpl
jns
push
icebp
movs
xchg
(bad)
dec
sub
jle
shl
mov
bound
inc
sub
add
sbb
data16
push
mov
lea
pop
dec
movs
push
test
fidiv
push
(bad)
mov
cmps
push
mov
repnz
js
cmps
shl
sbb
jmp
out
inc
jmp
pop
sbb
mov
sbb
sbb
inc
push
in
cdq
ror
in
xchg
aas
fcmovnu
inc
push
add
pop
cs
sub
jne
jnp
mov
push
je
retf
cmp
ins
(bad)
fld
sar
ds
ss
mov
adc
add
icebp
movs
lea
xchg
outs
stos
mov
sbb
out
mov
clc
(bad)
cmp
(bad)
pop
repnz
addr16
pop
pop
cmp
jno
pop
cmp
cmc
les
out
daa
test
jb
pop
xor
xor
jo
adc
cmp
sahf
pop
ds
dec
cwde
mov
jl
fimul
les
jbe
jo
xor
xor
stos
aaa
shl
lods
enter
inc
sti
fwait
jmp
adc
(bad)
out
mov
out
retf
das
aad
lods
je
sbb
dec
movs
sbb
test
pop
mov
leave
jge
nop
cs
jge
push
sbb
sbb
mov
lahf
and
pop
inc
mov
fnstsw
jnp
mov
or
push
jl
(bad)
daa
mov
push
inc
mov
and
cld
add
(bad)
jnp
dec
stos
mov
push
mov
xchg
ret
test
test
mov
fiadd
ret
inc
sar
pop
push
mov
in
fldcw
inc
(bad)
call
push
pop
cmp
or
adc
pushaw
test
xor
mov
in
std
call
(bad)
retf
jns
and
lock
mov
cld
pop
pop
mov
(bad)
mov
ja
mov
push
xor
cwde
mov
lock
add
rol
xor
pop
outs
inc
stos
inc
ds
mov
scas
cmp
nop
sbb
leave
je
push
inc
mov
add
sbb
xchg
pop
cmp
cmp
in
mov
in
xchg
xor
gs
(bad)
loopne
mov
cdq
push
loope
ja
icebp
test
cmps
shl
cmp
test
mov
inc
out
dec
cs
jmp
rcr
sbb
push
add
(bad)
cmps
movs
scas
cmp
cli
or
leave
cmp
inc
add
and
sbb
xchg
je
test
out
xchg
adc
repz
mov
dec
mov
inc
popf
xor
mov
adc
lods
adc
cld
retf
xchg
popf
pushw
out
test
lea
jmp
inc
ss
repz
add
fidiv
popa
mov
xchg
fwait
xchg
push
and
add
cmp
push
xor
mov
push
fisttp
mov
mov
mov
sar
daa
mov
dec
cwde
inc
data16
dec
repz
mov
std
loop
popf
cld
sbb
in
sti
std
ins
int
test
jg
out
std
js
into
loop
mov
cmps
dec
aad
repnz
xlat
sub
xor
push
popa
ficomp
jae
test
iret
cmp
out
and
es
sbb
jo
or
jge
sahf
jne
aad
jae
mov
fcom
out
and
pop
mov
fbld
dec
rcr
aaa
xchg
jl
mov
bound
xchg
cmp
fadd
push
out
enter
dec
fcomp
add
sub
mov
aaa
sub
fstp
pop
sti
lea
xchg
jmp
sbb
pop
lahf
and
push
enter
ja
mov
pop
xchg
aad
adc
(bad)
repnz
pop
xchg
xchg
fcomp
(bad)
fdivr
arpl
mov
mov
mov
mov
stos
sbb
mov
sbb
mov
push
or
sub
out
iret
je
and
cmp
mov
push
stos
fstp
add
clc
push
sbb
adc
and
sub
add
jg
fnstsw
push
mov
sahf
xor
push
push
xchg
test
popa
shr
jl
fnstsw
in
shl
std
ins
int
movs
(bad)
stos
fnstenv
mov
fwait
cdq
test
pop
mov
cdq
aad
inc
pop
xchg
mov
pop
lock
call
mov
fild
fs
sbb
lea
add
push
scas
dec
out
addr16
jmp
les
or
or
and
mov
setne
dec
loopne
xchg
inc
xchg
repz
jge
sub
(bad)
inc
movs
mov
jne
enter
out
push
idiv
pop
sbb
lock
xchg
cli
arpl
jne
cs
aaa
cmp
shl
jecxz
rcr
sub
sbb
or
les
push
rol
adc
xor
xor
iret
jb
stos
pop
and
xor
jge
mov
pop
mov
pop
mov
mov
loop
(bad)
jns
scas
mov
xchg
loope
dec
jmp
call
xchg
pop
out
lea
inc
mov
add
fmul
jp
cmp
sahf
sbb
fidiv
push
mov
fwait
les
out
cli
jge
std
jne
jle
into
cmp
jne
add
in
addr16
mov
lods
sub
mov
push
(bad)
stos
xchg
aaa
shl
add
gs
mov
push
call
cmp
retf
lds
xchg
cmps
les
dec
test
fsubr
lahf
dec
retf
xor
cmp
sub
rcr
daa
xchg
push
dec
pushf
sbb
push
loopne
or
cmps
mov
cdq
adc
inc
popf
xchg
jl
div
ss
aas
xor
sbb
ins
pusha
lods
jge
movs
dec
inc
popf
aam
push
add
aaa
mov
jno
outs
jle
popf
pop
jecxz
test
rcr
clc
sti
xchg
sub
je
lods
stos
mov
popf
cmp
ret
out
sbb
or
cld
ja
pop
jo
dec
mov
cmp
add
inc
into
add
clc
add
add
xor
and
cmp
data16
push
inc
mov
inc
sahf
xchg
cmps
test
call
lods
pop
ret
mov
pusha
xchg
mov
jl
xchg
jnp
cmc
cmc
std
adc
inc
mov
mov
fwait
mov
aaa
icebp
leave
mov
cmc
(bad)
dec
icebp
pop
int3
xor
add
cmp
sub
fidiv
pop
div
jp
mov
fidivr
cli
add
in
push
add
pop
out
je
push
sbb
cmp
call
sbb
inc
jmp
jmp
fdivr
js
in
cmps
push
std
retf
test
out
ins
mov
outs
inc
popf
add
ror
js
sbb
sub
cmc
mov
push
loopne
pop
jnp
scas
or
inc
sbb
mov
clc
push
loope
das
movs
icebp
gs
inc
and
sbb
add
xor
sub
fldenv
mov
jnp
xlat
cwde
jne
pop
ins
std
iret
xchg
inc
and
inc
test
cdq
dec
loopne
pusha
pop
jmp
not
pop
xchg
movs
lea
aaa
xchg
stc
(bad)
clc
idiv
mov
into
cmp
adc
cdq
xor
sbb
cmp
mov
pop
fcomp
std
cli
sbb
inc
enter
sub
jbe
adc
ret
xchg
push
push
call
shl
ret
cmp
jb
sahf
(bad)
cmp
call
cmps
mov
jecxz
mov
lods
inc
jg
rcl
into
test
cmps
pop
inc
dec
cli
clc
mov
in
xor
add
xchg
ins
push
mov
mov
sti
inc
xchg
leave
or
xor
xor
xchg
and
test
add
mov
sbb
fldlg2
xchg
xor
jle
sub
scas
fidiv
loop
mov
aam
bound
ins
test
add
sti
leave
mov
jmp
enter
xchg
fcom
ds
stc
loop
cdq
xor
push
fs
inc
pop
jnp
mov
cmps
add
enter
bound
iret
inc
sub
xor
sbb
(bad)
push
pop
adc
movs
cli
push
adc
dec
out
fbstp
mov
jge
sub
cdq
loope
imul
jno
(bad)
in
and
inc
xchg
mov
lds
mov
icebp
js
retf
hlt
lea
mov
cmp
or
(bad)
icebp
push
ret
sub
pushf
sbb
add
mov
enter
adc
mov
xor
in
ins
jae
jl
movs
dec
pop
(bad)
xlat
(bad)
das
add
xchg
sbb
pop
push
xchg
dec
(bad)
inc
call
add
ret
xor
ret
bound
mov
xchg
std
loope
jl
scas
outs
jmp
fnstsw
xlat
inc
jmp
pop
push
push
cmp
or
mov
push
sub
sbb
jns
cmps
push
jae
sub
cmc
pop
(bad)
jb
add
jnp
(bad)
jl
mov
pop
fstp
out
scas
aad
test
(bad)
bnd
enter
lahf
inc
add
shr
scas
(bad)
sbb
bnd
aad
mov
pop
jecxz
(bad)
inc
dec
loop
mov
retf
sbb
jg
jno
jnp
imul
pushf
mov
add
stc
xor
xor
aas
xor
lods
das
mov
(bad)
lahf
dec
push
cwde
mov
ins
sub
jb
pop
jg
mov
shr
adc
sahf
jno
int3
sti
mov
cli
mov
ja
cmps
stos
add
pushf
test
pop
ins
cwde
stos
jo
dec
fisubr
or
in
and
dec
mov
jge
mov
fldcw
add
push
ja
aas
int
adc
mov
(bad)
outs
adc
inc
lods
shl
push
inc
sbb
test
xor
add
push
aad
mov
les
repnz
lods
(bad)
mov
(bad)
fisubr
jecxz
jae
pop
ficom
pop
or
lock
cmp
jge
sbb
das
mov
jns
mov
sar
pop
in
add
jns
jb
fbstp
test
dec
push
mov
outs
popf
xchg
fst
mov
les
inc
mov
inc
xchg
repnz
in
mov
push
lock
stos
push
xchg
outs
mov
mov
push
scas
bound
mov
loop
fsubp
jg
mov
mul
mov
xor
push
popa
les
outs
pusha
mov
mov
and
sbb
sbb
add
lahf
das
rol
adc
dec
pop
mov
xchg
mov
adc
and
rol
fstp
mov
(bad)
mov
mov
inc
and
rcr
lahf
xchg
aas
ret
mov
stc
cmps
loope
inc
imul
fidivr
or
stc
(bad)
js
dec
push
fs
push
sbb
mov
in
jmp
je
sti
inc
or
push
or
ins
mov
retf
out
xlat
test
pop
or
sti
xlat
mov
mov
jae
xchg
mov
or
clc
pusha
dec
xchg
fcomip
jb
adc
mov
jg
in
xchg
out
scas
hlt
xor
mov
dec
sub
(bad)
aad
push
fild
cmp
jno
inc
std
aaa
cmp
fldcw
ja
xchg
xor
xor
and
xchg
add
pusha
mov
jl
mov
ins
xchg
into
mov
jecxz
sbb
arpl
in
xchg
jno
xchg
pop
xor
mov
mov
call
mov
js
icebp
loop
in
push
mov
dec
div
sub
adc
xchg
iret
inc
std
xor
pop
test
inc
add
mov
sub
outs
clc
out
cs
js
push
inc
mov
sbb
pop
int3
imul
cmp
push
dec
lods
movs
mov
lock
xchg
xchg
push
jecxz
ins
jae
sub
popf
in
mov
mov
push
xchg
mov
movs
cmps
mov
popa
fwait
lahf
lock
aam
sbb
dec
sbb
mov
cmp
clc
repz
je
dec
cmps
or
pusha
lahf
jae
ins
pop
clc
pop
clc
inc
mov
cmp
push
sbb
and
add
data16
mov
pop
test
std
(bad)
or
in
test
shr
cli
pop
jno
lods
and
shl
mov
mov
mov
icebp
dec
movs
mov
arpl
sar
idiv
fsub
dec
cmc
fld
sub
sbb
idiv
rcr
aaa
inc
sub
xor
jl
mov
mov
scas
je
std
add
iret
inc
jne
pop
in
sbb
ss
mov
pop
inc
mov
jle
and
int3
xchg
xor
dec
mov
dec
sub
movs
sbb
push
xchg
in
iret
aas
stos
pop
jo
test
not
enter
mov
dec
loop
fistp
adc
jl
mov
inc
ss
mov
lods
aam
push
jmp
mov
push
fs
sbb
cmp
cmp
xchg
jp
fmul
jmp
cdq
stos
inc
repnz
inc
jbe
stos
ins
lds
xchg
dec
mov
mov
fdiv
push
adc
sti
enter
aam
neg
jecxz
fs
mov
sub
fild
inc
ja
dec
les
cmp
mov
scas
sbb
fild
stc
addr16
jne
js
fcomp
xor
imul
lea
hlt
adc
mov
xchg
push
pop
fwait
(bad)
sahf
xor
cmp
fist
push
ret
mov
xor
clc
pusha
pop
int
imul
ret
ins
or
jae
xchg
movs
mov
jno
cmc
lods
dec
xchg
push
in
dec
inc
dec
clc
mov
inc
in
xor
ss
xchg
or
scas
mov
stos
popa
pushf
xchg
or
ss
adc
daa
shl
mov
inc
ret
test
jle
xchg
call
aam
push
push
mov
mov
dec
xchg
(bad)
mov
in
xchg
jno
fcom
lea
cli
inc
xchg
mov
jl
lods
test
mov
std
cdq
inc
inc
loop
inc
jecxz
fiadd
(bad)
push
fdivr
pop
ja
test
inc
or
lahf
retf
cmp
retf
clc
or
popa
inc
cmps
push
adc
jl
pop
stos
jb
outs
imul
xor
and
fist
sti
js
cmp
pop
cmps
in
cmps
pop
xchg
mov
xchg
sub
inc
call
add
cli
hlt
test
fisttp
mov
rcr
sub
mov
sbb
pushf
adc
cwde
push
cs
mov
mov
jecxz
cs
addr16
push
sbb
xor
das
leave
add
popa
push
xchg
push
popf
xlat
lods
sub
ins
xchg
retf
adc
pop
jo
fisubr
fcomp
dec
mov
xchg
add
push
call
fiadd
add
xchg
fist
cmc
mov
not
cmp
shl
(bad)
xchg
sbb
or
mov
mov
mov
test
jnp
shl
je
into
daa
or
sub
pop
fistp
stos
jne
mov
ja
mov
xor
adc
sti
add
test
je
push
fimul
mov
dec
cmps
rcl
xor
fst
or
mov
nop
mov
not
les
mov
int
push
cmp
jmp
jge
sahf
push
sub
xchg
cmp
bswap
in
jb
jbe
int
das
dec
jl
xchg
and
test
xor
loope
pop
or
cmc
stos
es
sar
pop
jbe
xchg
pop
retf
mov
xchg
fisttp
test
neg
mov
arpl
or
clc
fiadd
cmps
dec
neg
sbb
int3
cld
fcomp
cmp
inc
or
sub
cmps
mov
pop
jmp
jae
(bad)
sbb
pusha
jb
mov
jnp
lods
dec
xor
adc
or
fist
out
ins
lds
mov
inc
mov
xchg
pusha
in
jl
cmc
in
add
js
cmps
sahf
mov
test
xchg
push
pop
stc
mov
fwait
scas
xor
push
rol
ds
inc
pop
cdq
and
jge
test
js
jge
ret
and
(bad)
push
sar
sahf
xchg
push
imul
add
sbb
scas
push
popf
and
mov
dec
in
stos
call
shr
cmp
and
xchg
jl
(bad)
fmul
mov
ja
mov
addr16
mov
mov
fsub
cwde
stos
inc
loopne
fidivr
cs
cld
loop
clc
pop
pop
push
outs
stos
pop
inc
dec
mov
jge
mov
pushf
and
movs
sti
jb
popa
pop
int
push
pop
push
push
mov
xchg
add
jg
mov
xor
add
xchg
sbb
outs
jns
test
dec
mov
xchg
bound
iret
mov
movs
loope
scas
inc
mov
mov
std
les
mov
cmp
sbb
(bad)
fistp
and
ss
mov
fst
xchg
adc
ins
ror
push
pop
inc
in
adc
adc
pop
iret
imul
and
xor
xor
inc
jmp
jbe
pop
inc
push
scas
dec
idiv
xchg
addr16
jle
cmc
rol
shl
in
scas
xor
aam
mov
idiv
mov
aaa
or
fldenv
inc
jo
dec
scas
adc
push
test
jns
cmps
movs
retf
fdivr
aas
mov
aaa
cmc
pop
xor
das
mov
mov
ja
mov
cmp
fistp
loop
jbe
stos
ins
(bad)
fcomp
inc
cmp
push
xchg
cli
mov
xchg
gs
(bad)
ror
cdq
jg
lahf
xchg
test
aaa
sti
(bad)
mov
lods
fadd
jb
sbb
xchg
shl
and
jbe
sbb
xchg
mov
mov
jmp
jb
in
sub
sbb
sbb
ja
stos
mov
xor
dec
out
les
stc
pop
add
shl
gs
out
in
pop
and
icebp
stos
xor
mov
cmp
inc
popa
mov
loopne
out
mov
cmp
popf
lea
imul
ficomp
push
jb
dec
mov
and
call
inc
sti
sar
jbe
jge
(bad)
cmp
sbb
and
jp
mov
jg
add
xor
outs
pop
jge
ja
mov
xchg
adc
clc
push
pop
out
sti
std
xor
popa
test
shr
mov
xchg
shl
aas
add
add
(bad)
sbb
shl
push
dec
les
outs
pop
mov
les
arpl
jmp
mov
inc
dec
push
bound
add
imul
movs
cmp
mov
stc
(bad)
test
cmp
ja
lahf
loope
jmp
mov
in
popa
sub
movs
mov
mov
jb
mov
repnz
cdq
dec
in
sar
cs
fdivr
fistp
sub
adc
das
xchg
jne
mov
mov
sub
imul
or
pop
mov
add
push
mov
test
sbb
neg
dec
push
and
ficom
inc
sbb
xchg
dec
hlt
mov
inc
cwde
cmc
cmps
(bad)
clc
arpl
rol
test
test
(bad)
xchg
stos
aaa
in
mov
xor
cmp
cmp
or
mov
push
test
lds
jmp
push
dec
mov
push
mov
imul
xor
ins
inc
sub
stc
mov
idiv
xchg
stc
mov
dec
in
mov
pop
add
not
movs
cdq
aad
fsub
pushf
cwde
mov
daa
in
imul
enter
mov
cmp
dec
jmp
sub
outs
fs
bound
mov
mov
dec
xchg
cli
xor
sbb
adc
add
mov
pop
xchg
cdq
sahf
xor
or
(bad)
xchg
inc
sahf
(bad)
jo
imul
cmp
mov
pop
loopne
jno
in
repz
pop
fwait
lahf
cwde
jmp
xchg
mov
popa
xor
lock
(bad)
pop
mov
and
bnd
jo
push
cmp
imul
inc
pop
scas
test
outs
in
mul
(bad)
gs
and
cmp
add
adc
sbb
dec
ds
addr16
xchg
test
in
rol
clc
sbb
cmp
bound
xchg
popa
dec
cli
aad
adc
retf
pop
jne
mov
cmc
or
dec
push
xor
cmp
xor
lock
sar
arpl
scas
ss
jnp
push
add
fwait
mov
std
outs
out
pop
mov
jge
popa
aaa
int
sbb
pop
mov
sahf
jg
into
cmp
mov
(bad)
sti
adc
out
jb
jl
push
xchg
pop
test
push
pop
(bad)
fild
stos
mov
xchg
mov
xchg
popf
mov
sbb
xor
mov
jb
imul
jno
cmp
mov
fild
jmp
xor
outs
xor
fnstsw
mov
fs
mov
inc
in
in
stos
es
xchg
add
mov
cld
lahf
repnz
xchg
int3
mov
cmp
mov
movs
(bad)
mov
ja
mov
test
test
xchg
jb
or
int
push
cld
xor
cmp
and
mov
sbb
cli
push
mov
xor
es
sbb
or
test
add
mov
sbb
cmp
fild
test
pop
loopne
hlt
push
call
lock
xor
les
popf
outs
jae
mov
jecxz
aad
cmp
mov
imul
add
push
rol
push
sub
cmps
or
imul
dec
jmp
dec
fdivrp
or
jno
out
pop
cmp
ds
add
sbb
or
movs
mov
in
mov
aas
mov
jb
popf
and
(bad)
ficom
les
daa
xchg
out
xor
ins
or
fs
mov
adc
(bad)
mov
xchg
xchg
dec
jecxz
repz
sti
loop
lds
dec
push
lods
and
jle
arpl
or
cwde
movs
int
aas
fistp
cld
sub
repnz
arpl
sbb
and
mov
stos
and
push
pusha
mov
gs
retf
cmp
std
shr
jecxz
sbb
fnstcw
sahf
mov
in
xchg
cld
add
in
sti
xchg
sbb
aad
cmp
das
pop
dec
mov
jno
pop
fcom
sbb
retf
sahf
cs
dec
pushf
sbb
xchg
or
push
jmp
mov
iret
xor
add
or
outs
inc
sahf
pop
or
popf
arpl
and
mov
repnz
dec
xchg
adc
mov
pop
(bad)
ror
xchg
shl
push
dec
mov
int3
div
mov
xor
jbe
add
out
jle
aaa
jb
outs
xchg
adc
jg
gs
pushf
mov
rcr
loope
mov
add
sub
dec
imul
and
test
dec
inc
call
in
fisub
in
inc
jl
inc
lds
test
push
sbb
enter
add
scas
scas
stos
cmp
mov
cmp
jp
jmp
cmp
and
call
xor
sub
push
mov
jns
xchg
lods
retf
or
out
icebp
out
das
lahf
clc
js
jbe
cmps
and
add
add
(bad)
xor
test
in
xchg
sub
lock
pop
pop
pop
popf
pop
lds
in
in
jns
fsub
mov
ja
pushf
movs
scas
outs
aaa
stc
repnz
(bad)
pop
outs
scas
mov
dec
cs
cld
fistp
aas
js
jp
sbb
sahf
gs
(bad)
sbb
pop
jecxz
sbb
ror
push
pop
mov
stos
and
fs
ins
movs
push
inc
popf
scas
mov
xor
and
fild
jmp
pop
push
mov
bound
adc
jmp
fldcw
mov
sti
std
xchg
(bad)
ficomp
jmp
test
cmp
jmp
mov
inc
and
mov
lea
jmp
jne
int
adc
xor
xchg
aas
lods
cmp
imul
dec
ds
dec
nop
mov
or
and
mov
cmp
sbb
sub
sar
jmp
fs
xlat
mov
jmp
mov
loopne
cmp
clc
fdivr
es
xchg
cwde
inc
xchg
push
in
ds
add
call
arpl
fnstcw
out
mov
add
inc
sbb
or
xor
add
or
xchg
inc
fstp
call
rcr
je
pop
loop
ror
les
and
addr16
mov
sbb
xchg
mov
ss
loopne
loop
dec
jl
(bad)
push
call
xchg
out
jne
sbb
sbb
pop
jne
cwde
test
or
dec
or
mov
pop
push
inc
loop
es
add
jae
adc
sahf
dec
movs
cmp
test
adc
ins
in
fnstsw
cmp
push
jb
outs
std
popf
call
or
(bad)
repnz
mov
in
xor
sbb
loopne
mov
or
mov
fstp
push
push
rcl
jge
inc
mov
dec
inc
add
mov
sub
jg
aam
cmp
fs
into
aaa
cs
and
push
xlat
popw
mov
sbb
pop
push
pop
and
sbb
jbe
cmp
inc
movs
scas
sbb
cmps
xor
call
add
cdq
mov
adc
int3
std
out
aam
pop
imul
xor
in
lds
fbstp
popa
xor
dec
cmc
fstp
push
jmp
add
sub
gs
ins
and
xor
ins
xor
ins
hlt
scas
call
std
jne
push
scas
dec
(bad)
xchg
sahf
cmp
lahf
push
adc
icebp
bound
lods
imul
(bad)
pop
pusha
cwde
fwait
inc
jmp
scas
push
or
fisttp
jne
cmp
gs
xchg
cmps
call
xchg
jo
(bad)
je
je
jecxz
jae
imul
mov
mov
sbb
xor
fild
lds
inc
push
sbb
lock
xchg
les
and
fild
clc
pushf
div
mov
sbb
xchg
adc
xchg
neg
sub
adc
push
ret
or
sbb
push
mov
mov
stc
inc
test
pop
xchg
rol
jno
int
cmp
add
inc
imul
cmp
jmp
ja
ins
push
push
mov
jl
ret
loopne
inc
push
(bad)
rcl
(bad)
stos
leave
sbb
xchg
adc
into
jecxz
aad
xor
mov
mov
cmp
dec
fbld
push
inc
xchg
dec
jns
inc
pop
push
call
dec
inc
jge
cmps
push
ja
jl
mov
mov
mov
gs
retf
pop
daa
pop
leave
cmc
cwde
sbb
inc
push
lods
pop
(bad)
mov
js
loop
push
retf
movs
jb
mov
mov
xor
jmp
dec
xchg
fsub
xchg
xchg
push
or
lock
aad
call
cmps
jne
mov
jno
mov
sti
inc
in
shl
xchg
add
sub
pop
arpl
pop
out
dec
mov
inc
jmp
jmp
std
push
add
fdiv
rol
xchg
cmps
imul
addr16
stc
mov
shr
cmps
lds
xchg
(bad)
data16
mov
cmp
or
xlat
enter
jo
dec
fiadd
jns
aaa
or
(bad)
jl
cli
add
in
outs
add
xchg
adc
adc
xor
push
(bad)
gs
int3
mov
or
pushf
and
mov
push
mov
dec
push
lock
mov
sbb
ret
std
ficomp
xchg
mov
sub
iret
hlt
fcom
pop
push
sub
daa
pop
jge
inc
ds
mov
lods
imul
pop
sahf
fstp
jne
into
and
mov
mov
(bad)
dec
pop
nop
sub
repz
std
arpl
and
out
xchg
and
fsub
and
addr16
rcl
cdq
sar
cmps
and
in
(bad)
mov
lea
pop
into
sbb
ds
retf
inc
push
push
inc
mov
cmp
jbe
mov
xlat
imul
jne
pop
adc
and
fistp
mov
push
lahf
mov
sbb
sbb
mov
retf
cwde
pop
jle
mov
js
les
or
fucomp
sub
mov
ja
mov
xor
(bad)
jns
mov
aaa
sub
pop
rol
pusha
cmp
aaa
jns
xchg
or
(bad)
inc
(bad)
add
xor
add
fwait
es
mov
inc
sar
jg
xlat
cdq
pop
dec
adc
xor
dec
fisub
cmp
jne
fdivr
pusha
stos
fsub
lock
stos
into
sbb
mov
fsubr
mov
and
in
jl
dec
fwait
sbb
mov
or
mov
lahf
sbb
fild
cli
or
add
inc
or
imul
mov
fisttp
lods
jge
mov
pop
xchg
mov
and
push
dec
(bad)
push
cmp
loope
in
xor
shl
cmps
ret
ins
inc
cdq
fisubr
out
scas
loop
add
add
fidivr
sbb
out
jecxz
in
push
jnp
mov
dec
inc
test
jns
mov
pushf
ss
stc
push
nop
pop
sahf
fcomp
inc
pop
ret
sub
adc
sub
adc
jl
cmps
jae
mov
mov
mov
fcmove
call
jae
test
xchg
(bad)
dec
add
jno
(bad)
xchg
add
push
mov
fwait
mov
mov
mov
inc
call
pop
outs
sahf
mov
xor
cs
pop
push
push
pop
movs
or
jmp
dec
mov
nop
sbb
sar
fdiv
jae
retf
xor
jae
add
pop
pop
(bad)
push
sbb
in
inc
das
pop
in
iret
xchg
inc
mov
imul
popf
iret
loopne
xchg
(bad)
xchg
dec
jmp
ret
test
push
mov
mov
jl
movs
stos
xor
std
repnz
rol
scas
je
jb
and
test
sbb
xchg
pop
jl
mov
imul
fldenv
xchg
jl
cld
jge
pop
aas
fidiv
or
aaa
mov
mov
inc
xchg
mov
out
int3
cwde
xor
sti
jbe
jns
push
scas
jno
mov
xchg
pop
push
xchg
movs
mov
xchg
movs
mov
ficomp
test
or
pop
push
dec
int
pop
xor
(bad)
push
cld
adc
add
sbb
mov
pop
lahf
xchg
scas
mov
dec
and
add
add
pop
cs
jmp
inc
inc
test
lea
mov
lods
sbb
fs
fst
in
pop
ja
sub
mov
dec
xchg
(bad)
mov
xchg
cld
sbb
stc
enter
dec
stos
mov
ins
push
test
cmc
lock
and
aaa
xchg
jg
ss
cli
stc
(bad)
jbe
cmp
outs
mov
ins
ss
cmps
mov
stos
jg
idiv
mov
je
inc
push
out
xor
inc
pop
xor
dec
jns
jge
mov
jne
test
leave
stos
mov
ror
mov
dec
xchg
mov
add
shl
call
xchg
ret
pop
(bad)
fstp
cmc
mov
aaa
aas
sub
stc
mov
sub
cmp
mov
fisttp
jp
xchg
jnp
cmc
addr16
xor
cmp
pop
mov
mov
movs
cmp
mov
inc
(bad)
sti
mov
xchg
pusha
sti
jge
inc
stos
xor
iret
out
in
loop
out
inc
or
lea
xchg
lods
mov
scas
imul
xchg
mov
inc
aad
cld
cmp
adc
hlt
lods
push
sti
sbb
or
mov
mov
mov
(bad)
fdivr
xor
outs
add
cmc
push
mov
shr
mov
cmps
xor
test
and
(bad)
cmc
xchg
push
mov
inc
inc
mov
xchg
lock
xchg
retf
shl
push
push
aad
xchg
pop
aad
xor
outs
out
icebp
js
(bad)
xlat
cdq
in
fsub
sbb
mov
cmp
shr
iret
jne
sbb
mov
jo
dec
and
les
jbe
sar
hlt
pusha
jae
aas
test
outs
sbb
add
cmps
push
xor
mov
in
idiv
pop
push
cmp
jbe
mov
cmps
popa
fcom
mov
mov
imul
gs
cli
div
(bad)
dec
dec
fwait
mov
dec
inc
inc
(bad)
(bad)
repnz
ret
inc
push
sub
push
or
fwait
lahf
mov
into
cli
jge
leave
gs
inc
mov
adc
gs
pop
push
sar
call
out
iret
out
mov
sbb
add
nop
and
into
lock
std
mov
adc
sti
popf
and
inc
mov
test
push
test
jmp
(bad)
inc
jg
mov
cmp
cs
lods
push
in
cmp
sub
fwait
imul
jmp
mov
jbe
stc
sbb
sbb
cmp
pop
xor
xchg
and
stos
je
stos
ds
xchg
mov
or
and
aad
adc
sti
jno
pop
pop
dec
test
mov
and
lea
leave
imul
outs
js
mov
not
xchg
mov
lea
int3
out
fist
and
cmps
adc
ins
mov
lds
pop
jmp
jno
fistp
mov
imul
fs
(bad)
cmps
sbb
adc
stos
mov
popf
sti
jb
pop
jo
cwde
outs
jmp
hlt
pop
cdq
in
dec
(bad)
xchg
pop
and
ror
pushf
mov
lea
mov
mov
xchg
fsub
sbb
mov
sub
enter
out
and
or
pop
jle
adc
xchg
mov
mov
fisttp
or
popa
inc
fidivr
sub
sub
imul
movs
cmp
mov
ss
out
int3
xchg
inc
xchg
sti
jbe
outs
addr16
lods
pop
idiv
xchg
adc
xchg
je
in
rol
(bad)
int
call
adc
pushf
test
gs
push
call
sar
push
retf
push
inc
scas
adc
inc
xchg
push
adc
fild
fstp
pop
push
int
pop
add
sub
jle
inc
push
fisubr
movs
cmp
mov
jl
fldenv
jmp
sahf
and
xchg
jb
out
sti
test
fisubr
xchg
mov
popf
popf
hlt
sbb
rol
cmp
test
dec
or
and
pop
ins
push
test
jns
les
outs
call
jno
fsub
add
or
jnp
jg
mov
(bad)
jmp
cmp
fadd
fidivr
pop
mov
bound
mov
and
(bad)
popf
sub
pusha
mov
sub
mov
leave
mov
rol
mov
fidivr
mov
add
jne
je
inc
and
out
mov
mov
fwait
clc
jle
fbstp
jle
leave
xor
gs
jle
imul
inc
popf
mov
dec
dec
xchg
xor
(bad)
jl
ins
jb
stos
pop
(bad)
jne
cld
add
cmc
rol
test
pop
pusha
mov
in
dec
mov
fdiv
adc
cmp
inc
inc
xor
pop
test
mov
and
outs
jmp
addr16
jne
mov
adc
arpl
or
movs
sub
(bad)
sti
aad
xor
inc
inc
lods
dec
test
call
sbb
rcl
mov
inc
add
(bad)
idiv
mov
ds
jl
push
jo
inc
cmps
pop
inc
push
stos
push
inc
push
icebp
les
dec
jmp
js
mov
and
mov
push
test
xor
or
push
and
lods
xchg
inc
lods
out
push
pop
sbb
ret
mov
cmp
test
mov
fwait
mov
ja
mov
and
mov
xchg
fisubr
mov
iret
adc
adc
mov
or
push
pushf
dec
daa
or
xlat
ins
xchg
icebp
or
xor
xor
mov
mov
rol
test
or
(bad)
sub
rcr
neg
pop
test
jg
iret
xchg
popa
(bad)
mov
add
fist
cmps
stos
call
loopne
add
int
popa
outs
mov
mov
cs
(bad)
jmp
daa
ins
fidivr
dec
push
mov
mov
mov
or
outs
std
icebp
daa
mov
dec
int
sbb
es
mov
adc
add
mov
popa
leave
fist
cmc
inc
jne
scas
pop
clc
mov
data16
and
test
shr
nop
xchg
test
xor
fdivr
icebp
xor
es
(bad)
(bad)
xor
stos
aas
dec
push
test
inc
stos
mov
mov
test
push
jbe
retf
add
sbb
inc
push
mov
inc
xchg
xlat
mov
pop
and
(bad)
out
call
mov
popa
out
loop
loopne
pop
psubsw
xchg
rcr
mov
ja
test
jmp
movs
dec
jecxz
xlat
sub
ds
out
fild
xor
pop
outs
push
xchg
jp
ret
dec
inc
stos
pop
jecxz
or
or
pop
das
jo
and
sub
mov
jns
into
std
or
es
fcom
leave
push
jecxz
lock
inc
mov
repnz
rol
inc
ja
mov
adc
aam
aam
push
lea
cmp
inc
cli
in
pop
call
xchg
xor
test
xor
fild
fdiv
lock
cmps
push
jae
(bad)
xchg
das
mov
test
or
mov
inc
dec
cmp
fisub
jmp
inc
and
mov
cld
add
cli
in
adc
inc
sti
movs
test
adc
lea
icebp
leave
mov
add
pop
cs
cld
fadd
xor
dec
xchg
jne
stos
inc
sub
mov
int3
inc
jecxz
or
inc
into
push
xor
add
lock
mov
mov
fdiv
imul
js
popf
(bad)
jl
repz
dec
lock
mov
inc
je
cwde
mov
cdq
std
and
mov
adc
push
out
cld
fsubr
dec
jnp
dec
pushf
or
cs
push
mov
repnz
int
cmp
jle
enter
push
sbb
push
push
scas
pop
xor
mov
xor
and
(bad)
jmp
repnz
pop
dec
mov
mov
inc
xchg
mul
sbb
clc
sti
xchg
ja
dec
movs
mov
in
mov
adc
call
pushf
(bad)
xor
(bad)
pop
das
aam
fidivr
in
xor
jo
and
popa
mov
fstp
inc
int
add
sub
pop
ins
push
sub
pushf
cmp
or
inc
xchg
ins
in
out
pop
fwait
mov
dec
add
lock
lock
loope
dec
call
les
cmps
mov
jne
test
outs
aaa
out
xchg
mov
adc
jmp
jnp
xchg
and
pusha
clc
dec
sub
mov
fild
out
push
xchg
cmc
dec
push
push
add
pop
xor
jb
mov
xchg
sub
outs
sar
shl
cmps
into
mov
(bad)
rol
fld
jnp
jp
cmps
jecxz
mov
fwait
inc
(bad)
xchg
ja
retf
xor
scas
(bad)
aas
lods
pop
jb
mov
add
(bad)
dec
je
scas
jno
imul
fdivr
pop
sbb
and
jo
ja
push
icebp
les
imul
sbb
and
push
xor
sub
jle
pop
dec
cmp
sub
mov
in
mov
sar
dec
rcr
push
mov
jae
stos
mov
aam
pop
add
stos
test
hlt
imul
jge
out
xchg
ds
clc
test
mov
ins
ret
jl
xor
cli
repz
arpl
push
aas
adc
cmp
pop
out
rcr
mov
ins
dec
pop
and
xor
or
mov
mov
jmp
mov
mov
aas
add
in
xchg
daa
sar
sti
push
jnp
mov
mov
push
aam
jae
in
aam
add
test
mov
lods
adc
(bad)
ror
aaa
xchg
jl
xor
cld
cld
inc
into
xor
cmp
call
xchg
sub
int
cli
(bad)
and
and
pop
sbb
jb
loop
mov
pop
pushf
dec
pop
popf
fdivr
lahf
std
call
sar
dec
jecxz
inc
and
test
ret
lock
xchg
adc
outs
xchg
mov
bound
xchg
hlt
push
xor
xchg
cwde
lahf
inc
call
neg
and
les
dec
push
mov
mov
mov
ds
push
int3
xchg
jnp
cld
add
cmp
pop
sbb
sbb
mov
cmps
xor
mov
pop
popf
mov
and
rol
mov
repz
jns
scas
mov
loopne
jae
in
cli
cmps
and
sbb
bound
stos
pushf
popa
xor
shr
in
popf
jns
xchg
(bad)
lea
cmps
cmp
or
and
or
jo
push
stos
mov
call
inc
ficomp
push
mov
mov
ins
cmps
into
mov
xlat
shr
cmp
push
jb
pusha
(bad)
xchg
loopne
cwde
xlat
mov
out
inc
sub
aam
xor
(bad)
adc
mov
and
neg
test
xchg
fisttp
push
clc
dec
cmp
(bad)
daa
jb
pop
popf
pop
ins
pop
mov
test
scas
cmp
cli
adc
test
sub
outs
xor
mul
xchg
mov
dec
xchg
cmps
lahf
adc
and
fstp
in
pop
jl
inc
aad
(bad)
dec
xchg
shl
in
cld
pop
dec
xchg
cmc
jmp
aad
lods
push
je
ret
aas
mov
pop
xchg
add
repz
(bad)
xlat
mov
cli
xor
dec
mov
dec
push
mov
nop
call
cli
ds
gs
dec
xor
and
add
or
inc
fnsave
xchg
xchg
test
pop
ss
ret
(bad)
icebp
pop
jne
mov
pop
xchg
mov
arpl
clc
fs
fisttp
xchg
lds
mov
push
inc
(bad)
xchg
scas
(bad)
fwait
xchg
pop
lea
xor
imul
jo
outs
fwait
cmp
push
push
xchg
xchg
mov
jmp
js
jbe
mov
add
pop
pusha
mov
shr
shld
jno
or
retf
xchg
es
(bad)
leave
pop
push
and
cmp
in
push
mov
mov
xchg
stos
leave
or
sbb
loope
xchg
mov
dec
inc
(bad)
mov
(bad)
jp
adc
fild
cmp
push
pop
ins
push
loopne
add
fwait
stos
mov
out
mov
xor
inc
aas
js
addr16
sub
lods
pop
aaa
(bad)
mov
leave
into
movs
inc
mov
push
dec
sub
stc
pop
mov
cmps
dec
jmp
add
ins
or
push
test
in
fadd
inc
jp
mov
aad
into
dec
push
adc
hlt
fist
add
xor
pusha
add
xchg
mov
mov
loop
add
dec
cmps
xor
add
adc
inc
mov
test
add
sub
stos
mov
fist
pop
lods
inc
sub
inc
in
mov
push
lock
mov
inc
popf
ret
std
js
sti
icebp
clc
lods
mov
inc
scas
dec
cs
in
mov
icebp
add
inc
xor
inc
add
xchg
call
fcmovne
cmp
lea
pop
imul
jmp
mov
sahf
ins
xor
sbb
stos
inc
shr
mov
xchg
(bad)
mov
adc
fwait
add
mov
add
out
hlt
popa
add
pushf
movs
dec
js
mov
(bad)
or
ds
rcr
adc
cmp
inc
and
(bad)
(bad)
cmp
push
out
sbb
clc
jle
pop
or
xor
sub
scas
je
or
xlat
clc
sub
and
fistp
pushf
dec
jno
stos
pop
cli
mov
dec
jecxz
mov
aam
inc
das
aad
cmc
add
enter
push
mov
loope
movs
shl
dec
dec
popf
mov
jecxz
rcl
push
ds
hlt
(bad)
lods
jno
push
test
imul
clc
sbb
repnz
or
push
and
add
stos
dec
push
movs
xor
mov
call
jmp
cld
inc
jge
mov
pop
sahf
stos
mov
in
jg
std
(bad)
pushf
and
je
xchg
fxam
das
mov
test
cmp
icebp
jo
cdq
xchg
clc
push
sub
jmp
fcom
cmp
xor
and
mov
lods
pop
test
add
aas
mov
xor
scas
ins
mov
cmp
sub
jmp
daa
into
int
loope
jnp
mov
jge
mov
imul
inc
dec
int3
in
adc
mov
jg
test
outs
daa
stc
repnz
mov
push
cwde
mov
pop
scas
dec
sub
iret
mov
push
loopne
jo
dec
mov
ins
and
mov
mov
cli
fisub
pop
and
jb
lea
and
ds
pop
nop
mov
or
outs
(bad)
rcl
aam
jo
mov
xor
mov
mov
test
pop
sbb
adc
loop
into
jmp
test
aad
repz
add
add
jno
jl
xor
xchg
mov
sar
or
ja
cli
or
sbb
xor
inc
add
xchg
add
lods
jnp
mov
pop
mov
ins
sub
jbe
inc
push
push
xchg
pop
ret
mov
lahf
dec
in
mov
mov
lea
inc
mov
jmp
inc
ins
fwait
stos
ss
pop
shl
cs
repnz
ja
pop
push
add
pop
push
mov
(bad)
(bad)
jle
stc
pop
popf
retf
inc
push
inc
xor
mov
shl
mov
fisubr
retf
test
inc
leave
test
jnp
push
test
xchg
push
loop
jae
inc
scas
push
out
inc
mov
mov
add
bound
mov
push
adc
repz
ins
xchg
xchg
imul
pop
loope
push
outs
stos
cmp
mov
cs
cmps
fwait
retf
cmp
cli
or
and
adc
sahf
pop
(bad)
jb
adc
sahf
jg
movs
xor
test
pop
aaa
and
out
out
cmp
neg
les
jle
inc
hlt
xchg
stc
pop
cdq
in
jecxz
ret
in
sub
rol
fcmovbe
aas
test
pusha
test
cli
test
xor
xchg
jecxz
retf
cmp
loop
sar
pop
jg
push
add
cmp
mov
int3
inc
in
sub
cld
pop
pop
push
xor
ds
add
stos
push
mov
cmps
and
xor
and
div
inc
jo
mov
aas
mov
cwde
ja
mov
cmps
xor
ins
mov
jno
call
icebp
enter
mov
jecxz
jmp
xchg
retf
pop
lds
cmp
sbb
(bad)
xor
mov
jmp
jbe
bound
les
add
and
scas
and
pushf
push
add
pushf
xor
and
mov
fild
scas
pop
shl
xchg
mul
adc
repz
(bad)
pop
dec
mov
loopne
test
jg
mov
jmp
out
jmp
mov
ins
push
mov
pusha
in
les
pop
cld
rcr
jp
cmps
push
jae
and
mov
jb
ins
jo
outs
sbb
mov
outs
cli
icebp
mov
cmp
shr
lds
scas
rcl
in
xchg
movs
jge
sti
rcl
mov
jo
mov
push
es
xlat
cdq
sar
cmp
mov
sub
test
ds
pop
pop
sbb
or
lahf
aaa
and
fstp
add
push
adc
mov
push
mov
sbb
stos
jl
sub
das
xor
ror
inc
mov
pop
jge
xor
movs
(bad)
dec
pushf
xlat
mov
(bad)
xchg
inc
sub
(bad)
rep
xchg
add
mov
(bad)
sub
jmp
adc
fdivr
scas
icebp
inc
ins
mov
pop
cmp
xor
sbb
jl
mov
mov
fistp
lea
test
sbb
pop
add
and
jo
cmp
outs
pop
movs
push
inc
movs
cmp
mov
mov
out
fdivr
loop
push
sub
test
sbb
push
ss
xchg
or
ins
add
test
add
cli
dec
imul
dec
inc
push
(bad)
mov
data16
jb
arpl
jno
inc
cli
dec
and
call
cli
or
pop
(bad)
cmp
jge
xor
aas
mov
fstp
aas
jnp
xlat
lea
and
jmp
ja
dec
jbe
cmps
outs
repz
mov
in
jb
jmp
cwde
sub
xchg
sbb
lahf
inc
repz
fist
add
jp
stos
pop
js
mov
xchg
mov
mov
test
addr16
retf
pusha
ja
(bad)
das
mov
stos
jns
mov
mov
cs
pop
sub
sbb
sbb
xor
dec
jecxz
ja
in
std
mov
xchg
sbb
cmc
fild
mov
ss
jns
push
and
iret
test
inc
call
mov
dec
pop
pop
mov
iret
mov
sub
or
call
cmp
push
ror
call
or
sub
cmps
fsub
mov
xor
sti
data16
and
push
xchg
shl
std
in
adc
ins
test
sbb
loopne
adc
retf
pop
outs
mov
push
cs
int3
jmp
aaa
inc
xchg
daa
jne
add
(bad)
dec
clc
jmp
ds
cmp
pusha
mov
add
adc
push
sbb
jg
cli
xchg
es
pop
xlat
sbb
push
stos
pop
(bad)
mov
mov
call
cmc
jmp
out
fsub
xchg
shr
fsub
fs
cmc
(bad)
pop
stos
adc
push
(bad)
(bad)
pusha
call
sar
inc
cdq
push
mov
push
fcmovne
sub
int
sbb
add
push
dec
mov
jnp
and
cli
mov
std
push
(bad)
mov
shl
mov
(bad)
lods
into
sub
sahf
xchg
in
clc
dec
arpl
mov
outs
cld
cmp
in
inc
in
es
adc
je
or
scas
xchg
xchg
scas
cmp
in
jp
(bad)
sbb
pop
push
enter
outs
xor
push
(bad)
sub
pop
stos
push
pop
in
mov
pop
sar
aaa
mov
jb
push
inc
mov
inc
call
xchg
popa
and
fnstcw
xchg
jo
mov
adc
in
repnz
ffree
pop
push
mov
jae
gs
adc
inc
pop
or
jno
and
mov
jnp
(bad)
xor
xor
xor
jb
xor
or
adc
inc
arpl
js
and
fist
out
inc
inc
fmul
(bad)
(bad)
inc
cmps
fs
xchg
inc
lea
jmp
lods
std
mov
sub
pop
jae
mov
push
and
repnz
hlt
mov
pop
push
clc
sub
xor
into
call
js
mov
cmp
jne
mov
jmp
xchg
bound
add
add
fwait
aas
mov
lods
dec
xor
mov
adc
in
scas
call
xchg
jl
sub
cmps
idiv
mov
jl
xchg
jb
fst
mov
repnz
addr16
xchg
scas
push
adc
loop
fdivr
dec
push
(bad)
xor
jbe
push
or
rcl
and
cmp
mov
mov
(bad)
fcomp
xchg
add
xor
pop
pop
add
push
mov
bound
jge
cmps
cmp
xlat
mov
in
fadd
imul
push
test
test
in
in
xchg
js
inc
mov
sti
dec
xchg
lods
stos
neg
mov
xchg
stos
ror
sahf
stos
inc
loopne
fisubr
and
int3
cld
stos
and
xor
dec
fnstcw
sbb
mov
jbe
mov
mov
fisubr
fdivr
xchg
je
je
iret
pop
push
jb
add
pop
pusha
mov
push
retf
cwde
test
pushf
jmp
pop
stc
sbb
scas
pop
clc
cdq
(bad)
jl
rcl
or
sti
cmc
push
jmp
mov
cmps
sar
mov
cmp
fdiv
cmp
mov
call
int
inc
call
dec
cmp
ja
dec
call
pop
cli
out
or
xor
xor
jo
xor
fcomp
test
aaa
pop
popf
mov
jle
fild
push
xchg
call
nop
jae
sar
xchg
inc
mov
sbb
call
fdivrp
inc
push
mov
inc
(bad)
pop
fidivr
and
fcomp
lods
pop
lock
jo
inc
xchg
xor
inc
mov
dec
mov
mov
push
neg
bound
fdiv
adc
add
jns
(bad)
or
mov
loope
pop
push
jb
out
xchg
inc
(bad)
test
pop
fdivr
fs
ja
iret
ror
mov
sbb
ror
retf
outs
xchg
mov
xor
cmp
lods
inc
cli
sbb
sub
scas
adc
lahf
imul
iret
aaa
push
iret
(bad)
mul
dec
and
and
jmp
jns
ret
lods
and
mov
sbb
push
inc
(bad)
test
pop
sbb
stos
pop
repz
sub
and
rol
movs
test
dec
popf
pop
jne
mov
aas
cmp
and
mov
sub
aam
fist
add
sub
mov
mov
mov
jmp
je
leave
pop
sbb
adc
pop
pusha
mov
add
xor
adc
ins
jbe
movs
jle
popf
ror
les
daa
rcr
xchg
add
mov
aaa
fsub
fwait
xchg
xchg
xor
stc
loop
hlt
dec
fwait
ret
ins
call
sbb
in
fisub
dec
stos
aaa
sbb
jnp
(bad)
ins
loop
jo
cmc
data16
jmp
cmp
iret
imul
pop
mov
mov
aam
mov
loopne
inc
pop
mov
popa
test
xchg
push
call
mov
repz
sbb
mov
stc
jmp
fmul
and
jmp
xor
or
add
cmp
push
cmps
xchg
adc
scas
push
xchg
arpl
xor
sbb
pop
and
fcom
mov
lahf
adc
xchg
vcvtpd2dq
sar
aam
jbe
movs
jle
cdq
loopne
xchg
aam
dec
in
adc
jmp
lods
inc
jae
ret
dec
fdiv
mov
lds
xchg
mov
dec
mov
inc
push
xchg
int
push
popf
xor
jno
js
pusha
and
mov
fld
cli
or
sbb
and
push
add
jb
jp
mov
jnp
movs
lods
das
add
ins
jmp
xchg
aas
mov
push
cmp
je
cwde
out
xchg
aam
dec
retf
movs
push
jmp
xchg
idiv
(bad)
mov
push
fwait
call
test
bound
mov
inc
(bad)
(bad)
and
cmp
jne
cmp
mov
mov
out
aad
mov
bound
pop
fisub
and
jb
fwait
sub
pop
xlat
inc
jo
jnp
movs
adc
(bad)
sbb
or
test
xchg
aad
add
cmp
je
mov
mov
retf
movs
pop
aaa
mov
mov
pusha
mov
mov
jmp
popf
data16
mov
lea
repnz
push
aad
sti
jbe
cmp
arpl
cmp
cwde
xchg
arpl
cli
or
adc
inc
ja
add
push
jmp
cmp
sbb
mov
jl
iret
mov
icebp
push
jg
test
inc
xchg
mov
pop
pop
repnz
mov
mov
add
(bad)
cmc
stos
fdivp
inc
outs
scas
cmp
push
call
and
pop
push
stos
pop
ins
push
mov
add
fld
lea
fld
jno
mov
sbb
dec
dec
(bad)
push
pop
mov
in
(bad)
adc
xor
iret
test
jmp
pop
mul
cdq
adc
out
jmp
and
arpl
mov
xchg
aas
div
xchg
in
repz
xchg
test
push
cmp
cmp
in
push
fnstenv
pop
or
pop
push
test
push
xchg
popf
mov
inc
(bad)
out
das
fwait
clc
jb
pop
ss
sbb
adc
fs
fstp
movs
cmp
test
aaa
dec
pop
test
sub
sti
add
mov
dec
pushf
in
xchg
je
xchg
jno
ror
and
scas
xor
test
cmp
xchg
add
ss
aam
std
push
xor
sub
les
fs
push
cs
mov
mov
iret
jl
cli
das
mov
jbe
jae
fcom
and
add
xor
jg
mov
dec
(bad)
mov
inc
out
xor
sbb
pop
push
mov
bound
sahf
pop
add
cli
test
jecxz
mov
pop
ja
ret
xor
popf
jns
mov
cmp
enter
in
pop
and
jne
cmp
(bad)
mov
sub
sbb
mov
xor
aas
mov
fistp
mov
jp
mov
cmp
push
inc
(bad)
sar
es
addr16
push
jnp
(bad)
pop
cli
movs
aam
mov
loop
es
shl
jmp
jb
movs
xchg
add
jmp
pop
aam
cmp
out
cmp
push
or
scas
cmp
int3
lea
pushf
loopne
push
pop
add
inc
cmp
or
sbb
jl
retf
mov
and
out
mov
leave
sti
jbe
jge
push
lods
push
shl
xchg
xchg
jb
fcmovbe
xchg
add
pop
xchg
fwait
stos
lds
js
xchg
mov
aam
ret
add
xchg
xchg
jp
or
hlt
neg
jle
xor
lods
sbb
jns
push
or
mov
mov
sar
sub
xor
dec
xor
mov
imul
sbb
div
cmp
dec
out
loope
lods
mov
pop
inc
jl
dec
ret
mov
dec
xchg
repnz
je
mov
cmps
das
xchg
push
idiv
bound
icebp
(bad)
out
test
bound
cwde
(bad)
push
push
daa
jecxz
lods
inc
fldenv
sbb
xor
inc
pop
inc
popf
cmps
mov
(bad)
sar
clc
inc
jae
hlt
xor
pop
add
mov
mov
gs
mov
or
xor
aam
adc
jge
lea
mov
pusha
xchg
push
pop
(bad)
mov
xchg
mov
je
call
shl
pop
js
sub
jmp
xor
jl
cmps
push
sub
scas
mov
push
out
or
push
jg
enter
add
xor
imul
adc
mov
(bad)
rol
shr
inc
mov
dec
xchg
loopne
rep
add
retf
cli
mov
ficomp
cmp
mov
mov
mov
aas
cli
in
rol
inc
adc
jo
cmp
ds
mov
jle
inc
jae
pop
lods
aaa
sbb
test
jns
xor
movs
(bad)
arpl
and
push
add
cmp
or
inc
bound
inc
mov
mov
cmp
addr16
loope
arpl
cli
xchg
(bad)
bound
in
pop
fst
test
ins
sbb
jne
mov
sbb
stc
loop
loop
dec
dec
lahf
fbstp
ret
imul
fild
and
sbb
test
mov
out
xchg
ds
push
pop
add
(bad)
and
pop
xor
cmp
add
imul
movs
ss
mov
xor
or
rol
out
jb
test
fdiv
mov
or
shl
stos
mov
mov
popf
ds
fcomi
test
jmp
je
dec
stos
xor
repz
jne
daa
pop
sbb
push
mov
mov
mov
jmp
push
pop
inc
cmp
inc
or
adc
gs
dec
cmp
sbb
cmp
fdivr
fcomp
add
fisubr
(bad)
mov
fs
mov
outs
lock
pusha
dec
repnz
aam
(bad)
sbb
scas
xchg
mov
lock
jle
test
repnz
cmps
adc
das
(bad)
sti
rcr
add
arpl
push
movs
mov
push
cmps
sbb
jmp
sub
and
jo
ss
add
shl
mov
pop
int3
icebp
call
sub
lea
mov
movs
dec
(bad)
xchg
popa
and
sti
std
jp
sbb
test
inc
mov
cmc
loop
into
shr
movs
jp
inc
fidiv
pop
xor
xchg
mov
cmp
cmp
fsubr
jge
sub
mov
jmp
pop
sbb
push
xor
and
aas
nop
push
ror
fimul
mov
std
pop
daa
push
cmp
int
sbb
dec
sbb
lea
cmps
shl
stos
in
shl
bound
out
and
outs
mov
add
fcomi
mov
mov
pop
jecxz
ficom
cmp
pop
fnsave
je
outs
test
or
mov
fist
jmp
add
cmp
jecxz
nop
jle
inc
adc
push
pop
mov
sbb
(bad)
std
mov
or
mov
cmp
les
or
shl
cmps
lock
xor
aad
jmp
sti
pop
inc
add
adc
inc
(bad)
pop
jo
push
or
mov
(bad)
mov
sub
pop
sti
rcl
(bad)
(bad)
jae
rol
jne
and
pusha
pusha
xchg
push
sub
cmp
xchg
test
(bad)
fisubr
jecxz
dec
cmp
pop
mul
mov
and
clc
nop
xor
sbb
sar
mov
mov
add
dec
js
cwde
inc
mov
push
or
stc
loop
in
sbb
jnp
jno
jo
cs
xchg
mov
ret
rol
call
jo
xor
fwait
sub
nop
jge
stos
xor
xlat
xchg
sub
xchg
das
mov
pop
out
add
xor
ins
loopne
push
xor
sti
xchg
ins
ror
mov
js
lods
mov
adc
retf
cwde
xor
mov
push
ds
repz
xchg
xor
sbb
pop
ins
push
test
sub
mov
out
stc
and
cmp
es
je
and
sbb
adc
popa
je
adc
call
dec
inc
retf
adc
inc
push
mov
pop
xchg
int3
test
mov
ss
fadd
lahf
mov
push
xchg
mov
sbb
lock
jmp
pop
cmp
cli
xor
mov
imul
inc
cmp
stos
cmp
das
mov
adc
and
cwde
push
mov
lods
jp
(bad)
dec
pop
test
inc
call
fld
test
pop
xchg
int3
xchg
rol
in
rol
cwde
mov
jg
mov
add
stc
loope
stos
fisttp
mov
lock
out
out
push
out
aas
jbe
dec
sbb
(bad)
out
lods
mov
jmp
je
int
xor
xor
lods
jae
(bad)
pop
cmp
lods
push
xor
leave
add
jmp
jae
sahf
adc
and
fild
sbb
and
(bad)
inc
jnp
xchg
jae
dec
lock
mov
in
dec
cld
sbb
add
jb
dec
jmp
xchg
shl
sbb
xor
push
adc
jno
fwait
das
mov
clc
push
arpl
jb
rcl
add
(bad)
aas
(bad)
into
xchg
add
add
outs
loop
ficomp
les
and
fiadd
mov
jp
rcl
loop
dec
sbb
jnp
cmp
lock
mov
into
and
ss
mov
imul
sbb
add
pop
pop
mov
sub
ins
bound
jge
mov
or
and
enter
jmp
lds
fsubr
ffree
(bad)
push
xor
sub
cmps
mov
sbb
sahf
inc
push
xchg
mov
repnz
xchg
sub
ds
add
dec
mov
push
mov
jno
les
arpl
out
or
fdiv
push
jne
sbb
scas
push
mov
pop
repz
add
or
mul
add
mov
loope
lock
xchg
ja
rol
xchg
sub
add
test
inc
xchg
mov
sbb
stc
(bad)
repnz
repz
pusha
lods
lods
fs
mul
sub
push
out
xor
push
or
stos
test
ds
aas
lahf
clc
jbe
add
fst
jns
xor
fild
mov
je
retf
adc
pop
xchg
xchg
pop
les
inc
stos
dec
ret
pusha
sahf
loop
adc
mov
add
fsub
(bad)
pushf
div
test
test
(bad)
clc
std
fsub
inc
jmp
in
cs
ds
icebp
fist
cmp
dec
test
xor
jle
fxch
popf
dec
inc
mov
fcmovnbe
aas
mov
dec
push
pop
xor
cmp
ja
and
sub
pop
iret
pop
jno
push
pop
stos
inc
outs
mov
ins
xchg
into
mov
aad
add
pop
jecxz
retf
dec
xchg
int3
test
cwde
popa
and
movs
xor
test
sbb
cwde
pop
ja
mov
xchg
mov
data16
lahf
inc
repz
hlt
das
pop
dec
mov
(bad)
ss
push
inc
mov
pop
push
adc
nop
mov
rol
jmp
mov
sub
and
or
mov
sub
mov
add
ins
in
rcl
les
sub
(bad)
dec
xchg
out
popa
aam
inc
xor
retf
or
sbb
sub
xchg
sub
jle
sahf
test
pop
mov
sbb
aad
enter
pop
jg
mov
aaa
or
mov
cwde
xor
out
out
adc
adc
inc
aaa
je
add
call
or
cmp
popf
mov
xchg
in
add
push
mov
dec
sahf
test
(bad)
ror
mov
inc
pop
add
stos
aad
outs
xchg
lods
inc
jmp
out
sbb
cli
jmp
pop
call
fmul
jns
xor
pop
mov
movs
xchg
adc
(bad)
(bad)
movs
clc
jp
jno
into
inc
adc
ss
fnstcw
shr
push
push
dec
out
lods
jmp
les
pop
mov
pusha
mov
adc
icebp
xchg
add
push
fwait
lahf
mov
cmp
cld
out
jl
xchg
dec
leave
cmp
repz
imul
movs
or
loopne
and
call
jecxz
sbb
ss
or
imul
mov
fsubr
outs
xor
mov
xor
leave
push
adc
push
stos
jnp
mov
dec
mov
sahf
jg
cmc
rcl
scas
lds
fld
popf
mov
mov
mov
jo
mov
cmc
xor
sbb
xchg
lods
jo
push
jo
inc
scas
sbb
pop
mov
test
pop
jmp
jno
aad
sbb
das
mov
mov
outs
popf
movs
cdq
add
and
rcl
retf
jne
push
mov
dec
xchg
std
mov
cld
sbb
cli
shl
mov
addr16
mov
loop
(bad)
pop
push
stos
dec
jecxz
shr
icebp
inc
retf
sub
dec
pop
imul
pop
lahf
retf
xor
fsubr
jmp
adc
sbb
adc
imul
xor
adc
and
int
add
jbe
mov
div
loopne
jmp
cmc
lahf
or
mov
pop
mov
idiv
sbb
test
leave
jp
ds
cld
fist
xor
pop
dec
sti
push
pop
lahf
mov
fcomp
(bad)
jmp
pusha
push
xor
inc
push
jns
pop
sub
pop
fistp
test
aas
movs
xor
mov
aaa
or
(bad)
xchg
cmp
repz
pusha
push
inc
stos
pop
call
call
rol
stos
les
lods
push
je
test
lods
into
ror
cmp
cmp
and
xor
pop
test
xor
mov
outs
rcl
xchg
clc
bound
leave
and
add
adc
and
mov
jns
test
pop
out
mov
lods
sbb
loop
(bad)
dec
mov
cld
sbb
(bad)
ret
mov
call
jecxz
lahf
popa
add
mul
mov
fsub
jp
pushf
inc
retf
and
idiv
mov
sub
xor
je
push
mov
dec
inc
stos
pop
jmp
jp
pop
cmp
xor
popa
das
xor
cmp
push
lahf
adc
mov
mov
sbb
dec
xor
jg
ins
aad
loopne
stos
les
dec
lock
ret
xor
test
pop
aam
out
in
popf
jns
fadd
push
stos
sbb
fldcw
pop
push
addr16
jns
outs
cmp
mov
jmp
push
push
cli
push
ss
jb
mov
jge
lahf
push
pop
shl
push
mov
jl
iret
test
mov
gs
test
repz
dec
test
mov
dec
int3
not
sbb
aas
scas
sbb
popf
test
fcmovu
cmp
mov
xor
pop
fxch
(bad)
fs
les
pop
cs
mov
retf
inc
sti
fsubr
(bad)
clc
push
push
jb
cld
sbb
sbb
mov
mov
fisub
xchg
sahf
scas
loope
pop
push
pop
fdivrp
xchg
xor
xchg
addr16
pop
scas
pop
repz
pusha
add
fs
gs
(bad)
mov
push
mov
push
arpl
fdiv
icebp
fcomp
inc
pusha
test
cld
sub
clc
stc
fnstcw
sbb
les
push
pusha
call
stos
xor
iret
imul
sbb
into
jne
fs
xor
enter
jl
cmps
xor
scas
mov
sub
cld
mov
sbb
lods
and
mov
xchg
bound
retf
retf
jecxz
test
push
cdq
xchg
mov
xchg
icebp
jecxz
imul
xor
shl
sbb
pop
outs
pop
mov
cdq
mov
add
frstor
mov
adc
frstor
cdq
or
add
pop
xor
test
push
xor
call
jb
outs
inc
cmp
pop
jmp
push
or
ror
shr
xchg
movs
xchg
xor
fmul
icebp
fmul
pop
lock
fidiv
pop
add
cmp
jbe
ins
lea
fsubr
jmp
mov
jbe
sbb
mov
adc
retf
(bad)
adc
into
mov
aaa
and
call
jmp
movs
aad
stos
repnz
pusha
lock
or
sti
nop
sbb
sbb
mov
stos
add
loopne
out
scas
fimul
xchg
cwde
inc
mov
push
cmp
icebp
lock
clc
adc
lahf
sbb
or
mov
xchg
ds
inc
les
push
inc
and
and
das
test
aad
inc
(bad)
pop
push
movs
sub
mov
xor
out
mov
push
mov
(bad)
lahf
in
xchg
mov
push
xor
fmul
mov
scas
push
sar
test
repnz
mov
sub
cmp
shr
dec
pushf
or
mov
lahf
test
add
push
jnp
cmps
and
add
imul
sbb
into
in
inc
xor
jecxz
xchg
xor
sbb
stos
pop
jecxz
cmp
xchg
jge
in
dec
retf
(bad)
cmps
add
push
mov
movs
clc
aaa
call
cs
test
jecxz
outs
mov
lock
mov
cmp
push
jp
pop
gs
xor
dec
mov
add
leave
jmp
or
cmp
ds
inc
pop
mov
pop
mov
aas
(bad)
test
aaa
shr
data16
scas
push
popf
in
xchg
rcr
sbb
jg
(bad)
mov
je
call
retf
inc
lods
(bad)
je
push
clc
sub
sbb
call
sub
pop
push
outs
test
fsubr
mov
fsub
jne
out
or
data16
jg
pop
lods
push
xor
bound
or
fstp
mov
imul
and
dec
mov
xchg
fs
jno
in
movs
popf
jnp
adc
xor
jmp
dec
(bad)
fdiv
scas
aam
add
xchg
dec
icebp
push
cmp
rcr
cld
inc
ret
pop
dec
jg
cmps
or
lea
jns
xchg
call
cli
cs
pop
sbb
pop
pop
jge
xor
outs
jae
push
mov
sahf
imul
das
mov
push
out
jb
mov
lahf
repnz
add
fs
inc
push
xchg
movs
xchg
daa
mul
test
fs
sub
daa
icebp
fldenv
jmp
cld
dec
cs
(bad)
fist
dec
jb
dec
mov
outs
lods
inc
cs
mov
mov
jmp
pop
add
xor
inc
mov
xchg
cmp
movs
lods
mov
inc
out
mov
xchg
xchg
add
mov
fbstp
test
mov
lods
pop
xchg
ja
cli
pushf
jmp
xchg
xor
stc
movs
shl
pop
mov
imul
fistp
cmp
aad
repz
add
push
cdq
pop
arpl
push
sbb
mov
sbb
push
jb
ficom
ss
xor
fiadd
mov
mov
in
sti
xchg
inc
lods
repz
sbb
inc
lea
sar
xchg
stos
mov
xor
mov
inc
ja
mov
imul
mov
(bad)
push
or
jmp
cmp
add
adc
mov
ins
mov
retf
cdq
dec
inc
mov
repnz
sbb
aas
fcom
xor
and
mov
outs
out
into
test
push
cs
fbstp
aam
pop
pop
lods
and
mov
mov
ret
mov
xchg
in
xchg
stos
leave
cmp
xchg
cs
repnz
mov
jp
sub
iret
lds
jne
pop
xchg
adc
ds
ror
mov
and
inc
or
sub
jg
lods
xor
call
leave
fistp
loop
jne
movs
jle
mov
xchg
sbb
xchg
mov
xchg
cli
(bad)
ror
bound
mov
xor
sti
call
mov
inc
imul
sub
repnz
and
dec
xchg
aas
ins
pop
test
or
mov
mov
sub
outs
jmp
sbb
enter
or
xchg
aas
xchg
add
inc
inc
pushf
pop
adc
add
mov
sbb
push
arpl
fist
jmp
mov
lahf
dec
ficomp
hlt
jno
inc
repnz
ror
aas
test
arpl
stc
icebp
test
lock
inc
jecxz
jae
shr
push
retf
sbb
stos
pop
fs
scas
dec
sbb
mov
fbld
cli
or
xor
xor
jecxz
(bad)
ja
pop
xor
pop
adc
sub
out
add
mov
ret
xor
pusha
or
pop
add
ja
mov
adc
jecxz
dec
ins
jmp
add
adc
inc
(bad)
sbb
or
inc
mov
pop
out
xchg
mov
ds
jbe
jb
in
sbb
sub
mov
or
in
in
daa
xor
jecxz
mov
lods
aad
fdivr
shl
(bad)
dec
mov
mov
loopne
dec
sub
fsub
(bad)
mov
jg
call
retf
push
test
cmp
xchg
int
imul
mov
inc
or
fldcw
pop
jmp
jl
mov
js
add
pop
(bad)
imul
jnp
into
test
push
or
cdq
stos
inc
clc
fs
jbe
test
test
pop
xchg
int3
cwde
adc
cmps
push
push
mov
add
push
mov
mov
add
(bad)
cmp
sbb
sub
inc
popf
and
sbb
sahf
push
add
mov
mov
enter
sti
dec
push
sbb
inc
sbb
sub
mov
lods
sub
mov
pop
sti
fistp
loop
jbe
stos
pop
loope
repnz
xchg
in
push
not
xchg
rcr
mov
outs
jae
cmp
enter
lods
push
jecxz
fmul
cs
in
clc
push
cld
xor
pop
outs
push
cmps
inc
ds
(bad)
mov
dec
inc
mov
cld
std
sbb
and
xor
das
test
leave
dec
pop
stos
bndldx
sbb
xor
xor
jecxz
repnz
pop
call
les
xor
(bad)
mov
add
cld
ret
mov
mov
inc
out
into
dec
cs
(bad)
fstp
rcr
sbb
pop
outs
push
add
pop
scas
mov
cld
cli
or
and
cmp
jo
adc
and
cmps
push
sub
mov
jmp
aad
data16
popa
cli
mov
imul
ror
lods
stos
repnz
data16
and
(bad)
jno
nop
xchg
dec
jecxz
aam
cmp
jp
xor
inc
call
add
cmp
or
popa
xor
mov
inc
outs
mov
arpl
pop
jno
cmps
inc
repz
inc
push
js
ja
mov
dec
test
xchg
in
or
mov
mov
fisubr
xchg
mov
ds
fmul
mov
aad
sub
cli
stc
xlat
and
and
inc
cmps
cmp
add
xchg
fwait
into
mov
cmp
add
rcr
jp
fadd
sbb
add
dec
imul
call
sub
cmp
jge
pushf
pop
cmc
cmps
(bad)
pop
xchg
repnz
jecxz
pop
sub
xchg
pop
call
xchg
pop
in
mov
mov
add
int3
cmp
retf
cmp
pop
pushf
or
mov
fstp
jmp
gs
inc
fld
sbb
pop
lods
pop
(bad)
mov
fs
mov
call
sti
(bad)
aam
jne
shl
aad
jecxz
cmps
mov
popa
fcom
mov
mov
scas
dec
popf
arpl
jmp
xor
in
sbb
fisttp
dec
iret
stc
fcomp
cmp
bound
dec
cmp
dec
fst
rcr
gs
add
and
repz
or
jnp
mov
xor
mov
aaa
call
scas
pop
repz
dec
xchg
les
and
fild
sbb
lahf
cmps
xchg
call
(bad)
mov
cmp
inc
ficomp
add
adc
push
mov
jp
mov
popf
dec
inc
mov
rcl
mov
aas
test
or
mov
mov
mov
ja
fwait
test
call
fisubr
pop
movs
jno
mov
adc
push
(bad)
stos
test
fidiv
mov
mov
push
into
xchg
test
lods
push
fisttp
sub
add
jns
xor
push
test
pop
push
mov
pop
mov
mov
dec
leave
xor
call
fnstenv
push
pusha
jb
sbb
and
dec
inc
mov
fs
xlat
sahf
sbb
fsubr
daa
int
pop
rol
push
cmps
inc
idiv
jmp
xor
out
mov
push
(bad)
sbb
in
cmc
pusha
inc
shl
clc
in
ret
cwde
xchg
dec
cli
pop
into
or
sub
jmp
arpl
mov
inc
and
rcl
jmp
add
imul
sahf
jne
movs
sbb
test
push
out
mov
inc
jb
jle
mov
pop
xchg
in
sti
ins
bnd
aaa
out
sti
mov
shr
movs
sar
outs
ja
stos
xchg
js
cld
fdivr
mov
hlt
aaa
sbb
int3
(bad)
fstp
add
or
fwait
je
dec
xchg
cmps
cwde
pushf
dec
and
inc
test
das
mov
push
outs
push
and
and
sub
jb
dec
pushf
imul
add
mov
push
sbb
dec
jecxz
xchg
ds
pop
pushf
inc
sbb
jb
scas
repz
mov
xchg
jecxz
mov
outs
add
cli
dec
xchg
cmps
dec
repz
aam
cmp
data16
sbb
jp
or
movs
dec
cs
sub
(bad)
sbb
ja
fisub
xor
cmp
loop
mov
mov
bound
sub
ficom
lock
inc
mov
pop
cdq
stos
stos
popa
retf
mov
out
sub
dec
or
push
xchg
mov
pusha
adc
imul
mov
xor
fild
xor
pusha
movs
outs
inc
xchg
jns
cmps
mov
sub
into
sbb
div
pop
pop
ficom
sbb
es
mov
lock
fsub
addr16
test
xor
dec
jmp
or
mov
and
add
vpminsw
mov
add
xchg
ret
mov
out
fisttp
test
and
and
pop
sbb
jo
aaa
aaa
push
xchg
clc
inc
test
jo
fisub
add
(bad)
cmp
add
xor
add
movs
ds
mov
pop
cdq
iret
xchg
inc
lahf
mov
inc
push
push
cmps
inc
cmc
mov
dec
mov
mov
cmp
sti
cmc
and
sbb
movs
jg
xchg
mov
push
inc
loope
mov
mov
xor
or
cli
in
dec
mov
gs
mov
sbb
test
pop
fwait
jmp
mov
add
push
and
and
jl
xchg
pop
(bad)
cmp
ins
gs
aaa
sar
pop
popf
mov
sbb
or
xchg
xor
out
jo
outs
jne
stos
xor
iret
fld
aam
push
hlt
mov
mov
lds
cdq
popf
out
add
mov
xchg
sti
scas
fadd
es
mov
icebp
pop
clc
das
pop
and
call
mov
jo
jnp
mov
(bad)
pop
into
cli
sub
add
adc
add
and
cmps
pop
cmp
sbb
push
inc
leave
xlat
lahf
pop
mov
pop
jecxz
(bad)
mov
popa
mov
out
push
repnz
cs
dec
movs
test
imul
cmp
repnz
mov
clc
ds
in
pop
in
jo
dec
ror
push
jle
inc
cs
mov
repnz
neg
xchg
(bad)
pop
dec
jno
shl
imul
fist
mov
cwde
sbb
jl
fist
aam
ins
pop
mov
dec
xchg
loop
push
sar
push
dec
int3
shr
mov
bound
movs
stos
xor
(bad)
test
stos
fild
lods
mov
ds
sub
xor
pop
gs
jns
popa
xchg
mov
xchg
push
or
inc
loope
or
pop
pop
retf
inc
add
mov
jno
dec
sbb
cli
nop
jge
mov
or
repz
pop
jbe
fisub
sti
sar
mov
and
and
rol
jecxz
xchg
inc
sbb
cmp
inc
stos
(bad)
dec
rcl
inc
das
xchg
cmc
enter
jo
dec
fwait
adc
add
cmp
xchg
xor
cmp
aas
add
pop
scas
pop
cli
push
mov
inc
xchg
scas
xor
(bad)
cdq
es
les
outs
popf
push
mov
call
test
mov
lea
cmps
test
imul
cmp
leave
sbb
test
jp
sbb
int3
(bad)
push
loope
jae
inc
test
jge
mov
fst
xchg
dec
sub
outs
stc
leave
sbb
and
add
fwait
cmp
add
imul
add
sub
lods
mov
out
stc
out
mov
jbe
add
iret
lahf
dec
call
fisubr
movs
scas
mov
nop
popf
cmp
ret
neg
loop
add
mov
pop
call
(bad)
rcr
jnp
jle
dec
pop
mov
pop
call
sub
dec
jmp
pop
jo
sbb
cmp
add
iret
or
xor
xor
xlat
and
dec
ins
test
mov
stos
imul
jge
ins
fiadd
mov
dec
sti
in
jecxz
jmp
les
mov
outs
addr16
mov
cmp
test
fadd
mov
sub
jns
xor
or
xchg
push
sbb
out
mov
pushf
adc
clc
sbb
stc
cmp
je
mov
sbb
repnz
jns
or
xchg
jne
fwait
loope
push
push
cmp
aam
push
mov
pop
inc
lods
sub
mov
cwde
sbb
mov
and
(bad)
xchg
jp
mov
sub
and
mul
fidivr
jecxz
std
or
sbb
fidiv
ss
pop
test
mov
sub
push
in
cli
or
leave
adc
add
or
jg
stos
imul
add
dec
and
repz
aaa
mov
pop
daa
mov
inc
dec
movs
dec
hlt
nop
push
and
movs
pushf
sub
ins
or
test
test
mov
cmp
lods
push
ret
gs
xor
adc
dec
mov
pop
sub
fldcw
jnp
fcomp
jno
mov
pop
lahf
or
fsubr
mov
xchg
daa
aas
fmul
xchg
aaa
mov
sbb
inc
xlat
(bad)
lock
jecxz
mov
dec
stc
mul
xchg
mov
mov
(bad)
or
lods
div
cs
call
rcl
jge
mov
push
fwait
stos
lods
mov
ds
(bad)
in
and
es
adc
imul
je
test
sti
clc
xchg
aaa
mov
gs
lea
mov
mov
sub
movs
stos
mov
sbb
mov
and
loope
cld
repz
push
mov
push
cs
clc
clc
jne
xor
sbb
sahf
inc
es
xchg
mov
mov
push
(bad)
jg
int3
das
cwde
into
pop
adc
or
sub
mov
sbb
(bad)
and
xor
add
jnp
xchg
push
cld
mov
lahf
dec
hlt
call
iret
pop
mov
mov
ja
mov
sbb
fsub
lods
fnstenv
jecxz
fdiv
add
pop
rol
data16
jp
lods
inc
pop
jns
mov
mov
int
ds
into
js
jno
int
cmp
mov
mov
test
cmp
movs
add
push
dec
retf
cmp
push
mov
dec
cwde
in
xchg
je
xchg
popa
sub
rol
mov
add
fcomip
scas
cld
repz
push
test
jecxz
fisubr
cmp
(bad)
jmp
push
stos
sbb
mov
push
mov
push
rol
lock
xchg
jle
ja
mov
xor
test
pusha
lods
ja
lea
add
mov
pop
neg
test
xchg
ins
mov
xor
xchg
pop
pop
std
rol
imul
ja
cdq
jmp
xor
mov
mov
fist
es
cld
xlat
(bad)
sbb
xor
dec
and
xchg
mov
sahf
xchg
jl
sti
jbe
inc
cmp
pop
push
cdq
and
and
inc
adc
ja
movs
mov
out
xchg
xor
sti
push
neg
inc
movs
jo
xchg
(bad)
popa
(bad)
mov
js
fdiv
jmp
ret
sub
stos
ss
xchg
ret
fcom
mov
or
fdivr
ret
xor
adc
sti
push
and
fstp
imul
add
pop
push
enter
pop
gs
sub
xchg
jno
xchg
gs
sub
fstp
mov
repnz
pop
jb
jno
xchg
loopne
xchg
mov
dec
leave
mov
or
not
xchg
push
add
xor
repnz
retf
push
cmp
pop
sbb
mov
jle
or
pop
lea
lods
mov
mov
fisttp
push
pop
cmp
pop
sbb
or
add
lea
cmp
(bad)
xchg
xor
shl
outs
gs
mov
push
xchg
les
and
mov
xchg
dec
jb
sahf
mov
inc
(bad)
shl
mov
cmp
dec
ret
add
cmps
outs
pop
das
mov
dec
lea
xlat
pop
call
pop
aas
fisub
or
or
mov
pop
into
sbb
rdtsc
push
pop
clc
shl
fnstsw
inc
popf
push
ret
jl
leave
loopne
retf
test
stc
test
repz
mov
stos
int
add
test
das
pop
(bad)
rol
call
sub
cld
adc
push
stos
aas
inc
sub
mov
mov
ficom
pop
and
and
push
or
push
sar
ja
xchg
retf
lods
xchg
add
jp
stos
jle
mov
dec
inc
movs
dec
into
mov
lahf
jb
push
movs
loope
ficomp
sub
mov
das
inc
jmp
dec
ins
mov
inc
jecxz
ficomp
xor
repz
xor
dec
pop
dec
fwait
cwde
mov
loop
or
and
and
dec
push
add
ficomp
xchg
dec
cmp
xor
sub
mov
add
jp
popf
ja
mov
ins
mov
adc
mov
xchg
sub
addr16
imul
jmp
jp
mov
in
push
and
cli
aad
js
pop
jo
dec
ficomp
sub
xchg
dec
add
dec
cli
shl
jmp
fnstenv
xor
sbb
adc
jae
test
xchg
add
jl
fadd
ret
inc
mov
cmp
mov
mov
icebp
push
dec
scas
jns
in
xchg
sbb
lods
mov
aaa
pop
cmp
mov
jbe
or
sub
in
ds
xchg
mov
xchg
icebp
or
xchg
jbe
jne
into
xor
add
xor
xlat
addr16
jnp
mov
je
mov
or
sti
sbb
jbe
lahf
jo
xchg
cld
push
xchg
loopne
push
xchg
clc
push
dec
int3
fdiv
jne
outs
test
add
std
xor
mov
inc
lea
(bad)
xor
(bad)
icebp
fist
add
jle
test
dec
or
mov
sti
outs
(bad)
es
or
pop
xor
or
add
ins
mov
je
xlat
mov
inc
dec
pop
sub
push
inc
pop
jno
push
test
call
xchg
sbb
cli
xlat
lods
and
ins
xchg
popa
jne
mov
popa
and
neg
mov
mov
jecxz
mov
push
jp
pop
outs
push
lea
jns
fnstsw
dec
icebp
(bad)
aas
mov
jbe
je
fsub
xor
sbb
pop
adc
xor
xchg
stos
lods
adc
pop
pop
ret
stc
xor
aad
retf
dec
add
shl
js
iret
mov
add
mov
repnz
addr16
scas
aas
and
fild
mov
ds
sar
jp
cmp
dec
cwde
sbb
pop
mov
xchg
call
xchg
arpl
xor
add
test
iret
and
addr16
test
sbb
mov
int3
icebp
pushf
daa
xchg
sti
jp
inc
push
pop
stos
pop
lock
loopne
sub
adc
icebp
rol
(bad)
mov
jae
adc
retf
ja
mov
adc
int
pop
ret
sbb
inc
das
cwde
sub
pop
scas
test
imul
jb
jl
int
sbb
add
imul
sbb
mov
push
fcomp
loop
push
addr16
jg
fcomp
in
sbb
out
fist
(bad)
cmps
sar
inc
ja
mov
lock
loope
dec
lods
add
hlt
dec
daa
ds
push
data16
es
cmp
sub
scas
mov
int3
jnp
cli
or
and
add
fwait
cmp
(bad)
push
pop
rcr
sbb
xor
icebp
stos
and
(bad)
sbb
inc
js
cdq
push
repz
mov
cmc
mov
adc
push
das
ret
mov
repz
mov
lods
xor
cmp
clc
xor
sbb
sub
(bad)
mov
pop
into
dec
xchg
xchg
arpl
and
xor
aas
mov
mov
scas
or
lea
inc
call
sti
jbe
js
push
adc
inc
pushf
les
or
fadd
mov
xchg
popf
stos
outs
adc
pushf
idiv
jecxz
ins
cwde
movs
inc
in
fisubr
or
fisubr
jo
dec
lahf
sbb
mov
fst
xchg
adc
stc
jnp
lock
adc
xor
pop
add
dec
mov
inc
popf
xchg
stos
push
pop
es
cld
jmp
jp
sbb
popf
pop
retf
mov
lahf
dec
retf
cmp
xlat
stos
or
lods
mov
call
(bad)
icebp
xchg
xchg
lods
sub
pop
fimul
sbb
sbb
pop
pusha
pop
mov
call
out
adc
or
ss
xor
mov
dec
dec
fisubr
lods
xor
mov
dec
std
aam
xor
jge
dec
mov
dec
in
in
pushf
cdq
jae
std
(bad)
icebp
adc
jmp
mov
pushf
jl
xchg
hlt
test
rol
mov
cs
clc
fild
and
pop
outs
and
cs
push
jmp
sub
jl
(bad)
and
jno
mov
adc
ficomp
mov
movs
xor
movs
popf
imul
retf
xor
pop
jbe
test
shl
xchg
mov
mov
jecxz
mov
test
push
mov
xchg
mov
cld
jecxz
push
lods
fist
push
test
into
push
sti
add
or
and
mov
jmp
mov
ins
adc
int
add
cmp
ins
pusha
sahf
push
xor
xchg
cmp
inc
in
call
jnp
dec
pop
dec
stos
pop
repz
xchg
sbb
cli
stos
xchg
push
retf
lods
mov
ja
mov
xchg
sahf
mov
rcl
pop
or
xchg
lods
inc
in
cmp
dec
cwde
pop
ins
inc
scas
inc
sub
mov
xchg
ret
aaa
fcomp
jmp
pop
add
sub
adc
inc
bound
out
mov
cmp
aam
add
dec
fldcw
repz
js
shl
shl
xchg
mov
(bad)
into
sub
mov
dec
scas
test
fimul
aaa
cmp
in
data16
add
adc
push
xchg
or
pop
fmul
repnz
xchg
clc
jb
pop
sub
sbb
pop
cs
sbb
adc
pushaw
mov
add
and
out
pop
mov
jbe
mov
ins
call
xor
jmp
add
jg
mov
gs
mov
add
int3
loope
ins
popf
scas
jno
push
rcr
inc
sbb
ja
dec
xchg
cmp
jg
inc
sbb
mov
lods
sbb
clc
jo
add
int
push
inc
jb
in
pop
mov
(bad)
lahf
push
sbb
and
out
inc
(bad)
sbb
pop
jae
lea
xor
imul
push
push
test
outs
mov
mov
sbb
dec
adc
inc
fisubr
cs
lods
pop
lock
sbb
es
ss
mov
xchg
jmp
mov
xor
aas
xor
adc
js
xchg
push
xor
loope
push
aaa
dec
sti
fist
icebp
ins
inc
push
mov
pop
xchg
rol
loop
pop
xchg
add
movs
call
cdq
mov
cmp
clc
xchg
retf
push
push
aam
push
cmp
cld
test
pop
js
or
push
movs
jo
imul
retf
clc
data16
xor
xor
das
leave
jne
pop
jae
jge
xchg
adc
xchg
clc
sub
and
xchg
cmp
jbe
fwait
ins
cli
mov
aas
cdq
aam
je
xchg
dec
or
ror
lods
stos
in
popf
data16
ret
mov
add
loope
(bad)
jno
in
cwde
dec
jecxz
fadd
cmp
and
xor
inc
mov
ins
push
fwait
dec
pop
jle
mov
add
xchg
clc
pop
inc
popa
xor
sub
push
and
push
mov
pop
xor
sbb
and
std
mov
shl
push
lods
je
movs
(bad)
dec
xchg
(bad)
xchg
data16
xchg
or
jg
mov
ja
mov
out
jmp
(bad)
jp
push
sbb
enter
inc
sbb
or
push
lea
pop
lahf
(bad)
mov
outs
(bad)
fmul
xchg
add
fiadd
sbb
arpl
bound
imul
(bad)
and
jl
icebp
fwait
xor
jns
movs
jle
mov
ins
mov
gs
stc
sti
popf
jo
sbb
shl
sub
inc
jg
mov
es
sbb
inc
jae
pop
mov
cs
ins
xchg
fwait
int
xor
addr16
cld
and
sbb
and
and
test
ss
xor
xchg
xchg
test
pop
or
leave
retf
out
cwde
test
push
push
mov
jb
jmp
or
fadd
call
mov
xchg
cmp
clc
inc
imul
mov
jnp
jnp
xor
dec
lods
sbb
icebp
cmps
lods
ret
sub
shl
or
mov
pop
cmp
and
jge
sbb
pop
data16
add
into
in
daa
sub
cdq
mov
dec
xchg
aad
imul
cmp
pop
lock
mov
pushf
cld
pop
pop
in
movs
mov
int
mov
cdq
leave
aas
(bad)
xchg
cdq
stos
adc
(bad)
dec
jl
lahf
inc
xlat
push
clc
mov
jbe
xor
sbb
mov
inc
lods
mov
ret
sub
fs
or
add
adc
das
lods
or
imul
push
test
dec
in
sar
lock
sub
mov
mov
daa
sar
idiv
movs
call
cdq
mov
push
xor
jmp
mov
dec
cli
dec
mov
inc
push
ror
inc
or
stos
sbb
mov
mov
aad
ret
nop
sbb
leave
dec
pushw
inc
xor
cmp
lods
outs
inc
movs
cmp
mov
int
xchg
sub
mov
ins
pop
push
scas
push
ror
fs
jb
std
(bad)
mov
push
mov
pop
ja
mov
loope
fmul
inc
jmp
jmp
push
popf
xor
pop
outs
push
cmps
dec
cs
mov
outs
jmp
jno
out
ins
pop
add
xor
add
scas
mov
aaa
and
(bad)
xchg
xor
int
les
ins
movs
jae
mov
add
rol
pop
ja
mov
loop
sar
dec
push
pop
int3
or
stos
jae
pop
jo
dec
sbb
pop
xor
rol
or
or
(bad)
dec
imul
ja
sbb
push
mov
in
add
mov
push
sahf
lods
cmp
push
inc
fstp
cmps
es
std
data16
movs
jne
fadd
and
in
fs
dec
push
std
retf
xchg
jnp
sbb
call
add
es
stos
jo
sub
cli
(bad)
std
pop
into
add
dec
mov
dec
or
xchg
mov
(bad)
sbb
fiadd
fs
push
mov
pop
mov
enter
addr16
or
push
paddsw
sahf
bound
or
xlat
xchg
cmp
sbb
push
aad
mul
stos
call
pop
clc
movs
xchg
sbb
push
stos
fwait
stos
lds
js
xchg
mov
xor
stc
in
leave
out
push
pop
fidiv
retf
xor
pop
outs
push
mov
jns
mov
enter
or
add
sbb
jo
push
mov
imul
js
mov
pop
out
iret
xchg
push
lods
sti
jne
dec
popa
push
test
(bad)
mov
dec
add
push
cs
(bad)
mov
push
cwde
lds
jmp
aam
push
push
hlt
sbb
enter
xchg
push
add
fist
dec
dec
sahf
push
cs
mov
mov
out
add
and
cmp
pop
adc
gs
stos
jge
mov
mov
cmp
dec
clc
jmp
inc
loope
jbe
scas
pop
in
repz
mov
and
or
ins
sbb
test
xor
in
fpatan
jno
mov
xor
ss
inc
cmp
xor
ins
add
(bad)
lea
iret
xchg
xchg
addr16
jbe
ja
int
or
add
mov
pop
dec
lahf
inc
xor
sbb
or
scas
fwait
inc
test
push
pop
mov
ins
call
push
lock
mov
ins
mov
xlat
repnz
repz
ins
cwde
scas
ins
loope
fisubr
push
ds
mov
cmp
adc
sti
inc
ds
xchg
mov
jbe
xchg
fist
aam
(bad)
adc
and
and
sbb
push
pop
retf
popf
mov
dec
out
mov
sar
jns
push
sbb
fnstsw
mov
pop
mov
cmps
fs
inc
and
xchg
outs
scas
movs
(bad)
aas
lods
push
ja
shr
fadd
dec
repz
(bad)
in
fist
add
pop
ins
das
mov
mov
iret
pop
(bad)
cmc
or
clc
jb
jno
int
sbb
add
mov
ja
test
xchg
fist
cmc
ins
pop
jno
imul
int3
sub
push
and
fisttp
test
inc
jb
mov
pop
sbb
clc
mov
cwde
movs
push
out
fcomp
daa
aaa
out
call
jo
pusha
mov
sbb
mov
push
jmp
or
aas
fwait
sti
jp
jns
cmps
add
scas
pop
mov
test
mov
in
mov
aaa
adc
(bad)
fild
jmp
fadd
xor
xchg
stc
(bad)
mov
push
dec
lea
mov
movs
ds
shl
rol
mov
hlt
xor
cld
fistp
and
dec
les
dec
push
call
mov
repnz
or
sbb
xor
sahf
add
mov
ja
mov
sub
or
xor
sbb
jl
push
mov
inc
mov
lahf
pop
or
out
adc
gs
mov
adc
push
xchg
cwde
cmp
xor
inc
inc
xchg
mov
or
repnz
(bad)
xor
pop
jl
mov
push
mov
leave
inc
fsubrp
sbb
loopne
push
or
or
push
call
xor
lea
xor
mov
jmp
xor
xchg
enter
mov
(bad)
mov
test
jns
xchg
mov
js
out
xchg
lock
inc
jmp
stc
dec
sub
cli
inc
daa
in
add
cmp
jno
and
mov
ret
sub
shl
setg
add
es
push
add
ds
dec
adc
nop
retf
and
pop
shl
dec
push
lods
sub
sti
stos
test
in
loop
add
fucomip
ins
shr
mov
out
aas
mov
scas
add
cld
rol
lods
inc
lds
es
imul
mov
inc
xor
mov
test
sbb
lea
ja
int
sbb
imul
pusha
test
cmp
mov
dec
jmp
test
push
mov
ins
xchg
loope
dec
loopne
jno
in
cli
movs
jnp
pop
mov
pushf
mov
mov
mov
cmp
scas
ins
rcr
xor
xor
mov
sub
xor
inc
add
mov
call
repz
jae
retf
push
or
sub
or
jge
stos
dec
sbb
mov
sub
mov
aaa
mov
or
data16
mov
jg
(bad)
cdq
jge
mov
cmp
(bad)
xchg
add
inc
lock
cmps
mov
fimul
sub
data16
call
scas
cmp
(bad)
ficom
xor
dec
je
sub
add
pop
(bad)
imul
or
in
push
ja
aas
ficom
es
or
or
adc
pop
add
xlat
lahf
add
ins
test
add
mul
jg
inc
(bad)
lock
sub
inc
xchg
clc
push
dec
int3
rol
sbb
cmp
jle
loop
idiv
std
xchg
cld
loopne
push
push
imul
inc
or
jmp
ins
inc
mov
mov
out
push
aas
cmp
outs
jno
shl
popa
or
out
das
mov
movs
push
and
cmp
cwde
into
sahf
jno
xor
jmp
gs
pusha
jb
dec
repz
std
popa
mov
call
int
test
test
mov
stc
fnstenv
lahf
test
not
sbb
sbb
fcmovb
jne
add
inc
fst
push
dec
test
daa
hlt
jnp
clc
xor
lds
sbb
aas
lahf
sub
imul
inc
xchg
adc
movs
(bad)
sbb
dec
jb
fcom
retf
push
fist
loope
xchg
in
add
ret
out
sbb
push
add
jecxz
faddp
pop
ins
xchg
lods
dec
xchg
xor
push
pop
sub
xor
pop
jl
loopne
cmp
mov
mov
fdivr
pop
call
push
add
mov
mov
mov
jl
mov
pop
in
stc
mov
cwde
inc
sbb
lea
mov
dec
mov
stos
jbe
xchg
jb
mov
mov
xchg
stos
lds
fnstcw
xchg
mov
add
rcr
cdq
stos
inc
loope
scas
inc
sub
dec
fdivr
sub
sbb
pop
imul
jns
mov
mov
stc
jmp
pop
pop
xor
pop
sbb
add
cmp
push
fisubr
shl
push
stos
xchg
mov
add
pop
shl
push
loope
inc
jg
dec
xchg
test
rcl
mov
mov
cmps
aam
add
shl
cmp
retf
repz
mov
push
out
fdivr
and
cli
stc
icebp
imul
fistp
jle
mov
cs
mov
iret
cmp
mov
mov
jns
pop
adc
pop
sbb
pop
xchg
xor
and
stos
adc
dec
pop
sub
jbe
dec
popa
push
lods
pop
in
loope
push
pusha
and
call
in
stc
(bad)
jmp
pushf
mov
pushf
movs
retf
dec
mov
push
inc
push
xlat
aam
vpmovsxbq
ret
and
vmwrite
or
mov
mov
inc
clc
sbb
mov
inc
cmp
add
pop
add
xor
jp
mov
mov
add
and
call
fs
lods
pop
cld
sahf
mov
out
push
(bad)
xchg
pop
sub
call
lods
imul
xchg
retf
cdq
dec
pop
xchg
mov
sbb
xor
(bad)
out
cmp
imul
xchg
mov
fdivr
cli
or
add
push
imul
xor
inc
pop
cmps
push
push
cmps
push
add
mov
sub
push
inc
out
in
mov
jp
lea
popf
mov
jge
mov
jl
popf
inc
sub
mov
test
inc
push
mov
cld
aam
std
enter
fbstp
dec
(bad)
cs
dec
fnsave
jne
jp
aaa
pop
outs
lea
es
mov
inc
lods
jnp
rcr
pop
xor
dec
sub
or
ds
test
ss
push
inc
popf
mov
push
jmp
aad
mov
andps
inc
in
and
fbld
call
loopne
and
(bad)
mov
mov
in
ds
(bad)
in
cmp
sub
jne
bound
jns
nop
lods
mov
jmp
jne
lds
xor
daa
add
imul
and
mov
cld
in
mov
rcr
inc
lea
lahf
fisttp
les
or
aad
movs
xchg
ja
mov
sbb
stc
not
fwait
scas
inc
lea
aaa
adc
(bad)
rcr
inc
bound
inc
mov
push
sbb
lods
xchg
push
inc
int3
jg
jmp
inc
mov
adc
imul
add
xlat
popf
sbb
and
xlat
xchg
xor
in
push
les
inc
sahf
das
ret
pop
xchg
xchg
pusha
out
popa
and
(bad)
mov
xchg
popf
out
aas
mov
lods
push
xor
fstp
cdq
ret
lea
lock
inc
mov
int3
data16
jo
inc
mov
sub
add
and
jge
lea
leave
hlt
sbb
sbb
stc
pop
sbb
cmp
push
scas
or
pop
cmp
ins
les
sbb
push
icebp
mov
dec
xchg
repnz
jo
test
(bad)
fisttp
(bad)
mov
jae
shl
xor
(bad)
mov
mov
enter
cli
(bad)
push
lock
jne
das
mov
les
push
shr
pop
mov
popa
mov
xchg
jle
bound
jb
mov
addr16
movs
jmp
cmp
inc
loopne
cmps
inc
call
cmps
mul
xchg
data16
jge
hlt
rol
mov
ja
mov
repnz
jmp
ficomp
ds
cmc
fistp
jae
dec
popf
adc
mov
rcr
out
or
ss
sbb
ss
fbld
xor
xchg
(bad)
push
and
(bad)
aaa
mov
add
hlt
mov
test
inc
add
in
xchg
xchg
scas
mov
fdivr
xchg
mov
cmc
jmp
mov
test
xchg
push
mov
inc
das
nop
icebp
fidivr
inc
jo
gs
outs
pop
popf
inc
and
stos
cmp
addr16
js
jge
cld
xor
pop
imul
mov
cmps
push
fcomp
adc
cs
mul
js
bound
stos
dec
cmc
mov
and
xchg
in
jle
(bad)
lods
push
ja
mov
les
xchg
lahf
inc
retf
dec
cmc
(bad)
cmp
ss
cmp
or
outs
cmp
mov
mov
arpl
ret
das
mov
add
sbb
imul
mov
mov
outs
mov
dec
iret
aam
adc
jbe
popf
js
mov
push
out
xchg
pop
por
xchg
mov
ins
jo
xchg
mov
es
(bad)
std
loop
add
aad
mov
sub
ds
pop
push
or
stos
sbb
inc
mov
rcr
cwde
cli
and
aaa
leave
and
bound
and
jnp
mov
pop
cwde
mov
jge
cmc
mov
les
push
xchg
jle
mov
xchg
mov
sub
movs
xchg
adc
ins
or
pop
mov
cld
mov
mov
jle
mov
div
sub
leave
xchg
lods
je
cmp
dec
ficomp
pop
mov
fld
inc
jmp
jno
fsub
sbb
das
mov
(bad)
adc
xchg
add
movs
scas
xor
and
loop
(bad)
xchg
add
test
out
loopne
mov
xchg
adc
aam
pop
fld
mov
pop
mov
hlt
adc
std
loop
add
cmp
(bad)
adc
cmp
cli
xor
dec
mov
sub
add
sub
or
repz
je
sbb
and
je
add
dec
dec
lods
or
push
push
nop
mov
rdmsr
and
out
iret
mov
leave
sti
jne
jnp
push
mov
dec
and
inc
add
fnstenv
mov
jl
xchg
mov
loop
dec
imul
cmp
sub
cmp
mov
gs
adc
mov
pushf
xchg
jno
sti
jb
jne
leave
pop
imul
fisubr
into
sbb
push
pop
das
addr16
out
enter
ins
pop
and
dec
cdq
in
call
or
mov
ins
jno
mov
jmp
jle
sub
clc
dec
ss
call
lds
jnp
inc
adc
inc
mov
mov
out
popf
cli
or
inc
mov
push
inc
mov
popf
js
movs
sub
mov
lods
ins
and
jl
fbstp
and
stos
push
(bad)
cmps
loope
xchg
xchg
dec
loopne
push
and
mov
bound
mov
test
pop
push
mov
(bad)
sbb
xor
repnz
push
jg
push
aas
adc
or
arpl
add
pop
xor
push
xchg
push
cmps
jb
fsubr
fnstsw
jno
mov
xor
or
fdiv
out
test
pop
es
test
lahf
pop
pushf
cld
add
lock
mov
sbb
add
les
cwde
test
(bad)
and
ds
loop
fist
cmp
dec
movs
push
ds
fwait
lods
mov
push
jmp
(bad)
aas
enter
imul
stos
xor
add
mov
loope
pop
push
push
shr
xor
fsubr
inc
inc
push
mov
dec
(bad)
arpl
pushf
or
into
cmps
pushf
aaa
jmp
(bad)
dec
bound
neg
or
test
adc
sbb
fxch
ja
cs
add
ins
dec
jns
js
push
mov
ds
js
nop
ds
jg
hlt
xor
mov
xchg
addr16
mov
outs
call
or
xchg
dec
mov
sbb
add
mov
in
(bad)
gs
cmp
rcr
popf
lods
mov
scas
data16
test
repz
fstp
jmp
addr16
push
cmc
sub
adc
pop
jo
inc
test
jnp
inc
sub
test
cmp
sub
inc
mov
aaa
mov
mov
mov
xor
(bad)
or
and
cld
cwde
adc
inc
jle
ja
fadd
addr16
jno
int3
cmc
stos
sub
inc
xchg
cli
stos
in
xchg
mov
mov
jmp
jns
mov
cmp
fdiv
and
dec
mov
ds
stos
mov
mov
out
repnz
xor
and
pop
or
xchg
pop
mov
pushf
pop
sbb
fwait
add
dec
out
xlat
xchg
push
call
lahf
jle
mov
mov
adc
fcom
(bad)
mov
jg
call
out
aad
imul
ss
mov
and
outs
pop
popa
loopne
or
mov
mov
sub
outs
cli
ret
clc
jno
popa
and
add
cwde
or
ret
mov
(bad)
aas
std
hlt
test
mov
jp
pop
inc
inc
stos
dec
aad
in
mov
xchg
pop
cmp
shl
stos
rcr
mov
out
pop
xor
sti
dec
js
mov
jnp
dec
ds
fcmove
push
fild
fs
ficom
jge
movs
dec
inc
add
pop
mov
test
addr16
add
aaa
popa
sub
loop
test
cmps
inc
dec
mov
jo
mov
jl
not
loope
inc
and
aam
add
popa
iret
xchg
jno
mov
mov
mov
ja
mov
adc
rcl
mov
ss
sbb
je
push
mov
outs
pop
lea
jae
fwait
mov
outs
sahf
cli
add
adc
and
mov
mov
fistp
nop
xor
mov
cmp
div
icebp
jns
jg
pop
fcmovb
aam
popf
les
and
int3
adc
sbb
adc
mov
jle
mov
cmp
iret
cld
fcomp
sbb
push
pop
push
lahf
imul
outs
cli
(bad)
das
mov
js
jp
enter
imul
js
fisttp
aaa
movs
adc
lahf
xchg
xor
pop
lea
mov
outs
mov
xchg
and
movs
xchg
jnp
jge
mov
jo
mov
outs
adc
mov
mov
aas
jg
xchg
push
fisubr
pop
sbb
lock
data16
adc
pop
rcr
inc
push
mov
and
mov
xchg
mov
ds
push
shl
loope
popa
je
clc
add
xchg
es
and
dec
pusha
stos
jne
lods
sbb
movs
mov
dec
loop
inc
leave
jbe
pop
jp
mov
outs
xchg
(bad)
xchg
adc
call
lock
aaa
fwait
jp
mov
rcl
test
fmul
jp
or
shr
fst
or
add
sbb
and
movs
mov
dec
sahf
cld
sbb
adc
xor
lods
and
jae
push
or
add
out
mov
jb
imul
out
call
in
das
not
or
sbb
stos
pop
jno
xchg
cld
js
shl
test
rol
test
into
ds
out
mov
xchg
ss
cmp
sti
js
pop
lahf
mov
fild
cli
aas
xchg
pop
pop
pusha
cmp
pop
push
je
cmp
bound
push
aaa
movs
aaa
je
cwde
movs
cmp
xor
fcom
in
pop
sub
loopne
xchg
les
dec
(bad)
call
sti
jmp
mov
stc
repnz
repz
push
lods
inc
loope
fild
cs
shl
enter
dec
sbb
xor
xchg
push
xchg
lods
jg
cli
push
mov
xor
cmp
mov
jge
test
or
sbb
sbb
int
movs
add
push
(bad)
fs
jno
std
rol
mov
pusha
xchg
mov
adc
out
fdivr
dec
sbb
pop
into
ds
idiv
inc
call
jl
mov
(bad)
retf
enter
arpl
daa
mov
ins
jo
aas
mov
sbb
outs
sbb
xchg
cmp
xlat
xor
cld
pop
les
cmp
outs
cli
xchg
(bad)
cmp
in
and
out
test
fcmovnb
push
shr
and
cmps
mov
dec
imul
cmps
xor
ss
lock
inc
jge
dec
scas
sbb
mov
(bad)
mov
out
jnp
sar
pop
xor
and
pop
add
and
bound
add
dec
aas
fcmovu
xchg
aas
lea
cmp
and
mov
xor
or
(bad)
adc
stos
fnstcw
mov
(bad)
jmp
adc
(bad)
clc
fcmovb
push
mov
or
in
lods
es
push
jle
mov
dec
and
les
pop
retf
mov
sbb
mov
add
and
test
sbb
into
in
ds
aaa
mov
dec
mov
mov
xchg
inc
mov
cmps
inc
cld
xchg
inc
and
sti
not
leave
imul
ja
test
neg
(bad)
test
cmp
enter
in
add
jo
jne
cmp
(bad)
xchg
cmp
dec
mov
pop
data16
mov
add
ins
push
mov
pop
xchg
gs
out
xchg
add
mov
inc
add
xchg
lock
movs
mov
imul
jb
pop
mov
xchg
ftst
sub
xchg
daa
stc
cmc
mov
repz
ins
and
cs
mov
sbb
and
or
mov
retf
test
mov
add
or
add
test
add
cmps
lea
aaa
and
mov
inc
mov
jb
push
frstor
xchg
bound
xlat
mov
jmp
add
pop
add
ret
jp
cmp
test
mov
jns
movs
push
and
cmps
lods
xchg
push
inc
scas
jg
dec
jnp
mov
add
imul
mov
sbb
lea
out
int
das
test
push
jl
jge
inc
cdq
cmps
sub
dec
in
gs
loopne
mov
fild
(bad)
rol
mov
jo
or
inc
sbb
dec
inc
push
jge
adc
pusha
xchg
pop
lahf
lahf
call
nop
sbb
leave
inc
adc
mov
add
pop
outs
fwait
push
retf
cdq
test
arpl
fist
sar
fimul
fadd
and
movs
push
and
(bad)
adc
outs
mov
mov
test
fdivr
in
fdivr
add
cdq
cmp
push
fstp
daa
dec
std
call
dec
push
jl
xor
mov
or
fnstenv
ja
rcr
push
or
push
ss
sub
pminsw
imul
mov
es
in
fucomip
inc
lods
mov
jb
mov
pop
xchg
mov
fs
push
dec
int3
mov
neg
push
das
inc
jmp
imul
dec
lock
int
pop
ds
stc
loop
clc
pop
push
push
outs
stos
sbb
pusha
xchg
jge
mov
fsub
dec
mov
jle
push
xor
or
daa
mov
test
xor
mov
push
mov
mov
bound
push
jecxz
cli
jl
mov
pop
sbb
addr16
push
call
test
bound
pop
int
cmp
mov
rcl
sbb
pop
fidiv
popa
mov
dec
mov
mov
push
or
jbe
cli
or
adc
pop
adc
imul
nop
ja
addr16
jg
lods
cs
mov
and
adc
mov
jb
test
in
(bad)
inc
dec
pushf
addr16
xor
mov
sti
lahf
mov
add
test
into
not
xchg
mov
or
xor
mov
data16
es
jp
scas
pcmpeqd
sub
adc
xchg
xchg
mov
sar
mov
add
sbb
popa
mov
nop
jbe
outs
inc
mov
lahf
push
pop
lods
mov
pop
in
fst
pushf
sbb
jp
(bad)
sti
dec
xchg
mov
xchg
push
neg
aaa
test
xchg
xchg
sub
cli
loope
test
inc
sbb
cmps
add
ficom
imul
fwait
push
add
cmps
fwait
ret
xlat
inc
xchg
leave
sbb
inc
(bad)
aaa
or
push
scas
pop
mov
stos
jb
cmps
or
das
add
test
mov
inc
jns
test
outs
mov
xchg
je
out
nop
add
fwait
(bad)
or
push
xor
loop
cld
repz
jns
mov
cmp
inc
call
fidiv
pop
clc
xor
les
pop
loope
jo
cli
jbe
pop
add
lods
adc
jle
pusha
inc
stos
outs
sub
add
aas
cwde
hlt
fwait
es
pop
push
mov
pop
mov
mov
mov
int
xchg
movs
(bad)
xlat
daa
mov
push
xchg
mov
ds
jmp
jp
lahf
lods
xor
cs
and
clc
call
sub
add
ds
jno
push
scas
inc
or
xchg
mov
stos
pop
out
icebp
or
in
pop
jo
sbb
ds
jo
adc
frstor
stos
ins
add
xor
jg
fist
imul
inc
mov
dec
mov
mov
jecxz
pusha
and
rol
add
mov
mov
mov
jns
mov
adc
ss
clc
lock
jmp
jne
push
or
ss
(bad)
fwait
test
pop
and
inc
std
retf
clc
push
ins
gs
bndstx
sbb
dec
sbb
sahf
xor
jno
cld
xchg
and
pop
push
popf
pop
loope
clc
cmp
xchg
bound
(bad)
add
push
or
adc
enter
jecxz
sbb
shr
and
push
in
jns
jg
jno
inc
loopne
pop
jp
mov
fld
in
jns
sti
jle
pop
sub
and
das
lods
adc
inc
ins
mov
dec
scas
cmps
lahf
add
or
cmc
lahf
es
stc
adc
pop
lahf
jo
xchg
retf
cdq
inc
or
ja
mov
dec
inc
mov
imul
stos
(bad)
dec
push
test
adc
ds
in
cld
push
sti
add
add
pop
lods
inc
cmp
retf
pop
cmp
inc
(bad)
cli
or
(bad)
ins
inc
jno
retf
and
pop
add
imul
xor
lea
sbb
xor
cld
jle
inc
pop
jle
outs
repz
lock
xchg
je
mov
xor
sti
mov
test
(bad)
or
std
js
xchg
ret
xchg
lods
shl
lods
inc
retf
dec
and
fdivp
into
push
clc
and
add
mov
push
call
std
xor
cmp
and
pop
mov
test
sbb
sub
xchg
xchg
cmp
pop
push
cdq
cmp
sbb
dec
retf
mov
cmp
(bad)
and
repz
mov
push
xchg
cmps
xchg
adc
mov
pop
inc
mov
hlt
ds
shl
pop
clc
sbb
dec
mov
dec
push
mov
push
movs
lds
inc
adc
dec
in
das
jo
and
sub
or
dec
pop
mov
inc
mov
mov
dec
cmp
retf
mov
je
lea
xchg
lock
cld
inc
xor
shr
(bad)
mov
xor
lods
and
stc
loop
xlat
jecxz
ins
mov
inc
call
xchg
lods
jo
dec
sbb
and
outs
or
xchg
scas
mov
pop
rol
cli
jo
std
jle
pusha
dec
call
sub
imul
scas
adc
push
pop
movs
xor
movs
xor
mov
xor
jnp
lods
jl
xchg
loopne
inc
sbb
jb
fcmovnbe
scas
adc
jmp
stos
and
jmp
mov
stos
cmp
ja
aaa
pop
daa
pop
cwde
jno
pop
stc
inc
aas
jns
xchg
sahf
mov
cmp
or
pop
add
inc
aaa
jo
or
add
call
mov
fcomp
bnd
stos
pop
cli
mov
jl
rcl
es
popf
ins
enter
test
aas
sub
cdq
xchg
sbb
ret
aad
inc
or
cmp
ds
add
cmp
jno
push
mov
dec
lahf
xchg
xchg
mov
fmul
jne
xor
adc
lods
and
or
ss
pop
popf
(bad)
sti
cmps
inc
test
pop
jb
sub
fadd
arpl
xchg
add
cmc
rcl
(bad)
cmps
scas
or
imul
icebp
js
int3
icebp
call
pop
lds
sbb
(bad)
(bad)
ss
jge
sbb
mov
cs
fwait
mov
jmp
fwait
mov
jne
pop
jmp
ins
pusha
imul
mov
retf
sbb
nop
jp
mov
push
mov
lea
pop
add
xor
div
inc
outs
sub
cld
dec
sub
push
enter
lock
xchg
fisubr
mov
test
aaa
cld
ret
mov
mov
repnz
sbb
add
les
inc
movs
cs
ins
mov
inc
lods
jbe
out
sub
and
pop
xor
xor
stc
dec
pusha
test
add
sbb
in
pop
sub
mov
mov
inc
jg
sub
xchg
lock
mov
addr16
(bad)
test
repz
xchg
dec
ja
cmps
mov
add
cwde
out
mov
jo
mov
cmc
cmp
fcom
xor
cmp
pushf
inc
daa
outs
mov
pop
clc
dec
rcr
mov
jnp
jle
iret
xor
pusha
jb
fwait
pop
mov
test
sbb
dec
outs
stos
into
std
add
test
shl
lea
mov
sub
push
clc
mov
stos
mov
ins
dec
test
jmp
das
retf
cld
retf
xchg
xchg
xor
push
or
loop
ret
data16
ds
dec
push
in
inc
push
mov
lods
mov
jmp
pop
add
sbb
jo
sbb
imul
movs
cmp
test
dec
out
fisttp
lds
inc
pop
sbb
jecxz
add
fs
xchg
push
and
mov
call
lods
outs
jae
mov
add
les
xchg
imul
cmp
cld
ret
inc
fcomp
cmp
fwait
push
jl
inc
cmp
mov
lods
push
fsub
repz
xor
adc
in
inc
iret
and
jle
test
add
cmp
mov
pop
cdq
mov
sub
fbstp
jp
and
push
cdq
fcomp
fs
add
jp
cli
stos
ret
inc
inc
mov
mov
or
dec
js
movs
push
jmp
cld
fistp
jo
dec
cmps
sbb
xor
lahf
mov
mov
jmp
sbb
or
rcl
dec
add
nop
pop
rcl
mov
inc
mov
add
sbb
xchg
aaa
sar
push
repnz
jmp
neg
es
lock
in
scas
ins
inc
loopne
test
aaa
sti
loop
retf
dec
mov
ds
mov
dec
out
push
sbb
mov
dec
cmp
jnp
je
(bad)
mov
jmp
sbb
les
sbb
push
mov
fidiv
mov
ins
mov
xor
test
sbb
push
lock
xor
(bad)
mov
pop
in
cli
lahf
cmp
push
movs
loope
into
adc
mov
call
js
mov
retf
pop
in
into
cmc
push
xchg
push
pop
mov
push
inc
pop
xchg
mov
out
cld
add
mov
cmp
dec
je
or
movs
cmp
or
pop
dec
shl
inc
test
pusha
sti
jge
inc
mov
pop
mov
mov
std
or
sbb
test
add
in
retf
ins
out
cwde
dec
xchg
push
jmp
pop
xor
sti
repz
cmps
push
dec
inc
mov
add
xchg
scas
or
inc
pushf
loope
mov
es
xor
inc
and
mov
pusha
jo
outs
inc
sub
xchg
pop
jmp
out
push
cmp
inc
sbb
inc
mov
cld
add
sti
inc
mov
mov
pop
pushf
ret
adc
cdq
dec
pop
mov
cmps
dec
sub
retf
inc
jmp
sbb
inc
cs
call
xchg
(bad)
adc
cmp
push
ss
and
pop
(bad)
jb
ins
sbb
jb
test
outs
ret
es
xchg
ja
jge
push
stos
pop
pause
sahf
ins
popf
shl
hlt
xchg
push
and
(bad)
icebp
adc
ins
movs
imul
jb
xchg
cld
cld
ins
vexp2pd
sub
cmp
neg
and
cmp
imul
shl
or
jg
fadd
pushf
cld
jge
inc
and
pop
cmp
pop
cwde
pop
mov
stos
jae
movs
sub
mov
out
fdiv
cli
pop
jnp
fstp
mov
dec
fwait
mov
jge
clc
push
dec
lock
aaa
out
mov
outs
pop
in
test
adc
cdq
cmp
mov
call
(bad)
fstp
ds
or
jno
inc
xor
pop
lahf
mov
iret
add
clc
jbe
jns
sar
pop
sbb
xlat
imul
cmp
mov
pop
and
adc
jbe
mov
pop
mov
pushf
dec
cmc
xchg
jno
std
shl
adc
jnp
mov
inc
sbb
xor
repnz
ret
jmp
add
fidivr
cmp
cli
vaddsd
inc
jp
dec
mov
jne
add
mov
mov
push
mov
jg
cli
jae
jae
sti
cmp
push
cmp
jnp
push
and
push
xor
fist
bnd
jl
pop
loop
test
les
xor
clc
nop
adc
jl
(bad)
mov
push
popf
xchg
test
sti
call
sahf
fmul
dec
xlat
dec
cs
rcr
js
xor
xor
cs
pop
icebp
mov
scas
pop
shl
xchg
outs
popa
inc
xor
and
push
and
jb
xchg
pop
ds
test
pop
and
lock
cmp
sbb
mov
jge
fild
or
mov
mov
cmps
inc
pop
nop
ror
cdq
inc
pusha
mov
lds
ss
scas
jbe
and
cmovb
and
mov
mov
out
arpl
pop
fmul
sub
and
in
and
test
xor
or
or
clc
xchg
and
jge
pop
mov
dec
mov
mov
xchg
je
cmc
cmc
lahf
sub
ins
movs
(bad)
mov
jg
stos
lea
aas
neg
fwait
test
dec
mov
or
xchg
fmul
pop
js
dec
fld
push
fwait
mov
mov
sti
sar
or
and
popa
sub
scas
add
push
mov
dec
mov
jb
fwait
cld
or
and
xchg
and
pop
jbe
mov
cmp
mov
pushf
add
icebp
not
lahf
stos
mov
sahf
jle
xchg
sahf
cld
adc
jmp
inc
ins
xchg
lahf
dec
aad
fnstcw
add
(bad)
js
mov
inc
add
mov
mov
out
sbb
mov
add
jge
lods
jg
shl
jo
mov
(bad)
cmp
gs
sub
call
push
clc
mov
xchg
(bad)
movs
sar
add
mov
adc
loope
add
dec
ja
(bad)
dec
jmp
(bad)
dec
inc
dec
repnz
std
jns
cmp
pop
fcomp
inc
popf
push
ds
mov
lods
sub
fisttp
adc
daa
mov
add
das
lahf
add
push
mov
dec
jmp
repnz
js
movs
and
les
or
les
stos
scas
retf
pop
jl
mov
adc
in
cld
fsub
lahf
or
sub
(bad)
rcr
ds
or
mov
dec
pop
popa
lahf
popf
call
hlt
sbb
push
popa
and
lods
(bad)
adc
sbb
test
inc
mov
addr16
test
fisubr
jle
adc
lods
jb
test
pop
test
xchg
inc
call
mov
or
add
sti
jmp
mov
inc
(bad)
pop
sti
cs
pop
in
retf
call
mov
inc
sahf
xor
pop
lahf
mov
iret
imul
jle
enter
xor
pop
push
inc
or
cmc
jnp
scas
jnp
xchg
adc
mov
(bad)
inc
call
mov
fsub
xor
out
xor
ins
lods
stos
scas
mov
fiadd
add
jmp
test
xchg
dec
(bad)
xor
ds
(bad)
fisttp
xor
outs
inc
inc
lahf
push
int
cmp
retf
dec
in
addr16
jbe
gs
in
adc
pop
mov
jmp
sbb
cwde
movs
stc
jno
or
xchg
xor
jp
stos
pop
out
(bad)
ins
xchg
les
daa
xchg
fist
mov
pusha
arpl
stc
neg
fwait
mov
(bad)
fdivr
fist
es
cmp
dec
sub
mov
leave
inc
(bad)
inc
push
ss
xor
je
imul
imul
jmp
out
xchg
cmp
outs
dec
lds
nop
xor
les
sub
test
mov
cmps
add
add
jmp
(bad)
dec
xchg
pop
(bad)
push
cs
fcmovu
push
jecxz
jo
inc
sbb
pop
xchg
xor
jp
mov
scas
sub
scas
fs
cli
das
mov
jbe
imul
sub
imul
jl
into
xor
cmps
mov
rcl
cli
pop
jbe
nop
pop
popf
mov
jno
(bad)
xchg
popa
aam
jg
mov
xchg
lods
xchg
lds
popf
outs
jb
xchg
xchg
ds
mov
mov
out
push
push
or
push
mov
popa
dec
mov
mov
scas
aaa
ds
je
lea
jmp
mov
bound
push
fmul
add
lahf
adc
and
int
add
jge
movs
jb
mov
dec
xchg
test
in
js
in
rol
mov
jb
mov
jl
faddp
sub
inc
sbb
xchg
sub
sbb
frstor
pop
pushw
push
mov
dec
pop
adc
scas
fwait
nop
mov
cs
enter
data16
cmp
pop
add
sahf
push
mov
test
sbb
and
ins
leave
stc
mov
pushf
out
jo
pusha
gs
not
xchg
push
mov
xchg
adc
dec
icebp
xchg
ffreep
aaa
cmps
add
aas
xor
es
mov
pop
jecxz
fiadd
xor
iret
(bad)
callw
sub
pop
jle
mov
jns
mov
mov
xor
jnp
rcr
pop
push
jae
adc
imul
mov
test
jmp
icebp
jle
pop
stos
pop
lock
lock
mov
xchg
add
fcom
add
js
mov
jg
xchg
mov
test
dec
ins
cdq
mov
add
cmp
jnp
mov
inc
or
fwait
mov
call
dec
add
add
lods
das
iret
adc
inc
pusha
scas
jns
mov
ja
mov
dec
iret
out
and
adc
inc
mov
pop
cwde
shl
in
sti
xchg
je
push
cmps
lods
fild
mov
xchg
cmp
std
mov
mov
dec
cs
clc
mov
jg
fsub
ins
mov
fstp
jge
mov
movs
into
js
js
int
sub
outs
sbb
jae
test
sbb
into
in
and
jl
out
xor
dec
sbb
jle
rcr
aam
jge
mov
xchg
sahf
test
arpl
aam
mov
fidivr
push
lods
sub
fisttp
adc
repz
xor
aaa
pop
push
xchg
dec
lahf
mov
mov
jmp
push
xor
add
arpl
push
cmp
add
mov
ins
out
in
test
mov
jle
mov
dec
test
xchg
lock
sahf
mov
inc
xchg
mov
and
call
outs
(bad)
stos
xor
das
lock
inc
cld
adc
pop
cmps
push
sbb
mov
stos
cmp
xchg
fist
add
int
ja
adc
fcomp
cmps
pop
and
sbb
or
xor
fsub
(bad)
pop
jno
lea
sahf
loopne
add
jne
cmps
dec
pop
(bad)
fist
xchg
inc
xchg
xchg
scas
shr
movs
data16
xor
push
push
pop
cli
(bad)
fistp
ss
stos
jno
inc
push
or
retf
and
repz
out
es
and
imul
jl
movs
cmp
or
(bad)
add
inc
inc
stos
jbe
mov
xchg
jl
mov
lea
clc
dec
movs
mov
ja
adc
ins
xchg
scas
dec
lock
xor
sub
into
xor
jp
or
mov
bound
push
xlat
push
out
fcomp
leave
mov
daa
jmp
push
or
fisttp
mov
mov
aaa
or
mul
jns
outs
inc
push
mov
pop
mov
cwde
jno
clc
mov
sub
push
test
mul
into
repnz
xchg
jg
ss
inc
loope
jo
dec
test
inc
or
mov
fild
clc
pop
cdq
ror
pop
pop
in
push
inc
jb
out
push
mov
test
sbb
inc
addr16
pushf
adc
push
jl
(bad)
xchg
aas
(bad)
dec
outs
push
lods
pop
mov
adc
xchg
add
in
cli
mov
push
mov
(bad)
hlt
or
xchg
add
rol
loop
dec
jmp
(bad)
push
stc
inc
jae
dec
xchg
daa
dec
jp
inc
inc
dec
icebp
xchg
mov
adc
out
outs
lahf
call
adc
or
sub
mov
mov
lahf
adc
mov
xchg
or
push
and
lods
mov
(bad)
repz
idiv
jno
push
sti
mov
push
mov
call
xchg
repz
mov
outs
jae
xchg
lea
mov
es
mov
in
dec
ficomp
cmp
int
inc
fidiv
aas
dec
push
fwait
cs
ins
jmp
push
jmp
or
out
xor
jo
js
sub
imul
or
xor
xchg
adc
outs
inc
mov
jecxz
clc
push
xchg
shl
out
xchg
push
adc
arpl
idiv
ja
(bad)
and
loope
cmp
pop
jns
lods
push
retf
cmp
aad
inc
dec
stos
ss
lea
sbb
scas
mov
stos
ins
pushf
leave
das
pushf
clc
sbb
ss
sbb
push
rol
cmp
mov
in
out
xchg
xor
jae
popf
pop
repz
inc
xchg
int3
cmps
popa
rcl
test
lea
lea
add
in
loope
shl
dec
inc
jmp
cs
shl
push
pusha
xor
sub
adc
cmp
outs
jmp
pop
pop
in
pop
jae
add
mov
mov
mov
jae
fstp
clc
(bad)
sbb
ins
jle
stos
jle
lahf
test
loope
sub
repnz
movs
mov
gs
lods
lds
test
lods
inc
repnz
cld
das
pop
xor
stc
mov
xchg
dec
jo
and
push
cs
call
out
(bad)
jl
test
ja
cmp
mov
ja
imul
xor
loope
pop
and
fistp
cmp
fnsave
neg
test
xchg
popa
and
fadd
mov
jnp
mov
adc
shl
and
xchg
pop
lds
cs
fild
bound
fidiv
dec
mov
jo
mov
scas
dec
test
sbb
cld
jb
ja
int
adc
push
xchg
daa
shl
mov
jns
outs
daa
movs
add
cmps
xchg
or
sub
jecxz
xchg
aas
xchg
in
pop
leave
outs
jnp
cmps
push
xchg
call
pslld
mov
jecxz
or
cld
js
loope
clc
fchs
inc
outs
xchg
lahf
inc
xlat
jb
dec
cs
out
cli
std
and
(bad)
sbb
or
xchg
xchg
xchg
push
and
inc
xor
add
sbb
xor
add
pusha
xchg
retf
popf
mov
cmp
cmps
xchg
daa
mov
jbe
stos
pop
out
mov
frstor
or
leave
dec
xchg
lea
jo
mov
push
pop
std
neg
fwait
scas
xor
jo
cmp
aaa
cli
in
retfw
add
sbb
sub
(bad)
pop
out
adc
pop
xor
xor
fdiv
lahf
imul
(bad)
mov
loop
jecxz
stos
int
repnz
xlat
and
nop
jne
in
cli
sub
bound
enter
(bad)
mov
jecxz
dec
lods
xor
in
dec
pop
xor
fnstenv
jnp
xchg
imul
cmp
lock
mov
je
pop
xor
xor
pop
shl
in
imul
add
xor
inc
iret
(bad)
popf
daa
mov
jle
stos
pop
(bad)
ret
les
xor
repz
shr
fnstenv
mov
rol
sbb
(bad)
xor
xlat
pop
lds
sbb
jo
push
or
fwait
movs
popf
sbb
(bad)
push
nop
cmp
mov
sbb
cmp
sbb
imul
push
pop
mov
xor
daa
jl
int3
xchg
xor
sti
(bad)
cmps
pop
jmp
dec
aam
pop
cs
test
dec
cmp
add
cld
les
mov
or
shr
rcr
push
jl
sbb
pop
or
inc
clc
add
push
jle
mov
ja
push
xor
scas
jnp
fldenv
movs
dec
outs
call
sub
stc
out
mov
jno
test
jge
aam
fs
jno
std
ret
test
repz
xchg
cli
stos
mov
in
mov
inc
loopne
test
xor
dec
out
cmp
fmul
enter
inc
and
cmp
mov
push
pop
lods
xchg
push
xor
or
aad
add
and
jecxz
mov
fld
mov
push
lea
dec
neg
mov
stos
xlat
pop
rcr
push
mov
gs
cmps
neg
mov
(bad)
mov
mov
xchg
and
xlat
repnz
out
ins
popf
stos
inc
aad
into
sbb
pop
out
sbb
pop
cmps
add
inc
mov
or
retf
ss
push
jmp
jbe
jne
enter
or
fwait
sub
pop
fadd
lea
retf
mov
and
int3
stos
inc
in
jg
je
push
mov
(bad)
and
jge
mov
lods
xchg
ftst
sbb
icebp
jl
in
repnz
sub
mov
dec
or
std
pop
jg
arpl
pop
push
xchg
mov
ror
jmp
ins
jl
mov
add
ins
push
test
aaa
mov
pop
jmp
and
mov
adc
jge
pushf
ss
xchg
(bad)
pop
mov
xchg
jne
in
movs
xchg
psubq
lahf
mov
mov
in
jecxz
cmp
push
hlt
dec
div
cmp
rcr
jbe
pop
arpl
pop
cmps
(bad)
dec
mov
sub
mov
stc
mov
mov
push
sbb
ins
jl
add
retf
arpl
mov
inc
mov
xor
push
inc
(bad)
xor
jne
test
aas
xchg
les
aaa
in
rol
ret
push
je
mov
jl
xchg
pushf
movs
std
fisttp
mov
ss
icebp
jmp
jp
pop
push
jnp
mov
mov
or
sahf
xchg
pop
adc
sbb
ss
data16
inc
movs
cmp
mov
xor
(bad)
xchg
xor
dec
jbe
test
out
(bad)
dec
mov
loopne
in
pop
daa
into
xlat
stos
aaa
hlt
sbb
fsub
mov
fcmovnb
mov
lods
scas
push
jmp
fnstenv
cs
repnz
addr16
pop
data16
es
sbb
xchg
imul
ds
xchg
pop
jge
add
xor
mov
inc
movs
jb
retf
call
neg
xchg
adc
jb
popf
pop
lds
mov
xchg
fwait
push
and
mov
stos
sbb
sbb
xchg
mov
aas
sti
div
icebp
adc
cld
sub
adc
idiv
push
icebp
xor
jle
pop
arpl
or
pushf
and
dec
inc
inc
xor
mov
nop
cmp
dec
data16
dec
xor
sub
or
retf
mov
leave
pop
add
fimul
xchg
stc
dec
pushf
(bad)
mov
or
test
mov
add
xchg
jmp
call
cmp
neg
inc
retf
add
or
mov
cs
mov
(bad)
dec
sub
je
in
jl
div
ja
sti
xor
pusha
jb
out
ds
and
and
add
mov
sbb
add
aaa
sahf
int
test
jl
sub
xchg
jecxz
mov
xor
movs
xchg
add
ins
xchg
(bad)
movs
in
test
push
mov
(bad)
pushf
test
cwde
scas
pop
neg
sbb
jmp
les
pusha
cmps
inc
cs
mov
mov
cld
cli
sbb
pop
mov
jl
inc
lods
ja
inc
jne
or
mov
xor
fcomp
lahf
adc
inc
fstp
mov
pop
xchg
ret
xchg
ins
xchg
xchg
jno
out
rol
loope
mov
popf
inc
ja
mov
push
aaa
stc
mov
jnp
push
inc
push
aad
fdiv
xor
adc
mov
push
mov
fwait
aam
pop
cld
addr16
cli
or
pop
cmps
pop
imul
xor
imul
jle
mov
push
pop
dec
and
(bad)
xchg
daa
mov
pop
push
mov
jns
stos
loope
test
cmp
cmc
or
lea
aaa
stc
repnz
fdiv
inc
imul
call
cld
fistp
add
add
jo
cmp
psllw
stos
lods
or
in
ds
push
sbb
xor
cmp
pop
shl
cmps
pop
pusha
mov
pop
popf
movs
mov
and
fistp
pushf
adc
inc
movs
jge
mov
inc
xchg
xchg
dec
loopne
jno
in
cld
adc
pusha
xchg
idiv
push
xchg
xchg
bnd
and
dec
mov
repnz
cmp
in
ds
pop
pop
sub
pop
outs
push
xchg
inc
ds
shr
cmp
cwde
fiadd
pop
pop
in
ins
add
call
pop
mov
mov
das
xor
neg
call
jecxz
sbb
ret
jge
stos
in
xchg
cld
add
in
xchg
xor
pusha
mov
cmps
shr
imul
rol
mov
cs
(bad)
shl
and
push
pop
jne
mov
push
lea
rcr
clc
or
leave
and
add
adc
out
ins
xchg
jg
lods
dec
arpl
push
imul
shl
imul
mov
pop
xchg
repz
mov
push
test
mov
lds
mov
inc
test
fld
add
clc
cmp
std
jmp
inc
pusha
les
cmp
sub
pop
in
test
dec
cli
fcomp
mov
pcmpgtb
mov
sbb
sub
mov
push
xchg
mov
push
sbb
inc
xchg
loopne
add
jle
sub
mov
dec
sti
int
sbb
xchg
jns
jmp
(bad)
scas
call
mov
xchg
js
in
(bad)
xchg
mov
push
imul
icebp
into
inc
into
inc
add
inc
mov
je
dec
mov
jmp
xchg
jmp
std
sub
imul
daa
call
pop
mov
inc
xchg
fmul
xlat
rol
cld
inc
jbe
mov
dec
xchg
xlat
mov
(bad)
mov
jmp
sar
outs
ja
mov
(bad)
test
in
mov
out
jmp
cmc
in
je
xor
inc
mov
cmp
pop
fwait
mov
(bad)
xor
pop
std
clc
or
add
dec
cmp
add
outs
addr16
or
xchg
push
inc
dec
aas
(bad)
mov
out
add
xchg
inc
ret
mov
arpl
jecxz
adc
enter
movs
(bad)
cmp
mov
and
fs
mov
xor
inc
jmp
pop
outs
fsub
pop
pushf
dec
ds
test
nop
add
hlt
cmp
jno
int
push
inc
add
or
jge
mov
pop
xchg
movs
xor
jmp
pop
mov
inc
or
fidivr
ret
cdq
adc
xchg
pop
jne
bound
push
ds
loope
cmps
mov
mov
shr
sub
and
ds
jge
jno
push
mov
mov
jmp
mov
or
inc
ins
je
popa
mov
outs
push
mov
push
jmp
and
cli
xchg
xor
push
jl
push
push
xchg
je
mov
push
clc
in
or
jns
test
inc
jns
xchg
mul
aam
out
(bad)
arpl
mov
jecxz
mov
sbb
jmp
mov
cdq
xor
sbb
je
push
xchg
mov
out
fidivr
clc
push
popa
pop
inc
fisttp
and
sbb
jecxz
ror
jmp
cmp
and
sub
cwde
add
fs
dec
jmp
xchg
pop
call
(bad)
add
movs
mov
aam
add
mov
aam
mov
(bad)
jo
mov
jo
sub
jmp
sub
or
cld
inc
sub
xchg
into
mov
popf
fild
jne
(bad)
sbb
jne
cmp
fld
fimul
popf
fldcw
iret
rcl
repnz
jbe
or
(bad)
dec
mov
xchg
addr16
pushf
or
(bad)
rcr
mov
push
ins
mov
out
aam
mov
es
mov
add
inc
cmp
jae
cmp
cmp
fwait
stos
enter
dec
(bad)
cli
cmp
xor
imul
sub
mov
inc
in
mov
and
add
pop
jnp
fstp
(bad)
stc
push
mov
mov
xlat
pushf
push
mov
or
shr
bound
ror
retf
ins
fwait
scas
xor
dec
mov
cs
add
sbb
sub
fnstenv
(bad)
adc
retf
jno
shl
push
and
add
sbb
jns
mov
aas
(bad)
xchg
xor
add
ficomp
cmps
loopne
xchg
repnz
lea
rol
ror
or
icebp
adc
mov
mov
lods
inc
sub
push
inc
icebp
pop
imul
stos
cmp
adc
xchg
movs
mov
jg
sar
fidivr
inc
or
pop
das
jns
push
cwde
sbb
adc
push
adc
inc
push
popf
(bad)
call
mov
fcomp
push
movs
push
sahf
cmp
in
loopne
fst
lea
loopne
adc
popf
xchg
mov
xchg
mov
or
cmp
mov
jne
inc
jb
jg
push
or
mov
lea
fisttp
test
pop
push
ja
into
and
jb
cmp
push
cmps
or
mov
or
loop
mov
dec
and
loope
xchg
int3
lahf
dec
cmc
xchg
jno
(bad)
sbb
inc
lock
mov
inc
mov
enter
sti
pop
inc
nop
test
dec
cmps
push
aas
or
cld
fistp
cmp
dec
scas
sub
adc
scas
dec
inc
jmp
xchg
cld
push
adc
mov
adc
or
mov
addr16
and
int
push
shl
jecxz
jns
xchg
sbb
xchg
in
loope
xchg
in
push
clc
hlt
mov
std
test
dec
mov
test
push
stos
mov
das
sbb
(bad)
out
dec
fidiv
inc
sbb
mov
xor
mov
aas
add
push
cmc
gs
jno
int
push
or
xchg
das
mov
mov
fs
loope
pop
add
daa
or
xchg
sahf
ins
sti
shl
in
jge
not
mov
lds
sahf
test
dec
mov
mov
test
daa
stc
jecxz
repz
sbb
push
(bad)
sub
cmp
icebp
(bad)
ja
add
adc
push
lods
jbe
jp
cmps
nop
xchg
ss
pop
repz
fidivr
pop
aaa
mov
push
lahf
adc
add
adc
push
cdq
mov
inc
fst
test
sti
or
data16
lea
xor
inc
dec
xchg
lds
mov
pop
jb
xchg
and
out
ins
fwait
scas
xor
sbb
sbb
fs
xchg
push
daa
push
mov
(bad)
jg
ret
clc
popa
adc
inc
adc
aaa
and
sbb
mov
(bad)
and
int
out
mov
addr16
jle
mov
pusha
xchg
shl
(bad)
xchg
jae
pop
xchg
jecxz
mov
push
jo
mov
add
jmp
pop
ins
cwde
movs
pop
in
fst
sbb
cmc
fcomp
aas
jne
dec
les
pop
pop
sahf
gs
xchg
rcr
out
shl
leave
pop
jge
inc
mov
or
push
mov
add
mov
mov
or
neg
xchg
adc
je
mov
xchg
repz
sub
push
lds
scas
adc
push
sbb
jmp
adc
dec
dec
mov
dec
(bad)
jne
cmp
(bad)
xor
cmp
cs
mov
sbb
dec
out
xchg
and
stc
xor
add
add
outs
pop
cmps
and
loope
adc
or
clc
pop
jmp
add
xor
mov
dec
xchg
loope
rcl
mov
jmp
test
push
mov
xlat
aam
(bad)
cmp
movs
sub
fidivr
cs
jmp
push
dec
mov
inc
sub
mov
mov
cli
lea
stos
in
jbe
inc
xor
lods
adc
add
adc
cmps
dec
xor
inc
jne
into
cmps
pop
es
ds
mov
jl
pop
lea
imul
xchg
dec
xchg
mov
add
cli
cmps
or
cmps
in
mov
adc
loope
dec
push
xchg
mov
sub
sub
mov
data16
push
dec
popf
sbb
das
sti
aaa
push
jae
mov
xchg
dec
inc
enter
mov
xor
add
jle
sbb
mov
jae
xchg
test
neg
jg
pop
fbstp
lahf
dec
call
ret
jecxz
lock
ffreep
ss
stos
add
mov
push
ins
mov
cmp
mov
xchg
and
ja
call
adc
sub
sbb
cli
ds
push
inc
pop
pop
mov
push
mov
mov
adc
cs
mov
jb
out
add
push
cmp
xor
fcom
mov
nop
inc
dec
stc
in
ja
sbb
add
xor
out
scas
loope
push
sub
adc
cs
out
fnstcw
fiadd
cmp
cwde
inc
or
mov
sar
add
sbb
cmp
xor
sub
xor
xor
cmp
movs
cli
or
dec
ins
xor
cmp
ss
push
xchg
shl
xor
push
aas
mov
adc
in
out
repz
(bad)
mov
enter
or
xlat
retf
inc
fbstp
jne
push
xor
lea
adc
shr
or
std
add
inc
call
push
out
pop
mov
stos
sbb
or
lea
pop
in
test
test
pushf
sbb
push
pop
mov
and
xchg
jp
lock
test
out
add
ja
xchg
xchg
retf
repnz
imul
cwde
mov
adc
jmp
push
dec
mov
inc
pusha
mov
push
mov
inc
into
add
or
inc
mov
ja
jne
(bad)
stos
jg
fisttp
cmps
sub
mov
(bad)
in
pop
mov
push
push
stos
pop
repz
in
movs
mov
fs
cwde
push
and
rcl
mov
int
ret
lods
leave
xchg
xlat
stc
test
scas
inc
mov
pop
cmp
test
and
cmp
inc
ds
lahf
mov
nop
cmp
iret
add
xchg
sbb
inc
inc
jmp
xor
add
and
sbb
jg
lea
sbb
cs
out
inc
lods
enter
jbe
popf
push
retf
pop
mov
xchg
fs
inc
sub
test
loope
int3
das
movs
inc
add
std
clc
test
scas
inc
out
mov
sbb
repnz
rcr
xor
das
dec
and
cs
or
sub
mov
push
fs
leave
inc
ins
jbe
mov
pop
mov
inc
fimul
retf
cdq
mov
in
retf
lods
neg
jns
jg
inc
aad
or
mov
jmp
xor
lds
cmps
pop
add
xchg
cmc
nop
loope
dec
sbb
and
hlt
icebp
enter
pop
push
inc
xchg
pop
bound
push
or
cmp
push
test
js
jae
in
ins
jl
sbb
cmp
imul
jmp
xor
daa
mov
js
pop
add
mov
push
xchg
clc
pusha
pop
int
mov
jecxz
mov
inc
je
mov
hlt
mov
mov
jae
dec
in
sbb
adc
hlt
fisub
dec
test
xor
mov
dec
popf
xchg
addr16
bound
add
int
sbb
es
or
sub
cdq
mov
(bad)
(bad)
xchg
add
push
cmp
jl
shl
std
rol
mov
jge
xchg
mov
aas
add
hlt
sub
xor
jb
push
cmp
nop
clc
call
push
pop
ror
cmp
js
jge
mov
lahf
cmp
fild
cli
or
int
xor
sbb
dec
mov
push
popf
mov
fcomp
mov
jmp
inc
jbe
push
ret
mov
test
mov
push
(bad)
mov
xor
setae
add
mov
sbb
cli
test
ja
and
sub
xor
inc
mov
jns
movs
lods
mov
or
and
or
jne
cmp
pop
pusha
xchg
shl
add
retf
cmp
jl
aam
adc
pop
pop
rcr
mov
jg
mov
jl
jecxz
add
sti
jmp
hlt
push
cmps
inc
jns
mov
pusha
sbb
shr
lods
lods
cmp
pop
fidivr
pop
sub
mov
ss
or
test
inc
stos
mov
mov
jmp
jp
call
xor
sub
or
pop
mov
das
pop
in
rcl
fst
and
dec
xchg
les
(bad)
fdiv
sbb
shr
and
popf
xor
lock
ret
mov
imul
cli
sti
test
lea
add
sbb
lds
fild
arpl
enter
add
add
jp
scas
outs
aaa
cmps
sub
lahf
jno
sbb
fcomp
sbb
push
cmps
imul
in
cdq
arpl
shl
xchg
in
add
mov
int
xchg
cmc
fs
lods
xchg
sub
aaa
sub
pop
ret
pop
dec
test
jne
cs
push
in
fwait
shr
call
pusha
dec
pusha
cmp
pop
ja
add
pop
mov
ret
adc
neg
xor
rcr
adc
inc
push
lds
mov
lahf
dec
cld
adc
rcl
movs
in
mov
xchg
fwait
mov
aaa
call
es
lods
xchg
jb
push
cs
in
bnd
cmp
dec
mov
sub
ins
xchg
retf
dec
xor
js
sbb
xor
or
dec
mov
jb
movs
xchg
xor
cld
leave
mov
mov
add
inc
xor
je
mov
jmp
mov
stos
fs
mov
ds
sti
aam
mov
mov
jmp
cs
mul
or
push
mov
cwde
fst
ret
cmp
lock
and
or
add
add
sbb
mov
inc
xchg
retf
xor
iret
ficomp
fsub
sub
fidivr
xchg
les
push
xchg
shl
mov
fs
mov
ds
(bad)
ret
cmps
ret
in
outs
mov
aaa
xchg
push
das
sbb
out
push
sti
inc
jb
push
mov
aaa
cmp
lahf
xchg
mov
push
leave
adc
xor
push
pusha
mov
inc
(bad)
push
pop
mov
jae
mov
jl
rol
jmp
shl
loope
or
xchg
gs
cli
mov
loope
or
inc
mov
jmp
xchg
mov
push
cs
call
stos
sbb
scas
inc
sub
mov
jmp
jae
call
push
mov
pusha
arpl
ja
xchg
sub
loop
cdq
aas
test
andps
pop
xchg
retf
test
das
xchg
(bad)
mov
mov
push
mov
xchg
add
iret
icebp
mov
mov
inc
fisttp
and
mov
in
jl
and
inc
and
mov
cwde
ds
inc
enter
xchg
js
add
enter
movlps
pusha
jae
jg
xchg
add
retf
or
xchg
sbb
jb
fistp
iret
lock
retf
aad
jge
cli
stos
lea
ins
or
pushf
cmps
cmps
cmp
lods
ror
mov
push
and
iret
int3
(bad)
inc
nop
sbb
push
fstp
outs
addr16
pop
out
mov
mov
cli
loope
xchg
push
push
inc
aaa
sti
pop
adc
pop
int
mov
pusha
xchg
into
cmp
popf
mov
or
and
call
fist
mov
enter
cmps
shl
cli
mov
or
mov
mov
and
fimul
mov
sub
lods
pop
fbld
pop
sbb
test
inc
push
test
jns
xchg
rcl
jae
or
cmp
je
sub
push
mov
fs
(bad)
jno
and
loope
stos
jmp
sti
jl
jb
sub
mov
outs
fsubr
xchg
daa
xchg
jge
(bad)
test
cmp
(bad)
xor
jmp
dec
dec
cmc
call
ds
cmc
stc
inc
fidiv
xor
inc
dec
icebp
(bad)
mov
out
dec
cli
jbe
je
out
add
lods
das
popf
add
data16
dec
inc
aad
add
es
out
inc
enter
adc
bound
jge
mov
jg
clc
pusha
pop
int
hlt
xor
fild
xchg
test
add
ret
push
mov
dec
imul
adc
ds
xchg
mov
icebp
xor
push
jge
mov
pop
lahf
mov
fstp
into
cli
add
inc
into
and
es
sub
or
jb
mov
jb
mov
int
test
lods
int3
jo
ins
jo
movs
je
scas
loope
(bad)
in
mov
hlt
mov
xchg
ins
(bad)
pop
mov
jns
xchg
mov
jecxz
stos
jmp
ja
(bad)
cmc
mov
inc
call
movs
adc
sub
mov
ficomp
call
xor
pop
sub
jne
adc
imul
sahf
cmp
and
fist
fisub
sar
xchg
lock
inc
xchg
push
xchg
xchg
je
mul
fwait
mov
gs
mov
adc
aam
test
loop
outs
xchg
adc
icebp
xor
sbb
xchg
lock
xchg
aaa
pop
or
jno
cmp
push
or
mov
mov
lahf
xchg
arpl
pop
in
or
jl
inc
(bad)
jb
ins
pusha
mov
ja
mov
sbb
dec
pop
xchg
stos
test
pop
jno
test
jg
in
cdq
fs
add
repnz
mov
xlat
je
(bad)
mov
je
xchg
mov
inc
in
fdivr
cld
fistp
mov
iret
push
or
or
pop
jge
sahf
pop
sbb
mov
mov
sub
sbb
aas
fldenv
xor
sub
jbe
dec
outs
(bad)
push
and
mov
cmp
pop
(bad)
fisub
jmp
scas
loopne
or
pusha
in
jmp
sbb
mov
rcl
dec
mov
std
js
fincstp
nop
in
lock
push
mov
es
sub
aad
ja
and
sbb
or
sub
lea
scas
push
(bad)
fbstp
cmps
aam
push
jbe
call
xor
pop
xor
mov
jl
xchg
xchg
xor
rcr
daa
mov
jg
pop
jg
mov
push
mov
cmp
xchg
in
mov
movs
out
sub
dec
pop
in
lock
ret
lock
jno
jb
xor
ret
or
inc
test
imul
test
mov
and
pop
ins
pusha
push
adc
and
pminsw
push
mov
addr16
movs
test
inc
and
aad
adc
jno
stos
pop
repz
dec
loop
cmps
outs
xchg
call
xchg
outs
sti
stos
lods
cli
movs
ins
arpl
stc
repnz
jecxz
jle
loop
inc
in
pop
fisttp
dec
xrelease
sub
adc
test
jl
test
outs
sar
jge
clc
popa
je
inc
jmp
sbb
aas
mov
sub
pop
pop
out
mov
sbb
pop
in
scas
xchg
xor
jg
popf
push
jecxz
idiv
cwde
not
out
jmp
mov
stos
jg
call
jmp
dec
mov
inc
jmp
scas
xor
or
aaa
jle
and
xor
mov
dec
jmp
jle
(bad)
and
jae
adc
imul
inc
fsubr
fs
mov
stc
(bad)
movs
add
gs
movs
pop
neg
loope
loope
mov
psubd
mov
in
inc
xchg
test
push
stos
fs
xchg
in
cdq
cmp
call
dec
in
inc
jns
xor
pop
inc
inc
xchg
jo
fisttp
sar
movs
lock
jns
mov
adc
pop
jns
jb
retf
movs
shr
fsub
test
lods
loop
jecxz
jb
mov
addr16
lahf
dec
test
neg
addr16
movs
xchg
aas
and
fild
xchg
mov
cmp
sub
cld
lods
jae
sbb
push
cmp
mov
add
stos
push
and
jg
fsub
xor
add
sbb
jae
xor
push
mov
stos
or
into
sub
cmps
xchg
xchg
xor
fcmovu
fwait
aas
(bad)
jecxz
cli
jl
pop
lea
hlt
mov
pop
xchg
les
xor
ret
xor
hlt
cli
mov
das
stos
push
mov
aam
mov
xchg
lahf
inc
retf
cs
(bad)
jmp
jbe
fnsave
adc
mov
(bad)
lea
rol
jae
ficom
pop
pop
add
jle
outs
or
jo
test
sbb
fistp
mov
push
mov
call
cmp
mov
movs
neg
(bad)
adc
xor
sar
(bad)
jecxz
outs
popf
scas
inc
lds
mov
fstp
in
cs
inc
call
jp
mov
scas
ins
in
sub
and
xor
retf
sbb
dec
xor
and
and
(bad)
aaa
mov
jg
jl
jg
dec
jmp
shl
sar
stc
aam
ja
dec
xchg
push
push
fwait
adc
fdiv
pop
ins
mov
xor
test
stc
inc
jo
pop
mov
sbb
icebp
test
mov
or
xchg
clc
inc
inc
push
pop
mov
arpl
ins
push
mov
addr16
mov
push
or
jge
iret
xchg
aas
test
arpl
add
cmp
pop
neg
loop
test
xchg
jno
cmc
aam
add
sbb
stos
outs
push
in
xchg
xchg
and
icebp
sub
xlat
dec
inc
dec
jmp
fmul
cmp
push
ds
mov
sar
pop
int
sti
clc
sbb
jnp
out
and
popf
adc
inc
inc
fiadd
aaa
mov
arpl
sbb
in
mov
jb
sbb
cmps
jno
mov
dec
call
cs
cmc
xor
in
cli
mov
dec
mov
mov
xor
add
stos
dec
lock
cmp
call
and
xor
jo
jne
jns
mov
out
in
xor
lock
inc
dec
clc
push
sbb
and
and
lea
ror
cmp
push
clc
stc
sti
es
jmp
mov
dec
cmps
mov
push
std
movs
xchg
daa
lds
xchg
loope
rcr
mov
sti
or
lods
push
repnz
in
ds
ss
or
movs
inc
sub
mov
loopne
sbb
xor
aas
and
outs
add
lea
xlat
arpl
imul
cmp
xchg
movs
adc
pop
int
mov
pushf
pop
add
repz
fs
(bad)
mov
and
add
test
jnp
nop
repz
xor
shl
add
test
jecxz
iret
xor
addr16
and
jno
push
mov
pop
jnp
cmps
mov
jmp
pop
pop
in
push
gs
and
and
lahf
pop
sbb
mov
pop
stc
stc
add
sti
add
pushf
xor
xchg
ror
les
xor
xlat
mov
xchg
push
mov
pop
ja
sahf
icebp
sbb
stc
loop
fcomp
dec
push
pop
fstp
fist
and
(bad)
pop
stos
sub
add
sub
add
ja
cmp
cmp
outs
add
inc
(bad)
jb
fs
movs
pop
and
adc
sub
fist
hlt
inc
jo
lea
test
jmp
and
mul
(bad)
xchg
stc
sub
adc
cli
or
mov
cmp
daa
in
(bad)
sub
xor
movs
jne
arpl
mov
scas
pop
jmp
push
pop
fist
mov
nop
jne
adc
call
test
sbb
or
imul
pusha
jmp
ret
sahf
mov
dec
repnz
jecxz
call
outs
mov
jmp
lods
mov
cmp
aaa
cmp
pop
std
add
push
sub
mov
fmul
imul
add
fisub
push
ja
add
inc
cmps
or
test
dec
test
mov
xchg
sti
push
sti
adc
inc
mov
pop
mov
xchg
je
fcomip
xchg
and
ins
and
add
xchg
xchg
mov
push
sub
jbe
push
inc
sub
sbb
pop
xchg
jle
mov
mov
test
pop
aas
aam
push
dec
and
mov
mov
mov
inc
in
mov
jmp
jb
outs
sbb
pop
icebp
mov
lahf
adc
clc
pusha
dec
clc
jmp
mov
jp
mov
outs
aas
loopne
movs
fxch
jns
mov
fidivr
ds
mov
jae
dec
mov
imul
add
(bad)
mov
fsubr
(bad)
mov
pcmpgtb
into
push
sub
adc
dec
inc
mov
pop
xchg
test
mov
and
jno
xchg
jbe
movs
(bad)
jno
les
daa
in
lds
pushf
(bad)
imul
mov
adc
stc
xchg
ret
jg
xchg
dec
lock
idiv
inc
or
xor
sbb
push
(bad)
xor
dec
nop
pushf
mov
cmp
aad
jecxz
and
inc
call
or
jo
ret
movs
inc
jp
retf
es
xor
jne
mov
dec
xchg
loop
dec
loop
jns
cmc
cmc
add
push
and
ret
pop
jo
mov
retf
cmp
cmp
cwde
push
mov
sub
jbe
xor
aaa
jns
in
or
mov
cmp
les
fcomp
mov
jbe
inc
and
add
jae
imul
xor
mov
imul
xchg
jbe
inc
in
mov
leave
mov
hlt
xchg
fs
aam
or
xlat
sbb
movs
adc
(bad)
(bad)
fstp
xor
movs
pop
jecxz
mov
cmp
cli
scas
ja
pop
push
pusha
and
inc
aas
pop
icebp
test
mov
sub
push
cli
jns
lea
jae
call
add
(bad)
imul
inc
xchg
dec
jae
mov
jno
sub
daa
mov
dec
bound
arpl
nop
fs
cmc
std
sbb
inc
movs
idiv
push
mov
test
test
fisub
jge
mov
ds
sbb
cmp
jg
cmp
push
in
sub
mov
enter
add
aas
fcom
xor
or
add
jnp
mov
rcr
add
push
xor
(bad)
mov
les
and
jne
fdivr
jg
mov
push
out
or
out
mov
xchg
or
test
out
lock
sbb
scas
cmp
hlt
mov
sbb
or
jae
movs
movs
adc
cli
jp
lock
pop
inc
xor
pop
cmp
and
fisttp
jge
mov
test
cmp
outs
jmp
test
push
xchg
mov
and
ret
xchg
xchg
bound
rol
test
(bad)
stos
rcl
add
fsubrp
push
mov
cmp
ds
test
pop
movs
or
inc
xchg
push
and
movs
fwait
xchg
ss
push
stc
jnp
clc
jne
jae
sti
sbb
and
pop
(bad)
bound
push
or
add
aas
clc
cmps
call
xchg
fs
push
jno
arpl
mov
dec
mov
xor
in
or
jmp
xchg
jecxz
test
and
lods
inc
xchg
jnp
dec
inc
aaa
out
cmc
lock
retf
and
jno
arpl
stos
mov
sbb
or
sbb
pop
xor
ja
mov
mov
rcl
mov
inc
sahf
retf
daa
cmp
fild
xchg
push
mov
pop
xchg
xchg
arpl
jmp
out
adc
movs
fwait
mov
ficomp
sbb
test
call
mov
xor
cmp
ret
jae
xor
fwait
cmp
daa
mov
out
mov
jnp
lea
xchg
call
mov
adc
inc
jns
dec
inc
retf
mov
xchg
and
in
rol
cld
inc
pop
inc
movs
sub
mov
xchg
je
sahf
popa
push
mov
xchg
and
ins
test
push
inc
popf
mov
icebp
hlt
rol
dec
retf
dec
(bad)
dec
or
(bad)
lods
dec
int
jle
gs
pop
jge
and
lahf
mov
pushf
ds
jl
call
sbb
sub
scas
sub
sysenter
xchg
xor
sbb
jecxz
retf
mov
mov
cmps
loopne
xchg
sar
and
out
xor
outs
mov
sbb
fimul
adc
mov
pop
lods
cs
cs
enter
jo
dec
fld
inc
movs
inc
aas
jne
test
push
jmp
jle
(bad)
xor
or
scas
sub
mov
pop
call
leave
aam
sub
sti
jbe
je
push
mov
ins
xchg
repnz
dec
loop
jns
mov
add
dec
cmps
cmps
mov
sbb
xor
mov
cwde
push
out
jmp
and
repz
sub
cmp
pusha
scas
sub
mov
inc
nop
mov
mov
ds
cdq
out
add
mov
cmp
sub
movs
fs
cmps
adc
xchg
xor
jl
iret
xchg
push
xchg
icebp
jge
jns
jl
pop
repz
call
dec
jmp
push
jecxz
test
stos
rcl
mul
xor
mov
jmp
xor
sub
ds
and
sbb
pop
mov
push
jne
test
nop
xor
jmp
or
or
push
gs
ins
cmp
mov
cmp
imul
cmp
inc
mov
mov
xchg
inc
mov
pop
pop
call
jns
(bad)
xchg
rcl
push
add
ffreep
cmps
(bad)
outs
push
mov
jno
ss
dec
xor
dec
fidiv
inc
and
sbb
jnp
je
adc
cs
ins
in
mov
rcr
ins
pusha
add
ds
xor
xlat
outs
dec
mov
pushf
cmp
mov
pop
call
lea
jp
xchg
pop
repz
lock
jmp
sahf
imul
out
xchg
xchg
xor
fimul
mov
add
cmp
push
repz
ss
sti
rcr
adc
jl
add
stc
add
mov
push
or
dec
sar
das
mov
jg
jns
jmp
outs
push
add
jle
pop
arpl
dec
xor
test
cmp
outs
out
call
aad
gs
pop
jecxz
fiadd
shl
jo
mov
xchg
push
repz
fiadd
test
cld
or
xchg
ficom
and
icebp
jmp
push
cmp
push
dec
stos
cmp
mov
pop
or
retf
inc
and
jle
shr
jmp
fist
sbb
push
popf
and
sahf
push
ds
mov
inc
loopne
call
jbe
rol
(bad)
fidivr
lock
push
lds
cmps
cmp
outs
call
sbb
sbb
cmc
adc
dec
fs
sub
sbb
iret
jecxz
loope
pusha
push
jg
xor
inc
test
jns
xchg
mov
call
push
push
adc
pop
into
push
pusha
mov
pop
lahf
xchg
adc
cmp
xchg
sbb
fs
mov
pop
mov
loope
retf
xchg
pop
es
jle
mov
sbb
cwde
mov
adc
jecxz
in
xlat
dec
push
xchg
cwde
xor
inc
iret
dec
or
out
in
std
and
mov
inc
and
mov
inc
(bad)
pop
sti
rcr
sar
pusha
je
jmp
das
xchg
xor
push
data16
inc
mov
xchg
xchg
rol
xlat
inc
pop
pop
mov
pop
xchg
(bad)
cdq
jge
mov
add
(bad)
cmps
xor
pop
repz
mov
inc
repz
lea
push
inc
sub
stc
aam
push
call
stos
adc
test
pop
pminsw
je
cld
add
(bad)
push
push
jb
ret
dec
push
add
cmp
sbb
jp
mov
dec
pop
add
add
mov
jl
cmp
inc
jmp
fisub
into
inc
xchg
lock
xchg
loope
stos
sbb
pusha
je
stos
xchg
add
in
fld
cdq
stos
aaa
les
ds
stc
loop
jecxz
jo
inc
test
imul
or
mov
push
cli
pop
adc
push
add
pop
mov
mov
fild
sahf
push
cmps
xor
mov
dec
les
dec
cld
inc
pusha
inc
mov
push
stos
fistp
cmp
mov
mov
add
sahf
mov
mov
call
push
jecxz
fdiv
cmp
push
fidiv
sub
mov
(bad)
(bad)
sbb
repnz
call
xor
scas
ins
jnp
ja
test
inc
xchg
cdq
test
xor
mov
mov
jge
test
lock
inc
sahf
rol
paddusw
or
pop
sub
aas
ins
sub
pop
cmp
loopne
push
sbb
test
and
cmps
mov
outs
(bad)
mov
jb
push
xor
add
jbe
dec
mov
mov
add
xor
jl
jmp
sbb
sbb
hlt
xor
call
call
fld
stos
shl
pop
inc
xchg
test
add
(bad)
inc
outs
test
pusha
jecxz
sar
mov
push
push
test
inc
xchg
cmps
lahf
xor
neg
mov
(bad)
jo
and
sub
ds
das
xchg
ins
(bad)
pop
push
fistp
sar
or
push
push
mov
jle
popf
dec
lds
push
loop
jbe
mov
or
sbb
adc
icebp
outs
dec
lods
fimul
jle
cmp
mov
push
cmp
pop
je
pushf
push
leave
retf
mov
test
adc
add
ss
imul
je
mov
inc
ror
add
icebp
or
jl
jb
push
xchg
jecxz
sahf
aam
jb
xchg
repnz
xchg
or
inc
xchg
mov
pusha
mov
std
fld
mov
(bad)
sti
dec
fisubr
pop
dec
jmp
pop
pop
fnstenv
sbb
dec
icebp
xchg
lods
xchg
xor
int
fcmovne
js
clc
jbe
gs
cmp
mov
mov
mov
mov
push
xchg
mov
cmp
aam
sbb
(bad)
jp
inc
push
inc
mov
pushfw
shl
and
in
test
imul
icebp
xor
sar
xchg
shl
dec
adc
mov
jecxz
fisttp
adc
rcr
imul
test
push
xchg
mov
call
bound
in
add
and
and
mov
addr16
and
fnstenv
out
jae
lea
fadd
push
xchg
mov
mov
stos
das
ret
dec
movs
(bad)
mov
jno
xchg
lock
into
test
clc
or
stc
mov
push
ficomp
push
cmp
sbb
dec
cmp
xchg
mov
(bad)
cli
add
xor
sub
push
(bad)
pusha
jo
jne
mov
jne
xchg
test
(bad)
jmp
cli
jl
push
mov
loopne
in
mov
mov
xchg
add
das
lods
dec
ja
mov
push
and
cli
xchg
std
fsub
dec
lods
lods
imul
mov
cs
stc
loop
sar
ja
inc
fwait
cmp
sti
cs
or
mov
mov
call
jle
push
and
push
adc
sbb
adc
cwde
retf
inc
and
stos
xchg
inc
lods
hlt
jno
imul
rol
call
push
stc
sti
hlt
jo
dec
xchg
test
pop
mov
icebp
repnz
cdq
dec
push
sahf
adc
lock
out
jle
push
jp
es
sbb
cs
fnstcw
jle
jmp
xor
aas
or
sbb
outs
dec
call
mov
jns
not
aam
outs
jo
dec
ficom
xchg
ins
loope
add
jae
ins
movs
sub
test
lock
stc
repnz
mov
cwde
mov
out
fisubr
sbb
cli
cld
fdivr
and
sbb
cwde
dec
pop
jns
mov
ret
sub
dec
mov
pop
pop
jno
retf
pusha
add
pop
fild
xchg
imul
cmp
xor
stc
xchg
xor
fdiv
ins
pusha
inc
mov
xor
xchg
jno
in
ret
jecxz
test
mov
jae
mov
add
repnz
mov
cwde
mov
out
fisubr
sub
cli
cld
fdivr
and
or
jge
je
imul
jecxz
mov
jb
or
int
push
push
add
fwait
aas
cmp
imul
and
sbb
cmp
fbstp
jecxz
sbb
pop
fdiv
sub
clc
xchg
add
sbb
mov
add
(bad)
clc
inc
push
scas
lods
inc
repz
(bad)
dec
sbb
enter
call
test
ins
dec
mov
ins
cmps
fwait
int
cmp
stc
js
loope
pushf
into
jbe
inc
cmp
ss
jb
pushf
cmp
and
outs
jnp
jnp
mov
(bad)
das
cmp
pop
(bad)
xchg
cmp
inc
mov
movs
aad
add
leavew
xchg
inc
and
sar
rcl
push
data16
(bad)
aam
loope
pop
pop
jmp
cmp
div
enter
jae
dec
mov
inc
aas
jno
fwait
stos
lods
or
jle
std
jl
clc
jge
pop
xor
packuswb
pop
ins
mov
dec
mov
pushf
or
fs
mov
mov
jl
inc
pop
inc
cmps
jge
mov
mov
or
data16
stc
daa
popf
outs
jb
sahf
mov
das
retf
(bad)
pop
pop
test
fisttp
push
dec
jecxz
mov
or
inc
xchg
cs
test
mov
fsqrt
and
xor
xor
jge
add
imul
xor
sbb
or
stc
loope
mov
jo
outs
inc
pop
popf
outs
aad
(bad)
cmp
test
repnz
mov
out
test
mov
mov
in
(bad)
retf
pop
mov
add
mov
lock
jo
pop
mov
push
or
adc
xchg
retf
or
inc
retf
inc
or
push
pusha
mov
enter
inc
mov
jg
xlat
xchg
cmp
and
stos
xchg
and
stc
dec
loop
pop
popa
popf
and
mov
dec
xchg
scas
test
xchg
push
add
(bad)
xchg
ins
loope
cmps
mov
aad
call
pop
rcr
mov
mov
inc
les
pop
xor
mov
jmp
lods
xor
sti
cs
pop
xchg
mov
aam
(bad)
out
addr16
inc
fs
adc
adc
dec
and
xor
push
inc
(bad)
call
pusha
retf
jns
push
mov
addr16
xchg
in
push
dec
cli
cmc
sub
mov
pop
push
mov
stc
(bad)
stos
ret
addr16
inc
retf
or
(bad)
div
inc
je
dec
mov
inc
cmp
mov
fmul
inc
push
xor
or
push
xchg
sub
sar
sbb
adc
and
push
fnstsw
mov
dec
sub
(bad)
loopne
popa
pop
sar
xchg
xor
hlt
dec
mov
ja
leave
xchg
xor
sti
dec
inc
mov
pop
cs
cld
repz
inc
pop
sbb
jne
mov
xchg
lds
cli
(bad)
jl
mul
xor
sbb
mov
imul
xchg
test
ret
jmp
aaa
mov
sbb
test
fiadd
mov
push
aam
test
enter
mov
sbb
test
push
cmp
test
mov
repnz
sub
cld
xlat
into
popa
call
lods
sub
daa
mov
dec
xchg
mov
call
xchg
jecxz
or
fcom
(bad)
push
xor
push
push
fnsave
sub
repz
mov
in
xchg
lods
std
imul
inc
push
scas
outs
xchg
test
cwde
les
dec
(bad)
ror
xchg
sbb
not
das
int
xor
fwait
jp
cmp
repz
pushf
push
sub
cmp
mov
pop
jo
sbb
and
out
or
fldenv
cmp
bound
add
cmp
add
mov
inc
loopne
loopne
out
jno
mov
mov
xchg
ins
scas
xchg
fdiv
dec
mov
in
leave
mov
add
test
mov
dec
jmp
test
sub
fistp
imul
cmp
mov
jmp
add
lds
adc
jo
lahf
push
popf
cs
jo
sbb
xchg
sbb
scas
idiv
inc
add
(bad)
mov
addr16
cld
cdq
dec
loop
jns
in
sti
xchg
adc
(bad)
cli
mov
js
popf
test
icebp
clc
enter
mov
or
shl
into
jb
cmp
pusha
cmps
or
push
mov
jae
mov
cld
push
out
int3
or
xor
and
adc
test
inc
pusha
stos
pop
dec
mov
mov
and
fld
cli
pop
jp
mov
dec
xchg
scas
mov
xchg
jno
(bad)
retf
int3
dec
xchg
bound
fwait
xchg
adc
(bad)
(bad)
dec
jne
lods
inc
sti
inc
(bad)
xor
div
aaa
fs
inc
xchg
sbb
mov
je
mov
mov
or
pushf
mov
pop
pusha
xor
and
jecxz
mov
(bad)
pop
xor
sbb
popf
mov
fs
adc
mov
sti
jp
push
lea
rol
idiv
mov
in
ins
xchg
jle
in
mov
jl
int3
repnz
loope
dec
dec
lahf
(bad)
pop
fisubr
add
push
in
xor
dec
stos
aaa
sbb
sti
push
lods
mov
test
sub
add
inc
push
arpl
add
jae
mov
add
cmp
jo
outs
jne
xchg
push
iret
lock
stos
cmps
jo
mov
jmp
int
mov
add
xor
(bad)
fbstp
inc
xor
stc
jecxz
call
inc
jno
cs
push
dec
cmp
add
lea
push
sbb
xor
dec
pop
adc
pop
jnp
pop
ss
inc
mov
jb
into
xchg
and
jbe
xchg
mov
and
movs
xchg
or
imul
stos
adc
stc
test
xchg
cmp
push
repnz
sub
cld
xlat
dec
xchg
aaa
popa
aaa
push
cmps
sub
es
out
lods
aam
inc
lods
js
or
sar
inc
shl
add
and
and
mov
push
cwde
retf
inc
and
test
call
mov
inc
call
xchg
jne
(bad)
rcr
stos
shr
outs
push
pushf
movs
mov
adc
cmp
neg
sub
(bad)
aad
and
dec
mov
dec
add
jmp
imul
sbb
and
xor
mov
outs
je
outs
inc
mov
arpl
and
ror
rol
dec
(bad)
dec
xor
dec
loop
jl
neg
test
aad
repz
mov
add
mov
jl
sar
into
test
pop
enter
ror
dec
stc
inc
jnp
pop
cmps
imul
push
imul
or
std
sbb
add
iret
xor
inc
and
lods
or
arpl
mov
(bad)
adc
adc
test
push
in
add
xor
movs
loopne
mov
and
(bad)
mov
test
push
jae
mov
xor
ret
push
mov
repz
xlat
test
push
pop
mov
inc
pop
pop
xchg
call
shr
pushf
lea
push
aaa
cmps
xor
jae
adc
dec
mov
pop
mov
lahf
and
push
jl
fisubr
fmul
push
mov
cld
push
fnsave
xor
rol
mov
ins
push
out
lea
aas
aam
mov
xchg
mov
dec
rcr
xor
push
xor
push
jp
pop
outs
pop
mov
push
cmp
int
in
loop
ror
sbb
aaa
push
lea
xchg
and
data16
lahf
push
add
pop
leave
jmp
push
jnp
scas
jle
sub
cdq
les
adc
shl
and
or
ja
test
xchg
retf
ins
cdq
and
repnz
ds
fidivr
sbb
cmps
or
jo
push
push
inc
cmc
mov
xlat
pop
repnz
cmc
arpl
sub
adc
sbb
adc
pop
(bad)
imul
outs
add
mov
xor
or
jmp
mov
sub
movs
das
(bad)
mov
mov
call
(bad)
movs
sub
jne
movs
mov
fs
mov
and
retf
inc
dec
mov
(bad)
xor
cmp
xchg
retf
jbe
sbb
inc
lods
push
or
shl
mov
test
jl
sbb
adc
repnz
pusha
mov
je
movs
xchg
and
out
fistp
loop
push
ins
stos
pop
loop
jmp
ins
rcr
mov
cli
xchg
div
fdiv
add
mov
loopne
dec
cmc
xor
sbb
std
mov
ins
mov
imul
call
push
xlat
push
out
call
popa
inc
adc
xor
(bad)
fld
xchg
into
aaa
pop
xchg
mov
pop
jmp
xchg
test
xchg
mov
add
xchg
imul
mov
xchg
mov
(bad)
dec
xchg
jp
ds
stc
retf
and
push
movs
pop
ins
pop
cdq
inc
and
xchg
push
inc
scas
push
(bad)
jae
sbb
or
jnp
xor
sub
pop
fld
sahf
imul
sbb
xchg
mov
gs
cmps
fwait
adc
pop
dec
scas
push
popf
mov
inc
in
mov
shl
bound
div
mov
test
jg
mov
mov
scas
xor
pop
clc
cmp
adc
lock
or
xchg
arpl
mov
jg
int
mov
jbe
jge
cli
push
aaa
jo
adc
outs
pop
sahf
push
movs
add
test
(bad)
mov
push
xchg
sti
push
jmp
xor
fmul
dec
mov
lea
out
mov
call
or
stc
test
out
mov
and
fstp
adc
push
inc
xchg
sbb
add
xchg
mov
in
sub
dec
cmp
add
fwait
sbb
mov
and
(bad)
sbb
imul
jmp
pop
stc
mov
jg
stos
cdq
push
jmp
or
leave
cmp
xchg
daa
fcomip
mov
lock
inc
(bad)
mov
xchg
dec
out
pop
pop
fdivr
out
push
in
imul
jl
push
or
mov
test
sub
ins
stc
jmp
(bad)
dec
inc
push
or
sbb
add
xor
sub
stos
push
inc
mov
add
mov
(bad)
jmp
jno
outs
push
movs
push
test
jbe
jmp
repnz
mov
test
push
xchg
loop
in
repz
imul
fidivr
add
and
add
cmp
push
data16
jnp
fld
loope
sbb
jno
iret
and
jae
sbb
pop
outs
mov
push
lods
mov
dec
rcr
cmp
jne
stos
pop
out
lock
mov
xchg
fs
xchg
jb
test
nop
cmps
scas
scas
adc
jle
nop
test
adc
cli
aam
fsqrt
jns
mov
inc
test
sbb
iret
vaddpd
xor
dec
pushf
adc
mov
stos
lods
mov
in
or
fldenv
add
or
imul
sbb
cld
add
dec
call
loopne
jnp
scas
jle
add
xchg
retf
xchg
call
jecxz
or
pushf
ret
add
mov
push
repnz
push
pop
dec
in
mov
jmp
fistp
jne
or
mov
sahf
test
push
aas
int
sbb
das
mov
call
xor
or
aaa
addr16
xchg
pop
mov
jg
lock
jge
mov
and
loopne
xchg
dec
arpl
into
hlt
movs
fabs
inc
jle
mov
push
xor
(bad)
stc
repnz
popf
cmp
push
dec
cmps
or
mov
mov
cld
ins
call
inc
addr16
mov
pop
inc
or
sbb
dec
fnstcw
mov
lahf
cmp
dec
jmp
idiv
mov
mov
dec
mov
mov
sub
rol
imul
call
icebp
lea
mov
jecxz
lock
nop
mov
ds
sbb
dec
mov
gs
outs
xchg
mov
fistp
iret
jo
sti
jbe
jno
stc
cmp
and
pop
or
inc
dec
fldenv
fcom
arpl
and
fild
cli
je
push
fimul
mov
dec
mov
mov
cmc
push
lds
idiv
jge
test
aas
sbb
shr
or
sbb
retf
std
pop
jns
outs
mov
jb
push
nop
retf
mov
dec
daa
xlat
jbe
(bad)
jl
call
in
outs
add
mov
ins
push
outs
pop
mov
mov
(bad)
sbb
call
cli
pop
push
arpl
inc
sahf
shl
push
repnz
mov
les
movs
ins
inc
xchg
cmps
mov
ret
data16
mov
push
stos
cmp
out
push
fild
add
sbb
push
mov
push
xchg
cmps
lahf
mov
xlat
pop
xchg
lock
lock
push
cmp
and
mov
mov
scas
ja
cmps
xor
movs
mov
and
dec
loope
xchg
aaa
mov
inc
push
mov
not
fs
mov
scas
sbb
in
pop
mov
mov
add
dec
fwait
(bad)
push
aad
repz
jmp
fcomp
add
add
jnp
sub
mov
call
ficom
jl
mov
pop
scas
ds
push
stos
outs
dec
mov
push
mov
pop
dec
sbb
popa
aam
add
dec
std
sahf
retf
push
mov
add
movs
popf
push
mov
xchg
neg
sar
inc
pop
sub
imul
jecxz
retf
sub
into
fisub
retf
ja
mov
sub
out
mov
(bad)
jle
test
call
pop
inc
call
cmp
imul
inc
test
push
sti
idiv
out
add
jp
nop
sahf
pusha
cmps
shl
inc
sub
inc
test
inc
xchg
xchg
xchg
sbb
icebp
mov
loop
pusha
xchg
movs
outs
clc
jb
push
and
fcomp
call
push
bound
inc
pop
jge
or
xor
mov
add
and
lahf
or
xor
pop
pusha
fstp
adc
popf
bound
and
cmps
xchg
push
mov
outs
push
fstp
mov
mov
in
lock
push
cmp
nop
sbb
stc
loop
iret
jecxz
js
fsubr
cmps
dec
add
cld
retf
fisttp
push
inc
rcl
ins
push
and
xchg
mov
mov
call
ins
dec
pop
xor
adc
add
scas
cmp
add
data16
push
xchg
ins
fwait
mov
inc
(bad)
fist
aad
push
je
and
int3
test
mov
sub
ret
mov
shr
mov
sub
mov
sti
xchg
mov
fdiv
icebp
push
jmp
and
iret
cmc
fistp
xor
pop
fbstp
cmp
dec
cmp
xchg
xchg
test
adc
and
jns
into
push
sbb
and
or
xor
mov
arpl
jmp
jb
pop
inc
dec
test
mov
dec
loope
mov
and
ins
lods
call
pushf
mov
aam
clc
call
push
mov
push
xor
retf
(bad)
jbe
add
bound
push
jno
ret
cmp
std
push
and
pushf
rol
add
inc
or
and
das
sahf
add
pop
dec
mov
mov
jae
into
sahf
add
cwde
adc
jae
scas
push
lahf
xchg
fnstsw
add
in
and
jle
lea
sbb
fidiv
fsubp
dec
mov
cmp
fcom
xor
pop
imul
mov
mov
xabort
mov
je
pop
push
fsub
ss
and
mov
mov
test
or
lods
sub
pop
test
and
jge
nop
jle
mov
push
test
or
paddsw
loope
call
popf
mov
mov
retf
cdq
and
lahf
inc
jmp
cld
cmp
cs
lock
and
dec
xchg
sbb
loopne
push
dec
pushf
ret
mov
sbb
data16
stc
sub
add
adc
dec
xor
test
xor
fwait
shl
daa
popf
dec
pop
dec
push
lea
hlt
mov
pop
in
in
fstp
cmc
sbb
jl
scas
scas
sar
mov
pop
and
sbb
bound
xlat
adc
pop
dec
ret
adc
jle
pop
jg
mov
or
mov
jmp
fucomi
pop
inc
jp
int
sbb
or
sahf
sbb
lahf
push
pop
add
mov
pop
aam
call
lock
in
pop
push
mov
jl
rcr
ss
xchg
add
jg
mov
aam
xchg
sbb
mov
adc
loope
jns
mov
jb
dec
(bad)
aas
ds
call
stos
adc
scas
dec
sbb
xchg
cmps
mov
dec
sub
mov
pop
jno
xor
cmp
ja
sbb
push
mov
dec
mov
daa
inc
out
fist
aam
dec
push
cmp
loopne
test
test
in
dec
pop
jmp
(bad)
mov
push
mov
icebp
jl
xchg
sti
sbb
scas
dec
lock
retf
ds
push
in
jae
push
scas
pop
dec
daa
sti
inc
ds
mov
mov
clc
mov
xchg
clc
jbe
add
retf
popa
add
xor
sbb
jg
mov
pushf
getsec
daa
cmp
enter
shl
ins
outs
pop
or
xor
mov
cld
and
pop
mov
outs
jg
mov
adc
std
(bad)
sbb
xchg
gs
sub
stc
in
std
cmp
mov
inc
sub
mov
jecxz
or
add
xor
add
stos
imul
sub
mov
ins
xchg
lods
call
mov
sbb
stos
dec
in
repz
mov
sahf
fs
std
aam
push
hlt
ins
or
xchg
movs
test
daa
stc
jmp
enter
xchg
lahf
push
jecxz
ficom
fist
and
dec
test
dec
sub
lahf
mov
iret
and
cli
or
out
jbe
jp
retf
jae
adc
imul
movs
cmp
mov
dec
out
int
and
sti
jo
imul
repz
icebp
xchg
dec
ss
enter
ins
or
push
or
stos
rcr
inc
jle
scas
ss
clc
cmp
mov
fist
cmp
dec
test
imul
mov
iret
xor
push
call
add
int
sub
adc
imul
cmp
sbb
and
ficom
repnz
jo
lea
mov
pusha
fwait
rcl
lock
mov
gs
mov
adc
repnz
xrelease
mov
icebp
pop
fidivr
daa
cmp
cld
fdivr
cmp
or
sub
mov
fdiv
call
pusha
push
xor
sbb
add
pop
fnstsw
lods
pop
xor
add
xor
fstp
fist
movs
inc
shl
inc
in
pop
push
cmc
rol
test
aas
movs
jnp
xchg
mov
out
leave
jecxz
imul
sub
ds
fld
aas
ja
jp
pop
push
call
stos
xor
fist
out
pop
xchg
in
jno
jno
leave
and
aas
add
xor
sahf
or
dec
hlt
xlat
xchg
es
bound
jle
(bad)
cdq
les
daa
fstp
cmc
and
bound
add
mov
sbb
enter
xchg
lods
ins
icebp
pop
fisttp
dec
fdivr
stos
push
fnstsw
or
add
lahf
mov
iret
ds
sbb
cli
aas
mov
cmp
and
push
add
ins
mov
cmps
sub
xchg
movs
test
out
fist
les
jp
popf
pop
loop
(bad)
dec
lahf
stos
test
jmp
push
(bad)
jle
(bad)
mov
adc
les
xchg
(bad)
pop
popa
mov
inc
in
stos
ss
leave
push
call
stos
sbb
cs
mov
cwde
xor
jmp
mov
aas
int
sbb
pop
mov
test
mov
push
cwde
cdq
test
ret
xor
inc
jb
pop
icebp
sahf
jmp
dec
jmp
mov
idiv
push
dec
and
xchg
test
mov
xor
xor
shr
sbb
gs
cli
cs
ins
xchg
fwait
stos
ret
retf
arpl
lock
cmps
clc
jno
inc
and
cmp
push
cdq
and
test
add
stos
push
pop
add
xor
jbe
lds
pushf
fstp
leave
mov
xchg
push
and
stos
xchg
jns
cmps
cmps
sar
mov
and
aad
(bad)
retf
fsub
inc
loop
jno
inc
iret
sbb
stc
out
lock
in
xor
ficom
add
push
mov
cmp
fstp
in
or
jmp
sbb
adc
imul
or
test
call
sti
daa
nop
sti
push
mov
jb
pop
test
xchg
je
xchg
add
adc
clc
sub
mov
mov
cdq
dec
inc
jmp
sub
dec
fdiv
aaa
pop
cs
jne
cmp
cmp
push
mov
lods
inc
call
dec
pop
add
pop
push
inc
(bad)
jb
push
pusha
mov
outs
mov
popa
fcmove
(bad)
aas
enter
pop
bound
pop
ffree
in
in
loope
call
jmp
push
stos
mov
sti
cwde
mov
retf
jmp
mov
dec
push
sbb
cli
fisub
int
jo
dec
stos
data16
mov
mov
lahf
cmp
icebp
push
enter
std
js
jne
in
and
outs
add
and
mov
pop
mov
xor
repz
inc
mov
pop
pop
fiadd
xchg
loopne
xchg
repnz
div
lahf
stos
aad
mov
dec
mov
cli
aam
scas
in
pop
mov
cmp
mov
adc
pop
mov
push
jmp
int
xor
clc
or
inc
cmps
push
jae
and
mov
mov
or
add
mov
das
mov
jb
outs
addr16
push
xchg
call
jecxz
dec
stc
test
mov
test
movs
retf
call
lods
movs
jae
jbe
dec
inc
dec
(bad)
cld
jbe
cmp
pop
mov
inc
sbb
mov
iret
inc
call
popa
je
and
pop
gs
add
pop
scas
je
pop
sbb
xchg
mov
jns
aad
aaa
lahf
rcr
jns
push
fild
rol
pushf
shl
push
rcl
or
add
mov
jl
xchg
add
(bad)
dec
jnp
movs
jp
dec
fisttp
sbb
xrelease
or
push
inc
push
inc
push
dec
sub
or
add
adc
push
retf
addr16
shl
movs
cmp
mov
pop
aaa
add
(bad)
es
in
jo
mov
push
mov
jmp
int
repz
scas
dec
lahf
pop
jb
xchg
and
sti
adc
mov
repz
pop
sub
or
cmp
mov
pop
mov
call
lea
cli
outs
je
xor
dec
or
add
adc
jp
retf
cwde
mov
and
add
fsub
aad
pop
pop
mov
cmp
xchg
inc
xor
sar
stc
fwait
aad
movs
outs
ja
mov
jecxz
retf
sbb
fidivr
sub
stc
out
fist
adc
sbb
outs
push
lahf
inc
or
mov
xchg
xor
mov
iret
imul
mov
jp
jae
ficom
pop
jg
xor
and
and
jp
sahf
ins
ss
pop
xchg
fldcw
neg
mov
cwde
not
jg
jno
pop
lock
bound
fwait
jno
(bad)
ror
mov
pop
mov
cld
fsubr
fsave
xchg
push
repz
push
ss
mov
push
jge
jne
arpl
movs
nop
mov
sti
shr
lahf
enter
adc
xor
ja
adc
sub
mov
ja
movs
mov
adc
xchg
xor
jmp
inc
mov
js
rcl
in
div
neg
sar
inc
push
mov
cli
repnz
in
lock
xchg
fnstsw
js
sub
jmp
push
dec
mov
inc
or
xchg
mov
test
jno
cmps
and
add
mov
lods
adc
imul
sbb
mov
(bad)
int
popf
aaa
mov
jo
jge
sub
(bad)
pusha
mov
xchg
idiv
mov
sub
test
aam
fsubr
cmp
lea
push
aas
sub
cld
xlat
pop
clc
dec
popa
sbb
ins
jnp
dec
cmp
lahf
mov
mov
xchg
cli
or
and
and
ds
add
pop
pusha
stos
jl
scas
or
mov
dec
cli
out
cdq
pop
mov
inc
jl
mov
outs
mov
mov
push
out
xchg
push
icebp
pop
xchg
mov
pop
in
mov
fistp
mov
dec
lock
das
sbb
test
sbb
push
cs
test
in
pop
sahf
fstp
inc
shr
ja
sbb
cmp
or
pop
adc
pop
mov
inc
shr
add
jbe
mov
and
dec
push
(bad)
rcl
mov
jnp
xchg
mov
push
sbb
cmc
mov
jmp
inc
mov
into
das
sbb
jmp
pop
push
or
outs
sahf
push
mov
push
or
add
fadd
sbb
or
ins
adc
outs
mov
div
rcr
lock
stos
pop
lock
in
push
sar
mov
call
and
jecxz
(bad)
pop
inc
cdq
mov
lea
jmp
inc
cmp
xchg
repz
stos
pop
push
mov
push
pusha
lahf
mov
test
and
jo
aam
jo
xor
and
mov
mov
mov
dec
call
and
rol
and
ins
test
dec
mov
in
adc
fisubr
mov
fs
pushf
fwait
cld
aas
adc
mov
fadd
dec
lods
cs
jl
xor
sbb
jge
js
jne
popf
mov
cmp
(bad)
jns
sar
lea
pop
pop
sub
add
inc
and
sub
ins
jns
jno
movs
sub
mov
add
sub
div
mov
aad
jge
mov
std
sar
adc
push
rcl
xchg
sub
in
mov
mov
adc
ret
div
jmp
push
iret
sub
xlat
stc
fstp
cmp
arpl
cmp
add
lahf
mov
nop
push
and
adc
pop
jmp
push
cmp
(bad)
jne
popf
or
mov
dec
std
fistp
aad
sbb
pop
cli
mov
fs
ja
jecxz
or
cmps
xchg
pop
in
(bad)
mov
jns
nop
mov
retf
in
in
idiv
xchg
cdq
inc
hlt
dec
mov
inc
or
inc
jae
dec
xchg
adc
lahf
imul
mov
fist
pop
pop
aad
sbb
adc
es
aas
(bad)
push
push
ret
xchg
cmp
mov
jmp
xor
test
push
xchg
rol
or
repz
test
inc
push
mov
lods
xor
(bad)
loop
stos
clc
dec
jg
mov
cli
cmp
das
ror
inc
in
inc
push
jle
fwait
sub
sti
cs
jbe
mov
mov
call
imul
or
add
test
aaa
mov
mov
(bad)
fsubr
mov
bound
xor
cwde
jge
jmp
inc
xchg
cdq
mov
sub
sbb
retf
repz
sbb
mov
ds
shl
retf
push
jle
ss
push
test
sbb
dec
fmul
adc
pop
or
cs
mov
arpl
mov
or
test
cmp
adc
jbe
stos
pop
clc
xchg
xlat
pop
call
or
(bad)
mov
neg
(bad)
aaa
fdiv
xchg
mov
in
retf
loopne
inc
lods
test
loopne
iret
dec
cs
jmp
dec
push
pusha
xor
adc
cmp
push
sbb
mov
ret
dec
push
stos
push
jmp
pusha
inc
pop
pop
(bad)
pop
adc
daa
add
or
pop
fistp
inc
mov
pop
call
or
into
mov
repnz
push
cld
cmps
hlt
outs
pushf
xlat
mov
out
mov
and
fldenv
mov
fs
in
test
das
aam
sbb
pop
inc
jmp
iret
dec
or
nop
sti
stos
imul
or
inc
xchg
push
outs
xchg
or
mov
icebp
arpl
imul
adc
sahf
adc
ja
addr16
mov
imul
cmp
(bad)
xchg
inc
scas
mov
popa
dec
inc
cmps
jae
xchg
outs
sahf
les
mov
xchg
add
inc
xchg
xchg
pushf
les
fs
mov
sbb
ror
mov
cmp
(bad)
adc
dec
mov
pop
es
cmps
test
xor
(bad)
js
clc
sbb
xor
sub
jbe
push
adc
ja
mov
dec
call
icebp
jl
push
lea
xchg
idiv
mov
jns
cli
sti
test
jg
mov
bound
sahf
or
ret
outs
lahf
lods
push
(bad)
sub
sub
clc
fcmove
dec
jmp
sbb
mov
adc
mov
sub
outs
(bad)
add
xor
and
xchg
das
mov
fiadd
rcl
jge
movs
cli
jne
ss
les
inc
les
sub
clc
pop
mov
mov
mov
outs
mov
outs
push
lea
repnz
std
fild
fwait
lods
push
into
pop
call
cmc
iret
pop
sti
sbb
sub
sahf
push
add
fwait
mov
out
sbb
cmp
sub
imul
inc
call
lds
jo
dec
jg
lahf
sub
cwde
loopne
xchg
hlt
xchg
xchg
jns
std
test
call
xchg
mov
repnz
test
sub
cmp
inc
repnz
inc
ror
push
jge
sbb
imul
jns
cwde
test
ins
in
sbb
enter
es
sbb
dec
cmp
mov
ret
xor
push
push
fnstsw
mov
xchg
pop
call
aam
add
(bad)
or
cwde
mov
adc
stc
xchg
clc
lds
js
lods
push
enter
sub
repz
fnstsw
jl
push
mov
sbb
movs
inc
push
jl
mov
mov
call
pop
inc
cmp
and
lahf
sub
pop
cmps
jb
retf
call
popf
xlat
xchg
inc
call
mov
dec
call
pop
cli
mov
repz
test
dec
mov
pop
in
mov
sbb
in
fadd
dec
push
push
adc
xor
repz
inc
loop
arpl
dec
mov
js
push
nop
mov
push
jmp
int
gs
adc
das
mov
mov
mov
je
into
(bad)
sbb
aaa
pop
out
iret
cdq
and
sti
dec
fdiv
fisttp
pushf
xchg
xchg
data16
pop
cmp
rol
mov
push
lea
imul
out
lds
jmp
inc
retf
dec
(bad)
and
in
repnz
fidiv
ins
pop
push
test
or
mov
ret
(bad)
repz
xor
pop
sbb
push
xchg
sub
or
outs
pusha
mov
jnp
movs
pushf
sub
and
lahf
inc
mov
pop
push
mov
inc
loopne
and
pop
es
rcl
test
jl
mov
xchg
push
and
xchg
mov
fld
cs
cld
jecxz
fnsave
pop
or
adc
test
call
push
xchg
out
jp
sti
jle
jb
(bad)
xor
ja
mov
mov
movs
dec
es
movs
test
loope
call
jnp
test
out
fisub
les
xor
movs
mov
ja
mov
adc
mul
cmp
out
jmp
sub
ss
push
pop
mov
dec
pop
dec
jmp
inc
loope
add
ds
and
pop
jmp
xor
dec
inc
dec
aas
loope
mov
repnz
dec
loopne
in
loopne
adc
idiv
mov
mov
pop
je
mov
std
xchg
in
jecxz
ins
mov
neg
sub
cli
call
push
or
jne
jns
cs
add
cmps
xchg
pushf
xor
retf
dec
jmp
data16
pop
pop
jg
push
mov
ins
outs
mov
push
call
sti
iret
sti
add
xchg
jno
push
cmc
(bad)
inc
xchg
(bad)
cmps
dec
loop
imul
mov
push
scas
enter
jmp
xchg
fcmovb
inc
pusha
mov
inc
call
cld
xlat
inc
loop
push
xor
inc
mov
push
cwde
mov
xchg
xor
jmp
bound
xor
cmp
nop
imul
inc
mov
addr16
mov
push
loopne
jecxz
lods
jmp
ror
sub
rcr
mov
inc
(bad)
sbb
cmc
out
and
dec
mov
pop
pop
test
icebp
xchg
mov
mov
sub
push
cmp
xchg
lock
loope
pop
push
jge
jne
pop
lahf
imul
mov
jmp
jnp
int
pop
sbb
xor
(bad)
dec
inc
lods
pop
xor
ss
xor
fcmovu
sti
aas
test
jge
mov
cmps
sub
outs
lock
pusha
pop
sar
mov
les
(bad)
mov
xchg
and
xchg
icebp
lahf
addr16
fstp
dec
mov
jne
dec
cmps
sub
adc
mov
lahf
hlt
jl
(bad)
jne
jbe
into
pop
aaa
js
adc
pop
jae
push
xor
adc
and
in
test
mov
jno
movs
push
hlt
mov
xor
xchg
jne
mov
pushf
push
xchg
outs
xchg
(bad)
scas
aam
mov
xchg
lds
test
repz
ins
fwait
mov
cmp
or
xlat
fcomp
xor
dec
mov
push
sub
lahf
mov
scas
cmp
retf
dec
ret
mov
xor
outs
and
push
mov
test
xor
sbb
pop
dec
(bad)
adc
gs
dec
repz
dec
xchg
int3
xchg
sbb
mov
retf
in
or
ret
cmp
adc
inc
jmp
and
mov
push
stc
daa
pop
cmp
sub
dec
mov
mov
inc
fwait
repz
into
cmp
popa
or
cmp
xchg
mov
mov
ret
sbb
jae
mov
hlt
cmp
cdq
enter
mov
or
icebp
pushf
das
in
mov
lods
icebp
aaa
and
mov
stc
cmp
mov
push
sub
mov
out
inc
popf
adc
dec
pushf
push
or
inc
out
enter
clc
push
sbb
xor
mov
stos
adc
cmp
ss
mov
jl
iret
out
mov
add
dec
in
(bad)
dec
xchg
rcl
std
ret
mov
in
mov
ja
mov
mov
lods
mul
dec
mov
sub
dec
(bad)
fdiv
xor
sbb
mov
cmps
rcl
fdiv
in
popa
inc
je
int
or
push
sbb
shl
lods
pop
inc
into
sbb
xor
and
shl
jg
ins
stos
pusha
neg
lock
loopne
xchg
push
repnz
add
test
xchg
cmp
enter
pop
mov
xchg
xchg
fwait
lods
inc
xchg
jp
ds
ds
sar
arpl
dec
movs
adc
lahf
imul
mov
std
sar
into
inc
ins
add
or
pop
mov
xchg
jno
popf
cmp
mov
inc
(bad)
ficomp
ret
popa
jne
mov
inc
jmp
movs
pop
push
(bad)
shl
mov
jbe
jecxz
xchg
sbb
not
mov
dec
cs
stc
in
(bad)
clc
ds
dec
stos
sbb
mov
mov
iret
xor
stos
pusha
in
sbb
leave
dec
jo
sub
xor
das
sahf
push
std
imul
outs
stos
test
cmp
icebp
xchg
xor
sbb
mov
pop
cmps
les
pop
in
mov
hlt
sbb
popf
push
xchg
fimul
clc
(bad)
inc
inc
(bad)
fisttp
and
out
jmp
push
movs
arpl
jns
ret
xor
stc
add
leave
xor
push
push
sub
push
jae
ins
ds
sbb
mov
aaa
ins
leave
in
test
mul
ins
inc
inc
(bad)
jo
mov
dec
out
xor
push
push
fcmovnbe
xchg
jp
sbb
das
(bad)
jge
xchg
repnz
inc
ficomp
cmp
fnstcw
sbb
pop
xchg
sbb
jmp
ins
xchg
movs
mov
in
or
jae
in
outs
jl
or
jb
mov
test
inc
int
and
add
lea
mov
bound
mov
movs
pop
out
inc
mov
popf
push
popf
test
test
fwait
scas
outs
hlt
jns
xor
scas
jbe
add
jge
imul
push
mov
inc
push
fild
shr
mov
add
inc
or
adc
dec
adc
inc
or
test
int
add
jp
lods
dec
loopne
clc
addr16
mov
or
rcl
(bad)
call
mov
les
lods
stos
gs
pop
dec
rcl
fild
add
pop
jg
cdq
cmp
imul
sbb
jns
leave
aas
xor
cdq
sub
frstor
mov
sahf
sbb
and
adc
jno
stos
outs
fsub
jo
mov
mov
call
loopne
lock
xchg
lock
lods
fisttp
(bad)
mov
retf
dec
cld
cmp
es
sti
ficomp
sbb
or
jle
inc
cs
xchg
les
push
sahf
call
jge
and
and
sub
pop
stc
dec
pop
mov
movs
cmp
(bad)
out
fist
jecxz
jb
popf
pusha
cld
mov
bound
xchg
jp
lock
scas
fsubr
mov
push
mov
std
addr16
cli
jns
mov
inc
fisttp
add
jecxz
lds
imul
push
lahf
imul
mov
sub
(bad)
jno
pop
aas
int
sbb
xor
push
mov
fisubr
adc
cli
or
fistp
in
jb
shr
fld
cmps
fs
jb
sti
icebp
mov
retf
movs
ffreep
aaa
stos
sbb
mov
repnz
test
dec
mov
cmp
(bad)
(bad)
fistp
cmp
xor
sbb
xchg
push
inc
add
mov
lea
pop
stc
addr16
fisub
mov
jle
pop
cmp
and
inc
push
xor
neg
bound
mov
sahf
xor
pop
out
stc
mov
loop
pusha
push
test
pusha
mov
xchg
jne
(bad)
fisttp
stos
leave
lea
xchg
mov
xor
xchg
mul
pushf
mov
dec
and
shr
rcl
cmp
pop
scas
push
mov
jp
fwait
int
dec
pop
rcl
xor
into
je
bound
fsub
ss
jb
jecxz
rcl
mov
inc
xchg
inc
cmp
aas
push
xchg
mov
ins
leave
into
mov
(bad)
clc
jb
outs
jns
test
js
fistp
dec
cli
aad
push
jecxz
xchg
cli
test
bound
std
lock
inc
jecxz
fidivr
sub
or
pop
jmp
arpl
mov
(bad)
jbe
call
inc
pop
cmp
pop
sbb
adc
ins
cmps
pop
and
rdtsc
xor
into
mov
call
test
xchg
stos
jae
xchg
bound
icebp
les
mov
push
jecxz
mov
cmc
les
lods
fs
ror
cmp
(bad)
std
push
fidiv
pop
ins
cmp
or
cmps
scas
mov
sub
mov
sbb
push
aas
int
ins
jo
adc
mov
jo
push
inc
movs
sbb
cdq
mov
aas
fwait
xlat
sbb
inc
jecxz
sbb
lds
ret
inc
xchg
out
push
out
fscale
sub
ins
add
push
mov
xlat
icebp
test
lods
jns
jb
ds
sbb
cld
aad
popf
ss
cmp
adc
add
cmc
mov
les
cli
or
out
pop
sbb
and
push
cmps
inc
bound
psllq
pop
sahf
fadd
rcr
jle
mov
pop
xchg
aam
imul
jb
call
add
dec
and
icebp
cmp
outs
ja
test
adc
std
rol
scas
dec
mul
xor
ret
jg
sub
or
cmp
lods
mov
(bad)
jnp
lea
lea
imul
xor
cmp
jne
push
and
fdiv
js
push
test
fdivr
cmps
adc
add
clc
jmp
xor
fucomip
dec
mov
jb
cmps
xchg
js
xchg
pushf
test
cmp
test
in
dec
(bad)
sbb
dec
call
xor
bound
inc
cs
cmps
lods
int3
sub
cli
and
pop
xor
pusha
(bad)
icebp
imul
jae
mov
cmp
aad
dec
mov
jbe
scas
sub
(bad)
xchg
loope
push
icebp
xchg
pop
and
cmps
mov
pop
jl
mov
cli
cmps
clc
test
cs
cs
jmp
adc
pusha
cmps
or
jle
bound
je
nop
leave
lea
add
jle
fnstsw
mov
cmp
inc
cmp
and
arpl
jbe
xchg
adc
mov
xor
push
in
fcom
les
and
lock
(bad)
popf
jge
mov
mov
in
cmp
push
xchg
cmps
cmp
mov
(bad)
dec
push
xchg
mov
sbb
sbb
jmp
jge
or
dec
mov
jp
mov
mov
jmp
dec
inc
aaa
jmp
daa
mov
fsubr
mov
xor
aaa
jae
mov
jno
xor
scas
xchg
aaa
mov
push
fdivr
popf
xor
test
dec
xchg
les
in
sti
and
ret
push
xchg
mov
aam
repnz
cmp
lahf
inc
repz
cmps
adc
xchg
mov
push
pop
test
imul
cs
mov
jmp
(bad)
jl
fisub
pop
pop
mov
and
sub
xor
jle
call
stos
(bad)
sub
push
mov
jb
ins
jbe
lea
xchg
(bad)
jb
repnz
nop
push
daa
out
pushf
add
aad
sbb
adc
out
fild
fwait
lods
dec
out
retf
pop
out
ror
jbe
sbb
sbb
test
pop
xchg
iret
imul
jl
lea
jns
mov
sbb
add
pop
mov
fisubr
movs
cmp
xor
jecxz
mov
pushf
pop
jns
mov
cmp
in
imul
inc
cmc
std
shr
mov
imul
in
xchg
dec
fidivr
mov
xchg
inc
dec
sub
scas
or
dec
sti
cs
push
out
mov
xlat
pop
out
add
xor
sub
add
lods
sub
ja
jge
sahf
imul
adc
cli
xor
(bad)
sti
es
enter
jb
test
dec
mov
xor
test
scas
mov
lods
outs
jl
test
fisub
scas
dec
lock
push
and
cmc
mov
push
jmp
jnp
inc
scas
adc
inc
test
ds
mov
into
pop
xabort
mov
pop
adc
sbb
jl
ss
test
and
sbb
cdq
test
in
fidiv
loope
jbe
stos
push
cmc
cwde
loopne
xchg
shl
repnz
sbb
mov
test
push
mov
test
dec
cli
test
pop
jl
cmp
jbe
xor
adc
inc
push
jns
mov
mov
loopne
aas
mov
or
push
cmp
adc
inc
sbb
js
mov
data16
xchg
cmp
jmp
push
test
imul
lahf
je
adc
iret
ins
or
jo
popf
test
xchg
mov
fwait
inc
out
fisubr
cmp
cli
jmp
push
jmp
jo
and
inc
cs
mov
stos
xor
fcom
cwde
loope
mov
jbe
inc
xor
cmp
or
xchg
add
lods
push
retf
mov
cmp
xchg
and
add
pop
loop
and
xchg
jne
in
(bad)
icebp
push
xchg
ja
(bad)
mov
ja
test
sbb
clc
(bad)
cld
idiv
test
fnstcw
add
cld
fcmovu
push
xor
or
jno
jns
push
sub
mov
mov
cdq
cli
das
xchg
(bad)
jne
jb
cmps
xor
jge
xor
les
lods
jg
mov
test
fcmovu
xchg
add
jg
or
aam
jae
xchg
add
cli
rol
scas
mov
mov
lods
xchg
js
xchg
ret
cdq
fsubp
jge
mov
dec
sub
jmp
daa
dec
mov
fs
dec
lahf
mov
scas
inc
add
outs
jmp
push
sbb
inc
push
sbb
sbb
movs
cli
push
pop
xor
fistp
repnz
add
mov
inc
cwde
les
aaa
lock
scas
neg
mov
sbb
rcr
cwde
scas
jnp
dec
fisubr
icebp
inc
xchg
adc
dec
fcom
pop
cmp
outs
add
lahf
xchg
lods
mov
sti
fdivr
mov
cmp
xor
aaa
mov
stos
jl
stos
or
mov
inc
jmp
popf
aaa
sar
push
loope
jbe
lods
inc
mov
and
js
(bad)
(bad)
cld
adc
pusha
xchg
mov
pop
xchg
mov
push
sbb
fld
out
mov
pop
pop
sbb
add
jp
stos
pop
dec
inc
mov
pusha
mov
pop
imul
stc
push
mov
cmp
xor
fs
and
xor
(bad)
adc
and
fsub
shl
push
stos
push
out
repnz
xchg
jmp
inc
sub
jecxz
push
les
lahf
stos
int3
sbb
movs
push
and
fisttp
mov
cmp
cmp
repz
dec
mov
inc
sub
test
scas
mov
jmp
jae
iret
or
sbb
imul
mov
or
xchg
push
call
mov
push
scas
xchg
push
std
mov
xchg
mov
jae
mov
push
xor
ror
mov
cmp
jne
add
adc
inc
test
pop
pushf
cmps
mov
jge
aam
mov
pop
enter
pop
cmp
outs
or
pop
movs
mov
dec
fldenv
arpl
inc
pop
push
scas
dec
clc
rol
mov
loop
(bad)
xchg
pop
xor
(bad)
add
ins
mov
addr16
mov
aam
stos
loop
pusha
mov
repnz
cmc
fcom
daa
jle
pop
movs
cmp
pop
pusha
popf
mov
fild
call
fcomp
push
jb
mov
mov
stos
jp
cmps
cmp
shr
out
in
and
addr16
pop
lds
in
nop
sahf
jno
in
scas
add
outs
mov
mov
push
mov
cmc
push
inc
stc
test
repz
xchg
xchg
into
jbe
xor
cmp
mov
cmp
mov
test
stc
nop
das
fwait
jmp
int
sbb
sub
and
jp
movs
push
es
(bad)
jno
sub
fist
imul
push
fimul
fdiv
js
ret
in
pop
daa
xchg
cld
mov
(bad)
mov
pop
xchg
sahf
xchg
aas
cmp
cwde
out
mov
jnp
and
sub
repnz
fist
jo
and
aaa
pop
outs
call
sbb
cli
push
mov
ss
and
jo
adc
ds
or
adc
cwde
xchg
xchg
adc
push
ins
fdiv
ja
dec
outs
push
stos
pop
aad
dec
mov
ja
ins
mov
imul
js
aad
test
pop
sbb
repnz
aas
or
stc
sar
aaa
jnp
dec
cmps
or
test
or
mov
call
test
sbb
and
pop
xor
cmc
sbb
shl
retf
mov
push
(bad)
(bad)
xchg
cmp
jle
mov
cmp
xchg
push
and
sti
test
call
mov
mov
sbb
leave
xchg
retf
aam
push
mov
xchg
jbe
das
sbb
fdivp
enter
inc
add
inc
mov
cs
mov
in
imul
(bad)
cmp
xor
mov
mov
mov
push
mov
pop
(bad)
pop
mov
pop
push
(bad)
sti
mov
mov
jmp
popa
push
test
add
jnp
cmps
lods
mov
mov
jmp
inc
xchg
stc
xchg
(bad)
fdivr
fwait
(bad)
xor
push
and
in
push
enter
mov
ins
and
movs
cwde
xchg
ss
movs
lock
je
int
or
push
cmp
push
or
sbb
ins
daa
stos
push
pop
repz
jmp
push
dec
sub
neg
loopne
call
loope
pop
bnd
cli
mov
xchg
mov
stc
test
(bad)
dec
call
repz
sub
aaa
jns
sti
push
les
std
lea
bnd
popa
dec
ret
pop
ss
and
pop
mov
adc
aas
jg
mov
cmovae
pop
(bad)
out
rsm
mov
arpl
dec
out
stc
cmp
adc
call
stos
imul
test
fdiv
xlat
retf
in
mov
ds
cmp
pop
cdq
inc
arpl
mov
pop
mov
sar
cli
and
aas
ficom
xor
adc
mov
(bad)
lea
movs
xor
mov
imul
sbb
imul
fmul
mov
push
cli
call
lods
mov
fs
test
rol
mov
cmp
fisubr
xor
dec
test
js
sti
cs
push
cmp
push
lahf
xchg
arpl
add
pop
sbb
add
gs
mov
pop
repz
imul
mov
pushf
int
icebp
ins
outs
pop
stos
imul
scas
sti
sbb
fcom
mov
in
mov
pop
je
xchg
repz
xchg
ror
stos
ja
pop
shl
aaa
sbb
stc
scas
inc
int3
inc
arpl
dec
sub
adc
fwait
mov
mov
aaa
int3
outs
sti
rol
jno
in
outs
jl
arpl
jg
cwde
push
aad
dec
call
and
fsub
cmp
addr16
xchg
dec
cli
popf
in
cwde
in
call
or
ret
lahf
jne
push
sub
push
fwait
xchg
mov
sbb
aad
lock
inc
(bad)
jp
sbb
adc
jmp
jo
dec
mov
inc
sub
mov
test
(bad)
sub
daa
int
adc
or
sub
xor
push
and
sti
push
xor
pop
in
out
and
out
pop
shr
push
test
addr16
mov
push
adc
sti
cmc
jo
pop
movs
pop
ja
mov
test
lods
(bad)
ror
cs
retf
call
push
jg
gs
xchg
mov
pop
out
pop
stos
xor
push
shl
je
bound
imul
and
outs
add
out
fstp
clc
inc
bound
pop
not
mov
jecxz
push
or
mov
popf
push
js
sti
jmp
inc
jmp
hlt
das
pop
cmp
icebp
fist
es
dec
xchg
inc
jle
inc
pop
jg
pushf
scas
or
jmp
jae
inc
cmps
and
pusha
lods
ds
imul
and
add
or
scas
test
mov
jae
cdq
push
xor
je
sti
cmc
mov
test
jne
xchg
xchg
(bad)
jmp
sbb
fidiv
ds
ret
ja
push
inc
push
pop
mov
inc
sti
inc
or
xchg
(bad)
cmp
cli
sub
fst
pop
push
ret
and
or
adc
push
lea
push
popf
ror
jmp
test
mov
jle
mov
pop
cmp
push
ja
pusha
lods
mov
jg
lods
mov
repnz
repz
ins
sahf
xchg
pop
retf
inc
lods
and
in
repnz
cld
inc
sbb
and
inc
pop
dec
mov
mov
jmp
push
sbb
or
and
xchg
das
mov
(bad)
jnp
(bad)
stos
push
pop
repz
popf
cmovae
dec
out
jmp
add
pusha
dec
push
lods
inc
test
loopne
pushf
xchg
pop
cmp
ror
test
inc
lods
jle
mov
stc
retf
mov
lods
lods
push
out
in
cmp
int
fisub
dec
test
push
pop
fwait
les
ins
jecxz
daa
pushf
dec
pop
xor
jne
(bad)
das
lods
or
inc
mov
cwde
add
test
mov
dec
push
mov
hlt
(bad)
clc
pop
in
cwde
je
mov
or
pop
mov
jl
xchg
repnz
enter
jmp
aas
ds
in
sub
aaa
pop
jge
mov
push
imul
lock
mov
pop
jae
ds
pop
sbb
sub
sub
das
stos
dec
push
mov
popfw
lods
mov
leave
into
movs
add
inc
jge
xchg
pop
clc
movs
loopne
mov
xchg
(bad)
fsub
mov
mov
je
mov
js
xchg
pushf
cmps
scas
mov
mov
dec
retf
cmp
cmc
repz
icebp
sbb
inc
scas
push
push
jo
push
mov
pop
iret
lea
mov
jge
js
ficom
push
dec
jo
mov
mov
dec
lods
push
xor
xor
pop
jmp
enter
jae
xchg
pop
cld
mov
dec
xchg
scas
mov
pop
jmp
sahf
ffreep
das
ret
mov
test
aas
call
pop
inc
jmp
ficomp
loop
cli
add
dec
scas
and
popa
and
nop
movs
cmps
scas
adc
rcr
mul
mov
pop
jo
sbb
pop
sub
aas
iret
push
(bad)
push
shl
push
call
jmp
adc
jae
test
jg
scas
xchg
push
in
mov
push
lock
(bad)
in
cmp
xlat
in
retf
outs
sbb
push
dec
mov
pop
sub
xor
pop
test
jnp
mov
mov
cmp
add
and
pop
imul
imul
jl
shl
outs
in
mov
or
xlat
xor
arpl
dec
repz
in
loopne
call
pop
jmp
mov
pusha
xchg
test
xor
test
jmp
ins
xchg
mov
and
in
lock
in
jne
jp
pop
push
inc
xchg
jns
lahf
mov
jmp
jno
mov
cmp
and
std
inc
dec
sahf
jg
mov
mov
imul
popa
fstp
outs
mov
cmp
adc
out
mov
pop
inc
mov
fdivp
test
mov
fimul
das
or
sub
stos
adc
dec
sti
ins
or
mov
fisttp
cld
or
xlat
jb
jb
mov
and
pop
fs
outs
call
add
adc
add
pop
add
push
loopne
bound
shr
test
ja
sahf
add
mov
test
mov
cmp
daa
jmp
pop
push
and
sbb
push
loopne
pop
pusha
mov
add
inc
in
mov
test
push
push
and
add
imul
inc
stos
aas
jne
mov
or
adc
push
push
xchg
fsub
dec
call
jmp
add
rcl
iret
sub
cmps
xor
and
jecxz
cmp
mov
fdivr
pop
sub
mov
push
pop
lods
es
push
test
cmp
test
cmp
pop
sti
rol
lahf
rcr
jb
popa
xchg
sub
psubsb
mov
add
xchg
(bad)
fist
test
pop
lds
mov
dec
pushf
shl
cmc
pushf
popa
add
stos
mov
xchg
pusha
neg
fs
repz
shl
test
aaa
or
repz
cmp
sub
pop
jg
mov
mov
hlt
dec
in
stc
add
jno
mov
add
sub
and
outs
pop
stos
ins
cmp
sbb
sub
les
push
xlat
pusha
inc
js
inc
repz
cmp
xchg
push
sbb
ret
pop
pop
test
div
(bad)
dec
jg
mov
js
add
fstp
push
cmp
or
inc
stc
inc
sub
mov
sub
push
popf
cli
or
xor
xor
add
pop
scas
jle
xchg
jl
into
ds
mov
pop
out
test
out
jge
test
cli
pushf
(bad)
dec
cmp
fs
jb
not
xchg
xchg
add
test
push
xchg
jmp
movs
push
out
push
(bad)
adc
pop
in
(bad)
lods
fs
pop
push
fs
ins
ins
push
lea
push
jmp
pop
cmp
mov
popa
push
jnp
sti
pop
or
push
sbb
sub
mov
jg
mov
adc
adc
pop
clc
pop
(bad)
pop
jg
movs
pop
lock
xchg
les
or
rcl
(bad)
lea
mov
sti
imul
repz
imul
aam
addr16
pop
push
pusha
jns
cmp
xor
cdq
mov
fnsave
cli
cmp
jl
into
pop
cmp
aaa
cdq
and
mov
mov
mov
int
mov
les
bound
pop
movs
retf
xchg
arpl
movs
popa
dec
cli
fist
(bad)
xchg
in
cmps
jge
xchg
(bad)
add
hlt
loope
cld
rep
mov
fnstsw
push
stc
mov
cmp
es
push
cmovnp
inc
cs
mov
push
fild
xor
fimul
data16
xor
add
rol
(bad)
js
(bad)
xchg
ds
lahf
mov
imul
mov
xchg
stc
add
jne
inc
shr
xchg
(bad)
mov
xor
movs
test
loopne
adc
jle
(bad)
mov
adc
aam
shl
inc
ins
scas
cwde
popa
(bad)
pop
fisubr
sbb
loop
(bad)
je
bound
inc
pop
ja
mov
jle
call
adc
adc
adc
es
fdivr
xchg
or
xchg
mov
and
xor
sub
or
jge
scas
js
movs
sar
mov
leave
xchg
pop
and
fsub
mov
ins
ins
mov
stos
push
sbb
cmc
mov
mov
inc
fmul
sbb
cmp
call
jne
inc
lods
cmp
mov
mov
nop
xor
jmp
mov
jbe
pop
xor
and
mov
mov
mov
cmps
add
mov
outs
cli
mov
push
stos
into
sbb
gs
jns
js
mov
inc
cmp
or
jnp
movs
mov
jne
mov
popa
cmp
cmp
outs
xchg
push
(bad)
sub
shr
fist
xor
push
inc
sbb
xchg
mov
scas
push
and
shr
push
or
cmp
fisub
mov
scas
scas
cwde
add
xchg
inc
stos
xchg
jg
gs
mov
dec
in
loopne
sar
mov
lock
xchg
push
mov
xchg
cmp
lods
fisttp
sahf
cwde
inc
les
sub
div
std
jae
xor
aaa
jns
call
mov
cwde
jmp
sbb
xor
jae
aaa
mov
mov
fldenv
xchg
push
sahf
test
fcmovnu
mov
test
ja
push
add
xchg
xlat
popa
add
popa
lds
test
pop
sbb
push
xchg
test
add
stc
jecxz
(bad)
xor
dec
idiv
cmp
aad
call
sbb
test
aaa
pusha
jmp
sbb
or
inc
popa
pop
xor
or
sbb
add
data16
ins
xor
mov
jmp
test
fiadd
popf
(bad)
push
xchg
mov
pop
nop
cld
dec
pop
cli
movs
test
jl
std
(bad)
aas
test
pop
xchg
movs
xchg
retf
adc
shr
pop
aaa
in
(bad)
lods
je
inc
jo
pop
sbb
ja
mov
(bad)
dec
add
add
fidivr
jl
les
pop
push
lods
and
sbb
cmps
adc
xchg
fsub
mov
neg
xorps
push
xchg
jecxz
jl
in
adc
xlat
lods
add
sbb
mov
test
cmc
mov
lods
inc
call
ds
aad
push
inc
ficomp
inc
mov
mov
mov
jmp
jno
sbb
int
push
pop
xor
xchg
or
adc
inc
pusha
xor
xchg
test
xor
fs
aas
(bad)
hlt
pop
bnd
push
fwait
jp
mov
dec
xchg
les
aaa
retf
shl
(bad)
mov
mov
stos
push
push
stc
add
movs
addr16
push
stos
cmp
push
cli
iret
hlt
jbe
add
pop
inc
jae
outs
or
and
(bad)
or
add
pop
sbb
cmp
pusha
mov
xor
xchg
outs
xor
xchg
adc
jbe
mov
outs
xchg
call
pop
(bad)
shl
sub
inc
xchg
xchg
and
cmps
bound
mov
cmp
lock
lods
inc
jecxz
xlat
inc
ss
fstp
cmp
dec
test
sbb
jno
jge
mov
fild
loop
test
jbe
push
add
add
or
push
pusha
cdq
jg
mov
test
retf
adc
jle
mov
xor
lahf
dec
dec
(bad)
fldenv
xchg
cmps
cmc
or
test
xlat
mov
fwait
mov
sub
ds
xlat
push
into
adc
jp
les
or
stos
leave
xchg
xor
inc
call
gs
pop
adc
arpl
pusha
jae
outs
or
(bad)
jno
push
inc
ret
xor
and
pusha
xchg
int3
mov
cmp
les
xchg
ja
mov
push
xor
aad
push
pop
shl
cs
(bad)
mov
cmp
sbb
mov
jg
mov
(bad)
sub
fisubr
out
sub
jae
ror
jne
push
mov
arpl
pop
xor
xor
jno
cmp
movs
add
div
push
bound
data16
dec
nop
pop
cs
mov
out
mov
mov
js
mov
js
jmp
mul
fstp
xchg
fild
pop
mov
and
fdivr
iret
inc
call
dec
js
inc
or
and
inc
cli
repnz
(bad)
pusha
je
and
add
sbb
and
dec
pop
mov
and
xchg
(bad)
push
popf
jmp
jno
sbb
sub
clc
jg
mov
push
sbb
retf
out
jne
mov
test
mov
add
cld
sti
xchg
(bad)
(bad)
scas
inc
lea
das
add
data16
cs
dec
test
or
movs
fwait
scas
cs
fidivr
fisttp
mov
jns
int
sbb
cmp
xor
push
cmp
sbb
and
(bad)
pop
mov
addr16
push
xchg
(bad)
call
and
mov
lods
sahf
ffreep
es
xchg
push
call
outs
(bad)
jmp
aaa
cs
jne
xor
adc
lahf
imul
mov
pushf
cmp
rol
mul
movs
sti
jbe
jns
int
fs
sbb
jp
stos
js
stos
sbb
popf
mov
popf
stc
xchg
aas
xchg
cld
sbb
ins
push
pop
mov
xor
in
loope
in
or
(bad)
jmp
jae
adc
aaa
mov
outs
xchg
add
stos
or
into
sub
sbb
push
inc
call
inc
pusha
xchg
inc
and
mov
lods
jbe
lea
xchg
int
inc
jno
jmp
lgs
stos
imul
sbb
inc
cs
fbld
dec
add
test
fadd
pushf
inc
in
popa
dec
icebp
fisubr
test
mov
in
jmp
fsubr
push
sub
in
iret
fadd
xor
dec
xchg
jno
daa
mov
or
fbstp
cli
jp
cmc
(bad)
push
js
sub
fs
sahf
dec
and
cli
ss
dec
dec
int
call
jge
xchg
outs
div
inc
in
inc
or
ret
sbb
imul
stos
pop
je
mov
and
fcomi
mov
jecxz
push
fwait
mov
sbb
ds
stc
and
and
jnp
fst
pop
inc
mov
add
mov
mov
cmp
jge
fild
cwde
mov
pop
cmp
add
jne
aaa
fwait
das
mov
shl
mov
xor
ins
(bad)
aaa
test
jle
ins
jb
stos
push
loop
(bad)
jl
enter
xchg
jnp
fst
xchg
add
mov
nop
xor
clc
movs
fiadd
loope
iret
dec
sub
(bad)
cld
fist
cmp
ins
imul
cmps
cwde
mov
das
mov
jbe
je
out
aaa
jbe
es
das
test
fbld
jp
movs
cmp
aaa
add
cli
in
mov
jbe
xchg
push
neg
(bad)
jge
les
xor
shl
xchg
fbstp
mov
loope
mov
jne
ja
adc
cmp
cmc
not
and
or
mov
add
icebp
mov
mov
cmps
inc
jmp
je
(bad)
xor
jo
aaa
xchg
sub
movs
dec
and
(bad)
or
sub
jecxz
mov
and
loopne
test
iret
mov
jmp
mov
stos
clc
sbb
test
fcos
xchg
dec
inc
jne
scas
dec
jmp
cld
repz
call
dec
jge
inc
sbb
xchg
xchg
xor
clc
jge
jmp
jae
sbb
xor
jge
xor
repnz
lods
outs
aas
aad
data16
std
imul
sti
aaa
sar
inc
retf
push
add
mov
bound
sar
lods
sub
push
or
sbb
xchg
clc
repnz
add
lods
xor
cmp
(bad)
out
pop
or
fist
inc
pop
div
sub
mov
fldcw
daa
mov
add
adc
xor
jae
ss
mov
fcomp
mov
jb
(bad)
mov
leave
hlt
mov
call
mov
into
loopne
xchg
shl
int
push
es
shl
sub
pusha
mov
outs
jae
mov
adc
std
jecxz
shl
jge
pop
push
cmp
fisub
dec
mov
pop
outs
mov
mov
mov
and
pop
jmp
jae
or
add
cmp
fnstenv
mov
sbb
push
cmp
mov
pop
cli
pop
add
jp
ret
call
add
(bad)
mov
scas
mov
pop
xchg
add
repz
pop
clc
cmp
cs
push
jmp
pop
push
mov
or
push
stc
pop
ret
shl
(bad)
jg
jno
int
pop
jb
add
inc
(bad)
je
jp
popf
push
ds
lods
xor
xchg
ds
dec
pop
scas
ins
enter
mov
xchg
inc
jmp
jns
std
mov
movs
mov
dec
test
xchg
jmp
jns
mov
cmp
sbb
in
daa
cli
xor
js
jne
das
lahf
imul
or
jge
cld
jo
lock
jne
enter
daa
adc
add
push
mov
jae
je
mov
mov
and
aaa
mov
push
push
fimul
mov
test
xchg
lock
mov
cmps
fcmovnb
sub
adc
repz
arpl
lock
mov
and
or
pop
je
movs
inc
sub
lahf
mov
in
jnp
repz
inc
mov
xor
aas
mov
shl
mov
inc
cmps
xchg
fstp
test
mov
jbe
adc
lock
rcr
cli
mov
or
ja
mov
add
stc
test
mov
repz
in
aad
loopne
pop
jge
les
test
mov
pushf
repz
or
and
add
fnstenv
mov
mov
int
xchg
push
call
mov
hlt
mov
dec
xchg
enter
xchg
je
stc
rcl
add
lahf
sahf
test
es
js
lahf
mov
or
cs
clc
adc
dec
lea
jle
mov
jns
xchg
mov
out
fisttp
mov
cmp
push
(bad)
and
mov
inc
or
in
fadd
(bad)
out
jecxz
mov
jb
pop
jl
xchg
dec
idiv
sub
cs
shl
xchg
test
sbb
push
pop
mov
loope
mov
dec
imul
stc
mov
push
inc
pushf
cmp
jo
gs
push
out
mov
stos
dec
sub
jl
fdiv
mov
pop
add
pop
sbb
sbb
xsaves
stos
nop
popf
cmp
and
in
scas
sti
cmp
jbe
stos
pop
xor
pusha
aad
jae
sti
ficomp
(bad)
test
push
xchg
fimul
mov
fmul
mov
ds
push
mov
fist
es
cs
cmp
lahf
imul
ret
inc
pop
iret
jl
fbstp
lahf
jmp
int
adc
pop
add
sub
stos
jg
lea
pop
test
push
out
leave
xchg
aaa
mov
jns
mov
cmp
mov
ss
cli
xchg
xor
push
xchg
not
sar
scas
pop
adc
fstp
cdq
lods
jne
pop
call
fidiv
xor
daa
mov
jno
les
inc
jmp
jne
frstor
add
add
das
cmps
outs
ins
mov
xor
mov
sbb
xor
add
test
inc
(bad)
dec
mov
test
jb
std
mov
nop
(bad)
movs
sar
add
cs
jle
out
movs
pop
xchg
push
ds
sbb
aam
jns
adc
sbb
jo
inc
push
push
lahf
mov
cmps
inc
jmp
jne
rol
jbe
fwait
sub
mov
test
dec
mov
ss
stc
mov
mov
push
xchg
pop
lds
mov
xchg
popa
dec
sti
enter
add
mov
inc
addr16
mov
cld
or
pop
cs
cmp
rcr
xor
pop
addr16
dec
push
jne
or
fwait
repz
sub
xor
add
mov
sub
xor
xchg
mov
pop
adc
push
(bad)
and
inc
jbe
xchg
push
test
xchg
pop
pop
repnz
xchg
sub
push
dec
mov
add
int3
std
hlt
(bad)
ror
mov
out
xlat
xor
pop
cli
test
push
retf
inc
jo
inc
mov
push
call
bnd
clc
jb
jae
int
pop
je
and
sub
and
data16
outs
daa
test
popf
rol
repz
iret
sti
jb
pop
jae
xor
dec
xchg
adc
mov
clc
sbb
ins
push
xchg
movs
mov
sbb
lods
push
nop
pop
cmps
sub
in
jae
pop
les
dec
push
mov
mov
mov
xchg
in
das
mov
add
xor
inc
aas
ja
add
pop
push
xchg
or
sub
lea
neg
fwait
adc
push
lods
and
mov
pop
jmp
xchg
bound
les
(bad)
mov
ja
movs
test
xor
rol
lahf
test
adc
sbb
in
stos
inc
call
mov
jge
mov
test
jbe
lock
movs
clc
jge
push
sub
pop
sbb
adc
sub
fist
movs
sub
mov
push
xor
push
mov
sbb
adc
jge
inc
fnstcw
jbe
test
cmc
rcl
lea
push
test
xor
rol
lea
mov
cs
push
repnz
inc
in
and
add
sbb
jge
imul
mov
ds
in
jl
icebp
bound
aas
push
sub
mov
outs
outs
mov
lea
pop
test
jl
repz
lahf
icebp
jbe
ins
inc
jg
inc
icebp
xor
or
sbb
clc
(bad)
xchg
stc
push
rcr
je
mov
loop
icebp
sti
pop
inc
mov
push
loopne
fdiv
cmp
dec
mul
xor
pop
test
push
sbb
mov
fcomip
sbb
add
xor
je
add
outs
addr16
and
mov
xor
mov
test
jge
adc
lds
or
hlt
mov
stos
scas
out
test
push
xchg
test
sub
sub
lods
dec
cs
dec
jbe
stos
or
mov
mov
in
cld
add
icebp
jle
inc
and
pop
sbb
add
bound
inc
cwde
movs
test
pop
and
out
aaa
stos
fnsave
fs
push
adc
mov
ret
cmps
arpl
fcom
test
xlat
imul
leave
std
adc
cli
out
scas
out
imul
sub
nop
clc
test
jnp
fstp
or
test
std
nop
sbb
retf
bound
mov
pop
out
ds
mov
sbb
xchg
lahf
fist
repnz
push
push
stos
pop
mov
jo
sahf
push
dec
repz
mov
mov
gs
mov
adc
stc
inc
xchg
lahf
push
aam
shl
or
and
les
jge
inc
cs
xchg
mov
mov
out
or
int
inc
inc
xor
sbb
pop
popf
add
sbb
jl
mov
loope
cmp
dec
enter
mov
jbe
scas
arpl
mov
pop
xchg
stos
mov
adc
addr16
xchg
in
or
mov
mov
fwait
lods
push
cs
sti
loopne
call
xchg
ins
push
test
scas
push
sub
push
jmp
adc
inc
outs
push
add
pop
pop
fisttp
dec
xor
(bad)
sbb
sub
(bad)
xchg
cmp
add
stos
pop
fist
xchg
fs
mov
mov
mov
pusha
jb
les
hlt
hlt
xor
push
call
retf
cld
xor
cmp
test
ins
test
cmp
jnp
hlt
or
and
or
jo
mov
inc
sahf
jg
xlat
xor
popf
movs
cmps
xor
dec
cld
scas
call
jbe
test
xchg
mov
ret
movs
dec
loopne
pop
sub
xlat
icebp
push
loope
xchg
imul
push
pushf
(bad)
mov
daa
icebp
loop
stos
lds
cmp
sub
jmp
dec
jl
dec
add
mov
into
jl
fcomp
test
push
pop
imul
push
aas
xchg
sub
pop
mov
inc
test
movs
xor
lea
aas
ret
xor
jns
mov
pop
call
sub
jecxz
and
ins
stos
mov
jg
nop
icebp
monitorx
repnz
cdq
inc
gs
movs
inc
in
not
cs
clc
fiadd
xor
pop
pop
and
test
ret
cmp
dec
ja
int
adc
add
pop
fistp
mov
mov
jae
mov
jmp
test
mov
outs
sub
lock
hlt
add
bound
div
mov
pusha
mov
loope
xchg
(bad)
pop
inc
lahf
(bad)
push
jecxz
mov
cs
fxtract
and
stos
sbb
xchg
inc
cs
mov
mov
(bad)
repnz
xor
ss
add
pop
mov
cmp
mov
jmp
or
call
push
mov
mov
dec
sahf
fadd
and
stc
or
ins
sti
xchg
stos
sar
jle
popf
mov
push
aaa
xchg
hlt
sbb
mov
lea
repz
cmp
out
retf
cdq
ds
or
mov
pop
or
add
test
js
push
push
add
ja
dec
inc
sahf
jg
mov
pusha
mov
stc
cld
xchg
and
jmp
les
and
jmp
xchg
jl
adc
sbb
imul
pop
in
xchg
adc
jmp
adc
scas
dec
in
pop
lds
and
jbe
adc
dec
shr
pop
jnp
inc
push
jnp
xchg
sti
rcr
mov
daa
enter
sub
sbb
jmp
outs
test
movs
cmp
xchg
sahf
or
and
test
or
clc
push
cld
jge
inc
(bad)
outs
loop
sar
xchg
imul
rcl
clc
scas
(bad)
adc
mov
xor
ror
mov
cmp
aad
lock
add
inc
push
test
ins
xchg
mov
stc
push
int3
std
and
and
or
je
or
jnp
mov
outs
scas
mov
push
sub
rcl
loopne
inc
and
jg
mov
push
loope
jno
out
test
or
movs
addr16
mov
cwde
test
fldcw
add
into
sbb
out
dec
into
ss
cmp
adc
mov
add
xchg
mov
jns
lea
movs
mov
jp
int
push
add
adc
jmp
sahf
jnp
sub
jno
and
cld
xchg
and
pop
pop
lea
mov
dec
in
out
iret
mov
and
jmp
xchg
imul
jl
xchg
xchg
pop
loope
xor
test
cmp
repnz
outs
test
xor
retf
sub
data16
and
cmp
xor
pusha
adc
out
sub
pusha
test
movs
cmp
into
mov
test
call
mov
inc
mov
pop
call
or
ror
(bad)
stos
jl
xchg
mov
bound
xchg
cdq
sahf
lea
ds
add
call
mov
inc
push
jns
mov
mov
call
jg
jno
int
push
sub
test
and
mov
cs
(bad)
add
push
cmp
pop
xchg
les
es
les
(bad)
ficom
pop
xchg
mov
addr16
stc
lds
sahf
lahf
push
ror
xor
dec
(bad)
out
inc
out
sub
jbe
stos
sbb
mov
jns
mov
imul
cli
cmp
add
sbb
push
mov
adc
aam
sbb
and
fcom
xchg
and
jmp
loop
je
lea
lahf
sahf
jns
les
cmp
retf
mov
sti
ins
stos
(bad)
movs
in
aas
mov
xchg
dec
rol
push
pop
fmul
cli
cld
iret
jbe
add
cmp
bound
xchg
fwait
mov
out
sbb
inc
mov
ja
das
jl
add
mov
stos
add
mov
jns
repz
cmp
push
mov
addr16
mov
jl
xchg
std
clc
xchg
adc
push
stos
mov
ja
lods
mov
stc
xchg
std
loope
jnp
xchg
jp
sub
sbb
cmc
sti
test
clc
inc
pop
or
fidivr
push
jns
xchg
(bad)
mov
std
mov
(bad)
je
jge
aad
outs
pusha
adc
xor
fs
mov
cmp
lods
push
sub
fwait
sbb
outs
pop
movs
ja
fsub
pusha
xchg
les
icebp
ror
mov
add
cmp
jecxz
lods
les
pop
fwait
lods
inc
rcr
push
daa
jmp
cmp
ins
ins
push
popf
inc
push
pop
test
jmp
mov
je
add
lds
ja
and
test
dec
pusha
mov
callw
jno
dec
pop
leave
aam
inc
mov
jb
dec
push
lods
dec
call
rol
ss
ror
mov
dec
ja
test
loop
cld
rcr
xchg
dec
dec
or
call
bound
jnp
jno
das
mov
or
mov
test
mov
cmp
inc
ins
je
and
sub
sahf
push
adc
movs
mov
adc
ins
shr
aas
mov
pusha
push
popf
pop
repz
push
cmc
xchg
jno
clc
in
xor
out
popf
jl
mov
repnz
mov
dec
and
cld
repz
push
in
xor
sbb
cld
push
jnp
mov
mov
sub
ins
(bad)
xchg
addr16
pop
add
pop
sbb
add
mov
std
add
jp
mov
cmps
add
dec
jns
mov
adc
pop
scas
inc
xor
jmp
enter
jge
mov
inc
sbb
and
lock
ins
mov
scas
cmp
loop
loopne
jo
dec
cmps
outs
jne
idiv
jg
cmps
cdq
test
rcr
and
xor
daa
cmp
and
lahf
or
sbb
out
movs
xor
aam
aad
add
dec
aad
ret
ins
mov
xchg
dec
lds
lods
add
pop
xchg
mov
add
scas
lds
mov
popf
es
movs
dec
out
pop
mov
and
int3
icebp
fldenv
lock
push
lods
sbb
inc
push
icebp
xchg
test
jg
jmp
mov
mov
mov
xchg
cmp
shr
jecxz
movs
aaa
mov
add
pop
enter
pushf
mov
push
int3
dec
mov
fadd
das
stos
data16
mov
fisttp
lods
test
sub
int3
jmp
push
stc
xor
dec
ror
sub
mov
enter
pop
int3
jmp
aaa
mov
cmp
pusha
push
sub
stos
(bad)
sbb
xor
shl
ds
rcr
lods
inc
enter
xchg
in
jmp
fwait
gs
cli
mov
fwait
inc
movs
mov
ja
mov
icebp
mov
dec
mov
into
or
leave
and
arpl
pop
cmps
sub
mov
or
mov
(bad)
pop
in
mov
ror
aas
xor
cwde
push
lods
and
sbb
(bad)
push
inc
xchg
stos
mov
dec
ins
call
repnz
jle
test
cmp
xchg
pop
or
rcl
xor
mov
lock
lock
(bad)
cmc
lods
push
lds
in
inc
cmp
int3
retf
fld
cmp
push
fs
xchg
mov
pop
loop
add
aaa
cmps
xor
add
out
or
fisubr
mov
xchg
(bad)
and
(bad)
ficom
inc
push
push
mov
and
mov
std
or
push
scas
pushf
ret
push
mov
xchg
das
aaa
stc
out
leave
sti
pop
outs
test
cld
sbb
fild
push
jl
cmp
sbb
sbb
fnstcw
jnp
or
ret
inc
ins
jle
div
adc
pop
stos
and
jp
test
movs
aas
jl
ror
jmp
iret
jp
data16
lds
fadd
jo
in
cmp
aad
add
dec
(bad)
(bad)
shl
mov
jmp
inc
push
mov
adc
cs
retf
jmp
pop
jg
adc
bound
cmps
cwde
stos
sub
call
clc
and
xor
and
xor
ds
pop
(bad)
cmps
dec
xor
cmp
dec
sti
repnz
inc
mov
push
pushf
dec
jns
sub
lock
test
xchg
je
jecxz
and
fadd
sub
xchg
mov
pushf
mov
loop
dec
jecxz
retf
or
fbstp
or
sbb
test
imul
pop
aad
jmp
pop
and
pop
sbb
adc
inc
jo
jne
mov
dec
call
xchg
iret
jmp
cmc
gs
stos
inc
mov
test
aad
addr16
rcl
test
cmp
xchg
(bad)
adc
jmp
sbb
sub
fidivr
sub
repnz
and
pop
ror
pop
jl
push
mov
dec
jmp
popa
xor
cs
das
sahf
ins
lock
or
sahf
test
add
ins
fstp
xchg
aaa
mov
jbe
mov
dec
xchg
ret
cmc
mov
cmp
rcr
fiadd
mov
xchg
inc
int
sbb
fwait
push
in
fiadd
sub
stc
rcr
push
clc
sub
pop
outs
push
mov
cs
xchg
sbb
icebp
repz
add
push
cmp
add
and
xchg
pop
xor
pushf
sbb
aaa
mov
jbe
fidiv
mov
inc
fwait
les
push
in
aad
push
(bad)
fcom
aas
sub
mov
aam
aad
pop
ins
fwait
or
repz
jmp
jne
and
inc
cmp
mov
fs
aam
mov
jbe
jge
lds
xor
add
adc
jo
lods
add
aam
sub
lods
mov
retf
push
test
ins
mov
xchg
popa
call
les
pushf
movs
int
movs
jp
xor
stos
inc
mov
sub
js
cmp
adc
test
inc
jmp
dec
outs
cmps
xor
adc
pop
int3
arpl
je
xor
cmp
xor
adc
dec
data16
dec
inc
xchg
rol
jmp
add
sbb
imul
jecxz
out
dec
ficom
mov
mov
pop
pop
mov
xchg
and
repnz
aad
ins
cdq
pushf
xor
pop
in
aaa
cs
lock
xor
adc
xchg
ins
mov
mov
jmp
pop
cmp
adc
pop
jmp
adc
cs
xchg
das
(bad)
div
dec
jbe
mov
aas
call
xor
push
xchg
mov
data16
sbb
test
popa
dec
cmc
xchg
pop
out
inc
and
clc
and
sbb
push
inc
jo
popf
scas
nop
sbb
(bad)
jl
clc
or
xor
inc
add
and
mov
imul
xor
mov
pop
and
rcl
xor
add
ins
jecxz
lock
cld
add
mov
mov
xchg
pop
ja
mov
adc
out
retf
fs
mov
pop
cs
cld
fdiv
xor
push
ins
daa
mov
add
and
das
(bad)
clc
jbe
popa
adc
xor
jae
xor
sub
outs
xor
(bad)
push
pop
sahf
rcl
fldcw
jge
pop
loope
repnz
xchg
les
cmp
ror
mov
push
mov
cld
repnz
push
cwde
stos
inc
int3
pop
cld
cmp
ds
(bad)
rcr
adc
dec
pushf
pop
jle
call
jmp
movs
test
int3
fisttp
add
xor
push
test
mov
ja
test
or
or
inc
xor
aam
pop
push
sbb
stc
aas
mov
xchg
addr16
jb
int3
not
lahf
stos
int
mov
(bad)
push
inc
jmp
dec
sbb
cs
cli
out
mov
sub
pop
jp
loopne
adc
sbb
inc
loopne
or
std
sbb
add
aaa
pop
adc
das
xchg
pop
fstp
mov
add
ss
out
jmp
fs
je
mov
imul
mov
xchg
and
outs
xchg
jb
test
icebp
retf
retf
mov
(bad)
aaa
sub
(bad)
cli
fstp
cmp
imul
or
mov
cs
jge
out
sbb
xor
cmp
pop
add
add
sbb
mov
mov
out
retf
mov
je
mov
sti
shl
mov
xchg
outs
xchg
xchg
dec
xor
rcl
ret
dec
jae
test
push
aaa
mul
xchg
repz
imul
fidiv
cmp
cli
(bad)
adc
dec
stos
ins
jge
movs
imul
dec
pop
jmp
mov
data16
and
adc
call
jb
sahf
jg
mov
ja
cwde
loope
adc
dec
call
repnz
loop
data16
mov
pop
xchg
aam
pusha
hlt
mov
test
ins
add
xchg
xor
repnz
loopne
ins
fwait
(bad)
push
jecxz
fnstcw
ds
sti
int
loopne
jne
pop
stos
pop
imul
sahf
lods
mov
jmp
imul
pop
adc
jnp
(bad)
cmps
sbb
mov
mov
xor
not
xchg
xor
jae
(bad)
scas
call
xchg
(bad)
aad
jb
outs
mov
imul
mov
pushf
test
mov
xor
sbb
rol
inc
fidiv
addr16
clc
dec
and
mov
mov
lahf
dec
jbe
into
sub
js
push
jmp
xchg
dec
mov
xchg
mov
cmp
scas
xchg
inc
xchg
jecxz
jmp
dec
and
jb
stos
mov
and
ret
repz
mov
fwait
mov
mov
xchg
sbb
icebp
mov
out
mov
sbb
inc
cmp
outs
fidiv
sbb
inc
daa
jnp
fwait
shl
out
sbb
xor
inc
outs
pop
push
cmp
pop
pushf
xor
xor
call
cmp
daa
mov
add
pusha
add
jg
mov
dec
mov
cmps
dec
cmc
out
push
fst
xchg
in
sub
jge
or
cmc
out
dec
icebp
fadd
inc
icebp
or
neg
fist
adc
aas
pop
jne
inc
outs
mov
pop
clc
jle
and
push
adc
int
sbb
push
xchg
xor
sbb
push
mov
pop
in
iret
mov
mov
jb
ins
dec
push
mov
test
stos
add
pop
cs
xchg
push
stos
shl
pop
sbb
xchg
add
(bad)
xor
pop
fist
cmp
stc
in
ja
xor
ficomp
ins
inc
xchg
pop
ins
xchg
cwde
scas
test
lahf
lea
jne
(bad)
and
dec
sbb
mov
sub
jge
nop
cmp
in
loope
push
xor
ficom
aam
jbe
lea
lods
in
sub
and
cmc
add
mov
outs
fs
mov
push
in
rcr
fimul
push
into
cmp
out
(bad)
fisub
outs
les
jl
cdq
inc
and
mov
stos
cmp
sbb
cmp
and
mov
xchg
or
push
sbb
pop
and
add
jl
stc
loopne
test
add
push
mov
pop
cdq
les
sub
mul
mov
loopne
rep
daa
std
loop
(bad)
dec
addr16
adc
cli
sti
not
sbb
cmp
pop
outs
push
mov
cs
les
cli
jecxz
xchg
clc
jbe
or
sar
gs
pop
lahf
or
push
sub
and
stos
xchg
and
jl
stos
pop
jecxz
(bad)
ret
mov
and
stos
jmp
int3
cmp
xchg
and
mul
fwait
stos
(bad)
pop
fidivr
test
add
stos
pop
arpl
cmp
jmp
(bad)
sti
cli
add
aaa
in
adc
add
mov
sbb
mov
inc
mov
dec
in
in
adc
addr16
fidivr
xchg
lock
mov
clc
jb
neg
test
mov
sbb
test
xchg
ret
adc
jnp
xor
enter
add
jp
cmp
jge
gs
mov
daa
stos
pop
out
fisttp
add
lds
pop
jno
scas
sub
add
sbb
jl
mov
dec
in
shl
or
stc
imul
jo
iret
hlt
jl
rcl
sti
les
test
jmp
lock
and
xchg
dec
fisttp
inc
sbb
xor
mov
outs
xchg
outs
and
cmps
retf
rol
dec
lods
pop
sti
fdivr
xchg
repz
ja
int
adc
ds
es
mov
add
and
xor
mov
daa
sahf
jmp
pop
fnsave
pushf
jne
mov
retf
call
and
(bad)
shr
xchg
ret
inc
int3
mov
test
xor
in
inc
loop
jo
dec
mov
inc
and
mov
mov
out
cs
add
add
int
adc
sub
xchg
jae
mov
add
inc
and
add
jnp
lds
mov
pop
loopne
mov
mov
dec
cmp
lock
xchg
pushf
jmp
mov
inc
lods
push
cs
call
cmps
pop
dec
pop
mov
inc
push
mov
xlat
jl
mov
mov
push
push
je
iret
and
mov
sbb
mov
dec
retf
mov
cmps
push
das
fs
call
hlt
adc
std
mov
cmps
inc
loope
jge
mov
icebp
das
in
pop
mov
sbb
xchg
add
loop
dec
dec
mov
lods
es
sub
adc
pop
or
jge
cmp
cli
push
mov
pop
inc
pop
cmp
aaa
cmp
arpl
dec
dec
mov
jno
mov
dec
jmp
fwait
add
add
shl
push
xchg
ret
xchg
ret
xchg
gs
in
cli
test
sbb
fidiv
mov
movs
xor
jle
das
pop
ss
retf
cld
cmp
or
inc
jo
dec
es
xchg
fwait
call
jmp
push
or
int
adc
and
scas
sub
ficomp
mov
add
and
(bad)
mov
sbb
push
mov
push
in
test
std
sbb
mov
mov
ins
inc
mov
div
stos
shl
es
xchg
push
shl
or
cli
jmp
inc
cld
aaa
jb
pop
stos
pop
sbb
jge
mov
mov
int3
mov
mov
or
aas
loop
xchg
and
data16
push
and
or
cmp
fsub
sbb
mov
push
mov
xchg
jne
std
icebp
mov
xchg
pop
xchg
loope
mov
lea
mov
adc
scas
loopne
sbb
mov
loope
fisttp
aas
cs
repz
icebp
xor
xor
pop
mov
dec
mov
out
icebp
out
sub
jae
cmc
sub
cmp
xor
ins
pusha
mov
movs
adc
mov
and
repz
xor
pop
test
outs
xchg
xchg
jge
stc
cli
cmps
add
mov
popf
push
adc
shl
neg
(bad)
pop
adc
push
cmp
retf
adc
inc
xchg
sbb
sbb
mov
scas
or
fisub
lock
jns
(bad)
and
or
sahf
pop
xor
dec
push
popf
mov
cmp
mov
mov
dec
xchg
add
out
outs
xchg
(bad)
popf
pop
add
add
mov
inc
fwait
js
pop
cs
cli
leave
fdiv
and
push
scas
sbb
lods
inc
and
xchg
xchg
mov
sbb
repz
jb
fisub
xor
adc
adc
dec
inc
mov
outs
jmp
xor
rcl
xchg
outs
scas
jne
ret
sahf
out
mov
in
push
xor
loope
in
mov
(bad)
daa
fldcw
xor
neg
ret
mov
retf
dec
jecxz
lods
imul
sub
cmp
push
jnp
mov
fild
int3
daa
pushf
out
popa
pop
pop
and
dec
cs
jl
pop
mov
mov
and
(bad)
push
dec
and
fsub
les
and
loope
xchg
mov
inc
in
push
add
clc
test
lds
lahf
mov
push
mov
test
push
rcl
test
pusha
ins
fwait
(bad)
push
jecxz
ficom
add
retf
(bad)
fsubr
inc
js
dec
test
push
adc
sub
add
cmp
and
mov
lods
and
jp
mov
fcom
mov
jmp
mov
mov
jne
popf
dec
neg
xchg
fs
add
mov
(bad)
scas
(bad)
cmp
mov
aas
adc
lock
jge
mov
pop
or
cli
out
fcomp
xor
es
pop
cli
push
or
call
pushf
cli
or
or
and
mov
nop
jle
inc
adc
in
xchg
stos
ss
xor
add
inc
push
stos
push
in
cmc
dec
sub
sbb
xchg
pop
xor
fiadd
mov
push
mov
xchg
std
imul
les
cwde
stos
dec
enter
sub
stc
xor
inc
lods
sbb
cmps
dec
or
mov
scas
ds
popa
(bad)
icebp
or
sbb
sbb
pop
jb
mov
jnp
fcomp
movs
dec
jg
movs
test
mov
cmp
mov
inc
jl
pushf
jg
shl
add
fs
mov
xchg
add
sbb
mov
xchg
js
in
inc
lahf
mov
jecxz
cmps
xor
nop
clc
retf
pop
jo
data16
jo
inc
cmp
les
addr16
cli
sbb
xor
pop
sbb
lods
das
mov
mov
outs
or
or
sahf
test
sub
and
sbb
jne
test
call
(bad)
mov
loope
jae
(bad)
ror
mov
add
xchg
xchg
xchg
push
xor
jecxz
stc
out
pop
mov
dec
sub
jmp
jbe
daa
sbb
cmp
lea
pusha
xchg
mov
stos
inc
aaa
fild
icebp
add
jno
stc
adc
xchg
aas
rol
icebp
jp
fisubr
retf
rep
xchg
sbb
xchg
adc
clc
jb
adc
push
xchg
mov
pusha
loopne
xchg
fs
mov
test
imul
popf
jmp
aaa
jmp
cmp
movs
imul
call
mov
inc
into
es
push
sbb
mov
jo
sahf
mov
jmp
jb
call
ss
jg
sub
cmp
aaa
and
shl
jb
push
in
jecxz
cmps
les
pminsw
mov
test
aas
mov
xchg
std
loope
push
mov
cmps
or
dec
call
aas
add
dec
mov
inc
cmp
mov
out
mov
mov
inc
int
adc
cmp
sbb
jg
sar
pop
cdq
mov
inc
xchg
fcom
loop
sbb
ret
sahf
mov
mov
out
mov
xchg
imul
movs
stos
sbb
ficomp
push
fcom
ds
ficomp
jne
outs
rcr
inc
pop
stos
xor
jns
mov
out
test
je
aaa
retf
pop
add
adc
imul
dec
jp
aam
sbb
daa
outs
sti
fild
aam
and
aas
xchg
les
push
std
xlat
xor
outs
stos
xchg
mov
xchg
add
fcomip
(bad)
shr
jae
mov
ds
out
shr
cmp
lea
inc
mov
sbb
inc
jmp
jns
leave
cmp
jo
lods
sub
adc
pop
xor
movs
call
xchg
xor
(bad)
js
ins
push
jge
dec
fdiv
test
push
std
fdivp
sub
add
test
jb
mov
es
div
fwait
mov
iret
push
adc
push
test
push
pop
inc
inc
psubsb
fild
rcr
adc
fs
int
adc
jno
mov
mov
mov
or
jae
mov
(bad)
sti
xchg
add
push
push
popf
push
ficomp
xchg
push
xchg
inc
pop
rol
nop
sub
imul
shr
mov
fcomi
test
test
push
cmp
rcl
sbb
sbb
pop
xchg
ja
(bad)
mov
fwait
stc
aas
mov
jae
jno
retf
jne
xor
ds
mov
adc
test
jb
not
pop
pop
push
test
inc
xchg
les
or
aam
xchg
and
mov
xchg
and
fcomi
test
loope
ins
fwait
ret
sub
pop
(bad)
adc
sbb
push
cmp
adc
loopne
cs
nop
scas
pushf
cmp
repnz
mov
sbb
imul
add
xor
mov
mov
out
mov
(bad)
push
jnp
mov
mov
mov
xor
rcl
std
fcmovne
inc
pushf
bound
mov
adc
xlat
test
sbb
cwde
dec
fwait
push
int
push
pop
aam
fist
push
pop
pop
data16
inc
cs
mov
scas
adc
rcr
icebp
cli
or
and
dec
sbb
daa
fwait
imul
add
or
jmp
jo
imul
dec
mov
jmp
ss
(bad)
fcmovne
adc
movs
adc
cli
hlt
xchg
cmc
outs
ins
fwait
lods
inc
sar
inc
push
jmp
sbb
dec
mov
ins
push
mov
sub
les
arpl
ret
das
movs
iret
fs
je
int
aas
pop
jbe
jmp
jns
mov
xchg
sbb
into
cli
sub
push
inc
jecxz
xchg
xor
gs
fld
mov
dec
add
addr16
jnp
jmp
xchg
add
dec
idiv
pushf
stc
sbb
popf
adc
ficom
mov
das
push
adc
test
push
(bad)
ss
inc
xchg
sbb
mov
sbb
mov
int3
jg
retf
js
bnd
pop
daa
mov
fs
xor
add
push
pop
retf
repz
lods
xor
pop
cmp
fistp
(bad)
pop
ficomp
test
shl
xor
(bad)
cld
ja
ins
add
idiv
aam
cmc
retf
shl
fwait
(bad)
push
out
(bad)
sbb
loop
fistp
xor
sbb
xchg
dec
out
sar
loop
add
inc
call
xor
ds
add
inc
sbb
adc
mov
push
ins
enter
mov
jp
ins
pop
jge
pop
retf
nop
retf
aas
fwait
mov
or
jmp
test
lea
(bad)
xchg
(bad)
pop
inc
in
test
outs
fisttp
ds
in
bnd
adc
pusha
es
imul
xchg
test
mov
jmp
push
pop
enter
(bad)
cwde
cmp
and
jp
mov
ja
movs
cli
or
jl
int3
movs
sbb
sti
jp
ins
pusha
jl
pop
jecxz
(bad)
shl
mov
add
(bad)
dec
mov
cmps
sbb
xchg
lock
jecxz
dec
ins
sahf
fsub
dec
mov
aas
pop
fdivr
rcl
adc
dec
mov
inc
aaa
jno
mov
mov
out
repnz
and
xor
jl
adc
dec
test
and
xchg
aam
cmp
fnsave
je
es
aas
mov
xchg
jae
cli
mov
xchg
(bad)
mov
ja
mov
adc
stc
lock
(bad)
outs
pop
jecxz
pusha
jecxz
aam
cs
mov
push
jle
pop
gs
mov
(bad)
xchg
mov
jmp
jno
mov
adc
push
movs
adc
jmp
loop
call
mov
jbe
pop
mov
pop
xchg
les
jmp
test
ins
xchg
mov
jnp
test
repnz
(bad)
push
retf
push
sbb
std
retf
stc
inc
jo
and
inc
daa
imul
or
xor
cmp
pop
or
icebp
sub
xchg
test
sbb
aaa
daa
cmp
sti
xchg
xor
popa
je
mov
lahf
(bad)
and
cld
sbb
xlat
fisub
mov
jle
mov
mov
mov
repz
pop
mov
inc
repz
fisubr
pop
xor
fcomp
push
retf
sbb
bound
inc
or
mov
mov
out
das
mov
dec
dec
add
retf
or
jb
pop
imul
adc
pop
(bad)
div
xchg
push
lea
mov
mov
int3
jmp
sub
ret
mov
in
out
scas
pop
jo
movs
scas
cmp
int3
shl
ret
ins
fdivr
adc
add
fnstcw
jne
inc
mov
bound
jns
sub
ret
mov
push
or
call
push
mov
imul
outs
adc
mov
ins
call
(bad)
pop
inc
gs
dec
mov
sub
cs
mov
(bad)
ins
mov
test
fs
xchg
adc
jmp
out
(bad)
sbb
add
out
jo
pop
mov
push
pop
mov
jno
mov
not
ret
(bad)
inc
push
pop
xor
aas
ins
jo
xor
pop
pusha
lods
dec
push
movs
sbb
popf
scas
lea
or
sar
pop
(bad)
retf
adc
push
shl
mul
xchg
popa
hlt
xchg
dec
fsub
test
test
sub
outs
dec
mov
std
repnz
(bad)
lahf
inc
jecxz
(bad)
cs
in
fld
add
sub
scas
pop
dec
cmp
mov
(bad)
repnz
jne
fld
adc
cmp
outs
mov
movs
ds
movs
cli
or
call
repnz
push
xchg
pop
neg
mov
not
mov
(bad)
movs
jl
lods
sahf
test
sbb
repz
ins
fwait
mov
adc
or
out
jmp
cdq
xor
pop
gs
fwait
inc
ds
lahf
scas
mov
jmp
arpl
int
sbb
add
pop
fistp
test
xor
sbb
dec
call
clc
pop
repnz
push
jge
and
mov
dec
adc
jb
hlt
fidiv
(bad)
mov
xchg
mov
lds
fwait
scas
jnp
jns
es
push
xchg
int
jns
xor
pop
gs
xchg
mov
(bad)
push
out
jmp
pop
int
sbb
sub
jnp
mov
and
(bad)
sbb
cmp
xchg
push
mov
ja
ins
je
popf
push
jecxz
jecxz
xchg
shl
call
add
imul
mov
leave
adc
loope
sbb
lods
inc
fsubr
cmp
jmp
push
inc
fnsave
dec
xchg
inc
es
call
lods
jge
cmc
push
call
pop
sbb
and
sahf
jg
mov
mov
in
fist
fisttp
push
sub
in
push
sahf
push
and
rcl
fsubr
mov
(bad)
sbb
mov
in
fisubr
sub
cmp
inc
stos
movd
imul
ret
iret
jg
jmp
push
js
leave
xor
add
retf
pop
imul
sbb
pop
enter
leave
rcl
pop
inc
pop
mov
(bad)
enter
adc
sbb
xchg
pop
in
popf
ds
ror
mov
daa
jecxz
repz
cmp
cmp
cmp
mov
mov
loope
add
and
inc
adc
in
and
mov
dec
lods
mov
ins
out
fbstp
dec
jae
mov
pop
in
mov
test
sti
cmps
stos
or
imul
xchg
and
cmc
pop
dec
mov
sub
loop
fld
add
dec
scas
sub
stos
inc
es
lahf
mov
fstp
(bad)
jl
fdiv
test
inc
nop
imul
ss
in
mov
outs
out
popf
xor
inc
jge
jb
pop
xor
dec
call
sti
std
and
fsubr
lods
mov
sbb
jmp
xchg
cwde
dec
fwait
push
idiv
cmp
mov
je
dec
xchg
outs
push
test
xor
retf
sbb
iret
aas
xchg
in
jae
push
xor
aas
or
add
pop
mov
fnstcw
scas
aaa
sbb
or
enter
mov
pop
jne
fistp
repz
xchg
mov
sub
bound
mov
sbb
shl
aas
aad
out
retf
push
mov
lods
dec
pop
cmp
repnz
xor
push
dec
fistp
and
inc
sub
mov
rol
push
gs
adc
inc
add
xor
ins
inc
stos
pop
and
or
sahf
mov
sub
push
inc
loop
jecxz
mov
add
fidiv
loopne
mov
xchg
adc
xchg
jb
leave
ret
xchg
add
jns
mov
ja
mov
xacquire
lods
xor
push
sub
fist
popa
bound
dec
sub
mov
(bad)
aam
mov
outs
outs
push
add
inc
adc
sub
lods
sub
sahf
jnp
nop
dec
pop
xchg
mov
sbb
or
rcl
sub
(bad)
loope
jmp
jecxz
iret
xchg
jno
stc
cli
mov
mov
ins
inc
mov
xchg
mov
dec
in
push
push
nop
mov
je
xor
pop
outs
push
clc
cmp
dec
(bad)
xchg
call
cli
add
pop
mov
adc
inc
adc
pop
pop
mov
mov
xor
cmc
xchg
jbe
push
movs
ins
in
lock
xchg
shl
inc
in
popw
cmc
ror
lea
outs
loope
test
cmp
dec
jp
mov
pop
div
add
clc
(bad)
fist
xor
or
mov
dec
(bad)
mov
mov
or
retf
jae
out
and
out
daa
mov
test
sbb
std
sbb
and
out
aaa
mov
jbe
fst
mov
dec
loopne
xchg
fs
mov
add
loop
cmp
ins
xchg
mov
sar
stos
sbb
xchg
test
mov
sbb
scas
ins
(bad)
jbe
sbb
fist
inc
bound
dec
mov
pop
inc
mov
push
pop
xchg
xchg
mov
inc
loop
sbb
es
pusha
scas
daa
mov
test
push
or
cdq
xchg
and
fild
test
mov
sti
mov
inc
sti
(bad)
xchg
data16
add
in
jnp
ins
or
mov
lea
aas
out
repnz
(bad)
pop
dec
(bad)
mov
inc
aad
cs
dec
push
jmp
pop
sbb
sbb
xchg
push
xchg
mov
fisttp
lea
jbe
inc
cmp
xor
push
sub
pminsw
lods
jne
mov
ja
mov
lahf
xlat
xchg
cmp
sbb
fidivr
(bad)
sti
outs
cdq
les
daa
xlat
inc
mov
jg
xchg
mov
cmp
fcomip
xchg
shl
data16
fwait
scas
jo
pop
aad
add
fdivr
shl
xor
inc
mov
cmp
add
cmp
sbb
cli
add
sbb
sbb
jo
data16
mov
test
aas
mov
push
popf
mov
sub
and
cmps
xchg
aaa
mov
js
mov
sti
mov
jp
(bad)
xchg
popa
jmp
jne
std
retf
jmp
(bad)
cmps
(bad)
sar
stos
pop
inc
xchg
xchg
test
pop
mov
sbb
lods
push
shr
xor
pop
add
push
dec
mov
xor
jb
mov
add
fild
iret
or
data16
cmp
pop
mov
dec
cmp
sbb
adc
leave
fistp
pop
push
inc
stos
pop
xchg
xchg
fs
jno
(bad)
cmp
cmc
sub
lea
xor
lock
mov
inc
clc
sub
xchg
leave
push
jmp
pusha
and
mov
cmc
dec
jmp
sbb
xor
das
mov
fimul
mov
jb
xchg
mov
xlat
xchg
es
pusha
repnz
pop
arpl
pusha
sub
or
mov
xchg
mov
psubq
rep
add
cmp
jmp
inc
jecxz
fiadd
loopne
cdq
xor
(bad)
jno
je
or
adc
sub
cmp
cmp
dec
pusha
stos
jp
cmps
sbb
lea
inc
out
aad
cmp
dec
dec
sbb
pop
mul
mov
out
push
clc
in
adc
pusha
cmp
dec
ja
mov
sub
fcmovu
inc
jg
mov
adc
dec
call
cmp
inc
rcl
ins
pop
test
(bad)
xor
inc
loopne
sbb
push
xor
pop
ja
and
mov
or
inc
push
jge
shl
inc
out
into
stc
cmp
(bad)
adc
jno
test
jmp
cld
pusha
push
xchg
mov
call
jns
mov
adc
rol
push
xor
test
jnp
fcomp
gs
cwde
ins
cs
xchg
test
out
xor
cmp
sbb
add
sbb
aas
mov
xchg
outs
pop
movs
cmp
nop
xchg
sahf
not
sar
pop
mov
ins
jecxz
call
es
rol
mov
ja
mov
adc
stc
loope
fcmovb
dec
ins
pushf
movs
inc
leave
dec
scas
ds
cld
fisub
jp
xor
lea
outs
mov
mov
jnp
jmp
mov
jbe
jno
mov
jl
sub
pop
fild
test
inc
or
aaa
and
in
scas
xchg
add
jbe
mov
xchg
push
jmp
rol
mov
jp
nop
xchg
clc
(bad)
and
call
sbb
sbb
pop
rcl
jge
mov
jo
call
shl
or
gs
cmps
and
das
mov
mov
push
xchg
mov
ror
ds
imul
jno
inc
xor
push
loope
inc
and
xlat
mov
xchg
ins
xchg
add
mov
sbb
sti
loop
cli
loop
adc
ret
xor
jp
cmp
cs
cmc
inc
cld
xor
pop
jl
test
dec
in
(bad)
lea
in
push
test
add
inc
xor
adc
xchg
pop
add
addr16
jge
(bad)
and
mov
std
cmps
out
mov
sbb
pusha
mov
jne
xchg
jns
(bad)
aam
ins
lea
not
pusha
mov
fcomip
mov
jmp
pop
in
cmp
sar
inc
add
dec
pushf
pop
inc
popa
sti
sbb
xchg
cwde
sub
hlt
pop
cli
rcl
ret
into
pop
adc
cmp
pop
(bad)
jb
add
adc
out
mov
xor
fsub
es
jae
mov
pop
mov
loop
and
rol
in
div
test
fwait
pushf
mov
adc
clc
call
dec
lock
adc
ds
neg
push
out
pop
jo
xor
add
push
mov
mov
fistp
or
cmc
gs
dec
aas
mov
ja
aaa
add
ins
dec
test
lods
sbb
add
and
shl
cli
pop
jno
mov
jge
loope
jbe
mov
add
les
sbb
lods
mov
add
fcmovnb
idiv
repz
mov
xor
es
push
dec
or
cmp
mov
mov
(bad)
jnp
fsub
sti
jae
arpl
adc
sub
pop
xlat
pop
(bad)
aad
inc
stos
cdq
test
(bad)
in
xor
dec
push
popf
jle
mov
dec
in
jecxz
call
stos
test
inc
movs
add
dec
popf
pusha
jae
xchg
ds
adc
aam
lock
int
or
mov
aam
repz
pop
push
pop
cld
jae
jns
xchg
test
push
fisttp
lock
sbb
xor
cmp
pusha
mov
popf
and
mov
or
fstp
fst
push
stos
and
shl
retf
or
stos
xchg
repz
mov
imul
idiv
loope
xchg
std
repz
inc
cwde
test
fwait
xor
enter
dec
jl
lea
pop
xchg
push
xor
clc
push
xchg
addr16
push
inc
inc
aaa
sti
sbb
add
sub
adc
popf
mov
dec
test
test
neg
add
lock
push
repnz
je
pushf
pop
adc
dec
test
jle
xchg
mov
retf
jmp
sub
sbb
ds
out
into
ja
push
fs
jge
pop
push
push
add
mov
shl
add
xor
and
pop
push
or
push
mov
mov
(bad)
adc
and
fist
loop
je
movs
pop
(bad)
mov
cmps
outs
out
mov
adc
mov
hlt
mov
data16
scas
push
and
ror
mov
dec
(bad)
sub
cs
fist
aaa
add
inc
stos
adc
ds
test
mov
inc
stc
push
sti
shr
(bad)
push
or
sbb
and
mov
(bad)
pop
pop
fnstsw
ja
xlat
or
xchg
inc
mov
jne
stos
pop
fcmovnb
aad
mov
xchg
outs
fisub
pushf
aaa
in
push
mov
sbb
daa
std
lock
jns
jmp
cmp
iret
cli
(bad)
push
gs
inc
test
inc
cmp
call
in
cli
sbb
or
xor
push
add
pminsw
push
or
(bad)
sbb
push
and
test
arpl
inc
jne
mov
xchg
repnz
xchg
jmp
jecxz
mov
imul
xchg
cmp
jecxz
jecxz
dec
sbb
push
jmp
in
push
xor
sub
mov
push
push
cwde
shl
sbb
xchg
sbb
pop
and
push
cmp
or
outs
fstp
popf
sbb
push
cmp
pop
leave
fistp
xchg
mov
pop
call
in
dec
cli
rcl
cmps
cmps
(bad)
sbb
cmp
push
xchg
fadd
into
dec
and
clc
fisub
dec
lods
das
jge
mov
fwait
int
inc
push
cmps
push
loop
movs
div
jne
rol
add
daa
xor
jp
mov
popf
movs
test
and
and
fistp
loop
fs
rcr
mov
cwde
inc
rcr
mov
xchg
ins
fwait
pushf
mov
aas
lods
push
pop
in
xchg
sbb
icebp
add
retf
xor
aas
dec
cmp
jne
push
lahf
imul
mov
in
in
jle
clc
jb
pop
pop
int
sbb
es
xor
or
cmps
add
mov
dec
jmp
jmp
jno
rcl
hlt
cmp
fwait
popa
das
(bad)
xlat
stos
aaa
in
mov
inc
pop
in
lea
inc
in
jmp
movs
sub
adc
neg
pop
stc
inc
jo
cmp
lea
fwait
xchg
ss
inc
lahf
sbb
xchg
sbb
pop
add
sbb
pop
and
fldenv
inc
retf
repz
das
xor
pop
xor
inc
mov
ins
xchg
mov
sbb
clc
jmp
rol
scas
pusha
pop
xchg
mov
push
daa
sti
repnz
lods
inc
xchg
and
int
fisub
outs
les
add
xor
mov
test
sub
rcr
ret
clc
jg
add
adc
pop
lahf
and
data16
push
xchg
xchg
mov
xor
cmps
pop
lahf
xchg
js
pop
jge
(bad)
jb
cmps
call
push
xchg
jmp
push
lock
fsubr
mov
mov
clc
cld
mul
pop
test
int3
sub
loopne
into
xor
pop
jl
mov
pop
pushf
mov
aam
cs
xchg
ror
js
iret
pop
sub
xor
pop
pop
mov
movs
sbb
or
dec
popa
dec
lahf
dec
xchg
shl
add
push
xor
push
jmp
and
ins
xchg
xchg
shr
nop
fs
rol
in
aam
jl
cwde
inc
out
hlt
cs
inc
test
push
xor
pop
test
mov
stc
push
cdq
mov
mov
sub
pop
adc
sub
fwait
das
mov
mov
sub
push
sbb
scas
not
or
xlat
out
pop
(bad)
enter
jbe
mov
jae
les
fcmovbe
mov
loope
xchg
neg
mov
test
inc
lods
test
leave
dec
in
sbb
fsub
jb
dec
mov
jge
mov
jge
mov
sub
ins
out
aas
cmp
dec
or
int
push
pop
and
sub
mov
mov
dec
fstp
cwde
push
mov
push
popf
pop
stc
pushf
lock
frstor
add
shl
mov
bound
mov
stos
fcmovb
dec
pop
nop
lods
dec
jecxz
int3
cs
dec
icebp
push
fidiv
pop
ins
outs
popf
inc
sbb
cdq
lods
mov
cli
or
jmp
push
inc
xor
test
pushaw
lods
ins
inc
cmps
or
mov
test
not
xchg
cmp
mov
outs
pop
jno
push
sbb
pushf
les
daa
in
xchg
xor
outs
mov
dec
pop
mov
cmp
retf
cld
aas
adc
fmul
pop
div
sub
stc
in
inc
fidiv
pop
outs
jle
inc
sbb
cwde
mov
out
pop
xchg
div
adc
pop
das
jo
sbb
and
sahf
jge
(bad)
cdq
xchg
and
rcl
aam
jbe
test
sahf
(bad)
cmps
sar
stos
jae
ins
mov
jns
test
inc
lods
scas
push
enter
or
(bad)
icebp
fistp
cmp
dec
test
mov
or
mov
int
sub
ins
call
jnp
add
int
push
pop
and
aas
xchg
and
imul
movs
cmp
mov
dec
fstp
mov
clc
outs
add
pop
retf
fcomp
dec
call
shl
mov
bound
mov
adc
cld
fsub
mov
dec
jecxz
int
sub
cli
fdivr
data16
pop
push
jp
xchg
mov
out
pextrw
mov
pop
jmp
sbb
sbb
or
and
test
push
les
mov
jnp
(bad)
cmps
fs
mov
adc
fmul
test
ret
or
test
sbb
inc
lods
scas
inc
les
add
int3
icebp
fistp
dec
jb
dec
scas
cmp
mov
add
mov
test
popf
fisttp
cmp
ins
add
int
xor
pop
and
daa
pushf
and
imul
movs
ds
mov
pop
fstp
mov
leave
div
jbe
push
popf
pop
call
cwde
adc
test
mov
jmp
xchg
mov
bound
cmp
cmps
cld
ror
fmul
pop
lds
cli
mov
jbe
xor
pop
push
in
sbb
xchg
call
cli
add
xchg
je
jae
jmp
and
sahf
jp
sbb
and
mov
add
jbe
test
(bad)
mov
dec
inc
cmps
addr16
adc
icebp
stos
jnp
ins
mov
push
mov
cmp
aam
outs
lods
lods
inc
lds
daa
adc
icebp
fist
xor
cmp
mov
jns
mov
call
or
aas
int
pshufw
sahf
sub
mov
jne
mov
pop
fstp
xchg
aas
mov
jne
popf
pop
pause
loopne
xchg
sar
push
(bad)
shl
mov
bound
cwde
xchg
sti
aam
retf
pop
xchg
test
cmp
std
inc
fidiv
pop
ins
push
mov
jns
xchg
call
cli
or
cli
je
jb
jmp
das
jo
sbb
sbb
sahf
jg
sbb
and
xchg
add
jbe
test
mov
jae
(bad)
cmps
data16
popa
adc
lock
out
ins
test
push
mov
test
sbb
inc
lods
scas
push
(bad)
jp
ds
xor
enter
dec
cwde
xor
mov
pop
imul
xlat
sbb
aas
int
pop
addr16
and
or
mov
inc
mov
pop
fstp
mov
clc
addr16
push
popf
pop
cdq
fwait
loopne
xchg
mov
jo
xchg
jg
jmp
mov
bound
(bad)
xchg
adc
stc
aam
cld
ror
mov
jecxz
aam
sub
stc
in
div
xor
pop
fs
cwde
inc
sbb
sahf
call
cli
add
inc
loopne
das
jo
sbb
jge
sahf
jp
mov
cmp
dec
in
xchg
add
jbe
mov
push
jmp
mov
jmp
in
call
cmp
ins
inc
lods
lods
inc
lds
ds
icebp
fist
xor
cmp
mov
jns
mov
mov
jmp
jno
int
pop
jo
add
imul
adc
sbb
push
dec
int
xchg
aas
mov
jbe
stos
pop
pause
hlt
cmp
xchg
popa
and
loop
add
dec
and
ja
mov
pop
add
repnz
fdiv
dec
ins
xchg
scas
push
jecxz
fdivr
sub
cli
cld
std
push
ret
push
dec
mov
xor
mov
dec
cdq
shr
cmp
outs
jns
int
pop
bound
and
push
xchg
and
imul
movs
xor
mov
ins
fstp
mov
mov
jb
outs
fs
popf
pop
icebp
pushf
(bad)
js
enter
xchg
jb
out
shl
mov
addr16
mov
js
(bad)
stc
sub
dec
inc
mov
lock
cmp
neg
callw
sub
or
js
inc
sub
xchg
mov
mov
jmp
arpl
iret
pop
pop
pop
sub
sub
pushaw
movs
ins
cmp
test
rcl
es
jo
ins
jb
popf
push
mov
js
les
(bad)
sti
mov
jecxz
lods
mov
bound
mov
ds
repnz
rol
inc
ins
nop
popf
dec
loope
fmul
push
or
cld
out
jle
cmp
inc
cmps
sbb
sbb
(bad)
xchg
mov
rcr
out
aas
mov
pop
fs
xor
pop
sub
adc
and
test
xor
mov
jl
jmp
push
cli
pop
jnp
mov
dec
mov
xchg
push
in
pop
adc
ror
mov
pop
mov
sar
in
idiv
inc
fwait
lahf
inc
out
scas
xor
cmp
jmp
gs
inc
daa
push
xchg
mov
mov
jmp
pop
cmp
pop
sbb
das
mov
stc
pushaw
test
cmp
mov
int
xchg
cmp
bnd
push
repz
pushf
les
and
cli
mov
jecxz
lods
lods
cmps
shl
data16
mov
aas
add
repnz
rcl
inc
ins
sahf
xchg
dec
loope
fstp
push
ds
retf
push
pusha
mov
imul
mov
in
clc
aas
mov
pop
inc
inc
xor
pop
add
sub
mov
lea
outs
nop
mov
jl
out
mov
cli
jne
push
scas
js
mov
dec
loopne
mov
in
jns
lock
(bad)
mov
jne
test
push
es
cmc
sub
js
mov
xor
xor
sti
fldenv
aaa
pop
push
jp
sub
inc
add
cwde
mov
mov
jmp
push
xor
sub
test
pushaw
stos
or
or
mov
and
cmp
bound
push
cmp
pushf
les
and
cli
test
jecxz
lods
lahf
cmps
shl
imul
mov
cdq
shl
inc
ins
pushf
scas
inc
loope
fnstsw
pop
ds
clc
cmp
pusha
scas
sbb
cs
lahf
retf
xor
rol
clc
aas
mov
push
push
inc
xor
cmp
jge
sbb
jg
mov
pop
nop
mov
jl
leave
mov
cli
inc
jnp
mov
dec
sub
push
in
pop
or
rol
pop
jae
call
in
idiv
fwait
lahf
inc
fdiv
xor
xor
hlt
fldenv
aaa
push
cmp
cmp
sub
mov
mov
jmp
pop
aaa
iret
pop
sbb
das
mov
test
cmps
or
movs
xchg
out
xchg
cmp
jbe
lea
test
inc
pushf
les
and
cmc
mov
xchg
jne
mov
aas
add
repnz
aad
ins
mov
cmp
or
xchg
call
xor
pop
arpl
inc
sbb
mov
inc
int3
cli
cmp
xor
cmp
jge
push
mov
push
imul
lahf
test
int
xchg
xor
sbb
popf
push
pushf
fild
les
daa
in
div
lods
cmps
shr
sbb
xor
retf
repnz
aad
ins
xchg
xchg
xor
push
cmp
ds
jmp
jo
jns
sbb
cs
mov
cwde
cmp
cli
or
xor
xor
jo
sbb
imul
cmp
popf
mov
dec
loopne
xchg
daa
mov
jbe
stos
push
repz
lock
test
xchg
fs
js
fcmovnbe
hlt
push
imul
stos
loop
test
arpl
stc
xchg
(bad)
dec
sbb
test
repnz
sub
cli
(bad)
icebp
data16
pop
push
fwait
inc
sbb
cdq
mov
out
add
sbb
pop
das
jo
sbb
jle
sahf
jp
mov
cmp
dec
cwde
retf
xchg
add
jbe
mov
bound
mov
mov
out
ins
mov
dec
pop
test
repnz
(bad)
inc
gs
inc
int3
pop
stos
aaa
cs
fmul
in
push
jns
push
daa
inc
and
mov
scas
dec
jmp
add
fiadd
sbb
sbb
pop
fld
mov
inc
lahf
mov
ins
in
retf
mov
mov
jns
sbb
jnp
cmps
(bad)
dec
mov
xchg
push
call
mov
fild
stos
cmc
adc
movs
push
adc
dec
outs
mov
cmp
outs
fldcw
cs
fcom
xor
pop
ins
push
mov
xchg
mov
pushf
push
sub
push
std
or
xor
xor
sub
test
and
sbb
es
(bad)
jmp
jnp
ins
jo
stos
pop
repz
dec
cdq
les
es
rol
mov
jle
xchg
mov
push
sbb
retf
cmc
cmp
adc
call
(bad)
rol
xor
mov
jle
mov
pop
jae
mov
scas
sbb
inc
(bad)
int
fs
rol
and
mov
pushf
cmp
add
nop
or
lods
mov
jae
stc
xchg
xor
jecxz
repnz
push
push
sbb
leave
pop
add
jno
std
out
jnp
ins
movs
(bad)
scas
mov
test
inc
mov
stc
test
lods
inc
in
scas
cs
enter
ficomp
sbb
ja
jnp
mov
mov
cli
cli
or
add
push
sbb
xor
adc
imul
xor
sbb
add
mov
push
in
inc
push
stos
pop
(bad)
mov
inc
xchg
fsub
sub
enter
ins
cmp
fidivr
stos
pop
ja
xchg
mov
popf
xor
push
aad
ss
in
(bad)
stc
callw
and
mov
pusha
cmp
xchg
movs
mov
sbb
or
sbb
aaa
sbb
sub
pop
ja
or
scas
sbb
lahf
mov
dec
hlt
jmp
gs
stos
pop
icebp
mov
dec
xchg
sar
push
call
mov
or
je
mov
push
add
pusha
imul
dec
jecxz
fimul
ds
clc
fist
adc
dec
mov
inc
aas
jns
mov
mov
cli
idiv
cli
jns
jno
int
cmp
xor
das
mov
fld
test
push
lahf
mov
dec
out
popf
aas
mov
jbe
stos
push
repz
dec
xchg
rol
std
rol
stos
fldcw
stos
pop
ja
leave
test
cli
mov
jp
ds
cmp
icebp
fist
inc
push
push
inc
mov
arpl
add
nop
xchg
mov
(bad)
fadd
mov
sbb
inc
outs
push
jo
lahf
sub
and
push
movs
cmp
mov
out
aad
aaa
mov
jnp
mov
dec
mov
mov
sbb
ror
lea
push
xchg
enter
mov
xchg
cld
lock
ins
fwait
lods
inc
(bad)
jp
adc
cmp
cld
retf
data16
jo
dec
stos
aas
pop
push
mov
mov
jmp
mov
popa
fs
int
sbb
sbb
mov
sub
popf
mov
or
and
icebp
mov
mov
jbe
fcomp
mov
xchg
arpl
rcl
fcmovu
movs
fs
mov
mov
lods
inc
out
(bad)
sub
notrack
fld
or
pop
push
outs
cmps
mov
mov
jmp
push
aad
push
jg
or
push
pusha
lods
bndldx
cdq
outs
aaa
xor
in
xchg
xor
arpl
pop
repz
xchg
adc
mov
and
enter
ins
xchg
js
mov
xor
shl
mov
repz
jge
scas
inc
sti
das
clc
ds
cld
fist
cmp
cmp
mov
xchg
stos
mov
cs
ins
jmp
push
push
popa
xor
xor
jo
adc
sbb
test
daa
movs
cmp
test
xchg
lods
xchg
add
jno
stos
pop
retf
dec
sahf
les
and
(bad)
nop
jae
ja
lahf
popf
in
mov
xchg
mov
ror
fsub
fmul
or
xlat
mov
inc
jmp
bound
jns
cmp
gs
mov
mov
or
ins
(bad)
or
cmp
xor
(bad)
das
nop
pop
fdivr
sahf
jl
movs
cmp
lea
inc
sti
xlat
xchg
and
inc
dec
stos
pop
lock
dec
xchg
loope
inc
in
je
std
ret
xchg
adc
je
mov
ja
test
push
aaa
repnz
sbb
lods
inc
neg
or
jge
xor
pop
ins
inc
mov
mov
mov
fdivr
or
es
sbb
adc
sbb
pusha
scas
imul
adc
pop
aaa
sub
out
daa
mov
jbe
stos
pop
repz
(bad)
dec
test
movs
push
in
jno
std
rol
mov
inc
xchg
mov
or
into
mov
loop
inc
neg
ds
push
out
ss
pop
stos
pop
push
push
mov
jns
mov
lods
sub
fild
or
or
pop
sbb
sub
and
inc
pusha
movs
outs
xor
ss
and
in
xchg
aaa
mov
pop
push
stos
pop
push
xchg
pusha
out
jno
(bad)
not
stos
mov
test
pop
xchg
mov
xor
cli
fistp
mov
fidivr
sub
sub
push
loop
jo
outs
sbb
inc
movs
inc
cs
mov
fistp
leave
cli
or
xor
fwait
sbb
test
add
xor
mov
dec
out
fst
lock
push
push
stos
pop
icebp
mov
dec
mov
xchg
fs
push
and
fsub
mov
gs
mov
push
xor
repnz
sahf
add
fld
cld
jl
xor
pop
push
mov
lahf
mov
mov
in
stc
das
xchg
lock
pop
aas
enter
add
fwait
cmp
sar
mov
pop
mov
sub
stc
cdq
and
jns
pop
xchg
jle
mov
adc
sahf
je
(bad)
adc
iret
sub
out
pop
inc
cli
icebp
xchg
lock
dec
jg
mov
icebp
pop
repz
dec
ret
repz
jp
and
or
cwde
push
pop
push
test
enter
movzx
outs
pop
bound
(bad)
sbb
stos
sbb
add
or
xchg
add
inc
ret
inc
add
mov
inc
xchg
shl
push
in
inc
and
jmp
adc
lods
loop
cmps
ins
push
mov
cli
repnz
cmc
clc
gs
mov
adc
cmp
aad
pop
cld
cmp
pop
mov
push
or
mov
push
(bad)
jl
loop
mov
bound
sbb
xor
inc
push
cmp
jnp
js
mov
cdq
sbb
add
mov
scas
mov
dec
jae
popf
inc
and
arpl
xchg
xor
retf
div
jmp
fcomp
ins
and
shl
jle
call
repz
push
call
fmul
push
push
mov
xchg
xchg
retf
cmp
loop
mov
outs
dec
jbe
in
inc
adc
popa
mov
dec
pusha
test
aas
movs
cmp
mov
dec
in
xlat
xchg
aaa
mov
pop
push
stos
push
in
lock
les
sub
fmul
lods
repz
test
sbb
ficomp
mov
dec
cmp
xlat
aam
jl
or
add
and
cmps
nop
lods
dec
or
fs
aas
mov
gs
inc
fld
dec
daa
mov
mov
cli
outs
inc
fidiv
and
mov
dec
(bad)
call
jb
sbb
jle
and
movs
out
mov
mov
(bad)
ror
xchg
mov
push
out
mov
inc
rol
test
ins
pushf
mov
adc
pop
sti
xor
jno
aas
je
mov
xchg
nop
xchg
adc
and
daa
jmp
add
and
scas
push
mov
cmp
repnz
ret
push
in
pop
inc
mov
jecxz
test
sbb
jecxz
stos
(bad)
stos
shl
outs
ja
mov
push
aas
cmc
icebp
sbb
dec
jl
mov
dec
cs
fist
cmp
cmp
bound
mov
mov
ins
std
out
or
jb
int
adc
add
push
fadd
fisttp
mov
test
out
fild
imul
pop
stos
pop
xchg
mov
rcl
mov
lahf
stos
leave
cmp
enter
(bad)
fadd
lods
scas
je
pop
fadd
cs
enter
dec
mov
ins
inc
mov
imul
js
clc
jbe
imul
add
mov
mov
stos
dec
xor
test
loop
xchg
daa
stos
fbstp
outs
push
push
stos
dec
jmp
cmc
pop
test
xchg
addr16
xchg
je
aam
or
ins
mov
outs
jge
mov
push
xor
fadd
mov
(bad)
fist
sbb
dec
mov
inc
bound
cmp
outs
jmp
jno
shr
jo
sbb
imul
aaa
mov
jae
test
out
fld
retf
ins
jbe
mov
ins
xchg
enter
mov
cmp
rol
xchg
stos
lds
fdivr
add
adc
aam
sti
push
or
stc
jbe
ss
inc
mov
inc
cs
mov
mov
cs
dec
ror
or
aaa
leave
daa
xor
sbb
cwde
jg
movs
ds
popf
mov
dec
leave
fcom
in
jbe
stos
pop
les
xchg
pusha
in
jno
(bad)
icebp
mov
aam
or
inc
xchg
mov
adc
icebp
not
mov
fiadd
and
cli
(bad)
out
jbe
xor
or
xchg
inc
cmp
test
cs
outs
cld
cli
sbb
ss
das
xor
sub
test
xor
mov
cmp
test
mov
jbe
stos
push
repz
lock
and
inc
out
jg
std
ror
call
stos
xchg
push
aaa
in
repnz
test
sub
iret
inc
call
sahf
ins
ins
push
popf
pusha
aaa
dec
popf
mov
in
sbb
cli
or
add
xor
sub
pusha
test
add
mov
dec
out
mov
mov
inc
push
popf
pop
out
loopne
mov
and
rol
scas
(bad)
aas
mov
xchg
aaa
stc
jmp
scas
lds
jmp
cmp
jbe
xor
(bad)
push
mov
jns
mov
int3
ja
cli
or
cli
jp
jne
call
add
aaa
mov
test
xor
test
out
int3
mov
xchg
push
gs
test
repz
aas
cdq
les
xor
loope
push
jecxz
movs
(bad)
mov
push
xchg
mov
pop
adc
repnz
cld
repz
pop
fwait
test
ds
push
call
scas
pop
push
test
jns
mov
mov
in
cli
cmp
jno
out
cmp
xchg
das
mov
mov
pop
xchg
mov
ins
out
fild
repnz
frstor
call
(bad)
jae
ins
movs
(bad)
scas
int
lods
js
out
test
or
icebp
sub
lods
dec
jecxz
fnstenv
cs
cld
leave
inc
jmp
push
push
inc
mov
inc
cs
call
push
(bad)
cli
sbb
inc
into
and
sub
mov
jb
mov
dec
out
iret
xchg
daa
mov
add
mov
arpl
xchg
jno
leave
shl
mov
jnp
mov
add
mov
sub
lods
inc
jecxz
(bad)
cmp
ds
stc
iret
and
xor
sub
mov
or
cmp
fdivr
push
pop
xor
daa
add
pop
mov
test
adc
or
and
jmp
gs
stos
push
test
inc
test
xchg
fs
xchg
jae
std
retf
mov
shr
mov
sbb
imul
lock
lods
aaa
loopne
(bad)
ds
clc
xor
xor
push
mov
jns
mov
aad
in
cli
sbb
xor
sbb
jb
aas
fwait
sub
mov
outs
popf
mov
inc
call
loop
bound
lds
test
retf
xor
fisub
stos
lds
mov
je
mov
push
daa
cld
fiadd
mov
cmp
cmp
ss
bound
inc
or
mov
ret
fisttp
cli
or
ds
fs
and
cmp
mov
add
and
xchg
add
push
pop
popf
push
jecxz
mul
xchg
popa
xlat
xor
rol
mov
jb
mov
idiv
fiadd
out
fidivr
cs
call
leave
push
call
stos
or
sub
mov
jmp
bound
int
cmp
pop
sahf
add
(bad)
jg
nop
xor
xchg
mov
dec
out
xlat
in
sahf
sti
je
ins
jbe
mov
dec
mov
xchg
fs
jg
cmc
rol
(bad)
(bad)
lods
xchg
test
cmp
cli
mov
xchg
lahf
test
icebp
pop
ficom
cmp
(bad)
cld
lods
push
into
xor
pop
data16
push
cs
sahf
call
dec
mov
add
es
or
aas
fdivr
cmps
dec
inc
mov
ja
stos
mov
push
cmp
stos
xchg
daa
fwait
int
retf
push
jle
dec
icebp
mov
xchg
push
retf
push
jecxz
add
addr16
test
repnz
repz
gs
fidivr
add
idiv
fst
es
sbb
inc
lea
ins
out
mov
mov
jmp
pop
xor
pop
push
dec
add
adc
addr16
stos
jnp
stos
cmp
fwait
cmps
test
out
fistp
repnz
mov
cwde
inc
in
push
and
ins
cmp
sar
arpl
stc
loope
(bad)
fisttp
movs
inc
jecxz
into
aaa
sub
loope
fstp
and
pop
scas
push
dec
jae
push
sbb
mov
mov
neg
imul
pop
fild
fwait
ins
xor
sbb
xchg
aaa
mov
pop
push
mov
dec
sahf
les
es
shl
mov
arpl
xchg
xchg
adc
stc
jmp
retf
imul
dec
jecxz
cli
sub
ds
shr
push
jecxz
jo
ins
ficomp
ins
push
pushf
inc
sub
mov
mov
fnstcw
rcr
cwde
int3
push
jb
add
and
ds
stos
push
cmp
add
and
fist
repnz
jae
lea
mov
dec
xchg
xlat
test
xchg
popa
es
fist
xchg
jg
cdq
xchg
add
(bad)
sbb
mov
push
ds
stc
fild
and
pop
imul
cs
xchg
mov
dec
or
inc
lahf
clc
or
cmp
xor
js
adc
arpl
push
xor
xchg
aaa
add
xchg
xor
jbe
scas
pop
lds
loop
shl
or
leave
adc
test
cs
jmp
dec
pusha
lea
xor
adc
(bad)
ret
inc
call
cmp
sti
inc
sub
xchg
xchg
stos
sbb
fild
cli
or
adc
push
or
inc
inc
scas
pop
add
sbb
popf
test
sbb
xor
fbstp
ficomp
pop
lods
popa
fst
xchg
addr16
or
cli
cmp
fwait
mov
add
aam
retf
repz
dec
mov
pop
cmp
adc
xor
pop
pop
or
adc
lock
call
mov
xor
or
jo
sbb
aaa
mov
test
sbb
lea
aaa
and
popf
daa
mov
jbe
ficomp
mov
dec
adc
inc
in
push
and
rol
lahf
leave
aas
test
push
lahf
lds
movs
in
aad
push
pop
(bad)
xor
cli
vmaxsd
pop
jp
dec
sub
sub
mov
loop
or
xor
and
mov
pop
bound
push
xchg
mov
dec
out
test
lahf
jbe
mov
inc
xchg
std
add
rol
stos
leave
inc
stos
ins
jne
mov
adc
fcomip
(bad)
ret
sbb
fstp
ds
aam
pop
ret
or
stos
cmp
sbb
xchg
mov
mov
loop
or
clc
sbb
push
add
xor
das
mov
fstp
test
sbb
adc
fist
lock
jbe
stos
jle
mov
xchg
fs
cmp
rol
(bad)
mov
jg
mov
adc
stc
loopne
retf
fs
push
cs
fist
sbb
pop
inc
push
lea
jns
mov
frstor
fcomp
xchg
clc
jle
jb
iret
xor
daa
mov
test
xor
sbb
xor
xor
dec
jbe
lea
mov
dec
mov
xchg
jae
std
icebp
mov
mov
ja
call
(bad)
pusha
jl
test
ds
or
hlt
fist
xor
sbb
xchg
jb
sahf
lods
pushf
cmp
clc
or
cmp
xor
das
mov
fistp
test
sbb
adc
cmp
fistp
repnz
pop
jb
jb
mov
inc
xchg
test
out
test
retf
jl
mov
push
test
loopne
(bad)
pop
bound
into
ss
call
or
push
pushf
xor
mov
clc
iret
or
push
iret
xor
daa
mov
sahf
pop
xor
mov
and
int
aaa
sahf
sti
jp
ins
push
push
stos
pop
(bad)
xchg
pusha
in
sbb
jecxz
mov
stos
lds
mov
repnz
icebp
outs
fwait
lods
push
push
into
ss
cld
std
inc
into
xor
pop
outs
pop
lods
inc
cs
mov
frstor
cmc
sbb
sbb
xor
daa
mov
scas
pop
xor
lea
aaa
push
jl
fistp
repnz
pop
push
cmps
jle
mov
inc
xchg
cmc
mov
in
add
jmp
test
addr16
mov
fisub
cdq
movs
inc
repz
clc
ds
retf
call
mov
inc
cs
lahf
mov
mov
call
push
inc
jp
mov
outs
jbe
jl
pop
retf
adc
adc
dec
dec
movs
cmp
popf
add
or
xor
jno
mov
outs
mov
loop
add
mov
xchg
(bad)
stos
sar
ja
test
pop
loopne
inc
mov
sbb
dec
cmc
bnd
cmp
shl
ds
mov
in
outs
test
outs
push
sub
sbb
sbb
push
jno
ins
adc
call
test
inc
fld
inc
inc
fdiv
ficomp
les
sub
aad
sub
mov
mov
test
cmp
jmp
clc
sar
jge
mov
dec
rcl
sbb
test
pop
in
pop
add
inc
lods
outs
add
into
aaa
aas
iret
push
jmp
mov
pop
into
pop
pop
add
xor
push
lods
jae
pop
sahf
mov
and
push
rol
imul
pop
fnstenv
or
test
mov
adc
ret
jecxz
xchg
add
fisub
xchg
iret
or
scas
push
aas
dec
fmul
dec
sbb
rcr
imul
pop
imul
lea
stos
jmp
sti
pop
sub
adc
mov
push
je
jo
mov
push
popf
xchg
test
pop
aaa
push
cdq
aam
push
mov
jle
scas
dec
mov
stos
popa
hlt
stos
pop
pop
sar
cmps
ins
(bad)
pusha
mov
stos
dec
inc
mov
iret
pushf
idiv
stc
inc
pop
mov
scas
ds
jmp
bound
jne
jns
retf
or
in
inc
out
shl
shl
and
add
outs
push
movs
push
pop
stos
dec
fs
sahf
aaa
or
jno
(bad)
xor
inc
popf
push
call
mov
jp
(bad)
ja
sbb
adc
movs
cld
pop
daa
cld
(bad)
hlt
test
inc
pop
xchg
test
cmp
clc
in
imul
cs
pushf
push
pop
or
add
pop
xchg
cli
push
mov
inc
jae
adc
mov
rcl
pop
jno
jg
mov
add
push
jge
hlt
add
sbb
data16
and
lahf
lock
push
sbb
out
sbb
test
aaa
repnz
mov
scas
cmp
js
sbb
leave
imul
adc
mov
jb
(bad)
retf
aas
scas
pop
xchg
lea
rcr
jo
dec
int
push
dec
sub
out
cmp
sub
outs
jnp
push
sbb
lahf
sbb
push
ds
in
mov
sbb
or
in
xchg
les
sub
ret
xlat
sbb
pop
mov
mov
inc
retf
repnz
dec
xlat
pop
retf
cs
(bad)
inc
into
inc
pop
cmp
ins
pop
push
mov
mov
fld
mov
xchg
addr16
push
xor
add
jmp
fmul
xlat
das
sbb
or
leave
iret
xchg
es
fs
shl
(bad)
fidivr
mov
xchg
std
retf
mov
in
popa
hlt
stc
mov
dec
mov
mov
adc
mov
sbb
dec
(bad)
test
push
dec
mov
xor
dec
icebp
mov
shl
icebp
and
clc
jb
push
inc
aad
xor
jl
sub
jae
adc
jae
movs
aas
jne
mov
xor
pop
test
inc
mov
dec
mov
jmp
cmp
(bad)
test
(bad)
stos
imul
shl
mov
leave
clc
test
mov
dec
sbb
jnp
sbb
push
mov
ds
mov
jmp
jnp
inc
or
xor
jo
sbb
dec
jno
jge
xlat
and
cmp
mov
pop
ror
pop
stc
sbb
and
leave
mov
adc
stos
lea
mov
mov
push
fbld
call
mov
cmp
sub
mov
popa
push
dec
stos
and
push
cwde
jbe
jns
sub
repz
imul
adc
mov
mov
(bad)
dec
movs
xor
xchg
shr
sbb
add
inc
push
inc
mov
cmp
sub
sar
(bad)
stos
in
aaa
fcomp
cmps
fisubr
int3
enter
(bad)
cmp
push
fadd
scas
inc
nop
or
push
dec
lods
ins
inc
pop
mov
jns
mov
shl
fidivr
movs
leave
pop
jge
ds
or
adc
in
inc
jno
addr16
xchg
adc
xchg
mov
scas
cwde
cmp
jmp
and
into
loopne
xchg
repz
aam
xor
mov
mov
test
cmp
rcl
mov
repnz
(bad)
or
push
in
adc
bound
push
pop
dec
lahf
xchg
xchg
pushf
push
sbb
outs
fdivr
add
pop
jmp
xor
push
stos
and
imul
pop
xchg
jb
xchg
sti
add
xor
test
stc
outs
sbb
push
xchg
retf
loopne
ret
xor
add
mov
jb
fwait
mov
pop
jmp
dec
jl
sahf
ins
iret
jle
sub
push
aam
jmp
rcr
bound
aaa
aas
outs
mov
(bad)
rcl
or
pop
out
add
jb
mov
push
inc
xchg
and
jnp
(bad)
daa
mov
push
popf
mov
fmul
cmps
inc
mov
inc
fldenv
mov
dec
xchg
fisttp
pop
sti
loopne
xor
fcomip
das
lods
jg
lods
mov
xor
pushf
(bad)
ret
fnstenv
mov
pusha
xchg
push
call
imul
inc
in
and
data16
push
pop
outs
out
mov
popa
iret
mov
out
jne
jbe
retf
je
add
jl
cmps
jno
test
jg
aad
adc
and
cmp
repz
pop
arpl
jl
jmp
je
fneni(8087
mov
idiv
jne
xchg
mov
daa
stc
repnz
fmul
dec
pop
mov
fcom
aas
or
cli
enter
inc
or
mov
ja
imul
int
xchg
cli
push
mov
js
pop
inc
mov
and
das
mov
jl
xlat
adc
test
outs
xchg
stos
test
xor
test
push
mov
cmp
xchg
or
(bad)
cmp
out
cdq
dec
dec
jecxz
xchg
add
out
pop
mov
push
pop
or
xchg
in
inc
rcr
jns
popf
adc
mov
or
cmps
mov
xor
jmp
test
ins
inc
dec
int
sbb
cmp
mov
arpl
ss
std
(bad)
cmp
push
call
mov
jne
mov
repnz
shl
mov
pop
ja
mov
add
mov
mov
mov
inc
shr
sbb
clc
cld
enter
push
sub
les
pop
es
pop
pop
jne
mov
fisttp
leave
sub
adc
mov
inc
push
stos
jp
popf
dec
push
in
lahf
xor
xor
cmps
daa
mov
add
rol
xchg
mov
push
push
std
ret
mov
shl
test
ins
push
mov
test
fidivr
cmp
pminsw
aam
sar
push
dec
mov
pop
mov
retf
mov
or
stos
popa
xchg
jmp
sar
pop
pop
clc
add
jne
bound
pop
adc
jb
and
hlt
sahf
sbb
imul
xchg
lock
stos
leave
mov
mov
mov
jmp
(bad)
(bad)
stos
out
popf
jnp
xchg
mov
shl
mov
adc
or
jmp
cmp
ja
jnp
movs
xchg
mov
add
add
aad
adc
fcom
ins
jo
sbb
cmp
push
frstor
sbb
sbb
dec
in
(bad)
in
mov
bound
pop
loope
and
movs
mov
lea
stc
call
rol
test
and
pop
jmp
sbb
cdq
jo
pop
out
mov
xor
iret
outs
jmp
push
pop
cmc
sbb
add
and
imul
and
stc
ds
fild
imul
jns
ins
icebp
test
inc
xchg
and
in
add
jp
neg
div
scas
add
mov
mov
xchg
aaa
rcr
or
push
shr
call
sbb
push
lahf
cmp
or
inc
aaa
(bad)
je
jmp
fwait
lea
jno
in
cmp
es
inc
mov
cli
adc
(bad)
scas
dec
push
popf
xchg
(bad)
lock
or
out
inc
pushf
addr16
nop
dec
mov
mov
dec
repnz
adc
jg
xchg
js
cmps
mov
pop
call
lods
fsub
push
scas
ds
enter
adc
cmp
dec
pop
ja
mov
mov
call
inc
fs
mov
push
jns
add
jns
fdivr
mov
js
mov
jns
fist
retf
arpl
dec
fidiv
adc
jno
mov
cmps
adc
dec
hlt
test
mov
stc
repnz
mov
out
fsub
sub
icebp
cld
mov
into
cmp
dec
rcr
pop
lahf
mov
mov
clc
or
xor
pop
aaa
js
adc
jle
sahf
pop
xor
mov
inc
and
retf
sahf
sti
jbe
popa
jle
test
retf
mov
dec
test
pop
and
rol
(bad)
mov
jae
ror
(bad)
pop
sbb
lock
call
stos
sbb
je
inc
sub
mov
jmp
pusha
sbb
xor
das
mov
stos
outs
adc
sar
call
repnz
arpl
stos
jle
mov
js
les
and
mov
cli
test
jbe
xchg
mov
adc
repnz
mov
sub
or
cld
shl
dec
mov
inc
push
jns
mov
stos
sub
fild
shr
clc
jb
add
int
or
pop
adc
imul
movs
cmp
mov
dec
leave
fist
icebp
jl
push
stos
pop
out
loopne
xchg
shr
in
xchg
jb
clc
rol
stos
lds
mov
lock
repz
outs
fwait
lods
push
lds
sub
hlt
fist
xor
sub
test
cs
mov
mov
sub
outs
(bad)
cli
or
cmp
pop
adc
imul
movs
cmp
movs
lea
aaa
and
xchg
inc
mov
jbe
stos
pop
fadd
xchg
push
std
rol
stos
leave
inc
test
jg
mov
adc
stc
out
fcmovbe
dec
push
pop
iret
ds
cli
cld
(bad)
xor
pop
outs
pop
mov
jns
test
loop
or
daa
int
cmp
imul
bound
push
popf
movs
mov
(bad)
fist
les
push
ficomp
mov
inc
xchg
(bad)
xchg
fs
movs
jno
fcmovnbe
test
jmp
add
test
dec
stc
test
lods
push
repz
clc
sub
cli
hlt
fist
xor
pop
pop
jo
inc
pop
jns
mov
mov
sub
outs
ror
mov
cmp
xor
jo
adc
imul
xor
sbb
xor
fist
icebp
jl
daa
test
ins
xchg
shl
in
xchg
jno
std
rol
mov
ss
pop
arpl
std
(bad)
stc
cld
fld
mov
dec
out
fimul
shl
or
sbb
sbb
pushf
retf
aas
in
pushf
dec
xchg
or
push
push
sub
mov
ins
push
nop
pop
sbb
sbb
sbb
lahf
in
or
js
sbb
pop
fcom
mov
dec
lahf
enter
mov
mov
mov
rol
outs
ja
mov
push
sbb
out
lods
xchg
mov
sbb
das
cli
rep
inc
jecxz
addr16
pop
xchg
push
lods
mov
popf
jmp
inc
mov
aas
fwait
das
mov
scas
pop
imul
mov
cs
out
fucomip
xor
inc
push
inc
shl
(bad)
movs
out
test
xchg
jno
mov
test
mov
stc
repnz
retf
ret
outs
dec
popf
movs
sub
addr16
sub
fcmovbe
imul
xor
movs
push
pop
ins
cmps
sahf
retf
inc
in
outs
loopne
sbb
fmul
pop
sbb
and
sub
adc
dec
add
sub
(bad)
mov
add
inc
push
fild
xchg
cmc
xor
mov
xor
jecxz
xchg
cld
fsubr
adc
mov
mov
neg
xchg
(bad)
pop
in
push
pop
ss
xlat
repnz
lahf
push
jge
dec
stos
ins
outs
cld
inc
add
retf
inc
std
push
loop
xor
and
es
es
loop
mov
adc
push
adc
rcl
fld
shl
push
mov
ret
movs
out
sbb
call
jecxz
lea
push
or
xor
mov
dec
push
dec
fist
or
nop
out
neg
sbb
inc
pushf
pop
dec
push
call
rcr
or
sbb
jae
jb
mov
sub
inc
leave
and
adc
shl
xchg
in
call
jbe
mov
dec
loopne
mov
cmp
out
jne
jl
(bad)
stos
sar
jp
pushf
enter
(bad)
les
stos
lods
dec
aad
cmc
cmp
sub
(bad)
es
fwait
push
sbb
jbe
dec
xchg
xchg
fwait
mov
aas
out
in
bnd
icebp
pusha
jg
xor
xor
scas
pop
test
fnstsw
xchg
dec
ja
(bad)
in
repnz
ror
aam
pop
daa
fist
cmps
loopne
xchg
rcr
xchg
jmp
stos
(bad)
sub
outs
ja
mov
xchg
xchg
lahf
cmp
dec
clc
inc
cs
(bad)
arpl
es
and
outs
xchg
jle
mov
shl
call
push
add
mov
adc
add
dec
pop
or
cmp
fbld
pop
sbb
jno
mov
ins
movs
les
sbb
div
jae
pusha
xor
test
cmp
xchg
cdq
mov
sub
rcl
cs
jl
les
pop
pop
mov
popf
mov
pop
or
enter
push
inc
aad
adc
adc
jns
stos
adc
xchg
mov
jne
xor
cmps
xchg
aaa
mov
pop
jb
ss
ret
loopne
push
ret
xchg
inc
and
(bad)
scas
or
sbb
dec
xchg
mov
mov
or
fiadd
cs
sbb
test
push
dec
fist
push
cmp
cmp
pushf
test
stos
or
leave
ja
cli
add
jl
jmp
gs
or
jnp
mov
jg
mov
adc
dec
sahf
iret
xchg
cmp
jbe
mov
inc
xchg
aad
push
xchg
cwde
popa
or
mov
or
push
mov
(bad)
cmp
lods
dec
hlt
jne
inc
cmp
xchg
cld
cmp
sub
or
inc
pusha
mov
push
pop
retf
aas
lods
pop
sahf
in
cmp
jno
sti
cmp
dec
jo
lea
test
(bad)
push
and
cs
xchg
sahf
xor
cmp
fild
cwde
dec
pop
pop
ficomp
iret
repz
mov
mov
sbb
das
test
pop
xchg
xchg
xchg
sbb
in
pushf
mov
fs
scas
ds
xchg
stos
pop
les
popa
jg
mov
jbe
jns
test
dec
in
jmp
movs
rol
pop
out
xor
sub
dec
add
xchg
add
cdq
sub
pop
out
fist
cli
jne
outs
cmps
jno
mov
xchg
ins
jmp
retf
lock
mov
fdecstp
dec
pushf
sbb
cmp
fisttp
jg
aad
(bad)
outs
cmps
adc
jns
xor
dec
stos
push
and
mov
sbb
add
jbe
dec
sbb
xor
and
push
dec
movs
cmp
shr
test
jno
jbe
arpl
jno
mov
jbe
xchg
shl
xchg
sub
fs
(bad)
stos
shl
je
lea
dec
mov
inc
call
int
pop
add
pop
jae
ja
jns
nop
mov
popa
test
sbb
aaa
fidivr
jo
sbb
push
push
fistp
fadd
out
mov
jmp
test
jp
add
sbb
and
popf
or
enter
jp
rol
fld
dec
retf
and
nop
test
push
jmp
pop
cmp
js
dec
xchg
iret
outs
jmp
ja
fld
pop
ja
cmp
imul
inc
inc
mov
jno
and
and
int
popf
aaa
mov
inc
and
ins
sub
daa
in
hlt
mov
cli
inc
fwait
(bad)
(bad)
addr16
cmps
mov
add
stc
icebp
mov
cld
dec
arpl
mov
adc
push
in
add
dec
mov
pop
pop
mov
mov
xchg
push
sbb
or
inc
out
add
sbb
dec
pusha
movs
jg
lods
sbb
lahf
cmp
mov
mov
inc
shr
clc
xchg
shl
scas
mov
rcr
test
aad
mov
mov
bound
cld
les
cdq
mov
in
out
add
fdivrp
fbstp
bound
jle
dec
sub
test
xchg
push
push
aad
in
or
inc
jmp
and
pop
scas
xor
dec
mov
mov
xchg
stos
mov
fistp
push
push
mov
mov
jae
retf
mov
xor
data16
(bad)
stos
shl
inc
jno
mov
and
clc
mov
lods
inc
call
cmc
shl
dec
jg
pop
mov
ds
mov
sar
sub
in
jp
push
add
inc
outs
sbb
jl
and
(bad)
or
xchg
adc
into
call
xchg
pop
mov
imul
xor
add
xchg
out
popa
rcl
test
lea
aaa
nop
ins
bound
sti
lds
mov
clc
push
and
jmp
sbb
inc
aas
pop
cmps
les
inc
in
fidivr
rol
jg
fidivr
xchg
or
sahf
push
test
pop
pop
int3
iret
xchg
dec
mov
pop
arpl
sub
out
pop
rcl
(bad)
adc
pop
in
xchg
jb
mov
addr16
fnstcw
in
xor
push
mov
fistp
and
and
mov
adc
pop
xchg
mov
shr
cld
push
stos
fiadd
add
into
adc
sub
fwait
sub
pop
lods
dec
sbb
sbb
sbb
jno
mov
daa
mov
jl
lods
je
mov
push
cdq
(bad)
mov
sar
add
jp
xor
nop
mov
mov
call
cmps
sbb
adc
test
pop
loopne
inc
push
dec
stos
sub
cmp
lahf
retf
add
push
xchg
out
or
shl
push
and
out
sbb
jp
mov
jl
xchg
call
pop
push
jae
cmps
mov
sahf
mov
fs
scas
pop
in
fisttp
jecxz
in
movs
inc
push
xlat
mov
xchg
add
movs
mov
cmp
leave
stos
(bad)
dec
dec
popf
mov
nop
pop
out
add
retf
push
loopne
add
ins
and
xchg
mov
pop
sahf
cli
or
and
inc
cmp
je
test
mov
test
xor
or
cmp
fcom
repnz
fisub
mov
out
pop
or
fild
scas
in
adc
out
mov
sbb
ficomp
fwait
scas
inc
aad
stos
sub
dec
cmp
push
sar
es
jae
or
add
push
(bad)
xchg
inc
je
xor
xor
add
mov
jns
lea
aad
jb
mov
pop
retf
mov
pop
mov
jle
pop
arpl
pop
lock
inc
xchg
jmp
xchg
rol
mov
fs
xchg
test
adc
test
pop
(bad)
ds
sar
pop
jb
dec
or
daa
xchg
je
mov
cmc
outs
popf
clc
or
cmp
xor
jo
and
das
mov
fistp
bound
addr16
mov
jl
fistp
repnz
pop
inc
scas
pop
sti
mov
inc
xchg
leave
mov
in
pop
and
rol
mov
jge
xchg
test
adc
ret
sbb
pusha
dec
cdq
(bad)
(bad)
ds
(bad)
call
or
pop
xchg
je
mov
cmc
outs
int3
clc
or
cmp
xor
jo
add
dec
bound
pop
xchg
mov
pop
leave
fistp
repnz
pop
inc
test
sti
mov
inc
xchg
ret
xchg
inc
in
pop
and
rol
mov
jae
xchg
test
adc
jecxz
(bad)
pusha
dec
fmul
pop
(bad)
sub
fdivr
shl
aas
jb
dec
or
jl
inc
sub
lahf
mov
pushf
cmp
clc
or
cmp
xor
jo
and
das
mov
fild
test
sbb
mov
aaa
dec
jae
iret
xchg
and
xor
pop
inc
mov
inc
xchg
scas
mov
in
pop
daa
mov
test
retf
ins
xchg
test
outs
btr
add
mov
ds
sbb
cld
shl
add
dec
or
das
xchg
je
lds
fdivr
or
cmp
xor
jo
add
inc
bound
outs
xchg
mov
pop
leave
fistp
repnz
pop
inc
movs
push
sti
mov
inc
xchg
mov
inc
in
pop
daa
fcmovbe
test
retf
ins
(bad)
cli
mov
add
adc
rol
xchg
xchg
pop
aad
pop
ds
shl
and
dec
or
inc
xchg
je
ret
cmp
clc
or
cmp
xor
jo
and
das
mov
fisub
test
sbb
lea
aaa
sbb
cdq
add
ins
pop
inc
cmps
jle
mov
inc
xchg
std
mov
in
pop
daa
cli
rol
mov
inc
mov
test
adc
icebp
sbb
pusha
pop
xchg
aam
jecxz
aad
sbb
fdivr
shl
dec
jb
dec
or
xchg
jno
xchg
ins
lahf
clc
or
cmp
xor
jo
add
sbb
jg
xchg
aaa
jg
mov
pop
leave
fistp
repnz
pop
inc
mov
inc
xchg
test
add
ins
mov
outs
inc
xchg
xchg
test
sbb
repz
pop
xchg
mov
ds
ds
shl
sbb
packuswb
inc
sub
lahf
popf
mov
ins
into
clc
or
cmp
xor
jo
and
das
mov
fisttp
test
sbb
lea
aaa
or
add
ins
pop
jb
dec
sti
mov
inc
xchg
out
cmps
inc
in
pop
and
rol
mov
pop
out
xchg
add
repz
jl
mov
jb
pop
sub
cli
aam
pop
call
stos
sbb
and
mov
add
dec
jmp
jno
int
cmp
cmp
inc
push
mov
jnp
mov
inc
ror
xor
dec
jbe
cdq
pop
jmp
lock
test
xchg
inc
in
pop
and
xlat
test
retf
dec
mov
outs
jne
mov
push
cmp
loop
fdivr
dec
inc
fwait
mov
outs
fsubr
sub
cli
jmp
js
dec
mov
and
mov
mov
add
dec
jmp
jnp
out
sbb
and
test
xor
sbb
push
inc
(bad)
xchg
xor
dec
jbe
popf
pop
sti
mov
inc
xchg
in
mov
and
rol
stos
leave
adc
mov
xor
(bad)
sbb
mov
push
ss
cld
repnz
call
scas
sbb
es
mov
mov
sub
outs
ret
mov
xor
and
jo
and
daa
mov
stos
jg
lods
adc
repz
inc
call
repnz
pop
inc
mov
inc
xchg
jecxz
inc
in
inc
and
rol
(bad)
stos
sbb
mov
and
sar
sbb
lods
push
push
clc
cs
cld
(bad)
data16
xor
sbb
cs
lahf
mov
fild
int3
add
xor
xor
aas
mov
mov
lods
or
(bad)
sbb
and
fistp
repnz
pop
bound
inc
xchg
(bad)
xchg
fs
ja
in
rol
test
pop
jne
mov
push
aaa
fcomip
mov
lock
fwait
lods
push
pop
lock
call
mov
pusha
cs
lahf
mov
fild
cli
or
push
leave
xor
daa
mov
test
xor
lea
aaa
cmp
fistp
repnz
arpl
repz
xchg
fs
ja
cmc
rol
test
addr16
mov
repnz
lock
outs
fwait
lods
push
jecxz
clc
ds
(bad)
push
call
mov
push
or
mov
mov
jmp
jb
iret
xor
daa
mov
test
sbb
lea
aaa
aaa
pop
leave
fist
lock
test
repz
xchg
fs
jbe
cmc
rol
pop
ja
mov
repnz
repz
ins
cdq
cmps
inc
mul
ds
repnz
sbb
pop
outs
pop
mov
jns
mov
frstor
call
push
jb
iret
xor
das
mov
fsub
test
sbb
mov
aaa
and
fist
aam
jno
cmps
pop
repz
ins
sti
shl
and
stos
test
jecxz
mov
add
xor
fiadd
fs
dec
stos
push
pop
dec
into
int
jbe
cmp
sub
adc
into
ss
inc
sar
mov
inc
fs
xor
add
pusha
fs
or
outs
sbb
clc
test
push
push
stos
pop
fldenv
mov
and
loope
and
ins
mov
inc
inc
mov
(bad)
repnz
sub
ja
cmp
es
push
sahf
xor
pop
arpl
in
aaa
push
scas
xchg
lods
or
add
cli
sbb
pop
into
sub
sub
mov
xchg
pop
mov
pusha
mov
jae
mov
push
adc
push
test
aaa
retf
dec
bound
js
shl
std
rol
shr
stos
sbb
cmps
xchg
sbb
mov
sbb
mov
dec
pop
dec
jmp
adc
je
outs
or
test
xchg
dec
fild
icebp
or
clc
sbb
pop
mov
daa
mov
mov
test
xor
adc
lahf
xchg
lea
cmp
sar
cmp
add
push
ret
cdq
repnz
stos
mov
jb
out
in
xor
sbb
fild
mov
retf
xchg
outs
lea
dec
ds
fst
xor
xor
cmp
xchg
mov
push
int3
cli
or
retf
dec
popa
pop
xor
or
jbe
adc
imul
cmp
cdq
push
and
repz
adc
add
dec
icebp
mov
pushf
arpl
xchg
or
inc
hlt
add
jl
sti
(bad)
adc
xchg
xor
cmc
pushf
xchg
test
push
arpl
adc
jmp
cs
push
dec
mov
mov
mov
pop
fistp
repnz
inc
ror
jo
add
cmp
cmp
(bad)
sbb
push
dec
clc
stc
xchg
sbb
enter
pop
and
jb
mov
dec
add
dec
xor
into
inc
xchg
movs
pushf
shr
arpl
fwait
test
sar
jle
mov
ds
fdivr
push
into
pop
jp
jns
add
push
test
cs
mov
add
fidivr
dec
adc
adc
dec
or
fwait
and
inc
fnsave
ror
xchg
xchg
lahf
sbb
sub
out
aad
inc
mov
popa
cmp
xchg
pop
repz
mov
xchg
push
mov
pushf
ss
test
inc
jg
xchg
bound
lock
mov
call
xchg
mov
jecxz
dec
sub
adc
mov
sub
mov
sub
pop
ret
stc
sub
js
mov
adc
cmc
sbb
add
outs
dec
mov
lods
mov
cmp
jmp
or
ins
jbe
mov
(bad)
fbld
and
aad
mov
rcl
mov
int3
aam
mov
mov
pop
mov
xor
jl
xor
addr16
jge
inc
sub
xchg
stos
fs
cli
add
jno
fadd
push
aaa
add
add
jg
mov
clc
sbb
fs
xor
jmp
jmp
pop
test
loope
(bad)
cmp
mov
test
(bad)
gs
(bad)
mov
je
test
aam
(bad)
icebp
pop
gs
(bad)
dec
or
imul
add
push
push
push
fwait
push
push
imul
mov
int3
cli
add
jno
fadd
push
mov
movs
jnp
lods
emms
mov
pop
(bad)
mov
sti
inc
jmp
pop
pop
test
popf
xchg
hlt
pusha
jecxz
mov
sub
in
adc
imul
inc
outs
and
jle
sahf
ret
je
ja
or
add
out
aaa
jnp
dec
mov
dec
pop
or
cmps
mov
(bad)
aam
movs
xchg
push
popa
jbe
(bad)
adc
or
sahf
das
mov
adc
into
mov
jmp
fst
and
popa
in
jae
std
aam
jp
sbb
cmp
xchg
mov
sbb
mov
xchg
mov
lea
sub
ds
cld
in
js
add
xor
sub
mov
mov
cli
std
xor
retf
push
and
push
cmp
adc
pop
lods
push
es
add
and
out
sahf
aas
mov
data16
dec
lock
pop
cmps
les
and
ret
in
pop
xchg
cdq
test
cmp
test
nop
test
imul
sub
jno
cmp
cmc
push
ret
ds
mov
pop
jp
xor
jg
xchg
mov
pop
jecxz
sub
rcr
jl
xor
adc
pop
adc
fwait
pop
jle
sbb
lods
and
xchg
stos
pop
dec
adc
mov
aaa
mov
inc
stos
pop
lock
in
add
push
xor
mov
or
data16
mov
sbb
fcomi
shl
pop
xchg
mov
aad
in
push
inc
sub
xchg
or
stos
sub
sub
retf
(bad)
aam
mov
xor
xor
jl
add
jl
test
or
mov
pop
pop
test
jb
sbb
pop
(bad)
cmps
and
xchg
std
loope
das
out
inc
cmp
dec
dec
or
adc
fsubr
push
retf
add
repz
push
out
dec
and
mov
xor
scas
enter
push
fsub
fs
ret
jo
and
jle
stos
push
pop
scas
or
xchg
adc
out
sbb
jnp
test
fiadd
out
call
ret
icebp
js
cli
fsubr
sub
ins
inc
popf
mov
sbb
aam
mov
ins
inc
mov
cmp
(bad)
inc
into
adc
lods
xor
jp
push
jns
sbb
xchg
mov
add
mov
cmp
aaa
mov
mov
pop
nop
jge
cmps
xor
mov
push
dec
jmp
shl
mov
inc
or
fs
add
retf
(bad)
xchg
pop
jnp
mov
pop
inc
ret
rcr
gs
mov
jecxz
fdivr
sub
jmp
push
imul
and
mov
retf
shl
mov
jo
add
push
sbb
adc
add
lods
clts
sahf
scas
call
sahf
dec
sahf
shl
push
inc
sub
pushf
aam
xchg
mov
jno
aad
repnz
xchg
fs
movs
or
xchg
mov
cmp
xchg
jmp
fnstcw
ss
retf
fstp
js
xor
outs
or
mov
pop
ficomp
repnz
mov
gs
mov
push
fwait
das
mov
add
mov
push
mov
and
fild
fst
outs
scas
pop
fstp
retf
push
mov
popf
(bad)
in
fs
fcmovnu
mov
mov
mov
sbb
xor
fst
mov
sub
dec
fidivr
pop
ss
retf
dec
into
push
popa
jl
movs
cmp
mov
dec
test
ds
shr
popf
xchg
push
dec
push
sub
sbb
pusha
add
or
inc
jno
push
ss
cmp
nop
mov
sbb
adc
fcom
ret
ins
test
mov
popf
jcxz
jae
xchg
fistp
or
mov
sbb
push
sahf
fidiv
fst
cmp
cli
(bad)
retf
add
push
push
lea
jnp
mov
stos
jnp
loope
mov
inc
push
jno
(bad)
aas
push
jge
adc
sbb
xchg
cmp
mov
es
sti
mov
and
inc
mov
ds
(bad)
xchg
jo
cmps
add
call
dec
sbb
push
xchg
movs
jmp
inc
aad
mov
lods
inc
aad
scas
sub
ret
cmp
jp
adc
lea
pop
(bad)
ret
push
and
addr16
in
ds
data16
into
ss
inc
scas
adc
adc
push
cmp
dec
add
popa
xchg
(bad)
test
mov
push
cmps
pop
frstor
jmp
movs
inc
sbb
shl
mov
cmp
ret
add
out
(bad)
jle
jmp
aaa
call
cmp
hlt
shr
adc
dec
stos
sbb
add
es
cli
jo
call
cli
pop
push
or
mov
sub
pop
movs
jp
aad
push
mov
fs
jmp
outs
jns
frstor
in
xchg
jmp
push
int3
xchg
dec
add
ror
idiv
cmp
adc
aam
aam
call
fsubr
pop
jae
adc
je
pop
xchg
fstp
outs
jmp
addr16
(bad)
dec
pop
dec
add
xor
add
jnp
cmps
dec
and
lods
mov
(bad)
popf
and
sbb
xchg
dec
popf
xchg
out
mov
loope
aam
jb
in
rol
cdq
(bad)
cmc
das
lods
popa
add
stc
repnz
(bad)
push
jge
mov
sbb
add
jmp
dec
das
call
ins
in
(bad)
retf
lods
or
shr
mov
add
loop
sub
adc
jle
fwait
push
daa
xchg
add
lods
test
xor
inc
out
int
aaa
mov
bound
push
not
test
cmc
xchg
jle
int3
mov
idiv
fdiv
sbb
cld
xor
mov
repz
push
enter
daa
add
jmp
add
xor
xor
jbe
test
outs
iret
mov
enter
jg
jecxz
ja
jne
loop
mov
cwde
push
es
or
repz
(bad)
cmp
arpl
dec
out
fnstsw
jmp
movs
popa
daa
repz
mov
fwait
je
loopne
test
xor
es
sub
es
cld
in
push
rcr
aaa
inc
les
dec
addr16
add
mov
aad
ret
int
mov
xor
adc
push
adc
adc
inc
dec
xchg
jne
mov
jle
nop
xchg
sub
dec
jmp
rcl
nop
inc
jmp
data16
mov
retf
mov
pop
ja
mov
arpl
and
mov
cmp
icebp
fld
dec
fisubr
cs
leave
scas
pop
xchg
es
jp
lahf
imul
pushf
sub
jecxz
sbb
push
lds
sbb
js
inc
mov
mov
fs
mov
inc
hlt
into
xchg
adc
call
(bad)
fimul
xor
imul
in
je
push
icebp
mov
outs
addr16
xchg
mov
cmp
jl
sahf
lahf
jp
pop
fadd
adc
pop
nop
xor
sbb
push
sahf
inc
or
ret
sub
mov
test
xor
adc
sub
pop
push
mov
jle
scas
stos
xor
inc
xchg
repz
fwait
mov
imul
call
mov
add
(bad)
lea
in
sahf
mov
mov
mov
repz
pop
mov
das
sbb
fmul
push
call
jbe
cwde
sbb
icebp
mov
in
cld
fmul
mov
adc
push
sbb
sbb
(bad)
xor
arpl
popa
loopne
test
repnz
aam
shl
mov
xchg
jge
mov
test
fisub
mov
dec
inc
mov
(bad)
adc
aam
aam
cld
push
push
adc
add
dec
movs
ins
bound
xor
scas
rol
or
mov
ds
or
pop
xchg
fild
mov
or
repz
sti
das
add
fcmovnbe
popf
aaa
mov
sbb
and
scas
cld
pop
xor
and
mov
mov
test
cmp
in
retf
mov
lods
(bad)
jae
pop
(bad)
cmp
in
push
fistp
cmp
sub
jbe
cmp
pop
test
sbb
dec
ret
adc
sbb
or
inc
push
sahf
push
pop
mov
test
push
dec
jmp
fdiv
adc
aam
shr
les
pop
mul
mov
mov
(bad)
sbb
popf
bound
cmp
mov
aad
lea
cmp
cld
data16
ins
mov
xor
mov
sbb
add
mov
mov
jo
push
adc
xor
jo
es
push
adc
cmp
movs
(bad)
sbb
cs
(bad)
mov
inc
shl
ror
dec
mov
dec
xchg
scas
movs
inc
ret
dec
out
mov
(bad)
imul
leave
and
dec
xchg
cld
ror
test
ror
aaa
or
xchg
scas
and
sbb
sub
cmp
sbb
mov
shr
and
ja
cld
add
js
mov
pusha
xchg
cmp
xor
dec
adc
scas
mov
or
int3
test
iret
(bad)
data16
inc
movs
sub
mov
and
out
mov
ss
test
jecxz
mov
(bad)
popa
gs
mov
test
icebp
jno
xchg
fsubr
push
mov
pop
xor
mov
inc
loopne
jo
dec
test
adc
jl
mov
cmc
outs
call
push
push
jg
fist
pushf
cmp
jae
jg
movs
dec
sete
mov
adc
out
xor
outs
sbb
(bad)
mov
movs
push
in
push
and
loope
mov
mov
or
xchg
hlt
retf
cmc
mov
push
cmp
ds
(bad)
loop
jo
xor
je
push
lahf
mov
mov
jmp
dec
push
pop
xor
pop
sbb
adc
xor
add
test
sbb
adc
scas
mov
xchg
dec
sahf
jo
scas
lock
test
xor
pop
mov
add
push
cdq
popf
pushf
ror
jmp
add
cli
xchg
jmp
mov
sbb
xchg
xchg
in
jl
adc
js
sahf
adc
mov
inc
lods
mov
inc
clc
or
xchg
pop
fs
fidivr
ins
push
imul
or
mov
jo
(bad)
mov
popf
into
mov
(bad)
ins
jae
movs
dec
(bad)
cmps
sahf
jb
ret
xchg
jb
lahf
jae
(bad)
shr
movs
popf
out
pushf
add
dec
mov
xchg
(bad)
jno
mov
sub
push
idiv
jecxz
into
adc
dec
scas
dec
cmp
ja
imul
xlat
outs
jmp
pop
pop
retf
and
sub
sahf
ds
pop
aad
imul
fwait
aad
ss
jge
stc
xchg
cmp
add
test
(bad)
loopne
cmps
call
jnp
mov
mov
fcmovnb
inc
lea
mov
adc
add
in
(bad)
ds
scas
inc
(bad)
pop
or
push
movs
jnp
push
xchg
mov
into
dec
test
push
pop
and
sub
inc
add
fwait
das
test
movs
or
lea
jns
mov
sbb
sub
out
es
xchg
or
add
pushf
(bad)
in
jl
(bad)
cmp
loope
test
inc
xchg
cwde
xchg
(bad)
loopne
add
dec
push
das
rcl
inc
push
outs
call
jns
mov
rcr
les
inc
inc
add
adc
jo
add
adc
ja
mov
gs
add
pop
push
popa
rcr
test
dec
jecxz
sti
pop
(bad)
mov
xor
mov
add
add
les
jmp
hlt
pop
ins
xchg
movs
push
mov
nop
(bad)
repz
retf
sbb
dec
stos
sub
inc
push
cmc
lahf
cwde
cdq
pop
add
push
dec
mov
pop
mov
ss
xor
or
dec
arpl
mov
mov
cli
iret
out
(bad)
jmp
jmp
lds
fadd
test
mov
clc
loope
pop
call
test
cmp
mov
mov
sti
cmp
dec
(bad)
jmp
sbb
xchg
pop
and
out
mov
or
addr16
inc
push
inc
inc
leave
and
mov
mov
mov
outs
mov
push
dec
int
xchg
cmp
pusha
arpl
pop
mov
movs
pusha
daa
test
mov
xchg
mov
and
cld
cwde
out
mov
(bad)
cmp
push
cld
(bad)
sahf
pop
dec
js
xchg
cmp
mov
sub
mov
mov
jecxz
cmp
sbb
xor
inc
(bad)
jle
add
je
xlat
ss
aad
sbb
xor
mov
inc
int3
fcom
ins
jns
mov
dec
xchg
stos
dec
retf
adc
clc
test
(bad)
scas
ret
das
mov
xchg
and
neg
icebp
rcr
pop
clc
push
(bad)
adc
dec
rcl
jp
ins
mov
push
cmp
test
sub
out
jmp
je
mov
jl
inc
(bad)
imul
or
dec
pop
in
mov
pushf
stos
mov
leave
push
pop
jb
jp
call
in
test
sub
stc
lea
inc
fwait
neg
push
nop
enter
fucomi
mov
std
pop
pop
xchg
mov
or
sbb
xchg
shl
inc
add
xor
ins
stos
cmp
or
aas
out
xchg
enter
pop
jl
dec
cmc
cmp
add
push
lea
rol
add
xchg
adc
mov
xchg
or
js
mov
add
dec
push
mov
jl
in
mov
xlat
test
ret
retf
mov
push
pmulhuw
(bad)
clc
fisttp
push
xchg
pop
test
out
stos
imul
add
inc
popa
mov
pop
call
pop
mov
fucom
ds
addr16
inc
dec
fadd
or
popa
scas
push
lods
adc
jns
test
(bad)
push
jmp
and
stc
leave
cmps
cmp
push
pop
pushf
pop
popf
pop
jbe
xchg
fcmovnu
movs
xlat
inc
test
xchg
ror
sbb
mov
mov
nop
test
dec
cmps
xor
sti
jp
aaa
popa
pop
jge
cmp
sti
bound
jge
xchg
movs
mov
retf
imul
pop
jl
inc
cmps
sub
dec
adc
test
inc
mov
inc
stos
xlat
jmp
sbb
pop
xor
addr16
pop
js
movs
dec
shl
jmp
xchg
pop
cmp
fcomp
call
movs
mov
scas
cld
lock
sbb
jmp
leave
mov
jl
test
bound
stos
xchg
pushf
dec
sub
add
cmp
and
data16
call
push
jno
or
mov
not
dec
in
mov
xchg
mov
fst
adc
push
leave
mov
mov
call
mov
repnz
jecxz
jae
push
hlt
add
std
inc
stc
inc
add
inc
test
xchg
mov
shl
repz
fstp
jns
fisub
pop
inc
ss
cmp
adc
pop
movs
mov
pop
pop
cs
int3
std
xchg
sbb
jl
test
iret
(bad)
add
aam
mov
popf
mov
mov
xchg
add
iret
lds
mov
std
add
xlat
jne
add
adc
sub
jns
retf
inc
sub
jge
bnd
and
cmp
js
add
sbb
jnp
mov
dec
movs
(bad)
sti
adc
sbb
in
setno
fist
dec
mov
pusha
out
out
fsubr
dec
dec
aam
scas
or
idiv
mov
add
cmp
(bad)
push
jge
ficom
outs
in
add
test
iret
push
popa
fs
fiadd
dec
dec
std
xor
outs
out
pushf
pushf
sub
out
out
xor
std
jl
add
and
xor
xchg
pop
mov
lahf
jae
nop
dec
add
or
std
mov
mov
popa
aad
dec
inc
lds
mov
call
fist
fucomip
adc
dec
push
mov
mov
xchg
aad
cmp
mov
sbb
mov
std
jae
add
dec
mov
push
adc
add
mov
add
add
mov
jae
dec
jno
jg
xchg
sbb
mov
in
movs
pop
test
push
and
rcr
loope
(bad)
jecxz
sub
call
cwde
add
nop
fisubr
lods
stos
cld
xor
fbld
inc
repnz
pop
das
jmp
add
xor
mov
or
mov
dec
fstp
mov
rcl
pop
dec
fimul
add
xchg
es
in
sahf
lods
xchg
inc
not
pop
mov
nop
std
jl
out
mov
sub
sbb
fist
add
xchg
cmc
sbb
cdq
jp
mov
jmp
sub
daa
pop
sub
push
and
mov
fild
jle
mov
dec
cmp
pop
or
adc
les
sbb
sbb
xor
cmp
cmps
xor
rol
jp
and
dec
popf
scas
aam
xchg
enter
mov
lea
xchg
sbb
(bad)
dec
pusha
movs
test
test
out
pop
xchg
fsubr
ja
sub
cmp
xchg
in
dec
out
inc
or
scas
and
inc
mov
popa
icebp
mov
retf
rol
aad
dec
addr16
aaa
adc
adc
xchg
or
push
cdq
dec
dec
xchg
xchg
ror
xchg
cmc
add
inc
inc
push
inc
cmps
sub
jmp
(bad)
pop
mov
les
cmps
mov
pop
add
(bad)
out
test
cmps
cmp
gs
adc
xor
(bad)
or
adc
mov
cmps
fwait
xchg
inc
inc
mov
test
je
dec
in
and
sbb
mov
sbb
push
inc
mov
ins
xchg
and
repnz
or
adc
and
dec
rol
bound
sbb
jmp
(bad)
dec
add
xchg
movlps
cmp
fwait
push
jecxz
out
dec
xor
data16
push
aaa
pop
and
mov
xchg
test
test
int
inc
push
pop
mov
push
lods
cmp
jne
push
inc
fst
out
mov
outs
inc
daa
imul
xor
sbb
test
xor
mov
xchg
in
jns
mov
add
scas
mov
(bad)
scas
stc
retf
jge
mov
stc
dec
aas
push
int
retf
jo
xor
and
imul
mov
mov
jge
nop
add
pop
push
in
xor
and
enter
jne
mov
dec
mov
push
push
stos
or
neg
dec
dec
and
pop
loope
mov
dec
int
out
sub
jne
cwde
pushf
idiv
mov
jo
pushf
mov
adc
pushf
mov
mov
dec
retf
cmp
(bad)
icebp
int
std
inc
popa
ss
xchg
outs
and
xor
or
(bad)
sahf
mov
cwde
nop
sbb
mov
addr16
inc
gs
xor
jecxz
or
outs
jbe
push
pop
stos
sbb
and
add
add
fcom
add
pop
hlt
mov
jae
ret
pushf
cmps
push
add
lds
xchg
not
inc
mov
les
mov
pop
sbb
loope
cld
push
ficomp
js
inc
mov
pop
jge
push
pop
or
aaa
and
sub
imul
jne
mov
jle
lods
jae
mov
dec
mov
adc
std
mov
mov
pop
fst
mov
push
out
sti
arpl
mov
lock
jp
sbb
fiadd
cmps
call
ret
cmp
dec
leave
or
xlat
ja
inc
jne
fnsave
push
ja
xchg
lds
fmul
dec
sbb
adc
push
sub
cmc
add
sub
push
lahf
sbb
mov
cmp
(bad)
add
jbe
mov
jno
ret
test
nop
mov
mov
cli
inc
xchg
jns
lahf
test
cs
dec
mov
fcomp
cmp
fdiv
pusha
jp
adc
call
xor
out
imul
add
add
xor
imul
push
leave
xor
or
into
add
inc
push
dec
pushf
fld
sbb
pushf
push
xchg
shl
call
sbb
(bad)
stos
sbb
inc
mov
fsub
popf
popf
test
aas
std
mov
in
cwde
inc
lea
xor
adc
fcmovbe
and
push
popa
or
or
mov
inc
dec
icebp
cmp
loop
and
es
sub
adc
mov
push
mov
jb
ror
cmp
dec
les
inc
mov
pop
pushf
mov
push
mov
mov
mov
jmp
test
test
nop
xchg
cmp
ss
mov
nop
inc
pop
adc
jle
ja
pop
mov
les
stc
and
jmp
and
cmp
jb
adc
push
adc
and
test
pop
loop
xchg
pop
cwde
retf
adc
popa
mov
inc
mov
xchg
xchg
xchg
push
cs
jmp
in
(bad)
dec
pop
mov
retf
leave
lods
mov
xor
cwde
dec
in
mov
pop
and
loope
ja
push
xchg
cmp
inc
daa
dec
pushf
mov
into
ja
shl
int3
bound
pop
out
and
or
movs
pop
inc
mov
inc
div
inc
shl
sub
add
outs
pop
jp
xor
fcomp
and
add
add
mov
pop
lahf
rcl
xlat
lds
mov
jbe
xor
push
aas
dec
clc
(bad)
inc
dec
jp
shl
sbb
dec
push
dec
mov
xchg
cmp
sub
xor
adc
loop
nop
aaa
(bad)
jae
mov
mov
inc
mov
push
fdiv
jno
ins
fs
fild
mov
sti
dec
mov
mov
retf
pop
fyl2xp1
repz
js
cmps
mov
pop
lods
xchg
cmc
test
gs
mov
jno
ja
ds
cld
fist
inc
pusha
cmp
sbb
lea
jge
mov
cwde
cmp
(bad)
aas
xchg
clc
pop
pop
push
aaa
lds
cmp
pop
loop
mov
sahf
pop
xor
cmp
mov
xor
enter
fnsave
dec
jle
fsubr
xchg
cmp
repz
movs
rcl
sbb
add
repnz
lods
inc
retf
cmp
pop
jecxz
in
sar
sub
push
pop
push
mov
jns
fld
ins
jmp
jno
leave
pop
sbb
aas
mov
mov
arpl
dec
jb
(bad)
adc
push
sar
out
test
adc
jl
lods
(bad)
or
xchg
js
xlat
repnz
aam
clc
inc
test
(bad)
add
dec
mov
push
or
lds
pop
call
dec
imul
xor
inc
(bad)
cmp
imul
sbb
cmp
mov
aaa
test
jo
jge
pop
lea
mov
pop
xchg
mov
aad
or
jnp
fsubrp
pusha
inc
icebp
repnz
dec
fs
xchg
push
sub
xor
cld
fcom
or
pop
stos
pop
imul
sbb
mov
mov
(bad)
cli
or
jno
enter
or
fwait
pop
mov
mov
je
mov
pop
in
ficom
icebp
gs
mov
dec
xchg
(bad)
xchg
inc
out
pop
and
rcl
lea
jne
mov
sbb
stc
test
lods
jb
pop
shl
cs
retf
call
shl
pop
mov
movs
int
xor
cli
pop
mov
jge
imul
scas
or
lods
push
cmp
xor
push
dec
mov
rcr
hlt
jbe
inc
mov
dec
movs
mov
jg
test
xchg
imul
push
imul
(bad)
aam
lods
imul
in
test
out
push
cs
jmp
cmp
push
imul
or
stos
sahf
xchg
adc
retf
sbb
je
jge
int
and
and
add
jae
movs
xor
sbb
popa
call
std
inc
cmovl
inc
call
mov
mov
call
xchg
cmp
clc
pusha
js
stos
jae
push
lock
repnz
fistp
and
cmps
aaa
jne
imul
cs
mov
lods
mov
add
push
cmp
pop
sbb
xor
pop
dec
add
jnp
mov
inc
(bad)
cmps
mov
jmp
push
fdivr
in
nop
nop
push
sub
rol
std
cmp
pushf
lods
push
adc
leave
cmp
jo
mov
dec
repnz
clc
xor
out
pusha
fadd
gs
pop
movs
cmp
jo
push
jne
mov
retf
sar
repz
int
xor
add
mov
adc
push
inc
stos
dec
push
movs
mov
fs
fwait
adc
push
and
inc
xchg
out
push
aad
add
(bad)
xchg
cmp
outs
movs
or
movs
shr
fcomp
jl
mov
into
sub
sar
pop
cwde
push
pusha
xor
push
test
sub
mov
nop
cmp
cli
pop
ret
ror
loopne
inc
jne
into
xor
inc
ss
stos
pop
xor
sbb
pop
add
mov
shl
dec
cmp
not
ds
jae
mov
pop
xchg
(bad)
sti
inc
aad
push
and
loop
cmp
jns
(bad)
mov
ja
(bad)
pushf
js
fcomip
mov
push
pop
mov
xor
jbe
or
push
rcr
daa
ins
jle
inc
ds
test
gs
or
cmp
and
imul
or
mov
ja
rol
in
les
jmp
xchg
out
mov
test
jmp
sub
adc
pop
cmps
call
mul
xor
aam
jecxz
in
xor
pop
in
push
jle
cwde
push
sbb
add
int3
jmp
cwde
loopne
jne
aas
into
pop
pop
jbe
sub
sub
mov
jnp
mov
aam
mov
out
pop
inc
cdq
and
les
push
fidivr
mov
cmps
in
daa
add
mov
push
adc
cdq
pop
jge
xchg
push
lock
jmp
cld
out
pop
fild
inc
sbb
fdiv
ins
lods
outs
sub
popf
(bad)
pushf
mov
cmp
push
dec
inc
dec
cmps
xor
dec
add
mov
ins
dec
movs
dec
adc
cdq
lods
push
aam
cmp
push
mov
test
add
call
stos
inc
push
movs
mov
mov
fisub
pop
retf
adc
daa
iret
rcr
push
(bad)
xor
xor
mov
mov
scas
jnp
cli
add
fcom
ss
sub
push
mov
ror
add
imul
out
xchg
sti
pop
fistp
lods
inc
fstp
test
nop
mov
mov
inc
mov
lods
push
fs
retf
inc
lods
sahf
pop
lea
into
inc
pop
or
icebp
icebp
push
sahf
cmp
dec
xchg
sbb
mov
mov
jmp
mov
je
ja
mov
push
ss
fadd
jl
mov
mov
sbb
dec
retf
out
aaa
mov
add
cmps
stc
js
(bad)
jmp
xchg
popa
and
sar
sbb
aaa
mov
in
xchg
mov
dec
mov
cmp
or
stc
scas
pusha
ret
add
outs
mov
pop
pop
out
lea
xchg
call
mov
pop
popa
inc
adc
cmp
add
add
std
pop
je
or
scas
adc
mov
aam
mov
test
push
stos
jle
xchg
dec
call
cdq
add
aam
lods
xor
sahf
call
and
mov
fwait
aam
int3
jle
sub
(bad)
imul
pop
add
je
sub
jne
xchg
mov
outs
fdivr
cmp
xor
xor
and
test
xor
test
sti
fistp
not
dec
lods
jp
mov
dec
xchg
int
fs
call
repnz
sbb
jne
mov
adc
xchg
fiadd
mov
into
cmp
das
cli
cli
fadd
xor
sbb
push
mov
mov
mov
push
out
xchg
jecxz
mov
jbe
jno
ficom
sbb
das
mov
mov
sar
ja
mov
ins
out
retf
mov
jbe
mov
mov
xor
xchg
pusha
and
les
cmps
mov
jle
mov
js
xchg
jecxz
test
xor
fild
jle
push
pop
dec
out
(bad)
fistp
popa
jle
fnsave
pop
jle
ins
or
icebp
mov
(bad)
int
test
xor
inc
sbb
sbb
jg
cmps
cmp
mov
jnp
jmp
aaa
mov
arpl
pop
repz
ins
xchg
int3
mov
and
rol
stos
ret
outs
jg
fwait
mov
aaa
stc
test
lods
inc
loopne
clc
sub
(bad)
in
fist
cmp
or
cs
cmps
xchg
mov
jmp
jno
iret
xor
das
mov
fnstenv
movs
cmp
mov
pop
out
fist
xchg
push
stos
dec
sti
mov
inc
cdq
rcl
call
outs
sub
ja
mov
fiadd
fwait
lods
push
in
fidivr
sub
gs
sbb
dec
scas
sbb
sub
mov
mov
jmp
jns
int
or
sub
bound
ja
mov
dec
in
fist
les
push
stos
dec
sti
mov
inc
fwait
mov
fs
jno
std
xlat
icebp
ja
ins
sbb
jae
mov
adc
stc
out
repz
outs
fwait
mov
push
cli
clc
fst
and
dec
stos
sbb
jo
inc
pop
push
(bad)
mov
stos
xor
dec
mov
je
jno
retf
jo
adc
inc
je
jg
cmps
cmp
xchg
cmps
sbb
and
fist
bnd
push
test
loope
lock
xchg
(bad)
xchg
fs
jne
stc
rol
stos
ret
outs
jae
sahf
xchg
push
aaa
jmp
ins
push
pop
fisubr
or
into
xor
pop
ins
inc
xchg
jne
mov
mov
ret
mov
jbe
popa
cmp
xor
add
fwait
sub
stos
jg
cmps
cmp
movs
cli
adc
and
xlat
xchg
xor
fnstenv
ins
jb
stos
pop
out
(bad)
(bad)
xchg
inc
in
dec
sub
rol
cwde
mov
test
je
xchg
test
dec
xlat
loop
(bad)
inc
ins
cwde
mov
cmp
cli
jmp
jae
outs
stos
sbb
pop
sahf
inc
imul
clc
or
xor
xor
jo
add
das
mov
mov
sbb
into
mov
dec
adc
mov
or
out
fstp
dec
pop
shl
cmps
lock
xchg
loopne
inc
(bad)
mov
pop
xchg
mov
cli
movs
call
mov
fst
cdq
(bad)
ins
call
out
in
inc
call
stos
cmovle
imul
mov
repz
arpl
mov
pop
jmp
pushf
adc
lods
lods
mov
inc
aaa
jb
cmps
xchg
cmp
popa
pusha
xor
(bad)
lock
popf
loopne
push
fcmovnu
stos
add
addr16
mov
fidivr
in
repz
mov
cmps
aad
xor
mov
ss
or
jmp
or
sbb
xchg
jbe
pop
test
fistp
xchg
jmp
mov
push
push
jnp
fmul
push
xor
test
sbb
push
xor
(bad)
adc
xor
not
jecxz
lods
loop
fldcw
push
lods
pop
loopne
(bad)
cmps
std
stos
push
into
xchg
inc
add
cmc
or
jge
mov
arpl
out
std
xchg
test
fadd
pop
(bad)
push
sbb
test
clc
push
jae
jnp
or
test
mov
adc
daa
(bad)
mov
add
fsub
sbb
es
stos
add
or
aaa
sub
fwait
jmp
cmp
add
loop
retf
push
xchg
in
xor
mov
test
pop
test
rcr
call
ficomp
sub
inc
push
sbb
mov
jo
or
add
ret
int
mov
xor
sub
pop
fwait
add
push
fsub
xchg
inc
jnp
xchg
or
adc
xor
sti
fs
push
je
fcom
cmps
mov
retf
jmp
add
inc
mov
ret
xchg
ret
lods
jl
stc
adc
mov
push
pop
dec
mov
jnp
cmp
inc
es
mov
mov
fstp
and
adc
xor
or
cmc
das
popf
sub
sbb
nop
jg
mov
jne
xchg
mov
push
outs
int
mov
pushf
inc
inc
inc
nop
sub
mov
in
std
add
retf
daa
iret
adc
mov
sar
push
xchg
mov
mul
xchg
(bad)
je
dec
fst
sbb
xlat
mov
jg
xchg
sbb
test
or
inc
aam
retf
mov
pop
adc
adc
sbb
outs
adc
arpl
scas
mov
(bad)
call
sbb
ins
cli
lds
adc
jmp
lock
test
sbb
imul
mov
push
out
int
pop
push
int3
(bad)
retf
xor
outs
bound
loopne
cmp
mov
and
push
jmp
fs
fadd
imul
and
pop
xchg
push
(bad)
shl
cli
mov
int
arpl
outs
outs
js
arpl
test
xor
out
inc
jmp
jno
xchg
aam
jae
sbb
pop
mov
data16
lods
cmp
(bad)
ror
inc
cli
pop
stos
push
pop
cmp
xor
push
jge
sti
dec
or
(bad)
mov
call
add
xor
xor
jb
mov
test
adc
adc
mov
jno
enter
inc
test
pop
mov
dec
mov
mov
mov
leave
inc
xchg
cmps
test
add
outs
sbb
pop
fcmovu
nop
lods
ret
dec
pop
sub
cs
xchg
test
call
fadd
jg
inc
sbb
mov
int3
sbb
fbld
xchg
push
jg
inc
out
or
bound
cmp
das
mov
retf
mov
sbb
cld
pop
inc
or
cmps
xchg
aaa
sub
and
inc
xchg
inc
and
(bad)
movs
sub
jns
add
sub
test
and
ins
jl
mov
sbb
icebp
imul
jo
pop
mov
sbb
xor
mov
jmp
fs
pop
or
and
push
xor
ds
mov
or
xchg
add
push
push
test
bound
mov
nop
jnp
jge
mov
add
loope
lock
icebp
jno
sahf
fadd
push
in
adc
sub
or
outs
sbb
push
test
mov
pop
retf
fldenv
xchg
jmp
push
inc
adc
xor
aas
mov
add
fcom
sub
out
mov
into
(bad)
arpl
xchg
xchg
inc
loopne
ja
not
mov
sahf
cmps
ret
xor
add
rol
iret
mov
cdq
scas
sub
jo
ss
jmp
push
std
inc
imul
stos
pop
fs
push
pop
jno
mov
aam
icebp
(bad)
adc
cmp
push
lea
aas
shl
xchg
dec
cmp
mov
sti
iret
mov
neg
pop
mov
add
sbb
out
or
repz
outs
sub
scas
cmp
fist
mov
push
add
repnz
push
out
cmp
xor
jo
jnp
imul
fisubr
pop
xchg
inc
jo
or
sbb
inc
sub
cmc
sbb
pandn
mov
jne
mov
ds
fist
add
ins
hlt
or
lahf
div
and
in
sub
imul
fld
dec
mov
(bad)
mov
mov
mov
lock
cmp
ret
add
jo
inc
push
push
test
sub
ins
ret
(bad)
mov
jbe
loopne
push
jg
arpl
bound
jg
movs
cmp
mov
and
mov
pop
(bad)
xchg
sbb
add
cmp
and
cwde
aad
mov
xor
cmps
xchg
xor
mov
pop
pop
mov
iret
repnz
mov
cmps
je
sub
or
adc
shl
or
mov
pop
cmp
jb
pop
fwait
xchg
nop
lods
sub
sti
sbb
jmp
mov
jp
pop
sbb
cmp
jb
xchg
dec
xor
cmps
adc
rcl
(bad)
pop
andps
jae
test
test
mov
jmp
dec
out
or
dec
icebp
inc
sbb
hlt
(bad)
jmp
pop
push
test
mov
sbb
push
loope
sub
sub
xor
pop
jne
jmp
scas
pop
add
sub
call
sahf
inc
stos
ret
arpl
xor
les
xor
loope
jnp
pusha
cmp
xchg
mov
gs
loop
xlat
jmp
jne
mov
das
push
cmp
cld
aad
frstor
inc
jge
xchg
push
pop
outs
mul
ja
mov
fidiv
(bad)
cmp
or
inc
das
js
add
jae
sahf
push
adc
stos
call
test
retf
inc
or
xchg
repnz
arpl
cdq
inc
cs
xor
mov
add
adc
lock
nop
stos
xor
xor
jg
or
xor
bound
mov
jmp
jbe
push
sbb
xor
jecxz
shl
pop
arpl
ja
(bad)
mov
sti
mov
cmp
pop
bound
dec
mov
or
loope
jnp
jnp
adc
xor
test
scas
mov
jl
mov
fsubr
shl
lock
data16
es
call
or
leave
dec
cdq
jmp
test
and
add
fld
adc
aad
inc
xchg
sbb
test
push
test
and
cs
in
xchg
push
in
jbe
leave
aam
sub
xlat
sbb
cld
push
xor
repnz
fisub
mov
stos
and
dec
retf
add
pop
mov
pusha
je
xor
mov
pop
in
jmp
pop
inc
fcomp
or
cmps
adc
push
xor
mov
cmp
cli
movs
inc
(bad)
jmp
push
adc
bound
test
mov
xchg
dec
test
data16
shr
lods
out
ins
cdq
popf
push
repz
push
sbb
adc
jb
cs
js
call
jb
mov
lods
push
(bad)
shl
mov
jmp
adc
pop
test
fdivr
mov
add
mov
jl
in
movs
and
add
pop
jae
movs
arpl
cmps
lock
out
mov
or
pop
stos
stos
test
sub
mov
and
test
lea
inc
cs
jmp
inc
and
push
test
cmp
mov
neg
icebp
leave
add
xchg
outs
jo
add
sbb
or
pop
lods
das
shr
addr16
ret
mov
inc
in
test
and
cmps
xchg
cmp
inc
pusha
nop
and
(bad)
(bad)
addr16
jmp
jmp
mov
add
iret
repnz
sar
fidiv
sub
adc
mov
lock
jo
push
or
adc
retf
scas
dec
fwait
jmp
mov
inc
jbe
and
add
push
adc
out
or
lods
dec
xor
mov
xor
retf
mov
cwde
jns
push
cmps
jnp
mov
xchg
or
mov
mov
leave
jge
pop
add
xchg
ss
fisttp
mov
xor
sub
test
sub
sub
pop
ins
sub
test
xchg
or
retf
into
cmp
inc
sbb
xor
inc
xor
lods
mov
add
mov
inc
mov
es
clc
out
pop
mov
outs
movs
dec
jmp
cld
pusha
call
fwait
push
or
in
jnp
inc
add
xchg
mov
and
out
shl
mov
call
cld
stc
and
pop
add
jno
jo
pop
lea
(bad)
dec
fcmove
or
sbb
cld
sub
inc
push
sub
dec
push
xchg
jb
test
push
repz
fldcw
xchg
pop
inc
test
cmps
(bad)
pop
xchg
test
loop
add
hlt
mov
test
outs
cwde
mov
fist
or
cmp
cld
fcomi
push
lahf
ds
or
or
pushf
cs
dec
lahf
mov
in
jp
(bad)
sub
xor
push
inc
xor
loop
mov
dec
sbb
mov
out
mov
xor
jl
mov
cmp
jmp
pop
in
add
mov
std
cmp
sbb
test
outs
xchg
leave
mov
and
inc
adc
pop
fistp
push
sub
cli
clc
jb
pop
dec
jl
lods
cmp
xor
xchg
mov
call
jmp
add
xor
adc
aaa
mov
mov
dec
popf
mov
dec
in
iret
mov
mov
sbb
jle
mov
inc
mov
test
mov
leave
(bad)
stos
pop
loope
icebp
xchg
pop
sti
leave
cld
push
es
mov
mov
jae
push
lods
daa
aaa
inc
nop
xchg
retf
inc
dec
and
dec
pop
loopne
pop
push
xchg
xchg
mov
dec
push
ficomp
rcr
call
inc
cmp
pop
(bad)
sub
xor
inc
add
cmps
xchg
mov
and
xor
stos
mov
mov
arpl
ins
jno
mov
test
inc
ret
and
movs
scas
xor
jle
clc
mov
data16
mov
stc
out
aad
ins
cdq
sahf
jb
cs
dec
pop
cmp
pusha
add
push
mov
add
xchg
xchg
mov
leave
mov
xchg
ret
add
xor
xor
jnp
and
inc
fwait
adc
in
sahf
and
fsubr
pop
sti
pop
inc
push
adc
lock
mov
pushf
jge
xchg
ror
shr
sahf
test
cmc
nop
stos
xlat
jp
(bad)
aam
xchg
xor
inc
cs
lods
jo
inc
dec
sbb
scas
cmp
mov
pop
out
mov
shr
nop
jo
xchg
push
pusha
push
inc
mov
cmp
push
dec
xchg
inc
xor
mov
ins
lds
push
xchg
ins
xor
call
out
jno
retf
or
pop
mov
les
xor
cmp
ret
inc
repnz
sbb
xor
out
mul
dec
jo
dec
cmps
and
mov
adc
and
sbb
sar
push
ss
aas
push
sub
mov
jl
or
sbb
aad
push
xor
lahf
aam
pop
nop
repz
andps
xchg
cld
xchg
or
out
adc
jge
mov
fs
jmp
push
in
cwde
mov
enter
fwait
inc
icebp
dec
in
cmp
hlt
retf
sub
adc
es
xchg
xchg
movs
xor
cmp
fdiv
pop
inc
cmp
or
add
xchg
aas
sbb
aaa
push
jp
(bad)
xchg
and
jg
scas
and
les
and
jmp
ins
xchg
bound
mov
(bad)
(bad)
repz
(bad)
fldenv
jnp
pushf
outs
in
imul
cld
mov
loope
or
cmp
arpl
push
mov
fldenv
retf
jmp
fidiv
or
pop
test
mov
pop
repz
jecxz
push
mov
jne
inc
jp
sahf
push
stc
cmps
sbb
sahf
pop
aam
pop
sub
neg
sbb
adc
(bad)
dec
jp
movs
dec
hlt
jle
push
add
sar
js
or
jns
imul
inc
sub
popa
repz
lahf
xor
add
cmp
je
ins
ficom
mov
jb
xchg
mov
fnstenv
je
sbb
cmp
dec
mov
loope
jmp
stc
sub
jne
adc
cmp
cmps
sub
clc
aad
sbb
(bad)
cmp
test
sbb
sub
push
xchg
cmp
dec
lahf
mov
mov
and
push
jmp
mov
cmp
push
fwait
aas
lahf
or
inc
pop
mov
dec
stos
xchg
lea
inc
xor
lock
xchg
fcomp
sbb
jae
xchg
pop
cwde
mov
push
in
push
add
enter
jge
sti
mov
je
xchg
cld
push
cmp
lds
mov
inc
int
stos
ds
aad
retf
and
aas
dec
and
push
inc
or
pop
retf
pop
(bad)
inc
inc
cmp
or
push
jbe
in
xor
xor
push
or
movs
jne
and
cmps
in
into
repnz
outs
add
mov
stos
adc
xchg
pop
adc
mov
mov
(bad)
rep
jle
scas
mov
outs
cmp
jmp
ins
xchg
test
jl
push
adc
and
add
push
ins
push
mov
pop
push
in
retf
mov
push
or
cmp
out
push
pop
inc
xor
and
jbe
adc
or
ja
mov
ins
(bad)
shl
xor
call
pop
mov
loopne
mov
mov
mov
mov
jle
xchg
stos
aam
imul
rcr
loop
call
test
dec
add
mov
cmc
inc
(bad)
in
cmp
xchg
fs
pop
or
cmp
pop
push
pop
jmp
mov
sbb
adc
jle
cmps
xchg
ds
into
je
pusha
push
and
or
movs
inc
nop
xor
retf
aam
cmps
xchg
enter
jne
les
lods
stc
mov
popf
test
repnz
or
jmp
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
sbb
and
inc
or
adc
cmp
scas
pop
xor
shl
cli
mov
repnz
push
and
inc
mov
adc
mov
mov
mov
jp
out
mov
mov
shl
xchg
mov
int
fmul
pop
add
in
pop
push
inc
pushf
push
ins
push
and
call
pop
call
or
mov
add
rol
or
pop
cmp
jae
outs
adc
jno
mov
mov
and
xor
aad
fisubr
jl
push
cmps
loopne
xchg
scas
mov
xor
jp
lahf
faddp
cmp
outs
add
out
test
mov
inc
cs
(bad)
xor
sbb
lods
xor
lods
jae
pop
lods
mov
xlat
pop
retf
movs
xchg
dec
outs
ja
in
pop
or
pop
jmp
ror
mov
push
lods
stos
std
xor
sub
xchg
cmp
addr16
ss
pop
dec
loope
popa
and
js
xchg
(bad)
in
lods
push
mov
iret
repnz
lods
aad
jp
mov
fsub
test
in
jo
jp
sbb
and
xor
test
add
ja
jmp
mov
dec
popa
dec
inc
les
push
sub
ror
xchg
dec
xor
cld
push
xor
xchg
pop
mov
inc
repnz
push
cmps
pop
popf
mov
bound
mov
cmc
bswap
jge
(bad)
rcl
adc
jmp
adc
ret
aad
ins
sahf
fadd
ss
or
add
out
dec
pop
gs
or
das
test
jmp
into
mov
pop
ficom
lahf
call
pop
fs
fdiv
sbb
push
(bad)
jo
pop
xchg
pop
repz
ret
in
daa
mov
arpl
test
inc
hlt
mov
xchg
ins
call
mov
pushf
add
sbb
aad
es
xchg
popf
ins
jmp
sub
cld
not
xor
sub
push
adc
stc
aaa
push
jo
mov
pushf
inc
rol
(bad)
loope
dec
or
sbb
daa
xchg
pop
test
xchg
xor
xchg
test
sub
not
inc
jge
fmul
cmps
retf
pusha
loopne
xchg
jno
adc
in
jnp
mov
sbb
or
(bad)
jp
cmc
mov
out
and
push
inc
sub
(bad)
hlt
push
out
xor
cmp
jne
pusha
mov
add
pop
cld
ror
add
xor
cmp
push
mov
push
stos
jb
mov
ja
mov
fnstenv
jb
pusha
jne
nop
sub
movs
enter
mov
xor
arpl
mov
xchg
xor
jl
call
fdiv
pop
adc
sub
pop
jbe
dec
lods
pop
inc
jb
inc
sub
lahf
movs
call
jmp
mov
adc
push
push
or
mov
add
adc
dec
out
cmc
mov
xlat
sbb
pop
rcl
sar
scas
test
out
push
stc
mov
div
add
pop
mov
aad
push
mov
jnp
dec
out
xor
retf
sbb
shl
bound
loopne
cmp
xchg
push
jmp
dec
push
fcomp
jge
cmp
stos
adc
jae
lods
add
shl
test
adc
bound
pop
jmp
aad
push
in
(bad)
out
or
mov
mov
mov
out
mov
test
div
ins
nop
mov
or
icebp
test
cmp
xchg
push
ins
push
cmps
addr16
icebp
mov
mov
call
add
ret
inc
imul
sahf
or
fwait
push
and
test
pop
dec
lahf
repnz
ror
arpl
cld
mov
and
push
xchg
mov
jle
mov
aam
scas
sar
scas
je
jne
inc
cs
out
lods
push
loope
add
pusha
pop
clc
ja
jo
mov
rol
xchg
movq
ficom
das
mov
xchg
mov
pop
jmp
mov
frstor
pop
sbb
mov
or
popa
and
loope
jo
push
sub
gs
mov
xchg
push
xor
outs
adc
gs
and
inc
call
popf
sub
add
leave
dec
ds
arpl
jmp
mov
jl
pop
and
or
dec
xchg
push
xor
mov
sbb
jl
int
cmp
push
push
cmps
jl
mov
stos
sbb
cld
pop
cs
shl
jo
jge
mov
add
loope
xchg
aam
adc
push
int
sub
call
retf
cmp
fs
imul
inc
sub
mov
into
sar
mov
pop
fdiv
sbb
pop
sub
dec
fnstenv
stos
xor
aad
sub
fnstenv
and
cdq
cs
leave
jl
les
xor
cmps
xchg
jnp
je
mov
ret
imul
lock
out
dec
test
fimul
cmp
pop
push
or
cmp
mov
mov
inc
hlt
and
imul
xor
fild
dec
daa
xchg
push
outs
repz
jns
test
push
ficom
adc
add
mov
xor
jl
mov
xchg
nop
retf
dec
pop
push
sub
pop
fnsave
sub
pop
pusha
mov
(bad)
mov
sbb
add
xor
xor
xor
jb
jecxz
and
jae
fidiv
mov
ja
mov
leave
mov
sbb
dec
push
push
scas
sub
mov
pop
test
test
adc
in
xor
jge
mov
pop
jnp
sar
and
ins
add
fild
sbb
ret
pop
cmp
inc
sub
lahf
xchg
rcl
(bad)
xor
cmp
or
cmp
or
jle
adc
mov
mov
inc
xor
fstp
cwde
inc
sbb
dec
cmp
push
in
jge
lock
neg
dec
jnp
xchg
push
aaa
loopne
mov
mov
jmp
inc
jmp
inc
pop
inc
xchg
sbb
loopne
add
retf
scas
lahf
push
sub
push
jmp
pop
add
inc
sub
sbb
adc
dec
sbb
mov
xor
sar
inc
lahf
in
arpl
ins
add
mov
mov
sub
mov
stos
cli
mov
out
mov
mov
cdq
pop
nop
push
xchg
out
jmp
cmp
push
ins
push
mov
ja
cdq
mov
push
push
out
xchg
leave
xor
std
jg
add
leave
add
jb
add
arpl
or
add
push
js
out
or
ret
push
xlat
dec
bound
inc
shl
out
int
sbb
mov
or
cmps
add
mul
pop
and
xor
lock
and
pop
or
mov
cmp
mov
lods
data16
ds
add
jae
retf
ja
pop
lods
das
enter
outs
pushf
dec
add
mov
mov
inc
sar
fld
and
fs
mov
rol
std
sub
sbb
mov
push
mov
mov
or
ror
fbstp
sub
daa
pop
xor
in
lods
pop
xchg
pop
gs
cmp
adc
pushf
adc
pop
fucomp
jge
(bad)
jle
push
push
mov
pusha
mov
mov
xchg
adc
mov
jmp
in
add
and
fadd
lods
imul
test
mov
or
in
xor
cmps
mov
shr
adc
imul
adc
xor
gs
retf
retf
xor
jge
imul
jbe
ins
xchg
mov
in
jmp
jae
fs
jo
add
mov
mov
pop
mov
mov
sbb
xlat
stos
xchg
adc
jge
mov
xor
ret
xchg
dec
xchg
mov
(bad)
cmc
clc
xchg
mov
out
lea
add
test
mov
es
push
in
inc
rcr
pop
add
ror
jbe
popf
push
pop
pop
xchg
jno
pop
xchg
rcr
call
or
add
sub
je
dec
ins
or
sar
sub
sub
(bad)
jmp
or
jmp
ja
cmps
mov
shl
sbb
loope
pop
xchg
jmp
mov
add
jge
mov
fcmovb
nop
in
loope
push
push
xlat
icebp
shr
and
xor
js
pusha
and
(bad)
aam
cmp
arpl
xchg
jnp
pop
inc
stc
inc
sub
sub
pop
fwait
ss
adc
dec
jb
xchg
movs
add
push
outs
xchg
mov
dec
mov
data16
inc
movs
(bad)
mov
sub
cmps
xchg
or
(bad)
out
or
or
in
stos
stc
dec
inc
xchg
xchg
jne
das
repz
xor
cmp
mov
adc
test
adc
stos
cmp
jmp
cmps
rcr
inc
inc
cmc
aas
fs
sbb
xor
arpl
xchg
pop
sub
and
cmps
lods
cmp
xor
stos
mov
mov
dec
(bad)
adc
dec
adc
bnd
mov
push
rcl
std
pop
aam
mov
xchg
inc
dec
jmp
inc
std
retf
mov
test
mov
(bad)
dec
ds
retf
retf
pop
popa
jg
stos
sub
loopne
add
pushf
xchg
pop
cdq
rcl
lahf
mov
add
adc
xor
aaa
lods
and
inc
das
popa
clc
fild
cwde
jg
pop
sub
(bad)
xor
loope
inc
retf
push
les
fwait
idiv
in
mov
dec
jp
je
or
mov
add
popf
push
sbb
xchg
cmp
or
push
and
adc
in
adc
sub
sbb
mov
push
repz
sbb
push
std
out
(bad)
rcl
push
jnp
mov
jae
mov
inc
jmp
les
cmp
add
lds
scas
stos
jae
cmps
push
pop
dec
loop
retf
inc
sar
xor
cs
push
add
mov
fsubr
arpl
xchg
pop
imul
adc
je
sub
cmp
xchg
mov
outs
sahf
scas
lahf
cmp
mov
xor
mov
ss
test
jecxz
rol
div
dec
mov
(bad)
in
push
fsub
xchg
mov
pusha
or
fnstcw
xchg
test
repnz
sbb
xchg
pop
push
push
pop
mov
jae
ss
pushf
push
inc
leave
dec
fucomp
arpl
out
sbb
and
pop
fs
jae
out
adc
daa
aam
push
xchg
adc
mov
cwde
imul
xchg
xor
sbb
in
call
out
cmp
clc
test
xchg
out
fstp
arpl
rcl
xchg
out
hlt
inc
sbb
scas
cmp
adc
retf
retf
and
or
das
loopne
and
xchg
and
ror
or
fisttp
popa
pop
add
cmp
ins
cmps
add
xchg
inc
inc
out
(bad)
mov
aas
cmp
pushf
and
data16
jo
mov
xchg
pop
repnz
movs
mov
cdq
test
sub
lahf
sahf
cmp
(bad)
ror
mov
dec
call
int3
jmp
aaa
cmp
dec
pop
ins
mov
cwde
ret
push
and
addr16
sbb
out
inc
sbb
cmp
jg
movs
push
adc
or
ss
call
mov
push
popf
jnp
cmps
mov
mov
inc
in
xchg
inc
pop
xchg
movs
mov
aad
cmps
stc
shl
mov
nop
loope
pop
imul
not
iret
(bad)
sbb
and
inc
movs
inc
sbb
stos
mov
rcr
loope
sub
push
adc
or
icebp
adc
xor
pop
jno
outs
pop
mov
push
movs
mov
outs
call
ret
sbb
and
mov
mov
rol
repnz
inc
cmps
cli
(bad)
into
dec
lods
je
mov
nop
pusha
sbb
aad
lods
std
cmp
mov
jbe
sub
sub
cmp
sar
push
(bad)
ss
mov
fsubrp
xor
aad
push
mov
adc
fsin
sub
xor
loopne
cmps
add
sbb
and
aas
loopne
mov
xor
jmp
test
sbb
(bad)
sbb
repz
sbb
jmp
enter
xor
cmps
jne
daa
loopne
pop
push
call
add
add
jl
fadd
pusha
sub
icebp
and
xor
aas
sbb
(bad)
call
mov
retf
retf
adc
inc
sahf
dec
fadd
ja
cld
pop
and
movs
xchg
ins
in
jnp
mov
pop
lods
sahf
mov
and
es
xchg
popf
jb
js
dec
pop
sub
and
ds
push
pop
addr16
dec
ss
stos
mov
push
aas
call
mov
add
and
and
mov
test
mov
push
repz
adc
xor
out
shl
rol
jno
ja
cmps
retf
inc
popf
in
popf
adc
cmc
xchg
add
fdiv
mov
ret
stos
(bad)
dec
inc
jecxz
dec
xchg
js
push
cmp
(bad)
cmp
or
mov
pop
shrd
lods
sbb
leave
cmp
inc
add
add
cmc
push
popf
add
sbb
mov
jb
shl
fnstenv
add
inc
and
jno
loop
push
xlat
add
(bad)
mov
nop
jns
mov
jp
cmps
xor
xor
jp
mov
inc
pop
sub
mov
je
pop
dec
sub
adc
xchg
sub
xchg
call
fldpi
jnp
mov
jns
mov
xor
js
xchg
adc
mov
and
aad
cwde
pop
sbb
inc
cdq
xchg
repnz
mov
sbb
out
jecxz
and
mov
cmps
je
fwait
sub
sbb
les
mov
aad
sbb
jg
ins
xchg
sub
loopne
or
xor
(bad)
cli
cmp
add
pop
fs
bound
add
mov
arpl
add
test
add
sbb
mov
xchg
inc
retf
sub
jle
test
pop
data16
mov
xchg
fldenv
bound
fist
pop
cmp
add
jae
push
sbb
cmp
xchg
(bad)
pushf
push
daa
int3
sbb
clc
add
xor
inc
xor
test
mov
push
repz
dec
retf
leave
in
ror
outs
fsub
xchg
push
fcomp
test
lods
mov
mov
lea
cmp
retf
jmp
or
aad
rol
add
xor
jb
dec
mov
enter
fsub
xlat
sub
push
adc
cmp
jle
pop
jecxz
int3
or
inc
push
sahf
pushw
mov
inc
cwde
mov
jno
adc
push
push
sti
push
inc
and
push
mov
xchg
ins
iret
or
neg
add
or
arpl
jecxz
(bad)
std
jo
mov
out
sub
fst
stos
cmp
pop
or
jae
pop
dec
pop
stc
xor
les
ret
ret
ins
pop
and
aas
sbb
sub
and
dec
adc
xor
sahf
scas
loope
adc
xor
enter
(bad)
pop
(bad)
ins
sbb
cli
mov
xchg
push
(bad)
cdq
dec
es
not
mov
pop
in
(bad)
adc
fisubr
mov
xor
sbb
fdivr
push
add
xor
loopne
sub
cmc
(bad)
int3
mov
fincstp
jge
test
sub
inc
push
or
mov
stc
add
mov
add
add
out
mov
jne
mov
mov
mov
icebp
mov
sbb
mov
cmps
mov
jg
mov
(bad)
jmp
push
push
into
or
sub
sbb
push
push
pop
xchg
jb
push
out
lahf
(bad)
mov
(bad)
div
xchg
aam
jno
sub
and
xchg
pop
test
lods
jae
xchg
or
cmps
lea
aaa
pop
(bad)
xchg
adc
jge
pop
fwait
js
cmps
imul
cmps
dec
nop
xchg
inc
xor
ins
or
and
loope
cmps
jecxz
dec
outs
lods
movs
inc
jecxz
cld
es
sti
in
imul
jo
dec
scas
sub
or
nop
cdq
mov
sbb
(bad)
pop
outs
imul
xchg
inc
xor
adc
test
pop
xor
add
inc
push
cmps
pop
popf
mov
cwde
dec
retf
mov
xchg
push
jecxz
call
ja
mov
sti
test
(bad)
fcom
pop
(bad)
das
cs
cld
shl
inc
jb
dec
adc
pop
xchg
add
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
test
dec
xchg
(bad)
icebp
dec
jb
test
loop
rep
pushf
sar
cld
xchg
popa
cmp
ror
mov
mov
nop
mov
push
adc
leave
nop
clc
(bad)
fs
mov
es
sbb
rcr
pop
loope
push
sbb
es
mov
enter
push
cli
pop
mov
inc
mov
pop
stos
push
mov
nop
jg
movs
sbb
popf
mov
jl
fist
and
nop
xor
mov
mov
adc
scas
mov
outs
loop
add
retf
dec
mov
stc
xor
push
xor
sub
daa
jg
cwde
push
pop
push
xchg
xchg
sahf
cmp
(bad)
jnp
repnz
inc
jmp
jl
sub
sbb
(bad)
mov
push
cwde
xchg
adc
dec
fstp
xchg
sub
shr
adc
dec
fadd
mov
push
aad
jne
in
push
fcmovbe
xchg
push
lea
mov
inc
inc
scas
fisubr
mov
sar
pop
stos
cmp
sub
test
jmp
mov
jbe
mov
fwait
mov
ins
call
push
inc
std
sbb
jo
xor
sar
mov
movs
sub
movs
add
or
fidivr
loopne
pusha
daa
mov
stc
cmps
enter
out
enter
xchg
mov
xacquire
add
(bad)
arpl
jecxz
mov
push
lods
stos
push
sar
push
add
and
and
or
sub
adc
mov
out
add
aaa
lds
cs
xor
jecxz
mov
fwait
ins
inc
mov
jne
lods
pushf
aas
cmp
cmp
mov
xor
push
ins
mov
xor
cmp
(bad)
mov
xchg
mov
or
test
iret
xchg
nop
mov
es
jecxz
aam
(bad)
or
inc
fstp
ins
push
mov
or
mov
mov
sub
into
jg
pop
and
pop
jb
test
sahf
xor
pop
jno
or
sahf
xchg
mov
leave
in
mov
jmp
push
pushf
push
call
aad
jae
movs
pop
sub
movs
movs
add
mov
xchg
jbe
nop
enter
shl
(bad)
push
shl
out
xchg
out
pop
cli
xor
jo
xor
mov
jne
xchg
shl
movs
lock
push
jge
fsubr
xor
push
jmp
fwait
and
jae
mov
jns
xchg
retf
xlat
xchg
aaa
test
jb
jp
jbe
push
in
(bad)
jno
ret
xchg
xchg
jecxz
push
loopne
xchg
(bad)
scas
dec
push
xchg
(bad)
add
cmc
nop
loop
imul
call
xor
rol
and
or
adc
push
cwde
xor
or
cs
shl
add
xchg
jle
inc
inc
in
aas
js
cmp
sbb
popf
jno
mov
jo
mov
das
dec
and
lds
inc
ror
popa
mov
inc
test
mov
xor
fdivr
sub
inc
mov
shr
jecxz
mov
or
mov
push
dec
and
add
and
dec
pop
push
dec
xchg
pushw
ja
jne
mov
jmp
inc
and
add
add
sbb
movs
sub
clc
imul
cmp
(bad)
icebp
jnp
ins
push
pusha
mov
fisub
mov
fnsave
repz
jnp
mov
pop
inc
lods
mov
jmp
jecxz
cmp
in
(bad)
push
call
jmp
add
xor
dec
pop
push
mov
mov
idiv
xchg
jns
push
inc
fist
icebp
or
or
push
or
outs
and
in
adc
outs
jmp
out
test
je
dec
push
and
imul
(bad)
mov
stos
xchg
repz
addr16
mov
icebp
repnz
push
inc
popa
cdq
cdq
pusha
xchg
imul
cs
in
in
push
cld
sbb
ds
sbb
mov
push
jno
xchg
fwait
ret
or
mov
test
pop
mov
pop
mov
adc
mov
(bad)
push
jno
ins
and
push
lea
pop
push
aas
fwait
sar
test
xchg
jmp
sub
out
adc
leave
push
mov
mov
cli
loopne
jecxz
cmp
test
dec
es
xchg
cld
pop
sti
cmp
push
dec
shl
das
stos
addr16
dec
mov
aas
stos
push
iret
xor
pop
mov
outs
push
or
cmp
jae
mov
push
in
mov
das
or
xlat
xchg
aaa
test
jb
jle
inc
mov
mov
xchg
pop
loop
jbe
rol
mov
fwait
inc
movs
mov
inc
popa
mov
icebp
add
dec
retf
dec
aas
pop
mul
hlt
inc
fadd
inc
daa
dec
stos
sbb
mov
pusha
out
fst
push
test
addr16
in
data16
es
push
inc
xchg
adc
fs
inc
sbb
xor
and
out
fild
retf
jnp
jne
(bad)
fdivr
jmp
xchg
add
(bad)
sti
mov
mov
jg
xchg
call
fcomp
bound
scas
inc
xchg
ja
adc
ss
out
out
push
cwde
inc
inc
add
push
sti
push
cmp
mov
fidivr
cli
das
mov
ins
dec
pop
and
xor
xor
ins
addr16
addr16
imul
xor
xchg
aaa
mov
jno
mov
dec
xchg
repnz
jae
pushf
bound
cli
fmul
lea
jg
add
ins
mov
sbb
cmp
shl
arpl
aaa
pusha
push
push
mov
sub
scas
adc
stc
sbb
cmp
add
fwait
and
ficom
mov
pop
lods
lods
idiv
(bad)
jmp
lock
jle
mov
mov
pusha
mov
nop
inc
dec
int3
cld
out
adc
inc
test
inc
arpl
loope
xchg
shl
fs
mov
cmp
mov
jne
sbb
and
lods
jns
imul
iret
mov
sub
sbb
xlat
inc
jg
push
(bad)
xor
add
mov
pop
push
ficomp
mov
aad
or
cmp
leave
sbb
rcr
sbb
inc
xchg
add
mov
xchg
jg
mov
mov
call
into
dec
mov
mov
mov
cwde
cdq
push
lds
ss
fist
ss
pop
mov
dec
and
mov
sti
cli
sbb
out
jno
push
xor
in
push
scas
pop
into
inc
outs
mov
inc
movs
xchg
mov
pop
adc
into
pushf
and
inc
sub
enter
mov
icebp
(bad)
xchg
daa
neg
clc
cwde
cmc
sub
test
inc
out
fisubr
mov
lods
push
add
lock
stc
push
xchg
cmp
xchg
xor
mov
mov
fdivr
mov
call
xor
push
mov
sahf
jg
rcl
inc
mov
div
pop
cmp
hlt
mov
xchg
sar
pop
push
stos
pop
icebp
mov
pop
(bad)
jmp
inc
add
sti
test
in
or
mov
repnz
mov
cmps
adc
das
std
aad
push
jmp
jnp
std
ja
bound
sub
test
inc
dec
daa
mov
adc
dec
jno
adc
mov
adc
rol
rol
inc
ins
call
aad
pusha
loope
inc
push
mov
div
lea
scas
mov
cmp
pop
pop
mov
mov
movs
mov
fsubr
enter
sbb
loop
jmp
mov
js
mov
add
sbb
enter
jb
int
adc
sbb
fwait
jg
sub
fucomip
xchg
lods
clc
add
inc
push
bound
dec
test
test
sub
mov
cdq
scas
xlat
cmp
pop
pop
cwde
enter
shl
mov
loop
jge
mov
ss
cmp
aam
repz
ret
pop
inc
or
sbb
sti
jne
imul
test
(bad)
cmp
pop
test
or
mov
mov
fst
mov
lea
cmp
hlt
call
xor
xchg
in
jmp
jle
mov
mov
lds
test
add
add
ins
mov
in
sub
mov
stos
jle
xor
cmp
add
pushf
xchg
test
fbld
mov
xor
xor
inc
sbb
add
ins
sbb
or
test
fcmovne
cmps
inc
mov
pop
jmp
xchg
lock
mov
repnz
js
mov
dec
dec
lods
mov
pushf
mov
repz
(bad)
addr16
or
int
stos
daa
fstp
popa
jns
xchg
cmp
pop
not
ja
mov
nop
adc
jmp
fild
(bad)
sbb
adc
mov
iret
or
pop
dec
mov
ja
shl
test
sbb
sbb
mov
repz
inc
xchg
fist
sub
out
add
outs
mov
stos
out
mov
mov
(bad)
dec
ins
mov
lods
or
icebp
mov
push
dec
test
jl
cmps
dec
xor
lods
or
sbb
nop
add
aas
cli
dec
aaa
push
sub
or
add
push
sub
mov
and
xchg
call
inc
ficom
xchg
test
je
mov
repz
xchg
je
pop
mov
adc
mov
data16
mov
hlt
test
and
mov
dec
and
shr
push
dec
or
sbb
ret
push
fld
(bad)
pop
mov
pop
out
das
jae
sbb
imul
xor
stos
cmp
cmp
fbstp
sbb
pop
mov
mov
mov
xchg
adc
retf
adc
(bad)
scas
dec
inc
xchg
div
stos
mov
xchg
cs
push
or
mov
xor
inc
popf
inc
inc
pop
mov
hlt
ja
fnstcw
mov
add
adc
loop
enter
push
mov
sbb
adc
fwait
pop
mov
push
dec
cwde
cs
ror
jmp
dec
into
movs
or
sar
mov
jnp
sahf
pushf
lock
xor
(bad)
ret
xchg
mov
sub
sbb
in
iret
push
in
pop
push
dec
stos
pop
dec
push
mov
call
jmp
jb
cli
pop
imul
jcxz
shl
gs
xor
sub
movs
push
and
pop
(bad)
fld
loope
inc
bound
pop
xchg
les
sub
jmp
test
das
scas
push
push
mov
cld
mov
mov
dec
nop
jno
push
sub
or
ss
stos
sbb
pop
mov
add
sub
jp
sti
jne
jno
enter
push
adc
dec
jno
jg
cmps
cmp
mov
cmp
fcom
repnz
repz
(bad)
fcom
and
(bad)
test
stos
rcr
inc
ja
fiadd
nop
call
ret
inc
jecxz
into
sub
or
(bad)
shr
xor
push
pop
push
mov
pop
lahf
mov
stos
sub
cmps
outs
call
jbe
pop
xor
pop
or
adc
jp
test
aaa
mov
mov
sub
fist
icebp
adc
pop
stos
dec
div
xchg
sbb
stc
xlat
mov
cdq
pushf
sar
dec
je
movs
xor
in
cmc
mov
repz
dec
fwait
mov
ds
push
cld
xor
stos
sbb
das
loopne
cs
fwait
mov
int
sub
or
xor
and
inc
add
pop
retf
outs
adc
cmp
aad
add
and
cdq
stc
xchg
push
rcl
nop
cs
fnstenv
push
dec
push
fcmovnbe
lods
jnp
sbb
(bad)
dec
je
cmps
mov
aaa
xchg
aam
cld
out
jl
mov
pop
fisubr
ds
fild
xor
(bad)
jo
inc
adc
ret
push
fisttp
(bad)
xor
clc
je
or
cmp
jecxz
mov
test
xor
(bad)
xor
adc
into
mov
leave
pop
push
push
mov
pusha
xchg
shr
xchg
std
test
out
mov
rol
pop
xchg
call
retf
outs
fwait
(bad)
fs
retf
ds
into
xor
dec
mov
inc
sub
lahf
mov
jmp
mov
jg
jno
iret
pop
or
and
sahf
outs
xor
cmp
mov
dec
leave
fist
ins
jp
mov
dec
popf
mov
add
outs
sbb
mov
fcmovb
outs
pop
popf
lods
dec
loopne
rcl
ds
jmp
jne
dec
cmps
sbb
inc
mov
pusha
mov
sub
jg
int
mov
jg
pop
xor
and
and
mov
ja
test
pop
dec
cmps
dec
mov
inc
push
stos
ss
push
loop
jno
in
fild
mov
push
ret
xchg
leave
adc
jecxz
es
aam
out
cmps
sbb
pop
nop
xchg
rcl
xor
mov
pop
pop
test
add
or
outs
in
enter
push
addr16
leave
inc
ja
add
icebp
inc
sahf
add
outs
ficom
xrelease
fist
icebp
ins
jb
fnsave
repz
pop
mov
or
clc
cmps
xchg
in
or
pop
jecxz
repz
retf
icebp
loop
pop
icebp
lods
push
loopne
rcl
cmp
call
les
push
test
mov
mov
pop
fsubr
loop
mov
add
xor
push
xor
jle
stos
jno
mov
jnp
xchg
(bad)
sbb
and
mov
xor
fadd
ins
arpl
push
popf
cmps
repz
mov
loopne
lock
jb
xchg
ret
xchg
in
or
ja
mov
adc
lods
repz
outs
cwde
mov
sbb
dec
cli
call
pop
or
push
call
stos
sbb
test
(bad)
stc
or
xor
sub
mov
xchg
bswap
arpl
push
add
mov
dec
jecxz
mov
mov
jbe
scas
jge
and
xchg
les
sub
enter
sbb
stos
arpl
mov
clc
mov
sar
sbb
leave
add
repz
xor
pop
mov
mov
mov
jmp
jns
int
push
add
add
test
mov
push
popf
mov
jl
fist
adc
ja
sub
mov
test
sbb
aam
and
jnp
mov
xchg
mov
push
es
ret
xchg
test
sub
(bad)
xor
mov
push
into
cmp
sub
mov
jnp
test
and
mov
stc
pop
(bad)
int
xchg
fild
jbe
xor
xor
and
sub
dec
pusha
cmps
jbe
mov
fwait
mov
loope
mov
in
jg
(bad)
pop
(bad)
mov
and
das
mov
mul
pop
mov
fdivr
xchg
test
mov
dec
ficom
aaa
aad
int
int3
daa
dec
sub
and
dec
push
pop
mov
mov
jns
repnz
fstp
jg
xor
cmp
fld
mov
arpl
sub
fisttp
fld
jns
fldenv
fistp
loopne
ret
popf
jle
lock
test
fisubr
(bad)
xlat
mov
cdq
xchg
xchg
in
dec
xchg
xchg
ins
sti
pop
fimul
sbb
(bad)
rcl
add
ins
cmps
imul
pop
dec
icebp
popf
retf
mov
leave
lea
mov
pushw
jno
mov
xor
add
gs
mov
inc
mov
push
pop
jmp
fnsave
jnp
data16
pop
and
jae
and
lea
(bad)
xchg
cli
dec
pushf
jg
xchg
ficom
xchg
test
dec
and
clc
(bad)
retf
add
push
test
dec
and
stos
mov
sub
data16
jmp
cmps
xlat
pusha
je
adc
aaa
adc
cli
inc
push
scas
js
lods
cmp
test
out
add
fs
pop
jp
ins
popf
mov
in
std
call
fwait
inc
mov
pop
ja
xchg
xchg
aaa
cli
loop
cld
fisttp
fwait
mov
push
ds
clc
fbld
xor
ins
push
mov
lahf
mov
rcl
fild
(bad)
jg
clc
jbe
or
sbb
jecxz
mov
test
aaa
mov
pushf
jno
push
dec
jmp
xchg
inc
(bad)
sti
jb
pop
sbb
pop
div
mov
sub
xlat
bnd
ins
stos
test
aas
mov
test
push
sbb
ret
inc
jecxz
cmps
push
sbb
repnz
fbld
xchg
xor
pop
ins
pop
mov
lahf
mov
ret
push
fbld
(bad)
jg
clc
jbe
or
adc
cmc
das
mov
test
aaa
cmps
cs
call
lahf
fist
repnz
jbe
stos
push
aad
(bad)
cmp
xchg
jno
std
rol
stos
sar
dec
ja
mov
adc
fcmovb
dec
ins
mov
ds
push
fnsave
pop
ins
push
mov
push
cmp
cli
or
les
sbb
add
pop
arpl
push
xor
pop
adc
dec
jmp
ja
ins
je
mov
inc
xchg
loop
fs
imul
jecxz
or
jb
mov
push
xor
repz
outs
(bad)
lods
inc
loope
fidivr
cs
cld
fist
xor
dec
stos
sbb
sub
lahf
mov
mov
jmp
jno
int
sbb
or
sahf
jg
movs
cmp
mov
dec
jmp
aam
push
sub
loopne
xchg
(bad)
xchg
fs
jae
std
rol
(bad)
scas
sar
test
or
repnz
lods
fs
cmc
ds
in
xor
pop
stos
pop
ins
push
xchg
jge
mov
fild
jmp
ss
cmp
das
mov
movs
jg
movs
cmp
mov
jno
fist
aam
push
push
stos
jp
mov
inc
inc
xchg
je
xor
fild
cmps
out
mov
jg
mov
xor
icebp
out
mov
lods
inc
jecxz
fidivr
sub
imul
sbb
push
test
cs
lahf
mov
mov
fbld
jmp
cmp
xor
gs
fwait
sub
jg
movs
cmp
mov
jl
stc
xchg
aaa
xchg
sti
jb
bound
sbb
lock
xchg
mov
inc
mul
icebp
push
sti
ins
mov
dec
ja
and
fscale
pusha
jnp
aam
fisubr
adc
mov
retf
xor
ins
ins
jle
dec
sub
mov
mov
cli
jmp
xchg
clc
jb
je
iret
xor
push
pop
pop
lahf
xor
cmp
inc
pusha
test
sub
lea
pop
dec
ds
fst
test
push
mov
dec
dec
mov
loop
je
in
shl
(bad)
mov
sbb
fsubrp
js
add
repz
int3
dec
ss
call
stos
sbb
pop
mov
es
mov
mov
jmp
or
fnsave
adc
add
push
jb
jbe
fst
pop
movs
mov
pop
in
fnstsw
pushf
inc
je
fsubr
fidiv
test
out
push
add
ins
or
out
xchg
xor
out
jmp
int3
loopne
dec
xchg
mov
sub
daa
jmp
sbb
add
pop
sbb
mov
mov
pop
vrcpss
xor
daa
cmp
or
gs
fisub
sub
popf
mov
dec
rcr
add
and
inc
lahf
aam
retw
and
retf
nop
add
stos
ret
outs
push
xchg
cmps
mov
sbb
scas
dec
jecxz
(bad)
ds
in
push
ret
cmp
pop
outs
push
test
ds
mov
mov
loope
or
add
xor
fwait
das
mov
mov
ja
mov
sbb
dec
(bad)
xchg
aaa
mov
jbe
mov
dec
mov
and
mov
call
ret
pop
scas
dec
lea
fsubr
mov
sbb
cli
out
fist
xor
pop
outs
inc
dec
jns
popf
mov
outs
jmp
jno
int
sbb
and
add
imul
sub
(bad)
sbb
and
stc
and
loopne
repnz
jbe
mov
fs
les
or
aad
add
ins
(bad)
cmps
mov
das
lods
pop
outs
mov
cli
stc
sbb
test
int
hlt
ds
sbb
cld
fistp
adc
dec
lea
ins
push
mov
and
xchg
fwait
call
cli
or
sbb
xor
mov
pusha
pusha
stos
outs
inc
movs
ds
mov
sbb
mov
loop
jbe
stos
jo
movs
loopne
mov
mov
mov
loopne
mov
outs
ja
mov
add
stc
ret
hlt
dec
inc
pop
cmp
fist
xor
or
cs
popf
test
cmp
jmp
xor
and
fwait
pop
mov
mov
je
mov
out
fist
loop
sbb
stos
pop
lds
and
jnp
neg
xchg
das
repz
mov
outs
ja
mov
add
cld
stc
test
xchg
pop
fidivr
fist
jo
dec
or
jle
popf
test
cmp
jmp
xor
and
cwde
and
add
imul
xor
test
and
fist
loop
push
stos
pop
repz
in
xchg
shl
and
jecxz
xchg
lea
ja
mov
cmp
shl
call
dec
jecxz
fidivr
das
(bad)
(bad)
inc
call
pushf
xor
mov
dec
cmps
fst
aam
inc
mov
out
and
xor
xor
sub
cmps
inc
cmp
sbb
xchg
adc
pop
inc
mov
dec
xchg
aad
outs
out
xchg
jno
stc
rol
stos
ret
das
mov
mov
sbb
dec
jnp
cmps
dec
jecxz
call
(bad)
jp
xor
pop
imul
ds
mov
mov
loope
or
cld
jbe
jae
jecxz
aaa
jo
adc
inc
jb
jg
cmps
cmp
mov
dec
out
xchg
aaa
mov
jbe
popf
dec
repz
jb
(bad)
and
mov
call
sar
push
pop
mov
jmp
pusha
jle
lods
pop
loopne
fidivr
adc
push
ret
push
dec
mov
inc
jl
inc
or
mov
test
cmp
outs
leave
stc
or
cmp
xor
je
adc
imul
xor
sbb
and
fist
icebp
adc
push
stos
pop
aad
and
xchg
jae
(bad)
rcl
iret
xor
mov
imul
lods
mov
adc
fcom
xor
pop
outs
inc
mov
jp
popf
int
cmp
cli
add
sbb
and
xchg
and
add
jge
mov
popf
stos
test
(bad)
hlt
and
enter
jbe
mov
jl
les
or
ficom
adc
xchg
mov
cmp
sbb
test
int
hlt
and
jmp
push
dec
ficomp
jbe
mov
mov
out
retf
or
popa
xor
xor
pop
pop
add
imul
cmp
sbb
adc
fistp
idiv
inc
mov
dec
xchg
aam
ja
xchg
je
stc
rol
stos
ror
mov
scas
add
cli
repnz
dec
ja
mov
cmp
ds
retf
ret
cmp
pop
outs
movs
push
ds
mov
mov
loope
or
jae
cld
xor
mov
mov
mov
ja
xchg
test
cmp
dec
(bad)
aaa
mov
jbe
lea
mov
dec
mov
xchg
jno
std
mov
xchg
inc
inc
xchg
call
retf
loope
jle
scas
push
loopne
fidivr
cs
neg
push
call
cmps
cs
mov
lahf
mov
xchg
adc
ins
cld
stc
or
cmp
ss
je
adc
imul
xor
sbb
and
fild
hlt
pop
jb
stos
pop
aad
in
xchg
out
je
xchg
js
rol
xchg
add
outs
or
ja
mov
push
aaa
sti
cli
mov
(bad)
fwait
mov
push
fistp
ds
cmc
fst
xor
pop
ins
jl
inc
cs
sub
jmp
jno
iret
xor
and
add
arpl
jp
xchg
cs
popf
movs
mov
in
repnz
out
jo
ins
jbe
mov
push
cdq
les
or
aad
and
ins
xchg
popf
xchg
das
test
jne
mov
adc
lds
fwait
lods
pop
shl
and
fdivr
fist
sbb
dec
rcr
bound
fild
and
xor
aaa
pop
pop
pop
add
imul
cmp
sbb
pusha
(bad)
add
pop
inc
mov
dec
xchg
jmp
jno
icebp
rol
stos
les
sahf
outs
ja
mov
test
repz
pop
xchg
mov
jecxz
in
xor
ds
in
jmp
stos
pop
bound
push
ds
mov
mov
loope
or
inc
cld
sbb
jo
sub
inc
jb
jg
mov
test
cmp
dec
ror
aaa
mov
jbe
test
repz
bound
xchg
jno
std
fmul
mov
outs
inc
in
test
and
repnz
lods
inc
in
fidivr
aaa
xor
neg
push
retf
push
dec
test
sbb
mov
imul
std
or
cmp
xor
fs
jbe
imul
xor
sbb
dec
out
fbld
repnz
and
xchg
jge
rol
xchg
add
push
(bad)
lea
xchg
mov
(bad)
mov
inc
jecxz
fcom
cmp
cli
mov
push
call
mov
inc
cs
cmp
jmp
jno
les
sbb
and
add
dec
pusha
test
dec
xchg
ds
popf
scas
mov
aaa
and
icebp
and
clc
jp
ins
jbe
mov
pusha
mov
xchg
shl
std
shr
test
das
test
jg
mov
ds
mul
fwait
scas
pop
rcr
ds
jmp
push
dec
mov
jb
push
xchg
mov
mov
fild
retf
clc
jbe
push
xor
cmp
fwait
and
pop
fild
mov
pop
mov
(bad)
push
sbb
xchg
and
outs
pop
inc
mov
dec
xchg
stos
fwait
dec
out
xchg
jno
iret
rol
stos
shr
outs
ja
mov
stc
(bad)
(bad)
dec
fs
or
lock
ds
into
jmp
ret
sbb
pop
push
jns
mov
aad
loope
or
and
and
mov
pop
jb
jg
stos
cmp
add
cmps
xchg
aaa
mov
jbe
sub
clc
dec
mov
xor
clc
mov
call
sar
ja
sbb
jns
mov
ds
xlat
neg
push
fnstcw
jo
dec
shr
jns
mov
jns
mov
xchg
or
iret
outs
out
fisttp
mov
push
outs
pop
cmp
xor
add
adc
arpl
popf
cmp
aam
or
push
inc
ret
ds
push
jo
inc
lds
fwait
dec
out
xchg
jle
std
rol
stos
mov
sahf
imul
std
repnz
xchg
pop
into
cmp
xor
neg
pop
xchg
xor
das
inc
jl
jnp
dec
cdq
test
jnp
cli
or
xor
stos
and
or
jl
xchg
adc
xchg
lahf
sub
aam
cmp
pcmpgtb
pop
xchg
shl
jmp
push
xchg
mov
fs
leave
scas
ss
ret
test
mov
into
pop
lds
sbb
neg
pop
fild
jae
dec
call
ins
fwait
(bad)
mov
inc
jmp
or
mov
sbb
imul
xor
(bad)
and
pop
in
lods
popf
aaa
mov
pop
mov
push
cdq
les
clc
shr
lods
aad
nop
pop
test
test
pop
clc
xor
push
jmp
inc
jg
stos
xor
xchg
dec
xchg
mov
mov
fmul
jge
inc
ins
pop
add
and
dec
add
or
dec
sbb
mov
cmp
fistp
cmp
fwait
pop
ror
inc
in
jno
in
loopne
aaa
call
ret
pop
test
repnz
(bad)
xchg
lods
inc
aad
jmp
cs
cld
fist
pop
inc
jg
stos
xor
and
xchg
mov
xchg
cmp
retf
clc
dec
jg
xor
cmp
add
add
pop
jb
jp
xchg
cmp
xchg
mov
aaa
push
dec
out
fist
repnz
pop
mov
dec
xchg
les
or
mov
sti
lahf
mov
test
repnz
(bad)
mov
out
cs
hlt
fist
bound
dec
mov
jae
push
lahf
xchg
push
loope
add
jae
fbld
sbb
fwait
das
xchg
or
ins
aas
cmps
inc
jne
mov
sbb
and
fbld
pop
jb
fcomp
movs
loopne
test
xchg
fs
jnp
mul
mov
cmps
cwde
shr
stos
sbb
mov
bound
xchg
outs
xchg
scas
jo
dec
fist
cs
cld
mov
sar
jo
jge
sbb
ds
mov
mov
loope
push
pushf
loopne
jo
pop
fbld
sbb
adc
arpl
inc
push
xchg
cmp
mov
sub
jmp
ins
jae
stos
jno
movs
cli
cmp
xchg
push
sub
rcl
scas
xchg
rcl
addr16
xchg
lds
mov
(bad)
out
mov
xor
leave
inc
jmp
test
outs
out
mov
mov
fmulp
adc
xor
daa
sub
sbb
and
or
imul
sbb
pushf
add
push
inc
(bad)
test
mov
jle
stos
pop
test
ins
mov
nop
jb
in
stos
test
retf
push
mov
rol
cmp
inc
je
call
cld
stc
bound
lods
pop
les
sbb
callw
add
cmp
fwait
push
sub
xchg
mov
fild
test
repz
pop
and
inc
pop
inc
pop
add
outs
push
test
and
mov
rcl
(bad)
jge
push
scas
dec
stc
mov
movs
rcl
and
repz
stos
aad
mov
out
pop
xor
(bad)
xchg
retf
dec
fwait
mov
cmp
neg
pop
in
jo
dec
or
jp
adc
jmp
jbe
inc
cmp
inc
pop
inc
pop
add
outs
dec
test
shl
inc
xchg
mov
sbb
xor
aam
aaa
mov
jbe
popf
jle
cmp
call
and
loopne
sub
dec
xchg
test
arpl
cli
fst
(bad)
fwait
dec
not
or
stc
shr
push
lds
xor
push
lea
imul
retf
or
jmp
sbb
and
or
pop
mov
jne
cmps
(bad)
sbb
push
pop
(bad)
and
jmp
clc
sbb
mov
dec
mov
nop
or
iret
loopne
sub
inc
xchg
(bad)
sbb
mov
sbb
(bad)
repnz
(bad)
sub
cs
in
push
out
jb
dec
mov
jl
ins
add
mov
fdivr
cli
sbb
jae
fidiv
das
jo
adc
pusha
pusha
mov
jns
mov
cmp
fbstp
sbb
xchg
mov
xchg
push
in
jno
aad
mov
outs
scas
mov
lahf
mov
push
cmp
lds
(bad)
scas
jne
dec
fcomp
sub
cmc
cld
call
or
pop
sbb
push
and
test
lods
mov
jmp
push
aaa
fnstsw
gs
adc
fld
mov
js
xchg
(bad)
xor
or
fild
clc
dec
push
ficomp
movs
loopne
loop
xchg
arpl
mov
add
cmps
aad
mov
cmps
gs
cmc
loopne
cli
lds
fwait
scas
je
dec
fst
ds
cld
jmp
and
sub
test
jne
mov
mov
jmp
jb
int
xor
push
push
cdq
sbb
test
xor
in
xor
jb
rol
loop
push
jl
push
repz
pusha
xchg
mov
inc
out
jl
not
mov
xchg
ins
xchg
pop
inc
xchg
mov
and
shl
mov
repz
jl
scas
dec
jecxz
repnz
(bad)
push
in
sub
xor
mov
jp
mov
retf
std
ins
ret
call
fs
mov
push
jnp
sbb
adc
jp
xchg
ds
popf
mov
(bad)
popf
daa
add
sar
push
fnsave
mov
dec
mov
test
mov
add
shl
xor
js
popf
xchg
shr
stos
dec
fs
mov
mov
in
fwait
dec
neg
pop
cmp
stc
fcomi
push
out
pop
sbb
adc
mov
jle
mov
adc
fistp
dec
mov
inc
jo
xor
sbb
jne
js
and
jl
pushf
cmp
fwait
xor
das
inc
leave
(bad)
stc
sbb
stos
pop
test
xor
(bad)
(bad)
cmp
jle
mov
inc
sbb
jno
fst
push
fnstenv
repz
jmp
ins
push
mov
push
lahf
popf
pushf
pushf
cmp
shr
cli
add
clc
jbe
je
jmp
fwait
sub
mov
pop
popf
or
rcl
hlt
pusha
add
mov
inc
mov
movs
dec
and
jecxz
or
ja
mov
push
aaa
stc
loope
sar
inc
pusha
mov
cmp
ds
fild
xor
pop
inc
jo
inc
cmp
mov
mov
fdivrp
xor
add
xor
pop
jae
xchg
push
mov
mov
cmps
cmp
mov
dec
in
out
xchg
mov
jbe
popf
pop
repz
(bad)
loop
cmc
xchg
jb
retf
xlat
test
test
stos
lds
ja
xchg
mov
out
(bad)
aad
push
push
ss
fsub
cmp
pop
inc
push
mov
imul
lock
xor
daa
xor
xor
aas
mov
sahf
jg
movs
sub
mov
loopne
xchg
xor
(bad)
push
repnz
gs
sub
xchg
les
add
rol
(bad)
mov
ja
mov
push
xor
ins
xchg
mov
out
push
ds
inc
out
xor
dec
mov
ins
push
mov
jp
mov
mov
lahf
cli
or
int
adc
sbb
pop
fistp
fdivr
mov
(bad)
sbb
and
(bad)
xchg
xor
mov
ins
arpl
pop
repz
push
xchg
xchg
jno
call
push
sbb
test
and
leave
mov
repz
dec
mov
sbb
ds
retf
in
inc
jo
dec
xchg
pop
fs
inc
cmp
pushf
cmp
fsubr
mov
jbe
pusha
cmp
pop
sbb
sbb
test
adc
mov
ins
out
retf
xchg
sbb
into
jb
arpl
lea
mov
dec
movs
les
and
shl
lea
ja
mov
push
xor
test
test
dec
sub
cli
in
jbe
cmp
dec
mov
jno
mov
mov
call
fs
xor
add
or
ins
pusha
stos
pop
xor
sub
fstp
fisubr
pop
mov
jl
les
xor
fist
test
ins
ja
mov
repnz
fadd
jbe
das
cs
(bad)
fist
xor
pop
push
dec
lahf
mov
stos
cmp
cli
sbb
dec
int
sbb
adc
das
test
stc
imul
xor
sub
fstp
test
mov
jl
les
call
lea
ins
xchg
ins
ja
xchg
test
and
jmp
mov
ds
ds
out
retf
jp
xor
jle
pop
push
mov
jno
mov
mov
jmp
jbe
popa
xor
xor
adc
push
mov
inc
call
(bad)
fist
sti
ins
je
mov
dec
add
jnp
std
rcl
test
outs
jae
sahf
not
xor
fild
mov
sbb
ds
clc
fild
add
dec
mov
inc
sub
lahf
mov
out
pop
jmp
jns
int
sbb
or
fwait
sub
push
test
aaa
mov
(bad)
adc
sbb
fbld
bnd
stos
pop
repz
lock
xchg
repnz
ins
in
jno
std
loope
add
dec
mov
fistp
ja
mov
outs
aaa
stc
lock
(bad)
dec
push
fwait
movs
inc
in
fidivr
ds
sti
and
jp
pop
dec
push
movs
inc
or
mov
mov
stc
fistp
xchg
jbe
jno
int
sub
pop
mov
imul
xor
cdq
push
aaa
and
stos
xchg
aaa
mov
jp
stos
pop
jecxz
(bad)
pop
popf
les
cmp
rol
pushf
sar
dec
ja
mov
(bad)
stos
(bad)
dec
push
lods
inc
out
pop
sar
sub
cli
cld
xlat
push
in
jne
dec
stos
adc
mov
jns
(bad)
mov
jg
(bad)
sbb
jb
int
push
push
add
add
cmp
sbb
and
xchg
daa
mov
bound
jmp
(bad)
dec
xchg
les
cs
ror
mov
dec
xchg
mov
icebp
test
sbb
dec
call
ds
fcom
aaa
pushw
inc
stos
xor
mov
cs
sahf
mov
outs
jmp
jno
push
aas
jb
adc
addr16
sub
adc
mov
arpl
fist
loop
push
push
mov
inc
xor
push
and
mov
mov
xchg
xchg
xchg
and
add
lods
push
cs
in
jo
dec
test
ins
pop
mov
jns
mov
out
cli
or
daa
int
cmp
sbb
inc
arpl
jo
nop
(bad)
adc
adc
jge
push
mov
inc
loopne
xchg
imul
rol
xchg
push
xchg
mov
cmp
stc
lock
fwait
lods
push
neg
cmp
fild
jo
inc
rcr
outs
push
fwait
push
mov
outs
jmp
popa
xor
push
sub
push
mov
adc
jge
movs
sub
mov
mov
mov
jb
stos
pop
loopne
call
les
push
mov
xchg
adc
ins
add
ja
mov
fadd
fwait
mov
cmp
ds
out
ret
fidiv
jo
pop
stos
pop
outs
pop
mov
pop
call
addr16
jb
add
int
push
push
mov
stos
js
mov
(bad)
sbb
sbb
clc
ja
dec
jbe
popf
pop
stc
mov
inc
movs
les
and
loope
or
popa
xchg
mov
add
faddp
dec
outs
mov
inc
jecxz
call
cld
fild
jae
inc
cmps
pop
outs
pop
test
jns
(bad)
mov
sbb
cli
or
clc
jbe
add
int
xor
sbb
dec
pusha
test
inc
movs
cmp
mov
out
fild
repnz
jbe
lea
lock
xchg
in
mov
out
jno
out
ret
stos
and
ins
test
mov
ja
mov
adc
retf
(bad)
bound
push
xchg
pop
fidivr
dec
into
ss
pop
stos
sbb
mov
mov
mov
call
dec
inc
jns
(bad)
xor
das
mov
mov
jg
mov
dec
neg
call
jbe
movs
sub
call
xchg
jb
(bad)
fild
stos
lds
scas
push
ja
mov
add
pop
(bad)
cmp
ds
jmp
jo
pop
stos
sbb
mov
mov
mov
call
inc
fs
ficom
aas
jo
adc
imul
adc
mov
pop
call
div
push
pop
lea
mov
dec
sbb
push
call
xlat
xchg
push
fld
xchg
pusha
xchg
mov
adc
stc
loope
jmp
inc
ins
mov
jmp
push
out
pop
or
data16
sbb
fwait
fs
dec
xchg
mov
retf
sub
stc
jg
cli
or
xor
xor
das
mov
stos
pop
xor
sub
fst
add
stos
pop
mov
xchg
data16
xchg
popa
xor
rol
lods
sar
cmp
fndisi(8087
cdq
test
jecxz
(bad)
ds
cld
fistp
ss
lods
sbb
pop
inc
jle
mov
mov
aas
fild
dec
fwait
clc
outs
inc
jne
enter
and
lahf
cmp
aas
fild
mov
push
popf
mov
arpl
aam
and
inc
push
popf
pop
mov
xchg
arpl
mov
call
test
jecxz
movs
(bad)
scas
les
test
push
xchg
test
push
xor
repnz
or
fidivr
sub
hlt
fnstcw
sbb
mov
inc
add
mov
mov
out
or
xor
xor
sub
test
xor
(bad)
sbb
mov
mov
jb
pop
jbe
mov
inc
popf
les
and
icebp
mov
ins
stos
test
data16
xchg
sub
push
ins
fwait
cmps
inc
jecxz
into
xor
ds
mov
jbe
adc
dec
mov
ins
push
mov
mov
mov
call
outs
adc
into
xor
jo
adc
imul
xor
mov
and
aaa
mov
jb
stos
pop
loopne
leave
push
pushf
les
push
std
xrelease
loopne
movs
mov
dec
jae
mov
(bad)
xchg
(bad)
dec
imul
cli
cld
call
xor
dec
lods
cmp
popf
bound
pushf
cmp
stc
or
sub
xor
add
adc
jle
mov
ja
mov
dec
out
fcom
in
pop
push
mov
dec
xchg
les
and
jecxz
or
pop
mov
adc
(bad)
dec
push
lods
inc
jmp
(bad)
cmp
ds
cld
fdiv
xor
dec
test
ins
pop
mov
lahf
(bad)
mov
imul
or
xor
xor
jb
adc
js
mov
inc
xchg
mov
dec
(bad)
xchg
cmp
jbe
stos
outs
repz
push
xchg
les
and
rol
stos
shl
ins
jae
mov
push
adc
jmp
lods
dec
jecxz
fst
cs
cli
fist
cmp
dec
rcr
ins
pop
mov
mov
mov
cli
call
mov
jbe
jb
enter
pop
cmp
inc
nop
cmp
test
pop
in
xchg
aaa
stos
sti
jo
gs
stos
push
jecxz
lock
mov
xchg
jno
rcl
lods
add
stos
out
fldcw
xchg
mov
or
(bad)
inc
ins
fwait
mov
jecxz
into
ss
neg
arpl
aaa
jo
outs
mov
inc
cs
lahf
mov
stos
ss
cli
and
xor
xor
jo
add
imul
xor
cmp
fist
loop
push
lea
mov
dec
loopne
and
(bad)
mov
test
shr
arpl
mov
push
aaa
stc
inc
fwait
mov
ss
(bad)
add
pop
cwde
pop
ins
pop
movs
inc
cs
mov
mov
out
or
xor
xor
sub
mov
mov
test
out
frstor
repnz
jbe
stos
pop
repz
dec
xchg
rcl
std
shl
fwait
lods
in
test
ja
call
(bad)
dec
pop
fwait
lods
inc
out
fidivr
sub
push
call
stos
sbb
push
mov
jns
mov
in
out
cli
add
xor
sbb
das
mov
cmp
mov
dec
leave
stc
xchg
aaa
mov
sbb
stos
push
lds
cmp
test
jecxz
or
sbb
aaa
stc
repnz
(bad)
dec
pop
fwait
mov
ss
ds
(bad)
fst
pop
push
cmp
adc
mov
pop
lahf
mov
mov
call
jbe
inc
xor
add
and
jl
cmps
sbb
fwait
mov
dec
in
jmp
ja
gs
push
lea
mov
pop
popf
les
ss
lds
xchg
scas
mov
xchg
lds
test
repz
sbb
fisubr
fisttp
sub
sbb
inc
cs
popf
mov
stc
outs
loop
or
xor
pop
sbb
sub
inc
pushf
pop
aaa
movs
or
mov
jle
(bad)
xchg
aas
mov
jb
inc
jae
test
repz
push
xchg
(bad)
mov
add
shr
stos
sar
arpl
mov
ss
in
lock
repz
dec
call
call
clc
fsub
sub
pop
ins
das
mov
jge
mov
int
call
jbe
or
int
sbb
pop
adc
popa
imul
ja
lods
test
out
cwde
add
inc
lea
nop
(bad)
inc
xchg
int
ins
out
jb
stc
ret
test
jecxz
stos
mov
jb
test
pop
inc
fcomip
xor
movs
inc
out
fidivr
sub
out
(bad)
fild
aaa
jo
push
mov
jno
mov
stos
cmp
cli
das
mov
sbb
and
pop
sbb
sub
lods
pop
daa
movs
cmp
mov
dec
xchg
iret
xchg
es
je
stos
outs
lds
xchg
push
rcl
test
out
ins
add
pop
lods
ret
adc
repnz
ret
inc
xchg
mov
xor
lock
lahf
and
add
inc
cdq
ins
pop
pop
xchg
aam
into
aad
mov
pop
push
jg
cld
adc
pop
mov
pop
push
cwde
adc
cmps
xchg
or
movs
add
add
sbb
push
icebp
or
in
stos
push
adc
call
cli
mov
pop
mov
pushf
gs
shl
mov
ret
fs
js
adc
scas
cmp
add
cmp
imul
cmps
retf
dec
push
call
or
pop
sbb
sub
test
cmp
test
out
xchg
xor
in
jne
dec
ins
push
sub
jecxz
mov
xchg
pusha
int
dec
xor
fsubr
cdq
int3
cmp
mov
sbb
cmp
xchg
aas
adc
jecxz
imul
xchg
jg
pusha
add
stos
into
or
push
mov
push
inc
jmp
adc
fadd
test
mov
mov
pop
add
(bad)
jmp
dec
jno
dec
adc
push
pushf
mov
push
xchg
rol
test
add
rcl
repz
dec
mov
ins
out
call
lock
or
and
mov
fstp
jmp
je
enter
adc
adc
je
inc
jnp
je
cmp
inc
xor
mov
mov
inc
dec
lods
and
rcl
and
mov
lods
pop
je
cmps
mov
cdq
test
je
mov
or
mov
(bad)
push
lds
push
and
xor
mov
nop
iret
mov
or
pusha
jmp
push
addr16
xor
xor
pop
movaps
imul
pop
xor
sbb
push
inc
jmp
jmp
xchg
jge
push
repz
pop
xchg
xlat
test
mov
xchg
add
pusha
xchg
addr16
xchg
test
xlat
dec
ins
fwait
pop
fimul
cmp
cli
in
and
adc
dec
mov
dec
sbb
mov
dec
loop
jnp
into
push
ins
push
add
cmp
jl
push
xchg
pop
mov
mov
arpl
adc
mul
push
and
mov
aas
xchg
xlat
mov
or
out
xor
test
add
popa
add
xchg
icebp
adc
stc
loop
(bad)
dec
sbb
outs
cld
push
cmp
cmc
(bad)
pop
into
sub
or
mov
lahf
test
xchg
dec
pop
cld
push
test
add
inc
sbb
and
jo
ss
pop
adc
push
xchg
mov
imul
xchg
cmp
jle
fnsave
cmps
(bad)
jg
retf
xchg
ins
std
mov
push
retf
rol
mov
lods
mov
cmc
stos
jecxz
push
ins
cwde
test
out
pop
fstp
inc
aaa
in
fnstsw
imul
sbb
mov
jns
ret
cmp
shl
xchg
gs
sub
adc
jae
movs
outs
inc
or
xor
pop
fwait
sti
or
sti
jbe
jge
push
cmps
push
jmp
in
xchg
jecxz
fisub
xchg
aad
or
mul
xor
sbb
ficom
pop
(bad)
sub
clc
(bad)
aad
fwait
or
addps
jb
jg
mov
mov
out
int3
pop
(bad)
dec
or
add
pop
or
lahf
sbb
stos
pop
xor
stos
sub
into
sti
cmp
leave
jle
ins
data16
(bad)
pop
mov
stos
push
dec
imul
test
sbb
sbb
scas
fs
xor
retf
out
push
and
push
sbb
jo
pop
test
fsubr
cld
or
mov
xor
data16
and
add
xchg
clc
cmp
mov
inc
sbb
pushf
je
inc
cmp
(bad)
pop
mov
popf
imul
inc
cmp
ret
ficomp
cmp
ret
cmp
mov
adc
cld
test
push
fst
push
inc
loop
fst
and
sub
jo
cmp
jne
ret
push
pop
cmps
sbb
(bad)
xor
sub
cmp
mov
jo
test
inc
stos
aas
pop
test
inc
loopne
jmp
sbb
movs
cmc
jl
les
daa
clc
cli
mov
xchg
(bad)
aaa
lods
outs
add
mov
loop
repz
pop
mov
(bad)
push
cs
repnz
inc
into
pop
js
outs
stos
sbb
xchg
inc
and
or
cld
mov
mov
pop
push
sub
xor
inc
add
sahf
sub
xchg
push
sbb
pop
sbb
dec
out
iret
out
sahf
sti
inc
(bad)
js
push
(bad)
jle
(bad)
call
outs
xlat
mov
in
movs
lods
and
pop
in
mov
out
push
mov
inc
popf
mov
(bad)
icebp
repz
push
push
shr
inc
push
repz
imul
inc
daa
dec
lods
sbb
sub
mov
int3
lea
adc
das
push
add
pop
fisubr
stos
imul
adc
mov
call
popf
aaa
mov
jbe
pushf
jo
pushf
(bad)
fs
mov
adc
fild
(bad)
mov
xor
mov
inc
fmul
xchg
xchg
pop
fidivr
push
adc
cli
es
cmp
addr16
ins
mov
mov
(bad)
outs
repnz
add
pop
add
or
xor
mov
iret
jae
stos
jg
fld
ja
xchg
stc
sub
mov
xor
inc
je
pop
loopne
rep
xchg
icebp
xchg
ja
mov
hlt
xor
adc
aas
lods
jg
nop
mov
and
in
fiadd
fidivr
pop
out
ss
fdivr
fisttp
sub
or
and
mov
retf
fisttp
(bad)
sbb
add
sub
pop
data16
cmp
mov
pop
cli
jmp
add
add
pop
icebp
mov
push
cmps
les
sbb
ret
xchg
dec
xchg
pop
ja
mov
push
cmp
mov
push
jl
mov
stos
dec
sub
repnz
push
call
stos
sub
test
inc
add
cwde
mov
pop
call
jno
int
adc
pusha
mov
test
cmps
push
inc
mov
lea
aaa
dec
dec
out
fistp
leave
adc
popf
mov
test
in
jno
clc
fiadd
in
call
lahf
stos
xchg
aaa
stc
loop
iret
repz
pop
popf
test
imul
or
(bad)
cmc
out
gs
inc
push
push
dec
test
dec
sub
mov
push
lahf
(bad)
cmp
cmc
jp
jno
cmps
sbb
cmp
fmul
sbb
pushf
cmp
(bad)
xchg
cmp
inc
inc
fild
fmul
mov
and
mov
test
(bad)
repz
test
pop
lods
stos
mov
mov
xchg
repz
push
push
into
or
inc
jmp
retf
push
jge
pop
test
push
mov
test
pop
clc
(bad)
fsubr
jns
loopne
jb
xor
or
imul
jp
mov
pop
(bad)
rol
xchg
xlat
xchg
xor
ins
jbe
lds
mov
loopne
(bad)
mov
jmp
test
dec
gs
mov
es
(bad)
test
test
fwait
lods
fs
stos
or
xor
in
inc
iret
or
jp
ficom
outs
data16
inc
cmp
mov
pushf
cmp
fdivr
mov
push
dec
inc
cmp
pop
ds
das
mov
movs
jae
fsub
dec
movs
mov
sbb
sti
popf
cmp
outs
push
cmps
push
jecxz
shr
aad
adc
mov
(bad)
and
ins
add
jge
mov
pop
dec
aam
not
aad
sbb
lods
inc
out
fisub
cs
retf
ret
or
jge
cdq
cmp
mov
mov
mov
call
cmovg
cmp
inc
imul
out
das
mov
stos
pop
xor
sahf
adc
pop
cwde
int3
mov
retf
dec
jbe
stos
pop
lock
lock
stos
iret
xchg
pusha
shr
pop
pop
repz
cmc
xor
inc
movs
mov
outs
jno
mov
jl
jmp
xchg
lea
push
fsubr
cs
jmp
inc
cmp
dec
pop
push
ret
or
fsub
cld
or
add
sbb
adc
and
sub
jnp
cmp
mov
ins
xor
xchg
fstp
jmp
pop
repz
dec
xchg
scas
xchg
push
jmp
pop
xchg
mov
mov
fsubr
aas
test
push
xchg
xchg
test
(bad)
mov
sti
es
mov
out
pop
ds
out
in
push
into
xor
sub
loopne
sbb
xchg
mov
fbld
cli
or
sbb
add
dec
adc
xchg
aaa
pushf
xor
aaa
mov
adc
and
mov
dec
call
lods
pop
repz
ins
xchg
mul
dec
icebp
clc
push
sub
je
mov
jl
xchg
xchg
test
ds
xor
retf
adc
ds
pusha
jae
push
jl
loopne
add
xchg
adc
jmp
pop
rcl
push
ds
js
test
and
push
inc
xor
mov
and
add
stos
pop
loopne
rep
xchg
repnz
cs
(bad)
cld
es
xchg
movs
mov
jg
mov
push
aaa
sti
leave
mov
sub
ret
pop
aad
stc
sub
cs
inc
out
xor
data16
cmp
mov
repnz
aas
mov
jbe
jg
fnstcw
imul
mov
js
test
mov
adc
add
inc
pop
cmp
lock
xchg
fcom
push
fild
lock
popf
mov
lods
mov
adc
cld
lock
fistp
mov
shr
add
cmp
push
call
stos
sub
mov
aas
jne
mov
jmp
icebp
cld
or
sub
cmp
mov
dec
jbe
dec
cmp
lea
aaa
and
out
fbld
jecxz
sbb
jmp
xchg
ins
test
xor
sbb
mov
dec
add
xchg
icebp
jae
cdq
call
pop
in
(bad)
pop
xchg
sub
sbb
mov
sub
ret
jmp
test
cmp
loopne
jbe
xor
aaa
sbb
sub
mov
pop
mov
(bad)
sbb
dec
leave
fbld
aad
sbb
jno
cmp
mov
xchg
pusha
div
add
movs
lahf
(bad)
in
pop
xor
dec
pop
jmp
sbb
std
jmp
pop
mov
ins
jnp
inc
and
mov
test
(bad)
fnsave
rol
sub
xor
jo
adc
outs
sbb
data16
xchg
jmp
xchg
cmp
pop
inc
popf
jno
scas
hlt
pop
fwait
shr
and
ror
mov
inc
dec
mov
stc
repnz
ret
xchg
mov
dec
aas
pop
(bad)
(bad)
scas
and
add
jns
xchg
inc
and
mov
mov
aas
test
ret
fadd
jae
ss
sub
sub
xchg
push
mov
movs
mov
sbb
and
out
(bad)
xchg
cmp
pop
inc
rcl
xchg
cmp
jecxz
push
retf
xchg
jae
std
shl
add
pop
call
add
pop
(bad)
repnz
mov
dec
aas
inc
aad
in
and
daa
push
jle
mov
push
mov
fisttp
xchg
adc
retf
xor
add
cdq
sbb
add
add
sbb
cmp
(bad)
not
(bad)
jmp
xchg
loopne
test
and
pop
movs
lahf
(bad)
in
sbb
repz
repnz
repz
ins
xchg
mov
dec
aas
dec
ret
retf
cmc
jle
cmp
dec
mov
inc
and
jmp
jg
sar
js
push
and
cmp
adc
push
iret
add
mov
inc
repz
(bad)
sbb
dec
leave
fbld
jge
jg
je
sbb
fs
jno
dec
xchg
jo
adc
idiv
push
xchg
loope
(bad)
dec
pop
icebp
test
imul
aas
jae
inc
inc
push
dec
mov
ins
and
(bad)
jg
xlat
sbb
xor
and
jo
sub
add
mov
(bad)
sbb
dec
leave
fbld
jns
pusha
fimul
mov
dec
mov
xchg
jno
(bad)
mov
xchg
in
leave
dec
xchg
mov
xchg
push
and
aad
pop
out
xchg
jns
xor
push
cs
jmp
dec
mov
jbe
jp
mov
out
sbb
jnp
push
xor
sub
sub
das
test
lods
sbb
(bad)
movs
cmp
and
fist
cli
pop
add
mov
sti
dec
ret
xchg
pop
and
retf
test
loope
adc
jnp
xchg
xchg
add
div
(bad)
(bad)
pop
fs
mov
and
out
xchg
fdiv
dec
jp
mov
push
sub
adc
into
jnp
cli
daa
xchg
int3
add
pop
sti
xor
das
mov
gs
imul
push
mov
leave
int3
mov
sahf
sti
inc
fld
inc
pushf
dec
popf
mov
bound
pushf
add
std
xlat
movs
add
ins
pop
pop
data16
mov
xchg
in
repz
push
push
rcl
sbb
imul
mov
jo
inc
or
mov
mov
or
jge
lock
push
inc
les
js
adc
imul
adc
cmp
arpl
not
icebp
dec
jbe
ror
loope
(bad)
call
push
cmp
retf
test
lock
test
pop
push
sti
movs
jmp
and
shl
mov
dec
fisub
cs
call
popa
jge
mov
pop
call
jle
shl
xchg
pcmpeqw
rcl
je
adc
imul
adc
mov
sbb
dec
sti
rcr
icebp
dec
jbe
lea
cdq
loope
dec
mov
push
xchg
rol
mov
xor
cmc
pop
inc
loope
mov
scas
lods
inc
out
sar
cs
(bad)
into
pop
ret
inc
popa
jle
mov
ja
jns
mov
mov
cli
cmc
add
mov
dec
sbb
or
pop
and
jae
movs
jo
cmps
aaa
(bad)
in
mov
sbb
or
repz
cmp
ins
outs
push
cmps
push
sti
mov
gs
stos
jae
cdq
jae
in
add
push
xor
cmc
pop
add
(bad)
pushf
lods
inc
out
fisub
cs
rcr
(bad)
jae
sub
cli
push
sbb
mov
pushf
cmp
ret
xchg
inc
push
pop
dec
mov
and
jae
movs
outs
aaa
mov
cli
cmp
and
cmps
loop
sahf
sti
jp
ins
arpl
pop
add
push
(bad)
cld
jns
xlat
mov
movs
mov
dec
mov
out
cwde
mov
div
out
lods
inc
out
fisub
cs
rcr
fs
inc
popa
fs
fnstsw
jbe
div
push
jns
mov
mov
lahf
jmp
adc
xor
mov
jae
movs
push
test
in
mov
sbb
movs
dec
mov
jbe
cmps
popa
test
sahf
pop
dec
mov
loopne
dec
pop
retf
push
loopne
or
jo
call
jle
cwde
movs
fs
fstp
aaa
jmp
mov
adc
inc
mov
cs
mov
scas
cmp
in
addr16
mov
push
push
mov
emms
adc
mov
mov
test
or
movs
jne
adc
std
cwde
inc
mov
jno
push
push
stos
pop
enter
cwde
mov
pop
push
test
xchg
mov
lahf
ror
test
movs
push
icebp
pop
fisubr
jmp
sub
sub
cli
dec
or
lahf
mov
dec
jmp
imul
sahf
sub
stos
pop
xor
mov
pushf
shl
test
(bad)
pop
jmp
cli
pop
xchg
(bad)
mov
dec
jmp
cmc
sbb
push
and
ja
mov
adc
push
fidivr
jmp
pusha
push
les
jns
cdq
dec
sub
pushf
cdq
mov
dec
jmp
imul
loop
xchg
pop
(bad)
js
stos
pop
xor
sahf
add
cmp
mov
jbe
mov
jmp
std
pop
xchg
(bad)
mov
cmp
retf
mov
test
ja
cwde
mov
adc
js
cmp
sbb
in
pop
stc
pop
jge
cmp
push
adc
movs
push
pop
pop
icebp
xchg
rol
repnz
add
js
fmul
pop
push
adc
pop
xchg
or
jae
stos
jg
mov
cmps
xor
xor
mov
cs
inc
inc
mov
dec
mov
pushf
push
mov
or
clc
bound
test
jae
mov
push
cmp
rcr
mov
call
sbb
adc
dec
fisttp
push
popf
cmp
mov
jmp
jl
ret
inc
add
adc
mov
pop
dec
nop
push
add
cmps
(bad)
sbb
jmp
(bad)
sbb
mov
dec
mov
pushf
push
mov
cld
pop
int3
sbb
es
jae
mov
push
cmp
shl
test
cmp
fist
xor
sub
mov
retf
or
les
or
mov
jo
jae
leave
xor
pop
jge
cmc
sub
or
add
cmps
(bad)
sbb
inc
ret
sbb
enter
push
jle
sub
ret
fidivr
scas
push
(bad)
adc
sbb
mov
adc
sti
leave
cmps
retf
xchg
mov
pop
iret
xor
cmp
sbb
in
push
out
adc
dec
fistp
gs
cmp
scas
xor
les
das
mov
jbe
jle
enter
adc
scas
pop
rcl
inc
jno
jg
mov
adc
inc
popf
lods
add
dec
(bad)
js
and
dec
mov
xchg
data16
scas
jnp
pop
mov
mov
ja
mov
adc
cld
lock
dec
adc
aad
xchg
jae
sub
push
in
es
or
inc
lea
popa
icebp
cmps
test
sub
pop
fcomp
or
xor
push
cmp
jl
inc
enter
arpl
ja
movs
xchg
sbb
and
ror
cwde
jns
pop
mov
push
cdq
les
and
ror
xchg
jmp
stos
push
and
repnz
icebp
jae
xchg
cdq
push
fwait
ja
sub
fisub
sbb
mov
sub
xchg
xchg
aam
inc
xlat
push
(bad)
fdivr
jno
retf
adc
ds
imul
inc
xchg
or
retf
and
dec
leave
fbld
lds
and
jnp
xchg
out
mov
xchg
test
cmp
inc
movs
xchg
(bad)
retf
popa
pop
in
mov
sbb
jmp
dec
pop
jmp
jb
dec
(bad)
push
aaa
adc
and
dec
mov
jb
jnp
adc
push
pop
(bad)
sbb
div
mov
pop
fs
jecxz
cmp
arpl
add
cmps
and
cmps
(bad)
pop
and
dec
leave
fbld
aad
sbb
jb
mov
xchg
inc
out
push
and
ror
mov
rcl
inc
outs
call
sbb
lods
inc
shr
or
loop
repz
sti
sbb
fmul
ins
push
popf
dec
sub
test
sbb
ja
(bad)
sbb
in
push
push
jb
mov
adc
adc
pop
mov
xchg
test
dec
out
int3
mov
sti
inc
xchg
arpl
cmp
out
xor
cmc
xchg
pop
stos
mov
add
mov
adc
into
ficom
mov
rcl
xor
(bad)
add
xor
or
xchg
std
jp
jmp
mov
sbb
xor
inc
add
pop
fst
mov
movsx
pop
sti
stos
xchg
and
ins
jbe
sbb
(bad)
push
push
loop
in
jecxz
xor
aad
add
push
xor
test
leave
(bad)
mov
repz
xchg
lods
inc
out
fisub
cs
shr
sub
fwait
xor
inc
xchg
jns
mov
pushf
cmp
mov
test
adc
add
jbe
cmp
stc
imul
dec
aam
outs
repz
add
pop
jnp
rol
shr
push
cmps
push
lds
in
vandnps
fcomp
lods
add
push
xor
pop
inc
sti
cli
xchg
sar
pop
xchg
lods
inc
out
fisub
cs
mov
jne
inc
popa
xor
inc
mov
mov
fild
xchg
push
mov
sbb
adc
mov
mov
test
or
xor
jne
add
pushf
mov
push
push
stos
pop
icebp
mov
jns
mov
push
cmp
rol
mov
inc
mov
loope
icebp
jecxz
ins
je
and
es
in
pop
loopne
add
push
sbb
test
les
imul
jae
add
mov
fs
jne
lods
pop
popf
aas
ficomp
data16
and
mov
div
add
push
dec
pop
mov
dec
mov
pushf
push
mov
icebp
push
(bad)
(bad)
pop
test
jg
mov
and
sti
or
aam
fsubr
stos
ss
adc
cld
fist
sub
or
push
pop
dec
popf
add
(bad)
sbb
bound
jecxz
cmp
adc
lahf
or
sar
movs
sub
xchg
cld
push
inc
dec
ins
div
or
sbb
inc
stos
pop
loopne
rep
xchg
mul
ja
cld
pusha
cmp
dec
lods
in
cmc
aas
mov
xchg
test
sar
out
in
jmp
push
mov
pop
fld
leave
push
push
ds
out
in
push
into
xor
pop
jl
loopne
es
lods
adc
xchg
clc
inc
push
push
ds
aas
push
and
out
pop
fwait
cs
outs
outs
cmps
pop
xor
sbb
dec
int
jmp
sbb
inc
mov
repz
dec
mov
pushf
imul
jno
pop
jmp
repnz
push
push
cmp
mov
jmp
or
call
cmps
ins
jge
cld
push
inc
or
and
pop
int3
cli
or
or
xor
jle
sub
jge
mov
movs
cmp
cmps
(bad)
push
xor
jmp
shl
mov
dec
xor
inc
in
sbb
clc
xlat
mov
lea
neg
jge
mov
repnz
retf
mov
xor
cmp
clc
mov
lock
sub
sbb
stos
xchg
lea
sub
pusha
fwait
cld
or
xor
inc
and
inc
int
stos
sbb
jbe
mov
mov
enter
xchg
pop
(bad)
sbb
jp
and
cmps
fild
xchg
jl
sar
mov
cmps
lods
mov
cmps
inc
jg
mov
adc
stc
jmp
(bad)
repnz
aaa
xor
inc
fiadd
jo
dec
mov
ins
push
mov
and
mov
and
pop
sar
jnp
lea
jl
retf
xor
pop
xor
xchg
pop
test
mov
ja
mov
cmp
call
fist
mov
push
test
call
test
or
test
mov
loopne
ins
xchg
xchg
push
icebp
dec
fld
pop
cmp
cld
scas
pop
sti
ds
jae
or
sub
mov
lods
ss
call
jo
xor
or
adc
push
adc
nop
mov
pop
out
fnclex
sbb
pop
jge
scas
dec
shl
dec
in
jle
not
cmp
jle
mov
popa
call
xchg
retf
sbb
xchg
push
leave
xor
leave
inc
jmp
add
bound
inc
daa
inc
mov
retf
inc
jmp
pop
and
jne
mov
xchg
or
pusha
pusha
mov
jne
rcr
clc
aam
cmp
outs
pop
and
jb
xchg
pop
call
and
mov
lea
js
test
repnz
in
ins
xchg
mov
ss
sub
cld
loopne
(bad)
ds
dec
mov
xor
push
lahf
shl
std
call
jo
xor
sbb
cmp
mov
pusha
xchg
mov
pop
jmp
std
jbe
push
test
in
loopne
mov
cmp
rol
mov
outs
call
xchg
retf
sbb
xchg
push
lds
leave
inc
in
dec
add
stos
pop
bound
inc
sub
mov
scas
inc
jmp
pop
sub
and
je
arpl
pusha
pusha
cmps
push
sub
(bad)
xor
pop
inc
retf
xor
jecxz
loop
push
daa
scas
jb
mov
xchg
dec
std
and
mov
lea
ja
test
repnz
fiadd
cwde
xchg
dec
fimul
sub
cld
int
lds
jo
jae
or
cmp
ret
mov
sub
clc
addr16
jns
shr
jle
(bad)
xor
jo
adc
inc
jnp
push
mov
add
loopne
mov
test
push
bound
dec
lods
push
ficom
xchg
sbb
mov
or
aad
add
dec
cmp
push
out
sahf
push
xor
aad
test
lahf
inc
rcr
dec
in
aad
jl
and
dec
test
dec
add
ret
(bad)
pusha
fsub
popa
xor
cmp
inc
sbb
je
inc
jnp
jg
movs
cmp
mov
adc
data16
ficomp
hlt
jle
ja
dec
sub
data16
xor
sar
pop
test
repnz
scas
jne
pop
leave
push
ss
jmp
xor
sub
cs
mov
int
jmp
jno
div
out
pop
xchg
add
jnp
mov
addr16
test
push
xor
sbb
sti
pop
neg
pop
test
ins
xchg
jmp
je
std
loope
sbb
ins
mov
pop
test
loop
iret
or
aam
jecxz
ficom
and
dec
fiadd
dec
jo
jle
push
jge
mov
xchg
mov
sbb
push
dec
push
aad
push
inc
push
add
sbb
dec
xor
cmp
cmp
stos
mov
scas
int3
imul
pop
aad
div
mov
mov
pop
fdivp
test
lds
cwde
and
mov
sahf
push
and
lds
xchg
lea
dec
ficomp
xor
pop
call
push
or
xchg
adc
inc
mov
xchg
mov
mov
cs
fldenv
popa
xor
aaa
push
pop
push
add
push
popf
adc
sbb
jo
xchg
push
popf
and
in
cs
jb
outs
inc
push
mov
dec
cdq
(bad)
nop
je
std
fld
mov
push
xchg
mov
movups
cli
mov
repz
jl
lods
inc
xlat
push
das
cmp
push
fst
push
and
cmp
arpl
mov
movs
mov
or
pop
rcl
dec
popa
adc
daa
sbb
adc
dec
inc
sahf
jg
cmps
cmp
movs
cli
cmp
and
xchg
aaa
shl
jb
inc
inc
push
lods
pop
fcom
and
enter
dec
scas
cwde
fnsetpm(287
mov
xchg
push
xor
cli
sbb
mov
cmp
ds
sti
lods
jbe
xor
dec
scas
sbb
lahf
push
ds
mov
mov
call
jb
gs
int
sbb
sbb
test
add
mov
jmp
jmp
loop
jns
stos
pop
fsub
fwait
sbb
enter
retf
cwde
adc
lods
pusha
jb
xchg
test
inc
std
icebp
cmp
mov
jecxz
scas
adc
cs
fild
pop
jo
dec
cmps
or
mov
jl
mov
mov
ret
fstp
pushf
sar
pop
push
in
sub
inc
sbb
sub
push
push
adc
mov
dec
in
div
imul
enter
mov
cs
rol
movs
sar
outs
add
std
jecxz
cld
repz
ins
icebp
mov
cmp
jl
sbb
add
outs
inc
push
call
test
rcr
adc
xor
xor
(bad)
out
inc
fidiv
movs
cmp
or
sub
fbstp
fisubr
pop
popf
pop
repz
xchg
dec
enter
(bad)
sub
repnz
stos
jg
xchg
mov
clc
or
outs
sbb
aad
jmp
out
ss
jmp
push
ins
scas
pop
imul
mov
fild
cli
or
daa
fcomp
sbb
adc
outs
fs
or
(bad)
sbb
pop
leave
fist
idiv
jb
pop
repz
loopne
loopne
xchg
sbb
out
fild
stos
sar
inc
jp
leave
xchg
xor
xor
retf
ins
mov
clc
sub
cmp
push
in
adc
dec
xchg
pop
outs
push
mov
jp
mov
stos
cmp
cli
or
jno
shl
das
mov
or
lea
dec
out
and
pop
outs
push
mov
xor
mov
push
out
icebp
mov
lahf
stos
fidivr
stos
jle
mov
test
aaa
stc
jmp
push
pop
(bad)
es
vmovmskps
sbb
inc
stos
cmp
mov
xchg
test
cmp
cli
bsr
jbe
jbe
int
sub
add
jp
test
mov
mov
push
and
rcr
imul
fdivr
out
addr16
js
std
enter
ins
cmp
test
xor
repnz
scas
shr
stc
repz
xor
pop
push
call
xchg
add
fild
or
popa
xor
xchg
das
sub
pusha
stos
push
inc
mov
ja
mov
ins
in
enter
sti
(bad)
fimul
push
scas
jle
nop
loope
xchg
xlat
xchg
popa
(bad)
xchg
gs
xlat
scas
jb
je
mov
jnp
mov
clc
mul
hlt
cmp
push
jecxz
repz
ds
(bad)
in
jbe
aas
ja
dec
xchg
pop
ins
push
lods
inc
cs
mov
mov
in
cli
sbb
es
sbb
adc
imul
push
movs
cmp
popf
test
sbb
dec
in
mov
mov
inc
push
mov
jl
in
xchg
push
test
sub
ins
or
xchg
xor
cli
add
stos
imul
int
and
repnz
push
lds
or
mov
ins
push
cwde
inc
ds
mov
mov
jmp
inc
xor
xor
jae
and
and
ja
xchg
cmp
(bad)
out
mov
leave
sti
imul
dec
cmp
outs
jmp
jno
fcmovnbe
xchg
stos
cmc
sbb
test
adc
repnz
test
pop
fild
cs
leave
retf
push
call
stos
(bad)
push
add
lahf
mov
xchg
dec
or
arpl
call
arpl
int
pop
push
xchg
sub
js
cmps
xor
xchg
mov
pop
out
sti
xchg
aaa
mov
addr16
lods
jp
mov
xchg
addr16
jne
std
lds
stos
leave
aas
test
inc
mov
mov
test
jmp
outs
fwait
lods
push
repz
lock
and
cli
cld
enter
jo
outs
stos
pop
dec
push
cmps
dec
ds
test
mov
sub
outs
jmp
jno
ret
jo
add
imul
stos
or
popf
test
sbb
xor
fist
loop
jbe
mov
dec
cdq
les
and
rol
mov
inc
xchg
mov
xor
cmc
in
in
aad
ins
nop
mov
push
stos
sub
push
fist
xor
sub
pop
ins
push
sahf
inc
sub
mov
fistp
test
clc
bound
xor
and
bound
xor
arpl
jg
mov
(bad)
sbb
dec
in
call
pop
lea
fdiv
dec
xchg
mov
push
and
(bad)
mov
(bad)
mov
ja
rol
(bad)
fs
fwait
lods
inc
jecxz
fidivr
cmp
in
xor
jne
pop
mov
mov
retf
imul
or
ds
and
and
mov
mov
ja
stos
test
(bad)
fst
fld
push
test
lock
dec
xchg
les
and
ror
(bad)
mov
jne
mov
push
aas
mov
sbb
dec
imul
sbb
ds
fcomp
inc
into
adc
jp
pop
ins
push
mov
jge
mov
iret
ins
std
fild
mov
xor
xor
daa
mov
fist
sahf
jl
xchg
jae
cmps
(bad)
sbb
add
out
test
mov
je
scas
push
repz
dec
xchg
int
pusha
in
pop
adc
lds
xchg
ret
outs
ja
xchg
xchg
adc
stc
in
retf
fisttp
cwde
mov
pop
(bad)
cmp
cmp
in
bound
dec
mov
push
pop
jns
mov
mov
jmp
je
jno
iret
and
jb
pop
mov
outs
pusha
xchg
mov
mov
fscale
xchg
xor
push
push
sbb
test
xchg
jno
call
lods
add
stos
jmp
xchg
mov
add
hlt
adc
fwait
inc
jecxz
ficom
dec
jo
cmp
mov
jge
movs
xchg
mov
in
sbb
xor
xor
add
add
addr16
test
or
test
jecxz
xchg
aaa
mov
je
lea
mov
mov
in
jno
std
loopne
push
fidivr
(bad)
ret
sbb
adc
repnz
mov
ds
cli
fcom
xor
sbb
cmp
scas
mov
in
icebp
das
mov
xor
pop
sbb
sub
or
imul
mov
add
and
xchg
sbb
sti
jb
sbb
pop
div
inc
in
jne
clc
ror
test
outs
bound
fcomi
stos
cld
test
pop
ficomp
cmp
int3
cld
fst
pop
jae
dec
cmps
pop
jge
sti
inc
cs
movs
mov
inc
jmp
jno
int
adc
sub
xchg
cmps
adc
mov
dec
leave
ficom
fisub
push
sbb
fnstcw
xchg
les
sub
shr
stos
rcl
outs
je
xchg
xor
dec
ins
mov
inc
jecxz
call
clc
fst
xor
sbb
inc
mov
jge
mov
lods
dec
xor
das
cdq
jmp
fs
int
sbb
add
js
test
add
dec
push
popf
into
mov
xor
push
test
ins
mov
xchg
leavew
in
cmp
ror
pop
mov
lea
aaa
stc
jecxz
cld
repz
adc
pop
in
ds
ds
test
push
popf
xor
pop
jl
loopne
aas
pop
cmps
fst
mov
mov
jmp
or
int
adc
push
xor
push
rcl
imul
pop
ror
cmp
leave
out
(bad)
mov
pop
sbb
ret
js
fst
push
std
retf
lds
stos
stos
push
shr
test
inc
mov
cmp
ds
mov
pop
in
add
cmp
sbb
cld
sbb
mov
int3
dec
jmp
jns
rcl
jb
adc
push
movs
or
lea
pop
in
stc
xchg
add
push
stos
pop
repz
dec
add
lds
xchg
push
out
xchg
mov
je
mov
repnz
mov
pop
hlt
sub
idiv
fist
add
pop
ins
das
mov
jge
mov
scas
cmp
(bad)
aas
mov
aaa
int
or
sub
test
xor
mov
dec
(bad)
fist
les
push
stos
pop
repz
xchg
ins
in
jno
std
fidiv
(bad)
mov
xchg
push
cmp
hlt
sbb
lods
dec
jecxz
cmps
sub
fmul
fdiv
xor
pop
outs
fs
inc
cs
mov
mov
out
das
enter
add
int
sbb
add
jle
test
xor
mov
aaa
daa
pop
out
xlat
xchg
xor
sti
jbe
sbb
mov
dec
mov
xchg
adc
xchg
jb
(bad)
icebp
xchg
ja
imul
ja
call
out
jecxz
imul
cli
in
sub
xor
pop
ins
das
mov
ins
mov
aaa
out
jmp
jb
ret
and
das
mov
fimul
xor
bound
das
ins
out
fcom
inc
pop
jg
pop
in
(bad)
dec
mov
xchg
jb
rcl
mov
pop
jg
mov
push
xor
lds
mov
or
cmp
cld
(bad)
jbe
xor
pop
jge
mov
mov
fild
fisttp
mov
jp
add
ror
jo
xor
fild
mov
push
popf
mov
pop
sti
aad
xor
push
scas
push
xor
dec
xchg
xchg
je
std
frstor
(bad)
mov
test
cld
repz
ins
cwde
fwait
inc
out
xlat
adc
pop
std
stc
(bad)
push
call
stos
sbb
lahf
inc
cs
mov
cdq
ucomiss
pop
(bad)
cli
or
clc
jno
jne
int
sbb
das
mov
mov
inc
popf
mov
sub
xor
adc
jbe
stos
ss
dec
xchg
rol
es
(bad)
mov
imul
stos
(bad)
aas
test
ja
cmps
scas
push
daa
stc
lock
mov
sub
cmp
cld
int3
data16
jo
dec
stos
or
scas
inc
sub
lahf
movs
test
jmp
popa
xor
inc
push
sub
fs
sub
adc
or
mov
mov
jbe
xchg
jle
mov
inc
xchg
rol
icebp
rol
(bad)
fisubr
mov
xchg
xor
cld
cmp
lods
inc
jecxz
fidivr
sbb
in
(bad)
xor
cmp
mov
lahf
test
mov
jmp
or
popa
mov
mov
mov
cmp
mov
dec
out
out
daa
mov
jbe
lea
mov
aas
xchg
les
adc
(bad)
mov
lahf
stos
jecxz
mov
test
iret
mov
cmp
cs
out
cld
(bad)
lock
outs
stos
cmp
stc
inc
aaa
dec
xchg
mov
mov
jmp
add
int
sbb
push
xor
cmp
pop
(bad)
imul
stos
sbb
mov
dec
in
ficom
loop
jbe
mov
repz
(bad)
dec
cdq
les
push
std
stc
pushf
push
jecxz
movs
lea
pop
test
test
das
mov
sbb
test
leave
pop
fsubr
icebp
jbe
and
pop
stos
xor
mov
lahf
sahf
mov
jmp
jno
loope
pop
push
push
adc
imul
push
movs
xor
(bad)
and
mov
xor
shl
ins
dec
jno
pop
(bad)
cmps
ins
in
jb
xlat
shl
fwait
test
cmp
mov
fld
cdq
fst
dec
fmul
cs
xchg
fstp
add
das
sbb
adc
sbb
and
int
inc
jno
enter
add
loop
mov
mov
movs
sbb
mov
cs
in
(bad)
xchg
xor
push
scas
and
mov
dec
xchg
les
enter
jecxz
mov
mov
cmc
push
adc
hlt
xchg
stc
jmp
pop
mov
cmp
jbe
cmp
sub
mov
bound
fidivr
cli
add
in
jbe
pop
xor
xor
add
xor
push
fwait
pop
fstp
mov
movs
aaa
inc
popf
xchg
mov
(bad)
fbld
call
arpl
inc
out
xchg
xchg
xchg
jno
std
in
or
popa
xor
ins
jb
mov
inc
mov
(bad)
ds
fistp
xor
pop
ins
pop
lahf
inc
or
mov
iret
cmp
cld
xor
xor
cmp
mov
inc
pusha
stos
adc
movs
sbb
popf
mov
imul
je
stos
jo
xchg
loopne
xchg
les
daa
stc
shl
fwait
test
cmp
mov
repnz
repz
ins
mov
(bad)
cmp
cmp
fnclex
data16
jo
lods
cmp
mov
jno
mov
fild
ret
clc
jnp
add
int
push
dec
cmp
or
imul
xor
mov
and
xchg
dec
sar
icebp
jl
push
stos
pop
sti
mov
dec
xchg
ret
xchg
fs
jno
std
shl
(bad)
lea
mov
icebp
lock
movs
inc
jecxz
call
hlt
fist
aaa
jo
pop
mov
inc
sbb
mov
shr
fcomp
repz
and
jne
xchg
das
test
sahf
ja
mov
je
mov
inc
int
loope
mov
jb
gs
lea
mov
push
xchg
les
cmp
xlat
mov
xchg
mov
aas
ret
xchg
mov
pop
adc
repnz
repz
outs
pop
fwait
movs
inc
jecxz
icebp
and
fist
add
dec
stos
sbb
lods
xor
jl
mov
mov
cli
das
mov
inc
fs
retf
je
adc
jl
and
sbb
popf
mov
dec
(bad)
fist
aam
jbe
stos
outs
repz
and
mov
adc
test
xor
lds
fwait
movs
inc
in
test
cs
neg
push
loopne
jo
inc
(bad)
(bad)
push
mov
jns
ror
int3
cli
push
xchg
fidiv
jno
mov
ss
das
int
stc
imul
xor
or
mov
or
repnz
adc
jbe
lea
mov
dec
xchg
(bad)
xchg
fs
xchg
push
and
shr
xchg
jne
test
push
ds
(bad)
int3
or
movs
inc
jecxz
fidivr
cs
loopne
jae
jle
pop
ins
jo
inc
sub
pushf
cmp
stc
push
lahf
clc
jbe
pop
xor
xor
das
mov
(bad)
imul
ja
lods
test
out
fist
les
push
movs
jle
xchg
loopne
mov
xchg
jno
stc
rol
mov
ja
mov
push
adc
repnz
add
cld
ds
cs
(bad)
xor
pop
dec
push
mov
jns
cwde
mov
outs
jmp
jno
into
pop
sbb
es
lods
xor
popf
test
dec
out
lods
out
mov
addr16
lea
call
rcl
mov
jecxz
cmp
je
xchg
test
add
repnz
sti
cmp
inc
jecxz
(bad)
cs
fist
aaa
jo
dec
mov
inc
and
lahf
retf
cmp
cli
or
cmp
xor
cmp
pusha
lods
pushw
movs
sub
mov
dec
out
xchg
xor
int3
(bad)
stos
pop
aam
loopne
xchg
les
pop
std
stos
mov
jecxz
sub
push
sti
mov
mov
pop
(bad)
sub
ds
push
dec
test
ins
pop
test
jns
mov
mov
fild
cli
or
adc
xor
and
pusha
test
xor
test
jmp
les
and
pop
repz
dec
xchg
rcl
std
aad
add
or
test
ja
mov
outs
pop
xlat
repnz
sti
dec
ins
mov
fidivr
sub
sar
fist
inc
jo
dec
fidiv
push
stc
push
or
fnstsw
jmp
jns
into
xor
jo
and
das
mov
test
cmp
test
jmp
aam
jbe
lea
xchg
loopne
xchg
ret
mov
in
xchg
jno
not
test
ins
add
ja
xchg
xchg
push
aaa
stc
loop
(bad)
push
jecxz
cmps
cmp
ds
cld
fst
cmp
pop
ins
push
mov
jns
mov
mov
cli
das
mov
jbe
pop
sub
pop
adc
das
mov
sahf
ja
mov
(bad)
pop
aas
daa
ins
out
fbstp
imul
idiv
call
and
rol
lods
sar
imul
cmps
push
aaa
loope
sbb
mov
xor
ds
jmp
cmp
mov
jno
mov
mov
jmp
push
xor
and
das
mov
test
xor
lahf
sbb
and
xlat
xchg
daa
xchg
clc
push
aam
arpl
push
repz
ins
xchg
les
cmp
rol
test
outs
jno
call
fincstp
inc
jl
lods
inc
out
fimul
sub
(bad)
(bad)
fist
cmp
dec
stos
adc
push
cli
arpl
jns
les
sti
jmp
mov
jbe
add
enter
add
and
jp
mov
cmps
cmp
movs
mov
aaa
and
retf
xchg
aaa
int3
div
ins
fs
scas
dec
(bad)
mov
dec
mov
xchg
push
std
xlat
xchg
add
ins
add
ja
test
push
xor
loope
cld
repz
ins
mov
fidivr
daa
pop
repnz
fist
add
test
imul
mov
scas
ds
addr16
gs
xor
das
mov
xchg
pop
xor
mov
and
rcl
aam
push
inc
test
lock
dec
xchg
les
or
rol
test
aas
test
ja
mov
push
aaa
loope
sbb
mov
ss
fist
xor
inc
cmps
pop
ins
pop
mov
pop
mov
sub
imul
das
mov
push
je
cmp
xor
sbb
pusha
lods
jo
movs
cmp
mov
dec
out
stc
xchg
xor
gs
test
repz
pop
xchg
les
std
fnstcw
imul
ja
mov
push
xor
aad
pusha
mov
ds
push
dec
lea
pop
pop
mov
jns
mov
stos
cmp
fisubr
cli
sbb
push
int
add
das
mov
sahf
ja
test
test
mov
xchg
fst
fild
push
mov
push
call
xchg
jno
call
test
ins
cmp
jl
rol
cld
repz
fs
fidivr
ds
cli
div
sbb
pop
ins
push
pushf
inc
cs
mov
fst
(bad)
aas
mov
jbe
jbe
(bad)
xor
pop
add
add
pop
bound
ja
cmps
(bad)
sbb
sub
fild
les
push
test
shl
fs
push
and
shl
(bad)
test
jge
xchg
test
aaa
fcomip
cmp
dec
outs
cdq
mov
jecxz
clc
sub
repnz
fadd
and
inc
mov
inc
cs
mov
mov
int3
cli
or
xor
xor
push
or
lahf
sbb
lods
pop
adc
mov
dec
out
xchg
xor
gs
mov
dec
mov
xchg
sbb
iret
fidivr
mov
outs
pop
xchg
leave
hlt
push
adc
cwde
mov
or
lods
inc
loope
sar
sub
cli
(bad)
(bad)
xor
sbb
push
mov
jns
mov
stc
outs
sar
jp
clc
addr16
and
xor
jo
adc
imul
ja
mov
jl
fild
repnz
push
push
stos
and
mov
dec
xchg
cdq
dec
in
je
(bad)
shl
xchg
ja
mov
hlt
repz
pop
ins
mov
clc
cmp
ds
cld
aad
call
popf
adc
mov
ins
fwait
sbb
mov
jbe
je
mov
adc
jnp
xchg
push
xor
mov
pop
and
fst
gs
mov
dec
xchg
les
and
stos
test
out
ins
movs
(bad)
popf
ror
lods
ins
ja
movs
sbb
stc
loope
(bad)
dec
imul
out
(bad)
(bad)
and
sbb
pop
ins
push
pushf
inc
cs
mov
pushf
aas
fst
jecxz
sbb
cmp
and
out
sub
pusha
mov
addr16
and
fadd
ficom
repz
test
xchg
std
shl
(bad)
test
aas
mov
mov
sbb
lods
push
imul
and
(bad)
dec
push
loopne
jo
cmp
lea
jns
mov
mov
fsubrp
das
mov
jbe
popa
adc
xor
cmp
mov
je
mov
dec
out
xchg
and
push
mov
dec
xchg
les
xor
rol
xchg
fs
mov
test
loope
ins
fwait
mov
dec
cs
call
xchg
ins
cs
inc
pop
push
fwait
retf
mov
outs
fucomp
das
mov
jbe
gs
pop
sbb
sub
pusha
mov
mov
test
out
(bad)
xchg
aaa
mov
je
stos
pop
fnstenv
xchg
push
std
retf
loopne
movs
mov
jle
mov
push
xor
repz
jge
lods
inc
out
fidiv
cs
retf
ret
inc
in
aaa
jo
inc
scas
aas
dec
push
movs
pop
or
mov
mov
jmp
jno
int
sbb
das
mov
test
xor
pop
xor
sahf
aaa
mov
pop
push
mov
jl
in
ins
in
pop
and
loopne
movs
xchg
outs
out
xchg
add
rol
fadd
jp
ds
repnz
ret
push
cdq
xor
pop
jge
mov
popa
lahf
mov
mov
sub
fdiv
jns
int
sbb
pop
jecxz
mov
test
xor
test
out
rcr
aam
ins
jbe
sub
xchg
shl
(bad)
rcl
test
gs
lods
push
aaa
bnd
repz
ins
fwait
lods
dec
jecxz
leave
dec
cs
(bad)
ficom
aas
push
push
dec
scas
adc
mov
mov
xchg
dec
cs
outs
int
or
sbb
xor
jb
adc
add
pusha
mov
pop
sahf
test
out
icebp
cdq
ds
clc
popa
repnz
jbe
lea
xchg
(bad)
jl
les
adc
rol
mov
outs
jno
mov
push
adc
aad
retf
bound
cmp
fist
xor
pop
ins
and
mov
ret
add
cli
or
xor
sbb
add
das
mov
jmp
pusha
mov
or
mov
dec
out
xchg
sbb
jne
lea
lahf
loopne
xchg
les
sub
rol
(bad)
mov
xchg
xchg
pushf
ds
icebp
repnz
ret
inc
mov
ds
sub
neg
inc
loopne
jne
dec
stos
pop
dec
js
inc
imul
sar
mov
jbe
jnp
int
adc
das
mov
in
push
mov
test
mul
xchg
add
pop
push
lea
popf
loopne
mov
mov
out
jne
jmp
xchg
jle
(bad)
xchg
push
aaa
shl
stos
cld
cmc
pop
ins
mov
fidiv
cs
push
in
xor
dec
mov
dec
pop
ja
cs
outs
ret
cli
push
mov
xor
pop
push
push
add
pop
cmps
jnp
mov
jno
mov
pop
imul
xchg
push
mov
inc
jns
pop
sar
neg
(bad)
shl
xchg
ja
sahf
xchg
mov
sbb
lods
inc
jecxz
(bad)
ds
cli
cld
fist
xor
sbb
sub
mov
sub
pop
jmp
inc
xor
xor
das
xchg
pop
fld
test
sbb
xor
and
fst
repnz
je
lods
push
jmp
ins
in
popa
and
rcr
mov
pop
mov
ret
retf
ins
fwait
mov
pop
jmp
push
call
mov
dec
cs
cmps
movs
stos
cmp
ror
ficom
jae
int
pop
push
add
pop
fcomp
mov
ja
mov
dec
in
xchg
daa
mov
jb
ins
jbe
stos
push
repz
pop
xchg
les
(bad)
shr
sub
mov
sbb
stc
loope
aam
cmp
inc
imul
into
cmp
rcl
aaa
jle
dec
lods
cmp
mov
ds
mov
mov
jmp
jge
int
pop
add
xor
add
mov
movs
cmp
mov
inc
sti
enter
sti
jno
ins
popa
push
stos
pop
repz
dec
cdq
les
and
fld
stos
enter
ja
mov
sbb
stc
test
lods
push
in
scas
add
aad
popf
and
sub
pop
outs
jo
inc
sub
lahf
mov
mov
cs
jmp
pop
xor
pop
sbb
das
mov
sahf
jl
rcl
outs
popf
and
mov
int
inc
fstp
popa
dec
mov
inc
xchg
(bad)
mov
adc
(bad)
mov
jecxz
xchg
mov
jg
leave
xchg
xor
repz
ins
mov
clc
cmp
sbb
cld
shl
ss
dec
scas
sbb
or
mov
mov
out
push
mov
xor
pop
sbb
sub
push
mov
ja
xchg
lahf
pop
cmp
xchg
xor
pop
jbe
stos
push
repz
inc
xchg
(bad)
xchg
ins
in
jno
std
(bad)
xchg
repnz
add
lds
xchg
lods
dec
jecxz
(bad)
ds
cld
fist
xor
pop
inc
pusha
lea
jno
mov
stos
cmp
cli
pop
clc
jbe
popa
xor
inc
adc
sub
and
imul
jg
mov
ins
out
rcl
repnz
inc
push
mov
dec
xchg
les
sub
shl
(bad)
test
pop
mov
xchg
adc
repnz
repz
outs
mov
fidiv
sub
jbe
aaa
jns
dec
mov
inc
sub
mov
pushf
cmp
(bad)
aas
mov
ds
fs
add
sub
arpl
push
popf
movs
mov
out
jmp
jb
outs
outs
push
stos
jbe
mov
xor
cmps
push
and
shl
xchg
stos
les
mov
mov
cmp
fadd
fs
sub
shr
stos
push
in
jo
dec
stos
push
ins
push
lahf
inc
or
mov
xchg
cmp
(bad)
aas
leave
xor
sbb
das
mov
sahf
ja
mov
sbb
and
pushf
inc
mov
push
pop
fnstsw
mov
dec
add
pusha
(bad)
xchg
pop
sub
shl
test
dec
sahf
push
test
xchg
push
aaa
std
jecxz
cld
lock
outs
sahf
mov
pop
(bad)
sub
cld
enter
jo
dec
mov
inc
pop
jno
mov
ret
aas
cs
jmp
jno
enter
add
lods
sub
pusha
mov
jg
mov
ins
out
fst
aam
pop
push
scas
push
repz
pop
xchg
shl
in
arpl
rcl
mov
das
sahf
sbb
test
xchg
push
aaa
shl
(bad)
cld
repz
ins
mov
lock
cld
(bad)
inc
jmp
jo
dec
scas
pop
ins
cmp
mov
mov
sti
cli
das
mov
jbe
jns
iret
xor
jo
sbb
stos
outs
pusha
sahf
jg
movs
cmp
lahf
mov
cmp
fcom
sbb
mov
pusha
and
ja
mov
test
ins
mov
mov
test
adc
cli
dec
pop
cwde
mov
cmp
pop
out
cld
stos
jns
and
push
inc
scas
pop
js
test
add
pop
iret
data16
cli
das
mov
inc
inc
jno
hlt
pop
sbb
adc
pop
pusha
nop
jb
movs
sub
movs
lods
xor
and
aad
adc
jbe
stos
pop
div
xchg
shr
xor
dec
movs
(bad)
test
dec
xchg
mov
jecxz
cld
repz
gs
sub
jne
xor
cli
not
push
fisub
push
dec
lea
pusha
test
jno
mov
iret
ins
clc
std
sbb
ds
adc
sub
test
aaa
mov
(bad)
or
and
xlat
xchg
aaa
mov
jb
stos
inc
xor
jo
xchg
push
and
les
mov
jp
leave
xchg
adc
aad
loope
dec
lods
aam
jecxz
in
das
aaa
sbb
sti
fisub
xor
pop
jl
lods
inc
push
imul
das
fwait
jmp
into
xor
jo
sbb
imul
jns
movs
pop
jae
cwde
(bad)
pop
xor
aaa
mov
jb
stos
pop
loopne
ror
les
es
shl
cmps
fsub
aas
lods
jge
mov
xchg
(bad)
loopne
(bad)
dec
ins
mov
inc
jecxz
call
cld
fistp
xor
pop
dec
push
xchg
inc
sub
mov
xchg
cmp
leave
jno
sti
push
fs
int
aaa
jo
add
imul
aam
jle
mov
jb
(bad)
xchg
daa
mov
arpl
ins
inc
push
mov
ins
xchg
les
and
rol
test
aas
mov
xchg
add
jmp
xchg
push
jecxz
cmps
cmp
cmp
dec
jbe
cmp
dec
mov
dec
push
push
popf
mov
xchg
sub
fdiv
push
clc
jge
jno
int
push
inc
add
pop
stos
jns
test
xor
xor
push
pop
out
std
xchg
aaa
mov
je
scas
jp
test
dec
popf
les
and
fdivrp
sub
ins
movs
mov
outs
mov
mov
add
repnz
retf
ins
mov
push
jecxz
ficomp
and
(bad)
(bad)
pop
pushw
aas
mov
pop
mov
mov
jmp
jbe
or
int
fs
ja
lahf
sub
adc
push
lahf
mov
gs
pushf
dec
int
jb
outs
ins
push
test
mov
inc
xchg
leave
jmp
and
ins
test
add
lods
ins
add
in
retf
hlt
in
cli
bound
push
jmp
fidiv
daa
push
out
(bad)
fist
xor
es
push
lahf
inc
or
mov
xchg
pop
cmp
(bad)
(bad)
cli
sub
frstor
inc
xor
and
ds
xor
gs
mov
xor
mov
and
xchg
adc
je
stos
pop
jmp
push
out
jno
std
rol
xchg
jo
xchg
mov
add
lock
test
in
call
(bad)
fsub
and
xor
pop
ds
test
sub
pop
fdivrp
or
and
xor
lahf
das
mov
test
xor
test
(bad)
xchg
aaa
test
jne
sbb
popf
and
mov
cmp
call
jecxz
mov
popf
rcr
ins
je
mov
adc
stc
cli
cmp
pop
ins
mov
fidivr
(bad)
or
inc
xchg
pop
dec
push
mov
cs
retf
cmp
icebp
and
jno
int
sbb
sub
sbb
addr16
mov
and
fsubr
daa
mov
jb
outs
push
lods
jle
mov
inc
xchg
mov
std
retf
loopne
add
jne
mov
push
es
in
sti
dec
imul
repz
jbe
and
aaa
dec
test
pop
js
inc
or
(bad)
pop
xchg
cli
das
mov
sbb
int
push
or
xor
imul
xor
sbb
and
xchg
daa
mov
pusha
fimul
inc
lea
mov
cmps
ins
loope
push
and
rol
cwde
lahf
sar
outs
ja
xchg
sbb
mov
sbb
jbe
aaa
jo
dec
test
dec
push
test
ds
mov
mov
call
je
jns
int
ins
imul
pop
icebp
imul
push
popf
movs
mov
call
repnz
pop
push
stos
pop
(bad)
mov
aas
pushf
les
add
(bad)
(bad)
mov
jb
mov
std
xor
cmps
dec
out
lods
cmp
stc
clc
fist
aaa
jo
xor
pop
jge
mov
mov
jmp
jno
int
sbb
das
mov
mov
movs
sbb
xchg
jae
fst
(bad)
push
stos
push
retf
inc
xchg
ret
xchg
ins
icebp
xchg
pop
cs
mov
hlt
ins
stos
fwait
test
sbb
xchg
push
aaa
sbb
pop
mov
inc
jmp
fisubr
sub
cli
repz
xor
pop
imul
mov
mov
sub
pop
jmp
jns
sti
xor
jne
and
das
mov
ficomp
mov
jg
mov
ins
jmp
xchg
add
jle
mov
pusha
xchg
les
daa
xchg
mov
in
in
les
mov
sbb
aad
ins
fwait
(bad)
data16
jne
cmp
sbb
in
enter
jae
data16
adc
inc
or
test
sti
cli
or
xor
pop
sbb
xor
sub
mov
xor
adc
das
pop
in
stc
xchg
daa
mov
pusha
push
stos
dec
in
(bad)
inc
xchg
(bad)
mov
add
out
jbe
outs
movs
xchg
jae
mov
push
adc
repnz
repz
ins
mov
fidivr
sub
jbe
cmp
dec
lea
adc
mov
sub
mov
sub
je
cli
sbb
cli
jbe
gs
pop
sbb
and
das
(bad)
xor
imul
and
sbb
call
neg
mov
mov
jb
lods
jb
xchg
lock
add
fs
xchg
pop
adc
rcl
test
jle
mov
mov
xlat
mov
mov
loope
call
cld
fild
xor
or
push
test
nop
cmp
repnz
xor
pop
sbb
sub
sub
jg
movs
sbb
lahf
test
out
fist
repnz
dec
push
stos
pop
clc
(bad)
ficomp
(bad)
pushf
adc
ror
test
jb
mov
fiadd
mov
fidivr
sbb
clc
std
jbe
xor
imul
jbe
imul
ror
shr
inc
jno
into
cmp
mov
imul
add
and
xchg
xor
push
push
sahf
outs
sar
rcl
mov
(bad)
call
mov
ss
in
repnz
cdq
mov
loope
sar
cs
cld
clc
jns
pop
push
push
dec
mov
inc
cs
mov
(bad)
jmp
xor
xor
popa
add
es
mov
arpl
and
xchg
adc
jbe
mov
dec
mov
xchg
sbb
std
rol
ret
ins
ja
xchg
adc
xchg
movs
inc
in
push
push
cs
call
jo
xor
cmp
mov
jmp
add
(bad)
pop
sbb
sub
pusha
mov
adc
adc
xor
jmp
xadd
jb
gs
mov
xor
xchg
rcl
test
ins
xchg
ins
ja
popf
xchg
cld
sti
dec
imul
cmps
adc
sbb
cld
fiadd
sbb
dec
mov
gs
mov
jno
cmps
scas
ret
or
stc
addr16
pop
xor
pop
adc
add
lods
imul
adc
lahf
mov
dec
xchg
fst
aam
je
scas
push
mov
xchg
sbb
icebp
fidivr
test
pop
jnp
mov
jmp
mov
cmp
ds
(bad)
fist
xor
push
mov
inc
sub
movs
call
clc
das
mov
jne
jno
ret
jo
adc
retf
imul
outs
popf
movs
mov
xchg
lods
xchg
adc
add
icebp
xchg
lock
dec
sub
scas
xor
ins
add
je
xchg
xchg
push
adc
test
scas
cmp
cmp
call
mov
inc
or
mov
jmp
sar
fs
jmp
sbb
das
mov
mov
movs
cmp
mov
dec
leave
fist
jle
push
stos
pop
out
lock
mov
xchg
pop
and
rol
test
cmp
mov
repnz
movs
inc
jecxz
ficom
or
dec
data16
jo
pop
test
push
mov
jns
mov
fcom
jecxz
das
mov
jbe
jno
(bad)
sbb
jb
xor
or
mov
movs
cmp
mov
ins
out
cwde
inc
mov
jb
sbb
pop
loop
(bad)
dec
inc
mov
sub
fstp
(bad)
test
sbb
xchg
xor
aad
cld
sti
dec
outs
mov
push
jecxz
fidivr
sub
inc
loopne
jo
inc
lea
dec
pop
mov
push
mov
ret
aas
fistp
out
aas
mov
xor
and
cmp
mov
movs
sbb
cdq
movs
(bad)
sbb
ins
in
xchg
sbb
je
stos
xor
mov
pop
xchg
les
sub
rol
(bad)
lods
rcr
pop
popa
test
(bad)
sbb
add
ficomp
cmp
repnz
aam
jmp
jo
inc
test
outs
push
lods
push
cs
mov
mov
iret
cli
das
mov
xor
xor
jl
adc
sub
jns
je
movs
push
ja
mov
dec
call
sti
push
repnz
jl
lea
mov
dec
xchg
jecxz
lock
std
shl
sub
mov
xchg
push
adc
ror
inc
out
dec
retf
sbb
cld
fist
xor
pop
ins
and
mov
stc
outs
out
or
cmp
inc
cmp
xor
inc
and
sbb
mov
add
sub
mov
dec
out
(bad)
cdq
sbb
addr16
lea
mov
mov
mov
xchg
push
repnz
movs
mov
les
sbb
leave
xchg
cmp
jecxz
(bad)
cmp
inc
out
das
call
mov
pop
popf
xor
push
push
pusha
mov
jno
mov
fist
call
push
inc
jns
int
gs
add
cmp
imul
xor
add
and
daa
shr
leave
sbb
push
lea
mov
pop
xchg
les
adc
retf
mov
(bad)
fadd
or
mov
add
lds
mov
inc
lock
in
cmp
fist
and
inc
stos
pop
outs
dec
mov
jno
mov
mov
sub
outs
jmp
jns
(bad)
and
jo
adc
imul
and
outs
xor
jl
fistp
sbb
push
lea
mov
dec
xchg
les
ss
mov
jecxz
xchg
neg
ja
mov
adc
icebp
icebp
test
fdiv
jecxz
(bad)
cmp
ds
sti
jbe
aaa
jo
cmp
inc
or
mov
stos
cmp
cli
or
pop
int
sbb
das
mov
test
xor
sbb
and
(bad)
leave
jb
pop
jne
scas
jbe
mov
push
xchg
(bad)
mov
in
jno
std
rol
xchg
ja
sahf
test
aaa
jmp
dec
imul
repnz
fisub
xor
pop
ins
das
mov
push
lahf
movs
call
mov
mov
jbe
jno
les
sbb
mov
fild
ja
cmps
or
in
pop
cmp
xchg
aaa
mov
jb
outs
add
out
lock
xchg
les
add
shl
mov
ins
ja
mov
xlat
sbb
add
cmps
cmp
ds
call
(bad)
sbb
add
xor
or
xor
pop
fs
adc
jp
mov
mov
mov
jecxz
mov
mov
jbe
fidiv
mov
xor
movs
jno
in
shl
movs
mov
cmp
gs
mov
sbb
stc
jecxz
cld
repz
outs
mov
fidivr
sub
repnz
fbld
inc
jo
jns
pop
ins
das
mov
jge
mov
stc
outs
(bad)
clc
and
xor
and
jb
adc
imul
ja
mov
sbb
and
xchg
sbb
gs
popf
jbe
mov
dec
xchg
les
daa
icebp
loop
jnp
ins
xchg
scas
ret
pop
sar
mov
fcomip
sbb
movs
inc
jecxz
(bad)
ds
push
loopne
jae
push
stos
pop
ins
js
inc
or
mov
mov
fsub
cli
das
mov
xor
pop
or
das
mov
mov
movs
cmp
mov
ins
(bad)
fist
icebp
pop
jbe
lea
mov
fs
les
and
shl
cli
stos
ret
aas
mov
test
add
lock
movs
inc
jecxz
(bad)
es
push
outs
cmps
pop
ins
das
mov
ins
popf
mov
stc
ins
sti
cli
push
mov
xor
and
pop
cmp
jp
test
xor
or
popf
mov
dec
(bad)
xchg
aaa
shl
jb
pop
jbe
lea
mov
test
and
rol
test
aas
mov
mov
xchg
push
adc
ret
test
mov
jecxz
cmps
dec
cs
(bad)
es
dec
stos
adc
mov
pop
fwait
test
outs
(bad)
mov
push
int
fs
sbb
imul
jp
mov
dec
int
cwde
adc
sbb
pop
repz
jl
(bad)
mov
sub
rol
test
outs
test
lock
lods
dec
loope
call
cld
fisub
xor
pop
ins
cmp
inc
sub
mov
sti
jmp
xor
pop
xor
add
pop
cmps
imul
ja
movs
mov
xchg
fist
aam
jge
mov
pop
xchg
shl
sti
lock
xchg
ja
mov
repnz
movs
inc
jecxz
into
sbb
ds
push
cld
and
push
dec
test
sbb
cmps
call
out
sbb
add
xor
je
xor
ds
fisub
movs
or
lahf
mov
dec
in
fcom
add
lods
push
loop
(bad)
dec
mov
cmps
je
xchg
popa
dec
fld
popf
jnp
ins
movs
(bad)
mov
je
leave
xchg
xor
repz
imul
imul
rcl
jne
inc
stos
or
pushf
inc
cs
mov
mov
test
and
xor
pop
sub
or
loop
mov
mov
mov
mov
xchg
fst
test
je
mov
pusha
xchg
hlt
mov
lock
push
sub
ins
xchg
mov
shl
bound
mov
xlat
test
ror
lods
lods
dec
in
clc
sub
fdiv
fist
and
dec
mov
inc
pop
push
xchg
mov
mov
sub
outs
clc
call
xchg
clc
jp
jne
enter
adc
add
adc
cmps
sub
mov
pop
leave
stc
xchg
xor
dec
jbe
xchg
pop
hlt
mov
dec
mov
dec
mov
mov
jecxz
or
jno
mov
adc
(bad)
sbb
mov
jp
cmp
ds
jmp
pop
sub
dec
je
inc
cs
mov
mov
loope
or
jb
int
sbb
or
mov
jnp
test
and
sbb
ins
out
fist
pushf
add
cmp
jle
mov
dec
xchg
les
add
ret
test
out
ins
mov
push
js
fcomip
test
mov
sub
sub
mov
js
pop
lahf
mov
mov
clc
or
xor
and
jo
and
and
stos
jp
cmps
cmp
lahf
sub
fild
std
jns
push
scas
pop
hlt
mov
dec
xchg
(bad)
xchg
addr16
popa
adc
mov
cli
mov
je
xchg
mov
gs
repnz
out
jge
mov
xor
push
in
cmp
pop
jp
cmps
inc
ds
cwde
fisttp
inc
out
sbb
sub
xor
jnp
adc
imul
movs
cmp
cmps
(bad)
sbb
mov
retf
imul
lock
add
fs
push
or
ror
sub
out
lea
xor
aad
lods
scas
addr16
fisubr
and
cli
cld
retf
push
cld
cmp
xor
inc
cs
mov
mov
jmp
push
cmp
xor
fwait
or
mov
push
popf
movs
mov
aas
and
jmp
aaa
mov
jbe
lea
mov
inc
cdq
les
and
fcom
mov
inc
mov
test
add
test
mov
fs
ss
mov
inc
call
mov
inc
cs
mov
mov
repnz
or
daa
stc
pop
cmp
sub
pop
bound
push
popf
movs
test
jecxz
xchg
aaa
mov
je
test
push
xchg
fs
xchg
jno
jmp
(bad)
cmps
dec
ja
mov
fiadd
cwde
mov
ds
cld
mov
push
dec
mov
inc
push
ins
xchg
mov
mov
sub
outs
cli
jmp
xchg
clc
jb
gs
int
adc
arpl
inc
adc
or
xchg
scas
mov
not
xchg
xor
in
jo
ins
arpl
jle
mov
fs
les
and
fdiv
cli
mov
jne
mov
push
add
repnz
xchg
sahf
sub
xor
fst
xor
sbb
or
lahf
mov
mov
clc
or
sbb
xor
dec
add
fwait
push
mov
test
es
mov
aas
and
sti
test
mov
jbe
jns
pop
sbb
enter
xchg
imul
jno
(bad)
ror
(bad)
mov
xor
adc
cld
adc
movs
push
jecxz
fidivr
sub
rcr
push
call
test
dec
inc
jge
mov
mov
sub
add
clc
or
pop
mov
adc
push
test
pop
mov
push
dec
leave
fistp
repnz
push
mov
dec
xchg
rol
rol
faddp
aas
test
add
sar
nop
out
ror
fwait
lods
inc
jmp
fisubr
sub
clc
fist
xor
pop
ins
push
xchg
inc
cs
mov
mov
out
or
xor
pop
sub
adc
jle
nop
pop
xor
pop
cmp
inc
(bad)
leave
xchg
add
dec
stos
dec
repz
pop
popf
les
add
rol
mov
jo
mov
adc
aam
sbb
lods
push
in
clc
sub
rcr
fadd
xor
pop
bound
inc
sbb
mov
mov
fild
cli
add
cmp
xor
sub
movs
pop
xor
add
mov
dec
out
retf
sahf
sti
jbe
imul
mov
dec
test
test
in
dec
pop
mov
xchg
lea
(bad)
mov
ja
xchg
test
or
xchg
fwait
lods
push
cmc
dec
clc
sub
rcr
push
out
jp
dec
mov
inc
pop
or
mov
mov
fild
jecxz
xchg
clc
jb
add
int
sbb
or
sbb
or
popf
mov
dec
out
fiadd
fldcw
push
popf
push
lds
xchg
fs
push
adc
rcl
(bad)
mov
jae
mov
lock
repz
imul
ds
call
stos
sbb
inc
sub
mov
jmp
jg
int
adc
fwait
cmp
nop
dec
add
lods
(bad)
sbb
sub
out
fist
icebp
popa
inc
jb
pop
out
test
shr
(bad)
fild
stos
lds
addr16
mov
out
iret
repz
ins
jmp
cs
call
stos
sbb
sahf
inc
sub
mov
jmp
jge
shl
gs
fwait
das
mov
stos
jae
cmp
mov
jb
icebp
xchg
xor
sar
ins
arpl
pop
repz
pop
cmps
les
and
retf
test
mul
(bad)
rcr
ja
mov
out
loope
dec
push
pop
ror
and
(bad)
jmp
je
outs
mov
outs
pop
sti
inc
inc
pop
pushf
mov
xchg
sbb
int3
jg
lock
daa
lds
sbb
test
lods
aas
ja
movs
mov
sbb
dec
jecxz
fwait
aaa
mov
jbe
nop
jne
mov
inc
in
xchg
fs
pushf
arpl
push
cmp
sbb
xchg
xchg
nop
sbb
call
outs
loope
fidivr
sub
loope
fist
sbb
dec
scas
or
add
mov
mov
cli
clc
sbb
xor
xor
jo
adc
push
addr16
pop
xor
cmps
mov
out
xlat
xchg
xor
repz
ins
pop
push
stos
and
mov
inc
sbb
fs
add
std
xlat
mov
lds
mov
jne
xchg
test
add
aam
(bad)
inc
push
pop
ficom
and
mov
fist
sbb
dec
mov
inc
push
push
xchg
fild
neg
(bad)
(bad)
jbe
jge
leave
xor
das
mov
stos
jae
mov
cmps
sbb
and
test
jbe
ins
arpl
pop
repz
xor
xchg
jno
clc
aad
push
mul
(bad)
(bad)
sbb
mov
out
loope
dec
push
pop
rcl
and
cli
aam
inc
out
and
or
or
lahf
mov
scas
or
fsub
fimul
mov
jge
jno
leave
or
pop
mov
fistp
xchg
mov
pushf
pop
pop
ss
out
retf
mov
inc
push
test
fdiv
pusha
lock
dec
add
xlat
mov
add
in
test
push
cmp
fcos
dec
bound
fidivr
sub
out
mov
push
in
push
push
dec
mov
inc
pop
push
xchg
fild
in
and
inc
adc
xor
push
or
fwait
sub
mov
push
call
xor
retf
mov
inc
push
test
mov
stos
fs
add
retf
rol
(bad)
mov
jae
xchg
mov
repz
jne
mov
sub
ss
call
stos
sbb
mov
mov
fild
call
pop
jno
leave
inc
xor
daa
mov
fistp
sahf
pop
xor
mov
cmp
dec
out
fistp
loop
arpl
pop
repz
dec
pushf
int3
mov
out
nop
jno
aam
mov
pop
aad
lea
test
sbb
mov
loope
(bad)
xor
scas
js
cmp
pop
addr16
inc
aas
jns
cmps
mov
ins
loopne
or
ficom
cmp
popa
mov
mov
test
xchg
push
popf
movs
xchg
and
xlat
lahf
aaa
mov
jbe
stos
pop
jecxz
(bad)
dec
cwde
aam
inc
jmp
rol
xchg
fdiv
sahf
xchg
push
xor
stc
test
icebp
push
fwait
lods
push
leave
pop
clc
sub
hlt
fistp
aaa
push
pusha
les
pop
push
mov
jns
mov
nop
push
and
pop
out
cli
or
xor
pop
adc
or
pop
stc
jle
mov
mov
call
xchg
xor
jle
test
ins
xchg
int3
cmps
fs
call
jecxz
cmp
sar
ja
mov
les
fwait
scas
inc
in
call
cld
std
imul
les
das
mov
jno
mov
pushf
xor
clc
ud1
je
inc
xor
adc
js
adc
imul
movs
cmp
push
and
out
fcomp
repnz
jae
mov
ins
xchg
rcl
not
test
retf
(bad)
mov
addr16
mov
jmp
mov
sub
cli
(bad)
fbld
add
inc
mov
inc
cs
xchg
mov
mov
popf
nop
or
xor
or
pop
add
pop
fistp
sbb
add
mov
dec
dec
xchg
add
jbe
test
sar
and
push
in
rol
(bad)
mov
ja
mov
adc
mov
sbb
lods
push
repnz
clc
ds
ficom
jo
inc
mov
push
cmp
lods
sbb
fsub
cld
or
xor
xor
mov
shl
test
mov
(bad)
outs
daa
and
shl
(bad)
ins
jbe
fisubr
cdq
les
and
(bad)
mov
sbb
cmc
les
sahf
lods
inc
out
fcomp
cs
call
stos
sbb
test
sub
mov
jmp
jg
int
push
je
adc
jle
stos
pop
xor
mov
es
out
retf
sahf
sti
jbe
inc
outs
push
test
clc
mov
test
in
add
in
xchg
mov
ja
xchg
xchg
inc
neg
sbb
lods
push
repz
sub
mov
push
sti
xor
dec
scas
adc
fwait
dec
add
mov
fsub
test
in
pusha
pop
push
xor
or
jo
bound
jge
test
es
push
popf
cmps
mov
adc
dec
jecxz
xchg
xor
in
push
ins
push
push
popf
jg
mov
dec
cdq
les
and
rol
add
cmps
pop
ja
mov
imul
test
inc
out
rcl
cs
in
and
test
push
pop
mov
jbe
mov
stc
dec
jmp
jge
int
adc
adc
imul
movs
cmp
nop
(bad)
sbb
sub
fist
repnz
pop
push
lods
pop
cld
mov
jl
into
xchg
sbb
clc
ret
jmp
sar
jne
mov
gs
stc
out
jecxz
dec
imul
cs
call
stos
sbb
sahf
inc
cs
mov
mov
sub
outs
(bad)
jmp
pop
jne
int
adc
adc
imul
xor
mov
adc
out
retf
mov
outs
push
test
jmp
inc
in
add
rol
(bad)
mov
jae
mov
push
xor
loope
(bad)
pop
jp
lods
inc
out
fisubr
cs
in
and
outs
stos
sbb
jbe
cmps
mov
dec
jmp
popa
sbb
xor
or
fwait
cmp
test
xlat
cmp
mov
adc
and
cmc
xchg
aaa
mov
jbe
(bad)
xchg
xchg
lock
and
aam
jnp
ins
add
jge
mov
push
psubw
test
mov
cmp
ds
jmp
je
pop
pushf
pop
outs
pop
mov
test
mov
int3
cli
or
daa
fcomp
sbb
aaa
mov
test
ss
cmp
mov
cmp
xlat
xchg
push
mov
or
jge
push
xchg
jle
mov
call
adc
shl
mov
je
xchg
lea
xlat
inc
lods
push
out
shr
sub
ret
aaa
jle
push
inc
das
test
cmp
mov
mov
dec
fcomi
sbb
pop
rcr
inc
or
xchg
adc
add
sbb
pop
inc
stos
adc
mov
outs
pop
xor
fld
out
jg
scas
jne
movs
fidivr
rcl
sub
(bad)
hlt
add
js
cmp
xchg
popf
movs
add
xlat
cwde
lock
outs
jne
movs
inc
jmp
fcomp
data16
imul
add
xor
pop
or
bound
push
out
inc
push
dec
daa
cmp
les
inc
test
xor
test
fstp
xchg
xor
ret
adc
cdq
xchg
test
loop
outs
loopne
jns
sti
cli
icebp
sub
inc
test
cmps
jmp
xchg
es
cmc
stos
ficomp
push
into
pop
mov
cmp
in
idiv
and
jp
mov
jbe
xchg
inc
cs
mov
mov
loopne
das
mov
pop
fs
ret
add
sub
mov
imul
movs
cmp
movs
test
in
rol
shr
dec
popf
pop
ficomp
xchg
sbb
(bad)
popf
and
popa
xchg
imul
inc
lahf
popf
xchg
es
cmp
jnp
jbe
sub
mov
jmp
js
fldcw
sbb
push
pop
dec
jmp
sbb
enter
jge
aam
fs
push
mov
imul
aaa
mov
lahf
bound
mov
repnz
inc
push
popf
push
repz
or
mov
in
loope
scas
push
mov
sti
fsubrp
cmp
mov
test
or
sbb
jns
xor
dec
push
dec
mov
jmp
mov
jp
je
fld
sbb
das
mov
mov
pop
mov
inc
sti
fcom
repnz
arpl
pop
repz
ins
xchg
les
and
jmp
push
jecxz
mov
arpl
mov
outs
daa
std
repnz
test
out
fist
cmp
pop
ret
push
dec
ficomp
pop
push
mov
add
fild
aad
mov
aaa
leave
xor
sub
das
mov
test
mov
test
out
xchg
aaa
mov
arpl
push
repz
ins
xchg
les
and
stos
xchg
jecxz
cmc
xchg
scas
sar
imul
stc
repnz
lods
repz
ins
fwait
test
jecxz
fidivr
pop
pop
cli
cld
icebp
and
xor
dec
fstp
pop
push
mov
sub
mov
jmp
emms
jno
out
or
adc
imul
jg
mov
ja
mov
ins
out
fistp
clc
addr16
push
popf
pop
repz
inc
xchg
les
and
shl
stos
sar
pop
jae
mov
das
daa
stc
repnz
lods
jno
pop
fidivr
retf
push
in
jne
cmp
cmps
pop
add
mov
lods
inc
popf
in
jns
(bad)
or
or
push
sbb
sbb
enter
jecxz
jmp
sub
cdq
xchg
jmp
fcmovnbe
mov
out
or
je
mov
idiv
mov
in
adc
jne
and
add
outs
adc
dec
mov
pop
shl
(bad)
arpl
mov
sbb
sbb
imul
inc
fcomp
xor
dec
and
cmps
inc
sar
icebp
dec
addr16
stos
pop
fnstenv
xchg
dec
out
add
repnz
mov
ja
xchg
mov
add
repnz
es
mov
into
sub
repnz
fld
pop
jg
outs
mov
push
inc
psllw
mov
jmp
jge
jno
out
pop
fs
and
fild
mov
jnp
mov
pop
out
rcl
repnz
jbe
lea
mov
call
mov
test
xchg
ins
xchg
(bad)
call
push
jmp
jge
mov
cmp
(bad)
(bad)
fist
ds
dec
stos
sbb
mov
jp
xchg
mov
cmp
std
sbb
cmp
xor
jo
adc
jns
mov
jne
mov
dec
out
rcl
les
je
pop
cmc
mov
xchg
pusha
in
jno
repnz
mov
addr16
cmc
ss
lock
mov
fnstsw
sub
(bad)
out
(bad)
push
jmp
jo
xor
inc
sub
stos
cmps
cdq
xor
lods
pop
jmp
imul
add
add
imul
movs
aas
addr16
scas
lahf
sbb
int
lahf
aaa
mov
jbe
lea
mov
pop
xchg
xlat
and
rol
mov
bound
sti
out
cld
lock
ins
pushf
mov
xor
int3
push
jmp
jo
pop
stos
or
push
cmp
cmps
mov
inc
in
dec
mov
jl
jno
(bad)
xor
das
call
cmp
sbb
xor
mov
mov
jb
sub
lock
xchg
xchg
adc
test
std
fbstp
mov
outs
test
repnz
(bad)
dec
data16
scas
push
imul
sub
cmp
(bad)
jmp
scas
pop
pusha
pop
xchg
inc
sub
movs
mov
push
jmp
jge
fadd
jo
push
out
das
scas
daa
(bad)
imul
xor
xor
std
xchg
xor
jb
stos
pop
shl
xchg
arpl
xchg
jbe
fcmovnbe
add
fadd
aas
cmps
add
push
aaa
rol
fcmovu
pop
ins
fwait
lods
inc
jecxz
leave
xor
ds
cld
iret
jbe
xor
dec
stos
xor
cs
retf
cs
js
div
bound
int
sbb
adc
jg
lods
jnp
movs
sub
mov
imul
xchg
daa
mov
jb
addr16
push
stos
inc
loope
lock
mov
xchg
jae
xchg
jbe
std
(bad)
mov
loopne
stos
test
outs
jnp
mov
repnz
fadd
push
call
cld
xlat
inc
clc
xor
pop
push
pop
lea
iret
push
cli
or
xor
or
pop
sub
(bad)
push
movs
xor
mov
jl
shl
repnz
lock
adc
jl
jecxz
and
fcom
stos
into
das
stos
inc
ja
mov
push
sbb
retf
sti
push
ins
xchg
test
cmp
cmp
cld
leave
inc
jmp
sub
pop
ins
push
movs
inc
sub
nop
(bad)
stos
aas
and
outs
jmp
jno
fnsave
or
sub
add
push
cmps
cmp
movs
fwait
imul
xchg
adc
dec
inc
popf
pop
in
hlt
pusha
xchg
fucomp
dec
out
data16
mov
(bad)
aas
test
add
cli
cli
hlt
cld
sti
dec
pop
fwait
lods
inc
jmp
fidivr
and
cli
not
jbe
es
or
mov
jp
cmps
call
cli
or
sub
xor
and
lods
js
movs
ds
mov
dec
ret
mov
and
cld
popa
aam
jo
stos
pop
repz
xchg
hlt
mov
jmp
(bad)
mov
lods
stos
shl
ins
ja
xchg
test
aaa
mov
sbb
fadd
sub
cli
lock
adc
inc
mov
outs
push
cdq
inc
cs
mov
stc
imul
or
and
push
sub
adc
imul
xor
lahf
sbb
and
jmp
add
pop
push
stos
push
stc
mov
ins
mov
xchg
jne
mov
mov
mov
ja
pushf
adc
shl
sbb
scas
aaa
jecxz
clc
sub
cmp
in
cmp
das
ins
push
mov
jge
fnstsw
jmp
jno
mov
xor
sub
outs
aaa
mov
test
out
int3
test
mov
jne
cmps
jle
mov
pop
xchg
rol
sti
mov
imul
test
sbb
test
jp
sub
cli
(bad)
repz
in
dec
push
inc
stos
sbb
cs
lds
outs
jmp
jne
std
pop
sbb
das
leave
pop
fld
test
xor
cld
xor
sti
xchg
daa
mov
pop
push
stos
pop
(bad)
and
lods
add
cmps
(bad)
aas
test
pusha
mov
mov
test
lds
lods
scas
inc
jecxz
fisttp
ds
fist
sub
pop
ins
push
scas
inc
cs
mov
mov
jmp
jle
int
ins
jo
xor
fild
mov
mov
dec
call
loop
pop
push
lea
mov
pop
mov
xchg
ja
xchg
jno
leave
rcl
fwait
scas
ror
pop
ja
test
push
aaa
icebp
loopne
retf
ins
fwait
aam
jecxz
fidiv
push
call
fistp
dec
das
lods
inc
cs
mov
fbstp
loop
mov
push
imul
add
fwait
das
leave
pop
fld
mov
mov
je
test
in
int3
test
mov
inc
push
lea
mov
dec
mov
cmps
outs
int
push
push
in
test
ins
and
(bad)
out
test
aaa
cli
test
popf
dec
jecxz
fist
cs
(bad)
fist
sbb
dec
mov
jle
pushf
pop
imul
or
clc
jne
inc
xor
sbb
sub
add
dec
inc
movs
cmp
mov
dec
out
xchg
aaa
mov
bound
std
mov
push
xchg
les
and
shr
lahf
stos
call
xchg
mov
sbb
stc
repnz
jmp
dec
mov
into
ds
call
mov
ins
push
lods
inc
cs
mov
ret
pop
fbld
(bad)
or
ss
xor
das
pushf
and
ins
inc
test
xor
test
out
fild
bnd
bound
dec
xchg
not
and
clc
test
lock
(bad)
lods
lds
scas
jp
xchg
leave
scas
push
aaa
loope
mov
repz
jg
lods
dec
rcr
ds
cld
jmp
push
dec
stos
dec
inc
mov
jno
call
jmp
jno
les
sbb
and
push
stc
push
cmps
sbb
xchg
mov
dec
in
cmc
xchg
daa
mov
sbb
stos
outs
shl
xchg
addr16
jno
in
test
sar
addr16
mov
push
daa
loope
sbb
stos
push
int
into
ds
jmp
push
inc
mov
dec
cs
xchg
outs
jmp
jno
leave
adc
adc
sbb
mov
movs
cmp
mov
pop
in
icebp
xchg
daa
mov
push
mov
inc
loop
xchg
arpl
mov
add
(bad)
xchg
sub
ins
lea
fs
mov
repnz
add
(bad)
sbb
push
loop
jo
push
mov
xor
jns
movs
call
xlat
or
xor
xor
sub
or
mov
pop
out
rcl
les
push
mov
ins
mov
xchg
rcl
test
ins
or
je
stos
adc
in
clc
and
inc
loopne
fnstcw
cs
jmp
pop
mov
inc
add
mov
mov
cs
ins
enter
retf
popa
sbb
xor
pop
add
pop
fcomp
test
sub
push
dec
and
iret
xchg
add
jle
stos
pop
shl
xchg
arpl
mov
sub
shl
(bad)
movs
retf
imul
sbb
stc
cli
mov
repz
jns
fwait
inc
jecxz
stos
xor
cmp
cld
fist
ss
dec
test
inc
sub
xchg
mov
mov
cli
or
xor
xor
fwait
das
mov
stos
pop
xor
or
xor
std
ja
dec
jbe
mov
inc
xchg
(bad)
mov
and
shr
lahf
stos
ret
push
push
xor
lds
mov
cmp
cs
inc
jo
dec
mov
ins
push
call
mov
cli
cli
or
es
sbb
cmp
test
xor
(bad)
sbb
sbb
sti
jb
gs
cmps
inc
div
sub
add
(bad)
mov
mov
jne
movs
not
jmp
sbb
stos
inc
jecxz
icebp
cmp
sbb
mov
push
xchg
sub
sub
mov
ins
xchg
ret
cmp
clc
das
mov
inc
fs
int
adc
das
mov
stos
jg
movs
xor
mov
inc
out
fist
lock
lods
outs
lock
ins
xchg
les
add
shr
mov
fs
xchg
test
xrelease
xchg
lods
inc
jecxz
lock
ss
fist
je
dec
mov
dec
push
xchg
jp
mov
mov
out
fsubr
shl
fs
jmp
xor
sub
mov
mov
(bad)
pop
aaa
sbb
xchg
adc
jbe
stos
pop
idiv
xchg
fs
push
adc
jmp
add
push
movs
xchg
ja
lds
(bad)
into
ror
movs
inc
out
call
hlt
fnstenv
sbb
xor
pop
ins
mov
jns
call
call
dec
inc
add
ret
jge
cmp
imul
add
(bad)
ins
out
fist
ins
jge
mov
dec
cmp
test
in
push
das
rol
xchg
add
cld
repz
jns
lods
dec
jecxz
clc
cmp
push
pusha
mov
das
mov
cdq
mov
outs
stc
cli
or
cli
jbe
push
xor
or
jo
add
inc
pusha
sahf
push
inc
movs
cmp
cwde
(bad)
or
cmps
aaa
mov
jbe
fistp
mov
dec
xchg
les
sub
shl
movs
stos
stos
push
test
gs
stc
stc
test
icebp
push
jecxz
scas
ds
ds
cld
fdiv
xor
ins
dec
dec
lahf
jnp
jns
mov
xchg
aas
fldenv
(bad)
aas
xchg
std
jae
jnp
into
pop
(bad)
push
adc
aas
mov
mov
aam
outs
mov
popa
call
les
push
stos
pop
div
sbb
sti
retf
mov
(bad)
mov
ja
sahf
nop
adc
fsub
test
frstor
fwait
test
jecxz
fcomp
sub
jbe
pop
jo
inc
mov
inc
cs
mov
mov
sar
mov
and
xor
das
mov
lods
pop
xor
pop
aaa
aaa
ins
in
rcl
aam
outs
push
stos
pop
aad
lock
mov
xchg
je
xchg
inc
xor
rcl
cmps
ret
das
sahf
sbb
mov
adc
fimul
inc
jmp
fidivr
push
sbb
in
cmc
push
clc
ds
outs
stos
or
mov
jp
cwde
call
icebp
or
xor
xor
ds
fbld
mov
ja
movs
movs
sbb
pusha
(bad)
fist
ret
push
fmul
mov
dec
mov
mov
test
call
les
mov
mov
sti
add
pop
shl
or
out
in
not
ss
pop
mov
inc
sbb
mov
sbb
imul
or
and
xor
das
mov
movs
outs
xor
lahf
push
inc
and
xchg
aaa
mov
jbe
stos
jb
mov
xchg
dec
out
xchg
dec
add
shl
lods
test
aas
lods
outs
jg
mov
addr16
icebp
jecxz
(bad)
dec
ins
xchg
add
stos
cmp
adc
cld
fistp
ss
cmp
mov
dec
call
inc
in
cli
pop
sti
jne
popa
xor
sbb
sub
pusha
sub
mov
dec
out
ficom
test
mov
push
sahf
les
push
std
ror
xchg
jb
xchg
test
dec
fcomip
sub
lods
jb
jp
dec
cs
(bad)
sub
pop
dec
push
mov
jns
sar
ror
mov
pop
fs
and
xor
pop
cmp
ins
pusha
lods
ja
mov
mov
aaa
and
sbb
jne
movs
push
repz
pop
xchg
(bad)
mov
adc
shr
scas
shl
ins
je
sahf
mov
sbb
icebp
sub
push
ins
xchg
lods
inc
jecxz
into
xor
iret
inc
clc
xor
or
and
mov
mov
sti
cli
das
lahf
sti
jae
inc
xor
cmp
jle
cmp
stos
push
mov
lahf
sbb
and
in
xchg
aaa
mov
jp
popf
dec
jecxz
(bad)
dec
add
jno
mov
test
aad
and
ja
mov
push
daa
iret
jmp
lods
inc
jecxz
ficom
cs
mov
push
call
mov
inc
cs
(bad)
mov
mov
jmp
pop
and
xor
pop
add
and
arpl
push
mov
pop
dec
rcr
adc
jo
lea
mov
mov
xor
shr
xchg
stos
sar
outs
ja
mov
clc
adc
mov
cmp
fistp
jo
push
stos
pop
outs
jo
inc
sub
mov
fsubr
cli
pop
icebp
jbe
jns
into
cmp
das
mov
mov
ja
mov
inc
(bad)
xchg
xor
sbb
jle
mov
jl
les
and
shr
test
ins
je
mov
push
cmp
jmp
jmp
inc
ins
popf
lods
inc
loope
call
(bad)
fsub
xor
sbb
xchg
jp
mov
mov
fdivrp
sbb
inc
int
push
or
pop
fisttp
test
and
(bad)
sbb
and
rcl
repnz
push
stos
pop
out
lock
fwait
les
and
shl
lea
push
xchg
movs
test
cld
repz
outs
fwait
lods
inc
in
fidivr
pop
sbb
(bad)
fst
aaa
inc
sub
jne
push
mov
jne
stos
mov
outs
out
or
xor
pop
adc
sub
test
xor
xchg
test
call
cdq
aaa
mov
jo
stos
pop
repz
dec
xchg
mov
jo
xchg
jno
std
inc
stos
into
push
sahf
outs
jne
call
cld
jecxz
push
mov
(bad)
cmp
ds
hlt
int
cdq
and
push
dec
test
inc
sub
mov
mov
sub
outs
enter
in
jbe
jns
int
xor
push
adc
jnp
test
and
sbb
and
stc
xchg
aaa
mov
pusha
push
mov
dec
out
xchg
popa
out
xchg
push
and
shl
xchg
sar
pop
ja
mov
jecxz
(bad)
dec
ins
mov
push
sub
out
rcr
inc
call
fstp
dec
push
test
mov
dec
jno
push
sbb
das
mov
mov
stos
cmp
mov
pop
aaa
push
ins
out
xor
ins
jbe
stos
dec
repz
dec
xchg
rcl
sub
sti
mov
(bad)
test
fs
mov
clc
(bad)
(bad)
dec
dec
fwait
lods
inc
jmp
not
push
call
stos
push
dec
push
add
lahf
movs
call
ret
clc
inc
fs
ret
pop
sbb
adc
das
mov
test
or
(bad)
sbb
es
out
fcom
push
in
cmc
dec
add
inc
leave
fwait
push
sub
rol
sahf
ret
ja
xchg
mov
jmp
scas
inc
jmp
rcr
jbe
sbb
dec
mov
inc
ds
mov
mov
fwait
cli
sbb
inc
into
xor
je
and
or
test
sub
adc
and
fst
bnd
push
stos
inc
repz
inc
call
xchg
inc
and
ins
or
ja
mov
pop
aaa
(bad)
sbb
movs
ins
jecxz
(bad)
cs
fist
aaa
jo
push
cmps
pop
ins
push
stos
inc
sub
scas
cmp
fsubr
mov
xor
pop
sbb
das
xchg
and
arpl
jg
fdivr
push
lahf
mov
sbb
pop
ins
jecxz
pushf
aaa
mov
jbe
stos
dec
repz
xchg
ins
in
jno
jmp
test
repnz
ja
mov
repnz
movs
dec
jecxz
into
ds
(bad)
fist
xor
sbb
mov
jp
mov
mov
clc
cli
or
add
and
inc
add
and
sbb
ins
dec
movs
cmp
mov
dec
in
leave
xchg
adc
push
lea
mov
push
mov
xchg
je
xchg
push
add
rol
test
aas
mov
cmps
push
xor
loope
fcmovbe
dec
imul
repnz
lods
push
loopne
jnp
pop
stos
inc
jo
arpl
mov
jmp
jne
mov
adc
imul
xor
cmp
xchg
(bad)
sbb
sti
aaa
mov
pop
repnz
je
stos
pop
repz
dec
xchg
out
xchg
ins
loope
push
sub
aad
add
jl
(bad)
scas
enter
jge
mov
adc
stc
repnz
cld
sti
pop
jg
fwait
gs
clc
ds
fisub
jo
inc
stos
pop
fs
mov
imul
cli
push
xchg
clc
jae
jno
int
or
das
mov
mov
add
and
fcom
stc
gs
xchg
mov
ins
xchg
les
adc
shl
sub
mov
xchg
aaa
stc
repnz
cld
repz
js
lods
inc
in
pop
fidivr
or
cli
repnz
xor
adc
push
mov
jns
mov
fisttp
repz
and
xor
sub
or
inc
sar
movs
sub
mov
ins
(bad)
iret
xchg
aaa
mov
pop
push
mov
dec
adc
jl
xchg
jnp
std
shr
lahf
scas
sar
jnp
lods
xchg
test
daa
xrelease
mov
pusha
jecxz
retf
ds
not
xor
dec
stos
push
push
mov
or
lahf
xchg
pushf
aaa
or
outs
loop
or
xor
pop
adc
adc
jp
test
cmp
sub
fist
cmc
jge
push
xchg
mov
dec
xchg
les
add
shl
(bad)
fcmovnb
sbb
test
cmp
(bad)
dec
pop
mov
(bad)
das
add
repnz
fist
xor
sbb
jo
inc
sub
mov
iret
cmp
icebp
or
hlt
jbe
jne
lds
sbb
sub
stos
push
aaa
movs
aaa
push
sahf
mov
bound
clc
jb
sbb
test
repz
dec
xchg
les
xor
ror
lahf
test
ja
test
push
xor
inc
cwde
mov
pop
lock
fstp
aaa
jo
jle
pop
ins
and
mov
mov
fld
stc
or
xor
xor
arpl
adc
push
movs
adc
mov
dec
out
xchg
xor
jno
test
repz
dec
xchg
les
xor
shl
mov
ins
ja
sahf
adc
iret
sti
xor
dec
ins
lahf
lods
inc
jecxz
fidivr
fistp
xor
jle
pop
push
imul
or
cmp
sbb
jo
cmp
imul
aaa
cmps
cmp
mov
arpl
into
xchg
sbb
jbe
lods
dec
hlt
mov
pop
xchg
les
and
rcl
mov
aas
test
ja
mov
push
aaa
(bad)
test
mov
ss
call
movs
or
push
mov
jge
mov
mov
jmp
popa
and
xor
das
mov
test
add
sbb
and
xchg
add
push
push
stos
pop
jmp
lock
xchg
les
and
rol
test
aas
test
inc
mov
test
(bad)
dec
jl
lods
dec
lock
fisubr
sbb
cli
stc
fist
xor
sbb
add
stos
cmp
(bad)
push
cmps
div
je
iret
xor
inc
push
adc
inc
arpl
ja
mov
dec
jmp
aam
push
push
popf
push
aad
lock
xchg
cmps
addr16
xchg
popa
xor
rol
mov
aas
stos
popa
ja
cdq
xchg
push
aaa
(bad)
fadd
fwait
xchg
ins
jecxz
fcomp
sub
fxtract
fsub
cmp
sbb
mov
mov
mov
ret
xchg
jbe
jb
int
adc
sub
test
daa
movs
cmp
mov
jl
fist
repnz
push
push
lea
mov
dec
fwait
(bad)
cmps
je
xchg
jno
not
mov
mov
ja
mov
push
daa
mov
sbb
scas
jbe
jp
sub
ds
cld
fist
sub
pop
jge
mov
mov
xchg
xor
fbld
or
xor
xor
add
pop
xlat
pop
pusha
test
add
sbb
and
int
aaa
sahf
fnstenv
data16
mov
fs
xchg
not
mov
sti
ins
or
ja
mov
lock
lock
outs
mov
fstp
cs
jmp
pop
mov
jns
mov
mov
cs
ins
int3
cli
or
ss
sbb
and
test
or
sbb
xchg
aaa
mov
pop
aam
jbe
sbb
dec
xchg
in
xchg
adc
test
std
test
aam
lods
outs
push
xchg
mov
repnz
repz
add
fidiv
pop
ds
clc
fst
xor
sbb
mov
jns
mov
outs
out
or
xor
xor
je
adc
imul
xor
(bad)
sbb
adc
int
loop
jbe
sahf
push
div
xchg
iretw
loop
xor
loopne
daa
fld
movs
sar
push
je
mov
cmp
shl
adc
lods
pop
fwait
jbe
ds
stc
(bad)
fist
xor
pop
imul
and
lahf
mov
(bad)
addr16
dec
and
pop
push
dec
add
add
inc
push
adc
cmp
mov
aaa
add
xchg
xor
adc
dec
mov
ins
xchg
out
push
xlat
mov
xchg
add
ins
mov
pop
arpl
call
fadd
jno
fwait
lods
je
je
and
cli
out
int3
jl
xor
pop
push
xchg
jns
mov
mov
jmp
imul
add
add
jg
movs
sub
mov
dec
in
int3
mov
mov
push
push
test
retf
mov
dec
xchg
push
and
mul
(bad)
test
jnp
mov
jl
stc
lock
(bad)
pop
jg
scas
xor
pop
retf
sbb
(bad)
fist
push
or
dec
mov
mov
stos
cmp
dec
add
xor
push
add
pop
fisttp
mov
jg
mov
dec
sti
fbstp
sti
inc
jbe
mov
jl
enter
sahf
jns
enter
rep
lea
outs
ja
lds
xchg
(bad)
gs
popf
fwait
inc
sti
dec
int
sub
jmp
or
ins
push
mov
add
and
outs
sti
lock
xor
daa
aas
pop
add
add
imul
xor
cld
or
pop
call
call
push
cmps
pop
shl
jge
xchg
popa
and
rcl
movs
stos
in
sahf
outs
jb
mov
push
push
(bad)
out
(bad)
jno
fwait
scas
inc
ficomp
daa
ss
xlat
fist
adc
push
mov
ins
push
add
test
cmp
ins
(bad)
or
ss
sbb
cwde
cmp
xor
inc
pusha
mov
jne
mov
pop
jmp
repnz
jp
stos
pop
std
mov
xchg
div
imul
xchg
aas
stos
push
ja
mov
adc
inc
sbb
fwait
jne
push
into
or
ds
clc
fld
add
mov
dec
aaa
push
lahf
mov
leave
pop
xchg
idiv
mov
adc
xor
jnp
adc
pop
mov
fidivr
mov
arpl
and
std
xchg
xor
add
div
xchg
push
std
rcl
(bad)
ffreep
sub
pop
jp
mov
sbb
stc
lock
(bad)
dec
data16
lods
push
into
jp
cmp
dec
fdivr
sti
inc
loopne
je
pop
fstp
jle
jmp
jns
xchg
mov
ins
(bad)
cli
shld
push
push
xor
sbb
jo
add
icebp
outs
pusha
mov
outs
cwde
mov
xor
add
cmc
cwde
aaa
test
push
fidivr
push
scas
dec
repz
cmp
xchg
jno
xlat
rcl
xchg
sar
pop
je
mov
loop
iret
hlt
cmp
push
jecxz
fisttp
ds
fist
inc
jo
dec
sbb
cs
movs
mov
jmp
jne
loop
xor
and
imul
xor
lods
(bad)
adc
and
in
cmc
xchg
adc
add
mov
inc
fwait
les
and
rol
test
outs
jo
mov
or
repz
imul
stc
out
jbe
aaa
js
dec
mov
push
push
mov
push
xchg
mov
mov
sub
sbb
cmp
pop
pop
push
add
pop
mov
mov
je
mov
dec
in
in
xchg
aaa
mov
push
push
popf
push
push
mov
(bad)
xchg
jno
jmp
imul
mov
aaa
sti
out
in
lock
ins
cwde
test
cmp
loop
jmp
lods
sbb
mov
pop
lahf
mov
mov
enter
fidiv
ds
fs
add
pop
fistp
mov
movs
adc
mov
inc
call
xchg
inc
test
jb
jne
push
stos
pop
test
xchg
push
std
fiadd
test
jb
test
push
add
rol
fwait
ret
ins
jecxz
fidivr
daa
ds
lock
sub
das
ins
push
mov
cs
mov
mov
jmp
jno
not
sbb
das
mov
xlat
imul
mov
ja
scas
(bad)
sbb
ds
std
xchg
cmp
clc
jb
ins
js
or
(bad)
ins
mov
xchg
jg
call
movs
mov
ja
mov
xchg
cwde
stos
inc
(bad)
jp
ds
cld
fist
xor
dec
stos
or
mov
jns
(bad)
mov
outs
out
cld
or
xor
pop
sbb
das
fwait
pop
fild
mov
sar
jae
xchg
test
out
fbld
icebp
dec
je
stos
pop
repz
dec
xchg
not
add
aad
add
jne
(bad)
cmps
in
aas
test
pop
xchg
xchg
xchg
aaa
stc
hlt
mov
repz
inc
mov
fisubr
and
inc
popf
xor
sbb
ds
xchg
mov
mov
(bad)
cli
or
es
sbb
sub
test
cmp
mov
dec
in
xchg
adc
push
stos
pop
test
arpl
cld
push
cs
inc
stos
fnstcw
mov
fs
fld
fwait
lods
inc
lea
ds
sbb
dec
push
ret
sub
ins
pop
mov
popa
lahf
cmps
mov
inc
jmp
inc
xor
adc
outs
jae
ja
mov
test
call
xchg
aaa
mov
jbe
stos
outs
repz
lock
mov
or
hlt
test
jecxz
movs
(bad)
scas
iret
sbb
test
aaa
icebp
hlt
sbb
dec
push
pop
fidivr
pop
cmp
into
xor
sbb
mov
popa
lahf
xchg
jmp
gs
push
xor
adc
imul
xor
or
and
xchg
xor
jae
test
pop
xchg
les
sub
shl
mov
outs
ja
xchg
xor
dec
ins
xchg
mov
jecxz
call
mov
inc
loop
jo
dec
mov
dec
push
sahf
inc
or
mov
adc
fisttp
cli
or
ds
push
pop
add
pop
fidivr
mov
movs
cmp
mov
in
xchg
add
jecxz
repnz
sub
loopne
cmps
fs
pop
sub
loope
adc
jne
fwait
stos
clc
aas
test
pop
mov
stc
repnz
cld
dec
fwait
mov
ds
push
repnz
scas
push
in
aas
jns
dec
stos
add
je
push
sub
mov
jmp
jno
int
or
cmp
cmp
xor
mov
inc
(bad)
xchg
xor
jbe
mov
dec
cwde
les
stc
rol
test
ins
je
mov
repnz
lods
inc
jecxz
(bad)
cmp
adc
cmc
fistp
aaa
jo
outs
test
inc
sub
mov
stos
cmp
stc
add
clc
jne
popa
xor
cmp
sub
or
push
mov
(bad)
ins
in
rcl
repnz
pop
push
mov
dec
movs
les
and
or
ja
mov
(bad)
mov
test
test
in
fld
sub
jbe
pop
jo
dec
sahf
pop
dec
push
std
inc
ds
mov
mov
and
push
cli
or
add
pop
pop
inc
add
cdq
pop
mov
test
aaa
movs
sub
(bad)
sbb
and
rcl
aam
inc
push
mov
dec
movs
(bad)
xchg
fs
xchg
inc
and
ins
sub
ja
test
push
adc
fadd
mov
inc
xchg
jp
cmp
sbb
vmovmskps
pop
jo
jle
or
mov
cmp
xchg
call
fisttp
mov
jbe
gs
cmp
push
add
xor
dec
ins
mov
pop
push
popf
mov
sbb
and
fistp
test
mov
jl
fst
or
rol
cli
mov
cmp
pop
jg
mov
add
cli
fadd
lahf
mov
ds
push
fild
jo
outs
stos
or
mov
test
mov
jmp
jno
mov
add
imul
or
sbb
and
std
and
in
div
pop
xor
lock
or
xor
test
pop
xchg
mov
cmp
and
pop
lahf
xchg
dec
test
aaa
dec
mov
int3
push
out
popa
sbb
stos
pop
inc
push
mov
jb
mov
scas
inc
sti
out
and
and
and
jl
cmp
ins
pusha
scas
jg
movs
ds
mov
cmp
and
fist
repnz
je
fist
mov
dec
fwait
les
sub
jecxz
mov
pop
data16
ret
daa
stc
out
fpatan
dec
push
pop
iret
dec
sub
cli
in
rol
or
pcmpgtw
xchg
jno
mov
mov
call
inc
outs
add
pop
adc
adc
fistp
stos
jg
movs
cmp
in
mov
fistp
repnz
jbe
scas
popa
jmp
push
icebp
xchg
jno
call
sbb
inc
xchg
pop
ja
mov
or
faddp
dec
fs
mov
ficom
ds
clc
fist
aaa
jo
popa
sbb
jo
inc
cs
mov
mov
lahf
cli
or
inc
jecxz
das
jo
adc
das
mov
fisubr
mov
je
cmps
(bad)
sbb
sub
fistp
aam
jle
stos
pop
repz
mov
or
rol
mov
xchg
mov
repnz
fwait
pop
jecxz
fmul
sub
stc
out
jmp
scas
pop
ins
push
movs
inc
sub
int
cmp
cli
or
dec
int
push
pusha
add
shr
stos
dec
xor
lea
es
jmp
mov
test
jle
popa
jbe
test
jl
les
sub
rol
xchg
stos
sar
outs
ja
lds
mov
or
mov
stos
adc
daa
neg
sti
dec
in
push
push
es
test
mov
fucomp
adc
or
sub
add
cmp
push
jnp
jo
mov
mov
add
jmp
push
cmp
xchg
out
mov
mov
mov
and
lock
jl
mov
in
rcr
nop
mov
lds
jmp
fld
fist
xor
pop
fs
mov
pop
lahf
cmps
lods
mov
rcl
or
out
push
push
popa
inc
int
sbb
and
mov
ja
movs
cdq
push
and
stos
xchg
xor
jbe
mov
push
xchg
out
dec
in
inc
and
rol
mov
push
test
repnz
fwait
lods
jnp
jp
(bad)
mov
shl
or
add
push
test
or
stos
retf
iret
xor
xlat
jg
fcomp
movs
clc
bound
int
jae
add
nop
and
pusha
test
add
mov
in
scas
xchg
ds
pop
push
stos
pop
jmp
lock
add
popa
leave
xchg
push
daa
mov
mov
out
ins
add
ja
test
adc
inc
test
hlt
bound
inc
clc
jne
das
sub
ret
fcmovu
jbe
adc
dec
mov
and
mov
iret
ins
ret
enter
jb
rol
adc
cwde
push
mov
outs
mov
xor
mov
dec
out
xchg
cmp
jp
lea
mov
dec
xchg
xchg
dec
in
popa
and
popa
add
ja
mov
loope
jmp
dec
ins
xchg
lods
inc
jecxz
clc
cmp
fisttp
pop
jo
inc
cwde
cmp
mov
jns
mov
mov
jmp
jns
cli
sbb
jo
adc
imul
xor
sub
sub
retf
xchg
mov
pop
jo
lods
push
cmc
mov
pop
pushf
les
and
(bad)
mov
mov
je
mov
adc
cld
add
lods
outs
jecxz
fmul
sbb
jmp
dec
xchg
fs
mov
jp
mov
mov
stc
loope
xchg
jbe
add
int
or
pop
mov
xlat
gs
test
and
mov
dec
in
fst
sub
scas
dec
rep
loopne
mov
cmps
adc
rol
mov
arpl
icebp
repnz
mov
ds
pop
lock
pop
push
mov
push
lahf
mov
mov
out
push
xchg
jbe
jno
int
xor
add
jnp
test
daa
movs
cmp
lods
mov
dec
jmp
mov
mov
dec
je
pop
cmp
push
sti
aad
adc
jg
(bad)
scas
jmp
xchg
sbb
hlt
adc
fwait
inc
jecxz
lock
rol
push
pop
push
xor
jns
popf
xchg
xchg
dec
ds
mov
adc
and
and
test
and
dec
jnp
mov
inc
aam
mov
lds
push
mov
dec
mov
xchg
jno
fcmovnbe
xchg
fwait
sbb
(bad)
push
addr16
mov
and
std
cli
sbb
mov
ds
mov
push
(bad)
push
pop
pop
ins
scas
pop
pusha
ins
mov
sbb
test
mov
out
cli
or
jno
mov
adc
adc
das
mov
test
add
mov
or
and
lods
add
popa
jbe
adc
test
jmp
jecxz
lods
sbb
or
test
add
cmp
scas
push
jnp
cmp
xor
vmovmskps
and
pop
stos
outs
push
xchg
push
stos
movs
test
(bad)
ficom
mov
cmp
sbb
mov
scas
je
sbb
ins
and
xchg
adc
and
in
mov
mov
imul
sub
xchg
std
js
les
call
nop
sbb
jge
pushf
mov
je
leave
movs
push
aaa
cmc
bnd
out
pop
cwde
test
cmp
sbb
jmp
push
clc
inc
jo
jle
sbb
inc
mov
jno
mov
mov
out
stc
or
xor
cmp
das
lods
and
jp
add
mov
ja
mov
neg
cmps
aaa
mov
pop
repnz
je
stos
pop
repz
lock
xchg
mov
add
out
rol
xchg
mov
ja
mov
repnz
lods
inc
jecxz
(bad)
xor
cmp
icebp
fistp
xor
pop
imul
imul
mov
mov
cmp
and
nop
sub
stos
js
stos
cmp
mov
dec
(bad)
xchg
add
pop
push
mov
push
xchg
les
and
(bad)
nop
adc
adc
mov
shl
fs
mov
adc
jmp
jp
call
out
or
cmc
in
ret
jl
sbb
cmp
cdq
arpl
jb
test
xchg
push
or
js
in
add
aad
push
inc
daa
aas
mov
and
imul
pusha
mov
cld
and
cmp
scas
mov
ret
jge
inc
stos
pop
stc
mov
pop
xchg
icebp
test
loope
jle
out
rol
retf
cmp
imul
nop
add
cld
out
push
mov
jnp
pop
fisttp
push
pop
jmp
push
dec
sbb
jl
sub
mov
mov
cli
add
in
jbe
dec
ss
sbb
das
mov
shr
movs
jg
movs
xor
cmps
xchg
(bad)
and
jmp
jno
addr16
push
test
fnstenv
xchg
jl
mov
xchg
lock
xchg
lahf
lods
sar
outs
ja
mov
repnz
repz
ins
cwde
stos
xor
daa
aam
fist
xor
sbb
inc
mov
imul
sub
imul
rsm
cld
inc
jb
into
pop
push
inc
add
push
retf
imul
cmp
cmp
in
aaa
mov
jbe
stos
dec
rep
loopne
and
adc
xchg
jno
std
ror
xchg
stos
lds
test
jno
mov
push
aaa
stc
add
pop
fisub
cs
retf
push
dec
test
ins
push
cdq
pop
push
dec
lahf
mov
mov
jmp
push
xor
daa
and
sbb
test
cmp
(bad)
sbb
xchg
adc
jo
stos
pop
rcl
xchg
jl
xchg
jl
sti
ror
pushf
mov
dec
movs
outs
ja
leave
test
adc
ret
out
dec
mov
sub
fist
xor
pop
imul
and
mov
mov
(bad)
adc
sbb
aaa
or
sbb
es
scas
jg
movs
cmp
mov
dec
call
out
outs
push
lea
mov
dec
mov
nop
push
and
ret
loope
movs
movs
xchg
les
test
inc
xchg
mov
push
cmp
in
(bad)
pop
fs
mov
cmp
ds
fmul
push
in
sbb
sbb
or
xor
popa
cmps
mov
fisttp
or
inc
int
sbb
push
mov
stos
dec
xor
mov
cmp
xchg
aaa
mov
jbe
stos
jle
xor
xchg
iret
mov
fmul
(bad)
sub
dec
xchg
(bad)
mov
jg
xchg
or
outs
ins
cdq
cmps
dec
jecxz
retf
cmp
(bad)
fist
inc
jo
push
in
sub
mov
into
xor
fiadd
cli
or
add
xor
inc
push
and
add
pusha
test
xor
sbb
pop
ins
out
fbstp
outs
inc
push
test
fs
and
ins
and
pushf
mov
aam
(bad)
pop
ins
fwait
cmps
xor
cs
retf
in
jo
jle
pop
ins
and
xchg
mov
addr16
or
inc
retf
pop
sbb
das
(bad)
and
jp
mov
mov
mov
pop
or
adc
ret
ins
pop
jnp
push
repz
test
loope
arpl
sti
ror
lahf
stos
loope
test
bound
loope
leave
jmp
pusha
lea
cmp
fistp
aas
jo
dec
stos
sbb
inc
pop
jge
mov
fbld
dec
mov
outs
ja
xor
cmp
and
test
xor
mov
adc
inc
(bad)
fist
ret
inc
mov
dec
cmps
ret
in
push
sub
lds
(bad)
test
jg
mov
and
stc
loope
cld
sti
dec
outs
xchg
fcom
push
into
cmp
retf
callw
daa
dec
rcr
dec
push
mov
imul
add
clc
jbe
inc
aaa
into
cmp
das
pushf
and
imul
popf
mov
dec
out
fist
repnz
bound
mov
push
std
fsub
lahf
test
aas
test
popa
xchg
test
add
jmp
dec
pop
mov
sar
pop
ds
cld
call
sub
ins
push
test
lahf
xchg
mov
cli
or
aam
data16
iret
pop
push
push
mov
stos
push
and
(bad)
cmp
hlt
xchg
and
inc
push
lea
mov
dec
mov
mov
retf
xchg
popa
and
shr
mov
imul
xchg
push
aaa
iret
sti
sbb
mov
push
(bad)
es
cli
fist
xor
pop
popa
dec
mov
jmp
ja
fnstenv
xchg
clc
jle
jb
lds
or
cmp
adc
xor
sbb
dec
(bad)
xchg
cmp
pop
push
mov
pop
mov
xchg
inc
and
mov
pushf
ret
dec
jne
mov
push
sbb
leave
sbb
lods
xor
jp
and
fcomp
jo
data16
pop
gs
mov
or
mov
sub
or
adc
xor
pop
add
or
pop
pusha
lods
outs
xor
mov
xor
xchg
aaa
mov
ja
push
lds
xchg
jl
mov
fcmovbe
mov
loope
xchg
ins
ja
mov
pop
and
icebp
inc
ins
fwait
scas
je
push
dec
cs
repnz
fist
and
adc
mov
dec
cwde
mov
stos
aas
cs
dec
jmp
popa
ds
cmp
push
and
or
push
adc
adc
and
xchg
push
mov
jbe
ins
sbb
lea
mov
dec
loopne
xchg
not
xchg
xor
ins
or
ja
sahf
movs
push
xor
aam
(bad)
dec
ja
lahf
push
call
aaa
jmp
sub
push
jge
xchg
inc
pop
add
xchg
mov
sbb
xchg
je
jns
int
sbb
adc
imul
xor
cmp
mov
cmp
fbld
repnz
jbe
lea
mov
xchg
dec
loope
jno
call
ins
xchg
test
addr16
jecxz
cmps
add
stos
jecxz
pusha
fwait
scas
aaa
jecxz
leave
xor
sbb
out
fild
add
dec
scas
pop
outs
push
mov
add
add
push
shl
data16
pop
fs
adc
cmp
add
dec
arpl
lahf
movs
cmps
das
inc
sub
fcomp
repnz
jo
lea
mov
dec
lahf
les
and
rol
xchg
aas
lods
imul
loop
mov
xchg
scas
inc
shr
rol
push
sbb
rcr
push
cdq
inc
daa
jle
xchg
movs
mov
ss
(bad)
dec
mov
jle
jno
in
add
and
test
xor
cmp
in
xchg
aaa
mov
push
lea
mov
dec
cdq
les
and
rol
xchg
rcl
pop
pop
xchg
mov
sbb
fcomip
(bad)
cld
jmp
dec
fwait
lahf
inc
sar
add
repnz
clc
push
into
aaa
je
pop
rcr
jns
mov
mov
(bad)
clc
sbb
xor
and
add
add
jge
test
sub
(bad)
xor
sub
push
shr
in
bound
push
repz
mov
or
les
(bad)
(bad)
sbb
sub
(bad)
dec
js
lods
inc
in
pop
sar
sub
cli
cld
lods
jbe
es
sub
pop
ins
push
mov
cmc
mov
mov
in
stc
das
mov
jbe
bound
int
sbb
sbb
mov
sub
mov
ins
in
in
xchg
adc
pop
push
stos
js
mov
pop
mov
xchg
inc
and
xlat
mov
lea
ja
xchg
test
adc
fild
lea
sub
inc
popf
pop
jo
dec
mov
jle
cwde
mov
pop
jmp
imul
add
add
jnp
xchg
movs
cmp
mov
dec
out
fcom
jecxz
fs
cmps
jle
mov
inc
fwait
ret
and
fild
(bad)
stos
push
ja
mov
push
xor
repnz
fstp
cdq
fwait
inc
jecxz
clc
and
fild
pop
jae
dec
mov
ins
push
movs
inc
ds
mov
test
fcmovne
or
cli
popa
inc
jno
rcl
jo
xor
das
mov
mov
mov
ja
test
jecxz
test
mov
jb
ins
gs
stos
jbe
mov
pop
popf
les
and
shl
mov
test
jmp
lods
pop
out
fimul
jmp
mov
outs
push
xor
xchg
mov
fild
imul
mov
xor
cmp
jo
adc
stos
imul
adc
xor
fadd
les
and
dec
test
mov
xlat
adc
(bad)
test
jecxz
movs
sub
xchg
mov
xor
fcmovbe
dec
dec
fwait
test
cmp
cmp
cld
retf
jns
xor
sub
and
cmps
test
cmp
fimul
xchg
add
fcom
sbb
daa
cwde
add
imul
xor
sub
or
fisttp
aam
jbe
sub
sar
xchg
rol
cmc
fist
mov
outs
dec
mov
test
aaa
fndisi(8087
mov
nop
lods
inc
jecxz
into
aaa
sub
xchg
(bad)
fist
xor
xor
inc
sub
mov
mov
in
ret
das
xchg
jmp
push
es
sub
add
imul
add
stos
xor
fistp
outs
inc
push
mov
inc
cmps
les
sub
(bad)
xchg
add
fs
ffreep
das
sbb
xor
icebp
icebp
(bad)
dec
inc
fwait
mov
out
pop
fidivr
add
cli
(bad)
shl
xor
stos
imul
mov
fisttp
cli
or
cmp
aaa
sbb
and
mov
jb
cmps
mov
sbb
inc
(bad)
aaa
mov
je
lea
xchg
(bad)
jl
int3
xchg
test
sub
ins
lea
push
and
in
lock
outs
fwait
and
sti
sub
jmp
sub
jno
dec
popf
arpl
lahf
mov
pushf
ss
out
cli
pinsrw
bound
into
add
sub
add
pusha
pusha
cmps
dec
cmp
xor
fist
clc
pop
jae
sub
les
adc
ror
test
pop
jb
mov
push
xor
cmp
pop
pop
(bad)
sub
cli
cld
retf
jbe
xor
push
ins
push
lea
jno
mov
int
sub
ins
enter
(bad)
jbe
sbb
xor
jb
adc
push
pusha
movs
ja
movs
add
and
xchg
aaa
mov
outs
push
stos
pop
stc
mov
xchg
jo
loop
or
(bad)
mov
sti
mov
ja
mov
push
aaa
xor
dec
fwait
lods
inc
iret
pop
cld
cmp
sbb
out
rcl
je
and
ds
mov
mov
ret
mov
jbe
jb
into
pop
pop
pop
push
add
pop
bound
arpl
cmp
shl
hlt
jp
dec
mov
pop
xchg
loopne
inc
in
jno
std
fsub
cmp
mov
icebp
fiadd
stos
movs
inc
jecxz
(bad)
xor
fistp
je
inc
mov
inc
sbb
mov
nop
adc
outs
push
xor
xor
cmp
out
das
mov
stos
outs
xor
adc
and
(bad)
repz
adc
jle
stos
pop
(bad)
mov
cmps
les
es
shl
(bad)
mov
xchg
rol
cld
repz
ins
xchg
test
pop
clc
push
cs
fistp
xor
sbb
lea
jno
mov
pushf
ds
inc
jmp
jbe
inc
ss
sub
jl
and
(bad)
adc
dec
push
mov
sub
mov
pop
sti
fistp
popa
jbe
stos
pop
repz
push
xchg
(bad)
xchg
fs
push
cmp
rol
stos
ret
aas
test
add
xlat
test
or
fidivr
cmp
cli
mov
push
ret
jg
stos
cmovg
inc
ds
mov
jmp
mov
jbe
jae
into
and
or
sahf
ja
movs
aas
js
mov
arpl
int
adc
push
stos
pop
in
sti
pop
test
mov
and
fld
lods
add
test
fs
mov
add
jecxz
outs
mov
fimul
sub
cmp
push
jmp
pushw
dec
mov
inc
cs
mov
mov
loope
and
clc
dec
fs
xor
adc
imul
xor
xchg
outs
cmp
dec
rcl
cmp
addr16
test
dec
xchg
rol
cmc
rcl
mov
jl
mov
adc
in
test
scas
dec
cmc
pop
(bad)
sbb
cmp
cld
(bad)
add
dec
mov
dec
or
test
cwde
cmp
jmp
fs
xor
xor
jo
xor
push
test
fcomp
mov
sar
jg
mov
adc
adc
xchg
xor
jbe
test
ret
pop
xchg
les
add
ror
sbb
or
popf
pop
adc
mov
push
xor
ds
aam
push
into
add
mov
pop
push
mov
pop
outs
out
xchg
xchg
mov
stc
jmp
bound
or
and
sbb
stc
fs
test
mov
mov
in
xchg
sbb
jbe
mov
inc
test
loop
in
inc
and
outs
movs
call
in
test
es
call
push
icebp
js
cmp
pop
(bad)
cmc
fistp
and
popa
stos
sbb
sti
push
sbb
mov
mov
(bad)
sbb
sub
pop
sbb
and
jl
mov
lahf
sbb
and
retf
rcr
jne
outs
pop
pop
stos
push
lds
xchg
push
rcl
mov
loope
xchg
(bad)
cmps
ror
outs
ja
mov
ror
scas
jp
pop
(bad)
xor
ds
cld
retf
push
call
fistp
ins
inc
std
inc
ds
mov
mov
fdivr
or
ss
pop
add
mov
stos
js
xchg
adc
xchg
test
(bad)
out
xchg
cmp
bound
push
shl
xchg
jl
xchg
jb
repnz
lock
test
outs
ja
cdq
popf
adc
xchg
fadd
cwde
aad
in
fidivr
sub
repnz
fcom
xor
sbb
push
pushf
pop
cmp
stos
adc
fnstcw
loope
sahf
leave
jne
push
(bad)
cmp
pop
daa
adc
or
dec
test
es
popf
sub
and
cmps
xchg
xor
pop
scas
pop
ret
jae
ret
in
inc
daa
(bad)
test
in
sub
ja
mov
push
daa
jmp
fwait
test
jecxz
aad
sub
std
cli
hlt
push
in
aaa
je
dec
stos
cmp
mov
add
mov
xor
das
mov
jo
jno
fld
push
js
adc
imul
mov
(bad)
adc
sub
fild
repnz
jne
stos
dec
(bad)
mov
pop
sti
les
and
jecxz
or
ja
xchg
adc
add
clc
ds
in
pop
lock
pop
fs
inc
sbb
mov
xchg
aas
ror
push
xchg
clc
jb
push
dec
int
and
add
pop
ficomp
mov
cmp
test
test
jb
inc
js
stos
pop
icebp
xchg
lock
cdq
shl
and
aad
add
sbb
outs
add
adc
repnz
fwait
lods
dec
xchg
pop
fidivr
and
cli
in
rcl
xor
inc
stos
pop
imul
sub
mov
mov
ror
cli
add
clc
jbe
jns
iret
sbb
fwait
das
mov
lods
outs
xor
adc
xchg
xor
gs
mov
inc
xchg
rcr
mov
mov
imul
xchg
test
and
mov
fwait
xchg
cmp
pop
out
sub
ds
in
fild
sbb
pop
ins
jo
inc
cs
mov
mov
(bad)
cli
or
pop
enter
add
pop
fdivr
mov
jne
stos
mov
in
xlat
xchg
adc
bound
sti
mov
pop
xchg
les
and
sar
stos
rol
das
test
ja
mov
push
aaa
stc
jmp
test
jecxz
fmul
sub
push
rcr
dec
cmps
pop
ins
push
scas
inc
cs
mov
mov
fdivr
or
int
sbb
mov
mov
ja
mov
pop
out
xchg
add
dec
push
lods
push
(bad)
mov
dec
sti
(bad)
cmps
leavew
cdq
inc
and
rol
fcmovnb
or
mov
xchg
fcmovu
dec
addr16
lods
inc
neg
push
cmp
lock
pop
outs
pusha
mov
pop
cdq
mov
into
sbb
fsubr
cli
pop
xchg
(bad)
jbe
pop
push
int
cmp
adc
or
mov
jl
lods
cmps
sbb
adc
adc
addr16
fsubr
loopne
mov
mov
lods
jnp
sbb
sbb
test
xor
hlt
sbb
xor
fidiv
sub
clc
fnsave
sub
sbb
and
mov
iret
aaa
and
das
xchg
clc
ins
inc
pop
sub
or
das
mov
mov
js
mov
out
fistp
icebp
ins
jbe
test
icebp
xchg
dec
xchg
std
xchg
fs
push
push
std
aad
push
lock
scas
test
ins
jne
mov
push
aas
stc
cli
adc
sub
call
jmp
pop
fidiv
jb
jle
sbb
mov
jnp
mov
mov
and
push
stc
sbb
cmp
xor
das
mov
retf
imul
popf
xchg
test
loop
xchg
daa
mov
dec
ja
push
aad
neg
loope
shl
fcmovne
test
xchg
dec
scas
lahf
mov
xor
mov
retf
rcr
scas
xor
pop
call
cli
leave
inc
pushf
xor
push
xchg
or
test
add
sbb
pop
jmp
inc
xor
and
or
add
imul
xor
outs
aaa
cmp
fist
fcomp
push
mov
dec
adc
addr16
add
jecxz
repz
jge
mov
stc
xchg
(bad)
pop
js
mov
sub
xlat
in
fist
cmp
pop
outs
push
xchg
dec
sub
mov
fdivr
or
xor
xor
sub
jnp
lods
cmp
lods
(bad)
sbb
mov
xchg
sti
jb
ins
jbe
test
mov
jl
rol
icebp
rol
cwde
sar
push
ja
mov
fadd
fwait
scas
aaa
loope
fimul
cmp
out
fist
and
dec
xchg
jge
test
jl
mov
call
or
adc
xor
jo
xor
das
int3
add
jg
movs
cmp
mov
dec
out
fistp
repnz
jbe
fild
mov
dec
mov
xchg
jno
std
fild
mov
ja
mov
push
aaa
sti
loope
(bad)
dec
dec
fwait
lods
push
leave
push
cmp
jmp
dec
push
mov
jle
xchg
mov
push
fstp
jp
shl
add
aaa
or
adc
sbb
pusha
scas
js
mov
mov
add
xchg
xor
inc
push
lods
dec
ret
addr16
xchg
inc
fisttp
lea
fisttp
fcmovnb
ss
pop
push
mov
test
int3
cld
gs
xchg
mov
jo
or
cld
(bad)
xor
pop
ins
pop
mov
or
xor
call
xchg
outs
jge
adc
daa
imul
push
fadd
mov
add
and
jmp
push
fidivr
ja
jge
xchg
jmp
addr16
mov
and
xchg
ja
xchg
xchg
enter
cli
rol
lea
or
daa
jmp
cmp
jl
add
test
cmp
xchg
into
retf
sbb
js
fldenv
mov
pop
out
sbb
pop
fwait
je
dec
js
push
sbb
cmp
mov
cmp
out
mov
call
mov
pop
popf
les
cmp
test
fldenv
cmps
push
ja
popf
mov
sbb
shl
mov
adc
aaa
cmc
sar
dec
call
push
and
or
or
mov
xor
or
push
out
inc
push
pop
es
pop
mov
mov
pusha
mov
(bad)
sbb
add
mov
clc
pop
cmp
lods
jne
xchg
jmp
push
in
jno
fcmovne
idiv
dec
test
push
outs
out
mov
mov
xchg
int
push
sub
add
dec
add
outs
mov
mov
mov
pop
mov
and
and
push
sbb
adc
inc
jno
jl
cmps
sbb
stos
lods
lahf
sbb
xor
xor
sbb
xor
pop
xor
into
ja
mov
jg
xchg
mov
add
repnz
repnz
fwait
lods
inc
lock
fld
and
stc
(bad)
rol
push
daa
push
xor
sub
adc
(bad)
loope
lds
aad
sbb
sub
jnp
jo
cmp
adc
cmp
mov
mov
fistp
inc
stos
pop
adc
inc
rcr
mov
test
jge
mov
or
(bad)
jo
pushf
scas
imul
es
sbb
aas
imul
aaa
jne
nop
nop
lods
push
push
iret
push
(bad)
adc
sbb
daa
or
sbb
inc
inc
mov
je
test
loopne
mov
ror
hlt
inc
dec
push
stos
push
lock
test
loop
in
pop
and
fst
test
shr
retf
dec
mov
inc
in
das
leave
adc
cmp
add
popf
add
inc
test
pop
bound
or
sbb
into
addr16
out
inc
gs
sbb
adc
or
lea
push
add
jmp
call
hlt
jp
pop
lods
popa
ficom
xchg
ror
shl
test
ins
xchg
or
mov
push
daa
call
data16
mov
das
cmps
or
inc
lock
add
pop
mov
stos
iret
ret
fldcw
fldenv
mov
or
and
add
push
int3
sbb
jl
xchg
jo
mov
jl
in
aaa
lods
loop
aam
jg
mov
dec
mov
xchg
ja
rol
hlt
xor
popa
xchg
std
xchg
dec
cmps
push
jg
shl
inc
jmp
jl
jmp
fst
or
int
data16
aaa
jnp
inc
test
dec
sbb
mov
lods
pop
fcomp
or
data16
sub
add
add
ins
pusha
fist
mov
pusha
mov
xchg
and
popa
call
hlt
jb
outs
inc
dec
sbb
add
and
div
das
xchg
dec
xchg
jnp
mov
jmp
gs
fwait
movs
push
jecxz
(bad)
cmp
daa
loope
clc
pop
call
jl
mov
fs
cdq
mov
out
into
or
and
xor
push
movhps
outs
inc
mov
mov
mov
mov
loop
pop
push
test
dec
xchg
(bad)
mov
and
mov
cwde
leave
cmp
xchg
ds
mov
retf
lahf
pop
pop
out
or
jmp
jnp
stos
xor
add
mov
or
sbb
int
punpcklbw
push
aam
js
push
out
mov
pop
(bad)
in
out
test
inc
ja
pop
aad
out
mov
mov
jl
ins
movs
idiv
xchg
mov
add
cli
leave
movs
int3
xchg
je
mov
dec
fld
cs
(bad)
push
jo
pop
mov
aas
jge
xchg
stos
ret
iret
ins
fistp
fdiv
push
sbb
pop
adc
sub
fs
test
lods
xor
sbb
fist
div
pop
mov
push
xchg
les
in
fiadd
mov
jge
xchg
xchg
mov
xor
mov
aaa
pop
ds
push
call
pushf
sub
mov
jno
xchg
mov
xor
adc
xor
xor
or
sahf
cmp
(bad)
xor
mov
lea
add
push
(bad)
out
mov
scas
into
jp
popa
dec
pop
popf
inc
lds
je
mov
and
jmp
int
stos
jg
xor
sbb
inc
outs
mov
cmp
cs
(bad)
fistp
pop
push
jge
test
imul
sub
xchg
mov
(bad)
cmps
shl
gs
xor
jo
pop
xchg
pop
mov
stc
push
mov
popf
adc
sub
xor
int3
imul
jp
mov
dec
xchg
iret
cwde
outs
int3
xchg
push
es
(bad)
test
loope
icebp
not
jb
xchg
mov
(bad)
aad
shr
dec
and
cmc
rol
inc
out
jbe
push
scas
cmp
inc
test
jns
xchg
mov
inc
out
rcr
fwait
jmp
rol
push
add
imul
xor
xor
das
jl
fisub
aam
dec
push
lods
jne
scas
xor
out
push
cli
(bad)
cmc
cmp
jns
cdq
popf
ret
push
ja
mov
cmps
(bad)
dec
jnp
mov
sbb
sub
cld
xlat
push
out
imul
mov
xchg
nop
mov
fwait
(bad)
sbb
adc
sub
inc
xor
(bad)
das
stos
pop
sar
(bad)
ja
movs
das
push
popf
mov
pop
ret
xor
sti
jp
outs
pop
push
mov
dec
xchg
cmc
cmps
je
mov
daa
mov
or
mov
outs
outs
add
push
repnz
mov
dec
cs
fcomp
js
sbb
cmp
mov
mov
(bad)
jg
sbb
(bad)
jl
jle
fsub
mov
mov
out
jge
mov
inc
cwde
mov
pop
xchg
out
cmp
jae
(bad)
mov
sub
loopne
or
dec
sub
push
mov
xchg
add
idiv
sahf
aam
jecxz
lods
sbb
cmp
aad
js
pop
jae
push
add
inc
cmps
jae
jno
mov
repz
rcl
add
xor
jne
ds
pop
cwde
adc
pop
inc
scas
push
inc
sub
lahf
lods
cdq
or
cmp
(bad)
xchg
cs
ret
push
es
dec
xchg
out
ror
cmc
shl
test
data16
add
(bad)
data16
dec
out
repz
cs
(bad)
dec
jo
and
push
or
or
(bad)
sbb
aaa
int
fs
sbb
std
ins
pusha
mov
sbb
(bad)
adc
xor
fistp
les
mov
ins
xchg
int3
mov
(bad)
xchg
inc
cmp
rol
fwait
loop
stos
inc
push
add
cmove
sti
xor
mov
pop
out
or
cli
stc
jmp
push
push
mov
inc
push
add
or
dec
ret
fsub
xchg
repz
jns
out
inc
adc
and
add
pusha
mov
jo
mov
dec
xchg
out
mov
test
js
sbb
pop
scas
pop
xchg
xchg
fs
cdq
pop
and
scas
xchg
xchg
sub
push
pop
adc
bnd
sti
dec
inc
mov
into
ds
cs
stc
hlt
push
in
xor
push
cs
cmps
int
ss
outs
call
jg
pop
aas
into
pop
push
and
out
sbb
mov
je
and
fst
lock
pop
test
jmp
jl
xchg
js
hlt
fild
(bad)
stos
leave
adc
test
out
les
popf
sub
fidiv
cs
call
cwde
xor
lahf
inc
or
mov
mov
fbld
cli
or
aaa
enter
add
adc
imul
sub
sbb
cmp
jmp
ja
dec
push
push
sbb
lock
jecxz
and
mov
movs
(bad)
mov
ja
xchg
sbb
movs
inc
jecxz
fistp
cs
cld
rcl
and
inc
test
ins
push
xchg
inc
cs
mov
mov
out
or
and
xor
das
stos
pop
fild
test
aaa
mov
(bad)
pop
cmp
dec
int
xchg
aaa
stos
leave
jb
ins
popa
push
stos
pop
ret
mov
xchg
jbe
xchg
jno
in
rcl
cmps
ret
outs
inc
xchg
mov
adc
in
jecxz
ins
xchg
mov
ds
push
call
scas
sbb
push
mov
cmp
xchg
lods
mov
ret
mov
pop
(bad)
daa
imul
push
les
fisubr
sbb
lahf
mov
data16
in
daa
mov
push
ja
pop
icebp
scas
jmp
addr16
addr16
ror
xchg
cmp
ins
xchg
push
out
mov
xor
retf
fidivr
mov
prefetch
ret
rcr
push
jecxz
imul
(bad)
pusha
sub
mov
push
leave
outs
jb
adc
daa
ds
cwde
adc
ss
sbb
cmp
mov
mov
inc
ja
pop
cli
mov
dec
cwde
out
addr16
ja
(bad)
aaa
into
ja
mov
push
mov
mov
mov
xchg
scas
xor
dec
sar
ds
idiv
retf
and
add
test
sub
xchg
mov
or
lods
jg
jmp
add
daa
adc
adc
adc
push
aam
inc
test
aaa
mov
mov
in
xchg
xor
pop
jo
pop
lds
outs
ror
sub
ins
xchg
pop
push
xchg
popf
scas
push
xor
fbld
lods
scas
je
das
out
xor
inc
in
je
push
sbb
sbb
xchg
xchg
nop
lods
adc
jmp
adc
dec
jbe
in
and
jns
or
inc
inc
mov
add
add
es
inc
ja
pop
sti
lods
out
test
xor
retf
xchg
daa
retf
mov
ins
mov
aad
ret
clc
popa
dec
lea
xor
stc
jl
inc
imul
stos
or
ds
pushf
mov
scas
ins
ret
fimul
mov
push
dec
pop
and
xor
dec
and
cmp
mov
movs
sub
test
cmp
dec
in
ror
in
pop
push
scas
ins
cmc
mov
dec
mov
add
mov
xchg
sub
jns
movs
stos
ror
push
mov
in
repnz
(bad)
dec
lea
cmp
cld
into
push
out
add
jno
cmp
mov
xchg
mov
ins
out
pop
rcl
je
ds
daa
imul
and
addr16
mov
inc
movs
ds
scas
mov
dec
(bad)
call
jb
push
push
push
scas
popa
xchg
mov
jmp
rcl
mov
push
xor
xchg
int3
hlt
jl
xchg
fadd
pop
div
ss
repz
imul
fild
jnp
push
cmp
test
mov
fnstenv
xchg
jle
or
fbstp
das
jbe
add
pop
jne
push
sbb
test
fwait
in
xchg
adc
jbe
mov
ficom
mov
jmp
jne
xlat
rol
idiv
bound
shl
scas
dec
shr
xor
push
out
and
or
scas
aas
imul
ds
nop
mov
jl
mov
mov
je
jno
fnstcw
pushf
sbb
fild
inc
cmp
pop
adc
out
fistp
cmc
jle
jbe
ins
ret
dec
and
dec
xchg
mov
in
icebp
icebp
or
ins
or
xchg
or
retf
ja
scas
push
ret
pop
fst
or
sub
inc
jmp
push
or
xchg
jns
inc
aas
jns
cmps
mov
push
jmp
data16
daa
imul
sub
inc
pusha
scas
jae
mov
jo
mov
ins
(bad)
jmp
push
jmp
pop
jbe
jno
xchg
fmul
shl
push
out
fild
(bad)
mov
push
mov
(bad)
fcomp
pushf
mov
or
cmp
retf
fist
add
dec
lea
push
cs
test
mov
ror
jle
out
aaa
add
adc
push
inc
mov
jl
mov
dec
call
int3
imul
push
ficom
xchg
ins
out
addr16
rol
mov
jb
stos
mov
cs
jnp
mov
inc
hlt
pop
(bad)
push
sub
cld
int3
push
inc
push
sbb
pop
push
mov
cdq
mov
inc
jmp
inc
xor
ss
inc
push
ds
mov
scas
imul
or
mov
aaa
callw
xor
outs
jbe
push
repz
xchg
dec
xchg
mov
in
not
jecxz
xchg
movs
stos
xlat
sbb
movs
xor
cli
shl
lods
scas
je
pop
fstp
sub
jbe
xor
sbb
push
test
cs
mov
imul
cli
or
lds
sbb
das
mov
test
cmp
sbb
and
stc
xchg
aaa
mov
jbe
xchg
pop
repz
xor
jmp
jecxz
sbb
je
mov
push
xor
repnz
inc
ins
cwde
fwait
inc
loopne
fiadd
cmp
cld
fcom
cmp
jp
sbb
push
lods
inc
sub
mov
mov
jmp
jns
into
xor
push
add
or
js
test
xor
(bad)
or
and
xchg
aaa
mov
jb
stos
jp
xchg
(bad)
dec
xchg
les
push
cli
stos
mov
ins
add
ja
mov
clc
sbb
scas
push
jecxz
into
ds
clc
in
push
in
jo
dec
mov
ins
pop
mov
jnp
mov
stos
cmp
cli
or
add
xor
jo
adc
imul
inc
movs
cmp
mov
dec
(bad)
fist
jge
push
mov
pop
xchg
shl
std
(bad)
mov
fld
stos
les
lods
sbb
mov
test
lods
push
jecxz
into
sub
cli
jmp
dec
mov
jge
mov
jns
mov
stos
cmp
cli
sbb
or
and
pop
mov
test
xor
sbb
and
fist
loop
jbe
stos
pop
(bad)
cmps
xlat
xchg
push
cmp
stos
xchg
loope
xchg
lahf
stos
aad
stos
je
test
fiadd
fwait
scas
jae
dec
into
ds
ds
(bad)
clc
xor
pop
jge
mov
jl
mov
stos
cmp
cli
sbb
es
adc
cmp
(bad)
adc
xor
sbb
and
fcom
cld
popa
jne
stos
pop
hlt
mov
fs
(bad)
xchg
fs
pusha
and
rol
test
ja
lds
sbb
lods
inc
jecxz
into
cmp
or
cmc
fist
aaa
jo
dec
mov
inc
sbb
mov
retf
aas
sub
or
cmp
xor
jb
xor
sub
arpl
push
lahf
mov
dec
xchg
fst
mul
push
popf
pop
(bad)
mov
pop
xchg
(bad)
xchg
addr16
jne
call
test
lds
test
aas
stos
inc
ja
xchg
xchg
fadd
dec
jecxz
fidivr
pop
(bad)
aaa
jae
dec
xchg
gs
mov
jns
mov
stos
aas
cs
xchg
cli
jne
jno
int
adc
adc
imul
pop
lahf
mov
inc
sahf
fst
clc
popa
je
stos
pop
sti
mov
jl
(bad)
xchg
fs
jl
call
test
shr
test
aas
stos
jbe
call
adc
lods
jno
push
(bad)
cmp
ds
into
fistp
aaa
jo
dec
scas
pop
jl
mov
jns
mov
mov
cs
test
and
and
jb
and
cmp
test
xor
sbb
dec
out
ficom
icebp
popa
jae
popf
pop
in
repz
xchg
les
or
rol
scas
ret
pop
ja
test
push
adc
cmc
sbb
scas
pop
jecxz
(bad)
cmp
push
cdq
xor
dec
mov
imul
mov
pushf
cmp
push
mov
jne
jno
int
cmp
and
aaa
mov
sahf
jg
movs
cmp
sbb
and
xchg
aaa
mov
jae
stos
pop
(bad)
mov
ins
xchg
(bad)
xchg
rcl
test
fisubr
scas
ret
push
ja
mov
leave
adc
lods
xor
push
into
cmp
pop
cdq
xor
dec
mov
pusha
dec
mov
jp
mov
mov
sub
add
jno
int
aaa
jne
adc
outs
arpl
arpl
and
ficom
cld
jne
push
stos
pop
test
xchg
addr16
rcl
scas
ret
outs
ja
add
retf
mov
mov
sar
sub
cli
cld
fist
xor
dec
rcr
ins
js
inc
or
mov
mov
cs
enter
jno
int
adc
or
mov
fnsave
push
call
adc
fst
stc
jns
pop
stos
pop
vshufps
xchg
in
movs
add
std
(bad)
mov
repz
cli
test
test
ror
cwde
stos
sub
push
or
ds
stc
fadd
cmp
dec
xchg
jno
push
mov
cmps
cmp
int3
iret
(bad)
cmc
jbe
jb
enter
sub
jmp
test
mov
or
rol
lock
jbe
outs
repz
aas
mov
nop
jno
stc
xlat
test
ror
mov
cmp
imul
mov
xor
aam
fcmove
dec
ins
cdq
ret
cmp
pop
fidivr
sub
and
xor
pop
outs
popa
sahf
pop
cs
mov
push
int3
cli
or
int3
jns
jno
iret
or
or
fwait
das
mov
mov
dec
popf
mov
(bad)
out
fist
jmp
add
lock
ins
xchg
int3
cmps
push
out
jno
in
fild
test
aas
test
jp
mov
mov
lods
dec
out
sub
cli
cmc
sti
jns
cmp
dec
xchg
or
mov
pop
lahf
xchg
lea
(bad)
mov
jae
jno
ror
or
sub
push
pushf
cmp
into
xchg
adc
dec
fadd
mov
mov
push
push
mov
dec
popf
into
xchg
fs
movs
add
rcl
xchg
cmps
retf
aas
test
jns
popf
mov
aaa
retf
lds
fwait
mov
inc
fnstcw
cmp
out
rcl
cmp
pusha
dec
mov
dec
cs
test
pop
(bad)
jmp
xor
add
add
mov
ficomp
movs
cmp
lea
adc
xor
jle
test
dec
xchg
rcr
fcmovnbe
test
xchg
ins
xchg
mov
sar
test
stc
repnz
mov
fidivr
sub
cli
cld
(bad)
and
dec
cmps
adc
dec
cs
mov
fild
test
xor
sub
jne
push
mov
ins
push
cmp
fdiv
aam
xchg
pop
mov
js
ins
jbe
stos
pop
lock
pusha
xchg
ret
ret
xchg
jb
retf
cmc
test
rcl
sti
stos
sar
dec
ja
sahf
std
pop
and
repz
dec
mov
or
iret
iret
fist
aaa
jo
ins
stos
cmp
mov
pop
xchg
mov
stos
sub
aam
in
sbb
cmp
cmp
and
cmps
pop
cmp
sbb
push
inc
not
xchg
aas
xchg
jmp
repnz
repz
retf
jnp
(bad)
cmps
popa
iret
jecxz
add
rol
ffreep
or
test
ds
fadd
fwait
lahf
inc
ret
push
into
ss
enter
sub
and
pop
push
popf
inc
cs
mov
(bad)
inc
out
or
loope
fs
retf
imul
add
jb
test
aas
mov
jne
mov
dec
cli
int3
xchg
aaa
mov
outs
pop
mov
jno
(bad)
xchg
data16
cmps
jno
in
mov
ins
mov
dec
jo
mov
xor
xlat
fcomp
fwait
test
rcl
push
(bad)
out
fldenv
xor
or
mov
pop
mov
fisttp
mov
xchg
pop
adc
iret
pop
sbb
das
int
iret
push
cmps
or
call
and
fst
stc
imul
(bad)
dec
mov
adc
ror
lea
pop
sahf
mov
push
aas
shl
sub
xor
lahf
inc
enter
cs
jmp
jne
add
mov
jmp
mov
jbe
push
and
pop
sbb
das
stos
fbld
scas
or
cmps
or
out
mov
out
rcl
les
inc
stos
pop
lds
pushf
dec
cmc
nop
inc
daa
jmp
sbb
mov
mov
retf
repnz
shl
inc
ins
lahf
lea
push
inc
pop
ds
shl
xor
sbb
or
mov
fnstcw
aas
mov
push
inc
inc
xor
cmp
pop
mov
mov
fnsave
arpl
and
mov
test
push
pop
addr16
popf
pop
cmc
popf
(bad)
jl
mov
push
adc
ror
ret
or
test
aas
cmp
fcmovb
pop
outs
lods
lods
aaa
enter
pop
adc
cmp
dec
mov
bound
or
sub
push
shr
cmp
dec
add
int
push
pop
and
pop
xchg
and
imul
movs
aaa
jne
mov
pop
fstp
test
std
dec
jns
popf
pop
fistp
mov
add
shl
mov
bound
cwde
mov
cli
shr
mov
dec
jecxz
aam
sub
cli
enter
xor
pop
outs
push
add
lahf
cwde
call
aam
lds
jmp
sbb
add
sbb
and
test
add
jbe
mov
arpl
(bad)
cmps
popa
(bad)
mov
adc
aam
xor
ins
cmp
pop
push
mov
retf
inc
lods
scas
pusha
(bad)
push
ds
pop
pushf
inc
jb
dec
mov
outs
daa
dec
xchg
mov
or
push
fidivr
cmp
dec
inc
aas
int
sub
pop
and
pop
pushf
xor
imul
movs
cmp
mov
fstp
sbb
jbe
push
popf
pop
fist
mov
sub
cmp
ja
mov
in
fcmovb
dec
sbb
out
inc
sub
cli
lock
inc
fidiv
pop
imul
xchg
lods
mov
cli
or
jb
jmp
and
sahf
jge
sub
popf
xchg
xchg
and
cmps
xchg
add
jbe
test
(bad)
mov
dec
sti
(bad)
cmps
fs
adc
fsubr
mov
arpl
add
fadd
push
(bad)
jp
add
(bad)
icebp
fistp
pop
jb
dec
lods
cmp
mov
daa
or
mov
mov
jmp
cmp
dec
or
int
push
push
pop
and
sbb
mov
ins
repz
jl
fistp
clc
push
sbb
pop
stc
xchg
(bad)
js
mov
sbb
std
shl
mov
bound
mov
adc
cli
aam
fcmovb
dec
dec
mov
dec
jecxz
out
ds
clc
aam
push
fidiv
pop
popa
jbe
inc
sbb
mov
outs
out
or
ds
das
jo
cmp
and
sahf
jl
sub
popf
mov
dec
xlat
fcom
loop
jbe
mov
dec
xchg
(bad)
cmps
retfw
mov
adc
in
push
out
ins
lea
pop
push
test
inc
lods
lods
jb
jp
ds
adc
icebp
fist
jb
dec
fistp
dec
mov
push
xchg
mov
into
dec
sub
push
ficomp
cmp
dec
pop
aas
int
sub
pop
and
inc
pushf
pop
in
imul
movs
xor
mov
fstp
xchg
xchg
div
sbb
push
popf
pop
ret
xchg
(bad)
js
in
mov
cmp
inc
cmp
ja
mov
lods
fcmovb
dec
imul
sub
cli
(bad)
test
fs
pop
cmps
pop
push
cdq
inc
sbb
sahf
lods
mov
cli
add
and
and
jo
and
jl
sahf
jp
mov
inc
popf
xlat
test
cmp
pop
iret
enter
call
pop
jbe
call
(bad)
cmps
fnstsw
mov
out
ins
test
dec
pop
mov
test
loope
adc
scas
dec
into
jp
add
fsub
jb
dec
cmps
xor
mov
pop
popa
xchg
mov
int
sub
outs
loop
aas
cmp
push
push
aas
int
pop
imul
xor
imul
movs
cmp
push
and
not
xchg
aaa
mov
jno
push
(bad)
fimul
mov
jno
std
out
add
dec
cmp
ja
mov
adc
fsubr
dec
ins
xchg
lods
ins
jecxz
fdivr
sub
cli
cld
std
push
retf
push
dec
xchg
ins
push
mov
lahf
xchg
mov
ds
outs
call
jne
jno
jmp
aaa
jo
sbb
imul
xor
xchg
sbb
xchg
adc
jbe
mov
dec
xchg
int3
xchg
fs
jp
std
ror
stos
retf
das
test
push
xchg
xchg
test
aas
cld
fild
fwait
mov
sub
or
(bad)
icebp
jbe
xor
pop
pusha
outs
pushf
inc
sbb
cdq
call
cli
add
jmp
das
jo
sbb
jns
sahf
jg
mov
cmp
dec
xlat
int
add
jbe
mov
pusha
pushf
les
and
sti
mov
mov
gs
mov
ds
repnz
hlt
fld
popf
fimul
push
cmp
sbb
cld
neg
cmp
pop
mov
push
mov
xor
shl
clc
aas
mov
pop
inc
inc
xor
mov
mov
sahf
dec
xor
mov
cmp
jl
int
add
jnp
mov
dec
popf
in
cmps
push
in
pop
adc
ror
(bad)
fldl2t
or
mov
cmp
inc
lods
lahf
inc
xchg
jb
xor
ds
fldenv
sbb
adc
add
xchg
mov
mov
jmp
jae
iret
pop
push
or
adc
pushaw
mov
jne
mov
(bad)
xchg
cmp
pusha
jg
push
sar
pushf
les
and
clc
xchg
xor
lods
(bad)
cmps
shl
xchg
ds
retf
repnz
rcl
inc
ins
popf
popf
dec
loope
fstp
push
ds
into
cmp
pusha
mov
push
xchg
pushf
xor
into
push
jecxz
aas
mov
pop
push
inc
xor
sbb
fisubr
sahf
dec
xor
sub
and
mov
fmul
push
lods
das
cli
mov
dec
cdq
in
cmps
push
in
jns
lock
(bad)
mov
jne
xchg
mov
es
in
mul
mov
(bad)
xor
xor
cli
fldenv
or
cs
add
cdq
mov
mov
jmp
inc
xor
pop
push
fs
test
pushaw
lods
ins
xor
mov
not
xchg
xor
std
jo
ins
jle
lea
(bad)
pop
pushf
les
daa
(bad)
xchg
xor
sbb
xor
mov
daa
retf
repnz
hlt
out
ins
nop
scas
inc
loope
fst
enter
cld
cmp
jo
sbb
ds
lahf
mov
fcomp
clc
aas
mov
pop
je
xor
sbb
fisubr
test
xor
test
jl
int
aaa
mov
push
fdivr
push
mov
dec
mov
xchg
push
in
jns
lock
pop
popf
mov
test
lahf
inc
nop
push
shl
xor
sbb
jp
xor
and
mov
mov
jmp
push
cmp
pop
pop
je
add
pushaw
scas
jne
cmps
or
lahf
mov
(bad)
xor
ins
fs
push
fcomp
ins
pushf
les
daa
repz
mov
jecxz
lods
test
push
mov
retf
repnz
hlt
inc
pushf
lea
push
cmp
or
cld
aad
in
jo
push
and
lahf
mov
mov
cs
gs
push
inc
inc
xor
cmp
sub
inc
mov
mov
nop
mov
jl
test
adc
jnp
test
dec
loopne
xchg
push
in
jns
lock
ffreep
or
test
(bad)
adc
movs
aaa
(bad)
jl
cmp
cmp
mov
data16
inc
push
outs
mov
cmp
or
xchg
mov
dec
out
push
cwde
mov
sbb
pop
das
jo
cmp
aam
bound
inc
popf
rol
lods
xchg
add
jbe
mov
jnp
(bad)
cmps
pushfw
mov
adc
ret
test
mov
sbb
call
jmp
dec
ins
xchg
lods
push
jecxz
fdivr
sub
cli
cld
std
push
cld
xor
pop
ins
push
mov
lahf
xchg
mov
ins
rcr
or
xor
xor
adc
jle
test
xor
call
and
dec
in
fbstp
leave
jge
push
mov
inc
xchg
mov
popa
fld
mov
xchg
inc
mov
stos
shl
bound
nop
nop
adc
cli
fsubr
stos
mov
sub
clc
shl
data16
pop
bound
sbb
mov
out
or
in
je
jno
loopne
das
jo
sbb
jg
sahf
jl
mov
inc
popf
cmp
retf
xchg
add
jbe
fstp
mov
loopne
ret
xchg
popa
and
enter
dec
xchg
mov
(bad)
adc
js
out
mov
and
jns
mov
pop
jecxz
(bad)
push
cs
in
int3
callw
or
cmp
aaa
jb
movs
mov
jmp
pop
or
or
es
das
xchg
pop
fcomp
inc
mov
pusha
in
mov
add
pop
out
out
xor
rcl
bound
xchg
xchg
stc
inc
mov
xchg
jno
mov
lea
retf
cwde
mov
ins
mov
and
mov
jbe
xor
sbb
aam
data16
push
and
push
jno
inc
add
test
xchg
test
shr
adc
xor
daa
ins
pop
push
popa
mov
cwde
push
rcr
jns
outs
adc
mov
inc
in
int
cs
pop
inc
mov
push
mov
adc
dec
lock
stos
loop
mov
test
and
outs
mov
inc
rcr
or
jmp
pop
ja
dec
popf
cmp
sbb
cmps
mov
fs
loope
pushf
int3
jle
jno
int
add
cmp
add
ins
pop
nop
imul
ds
fwait
test
call
rcl
jns
dec
add
hlt
pop
movs
fist
and
aam
add
push
daa
sahf
outs
outs
in
xchg
add
mul
xchg
shl
dec
sbb
sti
xor
push
sti
xor
cmp
punpckhbw
lea
lahf
mov
bnd
loope
test
xor
and
sub
mov
jae
mov
sbb
sub
fistp
icebp
dec
jbe
mov
cmp
sahf
ja
std
shl
xchg
dec
mov
lea
and
dec
inc
mov
inc
(bad)
dec
cmps
or
pop
xchg
and
sbb
mov
inc
cwde
movs
mov
jmp
jbe
in
inc
or
adc
fsub
mov
jg
mov
adc
aaa
jl
fistp
loope
jbe
mov
inc
mov
xchg
push
xchg
jne
in
test
sti
jge
(bad)
test
arpl
test
mov
inc
jecxz
scas
cmp
pop
jmp
es
pop
pusha
push
mov
pop
lahf
mov
mov
fbld
cli
das
mov
jbe
gs
cmp
push
add
pop
(bad)
stos
imul
add
mov
adc
cmp
xchg
xor
push
stos
pop
xlat
mov
dec
xchg
fmul
cmp
repz
cmp
je
cli
stos
jecxz
lea
popf
mov
leave
repz
outs
mov
shr
fistp
xor
pop
push
fwait
push
cmp
mov
fild
cli
or
jae
int
push
push
add
and
imul
or
mov
out
fist
test
scas
popa
jecxz
loopne
test
xchg
jne
retf
adc
dec
icebp
cwde
xchg
aad
mov
test
adc
repnz
cld
idiv
(bad)
mov
push
or
inc
pushf
inc
pusha
and
pop
push
popa
mov
nop
nop
mov
(bad)
stc
pop
lahf
fdiv
inc
xor
and
add
aam
jne
pop
aas
movs
sub
mov
sbb
cmp
icebp
mov
enter
bound
je
inc
fidiv
mov
out
jno
aam
mov
icebp
ins
movs
mov
ins
xchg
popf
mov
inc
icebp
or
lahf
pop
jecxz
leave
cmp
jbe
push
jo
gs
aas
je
mov
xchg
nop
lods
cmp
inc
ficomp
mov
push
int
sbb
add
add
inc
xor
sub
in
mov
callw
inc
scas
cld
push
hlt
bound
mov
dec
xchg
xlat
xor
retf
div
dec
xchg
lods
stos
test
inc
ja
mov
xor
repnz
mov
inc
xchg
pop
int3
cs
xlat
(bad)
enter
push
sbb
sbb
test
nop
xchg
stos
cmp
test
inc
ss
or
cmp
fadd
scas
push
cmp
mov
sbb
daa
dec
out
lahf
daa
mov
pusha
push
test
icebp
mov
dec
xchg
rcl
ss
jecxz
movs
lea
gs
mov
cmp
(bad)
jo
lea
sub
cli
stc
fadd
daa
jo
outs
stos
or
inc
mov
imul
sbb
das
mov
jno
pop
fiadd
inc
and
sbb
sub
pop
inc
test
mov
mov
jmp
jmp
jne
lods
popa
les
mov
loopne
popa
and
aam
add
ins
or
ja
stos
mov
adc
xchg
outs
clc
inc
fidivr
pop
daa
(bad)
cld
(bad)
xor
ins
jg
inc
pop
or
nop
mov
or
lock
fwait
loope
mov
sbb
and
xchg
das
mov
lods
ins
add
mov
fadd
les
push
stos
pop
cli
test
jl
fdiv
and
repz
or
je
test
sar
push
xchg
mov
repnz
retf
jg
fadd
push
lock
std
(bad)
rcr
push
jl
stos
pop
push
sti
inc
ds
mov
test
(bad)
cli
or
xor
es
inc
sub
add
jge
mov
push
popf
mov
dec
in
in
add
inc
push
stos
jo
mov
cmps
fs
inc
sub
fisttp
mov
push
mov
std
rol
movs
inc
xchg
dec
int
push
daa
icebp
(bad)
inc
pop
arpl
inc
xchg
inc
sti
inc
es
cmps
into
mov
jmp
pop
push
int
sbb
add
pop
arpl
fs
lahf
sbb
xchg
aaa
mov
jae
or
and
mov
in
enter
ins
cmp
jg
mov
xor
iret
repnz
repz
push
jecxz
(bad)
ds
in
push
in
cmp
dec
mov
jns
mov
mov
mov
(bad)
loope
cmps
rcl
sti
xor
sub
lods
sub
test
pop
mov
dec
add
cmp
icebp
mov
or
ja
pop
lds
fs
push
sub
rol
xchg
fwait
jecxz
lods
imul
xchg
push
aas
jmp
lods
lods
inc
ret
ins
into
ds
cmc
fistp
dec
jo
dec
fistp
jl
mov
push
xchg
nop
xchg
adc
fdivr
clc
jbe
pop
xor
sbb
xchg
das
mov
mov
add
and
(bad)
adc
pop
popa
popf
pop
retf
dec
xchg
ret
in
popa
and
fnstenv
sbb
xchg
mov
lds
cwde
mov
or
not
(bad)
sbb
outs
mov
outs
cs
mov
aad
(bad)
push
mov
pop
int
ss
add
ins
je
or
sub
xchg
xchg
clc
in
inc
scas
ret
push
jp
push
scas
pop
shl
jl
xchg
jbe
clc
mov
stos
leave
xor
xor
fsub
dec
ins
(bad)
mov
cs
(bad)
xor
dec
mov
gs
jp
xchg
mov
pop
loop
add
es
daa
ins
inc
pop
adc
imul
xor
sub
xor
fist
cmc
bound
fmul
xchg
or
xchg
fs
push
and
mov
fadd
pop
mov
xor
clc
gs
lods
push
xchg
dec
(bad)
cmp
xlat
inc
in
add
cmp
mov
jmp
mov
jmp
jle
call
sub
push
xchg
popf
mov
pop
in
fdiv
ficomp
pop
push
cmps
pop
fnsave
xchg
pusha
in
pop
xor
shl
add
ins
(bad)
imul
jo
mov
repnz
repz
sbb
(bad)
cmp
ds
fcomp
inc
repz
dec
fisttp
jnp
mov
pop
jle
mov
scas
pop
call
push
push
pop
and
cmp
xchg
or
test
aam
jg
mov
jmp
fwait
push
mov
jbe
test
repz
mov
jecxz
add
std
fst
lahf
mov
cmp
add
mov
push
cmp
icebp
adc
mov
add
(bad)
aad
push
sbb
push
pop
mov
dec
cmp
cwde
aas
fnsave
jmp
je
cmp
xor
fs
das
mov
fsubr
mov
mov
ja
cmps
mov
out
fsub
jmp
pop
inc
mov
push
in
ja
(bad)
repz
add
pusha
scas
sbb
leave
xchg
push
xor
jmp
rcl
dec
ins
fwait
mov
daa
sub
std
(bad)
clc
dec
ficomp
jl
push
das
jg
mov
pop
lahf
xchg
int
adc
repz
in
aas
mov
add
add
aaa
sbb
push
mov
jb
scas
jnp
movs
cmp
mov
jae
test
inc
inc
jbe
dec
cli
mov
dec
xchg
les
test
add
dec
scas
cwde
sahf
retf
sbb
test
daa
mov
(bad)
(bad)
dec
push
nop
mov
loopne
retf
cmp
aad
jl
xor
dec
mov
push
mov
mov
mov
jecxz
bswap
shr
dec
pop
int
adc
push
(bad)
and
test
and
sbb
pop
sti
stc
xchg
es
pop
push
stos
pop
shl
mov
or
fbstp
cli
stos
rcl
push
push
ds
leave
xchg
cld
out
arpl
(bad)
pop
cs
push
fist
inc
jae
ins
mov
push
or
test
mov
or
jl
fdivr
jae
(bad)
pop
push
add
popa
mov
mov
nop
dec
xor
sbb
adc
jge
inc
lea
lods
loopne
xchg
shl
pushf
xchg
pop
sub
int
or
pusha
mov
jmp
jo
(bad)
aad
ret
inc
int
ds
call
scas
or
mov
aaa
imul
jmp
jl
aas
retf
push
pop
add
pusha
and
ds
test
call
fidivr
jbe
and
les
cmp
stos
mov
sub
mov
neg
sbb
xchg
jne
dec
int
sub
std
in
pop
cdq
cmp
dec
mov
inc
sub
popf
cmps
nop
lods
adc
(bad)
pusha
fwait
loope
mov
pop
int
adc
and
imul
xor
xor
add
adc
arpl
hlt
xchg
(bad)
dec
xchg
fsub
fs
pop
push
std
shl
add
push
or
xchg
xor
inc
ja
fnstenv
jecxz
sar
clc
push
lock
inc
stos
adc
sahf
arpl
cmps
movs
lods
or
fistp
cli
add
xor
inc
adc
daa
and
das
mov
mov
xor
mov
dec
clc
repz
daa
mov
jg
popf
pop
repz
ins
xchg
enter
mov
test
sbb
cmp
sbb
pop
dec
fidivr
daa
sbb
in
sti
ja
xor
adc
mov
jns
test
mov
daa
fild
add
xor
xor
pop
pop
xor
sbb
fisubr
cmp
xchg
movs
lahf
push
mov
shl
(bad)
push
xchg
jp
mov
mov
add
rol
(bad)
test
arpl
inc
mov
pop
or
out
(bad)
rcl
add
outs
mov
ins
pop
add
mov
mov
push
jmp
push
bound
out
xor
cwde
add
je
js
xchg
cmp
movs
test
sahf
fcom
neg
pop
xchg
mov
mov
nop
jbe
in
test
les
lods
ror
inc
push
add
sbb
lods
inc
int
xlat
or
dec
or
inc
mov
pop
cmp
femms
enter
or
xor
pop
adc
pop
mov
jns
test
inc
movs
and
mov
dec
call
std
push
test
mov
pop
mov
xchg
push
cli
shl
mov
jle
mov
add
add
ins
xchg
fadd
dec
in
dec
and
std
(bad)
rol
fs
dec
mov
imul
xchg
lods
mov
int3
cli
sbb
jb
in
sub
inc
or
jmp
adc
sub
popf
shl
out
fistp
xchg
push
test
mov
mov
out
push
push
std
fmul
lahf
scas
rcl
outs
jg
mov
sbb
stc
icebp
mov
sti
pop
imul
ds
rol
xor
or
mov
mov
lods
or
or
fld
push
pop
add
add
inc
inc
fld
mov
push
imul
(bad)
aaa
mov
je
stos
pop
idiv
stos
ins
in
addr16
rcr
stos
jecxz
test
ja
leave
test
aad
pusha
ins
cdq
stos
inc
ret
inc
(bad)
adc
mov
jae
inc
cwde
pop
outs
je
jb
jb
xchg
mov
push
pop
inc
jge
mov
adc
data16
push
es
mov
(bad)
xchg
aaa
sar
out
jge
ficom
mov
dec
mov
mov
clc
ret
adc
ins
mov
jnp
xchg
mov
sbb
cli
in
ret
cld
cmp
mov
xor
pop
fidivr
or
fdivr
(bad)
ss
or
aas
push
inc
cli
pop
add
test
pushf
cmp
stc
push
cli
ds
(bad)
jbe
or
fnstenv
or
push
or
inc
ja
jp
movs
ds
lods
(bad)
lahf
or
aaa
jl
int3
xchg
and
data16
push
repz
inc
loopne
xchg
push
in
jb
jmp
dec
movs
mov
addr16
push
cmp
rcr
push
jmp
cs
mov
push
jmp
ja
dec
mov
push
sub
stos
iret
mov
fsubr
pop
mov
xor
pop
sbb
and
pusha
scas
add
xchg
fcomp
in
mov
mov
jb
dec
je
mov
jle
(bad)
xchg
not
out
rcl
lea
push
mov
jmp
inc
ins
sahf
mov
sbb
aaa
stc
clc
rol
push
sbb
sbb
mov
cs
stos
call
cmp
mov
inc
iret
pop
sbb
or
sbb
test
aas
mov
mov
aaa
pop
pop
out
(bad)
xchg
daa
mov
jb
push
retf
cmp
mov
call
ins
xchg
push
push
loope
(bad)
push
cmp
popf
and
cmp
outs
aad
cs
out
jp
add
fstp
pop
mov
xchg
mov
jg
out
or
cmc
jbe
imul
adc
pop
(bad)
pop
mov
pop
inc
mov
pusha
jmp
and
repnz
lea
cmp
ds
out
pusha
rcl
cmps
push
jecxz
mov
stos
sar
test
mov
push
inc
(bad)
sbb
test
jecxz
call
cld
xlat
inc
inc
imul
test
inc
and
in
mov
mov
jmp
pop
xor
and
sub
je
pop
inc
mov
jb
mov
ins
out
fstp
imul
jecxz
xchg
les
and
sti
scas
adc
xchg
sbb
xchg
push
aaa
in
lock
dec
ins
mov
inc
rcl
pop
cs
sti
clc
dec
jmp
jae
pop
lahf
pop
outs
push
mov
pop
pushf
mov
mov
jmp
jne
int
adc
add
inc
movs
or
movs
cmp
mov
pop
cli
rcl
loopne
jbe
sub
fnstenv
xchg
les
fcmovnbe
test
pushf
rcl
outs
pusha
mov
fcomip
mov
ror
mov
cs
push
in
inc
jo
pop
pushf
pop
push
pop
sbb
test
movs
test
sub
or
and
xor
mov
scas
xor
imul
xor
cdq
or
add
xchg
cmp
fs
mov
dec
cdq
rcl
std
mov
or
jae
mov
loopne
fcomip
pop
dec
lea
ds
fist
xor
inc
xchg
popa
pop
mov
and
mov
lods
pop
(bad)
pop
mov
dec
int
sbb
cmp
pop
pusha
test
movs
sbb
mov
mov
and
fist
loope
outs
push
lea
mov
mov
test
sti
fnsave
mov
sar
pop
outs
mov
aam
f2xm1
pop
ins
fwait
stos
push
cs
loop
pusha
sbb
add
outs
mov
sbb
loope
arpl
xor
xor
push
adc
fwait
sub
pop
test
imul
sub
mov
(bad)
adc
adc
out
cmp
pop
jno
dec
sti
mov
dec
xchg
shl
rcl
xchg
xchg
fldcw
fdivr
mov
stc
icebp
test
repz
inc
mov
jnp
dec
(bad)
ds
push
retf
sub
pop
inc
push
call
or
mov
test
or
inc
jecxz
das
mov
popa
bound
into
sbb
push
mov
sahf
jge
mov
mov
in
xchg
aaa
mov
jb
outs
jb
popf
pop
cdq
mov
dec
xchg
jmp
addr16
enter
stos
stc
daa
(bad)
sahf
xchg
xchg
xor
(bad)
mov
into
sub
fist
push
pop
pop
cld
bound
sub
call
push
dec
ja
iret
and
pop
xor
xor
dec
pusha
mov
jae
mov
ins
out
fnsave
les
inc
lods
dec
(bad)
lods
xchg
shl
in
jno
rcl
xchg
jecxz
scas
mov
inc
addr16
add
imul
jmp
cmp
and
push
dec
push
mov
inc
lods
mov
stc
outs
(bad)
loope
mov
pop
pusha
jle
out
cmp
add
ds
das
mov
test
cmp
cmps
(bad)
arpl
sar
loop
pop
inc
fcomp
xchg
(bad)
dec
mov
mov
xchg
pop
stos
stos
mov
mov
and
cmps
pop
jecxz
cmps
xor
pop
cmc
stc
mov
cli
dec
push
or
aas
je
mov
mov
mov
out
jmp
daa
(bad)
daa
and
sbb
push
fld
sahf
je
xor
adc
xor
scas
xchg
aaa
mov
dec
inc
mov
inc
xchg
mov
ins
in
je
std
xlat
test
mov
mov
push
call
xchg
fsubp
dec
jnp
lods
dec
in
(bad)
cmp
ret
and
and
sbb
mov
jge
mov
jmp
mov
gs
or
add
and
push
stos
sbb
mov
mov
clc
retf
or
push
fisubr
mov
dec
sbb
pop
and
fcomi
or
popa
movs
(bad)
pushf
loope
mov
xchg
add
icebp
mov
jmp
jl
call
sbb
(bad)
std
inc
jmp
cmp
das
js
mov
bound
or
jnp
xlat
pop
inc
popa
adc
pop
adc
push
fwait
sub
pop
jnp
jg
xchg
cmp
test
in
mov
or
mov
pop
mov
mov
ss
(bad)
pushf
popf
iret
sbb
xchg
adc
aam
ret
clc
arpl
xor
jbe
prefetchwt1
in
call
jo
dec
sbb
mov
pop
xchg
stc
outs
out
repz
mov
movups
int
sub
pop
or
adc
pop
inc
fld
movs
cmp
xchg
lahf
outs
aaa
sub
call
(bad)
jb
jns
inc
adc
jmp
pusha
in
popa
and
rol
imul
lods
xchg
pushf
adc
fiadd
push
sti
inc
lds
sub
stc
xlat
retf
and
mov
inc
sub
mov
mov
loop
or
xor
and
pusha
pop
popa
mov
add
pop
mov
mov
aaa
das
dec
(bad)
fist
in
inc
push
lea
mov
push
jecxz
test
je
icebp
fld
mov
push
mov
(bad)
fldenv
mov
cmps
or
sti
dec
repz
or
add
pop
mov
cs
mov
mov
sub
imul
or
xor
xor
or
mov
shr
mov
dec
stos
cmp
inc
add
fist
mov
ret
mov
dec
lahf
les
pop
(bad)
shr
mov
bound
cli
les
lahf
xchg
jne
and
xor
cmp
(bad)
jbe
and
dec
mov
inc
daa
pop
lods
mov
mov
in
sbb
xor
and
das
mov
mov
cmps
sbb
or
sub
fucomip
add
inc
mov
pop
test
mov
push
neg
nop
sbb
ja
sub
xchg
mov
push
aaa
fadd
test
repz
jle
mov
out
fidivr
ret
and
xor
adc
movs
arpl
jns
mov
iret
xor
retf
push
clc
jno
jb
(bad)
aaa
or
pop
mov
test
aaa
mov
popf
adc
pop
sti
fdiv
jmp
pop
ja
jge
(bad)
sbb
jle
std
sar
mov
pop
ja
mov
cwde
test
repz
sbb
fidivr
and
cli
fcmovu
push
xchg
daa
jo
dec
mov
sub
mov
jmp
fs
int
or
adc
xlat
imul
xor
sbb
aaa
pusha
call
ret
jb
ins
pop
push
mov
jae
xlat
mov
mov
xor
jecxz
stos
(bad)
shl
out
mov
sbb
stc
cdq
lods
repz
inc
cdq
add
test
push
xchg
xor
punpcklwd
mov
mov
mov
dec
clc
iret
das
(bad)
clc
jbe
popa
ds
push
inc
es
add
xchg
xor
cwde
mov
dec
ret
xor
stos
pop
out
repz
push
add
repz
push
jecxz
movs
mov
jns
mov
sbb
stc
repnz
aam
ins
pushf
mov
or
dec
cmc
ror
jl
or
or
mov
jp
mov
fsub
jnp
shl
xor
xor
pusha
or
xchg
sub
scas
dec
xor
adc
and
(bad)
xchg
aaa
mov
push
pop
stos
pop
lock
(bad)
xchg
push
and
shr
test
cmp
not
cmp
fld
popf
stos
jns
sub
idiv
aam
call
stos
pop
push
mov
jns
mov
mov
cmp
mov
pop
inc
pop
or
xor
nop
sbb
mov
ja
stos
(bad)
sbb
xchg
xor
pop
and
inc
sti
test
pop
cmps
les
in
retf
popf
or
ja
pushf
fwait
jecxz
stos
pop
outs
mov
repnz
test
loopne
rcl
push
sub
xor
dec
stos
nop
movs
inc
pop
jp
nop
xchg
mov
fadd
cli
or
int
adc
adc
imul
xor
fwait
or
and
fist
fbld
ja
and
movs
cld
pop
adc
fs
xchg
jne
retf
or
ins
or
add
pop
add
(bad)
xchg
repz
ins
nop
mov
aad
or
mov
sti
inc
pushf
sbb
dec
test
ins
jg
dec
ds
nop
int
adc
xlat
jnp
cli
jae
xor
pop
sbb
sub
pusha
lods
jl
movs
cmp
mov
dec
out
xchg
aaa
mov
pop
push
scas
push
les
cwde
dec
out
ja
leave
repz
cwde
fisubr
fisttp
in
mov
fiadd
pop
jecxz
stos
xor
dec
fdivr
rcl
sub
sub
or
movs
cmp
mov
mov
jmp
jno
shl
jo
add
outs
js
ins
add
stc
sbb
and
fistp
pop
jbe
dec
(bad)
lods
loop
xchg
enter
add
add
dec
xchg
mov
push
mov
jmp
jp
pushf
scas
jne
jbe
adc
sub
hlt
fcom
push
je
pop
rcr
push
fwait
dec
or
mov
mov
or
je
(bad)
pushf
sar
imul
aaa
cmp
pusha
test
inc
cmp
stos
mov
or
and
sbb
push
push
scas
pop
repz
(bad)
pop
call
xchg
add
call
dec
test
sbb
mov
ss
adc
fwait
inc
out
cmps
ds
push
sti
pop
push
js
test
popa
je
inc
sub
stos
sbb
ror
cli
or
xor
pop
push
or
add
jg
mov
jo
test
out
out
add
je
xchg
lods
mov
int3
xchg
data16
mov
and
hlt
xchg
repz
sub
mov
daa
sti
rol
aad
shr
or
sbb
cld
fsub
fisub
sbb
push
mov
push
xchg
mov
dec
fcmovnu
and
add
int
fs
adc
les
test
aas
movs
cmp
mov
dec
in
(bad)
mov
mov
jbe
xchg
(bad)
lods
jmp
xchg
int3
mov
cwde
popa
xor
fsub
cwde
fcmovnbe
xor
mov
repnz
mov
or
dec
ret
stc
into
inc
out
add
dec
stos
or
mov
add
mov
pushf
sub
test
or
cmp
pop
fs
add
xor
push
mov
jae
stos
xchg
and
fist
cmc
outs
jno
xchg
lods
ret
push
in
pop
and
rcl
lahf
mov
jle
leave
xchg
aas
stc
retf
mov
fimul
fwait
lods
inc
iret
push
pop
cmp
ret
hlt
fldenv
ss
xor
pop
sub
mov
lods
jl
jmp
pop
in
push
sub
pop
fild
jg
fnsave
push
nop
mov
dec
out
add
push
les
push
mov
pusha
xchg
les
and
in
ins
mov
stos
leave
cmp
adc
stc
xchg
fwait
lods
dec
out
push
sbb
frstor
add
push
stos
cmp
sub
cmps
mov
jl
stc
aas
mov
je
jno
int
sbb
adc
jnp
sahf
jg
movs
sbb
xchg
mov
dec
jecxz
xchg
aaa
mov
jb
ins
jbe
stos
dec
repz
inc
xchg
stos
call
call
and
lock
fsubp
cmp
test
clc
in
stc
pop
pop
mov
inc
jecxz
(bad)
cmp
jmp
and
jp
mov
pop
mov
add
jnp
cli
or
je
iret
pop
sbb
das
mov
test
xor
pop
adc
pop
out
into
xchg
adc
sbb
mov
ins
xchg
int
jo
xchg
jb
call
adc
or
scas
cmp
xlat
repnz
cli
(bad)
inc
mov
dec
jecxz
cld
cmp
ds
fcmovu
push
out
pop
pop
sbb
addr16
push
popf
inc
ds
cmps
cdq
mov
pop
imul
jecxz
or
dec
jns
int
adc
sub
jg
dec
adc
aas
jo
scas
test
out
jmp
jne
inc
lea
mov
mov
ret
xchg
jno
call
mov
fld
mov
ins
mov
enter
cmp
jnp
jae
dec
or
loope
call
inc
add
pusha
inc
xchg
jns
mov
mov
pop
stc
push
int
das
test
and
pop
adc
sub
mov
jge
movs
loope
add
pop
in
xlat
xchg
and
in
push
repnz
jbe
stos
jp
mov
jl
les
or
ret
std
add
ins
or
ja
call
loop
inc
ins
cdq
lods
push
jecxz
clc
ds
call
fcomp
outs
pusha
mov
dec
mov
fild
cli
or
and
xor
das
mov
mov
jg
mov
dec
in
stc
xchg
daa
mov
push
pop
stos
pop
rep
(bad)
pusha
xchg
rcl
std
xlat
hlt
add
(bad)
aas
test
arpl
(bad)
sbb
scas
cmp
pop
ror
ds
cld
clc
inc
call
test
pop
push
mov
jns
mov
mov
jmp
jno
leave
inc
pop
add
pop
fistp
cmp
dec
js
mov
dec
in
stc
mov
lock
jbe
test
icebp
xchg
lock
test
mov
push
xor
rol
(bad)
mov
jae
lds
mov
repz
push
(bad)
fs
ficom
cs
(bad)
fild
and
pop
jl
mov
mov
xchg
pop
cmp
ins
enter
clc
pop
imul
cmp
push
pop
adc
imul
cmp
sbb
dec
leave
fbld
inc
inc
stos
pop
out
hlt
ins
xchg
mov
pop
in
xchg
jg
ffreep
test
xchg
push
xchg
addr16
mov
repz
aad
outs
xchg
fisttp
pop
cmc
sbb
cli
lock
add
mov
push
cs
shr
loop
or
mov
sbb
hlt
dec
jb
jl
test
jb
test
xor
xor
iret
jecxz
sahf
sti
fs
sbb
(bad)
movs
lock
mov
mov
push
cmc
ror
cmps
mov
mov
call
xchg
(bad)
outs
push
(bad)
mov
push
scas
sbb
aad
shr
adc
dec
mov
xor
or
cmp
push
mov
add
int
sbb
adc
imul
cmp
sbb
push
pusha
leave
fild
cmc
push
aad
fisubr
sahf
adc
xchg
js
fld
test
out
test
stos
jmp
mov
repz
pop
xchg
(bad)
push
in
cmp
clc
lea
add
pop
popa
inc
stos
push
cs
rcl
loop
pop
movs
fsub
inc
mov
sbb
retf
inc
cmps
pop
cmp
sbb
push
cmp
fistp
not
inc
stos
pop
rol
sub
jns
fcmovb
test
out
push
repz
addr16
fwait
mov
rep
aad
sbb
or
fisub
xor
das
pop
jo
inc
cs
mov
mov
jmp
jge
pop
or
xor
push
or
or
jg
nop
cs
popf
lods
xchg
fist
sar
push
scas
dec
lds
test
pop
std
rol
xchg
je
mov
repnz
dec
outs
fwait
movs
inc
loopne
fidivr
sub
fdivr
fcom
xor
sbb
pop
mov
jns
mov
pushf
cmp
dec
xchg
clc
jne
jno
enter
daa
add
push
jb
jae
cmps
cmp
mov
pusha
cdq
repz
adc
repz
inc
mov
xchg
fs
mov
ss
(bad)
mov
jecxz
test
outs
sbb
adc
cli
test
idiv
lea
mov
pop
inc
fdiv
fist
xor
inc
stos
data16
mov
jns
mov
scas
or
outs
iret
cli
or
cmp
xor
jo
adc
imul
xor
sbb
and
fbstp
icebp
popa
jbe
stos
pop
repz
cmps
(bad)
mov
in
in
add
(bad)
mov
mov
inc
mov
jecxz
(bad)
dec
inc
xchg
(bad)
push
clc
pop
push
xor
or
add
pop
outs
and
lds
imul
mov
pop
xchg
sub
sub
jbe
rcl
push
popf
cmps
lahf
sbb
and
jmp
xor
inc
inc
stos
pop
call
mov
dec
rcl
scas
and
outs
test
sub
cmp
dec
ins
fwait
lods
inc
xchg
sub
cli
cld
fist
add
dec
sbb
and
xchg
mov
stos
cmp
mov
clc
jge
jno
int
ss
pop
adc
jg
xchg
jg
mov
jne
movs
mov
inc
and
fild
repnz
push
repz
and
xchg
out
xchg
(bad)
scas
out
stos
inc
data16
xchg
test
xor
dec
dec
cwde
fwait
inc
jmp
fild
sbb
fmul
js
dec
mov
dec
pop
jp
mov
fld
call
pusha
inc
xor
pop
adc
daa
mov
mov
fdivr
lea
xor
xchg
xor
jge
push
adc
loopne
jmp
pushf
arpl
xchg
jae
repnz
sar
imul
and
rol
ins
xchg
lods
inc
jecxz
fidivr
retf
push
into
xor
sbb
and
mov
mov
test
jae
into
pop
sbb
push
mov
stos
jge
movs
adc
mov
js
fcom
dec
jp
scas
dec
repz
lock
les
icebp
rol
xchg
pop
movs
xchg
xchg
adc
cli
lock
retf
and
fwait
inc
sti
pop
int3
push
push
sub
fidiv
imul
mov
aam
call
addr16
in
and
jmp
xchg
push
add
mov
call
fsubr
arpl
pop
test
in
out
and
push
in
mul
push
in
mov
add
(bad)
test
inc
jg
popf
push
rcr
inc
pop
sub
jmp
imul
or
cmp
div
ss
cmps
enter
sbb
out
sbb
push
sbb
and
sub
sub
pop
add
xor
(bad)
aad
add
dec
pusha
cli
in
mov
cwde
pop
pop
inc
test
lea
inc
not
xchg
movs
fisubr
arpl
mov
xor
(bad)
xchg
fiadd
ins
leave
addr16
dec
and
out
inc
fs
(bad)
push
dec
inc
stos
dec
pop
dec
mov
aaa
dec
sbb
ret
arpl
scas
seto
inc
jns
push
inc
xlat
dec
push
lods
lea
test
test
hlt
sbb
mov
jmp
popa
loope
push
add
push
mov
xchg
arpl
mov
jl
or
inc
jmp
rcl
das
fcom
add
movs
xor
and
les
ret
xchg
mov
inc
jne
mov
push
mov
ins
push
ret
mov
push
out
sbb
lods
mov
leave
push
cmove
push
push
test
test
out
fwait
test
icebp
push
mov
cmps
arpl
mov
mov
loope
sbb
int
and
loopne
cli
pop
pop
ds
ins
inc
jb
ins
sub
scas
int
adc
or
inc
ret
or
pop
sub
adc
jo
mov
or
jmp
push
and
xchg
pop
fdivr
fimul
mov
test
cdq
sbb
xchg
jecxz
sub
dec
mov
xchg
inc
push
xchg
xchg
xchg
fs
cwde
cdq
test
dec
push
cdq
mov
push
add
inc
pop
jns
adc
pop
mov
and
out
movs
xchg
cs
fs
jg
clc
sbb
inc
mov
adc
ins
push
mov
popf
adc
call
sti
lods
loop
int
jle
imul
ds
push
xchg
in
and
xchg
or
push
add
fsub
scas
stos
loopne
pop
mov
icebp
adc
sub
(bad)
into
and
add
jp
xor
jl
jno
jl
test
ja
aad
xchg
lock
dec
push
and
cmp
pusha
and
xchg
aaa
lods
sub
or
(bad)
dec
push
fwait
lea
popf
sti
mov
bnd
gs
jle
fwait
repnz
xchg
les
push
(bad)
shl
lea
je
mov
or
(bad)
dec
addr16
push
into
jp
ds
cld
fist
and
dec
stos
pop
jo
xor
jge
mov
ret
ds
sbb
inc
int
sbb
das
scas
sub
ins
fs
sub
or
and
fist
repnz
jg
mov
dec
xchg
les
and
loop
push
test
(bad)
cmps
ret
outs
inc
mov
mov
mov
inc
mov
cld
cmp
push
jmp
sbb
mov
pop
inc
mov
fldcw
jmp
mov
add
xor
(bad)
and
cwde
pop
sbb
aam
pop
xor
cmp
scas
movs
add
clc
jb
jge
push
lea
mov
inc
xchg
mov
es
xor
sar
adc
retf
lock
xchg
sub
addr16
ds
jmp
push
bound
inc
and
lods
mov
jmp
fs
fbld
sbb
push
mov
iret
or
push
mov
jb
rcr
fwait
aam
xor
fbld
ins
push
xor
les
and
(bad)
sti
mov
test
repnz
aad
inc
ins
pushf
xchg
data16
dec
fst
adc
cld
clc
pop
pushf
ds
arpl
xor
lahf
cdq
mov
ss
into
call
dec
pop
xor
imul
pop
fisub
adc
xor
and
xor
scas
jecxz
xchg
sti
jb
adc
aam
loopne
mov
popf
jle
not
add
jle
mov
outs
call
xchg
retf
push
jmp
cs
fcmovne
inc
jmp
bound
test
jl
mov
scas
inc
jmp
je
fbld
sbb
das
mov
fsub
lods
jp
mov
je
aad
xor
add
xchg
ds
frstor
outs
jb
scas
jb
pushf
dec
les
and
cmps
sub
pop
mov
test
repnz
lock
ins
fwait
xchg
dec
ficom
pop
sub
cld
leave
pop
out
ds
pop
or
push
lahf
xor
ret
call
jo
xor
adc
dec
adc
xor
xchg
mov
pop
in
scas
in
xchg
sti
pop
cld
data16
mov
dec
xchg
mov
dec
in
jg
not
xchg
pop
retf
jle
(bad)
mov
jp
mov
fst
jmp
cs
jmp
arpl
inc
and
lods
mov
jmp
fs
and
das
mov
mov
je
(bad)
mov
aad
lods
leave
pusha
aam
mov
jbe
lahf
(bad)
jae
les
and
movs
sub
mov
pop
gs
and
retf
xchg
xchg
jp
adc
cmp
cld
lods
pop
sar
jo
arpl
cmp
mov
retf
fdivr
call
jo
xor
aas
ins
jp
adc
fmul
mov
pop
xchg
mov
ins
in
(bad)
out
xchg
sti
inc
cld
sbb
(bad)
movs
(bad)
dec
cdq
mov
dec
in
jg
not
mov
(bad)
jle
mov
fwait
les
xchg
cld
repz
mov
inc
out
push
stos
xor
cmp
enter
xor
and
stos
or
test
jl
mov
cmc
inc
jmp
pop
push
fist
pop
fs
mov
mov
stos
popa
pusha
mov
arpl
sub
xchg
adc
bound
pop
div
xchg
push
call
ins
sub
ja
mov
push
aaa
stc
test
lods
inc
jecxz
into
cmp
ds
cld
fist
pop
jo
xor
dec
cs
mov
mov
out
fmul
mov
jge
jno
int
sbb
das
mov
sahf
outs
sbb
sbb
and
xchg
aas
mov
jbe
stos
pop
repz
dec
xchg
(bad)
xchg
fs
push
and
(bad)
test
out
or
ja
mov
push
aas
iret
cli
test
sti
dec
imul
mov
(bad)
xor
pop
dec
push
mov
mov
mov
cs
ins
repnz
das
mov
jbe
je
int
xor
sbb
test
adc
xor
and
into
xchg
adc
jns
popf
push
repz
mov
out
add
lock
sub
jle
mov
gs
mov
loope
xor
dec
imul
ucomiss
idiv
fist
and
outs
scas
cmp
sbb
mov
mov
jmp
jne
int
sbb
xor
and
pop
xlat
imul
ja
cmps
lahf
sbb
and
fist
ins
jbe
mov
cmp
xchg
popa
and
rol
test
movs
outs
jne
mov
ret
sti
pop
outs
lods
fwait
inc
call
cld
fist
adc
dec
mov
dec
sub
mov
lahf
repz
add
int
sub
and
aaa
mov
in
imul
movs
cmp
mov
sub
fistp
clc
jge
inc
popf
pop
idiv
xchg
adc
xchg
jno
fld
mov
shl
mov
bound
xchg
mov
ror
(bad)
push
call
lock
fidiv
pop
push
jp
mov
fcom
out
add
sbb
inc
das
jo
adc
and
sahf
jp
lods
dec
inc
popf
into
mov
and
stc
add
leave
jp
pop
jbe
test
pop
mov
cmps
addr16
call
out
ins
mov
imul
test
cli
inc
lods
lods
push
cmp
std
icebp
fist
sbb
cmp
pop
jns
mov
jle
mov
pushf
adc
jmp
cmp
data16
int
or
aaa
mov
in
imul
movs
cmp
sbb
mov
mov
jb
dec
pop
inc
popf
pop
fnstcw
xchg
outs
call
shl
stos
mov
xchg
mov
aam
stos
ror
mov
adc
shl
fidiv
pop
inc
movs
push
sbb
mov
frstor
cli
add
shl
lds
jo
adc
jb
jg
scas
ds
popf
scas
lea
cmp
(bad)
out
inc
sahf
shl
outs
push
pop
scas
push
xchg
repnz
pushf
les
and
fadd
pushf
cmps
shl
inc
mov
retf
bnd
loopne
ins
cwde
mov
push
inc
and
push
(bad)
cmp
jle
or
cmp
pushf
mov
dec
(bad)
call
jo
xor
sub
fs
mov
sbb
into
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
imul
sub
xchg
mov
stos
or
lock
xor
xor
inc
add
adc
imul
push
xor
xor
push
sti
fisttp
repnz
jbe
lea
test
fs
loope
outs
ret
and
rol
mov
mov
icebp
push
ds
dec
outs
mov
and
rcr
cmp
mov
jno
nop
mov
jmp
jno
les
sbb
sub
jg
mov
stos
mov
dec
out
(bad)
xor
sti
jnp
dec
jl
cdq
pop
icebp
mov
dec
xchg
int
fs
push
and
ror
stos
enter
je
mov
or
fmul
jbe
jp
ds
jmp
daa
data16
pop
inc
jo
inc
sub
or
or
xor
xor
or
fwait
das
mov
lods
pop
xor
mov
out
xchg
xor
sti
jb
gs
test
lock
jl
(bad)
xchg
ins
in
jb
std
(bad)
push
xchg
ins
or
pusha
xchg
mov
sbb
stc
or
lods
inc
jecxz
fidivr
and
cli
hlt
shl
xor
adc
popf
bound
pop
pushf
mov
mov
jmp
pop
cmp
daa
cmp
jl
sub
cs
imul
xor
push
xor
xchg
aaa
mov
add
(bad)
lock
mov
mov
in
jb
std
ror
lahf
stos
loop
mov
test
repnz
mov
pop
into
ds
and
dec
fistp
ins
push
mov
ins
fwait
mov
pushf
sbb
fild
cli
or
int
sub
adc
arpl
addr16
movs
cmp
mov
pop
call
ret
jbe
push
xchg
les
std
(bad)
cmp
ins
add
jb
mov
sbb
mov
push
xchg
lds
aaa
pusha
mov
dec
sub
lds
inc
icebp
ret
xadd
pop
or
out
xor
pop
sbb
adc
dec
ins
xchg
or
rol
idiv
mov
retf
popa
lea
std
dec
sti
(bad)
test
es
lock
push
pop
stos
pop
push
mov
call
dec
dec
mov
jmp
out
out
jne
inc
dec
jnp
mov
arpl
(bad)
pop
or
inc
ret
mov
ins
jl
and
xor
fs
lods
sub
(bad)
dec
inc
mov
lea
add
cmp
shl
push
fcomp
stos
pop
in
loop
xor
mov
scas
mov
sbb
movs
cmc
xor
out
rol
jecxz
inc
mov
or
dec
shl
jg
pop
add
mov
push
cmp
mov
int
popf
cli
push
(bad)
arpl
cmc
xor
pop
je
icebp
pop
ror
inc
push
or
xchg
mov
pushf
stos
mov
repnz
jle
mov
jno
iret
lahf
dec
call
lock
cmps
mov
push
fadd
add
or
dec
cmp
movs
popa
jecxz
call
int3
fistp
add
pop
xchg
cmp
or
(bad)
mov
sbb
cmps
jge
lea
mov
inc
cmps
and
and
div
pushf
jns
mov
call
mov
clc
imul
pop
sub
pop
rcl
pop
std
sahf
ja
cli
(bad)
mov
cld
mov
inc
test
cmps
not
dec
imul
fst
cmp
(bad)
mov
fadd
and
aaa
pusha
jns
xor
or
pop
div
fld
mov
cmps
inc
xor
aaa
cmp
and
jge
mov
stos
xchg
test
aad
inc
mov
jb
mov
into
jmp
in
dec
aam
pop
sbb
lock
adc
inc
test
dec
add
mov
fisttp
jmp
sub
mov
inc
and
test
push
push
sahf
inc
pop
push
cdq
mov
cld
js
in
jg
call
jno
mov
js
push
and
pop
adc
pop
lods
test
xor
adc
icebp
loope
call
mov
jg
repz
shl
mov
sbb
xchg
cmps
test
cmp
repz
movs
(bad)
inc
sbb
popf
jne
and
sbb
sub
(bad)
pop
in
add
inc
mov
imul
into
or
in
and
or
cmp
pop
or
popa
push
mov
cmp
loope
and
mov
mov
jnp
sbb
jne
mov
loop
enter
mov
xchg
sahf
in
lahf
jnp
mov
aam
movs
out
fstp
lahf
sahf
addr16
das
mov
sbb
aad
lods
es
cmp
aas
fcomp
adc
jl
popf
les
stc
aam
movs
cli
add
add
popa
jl
mov
jb
mov
arpl
mov
cmp
xor
in
xchg
adc
inc
sub
jbe
mov
xchg
ins
loopne
add
fcmovb
mov
in
loop
scas
sbb
popf
cmp
ret
dec
ja
xchg
fs
jo
adc
or
ror
popa
inc
add
or
(bad)
clc
je
popa
popf
mov
enter
jg
(bad)
jl
inc
dec
inc
push
push
xor
test
dec
push
(bad)
adc
xchg
adc
rol
(bad)
pop
into
fbld
je
mov
pop
mov
mov
adc
lock
or
outs
movs
mov
popa
add
cmps
stos
adc
in
repz
dec
mov
sub
dec
int
sbb
lock
inc
jle
jl
sbb
xor
jno
test
add
fisttp
mov
es
es
cmp
and
push
adc
pop
mov
push
pop
(bad)
movs
adc
inc
jno
jl
mov
push
mov
cdq
dec
shl
scas
xor
ja
mov
add
cmps
xchg
ss
(bad)
(bad)
aad
es
call
call
div
pop
sahf
daa
jne
ins
mov
jbe
jne
mov
test
cwde
std
and
push
add
adc
add
cmp
and
adc
outs
nop
sar
push
add
xor
lods
test
add
push
pusha
shr
mov
push
xchg
sahf
jb
(bad)
jno
pop
mov
mov
arpl
nop
scas
and
icebp
aas
inc
lods
mov
dec
repz
pop
adc
xchg
shr
push
jge
jns
sub
or
popf
mov
xchg
sbb
fstp
lock
sbb
pop
es
push
sub
or
mov
inc
popf
lods
mov
and
rol
out
jbe
scas
sub
mov
jae
(bad)
cmps
popa
rol
cmp
ins
or
mov
repnz
iret
retf
sahf
lods
inc
jecxz
fidivr
sub
arpl
cmp
dec
cmps
or
xor
nop
mov
scas
pop
jmp
jno
int
adc
das
mov
test
xor
sbb
and
jmp
loop
inc
pop
sub
les
daa
mov
scas
xor
outs
xor
sar
cld
sbb
repnz
fmul
jne
push
or
dec
enter
xchg
inc
jo
dec
mov
inc
sbb
mov
mov
sub
outs
(bad)
cli
das
mov
jne
jge
int
sbb
das
mov
test
xor
bound
and
fist
bnd
stos
outs
repz
inc
xchg
mov
jno
std
fadd
pushf
ror
stos
pop
jnp
add
rcl
jle
lods
scas
push
out
pop
in
add
stc
icebp
fistp
add
dec
rcl
imul
mov
or
push
test
aas
int
or
sub
js
movs
cmp
mov
sbb
xor
div
pop
dec
inc
popf
pop
out
in
xchg
fcom
(bad)
xchg
pusha
xchg
mov
bound
mov
add
sti
aam
into
ror
stos
dec
jecxz
into
pop
cmp
(bad)
call
pop
or
pop
jl
mov
sbb
mov
fisub
or
shl
rcr
jo
pop
xchg
aaa
mov
mov
outs
popf
mov
dec
cld
fild
sti
outs
outs
pop
mov
repz
jg
aam
fs
jns
fcmovnb
test
lea
jnp
mov
xor
loop
iret
repz
pop
jmp
inc
jecxz
fidivr
ds
out
fnstenv
ds
or
pop
gs
inc
jp
mov
mov
jmp
jno
jecxz
sbb
sub
test
adc
mov
dec
jmp
repnz
pop
sub
in
xchg
(bad)
xchg
outs
std
xchg
jb
hlt
in
sub
add
ja
xchg
test
sbb
lock
(bad)
dec
dec
fwait
movs
inc
lds
aaa
ds
(bad)
fistp
sub
pop
dec
push
mov
jge
mov
mov
sar
test
jne
jae
cmc
xor
jo
sbb
imul
adc
nop
lahf
sbb
and
stc
xchg
aaa
mov
addr16
push
fistp
mov
ins
xchg
int
inc
std
xchg
jno
in
rcl
rol
aas
movs
ins
ja
mov
push
daa
stc
les
cwde
aad
in
fidivr
daa
dec
cli
in
push
clc
adc
outs
stos
sbb
push
stos
inc
ds
mov
xchg
sbb
fadd
cld
jg
jno
int
or
das
mov
test
aaa
lods
inc
ja
mov
dec
leave
fist
repnz
jb
fisttp
loopne
xchg
les
and
xlat
lods
add
ins
or
ja
mov
aam
retf
ins
mov
fidivr
ds
out
xlat
push
cdq
xor
pop
dec
mov
push
pushf
mov
fistp
jmp
inc
xor
sbb
and
test
movs
cmp
mov
pop
out
fcom
les
push
stos
pop
loope
lock
xchg
push
adc
shr
fwait
test
bts
xchg
mov
push
daa
stc
repnz
(bad)
dec
dec
mov
call
in
fist
add
dec
stos
add
jg
inc
cs
mov
mov
repnz
mov
je
jno
(bad)
sbb
add
cwde
add
cdq
jl
mov
pushf
sbb
cmp
rcl
ins
jbe
lahf
pop
shl
xchg
fs
add
aam
test
idiv
xchg
popf
sahf
sbb
cli
jmp
rol
je
pop
stc
dec
sbb
int3
cld
mov
call
fcomp
ins
push
lods
dec
cs
cmps
mov
xor
fnstenv
cli
push
xchg
lea
inc
xor
and
sub
test
xor
cmp
add
push
mov
gs
popf
pop
fldenv
xchg
mov
xchg
jecxz
scas
lea
ja
mov
adc
loope
mov
cdq
mov
jp
adc
sub
loopne
inc
push
test
pop
mov
sub
call
or
add
cli
or
jno
enter
lar
bound
test
add
cmps
xor
and
mov
mov
jbe
cmp
repnz
addr16
add
fst
cdq
test
ja
xchg
sbb
pusha
pop
fwait
pop
push
mov
sub
jbe
xor
sbb
cs
mov
fild
cmc
or
xor
xor
adc
sub
mov
movs
aaa
pop
call
(bad)
fist
cli
ins
addr16
scas
pop
repz
dec
xchg
fnsave
cs
fbld
lods
stos
sar
outs
ja
mov
pushf
sbb
fwait
ins
retf
cmp
fisttp
pop
jo
dec
lea
push
mov
jg
mov
mov
sti
nop
sbb
pop
mov
cmp
add
arpl
adc
repz
inc
add
inc
mov
jbe
mov
jp
out
in
in
mov
and
call
xchg
mov
or
scas
aad
ins
cwde
movs
aaa
out
pop
fst
or
(bad)
(bad)
jle
and
push
dec
test
pop
pop
pop
mov
mov
imul
push
bound
(bad)
inc
push
outs
sbb
add
mov
lea
inc
adc
out
fild
fstp
add
stos
pop
aad
xor
les
pop
shl
scas
add
push
cmp
out
xor
stc
repnz
mov
pushf
mov
retf
dec
or
cli
cld
retf
jg
sbb
ins
stos
pop
ins
pop
mov
xchg
mov
cmp
outs
jmp
or
int
sbb
ds
fld
mov
movs
das
ja
mov
push
leave
call
jb
outs
jg
mov
sti
fdivr
arpl
clc
jns
hlt
cli
icebp
es
rcr
pop
adc
fiadd
fwait
(bad)
fist
sub
push
pushf
cmp
pop
pop
push
mov
pop
popf
mov
stos
xor
jmp
cli
pusha
jl
inc
call
sbb
push
cmps
cmp
mov
xchg
lods
mov
repz
jecxz
add
fdivr
test
inc
mov
mov
xchg
adc
test
xor
hlt
mov
sahf
fadd
xor
(bad)
stc
pop
int3
cmp
jne
cs
inc
sub
xchg
into
xchg
dec
or
imul
sbb
xchg
pop
ins
push
ss
adc
daa
xchg
xor
imul
jnp
movs
xor
(bad)
sbb
and
ficom
add
enter
mov
ja
fcmovnbe
test
jmp
movs
pop
xchg
mov
push
xor
out
in
aad
outs
fwait
cmp
sti
aaa
es
mov
jmp
je
mov
jp
mov
scas
inc
jmp
bound
pop
pop
pop
and
lods
das
mov
stos
jnp
mov
je
xchg
cwde
sub
pop
push
std
xchg
ds
imul
pcmpgtb
mov
mov
mov
add
dec
mov
xchg
ss
xchg
cmp
scas
(bad)
inc
ins
nop
mov
sbb
sub
cld
hlt
dec
out
jo
js
or
stos
imul
xchg
aaa
cs
out
aas
mov
pop
pusha
inc
xor
cmp
add
and
gs
mov
mov
dec
in
leave
mov
xchg
mov
dec
mov
xchg
push
jmp
jnp
lea
pop
loope
xchg
push
aas
shl
(bad)
dec
inc
mov
sub
ss
int3
push
jmp
sbb
inc
and
mov
jmp
dec
and
sub
fsub
jno
mov
jne
xchg
hlt
retf
xchg
cmp
outs
push
jl
dec
xrelease
dec
loop
jno
sar
xchg
sub
pop
call
outs
xchg
mov
sbb
ins
xchg
scas
push
cmc
jp
push
add
mov
cmc
dec
call
jo
pop
mov
pop
push
mov
pop
lahf
xchg
mov
sbb
loop
mov
pop
jb
xor
cmp
add
pop
fst
scas
jae
xchg
and
mov
test
and
pop
in
stc
mov
jmp
jo
scas
loopne
mov
mov
mov
ja
lea
pop
movs
shr
retf
inc
call
repz
xor
out
inc
jmp
jbe
mov
xchg
call
aad
mov
or
and
imul
lods
das
xchg
and
add
push
sbb
std
pop
aaa
push
jp
scas
xchg
cmp
push
data16
pop
xchg
les
(bad)
jecxz
and
pop
mov
scas
pop
inc
xchg
mov
das
das
fcomi
stos
(bad)
cmc
dec
ins
xchg
movs
inc
aam
fcom
cli
cld
test
fist
ins
jge
test
or
(bad)
mov
lds
push
xor
sbb
sbb
pop
ficom
(bad)
jnp
fst
mov
pop
jmp
jecxz
add
mov
lock
jmp
xchg
jno
clc
shl
loope
ror
jb
mov
aad
cld
test
dec
cmps
push
or
(bad)
cld
fdiv
or
or
call
imul
cli
or
(bad)
push
dec
pop
xor
xor
inc
add
pop
fistp
mov
xor
sbb
cmp
lods
mov
mov
jbe
lods
ins
(bad)
mov
dec
stos
in
jg
lahf
inc
and
imul
mov
sbb
mov
xor
(bad)
inc
imul
iret
(bad)
fild
add
cmp
cmp
daa
dec
jmp
ins
cli
jmp
adc
sbb
das
mov
fild
mov
je
test
out
fistp
aam
jne
lea
mov
mov
pop
std
div
or
fucom
sbb
mov
out
fcomip
pop
push
pop
sar
cmp
jmp
push
and
cmp
lea
or
mov
cmc
inc
in
cli
or
lock
jl
int
adc
in
sub
pop
fistp
lods
ja
scas
and
lods
(bad)
sbb
pop
out
stc
or
int
icebp
outs
jle
mov
push
jecxz
(bad)
out
push
add
dec
lock
fsub
dec
popf
sbb
mov
push
and
cld
pusha
ins
popf
movs
push
out
cmps
or
adc
fcmovu
push
nop
inc
push
pop
inc
pushf
pop
ins
pop
lea
lahf
stos
lods
mov
cli
(bad)
and
xor
aaa
sbb
das
mov
stos
push
sbb
(bad)
pop
xor
out
fst
hlt
adc
repz
repz
call
retf
ins
or
ja
popf
scas
xor
add
(bad)
pop
pusha
mov
ds
stc
rcl
add
cmp
movs
pop
cs
mov
mov
ret
mov
cmp
and
jo
and
das
stos
add
inc
jnp
jge
movs
aas
js
cmps
cmps
cmp
neg
sbb
cli
scas
lock
cdq
in
outs
into
mov
(bad)
imul
shr
mov
sbb
test
xor
repnz
dec
jle
mov
jo
or
cmp
fcmovnb
and
add
pop
imul
sub
mov
mov
(bad)
mov
and
adc
cmp
mov
ja
mov
dec
clc
lock
jb
addr16
lods
dec
out
out
mov
test
push
and
fild
scas
xlat
dec
mov
test
and
aad
imul
sub
dec
(bad)
int3
and
sub
pop
jnp
test
sub
movs
iret
lods
adc
(bad)
jbe
cli
aas
mov
jbe
jno
ret
or
sbb
pop
scas
sub
mov
dec
xchg
mov
sub
stc
xchg
xor
pop
pop
stos
pop
lds
mov
xchg
pushf
dec
or
(bad)
mov
push
jnp
mov
push
adc
cli
xchg
stos
mov
call
(bad)
cmp
fdiv
fld
inc
jbe
push
adc
je
dec
push
jno
mov
lods
outs
jmp
pop
add
and
sub
mov
push
test
jb
jmp
jb
dec
js
sub
out
sbb
enter
jecxz
test
pushf
sar
ins
ja
mov
jecxz
cld
repz
imul
cli
call
jne
dec
stos
sbb
test
add
sub
pop
out
cli
or
xor
pop
add
das
mov
stos
jbe
movs
sub
mov
dec
test
arpl
push
push
stos
pop
repz
ins
xchg
mov
popa
and
xchg
push
aas
xchg
xchg
lds
mov
sti
pop
pop
fmul
jl
push
aas
ds
iret
cld
jge
xor
xor
and
xchg
mov
fcmovbe
or
mov
push
inc
in
and
dec
aaa
ds
das
popf
or
inc
pusha
mov
jne
mov
hlt
xlat
xchg
cmp
cld
addr16
jge
data16
std
mov
xchg
sbb
repz
test
je
cli
test
push
sub
adc
scas
outs
enter
add
icebp
(bad)
push
sahf
pop
or
and
outs
sub
or
adc
loope
mov
pop
jb
xor
cmp
pop
add
pop
fld
test
xchg
and
mov
ins
in
in
mov
jmp
push
jmp
adc
mov
mov
(bad)
dec
movs
(bad)
fucomip
adc
scas
push
cmp
icebp
jge
cmp
cs
aad
jbe
inc
inc
pop
jle
sub
loopne
es
fwait
xchg
lods
mov
jmp
add
in
pop
jle
cmp
das
xchg
jb
pusha
pusha
mov
jne
xchg
mov
in
xchg
cmp
jo
cwde
jbe
(bad)
sar
call
movs
jno
lock
and
push
sti
mov
gs
xchg
mov
sub
out
aam
ins
xchg
mov
pop
fist
pop
or
cld
lods
je
add
outs
xchg
imul
lahf
(bad)
add
into
push
sbb
mov
or
mov
or
add
push
sbb
outs
out
mov
pop
jmp
lds
push
mov
dec
loop
add
push
adc
add
outs
sbb
test
(bad)
cmp
lods
aam
lea
xor
out
in
(bad)
and
dec
scas
sbb
mov
dec
xchg
mov
retf
push
clc
push
adc
imul
xlat
add
jl
mov
cdq
pop
sbb
inc
call
(bad)
adc
aam
fnsave
xchg
xchg
addr16
add
(bad)
xchg
push
jecxz
test
arpl
(bad)
out
fucom
pop
js
cmps
push
jmp
fnstsw
aaa
cmp
xor
pop
bound
dec
sub
stos
test
jmp
pop
sbb
xor
and
pop
scas
addr16
js
mov
mov
cmp
enter
jmp
pop
mov
dec
lahf
sar
std
fild
(bad)
stos
jg
in
mov
and
fiadd
lahf
stos
dec
test
inc
push
nop
and
stos
or
stos
push
cmp
mov
loopne
or
sbb
xor
push
sbb
add
sbb
or
xchg
xor
push
dec
mov
mov
sub
popa
and
enter
jl
lea
outs
out
cmps
mov
aam
shl
outs
jne
xchg
gs
sub
cld
fadd
pusha
jle
mov
ins
outs
test
sub
mov
fsubr
cld
sbb
fnstsw
jno
leave
ss
add
pop
jmp
and
mov
and
pop
(bad)
aaa
mov
pop
inc
scas
popa
fisubr
xchg
fs
jne
test
xchg
imul
cmp
xchg
mov
push
xor
fistp
lahf
lods
inc
xchg
dec
cmps
sbb
loop
aad
fiadd
or
xchg
jb
inc
sub
stos
mov
push
jecxz
shl
jno
or
and
add
mov
fild
mov
jnp
movs
mov
aaa
push
dec
loopne
mov
xchg
retf
js
inc
inc
pop
test
pop
xchg
les
es
cmps
test
jecxz
or
jle
leave
mov
mov
repz
dec
lea
adc
fist
imul
push
mov
push
mov
shr
icebp
or
and
pop
sbb
inc
mov
fmul
sbb
sbb
cmp
xchg
aaa
mov
je
test
fdivr
xchg
push
jmp
rol
cmps
aam
mov
mov
xor
dec
js
aam
jecxz
fisubr
enter
jo
dec
lahf
pop
dec
das
mov
jns
ror
sub
stc
aas
mov
sub
pop
ja
pop
adc
jno
jge
xchg
push
popf
mov
fisubr
push
jmp
pop
jmp
hlt
pop
in
xchg
addr16
pop
cs
mov
(bad)
ins
mov
test
das
stos
sbb
xor
(bad)
fild
mov
clc
ds
cli
in
jle
and
aaa
sbb
inc
es
mov
add
pusha
lahf
clc
push
mov
jbe
push
and
dec
cmp
es
imul
push
sbb
test
aaa
pop
ins
imul
sbb
jge
cmp
and
mov
inc
xchg
stos
cmps
ins
hlt
mov
xchg
loopne
add
jg
mov
pop
push
mov
mov
lds
cdq
movs
lea
sub
loopne
jbe
bound
inc
pop
push
mov
sub
jnp
clc
sbb
and
and
push
add
xchg
cmp
test
adc
cmps
test
ds
xor
push
test
call
(bad)
cmps
inc
cmc
xchg
pop
and
loope
add
gs
movs
ins
je
xchg
xchg
xor
cli
lock
repz
fs
lods
inc
jecxz
(bad)
ds
out
cld
xlat
push
popf
cs
bound
dec
sub
mov
leave
clc
or
xor
inc
aaa
jnp
xor
or
imul
popf
mov
pusha
hlt
int3
xchg
aaa
mov
jbe
lods
and
mov
inc
or
popa
rcl
test
leave
outs
movs
(bad)
sub
popf
xchg
push
aaa
cli
aam
retf
jne
lods
fs
fld
sub
jbe
inc
jns
dec
mov
dec
das
mov
pop
icebp
ffree
retf
iret
outs
jmp
or
les
push
das
call
cmp
sbb
daa
pop
out
fist
repnz
inc
push
stos
pop
push
test
nop
nop
inc
es
mov
dec
mov
sbb
cmc
repnz
lods
inc
retf
pop
fidivr
out
push
call
rcr
dec
lahf
mov
mov
call
jbe
popa
xor
cmp
jo
jl
inc
(bad)
and
imul
sbb
jne
and
jmp
sbb
add
lds
fsub
gs
inc
jmp
lea
call
sti
fidivr
std
cli
jno
cmc
test
call
aad
cmp
sahf
sbb
push
(bad)
or
stos
mov
mov
fdivr
or
xor
dec
sbb
add
xor
outs
pusha
stos
or
push
push
mov
in
sbb
leave
fist
jecxz
jb
scas
dec
retf
iret
(bad)
and
cld
xchg
fs
in
pop
stc
rol
stos
sar
add
nop
test
mov
jecxz
popa
mov
jns
push
stc
xor
ds
cld
fist
cmp
add
inc
cs
mov
mov
out
sbb
pop
out
sbb
fwait
ds
pop
(bad)
movs
dec
xor
das
gs
in
(bad)
inc
shl
jne
fld
nop
cli
pop
mov
jecxz
leave
mov
test
xor
mov
pop
outs
sti
enter
cld
pushf
movs
rol
jbe
imul
(bad)
pop
jmp
push
jl
xchg
add
cs
add
xchg
lahf
mov
cmp
outs
jmp
push
add
cmc
or
and
aas
(bad)
cmp
mov
adc
sbb
into
cmps
aaa
mov
push
inc
mov
hlt
cdq
ret
int3
cdq
push
stos
jno
inc
mov
mov
dec
sbb
ret
stos
das
aaa
stc
loop
mov
cwde
lea
test
or
add
sbb
dec
sahf
inc
sbb
mov
pusha
(bad)
cli
das
movs
fidiv
or
int
cmp
adc
dec
je
adc
xrelease
stc
clc
test
mov
ins
cmp
push
div
call
mov
mov
mov
mov
imul
mov
add
es
mov
int3
pop
xor
pop
call
fbstp
inc
mov
jns
mov
pushf
pop
cs
mov
xor
xor
sub
jb
dec
pop
test
xor
(bad)
adc
and
fcom
jecxz
jb
stos
pop
div
in
out
pop
sub
rol
mov
or
adc
out
aad
imul
fisttp
cmp
icebp
mul
loope
pop
aas
arpl
ins
pop
push
mov
mov
cmp
outs
jmp
inc
inc
into
xor
and
cmps
outs
movs
xor
mov
xor
fistp
in
sbb
div
in
inc
mov
(bad)
mov
sbb
adc
ficomp
inc
xchg
pop
shl
jmp
stos
pop
jle
mov
pop
jb
(bad)
leave
sub
mov
out
and
hlt
jbe
or
int
sbb
das
retf
imul
and
cwde
cmp
fist
cld
ins
jae
popf
pop
idiv
xchg
push
loope
jno
icebp
rcl
scas
idiv
test
sbb
repnz
fwait
lods
inc
enter
sub
push
in
xor
xor
cs
pushf
cmp
int3
or
cmp
cs
inc
xchg
fsub
fisttp
popf
cmp
mov
adc
xchg
ds
ja
jge
pop
mov
jecxz
call
jb
xchg
jno
std
ret
test
repnz
add
gs
ficom
stos
ror
push
enter
cmp
repnz
sub
xor
sub
mov
pop
lahf
mov
enter
popa
loop
cs
pop
dec
inc
pop
out
and
imul
lods
add
imul
sbb
and
fbld
repnz
add
jge
(bad)
lock
xchg
ret
hlt
mov
es
mov
test
lea
mov
loope
stos
(bad)
pop
ins
mov
dec
aad
fidivr
pop
ds
in
fcom
and
cmp
inc
sub
mov
mov
jmp
fbld
ja
sub
mov
xchg
jb
popa
je
ja
mov
std
sub
std
xchg
aaa
mov
jb
scas
je
test
imul
rol
popf
and
mov
loop
out
scas
loope
jle
lods
inc
jmp
in
cs
clc
fist
xor
pop
fidiv
pop
outs
(bad)
jns
jns
mov
fild
xchg
aas
mov
pop
jge
pop
jmp
gs
imul
fwait
imul
xchg
xchg
(bad)
sbb
cmp
into
xchg
aaa
mov
jbe
stos
dec
repz
mov
in
jb
std
(bad)
std
add
push
mul
sbb
(bad)
popf
xor
test
lea
out
push
push
or
pop
pop
and
or
cwde
inc
and
mov
stos
cmp
std
sbb
(bad)
pop
jb
ss
sbb
das
mov
cwde
or
mov
mov
loopne
inc
in
imul
jg
xchg
addr16
mov
dec
aam
xchg
ins
lea
test
arpl
in
jecxz
(bad)
dec
imul
cli
(bad)
push
jmp
push
inc
fwait
mov
mov
jmp
pop
daa
(bad)
xor
jae
adc
adc
fisttp
mov
mov
adc
clc
inc
jmp
push
popf
xchg
icebp
mov
sar
test
lea
cmps
sub
fisubr
scas
jmp
addr16
fisub
imul
pop
nop
pop
push
jp
add
stos
jno
dec
xchg
mov
mov
(bad)
cli
or
cld
jbe
add
sub
inc
cmp
fwait
das
test
fild
test
and
mov
fist
test
nop
sub
cdq
jae
cld
push
push
hlt
lds
mov
dec
sbb
cmps
mov
pop
xchg
fild
xchg
aad
lea
shr
icebp
and
mov
push
push
loopne
pop
push
mov
mov
add
clc
jbe
push
xor
cmp
mov
mov
addr16
mov
pop
neg
xchg
aaa
mov
pop
push
stos
ss
push
jmp
xchg
shl
hlt
pop
lea
mov
arpl
call
pop
add
cmps
dec
hlt
jnp
pop
push
sub
xchg
cmc
pop
frstor
push
jp
movs
or
cmp
imul
pushf
lea
(bad)
in
cs
pop
jae
pop
loope
push
push
imul
mov
test
cdq
mov
dec
sti
stos
mov
repnz
jbe
stos
pop
loop
lock
mov
add
jmp
ror
ret
in
jmp
cs
out
lods
hlt
es
(bad)
lds
push
add
repnz
lahf
xor
and
outs
es
mov
enter
call
mov
mov
xor
cld
add
xchg
cmp
xchg
(bad)
xchg
cmp
jge
push
cmps
pop
repz
pop
xchg
(bad)
popf
je
xchg
jb
std
(bad)
std
add
push
cli
xchg
out
adc
mov
movs
fsubrp
es
xchg
mov
lea
cmps
dec
cmp
inc
ret
pop
pop
jl
mov
push
or
mov
add
push
std
arpl
adc
xor
and
jae
arpl
adc
repz
cli
imul
ds
into
cmps
aaa
mov
pop
repnz
addr16
stos
pop
in
std
jl
(bad)
xchg
je
xchg
jge
std
rol
(bad)
mov
cld
push
add
repnz
xchg
pop
fidivr
or
cli
clc
fcom
xor
sbb
push
test
pop
lahf
mov
pushf
cmp
stc
or
xor
dec
sbb
sbb
pusha
mov
je
mov
ins
dec
dec
ins
xchg
fcom
repnz
inc
cmp
fs
into
xchg
fs
mov
std
add
je
loope
shr
jle
xchg
mov
pop
inc
mov
mov
scas
ds
in
fcom
cmp
dec
lods
sbb
fwait
outs
ds
mov
mov
lahf
cli
setnp
pop
jge
sbb
xor
das
mov
test
and
test
fist
loop
sbb
lods
pop
repz
outs
xchg
loop
push
std
xchg
jno
stc
ror
mov
jecxz
sahf
outs
ja
mov
repnz
mov
es
mov
or
push
xchg
cmp
xor
fwait
inc
sbb
mov
into
push
cli
cli
or
jno
iret
and
or
mov
jo
mov
ins
out
into
xchg
adc
jnp
mov
inc
pushf
out
jo
xchg
popa
add
mov
push
ja
mov
repnz
fcmovbe
pop
outs
fwait
scas
push
jecxz
call
cld
hlt
enterw
pop
test
cmp
imul
xchg
jl
repz
push
sbb
out
xor
cs
es
jb
bound
adc
in
test
sub
add
clc
in
es
add
or
dec
xchg
jno
jmp
lea
jecxz
icebp
test
arpl
mov
push
es
in
retf
enter
cmp
xor
xchg
mov
xchg
pusha
outs
shl
cmp
sub
inc
icebp
retf
fwait
xchg
dec
inc
mov
xchg
xchg
fist
pop
pop
call
sub
xor
das
mov
fcom
(bad)
adc
push
push
jmp
cmps
sbb
sub
int3
lods
sti
aaa
test
fs
add
lds
test
js
mov
inc
xor
fbld
lahf
stos
shl
outs
jne
mov
push
adc
retf
xchg
repz
lods
call
cmp
call
xchg
addr16
mov
jmp
jbe
cmp
jb
jl
les
sbb
or
mov
push
mov
sbb
mov
jge
(bad)
xchg
xor
iret
pop
test
push
xchg
inc
retf
dec
mov
xchg
addr16
pusha
cmp
push
mov
stos
rcl
je
cld
repnz
icebp
cmp
mov
push
loop
fild
es
sub
push
xchg
cs
jnp
movs
mov
not
popf
retf
outs
push
sub
push
mov
push
dec
stos
push
sbb
or
sbb
and
fist
loop
minps
dec
xchg
les
es
fdiv
(bad)
shr
xchg
mov
pop
xor
mov
mov
gs
jae
or
int3
pusha
nop
push
push
jl
xchg
or
pop
loopne
inc
pop
jmp
jg
fsubr
xchg
mov
or
das
(bad)
pop
sbb
ja
mov
fs
mov
ret
sbb
stos
pop
ficomp
cmps
data16
call
shl
add
sahf
ins
ja
mov
xor
cwde
fmul
fidivr
sub
cli
cld
mov
or
pop
mov
jno
xchg
mov
outs
into
bnd
jmp
or
jecxz
fs
and
aaa
mov
fld
stos
jnp
xor
sahf
mov
pop
retf
aaa
mov
jbe
stos
pusha
jecxz
loopne
add
inc
dec
std
rol
xchg
jmp
xchg
xor
lock
repz
xchg
stos
pop
rcr
pop
or
(bad)
push
loopne
push
push
dec
stos
cmp
push
lahf
inc
cs
mov
mov
jmp
jbe
retf
pop
sbb
adc
dec
push
cmp
(bad)
xchg
sbb
ds
xchg
das
mov
add
lds
(bad)
ins
xchg
shr
std
rol
test
push
mov
xchg
repnz
push
jecxz
fsub
fcomp
aaa
jae
dec
stos
push
add
inc
add
sub
or
xor
push
or
cmp
test
mov
sbb
adc
dec
jmp
repnz
lock
mov
call
lds
scas
sar
outs
push
xchg
mov
adc
(bad)
pop
dec
fwait
lods
inc
out
(bad)
es
call
pop
and
xor
sub
outs
fwait
mov
fnstsw
icebp
adc
hlt
pop
fs
mov
fs
sub
adc
xor
sbb
adc
into
mov
mov
pcmpgtw
pop
jmp
pusha
dec
fdivrp
cmp
xchg
mov
xchg
rol
(bad)
dec
dec
fwait
mov
ds
push
in
jb
dec
stos
sbb
push
mov
cs
mov
mov
jmp
jno
int
sbb
xor
fild
sbb
xchg
test
dec
cmp
div
sti
push
sbb
and
fadd
push
leave
mov
lock
enter
mov
or
dec
pop
popf
mov
pop
pop
in
repnz
mov
das
or
cli
sti
aam
ror
dec
stos
addr16
jle
push
psllw
test
fcmovnb
pop
dec
js
jmp
and
imul
imul
in
into
clc
push
in
mov
loope
add
stos
pop
repz
repnz
xchg
in
xchg
jl
mov
and
rol
shr
aas
test
jo
mov
push
aaa
(bad)
repnz
mov
dec
jecxz
clc
ds
cld
mov
or
sub
pop
adc
add
adc
adc
add
pop
add
mov
dec
inc
lahf
adc
popf
mov
dec
out
xchg
aas
mov
jbe
ficomp
mov
inc
mov
mov
repz
jnp
in
out
sahf
je
mov
mov
adc
es
sbb
sti
pop
hlt
ds
push
loopne
or
outs
cwde
pop
ins
push
movs
inc
cs
fwait
mov
mov
out
cli
or
xor
and
pop
sahf
pop
fist
fwait
dec
inc
xlat
cmp
mov
dec
out
rcr
fldcw
push
stos
dec
repz
jl
les
and
rol
rol
aas
test
ja
mov
push
aaa
xchg
repnz
lods
push
loopne
frstor
cld
and
imul
dec
pop
mov
push
lahf
mov
call
ins
inc
aaa
enter
add
and
imul
xor
xor
popf
mov
aas
cwde
aad
es
test
sbb
pop
ret
jno
cld
mov
jmp
xor
ins
test
arpl
xchg
adc
(bad)
dec
dec
fwait
lods
inc
retf
or
into
div
ds
sbb
cmp
ins
adc
or
mov
mov
in
or
aaa
jmp
sbb
das
xchg
pop
out
inc
stos
jg
mov
lahf
sbb
dec
int
xchg
daa
sar
jecxz
inc
push
test
inc
xchg
shl
out
popa
and
rol
pushf
(bad)
aas
ret
popf
xchg
xchg
cmp
jecxz
in
jecxz
popa
mov
push
inc
or
sbb
dec
(bad)
push
sub
mov
fwait
mov
and
ins
fdivr
sub
pop
mov
js
add
sub
imul
xor
(bad)
push
sbb
jl
jmp
add
scas
ja
ret
xchg
les
and
(bad)
popf
add
(bad)
in
fadd
xchg
rol
(bad)
dec
push
fwait
mov
ds
push
call
stos
cmp
mov
xor
mov
ror
cmp
add
cmps
push
xor
jl
aaa
mov
(bad)
sbb
mov
jb
movs
(bad)
push
aas
and
out
out
mov
jb
ins
pop
pop
mov
cmp
xchg
je
mov
sbb
jge
mov
adc
cli
test
stos
pop
les
ds
data16
cmp
dec
stos
sbb
ds
mov
mov
cs
ins
lahf
clc
sbb
xor
cmp
push
daa
cmp
inc
xchg
sub
imul
push
addr16
mov
inc
(bad)
std
xchg
ds
sti
jno
dec
jbe
lods
pop
lock
mov
in
jne
std
rol
sti
popf
ror
ret
xor
dec
ins
fwait
scas
dec
jecxz
(bad)
cs
push
dec
mov
inc
add
aas
fild
stc
or
fdiv
sbb
fwait
sub
test
push
cmps
ds
movs
cli
cmp
stc
xchg
adc
jbe
stos
and
mov
pusha
sbb
je
cld
inc
aaa
xchg
mov
in
loope
scas
or
test
cmp
icebp
xor
lods
push
hlt
sub
push
inc
push
xchg
sar
push
in
or
sub
adc
sub
xchg
lods
mov
jmp
jno
enter
add
pop
fcomp
push
xor
mov
aaa
add
mov
xchg
retf
inc
loop
push
push
cmps
pop
fnsave
cmps
fs
xchg
ja
std
enter
push
mov
xchg
mov
push
ds
gs
cdq
lods
inc
shr
cs
cld
ret
data16
jge
dec
mov
dec
cmp
lahf
nop
scas
mov
fild
cli
cmpxchg
push
push
gs
xor
add
and
popa
pusha
scas
jae
movs
cmp
mov
dec
xchg
fbstp
jmp
jbe
stos
pop
ret
inc
mov
mov
and
dec
mov
add
test
loope
scas
sti
dec
ins
cdq
fwait
inc
out
das
retf
and
loopne
jo
inc
mov
outs
push
cld
xor
jns
mov
mov
jmp
ja
xor
xor
jo
or
sbb
js
mov
ja
stos
test
out
fild
repnz
jb
lea
lods
(bad)
dec
loope
xchg
adc
mov
xor
rol
xchg
aas
mov
idiv
adc
hlt
(bad)
(bad)
inc
inc
mov
fisttp
cmp
pop
jo
dec
popf
pop
imul
cs
mov
mov
xor
cmp
push
int
sub
and
pusha
mov
ja
mov
dec
call
jmp
loope
pop
pop
lea
mov
dec
xchg
into
xchg
addr16
xchg
jne
std
(bad)
mov
(bad)
(bad)
les
test
loop
ins
mov
cmp
sbb
in
rcl
ds
inc
stos
or
mov
jp
xchg
mov
outs
jmp
jno
enter
add
pushf
pop
int3
pop
fld
mov
mov
cdq
and
mov
aam
jp
lea
fdiv
dec
xchg
aam
pusha
in
cmps
jno
std
in
add
inc
movs
(bad)
fnstcw
lahf
lds
call
inc
out
int
cs
cmc
stc
int
loopne
jp
push
test
inc
sub
mov
mov
fidivr
push
(bad)
sti
jb
push
int
sbb
sub
scas
push
xor
mov
xor
xchg
xor
dec
je
mov
aas
xchg
(bad)
xchg
inc
in
add
(bad)
xlat
popf
push
xlat
ins
and
nop
add
lock
enter
fwait
scas
ja
pop
(bad)
sub
jmp
or
outs
push
mov
jns
mov
pushf
cmp
out
outs
jmp
je
int
sbb
xchg
pop
mov
mov
cmp
mov
dec
call
sti
or
gs
stos
pop
cmc
mov
mov
out
jp
std
lds
movs
in
aas
test
push
cmps
cdq
mov
inc
rol
or
mov
add
fist
xor
pop
addr16
mov
lahf
xchg
mov
ucomiss
dec
jmp
add
les
jo
add
das
call
sbb
lahf
sbb
and
fist
aam
popa
push
lods
sub
xchg
les
xor
rol
test
aas
stos
ja
xchg
mov
push
aaa
stc
fiadd
fwait
xchg
pop
into
cmp
push
aam
fldcw
pop
jp
dec
mov
inc
and
mov
xchg
ds
inc
out
stc
or
xor
xor
jnp
xor
das
enter
inc
xor
cmp
movs
mov
in
xchg
xor
rol
imul
(bad)
dec
xchg
jmp
push
and
mov
movs
mov
fs
mov
push
xor
inc
outs
fwait
mov
dec
or
push
call
lods
pop
ins
push
add
mov
call
out
pop
fwait
clc
outs
je
sbb
aaa
arpl
xor
inc
mov
xchg
js
movs
cmp
mov
and
xchg
daa
mov
jb
ins
jo
stos
dec
ret
mov
dec
test
mov
xchg
xchg
popa
das
cmc
rol
mov
ja
mov
push
add
dec
adc
pop
lds
cs
cld
jmp
sub
pop
outs
pop
mov
jp
mov
jmp
jbe
push
xor
daa
push
sub
mov
jg
mov
inc
out
fst
pop
push
test
hlt
(bad)
(bad)
inc
mov
xchg
xchg
push
xor
ins
and
jo
mov
fiadd
mov
cld
cmp
rol
fistp
jo
jle
pop
push
dec
lahf
mov
mov
xchg
stc
or
xor
and
add
and
push
jno
outs
xor
(bad)
adc
add
into
mov
in
jb
xchg
and
xchg
(bad)
dec
xchg
enter
popf
ja
std
shr
xchg
stos
ret
inc
ja
mov
and
loop
dec
mov
jp
das
ds
fistp
xor
data16
outs
jo
inc
sub
mov
iret
cmp
(bad)
sbb
out
sbb
clc
pusha
fs
fidiv
aaa
popa
adc
sub
lods
ja
mov
lahf
push
inc
and
call
sti
push
gs
scas
jle
mov
inc
add
popa
push
(bad)
test
icebp
ins
or
ja
mov
adc
in
icebp
js
mov
adc
fdivr
loop
in
jp
pop
stos
sub
push
mov
jns
mov
stc
outs
jmp
jb
into
and
push
xor
or
scas
jno
movs
cmp
mov
dec
in
scas
xchg
or
iret
jb
sbb
push
lea
mov
inc
add
outs
nop
xchg
jno
not
test
les
cli
test
aas
fisttp
xchg
mov
push
daa
fcmove
sbb
push
jecxz
fidivr
cs
int3
fcom
aas
jae
jae
sbb
and
mov
mov
jmp
jge
(bad)
xor
jle
adc
gs
lods
or
mov
ins
leave
fnsave
aam
jo
lea
mov
test
nop
pop
xor
icebp
ins
or
adc
stc
repnz
fcmovb
dec
jnp
lahf
inc
icebp
pop
(bad)
sub
sbb
xor
pop
dec
mov
popa
lahf
mov
pushf
cmp
clc
sbb
xor
xor
ja
xor
das
mov
xlat
imul
xor
xchg
sub
aad
add
push
jns
jbe
dec
repz
cmps
sar
std
shl
scas
lds
mov
push
daa
cli
loopne
cld
lock
ins
fwait
scas
dec
loopne
leave
dec
pop
aaa
loop
into
push
call
scas
cmovnp
jo
jns
ret
cmp
jmp
cmp
inc
jno
into
xor
jbe
xor
das
lahf
and
arpl
jae
rcr
mov
leave
aam
xor
jbe
lahf
pop
icebp
mov
xor
xchg
inc
cmp
ror
cli
stos
les
push
adc
enter
fwait
scas
inc
leave
pop
in
ds
sbb
cld
out
push
in
xor
ins
dec
push
or
mov
int
jmp
inc
push
int
sbb
jae
lods
ds
fbld
mov
jb
mov
dec
call
call
push
cmps
dec
cli
mov
push
xchg
les
clc
ror
lahf
test
ja
lds
sbb
fadd
jno
xor
xor
fidivr
jo
push
scas
pop
ins
dec
mov
pop
lahf
mov
int3
push
cli
popa
inc
popa
xor
pop
sbb
das
mov
test
cmp
(bad)
adc
or
(bad)
adc
jo
stos
push
xor
ins
in
jno
rep
mov
mov
push
test
in
retf
outs
fwait
scas
push
jecxz
in
cs
(bad)
data16
jo
dec
fistp
dec
push
mov
jnp
mov
mov
shr
das
xchg
clc
inc
inc
jno
into
pop
sbb
adc
imul
outs
cwde
mov
pop
loop
xchg
daa
fwait
retf
jb
adc
sti
mov
dec
xchg
int
ins
ret
adc
shl
(bad)
ffree
or
out
adc
in
loope
ins
fwait
test
jecxz
cmc
sub
sbb
cmp
dec
stos
adc
pop
mov
jns
lahf
call
mov
movs
out
fs
jno
int
xor
adc
enter
jl
movs
cmp
test
cmp
xchg
cmp
sti
jb
gs
fsub
stc
mov
dec
popf
les
and
rol
ror
sbb
sbb
cld
repz
push
mov
(bad)
cmp
ds
cld
rcl
dec
sub
pop
fs
mov
popa
pushf
mov
pushf
aas
rcr
stc
or
xor
push
adc
sub
sub
movs
mov
in
cmc
xchg
adc
inc
push
mov
dec
xchg
ret
xchg
dec
hlt
cdq
push
and
(bad)
imul
push
aas
mov
xchg
xchg
xchg
xor
std
inc
sahf
add
(bad)
cmp
dec
int3
repnz
add
dec
movs
or
mov
cs
ret
sub
enter
inc
and
sbb
jge
add
jg
add
mov
and
xlat
xchg
add
dec
je
mov
inc
xchg
rol
rcl
mov
(bad)
call
mov
jmp
test
xor
cmp
clc
fstp
xor
push
test
inc
jo
inc
sbb
mov
test
cs
mov
pop
into
pop
gs
add
imul
xor
test
(bad)
xchg
daa
mov
pusha
push
popf
pop
shl
xchg
fs
push
and
ret
jecxz
cmp
clc
aas
test
jnp
lds
adc
mov
cmp
fist
or
sub
sub
mov
jge
les
inc
jmp
pop
xor
xor
sbb
lahf
ds
bound
jg
test
mov
aaa
pop
dec
out
int3
mov
mov
jle
imul
imul
call
shr
mov
outs
ja
lds
adc
movs
inc
clc
jae
xor
fdiv
and
dec
fistp
push
mov
cmp
loop
movs
clc
gs
mov
adc
arpl
outs
xor
(bad)
sbb
and
adc
addr16
lea
mov
ins
xchg
shl
in
inc
and
rol
stos
sar
pop
jo
mov
mov
lods
addr16
or
neg
pop
(bad)
ss
mov
inc
sbb
mov
mov
(bad)
cli
push
(bad)
clc
jae
inc
cmp
xor
push
cmp
push
movs
xor
lods
cdq
pop
aaa
cmp
leave
xchg
cmp
sti
jb
ins
jle
mov
dec
mov
xchg
push
and
outs
movs
mov
ja
mov
js
stc
repnz
cwde
mov
xor
repnz
clc
jbe
xor
cmp
push
lahf
push
cs
mov
pushf
aaa
sub
mov
es
add
and
dec
pusha
mov
and
test
sub
in
xchg
aaa
fwait
mov
dec
jbe
mov
dec
call
xchg
popa
daa
cmc
rol
rol
or
mov
aaa
fcomi
mov
repz
imul
ds
ds
push
inc
stos
sbb
pop
lods
dec
add
lahf
mov
mov
daa
iret
je
cli
das
leave
fdiv
jne
ret
and
popa
es
cmp
scas
dec
sub
mov
aaa
sub
adc
arpl
pop
and
inc
out
xchg
pop
cmp
rol
xchg
ja
xchg
(bad)
ret
jmp
fs
add
fidivr
sub
sub
push
jmp
ins
pop
mov
mov
mov
into
cli
das
mov
jbe
jbe
mov
xor
daa
mov
fild
test
xor
test
neg
cmps
aaa
mov
jo
stos
pop
repz
xchg
std
xchg
ins
in
push
push
call
ins
sub
ja
xchg
xchg
xor
jmp
int
fs
scas
jbe
pop
fistp
cs
aam
push
cld
add
xor
mov
mov
test
or
xor
cmp
jmp
mov
xchg
js
lods
cmp
mov
fstp
jecxz
mov
jbe
lea
cdq
lock
xchg
fcom
and
shl
mov
ja
mov
push
aaa
or
fiadd
inc
fcomp
ss
clc
ficom
aaa
jle
dec
scas
daa
dec
push
mov
jno
mov
stc
arpl
jmp
inc
jno
mov
cmp
jo
pushf
outs
xor
pop
mov
loop
xchg
aaa
mov
pop
push
stos
pop
ret
mov
dec
lahf
mov
add
shr
pop
je
mov
adc
jmp
cmp
scas
cmp
pop
frstor
sub
cli
out
fdiv
add
xor
inc
cs
stos
stos
xchg
es
pop
jmp
jbe
pop
xor
xor
jb
sbb
imul
xor
cmp
fcom
cmc
ins
jns
mov
pop
xchg
(bad)
xchg
not
mov
jecxz
xchg
js
xchg
xchg
sbb
fwait
inc
loopne
(bad)
cmp
fist
aaa
jo
jle
pop
popa
js
inc
and
mov
mov
cs
jmp
jbe
jns
into
xor
das
mov
mov
dec
movs
sub
mov
outs
aas
cmp
sar
aam
jno
movs
jbe
mov
pop
xchg
rol
sti
loope
add
movs
mov
ins
xchg
mov
aas
adc
dec
mov
fisubr
sub
loop
fild
dec
jo
jnp
pop
dec
pop
inc
jl
mov
xor
iret
ins
call
jbe
jae
int
push
jl
adc
jns
test
daa
movs
cmp
test
fdivrp
xchg
add
js
lea
mov
dec
cdq
les
and
(bad)
mov
xchg
xchg
mov
push
adc
inc
mov
push
inc
sbb
cld
stos
jbe
xor
imul
push
cs
xchg
outs
jmp
jbe
out
xor
pop
add
add
fs
scas
dec
xor
outs
xor
xchg
inc
pushf
sti
jne
add
push
fnsave
xchg
je
xchg
push
push
icebp
rol
sahf
sar
pop
jne
xchg
test
adc
repnz
fwait
lods
inc
xlat
jp
and
idiv
mov
sub
outs
dec
push
mov
lahf
sar
std
das
mov
sbb
out
xor
daa
into
pop
(bad)
imul
ja
mov
inc
call
les
stos
pop
std
mov
dec
xchg
les
and
rcl
stos
in
movs
ins
inc
mov
test
adc
repnz
fstp
mov
into
ds
push
cld
xor
xor
push
lahf
push
lods
iret
cmp
cli
cmpxchg
jbe
add
retf
pop
push
adc
fild
lods
ja
test
jnp
cmp
and
dec
(bad)
xchg
add
stc
jnp
add
mov
fs
les
sub
rol
lahf
movs
sar
ins
ja
mov
repnz
jmp
ins
xchg
fadd
dec
fidiv
cs
cld
fbld
repz
movd
dec
push
jns
mov
stc
outs
jmp
jno
(bad)
pop
adc
or
test
sbb
mov
dec
loop
xchg
aaa
mov
jle
lea
mov
dec
mov
xchg
jno
rcl
mov
(bad)
fld
aas
stos
inc
ja
movs
mov
xor
ror
lods
scas
ins
jecxz
fisubr
inc
sti
pop
jo
dec
movs
pop
ins
jle
inc
pop
add
sar
cli
push
xchg
jbe
jns
int
push
das
mov
mov
inc
popf
movs
inc
aaa
and
icebp
cdq
and
jmp
in
jg
lea
mov
fs
outs
cmc
xchg
popa
and
rcl
xchg
cmp
inc
ja
rol
fpatan
dec
jne
test
ds
ds
div
xor
adc
xchg
pop
pop
lahf
cdq
mov
ja
ror
movs
cli
arpl
fnstenv
sbb
and
mov
xchg
jg
mov
dec
call
neg
push
fidivr
mov
inc
fwait
les
and
rol
mov
ja
mov
ret
or
lods
inc
xchg
pop
fidivr
pop
ds
xlat
jbe
xor
or
mov
jns
stos
call
lock
xor
and
jl
push
test
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
sti
fsubrp
js
xchg
pushf
out
mov
es
ret
sub
xor
xchg
mov
xchg
pusha
les
cmp
cs
pop
icebp
fst
aam
inc
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
and
pop
sti
in
and
jns
mov
push
imul
addr16
iret
in
adc
dec
repz
mov
ja
mov
and
(bad)
xchg
(bad)
dec
iret
pop
stos
sbb
cld
fsubr
adc
pop
call
pushf
inc
pop
jmp
dec
pop
push
sbb
xor
jg
addr16
mov
fisub
sub
mov
and
test
push
out
outs
jb
push
(bad)
loop
xchg
popa
loop
jne
fmul
mov
fwait
xchg
icebp
fdivr
mov
js
cld
repnz
cli
div
call
in
adc
or
aad
jb
cmp
pop
pop
and
inc
aas
dec
xchg
test
mov
enter
es
jmp
adc
add
push
mov
xchg
mov
mov
retf
inc
xchg
jmp
jo
call
call
(bad)
stos
add
mov
aas
stos
push
pop
mov
fcomi
adc
lods
pop
not
cmp
retf
push
int
add
dec
xchg
ins
pop
push
mov
push
or
fild
nop
xor
daa
cmps
sub
aaa
jmp
mov
mov
aam
push
mov
sahf
push
sub
into
xchg
das
int3
in
inc
rcr
jbe
xor
les
adc
lds
sti
xchg
mov
sbb
adc
aam
nop
not
jle
nop
mov
jmp
(bad)
call
inc
push
sbb
test
pop
push
call
mov
int3
aam
enter
jb
ret
imul
int3
pop
pusha
mov
pop
stos
(bad)
mov
fwait
in
mov
rcr
jl
dec
test
test
daa
icebp
fistp
pushf
fwait
shl
lahf
jle
call
call
push
(bad)
dec
stc
inc
sub
lea
and
mov
xor
jge
call
retf
fwait
loope
imul
pop
or
adc
inc
push
(bad)
jl
xchg
adc
mov
es
cmc
jge
sbb
mov
inc
mov
mov
dec
(bad)
jecxz
add
inc
mov
scas
add
adc
loopne
icebp
lods
ror
cdq
fnstenv
sub
es
jae
inc
dec
and
cs
inc
in
sbb
mov
xchg
std
and
add
into
xor
push
or
cdq
add
das
mov
pop
test
sbb
xor
xchg
or
popf
neg
jp
jp
das
jecxz
in
xchg
mov
push
fcmovnu
cmps
sub
push
lea
sbb
(bad)
std
push
adc
hlt
cmp
scas
pushf
inc
repz
sub
pop
repnz
into
push
lock
arpl
or
stos
imul
push
pop
idiv
fidivr
fidivr
pop
cmp
push
adc
and
pop
ins
fild
retf
lods
pop
hlt
stos
lahf
pop
mov
push
push
xchg
pop
shl
jmp
stos
jb
icebp
cmc
mov
xchg
pop
mov
lods
fs
popf
mov
jmp
pop
popa
scas
ret
dec
jmp
sbb
xlat
hlt
jle
pop
pop
jle
mov
imul
or
mov
mov
int3
enter
push
push
pop
xor
adc
adc
push
add
xor
pop
in
retf
mov
je
push
in
test
(bad)
mov
shl
popa
add
mov
lods
stc
mov
inc
mov
out
repnz
stos
xor
fsubr
and
cli
clc
retf
aas
push
jge
xchg
cs
sahf
cdq
mov
cwde
loope
test
push
fadd
sbb
pop
mov
mov
jb
aad
das
inc
cmp
out
test
jb
lea
test
jg
not
pop
mov
mov
loopne
cmc
xchg
setle
aad
fstp
pop
inc
popf
mov
adc
pop
cmc
iret
in
pop
call
dec
inc
xchg
dec
sbb
scas
retf
or
test
inc
cmp
jb
stos
cmp
xchg
mov
lea
inc
and
jmp
inc
pusha
pop
popf
jle
cmps
les
repnz
jge
fwait
pop
dec
test
mov
(bad)
data16
xchg
or
enter
loop
popa
fwait
inc
cli
or
dec
repnz
sub
or
mov
sub
loope
cmp
jg
shl
inc
jb
icebp
and
inc
sbb
xchg
test
mov
mov
inc
push
sahf
imul
test
(bad)
lahf
addr16
je
jmp
mov
neg
repnz
push
inc
jmp
fcom
inc
hlt
cmp
or
(bad)
jmp
jge
rcl
push
mov
mov
call
adc
and
add
pop
retf
dec
fs
add
scas
cdq
sbb
push
fs
mov
fwait
mov
pop
push
data16
imul
mov
gs
mov
lock
dec
xchg
test
add
xchg
sahf
bound
clc
out
out
jmp
bound
repz
sbb
idiv
mul
loope
add
(bad)
fs
cwde
test
jmp
jno
retf
pop
outs
lods
sub
lods
dec
cmp
sub
mov
lea
adc
jl
(bad)
pushf
xor
sar
push
push
ficomp
mov
mov
adc
(bad)
lods
sub
sbb
mov
sbb
mov
jmp
pushf
cmp
cmp
fcomp
jnp
add
js
cmp
mov
jns
mov
test
ror
push
jle
mov
sbb
or
scas
addr16
cmps
sub
test
dec
(bad)
call
je
outs
pusha
pop
stos
outs
loopne
in
stos
xlat
xchg
je
mov
cli
cmps
mov
leave
dec
mov
xchg
into
daa
lahf
push
pop
mov
inc
mov
clc
inc
pop
sub
fmul
or
inc
cld
jo
pop
test
leave
cdq
sub
hlt
jl
jmp
ja
push
cmps
aaa
fs
jo
mov
push
push
fidiv
aam
push
mov
sbb
push
jle
fist
or
lds
adc
mov
mul
out
adc
mov
sbb
add
ficomp
scas
mov
push
pop
dec
cld
pop
pop
call
js
cli
dec
pop
je
mov
shl
(bad)
jo
shr
pop
out
pop
cmp
push
mov
ds
inc
xchg
rol
inc
scas
pop
cdq
in
inc
mov
imul
pop
lock
dec
shl
aam
ja
dec
mov
mov
fs
rcr
jle
mov
dec
sbb
and
or
pop
inc
pushf
xor
xor
test
cli
ret
or
sub
sbb
arpl
xor
int3
pusha
fs
jne
lea
fild
xchg
pop
test
test
xchg
push
xlat
mov
dec
mov
lock
dec
outs
pushf
ret
dec
ret
ror
pop
jnp
xor
test
sub
in
sar
inc
lahf
pop
jle
outs
mov
pop
bound
add
cmp
cmps
jle
clc
adc
iret
inc
push
add
retf
push
cmp
and
or
mov
ins
in
fdivr
sbb
and
mov
xchg
fnstenv
ret
in
mov
sub
loop
sub
pop
lea
push
je
(bad)
xchg
xor
faddp
mov
call
outs
clc
sub
into
(bad)
pop
pop
and
xor
push
cmp
dec
pop
fld
call
inc
pop
and
sub
push
jo
mov
mov
dec
push
sbb
add
test
fcomp
je
jae
shl
xchg
out
jo
sahf
gs
aad
ins
xchg
sbb
mov
mov
mov
(bad)
ds
or
sbb
fsubr
pusha
pop
cmp
adc
jmp
movs
mov
iret
not
mov
pop
inc
dec
add
and
push
sbb
jb
inc
inc
ror
mov
cmps
bound
cmp
(bad)
mov
test
jns
mov
dec
cmps
out
imul
retf
hlt
inc
mov
popf
sbb
stos
sbb
repnz
mov
ds
or
xlat
jmp
cwde
add
adc
cdq
or
pop
xlat
pop
icebp
inc
(bad)
jno
push
push
adc
mov
pop
jmp
pop
add
or
in
mov
loopne
gs
and
sar
movs
(bad)
xchg
push
(bad)
out
adc
ins
test
pop
xchg
mov
mov
cwde
fadd
jae
push
cmp
ds
push
push
cmp
je
or
mov
push
sti
iret
and
inc
mov
popfw
cmp
mov
push
(bad)
jp
mov
pop
ds
xchg
fsub
and
jae
mov
popa
mov
mov
cmp
aam
cs
pop
div
pop
mov
mov
inc
xchg
aad
iret
repz
push
mov
fisttp
pop
stc
(bad)
push
fisttp
cs
jne
xchg
ins
cmc
mov
mov
fmul
add
mov
adc
push
stos
setg
test
pusha
lods
jp
fnsave
pop
(bad)
pop
cmp
fxch
loope
mov
pop
ja
push
call
out
int
je
(bad)
xlat
pushf
sub
push
call
dec
mov
mov
mov
stc
cld
fldcw
frstor
enter
cli
xlat
fild
aaa
jl
jge
xor
in
sub
mov
pop
(bad)
stc
aas
xchg
repnz
inc
or
adc
add
xchg
(bad)
ds
test
not
xchg
push
cdq
dec
lds
cdq
push
ret
lahf
add
jae
sbb
mov
jl
loope
xchg
bound
cld
loope
out
cmc
pop
jp
(bad)
push
shr
or
push
loope
pop
sub
sar
pop
jne
cs
jbe
stos
int3
mov
repz
jle
xchg
jb
jp
mov
adc
add
jo
mov
pop
test
popf
cmp
inc
int3
xlat
xchg
lock
jg
popa
xchg
arpl
lods
call
arpl
mov
mov
arpl
movs
pop
and
fsub
mov
jmp
mov
push
out
add
fdiv
add
dec
add
mov
cmp
jno
repz
dec
pop
add
gs
inc
xchg
or
adc
jno
mov
xchg
or
or
stos
xchg
pop
iret
int
in
jb
mov
inc
fwait
(bad)
mov
cmp
jmp
mov
push
cmps
push
add
(bad)
mov
nop
ficomp
sub
sbb
test
or
daa
sbb
cmps
aaa
adc
mov
aam
stc
fisubr
xchg
into
push
dec
pop
adc
adc
ins
dec
cdq
push
in
mov
inc
(bad)
xchg
adc
mov
jle
jle
xor
mov
mov
and
fsub
cmps
mov
push
nop
nop
lods
sbb
ret
cmc
jle
lods
fwait
dec
into
outs
cld
adc
sub
fdivr
push
std
and
jo
xor
and
mov
mov
aas
icebp
inc
call
arpl
inc
out
or
jns
and
leave
dec
adc
or
sar
sbb
pop
xor
clc
stos
inc
mov
inc
stc
inc
bound
loope
shr
rcr
cmp
cmps
xchg
mov
call
sbb
mov
sbb
add
rcl
push
pop
xor
dec
sbb
stos
lea
mov
push
pop
imul
sub
popf
adc
mov
adc
and
les
jmp
xchg
aam
cdq
mov
adc
les
test
pop
gs
mov
mov
stc
dec
push
mov
cmp
push
iret
into
cmc
and
adc
dec
lods
push
das
test
sar
repz
xchg
in
jnp
inc
and
push
sbb
and
jnp
adc
sbb
sub
adc
jmp
lock
pop
pop
movs
je
(bad)
fld
(bad)
mov
adc
jmp
cmp
pop
add
cld
data16
jge
test
(bad)
sbb
pop
bnd
add
mov
inc
aaa
jne
cmps
mov
pop
sti
(bad)
sbb
or
or
and
data16
(bad)
into
add
mov
es
(bad)
rcr
inc
popa
mov
pop
mov
call
fstp
movs
mov
sub
test
mov
mov
gs
adc
clc
repnz
sbb
popa
test
pop
daa
clc
bound
jo
xchg
mov
je
hlt
jnp
mov
jns
call
sbb
mov
movs
dec
inc
cmps
sbb
mov
adc
int
inc
scas
jecxz
ret
jge
gs
je
fwait
lock
jecxz
es
cmc
mov
xchg
pop
xchg
lahf
mov
out
test
mov
inc
jmp
in
push
cmp
cmp
popa
xchg
popf
leave
adc
enter
pop
adc
xor
adc
or
mov
lea
out
sbb
push
cmp
mov
leave
icebp
pushf
xor
dec
popa
push
mov
pop
xchg
xchg
adc
fcmove
scas
adc
inc
mov
gs
cmp
xchg
jmp
or
(bad)
adc
out
and
and
pop
cwde
sbb
jbe
push
sub
mov
in
retf
das
ffreep
add
xor
and
loop
xor
inc
inc
fld
pushf
pop
test
ins
lds
push
test
scas
xor
mov
popf
push
ret
push
lds
lock
push
in
xchg
push
and
sbb
mov
push
sbb
aam
dec
cmp
sub
movs
ins
inc
cmp
imul
mov
add
push
(bad)
cmp
sub
sbb
dec
aaa
sbb
sbb
stos
or
mov
mov
cwde
sbb
adc
aad
sbb
pop
pop
test
ret
mov
lahf
bound
repz
sbb
mov
test
dec
retf
retf
mov
fldenv
sub
sub
cwde
cmp
jg
mov
je
push
mov
daa
hlt
jge
cmc
jl
hlt
inc
adc
sub
sbb
cmp
mov
cmp
add
add
mov
xor
pop
cwde
fdiv
pusha
jns
sub
ror
jmp
jle
mov
mov
xchg
inc
stos
cmp
mov
xor
cld
test
mov
xlat
sbb
out
sub
push
imul
xchg
popa
je
outs
sbb
ret
dec
pop
shl
iret
add
sbb
xor
mov
jae
mov
inc
mov
pop
lea
pop
retf
and
jb
pushf
push
ret
mov
xchg
shl
popf
je
pop
imul
inc
xor
idiv
call
push
(bad)
jnp
pop
sub
cmp
pop
fs
ficom
jge
jb
push
(bad)
lods
dec
fninit
xor
pop
stc
pop
push
dec
imul
and
scas
push
ds
ss
inc
push
jge
retf
cmps
pop
int3
std
jno
pop
pop
pop
shl
jmp
(bad)
leave
mov
test
mov
inc
in
mov
scas
cld
idiv
sahf
mov
or
sbb
cld
hlt
inc
fwait
cmp
ins
mov
xor
xchg
mov
out
cmp
mov
push
pop
clc
inc
push
aas
stos
pop
test
inc
(bad)
add
(bad)
mov
cmc
outs
inc
dec
cmps
sub
call
shl
or
inc
repnz
dec
jnp
cdq
cmps
add
aam
mov
(bad)
push
mov
gs
dec
repz
dec
retf
cmp
sub
add
inc
cmps
xor
xchg
test
and
jbe
nop
jp
leave
inc
jbe
cmp
and
sahf
sbb
sub
pop
pusha
mov
push
in
test
and
mov
mov
ins
inc
popf
ins
xchg
adc
mov
loopne
repz
mov
repnz
mov
cmp
xchg
ret
pusha
in
sub
sbb
sbb
mov
ss
xchg
sbb
push
adc
xchg
mov
jg
shr
mov
dec
jmp
pusha
mov
mov
call
mov
adc
sub
scas
call
xor
mov
jns
(bad)
mov
sub
les
(bad)
add
mov
loopne
dec
in
and
sub
es
ret
dec
popw
inc
pushf
cmp
and
jnp
jle
mov
mov
fistp
neg
push
adc
and
out
and
mov
jb
mov
pop
out
retf
in
int3
into
pop
shr
mov
cmp
mov
xchg
les
mov
jp
mov
in
not
mov
stos
sbb
mov
cdq
ss
dec
test
pop
das
cli
sub
lds
pop
stc
(bad)
sahf
fnsave
pop
ret
imul
adc
inc
adc
jae
mov
adc
adc
jmp
stc
push
inc
daa
xchg
add
fs
jmp
loope
cmp
dec
loope
lock
psrlq
sub
std
dec
daa
adc
call
push
add
mov
popa
and
mov
out
(bad)
mov
add
mov
adc
push
test
add
sub
data16
mov
push
dec
cdq
and
scas
call
xchg
push
or
push
mov
mov
pushf
arpl
call
popa
sbb
cmps
or
fcmove
(bad)
ficom
jp
dec
sbb
imul
lahf
xchg
movs
sahf
adc
in
jle
sar
popa
pusha
jnp
sti
push
and
or
mov
pop
ins
fisttp
push
(bad)
push
jmp
cdq
das
and
xor
out
cs
hlt
inc
loopne
push
dec
fisttp
popf
mov
loopne
out
jae
(bad)
mov
mov
inc
pop
xor
mov
nop
xchg
je
or
scas
inc
sti
adc
dec
shl
inc
mov
mov
repz
enter
leave
add
xor
xor
cmp
push
(bad)
lods
jns
(bad)
dec
pop
stos
mov
(bad)
retf
in
mov
ins
mov
mov
jmp
loop
adc
out
push
test
inc
push
mov
cld
test
cli
loop
inc
stos
mov
dec
sbb
in
push
sahf
cs
xor
jo
xor
xchg
inc
daa
in
(bad)
pop
jmp
not
adc
adc
pushf
or
movntps
scas
sbb
inc
cdq
retf
fwait
xor
add
imul
lahf
je
sahf
inc
or
loope
sbb
loope
cdq
imul
cmp
clc
cmp
fwait
outs
fwait
dec
repz
sub
(bad)
cmc
ds
inc
jg
inc
cwde
jno
jge
dec
sub
pushf
mov
xor
test
call
inc
sbb
and
add
mov
cmp
mov
ret
cmc
mov
cli
bound
jo
push
mov
pop
movs
icebp
movs
inc
xchg
mov
mov
out
repnz
mov
cmp
push
jne
mov
pusha
cmp
fist
xchg
fiadd
push
mov
add
jmp
jbe
fadd
jg
lods
xor
pop
mov
add
jle
neg
mov
pop
pop
pop
ss
aas
dec
and
xchg
and
popf
or
add
movs
(bad)
mov
fcmovnb
jecxz
mov
dec
(bad)
push
add
mov
js
mov
jo
xchg
out
(bad)
scas
and
(bad)
les
xchg
cdq
repz
push
outs
stos
lahf
data16
xlat
adc
(bad)
pop
cmp
sub
fwait
dec
cmp
cwde
mov
sbb
mov
adc
cmp
gs
mov
fs
mov
js
aam
cmp
pop
bound
jno
mov
xchg
inc
shl
cmp
jl
cli
fcomi
cmp
scas
adc
sti
jmp
mov
rcl
and
icebp
(bad)
inc
retf
add
inc
scas
jbe
jne
mov
std
push
out
jle
iret
jne
data16
mov
lods
pop
sahf
jno
add
mov
jae
mov
add
pop
sar
adc
fistp
pop
ins
popa
sub
les
or
cmps
scas
es
mov
and
ret
xor
hlt
ins
jmp
and
push
jb
jns
das
jge
pushf
xor
or
and
jnp
mov
pop
ret
add
mov
fwait
add
dec
pop
xchg
cmp
or
or
xor
push
and
fist
iret
out
aam
inc
or
ror
xchg
lds
bound
mov
mov
cmc
pop
arpl
rcr
xor
inc
repz
cmp
sub
pop
mov
mov
test
mov
add
out
inc
adc
sub
xchg
btc
lock
dec
inc
mov
scas
xor
adc
mov
lahf
enter
add
mov
pop
(bad)
std
mov
ret
test
hlt
hlt
lahf
cmp
out
(bad)
js
mov
lock
popf
popa
arpl
std
xor
cld
pop
int
jl
outs
xchg
jno
inc
stos
inc
sub
scas
mov
fst
push
adc
xor
pop
and
push
scas
ja
pusha
adc
ins
in
sar
das
push
sub
aaa
mov
(bad)
jns
jle
pop
jmp
fst
shl
add
(bad)
mov
repnz
cdq
mov
daa
test
loopne
mov
stc
jecxz
push
jp
xchg
cmps
or
adc
cmp
pop
pop
mov
gs
call
lahf
cmp
mov
fcomp
push
sbb
cmp
adc
mov
sbb
mov
sub
mov
dec
sub
dec
popf
mul
jmp
dec
(bad)
pushf
fistp
rol
daa
enter
cli
arpl
scas
add
xchg
dec
inc
mov
mov
dec
mov
ins
test
in
dec
cdq
aaa
push
jp
mov
xor
inc
xchg
cdq
into
mov
sbb
jl
retf
shl
jg
lds
mov
push
adc
push
add
adc
cdq
lods
cwde
inc
enter
pop
addr16
xchg
fdivr
div
xor
fisttp
stos
mov
cmp
nop
and
aam
clc
cmc
fdiv
mov
jmp
pop
dec
test
and
loopne
push
outs
mov
xchg
mov
cmp
pop
cdq
out
arpl
add
inc
or
ss
or
jno
pop
pop
mov
xchg
sub
cmovge
shl
and
cwde
das
rol
test
rcl
shr
cmps
or
push
fwait
cli
mov
dec
cmps
jbe
xor
inc
inc
mov
inc
jecxz
int
aaa
sbb
sti
mov
sub
or
xor
dec
mov
mov
cmp
rol
fucomp
sub
pop
adc
or
push
sub
stos
ins
outs
mov
pushf
xor
mov
add
and
hlt
mov
mov
push
pop
sar
fidiv
loopne
mov
sbb
loopne
and
rcr
sahf
dec
pusha
mov
repz
cmc
jecxz
sbb
test
ret
(bad)
dec
enter
shl
or
jg
xchg
jo
push
nop
xchg
test
pop
clc
fnstsw
bnd
push
fadd
jb
imul
shl
lahf
dec
sbb
mov
int
xchg
adc
jmp
leave
pop
jl
(bad)
pop
cdq
iret
fsubr
mov
push
int3
cmp
stc
add
sbb
sub
mov
mov
ja
mov
aaa
or
arpl
pop
push
jp
adc
pop
cld
bound
or
fxch
retf
cmc
pop
loopne
add
xor
add
jl
aas
loop
into
aaa
mov
pop
fisub
fcom
inc
out
test
ss
pop
aam
in
mov
inc
xchg
dec
add
cwde
pop
rol
test
inc
xchg
mov
dec
push
out
mov
pop
out
clc
cdq
fstp
data16
std
dec
sub
mov
stos
jb
inc
add
fs
push
sbb
mov
and
sub
ficom
ds
xor
add
std
sbb
cmp
mov
loope
mov
retf
pop
jg
mov
outs
xchg
repz
xor
stc
cmps
and
(bad)
retf
fistp
test
leave
xchg
retf
bound
std
xor
or
mov
fidiv
inc
mov
inc
and
mov
test
fwait
lock
icebp
pop
dec
jne
loopne
xor
or
arpl
dec
pop
mov
(bad)
outs
cmp
ins
jmp
aad
dec
jno
push
rcr
xchg
adc
movs
push
add
imul
inc
inc
cwde
mov
retf
or
bound
fwait
outs
out
pop
scas
or
aaa
repnz
jbe
cmp
jle
adc
ss
lea
in
arpl
push
push
pop
xor
xor
es
pop
scas
ja
jl
sahf
pop
adc
aam
xor
adc
rcr
out
push
outs
add
in
inc
(bad)
stos
jnp
int3
mov
mov
mov
loop
xchg
adc
fndisi(8087
add
dec
adc
push
cmp
repnz
jmp
dec
push
mov
pop
jmp
pop
out
add
(bad)
sbb
sbb
jge
mov
inc
lods
sbb
mov
add
sub
iret
or
imul
sub
xor
imul
clc
lods
jp
jl
mov
lock
(bad)
addr16
cld
fbld
xchg
popf
push
(bad)
rol
sub
pop
out
inc
jp
xor
jb
dec
mov
test
inc
shl
addr16
inc
addr16
inc
sti
pop
cmp
push
in
sub
mov
cmp
mov
push
das
das
and
fist
in
je
mov
and
call
pop
and
push
mov
lahf
bound
movs
mov
add
fdivp
fcmovb
pop
jge
fistp
aad
iret
or
cmp
mov
(bad)
outs
test
sbb
xor
xchg
sbb
out
mov
or
add
jge
pop
mov
shl
mov
inc
mov
sbb
pop
push
mov
pushf
mov
popa
cld
enter
clc
jbe
inc
pop
sub
jl
popf
lock
xchg
ret
fwait
inc
test
xchg
dec
scas
test
ret
push
mov
xchg
cs
dec
mov
in
imul
cs
and
sbb
inc
test
imul
mov
(bad)
sbb
mov
(bad)
int3
js
jg
mov
js
push
mov
scas
jo
(bad)
adc
lods
mov
sub
outs
cli
fdivr
inc
pop
pop
mov
fiadd
xchg
sbb
mov
stos
loope
clc
sub
pop
inc
movs
cmps
lea
inc
iret
fdiv
lods
mov
dec
and
xchg
jmp
(bad)
mov
movs
mov
sub
ret
jmp
sbb
push
in
ds
jno
stos
ds
or
pop
ins
(bad)
shl
arpl
fwait
movs
clts
adc
jmp
icebp
sbb
sbb
retf
into
div
out
in
jmp
out
adc
mov
inc
cmps
lahf
mov
pop
jmp
jmp
jecxz
inc
in
(bad)
xchg
cs
leave
fisttp
aaa
add
mov
bound
mov
lahf
mov
out
jmp
mov
push
inc
push
or
aaa
das
push
cmp
fwait
sub
pop
and
sbb
xchg
adc
xor
les
cwde
dec
bound
mov
cmp
in
sub
aam
and
outs
xchg
mov
dec
jae
xor
stos
mul
push
pop
iret
adc
cmp
imul
or
sbb
test
pop
xchg
cwde
leave
mov
ror
and
and
cmp
push
leave
daa
out
pop
dec
nop
jns
mov
ins
lahf
cmps
cli
cmp
stos
jmp
test
and
pop
call
pop
cli
not
mov
dec
outs
mov
lea
sbb
loopne
fcmovu
inc
sbb
ja
aaa
add
mov
stos
push
jmp
dec
outs
fwait
addr16
stos
adc
pop
leave
aad
mov
add
adc
inc
xor
jg
sbb
pop
add
mov
loopne
movs
xor
ret
inc
add
inc
mov
movs
(bad)
fsubr
sbb
dec
nop
xchg
mov
dec
lea
cmp
das
mov
mov
jmp
lods
(bad)
int
(bad)
sbb
and
les
xor
inc
mov
ja
(bad)
into
int3
adc
iret
sbb
cli
sbb
adc
mov
mov
lahf
push
and
mov
push
pop
std
rol
stc
dec
push
and
inc
mov
pushf
pop
sbb
movs
mov
push
test
je
scas
mov
retf
xlat
data16
stos
inc
loope
cli
adc
push
mov
hlt
and
sbb
ins
mov
push
pushf
inc
sbb
xchg
stos
or
pop
test
and
and
add
aaa
mov
fstp
test
rol
outs
test
xor
out
call
fld
pop
sahf
push
xchg
fild
aaa
mov
icebp
or
pop
mov
mov
add
xor
dec
inc
cmc
mov
sub
(bad)
mov
or
inc
push
xchg
adc
cmp
sbb
inc
pusha
sub
sbb
js
add
lods
add
test
dec
xchg
stos
cli
adc
dec
cld
mov
add
pop
jge
ss
adc
nop
push
add
(bad)
je
(bad)
xchg
jecxz
lea
out
jmp
and
(bad)
mov
hlt
cmp
cmp
cmp
(bad)
add
sub
mov
imul
cmp
push
mov
pop
push
cmp
sub
inc
pop
or
data16
pop
mov
pop
ds
fcom
jmp
jp
mov
loope
test
jecxz
lock
(bad)
adc
dec
mov
fmul
xchg
xchg
icebp
out
cld
jo
mov
dec
(bad)
fs
push
sbb
mov
imul
imul
push
and
xchg
mov
add
or
cmp
adc
push
sbb
adc
inc
arpl
dec
mov
(bad)
sbb
push
outs
fimul
lds
mov
inc
sti
jecxz
outs
(bad)
mov
test
push
mov
mov
mov
clc
mov
outs
popa
nop
scas
inc
int
(bad)
dec
add
rol
fild
sbb
xchg
pop
gs
pop
jge
xchg
push
in
arpl
push
loop
xor
sub
mov
or
movs
movs
outs
xor
(bad)
lods
mov
ret
jnp
jle
sub
popf
in
mov
loope
xlat
cdq
inc
and
sar
test
sub
pop
inc
lods
xchg
cld
outs
xor
lds
loop
push
xchg
pop
(bad)
xor
(bad)
std
adc
pusha
fsubr
sbb
outs
inc
ja
xor
fcmovnbe
push
dec
dec
dec
(bad)
and
dec
sub
sbb
dec
add
aaa
inc
and
retf
mov
lds
rol
mov
xchg
jno
call
pop
scas
xchg
lds
fwait
dec
jg
movs
xchg
adc
(bad)
hlt
repnz
jg
sbb
stc
sub
xor
imul
push
mov
cdq
scas
mov
or
dec
fimul
jl
sbb
add
and
xor
adc
inc
or
test
inc
pop
push
sahf
leave
mov
cmc
pop
push
pusha
(bad)
mov
push
cmps
hlt
mov
adc
clc
mov
icebp
dec
in
mov
pop
jae
(bad)
(bad)
cs
loopne
(bad)
jnp
in
test
push
jmp
and
shr
stc
jp
cmp
xor
push
and
mov
jmp
popf
retf
or
loope
push
push
inc
enter
or
xor
dec
ins
xchg
cmp
push
lea
inc
fwait
stos
loope
mov
sbb
push
adc
data16
cmc
or
sbb
cmp
gs
mov
mov
scas
sbb
sub
cmp
jg
ins
popa
jle
cs
push
test
cmps
mov
fmulp
sub
xor
pop
push
add
jecxz
mov
lods
imul
cmps
sbb
or
xor
jecxz
in
jg
scas
sub
fmul
jb
mov
adc
rcl
movs
jmp
fwait
mov
aad
out
and
pop
cmps
sbb
cli
mov
push
icebp
sbb
dec
cdq
adc
not
dec
icebp
movs
cmps
lods
or
jg
fisubr
xchg
fsub
xor
jae
xchg
push
retf
inc
adc
jnp
cwde
cwde
outs
sub
ins
cli
int
add
mov
inc
inc
ins
movs
ins
ret
scas
(bad)
jb
les
pop
out
cmps
sbb
jg
mov
push
xchg
enter
rcr
cmc
scas
fisub
mov
dec
ret
jb
cmp
in
cld
pop
cdq
dec
push
sbb
push
jp
(bad)
addr16
add
push
(bad)
dec
ror
mov
outs
outs
or
mov
and
stc
add
inc
adc
and
and
out
mov
pop
inc
scas
outs
shl
test
push
in
shl
in
sub
xchg
add
out
ror
pop
pusha
loop
dec
repnz
cmps
ds
adc
jecxz
jne
popa
mov
imul
xor
mov
jae
dec
pop
mov
add
add
popf
cmp
mov
xor
adc
icebp
mov
xlat
sbb
dec
mov
test
pop
cmc
test
adc
inc
movs
mov
in
cmp
cs
(bad)
fdivr
mov
sbb
mov
js
push
add
shr
push
jp
xchg
jg
mov
xchg
jbe
inc
and
sub
pop
or
xor
pusha
dec
mov
push
mov
mov
cmp
mov
jmp
jne
cmps
not
into
mov
add
stc
mov
xchg
inc
test
add
in
xchg
mov
xor
xor
(bad)
stc
and
jp
ins
dec
daa
pushf
pop
pop
ins
test
sub
push
ret
outs
imul
push
adc
ss
push
mov
test
or
mov
and
and
stos
mov
xchg
pop
popf
pop
fiadd
push
nop
mov
xor
aad
jbe
js
pushf
fwait
retf
imul
test
nop
sahf
inc
rcl
cmp
(bad)
fdivr
imul
cmps
sbb
mov
inc
jmp
pop
cld
mov
fwait
xor
xor
sub
ror
cmp
sub
xchg
lods
jno
das
gs
cmps
xor
and
sbb
popf
pop
(bad)
scas
lock
xchg
mov
or
retf
lds
xchg
je
mov
sbb
loopne
fcomip
xor
ret
addr16
test
test
or
adc
xchg
inc
daa
pop
xchg
cmp
in
je
js
retf
inc
clts
add
test
stos
aaa
jmp
and
mov
and
pop
cmp
(bad)
retf
or
inc
jo
fisttp
mov
xchg
dec
jecxz
jns
(bad)
pushf
and
outs
in
and
in
mov
sub
test
lods
xchg
push
inc
sub
retf
out
jbe
jge
sub
clc
inc
pop
imul
rcr
popf
int
adc
mov
sbb
inc
pop
xchg
xor
loope
inc
pop
inc
xchg
std
mov
lods
fsubr
inc
jnp
mov
mov
mov
xchg
loope
cmp
clc
popf
pop
loopne
xchg
lods
cdq
(bad)
lods
jp
mov
xchg
and
xor
jo
das
adc
inc
cld
sbb
sbb
pop
pop
inc
div
dec
scas
retf
mov
sub
in
inc
in
mov
cwde
rol
push
or
xor
push
mov
rcl
lea
jmp
dec
dec
popf
out
and
sti
jb
js
and
je
mov
mov
adc
mov
mov
sbb
lahf
sahf
addr16
ret
xchg
popf
cmp
cdq
push
not
aaa
pop
sub
or
add
cmp
mov
stos
mov
xor
or
inc
(bad)
sub
add
xor
repz
lahf
imul
fdiv
add
mov
leave
inc
js
cmps
sub
cdq
cmp
mov
add
loope
or
push
xchg
pushf
stos
xlat
or
xchg
es
jmp
cmp
lea
sbb
adc
jp
cmp
sbb
lods
xor
cwde
leave
dec
cmp
dec
fmul
addr16
sub
xor
sub
fs
scas
xor
loope
adc
inc
adc
pop
mov
ins
fisubr
mov
in
xlat
pushf
jb
mov
mov
mov
out
mov
(bad)
xor
loop
repnz
loop
pop
jecxz
jbe
je
cmp
sar
in
pop
cdq
inc
pop
cmp
cmp
dec
lods
xor
add
add
sbb
packssdw
mov
cmp
and
fldcw
dec
jno
scas
movs
xor
cmp
cmps
xchg
inc
enter
sbb
or
fadd
enter
mov
jmp
mov
fcomp
inc
mov
loop
out
test
xor
ret
je
jo
inc
push
adc
(bad)
mov
or
daa
bound
push
pop
dec
lahf
cmps
test
fcmovu
or
(bad)
adc
sub
enter
adc
nop
xchg
loop
jmp
loopne
pusha
jl
push
rcr
jecxz
repz
jno
repnz
fst
pop
mov
in
not
inc
repz
ret
gs
lock
out
inc
xchg
cmp
cmp
popf
sub
cmps
pusha
pop
bound
cmp
dec
fadd
xor
add
and
push
adc
xchg
das
int
xlat
push
jns
dec
aas
lea
jge
mov
jns
cli
sub
xlat
inc
rcr
push
popf
push
out
call
xor
mul
mov
jle
xchg
nop
and
mov
xchg
(bad)
jnp
mov
cmp
(bad)
pusha
out
jb
cmp
inc
cmp
xchg
nop
retf
inc
add
add
ret
je
jbe
in
adc
or
mov
js
xchg
jns
popf
or
mov
pop
stc
xlat
stos
sbb
fldenv
fs
jno
jp
mov
mov
push
shl
mov
xlat
sbb
sub
mul
jmp
and
scas
pop
jmp
(bad)
sbb
hlt
and
add
inc
rcr
lea
and
stos
test
xchg
aam
fneni(8087
jbe
pop
aaa
fld
pop
and
pop
lods
inc
ja
dec
push
test
ja
fwait
mov
sbb
pop
fsubr
jns
dec
jb
lods
sub
mov
push
fbld
mov
sbb
mov
push
cs
mov
ret
stos
mov
dec
or
fmul
jp
dec
shr
inc
lahf
dec
outs
scas
retf
or
clc
push
les
jnp
sar
pop
and
je
ins
pop
or
retf
pop
cmp
test
jg
pop
test
retf
(bad)
(bad)
outs
test
jp
sar
xchg
jmp
mov
nop
nop
mov
adc
aam
test
push
jne
dec
or
aad
inc
out
and
and
sub
dec
jae
adc
loop
jns
mov
fs
xor
imul
call
add
aad
jno
(bad)
clc
adc
(bad)
sti
add
jae
xchg
sub
test
call
shl
add
inc
lods
pushf
fsubr
shufps
sti
cdq
stos
and
rol
nop
ret
cmp
dec
fld
dec
aas
jge
outs
imul
jmp
cmp
add
jecxz
dec
pop
dec
loope
imul
mov
pop
xchg
jae
cmp
out
xchg
sti
pop
xor
cmp
mov
dec
push
mov
rol
xchg
mov
fs
mov
add
lock
sar
add
daa
pop
sub
push
loop
jne
fs
pop
or
out
in
pusha
out
sbb
adc
or
test
fwait
scas
inc
and
push
iret
clc
or
or
or
and
pop
inc
mov
je
mov
outs
das
adc
lods
xchg
mov
or
test
adc
cwde
mov
add
mov
mov
lea
jne
les
movs
ret
pop
cmc
frstor
dec
icebp
cmp
dec
(bad)
retf
lock
fwait
pop
or
aas
mov
pop
or
xchg
nop
mov
push
lods
sbb
push
inc
jns
loop
cmp
cmp
mov
inc
mov
cmp
test
in
xchg
das
enter
dec
pop
and
dec
in
loop
out
push
pop
(bad)
mov
(bad)
adc
sti
mov
inc
xchg
xlat
cmp
inc
dec
out
fdiv
icebp
inc
sti
ds
sub
(bad)
fldenv
retf
and
jb
inc
and
or
xor
imul
fistp
jp
ss
leave
or
jl
retf
mov
or
sub
shl
ret
inc
add
push
xor
dec
frstor
lods
daa
les
xchg
cmc
inc
scas
inc
arpl
int
idiv
loopne
popa
scas
mov
ror
cmp
pusha
xchg
xor
inc
pop
mov
or
std
jae
inc
sub
or
and
jae
mov
data16
mov
push
pop
xor
out
in
pushf
iret
pop
pushf
dec
pop
inc
scas
inc
and
pop
sub
in
imul
pop
jne
lds
rep
shr
call
lods
sbb
dec
iret
vcvtdq2ps
ds
and
mov
mov
add
jnp
mov
xchg
in
dec
push
(bad)
add
xchg
or
and
pop
jbe
or
mov
pop
test
sub
out
test
mov
outs
bound
pusha
xchg
out
mov
dec
xchg
mov
cmps
(bad)
mov
addr16
or
xrelease
adc
pop
cmp
loopne
push
jle
mov
push
pop
mov
(bad)
retf
push
cld
jp
or
call
shl
pop
xchg
jb
pop
ja
jae
scas
sbb
add
gs
add
hlt
push
jecxz
cmovge
mov
xchg
retf
lock
out
scas
mov
addr16
cwde
mov
scas
repnz
fs
jmp
sbb
leave
(bad)
fild
es
sub
rcl
push
clc
inc
pop
or
dec
add
jl
xchg
adc
inc
cmps
and
jae
sbb
add
and
cwde
or
scas
call
jne
cwde
dec
add
popa
mul
or
repz
pushf
in
and
outs
mov
js
jmp
mov
shl
fwait
movs
push
imul
clc
das
pop
xor
icebp
(bad)
jnp
push
inc
sub
sub
gs
pusha
inc
popa
in
call
loopne
xor
out
add
or
test
aas
(bad)
dec
rdmsr
(bad)
xor
jo
lds
sbb
sahf
cmc
mov
or
stc
cmps
add
in
sub
scas
xor
icebp
push
mov
dec
sbb
sbb
cs
mov
add
int
es
sbb
retf
fisttp
add
out
es
add
sbb
push
addr16
pop
or
mov
jmp
xchg
aas
call
adc
cmc
jb
out
inc
int3
mov
(bad)
xor
call
push
jecxz
mov
mov
popf
cmp
ret
push
repz
jmp
pop
sub
or
jb
push
sub
in
ror
sbb
inc
(bad)
jmp
or
pop
xor
pop
mov
inc
inc
lods
imul
push
jp
mov
xchg
scas
sti
add
pop
pop
cdq
ins
fisub
xchg
push
mov
cmp
pusha
mov
scas
out
dec
xchg
cmps
nop
scas
arpl
xchg
clc
(bad)
cmc
stc
jns
mov
scas
dec
push
sub
in
inc
int
jo
js
sub
mov
sar
inc
js
clc
popa
fs
mov
sub
pop
fwait
add
shr
mov
add
and
lock
nop
ret
add
mov
jnp
mov
add
mov
sbb
mov
adc
les
jecxz
inc
neg
sbb
push
div
retf
and
cmp
xor
gs
jne
jge
cmps
int
and
mul
fbld
ret
ins
sbb
mov
fs
push
ins
movs
dec
xor
cs
xchg
mov
loopne
movs
add
pop
push
mov
inc
mov
mov
mov
stos
adc
push
xchg
(bad)
fidivr
in
fwait
mov
sbb
jo
fist
pop
jmp
dec
int
inc
pusha
pop
mov
jno
add
or
movs
(bad)
arpl
or
adc
pop
and
sar
mov
pusha
repz
cmp
add
in
lods
cmp
push
bound
cmp
loopne
push
iret
mov
movs
sub
inc
nop
in
into
dec
mov
pushf
popa
cmp
fmul
mov
adc
inc
in
sub
push
pop
xchg
aas
jns
mov
push
xchg
(bad)
jl
xchg
sub
inc
out
cmp
pop
jmp
adc
or
adc
repz
fcom
xchg
add
fld
jl
dec
mov
fcomp
js
cld
mov
push
hlt
in
and
jg
cli
scas
clc
das
mov
xchg
xor
mov
std
push
pop
sub
retf
loope
push
aaa
pop
mov
imul
test
les
int
add
ja
mov
pusha
cmc
or
mov
fdivr
jnp
mov
jmp
cmps
sbb
jnp
jo
jp
iret
hlt
pop
mov
jmp
or
shl
cdq
mov
push
mov
loope
mov
sahf
scas
fs
dec
inc
pop
adc
dec
sti
inc
inc
push
dec
mov
xor
pop
mov
xchg
mov
rcl
xor
add
sbb
mov
dec
adc
pusha
mov
inc
jmp
in
inc
fistp
dec
sub
inc
mov
inc
pop
hlt
(bad)
xchg
add
in
movs
sbb
lods
mov
in
shr
pop
sbb
stc
cmp
or
mov
inc
jecxz
inc
jge
mov
je
mov
add
sub
(bad)
mov
pop
or
inc
ss
cmp
push
xchg
or
scas
xchg
pop
pop
gs
xchg
cs
sub
iret
loope
lahf
(bad)
xchg
adc
loop
and
call
test
dec
add
loopne
(bad)
in
push
xchg
cmps
push
nop
sub
xor
lods
je
push
dec
pop
inc
fdiv
sub
mov
push
enter
sbb
imul
or
mov
lea
data16
jo
mov
jb
test
dec
fdivp
test
mov
jge
imul
jb
test
jb
in
mov
add
rol
and
call
aas
aad
cmps
(bad)
dec
dec
scas
mov
inc
inc
xor
(bad)
push
retf
push
jnp
imul
ins
call
sbb
fmul
mov
arpl
js
mov
push
mov
scas
add
inc
push
cwde
jnp
lea
jmp
cdq
fst
cmc
pop
add
cld
nop
clc
ds
mov
cs
lods
sub
jg
add
lahf
xchg
and
and
aad
retf
adc
das
(bad)
(bad)
pop
rol
pop
arpl
jne
or
mov
in
(bad)
mov
xchg
inc
dec
pop
mov
and
jmp
sbb
mov
mov
sbb
addr16
cld
test
mov
popaw
mov
dec
mov
popf
jle
not
mov
loope
mov
inc
pop
xchg
mov
mov
cwde
lahf
pusha
leave
ja
adc
dec
mov
jmp
les
sbb
mov
pop
inc
mov
pop
mov
sub
dec
enter
fdiv
dec
push
fadd
add
scas
adc
popw
test
pop
mov
dec
cwde
stos
lahf
sub
pop
fstp
and
push
pop
inc
inc
ror
add
mov
test
xchg
out
es
cmps
mov
arpl
stos
pop
jle
test
aam
cmp
mov
cmp
sub
cmp
dec
std
mov
sbb
test
jge
jne
outs
movs
retf
scas
xchg
inc
sub
inc
rcr
sbb
sbb
pop
or
sub
inc
lods
push
inc
mov
add
xor
inc
(bad)
ret
add
outs
pop
(bad)
fcomp
and
call
test
mov
std
jo
inc
nop
mov
dec
bound
mov
xchg
xlat
inc
inc
mov
push
loope
fimul
sbb
aam
hlt
addr16
ds
inc
movs
pop
imul
sbb
shl
into
cli
add
xchg
jg
ja
sti
push
cmp
js
cmp
mov
push
mov
(bad)
adc
push
pop
jecxz
mov
xor
std
dec
push
push
mov
push
pushf
jecxz
push
out
nop
ror
in
int3
aas
mov
xchg
jmp
imul
cld
fmul
push
and
js
mov
gs
xchg
sbb
jge
out
sbb
or
pop
push
je
ss
xsave
out
inc
sub
inc
in
lea
xor
stos
mov
retf
inc
fnstcw
mov
xchg
mov
mov
imul
pushf
sahf
xchg
add
ret
cdq
cmp
in
mov
or
ret
sub
xor
bound
dec
sbb
stos
xchg
mov
fsub
add
push
out
aaa
pop
ds
pop
scas
xor
inc
jb
jo
test
pop
xchg
test
xchg
sar
cmp
cwde
jo
xchg
call
dec
jmp
es
jle
xchg
stos
enter
add
mov
ins
scas
mov
inc
stos
dec
sub
nop
jmp
push
xchg
adc
xor
mov
pop
retf
out
pop
mov
xor
push
retf
jnp
mov
test
add
or
call
retf
pop
les
test
sbb
mov
stos
sbb
in
xchg
add
mov
outs
xchg
mov
jmp
cwde
dec
call
cmp
out
aam
retf
xor
cmp
cs
jnp
push
pop
pop
in
xchg
mov
icebp
cmc
sub
xchg
js
pop
xor
and
or
(bad)
dec
push
lods
dec
jns
mov
and
inc
hlt
scas
xchg
aas
mov
inc
ins
sbb
shr
xchg
imul
shl
lods
call
mov
(bad)
(bad)
rcr
arpl
cmp
cmp
call
pop
adc
jmp
add
mov
sbb
inc
sub
imul
or
(bad)
imul
xchg
mov
xor
sbb
dec
fwait
jb
xchg
pop
xchg
repnz
leave
xchg
push
push
mov
mov
arpl
pop
push
lods
(bad)
inc
rol
test
xchg
xchg
in
retf
sub
and
mov
add
test
and
enter
std
push
jmp
add
jb
jecxz
into
pop
mov
adc
push
jmp
sti
sbb
or
xor
jo
push
inc
fsub
mov
dec
int3
add
repnz
cmp
mov
adc
xlat
(bad)
in
or
stos
push
hlt
and
lock
inc
sub
outs
pusha
outs
fwait
jo
push
mov
(bad)
pop
(bad)
xchg
push
sbb
ja
xor
inc
cmp
mov
mov
lock
sbb
ins
cdq
shl
int3
stc
fwait
cmp
popa
jp
rcr
loop
in
mov
fcmove
mov
mov
pop
push
test
retf
loope
jle
lahf
xor
pop
int
add
jmp
pop
cmp
jnp
ins
out
leave
mov
sub
sbb
frstor
add
(bad)
or
push
add
cwde
push
sbb
dec
pop
movs
xchg
(bad)
ins
inc
push
fisubr
inc
jmp
mov
ds
ret
mov
test
mov
retf
jns
mov
aam
(bad)
sbb
cmps
xchg
bound
enter
fnstcw
adc
movs
ins
xchg
pop
lock
push
dec
fsubr
ret
sbb
inc
lahf
cs
pop
pushf
inc
add
mov
fsubr
ret
aam
adc
iret
inc
xor
and
jbe
jp
xchg
scas
cwde
push
adc
push
call
test
xchg
ret
mov
(bad)
jmp
xor
popa
mov
mov
jle
ret
xchg
cs
repz
(bad)
push
out
mov
es
or
fucomi
push
cld
inc
jp
xor
dec
sbb
cmc
mov
int3
pop
(bad)
or
dec
or
add
push
xor
sti
pop
jbe
data16
mov
(bad)
fld
and
jo
mov
cdq
data16
lahf
js
mov
xchg
xchg
(bad)
and
push
dec
mov
xchg
add
loope
call
mov
or
(bad)
loop
in
add
jns
adc
lods
xor
mov
lea
cdq
out
aas
(bad)
mov
jns
mov
sbb
or
scas
jae
shl
fs
mov
retf
dec
test
jno
scas
jnp
xchg
loope
cdq
out
adc
mov
lea
out
test
lahf
lds
fcomp
pop
out
cmp
cld
and
fwait
push
aad
std
sbb
test
or
test
pop
jp
outs
push
push
cmp
cmps
pop
sti
int3
or
add
call
adc
jo
fmul
push
mov
mov
xor
outs
ror
inc
ficomp
pop
jg
sahf
push
std
scas
aam
movs
fbld
sub
repz
mov
dec
pop
mov
jecxz
cmc
loopne
bound
out
and
call
or
imul
lahf
test
pop
fisttp
fs
inc
sbb
adc
pop
sbb
adc
xchg
(bad)
mov
leave
ficom
ret
dec
pop
pop
lods
je
mov
mov
bswap
call
std
mov
js
ret
pop
retf
rcl
mov
daa
and
repnz
test
sbb
jge
sub
pop
lahf
cs
mov
cli
sbb
push
sbb
sbb
bound
mov
dec
pushf
push
adc
rol
fmul
cmps
and
sbb
mov
mov
mov
and
(bad)
lock
xchg
xchg
enter
adc
cld
icebp
jge
cdq
mov
jno
dec
sbb
call
inc
add
test
pop
jno
dec
and
mov
xchg
or
iret
inc
int
jl
cld
push
jl
sbb
pop
xor
sbb
psrld
(bad)
push
ss
cld
add
push
aas
ret
test
push
sti
sbb
sub
(bad)
cmp
mov
push
aam
add
sub
sub
sti
mov
sub
inc
xchg
gs
ds
retf
sti
and
inc
fld
dec
inc
fwait
push
push
dec
cmc
xchg
into
mov
ror
push
pop
add
add
xor
int3
adc
xchg
dec
push
movs
sbb
fcomp
imul
cmp
gs
mov
div
xchg
loope
mov
mov
dec
mov
loope
lea
ds
out
jmp
leave
dec
fsubr
or
inc
ror
sbb
mov
imul
movs
scas
aas
push
neg
jecxz
movs
lea
imul
adc
cmp
mov
xchg
xor
cdq
mov
and
push
hlt
aam
pop
test
jb
inc
jne
mov
inc
mov
mov
push
cli
mov
call
mov
xchg
sti
loope
loop
dec
pusha
mov
pop
pop
pop
retf
enter
sbb
and
or
aas
and
pop
xchg
jmp
add
adc
pop
adc
pushf
pop
stos
or
jo
lea
mov
jecxz
movs
or
loop
leave
pop
add
dec
jmp
aaa
cli
mov
mov
mov
push
adc
test
xchg
mov
inc
ds
in
inc
jmp
inc
adc
mov
or
lods
jbe
clc
add
sub
sbb
inc
push
mov
jb
jb
fcom
mov
cs
loop
call
and
mov
sti
dec
jmp
dec
and
pusha
icebp
stos
sbb
test
loop
sahf
xor
fcmovbe
mov
mov
jg
mov
and
int3
dec
in
cmp
fst
jp
xor
cwde
leave
push
cs
inc
call
inc
push
sub
pop
fs
jb
fwait
push
xchg
xor
push
pop
xchg
scas
push
inc
repz
pop
add
fadd
mov
jmp
push
and
lds
mov
inc
pop
enter
into
push
lods
cdq
movs
rcr
push
inc
and
jmp
ret
mov
fsubr
daa
xor
loopne
inc
or
dec
mov
or
sub
call
test
dec
pop
inc
xor
or
add
jle
fwait
pop
sub
adc
push
inc
sbb
int3
xchg
outs
inc
sar
fimul
xchg
lahf
pop
xor
dec
hlt
lods
fcmovne
cmp
sbb
mov
sbb
ror
ins
cmc
mov
cmp
stc
clc
loop
(bad)
push
inc
jl
mov
jb
jge
xchg
cdq
call
add
add
pop
jae
jge
mov
sbb
imul
sub
jge
into
mov
xchg
sub
inc
cwde
cmc
or
add
add
gs
mov
(bad)
sahf
js
loopne
mov
cmp
or
or
cmps
dec
pop
cmp
nop
xor
pop
sahf
or
cmps
push
pop
jae
mov
jp
call
sbb
adc
or
sbb
stos
or
lahf
cmp
sbb
xor
clc
jg
jle
and
jmp
mov
mov
(bad)
shr
adc
in
movs
sbb
xor
(bad)
mov
test
retf
cmp
xor
mov
inc
popf
cmp
mov
je
push
or
sub
scas
push
out
sbb
dec
lds
imul
adc
sub
lods
ins
inc
xchg
ss
mul
pop
in
mov
cmp
xor
pop
mov
add
(bad)
(bad)
out
mov
xor
stc
nop
es
push
mov
lods
retf
xor
mov
inc
mov
test
jecxz
inc
ror
push
cmp
hlt
cmc
pop
out
pusha
sbb
lea
sbb
inc
cmp
(bad)
stos
test
retf
mov
cmp
cmp
push
adc
lea
mov
inc
mov
cmp
int3
sti
dec
fmul
addr16
and
ret
test
lock
push
mov
mov
cmc
push
test
push
jb
xchg
stos
mul
cmp
cmps
push
push
das
nop
repnz
xor
or
mov
pop
je
xor
mov
push
shr
jecxz
(bad)
into
push
jb
pop
inc
or
pop
hlt
pop
inc
shl
ror
arpl
xor
in
jecxz
nop
cmp
dec
inc
popf
dec
aam
fnstsw
fwait
ret
jecxz
loope
add
mov
mov
hlt
inc
fwait
mov
gs
xchg
mov
pop
std
mov
jmp
daa
cs
lods
jle
pop
sbb
imul
xchg
xchg
retf
mov
shl
shl
lahf
rcl
jns
in
or
xor
adc
jns
mov
push
nop
mov
fldcw
pop
lds
pusha
bound
push
mov
mov
pushf
adc
sbb
test
addr16
add
cmp
hlt
test
mov
fld
add
clc
into
stos
and
push
pop
and
xchg
xor
lahf
dec
sub
mov
lods
pop
rcl
sbb
ss
outs
add
push
icebp
cmp
adc
xor
push
push
popf
aad
sbb
jl
(bad)
fcomp
dec
mov
js
fist
aaa
xlat
cli
mov
pushf
mov
or
mov
xchg
fistp
jmp
aas
adc
iret
lock
aas
je
pusha
mov
sbb
pop
mov
lods
popa
rcl
fcomip
pop
dec
pop
and
xor
outs
add
fidivr
xchg
je
mov
pop
out
scas
clc
push
cmp
push
(bad)
sar
sbb
sub
fisub
aam
jne
mov
pop
shr
xchg
xor
ins
test
inc
je
mov
sub
call
dec
mov
iret
and
add
and
jo
outs
sub
mov
retf
inc
call
pop
fs
adc
and
cmp
sbb
inc
nop
mov
push
xchg
jmp
loopne
sbb
mov
clc
popa
mov
mov
xor
xchg
inc
mov
push
add
les
xchg
lahf
outs
xchg
imul
xlat
jmp
std
and
and
adc
das
test
pop
or
cmp
push
fisttp
adc
iret
push
sub
and
adc
sub
popf
dec
pop
test
cmp
shl
out
inc
ins
mov
cmp
call
xor
mov
mov
mov
pop
xchg
mov
rcr
cwde
cmps
dec
rcr
adc
test
lock
ja
outs
mov
ja
pop
jmp
jns
into
add
cmp
sbb
pop
retf
popa
dec
cmps
push
cmp
adc
sti
es
je
fidiv
mov
xor
icebp
loopne
ins
cli
dec
lea
inc
jle
movs
popf
sbb
iret
fstp
mov
iret
sub
xlat
call
inc
stc
add
daa
mov
pop
js
dec
inc
pop
movs
cwde
retf
sbb
pop
fsubr
sub
add
ds
and
mov
(bad)
das
test
adc
push
repz
fsub
rcr
mov
fwait
inc
out
push
or
ret
mov
(bad)
pop
repnz
dec
addr16
mov
xor
xchg
mul
mov
push
repnz
sar
sub
fbstp
inc
xor
daa
mov
mov
jmp
pushf
cli
ins
jge
and
cmp
or
mov
call
aam
in
mov
js
jne
push
lahf
pusha
mov
ins
div
jp
ins
mov
test
jl
mov
fidiv
pushf
mov
push
or
inc
fdivr
or
inc
xchg
dec
pop
test
je
xchg
cmps
ret
adc
rcl
ret
sub
bound
(bad)
es
fcomp
movs
pop
push
mov
push
mov
push
dec
out
jmp
and
repz
pushf
jne
pop
mov
ins
mov
out
lock
test
movs
mov
jne
mov
cmp
cld
ins
inc
xchg
xchg
pop
(bad)
sbb
aad
cld
dec
push
sbb
sbb
adc
push
rcr
repz
test
sub
cmp
add
adc
mov
push
fbstp
cmps
dec
push
mov
mov
out
scas
mov
icebp
jl
sub
sub
into
repnz
sti
mov
jge
lock
or
dec
mov
mov
push
popf
mov
clc
nop
(bad)
fstp
mov
lds
add
inc
lock
add
data16
inc
lods
dec
ds
in
xchg
(bad)
lods
or
repz
inc
fidivr
sbb
sbb
pop
pop
scas
pop
and
inc
add
rcr
scas
jecxz
test
data16
push
shl
mov
xor
mov
or
ja
test
mov
cmps
jae
jb
dec
pop
sub
into
or
sub
imul
mov
dec
jmp
call
cmc
add
ror
inc
pop
push
les
sub
es
scas
pop
and
xor
lods
xchg
xchg
or
adc
(bad)
xor
into
jnp
inc
push
pusha
scas
ins
jmp
idiv
mov
push
pop
(bad)
cmp
gs
loope
hlt
adc
shl
test
dec
pop
xchg
(bad)
push
out
fcom
rol
add
dec
sub
add
mov
out
ret
fisttp
(bad)
outs
pop
push
add
inc
adc
pop
fwait
(bad)
mov
shr
retf
bound
jp
(bad)
loopne
shl
sbb
div
xor
push
stos
xchg
fdiv
mov
xlat
mov
loop
ins
in
jnp
push
sub
jmp
int
loope
inc
and
cmp
std
inc
add
ret
aas
pop
iret
pop
popf
sar
xchg
cld
dec
dec
or
loope
sbb
mov
addr16
fistp
adc
into
mov
ret
neg
ror
sub
push
popf
out
stos
jecxz
dec
xchg
xchg
push
adc
cld
jmp
in
dec
mov
pop
mov
mov
mov
xor
pop
int3
xor
mov
int
add
outs
test
cmp
iret
adc
icebp
or
sub
cmp
sub
ja
jns
mov
pop
in
fwait
and
jno
stc
jecxz
test
inc
icebp
inc
inc
jle
jae
scas
fidivr
mov
mov
hlt
xchg
jae
iret
retf
and
imul
inc
jo
rcr
(bad)
jecxz
ja
sub
adc
fsub
push
sbb
fisubr
pop
mov
mov
mov
loope
sub
shl
pop
leave
sbb
or
mov
jae
cwde
call
xchg
and
loopne
xchg
push
mov
jl
out
adc
out
shr
lods
in
sbb
mov
addr16
fld
mov
call
cmp
push
aad
or
(bad)
(bad)
jp
inc
imul
lea
addr16
jbe
fst
jge
ret
inc
jae
sub
stos
pop
mov
jp
mov
xchg
aaa
pop
jmp
cmc
pop
pop
jnp
and
lock
xchg
test
int3
cmps
mov
xchg
jp
test
in
adc
call
jmp
pushf
jae
push
pop
aas
sbb
mov
pop
into
inc
pop
jle
(bad)
xor
fs
dec
push
pop
mov
mov
inc
daa
stos
inc
cld
out
xor
sbb
sbb
or
pop
stos
xor
inc
push
inc
adc
cwde
das
xor
jb
stos
lahf
xor
add
faddp
loope
cdq
out
mov
mov
jmp
(bad)
sbb
xchg
mov
add
loope
enter
mov
push
in
into
sub
loopne
xchg
xor
ins
bound
js
pop
mov
jmp
arpl
adc
inc
ds
pop
or
add
xchg
inc
jo
movs
mov
sbb
cmps
add
aad
sti
data16
xchg
lds
jbe
cmp
int
nop
add
mov
shl
mov
fwait
mov
imul
icebp
mov
jge
or
push
fwait
ss
jle
nop
xchg
pushf
sub
js
mov
xchg
inc
sbb
xor
sbb
es
mov
test
lods
push
xor
mov
iret
hlt
in
mov
imul
pop
jg
pusha
(bad)
inc
or
arpl
cmp
sti
repz
dec
mov
fdiv
cmp
addr16
jmp
mov
scas
cwde
dec
in
push
lar
in
out
fdiv
daa
pop
jp
mov
sbb
mov
xchg
lods
sbb
ins
gs
xor
imul
ins
(bad)
dec
inc
test
pop
into
xor
xchg
mov
hlt
repz
pushf
jl
arpl
pusha
call
push
fsubrp
lods
sub
inc
xchg
mov
bound
fwait
call
jmp
aam
int3
inc
pop
dec
ret
in
ds
push
pop
jp
fldenv
jge
cld
xor
jp
lahf
mov
push
or
data16
ror
mov
pop
or
cmp
mov
xchg
fld
scas
jno
xchg
aaa
outs
sahf
shr
pushf
retf
mov
pop
and
pop
xchg
xchg
push
jmp
jne
mov
xchg
ins
clc
jge
mov
push
sti
movs
mov
aas
std
std
movs
leave
retf
mov
dec
rcl
cmp
push
std
repnz
inc
loope
inc
or
rcr
sbb
dec
pop
ins
nop
xchg
retf
retf
lods
jg
add
cld
push
bound
loope
sbb
xor
out
jno
or
mov
sti
xor
sbb
test
adc
fs
fimul
iret
mov
(bad)
loope
ret
pop
clc
fimul
fwait
rcr
mov
lock
stos
(bad)
jno
mov
int3
adc
clc
sub
sub
fs
xchg
inc
push
popf
jnp
push
mov
call
ds
pop
push
imul
lods
or
nop
dec
xor
or
mov
and
fdiv
repnz
pop
inc
fidivr
ror
pushf
nop
add
retf
ss
dec
xor
jle
ret
movs
sysret
mov
mov
cmc
jg
cdq
test
repnz
cmp
loopne
ret
and
sahf
sbb
inc
adc
mov
leave
enter
pop
inc
addr16
jne
xchg
sbb
mov
pop
pusha
popf
fwait
stc
sbb
daa
inc
iret
sti
mov
xchg
shr
inc
add
mov
xchg
adc
retf
xor
stc
sub
and
in
jp
xchg
pop
xchg
jg
adc
or
iret
xlat
jg
and
inc
cdq
xor
inc
push
cmps
stos
xchg
pushf
sbb
pop
fadd
add
add
jecxz
gs
jne
xchg
aaa
cwde
adc
data16
sbb
pop
pop
cmp
les
sti
gs
mov
dec
pushf
(bad)
xchg
dec
in
inc
adc
jl
(bad)
test
xchg
mov
xor
and
mov
scas
push
push
adc
(bad)
retf
ds
and
dec
cmps
adc
jnp
cdq
mov
out
mov
cmps
mov
fs
adc
ss
in
sbb
imul
cmp
sub
outs
int3
cmc
xchg
inc
popf
rcr
add
mov
cmps
push
jmp
aad
sbb
adc
xchg
mov
sub
icebp
cmp
jecxz
enter
jmp
cmps
or
pusha
(bad)
aas
pop
cmp
cmp
test
jnp
sahf
xchg
(bad)
dec
dec
sbb
push
mov
daa
xchg
ds
adc
adc
stos
adc
push
sbb
push
inc
clc
fiadd
fisubr
daa
nop
pop
in
clc
inc
mov
mov
mov
gs
hlt
mov
cmps
mov
sbb
mov
push
test
inc
inc
mov
jne
push
add
cmc
dec
clc
add
cmp
mov
ins
sbb
mov
into
int3
xor
not
int3
std
cmp
dec
inc
fcomp
push
jno
cmc
or
push
lods
or
call
xchg
std
xchg
int3
div
sbb
adc
(bad)
dec
test
loope
out
js
fbld
test
sahf
not
push
pop
cwde
test
cmp
loop
movs
(bad)
jp
jmp
(bad)
ds
pop
js
mov
dec
jg
xor
mov
adc
cmp
pop
call
adc
cli
ins
jae
pop
xor
add
stos
mov
sub
arpl
enter
cmc
jno
pop
jne
(bad)
jg
fdiv
fs
loope
in
pop
adc
xlat
mov
sahf
(bad)
repnz
mov
add
mov
adc
(bad)
lock
js
fwait
cwde
imul
cmp
jmp
dec
mov
inc
and
mov
lods
imul
jle
pop
add
adc
mov
iret
or
or
xchg
xchg
jmp
mov
bound
movs
pop
enter
test
mov
jmp
cli
fsubr
dec
mov
stos
adc
lock
mov
cs
(bad)
cmc
and
inc
push
sbb
xchg
imul
add
scas
mov
sub
sub
(bad)
bound
xor
inc
adc
pop
mov
in
outs
stos
push
sbb
mov
adc
imul
hlt
push
neg
bound
push
xchg
jmp
push
adc
jl
xchg
(bad)
mov
xchg
xchg
mov
call
pop
out
cli
cmp
es
(bad)
clc
and
mov
cs
stos
mov
sbb
loope
movs
aam
ins
dec
cmp
add
jae
lea
lea
pusha
dec
movs
adc
xchg
xchg
call
loop
leave
aam
icebp
jp
and
pop
in
mov
xor
fcomp
scas
movs
mov
mov
xor
fiadd
jnp
pop
stc
sbb
adc
jo
adc
cmp
bound
mov
leave
xor
lods
inc
repnz
mov
inc
les
sbb
pop
jl
daa
and
pop
add
test
add
outs
in
sbb
ror
cli
je
and
call
sbb
clc
arpl
cwde
sbb
mov
cli
mov
mov
xor
jl
sub
psadbw
shl
add
jae
adc
mov
mov
ror
jmp
test
aas
fadd
push
jne
scas
cmp
mov
pop
lods
(bad)
mov
xor
cmps
or
sti
sbb
inc
add
push
idiv
movs
inc
shl
lea
sti
imul
add
cmp
fnsave
scas
mov
js
pop
ds
hlt
aam
pop
jmp
pop
je
pusha
sbb
mov
ins
stc
cmc
adc
es
and
sysexit
cdq
sbb
sub
inc
push
cmp
push
daa
sbb
test
mov
cwde
mov
outs
outs
pop
fnsave
mov
mov
xchg
cdq
push
xor
in
sbb
fst
ficom
movs
icebp
ret
jmp
sbb
int3
mov
and
mov
push
or
xchg
lock
call
pop
add
and
push
adc
pushf
cmp
jnp
jg
xchg
push
xchg
mov
jp
inc
or
ret
fcom
(bad)
mov
pop
fld
(bad)
movs
mov
gs
xchg
mov
jmp
inc
pop
cwde
aam
out
pop
jmp
jnp
inc
jge
pop
cdq
sub
cmps
push
sbb
ror
scas
pop
sti
lea
(bad)
push
push
add
or
cwde
sub
xor
dec
jae
push
adc
or
cmps
sub
xchg
cmp
ret
ja
bound
cmps
inc
out
fldenv
mov
inc
cld
cmps
add
aad
test
cwde
mov
mov
and
mov
mov
cli
inc
inc
in
mov
fidiv
push
or
cld
(bad)
xor
sbb
push
je
xchg
mov
ds
add
sbb
es
jne
mov
mov
fmul
mov
sbb
(bad)
pushf
sub
push
jle
clc
mov
mov
sbb
xchg
mov
mov
adc
cmc
xchg
adc
jmp
xchg
outs
mov
pop
mov
push
out
stos
pop
pop
inc
ret
and
inc
mov
pop
das
xchg
cmp
seta
in
add
mov
ret
icebp
inc
dec
add
and
adc
sbb
pop
aaa
xchg
das
push
lahf
mov
or
repnz
mov
fs
inc
add
xlat
mov
mov
mov
test
pop
mov
mov
fs
nop
xor
(bad)
fdiv
rcr
push
cbw
fidiv
jmp
jmp
jb
aaa
or
jge
or
scas
je
pop
mov
mov
dec
jmp
push
and
inc
imul
jae
jp
mov
add
mov
jecxz
xchg
pop
fwait
cld
inc
fst
push
mov
test
mov
das
(bad)
hlt
xor
xchg
sbb
scas
add
xchg
aam
(bad)
fild
out
(bad)
test
fsubr
arpl
movs
sbb
sbb
mov
call
test
add
pop
and
adc
inc
sub
mov
ins
adc
or
and
sub
out
inc
mov
addr16
pop
mov
pop
in
mov
sar
(bad)
sbb
outs
test
inc
jb
mov
mov
push
not
dec
loope
lods
jns
push
dec
or
jne
inc
xchg
pop
dec
out
mov
test
xchg
mov
jb
fist
and
daa
adc
pop
pop
cmps
outs
add
mov
daa
sbb
xchg
mov
je
nop
dec
clc
mov
xchg
call
xchg
jl
sti
lods
test
mov
or
mov
jg
sub
stos
gs
xor
pop
xchg
sbb
push
or
mov
in
or
sub
and
or
(bad)
es
jbe
popa
js
pop
inc
mov
pushf
jne
push
jl
cmps
xchg
cmp
jecxz
(bad)
jge
dec
fdiv
xchg
ret
jp
jecxz
adc
stos
dec
push
int
xchg
push
call
mov
xchg
push
xchg
test
js
in
retf
cld
es
scas
cmp
gs
sub
(bad)
fadd
dec
jae
jge
or
mov
mov
mov
jno
inc
aaa
in
xor
dec
and
jb
pop
pop
mov
ins
mov
sahf
xor
es
xchg
call
push
(bad)
dec
push
sar
mov
sti
jno
loope
sub
inc
mov
movs
ret
dec
fnsave
mov
push
pop
repz
stos
int
dec
inc
lahf
popf
sub
dec
cmps
or
stos
dec
clc
add
mov
addr16
add
and
sbb
out
es
push
adc
jecxz
or
add
dec
imul
mov
mov
inc
add
ret
fdiv
ficom
jecxz
hlt
cmp
leave
fwait
push
and
mov
jns
cmps
cmc
js
mov
mov
fisubr
xchg
fwait
pop
fcomp
push
cmp
into
retf
fst
inc
ss
mov
inc
pop
je
(bad)
pop
iret
jmp
popf
repnz
inc
push
adc
jmp
mov
pop
cwde
xchg
std
(bad)
stos
sbb
fnstsw
push
arpl
cs
out
loopne
xchg
adc
fidivr
lea
mov
test
mov
cld
push
or
stc
enter
push
push
ja
scas
sub
js
jae
dec
xchg
cmps
xchg
sahf
dec
sub
adc
pop
les
jae
or
sahf
add
mov
jo
rcr
cld
aad
inc
mov
data16
jb
mov
xchg
outs
rcl
xor
mov
lods
xor
adc
test
dec
add
lods
jg
adc
sub
add
cmp
in
das
mov
add
dec
and
add
mov
popa
lahf
xchg
lods
and
sub
adc
icebp
bound
inc
fistp
xchg
push
into
mov
movs
pop
ret
imul
pop
popa
out
mov
repz
xchg
hlt
mov
dec
mov
iret
sub
push
xlat
(bad)
ds
add
mov
pop
and
fwait
fwait
mov
ss
jle
rcr
and
xor
or
cmc
xor
mov
cli
cmp
inc
shr
xchg
pop
mov
dec
test
mov
(bad)
mov
lods
cmp
sbb
test
rcl
jmp
jmp
into
push
and
xchg
aam
enter
xor
sbb
lods
inc
push
jae
mov
aam
std
fdivr
call
sub
pusha
jb
loop
leave
xor
pusha
je
pop
sub
mov
inc
push
jae
in
inc
shr
pop
in
gs
jmp
test
loope
loopne
inc
aaa
sti
aad
jp
push
call
inc
mov
idiv
xchg
clc
xchg
mov
adc
cmp
test
jnp
sbb
sub
add
mov
into
push
xchg
shl
ret
adc
cmp
cmc
inc
mov
stos
jp
mov
push
movs
mov
in
cmps
adc
bound
jg
popf
(bad)
pop
sbb
or
cmps
bound
cli
out
sub
sbb
xchg
mov
lea
add
aad
lods
(bad)
jns
lods
fadd
jl
dec
cmp
enter
pushf
push
add
jl
mov
ins
mov
xor
and
or
or
inc
xor
cdq
setnp
push
add
test
dec
hlt
fild
ret
inc
je
mov
test
fwait
fs
popf
or
(bad)
dec
scas
cwde
test
mov
mov
call
push
int
into
ss
into
int
lds
add
dec
jo
cmp
aam
and
inc
int
sub
push
add
cmp
push
ss
and
and
arpl
inc
movs
adc
mov
sub
cs
out
out
int3
clc
add
pop
jnp
lds
mov
call
shl
fnstenv
nop
xchg
stos
sbb
into
in
inc
mov
int
pop
sbb
lds
jbe
pop
mov
jnp
xchg
pop
or
leave
xor
(bad)
cmp
mov
pop
daa
in
outs
add
rol
arpl
ficom
mov
stos
xor
xor
int
in
lods
ret
push
rcr
jge
dec
loope
leave
arpl
mov
out
call
xchg
mov
movs
xchg
lea
iret
sar
outs
mov
jmp
clc
in
and
sbb
ins
shr
adc
xchg
mov
add
jecxz
mov
adc
push
aas
pop
and
out
push
(bad)
sub
jae
(bad)
or
pushf
or
mov
or
rcl
mov
cmp
mov
mov
mov
rcr
sub
xor
scas
sub
pop
retf
nop
in
mov
sub
and
jg
lea
jge
dec
cmp
mov
(bad)
int
sbb
jg
mov
movs
rol
push
sub
sbb
mov
jg
ror
xor
dec
dec
fwait
cmps
mov
(bad)
inc
icebp
outs
addr16
mov
push
movs
cmc
out
jmp
inc
sub
inc
mov
test
lods
xchg
mov
adc
fdiv
sub
pop
or
cld
cmp
js
cmovb
mov
mov
dec
sub
ins
retf
enter
imul
xor
push
xchg
adc
adc
push
es
xchg
xor
cs
call
sub
mov
fs
fstp
sahf
out
xchg
inc
cs
pushf
jp
ja
mov
jmp
cwde
pop
jg
movs
std
adc
test
pop
fnsave
push
add
(bad)
sub
sub
cmps
adc
daa
stc
inc
sbb
mov
out
je
inc
enter
cmp
inc
adc
cmp
push
inc
cwde
jbe
mov
pushf
sbb
cmp
leave
mov
ficom
pop
xchg
dec
cmc
mov
jmp
xchg
add
int3
pop
mov
mov
aaa
fsubr
sahf
ret
adc
fmul
mov
sbb
les
add
jl
sbb
mov
jno
mov
cmc
jge
in
jg
aad
sbb
aaa
(bad)
cmp
add
mov
imul
cmp
sbb
lods
mov
ins
pop
push
pop
sahf
jmp
and
inc
jae
jge
xchg
rol
dec
iret
mov
xchg
xchg
jmp
movs
and
pop
mov
(bad)
xor
leave
imul
and
cmp
movs
xor
retf
lods
push
sbb
add
out
add
push
fistp
imul
xchg
adc
xor
outs
adc
inc
mov
adc
call
shl
imul
call
adc
movs
out
or
inc
scas
sahf
sub
nop
rol
loope
push
dec
mov
adc
dec
(bad)
ret
jle
xor
pop
fild
dec
and
inc
cmp
mov
ror
in
sbb
sub
pop
gs
xchg
pop
rcr
ja
push
xor
xchg
mov
(bad)
les
hlt
jnp
ins
mov
pop
test
mov
and
xchg
data16
push
push
xchg
shl
stos
std
dec
add
xchg
inc
(bad)
imul
push
pop
int
enter
push
add
xor
jnp
inc
and
mov
mov
in
and
add
adc
sbb
or
pop
jne
jge
xchg
push
call
cmp
jmp
inc
fcomp
inc
cdq
jb
mov
mov
out
pop
push
in
cmps
xor
imul
les
cdq
scas
mul
stos
adc
cmps
sbb
jmp
mov
sub
mov
enter
pop
jecxz
sub
jge
mov
xor
pop
or
pop
inc
mov
sti
cmp
add
mov
sbb
inc
jl
inc
fisttp
mov
push
test
sub
fs
stos
test
xor
mov
test
push
pop
sub
fnsave
inc
and
call
jo
xchg
leave
scas
adc
(bad)
ins
fucomi
jo
loope
outs
add
ret
and
pusha
jo
xchg
and
sub
aaa
jg
cdq
mov
leave
scas
mov
and
mov
pop
test
test
jmp
mul
(bad)
call
or
out
cdq
xor
popf
ficom
push
imul
or
test
sub
imul
push
pop
push
dec
sbb
jge
jmp
out
push
add
add
xchg
test
inc
mov
or
pop
mov
inc
rol
or
repnz
blci
mov
cmp
retf
sar
inc
imul
addr16
jae
aaa
push
or
push
ja
pop
inc
or
scas
cmp
call
lea
add
sub
dec
pop
ficomp
add
dec
mov
mov
xor
add
cmps
cmps
xor
add
arpl
scas
std
pusha
mov
mov
mov
les
mov
js
mov
retf
les
mov
push
retf
das
in
adc
or
fadd
pop
iret
push
sbb
dec
cdq
sub
cmp
inc
mov
cmp
inc
pushf
retf
out
outs
inc
fs
inc
and
sub
fcomp
fld
sbb
ss
mov
mov
std
iret
mov
nop
fdiv
vmwrite
ins
xchg
ror
pop
repnz
xchg
inc
test
jp
mov
ror
std
hlt
popa
pop
lods
cmps
jb
fs
xor
pop
(bad)
cmc
rcl
push
sbb
rcl
jl
imul
pop
dec
in
les
sbb
stc
arpl
adc
cmp
push
jb
mov
scas
xor
dec
push
scas
lsl
mov
dec
test
test
jno
scas
sub
mov
test
test
and
fwait
imul
jle
xchg
mov
and
movs
sub
dec
int
and
aad
rcr
jb
arpl
arpl
mov
(bad)
int3
sbb
mov
mov
jp
jbe
cmps
cmp
pop
sbb
mov
retf
jno
dec
push
sub
test
and
fchs
cs
dec
jle
fsubr
lock
leave
pop
cmps
out
inc
enter
repz
mov
jp
mov
add
mov
mov
sti
aas
jg
fadd
dec
lods
sub
jecxz
out
sbb
inc
test
popa
das
xchg
push
out
ror
mov
mov
sbb
cmp
sub
test
push
mov
inc
movs
(bad)
cmps
ins
ds
aas
ffreep
sti
push
iret
(bad)
sbb
push
ins
mov
inc
test
popf
dec
repz
sub
mov
mov
sub
xchg
test
lock
xchg
sbb
dec
jmp
sbb
xchg
add
aas
xchg
push
bound
jne
push
jmp
sbb
(bad)
mov
pusha
push
push
inc
or
stos
cmp
inc
fwait
jp
mov
add
or
shl
pop
xchg
mov
jns
ins
xchg
xchg
(bad)
inc
out
cwde
adc
mov
sbb
in
push
xchg
push
mov
test
pop
xchg
ret
add
cli
mov
les
xchg
mov
jmp
lods
cmp
call
mov
dec
add
icebp
sar
pushf
jmp
dec
push
js
cmp
cmp
and
imul
push
repz
loop
test
or
jp
scas
push
movs
rol
in
xchg
inc
(bad)
mov
hlt
aaa
nop
dec
mov
ror
xchg
ficom
cmps
retf
test
lea
xor
dec
sbb
push
rcl
push
push
mov
mov
std
inc
jmp
inc
sub
inc
sub
sbb
push
shl
dec
ror
pop
mov
mov
pop
retf
out
sti
inc
mov
jl
outs
add
pop
(bad)
(bad)
(bad)
jae
call
pop
sub
stc
mov
jecxz
mov
stos
pop
jno
nop
xchg
daa
inc
aam
mov
mov
fidivr
inc
dec
repz
jp
dec
call
dec
lahf
mov
xor
repnz
(bad)
and
inc
xor
stos
inc
fwait
and
push
adc
ins
xor
sti
sub
ss
aad
and
imul
out
mov
mov
xchg
clc
bound
rcr
mov
inc
mov
cmc
and
xlat
xlat
jmp
fadd
mov
imul
or
fidivr
pop
pop
pusha
mov
jno
jle
mov
cmps
(bad)
fsubrp
das
ror
dec
dec
adc
sbb
cmp
pusha
lods
push
pop
mov
cmps
test
iret
test
sbb
inc
pop
pop
cmps
jb
xchg
jns
rcl
fsub
xchg
xchg
jle
popf
cdq
(bad)
dec
lea
mov
sub
(bad)
jl
fwait
mov
pop
pop
or
(bad)
std
data16
pop
pop
inc
call
pop
cmps
retf
or
std
jg
repnz
pop
les
syscall
daa
add
leave
dec
jb
or
scas
or
mov
outs
adc
out
cwde
(bad)
(bad)
fistp
mov
in
out
jbe
mov
test
mov
inc
scas
mov
out
jecxz
dec
pop
add
pop
es
call
fs
inc
mov
movs
mov
jge
int3
sub
rcl
or
and
inc
das
push
and
outs
pushf
dec
push
mov
je
mov
and
std
rcl
xlat
bound
mov
arpl
mov
ss
add
mov
jne
mov
js
(bad)
cmps
iret
stc
pop
gs
sti
dec
pop
push
leave
mov
cmp
aaa
jg
pusha
les
push
stos
push
and
cmps
mov
(bad)
fcmovne
daa
mov
jo
je
out
sub
pusha
or
pushf
and
adc
dec
je
jnp
movs
adc
mov
or
in
inc
xchg
mov
addr16
push
popf
sub
vpunpckhwd
cdq
jb
(bad)
push
(bad)
in
or
jns
mov
movs
cmp
fisttp
push
enter
sub
mov
loopne
fcomp
add
pop
cmps
or
idiv
and
xchg
xchg
shl
xchg
ror
mov
push
adc
mov
cmp
dec
push
(bad)
dec
dec
xchg
movs
mov
push
es
neg
pushaw
jns
pop
mov
in
xchg
mov
mov
(bad)
jne
mov
inc
fs
(bad)
adc
cmp
mov
ja
sub
aaa
mov
repz
add
xor
inc
lods
pushf
rcr
ret
(bad)
retf
inc
jbe
cmp
inc
ins
pusha
and
lods
and
sar
mov
inc
mov
cmp
push
inc
jmp
neg
inc
test
cmp
in
adc
icebp
test
(bad)
ins
movs
test
pop
test
std
xor
cld
inc
xchg
cwde
pop
lock
out
das
or
into
(bad)
pop
loope
jbe
ins
fwait
addr16
je
inc
sbb
leave
aas
pop
cld
jns
in
das
leave
mov
add
xor
add
fnstsw
ret
mov
stos
xor
xor
imul
pusha
add
pop
dec
int3
(bad)
popf
fimul
arpl
shr
aad
dec
inc
jmp
or
cmp
addr16
pop
sbb
mov
dec
inc
cld
dec
sub
mov
xlat
dec
fwait
loop
mov
add
xor
pop
jo
stos
daa
xchg
jo
dec
push
stos
adc
mov
push
(bad)
rcl
les
jns
outs
loopne
fisub
mov
push
in
push
sub
mov
in
test
fwait
xor
lods
retf
inc
cmp
sbb
imul
data16
add
cmp
mov
imul
mov
int
loop
pop
mov
and
jne
mov
inc
jns
push
pop
mov
cwde
imul
mov
push
and
retf
outs
loop
mov
mov
jg
mov
cmps
sub
sbb
lods
inc
jp
mov
loop
loope
dec
sbb
mov
inc
sub
xchg
(bad)
inc
retf
sbb
sub
push
or
xchg
xor
test
pop
jno
add
and
pop
outs
add
inc
push
movs
pop
add
mov
cwde
out
test
xchg
rcl
inc
dec
mov
fnsave
mov
push
xchg
les
cli
pushf
mov
(bad)
arpl
xchg
mov
sbb
add
stos
je
je
inc
pop
aaa
leave
xchg
ret
aaa
je
pop
shr
pop
xchg
push
stos
mov
(bad)
cmp
add
push
sbb
sbb
fldcw
dec
sbb
inc
aaa
jno
(bad)
xchg
add
inc
jns
jg
mov
outs
xchg
rol
hlt
repnz
test
inc
mov
jmp
xor
repnz
(bad)
fs
cmps
inc
sti
ja
dec
pop
fisttp
arpl
dec
mov
push
cmp
test
lods
push
push
stos
je
mov
mov
inc
dec
push
dec
stc
xor
pushf
das
mov
icebp
jp
fimul
cmp
mov
stc
jne
cmp
iret
in
xchg
retf
inc
dec
pop
xchg
xor
xchg
xchg
sar
dec
aam
mov
fcomp
scas
in
or
mov
(bad)
mov
icebp
dec
jl
cdq
dec
aam
leave
dec
sub
mov
pop
icebp
or
jl
mov
cmp
mov
mov
cmp
out
dec
sti
shl
into
push
push
jb
inc
inc
pop
pop
xchg
aaa
lods
jbe
push
inc
movs
jl
into
xor
lahf
and
cmp
call
jl
jg
pop
mov
cmp
icebp
stos
dec
icebp
in
push
out
xrelease
hlt
adc
push
fcom
push
mov
mov
mov
cdq
dec
adc
push
(bad)
sub
retf
inc
push
cmp
jns
jne
jno
les
jmp
add
les
pop
sbb
cmp
adc
dec
adc
dec
in
xchg
adc
inc
sar
pop
stos
retf
jl
jle
pop
ret
js
ret
xchg
mov
or
out
sub
stc
sbb
inc
sbb
repnz
repz
jg
stos
pushf
data16
outs
scas
push
add
mov
lods
and
pop
mov
jae
or
sbb
mov
fs
inc
adc
xor
mov
inc
mov
addr16
xchg
xor
es
loop
jmp
jl
mov
jp
shl
and
(bad)
icebp
adc
ins
lea
gs
lahf
xchg
mov
pop
ret
in
jmp
sub
fdiv
lods
jo
push
pusha
sub
xchg
or
push
stos
inc
sahf
out
jo
xor
ss
fs
gs
ins
pop
lahf
xor
mov
out
cmps
sbb
push
repz
mov
loop
sub
cli
dec
xchg
js
cmps
cmps
sahf
xor
fsubrp
neg
cmc
gs
stos
test
retf
outs
std
push
push
adc
(bad)
fdiv
xor
xchg
imul
pushf
lahf
call
cmp
jae
jecxz
xor
xor
add
dec
mov
mov
clc
jno
or
lock
mov
in
loopne
xchg
xor
add
jmp
div
jp
test
jecxz
fdivr
xchg
popf
xchg
and
sbb
fldcw
pop
enter
leave
(bad)
in
and
inc
push
jle
mov
cmp
je
cdq
mov
sbb
in
inc
into
stc
sub
and
sub
pop
nop
das
cmps
jae
test
push
scas
xor
xchg
mov
sar
add
push
data16
rcr
leave
mov
dec
enter
retf
jl
mov
jmp
mov
mov
fisubr
mov
(bad)
xor
daa
fidiv
je
jg
cmp
arpl
mov
xchg
sub
repz
in
lds
pop
xor
add
pop
adc
pop
fwait
sbb
pop
jns
jge
lea
test
pop
pushf
not
jl
and
and
nop
fdivr
into
mov
sbb
fldenv
clc
mov
inc
mov
stc
xchg
popf
mov
push
retf
dec
rcl
test
sub
sub
pop
jno
call
cwde
jecxz
xchg
test
pop
pop
or
add
mov
add
sub
rcl
js
gs
push
popf
(bad)
(bad)
inc
mov
mov
xchg
adc
mov
sbb
les
xlat
(bad)
dec
ja
fwait
gs
retf
push
out
faddp
pop
nop
cmp
popf
cmp
mov
and
lahf
xchg
nop
sbb
call
dec
je
out
sbb
xor
mov
shl
pop
dec
mov
sbb
add
mov
out
popa
inc
test
nop
jmp
push
xlat
loop
push
lds
mov
ins
inc
xchg
jmp
loop
cmp
sub
cmp
and
jl
fnstenv
sbb
push
and
xchg
mov
in
push
fmulp
and
sbb
xor
push
xor
in
push
fbstp
xchg
or
mov
or
push
cmp
mov
or
cs
cdq
dec
xchg
xchg
jmp
aad
mul
dec
inc
mov
hlt
out
retf
fstp
mov
ins
jecxz
neg
daa
jmp
lods
dec
into
and
dec
cmps
sub
test
dec
mov
into
push
std
add
jecxz
jno
pop
fstp
imul
rol
mov
dec
mov
mov
int
xor
inc
inc
mov
pusha
call
popf
jbe
stc
std
hlt
je
jle
sub
sbb
fdivp
lods
loop
js
scas
cdq
jbe
pop
imul
pop
cmp
or
mov
outs
mov
mov
sahf
dec
sub
sbb
in
push
test
push
inc
add
mov
jl
and
inc
cwde
ja
lahf
and
lods
dec
xor
jle
mov
daa
xchg
mov
fcomp
fwait
jle
mov
mov
and
cmc
mov
scas
shr
ss
and
(bad)
stc
fdivrp
gs
scas
dec
not
xor
xor
cld
cmp
addr16
inc
pop
pop
icebp
retf
aas
push
xlat
pop
stc
jmp
xchg
iret
pop
inc
inc
sub
sbb
cmp
jg
gs
lahf
and
mov
cmp
lods
sbb
push
dec
mov
cmp
cwde
push
pop
(bad)
out
pop
sti
jne
mov
push
cmp
icebp
stc
stc
call
test
dec
in
or
or
add
sub
ficomp
js
mov
jae
cdq
mov
inc
std
rol
cld
jae
je
out
and
ss
pop
leave
add
imul
pop
inc
nop
dec
jle
stos
test
inc
pop
push
or
pusha
cmp
(bad)
pop
fisubr
mov
or
retf
cmc
push
in
mov
(bad)
retf
sbb
xchg
cmp
mov
in
push
out
sbb
push
rcl
jmp
clc
sbb
push
fmul
sbb
push
jmp
ja
aad
mov
or
inc
or
sbb
dec
dec
(bad)
dec
dec
xchg
sub
xchg
mov
or
inc
fild
jmp
push
fcom
cwde
hlt
pusha
sub
inc
ret
mov
icebp
cmp
into
sbb
inc
inc
call
imul
jmp
dec
std
xor
in
jge
adc
jp
daa
imul
sub
enter
jle
test
and
adc
push
test
mov
stos
or
pop
and
lock
stos
add
gs
mov
cli
xchg
std
push
shl
or
xchg
jp
mov
out
pop
mov
inc
mov
mov
fst
pop
pop
in
cmps
xor
inc
in
dec
ds
hlt
mov
push
ret
inc
js
pop
(bad)
jle
gs
outs
call
pop
ror
inc
and
or
add
sbb
push
mov
xlat
push
inc
(bad)
jns
scas
push
data16
std
push
and
cmps
sbb
gs
mov
inc
xchg
pushf
dec
loopne
push
stc
cmps
std
jae
sbb
adc
mov
cmps
jmp
mov
cmp
pop
jecxz
hlt
jl
xor
adc
daa
push
mov
pop
scas
addr16
add
daa
sti
dec
cmp
pusha
mov
iret
pop
icebp
sbb
push
add
bound
fs
(bad)
out
mov
jbe
pushf
sub
mov
pop
loope
loopne
hlt
and
jmp
mov
data16
mov
mov
clc
jo
lahf
mov
sbb
cmp
(bad)
call
add
pop
push
cmp
push
cmp
mov
sbb
ins
call
sub
loopne
push
jg
cmc
sbb
add
add
ins
dec
stos
push
pop
test
mov
in
repnz
daa
mov
pop
inc
lahf
jbe
movs
ret
fsub
push
idiv
xchg
xor
jmp
hlt
pusha
xor
stc
bound
xchg
xor
dec
std
or
xor
in
retf
inc
icebp
xor
sbb
cs
cdq
test
or
lods
dec
fld
bound
cmc
pop
jae
cmp
push
adc
add
(bad)
test
xchg
xor
je
jle
vminss
movs
push
jbe
dec
imul
dec
pop
movs
nop
mov
add
fistp
sahf
mov
jne
push
pop
push
fsub
shl
add
pop
lahf
cmp
mov
push
pop
mov
test
inc
sbb
mov
cld
and
pop
int
test
sub
stos
sbb
clc
jmp
(bad)
inc
pop
xchg
repnz
ret
jmp
and
jl
adc
and
jg
jecxz
lods
adc
jmp
pop
jge
cdq
ja
pop
call
fdivr
data16
add
imul
add
jmp
mov
sub
int3
(bad)
(bad)
aad
sahf
cli
dec
push
push
inc
out
sub
push
sub
setne
sti
jb
stos
or
adc
movs
mov
cmp
mov
fistp
outs
jge
jnp
xchg
sahf
and
into
loope
(bad)
mov
add
(bad)
lock
scas
arpl
(bad)
mov
fisubr
mov
dec
inc
pop
icebp
ror
jge
cmp
xor
bound
mov
mov
loop
jns
cmc
add
push
retf
push
xor
and
sbb
fisttp
adc
sar
and
pushf
xor
push
cmp
mov
mov
out
rol
jmp
pop
in
popf
cmp
rol
xchg
xlat
test
mov
push
hlt
push
cld
pop
or
cld
mov
imul
cmps
outs
sbb
jbe
xchg
inc
jecxz
js
or
cmp
sub
sbb
xor
imul
add
ror
(bad)
inc
sub
ror
push
test
retf
inc
mov
xchg
dec
ret
mov
push
clc
loopne
xor
or
xchg
mov
xchg
sbb
cld
(bad)
mov
shl
mov
lods
xor
adc
jecxz
pop
pop
and
push
cmp
out
xchg
lods
xor
aam
cli
mov
mov
jns
pop
sbb
aas
adc
mov
jae
(bad)
mov
rep
mov
adc
gs
mov
add
test
jecxz
xlat
dec
mov
mov
stos
and
mov
xor
mov
stos
(bad)
fcomp
jecxz
dec
xchg
dec
std
xor
add
(bad)
pop
inc
cmp
jno
push
xchg
add
adc
fwait
xor
leave
push
adc
iret
add
lahf
aaa
test
fisubr
mov
push
movs
mov
in
sbb
rcr
push
pop
test
xchg
test
mov
jb
loope
xor
mov
cmps
mov
jp
test
xchg
cmp
loop
inc
pop
xchg
scas
ja
inc
(bad)
adc
sti
jecxz
lds
daa
dec
es
push
mov
popf
rcr
movs
enter
inc
fdivr
xor
jge
mov
xchg
pop
fsub
mov
push
test
push
fsubr
mov
leave
push
enter
movs
mov
xor
pop
xchg
call
nop
stos
lock
aam
lock
fild
mov
push
in
lds
pop
push
rcl
stc
js
and
inc
fwait
sub
mov
(bad)
mov
rcl
pop
xor
adc
sub
sbb
inc
pop
mov
xchg
dec
push
xchg
jnp
shl
jmp
pop
sti
into
stc
push
mov
test
retf
xor
cmp
fisttp
lods
movs
std
pop
and
shl
mov
cli
sub
dec
dec
mov
cmp
pop
fs
jno
pop
cwde
mov
mov
cmps
pop
loope
jno
lea
je
fdivr
xor
push
lahf
and
adc
inc
ja
push
push
(bad)
fsubr
out
out
sub
fldenv
jp
arpl
cmp
xchg
jb
fnstsw
mov
lods
bound
xchg
mov
cs
clc
pusha
adc
mov
dec
cmp
loope
icebp
je
dec
push
pop
pop
scas
sub
sub
test
data16
sub
inc
inc
ds
add
mov
mov
iret
inc
inc
lahf
or
xchg
mov
xchg
cmps
mov
clc
imul
ret
jp
jmp
in
hlt
test
mov
pop
add
mov
cs
iret
repnz
cmc
test
pop
mov
scas
dec
ds
retf
sub
ins
push
and
cmps
nop
xchg
sbb
push
xchg
fsubr
and
bound
arpl
push
cmp
clc
add
dec
and
in
xchg
inc
xchg
fstp
jl
inc
mov
repz
les
mov
push
into
nop
jl
retf
std
mov
in
je
cdq
(bad)
out
dec
test
fwait
cmps
mov
and
retf
aad
push
mov
inc
into
jbe
dec
cmp
aad
std
arpl
sar
jbe
jb
dec
movs
mov
int3
push
int
add
xor
stos
add
adc
add
test
push
xchg
mov
push
shl
inc
xchg
inc
shl
fiadd
cmps
dec
xchg
in
pop
std
mov
xchg
(bad)
rol
or
(bad)
and
in
sub
xchg
imul
mov
or
arpl
les
pop
(bad)
aad
mov
outs
dec
addr16
inc
jae
adc
lods
add
rcr
xchg
sbb
mov
int
mov
ror
fdivr
rcl
test
fwait
(bad)
std
mov
cs
out
push
jmp
hlt
cs
xchg
add
mov
hlt
fstp
jge
mov
sub
push
jecxz
dec
or
xchg
push
or
xchg
rol
iret
cmp
xor
cmp
or
pop
push
test
pop
xchg
dec
mov
push
leave
(bad)
rol
ins
mov
and
out
adc
in
and
call
retf
inc
inc
mov
sar
ret
dec
mov
lods
add
mov
and
mov
xor
inc
mov
or
sbb
pop
dec
ret
push
mov
leave
pop
adc
jae
(bad)
(bad)
jne
sub
jecxz
xchg
retf
iret
pop
lds
inc
adc
xchg
xchg
mov
sub
(bad)
popf
push
fidiv
mov
jmp
push
push
test
iret
not
jns
addr16
sub
test
pop
inc
xchg
movs
fwait
lahf
adc
mov
pushf
fadd
inc
xor
and
cmp
jae
add
scas
sbb
xchg
pop
(bad)
sub
test
mov
imul
aam
and
pop
icebp
mov
pop
mov
pushf
sbb
ret
lock
pop
mov
jnp
pop
fisubr
pop
pop
(bad)
in
out
push
into
push
arpl
outs
add
scas
xchg
mov
out
iret
movs
out
jne
jp
jecxz
aaa
push
lods
imul
cmp
sbb
push
add
in
cmp
into
pop
lock
and
mov
fwait
dec
repnz
adc
hlt
cmp
pushf
cmp
fnsave
mov
in
xor
adc
xchg
mov
js
xchg
sub
test
sbb
mov
std
ins
jmp
jb
pop
or
cmp
cwde
pop
xchg
xor
sbb
mov
add
into
mov
add
out
repz
ds
inc
cmc
pop
push
arpl
inc
xor
jbe
xlat
mov
cmps
cwde
(bad)
sbb
mov
xchg
scas
fiadd
out
mov
ins
out
sbb
shl
and
inc
adc
js
jno
outs
test
test
iret
aam
xor
fs
sub
imul
jmp
sbb
lods
sbb
xchg
aam
sub
out
call
dec
jns
push
jmp
(bad)
imul
mov
stos
lods
movs
rcl
lahf
sahf
js
hlt
cmc
mov
in
dec
sahf
(bad)
dec
jmp
ror
jg
aaa
or
test
dec
jge
inc
pop
popa
mov
lds
loope
or
sbb
inc
ins
fs
jmp
mov
dec
mov
pop
xchg
retf
inc
pop
inc
in
jmp
jle
adc
and
dec
pushf
cld
test
and
cmps
repz
fnstsw
in
sahf
scas
xor
fninit
repnz
(bad)
pop
pusha
(bad)
dec
in
push
and
retf
dec
(bad)
adc
adc
and
mov
mov
ret
fwait
retf
add
(bad)
add
push
xor
ds
adc
mov
loopne
in
xchg
mov
pop
add
mov
fcomp
inc
test
mov
push
call
dec
icebp
mov
scas
sbb
movs
mov
fsincos
mov
lds
fwait
jp
outs
mov
pop
dec
in
in
inc
xchg
add
cmp
jne
pop
call
popa
int3
aam
xchg
into
jae
pop
add
xor
and
mov
outs
cmps
fwait
mov
lahf
fadd
loopne
jno
mov
(bad)
xchg
cmp
out
mov
shl
mov
call
out
cmps
adc
(bad)
hlt
mov
out
pop
xchg
test
int3
dec
into
xor
or
(bad)
sbb
lods
sub
xchg
xor
pop
fwait
ret
dec
add
outs
in
cmp
jecxz
push
inc
and
sub
mov
neg
pushf
pop
inc
aam
inc
popf
stos
mov
in
add
pop
jl
das
faddp
enter
call
cmps
lahf
jne
sbb
mov
lods
add
int3
aam
lods
lock
xchg
scas
aaa
call
cmc
mov
jnp
mov
xor
xchg
sbb
fisubr
push
adc
add
push
bndstx
sbb
pop
scas
mov
addr16
int3
jecxz
mov
pushfw
pusha
dec
bound
fwait
hlt
popf
push
sar
dec
or
shl
scas
xlat
and
arpl
(bad)
mov
inc
xchg
sti
xchg
lock
jp
test
dec
or
sub
daa
inc
or
fidivr
and
les
gs
fidivr
fcmovne
dec
push
push
and
sbb
jo
pusha
lods
or
jnp
push
or
in
xor
test
retf
(bad)
dec
gs
shr
lds
call
shl
xchg
xchg
or
adc
out
aam
dec
lea
dec
push
ss
pop
jmp
gs
ss
xchg
xchg
mov
fdivr
add
hlt
bound
inc
iret
sub
or
movsx
aad
inc
xchg
xchg
dec
push
lahf
mov
sub
push
dec
cmp
jl
jle
push
cwde
jp
mov
mov
mov
stos
es
test
mov
outs
mov
lea
push
mov
xor
outs
test
push
dec
(bad)
repz
dec
xor
jbe
mov
inc
out
mov
neg
push
and
cmp
sbb
xor
jg
lahf
or
mov
sbb
and
cli
mov
test
cmp
aas
add
dec
hlt
xchg
inc
sub
(bad)
xchg
or
push
nop
sahf
mov
daa
cmps
imul
cmc
daa
xor
lds
in
test
(bad)
pop
fmul
add
mov
test
iret
sbb
jno
and
jbe
adc
mov
cld
inc
shr
xor
xor
sub
lods
adc
ficom
test
into
adc
mov
sti
(bad)
jmp
or
or
loop
movs
sar
(bad)
jmp
xchg
cmps
test
fisttp
sub
pop
sub
imul
inc
sahf
inc
push
imul
mov
ret
clc
add
xlat
and
pop
inc
jecxz
add
or
ja
sbb
lods
sub
fwait
scas
sbb
in
mov
out
pop
pop
lods
dec
repz
inc
jecxz
in
cld
stos
pop
sub
icebp
lahf
sub
pusha
test
mov
pop
xchg
fwait
xchg
add
(bad)
cli
test
mov
xchg
fsubr
dec
cmps
or
push
lea
imul
test
dec
inc
jbe
lds
push
loopne
jo
sub
mov
stos
jb
pop
data16
lea
pop
mov
test
and
and
idiv
aad
inc
popa
cdq
dec
fadd
fidivr
loopne
movs
jbe
cwde
fs
fisub
repnz
out
out
push
inc
into
fdiv
nop
mov
pop
aad
sub
cmc
repz
and
jge
cdq
sub
popf
push
ss
fwait
movs
mov
add
aam
jmp
push
jp
adc
bound
sbb
xor
in
cmps
pop
mov
ins
jns
dec
les
mov
adc
stos
xchg
add
fcmovu
sbb
push
add
xor
mov
mov
clc
sbb
retf
sub
add
and
imul
mov
test
sub
mov
rol
xor
lahf
adc
and
push
lahf
adc
stos
mov
cmp
or
(bad)
sti
and
fs
jg
scas
mov
std
out
(bad)
xchg
pop
pop
mov
xchg
add
gs
stos
mov
inc
loopne
xchg
sbb
rcr
movs
call
mov
inc
cmp
inc
jl
dec
mov
dec
aas
jne
movs
xchg
xchg
cmp
push
in
movs
mov
push
cmp
xor
add
xor
outs
pop
test
adc
adc
xchg
mov
inc
ret
std
xchg
and
inc
pop
test
xchg
clc
jno
retf
mov
popf
out
or
mov
test
add
mov
mov
push
add
shr
(bad)
jge
stos
mov
cmp
in
jge
add
inc
cmps
or
gs
movs
nop
mov
and
data16
push
sar
fs
cmp
cmp
pop
je
mov
jo
mov
push
in
fdivr
sahf
mov
adc
shl
pop
push
inc
test
cwde
les
mov
xor
lock
mov
inc
mov
mov
and
cmc
xchg
int3
fstp
sahf
lea
dec
rcl
cmc
jmp
dec
lahf
or
jl
imul
xchg
lahf
leave
jo
cld
inc
dec
or
jmp
push
mov
cmc
inc
push
push
dec
(bad)
pop
jle
test
imul
out
stos
mov
gs
in
mov
mov
lahf
push
xchg
dec
mov
mov
ror
sbb
call
xor
vorps
lea
js
dec
jle
xchg
inc
jmp
push
es
or
pop
cmp
inc
push
fst
xor
mov
ret
sbb
sbb
ror
mov
(bad)
xchg
inc
or
(bad)
stos
ss
imul
stos
xchg
and
jmp
lods
ret
rcr
out
cdq
fs
outs
call
shr
jl
test
imul
test
(bad)
call
add
mov
push
cmp
cmp
jns
add
sub
mov
jno
fld
rcr
and
inc
jb
fwait
xor
mov
popf
fs
add
test
sti
fwait
mov
push
xchg
sar
xchg
mov
repz
(bad)
or
popa
in
jo
pop
xor
outs
mov
test
call
or
sbb
cmp
jns
lahf
ins
daa
aam
jns
stos
stc
sbb
imul
push
inc
mov
jns
mul
and
retf
mov
in
adc
mov
(bad)
jecxz
fcomp
cmp
mov
xor
rcl
jnp
pop
jle
pop
lods
sbb
outs
cli
ins
pop
push
stos
xchg
mov
or
enter
addr16
or
sbb
pop
imul
mov
cli
int3
mov
out
inc
ins
mov
cmp
loope
je
jmp
movs
adc
sbb
cmps
add
mov
and
cli
repnz
ds
xchg
mov
sub
pop
in
lock
ja
pop
test
pop
clc
dec
add
mov
outs
fsubr
arpl
inc
les
jl
adc
inc
imul
lods
test
jp
into
mov
nop
jmp
je
outs
retf
cmp
ret
push
retf
sub
inc
xchg
inc
arpl
fld
sub
dec
retf
sbb
iret
fdiv
imul
and
cs
inc
sub
lods
mov
retf
imul
and
pop
cmp
xor
inc
ja
scas
sbb
pop
repnz
inc
pushf
je
mov
inc
mov
inc
loopne
pushf
and
fld
and
mov
jnp
out
adc
popf
inc
and
repz
sub
pop
mul
jns
mov
mov
mov
xchg
lods
jbe
push
mov
retf
adc
or
pop
jp
scas
inc
ds
cmps
xchg
fwait
(bad)
pop
push
fistp
int
movs
aam
imul
outs
add
pop
push
fimul
xor
sub
xchg
xchg
addps
mov
cmp
pop
pop
lea
mov
push
mov
xchg
retf
xor
inc
cdq
call
mov
shl
stos
mov
popf
push
shr
sbb
shr
leave
jb
add
or
sub
lods
push
dec
jmp
ins
fst
mov
push
push
push
aas
int
cmp
fs
dec
js
or
dec
push
lahf
mov
ins
and
imul
fadd
lock
jo
dec
shl
push
mov
mov
dec
jl
cmps
mov
lods
(bad)
inc
outs
jecxz
outs
lds
adc
aam
fstp
push
sbb
or
(bad)
jae
pop
pushf
retf
enter
xlat
imul
xor
es
and
add
sub
js
(bad)
sbb
lods
and
pop
fld
inc
fistp
pop
jg
dec
jmp
bnd
int3
out
shl
push
(bad)
std
out
xor
dec
cli
mov
inc
push
in
cwde
stos
add
add
xor
fmul
jne
inc
inc
or
inc
mov
lahf
xchg
call
and
pop
out
adc
xor
jne
pop
and
pop
pop
dec
popa
sti
test
inc
cmp
nop
dec
neg
mov
sbb
mov
repnz
jno
cmps
test
push
mov
nop
clc
in
fs
rcr
pop
sub
test
gs
adc
xor
bound
ror
jmp
inc
fs
mov
jno
mov
jnp
mov
sbb
and
xchg
lock
lahf
lea
inc
push
jb
das
out
loopne
cdq
cmc
jecxz
in
call
xchg
push
dec
fiadd
xchg
rcr
test
lds
pop
adc
jmp
dec
sub
lods
adc
stc
jbe
popa
jmp
cmp
loope
adc
sbb
lahf
pop
mov
mov
dec
imul
cmp
(bad)
push
mov
jnp
inc
add
cwde
das
xlat
cdq
fnstcw
out
or
mov
and
repz
je
mov
sbb
xchg
add
aam
inc
push
pop
add
enter
js
addr16
xchg
pop
pop
pop
in
mov
(bad)
shl
mov
sub
pusha
stos
or
pop
fwait
dec
and
push
pop
mov
adc
call
or
sahf
outs
mov
mov
pop
(bad)
(bad)
lock
pop
mov
test
lods
rcl
stos
out
inc
mov
aam
push
sub
call
inc
push
dec
fwait
addr16
jg
inc
pop
inc
xchg
test
imul
js
add
sub
add
(bad)
jp
mov
inc
mov
not
aaa
sbb
cli
mov
xlat
outs
jns
xor
fbld
test
mov
push
fcmovb
mov
(bad)
call
mov
shr
xor
add
shr
cld
push
jge
cmp
clc
aaa
sbb
xchg
nop
xor
ficomp
lahf
cmc
cmp
pop
add
sub
xor
jecxz
(bad)
and
sbb
movs
jae
xchg
push
bound
cmp
fild
icebp
push
jns
movs
sub
rol
loop
mov
(bad)
clc
jle
lea
mov
mov
mov
loopne
mov
inc
jmp
dec
in
mov
or
cli
shl
fst
push
add
in
mov
mov
(bad)
cmp
push
and
aaa
sub
xor
cmp
ins
call
cmp
outs
mov
adc
fwait
test
pop
(bad)
loopne
(bad)
jp
push
ficom
(bad)
dec
jmp
mov
(bad)
or
inc
repnz
aam
lods
bound
test
mov
mov
mov
rcl
inc
sub
(bad)
and
sub
sbb
cmp
xchg
xor
test
push
mov
and
push
pop
jg
cmp
arpl
movs
dec
inc
shl
jge
scas
mov
sub
call
fnstsw
ja
js
call
fisub
cmps
xor
popa
lea
add
add
jmp
imul
sti
dec
push
mov
dec
nop
gs
cmp
xor
test
jo
pop
jge
inc
mov
pusha
fs
je
jg
cmp
stc
repnz
sbb
and
call
pop
mov
jl
xchg
faddp
cmps
das
shr
and
lds
jecxz
mov
lahf
inc
aaa
(bad)
aam
add
pusha
idiv
cwde
jmp
sahf
sahf
xchg
adc
or
mov
inc
into
or
push
jmp
sbb
or
sub
pop
add
mov
sti
dec
jmp
pop
pop
inc
inc
loopne
xor
pop
in
sbb
mov
push
cdq
mov
outs
inc
cmp
icebp
xchg
ds
in
popa
retf
inc
jae
mov
pop
mov
pop
push
mov
mov
jbe
out
out
adc
out
les
mov
inc
fisubr
dec
sub
repnz
mul
enter
bound
dec
push
push
xchg
xchg
add
shl
add
mov
sub
sbb
or
lea
cld
stc
test
int3
cmc
add
mov
inc
mov
xchg
cmp
sbb
cs
mov
inc
idiv
mov
popf
xor
add
mul
inc
rol
cmp
sbb
es
xchg
fbstp
std
daa
pushf
rcl
stc
cmp
sub
stos
push
xchg
or
xchg
test
adc
push
fsub
idiv
inc
cwde
pop
rcr
or
(bad)
xchg
in
xor
in
or
dec
add
fisubr
stos
call
mov
xchg
jle
sub
adc
mov
ds
push
fs
dec
sub
mov
mov
(bad)
hlt
sbb
cmp
je
or
mov
jo
outs
adc
stos
mov
and
cdq
add
sbb
test
xor
cld
add
aad
cli
jmp
arpl
xlat
test
jmp
sbb
enter
jmp
jg
dec
mov
cs
push
fwait
xchg
scas
mov
dec
jecxz
push
mov
inc
(bad)
adc
icebp
sub
adc
jl
fist
mov
inc
(bad)
mov
dec
iret
fucom
inc
cwde
(bad)
jg
adc
clc
mov
cmp
popf
push
es
stos
lods
sub
inc
and
dec
sahf
(bad)
push
mov
test
lock
ins
mov
inc
cli
jl
xor
or
add
ins
mov
pop
pop
mov
(bad)
aas
aas
test
mov
inc
fs
call
imul
jne
jns
mov
inc
xchg
(bad)
xor
xchg
lods
call
and
push
loopne
in
mov
pushf
dec
push
in
lock
std
mov
jp
test
addr16
test
loop
addr16
dec
sti
sbb
mov
rcr
pop
add
pop
rol
dec
addr16
bound
xchg
and
stos
(bad)
inc
dec
cmp
adc
push
enter
inc
mov
dec
fwait
mov
int
xchg
lods
test
shl
ret
cld
xchg
push
in
jg
icebp
out
sub
dec
cli
mov
les
fisttp
mov
mov
pop
xlat
jmp
fnsave
cmc
cs
ds
push
lock
jle
pop
pop
sub
push
dec
inc
mov
fwait
retf
pop
scas
push
retf
jno
inc
ss
add
pop
mov
fisubr
lods
xor
test
cmp
mov
fs
jle
scas
shl
mov
push
int
mov
in
dec
cmp
ins
je
xchg
cmps
add
rol
sbb
jne
ds
pop
in
and
add
jbe
cmp
lahf
mov
fcomp
out
mov
inc
add
sbb
pop
mov
inc
push
mov
test
pop
test
pop
dec
add
fnstenv
xchg
ror
shl
popf
adc
loope
add
pop
scas
mov
push
mov
cld
xor
mov
xchg
xchg
fisttp
addr16
pop
sbb
fcmovnb
push
dec
cmps
daa
pop
and
out
call
loope
xor
and
push
push
add
push
scas
aas
sahf
jb
dec
test
(bad)
sbb
mov
add
xor
in
mov
ror
push
mov
rcr
pusha
xchg
cmp
std
jmp
in
push
mov
je
pushf
mov
xor
loop
repz
fdiv
imul
push
sub
nop
mov
or
cmp
mov
dec
lods
ret
lea
in
jmp
xchg
pop
jbe
inc
lds
mov
mov
xchg
xlat
inc
arpl
xchg
fidiv
add
jg
jp
xor
mov
mov
sub
fdiv
test
cwde
cwde
mov
add
xchg
ffree
and
fmul
pop
out
push
push
rol
retf
inc
popf
cs
cmp
pop
adc
ja
(bad)
int
or
jg
xchg
inc
adc
neg
sub
imul
pop
enter
push
mov
push
lahf
mov
das
sbb
jb
stc
mov
fcomp
outs
pop
mov
aas
test
nop
inc
sbb
cmc
mov
aad
stos
mov
je
mov
shr
hlt
and
jnp
push
add
test
or
push
xchg
sub
xchg
test
mov
out
cli
push
fcomi
push
jbe
adc
sub
pop
xchg
pop
mov
fst
pushf
or
mov
jg
int3
cmps
xor
jp
push
lea
out
lds
repz
xchg
aam
(bad)
jp
push
cmp
stos
sbb
fld
push
scas
scas
dec
xchg
lds
pop
or
ffreep
pop
xchg
push
popa
cmp
push
xchg
cmp
mov
in
and
push
aaa
mov
mov
rol
and
sbb
stos
cli
sbb
xor
in
add
icebp
jbe
adc
jnp
jo
xchg
sahf
cmp
in
xor
mov
mov
mov
sahf
mov
sub
xor
sub
or
cli
add
mov
sbb
cmp
or
shr
xchg
leave
or
mov
pop
add
std
sbb
lahf
cmp
push
out
pop
js
push
xor
lods
adc
and
frstor
xchg
jbe
push
xchg
xchg
jg
cmps
dec
add
mov
cmps
test
outs
in
mov
(bad)
icebp
xlat
ret
out
popf
(bad)
jmp
retf
or
fild
jle
dec
mov
dec
and
mov
(bad)
jg
(bad)
sub
add
mov
pop
jmp
mov
push
stos
lea
ret
(bad)
mov
in
cmp
mov
mov
add
jecxz
or
jle
lods
(bad)
les
nop
sbb
mov
sbb
int3
rol
lods
fld
jns
or
fcmovb
stc
sub
pop
dec
cmp
push
pop
jb
push
popa
lahf
cwde
test
sbb
adc
cld
inc
addr16
cmp
gs
or
fdiv
rcl
jp
mov
dec
enter
lahf
repnz
cwde
jl
js
imul
mov
mov
mov
dec
mov
sti
fst
mov
out
stos
sbb
inc
mov
sar
xor
sbb
inc
movs
push
or
mov
fild
int
cmp
cmc
arpl
and
xor
fwait
push
test
mov
je
xchg
mov
stc
out
popf
fild
lds
jbe
sub
or
xchg
mov
push
cmc
fucomi
adc
dec
xchg
(bad)
fnstsw
xchg
mov
shr
cwde
mov
or
cmp
jmp
jl
inc
scas
sub
and
stos
mov
sbb
sbb
push
imul
fstp
xor
push
mov
inc
dec
mov
mov
stc
xor
in
cmp
jo
lahf
pop
xlat
mov
mov
push
jmp
jmp
xlat
dec
test
mov
aam
stos
iret
sar
mov
push
ror
xor
in
jg
add
pop
lods
cmp
popf
dec
pop
dec
xchg
or
aaa
pop
scas
pusha
leave
and
call
jecxz
sub
cmp
add
popf
push
jge
mov
pusha
sub
gs
arpl
jp
xchg
cmp
retf
fsub
lea
out
imul
cmp
test
sbb
int
xchg
stos
fcom
lahf
pushf
xor
repnz
(bad)
fld1
jbe
adc
sbb
adc
jnp
push
inc
outs
mov
scas
jbe
icebp
sbb
add
add
pop
and
pop
mov
sbb
push
push
(bad)
adc
mov
dec
stc
fstp
leave
sbb
push
test
in
sahf
dec
cld
mov
mov
sbb
cmp
xchg
daa
sbb
shl
stc
hlt
pop
dec
mov
push
and
jp
add
xor
mov
(bad)
mov
inc
enter
mov
outs
imul
sub
adc
jns
mov
std
add
push
push
mov
pop
push
movs
outs
fild
xor
pminub
mov
loope
mov
mov
idiv
das
mov
dec
mov
cmp
js
inc
or
retf
int
jb
inc
pop
sbb
ins
ins
push
mov
call
int
cmp
inc
dec
jmp
and
and
popa
push
sub
sub
xchg
sbb
sbb
mov
xchg
pop
or
gs
les
loope
out
test
pop
mov
xchg
les
sbb
repz
cs
pop
fwait
cmp
jns
addr16
call
lea
in
cmp
inc
enter
or
mov
dec
push
movs
pop
inc
cmps
or
in
mov
lahf
in
pop
lods
xchg
push
(bad)
dec
add
fist
xchg
outs
icebp
test
mov
xchg
in
lods
scas
lahf
icebp
push
nop
pop
dec
lods
mov
xor
out
cmc
mov
in
cmps
xor
add
(bad)
out
lods
jne
push
add
pop
cmps
sbb
mov
nop
mov
addr16
add
sbb
adc
inc
or
call
inc
push
push
mov
add
adc
inc
stos
retf
pop
popa
(bad)
jo
cwde
cmc
jp
hlt
xchg
dec
repz
add
ret
xchg
pop
test
lods
jns
mov
fst
xchg
cmp
ins
retf
dec
repnz
out
arpl
inc
add
cmp
sbb
stos
mov
pop
cwde
iret
ds
inc
js
mov
cmp
pop
lea
aad
inc
test
lods
aas
pop
xor
icebp
mov
stos
loop
cld
outs
pop
push
movs
jbe
iret
rcr
test
xchg
pusha
sub
movs
scas
fldl2e
or
sbb
mov
xor
jg
stos
and
cs
sti
dec
sti
add
es
test
cs
scas
cmps
mov
dec
fnclex
or
and
sbb
cmp
cmp
mov
adc
stos
lods
sbb
cmps
adc
pusha
mov
cmp
movs
jecxz
push
in
pop
jnp
sbb
(bad)
call
mov
fsub
lea
push
sub
imul
push
sbb
pop
stc
push
push
jb
xchg
cwde
xchg
sub
repz
ror
ja
iret
xor
popw
pop
mov
fwait
jae
sbb
jo
mov
pop
mov
inc
jmp
leave
pusha
cld
add
movs
push
jmp
jg
add
iret
enter
sbb
mov
mov
mov
cmps
(bad)
jae
mov
fisttp
dec
jecxz
ror
push
popa
or
xor
mov
pop
inc
jmp
xchg
ret
and
cmc
addr16
xchg
mov
arpl
xor
mov
jle
imul
sahf
test
imul
jp
pop
pop
inc
fmul
xchg
jmp
arpl
xchg
jbe
call
(bad)
adc
fisubr
in
xchg
mov
push
hlt
mov
repz
mov
std
dec
and
je
sbb
xor
lods
ins
pop
pop
(bad)
mov
repnz
ret
fisttp
mov
daa
jmp
mov
mov
gs
xlat
sahf
sub
dec
leave
cmps
xchg
push
xchg
cmc
pusha
test
test
inc
mov
stos
jle
out
cmps
sub
out
xchg
jge
xchg
jmp
(bad)
fdivr
jne
cmp
into
lds
pusha
jg
or
stos
xor
jge
retf
nop
int3
or
aam
call
pop
push
push
push
adc
scas
outs
sbb
push
lea
xor
stos
mov
mov
js
mov
addr16
mov
pusha
fsubp
inc
xor
aad
mov
pushf
jmp
mov
xor
push
mov
sub
jmp
fsub
cmp
imul
add
cmp
(bad)
das
(bad)
inc
pop
adc
cmp
lods
add
jnp
mov
jl
mov
xor
push
jb
fild
lock
pop
mov
cld
xchg
ins
mov
stos
jns
(bad)
out
or
sbb
add
outs
pusha
cmp
stc
test
dec
jg
fwait
push
xchg
ss
sub
sbb
add
daa
gs
mov
jae
mov
enter
adc
rcl
mov
popa
mov
mov
ret
xchg
sub
mov
inc
leave
hlt
mov
in
pop
inc
cwde
push
sar
mov
jmp
add
ja
ins
test
ja
xchg
test
cmp
and
mov
jecxz
test
icebp
rcr
pop
inc
add
add
jl
imul
mov
stc
retf
jmp
add
ficom
push
js
cmp
jo
fwait
push
sbb
dec
push
repz
out
mov
rol
pushf
push
iret
(bad)
jle
out
push
retf
adc
sbb
sbb
xchg
mov
loop
pusha
fcom
inc
dec
out
jmp
fs
jns
shl
push
outs
mov
stos
mov
hlt
jns
fidivr
leave
popa
dec
jge
fsub
xchg
inc
lea
jmp
sub
or
push
cmp
test
sbb
popa
and
dec
cdq
xlat
lahf
addr16
stos
jno
test
xchg
cld
xchg
repz
arpl
enter
out
inc
cwde
scas
inc
in
outs
aam
or
nop
aad
data16
inc
add
cmp
mov
ret
test
dec
or
dec
cmp
xchg
pop
inc
ja
retf
and
xor
adc
ds
fs
sub
xchg
stos
pop
cmp
iret
(bad)
mov
mov
pop
jl
dec
idiv
test
add
js
sbb
jmp
pushf
stc
icebp
ret
dec
ja
fidiv
repz
or
inc
mov
fstp
inc
aas
dec
scas
ins
pop
cmp
ins
sbb
mov
movs
into
es
out
sahf
shl
pop
dec
dec
inc
mov
xor
dec
fisttp
adc
inc
ja
test
enter
rcl
repnz
inc
popa
xchg
aad
in
mov
xchg
mov
out
sub
jle
jmp
jg
cwde
out
cmp
or
aam
xchg
das
(bad)
cs
(bad)
in
inc
ficomp
inc
and
shr
lea
or
sbb
sahf
neg
cmps
xchg
dec
adc
jmp
xor
jne
nop
add
imul
xor
cwde
or
and
sbb
inc
adc
shl
mov
pop
repnz
mov
dec
lods
leave
test
mov
(bad)
dec
data16
popa
out
cli
ss
iret
xlat
push
les
pop
or
movs
or
jb
push
sub
mov
(bad)
lods
xor
enter
daa
mov
pop
jne
pop
into
es
or
jmp
shl
movs
dec
or
sbb
iret
mov
test
addr16
imul
cmps
jno
mov
loopne
popf
movs
add
(bad)
(bad)
mov
shl
(bad)
fsubr
scas
mov
clc
cmps
mov
cmps
dec
clc
dec
sti
or
jmp
retf
push
cmp
xor
cs
inc
pop
or
cli
ja
cmc
jo
iret
pop
dec
inc
sbb
cmp
pusha
imul
jae
xchg
inc
cmp
adc
jne
dec
jg
ror
sti
pop
jo
sar
out
test
xchg
push
pop
mov
mov
cli
lods
jecxz
mov
xchg
fwait
and
repz
stos
imul
push
inc
mov
push
sub
cmp
sbb
cmc
fnstenv
jae
ins
mov
pop
ins
xchg
mov
call
xlat
add
inc
shl
push
mov
les
adc
cmp
sbb
sti
cwde
adc
inc
jb
cmps
js
sahf
(bad)
pop
xchg
jecxz
push
xchg
out
cs
or
jns
sti
cdq
jecxz
mov
mov
neg
test
dec
jmp
xchg
mov
fwait
aas
jge
jns
inc
pop
std
push
push
imul
pop
popf
fdivr
cmc
jne
push
adc
dec
push
push
and
pop
inc
fwait
je
nop
ds
movs
movs
mov
sti
xlat
mov
fdivr
jle
push
stc
mov
jae
into
cmps
inc
(bad)
xchg
pop
add
shr
test
pop
cmps
cwde
xchg
push
ds
mov
scas
test
ja
add
fsub
add
pop
shl
popf
dec
or
test
stos
sbb
cmp
repnz
inc
add
dec
ins
jnp
and
push
mov
(bad)
push
aas
adc
enter
lock
sbb
mov
push
mov
jge
in
add
pop
cdq
mov
sbb
mov
and
loop
mov
xchg
xor
jne
dec
sbb
ror
inc
and
mov
out
leave
retf
test
ins
arpl
loop
xchg
push
(bad)
sbb
push
adc
stos
add
stos
inc
mov
fs
lds
xor
pop
lock
aad
and
mov
shld
mov
sar
sbb
movs
jo
ss
push
or
fsubrp
inc
cli
adc
cwde
imul
push
and
xchg
mov
dec
sub
addr16
add
in
jle
inc
sbb
sbb
pop
push
and
or
adc
popa
jmp
movs
cmp
xor
rcl
das
mov
jne
jne
sub
aad
xor
adc
mov
sbb
mov
aas
rcr
mov
popa
repnz
or
std
leave
mov
sbb
inc
and
dec
sub
nop
xchg
retf
cli
push
stc
retf
mov
add
cmc
add
add
push
mov
push
xchg
mov
push
cmp
inc
pushf
fadd
neg
pop
lahf
popa
fist
or
xchg
js
in
cld
adc
dec
xchg
pop
inc
mov
fabs
mov
mov
sar
cmp
rcl
jmp
mov
dec
pop
or
pop
hlt
inc
lahf
adc
xchg
dec
inc
push
sbb
inc
ins
ja
sbb
fild
xlat
adc
stos
mov
retf
xlat
out
or
arpl
push
movs
enter
mov
pop
shl
stos
adc
push
dec
mov
mov
jmp
lods
cld
pop
push
popf
imul
hlt
xor
sub
in
pop
push
or
jbe
addr16
push
xchg
mov
xchg
push
cmp
pop
xchg
rcr
xchg
in
dec
sbb
push
mov
(bad)
out
mov
pop
push
mov
add
mov
xor
cs
in
xchg
inc
scas
cmc
inc
retf
adc
pop
mov
jae
int
ja
lahf
push
cmp
icebp
mov
clc
je
call
mov
ret
mov
mov
cmps
xor
sbb
add
jg
sub
sbb
pushf
mov
push
sar
xchg
or
and
xor
pop
xor
jecxz
mov
mov
cmps
dec
inc
mov
cmp
lock
popa
arpl
fs
pushf
dec
leave
mov
push
aam
and
pop
call
mov
fimul
clc
ret
mov
sbb
int
or
(bad)
ror
cs
sbb
pop
mov
mov
dec
ret
rol
mov
popa
inc
push
sbb
add
jmp
inc
dec
add
sahf
test
arpl
cmp
fdivr
sbb
(bad)
xchg
cmp
xchg
push
rcr
mov
lods
stc
movs
cli
cmp
push
dec
mov
mov
out
loope
jno
icebp
mov
lock
cmp
and
cmp
sbb
mov
or
mov
pop
sar
xchg
psubsw
outs
inc
(bad)
dec
dec
mov
test
xor
pusha
clc
inc
add
shl
jecxz
mov
xlat
test
loope
pop
and
ins
xchg
dec
pop
in
test
cmp
stc
jns
cdq
mov
and
call
aaa
fs
mov
outs
es
xchg
call
cld
add
sbb
sub
lahf
or
adc
pop
xchg
sbb
into
test
jmp
fdivr
inc
mov
cmp
mov
test
mov
je
movs
mov
adc
loopne
repnz
push
pop
stos
dec
push
pminub
lods
and
sbb
push
dec
shr
outs
mov
xchg
leave
iret
cmp
and
adc
push
cmp
push
mov
add
cmp
aam
cs
int3
push
loop
inc
and
xor
mov
pushf
adc
mov
cmp
ficomp
mov
push
add
mov
mov
aad
arpl
fst
pop
adc
adc
outs
mov
pop
inc
mov
sbb
mov
sti
imul
inc
sbb
xor
add
les
outs
mov
jl
pop
jns
aad
inc
mov
jo
jnp
outs
mov
mov
call
cld
test
xchg
add
test
outs
add
in
popa
mov
out
cmp
into
mov
jle
cs
ds
sar
push
and
cwde
les
pusha
iret
jmp
movs
iret
add
inc
in
xor
inc
xor
adc
jl
mov
jb
cwde
stos
add
push
and
in
test
stos
loop
neg
je
mov
loope
fstp
leave
loopne
rcr
adc
jg
mov
sbb
pushf
mov
movs
(bad)
inc
sbb
movs
push
int3
push
hlt
xor
add
ret
add
push
popa
jns
jnp
jb
(bad)
lods
dec
and
or
fistp
imul
xor
pushf
and
mov
jae
xchg
test
adc
push
xlat
int
add
cld
or
fbld
test
test
jmp
cmps
and
addr16
mov
inc
mov
ffreep
cmps
test
and
into
adc
enter
or
inc
les
pop
push
or
ficomp
leave
or
retf
dec
sub
and
popa
and
or
mov
dec
imul
popa
in
out
cwde
adc
jne
pushf
jne
scas
fdiv
mov
stos
dec
pop
xchg
(bad)
xchg
xor
sbb
mov
jge
and
mov
(bad)
pop
push
push
out
adc
dec
(bad)
shl
add
cwde
add
jp
dec
or
rcr
iret
(bad)
sbb
sbb
inc
and
or
mov
jb
dec
inc
fdivr
pop
mov
jl
test
jl
pusha
sbb
sub
loopne
inc
fstp
or
test
adc
cdq
test
sbb
vpxor
dec
repz
out
pop
dec
out
fcmovu
push
iret
push
jp
cmp
xor
enter
into
dec
(bad)
add
push
sti
or
xor
dec
movs
dec
push
nop
das
add
xchg
cmps
jne
sub
rcr
shl
ins
cmps
dec
fadd
out
rcr
neg
xchg
pop
scas
test
loope
mov
icebp
adc
cmc
(bad)
mov
jmp
adc
sub
int
jb
sbb
jnp
xor
and
lods
mov
int
add
mov
sbb
cmp
outs
lods
add
mov
jne
cwde
stc
sub
dec
cmp
retf
inc
ror
fwait
dec
loope
rcr
(bad)
mov
(bad)
mov
xor
jmp
and
cmps
mov
cdq
pop
jae
lahf
mov
cs
leave
xchg
rol
push
dec
mov
and
repnz
rcl
es
lahf
cmp
cdq
sbb
mov
fadd
fimul
xchg
fadd
dec
pop
daa
rcr
add
sbb
dec
adc
pop
push
into
dec
pop
xchg
shl
arpl
addr16
inc
mov
(bad)
sti
jl
mov
ins
out
xchg
jo
mov
test
dec
cmc
(bad)
fstp
sbb
push
jne
xchg
xchg
syscall
(bad)
xchg
call
fsubr
(bad)
pop
or
hlt
shr
jbe
xor
dec
scas
pop
imul
mov
mov
ret
std
or
inc
jmp
inc
mov
xchg
xchg
sub
add
mov
mov
pop
mov
outs
cmps
out
mov
out
add
idiv
test
mov
mov
xor
fbld
mov
ror
cs
fldenv
(bad)
and
cmp
xor
or
ret
xchg
lods
xor
int
ret
movs
fld
push
cmp
sbb
mov
outs
mov
setle
aas
fsubrp
xor
out
push
fldenv
pop
mov
not
xchg
inc
call
cmps
mov
repz
dec
mov
mov
mov
nop
fiadd
pop
call
or
int3
(bad)
imul
mov
adc
sti
push
sub
scas
fst
pop
repnz
add
mov
add
jb
and
or
lahf
or
sub
cmp
cmps
mov
out
pop
pop
fdiv
(bad)
imul
out
or
mov
xchg
add
push
cmps
mov
js
test
std
xchg
std
mov
test
jbe
dec
(bad)
sub
xlat
gs
add
add
outs
jle
ins
cmp
xor
and
repnz
pop
mov
sbb
sbb
(bad)
nop
cmovb
inc
mov
gs
fdivr
fnstsw
out
jl
xchg
jne
fcmovu
lea
pop
mov
xchg
add
pop
add
and
leave
mov
pop
stos
adc
or
(bad)
and
jg
dec
sub
mov
dec
repz
(bad)
fist
pusha
inc
into
add
jl
cmp
pop
mov
inc
inc
mov
mov
sahf
push
es
xchg
cmps
sahf
inc
stos
stc
jg
pop
dec
pop
mov
pop
xchg
mov
pushf
stos
fs
fst
adc
fsubrp
es
jbe
mov
in
fsubr
fpatan
jae
jmp
gs
sub
(bad)
leave
lods
push
out
cmp
cmp
sahf
data16
pop
idiv
add
stos
movs
pushf
cmp
fcomp
mov
xchg
sti
push
push
jns
stc
aas
outs
pop
aaa
and
pop
xchg
sub
jnp
cmps
dec
sbb
cmp
mov
lods
xor
sbb
fldl2t
dec
xchg
(bad)
jo
sbb
pop
mov
push
out
call
adc
lock
imul
xor
pushf
xchg
mov
cmp
cdq
test
jb
sub
sbb
and
jae
xor
test
lahf
adc
pop
and
jp
frstor
fild
retf
pop
xor
aas
stos
aas
fdivr
scas
imul
dec
bound
ss
jmp
retf
jle
pop
(bad)
lahf
cli
dec
mov
xchg
add
(bad)
icebp
mov
sti
mov
inc
mov
aam
stc
out
fstp
in
mov
dec
test
(bad)
lods
push
shl
arpl
jnp
push
jmp
cmp
sbb
fdivr
mov
pop
dec
les
xchg
sbb
pop
(bad)
adc
dec
inc
mov
jne
mov
push
adc
inc
cwde
cld
popf
sbb
inc
push
mov
pop
mov
xchg
imul
xchg
pop
cli
mov
pop
pop
and
gs
xchg
mov
inc
adc
pop
sahf
xor
or
pop
outs
pushf
or
sti
mov
aam
dec
push
or
daa
xor
sbb
sbb
xchg
ss
(bad)
mov
retf
aas
mov
inc
ret
push
add
jno
mov
mov
adc
leave
adc
add
imul
jmp
pop
dec
out
cmps
pop
rcl
dec
or
sbb
or
or
mov
add
mov
mov
dec
sbb
leave
pusha
push
sub
or
add
dec
stos
xor
mov
das
adc
addr16
mov
mov
popa
and
push
out
and
mov
es
mov
out
mov
jl
mov
ds
ret
test
dec
icebp
pop
jmp
fsubr
sub
xor
movs
stos
mov
(bad)
sub
clc
add
push
mov
cmp
dec
inc
test
daa
mov
in
mov
cmp
xor
into
gs
adc
fist
mov
xor
mov
cmps
(bad)
ffreep
or
cmps
cmp
out
mul
mov
jno
pop
stos
adc
sbb
rol
je
stos
imul
pop
mov
movs
mov
and
inc
fwait
leave
jno
jmp
and
and
adc
or
cdq
xor
push
jns
repnz
mov
add
xchg
loope
xchg
mul
dec
int3
pushf
push
or
fisub
mul
pop
mov
test
out
ret
icebp
fsub
cs
cmp
imul
push
add
inc
test
sub
mov
mov
jecxz
setp
jle
jl
mul
cmp
xchg
sbb
inc
nop
inc
xor
call
mov
scas
std
inc
out
pop
cmp
dec
call
mov
or
clc
cmps
push
xchg
push
mov
(bad)
mov
mov
jnp
movs
mov
xor
cwde
(bad)
fucom
dec
jne
xor
fld
push
push
int
enter
addr16
jae
push
pop
push
movs
cmps
test
(bad)
fdivr
inc
pushw
mov
sub
adc
jae
fcomp
push
xchg
xlat
mov
sti
enter
hlt
push
fistp
jnp
pop
test
mov
aam
pop
xor
clc
jmp
in
xchg
xchg
mov
cmp
jmp
and
xor
out
(bad)
jmp
mov
pusha
jnp
inc
or
into
stos
inc
cmp
pop
loop
daa
mov
add
inc
sub
adc
or
dec
ret
xchg
sbb
aas
pop
cs
call
repnz
push
and
inc
icebp
ret
add
push
out
test
out
cmps
mov
iret
ins
cmc
movs
(bad)
or
push
xchg
mov
mov
cmp
and
enter
repz
ja
dec
arpl
jp
aaa
sbb
lea
adc
aas
scas
jnp
repz
mov
jb
add
jo
addr16
cmp
mov
push
mov
mov
inc
pop
cmp
test
cmp
int3
jp
pop
add
mov
dec
mov
mov
add
std
not
movs
rcr
lahf
pop
dec
sbb
test
fs
lahf
lea
push
cmp
push
cmc
fcmovu
imul
mov
pop
pop
ja
(bad)
scas
dec
cmp
push
cli
nop
jle
in
push
adc
cli
xor
xchg
sbb
xchg
push
adc
add
cmps
div
add
int
xor
pop
push
mov
dec
call
push
jecxz
pop
ror
mov
in
scas
idiv
pop
nop
mov
repz
loope
pop
xchg
mov
daa
sub
fdiv
fsub
shl
inc
add
pop
mov
mov
mov
(bad)
jge
int
jb
cmp
adc
fs
pushf
sbb
movs
push
cmp
sbb
test
sbb
jae
jmp
cmp
std
or
ret
pop
cmps
int3
mov
retf
adc
sti
nop
adc
inc
add
pop
movs
fidivr
xchg
retf
call
pop
bnd
das
pop
sbb
fisubr
jp
sahf
das
imul
jg
xchg
mov
das
sub
sbb
pop
push
jno
aad
pop
pop
xor
lods
and
(bad)
(bad)
movs
sub
push
inc
push
push
sub
inc
fwait
push
not
mov
fnsave
mov
call
ror
ins
push
in
mov
out
inc
jp
sub
or
cmp
lock
es
or
cmp
es
sub
xchg
leave
scas
adc
jmp
sti
jmp
outs
pop
xor
and
lea
mov
fild
push
xor
cdq
xchg
push
cmp
fs
out
mov
addr16
lahf
imul
jmp
add
rcl
mov
sbb
dec
jp
test
mov
(bad)
bound
cli
inc
cmps
xor
pop
fisttp
push
and
or
add
test
les
cmc
cmp
inc
cmc
inc
imul
loop
fwait
add
pop
adc
push
movs
mov
adc
xor
add
push
pop
fbstp
mov
inc
xor
or
mov
idiv
sbb
mov
mov
push
fucompp
mov
jmp
jp
or
fsubp
call
sub
sbb
dec
adc
popf
add
enter
sbb
(bad)
push
jge
es
add
mov
pop
je
dec
add
mov
add
ins
aam
xchg
daa
cwde
rcl
sbb
mov
mov
xchg
push
mov
mov
aad
test
pusha
push
cdq
xchg
lock
fucom
pushw
imul
pop
clc
test
es
mov
jo
pop
imul
in
xchg
icebp
add
inc
inc
clc
inc
cmp
and
push
mov
scas
pop
jbe
dec
pop
scas
cmp
cmp
and
hlt
(bad)
xchg
xor
pop
push
cdq
pop
(bad)
cmps
jmp
xchg
iret
mov
mov
xchg
xchg
popa
out
nop
cmp
lods
fsub
jle
fisubr
push
lods
aaa
inc
dec
out
(bad)
shl
cmp
das
add
arpl
push
xchg
out
dec
in
inc
add
popa
inc
inc
mov
arpl
xor
js
mov
and
into
mov
xchg
test
push
fisub
inc
mov
xor
sar
mov
call
pop
xchg
test
fld
(bad)
cmp
inc
jmp
retf
cmc
pop
(bad)
or
push
jbe
adc
js
leave
cs
inc
jae
cmp
sbb
pop
jno
stos
lods
ss
sbb
fimul
or
dec
inc
(bad)
xor
inc
xchg
mov
fwait
pop
jmp
add
push
test
xor
outs
jle
mov
sub
or
xlat
rcr
ss
push
lahf
jbe
je
xchg
mov
inc
push
test
test
dec
outs
inc
xor
cmp
jge
cmc
and
sub
mov
shl
ds
jmp
inc
arpl
xchg
cmp
mov
dec
fild
mov
(bad)
push
push
movs
movs
lods
adc
fiadd
out
(bad)
and
rcl
sbb
dec
movs
cmp
xchg
pop
mov
or
mov
add
inc
or
sub
mov
adc
jns
xchg
jae
or
into
loope
mov
cmp
cdq
dec
out
loope
cwde
jmp
jl
cli
movs
xchg
ins
icebp
push
cmp
mov
es
mov
xchg
mov
nop
ins
fld
and
into
xlat
lods
jle
push
push
and
xchg
pusha
push
pusha
movs
mov
popf
push
pop
out
dec
sub
test
(bad)
dec
sub
cmp
adc
ins
cmp
xchg
sbb
push
dec
fsubr
mov
mov
inc
aad
push
mov
popa
call
push
into
cld
popf
xor
jp
mov
push
push
sahf
sahf
mov
jmp
sar
mov
sub
sti
fldenv
pop
cmp
mov
sbb
cmp
or
cs
test
and
sbb
add
mov
stos
jo
ins
dec
xor
(bad)
div
movs
pop
call
mov
mov
popf
push
cld
mov
popf
and
push
mov
ror
adc
mov
or
mov
dec
sub
fmul
pop
or
pop
stos
jae
adc
sub
sbb
repnz
xchg
rcr
pusha
push
aad
jae
or
xchg
and
jb
inc
adc
mov
inc
xchg
jmp
sbb
imul
leave
mov
loopne
add
(bad)
cli
mov
xchg
inc
xchg
fisubr
mov
in
mov
in
jbe
and
enter
push
push
jnp
das
push
cs
push
push
dec
mov
mov
adc
(bad)
addr16
daa
cdq
(bad)
pop
push
or
fiadd
pop
das
xor
push
push
sahf
jns
(bad)
xor
sbb
cmp
neg
les
popa
shr
mov
cmps
add
stc
rol
mov
inc
pop
mov
jmp
dec
pop
mov
push
shr
cmp
cli
(bad)
aad
fst
imul
jnp
push
int3
int
push
cmps
imul
jge
pop
sbb
add
jle
xor
sbb
add
inc
arpl
jb
xchg
jl
rcr
fldcw
push
leave
pop
pop
ins
sub
hlt
jg
cmc
mov
xchg
movs
imul
gs
mov
inc
mov
and
jne
xor
and
inc
or
xchg
sub
xchg
push
imul
cmp
push
in
adc
push
pop
xor
pop
adc
ss
movs
cmps
(bad)
outs
add
pop
std
scas
xchg
and
not
push
jo
fldcw
call
cld
xor
scas
xor
pop
cmp
neg
mov
in
(bad)
and
bnd
ret
cwde
or
xlat
pop
add
xlat
out
fsub
int3
cmp
pusha
scas
add
pop
mov
retf
xchg
xor
cmps
push
leave
jmp
inc
ja
ret
jb
js
or
cdq
push
sub
xchg
adc
add
retf
pop
lods
shl
pop
test
(bad)
fisubr
shl
(bad)
mov
ret
jge
mov
inc
push
mov
icebp
adc
in
loopne
leave
stc
popa
sbb
call
sub
in
(bad)
push
iret
aaa
pusha
add
ins
jo
sub
push
cmps
fxch
call
sub
js
jmp
and
or
jg
jle
mov
jns
mov
push
lock
(bad)
dec
pop
jb
and
mov
jmp
xlat
mov
iret
sbb
sbb
std
add
mov
cmps
cld
mov
movs
dec
cli
ja
adc
adc
icebp
fnstcw
add
aas
inc
movs
imul
dec
sbb
lahf
xchg
iret
sub
icebp
pop
out
cmp
inc
cli
adc
pop
add
dec
jno
or
xchg
dec
in
rcr
jmp
cwde
adc
fnstenv
out
loopne
pop
sbb
shr
mov
push
add
cli
fdivp
(bad)
fiadd
xchg
movs
jbe
pop
fnstcw
sbb
cli
or
adc
cwde
xor
pop
mul
repnz
(bad)
shl
or
adc
push
jb
scas
sbb
(bad)
imul
dec
push
mov
mov
loope
mov
fnstenv
pop
mov
les
call
out
jnp
pop
mov
sahf
fidiv
mov
inc
call
nop
fadd
pop
inc
lods
cmps
push
aam
stc
or
jb
sbb
pop
cdq
or
stc
xor
inc
mov
clc
dec
jmp
jp
push
les
pop
pop
jl
push
mov
popf
jl
mov
mov
loope
xchg
mov
push
sti
inc
add
pusha
call
rcr
cmp
mov
stos
lahf
mov
outs
jmp
std
mov
ror
sahf
pusha
(bad)
sub
fdiv
push
daa
pop
push
jns
push
outs
data16
ja
(bad)
leave
mov
or
sbb
mov
cli
jnp
dec
inc
in
aas
jns
xor
ins
jb
push
adc
mov
iret
pushf
adc
pop
arpl
cmp
nop
add
adc
hlt
adc
sahf
or
mov
inc
sbb
sti
sub
in
cli
jmp
mov
jne
sbb
call
and
popa
fsubr
push
xchg
hlt
inc
jg
pop
sti
pop
imul
sbb
mov
inc
xchg
cmps
cmps
or
adc
in
test
test
mov
mov
popf
test
add
retf
mov
imul
fbld
mov
out
cmp
into
clc
lods
jo
push
je
arpl
dec
sub
mov
iret
(bad)
sub
pop
cmps
sbb
inc
je
cmc
pop
iret
das
lods
push
mov
inc
scas
mov
clts
es
int3
leave
cwde
cmp
arpl
sub
mov
test
and
(bad)
mov
or
arpl
hlt
xchg
(bad)
cmp
lods
fmul
mul
es
div
ret
and
jg
push
outs
clc
push
and
mov
retf
int3
dec
out
fnstsw
mov
dec
cmp
adc
and
icebp
push
mov
hlt
adc
adc
xchg
xchg
mov
and
sub
imul
cmps
push
cmp
icebp
xchg
sbb
outs
sbb
cmp
cld
dec
jge
scas
push
rcl
adc
xor
in
and
cmp
mov
jp
sbb
mov
cmp
inc
xor
adc
and
bndstx
mov
jmp
in
outs
and
jne
cmps
sub
mov
cmc
jmp
cmc
ins
cli
mov
sbb
movs
test
and
popa
retf
aaa
cs
loope
shl
lock
aaa
push
movs
and
mov
xchg
push
(bad)
jo
imul
push
add
pop
jno
pop
inc
xlat
dec
push
scas
lods
xchg
repz
loop
fistp
scas
jg
(bad)
bnd
call
sbb
call
mov
lea
scas
pushf
mov
mov
repnz
fimul
mov
int
pop
cmp
inc
sbb
xor
adc
pop
cwde
jns
pop
scas
mov
repz
sbb
jbe
mov
cmp
sbb
sub
pop
imul
out
sar
or
adc
call
or
jp
sub
fdivr
adc
push
or
fmul
and
mov
repz
add
and
lea
push
js
xchg
adc
jns
dec
pop
push
mov
mov
cs
stc
jmp
dec
add
or
and
sub
push
pop
mov
outs
lea
jns
icebp
jecxz
lods
cmp
push
jg
sub
lahf
ret
push
xchg
mov
dec
imul
xchg
pop
call
shl
mov
int3
xchg
lahf
fidiv
(bad)
jp
dec
sub
pop
popf
push
jns
arpl
outs
pop
dec
mov
xchg
jge
mov
fwait
test
sbb
jge
cmp
mov
xor
and
push
push
jecxz
out
mov
inc
fidivr
es
ins
sbb
addr16
jp
pop
stos
lods
fcom
and
outs
pop
mov
(bad)
mov
popf
dec
dec
mov
cld
cmp
jmp
fs
scas
push
jo
jne
push
mov
or
cmp
adc
adc
push
jae
mov
mov
sar
aad
push
lods
scas
lods
adc
add
repnz
xchg
repz
loope
add
mov
lock
idiv
mov
hlt
por
mov
leave
dec
mov
mov
in
fidivr
inc
adc
cmp
ret
xor
jae
push
imul
ds
xchg
hlt
jle
fistp
dec
sbb
inc
and
push
add
push
nop
jb
xchg
gs
fld
(bad)
out
mov
mov
jns
sbb
push
fidivr
pushf
fild
push
in
xchg
jbe
ja
scas
xchg
in
cmps
push
sbb
pop
aam
cdq
out
jecxz
cmp
aam
add
int3
fdivp
jne
inc
data16
les
adc
outs
scas
mov
mov
(bad)
cmc
and
or
daa
cmp
mov
mov
shl
mov
jo
fldenv
rcl
pop
int
je
jnp
jp
js
into
jmp
cdq
leave
stos
dec
xchg
jmp
leave
jge
clc
mov
add
pop
push
mov
xchg
xor
into
fcomip
int
imul
cli
cs
ficom
inc
pop
jl
sbb
xor
stos
cmps
lods
xchg
sub
enter
push
rcl
ins
or
in
sbb
adc
cli
push
push
xchg
addr16
inc
jb
fscale
sub
or
rol
jmp
push
xchg
movs
leave
push
mov
fwait
pusha
xchg
fwait
arpl
call
stos
or
lea
xor
in
jp
mov
push
(bad)
sub
sbb
fadd
sbb
jne
dec
push
inc
pushf
cmps
test
sbb
lea
mov
and
sub
inc
jo
call
dec
ins
fmul
xchg
pop
jle
xchg
mov
sti
in
mov
test
sub
pop
out
fild
out
xchg
pop
xchg
mov
sub
rol
sahf
mov
inc
sti
mov
add
(bad)
retf
lock
dec
mov
test
mov
push
(bad)
and
jnp
movs
cmp
mov
call
(bad)
fist
xchg
cmc
popaw
push
sub
pop
or
es
mov
lea
stos
mov
ss
aaa
jae
repz
std
sbb
sub
cwde
(bad)
pop
mov
test
push
test
mov
mov
pop
lea
mov
sar
cmc
not
push
cwde
sbb
clc
or
into
shr
jbe
sbb
das
pop
jnp
dec
add
mov
lods
(bad)
int
cmp
cmc
sbb
and
inc
ja
jl
pushf
ss
lock
dec
fsubr
mov
jge
cwde
xchg
push
int
xor
bound
lods
push
aad
xchg
retf
mov
aam
add
sti
loope
cmp
push
mov
dec
bound
repz
fadd
pop
jle
mov
push
out
sub
inc
loope
jae
mov
xor
push
test
scas
sbb
jge
push
add
sub
push
or
xchg
xchg
pop
xchg
ror
cld
int3
mov
loope
outs
pop
xor
xchg
clc
popa
stos
fistp
adc
sbb
outs
add
cmps
xchg
ds
enter
out
sbb
hlt
inc
inc
adc
fstp
add
inc
jae
push
pop
jg
retf
lahf
rol
neg
add
xor
sbb
or
pop
cmp
adc
jmp
in
cmp
xor
lock
jle
mov
pop
jmp
stos
jp
mov
mov
mov
pop
pop
mov
in
mov
mov
aaa
sub
gs
bound
js
es
and
fxch
cdq
sbb
stc
and
(bad)
jp
popa
aas
mov
adc
sbb
dec
dec
mov
movs
push
sbb
sub
inc
dec
mov
clc
sbb
cmp
aas
cdq
fdivr
and
call
mov
inc
je
les
mov
mov
or
adc
int3
fdivr
add
push
lahf
jo
push
popf
mov
scas
or
jmp
push
inc
ja
clc
and
jecxz
leave
sub
inc
ins
add
inc
repz
out
inc
add
cmc
pop
arpl
push
ret
dec
mov
xchg
push
xchg
cmp
fild
stos
fdiv
mov
cmps
std
mov
jle
fsubr
imul
ss
mov
lods
pop
icebp
or
sub
cmp
mov
aas
pop
mov
sub
aas
mov
cmp
jl
jmp
pushf
pop
cmp
sub
or
fisttp
rol
xchg
pop
(bad)
scas
shl
mov
ja
stos
jbe
out
lods
or
jg
mov
in
fidivr
lods
mov
stc
mov
ret
jno
sahf
movs
outs
aam
test
pop
cmp
xchg
in
jl
cmp
jp
cmps
adc
mov
lahf
mov
inc
fadd
dec
inc
and
pop
sbb
adc
push
mov
inc
jmp
xchg
retf
iret
jmp
pop
test
ret
push
mov
mov
xlat
mov
xchg
jns
fisubr
(bad)
loope
outs
fs
xchg
jno
pop
fisubr
sbb
mov
jns
pop
push
jns
mov
js
mov
pop
pusha
scas
xchg
popa
retf
sub
push
fs
daa
das
push
and
jmp
mov
adc
mov
sbb
out
mov
xchg
xlat
gs
push
sbb
popa
popf
shl
test
clc
inc
add
loopne
psrld
cwde
ror
cs
pop
jle
mov
clc
cmp
cmp
aam
(bad)
push
fisubr
cmp
rol
and
jp
sbb
jne
addr16
pop
mov
pop
hlt
inc
rcr
mov
push
dec
add
(bad)
xor
imul
mov
sub
jl
mov
push
cwde
aam
and
das
and
mov
pop
into
jmp
dec
cdq
mov
mov
sbb
cld
pop
in
repz
popa
mov
scas
gs
jmp
dec
fwait
cdq
dec
out
sub
dec
sbb
test
fs
pop
sbb
mov
pop
in
push
std
mov
not
jbe
retf
pop
sub
sub
cmp
lea
ror
or
fcom
jle
sub
fcom
loopne
pop
in
test
das
jmp
push
cli
movs
movs
lock
and
leave
cmc
outs
and
loop
mov
xchg
dec
jecxz
in
es
pop
ror
ja
inc
xor
jns
xor
call
add
neg
inc
lds
ss
outs
adc
inc
dec
movs
inc
cmp
push
addr16
(bad)
not
cmp
jl
aam
pop
iret
push
adc
dec
cwde
jl
mov
mov
pushf
pop
xor
(bad)
scas
push
xchg
pop
and
sahf
mov
pushf
mov
les
mov
push
out
dec
xlat
adc
xor
inc
bound
jge
cmp
mov
pop
out
xchg
jmp
inc
push
pop
inc
in
push
jae
sbb
mov
and
push
mov
stos
pop
pop
push
inc
jmp
xchg
pop
mov
push
push
js
fidiv
jmp
inc
shl
mov
push
sbb
xchg
adc
xchg
jecxz
(bad)
lds
pop
xchg
scas
cmp
push
into
and
std
jge
and
and
popa
lea
popa
jmp
add
(bad)
gs
jae
stc
cmp
pop
or
mov
pop
adc
push
push
xchg
cwde
(bad)
(bad)
int3
fnstsw
fsub
pop
mov
dec
loopne
mov
call
clc
imul
and
pop
mov
ror
ss
shl
jae
push
ja
jae
sbb
and
icebp
xchg
xchg
scas
cs
pop
pushf
jecxz
lahf
loopne
ja
sub
daa
and
cmp
pop
sahf
je
aam
pop
mov
jb
out
mov
mov
jo
inc
jae
test
xchg
mov
adc
shl
movs
out
cmp
mov
mov
mov
cmc
stos
popa
jmp
push
int3
mov
inc
fbld
jl
data16
js
dec
ss
call
push
stos
imul
enter
adc
mov
sbb
inc
xor
scas
xor
pop
push
rcr
cmc
jge
ja
jno
(bad)
call
adc
mov
std
psubsw
lahf
xchg
fldcw
mov
sahf
addr16
stc
xchg
ret
jl
fistp
push
not
cmc
addr16
xor
xor
xchg
push
mov
into
lahf
add
scas
(bad)
leave
out
add
cmp
cmp
and
aam
push
and
xchg
dec
enter
mov
js
mov
jmp
(bad)
pop
and
inc
retf
mov
xor
lods
xchg
clc
inc
popf
sbb
adc
mov
cmp
test
or
sub
(bad)
call
pusha
inc
call
push
mov
mov
sbb
and
es
pusha
dec
mov
mov
dec
adc
jnp
mov
jne
inc
fnsave
lahf
repz
out
xchg
push
cmc
xchg
in
hlt
mov
fcomp
(bad)
movs
out
sbb
dec
inc
lods
cmps
icebp
das
cmp
idiv
inc
loop
ja
lds
xlat
es
dec
push
push
lods
bound
outs
mov
fcom
jns
enter
and
and
push
es
daa
call
inc
mov
outs
xchg
lods
cli
arpl
or
std
sahf
push
retf
loop
movd
cmp
xchg
jne
out
push
sub
dec
lods
movs
cdq
out
cmps
data16
mov
and
fisttp
lods
popf
dec
(bad)
push
cmc
sub
call
ss
test
inc
cwde
arpl
dec
out
movs
mov
add
lods
push
xlat
add
mov
jge
mov
xor
js
mov
popa
scas
mov
jae
xlat
inc
bound
sbb
pop
rcl
adc
dec
add
je
cwde
test
lods
in
aad
push
sahf
ja
dec
dec
push
adc
sti
in
cmp
and
outs
mov
pop
daa
mov
or
inc
and
inc
sahf
mov
stos
repz
pop
add
cmp
data16
imul
inc
rcl
test
in
add
and
stos
mov
xchg
div
pop
push
push
lods
jl
mov
pop
lahf
loop
arpl
shr
cmps
mov
adc
jl
nop
test
sbb
std
call
out
fadd
xor
adc
xlat
in
out
pop
into
inc
jle
cmp
sub
mov
nop
fwait
retf
and
and
fcomp
push
and
push
sub
sbb
pop
shl
inc
fcom
sbb
adc
or
add
cdq
aam
cmp
inc
bound
xor
cld
jbe
leave
fsubr
pop
add
shl
xor
cmc
icebp
loop
push
js
xchg
jo
imul
enter
pop
push
jp
mov
inc
movs
jne
dec
mov
mov
dec
pop
stos
pop
sahf
int
mov
adc
add
inc
adc
nop
sub
push
and
test
shl
inc
xchg
clc
inc
pushf
pop
jge
cmps
imul
out
dec
shl
mov
sti
dec
mov
mov
add
mov
aad
ficomp
dec
xlat
push
stc
or
ds
out
popa
retf
or
cmp
ins
arpl
sbb
test
int
dec
cmp
push
leave
add
frstor
push
sbb
adc
pop
pusha
mov
ins
lea
data16
and
jmp
pop
cmps
pop
jmp
fcomp
sar
add
loop
aaa
xchg
pop
mov
inc
nop
leave
icebp
add
in
loopne
mov
jp
in
mov
nop
imul
pop
sbb
jmp
pop
push
jns
cmp
mov
mov
in
jp
aam
mov
add
adc
jp
popa
call
inc
adc
push
lea
pop
int
mov
out
jbe
sahf
ja
mov
dec
xchg
sar
pop
aam
push
ss
xor
hlt
(bad)
scas
jmp
mov
test
clc
dec
ins
mov
test
pop
cmp
(bad)
loopne
rcl
push
push
dec
xchg
adc
jae
pop
or
movs
mov
add
rol
daa
loop
imul
lods
add
mov
scas
sbb
outs
xor
pop
mul
or
inc
jne
fdivr
mov
jle
ret
mov
cmc
lahf
jno
fisubr
repnz
mov
outs
mov
mov
push
(bad)
xchg
(bad)
ins
sbb
rcl
or
ret
cld
(bad)
jns
cmp
push
cmp
cmp
mov
xchg
xchg
push
cmp
inc
jecxz
add
adc
pop
mov
add
push
and
cmp
pop
call
int
ret
pop
pop
dec
mov
aad
ror
jmp
(bad)
inc
(bad)
lods
iret
sbb
mov
add
aad
test
lahf
push
enter
or
enter
ret
sbb
mov
cmp
je
inc
xchg
ret
test
in
loope
test
dec
(bad)
ja
and
mov
mov
shr
adc
ins
inc
adc
test
xor
repz
mov
pop
movs
jg
call
xchg
mov
pushf
add
lahf
shr
(bad)
ret
sbb
(bad)
call
inc
hlt
push
sbb
loopne
call
jl
mov
push
mov
cmp
dec
xchg
imul
xchg
rcl
jne
(bad)
sub
push
add
add
jns
lods
dec
dec
lahf
sar
sbb
stos
inc
mov
sbb
scas
inc
call
lock
jmp
push
std
rcr
or
lods
pop
gs
(bad)
cmc
add
mov
pop
sahf
add
clc
dec
cmp
retf
out
lods
pop
call
dec
fs
sbb
mov
dec
std
icebp
adc
sub
and
je
popa
mov
fs
or
popf
sbb
fwait
mov
call
(bad)
imul
sub
add
xchg
repnz
loop
dec
dec
hlt
cld
xchg
jbe
outs
repz
add
mov
ss
mov
mov
loop
bound
fst
push
xor
xchg
mov
out
inc
sub
dec
mov
mov
mov
xor
xor
sbb
cmp
or
popa
mov
pushf
sub
gs
lahf
push
inc
xor
cs
xchg
leave
xchg
pop
lea
add
xchg
mov
mov
add
fwait
inc
jo
mov
fst
(bad)
xchg
jne
dec
cmps
xor
adc
fcomip
dec
rol
jp
add
cmp
pop
adc
enter
inc
clc
ret
sub
sbb
add
jbe
(bad)
cmp
movs
dec
cmp
sbb
xchg
shl
jmp
jge
inc
mov
push
xchg
adc
push
leave
mov
lock
ins
addr16
adc
fsubr
imul
sbb
in
int
imul
scas
cs
pop
pushf
ss
mov
out
fiadd
mov
arpl
and
add
mov
adc
js
mov
xor
dec
pop
neg
add
data16
jb
ins
and
push
mul
dec
cs
xchg
sub
mov
inc
mov
ret
xlat
pop
pop
cdq
mov
adc
fild
pop
inc
cmp
pop
jle
cld
or
xchg
mov
sub
clc
ja
mov
clc
jne
add
aam
imul
and
inc
lods
dec
inc
cdq
mov
inc
(bad)
mov
les
and
cmp
mov
mov
fdivr
mov
pop
bound
lock
repnz
mov
out
sbb
sub
in
imul
xor
xchg
inc
or
stos
scas
stos
das
cs
push
call
gs
inc
add
add
mov
push
push
mov
sar
or
push
dec
out
mov
(bad)
pop
push
inc
mov
jnp
rcr
sub
ret
in
xchg
popf
mov
inc
movs
test
icebp
std
test
in
(bad)
push
dec
lds
cs
rol
sbb
addr16
stos
push
ss
cwde
fwait
scas
mov
sahf
lea
lahf
lock
add
iret
sbb
inc
jge
mov
int
test
add
or
fadd
cld
gs
test
pop
cdq
mov
push
into
test
mov
push
xchg
lock
fisubr
test
outs
aad
into
inc
or
xlat
int3
stos
pop
fild
and
lahf
or
cmps
outs
sub
sub
cld
enter
inc
inc
pop
adc
xor
sbb
pushf
pop
and
scas
cmps
adc
sbb
lock
cli
jl
jno
jl
mov
mov
and
ror
call
mov
ficom
test
ficom
div
aaa
pusha
cmp
pop
popf
fs
mov
scas
js
aad
leave
repz
ja
loope
adc
adc
fistp
xchg
mov
add
scas
cmps
aaa
nop
int
xchg
bound
dec
sahf
cmc
sahf
imul
mov
call
addr16
mov
and
fdiv
retf
pop
cwde
mov
imul
and
and
add
(bad)
sbb
rcr
jmp
dec
dec
fmul
pop
jle
or
pop
mov
mov
pusha
mov
add
test
mov
fs
pop
pop
addr16
or
push
jmp
push
or
(bad)
mov
clc
dec
test
mov
test
jmp
mov
nop
das
std
dec
pop
mov
push
jo
adc
bound
leave
xchg
pop
sub
jnp
rol
cmc
fs
add
out
push
ds
sbb
or
xchg
dec
inc
call
fsubr
cmps
mov
addr16
out
xchg
ins
retf
xchg
jg
(bad)
loopne
adc
sahf
aam
mov
push
test
clc
scas
xlat
aad
sbb
scas
(bad)
clc
pop
std
sbb
pop
lock
jle
sbb
dec
test
push
test
push
or
out
imul
inc
jb
add
add
adc
call
outs
dec
popf
ins
xor
cdq
and
pop
inc
xchg
out
in
scas
(bad)
sbb
inc
cwde
inc
icebp
(bad)
std
dec
mov
lahf
jb
xlat
shr
popf
cdq
retf
dec
jl
movs
lods
push
or
fld
xchg
mov
sbb
push
or
jnp
xor
ins
mov
js
push
lods
mov
mov
inc
sti
dec
repnz
js
fcomp
fs
sar
inc
and
sahf
add
dec
bound
xchg
mov
jne
push
pop
lahf
stos
cwde
or
cld
imul
xlat
into
leave
gs
mov
add
stc
lea
cli
js
call
sahf
test
(bad)
mov
ret
stos
cmps
jbe
ins
test
psrad
ret
sub
inc
inc
or
sub
mov
ins
mov
xchg
retf
push
sbb
ins
(bad)
stc
jo
fisub
pop
sub
sbb
or
(bad)
sbb
cwde
fs
lods
push
push
movs
stos
fwait
xor
and
dec
popf
lock
in
gs
lea
cmps
xchg
iret
test
adc
xlat
push
div
scas
rcl
mov
sbb
std
fisttp
mov
or
imul
xchg
pop
sbb
jno
ins
mov
fld
mov
fisttp
(bad)
push
pcmpeqd
mov
leave
and
inc
rcl
and
adc
enter
mov
mul
jo
lock
test
(bad)
dec
hlt
cdq
addr16
fisubr
mov
inc
jo
xchg
popf
daa
sbb
les
lods
fild
fs
into
clc
jle
cmp
scas
aas
inc
jae
ja
adc
sbb
push
ret
call
dec
pop
pop
jne
mov
mov
fisttp
adc
xlat
cli
adc
sbb
lahf
not
push
dec
cmp
jecxz
mov
rol
icebp
sub
icebp
or
mov
mov
mov
lock
jne
add
sbb
retf
enter
inc
test
inc
clc
cmp
jp
lds
data16
leave
and
pop
jg
and
xor
int3
arpl
imul
push
push
xchg
push
ret
std
xchg
pop
xchg
cmc
inc
test
pop
mov
repz
dec
loope
pop
das
(bad)
fidiv
xchg
pop
loop
mov
rol
popa
xchg
or
mov
and
fld
addr16
js
pop
and
mov
fild
fisubr
xchg
xlat
inc
outs
add
pop
add
in
push
retf
jge
cmps
imul
mov
fdiv
push
cmc
push
inc
movs
push
sti
lds
jo
xchg
push
or
test
cwde
jp
lea
ret
enter
mov
cmp
cmp
shr
pop
lea
add
pop
push
or
pop
lods
push
out
iret
jno
fst
jl
std
and
arpl
sbb
lss
dec
dec
mov
xlat
dec
pop
cmps
(bad)
xchg
sbb
enter
repnz
(bad)
out
fwait
mov
outs
xchg
mov
mov
xor
test
mov
xchg
mov
sbb
sti
push
out
inc
add
aas
and
mov
iret
sbb
xlat
dec
in
push
ret
jno
adc
and
nop
push
lods
or
popa
jb
push
adc
call
mov
out
inc
jbe
sub
(bad)
cld
sti
push
mov
dec
call
pop
lods
cld
cmps
sar
mov
pushf
js
xchg
ficom
mov
dec
in
jb
and
shl
and
pop
xchg
fs
push
sub
cwde
call
clc
cli
and
or
add
mov
add
mov
xchg
jno
push
pop
cdq
shl
cmp
mov
in
in
add
out
xchg
mov
jle
sahf
mov
scas
test
aam
call
sub
xchg
xlat
pop
out
add
dec
xchg
cmp
cs
mov
cdq
int
add
push
in
outs
push
inc
xor
adc
dec
pop
fbld
sbb
test
loope
push
xor
inc
mov
js
mov
test
loopne
or
retf
inc
movs
cmps
(bad)
adc
mov
cmc
stc
test
mov
or
jecxz
push
jp
cdq
cmp
xchg
xor
retf
dec
or
pop
into
aad
(bad)
shl
push
lds
push
pop
addr16
ins
push
pop
push
xchg
xchg
(bad)
or
sub
out
pushf
cmp
add
inc
sti
rol
fidiv
or
scas
cmp
js
(bad)
cdq
fadd
pop
cmc
test
addr16
adc
mov
push
jle
sar
in
sbb
sub
sbb
ds
xchg
jb
js
mov
push
movs
or
cwde
xchg
sbb
fs
mov
cs
loopne
dec
dec
mov
cwde
xlat
dec
mov
mov
std
mov
out
pop
test
inc
inc
cwde
mov
fnstcw
mov
(bad)
sub
sub
cmp
xor
pop
inc
out
lea
icebp
sub
icebp
pop
bound
sub
push
adc
sbb
ja
scas
cmp
call
out
fsub
loopne
mov
jo
sbb
mov
out
sbb
cld
test
jnp
sbb
add
fcomp
in
fiadd
dec
fist
sti
and
sbb
aas
dec
mov
pop
jae
dec
and
shl
call
add
sbb
pop
mov
fimul
inc
xchg
adc
mov
aad
pop
mov
jl
pop
dec
and
inc
mov
cwde
push
out
call
xchg
sbb
lahf
pop
pusha
mov
int
xor
pop
mov
gs
retf
dec
or
not
inc
sbb
scas
sbb
cmps
cs
test
into
inc
(bad)
rcr
test
dec
ins
add
frstor
adc
push
retf
pop
int
push
cmps
pop
fsub
popa
mov
pushf
cmp
in
sbb
outs
inc
cdq
dec
xlat
mov
xchg
dec
jecxz
dec
cmp
loop
and
jns
movs
test
pop
stos
pop
ins
movs
xchg
enter
nop
mov
dec
sub
out
ds
cs
scas
sbb
inc
(bad)
push
pop
jns
sub
stc
mov
mov
cmp
cmp
scas
jl
xchg
pop
inc
mov
test
ret
stc
movs
xor
jnp
xchg
cwde
ret
inc
adc
push
icebp
out
pop
ffreep
stos
jno
adc
mov
pop
push
mov
retf
std
ret
jg
mov
into
ss
dec
(bad)
mov
cli
and
pop
ins
outs
popf
jnp
push
xchg
stos
movs
mov
repz
enter
and
cmp
bound
imul
pop
xchg
xchg
pop
jb
nop
(bad)
and
das
stos
ret
jnp
outs
pop
arpl
inc
push
movs
fs
xchg
jle
clc
div
mov
out
or
lods
sbb
(bad)
mov
mov
dec
call
imul
sub
sub
push
add
out
mov
mov
pop
fild
pop
sub
mov
push
inc
xchg
or
loope
cmp
outs
(bad)
xor
inc
inc
lods
jle
cdq
shl
loopne
jno
mov
adc
(bad)
lods
jnp
inc
xchg
mov
push
sahf
mov
lock
jg
xchg
call
dec
mov
repnz
lahf
add
pop
test
fs
xchg
mov
jle
mov
mov
jg
pop
inc
ret
inc
push
es
daa
mov
shr
mov
inc
ror
inc
movs
mov
xor
add
scas
mov
xchg
call
jmp
adc
clc
jnp
jmp
imul
js
mov
xchg
fs
(bad)
jnp
loop
xor
sub
or
fist
jns
ins
fwait
outs
push
pop
add
cwde
scas
lea
or
jp
out
jge
hlt
inc
jbe
add
push
add
sbb
mov
inc
mov
push
cmp
ficomp
rol
inc
lea
cwde
sub
cdq
adc
loop
push
sti
ret
shl
clc
mov
xor
repz
call
pop
and
daa
push
fldpi
out
jb
inc
jns
pop
(bad)
pop
pop
mov
jbe
stos
mov
in
and
push
jecxz
adc
or
imul
inc
test
std
(bad)
xchg
xor
inc
adc
icebp
xchg
loop
dec
std
(bad)
mov
inc
adc
stos
rol
(bad)
jns
push
pop
xor
out
cmp
push
inc
cwde
cmp
xor
push
xchg
test
add
dec
inc
inc
inc
(bad)
sub
pop
mov
icebp
inc
fs
dec
add
cs
mov
jno
lods
mov
mov
imul
jno
nop
jne
mov
mov
ret
xchg
inc
ss
shr
pushf
mov
pop
mov
repnz
mov
inc
gs
fld
sub
push
pop
cmp
repz
ss
pop
mov
ss
cwde
mov
leave
data16
jns
retf
push
inc
sti
aas
cmp
sbb
pop
push
sub
test
jge
out
movs
inc
lods
fistp
push
pop
fsub
mov
or
lds
jmp
add
ret
dec
inc
lods
sar
es
(bad)
fst
ss
sub
xor
(bad)
fmul
add
sbb
in
cs
call
dec
xchg
into
add
sub
inc
outs
push
mov
in
inc
dec
mov
test
inc
or
jmp
icebp
inc
inc
pop
sahf
pop
cmc
lods
(bad)
pusha
test
call
jmp
mov
add
das
stc
pushf
xchg
fld
jo
ins
in
sub
enter
es
dec
or
fwait
mov
or
rep
in
or
sbb
pop
ins
jl
sbb
int
(bad)
pushf
or
or
xchg
mov
adc
inc
fist
inc
loope
adc
xchg
je
(bad)
call
mov
pop
add
mov
push
mov
idiv
and
jg
dec
add
push
jne
xor
push
in
xchg
movs
mov
pop
repnz
fdivr
adc
fld
inc
push
sbb
bound
outs
inc
mov
pop
rep
call
mov
hlt
gs
xor
idiv
mov
mov
push
retf
sub
in
mov
test
inc
xchg
lock
cmp
stos
xor
jl
sbb
adc
mov
pop
popf
xor
jno
das
cmps
outs
add
mov
sub
inc
xchg
fld
xchg
inc
dec
data16
fdiv
push
inc
das
xor
cmps
push
push
fmul
mov
(bad)
in
cdq
sub
adc
int3
int3
test
xchg
jmp
arpl
outs
mov
mov
dec
repz
repz
push
mov
mov
ins
mov
icebp
rol
xchg
sub
adc
adc
into
call
sbb
cmp
pop
outs
out
xchg
mov
push
(bad)
mul
cmp
call
xor
dec
push
sub
sbb
into
cmps
outs
and
arpl
fidiv
add
nop
dec
lock
rol
test
mov
lea
dec
dec
lods
mov
clc
test
test
sub
sub
das
test
pop
les
jns
outs
cdq
push
jne
test
cmp
cdq
xor
(bad)
jg
retf
jns
retf
fs
jae
cmps
dec
outs
sbb
xchg
push
leave
jae
bound
pop
inc
aad
push
mov
popf
push
sbb
pop
jmp
repnz
scas
jb
(bad)
repz
mov
daa
retf
fidiv
movs
(bad)
xor
popa
jns
movs
mov
scas
mov
mov
sbb
loop
in
inc
(bad)
aas
fs
pop
std
or
les
iretw
aam
mov
xor
add
adc
lahf
pop
xchg
aaa
mov
jno
imul
addr16
push
jae
lock
out
jbe
mov
or
push
hlt
pushf
pop
xor
cld
mov
mov
stos
jle
inc
test
cmp
test
mov
sar
adc
dec
cmc
iret
fst
inc
inc
and
sub
sbb
rcl
out
(bad)
aas
movs
clc
push
sbb
sbb
cmp
push
mov
mov
lods
xor
jno
and
adc
outs
fild
adc
mov
bound
aam
cmps
sub
add
cdq
add
add
into
les
xchg
and
test
call
inc
sbb
or
test
stos
cwde
lds
icebp
call
ja
inc
out
xor
push
ja
out
inc
shr
imul
addr16
cmps
cli
arpl
adc
btc
gs
push
pusha
or
fnstsw
out
pop
xor
aad
or
dec
mov
inc
sbb
lea
sbb
scas
sub
sbb
ficom
arpl
jle
push
or
xchg
cdq
mov
push
out
in
or
and
xor
add
fist
mov
add
push
dec
cdq
in
mov
rcl
push
push
push
movs
ins
cld
mov
inc
mov
test
aad
bound
leave
(bad)
mov
sti
arpl
in
jmp
(bad)
jge
mov
sar
cwde
lock
mov
push
aaa
leave
fscale
jle
pop
or
mov
push
cmp
mov
nop
xchg
dec
push
les
fsub
cld
jno
push
cmp
and
js
es
inc
scas
and
add
push
and
imul
jg
ftst
and
sbb
push
popf
mov
xchg
inc
jecxz
jno
in
xchg
jmp
xchg
pop
push
sti
(bad)
mov
imul
xchg
xor
pop
aam
daa
aaa
retf
jmp
add
fdivr
pop
jae
jae
push
call
add
add
cli
add
adc
inc
sbb
or
push
test
pop
mov
fs
lods
test
adc
jle
not
mov
pop
bound
mov
push
(bad)
mov
lods
jno
push
xchg
mov
dec
cdq
push
inc
lea
jmp
in
mov
dec
shr
pusha
ret
sbb
pop
cmp
jbe
xchg
mov
and
icebp
push
push
or
xor
pop
inc
mov
push
xchg
shl
rcr
neg
add
fstp
mov
dec
mov
mov
retf
mov
movs
jno
push
mov
lahf
retf
jp
mov
hlt
adc
loope
cli
std
outs
push
xchg
lea
sub
inc
pop
xor
mov
daa
cld
inc
push
cs
mov
push
inc
test
stos
mov
cld
mov
xchg
out
jne
jb
out
push
sub
or
push
adc
mov
xor
push
cld
jns
inc
test
aas
test
out
std
mov
cld
adc
inc
test
mov
jp
test
outs
add
jmp
stc
fidivr
jmp
dec
jmp
adc
popf
and
add
and
mov
sahf
aaa
or
and
sar
sub
push
adc
sbb
imul
add
sbb
mov
inc
sub
fwait
inc
retf
repnz
in
inc
jle
pop
aad
test
repz
ja
mov
bnd
sbb
movs
mov
pop
add
adc
in
loop
test
les
sbb
or
out
jo
cmp
add
push
xor
mov
into
xlat
and
daa
mov
adc
adc
test
xchg
or
sub
das
mov
add
lahf
lds
call
icebp
repz
arpl
jge
lea
in
iret
push
cmc
mov
fsubr
add
inc
fisttp
push
add
cmp
pusha
test
jle
ret
test
or
repnz
cli
pop
inc
push
pop
mov
pop
in
or
ins
(bad)
adc
mov
sbb
test
mov
inc
outs
cmps
pop
lds
test
(bad)
popf
les
dec
test
xchg
cmps
shl
inc
data16
push
cmp
ror
data16
mov
pop
pop
jbe
mov
mov
xlat
dec
sahf
mov
inc
sub
aaa
push
add
push
mov
call
dec
(bad)
xor
scas
mov
and
cmp
(bad)
mov
loopne
popa
push
fdiv
cld
add
repz
adc
fsub
lods
shl
xor
pop
cmp
xchg
icebp
retf
inc
push
sahf
dec
test
into
(bad)
pop
lock
pop
mov
das
adc
mov
mov
jnp
mov
mov
xor
or
sbb
fld
aas
xchg
sub
xchg
(bad)
adc
xor
adc
pop
pusha
scas
jle
(bad)
sar
retf
mov
xor
xchg
inc
fwait
cmps
xchg
enter
add
(bad)
test
imul
(bad)
mov
das
cmp
retf
sbb
adc
or
stos
mov
inc
(bad)
rcl
test
jae
inc
pop
int
pop
jle
xor
iret
inc
pop
mov
jg
shr
in
out
lahf
mov
fs
mov
jle
mov
add
icebp
jmp
rcr
dec
mov
xchg
stos
jmp
das
clc
aaa
sub
aas
inc
jbe
movs
cmovne
jae
pop
in
sub
ret
mov
je
push
push
fstp
add
es
inc
fist
nop
inc
dec
lahf
xchg
test
into
jecxz
stos
fcomp
dec
push
and
ds
mov
or
shl
mov
jge
scas
call
in
retf
inc
dec
icebp
adc
iret
push
and
fnstcw
jnp
pusha
movs
sbb
test
(bad)
imul
loope
ret
and
pop
cli
or
cmp
jns
(bad)
dec
xor
sub
mov
sbb
sub
mov
loopne
jae
shr
test
add
shr
scas
mov
bound
loope
mov
mov
lock
ret
pusha
cld
daa
inc
jg
les
and
mov
mov
retf
mov
jge
js
stc
sbb
mov
adc
movs
jge
shr
jae
xchg
jmp
test
push
cmc
cmp
mov
mov
rcr
xor
data16
jge
cdq
mov
cs
(bad)
repnz
ss
pop
std
dec
sub
pop
fisttp
jnp
loopne
adc
mov
add
pop
(bad)
jecxz
popf
icebp
inc
inc
or
loopne
or
add
sub
and
push
lods
inc
push
xchg
jae
(bad)
or
add
scas
test
mov
jns
mov
and
mov
neg
xchg
pop
sub
jge
fisub
lock
ins
jp
xchg
pop
rcr
daa
push
mov
addr16
ins
ficom
jbe
movs
dec
aas
or
xchg
mov
xor
ror
xchg
repz
jg
and
outs
push
test
popa
jno
inc
cmp
das
dec
cwde
rcl
icebp
out
leave
sar
inc
lahf
outs
sbb
inc
xor
nop
addr16
pushf
mov
pop
mov
mov
test
sti
jnp
mov
dec
cmp
fcomp
add
pop
std
push
xor
call
and
repz
imul
and
imul
push
mov
mov
jmp
shl
cmp
(bad)
ins
sub
adc
movs
inc
sbb
aam
jno
xchg
inc
dec
cwde
stos
lock
sbb
repnz
sub
dec
in
sub
dec
fist
imul
pop
stos
xor
jmp
movs
mov
add
jp
mov
clc
arpl
cmp
je
call
imul
jo
mov
ins
push
sub
out
shl
adc
and
add
xchg
movs
addr16
cmc
cmps
mov
mov
in
stos
jnp
cmp
test
loope
imul
rcl
lods
jns
xor
push
mov
aaa
inc
jo
sar
enter
fcomp
inc
fisttp
pop
xor
cmp
movs
jp
aam
jno
fcom
les
add
jp
mov
cmp
sar
push
jmp
pop
test
mov
dec
in
mov
sbb
cmc
lock
(bad)
mov
mov
cld
dec
or
(bad)
not
ja
xor
xor
pop
inc
shld
cwde
jmp
and
inc
sub
mov
(bad)
add
adc
or
shl
test
cmp
mov
push
jl
jo
(bad)
jmp
(bad)
xor
fbstp
mov
hlt
lock
in
test
clc
push
retf
out
pop
in
sbb
inc
ficom
pop
push
mov
popa
mov
imul
es
push
pop
or
ficomp
ins
pop
adc
mov
or
addr16
pop
inc
hlt
into
xchg
inc
mov
popa
xchg
jle
push
shl
cmp
dec
loope
arpl
mov
or
pop
or
in
test
mov
mov
(bad)
cmp
cmc
shl
and
outs
xor
or
stos
into
mov
in
cmp
pop
and
ss
sub
adc
pusha
pop
(bad)
push
adc
fwait
xor
dec
jle
in
popf
add
sbb
ficomp
(bad)
cli
jns
sar
mov
popf
adc
(bad)
pop
push
cmps
stos
out
adc
fld
jp
lahf
push
cli
gs
adc
cmp
lock
inc
stc
push
jl
jnp
or
push
push
dec
xchg
lahf
iret
mov
jmp
push
push
popa
add
pop
es
pop
sbb
mov
inc
cdq
sar
cld
int
add
lea
test
nop
loop
lahf
loope
adc
cdq
jnp
jmp
stos
fdivp
cmp
stos
xor
leave
xlat
(bad)
je
aad
out
scas
sbb
or
add
ds
outs
pop
jne
push
pop
inc
mov
lods
stos
or
cld
jnp
fst
mov
dec
pop
add
hlt
and
and
and
adc
dec
jg
mov
imul
imul
push
cmps
ss
aam
cmps
(bad)
mov
and
rol
xchg
int3
push
mov
add
call
pushf
push
iret
pop
scas
xor
push
xchg
rol
push
inc
mov
arpl
mov
sub
jle
retf
aam
inc
push
sub
sbb
sub
fmul
shr
jne
mov
aas
pushf
in
cdq
add
pop
bound
jne
fwait
bnd
sar
cld
test
stos
das
out
add
test
sti
rol
(bad)
dec
inc
jmp
fmul
cmp
fprem
shl
jge
aas
les
sbb
outs
cmp
mov
data16
add
lock
addr16
sub
adc
rcr
pushf
push
movs
or
mov
inc
rol
add
sbb
in
cli
cmp
jecxz
push
aad
mov
in
scas
mov
pop
pop
movs
enter
sti
loop
lods
fisubr
scas
xor
iret
adc
dec
retf
xchg
hlt
pop
cwde
pop
pop
sbb
pop
pop
push
mov
mov
(bad)
cmp
int
xor
ss
push
popa
xor
mov
mov
cwde
fs
test
ins
mov
cwde
sti
cdq
and
jnp
call
mov
push
(bad)
stos
sub
mov
add
pop
aam
test
aad
push
push
stos
dec
or
jmp
cs
les
cmp
mov
sahf
aam
sahf
into
bound
cmc
push
jae
add
lea
shl
mov
dec
stos
imul
stos
pushf
aaa
adc
xchg
adc
dec
pop
adc
(bad)
and
popf
add
jmp
jge
lods
mov
dec
mov
pusha
in
xchg
mov
cmp
and
mov
scas
jge
and
mov
aaa
jl
mov
int
add
push
mov
adc
sub
aaa
xor
mov
cmps
addr16
mov
pop
test
and
ficomp
sar
mov
fsubr
test
pop
push
sti
lock
jbe
pop
test
sbb
gs
mov
and
jns
dec
cmc
adc
dec
ror
loop
loope
jo
dec
movs
sbb
jno
arpl
jbe
fstp
cdq
mov
mov
sub
pop
adc
or
sahf
sub
fcom
xor
in
in
int3
jmp
jnp
sub
test
cmp
xchg
pop
adc
(bad)
je
mov
jp
mov
xor
dec
jmp
xlat
pop
sbb
cdq
inc
jne
inc
mov
ins
pop
inc
mov
inc
in
sbb
fiadd
jg
clc
inc
sub
inc
xchg
sub
dec
adc
cmovne
add
and
sbb
cmps
das
cwde
fist
pop
and
bound
out
sbb
icebp
mov
rcr
mov
aam
mov
mov
cmps
stos
shr
test
inc
xchg
push
icebp
or
pandn
fild
sbb
jg
push
sbb
or
push
int3
dec
shl
sub
in
inc
inc
jle
call
xor
dec
inc
mov
pop
out
xchg
clc
cmp
or
fstp
jmp
addr16
mov
inc
mov
mov
neg
icebp
ja
add
xchg
mov
cmc
mov
(bad)
imul
popa
cmc
pop
fisttp
adc
out
repz
in
cmp
bound
push
jno
retf
sbb
out
std
hlt
add
pop
leave
xor
inc
or
sbb
adc
ss
mov
and
(bad)
jecxz
sahf
retf
push
stc
jns
jg
dec
in
retf
data16
xchg
popf
imul
mov
push
xchg
loop
mov
es
xchg
loope
inc
in
fist
push
rcl
pop
sub
add
xor
push
sub
cdq
mov
inc
lahf
idiv
std
pop
popa
or
leave
inc
cmp
pop
lods
and
push
xchg
dec
jns
into
mov
and
pop
imul
jecxz
xchg
mov
add
jecxz
cmp
ins
icebp
xchg
add
je
inc
xchg
test
fisubr
(bad)
data16
xchg
mov
ror
out
mov
or
jmp
cmp
pop
push
fs
fst
sbb
jne
popf
xchg
mov
out
sbb
sbb
xor
popa
adc
cmc
cmp
jb
inc
pop
mov
jae
mov
retf
(bad)
mov
loop
gs
fisub
pushf
jecxz
mov
movs
pop
sub
fsub
pushf
adc
mov
arpl
and
ret
dec
mov
push
hlt
xor
sbb
pop
int
ror
push
jbe
mov
imul
xchg
ret
sub
xchg
add
push
int
bound
mov
pop
inc
mov
mov
pop
cmps
mov
fsubr
mov
mov
jg
stos
dec
jmp
loop
lahf
(bad)
popf
dec
ret
add
retf
out
push
mov
(bad)
mov
test
aam
xor
mov
outs
leave
xor
cmp
retf
jecxz
push
jg
mov
jns
ins
cdq
mov
popf
inc
pop
stc
jl
lock
sar
adc
pop
imul
mov
mov
icebp
push
dec
fnsave
mov
jns
mov
outs
cmp
jg
cld
pushf
inc
pushf
jmp
dec
mov
test
loopne
sbb
inc
xchg
mov
inc
mov
(bad)
ret
fnstcw
fwait
mov
sub
test
fild
aaa
dec
mov
dec
sub
xchg
(bad)
scas
xor
aam
ret
popf
repnz
add
imul
pop
retf
push
jb
jne
nop
adc
mov
and
cmp
push
cld
pop
push
push
mov
jno
in
jge
loop
add
ret
lahf
or
jmp
mov
addr16
leave
ret
jae
scas
cwde
xor
xor
call
push
pop
daa
mov
sub
xchg
aaa
pop
hlt
push
retf
pushf
(bad)
pop
push
jp
mov
es
cmp
push
mov
adc
cs
push
ins
cli
fdivr
pop
pop
and
pop
loop
test
sub
les
mov
inc
lea
loop
ret
jnp
lahf
pop
nop
outs
dec
fld
xor
inc
cmps
xor
mov
xchg
mov
aaa
pop
out
ja
ficom
(bad)
repnz
jae
cmp
inc
sub
sub
xchg
mov
mov
in
mov
fdivr
push
ficom
add
lock
inc
sbb
mov
call
ret
in
xchg
hlt
ror
mov
push
iret
dec
cmps
adc
dec
shl
dec
into
and
sub
add
mov
add
dec
cwde
loop
mov
inc
jl
pop
(bad)
push
fs
das
cmp
aad
adc
jne
cmps
push
sbb
push
xor
xchg
cmp
push
inc
inc
and
ror
neg
and
mov
mov
pop
sbb
jmp
xchg
test
sub
add
mov
pusha
dec
ficomp
dec
jnp
jnp
jne
mov
imul
add
add
and
jl
sbb
retf
pop
bound
scas
mov
inc
xchg
shl
daa
stos
test
test
dec
popf
scas
cmp
xor
les
stos
mov
cmps
dec
pop
movs
test
add
sar
lods
rep
pop
sub
add
mov
push
cwde
sbb
sbb
ins
push
adc
push
repnz
xchg
jecxz
stos
mov
dec
pop
inc
clc
adc
jne
sub
push
push
mov
pop
test
stos
sbb
pop
aam
call
dec
jns
sub
jmp
mov
jmp
fadd
xchg
popf
ret
push
mov
sbb
sub
push
xchg
jl
dec
push
das
mov
cmp
jle
bound
pusha
cmc
movs
lea
mov
pop
add
dec
sysret
jmp
mov
mov
jp
xor
out
xchg
sbb
dec
pusha
fsubr
fiadd
xchg
imul
gs
mov
pusha
arpl
mov
and
and
fstp
std
and
dec
jbe
cmp
gs
jne
sbb
cli
loop
les
cmc
aaa
cmp
addr16
stos
adc
scas
movs
test
fsubr
sub
jmp
ins
fnstenv
iret
mov
out
or
jecxz
sub
je
cld
cmps
out
or
fidiv
mov
std
cmp
(bad)
push
jmp
aam
pop
ror
sbb
mov
jns
dec
mov
cmps
mov
cld
(bad)
adc
fidiv
xor
cmp
test
xor
in
mov
enter
int3
fild
dec
cmp
dec
mov
jl
(bad)
in
push
movs
jmp
out
pushf
pusha
das
(bad)
jmp
fdivp
cmp
pop
jmp
sbb
hlt
iret
mov
into
xor
cmp
xor
mov
add
inc
leave
(bad)
addr16
inc
mov
pusha
mov
test
mov
dec
mov
adc
(bad)
in
add
loopne
loope
xchg
int
imul
arpl
pop
xor
mov
clc
pop
scas
test
or
int
push
jle
lea
sub
cmp
sti
inc
rcl
pushw
jns
sub
sbb
mov
iret
jp
(bad)
js
out
jns
or
ds
ds
sbb
sub
add
into
mov
pop
adc
stos
out
call
mov
mov
test
mov
add
sti
mov
xchg
gs
fyl2x
cmp
xchg
jl
mul
sbb
pusha
gs
cmps
push
rcl
and
mov
jmp
add
or
or
in
lahf
into
mov
loopne
cmp
add
add
push
cld
pop
adc
and
mov
sbb
mov
jns
jae
dec
sti
mov
dec
pushf
out
out
icebp
cdq
jl
fst
mov
retf
(bad)
mov
jne
fdivp
and
xchg
add
mov
pop
jmp
ds
xlat
loopne
out
jnp
addr16
jno
sete
(bad)
imul
inc
jg
add
aaa
cmp
popa
mov
mov
scas
push
or
cmps
xor
xor
cld
cmc
mov
leave
popa
pop
xchg
mov
xor
clc
dec
push
icebp
vmovups
in
sbb
push
addr16
int
lock
les
scas
dec
lds
scas
adc
inc
jmp
inc
jno
jns
dec
mov
aaa
icebp
push
loop
pop
fcmovne
add
mov
pop
xchg
push
retf
inc
outs
cmps
outs
push
xlat
and
scas
mov
pop
pop
addr16
mov
xchg
mov
imul
in
inc
(bad)
xchg
add
cld
add
movs
cld
les
cmps
xchg
mov
add
test
lahf
fadd
xor
mov
sbb
or
mov
mov
sbb
sbb
jmp
push
pop
adc
stos
or
push
lea
popf
and
test
and
add
les
out
outs
jge
sub
mov
push
ja
shr
mov
inc
add
pushf
repz
stc
lock
fsub
dec
pusha
add
cmp
ret
xor
xor
push
pop
mov
mov
adc
stc
ins
fucomip
adc
inc
mov
and
jo
lea
into
sbb
mov
or
rcl
fstp
pop
popa
movs
ss
stc
inc
out
mov
hlt
in
or
fist
test
out
mov
mov
into
jecxz
hlt
call
push
fld
cmc
adc
out
mov
inc
xchg
inc
sub
outs
push
pop
mov
popf
cwde
mov
pop
iret
inc
retf
test
jne
jno
mov
gs
sbb
fstp
jb
adc
scas
cmps
cwde
sbb
and
(bad)
leave
adc
dec
test
test
mov
popf
jge
aad
adc
sbb
sub
xchg
add
fsub
clc
stc
shl
ja
mov
xor
dec
fild
and
fs
jg
mov
jae
mov
rol
(bad)
cmp
addr16
jmp
aaa
mov
jmp
dec
bound
add
idiv
out
pop
jns
outs
cli
mov
mov
pop
repnz
mov
pop
sbb
es
xchg
lods
mov
not
sub
jmp
rol
jge
cmp
jnp
jb
popa
cdq
cmp
iret
idiv
test
popa
push
pusha
add
and
dec
add
inc
ja
outs
sbb
test
aas
inc
push
xor
out
jge
pop
jnp
mov
enter
xchg
jge
lahf
inc
and
mov
lods
scas
mov
pop
out
xchg
mov
mov
or
call
cmp
leave
in
fs
xor
and
js
jp
mov
(bad)
jge
mov
ret
dec
sbb
loop
adc
or
jg
dec
adc
cmpxchg
cmp
retf
add
rcr
nop
inc
loopne
fidivr
test
mov
out
popa
xor
call
pop
jns
ficom
lock
cli
pop
pop
lods
mov
push
sbb
retf
js
aas
inc
pop
dec
(bad)
or
out
mov
into
dec
out
enter
movups
cli
inc
or
mov
pop
addr16
pop
aam
pop
xchg
xchg
stc
sbb
pusha
out
std
xchg
sub
mov
imul
das
lock
dec
in
jmp
push
sti
xlat
std
cmp
inc
scas
mov
btc
xchg
enter
(bad)
cmps
xor
pop
cli
and
call
cmp
mov
or
mov
(bad)
jge
mov
mov
jp
pop
pop
shl
jne
adc
outs
pop
sahf
jg
mov
in
aas
(bad)
(bad)
xor
pusha
dec
adc
cmp
dec
nop
mov
stos
jo
inc
xchg
xchg
push
movs
xchg
cmc
cmp
jmp
mov
(bad)
pusha
sbb
retf
push
shr
fnstcw
jecxz
dec
and
sbb
arpl
lea
jge
and
mul
push
add
adc
fwait
pop
int
rcr
ficomp
mov
mov
adc
gs
xchg
xchg
retf
add
pop
pop
and
fsub
ret
fld
(bad)
lea
pop
je
mov
cld
mov
mov
dec
repnz
div
int3
jb
cmp
cmp
sub
aaa
pop
popf
mov
outs
out
fimul
cdq
mov
pusha
inc
or
sbb
imul
push
mov
mov
push
lahf
test
ins
ret
add
je
test
ins
fwait
iret
movs
inc
pushf
movs
inc
push
jmp
mov
(bad)
dec
mov
lods
loope
mov
mov
fadd
xor
dec
lock
push
sub
into
(bad)
daa
std
cmp
sbb
movs
xor
mov
(bad)
adc
inc
mov
and
sbb
rcl
mov
push
xchg
lods
xchg
or
imul
jmp
test
arpl
inc
in
call
(bad)
movs
cmp
dec
mov
xchg
pop
movs
mov
aad
repnz
push
fwait
ret
dec
jecxz
stos
xor
pop
int
leave
inc
fimul
cmp
or
out
fwait
xchg
xchg
push
sbb
push
loope
aas
pushf
fld
xor
xchg
push
leave
jbe
arpl
push
add
dec
jne
cmp
cmps
xchg
sbb
(bad)
jno
add
shl
xchg
jb
mov
je
(bad)
inc
mov
js
shr
mov
xor
test
sub
daa
sar
pop
and
mov
call
cmp
add
inc
and
sbb
nop
outs
cmp
test
in
popf
and
add
jge
(bad)
mov
jecxz
inc
icebp
mov
scas
and
dec
mov
stos
ins
pusha
mov
rcr
adc
jae
mov
and
in
inc
clc
push
pop
jle
shr
daa
lods
ja
jl
xchg
inc
iret
(bad)
jl
fadd
pop
pop
and
add
add
mov
data16
inc
sbb
sub
sbb
xor
cmps
loopne
leave
cld
push
lds
jl
popf
dec
stc
mov
arpl
out
and
fnstcw
mov
adc
push
dec
lahf
and
bnd
lods
aam
les
neg
add
(bad)
jb
and
add
jns
outs
sbb
scas
dec
cmp
jg
ret
pop
ror
sbb
cmp
imul
and
mov
jecxz
xchg
(bad)
clc
jle
dec
add
dec
icebp
xchg
cmp
call
push
adc
call
mov
mov
push
test
fsubr
mov
adc
or
enter
inc
addr16
movs
cs
pop
sub
mov
pop
(bad)
popa
cli
retf
jo
(bad)
jb
push
adc
xor
lods
sbb
inc
mov
jae
cmps
mov
and
pop
jmp
ins
inc
xchg
test
and
out
xor
loopne
and
ja
mov
sbb
mov
xor
scas
push
push
sbb
enter
add
fdivr
pop
pop
stc
inc
or
out
cmps
call
rcr
je
(bad)
push
and
pop
mov
clc
jp
scas
push
adc
mov
adc
fild
push
pushf
arpl
jle
sub
movs
mov
arpl
cmps
jl
(bad)
std
xchg
das
out
inc
fwait
imul
push
mov
mov
mov
mov
dec
add
dec
out
add
jge
das
add
dec
add
sahf
stos
or
mov
outs
push
sbb
aas
sub
cmp
sbb
fs
adc
xor
pop
inc
idiv
mov
xchg
clc
jno
outs
push
inc
mov
dec
cmps
mov
adc
test
sti
pop
idiv
inc
inc
cmps
xchg
scas
add
mov
jmp
(bad)
ds
out
lahf
dec
int
rcr
mul
xor
xor
xchg
xor
or
dec
and
add
add
inc
xor
pop
xor
inc
xchg
sub
add
jne
xlat
cs
mov
sub
call
retf
jo
sub
xchg
leave
cmp
movs
push
and
pushf
hlt
sbb
ins
push
mov
and
call
fwait
imul
scas
or
sar
xor
sbb
outs
mov
pushf
cwde
mov
or
pop
sahf
xlat
cs
jo
or
and
ds
mov
call
sbb
mov
aam
fwait
xor
push
jno
jno
mov
mov
dec
repnz
test
xor
mov
nop
adc
fprem1
jl
test
dec
xlat
sub
or
es
lock
lock
dec
fidiv
imul
xchg
pop
fdivr
xor
fiadd
inc
sub
mov
push
ror
ror
sahf
mov
jno
xor
scas
loopne
fistp
ins
lods
push
les
xchg
popa
nop
jmp
xchg
imul
push
in
lods
arpl
shr
out
lock
lods
lea
rcl
cmp
mov
fnsave
inc
add
push
movs
arpl
jno
test
retf
test
leave
retf
jne
loope
or
sub
inc
je
inc
cmp
lahf
or
adc
hlt
mov
mov
jbe
inc
jg
mov
inc
adc
push
aad
jge
int3
movs
xchg
add
imul
scas
jle
xchg
(bad)
lods
pusha
pop
leave
jecxz
test
fs
int3
or
add
les
add
push
js
inc
cmp
mov
outs
(bad)
and
add
add
push
sub
jmp
dec
test
mov
inc
call
or
lods
cmps
pop
(bad)
ror
xchg
cmp
addr16
sti
push
(bad)
popf
or
in
adc
sahf
mov
add
hlt
(bad)
pop
mov
test
jmp
ret
pop
xor
pop
inc
and
arpl
test
fs
stc
add
push
inc
call
sub
ss
sub
xor
inc
test
push
jmp
xchg
fcom
fistp
nop
dec
enter
xor
adc
aam
xor
sbb
and
fisub
xchg
repz
lea
adc
ds
fs
or
packssdw
push
push
add
and
pop
sar
push
call
sbb
xor
out
inc
rcl
adc
inc
xchg
adc
xchg
xchg
test
sub
call
aad
dec
jno
pop
fidiv
xchg
in
pop
or
into
inc
icebp
fwait
stos
stc
push
call
and
cld
stc
out
fldenv
gs
scas
cmp
imul
xlat
mov
sahf
cmp
pusha
cmps
pop
sbb
ja
jb
xchg
xchg
mov
std
enter
jp
pop
inc
fidivr
sbb
js
and
sub
sbb
dec
sub
in
adc
outs
(bad)
xchg
mov
imul
ins
aad
in
jmp
mov
mov
fimul
imul
outs
mov
imul
test
fwait
cmp
push
repnz
cs
fimul
sub
sub
push
mov
jp
call
into
retf
loopne
adc
clc
or
inc
jb
mov
pop
pop
mov
jne
mov
loope
xchg
add
sbb
mov
(bad)
(bad)
xchg
inc
mov
scas
xor
pop
test
jge
in
ret
adc
std
mov
loopne
pop
or
or
(bad)
int
lock
push
sub
sahf
cmp
jl
pushw
jl
mov
aad
leave
out
pop
mov
xor
sbb
push
sbb
sub
ja
jns
mov
lods
add
cmp
fsub
add
fmul
in
adc
dec
idiv
mov
icebp
inc
xchg
stos
mov
sbb
cmp
fadd
jmp
pop
pop
loop
iret
pusha
sti
sbb
inc
shl
pop
ins
mov
mov
call
jnp
xlat
ins
push
imul
sub
das
sbb
js
mov
inc
in
scas
rdpmc
xor
jmp
dec
add
inc
xor
repnz
movs
mov
mov
xchg
dec
loop
stos
cmp
aad
scas
and
ins
retf
sub
or
(bad)
(bad)
add
sub
cmp
sub
int
push
(bad)
fisub
cld
pop
dec
pop
add
cmp
pop
cwde
add
push
sub
stos
rol
fsubr
mov
fistp
pop
lahf
cs
fsub
pusha
loopne
jmp
push
(bad)
fdiv
sub
push
mov
pushf
jecxz
rcr
jle
test
xchg
(bad)
pop
jp
lahf
dec
in
lods
adc
(bad)
test
fs
lahf
sub
jne
push
add
mov
stc
imul
sub
in
inc
outs
inc
inc
out
adc
or
cmp
fist
fisttp
push
mov
push
lahf
mov
arpl
idiv
test
sub
inc
jmp
(bad)
dec
cmps
lock
call
(bad)
xchg
xor
test
outs
mov
fdivp
mov
aad
jnp
ficom
jb
dec
pop
or
shl
pop
fwait
pop
push
push
inc
add
test
or
retf
mov
inc
push
leave
fs
xchg
mov
or
jg
mov
mov
mov
sub
push
inc
inc
push
rcr
les
movs
in
sahf
push
xchg
mov
cmps
adc
stc
fld
cwde
mov
push
inc
call
cmp
movs
jp
jne
or
fild
jns
sbb
mov
jb
mov
mov
std
jecxz
mov
or
sbb
cmp
jae
pop
jns
pop
dec
retf
mov
mov
out
xchg
inc
into
sar
add
call
repnz
inc
frstor
cmp
jns
stos
mov
pop
in
xchg
stos
and
neg
cmp
(bad)
cmc
sub
jbe
inc
add
cmp
sbb
arpl
retf
or
int
in
xchg
adc
dec
jmp
cmp
sub
dec
js
jg
test
clc
pop
add
pushf
pop
mov
(bad)
fimul
pop
xchg
jecxz
clc
pop
test
xchg
push
cs
inc
mov
(bad)
cmp
mov
xor
leave
test
in
sbb
fidiv
shl
sbb
inc
in
add
or
push
push
cdq
mov
leave
dec
(bad)
mov
test
pop
mov
mov
adc
inc
or
pop
popf
mov
sbb
push
inc
jmp
xchg
push
mov
or
jnp
and
imul
retf
dec
out
mov
aad
pop
xor
call
mov
cwde
les
sbb
movs
mov
push
aam
sub
in
cmp
int
out
and
sbb
push
jl
sbb
mov
ret
adc
pop
(bad)
add
pop
les
mov
pop
outs
fstp
sub
retf
test
mov
jo
mov
pop
xchg
in
mov
std
movs
gs
rol
add
inc
idiv
pop
mov
loop
movs
enter
adc
cs
(bad)
xlat
push
fnsave
jl
dec
(bad)
pop
inc
mov
mov
mov
pop
int
fcmovnu
and
out
dec
adc
mov
xor
outs
adc
jne
xchg
mov
shl
adc
leave
pop
jmp
iret
mov
mov
inc
call
cli
mov
repnz
shr
out
xchg
gs
loope
(bad)
hlt
xor
addr16
xor
adc
jmp
jle
pop
gs
and
ss
jp
cmp
xor
push
cld
and
push
xor
mov
mov
mov
js
aam
bndldx
(bad)
jmp
mov
inc
dec
mov
inc
mov
mov
iret
cdq
sbb
neg
stos
cwde
loope
add
mov
test
sbb
or
and
ds
jbe
mov
js
push
mov
jmp
sti
into
xor
xor
push
pop
mov
inc
dec
fwait
ja
xchg
and
mov
push
shr
add
pusha
push
jnp
jnp
mov
sahf
outs
shl
jno
mov
mov
xchg
sbb
mov
addr16
xchg
or
out
mov
mov
pop
lds
int
pop
adc
and
cmp
outs
pop
jg
fwait
test
sub
mov
retf
mov
aad
xor
and
cmp
cs
js
xchg
imul
mov
add
pushf
dec
mov
pop
jno
push
xchg
loope
pop
hlt
mov
pop
mov
mov
xchg
push
call
jp
cmps
lods
cmp
leave
(bad)
cwde
popa
(bad)
cmps
and
(bad)
jge
sbb
pop
mov
data16
pushf
mov
in
icebp
sar
push
inc
push
add
and
gs
add
sbb
fsubr
xor
mov
stos
outs
push
and
ficomp
inc
push
jbe
jp
mov
pop
xchg
mov
adc
mov
movs
daa
in
inc
nop
call
xchg
xchg
scas
rol
jnp
inc
mov
pop
pop
idiv
int3
push
ret
xor
xor
sub
push
xchg
mov
in
es
outs
jg
pop
(bad)
es
test
cld
sbb
lahf
push
or
cmps
ins
and
gs
jmp
sub
std
jle
ins
add
lods
push
cmc
mov
xchg
je
mov
(bad)
mov
fstp
movs
les
test
xchg
pushf
inc
(bad)
sub
repz
test
fcom
pop
ja
test
xor
pop
scas
sahf
mov
popf
nop
jge
fisttp
inc
jp
fidiv
xor
and
mov
mov
xchg
push
xor
xchg
shrd
loopne
inc
and
dec
(bad)
movs
inc
loopne
adc
mov
add
stos
xchg
adc
mov
jns
fisubr
(bad)
gs
mov
or
ror
jecxz
cdq
pop
pop
sbb
bound
fnstcw
outs
(bad)
repnz
pop
int
push
sbb
pop
cmps
dec
lahf
jl
xchg
cbw
lods
movs
sub
dec
pop
fdiv
pushf
adc
cmovne
jae
loope
adc
mov
mov
call
leave
or
mov
mov
nop
mov
dec
add
mov
add
loopne
push
push
mov
aam
(bad)
fsubr
xchg
lea
pop
cmp
adc
jg
pop
mov
mov
rcr
pop
sbb
mov
retf
test
adc
aad
loop
test
mov
and
xchg
gs
fcom
inc
add
mov
lea
or
mov
fadd
and
jg
xor
aas
pop
xchg
or
rcr
mov
sub
adc
loop
mov
mov
add
mov
pop
int
mov
mov
push
inc
sbb
test
loop
adc
mov
mov
(bad)
pop
fimul
lahf
mov
ds
fist
mov
out
ds
icebp
mov
sbb
sub
jne
outs
or
cmps
adc
xchg
mov
xchg
ror
jnp
rcl
inc
adc
cdq
and
mov
aad
push
xchg
cwde
xchg
adc
or
hlt
out
and
pop
gs
push
xchg
jmp
jmp
icebp
or
ja
adc
dec
fadd
pushf
test
sbb
and
test
jae
or
dec
mov
fnstenv
sbb
cmp
push
pop
pop
mov
movs
mov
push
cdq
(bad)
mov
ficom
sbb
adc
int3
jg
or
adc
mov
push
int
mov
jmp
add
movs
and
mov
cmps
or
xchg
inc
es
fld
lea
inc
xchg
mov
xor
push
inc
adc
pop
sub
clc
enter
add
pop
jle
je
jo
add
xchg
jmp
or
daa
pop
bound
add
bound
or
xchg
test
or
jae
clc
mov
pushf
fistp
outs
sub
call
xchg
je
fistp
mov
(bad)
call
stos
loop
pop
dec
mov
std
xor
por
test
int
jbe
cmp
jno
dec
mov
pop
test
out
daa
fisttp
fistp
cmp
aaa
mov
imul
arpl
xor
mov
test
data16
and
test
in
mov
pop
lock
pop
mov
xchg
adc
cmp
mov
fist
(bad)
jle
inc
inc
aas
jo
pop
pop
pop
cld
push
mov
(bad)
out
and
add
in
or
add
dec
inc
mov
add
xor
hlt
jmp
add
sbb
ret
movs
xchg
fbstp
adc
xchg
sti
test
dec
test
loope
xchg
xor
(bad)
retf
lods
mov
inc
arpl
out
pop
xor
hlt
retf
jg
sbb
cmp
adc
outs
mov
mov
scas
push
sbb
push
call
inc
adc
mov
pop
imul
test
xor
add
dec
je
pop
shl
lahf
pop
int
inc
push
shl
nop
and
mov
stos
add
mov
cmp
in
lds
mov
sub
daa
mov
fcom
add
aaa
sbb
push
cmps
xchg
fwait
(bad)
sbb
(bad)
fs
fbstp
stos
fstp
add
lds
adc
push
sahf
aaa
mov
adc
cmove
cld
arpl
and
jmp
sbb
push
shl
xchg
jmp
mov
mov
mov
stos
cmps
leave
dec
test
inc
xchg
stos
mov
add
shr
mov
push
sbb
jnp
add
fist
dec
outs
mov
sub
retf
xor
lods
popa
sahf
retf
dec
jae
retf
sbb
pop
or
mov
inc
inc
cmps
jno
mov
xchg
jno
push
ins
(bad)
mov
and
fbld
dec
jbe
dec
shl
jno
mov
push
fdivp
xchg
js
mov
push
add
cdq
mov
cmp
test
push
(bad)
sub
ds
out
jecxz
out
arpl
mov
add
pushf
lea
jmp
push
inc
push
mov
xor
aaa
in
aaa
mov
mov
pop
xchg
xchg
mov
sbb
pusha
test
popf
add
inc
inc
pusha
lods
popa
(bad)
fst
repz
pusha
xlat
in
pop
(bad)
in
mov
dec
outs
sahf
mov
f2xm1
mov
inc
pop
xchg
cdq
push
aad
stos
add
jmp
fstp
add
pop
addr16
adc
iret
and
out
std
xchg
sbb
popa
xor
xor
pop
and
scas
sbb
data16
pop
xor
xchg
loope
cmp
loopne
cmps
add
dec
ins
mov
nop
loop
mov
sahf
jns
(bad)
clc
xchg
jp
dec
xchg
in
mov
mov
mov
movs
out
mov
mov
in
pop
pop
dec
xor
jl
inc
push
sbb
push
scas
jne
jle
stos
scas
mov
out
or
imul
int3
je
outs
xchg
cmp
push
cmp
pop
cdq
repz
adc
cld
jle
outs
dec
bound
and
icebp
mov
push
stc
retf
shl
mov
gs
xchg
mov
cmp
inc
popa
pushf
scas
je
pop
imul
pop
sbb
aam
fs
ds
xor
push
sub
lods
mov
cmp
stc
inc
cld
xlat
or
push
fadd
jae
push
mov
xchg
and
and
mov
pop
and
aam
cmp
jo
test
cmps
stc
pop
pushf
int
dec
cmc
mov
test
in
lock
fnsave
sti
nop
mov
xor
jns
pushf
mov
cmc
push
daa
push
sub
enter
ds
cmp
pop
xchg
ins
es
out
mov
dec
jmp
ss
sbb
sub
xchg
daa
shr
test
ins
mov
push
test
addr16
jecxz
leave
std
push
ret
jge
push
fisttp
(bad)
fistp
hlt
in
mov
jns
mov
movs
xor
push
call
add
cld
sti
clc
out
jecxz
pop
mov
ins
out
in
cmp
loop
inc
aas
inc
lea
inc
jnp
add
(bad)
cs
fmul
sar
mov
imul
cs
cmp
adc
bound
push
xor
stc
ins
push
and
mov
popf
hlt
dec
clc
adc
jmp
push
xchg
mov
xchg
hlt
js
cwde
fistp
mov
(bad)
stc
mov
jmp
push
(bad)
dec
sbb
imul
inc
add
xor
pop
mov
xor
iret
xor
icebp
or
push
inc
hlt
inc
adc
sub
addr16
outs
add
mov
cmp
stc
xchg
and
pop
push
movs
dec
aad
out
sti
test
(bad)
add
rol
mov
xlat
icebp
mov
les
out
fadd
pop
enter
imul
aam
int3
and
and
or
push
jg
les
push
out
xlat
cmp
jecxz
inc
popa
sub
inc
sub
daa
push
stos
sbb
push
pop
mov
popa
out
rol
jmp
imul
push
cld
xchg
test
nop
or
aam
mov
lods
mov
push
mov
call
push
icebp
pop
icebp
adc
(bad)
int
icebp
es
add
fsubr
jp
push
sbb
fstp
jbe
int
test
jns
pop
sbb
sbb
push
jb
mov
ins
dec
xchg
test
movs
cwde
sti
adc
cmp
icebp
xchg
push
fmul
pop
push
sub
sub
iret
fiadd
retf
cmc
mov
xchg
xchg
push
cmp
hlt
pop
mov
pop
mov
out
das
add
dec
mov
outs
mul
adc
xor
adc
add
pop
xchg
and
lods
mov
scas
xor
scas
jns
fnstcw
pushf
loopne
adc
jg
mov
lods
adc
dec
adc
ja
mov
ins
and
and
call
jne
arpl
(bad)
cld
cmp
inc
add
icebp
adc
pop
repz
xchg
jmp
popf
fwait
cmc
and
out
fisubr
mov
ds
(bad)
rol
pop
inc
cli
pop
pop
push
cmc
mov
mov
les
add
rcl
push
sahf
sub
or
rcl
ins
in
cmps
imul
push
retf
ret
pop
inc
jle
inc
aam
inc
leave
movs
popa
call
repz
xchg
push
mov
mov
sbb
cmc
push
adc
sub
out
jg
xchg
jae
shr
sub
jmp
push
push
sub
and
mov
mov
arpl
cmc
arpl
add
inc
sub
ds
mov
inc
ins
fld
aaa
pop
mov
js
sar
fnsave
daa
scas
jne
ret
out
mov
add
arpl
xchg
jbe
loope
xchg
and
lea
js
aad
xchg
and
test
(bad)
in
add
pop
fdivr
fs
push
cmp
les
repnz
mov
or
or
jl
nop
pop
adc
femms
adc
cli
mov
retf
jp
jne
(bad)
fs
call
xchg
jnp
test
rcl
sahf
inc
add
ficom
fdivp
inc
ja
mov
push
sti
inc
pop
push
fsub
lock
jg
dec
mov
pop
cmp
sbb
mov
or
stos
push
jecxz
or
xor
aaa
sub
add
lahf
add
add
pop
fs
jo
and
fsub
cmc
pop
inc
sub
inc
les
adc
lock
or
dec
call
ins
out
mov
mov
outs
jmp
cmp
in
imul
dec
jecxz
and
addr16
cmps
dec
push
pop
xchg
xchg
sbb
call
push
jne
(bad)
imul
fstp
ror
popf
xchg
mov
int
fwait
xor
sbb
fld
push
out
mov
lods
xor
pop
mov
mov
pop
xchg
xchg
mov
adc
clc
dec
inc
lods
test
cmps
push
es
lock
pop
shl
add
dec
lea
dec
out
lds
inc
(bad)
mov
leave
cli
jno
addr16
inc
add
movzx
dec
adc
cs
scas
mov
hlt
scas
jecxz
mov
push
repnz
loope
xor
aam
jno
stos
inc
or
jmp
xchg
(bad)
sbb
cwde
repz
repz
scas
mov
loope
(bad)
es
pmullw
in
and
sbb
xor
inc
add
cli
imul
cmp
pop
sub
pop
das
push
mov
imul
and
mov
ror
adc
sahf
les
loope
cld
movs
pop
mov
cmc
sbb
adc
mov
adc
fdivr
loop
ds
xchg
mov
and
(bad)
(bad)
out
pop
rol
xor
push
or
inc
adc
and
and
aaa
xor
sbb
adc
jns
cmp
mov
mov
ret
lods
xchg
fld
ret
pop
pop
pop
mov
fidiv
dec
(bad)
mov
add
repz
and
sbb
fwait
push
pop
cs
xchg
int3
or
cs
in
inc
cwde
xor
pop
movs
pop
sbb
test
push
lahf
test
cwde
push
pop
retf
in
push
mov
jge
jae
jmp
sub
adc
ss
add
adc
or
test
ins
popf
mov
jns
std
mov
push
ja
dec
lds
mov
mov
xchg
add
inc
(bad)
adc
push
push
mov
jmp
test
aad
pop
xchg
mov
adc
icebp
icebp
loop
repz
data16
mov
js
pop
xchg
mov
repz
repnz
or
(bad)
pop
ins
sbb
add
adc
pop
dec
mov
xor
stos
mov
jmp
ror
dec
xchg
xchg
ret
into
mov
add
rcl
xor
xchg
mov
test
popf
inc
pop
sahf
mov
cmp
push
rcl
enter
pop
sbb
test
pop
dec
cmps
inc
inc
or
retf
dec
pop
call
lahf
lea
pop
add
adc
cmc
push
mov
mov
outs
xchg
inc
(bad)
jmp
inc
xchg
add
sub
lods
jmp
out
cmps
inc
ficomp
xchg
jb
jle
mov
lds
test
and
mov
retf
jp
cdq
mov
int3
or
dec
in
vmulsd
pop
cmp
xor
mov
dec
mov
pop
retf
cld
jp
clc
push
dec
add
push
mov
jmp
or
fs
xchg
and
pop
jno
cli
mov
mov
inc
rcl
popa
mov
icebp
ret
cld
pop
(bad)
mov
add
out
inc
mov
dec
mov
neg
mov
popf
push
dec
mov
fmul
cs
sar
pop
cwde
inc
jle
dec
(bad)
push
push
(bad)
mov
shl
lock
stos
call
in
ds
jo
fisttp
and
mov
cmp
es
(bad)
movs
sbb
pop
jge
push
fst
xchg
jne
mov
sti
mov
dec
pusha
nop
fwait
test
ds
jmp
xchg
sub
sbb
and
pop
pushf
xor
pop
mov
inc
das
or
jmp
pop
clc
jecxz
xchg
mov
add
mov
sbb
cmp
add
dec
arpl
push
inc
mov
in
add
mov
sar
je
dec
nop
jp
(bad)
cmc
push
mov
stos
jge
jmp
mov
jno
ret
pop
iret
cwde
div
or
mov
dec
sti
sub
cmp
call
fidivr
and
(bad)
pushf
mov
sbb
imul
jb
je
(bad)
cmp
cmp
adc
outs
fimul
test
stc
sub
pop
ret
scas
cmps
add
stc
inc
pushf
js
gs
lds
fs
cdq
pop
push
jmp
js
call
xchg
nop
mov
aas
lock
loope
push
(bad)
pop
adc
dec
jns
ss
dec
call
pop
xchg
mov
ret
adc
cld
push
out
btr
inc
adc
add
add
inc
(bad)
sub
bound
xor
mov
das
xor
xlat
sahf
cmp
arpl
mov
(bad)
out
mov
das
std
loope
sbb
pop
test
inc
jg
xchg
mov
and
rol
test
sbb
xor
leave
in
daa
iret
and
pop
mov
push
in
cmp
xchg
cvtdq2ps
test
jecxz
pop
jns
push
push
mov
nop
fs
sbb
mov
enter
(bad)
mov
xchg
pop
fmul
lock
cdq
out
push
out
movs
jmp
jmp
std
and
xchg
(bad)
cdq
popf
sub
dec
int
pop
adc
(bad)
lock
loopne
data16
or
push
push
add
sub
fsubr
std
add
inc
xor
and
add
adc
push
lods
dec
add
xchg
mov
test
jns
pop
jns
mov
jecxz
fldenv
retf
xchg
or
sahf
jnp
sti
loop
sub
pop
mov
mov
push
mov
movs
sbb
xlat
xchg
iret
retf
stos
fcom
dec
hlt
das
aaa
cmp
pop
pop
sub
dec
and
out
add
rol
aas
cdq
retf
pop
pop
mov
or
ins
mov
mov
jl
cmps
mov
aam
test
fdivr
inc
mov
pushf
mov
out
push
f2xm1
icebp
and
sahf
out
mov
add
mov
ja
ins
stc
xor
ds
mov
push
and
movs
mov
fmul
jbe
daa
fidivr
and
add
jo
dec
sbb
xchg
ins
sbb
inc
fwait
rol
sbb
popa
test
mov
pop
xchg
test
rcl
mov
(bad)
sub
std
pop
sbb
ret
and
stos
push
shr
daa
or
or
sub
pop
push
push
xchg
mov
inc
fdivr
push
xchg
in
pop
ins
je
hlt
inc
sub
and
sbb
fimul
sbb
dec
pop
xchg
cwde
mov
ds
std
repnz
mov
(bad)
neg
sar
clc
in
add
sbb
mov
mov
mov
clc
test
xor
jbe
or
push
stc
in
push
fadd
dec
and
fld
push
jl
push
add
cmc
lahf
test
int
or
es
and
sbb
(bad)
jmp
call
rcr
imul
aam
mov
mov
xchg
mov
lahf
je
js
call
in
ret
test
mov
jecxz
aaa
shl
cmp
repnz
cmp
xor
jg
pop
addr16
movs
inc
pop
ins
popf
mov
repz
pop
and
add
pop
and
dec
fwait
data16
test
ja
mov
inc
ret
add
pop
inc
mov
addr16
dec
xchg
loop
or
mov
lods
mov
push
push
test
shl
cmc
out
outs
xchg
(bad)
jae
push
lock
add
mov
int
jmp
pop
inc
mov
popf
leave
mov
and
ror
inc
push
add
gs
stos
or
sbb
dec
adc
stos
mov
cdq
fcos
add
pusha
inc
test
cdq
lds
mul
inc
ret
mov
mov
jmp
mov
sub
call
push
(bad)
fsubr
mov
and
into
pop
in
or
sbb
mul
pop
xchg
out
sahf
fidivr
(bad)
jecxz
adc
pop
ret
dec
cmp
jle
cdq
push
xor
cmp
and
aam
dec
scas
std
pop
xchg
and
ficomp
frstor
push
fdiv
movs
push
loope
scas
cmps
test
dec
mov
mov
cdq
(bad)
sar
test
dec
or
fnstenv
add
dec
inc
test
imul
xchg
sub
lea
adc
inc
cmp
mov
mov
rcr
add
lods
sub
mov
fistp
data16
ins
mov
cdq
sbb
lea
lods
mov
jo
fiadd
test
inc
xchg
gs
outs
fdiv
and
fcom
enter
pop
cmp
push
stc
dec
cs
mov
mov
in
cli
cmp
mov
add
sbb
inc
or
adc
inc
arpl
push
xchg
xchg
mov
ins
loop
stos
cmp
dec
pop
lods
dec
retf
xchg
data16
loop
pushf
cwde
push
ss
xchg
cmp
ja
mov
jno
leave
xchg
pusha
and
sti
xchg
stos
retf
arpl
(bad)
repz
sub
sahf
xor
push
pop
addr16
pop
mov
adc
cmp
daa
int
sbb
and
inc
dec
lods
or
test
add
sbb
jge
pop
cwde
sub
cmps
xchg
in
sub
add
fldenv
xchg
sbb
sbb
test
popf
lea
push
adc
paddd
aam
xchg
cmp
pop
mov
jle
test
pop
lea
stc
pop
pushf
in
arpl
sbb
dec
outs
push
cmp
xchg
pop
mov
fcom
fcom
rcl
mov
addr16
icebp
loope
mov
inc
pop
fdiv
xchg
push
mov
add
mov
scas
sub
push
and
dec
push
nop
mov
xlat
xchg
scas
std
jle
mov
dec
pop
xor
add
data16
dec
and
cwde
mov
pop
stc
retf
add
adc
cmp
push
jbe
out
cmp
ins
nop
push
nop
and
xchg
int
pop
(bad)
sbb
and
inc
les
loope
nop
mov
xor
mov
fist
ret
xor
fiadd
jmp
add
clc
cmc
test
ror
sbb
popf
sub
add
mov
fisttp
rol
push
sbb
pop
push
and
ret
mov
call
adc
cwde
cmps
xchg
xchg
xor
pop
jbe
ins
fiadd
mov
idiv
or
outs
mov
stos
(bad)
sbb
dec
add
loopne
mov
mov
inc
leave
jp
dec
sbb
mov
fld
adc
sbb
xor
lea
push
stos
xor
popf
lea
jne
jmp
cmp
xor
lock
push
fsub
add
mov
imul
dec
cwde
stc
xchg
pop
mov
inc
loope
pop
inc
test
fstp
mov
ret
mov
adc
in
ins
cli
pusha
mov
fiadd
out
xor
aam
mov
(bad)
ds
add
ds
ret
aam
inc
loopne
push
ss
add
xor
scas
ret
call
fwait
clc
and
out
adc
push
sub
jnp
push
and
mov
leave
test
cmp
fmul
pop
pop
ja
pop
cmp
inc
jmp
icebp
xchg
add
arpl
test
addr16
and
test
xchg
stos
inc
lea
sbb
(bad)
hlt
ret
xor
mov
jno
jp
xchg
shl
in
loope
xchg
int
adc
in
sbb
popa
mov
mov
cmps
pop
jne
or
pop
ja
mov
sub
dec
pop
call
retf
pop
push
je
outs
xlat
xchg
ret
in
jecxz
xchg
mov
cmps
cmp
imul
fprem1
dec
mov
jae
and
cwd
mov
or
sub
xlat
stc
pop
in
jle
jno
sub
scas
push
add
mov
cld
dec
fwait
mov
out
fs
and
mov
lea
retf
movs
imul
scas
or
jb
into
fwait
sbb
retf
pop
sti
fs
push
mov
push
hlt
stos
or
xchg
fisttp
cdq
rcl
mov
scas
aas
psllw
scas
lock
test
fidiv
push
cmp
cld
cmc
rcr
inc
pusha
pop
scas
pcmpgtw
pushw
add
pop
std
addr16
icebp
js
add
push
add
jb
ret
cmps
dec
pop
mov
sbb
sar
add
mov
pop
push
push
mov
mov
loope
ret
xchg
gs
loope
sub
pop
mov
mov
cmp
mov
test
(bad)
xlat
dec
into
aaa
sub
in
fsubrp
push
lahf
inc
jb
jle
sub
mov
(bad)
(bad)
mov
repnz
xchg
ror
add
xor
lods
arpl
pop
and
stc
pop
inc
xor
(bad)
loope
cwde
retf
push
inc
dec
pop
mov
mov
jp
in
push
movs
push
sub
(bad)
sbb
push
push
mov
lock
cli
xchg
int
jge
test
imul
sub
or
xor
jbe
lahf
jno
inc
lea
fwait
mov
xlat
dec
out
lock
sbb
es
aas
or
pop
dec
fadd
jns
xlat
cli
push
and
div
jmp
push
clc
popf
xor
mov
sar
lahf
or
jp
mov
sbb
mov
std
aad
sar
popa
sbb
call
sbb
out
fistp
daa
push
or
addr16
test
mov
hlt
pop
retf
(bad)
ja
adc
xor
jp
add
inc
inc
fwait
dec
xor
mov
pushf
fninit
xor
addr16
lods
sub
cdq
rol
sub
out
and
outs
mov
mov
dec
xchg
dec
pop
call
stos
scas
std
inc
sbb
dec
fstp
rcr
add
inc
cwde
and
jne
imul
scas
sub
in
add
add
out
or
adc
sub
and
xor
stos
das
xor
pop
shr
loopne
pop
push
mov
cdq
mov
xchg
popa
aad
arpl
repnz
or
mov
leave
icebp
xchg
mul
pusha
arpl
fmul
or
rcl
pop
fs
je
test
adc
sub
jns
in
pop
dec
pop
sbb
add
pop
outs
cmp
pop
pushf
and
sbb
movs
pop
xor
(bad)
dec
jmp
mov
mov
arpl
test
loope
cmc
pop
xchg
lahf
dec
(bad)
mov
sub
ret
out
dec
test
mov
pop
mov
iret
adc
imul
icebp
int3
jmp
add
cmp
call
inc
mov
(bad)
retf
(bad)
inc
retf
cwde
loopne
jl
cmp
adc
les
mov
and
mov
out
call
push
jl
das
loope
aam
mov
loop
dec
sar
mov
int
xchg
mov
pop
mov
repz
and
add
out
cli
ret
adc
and
dec
ds
mov
popf
pop
cmp
stos
fcom
add
loop
imul
mov
sbb
pop
and
aas
jge
xchg
cld
sub
xor
and
add
mov
mov
adc
aam
sub
outs
mov
test
pop
addr16
xchg
(bad)
xor
in
stc
mov
cli
jg
mov
jmp
sub
in
int3
push
pushf
daa
pop
sbb
sub
data16
pop
and
fnsave
pop
fwait
jecxz
leave
add
push
jne
and
xchg
pop
ss
jl
cmp
repnz
scas
repnz
aam
jne
mov
xor
mov
push
stc
jecxz
sub
xchg
cmp
sub
fcomip
push
push
push
sti
cmp
jp
and
add
sub
mul
inc
jmp
popa
shr
sbb
jbe
loope
cmp
sbb
cmps
jnp
lods
push
daa
xchg
push
dec
lahf
stos
popf
or
sbb
stc
cmps
add
push
pop
pop
scas
pusha
xchg
xchg
retf
jmp
xor
mov
test
in
(bad)
mov
xor
out
imul
cmp
mov
cmps
sub
push
mov
clc
and
sbb
sub
xor
(bad)
jns
push
mov
xchg
mov
sub
inc
sar
(bad)
sti
push
ja
or
cmp
jecxz
call
cmp
cmps
sub
arpl
test
or
jle
push
test
mov
dec
in
call
push
and
in
inc
xchg
mul
mov
lock
movs
mov
mov
dec
xor
jnp
or
jge
sar
jl
outs
sub
cdq
mov
inc
cmp
js
xchg
jle
pop
inc
rcr
aaa
push
add
xchg
dec
dec
mov
ins
mov
popa
stc
out
pop
mov
push
add
test
mov
jns
retf
retf
sub
test
fisub
popf
or
sbb
mov
adc
cmc
push
loopne
or
dec
rcr
popa
cmp
dec
pop
jae
cmps
cmps
sahf
dec
cmp
arpl
iret
push
xchg
js
jns
int
or
stos
add
jno
add
lods
test
inc
out
(bad)
mov
xchg
int
out
pop
jnp
dec
out
xchg
jecxz
xchg
mov
sub
retf
mov
mov
dec
sbb
shl
mov
(bad)
jmp
push
sub
out
shl
xor
dec
mov
or
mov
out
loope
cmp
cli
arpl
add
inc
xor
xor
mov
sub
sbb
mov
lahf
outs
sbb
popa
in
cwde
add
sbb
call
add
shr
mov
sbb
xchg
and
test
(bad)
dec
xchg
sub
xor
dec
(bad)
fisub
xor
pop
inc
stc
ins
pop
jno
stos
int
push
pop
lock
cli
jecxz
xchg
loopne
jl
adc
sub
inc
sub
arpl
push
inc
mov
jg
nop
test
aas
push
pop
ror
inc
scas
in
jns
popa
inc
jl
jae
xchg
(bad)
pop
mov
call
cs
mov
repnz
(bad)
in
pushf
ja
mov
mov
sbb
es
fldcw
imul
and
call
add
pop
outs
mov
push
adc
mov
mov
and
inc
into
test
into
jno
jno
out
cmp
mov
imul
inc
test
outs
mov
inc
stc
(bad)
test
xchg
repz
imul
cmp
in
jne
cdq
fs
int3
out
pop
cmc
dec
(bad)
xchg
fdivp
sub
sbb
in
in
jmp
(bad)
xor
dec
fucomp
inc
pop
jp
scas
sbb
mov
mov
mov
dec
ins
jle
neg
sbb
mov
js
mov
lea
inc
stos
shl
iret
cdq
cmp
dec
jbe
push
(bad)
jmp
test
sahf
inc
hlt
cdq
pop
sub
iret
sbb
sahf
arpl
test
cmp
cld
stos
lods
cld
jns
in
xor
dec
repz
cmp
fs
push
data16
cmp
mov
fldcw
lahf
int
mov
jp
add
(bad)
sbb
mov
jae
stos
push
mov
mov
inc
push
arpl
mov
push
push
xchg
ins
stc
mov
jmp
cmp
movs
mov
iret
push
push
fwait
jge
lods
mov
pop
aas
out
fidiv
jmp
shr
pop
ds
leave
pusha
sar
push
add
bound
je
dec
scas
mov
cmps
sbb
loop
mov
dec
push
pop
xor
add
arpl
(bad)
push
pop
(bad)
jns
xchg
push
sbb
add
dec
in
(bad)
sbb
jae
test
mov
xchg
pop
icebp
movs
jae
in
cmps
mov
std
test
or
mov
daa
fld
lock
lds
fidiv
jo
aaa
pop
xor
inc
pop
sub
cmp
and
or
retf
inc
iret
fsubr
xchg
mov
add
mov
add
retf
mov
outs
sahf
xchg
mov
ret
out
mov
sahf
into
inc
retf
pop
data16
push
aad
cmp
xchg
mul
mov
sub
mov
pop
in
xlat
xchg
int3
fisub
mov
lock
adc
or
or
div
pop
push
mov
xchg
cdq
mov
rol
adc
cmp
mov
stos
add
dec
xchg
test
push
repz
mov
iret
leave
popf
pop
mov
pop
sub
sub
popf
rol
repz
loop
jae
(bad)
repz
lock
test
pop
add
(bad)
or
outs
inc
test
push
in
jg
add
fistp
sbb
or
adc
jns
dec
push
pop
mov
stos
mov
push
mov
popf
mov
mov
add
and
or
sub
dec
push
mov
jle
aam
or
pop
arpl
retf
cwde
retf
inc
js
mov
and
enter
mov
es
xchg
(bad)
imul
movs
(bad)
outs
sbb
(bad)
cdq
icebp
adc
dec
cmc
dec
ds
scas
push
out
jp
jp
push
dec
jns
ss
les
pop
xor
xchg
retf
bound
fnsave
sub
es
pop
retf
pop
jae
push
dec
mov
test
cmp
aam
call
retf
pop
pop
popa
scas
ss
pushf
xchg
mov
push
ss
mov
mov
cwde
repz
js
jmp
ja
dec
scas
cmp
xlat
dec
popf
es
ss
(bad)
imul
dec
cs
xchg
mov
std
jp
xor
inc
inc
add
sbb
add
mov
inc
lahf
xchg
mov
inc
das
inc
in
xchg
sbb
imul
pop
cmp
inc
retf
movs
push
or
sbb
pushf
sahf
rol
test
cmp
xor
(bad)
ins
xchg
das
out
sbb
xor
fcom
jge
add
adc
test
add
scas
mov
retf
ins
iret
mov
test
mov
sbb
int
dec
mov
adc
cmp
mov
jns
cmps
loope
lahf
hlt
inc
mov
daa
lea
mov
in
out
mov
das
(bad)
jb
push
xchg
mov
pop
jae
movs
mov
in
retf
call
not
call
and
push
fstp
pop
imul
sub
sub
ss
xor
mov
retf
sbb
add
or
mov
adc
enter
xchg
xchg
dec
(bad)
sbb
sbb
inc
sub
stos
mov
mov
xchg
je
mov
bnd
xchg
(bad)
fwait
xor
sub
push
sub
mov
test
fwait
adc
jl
cmp
inc
inc
mov
test
outs
fs
mov
push
aaa
mov
scas
sbb
jp
mov
(bad)
xor
cmps
add
jp
lods
pop
repz
adc
or
stos
jnp
leave
lds
test
jno
mov
aam
out
fistp
mov
jmp
add
rol
push
xchg
pop
inc
xchg
ret
xchg
pushf
adc
jle
fdiv
dec
xor
xor
cmp
jo
mov
sub
mov
loope
inc
sub
pop
mov
pusha
stc
push
jo
pop
fld
jecxz
jmp
out
sub
adc
cdq
mov
pop
mov
icebp
add
iret
fcomp
mov
fmul
ret
add
xor
pop
jo
fnsave
jl
sbb
mul
jge
fisub
adc
es
or
sbb
jbe
mov
bound
push
inc
fdiv
add
pop
imul
mov
lock
pop
cli
mov
cli
mov
ja
in
leave
xchg
pop
(bad)
lock
ret
fisttp
and
ds
cmp
shr
push
popf
aaa
add
pop
fadd
inc
(bad)
inc
imul
fcom
jmp
arpl
jmp
pop
test
clc
dec
adc
sub
out
xchg
mov
ror
xor
pop
push
xchg
jl
test
cmp
push
daa
aad
mov
mov
adc
pop
pop
in
test
sar
jg
lahf
stos
push
test
sub
hlt
leave
sti
and
inc
jp
cmp
popw
push
test
add
mov
push
inc
add
leave
add
sbb
xor
or
dec
mov
cmp
sub
loope
lahf
icebp
sbb
jns
daa
lds
mov
jnp
jecxz
adc
add
xlat
dec
(bad)
lahf
xchg
into
push
xchg
inc
inc
mov
movs
push
sub
aam
jmp
dec
arpl
sub
adc
out
repnz
fdivr
sbb
sahf
or
pop
mov
jle
pushf
mov
js
int3
adc
cmp
inc
aaa
pop
cmp
lahf
or
xchg
jne
mov
push
test
pop
pop
(bad)
dec
mov
jg
fs
inc
shr
mov
xchg
or
in
stc
stos
or
mov
mov
iret
(bad)
mov
mov
sub
sub
mov
or
xor
aaa
pop
nop
pushf
mov
inc
cwde
into
and
inc
mov
xor
sbb
or
adc
cwde
into
lods
aaa
cmp
popf
hlt
jecxz
xchg
cmc
inc
leave
jns
push
scas
sub
mov
sbb
stos
stos
xor
ret
js
lods
and
cld
cmp
push
out
into
dec
sbb
(bad)
test
or
imul
mov
movs
test
retf
test
pop
out
or
and
sbb
mov
inc
add
inc
fldl2t
pushf
and
pop
shl
fnstcw
scas
xchg
adc
mov
xchg
xor
dec
mov
pushf
push
jl
lahf
test
inc
jmp
cmps
mov
fcom
pop
(bad)
xor
dec
fmul
int
rcr
pop
sbb
pop
jg
mov
xchg
call
or
xchg
arpl
sbb
or
lahf
add
lahf
pop
and
push
jb
lods
stos
push
add
int
xchg
aaa
leave
call
inc
(bad)
xchg
cmps
sbb
stos
jl
in
stos
jbe
jl
xchg
(bad)
pop
outs
mov
cld
sbb
repnz
repz
(bad)
cmps
jno
push
stc
sub
iret
dec
icebp
or
inc
jge
sub
imul
(bad)
lods
xor
adc
call
ds
push
sahf
sub
add
push
mov
mov
jmp
rcl
retf
and
xor
loopne
sub
push
mov
mov
add
sbb
xchg
adc
cmp
mov
gs
js
fisubr
jns
mov
shl
fcmovne
and
jmp
stc
inc
cmp
aas
mov
xor
arpl
inc
xchg
and
adc
inc
jecxz
loopne
mov
gs
push
inc
and
sahf
cmp
in
add
out
push
icebp
mov
pop
in
nop
mov
adc
aad
shr
jge
mov
sub
sbb
rol
jge
fcom
sbb
cdq
ss
jb
or
mov
xor
sub
jae
pusha
scas
sbb
mov
pop
mov
push
js
fisub
repnz
mov
jp
ret
in
repz
clc
mov
out
mov
fld
mov
sti
out
rcl
inc
pop
(bad)
jae
inc
push
push
mov
scas
inc
shr
jnp
stos
imul
iret
and
mov
outs
adc
adc
sub
sub
ins
xchg
ins
inc
xchg
push
add
push
xor
enter
pusha
dec
ficom
mov
js
enter
xchg
jne
(bad)
cmps
mov
cmc
pop
movs
mov
icebp
xor
repz
fdiv
in
mov
mov
xor
ror
push
jae
sub
push
mov
sahf
mov
adc
rcl
into
ret
adc
aaa
loopne
xor
add
retf
pop
jnp
push
and
lea
daa
and
cld
test
lock
minps
cmp
call
retf
mov
mov
xchg
xor
loop
leave
test
outs
inc
pop
or
clc
test
loop
inc
jl
lods
imul
push
or
test
pop
out
jecxz
arpl
add
pop
ins
jne
cmp
inc
dec
fiadd
stos
dec
push
out
(bad)
fsubrp
out
mov
jo
fs
test
ins
call
stos
jne
in
mov
mov
add
xor
jae
in
mov
sub
and
stc
inc
push
cs
call
or
mov
retf
out
sbb
mov
mov
jb
gs
in
pop
mov
cmc
pop
pusha
fbld
add
adc
fcmovnu
mov
lods
in
add
mov
js
in
mov
sub
ror
lahf
mov
inc
lods
mov
add
rcr
dec
pop
and
sbb
retf
aad
xchg
dec
inc
xor
pop
lea
ins
out
mov
fld
loopne
pop
imul
and
mov
mov
sub
jnp
mov
outs
inc
aaa
jg
jmp
add
je
sub
dec
aam
(bad)
xor
mov
aaa
clc
loopne
ja
js
cli
scas
in
xor
pushf
popf
cmpps
stos
cwde
inc
out
pop
lds
push
inc
jecxz
rol
imul
mov
and
mov
pop
lods
dec
repz
fwait
idiv
push
dec
into
sbb
inc
cmp
pop
enter
ja
mov
mul
adc
mov
inc
retf
hlt
pop
test
stos
sub
add
or
push
cli
xchg
xchg
fidivr
mov
test
clc
loope
xor
fistp
rol
pop
push
fdiv
in
and
adc
pop
fwait
pop
sbb
jns
fwait
mov
movhps
mov
sbb
pop
out
imul
add
adc
pop
adc
fwait
sub
push
cld
call
jb
inc
dec
pop
call
jecxz
push
aad
or
hlt
fimul
sub
mov
retf
(bad)
loop
ja
fidiv
push
(bad)
(bad)
and
dec
inc
add
test
inc
mov
mov
xchg
sbb
pop
(bad)
cli
arpl
and
vcvttss2si
inc
jnp
je
xchg
dec
jl
cdq
mov
in
stos
xchg
sbb
jp
and
stos
rcl
adc
fldl2e
xor
pop
icebp
mov
outs
mov
xchg
adc
xchg
stc
scas
ret
mov
cdq
scas
push
ret
pop
scas
sbb
push
hlt
hlt
mov
sbb
xchg
cmp
test
and
mov
xchg
sub
into
ja
repz
ficomp
push
and
sbb
add
xor
pop
pop
mov
js
test
sahf
aam
adc
push
lea
mov
mov
nop
loopne
xor
pop
mov
dec
jb
mov
out
stos
jmp
push
cld
das
sub
imul
mov
inc
and
cmps
xchg
fdivr
jnp
shl
pop
mov
sbb
and
pop
pop
sbb
mov
addr16
mov
and
dec
out
cld
jle
sar
mov
scas
test
arpl
xchg
cs
clc
arpl
and
(bad)
xor
or
fist
jb
cmp
dec
push
imul
test
add
or
add
cmp
push
ins
lea
xchg
cdq
mov
lahf
cmc
call
add
mov
loope
idiv
xchg
sub
cdq
int
xchg
inc
gs
mov
sbb
cmc
(bad)
bound
xchg
jl
push
add
repnz
(bad)
and
inc
push
and
bound
lahf
mov
aam
mov
popa
ins
or
or
sub
cmp
jl
mov
adc
(bad)
or
xor
into
mov
(bad)
fs
mov
mov
mov
jecxz
jae
mov
mov
fsubp
push
lods
sbb
mov
std
push
pop
sti
jmp
pop
mov
inc
out
xlat
sbb
hlt
retf
jecxz
les
push
or
fist
pop
pop
xor
scas
push
sbb
pop
ret
stc
jge
jmp
(bad)
sub
inc
adc
test
mov
retf
fs
xchg
outs
daa
xlat
or
mov
or
add
lea
dec
pop
and
jg
out
dec
xchg
mov
lock
scas
(bad)
fsubrp
sbb
imul
xchg
shl
aad
fisubr
push
pop
pop
call
loop
retf
sbb
outs
pop
gs
cs
dec
pop
repz
dec
cmp
cmp
cmp
je
mov
dec
push
lea
sbb
clc
xor
or
ror
les
bound
cmp
shl
jge
test
test
leave
dec
(bad)
or
stos
sbb
rol
mov
cld
inc
sbb
fsub
ins
ficom
enter
dec
sbb
adc
cmp
fnstcw
ja
mov
loopne
push
inc
or
cmp
ss
inc
dec
mov
lgs
push
(bad)
out
dec
sub
bound
cmp
cdq
popa
sub
fild
movs
lock
movs
outs
jns
mov
xor
ret
mov
in
pop
add
in
out
adc
call
and
adc
(bad)
pop
pop
pop
scas
retf
sbb
jg
icebp
cmps
fld
jp
ficomp
xor
and
sub
add
pop
push
mov
mov
js
scas
test
push
imul
int
pushf
jg
inc
test
(bad)
imul
popf
jbe
idiv
xchg
jne
jge
xchg
mov
loopne
xchg
in
xlat
dec
mov
icebp
cmp
push
aad
out
pop
in
gs
mov
xor
jg
xchg
int3
test
and
fist
dec
or
cmp
cmps
inc
ja
pop
pop
movs
dec
add
push
dec
ret
inc
mov
push
xlat
inc
pop
and
lds
out
call
xchg
pop
xor
lds
mov
in
mov
cs
jecxz
inc
mov
ficom
mov
cli
and
fst
inc
dec
sub
sub
(bad)
push
iret
in
cmp
mov
jg
jmp
and
jbe
xlat
pop
bound
sub
repnz
xchg
repz
mov
dec
popf
jl
lods
fbld
rcl
das
fdivr
scas
and
imul
push
popa
test
cmp
scas
ffreep
popa
imul
jmp
pop
xor
xchg
ficomp
es
jp
mov
pop
jg
push
and
pop
mov
js
fistp
repnz
jno
pop
mov
cmp
call
jnp
jl
popf
dec
jne
mov
xor
cmp
(bad)
rcr
pop
pop
gs
(bad)
sahf
sti
imul
retf
in
sbb
nop
pop
pop
mov
leave
(bad)
in
inc
mov
sbb
and
and
pop
pop
jns
mov
(bad)
(bad)
cmp
xor
cmp
pop
mov
mov
or
(bad)
push
int
xor
fs
dec
fbstp
(bad)
xchg
enter
movs
inc
loopne
push
adc
stos
mov
jge
xchg
movs
mov
add
aad
enter
mov
jbe
push
repnz
ror
fsubr
pop
pushf
call
(bad)
js
(bad)
jns
bound
inc
push
jp
sbb
push
push
push
test
add
into
mov
lods
out
bound
sub
ret
xchg
loop
sub
mov
mov
inc
ja
mov
sbb
sub
stos
jmp
push
mov
dec
retf
sbb
or
fcmovu
push
enter
inc
mov
adc
stos
sub
jns
or
in
int3
js
sbb
push
fnstenv
add
sub
in
and
imul
cmp
cmp
xor
es
sbb
jp
ins
xchg
outs
repz
call
enter
pusha
test
ror
(bad)
dec
pop
cmps
add
stc
sar
jmp
inc
push
mov
inc
sub
das
adc
jns
mov
std
imul
inc
inc
gs
cmp
add
loop
stos
xor
jge
aad
pop
mov
mov
in
fnstsw
test
mov
jno
repnz
inc
ret
push
int
mov
jmp
mov
pushf
icebp
xor
neg
mov
clc
popa
inc
mov
push
(bad)
das
out
add
iret
aad
jne
add
jno
inc
std
dec
push
add
or
ins
enter
int3
pcmpeqd
enter
sbb
adc
adc
and
mov
sbb
and
stc
call
jb
xchg
dec
aam
xchg
loopne
fs
mov
xor
(bad)
movs
fldln2
sub
repz
std
retf
rcl
mov
enter
fcom
aad
sti
daa
sbb
adc
outs
mov
mov
push
fucomi
jns
mov
jge
in
push
sub
fmul
cmps
or
and
jmp
push
add
jno
pop
shl
dec
out
sbb
mov
xchg
pop
into
push
cdq
stc
call
mov
and
cli
sub
xchg
mov
dec
fistp
and
cld
test
dec
call
mov
jo
push
mov
mov
xor
stc
arpl
pop
out
outs
pusha
sub
nop
cmp
push
sbb
std
bound
jle
in
es
jecxz
inc
push
or
enter
popf
push
and
sbb
xchg
sbb
leave
nop
sbb
std
loopne
leave
lock
lea
sbb
or
cdq
xor
pop
gs
or
mov
jo
call
iret
call
inc
je
mov
or
fwait
mov
mov
inc
mov
mov
add
adc
jge
mov
cmp
iret
mov
mov
scas
mov
and
sbb
pop
or
fisub
cmc
mov
sbb
push
(bad)
dec
and
(bad)
fdiv
jp
mov
sub
lea
fdivr
mov
jp
pop
xor
pop
add
or
scas
pop
mov
ins
xor
xchg
cvttps2pi
jb
fild
fstp
lds
fwait
popa
retf
loop
ss
lods
and
inc
test
mov
push
mov
loop
lock
popa
xor
cmp
ror
and
or
dec
cmps
or
fnstenv
(bad)
outs
addr16
cmp
push
cmp
jno
outs
inc
mov
mov
cmps
or
jmp
ja
dec
push
arpl
dec
movs
stos
test
(bad)
mov
adc
mov
pop
add
int3
cwde
mov
sar
mov
push
clc
xor
or
call
jge
ins
cwde
cmp
jae
xchg
retf
push
mov
popf
repz
movs
rcl
sbb
dec
xor
popa
or
(bad)
dec
ins
scas
js
stos
or
ds
jge
aad
sbb
dec
outs
cdq
js
mov
jae
iret
test
mov
adc
inc
xchg
fwait
lods
scas
cmp
repnz
in
leave
mov
mov
sbb
inc
rcr
sbb
shr
jb
push
or
stos
aaa
sbb
dec
rcl
sbb
pop
pop
enter
push
or
js
mov
dec
mov
imul
test
(bad)
test
sbb
test
mov
push
test
push
lds
neg
retf
dec
js
mov
mov
icebp
outs
mov
imul
test
js
lea
pop
pop
lods
dec
es
cmps
cdq
mov
push
retf
rcr
push
add
mov
pop
scas
pop
scas
adc
inc
jb
jge
mov
(bad)
into
imul
jmp
adc
jnp
ins
add
dec
out
movs
jge
cmps
push
push
aad
xchg
in
mov
or
mov
lock
adc
xchg
sahf
push
pop
dec
out
fprem1
push
retf
push
pusha
sbb
and
mov
fmul
stc
and
retf
sbb
and
pop
xchg
sub
mov
gs
aaa
data16
xchg
xor
pop
fnsave
test
xchg
movs
les
push
mov
repz
jl
cwde
lahf
into
xor
icebp
push
inc
fcmovb
icebp
(bad)
loopne
je
mov
in
lods
inc
cmp
pusha
retf
sbb
sbb
pop
mov
add
and
mov
inc
ficomp
mov
jae
imul
sbb
inc
and
call
fdivr
bound
js
pop
shr
xchg
jne
stos
jbe
fcmovnu
idiv
dec
mov
call
nop
xchg
push
adc
lock
stos
fnstenv
loope
repz
sub
out
sti
mov
sub
test
push
jno
mov
repnz
in
into
daa
mov
cmp
and
test
je
js
mov
jl
rol
out
mov
cs
dec
loope
inc
and
dec
enter
jecxz
lahf
push
(bad)
mov
xchg
sub
(bad)
int
xchg
jnp
mov
idiv
mov
and
stos
jo
dec
in
add
inc
out
push
pop
and
inc
sub
cmps
retf
sub
sub
hlt
add
cmp
mov
popa
stos
jp
retf
nop
mov
sub
out
add
dec
daa
scas
jp
mov
jp
int
outs
int3
mov
mov
xchg
dec
mov
(bad)
xlat
xchg
cli
cmp
mov
retf
push
add
jmp
lods
and
pop
cmps
sbb
test
or
call
loope
jl
mov
pop
sub
adc
mov
jl
xchg
sub
outs
daa
or
add
stc
inc
jecxz
pop
arpl
jno
rcr
(bad)
sahf
dec
and
call
out
adc
xchg
xor
xchg
push
fstp
loop
stc
add
add
jne
and
les
je
into
pop
ret
dec
bound
sbb
or
inc
fistp
rcl
pop
in
stc
ds
push
outs
pushf
hlt
loope
mov
popa
and
aas
mov
xchg
fs
mov
das
(bad)
fisubr
cld
ror
lea
test
lds
or
and
lock
jmp
push
ss
xor
or
mov
in
push
xchg
adc
add
inc
imul
push
in
push
cmps
dec
sbb
mov
(bad)
aam
xor
popa
pop
lahf
popa
(bad)
fmul
pusha
loope
mov
push
lea
mov
xchg
xchg
mov
lds
lods
ins
out
gs
or
pop
fadd
fst
cs
dec
test
dec
xchg
dec
sub
mov
mov
add
jl
loop
fcmovnu
outs
dec
jne
out
sbb
jmp
test
add
mov
loopne
out
sub
push
fidivr
(bad)
jl
mov
push
hlt
out
sub
adc
dec
sahf
pop
jno
ret
mov
add
cmp
mov
inc
pop
adc
in
inc
sbb
push
pop
inc
lods
xor
inc
xchg
lds
rcr
mov
cmp
and
mov
int3
push
dec
(bad)
fstp
add
adc
xchg
xor
enter
add
jg
mov
inc
mov
cmps
pop
or
pop
lods
lods
mov
or
icebp
cmp
inc
pop
mov
or
daa
int
in
fldenv
add
push
cmps
sub
or
push
std
dec
lds
fs
loope
cmp
add
push
push
popf
push
xchg
data16
jecxz
mov
xchg
stc
inc
adc
mov
mov
mov
xchg
pop
xchg
inc
mov
mov
xchg
sub
test
hlt
jmp
inc
fimul
iret
and
test
jae
arpl
or
test
push
jmp
jl
sbb
and
inc
or
pusha
fisub
sbb
push
and
mov
cvtps2pi
pop
ret
jno
xrelease
xchg
inc
dec
lock
xchg
cmp
inc
mov
jp
movs
test
hlt
cmc
test
ins
fild
bswap
jmp
xor
and
adc
test
popf
enter
leave
addr16
sahf
inc
outs
arpl
loope
xor
and
(bad)
js
xchg
or
cwde
mov
pop
clc
mul
in
pop
pop
xchg
lahf
test
hlt
in
retf
or
out
mov
mov
scas
push
add
(bad)
cmp
mov
cmp
test
js
popf
sbb
xchg
push
xchg
mov
sub
rcr
into
or
iret
inc
dec
add
mov
xor
pop
adc
jle
popf
dec
or
adc
xchg
test
or
dec
out
fld
or
frstor
repz
out
mov
cld
add
repz
(bad)
js
lods
fwait
loop
fcomp
jecxz
sahf
aas
xor
fisttp
ficomp
sub
push
sub
std
aad
inc
ror
cmp
dec
cmp
jmp
pop
(bad)
or
pop
add
push
sub
push
adc
inc
lods
xlat
movs
pop
adc
jp
in
mov
jge
inc
lds
(bad)
pop
sub
imul
push
or
pop
mov
lods
fcom
inc
push
popf
(bad)
lods
cmp
add
push
pop
(bad)
push
pop
adc
inc
inc
or
fwait
adc
jmp
jmp
inc
rcr
mov
inc
mov
sbb
in
add
mov
dec
nop
mov
xor
pop
popa
retf
adc
inc
push
scas
ins
cli
add
add
pop
mul
jns
hlt
mov
test
mov
(bad)
rol
ficomp
sub
sub
retf
int
fs
cmp
and
cmps
push
sbb
dec
and
test
pusha
fwait
shr
les
out
push
pop
and
lods
and
fiadd
cmp
arpl
mov
iret
repz
adc
xlat
lahf
jmp
xchg
(bad)
xchg
or
xchg
dec
add
cli
push
sub
movs
lods
sbb
cli
in
aam
dec
pop
icebp
mov
enter
and
fild
pop
sbb
adc
pop
or
mov
mov
leave
mov
mov
adc
or
push
sbb
test
sbb
mov
add
mov
cmp
cmp
(bad)
loop
iret
fnstsw
jb
xchg
dec
xlat
mov
cmp
mov
imul
sub
jp
xchg
inc
xchg
fwait
test
dec
sbb
shl
inc
jmp
outs
xchg
pop
call
mov
add
mov
pop
push
imul
pop
mov
ror
sbb
mov
xor
cs
mov
dec
inc
lea
fwait
xchg
mov
idiv
sbb
jnp
jl
ins
movs
jne
mov
mov
das
stc
movs
repz
adc
dec
nop
sbb
gs
aam
loop
inc
pop
call
cld
pop
or
enter
(bad)
adc
cmp
xchg
push
or
xchg
fwait
mov
enter
jns
mov
imul
and
cmps
dec
adc
loope
add
and
repz
add
jle
and
push
out
(bad)
jb
fcomp
stc
aam
push
sti
imul
nop
scas
sbb
cli
stc
jmp
xchg
jne
ss
sbb
in
in
call
jp
mov
js
jns
mov
sub
cmc
inc
mov
sbb
cli
daa
das
push
daa
lods
pop
mov
test
ins
stos
inc
rcr
push
scas
test
push
push
sbb
in
mov
call
mov
push
fsub
sbb
sbb
test
inc
cmps
xchg
lods
in
shl
jmp
clc
dec
ds
test
iret
push
pusha
cmp
or
inc
dec
jp
test
stos
or
cmp
push
jmp
sub
cmps
outs
or
mov
leave
in
test
test
or
inc
arpl
push
ffreep
repz
mov
out
push
sti
stc
mov
mov
addr16
mov
out
lock
div
cdq
mov
sub
or
(bad)
iret
daa
ficomp
add
and
cmp
push
sub
mov
sbb
jp
leave
pop
popa
inc
xor
dec
xor
sbb
imul
aaa
mov
(bad)
sbb
or
lock
xchg
rcl
dec
jae
shl
and
ins
int3
movs
jp
jmp
mov
aad
cdq
test
je
scas
cmps
sahf
push
adc
(bad)
mov
lahf
fild
jle
push
daa
aaa
mov
iret
js
pop
jg
jge
push
sbb
jne
push
popf
fwait
mov
xor
cmp
push
data16
mov
sbb
jg
test
sbb
and
std
loopne
leave
test
js
inc
pushf
dec
xlat
lods
call
push
xchg
out
cmp
jmp
shr
adc
outs
lea
loopne
mov
cwde
ss
push
stc
or
icebp
sub
shl
sub
les
dec
shr
mov
inc
arpl
add
cmp
cmp
adc
inc
in
and
fdivr
pop
addr16
jnp
and
mov
pushf
sbb
les
stos
mov
out
mov
mov
mov
xchg
imul
jle
scas
mov
retf
jl
and
retf
in
fnstenv
push
bound
xor
pop
inc
dec
movs
xchg
xchg
lea
cmp
push
in
addr16
add
push
call
pop
or
mov
shr
dec
xchg
popf
xor
xchg
xchg
pop
add
(bad)
(bad)
inc
lods
(bad)
imul
pop
faddp
add
mov
adc
mov
nop
sbb
or
je
mov
out
jmp
xchg
lds
sbb
push
add
cmps
ins
pop
pop
mov
xchg
mov
dec
or
arpl
cld
sbb
mov
pop
mov
pop
js
push
push
mov
stos
sub
adc
repz
loopne
inc
push
sahf
inc
in
cmp
mov
cs
std
or
dec
test
mov
scas
xor
shl
mov
scas
mov
dec
leave
adc
sbb
retf
mov
ds
lods
ins
arpl
cs
in
mov
xlat
pop
frstor
jmp
fs
and
jae
popf
imul
push
data16
xlat
cmps
or
cmp
scas
xchg
xor
jle
scas
push
fmul
xchg
mov
test
frstor
mov
xchg
inc
mov
fdecstp
sbb
xchg
daa
inc
in
vpmuludq
not
daa
add
clc
cli
scas
pop
call
stos
push
jle
lahf
arpl
in
mov
lock
ret
(bad)
dec
push
jbe
loop
cmp
or
adc
dec
add
stos
cmp
xor
leave
lods
out
test
je
lahf
inc
fld
mov
push
(bad)
sti
test
iret
dec
mov
fidivr
in
xchg
mov
fsubp
movs
(bad)
jo
pushf
sub
cmps
xor
sub
xchg
fst
or
push
pop
fwait
or
sbb
lods
xchg
int
inc
repnz
repnz
aam
xor
pop
mov
lods
fs
test
jge
mov
ss
out
sub
test
data16
push
fnstcw
xchg
ins
cmc
jmp
int
cmp
(bad)
sbb
cmps
cmp
retf
enter
cmc
stos
imul
sbb
pop
pop
push
pop
lea
jg
sub
mov
sbb
pop
jecxz
jnp
call
mov
pop
xchg
push
retf
inc
inc
mov
add
push
pop
enter
test
pop
icebp
bound
push
call
push
es
(bad)
mov
rcl
movs
xlat
push
cmps
jge
lahf
pushf
mov
push
ffreep
mov
icebp
dec
pop
xchg
cdq
pop
mov
lods
das
cmp
into
retf
ret
sbb
and
cwde
mov
or
test
cmp
pop
push
jmp
cmp
jle
sbb
cmp
sti
jne
cmp
repz
mov
pop
jl
outs
enter
mov
mov
pop
call
dec
lods
lahf
lods
rcr
fcomp
in
lods
sbb
rcr
movs
cli
sar
xor
push
not
push
stc
in
cmc
cmp
inc
push
sbb
cmp
add
lds
in
in
addr16
jae
add
pop
xor
and
jno
inc
jnp
push
sbb
cld
jno
push
gs
fisttp
jmp
add
sub
mov
cmp
xchg
callw
lds
rcr
jecxz
jp
xchg
(bad)
push
mul
ret
jnp
and
fdiv
pop
and
dec
sbb
mov
retf
sar
clc
pop
inc
add
sti
cmp
mov
dec
inc
mov
rcr
add
inc
pushf
fisttp
addr16
mov
lahf
dec
jmp
add
fcmovb
mov
fistp
xchg
xchg
popa
or
dec
outs
xchg
aad
nop
jl
xor
add
cwde
cmp
and
lods
sbb
push
mov
(bad)
dec
out
clc
addr16
inc
leave
or
add
lea
add
mov
test
arpl
pop
pop
inc
sahf
push
ret
arpl
test
(bad)
fisubr
test
addr16
test
mov
je
push
into
dec
push
push
jecxz
(bad)
jae
cmp
sub
mov
push
push
jns
mov
mov
or
push
enter
jno
push
dec
in
cmp
pop
or
push
dec
fcom
mov
sbb
mov
iret
xchg
setl
inc
cwde
pop
add
jecxz
test
add
bound
mov
add
add
lock
sbb
leave
inc
add
retf
aas
fidivr
pop
fwait
inc
xor
mov
or
jle
rol
ret
jl
dec
retf
jle
sbb
data16
frstor
fcom
mov
pop
(bad)
test
setbe
add
push
pop
mov
inc
movs
jmp
push
das
mov
popf
or
dec
lods
cwde
sub
xchg
dec
out
mov
adc
ret
mov
test
mov
repz
and
fild
sub
stos
aaa
imul
cwde
call
(bad)
fild
js
clc
xor
add
mov
sbb
mov
je
lods
mov
and
jns
cmps
mov
test
jp
xchg
pop
fadd
xchg
test
mov
lea
push
push
jecxz
and
fstp
mov
push
add
(bad)
cmc
lods
inc
out
add
cmp
cld
jnp
(bad)
mov
stos
sbb
(bad)
cmp
and
xor
sahf
and
dec
adc
rcr
cmps
mov
cmp
(bad)
cs
mov
call
adc
pop
in
stos
fsub
or
xchg
mov
sbb
(bad)
pushf
mov
xor
xor
in
jmp
fnstenv
jge
imul
pop
pop
cmps
les
into
ret
add
mov
inc
or
add
or
xor
jg
movs
ja
xchg
or
test
push
push
into
out
xchg
iret
or
push
and
push
pushf
mov
or
scas
xchg
add
lahf
js
mov
mov
daa
into
hlt
stos
jmp
arpl
fcom
push
jmp
(bad)
test
fild
arpl
inc
pop
imul
(bad)
fidivr
or
sub
sub
sbb
inc
add
mov
add
pop
xlat
not
(bad)
pop
jg
fbstp
xchg
ror
mov
arpl
jmp
js
cmps
fwait
call
loopne
mov
psubw
mov
xchg
pop
mov
out
(bad)
cmp
fisub
pop
or
jns
xchg
ss
pop
mov
(bad)
jmp
jae
sbb
adc
popa
jno
xchg
aaa
xor
adc
ja
mov
and
minps
cmc
xchg
and
jns
pushf
pop
test
dec
rol
scas
sub
adc
mov
sar
lods
retf
inc
inc
call
lock
aad
cld
sub
sbb
es
cmp
mov
sbb
idiv
call
in
adc
xor
js
fcom
aad
sbb
adc
cmp
in
movs
adc
pop
push
shl
in
test
mov
hlt
xor
sbb
movs
sbb
pop
add
xlat
stc
test
mov
jmp
lea
bound
lea
jge
push
push
ins
mov
stos
pop
rcl
mov
cmp
push
outs
jl
data16
xchg
add
dec
xor
or
push
inc
iret
mov
adc
jb
fdivr
in
cdq
call
sub
shr
jb
inc
hlt
movs
(bad)
bsr
movs
mov
aad
leave
neg
mov
pusha
rcl
add
aam
push
(bad)
fs
outs
dec
and
push
je
mov
std
sbb
clc
jle
shl
add
or
adc
dec
sbb
dec
or
xchg
dec
or
les
(bad)
pusha
pop
pop
mov
hlt
push
mov
mov
hlt
adc
shl
adc
stos
xchg
add
lds
test
xor
ja
sub
mov
icebp
js
es
dec
fwait
push
jge
mov
push
cmc
test
lahf
xor
fistp
fcomp
mov
gs
jge
fld
pusha
and
lods
push
xchg
ja
push
jnp
dec
adc
xchg
(bad)
std
jmp
rol
rcr
idiv
shl
and
aam
adc
jle
lea
add
mov
dec
lahf
mov
inc
push
psllw
fcomp
add
push
pusha
(bad)
pop
push
idiv
je
mov
retf
adc
sar
jecxz
and
imul
pop
or
mov
arpl
xchg
or
xchg
rcr
(bad)
enter
fstp
jns
and
jno
cwde
jmp
push
loopne
inc
sbb
mov
cdq
in
shr
mov
out
mov
mov
in
pop
jmp
imul
jmp
sbb
into
cmp
outs
fwait
adc
cli
pop
pop
push
out
xchg
mov
or
pop
adc
pusha
inc
loop
adc
fs
jns
lods
push
xchg
scas
clc
push
push
add
stc
fsub
cmp
mov
movs
fsubr
out
xchg
jne
mov
in
mov
mul
mov
inc
push
xchg
ficomp
test
xchg
imul
ror
es
call
fs
mov
popf
mov
repz
xor
cli
sbb
jae
sbb
jmp
sub
xchg
inc
add
jmp
ror
mov
dec
mov
mov
xchg
out
enter
dec
mov
and
xchg
mov
loop
scas
test
addr16
inc
int3
sub
daa
pop
xor
call
jge
lea
and
imul
adc
test
cmps
loopne
inc
bound
jecxz
or
aas
lods
or
(bad)
fsubr
xor
rdpmc
xlat
repz
add
add
scas
fld
in
popf
push
xchg
mov
lods
pxor
xchg
mov
aas
mov
mov
push
jmp
lock
dec
dec
mov
je
dec
cmps
push
and
loope
lock
cmp
inc
mov
inc
sbb
xchg
(bad)
add
inc
cmp
sbb
inc
add
out
es
or
dec
inc
xlat
or
ds
and
call
icebp
push
(bad)
sbb
movs
pop
(bad)
xchg
call
push
(bad)
cli
xor
mov
mov
lock
fwait
mov
cs
jp
inc
add
cmp
fs
xchg
adc
(bad)
pop
std
retf
and
inc
sar
or
sub
sbb
mov
pop
nop
cmps
mov
aas
push
jns
aad
inc
mov
push
in
push
stos
pop
fst
mov
adc
mov
and
add
inc
icebp
fstp
cmp
nop
mov
sub
jmp
daa
jae
pop
cwde
adc
jnp
ja
jb
adc
ficomp
mov
jg
push
cmp
add
add
and
inc
pop
fsubr
xor
test
fwait
jno
or
aam
xor
dec
test
imul
stos
sub
js
sbb
es
push
adc
lock
lods
mov
adc
mov
push
sbb
cmp
push
mov
dec
jmp
mov
adc
hlt
sbb
leave
or
sbb
daa
cmp
btc
adc
fs
cmps
ss
sahf
mov
pop
jmp
xchg
xor
jg
pop
neg
jecxz
aad
jb
mov
and
sbb
add
dec
jb
mov
xchg
test
dec
sub
cmp
dec
enter
inc
mov
ins
daa
or
add
aam
lahf
(bad)
jne
jmp
ins
pop
or
pushf
aas
shl
pop
inc
test
retf
scas
into
mov
(bad)
std
test
fdiv
dec
js
ficomp
(bad)
pop
movs
call
pop
pop
repnz
mov
inc
mov
cli
mul
ficom
push
ficomp
and
(bad)
not
je
sbb
or
outs
pop
addr16
dec
mov
sub
xlat
pop
addr16
or
add
gs
sbb
(bad)
js
pushf
cmp
cwde
mov
xchg
adc
push
inc
mov
pop
test
push
fidivr
mul
pop
inc
mov
(bad)
mov
aad
outs
xchg
mov
int3
sub
inc
and
xchg
lea
and
sbb
lods
test
into
sub
jmp
fptan
and
sbb
ror
jno
scas
mov
iret
push
jbe
push
add
sahf
cmp
pop
ret
cmp
rol
xlat
jp
and
inc
test
push
and
xchg
ror
inc
and
stc
cld
fbstp
in
(bad)
dec
into
cmp
stos
sub
cmp
cmp
cmp
cli
inc
or
xor
mov
and
dec
cmp
sbb
sbb
mov
xor
ss
mov
push
dec
popf
stos
mov
cli
js
jnp
push
jmp
fidiv
adc
inc
jmp
enter
gs
scas
xchg
loop
mov
inc
mov
xchg
aad
mov
shr
cdq
push
sub
fdiv
cmc
and
ss
jl
dec
push
inc
xchg
into
mov
sbb
gs
repz
push
pop
dec
ret
and
mov
scas
jo
dec
ins
fstp
aaa
push
mov
inc
std
neg
jmp
jae
mov
xchg
pop
out
cld
push
cs
stos
mov
jmp
scas
mov
dec
push
pushf
mov
leave
cmps
scas
retf
jle
mov
(bad)
dec
add
jmp
mov
or
pop
dec
arpl
xchg
jl
icebp
ds
out
jb
je
mov
push
mov
aas
jmp
adc
addr16
test
xor
pop
cwde
into
sti
inc
xchg
out
push
shr
push
mov
cli
(bad)
fstp
xchg
mov
loopne
push
adc
mov
call
add
aas
jmp
xchg
loope
imul
outs
cmc
outs
rcl
xor
(bad)
fnstenv
dec
arpl
jg
pop
adc
cwde
push
or
stos
xchg
(bad)
cmp
adc
enter
jne
lea
shl
adc
or
mov
sub
pop
(bad)
out
jmp
iret
pop
fnsave
pop
mov
dec
xchg
rol
pop
mov
mov
clc
inc
xchg
pop
pop
call
mov
cmc
gs
mov
jp
sub
sbb
push
fdiv
enter
dec
jl
sub
mov
add
ret
mov
fcmovbe
es
into
jae
dec
inc
mov
and
sub
or
push
mov
adc
call
xchg
push
xchg
arpl
int3
xchg
pop
xchg
nop
push
adc
stos
pushf
sub
dec
xchg
mov
inc
movs
mov
xchg
test
mov
je
sub
dec
repnz
pop
into
add
outs
arpl
sbb
xchg
dec
enter
mov
jg
cmc
inc
ja
nop
bound
outs
xor
dec
pop
mov
mov
in
in
in
(bad)
hlt
jge
sbb
pusha
mov
xor
loope
and
icebp
(bad)
paddq
sbb
loope
xchg
pusha
cmp
les
mov
cmp
popa
(bad)
daa
add
data16
sub
xchg
dec
jmp
aaa
rol
int3
xor
and
adc
dec
add
rol
pop
mov
test
sbb
pop
imul
jmp
jl
push
jmp
mov
loop
psubw
xchg
xor
dec
mov
xor
in
pushf
xchg
test
dec
jl
mov
add
shl
data16
es
cwde
je
jo
lds
imul
sub
aas
mov
adc
std
dec
pop
movs
jns
xchg
push
arpl
adc
test
mov
jbe
sahf
dec
cli
shl
mov
test
dec
int3
ret
mov
mov
imul
cmp
(bad)
stos
neg
dec
retf
sbb
dec
stc
(bad)
loop
icebp
xor
pop
pushf
cmp
popa
movs
arpl
xchg
pop
leave
xlat
sbb
dec
jecxz
or
jbe
mov
sbb
dec
and
(bad)
(bad)
ds
add
cli
enter
mov
je
jns
push
rol
jle
mov
jbe
add
div
cmp
je
mov
push
mov
mov
cld
retf
xchg
fbstp
(bad)
fs
and
mov
lods
addr16
or
or
stc
push
add
or
mov
adc
daa
and
inc
inc
nop
push
es
pop
mov
stc
or
sqrtps
repz
mov
jge
dec
outs
jp
pop
adc
push
sub
xlat
mov
leave
je
test
inc
mov
mov
adc
leave
cmps
out
mov
mov
hlt
xor
sub
inc
add
shr
cmp
imul
jmp
arpl
loop
mov
add
inc
add
push
es
pop
lods
and
data16
or
or
loope
mov
enter
inc
add
lock
sti
xor
mov
test
(bad)
inc
stos
xchg
fwait
mov
mov
xchg
cmp
(bad)
mov
jecxz
dec
xchg
addr16
fsubp
push
rol
data16
dec
xchg
sbb
mov
aam
stc
(bad)
js
int
dec
addr16
or
pop
sub
lahf
adc
inc
dec
cwde
inc
test
or
sar
js
cmps
sub
in
xchg
dec
popf
clc
push
sub
cmps
xchg
or
sub
mov
jge
xchg
mov
mov
jmp
ds
rcl
dec
ror
xor
xchg
inc
aas
or
iret
jp
xlat
and
pop
inc
loop
push
push
sub
mov
xchg
sub
imul
outs
and
out
mov
pusha
fistp
jp
mov
movs
jmp
inc
rol
push
rcr
cmp
mov
rol
popa
xchg
cwde
data16
dec
int3
ds
or
in
jb
push
mov
js
inc
inc
push
stos
stos
test
push
lods
dec
std
enter
movq
fld
push
sbb
add
jnp
mov
inc
lea
jl
into
movs
daa
rcl
ret
ja
pop
out
enter
sahf
pusha
jecxz
dec
pop
jmp
jg
test
jp
mov
test
shl
xchg
push
jmp
add
jmp
dec
inc
test
or
sub
sbb
mov
test
fs
ds
aaa
add
sub
sbb
xlat
or
mov
ins
xor
dec
cdq
(bad)
fwait
add
popa
jae
jp
xchg
popa
sub
push
adc
adc
stc
lods
int3
das
call
xor
leave
mov
shl
out
xchg
xor
cmp
xor
cwde
inc
gs
mov
addr16
mov
cli
and
int
xor
or
lahf
pop
retf
mov
pop
cwde
movs
stc
outs
add
sti
aad
pop
mov
pop
mov
pop
fistp
xchg
out
mov
mov
xchg
ss
pop
mov
cwde
lds
xchg
dec
jne
sub
mov
es
fdiv
pop
xor
retf
and
ins
jl
cmp
nop
push
sbb
sbb
dec
enter
and
cmp
dec
fist
mov
jp
cmps
mov
cmp
aas
fcmovbe
mov
stos
enter
jb
mov
mov
arpl
jmp
dec
shl
or
fild
dec
pop
mov
xchg
out
mov
inc
stos
sbb
mov
in
dec
adc
(bad)
sti
xor
jne
shl
retf
mov
arpl
add
and
fwait
or
xor
inc
inc
mov
push
mov
cmp
in
int3
fsubr
push
and
sub
or
dec
popf
cmp
fidiv
(bad)
rcr
cmp
mov
jl
mov
and
lods
jbe
add
inc
mov
jno
dec
xchg
ret
fwait
mov
ss
retf
cs
mov
pop
or
or
push
or
lods
and
push
mov
adc
lahf
push
inc
adc
shr
fcom
pop
mov
and
icebp
cdq
jae
jmp
mov
ret
push
mov
mov
mov
sar
pop
popf
xchg
inc
xchg
jns
ds
fimul
jbe
push
fwait
cmp
cmp
push
pop
dec
(bad)
sub
loope
mov
pop
ins
inc
sbb
or
add
xor
sbb
mov
xchg
test
cmp
pop
out
add
push
add
cmp
stos
xchg
pop
(bad)
adc
dec
test
jge
cmps
test
xchg
jmp
scas
ja
push
aam
pop
cmp
int
jne
cmp
sub
sub
cdq
sbb
outs
iret
(bad)
and
fs
cmps
xor
jns
sub
add
pop
ss
xor
cli
cmp
add
cdq
std
inc
xchg
out
inc
jmp
dec
enter
mov
nop
inc
push
repnz
or
mov
pusha
mov
lods
push
and
icebp
movs
jecxz
pop
je
pushf
inc
(bad)
dec
leave
push
push
jae
dec
addr16
mov
push
mov
(bad)
cdq
retf
adc
sbb
in
das
(bad)
push
popa
pop
sbb
inc
adc
adc
dec
adc
imul
pop
inc
mov
mov
test
test
test
add
popf
and
std
mov
retf
inc
movs
stos
xchg
(bad)
sub
movs
xor
(bad)
icebp
mov
(bad)
gs
cmps
ins
xchg
jb
dec
pop
adc
fsubrp
data16
add
jge
popf
cmp
scas
xor
lods
lahf
mov
pop
fdivr
and
pop
retf
popa
or
lods
pop
call
add
xchg
outs
push
and
in
fst
hlt
jns
sub
ret
jl
repnz
dec
cld
mov
push
(bad)
stos
das
iret
push
mov
dec
loopne
lock
shl
pop
adc
scas
dec
out
and
repz
pop
fnstcw
push
sbb
outs
stc
inc
inc
adc
adc
call
add
add
jb
data16
or
pop
push
pop
dec
retf
xchg
aad
xor
add
fdiv
add
mov
outs
call
mov
out
out
pop
shl
cwde
mov
xchg
push
add
bound
sti
test
mov
push
pop
push
fsubr
sar
and
push
dec
xor
and
frstor
add
sti
pop
outs
push
dec
mov
jl
push
popf
jle
addr16
out
retf
add
in
add
push
lds
shl
xchg
ins
out
je
std
mov
mov
mov
mov
int3
(bad)
(bad)
rcr
dec
outs
xchg
test
cmc
sub
adc
jmp
xor
jle
push
push
dec
xchg
fst
sbb
(bad)
jns
lock
std
add
and
pop
mov
stos
je
ror
mov
sahf
xor
inc
fcmovu
movs
inc
mov
inc
sti
outs
jno
mov
mov
mov
xlat
xchg
inc
add
fisub
in
mov
fiadd
test
fld
mov
xor
test
sub
aaa
sbb
dec
or
mov
nop
and
cld
sbb
in
jge
pop
sub
adc
ja
js
sbb
js
ja
xchg
cmp
lahf
xor
push
jae
cmc
mov
aad
inc
je
push
jecxz
call
fstp
and
(bad)
sti
test
arpl
(bad)
scas
std
jae
loop
dec
(bad)
dec
retf
xor
sub
aam
inc
adc
sub
outs
jnp
dec
or
mov
repz
movs
jecxz
outs
add
jb
sbb
inc
jbe
outs
xor
or
xlat
call
jo
fidiv
pop
inc
mov
popf
ja
mov
cs
mov
xchg
adc
mov
push
pop
or
ret
cld
pusha
je
xchg
(bad)
fsubr
sbb
push
int
stos
daa
sahf
pop
add
pop
mov
push
adc
push
(bad)
jns
icebp
jp
into
inc
inc
je
loopne
or
outs
add
cmp
movs
add
mov
pop
pusha
hlt
idiv
add
jo
pushf
xor
mov
lahf
dec
aam
pop
pop
aam
test
xchg
pop
lods
cwde
lods
ror
inc
jns
test
cld
mul
xchg
inc
xchg
pop
std
cmp
iret
inc
shl
sbb
adc
xchg
push
mov
lods
inc
fiadd
dec
pop
cmp
sbb
jb
xchg
lea
jmp
push
scas
fs
push
popf
mov
data16
(bad)
in
retf
jmp
jl
xchg
leave
jns
mov
add
(bad)
fsubr
(bad)
xchg
(bad)
adc
cmps
sbb
mov
icebp
fst
pop
jns
mov
repz
sbb
retf
jns
sub
pop
lods
daa
addr16
cld
dec
cmp
mov
cld
jle
not
inc
into
sbb
fs
or
mov
xchg
adc
or
(bad)
xchg
push
fwait
ret
pop
cli
pop
pcmpgtd
cmp
aad
ja
(bad)
push
sub
mov
or
adc
stos
rcr
mov
cmp
mov
ret
add
js
or
mov
mov
xchg
sub
sbb
pop
sti
xor
jbe
aas
mov
into
das
mov
dec
xchg
(bad)
retf
call
in
into
test
shl
inc
sti
jle
je
js
lea
jl
cwde
add
outs
xor
sbb
add
pushf
xchg
test
popa
sbb
scas
adc
int3
enter
xor
rcr
pop
inc
mov
xchg
cdq
cwde
(bad)
retf
stc
jl
add
or
sub
inc
mov
inc
xchg
fwait
not
push
inc
sahf
rol
out
add
das
out
ret
inc
xchg
mov
(bad)
mov
repz
mov
push
mov
loope
inc
xchg
jns
sbb
or
shl
ds
and
sbb
ins
pop
jo
imul
cmp
shr
jmp
sbb
adc
add
sub
mov
dec
ror
jp
aad
and
sbb
mov
and
push
pop
movs
jg
lods
fnsave
mov
jne
mov
mov
enter
test
pop
mov
fwait
mov
ds
arpl
test
(bad)
pop
xor
pop
xchg
ds
sbb
arpl
dec
pop
dec
xchg
mov
mov
sbb
inc
int
cmp
and
cmp
out
dec
push
mov
jno
into
mov
ds
adc
in
push
out
jne
call
fucom
jo
sahf
inc
adc
std
add
ins
mov
sahf
sbb
xchg
mov
xor
loopne
add
pop
cmp
les
daa
cmp
push
dec
call
dec
retf
(bad)
out
inc
addr16
cli
cmp
pop
xor
sbb
push
mov
add
imul
loop
cwde
into
jnp
fs
or
bound
mov
mov
stos
adc
jl
sbb
push
mov
shl
iret
cld
xor
fistp
je
bndstx
enter
fadd
sbb
or
jno
push
mov
cli
imul
lds
sbb
add
aas
xchg
xor
outs
sbb
sub
mov
or
and
cld
mov
cli
dec
sbb
cdq
mov
mov
push
out
nop
sub
sbb
sbb
test
div
repz
retf
push
or
iret
(bad)
neg
ds
dec
(bad)
sahf
dec
or
scas
xchg
mov
repz
sbb
push
(bad)
fs
and
pop
xchg
add
popa
pop
mov
dec
push
mov
loope
inc
and
int3
mov
mov
and
sbb
call
cmc
mov
lea
xchg
imul
enter
leave
cmp
(bad)
push
jmp
hlt
aad
fiadd
push
cmp
scas
push
dec
and
mov
ror
stos
aam
dec
push
add
sub
loop
mov
lock
cmps
push
sbb
xchg
xchg
daa
sub
or
inc
loope
inc
jl
jb
nop
hlt
and
fild
push
out
add
push
mov
mov
sahf
mov
mov
ret
xchg
fcomp
push
aad
push
sbb
aam
push
int3
and
bound
pusha
push
outs
cwde
xor
mov
jg
arpl
fadd
push
add
cmp
es
jne
inc
xlat
and
mov
or
jecxz
xchg
jmp
sbb
popf
sub
(bad)
xchg
imul
out
push
lock
cdq
mov
jge
sbb
dec
fs
push
jmp
pop
xchg
retf
repz
mov
pop
sub
out
xchg
int
or
gs
idiv
add
adc
adc
mov
pand
dec
sbb
xchg
outs
sbb
popa
div
xchg
pop
pop
and
pop
test
mov
add
jmp
fdiv
xchg
mov
ret
rol
(bad)
or
jle
arpl
sbb
mov
mov
or
jg
fsub
call
(bad)
and
pop
cmp
sbb
test
jge
stos
test
and
cmp
in
jecxz
int3
shl
push
gs
jge
lahf
idiv
loop
dec
fucom
inc
push
jmp
mov
mov
movs
cwde
out
sbb
cli
mov
out
lahf
dec
xchg
ss
and
cmc
pop
enter
inc
ficom
jne
test
cdq
stos
mov
fisubr
pop
pop
test
pop
jne
mov
mov
fnsave
mov
dec
mov
xor
(bad)
jo
jg
inc
fisubr
(bad)
sahf
loope
movs
icebp
mov
cmp
mov
fwait
test
jl
mov
loope
std
lock
cmc
test
dec
(bad)
adc
and
push
add
mov
call
call
push
je
clc
sub
inc
or
push
mov
in
dec
pop
mov
inc
mov
pop
xchg
scas
sti
cmp
push
inc
int
loopne
mov
jno
jns
and
jb
ret
aam
mov
cdq
add
mov
mov
outs
mov
scas
je
sbb
inc
pop
xchg
fcom
push
leave
sub
cmp
add
sbb
xor
mov
mov
jl
cld
or
xor
add
cmp
jns
or
sbb
xor
push
pop
stc
out
xchg
sar
sbb
push
jb
shr
loope
mov
adc
rcr
sahf
into
sub
lock
loope
dec
jl
cmps
inc
xchg
cs
cmp
stc
fstp
dec
sbb
sub
xchg
push
pop
or
and
inc
sahf
out
or
in
pop
inc
dec
adc
adc
push
pop
cmp
sbb
mov
push
fwait
stos
mov
retf
(bad)
and
sbb
pop
cli
mov
call
sub
cli
pop
xchg
mov
ror
push
adc
leave
(bad)
mov
sar
mov
adc
in
fs
pop
gs
add
pop
mov
or
inc
push
fcom
fistp
xchg
pop
inc
addr16
push
or
aas
xchg
push
sbb
jp
and
dec
mov
xor
retf
xchg
mov
inc
ins
dec
call
mov
push
xor
fnsave
xchg
mov
sub
pop
add
xchg
mul
test
lods
push
and
cli
(bad)
xlat
data16
jp
dec
test
pop
je
push
and
nop
fnstcw
pop
lahf
nop
sub
inc
lds
imul
mov
add
and
stos
add
sub
sbb
push
pushf
imul
ror
mov
dec
sub
in
and
inc
lea
pusha
inc
xchg
xor
stc
cmc
pop
sbb
scas
dec
in
and
das
daa
sub
clc
in
dec
les
sbb
add
daa
not
adc
push
leave
pop
fist
sbb
add
xor
inc
add
icebp
or
dec
mov
addr16
mov
or
or
test
sbb
inc
inc
mov
inc
out
mov
push
int3
jmp
cmps
mov
dec
movs
ins
je
leave
lods
xor
clc
loop
jle
xchg
sub
or
(bad)
sbb
sub
test
push
cs
cmps
ins
lahf
call
imul
and
xchg
cmp
mov
pop
mov
sbb
push
inc
fucom
mov
test
jl
pop
inc
bound
inc
mov
cdq
inc
jmp
jns
in
jecxz
es
inc
movs
scas
mov
pop
jecxz
mov
into
fadd
cmc
pushf
jnp
outs
retf
or
xor
mov
push
call
fbld
mov
dec
(bad)
adc
push
sub
lahf
or
aas
into
dec
adc
pop
pop
xchg
and
lods
mov
loopne
mov
ret
outs
js
mov
loopne
les
cmc
cwde
dec
iret
in
adc
xlat
mov
ret
push
sti
lahf
lods
jmp
movs
mov
add
xlat
jecxz
test
mov
or
into
(bad)
std
fild
push
jp
mov
pop
add
mov
mov
shl
add
inc
mov
jl
or
xor
outs
jns
jns
lods
xor
mov
jae
fcom
loopne
inc
adc
ror
jecxz
jno
xchg
pop
or
retf
mov
std
sbb
mov
nop
cvttps2pi
les
mov
jo
dec
shl
ds
hlt
dec
loop
jb
pusha
pushf
sbb
lods
push
imul
fstp
cmp
dec
lds
adc
mov
inc
fs
outs
sbb
mov
in
xchg
fnsave
dec
jae
sbb
fnstsw
jmp
pop
cmp
fisttp
movs
xchg
shl
mov
pop
sti
mov
fldenv
jmp
ins
in
xlat
sbb
inc
lock
sub
adc
ja
mov
sub
jb
mov
sbb
jmp
push
pop
cld
and
jae
and
jg
mov
mov
jp
xchg
mov
jmp
mov
loope
bound
jae
pushf
sahf
jb
out
fs
mov
lods
add
inc
mov
fld
mov
xchg
push
inc
xchg
fdivp
ffree
fs
xchg
mov
out
lods
dec
add
fimul
daa
jo
sub
dec
and
pushf
fwait
test
(bad)
in
jl
cmp
sbb
cmp
mov
pop
inc
call
xchg
mov
xchg
cld
add
xlat
sbb
clc
mov
lahf
push
xchg
loopne
or
shl
adc
adc
ss
dec
pop
call
lods
mov
ds
in
(bad)
dec
out
push
rcl
pop
sub
xchg
ret
add
push
jne
data16
cmps
mov
dec
sahf
call
push
dec
sbb
sub
pop
xchg
adc
sbb
xchg
and
add
push
aas
in
mov
or
and
(bad)
pop
mov
mov
loop
push
add
inc
lods
stos
test
dec
pushf
inc
pop
xchg
test
shr
test
aaa
call
mov
push
repz
outs
mov
xor
(bad)
mov
jmp
inc
adc
clc
and
push
and
icebp
das
fwait
or
push
push
stos
or
jns
stos
cdq
xor
cmp
test
pop
mov
pusha
dec
lods
jle
mov
fwait
jo
mov
mov
cmc
dec
add
xchg
mov
cmps
push
repz
cmps
es
ds
(bad)
shl
nop
cmp
sub
mov
mov
std
imul
out
imul
mov
shl
aas
(bad)
xor
and
pop
dec
in
std
jmp
sbb
mov
fst
test
sub
xchg
xchg
test
pop
test
out
das
cmp
test
nop
lods
cmp
into
xlat
lock
addr16
and
xor
test
fwait
retf
or
out
inc
sbb
cmp
xor
mov
pop
fs
ror
xchg
cwde
xchg
inc
and
int3
fidiv
(bad)
sbb
rcr
(bad)
pop
test
add
div
movs
(bad)
cmc
dec
mov
lea
(bad)
stc
scas
repz
out
pushf
sub
xor
test
jbe
mov
dec
and
data16
mov
clc
addr16
jnp
fiadd
inc
ds
daa
adc
xor
pop
scas
push
retf
push
pop
ficomp
lods
inc
jnp
cmps
mov
call
retf
inc
pop
pop
movs
and
cwde
(bad)
ins
sub
jo
out
fnstsw
xchg
pop
jb
cmps
or
cmp
and
mov
gs
xor
sbb
mov
add
ror
(bad)
cli
aas
mov
or
cmp
pop
lods
cmp
inc
push
rcr
xor
scas
test
dec
sub
sbb
gs
arpl
xor
xor
out
xor
adc
dec
mov
stos
mov
retf
inc
lods
fidiv
int
ror
sbb
push
data16
mov
inc
pop
stos
pusha
sub
in
movs
rcl
(bad)
xchg
outs
bound
in
xor
cmp
pop
test
rcr
test
push
pop
stos
(bad)
dec
cmp
push
mov
push
shl
and
cmp
mov
push
jmp
fdiv
movs
pushf
into
push
xchg
push
pop
cmps
mov
and
cdq
gs
sub
cmp
push
mov
bound
push
les
push
dec
mov
mov
icebp
pop
call
push
cmp
inc
or
es
xchg
jb
arpl
sub
mov
fcmovnbe
mov
out
pop
jno
je
mov
inc
jmp
movs
ja
rep
mov
out
sbb
inc
xchg
pusha
outs
in
(bad)
xor
rcl
mov
jmp
dec
aad
xlat
push
push
dec
loop
rcr
sub
pop
addr16
dec
push
pop
mov
mov
dec
icebp
(bad)
in
bound
jmp
add
adc
popf
das
stos
or
outs
or
sub
or
xlat
jecxz
lahf
imul
push
gs
mov
jl
int
jl
jecxz
and
test
mov
scas
cmp
loope
jae
icebp
fisubr
pop
jmp
inc
sar
dec
or
adc
mov
mov
jmp
out
cmp
loopne
dec
je
mov
and
int3
ins
dec
mov
add
add
shl
fistp
jle
fdiv
sbb
movs
out
inc
hlt
jmp
dec
xchg
cmc
mov
sbb
mov
xchg
fs
mov
movs
cli
ret
in
mov
adc
icebp
in
jge
push
jne
pop
lods
xor
mov
or
call
call
jns
jns
mov
sbb
add
inc
inc
fnsave
pop
out
cmps
mov
xor
xchg
aam
pop
ror
dec
fwait
pusha
fiadd
inc
out
je
(bad)
xchg
pop
call
mov
(bad)
ret
add
test
out
pushf
cmp
or
fld
jnp
adc
pop
mov
retf
lds
aad
(bad)
pop
inc
sbb
add
mov
mov
xlat
jae
ficom
mov
push
mov
add
sar
and
push
fsubr
xchg
jecxz
xchg
cdq
push
jmp
dec
or
dec
mov
(bad)
cmp
std
or
test
mov
daa
pop
push
(bad)
xlat
mov
add
jns
pop
sub
xchg
mov
int3
dec
out
jmp
push
imul
bound
js
movs
pop
adc
adc
dec
out
in
int
pusha
cld
jne
js
push
enter
xchg
in
out
pushf
pushf
dec
adc
ret
sti
dec
sti
fwait
shl
or
test
adc
fild
icebp
cmps
popa
bnd
push
or
int3
add
gs
cmp
test
mov
fild
call
ins
pop
inc
loope
sub
sub
pop
mov
ror
shr
popf
cmp
xchg
movs
mov
(bad)
xchg
pop
mov
js
dec
jo
shr
rcl
mov
mov
popf
jne
sbb
nop
jge
mov
mov
call
jcxz
repnz
push
xchg
clc
frstor
dec
sub
dec
and
call
ror
movs
(bad)
push
push
pop
pop
aad
(bad)
cmp
popf
inc
retf
adc
jae
sub
sbb
shl
(bad)
jmp
xor
push
pop
mov
pop
mov
mov
sbb
loope
xor
push
mov
movs
hlt
cmp
fs
fldpi
(bad)
in
pusha
mov
fisttp
sub
inc
lock
xor
dec
sub
test
mov
cli
dec
cmp
adc
out
aaa
push
jno
mov
call
test
pop
fucomi
mov
jecxz
inc
inc
sub
stc
pop
xchg
rcr
push
test
mov
in
push
adc
cmps
mov
pop
xlat
fild
mov
sub
sbb
aad
push
cdq
dec
push
pop
and
or
mov
in
xchg
sar
sbb
push
dec
fidiv
ins
popa
xor
add
jns
and
mov
push
jae
icebp
mov
stc
arpl
movs
jnp
cmps
fld
int
dec
sar
xchg
call
jmp
mov
xchg
add
mov
pop
xchg
scas
ja
cmps
or
das
mov
loopne
into
or
and
push
in
aas
jbe
xchg
pusha
std
ret
hlt
popa
inc
jge
cmc
cmp
jp
adc
sbb
dec
sub
xchg
sbb
inc
(bad)
out
mov
pop
(bad)
dec
fs
mov
rcl
jmp
cld
or
(bad)
loopne
das
lock
mov
add
xchg
hlt
and
(bad)
dec
ins
test
aaa
clc
jb
push
ss
fstp
(bad)
gs
push
or
cmp
inc
jg
mov
in
jge
xchg
cmp
mov
push
arpl
xor
pop
iret
ins
ror
mov
xor
mov
clc
repnz
outs
inc
mov
cmp
xchg
stc
shl
int3
pop
movs
mov
ins
inc
xchg
xchg
sbb
rcl
mov
cld
push
cmc
sub
cmp
pop
fist
and
ins
ins
cwde
xor
test
mov
sbb
fmul
sti
pusha
push
push
cmp
cmp
add
mov
iret
jl
mov
pusha
xchg
fdivr
add
cmp
hlt
mov
stos
call
and
ror
inc
mov
mov
stos
fidiv
mov
xor
(bad)
jg
sub
and
int
loop
loopne
bound
lods
and
arpl
nop
movs
mov
in
mov
(bad)
fistp
jg
in
sbb
sub
sbb
adc
ret
xchg
popf
mov
outs
out
loope
mov
jbe
pop
inc
cmp
fwait
out
pop
out
push
cmp
mov
call
popf
sbb
les
stos
mov
pop
jns
mov
adc
das
nop
hlt
std
inc
jecxz
sbb
scas
jno
and
lahf
mov
add
dec
in
adc
inc
mov
mov
enter
data16
sbb
mov
adc
enter
rcl
sbb
lods
imul
nop
push
xor
div
jp
inc
mov
mov
add
jmp
sub
xor
js
sbb
imul
sahf
imul
mov
in
sbb
rol
inc
fsub
cmp
xor
inc
jne
inc
inc
aam
addr16
xchg
fstp
jg
js
dec
xlat
(bad)
jmp
test
inc
cmp
(bad)
mov
xchg
cdq
leave
cmp
jp
mov
mov
aas
test
fisubr
stos
sub
fpatan
(bad)
and
dec
sahf
push
pop
jno
mov
mov
test
jno
shl
sbb
xor
in
cmp
mov
xor
mov
neg
test
or
mov
mov
sbb
aad
push
rcr
cli
movs
xlat
sub
dec
jne
mov
cwde
test
mul
push
out
stos
push
(bad)
gs
dec
push
cs
jo
sbb
imul
dec
lods
mov
shr
xchg
cmp
mov
popa
and
ds
sub
adc
mov
xchg
sub
and
call
test
mov
iret
(bad)
ins
cwde
call
push
xchg
cli
mov
xchg
push
mov
(bad)
(bad)
mov
call
hlt
into
pop
loope
inc
or
fstp
jle
push
or
movs
stos
aaa
sub
add
ja
loopne
push
addr16
adc
daa
stos
pop
jne
inc
pop
mov
in
xchg
fisub
js
push
pop
pop
scas
jo
mov
mov
pop
out
movs
test
nop
imul
fwait
icebp
sbb
xchg
lds
xchg
xchg
push
rcl
push
pop
adc
icebp
mov
sbb
add
call
and
dec
pushf
aad
mov
xor
xor
sbb
movs
push
sbb
or
test
pusha
icebp
jge
push
lahf
pusha
(bad)
jge
mov
inc
fucom
jg
clc
loop
add
inc
mov
sbb
popf
xchg
lock
lock
out
inc
mov
fst
pop
sub
popf
inc
ja
dec
test
inc
sub
xchg
dec
sub
jns
int
mov
jae
push
or
pop
das
arpl
sub
aaa
scas
dec
push
sub
adc
adc
adc
div
sahf
and
bound
push
fsub
fwait
push
jmp
inc
push
hlt
ret
mov
mov
popa
jp
(bad)
cmps
data16
fistp
(bad)
ficom
dec
lods
or
and
icebp
push
gs
or
jno
pusha
push
jb
test
pop
repz
js
hlt
dec
dec
jb
hlt
push
or
stos
sbb
mov
bound
pop
gs
mov
push
fst
lods
stc
aas
mov
add
push
sub
retf
test
mov
popa
mov
retf
fisub
mov
jmp
dec
fisttp
or
push
mov
enter
std
jp
xchg
cmp
fstp
pop
pop
mov
ss
dec
push
dec
pop
mov
inc
lods
shl
(bad)
mov
add
xchg
das
loop
fild
mov
inc
push
mov
icebp
cld
cmps
out
xchg
xchg
mov
jmp
dec
stc
xor
xor
mov
and
aaa
sbb
sar
je
mul
or
or
sbb
ret
pop
jg
sbb
or
push
jno
mov
xchg
jae
jp
lods
je
mov
pop
cwde
test
cmp
cmps
mov
out
push
inc
ror
imul
sar
adc
mov
cmc
mul
jg
ret
xchg
popa
sbb
leave
mov
mov
das
and
shr
stc
arpl
cmp
ds
or
pop
ins
mov
sbb
jns
lock
cmp
inc
push
dec
cs
scas
cmp
popf
push
and
sub
push
outs
(bad)
out
sbb
mul
jge
pop
xchg
leave
and
fdiv
adc
dec
sbb
xor
shr
icebp
fiadd
mov
sub
xlat
jb
aaa
jge
fidivr
dec
xchg
fstp
dec
jecxz
pop
test
adc
inc
add
xor
jle
inc
gs
bound
push
imul
sti
jb
fs
pop
fisubr
ret
mov
jmp
sti
dec
cmps
mov
pop
jg
fwait
mov
leave
fiadd
mov
ss
dec
mov
rcl
inc
push
or
sbb
stos
inc
add
test
mov
or
push
lds
pop
push
inc
fimul
add
xchg
sub
cmp
jo
mov
or
lods
cwde
aaa
or
jae
stos
in
lods
sti
add
inc
jnp
mov
ins
lahf
shl
push
rcl
stos
sub
lods
stos
dec
mov
xchg
mov
sub
jnp
push
retf
icebp
stos
je
add
push
movs
adc
mov
and
mov
jns
inc
pop
jmp
cmp
push
adc
repz
pop
ror
sahf
shl
scas
mov
cwde
jge
and
ds
fbld
sub
hlt
mov
mov
inc
add
icebp
jmp
mov
mov
adc
inc
call
adc
jno
sub
mov
cmps
mov
adc
repnz
cli
int
fucomi
ins
jno
add
add
push
add
sahf
and
add
pop
outs
mov
jnp
lods
lods
jno
push
jnp
cmc
out
retf
aad
cli
jge
pop
mov
inc
mov
test
fdivrp
mov
mov
push
addr16
xlat
pusha
outs
pushf
mov
adc
sub
test
pop
popf
sbb
lea
and
(bad)
call
cmp
iret
daa
push
inc
jbe
fwait
pop
mov
lods
pop
sbb
clc
ins
cmp
cmps
sbb
je
mov
imul
rcr
xchg
retf
sbb
mov
adc
test
call
lock
xor
out
leave
imul
fnstsw
pop
jl
mov
les
mov
vaddsd
cmp
add
sbb
add
jg
sar
push
popf
test
outs
sbb
cmp
repnz
cwde
xchg
jo
adc
cmp
inc
mov
sahf
dec
call
cmc
test
enter
movs
cli
sub
mov
mov
repz
arpl
clc
inc
add
clc
test
push
out
sbb
adc
and
xchg
xchg
loopne
js
mov
ja
sub
adc
inc
xchg
adc
imul
pop
out
retf
pop
and
int
loop
sub
sub
xchg
mov
inc
int
or
neg
mov
out
movs
test
dec
add
icebp
test
imul
enter
jecxz
into
pop
in
inc
dec
ja
mov
jno
jg
test
mov
or
outs
(bad)
cmp
repnz
sbb
mov
sbb
sbb
adc
mov
and
sar
fs
dec
test
ret
movs
shl
jecxz
jb
iret
repz
rcr
mov
pop
xchg
mov
and
jmp
jmp
xchg
data16
ror
sub
icebp
stc
jl
sub
or
adc
cmps
pop
sub
mov
popf
push
add
inc
(bad)
nop
sbb
cmps
and
pop
sbb
adc
or
xchg
cs
mov
cmps
ss
cmp
shl
pop
test
inc
cdq
pop
aad
sbb
loopne
repz
xor
(bad)
std
and
dec
mov
mov
dec
mov
mov
mov
sar
mov
dec
les
adc
adc
(bad)
repz
push
fs
inc
mov
mov
cmps
addr16
mov
ficom
mov
mov
mov
push
mov
bound
cs
out
fbstp
(bad)
pop
inc
cmp
jp
out
outs
in
xchg
addr16
dec
xchg
cmps
shr
test
xchg
and
dec
mov
outs
cmc
imul
ret
pop
inc
or
push
jne
mov
stos
mov
adc
fstp
cmp
and
inc
adc
add
(bad)
outs
inc
movs
jae
shr
push
cdq
sbb
in
mov
fcomp
inc
xchg
mov
and
(bad)
mov
(bad)
xchg
popa
adc
enter
inc
sti
lods
lods
enter
js
xchg
xchg
and
jmp
movs
std
cmp
imul
rcl
inc
rol
jg
pop
mov
inc
sub
xchg
into
retf
adc
icebp
pop
ret
mov
bound
push
jmp
sbb
sub
pop
inc
lods
inc
and
call
loop
pushf
rcl
gs
jo
popa
jecxz
sahf
inc
sti
cmc
call
rcl
and
mov
mov
(bad)
xor
fmul
dec
(bad)
ss
push
ret
mul
ds
fadd
test
mov
sub
jns
cli
or
in
sbb
addr16
adc
sbb
fwait
nop
adc
mov
cmp
push
in
test
test
pop
jle
jne
mov
pop
adc
push
loop
jb
push
mov
icebp
pop
adc
jb
mov
in
fcom
pop
jne
mov
pop
imul
sbb
std
cli
cmc
and
and
jg
mov
dec
pop
jg
ror
pop
add
push
fst
sbb
xor
cmp
xor
sub
or
mov
je
(bad)
(bad)
sbb
sti
jmp
sti
jl
inc
mov
fadd
popf
test
retf
jp
test
movs
mov
ror
jmp
aaa
hlt
in
sub
pop
push
pop
outs
mov
add
popf
mov
es
aam
leave
loope
mov
and
or
fwait
or
jo
ins
addr16
jns
mov
enter
mov
dec
push
mov
out
fisttp
cld
xchg
mov
push
fcomp
cmps
pmaxsw
cld
movs
ror
jns
fiadd
stc
icebp
ret
inc
je
lea
outs
xlat
das
pop
add
jmp
fs
dec
sbb
mov
stos
inc
sahf
repz
shl
dec
inc
rol
pop
cmp
mov
test
mov
inc
sahf
xchg
xchg
sbb
test
lock
pop
mov
loopne
jmp
xchg
out
dec
mov
lahf
aaa
out
mov
mov
lea
clc
shl
jl
mov
fs
xor
adc
mov
fld
inc
or
pop
in
sbb
test
clc
in
sbb
daa
jmp
add
cmp
and
jle
fisttp
mov
mov
shl
pop
into
jmp
inc
jmp
inc
(bad)
cld
push
add
pusha
xchg
test
lock
pushf
js
fisttp
push
mov
sar
cmp
and
fbld
inc
mov
adc
mov
popf
ret
pop
jbe
inc
loop
adc
je
test
pop
jns
push
push
lods
add
lods
sub
cdq
cmp
outs
adc
fild
xlat
lahf
adc
mov
stos
jae
dec
mov
lods
int
test
xchg
xchg
test
xchg
xlat
(bad)
cmp
mov
cmp
cmc
retf
int3
inc
stc
xor
cmp
dec
sub
(bad)
xchg
mov
pop
stos
pop
jecxz
jle
call
(bad)
aaa
push
add
mov
dec
inc
lods
jl
(bad)
sbb
movs
ss
cs
ror
cmp
push
inc
cwde
dec
jecxz
cmp
mov
arpl
out
sub
mov
cli
test
add
mov
(bad)
cld
cmc
and
mov
push
aam
sub
icebp
div
push
shl
push
push
mov
inc
or
mov
pop
iret
leave
sbb
pop
mov
adc
lock
inc
xchg
pop
add
mov
cli
cli
mov
popf
fcomp
fbstp
fisubr
fiadd
popf
pop
xchg
loopne
pop
shr
xchg
jnp
sbb
lea
mov
enter
fisub
mov
ss
repnz
sub
(bad)
int3
pop
in
pop
dec
aas
pop
mov
pusha
js
inc
inc
push
cdq
mov
in
int3
mov
sar
fistp
stos
or
stos
adc
lods
add
push
pusha
jmp
cmps
cmp
gs
mov
ret
imul
in
push
lds
sub
sbb
xchg
xlat
xchg
fcmove
pop
mov
daa
adc
fldenv
sub
lea
dec
arpl
mov
lods
or
pop
xor
mov
daa
mov
daa
call
jle
mov
and
mov
fsubr
call
jne
movs
pop
jmp
pop
popf
stos
dec
adc
jecxz
sub
adc
adc
mov
ds
fdiv
mov
(bad)
or
fcomip
out
push
loope
jge
jge
or
xchg
pop
sub
add
cli
hlt
add
sti
jb
jp
ret
add
adc
clc
addr16
pop
inc
test
xchg
pop
xor
jge
idiv
pushf
js
push
(bad)
jo
cdq
jecxz
xchg
int
inc
in
test
test
mov
fcmovne
xor
lea
cmp
loop
push
js
sub
ss
repnz
pop
lock
push
xor
dec
mov
or
cmp
pusha
lahf
ret
add
xor
xor
jbe
lods
pop
mov
cdq
js
xchg
in
popf
cmovae
js
retf
enter
jl
pop
scas
push
jmp
outs
fiadd
adc
retf
es
bound
enter
(bad)
mov
sti
jp
mov
adc
cmp
lahf
adc
xor
xor
xchg
cmp
dec
(bad)
dec
pop
and
adc
call
dec
push
mov
lea
dec
cld
shl
dec
scas
aad
hlt
inc
bound
ss
retf
cmp
mov
cmp
shl
les
fwait
mov
loope
lock
dec
add
xchg
inc
xchg
dec
(bad)
dec
ds
enter
push
mov
push
sbb
mov
into
xor
aam
loop
sub
aas
cld
xor
push
xor
add
inc
dec
ret
mov
jge
mov
jb
out
or
lea
push
inc
movs
imul
cli
jnp
mul
js
adc
imul
je
xchg
test
icebp
stos
fst
mov
jmp
push
xlat
mov
sub
sbb
sub
pop
jge
xchg
jbe
mov
(bad)
dec
int
adc
inc
push
push
sub
push
test
retf
pop
or
inc
in
cmps
and
cmp
repnz
cwde
sti
jbe
inc
inc
(bad)
lds
into
std
jnp
retf
cwde
lds
sti
sar
or
pop
nop
neg
into
sbb
xchg
mov
shl
cwde
mov
cmp
mov
in
pop
pop
jl
sbb
push
mov
rcl
in
js
xlat
push
ins
jne
enter
push
(bad)
retf
sbb
jnp
xchg
xor
aad
xor
xor
inc
mov
je
addr16
pop
xor
sar
mov
cwde
inc
sbb
fisttp
mov
inc
inc
lahf
mov
mov
mov
or
inc
repnz
sbb
or
jg
pop
sub
mov
mov
xchg
jmp
push
mov
popa
in
add
and
jle
mov
push
lahf
mov
xor
in
push
out
add
push
add
sbb
in
mov
nop
sbb
mov
add
das
adc
jmp
mov
xor
cmp
int3
(bad)
jg
pop
pop
add
fstp
adc
imul
scas
sahf
push
sbb
pop
sti
clc
sub
add
or
push
adc
popf
pop
enter
inc
lods
dec
sub
(bad)
xor
sub
xchg
xor
jbe
push
sar
add
add
fcmove
mov
mov
pop
ja
mov
mov
popf
test
xchg
push
jmp
sub
pop
dec
in
add
cmp
xor
lahf
push
or
fstp
push
fsubr
xor
sub
inc
sub
imul
pop
mov
add
push
aas
loop
xchg
inc
mov
cbw
adc
inc
xchg
(bad)
loopne
sbb
inc
and
fnstsw
xchg
mov
in
lock
fisubr
jmp
in
adc
or
xor
dec
mov
ins
pop
push
fwait
mov
ret
adc
jge
mov
fwait
cmc
sbb
pop
into
adc
inc
daa
or
push
fs
dec
sbb
xor
mov
or
and
fld
ret
sbb
mov
retf
xchg
jg
idiv
or
test
movs
xor
test
loop
xchg
add
(bad)
pushf
or
sub
(bad)
std
cmp
cmp
test
or
mov
(bad)
pop
lds
pop
add
jmp
or
pop
mov
enter
dec
cdq
pop
cmp
mov
jecxz
mov
hlt
fs
cmps
jno
mov
loopne
mov
jl
into
movs
cmps
adc
pop
mov
add
cmp
in
rol
sbb
lock
adc
xchg
fnstcw
cmp
cmp
xor
pop
lods
outs
and
ret
dec
sbb
pop
sti
xlat
adc
mov
pop
pop
leave
aas
xor
push
aas
xchg
sbb
mov
push
gs
push
inc
rol
es
inc
cmc
sbb
scas
push
rol
fld
stos
mov
loop
push
sub
pop
mov
ins
push
in
mov
mov
loope
inc
mov
dec
ror
or
(bad)
push
add
and
cwde
cdq
lds
stc
and
xlat
push
inc
pop
pop
(bad)
sbb
ds
sub
push
or
movntps
xlat
loopne
mov
add
mov
xchg
ins
leave
mov
push
mov
xchg
or
fcomp
adc
adc
std
frstor
xchg
cmp
xor
lock
add
aas
inc
fbstp
jns
xor
mov
jmp
or
mov
ds
lods
je
jge
lahf
js
aad
inc
test
adc
ins
rcr
nop
repnz
loope
mul
mov
sti
mov
jp
(bad)
mov
mov
add
scas
push
call
mov
and
ins
jbe
xchg
push
popa
lods
movs
mov
push
(bad)
and
xor
sub
adc
bound
jg
nop
adc
std
aaa
inc
push
jae
aad
cmp
inc
jge
popa
cmc
fadd
inc
sar
xor
call
test
jnp
mov
mov
and
lds
mov
addr16
push
aam
pop
xor
mov
push
stc
inc
pop
sbb
fidiv
inc
sub
jnp
mov
(bad)
push
clc
aad
xchg
pop
push
pop
and
inc
adc
sbb
inc
dec
xchg
retf
mov
mov
out
movs
pop
pushf
into
or
sbb
test
fadd
xchg
jg
test
(bad)
std
lods
and
and
mov
pusha
loopne
mov
sbb
shr
mov
cmp
cmps
or
and
dec
fs
fwait
xor
test
mov
jmp
push
jb
sbb
and
add
into
xor
pop
push
scas
push
sbb
mov
sahf
mul
adc
not
inc
jns
xchg
(bad)
jmp
int
push
jmp
pop
and
fild
mov
jns
xor
scas
jecxz
dec
jle
mov
push
fisttp
dec
or
je
cs
push
or
repnz
add
pop
aaa
test
mov
fwait
jo
mov
mov
and
lahf
call
jp
popa
jae
xchg
pop
rol
adc
mov
nop
and
jne
lahf
mov
sbb
cmps
adc
mov
xchg
mov
fisub
pop
test
xchg
sti
pop
sti
dec
arpl
cmp
adc
movs
dec
sbb
cmc
mov
cmps
push
fcmovbe
jnp
retf
inc
imul
sub
and
and
inc
dec
scas
push
cmp
stc
add
daa
imul
push
stos
popa
cli
mov
dec
or
outs
in
mov
stos
or
ret
push
xchg
mov
jmp
test
cmps
dec
les
dec
add
push
inc
scas
push
push
cmps
inc
and
test
retf
rol
in
movsx
push
adc
mov
test
aaa
stos
jo
lahf
push
adc
mov
sbb
aaa
(bad)
fild
push
pop
pop
push
sar
pushf
shl
shl
xlat
add
div
xchg
pop
lods
(bad)
das
dec
xor
jmp
inc
sbb
fimul
xor
iret
pop
inc
ss
sbb
pop
div
and
jmp
into
(bad)
dec
sbb
mov
cmovge
hlt
add
add
jl
inc
mov
movs
adc
xchg
test
or
leave
sti
xor
sbb
imul
sahf
sbb
jmp
xchg
push
out
test
ins
pop
mov
mov
mov
hlt
push
cmc
dec
mov
and
(bad)
fstp
push
add
cmp
dec
sbb
sahf
stos
mov
cs
(bad)
push
xchg
adc
hlt
sub
sub
sub
jns
cmps
push
sub
bound
and
(bad)
std
movs
das
retf
sar
jge
jge
popa
aam
fisubr
mov
inc
xchg
call
cli
dec
mov
dec
test
scas
(bad)
call
inc
iret
push
icebp
add
scas
out
js
cmp
xor
mov
pop
lods
fstp
push
popf
(bad)
das
xchg
int3
pop
push
jb
retf
push
jne
xchg
sbb
mov
add
neg
das
add
fucom
mov
xchg
fistp
jbe
push
xchg
mov
sbb
dec
sub
fst
mov
pop
je
movs
mov
xlat
call
mov
repnz
in
daa
loope
jle
pusha
les
sbb
cli
addr16
push
cmps
(bad)
sbb
inc
(bad)
adc
adc
or
jae
movs
jl
mov
lods
sub
mul
sti
pop
fs
fwait
and
out
arpl
xchg
jno
sti
in
xor
mov
add
adc
or
test
and
std
out
test
fwait
cmp
sub
aaa
jg
mov
lahf
(bad)
ret
out
dec
les
inc
inc
add
adc
or
inc
pop
movs
jbe
xchg
sub
fwait
test
pop
jmp
call
pusha
sar
xchg
call
mov
stos
jbe
push
mov
xchg
xchg
add
mov
fidiv
jle
dec
cmp
idiv
mov
jmp
inc
jne
jnp
pop
xchg
stos
mov
fdiv
jg
std
data16
pop
loope
adc
xor
pop
stos
sub
inc
pusha
shl
mov
pop
sahf
mov
pop
in
jmp
dec
pop
pop
cwde
das
ror
mov
push
call
mov
lock
push
mov
mov
sbb
inc
pop
mov
out
push
sbb
cld
scas
inc
xchg
xor
sbb
jnp
push
mov
add
cmps
mov
pop
cmp
pop
mov
scas
or
push
ds
sbb
mov
dec
xchg
enter
cmp
pop
pop
sar
(bad)
cmp
fisttp
mov
rol
add
mov
shl
xchg
fisttp
(bad)
scas
push
shl
pop
inc
xlat
iret
jmp
(bad)
xor
mov
sub
scas
mov
lock
int3
in
jno
fadd
sbb
or
xor
xchg
sub
mov
inc
call
fdiv
xchg
mov
gs
pop
fwait
enter
xchg
out
repnz
inc
sti
mov
inc
push
xor
nop
fdivr
inc
push
sub
clc
cmp
push
sar
shl
lds
cmova
dec
add
mov
into
pushf
or
idiv
repz
neg
jl
jmp
cmp
pop
enter
wrmsr
lods
push
js
xchg
cwde
or
jae
mov
cmp
jmp
and
jl
hlt
mov
pop
(bad)
loope
ins
cmc
outs
mov
xor
iret
loop
loop
dec
dec
xchg
mov
cmp
pusha
out
sbb
or
pop
adc
jne
ror
push
pop
stos
pop
shr
lahf
xchg
push
push
push
pop
(bad)
and
cmc
and
movs
ins
sbb
xor
sub
loopne
test
jmp
cs
xchg
enter
out
xor
icebp
push
dec
cdq
sbb
cmp
retf
pop
lahf
fisubr
ins
cmps
sbb
hlt
pop
sti
and
push
sbb
mov
inc
int
loop
sbb
add
xor
popa
xor
mov
(bad)
or
jae
cwde
ins
sbb
stos
stc
sub
cmp
out
cmps
cmp
loopne
mov
and
aas
movs
mov
push
cli
fimul
sbb
sub
mov
jecxz
push
aam
int3
and
out
pop
icebp
adc
ins
mov
inc
aas
imul
int3
pop
clc
test
shl
jno
aam
imul
xor
pop
adc
outs
jmp
aaa
dec
in
mov
sbb
inc
mov
js
rcl
adc
stc
mov
xchg
inc
call
ins
loope
icebp
aas
pop
xchg
shl
mov
data16
jb
cmp
ss
jb
cmp
sbb
adc
cld
push
sub
cdq
xchg
scas
sub
rol
mov
sbb
and
and
fwait
dec
inc
lea
je
movs
cwde
sbb
outs
aam
or
jnp
dec
ins
fs
aas
xchg
mov
sub
add
sahf
jg
out
xchg
cmp
call
jns
loop
dec
(bad)
outs
aam
and
jmp
inc
out
inc
sub
fmul
jne
mov
movs
fwait
retf
fadd
jecxz
sbb
rcr
jo
sbb
jnp
fimul
sbb
cmp
push
cmp
jmp
inc
jle
fnstenv
scas
sahf
jge
mov
push
in
push
cmp
fidiv
mul
arpl
out
or
mov
call
xor
icebp
and
inc
les
arpl
dec
pop
add
pop
in
in
jo
cld
gs
pop
and
or
scas
pop
fwait
aaa
repz
push
xchg
push
or
mov
in
xchg
adc
xchg
or
push
push
and
pop
test
pop
pop
int3
aad
or
inc
mov
mov
jl
mov
cli
nop
loope
jno
mov
out
sbb
lock
imul
xchg
pop
cmp
mov
(bad)
sbb
nop
or
(bad)
push
push
jp
mov
daa
call
pusha
inc
mov
and
aam
add
ins
iret
bnd
mov
pop
jo
jne
scas
(bad)
fs
xchg
push
call
(bad)
and
cmps
outs
xchg
xchg
mov
sti
fs
ret
dec
lock
jmp
pop
rcl
jnp
cmps
cmp
mov
ret
mov
push
inc
out
dec
clc
stc
sbb
add
inc
xor
add
and
mov
inc
rep
stc
push
and
inc
sti
fsub
xor
mov
sbb
mov
outs
jecxz
mov
retf
and
fisub
lods
ror
mov
(bad)
bound
(bad)
out
mov
popa
pop
xchg
fnstenv
ins
out
ds
shl
ret
data16
sbb
adc
jns
outs
push
push
jmp
sbb
mul
mov
jg
pop
or
adc
inc
jbe
mov
xchg
pop
out
je
pop
add
sub
cmp
lods
mov
fiadd
pop
ror
test
dec
cmps
div
daa
repnz
lods
cs
pop
jbe
xor
cmps
cmc
xchg
test
jmp
aam
push
rol
fs
mov
push
push
mov
lahf
mov
(bad)
cli
add
sbb
sub
jae
jg
mov
bound
das
pop
ror
aas
mov
inc
hlt
push
dec
jns
js
movs
aad
stos
mov
pop
ret
mov
lods
maskmovq
test
xchg
push
sbb
jmp
lahf
test
xor
cs
in
out
jne
pop
jl
dec
mov
inc
stos
cmp
or
push
inc
std
dec
ret
retf
fdiv
pop
adc
dec
sbb
mov
mov
adc
cmps
lahf
xor
es
jmp
and
and
out
push
in
(bad)
mov
sbb
mov
mov
push
call
retf
adc
push
jmp
addr16
stc
push
pop
jb
mov
jmp
out
or
retf
dec
dec
or
xor
jl
xor
aam
adc
dec
push
test
pop
xrelease
sti
scas
xchg
(bad)
std
je
addr16
mov
lods
hlt
xor
mov
lock
mov
mov
lahf
sahf
mov
xor
xlat
cmp
call
(bad)
in
je
adc
add
outs
dec
push
mov
rcl
repnz
ret
push
sbb
aas
mov
sub
bound
dec
inc
fsubr
jnp
retf
dec
and
sbb
jbe
ja
dec
lds
loop
cmc
call
in
sbb
mov
adc
enter
xchg
mov
mov
pop
adc
(bad)
jb
cmp
inc
xchg
cs
mov
pop
push
mov
hlt
inc
jmp
js
gs
adc
or
lods
push
popf
adc
add
mov
pusha
mov
or
enter
push
gs
pusha
loope
retf
cmp
xchg
push
push
cli
enter
inc
mov
popf
mov
mov
popa
cmps
mov
das
sbb
test
mov
or
loop
(bad)
xor
inc
mov
push
jno
sub
ja
mov
ins
jecxz
push
rcl
push
push
xor
dec
jae
adc
mov
jg
call
fsub
jmp
stc
data16
sub
test
mov
or
fld
mov
imul
repz
stos
xor
jb
xor
es
jmp
bound
cmp
cmps
mov
(bad)
jnp
and
jg
add
or
push
ja
mov
adc
add
cmps
and
nop
lods
and
or
int
cmps
inc
mov
dec
and
popa
lahf
repnz
fstp
pslld
stos
shl
xchg
mov
pop
sbb
(bad)
(bad)
(bad)
aad
push
xchg
dec
fnstenv
inc
pop
dec
push
and
ss
pop
mov
push
mov
lods
js
icebp
aas
mov
fs
inc
add
push
add
sub
sahf
push
inc
xchg
pop
out
(bad)
(bad)
or
int3
loop
(bad)
repnz
sbb
pushf
pop
cld
(bad)
mov
loopne
daa
retf
sub
push
cmps
test
movs
ret
mov
xchg
retf
popa
lods
movs
dec
retf
push
sbb
xlat
jmp
cmp
mov
mov
add
mov
test
inc
push
or
and
mov
dec
jbe
imul
sbb
mov
push
sar
ficomp
push
ins
test
cmps
repz
mov
nop
pop
xor
cmps
mov
fwait
call
nop
cld
adc
retf
dec
mov
ss
push
std
adc
add
or
xchg
imul
adc
ret
jecxz
stos
fdivr
or
sub
pusha
mov
pop
jae
or
cmp
movs
stos
xor
idiv
out
dec
inc
lds
aad
sahf
cld
mov
test
add
xchg
lea
dec
sub
lods
leave
aam
push
xchg
movs
xor
addr16
dec
add
fist
sub
test
mov
leave
xchg
sub
scas
inc
in
fst
sar
data16
mov
adc
pop
push
test
and
sbb
xchg
lods
aaa
add
pop
out
cwde
(bad)
call
jns
and
pushf
rcr
mov
sub
pusha
scas
mov
je
xchg
mov
lock
mov
and
jmp
sub
adc
mov
mov
mov
xchg
frstor
cdq
clc
js
inc
dec
(bad)
inc
or
pop
popf
adc
inc
inc
fwait
dec
and
sbb
stos
call
mov
stos
stc
retw
sbb
mov
inc
cmps
mov
dec
das
sar
mov
stos
mov
mov
xor
jmp
icebp
rol
(bad)
fist
sub
mul
xchg
pop
add
jne
push
mul
dec
in
test
mov
inc
stos
dec
add
stos
call
ret
or
push
mov
xor
sbb
xchg
xchg
ins
and
movs
push
mov
push
jae
dec
repz
sahf
dec
out
dec
push
rol
add
je
sbb
call
mov
lods
stos
dec
icebp
jae
dec
aas
sbb
(bad)
jp
adc
push
jb
and
mov
int3
pop
out
xchg
and
fs
fiadd
push
pop
xor
inc
movs
or
aaa
push
xchg
stos
clc
cmove
inc
cld
fucomi
cmp
inc
fs
mov
loop
repnz
jmp
mov
bound
leave
cmps
add
lock
fsin
dec
dec
mov
das
aas
cmp
out
hlt
jp
adc
outs
jp
xchg
cmp
mov
and
pop
fsubr
adc
xor
adc
or
dec
or
pcmpeqb
and
cs
jge
pop
sbb
call
retf
out
loop
push
mov
xchg
sub
sbb
lahf
jle
xchg
cwde
cmps
xor
icebp
cmc
mov
(bad)
mov
dec
or
icebp
sti
fstp
pop
daa
jnp
cmp
dec
mov
mov
shl
iret
jge
clc
jge
lea
add
fild
outs
push
add
mov
popf
cs
outs
dec
mov
outs
lahf
mov
ds
aam
inc
xchg
enter
jl
scas
outs
aam
fdivr
mov
popf
mov
mov
pop
cdq
mov
inc
je
mov
popa
add
jmp
jge
mov
pop
and
and
inc
push
push
pop
out
nop
mov
or
popa
(bad)
sbb
add
or
ja
mov
pushf
ds
popa
bound
pusha
mov
(bad)
clc
cmps
sti
pop
(bad)
lock
pop
jle
test
xchg
loopne
mov
mov
sub
stos
mov
mov
push
lods
xchg
mov
inc
out
ficomp
mov
iret
sbb
nop
sar
inc
retf
push
bound
mov
cmp
or
push
aad
(bad)
fistp
stos
lea
je
mov
sbb
sbb
sub
mov
sbb
xor
retf
cmps
inc
mov
jns
or
lock
mov
cwde
jnp
out
cmps
xchg
cmp
inc
scas
mov
dec
dec
(bad)
fidiv
clc
loope
pop
jle
mov
sub
leave
push
ficomp
jnp
xor
jae
pop
out
movs
mov
fucomi
or
xchg
add
daa
or
add
adc
adc
mov
(bad)
rcr
out
push
inc
cmps
outs
out
sahf
push
xchg
mov
add
(bad)
shl
mov
dec
xchg
xor
adc
in
repz
call
cmps
das
add
(bad)
(bad)
jge
cs
sub
xchg
dec
and
mov
test
inc
(bad)
jns
aam
ret
fmul
add
fiadd
cmp
lea
adc
or
stos
cmp
retf
stos
sar
push
sbb
cmps
jb
xchg
fnstcw
loopne
mov
xchg
mov
mov
ror
test
pop
pushf
sahf
popf
adc
aad
xchg
mov
pushf
aad
xchg
inc
hlt
sub
push
repnz
push
push
fistp
pusha
xchg
push
sbb
mov
icebp
sbb
ret
xcrypt-ecb
cmps
mov
push
sbb
inc
outs
arpl
add
iret
dec
sbb
pop
jmp
xor
out
adc
js
pushf
push
(bad)
cwde
(bad)
dec
xchg
std
out
mov
pusha
adc
lds
inc
pop
mov
int3
fdiv
xchg
dec
xchg
sub
sub
cmp
test
les
and
add
and
lahf
mov
and
(bad)
mov
pop
imul
aas
es
add
gs
(bad)
outs
sbb
das
sbb
dec
cli
sar
cli
addr16
pop
test
xchg
(bad)
in
out
mov
push
jmp
pop
cdq
lods
scas
mov
lods
je
mov
int
xchg
mov
fnstsw
imul
pop
sub
shr
push
aas
fdivr
pop
inc
add
stos
nop
test
in
sbb
aas
fist
ja
cmp
xor
pop
sbb
jp
mov
out
movs
cmp
pop
popaw
nop
dec
loope
aam
xchg
int3
mov
in
dec
(bad)
xchg
add
adc
mov
jg
xchg
xchg
stos
cmp
xchg
cwde
push
iret
push
or
xor
repz
(bad)
push
dec
jp
cmps
or
xchg
out
xchg
lahf
mov
(bad)
jge
lock
inc
push
les
sbb
add
and
mov
jp
aad
add
mov
jmp
mov
cmp
call
and
ficomp
mov
aam
mov
lods
xor
ror
test
stos
fwait
push
in
fsubr
sbb
mov
and
imul
mov
xchg
xchg
cmp
aad
in
out
xor
inc
cli
and
or
or
dec
push
test
and
or
xchg
lahf
bound
pop
loope
test
std
inc
outs
mov
xchg
les
loopne
push
icebp
loope
push
int3
shr
xchg
mov
adc
adc
not
mov
dec
shr
and
mov
scas
cmp
push
jns
popa
mov
dec
pop
or
pop
fadd
clc
dec
push
jnp
retf
sub
add
je
inc
addr16
movs
and
(bad)
mov
pop
outs
xor
jae
outs
out
frstor
rcl
in
adc
js
std
mov
js
rol
fiadd
icebp
sub
(bad)
jmp
scas
xor
ss
mov
pushf
mov
popf
leave
sbb
push
je
add
or
dec
nop
or
mov
retf
cmp
jbe
test
pusha
xchg
ret
mov
cmps
cmp
icebp
sbb
cmp
loopne
(bad)
fld
dec
pop
jmp
scas
sbb
icebp
xlat
jmp
pop
fimul
pop
pop
call
scas
pop
pop
rol
shl
xchg
jmp
ds
ds
mov
pushf
or
jle
mov
add
adc
sahf
inc
xchg
enter
add
jb
mov
movs
outs
popf
mov
and
push
test
cmps
inc
sbb
repnz
loope
dec
push
mov
ss
ss
add
inc
mov
push
inc
sahf
outs
add
mov
push
(bad)
push
int
mov
xor
add
jo
push
stos
pop
shr
sbb
and
js
icebp
lahf
das
mov
add
test
cmc
mov
aas
mov
mov
retf
mov
or
(bad)
popf
jp
fs
cmp
mov
clc
repz
fnstsw
jmp
aas
daa
sar
aad
stc
xor
sub
rcl
outs
cmp
test
dec
fdiv
cmp
aad
adc
jmp
das
jb
arpl
sbb
sub
or
mov
jg
stos
std
sub
xor
stos
and
ret
jp
push
pop
push
mov
popa
mov
pushf
addr16
test
sti
sar
sub
inc
(bad)
cld
mov
pop
xchg
xchg
test
jmp
mov
inc
xchg
addr16
add
mov
sub
scas
subps
arpl
or
cmp
jns
out
or
pop
(bad)
and
imul
repnz
inc
cwde
dec
push
xor
fldenv
leave
leave
mov
mov
push
cwde
inc
jle
sahf
outs
ret
xchg
cmp
mov
pop
fsub
mov
mov
dec
mov
mul
fnstenv
sbb
and
sub
ss
cmp
sbb
mov
mov
push
leave
xchg
sub
inc
cmc
inc
push
cmp
mov
jae
fsubr
mov
adc
sub
in
out
xchg
clc
push
fbld
xchg
xchg
enter
jecxz
in
jecxz
cmp
in
sub
imul
add
bound
cmc
adc
cmp
add
daa
jle
or
mov
les
jnp
jmp
aaa
mov
popa
call
push
or
in
xchg
or
mov
repnz
dec
xchg
jae
(bad)
(bad)
pop
mov
xchg
adc
out
push
lock
sti
pop
(bad)
in
repnz
and
ffree
hlt
ror
jmp
cmp
mov
and
or
pop
mov
cmps
int3
sub
icebp
arpl
mov
sbb
dec
jnp
(bad)
dec
sub
jo
xchg
adc
sub
jae
sahf
or
sbb
lea
xor
out
xchg
sub
lock
mov
cmp
fisttp
push
call
jg
stos
mov
das
cdq
dec
pop
add
xor
ret
int
inc
pusha
mov
icebp
xor
dec
(bad)
fsubrp
push
nop
sbb
ins
scas
adc
pop
outs
mov
xchg
shl
inc
iret
sbb
jmp
dec
inc
and
or
mov
xchg
or
arpl
jge
ror
xchg
mov
dec
xchg
adc
fs
jle
ins
in
xchg
int3
mov
popf
add
in
mov
pushf
test
cmp
push
lea
or
out
hlt
scas
jns
add
push
sub
mov
retf
(bad)
scas
inc
push
rol
fnstcw
mov
sbb
sbb
mov
pushf
cmp
in
cmps
loope
cmp
in
pop
mov
jne
ins
pusha
jb
and
shl
xchg
mov
repnz
lea
out
sbb
fwait
mov
aas
cmps
jge
lahf
mov
cmp
(bad)
jg
jmp
dec
in
ror
xor
push
xor
and
mov
push
repnz
in
jl
fidiv
data16
sub
and
push
je
dec
inc
stos
adc
cmp
xchg
and
enter
pop
mov
(bad)
fnstsw
test
arpl
xchg
dec
test
ja
mov
cs
clc
xchg
in
cli
outs
inc
xchg
test
jns
sub
das
fld
js
mov
dec
and
mov
imul
es
ret
inc
ja
ss
sbb
sbb
mov
into
sub
inc
sub
in
lea
fsub
push
pushf
pop
push
inc
movs
jnp
lea
push
out
jg
retf
jo
adc
or
div
jmp
ret
sub
push
mov
pop
dec
enter
nop
and
cmp
dec
aas
pop
cwde
or
sahf
std
js
call
jns
aam
sub
and
pop
jb
je
rcr
je
test
out
and
sar
jnp
sub
test
call
push
or
(bad)
out
and
pop
test
mov
jns
ret
aas
cmc
in
mov
or
fld
sub
jge
adc
add
jnp
pop
cmp
ret
(bad)
pop
repz
enter
add
xor
mov
iret
or
add
test
outs
adc
outs
loopne
test
fild
inc
push
jnp
imul
xchg
mov
dec
mov
mov
les
mov
pushw
xchg
popf
xchg
push
adc
not
mov
inc
in
sub
in
sar
xor
pop
sar
push
fwait
push
add
out
mov
inc
jmp
pop
sbb
jb
stos
or
adc
push
adc
pop
mov
and
cmc
xchg
inc
xchg
aad
rol
dec
mov
and
out
mov
xor
fild
cmps
mov
jno
shl
loopne
ja
mov
out
jb
push
or
int
jbe
inc
fsubr
cs
(bad)
xchg
adc
sti
sbb
pop
dec
push
sbb
sub
push
and
mov
addr16
stos
ins
add
or
test
push
ret
jle
push
loope
ret
cmp
jmp
(bad)
dec
mov
sbb
mov
cmp
(bad)
pop
test
pop
lahf
inc
push
daa
pop
test
js
mov
pop
pop
mov
cs
or
hlt
sub
addr16
mov
imul
sub
mov
idiv
cdq
add
inc
outs
xor
clc
dec
mov
xchg
add
fisub
icebp
std
xchg
es
add
sar
icebp
stos
test
sahf
push
in
jmp
leave
aam
jecxz
push
sbb
fsubr
jl
cmps
cmp
cdq
inc
adc
arpl
inc
cld
adc
jbe
push
or
sub
adc
sub
push
and
mov
mul
gs
dec
stos
out
out
jecxz
popa
xor
sar
stos
movs
mov
cmps
bound
nop
mov
movs
stos
jmp
outs
pushf
xchg
pusha
lea
and
stc
imul
cdq
sbb
push
and
xchg
aas
add
and
add
jecxz
aas
add
sbb
aas
out
dec
xchg
xlat
xor
cmp
adc
hlt
jb
outs
jge
xor
jmp
jmp
jecxz
sub
(bad)
cmc
das
rcr
or
scas
adc
pusha
jnp
add
ss
into
neg
cmp
fs
push
push
jb
mov
fstp
loope
aas
mov
jns
inc
pop
(bad)
sbb
inc
sub
mov
sbb
push
inc
fdivr
inc
in
mov
or
adc
test
and
inc
inc
jle
push
ret
xor
fdivr
sbb
dec
mov
ror
sbb
inc
js
xchg
cmps
push
inc
leave
rol
test
pop
out
dec
dec
in
(bad)
icebp
pop
int3
pop
inc
sub
sahf
cmp
mov
pop
je
xchg
sbb
iret
pop
xchg
adc
cmp
sbb
or
addr16
lahf
cmp
call
jecxz
xchg
out
pop
aad
jbe
movs
push
scas
ror
(bad)
adc
out
adc
fadd
mov
ins
pop
popf
cmps
cld
sbb
cld
lds
lods
fisub
push
cmps
cmp
sub
(bad)
jmp
mov
aaa
daa
pusha
xchg
mov
stos
push
push
cld
dec
loopne
jg
cli
gs
push
dec
ficomp
(bad)
into
dec
(bad)
fldenv
xchg
sub
mov
ins
loope
mov
mov
jnp
mov
cmp
in
mov
loope
pop
ss
test
inc
test
arpl
mov
and
sti
pushf
xchg
test
(bad)
push
repnz
adc
sbb
cmp
sbb
pop
popf
arpl
jp
mov
ror
lock
jecxz
dec
or
mov
bound
dec
dec
sahf
push
mov
sahf
sub
xchg
inc
enter
bound
mov
mov
mov
fwait
push
or
shr
mov
add
mov
call
dec
jecxz
out
dec
sub
shl
fcom
adc
mov
data16
pop
add
mov
mov
xor
jl
imul
retf
jle
hlt
and
jbe
sub
jbe
imul
mov
inc
(bad)
(bad)
mov
(bad)
jp
push
mov
xor
xchg
js
clc
fld
test
add
xchg
cmps
add
sti
loope
int3
les
in
fisub
lock
adc
retf
xlat
jge
sbb
xor
push
add
out
cmps
mov
repz
inc
add
or
cmp
or
dec
inc
call
fisubr
test
pushf
enter
test
cmp
ret
test
jmp
cmps
jl
lods
rcl
ret
pop
fwait
lea
push
int
daa
sub
icebp
stc
imul
inc
es
xor
pop
imul
add
jge
int
rcl
jge
adc
aaa
add
ins
pusha
lea
mov
push
stos
xchg
movs
sub
cmp
(bad)
(bad)
loopne
into
mul
outs
sbb
movs
and
test
push
in
cmps
pusha
loope
inc
xor
shl
mov
nop
je
in
lock
cs
icebp
shl
pusha
sbb
lds
or
(bad)
pop
inc
jge
(bad)
add
mov
std
dec
into
clc
sbb
imul
xor
mov
ins
arpl
mov
clc
and
cmp
fdivr
pusha
jp
fbstp
xchg
in
cwde
mov
push
lahf
dec
add
inc
icebp
mov
sbb
mov
xchg
enter
xchg
aam
jmp
rcl
pop
rol
sbb
cmp
daa
or
retf
addr16
xchg
jnp
mov
jle
aam
xor
jl
sub
cmps
jnp
nop
or
mov
lahf
rcl
sub
sahf
js
shl
fwait
icebp
fwait
push
pushf
mov
xchg
aaa
repnz
in
mov
push
dec
sti
mov
add
mov
cwde
jmp
xor
cdq
xor
xor
and
loopne
out
inc
jp
mov
cmp
pop
xchg
mov
xchg
sbb
int3
sbb
add
push
xor
add
(bad)
and
xchg
push
and
or
xchg
mov
xor
stc
imul
jl
mov
cmp
add
adc
inc
mov
inc
pop
mov
hlt
(bad)
xchg
loope
jo
mov
mov
pop
dec
test
push
cmp
pop
jle
loopne
cmp
pushf
test
dec
(bad)
adc
mov
fs
xor
imul
fdiv
iret
out
xchg
mov
dec
in
jo
sahf
sub
mov
sbb
aad
lock
xchg
inc
xchg
call
xchg
mov
ss
retf
dec
outs
mov
push
clc
dec
(bad)
daa
repz
dec
loope
pop
sub
sub
stos
push
cmp
movs
les
loope
mov
inc
out
ss
and
test
mov
ficom
lea
xchg
jns
leave
loopne
leave
icebp
jp
inc
push
jbe
jnp
mov
mov
or
in
jne
mov
outs
add
aam
mov
inc
sahf
stos
inc
ror
add
ret
lock
rcl
imul
pusha
mov
retf
push
sub
popa
in
cmp
xor
push
imul
sub
lea
stos
xor
sub
es
rol
fld
and
pop
mov
mov
shl
jp
sbb
lods
inc
dec
mov
lods
js
xchg
ret
test
mov
mov
cmp
retf
mov
js
cmps
sbb
lea
push
jnp
mov
nop
cmp
les
retf
aad
adc
mov
xor
cmp
pop
mov
push
(bad)
xchg
cmps
push
sbb
fcmove
stos
inc
add
cmps
sub
(bad)
out
xchg
sub
jns
shl
repnz
jge
test
in
(bad)
stc
cmp
mov
imul
call
js
sbb
push
outs
mov
sub
pusha
(bad)
fwait
xchg
dec
inc
push
adc
xor
pop
or
pop
std
dec
mov
je
xchg
movs
arpl
dec
gs
nop
loopne
(bad)
jl
push
stos
sub
movs
test
xchg
dec
in
gs
(bad)
mov
mov
pop
mov
mov
mov
jmp
dec
xchg
xchg
jne
push
bnd
or
pop
xchg
xor
add
fwait
xchg
mov
test
std
cld
cmp
adc
and
mov
add
xor
out
aad
pop
inc
sub
sti
mov
mov
jb
pop
push
jge
sub
xchg
retf
push
popf
mov
cmp
out
push
test
jae
cwde
neg
adc
sub
and
xchg
xlat
in
and
and
addr16
xchg
dec
cmps
mov
sbb
out
or
xor
add
dec
jae
mov
and
inc
adc
outs
fwait
mov
adc
cli
mov
cli
push
inc
fld
rol
mov
popf
arpl
cmc
fdiv
test
retf
xor
mov
test
mov
xor
or
shr
jne
sbb
jp
ss
ins
mov
stos
mov
jge
cld
xor
sbb
xor
pop
adc
(bad)
aas
mov
repnz
push
mov
xchg
aas
jge
xchg
mov
cmp
cmp
out
lahf
xor
arpl
dec
out
lds
out
out
add
sti
sar
jmp
mov
std
add
lds
pushf
mov
pop
test
imul
jb
cmp
outs
fisubr
inc
lods
jbe
dec
mov
mov
dec
push
(bad)
(bad)
jmp
bound
inc
or
adc
lea
mov
mov
push
mov
and
scas
xchg
sbb
js
fidivr
repz
out
arpl
loope
sub
stos
cmps
and
mov
mov
mov
xchg
stos
shl
sahf
call
xor
(bad)
cs
adc
jp
dec
sbb
mov
sub
es
rcr
jne
iret
push
cmp
add
sbb
cwde
push
and
add
push
stc
out
es
dec
lds
inc
lahf
jp
ret
loop
xchg
add
daa
shl
mov
sbb
loopne
mov
mov
fs
in
or
adc
in
dec
sahf
es
add
mov
dec
es
xchg
lds
dec
(bad)
jns
clc
jnp
or
push
add
inc
push
test
movs
sub
xchg
inc
jecxz
jecxz
(bad)
enter
inc
jge
push
cdq
nop
loop
stos
rol
int
cmp
mov
mov
xor
xor
loopne
mov
mov
or
sbb
iret
mov
repz
jle
mov
jbe
mov
or
out
sub
pop
fadd
xor
push
es
adc
outs
dec
mov
or
mov
int3
iret
mov
mov
pop
mov
cmp
xchg
xchg
jmp
and
data16
idiv
inc
loop
test
and
hlt
sub
sub
jne
xor
jg
adc
mov
cmp
fnsave
cwde
mov
pop
and
je
nop
cmp
push
adc
sar
retf
xor
inc
pop
push
sahf
je
fcomp
jb
or
faddp
mov
xchg
jle
mov
mov
mov
and
fisub
jecxz
jb
dec
cli
push
sub
inc
cdq
aas
push
sbb
inc
sub
movs
mov
dec
cmp
sbb
hlt
and
add
inc
adc
es
(bad)
or
jns
cmps
jae
stos
sub
fsubr
les
xchg
jge
pop
enter
mov
xchg
jg
in
mov
rcr
scas
stos
lock
scas
bound
mov
fsub
nop
mov
sbb
sub
enter
and
pop
movs
adc
add
mov
and
vsubps
and
add
jo
and
lods
jb
xor
add
and
leave
add
imul
push
test
(bad)
loope
in
cmps
push
rcr
mov
cmc
dec
(bad)
loope
loop
mov
pusha
in
hlt
daa
pop
fdivp
mov
retf
pop
pop
or
pop
or
out
mov
lds
pop
push
pop
pushf
ss
jno
pop
push
push
mov
scas
mov
sbb
dec
shl
es
fs
pusha
add
and
xor
fwait
push
mov
xchg
lea
ins
xor
push
ret
lods
mov
nop
mov
inc
outs
cdq
outs
fadd
mov
sub
push
cwde
mov
inc
mov
out
clc
mov
cld
push
out
dec
cmc
dec
ss
sar
sub
push
add
jg
xchg
pop
xchg
out
loop
jnp
fild
jae
jmp
sub
mov
popf
sub
xor
lods
loope
xchg
std
inc
retf
inc
mov
pop
mov
cmps
sbb
mov
lods
and
mov
jl
(bad)
sbb
sar
xchg
mov
shr
cmp
push
retf
cmp
pusha
cmps
push
push
mov
push
mov
es
retf
mov
and
adc
mov
mov
inc
jb
adc
cmps
mov
outs
inc
push
cmp
ret
adc
inc
mov
sub
test
retf
pop
clc
ret
popf
adc
fcmovnb
or
sbb
arpl
in
dec
xchg
mov
jbe
xor
dec
into
(bad)
daa
in
jo
jno
push
pop
dec
mov
lods
ins
(bad)
xlat
jge
ror
imul
xor
icebp
sbb
mov
mov
xchg
sub
xor
inc
retf
aad
jae
mov
retf
mov
xchg
inc
icebp
xchg
pop
adc
jmp
mov
push
mov
lods
outs
add
xor
jecxz
pop
mov
repnz
pop
shr
div
cmp
sub
or
inc
jmp
mov
push
dec
push
and
and
cmp
mov
sub
adc
cdq
xchg
xchg
pop
and
inc
xchg
cmc
mov
hlt
inc
sub
enter
and
push
cld
mov
scas
sbb
stos
or
stos
lock
adc
xchg
jmp
stos
adc
sub
fiadd
add
lahf
jno
push
mov
sbb
xchg
dec
and
xchg
lock
inc
inc
retf
push
xor
mov
fistp
je
jns
(bad)
sub
in
(bad)
aas
sbb
jae
les
les
sub
push
xchg
jg
leave
mov
add
cmc
mov
imul
cwde
(bad)
out
cwde
jnp
cmps
popf
sbb
(bad)
cwde
test
mov
xor
push
xor
in
int
xchg
or
pop
pop
inc
stc
imul
mov
cmp
pop
fdivp
sub
cmp
cmp
pop
or
xchg
cmp
mov
and
mov
mov
xchg
stc
xor
out
pop
std
ins
push
lods
arpl
test
dec
jmp
in
sbb
cmc
mov
mov
cdq
arpl
mov
(bad)
repnz
mov
mov
jns
ja
aaa
cmp
cld
iret
and
or
and
inc
push
mov
push
jbe
fwait
mov
fs
iret
jo
mov
jle
mov
cmp
cmc
inc
jns
jns
xchg
dec
jl
lods
mov
push
pop
ins
cld
stc
call
inc
pop
mov
dec
movs
sar
pop
into
mov
repz
repz
sbb
mov
mov
adc
in
fistp
push
rcr
sub
or
into
sbb
addr16
outs
bound
gs
pop
lods
xchg
enter
leave
push
clc
call
sbb
stc
sub
pop
jb
mov
pop
bound
jns
stos
sub
inc
call
hlt
inc
pop
cmp
jg
call
mov
xor
div
pop
sbb
lods
call
xchg
clc
dec
retf
xor
fptan
inc
sti
and
arpl
and
cmps
mov
ret
repz
cmp
add
sub
mov
mov
(bad)
push
add
cli
push
leave
in
xchg
jmp
out
add
inc
fstp
xchg
nop
pusha
add
out
adc
in
test
cwde
xchg
mov
in
lea
sub
dec
add
aam
stc
inc
fistp
adc
jg
outs
and
mov
mov
rcr
jp
mov
mov
lea
jb
mov
jne
movs
test
adc
mov
mov
jle
fist
ret
cwde
hlt
adc
inc
adc
out
arpl
mov
xchg
repnz
jecxz
imul
lods
or
leave
jmp
add
ja
shr
dec
add
call
or
gs
mov
ret
add
and
jb
test
and
mov
cmp
lock
pop
scas
add
js
fldcw
enter
mov
test
jmp
(bad)
cdq
mov
shr
mov
sahf
sbb
(bad)
loopne
in
cmp
fiadd
dec
test
and
jmp
jbe
add
ret
push
sub
dec
call
mov
push
jecxz
sbb
adc
ins
push
mov
xchg
sub
rol
fldcw
inc
rcr
jnp
ins
ffree
loope
adc
add
jbe
jle
cld
mov
bound
idiv
jmp
enter
mov
rcl
cmp
(bad)
scas
gs
dec
cmp
add
mov
enter
retf
addr16
cmp
sbb
sbb
sub
jno
push
pop
mov
outs
in
mov
jl
stos
test
jecxz
fs
mov
inc
xchg
loop
addr16
mov
movs
xor
push
mov
or
test
nop
ss
(bad)
cdq
scas
fstp
pushf
inc
out
sub
int
enter
dec
jge
scas
sbb
lods
inc
pop
add
cmp
jl
fimul
lahf
aad
inc
inc
pop
int
add
pop
mov
jnp
pushf
push
sbb
into
stos
imul
sti
adc
shr
pusha
add
fild
test
pop
mov
mov
out
lea
jmp
(bad)
mov
rol
cmps
retf
fnstsw
imul
ror
add
push
jmp
push
xchg
mov
repz
jecxz
sbb
inc
mov
pusha
mov
mov
test
dec
push
cmps
mov
jb
aam
adc
push
fld
(bad)
shr
stos
mov
xchg
test
hlt
adc
inc
xchg
inc
xchg
xchg
and
jnp
cwde
mov
xor
ss
enter
aaa
inc
and
cmovns
dec
and
xchg
(bad)
ficomp
aad
jae
xor
add
jg
imul
push
shl
mov
jmp
cdq
bound
dec
fcmove
mov
sub
mov
xor
in
xchg
adc
pushf
fs
in
push
xchg
sbb
cdq
jbe
lahf
mov
pop
paddsw
movs
stos
hlt
jp
pushf
stos
ja
xor
cmp
retf
out
pop
inc
sub
adc
mov
mov
fadd
leave
adc
inc
fld
or
and
push
test
(bad)
sub
inc
(bad)
(bad)
loop
mov
pop
jle
inc
fcmove
not
mov
ja
movs
pusha
sbb
(bad)
aaa
rcr
test
inc
jge
popf
xchg
and
mov
mov
dec
cs
hlt
jmp
sar
outs
cs
cmps
mov
sub
int
mov
xor
push
xor
sub
jne
dec
cmp
xor
or
leave
mov
mov
push
jo
sub
iret
fsubr
rol
icebp
xchg
or
ror
dec
mov
mov
std
ret
outs
push
mov
aaa
xlat
ja
or
or
imul
daa
shr
test
mov
aam
ror
mov
inc
jne
pop
stc
xor
jl
add
pop
xchg
aaa
rol
pushf
pop
sbb
aaa
push
mov
movs
push
(bad)
loopne
mov
icebp
sbb
test
imul
cmc
icebp
sub
fwait
ret
sub
xchg
(bad)
(bad)
lock
mov
dec
and
rcl
stc
push
popa
mov
outs
call
enter
inc
out
jg
fcom
jne
(bad)
or
mov
sbb
or
and
mov
shl
adc
repnz
xlat
pop
jns
mov
pop
call
cmps
or
out
scas
cmp
push
sub
push
or
stc
(bad)
arpl
fidiv
leave
outs
jmp
and
sahf
es
push
fst
pop
pop
mov
cmps
mov
or
xlat
ja
loop
xchg
cmc
jae
arpl
aad
sub
adc
mov
ins
jo
outs
adc
frndint
push
icebp
test
test
inc
mov
inc
mov
test
jmp
mov
sbb
in
cli
cmp
xor
into
cmp
push
or
sbb
pop
stc
xor
iret
ds
and
pop
pop
in
inc
imul
mov
add
fdiv
push
xchg
fmul
ret
std
xchg
int
icebp
outs
push
push
cmps
dec
retf
inc
call
pushf
inc
xor
retf
mov
jecxz
scas
mov
inc
ja
mov
add
repnz
add
(bad)
pop
cmc
or
aam
into
adc
jg
cmp
mul
popa
test
rcr
popf
jmp
adc
cmp
test
push
outs
movs
or
lea
dec
retf
push
mov
pop
sub
jno
ret
test
jecxz
(bad)
mov
xchg
or
jle
lea
inc
mov
mov
or
loop
test
lock
xor
fsubr
test
mov
cs
test
or
dec
ret
cmc
pop
mov
addr16
and
push
push
or
sbb
inc
pop
lods
dec
sub
xchg
aas
xor
(bad)
test
add
movs
outs
aam
(bad)
dec
mov
mov
or
aad
cmp
(bad)
call
call
cmp
(bad)
into
out
inc
jmp
fstp
sbb
ret
sub
sbb
jl
jb
jne
test
mov
cli
mov
xchg
test
sub
pop
cmp
jne
imul
test
fcomip
jecxz
xchg
mov
inc
jo
(bad)
jo
mov
jno
iret
mov
out
sbb
out
adc
sahf
mov
fistp
outs
mov
cli
rol
fisttp
jno
or
jle
pop
jnp
jle
ins
pusha
lahf
cmp
mov
ror
fs
cmp
inc
sbb
sub
sbb
push
dec
mov
test
sahf
cmp
jmp
jns
inc
pop
ja
pop
loope
les
movs
into
mov
in
add
loopne
lods
mov
pop
push
xchg
rcr
iret
rol
loop
dec
nop
inc
fdiv
dec
(bad)
retf
ret
inc
push
jg
les
pop
push
cwde
or
mov
(bad)
dec
out
and
hlt
arpl
and
add
jge
arpl
lea
out
sbb
jg
mov
fucomp
mov
popf
sti
push
ret
jl
jbe
dec
out
xlat
cmp
add
mov
int
test
dec
push
mov
sti
pushf
jmp
lds
mov
sub
dec
sar
icebp
push
icebp
pop
or
pop
lods
pop
jns
(bad)
arpl
cmps
movs
movs
mov
adc
sbb
add
cmp
jnp
aas
lods
sub
adc
adc
and
out
mov
retf
call
jae
push
hlt
lds
pop
(bad)
sahf
pop
xor
fadd
idiv
ja
xchg
lea
sbb
push
push
in
adc
push
retf
mov
jne
and
jg
mov
jne
jg
mov
mov
imul
jl
int3
dec
jg
adc
cmp
jb
pop
ins
ror
sbb
(bad)
push
inc
and
add
pop
mov
dec
stos
test
shl
cmps
test
dec
cdq
popf
scas
and
add
stos
xchg
mov
retf
paddb
aam
jmp
inc
xor
mov
xchg
stos
mov
stos
jnp
ret
js
into
inc
fs
push
mov
and
outs
dec
stos
fs
xor
scas
mov
and
xchg
add
jns
pusha
fnstcw
out
into
call
into
jne
xchg
mov
(bad)
pop
fs
mov
std
loop
call
fst
pop
out
sbb
ret
adc
dec
mov
inc
pusha
stos
pop
and
lods
dec
pop
lock
fidivr
jecxz
jl
sub
xor
gs
(bad)
movs
sub
jmp
iret
idiv
and
inc
lea
mov
xchg
je
cmps
popa
cmp
jns
mov
add
mov
fisubr
scas
outs
xchg
jb
dec
cmp
lock
inc
out
inc
aas
popa
cmps
xor
cli
dec
push
pusha
in
mov
rcr
(bad)
xor
and
sbb
je
push
mov
pop
adc
jnp
rol
in
lods
test
pushf
cmc
pop
rol
ins
mov
dec
call
sahf
or
mov
xchg
push
jmp
mov
mov
adc
dec
dec
stos
fwait
dec
xchg
dec
mov
and
test
daa
push
dec
add
stos
call
mov
xlat
pop
adc
sar
add
xor
pusha
js
pop
add
push
lock
cmp
push
ficom
mov
push
lea
stos
stos
fxch
sub
jbe
in
mov
test
popf
cmp
pushf
test
dec
stos
push
sbb
(bad)
in
sub
add
dec
fwait
or
push
call
sbb
lock
sbb
dec
cld
xor
popf
cmp
adc
pop
xor
dec
outs
xchg
mov
or
adc
shl
inc
int3
sti
inc
pushf
inc
jae
shl
rol
xchg
inc
out
jecxz
dec
in
rcl
mov
iret
daa
lods
pop
pop
in
mov
jmp
fwait
outs
mov
pop
or
int
jp
and
adc
and
cmp
popa
cwde
mov
clc
inc
(bad)
jns
xlat
add
xor
bound
mov
stos
and
and
or
ror
jmp
neg
inc
pop
rcl
into
fdivr
ret
daa
shl
test
fsubr
std
xchg
(bad)
xor
cmps
xchg
xor
xchg
jmp
sbb
icebp
add
fist
dec
aas
data16
xor
lea
push
fwait
mov
cdq
cs
arpl
(bad)
fisttp
loop
jae
adc
xor
push
jne
push
add
add
movs
stos
aaa
add
cwde
inc
into
mov
pop
pop
jnp
outs
add
inc
test
mov
add
fild
mov
pop
lods
mov
pop
sbb
lock
scas
std
dec
pop
in
mov
push
sub
repnz
inc
xor
js
adc
sub
xchg
mov
(bad)
push
rcl
cmp
pop
int
gs
jae
xchg
pop
xchg
jno
push
jns
pop
aaa
xchg
add
mov
dec
push
xchg
enter
addr16
nop
jb
mov
mov
out
loope
sub
ret
out
test
pop
je
add
pop
xchg
mov
and
clc
ficomp
push
and
xor
inc
or
fwait
mov
or
cmps
jge
fmul
mov
sub
pop
push
jnp
pop
mov
gs
jns
mov
cdq
adc
test
xor
jne
inc
mov
(bad)
ficomp
(bad)
lahf
adc
jmp
and
(bad)
mov
jg
test
fmul
mov
test
push
push
(bad)
leave
inc
sti
daa
dec
fs
mov
add
jns
inc
(bad)
mov
nop
or
inc
in
enter
inc
sbb
pop
inc
jge
mov
sbb
outs
or
dec
jle
mov
ins
inc
pop
pop
retf
inc
mov
ja
push
div
jmp
or
inc
imul
je
xor
adc
jmp
sahf
fs
or
ss
clc
fld
dec
dec
rcr
add
mov
mov
add
ins
cld
fisub
fsave
inc
xor
sbb
push
add
lahf
or
stos
push
xor
and
cmps
xchg
push
lock
test
test
mov
mov
fadd
or
inc
mov
lea
lds
xchg
hlt
out
popa
stos
mov
or
int
shl
sub
xchg
jl
mov
rcr
(bad)
sbb
ja
fistp
push
pop
mov
test
or
call
mov
aad
pop
pusha
sahf
dec
xchg
aam
call
sbb
call
cmps
stos
enter
popa
mov
test
mov
mov
sub
out
vxorps
pop
pusha
cmp
ss
inc
sub
xchg
push
repz
xor
aas
inc
ins
dec
or
sub
scas
inc
xor
mov
leave
rcr
retf
dec
inc
dec
test
add
xchg
stos
push
or
cmps
mov
sub
movs
fdivp
sub
shl
pop
dec
mov
popa
aam
clc
cmp
cmp
(bad)
push
pop
push
dec
mov
jnp
mov
movs
mov
lock
pop
inc
jns
hlt
sbb
fs
mov
mov
enter
or
sub
(bad)
inc
daa
inc
int3
iret
lahf
cmp
neg
addr16
mov
clc
popf
mov
mov
rcr
lods
cmp
inc
test
dec
push
call
test
jmp
inc
cmps
sub
sbb
cli
loopne
pushf
xor
cmps
pop
inc
es
aas
imul
pop
fstp
cld
enter
add
or
jl
pop
lahf
jg
jp
adc
ss
cmps
call
mov
fild
inc
pushf
je
popf
(bad)
ins
xchg
cmc
in
retf
nop
push
sbb
loopne
xor
movs
mov
sbb
xor
sti
loope
jmp
push
outs
mov
in
or
and
pop
stos
sub
ds
out
mov
scas
add
cmps
pop
fwait
cmc
sbb
aaa
into
cmp
add
stos
sbb
sbb
add
lahf
sbb
lods
sub
cld
xchg
ds
in
inc
cld
inc
pop
push
shl
ret
add
cmps
ja
test
jmp
lods
mov
add
(bad)
xor
jnp
adc
rol
xor
inc
mov
sbb
dec
pop
pop
cmc
xchg
mov
push
or
pop
fnop
das
cmp
push
aas
hlt
sbb
sbb
dec
dec
mov
jb
mov
cmp
std
out
and
fist
cmc
xchg
loopne
adc
or
cmp
lea
out
shl
xlat
cmp
stos
sbb
push
shr
int
in
xor
sub
mov
mov
test
fsubr
jo
leave
pop
adc
fild
push
and
pushf
pop
lods
je
jnp
nop
pop
sbb
mov
fsubr
fcom
sti
xchg
hlt
inc
popf
mov
push
xchg
xchg
push
push
(bad)
cmps
pushf
cmp
dec
mov
dec
gs
mov
aad
std
hlt
js
mov
xlat
xor
dec
add
push
fwait
add
mov
lods
sbb
retf
es
inc
retf
add
daa
mov
adc
fs
pop
ss
push
addr16
pop
push
mov
add
imul
jmp
xchg
loop
imul
ja
mul
cmps
je
gs
sub
cdq
icebp
push
das
sar
cmps
mov
xor
push
retf
sbb
push
loope
ret
jnp
cmp
cmp
mov
push
outs
(bad)
mov
sub
std
push
std
loop
enter
pop
inc
jecxz
sub
mov
mov
xchg
xchg
cmp
ror
cwde
out
loope
mov
ins
pop
fimul
xchg
push
mov
fs
push
sbb
out
pextrw
je
clc
mov
jg
mov
cwde
xchg
xrelease
je
sbb
cld
xor
and
call
inc
sbb
add
jle
pop
and
ret
push
and
mov
push
push
pop
or
dec
sub
wrmsr
mov
test
mov
jl
aam
ins
add
jnp
lods
mov
mov
pop
jmp
inc
push
lea
mov
xchg
inc
aad
inc
aaa
mov
mov
call
(bad)
test
lods
aad
fs
fwait
sub
push
idiv
sbb
cmp
pop
pop
jl
fwait
xor
jo
pusha
cmp
stos
dec
sub
inc
leave
into
add
jmp
stc
add
sbb
xchg
xchg
aam
and
sub
jmp
loop
in
jg
fistp
mov
out
hlt
jmp
rol
lock
movs
mov
mov
mov
xor
jmp
sbb
test
retf
mov
in
jae
dec
movs
packssdw
mov
test
test
jae
sbb
and
inc
popf
sub
dec
dec
movs
pop
add
mov
sahf
repnz
or
es
outs
add
dec
(bad)
pushf
pop
and
jmp
aaa
out
cmps
lods
faddp
or
mov
mov
in
(bad)
ss
cs
adc
fdivr
add
pop
test
jb
dec
call
sbb
cmps
lea
push
or
sbb
jae
cmc
sub
xchg
jno
pushf
and
mov
in
lahf
sbb
push
and
js
xchg
push
xchg
pop
push
clc
jmp
push
clc
push
cmp
mov
adc
xlat
aas
adc
pushf
cmp
push
clc
sbb
sub
add
dec
fadd
inc
inc
mov
add
pop
jmp
jno
xchg
add
inc
inc
jecxz
sbb
aaa
xchg
sbb
test
xor
movs
das
add
mov
sbb
jmp
idiv
std
mov
xor
jecxz
cmp
mov
gs
test
mov
in
fisubr
dec
test
cmc
inc
push
pusha
cmp
or
jnp
inc
ss
cwde
mov
call
daa
cmp
push
jge
fnstsw
ds
push
xchg
and
adc
mov
sub
fdiv
rol
jb
sahf
out
movs
int3
lahf
adc
pushf
inc
pop
xlat
ror
rol
sub
xchg
xor
retf
ret
xor
xor
push
neg
cmp
test
jecxz
pop
js
fwait
jne
outs
mov
mov
jmp
in
and
aas
out
cmp
pop
or
or
fld
add
(bad)
loope
cmp
cwde
sbb
inc
jno
and
stos
aad
jno
mov
lea
inc
mov
sbb
in
xchg
jl
jmp
mov
stos
adc
dec
aam
jmp
shr
arpl
stos
mov
inc
or
jbe
call
daa
mov
sbb
dec
inc
(bad)
js
stos
xchg
bound
or
in
mov
mov
add
stos
dec
rcr
push
(bad)
call
hlt
jp
sahf
sub
mov
mov
std
xchg
stos
in
popa
sub
pop
cs
cmp
mov
sbb
dec
or
mov
fwait
mul
mov
js
imul
cmp
enter
pop
add
adc
movs
mov
add
outs
fisubr
add
imul
fst
out
cdq
jae
xchg
jae
enter
in
in
mov
imul
mov
(bad)
cmp
xchg
jb
pop
inc
xor
icebp
iret
imul
sub
inc
mov
push
pop
mov
mov
jg
out
aas
xchg
(bad)
pop
pusha
pop
pop
jmp
daa
xchg
and
inc
cmp
sub
fwait
and
push
and
hlt
js
pop
bound
push
fbld
adc
fadd
mov
sbb
mov
fld
pushf
fdiv
fwait
inc
stos
cmp
jmp
(bad)
jg
inc
pop
add
call
or
add
pop
(bad)
mov
xchg
clc
jns
add
sar
add
mov
xor
and
in
mov
daa
add
and
pop
jg
movs
push
mov
lahf
dec
xchg
xchg
push
xchg
mov
scas
cli
cwde
aad
scas
ins
arpl
loope
cmc
repnz
mov
inc
imul
sbb
sbb
(bad)
rcl
or
or
inc
call
mov
(bad)
sub
jbe
hlt
adc
inc
and
inc
scas
sub
inc
xchg
jae
mov
pop
lea
jno
fisub
jmp
inc
push
scas
jne
pushf
fst
cld
mov
adc
loope
xor
jns
cdq
mov
pop
loop
and
adc
movs
jns
ins
fistp
push
aam
loopne
loop
inc
pop
inc
mov
and
stos
lods
adc
or
jmp
inc
sub
sbb
mov
inc
fstp
xchg
pop
jle
cmps
xchg
pop
sub
std
stc
mov
sbb
pop
cmps
pop
rol
leave
pop
mov
jecxz
add
repnz
sbb
sbb
int3
aad
(bad)
pop
inc
mov
mov
push
sub
fwait
and
jl
or
movs
push
sbb
sbb
jmp
or
xor
jmp
lods
push
mov
lods
add
push
dec
clc
leave
in
mov
push
fdivr
outs
cwde
push
out
(bad)
dec
xchg
loop
ins
lock
fbld
clc
call
pushf
mov
fcmovnu
movs
stc
enter
ret
inc
(bad)
pop
mov
add
icebp
pop
cdq
add
inc
mov
dec
bound
cmps
mov
xor
cmp
out
dec
pusha
popa
sub
xchg
pop
mov
(bad)
popa
adc
add
scas
cwde
stos
and
push
and
(bad)
jmp
mov
jge
dec
rol
fnstcw
sahf
int3
mov
xor
movs
std
and
pop
stos
cmps
mov
cmp
das
inc
xchg
ret
stos
jmp
mov
sbb
retf
pop
pop
jnp
mov
ss
lods
xor
iret
mov
retf
js
cmc
inc
sub
add
leave
ins
repnz
imul
test
mov
xor
pop
(bad)
cmp
jb
mov
pop
xchg
pop
push
mov
mov
call
movs
jns
mov
int3
jmp
cld
shl
js
mov
sbb
cmp
into
shr
ror
inc
jbe
inc
or
ret
inc
daa
retf
(bad)
(bad)
push
enter
pop
inc
les
sbb
out
adc
fist
(bad)
add
mov
cdq
out
cmp
int3
pop
loopne
add
mov
outs
mov
out
add
les
adc
xor
jge
mov
and
stos
fdivr
mov
imul
push
or
lds
push
dec
fisubr
inc
and
xchg
mov
add
fnstenv
fld
xchg
js
add
aas
adc
inc
mov
add
dec
fs
aam
arpl
cmp
stos
sbb
rol
push
push
jnp
jbe
nop
sar
xchg
enter
fwait
dec
push
in
std
cld
pop
xchg
pop
xchg
call
add
loop
repz
scas
xor
int
sbb
out
test
jle
and
sub
cmpxchg
cli
inc
xchg
shr
xchg
call
fadd
sub
je
fwait
push
cwde
pop
mov
mov
push
mov
or
out
test
retf
adc
jns
mov
xchg
push
aam
push
and
sar
test
or
jmp
adc
add
mov
jl
dec
adc
push
out
aaa
push
push
aas
mov
pop
gs
gs
dec
call
and
and
or
out
or
sbb
add
das
out
jno
imul
imul
mov
popf
fnstenv
sbb
mov
and
int3
mov
mov
xor
jg
cmps
xchg
enter
bound
mov
test
aad
aam
enter
sar
test
(bad)
and
movs
adc
dec
push
push
sbb
lock
adc
inc
cmp
adc
inc
bound
bound
xor
retf
mov
jg
inc
pop
dec
nop
push
mov
xchg
dec
fcom
mov
xchg
cmps
test
mov
xchg
fs
cmp
cmps
xor
cs
pop
push
xor
pusha
sbb
mov
push
cmp
xchg
mov
inc
(bad)
lock
adc
or
inc
adc
sbb
stc
bound
inc
and
inc
pop
mov
or
cld
cmps
call
add
push
popf
inc
repz
fcomi
jne
dec
cli
fwait
mov
xor
pop
push
movs
xchg
mov
aam
scas
enter
mov
enter
xor
inc
pushf
inc
jg
cmp
dec
add
(bad)
mov
test
fcomi
jp
lock
jb
sbb
inc
aas
inc
daa
and
js
test
test
sbb
lea
std
std
mov
xchg
hlt
sbb
imul
fnsave
mov
or
clc
ja
(bad)
cld
repnz
std
mov
xor
xchg
pusha
cmp
ficom
mov
inc
mov
movhps
mov
inc
iret
push
add
rol
inc
mov
retf
stos
cmp
in
call
jge
jmp
cmp
and
jns
cmps
or
push
out
mov
sub
and
mov
add
ins
loop
sahf
cmp
mov
adc
jl
mov
int
ret
cmps
xchg
popf
and
(bad)
call
dec
in
jne
sbb
int3
bound
mov
inc
or
(bad)
xchg
or
inc
pop
push
leave
pop
adc
and
jle
mov
push
mov
sub
fcom
sbb
scas
dec
test
loopne
mov
fwait
pop
aaa
cmc
(bad)
xchg
jne
outs
mov
nop
add
fincstp
mov
clc
pop
jne
mov
push
and
retf
jns
cmp
data16
sbb
cmp
imul
mov
int
out
or
sbb
and
pusha
jno
mov
mov
push
frstor
test
mov
cmp
sti
add
mov
popa
pcmpgtd
dec
mov
sahf
jne
fld
test
mov
pop
sahf
shr
add
cld
not
cli
sbb
aam
and
(bad)
repz
into
cmp
and
pop
xchg
or
cmp
ins
ror
inc
inc
clc
or
add
push
lahf
inc
pop
popf
sbb
cs
int
mov
xchg
mov
rcl
and
xlat
cmp
aam
add
pop
retf
bound
mov
inc
call
movs
inc
jo
mov
popa
out
inc
test
sub
int
jb
cmp
xor
inc
sbb
lods
les
jl
fnstcw
les
mov
add
fist
stos
dec
adc
mov
cwde
call
inc
jmp
or
(bad)
xchg
push
cs
mul
movs
mov
mov
pushf
sbb
adc
sbb
je
or
inc
(bad)
test
jge
sbb
adc
cmp
mov
enter
das
fisttp
retf
jnp
aaa
in
and
or
ins
push
mov
cmp
mov
jl
shl
cld
jp
jb
push
mov
pop
call
cdq
or
call
sti
mov
pop
xchg
xchg
pushf
ds
fnstcw
fwait
test
xor
push
lock
jg
fidivr
push
addr16
push
sub
mov
out
loop
jle
loopne
adc
or
mov
xchg
push
stos
xor
or
and
sbb
inc
ja
outs
popf
mov
mov
movs
push
sub
cmps
xchg
sub
sub
pop
add
retf
in
jmp
sub
push
pop
or
sti
lods
and
or
push
push
lods
xor
jnp
(bad)
mov
sbb
shl
cld
cmp
xor
push
ds
xor
pop
cmps
sbb
sub
in
mov
cmp
fdiv
fild
jbe
movs
ins
sti
nop
rep
cmps
mov
jg
les
hlt
mov
pushw
lahf
xor
mov
lds
popf
ret
inc
idiv
pop
sbb
fdivp
int3
jo
pop
inc
and
pop
add
js
bound
push
(bad)
outs
std
fbld
pop
xor
xor
jecxz
or
jge
mov
sbb
dec
pop
in
cmps
xor
sbb
leave
mov
lods
lea
addr16
es
ins
in
in
mov
cld
adc
dec
idiv
inc
jns
mov
cmp
mov
dec
push
mov
sub
rol
pop
jnp
jnp
cmp
xchg
dec
out
iret
mov
lods
push
leave
sbb
cmp
adc
fs
sub
fisttp
xchg
je
mov
cld
int3
cmps
ds
mov
jl
rcr
mov
dec
xchg
push
or
sbb
mov
int
fistp
sbb
test
(bad)
dec
cbw
mov
daa
pop
adc
dec
pop
in
adc
pop
mov
imul
and
lods
fstp
inc
rcr
movs
cld
sbb
pop
fimul
inc
add
pop
xchg
xor
pop
dec
mov
sbb
add
dec
lahf
in
cmps
inc
mov
pop
push
mov
mov
mov
inc
or
jg
inc
enter
jae
xchg
add
xlat
aad
in
mov
out
lods
cmp
jb
or
and
sub
es
dec
push
jae
mov
int
add
hlt
bound
xor
pop
fs
adc
mov
adc
pushw
mov
push
scas
xchg
mov
xor
outs
in
mov
mov
push
mov
cmp
jmp
add
lock
inc
cmps
stos
and
sbb
cmp
out
cmc
xchg
lock
stos
fld
push
in
aaa
xor
test
pop
into
sbb
cs
es
div
or
lods
dec
or
(bad)
outs
pop
adc
mov
pop
pop
call
or
fucom
adc
bnd
sbb
nop
push
mov
lahf
push
sub
fldenv
cmp
nop
fimul
mov
in
test
repnz
mov
shl
or
rcl
jae
cmp
or
mov
fnstsw
mov
stos
sar
pop
inc
mov
sub
daa
mov
sbb
dec
xor
mov
cmp
jno
fisub
xlat
fs
mov
xchg
data16
icebp
test
sbb
dec
test
movs
rol
dec
bound
rol
mov
inc
cli
jle
inc
add
fadd
jmp
xor
cmp
inc
or
add
push
push
les
repz
mov
xor
xor
sbb
or
cdq
outs
sbb
in
popf
add
stc
inc
mov
add
ja
mov
test
or
cmps
xchg
xor
dec
mov
mov
cmp
xchg
adc
loopne
xchg
rcr
jbe
dec
repz
iret
and
and
push
(bad)
adc
mov
pop
jmp
pop
out
push
cmps
jmp
div
xor
pop
cmp
pop
push
mov
jp
xchg
mov
dec
mov
xchg
inc
xchg
push
retf
inc
call
and
fsubrp
jne
push
push
mov
jnp
xchg
lods
sbb
into
fild
mov
call
idiv
fistp
popa
add
pop
mov
movs
(bad)
mov
aaa
cmps
push
idiv
xchg
jne
inc
pop
out
ins
inc
jae
mov
pop
in
push
lahf
js
mov
sbb
sub
aam
sbb
pop
and
arpl
jne
in
not
mov
jnp
add
(bad)
xchg
call
movs
xor
push
dec
push
xchg
div
jl
es
sub
fidivr
inc
pop
test
inc
xchg
mov
repnz
aam
pop
inc
sbb
jb
xor
imul
adc
xchg
outs
xor
sti
stc
mov
shl
popa
mul
loopne
leave
mov
cmc
and
sbb
pop
inc
lods
call
aam
pop
inc
in
fstp
jo
or
aam
in
and
dec
mov
dec
jnp
push
push
jb
mov
repnz
sar
mov
inc
out
xor
jae
and
jmp
cmp
test
pop
adc
inc
rcl
add
inc
and
xor
push
push
repz
xchg
push
and
mov
jb
daa
add
leave
(bad)
idiv
add
arpl
inc
push
or
pop
stos
jg
std
add
xor
add
popa
push
adc
push
xchg
jne
jle
mov
mov
pusha
mov
adc
test
sbb
retf
gs
jp
arpl
movs
(bad)
cmp
mov
or
rcr
ror
push
mov
mov
lock
les
mov
(bad)
xor
ud0
lods
inc
fnsave
inc
daa
cmp
xor
or
xchg
adc
call
test
pop
inc
jle
loopne
push
pop
sbb
xor
sbb
push
in
loope
inc
push
inc
call
fiadd
outs
inc
scas
jge
cdq
(bad)
xor
dec
dec
into
fild
cwde
ror
fistp
push
mov
enter
(bad)
cmp
stos
cmp
shr
sbb
(bad)
and
jno
and
push
pushf
arpl
jb
ret
lds
popf
idiv
ror
bound
in
or
sbb
adc
pop
inc
mov
and
aas
dec
cmp
out
sub
fild
jo
push
fcmovne
repnz
test
mov
xchg
and
mov
rcl
test
ds
out
test
dec
fsub
fcom
push
jge
adc
jg
pusha
pop
jl
mov
push
adc
push
fstp
imul
btr
mov
pop
mov
cwde
xor
sub
out
leave
mov
loopne
sbb
jnp
test
dec
out
je
jmp
movs
fwait
retf
arpl
mov
test
mov
repnz
sub
(bad)
jnp
sbb
cmp
mov
or
cmp
sbb
rcr
popa
xor
cmp
push
pop
add
ins
scas
je
xchg
inc
pop
mov
xor
call
xor
pop
jo
lods
sub
sahf
stos
mov
add
mov
dec
push
loopne
xchg
xor
xlat
repz
or
adc
(bad)
pop
lds
pop
cmp
sbb
inc
push
inc
lods
mov
js
mov
rol
adc
adc
lods
push
cwde
xor
addr16
pop
inc
xchg
xor
mov
stos
or
or
cmp
orps
arpl
mov
pop
into
ret
popf
push
mov
or
jbe
nop
popf
mov
lock
dec
ja
mov
dec
leave
inc
push
ds
and
add
(bad)
cld
aaa
or
test
dec
rcr
xchg
test
xor
xor
lidtd
sbb
pop
pop
shl
jnp
nop
cli
lsl
jnp
hlt
test
mov
pusha
inc
xchg
pop
test
movs
dec
cld
call
shr
stos
fwait
(bad)
sub
cmps
sbb
sti
xor
fnstcw
jecxz
ins
lea
adc
xor
repnz
push
pop
ds
mov
dec
inc
jp
xor
retf
xchg
call
rcr
pop
and
mov
(bad)
or
push
push
cmps
push
mov
sub
clc
mov
mov
fs
shl
sahf
outs
in
xchg
ins
loop
jg
(bad)
fnsave
mov
dec
add
les
(bad)
ror
dec
js
stos
ss
fdivr
ds
shl
push
rol
jle
or
mov
add
nop
xchg
mov
cmp
mov
cmp
add
clc
pop
push
push
push
cdq
scas
stc
add
cmp
icebp
mov
lds
push
sub
xlat
dec
xchg
loop
jno
cdq
pop
and
(bad)
or
jge
sti
pushf
in
fld
loop
mov
cdq
aam
pop
js
lea
sub
sbb
sbb
fcmovnbe
ja
pop
dec
jge
popf
xor
loopne
or
mov
push
retf
jmp
push
ret
imul
cmps
pop
push
scas
push
cmp
mov
ins
(bad)
xor
push
jo
fst
xchg
ret
outs
pushf
repnz
dec
aam
push
adc
icebp
mov
xchg
inc
idiv
cdq
stos
cmp
mov
sbb
xchg
lods
xchg
imul
pop
out
mov
dec
enter
cmp
adc
mov
mov
shr
(bad)
ds
cli
inc
dec
arpl
pop
cmp
sub
adc
mov
mov
pop
popf
mov
imul
inc
scas
xchg
push
xchg
add
repz
xchg
mov
sub
stos
hlt
daa
loopne
cdq
movs
xchg
pop
lods
imul
icebp
xchg
loop
jbe
sub
(bad)
stc
(bad)
and
and
or
or
add
mov
enter
and
es
pop
mov
bound
push
and
outs
sub
jno
frstor
in
inc
inc
mov
dec
in
mov
sub
(bad)
test
xchg
js
xor
add
cmp
out
push
mov
push
lea
sub
sub
mov
inc
xchg
bound
pop
rcr
jb
inc
pop
push
mov
(bad)
enter
push
fst
pushf
bnd
inc
adc
jae
xchg
pop
lods
cmps
dec
jb
push
adc
clc
xor
cmps
mov
fild
dec
and
push
test
xchg
push
out
inc
sub
movs
out
sub
addr16
mov
pop
inc
nop
xchg
mov
pop
out
hlt
neg
les
cmc
mov
jae
pop
add
dec
jns
outs
lahf
jne
gs
xor
mov
cs
vpshufd
hlt
sbb
mov
xchg
adc
pop
mov
jle
test
dec
loop
mov
or
(bad)
bound
mov
cmp
xchg
jge
sti
fisttp
cli
(bad)
mov
lods
pop
jl
test
xchg
mov
iret
pop
pop
daa
mov
inc
jl
mov
je
inc
xchg
xchg
(bad)
mov
in
sbb
inc
xor
cmp
sbb
sbb
outs
and
shr
loop
mov
fistp
jb
push
mov
mov
jmp
pop
aad
xchg
not
ret
dec
mov
mov
lods
shl
inc
ja
sahf
pop
retf
sbb
push
repz
fidiv
inc
push
and
sahf
ins
sbb
dec
aas
or
mov
lods
cmp
shr
jecxz
xchg
sti
bound
add
or
or
and
clc
pusha
sbb
add
mov
aas
popf
(bad)
movsx
add
pop
aad
fld
out
jge
popf
push
and
push
mov
fnstenv
mov
cld
adc
(bad)
ss
push
lods
xor
xor
jmp
inc
or
or
pop
pushf
push
and
adc
std
push
in
das
mov
daa
fsub
sbb
pop
mov
int
dec
stos
push
es
xor
mov
adc
mov
inc
mov
bound
jae
sbb
test
cmps
jbe
movs
pop
sub
rcl
in
popf
inc
data16
mov
mov
les
outs
mov
es
fisubr
sbb
data16
stos
xchg
retf
mov
pop
jmp
call
add
data16
or
push
push
add
and
adc
jne
xchg
pop
mov
cmps
sbb
test
xor
jg
lahf
push
cdq
mov
xchg
jae
cmps
js
(bad)
cmc
xor
push
mov
lods
mov
mov
add
lock
test
mov
imul
cli
push
and
jecxz
retf
cmp
les
inc
movs
inc
or
mov
int3
pop
cli
loop
mov
inc
mov
sbb
sbb
aam
popa
imul
and
jecxz
call
mov
xchg
mov
push
cmc
xchg
jns
clc
lds
loope
aad
movs
inc
jge
call
into
loope
inc
mov
adc
fcomp
xor
imul
or
stos
movs
retf
out
pop
xchg
retf
cld
push
adc
loopne
push
inc
add
cmp
add
sbb
pop
test
lods
bound
cmp
icebp
push
dec
pop
ds
pop
lahf
fst
cmp
cmps
mov
test
stos
push
mov
mov
sbb
imul
(bad)
xchg
icebp
xchg
inc
sti
ins
in
sbb
jb
xor
imul
pop
or
and
js
xlat
jg
sti
jne
inc
sub
cmovae
(bad)
jmp
mov
in
push
lea
xor
mov
or
fstp
out
jno
lds
mov
xor
or
(bad)
repz
jecxz
test
call
(bad)
rol
outs
jle
movs
gs
js
dec
add
in
push
or
and
xchg
xchg
ret
mov
call
push
dec
pop
sbb
dec
or
popa
mov
lods
sub
push
es
dec
outs
nop
mov
ins
and
test
mov
inc
jno
cs
lds
in
imul
imul
outs
xchg
sub
mov
add
in
repnz
fprem
inc
inc
nop
mov
adc
fstp
push
add
inc
shr
and
mov
pop
call
push
push
push
or
push
fs
xor
mov
jge
mov
xchg
or
mov
out
mov
leave
iret
jbe
pop
push
pop
fmul
test
jno
rol
adc
fisttp
std
fidivr
mov
faddp
xchg
ret
std
dec
dec
mov
jp
ror
sub
mov
into
ds
and
and
cmp
adc
sbb
push
sahf
shl
aad
push
or
pop
mov
imul
push
pop
test
pop
mov
dec
fsubr
inc
cli
pusha
push
pop
lods
popa
fstp
xchg
jb
xchg
push
and
movs
not
xchg
xor
mov
adc
retf
rcr
nop
cmps
dec
lds
dec
sbb
iret
(bad)
lods
ja
and
cmp
mov
xchg
mov
cwde
fild
mov
jge
jg
cmc
adc
mov
sbb
fwait
push
or
and
xor
aam
inc
leave
clc
inc
shr
pop
sub
call
popa
xchg
xchg
jb
sti
mov
mov
pop
dec
mov
int3
lds
mov
sbb
cld
jns
and
xchg
jno
push
pop
or
or
icebp
je
sar
call
retf
xor
push
sbb
xor
and
imul
push
mov
mov
jmp
in
pop
outs
shl
out
mov
mov
das
cli
retf
xchg
sub
addr16
aas
pushf
add
mov
fist
xchg
lea
stos
dec
cmp
int3
in
and
mov
push
pop
dec
icebp
(bad)
(bad)
pop
pop
call
mov
pop
dec
pop
add
xor
and
in
push
ret
fdiv
push
xchg
shl
jecxz
xchg
xor
clc
arpl
push
jp
scas
dec
add
arpl
add
bswap
dec
test
mov
pusha
cmps
xchg
mov
enter
mov
and
or
test
mov
push
push
mov
lds
dec
fdiv
sub
sar
add
push
imul
jns
push
push
ror
mov
pop
jmp
cwde
pop
mov
or
jne
outs
popf
sub
mov
out
leave
mov
mov
call
cmps
xor
and
fmul
jecxz
jbe
pop
fstp
sub
xchg
push
jnp
jnp
pop
mov
mov
std
retf
or
inc
push
aad
or
sub
pop
cwde
jle
pusha
pop
fcom
sbb
xchg
xchg
dec
and
cli
retf
pushf
and
sbb
mov
outs
jecxz
mov
aad
pop
sub
jmp
xchg
xchg
mov
(bad)
ret
jo
mov
sbb
sbb
(bad)
icebp
ja
aaa
or
ins
mov
mov
mov
fst
push
inc
xor
or
es
test
push
mov
inc
mov
sti
outs
inc
add
out
mov
retf
daa
sahf
jo
movs
aad
lahf
mul
dec
fcom
xchg
sub
jns
test
jmp
mov
data16
mov
inc
rcl
loope
js
mov
outs
shl
adc
or
int3
rol
ja
cmp
or
test
mov
mov
pop
add
inc
std
loope
mov
sub
adc
pop
pop
adc
jge
mov
inc
popf
add
retf
xchg
sub
mov
jp
bound
pop
loope
mov
aad
push
push
stc
loope
ss
cli
mov
inc
add
retf
xchg
jmp
stos
adc
xor
call
xor
mov
fsubr
jno
sbb
jnp
xor
jp
mov
adc
push
push
mov
lods
xor
jp
retf
stos
ror
pop
jg
mov
inc
mov
out
adc
mov
repnz
mov
xbegin
mov
inc
dec
fcomip
jmp
jnp
fdivr
imul
or
rol
sbb
call
mov
sub
sbb
xor
and
mov
jnp
(bad)
mov
call
xlat
pusha
push
sar
mov
fistp
and
fsubr
mov
pop
jno
(bad)
cs
(bad)
hlt
aad
jl
lea
xor
sub
rol
bound
je
pop
mov
sbb
and
jg
xor
add
in
cmp
nop
push
inc
lods
das
push
nop
stos
mov
fcmovnb
xchg
add
(bad)
pop
loop
pusha
inc
mov
arpl
movs
push
or
jp
fwait
shl
test
das
dec
xchg
loop
(bad)
jp
lahf
mov
dec
retf
dec
loope
loopne
pushf
or
adc
mov
xchg
pop
call
inc
sbb
aaa
and
dec
sbb
jne
xchg
add
cmp
cmp
cld
call
lock
arpl
out
mov
mov
scas
adc
push
and
popa
dec
xchg
call
mov
push
nop
pushf
inc
call
xor
mov
inc
xchg
push
push
and
fnstcw
inc
test
pop
ins
xchg
lahf
lea
popf
fcomp
pushf
loopne
push
jns
mov
and
jns
jbe
movs
cmp
or
sub
scas
popf
pop
(bad)
sar
imul
jb
scas
fldcw
div
pop
iret
in
and
ja
(bad)
mov
pop
xchg
mov
stc
jmp
lock
fadd
dec
in
cmp
xor
loop
jb
pop
shl
mov
push
pop
lods
test
pop
lahf
fbld
(bad)
jmp
out
cmp
fwait
pop
pushf
aas
std
push
xchg
mov
cmp
fcmovnbe
mov
(bad)
inc
push
pop
popf
dec
jecxz
and
lahf
jae
mov
(bad)
stc
xchg
add
add
outs
test
lea
psubq
xchg
jecxz
dec
popa
cwde
mov
or
aam
out
add
aaa
mov
and
mov
mov
or
push
lea
mov
sbb
bound
in
pop
data16
jecxz
lods
aas
test
mov
inc
jmp
inc
leave
bound
(bad)
xchg
cmps
pusha
aad
push
push
aad
or
mov
push
adc
lods
out
fs
repz
push
cmp
fild
or
js
aaa
push
jnp
inc
cmp
test
sbb
aad
mov
adc
pop
adc
xlat
outs
pop
mov
jl
xchg
stos
ins
inc
add
fld
jmp
add
push
loope
retf
dec
fwait
stos
mov
ss
mov
lods
mov
jno
adc
retf
lds
mov
push
or
pop
lahf
push
jle
inc
rol
inc
xchg
push
sbb
icebp
imul
sub
add
adc
mov
mov
mov
nop
dec
dec
in
popf
push
push
push
xor
out
add
push
and
arpl
bound
mov
stos
jo
pop
xchg
stos
(bad)
dec
stos
jp
mov
retf
scas
rcr
inc
cdq
xchg
inc
les
(bad)
cvttps2pi
div
in
fisttp
sbb
sbb
imul
or
fwait
lea
shl
std
jnp
dec
aas
lds
or
and
jo
push
mov
test
int3
mov
stos
jmp
push
fisttp
into
leave
and
lock
xor
inc
mov
fisub
xchg
test
sub
int3
enter
mov
sub
dec
fdiv
sar
xor
outs
pusha
and
test
and
ja
fdivr
movs
mov
fs
cmp
je
add
pop
(bad)
fdiv
xlat
xor
sbb
push
inc
test
push
aad
pop
inc
cmps
jb
fcomp
rcl
call
dec
mov
xchg
push
mov
mov
cmp
retf
xlat
cmp
test
in
lds
rcr
sbb
push
jno
push
in
sbb
ret
dec
and
and
inc
inc
loope
xor
and
(bad)
jns
mov
xchg
adc
and
(bad)
inc
rcl
and
jmp
mov
pusha
add
(bad)
mov
clc
sahf
stos
or
xchg
push
das
sar
lods
clc
inc
push
mov
inc
cmc
push
mov
sub
out
cld
fnstcw
xor
pusha
mov
dec
xchg
sahf
stos
sub
in
imul
aas
mov
add
add
call
imul
fmul
ja
xchg
mov
adc
dec
jecxz
sahf
inc
cmp
les
pop
mov
fmul
xor
ficomp
test
push
mov
mov
adc
(bad)
xchg
repnz
movs
cmp
adc
xlat
fcom
cmp
cmp
mov
dec
and
(bad)
retf
xchg
push
and
pop
icebp
(bad)
sub
aad
push
jge
les
sub
cs
scas
cmp
jno
cmovp
test
mov
push
mov
mov
sbb
pop
fcmovnu
pushf
add
in
push
movs
arpl
(bad)
jmp
inc
mul
test
gs
xchg
mov
aaa
inc
dec
ret
clc
call
aaa
inc
or
imul
in
sbb
ret
sub
lods
jg
sar
in
outs
adc
sub
xor
push
lods
dec
dec
test
xor
inc
jnp
(bad)
jmp
out
xchg
inc
push
repnz
icebp
jnp
push
lock
test
or
lods
and
shl
inc
jl
fisub
ins
into
inc
pop
and
frstor
jl
dec
mov
adc
jg
mov
jmp
mov
add
or
std
dec
sbb
adc
sbb
fnstsw
xchg
cmp
aad
jne
adc
shl
add
dec
jl
das
mov
test
push
xlat
mov
mov
mov
adc
mov
fucom
pop
push
pushf
sbb
mov
pop
cmp
in
push
clc
inc
jl
push
add
icebp
cwde
mov
jg
call
imul
pop
sbb
cmc
sub
fimul
mov
xchg
xor
push
fisubr
rcr
ins
fmul
lods
or
test
xchg
loop
and
hlt
mov
mov
push
jne
cdq
nop
cmp
mul
lods
je
dec
into
xor
int
push
cli
cmp
ds
popf
adc
mov
nop
pushf
xchg
adc
in
gs
sbb
dec
addr16
(bad)
or
ss
stos
or
mov
inc
mov
outs
fmul
jecxz
nop
loop
loop
add
jge
iret
xchg
jne
movs
jnp
xlat
ret
mov
rol
xchg
push
mov
mov
xor
div
lea
adc
mov
cmp
outs
stos
jno
or
or
xchg
jb
pop
adc
add
scas
pop
mov
fisubr
lods
pop
ds
test
enter
(bad)
inc
fs
xchg
cmps
sti
push
mov
mov
mov
mov
mov
dec
push
mov
into
les
mov
cmc
cmp
sub
ror
dec
push
mov
stos
enter
cmps
dec
enter
loopne
dec
push
es
or
pop
cmp
mov
pusha
jnp
or
shr
sub
popf
icebp
sahf
adc
push
pop
push
test
lods
in
fwait
leave
xchg
jg
test
(bad)
mov
js
call
cmps
aam
push
ins
nop
or
in
dec
pop
inc
mov
enter
push
or
sub
mov
dec
out
(bad)
retf
dec
add
ins
clc
fisub
xchg
lock
add
leave
inc
or
push
jmp
dec
pop
fstp
test
add
sbb
out
adc
popa
dec
dec
cmps
dec
loope
xor
xchg
adc
in
push
retf
cs
inc
nop
cwde
cdq
mov
lods
inc
add
mov
sub
in
clc
arpl
sahf
mov
xor
jl
and
pusha
pusha
fld
cmp
ret
stos
test
in
jo
ret
arpl
add
adc
inc
xor
mov
jle
mov
push
mov
cmp
mov
pop
jns
movs
pop
rcr
test
xchg
jp
neg
mov
test
xchg
pushf
stos
xor
ret
pop
cdq
stos
ja
dec
fnstsw
push
dec
imul
repnz
popf
sbb
and
mov
pop
or
mov
xlat
fs
das
mov
arpl
mov
and
push
dec
movs
fs
mov
outs
das
or
test
add
dec
jbe
lods
pusha
loopne
fistp
mov
adc
stos
jno
shl
test
out
repnz
xchg
xchg
sahf
add
(bad)
movs
loop
jo
mov
aaa
xlat
sub
cmp
call
pop
add
add
imul
sbb
mov
xor
and
jb
pusha
xchg
sub
jb
inc
pop
add
add
mov
or
aad
pop
mov
imul
jns
mov
push
xlat
mov
xchg
loopne
or
mov
inc
iret
out
out
lock
mov
test
fcmovu
addr16
sbb
ins
sar
and
mov
lock
(bad)
ror
xchg
sbb
jge
mov
push
pop
add
pushf
sbb
imul
pop
or
xchg
mov
pop
push
cmp
xlat
loopne
xor
ret
dec
jnp
dec
out
fld
int
dec
fnstsw
xchg
cs
sahf
lock
mov
jmp
fcomp
mov
sti
push
inc
or
cmp
or
cld
je
add
ss
pop
in
add
inc
(bad)
es
imul
xor
push
mov
xor
pushf
add
sub
test
setg
jns
push
and
ins
fwait
int
dec
(bad)
mov
fcmovbe
mov
clc
pusha
stos
cmps
mov
push
mov
mov
xchg
mov
jp
sbb
ds
repnz
pop
fisubr
js
pop
push
push
mov
xchg
iret
dec
pop
out
inc
(bad)
push
jne
sti
cmp
add
cmp
enter
push
inc
xchg
sbb
adc
push
aam
out
enter
outs
inc
inc
mov
ds
test
(bad)
movs
dec
dec
cli
fisttp
cld
test
sti
sub
repnz
xchg
mov
dec
pop
dec
(bad)
call
sbb
es
pop
cmp
fwait
mov
loop
sbb
jmp
outs
popa
jbe
mov
mov
lods
inc
xor
das
push
mov
xor
call
sbb
daa
fwait
dec
mov
inc
mov
ja
xchg
(bad)
aam
das
call
lds
xchg
test
mov
pop
fninit
scas
test
cmp
not
and
repz
stc
cmp
xor
mov
inc
and
cdq
retf
push
cmps
ja
enter
gs
jmp
adc
or
sbb
or
xchg
cmp
es
frstor
outs
bound
push
loope
mov
aaa
shl
icebp
mov
fs
lea
(bad)
in
xchg
pop
sti
dec
out
add
ret
mov
pop
les
addr16
fidiv
pop
jl
dec
cmp
retf
iret
(bad)
fsubrp
adc
int3
pop
jge
sbb
add
pushf
pop
lahf
push
jmp
push
push
outs
popf
xchg
out
div
pushf
adc
jae
sub
mov
fwait
push
test
adc
stos
retf
push
test
mov
into
stc
mov
lock
mov
jbe
push
call
stc
mov
in
pop
dec
xor
jle
xor
nop
iret
das
push
in
popa
(bad)
aas
test
inc
into
xor
inc
xor
icebp
ss
jae
dec
outs
scas
data16
(bad)
cmp
and
inc
mov
pop
out
fs
dec
aam
clc
cmp
test
scas
adc
jle
sti
movs
out
xchg
mov
sbb
retf
jle
fild
pop
fimul
cmp
rcr
inc
jmp
push
push
mov
fwait
test
outs
out
jmp
cmp
sbb
add
ins
inc
outs
mov
popa
movs
test
sub
adc
out
test
add
bound
cmp
neg
popf
sub
stos
pop
call
add
ins
push
cmp
pop
adc
fisubr
push
sub
les
inc
inc
lahf
push
pop
mov
jge
(bad)
cmp
loopne
push
pop
inc
jmp
and
push
fild
jo
nop/reserved
movs
adc
lahf
daa
mov
push
jmp
movs
shl
jecxz
loop
jp
retf
call
sahf
(bad)
xor
xor
cli
jmp
dec
lea
push
and
out
test
shr
pop
aas
and
push
pop
out
mov
dec
sbb
mov
jle
inc
cmp
add
jp
or
ins
outs
mov
dec
jmp
lahf
cmovle
popa
cwde
in
xor
enter
inc
outs
mov
mov
mov
xrelease
adc
out
daa
retf
ja
lea
dec
mov
aad
xlat
jecxz
jp
mov
ins
icebp
inc
add
jecxz
iret
pop
loop
or
lods
or
inc
or
test
dec
lahf
hlt
es
jl
dec
cmp
pop
push
or
mov
stos
adc
jge
xchg
jae
lea
cwde
fstp
lds
push
xchg
mov
dec
adc
pop
in
jb
retf
xor
pop
xchg
in
rcl
rcl
mov
test
xchg
ffreep
js
mov
adc
push
stc
aam
push
es
sbb
dec
sub
mov
cmp
dec
iret
std
and
inc
jmp
ds
fs
popf
jo
pop
jbe
inc
or
sbb
std
call
xlat
js
inc
fcomp
nop
ret
dec
xchg
leave
xchg
jg
cmp
hlt
xchg
or
adc
mov
fldcw
mov
jle
or
std
inc
fild
sub
pop
pop
jb
imul
cmc
mov
pushf
and
lock
movq
jmp
cmp
or
movs
push
adc
xor
jl
les
sti
pop
jnp
sahf
sub
lods
fsub
not
ss
fldenv
stos
shl
fstp
xchg
mov
cmp
int3
ret
sbb
test
xlat
dec
xlat
push
sub
shr
imul
push
inc
pop
mov
fisubr
out
jnp
int3
jb
jge
cld
nop
xor
add
(bad)
jbe
aam
jb
mov
xchg
fild
fistp
dec
mov
(bad)
xchg
fwait
data16
repz
test
adc
mov
xor
loop
leave
shl
mov
enter
loope
rcl
inc
or
das
sbb
outs
scas
popf
xchg
icebp
jnp
std
add
cli
daa
xor
arpl
adc
push
mov
cs
call
jp
pop
data16
jp
lahf
(bad)
push
(bad)
mov
sub
loop
sub
mov
pop
nop
mov
cmp
fild
pop
or
cs
icebp
(bad)
aad
iret
add
jl
ss
sub
mov
sbb
shl
pop
adc
cmp
jbe
cwd
inc
mov
jbe
adc
mov
ficomp
fistp
loope
xchg
out
cmps
imul
data16
outs
mov
pop
push
lods
xchg
cmps
xor
int3
retf
push
je
test
inc
lods
aaa
pop
or
out
out
push
rol
and
dec
sbb
iret
mov
enter
mov
jae
jmp
es
and
out
xor
(bad)
dec
inc
mov
add
mov
(bad)
fbstp
dec
xlat
push
inc
pop
fbld
test
jl
xchg
ja
(bad)
lea
inc
lahf
vmovdqu
loopne
xchg
mov
mov
pop
add
into
enter
aas
push
or
push
mov
xchg
sahf
enter
jp
jmp
adc
add
mov
int3
and
jnp
mov
mov
add
xchg
cwde
bndstx
sbb
outs
jo
fisttp
lds
loop
xchg
xchg
push
or
dec
mov
inc
outs
mov
rol
push
and
adc
or
test
jle
sub
aaa
jbe
movs
xor
pop
mov
int3
ins
cdq
frstor
frstor
inc
sub
add
bound
mov
mov
cmp
dec
pop
test
sahf
adc
add
adc
test
dec
mov
mov
mov
sti
inc
nop
loope
mov
cmps
inc
push
adc
xchg
fcmovu
popa
dec
mov
into
adc
sbb
and
pop
dec
and
test
pop
(bad)
(bad)
jno
fadd
push
pop
ss
adc
add
mov
int3
das
retf
sbb
push
push
mov
jb
xchg
mov
xor
hlt
jmp
jge
pusha
push
inc
call
mov
sbb
xchg
aam
jnp
inc
(bad)
in
loop
cmps
sbb
(bad)
pusha
and
cld
imul
inc
aad
int
or
mov
gs
es
dec
stos
sbb
aaa
or
mov
aad
std
ret
jmp
cs
pop
adc
sbb
cs
dec
scas
adc
fst
or
aad
and
ret
popa
xchg
ror
xchg
mov
or
add
add
hlt
jg
pop
or
lock
push
enter
arpl
pop
and
ret
ds
cmp
inc
add
cmp
pop
push
movs
push
sbb
mov
loop
mov
repnz
inc
movs
js
mov
push
mul
popf
jb
js
mov
loope
scas
imul
mov
add
idiv
jns
mov
icebp
adc
cmp
fcmovu
and
aas
mov
jns
test
dec
nop
fwait
nop
iret
ds
sbb
jns
or
xor
pop
imul
jns
test
push
repnz
lods
add
jns
mov
fs
call
mov
xchg
sbb
enter
aam
xchg
loop
inc
dec
sbb
push
aaa
in
test
pop
inc
sub
stos
and
mov
enter
ds
jae
addr16
inc
xor
and
stos
or
stos
inc
sub
mov
xchg
out
xor
ins
dec
rcl
aad
cwde
jmp
outs
xchg
movs
gs
out
push
mov
sub
arpl
xchg
mov
in
imul
dec
cmp
and
pop
test
cmps
cmp
jne
retf
lods
call
add
(bad)
dec
cmp
inc
add
and
mov
push
aam
pop
call
mov
das
and
jmp
ficom
fbld
cwde
mov
test
jmp
fdivr
cli
fwait
shl
fnstcw
add
fs
mov
stos
(bad)
jmp
je
xchg
dec
xlat
push
call
xchg
fstp
adc
cmp
adc
jnp
inc
or
xchg
sbb
(bad)
pop
(bad)
xchg
mov
pop
add
pop
xor
pop
xchg
and
fnstenv
lods
add
(bad)
std
sub
retf
mov
popa
push
lods
push
cld
mov
mov
sub
loop
sbb
les
stos
push
jle
or
hlt
ins
inc
lods
cmps
ja
push
in
push
push
sub
out
inc
int3
sbb
jg
imul
xor
test
push
lods
addr16
loop
xchg
repz
imul
sbb
jg
cmps
or
sub
mov
mov
sti
xlat
dec
mov
jp
cmps
push
lahf
leave
bound
jecxz
push
iret
in
sub
pop
mov
test
daa
mov
xchg
sahf
mov
cmp
test
stos
mov
adc
add
in
aaa
add
sbb
push
push
mov
mov
dec
cmp
or
aaa
leave
pop
pop
push
mov
iret
dec
push
scas
push
sbb
xor
test
ins
cld
in
mov
pop
jns
mov
xchg
fisttp
mov
jbe
(bad)
stc
xchg
jnp
dec
repz
mov
stos
sbb
in
cld
pop
adc
mul
movs
imul
or
in
std
sub
movs
adc
pop
push
mov
fist
xchg
jg
not
pop
aas
(bad)
pop
aaa
push
cmp
xor
pusha
adc
push
adc
fld
lahf
jmp
add
push
inc
ins
sahf
popa
mul
mov
xchg
mov
xor
xchg
dec
xchg
mov
pop
jno
movs
mov
xor
retf
aam
adc
sub
add
loop
ret
jnp
mov
ja
ins
call
jle
retf
sar
xor
add
inc
adc
sub
inc
jnp
imul
sbb
(bad)
test
fwait
cld
test
mov
popa
push
sub
fsub
rcl
adc
neg
movs
mov
pop
mov
neg
xchg
fild
xor
dec
out
push
or
loop
(bad)
jp
inc
pop
push
dec
call
inc
mov
and
pop
out
jmp
inc
jmp
ins
jne
adc
sbb
fcom
xchg
adc
mov
retf
rol
pusha
retf
jle
arpl
into
bnd
ret
retf
push
jmp
jge
scas
mov
push
adc
xchg
fstp
push
clc
repnz
jle
ins
sbb
dec
cmp
cwde
xor
mov
(bad)
out
pop
jne
adc
or
pop
xor
xchg
sub
or
push
inc
lods
pop
add
jmp
aaa
add
popf
lods
xchg
sbb
pusha
pop
cmp
out
cwde
rcr
loopne
sub
mov
cmps
inc
dec
mov
stos
cmp
cmc
cmp
movs
ins
aam
sti
dec
or
out
(bad)
fnstenv
inc
bound
data16
push
jg
outs
pop
push
mov
stc
jns
iret
jo
call
or
out
inc
ss
or
pop
mov
lods
dec
add
dec
js
test
retf
pop
fwait
sti
imul
add
pop
ficomp
movs
jae
loop
(bad)
div
cmp
push
movs
lods
scas
call
sti
sahf
hlt
sub
ret
jge
fwait
push
add
jg
cmp
pop
mov
dec
outs
cld
cmp
test
push
mov
add
inc
aaa
cmp
ins
pop
mov
inc
scas
aad
xor
push
outs
loope
or
jge
popf
pop
jmp
aam
mov
in
sub
xlat
repnz
hlt
adc
lods
push
xor
pushf
cwde
repz
ds
mov
dec
and
(bad)
stc
ror
xor
add
arpl
movs
pushf
mov
cdq
cld
xor
xor
inc
adc
and
mov
mov
movs
jge
(bad)
xor
cmps
cmps
or
pop
inc
cli
mov
inc
mov
pop
ins
mov
inc
mov
sahf
inc
pop
out
lods
or
push
xchg
test
inc
inc
call
hlt
rcl
mov
addr16
sub
xor
fidiv
outs
mov
mov
icebp
pop
shr
mov
xor
sbb
push
adc
mov
pop
jno
jl
nop
cs
in
mov
fucomi
mov
int
push
fstp
inc
movs
sbb
aam
inc
cs
repz
pop
lods
std
movs
(bad)
or
scas
and
fimul
xor
das
cld
xor
in
popa
into
or
cmp
inc
push
call
pop
fld
xor
jno
jbe
hlt
xor
imul
cmp
jno
jo
stos
adc
sbb
and
std
repz
mov
pop
shl
bound
dec
cmp
dec
in
push
ss
mov
lea
cmps
cmps
jmp
sahf
arpl
in
rol
addr16
(bad)
push
lea
dec
add
add
fsubr
jge
push
(bad)
into
push
daa
retf
push
into
pop
mov
pop
je
inc
mov
mov
push
mov
adc
mov
cwde
push
add
in
mov
retf
out
je
sbb
jbe
jge
cdq
out
loop
cmps
dec
lock
jbe
fcomi
mov
call
inc
xchg
xlat
cmc
into
xchg
jmp
ror
push
hlt
mov
es
das
jle
cdq
inc
push
jbe
mov
enter
pusha
icebp
aam
mov
cmp
sub
adc
cmp
jne
pop
sbb
mov
jecxz
mov
mov
jno
push
add
js
mov
dec
mov
in
cmp
fdiv
cli
test
adc
mov
jmp
outs
in
mov
adc
lods
inc
out
dec
push
ins
fiadd
inc
pop
mov
pusha
mov
xchg
and
arpl
(bad)
and
dec
jecxz
cmp
daa
sar
inc
dec
fimul
scas
and
stos
rol
jmp
popf
xor
jo
and
lock
mov
mov
leave
jmp
adc
pusha
xchg
test
popf
mov
div
fisttp
pop
rcr
aaa
ds
mov
lods
js
sbb
and
arpl
dec
(bad)
ret
xchg
mov
xchg
iret
add
cli
add
arpl
sub
push
scas
adc
pop
push
shr
mov
xchg
sub
sub
shl
shl
sahf
das
ret
jl
(bad)
inc
mov
xchg
jo
dec
mov
test
jge
leave
mov
and
ret
or
cmp
lods
mov
or
xor
fsubr
add
adc
xchg
aaa
push
ja
mov
jbe
xlat
add
dec
push
push
das
and
dec
or
mov
and
sub
call
xchg
push
out
dec
push
lods
je
xchg
arpl
jmp
push
fdiv
mov
call
mov
mov
lods
repnz
jmp
push
das
ror
std
inc
rcr
sub
sub
test
pop
dec
xchg
mov
iret
sub
fistp
ret
jecxz
test
pop
jmp
sub
je
pop
push
fs
adc
sar
cld
scas
cmps
push
lahf
(bad)
inc
test
pop
scas
arpl
enter
xchg
pusha
or
test
nop
dec
push
test
in
(bad)
fstp
inc
mov
scas
push
sub
mov
call
jae
jg
sub
test
push
push
xchg
xchg
retf
sub
dec
clc
cld
xor
inc
ret
js
cmp
and
mov
dec
xchg
dec
(bad)
mov
fild
pop
mov
mov
call
ret
leave
jge
mov
push
mov
call
xchg
cld
ror
mov
call
mov
inc
clc
xor
or
stos
arpl
push
mov
mov
addr16
fmul
pushf
(bad)
ins
sbb
sbb
sbb
shl
popa
jns
inc
aas
or
or
adc
(bad)
mul
in
add
call
iret
mov
push
mov
mov
test
dec
mov
mov
inc
retf
retf
xchg
out
js
popf
jne
inc
iret
sbb
xor
jmp
cmp
push
add
neg
(bad)
std
jns
mov
dec
pop
add
add
enter
ins
and
mov
sub
dec
enter
mov
pop
sub
popa
retf
dec
stos
out
dec
(bad)
mov
xchg
out
test
(bad)
clc
cmp
pop
pop
in
xchg
inc
mov
scas
xchg
pop
mov
dec
cmp
(bad)
imul
inc
(bad)
xor
arpl
or
mov
mov
mov
sti
cli
xor
icebp
dec
pop
popa
and
xor
mov
sbb
dec
and
scas
xor
sub
mov
loopne
addr16
test
mov
xchg
dec
sar
mov
inc
sub
mov
cmp
test
inc
cwde
mov
sub
sub
jecxz
sar
pop
arpl
gs
add
xchg
fwait
sahf
add
mov
ret
sbb
add
cmp
inc
adc
jo
pop
push
(bad)
jge
xchg
or
lods
stos
pop
cmp
pop
aam
mov
jecxz
outs
pop
mov
push
out
dec
dec
(bad)
rol
lods
mov
add
ror
test
(bad)
cmp
call
add
fmul
cmp
inc
mov
or
(bad)
xchg
scas
or
aad
iret
lea
jae
jmp
add
ss
cmp
adc
lods
xor
and
out
mov
pushf
cmp
inc
daa
mov
mov
mov
clc
loop
xor
outs
xchg
mov
out
rcr
mov
shl
retf
js
test
or
or
fsub
jbe
inc
jo
ins
fstp
inc
jnp
je
push
sbb
sbb
fist
pop
and
pop
push
or
stos
jno
xchg
add
mov
add
or
mov
dec
je
push
test
test
stos
cdq
adc
clc
inc
and
ret
mov
mov
pop
pop
lods
mov
and
loopne
call
scas
jns
push
ficomp
mov
jbe
mov
push
pop
or
sub
enter
push
pop
rol
sbb
xchg
and
mov
gs
xchg
lea
add
and
push
cmps
and
scas
fiadd
rcl
aad
mov
hlt
inc
cmc
mov
dec
arpl
xchg
(bad)
stos
fscale
inc
pop
mov
ss
push
ror
sbb
in
repz
push
push
jg
cmp
ret
int3
pop
out
or
in
push
add
ins
leave
ins
pop
sahf
dec
sbb
push
pop
test
jl
fstp
dec
js
xchg
jge
fmul
push
shl
lock
mov
bound
repz
(bad)
shl
jge
mov
jno
sub
aam
jnp
xor
pusha
lods
or
sahf
fs
xchg
call
out
or
es
sub
mov
leave
pmaddwd
ficom
mov
sahf
or
sub
xlat
mov
(bad)
jns
pop
cdq
dec
mov
test
int
inc
xor
fild
movs
fnstenv
mov
cli
fisubr
stos
fild
dec
sti
dec
pop
xor
retf
ret
push
jo
cmp
bound
jne
stos
lds
fst
add
jg
adc
(bad)
jg
pushf
jbe
mov
jl
movs
mov
retf
xor
shr
je
jo
arpl
xchg
jmp
lahf
std
mov
and
call
xchg
xchg
jle
mov
sbb
stc
cwde
call
pop
shl
dec
or
mov
inc
in
jnp
outs
stos
sbb
mov
test
retf
aaa
pop
out
data16
mov
mov
dec
jo
sub
adc
inc
and
jmp
xchg
mov
cli
arpl
push
dec
iret
scas
call
into
into
inc
xchg
je
stos
pop
add
cmp
fcomp
add
movs
mov
int3
jnp
mov
movs
shr
scas
out
push
xchg
mov
retf
jae
dec
pop
dec
clc
les
cmp
cs
pop
clc
aaa
and
stos
lds
enter
in
jnp
pop
cmp
cmp
add
mov
push
(bad)
dec
adc
je
or
jmp
xor
(bad)
push
lock
jl
das
retf
mov
pusha
mov
mov
jmp
sub
xlat
and
pusha
jo
xor
inc
ror
addr16
sahf
sub
inc
clc
dec
and
clc
sbb
dec
mov
dec
sbb
movs
enter
enter
and
leave
bound
adc
pop
push
cmp
dec
inc
aam
add
stos
stos
sbb
adc
neg
mov
neg
js
lea
test
mov
in
mov
mov
iret
inc
movs
mov
sbb
and
jmp
arpl
mov
xchg
xor
sbb
call
and
addr16
xor
popa
mov
or
sbb
lea
mov
or
add
mov
imul
pop
into
push
push
mov
sub
inc
in
scas
mov
pop
inc
push
cwde
jg
mov
cmp
pop
out
shl
sbb
mov
mov
call
imul
fdivr
inc
or
cwde
add
sub
test
add
nop
adc
fidivr
shl
ja
out
jae
or
sub
das
retf
mov
je
xchg
(bad)
mov
xor
jp
mov
into
ficomp
jecxz
ja
nop
push
or
out
aaa
out
add
sbb
rcl
scas
out
popa
mov
jmp
sub
mov
add
jle
outs
push
jp
push
pop
push
mov
movs
mov
sbb
and
jnp
(bad)
xor
xor
jecxz
mov
lea
nop
or
lahf
retf
adc
retw
out
mov
jbe
outs
sar
fwait
dec
xchg
cmps
arpl
xchg
mov
test
(bad)
mul
mov
sahf
cmp
(bad)
pushf
xor
pop
jl
mov
into
dec
fnstcw
or
push
repz
popa
mov
ss
dec
mov
pop
scas
dec
xchg
fbstp
mov
add
xor
pop
mov
cmps
movaps
mov
hlt
in
xor
push
sti
mov
mov
or
aad
xor
inc
mov
mov
icebp
sbb
aad
lods
(bad)
pop
pusha
mov
jp
jp
cmp
fmul
retf
jbe
daa
je
jg
sub
push
pop
call
add
push
(bad)
sub
lock
pop
out
xor
xor
dec
movs
jnp
cmps
mulps
push
pop
jmp
icebp
pop
jge
mov
arpl
loope
xor
int
cmp
and
std
test
mov
lds
pop
sbb
retf
pushf
sbb
cmp
push
inc
pop
popf
cwde
test
call
inc
dec
pop
sub
lods
adc
jo
outs
pop
stos
pop
inc
ror
ins
mov
and
rol
pop
jne
fmul
mov
popf
jl
mov
sbb
mov
hlt
stos
cmps
into
sub
pop
inc
jecxz
mov
or
jmp
pop
xchg
movs
inc
in
ins
lods
adc
jecxz
aad
les
inc
sbb
mov
gs
mov
les
iret
mov
shl
xor
inc
cmp
cmp
addr16
mov
sbb
push
pop
xchg
lods
xchg
add
push
outs
lods
inc
in
fnstsw
mov
lahf
push
rol
daa
leave
pop
test
fiadd
nop
lds
mov
mov
cmps
cmove
jmp
fs
or
jae
or
jo
pmaddwd
int
sti
std
and
imul
dec
and
ss
adc
xchg
pop
int
jmp
jo
inc
push
cmps
sub
xor
aam
xor
sbb
popa
loope
sti
cmp
in
jns
mov
mov
inc
dec
mov
mov
mov
mov
out
cmp
cmp
popa
fsubr
cmp
rol
sahf
repz
cld
jbe
jns
ficom
cmp
adc
paddusw
ficomp
das
pop
lods
xchg
sub
push
iret
shl
imul
dec
lds
mov
adc
aam
add
cmp
les
mov
call
(bad)
sub
test
dec
pop
fwait
cmp
jp
mov
std
neg
stos
dec
add
pop
ins
pop
push
and
sbb
test
sub
jmp
add
lahf
cmps
mov
stos
into
(bad)
inc
pop
(bad)
nop
sahf
jp
aam
ins
xchg
mov
cmps
and
inc
mov
cmps
addr16
mov
(bad)
cwde
mov
cmp
fsubr
outs
stos
cmp
xor
xchg
aad
fwait
xor
cmovae
cmp
jb
xchg
cdq
xchg
sbb
out
pop
(bad)
push
xchg
int3
pop
adc
cmps
and
jne
sbb
pop
cwde
sub
adc
mov
outs
push
push
jnp
test
ds
push
sti
outs
pop
push
sahf
sub
into
cmp
loop
add
div
mov
dec
push
mov
shr
leave
fisubr
in
(bad)
dec
jmp
neg
repnz
and
xchg
cmovge
and
mov
xchg
stos
push
sub
sbb
cmp
jp
fs
mov
mov
xchg
or
sbb
test
or
lods
ror
div
stos
daa
(bad)
mov
pop
pusha
inc
cdq
ins
jmp
dec
xchg
mov
add
mul
(bad)
mov
mov
idiv
xor
leave
lods
out
lds
mov
in
dec
and
mov
inc
clc
and
js
cmp
sahf
pusha
sub
ret
movs
pop
sbb
mov
mov
add
adc
es
sbb
jne
pop
arpl
gs
cmp
enter
xchg
pop
out
dec
jo
jge
(bad)
sar
int3
call
out
xchg
pop
es
retf
mov
xchg
fcmovbe
dec
mov
std
and
cli
mov
repz
jge
mov
push
pop
aaa
icebp
frndint
dec
loope
push
sbb
imul
pop
or
mov
lea
ds
pop
cwde
fnstcw
mov
push
mov
push
add
daa
xchg
and
sahf
push
sub
(bad)
imul
mov
shl
scas
imul
movs
jg
shl
mov
add
shl
mov
(bad)
outs
outs
xchg
mov
dec
cmps
push
or
pop
cmp
push
popa
lahf
dec
cmp
xchg
fisttp
ins
popf
mov
cli
pop
arpl
cmc
daa
sbb
sub
adc
jmp
sbb
clc
adc
jns
push
cmps
je
cmp
ins
lds
stos
or
adc
or
pushf
and
sbb
cmps
outs
not
cmp
int
fs
fs
xor
or
or
jl
shl
int
outs
jns
cli
xor
pop
sbb
pop
pop
mov
inc
ror
mov
lods
sbb
gs
xchg
push
stos
ret
sbb
fiadd
nop
call
push
ret
pushf
fs
loopne
and
je
scas
(bad)
(bad)
cmp
mov
inc
(bad)
test
out
jg
cmps
fs
jp
inc
push
push
fstp
mov
push
or
pop
pop
in
mov
push
cdq
jmp
aas
mov
or
pop
data16
pop
inc
xor
pop
add
cli
mov
outs
and
pop
jecxz
fcom
loop
push
fld
test
mov
popa
mov
and
in
(bad)
dec
call
sar
add
mov
gs
mov
jno
inc
xchg
test
aam
pop
lods
popa
icebp
fistp
int3
push
ins
push
inc
stc
ds
arpl
cmp
dec
mov
pop
mov
push
ret
and
push
inc
mov
dec
movs
ret
fld
lea
in
cmp
sbb
scas
mov
(bad)
not
shl
xchg
fidivr
jle
push
or
(bad)
cld
and
dec
add
inc
scas
imul
aas
seta
int
loope
or
inc
aam
add
push
scas
jae
dec
inc
cmps
or
(bad)
dec
sbb
and
mov
imul
push
lea
out
cmc
outs
mov
mov
cs
rol
pushf
mov
add
pop
pop
loop
mov
aas
mov
mov
stc
(bad)
push
stc
in
inc
cmp
pusha
test
push
and
lahf
mov
dec
aaa
aad
retf
mov
jbe
ja
fild
add
or
pop
gs
add
xlat
stos
aas
xor
dec
test
xchg
retf
je
arpl
push
out
add
mov
dec
std
(bad)
xor
inc
stos
mov
pusha
push
test
xchg
movs
xor
pop
fstp
dec
leave
mov
or
fs
adc
xchg
adc
cmc
sub
inc
out
cmp
stos
daa
lods
sub
arpl
sbb
or
mov
arpl
inc
mov
inc
xchg
repz
out
es
call
icebp
in
les
pushf
ja
mov
xchg
and
mov
ja
mov
sub
(bad)
sti
inc
rcr
or
mov
pop
or
(bad)
(bad)
ror
pop
mov
jmp
pop
jg
aas
rcr
pop
push
and
pusha
dec
scas
pop
cmp
xchg
test
push
push
inc
jecxz
loop
mov
jp
movs
outs
sti
mov
xchg
inc
xchg
loopne
or
cli
jg
test
mov
mov
xchg
repz
fst
jo
dec
or
shl
push
sub
mov
jle
mov
and
loope
movs
sub
sbb
outs
or
ds
(bad)
jne
mov
pop
xchg
lea
fadd
mov
(bad)
jnp
cmp
push
xchg
into
xchg
push
rol
scas
and
jg
mov
pusha
jnp
mov
xor
les
in
fbstp
push
(bad)
cs
xor
enter
inc
push
jns
fimul
sbb
push
scas
xchg
mov
sbb
movhps
into
and
push
sub
aaa
rcr
cdq
imul
add
push
xor
scas
xchg
dec
add
dec
shl
callw
or
lds
lods
cwde
out
dec
mov
lods
sbb
faddp
push
jle
mov
out
push
xlat
or
int
(bad)
and
ds
gs
adc
pushf
mov
lahf
fistp
retf
jbe
jecxz
aas
push
sub
and
jle
arpl
pop
and
test
sub
fmulp
mov
std
sbb
fmul
cmp
call
or
add
mov
mov
mov
popf
ins
jle
mov
call
shr
add
pushw
and
mov
aad
fwait
call
push
inc
and
cmp
or
jne
dec
xor
test
sahf
repnz
and
inc
mov
call
shr
idiv
popf
and
cmps
out
test
ret
xor
clc
icebp
out
mov
scas
jae
push
in
dec
es
in
ret
push
dec
cmp
pop
adc
pop
icebp
mov
rcr
jmp
adc
sub
scas
and
cdq
jae
mov
ss
add
pop
scas
std
or
fs
pop
fist
loopne
xchg
hlt
movs
inc
int3
jmp
fld
sbb
push
mov
mov
push
(bad)
pushf
cdq
jmp
inc
pop
in
sahf
inc
xchg
dec
stc
cmp
sub
ss
sub
cmp
dec
dec
mov
(bad)
(bad)
jmp
pop
dec
fs
adc
fwait
pop
mov
sar
lea
mov
mov
fldenv
inc
loope
add
pop
popf
mov
sahf
jbe
lahf
or
stc
icebp
pushf
adc
mov
mov
in
cmp
rcl
mov
bound
sbb
repz
pop
jns
dec
sub
mov
mov
int
in
sub
dec
out
cmp
pop
aaa
add
addr16
fisubr
mov
pusha
cmps
mov
xor
mov
shl
outs
push
arpl
jno
repz
mov
psrlq
mov
pop
cmc
(bad)
pop
mov
mov
shl
mov
shr
cwde
mov
dec
add
call
adc
js
ins
dec
popa
cwde
xor
xchg
dec
inc
icebp
pop
ret
mov
add
imul
pop
mov
mov
push
mov
mov
es
(bad)
les
loopne
fs
enter
mov
mov
mov
pushf
fwait
out
mov
mov
add
aad
mov
dec
pop
cmp
add
in
stc
pop
cwde
and
js
push
push
lods
pop
inc
bound
pop
hlt
je
neg
fisubr
pop
aas
lds
adc
xor
dec
pop
mov
setp
imul
jmp
leave
push
add
dec
cmc
mov
mov
sbb
dec
lea
jl
pushf
and
call
inc
imul
adc
fsubr
fs
mov
jbe
mov
or
adc
cli
imul
jb
jbe
cld
xor
scas
inc
lahf
jbe
imul
cmp
fldcw
out
test
push
test
push
dec
call
stos
mov
int3
xchg
pop
push
xlat
movs
lods
xor
gs
test
scas
xor
xor
enter
ret
pop
arpl
repnz
and
shl
retf
pop
jmp
push
ss
test
dec
and
scas
fnstcw
pop
test
sbb
add
out
inc
or
pop
loop
sar
pop
imul
sbb
mov
out
fwait
adc
inc
inc
addr16
pop
cld
lea
sbb
stc
(bad)
jmp
mov
stos
sbb
ret
cmps
bound
into
cld
jmp
jmp
jl
adc
dec
aam
mov
out
xor
push
daa
in
push
pop
stos
lds
jns
icebp
push
(bad)
mov
inc
inc
out
or
xor
add
fnstcw
test
mov
call
in
mov
pop
pushf
outs
push
jb
sub
into
in
mov
mov
and
mul
mov
jl
xchg
nop
xchg
fs
(bad)
sti
mov
rcl
popf
mov
push
add
fcomi
pop
loop
inc
daa
outs
mov
pop
pop
cdq
push
mov
cmp
in
dec
fist
push
jbe
fidiv
adc
aaa
mov
int3
xor
mov
pop
nop
mov
leave
cli
in
xchg
cld
pop
mov
bound
popa
neg
retf
and
sar
enter
rcr
adc
jne
xchg
test
adc
fist
nop
mov
jle
pop
add
ror
test
nop
adc
cmp
push
adc
mov
fdivr
popf
xlat
pop
sbb
sbb
or
pop
push
push
ror
xchg
into
mov
loopne
mov
(bad)
jp
jns
sub
cdq
fmul
out
push
call
mov
scas
mov
outs
arpl
inc
in
mov
cmp
jmp
mov
jbe
test
test
sub
clc
or
mov
sub
sub
or
js
cmps
loope
es
push
mov
add
arpl
lods
sub
mov
test
loopne
fsubr
hlt
sub
mov
mov
stos
into
out
push
jb
cmp
push
aad
clc
pop
clc
adc
inc
mov
inc
pop
imul
clc
add
xlat
inc
push
add
rcl
dec
push
pop
popf
mov
fistp
xchg
cs
nop
mov
bound
or
test
cmp
jl
imul
push
mov
and
jnp
loope
call
scas
ficom
repnz
pop
pusha
jecxz
jp
jno
ss
adc
mov
and
adc
dec
pop
mov
cwde
mov
sub
cmc
push
hlt
xor
pop
enter
adc
scas
cmp
mov
pop
mov
inc
test
xchg
fisub
pop
push
and
jae
stos
mov
mov
mov
cdq
retf
inc
jo
mov
xchg
mov
pop
fisttp
pop
lock
push
pushf
and
jns
cdq
sbb
ds
mov
scas
inc
retf
mov
inc
cli
add
inc
sub
jmp
lea
jge
cmps
inc
daa
lods
adc
mov
out
cli
loope
mov
jne
pop
push
jae
jo
mov
mov
cld
mov
dec
cmc
rcl
cmps
mov
sbb
outs
cmp
std
movs
stos
out
outs
test
je
jg
cmp
or
(bad)
loopne
out
pop
xor
pop
mov
mov
xchg
sub
ret
mov
pusha
sub
inc
add
adc
sub
outs
inc
nop
data16
mov
push
gs
aaa
mov
inc
pop
test
arpl
fcomp
fsubrp
mov
cmc
pop
mov
mov
pop
in
mov
test
fnstcw
cmc
mov
lock
sbb
adc
enter
cs
sub
cmps
sub
add
cmps
test
retf
fsub
fisttp
mov
mov
cmp
cmp
mov
inc
stos
xchg
scas
adc
bound
fadd
pop
push
pop
xchg
ss
call
test
in
xchg
jnp
dec
xchg
pushf
(bad)
xlat
sub
jns
cmps
(bad)
popf
jl
rcr
test
and
pop
in
daa
and
in
stc
retf
and
add
xor
outs
pop
pop
xchg
int
lahf
lock
(bad)
inc
cmova
add
push
aam
dec
mov
sbb
or
mov
idiv
add
out
xchg
rol
cwde
dec
popa
inc
lods
sub
(bad)
stc
cmp
in
or
jmp
sub
lock
ja
mov
sti
fcom
call
out
dec
ss
clc
iret
pop
ficomp
pop
adc
js
dec
add
(bad)
iret
popf
sbb
jg
fiadd
enter
push
ss
sbb
push
mov
mov
sbb
add
and
cli
cmps
sbb
out
inc
ret
popa
push
inc
cwde
dec
jecxz
out
test
mov
push
shl
scas
mov
jge
inc
jmp
push
xchg
mov
push
add
(bad)
pop
rol
movs
jne
jne
js
dec
lahf
mov
pop
icebp
fiadd
imul
and
inc
adc
push
movs
rol
clc
xchg
add
add
push
fist
in
enter
jmp
mov
jecxz
test
inc
test
sahf
js
(bad)
and
test
sub
push
pop
push
shl
xlat
sub
cmp
jp
sbb
data16
je
or
pop
repz
repnz
adc
or
gs
cdq
add
adc
xchg
sbb
push
jecxz
xchg
inc
xchg
loopne
out
pop
outs
lds
sbb
mov
xchg
inc
fnstsw
mov
mov
aam
cmps
inc
outs
sahf
mov
icebp
movs
xlat
enter
test
jmp
ror
maskmovq
leave
dec
fcom
jle
xor
xor
mov
push
fild
loop
xchg
out
addr16
add
xor
daa
test
pop
mov
sub
xor
popa
shl
cmp
inc
popa
sahf
outs
rcl
outs
out
sub
retf
out
gs
stc
mov
push
ficomp
inc
mov
out
(bad)
mov
test
(bad)
jae
xor
or
out
ds
xor
cmp
jb
xor
mov
leave
cwde
or
lahf
inc
push
inc
ret
inc
or
aas
rol
mov
jg
aad
cs
push
(bad)
mov
aam
rol
fnsave
fdiv
inc
loopne
mov
push
(bad)
aam
sub
xchg
out
mov
out
add
fdivrp
fs
xchg
lods
outs
les
cmp
jne
push
jne
jge
ins
pop
pop
mov
setno
jmp
sbb
inc
aam
or
imul
jbe
dec
xor
pop
add
movs
mov
sbb
mov
ret
jns
jb
inc
fisubr
xchg
jbe
cwde
inc
and
cmps
mov
loope
hlt
test
gs
test
scas
scas
sar
nop
xchg
ins
out
in
sub
fisub
xchg
push
adc
xchg
fs
jo
xchg
add
jmp
xor
xor
xchg
pop
mov
add
fs
test
pop
inc
pop
dec
loopne
mov
mov
inc
xchg
cmp
pop
mov
test
pushf
and
scas
icebp
sbb
inc
jb
add
pop
mov
sub
and
dec
jl
inc
sub
mov
je
ret
or
retf
pop
xchg
jecxz
xchg
jo
inc
and
add
mov
dec
mov
dec
outs
call
(bad)
out
adc
arpl
(bad)
mov
jnp
rol
jmp
mov
xchg
xchg
mov
stos
inc
jns
mov
push
cmp
fbld
add
hlt
outs
fisubr
sub
jmp
test
xor
and
dec
and
lds
pop
fldln2
add
add
sub
add
pop
in
pop
fiadd
cmp
movs
(bad)
or
int
xor
fstp
addr16
jb
dec
out
cli
outs
mov
stos
inc
int3
lahf
bound
icebp
mov
mov
inc
jo
cdq
xchg
sbb
ret
retf
push
push
mov
adc
fist
inc
and
shr
inc
mov
fwait
test
ret
call
add
push
sub
pop
(bad)
bswap
sbb
pop
or
sbb
movs
movs
jne
xor
rcl
loope
packuswb
dec
in
out
aam
pop
xor
arpl
lods
inc
dec
in
xchg
push
add
mul
or
cmp
loop
stos
es
imul
xchg
pushf
mov
js
mov
rcl
inc
sub
sbb
cmps
pop
jnp
cmovbe
or
arpl
out
jb
pusha
jb
fidivr
les
in
outs
loopne
add
call
adc
sahf
xchg
into
or
add
test
fs
test
cdq
popf
push
push
test
fsubr
inc
xchg
dec
and
xchg
or
cmps
imul
js
retf
or
add
mov
add
cmps
dec
ins
lahf
test
jp
lods
mov
scas
shl
pop
fs
cmps
and
xchg
rol
out
or
mov
pop
stc
in
daa
nop
jne
cwde
sahf
stc
dec
movs
ins
pop
sbb
test
popf
xor
inc
test
out
adc
js
sub
and
mov
or
ins
call
jne
bound
sbb
mov
mov
stc
inc
dec
mov
cmp
or
xor
je
inc
popf
dec
rcr
mov
aam
jb
int
adc
pop
mov
pop
pop
popf
test
xchg
rcl
pop
mov
out
sub
dec
(bad)
ret
pop
in
push
or
sbb
and
pushf
cmps
mov
loope
and
mov
dec
xor
sbb
cmp
out
and
sahf
ja
xchg
aas
push
cdq
xchg
sahf
cmp
and
hlt
mov
(bad)
pop
jbe
popf
jl
fsub
jae
enter
xchg
push
sub
call
cli
cld
fwait
int
mov
cdq
pushf
xchg
and
int3
jecxz
rol
jne
and
or
inc
fwait
sub
or
mov
es
mov
cmp
jl
mov
arpl
add
dec
xor
icebp
sbb
stos
push
add
add
push
dec
shl
jmp
cdq
fistp
(bad)
mov
or
ficom
mov
call
cwde
lahf
movs
add
call
jno
mov
ja
pop
not
test
sub
cwde
and
dec
xchg
cmp
or
inc
aad
clc
icebp
js
rcr
and
add
cwde
cmp
mov
popf
cmp
mov
in
cmc
xchg
adc
pop
frstor
sahf
rcl
std
in
jmp
daa
iret
sbb
inc
inc
mov
mov
mov
mov
icebp
sbb
ss
(bad)
push
popa
or
or
inc
mov
nop
test
gs
add
sbb
add
and
sahf
pop
mov
adc
mov
or
in
test
sbb
jecxz
sar
in
xchg
popf
mov
das
iret
ret
mov
fwait
jne
test
out
sbb
mov
fnsave
stos
stos
dec
in
(bad)
pop
int
push
jnp
test
pop
pop
mov
ss
stos
mov
or
aad
fstp
arpl
mov
es
test
(bad)
jge
fisubr
scas
cs
lods
mov
jno
push
pop
call
mov
adc
and
jle
fdiv
fs
les
pmulhw
adc
pop
mov
xchg
lds
mov
mov
mul
mov
in
adc
sub
cld
jecxz
out
add
sub
mov
push
pop
push
test
daa
icebp
outs
jmp
jbe
dec
sbb
add
cmp
rcr
(bad)
inc
add
and
call
inc
mov
je
dec
(bad)
ret
mov
call
cmps
xchg
je
pop
xchg
call
fs
test
mov
cli
gs
sahf
mov
jo
sub
push
fwait
add
cmp
test
inc
dec
mov
dec
mov
mov
push
pop
in
jp
retf
mov
or
mov
or
sbb
xor
jl
nop
push
dec
mov
outs
mov
cdq
add
cmovns
inc
jmp
lahf
mul
(bad)
mov
sbb
fdiv
adc
and
mov
sbb
test
sbb
push
cld
cmc
in
daa
xchg
sbb
xor
inc
push
push
mov
sti
push
fadd
push
xor
sbb
neg
imul
push
add
imul
jmp
pop
mov
push
xchg
loop
add
cli
jg
movs
mov
jae
lds
call
aaa
imul
mov
lods
pop
clc
pop
pop
add
pop
mov
psllw
lods
inc
out
jnp
int3
jg
push
aas
ret
dec
add
(bad)
jecxz
mov
mov
pop
xchg
mov
jne
mov
and
pop
js
iret
cmps
sbb
jnp
mov
ins
mov
in
call
shl
mov
mov
sti
xchg
scas
and
rol
lods
mov
push
and
cli
lds
aas
pop
fbld
jp
dec
aaa
pusha
lahf
test
nop
sbb
iret
jl
fidivr
sbb
es
push
data16
mov
mov
(bad)
fs
js
mov
data16
xchg
stos
xor
fstp
cld
pusha
inc
pop
pushf
push
icebp
mov
mov
push
mov
in
test
inc
mov
xchg
jmp
xchg
fnstenv
push
iret
and
mov
retf
xor
jp
adc
mov
add
xchg
sub
or
shl
sbb
inc
or
xor
jl
mov
adc
dec
outs
xchg
mov
aaa
inc
and
aaa
(bad)
test
add
loopne
mov
mov
cmp
jg
lods
cwde
fmul
popa
pop
add
adc
sar
js
mov
adc
fcomip
cmc
jbe
xor
jnp
mov
jbe
jo
or
and
arpl
std
arpl
adc
adc
sbb
sub
sbb
mov
inc
lahf
mov
dec
sti
stos
mov
call
test
cld
test
inc
test
add
enter
push
mov
(bad)
adc
repz
jmp
push
lahf
cmps
push
mov
adc
or
aad
jg
sbb
add
aas
inc
and
ret
mov
jge
mov
movs
in
jns
add
add
inc
jnp
dec
dec
scas
adc
mov
(bad)
mov
fld
jne
xchg
scas
(bad)
aas
stos
ret
mov
cld
mov
scas
adc
push
lea
ins
jl
xchg
popf
and
mov
dec
call
stos
adc
sub
sbb
scas
push
inc
adc
mov
sbb
pop
out
adc
inc
cmc
add
sub
xchg
sub
push
pcmpeqb
xor
fadd
loopne
push
jb
push
hlt
mov
call
fisub
fucomp
sub
adc
int3
sar
mov
cmc
pop
add
dec
add
jne
call
jp
stos
xchg
retf
(bad)
sbb
int
mov
sbb
xor
inc
and
mov
mov
call
and
fstp
test
jg
push
loop
jmp
pop
mov
xchg
clc
mov
adc
bnd
call
es
xchg
lea
ja
dec
pop
cmp
xchg
lods
pop
int3
pop
cmp
jno
jne
push
add
mov
xchg
ret
retf
std
xor
cmps
adc
add
adc
pop
xchg
push
test
cmp
pop
es
pop
fucomi
xchg
add
push
pop
cdq
pop
xchg
xchg
pop
(bad)
fwait
addr16
(bad)
mov
fcomp
xor
mov
pop
iret
fdiv
mov
fcom
xor
push
call
mov
dec
sub
(bad)
mov
cli
pop
jmp
jno
inc
pop
xor
mov
cwde
jb
pop
inc
fsubr
mov
sbb
and
xor
(bad)
pushf
sbb
jg
cmps
mov
xchg
pop
retf
stos
add
test
mov
add
jge
movs
(bad)
icebp
add
mov
cmps
loop
dec
data16
(bad)
hlt
add
lods
push
fild
cmp
pushf
push
sub
retf
mov
les
out
and
hlt
cmp
sub
push
iret
jg
dec
dec
nop
jl
fst
cmp
out
stos
and
ja
inc
(bad)
call
retf
xchg
cmc
fst
mov
ss
popa
jle
(bad)
xchg
add
fstp
mov
fidivr
lods
pop
sti
inc
ror
in
aam
push
int
push
cs
or
scas
dec
and
mov
cdq
lods
add
int3
jl
out
add
jge
test
adc
mov
imul
push
lods
dec
jg
mov
(bad)
inc
mov
push
and
dec
mov
jmp
ss
mov
xchg
pop
cmc
mov
in
sbb
test
int
scas
fcmovbe
pop
dec
lahf
mov
ins
std
sub
rcl
iret
and
inc
pop
add
pop
push
jl
push
cs
cmps
sub
cld
(bad)
or
dec
mov
sbb
ficomp
fstp
stos
pop
inc
popf
lods
mov
and
cmp
fist
inc
pop
or
cmp
fwait
pop
push
aam
xchg
adc
js
sbb
sbb
adc
shl
scas
fsubr
dec
test
fmul
jg
shl
dec
std
xor
test
call
xor
pop
ja
shl
pop
rcr
fsubr
cmps
or
mov
data16
mov
gs
(bad)
xchg
inc
rcl
(bad)
add
fnstenv
test
mov
clc
jp
mov
xchg
daa
fwait
push
mov
jp
mov
mov
fstp
lea
sub
adc
in
inc
fisub
inc
add
jle
inc
inc
push
out
xchg
aam
cmp
ins
(bad)
repnz
xor
jne
mov
jle
test
xchg
sbb
test
fcmovne
sti
(bad)
cld
inc
call
ja
push
add
jae
mov
jno
mov
test
ins
scas
(bad)
fsubrp
xor
addr16
xchg
test
xchg
(bad)
es
mov
mov
add
loop
(bad)
pop
in
sbb
adc
mov
push
xchg
cdq
mov
loope
sub
and
dec
adc
cmp
add
adc
push
mov
mov
retf
sar
clc
sbb
lds
imul
add
test
movs
pop
not
xchg
pop
mov
not
inc
fcmovnu
xchg
lods
sar
cwde
out
fdivr
clc
pop
fidiv
cmp
cmps
je
imul
cmps
dec
in
ret
jnp
repz
push
inc
cmp
push
cmp
ds
adc
inc
xchg
cmps
sti
or
cmp
(bad)
loop
fwait
jmp
fld
inc
lds
or
je
xchg
jg
mul
mov
outs
addr16
sub
sar
mov
mov
fnsave
cs
mov
push
sub
or
xchg
sub
mov
inc
(bad)
push
ret
shl
imul
jb
xchg
setl
jg
fwait
inc
cmp
mov
ror
adc
sbb
mov
pop
mov
loop
(bad)
xchg
jno
out
(bad)
jp
inc
xchg
cli
mov
jns
fwait
xchg
and
fdivrp
aas
pop
mov
jmp
and
push
fnsave
dec
cli
arpl
jnp
ret
or
push
fld1
jns
sub
and
sub
jbe
push
in
pop
int
retf
popf
jg
mov
loope
xor
and
or
push
jnp
push
cwde
fst
test
mov
xchg
mov
inc
in
movs
test
imul
mov
shr
add
into
imul
jo
jnp
sub
and
pushf
mov
ins
repnz
(bad)
not
inc
pop
jmp
emms
jb
pop
mov
clc
adc
inc
mov
jns
mov
cwde
mov
dec
retf
mov
jns
das
cmc
mov
fwait
adc
or
xchg
jns
and
in
popf
cmps
sbb
rcl
es
cmc
mov
(bad)
dec
(bad)
test
shr
ja
cmp
push
or
(bad)
dec
std
(bad)
jp
shl
cmp
push
xchg
or
xor
or
sbb
test
xor
fs
idiv
cwde
pop
inc
dec
mov
mov
je
xchg
pop
pop
cli
fild
cld
xchg
cmp
mov
cmp
bound
scas
dec
cmp
hlt
fmul
inc
frstor
inc
sbb
test
dec
gs
cmp
mov
cmp
push
std
adc
ss
and
scas
pop
dec
xchg
mov
inc
call
sub
aam
ds
gs
cwde
dec
fcom
test
mov
scas
jne
pusha
mov
ja
and
xchg
(bad)
jmp
mov
adc
aad
into
daa
imul
jnp
push
jle
or
(bad)
sub
push
sbb
xor
add
sbb
popa
pop
test
stos
cmp
fmul
scas
mov
cmc
sbb
mov
cmp
mov
adc
in
shr
les
mov
jmp
mov
mov
jb
jnp
cmp
inc
mov
stos
and
inc
jns
arpl
inc
and
pushf
les
mov
xchg
idiv
dec
inc
stc
cmp
addr16
arpl
arpl
outs
cmp
xor
jno
rol
jmp
jne
mov
cmp
mov
jg
mov
sub
(bad)
jnp
jp
stos
(bad)
ror
sbb
and
rcl
test
push
out
sbb
or
(bad)
cld
jl
adc
cmp
or
stos
inc
pop
pop
mov
scas
mov
or
jp
in
and
cmp
inc
sub
sub
add
pop
pop
cmps
add
imul
mov
mov
sub
je
fadd
xor
mov
sbb
jmp
mov
cmp
mov
mov
mov
cld
push
inc
or
rcl
jbe
add
dec
cmps
or
pop
jae
xchg
mov
pop
lahf
aam
xchg
aam
imul
jb
(bad)
cmc
push
xchg
adc
lahf
cmps
(bad)
and
xor
div
dec
bound
popa
lock
mov
movs
pop
add
std
xor
pusha
cmps
test
pop
cwde
xchg
mov
mov
cdq
cwde
ins
xchg
das
fistp
and
es
sub
sbb
mov
jge
mov
push
stc
clc
cmp
dec
sub
inc
pop
imul
lea
xor
pop
sbb
inc
xchg
mov
jb
jmp
xor
adc
les
mov
xor
pusha
test
mov
push
sub
stos
fcomp
pop
sbb
dec
pop
adc
(bad)
push
lds
or
(bad)
imul
mov
inc
fistp
fidivr
add
cmp
mov
shl
pop
inc
fcomp
xlat
sbb
and
pusha
fsubr
js
dec
pusha
and
pop
in
fiadd
test
aam
mov
movs
mov
sbb
mov
loope
pop
xchg
scas
dec
ret
jne
pop
push
xor
aad
jb
add
sbb
(bad)
pop
adc
xchg
mov
bound
jle
popa
xor
inc
jae
sub
adc
jne
mov
call
xchg
loop
jmp
jl
mov
mov
xchg
cwde
arpl
ret
sub
xor
adc
(bad)
mov
jmp
inc
call
imul
daa
pushf
sbb
outs
inc
jle
cmp
popa
in
mov
mov
and
pop
adc
sub
inc
push
pop
and
ss
lods
fsub
cld
mov
cmp
dec
popa
mov
xor
mov
sbb
fild
mov
pop
inc
loopne
div
inc
mov
mov
ins
xchg
sub
sbb
jae
cs
adc
cmps
jnp
pop
lods
mov
in
push
push
movs
aad
inc
or
fcomp
pshufw
mov
jns
push
call
push
jp
fsubr
inc
enter
pop
push
push
popf
cs
add
mov
sub
(bad)
test
rol
cdq
mov
pop
in
out
outs
sub
sar
mov
repz
pop
push
jmp
test
or
arpl
xchg
push
in
(bad)
add
jecxz
ja
pop
fiadd
mov
xchg
cmp
inc
adc
jno
mov
inc
xchg
jmp
inc
outs
push
xchg
fst
or
movs
jno
(bad)
out
sbb
jp
in
in
adc
jnp
scas
xchg
stos
xor
pop
movs
aam
pop
ins
mov
ins
fsubr
mov
outs
sahf
push
inc
dec
mov
sub
enter
inc
iret
mov
lds
mov
push
xchg
sbb
jbe
imul
xor
fwait
mov
clc
test
jg
jl
gs
inc
cli
ret
jmp
mov
popf
and
addr16
scas
repnz
mov
das
mov
movs
out
repz
mov
sub
std
ds
add
xor
sbb
mov
call
ret
cli
inc
pop
or
(bad)
es
pop
mov
in
sbb
pop
nop
mov
cmp
stc
test
mov
inc
lds
mov
xlat
inc
movs
mov
inc
ret
ss
call
test
sar
sbb
imul
div
dec
test
in
jle
mov
sbb
iret
clc
test
aaa
pop
sar
addr16
mov
xchg
enter
scas
imul
sbb
pusha
and
aaa
cmp
xchg
pop
retf
or
sbb
xchg
clts
mov
cdq
imul
and
in
sahf
pop
xor
test
push
xchg
jbe
xchg
jecxz
jecxz
test
std
cwde
pop
cmp
jmp
cs
sbb
sti
call
xor
icebp
cdq
jl
popf
and
stc
sub
sub
lock
jb
inc
push
and
pop
outs
push
std
sub
mov
pop
shr
(bad)
and
ficom
dec
inc
int
sub
xor
mov
pushf
add
addr16
mov
jns
mov
arpl
push
ins
loope
jmp
icebp
jl
inc
sub
mov
pop
daa
(bad)
icebp
cmps
jp
pop
repz
mov
ret
mov
ins
pop
lahf
scas
je
ss
(bad)
fs
jns
test
or
mov
mov
dec
mov
push
add
and
pop
and
jo
dec
inc
xchg
dec
add
cmp
movs
and
jo
mov
jecxz
call
mov
sub
lds
test
push
fwait
push
inc
xchg
fimul
(bad)
fisubr
push
cli
femms
xor
fisubr
sub
frstor
das
clc
outs
cmp
out
mov
push
repz
shr
jae
add
cmp
arpl
icebp
sbb
ja
xchg
cdq
mov
push
mov
pop
jl
push
nop
out
mov
jecxz
dec
(bad)
stos
xchg
jb
jge
cmp
mov
fucom
sbb
inc
adc
shr
sbb
or
addr16
imul
(bad)
xchg
sbb
pop
loop
or
and
add
inc
cmp
xor
arpl
jnp
shr
jp
rcr
(bad)
fcomp
clc
push
cmp
jo
in
adc
xchg
mov
jns
mov
xchg
shl
mov
sbb
dec
jecxz
jmp
xor
add
dec
das
lahf
imul
stos
xor
aad
xchg
leave
outs
push
push
mov
cmp
add
pop
xchg
pop
cmps
push
push
mov
add
ss
out
retf
fwait
aaa
mov
pop
daa
xchg
mov
jno
ret
nop
xchg
push
sub
hlt
lods
cmp
jns
sti
cmp
mov
repz
jmp
dec
jg
fimul
sub
int
idiv
ds
sub
mov
push
and
retf
xchg
scas
cmp
sar
inc
inc
cmp
bound
bound
adc
xchg
cmps
mov
fld
jno
pop
inc
pop
sahf
pop
in
(bad)
push
test
cmps
test
add
lock
jecxz
jp
(bad)
addr16
or
aaa
loop
ret
and
and
dec
daa
mov
lds
out
sbb
in
inc
data16
call
or
js
pushf
dec
pop
or
cwde
test
sbb
inc
jecxz
xchg
pop
pushf
hlt
fs
popw
inc
pushf
sub
mov
dec
mov
mov
and
ret
cld
cmp
sbb
(bad)
sbb
(bad)
test
cmc
aam
int
retf
daa
int3
in
std
push
pop
popf
push
sbb
inc
add
mov
mov
cs
data16
add
es
add
sub
xlat
adc
test
mov
ret
sbb
inc
sub
in
cmps
idiv
pop
mov
xchg
popf
test
dec
fsub
in
lahf
lock
sub
mov
fidiv
fnstenv
fldcw
inc
pop
add
popa
sti
dec
push
dec
mov
enter
stos
pop
(bad)
in
or
pop
loope
jae
ja
sahf
pop
mov
mov
add
ror
cld
in
mov
add
imul
mov
xor
fcom
mul
dec
cmps
mov
retf
mov
mov
add
repz
fidivr
dec
or
outs
data16
aaa
inc
jne
mov
clc
jge
sbb
mov
push
pop
fstp
or
aaa
mov
adc
pop
inc
mov
mov
arpl
xor
fsub
inc
jae
mov
fisubr
in
loope
pop
ss
movs
add
outs
repnz
out
rcr
and
xchg
mov
aaa
int3
dec
cli
pop
push
sub
fcomi
and
arpl
cmp
and
test
iret
pop
cmp
dec
in
adc
clc
jg
jnp
loope
push
or
push
out
inc
xchg
jle
dec
arpl
pop
xchg
pop
int
or
into
add
bound
mov
cmp
retf
cmps
jno
hlt
cli
lea
retf
mov
outs
mov
mov
xchg
fist
jecxz
jno
pop
out
sub
out
sub
aas
push
jns
test
addr16
xor
jae
xchg
mov
adc
enter
jns
(bad)
outs
push
inc
out
ins
add
popf
jbe
pop
adc
sahf
add
repz
adc
(bad)
jg
pop
jo
scas
imul
popf
pop
das
xchg
les
neg
mov
mov
leave
mov
cmp
loop
add
int
pop
pop
(bad)
enter
push
jp
fidiv
pop
stos
dec
daa
bound
sub
inc
cdq
ror
pop
or
xor
bound
adc
adc
and
nop
cmps
ins
cmp
pop
std
retf
xchg
dec
mov
push
aad
add
cmp
jmp
(bad)
aad
add
pop
mov
(bad)
jmp
mov
aam
mov
mov
add
xchg
or
and
inc
mov
(bad)
enter
out
fwait
int
xchg
into
push
push
popa
push
(bad)
inc
xor
xor
dec
inc
call
movs
mov
jecxz
sahf
and
jg
popa
not
push
mov
mov
lods
mov
push
mov
xchg
mov
adc
in
dec
stos
xchg
popa
jmp
fild
mov
pusha
cmp
stos
bound
push
mov
rol
lock
popa
inc
into
cmp
add
cmp
(bad)
arpl
(bad)
jns
ror
mov
popf
fbstp
rcr
mov
xor
mov
mov
xchg
jno
xchg
mov
inc
(bad)
hlt
loope
cmp
lods
push
pop
repz
jmp
mov
adc
std
gs
pop
lods
xchg
inc
fisttp
dec
jl
iret
xor
inc
push
or
ins
pop
mov
xor
mov
adc
mov
xchg
repnz
mov
popf
dec
ret
xchg
pop
aad
dec
psubusw
test
icebp
sbb
mov
inc
add
cli
sub
into
sar
push
fs
ins
outs
inc
test
test
stos
mov
(bad)
fadd
clc
dec
inc
sbb
adc
(bad)
out
pop
mov
cmc
dec
js
or
rcl
or
push
iret
out
mov
leave
push
dec
xor
fdivr
loope
inc
out
stos
jnp
(bad)
retf
fistp
push
mov
cmp
cmps
fmul
popa
pop
xchg
mov
push
aas
dec
xchg
clc
call
and
add
fist
gs
scas
ins
sub
mov
sbb
icebp
pop
xchg
gs
push
and
adc
inc
ins
sahf
push
repz
loope
adc
push
(bad)
icebp
out
mov
inc
ret
jo
ins
sar
lock
or
rol
popf
(bad)
aad
movs
pop
psubq
xchg
in
(bad)
test
cmp
idiv
aaa
add
outs
pop
(bad)
xor
mov
push
xchg
outs
imul
inc
sbb
pushaw
mov
push
mov
in
mov
hlt
pop
je
mov
dec
(bad)
jmp
(bad)
sar
test
add
(bad)
jmp
in
neg
scas
stos
push
lea
cmp
hlt
jnp
cmp
daa
inc
stos
sbb
mov
sbb
(bad)
int3
mov
or
sbb
retf
inc
sbb
xor
push
jbe
xchg
and
dec
stos
jno
xchg
bound
adc
retf
loop
iret
aad
sbb
mov
test
add
pop
and
aam
sub
jle
cmps
mov
cmp
not
inc
xchg
loope
cmc
hlt
pop
arpl
out
cmp
dec
shl
into
jp
xor
jo
xor
stos
cmp
mov
add
pop
xrelease
xchg
jge
dec
add
cmp
push
jae
mov
pop
dec
call
mov
adc
dec
fisubr
cmc
pop
pop
mov
jge
fstp
adc
push
xchg
test
dec
shr
mov
rol
mov
inc
call
adc
iret
jecxz
les
push
add
ss
daa
mov
retf
iret
int
and
mov
pop
jecxz
imul
cmp
add
add
dec
gs
adc
sahf
cmp
cs
imul
fadd
retf
push
push
fmul
popf
in
mov
mov
pop
rol
cmp
popa
test
mov
js
xchg
repz
xchg
cmc
mov
xor
sti
gs
xor
or
xor
jl
popf
mov
data16
pusha
jg
jmp
sbb
pop
mov
hlt
jae
ficomp
das
add
adc
in
adc
sti
push
loop
add
pop
clc
xchg
ret
dec
jecxz
jecxz
mul
mov
icebp
inc
mov
mov
mov
sbb
les
mov
ins
xchg
das
test
jl
dec
bound
jo
adc
cld
xor
dec
jmp
pop
iret
loop
mov
inc
mov
and
jo
test
push
xlat
add
xchg
sub
in
lods
shl
push
daa
mov
arpl
xchg
push
push
repnz
pushf
cmp
popa
xchg
mov
(bad)
and
sbb
mov
int3
in
retf
inc
pushf
pushf
inc
bnd
sub
or
idiv
imul
adc
dec
loopne
or
xchg
mov
scas
push
xchg
out
sbb
and
aaa
mov
retf
pusha
inc
scas
dec
cmp
dec
inc
xchg
test
in
xchg
cmp
push
cmps
dec
test
stos
jbe
mov
stos
adc
sbb
test
jecxz
xchg
add
dec
mov
sar
sub
fmul
sub
jbe
mov
outs
dec
mov
call
test
jns
int3
dec
dec
pop
aas
cmps
inc
or
add
fstp
fsubr
jns
cwde
add
or
not
fadd
jo
xor
nop
retf
dec
xchg
icebp
xchg
ret
add
xlat
pushf
xor
scas
shl
movs
icebp
sbb
xchg
mul
cmp
stos
lods
push
in
retf
dec
push
push
imul
scas
cmp
call
inc
test
add
inc
enter
ficomp
jl
out
xor
push
push
and
cmp
pop
fistp
cmp
dec
push
lods
mov
arpl
iret
loop
shl
(bad)
push
stos
push
sti
mov
cmp
add
idiv
mov
mov
dec
(bad)
imul
cs
xchg
retf
fst
icebp
sahf
inc
hlt
fs
fprem1
jle
push
pop
outs
call
jg
call
leave
nop
sbb
mov
pop
and
xchg
sub
fcomp
(bad)
dec
pop
out
fwait
mov
xor
cmp
test
dec
aad
push
dec
mov
inc
cmp
shl
(bad)
pop
jecxz
mov
mov
push
xchg
lds
mov
div
mov
fistp
cs
stc
stos
pop
in
inc
jle
lods
ss
test
daa
dec
mov
mov
pop
clc
ror
pushf
jecxz
arpl
retf
add
xor
test
and
mov
loop
jmp
inc
lods
je
mov
ds
xchg
inc
pop
lods
jae
outs
call
xchg
add
add
std
test
mov
cmp
repnz
call
imul
mov
inc
or
out
mov
add
fstp
mov
push
popaw
push
retf
dec
push
xor
pop
cwde
daa
rol
mov
push
mov
sbb
into
sahf
ds
in
ja
pusha
rsqrtps
mov
jne
cli
mov
mov
fisub
movs
mov
add
add
inc
mov
fisub
and
ror
pop
or
dec
cld
sub
mov
xchg
mov
not
mov
addr16
add
add
pop
add
xor
pop
jb
or
mov
inc
xchg
out
xchg
add
js
push
mov
inc
mov
mov
out
adc
icebp
dec
fimul
mov
dec
jecxz
imul
inc
(bad)
xor
pop
shr
jo
inc
cmp
rcr
out
out
push
cmps
shr
jne
stc
sub
sub
fcom
mov
addr16
shl
jmp
les
jl
push
icebp
xchg
lds
fdivr
test
xchg
pop
nop
fwait
mov
or
sbb
movs
rol
aad
jnp
mov
fs
mov
or
mov
jnp
sbb
sub
inc
test
pop
mov
pop
mov
fsubr
jg
shl
daa
out
cmp
sbb
ss
jae
add
sbb
in
mov
clc
icebp
loop
lahf
int
in
inc
inc
mov
mov
pop
call
xchg
pop
and
loopne
test
cdq
add
mov
mov
stos
mov
dec
daa
or
shr
pusha
mov
push
jg
je
popa
mov
sbb
dec
ret
leave
(bad)
sbb
inc
inc
fild
inc
add
dec
(bad)
pop
inc
mov
xchg
adc
jmp
jo
popa
js
mov
cli
iret
sar
loopne
popf
xchg
pop
or
mov
mov
outs
mov
mov
push
mov
add
or
retf
cmp
dec
mov
retf
data16
or
or
jno
push
and
xchg
mov
pop
cld
jmp
ins
pop
xor
cmp
dec
push
jae
nop
adc
das
adc
jg
stc
mov
sar
rol
xchg
sub
lahf
xlat
test
or
shl
ficomp
cwde
aad
fild
sahf
xchg
and
in
inc
scas
scas
inc
repnz
test
push
sbb
into
mov
and
jns
clc
push
sbb
xchg
shr
ret
and
jmp
aam
cmp
push
push
iret
and
adc
xchg
fwait
pop
ds
ds
aam
jmp
js
fadd
dec
jmp
fs
mov
test
mov
pop
xchg
cwde
xchg
fiadd
jl
test
mov
or
daa
fmulp
inc
sub
or
jg
push
or
mov
les
int3
jmp
sbb
sub
pop
test
stos
jns
cdq
inc
dec
stos
sub
xchg
iret
xchg
sbb
bound
pop
lds
popf
rol
sub
push
call
sbb
cdq
mov
mov
in
dec
xchg
fiadd
jbe
sub
into
(bad)
cld
es
pop
push
or
jns
aaa
aas
push
mov
mov
out
jle
out
inc
push
jno
aam
xor
das
xchg
sub
jle
rcl
lods
add
xchg
test
sub
cmps
mov
cmc
push
fs
pop
sbb
inc
retf
and
repz
mov
mov
fucom
stos
cmc
ret
out
mov
jne
inc
pop
adc
cli
inc
pop
jns
call
ins
mov
aaa
clc
arpl
push
dec
jno
fistp
sub
sub
cdq
add
movs
or
test
mov
(bad)
cld
popf
adc
push
js
jp
mov
mov
push
idiv
mov
neg
lahf
mov
sub
pusha
jl
(bad)
mov
xor
xchg
xchg
sahf
inc
(bad)
sub
mov
and
adc
sahf
xor
sahf
enter
sbb
cmc
add
add
aaa
and
bound
gs
jnp
lahf
sub
mov
lahf
icebp
stos
inc
mov
inc
mov
push
mov
xchg
je
jmp
and
xchg
pop
add
sahf
stos
lods
gs
fimul
mov
enter
fadd
cmp
or
mov
ja
mov
iret
cmp
fistp
out
jle
cld
add
and
and
mov
adc
adc
(bad)
xor
push
dec
(bad)
cld
mov
in
push
bound
pop
mov
mov
dec
(bad)
mov
fs
scas
push
jae
mov
mov
cld
dec
dec
stos
(bad)
dec
call
xlat
int3
js
adc
inc
mov
xor
pop
mov
xchg
mov
or
add
fsubr
pop
xor
dec
pop
pop
adc
lods
xor
and
mov
sub
out
xchg
add
mov
clc
dec
add
xchg
pop
loope
mov
push
out
stos
nop
jp
dec
mov
cmps
rcl
jns
mov
mov
nop
repz
adc
movs
jne
fs
or
shr
dec
ret
xor
cs
dec
push
imul
mov
loopne
jns
loopne
push
popa
xor
inc
sbb
addr16
jb
add
push
test
mov
in
test
in
cmp
mov
xchg
mov
rcl
jae
dec
xchg
test
les
mov
and
repnz
js
cmps
outs
rcl
xor
jecxz
fst
or
mov
xchg
test
stc
jns
(bad)
mov
xor
xor
adc
or
ror
add
jmp
pop
adc
shr
inc
sahf
mov
pop
pop
push
ror
out
cmp
imul
cmps
xchg
fsub
mov
iret
sbb
leave
xchg
popa
and
shl
pushf
pop
leave
imul
mov
daa
nop
push
pusha
jp
les
inc
sahf
jns
imul
mov
xor
in
pop
fucomi
jge
imul
mov
fsubr
inc
dec
scas
cmp
cli
or
and
icebp
popf
sbb
fld
pop
jge
fldcw
iret
lock
mov
test
pushf
pushf
dec
or
cli
mov
sti
mov
sbb
mov
and
stc
outs
inc
lods
mov
push
mov
cld
es
inc
jp
test
push
jg
push
pop
dec
test
xchg
mov
add
jg
jecxz
call
dec
ds
and
pop
fwait
ja
pusha
imul
sahf
nop
call
adc
cmp
out
sub
in
add
push
cdq
mov
lahf
inc
repz
aad
mul
push
xor
bound
ja
push
sub
jp
adc
cmp
stos
push
or
or
test
cwde
fmul
mov
pusha
adc
cmp
arpl
sub
and
dec
inc
nop
dec
or
mov
jmp
jecxz
fcomp
es
inc
call
and
xchg
sbb
sahf
push
out
mov
inc
(bad)
cmps
test
arpl
xchg
jo
xor
aad
fmul
cs
jo
xor
mov
enter
das
add
pop
pusha
pop
shl
push
adc
pop
(bad)
adc
or
lods
cmp
adc
in
mov
mov
inc
je
jge
sahf
hlt
push
mov
xchg
push
cwde
push
push
mov
xchg
sbb
sbb
xchg
outs
sbb
add
pop
mov
add
rcl
inc
sub
ins
push
inc
mov
sub
mov
mov
call
push
hlt
or
arpl
sub
push
push
mov
inc
in
clc
or
lods
mov
fwait
std
jg
pop
jge
call
mov
push
iret
clc
push
mov
cmps
pslld
mov
retf
xor
mov
push
xor
adc
(bad)
inc
iret
push
sub
mov
inc
sar
es
cs
add
(bad)
je
or
test
sbb
and
cmps
sbb
or
aad
aaa
pop
push
cmp
fst
mov
jg
arpl
(bad)
fmul
sar
pop
in
jecxz
sub
add
movs
push
xchg
mov
movups
jecxz
stc
(bad)
js
out
(bad)
call
fdiv
cmp
add
xor
push
cdq
mov
mov
loopne
jg
out
inc
push
xor
add
jmp
pushf
and
pop
arpl
add
push
inc
imul
ja
sbb
retf
jno
shl
cs
mov
mov
scas
imul
xchg
add
fiadd
dec
sahf
sahf
pop
int
lods
cmp
push
(bad)
jmp
shr
pop
loopne
cmp
xchg
fcomp
loop
or
mov
ds
sbb
nop
inc
sbb
push
scas
pushf
adc
inc
push
mov
arpl
mov
cmp
out
adc
mov
pop
mov
xor
leave
hlt
cmc
test
cmp
mov
dec
fld
xor
int
sbb
jp
pop
jg
cdq
bound
xchg
(bad)
xor
iret
dec
fsubrp
and
pop
fiadd
pop
inc
jge
xchg
pop
test
call
je
data16
adc
rcr
leave
in
test
dec
in
jge
mov
dec
in
test
mov
in
mov
xchg
jecxz
cmc
and
call
pop
jne
fldenv
jbe
invd
daa
nop
mov
inc
(bad)
imul
mov
mov
lods
push
shl
cmp
in
or
xor
pop
mov
mov
push
test
scas
sub
adc
cdq
das
xchg
(bad)
popa
bnd
popa
fst
add
cmp
lds
mov
dec
stos
ins
inc
mov
jmp
mov
sub
sub
sbb
add
daa
dec
daa
movs
jbe
inc
mov
push
out
imul
inc
je
sub
add
and
xor
xor
imul
jns
stos
stc
xor
clc
adc
push
fidiv
lahf
xor
cmps
clc
push
mov
mov
xchg
daa
ret
pop
mov
push
movs
mov
and
loop
stos
mov
ins
pop
out
call
ds
lock
ss
xchg
cmp
mov
jnp
movs
test
push
es
imul
aad
and
add
inc
call
add
cli
bound
inc
push
mov
out
jo
adc
ror
fwait
ins
in
jae
retf
jecxz
das
sti
ins
sti
mov
dec
xchg
loope
loope
pop
imul
mov
fldenv
inc
push
imul
mov
mov
inc
(bad)
pop
lahf
shr
mov
fs
dec
sbb
das
xchg
jae
sbb
ja
stos
xchg
dec
and
stc
xchg
inc
mov
add
pop
sbb
xchg
xchg
pop
fdivr
xchg
jb
sbb
loope
test
not
cmc
retf
dec
jle
(bad)
jb
dec
pop
adc
xchg
sti
imul
addr16
sbb
lods
cmp
setnp
lock
add
aad
dec
inc
sbb
jae
mov
pop
out
pop
jb
or
pushf
or
stos
xchg
adc
or
mov
sbb
push
daa
mov
pop
mov
cmps
pop
sub
shl
mov
pop
dec
mov
call
pop
inc
in
lea
lds
pop
int3
and
inc
mov
ins
cmp
mov
cmp
pop
repnz
and
sub
add
mov
pop
gs
je
fsincos
xor
xor
dec
mov
add
inc
icebp
ror
shr
hlt
das
xchg
sbb
scas
pop
mov
cli
(bad)
mov
hlt
pop
jne
lea
pop
leave
sub
adc
int3
mov
sub
fmul
pop
pop
cld
push
ss
call
cs
dec
jecxz
jns
mov
imul
cmp
adc
or
xchg
dec
inc
in
xchg
push
das
push
inc
fisubr
jl
push
sbb
mov
cmps
fcomp
sar
(bad)
frndint
jo
pop
nop
(bad)
shr
cdq
ror
repnz
inc
dec
xchg
scas
xor
jbe
or
or
push
cmp
mov
jne
ins
xchg
ror
loop
mov
les
mov
retf
xor
sub
sub
outs
in
cmc
fwait
xor
jle
xchg
sbb
jg
out
das
(bad)
cmc
xchg
add
push
mov
scas
mov
cmps
dec
push
mov
(bad)
fbstp
or
sbb
jmp
loopne
in
add
inc
lahf
or
test
mov
jmp
gs
pop
inc
fldenv
cmp
add
dec
adc
inc
movs
add
leave
mov
jecxz
inc
push
stos
jle
cdq
fsub
and
push
rol
repz
imul
xchg
xchg
or
iret
cmp
dec
aad
and
xchg
(bad)
sti
pop
ror
(bad)
fisub
dec
mov
out
fs
retf
and
and
cmp
jne
imul
scas
mov
shl
adc
inc
pop
movs
jo
mov
test
pushf
add
sbb
popa
lock
gs
sbb
xchg
rol
pop
ja
mov
test
add
cmc
xlat
clc
pop
retf
sbb
cmp
bound
scas
nop
cmps
mov
jmp
push
push
add
inc
pop
dec
xor
mov
cmpxchg
lods
push
adc
(bad)
sbb
add
stos
xchg
xor
clc
jnp
inc
gs
mov
cmp
xchg
inc
push
not
xchg
or
outs
mov
mov
js
xchg
sub
cmp
pop
mov
jnp
je
adc
adc
jmp
imul
or
push
cdq
xor
mov
pop
fcomip
or
retf
pop
jbe
add
paddusw
push
sub
sub
adc
in
pop
xchg
lea
dec
and
test
js
jmp
aad
lea
int3
imul
stos
xchg
rcr
loop
pop
dec
icebp
mov
sub
cld
in
fldenv
push
or
fst
pop
and
dec
push
je
mov
lock
loop
mov
ds
add
push
int3
ins
lock
jbe
mov
inc
cdq
mov
or
sub
int3
shl
sti
adc
jmp
clc
popa
jmp
mov
pushf
daa
aad
lods
stc
mov
ja
shl
das
stc
hlt
mov
xchg
push
fld
leave
push
and
jg
inc
push
jge
lods
sub
stos
pop
add
stos
stos
mov
ds
dec
loope
jle
fiadd
push
and
or
sbb
outs
jmp
test
add
das
mov
add
dec
popf
xchg
(bad)
pop
add
adc
movs
xchg
adc
(bad)
fsubr
das
nop
dec
jge
mov
test
je
dec
out
sbb
ret
ror
inc
xchg
jg
pop
test
stc
push
and
mov
fild
imul
daa
xor
add
cmp
xor
push
ja
adc
test
pop
cld
retf
scas
repz
jnp
jnp
pop
mov
sti
pop
mov
mov
fwait
jg
(bad)
xchg
das
aam
icebp
mov
dec
sbb
fiadd
jg
cwde
xor
fs
xor
not
jmp
ret
xor
xor
and
call
push
mov
bound
xor
aas
mov
retf
imul
sub
mov
loopne
mov
xchg
call
inc
fdiv
fcomp
push
cmc
cmc
xchg
or
popa
lods
scas
mov
inc
stos
pop
bound
hlt
ror
mov
pop
fnstcw
call
add
push
mov
mov
jmp
(bad)
cli
add
pop
add
sbb
pop
adc
xchg
cmp
scas
or
ds
xlat
mov
sbb
inc
xchg
jmp
pop
pop
pop
lahf
imul
shl
(bad)
iret
pop
fwait
imul
add
xchg
mov
push
int3
shl
xchg
dec
retf
jp
adc
adc
(bad)
stos
push
out
cmp
aas
jl
xor
xchg
mov
and
(bad)
rol
push
push
add
and
and
jmp
mov
dec
push
jb
popf
dec
pop
mov
lea
add
cld
mov
aad
je
cmps
dec
fcom
ja
xchg
push
or
loope
xchg
jecxz
std
adc
loope
xchg
mov
gs
mov
dec
xchg
jbe
or
fnstsw
inc
add
dec
xchg
cmp
jb
ss
mov
or
imul
or
aas
fisubr
xor
adc
setle
outs
adc
push
xchg
aam
ss
ins
lahf
retf
shl
jp
inc
dec
inc
ficomp
scas
aad
pushf
mov
jl
repnz
mov
mov
jp
mov
ret
out
loop
sbb
cmp
icebp
dec
add
push
enter
jnp
movd
outs
sbb
jmp
pop
lds
dec
pop
daa
aad
gs
and
(bad)
ins
sar
mov
sub
cdq
aaa
aaa
push
js
icebp
xchg
add
sti
gs
sbb
mov
(bad)
mov
mov
push
xlat
in
xor
test
popa
xchg
mov
push
adc
leave
mov
sar
mov
xor
ror
jle
sub
jne
inc
lea
pop
mov
lods
test
fwait
leave
xor
inc
iret
ds
sbb
push
dec
cdq
jp
mov
clc
sbb
es
shl
jmp
pop
lock
loope
cmp
xchg
fidiv
in
imul
mov
repnz
push
aad
xchg
jecxz
xor
mov
adc
ror
sub
and
sub
sub
mov
jp
(bad)
cmp
push
in
add
add
cdq
dec
sbb
das
add
xchg
sahf
sbb
dec
pusha
(bad)
frstor
shr
mov
push
mov
adc
xchg
pop
push
sar
mov
cli
bound
fstp
loop
mov
das
iret
repnz
mov
xchg
mov
or
stc
push
jmp
bound
xor
adc
or
js
sar
mov
sbb
inc
aas
outs
aaa
stos
pop
mov
xchg
ins
push
xchg
sbb
cwde
std
sub
out
ror
jb
pop
and
fstp
mov
adc
jmp
fisubr
cwde
and
sti
in
test
dec
data16
xor
xor
int
and
pop
jne
jl
pop
pop
dec
cld
push
push
push
mov
xor
(bad)
inc
cwde
in
jg
shl
or
fdiv
gs
adc
mov
lahf
or
sbb
pop
es
pop
mov
call
test
(bad)
jno
pop
outs
data16
shl
mov
or
loop
and
xchg
mov
js
lods
sahf
repnz
fcmovu
movs
hlt
repz
add
in
pop
cld
adc
dec
fwait
pop
push
and
inc
sahf
aaa
sub
retf
cwde
mov
jmp
iret
push
mov
adc
aaa
push
or
xchg
cmp
push
xor
sbb
xchg
scas
add
ds
cmps
sub
retf
js
pop
or
fbstp
test
mov
adc
stc
repz
ins
mov
inc
push
cmp
jo
mov
jo
inc
fisttp
sbb
clc
cmp
jle
adc
or
mov
mov
sub
addr16
out
sbb
(bad)
jnp
inc
sbb
das
pusha
cmp
aad
inc
mov
mov
push
addr16
mov
ficom
pop
fiadd
mov
dec
mov
cmps
dec
retf
xchg
inc
adc
(bad)
dec
xchg
mov
pop
ja
mov
aam
neg
sub
jno
or
sbb
out
and
add
or
mov
push
pop
mov
xlat
je
add
ins
addr16
cmps
inc
cmp
and
inc
jno
outs
inc
popf
cmp
mov
imul
shl
sbb
xchg
jmp
inc
into
xchg
cli
xlat
xchg
cmp
idiv
push
arpl
aad
jne
stos
jbe
sub
cmp
sub
mov
fs
or
inc
cdq
inc
or
sbb
in
div
mov
cmp
or
jo
xor
imul
and
sub
cs
adc
mov
mov
fidiv
scas
enter
mov
push
in
mov
stos
mov
ins
test
repz
sbb
and
adc
rol
push
aas
inc
call
inc
mov
into
scas
xor
lock
add
add
push
push
adc
ins
inc
cmp
aam
outs
cmp
outs
(bad)
lods
jecxz
mov
sbb
je
inc
mov
and
std
xchg
jne
jecxz
sub
ficomp
mov
pop
sbb
jmp
test
ins
(bad)
outs
fldenv
aam
(bad)
sbb
or
imul
inc
dec
jmp
cmp
dec
int3
loop
mov
push
ret
inc
ins
sbb
pop
popf
sub
test
sbb
sysenter
push
cmp
mov
pop
jmp
jno
pushf
mul
cdq
icebp
mov
retf
or
(bad)
mov
rol
cmps
test
das
mov
mov
adc
fsubr
in
mov
loopne
out
and
(bad)
leave
int
lahf
and
cmp
cmp
mov
mov
sti
addr16
xchg
pop
adc
and
dec
cmp
add
jg
fimul
retf
lea
dec
retf
inc
mov
inc
hlt
pop
jg
cwde
push
mov
pop
sub
sar
xchg
scas
sbb
pop
add
rcr
scas
mov
test
out
inc
or
repz
jg
dec
fwait
outs
pop
and
call
mov
xchg
push
dec
popa
pop
jmp
fs
sar
pop
push
mov
add
movs
popf
push
and
inc
cli
sar
fld
outs
mov
shl
mov
adc
jnp
mov
add
aad
test
aad
call
aad
and
push
add
dec
and
adc
call
push
sbb
ss
add
sbb
xor
sub
(bad)
mov
xor
addr16
cdq
inc
nop
ret
inc
push
popa
mov
addr16
aad
push
mul
mov
inc
not
gs
scas
cmps
hlt
add
rcr
ret
xchg
mov
das
cmp
fmul
stc
inc
inc
push
jns
mov
jnp
xor
jb
ret
xor
jmp
push
addr16
sbb
pop
add
jb
mov
inc
push
fistp
scas
sbb
out
test
push
cmp
neg
test
inc
mov
push
mov
mov
cmps
sub
push
lea
inc
pop
xchg
or
std
std
jg
cmc
mov
dec
sbb
inc
sahf
adc
cmp
mov
dec
mov
xchg
mov
jmp
sahf
in
add
add
sub
push
mov
mov
rcr
mov
inc
mov
cwd
fmul
out
inc
jg
push
inc
test
fstp
mov
neg
jnp
mov
lock
lock
imul
sub
cmp
fld
or
push
pusha
daa
xchg
jno
mov
not
shl
rcl
cmp
and
scas
bswap
pop
in
dec
jns
inc
xor
fwait
and
and
leave
in
push
sahf
fistp
add
mov
popa
sti
jmp
adc
rcr
lods
fcmovb
pop
fld
movs
rol
rcl
imul
or
add
(bad)
ds
dec
sbb
mov
dec
mov
lahf
or
leave
dec
out
mov
call
inc
aas
or
adc
inc
stos
jbe
arpl
push
add
test
in
fild
aad
jo
mov
fdiv
ins
jecxz
xchg
outs
jmp
movs
mov
mov
aam
cdq
pop
push
popf
mov
xor
(bad)
div
test
cmc
mov
unpckhps
shl
jle
popa
fwait
sbb
jne
fs
pusha
cmps
retf
cwde
mov
push
lods
inc
fwait
jecxz
cwde
leave
pop
dec
pusha
sbb
daa
nop
and
lahf
jo
xlat
movs
lea
retf
int
sbb
inc
and
pop
test
adc
nop
or
mov
mov
(bad)
(bad)
dec
cmps
dec
push
(bad)
mov
jmp
sbb
dec
lock
adc
in
pop
icebp
pop
push
sub
mov
pop
je
jae
adc
push
in
sahf
mul
(bad)
pusha
inc
add
mov
xor
pop
mov
inc
mov
push
mov
popf
xor
cmp
test
xor
jg
push
cmc
xchg
and
in
jecxz
aam
jge
icebp
push
cs
pop
cmp
xchg
push
inc
loop
xchg
xlat
pusha
push
xchg
popf
dec
retf
mov
(bad)
lock
add
outs
mov
push
cmp
mov
mul
enter
pop
or
mov
sub
es
add
lods
inc
or
stc
sub
inc
(bad)
shr
ficomp
inc
lds
xchg
ret
pusha
mov
fwait
dec
shl
push
icebp
mov
cmc
scas
mov
js
and
add
mov
push
push
push
mov
fnstcw
and
data16
aas
jbe
in
sub
mov
mov
sub
not
int3
(bad)
sbb
ja
out
adc
adc
or
cmp
and
cmps
lahf
push
icebp
in
into
cmp
popa
inc
cmp
test
(bad)
loopne
in
push
push
enter
in
ins
mov
sahf
popa
push
lahf
mov
add
into
retf
jnp
scas
fisubr
jo
dec
pop
adc
mov
ja
xor
aas
inc
jg
outs
or
cmc
popf
cwde
int
cmp
or
sub
ss
mov
out
push
sahf
outs
pop
xchg
cmp
push
pop
out
fwait
dec
(bad)
std
jnp
pusha
jp
mov
inc
movs
ret
(bad)
loope
adc
push
movs
popf
mov
pop
test
imul
mov
into
cmp
inc
fucomip
jmp
cmp
mov
push
sub
shr
jno
lea
jb
loop
cmp
cmp
jg
dec
adc
das
jns
xchg
lods
push
and
dec
lahf
cmc
mov
shl
leave
dec
popa
push
cdq
push
call
movs
jle
(bad)
sti
mov
xchg
scas
ret
adc
mov
cmp
(bad)
not
sar
stos
imul
int
push
dec
icebp
in
ret
jle
add
ds
mov
sbb
out
push
mov
pusha
pop
inc
push
mov
cmp
cmc
push
mov
fild
xchg
adc
shl
add
and
add
push
jno
js
mov
push
jmp
addr16
js
(bad)
mov
out
add
xchg
dec
ins
inc
jmp
push
jecxz
je
and
sbb
jmp
push
pop
sbb
and
shl
fdivp
xor
inc
mov
adc
add
adc
pop
lods
inc
push
or
in
scas
xor
xor
icebp
stos
sbb
je
mov
cmps
enter
mov
push
iret
jmp
sub
ja
mov
leave
or
hlt
sub
fadd
xchg
dec
fcom
cmp
ds
push
js
lods
sbb
cmps
inc
pop
dec
in
nop
mov
mov
rol
dec
mov
sub
push
loop
mov
xchg
push
and
lea
inc
and
scas
sahf
adc
jge
mov
bound
sbb
int
lock
pop
push
sahf
call
lods
mov
mov
stc
sbb
lods
data16
xor
jae
push
js
xchg
jl
mov
call
jge
and
sbb
and
cmp
or
inc
jno
pop
sub
lea
add
pop
sti
hlt
mov
ret
popa
jl
movs
dec
in
les
cmps
dec
cmc
mov
popf
or
dec
mov
xchg
pusha
push
jmp
mov
cli
inc
jne
mov
inc
mov
push
adc
(bad)
retf
jl
adc
pop
cmps
pop
dec
push
xchg
jno
cmps
stos
xchg
sbb
sub
pop
mov
adc
pop
lahf
or
pop
inc
cdq
outs
inc
lods
das
jp
xchg
sti
adc
push
jb
test
imul
add
das
jmp
rcl
inc
sbb
push
scas
add
xchg
mov
pmaxub
nop
out
sar
mov
test
sub
inc
pop
sbb
jno
inc
mov
jl
xchg
xchg
or
(bad)
cmp
push
mov
cmp
jb
lods
dec
sbb
aad
outs
add
outs
(bad)
in
mov
jecxz
push
push
mov
dec
mov
mov
cmp
(bad)
popf
xor
inc
mov
sbb
xchg
add
jmp
mov
push
pop
sbb
retf
jg
test
pop
and
ins
xor
lahf
adc
aad
test
in
or
push
xchg
or
and
test
retf
adc
sbb
and
inc
mov
cdq
dec
rcr
lahf
sbb
push
repz
push
mov
(bad)
sbb
js
mov
push
cs
out
and
cmp
sbb
inc
pop
xchg
test
xchg
shl
sbb
or
inc
push
and
push
outs
xchg
mov
jno
shl
(bad)
loop
xchg
lock
push
addr16
ret
sar
mov
out
out
add
jmp
icebp
adc
fs
xchg
xchg
cmp
jmp
inc
jnp
mov
fwait
push
in
or
adc
cmp
packssdw
inc
or
iret
dec
cs
sar
fisub
or
mov
fs
das
mov
dec
jne
(bad)
popf
push
jge
(bad)
stos
ds
xor
sar
(bad)
sbb
outs
rol
jecxz
jl
aam
lea
retf
pop
repnz
jns
les
mov
mov
sbb
adc
cmc
aam
into
sbb
fist
adc
pop
test
out
sbb
cmc
add
pop
and
aas
or
es
or
push
xor
cmp
adc
mul
cmp
test
jae
popf
jnp
call
rcl
jne
jle
mov
pop
pop
out
mov
cmp
xchg
mov
add
jecxz
fst
sub
mov
mov
ror
pop
call
xchg
jae
jb
in
outs
or
add
sbb
inc
pop
mov
push
test
xchg
and
xchg
xor
pop
jnp
jbe
into
ret
dec
mov
mov
lahf
and
inc
movs
call
mov
mov
and
fnstenv
mov
leave
or
leave
push
outs
call
ins
in
retf
lds
clc
lea
push
add
push
adc
or
inc
push
scas
pop
push
stos
pop
outs
lods
mov
xor
mov
cs
pop
and
mov
retf
pushf
cdq
push
dec
lds
lods
pushf
mov
aaa
fstp
mov
or
scas
imul
or
mov
ds
sub
jge
jns
(bad)
out
fwait
mov
les
stc
cmpps
inc
je
stc
xor
bound
es
xchg
push
jmp
push
sbb
popf
push
add
test
cwde
clc
push
hlt
pusha
gs
dec
std
mov
mov
and
pop
test
jnp
lahf
mov
leave
mov
jmp
aaa
sub
ds
cmp
or
cmp
and
in
cmp
imul
mov
bnd
movs
push
test
cmp
into
shl
sbb
lahf
and
(bad)
sti
mov
jne
xor
(bad)
idiv
cli
pop
mov
js
push
mov
loopne
sbb
mov
cmp
fld
push
inc
mov
jno
jno
xchg
mov
fmulp
movsx
sbb
sbb
pushfw
pop
xchg
adc
ins
adc
or
lods
sub
retf
pop
adc
sti
mov
scas
call
mov
cmps
enter
pushf
jge
cdq
pop
ss
ret
movs
pslld
test
sbb
and
fidiv
jecxz
outs
jecxz
out
cmp
out
jmp
inc
sbb
xor
jp
dec
push
ins
mov
rol
nop
add
loope
jae
adc
jno
mov
sbb
mov
lea
adc
stc
mov
rcr
test
push
push
cmps
imul
rcr
mov
clc
dec
cmp
pop
mov
fs
fwait
test
xor
ffreep
out
neg
je
je
ds
ss
addr16
sbb
sub
and
gs
cmp
pop
cmps
mov
icebp
push
fiadd
ins
add
(bad)
or
inc
adc
mov
sbb
jb
fcom
jge
xchg
sti
xor
lahf
sbb
sub
jl
mov
aas
mov
xchg
push
(bad)
mov
out
or
xchg
lock
cld
adc
lock
scas
sti
aas
inc
mov
inc
call
mov
ja
sbb
outs
mov
outs
pusha
mov
cmps
cmps
cmps
mov
cwde
int
call
push
ins
pop
and
push
mov
inc
mov
xor
test
xor
pop
cmp
lods
test
retf
inc
retf
pop
mov
jno
retf
repnz
xchg
add
fcompp
adc
mov
nop
test
pop
sbb
out
pop
dec
(bad)
cli
idiv
or
pop
pop
dec
lahf
inc
or
mov
int
sysret
iret
jl
sbb
fimul
outs
jg
ret
push
getsec
mov
ins
jbe
imul
test
scas
add
cmp
in
pushf
pop
sbb
ror
jge
and
mov
jae
out
mov
cs
mov
dec
sti
mov
push
pop
loope
mov
(bad)
out
ret
ja
jg
pop
sub
xchg
shr
pop
ds
adc
push
lods
inc
sbb
xchg
cdq
xor
frstor
jmp
inc
dec
cmp
adc
or
cmp
das
lods
jle
imul
or
adc
test
enter
pushf
int3
gs
fs
jno
sub
in
xchg
inc
jmp
(bad)
stc
mov
sub
mov
std
stos
int
inc
data16
retf
sub
jmp
inc
in
bound
bound
jnp
push
mov
iret
xchg
sub
xlat
pop
out
sbb
retf
pop
mulps
mov
pop
std
pusha
dec
xor
into
lods
and
(bad)
cmps
and
dec
add
mov
push
lahf
scas
mov
sbb
fstp
xchg
test
adc
test
mov
mov
int
and
fsubp
lods
popa
lock
das
bound
jne
popa
xchg
ret
xor
(bad)
pop
ror
ins
push
dec
(bad)
inc
push
xor
jmp
(bad)
dec
aaa
lods
push
outs
lahf
mov
add
push
dec
out
mov
std
pop
jl
fsubr
mov
jmp
add
std
mov
lds
cdq
scas
hlt
dec
xchg
xchg
rol
test
cmp
mov
fs
es
push
jl
mov
mov
ror
mov
and
and
xchg
pop
mov
repnz
dec
scas
push
or
test
sqrtps
cli
movs
cmp
add
cmps
retf
jl
call
xor
ja
mov
in
mov
dec
xchg
mov
inc
sbb
inc
in
sbb
add
arpl
sahf
push
sub
lods
and
into
sbb
std
sbb
rol
cmp
add
dec
inc
ret
test
js
mov
or
jmp
ins
inc
inc
shl
cli
dec
mov
mov
test
mov
pop
xchg
mov
adc
ret
div
push
pop
scas
adc
sar
pop
pop
shl
loop
shl
push
or
push
test
cdq
lds
sbb
mov
bnd
imul
or
cmp
xchg
dec
aas
mov
inc
mov
and
jmp
inc
hlt
bound
lahf
pusha
jmp
mov
mov
mov
div
pop
call
outs
lods
(bad)
cmc
adc
iret
fadd
lods
test
jle
add
stos
push
sti
sbb
or
div
jne
ret
mov
sahf
jmp
pop
aam
outs
push
das
cmp
sbb
xchg
cmp
mov
push
inc
cwde
out
xchg
mov
add
pop
sbb
arpl
cmps
fadd
mov
imul
inc
cs
push
cdq
lahf
mov
jp
xchg
stos
add
retf
fxch
bound
lea
xchg
jns
adc
sbb
sti
jmp
push
xchg
je
jnp
pop
out
cdq
xchg
mov
xor
jl
sbb
pop
ja
sbb
or
call
mov
(bad)
call
jecxz
js
mov
scas
aad
test
and
or
fbld
neg
add
add
cmp
fidivr
jne
xor
fs
cmp
cmp
inc
mov
mov
sti
inc
int
add
sub
add
cmp
stos
pop
cwde
and
dec
adc
jae
aam
and
das
dec
jmp
test
arpl
bound
fwait
inc
sub
mov
mov
btr
jmp
fs
outs
sar
sbb
dec
sar
stc
pop
fiadd
add
cmp
push
inc
push
xchg
jo
push
xchg
fistp
fistp
fild
jg
dec
jmp
pop
mov
test
and
dec
pop
pop
and
test
add
mov
(bad)
scas
and
ins
lock
inc
adc
mul
inc
inc
xchg
rol
cli
mov
jecxz
jns
push
test
in
jnp
pop
jne
pop
rcr
sbb
jo
dec
jmp
cwde
xchg
add
int3
das
movs
lea
add
mov
cmp
dec
outs
pushf
adc
ror
inc
test
mov
call
xchg
push
mov
jns
jno
(bad)
leave
addr16
adc
lods
cmp
scas
pop
fstp
mov
enter
(bad)
pusha
sbb
cmc
adc
dec
(bad)
repz
xor
push
or
es
add
mov
into
imul
sbb
add
adc
cwde
sbb
test
fcom
push
sbb
push
jmp
out
push
daa
fidivr
cwde
aam
loop
mov
ret
push
test
adc
(bad)
adc
imul
xor
cmc
mov
mov
ins
imul
add
(bad)
js
add
cs
adc
jo
push
pop
or
retf
mov
dec
into
int3
add
inc
les
adc
add
inc
mov
push
(bad)
xchg
mov
loop
test
mov
pop
fidiv
jg
pusha
fldcw
pushf
dec
xchg
jmp
cmp
cld
test
xchg
inc
mov
inc
outs
mov
rol
repz
pop
mov
dec
aas
daa
cmp
push
rcl
aas
dec
mov
and
movs
retf
cmp
xor
push
mov
jl
or
adc
inc
xchg
nop
mov
cmp
inc
div
mov
loope
inc
ds
fcom
jmp
xor
jmp
stos
dec
jns
test
scas
loop
dec
inc
mov
ins
lds
adc
dec
fwait
dec
pop
ss
mov
dec
push
xor
push
out
fwait
stos
mov
in
adc
cmp
daa
sbb
push
cdq
inc
sahf
or
dec
pop
mov
and
stos
aas
push
or
iret
clc
mov
fsubr
and
inc
mov
mov
repnz
push
shr
jmp
mov
mov
mov
mov
mov
(bad)
sub
jb
adc
push
call
pop
jg
pop
xchg
pop
inc
pop
mov
retf
mov
inc
clc
loop
cmps
aam
ins
jg
cli
push
aaa
or
sbb
or
fst
in
mov
fsub
push
jecxz
pop
and
sar
in
mov
xchg
mov
mov
int
xchg
clc
xchg
push
mov
sahf
addr16
idiv
scas
lods
jo
inc
clc
daa
sub
neg
scas
inc
fisttp
pop
add
(bad)
jge
push
cmp
out
test
iret
cmp
fnstsw
fidivr
pop
ins
add
mov
sub
bound
js
movs
outs
cmps
xlat
sti
add
pop
int
mov
clc
pop
bound
sub
mov
xor
fbstp
movs
fcomip
inc
mov
mov
test
pop
std
xor
fld
inc
fimul
xor
(bad)
mov
(bad)
or
outs
gs
push
dec
mov
ficom
jecxz
xchg
sti
jbe
jg
mov
sub
sbb
jns
test
sti
adc
call
int3
int
std
jge
ds
dec
ffreep
ret
into
xchg
cmp
stc
mov
lods
fcmove
cmp
push
and
icebp
mov
(bad)
cmp
cdq
dec
repz
repz
cmp
retf
ja
movs
pop
pop
jle
ss
ret
mov
inc
iret
fidiv
mov
add
add
arpl
adc
adc
adc
stos
fwait
imul
mov
hlt
pop
push
inc
scas
jo
shl
jecxz
xchg
dec
fld
mov
push
xchg
scas
ffreep
xor
bound
xchg
mov
lods
iret
rcr
lods
pushf
push
call
aad
pop
stc
add
and
pop
dec
pop
adc
mov
push
cmc
pop
out
sbb
sbb
inc
aaa
pop
ja
mov
pusha
push
cmps
push
test
and
pop
(bad)
xor
xchg
sbb
push
inc
shr
aad
ficomp
int3
mov
jmp
adc
in
mov
dec
gs
test
cmp
scas
ja
push
out
add
std
out
sub
or
add
adc
lods
pop
pop
adc
sbb
push
loopne
or
jae
aad
ins
inc
sub
imul
es
dec
xchg
test
and
sub
inc
stos
into
imul
dec
xlat
fwait
loop
out
fwait
dec
xchg
mov
mov
lds
mov
ins
push
lods
mov
jmp
enter
mov
lods
xor
dec
(bad)
pusha
and
cs
cmp
test
mov
and
out
add
shl
push
ror
push
sbb
or
jno
xchg
dec
push
fwait
scas
(bad)
cs
or
aam
and
ror
adc
loopne
clc
and
mov
inc
xchg
mov
mov
in
cmps
clc
(bad)
hlt
cmp
xchg
and
inc
add
mov
jle
aaa
pop
and
jecxz
add
jbe
cli
xor
inc
mov
xchg
ret
adc
test
icebp
clc
sub
hlt
jae
add
fidiv
fs
and
xchg
shrd
jo
mov
ins
popf
stos
sti
(bad)
push
dec
hlt
fistp
jmp
cmps
and
mov
pop
(bad)
mov
mov
jmp
adc
lds
mov
sub
xor
sahf
pop
inc
push
aas
pushf
das
dec
je
inc
sub
(bad)
ins
ret
movs
std
popa
sbb
add
cs
mov
pop
test
push
stos
cmp
mov
cmp
in
add
adc
icebp
mov
cdq
jg
add
in
sub
pop
test
(bad)
imul
enter
cmc
ds
shl
push
push
idiv
fisubr
add
aas
pop
pop
test
lahf
cmp
sti
repz
shl
xor
push
(bad)
and
jg
adc
push
add
push
add
outs
in
mov
shr
test
js
cmc
xchg
jl
mov
mov
mov
inc
push
fwait
mov
and
mov
fwait
das
xlat
or
dec
iret
icebp
out
arpl
sbb
jnp
imul
mov
mov
dec
(bad)
cmc
es
jns
gs
mov
pop
xchg
and
inc
sahf
inc
sbb
das
pop
mov
pop
ins
lds
pop
hlt
dec
addr16
dec
fstp
cmps
arpl
lock
sbb
mov
jle
mov
retf
repz
in
pop
xchg
mov
call
xor
cld
into
push
shl
cmp
or
sub
mov
sbb
and
jne
ret
push
xor
mov
pushf
xor
pop
adc
push
mov
sbb
push
jae
shl
retf
pop
mov
bound
cmps
push
clc
(bad)
nop
xor
cwde
mov
inc
pop
mov
idiv
adc
in
pop
jmp
pop
push
cld
out
test
inc
jae
cmp
ins
sbb
sub
xchg
and
out
cwde
xlat
pop
mov
xor
xor
mov
dec
or
pop
add
movs
cmp
lods
mov
fcom
js
dec
out
std
jg
mov
pop
sub
xchg
dec
pop
cwde
mov
ds
rcl
xchg
cs
fadd
out
inc
cld
inc
jae
inc
lods
imul
or
into
cdq
sbb
ret
fisub
gs
retf
and
push
push
cmp
adc
jo
fstp
cmps
add
lods
call
dec
push
jb
leave
test
mov
pop
retf
je
pop
mov
cmp
mul
test
mov
or
mov
nop
cld
fcom
mov
ss
pop
(bad)
or
adc
into
(bad)
cmp
push
push
sub
ss
mov
retf
push
add
js
loope
mov
jle
add
daa
das
jns
cmp
outs
push
fdiv
mov
cmps
cmp
dec
(bad)
sbb
outs
pop
fcomp
lods
mov
inc
fld
sub
pop
pushf
mov
cmc
rcr
inc
push
fwait
mov
xor
push
shl
ror
js
aas
fnstenv
js
idiv
jne
mov
mov
shl
sar
sbb
push
jmp
jl
pop
retf
inc
ja
ins
rcl
mov
cmp
mov
dec
fbstp
shl
mov
cmps
push
pop
mov
(bad)
pop
stos
mov
jg
in
mov
sbb
shl
mov
cs
mov
scas
fs
inc
or
sahf
adc
or
fwait
mov
pop
es
pop
out
jg
mov
arpl
call
xor
push
jne
outs
and
sub
movs
cwde
cmp
xor
retf
leave
fist
inc
jo
cwde
jo
popf
call
dec
repz
pop
stc
enter
arpl
(bad)
mov
call
push
cmc
pop
scas
push
pop
push
xlat
fcmovbe
and
xor
jns
mov
imul
mov
cmps
xchg
sbb
int
xchg
nop
mov
inc
clc
add
jl
popfw
add
push
sbb
ds
mov
xchg
(bad)
mov
cwde
jp
dec
nop
je
test
pusha
mov
xchg
imul
inc
stos
add
lods
mov
loope
(bad)
ins
push
mov
sub
cmp
les
xor
pop
mov
lahf
retf
test
aaa
in
pop
(bad)
jecxz
xchg
(bad)
sbb
push
pop
(bad)
sbb
push
pop
popa
mov
test
out
outs
jns
push
stos
and
stos
fwait
mov
and
jle
in
add
pop
sub
pop
fsub
call
retf
lods
sub
sbb
sbb
cmp
xchg
addr16
aam
int3
in
outs
out
stos
xor
dec
cli
and
mov
fld
inc
sbb
add
fs
lds
ins
sahf
(bad)
jg
enter
adc
and
add
push
scas
dec
xor
stc
xor
into
mov
enter
pop
jo
ficom
mov
xchg
push
nop
inc
pop
repnz
sub
cld
mov
pop
lods
cmps
nop
js
(bad)
stc
fild
popa
call
into
lods
push
imul
or
fwait
mov
lock
fcomi
sbb
cmp
xor
pop
or
xchg
inc
xor
inc
mov
sbb
add
lods
cmps
and
outs
push
xchg
stc
popf
neg
repnz
rcl
and
dec
cdq
xchg
test
jne
mov
not
xchg
mov
fs
and
jecxz
into
and
mov
xor
push
mov
xchg
test
sub
push
fdiv
ja
clc
ss
jo
bound
push
pop
movs
jbe
mov
lea
add
push
mov
jl
mov
movs
aad
mov
jmp
and
fs
lahf
out
mov
lea
xor
loopne
fld
dec
ret
jnp
push
sub
cmp
cmp
mov
gs
outs
out
call
xlat
add
cmp
add
inc
pop
push
mov
pusha
adc
push
ss
lods
or
or
clc
out
or
mov
push
mov
in
out
mov
mov
stos
mov
sar
addr16
sahf
pushf
xchg
add
(bad)
out
stc
fistp
xchg
pushf
jne
push
leave
xor
dec
mov
jg
xor
xor
test
or
retf
cmp
pop
ret
mov
add
sub
add
pop
fs
jl
xchg
sub
sbb
sahf
scas
mov
cwde
inc
jno
mov
ins
mov
jmp
adc
enter
dec
mov
mov
mov
inc
xlat
mul
fnsave
lock
rcl
push
(bad)
neg
pop
fistp
dec
cmp
sub
sahf
xor
or
ss
cmps
arpl
sar
fucomi
pop
inc
push
xor
and
pop
jbe
scas
sbb
mov
or
mov
out
in
sbb
push
pop
fst
mov
cmp
(bad)
mov
mov
clc
mov
add
fcmovb
sbb
cmp
jmp
icebp
das
push
push
ret
dec
repz
jae
pop
inc
push
test
dec
mov
movs
mov
call
add
sbb
push
or
test
jg
test
aaa
lods
sub
cdq
or
add
call
ja
sbb
scas
js
mov
mov
push
rcr
mov
lds
(bad)
fxam
or
pushf
outs
pop
rcr
jecxz
jge
mov
addr16
or
test
dec
loope
arpl
cmps
sbb
inc
lea
jo
or
mov
xchg
fiadd
jge
add
xor
pop
push
mov
inc
mov
sahf
xor
mul
daa
(bad)
in
fnstsw
push
mov
dec
mov
mov
jecxz
inc
cs
mov
cmps
test
dec
mov
mov
mov
mov
fwait
xchg
gs
leave
aaa
or
iret
clc
stos
push
sahf
xor
outs
sahf
cmp
dec
pushf
cmp
mov
jmp
pop
dec
pop
sbb
inc
cmp
pop
clc
inc
push
ror
xor
popf
push
add
xchg
int
sub
call
les
xor
hlt
outs
scas
test
into
sub
mov
cmc
rcr
inc
data16
fimul
push
not
pop
cmp
stc
enter
jo
cmp
push
or
(bad)
cwde
mov
and
pop
ror
adc
in
pop
outs
inc
xor
mov
sbb
test
dec
add
or
ret
push
stos
shl
jne
ins
xchg
arpl
cwde
xlat
jp
les
adc
shl
mov
data16
test
adc
shr
test
lds
loop
sub
adc
in
(bad)
dec
int
push
add
sub
add
out
mov
outs
call
pop
dec
pop
inc
leave
adc
bound
sub
gs
mov
sbb
mov
cmp
sbb
sbb
push
lahf
pop
rol
xchg
arpl
clc
xchg
push
fistp
test
add
add
fisttp
xchg
fild
stos
sub
adc
xlat
stos
jae
xor
ins
(bad)
jnp
mov
fxch
xchg
push
and
jle
cld
stos
repnz
ja
cmps
sbb
add
xchg
sbb
adc
jle
fstp
stos
aas
pop
out
xchg
sti
adc
enter
ret
pop
sbb
outs
inc
mov
jbe
ror
mov
mov
jbe
movs
mov
xchg
mov
in
add
xchg
shr
fmul
jne
mov
dec
push
jno
mov
mov
clc
cmc
sub
rol
inc
(bad)
sbb
add
pop
lods
adc
or
mov
pop
mov
pop
int3
call
jb
pop
inc
and
cmp
loopne
and
les
(bad)
call
test
xchg
mov
inc
pop
icebp
lea
inc
cli
sbb
enter
push
or
push
cs
mov
out
data16
movs
shl
inc
add
es
icebp
pop
imul
es
xor
xchg
mov
sub
sbb
in
sbb
add
jle
and
mov
loop
adc
mov
mov
xchg
daa
test
mov
xchg
add
out
(bad)
icebp
test
lea
sub
sub
dec
loop
jge
jnp
sbb
sahf
xor
jns
(bad)
pusha
repz
pop
adc
in
push
or
mov
ror
mov
and
stc
xor
inc
xchg
out
mov
jmp
pop
inc
fst
test
cmp
out
jns
jmp
cmc
jo
dec
xchg
jge
lods
movs
lods
add
fucom
mov
cwde
xor
js
or
(bad)
std
dec
cdq
inc
pop
cmp
or
jns
push
ins
(bad)
call
jmp
pop
push
dec
ds
lods
and
adc
jb
mov
inc
loopne
test
xchg
retf
pop
dec
sub
neg
out
dec
leave
mov
sub
ret
mov
cwde
mov
or
imul
retf
idiv
pop
gs
sub
retf
and
int3
fadd
pop
jmp
jo
popa
sahf
or
fwait
push
pop
dec
in
cwde
int
sbb
pop
rcr
xor
jmp
addr16
and
or
lea
cwde
mov
fucom
test
mov
imul
pop
sub
rcr
jecxz
pushf
loopne
push
int3
fidivr
idiv
outs
cmps
fdivp
xor
repnz
ins
sahf
ret
fs
push
out
inc
or
adc
aas
les
pop
adc
mov
shl
ficomp
xchg
in
push
ja
add
add
scas
and
fimul
adc
lea
sbb
xchg
cmps
mov
pushf
int
mov
jle
push
lock
pop
mov
mov
adc
aam
cmp
bound
fild
xchg
test
out
stos
pusha
enter
push
sub
enter
inc
inc
cmp
mov
jb
or
test
in
cmp
add
or
inc
aaa
bound
dec
dec
call
xchg
mov
and
cmp
jmp
pop
outs
pop
fst
sbb
outs
loopne
imul
scas
lds
sbb
mov
lods
int3
test
mov
cmp
push
ret
jl
aas
or
data16
js
mov
push
mov
sahf
iret
sub
out
lahf
fbld
mov
cmp
inc
sbb
add
pop
mov
add
mov
call
sti
imul
dec
repz
out
test
add
out
jp
imul
add
mov
mov
clc
and
xor
pop
sbb
sbb
bound
ins
pop
pop
xchg
test
mov
div
or
and
adc
pop
retf
outs
sbb
push
mov
test
adc
leave
rcl
mov
data16
rcr
sahf
mov
inc
jmp
loop
add
inc
test
or
pushf
pop
add
in
cli
repz
mov
xlat
sub
cmp
(bad)
jmp
jg
pop
outs
pop
movs
or
mov
xor
cmp
jge
ficomp
setb
iret
sbb
dec
inc
mov
(bad)
adc
and
cld
xchg
pop
scas
ret
jns
pop
push
jno
jne
sahf
out
cmps
std
pushf
adc
xchg
jp
iret
loopne
cmp
dec
mov
mov
addr16
aam
stos
fst
inc
gs
aaa
nop
sub
jmp
ret
pop
sar
and
mov
jo
push
mov
and
ins
fcmovbe
xor
sbb
xor
imul
cmp
or
push
pop
mov
add
stos
test
inc
aaa
inc
(bad)
hlt
call
pop
cmp
cmp
(bad)
mov
loop
push
or
sti
mov
xlat
inc
stos
(bad)
(bad)
push
fstp
xchg
(bad)
nop
ss
loopne
cmc
sar
inc
mov
lods
dec
pop
adc
jmp
pop
inc
add
call
addr16
and
repz
outs
jnp
call
push
sbb
adc
addr16
cwde
stc
sub
inc
(bad)
aaa
int
pop
shr
push
cmps
xchg
in
icebp
cmps
pop
xor
in
push
ror
lods
mov
aas
scas
outs
sbb
cdq
mov
mov
lds
cmps
inc
mov
cmp
cmp
(bad)
ds
inc
call
or
sub
inc
sahf
cld
push
adc
ins
sbb
inc
sbb
add
stos
pop
mov
mov
pop
cmp
jmp
imul
jbe
mov
inc
cdq
xlat
mov
popf
loopne
add
rcr
mov
sbb
cs
shl
retf
pop
mov
inc
int3
sub
aam
jle
inc
jp
inc
test
outs
pop
lea
and
mov
test
sbb
int3
daa
mov
pop
(bad)
or
add
push
(bad)
ss
inc
xchg
test
cli
jno
push
pop
out
xchg
push
mov
jo
gs
push
lea
mov
push
mov
push
ret
push
fstp
add
push
sub
repz
lods
fidivr
sahf
mov
sbb
push
fmulp
leave
sar
and
dec
data16
ds
mov
add
inc
in
and
cmp
inc
imul
add
xor
jle
stos
push
pop
xchg
dec
add
xchg
in
cmp
ds
add
(bad)
js
arpl
mov
fist
xchg
push
call
clc
mov
xchg
gs
mov
sbb
xor
sar
push
outs
iret
cmp
xchg
(bad)
cld
inc
icebp
cmp
push
stos
addr16
push
stos
fwait
nop
nop
push
sbb
inc
pushf
(bad)
jns
fistp
push
ds
cmp
push
add
push
mov
stos
ins
pop
lea
jne
adc
or
mov
inc
sub
sub
ficom
mov
dec
adc
xchg
leave
(bad)
outs
inc
mov
jne
sub
(bad)
jmp
sub
sub
mov
xchg
pushf
cdq
sbb
scas
push
rcl
sub
in
inc
adc
out
add
push
js
push
mov
ins
ins
test
sbb
xchg
jmp
sbb
ret
popa
cwde
sbb
mov
loope
test
aad
push
rep
push
xor
jns
xchg
neg
xchg
xchg
mov
test
fmul
and
out
in
inc
loop
arpl
cmp
jb
push
call
inc
jmp
fs
or
sbb
jno
arpl
jno
sar
jnp
rol
(bad)
or
rol
sbb
mov
lods
clc
dec
mov
movs
addr16
sti
je
clc
mov
cmp
pop
dec
xchg
mov
cdq
loope
ins
dec
fwait
mov
outs
(bad)
sbb
icebp
data16
imul
lods
push
enter
out
inc
ror
data16
sbb
add
daa
xchg
push
mov
retf
adc
jbe
mov
pop
mov
or
rcl
inc
into
sti
pusha
sti
pop
pop
push
sub
rcl
in
mov
sub
xchg
(bad)
cdq
mov
pushf
dec
inc
in
popf
lods
(bad)
(bad)
jmp
sbb
ror
add
fadd
jmp
push
push
test
gs
outs
mov
mov
dec
cmp
inc
lahf
fldcw
mov
sbb
cmp
cmp
mov
push
lods
mov
in
test
mov
jbe
dec
jne
mov
data16
in
out
sahf
js
leave
mov
call
xchg
push
js
add
enter
mov
cmps
cmp
daa
fsubrp
shl
and
ins
fisubr
popa
stos
aaa
sub
test
mov
es
dec
loopne
sub
pop
es
xor
gs
icebp
sbb
mov
sub
mov
adc
push
fdivr
movs
aaa
mov
push
sti
outs
packsswb
inc
fwait
loop
(bad)
int3
sub
ror
mov
pop
mov
mov
inc
mov
in
xchg
out
push
or
xchg
rcl
inc
jg
imul
cmp
mov
and
cmp
push
sbb
cmp
bound
sub
dec
xchg
mov
inc
scas
fwait
popf
bndldx
gs
in
inc
and
jge
scas
test
loopne
dec
pushf
mov
jmp
cmc
sbb
mov
push
dec
rcl
ret
std
push
push
mov
jp
sbb
imul
cmp
jne
and
xchg
mov
sub
rcr
into
and
add
pop
lahf
pop
popf
ja
dec
jnp
ins
inc
scas
ds
mov
jmp
loopne
mov
inc
stc
js
jg
inc
xchg
xchg
push
jmp
cmp
inc
xchg
test
mov
and
cmp
jne
jnp
adc
(bad)
pop
cmp
push
sbb
xchg
js
shl
dec
fild
or
cmp
fs
mov
adc
mov
(bad)
cld
xchg
lods
call
lea
ret
xchg
scas
call
loope
jne
jne
mov
jp
test
mov
mov
push
in
lock
sub
fild
sbb
addr16
xchg
lahf
mov
sbb
inc
shl
enter
pop
adc
sbb
jle
pop
pop
xor
bound
and
sub
sub
add
arpl
inc
dec
popa
test
cmp
popf
lock
(bad)
xchg
pop
adc
fdivr
in
ret
xor
stos
rdmsr
std
cld
cmc
test
pusha
jg
pushf
inc
xchg
sub
out
fdivr
jne
add
ins
mov
push
push
mov
cmp
sbb
(bad)
mov
push
sbb
adc
ds
xchg
or
jl
mov
mov
shr
lea
dec
arpl
outs
ret
dec
mov
adc
enter
adc
or
ds
lock
out
push
dec
fidiv
pop
dec
retf
jle
inc
jns
jp
or
aaa
pop
or
aaa
stos
push
stc
repnz
jg
clc
add
pop
ds
inc
xchg
pop
out
inc
mov
pusha
mov
xchg
sbb
ins
fdiv
mov
xor
fdiv
cwde
push
mov
ins
cmps
mov
push
jmp
jnp
mov
mov
and
xchg
sbb
sahf
lea
xchg
clc
mov
clc
cmp
mov
imul
repz
aad
jmp
arpl
fld
es
cs
stos
xchg
pop
sub
movs
bnd
pop
add
push
sub
xor
cmp
popf
push
mov
stos
push
pop
push
push
retf
lods
out
mov
pop
inc
push
scas
sub
test
in
shl
push
adc
loopne
daa
(bad)
sbb
ins
setno
test
rcl
jg
out
mov
inc
pop
cmp
out
scas
push
cdq
sub
sbb
mov
and
(bad)
push
cs
inc
cld
mov
aam
pusha
pop
add
sbb
aas
lods
aas
mov
scas
add
ja
sar
cmp
add
out
add
and
cmp
mov
inc
lock
jmp
sbb
sahf
fcomi
sbb
push
outs
test
lock
fsub
data16
xchg
sub
adc
jmp
fnsave
push
cs
xchg
cs
cmp
xchg
test
out
jo
int3
push
inc
pop
or
push
or
sub
mov
pop
lods
fsub
(bad)
push
xchg
fld
je
jge
push
movs
fisttp
pop
call
pop
add
inc
mov
xchg
enter
fmul
xchg
mov
adc
adc
enter
ficom
and
cwde
lds
ror
add
sti
pop
or
add
add
sub
push
jo
push
pop
test
jp
mov
popa
retf
mov
adc
jp
lea
fcomp
test
std
xchg
add
cmp
jge
mov
jle
mov
fisttp
data16
jmp
inc
cwde
inc
gs
jle
xor
icebp
movs
stos
mov
std
mov
dec
pop
fadd
sub
adc
out
or
js
push
ins
hlt
in
mov
jmp
(bad)
jmp
dec
aam
pop
das
in
mov
sti
call
loope
xchg
stc
xchg
scas
xlat
jae
mov
cmp
aad
test
repz
mov
pusha
inc
mov
xchg
mov
adc
jmp
mov
cmp
inc
and
or
adc
push
sbb
xchg
push
cmp
out
mov
sbb
shl
leave
jle
loopne
adc
mov
out
pop
lds
cmps
xchg
mov
(bad)
mov
out
dec
cmc
xchg
pop
aam
pop
sub
aad
gs
jg
pop
mov
dec
sbb
ret
or
(bad)
dec
ret
mov
pop
jbe
and
pop
sbb
aas
stos
sub
inc
dec
ficomp
mov
test
ds
lods
xchg
xor
rol
jge
nop
inc
in
rcr
cmps
jb
test
mov
mov
int
movs
mov
jg
in
popf
mov
repz
cdq
imul
jmp
sar
sti
and
aas
inc
cmp
lea
and
mov
xchg
popf
push
or
ins
dec
push
je
jmp
add
les
imul
mov
push
lods
sahf
adc
jmp
push
jo
mov
jnp
loop
inc
repz
shr
cli
fld
sub
push
xchg
mov
das
adc
pushf
mov
loop
jnp
fsubr
addr16
pop
cmp
fadd
ja
inc
sub
outs
cmps
adc
cwde
clc
jge
rol
dec
add
ret
jge
jl
pop
(bad)
adc
push
inc
mov
dec
stos
retf
add
loopne
mov
mov
scas
jg
pushf
sahf
ins
movs
mov
inc
pop
xchg
mov
lock
xor
(bad)
pop
js
ret
test
xchg
into
call
mov
add
ret
jne
and
sub
das
inc
cs
pushf
test
repz
and
add
push
adc
sbb
dec
jb
fs
cmp
mov
jge
into
loopne
test
popa
and
cmp
lahf
jp
out
test
mov
add
inc
xrelease
mov
cld
or
stc
fcmove
pop
fiadd
or
mov
push
std
dec
cmp
mov
aam
add
dec
ror
cwde
fisttp
dec
jle
fistp
pcmpeqb
xchg
bts
leave
test
xchg
inc
lods
xchg
loope
xor
(bad)
and
enter
jno
fadd
iret
xlat
jge
icebp
out
repz
push
jmp
sbb
or
lea
jmp
pop
push
in
mov
xor
sub
leave
sti
imul
pop
and
xchg
sbb
test
jg
mov
out
sbb
add
sti
push
adc
add
dec
(bad)
ss
xchg
stos
ins
add
cmp
jo
mov
out
sti
and
je
rcr
mov
into
push
test
call
inc
icebp
retf
mov
mov
in
push
sbb
mov
and
and
dec
test
inc
js
sub
mov
test
xor
push
mov
sbb
pop
cmp
pop
push
pop
add
adc
add
jo
ret
test
mov
loopne
inc
adc
(bad)
je
jl
push
mov
xchg
sbb
call
jp
mov
stc
or
ret
sbb
loop
enter
mov
ins
xchg
das
enter
repnz
jl
mov
ins
jnp
jnp
pop
stos
(bad)
enter
aad
rol
jno
aam
jg
sbb
add
ss
sub
inc
imul
cmp
cmp
mov
add
test
xchg
xlat
sbb
out
push
cmc
inc
movs
xchg
(bad)
push
cmps
sbb
xor
fsubp
mov
xchg
lahf
test
xor
push
sub
shr
jmp
fwait
adc
dec
mov
pop
pop
push
cmps
fst
repnz
or
test
add
es
outs
addr16
jo
lods
or
xor
nop
mov
and
xor
pusha
xchg
repz
mov
outs
loopne
push
adc
out
adc
fwait
mov
dec
mov
mov
add
(bad)
mul
pop
jp
sahf
xor
sub
sar
and
arpl
add
cdq
xchg
retf
add
(bad)
hlt
push
jno
cmp
inc
aas
push
ss
inc
pop
mov
inc
mov
sahf
and
dec
call
call
xchg
fidiv
sti
(bad)
in
and
push
pushf
mov
xchg
test
push
shl
movs
mov
(bad)
xchg
out
fdivr
jne
mov
dec
daa
cs
cld
es
sbb
movs
or
addr16
(bad)
mov
js
fidiv
mov
daa
out
sbb
push
fwait
jle
inc
jno
push
xor
test
(bad)
in
xchg
sbb
mov
push
test
test
push
adc
shr
mov
pop
bound
icebp
ret
cmc
pop
sbb
sub
xor
adc
shr
sub
xchg
push
push
xchg
imul
mov
test
sub
addr16
xor
nop
cmp
fs
dec
add
aad
aaa
adc
xchg
xor
loop
ret
and
inc
mov
mov
and
stos
mov
lock
xchg
mov
inc
pop
sti
test
mov
(bad)
aas
sbb
xchg
dec
out
inc
dec
jmp
js
(bad)
dec
lods
xor
jge
mov
out
cwde
fisub
or
ins
or
mov
xor
sbb
xchg
cmp
ds
push
cmp
lods
test
mov
inc
jmp
test
imul
fimul
sbb
inc
mov
leave
retf
movs
repnz
dec
mov
adc
dec
mov
enter
pop
sub
adc
jg
inc
pop
or
push
aad
call
dec
ins
pop
aas
sti
or
push
lods
add
dec
test
cmp
mov
call
aad
ins
pop
mov
dec
sti
shl
(bad)
out
adc
cmc
test
(bad)
(bad)
xchg
ds
push
mov
sub
sbb
rcr
jp
sbb
jg
fwait
outs
pop
outs
mov
mov
jp
fst
xchg
out
pop
pusha
pop
and
sub
inc
xor
in
push
mov
(bad)
outs
sub
adc
and
test
loopne
lahf
lea
jge
bound
dec
loop
mov
into
sbb
jecxz
or
jle
mov
ins
ins
in
mov
add
or
(bad)
(bad)
jp
sbb
dec
out
inc
pusha
and
jno
ins
out
mov
push
sbb
inc
cli
int
mov
and
pop
xchg
adc
and
xor
xchg
mov
hlt
les
cli
dec
jg
mov
(bad)
xchg
and
stos
push
xchg
xchg
inc
push
mov
mov
mov
dec
popa
xchg
xchg
pusha
and
shl
xchg
xchg
push
in
push
mov
cmp
xlat
iret
mov
sahf
ds
ins
fwait
push
pop
cwde
pusha
pop
(bad)
in
nop
scas
xchg
xor
arpl
mov
add
fnstsw
adc
pop
nop
and
adc
dec
push
push
inc
lods
cmp
xchg
mov
xor
cmp
loop
lds
push
movs
dec
call
loopne
(bad)
retf
or
imul
addr16
mov
xlat
fldcw
mov
call
mov
pop
in
inc
es
lea
inc
jg
jbe
adc
cmps
nop
retf
(bad)
pop
(bad)
jnp
out
jnp
add
mov
addr16
add
mov
ja
(bad)
cmps
sub
inc
call
leave
add
popa
inc
cmp
(bad)
mov
add
(bad)
addr16
test
inc
mov
cdq
shl
pop
mov
test
fisttp
mov
(bad)
dec
pop
or
in
jo
xor
jnp
ins
jl
cmp
mov
in
push
mov
sub
xor
mov
nop
je
dec
push
pushf
pop
aas
retf
lea
dec
ret
xor
retf
dec
jnp
call
lock
jmp
ret
out
outs
mov
shl
(bad)
dec
outs
mov
xchg
cs
jmp
(bad)
inc
adc
mov
ror
cmp
or
js
inc
(bad)
lea
jnp
mov
xchg
or
int3
inc
int
jnp
fistp
aaa
aad
or
and
out
sbb
addr16
gs
lahf
jne
sbb
cld
out
nop
retf
addr16
xchg
xor
mov
push
into
mov
test
jp
lods
mov
add
scas
xchg
xchg
inc
aam
stos
cmp
cwde
adc
push
mov
cmp
jmp
jge
mov
dec
pop
mov
fs
vmread
js
fcom
xor
mov
sub
and
fist
(bad)
dec
dec
jb
jno
mov
mov
add
call
push
movs
mov
aaa
lahf
pusha
jnp
cwde
popf
data16
lock
icebp
cld
pop
jg
mov
sub
xor
(bad)
pop
int3
inc
push
sbb
sbb
dec
or
mov
loopne
arpl
add
and
push
cmp
sub
add
mov
(bad)
(bad)
inc
xchg
ret
ja
pop
je
test
mov
dec
mov
popf
push
pop
aad
xchg
adc
adc
mov
mov
popf
xor
dec
nop
sub
xor
xor
cld
jmp
adc
jns
push
pop
jl
mov
test
mov
sbb
cmp
bound
add
out
outs
fwait
push
add
jmp
push
cmp
sar
out
jbe
and
mov
mov
push
jmp
cmps
cmp
pop
mov
mov
sbb
test
xchg
call
sar
pop
sub
shl
push
lds
pop
sbb
jl
push
push
imul
mov
sub
rcr
into
mov
sub
pop
arpl
sub
jne
push
mov
lea
fmul
mov
xchg
adc
adc
(bad)
sahf
adc
adc
ds
inc
sti
in
push
shl
mov
lea
pop
mov
mov
cmp
jmp
sub
dec
cmp
or
xor
inc
cmps
dec
sbb
mov
shl
movsx
jo
jg
fiadd
sub
sub
sbb
stos
or
sub
test
xor
jl
mov
mov
and
rcl
xor
shl
lods
xchg
ss
pop
dec
movs
les
mov
(bad)
ins
into
xor
add
into
push
ja
dec
test
pop
std
cmp
dec
mov
stos
inc
add
inc
xor
sahf
pop
mov
lock
mov
inc
out
xchg
mov
inc
adc
jmp
add
pusha
jno
push
hlt
(bad)
cmps
loopne
jb
xchg
sub
shr
neg
ret
es
pusha
mov
int3
shl
scas
sub
pop
aad
sub
pop
cdq
add
es
fwait
adc
or
mov
pop
call
in
push
mov
dec
mov
data16
pop
pushf
das
aam
imul
add
adc
xchg
aas
adc
fxch
mov
cwde
rol
imul
jmp
test
mov
sub
aam
add
inc
mov
xchg
sub
nop
sbb
out
cli
mov
mov
dec
push
adc
test
fs
push
or
pop
pop
mov
and
mov
lock
(bad)
enter
jg
cmps
add
jbe
add
das
mov
out
imul
inc
mov
sti
adc
push
gs
push
mov
outs
inc
mov
rcr
mov
rcr
mov
fistp
(bad)
mov
sbb
movs
mov
cs
mul
fwait
addr16
or
int
and
pop
push
ja
mov
cmp
pop
pop
pop
test
test
adc
retf
loop
les
pop
sub
sub
fidiv
nop
add
cmps
movs
add
adc
(bad)
mov
ror
inc
mov
sbb
sbb
mov
div
sbb
cdq
inc
arpl
mov
lods
call
(bad)
inc
push
retf
lock
jge
aaa
arpl
adc
pop
stc
xor
mov
inc
rcl
mov
inc
(bad)
dec
push
and
jae
ins
ja
jo
lods
dec
js
test
ins
cmp
jns
jmp
mov
push
fist
fwait
sar
xchg
jbe
mov
lods
sub
dec
cmps
mov
push
inc
cwde
test
mov
mov
cmp
push
repz
(bad)
stos
daa
loop
push
jp
fwait
cmp
or
mov
(bad)
jo
mov
jle
les
or
adc
pop
mov
mov
pusha
sahf
test
cmp
(bad)
mov
dec
outs
and
cmp
in
pop
stc
jmp
xor
mov
test
add
xchg
out
stos
push
fwait
outs
stc
adc
clc
sti
test
lahf
and
add
mov
inc
add
mov
into
pop
out
jns
call
out
dec
sbb
sbb
lock
data16
xor
stos
movs
sub
addr16
(bad)
mov
pushf
mov
pop
jb
mov
(bad)
jmp
cwde
push
push
leave
fdiv
mov
dec
fwait
call
scas
fdivr
out
aad
lds
daa
sub
ret
and
push
and
mov
je
out
js
ret
je
je
(bad)
pop
xor
daa
mov
dec
bound
push
call
cmp
cmc
mov
mov
jne
dec
jae
je
sahf
(bad)
jnp
jmp
std
fmul
movs
cmc
push
mov
mov
movs
int3
sub
rol
add
int
fiadd
inc
pop
add
jnp
adc
lea
iret
jle
aad
fisttp
loope
cmp
xor
or
fcomp
xchg
pop
inc
in
mov
lods
mov
nop
mov
add
test
push
jmp
xor
ja
stc
fdivp
cmp
pushf
sbb
in
leave
mov
loop
inc
in
out
inc
dec
(bad)
repz
push
xor
inc
sbb
scas
mov
jmp
jne
std
cmp
xchg
or
sub
and
xchg
movs
push
sbb
pop
fwait
test
adc
fdivr
pop
sbb
ins
xlat
test
popa
mov
pop
or
loope
push
mov
cmp
icebp
cmp
(bad)
movs
clc
xchg
jg
scas
inc
xchg
pop
mov
add
out
cld
ret
adc
cmp
popf
dec
cmp
es
iret
pop
loopne
das
xor
adc
or
adc
pop
add
nop
daa
xchg
pop
les
xchg
(bad)
mov
bound
adc
test
imul
jo
scas
mov
jmp
into
loope
xor
jg
xchg
pushf
ret
and
jl
nop
stos
mov
sbb
xor
sub
mov
call
dec
jmp
ret
xor
xor
inc
loopne
add
adc
ret
fimul
call
sub
jbe
pop
mov
pushf
sub
dec
lods
inc
and
add
aaa
push
mov
jns
fs
pushf
jbe
mov
js
rol
retf
jnp
dec
mov
lods
in
pop
mov
test
ds
clc
mov
cmc
dec
push
xchg
mov
pop
or
(bad)
cmc
pop
std
adc
ds
ins
pop
jp
mov
mov
sti
nop
xor
dec
in
sub
xor
mov
xor
or
sahf
cmp
test
cmc
jp
push
jl
jb
xchg
enter
mov
pop
clc
cmps
xchg
jne
inc
mov
movs
les
xchg
inc
push
xchg
cmps
std
add
(bad)
icebp
aam
jecxz
out
sbb
sub
into
fistp
popa
pop
inc
shr
sub
retf
mov
fwait
jmp
push
jne
fld
add
pop
sbb
jnp
mov
dec
stos
xlat
mov
hlt
mov
sbb
jbe
lods
jno
movs
rol
jecxz
int3
jmp
das
rcl
add
pop
lods
mov
push
data16
mov
sbb
icebp
mov
mov
xor
fs
not
push
fsub
add
adc
add
mov
xchg
mov
sub
dec
popf
in
add
les
jp
add
pop
jnp
jg
mov
mov
int3
out
and
sub
push
not
xchg
jg
loope
push
sar
(bad)
xchg
mov
jb
stos
test
inc
ret
jmp
enter
cmp
ja
xor
push
fisubr
popa
test
scas
lds
sbb
and
cmp
inc
cs
adc
outs
mov
in
lea
and
cmp
stc
pop
std
bound
jno
mov
movs
dec
nop
mov
out
hlt
add
push
ss
popf
add
icebp
retf
mov
mov
push
sub
add
pop
mov
jno
pop
test
sbb
jnp
ret
and
lea
inc
leave
adc
jb
imul
dec
fmul
sbb
fstp
call
cld
push
std
fwait
enter
mov
add
jecxz
xor
in
ror
loopne
xchg
ret
clc
cmp
dec
scas
dec
aaa
pop
call
or
sub
xchg
pop
cmp
cmp
dec
cmps
xchg
mov
dec
and
ins
out
or
dec
into
cmp
sub
inc
js
pop
xor
sbb
call
retf
test
inc
mov
dec
pop
scas
push
test
call
std
xchg
jae
inc
mov
sub
sub
(bad)
xchg
jmp
leave
push
scas
xor
repnz
jg
imul
add
leave
jp
out
jnp
fbstp
jb
mov
sbb
test
jne
jne
xchg
arpl
sub
(bad)
xchg
sbb
dec
jb
mov
inc
xor
or
call
mov
add
cmps
adc
rcr
cmp
dec
cmc
jle
cmp
in
jae
inc
inc
sub
les
pop
and
js
pop
out
mov
mov
pop
rol
std
aas
ret
fistp
pop
and
and
and
std
pop
dec
mov
pop
xchg
xchg
mov
fwait
(bad)
call
pop
test
std
mov
pop
mov
lahf
pop
das
int
mov
retf
scas
lods
int
xchg
add
cmc
loop
iret
(bad)
popa
pop
cwde
scas
push
in
jne
push
add
(bad)
test
pusha
dec
xor
sbb
test
dec
in
pop
leave
xchg
dec
push
cmp
ss
inc
scas
and
push
pushf
adc
mov
adc
sub
int3
jmp
pop
je
mov
jg
in
mov
and
movs
icebp
xor
push
pushf
mov
xchg
xchg
hlt
and
dec
mov
mov
and
not
ret
inc
dec
sub
aas
sbb
cmps
mov
jp
shl
fcomp
jle
dec
imul
daa
fisttp
movs
push
popf
xor
fwait
xchg
or
lock
into
std
je
outs
pop
and
xor
mov
push
clc
mov
mov
inc
add
jg
pop
inc
mov
or
pop
les
cmp
inc
movs
pop
sub
test
lods
ja
stc
pop
test
sti
xor
add
fcom
aam
jnp
cmps
mov
fwait
les
addr16
ins
mov
rcr
xchg
popf
stos
push
out
stc
stos
sub
push
xchg
movs
cmps
out
dec
movs
jle
xchg
mov
adc
(bad)
out
outs
out
mov
xor
sub
sti
stos
ja
or
pop
pop
div
ja
cdq
mov
cmp
(bad)
and
and
xor
pop
xchg
adc
sbb
adc
(bad)
rcr
stc
retf
lods
(bad)
pop
cwde
dec
push
pop
shl
mov
cmp
inc
adc
shl
mov
sbb
mov
xor
hlt
call
push
dec
mov
push
sub
out
cld
gs
dec
arpl
inc
mov
dec
sbb
mov
xchg
ret
out
dec
xchg
in
pop
xchg
fild
or
jecxz
and
or
mov
popf
add
dec
outs
nop
jp
(bad)
(bad)
xchg
(bad)
neg
push
and
hlt
xchg
inc
scas
cld
jle
push
push
gs
cmc
xchg
jmp
pop
in
nop
or
fdivr
push
in
pop
xchg
test
outs
xchg
loope
xlat
loop
pop
mov
sti
push
sbb
or
sbb
dec
cli
outs
es
mov
add
dec
lahf
fldenv
jecxz
push
jne
loope
or
and
mov
cmps
cmps
dec
add
cli
lahf
add
ja
sub
mov
mov
mov
jmp
sahf
push
mov
and
sahf
mov
xor
int3
(bad)
iret
push
out
pop
jp
mov
inc
or
mov
clc
jl
in
jno
mov
adc
aas
push
pop
sbb
inc
pop
fld
mov
mov
retf
inc
int3
fbstp
inc
push
push
rol
rol
xchg
rcl
add
xlat
imul
jg
lods
adc
std
(bad)
fild
pop
fist
clc
retf
in
je
inc
jle
push
pushf
inc
jnp
je
inc
in
xchg
js
aam
lahf
in
dec
adc
pop
jmp
add
bound
add
add
pop
in
fst
aam
inc
push
mov
jg
mov
add
out
fbld
fcmovbe
adc
test
fisubr
mov
hlt
sub
sub
xlat
fdiv
inc
pusha
inc
movs
xor
xchg
push
pop
push
scas
fwait
mov
pop
cld
inc
mov
inc
jg
pop
cld
adc
jl
adc
scas
inc
adc
outs
mov
pop
xchg
mov
cmp
pop
inc
and
jle
into
shl
mov
repnz
pusha
adc
out
or
mov
dec
mov
mov
xchg
jecxz
ins
imul
sbb
cmp
hlt
ror
sbb
and
fistp
daa
or
xchg
(bad)
(bad)
cmp
mov
and
push
lods
pop
scas
push
dec
lahf
push
and
mov
cmp
dec
(bad)
xor
arpl
jae
mov
adc
jge
aad
out
or
(bad)
or
repnz
es
loopne
int
inc
dec
loop
dec
shl
or
mov
cld
gs
jne
and
pop
and
mov
hlt
inc
cli
in
sbb
inc
loope
adc
sbb
pop
mov
aad
outs
mov
jge
scas
cmps
sbb
or
lahf
test
and
jbe
mov
jno
in
jo
mov
pop
int
lods
sub
ins
xchg
xchg
mov
push
lods
test
hlt
lods
loopne
adc
jb
xor
cld
pop
out
push
inc
push
jo
imul
push
cmp
xchg
scas
stos
xor
jecxz
mov
jb
add
pop
sub
add
cmp
cwde
or
mov
push
jmp
(bad)
sti
mov
popf
(bad)
xchg
inc
fdiv
ret
les
mov
push
in
loope
add
jmp
cwde
clc
cmp
call
(bad)
jno
out
xchg
jp
cmp
mov
sub
ss
pop
cmp
mov
test
fstp
sbb
shl
pop
loope
sub
push
stos
or
jns
data16
mov
mov
sti
retf
int
pop
aam
pop
sub
push
xor
or
rcl
scas
dec
mov
lahf
call
stos
xchg
mov
inc
in
and
hlt
cmc
cld
and
xor
data16
mov
out
cwde
(bad)
sub
mov
jge
inc
ret
pop
add
ss
xchg
imul
ds
xchg
aad
or
cmp
leave
mov
mov
push
sar
push
mov
cmp
pushf
pop
push
fcmovnu
mov
xchg
jl
mov
js
mov
hlt
test
fisub
mov
dec
xchg
and
push
cmp
jmp
sbb
add
pop
stos
inc
cmp
mov
mov
cwde
(bad)
add
add
daa
lods
push
into
adc
sbb
or
movs
sbb
or
sub
fnsave
jl
inc
cmps
dec
out
fild
retf
in
xchg
or
mov
div
fsubr
pushf
mov
push
xchg
mov
mul
test
repnz
or
icebp
int
jmp
push
push
popa
les
jne
sub
push
or
retf
jnp
rol
sbb
jmp
mov
inc
jb
dec
sbb
mov
and
inc
ret
add
repz
js
jno
popa
fist
or
mov
pop
shr
imul
push
xchg
xchg
std
pop
inc
int3
test
xacquire
jmp
pop
test
retf
repz
add
push
xchg
xor
dec
out
popf
int3
mov
jecxz
jno
clc
dec
outs
push
sub
and
inc
xchg
and
push
cmp
mov
sub
gs
std
stos
push
test
inc
ins
lds
test
xor
mov
aad
not
call
mov
mov
scas
add
lock
neg
cdq
cmp
test
jne
push
scas
xor
dec
out
test
imul
cwde
pop
data16
arpl
test
leave
arpl
retf
into
push
dec
push
adc
sbb
jge
mov
mov
test
fisttp
xchg
lods
pushf
sub
add
leave
jecxz
mov
push
jg
push
jecxz
leave
dec
mov
mov
push
leave
ret
out
add
repz
sbb
mov
xor
mov
jg
cmp
cmp
sbb
fidivr
fs
gs
dec
cmps
(bad)
mov
jbe
leave
das
xchg
into
push
addr16
iret
push
pop
jp
sbb
sub
daa
stos
pop
dec
mov
mov
test
cmp
dec
cwde
sar
call
dec
stos
outs
mov
jge
jmp
pop
aaa
fisub
mov
stos
inc
jge
fwait
lods
sub
idiv
dec
fs
movs
dec
xchg
jb
push
pop
push
enter
add
dec
mov
push
pop
or
mov
int3
dec
(bad)
cmp
mov
add
inc
pop
shl
test
mov
dec
pushf
mov
or
mov
pop
push
fdiv
movs
fistp
int3
mov
std
mov
sub
mov
cmps
mov
aam
lods
jl
sti
mov
jmp
inc
in
test
sub
sbb
push
int3
leave
lods
cmp
add
cmp
dec
mov
push
je
pushf
mov
(bad)
sar
popf
iret
inc
bound
jmp
xor
xor
jbe
inc
inc
mov
or
push
pop
mov
test
loop
xchg
push
lahf
repz
pushf
outs
pop
addr16
pop
out
xchg
repz
iret
addr16
pop
mov
(bad)
test
popf
xchg
bound
xor
les
push
sbb
adc
jb
push
or
mov
mov
cmp
test
pop
adc
fist
xor
jl
daa
mov
nop
ins
adc
mov
std
fabs
cmp
iret
jle
dec
jae
mov
pop
xchg
loope
adc
mov
hlt
add
mov
adc
jg
sti
lds
lods
repz
fild
jp
cmp
enter
inc
inc
sbb
xor
inc
cmp
push
mov
int
ds
ror
daa
(bad)
out
jno
add
mov
imul
adc
ss
mov
sbb
pop
pop
int3
xlat
xchg
sbb
dec
add
lds
mov
jp
leave
in
int
dec
push
(bad)
mov
test
cdq
mov
rcr
cwde
(bad)
mov
xor
adc
ins
icebp
cmp
push
aad
loopne
popf
push
inc
and
movs
ins
jne
mov
popa
out
retf
lahf
stos
dec
and
push
(bad)
aam
mov
adc
sbb
mov
mov
jle
lods
jnp
sbb
xchg
xchg
stc
stc
movs
inc
stos
jmp
ja
mov
mov
sub
in
and
arpl
cmps
addr16
ficom
test
ror
movs
dec
int3
sub
lock
inc
call
push
cmp
dec
sub
mov
aam
repnz
cwde
out
inc
jb
inc
lds
and
je
mov
jge
cwde
dec
and
xor
test
cmp
xor
cmc
mov
mov
jp
ficomp
call
loop
imul
retf
stos
xchg
fmul
inc
mov
test
data16
pop
xor
rep
jge
sbb
and
outs
popa
inc
mov
or
and
pop
out
sub
push
pop
push
imul
dec
mov
sbb
adc
jns
retf
xor
pop
lods
jne
movs
or
loope
adc
mov
mov
movs
(bad)
pop
fadd
mov
rcr
mov
hlt
jno
mov
fnstsw
push
das
lock
sar
adc
pop
mov
cmp
pop
or
xchg
xchg
in
nop
sbb
adc
sub
dec
ds
sbb
jbe
or
xchg
pop
call
sti
popa
xor
jno
mov
mov
out
push
push
hlt
jecxz
pop
leave
jns
lahf
xchg
mov
fcomp
mov
fiadd
imul
and
icebp
aad
and
xor
adc
jne
xor
jl
or
fwait
mov
bound
das
and
sbb
add
jns
mov
and
or
lahf
aam
push
sub
cmc
mov
int
push
xchg
pop
cmps
push
mov
lahf
ins
fsubrp
addr16
lock
jb
dec
movs
xchg
test
sbb
test
add
test
mov
and
shl
xchg
sub
jnp
mov
jo
jle
retf
or
cld
jle
icebp
sub
sbb
adc
jl
(bad)
cmp
lods
mov
sbb
inc
in
call
ja
js
js
sub
retf
mov
xchg
out
pop
test
mov
mov
iret
sub
inc
pop
in
leave
repnz
xchg
cwde
mov
push
or
xor
inc
fcom
imul
sbb
sub
xchg
and
(bad)
adc
push
into
adc
ja
bound
imul
inc
in
mov
sti
aam
dec
mov
push
push
adc
neg
enter
mov
jnp
sbb
xor
mov
xor
fld
scas
lahf
jp
push
test
sub
ss
cmp
call
mov
adc
and
loopne
je
adc
in
ss
into
outs
pop
xchg
dec
xor
xchg
sub
jl
out
mov
cli
pusha
arpl
dec
xor
push
hlt
adc
mul
adc
out
cmp
in
shl
jge
xchg
mov
pop
out
add
xlat
ret
sub
xor
push
mov
inc
pop
(bad)
cmp
mov
sub
sbb
mov
inc
add
inc
adc
push
pop
(bad)
add
ins
push
dec
cmp
dec
jb
fstp
fwait
cmc
mov
leave
inc
(bad)
addr16
jbe
jne
(bad)
std
imul
mov
idiv
lea
mov
cmc
pop
daa
into
ret
test
mov
push
rcl
sub
ret
xor
imul
add
cmp
into
jg
frstor
xchg
inc
inc
dec
sbb
add
pop
je
mov
dec
dec
or
into
or
test
cmp
cmc
call
mov
jne
inc
pop
inc
mov
pop
xchg
std
mov
in
pop
sub
mov
xchg
mov
pop
pop
mov
lea
ds
out
or
lds
sub
sub
in
inc
jecxz
push
sbb
mov
jno
inc
cmps
xchg
mov
pop
std
in
sbb
or
cmp
push
ja
xchg
add
and
push
mov
loope
aas
push
push
sub
jns
das
fldenv
xchg
pusha
in
mov
add
aam
push
call
not
pop
jle
lds
lods
retf
imul
sub
push
cli
and
outs
fs
xor
outs
xchg
mov
cmc
fs
jnp
ficom
popa
ss
add
jbe
stos
aas
xor
ss
jne
xchg
test
fstp
jns
js
sub
in
in
pop
and
mov
sti
call
pushf
mov
(bad)
test
enter
fisub
in
cmp
in
out
clc
inc
(bad)
cmp
pop
test
pop
cmp
outs
pop
dec
out
xchg
stos
or
xor
or
or
jae
imul
inc
movs
pop
add
test
and
jp
inc
pop
inc
test
mov
xchg
stos
inc
push
(bad)
stc
mov
xchg
mov
adc
add
(bad)
std
cmp
test
xor
sbb
ror
jnp
add
cmp
inc
pop
jbe
lahf
mov
fcmove
adc
cmp
pop
sbb
cmp
sbb
and
sbb
lea
pop
adc
or
ret
bound
fidiv
xchg
(bad)
dec
xchg
into
cdq
jl
add
arpl
cmps
popa
arpl
cmc
retf
(bad)
jp
popf
mov
push
cmp
ffreep
es
es
and
sub
and
in
mov
repz
fst
sub
add
xor
popf
sbb
fst
movs
fwait
mov
neg
xchg
xor
jb
mov
xor
sahf
ja
enter
(bad)
pop
mov
test
je
lds
out
lods
popf
inc
pop
lods
(bad)
xor
push
shl
pop
cmp
cld
mov
fadd
aas
mov
xor
outs
xchg
movs
mov
fidiv
xchg
sbb
ds
aas
ja
and
sbb
sbb
cmp
mov
ins
xor
jmp
shl
shl
popf
test
ret
in
push
das
fisub
mov
lea
mov
add
int3
addr16
aaa
dec
rcl
or
dec
jo
outs
and
xchg
cmp
aas
movs
fist
pop
pop
fist
ins
add
stos
imul
add
and
xchg
sub
cmp
std
fs
fs
jle
rcr
jecxz
sahf
addr16
loopne
and
lock
xchg
mov
dec
shr
mov
sti
(bad)
cdq
(bad)
inc
dec
in
cmps
push
loope
(bad)
sub
fxch
loopne
enter
arpl
pop
push
je
xchg
lods
(bad)
ss
and
sbb
adc
jl
push
jmp
pusha
pop
fbstp
into
add
mov
jb
aam
and
popa
arpl
je
mov
cmp
clc
dec
push
push
xchg
adc
retf
dec
call
cmp
and
xchg
fs
push
out
sub
lea
arpl
outs
lods
sub
test
fwait
mov
stos
inc
lahf
(bad)
arpl
cmp
sub
pop
stos
aas
rcr
lods
push
pop
xchg
push
bound
sub
pushf
int3
test
scas
(bad)
pop
fcomp
fs
xchg
les
jb
loope
add
enter
imul
mov
cwde
mov
ret
mov
dec
xchg
jl
xor
push
hlt
imul
and
add
rcr
sbb
dec
aaa
dec
mov
stos
push
ret
leave
hlt
sbb
jae
retf
ss
sbb
aas
lods
pop
jae
push
cmp
add
mov
aas
fwait
scas
mov
fstp
inc
mov
push
xchg
mov
shl
push
jmp
test
retf
adc
jmp
inc
mov
clc
repz
pop
mov
push
shr
sbb
ret
add
add
jg
pop
sbb
mov
xchg
dec
cmp
gs
idiv
jmp
call
outs
inc
add
xor
imul
inc
fst
dec
mov
push
cmp
xchg
fsubr
inc
jns
mov
push
ret
add
xlat
push
adc
std
sbb
repz
inc
mov
ins
test
aam
jns
add
es
xor
mov
xchg
mov
pop
jmp
xchg
(bad)
pop
push
dec
sti
cmp
jo
cmp
sbb
jnp
mov
pop
mov
push
push
std
int
dec
lahf
test
jg
call
icebp
popf
pop
xor
jmp
sub
arpl
xchg
mov
jo
mov
(bad)
stc
mov
arpl
mov
fdiv
sbb
inc
in
add
fs
outs
inc
(bad)
imul
jno
mov
iret
dec
retf
movs
into
ins
dec
pop
or
dec
xor
add
leave
jle
xchg
scas
adc
mov
(bad)
mov
je
arpl
fs
mov
dec
int3
jmp
lods
shl
cdq
je
mov
xchg
loopne
aad
pop
push
mov
mov
cmp
data16
cs
add
or
cmp
movs
test
enter
jmp
push
add
fistp
jo
sub
sbb
cmp
add
push
retf
(bad)
mov
sbb
ins
xchg
jg
nop
test
mov
dec
enter
mov
mov
shr
stos
mov
inc
out
movs
and
xchg
clc
scas
idiv
push
jl
mov
push
sbb
into
iret
test
or
push
pop
and
inc
imul
scas
pop
ror
dec
xor
cmp
xor
jle
movs
outs
cmp
and
mov
push
inc
or
stc
stos
xchg
and
aad
aam
jne
mov
pop
jmp
in
pop
(bad)
aad
push
xchg
jl
mov
ja
xchg
ret
xor
pusha
fs
jp
dec
lods
or
test
in
push
sbb
cmp
cdq
push
add
mov
sbb
test
sbb
sbb
xchg
sub
and
pop
inc
shl
fs
fwait
in
add
cli
int3
mov
push
sub
jno
(bad)
cld
fs
in
push
in
movs
popf
sub
ja
lahf
adc
cmps
gs
cmps
mov
clc
test
xchg
add
xchg
mov
inc
(bad)
and
jns
or
outs
push
jnp
lds
pop
repz
inc
mov
fs
and
mov
test
hlt
inc
push
xchg
imul
jns
fwait
sti
aas
add
inc
(bad)
cli
loop
fild
jl
jae
pop
retf
pusha
call
das
out
mov
cld
cmps
aam
and
xchg
test
shl
fsubp
push
imul
mov
ret
inc
fild
arpl
cmp
dec
pop
or
cmps
xchg
mov
or
add
inc
jge
inc
test
sbb
jecxz
xchg
fstp
pop
(bad)
jae
aad
jne
lea
in
mov
shl
sub
or
call
or
enter
jg
mov
mov
pushf
sbb
mov
adc
mov
sbb
add
int
push
and
fbstp
sbb
sub
jle
xchg
cmps
lahf
sbb
fdivr
inc
data16
mov
es
sub
jmp
xchg
add
fs
add
mov
in
retf
mov
addr16
sbb
jae
push
loop
ret
outs
lahf
call
jp
sti
loope
or
data16
not
add
mov
cld
sub
call
in
frstor
bound
mov
xchg
stos
sahf
aaa
xor
sbb
call
lds
gs
mov
dec
push
fbstp
mov
jl
xchg
cld
sbb
xchg
cmp
push
push
mov
fcomp
loope
fadd
hlt
pop
lds
call
or
scas
ror
inc
pop
mov
ss
ds
loop
out
dec
jl
pushf
cmp
mov
not
sub
fs
mov
sbb
es
push
shr
test
aas
call
(bad)
jl
and
out
stos
jb
cdq
jb
shl
(bad)
sub
outs
repz
fld
cwde
or
arpl
mov
jl
xor
fnstenv
cmp
aaa
jle
mov
add
xchg
mov
xchg
sub
fcomp
rcr
adc
daa
push
sub
mov
push
rcr
dec
xor
add
daa
dec
sti
in
out
mov
popa
pop
cwde
push
mov
loope
out
mov
cld
pop
xchg
bound
call
inc
mov
jp
fimul
pop
out
or
dec
jmp
pop
xchg
add
mov
(bad)
cmp
add
add
cdq
sbb
mov
movs
aas
inc
movs
mov
inc
(bad)
mov
dec
stos
std
arpl
push
push
and
jp
mov
bound
in
xor
fcom
pushf
xchg
inc
cmps
inc
dec
lods
xchg
sbb
jecxz
dec
addr16
mov
or
cld
call
or
pop
xchg
pusha
sbb
stos
enter
leave
pop
sahf
and
or
adc
inc
daa
cmp
pop
adc
cmp
or
pop
xchg
stos
cmps
cs
test
fwait
sar
test
mov
das
shl
sub
xchg
mov
jns
in
xor
xchg
popf
movs
cmp
pop
repnz
adc
mov
jp
and
ins
add
inc
xchg
jno
ja
xchg
mov
and
mov
arpl
sbb
push
cmp
or
stos
dec
and
adc
mov
add
std
fidiv
aad
dec
inc
test
sahf
repnz
cmps
jg
fstp
mov
shr
in
iret
sub
shl
cmc
out
push
in
stos
imul
or
int3
test
in
jb
jg
cmp
outs
lods
xor
mov
add
ja
fisttp
ret
hlt
pusha
push
gs
jmp
xor
add
sbb
mov
jns
fsub
xlat
enter
ret
fs
pusha
mov
cmp
(bad)
mov
icebp
jne
pusha
xchg
push
pop
test
ret
or
cmp
scas
jae
pop
iret
adc
cmc
out
std
mov
and
lea
or
cmp
inc
leave
cmc
and
add
add
sbb
pop
ror
or
ins
adc
mov
out
xlat
cdq
add
pop
ins
mov
jle
dec
sbb
call
xchg
movs
mov
movs
enter
mov
stc
xlat
sar
ja
ret
dec
shl
dec
and
(bad)
lock
shl
push
sub
mov
dec
aaa
jo
mov
mov
sub
addr16
repnz
mov
cmp
cmp
mov
test
not
mov
push
popf
test
(bad)
mov
cmp
mov
gs
dec
lea
enter
jecxz
xchg
dec
loop
dec
xor
sti
test
test
inc
mov
in
mov
xchg
(bad)
out
ins
div
pop
sub
xor
arpl
dec
sbb
xchg
push
loop
sbb
inc
idiv
sub
jbe
xchg
sub
sub
addr16
(bad)
xor
stos
mov
adc
pop
gs
scas
xor
add
adc
data16
sub
(bad)
ficomp
shl
push
xchg
loopne
sub
fmul
sti
mov
jne
stos
std
sbb
lock
js
xchg
xchg
jne
sub
ret
jnp
ss
or
lods
push
je
movs
ja
push
test
mov
sbb
clc
js
mov
add
aas
adc
and
inc
stos
dec
add
cmp
mov
clc
cs
pop
fmul
mov
retf
inc
gs
pop
loope
lahf
ins
xchg
popf
jge
mov
test
pusha
pop
xchg
movs
scas
daa
sbb
loope
out
and
mov
xor
clc
jp
inc
push
sbb
xor
bound
fwait
mov
leave
and
xor
or
sub
and
mov
js
or
and
pop
and
xchg
rcr
or
mov
pop
inc
je
cmps
movs
cmp
ret
fadd
dec
sbb
stos
dec
pop
adc
lock
dec
sti
and
xor
cs
mov
push
enter
pop
(bad)
jne
inc
in
imul
xchg
add
fs
push
call
retf
out
sub
ret
jne
push
mov
and
mov
jge
mov
and
sti
mov
lods
xchg
clc
aaa
scas
push
sti
cdq
mov
cmp
in
stc
cdq
dec
jmpw
ror
adc
(bad)
pop
rol
pop
aaa
pop
fidivr
and
mov
addr16
or
dec
lds
sub
push
push
in
cmp
js
pop
sbb
mov
gs
jmp
inc
cld
adc
sti
mov
push
mov
xchg
push
add
(bad)
mov
push
(bad)
lahf
mov
mov
(bad)
scas
(bad)
jp
sahf
(bad)
push
cmc
dec
cli
adc
not
jmp
retf
sbb
cmp
data16
clc
jae
jae
mov
push
repz
mov
sub
cmp
jp
add
adc
or
xchg
outs
sbb
ins
jecxz
mov
stc
pop
pop
popa
mov
xor
test
xlat
mov
lock
push
mov
icebp
add
ror
mov
sti
cmp
retf
dec
pop
ret
and
cmp
jo
inc
aas
add
out
shl
or
or
inc
cs
sub
sbb
jle
inc
fistp
sar
push
mov
sub
in
jmp
stc
jbe
ins
test
mov
mov
mov
scas
adc
addr16
mov
jge
scas
nop
xchg
xor
loop
outs
dec
in
cdq
xor
push
lods
aaa
or
loop
ret
inc
pop
and
daa
mov
sahf
mov
sbb
add
rcl
jnp
mov
adc
in
push
jb
jne
mov
mov
ret
repnz
(bad)
shl
inc
add
jno
mov
test
adc
ret
mov
cdq
mov
pop
xchg
lahf
mov
cmp
loope
mov
pop
jns
mov
sbb
add
into
cmp
fldcw
inc
sti
push
cmp
jmp
scas
mov
stc
loop
mov
push
inc
push
pop
cli
cmp
mov
inc
push
fist
adc
pop
ffree
in
mov
arpl
je
mov
imul
xlat
movs
cs
mov
mov
repz
leave
pushf
hlt
mov
ds
test
dec
(bad)
daa
sub
ja
sub
pop
gs
mov
sub
adc
dec
daa
repz
lock
rol
dec
(bad)
cmp
inc
xor
stos
sbb
daa
stos
pop
jne
ins
cmp
sbb
add
adc
in
xor
gs
shl
scas
fisub
xlat
mov
add
(bad)
repnz
sbb
push
mov
xchg
inc
lock
movs
lods
or
jnp
or
into
inc
xchg
pop
inc
cmp
inc
mov
add
rcr
icebp
fiadd
(bad)
cld
jo
jns
cmc
sbb
aaa
stos
add
outs
push
adc
or
lods
test
ficomp
jno
fdiv
mov
xchg
push
mov
lods
cs
in
xchg
mov
push
mov
hlt
xor
jnp
or
push
xor
hlt
(bad)
ficom
inc
and
test
dec
inc
mov
sub
mov
xor
addr16
sbb
add
sbb
or
adc
pop
movs
cmp
nop
xchg
cwde
imul
loopne
sbb
jg
popf
(bad)
arpl
mov
mov
hlt
arpl
test
mov
aam
cmp
push
out
es
fucomi
push
jmp
jg
cmp
jnp
pop
cwde
lahf
mov
cmp
xor
aam
adc
pop
cwde
xor
dec
inc
popf
push
pop
out
(bad)
mov
call
xlat
jbe
push
xchg
vsubss
add
xchg
pop
movs
mov
bound
mov
mov
call
jns
dec
aad
cmp
mov
(bad)
cmp
pop
inc
inc
mov
je
mov
sbb
hlt
jnp
jge
loop
push
push
sub
popf
sbb
mov
dec
mov
and
fst
fld
and
jl
(bad)
xchg
push
shl
mov
leave
ja
mov
pop
sbb
retf
cli
movs
jmp
pop
mov
jmp
cmp
jmp
stos
push
cdq
ss
js
xchg
and
jg
dec
daa
jb
mov
out
js
icebp
add
std
push
or
sbb
jle
mov
pop
test
inc
sti
aad
aas
sar
jmp
ja
mov
loopne
(bad)
loopne
push
jmp
mov
xchg
scas
in
mov
test
add
inc
cdq
test
sub
cmp
push
mov
test
push
jle
sbb
cdq
xor
jmp
inc
ror
add
xor
aaa
xor
push
lahf
or
adc
push
in
test
aaa
push
or
adc
bound
fadd
in
sahf
scas
movs
inc
jmp
cmp
sbb
lahf
pop
add
nop
mov
hlt
stos
mov
mov
icebp
push
pop
xor
jmp
push
adc
or
mov
pushf
dec
cmp
jg
shr
cmp
inc
sbb
adc
jl
popf
pop
inc
mov
push
mov
cli
and
gs
mov
out
jb
mov
ins
mov
popf
jne
in
jmp
ror
xor
pop
outs
loop
lock
loope
cwde
ret
out
pop
sahf
popf
dec
int3
jbe
add
sar
add
arpl
xor
push
outs
popf
cwde
movs
lahf
or
add
ret
jl
out
push
push
jb
jmp
sbb
and
js
cwde
or
mov
dec
cld
aad
sbb
pop
popa
movs
sub
movs
loopne
call
mov
idiv
jmp
mov
sahf
add
std
xchg
shl
dec
pop
mov
cmc
pop
cmp
(bad)
(bad)
xlat
dec
rcr
pusha
arpl
je
or
cs
fs
and
and
adc
push
retf
dec
jae
push
push
fmul
mov
daa
popa
(bad)
mov
stos
call
cmp
sub
stos
mov
push
mov
mov
call
aam
fst
loopne
pushf
sub
cli
(bad)
inc
adc
fdiv
and
jecxz
jmp
retf
cmp
popaw
mov
stos
stos
xchg
adc
xchg
jmp
sub
xor
mov
dec
pop
mov
pop
movs
cwde
mov
in
mov
shr
loopne
inc
bound
cmps
loope
push
out
jl
int3
fnstsw
movs
mov
dec
adc
cwde
retf
sbb
in
or
cmp
cli
div
xor
inc
fistp
push
inc
cld
dec
cmp
mov
mov
ffree
or
fadd
pop
add
push
and
push
int3
and
sbb
jno
retf
lods
xchg
pushf
xor
or
fwait
aam
xor
addr16
mov
cmp
xchg
je
fsub
mov
pushf
in
sub
sbb
xlat
(bad)
mov
data16
int
pop
dec
fmul
into
popa
retf
add
and
xor
push
outs
lods
cwde
mov
sbb
sbb
pop
jecxz
push
inc
jge
mov
inc
pusha
fisttp
cmps
pop
mov
dec
sar
add
mov
(bad)
scas
jno
cmps
fsub
call
js
out
jmp
sbb
sbb
sti
test
and
add
lds
mov
xchg
test
jno
ss
rol
inc
and
xor
jge
lahf
lods
mov
aaa
jmp
mov
inc
iret
pop
cmp
add
pop
dec
lahf
dec
or
mov
fdivp
(bad)
cmp
inc
bound
aas
mov
mov
add
std
mov
and
loopne
(bad)
(bad)
jmp
imul
(bad)
lods
mov
dec
add
stos
inc
lock
sbb
jp
outs
ins
mov
or
fwait
(bad)
ror
stos
arpl
leave
push
mov
in
outs
inc
xor
popf
pop
mov
or
mov
xchg
pop
and
dec
mov
js
jg
pop
mov
mov
and
mul
adc
retf
je
sbb
sub
scas
xor
jmp
xchg
cdq
pop
dec
mov
(bad)
dec
pop
xor
retf
xchg
sbb
pusha
(bad)
bndldx
push
sub
mov
fsubr
(bad)
and
rcr
push
sbb
aaa
sub
and
js
movs
ins
sub
mov
das
sbb
scas
mov
mov
or
push
std
xchg
out
sub
outs
retf
add
loop
xor
pop
mov
mov
jg
les
mov
shl
pushf
out
out
pop
ds
popa
int3
push
add
mov
inc
or
fwait
lds
sahf
fimul
cmps
into
pushw
or
ficomp
sbb
pop
ror
cmp
fwait
push
xor
stc
icebp
out
mov
sbb
test
movs
ror
cmp
sub
rcr
test
push
test
lock
mov
jp
sub
cmp
loop
sar
jo
jae
sub
outs
test
sub
ret
movs
int3
das
add
jbe
into
jns
fidiv
push
and
sub
and
mov
pop
jmp
(bad)
xor
or
enter
pop
jns
pushf
push
sti
xchg
(bad)
imul
jmp
cmps
mov
mov
mov
mov
(bad)
cmp
fidivr
int
test
(bad)
jmp
push
lds
jne
pop
mov
push
pop
push
xchg
mov
cdq
dec
or
mov
adc
pop
imul
push
or
xchg
scas
or
mov
mov
lods
jno
mov
popa
pushf
rol
mov
xchg
add
test
push
loopne
mov
sub
repnz
rol
mov
adc
cmp
push
inc
add
sbb
pop
mov
es
call
pop
(bad)
cmp
inc
jmp
sub
stos
or
popf
sbb
test
dec
test
sti
inc
enter
pop
jo
sar
jle
lock
xchg
cdq
pop
pop
push
xchg
iret
push
mov
rcr
xchg
call
mov
icebp
imul
(bad)
leave
imul
sub
mov
shr
jg
sub
xchg
xor
cdq
or
mov
(bad)
fild
mov
and
sub
mov
adc
adc
push
pusha
test
dec
fisubr
add
pop
inc
push
xchg
mov
and
push
adc
into
pop
stos
call
lahf
cwde
lods
cmp
cwde
xchg
fidivr
cwde
xchg
imul
pop
fidiv
push
sbb
cmp
push
mov
jle
movs
lods
mov
cmp
add
dec
pop
add
adc
inc
and
mov
sbb
ja
sub
inc
push
dec
int3
fucomp
and
push
daa
movs
push
cmc
mov
lahf
push
popf
cmp
mov
in
rcl
fwait
pop
inc
mov
repz
lods
shr
mov
in
and
or
sbb
(bad)
jg
pop
jae
inc
xchg
push
and
stos
lods
into
dec
pop
jmp
in
cmc
add
imul
mov
mov
jno
mov
jno
test
inc
pop
ins
mov
inc
mov
mov
sub
jecxz
pminsw
(bad)
fldz
cmp
(bad)
sbb
push
into
push
iret
enter
sub
push
push
push
xor
cmps
ins
cwde
mov
(bad)
fild
add
or
lahf
and
stos
jp
rcr
pop
mov
xor
fdivr
pushf
pop
pop
pop
movs
dec
loope
shr
in
mov
push
and
(bad)
std
je
push
(bad)
sahf
rcl
pop
loop
sbb
(bad)
mov
adc
retf
jnp
sub
daa
shl
jbe
adc
es
sbb
stos
jb
dec
pushf
cmp
(bad)
in
or
adc
add
mov
leave
add
pop
dec
or
cmps
stos
sub
stc
xchg
and
pop
outs
mov
lods
leave
pop
mov
xchg
push
or
jmp
xor
imul
(bad)
std
xor
cmc
clc
xchg
mov
sub
cmp
shl
imul
add
mov
mov
ror
cs
int
inc
pusha
and
daa
add
aas
xchg
psubsw
cdq
or
mov
addr16
cld
pop
xor
addr16
fdiv
pushf
pop
jnp
fst
(bad)
xlat
imul
fdiv
or
inc
or
xchg
cmp
icebp
test
pop
jmp
dec
into
and
sub
lods
sbb
mov
les
fisttp
dec
popa
sbb
or
push
xor
xchg
and
mov
jge
mov
xor
fsub
popa
add
xor
cmps
in
mov
cmp
fmul
lea
ja
leave
mov
cmp
test
mov
out
and
into
retf
mul
push
imul
pop
mov
test
hlt
add
cmp
sub
mov
mov
cdq
ins
cmp
add
sbb
fwait
adc
dec
jge
test
rcl
cmps
popa
jmp
jmp
push
stos
call
test
cli
icebp
out
hlt
xor
fnstcw
jno
sbb
int
in
ss
jle
adc
retf
sub
push
fwait
mov
fucomip
jbe
addr16
sub
push
daa
mov
mov
dec
pop
fmul
mov
jno
mov
cmp
iret
iret
pusha
neg
add
cmp
repz
hlt
mov
xchg
es
bound
dec
add
(bad)
out
in
jmp
jl
xor
hlt
arpl
sbb
add
pop
clc
cmp
or
cs
or
xlat
push
push
jae
ficomp
jle
and
jle
scas
jo
cmps
cmp
mov
cwde
enter
mov
pop
jnp
scas
dec
ret
jns
ret
mov
jb
out
mov
(bad)
lods
stos
neg
imul
retf
inc
dec
out
jb
or
xlat
dec
push
rcr
fs
pop
imul
imul
sub
(bad)
jmp
adc
cmp
xor
pop
jno
nop
or
imul
inc
xlat
push
je
cmps
lods
or
add
fsubr
in
lahf
retf
dec
pop
(bad)
popf
ror
xchg
popa
xchg
xchg
inc
or
neg
mov
add
and
mov
mov
fwait
xor
push
dec
int
(bad)
aas
dec
and
and
jb
dec
out
call
jmp
add
or
stos
inc
nop
adc
sbb
jbe
mov
add
mov
sbb
jmp
pop
(bad)
pop
push
ins
fiadd
lahf
test
fild
adc
icebp
test
xchg
dec
call
add
cmps
cld
adc
hlt
in
loope
cmp
mov
sbb
adc
ds
aas
xor
sub
pop
push
dec
pop
fnstenv
sbb
cmp
or
ds
jle
pop
dec
stos
fs
lahf
xor
shl
add
leave
shl
jecxz
inc
jg
jg
popf
fdiv
mov
cmps
push
adc
sbb
fisttp
sbb
test
xchg
add
sub
xlat
into
stos
cmp
pop
and
cmp
sub
pushf
inc
sub
push
(bad)
cld
das
(bad)
enter
adc
pop
sbb
cmp
cmp
or
mov
push
push
fcmovnu
jmp
out
popa
inc
test
cli
test
jp
jmp
pop
es
mov
sbb
cmp
jmp
pop
inc
mov
xor
sub
cmc
cmc
test
fistp
bound
sub
popa
xchg
mov
es
pop
(bad)
fidiv
call
mov
pop
mov
sbb
pop
adc
pushf
cmp
stc
in
rol
add
js
inc
sahf
pop
in
sub
cwde
je
cli
ret
xchg
pop
xchg
pop
cli
test
jo
movs
mov
and
ror
lea
sbb
clc
jg
push
push
aaa
ins
mov
dec
sbb
lods
nop
into
mov
cmp
jl
fdivr
fbstp
pop
pop
fidiv
adc
xor
ins
jne
push
xor
xor
nop
xchg
cmp
dec
jecxz
loope
xchg
fcom
inc
jp
mov
push
xchg
mov
jle
mov
mov
mov
sub
mov
xor
faddp
xchg
lods
xchg
out
lds
dec
enter
shl
cmp
pop
js
lods
arpl
pop
mov
stos
stos
xor
aam
shr
mov
inc
jne
xor
sub
add
or
push
ins
mov
push
xchg
xchg
test
inc
adc
in
test
retf
imul
loope
rol
lock
rol
xor
je
mov
inc
dec
loope
scas
cs
clc
sbb
popa
js
lods
data16
pop
or
fisttp
jnp
cmp
xor
push
ins
mov
or
jge
lea
pop
and
sub
sbb
cmp
push
lahf
pop
inc
mov
cwde
or
adc
sbb
push
jb
ja
sahf
(bad)
jp
cld
call
test
(bad)
xchg
fs
mov
sbb
xchg
cwde
xchg
std
jmp
imul
unpckhps
jmp
iret
jbe
sbb
inc
test
sbb
fwait
pop
inc
or
mov
pop
int3
(bad)
sub
inc
loopne
push
daa
sbb
pop
adc
pusha
call
xor
mov
mov
popa
jle
dec
sar
xchg
xchg
ss
(bad)
mov
mov
sub
dec
inc
mov
fist
mov
adc
dec
mov
pusha
sub
test
push
lahf
and
out
and
xor
sbb
push
scas
aas
imul
lods
push
mov
push
push
dec
(bad)
cli
mov
icebp
jne
inc
movs
push
fst
jmp
pop
push
mov
lea
lock
mov
ins
pop
xchg
(bad)
mov
mov
loopne
push
popf
call
pop
fst
ret
ds
outs
dec
xchg
ins
scas
(bad)
mov
jnp
repz
test
inc
add
and
or
jae
xchg
or
movs
div
or
(bad)
retf
test
push
push
nop
push
fadd
push
shl
(bad)
push
dec
scas
push
cmps
fwait
and
fisttp
test
stos
xor
sbb
add
and
inc
pop
push
xchg
sahf
mov
sbb
shl
repz
inc
fadd
dec
xor
mov
imul
arpl
or
ret
fild
fimul
cmp
inc
and
inc
cld
mov
stos
daa
int3
push
xchg
mov
dec
jno
mov
xor
loope
(bad)
dec
sbb
xchg
jae
sub
or
das
shr
(bad)
pop
rcr
jnp
cwde
or
mov
jl
mov
in
popa
repnz
xor
pop
fidivr
adc
pusha
add
add
inc
(bad)
dec
add
sbb
aam
xchg
xor
inc
js
jnp
les
inc
(bad)
mov
mov
shl
(bad)
out
or
repnz
out
cwde
scas
test
ins
bound
lods
cmp
xor
xchg
cmc
pop
rcr
fs
test
data16
or
ret
repz
inc
hlt
inc
or
or
and
mov
xchg
xor
xchg
mov
push
push
push
push
(bad)
mov
retf
cmp
jle
loope
pop
loope
add
sti
dec
mov
in
sbb
mov
ds
rep
inc
icebp
mov
imul
in
cmp
cld
jmp
inc
xchg
pop
pop
cmp
js
pop
mov
lods
push
cdq
lock
sub
sbb
xchg
pop
lahf
sub
adc
mov
outs
fwait
mov
out
cmp
ret
pop
std
dec
push
popa
movs
xor
leave
movs
jmpw
add
loope
lea
sbb
sub
fcomp
xor
sbb
and
or
ja
fsubr
and
xchg
mov
call
sub
inc
sbb
sahf
cmp
dec
scas
or
xchg
jl
sar
fsubr
cdq
sbb
pop
mov
jno
mov
jp
out
mov
mov
imul
ret
lods
sbb
retf
test
cli
sbb
sbb
out
pop
fstp
inc
aas
cmp
arpl
jno
or
pop
pop
aad
in
sbb
sbb
inc
das
sbb
or
dec
inc
shl
mov
push
in
xchg
mov
and
je
sub
mov
mov
and
add
lods
jle
mov
fst
scas
mov
xor
jmp
jmp
popa
ja
test
inc
daa
div
es
mov
and
pop
clc
stc
and
inc
jmp
adc
sub
inc
mov
pushf
ss
and
les
hlt
dec
jge
xchg
aad
cmc
arpl
mov
mov
lahf
xchg
aaa
stos
jge
mov
nop
cs
sar
mov
jmp
fmul
add
inc
jmp
inc
cmp
ficom
ins
pop
clc
ins
cs
xchg
mov
scas
push
cmp
ficomp
jnp
jmp
cmp
xor
sbb
mov
jns
mov
sub
mov
aad
pop
sub
inc
call
jae
jmp
rcr
(bad)
repnz
jmp
add
icebp
ins
imul
daa
and
ror
pop
dec
mov
inc
ss
rcl
sub
je
aad
enter
inc
add
sub
jo
xor
ins
jne
push
mov
cmps
ss
jle
scas
mov
sti
pusha
add
and
mov
mov
out
popa
push
xchg
retf
jecxz
mov
fcmovbe
sub
and
(bad)
cmp
mov
push
sbb
repz
(bad)
(bad)
sar
push
sbb
push
mov
ret
dec
xor
es
inc
bound
std
cmp
add
pop
out
fs
inc
add
ins
pushf
test
add
ins
mov
jge
std
test
jmp
add
shr
mov
add
aam
stos
test
jae
mov
sbb
adc
icebp
fld
push
add
call
adc
and
call
inc
sbb
cmp
in
jp
mov
aaa
cmps
adc
test
cmp
outs
(bad)
daa
sbb
clc
adc
inc
mov
push
fnstsw
and
pop
mov
jnp
lods
mov
mov
aam
(bad)
ins
clc
add
mul
inc
inc
xor
push
mov
and
test
sbb
pop
push
pop
sub
pop
add
jl
mov
mov
test
sub
cmps
xor
sbb
jmp
dec
sbb
pop
mov
mov
adc
stos
mov
repz
pop
mov
aad
stos
sbb
sbb
sbb
sub
add
mov
push
popf
dec
cmp
mov
sub
stos
pop
std
(bad)
ds
test
imul
mov
daa
aad
jnp
jb
mov
add
adc
jmp
(bad)
pop
out
inc
es
pop
loop
cwde
bound
nop
jb
ins
mov
fwait
jge
lahf
and
outs
lahf
ficom
test
out
jmp
xchg
daa
arpl
inc
test
inc
jne
inc
es
mov
mov
add
jmp
popa
jno
fist
pop
pusha
add
jmp
mov
test
pop
in
xlat
lea
pop
or
xrelease
mov
rsqrtps
dec
loopne
mov
and
lea
stos
mov
pop
xchg
sub
clc
loop
pop
mov
stos
daa
cmp
rcr
fld
push
jo
inc
mov
pop
pop
jne
les
dec
(bad)
enter
jbe
inc
xor
or
push
mov
sahf
push
sbb
mov
inc
adc
sbb
outs
popa
sub
pop
repz
dec
cmps
jmp
fdivrp
xchg
jp
outs
mov
imul
xor
outs
pop
scas
xor
bswap
int3
loopne
inc
push
and
adc
sbb
mov
mov
sbb
inc
test
sub
fadd
jnp
sbb
pop
inc
fldcw
test
mov
cwde
int3
xchg
cs
in
jo
dec
pop
mov
pop
mov
xchg
or
in
mov
test
mov
stos
xlat
repz
inc
mov
adc
mov
add
mov
pop
jge
dec
cmp
movs
into
mov
add
arpl
push
sbb
cmp
cmp
jmp
pushw
mov
add
xor
lahf
cmps
add
jl
imul
(bad)
stos
fisttp
push
fld
mov
aam
fwait
cwde
sahf
scas
xor
test
xor
fsubr
sub
jns
jmp
jp
jnp
cmp
aaa
into
jmp
jo
cmp
mov
push
mov
and
pop
clc
mov
ret
push
or
mov
sbb
lahf
jnp
mov
mov
mov
imul
pop
xlat
mov
mov
add
jge
xchg
pop
lods
mov
and
int
clc
mov
fdiv
in
pop
fmul
cmp
int3
mov
sub
adc
lea
jo
mov
sti
push
stc
adc
xchg
dec
ins
add
out
sbb
sbb
mov
push
lea
arpl
call
jg
popa
inc
push
fwait
je
mov
inc
in
xchg
jb
mov
or
mov
mov
popf
in
mov
xchg
arpl
sar
(bad)
pop
jp
ret
inc
shl
and
ror
lock
call
pop
pop
mov
call
iret
call
fs
fst
sub
fistp
mov
cld
add
push
ins
xlat
retf
mov
imul
jae
fwait
jmp
push
jecxz
pop
sub
loopne
lods
mov
pop
sbb
dec
mov
push
or
dec
retf
add
sbb
push
fwait
mov
cmp
adc
sbb
jl
pop
mov
mov
mov
jp
mov
sbb
xor
cwde
rcl
leave
adc
push
xchg
pop
rol
sahf
push
popf
pushf
pop
pop
(bad)
xchg
inc
pop
sbb
mov
call
dec
call
mul
jge
or
lea
jns
pop
inc
imul
lock
ror
pop
inc
hlt
aaa
ss
adc
cmc
pop
xchg
adc
inc
data16
inc
xchg
push
mov
and
call
or
imul
dec
fld
(bad)
dec
xchg
fild
sbb
jecxz
pand
mov
jg
nop
xchg
test
aas
loopne
cmc
scas
sar
imul
inc
(bad)
das
(bad)
sub
sub
ret
ss
add
mov
pusha
or
mov
leave
or
les
retf
rcr
ja
jmp
ss
iret
inc
dec
test
rcr
outs
in
fcom
popf
repz
mov
inc
and
sub
mov
xchg
adc
(bad)
mov
mov
addr16
stos
gs
jmp
sub
pop
dec
fdiv
neg
pop
jae
pop
fild
or
mov
shr
and
inc
fst
add
outs
gs
pop
stos
aas
xlat
jge
fidiv
xchg
dec
add
lods
mov
leave
out
mov
test
jge
cdq
sub
xchg
cld
jnp
jmp
popa
icebp
loope
push
shl
popf
sub
dec
xchg
sahf
stos
in
add
arpl
movs
repz
cld
fadd
jmp
xor
jg
or
adc
sahf
inc
sbb
stos
mov
out
pop
retf
mov
inc
inc
add
mov
and
push
call
sbb
mov
jne
sbb
shl
std
inc
add
sub
lahf
idiv
xchg
popa
(bad)
call
retf
fs
(bad)
gs
jmp
imul
mov
sbb
sar
stc
arpl
mov
jns
pop
xchg
leave
pop
shl
and
xlat
outs
outs
inc
out
adc
add
push
out
pop
outs
mov
add
and
call
add
sahf
dec
call
retf
xchg
cmps
jbe
leave
cmc
lahf
rcl
mov
jle
mov
mov
and
std
nop
into
xlat
outs
pop
cwde
mov
cmp
adc
rcr
rcr
and
inc
mov
nop
(bad)
mov
(bad)
jecxz
xchg
shl
inc
pop
sti
cmp
push
add
add
pop
icebp
push
inc
scas
or
mov
in
in
mov
jge
xchg
and
enter
loope
sbb
jecxz
adc
inc
xchg
lea
btr
clc
lock
jl
lods
fadd
dec
mov
add
out
sbb
js
outs
jnp
sti
push
sbb
xchg
pop
loope
sub
jno
jmp
imul
xor
push
mov
dec
cmp
mov
pop
out
(bad)
ds
movs
push
xchg
add
(bad)
mov
neg
add
loope
mov
inc
mov
dec
icebp
ss
sbb
or
sbb
cmp
sbb
imul
mov
fwait
out
sbb
sub
sbb
ins
(bad)
imul
mov
ss
cs
stc
mov
inc
(bad)
pop
ins
cmps
dec
jmp
dec
out
mov
jmp
mov
cmp
push
inc
mov
sti
adc
sbb
(bad)
mov
in
sub
cmp
outs
mov
pop
bound
pop
mov
std
mov
mov
dec
dec
pop
cmp
pop
mov
jae
push
je
jbe
retf
mov
sub
mov
out
jne
rcr
mov
or
arpl
repz
mov
loopne
xchg
loope
repz
jg
call
test
(bad)
loop
fs
leave
xor
adc
aad
daa
les
inc
fs
cmps
es
idiv
ins
mov
int
sbb
test
mov
push
push
jp
cld
cmp
jne
fs
mov
mov
pop
xchg
iret
mov
mov
inc
aad
jne
shl
xor
xlat
popf
ins
jecxz
jb
icebp
mov
mov
test
dec
(bad)
push
bound
jmp
push
dec
test
repz
loope
mov
sbb
or
jnp
dec
or
mov
icebp
jle
vfrczpd
inc
inc
inc
pop
das
js
cmp
lods
jb
aam
jne
(bad)
std
xor
or
or
adc
jns
mov
cmp
mov
shr
xchg
adc
push
sti
mov
inc
mov
ret
icebp
loop
dec
mov
scas
dec
pop
or
into
mov
jnp
sahf
sub
call
sahf
or
rcl
cmp
adc
and
xchg
and
mov
jg
fst
not
xchg
dec
mov
jge
jns
popa
mov
fs
leave
popf
adc
in
adc
mov
lea
jp
pushf
sub
rol
shl
ds
stc
test
and
mov
dec
das
or
mov
shr
cmp
(bad)
pusha
and
adc
mov
mov
mov
popf
dec
add
adc
js
test
dec
orps
dec
mov
mov
(bad)
sahf
jge
fdivrp
mov
lods
xchg
xor
stos
xor
neg
push
mov
pop
clc
push
in
push
sub
mov
js
push
or
and
xor
mov
mov
sti
hlt
push
stos
retf
push
adc
inc
jmp
cmp
jg
mov
je
test
and
fsubr
dec
leave
mov
inc
push
jl
ins
test
inc
out
in
cld
in
pop
in
ret
mov
adc
mov
stos
aad
jo
xchg
movs
(bad)
clc
dec
repnz
cmp
inc
jns
cmp
xor
movs
ror
xor
sub
sti
sbb
loop
xor
sub
jb
lea
stos
mov
aas
neg
test
(bad)
(bad)
jp
outs
inc
jns
push
sti
sbb
jecxz
out
out
stos
pop
adc
fcomip
add
dec
xchg
stos
pushf
out
lods
pop
push
mov
sti
shr
mov
dec
call
sub
les
cmp
and
inc
sti
inc
push
jbe
movs
lea
dec
push
or
ds
je
xchg
cmp
mov
mov
inc
call
ret
inc
enter
sbb
lods
pop
aad
std
imul
in
aaa
(bad)
sbb
stc
stos
(bad)
xor
sub
icebp
pop
inc
mov
cmp
pop
(bad)
push
add
imul
lods
mov
icebp
sbb
aad
jo
and
xor
inc
and
loop
sbb
adc
or
sub
or
sti
xchg
cmp
out
pop
(bad)
arpl
add
ret
lock
pop
fld
scas
push
ret
fs
xchg
(bad)
test
retf
mov
fidiv
pop
sbb
dec
xchg
(bad)
fild
es
jle
rcl
dec
xchg
inc
mov
movs
mov
daa
iret
pop
out
or
pop
sbb
push
sub
sub
sbb
lea
test
push
mov
cmps
push
or
xchg
aad
inc
test
add
sbb
shl
cld
jle
in
out
retf
or
mov
mov
lahf
sbb
mov
js
rol
mov
cli
outs
dec
sahf
fnsave
dec
rcl
cmp
fdivp
inc
cli
add
cmp
add
cmp
jne
or
mov
iret
inc
sti
cmp
rcl
sbb
mov
cmp
js
mov
js
xchg
aam
xchg
add
pop
dec
mov
xchg
les
cmc
mov
sbb
test
push
inc
test
out
call
test
leave
xor
dec
ss
(bad)
fsubr
jg
push
pop
and
adc
xchg
aas
jns
mov
fmul
shufps
dec
add
mov
xor
sub
jb
mov
adc
xchg
sti
adc
cmp
ficomp
mov
loop
hlt
pop
popf
ret
loop
pop
or
cmps
xchg
pop
icebp
jns
loope
hlt
inc
mov
lods
aas
cmp
lock
in
sbb
fwait
dec
jmp
fidiv
add
scas
sub
xchg
xor
jle
mov
call
mov
cmp
or
sub
sbb
std
sbb
call
mov
addr16
les
repnz
inc
pop
mov
jp
(bad)
xchg
jg
add
test
test
cdq
cmp
sub
les
loop
inc
xchg
push
(bad)
aad
call
mov
inc
sbb
fstp
inc
lahf
mov
inc
dec
call
sub
add
push
xchg
cmp
jns
mov
pop
xchg
mov
pop
das
cmp
cli
mov
mov
sbb
jp
inc
mov
xor
mov
pop
xchg
cmps
dec
sub
shl
stos
(bad)
pop
pop
xchg
cmps
repnz
jmp
ins
pop
jecxz
xor
outs
into
cmp
ss
test
push
lock
dec
sbb
sbb
dec
mov
mov
popa
(bad)
fbstp
mov
sbb
push
popa
jmp
jae
mov
push
mov
xor
stos
mov
cmp
stos
cs
sbb
mov
mov
add
mov
fs
movs
stos
mov
pop
out
rcr
xchg
ficomp
dec
pop
push
jmp
fsub
inc
scas
imul
sar
loope
sbb
cmp
pop
or
mov
mov
xchg
mov
add
push
inc
shl
jecxz
pop
pop
scas
jo
add
mov
mov
std
fnstcw
movs
xlat
sbb
test
xchg
clc
cmc
pop
cbw
xchg
pusha
(bad)
cmp
cmp
pop
push
push
xchg
pop
xchg
dec
icebp
mov
fnstcw
lock
mov
inc
adc
xor
jbe
cmp
sbb
mov
dec
xchg
cmps
loope
adc
in
cld
mov
add
fstp
xchg
arpl
stos
inc
xor
in
pop
xchg
dec
mov
ffreep
adc
cmp
xchg
ret
add
xor
adc
ret
push
jmp
pop
sbb
sbb
cmp
lahf
push
or
jl
mov
add
push
add
xor
ja
add
icebp
inc
or
outs
cmps
mov
or
add
int
xchg
cmp
dec
jl
sahf
pop
enter
mov
mov
adc
scas
xchg
in
adc
mov
icebp
rol
inc
(bad)
outs
hlt
sub
lods
(bad)
xor
aaa
imul
cmc
jp
repnz
dec
jl
cli
dec
cmp
add
ins
adc
js
mov
sahf
movs
mov
xchg
call
push
cwde
jne
daa
test
retf
cmps
stc
aas
jecxz
test
pop
(bad)
icebp
mov
mov
mov
call
xor
adc
dec
in
sub
sbb
popf
or
aas
jnp
sti
xor
jnp
mov
scas
and
fadd
(bad)
pop
adc
inc
call
cmp
sub
mov
add
xchg
neg
add
push
or
jne
dec
jns
test
test
fld
out
movs
dec
xchg
mov
icebp
rcr
mov
repnz
mov
pop
(bad)
clc
repnz
xor
push
out
cmps
sub
xor
ror
inc
cwde
and
or
mov
data16
pushf
les
inc
call
add
add
inc
sbb
sbb
outs
adc
push
pop
mov
adc
dec
jle
icebp
pushf
xor
sar
outs
data16
test
arpl
loopne
(bad)
out
mov
lods
xor
pop
sbb
xchg
sbb
ret
adc
arpl
aam
fld
scas
adc
dec
(bad)
shr
pusha
dec
fwait
ins
adc
stc
cmp
fwait
lds
test
or
aam
dec
arpl
and
jns
sub
jo
mov
fnstsw
add
mov
stc
mul
rcr
outs
cmps
fstp
call
out
sbb
pop
mov
mov
repnz
(bad)
jecxz
stos
sar
cmc
lods
jbe
cs
pop
sub
nop
xchg
repz
fstp
push
bound
data16
out
int3
cdq
or
into
push
mul
mov
xor
and
mov
sbb
or
xchg
inc
call
and
mov
sbb
addr16
mov
pop
test
mov
(bad)
icebp
scas
pop
xchg
jne
mov
inc
jle
xchg
xchg
repnz
repnz
retf
mov
out
cs
cld
stc
and
add
inc
movs
cs
cmp
push
xchg
ret
out
inc
sahf
rcl
div
add
rol
inc
sub
xchg
and
or
cmps
sbb
stos
mov
fdiv
mov
(bad)
rol
ins
pop
push
lds
xchg
cmc
inc
loop
mov
sub
jecxz
push
xchg
pop
add
mov
adc
jmp
push
neg
or
hlt
fcmovu
inc
rol
pop
jge
lods
pop
jp
xchg
xor
dec
test
pop
test
xchg
pop
imul
cmp
inc
push
js
or
and
pop
dec
movs
pop
add
dec
inc
mov
add
pop
mov
push
les
sub
ins
and
ins
enter
rcr
adc
jp
mov
add
cmp
sar
cld
(bad)
jnp
mov
popa
nop
push
fdivr
pop
daa
iret
cld
loopne
jecxz
jo
ins
fsubr
pushfw
push
sub
xchg
sti
retf
fild
xor
lods
and
outs
pop
stos
or
mov
gs
mov
cmp
fdivp
mov
sub
fistp
mov
mov
nop
inc
adc
aam
cmp
dec
mov
fmulp
xor
imul
div
nop
fdivp
pop
push
scas
popf
inc
leave
inc
cli
xor
push
shr
pusha
inc
cmps
xor
stos
sahf
adc
repz
or
inc
pop
inc
fld
popa
xor
in
cmp
fisttp
mov
fwait
outs
add
push
call
out
inc
arpl
inc
ret
jb
fisttp
sub
retf
loopne
xchg
in
in
mov
add
rcl
bound
sahf
lahf
jo
push
cld
cli
int
cld
inc
push
or
push
addr16
mov
pop
push
out
mov
xchg
aaa
sbb
sahf
sti
je
push
xor
inc
add
addr16
sbb
dec
mov
pop
xchg
adc
scas
mov
jne
and
iret
leave
loopne
mov
jb
inc
jno
fmul
mov
and
mov
icebp
or
icebp
dec
cwde
jp
lahf
cmps
lods
push
cmp
clc
xchg
out
sar
cwde
lahf
xchg
push
(bad)
xor
sub
out
ja
push
fld
jbe
outs
or
ret
int
xor
ror
(bad)
loopne
adc
lds
adc
add
jns
popf
or
popf
or
mov
retf
stos
xchg
das
retf
cli
gs
mov
mov
xchg
popf
sbb
int
mov
(bad)
fstcw
mov
sti
mov
out
fs
xchg
dec
mov
or
into
int3
lock
retf
inc
pop
push
jno
xor
sub
lods
mov
(bad)
dec
stc
ficomp
adc
inc
or
ror
push
(bad)
cmc
ss
(bad)
inc
mov
mov
sbb
inc
call
jmp
inc
retf
mov
loop
mul
imul
icebp
jl
mov
dec
sbb
ficom
out
test
sub
adc
dec
out
(bad)
icebp
js
xor
sbb
clc
ss
movs
retf
scas
lods
sub
adc
xor
daa
addr16
pop
dec
mov
cmp
sub
jg
leave
movs
inc
(bad)
jmp
lock
and
jno
aad
ins
out
mov
xor
div
daa
fiadd
(bad)
in
cwde
pop
push
mov
out
ror
cdq
cdq
imul
xchg
inc
add
inc
dec
cli
dec
and
xchg
cmp
in
jp
lock
inc
aam
adc
adc
mov
mov
cmp
mul
and
stos
and
(bad)
rol
jmp
jg
repnz
mov
sbb
cmp
test
bswap
lds
mov
out
cmp
inc
shl
push
pop
stos
addr16
test
xor
repnz
xor
pop
imul
push
fcomp
mov
pop
mov
mov
cld
iret
cdq
dec
mov
jle
cdq
and
xchg
dec
jecxz
jb
aad
mov
fwait
jecxz
ret
mov
mov
mov
or
fs
push
add
jg
pop
push
jl
fdiv
dec
push
sahf
pop
pop
dec
mov
rcr
idiv
mov
push
ja
adc
push
imul
shr
inc
sbb
ds
mov
mov
sbb
fst
dec
addr16
pop
xor
push
fnstsw
mov
arpl
lods
fcmovne
push
mov
jecxz
xchg
sbb
cwde
jmp
sbb
mov
dec
and
(bad)
into
iret
dec
in
add
cs
add
out
cmps
ror
(bad)
(bad)
retf
jns
inc
push
clc
sub
pop
or
or
xchg
pop
cmp
pop
jge
movs
cmps
sub
popa
retf
add
je
inc
fisubr
sti
popf
fldcw
cmps
outs
fadd
cmps
xor
inc
mov
ja
sti
test
mov
fild
jecxz
xor
aaa
cmp
(bad)
pop
or
dec
adc
bound
xchg
dec
shr
test
jns
inc
aas
out
sbb
addr16
mov
xor
jp
mov
dec
mov
mov
cmp
sahf
xor
pop
sub
fdiv
ret
ficomp
mov
xchg
mov
inc
cmps
enter
sar
out
leave
rcl
and
or
cmp
enter
ss
and
mov
push
xchg
bound
dec
cdq
mov
loope
cmp
clc
inc
popa
add
sbb
sub
(bad)
je
mov
ins
out
sbb
fistp
test
movs
jl
nop
fnstsw
stos
pop
fsubp
sub
pop
repnz
mov
adc
pop
add
fsub
scas
out
(bad)
inc
jnp
lahf
aaa
in
in
or
mov
stc
inc
ficom
imul
fwait
ins
add
popf
push
aaa
fadd
shl
mov
sbb
les
push
cmp
xor
jge
mov
inc
mov
test
sbb
arpl
(bad)
cdq
pop
mov
sbb
outs
push
push
mov
out
mov
pushf
inc
call
jecxz
psllq
lods
xor
xchg
test
adc
jmp
mov
dec
pop
cmp
cli
aas
add
inc
mov
inc
or
sahf
inc
cmps
pop
into
frstor
mov
or
xor
or
sbb
and
adc
imul
xor
ins
and
dec
(bad)
cmc
call
stc
fs
lds
cmp
jno
pushf
inc
aaa
(bad)
mov
lea
dec
xor
mov
cli
pop
push
mov
fcom
sbb
stc
out
leave
imul
movs
xor
jmp
test
pop
call
mov
repnz
dec
or
xor
and
mov
arpl
daa
js
fadd
jp
arpl
cmp
mov
jl
test
repnz
and
test
and
stc
pusha
pop
in
xchg
jnp
imul
push
xor
sbb
ins
pushf
daa
inc
pop
pushf
xor
jg
xchg
mov
rcr
push
sahf
aad
jo
or
xor
pusha
or
mov
repnz
(bad)
jb
mov
add
and
cmp
iret
push
retf
outs
(bad)
push
xchg
mov
cmp
mov
cmps
sahf
sahf
loope
test
jo
xchg
mov
(bad)
outs
ja
test
ins
lods
inc
pop
sbb
in
pop
loop
dec
sbb
sub
xchg
jo
ins
mov
sbb
js
out
sub
loope
push
jns
mov
xor
scas
inc
push
xchg
mov
and
fisttp
shl
lods
dec
aam
jecxz
xchg
mov
jecxz
pop
into
mov
neg
jp
test
lods
add
sti
(bad)
or
adc
mov
sbb
fsubrp
leave
pop
fimul
xor
xchg
push
cmps
mov
xchg
adc
les
fisub
add
leave
xor
pop
and
mov
jnp
shl
mov
je
mov
out
jmp
pop
cwde
not
sbb
dec
(bad)
pusha
xor
je
retf
aad
cmp
push
sub
pop
addr16
xchg
out
js
div
movs
jmp
mov
sbb
not
mov
cmp
lahf
or
pushf
push
inc
imul
retf
mov
cmps
jp
cmp
jno
and
or
sbb
pop
dec
lods
push
div
jecxz
sbb
retf
push
pop
add
push
test
imul
aam
xor
je
cmps
mov
add
and
jmp
mov
pop
int3
dec
sbb
jmp
dec
or
das
jns
test
xchg
sbb
aad
test
jbe
jno
iret
imul
xor
dec
dec
fimul
into
inc
outs
mov
sbb
leave
jmp
std
dec
popa
ja
xor
fwait
call
push
hlt
mov
hlt
xor
mov
mov
and
out
iret
sti
pop
sbb
test
push
rcl
add
mov
je
in
sub
out
les
sbb
sar
adc
and
jmp
leave
jo
js
mov
push
mov
xchg
add
dec
retf
add
jo
test
mov
push
sbb
push
(bad)
loope
adc
clc
inc
mov
xchg
ror
mov
not
add
retf
jae
lods
movs
push
(bad)
ins
lds
or
int3
add
push
mov
dec
jbe
fs
pusha
mov
and
je
mul
test
cmp
or
pushf
add
mov
adc
mov
mov
stc
out
call
fstp
js
push
in
clc
dec
mov
mov
add
retf
lods
add
sub
mov
test
mov
in
dec
add
call
pop
fs
and
mov
pusha
shl
add
sbb
dec
cmp
and
mov
dec
dec
fdivr
mov
jg
movs
mov
xor
fsubr
cdq
das
iret
xchg
sbb
sbb
push
mov
and
popa
and
mov
mov
imul
hlt
cmp
into
loop
js
pop
fisttp
cmp
push
rcr
sub
or
and
mov
ss
outs
ror
jns
call
lds
sbb
es
or
mov
inc
lods
xchg
stos
sub
aaa
push
shl
in
inc
mov
data16
jecxz
jecxz
pop
adc
stos
mov
lods
sub
mov
xchg
xor
repnz
hlt
push
pusha
stos
test
cmp
clc
push
iret
xor
sub
xor
jb
mov
leave
dec
cmp
pop
int3
(bad)
sub
and
sbb
or
jp
xchg
mov
arpl
vmwrite
test
pop
hlt
pop
inc
sahf
dec
rcr
dec
cmc
mov
xchg
sti
jg
sti
mov
sub
xor
xchg
in
retf
dec
mov
out
sub
ror
enter
jne
fs
pop
sub
mov
out
(bad)
ror
add
add
inc
sbb
imul
or
add
pop
lahf
shl
sub
mov
inc
xchg
ret
out
inc
adc
xlat
dec
cmps
xchg
(bad)
xlat
dec
mov
daa
xor
xchg
enter
mov
rol
push
dec
jmp
stos
fs
push
jae
jns
or
pop
popf
dec
or
or
sbb
dec
fs
adc
add
or
sbb
inc
fwait
adc
dec
daa
sub
scas
nop
cli
push
add
lock
pushf
sbb
sub
jne
into
lock
loopne
jg
icebp
stc
sub
pop
mov
dec
fs
repnz
push
retf
out
fnstsw
pop
xchg
fstp
dec
enter
enter
fst
jp
jns
sub
add
add
cmc
pop
(bad)
sar
add
sub
lods
pop
lea
mul
fild
lods
push
mov
fs
mov
retf
push
mov
cld
scas
fidivr
xlat
loop
jmp
jae
cmc
cmc
stos
or
jg
mov
mov
(bad)
je
lahf
ficom
cdq
icebp
les
mov
cmp
imul
shl
push
fiadd
xor
ins
add
mov
fcomi
or
sbb
mov
scas
jo
dec
inc
fidiv
lea
sbb
jae
(bad)
sahf
add
mov
inc
gs
sub
(bad)
fdivr
cmps
mov
jne
mov
mov
xchg
sbb
mov
(bad)
lds
mov
test
mov
fimul
and
stc
push
pushf
push
inc
add
cmp
mov
les
jge
fdivr
xor
mov
imul
pop
lods
push
inc
stos
adc
xchg
aam
aaa
add
jge
(bad)
mov
loop
push
dec
fimul
(bad)
xchg
in
mov
xlat
call
(bad)
pusha
mov
mov
lods
mov
jmp
ret
inc
mov
(bad)
es
dec
out
push
and
scas
aas
inc
jg
xor
mov
(bad)
std
jnp
int3
js
jno
loopne
push
add
and
sbb
imul
test
or
lods
xchg
xor
pop
sub
push
icebp
test
iretw
mov
sub
loopne
and
cmps
iret
or
dec
add
sti
lods
scas
test
stos
mov
or
aam
aam
lahf
ss
inc
(bad)
adc
push
mov
mov
jecxz
pop
mov
push
inc
je
loopne
push
add
mov
nop
ja
sbb
jl
mov
pop
mov
mov
sbb
icebp
adc
retf
pop
pop
ja
jle
mov
mov
push
retf
xor
test
ins
cmps
cdq
mov
adc
loopne
rcl
jnp
jmp
std
or
or
repz
push
iret
adc
nop
ins
cmp
lds
inc
fsubrp
jns
rol
and
cmp
push
jbe
stos
add
xchg
inc
add
sbb
mov
cmps
add
adc
out
sahf
adc
adc
jg
push
test
movs
push
in
call
fiadd
std
xchg
clc
push
sbb
movs
popf
sbb
xchg
lock
pushf
pop
aad
lods
dec
pop
sbb
shl
or
fsub
and
xchg
mov
dec
and
ret
push
inc
pop
lds
es
jb
scas
or
mov
fs
mov
sbb
sti
xor
and
enter
mov
or
fiadd
xchg
xor
and
leave
fsubr
cdq
mov
or
mov
sub
inc
pop
test
dec
xchg
mov
test
pop
in
out
sub
into
jge
jns
int
imul
add
add
popf
sub
push
out
mov
xor
pusha
push
mov
call
stos
out
(bad)
pushf
jge
ffreep
mov
jmp
cmps
jnp
xchg
nop
mov
(bad)
fiadd
mov
push
sbb
mov
jo
inc
jl
rol
cld
push
adc
mov
and
pop
call
jle
fiadd
js
cmp
pop
stos
cs
ins
pop
mov
inc
movs
(bad)
pushf
aas
push
or
ret
stos
mov
ficomp
xor
dec
out
jl
test
div
sbb
mov
pop
xor
jmp
lea
adc
pop
(bad)
xlat
call
sub
das
fs
cli
xor
dec
lods
movs
xchg
mov
in
idiv
in
add
and
mov
mov
aam
jns
outs
adc
sub
rol
jmp
inc
loop
popa
push
sbb
sti
fs
xchg
add
retf
mov
fwait
fs
scas
fsubr
adc
xchg
xchg
daa
cmp
fbstp
ja
adc
cmps
adc
cmp
(bad)
test
loopne
or
mov
je
push
test
jmp
iret
(bad)
movs
out
push
push
push
jge
sbb
retf
mov
inc
mov
scas
aas
and
retw
stos
mov
jnp
push
nop
dec
retf
cdq
lds
loop
inc
hlt
mov
mov
xchg
adc
pop
dec
xchg
aam
in
ror
xor
outs
int3
das
and
mov
ret
inc
je
imul
push
pusha
stos
xchg
mov
or
arpl
and
xor
and
ds
and
sbb
pop
pop
xchg
inc
lods
sub
mov
or
ret
inc
aam
add
pop
loop
shl
jmp
ins
aam
pop
add
nop
pop
repz
shl
add
ds
fistp
xchg
mov
sub
cmp
mov
jp
daa
add
scas
adc
pop
push
jb
retf
movs
xchg
xor
in
pop
retf
pushf
mov
pop
add
xor
jge
sbb
aas
(bad)
jne
inc
jne
dec
sbb
xchg
scas
outs
inc
or
inc
(bad)
call
jg
dec
popf
mov
xchg
inc
rcl
or
pop
hlt
test
pop
inc
xchg
jmp
leave
call
dec
leave
gs
sub
hlt
out
js
sbb
jl
mov
pop
je
bound
out
xchg
xchg
pushf
and
repnz
adc
imul
retf
dec
jno
dec
pop
movs
xor
test
xor
arpl
sbb
mov
pop
call
cdq
jp
out
call
repnz
mov
ret
sti
mov
out
into
aam
inc
sahf
mov
push
or
jmp
cld
jbe
and
jp
adc
push
jge
xchg
mov
add
std
outs
loope
or
inc
sbb
jno
test
pop
arpl
je
test
xchg
aad
sbb
dec
mov
cmp
jno
clc
mov
xchg
mov
dec
pusha
sti
stos
and
icebp
repz
fs
cmps
ins
out
cmc
dec
inc
xor
fidiv
pop
and
outs
popf
jnp
or
sub
pop
loope
seta
mov
and
dec
ins
fwait
pop
xor
cmp
mov
int
out
stos
aam
ret
pop
ins
(bad)
fdivr
sub
test
sub
xor
shl
sub
sbb
mov
mov
loopne
lods
(bad)
dec
jge
lods
imul
jb
or
or
mov
rcl
ds
retf
jnp
fbstp
stos
xlat
jl
push
cmp
push
imul
ds
sbb
mov
jae
nop
in
adc
ins
in
cmps
xor
push
inc
mov
pop
mov
mov
out
or
in
xor
inc
div
mov
adc
sbb
add
mov
retf
pop
sbb
push
mov
and
test
jbe
cmp
sbb
push
lods
ins
pop
ins
mov
push
fcomp
fild
fwait
jmp
push
fs
cmp
cmp
pop
jbe
dec
inc
rol
outs
lods
cmps
mov
(bad)
jmp
bound
movs
dec
cld
mov
mov
xor
ret
xchg
jg
sahf
mov
imul
mov
fld
inc
mov
jnp
sub
cmp
jmp
jl
test
inc
pop
pushf
imul
stos
cmps
mov
adc
stos
pop
retf
test
mov
sbb
shr
lods
dec
or
sti
(bad)
push
push
icebp
mov
xchg
ja
push
fstp
test
addr16
mov
mov
mov
adc
popa
dec
mov
(bad)
ret
xchg
test
test
les
pop
or
jmp
pop
loopne
ja
jns
aaa
jl
sti
cmp
push
mov
sbb
jo
fadd
pop
cmp
cmp
dec
jae
mov
or
inc
stos
xor
call
loop
xchg
add
jp
popf
dec
fsub
loope
into
mov
hlt
setbe
fcomip
or
mov
loope
div
std
pop
imul
sub
loope
hlt
(bad)
enter
outs
mov
imul
ror
sahf
aam
mov
cmp
push
cmp
ds
xchg
pop
aad
push
test
aaa
sbb
pop
push
cdq
out
adc
pop
pop
push
mov
cmc
mov
mov
and
xchg
imul
push
js
sub
outs
mov
jb
sub
in
rcl
pop
in
pop
inc
cmp
cmp
and
popf
mov
ja
mov
test
jns
pop
sbb
adc
aaa
iret
dec
dec
(bad)
jbe
mov
jno
xchg
adc
pop
pop
jmp
shl
jg
pop
test
jp
out
mov
sub
int3
pop
mov
fdiv
mov
stc
fucomp
cmc
in
sbb
fimul
inc
ficom
cmp
mov
or
imul
pop
outs
jmp
sbb
push
jne
sti
sbb
bound
and
cmp
push
out
bound
jae
(bad)
dec
ins
lods
mov
loopne
sti
inc
fwait
mov
sbb
inc
fmul
jmp
loopne
xchg
mov
mov
enter
mov
cmp
jl
xchg
ret
or
shr
mov
scas
sub
jp
add
aas
test
inc
push
popf
imul
mov
sbb
pop
(bad)
stc
add
sbb
or
push
out
popa
je
pop
and
scas
xor
sub
in
sbb
ja
outs
jb
test
(bad)
fidivr
(bad)
mov
push
pop
movs
adc
ja
mov
out
xor
mov
adc
aam
test
dec
jne
popf
dec
xchg
dec
enter
rcr
jecxz
les
push
add
jb
xor
mov
sbb
ret
xor
cmp
inc
adc
and
push
fisttp
mov
mov
add
xor
pop
jg
ins
fstp
out
aad
addr16
xchg
add
mov
cmp
popf
hlt
add
ret
retf
push
fs
stos
inc
aad
cmps
or
out
mov
inc
mov
push
dec
inc
mov
push
stos
(bad)
cdq
pushf
pop
xor
sbb
ficomp
pop
pop
ret
xor
adc
adc
dec
push
jmp
(bad)
dec
(bad)
push
arpl
or
pop
dec
jmp
mov
mov
scas
adc
cmp
je
mov
lock
daa
or
shl
hlt
push
(bad)
cmp
jo
ins
push
jbe
pop
pop
or
cmps
into
mov
cmps
sbb
sar
fwait
retf
push
retf
pop
cmp
and
stos
jl
xlat
sbb
popf
mov
out
xchg
add
je
dec
(bad)
mov
xor
adc
inc
add
add
and
lock
or
js
daa
and
pop
repz
sub
cmp
(bad)
movs
mov
in
leave
sbb
in
data16
mov
sub
add
inc
(bad)
rcl
jb
aad
imul
jb
fnstcw
ret
jle
pop
sti
movs
xchg
mov
push
xor
push
cmc
sub
jl
int
test
fistp
dec
lahf
lods
outs
repz
push
pop
or
push
pop
cmp
xor
mov
cmp
mov
add
pop
jmp
inc
pop
add
in
or
imul
fwait
push
cli
inc
jns
jnp
lods
and
sar
imul
and
dec
pop
jp
push
les
mov
add
not
mov
sub
test
lods
loope
jp
mov
fdiv
push
push
out
out
rcr
push
je
outs
mov
dec
jp
imul
xchg
mov
cdq
adc
mov
push
or
in
jbe
or
stc
dec
sbb
fs
sbb
je
push
inc
mov
xchg
pop
push
in
(bad)
outs
cvttps2pi
leave
xchg
nop
shl
bound
pop
scas
jp
mov
pop
mov
test
repz
setno
cmps
cli
mov
xchg
mov
ret
(bad)
jnp
mov
xor
sub
mov
enter
jge
cmp
pop
jbe
fldenv
in
fidiv
mov
add
or
jl
add
adc
push
inc
mov
lea
(bad)
fcom
mov
mov
sbb
imul
je
mov
and
push
(bad)
jmp
lods
in
movs
sbb
shr
adc
cmc
stos
loop
jo
loop
pop
in
fild
das
(bad)
repnz
jnp
xor
adc
movs
dec
pop
jns
stos
mov
or
sahf
test
push
cmp
sub
push
adc
mov
dec
(bad)
dec
push
mov
pop
js
aam
xor
fst
sbb
and
loope
movs
int
imul
jbe
xchg
repz
xchg
jl
mov
jo
call
cld
enter
ret
xor
pop
or
test
sub
inc
jo
dec
fmul
push
das
sub
mov
mov
sahf
loop
mov
pop
aad
ds
or
lods
pop
scas
add
dec
push
xchg
dec
inc
xchg
sub
xor
push
pop
popf
iret
xchg
cmp
dec
jns
jle
ret
lds
lock
aad
inc
add
sbb
fsub
mov
jmp
cmp
push
out
push
or
mov
daa
popa
test
inc
inc
and
mov
mov
push
int3
or
mov
arpl
fadd
arpl
and
sbb
fnsave
jo
mov
adc
ds
test
test
popa
pop
mov
mov
cmp
stos
dec
sub
mov
cmc
mov
add
sub
(bad)
push
stos
mov
and
ror
inc
mov
jbe
push
mov
sti
push
shr
xor
sbb
add
inc
jne
sahf
cmp
jne
push
sbb
or
cmps
cmp
mov
jns
jmp
push
push
inc
xchg
dec
fisubr
mov
sub
gs
mov
stos
xor
dec
dec
add
push
add
jmp
cdq
inc
in
push
cld
retf
xchg
dec
fisubr
pop
and
test
dec
fwait
hlt
push
mov
inc
ret
pop
and
and
push
mov
dec
xchg
dec
push
mov
clc
jno
pop
ins
fcmovnb
mov
in
pop
mov
nop
xchg
mov
test
daa
(bad)
jo
inc
call
pusha
call
xchg
out
sti
js
in
sub
stc
(bad)
push
ror
inc
jge
ror
pop
xchg
arpl
jp
nop
mov
ds
les
fimul
in
jno
ja
mov
arpl
sub
or
push
inc
fsubr
fcom
ins
mov
cmp
lods
loop
(bad)
jbe
and
dec
test
mov
sub
in
mov
jp
mov
movs
add
out
jecxz
test
jo
lahf
mov
out
cld
sbb
test
imul
and
inc
es
xchg
mov
std
jp
ret
sbb
add
xor
or
add
outs
dec
rol
xchg
inc
je
mov
add
or
call
inc
dec
dec
lds
xor
(bad)
sub
sbb
or
dec
add
loop
cmc
mov
es
pushf
fidiv
fwait
je
sub
mov
rcr
xor
jb
add
cmp
push
fwait
into
push
inc
jp
jmp
and
sub
sbb
arpl
or
int3
and
sar
push
jle
ins
ficomp
cwde
fs
xchg
pop
or
cmps
mov
out
mov
les
(bad)
mov
ret
jmp
lds
outs
in
fst
gs
call
mov
int
inc
sbb
adc
xor
xchg
jmp
int
cmp
sbb
cmp
pop
and
pop
jns
dec
and
adc
call
test
lds
mov
jp
in
pushf
push
xchg
lahf
jnp
out
mov
lock
jecxz
call
add
imul
mov
retf
xor
daa
sub
imul
movs
adc
cmps
cmp
jbe
xchg
mov
ss
dec
(bad)
sbb
mov
sub
pop
inc
popf
dec
cmp
pushf
adc
push
popa
les
inc
fidivr
lods
sub
sbb
xchg
rcr
cli
cmps
mov
cli
stos
scas
or
cld
ss
cmc
lods
jmp
rcr
push
das
rcr
(bad)
inc
add
pop
add
jne
xor
jmp
scas
iret
and
fmul
add
pop
sbb
or
ins
push
test
mov
push
(bad)
mov
ins
(bad)
not
jmp
movs
fisttp
shl
cmp
lock
or
retf
pop
inc
loope
xchg
sub
retf
out
sbb
lds
push
fdivrp
stc
push
popf
cs
and
sub
and
gs
mov
out
int
mov
xor
push
ds
and
pusha
addr16
addr16
mov
stc
sbb
push
cmp
ror
retf
inc
mov
inc
mov
xchg
add
shl
mov
sbb
fsubr
sahf
xchg
cmps
sbb
mov
mov
shl
fsubr
ss
shl
and
cmp
je
push
adc
mov
sub
push
clc
and
int3
jge
inc
and
daa
aas
pop
sbb
cmps
pop
jb
jp
mov
dec
mov
xchg
cmp
(bad)
cmps
and
hlt
je
inc
pop
(bad)
ficomp
xchg
(bad)
js
rcl
push
(bad)
rol
sti
les
loope
mov
xor
xlat
cmc
fdiv
pop
dec
in
xchg
data16
scas
adc
pop
fild
ins
inc
and
je
pop
mov
cmc
pop
sahf
ficomp
mov
push
or
(bad)
cmp
jnp
pop
jecxz
mov
push
xchg
movs
scas
test
inc
and
mul
pop
xchg
aad
in
inc
jb
push
mov
test
dec
out
std
xor
bound
scas
inc
inc
xchg
clc
mov
(bad)
addr16
je
cmp
cmp
shl
inc
pop
xchg
fs
test
sbb
test
in
ins
cli
sar
repnz
jge
add
dec
sub
sbb
sbb
mov
push
lea
js
(bad)
loop
popf
cmc
jno
dec
data16
sub
pushf
or
mov
mov
mov
push
mov
xchg
adc
repnz
stos
(bad)
inc
inc
mov
jmp
mov
(bad)
and
pop
test
adc
outs
scas
sahf
mov
jecxz
or
or
push
sbb
mov
scas
jae
dec
adc
test
cmp
retf
test
xchg
retf
add
mov
(bad)
cmps
retf
inc
mov
int
push
cmp
lock
inc
mov
adc
cmp
xchg
fmul
sub
enter
lock
pop
and
cwde
push
dec
jnp
ss
test
inc
loope
adc
and
arpl
dec
inc
fstp
mov
mov
dec
mov
lods
mul
pop
add
mov
call
stos
mov
pop
mov
jbe
cwde
mov
repnz
mov
div
cs
std
pop
jb
inc
rcl
inc
sti
jb
pop
pushf
fisttp
jle
fistp
xchg
fld
push
adc
pop
push
jae
and
inc
push
fwait
push
add
cwde
(bad)
or
std
lahf
and
sub
jg
nop
std
aas
loopne
mov
xor
fisub
(bad)
frstpm(287
dec
lahf
addr16
mov
mov
pushf
lods
dec
in
cmc
sbb
test
add
pop
lahf
sbb
mov
add
cdq
int
or
jmp
mov
add
xor
push
and
pop
imul
fwait
xchg
sbb
add
jmp
out
sbb
jg
xchg
enter
stos
jg
mov
pop
fisubr
lods
mov
push
shrd
(bad)
cdq
push
outs
push
jo
push
sub
cmc
out
(bad)
inc
rol
pop
scas
cmp
inc
pop
cdq
mov
icebp
jle
shr
mov
inc
cli
xor
jbe
mov
rcl
js
imul
ds
in
mov
sbb
aas
rcl
cmp
dec
ins
mov
cmp
out
arpl
or
fidivr
mov
pop
push
lahf
xchg
(bad)
mov
fidivr
jmp
(bad)
push
push
dec
fadd
jo
inc
mov
inc
or
mov
retf
pop
out
shr
or
stc
adc
and
stos
pop
stos
shrd
push
lods
into
cmps
sbb
xor
retf
add
push
push
(bad)
xchg
mov
fnsave
xor
fst
lahf
fwait
int
test
pop
call
mov
test
add
cs
mov
fs
add
and
mov
push
fucomip
add
mov
xor
pop
int
hlt
jle
or
dec
push
mov
push
inc
hlt
neg
test
and
inc
xchg
sbb
mov
cmc
mov
stc
push
mov
loope
mov
inc
cld
test
lea
xor
cs
test
jl
movs
pop
sbb
sub
mov
aad
pushf
int3
sbb
(bad)
js
add
int
adc
outs
sbb
stos
push
push
sub
(bad)
test
vmwrite
mov
sbb
mul
movs
sbb
mov
div
mov
fcmovne
or
xchg
jl
mov
xchg
cli
jmp
dec
rcl
and
xlat
fbld
sub
jno
jo
push
mov
xor
and
jmp
add
pop
jno
or
pushf
cmp
test
ror
adc
ins
fcomp
cmps
jecxz
out
stos
pop
int
push
add
dec
lods
std
mov
jp
ror
ret
jp
stos
inc
iret
jle
sub
push
fld
sti
es
and
je
inc
and
mov
xchg
push
ds
sbb
push
dec
push
add
adc
adc
jge
sahf
or
mov
dec
call
push
jge
iret
loopne
mov
pop
mov
pop
movs
jno
cmps
xlat
jp
fucom
inc
xlat
jmp
fcom
mov
dec
pop
fwait
mov
lods
icebp
ficomp
lea
or
dec
in
stc
jmp
mov
inc
pop
je
mov
mov
test
das
xor
bound
xor
adc
jnp
cmp
scas
xchg
pop
js
scas
mov
test
add
push
inc
jp
jg
mov
mov
inc
in
pop
push
in
test
lea
jle
xor
pop
mov
fisttp
sbb
icebp
ret
inc
fnstsw
push
push
pop
cwde
jno
pop
div
imul
call
mov
adc
jo
mov
jle
mov
jne
mov
ds
test
icebp
je
pop
pusha
and
inc
test
call
ret
adc
rcl
inc
pusha
scas
sub
dec
mov
fs
jmp
dec
rcr
inc
test
cmp
mov
fcmovnb
xor
out
or
cmp
sbb
stos
dec
add
sub
pop
cmp
mov
into
cld
jno
inc
push
lea
mov
adc
test
and
sti
test
push
jmp
mov
sub
pop
shl
mov
cmp
sub
dec
mov
xchg
arpl
repnz
and
inc
push
sub
test
pop
arpl
add
fsub
sbb
xor
mov
leave
fstp
pop
inc
bound
js
aad
push
leave
stc
scas
ja
push
mov
mov
dec
scas
cdq
cmc
and
test
test
xor
push
cmps
dec
or
in
aam
jns
sbb
push
inc
push
lods
push
cmp
pushf
mov
(bad)
xor
pop
out
cmp
inc
sub
sahf
and
ret
cmp
mov
xor
enter
(bad)
ja
addr16
jle
jbe
iret
jmp
inc
mov
gs
in
xchg
sbb
xchg
mov
pop
iret
cld
lock
inc
mov
hlt
sub
or
icebp
out
js
aaa
pop
sub
outs
das
(bad)
xor
dec
jmp
xchg
retf
fistp
nop
daa
test
pop
pop
push
pop
sub
call
cmp
neg
das
dec
inc
in
mov
into
leave
dec
test
push
cwde
dec
test
pop
push
hlt
(bad)
sahf
cmps
xlat
dec
fsubr
xchg
mov
sbb
faddp
test
mov
cmp
dec
pop
std
add
sub
lahf
or
sub
movs
mov
pusha
fsubr
jl
xchg
outs
dec
popa
cmp
adc
sub
push
adc
push
arpl
cmps
mov
adc
cmps
add
imul
js
pop
mov
inc
xchg
in
sub
or
enter
sbb
mov
out
adc
imul
test
ins
int3
outs
aam
cmp
jae
inc
dec
jle
mov
outs
and
mov
retf
dec
ror
stos
out
dec
push
or
add
sbb
add
sbb
outs
sub
sub
cmp
push
xchg
mov
jecxz
jae
cmc
call
test
fld
inc
nop
repnz
cmp
mov
and
shl
out
pop
int
pop
or
mov
push
pop
imul
stc
push
cld
aad
mov
cmp
push
adc
add
push
retf
pandn
fistp
mov
mov
(bad)
into
mov
fld
sub
loope
mov
mov
cmc
pop
mov
test
mov
in
jecxz
pop
pop
mov
cmp
sbb
(bad)
fadd
xor
push
mov
inc
push
cli
js
push
jmp
inc
(bad)
fbld
add
or
push
and
dec
dec
test
aad
addr16
aam
xor
adc
scas
mov
(bad)
pusha
addr16
pop
jmp
out
sub
pop
lock
sbb
stos
(bad)
adc
push
xchg
test
ror
ins
pop
movs
mov
cld
mov
out
(bad)
jbe
pop
lods
sub
aaa
leave
(bad)
ja
cmp
push
jg
imul
push
sbb
lahf
cwde
lea
(bad)
sbb
fstp
mov
pop
mov
adc
sbb
mov
mov
sub
cld
call
dec
dec
mov
dec
cmps
(bad)
loopne
cmc
xchg
dec
push
fsub
xchg
mov
mov
xchg
loop
stc
lock
mov
cs
or
repnz
sub
data16
mov
mov
xlat
push
in
and
out
jnp
jbe
leave
sbb
jbe
jl
pop
lods
and
jp
mov
adc
aas
add
inc
(bad)
inc
call
lods
jp
mov
mov
enter
sti
movs
test
jp
scas
fyl2x
aaa
mov
mov
test
fistp
imul
or
or
fld
sbb
pop
pop
in
or
mov
push
fstp
cli
cmp
sbb
inc
push
pop
popf
or
sbb
ins
aaa
movs
pop
lods
ror
loopne
mov
jmp
jnp
mov
call
in
sbb
dec
nop
lods
mov
xor
dec
(bad)
jmp
retf
scas
jmp
dec
imul
(bad)
scas
dec
fadd
pop
mov
pusha
push
cmps
inc
or
int
ds
aas
cmps
repz
push
jnp
(bad)
xor
add
and
imul
add
test
fdivr
rcr
pop
test
pop
cmps
out
push
mov
mov
jmp
add
sbb
sbb
fdivr
(bad)
js
cmc
cdq
lds
daa
sub
sti
ret
cmp
js
sbb
inc
xchg
dec
and
xchg
movs
mov
pop
cli
dec
xchg
repz
adc
xor
mov
imul
nop
push
and
neg
adc
mov
fisubr
popa
lods
outs
jecxz
loopne
mov
fwait
jge
xchg
pusha
push
shl
mov
out
cli
popf
mov
push
xchg
call
cld
ret
outs
sbb
fcomp
sub
jns
adc
popa
movs
adc
sbb
test
fdivr
sub
retf
pop
inc
fisub
das
push
push
cmp
pop
inc
mov
sbb
add
test
arpl
call
loopne
add
ficomp
mov
aaa
(bad)
mov
sbb
retf
retf
ret
jae
stos
pushf
jp
and
xor
es
icebp
pop
jecxz
inc
cmp
xchg
inc
es
xor
jl
mov
mov
add
push
(bad)
cmp
fild
adc
pop
stos
sbb
sub
adc
popf
fwait
in
inc
and
cld
jmp
jnp
inc
add
push
mov
xchg
jg
pushf
jnp
repnz
lahf
add
inc
mov
scas
mov
scas
popa
jns
lds
loop
cmp
pop
shl
dec
and
xchg
imul
xchg
mov
mov
out
cmp
jle
clc
adc
inc
xor
pusha
fidiv
pop
add
or
cmp
push
repz
cld
js
rcl
add
cld
imul
jecxz
mov
push
add
(bad)
clc
movs
sar
jno
stos
sahf
inc
aam
icebp
dec
pop
sub
icebp
(bad)
inc
loop
bound
es
ins
pop
imul
adc
int3
jbe
pop
pop
mov
cmp
pop
mov
enter
jg
mov
mov
(bad)
pop
shl
pop
stos
push
icebp
mov
mov
pop
retf
sti
repz
out
mov
mov
mov
test
lahf
jp
pop
call
retf
loope
push
ss
fidiv
sub
mov
mov
in
jle
rol
push
add
in
or
scas
ins
inc
xchg
add
fdivr
aad
push
mov
dec
pop
fstp
xchg
mov
mov
sub
hlt
add
addr16
mov
mov
div
loope
jp
cmps
sub
push
repnz
cld
pop
(bad)
sbb
and
sbb
push
add
popf
pop
fcomp
lea
mov
and
ds
fild
mov
push
cdq
cwde
test
xor
dec
sti
aam
inc
mov
dec
std
inc
jo
sar
mov
mov
jmp
push
push
out
in
pop
loope
test
test
outs
call
mov
(bad)
pushf
scas
xor
push
retf
sub
sar
inc
iret
xor
jns
sahf
sbb
test
mov
jmp
inc
push
push
popa
and
add
dec
adc
adc
cmp
scas
lahf
sbb
test
inc
push
mov
pusha
in
mov
fnstsw
xor
bound
sub
call
jo
mov
push
aam
fld
sbb
pop
popf
pop
dec
ss
add
dec
out
test
jbe
inc
mov
xor
imul
arpl
sbb
cmp
call
sti
dec
add
(bad)
push
hlt
test
inc
mov
pushf
push
push
rcr
mov
xchg
gs
test
add
dec
sti
xor
mov
je
dec
mov
push
sbb
in
icebp
pop
ret
and
mov
jb
pop
xchg
fldenv
add
iret
pop
push
jp
mov
or
pop
push
mov
cmps
dec
pop
test
stc
xor
adc
lahf
scas
call
jmp
and
jle
out
in
shl
pop
jmp
mov
(bad)
dec
shl
in
mov
adc
mov
test
pop
pop
stos
popf
je
sub
aam
lods
ja
es
sbb
mov
inc
pop
pop
mov
and
inc
in
adc
out
push
jne
aaa
jmp
or
jg
inc
push
shl
movs
push
inc
repz
xchg
and
inc
test
xchg
into
out
push
rol
ds
jb
mov
fs
mov
ss
push
push
mov
test
daa
inc
mov
loopne
ins
cdq
stos
addr16
and
shl
add
es
sub
movs
jnp
or
es
sbb
hlt
push
mov
pop
jg
sbb
cmp
add
int3
das
iret
gs
js
xchg
and
stos
jno
dec
pop
in
lods
mov
mov
inc
fnstenv
movs
fnstenv
test
loopne
popf
sbb
imul
mov
mov
leave
test
mov
push
add
hlt
retf
stos
dec
loopne
dec
sub
inc
pop
cmps
bound
mov
push
test
mov
inc
mov
push
xchg
and
jo
jl
scas
or
mov
bound
or
aad
adc
adc
popa
ins
fwait
dec
loop
xchg
mov
inc
xchg
mov
push
xchg
std
div
mov
lods
ja
cmps
xchg
cmc
mov
xor
lea
push
leave
xor
int
rol
sbb
lods
sbb
mov
test
push
cwde
int
movs
out
pop
dec
push
add
sbb
jge
cmp
iret
jge
ret
cmps
xor
and
push
jnp
scas
xchg
cmp
jns
cmps
xor
aam
pop
xchg
cmp
repz
movs
mov
jnp
mov
shl
mov
push
(bad)
sub
xor
lock
jbe
adc
dec
scas
sub
lods
jo
push
in
mov
out
in
arpl
sub
aas
mov
xchg
aas
aam
js
jnp
cmp
in
scas
stos
sub
call
push
repnz
jge
dec
jmp
or
adc
sbb
call
test
gs
xchg
mov
sar
mov
fsubr
test
xor
xor
sbb
sub
and
or
mov
mov
xlat
ins
call
jb
pop
sub
add
jg
adc
pop
adc
dec
add
sti
bound
cmp
cmps
cmps
inc
rcr
sbb
mov
sti
push
xchg
movs
push
or
out
jno
inc
movs
cli
xchg
adc
xchg
das
dec
(bad)
xchg
xor
pop
clc
dec
aas
sub
stc
fsub
xor
outs
xchg
fs
jae
or
cmp
pop
(bad)
retf
mov
pop
or
daa
call
inc
dec
sahf
or
movs
mov
outs
out
mov
mov
jge
push
and
inc
mov
mov
mov
call
(bad)
sub
mov
inc
leave
fidivr
lods
xchg
dec
out
out
das
pop
sbb
repnz
js
imul
cli
push
popa
test
mov
inc
dec
jl
icebp
inc
ja
xor
ss
dec
add
and
jg
pop
inc
shr
mov
adc
pop
pop
leave
out
mov
xchg
mov
sbb
push
fadd
(bad)
sahf
inc
sahf
scas
adc
sub
pop
cmps
mov
mov
scas
ins
bound
fdiv
cmps
xacquire
adc
pop
push
cmp
and
inc
pop
sub
xor
mov
mov
mov
sub
ins
loope
and
sub
and
mov
mov
std
inc
adc
sub
movs
mov
fsub
fstp
pusha
push
scas
sub
test
je
xchg
retf
sti
nop
and
pop
test
movs
hlt
cs
push
jo
mov
and
fld
mov
jae
outs
std
xor
dec
out
rep
daa
clc
xor
ss
mov
inc
mov
cmp
out
mov
out
std
in
jnp
dec
outs
pop
add
sub
mov
test
in
dec
mov
jne
scas
test
cs
div
and
cmps
jo
vdivss
mov
cmc
xor
popa
stos
lahf
mov
pop
mov
mov
and
dec
sbb
mov
int3
push
fsubr
aaa
aaa
shl
test
and
mov
pusha
pop
popf
pop
add
call
cmp
add
imul
or
arpl
push
xchg
movs
fwait
aas
pop
or
or
aam
aad
jnp
shl
adc
mov
or
add
in
out
xor
fcomi
push
mov
stos
add
call
mov
mov
lods
adc
cmc
dec
cdq
cmp
fwait
pushaw
cmp
(bad)
cmps
ret
xor
pop
in
add
pop
cmps
cmp
adc
adc
pusha
push
adc
mov
push
lods
push
out
jge
ins
pop
inc
stos
jnp
test
dec
xchg
rcr
adc
in
pop
int
stos
lahf
mov
push
jmp
fldenv
nop
mov
push
fxch
bnd
imul
test
push
ins
test
pop
lock
in
add
ret
sub
or
pop
xchg
jo
scas
sub
or
jle
aad
add
sbb
push
enter
xchg
xchg
ins
xchg
test
xchg
adc
xor
adc
jmp
gs
mov
dec
inc
dec
lock
inc
rol
cmp
xor
pop
scas
retf
dec
and
jp
xor
adc
add
stos
inc
mov
adc
dec
sbb
add
aam
aaa
nop
enter
pop
pop
cwde
push
adc
pushf
fnstsw
sub
test
mov
pushf
adc
aad
test
call
popa
int3
inc
out
and
loope
hlt
sub
xchg
pop
pop
outs
mov
mov
mov
fs
cmp
js
sbb
push
es
and
mov
or
enter
add
jae
mov
mov
shl
cmps
sub
dec
stos
mov
mov
pushf
pop
add
cld
leave
lock
test
sbb
test
or
rcr
loopne
xor
ds
cmps
xor
dec
ds
mov
es
ret
into
ds
xchg
outs
jge
pop
fiadd
jnp
sbb
or
fimul
or
test
or
push
rcl
fsubr
push
mov
pop
test
call
xchg
inc
or
stc
mov
xlat
bound
test
arpl
test
add
ret
repz
mov
ss
sub
dec
mov
scas
jnp
inc
pusha
jbe
test
jne
pop
stos
xchg
mov
pop
ror
push
dec
sub
pop
arpl
mov
int
int
adc
add
sub
jmp
pop
pop
sub
repz
in
push
xchg
test
into
clc
xchg
jmp
xchg
mov
inc
inc
in
nop
ds
sti
mov
mov
push
push
fimul
pop
xor
std
xor
js
adc
xchg
sub
out
mov
shr
fwait
dec
adc
(bad)
ss
imul
cmp
mov
inc
lahf
lods
test
iret
cmc
movs
es
rcl
jle
dec
cmps
and
call
lds
xchg
ss
scas
cdq
(bad)
jmp
mov
cli
xchg
frstor
ins
retf
sub
and
and
fnstcw
dec
jno
cmp
add
cwde
into
leave
push
cmp
sbb
repz
pusha
cmp
adc
xor
pop
add
es
dec
xchg
scas
std
outs
cmp
jno
in
mov
mov
or
push
not
push
mov
or
imul
inc
call
out
mov
stos
jno
sub
xor
sub
(bad)
push
mov
ss
jbe
dec
add
mov
pop
sub
pop
clc
jmp
call
inc
xor
imul
arpl
imul
add
stos
stos
cmp
out
(bad)
mov
fsubr
cmps
ss
mov
pop
jmp
cdq
jl
fisub
imul
jnp
mov
xor
shr
fwait
mov
dec
rcl
cmp
(bad)
out
jle
push
inc
and
adc
lods
ins
cmp
mov
repz
out
or
inc
mov
xor
or
cmp
mov
sbb
and
mov
aam
pop
mov
mov
movs
adc
xchg
push
adc
int3
push
mov
add
cs
mov
xchg
aad
in
gs
or
jmp
dec
iret
cmp
imul
add
lahf
xchg
mov
int
js
call
out
cmp
jo
and
imul
jle
mov
out
mov
mov
sbb
bound
cmp
loope
lahf
lock
rcr
mov
jmp
mov
fwait
ret
push
popa
xchg
xchg
popf
cmp
ffreep
xchg
lods
call
loop
push
aam
(bad)
or
sub
inc
add
inc
cmps
arpl
jae
xchg
mov
cmp
std
gs
ror
popa
cmp
pop
adc
push
lods
pop
shr
cmps
pop
dec
mov
push
in
lahf
outs
sub
fdivr
in
sbb
fwait
ins
loope
fisub
call
clc
jne
icebp
mov
lods
pushf
(bad)
mov
xchg
popf
test
xor
aad
arpl
stos
push
ficomp
cmp
and
retf
inc
or
cmp
ins
inc
test
pop
imul
int3
mov
enter
fiadd
cmp
cmp
xor
pop
or
je
mov
gs
sahf
cmp
ins
ret
enter
jmp
jbe
pop
test
cmp
inc
das
enter
xchg
fs
cli
xor
cwde
xchg
mov
rep
test
cdq
ret
fs
cmps
sbb
fxch
enter
inc
or
pop
jbe
movs
pusha
and
mov
js
nop
add
adc
adc
loop
mov
(bad)
pop
imul
push
push
jno
lock
cmc
jnp
jnp
jg
pop
call
loop
push
(bad)
aad
xor
sbb
(bad)
mov
sbb
cld
jmp
sub
sub
sub
mov
dec
pushf
inc
inc
push
jo
or
cmp
mov
and
push
fcmovnbe
cmp
hlt
inc
push
xor
gs
sbb
lods
dec
or
div
cmp
pop
test
mov
add
sti
inc
movs
icebp
loopne
in
mov
sub
(bad)
icebp
daa
enter
test
adc
push
add
fist
xchg
aam
iret
sub
add
mov
fs
pushf
cmp
xchg
dec
and
lea
shr
fisubr
sub
push
add
in
xor
imul
mov
stc
push
jae
jbe
fisttp
js
mov
pop
pop
cmp
stos
xchg
pop
mov
add
mov
outs
movs
std
xchg
mov
mov
or
movs
fwait
test
lahf
mov
sub
adc
mov
jae
xor
inc
cdq
cmp
push
mov
mov
aad
fwait
mov
mov
adc
dec
sub
or
dec
or
jns
scas
sub
test
cmp
stos
(bad)
cmp
sbb
(bad)
ss
lahf
ficomp
mov
pop
push
mov
(bad)
or
push
test
mov
fsubr
sti
rol
fld
dec
retf
je
xor
jae
push
push
inc
jp
dec
ds
(bad)
scas
lahf
or
fnstsw
std
push
adc
dec
mov
and
pop
shl
dec
jne
push
mov
jge
fist
inc
js
fimul
into
fisttp
out
fadd
xor
push
mov
dec
cmps
ret
scas
push
xor
push
sbb
jnp
cmp
cmp
lahf
pop
inc
jl
xchg
inc
inc
cwde
push
push
push
xchg
fstp
shr
js
cld
push
jge
adc
inc
push
jb
push
lea
call
inc
aad
pop
movs
mov
cs
cmp
mov
push
nop
ins
inc
mov
cmp
cmps
mov
stos
mov
sbb
or
aad
rcl
jp
mov
or
sub
fadd
inc
or
les
pop
outs
mov
xchg
fwait
mov
pop
sti
ins
(bad)
add
mov
sub
jge
or
mov
cmps
aas
cmp
cld
(bad)
xchg
aas
sub
lods
imul
fistp
movs
jno
movs
pop
sbb
fadd
xchg
mov
push
in
cmps
adc
cmc
(bad)
jmp
test
pop
xchg
test
dec
sbb
in
leave
jo
pop
jo
cmp
jo
jns
sar
int3
cli
push
lds
in
sbb
js
ds
and
adc
push
lods
pop
je
mov
sbb
sbb
test
sbb
adc
shl
push
pushf
mov
xor
clc
xor
lea
push
push
lods
(bad)
mov
and
out
pop
mov
dec
xchg
pop
stc
xor
cli
ror
js
aas
add
and
cmp
mov
sub
test
loope
add
ficomp
imul
daa
(bad)
jmp
mov
dec
mov
sti
and
cmp
stos
in
mov
pop
retf
pop
jne
fldcw
lahf
fnstcw
mov
mov
sub
mov
test
fucomip
or
outs
js
xor
xor
out
(bad)
rol
mov
lods
push
pop
cmp
inc
jge
xor
imul
out
xchg
mov
gs
shr
or
(bad)
adc
and
or
push
pop
lea
inc
test
mov
cdq
stos
mov
stos
int
loope
fs
imul
cmp
mov
arpl
stos
dec
pop
rol
hlt
adc
inc
test
jns
mov
stos
test
or
ds
imul
les
jge
imul
and
mov
lea
hlt
jbe
ret
leave
jle
inc
inc
mov
jnp
daa
test
add
imul
aam
cmp
mov
fcomp
out
lock
loopne
push
(bad)
stos
inc
es
loop
push
xor
sti
xchg
cmps
outs
sbb
(bad)
test
in
fwait
push
add
fstp
leave
push
fwait
sbb
jg
aas
dec
inc
lods
jne
dec
xchg
xchg
bound
outs
push
inc
inc
hlt
push
aas
pop
or
out
or
push
stos
dec
adc
cmps
mov
pop
jnp
idiv
mov
push
mov
pop
mov
out
pop
aad
xchg
or
jne
cdq
xchg
enter
arpl
inc
and
jp
xchg
scas
xor
pop
test
jo
ss
aas
cmp
call
mov
add
add
test
sbb
xor
fstp
fwait
js
mov
mov
in
enter
cld
dec
cli
jg
inc
lods
sub
xchg
ret
dec
test
mov
das
mov
adc
mov
aaa
scas
inc
push
add
xor
loop
(bad)
fdiv
ds
fdiv
xchg
push
scas
cmp
push
fsubr
mov
or
adc
mov
mov
lods
push
push
call
test
jnp
dec
sbb
sbb
push
adc
test
jg
mov
pop
movs
mov
stos
out
mov
dec
daa
test
mov
cmp
in
aaa
std
stos
lahf
add
mov
cs
pop
push
test
mov
shr
xchg
loop
pop
je
stos
push
inc
rcr
or
jne
cmp
pop
dec
fisubr
imul
ror
lock
aas
fld
cs
lahf
aaa
mov
enter
push
xchg
mov
adc
iret
mov
add
jae
lahf
push
fcom
mov
and
cmp
nop
movs
mov
xor
fsubrp
fst
cmp
stos
lods
pop
jmp
(bad)
out
jnp
cmp
push
test
pop
pop
push
dec
pop
out
loop
sbb
pop
sub
sbb
push
adc
add
fcom
and
outs
cdq
mov
fxtract
mov
ret
inc
inc
fild
nop
enter
sub
push
sub
shl
fstp
lahf
sar
loope
jp
cdq
fbstp
jl
wbinvd
sbb
imul
cmp
adc
inc
mov
retf
dec
pop
(bad)
inc
ret
call
pop
pop
jbe
aaa
out
or
mov
xor
mov
jnp
rcr
test
ret
sti
mov
push
add
mov
nop
xchg
mov
pop
mov
mov
pop
xchg
test
in
add
jne
jnp
xor
jmp
sub
pop
pop
mov
ins
mov
cmc
inc
fcmovne
es
hlt
gs
adc
pop
or
and
fldcw
mov
dec
xchg
xchg
cmps
add
dec
dec
pushf
fstp
pushf
jnp
sub
pop
ficom
outs
int
push
xor
xchg
push
cmp
pop
test
ret
call
sub
sbb
shl
arpl
cmp
mov
jo
nop
cwde
mov
(bad)
and
sbb
dec
push
popa
jne
out
es
jbe
pop
push
xchg
or
cmps
xchg
cwde
or
cmc
mov
xchg
(bad)
pop
cli
sbb
jle
adc
data16
mov
cli
mov
test
lea
outs
lods
movs
xchg
icebp
enter
aam
out
sub
sub
repz
cmp
sub
test
pushf
mov
adc
out
add
aam
jb
push
fild
dec
adc
test
retf
and
dec
inc
mov
add
push
pop
fisubr
jne
jbe
and
pop
mov
mov
hlt
push
xchg
pop
nop
and
xor
hlt
xchg
int3
cli
pop
jle
mov
daa
sub
addr16
inc
fs
and
xchg
lods
mov
imul
ins
jno
sbb
inc
sub
cmp
pop
sub
and
and
fldenv
test
push
or
sbb
mov
add
hlt
mov
stos
test
aaa
pop
popf
sahf
stos
outs
pop
add
leave
hlt
cmp
stos
cmps
dec
aad
out
lar
(bad)
pop
nop
aaa
push
jp
fnsave
push
fs
push
push
mov
fiadd
repz
fcmovne
push
push
or
and
retf
mov
jns
sub
les
xlat
sbb
aam
ret
mov
addr16
movs
inc
adc
fsubr
xchg
lods
lds
mov
jno
movs
and
adc
fadd
jmp
(bad)
shl
pop
jge
js
jno
addr16
cmp
fnstsw
push
dec
mov
cmp
cmp
cdq
push
and
cmp
movs
test
popf
cmps
xchg
fdivr
imul
outs
les
fwait
adc
fwait
pop
and
out
rcl
ss
sbb
mov
hlt
mov
out
sbb
sub
dec
(bad)
jnp
pop
shl
mov
out
sbb
repnz
rol
inc
ds
pusha
lea
mov
popf
push
dec
mov
pop
xchg
(bad)
mov
loope
inc
jns
jb
ror
xchg
aam
adc
cmps
add
sub
push
xor
and
lods
dec
lods
call
sbb
test
inc
out
dec
es
fild
imul
ret
cdq
leave
xor
and
push
sbb
pop
and
sbb
fisttp
mov
sub
push
mov
jns
pop
rcl
out
hlt
stos
push
xor
aad
xor
xchg
sbb
call
pop
jp
test
dec
into
dec
ss
out
fstp
inc
add
mov
pop
dec
cdq
push
scas
xchg
cmp
pop
pushf
jmp
xchg
int
addr16
sbb
daa
sub
and
rol
mov
aaa
adc
popa
lahf
cmc
jecxz
mov
or
jl
cmp
jp
int
imul
ficom
mov
dec
inc
sti
test
cdq
fsub
push
adc
push
stc
xchg
jmp
add
pusha
pop
test
es
cwde
mov
or
lods
outs
in
sub
xor
adc
push
sbb
pop
(bad)
sbb
pop
cmp
xchg
std
ins
xor
push
fcmovbe
mov
xchg
fdivr
add
test
shl
sti
cld
cmp
pop
mov
cmps
aaa
fwait
jl
mov
enter
add
test
mov
in
dec
mov
stc
push
inc
or
fldlg2
and
and
pop
movs
imul
cdq
bound
lds
inc
in
xchg
cmp
pop
jp
ret
xor
pop
popf
adc
sbb
dec
ss
cmp
mov
aad
xor
fidiv
add
fist
mov
cdq
push
add
pusha
xchg
sbb
mov
sub
popa
in
imul
pop
and
into
add
pusha
js
cmp
test
sub
mov
jbe
lock
add
sub
dec
xor
pop
xchg
and
dec
adc
jne
mov
cmp
sbb
fld
sar
lds
mov
cdq
addr16
cdq
push
xor
std
repnz
jg
test
js
xchg
fsubrp
ss
jmp
xchg
stos
ins
leave
sub
cmp
ret
(bad)
retf
push
sar
sbb
jno
ins
pop
jb
xor
jl
ret
stos
scas
or
(bad)
pop
repnz
arpl
inc
retf
push
sub
pushf
das
stos
and
push
sbb
cmp
mov
pop
sahf
(bad)
in
mov
jo
push
js
cmps
dec
imul
mov
pop
icebp
mov
mov
arpl
mov
(bad)
div
stos
int
pop
pusha
mov
or
iret
jmp
ins
fnsave
pop
pop
mov
pop
mov
add
inc
mov
add
dec
push
fmul
and
and
fcomp
iret
out
add
fcomp
inc
jae
movs
jno
xchg
jnp
stos
mov
add
test
sub
test
xchg
fstp
push
leave
push
or
mov
inc
cmp
mov
xor
pop
xchg
mov
sub
fistp
cld
in
adc
and
inc
and
adc
xor
adc
xlat
xor
out
mov
pop
hlt
jmp
and
sbb
dec
fbld
mov
pop
out
(bad)
xchg
adc
shr
adc
mul
cld
loope
jp
(bad)
div
dec
sbb
sub
adc
cmp
push
dec
call
mov
inc
shr
and
es
or
adc
adc
rcl
bndstx
shl
aas
mov
push
inc
mov
push
mov
push
out
bound
idiv
std
pop
retf
jl
lods
fwait
enter
bound
jmp
push
add
movs
dec
(bad)
and
and
inc
jb
pop
lea
bound
sub
stos
mov
(bad)
sbb
ret
fdiv
push
mov
cmp
sbb
inc
or
out
movs
test
push
or
fldenv
in
inc
outs
mov
pusha
xor
adc
mov
test
stos
inc
sbb
(bad)
idiv
cdq
pop
dec
lahf
aam
cmc
push
ror
cmp
ror
daa
jle
das
fs
mov
dec
mov
xchg
mov
sub
pop
in
pop
cmps
lock
inc
and
cmp
(bad)
cmp
push
xor
mov
lea
and
inc
fsubr
push
rcr
lea
shl
mov
loop
xor
xchg
pop
lock
push
mov
(bad)
mov
mov
enter
ret
shr
pop
pop
mov
push
jbe
mov
mov
std
mov
mov
jns
push
add
cmp
adc
mov
cwde
xor
gs
fidiv
mov
bound
or
aam
xchg
add
push
inc
fidiv
xchg
fstp
scas
mov
jmp
cld
mov
sbb
mov
and
mov
dec
and
repnz
shl
ja
cmps
cmp
daa
test
imul
neg
retf
adc
and
add
setae
inc
cmp
lea
jmp
int3
jb
jnp
jnp
popa
fadd
call
std
fwait
jne
in
sbb
lds
movs
mov
xor
mov
add
rol
movs
out
test
mov
push
and
ds
sbb
pop
cmp
cmp
es
xor
shl
cmp
adc
aaa
rcr
adc
pop
mov
mov
sbb
xor
dec
sahf
jmp
inc
add
mov
retf
movs
ja
cld
pop
adc
mov
cmc
mov
arpl
enter
aad
ins
or
or
repz
lds
sbb
xchg
sbb
mov
sbb
ins
sar
or
aaa
sub
daa
mov
popf
jb
bound
pop
inc
mov
jp
mov
ds
and
int
sbb
mov
(bad)
popf
xor
movs
jae
jmp
pop
call
lahf
sbb
or
loope
dec
pop
and
ss
(bad)
into
inc
out
pop
cmp
fisttp
popa
jp
inc
pop
pusha
pushf
cwde
(bad)
or
pop
cdq
cmc
cmp
push
call
call
jl
xchg
js
xor
mov
ss
mov
rol
loop
jb
mov
jns
aad
dec
cmc
jecxz
and
ret
inc
mul
inc
ins
test
xchg
nop
mov
adc
stc
dec
enter
jns
sbb
movs
inc
and
mov
inc
fimul
pop
and
sbb
bound
and
sbb
mov
push
jmp
not
cwde
xor
sti
imul
sub
test
data16
mov
mov
scas
jno
jg
add
push
xor
xor
call
push
pop
out
push
ds
repz
lods
inc
lds
addr16
mov
inc
aas
push
sbb
sbb
inc
dec
sbb
in
cmp
addr16
test
dec
cmp
call
cs
cmc
xchg
mov
jnp
ficomp
mov
xchg
xchg
pop
cmp
mov
fwait
xchg
xchg
(bad)
dec
xchg
pop
pop
xchg
(bad)
lods
and
xchg
(bad)
mov
jecxz
xor
dec
lds
cmp
test
dec
sar
jne
dec
fidiv
popa
arpl
pop
add
cs
jns
mov
gs
push
xor
mov
push
jmp
dec
fimul
lods
and
movs
scas
sub
aam
ret
push
and
sub
movs
jmp
xchg
mov
je
stos
push
add
xrelease
repnz
cmps
xchg
pop
ficom
cmps
rcl
push
mov
dec
into
push
retf
pop
leave
mov
push
jle
cs
clc
push
test
ficom
pop
push
retf
imul
fsub
cwde
pop
add
dec
inc
in
rcr
cwde
icebp
call
jg
mov
inc
movs
mov
je
pushf
jb
out
cld
xchg
cmp
mov
xchg
retf
call
(bad)
retf
sbb
jmp
out
dec
iret
add
fs
dec
pop
push
in
les
arpl
fild
movs
iret
dec
dec
inc
and
pop
sub
and
inc
push
nop
push
xor
sbb
in
movs
cld
or
and
loop
mov
jnp
dec
pop
(bad)
fdiv
xchg
cli
push
mov
adc
mov
es
jecxz
xor
data16
mov
mov
xchg
push
inc
mov
int3
cli
mov
mov
int
std
dec
aaa
or
(bad)
idiv
enter
inc
mov
and
in
mov
call
sbb
pop
mov
add
push
adc
jnp
lahf
sub
mov
pop
loopne
mov
pushf
inc
jns
xchg
jbe
cdq
sti
jb
jmp
fsubr
test
(bad)
jnp
lea
push
xchg
cmc
mov
out
mov
pop
cmp
ror
jg
xor
bound
mov
xchg
dec
or
mov
inc
call
xor
pop
dec
xchg
cmps
cmp
sbb
adc
aad
cmp
push
dec
sahf
and
popf
std
inc
xchg
mov
dec
xor
in
or
adc
lahf
mov
jno
mov
push
cmp
xlat
icebp
into
fdivr
jmp
test
or
ror
enter
pop
ss
and
(bad)
lods
aas
sbb
popf
fistp
fnstsw
xor
push
and
inc
shr
inc
pop
fst
cs
mov
cmp
push
(bad)
sbb
mov
rcl
push
fstp
std
jae
pusha
mov
scas
cmc
sbb
xor
fcmovnu
mov
(bad)
push
int
in
adc
fmul
pop
loopne
bound
gs
pop
shrd
hlt
sbb
cld
and
pop
std
sbb
and
retf
dec
gs
push
adc
lods
sub
das
and
fcomp
fdivr
fldcw
fdivr
movs
(bad)
out
pop
ss
call
mov
fcmovbe
sub
inc
inc
cdq
cmps
cmps
add
hlt
aam
push
mov
cmp
pop
mov
jmp
int
push
add
cmps
adc
mov
(bad)
lea
loope
or
mov
ss
jne
sbb
pop
xchg
or
adc
popf
or
les
rcl
xchg
ins
mov
mov
xchg
nop
dec
dec
call
jns
cld
popf
stos
dec
fadd
xchg
xchg
data16
popa
gs
leave
daa
cmp
out
ds
inc
ror
pop
pusha
popf
sub
mov
lods
ds
dec
cli
rcr
ficom
jae
cld
and
push
outs
sub
cmp
test
add
dec
pusha
cwde
xchg
mov
sub
ins
(bad)
neg
ret
dec
ins
jns
push
mov
ds
in
and
dec
push
out
mov
aam
mov
test
sbb
adc
test
mov
xor
jno
cmp
or
test
pop
fiadd
outs
jg
std
push
imul
cmp
inc
(bad)
out
sub
dec
cld
dec
push
aaa
into
adc
stos
xor
mov
push
ins
clc
clc
test
mov
jbe
sub
xchg
sahf
arpl
push
push
shl
test
inc
push
cwde
les
xchg
mov
test
push
push
or
xchg
stc
sti
gs
cmp
push
bound
js
pop
mov
cmp
sbb
inc
push
jbe
ret
aas
add
and
mov
iret
sub
pop
push
cmps
outs
adc
sub
lods
into
fwait
xor
sub
cmps
xchg
add
push
pop
test
and
mov
out
xor
lds
(bad)
mov
inc
mov
aad
cmps
mov
mov
retf
dec
adc
jnp
adc
cmp
pop
jnp
call
(bad)
aaa
and
pop
stc
mov
jecxz
pusha
inc
add
popf
sbb
mov
add
cmp
div
pop
dec
and
push
xchg
out
xlat
mov
mov
out
xchg
scas
mov
sahf
inc
push
sti
ror
rol
inc
sti
dec
jmp
repz
and
jae
sbb
mov
outs
lods
xchg
into
nop
add
call
adc
jp
sbb
inc
inc
mov
pusha
xchg
xchg
mov
sbb
inc
lds
inc
loope
inc
dec
mov
arpl
ret
pushf
inc
aam
add
les
stos
xchg
movs
xlat
xor
std
es
(bad)
call
jbe
jl
adc
inc
clc
repz
(bad)
cmp
fldcw
dec
test
outs
scas
cmps
cwde
mov
push
cmps
pusha
ror
push
add
mov
pusha
pushf
and
mov
jp
lea
loop
fwait
adc
in
push
repnz
push
retf
scas
stc
push
out
mov
sbb
std
mov
div
xchg
daa
mov
cmp
mov
inc
dec
mov
fsubr
add
xor
cs
pop
cli
dec
pop
pop
cmps
fnstenv
dec
fsub
and
mov
or
aad
add
push
mov
mov
push
cwde
retf
sbb
mov
(bad)
arpl
fnstenv
(bad)
loopne
call
mov
xchg
sub
pop
mov
xchg
into
push
pushf
jbe
mov
mov
test
out
push
pushf
test
push
hlt
dec
cmp
pop
std
sbb
inc
lods
pop
arpl
inc
push
ins
mov
mov
jmp
imul
sub
test
push
push
xor
dec
pop
xchg
shl
fsubr
mov
xchg
clc
pop
xchg
jns
sub
or
mov
mov
and
into
pusha
mov
cmps
icebp
pop
lahf
inc
push
out
scas
sbb
sar
or
fldcw
sub
(bad)
sti
retf
jns
ss
sbb
mov
mov
iret
add
loope
(bad)
jle
inc
sbb
adc
mov
dec
dec
scas
outs
add
cmp
cdq
div
cmp
shl
inc
jo
sub
(bad)
push
sar
add
(bad)
or
dec
mov
mov
jb
xor
call
inc
int3
jbe
dec
add
fsub
xor
pop
lahf
js
jg
retf
and
cmps
pop
cdq
shl
clc
add
adc
adc
inc
outs
or
adc
xchg
mov
ins
test
stc
sub
add
retf
leave
in
pop
aam
jb
lds
cmp
sbb
shr
mov
movs
in
movs
pop
mov
push
xor
cmc
addr16
test
fnstcw
aas
push
out
mov
push
clc
xor
and
jns
cmps
pop
pop
push
mov
test
adc
xor
cmp
jge
push
mov
mov
lea
test
movs
add
punpckhbw
hlt
jmp
inc
push
fsubr
std
dec
mov
and
ret
dec
mov
mov
xchg
leave
stos
sbb
hlt
mov
mov
in
push
es
mov
fcomp
dec
or
mov
dec
push
pop
xchg
stos
mov
ret
fdivr
int3
push
jbe
es
xor
pop
mov
je
jg
adc
cli
and
pop
pop
aam
in
shr
je
pop
jge
mov
bound
inc
pop
leave
lock
adc
xchg
ror
js
mov
fiadd
pop
mov
xor
clc
shl
inc
cmp
push
add
xchg
lahf
xchg
xchg
clc
and
push
les
xchg
cmp
dec
adc
inc
pop
out
mov
cli
fiadd
sbb
je
pop
xchg
test
xor
ret
lods
add
cli
cmp
je
loope
mov
retf
jmp
scas
stos
inc
call
mov
jne
sbb
and
and
addr16
sbb
mov
cmp
into
add
fisubr
mov
or
xor
dec
sub
mov
leave
jne
pop
dec
mov
popa
lods
cmps
xchg
adc
test
inc
ins
jl
push
popf
sbb
imul
movs
test
mov
sub
mul
xlat
not
mov
push
iret
outs
retf
adc
enter
les
pop
add
cmps
adc
jne
xor
stos
xchg
xchg
scas
xor
ror
dec
xchg
call
fldenv
sahf
sub
rcr
xor
aam
jno
cmp
jmp
js
pop
movs
sub
or
and
enter
jne
sub
ret
mov
xchg
aad
pop
mov
stos
or
call
and
sbb
sahf
ja
pop
nop
mov
xchg
dec
and
inc
iret
jecxz
xchg
rcr
jb
cmps
or
push
ds
icebp
push
mov
cmps
push
mov
mov
jmp
jmp
(bad)
pop
pop
pop
call
loopne
push
pushf
xchg
jno
shr
stos
mov
pop
push
scas
mov
ret
hlt
in
out
push
jecxz
xor
pop
rcr
stos
jns
inc
inc
add
xor
test
pop
imul
cld
inc
cld
mov
mov
add
xor
daa
add
push
je
cmps
sub
(bad)
mov
mov
push
repnz
pop
push
fdivr
mov
mov
xchg
xchg
pop
es
mov
fwait
movs
xchg
cmp
mov
pop
rcl
mov
fbstp
mov
adc
sbb
in
fsub
aas
fs
xor
inc
aaa
or
sbb
sub
push
in
ss
mov
iret
or
push
cmps
pop
xor
add
xor
xchg
mov
dec
cld
pop
pop
pop
scas
push
(bad)
lods
(bad)
ins
mov
cwde
inc
es
add
into
aas
mov
xchg
mov
mov
sub
or
xchg
repz
pop
add
sbb
test
sub
mov
enter
(bad)
inc
cwde
shr
retf
jns
add
bound
adc
aad
push
lods
or
adc
add
sub
les
mov
mov
mov
mov
shl
test
mov
aaa
mov
mov
sub
jmp
div
push
sbb
out
adc
inc
fdiv
or
cmp
ins
sub
fwait
mov
sbb
mov
adc
pop
dec
pop
stc
sbb
jg
sbb
pop
addr16
jns
test
push
out
mov
popf
lock
or
fstp
jno
pop
icebp
cwde
test
loope
int
add
jne
adc
neg
jmp
fwait
xchg
std
add
ror
mov
into
sbb
xor
in
push
imul
imul
xlat
push
or
dec
cmp
sub
inc
inc
mov
dec
jmp
test
(bad)
clc
les
in
popa
and
cmp
ret
lahf
pop
xor
hlt
sbb
nop
je
cwde
mov
jecxz
aam
dec
sbb
jo
push
cmp
mov
jmp
jns
xchg
js
xchg
or
stos
je
repz
mov
pop
cmc
pop
mov
clc
pop
pop
test
sbb
mov
retf
(bad)
and
iret
shr
dec
lahf
sub
mov
inc
sti
int3
or
loopne
push
mov
hlt
sbb
inc
lods
stos
stos
(bad)
dec
test
push
cmps
xchg
mov
mov
jecxz
jne
ins
jmp
sub
loop
mov
pop
cmp
imul
ins
add
popf
retf
mov
and
dec
ret
aad
add
pop
push
adc
sbb
pop
outs
ss
pop
mov
mov
pop
sahf
mov
cmp
sbb
clc
mov
mov
jno
jp
jp
ins
call
into
in
rcr
lea
in
pop
(bad)
clc
lods
out
mov
mov
enter
fild
mov
out
cmp
xlat
push
fs
sbb
mov
or
sbb
movs
sbb
and
jbe
call
jg
cwde
jg
mov
sbb
push
cmp
in
loope
mov
gs
push
and
popf
enter
mov
pop
test
mov
cld
test
cmp
mov
mov
sbb
(bad)
push
retf
ss
retf
ret
cmp
or
or
lea
jae
mov
into
dec
fucomi
jnp
int
je
cmp
dec
sub
xor
or
or
pop
pop
mov
aad
inc
out
aam
cmp
jp
xlat
lahf
mov
pusha
arpl
xchg
fsubr
adc
loop
jne
data16
test
lods
push
sbb
arpl
sti
cmp
mov
jno
cs
or
in
idiv
and
inc
mov
push
sub
pushf
enter
jmp
xchg
jmp
dec
push
dec
shl
sbb
or
and
fldcw
jmp
inc
add
arpl
xchg
rol
mov
sub
(bad)
xchg
jb
jne
mov
outs
push
cmps
xchg
idiv
cmp
hlt
xchg
test
pop
nop
mov
aaa
pop
cmp
enter
add
ja
cmps
xor
sub
leave
and
rcr
nop
pop
mov
add
add
push
mov
mov
inc
mov
sti
outs
and
dec
fmul
mov
idiv
lea
xbegin
jge
mov
pextrw
sub
shl
cmp
fwait
mov
adc
pushf
mov
mov
sub
pop
aad
and
mov
(bad)
and
popf
cmp
outs
mov
mov
in
popa
iret
fsub
mov
jb
jne
mov
add
cmp
mov
dec
outs
jmp
mov
in
adc
fild
sub
cld
test
loopne
jno
fst
scas
and
mov
call
test
fxtract
jl
mov
out
sbb
int3
test
movs
ins
arpl
sub
mov
cwde
(bad)
push
ds
je
jecxz
test
(bad)
jle
aad
cmp
cmp
fist
retf
lods
scas
dec
inc
or
call
test
jo
inc
call
rcl
push
mov
pushf
cmp
sbb
fstp
mov
leave
cwde
fdivr
ins
pop
pop
dec
xor
dec
pushf
and
fisubr
inc
cwde
dec
pop
outs
in
cmps
nop
mov
(bad)
call
adc
and
inc
jae
and
cmp
fistp
scas
cmp
xor
in
mov
(bad)
sbb
movs
push
mov
test
pushf
call
repz
mov
ror
test
jecxz
shl
hlt
jne
add
pop
fldenv
pop
std
inc
pop
imul
cmc
pop
cmps
mov
popa
inc
clc
outs
data16
lea
or
pop
ins
mov
sub
mov
out
dec
xchg
xchg
pop
out
gs
mov
imul
fwait
jg
in
shl
or
pusha
inc
neg
sub
xor
popf
scas
dec
imul
xor
xor
cli
std
jns
xor
cmp
outs
adc
cmp
xchg
clc
gs
popa
inc
fidivr
aas
sbb
mov
mov
lahf
jnp
(bad)
dec
cdq
movs
mov
fcomi
add
dec
fld
jl
push
(bad)
jae
in
xchg
jbe
call
xchg
push
mov
fistp
mov
sti
(bad)
adc
mov
xchg
outs
jmp
dec
call
fs
mov
dec
(bad)
mov
push
xchg
sar
mov
pop
jmp
cmp
push
cdq
pop
scas
and
sub
fwait
adc
adc
clc
fwait
xor
pop
outs
lds
lea
adc
retf
fdiv
sti
mov
inc
fstp
mov
stos
das
add
pushf
xchg
lods
les
cdq
fdivr
aad
(bad)
pop
pop
xlat
imul
jge
mov
bound
lods
mov
cs
inc
(bad)
out
sbb
fsub
jp
mov
imul
nop
xor
inc
or
inc
xchg
int
xchg
push
popf
mov
jns
js
das
ficom
out
rol
xchg
add
pushf
int
mov
mov
mov
dec
jmp
test
sbb
into
jnp
xor
ins
shr
outs
inc
stc
jne
or
pop
std
jge
stc
add
inc
pop
or
inc
mov
movs
or
into
subps
sub
ret
sbb
jns
test
jb
aam
inc
icebp
out
dec
out
fdiv
xchg
jno
mov
adc
xchg
out
fdiv
push
mov
jbe
imul
(bad)
aam
fistp
fs
mov
aaa
push
jle
popf
xchg
mov
int3
sub
daa
call
pop
mov
int3
cmp
sbb
pop
lea
mov
pop
ret
shl
out
pop
inc
mov
pop
or
popa
xor
sti
mov
mov
inc
mov
ret
enter
mov
push
push
xor
enter
jae
sbb
movs
dec
add
popf
retf
cmp
retf
mov
out
push
pop
jne
mov
or
xor
adc
inc
adc
popa
mov
inc
popf
cmc
loop
call
cmps
ja
xor
xchg
call
jno
into
retf
loopne
mov
jbe
mov
lds
mov
adc
(bad)
sar
sbb
fst
inc
pop
popf
jno
add
rcr
lahf
stc
cmp
leave
jae
push
fdiv
or
cmp
add
addr16
and
hlt
or
inc
and
push
jecxz
out
lds
lods
adc
repz
lahf
gs
xchg
cdq
icebp
xor
faddp
lods
(bad)
cmp
pushf
sub
inc
clc
cmp
push
jecxz
push
pop
pop
stos
jns
jns
popf
xchg
mov
pop
leave
dec
icebp
(bad)
sbb
fimul
inc
je
in
push
mov
xor
or
in
into
test
sbb
test
jo
dec
inc
inc
mov
pop
pushf
mov
sbb
cmps
dec
push
frstor
xchg
test
je
mov
fisub
loop
inc
iret
ss
dec
and
aam
scas
cmp
adc
dec
sahf
xor
dec
sub
ret
xor
int3
inc
fcomi
es
and
dec
gs
or
call
push
stos
or
retf
aas
sub
add
sbb
pop
popf
mov
jmp
sbb
idiv
mov
jmp
mov
cmp
inc
ins
mov
inc
imul
out
cmp
and
sbb
cmps
imul
mov
shr
neg
xchg
shl
pop
cmp
cmp
out
or
or
pop
ja
push
mov
jle
mov
sbb
sar
mov
ins
lds
mov
out
retf
cmp
(bad)
jmp
(bad)
jp
call
les
cdq
fwait
inc
jecxz
out
cmp
fucom
lock
fadd
adc
cmp
xchg
mov
pop
mul
sbb
jl
int
outs
push
cs
cmp
and
sbb
xchg
dec
inc
mov
div
aaa
adc
mov
pop
gs
(bad)
jnp
fwait
lock
mov
outs
call
movs
xchg
sub
js
(bad)
mov
inc
mov
leave
fisubr
mov
cld
adc
sbb
adc
jns
jne
lods
pop
and
jmp
test
sub
hlt
push
int
cmp
mov
add
sbb
push
out
pop
jb
or
scas
xor
xchg
movs
test
pop
inc
(bad)
sbb
in
jle
inc
outs
bound
dec
cmps
retf
in
cmps
push
push
jmp
stos
adc
test
jge
test
mul
xchg
xchg
push
iret
push
int3
inc
sub
and
pop
js
cmp
pop
daa
dec
mov
stos
or
jns
repnz
push
pop
add
cmp
add
sahf
and
xor
push
aam
popa
mov
push
push
(bad)
in
adc
retf
push
leave
pop
add
movs
jno
mov
cmp
out
xor
jne
cmp
mov
popf
add
hlt
cld
mov
fsub
ss
and
retf
(bad)
loopne
clc
inc
add
push
xchg
pop
xchg
mov
cmps
ins
call
add
and
inc
imul
and
pop
mov
pmulhw
cli
das
aas
xor
jecxz
mov
test
push
cmp
xlat
mov
push
out
out
push
mov
ins
mov
int3
in
inc
inc
in
dec
fsubr
iret
dec
out
add
push
cmp
adc
xchg
or
fidiv
lock
loopne
xor
fs
push
test
stos
adc
adc
cmp
push
jl
push
call
pushf
mov
adc
loopne
xor
dec
mov
sar
adc
xchg
xor
loopne
mov
xchg
lods
jns
js
or
or
fprem1
popa
fidiv
jp
push
fbstp
jl
mov
movs
iret
mov
or
jge
cli
push
mov
je
push
cmp
inc
push
je
lahf
cmp
fist
xor
in
lea
ret
fnstsw
ret
and
aam
movs
shl
rol
ja
dec
imul
sbb
in
stos
sbb
(bad)
loope
jmp
mov
jno
dec
ds
shl
xor
cdq
xor
outs
xchg
retf
and
shl
xchg
(bad)
add
pop
sub
jge
movs
or
adc
mov
or
pop
lods
cld
push
(bad)
pop
test
cmp
jmp
adc
clc
mov
xchg
pop
cmps
cmps
rol
adc
js
loopne
std
jl
pop
mov
out
fisub
ins
in
sub
xor
pop
cld
pop
add
pop
cdq
or
push
dec
mov
sbb
hlt
sbb
sub
pop
aaa
imul
xor
sbb
mov
cmp
cmps
mov
jecxz
sahf
adc
(bad)
jno
jnp
and
outs
jecxz
call
add
jmp
add
push
mov
mov
lea
fisubr
scas
fimul
ja
sub
(bad)
lock
xor
sbb
mov
sbb
xchg
jg
leave
jnp
retf
add
cmp
jne
cmp
adc
pop
rcr
mov
inc
mov
xor
(bad)
xchg
sahf
xchg
jb
push
pop
xchg
fdivr
pop
mov
test
xchg
xrelease
mov
mov
push
inc
mov
repz
mov
nop
mov
out
pop
test
sub
neg
out
dec
sahf
sbb
dec
mov
imul
(bad)
(bad)
lahf
push
add
xor
adc
pop
ins
add
sub
pop
jns
push
cmp
xor
pop
int3
shl
in
jne
lods
imul
lock
adc
mov
mov
fcmovne
xor
icebp
xor
ret
jecxz
fs
mov
or
mov
jmp
dec
and
xchg
xchg
lea
jmp
cmp
jb
sbb
sbb
lock
pop
push
retf
mov
call
xor
idiv
inc
add
popa
jmp
sar
ror
adc
mov
cmp
les
lock
aad
pop
cwde
(bad)
dec
mov
or
ss
pop
sbb
adc
or
mov
jmp
fwait
xchg
ins
jb
aas
fsub
push
and
cwde
sub
cmps
pop
aaa
lods
sbb
jno
cs
mov
inc
mov
addr16
fidivr
scas
test
jmp
repz
sbb
xchg
xchg
scas
xor
mov
bound
(bad)
cld
xchg
(bad)
mul
stos
mov
cmp
or
into
call
jle
cmps
sbb
push
cmc
popf
mov
adc
ror
hlt
sub
inc
xor
add
pop
mov
xlat
addr16
mov
aad
push
scas
movs
clc
add
push
addr16
icebp
fwait
aaa
mov
pop
ret
jae
ins
ficomp
mov
mov
mov
into
outs
mov
fwait
out
cmps
sbb
test
(bad)
hlt
test
inc
pop
mov
fcomp
and
out
jle
sbb
shl
mov
mov
arpl
jne
inc
retf
push
ja
sbb
and
pusha
dec
sub
xor
xchg
popf
add
sbb
xchg
add
into
js
jbe
ins
lods
jbe
(bad)
aam
out
test
xchg
pusha
pop
in
cmp
jg
cli
xchg
aad
mov
push
jecxz
mov
adc
div
xchg
movs
addr16
clc
es
inc
shl
je
or
add
push
mov
shl
ret
sub
xchg
dec
adc
mov
pop
jmp
inc
outs
movs
push
sbb
mov
push
pop
dec
fwait
repz
xor
addr16
push
(bad)
fwait
test
out
pop
mov
hlt
pop
retf
mov
pop
gs
and
mov
in
xchg
jbe
cmp
or
xor
dec
mov
aaa
pop
inc
call
pop
fdiv
lgs
sub
jb
jl
or
jb
push
inc
test
test
push
mov
xchg
imul
pop
fsub
jb
jle
pop
lahf
jl
shl
loopne
stos
push
xchg
xchg
jbe
in
loopne
or
inc
mov
scas
out
cmp
pop
add
movs
div
mov
cmps
ja
ins
(bad)
dec
and
mov
loop
sahf
inc
jne
ins
mov
jbe
jl
xchg
scas
(bad)
sub
push
fucomp
jnp
clc
add
fisubr
xor
cmp
jg
jns
cmps
jl
mov
mov
in
shl
pop
enter
fs
jg
xor
rcl
sti
mov
pop
ss
jbe
pop
idiv
pop
xchg
leave
jmp
les
icebp
fidiv
push
daa
push
push
in
xchg
sar
loopne
cmp
sub
mov
mov
test
cmp
jne
inc
iret
add
ss
fimul
add
or
and
(bad)
mov
test
jl
test
mov
mov
xor
aad
adc
ror
je
mov
cmps
cld
push
pop
mov
push
fiadd
cmp
push
fisttp
jge
mov
outs
cmp
stos
into
xchg
sub
jecxz
xchg
add
adc
jbe
mov
test
mov
pop
out
mov
(bad)
fist
jmp
dec
fld
xchg
(bad)
dec
mov
cld
das
fwait
adc
das
scas
dec
inc
mov
xchg
pop
mov
pop
xchg
cdq
xor
jo
sbb
aam
fld
xor
jg
sub
add
retf
mov
push
test
jo
mov
jg
mov
ss
mov
fsubr
mov
inc
sbb
xchg
pop
fldcw
or
jp
ins
lahf
jbe
mov
test
inc
xor
cmps
xchg
cmp
dec
repnz
ja
enter
pop
lods
fisttp
addr16
test
test
push
fwait
push
add
pop
test
pop
pop
dec
mov
mov
out
mov
clc
jns
bound
mov
adc
int3
outs
push
stos
push
push
mov
xchg
push
aaa
addr16
rol
jbe
sub
mov
in
fidivr
lods
xor
inc
mov
rol
sub
or
lock
inc
mov
push
pop
dec
leave
cmc
lods
push
inc
inc
and
mov
push
lahf
cmps
mov
adc
sar
push
imul
xor
call
arpl
jne
mov
addr16
mov
shr
add
sub
fisub
mov
push
enter
jecxz
cmps
cli
mov
pop
mov
mov
cwde
jmp
xchg
imul
lods
dec
or
mov
rcl
jae
inc
ror
pop
stos
jno
jp
mov
mov
sub
fwait
mov
inc
mov
addr16
sbb
jo
jle
mov
add
push
(bad)
(bad)
mov
sar
test
xchg
fldenv
mov
dec
jecxz
push
aad
mov
aad
mov
jge
mov
fcmovnu
test
aam
ja
fild
addr16
xor
pop
(bad)
fdiv
jbe
scas
sbb
sbb
xchg
ret
movs
mov
call
push
xor
xor
push
adc
lods
push
sahf
sub
push
pop
xchg
cmovno
movs
das
xor
dec
(bad)
(bad)
fild
add
push
ror
inc
out
mov
(bad)
push
xchg
lock
stos
mov
add
nop
std
xor
mov
(bad)
stc
idiv
loop
push
inc
rcr
ds
rcr
daa
retf
pop
jbe
aas
movs
or
sahf
jb
dec
cmc
mov
retf
push
xlat
inc
imul
and
call
push
jne
push
pop
lods
dec
pusha
stos
movs
xchg
adc
mov
retf
clc
sbb
and
mov
mov
int3
xchg
popa
push
retf
sub
imul
mov
sub
mov
cmp
sub
call
pusha
cmp
cmp
mov
xchg
mov
inc
cli
jecxz
xchg
pop
arpl
iret
or
pop
jbe
jmp
mov
mov
push
fwait
mov
jge
sar
fbstp
and
das
retf
push
mov
cdq
jo
and
mov
repnz
fdivp
dec
lods
pusha
push
loope
test
lods
aad
popa
inc
icebp
mov
movaps
clc
mov
cmp
push
imul
nop
mov
fs
ret
sbb
(bad)
dec
inc
gs
(bad)
xor
add
mov
out
inc
je
pop
aas
or
in
movs
sahf
pop
sbb
xor
out
inc
lods
fsub
pop
inc
jae
popa
repz
jmp
mov
and
(bad)
and
push
mov
fmul
daa
sahf
addr16
movs
test
mov
mov
mov
cmp
dec
hlt
push
sub
jne
and
arpl
ins
push
push
xchg
movs
mov
xor
cmp
shl
inc
jmp
cmp
fidivr
mov
push
mov
adc
lahf
cmps
cdq
adc
movq
pusha
mov
and
fst
(bad)
out
or
icebp
sbb
hlt
shl
test
aaa
add
imul
add
scas
adc
pop
add
and
cmp
xor
and
add
(bad)
pop
cmp
cmp
xchg
(bad)
not
adc
inc
(bad)
add
ret
push
loopne
inc
inc
mov
pop
jmp
mov
xchg
xor
jg
(bad)
lea
mov
jmp
test
xchg
xchg
ficom
sub
std
stc
lods
fadd
pop
and
sbb
lahf
aaa
pop
adc
sub
add
mov
mov
sub
sub
inc
outs
movs
dec
push
shr
push
mov
mov
xor
ins
loopne
xchg
data16
add
xchg
rol
out
pop
adc
mov
test
xchg
sbb
fistp
lea
sbb
sbb
cld
sti
inc
(bad)
push
fs
pop
mov
xchg
cld
sbb
jmp
jmp
jmp
pop
stos
jae
jae
popf
adc
jmp
fwait
lods
call
pop
and
pop
mov
fwait
lds
xor
sbb
test
out
test
cmc
stc
clc
gs
mov
jbe
adc
loopne
repz
sbb
and
mov
pop
out
iret
cmc
das
mov
add
or
pop
lahf
jle
jle
xor
js
mov
das
sbb
jb
leave
pushf
das
xchg
cld
add
fs
shr
and
add
mov
in
inc
mov
mov
inc
xchg
cdq
mov
movs
loope
dec
sbb
(bad)
aaa
inc
ds
into
pop
(bad)
or
cmp
dec
pop
push
stos
mov
jmp
pusha
outs
or
in
pop
cmp
daa
lea
bnd
test
cmp
push
jp
(bad)
mov
cld
jmp
sbb
test
mov
dec
clc
jbe
(bad)
hlt
push
mov
mov
pop
in
xchg
push
daa
in
lds
lods
scas
jbe
push
out
inc
cmp
jmp
or
pop
rcl
inc
mov
mov
sbb
fnstcw
rcr
sbb
xor
or
sbb
push
stc
pop
jae
dec
add
lea
and
inc
cwde
stos
stos
cmp
int3
dec
fiadd
cmp
inc
mov
out
ss
(bad)
mov
xchg
pop
adc
xchg
and
sbb
push
aad
sub
fimul
dec
jge
lea
and
cmps
lods
mov
add
addr16
(bad)
adc
mov
jg
leave
adc
sub
xchg
sub
mov
dec
jmp
in
mov
rcl
fs
fs
sti
adc
loope
xor
fistp
adc
cmp
fdivr
pop
xchg
pushf
inc
call
(bad)
cmp
dec
mov
arpl
dec
mov
mov
adc
jns
mov
jnp
(bad)
xor
pop
imul
mov
mov
xor
adc
div
fistp
pop
mov
movs
xchg
xlat
pushf
pop
rol
scas
and
push
pushf
pushf
retf
addr16
movs
mov
icebp
aad
jnp
cmp
pop
cmp
out
test
jmp
bound
cdq
pusha
and
mov
mov
sbb
jl
clc
jle
leave
sbb
pop
mov
push
jbe
and
gs
push
adc
mov
jns
std
mov
mov
inc
dec
scas
dec
aam
or
and
stc
lods
push
clc
imul
mov
cli
xchg
hlt
clc
pop
inc
icebp
lods
inc
in
fdivr
sub
fild
gs
dec
sub
mov
lea
pop
fisttp
push
mov
inc
stc
adc
push
or
sbb
jg
sbb
or
movs
dec
jl
xchg
mov
xor
js
popa
dec
popa
lds
out
stc
ins
xchg
out
jae
mov
push
rcr
hlt
jbe
push
cmp
pushf
and
cwde
mov
fldenv
mov
imul
jmp
inc
nop
xor
ins
xchg
cmovg
sbb
mov
in
jge
into
sub
loopne
dec
push
add
adc
jne
imul
adc
neg
dec
xchg
int3
movs
adc
pop
push
sub
in
mov
xchg
mov
push
mov
mov
idiv
mov
arpl
repz
xor
outs
mov
xor
sub
inc
push
or
fld
or
cmp
mov
mov
mov
cmp
mov
inc
adc
iret
pop
sub
mov
popf
or
fs
mov
test
loope
sbb
ds
fld
fistp
dec
cdq
push
inc
cld
dec
xchg
(bad)
push
xchg
popf
or
(bad)
repz
pop
mov
movs
sbb
adc
adc
mov
cmp
faddp
ret
fild
inc
add
es
and
fwait
mov
hlt
pop
call
je
loop
sbb
adc
retf
dec
inc
scas
push
or
sub
add
or
fcom
fs
inc
fdivr
xchg
movs
loopne
pop
cld
loopne
xor
aam
das
out
add
gs
fcomip
scas
int
pop
jl
cdq
imul
pop
repz
repnz
fld
add
popf
or
cs
cwde
mov
or
lods
sbb
stc
jnp
iret
push
push
jnp
out
sbb
push
mov
mov
call
sub
mov
(bad)
xor
retf
push
push
arpl
dec
ret
inc
xchg
add
sbb
sbb
cmps
pop
jno
xor
call
mov
or
xor
in
and
fidiv
inc
pop
mov
movs
rcr
in
push
ret
push
inc
dec
in
jae
push
add
add
xor
push
mov
add
ins
in
les
rcr
jns
movs
jno
or
xchg
cmp
or
out
(bad)
mov
mov
jne
lahf
mov
add
jns
mov
push
push
bswap
fldcw
add
mov
push
xchg
test
popf
mov
push
sbb
outs
imul
xor
pop
push
imul
xchg
mov
test
inc
ficomp
jl
sahf
outs
stc
(bad)
cwde
into
mov
and
jmp
jo
dec
test
pop
nop
mov
adc
mov
mov
imul
jmp
je
push
lds
sbb
fucomip
jge
and
dec
lods
push
push
jge
pop
cs
scas
ret
push
pop
lock
mov
push
ds
push
imul
sub
outs
and
xchg
clc
ins
pop
cmp
mov
(bad)
pusha
pop
dec
fcomp
(bad)
mov
pop
push
clc
(bad)
xchg
adc
pop
stos
mov
inc
push
cmps
test
in
stc
sti
cmp
mov
sub
lock
cmp
cmps
adc
popf
imul
dec
pop
fcomp
stc
ror
mov
adc
cmp
jae
mov
pop
jmp
mov
xor
jno
fbld
jmp
pop
sti
or
out
mov
das
mov
mov
dec
jo
mov
outs
cmp
cwde
repz
cmp
fld
push
repnz
and
out
iret
inc
fisttp
and
adc
cmps
inc
push
imul
shr
cmp
cdq
(bad)
push
dec
inc
sbb
dec
xor
pop
mov
jmp
outs
fwait
or
test
and
jmp
pop
pop
and
imul
mov
pop
enter
cmc
sti
mov
xor
test
stc
mov
test
mov
dec
call
shl
inc
pushf
cmp
push
mov
lds
pusha
cli
mov
push
aas
shl
sbb
out
cmp
jo
fs
test
sub
test
or
fucom
sbb
clc
pop
aad
pop
jnp
and
mov
xchg
addr16
pop
add
gs
cmps
jmp
mov
mov
lods
sbb
aad
cmc
(bad)
cmc
popa
add
test
mov
inc
fsub
jne
pop
adc
nop
mov
aaa
les
jns
mov
inc
cmp
xor
add
pop
mov
imul
jp
movs
adc
bound
push
dec
shr
in
addr16
xchg
dec
jmp
dec
jecxz
bound
icebp
or
clc
dec
cdq
jbe
test
fmul
cwde
cmps
jns
inc
aad
sbb
into
int3
jle
add
cs
cmp
mov
sahf
leave
cmp
es
or
xor
dec
adc
jl
cmps
xor
mov
mov
jmp
sti
imul
fnstcw
call
mov
push
mov
movs
add
jle
stos
stos
cmc
adc
scas
xor
call
xchg
pop
(bad)
sbb
in
cmc
iret
push
cli
ds
sbb
mov
mov
mov
cmp
dec
(bad)
idiv
add
cmp
adc
add
xor
jb
fstp
test
push
test
cli
xor
ret
inc
lods
fisub
dec
outs
inc
fwait
js
xchg
sar
repnz
(bad)
clc
imul
fsubr
lods
mov
adc
mov
mov
jge
aad
aad
icebp
(bad)
and
icebp
cmp
pop
jge
sub
std
jb
popa
mov
fwait
mov
out
in
addr16
jecxz
imul
pushw
add
es
cs
dec
mov
pop
scas
dec
push
not
cmp
les
icebp
sbb
jg
popa
icebp
rcr
in
stos
pop
inc
xchg
and
(bad)
fiadd
pop
add
fcomp
dec
mov
mov
add
(bad)
lock
inc
std
adc
cmp
or
mov
lock
xchg
lock
(bad)
pop
push
addr16
sbb
push
mov
cdq
adc
jmp
adc
add
dec
fistp
mov
pushf
push
retf
jecxz
and
out
xor
pop
imul
ins
jb
cwde
mov
xor
retf
jmp
push
sbb
neg
push
ficomp
inc
and
ficom
dec
lods
aaa
push
bound
adc
es
cmp
jl
fwait
sbb
xchg
pop
adc
adc
lods
mov
jmp
jmp
sahf
sub
je
frstor
mov
sbb
in
mov
sub
cmp
fdiv
retf
pop
call
hlt
lods
dec
jecxz
jo
dec
xchg
outs
inc
cmp
movs
int
sbb
jg
retf
adc
rcr
jg
iret
cmp
addr16
fs
adc
pop
ror
test
(bad)
adc
mov
or
in
test
cmc
push
fnstenv
and
and
jmp
icebp
div
daa
enter
mov
add
in
hlt
mov
mov
call
in
pop
lds
cmp
aas
dec
pop
call
je
xchg
movs
mov
dec
add
xor
aaa
pop
jg
jmpw
and
sbb
mov
sbb
add
cwde
sbb
pop
pusha
pop
shl
movs
mov
out
popf
jb
mov
lahf
jbe
inc
movs
mov
inc
pop
out
mov
dec
fcmovu
lods
leave
aam
arpl
(bad)
sbb
push
xchg
aas
jb
dec
mov
inc
push
push
mov
push
enter
sub
mov
adc
(bad)
dec
ins
or
jle
stos
mov
hlt
stos
cmp
sti
imul
cmc
mov
add
add
fcomi
or
pop
cmps
fwait
mov
out
scas
xor
shr
lahf
push
fwait
gs
and
loope
jecxz
rol
jbe
xchg
adc
pusha
test
sbb
retf
aaa
pop
mov
in
jg
ret
pop
dec
dec
sbb
cmp
xor
xchg
inc
mov
(bad)
mov
jb
nop
and
ins
jmp
stos
adc
push
sub
ss
idiv
retf
out
sar
push
fsubp
xchg
or
push
xor
mov
hlt
retf
popf
pop
dec
mov
jo
push
test
out
(bad)
jae
inc
push
add
cmp
sahf
pop
cmp
(bad)
dec
cmp
je
clc
jle
fstp
or
add
add
repnz
or
arpl
mov
fs
out
inc
xchg
std
add
dec
bound
js
repnz
adc
cmc
std
add
lea
mov
test
mov
jmp
add
and
iret
xor
cmp
push
add
fcom
or
aaa
cld
dec
int
or
cmp
add
inc
imul
sub
add
inc
jbe
jge
pop
push
test
push
dec
stc
mul
ret
inc
movs
jae
(bad)
fsubr
mov
jno
(bad)
jecxz
and
outs
xchg
jnp
in
test
movs
iret
loope
push
icebp
mov
ror
and
out
mov
jns
inc
sbb
ror
inc
xchg
cmp
lea
sar
add
sub
popf
lea
sbb
cmps
sub
xlat
lea
sbb
dec
enter
mov
jle
outs
outs
dec
rcl
scas
loopne
test
out
ror
lods
pop
icebp
sbb
lahf
ins
push
sti
mov
sar
xchg
ins
out
add
shl
je
popa
scas
or
mov
mov
(bad)
inc
fdiv
xor
inc
cli
adc
dec
xor
imul
mov
popf
das
xor
inc
clc
int
add
jg
fisub
fadd
jno
out
jne
out
adc
mov
icebp
and
or
jecxz
jo
mov
repz
(bad)
repnz
cmp
pop
dec
dec
div
push
in
xchg
mov
(bad)
xchg
ret
imul
push
fnsave
mov
gs
mov
or
push
loope
call
lds
inc
lods
jnp
movs
xchg
push
add
fadd
mov
jp
cdq
popf
add
cli
cmp
mov
loopne
out
xor
cmp
fcmovne
pop
xchg
cmp
pop
pop
jnp
stos
addr16
imul
std
ins
fist
inc
dec
mov
gs
sahf
add
dec
pop
mov
add
mov
aas
push
ss
fsub
sbb
jbe
sub
mov
aas
mov
mov
xchg
setno
mov
pop
jae
mov
sub
aad
retf
or
xor
jmp
jns
xor
and
jo
dec
pop
or
sub
imul
dec
bound
int
sbb
jb
mov
sbb
xchg
dec
arpl
and
retf
mov
push
fistp
cmps
sub
(bad)
loope
dec
(bad)
jecxz
sub
movs
lods
sub
popa
xchg
sahf
mov
das
mov
mov
mov
ret
in
aam
out
jno
xor
rcr
mov
sti
pop
inc
or
ins
adc
sbb
mov
pop
les
aam
push
push
aaa
fldenv
xchg
push
lods
adc
jae
cdq
jnp
popf
or
scas
cmps
cmp
jno
fsub
sti
pop
addr16
mov
fs
mov
inc
iret
lahf
jle
fisubr
repz
mov
inc
mov
test
addr16
xlat
push
sub
test
push
pop
jns
push
cmp
mov
repz
loope
inc
bound
out
pop
ins
pop
cmp
adc
jae
cmps
add
mov
ret
rcr
aad
push
and
bound
ja
in
lahf
and
mov
inc
mov
add
pushf
cdq
push
clc
jne
inc
pop
or
dec
inc
lds
sub
mov
inc
mov
mov
test
test
add
inc
aas
push
ja
mov
das
repz
or
aaa
pop
mov
mov
add
cmp
leave
xchg
inc
fwait
mov
arpl
imul
out
xchg
jmp
inc
sar
or
(bad)
fsubr
std
mov
jp
xchg
repnz
(bad)
mov
std
outs
pop
xchg
mov
pop
cmp
xchg
int
fistp
cmp
pop
sbb
add
mov
and
add
dec
pop
or
and
pushf
cmp
mov
ss
inc
test
sbb
int
not
pop
lods
dec
fcmovb
ret
jecxz
fs
aam
(bad)
or
arpl
scas
push
add
mov
and
jge
xchg
mov
cmp
lock
inc
xchg
add
inc
seto
in
add
enter
inc
push
push
and
jae
mov
test
mov
inc
xchg
(bad)
idiv
mov
and
cmc
jle
sbb
lea
xchg
jmp
daa
jmp
stos
popf
cmc
or
dec
dec
lods
mov
xchg
mov
test
mov
xor
jb
inc
mov
rcl
std
jns
xchg
add
inc
in
pop
ins
jae
push
pushf
or
cmp
adc
push
or
sub
mov
enter
scas
mov
dec
addr16
mov
mov
jns
shl
cmp
cld
mov
fwait
scas
lock
sahf
xor
test
lods
xor
nop
mov
dec
sbb
stc
(bad)
sub
inc
jl
xor
push
inc
dec
xchg
inc
and
xchg
mov
call
jp
xlat
inc
push
jb
inc
jp
aas
mov
inc
jb
dec
dec
xchg
inc
stos
test
out
xchg
pop
retf
out
push
gs
arpl
mov
test
xor
shl
mov
ins
inc
mov
inc
mov
shl
or
shr
enter
jae
ins
call
jge
xchg
lods
mov
fwait
cmp
dec
push
sub
inc
adc
mov
iret
add
adc
cmp
or
push
pop
(bad)
call
(bad)
jle
dec
sar
pop
frstor
mov
xchg
sbb
mov
add
ror
imul
pop
int3
xor
mov
cs
ja
mov
lods
push
cmp
popa
(bad)
aam
call
adc
jg
xor
pop
push
mov
add
mov
inc
aam
loope
mov
inc
icebp
js
inc
xor
fsub
mov
push
jmp
inc
adc
mov
sti
call
sbb
hlt
leave
fistp
icebp
or
leave
sub
dec
xchg
jmp
outs
cmps
sbb
mul
pusha
test
test
dec
sbb
dec
iret
nop
jns
ret
inc
push
jno
stc
pop
or
push
lea
mov
shl
dec
pop
test
inc
mov
lea
and
dec
test
or
imul
sub
aam
dec
out
add
frstor
mov
cwde
loope
mov
enter
fdivr
mov
mov
inc
xchg
push
in
cmp
(bad)
inc
add
push
mov
mov
mov
sub
pop
cdq
xlat
push
cmps
xlat
jae
fs
retf
sbb
sbb
jmp
pop
push
lahf
jp
lahf
sub
xchg
fwait
or
xor
fcmovnbe
xchg
cmp
js
movs
push
out
sahf
dec
pop
xchg
cmp
inc
cmp
sbb
scas
xor
mov
fldcw
inc
test
or
jmp
pop
jle
cmp
stos
jae
jne
sahf
(bad)
lods
or
or
and
dec
sub
sub
sahf
xor
push
mov
fwait
add
dec
idiv
call
push
popa
arpl
jne
call
sar
bswap
fbld
(bad)
fdivr
mov
rcl
mov
inc
mov
ss
ins
scas
aaa
push
push
ffreep
mul
fistp
sbb
das
jp
mov
lahf
test
outs
leave
int
test
push
(bad)
cmp
aaa
mov
inc
adc
arpl
and
fsub
mov
xchg
lock
lock
daa
shr
(bad)
fcomp
inc
out
loop
and
loop
aaa
int3
inc
movs
movs
cmps
mov
stos
jle
mov
loopne
mov
fistp
jae
sub
ror
jg
push
test
mov
int3
dec
ret
mov
inc
adc
cmp
add
lahf
and
mov
clc
or
outs
call
jmp
pop
jbe
jb
mov
pop
mov
mov
add
push
sbb
xor
mov
sbb
fiadd
cmc
fisubr
inc
out
xor
adc
fdivr
addr16
add
(bad)
sbb
mov
mov
lea
cs
icebp
ins
ins
jne
cli
inc
outs
or
ds
scas
ins
pop
mov
mov
add
push
pop
add
imul
push
inc
mov
arpl
mov
add
rol
out
xchg
inc
inc
xchg
mov
rol
scas
adc
test
(bad)
loope
pop
cs
xchg
inc
lahf
call
out
add
add
hlt
and
jl
add
out
adc
pop
test
outs
sti
in
popf
inc
ror
pop
test
fsub
rcl
test
hlt
or
jg
lea
add
sti
cmps
fsubr
cmp
mov
outs
in
or
leave
jmp
pop
push
add
pop
dec
mov
scas
inc
(bad)
iret
jo
leave
jae
jle
clc
sbb
add
addr16
iret
and
js
mov
inc
mov
scas
sbb
addr16
jmp
addr16
fs
jno
ins
jmp
ins
aam
pop
add
shr
add
inc
xchg
sub
sbb
lds
mov
xor
and
rcl
fst
pop
addr16
jb
jne
dec
xchg
mov
repz
(bad)
bnd
xlat
pop
pop
push
sub
adc
sbb
push
(bad)
pushw
dec
or
stos
das
cmp
jecxz
jecxz
mov
push
sti
inc
pusha
jp
push
xchg
mov
add
stos
mov
leave
jge
mov
pop
outs
out
test
(bad)
cmp
and
(bad)
push
int
sbb
sub
push
fidiv
jae
jno
cs
test
add
pop
ficomp
std
pop
mov
inc
pop
push
xor
pop
ss
bound
jae
mov
cmps
cmp
cmps
mov
or
push
jl
jmp
add
mov
dec
push
jg
js
(bad)
fnstsw
int
imul
fadd
popf
fsub
push
mov
xchg
cmp
test
pop
cli
pop
lock
push
mov
shl
iret
aaa
pusha
aas
addr16
pop
inc
test
push
popf
mov
repz
out
sbb
sub
cmp
sbb
mov
bound
push
or
cld
aas
sbb
popf
jmp
dec
pop
add
jns
jno
pop
jecxz
test
retf
xchg
outs
rcl
xchg
xor
inc
lock
pop
nop
cmps
lock
inc
in
leave
mov
cld
push
retf
adc
push
fcomp
enter
push
cs
test
push
push
mov
call
xchg
jmp
outs
inc
sbb
add
les
mov
jb
cwde
imul
das
push
inc
jmp
lds
and
mov
cdq
push
retf
push
lock
stos
les
mov
push
mov
xchg
retf
sti
inc
inc
mov
jo
push
out
in
inc
inc
add
inc
movs
cmp
inc
mov
cwde
mov
ss
add
jmp
xchg
xchg
jg
gs
push
jl
sbb
lods
pop
aaa
mov
xchg
sbb
mov
test
sbb
xchg
dec
icebp
mov
xchg
mov
pop
clc
cmps
mov
push
push
(bad)
rol
lods
jecxz
push
push
sar
in
pop
ret
and
jge
push
data16
jnp
jle
nop
movs
mov
repz
sbb
dec
js
std
add
jle
push
or
push
test
cmp
movs
cmp
pop
inc
cdq
hlt
stos
add
inc
push
mov
jge
test
ror
test
cmps
mov
push
mov
loope
mov
shl
mov
into
sub
aaa
mov
shl
sub
fs
or
add
lods
das
or
push
in
ret
jecxz
push
and
aaa
cmp
adc
lods
jns
fist
aad
pop
in
cmps
cmps
das
and
shr
inc
mov
cmp
cmp
xchg
popf
inc
push
in
repz
and
cmps
mov
cmps
sbb
movs
cmps
xchg
xor
repnz
lods
cwde
jne
das
ror
adc
loopne
jb
cmp
fs
mov
push
lock
fmul
push
xor
jl
mov
sbb
lea
scas
aaa
push
mov
xor
cmp
enter
loop
lock
mov
jle
mov
pop
sbb
clc
mov
mov
or
jl
movs
add
fld
push
jle
xor
aad
aaa
adc
test
dec
popf
ds
and
xor
pop
out
mov
adc
icebp
sbb
sub
(bad)
ja
mov
adc
sbb
push
inc
mov
lea
push
inc
out
mov
shr
fs
loopne
clc
ins
stos
mov
inc
neg
mov
sbb
mov
xchg
data16
inc
sbb
fstp
and
fwait
xor
inc
mov
dec
aaa
jns
fld
jl
into
js
cli
popw
push
rol
popa
adc
fild
ror
mov
bound
sbb
scas
mov
in
jns
movs
jge
xchg
dec
xchg
pushf
jbe
cmps
or
idiv
stos
lods
sahf
jmp
mov
mov
cwde
test
push
dec
xchg
cmps
xor
sub
inc
cmp
mov
push
fwait
scas
or
fisttp
ret
sar
fcom
push
pop
push
add
or
jnp
mov
pop
mov
test
and
cmp
mul
jmp
mov
xor
and
(bad)
mov
aam
xchg
adc
mov
repnz
mov
jecxz
data16
ins
cmps
inc
aas
sub
cli
ss
jp
test
jbe
jne
xchg
movs
xchg
cmp
sub
push
adc
pop
or
pop
mov
call
xor
mov
(bad)
mov
mov
inc
idiv
je
inc
(bad)
lds
jmp
push
jmp
clc
mov
cmc
push
div
jnp
popf
xchg
jmp
add
cmp
xlat
pop
in
add
aad
jmp
les
and
xor
mov
push
lds
push
xor
adc
inc
cmp
pop
lock
cmps
inc
adc
cwde
sbb
xor
mov
and
test
ret
mov
mov
mov
add
stos
hlt
je
inc
mov
pusha
pusha
mov
mov
cmc
dec
imul
fcmovbe
jmp
popf
add
ins
test
data16
dec
add
jmp
inc
fist
dec
mov
xor
and
xchg
adc
jno
adc
pop
ss
popa
mov
mov
inc
add
fst
rcl
ror
(bad)
aam
xchg
mov
push
pushf
jmp
pminub
mov
jbe
call
shr
mov
hlt
fs
sub
repnz
fsub
adc
jns
outs
push
popa
mov
sbb
inc
into
call
ins
pusha
pop
loop
jae
sub
test
sbb
or
lahf
xor
mov
outs
ds
lock
mov
cli
xchg
push
mov
mov
nop
jbe
sbb
mov
push
out
xchg
and
std
sar
inc
retf
dec
add
fdiv
cmc
inc
cdq
dec
add
data16
sub
test
jg
test
dec
in
jmp
pushf
repnz
jl
inc
fistp
push
sub
push
test
imul
push
mov
xchg
adc
mov
test
sbb
push
addr16
pop
sbb
pop
shr
hlt
sub
jp
mov
push
je
test
and
jmp
cdq
pop
fsubr
ss
inc
call
scas
ds
and
jg
imul
xor
cmps
mov
std
arpl
jmp
sub
add
lahf
setle
out
adc
push
xor
pop
inc
sub
stos
loope
xchg
stc
push
aad
je
lea
into
test
stos
out
icebp
mov
daa
repnz
cmps
out
mov
mov
fsincos
scas
cli
enter
aad
xchg
imul
retf
pushf
cmp
pop
dec
cwde
das
jl
adc
test
popf
adc
(bad)
in
daa
sahf
(bad)
jnp
push
mov
and
pop
ins
fisubr
inc
jb
rol
fsub
sbb
jnp
inc
shr
jecxz
jmp
sbb
popf
bound
test
lods
xor
jns
mov
push
inc
(bad)
adc
shl
jecxz
jl
mov
adc
inc
ficomp
aas
pop
jg
inc
pop
or
cs
pop
shr
add
add
pop
out
and
push
(bad)
push
sub
push
cmp
xchg
inc
shl
(bad)
addr16
inc
sub
retf
mov
loop
or
in
icebp
and
(bad)
(bad)
sub
std
push
cmp
ret
add
pushf
pop
nop
sub
retf
mov
push
out
dec
inc
or
or
test
movzx
in
popa
xchg
mov
popf
(bad)
pop
jge
pop
mov
and
jp
stos
jae
pushf
push
pop
mov
scas
xor
pusha
aam
mov
(bad)
inc
add
js
mov
loop
lock
daa
faddp
scas
(bad)
ins
add
test
mov
fldenv
xchg
cmp
in
sub
call
fcom
sbb
push
adc
cmps
inc
pop
ins
xchg
mov
mov
sub
ja
jmp
or
and
daa
xchg
and
xchg
push
ds
outs
mov
or
cmp
gs
loop
adc
test
icebp
je
jne
mov
ja
lods
cwde
lea
fcomip
cmps
lods
sti
imul
in
addr16
or
push
aad
ret
pop
jb
push
mov
retf
test
sbb
retf
outs
call
pop
push
pop
es
push
push
sub
(bad)
pop
pushf
sub
jle
mov
mov
dec
mov
jg
fsub
test
scas
dec
(bad)
mov
mov
cs
movs
xchg
add
jle
mov
arpl
xchg
idiv
fadd
push
xchg
dec
cmps
sub
xchg
cmc
icebp
jge
ss
pop
(bad)
pop
pop
mov
outs
mov
mov
in
fisttp
pushf
ficomp
pop
push
fstp
mov
sbb
pop
cmp
mov
fsub
push
fisubr
pop
call
fbstp
retf
(bad)
add
imul
(bad)
lock
std
cmp
mov
inc
repz
hlt
inc
or
out
daa
arpl
addr16
inc
add
popf
movs
test
in
jge
loopne
adc
ja
adc
pop
xchg
add
mov
jns
cmps
sahf
(bad)
sbb
(bad)
fist
(bad)
popa
mov
mov
inc
test
pushf
sbb
cdq
or
les
neg
aam
xchg
psraw
lds
mov
(bad)
push
pop
sub
xchg
mov
lahf
inc
push
jbe
fwait
or
mov
pusha
mov
xchg
loop
sbb
jmp
js
movsx
jmp
push
lea
mov
in
cmp
jno
retf
mov
ins
push
mov
fcomp
mov
imul
xchg
xchg
add
iret
icebp
lock
dec
push
lahf
pushf
push
hlt
jb
dec
sbb
mov
(bad)
arpl
push
inc
ss
mov
jl
lea
add
xor
sub
jns
(bad)
sbb
dec
push
and
pop
push
test
fadd
jae
cmp
inc
sub
jmp
sbb
mov
pusha
loopne
mov
into
mov
into
push
lahf
mov
cmp
cmps
cmp
stc
test
mov
getsec
ds
jmp
jle
xchg
addr16
mov
imul
stos
push
mov
pusha
sub
inc
or
adc
adc
adc
push
mov
push
xchg
lods
call
xchg
inc
lods
aad
hlt
pop
data16
dec
fdiv
pushf
adc
stos
mov
out
outs
mov
inc
jle
mov
les
mov
jne
fs
adc
pop
fisub
push
or
pop
pop
and
imul
pusha
out
das
mov
inc
mov
cmp
add
test
pop
cmp
and
mov
test
das
(bad)
(bad)
mov
fnstcw
push
xchg
ins
std
cmps
ret
shl
and
enter
pop
mov
dec
push
lods
mov
pop
and
retf
mov
push
add
std
mov
sub
and
pop
inc
fnsave
jp
mov
mov
jmp
(bad)
jnp
hlt
dec
fs
inc
push
and
mov
and
dec
jns
dec
add
add
cmp
retf
and
out
add
in
stc
cmp
shl
out
lea
xchg
js
std
mov
dec
lods
mov
cli
repnz
jmp
push
mov
stos
xor
(bad)
cld
stos
and
push
data16
call
add
pop
in
pop
jecxz
cmp
sbb
cmp
dec
outs
fnstenv
mov
xchg
es
fmul
in
mov
addr16
jo
fistp
mov
sahf
arpl
xchg
jge
idiv
stos
pop
iret
push
not
pop
jns
cmps
cmc
xor
lds
xchg
call
daa
loope
int3
jne
dec
inc
pop
cmp
or
mov
mov
stos
push
add
ficomp
push
lds
push
cmp
inc
mov
xor
mov
pop
xor
jle
mov
cdq
sub
cdq
stc
ins
mov
call
jmp
mov
(bad)
inc
sub
add
ret
jmp
cmp
sub
mov
mov
call
sbb
xchg
cmp
push
fwait
mov
xchg
or
jle
mov
je
mov
or
add
rol
cmp
lods
std
add
jl
fnstsw
jecxz
pop
push
mov
cmp
mov
mov
neg
ror
ror
lahf
leave
xchg
lock
f2xm1
inc
imul
shl
loopne
mov
ds
test
jno
inc
mov
scas
sub
stos
push
mov
mov
add
daa
sbb
jl
es
sub
outs
push
mov
addr16
mov
xor
fldpi
test
mov
pop
and
pop
mov
in
repz
and
clc
pusha
neg
dec
push
xchg
movs
cmp
out
jmp
mov
repz
ds
sbb
push
rcl
adc
pop
xchg
sub
mov
fs
aas
out
aas
popw
push
mov
jp
ficomp
test
pop
stos
mov
cmp
sub
cdq
repnz
imul
inc
cdq
les
push
test
mov
icebp
push
imul
pop
inc
xchg
fwait
mov
xor
lds
cmc
fstp
xchg
je
adc
pop
ror
jge
aas
cwde
adc
xchg
jbe
dec
xchg
retf
or
lods
inc
add
sub
inc
imul
sub
jb
inc
dec
ficomp
mov
pop
cwde
add
sti
xchg
xor
add
outs
rol
ret
std
mov
or
mov
mov
mov
sub
movs
jl
rcr
(bad)
cmp
enter
cmp
pop
cdq
daa
add
inc
mov
pop
pop
call
add
or
ds
cmp
jp
addr16
add
popf
or
into
or
xchg
xchg
cld
div
sbb
fst
mov
loopne
xchg
cmps
inc
or
mov
sbb
ins
popf
mov
gs
inc
dec
dec
mov
hlt
inc
push
xor
dec
jp
pop
fidivr
jle
lahf
sub
push
mov
mov
fmul
shr
adc
mov
sbb
push
dec
movs
je
mov
movs
ror
fcom
lock
jp
mov
xchg
fs
xchg
inc
add
ret
xchg
sub
popa
mov
lea
test
neg
in
mov
rcl
pop
dec
mov
imul
stos
push
cmp
sbb
out
jle
jecxz
mov
outs
popa
pop
push
jecxz
and
add
lahf
cmp
daa
fistp
jo
or
into
or
sti
or
or
mov
js
push
pop
push
mov
mov
xor
jge
(bad)
mov
mov
cwde
bound
movs
mov
xor
shl
lods
lock
inc
pop
mov
ror
cmp
sbb
cmp
movs
pusha
cmp
lea
sbb
inc
iret
int
mov
pop
leave
push
adc
sbb
add
call
retf
sbb
pushf
cmp
jbe
jno
ret
loope
mov
shl
repz
(bad)
dec
mov
jle
ror
retf
xor
mov
adc
fimul
inc
jbe
cmp
push
sbb
cmp
test
jg
inc
dec
jmp
xor
xor
sbb
cmc
inc
adc
push
in
mov
std
out
mov
push
jp
sub
cdq
loope
sub
or
fndisi(8087
mov
aad
mov
lods
in
rcr
fisubr
nop
jmp
test
icebp
cs
and
fild
sbb
xor
or
int3
push
popf
call
and
jbe
inc
out
and
pop
sub
daa
leave
and
inc
ins
(bad)
or
mov
pusha
cwde
cmps
pushf
sub
jae
aam
adc
rol
test
out
test
sahf
retf
lahf
inc
jecxz
je
test
mov
lea
and
mov
scas
adc
(bad)
std
test
fidivr
inc
lea
push
pop
mov
pop
add
pop
push
pop
cld
jns
dec
movs
xchg
test
push
pop
test
cmps
cli
pop
push
xor
push
xchg
cs
inc
jne
jne
mov
add
mov
dec
jecxz
sti
and
jae
fsub
fwait
leave
cmp
xchg
jb
mov
mov
cli
test
pop
inc
mov
lock
mov
mov
jbe
dec
leave
sub
sub
int3
leave
pop
ret
push
pop
cdq
nop
dec
adc
sub
sbb
or
jmp
and
push
adc
xor
mov
adc
xor
iret
(bad)
cmp
fs
daa
fwait
push
pushf
hlt
gs
mov
stos
stos
das
sar
stos
scas
clc
xor
mov
sub
pop
jmp
into
or
push
std
aas
jae
jge
cmp
pop
mov
nop
pushf
aam
aaa
test
fstp
pop
dec
ret
push
or
or
ins
pusha
mov
pop
xchg
xor
mul
inc
push
and
bound
mov
sub
cmps
mov
add
adc
(bad)
stos
stos
loop
push
jmp
fmul
sub
retf
loop
cwde
pop
imul
ins
popf
addr16
dec
scas
mov
mov
and
(bad)
into
loop
sahf
retf
jg
in
xor
and
cli
jae
xchg
js
fisttp
xchg
and
cmps
xchg
sbb
lea
test
push
call
jecxz
or
dec
fwait
mov
jg
mov
daa
push
iret
call
cwde
mov
sbb
cs
mov
out
and
daa
jnp
cmp
imul
shr
test
cmc
add
js
sti
pop
xor
test
mov
(bad)
pop
jb
pop
pop
or
cmp
inc
pushf
cld
xchg
and
jecxz
out
push
and
push
shl
or
movs
push
push
(bad)
ja
ja
mov
dec
pop
xchg
mov
rcl
mov
gs
jmp
sub
addr16
inc
sbb
cmps
mov
fcmove
sbb
push
mov
or
dec
mov
inc
scas
xlat
(bad)
pop
cwde
test
add
dec
add
ins
enter
mov
pop
pop
fcmovbe
mov
cwde
mov
inc
cwde
ret
ds
xlat
jg
nop
mov
cmp
dec
imul
(bad)
sub
push
or
jl
das
sbb
jno
pop
mov
sbb
ins
(bad)
aad
mov
push
adc
sbb
ss
jne
sbb
pushf
sub
mov
fsubr
xchg
(bad)
jno
je
push
mov
scas
clc
dec
out
and
push
cmp
(bad)
stos
cs
jl
add
jl
retf
fcom
out
ficom
push
jmp
fxtract
and
test
and
mov
mov
iret
rol
movs
loope
pusha
addr16
or
add
xchg
sbb
xchg
ds
add
or
xor
inc
push
mov
rcr
out
xchg
cmps
pop
cmp
ret
xor
mov
cmp
mov
(bad)
mov
inc
lea
das
cmp
jecxz
stos
jo
xor
outs
mov
add
and
lods
xchg
retf
aam
and
mov
add
daa
ss
addr16
pop
adc
je
test
movs
test
pop
fstp
loope
mov
arpl
dec
jnp
cwde
push
test
clc
aas
loope
test
push
xor
rol
mov
mov
mov
add
clc
mov
les
(bad)
pushf
dec
nop
pop
cld
or
call
jnp
lods
adc
jns
push
cdq
(bad)
mov
repnz
test
push
push
popa
fcom
sbb
and
or
sub
sbb
push
xor
xchg
in
inc
push
inc
cwde
stc
cmps
pop
call
mov
inc
mov
stos
sbb
(bad)
out
push
rcr
sahf
test
and
sbb
mov
shr
cmps
into
div
jle
xor
sbb
aam
imul
pop
ins
jnp
bound
outs
stos
call
icebp
loope
xchg
cli
push
pop
add
push
and
add
adc
pop
sbb
repz
shr
inc
mov
add
dec
add
jl
lods
out
xchg
mov
fcomp
es
test
mov
xor
cwde
mov
idiv
mov
jbe
and
jecxz
sti
push
rcr
cmp
cmp
cmps
addr16
pop
mov
into
mov
and
sbb
jnp
(bad)
sbb
sub
jbe
pop
dec
test
inc
mov
inc
out
mov
movlps
inc
in
cwde
cs
rcl
pop
outs
jo
jg
xchg
sar
cmps
fbld
xor
out
mov
fidiv
cdq
cld
sbb
test
cmp
adc
fmul
dec
fmul
inc
pop
inc
test
pop
jae
addr16
pop
jmp
test
pop
test
push
add
cmp
pop
and
and
dec
pop
sahf
sar
jmp
(bad)
fs
jp
and
test
dec
cwde
aad
dec
neg
mov
in
adc
dec
scas
bound
xor
cmp
cmc
cmps
(bad)
dec
imul
call
adc
jno
ins
arpl
sahf
inc
cs
xchg
fld
retf
aad
pop
inc
xor
or
mov
pushf
adc
xor
sbb
mov
sbb
out
mov
icebp
sbb
out
call
mov
lock
adc
test
mov
mov
jnp
fwait
mov
(bad)
repz
dec
mov
pop
push
retf
dec
fisttp
pop
dec
mov
ins
sub
or
dec
repnz
aam
push
and
adc
inc
imul
mov
fisub
stos
pop
pop
mov
mov
dec
aam
pushf
and
mov
fs
inc
xchg
dec
loopne
ret
jmp
jl
cmps
js
mov
or
pop
nop
test
mov
mov
jnp
push
add
xchg
hlt
and
xor
sbb
jo
dec
daa
pop
xchg
cmps
mov
push
cli
fistp
into
jbe
inc
or
cmp
inc
add
pop
retf
pushf
dec
xor
pop
push
nop
aad
sbb
inc
lds
pop
fisub
inc
fcom
(bad)
out
in
cdq
dec
out
sbb
fxtract
or
adc
in
mov
mov
(bad)
movs
mov
and
mov
jmp
xchg
sti
push
cdq
sbb
or
jo
sub
nop
ror
or
hlt
push
(bad)
mov
push
xor
cmp
icebp
ds
add
inc
frstor
jno
(bad)
mov
xchg
mul
retf
push
loop
clc
jp
mov
push
jmp
jl
in
sub
mov
add
mul
nop
(bad)
jecxz
pusha
mov
(bad)
inc
push
dec
cli
hlt
shl
gs
(bad)
stos
xor
int3
mov
cmp
cmp
and
inc
add
sbb
jle
pop
push
movs
dec
cmp
cmp
mov
aas
xor
fsub
and
pop
and
sub
call
mov
pop
xchg
retf
fistp
mov
inc
outs
pushf
xor
pop
int3
sub
fimul
pop
clc
cmp
das
repz
loopne
xchg
sbb
add
jbe
push
pushf
xchg
pop
push
int
loopne
sub
aaa
mov
and
pop
mov
test
cmp
(bad)
mov
retf
repz
fisubr
jae
push
(bad)
mov
and
or
in
xchg
pavgw
cli
mov
add
int
xchg
test
fnstenv
jns
mov
nop
test
inc
in
add
pop
lea
pop
dec
mov
jnp
mov
iret
jge
and
push
dec
add
(bad)
cmp
lods
or
cs
jb
jb
mov
inc
mov
mov
cdq
stos
movs
add
sbb
mov
mov
dec
xor
inc
lock
dec
bound
mov
pop
add
xchg
ss
sub
cmp
cmp
data16
jl
mov
lahf
enter
stos
inc
ror
pop
or
pop
cmc
and
ds
sbb
jo
xchg
movs
sbb
push
arpl
cmc
xchg
xchg
xor
dec
jg
sub
movs
rol
out
popf
mov
xor
inc
lock
fsubr
or
jnp
mov
lea
jnp
call
cmp
jmp
inc
jp
mov
dec
pop
pop
mov
cld
inc
popf
leave
sub
and
cmp
or
adc
push
and
stos
cmp
and
(bad)
sbb
sbb
push
and
outs
mov
pushf
imul
lea
test
loope
mov
cmps
das
inc
mov
xchg
(bad)
icebp
jl
(bad)
lods
pop
aam
aad
cmp
lock
retf
sub
test
pop
mov
adc
rol
sahf
into
pop
jb
or
cmp
imul
jmp
mov
(bad)
dec
jp
into
mov
call
test
fst
lahf
(bad)
fs
mov
or
fistp
mov
fs
in
mov
and
cli
hlt
call
lea
push
mov
or
and
sbb
inc
mov
imul
sub
jecxz
inc
inc
add
sbb
push
add
mov
mov
(bad)
pop
push
or
pop
inc
mov
and
out
xchg
aaa
mov
inc
sbb
push
xchg
mov
arpl
test
fsubrp
cmc
add
ins
lods
mov
jbe
scas
mov
add
in
idiv
sahf
(bad)
pusha
int
cld
dec
sbb
sub
jae
cmp
inc
mov
xor
lahf
mov
aas
retf
into
jl
jecxz
dec
pop
adc
xor
mov
rol
or
cmovbe
pop
jmp
loope
mov
pusha
or
mov
dec
test
cdq
push
(bad)
push
leave
push
mov
shl
adc
mov
fisub
mov
dec
push
sbb
repz
cmp
cmp
jp
pop
or
shl
clc
call
dec
dec
fdiv
sbb
and
jb
or
je
shr
cdq
fcom
(bad)
arpl
test
xchg
jg
movs
add
jnp
push
stos
test
mov
rcr
loop
xchg
and
cmc
xchg
test
jo
mov
ja
ins
in
daa
or
lock
loopne
ret
xor
pusha
mov
outs
sub
movs
enter
lods
push
rcl
mov
fbstp
outs
imul
ja
ins
inc
mov
pusha
mov
daa
pop
pushf
call
dec
rol
arpl
popa
cmc
mov
stos
adc
mov
cmp
xchg
(bad)
scas
int3
aas
movs
dec
add
add
scas
fimul
call
imul
in
inc
popf
cmp
pushf
or
inc
dec
cdq
mov
icebp
imul
pusha
adc
cmp
xchg
pop
mov
(bad)
jno
xchg
sub
test
(bad)
in
test
aam
fnstcw
pusha
lods
dec
jmp
jmp
test
jbe
mov
icebp
pop
rol
(bad)
inc
fild
out
mov
mov
(bad)
aas
bound
repnz
add
jge
inc
add
mov
cmp
cwde
lahf
xchg
pushf
sbb
aad
mov
jb
push
aaa
ret
add
addr16
xor
push
adc
lods
mov
cmp
lods
mov
mov
or
outs
inc
jle
jne
mov
sahf
(bad)
in
mov
mov
cdq
xchg
ret
pop
fistp
xchg
fwait
stos
push
sub
mov
cwde
call
cs
leave
imul
or
ds
push
cmp
mov
test
(bad)
lock
adc
daa
sbb
sbb
aas
test
not
call
mov
imul
xadd
push
lock
rcl
call
out
inc
das
(bad)
rcl
mov
pop
pushf
ret
inc
mov
mov
jmp
adc
movs
jns
push
jmp
jae
push
jbe
inc
cmps
sub
add
cdq
xchg
mov
int3
mov
lahf
leave
inc
push
xor
sub
repz
cmps
outs
pop
mov
sahf
and
sub
fwait
test
push
loope
jo
sub
in
xchg
outs
(bad)
mov
mov
into
scas
mov
sbb
in
cmp
lds
mov
inc
retf
dec
aam
cmp
fcmovbe
jmp
fwait
imul
mov
mov
fcmove
adc
mov
dec
add
push
sub
pop
push
mov
bound
sbb
mov
not
fldcw
cld
cmps
out
mov
mov
fcom
mov
lahf
mov
adc
cld
xor
fcmovu
jns
call
cmps
sbb
or
call
pusha
cmp
movs
mov
ret
fbld
(bad)
push
adc
cmp
xor
push
push
movs
adc
test
push
push
pop
pushf
cmc
mov
scas
int3
or
outs
push
jno
pop
icebp
xchg
inc
call
pop
in
rol
movs
xchg
xor
mov
jmp
mov
pop
lock
mov
pop
or
loop
je
pop
fsubr
inc
xchg
or
movs
popf
xchg
xchg
stc
add
and
pusha
stos
sub
jne
adc
dec
rcl
add
or
xor
cld
pop
ficomp
fs
js
(bad)
loope
xchg
rol
stc
ficom
ror
push
ret
mov
cmps
add
enter
fmul
mov
imul
ror
adc
jmp
xor
js
ins
or
sbb
rcr
stos
rcr
pusha
inc
(bad)
cmp
pop
pop
and
and
push
sub
popf
push
add
mov
fwait
int3
dec
shl
jle
sub
mov
test
repnz
mov
sbb
sahf
movs
mov
dec
(bad)
std
mov
pushf
fisttp
dec
scas
cmp
and
xor
pop
mov
dec
and
leave
sahf
dec
adc
xor
ret
inc
sbb
add
add
xchg
dec
push
xchg
lods
lea
sub
shl
bnd
jle
pusha
neg
in
jmp
jbe
mov
not
out
outs
xchg
inc
sbb
inc
repz
lods
std
shl
fcom
jne
sub
div
xor
das
adc
or
mov
lahf
or
xor
sbb
cmp
pushf
push
and
push
push
scas
pop
dec
test
(bad)
out
pop
cwde
inc
add
popf
cdq
repnz
loopne
ror
add
outs
mov
popf
ficom
pop
ja
les
mov
lds
jg
fistp
jb
or
inc
into
aad
push
shl
sub
inc
dec
fwait
outs
add
mov
mov
jg
retf
and
cmp
or
sbb
sbb
fist
add
cmp
mov
in
sbb
jbe
dec
(bad)
mov
pop
cdq
xlat
test
xchg
mov
repnz
add
test
xchg
cmp
mov
mov
lds
or
cmp
lock
dec
cli
and
pop
inc
scas
xor
cld
dec
push
bound
pop
fsubr
mov
rol
pop
adc
sbb
xor
push
mov
xchg
xor
cmps
adc
push
inc
xchg
fdiv
xchg
sub
dec
fsubr
fwait
popa
call
ret
fwait
pop
mov
add
arpl
in
fdiv
stos
mov
dec
ds
cmp
push
retf
inc
jl
aas
(bad)
div
or
add
or
and
sub
ja
xor
sbb
mov
aaa
push
jmp
xchg
adc
addr16
mov
iret
mov
mov
dec
repnz
pop
push
(bad)
call
xor
jg
cmps
stos
adc
fld
pop
inc
test
jne
jns
dec
inc
push
(bad)
rcr
je
add
push
stos
cs
dec
mov
or
stos
(bad)
mov
cmps
pop
dec
jg
ds
adc
out
pop
into
and
jle
movs
imul
dec
pop
not
xchg
or
add
(bad)
out
pop
mov
jb
inc
push
push
fbstp
cdq
xchg
(bad)
jb
out
je
fwait
push
cmp
inc
movs
sub
xchg
(bad)
scas
and
sbb
js
push
pop
dec
jmp
aas
jle
jl
aaa
pop
pusha
stos
arpl
pop
in
mov
mov
xchg
in
adc
rcr
add
push
add
mov
jle
mov
pop
test
lea
pop
js
(bad)
jmp
(bad)
pop
pop
and
imul
mov
scas
movs
mov
add
addr16
mov
mov
sbb
(bad)
sbb
test
add
cmp
int3
and
pop
pop
sbb
ret
inc
pop
inc
or
sub
stos
push
or
movs
jne
push
dec
cwde
out
and
pop
inc
dec
mov
(bad)
pop
mov
mov
mov
mov
cmps
mov
dec
jg
fwait
xchg
adc
xlat
clc
mov
xlat
inc
ja
fimul
cld
xor
in
pusha
in
inc
cmp
push
sti
dec
pop
push
mov
out
inc
in
push
movs
mov
pop
add
cmp
add
(bad)
and
ja
mov
sub
or
dec
or
lea
mov
xchg
mov
jns
(bad)
repz
xlat
inc
lea
push
add
mov
test
fadd
mov
push
sbb
lock
lock
cwde
pop
jl
jg
adc
sbb
pushf
int3
into
push
pop
neg
mov
mov
inc
ins
inc
xor
inc
or
das
mov
mov
inc
xchg
aaa
jns
movs
lea
aas
sub
dec
mov
pop
and
pop
movs
int3
cwde
inc
loopne
push
fpatan
scas
jae
imul
push
jecxz
xchg
addr16
icebp
hlt
test
mov
rcr
pop
dec
jecxz
ror
pop
jne
js
jne
popfw
imul
call
add
pop
out
loope
mov
add
xor
sub
mov
xchg
dec
inc
repz
mov
(bad)
jmp
jp
inc
nop
push
std
xchg
bound
stos
push
or
in
xchg
imul
xor
cld
data16
lods
outs
xchg
dec
cld
pop
add
retf
jae
and
jle
cmps
or
mov
jb
mov
les
aam
mov
xor
sub
inc
add
mov
jo
mov
mov
push
test
cmp
into
jmp
xlat
pop
inc
cmps
jle
mov
hlt
mov
xchg
xor
sub
mov
mov
cmp
not
mov
sbb
loope
leave
pop
std
adc
push
pop
dec
pop
mov
outs
mov
mov
jg
aam
(bad)
enter
cmp
cmp
inc
and
repnz
je
mov
pop
stos
cmps
xchg
add
mov
shl
mov
cmp
loopne
dec
lds
mov
aad
repz
rcl
pop
sbb
clc
icebp
in
fld
xchg
lods
xor
cmp
fwait
ss
cmp
or
pop
popf
outs
add
(bad)
mov
dec
fsub
pextrw
push
push
std
or
pop
pop
xor
adc
jae
jb
sahf
sub
test
dec
push
ins
int
mov
stos
rcl
sbb
pop
mov
or
addr16
out
cmc
pushf
ja
dec
stos
mov
aam
cmps
jbe
scas
test
test
xlat
cmp
pushf
mov
dec
adc
push
fnstsw
inc
cmp
das
movs
outs
or
stos
pop
pop
aad
(bad)
inc
pop
pop
mov
push
jae
add
pop
cwde
aas
jmp
or
pop
and
and
mov
adc
idiv
arpl
ror
xchg
mov
jne
mov
push
mov
lahf
xor
mov
cmp
movs
xor
fild
sbb
mov
pop
sbb
push
inc
cmp
bound
mov
xchg
adc
dec
repnz
add
pop
fild
add
cmps
pop
push
mov
inc
in
mov
enter
popf
jmp
jecxz
push
push
cwde
inc
shl
xchg
pop
fnsave
cmps
jbe
jnp
test
dec
add
hlt
xor
xchg
sahf
fbld
stos
sub
xor
fistp
sbb
scas
imul
jmp
rcr
fwait
cmc
push
movs
cli
jno
pop
adc
or
and
pop
lock
je
mov
jnp
xlat
mov
popf
lock
scas
fdiv
push
pop
ins
fiadd
xchg
ins
mov
cwde
adc
xchg
mov
sbb
lods
cwde
std
add
loop
hlt
jmp
test
cs
or
push
clc
ror
push
inc
cdq
xor
add
test
nop
cmp
icebp
cmp
inc
out
aas
(bad)
cmp
add
ins
jo
inc
add
sbb
add
sar
xor
(bad)
pusha
fdivr
ins
mov
js
xlat
xchg
jl
jmp
jecxz
(bad)
cli
xchg
cmc
cmp
mov
jecxz
test
add
mov
out
pop
add
jne
mov
movs
sar
in
rol
hlt
push
push
inc
xor
popa
mov
imul
rol
jmp
mov
(bad)
xchg
and
jns
sbb
ret
cmp
movs
push
push
(bad)
cmps
xchg
add
xchg
mov
retf
test
stos
mov
push
or
(bad)
enter
dec
test
pop
inc
mov
mov
dec
into
loope
leave
idiv
dec
and
add
jnp
aas
mov
scas
jl
fdiv
xchg
add
xchg
sahf
xor
jmp
sbb
lds
xchg
dec
hlt
cld
jle
out
mov
lods
cmps
mov
pop
stos
ja
nop
mov
clc
test
std
cmp
push
stos
sub
ss
dec
sub
or
mov
dec
push
mov
cmp
xchg
mov
or
sar
jmp
call
inc
add
push
stos
dec
js
dec
or
mov
loopne
loopne
mov
push
rol
lea
cwde
ror
call
inc
adc
cmc
popf
add
pop
add
cmps
push
adc
repnz
mov
fisttp
push
shr
lods
arpl
call
push
stos
call
sti
add
ficomp
dec
adc
and
add
and
mov
pusha
mov
or
inc
stos
(bad)
mov
pop
in
sahf
pop
test
lahf
js
rcl
mov
in
stos
stos
sahf
ret
aaa
xchg
mov
xlat
jecxz
aad
fs
fst
dec
fidiv
add
(bad)
in
jmp
fdiv
jle
pop
fld
jae
push
scas
mov
lds
sbb
sti
daa
xor
jl
push
mov
ret
aam
dec
(bad)
xlat
neg
push
dec
dec
and
inc
xchg
pop
lods
pop
(bad)
xchg
cli
inc
pushf
mov
push
rol
push
out
add
popf
xchg
neg
or
jne
jl
sub
(bad)
bound
dec
push
mov
int3
cwde
sub
jmp
fwait
jmp
inc
jne
inc
cmp
xchg
das
lods
adc
jbe
shl
mov
and
call
ja
outs
js
stos
pusha
(bad)
mov
dec
shr
nop
mov
enter
jg
mov
stc
cmc
cmp
mov
or
mov
sbb
lea
sbb
push
push
pop
xchg
stos
iret
mov
in
jbe
enter
jnp
add
pop
ds
into
jo
cmps
dec
pop
test
add
ins
xlat
in
mov
shr
and
test
sti
in
push
mov
mov
xchg
ss
push
test
mov
cmp
cdq
inc
inc
test
ins
cmc
ins
test
pop
inc
leave
rcl
js
pop
push
add
jge
jnp
jo
mov
addr16
sub
jg
int
sbb
scas
xor
add
ins
adc
add
scas
movs
pop
add
mov
push
je
dec
ret
pushf
repz
mov
push
int
pushf
sub
inc
mov
ficomp
push
mov
fdivr
mov
test
retf
xor
in
test
push
pop
test
gs
dec
mov
push
out
int3
jmp
mov
outs
jb
and
cmp
xadd
jmp
aaa
jle
(bad)
mov
jecxz
test
int3
into
push
cld
outs
jne
lea
cdq
sbb
jecxz
sub
into
sbb
cmp
mov
clc
mul
pop
sbb
xor
dec
mov
and
cmp
push
gs
pop
in
add
cmps
mov
cmp
repz
dec
push
inc
sub
adc
add
sub
dec
mov
mov
call
fimul
jge
inc
cli
mov
or
push
adc
mov
xchg
mov
fiadd
mov
jmp
aad
fs
add
push
imul
fwait
mov
dec
in
repz
add
pop
ds
bndldx
sbb
or
cmps
dec
add
cmp
retf
mov
mov
push
idiv
test
mov
jnp
icebp
and
jge
(bad)
cmps
mov
jmp
retf
push
je
mov
fdivr
loop
xor
outs
clc
cmp
adc
shl
pop
push
not
or
les
ins
into
adc
mov
popw
aaa
in
adc
ja
mov
mov
fidivr
add
movs
mov
lds
popa
mov
pop
sahf
and
xchg
inc
xchg
mov
inc
shl
push
push
cli
imul
mov
cdq
icebp
xchg
mov
icebp
das
xor
dec
in
xor
sub
and
jae
pop
popf
mov
fistp
hlt
sbb
sar
add
cmp
bound
fiadd
mov
add
dec
cmp
clc
mov
leave
sbb
inc
lods
push
fnstenv
xchg
nop
data16
adc
cmp
xchg
cmp
jmp
stos
fs
fisubr
retf
pop
push
sbb
daa
arpl
push
push
jl
call
dec
push
pop
add
sub
add
mov
mov
jnp
mov
inc
jmp
add
jmp
cmp
add
std
and
mov
movs
fs
clc
xchg
and
addr16
xchg
dec
mov
cmps
leave
repz
sbb
loop
rcr
jno
mov
aaa
mul
or
sub
xlat
not
add
or
or
xchg
mov
sub
pop
fimul
pusha
jge
jecxz
push
jbe
push
nop
sbb
pop
xchg
cmp
(bad)
add
test
mov
clc
dec
dec
inc
fisub
mov
loope
ret
push
mul
cmps
mov
dec
pop
mov
in
cld
lock
pop
dec
loop
xor
pop
repz
repz
jne
pop
sahf
pusha
inc
pop
test
pusha
fisttp
inc
dec
loopne
push
push
adc
add
adc
fidivr
ror
jb
test
ins
dec
sub
cli
mov
mov
push
clc
push
push
and
or
mov
xchg
loop
dec
call
jnp
lods
lahf
clc
pop
nop
popa
sbb
inc
(bad)
jmp
mov
push
pop
ss
sbb
mov
jnp
or
ds
lock
(bad)
xchg
cmc
je
pop
pop
loop
sbb
and
jge
sahf
js
mov
mov
sub
fisttp
aam
add
aam
jmp
inc
out
mov
xchg
sbb
in
ss
push
mov
aam
mov
cmps
dec
enter
aaa
dec
rcr
addr16
dec
add
pusha
mov
bound
jb
push
xchg
mov
call
test
inc
outs
add
inc
sbb
push
add
fisubr
movs
adc
test
pop
inc
call
fnstenv
pop
bound
jg
test
jns
neg
adc
test
fsubr
fisub
ret
std
pop
xor
cwde
repnz
retf
xchg
lods
push
shr
fisttp
and
retf
and
outs
fidiv
popa
addr16
je
push
mov
test
push
ss
jp
sbb
int
adc
jmp
and
test
stos
lar
cmp
test
pop
in
push
ds
dec
jmp
imul
mov
call
loope
cmps
push
sbb
out
sar
inc
ins
jmp
sbb
jne
aaa
pop
pop
push
shl
call
stos
adc
sti
pop
ror
push
imul
sub
cmp
xchg
pop
sbb
in
stos
repnz
jno
mov
and
cmc
out
loope
add
setnp
mov
mov
adc
test
ds
mul
jno
mov
xor
and
cdq
daa
push
and
cdq
cmp
mov
lds
arpl
std
pop
mov
pusha
push
sbb
in
cmp
sbb
xor
pop
dec
fisttp
mov
lahf
cs
inc
retf
in
call
shl
test
stc
mov
call
fstp
mov
sbb
rcr
mov
inc
out
fdiv
cmp
and
inc
push
pop
push
test
mov
iret
or
add
shr
bound
pop
push
pop
adc
jp
stos
pop
inc
mov
call
mov
cld
sbb
pop
out
repnz
call
cmp
gs
test
pop
popf
dec
pop
mov
xchg
aad
(bad)
cmp
jb
jg
sbb
fimul
push
push
push
or
mov
push
shl
mov
cmp
dec
dec
xor
xor
pop
(bad)
and
inc
jbe
push
test
(bad)
cli
xchg
bt
push
bound
mov
aas
xchg
idiv
(bad)
in
ins
loopne
(bad)
movs
mov
push
mov
hlt
fdiv
nop
xor
push
rcr
sub
es
pop
push
cmp
les
sbb
stos
or
sbb
loopne
jge
fiadd
inc
data16
adc
jl
sbb
mov
jne
adc
sub
mov
jns
les
fisubr
dec
lds
fidiv
out
out
cwde
popa
sbb
shr
xchg
js
test
clc
pop
fiadd
cmp
loop
stos
int
ins
push
mov
std
xor
int
jecxz
push
sub
mov
cmp
(bad)
out
stos
mov
stc
jmp
imul
sub
pop
in
jns
cwde
dec
cmp
test
sbb
test
popa
fbld
pop
scas
push
add
xchg
jmp
das
lock
mov
mov
pop
add
jmp
mov
jp
jb
xor
jmp
jl
lods
xor
push
pop
or
movs
mov
out
sub
add
and
pop
xor
sbb
jns
dec
xor
adc
fcomp
stc
stos
and
fcom
addr16
cwde
dec
std
mov
xor
jnp
neg
lahf
sub
(bad)
mov
loopne
mov
out
fdiv
dec
repz
push
xor
fwait
pop
pop
cmp
and
pop
sbb
mov
out
pusha
stc
stc
jnp
sar
jnp
jmp
ins
pop
and
pop
imul
scas
mov
cmp
sbb
test
inc
int3
loopne
lock
outs
mov
inc
xchg
xchg
shl
xor
lock
ffreep
aas
mov
mov
fucomi
mov
loop
xor
inc
fadd
xlat
and
add
pop
xchg
or
inc
test
jg
fnsave
jns
int3
jo
leave
inc
jl
xor
and
fwait
pop
mov
int
push
mov
pop
cwde
fwait
pushf
add
inc
aam
xchg
inc
mov
add
pop
jnp
mov
shl
jecxz
std
xchg
inc
adc
fiadd
mov
data16
mov
retf
dec
inc
test
stc
sbb
sbb
out
ret
dec
int3
dec
ja
dec
movs
cmp
clc
jbe
jo
xchg
mov
aas
pop
cmps
jle
sar
(bad)
pop
jbe
xor
or
in
dec
cwde
adc
nop
cmp
mov
cmps
xor
pop
int3
repnz
cmc
pop
pop
and
dec
mov
cld
pop
pop
mov
test
shl
mov
cld
adc
fisttp
pop
mov
push
sbb
aad
and
inc
je
jg
pop
inc
push
lea
cmpxchg
mov
in
not
movs
mov
inc
sbb
add
add
mov
pusha
adc
sbb
cwde
stc
aaa
pop
pop
cmp
leave
mov
xchg
inc
lods
pop
repz
retf
pop
stos
in
push
mov
mov
mov
push
loop
xchg
cmp
in
test
lods
fbstp
fistp
cs
xor
or
cmp
lods
or
es
mov
and
cs
push
cmp
sub
mov
pusha
xchg
xchg
clc
adc
sub
and
push
dec
mov
cmp
mov
mul
(bad)
xor
ins
lock
rol
je
loopne
out
add
xlat
cwde
xchg
repnz
fwait
popf
dec
sti
pop
cmc
pop
sbb
out
repz
pop
sbb
pop
mov
mov
sar
pop
hlt
outs
in
(bad)
cmp
push
leave
sbb
jmp
(bad)
adc
sbb
jne
lods
sbb
mov
cmp
push
cmp
mul
mov
inc
mov
inc
mov
mov
adc
out
inc
(bad)
xchg
cwde
stc
sub
mov
and
les
(bad)
xor
add
out
out
push
fstp
jae
inc
lahf
sub
sbb
mov
out
icebp
cmp
idiv
arpl
mov
add
fistp
mov
sbb
scas
mov
loope
out
xchg
mov
je
ins
cmps
jl
cdq
jmp
loop
xchg
bound
ffreep
mov
mov
test
mov
dec
rcr
jle
xchg
lods
adc
out
scas
rcr
aad
into
inc
out
sub
nop
test
sub
and
cmp
sbb
aaa
add
mov
sahf
nop
cmp
pop
xchg
cmp
adc
sub
scas
sbb
sub
sbb
mov
(bad)
mov
retf
adc
inc
call
mov
outs
retf
mov
xor
mov
call
mov
xor
(bad)
repnz
ins
jmp
inc
xchg
inc
mul
ss
xlat
pop
out
pop
jg
xchg
pop
pop
daa
mov
les
sbb
out
jnp
push
add
sbb
adc
sbb
rcr
jo
outs
cmp
ins
add
push
lods
mov
mov
inc
rol
inc
shl
rcr
cmps
aam
push
not
xchg
jae
popa
in
stos
mov
dec
mov
xchg
outs
sbb
mov
xchg
xchg
outs
fisttp
or
lock
pop
fiadd
inc
ja
scas
push
pop
pop
mov
nop
mov
dec
inc
repnz
inc
sbb
add
xor
out
or
(bad)
jbe
xlat
nop
mov
adc
push
dec
out
mov
int3
in
addr16
push
fsubr
cmps
repz
add
lds
mov
pop
dec
out
mov
aas
stc
test
call
xlat
sbb
iret
out
inc
repz
cmp
mov
mov
leave
inc
in
add
inc
mov
sbb
sbb
mov
mov
xlat
mul
les
jge
dec
shr
lahf
je
loope
sbb
div
adc
ja
mov
jns
cdq
fimul
xchg
rcr
push
xchg
sub
adc
sbb
sar
push
fs
inc
jae
push
aaa
add
pushf
nop
ret
and
ret
jecxz
fs
in
or
inc
jno
lahf
pop
shl
push
movups
cmps
pop
xor
ins
sub
jle
inc
pop
push
fadd
(bad)
jmp
mov
xchg
dec
std
test
adc
aad
div
xchg
stos
xor
fwait
mov
bswap
cmp
cmps
popa
loopne
sti
push
push
xor
(bad)
cli
cmp
add
push
mov
cmp
loope
xchg
jg
imul
popf
or
scas
fs
pushf
sbb
aam
pop
push
dec
cmp
sti
push
test
jge
pop
neg
xchg
movs
push
sbb
inc
mov
scas
in
mov
mov
xchg
pushf
mov
adc
and
sub
or
xchg
daa
pop
call
push
(bad)
sbb
retf
and
sti
add
daa
out
pop
push
aas
mov
int
push
pushf
push
dec
mov
add
movs
std
push
push
and
lods
cmps
adc
add
dec
repz
dec
inc
xchg
mov
cmp
(bad)
stos
ja
pop
mov
dec
dec
xchg
mov
xchg
mov
(bad)
push
adc
test
pop
out
inc
and
adc
sbb
movs
cwde
mov
data16
or
aas
retf
push
adc
and
push
fmul
mov
or
loop
out
mov
inc
fiadd
jno
xchg
mov
mov
push
lock
stos
push
lock
mov
jbe
xchg
test
pop
or
les
stos
xchg
jb
or
adc
iret
shr
jecxz
js
data16
push
pop
cdq
push
or
mov
aaa
(bad)
pop
(bad)
push
rol
sub
xor
retf
pop
push
lods
pop
daa
(bad)
sub
adc
push
pop
in
movs
xor
fs
jge
cmps
call
pop
into
mov
sub
retf
sbb
pop
xchg
fwait
mov
jne
mov
or
fdivr
pop
std
xor
iret
in
enter
inc
or
cmp
jle
push
sub
mov
stos
or
stc
sbb
mov
js
jmp
and
cmp
push
aad
dec
mov
jb
xor
xchg
adc
add
fnstsw
into
in
mov
mov
mov
shr
xchg
xor
or
jg
mov
push
lds
adc
sti
neg
inc
pop
and
cmp
inc
pop
fwait
test
enter
push
lea
mov
or
imul
add
sahf
jb
mov
outs
jmp
lahf
lock
mov
pop
inc
adc
test
xor
ret
idiv
cli
test
add
outs
push
mov
mov
xchg
cdq
cmp
mov
push
xlat
pop
stc
dec
sbb
mov
push
fwait
and
ins
mov
xor
out
mov
hlt
inc
loope
sub
cmp
sub
and
push
or
mov
mov
mov
push
mov
movs
sbb
cs
lods
call
mov
data16
push
sar
mov
push
not
mov
jecxz
mov
sahf
pop
pusha
xchg
mov
icebp
mov
test
sub
loope
int
int3
ds
mov
jns
mov
rol
add
in
dec
leave
fadd
jns
retf
cmp
popa
xor
mov
mov
ja
mov
mov
sysret
inc
idiv
loop
int
pop
sti
dec
dec
jbe
pop
(bad)
mov
push
std
cwde
jge
int
xchg
cmp
scas
dec
mov
xchg
and
jmp
jge
mov
sti
jo
push
add
mov
mov
es
fist
inc
xchg
data16
mov
rol
fisttp
mov
add
pop
xor
imul
inc
xchg
jne
cmps
inc
push
movs
aad
sub
or
call
jmp
ins
call
mov
xchg
mov
mov
popf
shl
add
pop
inc
lahf
mov
daa
xor
cmp
movs
push
ins
lods
das
push
sub
lock
es
dec
jns
cmp
inc
daa
or
ss
test
jp
loopne
dec
inc
dec
div
inc
aaa
add
rcr
(bad)
popf
or
ror
kmovb
mov
jb
pop
add
scas
inc
mov
xor
inc
mov
lods
data16
rcr
call
addr16
jnp
pop
repz
sub
(bad)
add
adc
inc
test
sub
stos
(bad)
cs
jo
std
add
and
or
pop
push
stos
dec
sbb
outs
aaa
sub
movs
adc
pop
and
loop
mov
in
xor
loopne
jno
jl
scas
(bad)
shr
mov
aas
and
jecxz
fild
ins
fist
aaa
push
das
(bad)
repz
inc
pusha
add
test
sbb
mov
jl
shl
cmc
inc
jge
and
sub
push
ja
icebp
es
cmp
imul
cmp
and
pop
sbb
push
aad
inc
pop
mov
cmp
mov
adc
ret
lock
mov
data16
jecxz
retf
inc
mov
rcl
push
sub
hlt
aam
iret
xor
pop
movs
or
test
xchg
test
fucomip
adc
cmp
gs
mov
fwait
je
mov
pop
lods
shl
in
xchg
adc
outs
pop
stos
jne
mov
mov
cld
test
jmp
lods
add
dec
mov
test
in
int
dec
push
(bad)
xor
push
adc
jg
xor
ins
(bad)
aas
push
push
cmps
mov
stc
data16
(bad)
(bad)
outs
dec
dec
pop
mov
add
fstp
nop
or
cli
adc
movq
stos
mov
popf
inc
jle
pop
cdq
das
neg
loop
int3
mov
or
cmc
scas
xor
dec
lods
mov
fs
movs
add
fcomip
mov
div
mov
data16
push
aad
add
jnp
and
imul
imul
mov
out
jno
sar
pop
sbb
imul
inc
test
fisttp
call
loopne
mov
shl
jl
dec
test
loop
cld
fs
int3
in
std
lahf
jb
cli
cmps
lock
inc
hlt
movs
(bad)
push
mov
mov
clc
ret
sbb
enter
xlat
rcr
je
push
pusha
jbe
pop
es
mov
cld
dec
fucom
cmp
xchg
arpl
adc
and
inc
adc
mov
xchg
adc
sbb
and
xchg
cmp
pop
push
loope
xchg
and
pop
push
mov
mov
imul
(bad)
cmps
aaa
mov
mov
cmps
adc
cli
ins
sbb
sub
(bad)
cli
out
and
sbb
xor
or
xor
mov
push
cli
cmp
pop
adc
test
push
je
adc
cmp
cld
add
push
pop
out
in
mov
push
push
mov
outs
mov
call
repz
ror
sti
test
cmp
lea
xor
leave
nop
aad
dec
sbb
retf
das
aam
int3
inc
into
or
jnp
mov
outs
inc
add
aas
into
jp
mov
mov
data16
cmp
pusha
lods
adc
jle
dec
pop
test
and
xor
bndstx
add
push
pop
ficom
mov
xchg
sbb
mov
xchg
sbb
je
movs
fdivr
dec
cdq
pop
jl
mov
add
iret
mov
cmc
scas
jae
push
aad
pop
psadbw
mov
jns
fisubr
pop
xchg
jb
rcl
(bad)
hlt
cmp
clc
add
aaa
cld
dec
or
aas
loop
xchg
adc
sbb
adc
xchg
js
jmp
add
add
pop
sub
sub
fucomp
jno
mov
scas
sub
push
cmc
test
mov
mul
scas
retf
ins
lahf
mov
push
lds
push
add
retf
ds
cmp
stos
bound
pusha
out
ror
cmp
rol
fwait
int3
arpl
add
adc
outs
add
or
dec
xor
xor
fldcw
enter
mov
pop
loopne
push
js
outs
ret
mov
xchg
fdivr
cmc
cs
inc
mov
pop
mov
test
adc
sti
mov
retf
inc
push
fwait
mov
sub
fcos
icebp
inc
mov
pusha
pop
(bad)
cmp
data16
bound
mov
int3
int
pop
jmp
jecxz
and
cmp
add
add
sub
pop
jno
jne
mov
xchg
inc
push
jl
call
inc
sbb
clc
scas
repz
cmps
out
dec
retf
adc
aad
aaa
retf
mov
dec
add
fiadd
sbb
mov
jo
dec
sbb
fdiv
push
cmp
sbb
cwde
jbe
ins
mov
mov
push
daa
rcr
leave
in
ds
hlt
jbe
gs
xor
mov
dec
fs
push
xchg
mov
push
retf
icebp
js
outs
inc
push
sub
mov
push
shl
lods
or
pop
cmps
mov
add
xor
mov
stos
xchg
ja
push
clc
sar
pusha
out
dec
sub
mov
imul
nop
retf
movs
mov
repz
addr16
out
sub
and
sbb
outs
xchg
(bad)
ds
lods
retf
xor
popf
adc
push
inc
popf
ins
cld
scas
and
cmps
fs
cwde
add
xor
imul
(bad)
sbb
lods
xor
leave
cmc
mov
hlt
pusha
adc
imul
add
enter
(bad)
cmp
jae
or
mov
xchg
mov
pop
fucomip
adc
add
aas
mov
push
jb
imul
add
add
mov
ret
jge
and
dec
(bad)
mov
adc
sbb
(bad)
pushf
jmp
movs
dec
pop
loopne
out
fs
xlat
ror
cdq
dec
cli
pop
(bad)
and
ret
imul
push
mov
pop
inc
cmc
lds
(bad)
out
add
int
inc
push
add
xor
jle
bound
fs
dec
push
into
add
mov
dec
int
sti
inc
xchg
jmp
jae
xchg
test
mov
or
(bad)
jmp
adc
inc
mov
fsub
dec
ficomp
or
xchg
mov
dec
sub
xchg
imul
addr16
xor
pop
lods
push
push
lods
jne
dec
test
lods
mov
or
pop
dec
dec
inc
sbb
and
jg
ret
test
add
cs
fisubr
fdiv
mov
add
jecxz
push
push
jmp
clc
mov
dec
add
xchg
cld
add
fidiv
mov
dec
jmp
sbb
in
cmp
sbb
addr16
sub
push
xchg
arpl
mov
lods
retf
dec
cmp
imul
xor
dec
out
or
sub
mov
lea
mov
jns
pop
xor
sub
push
cmp
cmp
retf
mov
mov
add
movs
ret
call
sub
nop
push
adc
push
dec
(bad)
xchg
rcr
pop
dec
call
iret
dec
add
leave
neg
jo
inc
jbe
inc
test
push
daa
mov
sub
mov
out
inc
std
loop
pushf
in
inc
inc
jg
(bad)
aaa
outs
add
mov
jg
ficom
lods
adc
jmp
loope
inc
ret
outs
pop
pop
mov
ins
mov
sahf
dec
sub
cld
test
scas
mov
ficomp
add
mov
call
xlat
sub
mov
jl
cmp
jnp
xchg
sbb
inc
cmp
ffree
lea
pop
mov
std
fcomp
cwde
xlat
inc
push
addr16
or
or
and
and
cdq
cmp
sub
adc
ficom
sbb
(bad)
cs
rol
loop
call
jmp
jb
inc
lods
mov
mov
test
fldpi
retf
add
xchg
jnp
sbb
xor
icebp
in
and
pop
add
mov
xor
mov
out
ret
fdiv
std
inc
jl
inc
mov
and
ss
sub
pop
js
pop
daa
aad
jge
mov
pop
cmp
inc
retf
pop
sbb
add
ret
inc
mov
adc
xchg
outs
movs
xchg
mov
mov
loop
stos
in
(bad)
jp
mov
aad
sbb
mov
sbb
aas
jge
movs
imul
movaps
ins
lahf
fstp
mov
sub
or
dec
je
mov
jb
mov
jns
xchg
mov
or
jns
iret
mov
mov
fadd
mov
xor
jge
mov
enter
leave
jge
sahf
mov
jae
sahf
lods
sub
(bad)
push
sbb
cwde
inc
lea
cmp
rcr
aad
fadd
and
sub
and
in
mov
mov
push
repnz
fld
jg
push
jmp
xor
daa
scas
cmp
pop
or
not
push
add
enter
clc
ja
dec
push
jns
push
cmp
ins
xchg
pushf
jle
(bad)
push
in
inc
xchg
stos
mov
adc
mov
aas
and
xabort
xchg
loop
dec
in
jle
xor
(bad)
fadd
adc
jle
test
sbb
push
or
out
mov
fsub
rol
cmps
retf
pop
sbb
pop
pop
jecxz
mov
lea
add
xor
push
dec
jmp
int
sbb
xchg
xchg
loopne
xchg
mov
dec
(bad)
mov
mov
lea
movs
fmul
adc
pop
pop
movs
mov
sbb
cli
in
mov
pop
stc
push
sbb
int3
retf
add
sub
add
sub
mov
nop
aam
sbb
jg
(bad)
adc
and
imul
mov
mov
fcomp
mov
(bad)
out
xchg
(bad)
push
(bad)
cmps
mov
lock
ins
mov
jge
cmc
mov
xchg
popf
or
xlat
enter
inc
mov
sahf
pop
jne
ror
retf
jp
xchg
inc
xchg
push
aad
add
ret
(bad)
data16
das
mov
mov
pusha
popf
jmp
adc
sub
and
pop
imul
sub
ds
pop
ja
or
xchg
xor
stos
add
pop
pushf
(bad)
call
outs
inc
mov
mov
mov
xor
out
mov
mov
xchg
jl
stc
loopne
fdivrp
cmp
in
dec
cld
adc
xor
inc
popa
js
cmps
daa
sbb
xor
or
dec
inc
clc
ins
retf
mov
jg
add
add
or
mov
inc
pop
xor
cmps
popf
push
mov
inc
mul
push
mov
mov
mov
es
fcom
movs
mov
fs
mov
and
jmp
aad
dec
sbb
scas
sbb
xor
(bad)
pop
cld
pop
inc
cmp
vmwrite
sub
sahf
push
push
stc
js
stc
mov
aaa
cmp
pop
fwait
pop
sub
mov
leave
clc
fwait
sbb
dec
ins
lea
popf
(bad)
outs
call
mov
sbb
fldenv
scas
xor
shr
jecxz
xchg
adc
mov
jmp
ret
test
dec
xchg
push
cmps
sub
adc
std
sub
xor
jne
dec
sub
mov
sbb
imul
jg
data16
jl
sbb
or
mov
fsubr
add
dec
(bad)
fnstsw
ret
adc
rol
movs
arpl
fisttp
mov
sbb
jl
into
sti
mov
repz
lea
dec
fimul
pop
adc
(bad)
loopne
pop
sub
adc
add
stos
fnstsw
push
enter
ds
add
xchg
es
xor
jle
scas
pop
aaa
movs
xor
or
inc
cld
enter
mov
pop
inc
and
js
mov
adc
test
mov
mov
mov
movs
scas
test
push
cmc
stos
sub
push
adc
paddw
int3
pop
(bad)
cmp
push
test
pop
pop
sti
dec
and
shr
std
and
inc
iret
adc
mov
scas
and
push
jne
jge
mov
outs
mov
cs
(bad)
cmps
es
fnstsw
inc
bound
sub
test
push
xchg
mov
dec
mov
xchg
sub
add
fimul
lea
aad
fucom
jo
mov
test
mov
jns
fsub
sbb
cld
pop
push
or
shl
ror
lock
inc
inc
mov
push
push
pop
(bad)
popa
ja
push
inc
xchg
xchg
shl
fdivrp
mov
mov
fs
imul
imul
(bad)
mov
pop
cmc
fsubr
sub
inc
mov
test
pop
mov
(bad)
mov
xchg
mov
xor
pop
(bad)
aam
pop
cdq
cmp
aaa
popa
scas
pop
and
sahf
mov
adc
aam
xchg
xlat
add
iret
punpckhdq
fstp
adc
xor
es
xor
jl
mov
rcr
sbb
inc
ret
shl
dec
add
shl
sahf
les
push
int3
sti
mov
aad
cdq
call
xchg
lahf
xchg
adc
sti
xchg
jecxz
jno
mov
lock
jmp
jbe
fsubr
push
bound
retf
retf
enter
inc
jmp
dec
dec
cld
xor
je
aaa
mov
iret
push
iret
jge
xchg
pop
or
xor
ss
out
mov
stc
jg
jg
push
fadd
pushf
push
shl
sbb
(bad)
popf
mov
pop
sahf
(bad)
mul
cmp
les
cwde
pop
hlt
and
cmp
adc
int
pop
fistp
imul
daa
add
lods
xchg
inc
into
into
or
xor
ins
bound
or
jg
xlat
pop
pop
mov
sub
fdiv
call
scas
pop
std
mov
dec
mov
loopne
and
stos
(bad)
adc
inc
mov
add
(bad)
xchg
scas
sbb
fiadd
jno
push
or
fdiv
iret
jae
cs
jg
fisubr
pop
mov
push
pushf
ret
xchg
sahf
imul
mov
ss
gs
sbb
aaa
les
mov
pop
mov
mov
sti
cld
test
mov
jo
je
ds
js
mov
mov
int3
mov
or
fild
xchg
cwde
rol
add
mov
fdiv
mov
push
les
sub
jmp
fild
push
pop
test
jg
sub
mov
leave
pop
iret
in
or
cmc
jbe
sbb
sbb
push
and
mov
xchg
or
jl
mov
add
dec
push
dec
iret
leave
loopne
xchg
repnz
fstp
and
dec
(bad)
cmp
mov
cld
sub
fidivr
xchg
and
aad
jp
and
mov
ss
repz
fs
push
sub
xchg
scas
leave
adc
jle
rol
jmp
pop
adc
fild
pushf
jp
popf
cs
scas
mov
pushf
iret
mov
xchg
jecxz
pushf
dec
jns
mov
mov
mov
idiv
test
aad
rcr
add
cld
retf
stc
enter
popf
mov
pop
aaa
push
shr
inc
pushf
sbb
imul
jns
stos
outs
pop
push
cdq
mov
loop
and
retf
push
xor
sbb
das
cmp
or
mov
(bad)
movs
pushf
push
pop
adc
test
inc
scas
jmp
fnstsw
pop
shr
hlt
nop
or
inc
or
movs
mov
mul
or
mov
add
retf
(bad)
js
sahf
ret
push
loopne
rol
dec
sar
jmp
enter
pop
mov
push
mov
sbb
xchg
fldcw
fmul
lahf
repnz
dec
push
addr16
je
jle
call
mov
dec
out
lahf
cmp
inc
ror
cmp
(bad)
cmps
push
sub
cld
lahf
aaa
test
mov
xchg
adc
fdivr
lea
cmp
mov
jmp
or
pop
stos
je
or
or
pop
fiadd
inc
pop
xor
and
mov
arpl
pop
adc
mov
sbb
arpl
test
jns
push
pop
stos
and
fadd
(bad)
std
stos
inc
add
aam
stos
mov
dec
call
mov
icebp
mov
xor
ror
pop
and
jno
cmp
xchg
in
inc
retf
shr
inc
inc
inc
in
arpl
adc
and
pushf
push
cmp
ds
mov
xchg
imul
sbb
pop
sub
sub
mov
mov
pop
in
sub
jns
xchg
popa
fwait
movs
mov
push
loope
xchg
in
ror
mov
cmp
pop
ret
and
pop
fcom
and
mov
jns
cli
and
inc
inc
mov
add
inc
movs
ja
lea
gs
push
pop
(bad)
lock
jecxz
jb
nop
inc
mov
sahf
pop
jmp
ja
imul
xchg
sub
dec
hlt
mov
iret
pop
mov
and
sti
test
scas
fistp
jmp
cmp
in
push
icebp
and
dec
fadd
dec
pop
into
sbb
out
sti
fisub
xor
sub
jb
adc
sbb
or
lods
push
push
mov
sub
cdq
rol
neg
shl
mov
jp
in
sub
pusha
push
retf
fst
mov
inc
pop
or
lock
popf
dec
add
int3
pop
cs
mov
ret
arpl
fstp
push
clc
inc
and
sub
rol
js
inc
loop
jae
or
scas
sub
adc
ins
sub
push
mov
ret
retf
mov
(bad)
popaw
pop
or
lds
xlat
xchg
fwait
inc
xor
mov
cmp
inc
data16
mov
cld
in
aad
inc
pop
(bad)
fdiv
ins
not
sub
mov
ds
add
pop
fsubr
pusha
xchg
dec
sbb
sahf
mov
sub
arpl
add
cmp
sub
push
xlat
imul
jno
cmps
stc
sysenter
sub
mov
and
add
sub
ret
mov
add
rcr
stos
test
dec
test
mov
xchg
pusha
cmp
inc
outs
stos
mov
or
cs
(bad)
fsubr
add
and
daa
sub
in
cdq
mov
leavew
into
jno
sbb
adc
jbe
jmp
pushf
sub
and
cmp
stos
mov
mov
divps
push
ror
mov
pop
in
stos
sub
bound
sbb
mov
and
xchg
cmc
test
std
xor
lahf
jne
pop
stos
dec
pop
push
aad
fistp
adc
xor
pop
mov
xchg
lahf
aas
sbb
pop
call
inc
inc
out
push
add
jmp
int3
jo
dec
push
(bad)
mov
mov
adc
out
test
test
and
ins
jmp
mov
adc
retf
rcr
mov
sbb
and
stos
leave
mov
cwde
mov
push
pop
push
hlt
jmp
imul
cmp
jp
jns
jne
movs
mov
data16
or
aaa
call
aaa
xchg
pop
mov
cli
pop
dec
mov
mov
clc
cmp
cmp
mov
(bad)
hlt
add
sbb
pushf
ss
jb
stos
mov
movs
xor
arpl
cwde
bound
xchg
hlt
fs
fist
icebp
mov
xor
out
pop
rcl
and
sbb
jo
jp
mov
leave
jns
fadd
mov
jle
pop
adc
push
ins
jns
add
add
mov
pop
cwde
cmp
scas
mov
ret
outs
xchg
xchg
fstp
leave
mov
and
out
push
xchg
test
mov
xchg
loop
test
inc
loop
call
inc
in
cmc
pop
pop
sub
jmp
pop
sbb
fwait
aas
pop
inc
mov
push
dec
out
mov
pushf
mov
(bad)
fist
popa
inc
into
inc
xor
arpl
dec
jnp
push
xchg
mov
add
and
pop
xchg
enter
jae
scas
inc
xor
jl
xchg
shr
in
(bad)
(bad)
xor
xchg
add
cli
xchg
and
cmp
(bad)
repz
pushf
and
pop
mov
push
sbb
test
enter
pop
into
cld
jle
retf
fs
jge
mov
pop
dec
mov
cmp
mov
ins
pop
cmp
icebp
xchg
inc
mov
push
pop
fld
cwde
adc
mov
and
cld
xchg
xchg
inc
test
add
fcmovbe
mov
ret
inc
sbb
stos
push
jecxz
fsubr
inc
es
fmul
push
lahf
cmp
push
stos
or
pop
jb
mov
sar
cmc
addr16
inc
bound
inc
cs
adc
add
jns
push
or
adc
inc
(bad)
in
mov
popf
call
push
and
xchg
retf
ret
mov
and
aam
setno
pushf
mov
ss
push
mov
mov
not
idiv
lds
mov
or
cmp
aad
jbe
push
jne
inc
sahf
cmp
jl
outs
and
xchg
mov
and
aam
mov
inc
sbb
cmp
js
sub
push
mov
aas
mov
test
cmp
pop
xchg
mov
gs
inc
cdq
dec
jmp
push
pop
stos
add
mov
cmp
bound
mov
(bad)
or
imul
or
retf
rcl
add
push
push
scas
ins
cmp
xchg
mov
pop
cdq
ret
cmp
cmp
and
or
pop
mov
movs
dec
adc
popf
das
aas
adc
inc
test
imul
add
jge
mov
inc
sti
in
sti
push
inc
test
call
int3
cmpxchg
jne
fwait
xchg
leave
sar
(bad)
push
xlat
sub
test
pop
sar
jae
jno
add
push
mov
popf
nop
mov
sti
jmp
xchg
retf
jle
dec
adc
pop
sbb
pop
int3
and
pop
bound
jp
ror
test
jle
pop
push
inc
call
loope
dec
loopne
arpl
(bad)
ret
dec
lods
mov
add
repnz
clc
fld
xchg
sub
shl
fnstsw
dec
push
pop
cmp
gs
or
or
stos
pop
into
lea
fwait
(bad)
jnp
pop
aaa
mov
fs
add
cmps
inc
sbb
scas
xor
cmp
sti
add
pop
jns
popf
imul
sbb
mov
leave
in
adc
loopne
push
test
(bad)
pusha
dec
mov
mov
add
(bad)
xchg
aam
jae
in
(bad)
xor
ja
or
ret
jo
xor
inc
mov
inc
popa
mov
jp
mov
mov
sti
jmp
xor
lds
sbb
(bad)
jbe
dec
ins
xor
adc
mov
xor
bound
mov
inc
jno
sahf
and
mov
mov
cmp
sar
pushf
enter
jno
(bad)
mul
add
sbb
lods
push
or
loop
jmp
sub
xchg
dec
jg
pusha
add
xchg
mov
fs
xchg
inc
inc
dec
and
add
push
adc
or
mov
ds
push
dec
mov
mov
sbb
sub
fsubr
pop
(bad)
mov
retf
cmp
test
mov
cmp
in
cmp
popa
nop
mov
pop
push
mov
rol
pop
cmc
test
push
lods
or
cmc
inc
out
adc
dec
adc
pop
pop
jmp
mov
pop
or
push
call
inc
cmp
xor
dec
and
sbb
and
push
js
or
(bad)
or
imul
pop
(bad)
sbb
jne
mov
fadd
retf
inc
call
in
sub
out
aaa
fcom
mov
pop
mov
aam
stc
repnz
cwde
je
jp
ds
xor
fucompp
push
rcr
es
fcomp
sbb
popa
mov
mov
out
fnstsw
movs
jmp
in
cs
jmp
pop
inc
cmp
je
rcl
(bad)
fstp
pusha
pop
inc
shr
inc
aad
cmps
(bad)
loopne
rcr
push
jecxz
mov
pushf
jle
in
mov
fidivr
jmp
xor
sub
(bad)
xchg
scas
js
aaa
popa
aaa
data16
aaa
dec
and
shr
cli
retf
adc
mov
add
repnz
mov
scas
sub
cmps
loop
mov
push
aad
add
push
xlat
movs
shr
jae
in
add
(bad)
das
leave
add
lahf
inc
jno
mov
and
xlat
xchg
call
fwait
pusha
iret
dec
aad
add
push
pop
sbb
cmp
in
adc
mov
aaa
(bad)
cmc
jl
icebp
jl
sbb
loop
sbb
sbb
sbb
or
fwait
call
mov
rol
call
retf
mov
sbb
add
(bad)
jbe
in
fwait
cmp
ficom
mov
sub
cmp
fldpi
inc
rol
jns
jo
sbb
mov
sbb
mov
xor
sbb
jne
mov
and
sbb
push
cmp
call
pop
sub
mov
leave
jmp
outs
(bad)
scas
xchg
out
ins
fdiv
and
rcl
mov
mov
or
mov
mov
test
dec
std
fisubr
push
fs
cmp
outs
cmps
xchg
movs
lea
sub
add
sub
cmp
push
push
sub
sbb
fbstp
scas
dec
mov
xor
push
inc
fucomp
xchg
pop
je
dec
push
push
mov
cmp
shl
push
into
data16
mov
pop
movs
mov
out
fchs
pop
push
mov
(bad)
adc
loop
aad
std
add
dec
popf
xor
stos
ja
or
pop
int3
jge
enter
inc
fs
or
adc
push
push
xchg
or
(bad)
outs
inc
lea
mov
std
cs
pop
dec
in
pushf
dec
mov
dec
pop
mov
and
jp
clc
fsub
add
ret
and
hlt
adc
jp
jecxz
ss
push
out
pop
push
stc
(bad)
jge
cmp
jnp
popf
das
sbb
xor
ins
cdq
xchg
les
in
or
xchg
push
dec
push
and
and
pop
pop
adc
or
dec
mov
push
xchg
lods
call
sub
pop
cld
ficomp
rcr
dec
inc
mov
push
sti
repz
adc
rcl
mov
mov
test
mov
das
add
loope
lock
push
inc
push
dec
mov
dec
add
retf
(bad)
xor
sub
imul
pop
call
dec
arpl
inc
neg
pop
neg
mov
les
and
and
add
xchg
and
push
mov
shr
sbb
ja
mov
hlt
test
xchg
fdiv
int
(bad)
sub
int
xlat
je
xor
ins
fsubr
and
xchg
jge
fbstp
or
sar
push
lods
jae
inc
imul
sbb
test
jle
pusha
dec
jno
dec
retf
cmp
pushf
jae
rol
mov
dec
mov
jae
and
repz
push
les
pop
cmp
fdiv
shl
and
mov
xor
imul
out
sbb
xchg
jno
jne
cli
sub
cmp
adc
jl
scas
pushw
aad
js
xlat
xchg
and
push
xor
icebp
mov
iret
mov
jno
movs
ss
fiadd
out
push
mov
cmps
aaa
rcl
mov
sub
shl
out
test
cwde
call
or
in
inc
out
cmp
xor
sub
or
xchg
sahf
cdq
mov
sbb
sbb
mov
mov
inc
mov
ss
sbb
ret
aam
js
into
lahf
and
mov
mov
jns
mov
jns
cld
call
(bad)
lock
jp
fwait
mov
push
movs
xchg
and
(bad)
repz
inc
jns
lahf
je
dec
out
sub
(bad)
mul
fcom
inc
push
mov
ret
rcr
loopne
add
(bad)
pop
jg
xor
xor
or
mov
pop
dec
xchg
jp
fisttp
mov
cli
xor
test
xchg
mov
dec
outs
pop
fdiv
mov
push
call
retf
lock
add
shl
jo
xchg
lahf
inc
in
jmp
iret
std
pop
fadd
sbb
lods
dec
adc
mov
call
arpl
ret
add
enter
inc
scas
dec
add
cld
cs
adc
call
fmul
push
push
pop
cmps
and
test
jae
adc
jmp
jmp
sbb
in
cld
(bad)
jmp
fidiv
and
rcr
in
jo
and
pop
sahf
aaa
adc
xchg
pop
pop
push
jmp
jle
fistp
stos
int
dec
dec
pop
neg
jne
sbb
push
xchg
and
dec
pop
mov
push
movs
test
pop
in
out
inc
repz
pushf
jnp
ja
imul
std
call
xor
call
xchg
sahf
cmps
mov
stc
lods
std
in
pop
xchg
lods
dec
int3
jp
cmp
push
call
add
and
sbb
std
dec
sbb
fnsave
push
in
add
fiadd
inc
push
and
sbb
cmp
stos
jo
xchg
xor
sub
repnz
sti
push
shr
inc
lahf
ss
cld
pusha
cmps
out
sbb
pusha
adc
jmp
xor
mov
shr
test
dec
(bad)
pop
cli
or
or
stc
mov
enter
jno
sub
adc
mov
mov
pop
sahf
(bad)
das
mov
inc
cmps
adc
inc
and
mov
dec
jne
push
sub
mov
sub
inc
fcomi
mov
cld
imul
sbb
push
mov
push
rol
test
int3
sbb
xor
fcmovb
hlt
ffree
dec
pop
jmp
icebp
xor
imul
test
and
sbb
push
inc
mov
lods
jnp
hlt
ds
pop
pop
inc
and
daa
outs
jns
sub
or
lods
outs
add
dec
pop
mov
addr16
cli
xchg
sbb
sbb
out
repnz
out
jbe
lahf
ja
xchg
fdivr
movs
test
dec
fisttp
cmps
ror
fld
push
mov
adc
iret
(bad)
fstp
sbb
pusha
fisttp
dec
jg
push
inc
push
xchg
mov
cwde
sub
in
gs
lds
leave
adc
jns
cmp
cmp
ss
jne
push
sbb
cdq
xor
fstp
mov
cmp
cmp
shl
dec
int3
(bad)
mov
movs
mov
inc
lahf
xchg
lods
popa
ds
retf
enter
mov
cmp
dec
loop
aam
in
dec
sub
sbb
pop
inc
call
ins
fisttp
pop
inc
inc
rcr
sysret
sahf
or
xchg
or
xor
jle
lods
mov
rcl
fild
movs
enter
sti
push
in
push
push
call
pop
repz
mov
push
loope
xchg
inc
in
fild
mov
gs
sti
in
lds
and
push
jns
push
cmp
xchg
inc
loope
sbb
sbb
and
xchg
pop
mov
mov
push
popf
sar
cli
retf
(bad)
and
push
and
mov
loop
ret
push
xlat
ficom
movs
cmp
mov
rcl
or
add
pop
loope
dec
sbb
pop
mov
xor
(bad)
adc
daa
(bad)
or
pop
sub
and
sbb
jg
xchg
inc
pop
xchg
movs
mov
in
out
add
inc
inc
mov
fdivr
(bad)
mov
xchg
sbb
call
scas
bound
popf
xchg
mov
mov
xchg
fst
fisttp
inc
sbb
popf
sbb
cmp
mov
or
pop
clc
ret
(bad)
pop
push
aaa
clc
inc
push
sbb
ss
push
mov
pop
repz
std
arpl
adc
repz
xlat
bound
cwde
inc
xlat
movs
(bad)
xor
xchg
add
(bad)
fild
cmps
ret
pop
arpl
leave
mov
inc
out
(bad)
mov
sbb
sub
out
int3
jmp
mov
pop
push
jle
mov
iret
jg
fidivr
cli
jnp
jno
out
xor
stos
inc
xchg
pop
hlt
jnp
lods
pop
sbb
push
inc
scas
mov
adc
aas
shl
xor
outs
popa
mov
pop
out
mov
aam
add
cli
out
jo
pop
mov
scas
fisubr
call
inc
repz
neg
jbe
push
maxps
(bad)
xlat
popa
std
adc
jp
sub
jg
inc
push
jg
mov
fist
fwait
aad
sahf
out
inc
push
push
pop
sti
and
sub
jbe
sbb
mov
pop
in
sahf
or
outs
in
in
inc
scas
frstor
pop
and
pusha
cdq
cld
xchg
push
xchg
out
push
test
test
rcl
aas
ficomp
xchg
aam
jmp
jg
mov
jmp
inc
sahf
xor
jo
sbb
loopne
sbb
mov
int
sbb
jl
iret
or
pop
jmp
add
aaa
rcr
jo
adc
nop
sbb
int3
and
mov
sbb
test
xchg
fsubr
enter
cld
jl
faddp
cmp
sbb
fistp
sti
cwde
mov
in
fsubr
cdq
mov
cmp
dec
xchg
leave
call
adc
inc
mov
movs
mov
push
sbb
inc
iret
sar
leave
mov
sbb
and
adc
pusha
jnp
jbe
mov
jno
mov
add
push
popa
std
(bad)
mov
cmp
and
mov
mov
xchg
push
pushf
xchg
pop
sub
loope
sub
div
popf
dec
je
cmps
mov
cdq
jecxz
inc
pop
test
cmp
pop
in
add
xlat
mul
xor
or
ja
push
mov
int
cdq
mov
mov
push
inc
jb
mov
xor
cmps
pop
adc
inc
cmps
xchg
mov
ds
outs
out
xor
inc
inc
xchg
scas
loopne
loopne
in
pushf
stos
dec
pop
fcmovne
cmps
sbb
fst
lods
push
sbb
(bad)
test
leave
(bad)
jp
scas
xchg
shl
dec
pop
push
ror
cmp
mov
jnp
pop
mov
les
call
pop
adc
sub
or
mov
jae
mov
(bad)
in
pushf
jne
add
fadd
mov
frstor
movs
ins
rol
mov
sub
loope
paddsw
xchg
mov
pusha
xchg
mov
dec
jecxz
inc
xchg
push
icebp
int3
jmp
loop
push
aaa
xor
aaa
sbb
call
dec
out
clc
cmp
leave
jg
ja
test
adc
sbb
test
test
jb
mov
(bad)
lods
xchg
adc
inc
jbe
pop
fcmovu
hlt
dec
mov
mov
mov
cmps
mov
dec
test
cld
js
leave
(bad)
xchg
in
ret
dec
sbb
not
cmc
push
icebp
dec
pop
pop
addr16
xor
std
push
push
jno
lahf
mov
js
mov
stos
(bad)
push
jae
adc
and
xchg
inc
fwait
ins
aad
inc
ror
test
pushf
adc
push
imul
cld
inc
fistp
fwait
xor
xlat
push
loop
push
mov
cli
mov
push
jne
inc
repz
sar
mov
inc
and
int3
mov
jl
pop
add
pop
in
push
or
pop
fsub
and
in
jne
add
out
aaa
aaa
push
sub
jb
inc
push
xor
xchg
xchg
adc
dec
ret
aam
sub
jmp
mov
scas
push
mul
adc
loope
pop
aad
(bad)
jbe
inc
mov
fcmovnb
or
xchg
mov
or
out
cli
clc
jnp
sahf
sahf
imul
inc
int
and
push
push
outs
loopne
daa
inc
jmp
push
stos
jle
fcomp
int
pop
inc
dec
ret
and
push
or
sbb
pop
adc
cdq
mov
cli
shl
pop
sahf
(bad)
imul
inc
jb
pop
mov
xchg
shl
add
in
mov
clc
data16
call
or
pop
inc
lods
mov
dec
aad
sbb
(bad)
iret
dec
retf
sub
push
xchg
pop
and
mov
lods
or
(bad)
aas
mov
add
sub
or
mov
xchg
push
(bad)
dec
arpl
test
xor
hlt
mov
mov
imul
sub
cwde
out
inc
(bad)
mov
sbb
shr
test
dec
fstp
loopne
mov
cmp
shr
cdq
mov
add
(bad)
retfw
push
inc
mov
inc
sbb
xchg
sub
push
out
outs
jb
dec
hlt
cmp
ja
js
pop
mov
lods
popa
imul
adc
sub
fwait
mov
(bad)
inc
add
push
sti
pop
js
mov
pop
mov
jmp
push
clc
rol
mov
gs
mov
(bad)
stos
retf
stos
xchg
dec
out
shl
sbb
lahf
inc
gs
mov
jns
imul
mov
addr16
mov
(bad)
xlat
jg
pop
xor
js
adc
das
jmp
sbb
add
xchg
in
dec
and
mov
aam
data16
cmps
fnstsw
hlt
sti
jg
lahf
inc
sub
std
mov
icebp
jge
imul
inc
xchg
mov
mov
call
imul
lds
xor
xchg
or
push
jle
inc
cmp
xchg
mov
(bad)
push
shl
mov
adc
and
imul
cdq
cmp
sbb
dec
cmps
shl
retf
repnz
xchg
mov
pop
pop
ins
test
cmp
in
mov
jmp
or
frstpm(287
mov
aam
cmc
mov
push
pop
inc
loop
xchg
in
mov
xchg
cmps
push
imul
cmp
dec
shr
mov
xchg
push
inc
or
cmp
addr16
imul
sub
or
out
sbb
fs
es
aaa
mov
mov
inc
lahf
nop
xchg
aaa
daa
and
inc
stos
iret
jl
je
lea
stc
pop
ins
movs
imul
xor
mov
call
pop
out
test
inc
ror
lods
add
ins
(bad)
push
xlat
sub
push
in
and
inc
mov
cmp
push
cmps
lds
dec
sahf
fidiv
xchg
jne
jns
(bad)
jns
aaa
pop
retf
and
push
retf
out
scas
mov
inc
pop
jnp
mov
mov
clc
(bad)
sahf
inc
mov
mov
xchg
cdq
push
pop
fbld
mov
ins
outs
lahf
mov
std
nop
aam
inc
sbb
aaa
sub
jecxz
enter
add
push
mov
push
js
pop
inc
adc
push
sti
jge
clc
jl
fild
jbe
sbb
cmp
mov
xchg
and
jl
cmps
dec
add
mov
in
mov
xchg
aad
sar
movs
ins
jmp
push
retf
loope
or
mov
fwait
adc
adc
fcomip
(bad)
jl
popf
ret
imul
(bad)
loop
shl
or
sub
cmp
div
add
rcl
xchg
cmc
and
shl
jns
(bad)
and
or
add
dec
ja
adc
jmp
and
int3
hlt
xchg
xchg
push
icebp
push
ret
mov
add
and
fmul
mov
ins
ja
fimul
mov
scas
mov
daa
add
inc
fdiv
imul
mov
jbe
jne
mov
into
inc
cli
rol
cdq
mov
pop
inc
loope
ins
sbb
mov
and
sbb
adc
rcr
leave
cmc
call
jns
cmps
je
popf
idiv
sti
icebp
stos
inc
lds
adc
jnp
cmps
xchg
in
or
sbb
cmps
fwait
cmp
xor
aad
enter
pop
ss
imul
mov
add
xor
inc
mov
fwait
ret
es
std
push
(bad)
cmp
fisubr
pop
inc
adc
xchg
aaa
mov
scas
dec
push
xor
pop
pop
mov
test
fwait
repnz
fbstp
inc
movs
cs
mov
mov
ret
loope
adc
shr
cdq
add
mov
sahf
mov
cmp
rol
cmp
jb
or
push
stc
cld
fst
cmp
push
mov
imul
adc
out
jo
leave
pop
jo
add
sub
adc
mov
adc
inc
stos
pop
jnp
cmps
lea
and
dec
clc
aad
or
icebp
jo
inc
jnp
cmps
ins
jmp
dec
retf
push
(bad)
jecxz
sub
inc
mov
test
mov
xchg
bound
lock
mov
xchg
lahf
jp
jnp
cmovo
fcomp
data16
and
jge
imul
cmp
pushf
mov
shr
test
pop
push
pop
cmp
inc
adc
aaa
lahf
sub
sub
cmps
dec
jne
cdq
(bad)
sbb
and
hlt
call
retf
push
push
cmps
jnp
scas
enter
xchg
pusha
int
gs
rcr
das
test
js
test
shr
outs
adc
push
(bad)
es
cmp
sub
cmp
es
arpl
mov
rcr
aam
xchg
mov
adc
fnstcw
add
or
ss
inc
arpl
jb
(bad)
fcmovnbe
test
call
jno
pop
repz
xlat
cmp
loopne
push
std
xchg
add
push
cmc
pop
xchg
cld
cmps
mov
cmps
outs
inc
in
xchg
fs
clc
scas
test
mov
es
or
test
ds
(bad)
inc
jge
inc
cmp
mov
cdq
push
aas
in
push
out
in
or
leave
dec
sbb
sbb
sbb
add
or
push
xchg
xchg
jae
mov
dec
cwde
iret
mov
retf
sar
jg
pop
adc
push
bswap
cmps
cmc
cs
inc
mov
cwde
fcomp
jns
loope
lods
outs
and
in
ret
ins
xchg
aad
cmc
push
leave
das
pop
dec
aad
in
inc
retf
push
pop
xchg
inc
in
daa
or
and
(bad)
xor
and
and
sub
pushf
das
iret
and
pusha
push
call
xchg
stc
sbb
leave
stos
and
jnp
(bad)
aad
(bad)
pop
in
stos
push
leave
cdq
jge
int
mov
retf
jge
sbb
inc
cmps
push
xor
mov
sub
cmp
out
int3
push
in
pop
cs
stos
pop
arpl
cdq
inc
pop
jnp
xchg
mov
cwde
aad
ror
fs
and
inc
adc
jl
sub
ins
mov
xchg
or
mov
mov
sbb
xor
push
pop
sub
mov
addr16
stos
inc
add
loope
mov
xchg
data16
loopne
mov
xor
fs
stos
xor
sub
inc
(bad)
sbb
push
inc
lea
push
inc
xchg
ret
mov
add
in
push
cld
sbb
sbb
pop
and
test
leave
das
les
xchg
jno
mov
mov
pushf
lock
mov
pop
je
jp
pushf
loopne
mov
xchg
dec
repnz
adc
div
mov
js
(bad)
fidivr
cdq
out
aam
jl
fdiv
ret
jl
xor
dec
(bad)
fisub
rcr
inc
inc
fwait
jb
jo
xchg
scas
xchg
dec
and
dec
xchg
call
jae
or
and
hlt
adc
adc
fwait
mov
ins
inc
sub
mov
retf
inc
pop
daa
fsub
mov
and
shl
xchg
loop
add
hlt
dec
cmc
and
mov
ret
repnz
dec
sbb
mov
adc
sbb
fld
or
or
sahf
inc
or
mov
mov
fcomp
or
fbstp
or
and
lahf
sub
mov
xlat
xor
mov
sub
and
out
mov
arpl
push
mov
mov
into
loopne
adc
les
mov
pop
jno
nop
stos
cmp
sti
sar
mov
adc
push
icebp
shr
jl
cmp
dec
mov
aaa
push
bound
sbb
inc
in
sub
ret
outs
push
push
inc
int
sbb
adc
push
fmul
das
jns
rcr
loop
cmps
adc
pop
pop
mov
inc
call
cwde
jno
in
loopne
push
xchg
inc
cmps
in
jmp
test
fdiv
pop
inc
in
mov
cmp
frstor
cli
inc
inc
sbb
push
sbb
or
xchg
mov
out
shufps
push
jle
mov
and
sbb
mov
push
fwait
mov
das
inc
and
mov
inc
mov
dec
ja
push
sar
out
repnz
jns
int
hlt
and
test
data16
retf
clc
not
add
repnz
dec
xchg
fucomi
jle
dec
jg
outs
test
js
push
cmc
mov
mov
add
add
sbb
jno
mov
mov
push
push
xchg
pop
xchg
xchg
stos
ins
inc
sub
jmp
pop
clc
pop
push
and
and
(bad)
movs
inc
loop
add
push
test
mov
hlt
add
pushf
mov
xlat
outs
inc
mov
dec
cmp
(bad)
aam
rol
jo
pop
scas
aas
jle
mov
jbe
adc
sbb
loope
xchg
in
pop
adc
enter
xor
out
pop
mov
cli
imul
and
rol
cdq
fstp
fdiv
je
pop
loopne
neg
mov
fnsave
add
xchg
inc
cwde
dec
jno
test
jecxz
scas
test
sbb
shl
(bad)
push
cli
adc
imul
sub
xchg
lods
mov
jecxz
push
mov
pusha
pop
push
pop
inc
inc
or
mov
pop
pop
mov
outs
mov
data16
cli
mov
fcomp
data16
pop
xchg
aam
popf
rcr
ss
loopne
adc
cwde
mov
add
mov
gs
shl
scas
push
dec
out
cmp
jecxz
out
xor
xor
sub
mov
add
sbb
rcl
test
sbb
jge
mov
sbb
jg
xchg
imul
push
gs
xchg
test
cmp
mov
cmc
pop
add
xchg
shl
xchg
xor
aad
sti
mov
push
jge
pushf
xchg
daa
adc
stc
mov
xchg
test
push
or
repz
cmp
outs
mov
sbb
cmp
dec
mov
mov
add
icebp
js
mov
pop
inc
ret
and
and
mov
xor
cli
or
(bad)
test
nop
cmc
jg
bound
sahf
inc
xchg
fsub
aam
addr16
jb
fcmovu
cmc
adc
mov
jl
mov
cwde
mov
mov
jmp
lods
xor
or
vandps
and
cdq
cmp
mov
xchg
pop
in
ror
movs
shl
gs
adc
iret
inc
sbb
add
rcr
int3
fnstenv
rcr
test
neg
sbb
xchg
push
leave
stos
add
in
fnstenv
mov
in
aaa
xchg
ins
add
std
test
scas
pop
xchg
jo
cmp
aad
icebp
je
pop
jp
cmp
pusha
sub
(bad)
adc
out
int3
aam
stos
cmc
push
push
addr16
and
add
nop
or
pop
push
pushf
dec
inc
mov
mov
inc
xor
retf
mov
inc
lock
lock
dec
xchg
int
dec
ret
pop
mov
lods
popf
cwde
in
aas
mov
fwait
mov
inc
mov
inc
xchg
fistp
ins
test
out
out
push
pushf
inc
inc
js
xchg
sbb
daa
mov
or
or
dec
(bad)
fisub
repz
add
into
es
cmp
jb
test
mov
pop
mov
stos
aaa
dec
add
xlat
mov
adc
inc
jge
push
in
repz
icebp
mov
mov
or
std
mov
scas
lods
ret
je
mov
mov
mov
mov
cmps
push
cs
cli
int
pop
ret
add
fsubr
push
xchg
bound
or
dec
or
arpl
jmp
int3
push
dec
add
xor
pop
in
pop
je
dec
add
adc
xor
dec
pop
out
mov
mov
pop
push
sub
loop
inc
cld
mov
test
sub
lahf
and
mov
xchg
push
repnz
retf
in
icebp
ds
sub
or
xor
mov
call
push
inc
pop
sub
sbb
pop
cmp
pop
push
mov
frstor
jne
mov
push
cs
jb
mov
and
jl
lds
xchg
call
mov
dec
xchg
xor
adc
dec
mov
lahf
sub
rol
push
lea
fist
das
xchg
fsubr
and
imul
mov
gs
nop
mov
iret
dec
push
scas
jl
(bad)
cs
dec
inc
popa
and
cmp
jbe
lods
sbb
mov
dec
in
xchg
stos
sub
inc
retf
inc
(bad)
fld
pusha
jle
mov
outs
mov
mov
dec
in
repz
mov
push
xor
sti
mov
jecxz
dec
repz
xor
aam
(bad)
sbb
cmp
aas
jns
mov
and
xchg
outs
imul
sub
in
cmp
inc
sahf
adc
xor
xchg
test
add
push
aas
(bad)
int
dec
mov
dec
dec
pushf
push
fldenv
push
rcl
or
sti
mov
pop
in
repnz
repz
rcr
fbld
js
adc
sub
retf
(bad)
jge
jae
xor
jo
imul
xchg
adc
gs
addr16
dec
addr16
xor
add
int3
jle
fwait
jo
mov
jb
scas
mov
cmp
addr16
icebp
and
lock
mov
pop
and
outs
call
mov
popa
aad
jg
repnz
cdq
sbb
mov
stos
fs
(bad)
fild
call
fimul
sbb
fmul
sub
adc
arpl
jnp
lgs
pop
icebp
idiv
outs
adc
pop
rol
jbe
mov
or
jae
scas
and
sbb
movs
dec
add
fnstcw
mov
outs
test
xchg
push
out
lahf
push
and
mov
lahf
mov
cmp
mov
out
retf
dec
icebp
xor
xlat
sbb
push
popa
xchg
sub
and
sub
test
pop
push
jle
mov
sbb
sbb
sub
or
mov
pop
mov
and
out
adc
fisub
je
lds
shr
xchg
in
in
nop
js
clc
retf
test
scas
xor
ret
xor
test
and
ss
aad
icebp
push
loopne
add
aas
pushf
ins
addr16
stc
je
push
call
push
stc
lock
sub
sbb
aas
mov
out
arpl
pop
mov
or
out
sahf
adc
dec
inc
mov
rol
push
retf
loope
add
mov
mov
(bad)
dec
(bad)
xchg
test
lock
(bad)
and
popf
sahf
jo
pop
clc
dec
inc
and
out
pop
pop
aaa
push
lahf
inc
inc
pop
mov
xor
sub
loopne
dec
jle
loop
xor
pop
lods
adc
jg
mov
inc
scas
xchg
outs
pop
ss
(bad)
cmc
push
shr
jmp
pop
jmp
stos
cmp
dec
test
(bad)
iret
cmp
mov
dec
cmc
aad
int3
out
sbb
fidivr
in
push
fmul
retf
pop
inc
sub
or
loopne
daa
add
rcr
cdq
cmc
add
push
iret
cmp
fs
mov
sbb
sub
scas
adc
arpl
std
mov
rol
es
test
mov
push
shl
lods
(bad)
lods
jmp
test
mov
cmc
jo
mov
cmp
xchg
adc
test
adc
popf
adc
in
xor
into
jns
jge
loop
xor
or
stos
jb
add
mov
add
push
dec
jecxz
mov
fsubr
js
and
mov
cmp
jecxz
inc
loope
je
xlat
jmp
rol
or
out
push
sbb
xlat
xchg
rcl
cmp
fisttp
jns
inc
sub
sti
retf
jp
adc
cmp
or
popa
cdq
dec
add
mov
loopne
jg
clc
dec
outs
arpl
push
outs
jae
add
cmp
pop
lods
push
adc
push
adc
stc
test
(bad)
mov
pusha
movs
retf
loop
pop
sub
mov
lock
fwait
pushf
xchg
data16
jmp
fdiv
dec
jg
test
adc
dec
idiv
leave
and
jo
das
pop
inc
cmps
aaa
daa
ja
xchg
(bad)
retf
mov
loope
cmp
adc
dec
cmp
add
fidiv
add
cmp
xorps
in
movs
inc
cwde
rcl
pop
inc
mov
mov
xchg
loope
add
adc
mov
sbb
enter
hlt
leave
xchg
shr
popa
pop
icebp
test
das
aam
sbb
in
jbe
pop
jle
inc
stos
es
jg
jne
inc
in
popf
mov
sar
enter
pop
sub
stos
push
lahf
and
jnp
fstp
test
pop
cmps
retf
cvtpi2ps
(bad)
loop
mov
bound
popa
inc
sti
jp
mov
adc
mov
xor
icebp
mov
mov
cmp
lock
paddsb
mov
sbb
aas
sbb
sti
mov
rcl
dec
or
addr16
bound
mov
cli
jnp
mov
add
inc
jb
fidiv
mov
mov
mov
dec
pop
movs
into
(bad)
sub
into
mov
loop
add
loop
xlat
pop
out
out
shl
add
dec
mov
mov
adc
and
idiv
pop
inc
mov
lods
or
dec
cmc
leave
scas
and
pop
cmp
sub
je
push
mov
int
loope
adc
cmp
and
push
scas
or
cwde
test
fsub
mov
fstp
pop
ins
mov
jl
in
call
xor
(bad)
icebp
sbb
or
stos
cs
xchg
sbb
aaa
jmp
push
and
cmp
test
add
or
dec
pop
hlt
pop
out
cld
sub
sar
jp
hlt
es
push
add
push
jne
pop
dec
mov
mov
fdivr
fistp
add
and
loope
dec
in
mov
adc
mov
mov
fld
xchg
ror
mov
push
hlt
and
das
ss
out
icebp
ds
adc
ins
push
jp
push
pop
jo
xchg
mov
sub
push
in
ret
sbb
inc
ds
push
pop
into
xor
dec
push
sub
outs
push
and
in
mov
cli
dec
arpl
neg
ret
mov
xor
mov
xchg
shr
mov
cmps
bound
out
push
mov
or
dec
shr
cmc
arpl
inc
inc
cmp
xor
xchg
inc
aaa
popa
xchg
adc
sbb
rcr
enter
xchg
jb
inc
push
mov
pop
mov
(bad)
jbe
imul
push
jmp
mov
(bad)
div
ret
inc
mov
dec
sbb
sbb
(bad)
fdiv
mov
add
xchg
mov
cmps
inc
shr
repnz
lds
sbb
cmp
ins
arpl
xor
mov
pop
pushf
mov
leave
addr16
aas
loopne
cmp
xor
add
pop
ins
mov
push
movs
mov
pop
(bad)
fcomp
(bad)
js
push
cwde
jg
pushf
hlt
cmp
int3
mov
adc
out
mov
scas
shl
add
test
pusha
add
sti
outs
sbb
mov
ins
lock
jo
inc
push
push
ins
mov
cmp
pop
fcom
xor
shl
push
and
sub
push
push
add
int3
sbb
pop
inc
xchg
dec
add
lods
mov
jmp
(bad)
pop
sub
xchg
sub
mov
lahf
retfw
jns
push
sub
push
call
repnz
lds
mov
inc
cmp
in
mov
and
sbb
cli
dec
sbb
ror
xchg
bnd
(bad)
inc
imul
pop
xor
daa
xchg
xor
or
mov
leave
aam
xor
cmc
arpl
push
pop
pop
ficomp
popf
dec
int
ins
retf
mov
add
stc
test
mov
mov
(bad)
fisubr
in
fnsave
(bad)
xor
leave
hlt
fbld
cmp
or
adc
cmps
gs
imul
dec
call
jne
fisubr
adc
in
sbb
ins
cmp
movs
xor
dec
(bad)
fst
mov
inc
pushf
push
fidiv
mov
push
rol
mov
shr
sbb
loop
mov
inc
ret
aam
cmp
outs
repnz
enter
call
or
and
arpl
ins
sub
lahf
mov
or
call
enter
jecxz
inc
inc
aas
jmp
or
or
push
pop
mov
push
mov
(bad)
adc
or
(bad)
fidiv
bnd
and
dec
cdq
out
push
aam
inc
add
mov
lods
(bad)
fcomip
cmp
pushf
test
inc
loope
not
xlat
cmp
dec
out
push
sub
hlt
ret
sub
or
and
mov
sub
adc
(bad)
dec
repnz
cmp
push
mov
cmp
retf
or
mov
mov
xchg
stos
out
retf
loopne
stc
gs
ins
mov
sti
push
jmp
jle
(bad)
fxtract
sub
jl
mov
jle
mov
popa
add
jecxz
js
call
ds
int
lds
pop
jle
sub
setns
out
ins
fmul
pop
push
ret
xor
jmp
mov
pop
mov
test
sbb
fucomip
ds
addr16
add
fwait
(bad)
aas
test
mov
ss
cli
cmc
adc
push
fwait
loope
jmp
mov
mov
pop
cli
shl
mov
pop
sti
adc
addr16
cmp
sbb
ficom
daa
lods
push
add
mov
pop
or
(bad)
fcomp
add
jmp
add
mov
inc
scas
xlat
xchg
imul
jecxz
loope
xchg
fisttp
fiadd
push
mov
outs
cwde
scas
test
mov
adc
stos
mov
xchg
sbb
rol
loop
mov
mov
xchg
pop
stos
sub
sub
dec
(bad)
cld
stc
jae
ds
pop
stos
pop
pop
pop
test
and
mov
mov
in
jle
fistp
aaa
jmp
sbb
pop
fwait
sub
bound
mov
or
inc
(bad)
jmp
cdq
fstp
fisttp
jo
sub
mov
jb
(bad)
mov
push
(bad)
ins
cli
push
lods
lods
fld1
sbb
and
fmul
pop
dec
out
mov
loopne
rcr
scas
push
jmp
pop
jnp
xchg
inc
jp
inc
and
test
lahf
mov
rol
push
sbb
xor
mov
stos
pop
fiadd
mov
dec
sahf
mov
sub
xor
mov
mov
push
fdiv
pushf
mov
xchg
adc
cli
lock
aad
movs
sbb
inc
nop
xchg
scas
aad
inc
dec
fwait
xchg
dec
retf
push
fidivr
ss
shr
inc
or
pop
pop
jg
dec
push
dec
xchg
cmp
cdq
xlat
add
int3
xorps
shl
jge
and
cmp
cmps
jl
fdiv
je
cmps
std
xor
push
dec
sti
not
fiadd
ins
movs
pusha
out
sti
inc
mov
xchg
add
lock
xchg
(bad)
shl
test
in
(bad)
shl
mov
(bad)
sar
inc
and
mov
bnd
xor
dec
mov
cs
push
mov
out
leave
mov
mov
inc
ja
sub
inc
sbb
push
mov
add
mov
popf
sub
stos
test
out
and
inc
inc
cmp
call
jb
jmp
lea
cdq
cwde
mov
fdivr
loope
mov
xor
aad
mov
push
jne
cmps
dec
xchg
dec
call
rcr
gs
push
jge
ins
cdq
xor
das
stc
cmp
xchg
fild
ret
xchg
sbb
inc
sub
xor
mov
add
xchg
aas
inc
mov
scas
sub
and
fnsave
std
inc
jo
mov
fild
rcr
adc
mov
xchg
mov
(bad)
sub
inc
inc
mov
loopne
xchg
test
je
push
call
rcl
jb
adc
xchg
xor
jns
inc
sbb
xchg
nop
mov
clc
mov
mov
add
aaa
std
sbb
nop
aaa
leave
ss
jnp
cwde
push
sub
not
push
pop
dec
retf
add
xlat
bound
sub
iret
mov
or
xchg
jne
cli
mov
das
and
mov
fcomp
mov
push
out
jmp
xlat
clc
and
dec
jns
jg
adc
and
jnp
push
fwait
scas
mov
pop
test
pushf
std
js
leave
gs
jns
call
cmp
inc
nop
ds
popf
or
cmp
or
leave
mov
aad
je
movs
push
call
mov
adc
mov
xor
in
and
arpl
mov
mov
mov
adc
dec
je
xchg
dec
jmp
scas
cs
mov
(bad)
add
pop
lea
inc
and
xchg
mov
into
pop
fsubr
or
inc
jmp
sub
mov
dec
inc
(bad)
jae
xchg
push
setg
lahf
sbb
cmp
cmps
mov
mov
push
inc
xchg
cs
cmp
cdq
inc
sub
fdivr
scas
hlt
dec
(bad)
pop
inc
mov
rcl
cdq
inc
aad
stos
sbb
jmp
test
jns
mov
pop
jnp
(bad)
mov
sbb
leave
jle
retf
bound
pop
cmp
add
add
adc
dec
adc
dec
add
into
mov
cdq
hlt
loope
mov
add
xchg
jp
scas
call
inc
xchg
loopne
and
ror
mov
dec
add
mov
add
stc
sti
movs
repnz
push
stos
jno
inc
jmp
or
out
inc
fdiv
add
lods
push
inc
jp
push
sub
cwde
mov
pop
int3
fsubr
enter
je
(bad)
and
sbb
cmps
ins
cmp
ds
stos
retf
sbb
fs
loop
pushf
mov
fs
push
xchg
push
cmps
stos
mov
sbb
cmc
mov
loope
out
and
jge
xchg
mov
cld
xchg
xor
push
dec
(bad)
inc
and
jge
xchg
sub
test
data16
mov
inc
loopne
sbb
lods
sbb
mov
shr
add
scas
lea
inc
add
test
ds
popa
(bad)
pop
fs
fidivr
fwait
(bad)
jns
stos
mov
jecxz
inc
add
movs
(bad)
cmp
inc
repz
cmps
test
inc
mov
fnstsw
repz
aad
xlat
push
leave
xor
rol
push
sub
adc
mov
sahf
mov
in
sbb
cmp
aas
sbb
push
add
push
(bad)
push
and
push
js
cmps
imul
push
push
retf
and
jp
(bad)
and
call
call
sti
mov
(bad)
inc
adc
pop
out
xchg
outs
xor
fdiv
mov
pop
fcom
pop
or
inc
jbe
dec
pushf
cmp
test
or
sbb
inc
call
inc
sbb
cmp
add
mov
ins
inc
fsub
dec
dec
cdq
mov
cmp
cmp
test
add
pop
sbb
mov
cmp
xchg
and
sar
or
test
adc
mov
jb
xor
or
fsincos
push
ret
ja
fwait
das
ins
jbe
push
test
xor
ret
leave
inc
fs
daa
out
ins
add
cmp
fimul
adc
mov
fsubrp
test
xchg
and
out
xchg
repnz
bound
jmp
lods
mov
push
fwait
mov
fadd
in
test
adc
jmp
(bad)
xor
xor
std
push
vcvtss2si
inc
jmp
sub
mov
mov
add
mov
pop
jmp
jecxz
mov
inc
jo
dec
mov
mov
icebp
mov
cmc
(bad)
scas
and
mov
sub
dec
push
lods
mov
call
jmp
xor
or
int3
jmp
inc
in
inc
sbb
and
push
xor
nop
sub
jmp
pop
mov
arpl
sbb
mov
test
inc
or
cld
lods
mov
ror
aam
jo
xchg
dec
sub
inc
out
nop
push
cmp
mov
lea
dec
jns
mov
rol
jnp
xchg
mov
dec
pop
or
aam
jle
and
jg
adc
stc
jo
or
icebp
jle
retf
or
sub
pop
xor
or
sbb
test
sbb
or
daa
cmp
stos
xchg
add
inc
inc
pop
lods
dec
mov
xchg
sub
xrelease
clc
push
test
cmps
fcom
ja
mov
out
cmp
in
lds
test
push
lods
push
aas
cmp
mov
inc
lds
je
inc
ror
je
mov
mov
pop
cli
pop
loope
sub
clc
pop
outs
push
or
cmp
pop
jb
scas
add
mov
adc
xor
jmp
push
jecxz
fmul
jmp
pop
add
cmps
mov
lea
push
out
cld
and
rol
xchg
mul
add
fld
sbb
scas
ins
imul
mov
lea
inc
out
test
cmp
ficomp
adc
ss
dec
adc
sbb
cdq
push
and
mov
out
test
mov
pop
inc
fsubr
lds
mov
xchg
inc
xchg
mov
lods
add
pop
cdq
cwde
test
inc
xchg
std
xchg
fmul
inc
repnz
cmc
daa
sub
std
xchg
loop
sar
add
jl
inc
or
(bad)
test
pop
cdq
jmp
dec
add
inc
add
jo
mov
ror
or
cmps
adc
mov
ins
pop
ficom
movs
ret
jg
jmp
adc
nop
gs
fdiv
cdq
fwait
out
dec
fild
mov
mov
(bad)
mov
test
inc
mov
adc
pop
fisttp
push
and
mov
inc
cmp
mov
or
xor
or
cmp
pop
aaa
bound
imul
scas
shl
clc
aam
xor
jo
mov
js
mov
popa
retf
lahf
jb
mov
mov
les
add
jge
lds
test
(bad)
jge
fldcw
jmp
jmp
jp
daa
jbe
jl
outs
pop
push
xor
je
mov
fmul
cmc
sbb
out
dec
push
push
xor
cmp
jbe
mov
fwait
jbe
jp
(bad)
jl
fld
mov
fs
fucomi
inc
scas
int3
jo
gs
inc
scas
pop
(bad)
push
mov
xchg
repz
icebp
movs
xchg
sbb
addr16
mov
cli
(bad)
xchg
iret
out
inc
mov
int
adc
pop
add
dec
mov
jae
dec
inc
dec
mov
and
push
(bad)
call
arpl
ss
cmp
cwde
add
pop
(bad)
xchg
adc
cmps
mov
clc
leave
mov
cmp
mov
cmp
jmp
jno
test
stc
rep
xor
sbb
mov
pop
bound
fst
xchg
xlat
rol
test
retf
push
clc
repz
lock
jge
movs
or
je
dec
mov
scas
mov
cli
fmul
(bad)
popa
adc
ror
add
ss
mov
add
push
sub
mov
and
and
add
sbb
lea
mov
dec
cdq
std
mov
shl
mov
in
pop
call
gs
mov
mov
mov
adc
dec
std
(bad)
rol
xor
outs
xchg
push
bound
push
sbb
mov
xlat
push
fwait
mul
lea
push
adc
daa
fs
retf
inc
imul
imul
pushf
aam
inc
mov
popa
std
fs
jne
ret
lock
out
jge
mov
mov
loopne
mov
lea
mov
push
sbb
retf
popa
outs
xchg
xchg
in
inc
out
and
mov
pop
sub
xor
stc
pop
add
mov
rol
(bad)
adc
xor
mov
mov
in
pop
dec
mov
xor
sbb
pop
and
jl
lock
add
sbb
sbb
scas
pop
loop
out
mov
nop
jae
mov
mov
ret
push
icebp
mov
pop
gs
xchg
test
adc
(bad)
mov
fmul
jmp
lock
push
adc
stc
daa
inc
sub
cmp
pop
xchg
dec
jmp
xchg
mov
cmc
das
leave
rol
cmp
sbb
sbb
mov
push
mov
adc
pop
pop
retf
lock
les
xchg
and
call
popa
sub
retf
xchg
pop
mov
lea
je
mov
pusha
sbb
test
cwde
cwde
push
jecxz
out
add
mov
imul
cmps
cmp
push
scas
xor
or
and
jge
jmp
mov
adc
adc
add
push
call
jns
mov
ins
out
xchg
mov
faddp
mov
adc
mov
jp
mov
push
icebp
sub
cmc
pop
nop
mov
sar
inc
adc
mov
shr
movs
jne
outs
aam
cmp
into
fstp
sub
push
inc
test
mov
jmp
(bad)
mov
or
adc
and
mov
inc
xchg
mov
sti
xchg
stos
mov
add
mov
ins
cwde
retf
lock
inc
cmp
clc
(bad)
and
inc
test
movs
jmp
mov
sti
lds
call
lock
frstor
xor
xor
sti
ins
adc
or
in
push
(bad)
gs
mov
xor
sub
ss
imul
or
inc
in
into
mov
jmp
push
and
cmp
loop
inc
(bad)
stos
pop
add
ror
xchg
(bad)
pop
call
push
jmp
mov
xchg
fnsave
ja
cmp
fstp
es
aas
ins
cmps
cmp
std
addr16
ror
inc
call
(bad)
in
pop
dec
jp
ret
jns
and
jmp
cmp
inc
jl
aam
sub
cmp
int3
loope
(bad)
popa
pop
sub
and
dec
loop
pop
push
(bad)
loope
je
inc
mov
test
add
mov
test
fisub
out
mov
dec
push
cs
and
xor
jo
adc
push
sub
xchg
push
enter
sbb
adc
sbb
xchg
sbb
mov
pop
xchg
aas
in
out
int
pop
cli
jp
test
fsub
pop
cmps
shl
or
loopne
or
ja
mov
jo
lahf
repz
(bad)
ror
xchg
xchg
pop
push
out
lock
int
or
inc
popf
daa
inc
inc
test
xchg
mov
icebp
sbb
inc
dec
add
les
pop
xor
mov
js
cdq
or
mov
lea
or
mov
(bad)
call
js
pop
cld
(bad)
stc
dec
mov
in
pop
out
fild
stc
fxch
xor
mov
xlat
mov
fsub
or
push
sub
cld
ret
sub
addr16
pop
lahf
outs
inc
pop
test
scas
call
cmp
and
cmp
pop
xchg
add
push
pop
fisttp
stos
mov
sahf
lods
in
retf
(bad)
popa
inc
outs
xor
xchg
scas
cmps
ins
mov
cmp
pop
sub
outs
sbb
stc
xchg
lods
sar
cmc
stos
jae
jb
sbb
inc
fiadd
push
pop
mov
push
pop
or
mov
fwait
cli
cmp
xor
xor
pop
sub
cdq
and
and
pop
push
nop
push
add
sub
mov
arpl
(bad)
add
mov
movs
mov
int
inc
hlt
mov
cmps
add
(bad)
cmp
mov
icebp
test
mov
enter
fincstp
rcr
adc
inc
mov
sbb
jmp
bound
out
cli
into
push
fwait
rol
imul
pop
xchg
cmp
test
add
movs
sub
cmp
fdivr
ret
inc
push
fdivr
and
xor
imul
hlt
mov
call
call
rcr
ins
jl
add
(bad)
pop
cmp
int
addr16
fild
sbb
xchg
dec
and
mov
xchg
inc
ror
int3
and
pusha
pop
fild
xor
pop
xor
dec
cdq
jb
xchg
inc
xchg
xchg
mov
pop
es
(bad)
cmp
ret
outs
arpl
and
scas
(bad)
cmp
jecxz
push
ffreep
mov
xchg
outs
cmps
mov
sbb
nop
leave
lods
outs
xor
(bad)
mov
mov
jg
or
bswap
retf
loop
push
or
aas
ins
cmp
retf
adc
shl
retf
retf
jae
retf
pop
and
cs
ins
push
lahf
jne
sbb
outs
dec
and
adc
jle
mov
cmp
out
push
mov
and
add
lahf
cld
cmp
bnd
mov
sbb
loope
push
add
mov
outs
jge
push
or
or
inc
fninit
and
pop
sbb
sbb
add
popf
das
xchg
sbb
jo
scas
dec
add
xchg
xor
cwde
xor
jb
push
xchg
leave
inc
xchg
cld
sti
dec
xchg
test
mov
out
push
lods
test
sar
mov
mov
icebp
fld
dec
retf
ja
es
icebp
out
sub
cmp
popa
cmps
push
dec
mov
mov
jmp
imul
xor
mov
jnp
mov
add
xchg
pop
or
iret
mov
pushf
imul
push
cmp
pop
lock
mov
mov
pop
mov
sti
fild
jecxz
ins
cmc
pop
fisttp
sbb
(bad)
(bad)
and
add
js
adc
(bad)
cmp
adc
inc
addr16
mov
add
lods
ins
fwait
jno
xchg
pop
call
leave
retf
mov
cwde
pop
outs
lods
je
cdq
test
(bad)
mov
mov
adc
shr
xor
addr16
mov
outs
add
(bad)
fcomi
mov
popa
je
(bad)
push
idiv
sub
loop
ret
or
cmps
xor
not
push
nop
mov
lods
add
dec
dec
inc
or
pop
xor
and
or
push
ficom
mov
inc
mov
cld
cmp
adc
fxch
mov
loope
jle
mov
inc
jecxz
mov
push
mov
stos
pop
cmc
push
mov
test
aas
popf
addr16
nop
mov
and
mov
iret
adc
xor
test
bound
mov
jl
std
pop
cmp
retf
adc
and
in
xor
or
sar
cmps
inc
dec
aad
inc
mov
or
scas
in
rcl
xchg
jns
ins
cdq
mov
pop
xchg
iret
xchg
push
int
xchg
rol
xchg
lods
fwait
stos
daa
xchg
pop
pop
mov
sub
ffreep
xchg
cli
sar
lahf
pusha
rcr
cmp
imul
mov
(bad)
xchg
nop
dec
pop
rcr
shl
jg
retf
jbe
je
mov
pusha
mov
inc
inc
test
or
and
xchg
retf
shl
inc
nop
hlt
inc
rol
addr16
pusha
fidivr
loope
jmp
ins
retf
adc
test
outs
jl
mov
cld
adc
jo
mov
jb
push
jmp
and
adc
ja
mov
popa
pop
xchg
add
xchg
mov
popa
xchg
nop
add
pop
out
pop
sub
pop
leave
je
inc
push
xchg
ror
inc
test
pop
inc
cli
leave
cmp
repnz
dec
push
jae
ja
xchg
pop
cdq
out
adc
add
fwait
outs
mul
fmul
dec
fnstsw
out
mov
and
cld
cmps
icebp
fild
jmp
jns
jno
cmp
test
daa
ins
mov
jno
pop
in
mov
mov
and
xchg
retf
push
inc
xor
add
add
pop
mov
xor
sub
aam
cmp
shl
inc
mov
push
mov
mov
cs
mov
nop
dec
cmps
lods
test
mov
out
hlt
jecxz
inc
and
aas
sbb
mov
sbb
dec
sub
cmps
xor
(bad)
cmc
pop
push
push
add
or
mov
leave
and
mov
lahf
push
add
sbb
pop
sbb
fsub
loop
in
fwait
inc
sub
shr
mov
pop
out
mov
call
pop
out
jp
pop
pop
xor
xor
jno
sbb
cs
lods
xchg
dec
(bad)
mov
cwde
clc
pop
dec
push
sbb
cmp
bound
scas
or
ficom
cmps
cmp
and
sub
enter
mov
(bad)
inc
pusha
inc
adc
cmc
push
test
stos
adc
mov
mov
aad
mov
cmps
mov
test
pusha
loopne
mov
inc
mov
xchg
jecxz
inc
inc
in
mov
ss
cmp
loop
push
sbb
outs
sbb
mov
pop
imul
sub
pop
call
inc
aas
cmc
xor
inc
push
add
js
ret
nop
push
jb
rcl
leave
out
mov
rcl
les
jns
pusha
loope
leave
aas
mov
mov
or
icebp
mov
mov
lahf
push
inc
mov
mov
dec
lock
int
popa
push
scas
mov
xor
fcmovbe
mov
sbb
push
jae
push
sbb
xchg
retf
pop
cmc
ins
fcmovu
and
aam
imul
push
pop
or
xchg
and
xchg
mov
call
and
(bad)
imul
pop
and
sub
mov
stos
inc
push
enter
repnz
repnz
mov
dec
xchg
xchg
mov
and
test
mov
inc
xchg
push
dec
adc
push
jmp
jo
pop
mov
push
fwait
push
pop
dec
mov
or
sbb
into
outs
ja
xor
add
cwde
sub
fisttp
shr
dec
mov
cli
repz
popf
shl
je
outs
xchg
scas
(bad)
dec
mov
mov
rcr
mov
cli
dec
cli
popf
mov
pop
xchg
cmps
cmps
add
fld
sbb
(bad)
sub
es
in
jo
cmp
jbe
mov
aaa
sbb
xchg
test
data16
cmp
inc
aas
mov
aaa
test
dec
bound
lgs
pop
ret
cmp
jg
call
mov
push
jmp
pop
jp
fs
cmps
xchg
in
mov
jno
xchg
cld
sbb
inc
bound
leave
xor
jmp
add
fadd
das
test
push
mov
pushf
popf
add
enter
sbb
jmp
inc
pop
adc
inc
sub
aaa
lea
(bad)
pop
push
xchg
js
mov
pop
xchg
nop
cwde
das
sbb
mov
not
loop
xlat
cmp
cld
addr16
shr
test
mov
mov
test
mov
test
cld
shl
adc
inc
cmp
dec
cmc
(bad)
mov
jle
rcr
and
push
fild
cmp
add
add
jle
sbb
add
mov
pushf
bound
sub
fld
pushf
push
push
push
mov
ret
movs
std
addr16
mov
mov
test
dec
jb
shr
in
in
js
lods
dec
sar
adc
dec
sar
enter
inc
or
scas
sbb
dec
pop
push
scas
mov
sbb
in
or
and
adc
mov
mov
jno
mov
fwait
into
jmp
or
jmp
dec
scas
ficom
pop
outs
pop
mov
inc
mov
mov
test
out
sbb
dec
mov
mov
mov
xchg
mov
aam
or
les
pop
jns
mov
xor
mov
(bad)
or
pop
(bad)
pop
or
sbb
dec
adc
push
addr16
or
retf
mov
inc
loopne
add
jnp
xor
call
jecxz
xor
fstp
fsubp
dec
mov
fwait
mov
mov
mov
iret
ss
ss
not
icebp
and
push
lahf
imul
mov
pop
fisttp
sar
inc
je
inc
int
push
pop
jae
xchg
push
lods
jne
popa
pop
mov
add
test
(bad)
jecxz
mov
jl
pop
je
call
hlt
sub
push
adc
cld
mov
hlt
inc
cmps
mov
jmp
lea
dec
mov
lock
cmps
jne
js
xor
loop
hlt
pop
(bad)
es
sbb
jno
pop
or
nop
pop
in
cmc
sbb
cld
sub
pop
shr
dec
adc
sbb
cmp
jp
lods
loope
xchg
or
pop
pop
ins
lea
iret
leave
movs
(bad)
pop
lock
cdq
fidiv
loopne
mov
and
push
mov
std
sub
adc
lahf
pop
jbe
pusha
fistp
arpl
outs
sbb
nop
push
cmp
push
jmp
push
ss
adc
pusha
add
mov
dec
jae
jbe
mov
push
mov
push
imul
xchg
pop
push
ins
fbstp
and
mov
jmp
sub
dec
test
inc
cmps
xchg
mov
mov
out
pop
dec
jmp
sub
test
stos
mov
add
bnd
ret
and
arpl
ret
xor
xor
add
gs
xor
xlat
lods
or
and
out
xchg
aaa
iret
lea
inc
jl
lahf
push
fstp
loop
(bad)
xchg
pop
sbb
sbb
fiadd
cmps
cwde
mov
mov
sahf
fbstp
in
(bad)
pop
pop
xor
lock
loope
inc
or
das
push
jbe
inc
cs
xchg
int3
call
movs
shl
cmp
cwde
and
mov
push
xchg
mov
(bad)
(bad)
out
xor
push
ins
mov
xchg
hlt
inc
cmps
fdivr
push
xchg
jmp
xor
pushf
mov
mov
fucomi
xchg
cdq
outs
out
mov
loopne
lods
or
loopne
call
aas
outs
inc
test
jae
xchg
mov
push
pop
les
rol
cdq
call
std
inc
ja
sub
xchg
cmp
inc
xchg
jo
mov
lods
xchg
inc
mov
jle
call
int
push
xlat
(bad)
icebp
jbe
adc
add
inc
push
mov
cmc
rol
aad
jmp
iret
(bad)
adc
adc
pop
pushf
xor
outs
icebp
sahf
iret
mov
std
fnstcw
mov
pop
jg
adc
xor
inc
test
movs
pop
inc
mov
adc
cmp
mov
imul
jns
sub
ret
rcr
add
pop
cmc
mov
pop
jg
(bad)
mov
mov
fwait
mov
lds
std
cmp
adc
xor
jb
dec
cmc
cmp
vsubss
add
aaa
lea
pusha
dec
test
adc
movs
mov
leave
out
jecxz
leave
(bad)
jmp
mov
jb
mov
(bad)
call
lods
mov
aam
xchg
imul
xchg
stos
into
loopne
arpl
jmp
sub
lock
dec
les
push
(bad)
pop
add
scas
mov
rol
nop
or
add
mov
mov
fild
add
mov
jmp
cld
pop
jbe
mov
mov
(bad)
retf
xor
(bad)
imul
sti
sbb
push
mov
inc
call
mov
mov
jne
push
fnstenv
ds
(bad)
in
(bad)
jle
pop
and
sbb
mov
mov
scas
jge
jmp
cmp
inc
push
jg
cmp
iret
jg
mov
fs
mov
(bad)
test
call
xchg
(bad)
loope
mov
mov
mov
out
icebp
stos
(bad)
mov
mov
mov
ror
fwait
cmps
inc
rcl
sbb
dec
repz
pop
xchg
jge
cmp
dec
and
xor
in
or
inc
(bad)
daa
sbb
mov
jge
mov
add
push
inc
call
int3
js
imul
ror
jmp
push
sub
les
mov
retf
dec
sahf
pop
push
scas
mov
jmp
xchg
push
rcl
pop
dec
jecxz
fld
and
cmp
pop
pop
pop
mov
enter
in
imul
push
push
dec
les
cmp
and
mov
xor
mov
(bad)
repz
pop
add
inc
mov
cmp
add
jp
xchg
popa
scas
mov
fdiv
cli
aam
push
fs
dec
push
sbb
fstp
imul
xchg
dec
mov
js
call
push
ins
add
and
cmp
push
add
sbb
rol
shl
rol
shl
mov
push
repnz
xor
(bad)
jnp
xchg
lds
je
add
(bad)
fwait
mov
add
stos
jge
cmp
and
mov
je
xchg
dec
mov
daa
out
out
(bad)
sbb
inc
fsubr
xor
pop
lea
or
push
xor
adc
pop
push
lods
jmp
push
ficom
mov
es
test
clc
ins
mov
pop
loope
out
push
and
cmp
pop
dec
or
in
repz
cmp
sbb
pop
inc
mov
outs
test
sahf
xchg
es
push
fmul
add
aas
hlt
inc
jae
outs
daa
stos
es
mov
dec
(bad)
ins
add
lea
sbb
dec
jmp
xchg
dec
mov
pop
mov
js
jle
test
arpl
mov
jmp
jmp
mov
aam
cld
mov
fwait
mov
ins
cli
dec
daa
dec
retf
and
pop
pop
push
dec
movs
aas
add
pop
pop
imul
icebp
xor
push
clc
push
adc
ja
or
jbe
pop
fnstenv
test
jne
pop
push
xchg
sbb
popa
inc
xor
fwait
cmc
cwde
je
mov
mov
in
in
mov
gs
mov
aad
icebp
leave
xchg
mov
aam
or
mov
clc
bound
scas
sbb
movs
xor
mov
lahf
xchg
sbb
fmul
mov
jg
jae
mov
pusha
jmp
stos
dec
sub
call
dec
add
dec
xchg
mov
inc
add
js
movs
fistp
(bad)
in
loopne
addr16
(bad)
mov
test
mov
loop
mov
icebp
lods
ror
sahf
mov
adc
sub
inc
jg
inc
(bad)
cs
test
jge
(bad)
iret
xchg
cmp
mov
fisttp
ins
js
cmps
sub
add
es
xchg
or
jge
mov
inc
xchg
mov
inc
int
cwde
sbb
jo
mov
ins
xchg
mov
push
std
cld
jns
(bad)
lock
xor
arpl
mov
scas
push
inc
xchg
xchg
mov
int3
cs
sbb
mov
gs
outs
inc
mov
cmp
mov
mov
pop
cld
dec
int
es
cmp
cmp
or
or
pop
cmps
push
push
lods
or
mov
(bad)
(bad)
es
addr16
add
scas
push
lds
xchg
sahf
jge
out
mov
xchg
inc
inc
loopne
repz
retf
test
stos
fmul
dec
fistp
mov
ss
xor
cmp
nop
mov
ja
int
leave
shl
and
and
pop
adc
dec
xor
adc
xor
dec
out
leave
out
stos
enter
js
mov
pop
test
xchg
popf
jge
shl
mov
inc
pop
xchg
test
call
sub
imul
cmp
push
lea
pop
pop
mov
jmp
cmps
sti
push
push
add
cmp
inc
sub
stos
sbb
cmps
or
xchg
cmp
mov
xchg
das
adc
cmp
(bad)
(bad)
dec
jae
fwait
push
popf
into
fbld
ret
jmp
sub
push
sbb
add
imul
retf
(bad)
and
or
ins
pop
jbe
xor
imul
std
push
aam
mov
es
sub
pop
adc
jp
xchg
pop
sub
div
lods
mov
loop
add
push
out
in
mov
popf
arpl
xchg
shr
je
adc
or
xchg
push
aaa
hlt
retf
call
sub
push
repz
repnz
push
(bad)
inc
or
mov
push
cmp
dec
cmp
pop
shl
cmp
jmp
push
dec
adc
in
and
fistp
scas
dec
jg
mov
(bad)
rcr
or
lods
push
fnstsw
mov
sub
sbb
mov
sub
cmps
retf
out
outs
jmp
dec
lock
push
or
mov
gs
pop
jge
outs
cwde
adc
mov
ror
sbb
retf
fsub
sub
popa
mov
dec
dec
movs
inc
and
sahf
imul
call
fdivr
pop
mov
bound
loop
pop
(bad)
shl
jecxz
mov
(bad)
or
add
(bad)
bound
stos
xchg
cs
adc
fmulp
mov
aas
arpl
push
pop
test
in
ja
retf
(bad)
jp
pop
or
aas
pop
jge
adc
inc
sahf
pop
xor
dec
pop
movs
scas
lods
cmp
dec
fsubr
jecxz
sahf
sti
jno
add
xor
out
mov
push
rcr
bnd
test
pop
jp
mov
fiadd
mov
leave
sub
push
repz
cld
ds
inc
imul
es
inc
mov
in
call
fsubrp
add
hlt
dec
push
jg
push
xor
pop
lea
cmps
pusha
inc
cmps
push
xchg
xor
aad
sub
in
lahf
dec
mov
jg
push
popf
(bad)
sahf
pusha
jmp
in
shl
sbb
data16
lods
lahf
stc
push
shr
xor
mov
loopne
push
mov
xor
cs
push
cmp
fmul
inc
ss
mov
inc
or
xchg
leave
ret
aam
jmp
pop
pop
iret
sbb
sub
mov
mov
(bad)
jle
fadd
xor
test
and
(bad)
xchg
cld
inc
shr
push
fnstsw
sahf
fisub
shl
retf
add
inc
xchg
(bad)
mov
arpl
xchg
sti
mov
mov
sbb
xchg
je
adc
or
shr
jo
and
adc
js
push
or
mov
pop
(bad)
pop
mov
pop
(bad)
cmp
add
xchg
pop
pushf
sub
pop
mov
xchg
sub
mov
addr16
retf
stos
sbb
inc
push
mov
jno
cmc
cdq
push
(bad)
sahf
push
push
mov
mov
pop
inc
lods
fwait
mov
inc
cld
cli
xchg
out
xchg
mov
jns
dec
test
adc
fcmovbe
inc
fldenv
inc
jp
mov
push
sbb
mov
push
fcmovu
sbb
add
je
pusha
mov
push
push
cmp
add
push
jno
out
pop
call
mov
cmps
xchg
rol
or
stos
mov
shr
mov
in
sahf
mov
mov
fdivr
jl
adc
rcr
sbb
fstp
mov
lock
or
mov
push
jae
push
cmp
lahf
cwde
ret
sbb
fild
ficomp
cmp
sbb
add
jmp
cmp
mov
test
xchg
add
push
xchg
sti
inc
movs
(bad)
out
loop
dec
xor
pop
movs
cdq
sahf
mov
cmp
xchg
mov
loop
push
mov
in
adc
or
and
pop
mov
inc
pop
or
mov
mov
and
xchg
inc
jg
add
xor
add
mov
leave
dec
adc
mov
push
jmp
loopne
pop
jnp
ja
mov
mov
popf
add
jmp
test
and
outs
push
lods
mov
das
adc
fnstcw
mov
sub
fcos
out
jb
sbb
xor
(bad)
xor
or
and
jmp
cmps
(bad)
jl
jno
aad
sub
daa
lea
xor
fnstsw
mov
pusha
div
dec
aam
sti
inc
mov
pop
data16
fcmovnb
test
mov
push
add
loopne
add
pop
lods
idiv
add
pushf
mov
scas
rcr
dec
pop
or
sub
cld
out
and
pop
pop
ss
les
inc
push
mov
sbb
cmps
mov
iret
push
cdq
(bad)
and
push
ss
adc
in
add
sub
and
mov
xchg
(bad)
sbb
bound
pop
(bad)
into
in
mov
sahf
push
das
lock
test
mov
push
mov
scas
add
icebp
clc
mov
fidivr
mov
adc
pop
fadd
icebp
pop
in
dec
jle
cmp
lahf
js
jne
mov
out
pop
out
and
xchg
dec
push
add
rol
das
or
dec
dec
fist
xchg
cmovbe
and
div
xchg
adc
repz
add
mov
call
(bad)
mov
push
in
mov
mov
fdiv
test
shr
cmps
inc
retf
adc
mov
out
jne
and
cmp
sbb
stc
inc
cmp
mov
stc
imul
sbb
xor
sbb
arpl
cmp
dec
dec
stos
inc
push
mov
ins
test
mov
dec
adc
mov
inc
mov
sar
pop
mov
enter
sub
fs
xchg
pop
and
cmps
mov
xchg
imul
mov
aad
int
outs
mov
xor
sbb
vphaddwd
dec
fsub
outs
inc
test
add
retf
pop
or
sbb
stc
or
aas
cmps
inc
push
jne
xor
sbb
dec
inc
(bad)
xor
stos
mov
cli
in
out
int
pop
sub
(bad)
popa
cmc
shl
mov
mov
xchg
lock
xchg
arpl
lahf
xchg
sbb
test
imul
sub
or
iret
sbb
jp
outs
arpl
sahf
lds
int3
fmul
out
push
pusha
jnp
aam
add
xor
cmc
pop
rol
sbb
add
sub
fbstp
aad
inc
pop
mov
mov
pushf
push
fnsave
jmp
(bad)
cmp
xchg
in
div
jecxz
dec
xchg
sub
xor
cmc
cli
out
inc
out
pop
or
jns
dec
imul
in
fprem
and
add
pop
imul
adc
pusha
push
cmp
xor
scas
call
fs
dec
fstp
mov
and
jmp
movs
gs
mov
sbb
fild
xchg
cmp
dec
int
cmp
pop
clc
inc
jnp
dec
mov
inc
and
xor
mov
xlat
gs
fnstenv
in
jle
inc
pop
test
imul
xlat
jns
mov
js
xchg
loope
mov
mov
add
mov
xchg
(bad)
dec
cmps
rcl
mul
test
ja
mov
icebp
in
leave
imul
mov
(bad)
xor
psrlq
stc
imul
arpl
gs
sub
mov
mov
retf
addr16
mov
mov
inc
push
push
xor
sbb
xor
mov
shl
pop
bound
js
(bad)
stc
cmp
(bad)
cld
mov
lds
je
push
retf
pop
mov
stos
inc
sbb
enter
jg
mov
add
pushf
cmc
cmp
pop
jge
mov
push
or
ret
pusha
loope
push
sbb
fsubr
dec
add
mov
xchg
cdq
or
sbb
out
sbb
fld
jl
fld
ja
add
(bad)
arpl
push
sub
pop
xor
pop
(bad)
jbe
jnp
arpl
in
test
xchg
mov
mov
ja
mov
jle
stos
test
and
ror
inc
rcr
pop
adc
jmp
push
movs
jnp
imul
jmp
push
jp
mov
sbb
fld
fwait
js
mov
je
mov
inc
out
cdq
cmp
jnp
mov
pop
mov
fwait
dec
in
mov
mov
mov
mov
pop
push
lods
mov
scas
cld
(bad)
pop
push
mov
jo
push
fst
add
xlat
in
shl
int
inc
push
push
packuswb
push
sbb
mov
mov
shr
and
xor
adc
mov
xchg
add
outs
js
push
xor
sbb
sbb
pop
(bad)
jle
jp
and
iret
mov
cld
xor
pslld
xchg
test
inc
push
add
bound
mov
sub
sbb
jmp
arpl
fs
(bad)
mov
sbb
pop
lahf
mov
mov
bound
fdiv
or
cmp
push
xchg
sub
push
dec
fld
xchg
cmp
aaa
push
push
imul
jmp
rol
adc
jmp
xchg
fstp
push
clc
not
mov
ror
jp
loopne
cld
aas
push
jmp
lods
(bad)
in
addr16
fidiv
and
jmp
dec
add
dec
mov
push
sbb
mov
lahf
or
fnstsw
aam
mov
fs
pop
ss
add
pusha
xor
stos
jl
lahf
ins
add
xor
cmps
imul
movs
inc
cwde
icebp
jb
inc
push
dec
test
dec
test
mov
and
aad
mov
fwait
in
fst
mov
aam
enter
in
xchg
xor
push
repnz
int
fld
aaa
data16
jge
mov
sub
in
sbb
xor
sbb
adc
ins
pop
mov
sbb
mov
(bad)
lock
aaa
and
pop
stos
ja
call
int
inc
pop
into
les
mov
sbb
mov
mov
xor
mov
jecxz
push
inc
test
(bad)
or
fxam
idiv
xor
cmp
mov
adc
repnz
(bad)
dec
inc
ds
cmp
or
movs
jae
mov
stos
or
or
out
loop
stos
idiv
push
sub
pop
cli
lods
jecxz
xchg
out
pusha
xchg
stos
add
xchg
retf
jmp
icebp
or
xchg
jl
mov
mov
xchg
stos
ja
pop
lds
push
dec
out
clc
mov
or
inc
mov
pop
mov
mov
into
in
jge
lea
fs
fdiv
xor
sbb
pop
push
mov
arpl
push
cmp
hlt
movs
sbb
pop
push
cmps
jno
mov
xchg
dec
iret
add
fisub
stc
mov
js
add
aad
outs
popa
scas
(bad)
pop
call
lock
jnp
stos
sub
lahf
dec
or
mov
stos
sub
lock
loopne
xor
xor
inc
adc
sbb
push
adc
add
inc
pop
jp
out
inc
mov
push
ja
das
jmp
sbb
mov
pushf
es
xchg
fwait
popf
mov
aas
sar
int3
(bad)
cmp
mov
dec
sub
loop
loopne
in
jbe
dec
fsubr
outs
in
pop
ins
out
mov
loope
jns
(bad)
sbb
push
sbb
sub
and
sub
push
dec
cmps
dec
cmp
sahf
adc
add
out
mov
mov
or
dec
jp
mov
ror
outs
rcr
cs
cdq
sbb
mov
inc
adc
mov
or
and
int
inc
sbb
dec
pop
mov
and
cmc
les
dec
inc
push
inc
xor
cmp
push
xor
test
leave
adc
sbb
jo
cmps
sbb
lea
(bad)
loopne
int
pop
loopne
outs
ins
fldcw
xchg
(bad)
and
mov
xchg
das
call
retf
es
lods
add
test
jne
test
shr
repz
fiadd
add
cmp
dec
sbb
xchg
adc
into
stc
adc
add
inc
bound
mov
rol
adc
pop
push
lahf
mov
cmp
int3
hlt
je
sbb
ins
fnsave
cli
xchg
sar
shl
repnz
sub
pop
scas
mov
ret
pop
cmpxchg
cwde
xchg
into
mov
mov
adc
sbb
in
pop
fild
add
movs
addr16
test
test
pop
fst
lahf
lock
push
add
add
jne
js
and
fild
dec
fs
xchg
mov
std
retf
mov
arpl
inc
inc
jns
dec
sub
inc
repz
sti
arpl
fdiv
mov
and
call
and
xchg
xor
imul
pop
or
icebp
ret
imul
mov
jae
inc
mov
call
fsub
mov
add
and
jb
stos
aas
xor
jb
push
pop
fcom
ins
mov
sub
fidivr
fstp
jb
je
mov
pushf
inc
xchg
mov
push
in
aam
jne
pop
lods
xchg
xchg
or
addr16
imul
xchg
scas
jp
jne
adc
sub
add
popa
ficom
arpl
push
dec
mov
push
iret
imul
movups
in
adc
ja
test
push
jbe
imul
outs
test
ins
loope
jmp
mov
jle
mov
add
call
mov
scas
mov
call
in
std
stos
leave
rol
mov
pop
xlat
push
pop
inc
retf
(bad)
call
mov
inc
es
inc
jo
sub
rol
inc
jl
aad
imul
xor
dec
dec
mov
jp
shl
fldpi
movs
inc
ror
test
outs
mov
cwde
push
(bad)
mov
div
mov
inc
mov
(bad)
int
pop
pusha
out
xchg
sub
cmp
or
xchg
fld
sahf
or
addr16
(bad)
jne
ins
mov
int
cli
xlat
xor
sbb
cmp
mov
rcl
fs
inc
cmp
and
dec
fcomp
loop
retf
sti
push
bound
imul
nop
inc
push
lock
or
pop
xchg
inc
inc
add
and
movs
sub
dec
jmp
sub
rcl
int3
and
cmp
push
les
popa
jne
jb
or
cmp
dec
in
repz
call
leave
cmp
inc
sub
and
daa
lods
jl
mov
xchg
mov
js
in
pushf
sbb
out
pop
fld
pop
cmps
dec
lock
(bad)
jns
iret
mov
fsubp
popa
or
retf
inc
jge
sar
sbb
hlt
mov
hlt
imul
mov
ss
push
(bad)
cmp
xor
popf
xor
xchg
popf
pushf
xchg
adc
mov
cmp
and
js
or
dec
imul
push
mov
mov
add
push
aad
daa
xchg
fnstcw
inc
dec
push
fidiv
sar
mov
cmps
adc
jmp
fisttp
rcl
cmp
test
pop
inc
int
mov
and
test
pop
xchg
jp
adc
cmp
xchg
jmp
and
add
cmp
sub
mov
cld
mov
mov
iret
and
add
mov
xchg
and
add
xlat
mov
pushf
fsincos
push
mov
dec
addr16
movs
add
mov
mul
jg
in
out
adc
fnclex
push
mov
sbb
adc
shl
fist
push
aad
shl
sbb
sbb
jns
jo
push
mov
stos
mov
cmp
cmp
mov
push
inc
call
adc
sbb
pop
pop
fnsave
ja
mov
test
jecxz
mov
fs
pushf
sub
mov
fs
test
or
jmp
sub
pop
mov
mov
sub
push
push
mov
cli
in
(bad)
aas
jns
mov
cmp
cmp
fincstp
jo
add
sub
or
xchg
stos
mov
test
sub
inc
dec
jecxz
outs
inc
and
add
add
xchg
cmp
and
cli
loopne
mov
pop
test
ins
xchg
xor
sub
xchg
mov
dec
loope
imul
rcl
pushf
lods
not
sbb
or
rcl
push
arpl
scas
sbb
fxch
lock
into
cmp
mov
fs
dec
or
cmp
jmp
fs
cmp
jbe
and
or
adc
xor
mov
sbb
pop
(bad)
add
outs
and
push
div
mov
sub
inc
(bad)
cli
scas
mov
in
mul
rol
(bad)
jp
lods
mov
jmp
rcl
or
repz
outs
shr
in
cmp
mov
sbb
clc
push
stc
ret
fimul
add
adc
or
dec
sbb
std
sub
or
inc
retf
rcl
mov
outs
mov
test
call
lds
cmp
in
lahf
mov
out
fdiv
fucom
inc
jg
add
out
aas
xor
mov
(bad)
int3
cmp
sbb
cdq
xor
popf
jns
pop
xchg
mov
cli
sbb
fidivr
(bad)
lock
inc
aam
cs
cmp
pop
xor
js
xchg
jg
mov
ins
in
mov
adc
push
cmp
sti
mov
xchg
fs
ss
lds
stos
lahf
push
retf
out
xor
icebp
repnz
push
cmps
neg
fdivr
stos
sbb
call
clc
ret
push
mov
push
add
mov
cld
inc
fdivr
push
adc
pop
xchg
push
in
les
inc
call
add
adc
dec
imul
adc
dec
outs
movs
or
lea
pushf
test
inc
sahf
and
cvttps2pi
jle
mov
jg
mov
dec
(bad)
cdq
pop
add
mov
or
pop
xchg
mov
cli
mov
pushf
movs
dec
out
repnz
pavgw
lods
ds
ss
cmp
adc
jno
jae
jb
mov
xchg
xor
arpl
sbb
cmp
xor
and
adc
pop
jnp
inc
and
xchg
adc
mov
aad
jae
fwait
jg
mov
mov
idiv
cld
sub
inc
stos
(bad)
fsubr
adc
lock
hlt
hlt
int
dec
pop
popf
mov
addr16
cmp
icebp
mov
clc
sbb
push
les
dec
and
movs
mov
pop
out
test
mov
or
cmps
and
jnp
cmp
inc
push
dec
jnp
cwde
test
adc
xchg
out
inc
leave
retf
dec
jae
mov
gs
movs
ins
ret
adc
cmps
mov
clc
cmp
ja
lods
lds
repnz
pop
push
cdq
cmps
outs
xchg
dec
cmps
adc
sbb
aam
push
out
inc
push
ja
sub
jnp
fwait
mov
xchg
jecxz
lahf
loopne
push
jg
mov
(bad)
jmp
lods
imul
jne
test
adc
aaa
arpl
retf
xchg
add
in
pop
aam
push
push
mov
mov
test
(bad)
loope
push
enter
jmp
repnz
fdivp
setg
cmp
into
or
mov
sar
add
enter
fldenv
jg
dec
cmp
pop
cmps
dec
sub
fldcw
inc
int
cs
add
push
ds
bound
dec
or
jno
scas
xchg
sub
fwait
shl
push
retf
(bad)
push
shr
and
js
mov
push
xchg
fwait
pop
xor
jns
and
mov
fimul
mov
inc
sub
pushf
sub
sub
jno
lods
push
cmp
mov
pop
fadd
ror
inc
cmp
and
sub
aas
mov
stos
inc
xchg
add
mov
fld
in
test
jns
cmps
pop
test
dec
popf
cmc
xchg
push
popf
out
dec
fcomip
std
sbb
imul
mov
adc
call
(bad)
cmp
mov
ror
and
enter
sbb
inc
xchg
imul
pop
jle
fwait
sahf
xchg
xor
stos
dec
jmp
dec
or
and
nop
sbb
xor
sbb
nop
push
inc
xchg
and
cwde
mov
cmp
jmp
adc
push
jle
jbe
fmul
push
hlt
mov
and
loopne
and
push
test
pushf
mov
mov
mov
(bad)
icebp
cwde
mov
inc
js
movs
jp
sub
dec
cs
into
imul
inc
loopne
add
push
fsub
jnp
stos
(bad)
mov
into
rcr
outs
push
pusha
sbb
push
push
inc
aaa
xor
popa
sbb
mov
push
ds
into
in
mov
inc
test
shr
test
in
in
add
adc
mov
adc
inc
dec
movs
(bad)
hlt
xor
lds
mov
ss
retf
push
rol
push
dec
jle
push
pop
dec
out
sbb
(bad)
repnz
pop
call
inc
or
xchg
sbb
(bad)
mov
push
mov
aas
fnsave
push
xchg
sub
xchg
repz
(bad)
int3
jmp
dec
div
scas
ins
rol
mov
out
fsub
mov
ror
dec
cli
dec
stos
xor
sub
shr
cmp
sub
add
lea
adc
pop
cmps
mov
mov
(bad)
jmp
hlt
bound
inc
dec
jecxz
and
aaa
int3
ja
jge
scas
imul
mov
jb
fbstp
cld
bound
pushf
pusha
fld
leave
jb
out
adc
fld
test
mov
inc
xor
xchg
mov
mov
retf
adc
in
push
outs
sahf
pop
pop
inc
mov
and
mov
dec
sbb
pop
and
daa
outs
pop
adc
or
mov
(bad)
sbb
cmps
pop
pushf
rol
pop
outs
pop
fisub
(bad)
lock
(bad)
cwde
addr16
sub
mov
mov
mov
push
mov
mov
sbb
mov
xchg
fdiv
icebp
jno
adc
dec
mov
leave
ds
sbb
sub
push
cwde
xor
push
stos
xchg
xchg
jmp
dec
js
out
cmp
and
push
iret
imul
add
mov
out
int3
mov
jmp
jle
shl
fdivr
sbb
inc
push
hlt
sar
mov
push
inc
mov
lods
test
mov
cmp
inc
popf
inc
pop
adc
pop
cmp
je
stos
test
pusha
cli
jmp
dec
neg
xor
sub
inc
inc
mov
dec
scas
aad
sbb
sub
ret
lods
cdq
pop
mov
inc
cmc
data16
mov
inc
mov
loopne
call
lock
and
inc
mov
ror
sub
mov
pop
cld
(bad)
movs
jmp
arpl
aad
enter
or
shr
jl
cmp
jne
pushf
push
movs
xchg
cmp
inc
call
inc
jne
push
(bad)
adc
je
adc
jle
mov
stos
sbb
cwde
mov
xor
pop
outs
out
cmps
xor
aad
mov
push
fwait
jg
into
xchg
ret
std
xchg
(bad)
stos
cmps
add
jne
xchg
movs
in
dec
stos
sbb
test
and
fdiv
mov
ror
fsub
ja
inc
mov
push
pop
push
call
dec
icebp
repnz
sahf
mov
jae
jmp
or
and
retf
xor
sbb
fld
gs
(bad)
dec
pop
push
pop
loop
mov
loopne
pop
push
lahf
ins
fnstsw
add
or
aam
std
xor
(bad)
adc
pop
jle
xchg
mul
not
mov
aam
add
clc
daa
add
aam
ret
inc
fstp
push
sbb
cmp
jp
jae
dec
mov
scas
push
clc
stc
cs
mov
jl
mov
and
add
jns
jne
cmps
packsswb
pop
pop
std
fcom
rcl
inc
lea
test
xchg
dec
mul
not
icebp
dec
mov
fstp
sbb
cli
xchg
stc
cmp
dec
rcr
cmp
iret
shr
sub
pop
inc
inc
mov
cdq
lods
sahf
inc
adc
and
in
ins
push
xor
mov
pop
or
push
cdq
mov
fsubr
mov
xlat
push
dec
rcr
iret
lds
mov
pop
rol
add
jl
sbb
out
movs
xor
mov
popf
jns
outs
stos
dec
pop
or
repnz
inc
out
dec
cmp
sbb
data16
lahf
xchg
mov
into
repnz
jle
mov
and
dec
pop
fldenv
into
inc
lea
push
(bad)
aad
inc
(bad)
cmc
pop
mov
push
xchg
mov
dec
mov
sub
add
ja
adc
mov
(bad)
mov
test
test
test
hlt
xor
pop
ror
test
aaa
jg
imul
mov
clc
dec
(bad)
(bad)
push
mov
cmp
sbb
dec
inc
mov
aas
mov
push
mov
in
dec
adc
hlt
mov
mov
push
lock
outs
lds
mov
jno
icebp
or
pop
adc
out
mov
inc
outs
sbb
adc
(bad)
stos
xlat
retf
out
test
push
repz
sbb
int3
out
out
and
adc
cs
pop
sahf
push
pop
adc
inc
test
lahf
std
jnp
fidivr
jl
les
js
cmp
push
sbb
dec
nop
xchg
loope
push
or
int
adc
je
rol
xchg
pop
popf
out
test
fadd
mov
ins
inc
mov
stc
leave
mov
scas
fisubr
dec
fldcw
or
int
inc
fwait
dec
fs
shl
mov
call
fwait
lea
fdivr
inc
and
cmp
cmp
arpl
stos
jae
mov
inc
stos
test
in
(bad)
xchg
cmp
rol
(bad)
sbb
shl
adc
jmp
mov
add
leave
ret
mov
ror
fwait
mov
adc
add
pushf
add
pop
movs
sbb
inc
stc
aaa
pop
jae
retf
mov
adc
iret
sbb
nop
xor
div
sbb
sbb
popa
jae
outs
and
mov
jae
fild
cwde
addr16
arpl
jp
in
test
push
cli
test
fsubr
inc
mov
test
xor
lock
ficom
pop
out
sbb
nop
clc
retf
pop
cwde
inc
pop
fs
push
sub
cmp
retf
dec
lahf
iret
cmp
bound
mov
gs
or
push
shr
aam
dec
lods
mov
call
(bad)
push
and
inc
mov
xchg
dec
and
les
stc
mov
push
lods
(bad)
cld
add
(bad)
jmp
arpl
dec
sub
hlt
jmp
les
adc
or
(bad)
jmp
movs
sar
or
dec
sub
xor
inc
adc
pop
lahf
mov
add
push
dec
int
test
xchg
aad
out
addr16
adc
(bad)
jp
(bad)
popf
outs
jecxz
fs
ret
lahf
sub
dec
lods
mov
push
aas
xor
popf
and
jbe
jo
adc
daa
int3
in
jecxz
xchg
add
pop
mov
sbb
cdq
mov
mov
test
pop
enter
pop
adc
pop
ins
sbb
sub
pusha
push
xchg
add
xchg
and
adc
(bad)
aad
ins
inc
cdq
outs
jmp
jne
mov
(bad)
icebp
test
out
scas
pushf
mov
pop
mov
rcr
aam
pop
js
mov
jmp
dec
out
shl
push
dec
mov
push
xchg
jbe
ins
mov
or
addr16
ret
sub
push
and
sbb
push
push
mov
ror
in
mov
aam
mov
iret
mov
pop
pusha
inc
mov
inc
mov
test
xor
push
scas
xchg
dec
popf
test
arpl
shl
jmp
outs
push
xchg
dec
jecxz
stc
cmp
out
ja
sub
es
mov
inc
or
xchg
iret
aam
and
ins
int
sbb
push
sti
pop
or
or
data16
mov
fs
mov
adc
int3
std
xchg
and
jns
pop
cmp
pop
(bad)
sub
out
sbb
dec
call
cdq
push
inc
loope
mov
mov
call
jbe
sub
jecxz
idiv
or
ins
sbb
add
add
cmps
hlt
inc
push
dec
push
in
gs
lods
cmp
adc
mov
popa
mov
inc
(bad)
sti
in
mov
jge
mov
jge
(bad)
test
or
in
xchg
mov
pop
add
icebp
stc
xchg
sar
jp
xchg
test
push
int3
sub
es
scas
inc
in
sbb
and
dec
pop
push
cdq
mov
retf
dec
sbb
dec
cld
jmp
inc
retf
push
mov
retf
scas
fs
lods
aaa
je
xlat
stc
cmp
das
cmp
hlt
xchg
pop
sahf
mov
pop
arpl
jo
scas
and
lahf
add
test
movs
mov
icebp
push
cwde
pop
dec
loope
stos
add
out
lds
cwde
dec
ror
ds
jb
push
jl
xor
pop
dec
mov
mov
sub
fild
xchg
daa
test
pop
jge
pop
jmp
and
aas
mov
out
add
xor
mov
inc
popf
sti
mov
adc
inc
scas
ja
mov
mov
pminsw
hlt
or
fs
sbb
push
mov
mov
lock
xor
mov
dec
and
sub
adc
sub
sbb
cmp
cmp
jne
fwait
(bad)
int
sub
dec
sar
push
xchg
retf
jl
in
push
sbb
mov
adc
cs
cmp
inc
push
jl
retf
(bad)
xchg
jb
sbb
jo
inc
loop
fiadd
lock
mov
mov
(bad)
sbb
mov
scas
ds
mov
xchg
xchg
outs
in
repnz
push
neg
mov
loope
pop
aas
inc
lea
inc
mov
xor
mov
fst
sahf
fld
cdq
hlt
fs
sub
mov
mov
xchg
xchg
das
push
movs
mov
cmp
in
dec
xchg
repnz
cli
sbb
sub
aam
popa
mov
cdq
call
mov
fldl2e
movs
retf
cld
xor
fld
imul
add
clc
(bad)
xor
adc
inc
lods
ins
sub
(bad)
retf
aas
bnd
lea
mov
push
outs
dec
and
and
push
adc
sub
push
xlat
ss
nop
mov
cmp
retf
xchg
xor
push
je
mov
scas
shl
adc
loope
push
cli
in
xor
fdiv
inc
mov
xchg
repz
mov
xor
ss
aad
inc
in
add
pop
fnstsw
pop
daa
stos
outs
push
jle
mov
out
dec
out
int
adc
clc
xor
and
xchg
jge
fistp
mov
sahf
ins
pop
adc
stos
mov
mov
cbw
jp
inc
ficom
shl
call
mov
div
fs
cmps
pop
add
loop
nop
call
call
and
xchg
imul
sbb
push
call
in
ds
xchg
add
sbb
fwait
pop
mov
ror
pushf
or
(bad)
lods
mov
inc
xor
(bad)
std
mov
mov
pop
imul
jns
push
jecxz
loope
xchg
loope
int
dec
adc
cmc
outs
mov
test
cmps
sar
dec
aam
lods
ret
hlt
jge
sahf
add
sub
test
and
lods
pop
dec
arpl
sbb
sar
ja
cmp
mov
xor
arpl
jno
scas
sub
(bad)
cld
cmp
pop
xor
jmp
dec
fadd
daa
movs
dec
xlat
mov
pushf
je
in
pop
(bad)
mov
test
inc
mov
xchg
jecxz
stos
std
inc
jns
fidiv
inc
cmps
adc
cmp
fcmovbe
jo
pop
push
sbb
pushf
ss
lods
jne
pop
in
xchg
mov
ds
xor
cmp
inc
add
cmp
or
pop
sbb
lods
push
inc
adc
test
inc
jb
test
test
adc
jecxz
movs
cmps
mov
jno
nop
mov
out
jmp
pushf
push
jmp
sti
sub
push
(bad)
into
lock
mov
sub
je
fxch
lods
or
(bad)
push
(bad)
int
mov
cmp
xor
xchg
and
mov
add
sbb
shr
cmps
mov
icebp
push
inc
dec
xchg
dec
xlat
(bad)
out
movs
rcr
int
mov
sti
mov
mov
aad
cdq
loope
dec
imul
aaa
or
hlt
ret
and
ror
pop
dec
mov
pop
or
pop
and
inc
fmulp
push
mov
add
or
cmp
das
(bad)
add
pushf
aaa
push
mov
inc
ror
xor
ins
inc
lds
sar
out
stos
outs
xchg
mov
add
fnsave
mov
sbb
lods
es
cld
icebp
mov
popa
jle
(bad)
inc
stos
cs
jbe
xor
push
scas
xor
mov
xchg
xchg
shl
xchg
outs
push
jp
out
cmp
xor
add
inc
push
lahf
dec
pop
ror
jb
mov
js
mov
inc
mov
pop
stc
dec
gs
cmps
outs
(bad)
pushf
(bad)
out
cdq
push
icebp
xchg
loope
add
jg
in
aam
cdq
dec
push
sahf
fiadd
xchg
aam
push
sbb
inc
pop
dec
test
daa
(bad)
xor
popf
push
push
out
stos
xchg
aas
or
gs
xor
sbb
and
call
jge
xchg
scas
dec
push
mov
mov
out
lock
loop
add
sub
nop
fdiv
adc
sbb
(bad)
cli
xchg
cmp
bound
cmps
pop
ins
out
icebp
es
aam
neg
sar
mov
dec
pop
xor
(bad)
scas
push
retf
ss
pusha
sbb
and
retf
mov
aas
add
jnp
not
xchg
repz
jne
add
das
xor
add
jo
outs
or
push
pop
popf
mov
adc
xor
call
imul
inc
ret
mov
js
jecxz
inc
iret
and
fld
cmps
call
sahf
test
adc
out
fcmovbe
jns
pushf
test
int
stc
pop
pop
das
(bad)
shr
and
cmp
or
pop
pop
cli
xor
adc
push
call
leave
ficomp
cwde
add
stos
pop
mov
fld
test
pop
push
repz
add
push
dec
int3
retf
mov
retf
fisub
jbe
jl
xchg
push
leave
mov
aaa
call
jl
mov
int
fild
xchg
mov
xor
jecxz
mov
outs
ins
stos
cdq
pop
in
scas
dec
sub
retf
jmp
gs
mov
adc
div
bound
aas
into
arpl
nop
adc
adc
aaa
adc
cmp
sub
or
imul
movs
mov
aaa
cmp
pop
(bad)
fsubr
aaa
mov
pop
loopne
inc
push
fmul
mov
jecxz
out
cmps
pop
cmp
cld
icebp
or
imul
pop
xchg
not
sahf
mov
push
sub
loope
mul
cmp
jge
sbb
inc
mov
mov
sbb
mov
add
sbb
inc
(bad)
mov
xchg
push
aam
sbb
push
lea
cmp
in
mov
mov
add
arpl
sar
xlat
inc
in
mov
cmp
xlat
cmc
pop
jecxz
and
mov
in
fnstsw
jns
xchg
imul
cmp
mov
fstp
jl
cdq
imul
cmps
iret
xchg
push
pop
cli
sbb
jns
push
aaa
jmp
pop
mov
dec
push
and
xchg
cdq
xor
das
mov
jb
push
enter
xchg
mov
pusha
leave
mov
add
shl
mov
pop
jns
xchg
adc
movs
pop
sar
sbb
cmp
clc
fild
inc
dec
or
push
sbb
fwait
mov
ror
cmps
clc
pop
push
jp
mov
adc
and
sbb
or
movs
fwait
sub
jnp
(bad)
xchg
inc
retf
xchg
pop
fcom
lods
hlt
push
enter
cdq
jae
out
jmp
jno
adc
dec
fldenv
xchg
mov
js
loope
mov
shl
lahf
cmps
fs
dec
inc
adc
xor
popa
stos
jne
pop
sahf
xor
cwde
cmp
(bad)
jp
cld
jnp
icebp
inc
push
push
and
sub
imul
pop
icebp
add
lea
mov
test
xlat
retf
mov
jle
test
dec
test
sti
jno
cdq
pop
and
in
and
cmps
idiv
nop
push
add
add
sar
xchg
jo
je
push
cmp
int3
add
aas
push
(bad)
xor
movs
push
lahf
iret
cmp
stc
inc
in
cli
sub
cmp
add
popa
ins
mov
xor
sbb
(bad)
aas
cwde
cld
or
pop
arpl
dec
adc
jecxz
pop
pop
(bad)
mov
mov
sahf
pop
push
mov
mov
stos
retf
inc
icebp
test
nop
jle
daa
pop
cmp
ds
aas
cmps
punpckhdq
cmp
dec
xchg
xor
ffree
add
cmp
xor
js
add
into
imul
dec
dec
fmul
mov
call
mov
mov
pop
js
push
popf
mov
inc
popf
jmp
sub
loope
sub
je
fwait
and
fwait
inc
pop
add
mov
stc
cmp
fistp
or
dec
cld
xchg
stos
jnp
cs
sub
daa
inc
jae
xor
pop
cmc
test
mov
xchg
out
and
fcom
inc
inc
mov
daa
mov
mov
mov
pop
stos
xchg
imul
xchg
mov
je
dec
outs
push
test
enter
pushf
lock
pop
xchg
xlat
std
ja
sbb
sub
pushf
cmovae
repnz
cmc
jno
call
leave
push
pop
cs
clc
hlt
jg
or
or
pop
bound
test
repz
aam
pop
dec
or
sbb
xor
daa
cld
jle
nop
pop
pop
into
dec
jo
and
cmp
inc
mov
inc
shl
fs
cmp
(bad)
cmps
imul
xchg
aad
xchg
bound
sbb
inc
dec
scas
popf
dec
hlt
push
fldcw
push
repnz
stos
push
(bad)
and
outs
sbb
gs
jns
mov
(bad)
popa
(bad)
fistp
xchg
fsub
add
jecxz
das
dec
jne
in
add
push
mov
xchg
or
adc
daa
jge
sar
aam
jbe
vphaddbd
inc
out
mov
sbb
je
cdq
fwait
call
lea
(bad)
cwde
(bad)
pop
gs
xor
js
inc
pop
sub
out
fld
gs
pop
cwde
cmp
stos
pop
sbb
mov
fistp
mov
into
inc
inc
pop
cmp
add
mov
and
sbb
test
ds
mov
loop
mov
int3
ret
popa
sti
sbb
test
rcl
sub
adc
movs
mov
mov
push
mov
mov
mov
icebp
jo
stos
mov
push
sub
std
(bad)
(bad)
cdq
pop
or
push
mov
mov
stos
sbb
aad
into
repnz
imul
jbe
mov
inc
push
fisubr
mov
push
lea
inc
leave
shr
jmp
sbb
mov
mov
or
mov
(bad)
lods
mov
pop
loope
pushf
sbb
retf
nop
(bad)
pop
je
cdq
dec
in
neg
pop
(bad)
out
and
inc
push
sbb
and
push
and
or
sbb
std
das
fwait
lea
push
data16
inc
sub
adc
imul
mov
inc
fxch
xchg
cmp
pop
sub
aad
loopne
test
enter
(bad)
call
movs
mov
dec
inc
mov
lea
inc
rcl
xchg
into
add
mov
adc
das
in
test
push
icebp
and
pop
cmps
jne
jg
jae
push
or
dec
ret
stc
sub
xor
and
ds
xlat
pop
dec
test
cmp
cdq
popf
cmp
lock
inc
mov
outs
push
fldcw
mov
fwait
jo
movs
jle
rol
cld
sub
dec
lock
mov
cld
add
fcmovnbe
movs
hlt
test
icebp
cmps
xor
jb
sub
in
pop
iret
xor
outs
sbb
int3
enter
addr16
mov
out
pop
jl
inc
sti
adc
jb
cwde
pop
mov
test
jo
push
add
mov
push
addr16
in
mov
add
jbe
inc
mov
test
bound
pushf
or
ret
pushf
push
cmps
enter
lods
mov
(bad)
neg
icebp
push
(bad)
das
sbb
loope
fnsave
inc
ja
dec
lods
sbb
(bad)
dec
or
sub
in
fdiv
add
xchg
dec
ja
sbb
pop
aas
push
add
and
pop
pop
sub
cs
mov
lea
mov
jl
jno
imul
cli
aas
stos
mov
push
int
inc
push
jmp
imul
mov
out
jmp
lds
leave
leave
ret
push
fldenv
je
jno
inc
popa
mov
shl
fucomi
sbb
into
dec
dec
je
cld
xor
aaa
sub
jae
mov
jle
mov
imul
dec
out
test
adc
popa
outs
rcr
std
addr16
xchg
pop
xchg
mov
in
mov
xchg
dec
ja
mov
retf
call
inc
ror
or
jnp
inc
add
pop
mov
xchg
leave
mov
and
sbb
clc
outs
bound
idiv
inc
daa
addr16
pop
mov
in
js
lahf
jne
xlat
cmp
stos
mov
idiv
movs
add
stc
or
jne
pop
cwde
sub
xchg
retf
xchg
mov
xor
pop
mov
mov
push
mov
mov
xchg
stos
clc
gs
mov
adc
cmp
into
iret
sub
cmp
jge
pcmpeqw
push
sbb
stos
xchg
xchg
adc
repz
call
adc
pop
mov
mov
jg
sar
ds
adc
out
and
ins
and
dec
xchg
mov
push
jbe
pop
stos
std
mov
sub
imul
xchg
pop
fxtract
mov
rol
sub
push
mov
push
cmp
and
pop
inc
mov
outs
sbb
ror
xor
cs
into
addr16
xor
sbb
mov
ins
adc
arpl
mov
or
or
fbld
out
add
popf
pop
add
data16
test
in
pop
repz
xchg
(bad)
in
scas
adc
mov
mov
add
cld
loop
lock
pop
or
inc
jl
dec
or
popf
mov
int
sti
loop
xchg
push
dec
jns
out
adc
in
pop
mov
(bad)
jnp
stos
jae
shl
addr16
test
daa
xor
int3
xchg
push
stos
retf
dec
push
xchg
push
aam
mov
mov
stos
pop
adc
retf
mov
xchg
sbb
mov
popf
rol
xlat
mov
inc
lods
mov
dec
in
xor
adc
and
adc
jbe
xor
lahf
enter
pop
out
jle
lock
inc
and
sbb
push
or
and
or
ins
adc
mov
loope
xor
in
pushf
inc
jns
inc
test
icebp
pop
cld
mov
scas
jo
outs
mov
outs
inc
cdq
mov
retf
dec
scas
mov
inc
or
in
fimul
xor
cmp
or
and
jns
jno
test
dec
lahf
jmp
add
cmc
and
out
cmp
fst
fcom
jnp
aad
outs
addps
scas
movs
pop
mov
sbb
rcr
aam
xchg
mov
jne
mov
and
fidiv
cwde
into
xor
lods
jl
mov
xchg
(bad)
cdq
pop
adc
sub
ds
inc
inc
pusha
jg
xor
mov
push
pushf
cmps
cmps
sahf
push
sub
inc
rol
jl
lock
push
jns
aad
sbb
ja
jecxz
mov
pop
adc
pop
arpl
dec
cmp
stos
mov
mov
or
jbe
pop
mov
jnp
out
inc
into
jecxz
xor
loope
jnp
sbb
xor
mov
lock
pop
push
mov
sub
push
cli
rol
daa
inc
fs
shr
cmps
dec
and
shr
xchg
loope
popf
rcr
xor
jp
adc
pop
xchg
xor
arpl
push
xor
or
(bad)
adc
inc
(bad)
mov
dec
xchg
test
push
test
mov
loope
xchg
mul
dec
mov
test
sbb
jmp
enter
enter
cli
xor
adc
sbb
lahf
movs
lods
adc
daa
fwait
shl
xor
add
pop
cwde
jno
jo
mov
retf
cmps
mov
sub
sub
into
mov
mov
sub
sub
mov
xchg
rcr
std
daa
into
pop
mov
adc
mov
mul
cli
fnstcw
lea
das
push
sbb
(bad)
lods
and
cmp
push
sbb
das
fwait
jb
inc
out
mov
out
rol
sbb
or
xor
xor
outs
pusha
test
and
sbb
push
dec
ret
push
lds
inc
mov
(bad)
mov
mov
test
cld
mov
pusha
xor
cmps
leave
or
outs
fidiv
aad
pop
xor
mov
inc
iret
and
sub
outs
sub
pop
cmps
mov
fstp
(bad)
lock
arpl
mov
add
outs
xor
aaa
mov
dec
jno
dec
adc
mov
fmulp
mov
loope
movd
dec
in
shr
sti
inc
fcomp
mov
jl
mov
push
jo
mov
lock
enter
xchg
ret
dec
fwait
dec
clc
sub
dec
xor
gs
sub
dec
inc
mov
mov
stos
sbb
enter
popa
push
push
inc
mov
sbb
call
sbb
cs
mov
gs
sahf
dec
xchg
xchg
pusha
icebp
add
nop
imul
(bad)
sar
jge
mov
xchg
add
pop
add
push
mov
aad
lods
inc
fs
ss
pop
adc
vmulsd
push
or
rcr
push
xchg
sub
mov
mov
loopne
sub
mul
sbb
retf
aas
xor
sub
jo
mov
xor
repz
in
lods
xchg
cmp
jecxz
cli
push
in
call
jb
sahf
imul
lds
cmps
mov
adc
out
xor
clc
mov
mov
sbb
pop
std
mov
and
cmp
sub
shr
dec
push
mov
test
stos
or
hlt
imul
add
pop
add
sub
pop
imul
cmp
jne
jo
mov
outs
stos
stos
xor
test
mov
jg
data16
lea
xchg
jmp
push
xchg
mov
test
mov
out
mov
out
and
lock
scas
xchg
inc
xchg
inc
scas
xor
push
fcomp
shl
push
data16
cwde
push
push
lods
je
ins
mov
retf
pop
loope
jo
sar
ja
mov
pop
mov
push
mov
inc
test
ss
mov
xor
pop
inc
cdq
das
(bad)
(bad)
ins
movs
les
push
(bad)
std
scas
sub
mov
jns
ret
adc
xlat
mov
jmp
pop
ror
rcr
aaa
jge
jl
jno
jnp
xor
pop
out
mov
adc
add
cld
sbb
cmp
and
cmp
cdq
inc
xor
lea
push
adc
out
mov
shl
ins
mov
xor
xchg
jge
(bad)
clc
cmps
das
aam
in
xchg
inc
mov
(bad)
mov
cdq
dec
arpl
test
enter
push
push
sub
mov
sub
mov
pushf
xchg
cs
pop
call
add
inc
in
sub
aaa
nop
add
jnp
stos
add
mov
push
retf
fwait
adc
push
popa
mov
aas
xchg
shl
ss
push
stos
xchg
pop
lea
hlt
nop
loop
cmp
mul
push
sub
(bad)
fsub
and
sbb
sub
pop
xchg
pop
or
xchg
call
aam
mov
add
add
or
xchg
push
mov
push
xor
lock
int
pop
ret
inc
inc
and
popa
add
push
loop
push
adc
std
not
jmp
neg
pop
inc
cmps
mov
outs
inc
cld
test
(bad)
mov
dec
sbb
mov
stos
inc
fldenv
inc
or
pushf
push
jl
xchg
jno
add
daa
iret
ja
into
jno
fmul
imul
das
sbb
cmc
pop
push
mov
jle
mov
pop
out
push
mov
push
cld
popa
pop
push
shl
out
mov
jmp
or
div
or
in
aaa
movs
bound
movs
pushf
mov
sbb
test
xchg
lea
pop
lods
cmp
int3
sti
mov
and
mov
push
sub
inc
and
pop
clc
mov
cmps
int
pusha
push
add
add
push
jl
mov
and
inc
test
pop
in
xchg
xor
push
dec
(bad)
xchg
and
jnp
scas
pop
loope
jmp
jb
sbb
idiv
jno
adc
movs
xchg
cmp
inc
add
mov
test
mov
dec
pop
mov
aas
sub
rcr
pusha
ret
or
xchg
imul
fcomp
xchg
int3
punpcklbw
es
sub
stos
and
(bad)
push
daa
cmps
push
js
mov
(bad)
enter
cmc
inc
leave
imul
jmp
push
shl
cmp
idiv
jp
and
rol
xor
push
aad
std
pop
cdq
inc
add
inc
mov
push
and
mov
mov
push
fcomp
sar
aad
imul
adc
icebp
cmp
mov
add
xchg
mov
ret
shl
neg
test
aam
mov
sahf
pop
iret
call
(bad)
lods
mov
out
dec
ret
add
pop
add
in
scas
std
imul
sub
xchg
icebp
scas
dec
les
dec
ja
shr
inc
test
add
call
sbb
int
(bad)
fistp
dec
sbb
xor
loop
fwait
sub
jb
mov
scas
or
mov
jge
jmp
jnp
pop
mov
fild
popf
push
mov
mov
mov
pop
pop
mov
call
bound
fstp
js
dec
pop
adc
clc
aad
loopne
jp
dec
mov
push
sbb
xchg
cdq
into
push
sub
xor
out
jge
add
or
or
jo
mov
mov
std
cmps
pushf
ds
ret
adc
data16
in
sti
inc
mov
mov
scas
adc
rcr
fwait
push
push
mov
adc
sti
les
xchg
fwait
outs
loopne
aam
and
mov
scas
popa
ret
add
mov
cmp
mov
fistp
loop
cmp
add
daa
es
das
xor
or
mov
push
lods
mov
inc
test
test
leave
outs
add
stos
cs
(bad)
jle
repnz
or
fcomp
mov
popf
shr
(bad)
call
push
icebp
jae
xor
das
stc
aam
inc
fistp
inc
pop
lods
sub
mov
xchg
nop
mov
ror
ds
mov
push
xor
sub
(bad)
jnp
mov
push
popf
shl
icebp
mov
rol
test
(bad)
shl
mov
out
movs
add
sar
mov
mov
mov
scas
stos
(bad)
pop
push
scas
popf
jb
pop
jmp
or
fisttp
inc
es
xor
or
xchg
retf
mov
enter
rol
bound
jne
scas
aaa
or
add
xor
pop
add
sar
mov
push
mov
clc
push
adc
mov
mov
test
aas
lods
jl
popf
mov
xchg
int
imul
cli
inc
cmc
pop
or
cmp
cmp
push
push
add
inc
out
sbb
int3
add
jb
cmc
cmp
adc
add
outs
sbb
shl
or
mov
jl
bound
pop
mov
mov
leave
mov
xchg
adc
sbb
mov
mov
out
mov
mov
lods
sub
repz
cld
pop
fldcw
add
xchg
cmp
cdq
pop
add
pushf
mov
aas
rcl
xchg
sbb
fcom
jbe
mov
popa
mov
mov
jmp
dec
lea
aam
add
xchg
xlat
cmps
adc
inc
push
fidivr
into
les
call
sub
movs
movs
sbb
test
lods
sbb
pushf
out
push
and
clc
dec
jne
mov
sbb
push
int3
fld
cmp
shr
push
movs
addr16
mov
fsubp
cmp
std
adc
pop
jo
mov
inc
jb
dec
inc
xchg
or
nop
xor
add
and
sbb
sub
fld
scas
xchg
shl
repz
bound
scas
jle
movs
ficom
jmp
shl
aaa
psubb
(bad)
and
cmp
jo
or
mov
cwde
mov
pop
out
jmp
xchg
jmp
push
lea
mov
pop
jb
pop
and
adc
test
outs
int
add
jns
mov
pop
out
mov
es
xchg
xor
(bad)
enter
inc
lods
xchg
movs
xor
sti
mov
xchg
mov
repnz
and
and
and
loopne
pop
ja
mov
lods
dec
in
and
or
inc
sub
imul
push
mov
jae
scas
mov
fsubr
pop
fild
jge
rol
shl
cwde
out
fs
cmp
hlt
cmp
(bad)
mul
jnp
sti
fisubr
repz
pusha
jmp
dec
hlt
jle
sub
push
test
arpl
sub
pop
lods
test
mov
pop
neg
mov
jle
push
xor
adc
adc
or
sar
xchg
mov
or
add
rol
fistp
ins
mov
dec
pushf
cmc
mov
or
retf
mov
lods
int3
adc
mov
inc
stc
shl
mov
sub
add
pop
out
jle
and
dec
pop
imul
fmul
jp
ret
ja
sbb
fld
shl
mov
jne
xchg
(bad)
lods
mov
fwait
mov
jno
cdq
jno
mov
arpl
clc
pop
push
shl
mov
retf
lods
(bad)
lods
call
sahf
mov
cmp
rcl
and
fdivr
sbb
push
jge
and
jnp
or
xchg
jg
std
cmp
les
sbb
sub
pop
fwait
cmp
jg
fidiv
add
sar
not
xchg
and
lea
jp
and
inc
in
and
in
jecxz
push
push
jmp
cmc
xor
inc
repz
mov
push
mov
lea
(bad)
mov
std
dec
sbb
leave
adc
pop
in
ror
arpl
cmps
daa
outs
(bad)
in
pop
add
aas
fcom
enter
out
outs
push
jp
iret
adc
jg
and
inc
jo
dec
xor
cmp
lea
repz
lods
fsub
inc
push
fisubr
jecxz
inc
in
out
pop
out
pushf
or
inc
and
push
mov
out
fld
push
dec
mov
(bad)
enter
push
push
shl
loop
stc
aaa
fs
cmps
sbb
lods
outs
pop
push
call
add
push
cld
unpcklps
and
inc
and
fwait
aas
xchg
or
sbb
data16
xchg
and
pusha
pushf
stc
mov
xchg
out
dec
out
pop
inc
mov
pop
and
jns
mov
cld
adc
outs
mov
test
pop
mov
inc
inc
mov
out
or
xlat
clc
lods
jo
pop
add
popfw
push
cmp
lahf
test
sbb
ret
lea
sbb
cmp
sub
or
outs
cwde
push
and
test
push
lock
es
pop
loopne
arpl
sbb
push
retf
jl
dec
cmps
mov
stos
or
lock
(bad)
hlt
scas
jecxz
cmp
jecxz
inc
jmp
dec
inc
lahf
inc
jp
jle
xor
ss
xchg
mov
sar
repnz
push
inc
fstp
xchg
pop
mov
aad
ins
scas
jl
mov
jle
xchg
call
fnstsw
push
mov
ficomp
call
in
cld
push
sub
frstor
mov
(bad)
fwait
mov
stc
loop
jns
in
fiadd
push
std
sbb
shl
loopne
popf
inc
pop
js
fisubr
jb
push
daa
or
cmp
jg
shr
add
add
dec
test
dec
mov
sub
sbb
mov
inc
mov
je
fs
lods
sub
(bad)
cmp
out
or
pushf
add
xchg
std
mov
in
jle
mov
enter
je
test
sbb
pushf
icebp
jecxz
pop
dec
mov
dec
aad
call
in
jmp
icebp
inc
dec
sbb
stos
pop
dec
pop
mov
ret
sub
idiv
hlt
or
push
jmp
add
adc
sar
and
or
jmp
call
outs
mov
icebp
or
sar
popf
jae
sbb
mov
mov
cmp
mov
jo
dec
out
pop
sbb
aad
retf
push
add
js
xchg
jge
lds
je
(bad)
addr16
inc
dec
dec
ds
pop
add
cmp
xchg
mov
add
mov
adc
pushf
inc
mov
jne
inc
jge
mov
popa
mov
xchg
jmp
mov
cmps
dec
pop
cwde
(bad)
mov
mov
jmp
dec
sahf
mov
div
or
push
repz
pop
iret
pop
push
cs
fcomp
sbb
lods
mov
pop
(bad)
fidiv
shl
and
gs
sbb
mov
jno
fdiv
fldenv
jle
je
sub
dec
out
rcl
mov
leave
adc
mov
mov
xchg
into
sub
icebp
push
cmp
(bad)
(bad)
(bad)
js
jmp
data16
scas
dec
pop
cmp
ret
inc
sbb
outs
cwde
sub
adc
mov
add
cmp
inc
mov
and
inc
fs
popa
xchg
xor
fst
imul
imul
out
dec
cld
jmp
push
fldcw
movs
mov
pop
pop
mov
jmp
ret
push
scas
test
out
aam
and
(bad)
mov
adc
ins
pushf
push
lahf
mov
pop
in
inc
(bad)
repnz
xchg
inc
push
dec
inc
iret
add
push
or
mov
arpl
fs
xchg
push
ja
lea
fcmovne
xchg
adc
dec
inc
push
scas
push
(bad)
leave
push
test
mov
div
imul
mov
bound
(bad)
retf
sti
jg
cwde
cwde
imul
out
inc
daa
cmc
fisubr
sub
sub
cmp
int3
mov
fsubr
jl
hlt
popa
adc
aam
adc
xor
jmp
add
mov
daa
push
jnp
jmp
inc
inc
inc
mov
ror
call
add
cmc
cmc
xchg
es
dec
test
mov
scas
and
fst
xchg
aad
cmp
fild
pop
sti
push
cs
jmp
cmp
gs
push
jbe
jbe
inc
cmc
mov
in
ins
lds
bound
(bad)
pop
xor
add
pop
lea
into
dec
dec
call
mov
sub
xor
in
sti
inc
lods
xchg
pop
sub
cwde
inc
faddp
lds
jecxz
push
loop
inc
add
aam
pop
int
and
js
mov
adc
rcr
call
stos
data16
dec
int3
or
dec
mov
call
jnp
lods
pushw
xor
jl
retf
adc
lock
dec
push
jbe
clc
pop
adc
daa
sbb
js
movs
pop
inc
sub
xchg
xchg
stos
cmp
out
scas
in
imul
pop
es
(bad)
mov
in
in
cld
jno
rcl
xchg
jo
gs
cmps
(bad)
test
bound
leave
sahf
pop
inc
(bad)
mov
sbb
pop
das
fmul
jge
jge
sbb
test
mov
retf
or
retf
jno
sbb
mov
and
lods
jnp
lea
scas
mov
jmp
inc
popa
dec
fnstcw
cdq
retf
pop
call
push
rol
pushf
adc
push
adc
dec
inc
mov
rol
lods
clc
aas
jge
add
jmp
and
rcl
jg
xor
dec
pop
mov
xor
rcl
add
pop
in
in
daa
mov
dec
inc
pop
sub
inc
outs
add
mov
aam
push
push
sbb
inc
push
jle
(bad)
mov
rcl
pop
fisttp
test
dec
xchg
jecxz
and
jmp
mov
push
mov
mov
cmps
cs
(bad)
lock
bound
test
xchg
ss
sbb
test
jne
dec
pop
ja
fwait
xor
addr16
sbb
pop
in
js
(bad)
jns
hlt
pop
arpl
and
and
dec
jo
or
mov
sub
int
jae
push
jg
imul
rol
(bad)
mov
sbb
movs
xor
inc
out
shl
mov
(bad)
sub
or
retf
adc
inc
lea
and
dec
es
sbb
sahf
out
jb
pop
sub
popa
mov
arpl
add
test
dec
int3
fnstcw
pushf
popa
inc
outs
test
dec
mov
and
ret
fmul
cld
xor
mov
(bad)
xchg
retf
gs
mov
dec
pop
sbb
cmp
cmp
pop
pop
or
aas
int3
push
(bad)
cmp
adc
xor
add
or
gs
lods
pop
inc
mov
mov
mov
(bad)
jmp
inc
(bad)
in
add
mov
stc
(bad)
fmul
out
sti
dec
in
jmp
call
test
jb
test
lds
mov
cmc
or
sub
cli
bnd
adc
cmp
ss
pop
test
cmp
je
xlat
and
daa
clc
daa
xor
add
icebp
inc
mov
in
outs
dec
fmul
mov
js
mov
(bad)
out
sbb
inc
js
sub
mov
push
leave
mov
xchg
fldenv
mov
ret
lods
mov
mov
loop
inc
bnd
sbb
pop
ret
pop
inc
mov
push
or
xchg
retf
sub
add
fild
push
and
inc
adc
push
cmc
lea
mov
push
lods
dec
adc
lea
push
xor
scas
popf
push
xchg
leave
js
pop
inc
push
fnstsw
lds
out
push
jmp
jl
xlat
loopne
adc
das
fsub
xchg
xchg
sbb
pop
adc
lea
push
neg
ss
mov
loop
fnstsw
dec
push
dec
mov
and
mov
pop
sahf
sar
sbb
daa
xor
pop
test
mov
pop
lea
cmp
scas
mov
cwde
pop
sbb
fst
lds
push
retf
mov
and
f2xm1
ins
into
pop
(bad)
neg
inc
mov
out
ficom
xchg
sahf
push
pop
fimul
xor
mov
dec
out
pop
sub
imul
mov
scas
push
rcr
and
jp
(bad)
daa
and
and
lods
pop
stos
add
dec
adc
or
sub
sbb
les
ficomp
and
leave
imul
mov
cmps
es
test
and
(bad)
call
cmp
jae
xor
lods
and
sbb
aas
cmp
dec
add
mov
call
jno
(bad)
push
and
sub
pop
and
call
adc
imul
or
push
adc
retf
into
xchg
adc
pop
pusha
outs
mov
cmps
fild
out
adc
mov
and
rcl
mov
loop
cdq
dec
push
fwait
shl
sbb
out
jnp
and
cmc
sbb
cmp
nop
dec
pop
pop
dec
xchg
cmp
nop
lods
mov
cmp
jbe
(bad)
adc
inc
fcom
xor
mov
iret
xor
xor
xor
cmp
(bad)
aam
pushf
sbb
imul
cmp
push
fisub
xchg
in
dec
adc
inc
xchg
and
(bad)
mov
jno
js
add
in
out
pop
clc
xor
imul
ss
retf
int
dec
push
fistp
(bad)
jle
loope
dec
jno
mov
add
adc
add
outs
lahf
push
pop
sub
mov
pop
pop
out
xchg
pop
mov
jnp
gs
xchg
mov
xchg
mov
mov
mov
dec
lods
mov
xchg
scas
test
ss
xor
fdiv
cmp
ins
mov
and
out
xchg
mov
cld
nop
or
add
jne
test
inc
imul
imul
inc
lahf
(bad)
lahf
sbb
and
std
dec
loope
xchg
in
xor
icebp
cmps
cmp
inc
mov
outs
call
lods
aam
jnp
mov
(bad)
cmp
fidiv
add
push
sub
mov
cdq
test
aas
fmul
retf
and
inc
jbe
jmp
imul
sbb
js
addr16
dec
movs
shl
cwde
(bad)
xor
jg
push
mov
call
imul
sti
mov
shl
cwde
jle
lods
call
jecxz
ins
jl
scas
inc
in
jp
dec
sub
int3
fbld
and
scas
sbb
in
push
jg
mov
neg
loop
mov
pop
les
lea
sahf
sub
imul
jo
xchg
and
mov
and
(bad)
out
int3
fistp
jp
jb
jge
cmps
(bad)
jp
repz
jmp
loopne
das
out
mov
test
sbb
adc
icebp
xchg
fld
dec
je
mov
push
fild
sbb
fsubr
frstor
push
stos
xor
mov
mov
hlt
imul
push
push
add
xor
outs
xchg
sbb
sbb
fst
test
dec
mov
dec
mov
test
aad
stos
xor
arpl
add
xchg
scas
daa
add
aam
push
xor
dec
cmp
hlt
cmc
aam
les
jo
cmp
adc
mov
mov
(bad)
mov
mov
sbb
jl
scas
rcl
scas
inc
dec
mov
pop
lea
js
fistp
fst
mov
xor
mov
adc
(bad)
xchg
xor
xor
mov
clc
cdq
lods
enter
call
sub
into
call
push
sub
das
dec
mov
jb
movs
xchg
scas
sbb
mov
pop
addr16
and
cmp
xchg
das
call
and
cmp
(bad)
test
jnp
push
ins
pop
sub
(bad)
dec
cdq
mov
push
cdq
gs
lds
cdq
fsubr
sub
mov
inc
(bad)
nop
leave
fstp
mov
or
shl
inc
js
and
pusha
sbb
xchg
rcl
(bad)
bnd
mov
fs
mov
or
pop
mov
sar
inc
pop
mov
test
inc
or
loop
mov
(bad)
push
test
push
cmps
fbld
adc
clc
pop
repz
gs
xchg
push
inc
aad
mov
out
fiadd
(bad)
aaa
and
iret
repnz
js
cmp
sbb
push
cli
cs
mov
mov
pop
sbb
cmps
aam
outs
pop
inc
out
or
push
and
(bad)
push
add
sbb
fistp
mov
stos
push
inc
sbb
out
daa
mov
push
fisubr
shr
pushf
test
out
popa
lds
mov
jmp
not
pushf
inc
add
mov
xchg
scas
(bad)
outs
dec
mov
test
inc
dec
fsubr
jmp
cdq
das
dec
dec
mov
call
test
mov
inc
(bad)
xor
adc
mov
scas
adc
jns
mov
setp
cmp
mov
popa
xchg
arpl
inc
mov
movs
pusha
ficomp
mov
fwait
cmp
mov
fdivr
mov
cli
jo
scas
mov
push
cmps
adc
dec
rcl
jmp
fadd
cmp
adc
jnp
or
or
mov
std
std
jle
lock
push
push
out
push
bound
adc
cld
push
je
push
pop
mov
je
mov
gs
mov
ret
bound
jne
mov
xchg
pop
in
loopne
and
loope
stos
fwait
lods
in
rcl
popf
xchg
cmps
sub
mov
mov
push
sub
push
in
push
jbe
sub
cmp
xor
retf
enter
add
hlt
cmp
push
cs
or
jbe
jle
mov
jge
cwde
mov
sub
aam
aas
xchg
int3
inc
fadd
cmps
dec
(bad)
mov
cmp
call
mov
add
popf
xchg
jl
fld
push
push
dec
sbb
fisubr
and
pop
lods
push
pop
popa
nop
mov
inc
shl
add
pop
pop
les
pop
add
cmp
mov
mov
sbb
pop
add
cmc
mov
mov
outs
mov
cmp
xchg
call
jle
mov
inc
push
mov
test
xor
mov
fisubr
inc
int3
push
sbb
repnz
mov
es
pop
xchg
pop
mov
pop
out
lahf
or
icebp
inc
ins
inc
and
adc
sub
jle
push
dec
cdq
pop
adc
mov
cwde
iret
mov
shr
fstp
add
mov
mov
cmc
cmps
addr16
int
lock
jg
mov
(bad)
adc
mov
mov
adc
cmp
test
in
and
inc
inc
sbb
push
and
stos
mov
cmp
pusha
push
inc
or
inc
imul
inc
mov
leave
arpl
jge
xchg
or
stos
mov
in
(bad)
(bad)
cmp
jbe
daa
mov
outs
xchg
shl
dec
pushf
sahf
addr16
mov
mov
(bad)
outs
pop
out
xchg
aas
add
es
out
aam
nop
dec
iret
dec
inc
adc
call
(bad)
pop
add
cmp
imul
les
pop
rol
cmp
inc
and
or
dec
inc
mov
pop
xchg
mov
push
jmp
leave
gs
push
popa
mov
inc
jecxz
call
clc
mov
xlat
dec
cmc
cdq
scas
lds
or
sbb
clc
xchg
in
sbb
lods
cmp
sub
int3
stos
inc
clc
adc
pushf
ins
mov
pop
cmc
mov
mov
repz
add
inc
add
push
push
and
icebp
or
mov
jb
cwde
mov
(bad)
out
mov
jmp
xchg
(bad)
loope
call
mov
nop
add
loop
nop
jl
(bad)
cli
lods
test
pop
icebp
xchg
ins
les
sub
and
fcom
inc
lahf
ins
sbb
xchg
mov
dec
(bad)
int3
xor
or
adc
cmp
fwait
jne
pushf
add
movs
test
popf
xor
inc
inc
fwait
js
mov
xchg
or
call
mul
scas
mov
cmp
jmp
xor
rcl
mov
mov
cmp
call
jns
jp
das
js
lods
jnp
push
out
xchg
pushf
sbb
cmps
inc
out
in
cmp
ficomp
mov
imul
sub
mov
jmp
xlat
inc
jl
lds
(bad)
(bad)
ins
xchg
sub
lahf
ja
sbb
mov
test
cs
fs
fisttp
pop
aad
pop
or
aad
jns
pop
jbe
dec
cmps
or
mov
inc
cwde
mov
cmp
fdivr
fild
jae
in
adc
sbb
xor
jle
adc
adc
test
leave
shl
cmp
push
push
mov
into
lds
(bad)
loopne
mov
test
jmp
shl
sbb
push
stc
fdiv
xchg
mov
clc
outs
(bad)
cmp
pop
mov
jne
aas
test
daa
or
xchg
test
jge
fld
cdq
fadd
pusha
and
or
ds
sbb
mov
jmp
jmp
adc
push
dec
lahf
dec
xchg
call
add
mov
icebp
test
call
lods
cmps
xchg
outs
cmp
xchg
loop
push
idiv
adc
pop
iret
xlat
xlat
push
lock
xor
or
xchg
mov
fimul
jae
or
sub
dec
xor
scas
pop
mov
int3
gs
pop
outs
mov
pop
jns
shl
push
jmp
lds
cld
call
mov
add
mov
(bad)
loope
retf
fbld
xchg
sub
inc
shl
jmp
cmp
jo
imul
mov
mov
test
jg
iret
outs
or
ret
pop
xor
sbb
push
sub
aas
adc
pop
cli
stos
xchg
fwait
sti
push
(bad)
pop
jbe
mov
inc
in
sti
inc
out
arpl
sti
cli
mov
not
jno
movs
mov
call
dec
into
push
icebp
shr
je
sbb
ins
sbb
inc
or
popf
mov
test
pop
mov
add
gs
(bad)
or
adc
push
sbb
xchg
sbb
stos
xchg
inc
inc
mov
xor
mov
push
mov
repz
pop
mov
rcr
mov
cmc
jmp
std
pop
jle
test
pop
mov
es
retf
enter
xor
push
mov
and
loop
sub
inc
jmp
sbb
sub
outs
dec
test
adc
adc
mov
xor
mov
sbb
pop
js
mov
mov
inc
ror
push
in
jge
scas
xchg
cmp
sahf
cs
out
push
in
mov
jbe
xor
inc
sbb
or
jnp
outs
and
jmp
add
pop
out
jp
call
int
or
sbb
push
lahf
sbb
push
jo
push
xlat
adc
lods
fwait
adc
inc
jmp
mov
xlat
dec
pop
pop
stos
js
mov
out
(bad)
mov
dec
fucomi
test
fadd
mov
pop
pop
loope
nop
adc
xor
mov
dec
pop
xor
xchg
push
pop
jg
test
dec
daa
jge
(bad)
nop
lahf
sbb
lock
add
cmps
and
add
mov
adc
push
xchg
dec
push
lahf
xchg
mov
out
xchg
pop
enter
jp
pop
rcl
rol
ins
mov
popf
cmp
imul
mov
inc
xchg
xchg
in
sbb
sub
adc
cli
in
scas
gs
adc
jns
pop
pop
inc
cli
jns
jle
xchg
int
es
jnp
xchg
pop
mov
adc
inc
sbb
sub
pop
push
(bad)
add
xchg
or
adc
lods
mov
cwde
in
push
ret
ins
push
dec
test
(bad)
mov
outs
mov
cld
inc
cmp
dec
call
nop
jbe
xchg
mov
div
fs
mov
inc
aaa
or
fcmovb
dec
call
sbb
cmp
cmps
stos
mov
(bad)
cli
cmp
pop
ss
adc
jb
push
mov
nop
add
dec
(bad)
or
sbb
stos
mov
add
dec
(bad)
cld
stos
add
push
arpl
popa
fwait
icebp
xchg
sbb
clc
add
icebp
jmp
fdivp
adc
mov
paddusw
inc
xchg
mov
xor
dec
retf
clc
ret
pop
imul
arpl
test
mov
clc
repz
inc
in
add
popa
sub
xchg
sbb
mov
stos
dec
inc
lods
stos
fwait
imul
mov
shl
mov
ins
mov
xchg
or
loop
add
fimul
cmp
sahf
shr
cmc
stc
inc
inc
mov
stos
pop
pop
dec
aam
stos
dec
out
adc
fimul
and
xchg
jge
jmp
push
push
and
or
push
das
xor
or
mov
das
arpl
xor
(bad)
sti
add
out
(bad)
(bad)
bound
mov
inc
mov
cmp
sti
std
add
inc
(bad)
mov
shl
cmps
dec
inc
nop
test
cdq
bnd
mov
sub
sub
fistp
push
cmp
or
test
and
xchg
mov
push
clc
mov
jne
ja
fcom
sub
and
movs
push
daa
scas
adc
mov
dec
fdiv
xchg
add
pusha
add
jle
cmp
mov
test
mov
cwde
test
inc
mov
xchg
popf
xchg
outs
sbb
rol
xchg
inc
fisttp
sub
in
aas
ja
xor
aaa
push
push
adc
fucomip
sbb
fistp
inc
and
cmp
dec
jae
dec
ss
sbb
mov
mov
sbb
push
mov
add
call
out
xchg
outs
(bad)
mov
aaa
rol
hlt
or
scas
stos
xchg
in
mov
sahf
cmp
clc
scas
out
call
cmp
imul
cld
sar
add
aaa
push
ins
pop
push
mov
mov
scas
push
cld
sbb
add
shl
cmp
or
stos
push
sbb
and
stc
out
leave
(bad)
jle
add
fldenv
mov
dec
xchg
fdiv
push
retf
aaa
(bad)
outs
mov
xchg
mov
mov
xchg
enter
cmps
push
fadd
aaa
push
faddp
fbld
sub
jnp
mov
jg
mov
movs
xchg
lea
jecxz
xor
or
sbb
xchg
sbb
lahf
or
jmp
sti
sub
ss
sar
fld
jo
les
mov
mov
mov
xchg
sbb
mov
mov
repnz
popf
dec
arpl
push
and
fmul
inc
pop
cmp
outs
and
scas
dec
or
imul
push
arpl
and
ja
js
cmp
fist
inc
mov
sub
add
push
pop
mov
fdiv
cmp
jp
in
mov
int3
pop
mov
mov
mov
xor
hlt
lock
dec
int
icebp
sub
xor
cmc
shl
or
and
push
jg
mov
(bad)
iret
mov
out
leave
or
fadd
inc
push
or
sbb
jo
popa
mov
jae
ficom
mov
push
cmp
idiv
xchg
js
push
xchg
mov
or
push
sbb
std
push
add
cld
mov
in
add
movs
ins
out
jp
das
add
inc
add
mov
push
and
ret
cmp
mov
leave
jecxz
inc
add
ret
sbb
mov
repnz
xchg
sub
mov
stos
mov
fsub
push
pop
fs
jb
test
cmc
mov
stos
and
inc
mov
fs
mov
lods
ret
and
fld
retf
cmp
mov
dec
(bad)
push
data16
jno
jp
push
or
xchg
or
cmp
xor
and
push
jae
scas
and
fldcw
scas
adc
sbb
push
pushf
out
loopne
scas
in
push
xchg
inc
xchg
test
jge
icebp
sahf
dec
iret
cmps
add
call
call
push
rcl
mov
xchg
test
sub
push
add
repz
lods
(bad)
add
jne
dec
sbb
mov
in
cmp
push
retf
sub
jle
and
data16
dec
xlat
aas
pop
in
sahf
add
and
out
jo
fs
inc
test
enter
mov
mov
pop
into
mov
movs
mov
jp
xchg
mov
(bad)
lods
out
dec
mov
dec
ret
sub
or
push
(bad)
mul
jl
dec
add
cmps
imul
push
mov
pop
ds
ret
mov
push
jge
aaa
mov
or
add
rcl
jb
xchg
in
es
jmp
iret
addr16
push
arpl
jno
mov
loope
ret
cmp
lods
cdq
(bad)
dec
lods
dec
push
in
test
mov
xchg
mov
(bad)
sbb
sti
in
pop
repz
push
fst
sbb
push
ds
stos
lahf
mov
pop
call
pusha
adc
and
in
es
retf
xchg
fs
mov
push
jmp
inc
ret
pop
sub
(bad)
in
mov
mov
cld
pop
in
jns
movs
mov
pop
sti
sahf
xchg
add
fbld
scas
stos
sub
imul
ss
cmp
(bad)
sbb
lea
shr
enter
pop
pop
dec
inc
aam
xor
adc
test
adc
push
inc
xchg
dec
inc
jmp
(bad)
test
retf
pop
jae
cmp
out
mov
xor
sbb
fistp
mov
cld
popa
add
shr
movs
dec
out
test
sub
(bad)
shl
xchg
xor
sub
movs
test
sub
je
xlat
push
leave
mul
sbb
leave
xor
push
push
sbb
pusha
push
mov
outs
mov
cmp
out
imul
call
out
imul
inc
push
mov
mov
lea
mov
xchg
sti
repz
xor
sub
and
lock
loopne
in
dec
js
jnp
adc
mov
test
mov
xchg
rcr
pop
and
cmp
bswap
imul
pop
xchg
pop
lods
fwait
mov
loope
stos
cs
sar
inc
ja
jge
sub
test
loopne
add
fistp
cdq
mov
cmps
mov
gs
int
cmps
(bad)
cdq
jp
mov
das
adc
pop
enter
jp
and
jp
push
or
mov
add
call
add
ja
and
cmp
cmps
ins
pop
xchg
cmp
jmp
iret
test
cmp
inc
je
dec
adc
push
in
pop
add
pop
icebp
xchg
mov
cmps
mov
sbb
xchg
xchg
mov
sub
sub
fucomip
popa
cwde
dec
push
sbb
jno
jnp
dec
jmp
xchg
xchg
sbb
data16
jno
aad
inc
or
xor
popf
or
cdq
dec
sbb
mov
adc
xor
fcmovbe
mov
mov
sbb
cs
scas
fisubr
into
mov
rcr
lods
adc
inc
mov
push
push
mov
aad
mov
idiv
mov
int
cmp
nop
test
rol
add
pop
xor
lods
mov
in
dec
fist
inc
jp
out
sbb
pop
into
xor
jo
popf
cmp
cmp
add
clc
jecxz
mov
popa
and
lahf
pop
sbb
jae
mov
nop
jno
bound
scas
push
adc
and
mov
cmp
cs
and
push
das
clc
xor
inc
cmps
cwde
retf
(bad)
xor
neg
mov
enter
ja
jecxz
add
xor
cmc
push
(bad)
push
retf
arpl
push
dec
lods
and
rcl
rcl
add
hlt
pop
jmp
cmp
mov
xchg
add
mov
lock
addr16
test
inc
data16
sahf
repnz
xlat
(bad)
test
aam
mov
push
hlt
xor
inc
int
mov
lahf
push
jle
xor
ss
test
jmp
pop
pusha
pop
or
dec
cmp
and
mov
mov
lods
push
dec
fmul
add
push
jno
mov
repnz
add
jle
jp
and
(bad)
std
addr16
lahf
push
loop
add
stos
stos
aaa
clc
jl
mov
sbb
movs
leave
lea
push
into
jmp
mov
sub
cmp
xor
pop
bound
dec
add
mov
cmp
imul
add
fidiv
xor
inc
outs
inc
adc
add
xor
jle
xor
mov
cmp
not
sbb
loopne
std
popa
test
xchg
dec
shl
add
jle
lea
push
in
mov
fist
mov
dec
aaa
adc
mov
cs
push
pop
mov
aas
jo
nop
mov
xor
fisub
sar
sahf
retf
jne
inc
inc
in
cmp
adc
sahf
sbb
add
sbb
or
mov
stc
arpl
add
stos
xchg
pop
test
inc
cmc
outs
push
jl
je
popf
fnstcw
scas
call
and
retf
lea
popa
mov
sub
movs
je
lods
test
scas
cld
loop
pop
icebp
sahf
dec
mov
or
pminub
out
and
pop
arpl
dec
fidiv
inc
sub
xchg
call
loopne
jnp
retf
jnp
push
and
sub
popa
or
and
inc
push
fist
mov
aaa
dec
int
mov
call
in
sub
mov
mov
test
rcl
fadd
push
cmps
xchg
repz
rcr
inc
js
fild
jno
dec
inc
cmp
mov
jns
cmp
jge
sbb
sbb
xchg
inc
ret
imul
ret
jmp
es
and
int3
outs
dec
test
lods
sbb
jne
xor
cld
repz
lock
cmps
cs
xor
or
repz
mov
mov
out
das
mov
hlt
or
lods
les
stos
scas
dec
aam
stos
sub
bswap
shr
jnp
rcr
push
test
lds
lahf
fldenv
fild
ins
popa
aas
cli
xor
pop
pop
popa
pushf
or
test
aas
dec
mov
mov
fcmovne
mov
jecxz
push
(bad)
fld
mov
push
in
add
test
fwait
test
sbb
fwait
jne
push
mov
es
cmc
jmp
retf
jbe
lods
bound
pusha
push
pop
xchg
stos
imul
das
(bad)
inc
jns
fmul
adc
adc
adc
adc
lods
sbb
push
inc
ffree
mov
sbb
dec
mov
xor
retf
call
push
(bad)
mov
xchg
test
or
mov
mov
loope
pop
lahf
pushf
push
dec
lds
and
fcom
pusha
and
jae
push
jbe
mov
xchg
sub
std
ins
sahf
jmp
mov
sub
and
and
mov
push
mov
and
(bad)
mov
nop
mov
sbb
in
les
in
xchg
push
not
mov
repz
cmps
cld
and
mov
mov
aas
pop
icebp
(bad)
stos
jecxz
jns
xchg
ja
cs
inc
cmp
xor
jg
sbb
js
jg
xchg
xchg
mov
cmp
ret
fidiv
inc
cmp
sbb
addr16
stos
push
mov
mov
imul
and
mov
hlt
lods
jecxz
xor
cld
arpl
jae
popa
fnsave
cwde
dec
fsubp
or
call
jns
mov
sbb
lods
sahf
lods
adc
shl
test
xor
dec
icebp
xor
inc
shl
fist
adc
inc
scas
sbb
mov
pop
nop
mov
call
xor
push
push
add
adc
clc
dec
inc
scas
ins
add
movs
cmp
cs
test
push
rcr
and
loop
mov
xchg
pop
add
out
lods
xchg
mov
push
mov
div
adc
loope
mov
lods
outs
(bad)
sub
push
sbb
sti
jmp
cmp
cwde
aas
inc
push
call
mov
sub
xchg
jmp
bound
shl
add
mov
fwait
or
dec
dec
call
or
pushf
sbb
push
jb
popa
ret
(bad)
bnd
les
es
ret
icebp
xor
pop
test
pop
push
xchg
movs
stos
sbb
(bad)
jge
mov
dec
enter
cs
xlat
fistp
push
jp
cmp
jo
push
mov
mul
ficomp
vdivps
adc
xor
jnp
arpl
arpl
ins
adc
movs
push
xor
cmp
xlat
out
enter
jp
pop
lods
and
lahf
std
mov
xchg
fprem
icebp
ins
xchg
jge
movs
(bad)
mov
fstp
loop
mov
mov
cmc
dec
dec
mov
sub
shl
sbb
add
mov
aas
scas
inc
rol
jl
sbb
or
lods
ins
out
jl
fnstsw
into
xor
and
inc
loop
jmp
fstp
push
xor
add
stos
popa
jecxz
inc
or
out
dec
nop
mov
jns
xchg
test
test
mov
dec
mov
cmps
dec
push
sbb
lea
cmp
les
push
mov
xchg
lahf
adc
out
int
push
ror
imul
cmp
adc
or
mov
inc
mov
test
xlat
mov
sbb
pop
xchg
sub
mov
push
loope
loop
xchg
fwait
push
add
inc
cdq
call
and
push
ja
xor
out
pop
cmp
out
add
cmp
jl
mov
jmp
push
dec
inc
aaa
mov
and
xlat
pop
inc
mov
adc
inc
gs
mov
shr
jmp
sub
(bad)
in
mov
xchg
add
xchg
xor
jp
mov
pop
add
(bad)
mov
in
mov
(bad)
ss
psrlw
loop
shl
jns
xchg
sub
mov
sub
xchg
mov
pusha
in
or
ja
cmc
or
daa
mov
mov
dec
lods
shr
(bad)
mov
ror
shr
loop
mov
in
mov
xor
sar
pmaxsw
stc
test
pusha
xchg
mov
inc
(bad)
cmp
jmp
shl
ins
mov
push
xchg
fld
pop
cwde
ror
pushf
enter
pop
fild
pusha
pop
and
dec
adc
jge
cmps
sti
sbb
sar
loop
inc
jae
jle
mov
inc
mov
movs
jnp
repz
mov
repnz
jl
cmps
mov
div
mov
ds
xor
cmp
pop
mov
nop
sahf
mov
jmp
jne
(bad)
adc
adc
add
data16
test
sbb
xlat
cld
xchg
inc
mov
jno
dec
push
inc
mov
mov
dec
mov
jecxz
add
idiv
mov
inc
lea
(bad)
int
cmp
pop
hlt
sub
std
push
std
or
cmp
and
mov
retf
mov
leave
mov
xchg
loope
ja
pop
fist
sub
pop
lea
xor
pop
jo
dec
mov
jns
mov
sti
les
rcl
jl
jl
mov
sti
fs
pop
xor
cli
xchg
and
adc
sbb
mov
sbb
test
dec
iret
dec
adc
pop
out
adc
cmp
push
or
out
cdq
popf
and
fnstsw
leave
jl
inc
pop
leave
sub
jg
adc
inc
mov
js
mov
jp
iret
cmps
xor
push
pop
cwde
outs
ret
mov
stos
pop
test
scas
mov
imul
cmps
fs
repnz
cmp
mov
outs
cli
ja
push
push
cmp
fsubr
and
rcl
je
cmp
dec
xchg
out
jnp
loop
stos
(bad)
jp
push
dec
in
or
and
stos
push
scas
ins
ror
mov
jne
test
inc
fsubr
jmp
mov
arpl
imul
adc
mov
mov
xchg
sar
mov
imul
scas
adc
sar
movs
fsub
inc
pop
icebp
mov
call
xor
(bad)
jnp
and
jg
addr16
arpl
xchg
int3
mov
(bad)
dec
call
jg
push
sub
cwde
imul
mov
outs
loop
xchg
and
dec
cmp
sub
mov
mov
shl
push
int3
retf
aad
test
inc
add
add
out
scas
call
push
into
je
inc
inc
pop
(bad)
mov
and
cs
push
dec
rcr
push
jge
ss
retf
dec
and
inc
call
add
leave
and
and
sti
inc
js
jl
sbb
sub
push
outs
call
and
pop
ins
mov
pop
mov
cld
push
push
sar
mov
hlt
movs
clc
mov
cmpxchg
mov
mov
shl
pop
pushf
mov
sub
int3
push
xchg
and
jns
mov
sbb
xchg
mov
mov
sbb
sbb
jmp
cs
or
out
and
movs
dec
sub
lea
add
cmp
retf
imul
inc
push
movs
push
sub
jbe
test
out
shr
mov
jg
(bad)
mov
idiv
xchg
jmp
inc
nop
cmps
cmp
pop
cmps
push
and
int
out
inc
sti
add
ins
inc
push
popf
inc
xor
test
fmul
and
jb
std
and
jns
mov
int3
adc
pop
jne
or
adc
(bad)
xchg
pushf
adc
lock
or
cwde
clc
pop
pushf
int
adc
test
xor
retf
in
repz
jae
cmps
mov
icebp
shl
sbb
fs
push
or
loope
hlt
inc
stc
inc
js
data16
dec
das
test
or
test
sbb
pop
push
sub
add
or
lods
xor
pop
dec
(bad)
sub
mov
push
aam
out
mov
push
lds
data16
in
mov
xchg
iret
xchg
dec
repnz
or
jmp
xlat
das
mov
inc
mov
pop
xchg
int3
retf
lods
mov
sub
cmp
not
and
aaa
push
cmp
pop
inc
xchg
js
popa
cmps
lds
pop
sti
jmp
outs
pop
add
xor
pop
push
jl
cmp
cmps
addr16
mov
retf
and
jp
mov
shl
int
push
push
int3
(bad)
mov
loopne
cdq
mov
sbb
popf
mov
fld
test
scas
xor
clc
repz
fdiv
add
pop
les
pop
test
(bad)
movs
retf
test
sbb
inc
in
push
push
cmp
fnsave
aas
jno
movs
lea
aaa
push
pushf
in
ds
jne
test
inc
xchg
fsub
pop
nop
mov
das
mov
xchg
and
test
lahf
mov
or
mov
or
cld
imul
xchg
pop
push
fwait
cdq
mov
or
imul
push
ret
inc
sbb
cmps
adc
or
mov
inc
mov
add
aaa
or
iret
cdq
add
outs
pop
(bad)
retf
xchg
pop
mov
mov
repnz
mov
dec
pop
mov
mov
mov
(bad)
pop
jp
pushf
inc
int
rcl
sbb
push
cmp
sbb
cwde
or
push
mov
lahf
mov
jmp
inc
add
ds
pop
add
dec
(bad)
fisubr
popf
adc
daa
add
imul
jge
dec
pop
jp
push
ret
mov
mov
or
(bad)
scas
sbb
aad
cmps
inc
add
(bad)
jmp
inc
ftst
jmp
sti
and
sahf
xor
push
dec
add
pop
lock
inc
movs
xor
jb
jb
push
mov
or
sub
sbb
xor
jae
push
mov
jle
mov
js
mov
fwait
(bad)
xchg
sbb
xlat
pop
xlat
dec
outs
pop
sahf
ins
add
xchg
mov
push
cli
hlt
cld
or
lods
jmp
out
xchg
add
xchg
jecxz
lods
lock
dec
mov
dec
aas
sbb
mov
jge
xor
outs
push
jae
inc
cmp
mov
lds
cdq
cmc
(bad)
sti
inc
push
cmp
inc
or
arpl
jle
mov
pop
xchg
test
arpl
dec
push
call
into
sbb
push
jp
xchg
push
hlt
sar
fwait
jmp
push
xchg
xchg
jae
fsub
mov
inc
pop
in
stos
mov
adc
xlat
icebp
test
pop
pop
mov
je
push
sbb
xor
xlat
int
std
inc
inc
daa
pusha
xchg
push
pop
inc
stc
xor
push
scas
xchg
nop
xchg
cmp
mov
sar
sbb
add
sub
inc
or
mov
dec
imul
sbb
aas
les
jnp
jbe
push
test
mov
xchg
outs
(bad)
test
cmc
or
inc
stos
lahf
cdq
mov
xchg
mov
and
(bad)
mov
lahf
mov
jecxz
rcl
sub
call
js
pop
xchg
inc
and
lds
jnp
sar
sbb
out
pop
fs
sub
ins
inc
fimul
lahf
adc
xchg
mov
cmp
jb
sti
xchg
sbb
pop
sub
push
(bad)
mov
movs
sbb
cmc
hlt
cld
sub
push
sbb
mov
aad
bound
test
sub
sub
push
ror
pop
in
imul
jl
xor
xchg
mov
sbb
inc
fsubr
and
jle
ret
sbb
mov
(bad)
daa
clc
inc
dec
cmps
push
pop
popf
dec
jno
mov
pop
fmulp
mov
retf
inc
pop
and
push
movs
hlt
cmp
xchg
lahf
pop
or
call
loope
cmps
inc
push
nop
shr
shl
mov
cmc
sub
dec
jmp
add
ins
dec
and
dec
cmp
shl
loope
sub
inc
ss
sbb
push
pop
mov
hlt
jp
mov
mov
add
movs
stos
adc
push
aas
std
(bad)
or
leave
dec
sub
mov
jge
cmc
adc
cld
gs
icebp
idiv
add
bound
mov
mov
into
fbld
mov
cvtss2sd
ret
stc
mul
and
ds
fcom
push
jb
push
sub
xchg
enter
in
push
fiadd
inc
pop
and
and
js
pop
scas
sub
lods
dec
add
mov
or
popa
aam
mov
mov
sbb
ror
int3
cmps
push
xchg
mov
out
jne
dec
mov
push
pusha
movs
popf
mov
pop
xchg
mov
stos
scas
push
in
and
lock
sbb
mov
jnp
pop
scas
mov
cmc
ja
int
mov
js
inc
ds
dec
pop
add
dec
inc
mov
jb
xchg
lea
das
dec
ret
cmc
mov
test
pop
mov
jl
mov
push
lock
cmc
xlat
icebp
xor
gs
or
pushf
cdq
test
cmps
fsubr
push
inc
mov
lds
sbb
in
imul
inc
cmp
data16
stos
dec
and
out
mov
dec
sbb
adc
add
sub
dec
and
pop
sar
mov
inc
mov
pop
jg
in
jmp
test
push
push
test
ret
repz
mov
stos
bound
jmp
mov
pop
lods
sub
cs
ret
dec
mov
xor
or
in
jmp
pop
clc
cmp
ins
rcr
inc
inc
xchg
push
cmc
xchg
jge
stc
cmp
and
xor
loop
lahf
add
push
xchg
cwde
mov
fwait
enter
fdiv
jbe
push
mov
hlt
mov
mov
xchg
xchg
jbe
ror
xchg
xor
ins
mov
jnp
lods
cmps
std
addr16
and
fnstcw
push
dec
sbb
repz
inc
enter
imul
or
sbb
pop
sti
jmp
imul
and
add
and
jno
jge
cwde
push
and
xchg
sbb
out
sub
fcomp
inc
push
je
popa
(bad)
dec
mov
jmp
push
shl
xchg
ja
dec
test
inc
dec
xchg
nop
mov
jle
push
icebp
mov
cmp
dec
xlat
test
inc
ror
push
(bad)
sub
pop
mov
cmps
xchg
mov
(bad)
imul
mov
sub
cmp
or
pop
push
mov
jb
xchg
cld
adc
xor
out
pop
mov
pop
in
jge
pushf
imul
mov
xor
aaa
scas
pop
popa
(bad)
rol
lods
fsub
cdq
xchg
data16
enter
rol
dec
popf
pop
dec
push
stos
ss
cmps
mov
les
or
push
add
push
pop
add
ss
lods
ja
ins
push
cwde
data16
pop
inc
test
inc
fldln2
xchg
aaa
test
push
bound
mov
stos
inc
retf
xchg
retf
rcl
cmps
inc
jp
xchg
sbb
in
and
mov
addr16
cmp
js
push
pop
cmp
ss
lea
ins
xchg
ror
(bad)
adc
fnstsw
inc
pop
ds
aaa
mov
int3
fs
sahf
jne
cmps
xor
xchg
test
ret
fnstsw
imul
dec
loop
fistp
retf
(bad)
mov
mov
(bad)
dec
test
mov
xchg
add
pop
jmp
pop
dec
cli
cmc
out
and
or
sbb
adc
xchg
cmp
mov
into
push
popf
rol
xchg
fisttp
jp
(bad)
sbb
add
mov
mov
ficom
pop
mov
inc
xchg
scas
mov
in
cwde
sbb
pusha
je
inc
cdq
scas
in
dec
cwde
inc
fiadd
mov
sti
dec
mov
movs
push
jnp
popf
xchg
arpl
jmp
loop
pop
xchg
push
aam
pop
cmp
int
pop
add
lahf
or
cmp
(bad)
sahf
mov
test
xchg
clc
arpl
inc
call
popa
jmp
dec
inc
xor
pop
data16
addr16
movs
xor
push
jge
push
sti
scas
sti
inc
dec
fwait
push
call
mov
mov
mov
sub
(bad)
stos
aam
jns
mov
xor
es
call
outs
daa
sahf
gs
pop
mov
inc
fsub
sbb
mov
dec
adc
adc
push
xchg
add
pop
push
pushf
pop
add
xchg
out
sbb
pusha
inc
inc
mov
and
mov
lock
inc
xchg
jnp
mov
mov
mov
fwait
jnp
push
ror
stos
jae
sbb
movs
sub
test
mov
test
push
fcom
jo
loopne
inc
pop
ds
inc
and
push
pop
call
inc
push
mov
push
in
mov
add
jl
aam
cmp
pop
daa
and
nop
add
in
(bad)
sahf
js
enter
retf
inc
mov
fst
ret
xor
rcr
xchg
sub
or
leave
(bad)
jns
adc
or
mov
jle
xor
ins
in
lds
push
fwait
jmp
adc
fadd
das
push
aaa
addr16
test
cli
outs
outs
mov
sub
xchg
xor
(bad)
xchg
adc
adc
fisttp
mov
pop
repz
clc
jp
pushf
test
sub
dec
inc
mov
test
stos
lahf
pop
xchg
imul
sbb
fsin
shl
and
ja
fsubr
outs
stos
jnp
pminsw
shl
rcr
push
stos
fsub
or
push
add
adc
inc
pop
test
jp
movs
xor
and
stos
cmp
je
xchg
call
inc
(bad)
mov
mov
xlat
pusha
mov
fxch
xor
test
and
xchg
icebp
xor
sti
dec
add
(bad)
repnz
inc
enter
dec
xchg
add
dec
mov
mov
lahf
xor
stos
pop
out
call
inc
jae
out
inc
ss
push
in
xor
add
dec
push
fstp
lods
cmp
xchg
and
and
repz
xchg
xlat
imul
and
mov
call
les
stc
xchg
sub
xchg
add
rol
clc
hlt
aad
inc
add
sbb
out
je
cmp
push
test
or
stos
xchg
leave
or
xlat
jg
xor
aad
pop
jnp
fld
ins
bound
and
push
mov
add
sub
cld
xor
inc
add
(bad)
inc
int3
xchg
addr16
fisub
xchg
shl
dec
mov
dec
mov
mov
or
ret
fisttp
pushf
fstp
ins
(bad)
dec
push
push
(bad)
cmc
stos
and
pusha
mov
dec
jl
cmp
jbe
xchg
lods
mov
sar
mov
cmps
loopne
outs
push
cmps
adc
inc
cmp
mov
xchg
add
dec
dec
cmp
or
nop
mov
jmp
jecxz
mul
daa
mov
jge
into
xchg
dec
cld
mov
and
cmc
out
and
out
dec
fimul
test
lods
adc
retf
cmp
sti
jl
cmp
jmp
xchg
addr16
test
data16
pop
or
fstp
ins
jmp
js
js
call
adc
outs
ss
pop
xchg
jbe
pop
dec
fmul
mov
add
xchg
mov
(bad)
cmps
adc
pop
daa
mov
imul
fld
loope
in
adc
es
jmp
mov
aaa
sar
or
fimul
inc
cmp
(bad)
xor
adc
pop
not
sbb
inc
rol
cmp
jl
movs
or
xchg
out
xchg
cwde
add
jb
(bad)
mov
rcr
xchg
mov
mov
sub
mov
mov
pop
push
sti
call
int3
retf
xchg
cmps
gs
pop
scas
inc
cmp
hlt
in
shl
or
shl
jle
pop
pop
push
mov
retf
call
jno
ret
inc
dec
jp
aad
push
push
jno
scas
or
mov
cmp
adc
and
pop
js
inc
rcr
popf
jno
mov
mov
cs
xchg
xor
adc
cmps
fdivr
push
mov
std
adc
mov
jmp
movs
xor
sub
call
add
pop
fidiv
sbb
outs
push
or
in
sbb
out
adc
cli
jno
dec
add
daa
popa
jmp
or
cmp
test
sub
inc
in
int
and
dec
data16
push
stc
mov
arpl
shr
dec
mov
xchg
fild
test
jbe
mov
int
mov
in
pop
mov
out
and
stc
mov
cmp
das
jp
mov
pop
scas
pushf
mov
xor
sar
outs
imul
retf
pop
push
jl
cmp
fs
add
adc
mov
sbb
cwde
push
mov
gs
sbb
jbe
arpl
mov
jge
retf
mov
or
sbb
test
ror
push
jne
mov
jmp
out
cli
cmp
stos
mov
sub
sub
mov
in
add
dec
fisubr
inc
cdq
dec
push
push
mov
(bad)
cdq
inc
cmp
pop
into
idiv
mov
jp
inc
ds
bound
pop
or
push
lea
dec
fsubr
arpl
jge
push
fistp
pop
jg
jmp
fcomp
stos
cwde
mov
mov
mov
mov
repz
hlt
addr16
cmp
pop
int
std
pop
loopne
jl
dec
fwait
push
jge
mov
sbb
in
(bad)
or
leave
inc
es
fs
xsave
fadd
xor
test
adc
scas
mov
lods
xchg
add
sbb
je
sub
fsub
jge
shl
and
lock
adc
pop
mov
mov
push
mov
fild
popa
in
mov
jb
add
fistp
and
push
mov
outs
push
pop
mov
add
add
inc
out
jae
sub
cdq
add
mov
jo
xchg
mov
leave
out
inc
xchg
fcom
inc
pop
dec
mov
jns
(bad)
xchg
jae
nop
push
adc
fisub
stc
mov
jle
test
call
dec
in
sub
dec
and
(bad)
in
dec
iret
cmp
pusha
xchg
andps
xor
xchg
cwde
xchg
iret
sbb
in
bound
sbb
cmp
jmp
stos
jl
scas
push
js
(bad)
lahf
adc
or
retf
retf
std
adc
test
mov
sbb
sti
mov
mov
ficom
mov
and
clc
scas
leave
fld
mov
icebp
and
enter
add
fs
xor
mov
pop
(bad)
jns
fild
cmps
cld
pop
push
pop
sbb
and
xchg
pop
mov
cwde
ins
inc
fnstsw
jb
mov
sub
and
aam
sbb
bnd
pop
fs
dec
mul
cmps
jg
mov
sub
mov
jns
test
jmp
repz
test
xlat
xor
cmp
retf
out
js
and
jnp
sub
lods
js
inc
stos
mov
(bad)
aad
cwde
mov
inc
cmp
add
xor
jmp
inc
dec
fldcw
mov
mov
in
call
push
pop
sub
mov
in
rcl
mov
in
hlt
lea
mov
(bad)
mov
les
popa
xchg
aam
hlt
jne
dec
push
push
int3
cld
icebp
mov
dec
mov
jb
jns
(bad)
retf
mov
repnz
pop
cmps
sbb
dec
push
addr16
pop
fwait
xor
dec
arpl
imul
neg
inc
ss
cmps
call
jno
mov
jecxz
loope
mov
cmps
push
lock
xchg
pop
mov
mov
hlt
sub
retf
sbb
clc
sub
dec
(bad)
jmp
dec
push
imul
inc
xchg
push
or
cwde
mov
inc
cdq
(bad)
cmp
push
jmp
or
mov
jns
mov
mov
inc
fwait
rol
pop
mov
jge
xlat
call
enter
push
and
and
retf
out
jl
mov
sbb
dec
fidivr
inc
pop
dec
(bad)
jg
cdq
pusha
or
and
sbb
std
xor
and
adc
mov
xlat
pop
push
lods
imul
or
xchg
mov
or
add
pop
stos
(bad)
jnp
jp
and
push
fisubr
mov
or
loope
sti
test
shl
mov
aam
div
dec
sbb
mov
jle
adc
neg
test
push
jg
mov
mov
leave
sbb
mov
fsubp
pop
cmps
jecxz
push
imul
js
add
xchg
jnp
xlat
adc
cmp
fist
test
jb
push
fdivr
inc
jmp
and
cmps
in
fcomp
out
xchg
(bad)
cmc
dec
pop
cwde
fnstsw
das
stos
cmp
sar
es
jnp
sbb
loopne
daa
add
sbb
pop
cdq
leave
and
inc
leave
cmp
jne
xchg
cmp
fisttp
push
scas
dec
inc
lods
nop
mov
(bad)
mov
leave
push
inc
jge
pop
aam
(bad)
jle
mov
ja
xchg
(bad)
mov
xchg
sbb
std
mov
jp
mov
aad
repz
jg
mov
dec
pop
sub
test
push
rol
inc
stos
and
pop
cwde
ja
pop
out
sahf
lea
rcr
mov
add
push
in
or
or
mov
xor
or
push
inc
fsubr
pop
loopne
add
test
cmp
loopne
adc
cmc
mov
retf
cwde
fadd
sbb
mov
sbb
cli
icebp
into
call
xor
pop
enter
shr
scas
add
js
xchg
js
push
outs
mov
xchg
pushf
push
cmp
dec
ror
dec
add
int
pop
sub
pop
mov
in
dec
inc
xchg
or
stos
adc
xchg
int
xchg
leave
into
ja
inc
arpl
dec
rol
dec
iret
mov
xchg
push
sti
jp
mov
outs
mov
std
adc
sar
mov
std
addr16
scas
mov
fisubr
(bad)
call
add
outs
movs
xor
cli
inc
add
icebp
test
stos
xor
cmp
shl
push
add
sbb
outs
mov
ja
ror
cwde
repnz
adc
push
push
mov
inc
out
cmc
mov
xchg
jno
jle
cmps
movs
out
fisttp
mov
mov
(bad)
jmp
pushf
dec
in
dec
rcr
push
sbb
out
fstp
and
dec
fcom
push
pop
lahf
sub
xchg
adc
sar
fild
fwait
rol
pop
jmp
cmp
dec
push
mov
popa
mov
mov
retf
repnz
stos
mov
push
and
pusha
mov
mov
in
jmp
mov
push
cs
mov
fldcw
xchg
fadd
xor
adc
or
jmp
dec
test
push
lods
push
sub
mov
lock
cli
inc
ret
popa
or
std
dec
or
push
stos
es
xchg
mov
pop
test
and
call
rcl
pop
pop
push
popf
jbe
mov
mov
adc
jmp
mov
js
lahf
mov
sbb
jecxz
hlt
fcomp
mov
inc
leave
sub
or
icebp
fs
addr16
jo
ins
xchg
mov
rol
ret
inc
js
out
add
and
lods
push
xchg
xchg
mov
jmp
idiv
addr16
mov
inc
xchg
mov
jecxz
push
out
nop
das
lea
fsubr
dec
cdq
sbb
mov
popf
cmp
in
(bad)
mov
out
sbb
(bad)
sub
inc
cwde
add
jns
aas
inc
jne
je
or
nop
cwde
scas
sub
inc
in
in
cmp
add
push
sbb
pop
lods
pop
mov
aad
jno
outs
push
lods
cs
popf
xchg
mov
shl
adc
inc
jg
pop
popf
mov
mov
jmp
add
sbb
jmp
pop
mov
test
mov
retf
call
fisttp
lods
jnp
push
jb
pop
mov
push
mov
pop
jmp
outs
push
push
inc
fadd
arpl
mov
mov
(bad)
push
shl
dec
mov
cmp
stos
xchg
and
pusha
inc
sub
movs
jecxz
mov
xchg
outs
rol
mov
loope
mov
cmps
add
xchg
xor
inc
sbb
shl
dec
mov
in
call
add
mov
dec
add
cdq
(bad)
adc
call
mov
inc
push
pop
sbb
aas
outs
popa
sbb
xchg
pop
iret
sub
pop
push
ss
xchg
stos
mov
cmp
in
out
lods
(bad)
pop
repnz
mov
inc
xchg
aam
push
(bad)
pop
retf
jnp
idiv
inc
mov
sub
xor
test
cli
or
(bad)
xlat
call
adc
dec
cli
push
push
or
add
sbb
adc
xor
cwde
es
push
fisttp
scas
jne
xchg
adc
cmps
popf
sbb
enter
into
jge
pop
jae
fldcw
mov
xchg
adc
xchg
pop
adc
sar
call
mov
in
rcr
pop
data16
stos
xor
push
test
sub
gs
inc
add
outs
adc
movs
arpl
scas
adc
rcr
int
and
fisub
add
retf
push
test
fstp
cwde
push
inc
xchg
sbb
mov
adc
std
rol
(bad)
arpl
fcomp
mov
mov
or
test
mov
rol
cmp
je
jl
dec
ss
(bad)
fild
jp
fsubr
cmp
mov
mov
pop
fstp
retf
sbb
mov
push
xor
sbb
or
inc
dec
mov
inc
and
test
in
aaa
xor
lock
add
inc
jp
xor
sbb
inc
xchg
xchg
pop
sub
call
mov
mov
jns
mov
ret
mov
cdq
dec
push
test
lds
jmp
cmp
out
mov
cmp
xor
add
mov
sub
pop
jecxz
and
pop
mov
aas
or
pop
cmc
and
jo
jb
test
xchg
push
div
xor
aam
dec
enter
imul
mov
loope
call
retf
int
mov
dec
jb
(bad)
mov
inc
ret
leave
fbld
mov
jne
push
fisubr
or
std
into
(bad)
je
dec
jae
pop
test
push
push
push
dec
pop
std
add
rcl
jp
rol
sub
mov
cmp
lahf
sub
push
push
mov
jp
dec
push
je
pop
rcl
retf
or
fld
test
pop
add
rol
rol
gs
jg
inc
add
(bad)
lds
and
sbb
and
imul
int
cmp
cbw
fsub
aam
jno
and
or
add
scas
jno
mov
lods
or
add
(bad)
shl
sar
mov
push
movs
int3
mov
sbb
in
add
retf
push
movs
inc
jns
sbb
lahf
mov
ss
dec
sbb
and
inc
bound
les
cs
cmp
ret
mov
jbe
jns
aad
ss
jne
fwait
pop
mov
mov
or
xchg
(bad)
(bad)
pushf
inc
push
inc
sub
fistp
icebp
lahf
push
(bad)
inc
sub
lds
cmps
mov
push
in
mov
stos
mov
jge
stos
mov
sub
cs
aam
pop
in
push
inc
push
jnp
xor
or
mov
and
inc
popf
retf
add
xchg
pusha
je
xor
cmp
ds
int3
add
inc
ja
push
xchg
or
sahf
das
adc
xor
lea
jle
stos
sub
(bad)
aad
out
lahf
inc
xchg
mov
lea
in
fsub
test
xchg
and
stc
(bad)
jnp
add
pop
dec
lock
pop
fimul
dec
xchg
pop
sbb
test
push
imul
inc
cwde
mul
mov
pop
les
ins
pop
xor
fstp
fld
lods
or
mov
push
enter
jmp
pop
aad
enter
mov
pop
(bad)
(bad)
test
aam
lods
xchg
fld
mov
(bad)
aad
int3
les
mov
cmp
jb
cmp
push
dec
idiv
cmp
sub
cmps
inc
pop
pop
mov
iret
xchg
adc
fisttp
fnstenv
out
push
push
add
out
ss
cmp
stos
jb
retf
xchg
(bad)
div
and
jl
jmp
and
and
sub
popf
fsub
arpl
(bad)
out
cmp
add
stos
sbb
sbb
lds
mov
lds
xor
jp
push
inc
js
mov
xor
pop
ret
inc
push
sti
pop
(bad)
aam
xchg
in
add
xor
popa
xor
pop
iret
xor
arpl
mov
pop
xchg
mov
xor
sub
adc
ins
push
nop
imul
test
repz
adc
shl
sti
jge
loope
in
mov
mov
into
clc
mov
cld
jg
fwait
mov
pop
div
or
shl
ret
add
aas
scas
sub
or
mov
into
loop
mov
pusha
jb
aas
(bad)
inc
fs
xor
pop
push
cmp
xor
jmp
pushf
or
(bad)
mov
stc
jnp
and
mov
mov
in
cli
lea
out
inc
mov
mov
jp
call
jmp
inc
inc
mov
fdivr
aaa
sub
cmp
outs
popf
push
adc
mov
sahf
call
call
addr16
xor
aas
adc
mov
lea
out
inc
ret
(bad)
(bad)
xchg
xor
xor
test
pop
(bad)
sti
jno
pusha
jb
fild
test
mov
adc
std
icebp
and
mov
push
pushf
xchg
mov
xor
hlt
dec
outs
stos
cmps
inc
call
in
int
add
pop
mov
pop
inc
std
xor
mov
pusha
sar
sub
ret
fs
cmp
pop
push
ss
rcl
lahf
shr
fsubr
push
(bad)
je
pop
movs
push
faddp
call
xor
lds
fwait
movs
jmp
lea
rol
ret
ret
icebp
lods
popa
retf
cmp
cmp
int
jae
sbb
daa
push
cwde
xor
test
or
out
sahf
jmp
push
dec
sbb
sbb
dec
imul
and
imul
sub
adc
pop
(bad)
fcom
imul
jno
ja
cdq
sbb
cdq
ja
xchg
inc
aaa
stc
cmps
xchg
sub
jp
test
inc
loope
test
add
loopne
scas
sar
in
jno
xor
inc
iret
retf
clc
dec
ror
cmp
cwde
sbb
cmps
js
imul
fidivr
sahf
xchg
dec
jbe
and
ds
or
pusha
xchg
inc
inc
mov
popa
xchg
inc
pushf
stos
test
ror
cmp
pop
mov
mov
cmp
(bad)
xchg
add
jne
neg
add
mov
cs
(bad)
xchg
ret
ins
gs
sbb
scas
cmp
mov
mov
inc
sub
mov
adc
shr
and
add
jae
lods
pop
scas
pop
fist
scas
jl
mov
add
dec
ds
int3
pushf
add
inc
inc
nop
das
ret
popf
retf
jp
lock
cdq
add
(bad)
lock
cdq
in
dec
mov
xchg
adc
xchg
lahf
jo
gs
inc
loop
popa
or
mov
mov
xchg
inc
sub
and
es
js
push
mov
out
pop
push
xor
test
in
fdivr
xlat
jl
jb
push
mov
mov
push
fdivr
xchg
lods
test
sbb
jg
xchg
shl
loope
pop
pusha
jmp
fs
push
fild
dec
retf
ja
cmp
pop
shr
inc
pop
mov
and
mov
sub
fild
jecxz
and
popa
sub
and
jb
sbb
fstp
mov
arpl
cmp
clc
test
xchg
out
ja
inc
add
dec
fdiv
lahf
imul
xlat
sub
scas
out
cmps
sbb
loope
xchg
adc
idiv
lods
pushf
xor
inc
out
sbb
jp
add
pop
mov
jg
xor
jns
mov
lods
dec
into
stc
sbb
js
mov
sbb
inc
push
sbb
dec
ja
movs
mov
pop
push
inc
fdiv
mov
xchg
aad
jmp
dec
ins
fnsave
shl
fwait
mov
push
jmp
dec
xchg
adc
(bad)
or
jg
fisubr
aad
std
xor
adc
jo
jge
or
sub
out
(bad)
ror
inc
sar
fst
xchg
(bad)
dec
sbb
xor
push
push
pushf
sub
adc
pop
inc
lods
dec
adc
(bad)
test
or
out
add
inc
popa
rcl
retf
jnp
mov
adc
(bad)
lods
sbb
jns
mov
clc
or
mov
mov
stos
xor
jns
dec
xor
pop
into
inc
jb
pop
cmps
or
cdq
sub
mov
out
sbb
cmp
fild
push
pop
in
adc
js
aas
mov
mov
push
cmps
test
hlt
int
and
call
ja
sub
mov
jb
leave
out
cmc
fwait
push
jne
ins
stos
or
and
sbb
pop
mov
in
adc
push
(bad)
and
jge
mov
push
or
stos
mov
sti
addr16
mul
mov
dec
dec
in
push
adc
push
mov
cwde
jp
xchg
dec
jp
mov
pop
loope
xor
jbe
pop
inc
dec
mov
test
xchg
dec
ret
mov
mov
mov
pushf
pushf
sbb
fstp
mov
lahf
xchg
or
in
out
pop
icebp
push
pop
cmp
das
pop
push
sahf
sbb
(bad)
xchg
nop
add
mul
mov
and
mov
mov
mov
bound
push
imul
ret
jnp
data16
cmps
lock
mov
and
movs
lock
fld
jp
popf
mov
and
sar
dec
arpl
neg
and
jmp
add
inc
(bad)
adc
inc
jo
rcr
jecxz
add
pop
and
or
jl
sbb
data16
push
inc
cmps
cmp
mov
cmp
mov
mov
addr16
aam
push
jmp
fild
stos
les
xchg
aad
jecxz
aas
pop
add
aas
adc
cmc
repnz
cwde
or
das
clc
xor
or
cwde
xchg
retf
push
daa
call
mov
and
and
and
lods
jnp
cmps
pop
dec
sahf
fdivr
jmp
bound
movs
inc
cmc
(bad)
mov
mov
inc
xchg
inc
sub
out
add
pop
nop
mov
pop
inc
mov
xchg
cmp
aam
rcr
inc
pop
mov
sbb
pop
in
(bad)
jmp
sbb
xor
cmps
je
push
popf
mov
dec
loop
xor
aas
loopne
sub
add
les
or
aam
inc
mov
stos
pop
xor
ins
in
fld
loop
pop
jge
sub
mov
jns
call
push
xor
fldcw
lahf
(bad)
dec
cdq
pop
xchg
mov
std
call
jno
dec
out
sbb
dec
lock
jg
lahf
push
outs
push
mov
xchg
nop
xchg
dec
pop
aam
pushf
mov
je
mov
sbb
ins
ins
test
add
shr
div
in
int3
rcr
sbb
fldenv
cdq
iret
hlt
jae
out
pop
cmc
xchg
add
(bad)
(bad)
sub
dec
mov
lahf
in
dec
mov
xchg
xor
jecxz
push
jge
mov
dec
std
adc
out
sub
or
xor
cdq
xor
dec
out
pushf
mov
or
jp
(bad)
das
cdq
mov
pop
xor
sub
xor
sbb
(bad)
adc
not
scas
loopne
enter
sbb
nop
push
out
mov
je
fsqrt
or
stos
mov
test
xchg
icebp
arpl
lock
mov
ret
cmp
out
ficomp
aad
add
jae
imul
imul
fild
cld
add
(bad)
add
push
rol
sbb
lods
jl
xchg
pop
out
test
jle
shr
xor
sbb
inc
mov
scas
mov
mov
push
(bad)
in
cmp
jmp
xor
lahf
mov
mov
lahf
mov
push
ds
scas
rol
outs
popa
xchg
lods
fs
ins
out
inc
inc
jmp
loop
fwait
inc
pusha
and
jne
mov
and
cwde
les
fld
jne
or
sbb
test
bound
or
lods
xchg
adc
push
dec
(bad)
mov
mov
pop
and
xchg
fisttp
adc
fild
xchg
mov
cli
loop
in
lock
pop
(bad)
stos
inc
int3
push
aad
cmp
cmc
(bad)
fist
and
push
shr
dec
jo
jo
dec
xchg
call
mov
in
ins
jb
ss
subps
pop
scas
adc
ins
(bad)
pop
je
push
and
adc
xchg
jecxz
xchg
bnd
dec
pop
outs
xchg
ret
sar
not
or
shl
mov
push
jecxz
xchg
sbb
mov
test
sar
imul
cmp
mov
retf
cs
mov
dec
cmp
xchg
cwde
les
call
jae
push
inc
(bad)
push
aaa
jge
ss
sbb
jp
mov
mov
imul
mov
cwde
leave
pusha
cwde
dec
jb
test
dec
sub
inc
push
mov
cmps
pop
jmp
cmps
add
mov
xchg
es
in
ret
rol
test
sub
fld
sbb
mov
push
mov
dec
pop
rcr
add
sub
add
jge
mov
xor
lods
xor
xor
cmps
cmp
mul
dec
pop
pop
sub
mov
push
iret
xchg
jle
std
aad
je
inc
scas
mov
push
jmp
mov
mov
inc
bnd
xor
das
add
and
mov
jb
dec
out
cdq
lods
xchg
sub
les
nop
and
mov
jl
les
xor
xor
xchg
or
mov
and
xor
(bad)
cmps
add
sub
sahf
lods
mov
lods
mov
pop
inc
and
dec
test
mov
dec
std
sti
repnz
mov
ins
mov
cli
leave
lods
scas
popf
pop
inc
mov
dec
ficomp
aaa
ss
icebp
pop
ror
sbb
mov
imul
fwait
xchg
mov
dec
icebp
lea
mov
push
mov
imul
cdq
sbb
fdivr
cmp
sar
iret
imul
ret
jle
and
push
mov
mov
adc
mov
xchg
in
iret
sub
mov
mov
stos
sahf
je
jle
push
and
fpatan
test
add
outs
jns
test
int3
xor
sbb
cmc
pop
ja
add
imul
push
jge
xchg
add
cmps
test
loope
xchg
inc
int
pop
mov
ins
mov
jp
mov
push
adc
mov
mov
add
outs
inc
test
inc
and
cmp
mov
jne
or
xor
pusha
cmc
retf
call
(bad)
and
pop
loope
adc
ds
jbe
pop
adc
lods
mov
pop
iret
inc
les
dec
cdq
dec
fsub
mov
idiv
jmp
loope
movs
popa
jno
mov
(bad)
repnz
(bad)
xor
cwde
shl
sub
jge
or
pop
in
pop
push
mov
xchg
ret
cmp
fmul
jmp
mov
jge
dec
and
inc
adc
jne
in
or
add
pusha
jnp
ja
rol
push
mov
cmps
outs
push
push
js
into
cmps
add
pusha
push
test
sar
out
call
popf
jno
mov
cli
test
and
pop
gs
ffree
mov
loopne
push
scas
(bad)
dec
jmp
repnz
or
xor
cdq
jo
bound
inc
bnd
fnstcw
mov
jnp
jne
ret
ja
pop
out
or
inc
mov
dec
div
cmp
cmps
mov
fnstsw
pop
fnsave
fistp
out
xlat
jmp
iret
jle
mov
imul
xchg
xchg
(bad)
dec
outs
mov
mov
cs
in
stos
push
sti
and
xor
arpl
and
cmps
mov
out
loop
mov
jae
dec
daa
rcr
pop
xor
xor
pop
push
mov
ins
call
add
add
pop
inc
movs
das
mul
movs
jbe
mov
xor
repz
xchg
sbb
mov
je
mov
adc
(bad)
in
mov
jl
in
xchg
dec
rcr
sub
cld
cmp
mov
dec
add
nop
movs
mov
sbb
dec
into
fdivr
jmp
fs
cmp
jle
mov
jno
retf
sbb
jno
repz
sbb
add
inc
test
jecxz
xchg
jmp
push
hlt
(bad)
mov
xchg
(bad)
cmp
cmc
fs
ror
gs
jae
xor
clc
stc
jns
sbb
outs
adc
sete
mov
retf
leave
push
push
jnp
mov
push
stos
push
mov
xlat
pop
adc
add
cmp
std
mov
les
push
mov
pop
adc
add
(bad)
(bad)
xchg
fcmovnbe
cmp
scas
xor
loopne
clc
ret
imul
mov
sub
dec
fisttp
dec
call
cmp
or
jno
pop
cld
cs
pop
mov
test
leave
enter
push
dec
je
aad
sbb
popa
lea
mov
xchg
inc
and
adc
test
pop
popf
fst
fcomp
xor
cli
jge
mov
dec
(bad)
cdq
push
adc
shr
xchg
rcl
data16
ret
mov
sub
scas
sub
or
ror
jle
adc
dec
xchg
pop
(bad)
ja
jg
ret
sbb
xor
rcr
jp
mov
pop
xchg
inc
mov
retf
mov
popa
nop
xchg
call
lock
in
js
mov
and
fistp
adc
fmul
cdq
fsubp
sbb
gs
sub
sub
test
and
sti
dec
clc
inc
bound
fnstenv
push
lea
ss
xchg
movs
mov
out
movs
lea
jl
jmp
ds
imul
pop
xchg
add
sub
lods
pop
sbb
cwde
int
xor
push
and
inc
jecxz
call
stos
movs
sbb
inc
icebp
xchg
inc
mov
out
jecxz
pop
jp
movs
inc
fsubr
sub
fimul
pop
add
popf
sub
pop
pminsw
ins
ror
jg
mov
add
sub
add
imul
js
lea
rcr
les
popa
cmc
arpl
lods
push
test
mov
nop
xchg
push
sub
inc
mov
mov
nop
outs
and
mov
jmp
inc
loopne
cmps
pop
cmp
test
popf
push
jle
mov
jbe
xor
xchg
lds
(bad)
fsub
mov
mov
syscall
sub
cwde
and
inc
add
sbb
jmp
adc
call
inc
cmp
mov
cmps
scas
cwde
dec
xchg
cmps
pop
push
lea
cdq
mov
push
xchg
mov
push
pop
cmc
xchg
(bad)
imul
jnp
dec
aad
ss
retf
pusha
call
pop
je
pop
or
(bad)
mov
jecxz
sbb
int
sbb
xor
add
mov
add
cmp
in
call
les
pop
mov
js
les
add
push
mov
cmp
nop
and
test
pop
addr16
cmps
aaa
out
push
stc
cmp
cmc
arpl
cmp
add
outs
push
js
jne
popa
mov
add
pop
xchg
(bad)
pop
stos
jmp
inc
pop
inc
mov
ss
add
lods
fs
sbb
lahf
mov
inc
int
movs
xor
inc
ds
pop
mov
xchg
dec
pushf
mov
in
cld
scas
cs
mov
movs
sbb
int3
shr
jmp
fcom
add
fimul
add
cmp
cwde
cmp
pop
cwde
mov
scas
dec
pop
icebp
sbb
int3
add
inc
mov
xor
cmp
mov
lods
xor
pop
add
pop
shr
jecxz
ins
dec
ficomp
nop
loop
sub
or
pop
lods
mov
push
pop
movs
mov
shl
mov
push
lock
hlt
inc
cmp
cmc
jmp
pop
pop
dec
mov
je
imul
jmp
xchg
jle
sbb
inc
add
add
and
xor
xor
call
fsub
ja
inc
dec
addr16
push
(bad)
pushf
sahf
xor
out
daa
(bad)
mov
jecxz
mov
mov
pop
mov
mov
cmps
mov
addr16
xchg
ja
ss
sbb
adc
loop
push
push
pop
mov
inc
daa
popf
imul
lds
pop
int3
aam
adc
hlt
and
inc
adc
mov
mov
in
inc
push
fst
lods
sbb
scas
(bad)
sbb
call
add
pop
pop
and
jmp
xchg
lahf
push
in
pusha
adc
(bad)
loope
jmp
mov
(bad)
js
jmp
mov
push
cmp
xchg
out
push
jmp
push
inc
mov
mov
rcr
mov
retf
inc
push
add
inc
pcmpeqd
mov
lods
xor
push
inc
mov
adc
adc
xchg
xchg
lods
add
sub
stos
xchg
dec
pop
rcr
outs
mov
mov
xchg
sbb
imul
xchg
mov
mov
sar
xchg
mov
sub
(bad)
adc
es
jbe
xor
push
and
dec
(bad)
jp
fcomp
sbb
inc
xor
sbb
inc
push
mov
adc
mov
(bad)
cmp
add
jae
fdiv
push
in
xchg
imul
push
xor
jns
mov
(bad)
xor
popf
mov
and
ret
fistp
jnp
fiadd
jno
sbb
scas
inc
rol
inc
pop
push
jle
push
push
push
pop
repnz
ret
rol
outs
ja
idiv
sub
dec
lods
inc
pop
lea
push
test
xchg
adc
dec
leave
fiadd
dec
jae
rcl
cmps
leave
dec
xchg
icebp
mov
or
sbb
stos
(bad)
aam
scas
push
add
repz
fistp
mov
dec
fisub
push
cmp
ret
push
fidiv
push
sbb
push
pop
gs
mov
fadd
jecxz
cmps
jmp
adc
loopne
sbb
xor
dec
pusha
(bad)
pop
and
xchg
adc
push
inc
fmul
xchg
retf
push
add
xchg
mov
jmp
xchg
cmc
cmp
movs
xchg
(bad)
xor
ja
mov
and
mov
mov
scas
aad
jecxz
lock
sub
(bad)
cmp
mov
inc
pop
dec
mov
sar
jns
std
pop
push
push
inc
fistp
adc
arpl
jge
test
inc
xchg
add
xchg
outs
adc
and
out
out
mov
pop
inc
shr
and
pop
fsub
inc
dec
lock
and
test
adc
xchg
jl
jmp
push
mov
stos
sub
cmc
and
and
imul
add
jmp
dec
cwde
fbld
cdq
fild
push
xor
cmp
sub
fisttp
aaa
cmps
sbb
test
hlt
mov
jle
jno
ins
lds
mov
das
idiv
mov
nop
push
xchg
mov
add
out
cmc
cdq
mov
pusha
je
aad
shr
inc
cmp
es
pop
xor
data16
or
cmp
dec
into
(bad)
cmp
test
stos
ss
and
add
mov
push
lods
mov
outs
ret
hlt
mov
or
lea
xchg
jecxz
xchg
pop
retf
xor
retf
xchg
je
gs
lods
lahf
aad
mov
pop
in
repz
mov
pop
pop
scas
sahf
pop
shl
pop
pop
repnz
pop
fistp
jl
inc
xchg
es
inc
call
xchg
es
fcom
imul
ins
jne
and
inc
adc
mov
bound
mov
pop
js
lahf
jo
popf
out
lahf
cld
mov
xchg
cwde
or
(bad)
enter
jns
movs
mov
sbb
mov
and
fnsave
mov
push
sbb
nop
enter
add
cmp
sub
je
cmp
push
lods
cmps
mov
xor
iret
dec
fdivp
xor
pop
mov
adc
xlat
jle
mov
sub
sub
cdq
test
inc
adc
push
pushf
fisttp
sbb
(bad)
lea
(bad)
out
push
xchg
shl
adc
div
inc
push
xchg
mov
cld
test
loop
ins
icebp
dec
test
pop
push
ret
in
cmp
pop
push
cmp
pop
sti
xor
scas
mov
sbb
jge
xchg
jbe
pop
dec
loopne
adc
pusha
lods
add
mov
data16
stos
bound
sub
std
call
leave
retf
inc
inc
jno
sub
mov
or
movs
xchg
and
sub
lods
sbb
mov
das
xor
loopne
neg
inc
dec
lods
xor
(bad)
sub
cs
(bad)
push
pushf
sbb
ins
popa
dec
xchg
pop
inc
xchg
test
cmp
sti
pop
sbb
pop
stc
and
push
xor
in
or
outs
mov
xlat
aas
dec
mov
xchg
or
jmp
arpl
pop
bound
js
rol
jmp
jp
jl
stos
mov
sti
mov
xlat
mov
retf
xchg
mov
push
inc
push
int
mov
jp
cmps
vmwrite
dec
pop
imul
jmp
xchg
aam
call
or
pop
sub
mov
pop
outs
mov
pop
in
in
es
xor
jl
adc
jae
cld
test
push
cmc
mov
call
dec
mov
mov
mov
stc
arpl
xor
sub
push
and
hlt
mov
dec
popf
adc
inc
xchg
or
lea
or
and
and
ss
ja
push
add
inc
ja
outs
xor
mov
sub
addr16
les
ret
pop
pop
dec
mov
fadd
and
xchg
pop
into
sahf
imul
hlt
pop
cmps
cld
test
jno
mov
idiv
fcmovb
pop
jns
sub
into
or
push
add
shl
pop
pop
mov
xchg
sbb
not
ret
fimul
sbb
xor
sbb
call
into
mov
jmp
cmp
mov
loope
jmp
sbb
dec
neg
push
in
(bad)
mov
adc
idiv
test
cmc
es
(bad)
mov
and
add
add
xor
call
mov
sub
push
retf
sub
shl
or
and
outs
adc
sbb
add
scas
stos
pop
mov
push
mov
jl
sub
jmp
loop
daa
leave
aam
adc
sbb
or
xchg
mov
xor
neg
xchg
fdiv
lds
ficomp
sbb
mov
pop
jnp
cmp
cdq
xchg
les
fmul
or
mov
pop
xor
aas
adc
and
dec
push
scas
cmp
mov
fwait
idiv
ror
shl
retf
ins
loope
sti
sbb
in
ret
rcr
mov
mov
jnp
mov
leave
cmps
fld
inc
int
aam
cmp
in
jg
and
js
mov
inc
es
xchg
dec
pop
in
int3
ret
or
inc
in
sbb
add
ins
push
xchg
jnp
mov
mov
xor
stos
loop
fwait
cld
jl
jl
inc
scas
outs
jmp
sbb
fchs
xchg
or
pop
mov
mov
mov
cmp
adc
mov
xor
loop
fld
push
sbb
push
inc
jae
dec
ss
jmp
mov
xor
and
or
push
adc
or
jg
mov
mov
sbb
push
leave
ror
test
dec
lahf
dec
popf
mov
dec
call
adc
lds
lahf
(bad)
dec
rcr
bound
leave
jmp
sbb
fldcw
pop
sub
shr
and
push
sbb
cmp
xchg
scas
nop
das
add
push
std
mov
movs
icebp
jle
push
sbb
add
or
adc
xor
inc
inc
(bad)
dec
push
lahf
push
ja
movs
(bad)
sub
push
dec
cli
test
es
retf
jle
dec
inc
pop
lods
cs
push
pushf
mov
push
ret
push
int3
push
movs
fwait
lds
cmps
imul
dec
cld
(bad)
mov
push
jmp
cmc
or
sbb
xor
dec
test
jbe
outs
cmp
or
ror
pop
pop
dec
cmc
cmp
xor
mov
arpl
push
pop
mov
pop
lahf
and
iret
mov
lea
jns
jno
scas
fistp
ret
cmps
sbb
mov
mov
push
mov
pusha
add
enter
cld
jp
nop
cmps
push
xor
es
cmp
(bad)
call
push
push
push
ins
stos
adc
cdq
dec
adc
leave
and
mov
repz
pop
add
mov
xor
push
or
or
push
rcl
in
idiv
jecxz
jl
cdq
inc
cmp
(bad)
lock
icebp
dec
mov
push
movs
popf
std
outs
pop
mov
test
clc
ds
ret
jb
dec
lods
cmp
retf
ja
push
jp
jns
cmp
pop
pxor
(bad)
inc
vcomisd
pop
mov
xor
inc
fcomp
movs
adc
or
push
cmp
scas
sbb
add
in
lock
sahf
iret
xchg
ficomp
mov
mov
int
stos
dec
inc
test
mov
scas
stos
jmp
adc
dec
rol
cmp
retf
fnstsw
push
pop
cmp
cmp
js
dec
aas
or
lock
cld
jno
aad
adc
add
pop
push
cmp
jo
sbb
jnp
popf
dec
pop
call
sahf
aad
sbb
inc
jle
push
(bad)
mov
cmps
jae
mov
xor
clc
cld
push
test
push
call
xor
lock
scas
loopne
inc
fwait
cwde
inc
aad
(bad)
sbb
movnti
imul
xchg
jl
not
mov
xor
cmp
jns
popa
mov
popf
add
jns
or
mov
mov
fxch
inc
inc
loopne
outs
sub
ins
aad
xchg
cld
xchg
stos
inc
push
(bad)
mov
into
pop
lods
lods
mov
add
sub
jmp
es
xchg
mov
sbb
cmp
lds
push
xor
pop
pop
mov
lds
mov
push
push
dec
test
jno
lea
mov
jmp
ins
xchg
push
and
lea
daa
imul
int3
bound
push
in
test
mov
dec
fstp
xchg
or
inc
fwait
xchg
arpl
cli
loope
mov
fisttp
pop
stc
cmp
je
sbb
aas
dec
jge
dec
xor
lods
push
add
inc
in
add
push
xor
pop
cmp
sub
call
xchg
mov
sti
jmp
jg
bound
mov
jg
out
test
popf
jl
(bad)
imul
mov
sub
mov
pop
loope
test
xor
mov
mov
mov
sbb
call
add
jp
xor
sahf
push
push
dec
mov
cdq
mov
jecxz
cmps
hlt
pop
outs
push
add
cmp
push
imul
sbb
out
test
push
stos
fwait
adc
dec
jne
shl
out
cmps
out
jb
xchg
push
cs
out
sbb
adc
dec
fcomp
xchg
stos
gs
out
stc
mov
(bad)
arpl
cmc
fbstp
xchg
jae
push
push
es
mov
sbb
je
movs
xor
xchg
sbb
pop
call
pop
and
adc
popf
add
ja
addr16
cdq
js
or
mov
jne
xor
(bad)
sti
lahf
and
sbb
lahf
jno
into
mov
out
arpl
mov
push
(bad)
movs
repnz
xchg
fidivr
mov
mov
cli
mov
mov
sub
pop
mov
push
or
stc
adc
adc
mov
ret
scas
mov
pop
in
xchg
out
jo
out
je
push
dec
jmp
and
das
leave
and
push
arpl
cdq
into
mov
inc
xor
retf
mov
jnp
scas
pop
xlat
fdivr
cmps
icebp
mov
pushf
pushf
dec
adc
std
mov
dec
in
clc
(bad)
loop
mov
and
in
out
jmp
outs
jmp
inc
jecxz
retf
inc
mov
inc
cmp
ins
adc
ud1
std
(bad)
in
cmp
jmp
mov
cmp
sbb
dec
movs
dec
sbb
lods
das
cmp
dec
rcl
sbb
retf
outs
inc
xchg
(bad)
dec
adc
xchg
jmp
outs
xrelease
xchg
out
in
idiv
pop
nop
xchg
xor
push
aam
or
xlat
xchg
mov
ss
fnstsw
jns
push
pop
pop
mov
retf
pop
cmps
inc
fst
or
adc
inc
pop
dec
adc
or
cmp
outs
push
call
mov
aam
mov
test
jno
add
jae
js
mov
fs
mov
lea
loopne
cmps
mov
addr16
mov
mov
mov
popf
fild
jno
adc
dec
nop
sti
(bad)
jp
pop
js
jnp
or
sub
xchg
sub
mov
mov
inc
jecxz
ins
bound
cmp
sbb
dec
inc
mov
inc
mov
adc
scas
mov
rol
inc
movs
push
and
je
test
movs
cmp
sbb
mov
push
push
aaa
jmp
lahf
mov
dec
sub
pop
in
cmp
popa
mov
dec
push
psllw
fld
aam
mov
inc
dec
js
in
or
inc
shl
ins
jae
je
lods
xor
mov
fwait
scas
cmps
es
loopne
fs
push
ficomp
mov
aaa
shl
mov
retf
movs
fnsave
nop
test
mov
(bad)
inc
pop
mov
dec
xchg
dec
test
sub
(bad)
jmp
xchg
inc
jbe
ss
jbe
(bad)
retf
mov
(bad)
sar
clc
push
jge
adc
adc
add
lahf
xor
or
mov
out
xchg
and
je
lds
fcomp
aas
cmps
mov
outs
into
add
cmc
clc
lahf
push
sti
js
mov
jle
xchg
call
stos
(bad)
jge
sub
push
sbb
(bad)
fstp
inc
add
push
scas
xor
pop
test
je
mov
int
sbb
jge
retf
mov
fs
les
sub
adc
inc
sbb
cvtpi2ps
mov
out
sbb
jl
xchg
jo
ret
xchg
(bad)
mov
loopne
sub
fild
loope
int3
dec
(bad)
js
loopne
test
xor
es
mov
jo
sub
repz
js
sbb
inc
and
mov
mov
and
leave
fadd
or
call
xor
pop
scas
sub
sbb
push
add
stc
cmp
and
sar
add
inc
inc
dec
fwait
sub
popf
add
in
xchg
jmp
pop
out
stos
scas
xor
inc
mov
(bad)
rcl
mov
mov
icebp
int
dec
gs
clc
xor
retf
jb
aas
jo
pop
cdq
sub
cld
jb
pop
jmp
sbb
aad
mov
add
dec
punpcklwd
or
sbb
mov
push
test
xlat
sar
test
test
cwde
enter
xchg
jae
add
sbb
popf
inc
pop
xor
pop
jp
mov
dec
inc
xor
jecxz
pop
sbb
pusha
mov
fnstenv
xchg
int3
add
inc
out
cmp
xor
pushf
pop
xchg
adc
pop
adc
outs
xchg
xchg
(bad)
xor
xor
xor
jo
call
in
inc
repz
inc
adc
xlat
adc
or
cmps
mov
adc
dec
dec
xchg
xchg
ror
es
mov
fild
inc
push
jg
mov
outs
sbb
mov
sub
addr16
inc
dec
or
clc
adc
popa
outs
sbb
inc
adc
cmp
not
das
and
cs
pop
daa
scas
sub
mov
jg
lahf
jg
(bad)
and
shl
popf
inc
sbb
loop
cdq
iret
cdq
jns
cdq
cwde
inc
out
jmp
add
(bad)
into
pop
enter
dec
xchg
ins
pop
push
mov
mov
movs
mov
(bad)
repz
adc
aas
or
xor
addr16
pushf
push
sbb
test
xor
outs
mov
bswap
iret
pop
sub
fiadd
(bad)
popf
leave
mov
out
mov
or
loope
add
dec
mov
movs
mov
popf
inc
dec
movs
les
test
sahf
mov
xor
lods
sub
inc
add
lods
adc
dec
mov
stos
mov
fcmovnbe
push
test
imul
inc
aaa
jb
sbb
je
pop
inc
and
mov
test
fwait
out
aas
xchg
shl
dec
pop
cwde
outs
jecxz
or
mov
xchg
movs
pop
sub
push
push
xlat
adc
adc
jle
pushf
xchg
or
in
addr16
movs
imul
dec
idiv
sti
dec
fwait
and
adc
pusha
stc
xor
mov
pop
shl
jmp
mov
je
addr16
aam
aas
push
pop
and
dec
dec
fmul
mov
popa
test
xor
or
repnz
call
js
push
retf
jp
call
add
mov
ficomp
add
(bad)
test
(bad)
outs
add
fisubr
aaa
sbb
lds
or
gs
dec
ss
lahf
cdq
movs
lahf
dec
cmp
jl
fldcw
mov
add
dec
jmp
adc
add
adc
sbb
lahf
sub
pop
cmp
aad
inc
mov
jg
sbb
fisubr
out
ror
mov
arpl
in
and
out
sbb
jecxz
mov
mov
add
fisubr
loop
aaa
call
es
cli
mov
ds
xor
mov
pusha
fmul
inc
arpl
inc
sub
in
pop
mov
out
js
fimul
mov
call
loope
lea
daa
and
mov
jae
mov
out
sbb
sbb
call
call
repnz
fisttp
mov
int3
push
sbb
popa
fcom
bound
dec
mov
inc
cmp
fwait
mov
iret
cmp
sub
push
or
add
stos
sub
sub
aaa
pop
cdq
lods
(bad)
and
jp
test
add
ins
js
jae
xchg
pop
xor
cmp
cld
test
lahf
xor
pop
lock
popf
xchg
test
cs
rcl
pop
shl
add
fnstsw
adc
add
mov
jbe
jb
jecxz
sub
sub
mov
test
xchg
dec
jns
(bad)
lods
cmp
and
cld
(bad)
call
mov
inc
jns
jo
pushf
shl
test
mov
cmp
movs
xor
mov
jp
mov
add
lds
xchg
fld
sub
daa
pop
push
fcom
jl
dec
ror
or
neg
loop
leave
lock
pop
push
(bad)
add
sub
or
dec
outs
fld
mov
jno
scas
mov
pushf
cli
popf
push
ror
xchg
push
sahf
jmp
ja
test
hlt
(bad)
lock
(bad)
cmp
lea
inc
call
push
ret
and
shl
xlat
jp
and
ss
xchg
es
jp
data16
mov
push
fcomp
sub
xchg
pop
push
inc
inc
in
sub
push
add
leave
inc
push
cwde
add
mov
stos
sub
rcl
retf
cmp
sub
xchg
fld
les
pop
in
xlat
movs
ins
ret
pop
mov
test
sub
iret
idiv
pop
(bad)
push
rol
pop
xor
retf
sti
adc
add
outs
xor
dec
mov
movs
mov
push
call
mov
popa
dec
imul
jl
fwait
pop
xchg
xor
pop
adc
jge
mov
or
fsub
stc
inc
pop
arpl
jl
mov
push
jecxz
push
fsubr
cmp
popa
push
xchg
ret
inc
iret
retf
repz
js
mov
dec
icebp
cmp
clc
(bad)
in
jnp
adc
popa
cmp
pop
dec
xchg
test
mov
cmp
inc
push
cmp
sahf
jne
xchg
cmp
outs
sbb
push
xlat
mov
pop
xchg
cld
jne
sbb
test
movs
cmp
shl
neg
lods
xor
outs
mov
fucomp
das
and
xor
in
aam
inc
inc
nop
xor
pop
ficom
sbb
sar
and
add
ins
cmps
das
sbb
xor
je
mov
shl
loope
(bad)
cli
pop
jl
and
inc
or
aas
call
js
sahf
pop
cmp
aaa
ja
mov
pop
inc
or
stc
fistp
inc
ins
jnp
sub
nop
lds
retf
xchg
dec
fsub
pop
adc
hlt
dec
mov
fstp
cdq
lds
repz
dec
pop
jecxz
pop
in
stos
dec
adc
popa
retf
xor
pop
imul
popa
in
movs
iret
mov
(bad)
cli
pop
lahf
mov
push
pop
ret
push
push
add
xor
dec
data16
ins
sbb
movs
aaa
inc
adc
inc
mov
jns
ins
pop
pop
call
ret
xchg
cdq
addr16
in
stos
mov
ja
mov
out
ret
fiadd
scas
mov
sbb
dec
cld
into
int
lock
pop
cmp
fs
imul
pop
pop
in
ins
retf
mov
cmp
adc
mov
push
fcom
popf
sub
xchg
mov
xor
lods
cdq
and
loop
(bad)
jp
cmp
push
dec
fwait
jl
cdq
jg
xlat
in
jae
adc
adc
mov
stos
rcr
and
fnsave
loope
retf
cmp
xor
jmp
push
add
outs
inc
dec
mov
xchg
push
loop
daa
mov
adc
and
mov
data16
xchg
sar
sub
and
in
mov
stc
sbb
lock
mov
daa
mov
mov
popf
shl
dec
je
mov
leave
div
fistp
dec
xchg
lahf
inc
in
fstp
sub
ror
inc
sub
xor
daa
dec
fwait
retf
das
and
mov
adc
add
mov
xor
cmp
lods
aas
adc
cwde
hlt
mov
test
jno
push
jbe
dec
aam
aam
xchg
in
mov
xchg
xor
fist
mul
jae
cdq
div
cmp
test
nop
stos
inc
call
adc
rcr
js
cmp
push
mov
jae
(bad)
jmp
(bad)
retf
je
loope
cmp
push
adc
pop
and
push
lods
cs
arpl
je
xchg
popa
mov
sti
outs
pop
xor
hlt
mov
in
add
and
shl
mov
cld
inc
xor
les
fild
pushf
mov
xor
(bad)
cld
xchg
stc
xchg
mov
jbe
sub
or
(bad)
fcom
push
gs
jg
cmp
pop
or
fst
jl
cld
jnp
mul
dec
and
inc
xor
and
inc
push
lahf
js
aad
pop
mov
jle
cmps
cdq
cmp
inc
cmp
inc
test
xchg
push
out
xor
hlt
jne
dec
mov
mov
pop
mov
popf
cmp
dec
pop
nop
(bad)
sub
ins
scas
or
cmc
(bad)
loope
jnp
cmp
and
mov
mov
icebp
icebp
push
mov
dec
mov
add
sub
cmp
pop
inc
mov
js
retf
sti
inc
mov
popa
aad
push
pop
mov
loope
out
in
add
lds
mov
inc
mov
mov
xchg
in
push
sub
shl
enter
jp
inc
mov
sbb
push
ja
xchg
fs
jno
mov
push
cmp
or
jbe
jl
pop
mov
pop
push
mov
push
stos
push
je
scas
sub
mov
mov
inc
jmp
xor
mov
mov
push
(bad)
mov
cmps
fidivr
test
aad
test
cmp
xchg
push
out
daa
and
out
cmp
bound
aaa
or
xchg
mov
imul
inc
pop
jae
fst
jl
add
in
inc
imul
sbb
mov
jecxz
mov
(bad)
cld
jb
push
(bad)
iret
(bad)
mov
jl
clc
jne
fild
hlt
movs
test
pop
(bad)
mov
cmc
cwde
xchg
mov
pop
dec
mov
sub
in
cmc
aam
lahf
inc
jp
bound
pop
pop
jns
and
clc
shr
lea
pop
add
outs
or
or
adc
jns
shl
and
mov
out
mov
sbb
fstp
js
fnstenv
loopne
(bad)
dec
out
mov
push
jmp
pop
lock
push
pop
mov
scas
adc
push
out
(bad)
jno
xchg
mov
sbb
adc
cmp
push
cwde
adc
ins
mov
(bad)
xchg
retf
xchg
add
(bad)
ins
(bad)
xlat
and
gs
mov
cmp
or
outs
xchg
rcl
int3
(bad)
cmp
sbb
mov
cmp
mov
popf
das
hlt
jnp
mov
inc
inc
mov
icebp
out
enter
sub
and
jecxz
aam
rol
sbb
adc
push
ret
xor
mov
out
cld
and
mov
push
adc
ds
sub
gs
outs
movs
xchg
test
enter
stos
int
fstp
movs
imul
into
in
icebp
mov
icebp
jnp
inc
cmc
neg
repz
nop
sbb
mov
xchg
(bad)
inc
popa
mov
jmp
pop
adc
int
jns
pop
push
aas
es
sub
cs
mov
add
pop
sar
cmp
aad
jae
pop
mov
push
mov
mov
std
inc
adc
add
arpl
in
add
pop
sub
aas
mov
and
inc
add
stos
scas
jne
sbb
fincstp
dec
mov
movs
popa
cmp
ins
inc
in
pushf
jbe
pop
cmps
lar
std
enter
adc
inc
sahf
aas
addr16
je
jns
mov
jge
aam
sub
imul
and
jo
mov
push
stos
xchg
mov
sbb
into
mov
add
je
jb
lods
retf
push
pushf
rcl
mov
div
mov
fwait
imul
mov
mov
xlat
dec
sbb
xlat
das
cmp
or
outs
test
je
sub
cmps
(bad)
call
rcl
mov
sbb
cmp
inc
dec
mov
mov
dec
xchg
xchg
sti
or
sub
aam
xor
inc
out
push
jo
pop
loope
xchg
loopne
ins
xchg
xchg
push
adc
hlt
cmc
push
(bad)
js
xchg
mov
ja
mov
inc
fiadd
pop
mov
inc
repz
dec
cmp
inc
fstp
push
add
mov
pop
or
mov
pop
stos
sbb
fidiv
hlt
add
push
adc
and
fs
(bad)
push
dec
(bad)
sub
in
movs
and
push
inc
xchg
div
cld
push
push
xchg
dec
sti
into
enter
xor
or
repz
mov
inc
jne
ret
cs
fld
sbb
cli
jnp
xor
or
fcmovbe
and
inc
jp
pop
scas
sbb
push
cdq
cs
inc
mov
xchg
cli
jmp
cmp
sub
xor
shl
pop
lahf
mov
sbb
pop
inc
retf
repz
test
and
inc
mov
nop
push
add
les
cld
mov
pop
mov
fcmovnb
xchg
retf
pop
cmp
push
sub
icebp
fstp
push
push
dec
xor
jne
sbb
call
repnz
sahf
cli
inc
sbb
adc
and
jae
lods
push
xchg
add
push
xchg
pop
aas
cmps
adc
test
ror
(bad)
push
outs
jo
outs
and
push
or
fisttp
in
mov
ret
dec
add
addr16
add
test
inc
jl
dec
cmp
lahf
lahf
mov
sbb
add
fidiv
out
imul
xor
mov
inc
pushf
jnp
adc
test
stos
or
adc
jmp
mov
clc
dec
jo
mov
js
aad
inc
retf
sahf
push
(bad)
pop
in
lods
mov
inc
ud1
xor
repz
mov
push
out
dec
sti
pop
push
xor
imul
fcom
dec
jle
push
xor
mov
pop
clc
pop
repz
mov
push
jbe
and
inc
adc
pusha
mov
int3
jno
inc
pop
fidiv
mov
cld
sub
xor
hlt
cmps
inc
mov
dec
push
fistp
mov
mov
in
movs
pop
pop
out
xchg
aad
xchg
dec
push
sti
mov
fmul
nop
cdq
jbe
push
lds
stos
and
pop
jle
push
popf
jne
ins
call
(bad)
lock
adc
xor
add
fld
mov
inc
mov
dec
repz
and
sbb
test
sar
sbb
ret
lahf
jo
push
mov
nop
sbb
lea
ror
scas
sahf
pop
jmp
scas
inc
aaa
xor
mov
sbb
gs
mov
mov
neg
(bad)
push
les
into
cmp
or
sbb
sbb
mov
pop
test
sub
mov
lods
jbe
cmps
mov
in
dec
aam
push
fucom
std
add
imul
pusha
arpl
fist
out
scas
outs
aam
retf
or
in
pop
pop
add
or
js
xor
or
hlt
dec
cli
stc
sbb
rol
pop
push
div
ds
jno
sahf
sub
ret
aam
pop
call
push
inc
jmp
fisub
dec
scas
pop
lds
xchg
imul
add
mov
scas
adc
jl
mov
addr16
lea
sub
lahf
dec
enter
pop
dec
retf
pop
jmp
sbb
mov
je
mov
rep
sti
in
sub
and
cmp
add
aaa
xchg
ds
jb
popa
dec
mov
sbb
push
and
cmps
loop
ror
jge
bound
cmp
test
out
loopne
(bad)
loop
push
shr
scas
jp
dec
sti
neg
out
fisttp
movs
xchg
sub
or
ss
pop
cmp
icebp
jmp
jp
push
shr
mov
pop
dec
lods
mov
fistp
cli
add
rol
sbb
bound
push
mov
push
in
cdq
mov
sahf
scas
jecxz
mov
jl
jg
popa
xchg
jne
cwde
(bad)
cmp
repnz
jmp
std
repnz
pusha
mov
fsubrp
sbb
jge
xchg
mov
cmp
scas
ror
fmul
jo
inc
sbb
lock
(bad)
gs
dec
mov
push
pushf
rcl
in
mov
mov
sub
pop
adc
adc
adc
jnp
cmp
fcomp
jecxz
add
imul
fild
stos
xchg
dec
aam
add
mov
cmc
fiadd
mov
inc
pushf
ret
es
cmc
(bad)
aad
xor
mov
rcl
or
(bad)
fst
pop
add
dec
mov
jl
loopne
add
mov
jmp
pop
adc
in
and
ja
sbb
inc
inc
mov
popf
sub
test
stc
sti
xor
out
jg
sbb
adc
pop
mov
lahf
gs
retf
leave
inc
test
movs
push
add
mov
fdiv
cwde
scas
gs
dec
fisttp
ds
idiv
clc
and
inc
add
sbb
lods
shr
cli
(bad)
sbb
add
bound
inc
push
dec
inc
jmp
mov
(bad)
icebp
cmps
add
push
and
push
mov
mov
push
jmp
std
xor
inc
test
mov
push
cmps
xor
adc
jecxz
outs
pushf
movs
addr16
jmp
aaa
cmp
sbb
and
pusha
bound
add
add
sub
cmp
add
cmp
or
mov
xchg
and
xchg
aad
or
jecxz
out
js
lds
cli
dec
popf
cmc
jmp
or
in
or
dec
movs
test
mov
scas
dec
ins
cmps
lds
test
cmc
push
dec
mov
push
dec
(bad)
adc
das
mov
ret
dec
xor
sbb
js
dec
sub
lea
test
in
add
daa
sti
inc
or
add
aaa
lods
dec
ins
or
(bad)
push
pop
lahf
sar
fucomip
mov
retf
outs
popa
jno
dec
(bad)
(bad)
mov
mov
xor
(bad)
icebp
das
icebp
outs
call
mov
xchg
mov
test
mov
je
lds
mul
sbb
adc
data16
or
fptan
sub
inc
fdiv
lea
sahf
je
jl
cwde
or
xchg
add
shr
(bad)
out
int3
cmc
add
pop
dec
popa
mov
gs
in
and
jmp
mov
movsx
clc
out
retf
mul
jmp
imul
inc
fdivp
rcl
inc
daa
jnp
cmp
dec
xor
dec
icebp
fnstcw
jnp
shl
mov
sub
adc
jbe
push
cmc
add
or
stos
into
clc
xor
adc
in
sbb
push
retf
cmp
(bad)
pushf
adc
nop
push
sbb
shl
mov
cmp
mul
icebp
test
sar
call
fcom
pop
dec
int
enter
add
sbb
jae
add
cmp
and
cmp
xor
pop
jb
in
ss
fmul
mov
cmp
mov
xor
inc
fmul
popf
add
dec
inc
popa
mov
pushf
xlat
aas
mov
push
and
mov
xchg
adc
mov
xchg
(bad)
fs
jmp
scas
cmp
int3
out
fdivr
retf
es
fcom
je
xchg
xor
jg
fldcw
inc
out
sub
push
and
adc
or
mov
mov
inc
inc
mov
sub
cli
sub
push
pop
(bad)
inc
(bad)
adc
rol
loop
(bad)
out
mov
loopne
push
xor
out
ins
test
call
(bad)
std
add
sar
ins
xchg
and
in
call
jg
popa
popf
cmovnp
push
sahf
test
xchg
fst
movs
sbb
xor
sub
cwde
aaa
pushf
adc
sbb
or
or
sub
pop
test
test
cwde
inc
push
cdq
outs
test
mov
sub
mov
xchg
add
test
adc
retf
pushf
mov
in
outs
mov
mov
sbb
fnsave
pop
or
pop
fwait
xor
mov
and
dec
clc
hlt
jo
(bad)
jl
jp
(bad)
add
inc
es
mov
pop
adc
push
mov
lea
add
cmp
add
pusha
fbstp
arpl
movs
add
in
xchg
es
imul
mov
fimul
scas
mov
jmp
out
aam
call
sbb
cmp
out
fstp
(bad)
(bad)
fidivr
(bad)
cld
pop
inc
pop
and
adc
dec
adc
mov
lods
xor
outs
jae
push
cmp
test
cmp
sub
fbld
inc
addr16
cwde
pop
jecxz
fisub
rol
xor
jmp
stos
loope
mov
scas
and
mov
xchg
cld
loopne
push
jbe
dec
ds
jmp
pop
not
or
adc
stc
push
loopne
inc
jns
mov
ds
pop
mov
sti
sbb
inc
and
test
rcr
sbb
(bad)
into
shl
test
cmp
sbb
fwait
sbb
das
inc
retf
test
cmp
fidiv
outs
test
and
cmp
jo
packsswb
bound
inc
out
lahf
test
push
sbb
jg
icebp
outs
outs
pop
sbb
daa
adc
push
daa
lea
sub
pop
mov
mov
sub
outs
out
adc
in
pop
sti
dec
push
push
sub
pushf
out
push
(bad)
push
(bad)
hlt
lods
push
fwait
pop
xchg
mov
jle
mov
icebp
addr16
and
outs
(bad)
cmp
cmp
into
shl
dec
add
push
xchg
dec
xchg
mov
sti
arpl
mov
add
bound
inc
fadd
cmp
sub
add
jmp
and
mov
pop
je
test
xchg
loopne
fst
lods
add
pop
xchg
xchg
(bad)
jmp
cld
xor
ret
std
push
inc
mov
cmp
pop
out
or
aad
ror
jl
ds
xor
push
mov
xchg
cdq
fisubr
ret
fld
jno
in
gs
add
push
pusha
lahf
adc
mov
clc
outs
xor
add
inc
jge
lods
pop
test
xchg
adc
lahf
ja
icebp
ror
(bad)
clc
daa
lea
call
mov
xchg
mov
das
lds
add
jne
push
jnp
pop
stos
sub
push
or
pushf
mov
xor
imul
jnp
(bad)
ins
jno
daa
fsub
fs
or
pop
pusha
mov
pusha
test
mov
sahf
test
rsm
sti
pop
loopne
jno
fbld
xchg
sahf
ins
in
in
fdiv
stos
sub
movs
not
mov
cmps
pusha
add
aad
cld
test
out
mov
dec
or
popf
sbb
push
fdiv
and
nop
ret
cmp
jmp
test
imul
and
xor
cmc
pop
mov
cmps
js
mov
mov
aam
adc
add
push
popf
call
into
xchg
sti
sti
mov
aam
repnz
popa
arpl
(bad)
xchg
aad
jo
mov
xor
jb
aaa
sbb
leave
aam
dec
call
add
push
sbb
or
fcom
int
arpl
adc
aaa
sbb
or
inc
jns
(bad)
mov
dec
mov
cmp
iret
mov
repnz
inc
pop
jae
inc
fimul
popf
inc
loope
inc
adc
fdiv
sub
jl
cmps
test
jle
mov
(bad)
cld
rcl
xchg
jno
inc
stos
inc
push
push
xchg
(bad)
ret
and
sub
cmp
push
dec
mov
xchg
mov
(bad)
nop
pop
add
push
and
inc
push
cmp
sub
popa
dec
test
daa
xlat
cmp
(bad)
mov
loop
cmps
xor
inc
movs
pop
(bad)
mov
cmps
dec
not
mov
outs
mov
call
mov
sbb
sub
push
shl
sti
inc
retf
push
sar
push
mov
test
mov
(bad)
(bad)
and
je
jmp
sub
imul
push
lods
imul
xchg
int
mov
scas
xchg
popa
cmc
sbb
cdq
push
stc
(bad)
fadd
shl
dec
fdivr
mov
retf
loope
(bad)
sub
inc
push
lods
xchg
(bad)
outs
xor
fdecstp
(bad)
imul
(bad)
repz
and
cld
xor
ins
inc
(bad)
ins
sub
mov
les
out
cmp
adc
cmp
cwde
pop
retf
sbb
(bad)
mov
push
xchg
stos
stos
cmp
leave
mov
cmp
popf
repnz
mov
jecxz
repz
pop
xchg
cmps
mov
sar
mov
inc
rcr
mov
mov
nop
out
call
dec
mov
or
push
lds
or
es
js
ins
and
fwait
xchg
or
fiadd
shr
mov
pop
add
or
sub
sub
test
adc
cmp
sub
sti
mov
iret
call
inc
fild
ficomp
adc
mov
add
fisttp
call
out
xchg
sbb
repz
cdq
mov
push
out
(bad)
sar
cs
dec
ror
jl
call
retf
leave
sbb
call
push
pop
or
gs
inc
push
xchg
add
xchg
xchg
xor
adc
std
xchg
sbb
jmp
ja
js
cmps
(bad)
jp
iret
xchg
xchg
not
xchg
cli
imul
mov
inc
mov
xchg
data16
retf
ret
inc
push
mov
ins
xchg
dec
fisub
or
mov
cld
inc
in
jnp
push
fwait
sub
and
mov
xchg
dec
ss
push
cli
pop
dec
inc
sbb
cmp
jb
lods
push
sub
xchg
bound
addr16
test
pop
adc
mov
pop
popf
mov
xchg
ror
call
sti
leave
lock
loop
inc
pop
popf
pushf
jb
jbe
push
ss
cld
dec
jae
daa
add
mov
dec
xchg
add
or
stos
pop
xchg
int
adc
ja
sbb
bound
ins
inc
test
add
mov
retf
xchg
mov
pop
pop
movs
pop
cdq
lods
jmp
or
inc
fadd
xchg
or
mov
xchg
jmp
fstp
inc
imul
aaa
int
lods
and
in
int3
cmc
arpl
inc
jge
push
fnstcw
pop
inc
loopne
cmp
mov
mov
jecxz
and
pop
add
sbb
and
mov
mov
retf
pop
push
sbb
test
xor
movs
aaa
xchg
call
and
out
xchg
jno
mov
div
dec
xchg
jbe
in
call
out
inc
in
xchg
gs
clc
ret
and
cmp
stos
inc
sbb
mov
(bad)
pusha
fwait
repnz
and
push
ins
arpl
daa
scas
aaa
mov
out
fs
or
pushf
and
cmp
shr
shl
pop
sub
inc
xor
leave
arpl
fld
in
xchg
mov
xor
stc
cmps
call
jno
mov
jmp
adc
into
push
jns
dec
pushf
aaa
ins
jno
jbe
pop
cmps
cmps
into
mov
or
inc
shl
xor
cmp
popa
mov
mov
inc
mov
test
xchg
clc
mov
xor
popf
dec
sti
mov
adc
loop
cmp
enter
sbb
xchg
sbb
enter
(bad)
dec
jns
popf
jb
jg
push
cs
lock
cmp
fs
inc
add
xchg
lea
icebp
gs
(bad)
and
cmp
and
pop
or
cmc
inc
sbb
mov
dec
ror
inc
xchg
xchg
imul
sbb
mov
lods
fdiv
mov
push
test
stos
push
mov
xchg
cld
movs
cli
push
cmps
pop
pop
pushf
mov
aas
add
call
lods
mov
xor
or
vmovmskpd
inc
jnp
pop
sahf
adc
pop
(bad)
mov
stos
es
add
xor
sbb
aas
nop
pop
cmps
bound
outs
pop
aam
ins
movs
mov
jmp
into
pop
fild
sub
xor
pushf
aam
mov
loop
push
fdivp
adc
pop
mov
mov
mov
xor
fild
lods
adc
dec
into
xchg
jmp
cmp
sub
jnp
dec
cmp
xchg
lods
(bad)
pop
pushf
rol
xchg
fidivr
dec
ss
adc
push
adc
jmp
adc
inc
inc
fnstsw
dec
movs
scas
idiv
sbb
gs
jmp
es
mov
adc
dec
fldenv
cdq
xchg
cmp
mov
xor
std
xchg
mov
lea
hlt
mov
mov
jmp
jmp
jo
aas
sbb
clc
gs
lods
mov
mov
and
imul
jo
retf
jle
test
add
xchg
and
inc
mov
fs
mov
sbb
jg
retf
fwait
and
fcom
inc
inc
bound
dec
mov
cmps
inc
add
stos
icebp
pop
div
mov
jg
popf
enter
cld
clc
mov
retf
pop
inc
scas
mov
pop
std
xor
adc
mov
pusha
call
outs
dec
lahf
sbb
nop
popf
int
dec
xor
push
xchg
fld
push
inc
cmp
xor
jbe
sbb
sbb
fidiv
xchg
push
jle
test
outs
push
sub
fstp
sti
je
jb
pusha
cmc
into
test
mov
push
push
xchg
aad
and
adc
adc
push
gs
add
cmp
lock
dec
mov
sti
sbb
cmp
stc
stos
ja
xor
dec
mov
jge
loopne
push
jne
mov
lock
add
mov
inc
add
adc
push
add
adc
dec
imul
mov
cmp
sar
jmp
push
inc
mov
jp
retf
pushf
stos
inc
push
enter
out
test
mov
xchg
(bad)
stos
outs
aaa
jmp
test
stos
(bad)
xor
and
cli
fcmovnbe
ds
and
cmp
sub
lea
outs
out
fwait
mov
clc
jnp
(bad)
add
aas
or
or
scas
push
xor
mov
in
in
lods
neg
push
pop
jle
push
cmp
mov
mov
cs
xchg
and
test
loopne
mov
mov
call
dec
(bad)
push
repnz
sub
fisubr
outs
test
push
cmps
dec
pop
pop
icebp
ror
add
out
jo
xlat
push
jl
pop
fbld
adc
jge
mov
mov
test
outs
sbb
dec
gs
fsubr
(bad)
test
inc
jge
frstor
ret
pushf
out
jb
mov
mov
cmc
outs
mov
cmp
test
jno
sahf
not
into
loope
clc
lds
sbb
(bad)
adc
dec
in
out
jae
and
dec
mov
cmp
ret
cmp
aad
sar
mov
out
inc
cmp
cmp
fldenv
popf
imul
cs
test
int
inc
mov
inc
arpl
sub
nop
sar
in
mov
(bad)
jmp
mov
and
add
icebp
xchg
lock
mov
call
aam
dec
repz
pop
adc
and
mov
lods
inc
ret
mov
jne
pusha
sub
push
cs
jge
jmp
sbb
cmps
jl
aam
pop
out
nop
cdq
pop
and
cli
in
call
fwait
push
mov
mov
push
(bad)
enter
push
lods
mov
mov
fistp
out
mov
(bad)
out
ret
dec
pop
or
cs
jmp
retf
sbb
pusha
xor
adc
xchg
inc
mov
mov
push
cmp
jns
rol
clc
jae
jno
loop
cvtdq2ps
js
pop
xor
addr16
pop
xor
mov
inc
sub
lahf
fild
stc
popa
inc
pop
lds
nop
rol
out
add
or
sar
mov
test
and
repz
push
out
inc
pop
or
fdivp
jle
inc
inc
push
ins
(bad)
sub
stos
jnp
jo
mov
repnz
mov
adc
aas
cld
sub
das
fwait
aaa
repnz
imul
add
and
call
dec
call
rcl
mov
sti
data16
add
sub
fcmovne
dec
fisttp
xchg
stos
idiv
fsub
xor
sahf
addr16
push
hlt
sbb
aaa
rcl
arpl
imul
and
adc
aas
mov
jno
inc
ds
outs
arpl
or
pop
jnp
jp
stos
dec
popa
nop
lea
jecxz
xchg
sbb
jle
jb
ja
iret
test
mov
xchg
ror
cdq
mov
shr
mov
out
lds
mov
fs
jle
sub
cmp
hlt
int3
push
in
push
sbb
(bad)
aas
inc
cmp
(bad)
xchg
mov
stc
inc
retf
movs
rcr
pop
sub
pop
ja
add
sbb
ror
retf
test
addr16
jmp
add
push
addr16
fisubr
cmp
inc
jmp
or
fcmovnu
scas
jp
push
call
pop
mov
repnz
mov
jmp
(bad)
retf
and
mov
push
add
mov
xchg
cmp
ins
cdq
fstp
xchg
cli
jb
inc
adc
aas
push
pusha
imul
mov
fwait
push
and
dec
pop
stos
mov
js
retf
shr
ret
jl
jb
ret
repz
mov
cdq
jae
aad
cmps
xor
addr16
hlt
dec
mov
cmp
pusha
mov
stos
push
pop
dec
iret
repnz
pop
dec
and
pop
lea
pop
out
nop
mov
add
add
aam
(bad)
pusha
pop
sub
adc
push
push
and
or
jbe
sbb
fild
vmwrite
and
adc
push
push
jge
das
(bad)
movs
(bad)
popa
mov
mov
rol
xchg
ss
mov
mov
ret
add
(bad)
xchg
scas
fidivr
imul
aad
inc
int3
adc
push
scas
cmp
jno
xor
pop
mov
sbb
push
retf
ret
inc
add
mov
aaa
stos
pop
scas
ins
hlt
addr16
mov
xchg
dec
jae
sar
cli
jmp
add
fs
jb
push
xchg
add
mov
ret
mov
mov
sti
sub
xchg
xchg
(bad)
repnz
loopne
mov
cdq
popf
dec
cli
js
dec
push
cmp
sub
pop
inc
pusha
mov
test
lea
ds
sbb
fsub
je
jmp
push
sub
movs
inc
sbb
push
dec
xchg
mov
sub
push
jno
cli
in
nop
repz
or
fnsave
sar
mov
cmc
mov
and
fistp
lahf
fld
in
popf
mov
mov
add
scas
popa
shl
xor
adc
jmp
jns
push
mov
ss
pop
mov
sbb
push
(bad)
add
or
add
and
jne
arpl
dec
add
nop
(bad)
sbb
in
xchg
adc
inc
jle
push
cdq
mov
mov
ss
stos
xchg
or
inc
test
test
sahf
xchg
hlt
push
pop
ficomp
loop
push
into
push
(bad)
inc
loope
scas
jns
sbb
outs
call
push
out
test
inc
loopne
sbb
inc
cmps
sbb
mov
call
sub
pushf
ds
sahf
cmp
add
nop
in
in
mov
xor
jmp
mov
stmxcsr
cwde
test
les
in
mov
aaa
inc
push
repz
loop
cdq
cmp
jnp
xor
pop
clc
jbe
jge
xor
popf
cmc
jo
add
pop
adc
xchg
and
mov
mov
(bad)
mov
test
push
jl
jnp
mov
jge
xlat
popf
jg
xchg
iret
retf
lods
sub
ja
mov
jge
sahf
sahf
sbb
call
inc
ins
lods
mov
adc
std
pop
rcr
sbb
push
ins
test
push
stos
cdq
(bad)
mov
cmp
imul
es
arpl
dec
mov
and
addr16
stos
push
mov
push
in
and
jmp
jmp
lea
pop
int3
xchg
push
adc
jecxz
push
xchg
sbb
cmp
sbb
xchg
fiadd
not
test
(bad)
dec
inc
sbb
out
push
or
cmp
ins
or
mov
jmp
mov
jns
pop
inc
jecxz
adc
and
or
mov
mov
ffree
loopne
(bad)
out
inc
aam
add
lds
mov
jmp
push
int3
aam
sub
pusha
test
xchg
not
mov
jge
mov
xabort
cdq
push
inc
xchg
stos
(bad)
leave
inc
shl
fsub
mov
fs
scas
adc
jge
dec
and
xchg
int3
mov
clc
hlt
jnp
mov
push
fistp
imul
push
stos
or
js
sahf
ins
xor
xor
or
cmc
mov
mov
dec
test
(bad)
loopne
mov
mov
out
or
imul
mov
leave
mov
jmp
js
test
or
out
neg
inc
in
sbb
cmp
and
mov
xchg
enter
aam
dec
inc
daa
in
adc
push
xchg
adc
jle
fst
xchg
sub
cmps
mov
jmp
ret
dec
xor
jmp
test
je
mov
mov
mul
jg
mov
loope
in
fidivr
jb
sbb
out
je
and
dec
lods
xor
sub
mov
fsubr
icebp
das
mov
dec
jl
push
loopne
fs
daa
add
dec
fimul
fnsave
cmp
scas
movs
and
sar
inc
and
jmp
out
xor
adc
pop
mov
aam
test
(bad)
mov
frstor
cmc
and
bound
inc
or
lahf
xchg
cwde
adc
fisttp
ret
div
gs
out
pop
cmp
xor
jle
mov
lods
dec
push
jmp
cli
stos
jecxz
cwde
aad
add
lods
das
hlt
movs
lds
aad
sbb
mov
mov
(bad)
pusha
mov
shl
xor
push
mov
mov
mov
out
push
mov
rcr
jmp
call
fidiv
data16
jne
jne
(bad)
dec
and
je
call
inc
ja
std
xor
jne
nop
sbb
push
or
add
adc
sti
xchg
sbb
jbe
dec
xchg
mov
repnz
std
and
je
mov
push
pop
xchg
call
mov
cmp
fisttp
dec
rcl
rcr
idiv
add
mov
inc
ss
rcl
mov
mov
popa
pop
inc
add
and
jno
inc
push
sub
sbb
xchg
mov
ins
daa
push
cmp
fadd
outs
push
jbe
xor
xchg
stc
jns
ret
mov
in
jae
(bad)
movs
scas
push
fxch
xor
dec
add
dec
(bad)
mov
cdq
mov
jne
daa
pop
or
(bad)
(bad)
and
add
test
inc
and
mov
pop
pop
shl
cmp
call
in
inc
xor
sub
and
jo
pop
mov
sbb
pop
jecxz
mov
mov
inc
std
arpl
mov
loop
ficomp
scas
test
sbb
loopne
cmp
ja
sahf
mov
add
ret
test
ja
gs
and
in
hlt
iret
dec
xchg
ja
gs
es
inc
and
call
fmul
inc
js
mov
sbb
ins
dec
lods
inc
sbb
mov
push
push
or
cld
mov
rol
inc
xchg
push
aad
out
fwait
jmp
fisub
call
fsubr
call
movs
fcomp
xor
mov
sub
call
fwait
pcmpgtd
lea
or
nop
mov
mov
pop
bnd
retf
jo
retf
popa
xor
cmp
or
cmp
adc
jle
inc
dec
fstp
mov
jns
test
sub
and
int
and
arpl
and
xchg
xor
pushf
pop
es
dec
lock
lahf
lds
sbb
xchg
scas
repz
inc
mov
retf
xor
vhaddpd
xor
add
cmp
cmps
call
cmp
push
popa
inc
aaa
cld
cmp
jbe
gs
sbb
ins
inc
scas
sbb
xor
push
cmp
les
aam
pop
mov
mov
test
xchg
or
hlt
(bad)
add
movs
hlt
sbb
mul
mov
push
mov
sub
jns
add
rcl
ficomp
adc
push
sub
add
xchg
les
in
cmp
(bad)
jns
inc
or
cmp
add
sbb
dec
mov
jl
test
das
add
jno
cli
lahf
es
out
inc
mov
daa
lahf
sub
shl
mov
mov
sbb
jmp
sbb
pop
lods
mov
pop
sbb
fsin
icebp
in
test
sbb
int3
xor
push
retf
mov
cbw
push
ja
jp
sub
mov
call
sti
hlt
and
loopne
push
add
cmp
or
or
inc
jo
jno
xchg
add
mov
push
mov
jnp
test
shl
jl
mov
mov
xchg
or
(bad)
mov
mov
cmps
or
fld
jnp
sub
sub
daa
loope
aad
les
jae
js
or
mov
or
adc
jnp
shl
jne
fisub
push
jnp
jl
sub
pop
lods
inc
push
adc
cmps
adc
add
aam
aas
mov
pop
dec
xchg
mov
call
add
ret
xlat
jge
add
sbb
ret
or
fsub
imul
retf
imul
add
ins
fdivr
push
inc
test
mov
mov
cmp
push
nop
and
into
pop
inc
or
and
adc
push
inc
cmps
pop
pop
in
mov
adc
dec
ins
int
popf
inc
mov
push
push
shl
(bad)
cwde
and
sahf
push
xchg
jmp
adc
fdivp
adc
test
jne
ret
or
clc
mov
xchg
fcom
dec
leave
aaa
push
push
fucomip
int
rol
arpl
and
pop
or
mov
cmc
jnp
enter
push
pop
jge
mov
sbb
inc
bound
outs
test
and
xor
std
jp
pop
push
push
call
mov
push
xchg
pop
stos
jbe
gs
mov
bound
lea
addr16
fisttp
sub
(bad)
clc
imul
stos
jb
jno
mov
retf
fstp
in
js
dec
sbb
push
xor
sbb
inc
push
lahf
jge
or
dec
add
fld
call
ins
fwait
pop
shr
cmps
push
idiv
cmps
add
js
movs
sar
lods
ret
xor
in
dec
out
test
shr
in
or
scas
jbe
push
or
addr16
sbb
mov
ss
lahf
xchg
mov
xor
cmp
jmp
add
pop
mov
sahf
push
sub
sub
rcr
(bad)
xlat
loop
stos
pop
jne
jle
pop
and
push
rol
into
push
scas
cdq
mov
xchg
shr
retf
sbb
mov
sbb
fimul
xor
gs
aas
jne
mov
retf
xchg
mov
cwde
mov
test
jge
push
or
sbb
add
daa
rol
scas
je
retf
out
(bad)
sti
xor
cmp
mov
push
or
xchg
jnp
xchg
fbld
out
jb
jmp
sub
imul
mov
aaa
mov
cmp
test
call
sbb
add
test
jno
jo
mov
adc
jg
shl
clc
inc
jne
add
or
jae
mov
jnp
xchg
imul
xor
adc
mov
xor
gs
sub
mov
ds
mov
out
adc
stos
cld
or
push
sub
xchg
push
xor
fstp
sub
pop
dec
fsubr
lods
popa
int
pop
or
pushf
cmp
dec
push
jp
stos
mov
push
xchg
std
adc
ss
jns
add
sti
jo
fstp
cmps
add
add
adc
sub
hlt
mov
shl
xchg
hlt
jae
rcl
in
(bad)
mov
aad
mov
cmp
test
xor
(bad)
fadd
cwde
mov
rcr
cmp
or
repnz
adc
sub
pop
inc
jb
xchg
movs
xchg
dec
inc
retf
repz
inc
mov
addr16
sub
sbb
js
mov
lods
mov
ins
out
in
xchg
xor
frstor
dec
push
pop
fisttp
mov
inc
mov
mov
push
cli
fbld
call
pop
jecxz
std
add
mov
jmp
xlat
push
add
mov
push
std
add
jae
sbb
and
mov
cmp
int3
sub
cmp
jecxz
mov
fsub
ret
fst
inc
push
xor
sti
sti
and
and
pop
test
mov
adc
(bad)
cmps
xor
dec
xchg
mov
arpl
mov
cld
xchg
scas
loop
pusha
mov
push
repz
imul
sbb
mov
in
imul
jns
popa
stos
ins
pop
mov
imul
or
inc
jmp
push
or
gs
bound
movs
jns
mov
pop
stos
xchg
stc
and
add
or
xchg
inc
ret
inc
jns
mov
pop
in
cmps
imul
push
fcmovbe
aas
pushf
addr16
loopne
test
stos
icebp
(bad)
push
xchg
js
xor
or
enter
push
add
cmp
sub
add
call
clc
fild
mov
push
mov
pop
scas
btr
fstp
xchg
sbb
mov
stc
mov
pop
xchg
jecxz
ret
and
inc
sub
add
dec
(bad)
(bad)
mov
mov
xor
fst
jecxz
dec
(bad)
outs
jmp
push
rcl
sbb
es
jne
arpl
mov
in
cld
std
and
push
ret
cmp
pop
xchg
add
or
into
sbb
in
fwait
sbb
test
inc
(bad)
jae
popa
popf
(bad)
in
mov
xchg
dec
out
fs
ficomp
std
mov
sbb
cmc
pop
aaa
loop
hlt
aam
pop
adc
mov
add
cmc
in
push
rol
pusha
mov
ins
sub
int3
adc
in
jl
jecxz
leave
rol
add
add
sbb
addr16
jae
retf
jmp
ret
repnz
adc
jo
mov
pushf
(bad)
jae
loopne
pop
sar
mov
cli
gs
clc
stos
in
stos
dec
jne
mov
shl
inc
ja
xchg
pop
enter
inc
ss
in
rcr
pop
cmp
sbb
or
stos
xchg
mov
sbb
shl
mov
cmp
adc
dec
adc
add
fst
cmp
mov
in
mov
mov
(bad)
lahf
ins
stc
scas
aam
call
and
rcl
mov
adc
stos
cmp
lea
pusha
mov
jns
dec
into
dec
push
xor
jmp
push
fidivr
sbb
jae
outs
mov
repnz
retf
fbld
jbe
mov
and
sbb
push
scas
mov
add
push
push
hlt
xchg
daa
mov
pop
jns
push
or
rol
mul
stos
adc
out
cmp
sub
inc
retf
dec
push
sbb
(bad)
out
ss
cmp
mov
imul
dec
sub
sbb
jmp
mov
jl
cmp
pop
(bad)
push
cmp
sbb
mov
mov
xlat
int3
xchg
retf
mov
mov
xchg
leave
jmp
cs
ins
call
movs
inc
push
mov
sub
xlat
mov
sti
outs
imul
cmp
inc
xlat
cld
aad
jmp
jne
loopne
sub
(bad)
lahf
xchg
xchg
dec
and
(bad)
stc
iret
cmps
jecxz
bound
les
outs
add
mov
jl
scas
push
and
pushf
push
repz
jnp
sub
cmc
pop
mov
mov
inc
and
(bad)
popf
sbb
mov
xchg
push
add
cmp
xlat
xlat
mov
mov
cmc
pop
pop
or
(bad)
sar
pop
inc
jle
fistp
push
and
call
jecxz
sub
dec
adc
pop
mov
pop
ins
mov
pop
in
mov
inc
push
push
stos
stc
push
(bad)
sbb
lods
js
xchg
sub
xchg
imul
(bad)
mov
xchg
lods
retf
push
xchg
test
cmc
gs
jmp
popa
push
fisub
xor
adc
stos
ds
adc
dec
mov
jnp
jl
mov
test
(bad)
rcl
je
mov
sub
popa
jae
pop
pop
stos
xor
mov
rcl
xor
pop
jns
outs
jmp
enter
mov
shr
jne
dec
mov
mov
jo
xchg
repz
dec
dec
out
fnsave
rcr
sbb
fsqrt
std
cmp
and
inc
mov
dec
sub
into
dec
add
(bad)
fcomi
or
sbb
inc
and
mov
icebp
arpl
jp
shl
pop
in
call
cmps
inc
xchg
push
inc
and
jb
lahf
leave
jge
aad
push
out
imul
std
scas
iret
sbb
popf
sbb
sar
mov
fimul
sub
rcr
adc
test
mov
retf
mov
sbb
push
push
jle
add
add
cmp
sbb
cdq
or
mov
jne
and
mov
add
int
shl
movs
xor
xchg
stc
jg
(bad)
movs
imul
pop
xor
cli
mov
repz
add
xchg
xchg
sbb
test
dec
adc
push
call
cli
ret
inc
inc
push
dec
cdq
or
xor
pop
jmp
pop
enter
cmp
cld
dec
push
add
hlt
push
aas
gs
mov
xchg
je
arpl
fs
mov
pop
std
fistp
hlt
gs
pushf
jne
popf
aam
mov
movs
adc
repz
cld
scas
out
sub
xchg
cmp
retf
hlt
popa
jne
test
out
inc
in
cmp
xor
(bad)
fnstcw
sbb
inc
mov
and
out
nop
stos
shl
sub
dec
dec
jne
and
adc
inc
nop
dec
or
nop
adc
mov
push
aas
adc
rcr
icebp
inc
add
mov
mov
xor
retf
mov
sbb
xor
neg
sub
leave
xchg
rcr
cmp
mov
jno
dec
clc
dec
sub
(bad)
enter
jae
fs
popa
cdq
stos
mov
in
add
es
sbb
add
es
mov
add
add
xor
leave
jbe
dec
dec
sub
and
and
sub
popa
iret
mov
stos
sub
dec
test
xchg
loope
mov
cmp
js
mov
outs
lock
cmp
sub
ss
jo
push
pop
jg
jo
outs
mov
pop
out
outs
(bad)
repz
adc
add
sbb
mov
pop
adc
and
test
es
inc
lahf
cmps
cdq
inc
mov
dec
in
jle
rol
enter
stos
fs
inc
sbb
ficomp
or
push
push
(bad)
(bad)
pushf
(bad)
fcomp
cs
jae
pop
inc
or
xor
stos
jbe
jle
mov
data16
das
or
and
add
jb
jns
mov
test
shl
hlt
push
scas
js
mov
jp
mov
inc
popf
call
sti
imul
xchg
xor
cld
(bad)
fadd
ins
out
addr16
add
fidivr
and
push
test
and
fwait
test
cmp
sub
adc
push
or
lea
mov
in
pop
mov
push
jmp
mov
clc
out
xchg
sbb
addr16
inc
sahf
outs
fist
loope
shl
cs
ja
sahf
mov
jns
cwde
pushf
mov
in
mov
dec
popa
in
pushf
imul
(bad)
adc
iret
imul
call
outs
nop
mov
mov
xor
addr16
rcr
inc
add
jae
mov
cs
dec
adc
popa
fwait
stos
xchg
imul
mov
in
pop
ins
cwde
imul
hlt
jge
rol
in
out
aaa
into
pop
mov
ffreep
cmp
xchg
ss
mov
loopne
jnp
cmps
inc
in
xor
ret
sub
jno
pop
mov
sbb
xchg
test
or
and
sub
xor
jl
push
mov
dec
pusha
lahf
jne
mov
jns
mov
sbb
dec
fyl2x
movs
pop
stos
mov
dec
jne
fidivr
mov
xchg
jb
xchg
jae
call
pop
lods
neg
pop
in
lods
add
ret
mov
loope
mov
sub
dec
daa
xor
aad
jl
sbb
jp
mov
inc
adc
mov
add
mov
adc
inc
sbb
and
push
or
jp
mov
ror
stos
(bad)
xchg
cmp
and
retf
mov
mov
pop
inc
dec
ds
pop
xchg
mov
xchg
jmp
xchg
inc
cli
call
xchg
clc
call
pusha
repz
cmps
sbb
adc
push
jmp
pop
cmp
pusha
mov
or
cdq
scas
lods
or
retf
out
sbb
jmp
pop
adc
sbb
mov
outs
outs
xchg
sbb
mov
outs
fisubr
add
mov
ins
jmp
lahf
push
xor
movs
mov
or
mov
adc
(bad)
ror
scas
sahf
jns
and
int
out
push
dec
shr
push
mov
xor
int3
sbb
mov
test
sbb
cli
push
adc
ds
adc
xchg
sbb
mov
test
addr16
mov
push
inc
fcom
into
mul
jecxz
inc
out
jecxz
psllw
out
sub
dec
call
mov
mov
add
test
lods
mov
sbb
mov
jb
add
jle
aas
pop
bound
mov
stos
add
(bad)
setnp
jbe
jb
aad
or
pop
mov
cmps
jbe
xchg
xor
cdq
xchg
pushf
sbb
ds
mov
in
pop
jl
push
aam
out
cmps
mov
inc
iret
mov
out
mov
lods
mov
clc
inc
mov
xchg
sbb
mov
out
test
or
push
xlat
fcmovu
imul
je
outs
fidivr
inc
mov
bound
sar
xlat
sub
add
sub
push
or
mov
sbb
fwait
push
inc
mov
sbb
inc
sub
int3
xchg
adc
xlat
data16
push
inc
cwde
dec
loopne
rcl
shl
in
loopne
push
aad
xchg
in
out
mov
mov
inc
ins
mov
(bad)
xor
pop
in
jmp
arpl
inc
jl
jg
cmp
push
test
xor
mov
sub
sbb
jo
inc
and
and
xchg
add
inc
dec
fcom
add
mov
retf
retf
mov
retf
dec
inc
dec
stos
cs
fldenv
shl
mov
test
xlat
outs
adc
mov
xchg
dec
cli
sti
adc
inc
jle
pushf
gs
aad
cmp
not
in
daa
cdq
xor
jg
mov
cmp
out
adc
into
iret
xor
ds
sub
add
push
xchg
adc
adc
jns
xchg
fs
sahf
or
and
cli
cwde
sub
xlat
jo
pusha
pop
inc
fsubr
popf
fimul
mov
add
shl
mov
shr
mov
dec
inc
xchg
mov
xor
loope
inc
xchg
test
dec
out
or
sar
adc
inc
lods
data16
jbe
jg
retf
mov
dec
call
imul
xor
xchg
and
dec
cmps
pop
sbb
mov
jecxz
mov
mov
push
inc
scas
push
test
xchg
jae
mov
xchg
cmp
in
mov
lods
add
(bad)
test
test
outs
in
retf
pop
imul
shl
push
push
pusha
addr16
das
inc
inc
mov
push
mov
lds
out
sbb
add
es
xor
sbb
call
xchg
and
pop
js
sti
xchg
add
push
pop
inc
lods
imul
shr
(bad)
test
mov
xchg
addr16
xchg
loope
shl
jae
lods
mov
sub
dec
lock
and
xor
or
enter
jnp
repnz
shr
jne
sbb
and
icebp
pop
mov
jmp
push
mov
push
mov
(bad)
idiv
jecxz
pop
arpl
call
or
(bad)
mov
jecxz
mov
fwait
ret
je
test
loope
repz
push
mov
rcl
cmp
shr
push
and
pop
dec
fs
addr16
mov
stos
mov
(bad)
ficomp
add
mov
adc
xor
(bad)
inc
push
cmp
mov
or
push
cmp
cmc
pushf
pop
mov
fs
add
ret
sbb
jmp
push
mov
xchg
mov
scas
xlat
aad
ja
fisub
(bad)
sub
add
lock
cmp
add
fnsave
sbb
add
leave
fs
push
adc
xor
sbb
pusha
jns
push
cmp
or
mov
jl
mov
xor
add
xchg
mov
mov
push
mul
addr16
movs
mov
push
dec
mov
out
xor
(bad)
inc
jg
call
adc
test
jne
inc
ja
addr16
ins
dec
mov
mov
icebp
dec
jecxz
sbb
shr
push
push
pushf
and
jp
xchg
movs
sbb
popf
into
mov
out
lock
in
push
jb
inc
retf
pop
test
movs
outs
xchg
xchg
(bad)
(bad)
mov
out
test
(bad)
aad
xchg
gs
cmps
xor
and
stc
lock
inc
dec
fwait
xor
push
cld
sub
or
cmc
scas
ja
add
jle
es
mov
xchg
mov
cmp
inc
cmp
and
js
ss
pop
mov
(bad)
pop
adc
jge
cwde
mov
adc
xchg
inc
push
jo
push
xlat
xchg
(bad)
bound
xchg
push
rol
sahf
rol
scas
sbb
sar
pop
(bad)
cmp
dec
inc
stos
mov
retf
or
or
push
jo
push
mov
stos
call
aam
test
inc
inc
jno
out
xor
and
sub
test
and
xchg
clc
das
adc
js
test
inc
loopne
jp
xchg
jp
lds
retw
movs
add
sti
loopne
add
pop
test
xchg
das
rol
xor
loop
xchg
stc
or
inc
in
push
retf
push
or
jmp
add
cmp
lods
jo
push
mov
(bad)
int
sbb
pop
sti
fmul
movs
aad
push
jge
aam
xor
scas
push
xchg
das
les
ror
mov
stc
push
(bad)
mov
pushf
push
dec
bound
out
xchg
lds
lea
push
mov
loope
cmp
mov
adc
adc
repz
mov
push
jmp
push
inc
mov
and
rol
inc
inc
and
outs
cmp
dec
arpl
bound
and
fild
push
ins
inc
mov
inc
mov
loopne
sub
aad
add
ins
mov
lea
movs
mov
ret
cmps
jmp
pop
jg
scas
dec
xchg
push
div
dec
icebp
in
loopne
in
inc
addr16
inc
cli
push
pop
ja
mov
aam
or
je
jmp
arpl
sti
add
pop
pop
callw
sbb
pusha
push
fcomp
aad
pop
test
(bad)
fidiv
inc
(bad)
inc
jnp
mov
arpl
out
inc
lock
mov
mov
inc
addr16
cmps
adc
mov
jnp
mov
aad
or
clc
jmp
jge
push
mov
push
inc
xchg
mov
sahf
xchg
cmp
int3
ja
(bad)
add
or
cmp
sub
lahf
or
mov
jp
fmul
cdq
xlat
test
mov
push
mov
jg
ss
jecxz
jmp
cmps
pop
xor
ret
mov
fwait
sahf
cmc
adc
mov
adc
repnz
xor
xor
sub
push
add
inc
xchg
ins
push
mov
movs
scas
sub
into
(bad)
retf
inc
sbb
inc
outs
dec
jbe
xchg
and
fisub
xchg
inc
jle
and
hlt
mov
in
inc
dec
ficom
inc
enter
mov
test
cdq
test
dec
call
add
(bad)
ror
outs
lock
rcl
in
gs
pop
jle
jnp
daa
arpl
movs
movs
add
jl
fist
jae
mov
cmp
nop
outs
inc
rcl
pop
lahf
and
xrelease
repz
outs
pop
jns
sub
sbb
xchg
mov
pop
mov
repnz
je
mov
push
nop
les
cmc
cli
ret
aas
push
mov
jne
push
fmul
sub
fcompp
shl
push
fs
xchg
push
cli
ss
pop
test
fild
fimul
jp
mov
(bad)
rol
mov
pop
test
or
xchg
mov
sbb
jnp
pop
adc
adc
cmps
push
push
enter
loope
repz
xchg
lock
xchg
pusha
inc
lods
stos
lods
cmp
stc
les
cdq
mov
xor
icebp
jp
sub
js
mov
dec
add
mov
sbb
ja
into
sub
test
sbb
push
sub
bound
outs
mov
popf
or
aam
ins
aas
sub
les
test
mov
mov
call
or
sti
fcomip
or
ja
xchg
lds
cdq
add
(bad)
movs
and
(bad)
inc
sbb
clc
sbb
clc
jmp
cmp
sbb
and
lahf
nop
mov
and
ret
jmp
ja
and
mov
shl
sbb
mov
pop
mov
lods
adc
jp
jmp
pop
push
and
outs
jecxz
(bad)
pop
mov
adc
mov
push
shl
test
test
inc
mov
cmc
mov
ficomp
xor
dec
rcl
pop
or
test
addr16
dec
and
sub
fwait
push
sbb
xchg
js
clc
or
inc
cmc
add
sbb
and
sbb
push
xor
test
dec
pushf
aam
and
iret
jbe
jnp
popa
mov
outs
mov
sbb
leave
test
movs
lds
jle
mov
xchg
lock
sbb
lods
cmp
sub
int
and
fld
jle
fs
sahf
aaa
and
inc
xchg
ret
rcl
bound
fldenv
pop
push
push
data16
ins
push
ret
lea
stos
fdivr
sub
retf
mov
dec
mov
inc
mov
mov
mov
xchg
pusha
lea
lss
aam
ret
fld
mov
dec
call
cmp
fisub
and
mov
aaa
daa
inc
mov
cmps
aam
add
push
mov
cdq
mov
je
jmp
popa
mov
test
fild
mov
cdq
cmp
add
pop
mov
jl
sbb
lds
(bad)
lock
mov
lock
inc
and
sar
std
xchg
aas
popf
gs
out
loop
rcr
pop
sbb
xor
aad
add
xor
jl
xor
dec
lahf
sub
lods
imul
out
test
mov
leave
pop
out
jl
fadd
xor
add
icebp
pop
stos
pop
iret
push
inc
movs
dec
or
xchg
cs
(bad)
(bad)
mov
xchg
pop
fnstcw
fwait
sar
call
cs
pusha
cmc
lods
mov
add
(bad)
test
mov
cmps
sbb
(bad)
std
inc
inc
pop
dec
sahf
jnp
jnp
mov
mov
sub
sbb
repnz
arpl
fsub
adc
jne
mov
popf
jno
dec
push
je
mov
cld
adc
xor
shr
in
add
sahf
dec
in
xchg
push
xlat
jecxz
or
loopne
ja
imul
nop
mov
inc
iret
ret
mov
stos
mov
xor
push
idiv
rol
cmp
adc
ins
mov
pop
lahf
sub
(bad)
xchg
and
xlat
jae
jle
loope
adc
sub
add
adc
xchg
mov
ret
std
and
int3
or
js
and
mov
retf
jecxz
jnp
jmp
lahf
pop
jmp
mov
lock
aad
pop
ins
sahf
lahf
gs
fcom
sbb
lahf
dec
pusha
cmp
xor
push
jno
lahf
fwait
mov
out
iret
or
adc
cmp
jo
pusha
cdq
or
or
jle
sar
jne
push
addr16
fistp
sbb
dec
add
push
fnstsw
mov
cmps
sahf
aam
lahf
jns
xchg
mov
and
(bad)
rol
jecxz
dec
cmc
push
icebp
sbb
ret
jg
inc
pop
pop
cmp
stc
inc
sub
(bad)
nop
push
cs
xchg
jns
jge
loop
push
pop
and
pushf
sub
jbe
xlat
cmp
into
movs
sbb
add
fisubr
retf
addr16
fsubr
(bad)
(bad)
arpl
out
dec
in
movs
push
mov
mov
arpl
in
in
int
dec
sbb
in
adc
icebp
gs
ds
jbe
fst
dec
dec
lea
daa
(bad)
call
sub
arpl
sar
ficomp
jnp
in
or
or
or
dec
popf
pop
sbb
add
xchg
mov
das
or
stos
dec
mov
popa
add
lea
in
ret
push
mov
mov
xor
fld
test
or
mov
(bad)
(bad)
xor
test
ins
test
or
mov
jp
ds
inc
cmp
sahf
movs
call
add
lds
pop
push
ds
call
cmp
rcr
fcmovbe
fwait
cmp
mov
pop
pop
pop
mov
(bad)
pushf
mov
retf
mov
and
cli
lea
or
xchg
fs
lods
leave
mov
jmp
mov
cmc
sub
xlat
dec
pop
push
lock
and
inc
rcl
dec
xchg
xchg
xchg
xchg
push
push
cmps
pop
fcomip
or
fadd
add
inc
ja
popf
and
ss
pusha
fcom
mov
add
daa
cmp
(bad)
mov
jecxz
jnp
mov
mov
mov
xor
dec
lea
jb
pushf
stos
push
xor
(bad)
clc
enter
(bad)
lahf
dec
xchg
imul
sbb
fbld
jns
ins
test
push
js
jbe
inc
jmp
sar
xchg
xlat
cmp
mov
cmp
add
jl
mov
enter
inc
mov
mov
outs
jmp
push
jp
repnz
xor
add
mov
in
fwait
mov
jge
in
out
cs
jns
stos
mov
mov
mov
cmp
call
push
ret
dec
cld
push
add
mov
aam
nop
aaa
imul
mov
cmp
les
stc
adc
sbb
aas
or
or
jbe
adc
pop
mov
inc
scas
xchg
mov
sub
in
call
bound
sub
(bad)
(bad)
aas
call
lahf
push
pop
scas
add
inc
xchg
pop
inc
movs
xchg
mov
xor
cmc
jl
lea
sbb
push
out
xor
jo
adc
call
test
and
pop
out
xchg
adc
pop
shr
inc
xor
pop
shl
repnz
push
dec
movs
xor
test
cmp
icebp
xchg
dec
mov
push
shl
pop
mov
addr16
xchg
sub
cmps
scas
adc
inc
lods
scas
test
pop
or
push
and
std
mov
mov
cmp
dec
rcl
inc
sub
dec
adc
sub
movs
mov
stc
dec
retf
mov
xor
pop
aaa
jge
cmp
push
push
test
dec
xchg
adc
mov
cmp
and
add
push
inc
shr
les
icebp
mov
loope
or
mov
call
sbb
movs
call
int
pop
inc
xchg
xchg
push
(bad)
dec
fadd
and
out
add
ds
mul
outs
mov
pop
out
inc
in
cmp
push
std
adc
push
ds
xchg
and
push
mov
add
outs
(bad)
inc
mov
sbb
pop
jb
cmps
inc
test
dec
ror
xchg
sub
ins
cdq
sub
cmp
out
idiv
inc
popa
test
je
push
call
repnz
jle
and
pusha
jae
xor
mov
mov
mov
add
(bad)
leave
pop
mov
push
inc
sbb
sar
ss
das
scas
gs
ins
pop
mov
fs
mov
cmp
jmp
ins
ins
movs
jno
cdq
sahf
dec
sahf
retf
mov
test
mov
mov
xchg
arpl
(bad)
repnz
shl
(bad)
pop
jge
cmps
inc
nop
ss
or
dec
std
dec
jge
dec
jnp
outs
scas
imul
in
call
ret
fistp
inc
inc
add
and
and
scas
or
mov
inc
test
jns
clc
xchg
sub
ins
pop
mov
in
aad
cwde
icebp
pushf
push
shl
mov
in
scas
(bad)
xchg
jecxz
(bad)
mov
and
lods
loope
dec
mov
je
ins
in
sub
int
inc
out
push
jns
inc
mov
cmp
mov
cmp
dec
(bad)
out
add
leave
or
pop
jge
mov
sbb
scas
dec
sbb
mov
(bad)
scas
lahf
add
call
data16
popf
aam
test
mov
xor
(bad)
push
lods
dec
ja
xchg
test
movs
cli
fimul
jmp
lods
cmp
xor
aad
imul
data16
or
cmp
xor
aad
out
or
add
xor
sahf
or
xor
dec
ss
add
cs
(bad)
mov
loop
dec
pop
mov
ror
pop
xchg
aam
dec
fimul
xchg
cmp
gs
sbb
xor
mov
pminub
js
call
dec
sbb
arpl
sbb
push
les
inc
fs
cmps
stos
mov
(bad)
mov
add
add
cmp
xor
xor
pop
inc
xor
inc
add
cmp
sahf
xor
jnp
jae
inc
ffreep
test
mov
jne
jmp
test
add
out
icebp
adc
enter
rcl
scas
dec
sar
cmp
sub
enter
pop
js
bound
js
pop
mov
mov
out
jnp
and
jecxz
cmp
add
push
lods
add
jb
mov
inc
scas
adc
xchg
mov
arpl
fcomp
test
jg
movs
pop
popf
nop
(bad)
jg
scas
cmps
push
out
dec
sub
xchg
push
sub
popf
mov
test
mov
dec
pop
sbb
ja
push
mov
jns
ins
out
xchg
mov
iret
aam
lahf
cli
gs
jl
mov
sbb
ins
push
mov
dec
mov
mov
jecxz
add
push
inc
or
in
stos
sar
les
xchg
ja
cdq
test
iret
sub
dec
leave
jbe
add
fcomp
pop
inc
and
dec
sub
retf
test
clc
mov
ficomp
imul
aaa
xor
adc
je
mov
(bad)
in
xchg
add
inc
in
stc
adc
push
aad
popa
bound
jg
mov
adc
mov
xchg
push
int
test
popf
push
mov
loop
mov
les
jle
and
jecxz
fcomp
inc
add
xor
loopne
cmp
fwait
cwde
enter
fstp
jecxz
push
mov
and
cmp
mov
mov
in
dec
or
mov
int
in
scas
shl
pop
inc
popa
mov
push
int3
mov
cmps
add
dec
xrelease
outs
mov
out
cld
mov
fstp
cdq
fsubr
dec
repz
sub
mov
enter
pop
cmp
es
inc
test
inc
scas
(bad)
retf
cmp
pop
cld
rcr
retf
dec
or
sbb
jmp
ret
xchg
or
sbb
and
call
jge
arpl
mov
jle
shl
imul
(bad)
das
jmp
in
or
xchg
mov
xchg
(bad)
cld
cmp
(bad)
push
repz
pop
pop
int
lods
push
call
dec
pusha
mov
mov
aad
out
out
addr16
pusha
jle
fiadd
pop
sub
imul
xor
scas
in
xor
cwde
in
fwait
inc
mov
jmp
je
add
movs
mov
dec
xor
dec
mov
pop
pop
mov
aam
jmp
xchg
mov
fcomp
xor
cmp
pop
mov
cmp
aam
aaa
in
(bad)
addr16
bound
and
adc
popf
aas
mov
aam
dec
scas
push
or
das
outs
lods
stos
(bad)
xor
adc
in
mov
inc
jmp
sbb
sub
mov
aas
pushf
mov
adc
test
lock
pop
xchg
cwde
faddp
sub
dec
add
add
mov
ficom
pop
or
fwait
aaa
push
jge
mov
jbe
or
test
add
pop
test
add
inc
out
pop
imul
mov
iret
jns
stos
or
mov
(bad)
sub
or
aam
call
add
js
(bad)
jmp
pusha
int
or
xchg
sbb
inc
iret
cmp
imul
mov
mov
les
mov
sbb
jl
or
and
inc
pushf
imul
mov
pop
stc
loop
ret
jno
and
add
and
or
or
(bad)
outs
nop
mov
lahf
xacquire
mov
push
(bad)
adc
jge
jo
(bad)
idiv
call
mov
movs
xor
dec
icebp
call
mov
(bad)
out
rol
cmp
mov
inc
ss
mov
ret
and
adc
sbb
inc
add
xchg
call
fld
call
pop
cmp
and
mov
mov
push
mov
cdq
and
dec
ret
sbb
inc
jnp
scas
pop
out
(bad)
jae
aad
push
xlat
xor
fisubr
mov
outs
pushf
mov
retf
mov
xchg
cmc
fwait
aaa
in
jnp
sub
sbb
call
jg
xor
inc
cmp
xchg
mov
(bad)
pop
iret
ficom
ret
out
push
dec
push
mov
sub
push
test
add
xor
jg
shl
inc
pushf
sub
js
mov
and
stos
pop
daa
in
hlt
xchg
adc
test
mov
leave
cli
cdq
mov
inc
pop
xchg
fbstp
out
dec
dec
adc
loope
inc
xor
pop
pop
imul
in
xor
cmp
or
outs
or
jp
rcr
ja
test
pushf
mov
sbb
jae
mov
dec
mov
mov
xor
retf
repnz
inc
mov
pushf
jbe
xchg
mov
sbb
rcl
in
mov
dec
(bad)
push
pop
inc
into
(bad)
in
inc
lds
pusha
fsubr
das
test
sbb
mov
retf
xor
aas
enter
push
sar
pop
adc
pushf
setge
cld
adc
xor
mov
xchg
rol
repnz
mov
shl
mov
mov
lahf
sbb
pop
mov
mov
mov
lods
rcr
sbb
cmc
add
loopne
les
pop
aas
jns
data16
std
xor
push
cmc
mov
fistp
stc
das
fcmovne
pop
push
push
jb
adc
push
push
pop
and
mov
loop
add
fcomp
inc
ffreep
in
loopne
mov
sbb
cli
lock
icebp
or
mov
test
jmp
adc
mov
jmp
push
xlat
test
push
frstor
push
adc
test
pop
add
sub
pop
in
jmp
test
adc
and
mov
mov
sbb
test
cdq
shr
loop
push
jnp
push
aam
call
mov
stos
xor
push
mov
test
js
fwait
lods
outs
and
adc
int
push
cmp
icebp
xor
sbb
pushf
pop
push
jg
rcl
in
stc
cmp
sbb
sub
mov
jb
fwait
dec
add
cmp
pop
dec
jecxz
call
pop
and
jns
stos
mov
xchg
mov
pop
mov
in
sahf
pushf
in
sub
nop
sbb
cli
retf
fnstcw
sbb
lods
xor
fidivr
cs
jle
mov
dec
sbb
lods
xchg
mov
pop
cdq
jmp
and
and
daa
and
jl
mov
jnp
scas
mov
cmp
cmp
stc
test
clc
fs
push
jno
outs
(bad)
mov
dec
fwait
mov
ja
mov
pop
shr
out
pop
cli
ins
mov
fsub
in
adc
mov
lods
inc
in
fidivr
dec
xlat
jmp
push
cmp
jnp
dec
mov
sub
or
fcom
sbb
add
add
aas
fld
mov
inc
test
arpl
clc
mov
fiadd
xchg
sub
mov
in
neg
mov
outs
mov
mov
sahf
xor
rcr
repnz
pop
jne
mov
push
xor
pusha
retf
jl
mov
add
inc
xor
mov
push
retf
mov
xchg
call
call
cmp
pop
push
mov
movs
add
mov
push
call
jge
jl
js
sub
scas
ret
and
ret
pushf
fs
cmp
aad
or
lds
rcl
dec
mov
aad
into
xchg
mov
aam
or
cli
icebp
fdiv
sub
or
mov
jp
popf
dec
pop
jg
xchg
cdq
stos
sbb
out
enter
cld
jg
jl
stc
inc
imul
xlat
dec
mov
jne
fdivr
outs
aaa
or
stc
mov
clc
add
cwde
cs
ret
inc
mov
mov
mov
out
pop
stos
mov
addr16
cmps
ret
add
(bad)
lock
aas
push
cdq
cwde
xor
js
sbb
cmp
lock
mov
xor
cdq
dec
push
out
iret
mov
jg
mov
aaa
out
and
dec
fst
mov
add
ror
mov
sahf
dec
xor
adc
xlat
std
or
mov
jne
popf
mov
mov
mov
xorps
enter
out
push
es
es
push
fwait
aaa
add
popf
into
enter
add
(bad)
ins
addr16
fcom
in
sbb
lods
jne
test
mov
inc
das
jb
retf
test
js
movs
sub
cmps
fisub
mov
push
aad
lock
mov
movs
lods
repz
mov
push
icebp
cwde
mov
(bad)
pop
std
adc
hlt
push
outs
(bad)
adc
jae
push
and
out
(bad)
iret
mov
dec
clc
enter
outs
ins
push
cmp
cmp
and
adc
pop
test
jae
(bad)
inc
sub
pusha
mov
and
icebp
xchg
adc
fwait
dec
xor
(bad)
mov
xor
(bad)
mov
fimul
nop
xchg
into
jo
das
add
jle
or
js
fld
je
test
adc
sub
imul
adc
xor
inc
xor
pushf
add
adc
mov
inc
add
out
mov
mov
jns
push
clc
test
dec
mov
jmp
shl
lahf
mov
pop
mov
sbb
(bad)
pop
pop
out
xchg
push
lock
cmp
(bad)
dec
inc
es
popf
add
bound
cdq
mov
repnz
mov
gs
pop
xor
je
mov
mov
stos
imul
pop
stos
mov
cmp
sub
call
add
adc
les
cmps
inc
xchg
cld
add
int
movs
movs
mov
pop
test
cwde
mov
fcom
cwde
mov
cmp
adc
pop
add
idiv
pop
cdq
mov
jmp
test
xor
pop
xor
adc
push
popf
pop
sti
sbb
fnstsw
mov
inc
mov
sti
xor
fcomp
rcr
jno
fbstp
mov
ror
mov
or
fdiv
add
fsubrp
dec
cmps
pop
outs
mov
rol
popa
scas
mov
das
jmp
aaa
push
cli
dec
push
pushf
pop
pop
push
inc
cdq
or
test
dec
mov
add
pop
loope
or
jge
mov
push
sbb
or
sbb
mov
and
add
(bad)
adc
push
gs
xchg
lock
jns
ja
jno
xchg
mov
in
mov
(bad)
xchg
jne
stc
stos
mov
jecxz
cmp
push
mov
repnz
xchg
mov
jne
or
cmp
call
pop
sub
mov
inc
movs
imul
mov
pop
lock
fmul
adc
fadd
jp
xor
in
adc
xchg
pop
or
mov
xor
movs
adc
jmp
outs
std
fadd
inc
mov
add
je
mov
mov
xchg
dec
sti
movs
movs
stos
sbb
addr16
xchg
jmp
push
xor
push
dec
and
out
int
pop
mov
pop
fidiv
jge
xor
or
aas
stos
ja
leave
add
sbb
add
and
push
xchg
ins
hlt
add
dec
add
mov
push
cmp
clc
add
gs
jae
jno
(bad)
xlat
dec
xor
sbb
mov
xchg
stos
xchg
cmp
imul
aas
loopne
stos
mov
dec
inc
pushf
mov
sti
fstp
and
in
es
sbb
scas
imul
jnp
outs
pop
movs
scas
aaa
sub
jp
(bad)
js
shl
cmp
pop
outs
pop
je
mov
inc
ja
or
add
pop
pop
fst
jmp
xchg
out
add
adc
inc
lds
ret
mov
cwde
jae
movs
jae
fmul
or
dec
xchg
movs
cmps
stos
push
mov
mov
ret
cmps
loope
dec
adc
sub
cmc
int
es
inc
data16
xor
mov
push
mov
es
(bad)
popf
mov
fs
mov
xor
pop
pushf
pop
aad
jae
inc
aaa
mov
push
mov
dec
les
push
sbb
ret
fnstsw
mov
adc
jns
int3
lock
sbb
pop
movs
test
inc
movs
mov
cmp
cmp
aam
ret
ja
sbb
int3
retfw
xor
push
stos
outs
inc
ins
push
mov
adc
retf
add
retf
cmp
inc
call
and
push
or
mov
adc
or
xchg
xor
loop
cli
pop
push
jl
pop
jmp
jmp
jne
mov
and
cli
std
and
(bad)
dec
mov
test
jecxz
sbb
or
xor
out
fld
pop
add
jle
dec
aas
push
mov
sub
je
enter
outs
inc
or
adc
stos
xor
and
dec
sbb
jo
pushf
push
dec
xchg
adc
lahf
inc
xchg
retf
jns
jo
popa
add
inc
xchg
xchg
push
das
retf
ins
xlat
sbb
popf
test
cmp
test
cli
mov
nop
mov
aaa
adc
pop
in
cmp
jns
xor
stos
outs
sub
or
push
and
sbb
repnz
jae
xor
or
adc
adc
ins
sbb
cmp
sbb
add
xlat
int3
movs
and
push
es
sub
sbb
cdq
out
cwde
push
mov
mov
rol
test
lods
mov
adc
mov
or
adc
out
mov
loop
dec
sub
jne
jge
je
imul
out
ret
fldenv
cdq
test
data16
sbb
mov
daa
in
outs
inc
fisttp
xchg
add
sar
scas
movs
sbb
pop
ja
pusha
mov
jmp
sub
dec
test
sbb
cmps
sahf
bound
rcl
movs
cld
fisub
cdq
mov
retf
push
repz
sub
test
sti
ss
mov
outs
pop
jnp
test
xchg
push
cmp
cwde
fsub
jb
jecxz
das
imul
pop
scas
imul
sbb
cmp
mov
retf
lods
call
adc
stc
movs
jmp
push
fstp
std
xor
add
mov
cmps
adc
ret
loope
push
ficom
or
fdiv
shl
cli
xor
mov
jnp
jbe
mov
repnz
sub
sub
inc
adc
pusha
xchg
add
mov
aas
mov
pop
mov
jle
lods
inc
repnz
pop
inc
dec
test
fld
neg
add
push
mov
fistp
sbb
mov
xchg
call
stos
jbe
and
dec
push
dec
test
pop
out
adc
jge
adc
push
mov
sub
inc
out
add
int
or
cmp
or
push
jae
pop
sbb
mov
sub
cwde
fidiv
neg
ins
mov
dec
mov
xchg
add
clc
out
xor
popa
xchg
xchg
(bad)
push
mov
jb
mov
icebp
lods
int3
fcom
popf
lods
aaa
repz
push
pop
cmp
int
and
xor
cmp
pushw
(bad)
mov
sahf
or
pop
lahf
ret
and
jbe
fidiv
pop
pop
and
into
sbb
sbb
mov
fistp
mul
ja
popa
clc
rcl
out
loopne
leave
stos
gs
(bad)
fdivr
mov
sbb
pop
stc
stc
cmps
test
mov
adc
or
repnz
inc
fidivr
jnp
pop
mov
or
cmps
iret
pushf
or
jge
lea
enter
add
inc
jae
out
add
add
data16
jns
into
sbb
mov
push
fsub
fild
jp
dec
xlat
iret
out
test
xchg
push
xchg
mov
xchg
jbe
inc
mov
or
add
dec
call
cmc
add
shl
inc
sbb
sbb
sti
pop
sub
mov
repz
in
jns
mov
bound
mov
push
scas
sbb
jne
ins
pusha
stos
js
mov
sub
dec
fisubr
push
mov
pop
movs
jnp
movs
xchg
out
sti
adc
hlt
fsub
xchg
mov
jnp
xor
ds
jmp
stc
jge
sbb
xchg
pop
int3
dec
and
cld
(bad)
fisub
sti
dec
pop
sbb
adc
cmps
push
push
mov
adc
add
adc
adc
pop
add
add
ins
movs
pop
add
test
cmp
pop
test
aad
push
ins
mov
cmp
fdivr
pop
(bad)
movs
inc
cmp
retf
icebp
xor
sbb
add
loopne
stos
push
sbb
icebp
cmp
fistp
das
xlat
adc
out
aam
jae
dec
pusha
jns
scas
xor
add
mov
scas
push
stc
std
arpl
add
inc
cmp
adc
jmp
data16
xchg
ds
sbb
cli
rcl
cwde
sbb
mov
mov
sbb
(bad)
lods
cmp
dec
icebp
cwde
test
add
mov
adc
jecxz
cld
test
jecxz
pop
les
sub
push
dec
(bad)
adc
mov
jno
xchg
pop
(bad)
or
pop
es
pop
cs
jmp
test
hlt
sbb
or
test
cmps
sti
and
jl
fsubr
mov
xchg
push
xor
mov
cdq
mov
mov
mov
movs
enter
xchg
ret
out
pop
in
fimul
dec
int3
push
pop
bswap
repnz
push
jns
aas
mov
cmp
mov
add
pop
into
ret
sti
push
inc
js
aad
or
daa
xchg
pop
mov
in
ja
adc
mov
add
cld
std
in
call
rcl
mov
loope
push
int
cmc
jne
inc
xchg
mov
retf
dec
inc
lods
lds
mov
les
xchg
mov
leave
dec
lods
push
add
loop
out
ja
sbb
imul
sub
mov
mov
in
rol
leave
push
push
gs
adc
mov
mov
icebp
add
mov
jp
stos
in
and
pop
sahf
shr
sub
(bad)
pop
jmp
sub
shl
movs
mov
pop
or
clc
test
rcr
mov
scas
sbb
mov
retf
mov
stc
jge
mov
and
icebp
pop
in
bound
cmp
lods
xor
mov
test
ret
sar
inc
sbb
xor
and
arpl
push
mov
push
push
scas
mov
add
(bad)
jnp
ins
xchg
jle
mov
pop
sub
jae
int
xchg
or
je
xchg
rol
nop
data16
mov
ficom
mov
repnz
sbb
fdivrp
(bad)
fiadd
ja
jg
das
adc
or
pop
lods
addr16
mov
dec
dec
fisub
and
push
xor
inc
fsubr
xchg
mov
jl
sti
test
lods
rol
sbb
sub
repz
mov
and
fist
mov
jg
mov
(bad)
cli
movs
rcr
dec
(bad)
push
into
cmp
dec
mov
shl
push
jae
aas
fld
data16
cmp
jae
test
cli
lock
fdiv
jnp
cmc
cmp
jge
mov
sbb
push
lea
jg
mov
inc
xchg
loop
(bad)
imul
lds
fst
adc
fdivp
or
shl
pop
sbb
cmp
hlt
mov
add
cmps
inc
shl
cmp
push
retf
cmp
or
add
lods
xor
(bad)
fdivr
out
jae
jno
loope
add
push
es
mov
cld
pop
inc
xchg
dec
sbb
lods
das
xor
jp
call
inc
sbb
mov
dec
xchg
aad
jbe
xchg
in
lock
mov
mov
inc
mov
xchg
add
(bad)
fbstp
icebp
outs
mov
add
aam
call
xor
je
sub
add
mov
fucomi
cmp
inc
mov
aas
mov
fwait
cmp
imul
mov
jmp
mov
loop
inc
and
inc
mov
or
pop
adc
call
lahf
bound
shr
sbb
xchg
mov
cmc
xor
xor
out
sub
or
mov
ins
aaa
dec
out
call
out
hlt
push
cmps
shl
inc
cmp
es
mov
xchg
jnp
mov
idiv
and
pop
jecxz
mov
mov
js
addr16
xchg
dec
loopne
les
xchg
out
scas
jp
jne
mov
outs
inc
mov
aad
mov
(bad)
jp
lahf
popf
popa
(bad)
push
in
adc
push
into
pop
je
jge
addr16
dec
jmp
xchg
inc
add
or
int
pop
jle
fstp
or
xor
mov
pop
dec
xchg
jb
movs
or
mov
sub
xor
fadd
jecxz
lods
not
fs
ins
mov
dec
mov
(bad)
jl
xchg
data16
xor
into
push
mov
xchg
cmp
hlt
(bad)
jmp
inc
xchg
mov
dec
sar
loop
ret
cmp
sbb
mov
les
pop
int3
cmp
jb
jnp
dec
rsqrtps
scas
sub
add
jb
mov
push
mov
push
rol
hlt
adc
data16
jne
fmul
dec
retf
sahf
pop
adc
(bad)
es
jns
movs
mov
push
loopne
xor
int3
loope
rcl
dec
imul
pop
pop
sbb
cmc
int3
pop
lds
js
jnp
adc
or
test
pop
test
pushf
into
jg
mov
pop
sbb
sbb
inc
xor
mov
sahf
sub
pop
push
fmul
mov
pop
mov
mov
and
jge
fsub
mov
arpl
and
xchg
dec
cmp
jne
fwait
push
es
mov
mov
out
fsubr
mov
out
ret
hlt
fld
dec
jnp
cmps
sar
or
ss
stc
je
ds
pop
fadd
jg
push
add
sar
call
adc
cli
cmp
scas
sbb
mov
pop
nop
xchg
test
and
mov
ficom
cdq
jo
xchg
sub
mov
aaa
pop
out
or
jge
stos
stos
rcl
test
mov
test
xchg
(bad)
push
aam
cmps
ds
push
std
xor
pusha
mov
pop
addr16
pop
sbb
xchg
pop
pop
jmp
pushf
fdivr
jne
out
das
sbb
pushf
pop
xor
push
xor
dec
jp
fsub
and
addr16
cmp
mov
mov
test
ins
in
xchg
ins
in
push
dec
(bad)
fnstcw
lahf
cmps
hlt
adc
lock
icebp
loope
int
inc
jl
lea
push
dec
aas
sbb
out
stc
js
sub
pop
inc
mov
jl
movs
mov
fcomip
add
addr16
loopne
ins
inc
push
pusha
mov
stos
les
mov
popa
movs
movs
movs
sub
push
addr16
mov
sar
pop
mov
in
in
xchg
bound
mov
xchg
bound
(bad)
xchg
lds
mov
push
in
pop
(bad)
sub
das
lock
retf
dec
popa
sub
mov
xor
(bad)
ret
movs
int3
dec
pop
fidivr
mov
mov
bound
inc
adc
sbb
rol
scas
cmp
outs
xor
dec
fmul
mov
out
arpl
les
xchg
dec
loop
gs
call
xchg
fldl2e
cmp
test
mov
popf
jge
scas
fnstenv
xchg
and
or
es
or
add
jae
push
or
mov
iret
push
jecxz
and
sbb
scas
sub
stos
pop
add
div
pop
push
into
cmps
adc
neg
dec
jae
fnstsw
mov
cmps
inc
jecxz
dec
xor
retf
mov
stc
or
stos
push
and
jmp
sbb
fdiv
imul
inc
cmp
nop
sbb
xor
adc
aas
call
xor
imul
getsec
mov
adc
xchg
inc
aas
mov
jp
cmps
or
sub
push
shl
pushf
imul
ss
xchg
fstp
(bad)
test
adc
sar
test
push
add
movs
lea
xor
cwde
lods
ret
push
pop
fcomp
cmp
pop
lahf
cmp
jg
xor
mov
movs
lds
rcl
das
mov
push
inc
pop
inc
cld
sub
add
bound
ins
dec
fistp
aaa
push
stos
mov
aas
cmp
pop
jmp
push
add
pushf
pop
rcl
loop
xchg
test
neg
cld
add
pusha
cmps
lods
cmps
mov
mov
out
loopne
out
aad
imul
xchg
test
pop
dec
fstp
adc
or
mov
jmp
add
pop
(bad)
sbb
or
cmp
lods
data16
fwait
or
pushf
push
inc
mov
outs
(bad)
stos
xchg
pop
xchg
mov
dec
jae
nop
jge
(bad)
leave
push
mov
out
in
jp
enter
xchg
gs
stc
fidivr
mov
sub
rcr
cmps
lock
inc
scas
mov
or
sub
stc
fsub
inc
push
daa
jns
aas
je
mov
fstp
pop
stc
(bad)
cmp
mov
dec
inc
cld
sub
and
adc
pop
push
fmul
shr
fs
mov
bound
ss
leave
mov
adc
xchg
sbb
ins
addr16
imul
mov
idiv
push
mul
sbb
mov
rcr
jecxz
popa
retf
jb
sub
sub
shr
push
pop
cdq
adc
push
and
int3
xchg
dec
sub
inc
(bad)
fisttp
sahf
(bad)
add
and
je
add
sbb
push
inc
xchg
sbb
in
(bad)
mov
clc
sti
lahf
cs
push
inc
add
pop
icebp
fadd
jl
mov
mov
xchg
pop
xchg
cmps
and
into
loop
int3
xor
cmps
ins
icebp
jle
dec
and
int
(bad)
jo
push
add
popf
ins
popa
mov
shl
(bad)
jns
mov
jbe
mov
pop
lahf
cmp
sub
pop
mov
fs
cmps
sbb
push
push
cwde
out
xor
mov
lds
inc
(bad)
nop
inc
pop
ffree
xchg
pop
in
push
sub
ins
je
mov
fdiv
iret
fsubr
test
xor
dec
fcom
dec
daa
cbw
aaa
dec
sub
mov
cdq
mov
in
and
xor
ds
or
add
outs
je
sbb
sbb
jns
cli
test
test
add
cs
mov
xchg
sbb
clc
fisttp
jmp
(bad)
xor
clc
pop
inc
scas
mov
dec
aas
inc
loope
call
inc
pop
sub
imul
dec
or
sar
repz
cmp
pop
and
xor
pusha
sub
mov
add
js
lods
push
and
das
jne
mov
imul
xor
scas
mov
out
pop
outs
nop
sub
mov
mov
or
icebp
mov
into
jp
sahf
mov
ja
mov
std
mov
std
outs
dec
jmp
fdiv
inc
cs
enter
je
cmp
push
mov
xchg
mov
push
pop
clc
dec
(bad)
sar
(bad)
pop
arpl
add
and
pop
xor
mov
enter
imul
arpl
cmp
lahf
cmps
test
int3
(bad)
mov
pop
mov
xchg
test
into
les
in
mov
xchg
(bad)
hlt
pop
add
leave
out
repnz
popa
mov
out
cmp
out
push
shl
pop
and
xor
outs
xchg
inc
aaa
dec
mov
test
js
arpl
jb
mov
mov
nop
pop
sbb
cwde
ds
add
pop
neg
push
ja
push
adc
aad
jb
stc
(bad)
stos
jne
pop
(bad)
div
inc
mov
cmc
std
clc
mov
cdq
dec
out
gs
add
repz
shl
pop
cmp
xchg
sbb
push
dec
mov
out
ret
clc
jno
fsub
pop
xor
jge
test
nop
sbb
sbb
mov
sete
inc
fadd
cwde
pop
mov
pop
xchg
xchg
push
popf
ror
and
dec
loope
jae
aam
cld
or
dec
in
test
mov
aad
mov
(bad)
bound
(bad)
jb
jno
ss
and
ret
js
mov
xor
mov
cmp
(bad)
add
dec
in
sbb
mov
inc
jo
push
mov
stos
pop
xor
jnp
sti
mov
xchg
pop
fiadd
cdq
enter
loope
shl
jns
jmp
push
mov
mov
pop
in
ret
cmc
push
das
inc
mov
mov
cmp
fcom
jp
bound
inc
cmp
mov
fld
fstp
cmps
clc
add
mov
push
pop
into
add
pop
js
jns
rol
add
or
lods
mov
mov
dec
icebp
dec
bound
push
fisub
jmp
push
jmp
xchg
int
call
push
test
mov
scas
fimul
or
ja
and
xor
cmp
call
rol
arpl
out
outs
push
xchg
daa
xlat
inc
inc
mov
pop
fwait
xchg
fwait
or
addr16
sti
inc
enter
sbb
mov
fs
mov
pop
(bad)
mov
mov
imul
test
ins
popf
stos
dec
ret
push
inc
sbb
int
pushf
pop
pusha
cmp
jno
jae
imul
retf
adc
push
inc
adc
ds
repz
ss
xchg
fwait
cdq
ins
cmp
jg
fstp
out
ins
push
xchg
pop
fdivr
in
int
push
clc
aam
jnp
pop
stos
clc
xor
test
addr16
fidivr
jne
mov
out
jg
push
sbb
scas
push
fisubr
imul
jmp
mov
dec
pop
cld
inc
in
fsub
shr
jb
and
jbe
jmp
test
(bad)
adc
mov
or
sar
adc
sbb
fild
mov
xchg
cdq
dec
sub
dec
stc
sub
sahf
dec
pop
xchg
test
icebp
mov
xchg
xchg
mov
cmp
mov
std
data16
cmp
and
xor
movs
push
xor
mov
in
std
cmp
add
add
push
mov
rcr
xchg
add
adc
sti
lods
movs
inc
cwde
xchg
add
cmps
dec
jmp
enter
mov
mov
xor
aad
cli
pushf
cdq
aad
sahf
dec
jl
xor
and
pushf
lods
fdivr
gs
mov
push
sub
jmp
cmp
mov
mov
ret
out
jge
mov
cmps
repz
jge
hlt
pop
bound
jb
inc
data16
cmp
lods
ins
inc
push
js
fdivr
out
ins
ins
or
(bad)
outs
stos
mov
adc
mov
mov
(bad)
pop
mov
sbb
mov
(bad)
sbb
rcl
mov
(bad)
pop
stos
dec
sbb
xlat
retf
lahf
sbb
mov
adc
dec
movs
popf
mov
xor
les
fcomp
jmp
ret
sbb
cs
icebp
sbb
jo
ins
adc
dec
mov
sub
ret
repnz
cs
js
cmps
push
call
in
out
dec
pop
mov
mov
fsubr
mov
dec
jle
stos
mov
and
dec
jmp
aam
sbb
mov
clc
pop
cli
cmp
or
pop
and
jns
pop
mov
pop
out
fmul
pop
jb
loop
add
jg
pop
adc
inc
sahf
and
adc
jae
into
mov
fnstcw
jae
sub
pushf
(bad)
cmp
out
xor
jmp
cdq
mov
lahf
dec
sbb
inc
xlat
aam
in
test
push
stos
fdiv
lock
cmp
adc
int
je
push
push
jl
adc
es
xchg
fsub
push
xchg
fiadd
jle
mov
xor
sub
cmpxchg
inc
inc
sub
cmp
jl
out
cmp
jae
test
call
call
inc
xor
clc
lods
adc
mov
inc
popf
movs
cmps
cmp
out
retf
mov
stos
xchg
inc
ret
push
enter
repz
scas
ds
pop
imul
pop
stc
dec
add
mov
std
dec
std
mov
mov
push
dec
push
add
adc
bound
ins
and
cwde
(bad)
imul
mov
fadd
dec
sub
mov
push
popf
xchg
add
stos
mov
ficomp
cmps
mov
sbb
xor
jmp
jl
sub
inc
sbb
daa
fcomp
cmp
add
mov
or
ins
fldlg2
xor
out
cmp
aas
mov
scas
pusha
jb
dec
sub
inc
jno
mov
push
shr
(bad)
out
jge
fs
test
mov
mov
add
shl
(bad)
push
fwait
xor
xchg
and
icebp
out
scas
cmp
push
jmp
pop
iret
clc
call
cs
cwde
add
push
std
dec
sub
mov
lods
pop
fld
push
imul
je
mov
pushf
push
retf
mov
fs
cmp
into
xchg
daa
test
add
sar
ret
mov
nop
jne
rol
out
jae
push
inc
movs
pop
js
enter
loop
div
in
scas
test
cmp
out
jbe
add
mov
gs
inc
jmp
pusha
int3
sar
rcr
inc
in
pop
dec
bound
sbb
data16
xor
mov
xor
clc
mov
aam
gs
xor
cli
inc
xchg
data16
test
xor
xchg
repz
retf
aad
adc
mov
cs
add
sahf
pop
js
pop
mov
dec
push
mov
(bad)
mov
or
mov
call
inc
adc
add
enter
sbb
sbb
cmp
out
jmp
fcomp
pop
and
arpl
cld
mov
shl
hlt
or
data16
rol
test
arpl
mov
mov
jmp
sub
inc
in
pop
daa
cmp
aaa
xor
lods
xor
cld
sbb
add
sbb
add
sbb
(bad)
and
call
stos
cmp
inc
cmps
jp
xchg
call
xor
hlt
mov
int3
inc
cmps
popf
mov
cmp
cmps
adc
repnz
mov
ins
neg
sbb
xchg
repnz
pop
fadd
jp
movs
and
push
mov
retf
retf
cmp
pop
fdiv
add
cmp
cmp
push
cmp
add
sbb
sub
inc
inc
nop
adc
mov
fadd
test
mov
dec
(bad)
js
js
pop
lds
in
ret
xchg
jb
out
mov
dec
test
xchg
mov
mov
jns
mov
outs
xor
(bad)
jmp
dec
pop
lods
mov
dec
push
sub
fisubr
sbb
xchg
sub
inc
mov
mov
mov
in
or
mov
ins
push
add
or
or
push
pushf
or
sbb
sti
and
das
push
cdq
ror
or
mov
imul
cmps
cmp
adc
mov
inc
jne
mov
loop
in
dec
mov
enter
(bad)
cli
(bad)
push
icebp
pop
inc
cmp
cmp
cmp
fwait
ret
pop
cmp
add
mov
pop
sub
xor
cmps
gs
nop
aaa
add
push
ins
int
call
jmp
pop
xchg
xchg
dec
loope
mov
push
out
fnstenv
test
daa
cmps
ins
addr16
movs
lods
xor
not
xchg
mov
cmp
adc
fdivrp
addr16
pop
je
outs
and
retf
mov
dec
int
cmp
and
xor
sbb
ins
mov
add
add
inc
rcr
push
xchg
xlat
jo
sbb
loopne
shr
fwait
outs
xchg
loope
push
idiv
xchg
or
mov
ins
scas
xchg
test
test
pop
jmp
pop
inc
(bad)
repz
sbb
and
sub
mov
jl
xchg
sahf
inc
pop
scas
ja
loope
mov
adc
xor
push
mov
cmps
push
inc
pushf
and
mov
xor
add
xchg
add
jle
and
pop
loopne
sar
mov
loop
hlt
pushf
pop
xor
mov
sti
xchg
jns
mov
xchg
loope
inc
jle
lahf
sub
imul
inc
jg
inc
inc
jge
sahf
cs
jns
ja
imul
ja
cmc
and
dec
(bad)
daa
cs
add
sbb
mov
into
xor
xchg
mov
iret
fcom
loope
addr16
popa
mov
mov
hlt
pop
jmp
mov
scas
inc
pop
lods
sub
aad
gs
cmc
mov
cmp
shr
out
cmp
push
lea
inc
pop
stos
jne
pusha
nop
mov
ret
pop
ds
repz
rol
pop
dec
fsub
pop
jge
mov
pop
gs
inc
mov
call
call
add
dec
cli
mov
xchg
mov
mov
rcr
repnz
inc
in
mov
scas
aam
outs
inc
mov
not
add
shl
ret
pop
cwde
and
popa
fidiv
jge
(bad)
xor
shr
rol
and
mov
sbb
pop
mov
xchg
adc
push
data16
mov
adc
test
inc
inc
sub
das
jecxz
rol
out
leave
mov
in
mov
mov
add
loope
test
popa
leave
push
cmps
dec
pop
aaa
ret
push
retf
and
sub
inc
inc
in
xchg
mov
dec
sbb
sbb
leave
pop
mov
add
or
cmp
mov
ins
adc
jge
cwde
mov
lahf
cli
test
pushf
inc
(bad)
pop
je
fild
ret
cdq
lock
mov
sar
mov
xchg
pop
xchg
mov
push
pop
nop
cmps
icebp
push
pop
cld
pushf
mov
xchg
xchg
and
sbb
dec
(bad)
(bad)
sti
inc
loopne
dec
sub
mov
dec
jle
imul
fs
das
mov
and
xor
add
sub
xchg
mov
(bad)
aas
xchg
idiv
pop
dec
daa
mov
loope
rol
xchg
jge
jmp
cmp
je
cdq
movs
scas
and
js
mov
lock
fld
pop
sti
dec
not
mov
and
push
call
mov
sub
xor
xor
popa
mov
mov
mov
mov
stos
sub
xlat
xchg
sbb
push
inc
xchg
(bad)
fbld
cmps
inc
xchg
xchg
mov
xchg
adc
les
movs
movs
mov
mov
jmp
pop
into
sub
repz
outs
mov
sbb
mov
pop
fyl2xp1
arpl
add
inc
sub
aaa
mov
mov
cmps
jae
xchg
or
test
(bad)
pushf
pop
xchg
mov
dec
outs
push
mov
xor
ret
pushf
inc
jmp
out
pop
retf
dec
mov
fsubr
sub
xchg
mov
repz
cmps
push
xchg
jns
xor
sbb
dec
push
pop
pop
xchg
dec
pop
jl
or
sbb
lods
outs
retf
movs
enter
cmp
and
jmp
mov
pop
xchg
inc
std
(bad)
jecxz
mov
je
adc
jmp
sbb
mov
mov
cld
fwait
mov
mov
jecxz
jmp
test
pop
into
dec
pop
cmp
fcmovnb
dec
stc
pop
push
push
outs
fst
pop
inc
loopne
or
mov
aas
into
ja
mul
ffreep
add
into
sub
adc
mov
pop
je
jnp
pushf
cmp
call
or
rcr
stc
push
jae
fwait
js
mov
mov
cdq
push
push
in
xchg
pop
loopne
mov
add
mov
inc
sahf
xchg
mov
add
repz
push
mov
call
test
sub
bound
stos
jo
push
xchg
sahf
lods
mov
les
push
inc
aaa
cmps
push
cmp
sahf
add
add
mov
jne
xchg
mov
and
std
lods
lahf
inc
(bad)
rcr
jp
jnp
jbe
xchg
ret
jns
jmp
adc
xchg
mul
repz
ror
das
rcr
sbb
cdq
iret
lock
mov
push
fcomp
and
jmp
loop
je
xchg
pop
dec
lahf
xor
xchg
xchg
xlat
adc
fild
dec
pop
push
in
or
sbb
sbb
enter
js
xchg
add
add
mov
add
sub
xchg
int3
xchg
sbb
mov
push
icebp
shr
xor
push
cmps
sbb
push
xlat
cli
movs
ret
adc
(bad)
cmp
imul
(bad)
cmc
jae
or
addr16
ins
add
mov
or
jnp
mov
fstp
jae
into
inc
adc
mov
mov
scas
dec
add
dec
sbb
std
xchg
aad
ret
bound
inc
mov
outs
mov
jmp
cs
out
ins
(bad)
mov
gs
mov
std
lds
mov
addr16
dec
fstp
cmp
dec
nop
xor
push
cdq
adc
cli
jbe
push
mov
mov
push
into
jae
jle
hlt
inc
or
je
test
mov
in
jns
mov
xchg
or
xor
mov
mov
pop
fisubr
jb
je
mov
adc
push
xor
fld
sbb
push
cmps
pop
dec
xchg
xchg
mov
adc
jmp
mov
adc
(bad)
fmul
push
cdq
pop
jge
xor
push
adc
test
xchg
jecxz
mov
inc
leave
dec
adc
daa
nop
inc
mov
mov
adc
pop
xchg
(bad)
xchg
outs
xor
jnp
cmc
cwde
cmp
dec
sub
imul
shl
dec
shl
mov
(bad)
mov
pop
or
mov
mov
cli
das
pop
or
repz
call
inc
and
mov
fidivr
leave
js
inc
pusha
adc
push
cmp
arpl
dec
dec
xchg
stos
add
mov
les
dec
ret
jns
push
(bad)
mov
cmp
out
push
(bad)
jmp
ret
arpl
xchg
js
out
fild
mov
gs
imul
sbb
pop
sahf
inc
push
cmp
mov
sub
scas
es
push
fbld
popf
int
dec
add
aad
sbb
xchg
ss
adc
add
add
jmp
jg
inc
push
popa
mov
out
cld
ins
mov
xor
sar
xchg
imul
push
dec
mov
int
repz
pop
bound
retf
pop
push
pminub
into
jnp
push
jg
pop
mov
dec
pop
push
scas
retf
dec
sub
addr16
add
ja
mov
mov
xchg
sub
push
imul
add
or
leave
clc
xchg
pop
mov
imul
push
xchg
stos
inc
and
loope
jae
jne
xchg
cmps
cli
pop
ficomp
xchg
rcl
fcmovbe
inc
je
mov
sub
cmc
aad
inc
les
jno
jbe
inc
pop
push
cmc
mov
fimul
mov
movs
repz
dec
jae
(bad)
xor
inc
pop
pop
mov
stos
and
pop
adc
cs
xchg
movs
sub
xor
in
push
mov
sbb
fild
test
dec
jmp
fs
jmp
sub
lock
mov
adc
fist
jecxz
xor
inc
or
fdivr
cmp
pop
push
pop
jp
push
fs
push
inc
push
mov
push
cli
pop
ror
inc
add
push
ins
push
xor
cmp
xchg
mov
jb
retf
push
or
cmc
xchg
pop
leave
idiv
arpl
fwait
dec
fmul
mov
cmp
(bad)
mov
mov
add
rol
nop
icebp
fsubr
test
icebp
xor
or
jnp
jl
outs
ins
and
ins
aaa
dec
cmps
les
dec
in
jnp
bnd
pusha
add
add
add
mov
stos
ja
aad
inc
mov
jl
fchs
push
int3
retf
push
out
sbb
test
loope
sahf
dec
cmps
jmp
retf
adc
imul
cwde
test
adc
repnz
cmp
popf
fisubr
xchg
jl
dec
adc
and
sub
xor
pusha
mov
cmps
mov
cli
or
jae
std
sbb
and
mov
test
lea
xchg
cmp
cmp
and
(bad)
fadd
mov
and
imul
sti
inc
xchg
int
pop
jmp
push
push
repnz
mov
xchg
sbb
test
mov
mov
mov
call
and
aas
push
xchg
(bad)
fisub
ins
test
and
(bad)
fwait
cwde
sbb
aad
rcr
jae
sbb
adc
xchg
and
call
mov
jno
adc
in
jmp
leave
jbe
dec
rol
xlat
bound
mov
adc
imul
div
jmp
xor
and
ret
cli
iret
jnp
sbb
adc
std
imul
(bad)
dec
sub
fwait
hlt
pop
jb
pop
fld
pop
jb
mov
mov
sahf
sub
mov
cmps
ds
push
pop
loope
loope
into
out
popa
sbb
fisubr
hlt
mov
test
fsubp
dec
or
cli
mov
xchg
sbb
mov
pop
mov
aad
xchg
aad
inc
dec
mov
push
sub
inc
loope
push
push
push
xchg
and
mov
sbb
imul
or
inc
idiv
and
shl
ins
fisubr
cmps
or
cwde
loope
xor
jecxz
stos
inc
sbb
js
pop
sar
je
mov
repz
mov
sti
test
or
mov
adc
dec
stos
mov
cmp
dec
(bad)
shl
dec
loop
inc
and
or
test
fnstsw
js
xlat
es
adc
and
cmp
and
inc
je
push
aad
pop
mov
pop
jae
out
sbb
add
rcr
xchg
test
cld
or
hlt
adc
xchg
cdq
ret
(bad)
dec
imul
lock
push
(bad)
push
or
es
bound
stos
lods
ret
push
sub
add
mov
mov
sub
dec
adc
adc
inc
addr16
pop
push
xchg
cmp
in
fwait
loope
add
push
dec
mov
call
popf
push
cdq
lahf
in
mov
or
imul
in
je
mov
arpl
stc
imul
xlat
imul
fstp
daa
dec
ret
push
rcr
adc
push
test
fist
jmp
sbb
sub
pop
ja
(bad)
pop
test
movs
dec
adc
sub
adc
fnstsw
mov
push
pop
cmps
dec
xlat
pushf
aad
xchg
jmp
jge
in
fdiv
mov
bound
loope
stos
into
out
push
cwde
mov
pop
jmp
sub
push
sub
cmovp
cmp
je
xchg
mov
aas
pop
int
loope
jnp
xchg
inc
outs
or
sub
cmp
imul
sbb
es
cli
stos
test
int
jb
jg
jl
push
repz
sub
or
loopne
add
push
scas
scas
xchg
adc
pop
jl
xchg
cmp
jno
sbb
xlat
gs
sub
(bad)
repnz
les
pop
jg
movs
js
adc
cmp
inc
in
cmp
inc
jmp
add
or
add
lods
dec
push
lods
sub
bound
inc
sti
lods
out
popf
in
pusha
hlt
popa
pop
push
mov
pusha
sbb
inc
push
repz
mov
mov
inc
loope
xchg
cmp
stc
cmp
out
mov
cli
das
stc
push
push
ss
scas
arpl
sbb
jl
mov
jg
xor
push
mov
test
sbb
and
std
outs
bound
retf
inc
adc
sub
sbb
lods
or
mov
jecxz
loope
sahf
lock
cwde
pop
je
mov
mov
inc
sti
aam
push
loop
pop
and
fdiv
cmp
sbb
pop
pop
mov
lock
stos
dec
not
das
push
xor
es
ja
fst
pop
das
mov
in
xchg
imul
push
push
jno
mov
xor
adc
sbb
mov
push
test
test
xor
idiv
fcomp
call
mov
inc
daa
aad
jmp
stc
adc
sbb
ds
jmp
inc
mov
clc
adc
dec
in
(bad)
out
ds
cmp
sub
dec
popf
jo
dec
xchg
iret
push
jmp
popw
loop
or
push
fs
iret
and
sbb
or
add
ins
lahf
iret
pushf
aas
mov
pop
mov
dec
mov
mov
add
push
scas
cli
shl
or
xchg
adc
hlt
cwde
xchg
sti
cmp
mov
push
(bad)
inc
std
xor
push
(bad)
not
inc
in
inc
add
cmp
dec
adc
retf
dec
push
out
ins
loop
jg
ficom
fs
mov
es
xor
(bad)
les
dec
xchg
dec
inc
aad
inc
mov
mov
das
push
push
retf
out
push
call
pushf
dec
fistp
in
jmp
or
adc
push
xchg
mov
dec
jp
cwde
adc
clc
outs
outs
mov
icebp
cmp
sbb
sub
or
jle
dec
cmp
retf
mov
ror
gs
or
inc
jl
mov
mov
sbb
push
sub
dec
fs
and
(bad)
and
inc
push
fwait
push
fdiv
adc
mov
xor
pop
stos
stos
mov
pop
mov
aam
mov
stc
outs
js
(bad)
dec
shl
jmp
pop
dec
sar
in
sub
pop
push
add
adc
daa
dec
in
(bad)
retf
mov
lahf
lea
ror
dec
push
sbb
xor
add
inc
rol
gs
push
outs
(bad)
out
pushf
adc
sbb
scas
dec
in
cld
data16
enter
mov
or
leave
inc
hlt
movs
mov
addr16
icebp
sbb
shr
loop
jbe
jle
pop
and
and
sbb
dec
fldcw
and
outs
daa
push
xchg
stos
call
xchg
add
(bad)
jns
push
sbb
add
adc
or
rcl
scas
dec
jl
mov
sahf
(bad)
cwde
aas
mov
inc
addr16
retf
mov
lds
icebp
add
jns
lods
test
adc
cmp
aam
xor
aad
shr
mov
pop
aaa
mov
ret
add
cmp
addr16
retf
sub
sti
sbb
iret
add
aas
jecxz
push
je
jl
sub
jae
jl
mov
gs
mov
shl
inc
xor
xchg
(bad)
add
or
mov
in
mov
repz
(bad)
mov
loopne
movs
ret
sbb
sar
pop
inc
adc
jo
inc
pop
ss
adc
push
imul
loop
pushf
out
push
imul
sub
mov
addr16
pushf
ja
rcl
mov
push
cmp
(bad)
call
inc
pop
test
xchg
mov
cmc
out
aaa
enter
icebp
inc
mov
cdq
cmc
add
arpl
mov
es
pushf
movs
jmp
add
inc
icebp
shl
jl
inc
popa
adc
cmps
inc
or
mov
dec
iret
retf
sub
iret
and
jbe
mov
(bad)
adc
xor
mov
inc
sahf
cli
and
xchg
pop
bnd
jb
ja
sub
jmp
mov
out
loop
sub
call
fisub
movs
lods
(bad)
push
outs
mov
sbb
pop
(bad)
imul
or
sbb
jmp
pop
mov
stos
dec
clc
rol
repz
inc
and
sbb
and
mov
xchg
sub
adc
in
add
mov
pop
inc
ins
fldcw
mov
test
mov
mov
cli
inc
xor
jmp
(bad)
cmp
cli
test
in
xchg
dec
retf
dec
pop
or
adc
adc
mov
pop
mov
test
sahf
loop
ret
push
push
jmp
cmp
lea
sar
imul
mov
test
arpl
imul
movs
sbb
pop
fwait
xchg
sar
mov
mov
shl
nop
cmc
les
sbb
mov
adc
and
aaa
or
dec
(bad)
adc
stos
xor
imul
sub
inc
mov
add
add
adc
sbb
(bad)
push
or
mov
xor
inc
stc
cmps
loope
mov
sbb
ins
xor
(bad)
in
mov
cld
adc
push
mov
popf
in
dec
fwait
inc
outs
mov
mov
xchg
stos
cmc
addr16
mov
jne
jne
xor
jmp
iret
sbb
aas
inc
cs
or
nop
mov
cli
jnp
aam
mov
pop
(bad)
sbb
arpl
adc
dec
adc
jne
test
xor
outs
(bad)
ficom
xlat
fs
mov
cmp
movs
ja
(bad)
mul
mov
jbe
loopne
adc
lock
inc
mov
je
push
(bad)
push
es
mul
inc
fisubr
sbb
mov
ret
lahf
xor
push
inc
sbb
aas
sub
and
aas
shl
jmp
aaa
gs
scas
pop
adc
dec
(bad)
sti
sbb
xchg
jnp
jp
and
mov
fs
in
pop
int3
std
lods
cmp
jns
sti
lahf
into
cmp
pop
movsx
cdq
hlt
add
lea
stos
mulps
ret
pop
xchg
cmp
pop
jp
inc
adc
mov
call
jg
aam
jae
or
mov
popa
outs
xchg
jno
sbb
jmp
test
cmp
mov
leave
jmp
jl
push
mov
xchg
xchg
inc
rcr
out
das
xchg
pop
lea
sbb
test
outs
and
rcl
xor
sub
(bad)
int3
inc
lock
addr16
mov
jne
mov
mov
stos
pop
fdivp
add
rcr
push
(bad)
and
pop
xor
mov
js
or
mov
push
xchg
test
(bad)
xchg
xor
pusha
jp
outs
les
cmps
push
call
jmp
or
push
pushf
fst
cmp
and
icebp
out
ret
push
mov
retf
sbb
int
loope
je
sar
and
mov
nop
and
lock
into
sbb
xor
and
adc
jmp
scas
sub
jnp
fwait
dec
and
push
arpl
pop
jp
xlat
jecxz
mov
pop
inc
test
inc
movs
inc
xchg
and
lds
movs
scas
add
inc
lods
fimul
sbb
cmp
mov
fsubr
xor
sub
adc
add
ins
jp
xor
fst
lea
clc
cs
arpl
push
(bad)
sub
pop
test
mov
pop
in
(bad)
mov
hlt
jmp
pop
mov
ins
sub
xchg
shl
push
rcl
pushf
or
imul
stos
push
sbb
mov
sbb
lods
fstp
dec
stos
fiadd
jmp
js
ds
push
test
inc
inc
jnp
cmps
mov
bound
ins
inc
sub
ss
sbb
imul
stos
add
pop
pop
call
jmp
add
outs
shr
mov
mov
sub
fcom
fincstp
or
movs
xchg
mov
call
dec
in
ficom
or
fucompp
jmp
sahf
aas
pop
adc
pusha
cld
jo
adc
cmp
add
hlt
jb
ja
clc
ss
ss
push
pushf
and
dec
dec
xchg
ins
dec
mov
jnp
test
imul
dec
retf
out
inc
mov
inc
retf
pop
pusha
dec
lds
icebp
mov
lahf
push
mov
hlt
jb
pusha
scas
xchg
stos
les
inc
jne
test
loopne
mov
dec
outs
sbb
sbb
call
add
cwde
cmp
pop
push
jae
cwde
nop
call
setae
inc
addr16
std
push
cmp
push
(bad)
imul
popf
push
xor
sub
fwait
nop
clc
xor
call
push
dec
pop
push
rcr
cdq
test
mov
stos
push
aad
popa
push
call
jp
pushf
mov
push
cmps
mov
sbb
in
fldenv
mov
clc
dec
add
mov
rcl
sbb
jae
outs
je
and
mov
sbb
lahf
mov
add
out
ss
and
or
xchg
inc
pusha
sahf
aam
xor
sub
(bad)
xchg
pop
pop
scas
dec
lds
mov
popf
jnp
clc
fild
mov
inc
loope
xchg
das
cmp
dec
mov
imul
xlat
xor
adc
mov
and
add
jnp
adc
fwait
ins
cmp
mov
aad
fdivp
or
sbb
pop
sbb
pop
xchg
je
adc
inc
xchg
xor
and
mov
inc
enter
ins
push
push
fisubr
xchg
ret
pop
mov
loopne
xchg
out
xor
lds
mov
push
pop
loope
xchg
daa
inc
fadd
icebp
hlt
jmp
jle
fdiv
jnp
cmp
dec
into
call
imul
adc
cmp
inc
ret
(bad)
xor
cmp
xor
scas
and
ds
ds
jmp
pop
dec
in
mov
mov
add
enter
push
xchg
addr16
jg
test
mov
lds
lods
xchg
into
sub
cmc
add
fdivp
test
fisub
loop
inc
call
push
jmp
push
inc
rcl
push
lea
dec
xchg
mov
mov
into
fs
adc
call
cld
daa
or
cmp
data16
xchg
dec
pop
mov
daa
pop
lahf
enter
test
jl
lods
jge
mov
cmps
dec
(bad)
test
mov
call
mov
std
(bad)
mov
mov
into
push
cmp
test
sbb
sub
in
pop
jns
xor
(bad)
mov
sbb
pop
sbb
jmp
inc
mov
inc
in
(bad)
xchg
and
stc
mov
dec
hlt
cmps
std
ins
out
add
mov
cdq
sub
xor
ret
std
shl
inc
stos
mov
sub
lea
cmp
mov
inc
pop
push
test
sbb
jbe
neg
cmps
mov
push
lds
add
sahf
or
mov
inc
in
mov
fdivrp
test
shl
add
push
xlat
nop
sar
fild
aaa
retf
jnp
imul
inc
mov
mov
sbb
aas
sbb
iret
dec
and
in
aad
dec
rcr
push
je
cmp
jae
mov
int3
push
out
(bad)
js
fadd
jno
out
sbb
sub
stos
push
adc
cmp
xchg
stos
call
pushf
add
js
and
mov
mov
mov
cmps
xor
lods
imul
(bad)
in
test
sub
ss
and
jecxz
fwait
ds
or
popf
mov
cwde
inc
sbb
jno
in
sbb
bound
inc
aas
push
aaa
push
mov
mov
out
inc
mov
test
clc
push
lar
iret
jmp
jno
js
dec
cmp
cli
cmp
idiv
add
fs
adc
and
jmp
xor
imul
cmp
call
dec
add
lahf
sbb
mov
xchg
sahf
xchg
dec
pop
icebp
imul
aas
mov
jle
jns
out
pop
or
aas
xchg
or
dec
mov
add
dec
push
ja
arpl
fistp
or
jecxz
lahf
ja
out
xor
mov
mov
call
ret
cmc
sbb
fld
popf
mov
push
test
call
inc
or
pop
inc
inc
mov
call
rcr
or
shl
pop
sbb
xor
mov
iret
aas
(bad)
sbb
ja
lahf
or
adc
adc
lea
jl
fs
sub
rol
xchg
ret
fld
test
ja
mov
jp
xchg
popf
mov
xchg
retf
imul
enter
fiadd
or
push
dec
mov
push
pushf
cmp
out
adc
sbb
ss
inc
jb
mov
adc
pop
xlat
aaa
jg
scas
imul
push
jae
(bad)
mov
shr
pusha
fist
xchg
les
(bad)
mov
rcr
mov
in
mov
xchg
mov
jmp
stos
cmps
push
clc
pop
cld
dec
push
inc
mov
cmc
jae
add
cmp
sbb
jbe
jbe
mov
fld
cmc
sub
cmps
push
ss
sub
cwde
sub
lods
push
inc
or
add
push
fsub
fisttp
pop
cmp
shl
ret
cmps
je
out
out
ins
xchg
inc
mov
mov
sub
outs
sahf
test
adc
dec
dec
in
and
cmps
xor
arpl
ss
pop
ins
mov
gs
push
out
xchg
retf
mov
push
icebp
pop
fmul
jo
out
adc
retf
pop
xor
mov
retf
or
ins
dec
lods
push
add
mov
rcr
xor
repz
push
dec
cwde
sub
popf
in
xchg
int3
mov
adc
xrelease
outs
mov
xchg
out
fstp
xchg
mov
repnz
jmp
mov
outs
stos
sbb
cmp
jmp
ins
movs
es
mov
retf
xchg
retf
addps
add
test
add
mov
add
gs
adc
movs
loope
pop
or
sti
xchg
aas
pushf
sbb
sub
out
mov
movs
ja
(bad)
loope
sbb
xor
test
pop
xchg
jmp
mov
and
(bad)
cmp
push
stos
or
test
sbb
jmp
and
sbb
jmp
mov
aas
fstp
popf
cmp
cmps
(bad)
shl
pop
xchg
fdivr
arpl
jno
stc
out
mov
inc
test
jg
push
retf
push
in
pushf
or
out
sub
rcl
xlat
sbb
outs
inc
aad
lods
ror
jae
dec
mov
sub
repz
or
inc
mov
or
xchg
ds
dec
cld
shl
cdq
fnsave
sbb
sub
xor
adc
or
sbb
fcom
fiadd
ins
sahf
jno
fwait
or
xchg
pop
and
sar
mov
outs
xchg
lds
mov
shl
movs
pop
xchg
push
into
cmp
popa
fld
add
cs
js
xor
cdq
dec
adc
jge
rcr
jl
clc
sub
jbe
adc
aas
mov
in
arpl
jg
mov
cld
adc
jmp
pop
arpl
arpl
movs
fnstsw
sahf
ret
jecxz
jl
jmp
mov
push
jp
xchg
cmp
(bad)
xchg
mov
cld
sub
push
rcl
arpl
inc
xchg
dec
push
pop
mov
outs
out
int
test
jb
fs
mov
jae
ds
pop
(bad)
add
jg
cdq
push
sbb
push
push
test
lods
outs
or
jno
int3
loope
popf
int
(bad)
jne
jnp
jg
mov
dec
jmp
xor
hlt
cld
sub
dec
mov
mov
lods
es
(bad)
pop
addr16
(bad)
mov
sbb
ja
sbb
imul
lahf
inc
push
or
test
pushf
sbb
stos
push
retf
mov
adc
ja
out
aaa
xchg
and
push
rcl
add
data16
lahf
push
int
add
inc
push
js
jl
cmps
fisub
xchg
mov
push
mov
pop
mov
mov
scas
scas
stc
sub
inc
add
sbb
fsub
mov
inc
push
das
retf
dec
out
inc
cmp
jo
push
add
popf
mov
out
mov
sbb
sub
and
pop
retf
sbb
sahf
addr16
sub
mov
xor
aaa
pop
xlat
enter
jmp
cmp
test
cmps
fldenv
test
xchg
dec
popf
mov
jmp
icebp
adc
inc
jnp
pushf
repnz
rol
jnp
fiadd
stos
push
adc
push
fcom
jbe
fs
cmp
outs
mov
ret
ss
out
into
aad
mov
jp
jp
(bad)
cmp
jle
pop
lea
scas
push
iret
arpl
js
lods
adc
sbb
push
jge
lods
mov
lods
mov
sbb
pop
call
loop
inc
jmp
jmp
add
cmps
clc
ss
inc
jo
test
leave
mov
xchg
test
or
(bad)
jmp
inc
inc
mov
pop
xchg
mov
xlat
inc
call
inc
push
pop
inc
cld
xor
out
adc
jb
dec
imul
sub
idiv
sub
clc
hlt
mov
sahf
cmc
inc
(bad)
addr16
bound
dec
xchg
xchg
dec
loop
jae
int3
fld
mov
push
mov
fndisi(8087
clc
clc
call
push
sti
push
shl
shl
inc
jae
jns
or
dec
lods
inc
sbb
mov
and
movs
lea
jae
mov
aaa
scas
sbb
ret
popf
sbb
xchg
mov
sti
jmp
and
inc
popa
fidivr
cmp
sub
push
and
loopne
jo
lods
(bad)
scas
jp
mov
loope
(bad)
fdivr
pop
data16
cwde
ins
in
outs
in
or
xor
fadd
and
dec
lahf
sub
cdq
ins
sbb
mov
call
rol
sub
and
inc
das
push
xor
or
xor
inc
jg
movs
mov
daa
daa
jno
rol
neg
pop
mov
mov
inc
test
in
sub
retf
xchg
pop
cmps
xchg
pop
and
cwde
fcomp
jg
jmp
call
jmp
xor
add
mov
scas
sbb
inc
jne
adc
and
xchg
cmp
cwde
jo
retf
sahf
aad
adc
push
in
xchg
inc
sbb
mov
ror
out
mov
mov
(bad)
cwde
js
in
mov
mul
jnp
call
stc
rcr
lods
test
outs
out
pop
cmp
popf
and
jnp
push
pop
inc
mov
pushf
mov
ret
loope
mov
pop
inc
push
push
mov
aam
push
fdivr
retf
cwde
fnstcw
out
mov
rcl
repnz
je
lea
neg
mov
push
jmp
push
fstp
mov
(bad)
jp
mov
cld
(bad)
stc
in
(bad)
jno
test
inc
clc
jbe
xor
sbb
in
loop
cld
pop
jp
dec
mov
pop
stos
js
push
popf
cmp
sar
mov
and
sbb
popf
and
jge
rcl
mov
call
and
fdiv
fwait
(bad)
xchg
retf
test
xor
fsubr
mov
sbb
cdq
lahf
scas
xor
(bad)
(bad)
out
iret
popf
ins
pop
mov
xor
into
aam
rcl
push
jnp
shr
mov
or
mov
fisub
cmps
jmp
arpl
sub
cmp
stc
pop
jnp
push
xor
mov
inc
sahf
stos
sti
adc
jmp
jnp
jle
cwde
les
mov
sbb
retf
xchg
jl
movs
cmps
test
jb
mov
or
stc
popf
push
push
mov
inc
nop
pop
lock
and
or
push
cmp
dec
and
mov
inc
(bad)
aas
movs
mov
push
and
inc
adc
stos
push
int
out
push
scas
push
sbb
and
(bad)
lods
sbb
xor
outs
jg
cmps
ja
lea
adc
add
sbb
aas
movs
jp
movs
xchg
mov
xor
retf
std
push
pop
mov
push
sub
xor
popf
sub
cmps
dec
pop
pop
mov
cmps
int
or
cs
push
dec
jb
call
sub
fidiv
aam
pop
repz
xor
sub
sbb
lea
pusha
push
push
mov
dec
mov
mov
fwait
jge
int
mov
inc
mov
xchg
sbb
lods
sbb
aam
xchg
cld
enter
mov
xor
rcl
mov
sbb
xor
jbe
addr16
lods
sbb
rcr
sar
add
fisubr
push
pop
daa
pop
mov
xchg
ins
inc
jge
mov
(bad)
sbb
int3
mov
in
sbb
fsubr
mov
mov
sbb
lock
jp
js
movs
mov
jle
xor
inc
mov
popa
call
or
jmp
and
mov
dec
push
push
mov
les
jecxz
test
add
and
and
pusha
sub
pop
mov
neg
scas
push
xchg
fs
sti
dec
jmp
imul
out
test
out
xor
loop
or
sahf
lds
arpl
xchg
scas
repz
xchg
mov
adc
fnstsw
add
inc
scas
aaa
pop
arpl
mov
int
ffreep
jns
fstp
add
jno
mov
test
fbld
push
xchg
xchg
xchg
sbb
loope
xor
pop
(bad)
push
inc
push
mov
and
les
xor
enter
jne
movs
rol
push
mov
xchg
mov
adc
hlt
pop
out
inc
stos
stos
jb
outs
mov
sub
nop
shl
or
sub
cmp
mov
stos
pop
cwde
test
fiadd
and
xor
je
or
pop
push
stos
or
add
xchg
stos
test
push
pusha
clc
sar
jmp
push
fild
xchg
pop
retf
mov
idiv
in
outs
cmc
mov
rcl
test
(bad)
mov
dec
mov
push
cmp
fcmove
repnz
js
jns
pop
jp
pushf
pop
pop
ins
mov
push
icebp
pop
icebp
rcl
mov
push
jecxz
sbb
mov
ins
jbe
jg
mov
pop
nop
stos
test
inc
push
outs
xchg
retf
in
xchg
jmp
mov
daa
scas
jge
mov
cmp
imul
push
aam
lods
or
push
(bad)
cmps
lock
mov
hlt
cmp
(bad)
repnz
fsincos
es
mov
out
add
sub
pop
and
fldcw
jecxz
or
(bad)
dec
jae
or
loop
lods
add
jle
lahf
or
xor
scas
lahf
sub
xor
cmc
mov
jmp
pop
test
dec
repz
sti
pop
xchg
pushf
(bad)
clc
das
scas
inc
inc
xchg
cmp
out
loop
jp
fidiv
js
adc
push
jmp
or
jne
jl
pusha
pop
or
int3
push
std
lock
jp
cmc
cmp
jno
mov
imul
xlat
mov
sbb
dec
hlt
int
push
shr
fcomp
popa
jg
inc
sbb
data16
push
xor
xlat
test
mov
ja
xchg
stos
mov
inc
adc
sbb
rcr
or
not
inc
in
jl
inc
xchg
outs
add
push
and
call
add
ficomp
pop
dec
shr
or
(bad)
pop
mov
neg
fmul
aam
bound
push
addr16
jmp
sahf
repnz
rol
or
xlat
xchg
out
mov
cdq
ins
add
xchg
mov
mov
lock
cmc
(bad)
fistp
rcr
fs
ror
pop
jb
xchg
pushf
stos
adc
in
jg
mov
mov
cmp
adc
or
ja
pop
push
ret
scas
or
rcr
retf
rcl
out
push
jbe
dec
fld
xchg
outs
call
hlt
std
pop
ret
inc
mov
cdq
pop
inc
mov
aad
movs
cli
les
mov
dec
retf
push
mov
cmp
xchg
mov
and
xor
das
inc
jnp
jbe
push
out
movs
sahf
xor
fcom
xchg
inc
dec
jns
cmc
sub
jl
stos
mov
push
inc
pushf
or
jmp
push
aas
div
sub
push
jae
mov
data16
mov
add
fsub
std
movs
mov
lods
enter
ret
xlat
out
imul
push
in
cmc
ss
sbb
call
push
and
and
scas
mov
in
dec
loopne
or
add
(bad)
mov
inc
je
push
sbb
adc
xchg
pushf
arpl
or
scas
xchg
adc
outs
bound
jb
push
das
leave
loopne
aaa
iret
sbb
movs
mov
pop
mov
aad
lods
aad
cmp
xchg
pop
dec
shl
sbb
xor
clc
push
pop
push
cmps
retf
mov
jbe
int
cdq
hlt
push
dec
add
sub
lahf
das
ror
pop
sbb
div
sbb
dec
div
xchg
cmp
mov
imul
sahf
pop
mov
xchg
mov
mov
les
lahf
(bad)
out
mov
push
xor
lock
inc
iret
sub
(bad)
inc
clc
push
jle
pop
mov
inc
cmp
cdq
lods
stos
cmp
aam
fmul
push
add
sbb
jo
sbb
inc
arpl
add
and
std
shl
inc
int
pop
(bad)
imul
jb
xchg
fld
jmp
outs
xchg
mov
mov
pushf
lods
(bad)
sbb
lock
leave
cmp
pusha
jl
xor
cmp
int3
aad
into
push
imul
adc
or
sbb
or
out
pop
arpl
inc
or
adc
adc
xchg
imul
or
cmps
add
pop
push
xchg
pop
fistp
mov
into
clc
pop
push
cmc
fld
mov
pop
loopne
xchg
cmp
test
ds
xchg
cmp
int3
dec
daa
push
(bad)
or
cmp
ins
pop
cs
imul
rcr
mov
inc
ins
inc
add
pop
sub
popf
cmp
fnstcw
mov
ins
mov
(bad)
mov
mov
scas
mov
mov
mov
xor
int
cli
mov
inc
jge
mov
fsubr
mov
cmp
dec
jmp
cmp
xchg
pop
push
movs
js
push
mov
jmp
mov
gs
ja
ret
and
js
es
mov
cmps
adc
lods
test
js
mov
add
pop
xchg
jmp
dec
rep
push
pop
rcr
mov
loope
xchg
neg
lock
fwait
pop
inc
call
aam
(bad)
arpl
test
push
add
(bad)
(bad)
stos
and
ss
and
dec
or
cdq
stos
add
fs
pop
inc
leave
sbb
sub
lods
dec
inc
test
cwd
mov
xor
rol
ror
mov
jge
out
xchg
inc
es
repz
add
aaa
mov
icebp
cmp
in
(bad)
call
sub
je
dec
pop
adc
int
push
push
mov
mov
jg
mov
mov
add
xor
cmp
mov
jmp
inc
xchg
xor
mov
shl
mov
pop
push
jg
push
clc
mov
popa
and
push
xor
les
(bad)
test
aas
mov
(bad)
outs
adc
(bad)
mov
ins
in
sub
adc
fdiv
arpl
imul
sbb
mov
call
leave
fidivr
bound
sub
jbe
aas
mov
test
and
test
in
jmp
sete
arpl
pop
arpl
pusha
fistp
mov
mov
sub
out
inc
mov
inc
push
xchg
mov
imul
test
fimul
cld
jmp
cmp
pop
sbb
xor
jno
xchg
pushf
(bad)
dec
sbb
sbb
add
inc
outs
fs
xor
dec
mov
push
mov
mov
add
test
dec
pushf
mov
dec
arpl
fld
loopne
adc
xchg
dec
pop
in
mov
mov
jmp
cmps
fisub
lods
fstp
jo
jecxz
push
jnp
or
cmp
mov
inc
fld
inc
sub
sbb
jne
pop
xchg
ret
mov
sub
clc
pop
sahf
clc
push
cwde
aam
imul
add
mov
inc
push
mov
mov
push
push
in
mov
mov
sbb
scas
arpl
(bad)
mov
lahf
jg
jmp
arpl
stos
jl
in
lods
syscall
(bad)
mov
sti
cmp
inc
out
not
pop
push
call
adc
mov
sbb
pop
or
inc
pop
in
jp
sar
repz
push
push
and
add
sub
daa
lods
jp
(bad)
xchg
comiss
fmulp
mov
fadd
dec
nop
jne
cmps
jmp
mov
mov
aaa
aad
and
arpl
mov
pop
cmps
cmps
mov
cmps
aam
inc
sbb
xor
cld
das
adc
popa
icebp
or
or
and
int
adc
in
pop
in
dec
jbe
lds
or
pop
xchg
push
stos
or
pop
dec
pushf
dec
inc
adc
sbb
dec
cmp
xlat
jb
pop
dec
mov
mov
mov
shl
or
jl
mov
dec
sbb
inc
jmp
mov
call
aam
or
repz
pop
fild
aas
pop
stos
push
inc
push
mov
ror
lahf
mov
mov
jb
gs
div
das
nop
adc
pop
ins
test
sub
mov
(bad)
xrelease
repz
(bad)
fs
mov
jb
rcl
std
(bad)
xchg
push
adc
cmps
sbb
nop
stos
daa
pop
retf
in
icebp
pop
pusha
mov
daa
aaa
cmp
mov
inc
in
pop
xor
jge
xor
push
out
mov
lock
rcr
ret
int
dec
ja
in
das
pop
jl
mov
inc
inc
mov
mov
inc
nop
adc
lock
inc
mov
push
std
jns
mov
xchg
jb
cwde
pop
xor
fild
pushf
cdq
mov
xchg
mov
loope
mov
jge
mov
stos
sub
xor
int3
fbld
add
pop
mov
pop
pop
stos
retf
sbb
lea
xchg
rcr
(bad)
adc
pop
or
adc
ja
retf
mov
jmp
sbb
mov
jmp
fwait
xchg
mov
push
jmp
jbe
test
movs
cmp
je
mov
out
mov
mov
adc
xchg
iret
(bad)
pop
inc
sahf
ficom
jno
sbb
stc
dec
out
inc
jbe
stos
adc
cmps
outs
sbb
lods
ds
inc
into
in
cmp
dec
sbb
cmp
inc
inc
mov
sbb
push
sbb
xor
fild
add
fld
ret
push
lahf
mov
push
or
mov
lea
sbb
movs
nop
mov
push
std
fild
test
push
xchg
inc
not
add
(bad)
retf
dec
out
jle
inc
pushf
sub
cs
push
inc
pop
in
ret
das
pop
fdivr
cld
and
pop
(bad)
adc
add
adc
or
adc
adc
dec
cmp
xchg
iret
pop
fsubr
and
outs
inc
xor
bound
out
ja
outs
mov
call
xchg
sub
(bad)
nop
shl
inc
imul
adc
adc
add
cmp
inc
cmps
pop
sbb
mov
pop
leave
pop
test
jg
aam
push
inc
xor
xor
gs
add
jge
mov
inc
mov
mov
lahf
mov
sbb
pop
push
es
cs
cmc
dec
test
mov
and
movs
cmc
jae
inc
nop
mov
dec
jp
shr
hlt
aad
jl
mov
and
icebp
bnd
lahf
inc
pop
jns
scas
sbb
cmps
outs
aaa
adc
mov
(bad)
pop
(bad)
add
in
pop
fs
cmp
or
jge
mov
sbb
scas
jg
retf
call
xor
repnz
inc
add
adc
cld
cmp
loop
add
(bad)
add
dec
stos
test
push
adc
(bad)
std
outs
imul
loop
fnstsw
inc
add
pop
test
xor
dec
mov
mov
jge
aam
xchg
mov
addr16
jl
nop
or
mov
adc
das
aaa
daa
pop
retf
mov
xchg
movs
out
popf
sar
mov
test
addr16
cmps
test
push
or
pop
dec
cdq
enter
mov
lods
dec
pop
sub
hlt
int
retf
push
cmp
inc
add
aaa
ds
mov
sbb
push
pop
ret
inc
sbb
add
ins
and
mov
ins
call
mov
fimul
ja
ins
jmp
push
fst
scas
adc
pop
lea
outs
sbb
mov
xchg
rcl
dec
inc
mov
ror
or
vxorps
daa
jp
ds
inc
sub
fwait
xchg
inc
cmp
ins
call
pop
pop
in
add
cs
lods
jl
fwait
push
cmp
or
inc
(bad)
pop
out
pop
daa
mov
jp
(bad)
test
sub
enter
adc
push
scas
pop
add
out
stc
cmps
ret
jg
xchg
jns
dec
cmp
stc
xchg
repnz
out
and
xchg
pop
jnp
ja
je
mov
sahf
adc
cmc
popa
sti
mov
xchg
bound
outs
push
add
scas
es
cmps
dec
ja
push
sbb
adc
mov
xor
icebp
test
inc
inc
mov
jp
repnz
or
jecxz
xor
jecxz
(bad)
fs
lea
xlat
stos
aad
dec
fs
mov
add
int3
push
pop
and
adc
inc
xchg
cmp
push
stos
stos
(bad)
mov
add
sbb
leave
add
mov
ss
pop
mov
fcomp
mov
inc
movs
mov
dec
fsub
pop
leave
jne
jnp
popa
std
mov
mov
adc
fstp
test
dec
in
and
lock
sbb
lods
ins
hlt
jl
dec
and
sar
jl
and
jns
cmp
inc
test
aaa
jp
mov
nop
dec
cmp
dec
stc
rcl
cmps
(bad)
fs
or
xor
mov
mov
lahf
imul
ror
(bad)
das
pushf
iret
jbe
pop
and
inc
xchg
fucomp
dec
aam
adc
stos
mov
mov
pusha
jnp
xchg
movs
adc
iret
xlat
test
div
mov
adc
dec
cmp
je
cmp
push
js
xor
mov
push
out
mov
push
fdiv
int3
pop
arpl
mov
pop
lods
or
xchg
adc
mov
sbb
cli
fwait
inc
pushf
enter
jns
mov
(bad)
jle
mov
adc
xchg
sbb
out
in
aaa
icebp
dec
mov
mov
inc
mov
div
lods
clc
out
sbb
jmp
iret
sti
jnp
sub
pop
inc
js
push
lea
(bad)
dec
pop
cmp
xor
sub
sub
adc
dec
and
cs
mov
cld
push
add
jb
mov
inc
test
loop
fsubp
sbb
cmc
mov
test
jg
popf
(bad)
cmc
outs
pop
hlt
jecxz
mov
cmp
ja
jo
pop
aas
push
clc
not
sub
and
inc
mov
outs
add
mov
imul
out
pop
fndisi(8087
inc
jbe
and
or
or
popf
push
mov
into
pop
push
cdq
adc
scas
mov
in
inc
enter
add
fidiv
xchg
dec
out
test
in
mov
xlat
jp
mov
inc
pop
lods
(bad)
lods
pop
and
(bad)
rol
push
out
sub
icebp
cld
imul
jmp
pop
jl
ja
jno
pushf
xchg
test
call
pop
jge
ds
cmp
jl
call
inc
push
dec
push
mov
(bad)
lods
lahf
adc
jle
mov
cld
mov
jae
sar
add
imul
mov
aas
das
(bad)
stc
lods
iret
or
fidiv
xor
(bad)
stos
inc
(bad)
add
loopne
es
jmp
push
enter
clc
jno
push
jg
push
cmp
mov
mov
xrelease
leave
call
jp
jl
pop
lahf
push
in
leave
inc
pushf
repz
dec
lds
mov
lock
stc
add
and
push
cli
aad
shl
pusha
pop
cdq
mov
push
aas
sbb
rcl
dec
cmp
push
daa
dec
out
stos
retf
pushf
or
leave
add
pop
jmp
sub
or
or
pop
sbb
fldenv
jecxz
mov
(bad)
push
je
cwde
push
cmp
push
loop
push
adc
push
movs
xchg
mov
sub
(bad)
pop
inc
rol
mov
out
jl
test
and
into
and
push
jns
jo
adc
daa
test
bound
sub
pop
retf
enter
inc
add
xchg
pop
xchg
xor
js
xlat
inc
cwd
(bad)
cmps
sub
and
add
outs
js
scas
jle
test
pusha
cmps
stos
in
out
bound
call
cdq
mov
jg
fwait
pushf
test
sbb
in
loope
jae
lahf
(bad)
pop
jmp
xchg
scas
cmp
or
adc
call
into
xor
cmp
inc
ficomp
sub
arpl
pop
xchg
sub
inc
sub
lea
xor
jae
fdiv
stc
gs
pop
call
rcr
test
test
fisub
mov
dec
jp
pushf
nop
and
test
fdivr
shl
fucompp
int
(bad)
pop
jns
ficomp
inc
and
mov
test
pop
push
dec
pop
mov
add
pop
jbe
clts
pushf
xor
push
sbb
ds
aad
cld
pop
pop
jg
jl
mov
pop
test
xchg
jne
cmc
div
std
mov
jl
cdq
xchg
jl
fprem1
mov
sar
out
mov
lds
or
inc
add
fs
sahf
test
das
push
(bad)
pop
cdq
cmc
jnp
cld
dec
add
les
xor
adc
lods
pop
(bad)
xor
dec
adc
dec
add
add
(bad)
xchg
std
pop
icebp
sbb
lods
jp
pushf
cmc
pop
cmps
retf
xchg
imul
ret
mov
repnz
lods
lahf
and
mov
mov
stos
lods
clc
imul
cmc
jbe
dec
adc
push
cli
sbb
pushf
cmp
das
pushf
cmp
(bad)
(bad)
into
lods
or
call
mov
adc
inc
sbb
pop
xchg
cmp
dec
dec
fdivr
or
cmp
mov
(bad)
jae
jnp
adc
test
add
icebp
xchg
je
inc
mov
cmp
movs
pushf
das
adc
jp
xchg
scas
jbe
inc
jmp
and
(bad)
sti
push
fiadd
add
fs
addr16
push
mov
lds
repz
and
sbb
push
lods
cmp
mov
add
xor
mov
stos
adc
shr
fldcw
je
push
fcmovnb
jecxz
mov
jmp
sub
cmc
mov
lods
and
xchg
xchg
addr16
loop
cld
or
sub
vandnps
ss
pop
pusha
popf
ins
jg
stos
push
pop
jge
mov
fcomp
mov
jmp
pusha
inc
xor
or
lea
dec
mov
popa
mov
aaa
js
jmp
push
or
mov
jb
rol
or
pop
not
sbb
frndint
xchg
test
jp
mov
addr16
int
pop
or
sbb
cmp
push
cwde
outs
ds
cmps
mov
into
dec
sbb
xchg
jg
js
stc
ds
add
cwde
and
adc
xchg
ins
and
mov
push
rol
adc
push
inc
test
inc
mov
mov
dec
fucomp
mov
cwde
mov
popa
call
sub
cmp
sbb
lea
aaa
cs
loopne
pop
or
sub
call
imul
repz
fucomp
sub
adc
inc
push
push
aaa
push
mov
imul
ins
imul
jns
mov
and
inc
pop
jl
mov
jb
scas
xchg
add
out
fidiv
mov
mov
xor
cmp
test
sbb
enter
pop
ja
popf
outs
arpl
dec
add
xchg
sbb
aam
xchg
xlat
push
jne
and
pop
push
inc
adc
cdq
pop
sub
pop
sub
sbb
and
sahf
fld
xlat
push
jb
stos
jle
rcr
xor
push
in
jnp
mov
xchg
sub
mov
push
xchg
cmps
mov
xchg
call
aad
(bad)
xor
cmp
add
sub
xor
mov
in
pop
ret
mov
adc
adc
sbb
mov
outs
mov
cdq
xor
call
pop
sub
(bad)
bound
xchg
inc
push
fnstsw
xchg
mov
ins
lods
test
imul
jmp
(bad)
xor
shl
cmp
jge
shr
xchg
inc
mov
mov
sbb
mov
leave
push
pop
jne
out
xor
adc
js
popf
fs
adc
xchg
xlat
cli
jmp
sbb
jnp
pusha
xlat
test
push
cmc
loop
push
leave
fdiv
and
dec
sti
test
(bad)
dec
pushf
dec
dec
mov
cmp
lods
fstp
mov
inc
nop
and
adc
hlt
inc
mov
pop
mov
je
dec
mov
int3
pop
fcmovu
pop
fcomi
jns
push
cmp
sbb
jae
icebp
inc
retf
add
scas
sbb
mov
push
mov
xor
fs
arpl
xchg
cmp
xchg
dec
sub
js
mov
push
loop
xchg
ss
(bad)
lods
stc
xor
aad
test
pop
adc
in
lods
pop
nop
inc
jle
inc
pushf
add
dec
sbb
scas
mov
sti
jp
not
add
cmp
popa
sub
test
shl
adc
addr16
adc
aas
pop
push
inc
cdq
lock
push
mov
pop
(bad)
push
lods
js
mov
js
fcom
sub
fadd
xchg
fwait
in
cmp
ret
inc
stc
rol
xchg
xchg
inc
shl
push
aas
dec
retf
rcr
cmp
es
xor
jns
jno
ins
mov
xchg
shl
cmp
add
cmp
xor
sar
shr
xor
mov
jle
in
test
ins
push
push
scas
das
in
test
stos
inc
pop
shl
xchg
js
mov
not
mov
scas
cmp
sub
int
fs
dec
mov
outs
pop
jns
xchg
xchg
mov
cs
xchg
fnstcw
sbb
pop
arpl
leave
xor
jo
add
push
outs
fwait
imul
cmp
mov
dec
(bad)
in
and
jb
scas
and
nop
fnstenv
fwait
mov
inc
loopne
arpl
pop
icebp
scas
fprem1
fstp
mov
cli
in
fcomip
inc
pop
cmc
scas
xor
and
dec
pop
ss
test
stc
push
jle
arpl
cmp
add
icebp
push
fldcw
jno
(bad)
inc
pop
jne
bound
inc
imul
add
cmp
stos
mov
loopne
inc
xchg
jae
mov
test
xchg
pop
xor
aam
xor
jl
mov
jmp
(bad)
fwait
mov
and
fidivr
das
hlt
cmp
cmp
loop
inc
or
pop
push
or
cmp
add
jnp
push
daa
fidivr
pop
inc
das
cmp
jge
mov
retf
mov
add
adc
pop
pop
fisub
movs
loope
mov
xchg
jae
jmp
in
push
xchg
stos
cmps
mov
fdiv
mov
ret
cli
aam
inc
scas
mov
sub
push
dec
jmp
ds
stos
daa
inc
dec
mov
fldcw
inc
in
mov
inc
fidiv
jae
and
sbb
mov
scas
sub
mov
push
xchg
hlt
sbb
jge
ja
jo
(bad)
sahf
jno
std
pushf
inc
xchg
mov
xor
stos
cmp
mov
sbb
loopne
(bad)
fiadd
icebp
fidivr
pop
into
push
add
mov
inc
jnp
movs
aas
dec
jg
xor
dec
mov
pop
leave
pusha
fcmovnbe
jnp
lea
inc
sub
and
jb
out
pop
mov
enter
pop
adc
sbb
mov
inc
leave
int3
popf
push
mov
jns
mov
inc
call
jmp
in
xchg
mov
mov
stos
pop
push
popf
adc
cli
retf
inc
sbb
push
cmc
mov
jo
sbb
xor
mov
or
inc
out
in
cmp
cmp
and
out
or
adc
push
add
xor
lahf
jmp
loop
jb
call
out
inc
fcom
lock
fs
mov
inc
arpl
retf
enter
jmp
cmp
(bad)
(bad)
imul
mov
mov
repz
(bad)
or
sbb
imul
popf
add
mov
pop
scas
add
sar
(bad)
scas
sahf
sbb
inc
adc
sahf
xor
mov
xchg
mov
icebp
lahf
mov
push
mov
sahf
add
test
mov
scas
xor
dec
mov
stc
inc
cli
pop
inc
data16
pop
es
push
sbb
call
popa
call
pop
pop
enter
(bad)
test
xchg
pop
fistp
mov
jg
adc
fldcw
fcomp
and
cmc
dec
xchg
(bad)
sti
push
rcl
mul
ret
arpl
scas
push
ins
jecxz
not
aad
xchg
stos
out
inc
mov
xor
das
jmp
int3
call
aas
data16
data16
inc
and
mov
and
inc
int3
aad
mov
sbb
sbb
inc
add
jle
pop
dec
scas
xor
mov
ret
cs
add
and
fwait
shl
xchg
inc
out
jle
repz
and
sbb
adc
xchg
sbb
cld
mov
cmc
fst
retf
sub
in
dec
rol
inc
mov
dec
sbb
scas
mov
jmp
repz
xor
inc
fiadd
inc
add
or
sbb
mov
jl
scas
mov
and
pushf
cld
add
push
retf
jbe
push
(bad)
mov
pushfw
stos
mov
nop
dec
push
shl
popf
adc
movs
ficom
pusha
pop
loope
icebp
xor
stc
mov
out
aam
retf
dec
mov
sbb
nop
not
cbw
sbb
dec
mov
jo
push
xchg
mov
push
push
fistp
shl
sub
push
dec
aas
loopne
or
sub
scas
es
repz
ins
cmps
ins
and
cmps
sbb
push
dec
sahf
(bad)
xchg
push
mov
pop
fstp
and
cs
xchg
dec
xchg
mov
inc
push
(bad)
jmp
(bad)
cmp
inc
ja
(bad)
mov
cmp
fidivr
xchg
mov
sub
push
fxam
frstor
inc
jg
inc
les
sbb
ja
pop
lahf
stos
mov
adc
lods
arpl
mov
xchg
aam
pop
inc
pop
mov
sbb
ss
push
lea
imul
addr16
leave
mov
fld
push
push
xchg
sub
test
inc
rcr
mov
les
mov
pop
pop
add
stos
retf
out
pop
mov
push
pop
inc
mov
scas
push
frstor
jne
jno
sbb
push
push
cmps
adc
cld
ret
adc
daa
retf
xor
jle
and
ins
outs
mov
jl
test
cmc
jmp
fstp
add
xchg
fstp
rol
es
(bad)
(bad)
mov
(bad)
ret
adc
lahf
hlt
adc
(bad)
cmc
xchg
out
jp
mov
sub
mov
data16
imul
adc
add
test
(bad)
es
jmp
int
adc
push
xchg
push
sahf
push
into
inc
push
mov
pop
lods
mov
lahf
sti
cmps
adc
pop
ins
mov
js
int3
xchg
dec
cld
loope
adc
pop
mov
test
sahf
rcr
fmul
push
loope
fld
loop
fidivr
jle
js
adc
xchg
or
pushf
mov
inc
fdivr
cmp
pop
fadd
sbb
sub
pop
dec
adc
aaa
inc
mov
fwait
ds
das
push
test
js
jle
inc
fsubr
ffree
loopne
xchg
mov
fnstsw
xchg
cs
(bad)
mov
jno
enter
std
rcl
stos
aaa
call
ds
aam
stc
and
pop
cmps
sub
mov
cwde
mov
pop
daa
fild
jg
sar
ja
aam
sbb
test
ins
inc
cdq
pop
inc
adc
aad
pop
and
shl
and
vmread
dec
xchg
sahf
push
xchg
cdq
or
(bad)
fidivr
(bad)
enter
jae
mov
daa
xor
jmp
dec
retf
fmul
gs
inc
mov
push
test
out
cmp
xor
sbb
in
push
lods
and
and
adc
xor
(bad)
out
xor
inc
js
mov
(bad)
mov
in
mul
push
aaa
cli
jecxz
aaa
in
push
movs
fwait
clc
sbb
mov
dec
call
pop
dec
xchg
xchg
imul
ss
clc
pusha
sahf
sub
sub
js
dec
push
push
mov
scas
xchg
sub
mul
sub
call
aad
adc
cmp
adc
mov
sbb
ss
hlt
test
repnz
gs
ins
retf
lahf
test
xchg
fabs
xchg
add
ja
adc
call
shl
mov
dec
push
or
out
test
sub
pop
test
call
fcmovnbe
inc
pop
or
je
mov
dec
outs
mov
addr16
dec
pop
int
movs
cmp
fs
pusha
cdq
sub
fcomp
push
fucom
mov
mov
mov
cwd
fidiv
xchg
fidivr
push
in
mov
xchg
push
fnsave
dec
xchg
cli
scas
sub
adc
sub
jae
push
dec
add
pop
mov
pop
jmp
add
aas
mov
scas
jl
mov
mov
adc
inc
enter
ror
push
fild
add
jae
mov
inc
cwde
repz
ja
jecxz
and
sbb
xchg
push
out
lock
loopne
mov
(bad)
pop
loop
ss
(bad)
cmp
xor
inc
imul
imul
xor
jl
popf
xchg
mov
pushf
mov
cwde
leave
push
adc
cmp
pop
fs
jb
test
add
jbe
into
or
mov
or
sbb
stos
pushf
sbb
add
popa
rol
idiv
call
or
lock
cmp
jl
popf
mov
inc
mov
iret
stc
icebp
ret
repz
and
pop
sbb
(bad)
fs
push
push
sub
mov
pop
dec
xchg
stos
stos
enter
add
rcl
arpl
mul
xor
pop
xchg
add
dec
adc
or
sub
mov
mov
clc
(bad)
test
sahf
fisubr
pop
pop
fimul
mov
lahf
inc
loope
inc
cmp
cli
call
mov
in
in
scas
cmc
cmp
cmp
imul
mul
sbb
adc
cmp
mov
and
pop
enter
loopne
adc
adc
addr16
mov
cmps
inc
cmps
jge
fnsave
lea
(bad)
sti
loope
xchg
jmp
fist
addr16
clc
pop
or
cli
mov
lock
mov
pop
ja
xchg
movs
add
test
push
test
dec
int
in
push
nop
dec
dec
sub
jle
inc
add
cdq
(bad)
aam
cmp
sub
sub
add
in
pop
enter
inc
mov
stos
xchg
mov
cwde
stos
mov
mov
pop
pusha
mov
inc
popf
repz
dec
out
jle
into
mov
test
fmul
fcomp
inc
lods
mov
std
test
loope
pusha
test
(bad)
sbb
aad
lods
push
sahf
adc
ins
scas
sbb
pushf
dec
push
inc
mov
push
xlat
inc
fwait
int
mov
xor
xor
mov
sbb
fcomp
add
push
es
retf
test
retf
sti
pop
idiv
inc
cwde
dec
xchg
mov
sub
out
nop
div
jb
mov
(bad)
not
add
cdq
dec
sti
sub
sbb
dec
(bad)
fdivr
adc
jg
mov
push
add
mov
out
int3
or
xor
sub
push
pop
sbb
jbe
pop
cmp
cwde
or
cmc
popf
and
push
arpl
push
ret
movs
lds
hlt
xchg
xchg
retf
jecxz
xchg
arpl
popf
sbb
rcl
mov
ret
pusha
jmp
out
xor
or
leave
(bad)
ja
cs
or
jp
ss
jg
lds
fimul
push
jne
std
aas
or
das
mov
rep
outs
xchg
jo
lahf
or
mov
and
(bad)
out
mov
xchg
call
and
jmp
repz
xor
ret
out
xchg
inc
mov
mov
cmc
int
dec
inc
mov
in
pop
dec
retf
fnstenv
sub
es
pop
mov
call
out
int
xchg
lock
jne
mov
pop
scas
or
ins
mov
jae
cmps
xchg
cmp
icebp
mov
(bad)
fist
push
dec
and
push
sbb
outs
(bad)
stos
fs
xchg
ins
xchg
popf
les
mov
rol
mov
push
push
das
fcmovu
test
mov
popw
push
scas
fisttp
ins
shl
mov
push
ins
push
hlt
sub
ss
mov
aad
dec
fwait
pop
xor
lods
sbb
cli
loope
test
imul
pop
mov
xchg
sbb
iret
loopne
push
sti
pop
mov
mov
inc
fwait
xchg
nop
xor
rcl
loope
cmp
fistp
dec
ds
mov
push
pop
mov
sbb
mov
sbb
lahf
xchg
mov
sub
push
std
(bad)
sbb
and
pop
(bad)
sub
nop
or
mov
dec
test
js
out
inc
mov
push
and
dec
mov
mov
test
lds
mov
push
mov
ror
push
xchg
mov
leave
sub
push
add
fsin
retf
jl
cs
or
mov
mov
jmp
mov
sbb
add
pop
sahf
and
sbb
fidiv
xlat
aaa
push
lea
pop
iret
stos
mov
std
imul
inc
call
loopne
dec
in
movs
jp
mov
xchg
push
xchg
pop
mov
pushf
icebp
sbb
pop
btr
repnz
retf
dec
pop
stos
mov
and
retf
xor
mov
jnp
popa
call
and
cmps
lea
inc
js
fst
push
sbb
fisubr
mov
mov
pop
retf
fist
(bad)
sbb
sahf
outs
cld
xor
push
xlat
jmp
xor
jecxz
aaa
out
mov
mov
mul
ror
movs
mov
mov
add
sti
push
in
add
les
dec
push
xchg
xor
push
call
and
pusha
(bad)
mov
dec
cmc
dec
sbb
(bad)
jmp
mov
cli
sbb
dec
adc
xchg
stos
lahf
dec
sahf
icebp
arpl
js
mov
nop
jmp
je
mov
mov
mov
mov
jb
test
cmc
scas
stos
loopne
imul
jmp
cmp
cmp
cmp
shl
sub
dec
call
jnp
mov
or
outs
push
inc
mov
stos
push
adc
stos
sub
and
int
movs
cmp
inc
inc
shr
mov
mov
xor
mov
sbb
mov
xor
aam
mov
hlt
imul
and
lahf
and
mov
dec
push
dec
cwde
lds
fs
push
adc
bound
sbb
nop
pop
inc
retf
mov
sub
hlt
jmp
(bad)
push
mov
inc
add
xchg
push
retf
adc
stos
mov
fcomp
call
in
mov
nop
call
mov
cmp
xor
ret
pop
push
cs
cwde
orps
ins
cmp
popf
sub
fistp
add
loopne
jno
daa
retf
inc
push
push
mov
pop
popf
inc
add
and
pop
jmp
and
jnp
lods
sar
mov
test
test
std
xchg
leave
sbb
test
cmp
in
out
std
inc
pop
out
fdiv
imul
sub
(bad)
into
retf
jae
add
jl
das
push
lods
dec
sbb
int3
cmp
bnd
stc
pop
mov
pop
add
cli
pop
sub
xor
mov
dec
jne
dec
add
sub
outs
aas
push
dec
xchg
leave
mov
shl
inc
ficom
xchg
movs
push
es
aam
sub
jns
stos
mov
outs
cdq
call
jmp
mov
int
cmps
or
xor
xlat
fistp
sub
sbb
cmp
xchg
aam
cmp
push
repnz
mov
sbb
or
bound
push
xor
mov
in
enter
adc
jb
mov
popa
test
xchg
inc
jmp
push
rcr
mov
inc
mov
jmp
gs
mov
popa
clc
outs
std
dec
cmp
std
repz
and
mov
gs
push
icebp
mov
ins
fmulp
cmp
inc
retf
and
jae
lea
adc
pop
push
fidiv
(bad)
dec
in
and
and
cmp
enter
inc
push
mov
jl
enter
xchg
push
sub
inc
mov
movs
shr
movs
bound
popf
test
sbb
shl
mov
dec
cld
es
cs
cld
jge
add
push
or
pop
xchg
or
pop
iret
push
clc
aam
test
ret
inc
cmp
xchg
pop
retf
inc
sbb
inc
call
pop
(bad)
cli
mov
cmp
icebp
jle
pop
add
out
enter
sbb
xchg
das
in
mov
fcmovnu
dec
mov
lea
test
ja
push
pop
sub
in
jp
sub
jbe
sub
push
mov
(bad)
push
fcomp
sahf
ret
jmp
rcr
pop
xchg
jae
jle
cmps
push
xor
retf
xor
and
(bad)
fwait
sbb
jg
call
les
add
pop
call
jns
add
inc
xchg
fwait
jae
imul
and
rcl
fild
es
sbb
cmp
or
or
je
std
add
dec
push
adc
outs
add
push
mov
add
mov
cwde
lods
out
int
inc
xlat
sbb
xor
xchg
rcr
push
int
movs
xor
inc
cli
mov
jnp
xchg
fwait
lods
data16
call
mov
fisubr
and
cli
ficom
cmp
xchg
adc
and
mov
lods
inc
ror
jne
adc
sbb
ja
adc
push
xchg
jg
arpl
sbb
xor
push
fwait
into
(bad)
cmc
pop
dec
push
mov
pop
mov
test
mov
es
mov
lea
pop
popa
mov
(bad)
lock
push
int3
dec
int
or
loope
ficom
ds
sbb
or
and
dec
sbb
cwde
ret
jmp
jno
addr16
add
adc
popf
inc
into
xor
pop
push
xchg
inc
test
inc
(bad)
adc
sub
push
sti
add
push
test
mov
mov
jl
xchg
mov
(bad)
movs
int3
shl
lods
mov
ins
fist
retf
icebp
int
icebp
and
pop
sahf
or
jne
inc
xchg
mov
mov
pop
out
loop
adc
and
pop
in
cmp
push
cmps
dec
dec
xchg
add
movs
nop
mov
(bad)
xchg
cmp
add
xchg
outs
out
stc
pop
loop
cwde
adc
mov
scas
ss
repz
fimul
cwde
sbb
popa
aas
loope
cmps
in
cmp
fld
dec
cld
sbb
push
retf
ss
cmp
mov
push
pop
pop
mov
(bad)
mov
add
push
inc
pop
pop
fadd
pop
bound
aaa
lahf
cmp
stos
ins
or
(bad)
push
xor
and
mov
inc
inc
inc
mov
pop
sti
mov
adc
mov
hlt
fimul
fwait
call
in
mov
xor
xchg
(bad)
xor
cdq
dec
lock
sbb
dec
mov
add
jp
xor
and
jmp
add
(bad)
fisttp
push
arpl
jecxz
or
cmp
xchg
aaa
mov
mov
test
pop
dec
push
inc
in
(bad)
fwait
and
(bad)
push
aam
jl
test
cdq
mov
call
adc
aam
jo
inc
idiv
outs
pusha
jecxz
std
xor
ret
jecxz
pop
in
sub
call
cld
retf
cmp
outs
arpl
aaa
pop
add
and
push
sti
add
popa
adc
nop
aas
retf
jle
sbb
adc
mov
mov
cs
pop
out
in
sbb
clc
inc
push
inc
fild
mov
movs
mov
dec
int
jno
hlt
xlat
add
pusha
mov
js
fwait
ret
stos
sbb
rol
xchg
xchg
xor
gs
aas
dec
ret
clc
retf
pop
add
imul
mov
test
mov
out
sbb
fs
aaa
ins
push
and
popf
and
inc
adc
dec
jo
rol
stc
les
shl
xchg
xor
je
movs
jp
icebp
(bad)
scas
je
dec
xchg
sti
shr
sbb
scas
and
call
cmp
lea
sub
adc
cmp
neg
and
add
push
lods
sbb
sbb
test
add
or
sub
add
inc
jb
jecxz
mov
ret
mov
data16
cmp
retf
out
test
push
sti
add
ins
loopne
cld
push
test
mov
aad
sbb
hlt
(bad)
stc
xchg
mov
ret
mov
(bad)
lods
leave
hlt
cmp
movs
ins
int3
push
clc
cmp
fsub
cld
adc
jnp
push
adc
imul
retf
repz
gs
sti
push
minps
add
add
or
sub
mov
push
or
jae
call
jg
arpl
xchg
mov
push
out
mov
(bad)
xchg
jno
(bad)
or
fptan
daa
nop
inc
sbb
(bad)
mov
jmp
dec
xchg
push
fiadd
sub
push
stos
data16
lahf
sar
retf
aas
xchg
mov
jbe
mov
add
jmp
or
mov
ret
cmp
push
inc
outs
mov
mov
call
std
div
je
mov
dec
push
xchg
fldenv
sahf
test
fimul
sbb
mov
cdq
daa
cmp
fwait
xor
cdq
xor
bound
and
imul
push
adc
cmp
or
adc
cmp
xor
(bad)
mov
leave
div
std
sbb
in
sti
push
cdq
iret
xchg
adc
(bad)
fldcw
xchg
xor
ret
xchg
mov
scas
repnz
pushf
movs
dec
leave
sub
sar
jmp
(bad)
adc
sub
cli
push
cmp
movs
test
popf
fnstcw
(bad)
jecxz
jg
add
add
js
and
test
inc
mov
and
sub
jmp
jne
push
mov
mov
push
mov
pushf
popa
enter
in
hlt
cmps
jnp
push
lea
popa
xchg
mov
sub
call
mov
out
pop
or
aam
dec
loopne
add
pop
push
cld
push
pop
jg
stos
xchg
cdq
inc
sbb
inc
repz
xchg
leave
gs
je
retf
or
inc
xor
and
gs
fisttp
add
mov
stc
out
loopne
mov
jp
fs
sub
mov
ins
mov
imul
pop
icebp
and
sti
mov
pop
and
loop
(bad)
pop
inc
out
mov
xor
loopne
int3
add
pop
stos
cmp
cmp
rcl
xor
ret
retf
jb
into
cmp
push
and
cmps
adc
jl
mov
stc
cmp
lock
mov
jns
mov
jg
hlt
call
fnsave
sbb
inc
stos
dec
outs
in
mov
add
(bad)
(bad)
sar
inc
outs
mov
cmp
sbb
add
(bad)
inc
lahf
push
push
pop
mov
mov
or
cmps
fstp
push
sbb
cmp
and
lgs
popf
dec
adc
stos
cmp
test
xchg
cmp
add
pop
les
mov
lock
push
out
repz
jle
mov
out
or
cmp
aam
aas
outs
cdq
xchg
push
pop
sbb
cmc
cld
and
inc
or
cmp
inc
ss
mov
fstp
cwde
loope
mov
push
push
jbe
(bad)
push
sbb
and
pop
jo
push
pop
xchg
sbb
mov
movs
and
sub
stos
jecxz
(bad)
fiadd
adc
dec
mov
dec
mov
cdq
dec
sub
fdiv
xor
(bad)
dec
shl
xchg
cmps
lock
(bad)
mov
repz
dec
xchg
fsub
inc
mul
sub
mov
stos
ds
dec
jl
push
shl
outs
cmp
xchg
mov
rcl
add
iret
popa
push
pop
sub
xor
push
xor
call
push
mov
mov
push
xchg
fdivr
rcr
and
mov
dec
add
jge
xchg
jecxz
xchg
cwde
dec
into
cdq
push
ss
cmps
ja
pop
lods
neg
shl
xchg
add
jecxz
jle
mov
scas
dec
add
xchg
fcomp
dec
rol
dec
dec
clc
jbe
dec
cmps
mov
jmp
les
push
pop
and
adc
imul
js
push
sbb
cmp
add
fst
retf
pop
scas
sub
cdq
fsub
out
mov
xor
movs
icebp
or
pop
xchg
jle
out
cmps
pop
cmp
std
mov
fmul
loop
addr16
dec
mov
push
das
nop
repz
rol
jns
xor
ins
pop
inc
stos
test
mov
clc
clc
sbb
inc
fadd
cmp
or
jae
movs
or
lahf
sub
xchg
mov
(bad)
mov
xchg
call
pop
pop
jbe
sub
nop
leave
cmp
cdq
ja
(bad)
aam
jne
jl
mov
test
ja
movs
mov
mov
xchg
lods
fisttp
fwait
mov
push
sub
loop
ret
jo
cmp
or
push
mov
es
pop
std
leave
es
pop
push
imul
lahf
add
call
fsub
lahf
retf
scas
(bad)
fs
add
mov
mov
and
fild
xchg
or
and
aas
pop
mov
sbb
ds
ds
jnp
cmp
je
or
mov
nop
xor
lock
rcl
fild
adc
and
cmp
popa
sub
lods
sub
sbb
gs
fist
and
inc
pop
dec
inc
xchg
pushf
(bad)
ja
pusha
jnp
ficomp
xchg
cmp
jmp
(bad)
out
addr16
hlt
mov
(bad)
mov
pop
sbb
cmp
clc
lods
cmc
sbb
mov
push
xor
popa
in
sbb
js
imul
xchg
mov
(bad)
callw
xchg
inc
ins
pop
and
cmp
gs
dec
adc
movs
sub
out
cmps
sbb
jecxz
fsubr
inc
mov
mov
xchg
push
xchg
mov
out
or
popa
mov
mov
jg
popf
test
cwde
retf
imul
ds
push
leave
xchg
loopne
add
and
test
inc
sti
dec
push
imul
jp
leave
outs
pop
dec
inc
in
pop
minps
push
mov
mov
arpl
xchg
mov
loope
inc
inc
clc
addr16
jno
arpl
shr
push
into
movs
or
mov
std
sbb
in
dec
fsubr
test
mov
dec
shl
in
aam
ins
mov
xlat
dec
es
fmulp
jmp
fisubr
clc
gs
xchg
les
in
pop
xchg
out
inc
ins
push
inc
outs
ss
mov
test
inc
mov
push
mov
jl
test
dec
mov
jg
pop
push
jo
imul
mov
mov
lods
shr
dec
pusha
movs
nop
mov
dec
repz
mov
div
or
xchg
cli
jecxz
lds
or
cwde
push
mov
xor
or
adc
adc
imul
je
inc
imul
push
and
mov
les
inc
js
push
iret
rcl
mov
add
push
call
xchg
popa
mov
xchg
in
test
pop
jns
mov
sub
lock
or
mov
popf
lods
retf
sub
clc
pusha
ror
popa
pop
add
or
jae
inc
pop
cwde
push
sub
sbb
push
int3
sahf
xor
sbb
ins
fdivr
cmps
mov
(bad)
sti
adc
cld
push
dec
test
xchg
stc
movs
out
push
fiadd
mov
or
ret
shr
fadd
dec
fnstenv
and
stc
int3
loop
loopne
push
and
das
dec
jb
dec
and
int3
sbb
repz
dec
push
jl
mov
js
add
adc
outs
test
sub
pop
xor
add
dec
jnp
push
xchg
mov
shl
adc
rcr
fwait
int
mov
mov
xor
pushf
xor
test
pop
and
repnz
clc
jns
pop
inc
push
aas
mov
push
add
lahf
test
fild
arpl
int
or
sub
push
sar
fstp
xchg
mov
cmp
test
pop
mov
pusha
popa
nop
dec
cld
mov
arpl
cwde
add
neg
clc
mov
bound
enter
in
inc
test
outs
fwait
sub
inc
and
aam
out
jnp
push
inc
ss
cmp
cld
push
or
xchg
out
popf
cmp
clc
fs
push
add
mov
sbb
mov
sub
adc
enter
jecxz
pushf
dec
push
dec
mov
mov
inc
xchg
loope
adc
xchg
push
and
loopne
lock
cdq
mov
lahf
dec
outs
scas
popf
mov
cs
xchg
cli
icebp
inc
sbb
call
in
jl
inc
inc
js
xchg
sbb
sti
push
sub
xchg
sahf
dec
sbb
outs
jmp
add
aad
pop
add
mov
mov
dec
mov
inc
fcom
inc
stos
xchg
cwde
nop
jns
cmps
xchg
cmp
dec
cmps
dec
fsub
cmps
inc
repnz
sub
adc
or
mov
mov
clc
arpl
xchg
inc
xchg
push
(bad)
push
ss
fsubr
and
fisubr
pop
pusha
scas
xor
enter
fistp
xchg
sbb
push
and
or
jle
cmp
inc
mov
jl
mov
sbb
test
cmp
cmc
inc
fstp
ja
pusha
and
push
test
mov
mov
sbb
ret
shl
pop
push
push
sbb
scas
jnp
cmp
pop
mov
dec
pop
test
cwde
scas
retf
and
ret
xchg
sbb
push
or
aaa
push
or
jmp
add
scas
and
test
pop
prefetch
repz
das
mov
pop
stc
imul
repnz
inc
dec
hlt
mov
xchg
lahf
mov
adc
cmps
pushf
arpl
mov
sub
movs
dec
cmc
push
push
add
repz
and
adc
pop
scas
push
and
mov
jmp
pop
inc
std
add
push
outs
sub
push
bound
dec
mov
movs
adc
inc
cdq
xlat
mov
mov
popa
rol
fisubr
mov
outs
popf
cld
stos
ins
ret
mov
popf
and
add
mov
mov
mov
stc
jno
test
jne
push
ficomp
or
aad
ret
inc
fnstsw
imul
mov
inc
pop
or
ret
dec
sub
imul
jb
jbe
in
ds
sbb
jnp
pop
xor
add
movs
cmps
ss
inc
stc
call
test
push
ficomp
mov
cmp
add
clc
(bad)
mov
xchg
xchg
dec
mov
xchg
xor
jmp
pop
pop
test
inc
fld
stos
sub
sub
xchg
stc
cmp
mov
addr16
pop
xchg
stos
xchg
mov
int
das
leave
loope
push
add
frstor
outs
pusha
imul
add
fwait
inc
inc
test
sbb
sub
out
mov
rcr
and
mov
xchg
jns
enter
mov
aaa
mov
xchg
cmp
repz
scas
xchg
mov
stos
sub
or
and
pusha
and
jnp
push
or
movs
xchg
lods
aam
pop
idiv
add
out
add
add
jo
js
mov
jnp
xchg
pushf
cmp
daa
(bad)
jmp
push
lock
sbb
stos
js
lahf
ficom
retf
loope
out
bound
cmc
test
jmp
cli
sbb
jl
enter
jecxz
dec
xchg
movs
outs
hlt
jl
aaa
and
push
sti
inc
jb
pop
mov
xor
stos
dec
cmp
pop
(bad)
sbb
fst
pop
daa
cmp
pop
push
mov
into
dec
pop
mov
pushf
xor
push
and
div
xlat
popa
je
movs
sub
cmps
jmp
adc
clc
pop
push
clc
aam
push
into
inc
mov
mov
jne
cmps
pop
sbb
in
retf
jmp
jmp
stos
push
and
cmc
push
icebp
ds
or
xchg
unpckhps
jne
push
mov
test
xor
scas
inc
sar
add
leave
inc
je
adc
adc
imul
jle
js
movs
or
mov
call
mov
(bad)
ret
(bad)
mov
popf
neg
(bad)
out
icebp
test
enter
out
xchg
test
lods
xchg
nop
sar
ins
outs
mov
inc
sar
pop
xor
(bad)
(bad)
bound
es
in
cmp
test
test
add
push
cmp
ss
inc
jb
or
lods
pop
pop
jmp
leave
shl
mov
fnstcw
mov
jl
xlat
add
jno
hlt
enter
sbb
lea
jl
ror
cmc
stos
jecxz
sbb
cmps
sbb
dec
fsqrt
enter
pop
sbb
mov
sub
mov
inc
enter
bnd
sbb
sbb
sub
sbb
stos
imul
mov
cld
xlat
call
icebp
gs
je
dec
adc
je
mov
push
rcl
and
out
xor
inc
push
movs
fwait
stos
add
lods
fsin
xor
mov
xchg
jns
daa
cmp
rol
dec
loop
pop
or
pop
cdq
xor
dec
in
lds
dec
iret
xchg
add
pop
jbe
mov
imul
mov
sub
dec
adc
push
inc
test
test
push
push
retf
movs
sbb
inc
dec
test
push
mov
call
lds
mov
popa
mov
mov
or
out
in
sbb
cmps
dec
mul
dec
pop
sub
pop
or
cdq
push
and
mov
adc
sbb
sub
inc
sub
and
sbb
jo
xchg
cld
push
aas
ss
pushf
in
xchg
add
push
jnp
jge
mov
ds
mov
xor
mov
mov
ror
mov
lea
icebp
test
out
mov
cmp
or
fxch
and
addr16
pop
sub
nop
mov
out
shr
pop
mov
push
dec
push
ds
or
add
test
fwait
or
ins
adc
jp
mov
jne
scas
sub
push
inc
div
mov
shl
movs
pop
aam
sti
inc
test
mov
xchg
xchg
push
or
ror
mov
jp
mov
cli
movs
leave
retf
mov
sti
cs
dec
iret
test
ja
arpl
inc
mov
jbe
je
mov
pop
in
repnz
icebp
ins
sbb
pop
retf
outs
inc
das
push
push
xor
adc
scas
mov
adc
js
shl
sbb
vmovdqa
stos
push
pop
mov
lods
jbe
dec
call
add
xchg
rcl
dec
pop
fwait
lea
retf
sub
cmp
scas
cmp
adc
cmp
pop
adc
push
mov
shr
nop
xor
test
xor
sbb
push
jno
jmp
jle
sar
into
or
xchg
xchg
adc
mov
add
mov
ins
inc
pop
lahf
sub
ret
sar
sahf
call
jg
test
mov
stos
test
dec
(bad)
cdq
mov
cmp
shr
loop
jnp
xchg
xchg
jl
push
inc
push
(bad)
clc
and
adc
mov
push
cmp
mov
fld
std
cmp
aaa
into
pop
or
push
fwait
and
sbb
std
adc
xchg
mov
push
pop
ins
pop
cmps
sub
cmp
xchg
lock
push
aam
push
or
ror
call
cwde
mov
mov
cmp
cmc
test
pop
leave
pop
pop
dec
retf
pop
fiadd
or
and
popa
sti
addr16
dec
call
jge
int3
and
jle
lds
pop
or
call
mov
sahf
adc
and
outs
push
sbb
xchg
jmp
push
shl
nop
mov
push
js
(bad)
sbb
out
(bad)
cli
jnp
and
pop
sbb
xchg
div
inc
push
bound
push
xchg
call
cmp
(bad)
push
push
jnp
(bad)
cmp
sbb
jg
dec
inc
lods
jnp
mov
(bad)
sbb
sub
out
mov
sar
mov
sbb
jno
test
xor
(bad)
sbb
imul
xchg
xor
leave
cmp
fcomp
push
repz
cmp
pop
out
jbe
cmp
inc
add
mov
(bad)
into
sbb
pop
cwde
jmp
xor
and
xor
retf
scas
rdtsc
rcl
jg
test
(bad)
int
setne
push
ret
push
mov
aad
(bad)
retf
mov
xchg
mov
stos
xor
mov
push
mov
stos
data16
aam
hlt
fiadd
jno
jae
and
lods
inc
jecxz
sbb
lods
pop
outs
and
mov
cmps
inc
stc
mov
enter
jbe
aad
ins
imul
pop
std
pop
adc
inc
lods
test
jno
push
pop
shl
adc
inc
cdq
ss
shl
out
out
ret
sbb
ret
int
mov
rcr
lods
bound
cmps
mov
call
pop
pop
cdq
mov
xor
in
out
test
lahf
adc
mov
dec
add
mov
cmp
(bad)
(bad)
icebp
add
pop
ret
inc
adc
jmp
pop
push
stos
or
aam
adc
daa
and
in
mov
stc
add
jne
mov
loop
xlat
test
enter
out
ins
cli
xchg
(bad)
dec
mov
push
xchg
mov
ret
test
data16
push
int
cmps
cmp
sbb
bound
fild
daa
cwde
cs
or
mov
mul
sar
pushf
mov
pop
es
add
inc
adc
stos
and
jnp
mov
pop
movs
mov
ds
jmp
jmp
test
movs
call
mov
adc
out
daa
enter
mov
dec
scas
inc
add
hlt
shl
pop
xchg
fs
or
cmp
xlat
lock
jmp
pusha
js
lods
outs
jnp
mov
push
dec
mov
les
in
sbb
in
push
fs
xor
add
popa
nop
pusha
inc
fmul
xchg
add
push
ds
pushf
push
mov
inc
lds
gs
dec
std
adc
mov
movs
inc
loopne
add
xlat
movs
mov
stos
mov
sbb
pop
ins
cmp
repz
push
fs
test
repnz
jo
adc
or
or
sub
fidiv
inc
and
pop
mov
mov
fnstcw
dec
ins
stos
mov
retf
pop
mov
pop
loope
push
and
dec
shl
outs
repnz
pop
and
xchg
ins
scas
stos
scas
in
mov
add
jp
mov
in
or
mov
add
sbb
lods
inc
sbb
mov
in
loop
cmp
xor
cmp
pop
ss
mov
mov
mov
jo
lods
popf
sub
push
inc
(bad)
in
mov
mov
jnp
fcom
xchg
(bad)
xor
xor
retf
dec
xchg
movs
scas
xlat
xor
add
cwde
(bad)
data16
xchg
xor
aas
dec
aam
mov
retf
adc
cmp
sbb
xchg
nop
int
pop
or
push
jecxz
sbb
sbb
inc
sub
pop
lods
pop
mov
(bad)
(bad)
dec
sbb
adc
test
push
sbb
outs
fsub
loopne
jecxz
add
mov
cmps
sbb
push
mov
cdq
dec
jae
mov
in
test
sbb
push
push
push
retf
mov
jl
cwde
sbb
and
xor
mov
pop
hlt
inc
ret
mov
int3
pop
jae
or
cmp
push
push
fnsave
(bad)
xor
fsub
sar
cmp
and
cmp
mov
xchg
or
sbb
mov
lods
mov
repnz
jmp
dec
jmp
cmp
shl
in
jae
dec
inc
or
xor
add
call
jmp
stos
hlt
arpl
inc
loop
sub
adc
or
pop
inc
rcr
xlat
or
mov
or
cmps
and
add
pop
shr
mov
push
mov
xchg
xchg
push
std
lods
jmp
mov
cmc
push
dec
fucom
cwde
cmc
jmp
push
xor
push
push
adc
jmp
dec
dec
cmp
jno
xchg
xchg
enter
push
call
bound
and
push
xor
rcr
push
sbb
mov
(bad)
fwait
cmp
je
cwde
dec
cmp
adc
clc
push
xor
jne
sti
shl
mov
pop
movs
mov
cmp
ret
cmp
xchg
movs
dec
cli
js
xor
push
out
cli
sar
repz
js
adc
cmps
jne
or
stos
lea
cld
in
sbb
add
maxps
xor
call
ds
xor
push
int3
mov
(bad)
arpl
push
cmps
cmc
cmps
inc
int3
add
xrelease
xor
leave
mov
and
hlt
mov
mov
out
inc
and
leave
fmul
jbe
cs
pop
fdiv
ds
lea
icebp
inc
cld
mov
(bad)
push
inc
add
mov
pop
lods
ss
aam
push
test
dec
bound
sub
not
sbb
jecxz
fnstcw
iret
movs
jne
mov
out
pop
in
pop
repz
outs
pop
xchg
stos
stos
xor
fsubr
mov
icebp
xor
stos
push
int
in
cmp
fstp
jg
call
inc
xchg
xchg
xchg
leave
dec
daa
out
shl
sbb
ficomp
or
add
inc
and
in
or
mov
and
mov
sbb
mov
mov
pop
mov
inc
cwde
(bad)
push
nop
mov
sub
cli
mov
call
pushf
dec
jnp
pushf
mov
inc
sbb
dec
sti
sbb
jne
aas
arpl
pop
mov
and
popf
dec
cmp
rcl
sbb
and
or
add
lock
jbe
dec
inc
mov
outs
call
push
pop
loope
mov
fsub
scas
jbe
(bad)
shl
mov
fiadd
xchg
pop
cli
push
xchg
sahf
retf
outs
movzx
clc
cli
fistp
lahf
outs
jmp
sbb
cs
sbb
push
add
mov
mov
daa
stc
jg
repnz
inc
lds
imul
add
dec
outs
rcr
mov
push
mov
xor
sbb
fnstsw
inc
pop
je
outs
loopne
xchg
loop
jbe
mov
mov
ret
jp
xchg
scas
test
fs
mov
loopne
into
std
jp
jmp
sbb
(bad)
out
std
ds
and
push
pop
adc
ss
cld
jl
ret
pop
inc
arpl
sbb
jge
add
push
adc
ins
mov
inc
sbb
and
cmps
xchg
cs
adc
fldenv
out
loop
push
push
(bad)
enter
imul
fstp
dec
lahf
dec
ja
cdq
xchg
xor
int
mov
add
mov
cmp
dec
retf
aad
js
push
add
pop
fisttp
pop
jp
jne
pop
out
retf
and
push
(bad)
int
rcl
dec
pop
cmp
push
adc
adc
jo
mov
fs
scas
xchg
pop
adc
jae
std
mov
jmp
outs
or
inc
mov
jecxz
out
xchg
pop
push
xchg
cli
mov
rcr
mov
ret
je
mov
iret
les
mov
jmp
jb
es
popa
fwait
push
pop
dec
mov
mov
cmp
mov
add
sub
cld
dec
or
jge
mov
or
push
cdq
retf
mov
jecxz
jo
fwait
inc
out
aam
mov
mov
out
cmp
into
or
cwde
hlt
push
sbb
loope
mov
call
xor
enter
push
pop
or
lahf
imul
cmps
mov
lods
sbb
inc
pop
add
es
sub
pop
test
inc
fst
imul
xchg
sar
jmp
ins
movs
dec
lds
in
lock
or
call
adc
mov
push
scas
cmp
sub
sub
cmps
imul
fimul
jge
rcr
adc
mov
push
in
lds
jp
(bad)
es
out
ins
or
or
bndstx
std
or
push
cmp
stos
mov
les
push
xchg
xor
fwait
std
jae
rcl
std
jecxz
cmp
adc
push
xchg
sbb
call
mov
mov
test
sbb
call
js
pop
imul
jno
jg
push
aas
inc
call
fdivr
mul
xchg
clc
pop
dec
jae
aad
ins
and
out
pop
ror
push
cmps
das
pop
mov
stos
xor
mov
jmp
push
repz
loop
xchg
aam
jae
mov
nop
ins
lock
lea
push
popa
and
ret
loope
inc
mov
fimul
sub
shl
cmp
cmp
test
pop
and
retf
dec
or
sbb
int
movs
clc
pop
push
dec
push
(bad)
sbb
xchg
add
sbb
or
mov
cmp
int3
sti
das
sar
in
jo
sbb
fcomp
mov
dec
ret
push
out
in
jo
outs
xchg
pop
pop
mov
movs
add
mov
in
enter
mov
add
out
pop
xor
cmp
mov
fstp
aam
(bad)
rcr
push
or
or
pop
scas
adc
pop
stos
add
xchg
mov
cmp
icebp
jmp
stc
pop
data16
enter
in
xchg
jge
pushf
pop
pop
fisub
xchg
test
mov
cmps
push
mov
sar
xchg
xchg
mov
push
or
int3
test
push
fwait
add
sub
imul
popf
(bad)
mov
inc
(bad)
out
sbb
add
cmp
or
call
xchg
movs
das
and
ror
and
pusha
pusha
mov
and
repnz
dec
popf
xchg
gs
out
stos
xor
push
cdq
popf
mov
inc
nop
fdivp
and
fidiv
cwde
cmps
jne
pop
lods
ss
xor
mov
jle
and
sub
mov
pop
es
mov
out
(bad)
and
sbb
xor
das
and
jle
rcr
sbb
xchg
stos
sti
adc
push
mov
jne
pop
pop
ja
push
retf
ins
mov
cmps
push
cld
call
aam
cmp
inc
cdq
call
(bad)
popa
sbb
fild
out
add
(bad)
push
out
inc
or
ins
inc
pop
sti
push
sbb
lahf
adc
scas
pop
leave
cld
add
ss
push
sub
cmp
sub
ins
inc
fnstenv
mov
movs
xchg
test
push
xor
enter
mov
dec
pushf
add
test
cmc
sbb
jno
cwde
push
push
mov
mov
sbb
and
test
icebp
lahf
jns
sub
dec
sub
loop
test
sbb
jge
dec
pop
ja
mov
test
call
pusha
and
jne
mov
(bad)
and
inc
dec
mov
xchg
xor
movs
sti
adc
pop
xchg
stc
test
jne
sbb
lds
sbb
push
push
jmp
fwait
pop
push
mov
repz
scas
enter
mov
clc
push
sbb
fdivr
repz
icebp
xor
adc
jl
mov
aam
repz
adc
push
sub
stos
dec
xor
mov
add
push
std
repz
xchg
iret
inc
les
test
mov
cmp
loopne
cs
ror
(bad)
mov
pop
fwait
mov
(bad)
(bad)
jecxz
and
cmps
pusha
xchg
outs
mov
add
aam
(bad)
and
addr16
inc
lahf
arpl
dec
cmps
call
sar
xchg
fst
pop
sbb
sub
mov
int3
aaa
call
sbb
dec
push
out
xchg
cdq
lods
mov
leave
gs
lods
imul
(bad)
mov
push
cli
std
test
lods
fnsave
mov
sar
stos
shl
fwait
cmps
aaa
in
fs
adc
ds
jmp
popa
in
dec
sbb
mov
sbb
mov
cmc
jbe
ror
add
xor
in
pop
mov
cmp
mov
sahf
sar
jmp
pushf
retf
fs
xchg
push
push
mov
mov
mov
inc
fwait
mov
mov
sbb
cmps
inc
ret
cs
sub
pop
nop
(bad)
pop
call
xchg
or
test
pushf
xchg
int3
lods
dec
pop
repnz
ret
mov
push
je
xor
and
pop
mov
jmp
dec
gs
adc
shl
pop
sahf
retf
pop
clc
addr16
lods
sub
mov
push
xchg
scas
cwde
inc
(bad)
xchg
bound
dec
repz
mov
mov
mov
or
jns
xchg
cmps
popa
retf
xor
sub
jmp
inc
sahf
and
inc
sbb
and
lods
cmp
loop
or
xor
mov
or
sub
mov
ret
sbb
jg
sub
aad
popf
mov
adc
test
fnstsw
xchg
mov
inc
pop
xchg
or
test
inc
mov
sub
imul
xchg
sbb
and
test
aaa
ror
leave
jle
rol
jge
mov
adc
aad
push
mov
shrd
cld
repz
ret
arpl
inc
mov
test
adc
out
cmp
retf
push
test
dec
sub
stos
icebp
rol
sahf
pusha
rcl
sbb
retf
jo
and
jle
mov
dec
pop
std
add
mov
cmps
pop
enter
mov
add
in
and
or
mov
xchg
add
fs
lea
retf
stos
mov
aaa
inc
or
xor
mov
inc
add
ins
nop
fwait
jne
idiv
mov
std
mov
add
outs
pop
cmps
cmps
mov
pop
std
fild
scas
mov
push
cmps
cmp
ds
jmp
push
sbb
movs
jb
jbe
fwait
leave
retf
hlt
pop
fcmovnbe
and
ficom
jl
int
xor
inc
lods
sub
jb
fcomp
cmp
and
inc
in
xchg
inc
xchg
int
ret
and
sub
xchg
aam
out
mov
mov
mov
(bad)
pop
xchg
inc
inc
inc
sahf
sbb
aam
mov
stos
mov
push
and
fmul
test
stc
sbb
outs
fdiv
inc
test
and
mov
sbb
sbb
mov
sahf
cmp
jl
or
or
(bad)
or
mov
push
out
stos
std
and
cmp
aam
stos
or
std
jnp
pop
add
shl
je
mov
cmps
or
inc
xrelease
push
mov
stos
data16
addr16
fdivr
shr
xor
das
mov
hlt
pop
retf
sbb
and
or
stc
dec
pop
pop
call
ja
fcom
mov
aaa
fadd
cmp
sub
imul
addr16
stc
imul
stos
pop
mov
inc
daa
mov
js
(bad)
xchg
inc
(bad)
mov
or
sti
jmp
mov
mov
cmps
jecxz
bound
lea
lods
sub
(bad)
rcl
arpl
aas
cdq
sbb
mov
cmp
mov
sub
ins
in
jmp
inc
add
lds
imul
jno
pop
or
jge
lods
cmp
mov
adc
es
fdiv
lds
inc
scas
outs
test
push
into
cld
or
push
(bad)
mov
jnp
movs
mov
mov
fld
in
mov
push
cmp
retf
inc
loopne
js
push
or
clc
xor
enter
pop
sar
jno
retf
pop
ja
or
js
add
mov
sbb
pop
add
ins
cwde
cld
mov
jmp
mov
mov
call
lock
mov
inc
jle
fwait
mov
inc
xlat
jmp
hlt
xchg
xchg
movs
gs
push
inc
mov
in
es
inc
cwde
jno
dec
or
out
fisttp
je
retf
std
jle
sbb
into
ss
aaa
xor
cmp
mov
dec
inc
lahf
movs
pushf
or
cmp
sar
inc
jne
ror
in
xor
cs
lea
lds
test
sbb
fstp
test
xlat
dec
cs
jmp
push
aaa
gs
xor
mov
xor
enter
gs
sbb
sbb
adc
mov
fadd
mov
jge
test
stc
into
cwde
sets
dec
(bad)
dec
add
(bad)
out
xchg
mov
inc
out
add
cld
mov
mov
push
inc
loope
mov
pop
sti
shl
xchg
pop
int3
push
rcl
pop
sub
dec
cmp
xor
outs
xchg
je
shl
clc
sbb
cld
jns
jg
(bad)
pop
cs
adc
sbb
sub
jge
shr
scas
dec
inc
test
pusha
enter
mov
jg
fisub
xchg
ret
cmp
jmp
addr16
jb
int
mov
in
je
test
dec
xor
jle
mov
stos
sub
call
xor
cmp
mov
test
sahf
xor
fisttp
aad
mov
or
inc
push
push
mov
iret
dec
pop
mov
pop
mov
sti
ins
pop
cmovs
in
mov
sbb
and
lock
movs
mov
xchg
inc
call
sbb
inc
aam
scas
cmc
cli
js
mov
jno
and
dec
cmp
hlt
jmp
ror
gs
push
pop
or
mov
icebp
imul
push
ins
jnp
jmp
xor
mov
arpl
popa
out
mov
xor
fsub
jmp
(bad)
fld
int
inc
loop
inc
push
mov
test
mov
popf
add
mov
xchg
outs
inc
mov
sbb
pop
add
jmp
repnz
aas
pop
jbe
mov
jnp
inc
mov
sbb
mov
xor
aaa
lods
cmp
scas
imul
xor
in
mov
aas
iret
sar
loop
dec
jle
outs
inc
fsubr
ret
call
push
leave
stos
test
lock
xchg
add
or
clc
test
mov
sub
imul
cmp
jecxz
scas
and
adc
pop
fbstp
inc
pop
lea
push
cdq
les
dec
retf
fwait
aam
push
or
xor
pop
data16
cmp
imul
sub
lds
or
sub
lahf
repz
in
out
in
mov
mov
test
mov
fdivr
lods
movs
mov
lock
aad
cmp
cmp
sub
ja
sub
ins
sbb
inc
push
dec
call
sub
sub
push
leave
xor
jbe
sub
push
ins
and
cmp
adc
xor
jbe
fld
mov
mov
sub
cli
xor
out
stos
push
push
mov
(bad)
call
xor
outs
imul
in
pop
cld
dec
data16
popf
sbb
pop
pop
lahf
cwde
scas
mov
sub
inc
fimul
jl
fnstsw
lahf
cmp
mov
je
xchg
and
pusha
fcmovnu
loop
scas
(bad)
imul
pop
and
pop
out
mov
push
mov
icebp
es
lea
inc
mov
in
test
cmp
out
mov
dec
sub
out
rcr
adc
push
pop
jne
retf
lods
mov
sti
rcr
out
add
in
cmp
je
mov
dec
push
mov
sbb
dec
pop
out
mov
cmp
cmp
retf
fwait
stc
sbb
jle
dec
lahf
and
sbb
ret
xchg
push
(bad)
mov
mov
test
daa
mov
data16
adc
xchg
dec
in
not
cld
shl
jle
sbb
dec
mov
dec
sbb
mov
lahf
xor
imul
in
push
ret
not
jae
(bad)
adc
cmp
adc
inc
jns
adc
xchg
dec
add
push
inc
neg
mov
pushf
push
jp
movs
outs
xchg
pushf
or
xchg
jne
aad
(bad)
sub
mov
dec
(bad)
fs
jmp
shl
mov
mov
pop
cmp
ficomp
or
adc
stos
inc
sub
mov
jmp
fisttp
push
add
loop
das
jb
mov
sub
jl
sahf
cmp
stos
adc
cmp
fcomp
fstp
push
mov
ret
jp
shl
cmp
fldenv
fwait
mov
pop
mov
int3
xlat
xchg
scas
enter
aad
leave
sub
adc
dec
in
fsubr
push
ds
sub
imul
sbb
popf
ret
or
cmp
cmp
adc
dec
das
jl
and
imul
scas
mov
fsubr
out
mov
js
pop
gs
sub
cwde
mov
inc
shl
lods
sbb
lock
xchg
and
jmp
pop
push
cmp
add
jmp
push
imul
xor
pushf
mov
mov
add
popa
jmp
sbb
inc
xor
xor
sbb
push
xchg
ins
out
dec
nop
or
xchg
aad
or
pop
gs
sti
cmp
sbb
mov
dec
call
dec
(bad)
jb
adc
sbb
cmps
add
xchg
out
call
(bad)
jnp
das
repz
rcr
mov
cmp
inc
mov
mov
mov
cmps
imul
and
inc
cs
pop
lods
jbe
pop
pop
sbb
cs
test
or
adc
out
pop
retf
popa
mov
pop
mov
in
shl
div
lods
stos
scas
retf
pop
inc
mov
ret
lods
aad
pop
xchg
call
ss
int
push
icebp
cmp
xor
pusha
pop
or
xor
jnp
fadd
inc
jnp
loope
ds
test
mov
pop
mov
jnp
in
out
enter
pop
add
and
into
loop
mov
out
(bad)
mov
scas
jae
push
pop
nop
pop
addr16
nop
mov
xchg
int3
repz
cmp
mov
daa
xor
hlt
aam
call
cmps
sbb
inc
xchg
push
sub
stos
mov
pop
(bad)
mov
sbb
sub
sbb
addr16
shr
(bad)
mov
pop
mov
add
sbb
stos
push
mov
ins
mov
cmps
jnp
out
jecxz
or
imul
inc
add
mov
sbb
and
(bad)
jmp
pop
loope
jge
dec
xchg
daa
pop
push
mov
sbb
fnsave
add
je
arpl
and
mov
test
hlt
sbb
mov
outs
stos
aam
or
push
fst
cmp
mov
sbb
mov
pop
popf
jecxz
push
rcl
xor
dec
(bad)
cmps
fsub
dec
add
adc
in
sbb
xlat
cmp
sub
in
jae
and
or
call
pusha
lea
lods
js
in
ds
pop
jae
sub
or
dec
adc
mov
into
and
push
aaa
mov
ins
xchg
mov
cmp
or
lock
mov
inc
loop
popa
jp
je
test
dec
cmps
out
xchg
adc
out
push
rol
stos
es
icebp
cwde
xchg
retf
inc
dec
loopne
mov
inc
inc
pop
call
fsubr
and
jmp
clc
jl
pop
arpl
inc
mov
jb
push
sub
cmps
inc
pushf
shl
(bad)
je
push
add
aaa
mov
scas
daa
lods
dec
js
dec
dec
pushf
push
addr16
mov
inc
or
shr
in
add
dec
retf
cwde
hlt
inc
loopne
mov
push
enter
out
test
popa
jns
sahf
rep
pop
rcr
mov
sbb
test
xor
cs
jp
ds
sub
lea
xchg
dec
cmp
lahf
xchg
mov
clc
retf
aas
cmps
repz
push
and
sbb
sub
outs
sbb
jge
aam
add
inc
sti
leave
mov
test
sub
push
fist
jl
mov
add
dec
mov
mov
jns
sahf
test
cmc
std
fbld
pop
mov
sbb
scas
pop
cld
pop
arpl
push
xor
sbb
mov
stos
dec
in
and
push
inc
ja
xor
mov
xchg
(bad)
inc
outs
test
adc
test
nop/reserved
(bad)
enter
xchg
stc
add
fcomp
mov
cmps
dec
out
addr16
(bad)
mov
hlt
inc
hlt
cmps
lods
out
fistp
add
mov
hlt
pop
inc
mov
aad
ds
shl
jg
shr
push
mov
mov
jp
(bad)
and
sub
mov
mov
nop
ins
sbb
xchg
and
ficom
pushf
ins
jle
xchg
push
mov
inc
test
add
jecxz
add
imul
imul
fimul
mov
popf
push
(bad)
fistp
pop
int3
push
or
jmp
inc
jp
fsubr
adc
dec
mov
lods
mov
rol
jge
out
jns
inc
and
icebp
add
mov
aad
add
cmp
fdivp
xchg
sbb
add
sub
xbegin
jge
jmp
push
mov
std
adc
mov
ins
mov
(bad)
clc
stos
rol
xor
jg
cs
push
dec
sar
and
aas
les
sbb
push
pop
ja
mov
popf
sbb
or
(bad)
inc
inc
out
sub
cmp
test
sub
in
mov
and
aam
cmp
sti
add
jle
inc
mov
outs
xchg
fnsave
adc
adc
xchg
push
xchg
movs
lock
aad
xchg
fdiv
js
mov
test
sbb
jns
cmp
ins
movs
adc
mov
xchg
popf
add
leave
inc
loopne
sbb
push
mov
or
aaa
in
pop
mov
mov
jle
sar
or
and
fcom
cld
dec
add
call
aam
push
loopne
inc
sub
dec
lea
inc
loope
stos
cmp
mov
xchg
(bad)
cmp
mov
ss
or
fsubr
stc
jl
daa
js
pop
mov
dec
sub
mov
fwait
call
push
ror
sub
mov
cmps
push
aas
mov
lods
pop
add
jge
rcr
sti
adc
mov
mov
add
mov
in
popf
fsub
sub
lods
das
pop
rcl
movs
(bad)
inc
sbb
jmp
sub
loope
out
pop
les
push
pop
push
mov
or
ins
fst
or
mov
push
sub
and
jae
xor
sbb
mov
dec
lods
shl
sub
adc
shr
out
dec
and
addr16
and
lds
xchg
movs
mov
dec
xchg
jecxz
popf
xor
in
les
xchg
test
dec
sbb
in
neg
sbb
and
dec
cmp
mov
test
add
(bad)
adc
add
jne
pop
push
(bad)
mov
stos
push
pop
cmp
out
mov
xchg
enter
mov
stos
imul
adc
in
iret
sbb
mov
mov
test
stos
jb
sub
aaa
daa
sbb
sti
aam
cld
sub
jne
bound
cwde
mov
xor
cmps
fimul
data16
retf
and
inc
sbb
lahf
adc
xor
jl
fdivr
jp
lea
in
std
loopne
mov
pusha
aad
push
test
xchg
jg
mov
add
hlt
mov
mov
lods
mov
mov
ficomp
xchg
fisubr
ins
fnstcw
and
shl
ret
adc
cmp
ss
mov
movs
mov
shl
adc
into
sbb
or
in
or
xor
jo
mov
push
call
loope
test
call
or
rcl
hlt
stos
pop
fsubr
gs
shl
xchg
test
dec
loopne
repz
dec
add
inc
jmp
retf
or
push
aad
clc
push
repz
bound
or
pop
xchg
jge
add
and
inc
xor
cmp
ja
pop
jmp
lahf
sub
data16
outs
cmp
std
or
dec
inc
hlt
mul
rcr
pop
jae
jg
xchg
loope
sahf
in
mov
xchg
mov
test
mov
adc
and
mov
mov
xor
fisttp
pop
sub
jo
bound
dec
mov
mov
vmovaps
adc
xor
push
or
mov
xor
jnp
mov
add
sbb
mov
retf
js
pop
mov
pop
call
loopne
push
(bad)
aad
sbb
inc
xchg
pop
pop
xchg
nop
xchg
das
xor
jecxz
scas
aam
jp
or
push
xor
push
loopne
js
push
cdq
adc
mov
imul
stos
inc
ret
mov
sub
xor
sub
jmp
lods
ss
inc
dec
mov
pop
in
xchg
cmp
sbb
mov
add
xchg
jb
inc
push
inc
test
cld
mov
jb
lock
jmp
int
mov
mov
lods
mov
sbb
mov
xor
cmps
push
pop
xor
ss
jns
xchg
sub
mov
(bad)
jmp
pusha
xchg
std
and
sub
and
or
sub
lahf
ins
xor
cli
push
inc
(bad)
dec
pop
push
fild
xchg
out
and
push
enter
aam
cmc
xor
push
mov
pop
pop
scas
test
outs
cmp
(bad)
xchg
aad
jmp
cmp
fld
test
dec
cmp
das
pop
pop
xor
icebp
mov
mov
int
sub
fild
outs
add
inc
jge
jecxz
sub
push
mov
pop
mov
or
sbb
sbb
pop
call
jmp
fs
std
mov
sahf
mov
inc
mov
xlat
hlt
cdq
rcr
pop
adc
push
int3
dec
pop
adc
fcomip
push
lock
inc
add
mov
xchg
shr
leave
ret
lea
inc
xor
cmp
inc
sub
lea
and
jo
mov
test
inc
push
pusha
lahf
les
loopne
outs
cmps
jle
xchg
mov
mov
add
movs
xchg
and
test
adc
mov
mov
xchg
sbb
or
(bad)
inc
cli
and
xor
mov
sbb
les
ror
test
jns
inc
cmp
add
daa
add
dec
push
cwde
imul
cld
movlps
push
fincstp
mov
mov
imul
jge
mov
in
repz
pusha
push
(bad)
in
ja
push
mov
jbe
mov
into
aam
into
jmp
dec
mov
sub
retf
jl
cmp
xor
xor
push
mov
fwait
mov
pop
aad
enter
loope
bound
mov
pusha
popf
push
mov
sahf
dec
and
mov
outs
and
inc
retf
xor
jbe
lds
fdivr
pop
movs
out
test
(bad)
jne
mov
dec
jne
xor
xor
data16
imul
enter
clc
rcl
pusha
in
dec
arpl
jno
cs
jb
pop
or
stos
mov
mov
xchg
aad
enter
pop
and
adc
bound
and
sbb
fwait
inc
xor
mov
loope
mov
loope
je
mov
scas
repnz
test
xchg
push
retf
and
std
xor
push
repz
jl
out
cld
push
dec
loopne
lods
xlat
mul
call
fistp
iret
cmp
xor
imul
pop
pusha
xchg
stos
mov
and
ficomp
ret
sbb
aaa
aam
sub
adc
xchg
adc
jg
add
lahf
inc
dec
mov
ins
(bad)
in
test
inc
jl
push
mov
or
test
icebp
xchg
ror
inc
lods
inc
ja
mov
fiadd
mov
cmc
ds
(bad)
repnz
gs
xor
inc
cmps
or
xchg
imul
in
xchg
test
arpl
into
addr16
add
in
adc
or
jg
ror
or
xchg
cmps
mov
jecxz
call
push
popa
fsubr
mov
sbb
shr
xchg
adc
mov
cmp
ins
sbb
daa
pop
cmp
in
inc
push
or
cwde
or
sub
mov
call
fisttp
jl
mov
sub
sbb
adc
mov
mov
inc
push
outs
jmp
loopne
fild
jg
push
xchg
jg
mov
into
fisub
mov
pop
add
sar
lea
mov
adc
(bad)
sahf
adc
pop
xchg
pop
inc
data16
push
xchg
scas
push
sub
(bad)
call
inc
pop
sbb
add
dec
je
jb
test
jae
retf
inc
sub
mov
rcr
mov
pop
mov
and
ret
sti
ins
mov
pop
pop
movs
mov
loope
fadd
pop
sbb
lahf
rol
dec
retf
lea
or
sub
clc
cs
int
add
gs
pushf
(bad)
jge
pop
pop
int
imul
add
jl
movs
dec
adc
sub
stos
mov
cmp
repnz
jne
mov
cmp
mov
popa
hlt
out
pop
sti
(bad)
lods
mov
adc
mov
mov
(bad)
cwde
fld
enter
cmp
pop
cld
inc
cli
cmp
inc
lods
pop
dec
outs
mov
movs
mov
adc
clc
ins
fdecstp
ds
fs
inc
(bad)
xor
mov
and
pop
sbb
add
xchg
mov
xchg
pop
add
jae
mov
mov
xor
loopne
cs
(bad)
sbb
jl
mov
repnz
sbb
hlt
ins
pop
mov
push
call
in
imul
pushf
push
jno
dec
pop
dec
mov
(bad)
ins
xchg
frstor
jmp
push
jnp
or
dec
push
mov
pop
scas
aam
adc
push
xor
clc
mov
into
xchg
jmp
sub
shl
mov
mov
cld
adc
pop
lock
lahf
mov
(bad)
pop
inc
mov
(bad)
lods
ret
jp
mov
push
add
repz
inc
in
push
sub
mov
inc
mov
push
out
(bad)
test
fsubr
arpl
call
les
data16
popa
mov
data16
sbb
add
imul
inc
sbb
fiadd
icebp
mov
push
neg
nop
ja
inc
test
pop
inc
jecxz
repnz
cmp
loopne
mov
iret
movntps
cli
cmp
arpl
ins
inc
je
push
xor
mov
pop
lods
jle
repnz
or
sub
jne
cmp
data16
pop
xchg
xchg
fcmove
mov
mov
fs
fistp
adc
cmps
addr16
sar
popf
das
in
mov
mov
inc
cdq
ficom
lods
cli
popa
sbb
dec
iret
sbb
out
pop
std
ds
pop
xor
push
mov
inc
mov
in
push
fadd
and
aaa
fidivr
inc
push
pop
icebp
and
(bad)
(bad)
xor
mov
xor
icebp
and
pop
imul
retf
popa
mov
xchg
jns
clc
jmp
mov
add
and
hlt
cmp
xchg
jmp
retf
dec
and
jmp
or
cdq
or
inc
xchg
inc
add
xchg
lahf
leave
adc
mov
mov
cmp
ss
add
push
mov
xor
inc
mov
ins
cdq
fwait
stos
add
js
stos
in
mov
inc
bound
and
xchg
pop
or
mov
xchg
mov
gs
mov
mov
fadd
mov
leave
pop
inc
push
mov
neg
adc
or
cmps
pusha
sub
xchg
cwde
scas
sub
(bad)
inc
ret
mov
jge
dec
adc
or
outs
push
mov
sbb
and
cmp
xlat
mov
hlt
jl
and
dec
mov
dec
cmp
dec
icebp
fwait
scas
mov
test
in
lock
rcr
icebp
xchg
jnp
push
repz
or
sahf
add
and
jae
imul
adc
xchg
in
add
inc
cmps
and
lods
push
mov
push
mov
data16
xchg
adc
outs
out
mov
fnsave
inc
fwait
push
xlat
mov
mov
xchg
push
xor
loope
popf
pop
add
mov
or
lahf
push
xchg
push
push
and
mov
aam
rcr
imul
add
test
cdq
imul
cmps
mov
pop
mov
popa
mov
mov
aam
dec
sahf
dec
aas
mov
add
xchg
mov
fwait
out
inc
mov
push
div
outs
and
pushf
shl
xchg
jge
cmps
je
leave
(bad)
xchg
rcr
cld
mov
pop
mov
repnz
test
es
xchg
mov
(bad)
ds
push
sbb
pop
shl
cmp
data16
xchg
cmp
xchg
out
gs
or
sub
pop
or
jns
mov
xchg
sbb
mov
or
push
push
out
mov
repnz
stc
sbb
stos
jp
xchg
enter
mov
push
out
ror
jecxz
mov
nop
cmp
idiv
xchg
ret
data16
push
push
add
cdq
add
ins
xchg
adc
mov
cmp
xchg
lds
dec
in
add
daa
(bad)
ss
adc
and
rcl
xchg
jno
test
push
cmp
pusha
retf
sbb
gs
mov
and
pop
cmp
stos
test
xchg
dec
test
mov
das
pushf
pusha
pop
cmps
mov
sbb
cld
imul
imul
sub
(bad)
in
jle
pop
add
outs
cmp
push
adc
or
inc
push
inc
push
fcomp
imul
add
inc
lahf
jae
aam
add
adc
movs
adc
enter
jnp
stos
push
les
mov
cmp
(bad)
in
sti
scas
mov
daa
fild
mov
xor
lods
xchg
dec
stos
xor
jnp
xor
cmp
push
fwait
xor
mov
pop
(bad)
or
imul
and
or
push
lods
xor
mov
stc
(bad)
aam
pop
dec
test
dec
test
call
push
lds
mov
mov
sub
ins
sbb
and
std
lods
iret
out
dec
(bad)
movs
dec
in
dec
enter
fisttp
add
xor
popaw
inc
std
push
pop
jns
mov
mov
and
inc
shr
mov
js
push
sbb
sub
push
pop
or
dec
push
scas
push
add
xchg
dec
push
inc
call
aam
push
push
pushf
pop
rol
push
loop
add
enter
rol
fwait
mov
outs
movs
test
pusha
cmp
fstp
test
xor
xor
int
push
ret
daa
js
sub
dec
pop
(bad)
mov
call
and
fidivr
orps
sub
pop
adc
fs
jge
xchg
sbb
mov
pop
inc
(bad)
stos
sti
pop
lods
repz
stc
pop
pop
movs
push
ret
mov
cdq
sbb
mov
out
mov
pushf
xor
fidivr
mov
xchg
xor
inc
push
mov
xor
sbb
repnz
les
adc
mov
(bad)
mov
addr16
jo
shl
jbe
(bad)
adc
jns
xor
scas
inc
jae
imul
sub
movs
shl
call
(bad)
lds
jge
cmps
and
mov
cmp
loop
push
(bad)
retf
out
arpl
mov
pop
mov
sbb
rol
push
call
fldenv
cmp
ss
mov
pop
dec
cdq
lds
sbb
mov
hlt
js
jp
retf
add
cdq
push
mov
out
push
js
ja
retf
in
mov
das
adc
cmp
sbb
neg
icebp
popf
popa
ror
xchg
adc
outs
test
outs
jno
cdq
mov
fimul
dec
cli
outs
inc
sbb
jmp
dec
adc
push
mov
jne
stos
fwait
(bad)
xor
xchg
aad
fs
or
inc
outs
jns
and
and
ja
data16
jb
stos
xor
fld
leave
rcr
icebp
inc
push
pop
nop
popa
rcr
push
xchg
stos
arpl
clc
out
xor
inc
mov
mov
add
mov
fild
sahf
ficomp
push
fcom
loop
sar
cmp
addr16
daa
stos
push
add
fwait
les
jecxz
or
pop
xor
xor
mov
stos
pmullw
pop
adc
imul
inc
retf
stc
pop
jb
mov
test
jne
mov
xchg
pop
rcr
lahf
fs
in
out
ds
add
stos
dec
xchg
push
aad
add
sar
cmp
outs
mov
dec
sub
mov
iret
jbe
into
add
addr16
cmp
dec
add
push
mov
arpl
xchg
push
mov
xor
cmps
stos
or
fsub
inc
pop
ins
mov
fdiv
mov
outs
jmp
jnp
leave
mov
idiv
mov
dec
ret
inc
nop
push
xor
leave
mov
push
rcl
cmp
sub
ror
add
cmp
repnz
movs
adc
inc
fbstp
mov
jns
mov
mov
shrd
aas
(bad)
push
xchg
repz
scas
imul
mov
retf
mov
sub
ret
xor
cmps
std
lods
rol
dec
inc
movs
mov
es
cli
mov
hlt
pop
inc
(bad)
mov
push
cmp
(bad)
fsub
push
pop
sbb
xor
lods
inc
pop
jbe
(bad)
stos
mov
or
add
rcr
inc
sbb
sbb
and
jns
add
sbb
out
test
xor
dec
cmp
into
mov
stos
aam
jmp
pop
jl
inc
out
call
loopne
dec
in
mov
cmp
loope
xor
pop
nop
cmps
(bad)
shr
test
inc
loope
stos
addr16
(bad)
mov
dec
sar
adc
or
neg
inc
call
pop
add
outs
xor
mov
fcomp
shl
movs
(bad)
add
test
sub
sbb
imul
mov
inc
in
scas
mov
sar
mov
pop
mov
cmps
popa
push
iret
(bad)
jmp
out
cmp
lahf
mov
push
cli
fld
sahf
inc
cmc
dec
xlat
daa
and
retf
mov
pop
loopne
pop
add
es
test
cwde
mov
inc
stc
in
sbb
aad
push
popa
cmp
movhps
jp
mov
inc
xchg
xchg
sbb
js
cmps
xchg
rol
pusha
add
mov
cdq
ret
fild
mov
jbe
loope
push
clc
in
jbe
gs
mov
outs
sbb
xchg
cmc
xchg
adc
dec
enter
cli
inc
jns
cmp
or
pushf
jns
push
out
mov
out
call
or
hlt
sbb
push
or
and
push
stc
inc
dec
fwait
push
and
into
mov
daa
jge
out
add
jne
mov
pop
sahf
call
push
aaa
fbld
call
ja
mov
add
in
cld
call
inc
fwait
sub
xor
sbb
retf
out
sub
aaa
jae
daa
dec
jo
pop
or
lds
xchg
cmc
jno
loope
outs
ja
leave
inc
xor
aas
mov
rol
addr16
xor
and
or
fucomi
inc
mov
pop
ja
pop
out
shl
movs
pusha
std
nop
push
or
fild
(bad)
mov
setae
(bad)
icebp
loop
cmp
jecxz
std
es
adc
jmp
push
test
push
push
mov
dec
lods
movs
lahf
mov
and
inc
int3
jmp
mov
push
leave
sub
sub
xor
dec
pop
push
mov
and
pop
mov
js
test
inc
jecxz
xchg
dec
loope
inc
or
test
mov
lods
cmp
test
call
scas
dec
cmp
cld
hlt
fs
and
aaa
jg
sbb
imul
es
cdq
pushf
mov
out
loope
pushf
cli
add
sbb
inc
sub
pop
xchg
add
push
sub
neg
xor
leave
(bad)
jmp
loop
jge
xchg
sar
test
mov
out
movs
pop
adc
clc
inc
mov
dec
push
or
call
push
retf
jno
or
dec
enter
in
push
jle
inc
mov
inc
or
add
xchg
sbb
(bad)
push
dec
add
fdivr
sbb
add
les
arpl
sbb
mov
xor
sub
in
mov
add
stos
ja
mov
pop
mov
mov
pop
mov
repnz
js
mov
jno
mov
aam
test
mov
xchg
push
icebp
dec
and
ror
push
or
cmp
mov
xor
mov
and
add
cmc
sbb
jns
mov
adc
add
push
mov
je
sbb
mov
fnsetpm(287
loopne
stos
sar
jl
dec
mov
mov
pop
test
or
gs
out
out
add
mov
in
xchg
mov
inc
xchg
mov
mov
(bad)
or
sbb
loope
je
pop
scas
ins
inc
pop
movs
push
and
xchg
scas
mov
or
add
(bad)
or
loopne
ss
sub
lods
cmp
fisttp
xchg
je
rol
stc
int3
mov
clc
dec
outs
pop
movs
ins
cdq
cdq
fld
cld
xchg
jae
in
or
fldcw
mov
pop
pop
cdq
popf
std
xor
loop
cmp
mov
retf
or
mov
push
push
lea
dec
bound
mov
sar
jmp
push
aaa
pop
and
xchg
cmp
scas
dec
es
push
sbb
xor
pusha
iret
jmp
outs
sbb
lods
push
lock
std
imul
mov
stos
sub
jne
scas
mov
push
test
xchg
sbb
shl
(bad)
cli
jecxz
inc
jmp
pop
push
cmc
sar
dec
sahf
and
sub
sbb
outs
sbb
cmps
test
jecxz
sub
push
sub
add
into
xor
mov
add
pop
(bad)
iret
cwde
add
jno
call
mov
inc
ret
mov
mov
adc
pop
and
and
icebp
stos
rol
jle
(bad)
je
imul
or
jmp
add
xchg
imul
mov
icebp
pop
out
rcr
pusha
add
and
mov
inc
je
dec
inc
cmps
sub
xchg
mov
aam
mov
(bad)
fist
pop
jp
sub
test
push
aad
push
adc
ror
stos
fld
sub
ja
mov
in
xchg
mov
xor
dec
sti
cmp
repnz
lock
fcomp
cmp
cmp
xchg
pop
cmp
nop
nop
leave
or
clc
dec
(bad)
jmp
xchg
cli
je
push
adc
add
xor
xor
jp
movs
push
add
movs
xor
cmps
loope
mov
inc
jecxz
inc
push
mov
jge
cld
xchg
pop
ret
lahf
pop
or
in
sub
mov
js
ret
pop
retf
cmc
shl
in
mov
push
retf
add
std
daa
rol
push
mov
jnp
popa
lea
test
movs
int
jb
fldenv
push
ja
gs
and
pop
test
push
xchg
sbb
sub
push
lods
loopne
stc
push
jle
test
popf
xchg
fld
cdq
inc
jmp
(bad)
scas
movs
ret
push
pop
xchg
leave
mov
adc
vcmpps
inc
mov
shl
aas
sub
lock
sbb
fsubr
pop
test
push
nop
mov
ret
out
clc
fiadd
(bad)
cld
dec
jo
or
add
das
sub
add
mov
gs
mov
sbb
lahf
(bad)
xor
cld
jl
add
rcr
mov
call
mov
mov
test
add
xchg
xchg
xchg
test
pop
fmul
or
fimul
daa
pop
cdq
or
inc
sub
aam
and
pusha
(bad)
shl
fwait
jmp
gs
jge
jmp
inc
ja
push
pop
test
pop
call
int
cmps
xor
inc
dec
xchg
rol
mov
in
in
and
mov
and
inc
mov
test
fcomp
push
repz
xor
rcl
jbe
sahf
sub
pop
push
popf
mov
stos
push
sti
loop
(bad)
dec
pop
or
push
sub
jge
jmp
sbb
inc
xor
adc
fwait
and
inc
lods
js
into
shl
stos
pop
cmc
cmps
inc
cmp
(bad)
mov
fcomp
xchg
test
aad
mov
xchg
aas
sbb
xchg
js
ret
inc
repz
fmul
adc
jmp
pop
jns
mov
pop
inc
mov
sub
cmps
stos
mov
pop
fsubrp
and
jmp
(bad)
xor
es
push
adc
adc
cwde
sub
adc
cmp
enter
pop
pop
lds
add
movs
rcr
cmps
xchg
xor
jl
lahf
lahf
mov
fstp
test
adc
rol
icebp
mov
adc
mov
jecxz
in
add
dec
mov
and
mov
mov
inc
(bad)
aas
(bad)
inc
inc
adc
xor
stos
ss
or
sbb
xchg
dec
cmp
mov
add
xor
loopne
(bad)
sub
pop
inc
fild
les
push
xchg
push
add
sar
lahf
pushf
repz
rcl
fprem
push
xor
cmp
into
icebp
repz
pop
jnp
xor
dec
sub
test
pop
fsubrp
ds
in
cmp
gs
call
cmp
call
retf
mov
jp
jnp
data16
fstp
mov
push
(bad)
jmp
mov
inc
in
cmc
cmp
xor
mov
icebp
pop
aaa
inc
jmp
loopne
ret
cmp
imul
pop
push
xchg
ror
dec
inc
std
inc
loope
sbb
and
inc
xor
push
jecxz
mov
(bad)
dec
cmp
cwde
sub
lods
test
sub
pop
fisttp
xchg
xor
loop
and
jmp
adc
push
scas
mov
outs
jge
nop
std
xor
fcomip
scas
rcl
xchg
das
xlat
xor
pop
icebp
out
in
je
or
or
xchg
jbe
ss
dec
cwde
xchg
jbe
repnz
sub
add
inc
dec
movs
or
adc
outs
sbb
addr16
add
inc
jp
jno
nop
call
nop
jp
stc
jecxz
jb
inc
xchg
cli
fidiv
xchg
xchg
xchg
call
or
cld
idiv
adc
push
xchg
sbb
sti
jbe
popa
mov
mov
push
or
mov
jae
push
sbb
or
mov
jb
sbb
xchg
jl
(bad)
sbb
lea
(bad)
rcr
cmp
outs
scas
pop
(bad)
iret
sar
cmp
inc
es
out
add
ins
mov
push
pop
jmp
fst
mov
jno
sub
(bad)
(bad)
jae
cmp
addr16
outs
jg
xchg
dec
scas
ret
adc
mov
retf
shr
jno
sub
inc
packsswb
xchg
or
adc
sub
mov
ds
imul
add
adc
call
shl
jbe
movs
push
sub
int3
xor
mov
xchg
sub
or
call
push
jae
jnp
cs
jne
outs
daa
ja
xchg
stos
scas
or
fdiv
sar
ror
inc
inc
jmp
sub
sub
xchg
pop
mov
les
or
stos
(bad)
call
push
jle
and
jge
les
sar
xchg
dec
mov
push
sbb
in
rol
cdq
xchg
xor
fs
xor
das
inc
push
ja
fwait
push
je
pushf
push
sub
adc
fimul
sbb
xor
xor
add
add
push
jnp
or
mov
xchg
push
cmp
out
es
dec
ins
je
dec
mov
in
loopne
jge
in
movs
and
sbb
adc
popa
ja
xchg
out
add
test
int3
retf
dec
inc
mov
jnp
push
test
and
ds
dec
fnstsw
pop
and
push
inc
jl
xchg
imul
jp
xchg
push
ja
dec
clc
sub
push
jl
sub
cmp
jae
mov
add
sbb
xor
enter
inc
pop
popf
ja
(bad)
(bad)
bound
out
and
stos
xchg
cs
sbb
mov
pusha
dec
fsubr
cmp
cmp
sub
or
sbb
cmp
cmps
into
xor
cmps
push
iret
push
movs
(bad)
punpckhbw
mov
gs
sub
sub
jge
mov
pushf
or
push
and
pop
sahf
cmps
jmp
sbb
sub
pusha
loopne
cmps
push
fcomip
movs
adc
jle
std
test
dec
pushf
jbe
in
lds
adc
pop
adc
fwait
inc
sti
jno
or
cmp
(bad)
mov
call
or
(bad)
dec
mov
pop
out
mov
arpl
aam
xor
jne
sub
add
mov
int
fild
pop
inc
mov
jnp
mov
jno
stos
cdq
add
ret
jns
pop
cwde
push
xchg
sar
and
aam
(bad)
(bad)
shr
sbb
dec
add
xlat
clc
xor
popa
pusha
in
add
retf
adc
jmp
cmp
and
imul
or
jle
loope
adc
hlt
adc
addr16
lods
add
fmul
adc
inc
or
cli
mov
retf
ja
dec
popa
and
loop
mov
mov
in
cmp
out
xor
pop
icebp
pushf
mov
jp
xchg
mul
add
in
jne
xor
push
fadd
cmp
jbe
push
push
pop
lods
movs
xchg
mov
fwait
rcr
test
fisub
out
or
fidivr
add
lods
test
and
js
out
movs
aas
mov
jno
rcl
mov
arpl
xchg
xchg
hlt
out
and
adc
dec
mov
xchg
adc
out
retf
mov
leave
sbb
fs
cmp
test
movs
fwait
mov
aaa
repz
nop
or
fld
inc
and
and
pop
imul
scas
or
adc
into
sub
in
jmp
das
or
int
add
pop
pop
and
mov
in
shr
or
int3
inc
idiv
lahf
cli
adc
cmps
cmp
loop
lock
mov
ins
fisub
daa
sub
add
pop
dec
jl
push
inc
inc
lods
popf
nop
scas
pop
or
jg
into
or
sbb
dec
cmp
mov
addr16
rol
and
das
adc
mov
fistp
outs
pusha
mov
iret
rol
leave
xchg
jo
cmps
imul
retf
pop
mov
fwait
mov
fwait
dec
arpl
jmp
xchg
int3
popf
fs
xchg
xchg
sub
cs
or
in
inc
cmp
pop
mov
inc
push
je
mov
inc
(bad)
fcomp
cwde
jmp
adc
or
popa
lods
pop
lea
(bad)
adc
jne
mov
mov
test
popf
and
call
popa
jle
nop
ja
xchg
shr
leave
cmps
push
loop
inc
sub
mov
mov
mov
shr
popf
mov
fistp
jecxz
pop
les
sub
add
jle
and
dec
cmps
dec
and
fwait
xchg
mov
(bad)
daa
pushf
cmc
dec
pop
dec
xor
pop
imul
sub
jge
xchg
push
inc
nop
fstp
out
xchg
sbb
stc
inc
sbb
repz
xor
inc
adc
mov
mov
pop
add
call
jle
mov
jmp
jns
inc
jne
fidiv
jle
mov
xor
mov
inc
inc
add
clc
push
sbb
pop
mov
mov
outs
jmp
mov
idiv
mov
sbb
jbe
dec
cld
mov
stos
inc
fucom
popa
pop
aam
xchg
rcl
cli
(bad)
jmp
cmc
daa
adc
repnz
cmc
mov
dec
sub
mov
ja
inc
add
dec
fbstp
pop
sub
xchg
mov
data16
addr16
jno
inc
add
inc
imul
jb
sbb
mov
jle
xor
repz
out
jg
mov
ficomp
sahf
dec
fimul
cld
or
dec
movs
xchg
ror
cmp
lods
cmp
icebp
test
mov
ds
arpl
adc
bound
inc
sub
mov
mov
add
neg
fstp
fisttp
xor
sbb
and
add
cdq
imul
add
nop
test
add
jmp
cmc
pop
pop
inc
xor
cli
dec
cdq
shl
(bad)
loopne
add
push
call
addr16
idiv
(bad)
jmp
enter
mov
inc
clc
dec
aam
pop
or
shl
inc
in
and
pop
mov
push
mov
retf
push
pop
fstp
jns
rol
jno
add
or
imul
mov
inc
mov
push
test
das
data16
jmp
inc
test
mov
jmp
push
icebp
dec
cli
xchg
sbb
mov
test
xchg
pushf
push
jbe
dec
sbb
mov
cs
push
dec
inc
xchg
push
xchg
scas
push
cwde
dec
inc
inc
mov
sbb
pop
inc
test
xor
mov
std
icebp
add
enter
inc
and
sar
in
xchg
lahf
jle
retf
ins
aad
mov
xchg
les
or
cmp
in
outs
scas
fmul
stos
das
aaa
dec
fsubr
jmp
cmp
push
xchg
sub
mov
mov
or
cli
pop
leave
in
xor
fcom
push
es
xor
sbb
(bad)
push
cmp
mov
adc
push
aam
adc
fcom
inc
popa
push
fnsave
mov
popf
adc
mov
and
out
movs
mov
dec
inc
sahf
test
inc
mov
icebp
sbb
fstp
bound
inc
mov
add
push
mov
push
pop
(bad)
pop
ror
mov
inc
aam
xor
sub
int3
daa
call
ins
add
sub
mov
jmpw
pop
nop
cmc
dec
out
pop
jl
pop
les
call
icebp
mov
test
fld
pushf
mov
mov
sar
popf
xor
inc
aad
pop
push
xlat
rcr
jp
or
daa
pusha
inc
sahf
cmp
retf
mov
sbb
lea
mov
add
pop
xor
add
xor
aam
inc
scas
fs
adc
xchg
sti
sub
das
pop
hlt
test
pop
stc
dec
jg
mov
mov
jmp
in
push
int
mov
mov
jmp
movs
mov
test
fisttp
mov
jmp
fld
jbe
inc
test
inc
adc
lea
push
call
ret
lea
jl
retf
push
push
arpl
mov
dec
push
call
shl
(bad)
std
mov
xchg
sub
jecxz
xchg
in
mov
std
mov
pushf
es
je
(bad)
cmps
hlt
aaa
test
ror
aad
pop
loop
xor
inc
je
pop
xchg
inc
dec
test
mov
call
mov
and
xor
mov
mov
outs
jbe
dec
xor
xor
fidivr
sbb
xchg
movs
cmp
icebp
pushf
ins
repnz
xchg
imul
ins
mov
cmp
mov
lods
jbe
gs
inc
pop
push
rcr
pop
ret
push
add
push
mov
sub
aam
aas
in
dec
enter
out
add
add
js
cmp
mov
test
mov
ds
stos
mov
xchg
inc
or
fild
std
stos
adc
mov
or
fisubr
mov
addr16
mov
fcomip
cmc
call
sub
ja
adc
mov
cmp
inc
push
div
movs
mov
add
inc
out
jle
(bad)
jbe
pop
aas
fcomp
add
and
sbb
or
mov
sub
(bad)
call
pop
inc
cmps
jae
mov
sub
add
sbb
movs
sbb
movs
popf
add
xlat
retf
clc
mov
test
call
in
int
popf
push
add
pop
inc
sti
inc
pop
outs
jmp
dec
loope
or
fdiv
stos
add
add
bound
sbb
aad
sbb
cli
mov
fnstcw
pusha
mov
fs
mov
(bad)
fld
test
xlat
xor
sar
sbb
loop
aam
push
mov
inc
aad
retf
ss
loopne
ficomp
das
inc
pop
mov
(bad)
call
mov
cld
pop
inc
imul
jbe
mov
adc
bound
imul
adc
(bad)
dec
xor
ins
aam
loop
lods
rcl
dec
mov
pop
cmc
sar
test
call
aam
push
repnz
mov
lahf
pop
add
iret
imul
test
je
dec
stos
dec
add
int3
mov
add
jg
jnp
setno
clc
fs
(bad)
add
rcl
and
cmp
dec
push
adc
dec
mov
push
mov
cld
stos
xchg
enter
arpl
pushf
das
fistp
xchg
arpl
(bad)
mov
shl
call
test
xchg
stos
aaa
fdiv
fimul
add
repz
addr16
cmp
lds
push
out
(bad)
or
dec
sti
add
dec
and
mov
mov
fist
scas
or
mov
jno
and
jmp
pusha
sti
pop
inc
bound
dec
mov
jmp
xchg
sbb
cmps
push
addr16
xor
and
adc
push
cld
leave
sar
inc
popa
sub
mov
jnp
test
test
dec
retf
mov
jmp
adc
push
or
jg
dec
dec
cmps
dec
aaa
xor
pop
push
inc
xchg
out
and
dec
inc
push
sub
xchg
shr
das
int
repnz
pop
mov
mov
scas
enter
out
retf
xchg
cli
sbb
scas
dec
xchg
outs
call
hlt
test
and
das
pop
jge
pop
add
mov
sbb
cmps
loope
adc
mov
pop
lea
xor
cmp
stos
mov
and
xchg
cmp
push
pop
jp
sub
sbb
test
test
cmps
jne
(bad)
shl
or
dec
sti
(bad)
fstp
mov
enter
in
inc
mov
dec
nop
gs
aas
cmp
(bad)
test
xchg
pop
push
cmp
adc
pop
movs
sub
ja
mov
pop
out
std
add
popa
inc
cli
and
ja
add
sbb
stos
pop
cmp
mov
out
int
cmp
jbe
fild
xchg
and
mov
xchg
cmp
imul
mov
dec
mov
add
(bad)
and
mov
in
jmp
shl
aaa
jl
imul
mov
sub
pop
int
sbb
fdivr
jno
mul
push
and
sub
push
popf
xlat
sub
jmp
cmp
test
scas
jecxz
mov
loop
and
clc
push
sahf
mov
add
mov
test
scas
inc
cmc
push
into
pop
pop
inc
leave
fdiv
fs
push
jnp
sub
test
sub
pusha
fcmovbe
add
and
sbb
or
sub
dec
pop
jmp
sub
push
pop
hlt
jmp
imul
ror
pushf
pop
jmp
ss
add
stos
dec
inc
mov
stos
xor
ffree
mov
cmc
arpl
mov
xor
or
into
mov
jbe
mov
jp
sti
jo
jbe
adc
mov
add
add
add
mov
inc
fs
ins
add
cmps
xor
mov
aad
jns
fidiv
cmp
jmp
jecxz
add
lock
jbe
jne
mov
js
xchg
mov
xchg
jecxz
jg
mov
jb
inc
aam
pop
or
loop
push
pusha
and
xor
pusha
xchg
mov
repz
(bad)
int3
or
daa
jmp
and
mov
sbb
lods
pushf
aas
xor
dec
shl
(bad)
inc
rcr
fwait
repnz
cmps
rcr
push
cli
fsubr
lods
shl
sub
mov
and
aad
pusha
xchg
scas
dec
sti
inc
out
sub
jmp
pop
jge
inc
popf
cmp
cmp
mov
mov
leave
mul
or
add
pop
pop
xor
fisttp
movs
or
mov
mov
in
mov
jmp
imul
jecxz
mov
out
sar
jbe
dec
movs
call
lods
sub
xor
cmp
shl
nop
icebp
mov
je
and
inc
mov
fs
inc
out
mov
add
into
addr16
sbb
cmp
pop
sbb
jmp
ins
pop
mov
push
mov
xor
fldenv
(bad)
jne
mov
shl
call
sbb
fucomp
pop
xchg
inc
call
jl
cwde
test
add
(bad)
out
retf
dec
mov
cmp
push
lock
daa
pop
cmp
jbe
pop
mov
std
inc
cld
jmp
adc
cmp
add
and
ins
push
sbb
cmp
out
test
ins
aas
xor
cmps
jecxz
mov
pop
ret
dec
pop
push
mov
imul
mov
(bad)
lahf
cmps
icebp
push
cmps
jns
mov
out
jmp
mov
shl
dec
sbb
shr
out
pop
out
inc
push
or
sbb
xchg
push
scas
mov
jmp
retf
int3
add
xor
cmp
gs
(bad)
xor
push
dec
mov
jne
mov
push
xabort
inc
leave
out
sar
cmp
xor
ins
aam
push
inc
not
aam
mov
test
xor
pop
jp
popf
lods
ds
(bad)
mov
push
imul
mov
jle
and
jp
sub
sub
ret
adc
nop
add
inc
pop
mov
ja
ds
sbb
pop
stos
inc
adc
arpl
xchg
movs
and
pop
fsqrt
or
pusha
loop
inc
jae
jne
sbb
cwde
frstor
adc
sbb
lods
push
inc
mov
sbb
mov
ds
cdq
inc
ror
sub
hlt
imul
pop
jnp
mov
jno
push
out
mov
test
js
pop
inc
mov
pusha
mov
xchg
jb
js
mov
pop
mov
das
pop
in
out
mov
popf
cmc
add
dec
js
mov
inc
mov
xchg
out
test
call
xchg
add
(bad)
mov
push
lock
mov
mov
push
xchg
push
scas
daa
sbb
std
enter
xor
jl
cmp
jae
jb
mov
fucomp
push
mov
cmp
adc
icebp
sub
popf
dec
pop
nop
or
test
faddp
mov
outs
pop
jle
dec
aad
mov
jmp
pop
ret
mov
mov
xchg
outs
mov
mov
mov
pop
(bad)
cwde
iret
lds
cwde
jae
ss
sbb
mov
retf
and
pop
inc
jnp
fs
scas
xor
push
rol
popf
rcl
sbb
ds
add
pusha
loop
iret
xor
adc
push
stos
(bad)
movs
adc
cmp
mov
pop
sub
(bad)
shl
jmp
push
not
mov
std
mov
jno
lds
mov
adc
jl
or
mov
int3
sub
xor
fldcw
pop
push
call
pop
jecxz
add
mov
popa
aaa
loope
gs
cmp
popf
push
sbb
xchg
add
pop
push
(bad)
lock
inc
mov
jbe
ins
inc
pop
mov
cmc
mov
mov
sub
aad
xor
pusha
test
movs
inc
inc
add
and
jmp
dec
dec
jmp
pop
ret
dec
retf
sub
ror
push
inc
cmps
dec
or
(bad)
movs
call
and
(bad)
sbb
inc
and
and
lfs
bound
nop
dec
pop
out
popf
add
push
inc
test
sbb
mov
dec
xchg
jbe
(bad)
cmc
xchg
hlt
adc
mov
arpl
sbb
xlat
(bad)
movs
shl
jns
mov
ds
sub
cld
(bad)
sub
xor
ror
pop
xchg
pop
push
mov
mov
or
push
cmp
push
and
and
adc
ins
inc
ror
rcl
lods
test
mov
sbb
pop
jo
xor
mov
jecxz
shl
pop
push
(bad)
cmps
mov
lds
or
dec
xchg
mov
ret
mov
mov
in
add
in
rcr
add
jno
cmp
mov
and
mov
dec
and
jmp
dec
pop
sub
and
push
or
and
mov
sbb
in
push
pop
jge
std
cmps
add
push
test
xchg
pop
xchg
mov
(bad)
push
sbb
clc
xchg
pop
rcl
xor
outs
ins
in
mov
sbb
leave
xchg
test
jg
dec
adc
push
lds
pop
rcr
push
mov
pushf
mov
cmp
pushf
xlat
pop
push
xor
dec
cmp
inc
mov
retf
mov
add
push
pop
lahf
cli
loope
mov
push
ret
jb
js
mov
mov
sub
in
cs
sbb
dec
scas
dec
dec
mov
xchg
ret
lods
rcl
jns
in
(bad)
jg
aaa
cmp
inc
gs
mov
dec
jns
dec
and
mov
stos
(bad)
stc
cmc
and
inc
and
and
inc
push
xor
dec
mov
gs
or
and
push
jns
xor
shl
test
je
in
stos
and
push
push
mov
mov
xchg
clc
xlat
pop
pop
mov
mov
pop
xor
fs
mov
bound
cmps
xchg
inc
ret
int3
daa
(bad)
inc
pop
dec
xor
sbb
xchg
sbb
test
xchg
jmp
cmp
es
int
xchg
cmp
mov
dec
push
sub
dec
jmp
sbb
jecxz
test
xor
jge
test
mov
test
out
add
shl
mov
mov
dec
enter
xor
dec
loop
ja
inc
shr
jl
jbe
jns
mov
fnstsw
sar
loope
dec
push
dec
ret
or
add
adc
jge
popf
cmp
pminsw
fs
leave
xchg
and
pop
cmp
push
sub
pop
loopne
pop
push
int
pushf
or
je
mov
ret
lea
sahf
movs
div
pop
repnz
mov
outs
retf
sbb
jl
inc
inc
and
xor
and
mov
popa
repnz
xchg
xor
and
cmp
or
dec
pusha
fwait
jne
mov
jg
movs
mov
sti
jmp
pop
rcr
hlt
jns
sub
sub
mov
cmps
pop
repz
or
in
ja
dec
xchg
xchg
stos
stc
or
xchg
das
adc
jmp
movs
ja
cs
and
rcl
enter
jns
and
inc
and
mov
mov
ins
rcl
and
(bad)
popa
jo
sub
sbb
je
pusha
out
or
sbb
jge
(bad)
mov
loope
call
stos
into
inc
(bad)
pop
outs
jge
sub
scas
and
out
movs
je
rol
mov
cld
fnsave
mov
test
fiadd
pusha
jmp
ss
ficomp
xor
xchg
sbb
pop
lea
pop
push
mov
xchg
mov
inc
or
sbb
inc
jae
and
inc
or
sbb
xor
pop
neg
adc
xor
mov
sbb
and
call
xchg
pop
fisub
xchg
loop
loope
mov
dec
repz
popf
jb
push
test
movs
into
adc
mov
cmps
leave
(bad)
pusha
adc
ja
push
sub
mov
iret
inc
(bad)
daa
or
imul
jno
cdq
mov
(bad)
out
mov
jb
fisttp
inc
aaa
pop
lea
mov
shl
fisttp
xor
mov
enter
mov
add
push
jae
mov
jno
ret
call
pop
in
pushf
sub
dec
lods
mov
stos
sbb
hlt
daa
and
add
mov
wbinvd
adc
out
push
or
push
pop
pop
cmps
push
pop
outs
out
mov
(bad)
std
cmp
cld
inc
push
pop
adc
daa
sbb
add
add
xchg
sbb
scas
sub
aaa
jg
fidivr
cli
je
jns
dec
lock
retf
dec
call
push
mov
call
jne
rcl
scas
cdq
inc
jp
xor
mov
sub
mov
shl
pop
jns
test
bound
xor
dec
mov
cwde
stos
cmp
call
xchg
pop
addr16
sbb
inc
sbb
pop
mov
jo
fcomp
mov
jo
xchg
les
jo
pop
popa
inc
xchg
sub
add
adc
jg
mov
add
sub
rcl
addr16
mov
dec
sub
and
xchg
arpl
outs
aaa
push
mov
and
dec
clc
jecxz
xchg
lea
sbb
mov
push
mov
rcr
jp
xchg
push
jo
mov
(bad)
aam
aaa
mov
pop
(bad)
jns
pop
lds
retf
outs
stos
loopne
arpl
mov
xchg
(bad)
sti
test
pop
mov
in
retf
mov
xchg
mov
or
aaa
mov
lock
and
push
adc
pushf
xor
imul
mov
popa
adc
out
cmp
sbb
mov
dec
xchg
aam
sbb
lods
mov
sbb
cmps
fsub
in
adc
mov
aam
mov
cmc
jl
mov
push
xor
mov
in
imul
retf
shr
popa
pushf
adc
sub
imul
cmp
or
fcomp
cmp
inc
jmp
or
sub
test
xor
cmp
rcl
dec
jl
mov
pop
mov
fwait
fs
in
pushf
je
push
mov
mov
jno
mov
and
cmp
push
fwait
mov
or
dec
xchg
test
jo
adc
cmp
xor
mov
xchg
sbb
mov
mov
jb
pop
xor
ds
push
test
aad
adc
jo
retf
pop
sub
retf
pop
mov
inc
jecxz
pop
push
cmps
jo
sahf
jmp
out
xchg
push
loopne
jp
out
(bad)
call
test
xchg
mov
(bad)
xchg
ret
jge
xchg
push
leave
jnp
push
cmp
fidivr
arpl
arpl
push
cs
sahf
xchg
test
and
mov
inc
in
inc
ja
adc
xor
sbb
mov
mov
arpl
cmp
scas
test
xchg
lods
rol
neg
push
into
fbstp
adc
lods
(bad)
cld
xor
fistp
outs
mov
rcr
adc
jbe
sbb
dec
mov
dec
or
xchg
xchg
or
popa
loope
xor
inc
cmc
cmp
sbb
mov
jl
mov
sbb
sub
sti
xchg
hlt
dec
les
push
pop
cmps
ja
iret
sti
xor
mov
push
mov
std
jno
inc
mov
(bad)
js
lods
mov
rcl
mov
inc
push
push
jmp
lods
inc
lahf
imul
test
outs
pop
add
mov
test
xchg
rcr
aam
adc
and
imul
cmp
cdq
mov
adc
ret
inc
mov
push
(bad)
sbb
cmp
dec
mov
mov
sub
out
and
mov
sub
std
arpl
fdivp
(bad)
loop
js
lahf
stos
aaa
retf
or
xor
call
and
inc
push
sbb
jno
dec
or
xchg
mov
retf
xchg
repnz
or
dec
sbb
ss
push
pop
mov
push
mov
cmps
and
fwait
cmp
bound
mov
jno
aad
inc
cmc
jmp
pop
iret
retf
clc
pop
scas
test
(bad)
(bad)
mov
sbb
in
icebp
fbld
test
scas
dec
pop
and
enter
pop
test
aas
pop
mov
(bad)
imul
dec
jno
adc
add
add
data16
pop
imul
jb
cdq
or
repnz
cmp
inc
inc
movs
dec
(bad)
mov
pusha
mov
popf
or
mov
clc
repz
lds
movs
mov
mov
sahf
ss
mul
mov
into
sbb
dec
fcom
cmc
js
add
and
sub
mov
cmp
xchg
cmp
popa
push
inc
daa
loop
ja
xor
sub
xchg
adc
mov
add
dec
movs
xor
push
dec
sar
fdivr
dec
loop
mov
xchg
mov
mov
lea
xchg
cwde
stc
sbb
fimul
repz
jnp
and
inc
adc
stc
repz
repz
ins
shl
pop
test
mov
lahf
mov
xchg
(bad)
outs
adc
sub
add
mov
mov
movs
pop
inc
mov
xchg
pop
sub
mov
rcl
js
jle
js
js
mov
cmps
ins
xchg
mov
stos
add
jnp
xchg
push
xchg
mov
addr16
mov
movs
rcr
inc
jg
pop
imul
ds
fsubp
inc
stc
inc
jle
pusha
mov
pusha
add
mov
mov
sub
data16
mov
xchg
mov
push
pop
adc
and
pop
adc
push
mov
jp
mov
jp
fdiv
leave
inc
outs
sub
aam
jecxz
out
leave
jmp
or
loopne
add
daa
scas
sbb
mov
adc
test
in
mov
or
das
mov
jecxz
in
sbb
dec
stos
aaa
addr16
scas
inc
pop
jo
test
retf
sub
retf
pop
call
pop
inc
fidivr
add
xor
pop
inc
mov
ds
pop
call
ret
inc
ror
fsubr
mov
mov
push
stc
mov
mov
lahf
mov
fwait
push
inc
lahf
xchg
mov
bswap
rcl
mov
push
(bad)
pop
(bad)
or
retf
and
aas
add
jle
cli
pop
aas
pusha
xchg
retf
stos
test
lahf
int3
and
daa
sti
cmp
xor
or
dec
adc
ds
movs
xchg
mov
(bad)
xchg
add
mov
je
js
dec
fcmovnu
mul
jmp
pusha
adc
fisubr
in
repz
mov
add
mov
inc
iret
push
out
push
or
in
jmp
pop
jmp
jle
inc
cmp
inc
mov
push
ja
pushf
test
aas
and
pop
lahf
loop
mov
inc
inc
js
aam
sub
gs
adc
jo
mov
jo
xchg
mov
jmp
movs
and
push
jge
fwait
pusha
ret
mov
inc
mov
mov
add
jmp
mov
xor
lea
idiv
dec
sbb
cmps
push
and
shr
(bad)
jl
xor
add
mov
xor
pusha
lahf
mov
fldcw
out
sub
retf
pop
sub
or
jge
cdq
or
mov
popf
adc
es
int
mov
xchg
push
dec
jbe
inc
fistp
loope
iret
mov
scas
xor
xchg
sbb
xchg
cmp
in
jmp
mov
addr16
mov
imul
or
idiv
and
add
ins
test
js
cmp
icebp
nop
retf
mov
pop
clc
js
adc
mov
push
add
cmp
call
push
dec
fwait
inc
dec
into
xor
sub
and
fist
fisub
push
test
mov
mov
cs
fisub
call
in
cmps
push
push
int3
hlt
cdq
(bad)
push
shl
inc
sub
fld
add
mov
push
movs
xor
mov
fmul
and
jecxz
pop
push
and
sub
imul
jp
mov
xor
sbb
out
pushf
inc
(bad)
out
inc
or
lods
jno
scas
(bad)
cmp
mov
xchg
push
cdq
ret
xor
pop
inc
lods
movs
(bad)
adc
retf
ficomp
adc
ss
into
cld
mov
cmp
adc
pop
test
push
cmps
test
inc
sar
push
mov
arpl
pop
aad
adc
and
sub
imul
or
repz
mov
pusha
test
call
cld
out
xchg
mov
mov
pop
mov
inc
add
hlt
sar
mov
sub
jns
sub
ss
aad
jbe
dec
add
push
or
mov
push
push
test
add
jnp
inc
fwait
mov
js
retf
imul
sub
adc
jle
mov
cmps
dec
push
test
xchg
and
and
push
iret
xlat
pop
fadd
ds
aam
lds
aad
adc
in
sbb
icebp
mov
sub
movs
ret
xchg
push
inc
repnz
(bad)
fs
mov
xor
jl
xor
sar
inc
clc
inc
or
inc
lods
sub
daa
jb
mov
repnz
sar
jle
mov
bound
jl
xchg
dec
and
and
cmps
popf
cmp
and
test
add
pop
add
pushf
jb
mov
cmps
les
and
cmc
inc
xchg
(bad)
fsubr
dec
cmps
sbb
adc
(bad)
mov
jmp
dec
stos
xchg
je
sub
cld
int3
dec
fld
or
and
mov
aam
in
mov
(bad)
sti
pop
adc
sub
es
jmp
lea
pop
inc
scas
movups
mov
int3
out
adc
pop
inc
cmps
sub
fadd
and
loopne
adc
ins
cmc
div
pop
mov
fcmovnb
or
scas
pop
jmp
or
in
out
jge
sbb
inc
lods
push
push
xchg
dec
or
stos
sbb
push
cwde
retf
jg
jns
iret
push
and
push
mov
nop
lar
dec
push
jmp
popf
push
add
pop
nop
lea
lds
mov
hlt
mov
cdq
push
sti
stos
lahf
add
bound
adc
mov
mov
xchg
sbb
mov
ror
sub
sbb
out
cmp
sbb
xchg
adc
std
ins
add
shl
in
aad
(bad)
call
rcr
pop
sbb
fistp
cmps
js
xchg
cmp
movs
mov
std
cli
mov
xchg
loopne
add
sar
mov
push
xchg
cld
mov
leave
sbb
ret
test
leave
mov
sbb
mov
dec
cmp
iret
es
jle
lahf
push
ins
out
mov
mov
and
je
fnstcw
mov
add
inc
pcmpgtb
and
jle
mov
jnp
adc
test
ror
inc
sahf
jle
cmps
test
in
mov
and
rol
in
mov
mov
mov
test
(bad)
fs
xor
sub
jns
and
inc
(bad)
popa
jl
imul
popf
mov
shl
test
enter
sub
cmp
jne
dec
jbe
ins
inc
lods
aaa
sbb
xor
mov
add
jb
cwde
push
ret
(bad)
cmc
pop
xchg
ret
sar
adc
cmps
in
mov
test
xor
cmp
inc
pop
lahf
xor
sub
stc
enter
addr16
inc
call
push
in
xchg
into
adc
stos
pop
jmp
add
or
xor
dec
ja
push
and
fwait
or
out
enter
jl
jl
sub
(bad)
sar
scas
xchg
jl
cdq
or
fcomip
scas
setne
loope
rcl
mov
push
cmps
xor
fcom
cmp
popf
dec
loope
into
(bad)
sub
out
sbb
sbb
aas
adc
add
pop
std
retf
fiadd
sbb
imul
xor
jl
lods
jge
(bad)
push
jb
xchg
popf
aas
and
xor
in
and
push
addr16
xlat
mov
jl
in
push
lock
mov
xchg
test
mov
xchg
pushf
mov
hlt
mov
in
jns
xchg
pop
xchg
push
not
sbb
sar
and
inc
jo
inc
sub
cdq
xor
mov
sub
enter
js
mov
and
sbb
jl
scas
xor
mov
test
sahf
fstp
inc
outs
pop
mov
inc
xchg
out
sahf
ins
xchg
jecxz
psubusb
test
stos
cmps
mov
mov
xchg
mov
rcl
xchg
jecxz
aas
(bad)
in
mov
push
pop
cmp
fisubr
cmp
mov
aaa
sbb
nop
test
dec
and
inc
cwde
cmp
sti
push
pop
pop
aas
leave
ds
add
cbw
pop
mov
ret
mov
push
imul
pop
xchg
in
inc
nop
xchg
data16
je
mov
jecxz
loop
mov
movs
sbb
jmp
push
cmp
xlat
dec
mov
mov
lods
shl
pop
ja
mov
(bad)
inc
out
jmp
imul
or
mov
fld
iret
arpl
add
fld
pop
sub
jecxz
popf
sub
inc
fs
xor
sub
or
jno
repnz
and
inc
push
mov
and
push
sub
mov
(bad)
lahf
mov
bound
int3
fsub
mov
push
fisttp
cmp
idiv
sbb
pop
mov
imul
or
lahf
nop
mov
ret
mov
fild
lds
jmp
sahf
jno
jl
fwait
or
mov
push
inc
and
stos
test
mov
inc
sbb
rcl
xchg
mov
add
fld
mov
ins
js
pushf
nop
add
retf
jmp
sbb
mov
adc
loop
mov
sti
adc
inc
test
dec
push
lods
xor
popa
mov
rcr
jmp
fwait
std
inc
inc
jns
in
add
and
cmps
pop
adc
aaa
push
call
adc
cmp
arpl
mov
mov
fs
jae
jecxz
or
cld
test
icebp
pop
mov
rcr
test
ret
lds
(bad)
fidivr
sub
rcr
and
dec
fsubr
inc
mul
jbe
xchg
xchg
mov
and
pop
xchg
(bad)
jp
sbb
add
add
mov
rcl
jp
ret
mov
test
div
in
mov
sbb
inc
add
shl
mov
out
shl
xchg
jno
dec
stos
lahf
fdiv
mov
(bad)
in
fcomip
push
enter
cmp
arpl
sbb
sbb
jnp
push
cmp
mov
int3
mov
icebp
xchg
xor
add
inc
or
sub
mov
test
les
xchg
es
dec
out
lods
pushf
xor
inc
cwde
repnz
inc
rol
inc
mov
pop
mov
out
fdiv
mov
in
repz
gs
mov
leave
shl
xchg
mov
hlt
jne
sbb
shl
adc
or
add
out
mov
iret
push
call
retf
pop
and
or
outs
scas
dec
cmps
or
stos
imul
xor
sbb
ret
inc
pop
dec
test
lahf
(bad)
cmp
mov
icebp
sub
push
(bad)
mov
jns
or
out
sti
push
dec
sbb
ds
mov
push
sahf
sbb
cmp
stc
inc
and
cdq
stos
adc
mov
test
push
jo
and
aaa
bound
ins
adc
push
psllq
push
shr
hlt
inc
arpl
push
mov
jmp
add
lds
xchg
jecxz
mov
inc
xchg
mov
rol
xchg
jb
push
fimul
test
xchg
push
test
or
stos
push
iret
in
addr16
fst
push
pop
fnstsw
sub
aaa
out
pop
mov
sahf
dec
sbb
mov
cmp
jle
iret
stos
xor
and
js
(bad)
sar
stos
fucomp
inc
mov
xchg
jb
ins
mov
mov
ja
xor
xlat
fistp
mov
(bad)
xor
fstp
jmp
movs
sub
mov
(bad)
jmp
movs
nop
or
int3
dec
lahf
int
(bad)
push
add
out
das
pop
and
lahf
ds
rcr
test
pop
mov
mov
dec
xlat
aad
push
scas
mov
sbb
cmps
dec
xlat
cmps
fdivr
test
popf
push
cmp
movs
mov
cli
pushf
hlt
cmp
jmp
xor
fsubr
stos
xor
sub
in
call
sub
call
int
sbb
jl
in
jns
xchg
inc
dec
jp
mov
or
add
push
or
xchg
cmps
adc
les
sbb
nop
les
retf
shr
mov
call
xlat
inc
fdivr
popf
mov
ret
xchg
out
popf
push
sbb
push
hlt
cmp
std
and
xor
cmp
fwait
inc
pop
dec
out
xchg
cdq
push
ds
sar
aam
push
adc
add
mov
jbe
outs
inc
test
and
mov
jl
cld
test
lods
repnz
test
pop
mov
test
inc
or
out
and
mov
jb
enter
(bad)
lods
clc
mul
mov
hlt
(bad)
sbb
into
add
jne
jbe
push
ds
cdq
mov
popa
shr
test
outs
pusha
xor
push
push
sub
jo
inc
pusha
or
mov
and
call
sub
inc
inc
sub
cmps
fdivr
cmps
scas
call
mov
nop
stos
fmulp
or
lds
xchg
mov
mov
push
pop
cmp
push
add
mov
inc
cmp
mov
rcr
in
sbb
loope
inc
inc
or
ss
jbe
mov
pop
sbb
jno
xchg
jmp
and
and
add
scas
loope
call
pop
mov
xchg
cmp
adc
and
sbb
add
in
lock
loopne
dec
mov
icebp
sub
adc
jmp
fs
pushf
imul
pushf
mov
xlat
add
pop
and
jne
mov
pop
adc
ja
cmp
aaa
adc
scas
xchg
inc
iret
ret
inc
inc
and
jnp
(bad)
jmp
sub
lock
jle
xchg
les
movs
mov
ins
(bad)
ret
dec
out
and
or
hlt
shr
inc
shl
push
push
mov
mov
fdivr
retf
pop
mov
pop
push
pop
sbb
adc
jbe
cmp
push
je
dec
add
call
mov
jmp
dec
sub
push
enter
leave
mov
icebp
scas
lods
loop
mov
pop
xchg
ficomp
ret
ror
sub
cmp
int
aad
call
shl
jg
stos
js
ja
mov
int
pop
cmps
(bad)
jmp
push
jo
aaa
mov
or
inc
pop
cmps
or
nop
push
arpl
or
leave
xchg
into
gs
pop
pop
inc
fsubr
cdq
mov
lahf
adc
mov
repz
popf
aad
fadd
mov
ret
jecxz
push
out
out
push
xor
retf
retf
and
shr
cli
dec
aaa
inc
cwde
shr
out
sub
adc
or
jbe
arpl
data16
push
adc
mov
add
pop
(bad)
repz
(bad)
retf
jne
pop
push
inc
mov
out
test
mov
pop
repz
push
sbb
ja
test
(bad)
mov
pop
outs
popf
scas
jp
and
push
pop
push
out
aad
addr16
sub
aaa
pop
jl
gs
inc
icebp
mov
inc
fcmovnb
sub
push
mov
js
add
pop
adc
jmp
or
pop
(bad)
fwait
adc
cmc
inc
mov
jbe
jne
mov
xor
xchg
cld
xchg
aad
idiv
fdiv
pop
movs
popa
js
mov
add
leave
cmc
hlt
fisubr
lods
pushf
fist
pop
or
rcr
inc
fild
add
inc
fs
mov
jmp
popf
repz
add
jle
add
imul
push
xchg
cwde
mov
retf
mov
push
lds
enter
inc
xchg
popa
add
mov
movs
mov
add
mov
fisub
mov
repz
retf
rcl
je
pop
mov
inc
adc
cdq
push
push
aad
retf
mov
add
xor
js
and
inc
popf
pop
aaa
mov
movs
xchg
mov
sbb
ins
lahf
out
in
mov
sbb
lods
push
(bad)
jmp
jg
movs
push
pop
mov
mov
movs
(bad)
sbb
sbb
in
mov
call
arpl
movs
inc
out
dec
mov
add
icebp
mov
dec
fsub
push
sbb
das
arpl
outs
inc
push
mov
add
dec
loope
jge
loope
addr16
and
cmp
or
push
sub
cmps
sub
cwde
inc
int
add
jl
inc
lds
into
call
jg
mov
mov
mov
les
pop
inc
loope
xchg
sbb
retf
inc
cmp
ja
xor
adc
int
push
std
es
cs
ins
arpl
and
stos
lds
jmp
jo
pop
and
sbb
xor
add
sbb
xchg
cmp
sub
clc
lods
stos
pop
mov
pop
bound
push
mov
out
jecxz
pop
cmp
(bad)
mov
sti
popf
out
or
xchg
adc
mov
mov
inc
jmp
ror
xor
and
inc
cmp
push
cmp
out
xchg
dec
loop
add
loope
inc
add
retf
or
ss
popa
push
dec
jl
mov
xor
add
in
xchg
xor
xlat
pop
xlat
addr16
jle
inc
xor
dec
out
fs
loop
add
mov
sub
inc
loopne
(bad)
xlat
or
fild
outs
fdiv
and
retf
loopne
call
fs
push
and
test
mov
sub
jl
or
sti
addr16
inc
dec
sar
jg
push
mov
sbb
lods
pop
inc
sahf
aam
xor
mov
sbb
push
sub
push
in
fldenv
cmps
inc
enter
mov
mov
imul
mov
cdq
int3
cdq
arpl
popf
cmp
imul
pop
add
int
sbb
fs
or
stc
inc
cs
xchg
call
repz
add
sbb
xor
pop
sub
jp
mov
test
cmp
rcl
pop
push
daa
fcom
mov
inc
mov
fwait
push
out
xchg
ffreep
xchg
or
imul
rol
scas
xchg
cmc
sbb
ror
ins
test
into
cmp
(bad)
jns
cmp
cmp
dec
cmp
mov
add
mov
jo
inc
add
xor
and
pop
hlt
push
sbb
jp
mov
or
push
xor
mov
add
cmp
in
xor
data16
addr16
mov
(bad)
xchg
retf
mul
jne
mov
sub
or
(bad)
scas
inc
in
add
jo
or
push
stos
push
aaa
ins
mov
test
add
cmc
push
jl
add
and
xor
adc
sbb
ret
rcr
add
push
outs
jmp
fnstcw
inc
mov
loop
fidivr
call
push
jmp
pop
mov
push
mov
mov
mov
fimul
aam
mov
in
bound
popa
test
inc
dec
xor
mov
(bad)
scas
dec
es
js
xlat
cmp
inc
aam
ja
or
or
adc
jae
mov
seto
cmps
pop
inc
push
xor
in
pop
retf
fidivr
imul
jecxz
pop
cld
xchg
ret
mov
neg
repz
ja
popf
(bad)
sahf
adc
sar
stc
out
aam
pop
cdq
cmps
popa
imul
push
or
fsub
scas
and
adc
sbb
xor
fwait
or
enter
pop
data16
cld
add
jp
and
dec
dec
nop
addr16
mov
add
push
cmp
out
sbb
inc
jb
ja
cdq
fsub
hlt
sahf
push
lock
or
inc
test
addr16
sahf
mov
popa
inc
mov
mov
fwait
sbb
div
ds
add
popw
arpl
mov
xor
mov
mov
add
adc
mov
imul
cmp
adc
sub
inc
mov
popa
jle
jbe
iret
(bad)
popa
mov
xchg
push
xchg
xchg
inc
and
(bad)
std
jae
sbb
mov
sahf
outs
inc
leave
cld
cwde
test
pop
xchg
xchg
shr
xor
cmp
test
iret
cmp
or
dec
jns
dec
cmp
test
and
mov
dec
into
add
nop
push
test
jb
lods
std
ds
in
mov
inc
inc
mov
js
xlat
in
(bad)
jecxz
xor
mov
neg
push
pop
mov
fcomip
mov
call
(bad)
sub
ffreep
loop
out
jae
push
lea
fs
lea
push
rcl
fcmovnb
jge
cmp
push
sub
cmc
inc
addr16
shl
btr
xlat
out
cmps
and
not
inc
add
dec
rol
cmps
dec
fsubp
pop
adc
jg
scas
pushf
rcl
mov
test
es
loopne
(bad)
rcr
call
add
xchg
sbb
mov
mov
xchg
sub
fstp
sti
lea
jge
out
aaa
jg
sbb
xor
sub
inc
inc
mov
add
aad
arpl
in
xchg
mov
rol
push
sub
sar
out
test
es
lock
and
push
shr
add
leave
les
mov
(bad)
sbb
jp
adc
popfw
adc
and
mov
ret
dec
add
arpl
retf
arpl
xor
arpl
inc
adc
ins
sub
dec
add
pop
gs
jnp
jl
dec
fwait
arpl
movs
in
in
sahf
dec
xchg
test
jmp
popf
push
out
pop
sti
mov
jl
lea
shr
xchg
fidivr
in
pop
out
sbb
jecxz
push
popa
ins
sti
inc
or
sahf
sub
lock
hlt
arpl
sbb
and
cmp
mov
add
pop
ds
icebp
mov
aam
jno
mov
mov
inc
pushf
mov
dec
pushf
mov
mov
test
push
sbb
dec
adc
fst
jnp
dec
sub
xchg
mov
pop
fisub
add
dec
mov
dec
ds
mov
mov
sub
retf
push
ret
mov
dec
mov
imul
js
pop
mov
test
xor
enter
iret
mov
jp
jo
xor
test
push
in
add
int
mov
mov
inc
ficomp
xchg
xchg
lock
fs
test
dec
xchg
das
lods
inc
cmp
fsubr
repnz
cmp
jnp
es
mov
cmp
mov
enter
addr16
sbb
adc
pop
cmp
mov
inc
mov
add
test
cmp
lock
xlat
dec
push
and
ins
lahf
(bad)
mov
into
nop
pop
and
inc
xchg
fwait
(bad)
out
sub
mov
nop
mov
test
inc
test
mov
push
repz
inc
mov
popa
popa
mov
mov
cmc
enterw
loope
push
jge
cmc
sbb
jne
xor
inc
imul
mov
dec
jnp
fcomp
std
sbb
arpl
inc
mov
jecxz
shl
icebp
sub
outs
xchg
lods
(bad)
aaa
fnstcw
mov
shl
movs
rcr
jae
jmp
je
jb
adc
in
aam
push
clc
inc
pop
ja
cdq
xor
mov
test
clc
leave
xor
push
retf
xor
sbb
stos
push
mov
jl
into
mov
cmp
dec
xchg
ror
leave
jne
jo
inc
les
xchg
imul
add
enter
mov
and
mov
xchg
cmp
lock
hlt
pop
pop
xchg
fdiv
out
test
inc
stc
add
pop
inc
mov
inc
jb
ins
sub
popf
sbb
fadd
jmp
add
sub
push
and
int
adc
inc
mov
push
and
icebp
fwait
pop
(bad)
inc
fs
pop
scas
dec
enter
loope
sti
sbb
mov
mov
neg
icebp
sub
jge
test
jmp
fwait
jb
jp
sub
adc
jmp
pop
lods
outs
pop
pop
cld
push
or
add
dec
int
sbb
sbb
and
cmp
or
popf
jg
(bad)
adc
bound
and
es
mov
sbb
cmps
push
mov
pop
mov
cdq
jge
mov
sub
out
and
popa
mov
lods
xlat
aaa
mov
xchg
cmp
and
dec
xchg
push
xlat
cmp
std
test
fs
pop
inc
es
ficom
inc
jo
dec
sbb
lahf
xchg
test
repz
cmp
add
cmp
or
add
jge
add
add
and
inc
jmp
pushf
xor
out
pop
fild
addr16
outs
out
fsub
loop
inc
leave
mov
mov
xchg
jp
mov
pop
jg
sbb
int
inc
pop
call
stos
xor
mov
and
dec
test
dec
xchg
movs
xchg
cwde
xor
les
cdq
mov
xchg
(bad)
pop
ins
popa
cmp
add
dec
adc
mov
sub
data16
xrelease
shl
cmc
jge
push
test
loop
jmp
push
mov
xchg
sub
jmp
out
and
shr
xchg
(bad)
js
(bad)
lahf
inc
int3
jnp
xor
cmp
retf
out
jo
pop
and
ins
push
jne
mov
rol
mov
xchg
ficom
inc
lds
push
and
mov
popa
mov
stos
cs
in
mov
int
in
xchg
sar
inc
push
and
inc
xchg
sti
jae
call
aam
lods
mov
inc
test
fimul
mov
cld
sub
int3
and
sbb
daa
pop
addr16
jo
pop
lahf
xchg
cdq
sahf
ss
jns
(bad)
jp
add
out
add
jo
xor
inc
jbe
or
sar
fs
mov
cmp
mov
stc
pop
push
and
pusha
aad
test
shl
xor
not
mov
mov
mov
test
es
sbb
push
in
sti
cs
enter
out
adc
and
outs
push
xchg
or
mov
lods
push
test
and
pop
fistp
mov
rcr
push
dec
add
pop
inc
xchg
mov
jge
leave
xchg
fistp
arpl
sub
(bad)
mov
push
(bad)
cmc
or
dec
or
xchg
add
and
(bad)
repz
(bad)
int3
and
hlt
repnz
xor
gs
xor
mov
nop
enter
int3
push
fidivr
add
mov
and
jmp
or
sbb
sbb
jmp
push
jbe
push
sahf
and
loope
addr16
mov
or
fmul
mov
inc
push
loop
mov
stos
cmc
mov
dec
mov
imul
daa
sub
jmp
pop
push
lahf
sub
mov
cmp
inc
icebp
(bad)
js
jmp
or
adc
scas
es
sub
pop
push
call
mov
lahf
aam
sbb
repz
xchg
inc
lahf
push
retf
(bad)
fidivr
(bad)
test
shl
mov
push
mov
div
xchg
fdivp
inc
jg
xchg
pop
iret
jbe
xor
clc
xchg
mov
out
push
push
add
cmp
xchg
js
jnp
mov
xlat
pop
std
call
adc
xor
cmp
mov
inc
dec
or
cs
xchg
scas
cli
sub
and
ret
imul
outs
lock
mov
popf
push
xchg
jecxz
push
(bad)
test
stos
lds
pop
jge
enter
loopne
mov
xchg
xchg
dec
lock
cs
jmp
repz
retf
cmp
jnp
adc
xchg
pop
ss
(bad)
mov
lods
ins
lahf
jmp
xor
dec
cmp
and
dec
mov
pop
sahf
xchg
lea
daa
push
outs
cli
in
cwde
sub
fistp
jg
mov
enter
movs
jbe
fwait
push
push
cmc
xlat
test
and
mov
cli
aam
int
dec
outs
mov
sti
ss
add
fiadd
push
aas
test
outs
bound
mov
xchg
push
push
cmps
pop
repnz
xchg
push
ja
dec
out
add
pushf
pop
retf
dec
push
jge
mov
outs
mov
pop
int3
(bad)
out
or
ret
and
cmp
jge
retf
sub
test
add
dec
pop
inc
sbb
(bad)
retf
movs
jmp
lods
xor
add
out
hlt
sti
sub
adc
jg
push
add
jo
popa
mov
int3
mov
int
jns
fsub
pop
xor
add
mov
jl
cmp
push
push
mov
aas
cwde
fild
cld
push
push
inc
mov
mov
call
sahf
bound
repz
out
mov
test
inc
mov
(bad)
fimul
sahf
test
and
sub
idiv
adc
outs
mov
sbb
aaa
dec
xchg
pushf
nop
into
and
std
adc
pop
clc
add
lahf
push
scas
add
adc
pop
xor
xchg
pop
adc
out
mov
fild
pop
xchg
imul
rcl
lds
movs
sahf
popf
ret
xor
mov
push
iret
clc
mov
add
aad
aas
cmp
les
or
add
push
sub
jns
mov
fstp
sbb
xchg
dec
data16
(bad)
xor
inc
or
push
cli
add
aad
sbb
test
xor
movs
sbb
dec
jbe
sbb
ror
out
xchg
adc
loope
or
push
test
outs
jo
mov
cmc
test
ror
mov
out
leave
dec
sbb
int3
ret
sbb
(bad)
cs
mov
add
call
cmp
in
jae
push
inc
(bad)
daa
push
add
add
fs
cdq
dec
cmp
sub
mov
push
mov
sbb
arpl
cmps
ins
call
loopne
inc
int3
loopne
push
repnz
cmp
in
sbb
das
inc
retf
retf
ret
(bad)
cmps
inc
shl
add
mov
lahf
sbb
mov
push
pop
inc
mov
and
pop
fucomi
add
fiadd
pop
inc
sti
sbb
jg
adc
push
cwde
ja
jle
mov
push
mov
or
fldenv
retf
inc
mov
jle
rcr
or
enter
jns
cmp
add
mov
cdq
out
(bad)
push
xchg
ficom
div
es
hlt
jmp
fnsave
inc
pop
push
xchg
daa
inc
and
cwde
test
inc
sar
cs
js
imul
and
xor
push
add
aad
jno
xor
fmul
cmc
jp
push
sahf
push
xchg
test
mov
adc
(bad)
sbb
push
mov
inc
pop
mov
fucom
mov
sbb
enter
add
cld
rol
or
push
inc
je
or
mov
cmp
dec
lahf
fisub
fdiv
pop
jecxz
das
push
adc
mov
mov
(bad)
fs
or
mov
sub
jmp
pop
lods
out
or
stc
call
cmc
mov
push
retf
push
sub
sbb
call
aaa
hlt
xchg
mov
shl
repnz
xor
inc
mov
sbb
jnp
or
ds
addr16
js
aad
je
add
xor
pop
es
into
xor
pop
fdiv
inc
call
or
out
in
mov
push
fs
js
test
push
cmps
dec
and
pop
cli
mov
push
pushf
cwde
mov
cmp
cld
inc
dec
xchg
xor
jle
adc
sub
(bad)
fsubr
sbb
add
inc
movs
push
int3
scas
xor
in
dec
cwde
neg
mov
push
pusha
push
inc
cmps
sbb
imul
mov
jb
adc
push
xor
mov
outs
(bad)
fwait
push
xchg
into
push
adc
pushf
test
sar
(bad)
mov
test
mov
js
inc
lods
stos
xchg
mov
jp
push
in
xor
ror
jne
inc
lea
inc
jae
fs
pop
out
mov
inc
cli
mul
inc
dec
ss
xor
xchg
sub
or
sbb
inc
push
aad
jp
mov
sub
pop
jg
xacquire
iret
retf
pop
sti
jns
and
jbe
test
dec
call
adc
lock
sbb
pop
mov
inc
jb
mov
pop
pop
fimul
outs
xchg
stos
outs
hlt
sub
mov
enter
rol
and
shr
call
lods
adc
in
jnp
sar
lock
adc
into
inc
outs
je
mov
jg
mov
and
lea
cmp
gs
aad
add
aam
cli
dec
jae
lds
mov
cmp
out
imul
imul
fild
xchg
fldcw
xchg
movs
cmp
or
iret
mov
fmul
push
cmp
xor
pop
out
xchg
nop
ret
cmp
hlt
pop
cdq
fistp
retf
push
push
js
mov
sbb
outs
mov
jl
lods
lea
aaa
pop
dec
cli
retf
mov
neg
cvtdq2ps
aas
mov
mov
sbb
enter
push
mov
inc
mov
(bad)
lock
(bad)
jno
out
fadd
outs
in
aaa
adc
(bad)
js
cmp
dec
mov
cmp
ins
xchg
xchg
lods
pushf
ss
imul
pop
jl
lds
push
pop
js
or
and
sbb
scas
pop
xor
shl
loopne
call
hlt
outs
add
xlat
xchg
test
loop
adc
les
(bad)
mov
inc
pushf
cmp
(bad)
dec
jnp
test
cmp
pop
fdiv
jle
dec
sub
mov
xchg
call
mov
jmp
xor
add
test
xchg
xor
div
imul
retf
imul
shr
mov
cmp
cmps
xchg
or
dec
test
mov
pop
mov
mov
inc
sti
retf
imul
sar
mov
fnstenv
and
test
and
scas
adc
stc
inc
pop
or
or
push
enter
iret
jne
push
sbb
dec
es
push
es
stos
or
scas
xor
cmp
test
pop
ret
inc
pop
and
rcr
mov
pop
aam
xchg
add
ins
mov
lods
fmul
pop
add
ror
mov
fsub
mov
(bad)
dec
sbb
fst
into
sub
push
jb
inc
mov
xor
add
neg
loope
push
mov
jae
inc
xor
sbb
and
pop
push
call
xchg
xor
pop
pop
(bad)
rcl
(bad)
outs
pop
cmp
outs
mov
movs
jg
nop
push
pop
icebp
jmp
cs
push
test
ror
push
mov
(bad)
and
inc
in
adc
jb
sub
pop
jnp
or
and
xchg
aaa
and
sbb
(bad)
xor
add
scas
push
enter
pop
nop
adc
scas
sar
adc
cld
mov
rcr
push
push
xchg
xchg
dec
cmps
cld
mov
rcl
scas
sub
push
xchg
test
fmul
popa
jo
rcl
mov
push
inc
mov
pusha
icebp
sub
sub
pop
push
bound
fstp
bound
pop
or
scas
stos
test
shr
pop
xchg
ret
jle
pop
xor
sub
push
and
mov
adc
push
and
retf
push
xor
in
inc
mov
add
cwde
out
out
adc
push
(bad)
in
jnp
pop
lock
mov
add
pop
add
sbb
call
push
not
es
(bad)
inc
and
pop
mov
ja
push
test
xchg
scas
dec
sbb
inc
(bad)
sbb
fiadd
inc
adc
and
lods
cmp
mov
aad
sbb
push
push
pop
(bad)
test
ficomp
outs
mov
cmp
sahf
push
xor
repz
jbe
popa
mov
mov
push
jecxz
mov
or
std
lods
fcmovbe
push
jmp
(bad)
jmp
inc
push
push
inc
adc
and
test
ror
popw
lds
jae
and
call
xchg
mov
add
mov
aaa
xor
call
sar
sub
shl
mov
mov
adc
retf
xchg
sub
inc
nop
movs
xchg
out
sbb
enter
(bad)
lds
scas
ret
jno
push
fst
push
sbb
repz
(bad)
push
jns
jnp
or
and
xchg
dec
push
int3
pop
int3
rol
ror
imul
sub
pop
mov
cmp
sbb
shl
icebp
inc
outs
fstp
fldenv
aam
adc
mov
div
in
cli
lea
sti
(bad)
(bad)
and
rcr
mov
cmc
sbb
adc
fldenv
addr16
mov
jnp
std
dec
add
test
repz
ret
cdq
idiv
jns
enter
add
mov
(bad)
sub
sbb
mov
push
jmp
xchg
jmp
add
add
push
enter
fwait
mov
pop
and
dec
xchg
jne
mov
stos
mov
fcom
cld
sbb
jo
inc
pop
or
sub
push
jns
les
pop
cdq
out
sbb
sbb
pop
push
dec
or
in
setp
lods
pop
push
call
scas
in
and
pop
(bad)
mov
pushf
pop
jno
ficomp
fidivr
(bad)
call
aaa
mov
lods
add
popf
(bad)
sub
test
std
lock
stos
mov
dec
aad
cmp
jmp
pop
dec
sbb
xchg
cmp
xchg
inc
int
or
sti
push
pop
inc
inc
cli
and
jge
mov
mov
mov
arpl
push
pop
jecxz
cdq
add
adc
enter
or
popa
jmp
mov
scas
stc
test
outs
mov
mov
sbb
gs
xchg
mov
or
xor
cwde
inc
fs
mov
addr16
sub
cmc
mov
mov
int
sub
jae
mov
aas
cwde
sbb
sub
inc
pushf
adc
add
scas
loope
enter
pop
jns
scas
outs
fisub
jne
test
cmc
(bad)
adc
pusha
mov
pop
je
test
xor
ret
sar
pushf
dec
int3
jp
sub
dec
sub
js
adc
ins
fidiv
arpl
sbb
fcmovne
and
ficomp
arpl
cmps
sbb
mov
enter
arpl
push
xchg
scas
mov
add
xchg
cmp
jb
fisttp
cwde
fld
mov
jl
mov
movs
or
data16
mov
sbb
adc
aam
call
lods
pop
fdiv
push
sbb
bound
mov
pop
pop
mov
fstp
sti
shl
sti
ins
push
add
inc
xor
(bad)
sbb
inc
mov
jb
and
sar
clc
push
fcomp
cdq
data16
sub
in
ss
movs
sti
cmps
les
mov
sti
mov
retf
jmp
dec
neg
add
mov
div
add
or
sbb
cs
xor
pop
stos
call
call
pop
and
cmp
or
add
pop
ja
dec
sbb
call
out
mov
inc
ins
mov
mov
call
add
aad
adc
pop
sti
test
mov
into
cwde
cmps
leave
out
jle
cwde
cmp
ins
iret
sbb
push
inc
jae
jp
cmp
dec
lea
stos
pop
inc
ja
daa
jmp
cmp
sbb
mov
xor
movs
(bad)
aas
adc
in
mov
(bad)
ficomp
jle
cmp
dec
xchg
aam
push
icebp
mov
lea
ror
mov
mov
rcl
stos
in
addr16
and
mov
ds
out
(bad)
xlat
push
in
sbb
pop
scas
or
stos
jae
dec
mov
out
push
xchg
mov
fisttp
arpl
call
sbb
dec
fist
xchg
inc
bound
push
dec
(bad)
std
xchg
adc
dec
inc
sub
mov
mov
adc
loop
jae
(bad)
hlt
stos
lods
out
adc
dec
push
lahf
xchg
mov
add
leave
mov
clc
pop
sbb
scas
daa
cmp
ret
js
dec
inc
add
adc
pop
pushf
pushf
stos
or
(bad)
adc
fild
jae
cmp
pop
pop
add
nop
inc
(bad)
jo
jns
mov
cmp
sub
and
(bad)
shl
retf
outs
fisubr
scas
idiv
mov
mov
clc
clc
movs
ins
jmp
movs
xchg
fcmovnbe
xor
xchg
and
jmp
inc
jle
popf
fs
dec
xlat
inc
pop
add
pushf
add
ds
sub
push
or
and
les
in
adc
push
mov
imul
sub
jl
imul
cmp
fcomp
bound
scas
jbe
mov
dec
loopne
loop
xchg
mov
mov
clc
fst
cmp
dec
push
mov
rol
jg
movs
inc
iret
jb
or
repz
mov
inc
jp
jnp
outs
mov
jmp
enter
loope
outs
arpl
add
pop
inc
mov
jle
mov
mov
aaa
mov
pop
lds
jle
(bad)
jecxz
xchg
mov
adc
mov
call
mov
stos
add
xlat
aad
lock
shr
mov
daa
es
not
and
and
cmp
jl
dec
pop
or
cmp
jl
rcr
fcomip
push
adc
les
jae
cmp
adc
jl
mov
push
mov
inc
rcl
inc
xchg
mov
xchg
inc
popf
jnp
iret
xlat
dec
xchg
enter
xchg
fucom
xchg
push
xchg
outs
test
mov
lods
push
pop
jmp
xchg
test
sub
pop
or
in
in
popa
call
mov
cmp
jl
xchg
mov
pop
retf
cmp
jmp
sbb
jmp
push
nop
adc
mov
push
movs
mov
and
mov
mov
pop
outs
mov
lds
mov
xor
fisub
mov
jl
cwde
mov
lock
sar
push
enter
inc
cs
(bad)
in
inc
retf
dec
push
pop
push
xchg
pop
stos
push
es
mov
cmp
(bad)
in
cmps
cli
pop
jne
inc
std
ds
add
sbb
and
inc
push
mov
xor
pop
outs
in
cmps
or
sub
jmp
(bad)
jbe
daa
fnstenv
mov
jb
icebp
mov
popf
test
mov
or
mov
lock
sbb
mov
pop
lahf
test
jmp
adc
push
sahf
adc
cmp
aas
jbe
mov
fdivr
fstp
loope
push
dec
pop
fiadd
inc
das
xor
push
dec
cmps
jnp
lahf
and
mov
xlat
out
and
inc
inc
push
fsubr
mov
pop
call
xor
inc
adc
push
sar
mov
mul
in
icebp
repnz
push
xchg
sub
pop
sbb
(bad)
jae
pop
fs
scas
outs
jne
mov
call
out
cmp
not
push
cmp
dec
sub
ss
xor
popa
or
add
mov
pop
cdq
fild
neg
push
pop
mov
les
mov
add
ror
lods
lds
sub
push
(bad)
mov
ret
jo
sbb
add
mov
out
pop
jecxz
sbb
ins
frstor
jns
jb
inc
mov
cmp
gs
fdivr
mov
inc
mov
cmp
add
dec
mov
adc
xchg
cld
fbstp
jns
dec
nop
push
out
test
enter
test
add
les
popf
(bad)
cmp
pop
setle
clc
nop
scas
cli
cmp
stos
push
pop
cs
ret
pop
fcomp
add
inc
js
push
pop
xchg
cmps
xchg
in
js
mov
push
les
pop
add
add
pop
popf
sub
pop
ins
mov
cs
jmp
call
rcr
sbb
inc
mov
pop
mov
mov
pop
into
shl
xchg
mov
inc
cwde
jle
xchg
sahf
xchg
das
add
(bad)
mov
mov
out
pop
or
test
and
xor
test
sbb
stos
retf
dec
sbb
inc
into
in
adc
add
call
pop
js
push
add
mov
xlat
xrelease
ret
dec
push
jnp
dec
fcmovb
fimul
int
jg
loop
and
sbb
(bad)
mov
xchg
add
fisub
mov
outs
bnd
push
add
fmul
sub
es
jno
xor
dec
nop
stos
test
ja
hlt
sbb
and
cmp
popa
and
mov
mov
iret
jge
sub
adc
rol
jmp
inc
cwde
fiadd
addr16
pop
call
into
mov
or
ret
repz
stos
sti
scas
enter
jne
popf
mov
xor
lock
rcr
arpl
and
or
(bad)
lock
out
popa
push
pop
(bad)
xor
mov
cwde
lea
in
retf
hlt
push
pop
jp
out
push
fs
xchg
push
mov
pop
test
mov
xchg
rcl
pop
jbe
adc
shr
repz
in
mov
in
sbb
inc
dec
mov
mov
clc
std
fcom
jmp
hlt
cmp
test
fiadd
inc
and
shr
jae
or
cmp
sti
fstp
leave
jo
pop
xor
pop
cmp
cmp
inc
inc
popf
outs
inc
cmps
add
cwde
(bad)
xor
or
scas
mov
les
pusha
fisttp
mov
mov
cmps
push
not
mov
mov
stc
aas
and
test
int3
cmc
pop
pop
xchg
mov
or
push
enter
jmp
push
push
inc
mov
dec
push
push
sbb
and
inc
int
imul
mov
imul
or
scas
xor
xor
sahf
call
pusha
stc
pop
jbe
mov
arpl
jecxz
and
loop
adc
ins
mov
fstp
jns
ficom
mov
rcr
cmp
sub
int3
hlt
fistp
add
and
inc
stos
push
or
mov
retf
jl
fcomp
or
pop
push
cmp
and
jbe
xor
aad
cmp
adc
mov
and
lods
mov
hlt
pop
pop
pop
xchg
mov
xchg
push
test
or
push
cdq
xchg
mov
pushf
pushf
and
adc
mov
in
pop
fadd
test
loope
inc
cmp
aas
dec
and
mov
call
mov
jle
dec
cmp
xor
cmp
dec
ror
add
xor
xchg
mov
loop
cdq
adc
cmp
inc
mov
and
jb
test
jmp
mov
mov
test
inc
std
shr
xchg
popf
imul
dec
loopne
bound
call
push
scas
xchg
ds
rcl
idiv
mov
add
add
add
pop
out
sbb
xor
or
lods
pop
es
out
jmp
bound
movs
pop
out
loope
out
mov
jmp
sar
test
pop
sar
mov
in
test
shl
sbb
sub
or
rcl
test
mov
xor
test
xchg
pushf
sbb
jns
into
aas
shl
dec
jae
mov
or
jl
movs
push
pop
rol
in
adc
push
cmp
retf
popf
(bad)
test
sub
dec
out
mov
int3
xchg
not
mov
xchg
xchg
jmp
cmp
rcl
cdq
lods
xor
pop
out
inc
sbb
jge
inc
push
or
ins
pop
daa
lea
pop
mov
iret
pop
sti
mov
mov
pop
mov
mov
cwde
ins
cmps
sbb
cmp
xchg
push
call
sbb
xchg
movs
push
mov
sbb
inc
test
fild
nop
cmps
mov
and
dec
adc
mov
dec
push
xor
retf
push
cmp
movq
imul
pop
std
fnsave
lds
aam
push
jbe
mov
jle
inc
jae
jnp
pushf
or
(bad)
mov
clc
lods
mov
(bad)
js
pop
pushf
jno
pushf
lock
xor
cmp
cmps
popf
add
dec
xchg
mov
jg
out
test
push
(bad)
mov
pushf
mov
repz
(bad)
xor
std
jp
sub
sub
cmps
aas
je
mov
sbb
ret
cmps
xor
add
daa
cmp
adc
inc
fidiv
mov
mov
iret
lock
repnz
pusha
pop
fnstenv
popf
mov
xchg
inc
into
mov
xlat
rol
into
cmp
dec
dec
movs
nop
jmp
pop
out
shl
test
cld
sbb
sub
int3
cs
sbb
mov
mov
stos
jp
int3
add
enter
or
adc
dec
cmp
out
pop
lahf
jae
arpl
pop
sbb
sub
mov
dec
(bad)
xor
stc
jle
pop
add
mov
xchg
call
jl
nop
push
or
mov
mov
stos
push
add
xchg
repz
pusha
gs
inc
leave
jne
push
cmp
ror
pop
data16
jbe
clc
je
jne
mov
iret
xor
out
push
jecxz
js
repnz
adc
aad
adc
add
popa
movs
or
pushf
cmp
aam
xor
add
cmp
jne
movs
push
cmc
mov
mov
(bad)
cmps
add
mov
cdq
sub
cmp
aad
cmp
call
iret
xor
push
inc
add
xchg
cs
imul
js
cli
jl
jb
mov
xor
shl
cwde
inc
mov
cwde
push
cmp
xchg
add
sbb
retf
ds
push
dec
mov
scas
ja
pusha
test
jle
mov
hlt
in
fcom
inc
jns
xchg
jl
push
sub
retf
neg
sbb
dec
mov
jo
jns
test
ret
cmp
mov
(bad)
add
push
retf
inc
and
and
daa
out
dec
adc
add
sar
or
cmp
enter
add
dec
arpl
addr16
mov
or
push
nop
cdq
stos
clc
pop
mov
mov
cmp
jmp
enter
mov
cmp
fld
add
push
bound
xchg
scas
mov
out
or
and
adc
mov
jg
mov
jg
xchg
mov
(bad)
mov
in
jb
fisubr
jmp
test
and
lahf
lds
fwait
test
dec
mov
hlt
hlt
cdq
loope
outs
(bad)
(bad)
div
sbb
sbb
sar
daa
loope
fs
fbstp
and
call
shl
lahf
(bad)
push
outs
ja
cmc
cmp
push
mov
movs
imul
(bad)
mov
shl
xor
inc
outs
sahf
push
movs
jecxz
jg
jecxz
es
xchg
push
repnz
idiv
(bad)
(bad)
imul
mov
push
aaa
(bad)
fild
test
push
hlt
push
scas
or
xor
in
bound
push
stc
xor
pop
jmp
es
addr16
daa
fcmovne
jp
bound
loopne
outs
arpl
stos
pusha
pop
fcom
mov
jge
mov
sbb
adc
fdiv
fild
pop
rcr
iret
loope
call
mov
xchg
and
ins
xchg
sti
mov
jnp
mov
das
adc
fnstcw
mov
in
sub
jmp
and
dec
jae
dec
add
mov
call
cmc
xor
sbb
xor
add
sbb
add
inc
and
mov
iret
iret
loopne
mov
popa
jp
outs
and
out
jne
xlat
call
test
js
jecxz
test
aaa
test
js
(bad)
jecxz
mov
inc
das
call
xor
adc
pop
jne
retf
mov
out
enter
pop
pop
pop
aas
cmps
dec
sbb
add
imul
push
jg
xchg
xchg
add
mov
xchg
jg
jo
cwde
sar
repz
and
shr
mov
inc
inc
xor
mov
fist
jmp
cmps
inc
aaa
push
clc
in
jle
sbb
outs
lods
sub
mov
add
into
ds
jmp
(bad)
adc
lar
jns
mov
ins
movs
xchg
stos
push
sbb
outs
jmp
sahf
pop
test
jno
sbb
mov
add
mov
mov
and
fisub
cwde
sar
dec
cwde
jge
nop
cdq
mov
aad
movs
call
mov
inc
cmps
daa
sub
xchg
stos
inc
retf
and
sub
stos
jae
jno
lds
inc
loopne
jno
ror
arpl
sti
cmp
jbe
add
push
push
cwde
pop
sbb
xchg
cmps
cs
pushf
dec
mov
and
xchg
call
loop
jne
adc
jbe
mov
adc
call
scas
addr16
ror
cmp
mov
jbe
test
bound
scas
xchg
test
shl
cmp
cld
adc
pop
cmp
push
mov
jo
or
movs
xor
pop
cmp
xlat
(bad)
in
mov
jno
inc
inc
fnstsw
mov
jle
jecxz
push
nop
mov
jmp
dec
mov
lods
jnp
mov
jmp
mov
lea
aaa
pop
ds
retf
and
imul
push
dec
xchg
ret
mov
imul
ins
push
and
daa
ins
jbe
aas
mov
jns
mov
inc
rcr
gs
fstp
cwde
hlt
jmp
aad
arpl
outs
sar
cdq
push
pushf
mov
stos
adc
jne
imul
sbb
and
(bad)
mov
out
sbb
and
fisttp
inc
cmp
dec
pop
dec
mov
pushf
mov
aam
cmp
push
pop
es
jl
push
xchg
ins
fcom
xchg
lods
test
outs
xor
loop
test
(bad)
imul
in
mov
call
cs
mov
cli
arpl
add
xchg
mov
call
in
int
xor
and
outs
cwde
adc
and
cmp
repz
and
or
and
mov
mov
mov
inc
mov
pop
neg
movs
cmp
inc
pop
ins
fld
std
outs
cmps
hlt
or
mov
sub
mov
mov
sbb
(bad)
adc
mov
mov
mov
adc
or
leave
rcr
cmp
adc
pop
push
jmp
ja
mov
shl
jl
retf
js
cmp
inc
push
scas
push
inc
fstp
ja
xchg
stos
cmp
cmp
xor
mov
jnp
push
lea
jmp
inc
iret
sbb
stc
std
and
mov
adc
xor
ror
mov
adc
xlat
fs
xor
mov
imul
mov
sub
inc
out
or
aad
dec
pop
sub
sbb
inc
add
mov
jo
inc
ins
sub
xor
out
or
call
pop
shr
stos
push
test
ins
in
in
repz
hlt
je
mov
ins
pop
xchg
cwde
xchg
and
loop
xchg
imul
(bad)
fdiv
pop
test
inc
popf
inc
inc
jbe
sbb
add
les
pop
into
idiv
mov
pop
cmp
jo
mov
pop
push
ins
pop
mov
xchg
pop
and
jmp
adc
inc
add
fnstenv
ret
gs
mov
inc
out
mov
mov
cmc
sub
bound
xchg
bound
and
pop
jmp
push
ror
or
fsub
or
xor
sbb
adc
sub
test
sub
sub
jae
add
into
pop
push
mov
mov
jge
xchg
fwait
adc
les
rcr
bound
dec
xchg
fcom
adc
sar
or
jge
cdq
lods
mov
fidiv
mov
es
mov
jmp
fbld
gs
mov
sub
fucom
shl
xor
outs
cmps
xor
pop
mov
test
jp
repnz
add
xor
nop
sbb
pop
sbb
push
popa
mov
xor
scas
test
inc
push
pop
mov
push
adc
imul
dec
lahf
scas
lock
fimul
mov
out
fadd
jnp
mov
push
int3
dec
fdivr
cld
push
call
popf
sbb
mov
fwait
scas
retf
(bad)
arpl
enter
popa
push
ds
and
dec
dec
mov
jne
xchg
outs
inc
add
int
dec
mov
jbe
mov
retf
xchg
shr
xchg
dec
mul
js
(bad)
movs
lea
in
mov
mov
jb
mov
loopne
clc
aam
adc
mov
xchg
jle
dec
push
ss
(bad)
jmp
mov
jae
or
daa
mov
jecxz
cmp
loopne
jbe
sbb
inc
push
pop
scas
aas
rol
mov
pop
stos
fwait
xchg
(bad)
add
int3
sbb
arpl
ins
outs
data16
push
out
push
fisub
hlt
sub
imul
push
sbb
test
mov
fidiv
js
ds
inc
jo
dec
ss
mov
test
mov
iret
inc
adc
sbb
iret
dec
adc
dec
stos
mov
sub
inc
(bad)
cmp
mov
dec
pop
inc
movs
jge
mov
dec
out
mov
and
fld
xchg
outs
mov
mov
inc
fdivrp
mov
fiadd
mov
pop
xchg
push
retf
sub
xlat
ret
xor
imul
inc
and
cdq
scas
sbb
mov
into
push
ja
push
enter
cmp
sub
inc
or
xchg
add
call
(bad)
ficomp
jae
push
hlt
xor
imul
enter
inc
sub
xchg
xor
stc
retf
jmp
addr16
fadd
imul
repnz
inc
into
add
jns
sbb
cmps
jb
pop
mov
scas
scas
add
std
push
mov
jp
fist
outs
jle
sub
inc
dec
mov
push
xchg
cmp
xchg
jmp
sbb
jecxz
xlat
dec
inc
sub
jne
mov
pop
out
popf
dec
(bad)
cdq
jbe
in
mov
in
stc
sub
mov
push
out
rol
jmp
fisubr
fcomp
adc
pop
fidiv
dec
jl
xor
jb
mov
mov
cld
arpl
(bad)
adc
daa
sbb
sbb
sbb
jne
fst
jg
rol
(bad)
jmp
pop
push
and
sub
shl
pop
hlt
std
mov
xchg
dec
mov
mov
fs
ret
in
ret
mov
fsub
and
retf
inc
jg
pop
mov
inc
and
(bad)
fst
ins
jmp
add
push
mov
shl
mov
jb
lea
iret
(bad)
std
inc
retf
pop
movs
pop
aam
loopne
xchg
iret
mov
aam
push
jnp
push
(bad)
idiv
inc
lea
idiv
mov
inc
or
lds
or
test
pop
inc
cld
inc
add
in
ror
sti
out
ds
cmp
cmp
push
sub
stos
dec
dec
mov
jle
cmps
sahf
or
and
(bad)
aam
pop
sub
inc
lods
je
xchg
fisttp
iret
test
and
aam
xchg
mov
call
mov
(bad)
mov
shl
mov
and
dec
sbb
fimul
pop
jg
popf
xor
popa
xchg
je
jl
movs
lods
lahf
ds
dec
repz
seta
push
jno
dec
jmp
inc
mov
cmps
pop
sbb
scas
stos
cmp
dec
xor
not
jmp
sub
nop
rol
shr
push
xlat
test
call
mov
sbb
jecxz
cmps
js
cld
in
repnz
mov
push
out
dec
or
test
sub
fnstsw
inc
bound
mov
test
pop
scas
inc
call
inc
push
iret
xor
add
popf
das
icebp
outs
dec
fwait
push
cmp
test
(bad)
scas
out
mov
inc
jle
dec
sti
cdq
out
xchg
not
adc
retf
in
dec
mov
movs
push
pop
in
mov
xchg
cld
cmc
js
cdq
cwde
addr16
rcl
pop
xor
clc
stos
pop
sahf
daa
inc
add
scas
xor
adc
mov
fstp
ficom
fwait
lea
add
pop
jae
sbb
or
add
sbb
dec
pop
test
je
fs
inc
adc
(bad)
sahf
jl
mov
push
(bad)
fdiv
ja
jnp
std
fdivp
dec
fnsave
mov
icebp
cli
test
mov
imul
mov
sar
push
add
pop
inc
call
push
xchg
mov
mov
sbb
ret
adc
fadd
cmp
imul
pop
mov
(bad)
ins
jns
js
mov
xchg
xlat
cli
adc
das
pop
pushf
aam
add
jb
mov
clc
mov
xchg
jl
mov
mov
popa
mov
jle
mov
lods
and
(bad)
(bad)
call
addr16
jbe
sub
inc
iret
push
add
inc
and
out
mov
std
jg
iret
push
cmp
popa
fs
cli
and
add
mov
jae
rol
ret
adc
aam
rol
jbe
jno
add
iret
mov
push
fld
cmps
push
jmp
scas
inc
addr16
les
repz
xor
lea
pop
in
xor
or
clc
or
adc
pop
mov
dec
xchg
mov
int
popf
fld
mov
dec
loopne
cmp
sub
adc
fs
sahf
or
lods
sub
mov
sbb
call
add
push
inc
lea
cld
ret
cdq
mov
pusha
sub
aam
or
sbb
js
mov
xchg
out
fnstsw
pop
pushf
mov
inc
add
mov
je
pop
mov
push
add
inc
stc
push
(bad)
and
fcomp
push
add
push
sub
or
push
sub
add
das
inc
cdq
jmp
inc
mov
addr16
push
ins
inc
mov
push
fwait
shl
jge
sbb
icebp
xchg
adc
adc
sahf
mov
sub
mov
(bad)
enter
stos
mov
cmp
cmp
out
inc
and
imul
cmp
pop
fwait
xchg
stos
enter
ja
cli
xor
sbb
adc
push
adc
out
imul
imul
popa
(bad)
inc
lock
inc
and
push
retf
(bad)
loopne
in
mov
es
xchg
jno
push
adc
popf
sbb
icebp
(bad)
mov
rcr
mov
push
pop
cmp
in
inc
cwde
add
inc
mov
inc
and
mov
out
outs
stc
jmp
mov
push
fiadd
jl
pop
test
mov
ficomp
push
xor
mov
dec
add
out
inc
mov
jl
adc
aad
fmul
mov
fs
xchg
imul
jmp
stos
inc
dec
mov
(bad)
(bad)
idiv
xor
(bad)
push
rcl
inc
adc
loop
bound
fstp
sbb
jae
fst
jg
fdiv
jmp
jl
sbb
add
js
sub
add
mov
xor
xchg
cmp
push
cmp
mov
popa
(bad)
push
jno
mov
dec
jmp
lahf
sbb
fucomi
or
push
push
lahf
dec
dec
(bad)
rcl
ret
retf
dec
bound
cli
adc
sbb
fucomi
dec
popf
sbb
inc
mov
push
jne
pop
pop
ja
mov
std
inc
call
push
or
sbb
daa
stos
adc
pop
jbe
pop
dec
mov
add
cwde
xchg
aas
and
and
jp
imul
jmp
in
mov
popf
test
jmp
cmp
sbb
(bad)
enter
(bad)
jecxz
retf
push
outs
fstp
in
sub
pop
pop
or
pop
movs
xor
outs
test
test
in
loope
mov
adc
add
dec
push
and
jp
mov
inc
fwait
lods
xchg
sbb
pop
retf
neg
pop
jae
push
shl
out
loopne
dec
add
std
xchg
sub
outs
stos
movs
mov
arpl
mov
cmc
popf
dec
dec
test
jmp
in
jne
inc
arpl
inc
mov
push
es
mov
fisttp
cmc
arpl
or
mov
jp
test
cmps
sbb
popf
xchg
movs
xor
jb
jmp
push
lock
fistp
cmps
aad
xchg
aam
jg
test
repnz
imul
mov
repz
push
or
imul
lahf
sub
je
pushw
outs
mov
pushf
sahf
sub
sar
out
aas
xchg
fcomp
adc
cmp
cmp
push
adc
mov
mov
dec
mov
sub
clc
mov
mov
pop
ror
xchg
rol
push
retf
pop
(bad)
retf
jmp
lds
enter
rol
pop
mov
xor
pop
rcl
sub
and
inc
mov
push
push
cwde
mov
icebp
inc
into
clc
or
sar
bound
lds
imul
jno
dec
dec
rcl
mov
cmp
sbb
icebp
mov
pushf
loop
les
inc
fldenv
fadd
push
loopne
js
test
popf
pop
mov
xor
cmps
inc
add
lahf
mov
mov
lods
mov
push
add
cli
mov
pop
xor
sub
ret
int3
test
sub
push
fsubr
or
ret
pop
sbb
adc
push
push
dec
add
or
sar
and
sub
repnz
sbb
and
mov
inc
mov
mov
mov
fisub
cmp
les
xchg
mov
jns
(bad)
ret
jns
sub
cmp
(bad)
jne
push
cdq
push
mov
sbb
out
fidivr
jmp
adc
mov
xor
(bad)
addr16
mov
push
xchg
add
rep
add
ret
add
dec
inc
addr16
dec
fidivr
mov
sbb
ret
out
lea
fs
movs
cmps
adc
mov
movs
mul
jnp
xchg
mov
push
and
in
test
ds
cmp
jp
pop
pop
pusha
mov
in
mov
aam
(bad)
pushf
sar
dec
cmp
ds
cmp
lahf
pop
sahf
and
push
push
pop
sbb
cmp
ficomp
sti
sbb
scas
pop
rol
mov
retf
sub
loopne
mov
mov
lock
int3
cmc
mov
xchg
mov
sub
push
aam
pop
adc
out
dec
sbb
or
mov
mov
(bad)
dec
fwait
rcr
inc
and
sub
lods
xor
sub
xchg
ins
xor
gs
(bad)
loop
mov
jle
sbb
sti
xchg
mov
test
cmps
ja
stc
shr
lahf
leave
or
std
xor
in
lods
mov
and
retf
pusha
jae
adc
mov
movs
lea
lahf
lea
xchg
enter
and
dec
pop
push
or
daa
in
pop
push
mov
mov
call
fldenv
jbe
je
jne
xchg
jnp
mov
pusha
lock
jae
sar
cdq
stos
fsubr
sbb
push
pop
out
repz
retf
loope
out
out
pop
out
fwait
dec
int3
dec
mov
sbb
test
adc
cmps
imul
les
cli
cmp
data16
jecxz
cmp
mov
xchg
or
inc
pop
mov
outs
test
cmp
cmps
xchg
push
into
adc
dec
pop
mov
dec
out
loope
into
or
jmp
mov
cli
push
mov
les
sbb
mov
jl
into
test
out
fbld
lahf
mov
xor
in
pop
retf
sub
sar
jl
(bad)
push
movs
test
cmp
jbe
enter
addr16
js
(bad)
cmp
pop
xor
or
test
cmp
mov
adc
cmc
mov
fistp
cmps
inc
repz
(bad)
mov
(bad)
lods
sbb
js
mov
mov
jmp
not
adc
mov
push
cmp
ins
es
sub
(bad)
call
dec
pop
or
push
push
add
shl
push
aas
pop
jmp
jmp
fsub
js
outs
jmp
out
mov
jmp
fwait
dec
call
inc
in
mov
test
mov
sub
ret
dec
fbld
inc
pop
lods
outs
inc
dec
cdq
dec
inc
inc
test
aas
repnz
loopne
arpl
inc
out
and
xor
push
adc
bound
sbb
xor
or
aam
add
inc
mov
fidivr
adc
sbb
xchg
dec
xchg
jl
xchg
xchg
adc
repnz
mov
retf
push
test
adc
pop
pushf
cmp
jne
je
push
add
(bad)
(bad)
lds
clc
mov
push
push
inc
jnp
add
or
xchg
jns
xchg
sub
mov
push
inc
fsubr
ret
sbb
scas
sub
xchg
mov
push
rol
mov
mov
push
add
mov
(bad)
test
xchg
xchg
xor
pop
seto
sbb
and
je
push
test
ja
shl
rcl
push
jno
(bad)
adc
jne
and
or
scas
dec
adc
sub
cmp
icebp
fwait
xor
mov
sbb
test
icebp
popf
xlat
outs
xchg
(bad)
stos
push
idiv
xor
xchg
inc
mov
ret
jecxz
push
jmp
cmps
cmp
inc
fild
or
mov
xor
jp
mov
xchg
sub
cmc
jg
into
jp
inc
add
and
inc
add
mov
popf
sub
inc
dec
lea
pop
push
mov
add
xor
jp
jns
push
fcmovne
sti
push
call
mov
fmulp
mov
clc
lods
cmc
dec
cdq
jnp
mov
lock
ret
imul
jecxz
outs
jmp
daa
icebp
xchg
enter
or
inc
test
outs
or
push
test
cwde
loopne
dec
add
hlt
add
pop
aaa
xor
cmp
(bad)
adc
xlat
cmp
stos
sbb
and
push
and
pop
jecxz
mov
xor
fdivp
jbe
push
mov
push
inc
sahf
shl
clc
stc
cmp
mov
enter
shr
cld
inc
sar
inc
jg
xchg
dec
mov
add
cmp
js
mov
mov
add
cmp
add
push
mov
frstor
fistp
ds
lods
fwait
mov
pushf
into
fwait
pop
rcl
loop
jno
and
test
dec
mov
sbb
xchg
pop
test
jge
popf
mov
sbb
(bad)
pop
inc
mov
aam
sbb
out
int
ficomp
adc
lahf
imul
xchg
aam
cmp
arpl
dec
rcl
xor
mov
lods
push
in
push
ins
adc
ss
div
push
ret
out
(bad)
fadd
inc
data16
movs
retf
push
loopne
mov
mov
xor
jge
cmp
xchg
test
and
loope
nop
out
loopne
sbb
in
or
sbb
sar
fdivr
jl
dec
mov
imul
xchg
or
jnp
shl
xchg
add
add
pop
pop
and
pop
mov
sahf
dec
ds
std
and
jle
stos
mov
lds
jo
dec
jmp
rcl
movs
dec
call
icebp
mov
into
pop
test
scas
jmp
mov
retf
fadd
outs
addr16
xchg
cmp
rcr
loop
cld
or
push
pop
push
mov
cmps
mov
sub
sbb
in
sub
pop
fiadd
jo
jl
and
push
push
sbb
call
daa
dec
iret
xlat
xchg
pop
xchg
leave
fstp
jg
push
popf
mov
xchg
adc
in
xchg
push
fcom
stc
xchg
pop
fild
cdq
xchg
icebp
aas
ds
clc
int
pop
pusha
xchg
mov
inc
inc
adc
(bad)
mov
add
xchg
add
scas
pop
pop
out
jmp
jae
bound
fsub
bound
jg
ins
data16
lods
sub
mov
lahf
sub
sbb
cmc
add
mov
pop
pop
jae
dec
repz
in
int3
loopne
xor
les
(bad)
mov
inc
mov
lods
adc
retf
loope
repnz
lea
push
test
div
jp
add
push
cmp
push
lds
ret
mov
jmp
pop
int3
xor
jnp
xchg
inc
xor
mov
jns
(bad)
xor
(bad)
jb
jp
pop
fdivr
sub
addr16
mov
pop
push
jno
pushf
test
mov
xchg
jge
pushf
jo
imul
and
icebp
inc
push
sub
fs
mov
test
imul
adc
xor
pop
(bad)
ds
mov
mov
lahf
push
add
mov
out
lods
call
fsubr
data16
mov
loopne
std
xchg
cmps
cmc
jo
inc
lods
pushf
(bad)
cmp
fisubr
mov
xchg
xchg
push
sti
pop
out
pop
dec
call
xor
ds
outs
pop
dec
fwait
mov
enter
js
fiadd
popa
pop
sbb
jae
cdq
pop
mov
les
rcl
add
cdq
add
inc
cdq
in
cdq
push
fwait
mov
outs
inc
addr16
jb
test
inc
mov
sbb
out
mov
movs
addr16
pushf
nop
mov
mov
test
inc
test
cmp
int3
test
imul
pop
pop
cmp
jne
jne
imul
inc
leave
(bad)
or
and
xor
jmp
fimul
into
adc
repz
stc
sbb
push
loope
mov
xchg
pop
mov
mov
sti
jo
mov
mov
fidivr
fwait
test
dec
mov
jmp
sbb
jnp
mov
push
out
out
adc
ret
fsubr
and
and
dec
lods
cmp
inc
clc
push
add
mov
cdq
pop
pushf
repz
jge
sbb
inc
push
xor
(bad)
jle
pushf
push
rep
cwde
cs
cmp
clc
jecxz
rcr
(bad)
xchg
mov
cdq
outs
jmp
add
fisttp
pushf
mov
adc
inc
inc
xchg
xchg
(bad)
bound
mov
pop
mov
inc
aad
ror
cs
shl
xor
das
jns
lea
ja
nop
xchg
mov
jmp
fs
add
fisubr
ds
jo
mov
(bad)
push
aad
sbb
lods
cdq
mov
sti
shl
retf
dec
test
fwait
call
cmps
jae
int3
(bad)
pushf
adc
pop
cdq
movs
lods
into
cs
arpl
sub
hlt
(bad)
dec
jge
(bad)
imul
fnstcw
cmp
int3
into
repz
fdiv
push
cmp
(bad)
ins
dec
jno
inc
sub
stos
dec
or
dec
call
sbb
out
sbb
add
jb
lods
adc
mov
adc
inc
mov
push
out
inc
data16
(bad)
scas
repz
popf
ret
retf
sub
mov
test
daa
and
fsubrp
inc
shl
mov
push
push
aad
stos
sub
mov
dec
jno
push
add
lea
aad
pushf
stc
cmp
icebp
jnp
add
mov
adc
inc
push
fistp
mov
mov
add
inc
fld1
jmp
xchg
inc
cdq
push
ret
mov
mov
fadd
movs
sbb
ja
mov
pop
add
jmp
test
push
or
cld
in
jmp
xor
inc
pop
popa
cmc
adc
ret
test
jle
inc
cmp
adc
scas
push
nop
add
dec
fs
inc
sahf
mov
outs
jmp
iret
push
les
and
jge
test
enter
cli
jg
std
(bad)
cmps
xchg
xchg
xor
(bad)
mov
icebp
js
cdq
(bad)
call
cli
enter
jg
ins
sub
dec
cli
dec
add
fld
addr16
adc
in
ja
adc
pop
mov
retf
fcomp
mov
adc
jb
cli
xchg
cmp
retf
push
inc
pop
and
inc
loope
in
(bad)
xchg
pop
or
cli
mov
xchg
inc
cmps
cmps
sahf
addr16
loopne
test
mov
xlat
sub
adc
or
mov
jp
and
or
mov
psubsb
in
fcom
add
(bad)
push
sub
ja
jge
ret
rcr
inc
mov
stos
adc
mov
stos
cmc
push
retf
and
cmp
aam
imul
jge
in
icebp
xor
jge
imul
jae
call
inc
(bad)
clc
push
fst
and
fadd
ja
fist
and
jo
jbe
call
ror
jnp
(bad)
cmp
inc
xor
adc
add
and
mov
jmp
jmp
fistp
lods
push
loopne
fadd
ret
mov
sub
icebp
cmps
daa
les
mov
sbb
shl
icebp
cld
dec
outs
xchg
stos
inc
int
lock
aas
sbb
mov
inc
rol
ds
mov
dec
and
lods
fxch
mov
add
leave
loopne
sbb
sbb
sub
mov
test
add
movs
mov
in
retf
test
idiv
push
add
push
cmp
outs
loopne
push
and
in
maskmovq
neg
test
xor
mov
sbb
mov
mov
inc
sub
out
jmp
inc
add
lea
dec
inc
xchg
jne
retf
shr
fild
dec
data16
pop
xor
xor
das
leave
push
stos
outs
mov
mov
pop
lea
call
loopne
push
dec
test
mov
ins
mov
out
push
fcmovnbe
div
dec
cdq
mov
add
rcr
ja
(bad)
pusha
ror
add
leave
jnp
add
ins
pushf
adc
lea
sub
xchg
iret
adc
pusha
iret
fsubr
pop
inc
leave
inc
ds
xor
pop
fcom
mov
add
les
test
popa
mov
(bad)
jl
jmp
call
jp
xchg
mov
stc
mov
xchg
aam
les
sub
add
std
cmp
inc
call
push
xchg
mov
(bad)
dec
xchg
mov
mov
add
adc
jno
adc
in
bound
jle
mov
xor
sub
aad
add
dec
daa
(bad)
popa
ret
mov
mov
mov
mov
fwait
dec
test
fmul
cmp
imul
push
and
(bad)
mov
test
xchg
stos
addr16
out
dec
pop
dec
and
jae
add
lahf
cmp
cmp
lea
push
aam
fcmovnb
xor
mov
pop
sbb
adc
mov
outs
outs
cmp
mov
sbb
pop
pusha
call
rol
push
mov
pop
xchg
in
xchg
mov
popf
daa
in
imul
dec
add
ret
xchg
adc
aad
(bad)
jecxz
pop
inc
mov
ficom
(bad)
aad
dec
fisub
jb
inc
lahf
outs
push
cmp
jns
inc
jmp
nop
mov
clc
fstp
fdiv
push
and
jl
mov
xchg
js
sbb
or
fistp
(bad)
pop
jbe
call
out
movs
imul
adc
xchg
in
repz
inc
bound
out
hlt
xchg
retf
dec
cdq
fwait
cmp
dec
enter
(bad)
scas
pop
call
sbb
mov
cwde
call
hlt
or
xor
and
imul
mov
dec
jae
ins
cmp
and
sbb
mul
fiadd
pusha
movs
push
loope
add
pop
adc
loop
sub
jns
mov
push
jecxz
repnz
xor
or
fwait
outs
fwait
pop
aam
and
hlt
pop
lock
pop
mov
pop
popa
or
xchg
sahf
xchg
fsubr
cmp
add
sbb
sub
xchg
and
mov
and
sbb
push
cmovge
out
xchg
mov
push
sbb
gs
dec
mov
test
mov
shl
movs
mov
push
xchg
xor
stos
in
enter
mov
push
stos
push
pop
push
mov
int
popf
sbb
data16
jns
stc
aaa
pop
popa
icebp
stos
stos
mov
scas
pop
rcl
add
std
push
sbb
jae
das
add
test
push
cmp
test
cmp
xor
int3
in
mov
add
sbb
into
sahf
ins
jmp
adc
inc
xchg
xchg
jp
add
in
(bad)
xor
cmps
xor
jb
xor
dec
jmp
adc
jp
xor
fwait
lods
xor
or
add
dec
ja
adc
mov
mov
mov
jb
xchg
xchg
push
cmp
xchg
inc
fwait
ret
inc
jnp
mov
xor
mov
sar
mov
arpl
movs
lea
aaa
jmp
mov
cmps
xor
adc
cld
icebp
inc
popf
push
or
sub
mov
xchg
pop
icebp
ficomp
xchg
out
jg
jle
mov
pusha
mov
jle
mov
jnp
mov
adc
push
inc
shl
cmp
jg
mov
loop
test
out
mov
in
push
(bad)
mov
retf
lods
cmps
leave
sbb
mul
int3
out
aad
pop
push
(bad)
mov
addps
aad
push
cwde
inc
fs
pop
push
std
js
push
mov
push
cld
push
leave
cmc
adc
daa
leave
cmp
and
nop
add
xor
add
nop
adc
shl
lahf
clc
xchg
and
bound
mov
cli
xchg
neg
cmc
popf
inc
out
pop
adc
lock
mov
sbb
ret
sbb
pushf
xchg
sar
jnp
mov
or
leave
in
push
pop
xchg
sbb
xchg
inc
xchg
lds
inc
cld
cmc
jo
cmc
inc
dec
jns
aam
push
sub
cmp
lods
inc
ss
dec
data16
popf
sub
xlat
movs
and
sbb
dec
lds
test
aaa
sti
ret
enter
cwde
fcom
mov
cmps
adc
(bad)
cmp
sbb
dec
repnz
test
out
pop
and
pop
sbb
pop
dec
icebp
add
loop
adc
aaa
(bad)
sbb
inc
add
loop
lods
push
in
inc
push
stos
jg
lea
mov
cmp
stos
in
mov
dec
fisttp
jbe
je
mov
jecxz
(bad)
sub
std
xchg
push
out
mov
mov
popa
mov
stc
out
fdivr
cmp
mov
xor
sbb
rcl
push
inc
mov
xor
or
push
and
and
inc
fidivr
fs
pushf
cmp
mov
add
mov
aaa
inc
pop
jns
les
out
inc
and
and
jmp
adc
lock
jle
sti
mov
pusha
test
out
and
jmp
popf
cmps
cmp
push
ror
jbe
shr
pop
mov
mov
frstor
jno
xlat
push
dec
jnp
loopne
sub
adc
pop
dec
mov
mov
mov
sbb
ins
not
mov
xchg
loop
(bad)
popa
pop
bound
pop
xchg
xor
xchg
and
jp
sti
xchg
sub
test
mov
xchg
call
sbb
(bad)
stc
fs
test
pop
and
mov
leave
cs
jl
(bad)
aas
test
pop
sbb
inc
jmp
sub
ds
out
adc
add
inc
cmp
scas
mov
test
pusha
dec
call
sar
aad
xchg
xor
imul
test
cmp
loope
cld
lock
dec
lea
push
xor
retf
test
xor
jle
push
push
call
inc
popf
int3
cs
popa
push
jle
fidiv
orps
mov
mov
cmps
inc
dec
mov
push
repz
sti
xor
jmp
pop
cmp
fimul
pop
mov
dec
test
lahf
jae
mov
(bad)
hlt
lods
sub
push
movs
sahf
scas
loope
mov
xchg
fisttp
inc
fdivr
xor
sbb
hlt
ror
add
or
gs
inc
je
mov
clc
inc
stc
loop
mov
(bad)
cmp
cmc
add
mov
scas
cmp
(bad)
(bad)
dec
cdq
idiv
cli
sbb
mov
jae
loop
inc
xchg
xchg
jne
stc
loop
jb
pop
movs
mov
inc
inc
cmps
xchg
icebp
fdiv
jle
xchg
(bad)
imul
dec
(bad)
sar
inc
push
sbb
cmp
lahf
xchg
ficom
or
stc
inc
or
pop
mov
mov
fild
and
mov
push
and
(bad)
loop
cmp
les
and
jns
fild
es
call
mov
(bad)
adc
pop
jnp
stos
stos
sbb
cmp
mov
cs
cmp
pop
or
sbb
pushf
jo
jbe
mov
cmps
pusha
out
arpl
push
ret
dec
sub
cs
sbb
add
jl
mov
mov
inc
mov
neg
adc
cmps
adc
dec
jp
push
loop
mov
gs
jmp
mov
jmp
cmps
cdq
xchg
mov
mov
nop
(bad)
icebp
(bad)
jmp
sar
in
sahf
push
or
pop
(bad)
aas
add
or
inc
mov
je
mov
jmp
test
push
adc
(bad)
cmp
mov
lods
xor
dec
push
fist
xchg
or
add
pop
jnp
cmc
cmps
and
int3
(bad)
aad
popa
gs
dec
xlat
mov
jp
loopne
adc
mov
idiv
adc
sub
jns
mov
mov
jecxz
sbb
lods
dec
push
xor
pop
sub
cmps
movd
or
xchg
fnstsw
push
(bad)
push
xchg
int3
bound
or
ss
mov
into
inc
imul
xor
(bad)
jne
cmp
jmp
aam
jg
cmp
sahf
and
out
mov
or
mov
(bad)
in
cmp
dec
je
xchg
repnz
push
hlt
jbe
or
cmp
add
outs
lahf
or
pop
or
mov
sbb
xlat
js
jmp
sbb
and
cmp
adc
adc
mov
cli
jmp
setae
add
inc
(bad)
nop
arpl
mov
popf
dec
shl
add
mov
shr
xchg
xor
into
aad
push
fwait
xchg
imul
cs
stc
xor
jno
sub
cdq
cmp
dec
icebp
cdq
test
test
adc
fidiv
push
push
mov
sub
pop
mov
mov
cmps
and
fdivr
sti
dec
push
jbe
jb
mov
mov
icebp
mov
sub
dec
xchg
call
mov
add
icebp
loopne
retf
loop
adc
gs
lock
push
push
sbb
or
pop
push
cmc
ret
xchg
ret
sbb
out
dec
lahf
out
sbb
mov
jge
cld
or
pop
jno
mov
mov
frstor
mov
mov
mov
xor
aam
cmp
pop
dec
sbb
iret
loope
loop
push
(bad)
popf
push
xchg
pop
cmc
xchg
xor
nop
gs
retf
stos
lods
jecxz
inc
mov
aad
pop
or
sti
sbb
sbb
jns
xor
dec
scas
mov
rcl
lods
push
fsubr
jae
leave
or
sbb
popf
(bad)
rcl
outs
test
jl
out
sahf
sbb
bound
push
retf
pop
xchg
call
push
in
stos
lahf
jbe
pop
nop
test
in
pushf
mov
sbb
lock
inc
test
outs
xchg
outs
out
adc
dec
rcl
push
or
imul
gs
mov
clc
inc
call
jmp
ins
jne
daa
mov
imul
add
push
push
mov
cmp
je
xchg
les
xor
mov
sti
shl
mov
leave
shl
xchg
icebp
mov
push
clc
sub
dec
xlat
retf
cld
jb
aaa
add
push
mov
sub
sbb
mov
gs
pop
cmp
push
and
sub
mov
jl
(bad)
jp
mov
movs
aad
cmp
pop
std
mov
adc
bound
mov
stos
ins
into
jmp
call
shr
popf
push
mov
retf
retf
lahf
fisttp
addr16
dec
and
inc
lock
scas
cmp
test
jp
xchg
fwait
xchg
push
pop
ficomp
in
clc
cmp
jne
out
sub
adc
inc
xor
pop
movs
aad
sub
daa
cmp
cld
in
fwait
icebp
jge
addr16
mov
fdivr
push
in
mov
adc
hlt
xchg
jp
arpl
movs
sbb
mov
fldpi
ret
fld
out
mov
or
pavgw
jb
inc
pushf
adc
mov
mov
test
out
fdiv
mov
sub
aas
cdq
sbb
adc
sbb
dec
pop
or
push
pop
imul
icebp
data16
outs
and
pop
mov
xchg
jne
call
pop
mov
inc
push
nop
pushf
popf
adc
shr
fsubp
pusha
sbb
inc
lock
cmp
retf
xor
mov
pusha
jne
dec
sbb
(bad)
mov
mov
cmp
(bad)
fimul
push
and
pop
das
push
outs
sbb
sub
imul
add
add
mov
daa
(bad)
hlt
inc
retf
push
push
pop
mov
mov
xchg
data16
in
and
sbb
pusha
je
mov
test
lods
repz
jae
ja
sub
cs
mov
and
cmp
test
adc
pop
(bad)
jnp
icebp
jp
in
jp
push
sbb
aaa
lea
rol
adc
xchg
(bad)
imul
push
xchg
out
dec
loop
add
test
gs
call
fmul
xchg
lods
jmp
lea
pop
mov
mov
out
xor
push
lods
sbb
inc
ret
retf
rcl
add
(bad)
popf
inc
cmp
mov
adc
push
out
lock
into
jno
pop
add
sub
jg
aas
scas
aaa
stos
jne
data16
jo
stos
aas
jb
fwait
scas
nop
jl
scas
mov
sar
cwde
dec
cld
cmps
loopne
loope
or
push
push
out
xchg
call
lods
jge
in
xchg
(bad)
int3
fsub
test
das
sub
mov
cld
addr16
push
add
cmp
sub
jno
push
and
mov
inc
iret
inc
(bad)
stc
and
sti
jge
inc
inc
out
sbb
pop
jne
jmp
mov
pusha
test
push
pop
(bad)
fmul
jecxz
pshufw
mov
jmp
dec
(bad)
mov
test
push
cwde
cdq
out
cmp
loope
cmp
jmp
inc
sub
jmp
fs
in
and
mov
cs
in
into
cmp
push
fistp
outs
dec
jb
out
sub
push
frstor
aas
addr16
cmps
or
or
es
je
jbe
jns
inc
fisub
sti
pusha
into
in
or
jecxz
rcr
mov
dec
mov
scas
add
into
adc
imul
dec
mov
aaa
inc
mov
jnp
addr16
pusha
mov
mov
xor
jmp
movs
lock
inc
inc
call
adc
and
mov
pop
jmp
sar
cmp
int
aad
inc
ins
xchg
push
rcr
mov
or
lds
mov
mov
lock
fild
xchg
(bad)
pop
sar
xor
dec
jmp
rcl
cmp
popa
sbb
push
test
xchg
aam
pop
in
ja
add
shl
mov
xor
aaa
lods
pop
stos
jp
mov
pop
push
mov
dec
jb
out
xchg
jmp
ins
pcmpeqb
jbe
(bad)
mov
cmc
cwde
jno
mov
lods
sbb
jnp
stc
or
fild
mov
mov
add
retf
scas
mov
fistp
ins
cmc
sub
or
mov
inc
enter
dec
xchg
ins
stc
pop
pop
jno
mov
scas
dec
and
inc
std
lea
(bad)
sar
pop
inc
in
sbb
aas
cwde
daa
repz
test
mov
stos
or
push
jnp
in
xchg
inc
mov
jg
pop
inc
push
shl
jnp
in
in
xchg
mov
lahf
add
dec
mov
jp
mov
shl
out
not
pop
inc
xchg
mov
jmp
dec
repz
je
inc
or
sbb
mov
adc
int3
int
(bad)
add
push
jecxz
xor
add
mov
jae
retf
adc
xor
(bad)
jmp
clc
js
pop
fwait
push
cld
fmul
outs
sahf
(bad)
sti
imul
dec
or
cmps
bnd
jp
lods
lahf
lock
mov
scas
mov
add
loope
xchg
retf
data16
jp
push
ret
int3
int
cld
inc
jp
xor
ins
pop
push
xchg
stos
dec
les
adc
adc
daa
xchg
sbb
shr
scas
dec
jb
mov
fcomp
std
jl
and
jnp
std
xchg
jae
test
out
call
test
mov
pushf
mov
xor
(bad)
sub
xchg
pop
std
adc
adc
std
and
js
fwait
sbb
mov
ins
mov
and
jge
retf
mov
aas
ret
jbe
sub
outs
dec
lods
bndldx
stos
or
add
add
outs
out
(bad)
mov
into
mov
mov
enter
mov
inc
add
mov
fidiv
mov
dec
retf
pop
neg
cmp
aam
rcl
sbb
and
ins
test
lods
pushfw
mov
ret
ret
inc
dec
imul
aaa
pop
cwde
pop
mov
inc
jnp
or
mov
push
out
scas
mov
aam
mov
cmp
jmp
push
fild
and
mov
xchg
push
adc
in
pop
int3
dec
mov
push
push
mov
sti
(bad)
mov
scas
aad
jmp
push
call
aaa
inc
and
cmp
cwde
ins
es
mov
(bad)
inc
cli
repz
jbe
inc
inc
mov
push
icebp
es
das
test
inc
(bad)
sbb
call
ret
mov
(bad)
jne
iret
(bad)
gs
mov
mov
les
cmps
test
or
inc
jl
ret
lea
push
mov
dec
cmp
jne
cmp
bound
pusha
and
mov
std
mov
mov
fs
dec
adc
inc
xor
add
mov
or
or
popa
hlt
stos
jmp
loope
jb
mov
jle
mov
jge
xchg
inc
sbb
lock
(bad)
imul
sbb
sbb
das
inc
cli
(bad)
mov
stc
inc
add
fst
and
mov
or
gs
jo
mov
mov
pop
hlt
push
retf
mov
sbb
sub
mov
jg
fisttp
stos
pop
push
test
xchg
add
xor
cmps
sti
cmp
xchg
js
imul
jb
(bad)
mov
jecxz
and
ret
mov
out
scas
add
popf
mov
add
test
jge
movs
popa
ror
sub
fnstenv
daa
pop
sub
lods
push
jbe
addr16
push
mov
sub
dec
(bad)
sar
xlat
inc
ja
sbb
and
test
inc
push
inc
mov
mov
xlat
hlt
mov
mov
add
dec
fnsave
test
jne
lock
cmps
add
stos
jecxz
cmp
lds
call
push
jmp
cld
jmp
pusha
push
push
pop
pusha
mov
scas
mov
cwde
fisub
inc
or
cmp
xor
mov
pop
jbe
or
sub
outs
xor
pop
in
xchg
sbb
cvtps2pi
jns
mov
push
lock
(bad)
sub
jle
mov
out
cdq
pusha
js
mov
retf
cmc
scas
(bad)
dec
pop
mov
addps
clc
xor
aas
mov
jb
push
pushf
fstp
je
enter
add
adc
xor
cs
pushf
add
das
out
je
inc
shl
jno
xchg
xchg
or
mov
mov
jno
push
inc
push
(bad)
xchg
ret
jle
in
call
adc
mov
repz
call
cmps
ror
in
cmp
jne
push
pop
cmp
out
out
cmp
push
addr16
data16
inc
jbe
jns
imul
stos
dec
rcl
sbb
add
sbb
inc
ss
sub
lods
pop
cmp
and
retf
add
cmp
retf
mov
add
test
(bad)
or
mov
mov
push
fucomip
mov
xchg
jp
mov
neg
mov
inc
or
jmp
pop
and
(bad)
cwde
int
pop
fstp
jo
repz
pop
inc
mov
ds
inc
push
ror
mov
mov
retf
inc
mov
or
jle
and
fistp
mov
jl
fwait
push
or
(bad)
dec
lock
mov
push
xchg
mov
leave
lods
ffreep
jge
in
mov
call
leave
lods
jne
sbb
adc
es
scas
mov
stos
inc
fwait
out
jg
mov
or
daa
sub
sub
or
mov
test
ins
xor
pop
fild
pusha
fsub
sub
out
popf
fsub
adc
into
fcomp
test
inc
mov
movs
adc
repnz
cmps
cld
(bad)
dec
gs
icebp
or
(bad)
push
cli
or
jge
shl
sbb
mov
jge
popf
mov
aaa
add
gs
jns
idiv
jle
fiadd
pop
(bad)
pop
(bad)
aas
shr
cmps
push
and
stc
xor
fstp
hlt
adc
imul
xchg
adc
in
jmp
sbb
ins
mov
(bad)
jg
xor
mov
neg
mov
hlt
cs
das
ret
(bad)
fst
add
pop
mov
sbb
jb
push
xchg
in
(bad)
sbb
jg
fld
imul
test
test
sub
ss
int3
int
xor
inc
ja
dec
retf
popf
cli
inc
mov
mov
xor
lea
ja
mov
leave
out
out
idiv
stos
mov
out
scas
cmp
cmp
shr
jge
and
dec
mov
imul
test
mov
pop
out
lahf
shl
vhsubpd
xor
adc
xchg
and
mov
jnp
mov
jb
fnstsw
repnz
add
sub
rol
retf
mov
mov
cmc
inc
xchg
(bad)
mov
ins
out
jmp
inc
into
fidiv
mov
rcl
pop
sbb
test
dec
cmp
sub
push
push
push
mov
(bad)
into
sbb
rcr
stc
rol
mov
pop
sbb
es
pop
adc
mov
mov
ret
shr
test
sub
hlt
test
jl
data16
fmul
mov
loopne
sar
xor
mov
jo
rcl
jmp
loop
jbe
dec
cmps
aaa
sub
lds
ja
cmps
outs
arpl
pop
pop
ins
mov
ror
pop
add
inc
sub
cmp
ds
clc
inc
push
mov
pop
mov
cs
in
out
mov
out
push
mov
cmp
sar
sub
stos
lock
fsub
test
cmp
test
(bad)
ins
push
lea
lsl
mov
rcr
inc
add
dec
data16
jae
xchg
mov
popa
std
lock
leave
push
push
pop
cmp
adc
lahf
push
stos
push
retf
or
movs
lea
push
ss
call
add
dec
adc
inc
sar
mov
ficomp
sbb
mov
daa
aad
test
in
inc
mov
neg
dec
aam
ret
ds
and
inc
fadd
je
mov
mov
popf
xor
xchg
jo
cmc
adc
jmp
push
mov
lahf
outs
or
mov
pop
cmp
jmp
shl
inc
lds
std
movs
retf
imul
adc
sti
repz
(bad)
pushf
in
cmp
xor
aam
lods
fst
jp
cmp
push
xlat
aam
cbw
ss
sbb
adc
test
mov
shl
xor
pop
jb
cmp
inc
xor
pop
xchg
aas
rcr
test
xor
or
adc
fnstenv
inc
js
mov
test
ja
fstp
call
outs
in
xchg
std
arpl
loope
repz
fistp
xlat
sub
cmp
sub
(bad)
leave
pop
into
sbb
sbb
scas
sbb
mov
xchg
cwde
xor
inc
(bad)
cmp
add
leave
adc
mov
inc
sbb
add
and
leave
mov
sbb
shl
outs
movs
jle
sbb
jecxz
or
sar
out
sbb
mov
jg
mov
(bad)
std
repnz
ins
inc
loop
xor
neg
shl
adc
pop
(bad)
pusha
push
fwait
ins
aas
pop
in
mov
push
sahf
lea
inc
push
mov
pop
mov
into
ss
dec
imul
jmp
mov
push
push
aas
lahf
in
xor
push
cmp
ds
mov
pinsrw
sub
jnp
cmp
nop
mov
rcl
call
xor
pushf
pop
sbb
addr16
dec
pop
or
cld
push
idiv
pusha
push
add
in
sub
jno
mov
fs
pop
add
xchg
sbb
dec
stos
rcr
sbb
mov
movs
test
in
mov
add
call
loope
mov
mov
xor
pushf
test
mov
cli
cmp
(bad)
int3
and
jo
imul
and
stos
test
stc
sar
mov
inc
pop
jecxz
sbb
gs
aaa
nop
aas
sti
add
mov
xchg
sub
aam
cmp
xlat
enter
sti
imul
jge
mov
movs
dec
int
js
test
mov
aad
mov
scas
inc
jno
sahf
mov
idiv
in
pop
cmc
fiadd
das
mov
and
(bad)
adc
push
adc
(bad)
pop
sti
aad
pushf
call
(bad)
adc
sub
bound
push
cmp
cwde
call
es
outs
enter
lods
xchg
pop
loopne
push
jle
dec
shl
addr16
inc
sub
shr
mov
pop
movs
mov
ret
mov
jmp
sub
mov
mov
lock
jae
and
push
sub
in
mov
(bad)
pop
cli
in
and
aad
jbe
xor
daa
or
ins
pop
mov
inc
xchg
xor
out
mov
loopne
add
add
jb
mov
jg
popf
jge
xchg
cli
mov
int3
dec
scas
div
bound
mov
lods
(bad)
aam
sbb
aam
push
sub
iret
xlat
(bad)
fstp
dec
or
shr
inc
jp
jo
imul
popa
loope
sbb
ja
jecxz
ds
push
and
dec
adc
popa
repz
ins
pop
adc
inc
aad
jbe
mov
xor
jmp
aad
lea
inc
pop
mov
lea
add
cld
pusha
pop
cdq
xchg
inc
stos
adc
sbb
mov
jp
adc
adc
add
scas
mov
(bad)
pop
cdq
aad
or
imul
inc
sub
pusha
mov
into
sbb
add
xchg
dec
pop
cmps
mov
retf
adc
fdivr
dec
push
ins
mov
inc
mov
mov
neg
xchg
push
push
mov
mov
rol
arpl
ss
daa
cwde
inc
add
jle
test
or
mov
fiadd
retf
mov
pop
jns
fnstenv
or
xor
add
cmp
sbb
push
adc
cmp
or
adc
mov
inc
int3
mul
dec
jge
lea
movs
cld
inc
mov
xchg
jecxz
push
push
xlat
icebp
std
cs
mov
sbb
pop
icebp
repnz
mov
dec
xchg
cdq
push
enter
ss
(bad)
out
and
dec
je
imul
or
fwait
call
xchg
add
jb
retf
add
jne
xor
pop
push
stos
or
xchg
or
ror
rcl
pop
sahf
rol
jbe
pop
mov
ins
xchg
jnp
enter
retf
pop
idiv
xchg
call
out
and
rol
aad
mul
cmp
push
pop
fnsave
pusha
mov
popf
mov
(bad)
jmp
fs
fs
jmp
ins
inc
cs
add
or
pushf
sbb
mov
imul
mov
push
inc
pop
stos
jl
scas
div
cwde
in
pop
lock
jae
mov
mov
xchg
in
adc
test
stos
int3
lock
pop
out
fwait
jae
jb
cmp
push
loop
jecxz
fld
cs
add
je
xor
dec
in
xchg
les
cdq
jecxz
xchg
in
push
jb
sbb
jge
stos
inc
pushf
sub
dec
push
movs
jae
mov
clc
adc
push
jge
jmp
pop
sub
jmp
inc
push
xchg
sub
mov
call
xor
retf
xchg
data16
in
stos
dec
lods
dec
inc
lea
sub
lahf
xor
cmp
std
aad
jne
cmp
js
add
arpl
sub
stc
clc
js
jmp
in
cmp
sbb
les
shr
xchg
pop
call
aaa
dec
out
fiadd
stc
jge
(bad)
fidiv
jmp
push
not
mov
jmp
mov
test
sbb
scas
adc
iret
std
cmps
mov
and
jmp
jg
xor
scas
cmp
cld
push
sub
(bad)
mov
out
pop
xchg
jmp
jmp
cmp
and
js
fistp
adc
mov
pop
adc
cli
sahf
adc
outs
mov
jg
int3
xchg
pop
std
fwait
jg
neg
pushf
pop
out
pop
test
inc
lea
jecxz
repnz
mov
xor
fidivr
cmp
add
push
jmp
xchg
xchg
mov
pop
stc
pop
(bad)
shl
ret
imul
sub
pop
xchg
push
stos
inc
jnp
dec
cmps
inc
popa
out
mov
loop
cdq
add
aam
loope
gs
call
mov
aad
xchg
cmp
dec
stos
cmps
fsubp
or
pop
inc
sti
xor
rol
in
aad
out
ins
fstp
push
clc
add
sbb
inc
mov
stos
mov
loop
jge
out
inc
ja
inc
cld
sub
popa
jo
mov
mov
popf
push
mov
dec
xchg
mov
arpl
sar
and
jl
scas
je
fdiv
ins
cmps
out
mov
push
icebp
ret
mov
mov
jnp
mov
aam
enter
mov
in
sbb
mov
add
cmp
jnp
imul
mov
loop
sub
es
xor
test
jns
xchg
xchg
sub
mov
dec
fwait
call
neg
bound
inc
pushf
hlt
popf
ins
xchg
mov
cld
adc
shl
mov
in
xchg
cwde
int3
xlat
dec
dec
mov
push
fisubr
lock
dec
cld
in
stos
jp
dec
inc
cmp
inc
inc
mov
test
push
jmp
gs
pop
inc
adc
and
xchg
or
lods
ss
inc
sub
daa
sar
dec
std
dec
cvttps2pi
inc
mov
jb
out
ret
icebp
add
mov
(bad)
in
stos
adc
aam
dec
xchg
stos
jp
push
in
sub
add
in
fs
das
push
xchg
pop
aas
jle
or
popf
shr
daa
fild
cmp
sub
nop
ins
aaa
test
pop
mov
fwait
jne
dec
and
xlat
or
inc
arpl
jae
add
fwait
sar
pop
into
(bad)
xchg
sub
pusha
mov
lahf
mov
dec
ja
cmps
lods
ss
ret
stos
(bad)
frstor
cmc
fdiv
loopne
clc
xor
das
mov
cld
ja
xor
les
dec
inc
sahf
inc
aaa
pop
lea
data16
sbb
pop
sbb
adc
mov
ja
dec
adc
sub
test
mov
(bad)
sub
aam
repnz
push
inc
rcl
mov
mov
mov
cmp
mov
repz
out
sbb
mov
xchg
test
mov
cmp
loope
call
cmp
lahf
cmp
stc
xor
push
mov
scas
popa
(bad)
inc
jno
fnstcw
sbb
das
cmp
ficomp
inc
fnsave
test
inc
out
mov
jne
xor
test
cmp
inc
push
mov
adc
loopne
xor
out
daa
xchg
idiv
push
sub
inc
leave
loope
jmp
jmp
dec
into
mov
jbe
test
gs
xchg
add
clc
jmp
and
js
add
jo
jno
cmps
dec
inc
repz
dec
(bad)
std
mov
leave
jbe
and
and
ret
xchg
mov
xor
scas
jmp
cwde
mov
cmp
enter
lds
mov
dec
pop
or
loope
dec
or
fisubr
pop
js
push
es
xchg
test
inc
sbb
(bad)
shl
jge
aad
cmp
or
push
retf
imul
or
jno
or
lock
add
repz
sbb
inc
test
nop
cmc
inc
movs
rcr
sub
dec
sbb
lods
outs
xor
pop
pop
lea
pop
push
loop
test
loope
pop
and
arpl
xor
add
pop
lods
inc
repnz
and
mov
cmp
pop
js
ins
cmp
dec
sbb
cmp
shl
aam
outs
and
push
ret
iret
popf
add
fcmovb
sub
mov
test
or
mov
mov
nop
lods
xor
and
dec
aas
paddusw
in
dec
cwde
and
dec
xchg
sub
xchg
jp
xchg
mov
ror
jbe
xor
cmp
inc
adc
jle
test
cmp
icebp
mov
fstp
mul
sub
or
(bad)
out
and
dec
mov
jg
mov
xchg
idiv
xor
xchg
pop
lock
test
pop
aaa
std
test
dec
lea
outs
inc
mov
sub
mov
mov
add
pop
(bad)
call
(bad)
repz
push
inc
xor
cmp
bound
or
outs
dec
adc
sub
cdq
call
xchg
push
mov
push
ficomp
push
pop
lods
popa
ffreep
les
mov
(bad)
out
add
push
jmp
test
mov
repnz
cmp
retf
icebp
fld
dec
call
aam
sub
es
fs
mov
pop
arpl
test
nop
and
into
cmp
add
cmp
dec
add
cmp
mov
add
mov
std
mov
xlat
adc
aad
repnz
mov
movs
jp
xchg
call
test
mov
pop
xchg
xchg
or
mov
jecxz
jb
pop
icebp
or
cmp
mov
pusha
ret
and
jle
inc
aas
jnp
cwde
call
imul
rcr
inc
and
and
inc
outs
xchg
pop
and
sub
(bad)
stos
jno
xor
sub
clc
add
inc
dec
jno
jne
ret
in
popf
jno
xchg
jnp
out
xor
mov
mov
jo
mov
jmp
adc
(bad)
jp
inc
aad
sub
(bad)
rcl
jle
push
sbb
dec
mov
jne
pushf
dec
pop
ins
xchg
cmps
xchg
mov
shl
cmp
cmp
pop
or
cmp
retf
jp
xchg
scas
xor
mov
adc
dec
int
xchg
cmp
push
jg
nop
jge
test
pop
stos
std
dec
cld
pop
adc
enter
imul
mov
(bad)
das
cmp
test
sbb
(bad)
or
dec
nop
(bad)
ficomp
pop
inc
and
pop
jne
push
or
mov
enter
push
out
adc
sbb
aas
pop
jbe
xor
mov
or
ja
xchg
mov
clc
out
mov
int
vpmovsdb
ret
and
loope
call
lds
cmp
adc
icebp
hlt
hlt
test
test
cmp
sub
jl
inc
pop
and
xor
pop
lahf
fs
test
(bad)
pop
or
sub
push
sar
outs
fmul
in
rol
fucomip
cdq
xor
in
pop
out
jne
fisttp
mov
mov
stos
jns
call
pop
cmc
mov
pop
add
fwait
out
ss
stc
out
xlat
out
pop
call
(bad)
adc
mov
jne
cmp
fs
mov
jg
cli
jne
push
scas
call
in
mov
mov
adc
inc
ins
pop
and
and
js
je
aam
inc
mov
scas
adc
pusha
int
xchg
and
push
and
dec
mov
jmp
push
stc
fld
call
mov
lea
cmp
out
out
fnstsw
jmp
push
out
das
scas
dec
pop
dec
out
sti
fdiv
add
daa
sbb
inc
cmp
int3
push
add
pop
pushf
shl
cwde
rol
sbb
adc
or
test
mov
clc
ins
addr16
pop
dec
mov
lea
cmp
jns
out
mov
fisttp
pop
mov
dec
xchg
mov
push
fsubp
js
(bad)
aam
sbb
push
icebp
mov
fcomp
cdq
pop
inc
loop
mov
icebp
shl
dec
cwde
sahf
inc
jmp
(bad)
dec
xor
popa
enter
dec
movs
xor
lods
inc
cmp
mov
neg
clc
std
jnp
enter
add
aaa
sub
bound
push
sahf
dec
test
push
mov
sbb
(bad)
sbb
popa
dec
test
rol
out
inc
cmp
pop
xchg
inc
add
stos
cld
sub
call
pushf
pop
xchg
inc
fnstsw
pop
cmp
out
xlat
pop
lahf
ds
jbe
test
push
and
xchg
sub
test
pop
movs
aad
inc
inc
and
sbb
inc
sub
mov
and
inc
dec
mov
(bad)
or
in
mov
ins
(bad)
out
int
pop
fsub
jp
dec
loopne
rcr
out
push
out
mov
mov
int
xchg
mov
push
mov
mov
cmc
(bad)
inc
rol
sbb
jmp
cmp
and
stos
sub
ficom
in
or
and
or
pop
adc
push
sbb
xor
xor
cli
xchg
sbb
arpl
dec
cli
shl
xchg
enter
xchg
xor
lea
outs
and
pop
cmps
enter
icebp
mov
mov
(bad)
dec
daa
sbb
mov
jne
and
sub
shr
jno
jbe
outs
mov
mov
xor
clc
js
mov
jl
ret
push
mov
and
mov
iret
in
mov
fsubr
pop
test
(bad)
repnz
test
adc
mov
cmc
test
jle
mov
mov
jmp
cmp
int3
(bad)
lods
push
pop
test
jl
pushf
outs
pop
pop
mov
(bad)
xchg
adc
fild
mov
jne
push
fstp
push
je
lods
xor
xor
xor
xchg
xchg
ss
jnp
fsub
bound
scas
push
lock
cbw
sar
inc
leave
fwait
ja
cli
stos
stos
and
jne
lods
(bad)
shr
mov
pop
xchg
xchg
mov
lods
stos
lock
fsub
dec
fistp
add
in
mov
dec
jmp
data16
scas
adc
jbe
inc
sub
sub
shr
adc
or
add
push
enter
jae
or
mov
push
xchg
(bad)
mov
fcomi
mov
shl
fisttp
lock
int
inc
loop
arpl
hlt
cmc
or
sbb
adc
inc
add
inc
loopne
mov
out
test
push
cmp
out
imul
jo
ins
mov
dec
aas
imul
pop
aam
shr
das
test
inc
adc
loopne
ins
add
mov
cmps
dec
cmp
cdq
sub
xor
jmp
daa
retf
mov
pop
inc
jbe
dec
fcom
adc
popf
inc
adc
icebp
mov
mov
leave
push
pushf
pop
push
cwde
xchg
mov
(bad)
scas
mul
icebp
test
rcr
and
fxch
jnp
inc
add
mov
imul
(bad)
repnz
xor
xchg
(bad)
gs
out
adc
add
jp
nop
jno
xchg
dec
jno
fsub
ds
and
out
mov
lds
js
jge
mov
mov
add
fimul
cmp
and
cli
es
lods
fdiv
pop
(bad)
cmp
es
adc
imul
test
mov
in
push
mov
push
sti
add
and
rol
ds
test
mov
and
xor
stos
mov
(bad)
mov
shl
ins
lea
into
loope
mov
in
add
xchg
pop
mov
mov
sbb
pushf
adc
mov
out
std
jmp
js
popf
fidiv
adc
inc
fcmove
in
ja
cmp
dec
test
pop
pop
jp
mov
icebp
pop
iret
(bad)
sub
pop
retf
push
pop
ja
add
bound
inc
fwait
(bad)
mov
jmp
mov
mov
jnp
jns
and
pop
rol
fs
cmp
push
push
(bad)
icebp
xchg
jbe
inc
xchg
cli
sahf
loop
mov
out
xor
mov
or
int
push
xor
retf
xor
inc
mov
aaa
cs
mov
scas
lea
sub
push
ret
add
push
call
sbb
push
pop
fs
nop
loope
add
inc
in
mov
sti
push
jmp
stc
dec
popf
rcl
pop
stc
shl
(bad)
int
mov
movs
adc
mov
push
xchg
mov
sub
rcr
inc
and
sub
mov
lds
arpl
inc
shl
push
adc
inc
sub
jo
mov
adc
pop
push
movs
sub
sti
cs
dec
pushf
test
push
test
mov
mov
test
push
sub
lock
(bad)
fld
and
pop
inc
xchg
cdq
lods
sbb
(bad)
(bad)
mov
jbe
sub
inc
aaa
sbb
fdivr
push
and
and
jnp
inc
daa
push
nop
(bad)
mov
dec
clc
idiv
loopne
pop
pop
inc
std
inc
sub
adc
adc
add
or
xlat
(bad)
mov
(bad)
push
inc
jnp
sub
test
cmp
mov
jne
stos
add
fiadd
mov
cmp
xor
fsubrp
and
mov
push
pop
or
repnz
pop
fdivr
add
push
mov
js
pop
mov
sbb
push
loope
push
lahf
int
sbb
xor
and
xchg
xor
pop
or
inc
mov
push
pop
int3
mov
cmp
add
push
popf
cdq
std
xor
test
aad
idiv
jle
in
repnz
mov
cmp
stos
jp
dec
retf
dec
pop
xor
sar
(bad)
lds
inc
mov
ins
and
mov
out
cs
dec
adc
mov
cmp
rcl
(bad)
jge
cdq
dec
add
xor
shl
clc
out
in
mov
inc
pushf
outs
add
and
cmps
test
icebp
jmp
push
int
(bad)
aaa
fistp
mov
inc
dec
xchg
test
mov
xchg
mov
push
sbb
fucomip
cmc
gs
jns
jae
daa
and
xchg
retf
and
std
jnp
aad
sbb
push
jnp
ret
cmp
add
xchg
or
adc
ins
aas
xchg
or
mov
push
ret
xor
icebp
pop
stc
sbb
sar
popf
mov
push
(bad)
mov
cmc
jnp
or
xchg
adc
push
jmp
out
or
xlat
jge
ds
or
shl
jnp
inc
sbb
cdq
mov
and
popa
out
jle
int3
jo
gs
cli
inc
xor
pusha
lea
mov
enter
jne
pushf
dec
add
adc
lahf
out
adc
mov
pop
dec
inc
sar
mov
pusha
xchg
in
loope
xchg
mov
xchg
clc
dec
mov
mov
scas
outs
inc
mov
test
mov
daa
pop
cmp
xor
jnp
sub
cmps
imul
cmps
int
xor
out
popa
xchg
hlt
or
xor
xor
pop
mov
sbb
bound
jno
cmps
jmp
cmp
shl
add
push
sub
dec
loopne
(bad)
push
cdq
les
sub
in
cmc
mul
pop
movs
les
nop
fsubp
fs
mov
nop
cs
call
add
pop
add
popa
mov
mov
xor
sbb
mov
pop
and
aas
add
das
iret
adc
sbb
fisubr
mov
push
push
and
out
jmp
sbb
xchg
pop
mov
mov
or
fadd
xchg
pushf
stos
or
mov
(bad)
hlt
shl
cmp
aad
cmc
je
push
cs
out
jns
add
pop
cwde
sbb
add
ret
inc
sbb
arpl
jmp
dec
data16
sbb
or
pop
fadd
or
mov
test
fsub
loop
inc
and
sahf
cmp
out
xor
inc
sub
test
mov
hlt
and
repnz
repnz
and
pushf
ins
repnz
repnz
sub
in
jnp
jl
cmp
lods
dec
cs
cdq
cmps
mov
ins
(bad)
leave
push
sahf
fisub
pop
sub
stos
and
xor
inc
xchg
xor
sub
or
repnz
popf
hlt
shl
fidiv
mov
xchg
inc
(bad)
mov
mov
shr
mov
leave
push
fsubr
mov
mov
sbb
inc
adc
scas
push
ins
in
push
xor
shr
es
jne
cmp
sti
pusha
ds
mov
int3
inc
popf
idiv
mov
adc
ret
js
pushfw
sbb
imul
mov
fdivrp
test
xchg
fnstcw
dec
add
ret
cld
push
in
mov
dec
stc
out
ins
(bad)
push
mov
lods
hlt
cmp
jbe
sti
test
push
es
cmps
test
test
aaa
repnz
rol
pop
test
inc
setns
iret
add
loope
sbb
mov
and
fs
jnp
xchg
pop
add
or
repnz
leave
fnstenv
inc
popa
inc
lahf
sub
(bad)
shl
add
stos
lahf
cmp
jp
mov
dec
push
popf
stos
cmps
cmp
cmp
ja
dec
(bad)
or
or
retf
ret
or
adc
pop
mov
sub
xchg
or
jp
cld
imul
mov
lods
das
call
adc
mov
dec
add
aad
sbb
call
popa
xor
ret
jnp
in
mov
sbb
dec
xchg
fucomi
or
dec
movsx
mov
jecxz
inc
mov
dec
add
in
(bad)
pusha
cld
inc
add
call
popa
mov
lods
sahf
ss
pop
dec
ins
jnp
cli
inc
xor
sub
sahf
pop
mov
stos
adc
fdivr
push
sbb
popa
xlat
clc
xchg
xor
enter
jae
mov
clc
(bad)
xchg
mov
jmp
jne
(bad)
jmp
ja
jg
xchg
movs
ret
push
mov
std
aas
adc
cmc
jg
nop
xchg
ins
aam
out
adc
sub
retf
shr
and
add
jne
cmp
lahf
mov
mov
fst
outs
push
xor
push
push
call
dec
ins
mov
jge
test
jne
xor
loop
mov
fiadd
addr16
jp
in
test
loopne
inc
or
retf
in
pop
cli
sbb
sbb
jmp
fsub
in
mov
jb
sbb
and
sub
or
mov
push
je
mov
cli
sbb
fsub
pusha
sbb
and
mov
xchg
jle
addr16
jl
mov
inc
mov
(bad)
jne
xor
test
push
xlat
pop
jno
adc
ret
int
addr16
repz
or
imul
ret
inc
(bad)
in
test
pop
ins
in
mov
adc
pop
retf
pop
inc
sub
mov
push
mov
xor
icebp
and
mov
inc
and
popa
mov
sahf
add
pop
dec
sahf
push
popf
xchg
mov
xchg
mul
in
jl
movs
pop
repz
mov
sub
mov
fwait
push
and
rol
inc
xchg
push
(bad)
out
shl
sbb
shr
and
mov
cdq
scas
sub
(bad)
dec
ret
hlt
sbb
add
and
inc
or
jmp
pushf
jbe
jge
mov
or
into
cmps
xor
movs
and
add
sub
xchg
fiadd
mov
jo
cwde
sbb
shr
lock
mov
jmp
add
adc
xchg
shl
pop
lock
sbb
dec
call
push
or
ins
scas
adc
mov
test
mov
test
pop
xchg
ret
and
sbb
pop
out
sbb
dec
inc
retf
mov
clc
and
xor
adc
inc
arpl
pop
(bad)
fadd
inc
mov
mov
xchg
mov
xor
sti
mov
jmp
cli
dec
mov
popf
add
inc
outs
add
cmp
xchg
in
div
sbb
or
cs
sbb
cli
out
jns
hlt
arpl
inc
loop
sub
or
jg
jns
fdiv
cmp
mov
and
iret
cmps
sbb
push
jo
sub
mov
dec
loop
loop
std
stos
pusha
sub
fimul
stc
mov
gs
int
call
jns
ss
pop
daa
xlat
fldcw
add
mov
ja
dec
stos
fnstcw
dec
rcl
sbb
sbb
sbb
xor
sub
and
pop
push
fistp
and
or
shl
dec
inc
push
lds
cmp
mov
mov
mov
mov
xor
loop
mov
sahf
pop
and
inc
je
add
ficom
sub
aad
and
add
ss
and
xchg
fnsave
cdq
xchg
arpl
cmp
and
in
or
adc
mov
aas
inc
and
out
xchg
sbb
jnp
scas
dec
xchg
popf
inc
popf
fwait
jg
retf
jbe
popa
cdq
mov
je
movs
nop
adc
jmp
mov
stos
adc
das
add
push
ret
or
sbb
sub
cmp
cmps
xchg
mov
dec
shl
xsha1
cmps
int
dec
push
inc
mov
adc
or
mov
lods
dec
pop
mov
xor
jmp
mov
pop
lahf
inc
repz
call
loopne
dec
sti
retf
mov
mov
dec
sbb
adc
test
jmp
push
aam
(bad)
sbb
imul
xor
cwde
xor
mov
fcomp
cli
and
jae
(bad)
sub
bound
arpl
jns
mov
inc
nop
mov
ins
fst
movs
add
inc
daa
lds
xchg
(bad)
jge
jmp
jge
in
std
jne
ja
mov
jne
xchg
repnz
clc
mov
(bad)
dec
dec
out
aam
jmp
stc
retf
pop
jg
cmp
xor
pop
pushf
stos
mov
sbb
ret
call
mov
jae
wrmsr
scas
cmp
fwait
dec
inc
mov
pop
xchg
xchg
(bad)
adc
pop
cmps
ins
enter
mov
call
les
adc
mov
iret
(bad)
cmps
icebp
test
test
dec
xchg
ja
sub
(bad)
stc
pop
les
push
sbb
cs
arpl
dec
(bad)
xchg
int
aaa
or
jle
hlt
jle
out
jnp
push
add
ds
add
(bad)
and
push
xchg
xor
mov
jmp
mov
shl
jg
dec
in
sti
jle
icebp
test
inc
mov
int
test
add
fwait
mul
loopne
scas
ret
sbb
mov
sbb
repnz
shr
arpl
stos
push
sub
push
fwait
clc
sub
call
adc
push
outs
lahf
pop
pop
cmps
push
gs
mov
cmp
adc
popf
lock
sbb
inc
test
jb
into
mov
add
shl
xchg
xor
cwde
(bad)
mov
cmc
fst
scas
adc
(bad)
out
fs
imul
lods
aaa
jl
loopne
pop
pop
mov
add
dec
jecxz
add
push
xor
ja
(bad)
and
xchg
lods
push
push
call
ret
cmp
pop
ins
lahf
inc
shr
cdq
(bad)
fcom
xor
jle
fsave
loop
idiv
inc
(bad)
repnz
cli
mov
mov
int
sub
fmul
out
and
push
popa
cmp
(bad)
jg
push
pop
push
xchg
fldcw
jmp
sbb
adc
jge
or
sbb
imul
mov
data16
jo
pop
push
jno
pop
fstp
mov
icebp
test
hlt
in
adc
inc
test
imul
rcr
call
mov
sbb
fdiv
jp
inc
pop
xor
jg
outs
cs
test
stos
imul
iret
add
or
sub
je
inc
pop
mov
add
adc
test
fild
loopne
inc
sub
popa
aad
clc
cmp
mov
jmp
mov
mov
mov
jp
nop
les
xchg
icebp
xchg
mov
push
in
jne
or
ret
hlt
in
fcomp
sub
bound
pop
sbb
stos
(bad)
xchg
retf
scas
jnp
(bad)
mov
pop
mov
xor
jo
xchg
xor
lods
xor
sbb
cwde
lods
sti
xor
mov
outs
push
push
ror
mov
pop
mov
stos
push
or
movs
mov
out
xchg
sahf
mov
push
cdq
gs
mov
lods
cmp
cmp
inc
mov
scas
sub
or
(bad)
fstp
out
bound
xchg
sbb
xor
mov
shl
sar
jb
push
push
mov
js
ds
or
pop
vpperm
mov
push
inc
retf
and
pop
jae
fnstcw
xchg
enter
adc
jge
stc
stc
mov
adc
mov
jmp
hlt
stos
ret
sbb
shl
add
(bad)
clc
test
arpl
inc
sub
or
call
push
dec
data16
fild
jg
add
xlat
pop
mov
xchg
xor
fdiv
xlat
mov
xchg
sti
scas
in
xchg
enter
clc
push
xlat
lock
adc
push
xchg
cwde
test
mov
nop
xor
xlat
adc
sahf
gs
enter
shr
push
out
push
push
outs
mov
dec
cmp
pushf
sbb
sbb
frstor
fs
adc
imul
or
mov
or
mov
add
xor
dec
daa
mov
jae
fnsave
or
push
call
mov
mov
idiv
clc
cld
jmp
pop
cld
adc
iret
push
fnsave
push
aaa
sub
pop
mov
stos
test
or
mov
pop
je
add
sub
adc
jb
popa
inc
mov
inc
test
mov
out
mov
mov
pop
jb
dec
sub
dec
out
inc
or
mov
xchg
call
cmps
test
adc
ret
shl
pop
pushf
call
xor
fsubr
and
cmp
pop
mov
jo
add
push
int
int3
mov
mov
pop
pop
cli
and
add
sahf
pop
dec
mov
mov
test
add
repz
dec
jge
lea
mov
xchg
ret
rcr
test
fwait
lods
mov
mov
sbb
pop
cld
loopne
std
(bad)
jle
icebp
fbstp
sub
cmp
sbb
in
scas
push
repz
jle
dec
movs
xor
or
mov
and
ins
fmulp
and
daa
cli
add
push
mov
aad
dec
xchg
push
or
mov
out
out
aaa
leave
icebp
push
inc
pop
stos
das
aam
repnz
fwait
in
inc
rol
icebp
add
test
push
cwde
test
cdq
idiv
jo
sahf
lods
data16
outs
stos
or
ss
in
dec
out
aas
add
arpl
jo
inc
pushf
test
or
jle
xchg
push
mov
inc
dec
pop
pop
retf
push
add
icebp
sub
cs
inc
je
jns
into
xor
cdq
movs
adc
or
inc
mov
add
mov
imul
cli
mov
mov
add
pusha
pop
mov
icebp
push
es
shl
cmp
cmp
dec
fstp
add
sbb
mov
xchg
test
ret
mov
cmp
cmp
pop
mov
inc
shr
add
dec
inc
clc
sar
pusha
push
dec
popf
push
fcmovnb
hlt
pop
loopne
xchg
adc
(bad)
lods
add
in
das
mov
stos
sbb
retf
scas
out
sub
lods
inc
fcomp
cmp
enter
ror
jo
push
movs
sbb
and
fnsave
push
sti
std
pop
rcr
ja
cmp
dec
outs
jg
or
push
inc
(bad)
push
add
cmovne
jae
scas
mov
out
dec
js
jg
mov
aas
mov
pop
cmp
in
xor
gs
test
(bad)
in
movs
mov
inc
leave
cli
sub
dec
imul
fisttp
pop
push
imul
pop
jp
mov
(bad)
outs
(bad)
(bad)
jns
retf
pusha
pop
jno
mov
adc
call
sub
mov
int3
(bad)
xchg
xchg
loopne
in
jg
lds
movs
(bad)
dec
mov
cdq
outs
xchg
test
enter
imul
pop
push
sti
mov
pusha
xor
loope
out
in
push
mov
repz
inc
and
neg
mov
pop
inc
xchg
pop
and
dec
pop
jle
movs
into
mov
push
aam
ror
adc
lds
jmp
dec
fmul
fdiv
cwde
aam
add
adc
stos
mov
call
mov
rol
(bad)
pushf
jbe
(bad)
xchg
lods
mov
cmp
addr16
xor
daa
inc
je
mov
imul
es
fisttp
jle
jle
xor
test
stos
sbb
out
cld
shl
sahf
int3
push
inc
inc
sbb
inc
add
sbb
mov
jo
mov
cmp
out
and
dec
pop
jl
and
sbb
xchg
mov
mov
xchg
cmps
movs
mov
pusha
loopne
xchg
ds
out
shl
test
imul
cli
(bad)
pusha
mov
imul
sub
leave
sub
lock
xor
inc
mov
add
dec
inc
cmps
jbe
cmps
add
sub
in
loop
iret
inc
jle
movs
dec
retf
jge
std
adc
jg
xchg
movs
xchg
jno
dec
movs
sbb
out
cmps
pop
xor
fild
nop
mov
inc
cmp
shl
xlat
push
sahf
inc
jb
inc
test
jp
jae
push
cwde
mov
into
dec
push
stc
inc
cdq
jmp
rcr
inc
gs
add
das
lock
cmps
jbe
cmps
adc
xchg
sti
push
jmp
dec
emms
call
stos
call
mov
xchg
(bad)
mov
push
movs
sbb
leave
mov
and
fidivr
mov
sti
adc
pop
fld
sbb
adc
xor
dec
xchg
(bad)
sahf
mov
cwde
mov
pop
add
jl
jecxz
pushf
and
dec
push
fisttp
add
sub
retf
adc
inc
out
cwde
adc
outs
pop
test
lds
call
push
aad
mov
out
mov
fsqrt
adc
std
cmp
loope
scas
icebp
cmc
jae
jmp
inc
cli
jle
or
inc
mov
retf
add
jle
mov
dec
add
mov
add
add
xor
xor
adc
mov
inc
mov
pop
lods
or
out
sbb
pop
jno
adc
cmc
push
test
push
or
cld
mov
mov
je
popf
xchg
mov
das
out
icebp
idiv
(bad)
pop
dec
or
push
das
in
shl
inc
fld
jp
popf
sbb
gs
test
mov
jmp
shl
add
jmp
imul
mov
scas
or
mov
out
loopne
mov
popa
inc
mov
push
iret
stos
cmp
ror
test
sbb
nop
pusha
sbb
ret
inc
fs
je
dec
aam
sub
jg
add
sub
mov
inc
and
mov
enter
add
into
push
dec
pop
xor
adc
dec
push
sub
fs
xchg
mov
xchg
inc
daa
data16
mov
(bad)
mov
inc
jae
fidivr
cdq
aad
xchg
fwait
outs
sar
mov
mov
test
jmp
sahf
xor
add
(bad)
ror
es
and
(bad)
jno
and
mov
enter
and
dec
cmps
cmp
cmp
aaa
mov
aad
pop
mov
mov
inc
out
adc
test
xchg
lock
pop
dec
gs
xor
vhaddpd
cmc
mov
mov
xchg
ja
push
call
xchg
sbb
xchg
cmps
sbb
loop
pop
mov
mov
aaa
dec
loop
test
cmp
inc
inc
xor
ret
les
retf
repz
je
and
and
inc
push
sbb
scas
pop
or
jp
xchg
cmp
mov
jns
test
pop
push
pop
sbb
mov
imul
xor
rol
xchg
test
jge
cmps
sbb
mov
lods
call
mov
in
pop
ror
es
test
nop
and
das
pop
inc
mov
mov
push
or
mov
xor
adc
mov
jb
mov
pushf
adc
mov
dec
call
test
mov
loop
fnstsw
mov
mov
dec
jle
mov
clc
test
mov
enter
xlat
fxch
jae
sub
sbb
ins
pop
pop
xchg
mov
out
push
out
or
call
xor
outs
dec
cdq
push
pop
fstp
rep
mov
(bad)
mov
mov
dec
xchg
push
mov
in
out
mov
ss
nop
adc
mov
adc
lahf
jmp
add
push
test
lods
sub
push
(bad)
ffreep
pop
call
mov
imul
popf
cmp
xchg
loopne
push
dec
inc
iret
aas
jae
add
popa
pop
mov
pop
mov
cmp
mov
jge
sbb
dec
shr
mov
mov
adc
les
pushf
mov
mov
xchg
and
call
jae
xchg
sbb
(bad)
aaa
or
mov
fcomp
and
shr
mov
push
add
(bad)
movs
mov
xor
aas
cdq
loopne
jo
sbb
cmp
sbb
or
sbb
push
cwde
repz
inc
inc
movs
arpl
mov
mov
iret
jecxz
cs
hlt
mov
inc
inc
xchg
mov
adc
test
jmp
fld
sbb
adc
push
popa
mov
scas
iret
or
(bad)
je
fidivr
sti
push
push
ja
std
push
gs
ja
mov
dec
fbstp
lahf
push
add
inc
adc
pop
lods
loop
ret
inc
bound
popa
cmp
aam
inc
pop
out
fild
mov
mov
mov
dec
out
mov
and
mov
push
mov
jbe
and
and
fnstsw
inc
pusha
add
push
add
stos
fnstsw
pop
popf
mov
mov
inc
or
inc
sub
je
xchg
or
jo
or
test
mov
adc
js
int
xor
js
dec
loope
retf
inc
xchg
jmp
adc
xchg
sti
xlat
xchg
rol
dec
fidiv
xchg
xchg
mov
mov
pop
out
pop
dec
fldz
std
jp
add
pushf
sub
mov
push
or
scas
dec
repz
sub
icebp
dec
outs
pop
adc
add
add
or
jle
xchg
push
mov
jle
mov
sahf
ficomp
jmp
inc
popa
cmp
mov
outs
jmp
mov
cmc
mov
sbb
mov
mov
add
sar
clc
ins
adc
pop
fisttp
sub
leave
inc
adc
pop
mov
daa
cmps
push
pop
push
and
not
mov
inc
imul
sub
in
push
xchg
jae
push
push
xchg
xchg
dec
jns
cmp
xor
js
(bad)
in
scas
aad
xlat
push
ja
pop
in
out
lahf
jmp
jae
xchg
pop
or
dec
(bad)
cwde
fsubp
pop
fldenv
mov
mov
xchg
mov
es
imul
cs
int
jge
inc
add
pop
xchg
adc
imul
push
xor
sti
push
enter
inc
into
add
inc
je
mov
pushf
sub
outs
dec
mov
inc
mov
dec
call
fsubr
dec
push
bound
jnp
cld
loope
fst
xchg
jp
sbb
jl
mov
cli
ret
jecxz
lods
movs
popa
nop
pop
fcomp
cmp
imul
retf
push
cmp
sub
push
sbb
mov
fild
mov
enter
inc
mov
xor
or
ja
pusha
push
mov
ds
xchg
cdq
mov
stc
cmps
mov
loopne
push
dec
scas
and
(bad)
cld
push
mov
movs
push
sbb
call
movs
mov
pop
mov
xlat
ret
icebp
addr16
int
aad
pop
adc
int3
cmp
pop
xchg
jnp
inc
aaa
jbe
nop
mov
sbb
int
mov
push
ins
dec
or
pop
xor
and
jge
test
mov
pop
xchg
mov
ret
and
retf
je
jo
arpl
test
jl
leave
xchg
ins
xchg
cmps
jg
(bad)
mov
loope
call
mov
jb
test
and
repz
mov
repz
push
cli
rol
ja
pop
add
jl
stos
dec
pop
jge
xchg
mov
push
push
lods
pop
call
pop
xor
sbb
push
pop
ds
js
mov
push
repz
cmps
and
cmp
int3
call
push
popa
nop
popa
aam
clc
jae
int
dec
jmp
sub
in
adc
dec
ja
mov
cmc
out
jecxz
sbb
popf
xor
outs
repz
es
xchg
mov
or
cmps
ss
xchg
xor
lds
dec
ret
lds
mov
addr16
push
jno
pop
cmp
and
fwait
sahf
jne
es
std
lahf
xor
inc
push
mov
pop
mov
test
leave
cmps
xchg
sub
cli
cmp
sbb
adc
mul
push
gs
call
dec
(bad)
imul
cmp
mov
imul
push
jbe
mov
in
lahf
clc
cmp
aaa
fidivr
cs
fwait
pop
lahf
cmp
dec
adc
or
mov
sahf
push
lods
pushf
xor
jb
mov
jb
loop
jb
popf
js
iret
cli
icebp
jae
inc
cmp
fnstenv
xchg
in
mov
add
call
pop
pop
sub
pop
dec
cmp
jb
xor
push
sub
scas
push
lods
enter
ja
xor
shl
pop
adc
pop
or
popf
sub
push
lods
push
sbb
and
jno
jmp
sbb
fstp
sbb
daa
stos
dec
and
ja
xchg
add
fiadd
stc
test
sub
xchg
hlt
xor
retf
int
arpl
test
ss
push
sub
imul
dec
jno
cmp
or
ret
xchg
mov
and
js
jmp
test
addr16
ja
stc
add
adc
add
shl
xlat
aas
add
xor
(bad)
mov
xchg
xchg
sbb
add
pushf
push
cld
(bad)
call
jb
mov
xchg
jecxz
cdq
lea
ins
nop
shl
cmc
(bad)
fs
fcom
sub
adc
dec
xlat
fcmovbe
imul
add
inc
xchg
dec
pushf
stos
mov
xor
es
(bad)
jnp
push
inc
in
sbb
xor
jge
mov
jne
test
(bad)
adc
enter
pop
popa
mov
dec
mov
sahf
inc
push
repz
cmps
xor
dec
hlt
mov
ja
xchg
adc
sbb
in
or
push
stc
retf
mov
fld
or
push
cwde
sbb
mov
ret
xor
iret
pop
stc
lea
mov
pop
outs
pop
sbb
pop
xor
aas
int
(bad)
push
push
movs
imul
mov
outs
and
out
fwait
adc
outs
js
pusha
ret
mov
add
cmp
mov
data16
mov
cs
cwde
(bad)
out
rcr
movs
push
and
out
aad
sar
imul
jne
pop
stos
push
pop
add
push
jmp
push
bound
std
add
add
jbe
inc
js
pop
inc
mov
cli
adc
int
xor
push
movs
ins
fisub
dec
int3
mov
adc
mov
scas
lods
sahf
icebp
sub
sahf
cmp
(bad)
fcomp
xchg
popf
inc
hlt
jl
xor
adc
sbb
pop
rcl
jl
bound
xchg
or
cmps
pusha
clc
lock
xlat
inc
adc
add
push
xor
fs
push
mov
fdivr
mov
in
stc
jno
adc
scas
xchg
xor
mov
dec
jo
sub
pushf
jecxz
sbb
push
popf
stos
jb
xlat
call
mov
mov
pandn
mov
mov
aaa
icebp
pushf
repz
popa
dec
fwait
mov
retf
imul
jmp
jne
jns
sbb
or
mov
jmp
lahf
fcomp
cwde
jmp
sbb
add
int
(bad)
imul
pop
stos
mov
sbb
xchg
xor
shl
push
push
fisubr
mov
in
xchg
xchg
pop
add
mov
xchg
lods
mov
pop
movs
test
repz
out
push
xchg
xchg
xor
sbb
(bad)
pop
jl
jnp
adc
cmp
mov
clc
js
rol
lahf
int3
dec
inc
sbb
not
ins
push
and
retf
fimul
mov
jo
cwde
test
pop
sub
in
out
xchg
rol
inc
jp
fst
lock
in
mov
sub
sti
stos
and
jnp
(bad)
fcmovbe
xor
push
pop
mov
cld
test
fiadd
stos
mov
cmp
adc
aam
jb
cmp
dec
movs
jno
push
popf
push
pop
push
out
pushf
(bad)
ret
lock
pushf
aad
dec
add
add
xchg
add
(bad)
pop
sbb
and
xchg
mov
jecxz
mov
in
jb
scas
outs
xchg
inc
shl
sub
push
neg
out
xchg
sbb
scas
adc
(bad)
fdivp
jmp
fst
mov
sub
leave
cld
out
dec
(bad)
cmp
cmp
sbb
dec
mov
mov
enter
jno
leave
sbb
pop
ss
xor
push
aaa
push
test
pop
ins
(bad)
push
sahf
cmp
sbb
inc
stc
retf
mov
ret
fs
imul
xchg
cmc
test
sahf
add
fbld
mov
popa
pop
mov
enter
xlat
outs
pop
xchg
lea
imul
out
ret
jbe
or
cmp
pop
mov
scas
xchg
sub
ficomp
je
loop
push
inc
push
sbb
jns
jo
lahf
sub
push
scas
xchg
pop
fwait
ret
pop
bound
bound
mov
or
cmp
pop
mov
cmps
and
cld
loopne
inc
(bad)
jmp
fxch
jnp
adc
sbb
pop
test
or
mov
xchg
adc
iret
push
out
cmps
jmp
or
mov
mov
dec
inc
cmp
cs
scas
in
xor
mov
cli
jle
push
mov
xor
in
dec
cmc
stc
out
and
pop
mov
lods
jg
loope
add
lock
mov
xor
push
jmp
iret
pop
in
push
jp
pop
(bad)
mov
popa
lea
lock
xchg
icebp
cmp
inc
cmps
add
add
aaa
xchg
sbb
stos
jnp
lods
xor
xchg
mov
int
mov
stc
outs
add
cli
xchg
pusha
xchg
repnz
adc
mov
xchg
push
icebp
jns
mov
pop
pop
add
movs
push
pushaw
jmp
add
fcmovnbe
pop
popf
push
pop
sub
xor
movs
push
or
mov
jg
shr
inc
mov
add
jl
cmps
addr16
xor
shl
test
xchg
nop
jmp
jg
pop
rcl
mov
xor
enter
pushf
stos
xor
cld
outs
cmp
pop
sbb
dec
inc
sbb
in
add
adc
sbb
cmp
ins
push
or
int3
ins
or
cli
ds
adc
mov
pop
push
fcom
mov
stos
cmp
push
cmp
fistp
neg
mov
mov
xor
stc
mov
xlat
sbb
(bad)
pusha
add
xor
shl
mov
test
out
scas
pop
call
pop
js
inc
sbb
cmps
(bad)
stos
ds
push
fwait
jmp
dec
pop
add
pop
and
jl
loop
xchg
add
inc
imul
scas
(bad)
(bad)
xor
push
jp
mov
inc
popf
lock
jg
cmp
xor
or
repz
lock
bound
in
loope
ret
inc
sahf
popf
xor
jp
dec
push
xor
pushf
and
add
inc
stos
xor
popa
mov
ss
pop
ret
popf
xchg
inc
or
cmc
dec
or
adc
pop
mov
jmp
dec
pop
movs
lods
cmps
sub
and
rcl
loop
fs
jp
pop
pop
mov
mov
push
mov
stos
add
dec
mov
xor
mov
ror
imul
lods
and
test
cmp
pop
stos
push
sbb
mov
xor
jle
jmp
adc
out
das
jo
addr16
push
mov
lods
pop
push
mov
outs
mov
loop
mov
int3
stc
pop
cli
jbe
inc
scas
push
retf
push
test
xchg
jne
mov
out
ins
retf
mov
jno
fstp
repnz
ret
mov
test
js
sbb
pop
xchg
add
inc
mov
mov
mov
sub
adc
inc
cli
and
mov
jnp
fild
push
(bad)
sub
lods
mov
xchg
enter
in
popa
cli
inc
pusha
js
push
fild
call
ret
lods
es
sbb
pushf
pop
push
pushf
movs
mov
ret
inc
xchg
mov
pop
leave
pop
push
add
in
and
cmp
add
mov
test
(bad)
jmp
mov
aas
fdiv
mov
arpl
pop
inc
xchg
or
mov
es
fld
data16
popa
add
mov
mov
push
jmp
div
popa
add
mov
mov
add
mov
std
and
dec
inc
add
scas
push
pop
inc
mov
and
mov
leave
pop
out
and
mov
add
out
jae
dec
dec
lea
arpl
dec
push
aam
sti
push
mov
or
add
mov
fcomp
into
xchg
pop
loope
push
sbb
xrelease
addr16
stos
mov
je
mov
ror
stos
xor
cmp
(bad)
std
jo
inc
dec
sub
inc
add
in
mov
mov
pushf
xchg
es
jns
jae
loope
cmp
sub
pop
push
xchg
push
inc
lods
and
xchg
cmp
test
add
dec
cmovb
inc
lock
js
in
test
dec
cmp
out
and
push
xchg
clc
mov
or
ret
push
in
std
mov
fidivr
in
cwde
ja
push
fist
jmp
inc
je
jo
outs
jnp
pushf
dec
and
mov
lock
cli
jle
dec
aaa
mov
sbb
push
mov
std
add
inc
(bad)
fst
xchg
scas
push
mov
mov
push
in
(bad)
lahf
jne
dec
xchg
lahf
popf
retf
pop
push
mov
xor
xchg
(bad)
sub
pop
clc
enter
inc
push
add
inc
and
mov
mov
popf
mov
clc
add
inc
push
jb
add
lods
inc
jb
dec
sbb
test
dec
xor
sti
xchg
adc
inc
je
test
mov
jmp
in
push
sahf
mov
lods
jbe
add
test
movs
imul
and
cmp
aaa
push
scas
ins
push
push
mov
(bad)
addr16
or
mov
ds
or
push
popf
dec
sub
xor
cmp
repz
mov
pop
icebp
jns
push
cwde
push
pushf
loope
mov
adc
popa
add
ror
mov
push
pop
xchg
shl
out
mov
sub
inc
mov
mul
inc
bound
mov
aaa
or
sub
loope
xor
retf
pushw
fisttp
or
call
inc
inc
sub
and
mov
arpl
aam
aam
add
scas
cs
mov
push
movs
call
push
pop
(bad)
fnsave
sahf
xchg
dec
mov
inc
loope
xchg
cmp
jmp
je
popf
aaa
cli
push
adc
dec
xlat
retf
clc
inc
rcl
jns
addr16
xor
xchg
mov
or
inc
lahf
jecxz
leave
int
ja
xor
sbb
or
add
inc
push
fimul
adc
into
mov
pushf
(bad)
call
shr
jae
pop
clc
mov
xchg
dec
iret
mov
xchg
pop
xchg
push
mul
fs
mov
xchg
mov
mov
dec
and
jmp
mov
cmp
outs
pop
inc
std
push
sbb
xchg
test
jmp
pop
pusha
inc
pop
out
sbb
jb
scas
sbb
mov
push
mov
std
sub
fsub
fild
jl
jge
mov
dec
jecxz
mov
es
xor
nop
cmp
cmp
mov
jmp
jne
dec
pop
xor
retf
jg
fistp
pop
jle
jno
jp
mov
fcom
fcmovu
cmp
xor
pop
or
or
js
mov
inc
mov
push
xchg
aad
ds
xor
adc
je
shl
(bad)
popf
in
test
sub
arpl
fimul
lods
mov
xchg
mov
cld
dec
pop
push
rcl
aad
enter
outs
mov
pop
ss
(bad)
lahf
leave
mov
or
pop
mov
mov
cmp
imul
inc
scas
test
jle
cmps
mov
xchg
js
and
xchg
test
in
addr16
pop
sub
retf
mov
stc
xchg
push
xchg
mov
xor
jmp
fs
push
and
mov
dec
(bad)
aaa
jo
lods
or
cmp
fstp
addr16
jmp
or
push
or
es
or
jp
fisttp
mov
push
test
or
scas
loope
mov
pusha
shl
jbe
js
mov
pop
sub
je
test
(bad)
or
add
mov
pop
add
fadd
lods
(bad)
and
out
fidiv
push
dec
push
int3
call
popa
or
jnp
sub
inc
out
sahf
les
std
mov
mov
sbb
sbb
mov
jb
sub
sbb
adc
pop
jnp
aam
xor
cmc
ja
jle
push
mov
imul
cld
mov
xchg
test
push
fwait
jbe
loopne
xchg
sbb
leave
push
push
mov
push
and
lock
add
sbb
add
mov
aad
in
mul
mov
and
das
cmp
inc
mov
mov
xchg
mov
xor
adc
inc
test
fisubr
jge
js
and
popf
les
pop
cmc
stos
mov
xchg
pushf
int3
or
pusha
ja
mov
cli
clc
scas
fimul
mov
or
xor
xor
mov
dec
dec
div
push
bound
add
jp
lea
and
dec
add
fiadd
push
aaa
add
aam
dec
fdiv
cmps
xor
adc
adc
iret
int
inc
mov
jns
pop
jo
fist
movs
xchg
mov
sbb
lock
mov
gs
mov
loopne
adc
and
repz
push
dec
loop
jmp
cmp
sbb
jp
pop
or
xchg
cmps
mov
inc
lds
push
pop
cmp
or
push
sub
lods
inc
add
jne
popf
xor
into
mov
xchg
lock
pop
rcl
jmp
(bad)
sahf
pop
mov
in
adc
ror
mov
pop
jo
movs
and
ret
retf
dec
push
jecxz
jo
addr16
aaa
aas
cmp
retf
clc
pop
je
pusha
xchg
inc
pop
xchg
nop
or
xchg
(bad)
sbb
iret
sbb
addr16
push
adc
and
and
pushf
or
stos
adc
xchg
idiv
inc
push
pop
imul
mov
ror
sti
jnp
arpl
inc
out
mov
out
jmp
xor
imul
push
jp
fwait
or
ret
sar
pusha
loop
jbe
inc
jmp
push
stc
add
inc
fild
push
jno
sbb
xchg
ja
retf
or
(bad)
js
inc
and
or
pop
mov
sbb
pop
inc
mov
ins
sbb
outs
fmulp
loopne
int3
jecxz
lds
push
fldcw
xchg
cmc
pop
mov
call
cmp
sbb
mov
cmps
mov
std
lods
clc
sti
dec
push
mov
call
call
pop
outs
cwde
or
add
xchg
stos
xchg
mov
ret
mov
inc
arpl
in
sub
nop
cmp
add
pop
mov
jp
(bad)
mov
cld
jmp
and
jl
pop
fdiv
cmps
cld
dec
mov
loop
ss
test
mov
test
pop
xchg
test
ds
test
push
mov
outs
test
and
ret
imul
popf
adc
(bad)
jae
jg
xchg
lahf
out
cmp
and
adc
add
sub
push
cmps
jl
ficom
xlat
cmp
mov
call
xlat
jb
pop
jns
movs
dec
xchg
sahf
inc
lds
xchg
push
cmps
call
lods
mov
icebp
mov
call
ins
xchg
jp
push
add
test
mulps
ja
add
sbb
inc
out
and
repnz
sbb
cmp
add
or
sbb
jno
shr
push
mov
dec
fcmovbe
jecxz
popf
out
sbb
push
jp
fcom
xor
imul
mov
mov
outs
(bad)
inc
loopne
mov
idiv
outs
mov
dec
add
std
out
mov
call
inc
cs
xchg
nop
mov
cmp
ins
sar
xchg
aad
sbb
sbb
das
in
jb
jnp
xchg
jb
nop
xchg
cmps
das
mov
pop
out
dec
jo
dec
in
idiv
mov
push
icebp
mov
out
or
dec
mov
or
add
sti
xchg
scas
sti
xor
xchg
aaa
fcom
es
sub
(bad)
shr
or
es
and
sub
xchg
mov
mov
ret
rol
stos
sar
mov
pop
mov
outs
je
adc
rep
test
sbb
pop
int
and
loopne
test
inc
inc
(bad)
push
std
mov
cmp
xchg
jg
into
cmc
test
xchg
imul
xchg
repz
xchg
(bad)
mov
enter
lea
pop
retf
push
sub
cmp
push
addr16
xchg
imul
mov
cmp
retf
jae
cli
sbb
jbe
push
mov
outs
adc
popa
mov
pop
dec
jmp
mov
xlat
pop
pusha
pop
shr
into
cmp
cld
pushf
pop
popf
jecxz
or
hlt
mov
jmp
fisttp
xor
jmp
xchg
push
(bad)
into
fsub
in
pop
cs
rcr
jb
xor
jp
fldcw
inc
icebp
ret
sbb
add
cmp
jl
or
pop
popf
pop
icebp
pop
push
mov
ds
or
mov
out
sbb
jne
sahf
jp
mov
jmp
dec
cmc
jmp
add
inc
mov
mov
mov
sbb
loope
jmp
mov
inc
add
call
and
mov
jge
mov
push
xchg
cmps
lds
fsubr
cmps
fmul
inc
add
fidivr
adc
sub
arpl
mov
pop
jmp
push
pop
jmp
mov
mov
push
cli
pop
push
and
jb
mov
test
xor
xchg
ja
inc
xchg
pop
scas
mov
ret
lds
add
inc
ss
jmp
mov
jbe
mov
push
mov
fcomp
loope
add
add
dec
adc
stos
push
mov
mov
sbb
stos
mov
pushf
jmp
add
cs
movs
leave
inc
xchg
fdivr
push
fstp
mov
fwait
mov
inc
xchg
call
in
ret
dec
dec
sub
and
ret
out
retw
ds
dec
mov
jns
add
cmp
ja
test
inc
adc
xor
and
pop
sbb
xchg
movs
std
or
dec
out
out
or
and
pop
bound
dec
mov
cld
pusha
xor
cld
mov
jns
cld
mov
dec
mov
sahf
cdq
xchg
gs
into
jmp
(bad)
xor
sub
cmp
push
or
dec
sahf
cmp
xchg
jo
xchg
mov
ds
ins
in
int
fild
mov
add
dec
addr16
pop
sbb
lods
sbb
push
mov
pop
cli
inc
pop
je
je
mov
mov
rol
movs
or
(bad)
or
push
add
adc
loopne
ret
les
data16
mov
dec
add
cld
idiv
push
retf
add
cmp
sub
cmp
mov
rol
fidiv
mov
or
das
add
push
sbb
add
inc
lahf
cmps
mov
push
pop
jmp
rcr
ja
jb
xchg
adc
out
jmp
psrld
es
inc
pop
out
jmp
xor
mov
cwde
cmps
pusha
rol
xor
dec
rcl
sub
sub
xor
lahf
mov
mov
(bad)
jmp
sbb
imul
jne
jae
scas
dec
inc
stos
test
pop
call
pushf
dec
gs
outs
in
shl
jae
cmps
push
push
std
stos
xchg
xor
arpl
mov
pop
mov
mov
cmps
(bad)
popf
pusha
push
mov
fs
jo
xor
(bad)
push
enter
pop
mov
js
push
cmp
xchg
or
push
jmp
jl
sub
sub
jg
xchg
add
xchg
mov
iret
cmc
mov
xchg
mov
push
jge
fnstcw
mov
xchg
outs
jmp
fs
shr
mov
jmp
mov
inc
call
mov
fsubr
(bad)
mov
sub
jmp
aas
les
inc
and
pop
sbb
dec
pop
scas
dec
out
or
sbb
sub
pop
fwait
or
inc
dec
test
mov
outs
mov
arpl
in
aas
int
add
dec
repz
mov
(bad)
adc
fcomip
add
jp
call
mov
xlat
retf
test
out
mov
inc
and
retf
in
imul
fwait
imul
cmp
jl
repz
xor
and
jp
and
pop
(bad)
sub
jp
fsub
xchg
dec
pop
mov
adc
fistp
mov
sbb
dec
xlat
jmp
pop
repnz
stos
xor
jle
movs
mov
jo
xchg
xchg
adc
std
in
(bad)
data16
xchg
push
out
xor
push
rol
not
or
sbb
dec
test
aas
pop
mov
retf
fiadd
dec
pop
mov
cmp
cli
push
js
jnp
mov
bound
adc
dec
std
jle
je
dec
scas
push
and
repnz
xlat
loope
push
xchg
inc
neg
inc
jle
nop
mov
inc
jmp
lods
pushf
xchg
je
cmp
data16
inc
cmp
xor
jle
push
add
fstp
dec
pushf
shl
out
jns
jge
fistp
inc
adc
add
jne
dec
push
mov
gs
mov
ret
adc
test
dec
in
mov
retf
mov
sub
lock
mov
ja
mov
cmp
les
xchg
test
in
das
lock
lock
repz
ins
xchg
es
jp
push
and
mov
cmp
outs
clc
stc
and
hlt
push
push
push
or
ds
mov
cmc
pop
dec
mov
pop
mov
and
int
es
jne
test
pushf
fidivr
out
ja
test
in
cmps
and
pop
nop
fwait
mov
push
cwde
stos
lea
cmp
jge
test
idiv
add
lock
inc
in
xor
sbb
inc
adc
jmp
pop
in
jecxz
mov
pop
push
addr16
mov
and
add
mov
xchg
xor
imul
xchg
adc
pusha
jno
pop
shl
ins
xchg
fwait
jae
int3
shl
icebp
jg
mov
sbb
mov
(bad)
fisttp
fwait
cwde
dec
in
jbe
add
call
push
inc
les
jne
ins
pop
push
call
pop
cld
pop
ror
jnp
mov
movq
mov
pop
je
dec
add
xor
and
retf
rcr
pop
fadd
lods
shr
int
push
mov
push
(bad)
jecxz
daa
cli
jnp
sahf
mov
outs
xor
repz
jp
jmp
cmc
sub
fldenv
add
mov
addr16
cmp
fnstcw
js
hlt
add
cmp
cmp
sbb
mov
push
in
xchg
std
or
pcmpgtd
neg
ror
jp
jb
ret
mov
lahf
ins
out
movs
jnp
out
mov
mov
xchg
js
mov
rol
cwde
inc
xchg
pop
out
or
and
into
add
cmp
dec
sub
mov
ret
cmp
adc
and
and
sbb
rol
pop
xor
pushf
or
pop
cmp
retf
lods
rcl
push
jle
mov
hlt
fmul
outs
jecxz
inc
cmp
jmp
std
fcmovu
xor
mov
xchg
scas
cli
inc
add
cli
or
inc
leave
shl
ds
jle
mov
cmp
mov
(bad)
sub
cmc
jl
stc
push
mov
inc
mov
cmp
jge
mov
outs
mov
pop
loope
xchg
inc
mov
jg
outs
dec
dec
test
sar
mov
and
(bad)
icebp
adc
(bad)
sbb
lock
cmc
out
jmp
xchg
inc
out
sbb
ficomp
cmp
cmp
cmp
mov
nop
cmps
mov
in
sar
call
fadd
add
or
mov
pop
mov
aas
pushf
jmp
pop
test
and
mov
mov
adc
(bad)
mov
icebp
inc
xchg
cwde
mov
push
lea
mov
retf
mov
dec
(bad)
dec
enter
repnz
and
aas
inc
and
xchg
mov
stos
imul
push
push
inc
mov
xor
and
mov
outs
mov
sahf
int
inc
mov
push
ret
pop
fisubr
mov
mov
cmp
inc
test
xchg
inc
rcr
loop
mov
sbb
mov
shr
stc
or
sbb
(bad)
retf
cmp
or
cmp
or
xor
leave
jecxz
mov
js
inc
adc
inc
ss
leave
pop
jmp
sbb
xchg
cmps
cmp
or
cmps
mov
fild
push
mov
mov
and
mov
xor
repz
mov
dec
pop
mov
icebp
movs
lods
xlat
outs
dec
cmc
cmp
and
out
and
and
jo
outs
pop
js
dec
and
xchg
mov
cwde
stc
js
call
loope
cmp
adc
icebp
pop
jns
jp
xlat
add
test
xor
call
pusha
fimul
mov
pop
jmp
test
or
movs
sti
mov
das
fldcw
loopne
imul
mov
lods
sar
dec
(bad)
mov
jmp
cld
lods
js
push
fs
gs
push
adc
mov
int
das
cmps
cli
addr16
xor
or
jae
ret
mov
gs
test
std
(bad)
xchg
sbb
push
shr
out
(bad)
jae
mov
push
int3
xchg
pop
and
mov
mov
stos
data16
mov
and
mov
test
loopne
test
cmp
std
out
inc
dec
or
(bad)
dec
push
std
js
outs
cmps
frstor
shl
das
mov
inc
sbb
sbb
add
push
and
sbb
outs
inc
scas
push
and
xor
mov
pop
dec
retf
aaa
(bad)
icebp
fistp
jbe
mov
(bad)
aam
loope
movs
dec
in
or
mov
mov
push
inc
mov
retf
repnz
xor
jno
imul
cmp
fucomip
(bad)
pop
stc
and
js
xor
or
test
mov
or
push
fdiv
xor
fdivr
jne
mov
adc
inc
mov
add
stos
lahf
bound
inc
jmp
call
jb
mov
movs
sar
mov
sub
rcl
xor
(bad)
stos
and
imul
jmp
push
or
(bad)
out
addr16
sbb
cmp
jne
cmp
jle
nop
mov
add
cmc
sbb
cmp
add
push
sbb
(bad)
sbb
xor
jp
lods
imul
cs
mov
lea
xor
pop
(bad)
rcl
test
popf
(bad)
push
out
test
(bad)
xchg
je
mov
cmps
sti
mov
push
xchg
test
xor
sub
aad
int3
pusha
int
arpl
push
or
jo
jbe
dec
mov
pop
fidivr
jmp
(bad)
jmp
sbb
and
fwait
add
jge
mov
jge
xchg
mov
and
arpl
fst
retf
inc
jle
cdq
dec
icebp
mov
outs
popf
(bad)
xchg
rcr
retf
adc
inc
mov
pusha
add
fwait
nop
cmp
loopne
or
xor
xchg
outs
aad
pop
or
(bad)
and
pop
pop
ja
movs
or
add
mov
movs
xchg
or
fild
out
add
adc
dec
add
or
jg
dec
push
xchg
adc
(bad)
popf
adc
fnstsw
rcl
mov
pop
mov
xchg
outs
(bad)
sahf
jb
(bad)
icebp
mov
mov
dec
pop
mov
mov
mov
mov
icebp
xchg
push
in
jmp
fcomi
inc
sti
xor
lahf
cmp
and
pushf
stos
xchg
and
jl
out
jg
neg
dec
jl
mov
sbb
and
sbb
mov
xor
scas
adc
or
cld
mov
test
sub
and
and
psadbw
mov
mov
push
add
idiv
sbb
fisubr
pop
iret
cmp
loope
clc
pop
loope
pop
and
addr16
cmp
mov
xchg
cli
cmp
inc
jmp
push
gs
mov
pop
inc
lahf
je
scas
xor
cmps
xchg
arpl
fs
mov
out
js
nop
jge
mov
mov
add
call
mov
dec
mov
mov
hlt
fadd
cmp
mov
xchg
pop
stos
cmp
sub
into
shr
sub
sub
sub
pop
pop
jbe
mov
jp
(bad)
addr16
add
xor
adc
or
push
les
test
sbb
cdq
sub
(bad)
in
sbb
loopne
fimul
fs
inc
loopne
rol
inc
fiadd
mov
leave
jp
mov
pop
inc
mov
dec
lods
mov
dec
or
leave
(bad)
aad
call
ror
jnp
std
pop
or
jmp
sbb
jge
inc
adc
imul
cmp
adc
adc
or
dec
outs
mov
jg
out
xchg
cmp
inc
pop
test
outs
xchg
shr
sub
movs
mov
cdq
shl
mov
cmc
daa
sbb
in
ja
sahf
push
in
aam
pop
cs
lock
cmp
add
cmp
ins
sbb
mov
movs
sub
sbb
inc
ret
xor
or
lods
push
xchg
push
dec
mov
xchg
and
dec
(bad)
fmul
neg
popa
popa
fisubr
mov
xchg
inc
in
js
cli
(bad)
mov
loope
mov
nop
pop
push
cmps
mov
pop
pop
(bad)
ficom
mov
ss
cs
shl
sbb
dec
not
push
xchg
mov
les
into
xor
sbb
sub
inc
jge
xchg
sub
lahf
adc
lods
pop
push
stos
mov
inc
mov
add
ins
jle
sub
movs
cmp
mov
fidivr
stos
je
jnp
scas
lods
hlt
inc
fcomp
jb
cdq
icebp
daa
and
shl
mov
aad
(bad)
push
push
or
sti
rcl
push
cmp
cdq
dec
add
xchg
xchg
lods
dec
and
js
enter
pop
inc
pop
cmp
or
pop
mov
adc
(bad)
(bad)
test
cli
loopne
xchg
inc
jns
jg
jne
mov
cmp
mov
pop
rcr
test
shr
mov
sbb
and
fdivrp
test
sub
leave
movhps
rcl
ss
cmps
sbb
mov
mov
neg
ficom
je
jmp
pop
stos
sub
jae
or
and
lods
mov
xor
xchg
add
rol
xchg
pop
cmp
cmp
clc
jl
fst
imul
fwait
arpl
inc
pop
xchg
fimul
stos
jmp
inc
adc
pop
in
cmp
dec
cld
xchg
int
rcr
sub
xor
mov
mov
mov
test
add
sbb
adc
xchg
cmp
pop
inc
mov
mov
fsubr
jle
dec
add
cdq
push
retf
dec
xchg
mov
jo
mov
or
fwait
jp
clc
movs
in
sub
adc
call
mov
rol
fwait
inc
rcl
cs
mov
mov
popf
add
pop
mov
gs
inc
mov
add
pop
(bad)
(bad)
cmp
inc
loope
adc
add
dec
mov
lea
movs
xlat
test
sysret
dec
in
xchg
cmp
dec
test
cmps
sub
dec
call
push
std
loop
ss
mov
mov
sbb
scas
addr16
loope
jmp
jmp
mov
xor
cmp
retf
(bad)
pop
jae
jns
punpckhwd
pop
add
retf
retf
or
pop
out
out
and
adc
cmp
add
jle
popa
adc
jo
lods
or
fdiv
and
or
call
jp
popa
inc
pop
lods
sub
mov
sti
push
ret
or
lds
or
mov
mov
adc
loopne
pop
cwde
popf
jbe
sub
cld
jmp
loopne
pop
add
inc
test
or
push
cmp
jns
out
add
mov
adc
or
adc
addr16
nop
push
mov
mov
jne
aad
or
and
icebp
pop
(bad)
jg
pop
popf
and
mov
mov
push
call
fs
mov
cmc
sbb
cmc
adc
jecxz
hlt
sar
inc
stos
test
adc
mov
shl
in
fs
xchg
adc
pop
out
cld
loop
mov
addr16
add
sub
stos
sbb
ins
idiv
mov
push
lods
adc
mov
xor
dec
retf
shr
inc
mov
add
mov
cmp
xchg
or
mov
mul
fild
lea
pop
loope
xchg
sbb
jmp
outs
pop
cmp
mov
cld
jns
aaa
jp
addr16
adc
and
xchg
int
push
add
sbb
daa
ret
inc
cmp
lods
sub
adc
jnp
ror
inc
stos
or
jmp
ja
pop
gs
pop
(bad)
mov
xchg
push
in
jno
xchg
cli
mov
in
mov
test
scas
cwde
stos
arpl
loop
mov
jecxz
outs
mov
xor
sbb
lock
inc
retf
pop
xor
jne
inc
jmp
mov
sbb
call
xor
push
push
and
adc
imul
or
adc
xor
cmps
mov
sbb
das
pop
call
lea
fs
cmps
xor
jecxz
jo
xchg
add
hlt
pop
mov
adc
fidiv
in
sub
fld
jbe
and
xor
fcomp
pop
bound
pop
stos
aas
jl
mov
jae
mov
mov
cmp
sbb
(bad)
push
test
jo
push
sbb
cmp
push
add
mov
mov
jl
xchg
cmps
adc
mov
idiv
xchg
add
ins
jno
lods
dec
clc
mov
mov
call
cmps
mov
into
inc
call
call
xor
dec
sbb
out
sbb
inc
fsubrp
shl
inc
stos
cmp
dec
pop
push
out
mov
pop
daa
bnd
repz
mov
or
les
pop
sub
mov
mov
call
(bad)
scas
sbb
cmp
hlt
loopne
fwait
xlat
inc
fsubr
pop
cdq
ss
out
mov
cmps
outs
aad
pop
xor
movs
scas
sub
movs
mov
scas
xchg
mov
xor
(bad)
cwde
out
enter
mov
xor
sub
sti
out
arpl
mov
gs
mov
mov
icebp
test
jmp
push
into
dec
outs
jl
sub
ins
mov
inc
in
movs
mov
in
out
and
and
push
test
retf
fadd
test
psraw
shl
out
mov
into
push
(bad)
adc
xor
jmp
pop
sub
and
fs
add
mov
mov
(bad)
cmp
and
xor
or
lods
and
scas
fs
lods
sbb
mov
or
lods
mov
fwait
mov
pop
pop
inc
(bad)
xlat
cmp
mov
lods
adc
xchg
retf
sbb
mov
shl
mov
lds
push
retf
push
icebp
adc
popa
fisttp
pop
inc
test
mov
gs
loop
stos
fsub
sbb
jae
ja
call
jg
mov
cmp
stos
xor
jg
int3
out
mov
inc
jl
sub
cmps
out
sahf
in
jbe
mov
lahf
pop
jmp
out
dec
lahf
pop
ins
nop
cdq
mov
xor
in
aam
pop
inc
in
ficomp
push
stc
push
add
out
xlat
and
sbb
push
jne
imul
inc
retf
xchg
in
pusha
adc
enter
aaa
sbb
out
inc
mov
movs
pop
jnp
test
adc
cld
mov
mov
lock
mov
sti
cwde
fdivr
movs
out
mov
cmp
jge
stos
xchg
push
test
addr16
and
cmp
lods
cmc
pop
jge
xchg
imul
(bad)
sbb
add
cwde
inc
pop
pusha
mov
add
bound
mov
or
addr16
lock
les
imul
pop
fld
rcl
or
adc
cmp
cli
mov
les
sub
cli
pop
mov
stos
jno
xchg
inc
sub
cli
cmps
ja
outs
lods
mov
jl
cmps
mov
div
mul
dec
sbb
shr
daa
test
sub
stos
adc
jae
outs
sub
sub
rcl
inc
punpckhbw
mov
bound
pop
sbb
call
mov
mov
pop
fidivr
pop
test
pushf
aam
movs
int3
loope
xchg
movs
add
repnz
sub
test
push
xchg
shl
aad
dec
pop
scas
xchg
addr16
and
dec
sub
leave
mov
and
sbb
push
mov
inc
mov
cmp
sbb
pop
pop
jecxz
push
and
sub
dec
push
mov
ja
xchg
stos
adc
push
repz
inc
ja
push
or
dec
mov
jmp
out
jge
adc
out
mov
mov
fld
push
ror
sbb
mov
push
lahf
aaa
or
xor
sub
mov
cmps
mov
pop
test
jo
shl
js
fist
xor
adc
cmps
dec
adc
addr16
lods
cmps
adc
xlat
mov
(bad)
test
cwde
dec
and
push
xchg
test
mov
test
pushf
cwde
cmp
(bad)
sar
mul
inc
pusha
mov
mul
std
jne
inc
push
pusha
dec
popf
adc
pop
dec
stos
ret
stos
cdq
or
into
jbe
fcomp
pop
sbb
adc
mov
mov
call
mov
cmp
into
xchg
push
mov
push
fnstenv
mov
cwde
jno
popf
push
and
jecxz
push
(bad)
iret
xor
lock
sbb
std
mov
xchg
scas
scas
xor
push
in
sbb
adc
out
shl
addr16
jno
jb
push
movs
mov
retf
pop
sti
mov
cmp
dec
push
inc
out
add
xchg
add
jnp
push
xlat
add
mov
add
jnp
mov
dec
int3
repz
fiadd
ja
sub
test
pop
loope
jmp
mov
dec
(bad)
test
clc
pusha
sub
cmp
cmc
shr
mov
sbb
adc
(bad)
icebp
push
rcl
add
inc
les
inc
and
mov
stos
jle
shl
cld
je
popa
cmp
xor
jl
popf
pop
sar
dec
or
mov
xor
cmps
xchg
xor
ret
je
jae
xor
jecxz
dec
xchg
xchg
addr16
shl
div
pusha
xchg
neg
leave
sbb
ret
cmp
fnstenv
mov
and
div
and
cmp
push
cmp
xchg
mov
iret
aaa
or
jbe
fidivr
jbe
cmc
or
add
and
sbb
imul
jl
test
sbb
sub
xlat
mov
int3
in
pop
xlat
sbb
inc
mov
jp
sar
fcmovu
xchg
xor
test
xor
cmps
gs
mov
lahf
cdq
jne
pop
scas
or
cmp
xlat
int
retf
or
outs
fs
inc
push
jns
mov
les
lea
cmps
loope
ins
jle
mov
arpl
sbb
cwde
data16
cs
dec
popf
jmp
jge
jle
sub
mov
xor
stos
jno
in
sub
push
mov
ffree
sbb
cmc
xor
rol
stc
mov
mov
jnp
add
fild
adc
cmp
jne
imul
sub
aad
fcmovnb
xor
ss
cs
add
nop
or
lods
or
mov
sbb
frstor
inc
sbb
das
fiadd
mov
xor
movs
xchg
xor
gs
mov
mov
xlat
mov
mov
cmp
jno
adc
sbb
in
ret
and
imul
scas
mov
rcr
out
or
add
out
sbb
pop
sub
in
adc
lods
mov
ins
sbb
mov
ror
shr
shl
sahf
dec
mov
cmps
jle
imul
sbb
xsha1
cmps
mov
stc
out
add
pop
in
dec
cs
fcomp
call
push
ins
cmps
sub
gs
cmp
pop
icebp
nop
retf
pop
stc
js
lock
fild
jge
inc
cmps
and
or
add
jb
test
mov
inc
stc
mov
dec
mov
push
(bad)
outs
movs
ins
rol
mov
xor
aad
mov
scas
lds
ret
xchg
shl
test
fiadd
dec
fidivr
push
or
xchg
repz
adc
push
addr16
dec
call
mov
sub
gs
mov
out
pop
adc
mov
popa
jmp
popa
dec
mov
sbb
sbb
pop
retfw
aas
xchg
hlt
add
jg
jnp
das
fcomp
or
xor
stos
repz
inc
icebp
xchg
jae
mov
cmp
sar
jno
loop
pop
jmp
cmp
bnd
inc
out
add
cmp
mov
push
inc
inc
mov
cmp
arpl
push
jb
sbb
sbb
push
mov
fst
adc
mov
(bad)
scas
push
test
pop
and
out
in
in
clc
add
retf
push
cmps
mov
push
push
in
mov
dec
mov
cmps
mov
mov
les
or
into
int3
fstp
pop
pop
and
cmp
cmp
retf
and
jmp
or
inc
sub
jge
popf
inc
mov
fstp
mov
jne
cmp
cmp
(bad)
clc
ficom
jecxz
dec
jle
push
call
mov
push
retf
sahf
pusha
or
dec
repnz
fadd
adc
mov
fs
lock
in
inc
pushf
cdq
jne
jp
dec
or
push
fistp
and
push
fstp
dec
pop
stos
inc
add
retf
repnz
std
shl
fisttp
(bad)
adc
outs
aas
test
(bad)
adc
jg
shl
nop
add
cld
adc
sub
fist
inc
inc
data16
cwde
cmp
pushf
inc
loope
imul
sbb
call
xchg
test
ds
(bad)
mov
loope
inc
xchg
lea
dec
cld
push
dec
call
setge
mov
dec
in
ds
inc
addr16
out
ja
pop
add
daa
lods
xor
adc
cmp
xor
cli
xchg
or
loopne
jmp
and
mov
dec
mov
jecxz
jecxz
dec
xor
dec
nop
pushf
mov
gs
xchg
push
or
jecxz
retf
sar
lods
(bad)
pusha
clc
jno
ss
and
add
inc
mov
or
mov
scas
imul
inc
je
and
pop
xor
add
inc
mov
pop
movs
mov
outs
push
add
mov
ds
xchg
pop
jmp
xchg
imul
cld
push
das
into
sti
stos
jnp
pop
mov
sar
mov
lock
enter
mov
jp
jnp
dec
push
dec
mov
(bad)
pop
into
adc
inc
xchg
jne
cmp
mov
sti
je
iret
sbb
out
dec
jb
add
and
jg
push
data16
add
mov
jne
xor
xchg
scas
icebp
inc
clc
inc
pop
dec
xchg
or
mov
mov
xor
clc
pusha
mov
fidivr
movs
jmp
ds
jmp
cli
dec
test
sub
jecxz
cmc
pop
out
or
jnp
xchg
imul
sub
test
fsubrp
add
js
cli
inc
adc
sub
lods
add
sub
dec
add
and
movs
mov
popf
retf
popf
setnp
or
adc
and
fidivr
loope
sbb
jmp
movs
mov
(bad)
fimul
hlt
cmc
aam
pop
in
mov
call
xor
(bad)
out
inc
fiadd
sub
pop
test
sub
jmp
sbb
mov
cmp
cmp
jmp
sbb
(bad)
or
popf
sub
sub
not
xchg
jl
jno
mov
stos
adc
mov
fld
adc
mov
push
in
lock
inc
gs
cmps
sub
cmp
inc
jbe
push
outs
jp
test
sbb
sub
fldcw
int
xchg
xchg
push
or
(bad)
push
outs
push
jno
xchg
cmp
dec
aas
mov
add
ss
(bad)
jmp
addr16
pop
cwde
and
sahf
mov
loopne
pop
out
pop
add
adc
dec
fwait
push
loope
mov
xchg
retf
hlt
dec
ja
lea
dec
cmps
aaa
pop
dec
ret
out
leave
push
fistp
inc
pop
es
js
scas
ja
pop
scas
mov
leave
inc
out
enter
jl
pop
dec
loop
imul
adc
popf
or
xchg
cdq
clc
jne
push
popa
in
lods
mov
int
js
jne
popfw
ins
loopne
inc
mov
adc
xchg
aam
adc
jge
pushf
mov
dec
fmul
enter
rol
cwde
xchg
dec
aad
out
cmp
vpshad
pop
xor
jns
dec
xchg
inc
ret
call
pop
adc
pop
or
dec
rcl
cmp
push
and
pop
mov
pop
clc
jne
jo
dec
rcr
adc
mov
adc
jmp
rol
lea
inc
lock
cli
jecxz
push
stos
sub
sub
aaa
inc
sub
cwde
sub
es
pusha
movs
mov
in
inc
(bad)
add
sbb
inc
adc
addr16
inc
dec
test
mov
addr16
xchg
sbb
adc
enter
out
inc
xchg
pop
ins
mov
xchg
mov
dec
icebp
fidivr
cld
stos
int3
or
mov
lods
fadd
imul
aaa
xchg
imul
retf
inc
imul
lea
push
mov
mov
aaa
cmc
ins
test
and
inc
retf
inc
sub
push
mov
inc
je
dec
or
adc
and
ret
sbb
jno
fldcw
shl
cmps
dec
loopne
add
icebp
mov
xchg
jg
mov
std
mov
loopne
inc
stos
mov
sbb
inc
clc
and
add
xchg
dec
and
test
stos
inc
ret
xchg
mov
push
arpl
ret
push
daa
adc
xor
add
sub
dec
push
stos
mov
dec
fldz
test
iret
sar
pop
fdivr
xchg
cmp
fwait
pop
aaa
(bad)
clc
mov
fwait
ins
movs
mov
pop
add
xchg
mul
mov
mov
xchg
inc
cdq
popf
pusha
ret
push
int3
inc
and
jbe
add
pop
(bad)
sbb
clc
xor
or
aam
enter
(bad)
add
push
test
fst
cmp
mov
cwde
cmp
pop
cmp
into
call
std
push
sbb
mov
mov
jecxz
xchg
jecxz
es
(bad)
mov
iret
sbb
mov
mov
das
inc
mov
mov
shl
fwait
aad
aam
in
pop
xor
(bad)
daa
pop
jnp
test
fs
icebp
cmp
test
and
or
add
pusha
fs
pusha
cdq
fnstcw
(bad)
loopne
lods
jmp
sub
test
pop
mov
stos
push
xchg
movs
add
in
retf
repnz
movs
in
aaa
xchg
pop
bound
cld
xchg
xchg
mov
dec
sbb
pop
push
add
cs
ins
pushf
ins
sbb
movs
mov
push
add
data16
cmp
aaa
xor
ds
out
sbb
mov
outs
cwde
mov
sbb
and
bnd
sbb
jge
push
loop
aad
mov
sbb
inc
dec
in
lea
in
push
cdq
loope
fdivr
xchg
adc
aad
mov
dec
lods
sahf
shr
sub
das
jmp
and
or
mul
ins
mov
mov
sbb
mov
into
repnz
fwait
retf
push
add
inc
xor
imul
adc
inc
cmps
sbb
rcr
fld
arpl
push
jo
mov
shr
into
mov
enter
hlt
movs
icebp
adc
mov
push
lea
in
test
bswap
idiv
xchg
fcom
sub
in
sar
jns
sbb
arpl
addr16
xchg
es
retf
ja
(bad)
cmp
or
sbb
jbe
daa
nop
cmp
adc
jae
test
loope
push
das
and
les
imul
pop
xchg
ficomp
retf
test
ss
pushf
psubd
mov
pop
pop
mov
mov
or
fldcw
mov
push
aad
aam
pop
adc
call
fsubr
jl
call
mov
adc
and
add
xor
jae
cmp
pop
mov
nop
jg
lea
mov
push
adc
cwde
and
push
jl
jp
mov
sahf
pop
xlat
test
xchg
add
jle
(bad)
(bad)
mov
mov
inc
mov
shr
int
cmp
inc
jmp
addr16
pop
add
or
ins
add
pushf
retf
pushf
ret
enter
js
rcr
jbe
inc
call
mov
push
sbb
cdq
aam
cmp
sti
mov
inc
test
pusha
mov
inc
xor
adc
aam
jo
push
movs
call
xchg
lock
loop
dec
cmp
inc
loop
into
jb
inc
pop
cmp
imul
mov
sahf
stos
dec
sub
push
xchg
leave
aas
and
push
ja
hlt
xor
add
test
ins
adc
push
call
add
daa
mov
outs
push
cwde
ss
call
loope
sbb
call
lods
mov
push
pusha
lods
mov
(bad)
xchg
mov
push
push
xor
(bad)
add
cmp
fwait
xor
pop
cmps
ror
in
cmc
sbb
inc
mov
arpl
pop
ror
in
imul
dec
push
xchg
or
fmul
adc
cmps
leave
inc
out
loop
in
jno
(bad)
ss
jp
cwde
mov
inc
mov
pop
adc
aam
std
(bad)
arpl
dec
icebp
je
ss
xor
(bad)
jo
xor
ins
popf
daa
dec
pop
clc
dec
pop
or
pop
lods
jge
in
add
sbb
or
addr16
sub
dec
sbb
mov
lea
pop
add
jmp
pop
mov
outs
ja
and
ret
stc
dec
mov
sahf
push
push
icebp
mov
mov
pop
add
pop
fsub
mov
cdq
dec
sbb
std
sub
(bad)
int3
fcomp
pop
or
xchg
cmp
pusha
in
or
mov
(bad)
aam
leave
test
out
aas
cmp
and
mov
xor
dec
push
call
movs
xor
ss
clc
les
(bad)
pop
outs
jae
push
popf
sahf
dec
sahf
cmc
mov
adc
sti
std
cmp
je
cdq
mov
data16
mov
add
push
aaa
neg
lods
jb
sbb
cmp
dec
add
mov
ror
bnd
adc
cmp
xor
or
adc
adc
sti
sub
int
inc
mov
jle
(bad)
sbb
test
jmp
rol
loope
mov
or
xchg
stos
adc
clc
movs
test
jno
icebp
mov
cmp
adc
in
scas
jl
xor
jnp
movs
xor
cmp
xchg
xor
fnstenv
ror
add
cmp
ins
cld
push
push
dec
ja
xchg
neg
xchg
inc
mov
inc
lods
pusha
aad
retf
pop
cmps
retf
mov
xchg
in
or
mov
fcomp
mov
loope
mov
mov
pop
ds
and
add
push
mov
dec
pop
pop
test
add
js
retf
pop
inc
leave
sbb
jge
sub
dec
bound
jl
xchg
out
mov
aad
js
lea
mov
mov
or
repz
test
mov
dec
fimul
xchg
xchg
call
xchg
inc
out
jle
or
push
mov
out
pop
lock
push
push
inc
xchg
or
ret
xchg
retf
or
gs
cdq
aam
dec
push
adc
cmp
stos
sbb
mov
mov
test
sbb
jle
xlat
mov
in
(bad)
lods
push
loopne
fiadd
(bad)
call
out
sbb
jle
test
jb
lds
repz
cli
inc
sbb
mov
xor
leave
mul
pusha
in
add
mov
xor
sahf
dec
push
rol
leave
or
sbb
pop
push
pop
adc
mov
mov
fisttp
movs
pop
and
movs
sti
arpl
cdq
cmp
jne
mov
gs
xchg
adc
movs
cmps
and
pop
xchg
mov
push
mov
mov
adc
in
icebp
loop
js
mov
xor
in
push
loope
pop
sbb
jg
cmp
dec
xchg
cmps
iret
xchg
push
sbb
add
mov
pop
sub
and
fadd
sahf
adc
or
clc
xor
and
fucomi
out
xchg
mov
inc
jge
mov
cmps
in
push
adc
lock
xchg
popa
test
sbb
jecxz
call
mov
sbb
inc
lock
add
mov
inc
add
int
adc
jnp
out
inc
outs
jle
jmp
sub
add
lods
js
lods
cmp
stos
call
mov
jecxz
pop
ins
lods
jo
xchg
xlat
imul
cmc
mov
fwait
pop
lods
and
mov
ror
xchg
xor
xor
adc
sub
aas
or
ins
cwde
push
cmp
nop
xor
stc
std
sbb
sbb
cmp
and
aaa
in
gs
xchg
jbe
mov
aas
pop
or
(bad)
fldenv
(bad)
jnp
push
fwait
jnp
cmp
test
out
shr
add
(bad)
hlt
cmp
add
add
add
ret
lods
enter
cdq
push
(bad)
outs
in
adc
sub
jmp
push
out
push
imul
(bad)
xor
mov
cmp
retf
lods
push
loope
sub
mov
xor
xor
jbe
mov
mov
ror
adc
aas
pop
sahf
fwait
mov
jmp
xor
push
and
outs
movs
les
pop
(bad)
pushf
sbb
dec
cmc
std
or
popf
inc
inc
mov
repz
call
mov
cmp
fcom
rcr
xor
ds
jno
jno
mov
fdivr
jmp
sbb
inc
ins
jp
popa
loop
mov
shr
pushf
dec
shl
sbb
cmps
test
push
xor
(bad)
mov
ret
sub
fsub
mov
jne
call
jecxz
repz
imul
adc
jmp
mov
adc
sub
(bad)
in
inc
ret
cmp
bound
xchg
inc
loop
adc
inc
mov
and
push
ins
xchg
into
dec
dec
cwde
lods
xchg
arpl
pop
pusha
hlt
fadd
retf
push
dec
and
jg
out
in
ret
mov
xor
jecxz
xchg
mov
pop
js
test
ret
test
aam
ss
enter
inc
add
pop
mov
pop
pop
or
xor
cmp
sbb
xor
sbb
dec
dec
mov
popf
sub
mov
xor
inc
in
stos
pushf
inc
mov
push
retf
mov
mov
movs
jl
jecxz
sub
retf
fwait
lahf
leave
sub
mov
call
xor
dec
rcl
or
jmp
adc
ins
dec
popa
xchg
dec
push
jle
xchg
jp
cli
sub
int
push
jg
mov
xor
sub
sahf
dec
add
add
add
cmc
mov
cld
dec
dec
push
mov
ds
jmp
test
or
pop
mov
inc
add
rcr
lods
jmp
outs
fidiv
aas
sub
(bad)
call
inc
add
dec
lods
sub
cli
jbe
adc
jmp
gs
pop
or
inc
or
and
or
dec
xor
ds
mov
xor
das
pusha
(bad)
(bad)
inc
stos
mov
dec
pop
inc
fisttp
lahf
in
cmp
inc
retf
loop
ss
mov
mov
sbb
stos
lea
sbb
jecxz
fnop
sbb
in
xor
cmp
rcr
pop
cmp
cmps
jno
dec
push
or
add
push
add
xor
add
mov
mul
lahf
dec
aas
sub
and
call
lock
dec
mov
outs
in
test
in
clc
gs
in
cmps
mov
mov
sbb
mov
(bad)
cmps
lods
mov
(bad)
push
sti
jo
mov
xlat
into
fsub
lds
jbe
push
scas
imul
push
test
cdq
xchg
or
dec
cdq
loope
mov
je
push
cmp
sbb
push
pop
xchg
push
mov
mov
dec
popf
adc
scas
cwde
mov
adc
push
scas
(bad)
push
repnz
(bad)
cmps
cld
outs
sub
outs
jecxz
jae
mov
mov
mov
sbb
cli
mov
mov
(bad)
push
push
sbb
enter
inc
imul
jae
xor
mov
dec
push
xor
dec
sbb
pop
scas
ds
inc
and
dec
mov
inc
(bad)
rcr
icebp
inc
add
lahf
pop
hlt
mov
pop
mov
xchg
(bad)
fimul
movs
jae
jl
mov
fidiv
xchg
pusha
push
sbb
jmp
scas
pop
xchg
imul
cmp
call
cmp
jg
push
aaa
dec
out
xchg
sbb
mov
xchg
(bad)
jnp
inc
and
add
add
pusha
scas
sbb
xchg
dec
cmp
mul
pop
aas
xchg
int3
movs
and
jg
cdq
jp
mov
cmp
aad
push
loope
ja
mov
repnz
jle
mov
arpl
fwait
scas
aas
xor
(bad)
stc
test
ss
gs
add
jmp
stc
data16
adc
sub
outs
dec
and
movs
xchg
mov
or
push
jmp
pop
jge
add
or
jae
inc
push
fcom
mov
push
js
out
mov
lds
jbe
jo
fmul
pop
lock
stos
sub
into
cmp
pop
pop
mov
fcmovnb
mov
mov
sub
test
js
dec
xor
movs
pop
cmp
mov
xchg
sahf
das
cs
jp
lock
inc
mov
jl
aas
enter
dec
cmps
dec
xor
dec
add
(bad)
neg
loop
int
jnp
je
inc
cmp
int
push
rol
xor
xchg
dec
mov
cmc
fiadd
xchg
cmps
ins
xchg
imul
mov
jge
add
xor
pop
pop
mov
hlt
push
iret
(bad)
jle
fisttp
ins
pop
and
xor
pop
rcl
sar
mov
pop
out
xchg
sahf
ds
cmp
in
mov
lock
mov
pop
fwait
mov
arpl
sahf
inc
das
out
sub
fcmovb
dec
mov
test
mov
(bad)
jae
xchg
mov
sti
jle
adc
popa
fwait
adc
jns
sbb
pop
imul
push
enter
inc
in
cmp
sub
lea
retf
jae
sbb
dec
pop
mov
jle
mov
das
and
ds
mov
mov
mov
ds
lock
cmps
jns
fcom
add
push
xchg
lods
scas
mov
test
inc
sbb
fcom
(bad)
das
aad
sbb
jle
inc
dec
pop
es
gs
mov
popf
mov
inc
repnz
es
repz
dec
add
fst
ds
pushf
daa
mov
(bad)
inc
inc
mov
sbb
pop
inc
cld
std
in
pushf
fidivr
pop
inc
push
scas
sub
mov
cmp
cdq
xor
jne
mov
je
mov
repz
out
shl
jge
stos
mov
jb
sub
xlat
(bad)
fild
and
imul
es
movs
xchg
jge
mov
repnz
jle
aad
fs
xor
or
sub
push
inc
mov
and
xchg
test
loopne
loop
mov
add
lahf
out
mov
mov
cmp
inc
movs
dec
add
cld
call
imul
adc
cld
sti
push
jmp
inc
and
mov
test
out
add
inc
loopne
or
adc
sar
jge
test
outs
mov
mov
ds
out
mov
sbb
jns
ficomp
popf
xlat
pop
fwait
xrelease
xchg
pop
push
retf
add
test
push
call
xor
cli
xchg
loope
ds
mov
aad
add
jnp
sbb
mov
imul
xchg
xchg
mov
adc
sbb
inc
fimul
sbb
add
pop
mov
aad
adc
inc
mov
pushf
sbb
sbb
cld
fdiv
loopne
add
mov
cmp
rcr
retf
adc
call
leave
mov
pop
jmp
jno
mov
iret
cmp
daa
jmp
ret
popa
(bad)
sbb
push
cmp
ins
dec
jo
ins
pop
imul
test
sahf
out
jnp
rcr
inc
sbb
adc
jp
and
sub
mov
push
scas
mov
jge
out
and
inc
jb
xchg
test
sbb
rol
mov
test
mov
mov
inc
jecxz
xlat
or
sub
xchg
int3
pop
ficom
push
js
mov
push
cdq
mov
rcr
icebp
add
xor
aas
sub
jb
in
pop
lods
pop
hlt
push
imul
pop
xchg
dec
int
mov
mov
dec
xor
shr
(bad)
in
mov
sbb
ror
mov
sbb
and
hlt
test
sub
dec
pop
xor
rcl
popa
pop
loopne
or
lahf
test
add
in
addr16
mov
gs
ret
adc
push
es
or
sub
or
mov
cmp
test
pop
ficom
mov
loopne
jmp
je
(bad)
icebp
lea
ret
sbb
sahf
ja
mov
iret
aad
sar
es
pushf
xchg
jno
pop
cmps
adc
jmp
aaa
outs
xchg
pop
ins
xchg
push
cmp
pushf
(bad)
pop
or
imul
sbb
clc
pop
ins
popa
ds
adc
adc
dec
js
jbe
mov
push
mov
cmp
in
push
mov
add
popf
call
add
lock
dec
add
xor
fisub
xchg
mov
push
or
icebp
fcmovne
inc
in
xor
or
jnp
add
xchg
scas
mov
(bad)
cmp
and
or
add
dec
adc
push
adc
sub
sub
rcl
inc
jnp
pop
les
loopne
in
loope
or
ret
sbb
div
pop
xor
repz
retf
pop
adc
jb
xor
aaa
xlat
repnz
push
inc
sub
cmp
xor
retf
cld
dec
pushf
into
or
xor
adc
out
daa
xchg
adc
pusha
dec
sahf
inc
adc
sub
mov
aas
(bad)
(bad)
shl
pop
mov
xchg
sub
push
movs
jmp
popa
pop
shr
movs
ss
push
xchg
jmp
xchg
cmps
test
test
xchg
scas
push
xchg
pop
test
mov
or
lods
xor
in
cmp
push
rcr
sar
mov
cmp
sbb
add
or
add
pushf
inc
popa
mov
std
aas
sbb
cmp
in
mov
popf
fld
cli
imul
sar
xchg
data16
inc
das
test
mov
repnz
neg
je
mov
cmc
push
add
retf
gs
fnstcw
dec
int3
or
cli
shr
jge
lea
pop
jle
jno
add
inc
rol
test
shr
add
and
xor
mov
mov
shr
fild
mov
jno
into
sahf
outs
xor
pop
xlat
int3
cdq
pop
mov
inc
ret
jae
sub
xchg
push
aad
dec
pop
jmp
inc
mov
mov
popf
outs
cmp
loopne
stc
in
mov
dec
jmp
lock
adc
sbb
mov
nop
xchg
xchg
sbb
pop
into
iret
es
push
cld
or
xor
mov
sahf
jo
sbb
sbb
pop
ja
mov
call
sar
test
arpl
nop
inc
push
clc
cmps
lods
or
cmc
push
add
and
ret
int3
fld
cmc
mov
or
cmp
neg
jge
cmp
ja
fimul
pop
jp
imul
retf
xlat
inc
call
pop
sub
xor
push
xor
sbb
sahf
push
adc
test
sub
cmc
xchg
pop
push
jecxz
push
jg
imul
jmp
push
out
sahf
push
es
repz
jg
pop
pushf
test
leave
bnd
sbb
inc
ficomp
sub
mov
scas
pop
inc
sbb
adc
pop
test
pushf
pushf
mov
rcl
jbe
fld
xor
loop
mov
mov
add
adc
std
add
jbe
sbb
pusha
test
mov
mov
repnz
sbb
jmp
adc
pop
lods
pushf
test
or
movs
adc
aad
ret
pop
mov
out
and
clc
mov
pop
lahf
inc
add
dec
cmp
fwait
mov
cmp
out
push
aas
cmp
adc
inc
ret
pop
pop
adc
es
xchg
cmp
movs
lea
add
sti
cmp
inc
test
retf
nop
mov
retf
xchg
adc
jmp
xlat
jp
cdq
mov
pop
mov
sbb
popf
je
imul
fdiv
pop
popf
inc
sbb
jle
outs
imul
rcl
dec
adc
repz
dec
je
mul
push
push
or
mov
dec
dec
xchg
jp
retf
popf
aad
adc
or
idiv
fwait
push
mov
jle
popf
outs
call
repnz
inc
mov
jmp
leave
inc
cmps
jle
mov
aad
xlat
enter
mov
push
add
mov
out
and
xor
jae
sub
mov
cmps
mov
add
int3
add
push
fistp
xor
pop
xchg
(bad)
data16
mov
add
movs
sub
and
cdq
stc
stos
inc
add
push
mov
nop
leave
xor
mov
push
retf
push
aad
cmps
sbb
xchg
cmp
int3
inc
mov
lea
or
sub
cmc
fnsave
inc
sub
mov
sub
jl
mov
pushf
dec
sub
dec
cdq
(bad)
jno
retf
pop
arpl
cmp
jmp
popf
invd
ror
sahf
cmps
sub
push
push
mov
inc
in
push
pop
xchg
mov
sub
shr
mov
in
mov
sub
shl
fchs
addr16
ss
dec
pop
dec
iret
leave
fdivr
sahf
push
inc
add
ror
pop
outs
mov
cmp
sub
out
cld
add
pop
sbb
pop
shl
les
mov
es
dec
mov
push
push
sahf
scas
movs
or
cld
inc
bnd
jb
pop
cld
scas
or
sti
inc
xchg
movs
pop
pop
std
mov
mov
xchg
test
repnz
sar
cdq
fwait
pop
cli
jb
(bad)
ss
out
dec
jecxz
or
jge
xor
lods
aaa
pop
push
jmp
mov
push
pushf
retf
xchg
pop
dec
add
inc
sbb
popa
jmp
stos
xor
sbb
pushf
jno
mov
mov
sbb
jle
jmp
inc
pop
inc
test
arpl
call
pop
push
test
mov
mov
popa
inc
xchg
xor
cmc
int
outs
addr16
shr
cmp
sti
aaa
jb
inc
mov
push
push
jno
ret
add
mov
ret
cmc
inc
adc
and
push
or
sbb
add
or
mov
bound
retf
inc
fidivr
jns
arpl
not
push
shl
test
shl
sbb
or
xchg
cmp
ret
pop
pop
loop
push
jmp
clc
std
jns
add
cmp
(bad)
sbb
popf
jbe
or
scas
pop
(bad)
cld
add
pop
enter
sub
and
sbb
pop
cmp
mov
fwait
mov
or
add
push
js
dec
fnstsw
xchg
inc
retf
adc
loope
and
dec
repnz
mov
add
xlat
out
int3
rol
movs
jns
sub
inc
cs
lds
cs
shr
clc
push
push
pop
out
test
das
and
and
ficomp
gs
xor
xchg
and
sub
jp
fisttp
adc
xchg
mov
pop
xor
fs
xchg
adc
ret
pusha
jge
lods
jg
sahf
(bad)
xor
mov
push
mov
mov
mov
sbb
mov
ret
lock
outs
imul
sub
out
clc
repz
or
adc
cwde
jnp
jno
xchg
retf
mov
ss
data16
jns
(bad)
push
jo
ds
pop
ds
in
inc
popf
and
pop
push
cmps
outs
inc
mov
jmp
es
in
in
mov
push
push
mov
dec
fwait
shl
xor
shl
mov
sahf
(bad)
xchg
fs
retf
mov
cdq
dec
loope
std
inc
cmp
mov
in
inc
loope
jbe
rcr
test
and
lods
lahf
test
sahf
jecxz
leave
fisttp
push
and
das
arpl
inc
adc
ins
cmp
popf
bound
jg
(bad)
movs
inc
stos
and
pop
inc
movs
push
jmp
enter
cwde
arpl
(bad)
mov
cmc
sbb
test
mov
jecxz
xchg
cmp
rol
adc
gs
push
sub
vminss
xor
push
mov
retf
scas
mov
sbb
inc
loopne
add
repz
je
sub
pop
imul
scas
pop
(bad)
adc
inc
push
or
xchg
xchg
(bad)
aam
pop
xchg
jmp
icebp
dec
add
dec
shr
mov
xchg
pop
or
loope
cmp
pop
xchg
xchg
cwde
in
mov
mov
mov
lea
dec
es
in
out
push
rol
add
(bad)
pop
add
lods
sub
cmps
inc
popf
jmp
add
or
inc
add
hlt
fs
mov
stos
xor
mov
pop
aaa
aas
fstp
mov
loopne
outs
push
ficom
(bad)
ins
cmps
loope
inc
enter
imul
cmp
pop
daa
int
xchg
leave
(bad)
cmp
ja
pop
jmp
push
dec
in
jmp
pop
cs
jg
movs
xor
bound
and
sbb
repz
sbb
daa
sbb
and
mov
jbe
inc
sub
push
xor
xor
(bad)
pushf
push
lahf
out
push
leave
pop
pusha
and
fistp
sahf
enter
xchg
test
lods
or
test
xor
inc
jae
stos
mov
adc
xor
lock
ins
loop
dec
int
lods
sub
loopne
arpl
xor
ja
je
retf
cs
pop
jecxz
add
stc
cmp
mov
mov
bound
push
aaa
retf
cdq
xor
dec
xor
rcr
xchg
ja
pop
cdq
mov
cmp
pushf
add
repz
xchg
ins
nop
cdq
cmps
mov
test
test
xchg
scas
test
pop
pop
adc
leave
retf
and
jnp
cmp
pop
mov
pop
jae
(bad)
xchg
sbb
cli
sbb
stc
adc
fmul
imul
ss
add
jae
lods
push
adc
or
sub
mov
call
pusha
cmps
dec
mov
test
loopne
xchg
push
cld
xchg
or
mov
cli
sti
mov
or
nop
push
pop
(bad)
loope
call
sahf
push
xor
sbb
je
xor
cwd
cmp
outs
xchg
jnp
pop
call
push
int3
mov
leave
fistp
inc
xor
sub
data16
lods
sub
inc
xchg
push
sub
sub
mov
adc
repz
push
outs
dec
fimul
xchg
push
in
xchg
xchg
push
(bad)
clc
mov
cli
scas
aad
mov
lahf
popf
mov
mov
mov
inc
and
xlat
test
jne
daa
add
dec
movs
xor
outs
div
jno
mov
xchg
xor
std
pop
jmp
inc
and
or
arpl
push
inc
scas
and
fs
mov
sub
fwait
outs
adc
inc
mov
jbe
gs
mov
mov
pop
xchg
idiv
dec
shr
mov
lds
test
pop
test
fyl2xp1
cmc
jmp
fs
mov
dec
pop
sub
(bad)
jmp
add
sbb
cmps
pop
push
imul
not
or
mov
add
sub
das
sar
movs
jl
mov
jle
xchg
mov
out
mov
enter
jle
ins
mov
inc
lahf
aam
imul
mov
nop
jg
xchg
pop
xor
inc
ja
cwde
dec
repnz
(bad)
adc
(bad)
lods
inc
cld
add
cmp
sti
inc
sbb
lods
lds
rcr
mov
jle
ja
mov
ds
mov
repnz
or
aad
inc
sahf
lods
(bad)
aaa
xor
cmp
jmp
jl
je
sub
cmps
cld
mov
retf
push
clc
(bad)
mov
push
stos
mov
cmps
fiadd
mov
mov
jo
push
(bad)
mov
aaa
inc
stos
xor
test
dec
mov
push
(bad)
sbb
std
inc
adc
loope
add
aas
nop
ins
repz
jns
outs
sbb
(bad)
sbb
xor
mov
pushf
sbb
xchg
hlt
mov
addr16
xchg
jbe
xchg
jge
stc
fdivr
rcl
mov
mov
mov
and
stos
outs
test
mov
and
inc
pop
sbb
adc
ss
xchg
xchg
lahf
inc
cmp
or
retf
add
call
pusha
xchg
sbb
mov
aas
mov
lods
scas
and
xor
rcr
std
inc
pop
dec
(bad)
xlat
jae
loop
ins
xchg
xchg
inc
daa
(bad)
idiv
mov
pop
mov
xor
lods
out
sbb
shr
in
imul
popa
push
pop
mov
xor
add
add
daa
mov
cmp
cmp
(bad)
pop
retf
dec
imul
xchg
movs
mov
add
ret
and
jo
mov
inc
cmps
repnz
push
push
pushf
hlt
dec
sahf
inc
pop
mov
xchg
sbb
xchg
mov
icebp
or
sub
int
jl
arpl
pop
pop
(bad)
xchg
mov
cmp
dec
clc
nop
das
mov
push
mov
addr16
pusha
adc
xor
xchg
xchg
out
call
add
jge
sub
mov
test
aad
scas
sub
push
scas
test
daa
mov
lods
test
fdiv
pop
addr16
lods
(bad)
retf
or
sbb
cwde
dec
jne
imul
pop
mov
fstp
dec
sbb
mov
jae
in
push
dec
and
or
mov
inc
mov
xor
mov
cs
jmp
jp
mov
out
popf
xchg
inc
add
rcl
mov
add
popa
inc
enter
dec
mov
(bad)
aaa
and
fxch
stos
and
pop
push
sub
outs
cdq
xor
xchg
int3
cmp
xlat
and
cmp
sbb
shr
jp
xchg
pop
pop
mov
inc
movs
mov
aas
add
sbb
movq
inc
out
cwde
jbe
cld
addr16
fsubr
sub
inc
stos
sti
sub
popf
dec
pop
mov
not
xor
fsub
cwde
(bad)
push
in
pop
clc
daa
sub
rep
jbe
adc
push
scas
push
push
test
mov
add
inc
repnz
add
inc
adc
xchg
cmp
dec
lahf
dec
adc
xchg
sub
fs
adc
neg
jns
and
pop
add
jecxz
push
clc
movs
test
arpl
ins
push
mov
shl
stos
stc
add
xor
outs
icebp
adc
dec
out
lock
sub
sub
xor
mov
xchg
pop
loop
sub
inc
clc
push
or
push
enter
inc
mov
pop
out
mov
jl
stos
sbb
repz
inc
sbb
mov
jno
retf
loopne
xchg
mov
cmp
lds
test
inc
(bad)
ret
pop
stc
(bad)
xchg
lods
std
arpl
adc
call
int
pusha
cli
xor
les
bound
add
jmp
push
repz
int3
cmc
or
add
sbb
mov
shr
jg
lods
outs
pop
xchg
dec
inc
nop
rol
cmp
pop
std
jp
inc
sahf
jno
les
push
out
adc
out
je
pop
xchg
sbb
in
(bad)
xchg
sbb
rcr
mov
stos
cmp
adc
(bad)
retf
add
jge
cs
pop
std
data16
out
mov
cld
out
and
call
or
pop
dec
lods
pop
and
add
mov
sbb
cmp
jmp
inc
jo
xchg
mov
xor
add
mov
scas
push
neg
in
mov
push
jae
ret
cmc
inc
(bad)
test
xchg
jne
sub
(bad)
aad
lock
imul
lea
mov
mov
inc
in
jmp
xchg
jp
pop
cmp
dec
cmovae
adc
dec
pop
mov
mov
movs
adc
push
dec
ror
sbb
aam
cmp
(bad)
fist
out
into
in
and
int3
sbb
mov
push
pop
xchg
nop
lea
xor
pop
dec
popf
test
or
pop
cwde
sbb
jp
sbb
push
(bad)
jbe
ja
mov
dec
leave
sub
xor
sbb
add
push
mov
cmps
xor
xor
or
div
xchg
dec
into
loop
(bad)
dec
add
xchg
pop
jmp
xchg
or
lock
xor
ja
leave
repnz
cld
ret
fistp
inc
sub
or
cmp
sbb
sbb
push
mov
cwde
lods
popf
inc
or
inc
in
sar
hlt
arpl
sbb
push
push
pop
add
or
mov
gs
stos
sbb
mov
inc
add
call
hlt
xchg
data16
stos
or
(bad)
out
add
ins
mov
(bad)
arpl
lahf
mov
pop
aam
repz
cmp
cwde
fcom
pop
int3
sbb
int
retf
add
pusha
and
fs
movs
mov
ret
fidivr
in
xor
add
add
cmp
add
jns
mov
pop
movs
rol
cli
out
ds
into
jb
outs
pop
sub
shl
mov
sub
not
fisubr
lods
movs
mov
aaa
shl
add
ins
jl
scas
xor
push
lds
add
sbb
arpl
adc
push
inc
mov
(bad)
int3
stos
add
repz
add
adc
inc
ss
daa
rcl
add
or
in
mov
les
push
inc
rcr
xchg
test
xlat
mov
or
call
mov
aas
ficomp
add
hlt
fdivp
loope
dec
sbb
fimul
sub
(bad)
int3
iret
and
arpl
sub
in
stos
mov
stc
add
inc
ret
js
aas
popf
pop
mov
cmps
sbb
or
sub
into
test
xor
cwde
cmc
mov
nop
std
jno
jbe
dec
adc
rcr
loop
jb
loop
pop
out
xchg
add
test
cli
dec
test
xchg
xor
test
gs
dec
fadd
repz
mov
jnp
imul
or
mov
sbb
cli
cmp
push
aam
imul
add
and
inc
pop
mov
inc
cmps
scas
sahf
push
sar
aad
jl
and
ret
in
push
or
mov
lods
cwde
movs
in
xor
mov
add
xchg
std
stc
retf
rol
imul
icebp
cmc
(bad)
pop
int
push
adc
jge
inc
ds
cmp
mov
sbb
jl
clc
push
pop
je
adc
outs
dec
cmps
jne
xchg
xor
scas
fdivr
cmp
or
(bad)
xlat
mov
xlat
inc
push
ins
mov
fbstp
xchg
inc
retf
xchg
or
rcr
mov
loope
stos
inc
jge
test
rcl
pushf
mov
retf
pop
pop
xor
xor
adc
popf
xor
xchg
mov
or
(bad)
call
ja
ficomp
das
add
ds
dec
js
jl
mov
jno
xchg
movs
cmp
push
aas
loope
lahf
cs
fcom
dec
add
movs
push
ret
jp
call
pop
pop
test
mov
movs
ror
jno
mov
sti
movs
(bad)
ret
icebp
xchg
inc
repz
inc
add
rcr
pop
les
inc
jbe
inc
or
mov
in
loop
leave
cmp
cmp
xor
jge
(bad)
and
add
icebp
mov
aam
je
lods
pop
shl
arpl
sbb
(bad)
rcl
shl
dec
(bad)
xchg
xchg
mov
push
repnz
jecxz
cmp
cli
xor
dec
pop
cs
std
jbe
and
cmp
xor
ja
jae
cmp
mov
and
scas
cmp
push
lods
jb
lahf
sub
cli
and
dec
cwde
into
mov
out
push
push
mov
js
in
mov
xor
std
test
inc
loop
test
(bad)
mov
test
jmp
and
push
and
jo
pop
scas
(bad)
scas
test
xchg
fidivr
(bad)
sbb
pusha
push
sti
dec
adc
sub
add
push
rcl
jb
movs
mov
aam
mov
sbb
test
cmps
test
mov
inc
retf
sub
les
xor
movs
mov
jmp
bound
aad
pop
cmp
int
jb
aas
inc
ss
aaa
imul
push
or
cmps
retf
mov
cs
push
mov
xchg
aad
push
inc
mov
push
jmp
ret
sub
call
ret
pusha
fcomp
je
ins
retf
inc
popf
jmp
jp
sar
mov
ror
popf
sub
xchg
xchg
cmps
jl
neg
jne
cmps
push
int3
push
(bad)
cmp
jge
sbb
sbb
add
xchg
xchg
lods
or
(bad)
jp
test
enter
add
sbb
sub
push
lods
jo
fidiv
xor
nop
mov
jne
sub
int
mov
cmc
adc
jle
push
xlat
(bad)
sti
popa
test
mov
lock
fcmovbe
inc
stos
imul
iret
out
retf
pop
fwait
pushf
inc
leave
and
ror
inc
pop
pop
mov
dec
popa
mov
retf
lods
scas
push
cmp
mov
push
push
inc
inc
sti
sub
add
gs
pop
retf
jl
fimul
aad
push
mov
mov
retf
fistp
aad
add
popf
dec
fcomp
mov
push
cli
(bad)
paddsw
pop
fisttp
mov
test
mov
xlat
push
pushf
xor
or
xor
ins
scas
or
lods
pop
and
in
cdq
test
call
inc
push
push
cmc
push
ss
push
pop
cwde
aas
sahf
ins
std
sbb
push
sbb
mov
jle
jmp
add
inc
pop
push
cdq
pop
call
mov
push
hlt
mov
cmp
mov
mov
xchg
xchg
ret
dec
repnz
ret
mov
imul
fiadd
xor
in
leave
jne
pop
popa
add
inc
xchg
sub
push
mov
add
add
int3
push
adc
loope
outs
pop
jno
jmp
mov
test
(bad)
ds
test
sbb
fcom
bound
pop
shl
dec
(bad)
adc
jmp
adc
pop
repnz
mov
gs
mov
(bad)
xchg
jbe
jnp
cmp
dec
int3
mov
and
mov
addr16
jl
fxch
mov
test
leave
repz
mov
inc
sub
sub
push
add
das
sti
sbb
inc
adc
jmp
jmp
loop
(bad)
sbb
inc
xchg
test
leave
mov
dec
enter
fwait
jg
std
ror
cmp
sub
mov
scas
xchg
jp
jae
cmp
into
jmp
pop
jnp
mov
gs
mov
shl
and
lock
arpl
inc
mov
add
cld
sbb
adc
pop
add
sbb
scas
xchg
inc
mov
popa
popa
mov
xchg
les
shr
push
(bad)
xchg
add
pop
loope
mov
add
fwait
mov
cs
dec
pop
lea
aaa
or
neg
jae
dec
push
sub
and
mov
retf
in
es
enter
ds
pop
adc
and
xchg
push
test
lea
xor
mov
outs
ret
icebp
test
in
inc
inc
fadd
xchg
inc
repz
push
adc
outs
mov
fs
jmp
jmp
stos
sub
jmp
out
retf
sbb
ss
and
mov
stos
das
adc
sub
jmp
inc
xor
adc
jecxz
mov
xchg
mov
cmps
xor
cmps
test
call
pushf
pop
icebp
(bad)
fsubr
icebp
mov
out
jp
(bad)
xor
neg
xchg
cmovno
fsub
fstenv
clc
jl
xor
es
cli
(bad)
pop
fst
js
inc
fiadd
sbb
lods
push
ds
mov
mov
pop
leave
jns
out
add
jmp
fdivr
add
sbb
ja
push
add
adc
test
inc
cdq
fld
fidivr
jae
pop
jmp
cmp
cmp
icebp
xchg
div
test
pop
xchg
xor
iret
loop
pop
mov
jnp
and
mov
test
sub
call
dec
lods
xchg
in
cmp
dec
mov
pop
out
sbb
mov
push
sahf
mov
dec
test
xchg
sbb
dec
push
xchg
outs
retf
gs
sub
hlt
lods
or
int3
sbb
test
adc
xor
(bad)
pop
je
xor
jnp
xor
loope
fld
add
or
cmp
mov
inc
bound
or
jns
rcr
aaa
enter
jbe
scas
aaa
(bad)
sub
outs
cmp
mov
retf
jmp
inc
add
lahf
pop
rcr
sti
pop
mov
or
sbb
idiv
setbe
loopne
icebp
cld
inc
inc
xchg
ret
inc
jecxz
test
adc
js
cmp
jnp
cmp
jl
push
cmp
mov
retf
repz
add
sub
dec
jae
jb
cmc
push
mov
neg
or
test
(bad)
xlat
retf
int
inc
sbb
loopne
mov
repz
inc
enter
(bad)
icebp
mov
fstp
clc
cwde
out
sar
out
and
dec
inc
inc
mov
pop
lock
dec
daa
cmp
cli
inc
inc
outs
mov
inc
pop
jb
pushf
lea
in
into
or
cmp
dec
or
pop
out
adc
xor
imul
sub
lods
xchg
sub
adc
out
cmps
pop
mov
push
pop
mov
inc
jmp
cwde
push
daa
shr
cmc
xor
mov
cmp
xchg
sbb
shl
xchg
cwde
dec
fwait
jle
dec
or
(bad)
(bad)
pop
int
inc
cmp
adc
das
test
test
add
inc
xchg
loope
mov
inc
mov
push
jp
and
rcl
cdq
ins
cmp
(bad)
or
stos
cwde
or
inc
imul
sahf
gs
sahf
je
loopne
push
in
imul
sub
push
lods
mov
jb
xchg
nop
sbb
xlat
mov
mov
ficom
pop
and
std
sbb
dec
mov
xor
dec
mov
mov
fs
adc
ret
pop
or
or
xor
and
pop
mov
rcr
nop
cmovbe
xchg
not
and
inc
sub
and
jge
jecxz
push
xchg
mov
jmp
loope
shl
mov
xchg
add
rol
mov
xor
aas
adc
rcl
imul
sub
sahf
push
push
jno
fst
sbb
jmp
push
inc
add
das
gs
inc
ins
cwde
push
push
mov
outs
mov
and
call
push
lock
mov
mov
mov
into
mov
cmp
sti
div
in
lods
mov
pop
jl
mov
loop
inc
bound
xor
leave
push
popf
inc
push
push
outs
mov
ja
push
sub
jge
nop
cmp
arpl
or
mov
push
push
(bad)
jnp
mov
inc
lea
outs
les
jns
jns
and
aas
mov
mov
popf
je
outs
mov
movs
jmp
fsub
sahf
xchg
mov
add
fucomp
not
arpl
mov
xor
sbb
clc
retf
push
jnp
push
sbb
inc
cli
dec
pop
jle
lahf
mov
sbb
or
inc
mov
xor
jp
test
mov
test
int3
cmc
movs
or
fldenv
pop
jb
fnsave
scas
loop
test
out
push
(bad)
out
fstp
mov
aam
test
cmps
enter
jmp
repnz
cdq
dec
xchg
push
loope
mov
sbb
mov
inc
or
sahf
test
loopne
jge
std
push
push
push
inc
out
and
inc
outs
xor
pop
enter
je
addr16
mov
mov
loop
test
mov
pusha
fild
ja
and
mov
js
stos
call
xor
enter
add
stos
push
popfw
(bad)
mov
xor
xchg
mov
aaa
xchg
pop
(bad)
cmp
sub
fdivp
dec
fbld
pop
ja
pushf
or
sbb
stos
or
cmps
sbb
call
bound
xor
cmp
xor
jle
jae
mov
mov
xor
fld
pop
jo
jge
mov
cmp
xchg
jecxz
add
out
sub
retf
inc
(bad)
mov
fsubr
popf
jns
ss
sub
icebp
mov
addr16
inc
jl
cdq
sub
popf
outs
and
(bad)
mov
xor
rcl
sbb
retf
push
pop
add
sbb
loop
scas
ja
jo
ficomp
mov
xor
pop
ret
enter
mov
sbb
jnp
imul
int3
cwde
or
mov
mov
mov
inc
jnp
or
lock
dec
xchg
xchg
sub
jg
es
pop
rcl
jbe
jae
adc
or
or
dec
jmp
pop
daa
in
xor
push
xor
aad
inc
jmp
pushf
ds
push
pop
div
mov
mov
fs
bound
mov
rcr
xchg
mov
add
lds
test
bound
test
fsubr
test
out
sbb
ret
jae
push
gs
inc
idiv
es
icebp
ret
test
jp
aad
mov
inc
stc
inc
adc
push
(bad)
push
xchg
imul
add
sahf
add
daa
cmp
dec
sbb
mov
push
ret
sub
(bad)
mov
mov
scas
sbb
xchg
outs
push
(bad)
(bad)
retf
clc
popa
jl
mov
jmp
int3
push
and
repnz
fs
sbb
and
fisubr
dec
pushf
arpl
add
enter
dec
jbe
inc
mov
popa
test
shr
sti
add
jnp
test
movs
bound
cmp
mov
je
pusha
add
push
test
call
xchg
add
ins
hlt
cmps
xchg
icebp
dec
sub
mov
stos
cld
aad
arpl
retf
push
int3
fcmovu
and
pop
mov
inc
cmp
(bad)
popf
lea
mov
leave
idiv
jle
(bad)
xor
sub
mov
jmp
add
xor
pop
xchg
into
test
mov
jae
stos
dec
xlat
mov
gs
xchg
ja
mov
cmps
jo
sbb
cdq
mov
push
popf
jns
mov
mov
lods
ret
jns
mov
cld
sbb
(bad)
sti
hlt
dec
fadd
popa
or
mov
dec
push
or
and
cmp
or
cmp
pop
ja
loop
lahf
add
sbb
push
aaa
xor
shr
out
cmps
sahf
push
iret
mov
jge
ins
fld
mov
xchg
adc
out
push
iret
rcl
mov
push
pop
bound
xlat
fdivp
xlat
(bad)
outs
bound
cmp
xlat
int
lds
sub
mov
push
shl
fucomp
cmp
xor
add
out
js
mov
mov
pushf
xor
retf
mov
xchg
std
add
push
mov
adc
ret
stos
push
rcr
mov
fs
test
fxam
gs
mov
imul
sub
jmp
dec
xor
jp
pop
cmp
mov
fild
(bad)
and
ds
pop
inc
xor
push
leave
adc
imul
or
xchg
cmp
mov
add
inc
dec
mov
lds
inc
mov
mov
dec
mov
xchg
js
rcl
mov
retf
not
(bad)
dec
test
mov
and
jmp
mov
(bad)
sub
sbb
inc
enter
fstp
ds
adc
mov
rcl
lahf
ficomp
shl
adc
cmp
sbb
sbb
call
and
scas
cdq
sbb
jno
sub
in
cdq
dec
in
mov
add
(bad)
lods
add
add
neg
leave
adc
push
push
mov
fld
xchg
out
rcr
inc
retf
sbb
test
or
ins
fnsave
jl
xor
add
cmp
sbb
int3
pop
adc
mov
sbb
sbb
push
cmp
std
jno
adc
das
xchg
jecxz
mul
jbe
pop
cmc
xchg
lock
mov
loope
iret
mov
and
jmp
test
sub
outs
adc
test
mov
dec
push
dec
sub
and
add
addr16
inc
mov
sahf
scas
mov
leave
rol
jmp
push
aaa
loop
push
inc
ror
inc
dec
movs
ja
mov
push
out
cwde
in
adc
outs
iret
into
popf
sbb
mov
fisubr
pop
mov
inc
movs
les
sub
mov
icebp
xchg
mov
pop
mov
mov
pop
iret
icebp
(bad)
jmp
stos
(bad)
add
cmc
into
inc
fisub
popa
pusha
cmp
ins
and
jp
mov
ror
std
add
rcr
inc
(bad)
xor
dec
and
xor
jg
dec
addr16
dec
add
mov
outs
pop
sbb
cld
mov
rcr
neg
inc
and
outs
mov
add
addr16
ror
test
inc
lods
mov
das
sbb
xchg
loop
addr16
aam
pop
dec
adc
dec
out
jp
fs
js
or
sub
dec
out
jecxz
ret
push
pop
cmp
cmp
and
sub
mov
nop
sub
mov
dec
hlt
rcr
fstp
dec
inc
mov
and
inc
push
mul
mov
fwait
sbb
scas
outs
gs
leave
xchg
sbb
cmc
push
pop
out
xor
int3
or
inc
mov
test
and
adc
or
mov
add
fcmovne
gs
or
adc
dec
xor
jbe
push
addr16
add
inc
test
cmp
leave
mov
(bad)
adc
call
in
push
out
call
xchg
push
movs
test
les
jg
jecxz
cmc
push
add
lock
fld1
jl
jecxz
dec
xchg
je
add
stos
jnp
push
jge
dec
mov
pop
pusha
xchg
imul
call
add
pop
int3
int3
push
mov
pop
inc
pop
add
sbb
or
mov
mov
popf
push
add
push
mov
dec
scas
stc
pop
shl
jno
jb
movs
sar
lahf
in
or
in
sbb
aad
pop
jmp
imul
pop
outs
mov
icebp
xor
idiv
push
loop
pop
int
cmps
push
aas
xor
idiv
imul
mov
xor
jae
movs
mov
aam
mov
jo
pusha
xor
and
jnp
sbb
inc
fadd
mov
mov
enter
mov
inc
and
pop
popf
mov
xchg
nop
imul
inc
mov
mov
dec
rcr
adc
mov
mov
cli
xor
or
aam
gs
adc
pop
js
ins
sbb
dec
call
and
pop
iret
shl
mov
xor
adc
add
mov
bound
sub
popf
scas
mov
xchg
jp
inc
cmc
xchg
sahf
push
loope
out
out
mov
std
jp
dec
test
fadd
sbb
pop
fs
cdq
stos
ds
loop
adc
mov
dec
and
daa
xchg
xor
jl
cs
cmps
xchg
push
pop
enter
xor
inc
cmps
daa
gs
imul
mov
mov
mov
mov
add
cmp
scas
in
scas
mov
fldcw
pusha
mov
pop
mov
xchg
push
pop
out
repnz
(bad)
sbb
mov
add
sti
lock
loopne
inc
mov
in
or
jo
sbb
dec
mov
inc
and
mov
and
pop
iret
loope
(bad)
shl
dec
push
fcomp
fs
mov
pop
jne
ins
cmp
push
shr
(bad)
jge
jg
jno
sbb
call
mov
or
ror
lods
icebp
rcr
in
stos
add
ffree
mov
out
test
sub
push
pop
sbb
out
push
out
pop
pop
cmp
cmp
and
ret
or
adc
fdiv
jp
jmp
inc
shl
retf
nop
pop
cmp
add
inc
push
outs
test
out
scas
and
push
push
lods
sub
pushf
out
dec
xchg
xchg
dec
and
shl
or
imul
mov
jns
or
leave
cmp
add
xchg
dec
cmps
sbb
ret
push
std
cmp
sub
push
fwait
jno
push
scas
cmps
xchg
iret
push
sub
(bad)
jmp
gs
jo
sahf
push
lods
sub
sbb
xchg
pop
push
sahf
test
jno
retf
stos
xor
outs
ja
sub
scas
hlt
cmp
xchg
add
retf
push
mov
rcr
pop
loopne
mov
es
fdivr
mov
jb
inc
cmps
xor
adc
shl
jle
ss
cmp
inc
mov
push
ins
in
xchg
nop
mov
pop
jmp
inc
pop
jle
into
add
push
or
cmp
addr16
mov
jb
mov
add
xchg
push
and
mov
cmp
mov
out
xor
fnsave
pushf
mov
loopne
test
(bad)
push
icebp
or
xor
stc
mov
xchg
cmp
aas
mov
push
pushf
cwde
and
fcomp
cmps
lock
push
inc
add
pop
and
and
lahf
sbb
or
adc
mov
or
add
aaa
mov
pop
loope
jg
xchg
fdivr
cmps
outs
rcr
nop
jp
push
imul
pusha
jne
nop
mov
pop
shl
xchg
test
xchg
push
fisub
stos
pop
repz
or
mov
inc
pop
mov
movs
aam
cmp
push
icebp
pop
push
inc
cmp
add
jbe
sbb
outs
jb
ja
adc
mov
pop
inc
and
ffreep
mov
ret
gs
jno
imul
jmp
pop
or
mov
(bad)
stos
sahf
mov
movs
jg
loop
mov
xchg
jmp
inc
inc
jmp
pop
push
mov
call
add
ficomp
pop
and
pushf
into
mov
sbb
fs
fidivr
mov
pop
inc
imul
pop
and
inc
ja
dec
inc
mov
in
inc
adc
adc
add
mov
std
test
cmp
fnsave
xor
les
lea
jae
pushf
mov
movs
test
aam
clc
xlat
dec
sub
jecxz
stos
and
jno
xor
mov
mov
iret
cs
ins
sar
mov
aaa
leave
and
add
aaa
xchg
sub
movs
jge
rcl
popa
cmps
test
cwde
out
test
xchg
out
push
retf
inc
shl
rcr
xchg
cmc
mov
xchg
movs
dec
pop
fsubp
cmps
or
jne
xchg
mov
push
xchg
mov
test
scas
call
sub
(bad)
cmp
pop
and
or
cmp
xor
jmp
outs
jb
sub
ins
bound
add
retf
xor
mov
loope
jp
mov
dec
and
add
out
adc
dec
mul
pop
push
movs
mov
sar
cwde
xchg
dec
ret
ja
push
or
iret
leave
test
jbe
test
push
cld
cmp
pushf
(bad)
mov
jecxz
add
fist
pop
add
out
sbb
xor
or
movs
push
ins
cwde
xchg
(bad)
call
xchg
jl
jl
and
jecxz
mov
adc
sti
jl
mov
ins
js
cmps
test
inc
and
int3
shl
in
mov
jns
adc
pusha
fild
jge
mov
push
cmp
xchg
push
ror
add
pop
push
push
add
push
mov
mov
add
adc
sbb
imul
inc
les
ins
mov
cld
iret
jecxz
mov
xchg
push
(bad)
cmps
push
xor
sbb
mov
inc
mov
shl
inc
push
jg
scas
push
jecxz
retf
xor
imul
push
retf
sbb
js
cmovs
mov
jae
mov
int3
sub
fimul
leave
and
add
add
pop
or
xchg
jg
pop
dec
sbb
pop
jl
(bad)
in
adc
loopne
in
mov
jle
lds
mov
ins
pushf
(bad)
mov
lock
dec
out
fild
test
in
dec
call
and
xlat
cmp
mov
inc
int
sbb
leave
inc
jl
es
push
lods
push
jle
xor
jae
ret
cdq
mov
sbb
sbb
loope
mov
xor
adc
fbld
and
lahf
bound
push
arpl
test
add
je
shr
(bad)
xchg
mov
inc
xchg
stos
fs
les
adc
xor
out
out
cmc
xor
xchg
test
loope
call
fsubr
inc
out
pusha
cs
les
dec
jp
jo
pop
xchg
mov
mov
sbb
je
out
pop
mov
inc
loop
cmp
fwait
push
lods
xor
push
lea
outs
das
push
pop
jecxz
stos
xor
inc
arpl
inc
cmc
mov
dec
xchg
movs
inc
aam
pop
sub
(bad)
mov
xchg
inc
cmc
mov
push
inc
sbb
mov
fnstcw
sbb
inc
rcl
or
aam
cmp
push
push
sbb
addr16
pop
mov
lahf
lds
jecxz
jle
hlt
sbb
rcl
jo
fwait
sub
add
rcl
inc
in
cwde
jno
push
dec
in
lods
mov
fst
hlt
scas
loop
mov
mov
(bad)
xchg
push
sub
fsub
(bad)
push
mov
stos
push
mov
popa
xchg
cmps
ins
in
out
cmp
ret
inc
retf
sub
jge
ins
sub
xchg
mov
jnp
jmp
adc
add
xor
xor
lods
sbb
mov
pusha
mov
xor
out
mov
jmp
mov
xor
sbb
ret
mov
mov
add
add
jmp
popf
dec
in
push
(bad)
aaa
cmp
clc
int3
mul
pop
sub
pop
cwde
inc
sbb
nop
into
mov
(bad)
or
mov
dec
pop
cmps
dec
imul
shl
adc
arpl
xor
mov
pop
inc
pusha
mov
xchg
popa
jecxz
mov
adc
rol
mov
pop
xchg
xchg
stc
jmp
pop
sbb
icebp
cs
jo
inc
push
add
jno
fs
les
jmp
jns
call
cmp
or
sahf
pop
pop
cmps
cmp
xor
push
cmp
mov
pop
rcr
and
inc
xchg
in
mov
add
retf
repz
push
nop
mov
inc
fwait
(bad)
mov
(bad)
retf
pop
mov
jo
das
int3
sub
test
jo
inc
shl
dec
adc
mov
retf
popa
cld
stc
push
mov
aas
stc
inc
xor
mov
adc
jnp
sub
(bad)
nop
cdq
cld
imul
xor
js
test
rcr
out
movs
ja
mov
stos
ja
imul
pop
mov
mov
stos
ror
ds
sbb
sbb
iret
loop
pushf
and
pop
cmp
cmps
inc
inc
outs
call
inc
int3
in
and
pop
fadd
je
or
popa
inc
ret
fmul
not
ds
aaa
mov
jp
mov
popf
shr
enter
loop
pop
out
mov
in
jl
and
mov
and
cli
test
mov
fistp
cmp
mov
sbb
test
push
sub
mov
xor
lock
ret
mov
inc
popa
push
dec
loope
adc
sub
jae
push
fdivr
inc
mov
xor
repz
or
scas
jge
mov
popf
or
cwde
fs
fisub
mov
inc
push
loopne
mov
pop
(bad)
out
jmp
mov
das
inc
or
nop
xor
cmp
xor
retf
(bad)
push
hlt
push
mov
inc
cli
sbb
add
ds
pop
jno
js
rol
jle
scas
stc
sub
push
aas
xchg
fadd
clc
push
jo
mov
loop
(bad)
dec
jmp
cmps
inc
or
std
xchg
pop
iret
jp
cdq
lods
mov
mov
std
xchg
mov
sar
and
cli
call
push
add
or
js
xor
jbe
lds
clc
mov
je
loopne
push
jns
cmp
ins
push
mov
pop
in
mov
fucomi
adc
outs
popa
mov
jae
into
xor
addr16
idiv
sub
data16
fidiv
in
xchg
mov
add
aam
mov
jb
pop
ss
call
pop
inc
cs
or
scas
push
or
mov
aam
leave
cli
sub
idiv
jg
mov
sbb
jo
xchg
je
mov
inc
lods
xlat
cld
or
sbb
idiv
fbstp
jle
imul
int
inc
sar
adc
push
xchg
neg
into
dec
mov
cld
pusha
sbb
add
mov
clc
jg
dec
pop
pop
repnz
inc
pop
pusha
jns
push
inc
jbe
xor
stos
xchg
xchg
aas
cmp
sbb
repnz
out
dec
push
add
inc
push
cmp
jae
jne
mov
sbb
daa
and
fst
loop
dec
and
pop
mov
lahf
push
in
adc
stos
push
mov
sbb
pmuludq
adc
jg
mov
xor
inc
out
sub
(bad)
into
mul
ret
jge
lea
sbb
push
aaa
jge
movs
enter
retf
shl
xchg
add
cmp
sbb
jb
cmp
pop
scas
ds
sbb
fs
fst
cwde
rol
call
std
push
mov
jl
sub
mov
dec
mov
cwde
push
push
fninit
hlt
add
sbb
rol
add
mov
test
push
sti
dec
cld
cmp
inc
rol
and
addr16
jne
jne
jle
xchg
fwait
mov
and
inc
out
mov
sti
je
ja
cmps
dec
aas
jae
daa
mov
mov
les
mov
inc
mov
cmp
neg
cli
dec
pop
je
outs
in
shr
repnz
xchg
ja
not
lahf
sub
mov
xor
scas
adc
fadd
icebp
stc
rcr
mov
push
xor
scas
imul
sbb
mov
push
aas
pop
mov
sub
jg
into
sbb
xor
sbb
or
and
sbb
pusha
stos
mov
add
dec
int3
cld
test
into
mov
inc
popa
inc
mov
jge
mov
add
call
push
test
mov
push
in
mul
mov
stos
(bad)
inc
dec
mov
cli
push
inc
aaa
rcl
bnd
or
es
adc
cwde
mov
icebp
imul
jp
je
cmps
add
mov
dec
rol
mov
outs
in
mov
xor
sub
mov
xor
dec
jae
popa
xlat
rcl
mov
mov
add
pop
sti
lods
(bad)
pop
ret
sbb
xchg
leave
fisub
scas
mov
cmp
loope
in
and
xor
cmp
xor
inc
mov
shr
sahf
mov
xchg
out
je
inc
and
and
add
test
sbb
cmp
stos
ds
enter
pop
jno
pop
(bad)
movs
fmul
mov
out
pop
push
call
ja
test
pop
out
mov
add
cld
mov
jecxz
outs
lods
mov
xchg
imul
out
rcr
jge
cmp
sahf
push
pop
or
add
push
(bad)
jl
into
jle
push
and
adc
mov
inc
dec
mov
pusha
jmp
xchg
pop
push
rcr
and
inc
ja
sub
mov
push
in
cmps
pop
nop
mov
xchg
and
inc
mov
cmps
imul
in
in
mov
scas
outs
xchg
and
in
fsub
adc
inc
mov
pushf
lea
(bad)
sub
or
adc
or
and
jle
mov
dec
scas
xchg
sti
push
(bad)
xchg
sahf
pusha
aam
in
xchg
repnz
in
adc
shl
retf
xchg
mov
inc
in
mov
mov
cwde
cdq
jns
je
ss
cmp
out
cmc
push
lock
dec
or
push
inc
or
pop
rcr
fwait
nop
cmp
rcl
jb
(bad)
cmp
add
ds
js
dec
add
jne
pop
addr16
cmp
stc
arpl
dec
ins
inc
fwait
sub
xchg
dec
test
call
cmc
nop
adc
sbb
sbb
mov
cmp
fistp
sub
sbb
push
shl
pusha
mov
dec
dec
in
add
sub
les
fninit
arpl
inc
les
add
sub
push
adc
and
lods
pop
inc
and
cld
(bad)
mov
mov
jne
xchg
inc
aam
shl
mov
sub
mov
mov
xchg
adc
inc
jl
mov
jmp
scas
push
and
dec
sub
rcr
leave
and
or
sbb
outs
not
pusha
mov
int3
scas
or
out
and
mov
push
cli
inc
push
pop
sysret
mov
pop
jne
dec
add
xchg
sbb
cmp
sti
stos
cs
jmp
jmp
push
lods
outs
enter
pushf
frstor
jmp
xchg
cmps
enter
outs
nop
mov
(bad)
cmc
repz
aam
in
fimul
dec
out
shr
sbb
or
fwait
cmp
mov
in
leave
and
sbb
xor
adc
push
push
fstp
xor
mov
arpl
out
jmp
fistp
jl
push
test
ror
mov
jmp
int3
outs
mov
mov
popf
aas
adc
jmp
lods
outs
leave
jg
cmp
repnz
loop
cwde
adc
and
dec
push
dec
icebp
sahf
int
or
iret
sbb
aam
push
sub
add
js
push
xchg
sub
test
mov
(bad)
sbb
pop
out
call
gs
inc
idiv
mov
push
jmp
pop
cmc
test
scas
pop
xchg
mov
(bad)
arpl
xchg
jecxz
dec
call
clc
in
push
nop
add
push
mov
jl
xor
push
(bad)
call
movs
jecxz
inc
sbb
fmul
or
pop
mov
xchg
or
pop
jae
jae
sub
adc
test
jb
imul
repz
mov
mov
mov
xchg
nop
mov
retf
fcomp
out
mov
out
push
icebp
adc
or
stc
out
and
push
inc
and
cmp
mov
lahf
xchg
mov
int3
out
and
mov
pop
or
push
sbb
push
mov
inc
lahf
pop
aaa
xchg
je
mov
outs
add
mov
sar
push
add
and
loop
jne
pop
call
pop
in
xchg
not
inc
in
sar
enter
adc
cs
div
cmp
es
mov
push
jne
pushf
scas
stos
adc
into
dec
out
mov
mov
cmp
punpcklwd
pop
dec
cdq
pop
sbb
test
jmp
mov
addr16
mov
pushf
xchg
mov
xchg
dec
psubsw
cmc
sub
sahf
cli
pop
lods
pusha
inc
test
nop
sbb
enter
xchg
mov
dec
fldcw
add
dec
jl
adc
pop
mov
je
jp
sub
in
jl
sar
jp
int
add
xor
and
jl
mov
ins
stos
test
out
sahf
and
xchg
push
fld
je
dec
(bad)
mov
mov
xor
shr
mov
jns
xor
in
push
jl
aaa
pop
adc
(bad)
mov
iret
pop
push
dec
movs
js
push
mov
stos
xchg
or
mov
mov
ins
inc
inc
mov
sbb
and
fisttp
and
mov
loop
movs
pop
xchg
hlt
imul
inc
jecxz
cli
jb
aad
outs
loopne
jnp
mov
xor
scas
hlt
das
call
and
arpl
aad
xchg
pop
lods
cmp
pop
fsubp
cld
jl
xor
sub
xor
add
ret
sbb
jbe
(bad)
fs
das
jp
sub
adc
ins
sub
lea
hlt
loope
mov
inc
xchg
jnp
sub
xor
mov
cmps
jbe
in
push
clc
in
jne
dec
scas
mov
ins
dec
xchg
cmps
mov
mov
in
stos
jb
push
ror
cmp
ror
rcr
daa
xor
pop
adc
cwde
cmp
retf
push
pushf
jmp
fisttp
jmp
or
ins
mov
push
xchg
mov
and
(bad)
out
and
sbb
mov
pop
xchg
cld
xchg
inc
leave
mov
test
test
in
mov
xchg
add
hlt
leave
xchg
dec
call
cld
shl
and
jo
push
inc
jo
push
dec
in
xchg
mov
or
in
(bad)
(bad)
cld
arpl
and
sub
pusha
sub
mov
mov
rol
rcl
stos
sbb
cwde
(bad)
adc
push
pop
jmp
mov
(bad)
stc
sbb
inc
push
inc
fwait
arpl
lds
dec
iret
cdq
imul
movs
sti
mov
je
nop
mov
add
xchg
out
test
pop
mov
push
push
daa
repnz
jle
mov
je
fwait
inc
sub
lods
mov
cmps
jle
(bad)
sbb
push
(bad)
aas
adc
sbb
rcr
pushf
dec
cmp
cdq
or
mov
lock
sub
dec
std
iret
loopne
mov
movs
jge
cmps
fs
shr
test
daa
mov
div
(bad)
(bad)
jno
xchg
mov
dec
aas
push
out
(bad)
jmp
mov
push
add
xchg
mov
popf
push
push
xlat
ins
(bad)
fcomp
rcr
jne
and
push
xor
add
aaa
cwde
xor
inc
arpl
add
ins
(bad)
int
add
pop
jnp
(bad)
xchg
leave
xor
mov
mov
(bad)
imul
add
add
fld
data16
fwait
gs
xor
cmp
dec
into
jmp
jge
jo
cmp
inc
test
inc
rcr
in
add
adc
adc
es
out
imul
push
lods
aas
data16
mov
out
cdq
pop
int
push
in
push
pop
lahf
arpl
xchg
sbb
cmps
inc
xchg
stos
pop
and
aam
lea
jge
call
test
in
pop
mov
mov
sub
fwait
sbb
inc
ins
idiv
pop
inc
mov
cli
sbb
and
push
pop
jnp
int
pop
dec
cmp
and
sbb
pop
and
lods
pushf
or
adc
scas
mov
mov
sbb
inc
in
cmc
bound
lahf
inc
add
(bad)
stos
sete
loope
loop
nop
push
ja
ret
mov
sbb
cmp
stos
jno
jle
xor
retf
and
dec
fidiv
dec
arpl
cwde
stos
mov
repz
sub
xor
or
call
jae
stos
push
or
cmps
push
push
push
loopne
test
icebp
jp
inc
nop
je
call
ret
xchg
imul
call
(bad)
jl
in
popf
mov
and
xchg
stos
scas
dec
enter
push
cs
retf
clc
(bad)
in
pop
arpl
test
dec
inc
cld
push
add
xchg
mov
shr
mov
inc
out
xor
push
xchg
das
call
inc
xchg
push
mov
sub
leave
mov
cwde
sbb
sub
jnp
mov
dec
mov
test
call
in
adc
repnz
js
movs
lds
in
sar
mov
fsubr
pop
push
(bad)
in
in
js
inc
jb
dec
mov
push
add
mov
neg
lock
pop
je
out
inc
add
adc
and
adc
cmps
adc
mov
lods
sub
pop
push
mov
inc
dec
call
leave
mov
popf
pop
xor
mov
xchg
push
inc
jecxz
popf
outs
add
pop
pop
cmc
or
sub
retf
sti
(bad)
add
cmp
push
add
lds
in
into
add
inc
fist
cmp
pop
lea
sar
inc
add
sbb
mov
cmp
sti
call
rol
je
outs
add
fwait
inc
xchg
mov
cmp
mov
mul
add
fcomp
mov
jecxz
loope
pop
push
mov
xor
sub
in
xor
xor
movs
jns
jl
test
test
sbb
jl
mov
clc
jg
jp
mov
sub
xchg
or
pop
and
sti
cs
push
inc
in
mov
mov
inc
js
inc
(bad)
mov
jae
(bad)
mov
(bad)
xchg
jl
(bad)
fsub
or
mov
repz
in
dec
xchg
(bad)
xor
ja
dec
or
and
xor
ss
inc
mov
rcr
out
in
ds
(bad)
jae
fs
inc
sub
inc
cwde
pop
out
push
ficomp
mov
clc
xor
lods
cwde
add
jbe
fdivr
mov
test
rcl
mov
out
pop
xchg
pop
jo
mov
icebp
repnz
ret
mov
push
xchg
push
stc
dec
cmp
ret
mov
push
out
inc
ja
sahf
xor
xor
xchg
add
int3
std
sub
jae
frstor
adc
sbb
push
mov
inc
mov
adc
out
aaa
mov
inc
push
adc
mov
pop
out
mov
sbb
fidiv
sub
es
rol
adc
sbb
mov
pop
push
pusha
popf
imul
push
or
mov
mov
cmp
dec
cld
jmp
dec
pop
aas
std
aas
ins
add
and
dec
js
dec
add
mov
push
push
in
mov
shl
inc
xchg
jg
mov
jmp
pop
jmp
sahf
mov
clflush
(bad)
std
les
and
push
dec
leave
into
idiv
inc
or
mov
bound
movs
(bad)
mov
cs
cmp
addr16
sbb
push
unpckhps
push
xchg
and
movs
call
xchg
pop
pop
jns
imul
sahf
jb
(bad)
mov
and
jmp
adc
pop
scas
cwde
xchg
mov
(bad)
xchg
cdq
jl
lahf
scas
ins
icebp
push
fcom
or
iret
fxch
jne
add
cmp
or
xchg
inc
push
pop
nop
fnstsw
dec
(bad)
sbb
mov
xor
les
nop
inc
sbb
add
mov
ins
push
and
aam
cmp
jbe
jae
jb
popf
adc
sahf
inc
xchg
mov
mov
int
fwait
(bad)
(bad)
or
ins
pop
mov
in
fsubr
mov
fidivr
add
ror
dec
es
call
inc
mov
lahf
lea
push
inc
repnz
pop
fbstp
and
ss
mov
jg
mov
push
(bad)
fsub
xor
sahf
and
and
inc
test
xchg
dec
(bad)
nop
push
or
clc
hlt
xor
fidiv
mov
hlt
and
cld
mov
repz
mov
push
push
or
inc
dec
or
lods
sbb
inc
mov
mov
mov
inc
xlat
jbe
repnz
pop
sbb
sub
daa
aaa
sahf
or
popf
push
repz
inc
das
inc
enter
rol
jne
fs
js
sub
movs
in
xor
dec
call
fiadd
cmps
loop
cmp
mov
test
xchg
mov
sbb
adc
in
pop
fld
ja
mov
xor
push
cmps
xchg
mov
xchg
hlt
add
rol
adc
xor
jbe
push
arpl
inc
movs
sar
xor
pop
xor
stos
xchg
cmp
ret
dec
dec
jbe
arpl
mov
dec
out
xchg
dec
jmp
rol
mov
sbb
les
mov
xlat
dec
pop
xchg
fmul
push
int
daa
or
mov
sub
aas
jne
jnp
pop
dec
jno
xor
pop
(bad)
ret
aas
pop
(bad)
dec
out
lock
loopne
pop
jns
stc
xor
jp
cmp
push
or
mov
fcom
mov
loopne
outs
cmp
jge
mov
jne
mov
xchg
ss
imul
mov
pop
and
cwde
cmps
cld
fmul
mov
imul
pop
push
mov
loop
cdq
or
adc
mov
stos
xchg
sahf
xor
sub
icebp
pusha
outs
pop
adc
xor
add
push
out
adc
pop
mov
push
pop
stc
jmp
sbb
pop
push
fnstcw
iret
sar
xchg
jmp
adc
hlt
std
or
dec
mov
mov
jne
xchg
hlt
add
scas
fstp
push
sbb
aam
int3
push
add
repz
jae
cmp
cs
data16
mov
and
mov
stc
sbb
int3
pop
push
gs
inc
ds
sub
mov
inc
fs
scas
add
xchg
fwait
lock
iret
loopne
sub
cwde
dec
in
repnz
test
sub
(bad)
xchg
sub
jmp
xchg
add
mov
mov
std
dec
jne
test
jp
pop
aaa
cmp
leave
jmp
js
scas
pop
js
mov
jno
ret
mov
xor
retf
into
sbb
adc
add
add
sahf
mov
fwait
pop
sbb
and
or
scas
cmp
rcl
popa
and
dec
(bad)
pop
imul
(bad)
scas
pop
retf
inc
lock
pop
lea
loope
into
(bad)
cmp
lea
ret
dec
cld
adc
cmp
jmp
cmp
imul
sahf
ds
inc
fimul
ins
jb
int
xor
adc
push
mov
out
jge
mov
and
xchg
sbb
inc
call
stc
pop
dec
popa
lds
popf
add
mov
mov
or
stc
lahf
rcr
xchg
mov
pop
push
xchg
ret
test
cmc
(bad)
dec
dec
mov
xor
outs
mov
sub
push
out
sbb
cmp
dec
pop
dec
mov
(bad)
sbb
add
std
add
push
es
and
movs
dec
or
std
or
or
clc
fadd
fst
cwde
jp
popf
out
out
xchg
push
int
gs
(bad)
xchg
xchg
inc
mov
mov
pop
xchg
mov
repz
aas
cmc
cli
cdq
rcl
jnp
mov
aad
pop
sbb
neg
jnp
sbb
outs
fdivr
pop
inc
mov
or
vsqrtpd
inc
in
adc
mov
test
mov
jns
stos
mov
dec
aaa
push
fmul
jmp
out
pop
push
mov
shl
dec
aam
inc
sbb
repz
mov
inc
cmps
stos
repz
mov
pop
scas
cmp
outs
lds
cmp
repnz
add
sbb
or
xchg
mov
lods
pop
int
jge
std
je
jl
stc
sbb
pop
sbb
and
push
test
ins
mov
cmp
fstp
pop
add
shl
push
mov
push
std
sti
pop
dec
cmps
stos
mov
or
pop
fs
xchg
ds
xlat
jns
and
cs
sti
sar
arpl
fs
jne
push
in
push
pop
mov
sahf
mov
retf
ja
mov
mov
cmp
sub
ss
inc
lahf
cmp
fwait
xchg
and
xor
(bad)
mov
xchg
pop
lahf
push
xchg
arpl
sti
add
cmps
pop
jg
fisubr
div
test
jmp
lds
sbb
inc
pop
add
dec
mov
pushf
iret
mov
pop
enter
add
(bad)
inc
sbb
push
inc
and
jae
sbb
pop
inc
pushf
xor
test
jns
fdivr
out
dec
inc
fst
scas
idiv
sar
and
not
popf
or
sbb
jns
mov
inc
enter
adc
gs
imul
mov
or
pop
shl
sbb
jne
fimul
sub
pop
mov
stos
add
mov
fwait
xchg
(bad)
sub
sbb
out
pop
mov
cmp
jle
jecxz
pop
loop
pop
xor
cmps
mov
(bad)
rcr
mov
xchg
ds
retf
xchg
stos
les
cmc
test
(bad)
dec
cmc
cmp
daa
sahf
cmp
sbb
cmp
call
mov
sbb
sbb
mov
mov
jno
pop
pop
loop
sbb
jge
stos
imul
(bad)
mov
sub
push
sbb
sahf
jp
mov
mov
jmp
push
adc
mov
(bad)
mov
push
xchg
fwait
mov
and
out
ret
sar
outs
popf
cmps
inc
fdivr
sub
jmp
test
int
jge
cmp
imul
mov
mov
and
sub
sbb
adc
jb
xor
jo
mov
arpl
sub
and
jp
mov
not
mov
jmp
clc
inc
in
faddp
or
mov
sti
fst
sahf
(bad)
fs
jo
pop
xor
jg
pop
or
jo
inc
or
xchg
popa
cli
jmp
and
ss
stos
xor
ins
adc
js
cmps
mov
xor
sbb
inc
pop
test
xchg
push
jecxz
movs
adc
stos
pop
or
cli
lea
rol
lock
(bad)
cmc
dec
test
mov
mov
test
ret
test
lods
dec
sbb
jge
and
add
mov
arpl
pop
mov
popa
fstp
jo
fnsave
jnp
jmp
pop
xchg
sub
mov
xchg
sub
mov
stos
sbb
xor
stos
cwde
bswap
icebp
sbb
push
add
das
ficom
cdq
dec
lock
es
scas
or
mov
jae
test
mov
neg
mov
dec
sbb
out
ja
es
ja
mov
dec
or
mov
mov
sbb
mov
jecxz
cmp
jmp
and
mov
pop
mov
ss
scas
mov
sbb
push
test
sti
jg
call
pop
es
hlt
imul
pop
hlt
and
loope
cmps
pop
xor
cmp
mov
iret
adc
dec
out
test
je
and
dec
scas
sub
mov
cmp
mov
iret
pop
icebp
jmp
adc
and
inc
cmp
sbb
sub
xor
sbb
or
cmps
sub
mov
push
jb
mov
add
gs
imul
scas
mov
aaa
test
mov
shl
xchg
jae
lds
xchg
scas
loopne
dec
xchg
mov
sar
es
ror
scas
addr16
inc
gs
lahf
ins
adc
push
cmps
cdq
mov
pop
fst
cmp
pop
add
add
push
and
das
scas
jl
xchg
data16
cmp
xor
fnstenv
ret
adc
call
mul
sub
fidiv
cmps
lods
into
das
sahf
push
outs
mov
stos
cmp
out
pushf
stos
ror
jnp
shr
fdivr
sbb
pop
test
inc
or
shl
fwait
in
jp
bnd
or
mov
xor
adc
sahf
pop
shl
jb
outs
and
mov
cwde
les
mov
sbb
push
xor
push
loopne
jg
aad
xchg
add
jp
in
iret
inc
mov
mov
fptan
cwde
std
in
sbb
and
or
push
xchg
cmc
in
gs
add
pop
mov
pop
inc
cdq
inc
es
(bad)
cmps
xchg
xchg
xor
pusha
cwde
fisubr
mov
inc
push
jl
iret
inc
aaa
fs
adc
sbb
dec
cmp
call
(bad)
sti
mov
loop
inc
daa
mov
pop
mov
mov
fidivr
call
bound
jmp
test
jp
dec
enter
ficom
jae
pop
mov
jbe
push
mov
mov
push
in
in
sbb
add
neg
adc
pop
out
sub
mov
pop
fwait
mov
(bad)
cmps
loopne
mov
pop
retf
push
xchg
jno
xchg
sar
ret
mov
aam
jle
test
lahf
or
rcl
mov
mov
not
mov
popf
ds
fsubr
int
shl
adc
sub
adc
cmp
sbb
mov
and
mov
mov
pop
inc
mov
add
or
or
cmp
sub
(bad)
stc
add
or
xchg
stos
pushf
sbb
inc
pusha
(bad)
dec
and
jo
xchg
jne
aad
lods
cmp
fs
mov
inc
jae
stos
mov
xchg
test
ret
cmp
ds
mov
or
js
lahf
xor
dec
scas
mov
iret
dec
(bad)
repnz
mov
pop
int
or
push
adc
out
push
scas
inc
adc
or
fstp
cdq
aam
and
push
inc
inc
add
jecxz
movs
mov
push
retf
xchg
hlt
(bad)
mov
mov
jg
in
add
test
js
test
pop
std
xor
push
lock
fbld
out
jbe
jo
push
inc
das
or
mov
jmp
loop
and
inc
fistp
push
je
mov
dec
push
scas
or
mov
jnp
xchg
cmp
(bad)
pushf
es
retf
pop
push
push
test
mov
mov
loop
jle
out
xchg
sub
push
dec
mov
loope
mov
movs
repz
cmp
jecxz
push
out
inc
fstp
push
dec
std
div
inc
jmp
inc
and
and
popf
scas
pop
fnstcw
mov
or
fcomp
add
add
test
inc
push
mov
push
mov
test
adc
gs
out
dec
enter
inc
dec
rcl
xchg
ins
xchg
frstor
mul
mov
jmp
neg
ja
xchg
mov
jmp
movs
addr16
test
sub
(bad)
xor
jge
sbb
mov
xchg
xchg
enter
push
popf
fadd
push
push
out
cmp
test
imul
je
xchg
sbb
cmp
icebp
cmps
sbb
jmp
pop
test
in
rol
mov
sti
inc
in
test
loop
repnz
das
cli
(bad)
imul
mov
sub
sbb
jmp
pop
add
fidiv
dec
push
scas
push
or
in
xchg
ins
jmp
pop
sbb
adc
mov
mov
xlat
ins
pusha
cmps
ja
ror
push
scas
movs
mov
push
adc
(bad)
jmp
std
inc
inc
daa
rcr
lahf
cmp
rcr
test
sahf
faddp
or
mov
and
(bad)
(bad)
test
inc
stos
mov
or
cli
iret
fild
sbb
sub
jno
jo
gs
mov
loope
cs
push
imul
adc
mov
and
pop
dec
mov
pop
call
das
ins
std
fldenv
lds
inc
mov
dec
popf
mov
bound
jmp
mov
push
popa
mov
cld
repz
jecxz
inc
xchg
dec
jmp
inc
loop
imul
jl
xchg
lds
jmp
inc
jno
sbb
adc
inc
daa
(bad)
jmp
fistp
aad
add
inc
pop
aas
in
sti
mov
popf
aam
aad
inc
jno
sub
fsub
cmp
mov
data16
jnp
lock
mov
call
stos
xor
outs
sbb
inc
dec
in
fidivr
jbe
adc
addr16
add
ins
fidivr
inc
cmps
dec
pop
jns
mov
sti
jp
shl
fdiv
inc
inc
in
or
adc
mov
outs
outs
popf
push
and
dec
inc
mov
adc
push
push
int3
int
and
push
dec
ja
sub
cmps
call
mov
xchg
cmp
push
dec
lahf
ja
add
mov
jmp
int3
dec
sub
in
iret
fdiv
daa
push
sbb
outs
jnp
addr16
jge
mov
scas
adc
leave
cmp
aaa
fisttp
imul
or
sub
push
(bad)
sar
ret
out
pop
mov
jns
pushf
ins
(bad)
mov
xchg
data16
mov
pop
cmc
shl
or
sbb
lahf
inc
pop
mov
sti
fist
mov
sub
push
or
(bad)
pop
lock
push
js
cmps
sub
mov
adc
adc
mov
arpl
push
or
jp
mov
pop
mov
daa
fs
lods
mov
add
lahf
sub
call
or
mov
nop
mov
jle
test
cmp
icebp
rcr
scas
mov
adc
(bad)
push
inc
scas
or
xchg
jns
pop
cmc
xchg
push
rol
test
add
inc
ss
push
daa
mov
fdiv
popf
jne
xchg
or
push
pop
add
out
dec
xchg
cmp
add
push
mov
jmp
sub
lock
call
test
mov
loopne
cmc
mov
mov
sbb
in
jne
and
and
je
push
out
cmps
mov
(bad)
aad
(bad)
jmp
arpl
leave
and
inc
sbb
out
or
and
addr16
rdtsc
mov
push
jmp
sub
out
test
out
add
jno
mov
inc
jecxz
sti
push
xlat
mov
cs
mov
leave
dec
mov
cwde
ret
inc
mov
mov
cmp
jmp
popf
fdivr
call
sbb
retf
xchg
adc
xchg
cmp
xchg
jb
mov
mov
sbb
inc
ret
xchg
jle
dec
cmp
xor
popa
jmp
inc
inc
popf
push
sub
lods
sub
aam
sbb
out
inc
jmp
inc
shl
imul
retf
mov
mov
xchg
push
add
shr
mov
pop
neg
(bad)
jl
add
cmp
dec
and
mov
in
cmp
or
add
int3
pop
inc
pushf
dec
and
cdq
stc
add
sub
sar
std
dec
pop
sub
add
out
push
aam
mov
cli
repnz
outs
jo
(bad)
aaa
mov
clc
lock
cdq
mov
aaa
sub
jne
and
or
sub
pop
(bad)
jnp
ins
in
rcr
rcr
stos
fiadd
push
and
xchg
cmp
fdivr
or
ror
out
mov
(bad)
sbb
push
xor
js
jmp
sbb
out
cmp
jnp
mov
gs
ror
mov
pop
out
mov
xor
in
imul
sbb
xor
fwait
and
mov
jmp
cdq
leave
jg
mov
jno
cmps
and
pop
add
sbb
push
adc
dec
addr16
xchg
mov
(bad)
(bad)
loopne
jl
mov
data16
mov
(bad)
sahf
push
jmp
sbb
mov
mov
mov
xchg
sub
test
inc
call
jne
pop
mov
je
push
xchg
cdq
pushf
xchg
or
scas
outs
call
arpl
pop
inc
loopne
cmp
cmp
stos
pop
addr16
jle
sub
or
fsub
sbb
pop
nop
pop
add
imul
out
adc
test
btc
aad
xlat
ror
pushf
ins
(bad)
das
cmp
std
(bad)
pop
out
jb
cmp
stc
dec
sub
mov
retf
sub
fistp
jnp
shl
jne
push
xchg
add
(bad)
pop
sbb
lods
or
sbb
clc
xchg
pop
stos
mov
dec
push
inc
mov
rcl
xchg
inc
psubb
mov
adc
or
mov
cmp
cld
test
icebp
and
jp
adc
dec
cld
call
jo
and
ss
test
dec
push
test
pop
ins
nop
sub
retf
mov
jo
inc
or
ds
push
and
sti
js
(bad)
jge
xchg
xor
scas
sti
cmp
dec
cld
jmp
aas
lods
mov
jle
popa
pushf
inc
fild
call
push
(bad)
fnstenv
test
add
cwde
pushf
cs
retf
cmc
jmp
mov
jmp
sub
ss
ds
movs
adc
cmp
cdq
cdq
lea
pop
stos
jle
retf
jno
ror
pop
lds
sub
imul
lea
pop
dec
fsubr
aam
jg
movs
loope
sbb
ds
fsub
cs
les
daa
movs
dec
(bad)
xchg
cmp
mov
pop
dec
mov
mov
dec
(bad)
pop
jnp
ret
cld
and
in
icebp
inc
push
mov
shl
es
mov
push
jnp
push
gs
sbb
test
scas
adc
repnz
call
addr16
xor
or
push
adc
mov
mov
or
mov
sbb
push
dec
sti
stos
mov
xlat
dec
push
jge
dec
sar
outs
pushf
out
push
aam
scas
or
jnp
stos
scas
retf
js
mov
mov
push
retf
leave
mov
dec
jmp
clc
adc
sti
inc
std
es
sbb
lea
sub
in
xchg
ret
es
jns
fild
mov
add
pop
or
xor
and
jbe
jns
mov
pop
in
lea
call
icebp
jne
jns
inc
fisubr
cmps
xlat
jnp
leave
xchg
push
shr
push
sub
mov
in
mov
jne
mov
mov
in
call
push
rcr
cmp
es
sar
dec
in
push
adc
pop
mov
push
xchg
mov
sti
inc
out
or
add
adc
adc
clc
jle
mov
inc
mov
adc
(bad)
adc
jbe
jb
ja
xchg
hlt
ins
fwait
mov
jge
mov
mov
popf
fnstenv
sahf
test
and
(bad)
in
loop
inc
push
jmp
test
add
inc
fsubr
jbe
xchg
adc
scas
push
dec
nop
stos
mov
fs
pop
adc
adc
pop
pop
mov
je
mov
cmp
out
xchg
add
push
push
xchg
mov
sti
cmp
ret
in
mov
mov
iret
jle
lods
movs
mov
popf
jg
movs
mov
xlat
xchg
rol
mov
xor
adc
or
adc
inc
mov
xchg
lods
sbb
les
mov
movs
fcom
js
fisub
pop
or
xchg
aaa
iret
adc
inc
ins
fsubr
pop
jb
mov
ins
jmp
jmp
daa
fsubr
cdq
adc
xchg
(bad)
mov
mov
mov
rol
jmp
push
mov
mov
fidivr
out
mov
fwait
pop
cli
adc
ficom
inc
jb
inc
mov
push
mov
add
mov
rol
(bad)
jge
fistp
push
cmp
pop
sbb
jo
movs
dec
aaa
lods
pop
fs
nop
mov
jmp
jmp
ja
cmps
mov
shl
push
clc
(bad)
xchg
or
dec
test
mov
or
neg
sbb
xor
loopne
jge
mov
daa
and
mov
lods
daa
int
jl
cmp
xor
xchg
scas
push
cmp
pop
ror
push
dec
xor
adc
pop
and
xchg
inc
test
mov
xchg
xlat
mov
hlt
jmp
(bad)
dec
pop
lods
das
shl
mov
add
lds
mov
jle
xchg
xchg
adc
std
stc
inc
push
(bad)
fldcw
in
adc
adc
fidiv
daa
cmp
or
jg
ins
push
pop
mov
push
cmps
js
icebp
sbb
sbb
aaa
cmovns
icebp
push
enter
adc
jg
mov
js
stos
popf
pop
add
cmp
scas
jmp
rcr
inc
scas
ss
lock
icebp
xchg
jbe
mov
cs
loop
jp
arpl
ret
in
mov
out
hlt
mov
pop
jmp
sar
daa
cmp
in
pop
cdq
push
inc
cs
fistp
ins
pop
stos
js
push
xchg
xchg
mov
pop
fcomp
ret
iret
sbb
dec
jmp
add
ins
push
or
mov
pop
stc
shl
cmc
js
jno
das
aad
fild
ret
ror
lods
sub
cwde
cli
sbb
push
push
mov
in
loopne
ret
test
jmp
je
jp
xor
sbb
mov
pop
fsub
add
pop
cmps
es
(bad)
gs
or
mov
out
xchg
jmp
inc
fldcw
aaa
arpl
xor
bound
push
xchg
mov
faddp
cwde
xor
jl
push
test
cld
mov
test
push
test
mov
shl
mov
push
lods
mov
ret
loop
push
mov
jne
sub
xor
cmp
icebp
aam
clc
add
push
jge
es
sub
ins
movs
call
out
fidivr
int
ins
inc
or
xor
fwait
and
bound
pop
xchg
mov
adc
adc
div
test
rol
xchg
enter
mov
aad
addr16
mov
xchg
jmp
lock
mov
or
cmc
sbb
hlt
std
dec
imul
pop
and
push
loop
arpl
dec
les
cmp
xchg
inc
and
sbb
jmp
adc
adc
test
dec
mov
pmaxsw
pop
in
out
cmps
daa
sub
push
mov
xlat
and
xchg
jmp
add
into
movs
xchg
or
fidiv
fild
adc
movs
(bad)
inc
push
xchg
fcom
dec
stos
sbb
rcr
int3
data16
adc
pusha
mov
pop
bound
cmps
mov
pop
or
sbb
jbe
push
and
or
xor
in
pop
mov
mov
push
call
(bad)
xor
push
push
mov
ds
retf
repz
or
ror
fdiv
mov
repz
loope
jge
xchg
inc
(bad)
jle
add
aam
fiadd
jb
jg
sbb
sub
leave
shl
(bad)
cmp
mov
and
push
add
mov
jbe
pop
inc
or
nop
retf
cmp
dec
test
xchg
sbb
bound
lods
dec
sar
xchg
push
in
stos
je
stc
rol
call
loopne
stos
pusha
sbb
cmp
mov
jmp
cmp
leave
test
inc
iret
push
pop
and
push
outs
pop
mov
icebp
lds
ffree
and
jmp
das
inc
es
and
dec
push
xchg
sub
cmp
shr
test
sahf
js
mov
movs
inc
shl
push
lea
mov
imul
xchg
ds
(bad)
stc
(bad)
jecxz
jp
mov
sbb
xor
mov
jl
pop
add
pop
jge
push
jo
mov
mov
ror
inc
sbb
and
jo
push
je
outs
xor
xor
call
push
test
rsqrtps
addr16
movs
arpl
mov
mov
cli
pop
in
mov
data16
pushf
xchg
sub
shl
push
mov
fcomp
xor
mov
cmp
xor
push
cwde
ss
inc
xchg
call
xchg
xchg
jae
pop
add
or
adc
and
outs
or
mov
iret
cmps
mov
icebp
pop
jl
mov
jp
out
inc
loope
jge
fsqrt
lahf
pop
shl
cmps
fstp
test
adc
cmp
out
cmps
xor
adc
stc
iret
cmp
pop
pushw
xor
push
add
jmp
jge
nop
cmp
xor
push
jae
imul
pop
adc
dec
addr16
xor
xchg
mov
xchg
stc
cmps
and
jb
sar
test
cwde
outs
into
cmps
inc
xor
cld
xchg
or
mov
jno
pushf
hlt
and
loopne
repz
imul
mov
shr
xor
pop
clc
pop
inc
or
pop
jg
or
ret
push
pop
into
jnp
int
mov
add
adc
jns
mov
push
xchg
xchg
mov
cmp
and
std
add
rol
dec
scas
pusha
out
sti
pop
out
mov
push
out
(bad)
cld
adc
lds
stos
sbb
fiadd
mov
adc
cwde
pop
xlat
jle
dec
sub
mul
aam
enter
push
mov
and
mov
or
cli
inc
leave
lea
enter
push
push
in
inc
xor
cmp
push
cmps
js
add
ds
repz
loopne
jg
scas
js
pushf
ret
mov
sbb
fcom
hlt
jnp
push
cdq
cdq
fsubr
adc
sbb
rcl
mov
inc
or
leave
jmp
(bad)
pop
add
pop
and
cmps
xchg
xchg
push
cmp
ja
mov
inc
and
inc
and
ds
push
leave
inc
adc
pop
lods
mov
rdmsr
sub
cli
aad
sbb
sbb
mov
cmp
(bad)
test
xchg
je
sbb
cmps
mov
jb
movs
jmp
add
jmp
add
test
sbb
jo
xor
outs
test
inc
dec
lods
pop
sbb
mov
mov
jmp
sbb
inc
dec
neg
add
jae
cmc
pop
mov
fidivr
test
scas
xor
sub
aam
mov
lods
iret
add
jl
jg
inc
rol
push
(bad)
xchg
jl
out
push
retf
jo
jle
cli
(bad)
(bad)
adc
repnz
mov
test
pop
(bad)
sub
enter
cld
adc
inc
fisttp
jns
xchg
je
jae
mov
call
add
adc
jmp
outs
dec
mov
push
stos
cwde
lahf
cmp
data16
dec
mov
popa
jl
jl
rol
xchg
xchg
fadd
xchg
cli
jns
mov
pop
jo
cmps
xchg
pop
(bad)
ficom
mov
inc
lea
push
pop
pminub
rol
adc
ins
fisttp
add
movs
jno
jg
mov
call
mov
inc
out
ins
arpl
mov
test
mov
mov
xor
jp
(bad)
cdq
cmp
addr16
jl
iret
sti
imul
clc
lods
sub
sbb
mov
div
inc
sbb
retf
div
dec
mov
dec
push
ds
cld
push
int3
and
push
popa
mov
inc
inc
cwde
inc
sub
mov
stos
dec
rcl
and
and
sub
js
add
jg
mov
dec
mov
mov
or
arpl
test
and
mov
mov
gs
test
(bad)
mov
xchg
dec
and
in
xchg
xor
shl
fdivr
sbb
cmp
dec
jecxz
gs
inc
in
or
mov
shl
mov
cmp
add
js
daa
sahf
pop
xor
push
es
inc
jno
movs
cdq
cmp
dec
int
mov
mov
inc
sub
call
xchg
add
pop
test
lahf
shl
sbb
(bad)
mov
daa
aam
nop
repz
jle
(bad)
mov
es
fcomp
shl
sub
fisubr
fs
fs
push
xchg
(bad)
pushf
mov
add
gs
ret
mov
popa
add
loop
sbb
and
jnp
ja
xchg
jne
xchg
cmp
pop
pop
sahf
int3
mov
(bad)
pusha
gs
fsub
in
call
pop
rcl
and
sub
test
mov
mov
call
cwde
(bad)
inc
pop
mov
push
add
out
fisubr
(bad)
adc
jge
sub
and
aaa
add
mov
int
sub
clc
pop
int
jns
mov
add
jge
jecxz
enter
mov
scas
pop
arpl
push
dec
cld
cld
cdq
add
outs
bound
pop
in
fidivr
mov
jmp
scas
inc
gs
enter
repnz
mov
adc
push
enter
fbstp
pop
xor
js
xor
mov
es
sbb
in
pop
dec
pop
xor
xor
dec
adc
mov
xchg
add
js
scas
or
into
sub
mov
cmp
push
inc
xchg
enter
sti
jne
jns
and
jge
cld
mov
icebp
cmps
add
icebp
lds
test
popa
xchg
xchg
mov
nop
std
in
jns
test
or
dec
out
retf
into
inc
jnp
dec
scas
or
pop
pop
push
stos
mov
lahf
xor
out
call
or
cmp
cmp
inc
ds
pop
adc
push
adc
movs
sub
jmp
ds
fldenv
adc
inc
cdq
ja
mov
xchg
pop
jecxz
push
push
retf
add
mov
(bad)
xchg
(bad)
lods
push
bswap
retf
fdivr
mov
add
idiv
jg
and
fs
push
and
mov
call
jbe
retf
ss
and
sub
push
push
pop
jle
mov
cmp
gs
loope
scas
fstp
dec
push
jp
dec
repz
call
xor
clc
jg
movs
cwde
rol
pusha
jne
sahf
mov
dec
(bad)
aad
repnz
xchg
cdq
xor
dec
jmp
or
ss
jns
or
push
sar
ror
mov
cmp
adc
outs
fs
sub
cs
mov
pop
cli
leave
mov
ficomp
add
fwait
xchg
loopne
dec
repz
or
jmp
mov
test
or
sub
ret
xor
imul
(bad)
sub
(bad)
(bad)
dec
fst
push
push
jp
sbb
pop
test
mov
mov
in
int
mov
sub
pop
ss
and
add
fistp
mov
add
adc
xchg
xor
bound
and
pop
loop
mov
xor
aam
cmp
js
stos
mov
push
mov
mov
call
jl
jmp
out
dec
sbb
stc
into
icebp
and
dec
bound
mov
dec
pop
add
fadd
ret
inc
dec
or
jecxz
das
imul
add
rcl
add
add
mov
outs
xchg
in
cmp
fcom
dec
ins
daa
or
lock
jl
cdq
pop
sub
lock
sub
pop
neg
add
pusha
or
out
scas
(bad)
cmp
loopne
fnstcw
sbb
cmp
ins
cmps
cs
jb
ins
cmp
add
xor
int3
pusha
lahf
loope
mov
push
sbb
add
cmp
jae
sbb
cmps
push
xor
stc
ds
daa
js
call
push
xchg
daa
mov
pop
mov
fwait
push
push
rcr
xchg
(bad)
adc
push
(bad)
xchg
ja
dec
leave
push
or
stc
fdivr
jnp
add
pusha
es
push
xchg
mov
in
fistp
mov
ror
push
xor
dec
jae
dec
cmp
call
mov
loopne
push
dec
mov
fstp
les
aad
dec
(bad)
jmp
push
mul
stos
adc
inc
stos
mov
sbb
adc
int3
test
lods
(bad)
imul
cmp
(bad)
iret
jmp
inc
add
and
add
mov
jbe
jmp
sbb
adc
pop
cmc
and
xchg
outs
daa
stos
sub
in
mov
adc
dec
mov
inc
push
lods
inc
aad
sar
call
es
aam
ins
test
ffree
xor
mov
adc
fcomi
mov
test
mov
mov
sub
call
inc
add
shl
pop
jge
push
adc
mov
sti
loope
xchg
inc
jne
sbb
and
cmp
add
adc
push
adc
clc
push
push
daa
gs
mov
sbb
dec
dec
ins
mov
mov
pop
xchg
int
outs
int
push
repz
sbb
mov
mov
out
repz
mov
or
retf
popa
std
and
dec
fnsave
dec
ins
mov
cdq
xchg
cwde
push
pop
sti
js
xlat
and
gs
ret
ja
aaa
test
outs
pop
cdq
jg
adc
mov
out
lahf
inc
xchg
rcl
pop
je
jnp
mov
mov
add
xchg
inc
sbb
xor
fdiv
icebp
neg
ins
push
mov
call
cld
fdivr
cmp
pop
inc
mov
inc
push
ins
nop
(bad)
mov
pop
ret
lds
retf
inc
pop
imul
mov
test
mov
jne
push
ins
cwde
shl
xchg
daa
mov
inc
adc
push
mul
lea
xlat
pop
xchg
mov
jecxz
pushf
pop
cbw
fdivp
adc
aad
mov
mov
icebp
xor
stc
jg
adc
jg
imul
ss
jl
test
popa
loopne
and
pop
neg
push
inc
sbb
jae
mov
pop
mul
lahf
enter
fist
pop
pop
cmps
pop
repz
call
mov
mov
jmp
ins
lahf
cmps
jmp
inc
shl
aam
push
jns
(bad)
pusha
int3
xor
sbb
shr
jbe
mov
jns
je
mov
lods
jge
out
pop
cwde
iret
add
inc
(bad)
xor
inc
jge
mov
mov
mov
add
or
das
mov
push
test
lds
sbb
div
scas
add
jge
lahf
mov
pop
movs
test
pop
adc
fstp
fidiv
inc
test
(bad)
ja
add
push
pop
scas
sub
test
pop
test
adc
sub
mov
data16
push
dec
cdq
jbe
scas
sub
mov
test
aaa
adc
pushf
fdiv
(bad)
pop
add
jg
test
xor
in
loope
in
out
pandn
lea
mov
imul
iret
ret
repnz
xor
mov
les
cmps
dec
and
std
mov
ja
mov
dec
sbb
mov
sbb
retf
sub
clc
jne
bound
iret
pop
jae
jae
test
stos
add
push
inc
lods
ins
add
add
mov
cld
jmp
inc
shr
popf
jae
mov
dec
mov
mov
jmp
clc
lods
clc
aaa
mov
mov
rol
dec
jecxz
jo
jns
xor
scas
ds
add
push
inc
shr
pop
div
pop
scas
ret
mov
imul
jl
jge
loopne
sub
or
outs
ficom
stos
and
scas
xchg
aas
sbb
and
cmps
pushf
inc
or
cmps
ja
ret
loopne
xchg
leave
popf
inc
fstp
das
out
mov
add
mov
or
mov
dec
add
ror
pop
fiadd
sub
adc
movs
jb
jg
mov
ror
ja
inc
retf
and
pusha
push
popa
out
aas
mov
sar
xchg
and
mov
xchg
add
inc
shl
mov
sub
movs
stos
lds
cwde
mov
push
shr
xchg
nop
mov
inc
retf
jmp
test
leave
push
hlt
push
pop
cmp
(bad)
shr
add
fs
(bad)
jl
lahf
xchg
mov
or
mov
pop
adc
cs
xor
lahf
pop
shl
outs
outs
lods
push
cmp
(bad)
cmp
cmp
ror
sbb
popa
mov
gs
jmp
sub
xlat
mov
imul
dec
add
cwde
cwde
retf
stc
cmp
sub
sub
sbb
xor
xor
dec
and
cdq
stos
test
out
and
out
popa
inc
add
sbb
and
jle
mov
mov
lea
dec
jmp
std
push
push
jge
js
mov
and
jl
jmp
mov
call
lea
loope
icebp
hlt
dec
pop
lods
stos
dec
nop
dec
rcr
and
sar
jp
sbb
arpl
inc
pop
push
scas
(bad)
xchg
xchg
or
retf
jmp
adc
xor
jb
cmp
jge
mov
dec
in
lea
int3
call
cwde
jp
push
mov
mov
pop
push
fwait
adc
out
push
in
div
mov
shl
mov
add
cld
sub
stos
jne
sub
repz
jle
push
jl
js
outs
inc
daa
scas
dec
cmp
stos
enter
jmp
xchg
fidiv
cmp
ds
mov
rol
stos
ins
dec
test
mov
jl
lods
lods
pop
xor
arpl
in
lahf
inc
test
push
fs
inc
test
mov
dec
sti
mov
mov
fsubp
movs
inc
push
xchg
mov
sbb
leave
mov
lahf
mov
or
dec
out
jmp
pop
jbe
mov
inc
pusha
test
adc
mov
stos
imul
pusha
bound
sub
inc
jae
sub
in
and
lahf
jg
into
xor
adc
cmp
aam
inc
rol
sub
mov
inc
mov
popf
fs
in
stos
pushf
push
lds
loope
out
(bad)
dec
inc
mov
loope
xchg
(bad)
fild
mov
rol
pop
xor
(bad)
jmp
add
inc
xor
scas
sub
aam
ror
and
sub
aas
pop
jb
aas
mov
pusha
dec
fimul
sub
test
aam
stos
and
jl
push
xchg
scas
fsubr
out
ja
loope
xor
mov
mul
popaw
mov
fucomp
mov
xchg
mov
dec
cmp
push
lock
inc
and
test
jns
lods
inc
pop
pop
mov
or
sbb
lock
inc
js
(bad)
and
mov
cwde
pop
cmc
add
fdivr
dec
mov
add
mov
das
mov
push
pop
movs
js
mov
addr16
mov
push
shl
xchg
ins
inc
mov
hlt
clc
repz
aad
arpl
test
cmp
inc
nop
cmp
pop
mov
je
dec
jmp
(bad)
jmp
sbb
inc
sbb
xor
ins
ins
mov
bound
inc
jmp
mov
jle
jle
jb
ret
cld
dec
mov
mov
cmps
xor
adc
lahf
mov
dec
mov
mov
test
cmp
xchg
jno
sbb
jmp
add
push
and
xchg
xchg
jmp
pop
adc
jbe
in
inc
mov
xchg
adc
mov
adc
stc
cmps
cmps
daa
mov
jne
inc
maxps
jle
leave
cmps
jl
jmp
xchg
push
push
ret
lea
sti
mov
icebp
mov
dec
push
dec
iret
mov
jns
cs
cmp
mov
gs
dec
mov
mov
jp
cli
and
out
inc
or
sub
jae
pop
push
rcr
popa
out
mov
outs
inc
or
jmp
push
cmp
scas
mov
aam
sbb
(bad)
hlt
div
imul
pushf
lock
loope
pop
mov
push
les
sub
daa
pop
push
jp
outs
jle
ins
pop
setnp
imul
fld
mov
add
ss
aaa
sbb
sbb
push
nop
jg
xchg
xor
mov
jnp
int
aaa
mov
jno
jg
and
gs
mov
sub
loope
sub
fdivp
cmp
stos
cmp
xchg
loope
rol
dec
imul
fist
or
div
scas
daa
call
push
pop
movs
call
in
(bad)
js
enter
push
hlt
add
add
sbb
inc
dec
fnstcw
and
mov
retf
cmp
pop
pop
popa
lods
arpl
mov
dec
pushf
fst
and
sbb
lahf
inc
sbb
add
shl
mov
retf
push
(bad)
f2xm1
jnp
sbb
mov
pop
sbb
test
mov
sub
dec
jecxz
jl
icebp
add
inc
inc
int
adc
jbe
xchg
and
inc
mov
add
push
jnp
aad
inc
test
add
dec
inc
push
popf
imul
cld
mov
in
xchg
inc
push
sti
ficom
test
data16
mov
fadd
jmp
xor
push
(bad)
or
(bad)
fisubr
cmp
xor
cwde
pop
pop
pop
xchg
test
imul
inc
ja
xor
or
imul
mov
mov
(bad)
gs
fmul
mov
inc
mov
xor
lock
in
pop
and
inc
in
std
cmp
mov
push
retf
loop
sub
mov
xchg
jle
fwait
test
scas
xchg
mov
cmp
dec
retf
cmp
imul
dec
inc
test
push
in
retf
mov
inc
push
push
sbb
add
push
sub
or
push
inc
dec
xchg
or
mov
mov
retf
jmp
fs
and
popa
cld
mov
fwait
pusha
fld
mov
in
jmp
mov
hlt
div
gs
fidivr
jno
dec
add
jecxz
rol
push
pop
jl
mov
pop
cmp
xor
jno
popf
xchg
stos
sub
rcl
sti
and
and
jae
stos
pop
mov
fimul
mov
jns
scas
test
adc
xchg
pop
shr
ret
jg
and
dec
mov
mov
sub
ret
enter
stos
(bad)
bt
dec
in
xor
lock
mov
sub
pop
rol
dec
mov
fldenv
sbb
pop
popf
sbb
mov
dec
out
lods
scas
es
addr16
push
push
push
dec
mov
adc
push
ret
xlat
push
ja
into
cdq
jno
adc
inc
mov
sbb
sub
xchg
jecxz
xchg
in
mov
mov
xchg
ins
cmps
pushf
mov
add
out
ficom
(bad)
push
ret
clc
xlat
jae
imul
xchg
sub
pop
jno
mov
idiv
retf
sar
push
and
sbb
jnp
sbb
dec
add
rcr
dec
mov
in
dec
data16
scas
and
in
aam
inc
das
lock
stos
sub
popa
lods
mov
arpl
icebp
xor
xchg
(bad)
ficom
fst
and
fisttp
pop
or
call
or
add
sbb
lea
mov
push
adc
cmp
adc
cmp
inc
arpl
sbb
punpckldq
int3
cmps
and
push
and
pop
rol
inc
out
add
(bad)
stos
adc
mov
inc
mov
hlt
xabort
repz
dec
out
fadd
dec
into
cmp
stos
sub
cmp
jns
sbb
pop
dec
mov
test
cmp
cli
(bad)
retf
ret
fs
ficom
mov
cwde
adc
popa
push
movs
push
or
xchg
sbb
retf
xor
pop
push
fsubr
loopne
test
test
into
shl
mov
dec
mov
test
test
stc
cmp
mov
xor
into
fdivp
and
sbb
call
mov
sbb
pop
(bad)
cmc
sbb
lea
inc
sbb
push
cs
into
ins
(bad)
ficom
pop
and
sbb
push
inc
int
stos
das
retf
jmp
rcr
jbe
jg
popf
(bad)
cmp
mov
adc
inc
icebp
mov
ins
lea
ror
mov
cmp
and
pop
mov
sbb
pop
jmp
xchg
(bad)
or
in
push
mov
cmp
dec
cmp
push
sbb
jl
(bad)
outs
add
sbb
jmp
daa
dec
push
fwait
sti
loopne
mov
dec
fistp
and
cmp
cdq
jge
fdivp
mov
shr
cwde
ror
outs
mov
std
xchg
in
call
xor
or
out
fstp
push
push
add
outs
push
mov
pushf
into
nop
cmp
test
out
and
shl
aaa
mov
push
xor
jae
jns
popf
sub
in
(bad)
adc
push
jno
scas
cmp
iret
pop
shl
scas
pop
sti
(bad)
clc
jle
jmp
(bad)
hlt
xchg
adc
jns
cwde
xchg
not
pop
jle
shr
hlt
aam
dec
mov
sbb
push
int
iret
je
xor
movs
pop
dec
je
data16
test
stos
inc
out
xstore-rng
cmps
or
add
sbb
mov
lods
xchg
test
inc
or
pushf
test
jge
push
push
arpl
dec
mov
xor
div
xor
inc
and
mov
call
pop
imul
and
retf
push
pusha
add
test
sbb
ins
mov
lods
cdq
or
fdivr
mov
or
sbb
push
and
in
pop
popf
cmp
pusha
inc
sub
movs
test
or
cmp
lods
cwde
sbb
inc
jp
imul
int3
movs
push
loop
push
push
lock
sub
ret
dec
mov
mov
sbb
clc
mov
xlat
arpl
fisubr
sub
inc
add
mov
lock
and
jp
sub
cmps
jno
je
ret
dec
daa
int
call
inc
aaa
cmc
aas
push
pop
sub
jecxz
add
imul
xor
lea
aas
sub
xchg
sub
jecxz
fadd
ins
and
addr16
jge
out
(bad)
lahf
and
dec
fwait
cdq
xchg
mov
nop
push
inc
mov
out
cli
mov
fisttp
in
call
inc
std
fmul
es
jp
cmp
je
pop
test
cmp
addr16
inc
shl
fs
and
sub
inc
add
pop
retf
or
inc
into
or
mov
adc
pop
imul
lahf
cmp
jno
cdq
jle
(bad)
test
js
cli
call
mov
mov
and
pop
push
jecxz
repnz
pop
out
or
pop
call
pop
lea
jne
js
xor
pop
add
movs
mov
mov
sub
mov
inc
push
inc
xor
aaa
cmp
adc
add
mov
mov
push
in
mov
cwde
out
pop
lods
mov
jg
jb
arpl
popf
stc
inc
sti
stos
cmps
push
out
jbe
repz
loope
jmp
mov
mov
xchg
leave
xchg
mov
dec
add
aad
test
jnp
(bad)
adc
mov
retf
adc
repnz
mov
popa
jnp
fld
adc
add
dec
pop
(bad)
outs
aaa
mov
scas
shl
xor
pop
(bad)
sbb
add
dec
rol
mov
shl
xor
ret
aas
cmps
inc
add
xchg
retf
and
mov
lds
adc
or
mov
jg
dec
inc
cmp
sub
inc
clc
inc
inc
inc
scas
lahf
xchg
nop
cs
push
fadd
jp
leave
inc
ins
add
cmp
mov
ins
outs
sahf
(bad)
xchg
or
sbb
and
fdivr
pop
mov
pop
inc
mov
mov
xchg
test
sub
push
mov
rol
movs
pop
popa
cwde
mov
out
loop
ins
jne
test
out
je
and
iret
es
mov
add
push
sbb
in
xchg
mov
iret
out
es
pop
inc
sbb
jmp
fs
mov
sub
pop
sahf
push
sbb
stc
push
adc
pop
(bad)
out
pop
xchg
enter
arpl
(bad)
cmp
mov
dec
pushf
xchg
fs
(bad)
hlt
or
arpl
rcr
mov
cmps
and
out
lds
lea
dec
pop
sbb
inc
jns
inc
popf
data16
sti
inc
and
xchg
dec
add
gs
jmp
push
imul
and
jmp
gs
jns
mov
xchg
or
daa
cmp
(bad)
aad
bnd
inc
or
inc
or
fs
jmp
cdq
cmps
int3
sub
inc
add
(bad)
xchg
int3
fist
add
sbb
xor
sar
sbb
aam
add
inc
cld
lock
aas
cmps
sub
cmp
dec
sbb
or
and
or
clc
mov
fist
cmps
fadd
jecxz
fs
mov
mov
call
pop
mov
ror
dec
xchg
mov
jnp
or
ror
jle
pop
test
push
xchg
push
pop
(bad)
mov
std
add
rcr
aaa
jecxz
push
pop
pop
and
bnd
mov
xor
mov
pop
xchg
out
and
shr
push
push
pop
lds
xchg
repz
call
add
out
ret
mov
call
mov
mov
out
sbb
xchg
ret
fidivr
jp
mov
adc
sub
mov
add
add
cs
pop
sub
mov
inc
(bad)
push
mov
and
sbb
dec
and
fwait
adc
push
push
test
test
mov
sahf
into
mov
jmp
inc
fmul
xchg
imul
hlt
mov
sti
js
cdq
test
xor
xchg
out
cmp
xlat
loope
push
mov
xor
daa
sete
ret
xor
or
pop
or
adc
ror
in
sbb
aam
sbb
inc
sti
aaa
ins
add
cmp
jo
lods
push
xor
push
push
cmps
stos
mov
sbb
inc
stc
in
xchg
add
jg
mov
retf
sub
push
mov
(bad)
icebp
lea
in
arpl
sahf
pop
addr16
mov
stc
into
clc
jge
out
mov
push
push
dec
std
(bad)
repnz
out
inc
or
lea
jno
xchg
sbb
fsubr
sahf
mov
cmp
dec
gs
jbe
jecxz
mov
stc
inc
bound
pop
mov
outs
jmp
sti
inc
jnp
mov
mov
xchg
push
loop
addr16
sar
neg
jge
xchg
and
in
stc
cmp
aad
sti
dec
call
stc
int3
push
xchg
jge
scas
sub
inc
cdq
inc
cs
mov
test
inc
sti
enter
inc
pop
add
fiadd
imul
stos
cmp
jno
push
adc
cli
adc
fsub
xor
hlt
jno
data16
mov
xchg
js
les
adc
movs
mov
aam
mov
dec
dec
in
movs
pushf
sbb
icebp
retf
repnz
lds
mov
je
push
(bad)
sbb
pop
in
adc
dec
mov
push
sub
mov
data16
fcom
(bad)
jge
push
sbb
add
pop
outs
jl
cmp
test
push
xchg
pop
add
xchg
test
icebp
mov
xchg
(bad)
jge
addr16
push
cdq
inc
loope
enter
movs
inc
xchg
jecxz
push
clc
fld
in
ret
jns
cmps
mov
loop
int
popa
ins
mov
mov
or
cmp
and
aaa
sbb
stos
sub
jns
mov
cdq
pop
fild
in
add
dec
mov
sbb
pusha
mov
mov
add
in
inc
mov
bound
jne
les
inc
out
in
push
out
loopne
xor
fld
pop
mov
xchg
jl
(bad)
test
lods
sub
dec
and
out
aam
fs
inc
push
dec
fstp
pop
dec
call
sbb
sbb
xlat
pop
outs
pop
inc
iret
dec
and
xor
jb
sbb
jg
lods
pop
outs
cmps
retf
inc
sbb
sar
pop
inc
jp
je
xchg
fild
sti
push
shl
and
sbb
mov
mov
mov
test
ret
dec
pop
lods
mov
or
push
(bad)
stc
jns
and
xor
pusha
call
jbe
movs
mov
xchg
(bad)
push
test
ds
outs
push
(bad)
jne
dec
dec
(bad)
pop
inc
shl
push
call
jmp
neg
pop
arpl
les
pushf
jo
mov
mov
out
cmps
(bad)
mov
push
add
outs
cmp
aam
mov
xchg
gs
sub
jmp
jnp
lahf
pop
jge
call
ins
mov
sub
test
add
bound
fistp
adc
jae
and
je
inc
push
cmps
pop
sbb
dec
push
xchg
xlat
fwait
push
add
inc
int3
(bad)
push
neg
jnp
and
xchg
lds
mov
ficomp
sbb
add
push
adc
jecxz
ja
aad
fwait
dec
fnsave
dec
(bad)
mov
inc
in
adc
fist
pusha
data16
stos
mov
pop
int3
mov
jbe
fnstcw
dec
adc
(bad)
outs
imul
pop
aas
daa
gs
scas
call
push
pop
mov
jns
lock
repnz
cs
fisttp
loope
enter
push
xchg
cmps
xchg
and
loopne
imul
cmc
cmp
ss
jbe
pop
add
xor
ss
mov
cmp
sbb
aad
mov
punpckhwd
dec
or
sub
pop
mov
mov
aam
push
xchg
xlat
movs
push
xor
mov
shr
cld
push
push
dec
cwde
sub
cwde
mov
neg
adc
loope
xor
dec
xchg
cli
xchg
repz
cdq
inc
jno
mov
cmp
ffree
mov
fstp
in
lea
push
out
dec
or
retf
retf
inc
iret
inc
js
xor
ja
push
stos
pushf
mov
js
xlat
sub
loopne
push
pop
add
sbb
jp
es
push
(bad)
pop
retf
push
pop
mov
inc
(bad)
cdq
mov
inc
mov
test
jge
jge
pop
mov
ret
call
mov
out
push
cmp
movs
mov
mov
jl
xchg
mov
and
sti
jle
mov
sar
leave
inc
icebp
cs
jle
mov
xor
push
out
retf
ds
imul
(bad)
and
fs
ds
adc
push
xor
cs
mov
jmp
mov
test
imul
add
popa
mov
mov
sub
jmp
popf
loope
scas
dec
pop
xchg
lock
xlat
jmp
ret
cmp
jmp
sbb
lea
push
jl
sbb
std
inc
and
mov
or
xor
inc
push
push
mov
pop
adc
jae
retf
xor
ds
mov
cli
fs
shl
sahf
les
popf
fadd
sbb
enter
sbb
lea
push
cmps
test
xchg
ret
xchg
or
iret
push
pop
and
retf
sub
xchg
jge
cli
outs
pop
push
and
rcr
jb
in
ins
add
cmps
sbb
dec
dec
nop
push
jle
fwait
mov
cld
les
(bad)
pusha
jl
lea
cdq
call
mov
mov
int3
imul
push
loopne
xchg
sub
fcmove
imul
std
adc
es
(bad)
sti
bound
or
cmps
inc
inc
or
cmp
sbb
int
mov
dec
fcomp
ja
arpl
dec
mov
adc
sub
in
xchg
jmp
and
int
clc
imul
lock
xchg
repnz
stos
push
aaa
into
rcr
test
or
test
inc
(bad)
hlt
sbb
lahf
aaa
cli
jle
pop
inc
dec
hlt
out
jecxz
fist
jb
inc
fnstsw
jne
mov
cmps
lods
mov
leave
lea
xchg
jne
je
ror
xor
in
aaa
mov
adc
pop
or
cmp
mov
mov
hlt
leave
jecxz
int3
retf
push
neg
pop
ds
icebp
xchg
push
hlt
cdq
pop
or
sar
mov
dec
push
mov
cld
and
fpatan
shl
jle
stos
cmp
push
out
xor
repz
cmp
sub
xor
jns
cmp
mov
add
je
cld
and
int3
pop
push
dec
sbb
and
sub
adc
pop
adc
inc
mov
push
cmp
icebp
xchg
push
stos
or
dec
jg
test
rol
sahf
std
xchg
jne
out
push
(bad)
repz
xor
add
mov
and
cmc
(bad)
cmp
lods
push
int
in
ds
(bad)
fsubr
js
cmp
cmp
xor
in
rcr
(bad)
lock
cli
push
jo
push
out
inc
push
inc
or
std
ins
inc
mov
push
test
or
rcr
loopne
pop
jo
ins
clc
mov
or
cdq
jae
fcmovb
mov
test
inc
cmps
test
fisttp
mov
dec
clc
jae
or
pop
fistp
add
push
mov
ret
cmp
pop
sahf
repz
ror
add
sub
push
sbb
ins
stos
push
mov
xchg
ds
xchg
push
nop
ret
dec
push
inc
xchg
jmp
in
shr
mov
jmp
loop
nop
dec
pop
cmps
xchg
sub
lods
frstor
jmp
cmc
es
das
jmp
and
sahf
push
es
xchg
test
lahf
sub
in
inc
(bad)
xchg
out
pusha
adc
adc
inc
sbb
aas
mov
imul
daa
aam
jae
mov
pop
jmp
mov
shr
xchg
shr
loope
xlat
bound
or
in
(bad)
scas
rcr
mov
lods
push
sbb
fdivp
xchg
(bad)
dec
adc
imul
pop
ds
sti
rol
pop
push
inc
xchg
pop
and
mov
stos
adc
cmp
jmp
cmp
das
mov
fcomp
adc
push
xchg
lea
in
test
frstor
jb
xor
sar
mov
jmp
in
cmps
mov
mov
lahf
push
inc
in
fidiv
test
xor
inc
into
adc
or
int3
xor
adc
dec
lods
imul
mov
std
retf
mov
fdiv
push
bound
mov
jo
pushf
push
xchg
and
out
cmp
inc
jge
fisubr
push
outs
fstp
mov
mov
push
sbb
mov
stos
enter
xchg
(bad)
dec
xchg
gs
sbb
sub
fucomi
sub
and
cmps
cs
dec
mov
xchg
(bad)
enter
shr
fild
cdq
cmc
dec
jne
adc
add
scas
sbb
scas
je
stos
sbb
stos
mov
and
inc
xchg
int3
add
jge
jne
vhaddpd
popf
pop
push
div
popf
sub
add
fistp
add
ret
xor
imul
ins
bnd
dec
cmp
icebp
rcl
jg
inc
arpl
cmps
cmp
mov
mov
xchg
or
les
jmp
inc
push
inc
pop
fstp
push
pop
push
cmc
and
movs
push
adc
sbb
sub
out
mov
xchg
mov
sbb
cmps
imul
leave
pop
mov
mov
into
loope
jbe
ja
mov
push
adc
(bad)
in
ret
cmp
pop
repz
call
sbb
add
inc
inc
fwait
inc
push
inc
fst
jns
jmp
mov
jge
push
push
fisubr
sbb
pop
test
(bad)
adc
push
push
cwde
inc
sub
mov
sti
call
arpl
push
outs
jo
dec
out
mov
rol
js
inc
fwait
stc
mov
pop
mov
sti
sar
ffree
jae
mov
idiv
aaa
dec
in
fdiv
ds
pop
jo
arpl
push
dec
in
(bad)
retf
mov
xlat
jp
aam
pop
jno
test
push
outs
or
jp
mov
lahf
dec
jb
mov
outs
(bad)
add
jbe
xchg
aad
mov
mov
cmps
adc
pusha
mov
mov
xor
mov
mov
lock
pushf
imul
xor
jecxz
inc
pop
jnp
or
cs
mov
jmp
in
and
add
cmp
bts
test
pop
mov
mov
adc
cmp
into
xchg
push
or
lds
ror
rcr
mov
sub
(bad)
jne
mov
les
mov
outs
in
(bad)
cmp
mov
mov
(bad)
push
ret
dec
jmp
data16
push
cmp
sbb
cld
dec
add
mov
(bad)
popa
fst
jge
shr
push
xor
mov
imul
add
sub
pop
jmp
jmp
cmp
lods
jbe
fmul
dec
mov
loope
add
ret
xchg
inc
test
inc
pmulhw
(bad)
xchg
jecxz
inc
dec
call
into
sub
hlt
aad
push
lds
jl
pop
sahf
jne
movs
inc
add
lea
aad
call
add
pop
adc
add
jmp
and
pop
dec
cmps
or
mov
mov
out
xchg
pop
call
mov
ret
xor
ja
test
mov
iret
jnp
in
out
xchg
pop
push
cdq
popf
scas
and
add
sbb
mov
cs
push
or
je
sbb
push
jnp
pop
pop
pop
mov
mov
int3
addr16
(bad)
pop
mov
out
inc
adc
es
outs
inc
movs
dec
sbb
xlat
mov
call
test
and
pop
rol
test
mov
outs
je
test
adc
ror
push
les
cmp
sbb
repz
jb
cmp
inc
popf
push
outs
cmp
sub
push
in
mov
sar
and
pop
cli
stc
sbb
or
(bad)
sub
jl
mov
test
popf
push
or
scas
push
andnps
aad
and
jge
mov
and
mov
pop
dec
sar
lahf
adc
inc
xchg
test
cmps
mov
out
(bad)
jg
lods
and
mov
push
cmp
cli
shl
loope
push
jp
mov
sahf
mov
pop
in
or
or
push
xor
add
arpl
ins
inc
mov
sub
ss
loopne
out
mov
sbb
sub
into
neg
shl
leave
fstp
mov
test
stos
arpl
jmp
xchg
fcom
outs
mov
out
xor
lock
cdq
and
daa
and
push
cmp
test
retf
xchg
adc
ret
fistp
pop
sub
xor
push
add
out
add
jb
pop
inc
lea
pop
jmp
or
std
les
shl
mov
cli
and
loop
push
aad
inc
xor
mov
cwde
loope
mov
add
(bad)
jno
mov
ins
out
jp
cmp
std
dec
out
inc
jle
lea
push
inc
xchg
dec
pop
call
out
and
xchg
outs
pop
aas
les
adc
daa
lods
or
jb
scas
ss
out
mov
retf
xor
inc
inc
mov
cmp
fnsave
mov
aad
mov
lods
sbb
(bad)
mov
ret
hlt
int
pop
popa
test
push
jecxz
lods
adc
sbb
in
pusha
loopne
pop
or
adc
dec
and
mov
retf
mov
shr
or
fiadd
adc
clc
xor
or
lahf
pop
stos
push
mov
xor
stos
cdq
cmp
es
mov
or
sbb
ds
jle
nop
aam
mov
xchg
(bad)
mov
jp
xchg
mov
sub
push
inc
in
mov
es
out
aam
rol
call
cmp
mov
pop
(bad)
cmp
xor
xor
dec
jmp
pop
aam
loope
add
inc
(bad)
and
pop
ds
pushf
xor
or
adc
popf
mov
xor
imul
pop
jge
xchg
mov
call
(bad)
stos
sub
clc
dec
scas
popa
push
mov
xchg
xor
(bad)
std
repnz
push
call
rcl
adc
pop
clc
or
ins
pop
je
dec
pop
pusha
xchg
rol
xor
test
pushw
jle
leave
cmp
inc
and
repnz
jb
dec
sub
clc
sub
or
stc
mov
mov
pop
les
pop
(bad)
pop
and
push
neg
stos
push
mov
mov
out
sub
lods
popf
inc
jne
test
and
jmp
cmp
test
dec
sub
call
pop
sahf
mov
jnp
cld
inc
push
push
das
push
pop
retf
sbb
jo
test
aad
or
pop
xchg
cld
xchg
adc
bnd
inc
jnp
lds
call
(bad)
xchg
add
fldenv
(bad)
mov
gs
(bad)
mov
psllq
div
mov
pop
mov
pop
xor
repz
push
cmp
addr16
xchg
retf
lahf
pop
lock
sahf
repnz
dec
fstp
adc
or
enter
outs
xor
add
cdq
and
xor
popf
icebp
xchg
cmp
fimul
dec
push
inc
mov
sar
push
call
fdiv
sti
mov
js
xchg
mov
retf
jg
popf
push
shr
xor
or
inc
jae
inc
add
push
sub
xchg
cwde
int3
mov
cli
mov
or
(bad)
and
and
stos
add
mov
and
xchg
xchg
cmp
jns
in
cdq
pop
sub
jmp
pop
pop
cwde
and
mov
ds
pop
fcmovbe
mov
(bad)
mov
xchg
pop
int3
out
(bad)
cdq
addr16
lahf
dec
xchg
outs
cli
dec
inc
dec
ret
and
and
(bad)
fmul
dec
pop
cld
pop
ss
(bad)
xchg
xchg
sub
lock
les
inc
jb
jmp
sub
add
jmp
lea
mov
cli
imul
call
addr16
ja
mov
sbb
push
dec
icebp
(bad)
xchg
or
ja
(bad)
shl
mov
std
ret
xchg
sub
call
sti
ret
xor
imul
mov
add
rol
push
mov
push
pop
shl
jg
xchg
ss
sahf
cmps
mov
fsubr
sbb
add
scas
sub
mov
pushf
pusha
xchg
mov
mov
in
sbb
pushf
cdq
repz
test
add
pop
rcl
ret
call
jbe
jbe
sbb
icebp
dec
fbstp
inc
and
fst
sbb
adc
ss
add
xor
cmp
sub
mov
dec
call
(bad)
stos
mov
mov
jp
pusha
jb
cmps
jbe
sahf
rcr
(bad)
loope
(bad)
mov
adc
ret
rcr
cdq
mov
inc
push
mov
test
loope
imul
sbb
xor
test
aas
outs
fisubr
jae
arpl
dec
out
(bad)
ins
les
ja
retf
sbb
add
pusha
cmc
sbb
lea
scas
inc
push
cwde
xchg
xor
xchg
es
sub
pop
pop
xchg
retf
xor
push
enter
xchg
jp
(bad)
test
sbb
inc
popa
mov
jmp
lahf
mov
adc
sbb
in
into
inc
fsub
sbb
inc
call
mov
jmp
add
inc
ja
cdq
add
xor
addr16
fsubr
test
je
mov
push
mov
(bad)
pop
inc
ins
mov
pop
cmps
aad
jae
fwait
or
(bad)
std
lahf
ins
icebp
bound
cmps
push
push
mov
xchg
and
shl
test
mov
jmp
in
pop
sti
xor
dec
fdivr
jg
addr16
pop
xchg
stos
lods
(bad)
nop
bound
push
pop
pop
xor
sbb
mov
inc
adc
popa
out
nop
mov
cmp
cmp
shl
out
js
(bad)
sub
mov
mov
icebp
xchg
mov
and
sbb
shl
mov
cwde
jmp
enter
mov
pop
out
or
xchg
rcr
push
in
add
cwde
sub
mov
stos
int
push
or
pusha
call
jns
jp
sar
or
xor
dec
inc
mov
fs
cli
xor
jno
(bad)
mov
in
pop
cmp
outs
popf
xor
or
add
retf
jno
data16
loope
fdiv
fstp
call
test
repz
sbb
in
push
pop
sub
repnz
and
xor
jae
add
pop
mov
inc
scas
xchg
dec
ror
outs
inc
and
dec
sub
add
or
push
dec
outs
xchg
lods
lahf
add
aaa
jnp
stos
mov
xchg
sbb
jle
sahf
jl
mov
test
enter
test
mov
shr
mov
jl
mov
bound
leave
xlat
movs
hlt
loopne
sbb
enter
out
in
retf
jbe
sbb
mov
jbe
cwde
imul
cmp
pop
sti
loop
mov
jns
or
mov
or
jae
outs
sub
cmps
xor
and
sti
cwde
add
push
in
aam
mov
mov
cmps
lea
sahf
imul
mov
dec
mov
mov
das
mov
xchg
scas
shl
mov
in
xor
popa
out
aas
jns
dec
sub
jns
je
pop
cmps
xchg
cdq
xchg
dec
or
popa
vcvtsd2si
cmc
pop
imul
dec
sbb
pop
test
fimul
cmp
xchg
sti
adc
cmp
sti
loopne
iret
leave
gs
adc
cdq
shl
mov
mov
sub
icebp
mov
ror
mov
pusha
mov
in
fst
mov
fmul
sbb
daa
jp
es
push
push
push
mov
mov
hlt
sub
in
inc
inc
inc
push
mov
and
pop
push
push
or
pushf
push
xor
dec
(bad)
rol
fild
dec
dec
xchg
(bad)
std
jb
call
jnp
ffreep
xchg
in
sbb
cdq
fs
call
inc
fimul
inc
aaa
sub
mov
jne
inc
imul
mov
pop
or
ret
adc
loop
mov
push
call
cs
(bad)
xor
add
outs
push
mov
pop
out
test
sbb
pop
stc
shr
ret
jo
pop
aad
jecxz
sub
push
out
pop
sub
stc
mov
inc
mov
jbe
mov
test
jmp
jmp
jmp
out
and
ror
std
je
pop
inc
jp
mov
outs
pop
jle
mov
(bad)
jl
fisub
movs
out
pop
dec
add
dec
add
aaa
fild
scas
or
xchg
mov
imul
xor
popa
outs
lods
push
jmp
adc
mov
icebp
neg
jle
cmps
mov
test
mov
xor
dec
aad
stos
push
fiadd
jbe
movs
aaa
jbe
mov
xchg
les
call
outs
adc
cmp
and
sbb
pushf
and
test
stc
das
inc
pop
outs
fcmovbe
popf
pop
mov
data16
push
bound
pop
fdiv
xchg
dec
rol
mov
mov
sub
arpl
mov
in
lods
enter
test
jb
or
frstor
cmp
push
mov
push
pop
mov
or
xchg
mov
dec
and
pop
sahf
into
cmp
inc
mov
sbb
outs
push
scas
ins
dec
xchg
dec
inc
call
(bad)
xlat
mov
pushf
inc
fs
push
xchg
cmps
inc
in
xchg
dec
paddd
cld
sbb
retf
sub
pushf
add
int
mov
jne
fisttp
xor
hlt
stos
pop
retf
and
fsub
jbe
mov
or
mov
fld
frstor
add
adc
xor
test
inc
cmps
or
mov
push
in
sahf
push
pop
popa
enter
mov
jbe
lods
dec
cmc
xchg
idiv
test
int3
out
sbb
shl
mov
push
pop
scas
fidivr
cmc
bnd
arpl
imul
cld
daa
sub
repnz
enter
bound
cmp
dec
and
mov
pop
cli
push
lahf
cld
add
push
add
sbb
pop
xor
das
mov
sbb
xor
xchg
sti
adc
add
aas
xchg
jmp
pop
mov
out
adc
cmps
sbb
mov
repnz
jge
loope
test
mov
fimul
mov
push
sbb
jmp
or
pop
jno
mov
jns
mov
cmps
iret
jp
pop
push
jmp
cmp
xor
dec
dec
test
lea
inc
test
mov
in
dec
pop
mov
fidivr
mov
and
ror
mov
dec
push
mov
mov
mov
fiadd
cs
adc
ret
sbb
pop
dec
push
lods
imul
mov
sti
push
iret
retf
xchg
arpl
inc
adc
xor
pop
mov
cmc
adc
push
cmps
push
inc
xchg
mov
pop
inc
add
into
fwait
inc
leave
hlt
pop
cmp
cdq
ret
outs
jmp
xchg
shl
mov
pop
js
xor
mov
cdq
(bad)
pop
lds
or
cmp
leave
iret
and
or
sub
cmp
mov
dec
mov
cmp
adc
adc
aaa
sbb
stos
or
add
outs
mov
jns
xchg
pushf
xor
cmp
jmp
cs
push
loopne
add
cwde
(bad)
pop
xchg
shl
inc
shl
repz
pusha
xchg
push
mov
out
fimul
lea
adc
mov
stos
inc
cwde
add
and
jo
dec
adc
xor
add
into
jl
data16
sub
imul
inc
mov
pop
xchg
cmp
fbld
ficomp
icebp
fsub
pop
in
xchg
adc
(bad)
xchg
or
push
mov
or
leave
xchg
inc
shr
adc
bound
scas
inc
not
inc
cmp
leave
fcom
inc
or
pop
mov
or
mov
sar
(bad)
cmp
add
ja
popf
push
cwde
add
jns
xchg
pop
pop
in
mov
les
test
inc
cdq
push
xchg
jmp
add
retf
lods
sub
imul
bt
push
cwde
xchg
inc
retf
ins
out
sub
mov
es
push
and
cmp
es
movs
test
enter
lock
jnp
jmp
sub
inc
call
stos
sahf
bound
dec
cmp
mov
inc
jp
xor
mov
mov
(bad)
mov
push
clc
shr
xchg
add
ret
mov
xchg
ss
in
fstp
mov
icebp
push
pop
sbb
jmp
jo
xor
dec
and
cwde
test
(bad)
adc
leave
sub
bound
pusha
lea
pop
(bad)
pop
jnp
or
sar
imul
sti
lods
out
or
scas
jae
movs
lock
xchg
sbb
call
sbb
cmp
js
mov
aad
mov
in
xchg
addr16
imul
(bad)
scas
dec
int3
adc
sub
clc
jo
dec
jmp
sbb
loope
enter
jae
aad
cs
sub
pop
pusha
mov
mov
cdq
pop
inc
push
xor
retf
mov
jecxz
jle
mov
pop
mov
mov
xchg
or
inc
mov
pushf
(bad)
dec
cmps
pop
jl
mov
imul
inc
cmp
lock
dec
lds
jge
jno
sbb
out
mov
out
clc
out
sub
cld
pop
adc
pop
mov
xor
lods
jle
mov
push
mov
adc
fldcw
jno
pop
dec
ins
xchg
jae
and
call
push
in
mov
into
sbb
push
cdq
inc
outs
mov
popf
add
mov
xchg
aam
jg
mov
inc
sbb
sbb
inc
les
adc
std
cmp
add
add
push
stc
mov
mov
jbe
jp
fldenv
imul
xor
xlat
push
adc
add
xor
jno
stos
mov
pushf
push
jmp
dec
frstor
jmp
imul
cmps
dec
jne
xor
neg
add
or
hlt
test
je
adc
es
xor
pop
mov
cwde
mov
adc
sub
sub
inc
cs
xor
mov
dec
inc
mov
pop
not
cli
and
pop
js
test
xor
jns
push
scas
dec
(bad)
(bad)
aad
cwde
shl
adc
int
test
outs
loop
(bad)
xor
test
cmp
fwait
mov
sbb
(bad)
mov
jbe
and
cmp
pop
jns
mov
scas
ja
ret
mov
pop
adc
inc
ds
add
out
pop
fwait
or
dec
cmp
mov
inc
push
pop
(bad)
sar
out
add
lds
mov
mov
jbe
lock
sahf
in
xor
lds
hlt
retf
(bad)
jnp
mov
aam
aaa
push
in
(bad)
fbstp
pop
ss
cs
and
fwait
mov
or
iret
sbb
out
sub
fcomp
or
aad
push
or
lods
and
and
push
xchg
in
(bad)
and
cs
iret
test
xchg
add
jo
into
loop
and
imul
ret
out
mov
arpl
loopne
icebp
retf
xchg
mov
in
sbb
in
mov
push
fisttp
ins
pop
and
mov
out
jl
stc
sbb
hlt
add
and
adc
pop
mov
push
mov
jl
into
sub
push
aam
and
fdivr
addr16
bound
cmp
jmp
dec
rcl
scas
ins
xchg
inc
xchg
jmp
push
mov
mov
mov
(bad)
outs
dec
stos
xchg
ins
xchg
dec
out
pop
cmp
ss
cmp
adc
cwde
xor
int3
sbb
cld
and
ja
fadd
ins
push
push
adc
cmp
inc
or
in
scas
popf
bound
sub
jecxz
mov
aad
inc
push
mov
mov
out
jecxz
push
sbb
(bad)
nop
pop
in
mov
inc
dec
in
mov
test
cwde
pop
in
xlat
sbb
into
(bad)
call
jns
test
jge
mov
mov
in
push
pushf
cld
daa
mov
cmp
and
sbb
stos
imul
cmp
sbb
cmps
lea
cmp
sbb
addr16
dec
test
scas
sti
pop
xchg
mov
add
fdiv
add
pop
mov
pop
js
xchg
test
inc
icebp
or
lods
push
out
cmps
xor
loope
fistp
adc
fnstsw
pop
inc
pushf
addr16
dec
mov
iret
mov
in
or
repnz
push
push
aam
sub
imul
mov
mov
xor
mov
ret
aas
mov
jo
dec
jae
mov
xor
loopne
add
sar
mov
push
jl
mov
cs
fiadd
pop
mov
xor
sbb
adc
pop
int
push
jns
scas
adc
cmp
lahf
dec
adc
daa
xchg
into
inc
pop
add
call
and
inc
inc
mov
cmp
aas
addr16
or
call
lds
inc
xchg
imul
mov
add
fild
sti
mov
js
shl
ds
clc
loope
cmp
out
fst
pop
adc
rcl
pop
shr
xor
dec
push
or
sub
adc
adc
jne
xchg
sbb
bound
jne
mov
push
inc
push
push
loop
loopne
stos
int
xchg
jbe
sub
mov
inc
out
mov
out
movs
or
xchg
movs
mov
xlat
sbb
cwde
pop
push
loopne
mov
inc
stc
fimul
in
test
or
xor
in
cmp
fldcw
push
add
sub
fisttp
push
sbb
es
loop
cwde
or
addr16
sub
jne
scas
xchg
adc
jl
aam
and
jl
inc
ror
(bad)
jp
shr
bound
stc
mov
jmp
jmp
and
loop
jp
mov
scas
cs
aaa
mov
stos
inc
out
or
or
js
xor
ja
mov
out
stc
jmp
pop
out
sub
xor
or
inc
pusha
mov
jb
xchg
mov
es
inc
out
test
xchg
push
repnz
push
mov
cmp
mov
and
mov
stos
in
leave
inc
lods
push
outs
adc
std
mov
fidivr
jecxz
imul
fstp
pop
xor
mov
rcl
add
addr16
push
add
cwde
xchg
mov
call
dec
adc
sbb
push
xor
push
mov
fisttp
test
mov
(bad)
cli
cmps
xor
fs
and
jno
and
mov
mov
movs
ret
adc
mov
out
(bad)
cwde
test
fmul
imul
cs
out
cmp
xor
mov
movs
movs
mov
fcmovnbe
rsm
cmp
outs
pop
ss
out
mov
dec
lea
jae
in
cwde
push
xchg
(bad)
push
(bad)
je
and
inc
test
loop
adc
sti
bound
fcomp
jno
mov
test
mov
icebp
pop
add
jmp
pop
bound
jne
jno
mov
stos
sub
sbb
mov
mov
ss
imul
in
ds
and
inc
or
push
scas
test
sysenter
push
inc
pushf
jmp
cmp
push
je
pop
stc
sub
fs
sahf
inc
pmaxub
cmps
cs
outs
icebp
(bad)
fsqrt
dec
xchg
mov
(bad)
cmc
mov
(bad)
bound
fwait
xor
pop
aam
pop
push
cli
lock
add
pop
movs
adc
jl
pop
add
jmp
jle
mov
push
cli
aaa
and
aaa
imul
bound
add
scas
lods
ins
aas
sub
add
push
push
frstor
jmp
cmp
fbstp
sbb
repz
xchg
pop
xchg
mov
imul
popa
js
mov
(bad)
loop
inc
inc
sbb
call
out
int
enter
push
scas
ins
adc
mov
and
mov
fldl2t
pop
cwde
cld
push
pusha
popa
inc
cld
aas
imul
xchg
and
(bad)
adc
push
xchg
nop
clc
sub
add
fadd
out
inc
je
jp
mov
xor
pop
add
jl
mov
inc
pop
mov
jmp
ds
jl
xchg
fbstp
ins
cli
or
dec
rol
stos
cmp
cmp
cmova
dec
pop
adc
add
dec
loopne
add
inc
jmp
and
add
lahf
push
sub
ins
mov
inc
mov
jnp
aam
cmp
int
ret
inc
inc
push
fisubr
faddp
call
ins
hlt
mov
sbb
(bad)
popf
add
mov
jne
sahf
xchg
and
loopne
call
fsubr
sub
xor
out
jmp
or
ss
cmp
mov
fisubr
retf
and
dec
sbb
cmp
stos
or
nop
or
xor
mov
sub
(bad)
jmp
push
icebp
xchg
repnz
movs
aad
push
out
push
adc
mov
fwait
cmps
mov
ja
mov
loopne
jecxz
push
jmp
push
xchg
push
stos
xor
cs
out
cmc
jb
adc
pop
dec
jne
xor
xchg
stos
or
jle
into
inc
push
pop
hlt
cmp
sbb
and
adc
(bad)
dec
inc
stos
xor
ucomiss
(bad)
retf
push
lea
mov
dec
mov
test
inc
lods
mov
push
mov
rol
cmps
aad
inc
pop
xchg
mov
ins
rcl
lock
xor
cmp
jne
pop
mov
and
cmps
fbld
push
add
inc
and
push
sub
jl
sahf
ja
lods
push
pop
mov
mov
jmp
ret
push
jge
mov
rol
push
cwde
scas
xchg
data16
push
icebp
hlt
mov
xchg
dec
test
lods
(bad)
cmp
dec
addr16
xchg
std
fisubr
mov
and
clc
pop
xchg
and
fdiv
pusha
inc
mov
mov
sbb
xchg
andps
cmc
push
imul
add
dec
bound
pop
div
lahf
lock
add
mov
outs
movs
repnz
xlat
adc
fdiv
xchg
lea
cli
ret
out
loope
ins
jecxz
dec
out
pop
fiadd
es
rcr
jge
sbb
popa
cmps
sbb
pop
div
jne
test
jmp
imul
jno
mov
mov
cwde
pop
cmp
cmp
lods
mov
xchg
dec
pop
push
jbe
pop
clc
xchg
enter
sti
adc
xchg
add
and
fs
lahf
aam
fcomp
mov
std
mov
sar
add
pop
xor
(bad)
std
imul
fild
pop
std
je
jns
pushf
movs
mov
std
loop
xor
push
arpl
add
push
push
lahf
push
inc
cmps
push
pop
mov
dec
fcomp
pushf
and
fs
mov
lds
xor
clc
mov
hlt
jle
mov
dec
jne
mov
xchg
fwait
je
pop
repz
sbb
js
push
inc
ds
shr
mov
mov
aad
ror
pop
ficomp
es
fs
mov
rcl
stos
das
stos
cmp
adc
fcmovnu
xchg
xor
sbb
pop
xchg
pusha
std
cwde
in
loope
xchg
push
xchg
mov
cld
push
(bad)
jge
mov
js
in
mov
hlt
hlt
rcr
popf
lea
jo
dec
sub
mul
fcom
inc
add
pop
mov
shl
in
or
cmp
sub
jl
imul
inc
mov
jns
into
cld
push
sbb
fsubr
cwde
pop
push
dec
cdq
jbe
nop
std
outs
call
push
sti
fstp
mov
dec
arpl
or
rcr
push
mov
gs
imul
pop
inc
std
test
pop
fsub
push
sub
mov
scas
ror
int3
pop
loopne
add
fist
jp
mov
pop
mov
mov
stos
inc
inc
stos
push
and
cmps
mov
xchg
lods
popf
ds
pop
inc
lds
mov
xchg
push
nop
mov
push
mul
cmc
xchg
mov
sbb
hlt
shr
cld
cmp
ficom
in
and
imul
mov
and
aas
dec
outs
xchg
pop
jmp
lds
popf
rcl
clc
jb
jns
mov
and
sbb
push
movs
xchg
push
pop
cmp
clc
fwait
adc
pop
inc
stos
pop
cdq
mov
mov
into
popf
pop
or
xlat
stos
push
ffree
sub
mov
test
sahf
inc
in
jmp
cmp
call
adc
pusha
jno
aas
push
popa
mov
ret
dec
pop
rcr
ret
repz
jl
inc
enter
push
jl
inc
mov
mov
add
and
cli
out
stos
xor
inc
mov
jle
(bad)
mov
xchg
test
(bad)
mov
fstp
test
mov
mov
test
gs
push
out
sub
sti
rcr
jo
arpl
push
sub
lods
push
or
push
call
mov
lea
push
ret
mov
lea
and
pop
in
fcom
hlt
jge
and
cmp
xchg
je
test
mov
shl
mov
dec
xchg
mov
bound
xchg
clc
(bad)
cmp
test
xlat
sbb
call
sbb
inc
ficom
addr16
dec
sbb
int3
aaa
or
pop
jmp
add
mov
push
test
ins
push
mov
jg
(bad)
movs
sbb
or
aad
push
mov
jge
bound
fimul
mov
mov
pushf
pop
and
rcr
mov
adc
mov
retf
retf
mov
xor
push
retf
daa
stc
aam
inc
int3
aas
push
or
sub
xor
mov
int
sub
pop
add
cmp
and
mov
pushf
xor
sbb
mov
jno
mov
popa
in
jmp
jle
arpl
jle
repnz
inc
rol
div
(bad)
js
mov
retf
sbb
inc
pop
mov
fld
inc
cdq
scas
(bad)
jmp
dec
in
(bad)
icebp
addr16
pop
jg
mov
jg
pop
pop
bsr
call
leave
rol
dec
push
dec
jne
cmc
cmp
arpl
jb
scas
aaa
push
call
xchg
stos
fwait
xor
inc
popa
lea
popf
mov
dec
xchg
leave
test
nop
pop
cmp
inc
adc
scas
sbb
retf
in
push
cmps
xor
push
loop
out
push
lds
arpl
push
sahf
ss
dec
xchg
xor
mov
dec
push
in
(bad)
and
push
push
retf
add
sahf
add
push
inc
fsubr
retf
in
test
push
fucom
xchg
and
std
jno
bound
fcom
scas
ret
jb
int3
xchg
jbe
mov
mov
push
lea
imul
fucom
xchg
in
aad
push
jmp
in
add
xchg
mov
outs
fwait
add
inc
(bad)
cmp
or
push
cmp
or
aad
syscall
das
adc
stos
push
(bad)
or
mov
mov
in
xchg
ds
add
dec
push
pop
cwde
imul
in
mov
call
cmc
mov
cli
inc
(bad)
xchg
test
push
scas
sbb
xchg
scas
or
ret
fidivr
sbb
fcom
and
shl
push
add
addr16
test
in
test
cwde
adc
cmc
outs
in
cmp
std
jne
pop
sbb
cmp
jl
and
in
inc
inc
ficom
sub
mov
and
(bad)
es
sbb
push
and
dec
mov
mov
xchg
popf
jle
in
jmp
les
mov
lahf
shl
hlt
outs
bound
rcl
adc
pop
loopne
js
and
data16
mov
jmp
push
inc
aad
outs
jp
sbb
dec
fs
js
adc
fwait
cdq
imul
adc
sar
ror
pop
lods
dec
fistp
sbb
aam
mov
mov
adc
xor
xor
clc
mul
call
xor
jb
inc
xor
and
and
jno
jge
jb
push
cwde
mov
neg
(bad)
jle
enter
and
pushf
cmp
fisttp
inc
(bad)
or
mov
xor
sbb
je
fwait
outs
aad
ret
shl
add
pop
mov
mov
cmp
xchg
cs
int
clc
retf
addr16
xor
or
xchg
sub
es
jl
imul
xchg
cli
sbb
lock
mov
adc
and
icebp
push
retf
in
xlat
fwait
xor
dec
mov
push
repnz
jno
pop
lock
sti
push
repz
loopne
adc
mov
xchg
pop
push
mov
shl
test
xchg
ja
dec
leave
push
sbb
out
inc
or
or
jbe
dec
add
ret
sahf
(bad)
dec
fwait
call
jb
ds
cmp
dec
adc
adc
push
cmp
cwde
or
xchg
sbb
dec
push
test
rol
retf
mov
scas
or
sbb
adc
pop
dec
loop
test
adc
out
rol
xor
sbb
aad
fbld
int
inc
add
or
xor
mov
mov
sub
xlat
sbb
adc
pcmpeqd
cmp
sbb
stos
sbb
xchg
call
add
bound
sub
scas
shl
loop
dec
out
jg
repnz
jnp
sbb
lahf
pop
pop
sahf
ret
jnp
inc
push
mov
aad
pop
sub
fdivrp
es
cs
jp
xchg
cmp
mov
mov
cmps
ins
out
das
(bad)
push
push
pop
or
aas
imul
jne
inc
sbb
jns
fst
imul
sbb
pop
and
push
iret
mov
mov
sti
test
adc
ins
pop
mov
lock
cmc
mov
xchg
sahf
ja
dec
stc
dec
cmp
pop
cmp
cmp
mov
pop
pop
xchg
cli
push
repz
and
inc
push
data16
push
cdq
or
xchg
sub
jmp
das
xor
repz
mov
sar
movs
cld
inc
adc
jbe
mov
(bad)
ins
(bad)
popa
sub
adc
iret
fidiv
mov
sbb
inc
sti
pop
pop
cmp
sub
lahf
jo
or
adc
cmp
adc
sbb
sub
jo
mov
(bad)
xor
aad
ins
push
push
jae
jmp
jb
jnp
ins
nop
pop
ficomp
jmp
pop
mov
pushf
push
(bad)
pop
hlt
mov
iret
sbb
out
xor
test
shr
aad
pop
icebp
pop
jnp
dec
mov
jne
dec
mov
scas
mov
std
stc
or
sub
xor
sbb
test
popf
adc
push
inc
loop
in
mov
jg
jp
pop
fwait
jg
fdiv
jge
int
dec
out
fs
ret
out
lds
xor
popf
mov
jmp
in
xchg
ins
jmp
sti
aad
out
xor
inc
scas
push
add
cmps
xchg
pop
(bad)
add
aaa
aad
add
and
jbe
jae
rcl
mov
adc
xor
out
inc
adc
scas
push
fist
loope
call
cmps
div
pop
mov
fldln2
sbb
xchg
and
(bad)
(bad)
lods
adc
in
pop
sbb
pop
pushf
xor
adc
xchg
pop
mov
leave
lods
or
cmp
es
ds
xchg
and
pop
push
stos
ins
xor
sub
push
stc
repz
xchg
mov
pop
ins
and
gs
test
mov
imul
xchg
pop
cmps
movs
lahf
jmp
lods
pop
inc
add
and
mov
mov
rol
scas
push
fsubr
cmp
sar
std
pop
int
add
pop
call
dec
xchg
mov
jle
leave
adc
jecxz
imul
and
outs
push
dec
add
mov
jmp
les
ds
cmp
(bad)
call
sub
out
mov
mov
mov
aas
shl
test
mov
adc
jmp
add
push
dec
xchg
push
and
enter
jle
fistp
mov
sbb
pop
push
in
pop
aas
imul
mov
xchg
add
or
mov
gs
mov
retf
mov
jg
test
les
ja
loop
add
jle
mov
pop
out
movs
outs
ds
shl
lods
je
push
into
or
in
data16
inc
push
sub
cmp
mov
or
aas
sbb
jl
ret
dec
push
je
fidivr
fs
sub
inc
push
movs
push
sbb
sub
in
sbb
jecxz
retf
leave
jge
sub
lock
loop
inc
out
dec
and
rcr
scas
stc
cmp
mov
add
inc
fs
cmp
dec
cli
push
cmp
inc
jecxz
or
fcomp
pop
push
test
popa
mov
pop
clc
pop
retf
xchg
rol
cmp
cmp
jge
movs
dec
adc
sub
(bad)
sbb
out
cmp
mul
push
sti
movs
retf
pop
and
push
add
mov
repz
xchg
nop
nop
add
mov
xchg
sub
cmp
nop
and
jo
sbb
jne
dec
cmp
movs
retf
sbb
in
or
xchg
inc
adc
jmp
mov
cs
pop
inc
mov
xor
xchg
cmp
xchg
stc
movs
and
inc
jp
and
mov
in
jmp
sti
xchg
add
je
sub
out
xchg
out
ret
test
retf
add
(bad)
int
fild
inc
daa
pop
mov
sbb
inc
and
(bad)
mov
xchg
sbb
sub
inc
add
and
and
lea
push
mov
outs
cdq
pop
or
pop
or
out
test
and
pop
popf
jg
xchg
fimul
rol
add
test
mov
sbb
jle
mov
jmp
int3
cld
push
gs
mov
dec
pop
or
fucomip
es
cmp
imul
out
into
mov
or
pop
repnz
sar
clc
push
pop
jp
add
jl
cmps
dec
or
clc
and
xor
add
push
ins
call
call
sbb
cmps
mov
mov
jne
fisub
lock
fmul
jmp
outs
int3
outs
in
cmp
sbb
vhaddpd
cmp
test
push
pop
jg
stos
into
mov
and
sbb
dec
adc
mov
xor
ins
push
cwde
push
and
mov
xor
jge
mov
push
call
xchg
icebp
rol
xchg
movs
jno
enter
lds
movs
mov
inc
xor
xchg
test
jle
mov
push
in
jno
adc
inc
(bad)
ret
data16
cmp
add
xor
mov
les
out
fstp
mov
inc
ins
pop
adc
daa
sbb
sbb
add
mov
data16
pop
jmp
loop
rcl
push
rcr
sub
in
mov
mov
popf
mov
sbb
jmp
mov
arpl
and
outs
cwde
ret
outs
xchg
ja
or
cli
fsubr
dec
cdq
es
arpl
jns
ja
fwait
xchg
int3
dec
or
test
inc
inc
jp
in
jae
and
jno
inc
adc
pop
and
sub
mov
loope
inc
sbb
loopne
add
jmp
out
push
ins
mov
popa
test
mov
test
loope
in
lahf
js
mov
mov
xchg
repz
sbb
and
test
(bad)
fistp
cmp
inc
mov
imul
pop
sahf
inc
popf
jmp
jno
cmp
push
or
adc
and
ror
mov
xchg
sbb
pop
ret
icebp
call
cmc
dec
inc
(bad)
sub
xchg
clc
stos
out
movs
push
(bad)
mov
stos
adc
xchg
stc
mov
sub
inc
push
in
xchg
jl
xchg
fiadd
lahf
mov
out
clc
push
push
dec
(bad)
fist
jae
jl
ins
pop
movs
xor
push
in
mov
leave
inc
jmp
pop
push
sub
sbb
fmul
add
push
jne
aam
ss
or
(bad)
sahf
cmp
gs
test
cmp
test
imul
lock
popf
mov
ja
mov
fs
(bad)
(bad)
fisttp
inc
int3
jae
xor
int3
push
ror
cmp
and
add
sub
rcr
jmp
push
jl
and
into
dec
dec
scas
je
cmp
mov
scas
jno
and
loop
mov
popa
and
pop
test
adc
add
xchg
aam
xor
lock
pushaw
mov
mov
imul
mov
pop
fimul
daa
xlat
retf
iret
push
cli
cmp
sbb
and
test
sbb
ret
(bad)
inc
inc
or
mov
or
arpl
inc
or
mov
adc
loopne
xchg
fild
addr16
sub
xchg
hlt
cmp
jecxz
jb
mov
cmc
or
jg
clc
lahf
mov
sar
test
sti
mov
jae
jl
ds
(bad)
jmp
pop
cmp
push
push
jo
mov
(bad)
sar
push
and
ja
(bad)
push
mov
addr16
imul
add
ficomp
(bad)
arpl
cmp
and
jmp
(bad)
cmps
movs
jne
jle
cmps
mov
movs
dec
cmp
mov
repz
inc
xchg
lahf
push
not
xor
in
bnd
sub
ror
popa
jns
push
inc
push
mov
mov
int3
retf
push
stos
(bad)
add
cmp
pop
(bad)
jg
pop
dec
(bad)
dec
xor
cmp
and
pop
hlt
rcr
retf
gs
iret
cld
cmp
fstp
(bad)
adc
repnz
(bad)
sbb
enter
shl
mov
fld
and
rcl
jns
jnp
sbb
inc
mov
mov
in
ins
pushf
mov
retf
inc
dec
jecxz
or
xor
mov
pusha
jae
jp
mov
dec
xchg
and
lods
jecxz
(bad)
mov
pop
pop
inc
mov
test
call
in
sbb
dec
lods
test
(bad)
dec
mov
lahf
mov
pushf
mov
fwait
ins
repnz
sbb
ss
cmp
fbld
fs
pusha
and
les
sbb
loope
stos
fcomp
jl
jmp
push
xchg
add
sbb
stos
push
stos
aaa
jns
fwait
sti
sbb
addr16
mov
xchg
sar
inc
jne
fstp
mov
mov
push
std
out
and
pop
scas
sti
xor
cmps
mov
cs
cmps
std
call
jno
das
sti
or
data16
push
jge
shl
popa
dec
mov
pushf
mov
test
or
and
adc
and
jge
mov
scas
add
(bad)
sub
dec
cmp
neg
les
jg
popa
loopne
xchg
retf
mov
sbb
ror
mov
push
mov
xchg
js
(bad)
xchg
lock
stos
test
sbb
or
lock
dec
add
outs
mov
outs
pop
push
xchg
mov
mov
pushf
cmp
pop
push
outs
pop
and
xchg
xor
xor
pop
dec
(bad)
push
sbb
xchg
jno
and
fisttp
xlat
outs
pop
jbe
jb
xchg
les
iret
sti
dec
lock
pop
fld
adc
adc
cmps
mov
mov
repz
dec
cmc
mov
cmp
loop
in
sub
xor
mov
mov
out
out
stc
or
mov
dec
xor
adc
daa
rcl
popa
pop
movs
ja
mov
jo
xchg
mov
outs
aam
cdq
cs
sar
jg
jg
push
fsub
mov
leave
lahf
add
add
movs
xchg
mov
sbb
xor
clc
clc
stos
call
fs
repnz
fisub
add
inc
stos
sub
jmp
es
in
jecxz
or
(bad)
dec
and
cmp
and
imul
jp
into
stos
aaa
cmp
dec
out
mov
daa
xchg
xchg
sbb
inc
pop
pop
mov
xchg
out
jmp
movs
mov
call
fstp
pop
call
sub
aad
and
sub
add
or
mov
xchg
dec
cld
std
and
add
and
push
sub
mov
inc
ins
rcl
ror
xchg
(bad)
in
xor
aam
mov
xchg
in
sbb
jnp
fcomp
stc
inc
xchg
test
xlat
fisub
cmps
fldpi
cmp
ins
sbb
call
dec
inc
mov
fisubr
imul
pusha
sbb
xor
cmps
jo
pop
jmp
leave
mov
inc
jmp
pop
inc
je
fld
cmp
and
or
imul
dec
pop
mov
cmp
call
js
inc
pop
cmps
jnp
mov
popf
imul
je
in
hlt
xchg
mov
jo
test
call
dec
ror
or
int3
jmp
sbb
sub
cdq
jns
jo
mov
in
ror
pop
or
inc
sbb
aas
xchg
or
jno
(bad)
push
jl
xchg
sti
ds
mov
test
ret
dec
xor
ja
cld
inc
xor
mov
cli
cmps
cmps
out
mov
mov
mov
lds
xchg
xchg
push
iret
pop
out
sbb
iret
mov
and
dec
jo
addr16
popa
mov
lods
mov
in
adc
and
ss
pop
scas
add
pop
pusha
and
aaa
ins
lea
fwait
jmp
add
call
stos
mov
or
loopne
jne
pop
mov
scas
rol
stos
imul
xor
dec
sbb
rol
aad
lds
jp
arpl
sub
and
imul
dec
int
and
inc
add
and
jo
icebp
add
mov
sbb
mov
dec
int
movs
or
std
(bad)
aam
jp
mov
les
push
jmp
adc
push
call
cdq
add
mov
xchg
fadd
lods
mov
sub
xor
xchg
shr
add
inc
mov
jne
adc
sbb
inc
int
cs
lock
inc
add
add
aas
mov
test
inc
mov
stc
cmovg
inc
aam
popf
inc
xchg
aam
cmp
and
and
cmps
shr
lds
popf
or
sbb
jns
adc
es
mov
inc
shl
sbb
into
repnz
inc
bound
inc
scas
push
pop
jno
(bad)
rcl
loopne
and
sbb
cmp
ja
imul
jns
inc
xor
cmp
mul
push
call
xchg
sub
jecxz
mov
nop
mov
sbb
shr
lahf
int3
sbb
pop
add
xor
shr
mov
fld
clc
or
dec
std
clc
clc
js
cmp
push
mov
daa
sahf
inc
push
jg
pushf
stos
retf
jmp
mov
daa
fisttp
orps
adc
pop
jbe
adc
mov
sub
(bad)
sahf
cmp
(bad)
sbb
pop
arpl
push
les
sahf
dec
enter
cmc
mov
mov
mov
popf
arpl
js
mov
aaa
push
or
ds
aaa
and
cmp
mov
sbb
mov
pop
(bad)
sbb
loope
shl
push
dec
or
aas
xor
push
test
mov
inc
jmp
cld
or
stos
test
fisubr
jg
pop
ret
xor
out
sub
aam
or
dec
add
pop
xchg
jmp
ja
stos
push
call
dec
repz
pushfw
add
dec
lods
xor
xchg
cmp
inc
stos
test
enter
(bad)
fucomp
push
movs
cld
push
addr16
xor
push
mulps
adc
add
fld
cli
in
xchg
and
test
pop
bound
dec
add
loop
into
xchg
jnp
rcr
std
push
mov
push
out
mov
push
(bad)
shl
(bad)
frstor
mov
sti
add
loop
fcomp
sbb
pop
mov
jbe
neg
or
add
push
leave
rcr
mov
jnp
js
aam
jae
and
cmp
adc
dec
xor
cmps
sbb
rol
frstor
jae
pop
test
mov
jmp
push
xor
aam
sub
push
mov
fwait
les
xor
xchg
cmp
out
dec
mov
cmp
daa
leave
int
dec
rol
cmp
xor
add
retf
es
popa
cld
fld
cmps
out
push
inc
pop
cmp
adc
outs
adc
inc
jae
pop
sbb
xor
adc
push
gs
test
mov
dec
jg
push
add
jbe
xlat
fisttp
stos
cdq
mov
call
ds
adc
inc
mov
call
cld
fbstp
cmp
mov
pop
push
lahf
fld
dec
out
das
sbb
push
pop
push
jecxz
add
add
dec
adc
mov
xchg
(bad)
loop
mov
dec
aad
arpl
rol
in
mov
mov
add
jmp
sbb
div
test
mov
rol
cwde
fiadd
dec
div
pop
push
in
aad
dec
inc
sub
movs
and
dec
add
mov
mov
cmp
inc
loope
jo
sar
and
add
pop
xchg
adc
inc
sub
mov
les
pop
fild
lods
inc
fcomp
mov
mov
mov
iret
sbb
sbb
pushf
pushf
daa
xor
(bad)
test
fimul
jecxz
pop
hlt
dec
int3
push
or
out
enter
pop
aaa
test
js
test
or
cmp
test
add
enter
pop
into
aaa
sub
sbb
xchg
push
lods
cmps
mov
pushf
fdivr
sti
inc
jbe
mov
cmp
call
lea
cmp
cmc
pop
fild
lods
lds
stos
rcr
push
inc
or
cmp
fld
icebp
inc
nop
add
dec
fcom
dec
dec
or
or
(bad)
repnz
stos
cli
dec
inc
cmp
adc
xor
mov
outs
push
lods
pop
adc
mov
cmp
(bad)
int
adc
pusha
popf
push
in
idiv
ret
mov
or
call
mov
fmul
pop
test
scas
mov
cld
mov
ret
gs
lahf
scas
pop
rcl
pop
adc
fistp
add
inc
mov
lds
dec
fsub
sbb
cld
jb
dec
adc
push
mov
jae
xchg
dec
add
lsl
xor
stos
in
xchg
repnz
sahf
jmp
inc
jmp
pusha
xor
test
(bad)
adc
mov
xor
dec
mov
cmc
lock
xor
xor
xchg
mov
inc
rcr
rol
or
pop
(bad)
sub
sbb
mov
scas
cs
push
hlt
fist
jmp
rol
mov
add
cmps
cld
or
sbb
add
data16
movs
mov
pop
fcomp
cmc
mov
sbb
and
call
lods
or
mov
and
cmc
sub
pop
std
xor
pop
sub
or
push
mov
inc
jmp
(bad)
cli
in
mov
jge
jle
ins
mov
arpl
into
test
cmps
push
in
mul
js
mov
dec
add
dec
(bad)
aad
int3
or
jo
ss
iret
jmp
jb
add
push
lods
or
push
test
xchg
xor
leave
pop
mov
sub
inc
or
cmp
pop
push
rol
adc
mov
sub
cdq
es
sbb
sbb
cmp
out
xchg
sbb
faddp
add
stos
sbb
arpl
sub
scas
(bad)
dec
inc
mov
push
enter
sub
out
(bad)
jge
add
add
cmp
jnp
xor
mov
sbb
push
repz
dec
jp
leave
add
adc
icebp
and
outs
mov
mov
mov
ds
xor
sbb
cmps
dec
retf
and
in
push
cld
inc
push
(bad)
jmp
movnti
and
test
std
not
test
mov
cmp
xchg
test
js
adc
push
mov
dec
call
sub
fs
add
loope
or
xor
pop
es
cmp
adc
jl
mov
arpl
dec
pop
out
out
xchg
push
retf
cmc
jo
sbb
ins
mov
in
mov
mov
inc
out
jbe
out
repz
mov
ins
mov
cmc
add
aad
into
jecxz
je
lahf
inc
xlat
ins
fnstcw
add
shr
push
shl
jns
cwde
xor
cmp
lahf
movs
xor
rol
(bad)
jp
add
call
xor
push
inc
cmps
jns
test
stos
test
mov
adc
inc
pop
fist
mov
pop
in
mov
xchg
movs
push
adc
jmp
xchg
in
sbb
js
nop
mov
sub
inc
sbb
cmps
push
jle
xor
loop
in
je
ds
dec
fistp
je
mov
mov
out
imul
(bad)
add
and
push
jb
mov
cwde
sub
dec
dec
fmul
mov
mov
enter
icebp
dec
stc
dec
push
fidiv
mov
dec
xchg
int3
cmps
push
mov
mov
jmp
push
test
xchg
mov
add
mov
retf
push
cmp
sub
mov
dec
mov
xchg
xchg
neg
xchg
jo
pop
push
out
aaa
pop
and
ss
or
xor
and
dec
sti
retf
sahf
adc
jmp
dec
pop
jl
shl
or
stc
mov
mov
push
mov
repnz
icebp
xchg
jmp
out
sbb
aad
out
jnp
popa
pushf
adc
div
dec
cmps
mov
retf
ret
and
inc
cmp
inc
xor
push
mov
xchg
je
dec
pop
mov
jl
mov
ds
sub
(bad)
xchg
adc
inc
(bad)
sub
call
lds
test
int
xchg
mov
pop
dec
call
stos
retf
js
movs
dec
in
push
shr
or
imul
lods
sbb
xchg
dec
mov
mov
sub
leave
jbe
jecxz
cmps
fild
ja
loope
xor
cmp
jb
popf
push
pop
mov
mov
ret
sbb
jbe
fdiv
mov
sbb
icebp
mov
adc
pushf
mov
aad
into
aam
push
mov
dec
clc
pop
test
fsub
dec
iret
sbb
jo
das
inc
push
mov
push
in
les
pop
in
retf
jmp
or
fisub
mov
mov
cmps
outs
push
pop
inc
shl
pusha
out
mov
xor
or
test
push
loope
inc
and
inc
out
xor
push
sub
xchg
ja
lea
inc
mov
mov
pop
xchg
cdq
inc
xchg
jns
push
sbb
fmul
enter
sbb
jl
dec
push
test
pop
xchg
test
mov
jecxz
and
add
sbb
jge
out
pop
mov
cmps
imul
xor
and
dec
mov
jae
cmps
jae
mov
in
in
mov
adc
jmp
shl
push
pop
in
movs
mov
lods
cld
test
push
mov
data16
dec
sub
loopne
push
push
fs
ins
inc
inc
clc
push
add
xchg
mov
ret
lock
pop
mov
ds
sub
add
dec
push
test
(bad)
cmp
sahf
lea
cdq
fadd
cmc
dec
sbb
push
fadd
and
out
xchg
pushf
gs
in
je
sahf
(bad)
sub
mov
inc
aam
mov
jecxz
dec
mov
fisubr
pop
popf
or
push
sbb
int3
inc
sub
dec
int3
repz
jmp
sbb
push
fmul
xchg
je
xchg
mov
das
and
mov
test
cdq
lock
loopne
xchg
push
out
push
xlat
loop
adc
jg
fwait
mov
sbb
push
outs
mov
xlat
retf
xchg
mov
xchg
xor
jl
(bad)
sub
out
inc
(bad)
inc
cmp
sbb
xor
pop
lahf
xchg
xchg
mov
std
fcomp
xchg
jmp
jne
adc
inc
or
pop
mov
push
shr
xchg
fcom
mov
pop
(bad)
fstp
clc
fs
pop
cdq
inc
enter
loopne
cmps
pop
repz
and
jmp
xchg
mov
or
lods
add
xlat
test
call
repz
or
fmul
inc
into
inc
add
xchg
jb
jnp
or
mov
xlat
ins
(bad)
cmp
mov
and
aad
dec
mov
jne
stos
mov
(bad)
cld
mov
fisub
pop
jg
(bad)
test
cmp
cmc
jecxz
sbb
pop
xchg
stos
fsubr
sbb
pop
retf
mov
dec
ja
mov
inc
pop
adc
fmul
push
sahf
and
jns
pcmpeqw
jns
pop
mov
lods
inc
(bad)
and
ret
popa
pop
pop
inc
loop
push
add
cmp
aas
mov
ja
cmps
sbb
mov
ret
inc
rcr
ficomp
ins
pop
ret
sahf
pop
mov
popf
push
test
nop
add
adc
test
jle
mov
adc
(bad)
mov
mov
scas
test
int
cmc
and
enter
je
pop
fwait
adc
lahf
push
or
xchg
mov
dec
sub
pop
(bad)
fisubr
rcr
dec
inc
(bad)
adc
cmp
aas
cmc
arpl
ins
add
adc
popf
xchg
lea
aaa
dec
jmp
fist
pop
je
test
icebp
cdq
mov
mov
adc
call
enter
mov
push
jecxz
xchg
adc
sar
imul
fild
jo
inc
xor
push
call
xchg
ins
inc
and
cmp
jbe
mov
out
ins
(bad)
cmp
push
sub
pop
xor
add
(bad)
test
inc
shl
inc
mov
xor
xlat
jmp
sti
pop
dec
pop
mov
loopne
cmc
jae
shl
adc
mov
call
dec
fwait
loope
shl
mov
xor
xor
in
sub
leave
jge
sbb
sub
or
mov
jle
popf
int
sub
add
retf
and
loope
inc
inc
sbb
cs
mov
add
mov
je
into
lea
sti
loopne
enter
jns
jle
jnp
or
popf
(bad)
mov
pop
(bad)
fiadd
cwde
mov
es
bound
xchg
scas
cmp
shl
xchg
push
int
lods
xor
repnz
jnp
ds
and
minps
xor
pop
stos
and
rol
mov
push
inc
pop
scas
sub
pop
add
sub
mov
cmp
(bad)
sti
sbb
sbb
mov
dec
mov
mov
push
jmp
pushf
shl
sbb
xchg
retf
popf
cdq
shl
dec
or
shr
icebp
push
lock
sbb
je
xor
dec
lahf
xchg
int
dec
add
sub
adc
adc
or
or
jg
mov
add
mov
das
and
idiv
cli
inc
push
dec
mov
cmp
mov
add
arpl
sahf
jp
mov
pop
xchg
fiadd
inc
xchg
imul
(bad)
std
push
icebp
or
or
and
mov
(bad)
ret
std
jp
ret
shr
pop
adc
inc
aas
pop
cmp
ins
out
add
mov
add
pop
cmp
mul
lock
jne
test
fstp
inc
das
sar
lahf
xor
sbb
ficomp
out
repnz
cld
aad
lods
jecxz
pop
cwde
sahf
ja
push
xlat
push
add
cld
jmp
sub
pop
sub
adc
pop
inc
cmps
mov
fiadd
jmp
mov
dec
push
popa
pop
jmp
xor
imul
ins
sahf
or
sbb
leave
call
repnz
push
inc
mov
cmp
aad
adc
jecxz
or
lods
mov
inc
pop
test
pushf
xchg
neg
dec
xchg
dec
cmps
adc
int3
and
inc
inc
jbe
sbb
inc
dec
cmps
mov
inc
test
add
rol
pop
retf
jne
push
pop
nop
add
imul
xor
stos
mov
sahf
test
jg
pusha
fwait
dec
mov
mov
sub
icebp
xchg
cmp
bound
sbb
ret
adc
rol
loop
push
inc
iret
dec
cmp
enter
push
jo
pop
mov
bound
outs
mov
movs
sub
nop
push
fcmovnu
pop
sbb
adc
xor
inc
jns
imul
add
mov
ret
int3
mov
icebp
push
ins
pop
mov
sbb
sbb
xchg
std
xchg
sub
je
mov
jg
mov
fld
call
out
sub
es
push
cmp
inc
pop
mov
mov
cdq
clc
cmp
aaa
cmps
or
dec
adc
cmc
and
and
adc
pop
mov
mov
xor
sub
popa
fstp
mov
cmp
call
cmp
imul
mov
push
(bad)
nop
clc
aad
push
pop
retf
push
inc
dec
stc
mov
add
xor
sahf
jbe
or
mov
out
dec
call
inc
cmp
add
mov
popa
dec
xchg
je
(bad)
push
arpl
or
test
inc
xchg
push
cdq
dec
mul
xchg
adc
loop
pop
jmp
mov
test
popa
loopne
lock
jmp
mov
popf
inc
arpl
mov
or
stc
aam
cmp
adc
dec
movs
add
dec
jmp
pop
mov
int3
jle
enter
add
cmp
ds
inc
(bad)
mov
mov
int
adc
adc
mov
sahf
imul
imul
retf
sbb
pop
cmps
jae
cmps
call
test
lock
out
xor
mov
inc
mov
inc
cmc
test
xlat
dec
stc
sub
aaa
cli
(bad)
cli
inc
jb
pop
mov
jg
mov
mov
or
fcomp
(bad)
sub
add
mov
xor
fldenv
nop
dec
push
rcl
inc
cmps
movs
lea
adc
stc
and
pop
fs
jo
mov
cmp
cmps
or
icebp
(bad)
leave
inc
mov
push
xchg
mov
pop
adc
ins
mov
pop
stc
cmp
scas
jo
xor
pop
adc
dec
xchg
dec
and
ret
movs
mov
enter
aad
inc
pop
inc
mov
(bad)
jmp
dec
push
jne
lods
push
pop
mov
and
scas
ret
outs
inc
push
fisubr
mov
xchg
inc
xchg
mov
mov
xchg
ins
mov
push
pusha
fwait
mov
fs
repnz
les
push
sub
icebp
rcr
es
cmp
inc
xchg
adc
stos
push
pop
nop
sahf
cdq
leave
sub
jl
in
xor
sbb
sub
push
cmp
out
pop
xor
jo
pop
push
lea
aad
adc
mov
loop
pusha
movs
jo
xchg
std
xor
pop
add
xchg
add
pop
pusha
mov
repz
test
(bad)
xor
xor
dec
pop
sub
sar
fs
pop
jge
dec
movs
sub
mov
ret
mov
or
push
fcom
inc
aaa
fiadd
push
je
sbb
inc
sbb
pop
mov
pusha
sti
cmps
cmps
inc
mov
inc
daa
mov
jnp
retf
in
in
cmp
cld
mov
mov
cmps
(bad)
shl
mov
lods
outs
inc
shl
fst
ds
ret
pusha
xchg
push
cli
xor
jne
add
cmp
inc
and
ret
xchg
mov
sti
ret
cmp
pusha
sbb
adc
ja
adc
mov
push
ds
sbb
nop
fldenv
imul
xchg
retf
fist
movs
ins
repz
addr16
mov
mov
rol
mov
(bad)
or
lods
xor
inc
adc
movs
imul
or
mov
daa
lds
cmp
test
sbb
aam
out
sub
cmp
inc
sbb
add
jl
mov
add
mov
imul
popa
(bad)
aaa
mov
inc
loop
inc
(bad)
fcomp
mov
mov
ret
push
repz
sahf
movs
sar
outs
movzx
xchg
push
sub
out
rcr
(bad)
xlat
inc
scas
xor
cmp
lock
cmp
inc
xor
or
pop
enter
sub
imul
push
adc
ss
add
cwde
cmp
mov
inc
repz
sub
fs
xor
push
js
push
jmp
push
lock
adc
inc
xor
fcom
jns
lahf
cwde
mov
jmp
stc
ins
jns
fidiv
push
in
aaa
pop
dec
fdivr
enter
add
cmps
aas
inc
and
push
push
ins
jmp
daa
mov
jmp
add
pop
loopne
push
je
gs
sbb
jae
sbb
push
sub
outs
aas
dec
pop
fsincos
mov
lds
push
fidiv
mov
aas
xchg
mov
(bad)
in
mov
mov
into
dec
(bad)
mov
inc
test
xlat
mov
mov
inc
nop
dec
hlt
cs
sub
shl
popa
fadd
addr16
cwde
cmp
popa
sbb
xchg
pushf
test
call
push
sbb
pop
fs
es
sbb
(bad)
xor
mov
imul
dec
ins
test
jmp
lock
jmp
jne
popa
mov
xchg
ins
push
loope
xchg
cmp
mov
xchg
rol
ins
jnp
stos
imul
loopne
push
add
sbb
and
xchg
les
fwait
jmp
push
fs
and
ja
sub
add
mov
cmp
dec
add
fcomp
cdq
cli
cmp
jl
inc
test
out
test
stos
jno
out
pop
(bad)
je
outs
xchg
pop
inc
sbb
mov
cmc
inc
sbb
mov
addr16
dec
and
into
in
loop
adc
ins
jle
jo
jb
test
sbb
jmp
or
and
sub
sub
imul
push
xchg
pop
sbb
sbb
push
(bad)
call
push
jp
jnp
push
jecxz
rcr
xchg
jo
jmp
jecxz
idiv
push
push
jmp
pop
mov
dec
push
adc
cld
daa
pop
push
inc
mov
dec
pop
jge
call
clc
loop
mov
sub
add
dec
adc
jmp
mov
mov
addr16
sar
adc
pop
push
push
lods
dec
in
div
xlat
or
ret
fwait
pop
test
pop
inc
sub
xchg
stos
(bad)
dec
dec
pushf
(bad)
pusha
retf
jg
daa
and
inc
fsub
pop
xor
dec
or
out
scas
lods
sbb
(bad)
pusha
shl
cs
inc
je
sbb
cmp
pop
cs
cmp
sub
push
pop
scas
pop
push
mov
test
sahf
fiadd
fistp
and
push
into
call
mov
xchg
dec
loopne
xchg
push
inc
loop
adc
dec
popa
jmp
add
int3
into
test
push
dec
mov
sbb
xchg
scas
mov
ds
(bad)
rcr
jb
shl
jp
cmp
sub
fldcw
xchg
jo
mov
cmp
adc
cmp
js
xchg
jo
xchg
repz
retf
popf
inc
jmp
xor
mov
test
lods
(bad)
popf
sbb
out
test
test
xor
jmp
jmp
sbb
mov
push
jg
push
sub
call
out
frstor
mov
add
ds
es
xchg
das
stos
xor
popa
jno
pop
inc
mov
in
add
inc
(bad)
and
pop
and
jl
xchg
enter
out
(bad)
mov
add
std
hlt
sbb
js
fcomi
push
cmps
dec
inc
cdq
xchg
mov
sbb
fimul
mov
out
aaa
sbb
out
push
enter
fisubr
inc
bound
mov
(bad)
pop
icebp
nop
cmp
and
adc
pop
jb
jmp
fs
jg
mov
mov
add
stos
mov
(bad)
stc
pop
out
inc
pop
shl
jecxz
mov
test
nop
jp
enter
shl
mov
pop
inc
in
mov
mov
mov
(bad)
push
add
xlat
int
inc
nop
sbb
dec
mov
xor
imul
retf
push
fwait
mov
cwde
ficomp
sub
xor
mov
xchg
add
outs
mov
pusha
lea
jns
shl
and
int
(bad)
push
push
jo
inc
retf
mov
or
add
call
mov
fwait
adc
stos
sti
pop
jg
xchg
push
(bad)
ja
xor
sub
dec
out
cmp
dec
mov
xor
nop
mov
enter
push
int
pop
rol
pop
add
or
mov
xlat
jle
sahf
or
xlat
dec
jae
movs
xchg
adc
in
cmps
sbb
cld
popa
rcl
and
(bad)
mov
push
xlat
in
pop
mov
xchg
call
call
retf
jne
cdq
xor
es
fdivp
pop
out
xor
dec
xchg
outs
dec
jne
jo
jae
sub
fmul
inc
jnp
jmp
sbb
pop
lods
or
pop
lods
fs
aad
pop
lahf
mov
lahf
cmc
xchg
push
mov
push
popa
call
cmc
stos
ins
(bad)
mov
div
fisub
stos
test
cmp
call
hlt
adc
lahf
gs
push
fld
mov
push
cmp
imul
xchg
mov
dec
stc
in
or
jnp
retf
add
push
sub
pop
inc
ret
mov
jo
aam
jne
pop
imul
aad
jmp
pop
sar
sbb
mov
mov
fistp
fistp
loop
mov
cld
retf
mov
mov
cmp
ret
push
fwait
inc
add
jp
fs
push
xchg
cld
sbb
mov
xchg
rcr
add
pop
jnp
cmp
adc
ja
test
mov
mov
sbb
jp
into
loopne
into
loopne
les
inc
mov
cli
ret
bnd
repnz
aam
ja
int
lods
cmp
inc
(bad)
stos
stos
test
pop
mov
mul
inc
imul
stos
xor
push
jmp
sbb
movs
jno
inc
sti
push
dec
xchg
mov
mov
leave
clc
js
loopne
adc
(bad)
adc
pop
add
jmp
ficom
mov
popa
(bad)
sbb
popa
jge
sub
xor
je
cwde
addr16
pushf
cmp
ret
adc
mul
rol
mov
out
adc
call
and
jl
addr16
mov
xchg
mov
(bad)
es
jmp
fsub
add
add
jns
xor
xor
ds
xchg
add
bound
jae
ret
ret
rcr
pop
shl
test
div
and
jmp
mov
in
dec
in
dec
add
popa
out
cmp
mov
push
outs
popf
cmp
je
mov
lock
jmp
test
dec
jg
and
pop
ss
sbb
inc
dec
mov
sbb
in
add
fcom
add
mov
js
mov
adc
xchg
push
sub
cmps
scas
and
mov
nop
sbb
cmp
retf
rol
dec
(bad)
ins
stos
das
and
aad
fadd
pop
sbb
dec
mov
jo
xor
lds
xlat
jo
jmp
or
add
sub
and
jb
sbb
sub
stos
mov
outs
retf
lock
loop
clc
dec
arpl
xor
mov
inc
mov
mov
push
call
outs
test
jne
lahf
mov
aas
xchg
(bad)
mov
retf
mov
ss
iret
into
pop
out
or
ins
lea
dec
cs
mov
rcr
out
leave
jnp
cli
push
push
bound
hlt
aaa
add
or
pop
fistp
jne
lods
and
cmps
fwait
or
and
fnsave
in
ins
pusha
(bad)
mov
ins
mov
mov
push
(bad)
mov
scas
mov
pop
push
mov
iret
xchg
in
xchg
push
out
not
aas
das
icebp
ror
and
cmp
or
movs
jb
outs
nop
mov
cmps
imul
add
mov
push
pusha
add
fild
mov
and
add
cmps
mov
(bad)
test
push
ror
cdq
push
inc
cwde
or
xchg
inc
and
in
mov
sahf
call
test
xlat
mov
cli
jl
xchg
test
pop
imul
add
jbe
cmp
push
pop
arpl
dec
sbb
mov
pop
mov
inc
add
aam
dec
inc
adc
xor
add
shl
push
js
jg
or
jmp
fstp
(bad)
jg
push
movs
dec
xchg
mov
call
loop
xor
jnp
cli
and
fldenv
mov
xchg
std
xchg
jmp
mov
push
or
xlat
in
push
sahf
push
sbb
pop
gs
push
sbb
mov
push
lahf
ret
arpl
sbb
sbb
pop
sbb
pop
mul
mov
inc
sahf
lods
popf
push
cmps
mov
lahf
aam
cmp
dec
test
in
sti
loopne
pop
repz
lea
test
push
mov
(bad)
ret
fsub
inc
popa
mov
int
cmp
fild
push
pop
mov
inc
je
and
retf
test
pusha
loope
add
cmp
add
add
nop
pop
retf
jno
pop
dec
mov
mov
push
popf
into
xchg
add
push
inc
jmp
jmp
pop
neg
xchg
ins
cld
xchg
je
lea
mov
pop
jno
(bad)
mul
out
lds
mov
jns
cmp
jl
inc
pop
sbb
add
inc
movs
cmp
jne
mov
lods
pop
sbb
or
cli
sbb
jg
add
dec
mov
push
mov
xor
in
xchg
mov
inc
pop
vpmacssww
loop
adc
shl
lods
loope
test
gs
mov
out
not
xchg
mov
adc
sbb
(bad)
and
or
inc
and
mov
retf
fild
shr
fwait
icebp
jnp
push
and
pop
sbb
cwde
daa
pushf
je
inc
xchg
sub
mov
and
pop
call
mov
cmp
mov
sub
inc
test
(bad)
and
(bad)
popa
shl
test
push
cmp
sub
push
call
mov
or
sbb
cmp
ss
add
mov
push
test
xchg
xchg
pop
sbb
mov
mov
add
push
lods
mov
jbe
xchg
test
xchg
leave
frstor
scas
cwde
sub
push
lds
pop
dec
(bad)
idiv
addr16
addr16
pop
fisubr
and
jno
popa
mov
stos
xor
(bad)
and
std
inc
or
outs
cmp
adc
gs
std
ds
dec
loopne
mov
mov
jge
xor
loop
mov
cmps
add
test
xchg
shl
stc
sub
mov
clc
call
ja
push
ficomp
cmp
inc
out
inc
sub
mov
push
pop
imul
repnz
(bad)
push
rcl
inc
aaa
push
jb
lods
sub
xor
sbb
sbb
cmp
xchg
mov
stc
std
mov
aad
inc
lods
outs
adc
adc
test
ror
test
shl
cwde
test
sbb
cmp
shl
scas
sub
cs
cmp
jmp
sbb
outs
fs
mov
xor
push
push
inc
ss
or
mov
mov
lods
inc
jbe
jnp
mov
add
cmp
out
add
add
jl
test
pop
mov
cwde
push
jo
ins
lods
xchg
add
cli
leave
mov
fdiv
xchg
mov
sbb
sbb
(bad)
int
les
or
adc
sti
sub
lods
dec
pop
int
sar
ds
dec
pop
fisttp
jae
adc
inc
sbb
pop
mov
in
adc
loop
pushf
icebp
bound
dec
sti
rcl
mov
mov
test
mov
les
mov
ja
lahf
mov
mov
jecxz
pop
in
fwait
outs
loope
leave
sub
dec
call
rcl
and
dec
mov
sbb
pop
adc
mov
leave
dec
sbb
gs
icebp
jnp
fisub
fs
aas
adc
add
pop
mov
push
push
fbld
mov
jl
lods
mov
push
sub
leave
cmps
add
inc
(bad)
sub
(bad)
(bad)
pop
test
stos
pop
xor
ror
scas
mov
mov
xchg
es
jmp
cmc
stc
dec
jns
fwait
xor
push
repz
dec
stc
(bad)
aam
(bad)
aas
inc
and
lods
push
pop
ins
movs
cs
imul
(bad)
cmp
push
fadd
push
xor
mov
pop
inc
cmp
test
test
movs
adc
in
push
fst
outs
fcom
xchg
sub
jecxz
push
jmp
call
scas
test
fdivp
test
pop
pop
cmc
mov
loope
repnz
cmc
fucomi
jns
inc
pop
jg
(bad)
movs
aaa
inc
lfs
fild
fwait
enter
js
or
loopne
imul
jecxz
mov
sahf
dec
sbb
or
daa
cmp
lods
shl
sbb
fisubr
retf
xchg
(bad)
popa
loope
test
mov
mov
in
fs
mov
jge
mov
jecxz
shr
push
repz
iret
push
or
stc
pop
push
sub
fmul
inc
jg
jbe
jae
stos
mov
xor
neg
cli
mov
xabort
sbb
adc
mov
scas
daa
lods
inc
push
fmul
xchg
dec
inc
mov
xor
call
dec
idiv
and
call
dec
out
mov
push
shl
xchg
xor
push
xchg
mov
add
test
or
int3
(bad)
jo
xchg
mov
sub
ss
rol
ds
push
dec
test
js
or
mov
imul
xor
or
cmp
dec
mov
inc
lods
rol
retf
(bad)
mov
cli
push
ret
inc
mov
mov
aaa
fstp
jmp
retf
sbb
and
hlt
mov
mov
xor
sub
retf
fstp
pop
inc
cmp
cmp
inc
movs
aaa
add
stos
mov
inc
into
fild
vmulpd
cmp
inc
sub
or
pop
imul
mov
sbb
test
push
ins
cmps
push
xchg
sti
jno
sar
sub
(bad)
test
imul
mov
test
popf
imul
push
repz
es
ds
pop
addr16
xchg
xor
or
mov
add
xlat
add
adc
inc
sub
or
dec
dec
mov
fs
cdq
loope
inc
xor
fwait
inc
retf
fistp
popf
je
test
pop
xchg
mov
lds
scas
jae
jge
xor
xchg
mov
mov
loop
inc
nop
fisttp
fstp
pop
or
fcomp
jg
inc
add
jnp
sbb
push
pushf
push
and
ror
dec
and
sahf
(bad)
sbb
push
xor
pop
or
add
cs
sbb
cmps
jl
mov
pop
mov
cmp
xchg
xor
sar
dec
gs
ror
fcomp
addr16
add
out
mov
fcomp
xchg
and
scas
sti
pop
push
cdq
fidiv
sub
movhps
mov
scas
fs
sbb
push
test
inc
pusha
test
dec
nop
xchg
inc
leave
(bad)
fidiv
push
data16
icebp
pop
xchg
sub
jnp
test
aad
inc
mov
adc
dec
and
cli
mov
xchg
fsubr
adc
popa
test
frstor
loopne
std
stos
inc
adc
hlt
ja
cwde
test
outs
lahf
fimul
xchg
enter
lea
sbb
std
neg
je
xor
aaa
pop
pop
cmps
dec
pop
jns
call
(bad)
enter
jl
dec
cmp
cmp
outs
ds
aas
mov
mov
inc
repz
mov
sbb
jg
shl
clc
dec
jge
(bad)
jg
(bad)
fisttp
fild
xor
imul
test
mov
fucom
mov
mov
outs
in
not
or
pusha
sar
jnp
dec
mov
dec
data16
lods
call
fmul
arpl
loopne
or
or
ret
stos
dec
jle
aad
add
in
mov
jp
pop
inc
es
jl
cdq
loopne
cmps
sar
(bad)
adc
jg
stc
mov
arpl
mov
cmp
mov
dec
or
ds
jne
pop
mov
cmp
sub
jl
int
outs
pop
daa
fcomp
push
jl
mov
popa
ins
xchg
xchg
pop
pop
xchg
mov
cmp
lock
in
inc
jae
jnp
mov
test
bound
out
clc
hlt
sub
imul
inc
ja
test
popa
and
in
jmp
arpl
push
pop
retf
xor
cmp
icebp
repz
cmp
push
pusha
test
inc
and
mov
enter
out
push
out
and
cmp
xor
push
xor
jmp
fld
xchg
xor
ror
in
test
inc
jns
scas
outs
rol
rcr
retf
mov
xchg
and
imul
mov
inc
lods
stos
mov
mov
aad
js
popf
dec
jecxz
sar
pop
push
int
int3
je
sub
jle
mov
imul
cmps
cwde
mov
or
fcomp
jmp
xor
push
or
sub
js
movs
pop
pop
(bad)
or
mov
in
xchg
push
mov
jns
jnp
pop
cmps
pop
rol
pop
in
jecxz
vorps
fist
mov
scas
xor
gs
lock
mov
(bad)
aaa
daa
cs
(bad)
sub
cmp
inc
test
push
sbb
lds
sbb
shr
mov
pop
(bad)
pop
sub
js
and
mov
sar
in
xchg
test
or
scas
in
test
add
inc
push
and
jp
cld
mov
mov
repz
jb
je
cmps
cdq
repnz
sbb
mov
cmc
fild
out
mov
push
and
stc
sub
cmp
ins
sbb
imul
push
mov
call
sbb
or
add
add
push
mov
push
scas
lods
cmps
xor
dec
std
scas
call
aam
inc
and
inc
cmc
mov
dec
lahf
in
outs
jmp
in
and
pop
stos
loope
clc
das
cmp
pushf
mov
cmp
lock
sar
mov
das
inc
ss
repz
sub
cmp
mov
test
xchg
and
retf
sub
out
sbb
sub
cmp
add
ins
fisttp
lods
xor
call
int
mov
cmc
dec
pop
pop
mov
inc
adc
push
sub
aad
sub
mov
fsub
xchg
mov
ret
scas
mov
cmp
mov
xor
cmp
stc
int
in
push
and
cmp
cli
inc
and
stos
ror
adc
lods
pop
jecxz
sub
(bad)
or
cmp
dec
movs
jl
lahf
pop
add
push
gs
aam
inc
mov
popa
ins
movs
das
not
test
sub
fcomip
das
in
arpl
imul
loop
xchg
retf
(bad)
dec
arpl
in
xor
or
(bad)
frstor
sub
ins
inc
dec
mov
xchg
pop
(bad)
ficomp
xchg
mov
pop
cmp
sub
lods
sub
scas
ins
pop
lahf
or
popf
mov
(bad)
mov
mul
ds
cs
xlat
cwde
ja
mov
adc
rol
stos
mov
inc
movs
inc
pop
call
(bad)
xchg
enter
(bad)
mov
sub
leave
xchg
stc
jg
cmp
sbb
push
mov
rol
jmp
push
aas
in
xor
or
adc
inc
mov
ins
call
pop
ins
jmp
rol
pop
lods
sub
mov
cmps
inc
in
cmps
jae
shr
xchg
add
pusha
and
aam
loope
pop
dec
scas
xchg
jo
dec
fsub
sbb
push
pusha
cmp
sbb
pusha
and
or
sti
clc
cs
cmp
and
push
int
je
jne
mov
pop
out
lods
mov
sti
cli
xchg
add
push
fsubr
popf
mov
dec
xchg
loop
ins
retf
push
clc
(bad)
pop
lea
or
in
cmp
scas
jecxz
addr16
mov
hlt
push
cmc
pop
and
and
pusha
push
daa
pop
je
jae
inc
mov
xchg
mov
inc
mul
lock
cmp
xor
push
adc
cmp
imul
scas
lods
cmp
or
(bad)
sti
and
out
inc
in
jo
movs
jne
and
push
shl
scas
and
mov
ja
xchg
popf
ss
mov
scas
jmp
mov
sbb
sub
rol
fs
and
sub
cmc
mov
mov
mov
(bad)
ins
adc
cmc
adc
sbb
mov
mov
sar
lahf
jae
mov
add
xchg
cdq
idiv
aad
jae
mov
xor
scas
mov
dec
xlat
hlt
mov
out
mov
mov
es
pop
push
mov
mov
(bad)
mov
dec
mov
dec
nop
cs
sbb
and
sar
pop
data16
and
lods
shl
in
push
mov
and
pop
or
xchg
push
mov
scas
pop
inc
into
pop
pop
cwde
xchg
lahf
cmp
add
les
out
bound
js
mov
xchg
ret
sahf
inc
daa
enter
call
(bad)
sbb
mov
shl
fcmovb
pop
outs
mov
dec
mov
adc
xchg
sar
inc
call
jp
test
push
jmp
dec
std
in
sub
inc
mov
sub
pop
dec
pushf
jge
mov
add
add
cmps
test
sti
inc
pop
pusha
fist
lds
call
xchg
xchg
hlt
mov
enter
fdivp
cmp
cdq
test
cmp
xor
xor
xor
add
pusha
popf
and
jns
push
inc
stos
stos
nop
sahf
dec
pop
clc
imul
inc
adc
push
sub
sbb
test
inc
jb
or
aas
inc
stos
cwde
xchg
adc
pop
jp
repnz
adc
jg
inc
mov
xor
test
in
cmps
mov
(bad)
(bad)
mov
(bad)
cwde
test
fsubr
icebp
call
pop
rol
shl
push
adc
data16
gs
ja
cmps
int
push
or
dec
fdiv
cmp
push
jne
pushfw
pop
leave
adc
imul
pop
push
into
or
mov
bound
xor
mov
xor
je
scas
dec
call
stos
popa
ret
mov
test
clc
cdq
shr
arpl
mov
add
(bad)
xor
pop
sbb
aaa
add
cmc
clc
and
inc
xchg
dec
and
fldcw
arpl
mov
inc
xor
xor
sub
pop
fwait
sub
pop
jne
adc
sar
inc
mov
dec
int3
call
jnp
je
jge
jnp
scas
call
outs
(bad)
xchg
ja
fcmovb
popf
or
out
sub
lahf
xchg
int3
fisttp
(bad)
mov
dec
add
xlat
pop
or
inc
fstp
cmp
out
mov
push
(bad)
jge
push
sbb
xor
and
or
add
mov
lahf
aas
push
cmp
mov
and
jmp
js
push
test
pop
int
inc
push
jmp
gs
xchg
pop
inc
mov
(bad)
jecxz
out
icebp
inc
jne
mov
cmp
sub
icebp
test
jmp
or
mov
pusha
dec
mov
mov
scas
adc
loop
xchg
in
add
adc
xor
mov
jnp
mov
inc
repz
inc
div
xchg
scas
icebp
add
mov
inc
cmp
dec
xlat
jecxz
dec
test
xor
cli
or
xchg
adc
fst
mov
pop
ret
dec
fnsave
sub
hlt
jmp
jb
outs
fist
sbb
imul
mov
in
cmp
ret
bound
pop
(bad)
and
jnp
pop
scas
pop
mov
sti
jg
mov
jne
mov
add
dec
jmp
int
fild
movs
ins
lock
mov
sub
(bad)
lahf
sub
xchg
jmp
lahf
pushf
mov
pop
lock
xchg
dec
xlat
cmp
es
into
lods
sub
pop
push
cmp
movs
xor
mov
jns
popf
stos
test
pop
fisub
loope
mov
ss
ja
adc
jmp
shr
add
or
cmps
and
xchg
stc
fidivr
loopne
jae
test
jns
rcr
adc
stos
xchg
jbe
inc
call
(bad)
push
jb
test
outs
inc
mov
adc
je
es
inc
les
imul
push
pushf
dec
xor
popf
cs
mov
mov
pop
ins
popa
adc
pop
gs
add
inc
push
test
mov
push
mov
das
outs
call
cmc
pop
inc
pop
mov
outs
out
sti
jg
test
les
in
(bad)
call
mov
adc
ret
test
mov
cmp
or
cmc
mov
in
pop
and
test
pop
jnp
inc
add
mov
int
sbb
push
loope
sbb
pop
(bad)
add
sub
cdq
das
scas
and
jg
cwde
pop
adc
dec
dec
xchg
xchg
test
cmp
into
out
and
outs
lds
std
xchg
mov
mov
arpl
dec
lods
in
sbb
cmps
icebp
sbb
scas
aad
inc
mov
shl
ds
lock
int3
pop
imul
sbb
jno
push
and
mov
scas
jnp
fldcw
mov
push
xor
cmp
scas
sub
sub
dec
inc
ror
stos
push
addr16
nop
lods
cmp
daa
outs
fxch
mov
mov
jg
add
xor
lahf
and
dec
xchg
mov
mov
repnz
test
add
(bad)
cmps
sar
bound
or
and
fmul
dec
xor
jne
cmp
mov
retf
push
leave
ja
into
and
imul
pop
add
sbb
xor
popf
pop
mov
dec
lods
dec
sbb
mov
and
cmps
aas
adc
out
pop
outs
mov
imul
lods
pop
rcr
mov
jl
lea
les
mov
sub
dec
imul
pop
das
not
fld
sbb
addr16
xor
mov
nop
mov
in
idiv
mov
aas
fidivr
jbe
push
pop
mov
fidiv
pop
add
xlat
mov
jmp
jmp
(bad)
stos
out
mov
pop
(bad)
lock
lahf
scas
xor
fidiv
repz
lock
cmps
or
mov
dec
mov
inc
inc
dec
mov
or
sbb
push
add
xor
xchg
inc
mov
mov
dec
xchg
dec
add
xchg
fwait
and
or
ret
repz
in
push
and
jno
repz
dec
(bad)
mov
mov
xlat
jns
loope
clc
sbb
xchg
or
shl
es
test
cmp
jo
add
cmp
push
dec
jmp
xchg
or
iret
arpl
pop
bound
mov
popa
mov
mov
jns
xchg
and
xchg
cmps
aaa
pop
add
fnop
xchg
inc
sar
xchg
gs
ds
out
call
stos
mov
cmps
call
xchg
lea
jecxz
pop
push
fwait
lods
cmp
xor
sub
fcmovbe
fmul
or
adc
mov
or
add
stos
rol
add
dec
xor
adc
int
pop
nop
jg
test
test
sti
mov
rcr
and
jg
sar
push
shl
mov
in
test
pushf
hlt
inc
scas
jbe
sahf
ret
xchg
cs
mov
(bad)
fmul
aas
outs
lea
or
adc
cld
sti
inc
xchg
push
push
arpl
ins
add
cmp
into
fidivr
mov
pop
cmp
add
stos
inc
cwde
push
in
dec
push
or
dec
bound
adc
retf
mov
jg
pop
add
popf
mov
in
xchg
fwait
push
xor
les
test
popa
pusha
mov
repnz
(bad)
pop
sbb
aad
and
cmc
repnz
xchg
and
inc
stos
outs
bound
dec
and
test
xchg
xor
push
std
cld
jns
shr
bound
ret
push
push
push
mov
mov
cmp
cwde
adc
xor
aad
aad
inc
jg
dec
jmp
hlt
dec
mov
stos
pop
rcl
mov
std
xchg
retf
sub
xchg
cwde
fmul
xor
sbb
mov
call
cmp
push
jns
fwait
pop
sub
mov
lods
dec
lahf
frstor
fnstsw
popa
xor
push
or
push
mov
call
sbb
sub
xor
cwde
out
out
mov
dec
addr16
jp
shl
xchg
mov
pusha
rcr
cmps
or
mov
push
mov
jmp
imul
sbb
fidiv
lea
xor
fcomp
lods
push
int
push
add
outs
inc
inc
or
cmp
call
jnp
or
xor
inc
rol
inc
mov
push
mov
lods
cmp
pop
jmp
dec
test
jmp
mov
rcl
and
(bad)
mov
cwde
rol
dec
xchg
sbb
and
mov
fdivr
mov
adc
lds
arpl
mov
xor
jnp
mov
clc
inc
rcl
(bad)
gs
addr16
or
imul
or
xor
inc
inc
fstp
scas
or
mov
push
push
(bad)
call
mov
pusha
fs
dec
xchg
out
xchg
push
fnstsw
pushf
cs
popf
pop
adc
mov
stos
sar
imul
inc
call
adc
cs
es
push
adc
dec
xchg
lods
push
retf
xchg
inc
adc
add
(bad)
pop
or
and
mov
outs
(bad)
aam
inc
mov
push
ja
jae
ret
std
ins
jecxz
xchg
dec
rcl
std
jo
outs
(bad)
mov
push
add
(bad)
jmp
and
mov
imul
xor
rcl
imul
adc
and
jns
setb
cld
push
fmul
sub
mov
js
fnstcw
sbb
push
mov
enter
push
sbb
xchg
add
cdq
push
nop
out
pop
sti
popa
push
push
sbb
and
(bad)
xchg
jno
mov
lea
out
pop
call
add
shl
ret
dec
stos
ret
ins
hlt
jnp
cmp
fucomip
ret
push
dec
ds
push
add
popf
(bad)
(bad)
xchg
or
jbe
retf
add
sub
dec
push
addr16
add
sbb
inc
aaa
cmps
push
add
stos
lahf
or
sub
xchg
out
cmps
inc
rol
loope
js
(bad)
pop
retf
dec
mov
jmp
add
mov
xchg
cwde
(bad)
add
push
push
adc
cmc
cmp
xchg
cmp
pop
rcr
add
jmp
xor
popa
not
push
mov
aaa
iret
inc
sar
cwde
cld
push
imul
inc
sub
sub
scas
push
sub
stos
bound
xor
enter
int
loope
sbb
movs
jb
xchg
dec
popf
in
sbb
pop
add
jmp
in
mov
dec
push
mov
rol
mov
icebp
ins
addr16
and
nop
test
push
fild
inc
sbb
shr
ins
pop
or
mov
rcl
in
ds
pop
push
sbb
pop
and
data16
ins
sbb
(bad)
cmps
xor
sar
sbb
fist
inc
pop
push
rcl
mov
jle
loopne
push
mov
(bad)
sub
fisubr
cmps
movs
mov
das
out
ror
jo
dec
fmul
sbb
pop
add
pusha
dec
mov
mov
clc
arpl
fiadd
pop
xor
push
aas
loop
xchg
adc
push
xor
xor
adc
mov
popf
das
(bad)
cmp
mov
mov
inc
pavgw
repnz
jp
jns
push
sbb
lock
lock
jg
fistp
push
jns
cmps
mov
(bad)
bnd
leave
outs
inc
jle
les
push
push
cmp
mov
sub
adc
ds
imul
jl
jmp
add
js
and
push
out
ja
mov
mov
rcr
test
mov
jg
popf
mov
adc
les
mov
dec
xchg
dec
(bad)
cmp
pop
sahf
xor
jns
fldcw
je
xor
inc
icebp
mov
int
(bad)
into
add
add
aas
add
or
sub
pop
fisub
xchg
push
mov
or
(bad)
mov
xchg
pop
cmps
dec
clc
cdq
cli
fs
iret
loope
in
ja
mov
jmp
ret
push
cwde
inc
inc
out
mov
ds
xchg
mov
ins
clc
push
hlt
cmc
jmp
sub
popa
sti
jb
dec
mov
push
scas
push
std
clc
jle
fld
pop
and
pop
gs
add
mov
xor
dec
add
mov
sbb
js
repz
add
frstor
dec
push
inc
mov
aas
sahf
sar
inc
repnz
scas
adc
jge
call
pop
mov
call
addr16
xchg
lods
imul
push
xlat
out
in
je
inc
popa
sbb
mov
arpl
enter
lock
vmovss
inc
push
inc
pop
lds
or
imul
je
imul
sub
xchg
lods
xor
and
aam
inc
test
jbe
mov
pop
mov
xchg
inc
jmp
or
stos
dec
movs
inc
jg
mov
fldcw
stos
xchg
ins
jmp
cmp
jmp
push
cmps
xor
outs
cdq
js
inc
mov
mov
jp
retf
fbld
pop
add
add
push
and
popf
pop
retf
adc
jo
sar
inc
mov
xor
retf
mov
or
dec
dec
cmps
dec
popf
mov
mov
shl
jo
jp
mov
pop
sbb
fadd
dec
mov
pop
jmp
xlat
sbb
leave
xchg
repz
bound
jo
xor
pop
in
or
mov
xor
add
dec
mov
pop
fs
add
jns
test
add
pop
inc
daa
inc
(bad)
mov
shl
pop
cmp
mov
xchg
xchg
lds
xchg
movs
mov
xor
js
jecxz
bound
adc
test
jl
push
push
push
inc
mov
outs
pop
dec
lea
repnz
jmp
pop
or
push
push
ds
xor
jnp
mov
push
mov
adc
lods
mov
mov
pop
ret
inc
sub
sti
inc
jecxz
test
nop
mov
dec
out
clc
xchg
adc
jecxz
fsub
lods
mov
mov
test
pop
scas
or
dec
aam
mov
and
or
scas
cmp
mov
jle
fsub
repnz
sbb
fs
sbb
and
mov
add
adc
in
mov
in
mov
mov
jg
inc
jns
adc
mov
pop
aad
push
cmp
ret
xchg
dec
mov
fwait
dec
inc
cwde
mov
jmp
fadd
sub
repz
sbb
mov
inc
and
retf
lods
lea
pop
int
rcl
cmp
and
pushf
and
cwde
pop
sub
mov
call
fnstenv
pop
inc
and
arpl
xchg
rol
imul
movs
mov
pop
scas
mov
push
push
lods
movs
mov
movs
lods
aam
js
fild
jl
push
sbb
cmc
test
pusha
and
fadd
bound
cwde
mov
dec
out
cmp
inc
sti
sbb
pop
jo
scas
pop
sub
outs
add
sbb
sar
add
rcr
jg
arpl
push
(bad)
(bad)
cli
jg
shl
cmp
(bad)
movs
sub
push
xchg
sbb
push
mov
shl
mov
mov
pop
sar
add
nop
aam
es
pop
aas
xor
xor
mov
enter
out
add
iret
push
dec
jae
ret
add
pusha
jno
lods
xor
push
in
push
mov
jne
stos
mov
inc
sub
int3
lock
ins
daa
lods
das
sti
mov
bound
call
cli
inc
hlt
cmps
xchg
iret
or
dec
inc
lods
xchg
test
test
mov
fidivr
cmp
cld
dec
push
sub
or
std
ins
add
fwait
xchg
xchg
mov
cwde
fidivr
xchg
repz
jno
sbb
add
jb
push
mov
and
xor
dec
outs
repz
outs
adc
mov
xchg
dec
cmps
sub
test
in
(bad)
xchg
inc
aaa
xchg
loopne
or
push
test
push
xchg
mov
pop
and
or
fwait
inc
call
enter
sbb
outs
sub
mov
or
in
jle
fidivr
push
pop
pop
and
add
add
push
or
and
bound
push
adc
stc
or
sub
in
loop
xchg
std
inc
leave
pop
pop
push
shr
stc
jb
in
mov
xchg
cmps
push
push
sar
icebp
sub
addr16
retf
jp
loope
movs
adc
fist
mov
xor
dec
cmc
lock
inc
pop
xor
pop
movs
xor
mov
out
js
lea
jns
ficomp
mov
push
dec
(bad)
mov
pop
xchg
mov
push
sub
gs
xchg
aas
mov
add
push
fwait
out
cwde
push
shl
mov
rcr
hlt
mov
in
lods
aas
push
sbb
pop
lahf
fwait
pop
in
ror
add
cmp
dec
fcom
fs
ins
or
les
jle
xlat
js
dec
outs
pop
ss
pop
mov
mov
scas
js
shl
ja
retf
pop
push
ins
xlat
stos
mov
(bad)
fcomp
daa
call
xlat
mov
cs
sub
sbb
mov
addr16
xchg
sbb
mov
hlt
int3
aam
dec
pushf
mov
(bad)
xor
int3
icebp
imul
popa
sub
cmp
popa
xchg
dec
xor
into
push
or
pop
dec
das
test
pop
arpl
std
cmp
pop
imul
add
fmul
add
fwait
test
hlt
in
pop
mov
(bad)
fstp
jle
ja
adc
cwde
cld
mov
test
and
cli
mov
mov
jl
in
test
outs
cmp
(bad)
stos
retf
xchg
popf
mov
repz
fcmovu
clc
inc
fbld
xor
pop
lea
fwait
mov
pushf
sbb
jmp
xchg
pop
dec
jno
loope
ja
jno
in
or
add
dec
aas
xchg
adc
mov
pop
fcmovnb
popf
add
pop
arpl
pop
out
loop
out
mov
sbb
clc
lea
xchg
inc
lods
xor
lahf
test
lock
retf
mov
in
dec
or
cmp
xchg
gs
lahf
push
inc
add
(bad)
inc
rcr
cmp
adc
xor
outs
adc
pusha
mov
add
aad
and
dec
pop
test
dec
jecxz
out
out
fs
push
mov
dec
stos
pop
jns
mov
jl
lock
imul
fmul
mov
or
repnz
add
ins
lods
sbb
jno
push
int
push
or
xchg
aam
ins
js
mov
fs
and
xor
jb
dec
pusha
mov
jae
xchg
xor
sub
lods
xchg
dec
mov
inc
retf
sub
mul
cmps
dec
rcl
repz
rol
xchg
mov
sbb
xchg
add
cld
clc
jmp
inc
arpl
jmp
add
(bad)
cmc
shl
imul
test
push
add
xchg
sbb
dec
iret
sub
push
sub
adc
push
(bad)
fwait
mov
xor
xor
out
sti
and
repnz
xchg
ins
mov
ins
xchg
cmps
jl
cwde
push
or
aad
jo
inc
mov
fsubrp
or
jl
xchg
mov
arpl
jmp
mov
mul
mov
int3
push
xor
pop
in
je
bound
jno
dec
lea
aad
rcl
and
sbb
sbb
icebp
sub
mov
dec
stos
xchg
(bad)
imul
(bad)
xchg
inc
jl
test
loop
jmp
sahf
inc
es
mov
inc
mov
retf
and
test
sub
mov
fdiv
add
cmp
jb
jnp
mov
out
pop
leave
stc
pop
mov
push
adc
mov
add
fs
cmp
mov
das
jle
std
mov
(bad)
pop
jp
nop
jb
lds
push
mov
(bad)
aaa
xchg
sbb
mov
mov
add
addr16
lahf
inc
sar
daa
pop
dec
icebp
fbld
sub
xchg
inc
mov
sub
stos
cmp
sbb
inc
retf
sub
jb
lea
bound
bound
push
pop
idiv
adc
push
push
test
lock
loope
(bad)
xchg
push
and
mov
repnz
xchg
out
popf
inc
fs
xchg
popa
cmp
ficom
mov
gs
dec
aad
add
cld
jmp
outs
mov
pop
outs
mov
pushf
nop
mov
pop
hlt
js
mov
or
out
imul
cmp
gs
nop
xor
and
and
xor
pop
jge
mov
(bad)
lds
repnz
pop
in
mov
sub
fidiv
mov
int3
push
xchg
lods
mov
jecxz
call
test
cmc
cmp
and
or
cmp
inc
aaa
push
mov
test
loopne
sbb
sub
cmp
cmp
mov
bound
sub
loope
mov
fidivr
dec
cmps
das
(bad)
lods
les
shr
push
xlat
fdiv
lods
popf
int
sbb
scas
test
add
fimul
jae
pop
pop
or
(bad)
fistp
inc
dec
jnp
mov
jbe
mov
test
jbe
cld
sub
(bad)
push
das
inc
sub
nop
sbb
or
or
mov
add
jecxz
(bad)
fsub
pop
add
mov
jns
mov
lock
ins
(bad)
pop
test
mov
mov
mov
sbb
sbb
icebp
cld
int3
inc
stc
push
or
or
lea
mov
cmc
gs
loope
ret
ins
add
loopne
push
bound
pop
popf
or
fwait
pop
push
stos
add
stos
pushf
arpl
cmp
ficomp
pop
pop
pop
mov
dec
mov
xchg
adc
test
sub
fs
scas
les
sbb
sub
call
cs
leave
inc
rcl
cs
(bad)
cmp
jbe
fs
xchg
add
lea
xchg
sti
pop
push
pusha
and
and
mov
push
push
cdq
push
pop
aad
pop
scas
mov
cli
out
mov
fidivr
jl
pop
fadd
mov
icebp
cld
or
in
repz
jnp
xchg
cwde
mov
xchg
test
lahf
ja
jnp
dec
cmp
aam
(bad)
push
cdq
inc
add
test
push
and
icebp
mov
test
ret
xchg
shr
and
adc
add
push
test
dec
jnp
inc
inc
(bad)
das
add
or
cmc
xchg
cwde
loopne
mov
push
jo
dec
aad
loope
mov
sahf
push
pop
xlat
cli
xchg
cmp
not
je
xchg
scas
js
ffreep
cmps
lods
in
jg
ret
imul
jmp
push
dec
mov
clc
inc
jmp
inc
aas
inc
scas
or
sub
stos
or
shl
or
pop
les
sbb
mov
mov
js
movs
test
cmp
inc
jmp
mov
retf
sbb
lods
test
push
and
std
mov
mov
repz
lea
aaa
rol
ffreep
arpl
xchg
gs
js
sub
(bad)
add
mov
pop
fs
xor
scas
cmp
imul
sub
inc
clc
es
test
in
ins
jnp
adc
in
cdq
xor
pop
dec
pushf
lods
in
cmp
fbld
pop
mov
pop
mov
mov
ret
xor
fmul
mov
pusha
pop
mov
cli
ret
xchg
jmp
jns
fwait
xchg
push
xchg
dec
std
sub
or
out
int
sar
adc
pop
clc
jb
pop
cmps
xchg
inc
cli
rol
test
mov
xor
push
lea
pop
ins
ret
mov
repz
pop
pop
push
cmp
lea
and
jge
fadd
pop
sahf
enter
loopne
pop
jmp
mov
psrad
mov
mov
clc
pop
inc
pushf
fwait
ins
in
push
cmps
sub
rol
add
cmp
push
outs
das
stos
dec
push
pop
mov
or
pop
(bad)
fwait
int
ins
inc
int
ins
push
shl
jbe
mov
dec
mov
loope
sbb
iret
mov
inc
cwde
loopne
aad
sbb
outs
xchg
mov
push
leave
ficom
xchg
fstp
loope
stos
ss
rol
aad
push
ja
cmps
dec
out
push
push
or
fdiv
inc
pop
imul
cmp
popf
xchg
fcmovnu
jno
xchg
add
sub
pop
adc
inc
(bad)
movs
idiv
inc
sbb
lock
clc
jle
pop
test
loopne
jmp
test
jns
aad
mov
xchg
fs
xchg
shr
cdq
pop
ins
cwde
mov
push
and
div
retf
push
mov
push
and
lock
dec
ficomp
pop
and
xor
or
mov
fucomip
cs
pop
sbb
pop
fidivr
gs
push
adc
retf
pop
dec
mov
or
sub
fld
xchg
and
push
mov
xchg
dec
nop
add
in
mov
call
fiadd
pop
pushf
cwde
lock
rcl
mov
push
int
jmp
pop
sub
push
bound
mov
fs
xchg
inc
push
dec
mov
enter
addr16
sbb
sbb
ins
push
fwait
outs
push
mov
jno
mov
clc
retf
stos
hlt
inc
cld
add
mov
push
mov
loope
add
ror
xchg
call
movs
mov
sbb
cli
or
mov
idiv
add
retf
cmp
pop
sub
aaa
dec
jge
cmp
or
or
in
add
fisub
jno
idiv
jae
and
cmp
add
gs
xchg
xchg
xchg
mov
stos
xchg
xor
jo
inc
xchg
fwait
push
into
mov
scas
sub
pop
call
lea
mov
lock
fnstcw
test
push
lea
jmp
and
icebp
call
pop
sub
movq
xchg
dec
and
(bad)
sahf
mov
les
jno
and
sbb
xor
ins
adc
outs
lods
xchg
clc
sub
fldcw
mov
sub
jp
mov
mov
shl
lahf
adc
mov
or
mov
adc
aad
jmp
lods
dec
nop
repnz
imul
ret
popa
fcomp
data16
mov
ja
dec
jmp
addr16
cld
adc
aaa
mov
pop
mov
mov
dec
pop
mov
stos
xor
pop
dec
out
out
add
push
sub
sti
push
cwde
cld
mov
xor
cmps
lock
lds
cmps
xchg
cmc
sbb
inc
jae
test
cld
(bad)
mov
cmp
out
movs
dec
shr
dec
push
sub
cli
stc
jae
xor
jns
push
inc
cdq
jnp
jp
test
inc
pushf
and
add
push
add
es
stc
pushw
call
mov
sub
pop
(bad)
in
xchg
jmp
(bad)
fs
inc
xchg
push
rol
jmp
push
int
cld
aaa
test
mov
addr16
mov
fcomip
scas
rol
inc
sbb
out
cs
and
and
pushf
push
pop
test
sbb
stos
mov
lock
call
imul
add
sbb
or
imul
ds
mov
adc
bound
ret
jg
inc
mov
fcomp
ins
fwait
retf
out
addr16
(bad)
mov
stos
test
or
popf
stos
xor
iret
aad
push
push
fidiv
or
(bad)
clc
std
dec
out
cmp
or
cmp
cmp
mov
int
es
aad
call
jns
jg
fdivr
pusha
jge
pushf
pop
test
xlat
push
aam
jo
mov
call
mov
jg
xchg
loop
test
mul
dec
xlat
lahf
pop
sub
xlat
pop
lods
mov
pop
add
les
mul
mov
sub
xor
pop
cmc
mov
jge
push
push
jbe
mov
pop
pop
push
dec
or
jnp
fbstp
test
outs
push
sbb
aas
or
lods
or
sahf
or
xchg
xchg
scas
push
cmp
jp
repz
add
(bad)
pop
mov
ins
xchg
jge
add
stos
shl
or
movs
stos
aaa
jmp
cdq
jns
mov
mul
xchg
cmc
xchg
fidivr
sahf
fst
std
adc
push
(bad)
retf
popf
aaa
jge
jae
push
and
mov
iret
jp
std
push
cmps
mov
pop
pop
ds
or
je
and
pushaw
rcr
mov
cmps
outs
inc
adc
aad
cmp
outs
popa
jg
jno
(bad)
in
mov
inc
xor
jle
test
ret
ja
jmp
(bad)
movs
loope
cmp
lods
mov
pop
pop
adc
enter
or
add
cmp
push
mov
les
call
inc
add
jmp
cmp
stos
or
xchg
dec
push
popf
mov
loopne
mov
xchg
jg
jae
mov
loop
lock
rol
popf
or
mov
mov
xchg
bound
dec
xchg
fcom
rol
mov
and
sub
sub
mov
sbb
pop
out
cmp
cmp
add
add
adc
or
xlat
pop
jge
mov
and
dec
jmp
(bad)
pop
push
mov
popf
jmp
cmps
jmp
jne
fwait
imul
in
test
fucomi
add
inc
inc
xchg
mov
ret
aam
inc
mov
sub
push
push
inc
inc
jmp
cmp
add
sub
or
mov
shr
and
sbb
pusha
call
adc
jb
sub
inc
pop
pop
fld
out
xchg
xchg
pop
sbb
mov
dec
xchg
lock
popf
mov
push
xchg
stc
sbb
jp
lods
sbb
test
jle
sahf
or
mov
and
jl
mov
push
lock
dec
inc
sbb
jmp
pop
jle
fdivr
or
xchg
mov
sti
(bad)
cmp
cmp
adc
xchg
and
jno
pop
jnp
jb
xchg
sbb
adc
daa
pop
sahf
jmp
pop
inc
inc
test
jecxz
fld
leave
mov
add
ficom
mov
jbe
mov
retf
dec
mov
mov
pop
sub
retf
out
arpl
mov
pop
sub
jmp
inc
fcmovnu
add
idiv
addr16
sub
sbb
xchg
scas
bound
push
popa
ret
cmp
outs
daa
xchg
mov
fwait
jbe
jmp
cmc
push
repnz
jecxz
sahf
pop
adc
and
mov
cmps
or
pop
leave
mov
les
inc
pop
inc
fisubr
and
mov
std
jp
cmc
bswap
clc
pop
inc
inc
xor
sub
sahf
add
add
push
push
fcom
sbb
cmp
das
and
dec
retf
cmc
jecxz
xchg
and
add
mov
mov
in
out
sbb
shl
test
out
dec
fst
mov
in
loope
ffreep
arpl
jbe
dec
in
and
xchg
(bad)
ror
push
imul
outs
or
mov
cmp
push
loop
or
fadd
inc
mov
pop
jecxz
mov
jmp
push
test
add
cld
imul
outs
(bad)
repnz
ret
jle
jns
dec
xlat
pushf
fdivr
stos
mov
sub
aad
sub
dec
mov
test
sub
dec
add
cs
(bad)
scas
rol
sub
push
cmps
aaa
push
adc
(bad)
repz
adc
jnp
cmp
call
lods
ss
stos
pop
sahf
bnd
retf
addr16
push
cmp
das
pop
scas
or
and
mov
push
lods
sar
in
std
mov
(bad)
popa
pop
jb
outs
shl
out
loope
pop
sub
movs
mov
movs
test
pop
in
add
shl
cmp
imul
or
jmp
pushaw
dec
mov
jno
pop
xchg
movs
nop
test
sub
pop
sti
into
aas
call
xor
nop
pop
xchg
jae
push
mov
inc
mov
or
lds
push
icebp
adc
pop
sub
xlat
and
mov
std
add
push
lea
pop
mov
(bad)
mov
movs
sub
jne
adc
or
div
add
inc
mov
cdq
lahf
mov
fwait
(bad)
and
fsub
aaa
mov
into
jnp
mov
push
mov
cwde
or
push
jno
stos
cmps
xor
enter
jae
shr
clc
call
pushf
xchg
jns
lock
add
pop
test
mov
mov
xor
(bad)
jmp
pop
es
rcl
inc
push
pop
jg
push
sbb
inc
pop
or
sub
inc
rcl
push
lahf
int3
push
pop
pop
pop
jmp
pop
mov
mov
scas
or
xchg
add
sbb
jmp
cmp
dec
cmps
pop
fcmovb
mov
mov
push
in
cwde
push
repz
jo
jnp
mov
js
mov
cmc
mov
jmp
adc
and
and
sbb
sub
stc
inc
or
mov
out
loop
cwde
retf
popa
push
add
call
pop
out
sbb
aas
repnz
inc
mov
ins
out
xchg
movs
imul
ds
xchg
adc
hlt
pop
aam
inc
jl
jo
mov
inc
xchg
test
in
ficom
stc
fdiv
xchg
sbb
xchg
popf
aad
shl
push
cmp
lock
sub
add
dec
call
pop
pushf
les
push
int3
sbb
clc
pop
sbb
adc
stc
pop
push
test
adc
mov
cmp
mov
cli
pop
jb
stos
inc
call
mov
xchg
pushf
fs
mul
mov
stos
(bad)
in
cmp
outs
pop
call
stc
repz
jp
mov
dec
xchg
jnp
xor
or
fadd
imul
fisub
bound
jnp
jne
(bad)
lods
mov
pop
test
mov
add
jno
loope
or
sub
and
cmp
mov
fbstp
jbe
pop
add
jge
(bad)
(bad)
pop
movs
mov
fs
movs
xchg
jbe
adc
inc
cmp
cmp
aam
jmp
aas
dec
fidiv
push
mov
clc
jo
and
push
sahf
or
push
in
push
jbe
ror
rcl
pop
loope
pop
jne
adc
add
fs
lea
xchg
retf
cs
imul
sbb
fistp
or
repz
sbb
dec
mov
dec
jns
mov
cs
test
mov
je
pop
(bad)
xor
mov
aaa
cmp
sub
and
or
sub
jnp
mov
or
cmp
or
popa
jmp
mov
add
rdmsr
out
repnz
pop
xchg
jmp
sti
pop
inc
(bad)
xor
xchg
loope
out
mov
repz
mov
pop
pop
test
leave
call
push
retf
cmp
sub
inc
js
push
sbb
mov
xchg
test
inc
rol
cmp
pop
xor
push
or
and
mov
push
popf
lods
mov
sahf
hlt
xchg
pop
mov
push
(bad)
sbb
ret
xchg
mov
jecxz
imul
add
sbb
mov
icebp
dec
mov
stos
outs
pop
frstpm(287
mov
sti
pop
je
test
sbb
or
jmp
and
push
jl
mov
or
out
mov
inc
sbb
dec
xchg
xlat
sbb
cmp
adc
jbe
xor
dec
mov
add
fcos
arpl
inc
iret
icebp
movs
ds
pop
(bad)
sbb
lds
mov
mov
lds
cmc
sub
dec
stos
xchg
push
in
mov
push
add
xchg
fiadd
pop
fsub
push
sbb
leave
repz
inc
add
jns
pop
gs
add
retf
(bad)
iret
add
jmp
ror
bound
ret
pop
cmp
pop
mov
stos
ins
dec
mov
adc
sub
aam
cmp
dec
retf
and
outs
push
pop
call
rcr
in
scas
sbb
imul
mov
in
call
mov
shl
mov
sbb
sub
inc
cmps
push
sbb
mov
stos
inc
or
mov
xor
dec
pop
jg
adc
retf
js
lods
jb
into
add
mov
sub
xor
jmp
fsub
inc
dec
daa
mov
jns
out
xchg
dec
int
jge
hlt
retf
call
mov
cmps
xor
mov
gs
rcr
sbb
loope
repz
mov
inc
js
pop
sub
out
int
dec
push
jmp
mov
and
push
ins
pop
and
xchg
ss
repz
stos
push
pop
mov
jge
mov
sbb
out
and
bound
mov
nop
fisub
cdq
popa
adc
cld
scas
je
sbb
scas
sbb
mov
rcl
mov
push
and
ret
mov
jp
mov
inc
cmp
mov
stos
cmp
in
dec
into
mov
std
add
add
add
ss
jae
movups
movs
cmp
jecxz
mov
add
pusha
inc
vpermb
xor
test
lock
ja
push
in
xchg
mov
aad
movs
repz
bound
cli
xor
pop
pop
pop
stc
aad
jle
and
pop
xchg
cmovs
jb
jnp
(bad)
xchg
stos
sub
dec
fsubr
push
xchg
leave
pop
push
pop
pop
mov
addr16
sub
fs
jg
mov
add
pop
fsub
mov
not
jae
outs
out
idiv
mov
cdq
inc
sbb
push
test
outs
ja
xchg
lods
adc
hlt
mov
xchg
mov
in
cmps
push
aaa
dec
mov
lock
cmp
jno
ins
jp
fwait
xor
dec
out
sahf
movs
mov
pop
sti
gs
or
jge
mov
jae
addr16
pop
mov
iret
bound
push
inc
lods
add
adc
rcr
(bad)
inc
popf
pop
sar
cdq
inc
out
mov
test
repnz
fwait
not
mov
add
loop
or
pusha
inc
mov
ins
icebp
sub
das
push
sub
cli
cmp
adc
pushf
dec
and
cdq
mov
pop
(bad)
add
cmp
or
cmc
adc
xor
neg
or
jmp
je
jg
jno
dec
jmp
push
xchg
mov
mov
xchg
jl
mov
out
dec
ret
popf
movs
mov
movs
fmulp
push
je
mov
ror
inc
add
jecxz
ret
pop
inc
xor
pop
pop
lea
fld
aas
mov
inc
in
cmp
das
fwait
xor
pop
sbb
mov
fcomip
mov
jmp
add
and
addr16
inc
daa
mov
xchg
mov
jae
mov
lock
idiv
dec
add
test
or
shl
and
dec
fld
push
xchg
sub
mov
mov
je
jmp
aas
out
cmp
and
mov
xchg
and
addr16
test
lahf
ss
xchg
cli
fndisi(8087
cs
push
pop
cdq
xor
iret
mov
sahf
xlat
mov
cs
test
movs
push
pop
mov
div
xchg
jmp
fdivr
jo
cmp
dec
jmp
test
out
add
sub
mov
push
mov
xchg
mov
xchg
mov
jmp
sbb
cmp
daa
mov
dec
or
cld
arpl
arpl
stc
xchg
and
inc
jle
inc
mov
test
push
das
xchg
cmps
mov
dec
mov
fbstp
mov
mov
test
pushw
inc
ror
sbb
icebp
cld
sti
(bad)
in
dec
or
xchg
gs
test
inc
mov
cld
push
fsub
jno
sti
jo
push
pop
jecxz
sub
and
push
stos
sbb
add
inc
iret
cld
mov
stc
jne
push
adc
loope
mov
mov
adc
cmps
div
lea
test
pop
cdq
ror
jecxz
dec
jmp
jne
and
adc
push
xlat
sar
addr16
add
sub
lods
jo
outs
nop
retf
cdq
xchg
add
fidivr
xchg
pop
dec
jno
cmps
add
add
or
pusha
dec
fimul
mov
jnp
cmp
cmps
cmps
xor
and
pop
mov
loope
imul
dec
push
icebp
icebp
mov
rcr
mov
or
xchg
stc
loope
lods
retf
jmp
sbb
retf
pop
sti
pop
push
and
sub
cmps
push
pop
jnp
cwde
mov
sti
sar
cmc
jle
push
cmp
push
fs
(bad)
cs
pop
adc
outs
push
sbb
mov
pop
dec
retf
test
inc
sub
cmc
sbb
mov
inc
out
jmp
sub
(bad)
xchg
xor
ja
and
mov
mov
add
(bad)
mov
clc
dec
imul
test
sbb
jnp
xchg
arpl
jne
mov
xchg
push
push
fmul
cmp
inc
jecxz
pop
jge
es
sbb
ins
ret
(bad)
xor
lods
xchg
ss
xor
in
add
js
lahf
sub
mov
pushf
inc
out
push
sub
hlt
cmps
sub
mov
dec
lea
stc
nop
in
hlt
push
jl
xchg
push
repz
or
fisub
cmp
pop
mov
sbb
jb
ins
lahf
xchg
test
jl
icebp
and
pop
aaa
int
xor
and
xchg
cmp
xchg
outs
inc
mov
outs
mov
lods
clts
sub
add
jae
scas
jb
mov
or
pusha
sub
imul
mov
jge
cmps
repnz
stc
test
test
out
ins
out
pop
push
int3
call
dec
sub
and
movs
jnp
jnp
mov
fnstcw
idiv
retf
pop
push
pop
cld
pop
or
pop
iret
push
fsub
mov
pop
mov
movs
lea
fcmove
mov
stos
not
dec
ins
push
mov
aas
sahf
mov
sbb
(bad)
std
mov
xchg
dec
fwait
mov
inc
dec
xchg
fidiv
(bad)
iret
out
jns
add
cmps
xor
adc
(bad)
ficom
es
jbe
xchg
dec
push
mov
les
jl
into
arpl
repz
pop
dec
mov
imul
(bad)
adc
jb
mov
jg
nop
cld
and
inc
lods
mov
push
pop
sub
repz
cld
mov
xlat
out
adc
fcom
mov
arpl
mov
add
aam
cwde
faddp
jno
mov
ins
ror
sub
hlt
out
xchg
cs
je
sub
mov
push
pop
(bad)
js
loope
xchg
xchg
jne
push
lds
push
jne
xor
add
addr16
into
movs
sbb
(bad)
and
sbb
fcomp
fdivr
cmp
in
xchg
dec
xlat
fwait
add
cmc
ficom
test
jae
lahf
mov
xchg
test
daa
add
ret
sub
mov
dec
push
jbe
test
jnp
leave
add
mov
jne
hlt
push
aas
data16
lods
mov
xchg
or
fcomp
fisub
push
aad
jno
sar
loop
mov
mov
mov
enter
test
or
mov
adc
jmp
js
mov
jbe
sub
dec
jmp
fld
sbb
jg
add
pop
xor
movs
adc
xchg
leave
adc
(bad)
push
je
add
jns
(bad)
adc
mov
cwde
clc
mov
retf
imul
test
rol
xchg
jecxz
aaa
hlt
pop
stos
xchg
jns
popf
scas
adc
mov
mov
(bad)
xor
sub
(bad)
int3
lods
ds
and
or
dec
cmps
ss
stos
call
rcl
jo
out
inc
imul
xor
xor
addr16
dec
pop
cmp
jmp
xchg
sbb
es
stos
mov
mov
jg
movs
inc
stc
mov
fs
jmp
jbe
out
mov
mov
sub
pusha
dec
xlat
lock
pusha
push
jecxz
push
leave
jg
sub
mov
retf
inc
jbe
jle
imul
xor
stos
push
push
leave
sbb
push
adc
mov
sbb
mov
dec
pushf
ins
and
mov
and
cmp
scas
xchg
(bad)
(bad)
jb
dec
dec
dec
mov
jae
mov
dec
call
out
pop
jmp
mov
test
and
ror
mov
daa
pop
or
(bad)
call
aas
outs
mov
inc
fs
ss
pop
out
les
cwde
icebp
jo
inc
dec
ss
push
mov
inc
push
cdq
push
mov
or
fdivrp
mov
hlt
sbb
fist
mov
jle
mov
jae
xchg
add
hlt
mov
lea
sti
sar
nop
mov
sbb
shl
sbb
pop
shr
(bad)
push
jmp
inc
jb
and
sahf
test
lahf
out
cmp
dec
cmp
sbb
imul
or
mov
jb
test
loop
call
push
inc
test
mov
mov
test
out
pushf
es
iret
push
pushf
dec
add
xlat
cli
mov
xchg
lahf
pop
mov
pop
cmp
mov
inc
ror
jne
inc
mov
dec
aaa
or
retf
and
test
sbb
or
cmp
stos
push
sub
loope
adc
gs
iret
popf
add
bound
mov
(bad)
mov
mov
mov
ss
and
inc
mov
out
test
mov
dec
in
jmp
jnp
inc
add
cmp
mov
mov
stc
outs
fimul
jae
pop
cmps
adc
mov
push
add
retf
mov
xor
lds
jo
pop
jp
pop
or
push
out
mov
dec
pop
mov
cmps
popf
bnd
out
adc
iret
(bad)
pop
inc
sbb
sbb
fdivrp
cmp
cmp
es
sbb
jge
dec
add
mov
mov
ret
enter
push
data16
es
push
pushf
or
and
test
sbb
push
cmp
mov
sbb
jo
xchg
jb
mov
(bad)
jl
test
test
lea
push
xchg
mov
ds
add
xor
sbb
retf
stc
jmp
int
pop
es
cs
pop
mov
cwde
iret
xchg
dec
frstor
adc
xlat
jae
pop
add
dec
or
call
pop
inc
mov
inc
stos
aam
xor
or
hlt
iret
fwait
sub
stc
inc
in
inc
(bad)
pop
fldenv
mov
xor
loope
add
jp
stc
fstp
call
mov
xlat
outs
mov
cmp
cmc
shr
pop
call
sbb
pop
test
push
or
inc
push
les
inc
mov
add
and
sub
pop
inc
lahf
pop
inc
shr
add
stos
test
sub
jg
cmps
loope
(bad)
hlt
push
shl
and
(bad)
xchg
call
lea
lea
sbb
shr
mov
call
jo
dec
std
or
jmp
stc
sub
xor
pop
sbb
inc
pop
(bad)
jmp
pushf
mov
or
(bad)
iret
mov
test
pop
push
adc
pop
add
bound
adc
xor
mov
pop
ror
cmp
dec
jl
pop
cdq
xchg
les
popf
ins
xchg
xchg
pop
sub
xchg
sbb
lahf
pushf
shr
(bad)
gs
test
retf
sub
bound
mov
ins
retf
cs
jo
add
or
xor
cdq
push
sbb
xchg
movs
xchg
cmp
into
imul
jl
arpl
adc
and
jo
adc
mov
call
test
push
mov
xchg
loopne
test
movs
jg
mov
xchg
or
dec
mov
xchg
mov
fbld
mov
adc
fiadd
mov
jnp
push
mov
sbb
clc
(bad)
sti
jl
cmp
cmp
jo
pop
test
and
ins
(bad)
jnp
cli
push
addr16
and
mov
mov
aad
push
mov
push
je
cdq
cld
sub
addr16
in
fwait
pop
mov
fmul
pusha
cdq
dec
mov
xchg
out
push
retf
and
call
nop
test
ret
push
add
xchg
mul
sbb
retf
addr16
xor
push
cs
clc
repz
push
test
or
mov
loop
and
jmp
or
cmp
pop
mov
test
shl
pop
inc
das
push
out
fwait
adc
sbb
push
mov
cmps
call
mov
test
test
out
cmp
mov
mov
stos
(bad)
xor
push
aam
xor
arpl
inc
push
jge
rcl
pop
jae
nop
int3
mov
in
int3
and
pop
cmp
cmp
gs
call
jb
stos
or
pop
retf
mov
add
popa
ret
ds
into
mov
mov
push
(bad)
mov
mov
mov
pop
movs
movs
mov
adc
shr
jmp
repnz
mov
aaa
sbb
(bad)
pop
nop
inc
push
jle
lea
sub
xchg
dec
or
pop
cli
mov
add
jns
cmps
cmp
inc
(bad)
(bad)
pop
mov
cmps
dec
sbb
sbb
movs
or
add
retf
mov
pop
pusha
ror
mov
dec
loope
mov
(bad)
loope
or
call
call
lods
dec
pop
pushf
fwait
xchg
xor
test
iret
loope
pop
mov
clc
sub
cmp
lds
jbe
js
data16
data16
(bad)
mov
int3
iret
add
inc
sbb
sub
xor
xchg
pop
mov
rol
mov
push
movs
fnstcw
jmp
xlat
jle
push
popf
vdivsd
mov
mov
call
mov
mov
jecxz
outs
je
fimul
pop
cld
ds
icebp
enter
pop
imul
and
xchg
jbe
loope
xchg
inc
adc
retf
and
aaa
xor
or
inc
nop
dec
pop
test
loope
sbb
outs
cld
out
loopne
mov
jo
pop
outs
and
dec
sti
scas
or
dec
xor
cmc
cmps
jno
inc
mov
test
outs
cmps
xchg
test
stc
jecxz
push
jmp
cmps
sub
add
fadd
inc
lea
xor
mov
or
jns
shr
lds
shl
inc
(bad)
mov
sub
dec
scas
jp
cmps
dec
jns
test
jns
inc
mov
js
pop
aam
fimul
shl
hlt
shl
xor
jne
lahf
mov
push
nop
ja
nop
mov
fiadd
scas
(bad)
ins
lds
push
and
push
loop
js
pop
xchg
pop
or
and
retf
pop
adc
cmp
jb
xor
addr16
pop
mov
sbb
(bad)
sbb
mov
adc
retf
mov
mov
or
loop
sub
lods
out
ficomp
dec
mov
cli
rcl
xchg
mov
sub
and
mov
js
jno
stos
mov
xor
mov
cld
pop
pop
sbb
cli
cmp
adc
aaa
mov
fnstsw
lahf
dec
add
cmp
cmps
mov
(bad)
out
sbb
dec
push
lds
movs
ret
jg
mov
adc
xlat
std
stos
pop
rol
mov
sbb
nop
mul
sbb
imul
or
mov
stos
and
dec
lods
ins
sbb
pop
cwde
xor
leave
idiv
lahf
retf
or
in
outs
pop
bndstx
add
dec
push
retf
mov
cmp
retf
(bad)
imul
jp
mov
pop
test
cmps
pop
dec
out
sar
pop
(bad)
imul
popa
push
movs
test
es
shl
xlat
clc
jo
nop
xchg
push
retf
push
ficomp
sub
mov
jecxz
xor
cmp
fwait
or
sti
push
sub
mov
mov
enter
add
push
sbb
cmp
push
jbe
mov
push
push
mov
addr16
scas
mov
in
(bad)
mov
call
call
rol
and
mov
mov
lea
mov
mov
shl
fbstp
pop
xor
(bad)
ret
pop
int
sbb
cmp
cs
cmp
(bad)
mov
cld
inc
fdiv
adc
cmp
sub
sub
fwait
pushw
xlat
xor
cdq
cmps
ds
pop
cmp
sti
je
inc
push
pop
mov
imul
mov
repnz
fdivp
or
mov
ror
xchg
dec
aad
pop
pop
repz
repz
xor
pop
stos
aaa
inc
pop
mov
xchg
mov
dec
sub
jnp
jmp
test
pop
out
xor
popf
pop
cmp
sbb
add
mov
and
outs
iret
into
mov
stc
jnp
jb
jo
mov
dec
mov
xchg
frstor
jmp
mov
mov
mov
mov
and
lds
jmp
(bad)
pop
sbb
xlat
(bad)
mul
push
inc
or
mov
jg
lods
dec
sub
xchg
shr
fwait
call
dec
data16
add
sub
test
ror
test
pop
mov
add
dec
jg
popf
jb
mov
mov
out
cld
pop
xor
mov
repz
dec
jne
nop
test
lods
lods
ficomp
xchg
cdq
inc
jmp
jmp
and
inc
or
xor
cs
xchg
xchg
and
std
sbb
call
adc
and
xchg
and
mov
sbb
sbb
test
inc
ret
je
sub
loope
mov
movs
inc
in
jns
cli
stos
popf
and
jp
stos
and
scas
pop
addr16
lock
test
pusha
outs
mov
push
lea
adc
cmc
cmc
fbstp
add
bound
jnp
jbe
cwde
scas
test
ds
push
ret
mov
enter
add
mov
lea
jmp
inc
rcl
xchg
rcr
in
test
mov
push
inc
fdivr
mov
inc
test
xchg
pop
push
out
loope
cmp
pop
hlt
mov
in
add
(bad)
(bad)
or
int
cmp
xor
pop
sbb
shr
pop
int
or
imul
and
mov
mov
push
je
push
ss
or
out
pop
call
adc
xlat
mov
enter
mov
pop
cmp
dec
lock
dec
xchg
xchg
jge
(bad)
in
ins
lds
mov
repnz
(bad)
sbb
push
adc
jmp
fyl2xp1
jno
cwde
mov
xor
out
and
and
or
sbb
cmps
(bad)
mov
push
jmp
adc
xor
adc
push
xor
dec
jl
mov
ds
sahf
inc
retf
sub
add
sub
xchg
(bad)
aas
mov
mov
xchg
sti
icebp
setbe
stos
test
aad
cmp
mov
aam
iret
aam
inc
fwait
cmp
push
rcr
call
sbb
adc
mov
jo
retf
dec
ds
cwde
ficom
fcomi
add
add
jns
xor
jb
fisubr
lods
add
nop
cmp
sub
sti
xchg
sub
std
pop
lock
mov
in
rol
mov
jecxz
mov
ins
sbb
xor
out
aad
bound
mov
sbb
cmp
stc
repz
icebp
sbb
cmp
test
jle
cwde
mov
pushfw
out
push
xchg
pop
sub
cmp
add
sbb
fnstsw
mov
mov
call
jmp
ss
out
loop
lahf
ins
fimul
test
cwde
shr
or
mov
std
mov
scas
cmps
push
and
mov
mov
cmp
mov
jne
mov
lods
into
adc
dec
std
jmp
dec
dec
sub
adc
xor
cwde
cmp
pop
sahf
outs
pop
test
mov
pop
and
adc
sti
jp
dec
inc
sub
jge
mov
jge
out
out
in
inc
adc
sbb
lods
sbb
sbb
lock
fadd
dec
push
call
lds
ss
call
jge
js
xor
loopne
ds
dec
add
popa
xchg
ror
repnz
pop
pop
loop
or
addr16
inc
sub
arpl
sbb
(bad)
movs
cmp
fist
pop
pop
cmp
dec
mov
xchg
pop
or
out
push
xchg
movs
shr
mov
in
out
idiv
mov
lock
or
pop
stc
pop
push
push
jnp
daa
jne
scas
pop
ss
stos
movs
mov
imul
push
jb
cmp
ds
rol
push
dec
xchg
push
and
in
adc
pop
clc
retf
xchg
mov
jae
lods
dec
out
cmc
inc
xchg
in
pop
shl
daa
mov
lods
or
addr16
sahf
test
dec
mov
inc
add
push
inc
mov
(bad)
clc
popf
bound
fisttp
stos
pop
sub
int3
xchg
fbld
out
add
dec
fisubr
jnp
xor
int3
ds
jl
loop
sbb
pop
js
jmp
sbb
outs
jno
or
adc
in
cld
adc
xlat
clc
mov
xchg
shl
inc
push
dec
mov
call
les
sub
call
fwait
mov
shl
mov
and
call
mov
fisubr
mov
sbb
adc
xlat
jmp
in
dec
jle
test
push
pop
dec
xchg
movs
stos
mov
enter
push
xabort
popa
pusha
sub
mov
addr16
adc
xchg
mov
int
in
into
mov
jnp
jge
outs
fsub
jo
stos
imul
rcr
dec
lahf
imul
into
out
inc
xchg
fnstsw
sub
(bad)
fs
pop
cmp
das
mov
fldenv
sbb
jecxz
xchg
in
dec
push
jp
out
jae
sub
jmp
mov
xchg
dec
pop
mov
push
dec
jmp
mov
mov
ins
jp
ss
loope
out
movs
dec
aam
cmp
dec
xchg
pushf
fmulp
pop
mov
mov
rcr
mov
repz
mov
sbb
jmp
dec
out
pusha
or
mov
push
pop
mov
mov
arpl
int
cwde
clc
pop
push
dec
inc
in
pop
aas
dec
sbb
adc
jns
cwde
dec
inc
cmps
sub
xchg
xchg
std
or
scas
mov
xchg
jb
mov
pop
xchg
mov
or
shr
mov
lods
mov
push
mov
fdivrp
xchg
lock
mov
out
aaa
sbb
test
push
fadd
or
adc
pop
push
xchg
out
in
jno
mov
dec
call
push
mov
or
pop
xchg
stos
cld
jne
sbb
lahf
out
add
sbb
push
pop
mov
mul
mov
aaa
into
dec
stos
fdiv
adc
stos
pop
push
rol
scas
test
cli
daa
pop
sbb
stc
mov
rcl
or
(bad)
inc
inc
lods
xchg
cwde
mov
stc
jns
shr
out
outs
or
loopne
imul
or
dec
and
xchg
mov
(bad)
mov
jg
and
pop
icebp
(bad)
leave
addr16
cmc
stos
inc
xchg
movs
jnp
(bad)
lds
mov
inc
push
pushf
cmps
cmc
and
call
pop
loope
out
dec
xor
addr16
push
add
pusha
mov
fwait
test
xchg
cs
lods
pop
in
mov
fidivr
js
shl
jg
add
jae
ret
sar
push
in
(bad)
aaa
cs
out
xchg
or
mov
sbb
out
stc
dec
add
dec
es
mov
ror
mul
arpl
leave
retf
call
dec
xchg
push
repz
rol
cmp
movs
sbb
ds
(bad)
aaa
sub
inc
jecxz
jp
retf
push
inc
push
cmp
ss
pop
or
or
in
push
push
mov
add
adc
push
dec
adc
shl
hlt
inc
pop
pop
mov
cmp
std
adc
ror
sahf
mov
arpl
imul
cwde
mov
mov
sub
shr
loop
loopne
jp
jns
sub
jmp
push
jne
(bad)
mov
or
pop
fmulp
and
inc
loope
ins
pop
das
and
ficom
jb
jb
pushf
aaa
inc
in
and
dec
(bad)
(bad)
sar
inc
and
fst
movs
push
(bad)
mov
(bad)
and
cmps
lock
popf
pop
lea
cld
nop
leave
fst
xchg
cmps
data16
and
enter
in
or
arpl
push
je
push
inc
mov
lahf
call
add
add
fidivr
sub
and
and
dec
fstp
xor
mov
and
xor
out
cmp
jnp
movs
sub
mov
xchg
dec
(bad)
loopne
cmp
repz
pop
test
(bad)
mov
stc
scas
cmc
test
das
in
inc
aas
daa
icebp
shr
sub
ror
xor
or
or
popa
icebp
ror
(bad)
fiadd
pop
fs
and
add
test
jb
mov
push
mov
sbb
fist
in
addps
dec
test
xchg
outs
cmc
xchg
sbb
pause
adc
fcmovnbe
sbb
dec
sbb
sbb
test
icebp
sbb
dec
cld
push
cmp
call
cmp
pop
cmps
outs
addr16
mov
aas
outs
mov
cli
pop
out
shl
sahf
into
inc
dec
add
jp
imul
push
fwait
push
or
cmp
xor
pop
lahf
test
push
test
jge
pop
pusha
and
das
test
push
mul
xor
inc
mov
xchg
or
push
fs
fadd
mov
fdivr
sbb
mov
push
add
repz
ds
cmp
cmp
mov
cdq
sbb
iret
jp
int
xchg
pop
push
aas
mov
or
out
sbb
cdq
pop
adc
cmp
jne
sub
shl
inc
rcr
rcl
addr16
xchg
jne
jecxz
push
jmp
adc
test
scas
xchg
mov
inc
fcmovu
sub
pop
outs
jmp
push
sub
shr
add
sbb
and
stos
mov
in
je
jmp
add
sub
sbb
pushf
adc
xchg
add
mov
ret
aad
xor
push
inc
mov
jl
ret
mov
sbb
lock
adc
inc
movs
movs
test
adc
popf
cmp
(bad)
repnz
iret
push
dec
pop
adc
daa
jp
pop
test
xchg
jb
or
jmp
pop
je
cmp
inc
adc
add
mov
call
adc
sub
push
and
popa
fwait
lods
loopne
retf
jmp
xchg
push
lds
adc
xchg
mov
inc
(bad)
mov
and
jmp
pop
fild
stos
shl
mov
mov
mov
clc
pop
imul
cli
shl
add
and
jo
imul
dec
(bad)
lock
mov
inc
inc
cld
daa
push
push
pushf
aaa
neg
mov
aad
jg
xchg
fwait
push
xor
cmp
iret
stos
and
ret
adc
push
test
in
mov
ret
hlt
mov
adc
icebp
jmp
icebp
dec
fwait
imul
jmp
div
retf
inc
ja
sub
shr
jmp
add
sbb
sub
lods
or
je
(bad)
jge
mov
push
mul
outs
inc
das
push
pushf
pop
mov
ret
stos
sub
mov
jmp
enter
inc
jbe
je
mov
xchg
mov
mov
mov
pop
jb
mov
add
stos
popf
inc
jne
ret
sub
and
fsubr
scas
and
inc
jne
inc
xchg
jno
pop
pushf
ins
or
xchg
mov
ss
hlt
sbb
leave
es
jbe
jp
jmp
sub
jge
cmps
dec
inc
lods
adc
sar
push
xor
inc
fucomp
jmp
xlat
js
jno
and
(bad)
hlt
fs
in
pop
lea
xchg
cmps
mov
data16
test
shl
mov
xor
sub
xchg
mov
sub
or
or
mov
icebp
pop
push
and
add
pop
sbb
dec
inc
mov
and
and
stos
inc
nop
fdivr
ins
bound
sub
cmp
dec
aad
js
clc
fsubr
and
mov
mov
mov
xchg
and
xchg
mov
mov
repnz
das
in
(bad)
(bad)
bound
fwait
inc
push
stos
jne
jne
cwde
movs
mov
leave
rcr
fidiv
add
je
mov
ins
adc
outs
xchg
xchg
sub
mov
icebp
arpl
call
leave
stos
jno
mov
nop
add
dec
mov
dec
sahf
cmps
cmps
xor
pop
pop
scas
fwait
jp
addr16
or
mov
lock
jmp
sbb
add
mov
les
jmp
jb
sub
sbb
add
pusha
addr16
inc
pop
fnsave
inc
test
dec
ret
ficomp
ret
ins
mov
jns
scas
loope
loop
or
fxch
cmps
cmp
pop
xchg
xchg
lods
rcl
stos
inc
ins
mov
fist
mov
mov
sbb
enter
jnp
push
bound
xor
lods
push
pop
scas
push
int3
fidiv
mov
sub
inc
packuswb
mov
mov
fld
jns
mov
loope
adc
and
test
push
test
xchg
ja
(bad)
lock
cwde
jmp
int
xchg
jp
mov
inc
push
mov
mov
imul
mov
adc
pop
mov
jle
jp
cmp
mov
xchg
lahf
mov
pop
fld
in
push
bound
neg
and
push
bound
inc
ror
and
shl
push
push
ins
out
out
and
shl
jne
cwde
inc
fdivr
xchg
(bad)
out
pushf
adc
push
fwait
inc
pop
lahf
pushf
div
and
xchg
mov
dec
sub
xlat
pop
enter
push
adc
pop
lods
ja
jo
mov
mov
lahf
(bad)
das
mov
push
pop
inc
add
adc
pop
js
inc
sbb
and
or
cld
fsub
cmp
pop
push
jge
inc
ret
dec
mov
test
scas
push
retf
inc
call
mov
lods
push
xor
sbb
stos
xor
out
fnstsw
push
loopne
jae
pop
sub
stos
xor
push
out
retf
iret
or
cmps
push
ret
sar
call
mov
cmp
test
pop
mov
jle
mov
in
les
cwde
imul
pop
jmp
shr
enter
stos
ja
jmp
jge
mov
imul
out
addr16
cld
test
imul
xor
(bad)
cld
push
dec
ror
sbb
mov
inc
(bad)
sbb
jmp
dec
sti
inc
outs
je
sub
sbb
xor
push
inc
mov
xor
div
ins
enter
lods
stc
jo
pop
jb
popf
jge
mov
mov
loopne
jb
test
pop
bnd
pushf
mov
jns
cwde
neg
xor
ficomp
and
adc
test
inc
iret
sbb
push
pop
frstor
pop
add
test
retf
inc
std
xchg
or
xor
cmp
or
and
inc
into
sbb
xchg
clc
cmp
dec
cmp
hlt
cmps
pop
or
sub
mov
dec
xlat
fsubr
mov
push
adc
cmc
(bad)
out
mov
dec
pusha
sahf
fild
pop
leave
xor
sub
(bad)
repz
sbb
popf
jo
jle
(bad)
xchg
mov
rcl
or
mov
dec
push
cld
and
add
push
xchg
cmp
shl
test
jle
inc
jo
mov
outs
xor
jge
mov
stos
sub
inc
movs
scas
mov
sahf
cmps
mov
lock
aas
inc
lahf
mov
xor
adc
lea
sub
shl
and
cdq
call
std
pop
mov
ins
jge
ficom
xor
popa
mov
retf
and
pop
gs
dec
add
cmp
push
gs
pop
mov
je
lods
dec
ret
pushf
stc
imul
cmps
mov
mov
pop
add
or
out
shr
mov
or
dec
loope
shl
or
cdq
xor
xor
nop
movs
les
(bad)
jecxz
cmp
outs
pop
sbb
pop
xor
cmp
push
mov
out
add
push
inc
(bad)
or
mov
push
pop
xor
je
dec
push
pop
cdq
sub
pushf
rcr
mov
xor
out
or
jnp
lea
jae
leave
mov
add
jp
mov
repnz
adc
leave
fld
jl
inc
xchg
xor
cld
dec
sbb
fstp
pop
fwait
leave
push
mov
or
pop
sbb
sbb
outs
mov
and
xchg
and
cmp
int
jge
bound
mov
cmp
sar
(bad)
lods
and
cmps
enter
jne
leave
and
repz
cmc
lods
loopne
stos
fldcw
dec
(bad)
aaa
sbb
jmp
or
inc
jbe
imul
mov
cmp
pop
int3
nop
cs
jno
enter
sub
jmp
shl
fmul
xchg
mov
adc
cs
test
sbb
retf
inc
test
and
pop
xchg
loop
push
xchg
clc
push
and
mov
outs
jecxz
sbb
stc
lock
out
sti
cmp
mov
xor
dec
call
inc
jle
push
push
scas
mov
shr
into
adc
loopne
data16
iret
aas
sub
push
pop
test
sbb
mov
pop
mov
std
xor
cmp
out
adc
ret
push
add
dec
cmc
nop
test
jecxz
and
fld
sti
xchg
or
bound
xchg
xchg
cmp
in
arpl
hlt
cmp
aaa
fmul
icebp
and
jo
das
inc
mov
or
dec
repnz
or
push
xchg
rsm
pandn
fmul
adc
lahf
xor
les
les
sub
adc
pushf
push
(bad)
nop
pop
dec
mov
mov
mov
sub
popf
addr16
inc
mov
cli
jge
mov
iret
xor
jo
inc
imul
jne
bound
xchg
dec
cs
ins
sahf
fldenv
mov
dec
fs
fisub
or
aas
xchg
sbb
jns
pushf
dec
push
xchg
xchg
mov
xor
dec
retf
push
xchg
out
js
inc
jo
xchg
mov
mov
mov
cmp
push
not
dec
lods
mov
(bad)
test
in
sbb
test
and
into
stc
jnp
cmp
push
pop
xor
mov
push
stos
mov
in
sbb
idiv
hlt
pusha
push
sub
dec
outs
add
mov
lods
xor
outs
add
mov
int
mov
xchg
hlt
inc
(bad)
sbb
clc
mov
dec
jmp
xchg
arpl
mov
neg
mov
push
test
loopne
test
cwde
ss
dec
cmps
or
cmp
mov
sub
inc
imul
jg
js
jl
(bad)
pushf
stos
add
out
vmovss
inc
sbb
ror
inc
or
mov
mov
repnz
dec
dec
xchg
push
pop
xchg
fnstcw
hlt
int
ds
aam
xlat
jbe
data16
shl
mov
rol
jnp
push
mov
test
lea
mov
loop
dec
sti
push
fdivr
sbb
inc
out
pop
cmp
jne
jns
gs
push
in
mov
enter
cs
pusha
push
jne
fnstenv
push
imul
xchg
pmaddwd
test
lods
mov
sbb
adc
cwde
sti
test
mov
jbe
add
mov
gs
mov
jmp
hlt
push
fstp
sti
xchg
stos
adc
cli
shl
lods
out
outs
jmp
sbb
sti
sbb
es
cmp
mov
mov
mov
sub
add
ins
imul
cmp
test
(bad)
adc
js
fstp
mov
jl
mov
jg
cli
mov
mov
je
pop
push
inc
fst
add
aad
fs
xchg
dec
xchg
clc
mov
dec
lods
sbb
sbb
mov
xchg
xchg
jb
jnp
xor
dec
fmul
out
fs
xor
inc
mov
je
mov
push
jmp
lea
out
mul
xchg
push
dec
pop
cmp
sbb
inc
sbb
jg
jnp
lods
imul
xchg
mov
es
and
scas
mov
(bad)
sbb
mov
mov
aas
mov
cld
push
push
mov
mov
mul
lea
ins
mov
(bad)
imul
mov
fimul
es
sub
xchg
push
je
aas
xor
arpl
lahf
lods
xchg
cmp
out
jns
out
sbb
and
adc
mov
imul
adc
in
and
in
add
jp
push
lea
xchg
loope
mov
add
les
mov
push
popa
mov
sub
aam
mov
sar
xchg
scas
jnp
jl
sbb
sub
fsubr
pusha
mov
fs
inc
pushf
shl
lds
addr16
mov
or
imul
add
mov
test
inc
jb
dec
stc
and
in
mov
aad
inc
xor
call
mov
cmps
mov
movs
sbb
xchg
sti
test
dec
imul
pop
xor
out
fist
inc
push
jns
lea
inc
push
and
jecxz
jns
rcr
pop
push
(bad)
sub
push
xor
pop
and
pop
inc
test
mov
out
jecxz
pushf
and
je
sub
jmp
dec
popf
mov
or
jecxz
push
mov
dec
mov
xchg
fs
jecxz
leave
cld
cmp
test
dec
test
aam
ds
and
bound
imul
test
mov
or
jge
(bad)
and
push
mov
or
sbb
inc
nop
xchg
mov
in
cmps
xchg
and
addr16
cmps
sar
dec
enter
jmp
mov
add
xor
fadd
lahf
ficomp
test
jmp
adc
pusha
movs
das
sbb
push
sbb
xor
icebp
bnd
fist
dec
mov
aaa
cmp
add
pop
inc
sbb
add
mov
popa
loope
mov
(bad)
bound
jo
pop
fidivr
cwde
pop
in
stos
dec
sub
cmc
hlt
sub
dec
hlt
fwait
mov
inc
xchg
mov
clc
xchg
std
xchg
mov
div
cmp
loope
imul
dec
stc
pop
ds
mov
sbb
shl
inc
adc
add
sbb
jg
adc
jae
call
shr
jmp
adc
push
and
bound
jecxz
daa
mov
mov
loope
int3
pop
scas
jnp
call
cmps
lods
(bad)
bound
lahf
aad
in
scas
es
xor
call
(bad)
lods
pop
add
mov
retf
fimul
add
jb
cmp
pop
add
and
adc
xor
xchg
xchg
push
cmp
inc
mov
dec
inc
mov
push
xlat
mov
sub
xlat
lods
push
call
fist
out
mov
and
jmp
loop
xor
lea
das
out
sbb
(bad)
(bad)
leave
jbe
sbb
mov
push
and
iret
nop
arpl
ror
xchg
lea
fs
ficomp
fs
push
add
in
sbb
jae
xchg
sbb
mov
cmps
sbb
xor
(bad)
in
int3
inc
dec
jle
call
mov
push
(bad)
cdq
pop
xor
shr
cmp
ret
mov
lock
stos
fsub
js
icebp
stos
jb
push
hlt
adc
cmp
fxch
daa
stc
add
cmp
push
daa
push
mov
mov
sbb
rcl
fwait
test
bound
cmp
cmp
push
iret
jp
scas
dec
aaa
scas
ss
mov
xchg
dec
add
retf
int3
test
int
je
push
jne
mov
xor
jno
pop
scas
aaa
out
inc
repnz
add
xor
(bad)
fdiv
icebp
mov
adc
xor
retf
shl
push
data16
stos
cmp
arpl
xchg
movs
xchg
dec
pop
int3
inc
fimul
ins
pop
ds
pop
sub
or
jl
(bad)
push
mov
pop
mov
ret
icebp
mov
jmp
push
test
push
fstp
xchg
adc
fwait
xchg
aaa
xchg
movs
(bad)
mov
pop
rcr
mov
lea
cmp
sub
sbb
dec
cmps
jno
jp
ss
xchg
adc
sti
enter
pusha
adc
retf
adc
inc
sub
xor
pop
sbb
or
out
movs
loope
cmp
dec
mul
xchg
pushf
mov
add
ret
shr
sbb
fld
movs
cmps
(bad)
dec
scas
pop
pop
scas
test
cmps
in
clc
inc
jns
stos
sub
jns
sbb
(bad)
in
gs
imul
inc
pop
or
aaa
jmp
mov
sbb
pop
adc
sbb
mov
pop
mov
std
outs
pop
adc
aaa
int3
xchg
push
bnd
pop
mov
inc
xor
push
(bad)
xchg
jne
dec
mov
inc
je
mov
retf
(bad)
js
mov
xlat
cmp
das
fst
retf
jg
inc
add
pop
sub
jge
inc
push
pop
in
test
int3
or
test
cmp
xor
inc
sbb
and
inc
je
pop
add
cmp
sahf
(bad)
mov
pop
and
in
call
jp
imul
call
test
popf
adc
mov
push
mov
repz
fcmovb
outs
js
mov
dec
and
clc
xchg
jmp
mov
je
(bad)
call
add
add
add
pop
(bad)
xor
sub
aaa
lock
push
scas
jno
xchg
je
test
arpl
xchg
add
bound
(bad)
pop
clc
mov
jg
mov
jg
repnz
mov
add
(bad)
ret
loop
dec
mov
jp
imul
sbb
(bad)
lock
ds
pushf
cmp
cdq
outs
cmp
xchg
cdq
dec
or
outs
clc
fiadd
inc
inc
mov
add
adc
sub
and
mov
cmp
mov
cwde
push
add
jbe
ret
jmp
push
cmc
mov
stos
and
add
cmps
pop
jnp
(bad)
xchg
pop
sub
loop
test
jg
pushf
mov
dec
lock
adc
(bad)
cmp
sbb
or
jmp
cmps
mov
rcl
jl
in
gs
sbb
xor
inc
push
movs
ins
or
stc
or
sub
out
pop
rcl
in
pop
jle
dec
shr
cmps
push
(bad)
in
or
loop
push
ficomp
mov
lahf
jns
lahf
mov
ret
test
aad
jge
movs
cmp
int3
icebp
out
inc
jmp
jle
aas
sar
daa
xor
int3
sar
clc
jns
pop
cmp
arpl
pop
imul
xchg
test
imul
ja
adc
rcr
call
xlat
lods
adc
js
lea
add
fwait
and
inc
mov
mov
push
adc
test
jbe
pop
jo
inc
xchg
pop
push
(bad)
clc
cmp
pop
out
mov
leave
cli
arpl
(bad)
push
pop
push
add
cmp
pop
adc
ja
mov
pop
in
loope
and
fs
retfw
inc
jge
mov
cdq
mov
test
int
pop
das
out
aam
pop
int
mov
movs
mov
stos
sbb
in
test
xor
mov
xchg
ret
push
call
vrsqrtps
xchg
inc
std
dec
add
mov
mov
sti
dec
in
add
aaa
loop
adc
and
mov
push
mov
(bad)
stos
lahf
cmp
pop
outs
scas
dec
xor
adc
jmp
and
iret
js
mov
cli
cmp
lock
add
sub
(bad)
pop
jmp
ja
adc
inc
shr
pop
pop
xor
mov
retf
sbb
cld
pop
dec
dec
inc
out
push
imul
add
jo
jne
scas
xor
loope
xor
inc
fcom
out
stos
int3
push
pushf
pop
jge
rcr
mov
mov
cmp
fnsave
test
inc
in
neg
and
ret
xchg
int
cmp
xchg
jl
adc
adc
leave
into
pop
retf
dec
pop
jnp
fistp
pop
arpl
cwde
test
push
sbb
or
cmp
and
push
xor
add
jo
lods
jge
xchg
and
stos
lahf
and
push
jge
out
xor
inc
inc
shl
mov
outs
mov
mov
add
xrelease
shl
cdq
popf
(bad)
aaa
mov
mov
inc
sbb
fstp
pop
sbb
retf
aad
jmp
jns
bound
je
jo
xor
out
addr16
push
call
add
sub
add
pop
dec
stos
xor
stos
stc
push
sbb
pop
test
inc
aam
arpl
pop
fisubr
sahf
inc
loope
inc
es
test
enter
fsubp
adc
fiadd
cmc
icebp
repz
addr16
mov
push
xlat
xor
push
mov
int3
je
inc
jns
push
mov
inc
or
mov
sub
and
sub
xor
lods
ds
popa
js
outs
xor
test
push
or
out
mov
iret
pop
cld
pop
push
inc
mov
ins
mov
loop
or
aad
sub
ja
stos
mov
daa
lods
ins
pop
mov
scas
movups
cmp
push
fld
and
into
clc
push
loope
push
daa
pop
(bad)
and
arpl
add
pop
lock
ret
inc
pop
es
adc
daa
cmc
sbb
lahf
imul
sbb
test
test
in
iret
jmp
jg
test
pusha
stos
loopne
ja
mov
fld
lea
jne
inc
jo
mov
cwde
xchg
lods
popf
cmp
mov
ss
fmul
into
and
pop
fidiv
push
lahf
je
or
aaa
stc
pop
(bad)
test
sbb
sub
pop
add
and
mov
pop
test
mov
fdivrp
movs
and
icebp
jb
adc
jmp
stc
jns
stos
mov
loopne
add
int
mov
sbb
jb
add
enter
mov
or
clc
out
xlat
pop
loop
pop
push
jl
es
montmul
cmps
(bad)
lahf
mov
add
pop
jmp
jb
push
fnsave
cmp
(bad)
out
sbb
inc
mov
push
call
ror
es
jecxz
rcl
shl
in
iret
in
adc
pop
imul
sbb
in
mov
jmp
test
movs
outs
in
leave
adc
mov
lahf
or
imul
pop
and
mov
repz
dec
push
sub
cmp
push
daa
sub
pop
jbe
or
mov
mov
and
push
fdivr
mov
loopne
jl
mov
fcomp
adc
nop
pop
sub
mov
mov
(bad)
and
dec
js
xchg
cwde
test
movs
(bad)
cmp
mov
sub
sbb
push
arpl
jo
imul
cmp
push
fst
dec
inc
out
add
or
push
cmp
xchg
sub
xor
repz
push
rcr
rcl
jb
mov
dec
mov
in
retf
test
sar
mov
cmp
adc
mov
test
retf
xchg
mov
pop
mov
cmp
shl
lods
ds
inc
pop
or
jns
inc
or
pushf
mov
stc
ins
loope
pop
mov
pop
loop
sbb
fs
mov
in
inc
push
mov
push
mov
outs
cwde
std
test
mov
push
push
fwait
push
xlat
mov
ins
lahf
aam
push
lock
cmc
xor
push
mov
lea
xchg
hlt
add
lock
push
xchg
mov
das
cmp
mov
jmp
sub
cs
jle
xor
jo
lahf
xchg
lea
push
(bad)
jge
mov
mov
and
sbb
jo
and
outs
ins
xchg
das
fs
clc
sbb
pop
ror
js
pop
push
bound
inc
cdq
out
movs
pusha
std
xchg
dec
or
aam
icebp
loope
mov
(bad)
pop
pop
mov
fld
jle
xchg
push
fwait
fs
es
cmp
shl
jnp
popf
imul
inc
aas
jnp
cmps
lea
test
or
pop
fist
mov
enter
imul
push
test
sbb
retf
xchg
mov
jbe
sbb
xor
mov
in
ret
cmp
cmps
(bad)
jno
sbb
sbb
lods
xor
in
loop
push
xchg
movs
ss
jg
pop
sbb
nop
(bad)
icebp
popa
int
push
or
xchg
and
call
int3
mov
mov
dec
addr16
adc
sbb
mov
adc
push
push
mov
sub
xor
out
dec
lods
enter
add
mov
pop
xchg
mov
je
test
in
mov
bnd
test
adc
ret
shr
inc
dec
jmp
imul
jmp
pop
dec
std
lds
push
pop
mov
push
(bad)
xchg
cs
lods
sbb
into
sub
fiadd
add
dec
xor
cmp
pop
mov
scas
jnp
fisttp
add
mov
adc
es
out
add
push
inc
xchg
jge
xchg
fisub
sar
retf
repz
or
(bad)
out
sbb
mov
xor
div
aam
pop
inc
cmc
pushf
(bad)
mul
(bad)
aam
daa
call
dec
pop
sti
inc
xor
mov
inc
aam
rcl
adc
push
iret
xor
jge
pop
icebp
pop
xchg
add
ss
push
push
mov
call
mov
xchg
shl
arpl
ror
mov
call
ror
mov
sub
stos
pop
inc
rcl
movs
mov
ficomp
pop
cli
sbb
fisttp
pop
jo
sub
xchg
ins
push
ins
mov
jmp
rcr
jge
mov
push
adc
sub
xor
lods
pop
xchg
sub
push
jb
jns
sar
add
push
data16
mov
fwait
jmp
pop
lods
xor
sbb
push
rcl
mov
fs
popf
stc
dec
(bad)
dec
push
fwait
(bad)
xchg
push
xor
leave
movs
rol
inc
div
sbb
mov
shl
pop
and
pop
push
cld
cmp
xchg
adc
lock
aad
imul
mov
pop
adc
push
mov
pop
iret
cld
mov
(bad)
inc
dec
dec
mov
mov
mov
sbb
ret
retf
sbb
daa
shl
mov
mov
inc
aad
cmps
ret
idiv
nop
mov
xchg
jne
or
arpl
add
jnp
sub
mov
or
dec
cmp
ins
fisttp
push
push
mov
and
jmp
sbb
add
sbb
les
fidivr
jg
sub
mov
pop
mov
mov
xchg
sub
inc
lods
std
mov
jecxz
mov
push
out
div
rcl
addr16
scas
fwait
xor
je
or
retf
sub
dec
pop
es
cmp
dec
mov
mov
retf
add
repz
fiadd
sbb
pop
imul
cmp
xchg
xchg
push
inc
fwait
mov
inc
jmp
fnsave
pop
gs
outs
clc
test
ins
aam
pop
or
out
je
pusha
xchg
(bad)
mov
sbb
cmp
fnsave
jmp
ja
dec
stos
sub
add
out
jo
pop
sahf
push
dec
pop
movs
pop
pop
or
cmp
sbb
enter
jb
pop
sbb
xchg
add
cmps
jb
into
push
dec
mov
fwait
and
adc
scas
pushf
adc
jle
test
inc
cdq
std
mov
add
(bad)
xchg
push
bsr
mov
(bad)
clc
in
shl
lods
mov
push
adc
cmp
inc
pop
jge
mov
push
adc
mov
jecxz
pop
mov
ds
sub
jae
add
repz
scas
dec
inc
rcr
jns
fstp
xlat
leave
mov
not
pop
mov
test
js
mov
mov
xchg
jnp
mov
dec
pusha
sti
cmp
das
loopne
repz
pop
ins
mov
push
fwait
and
clc
out
xlat
and
ss
ins
fdiv
pop
test
pop
cwde
mov
les
(bad)
add
pop
lds
fs
xor
gs
scas
xor
mov
es
loope
xchg
inc
mov
lds
jle
inc
test
test
ret
das
iret
ficom
mov
dec
pop
mov
jmp
imul
xor
push
fisttp
dec
(bad)
fisubr
js
mov
sbb
imul
mov
mov
(bad)
jnp
cmc
jne
or
sbb
mov
and
addr16
inc
sbb
mov
(bad)
out
popf
adc
js
sub
cmps
out
call
cdq
jb
aad
repnz
mov
lods
lods
call
mov
lock
retf
jg
mov
pop
push
ss
lock
and
jno
js
push
and
leave
dec
cmp
sbb
ret
jg
jg
(bad)
and
or
mov
dec
mov
mov
aas
sbb
cli
mov
out
inc
bound
jnp
mov
div
in
mov
cli
scas
xchg
(bad)
(bad)
jmp
cmp
(bad)
mov
mov
in
sub
inc
clc
stc
in
push
cdq
xor
and
sbb
pop
sahf
inc
sbb
mov
cmc
inc
clc
(bad)
xor
mov
adc
call
and
popf
or
or
mov
mov
addr16
pop
ret
push
out
xchg
push
xchg
mov
xchg
push
dec
mov
xchg
and
inc
push
xor
ins
(bad)
daa
add
ror
sub
adc
sub
ss
std
gs
jg
retf
lahf
xchg
push
pop
rcr
shr
pop
adc
sbb
out
es
je
inc
dec
movs
data16
cmps
cmp
sbb
lock
pop
nop
shl
pop
add
sbb
mov
loope
push
retf
sub
repnz
sbb
(bad)
mov
retf
push
icebp
ret
dec
sti
ins
repz
aad
rcr
es
sub
sub
push
inc
icebp
fstp
pop
std
mov
mov
cmp
or
jo
aaa
sbb
fisttp
mov
jl
fldcw
les
jg
pop
jno
xor
fisubr
mov
sbb
mov
mov
aad
mov
stos
pop
addr16
shl
test
cmp
into
dec
ror
sub
retf
cli
add
arpl
outs
pop
dec
cmps
mov
xchg
dec
aaa
lods
pop
ret
test
push
imul
and
loop
mov
repnz
push
mov
lea
aaa
add
(bad)
test
adc
jmp
sub
xchg
outs
out
or
(bad)
lahf
je
sbb
stos
mov
dec
lods
jns
mov
stc
jmp
test
fs
dec
aaa
cmp
stc
test
fwait
add
sub
ins
pop
jge
push
inc
pop
mov
stos
aam
daa
ror
in
es
out
pop
push
push
popa
xor
lahf
mov
cmc
pop
dec
pushf
pop
push
mov
push
scas
sbb
int3
mov
cwde
jne
push
test
dec
mov
stos
bound
out
jne
test
add
std
neg
and
fmul
push
retf
pop
in
mov
out
sbb
mov
jnp
jo
or
dec
pop
cmps
data16
cmp
dec
mov
and
inc
shl
cld
pop
jns
imul
sbb
xor
lock
adc
bound
aas
xchg
mov
dec
in
pop
adc
pop
mov
mov
je
fwait
jmp
add
ret
in
push
outs
mov
or
add
and
xor
dec
or
mov
xlat
inc
inc
dec
add
mov
daa
cdq
sbb
dec
mov
pushf
xor
lahf
sbb
fsub
pushf
inc
inc
fisttp
mov
xchg
sar
das
in
movs
mov
sahf
sahf
(bad)
pop
or
mov
cwde
shr
inc
dec
pop
dec
sub
aad
inc
jmp
sbb
inc
xchg
aam
popf
into
cs
inc
adc
inc
es
xor
shl
cwde
jnp
mov
mov
push
pop
cld
shl
sub
fist
push
shl
dec
aad
bound
inc
scas
adc
arpl
xchg
xchg
xchg
xchg
jle
fwait
ins
int
cmps
or
add
sti
add
fisubr
inc
jg
dec
and
mov
lods
push
in
cli
daa
xchg
retf
add
out
aaa
push
or
mov
ja
scas
(bad)
ins
adc
push
popf
out
call
rol
test
cwde
sar
pushf
dec
daa
test
cmps
cmp
cwd
lods
test
dec
sbb
mov
cmps
leave
mov
mov
adc
push
or
sub
aas
jle
mov
push
test
mov
std
mov
test
aaa
hlt
pop
sub
pop
leave
jae
push
dec
(bad)
lahf
pop
jo
mov
fldcw
add
mov
jge
loope
dec
leave
nop
or
ror
xchg
dec
fisttp
in
xchg
into
cmp
fdiv
push
push
mov
scas
jns
inc
inc
pusha
jg
push
inc
pusha
popf
outs
sub
mov
clc
sbb
int
sbb
jg
adc
outs
xor
cmp
sar
(bad)
ds
mov
ds
and
loopne
retf
out
fld
mov
iret
sar
(bad)
mov
loope
popa
adc
mov
sbb
xchg
sbb
call
xchg
fbld
inc
xchg
xchg
xor
cmps
adc
dec
jecxz
test
xchg
cmp
and
ret
xchg
mov
sti
dec
ror
jo
adc
xor
jle
add
add
lods
sbb
lea
xchg
out
push
mov
ja
dec
sbb
pop
(bad)
mov
jmp
pop
rol
lods
or
dec
add
cld
ds
les
mov
outs
repz
repnz
es
test
sbb
popf
outs
jg
clc
xor
(bad)
jmp
inc
int
and
int
push
jnp
leave
cmp
add
mov
cmc
js
mov
and
test
retf
sbb
ja
jnp
cwde
jmp
arpl
mov
and
dec
repnz
xchg
ret
div
xor
xchg
mov
dec
xchg
ins
hlt
or
rcl
ss
or
and
mov
in
adc
cmc
outs
jno
cmp
xor
sbb
or
pop
out
inc
stos
pop
cmp
dec
inc
in
mov
jno
jmp
dec
mov
dec
test
add
jmp
scas
je
pop
icebp
test
xchg
sahf
mov
test
loop
popa
mov
pop
fwait
gs
and
test
jge
adc
inc
(bad)
cmp
(bad)
jns
jb
call
jmp
add
cmp
ss
mov
mov
inc
mov
add
sahf
mul
repnz
scas
ja
les
jae
clc
ja
in
lock
push
or
push
lods
xchg
div
pop
iret
(bad)
stc
fld
data16
stos
sbb
sbb
pop
push
outs
rcl
and
mov
enter
das
cmps
fstp
push
cmp
xor
cmp
pop
pusha
mov
pop
mov
lods
or
push
push
hlt
loop
stos
iret
pop
in
jnp
mov
fadd
aas
mov
mov
mov
out
cmc
popf
(bad)
pop
jno
test
push
add
rcl
lahf
mov
aam
(bad)
sub
inc
rol
sbb
inc
sahf
xor
push
mov
mov
lock
out
jo
cld
pop
jo
and
sub
or
xchg
aas
lods
sub
pop
push
(bad)
stos
xor
mov
data16
leave
mov
pushf
pop
cmps
sub
nop
fisubr
enter
test
(bad)
xchg
or
inc
idiv
popf
rcl
inc
lods
(bad)
out
cmp
repnz
rcr
stos
push
sub
in
fcmovb
arpl
add
addr16
push
cmp
mov
cmps
add
jecxz
inc
pop
sbb
add
jle
ins
inc
fisttp
and
mov
inc
adc
in
cmps
and
add
test
jb
mov
or
mov
sbb
pop
in
mov
push
fs
fisttp
mov
ror
dec
lock
out
js
push
inc
sbb
pusha
cdq
jnp
outs
cmps
mov
cmps
push
call
push
pusha
and
adc
push
jge
mov
(bad)
adc
push
test
mov
add
pop
xchg
in
pop
(bad)
dec
inc
jbe
push
loope
mov
sbb
stos
mov
enter
stos
mov
xchg
push
pop
cmp
nop
scas
stc
push
loopne
scas
or
xor
(bad)
jecxz
rol
scas
adc
mov
xchg
mov
jecxz
adc
adc
adc
sub
fwait
ins
and
inc
gs
cmp
pop
or
fwait
mov
jnp
dec
std
rol
cdq
jmp
jb
enter
call
fnstsw
xchg
add
ffreep
inc
push
lods
fmul
jo
dec
sbb
cld
repnz
jmp
push
push
outs
mov
xchg
pop
icebp
aad
mov
inc
loopne
outs
jp
cmp
scas
outs
inc
mov
je
shl
fnsetpm(287
lahf
dec
mov
push
jge
dec
xchg
mov
out
es
mov
rol
loope
retf
or
addr16
loop
inc
loop
inc
(bad)
dec
aam
ss
fchs
pop
int
push
jnp
sub
mov
stos
mov
dec
aas
cmps
imul
inc
push
jg
cmc
inc
sbb
ss
pop
popf
das
fstp
movs
pop
xor
adc
or
lods
test
add
mov
(bad)
shl
mov
(bad)
jecxz
adc
fbld
sti
fcmovne
or
xchg
arpl
cld
jmp
out
aam
pop
mov
sti
xor
or
pusha
and
or
mov
retf
int3
popf
push
push
aam
sar
xchg
enter
pop
in
sbb
add
mov
mov
lock
addr16
fadd
js
mov
jnp
fld
icebp
push
pop
je
pop
retf
mov
fwait
fs
cmps
push
and
push
lods
fwait
mov
sahf
mov
aam
inc
jns
lods
cwde
outs
xlat
cs
add
repnz
fistp
js
dec
mov
inc
pop
jbe
sub
xchg
retf
cmp
cmp
sub
mov
jle
mov
xchg
ror
aam
mov
add
sbb
test
int
dec
lds
mov
aam
mov
dec
pop
in
xchg
fs
shl
icebp
out
ret
push
inc
mov
or
sub
(bad)
jecxz
enter
dec
mov
push
and
(bad)
mov
in
fmul
fucomip
sbb
ss
daa
loop
xchg
pop
retf
mov
sbb
or
std
mov
jmp
scas
(bad)
xor
mov
and
idiv
cli
fcmovne
xor
sbb
and
fdiv
pusha
inc
lea
daa
pop
test
pop
aaa
jno
xor
inc
es
mov
movs
(bad)
sub
clc
pop
clc
mov
xor
imul
and
scas
sbb
fadd
inc
xchg
stos
loope
pop
add
mov
pop
retf
out
jne
fwait
push
and
xchg
mov
(bad)
jp
sbb
or
xor
fdivr
cdq
xchg
aaa
shl
mov
push
dec
(bad)
repz
jns
shl
dec
mov
(bad)
mov
xchg
loopne
ja
pop
into
and
je
arpl
sbb
aas
shr
push
test
inc
fcmovnbe
mov
cwde
adc
retf
inc
mov
jbe
int
mov
mov
xchg
lahf
cmps
daa
xor
dec
inc
mov
repz
loop
in
push
fist
or
outs
fdiv
inc
xor
pop
mov
mov
jp
mov
lahf
aam
bound
out
das
imul
mov
sbb
mov
cmp
inc
fcmove
mov
xchg
and
jns
hlt
test
mov
lea
jmp
mov
mov
cmp
mov
adc
aaa
cli
fld
aaa
jo
pop
outs
movs
bound
jns
mov
les
(bad)
cs
ficom
fs
adc
add
adc
ss
scas
jno
sar
pop
movs
cdq
lea
inc
add
out
cli
mov
test
gs
sbb
sub
call
in
and
sti
lods
sub
lea
gs
movs
mov
lock
xchg
mov
jns
dec
fidiv
add
cld
fstp
sbb
and
or
mov
mov
scas
dec
add
mov
jp
jbe
ret
jo
xor
push
or
scas
movs
std
sbb
cmp
retf
mov
loopne
jb
test
sbb
je
mov
xchg
lds
xchg
(bad)
fld
push
ja
movs
std
bound
test
pushf
test
shl
sub
vmulsd
pop
pop
and
les
jge
pop
pop
imul
cmc
and
daa
mov
add
ficom
pop
mov
add
dec
arpl
shl
idiv
and
pusha
in
mov
pushf
mov
mov
jecxz
add
pop
mov
mov
clc
outs
inc
xchg
adc
stos
or
jmp
inc
inc
sbb
inc
daa
mov
adc
mov
ss
add
adc
lahf
or
push
xor
nop
test
adc
and
hlt
mov
fdivr
jns
cs
sti
dec
mov
stos
push
mov
xchg
jbe
sbb
mov
sahf
adc
out
stc
jmp
js
movs
pop
mov
jmp
int3
loopne
fimul
xor
das
mov
movs
mov
push
pop
int3
pop
fsubr
jnp
sti
push
addr16
cmp
and
push
and
imul
in
mov
inc
add
std
mov
sub
mov
mov
fwait
push
mov
lock
scas
int3
sbb
sbb
sahf
mov
and
mul
lahf
push
cmp
mov
add
cmps
pop
arpl
ins
and
fstp
popf
clc
or
push
cmc
aas
ds
cmp
addr16
outs
cmp
xchg
jno
xor
pop
fadd
add
lods
jo
mov
stos
pop
repnz
xchg
and
inc
xchg
stos
mov
or
mov
iret
repnz
out
jmp
push
lods
dec
sub
clc
(bad)
pop
lahf
xor
jle
cmp
test
bound
cmp
jns
lock
inc
aaa
mov
xor
sub
scas
das
(bad)
and
inc
jae
jo
mov
push
(bad)
aad
sbb
(bad)
mov
xchg
sti
jb
adc
test
test
adc
cmps
xchg
jne
push
sti
sahf
xchg
cli
inc
mov
pop
pushf
nop
xchg
gs
lock
dec
jmp
shr
aas
xor
cmc
jmp
lahf
sub
popf
ja
push
mov
push
retf
imul
arpl
(bad)
pop
and
aaa
sbb
jmp
adc
arpl
jp
retf
cmps
aaa
mov
push
pop
test
in
mov
movs
jo
mov
or
les
mov
mov
movs
sbb
cwde
mov
adc
adc
clc
int3
retf
aas
jbe
bound
inc
pop
bound
add
dec
sti
(bad)
sub
dec
and
add
arpl
ds
mov
clc
jge
fst
inc
into
movs
mov
ins
es
pop
fcomip
test
sahf
jmp
test
mov
cwde
outs
out
loopne
sub
out
add
arpl
ficom
dec
out
hlt
xor
mov
mov
scas
call
inc
cmc
hlt
aam
ficom
push
pop
addr16
sbb
mov
push
test
and
dec
in
retf
xchg
sbb
and
jo
pushf
setb
inc
adc
inc
mov
cmovb
mov
fst
add
outs
xchg
mov
div
nop
jne
jg
(bad)
fsubrp
pop
lea
sahf
test
clc
hlt
jecxz
dec
jmp
push
fwait
jne
xor
daa
shl
ret
sub
cmp
sbb
ss
mov
jle
mov
gs
stc
and
ss
jp
push
or
cdq
jl
xchg
test
dec
fdiv
mov
bnd
and
jle
stos
add
or
jp
cli
movs
mov
(bad)
addr16
mov
xor
std
hlt
inc
jge
mov
push
stc
inc
and
fdiv
add
cmp
push
push
mov
and
rcl
cmp
std
or
inc
cld
and
fwait
sbb
movs
ja
xchg
sbb
lods
xchg
sub
pop
jl
fisub
lock
mov
sub
mov
xor
je
shr
stos
mov
gs
xchg
shr
mov
ds
test
jbe
addr16
adc
fdivr
inc
pop
cmp
shl
lahf
cs
pop
scas
mov
mov
cmc
jge
shr
rcr
push
jmp
and
adc
fld
or
sub
test
and
fld
retf
inc
test
mov
jge
scas
adc
fwait
popa
pop
retf
cmps
icebp
sub
out
adc
xchg
cmc
cs
(bad)
stos
into
in
pop
sahf
mov
jnp
push
pop
adc
rol
popa
mov
inc
and
pushf
xchg
mov
out
in
das
cmps
retf
add
sub
push
adc
xor
sbb
pop
mov
jg
mov
or
jle
idiv
inc
pop
jnp
shl
popf
jbe
fwait
push
jno
pop
xchg
dec
push
cmps
mov
sbb
push
popa
loop
inc
sti
dec
rol
push
xor
in
inc
dec
jns
mov
xor
jge
stos
nop
xchg
dec
sub
jns
in
jge
shl
push
cmc
adc
pop
and
pop
stos
jne
jo
movs
inc
sub
add
and
call
jle
pop
jo
mov
cmp
cmps
pop
xor
loop
jp
inc
test
mov
xor
jecxz
shl
push
xchg
mov
clc
sbb
or
fdiv
inc
jl
mov
inc
and
xchg
mov
adc
(bad)
push
icebp
jle
jnp
mov
cmp
clc
js
pop
xchg
call
or
cmp
je
shl
fnsave
rcr
out
xchg
sub
fsubr
push
cwde
inc
outs
mov
xlat
xchg
int
push
push
mov
push
sub
sti
xlat
pop
lahf
inc
dec
sbb
sub
mov
mov
jnp
mov
call
and
mov
inc
inc
movs
jb
sbb
mov
or
cli
mov
cmc
inc
inc
inc
mov
push
mov
cwde
sbb
test
jmp
mov
pop
mov
loopne
nop
in
mov
in
mov
sub
in
fistp
add
das
mov
add
ins
(bad)
mov
inc
ret
jo
xor
pop
adc
sbb
mov
sub
add
rcr
adc
dec
push
pop
sar
mov
movs
imul
ror
mov
jne
call
mov
pop
push
mov
ins
cld
sbb
cmp
fcmovnu
jo
aaa
pop
sub
cs
push
nop
fnstcw
inc
(bad)
or
pop
out
imul
fwait
xor
or
dec
add
test
inc
popf
in
mov
mov
sbb
(bad)
fdivr
xor
jecxz
sub
loope
sub
dec
hlt
sahf
cwde
out
xchg
mov
mov
and
sar
scas
ficom
das
(bad)
sbb
jl
xor
cwde
push
sbb
sti
push
aas
pop
mov
pop
iret
sar
xchg
inc
pop
addr16
retf
ja
js
pop
xchg
and
or
cs
mov
sub
mov
xchg
hlt
pop
jmp
outs
xlat
and
lahf
repz
sub
repz
mov
pop
ins
mov
cli
out
clc
cli
inc
push
je
push
sub
iret
lods
dec
iret
cmp
sbb
mov
xchg
retf
rcl
sbb
pop
add
jnp
mov
adc
push
retf
jg
pop
jnp
pop
and
xor
fwait
not
xor
cmp
sbb
mov
std
mov
dec
stos
int
fs
jo
pop
test
inc
mov
enter
fcomp
icebp
ficom
jb
sbb
fwait
xor
inc
jge
outs
push
pop
mov
daa
scas
sbb
bound
bound
pop
sub
mov
or
sbb
ins
inc
mov
ja
cmps
cmps
imul
ds
fcom
repnz
outs
js
pop
icebp
shl
mov
cmps
push
adc
pop
mov
inc
inc
xchg
mov
adc
(bad)
jmp
(bad)
jmp
aas
or
(bad)
dec
into
add
jle
cs
inc
div
lgs
leave
(bad)
fcmovnbe
jg
ror
push
js
mov
xor
sub
loop
(bad)
jae
pop
jb
jb
stos
push
push
call
cs
leave
mov
xchg
xchg
jecxz
ret
pop
mov
in
cld
mov
sub
lahf
mov
xchg
dec
arpl
mov
dec
mov
pop
cmp
repz
sbb
jp
ins
dec
adc
xchg
mov
mov
aas
aad
test
push
inc
cmc
and
push
jne
out
push
mov
fst
fidiv
retf
mov
dec
loope
mov
leave
dec
push
and
xor
mov
or
mov
mov
mov
mov
cs
jmp
inc
scas
aam
fwait
inc
mov
sub
fimul
jnp
inc
(bad)
adc
or
pushf
push
sub
inc
fwait
aam
pushf
pop
sbb
or
pop
ss
adc
adc
lock
scas
cmp
mov
push
cs
(bad)
retf
mov
loopne
js
mov
pop
mov
jmp
push
(bad)
aam
jbe
pop
movs
mov
inc
jp
enter
(bad)
repnz
retf
and
xchg
inc
jmp
mov
jo
or
jnp
mov
pop
inc
mov
pushf
nop
mov
shl
daa
mov
adc
xor
loop
enter
dec
mov
fs
clc
pop
cmp
out
scas
not
jl
jle
jae
scas
jmp
push
loope
or
ror
test
sbb
cs
xlat
fisttp
jmp
push
lds
add
cli
retf
rol
sub
dec
pop
fwait
pop
add
mov
add
pop
call
jne
retf
push
ds
rcl
movs
dec
and
mov
(bad)
int3
(bad)
pop
retf
rcr
pusha
lds
mov
and
fcom
cs
inc
mov
jg
mov
(bad)
adc
leave
mov
in
sub
scas
dec
pop
ror
pop
pop
gs
push
pop
xor
nop
movs
mov
inc
jmp
push
and
inc
cs
add
push
pop
adc
xor
rcl
in
xchg
add
pop
push
jo
jl
fwait
lds
shl
hlt
ret
rcl
xchg
in
mov
mov
xor
add
xchg
push
(bad)
sub
xchg
into
and
cmp
or
ss
daa
mov
es
xchg
mov
cmps
push
out
jnp
hlt
arpl
hlt
xor
fwait
es
ja
sbb
pop
and
push
adc
(bad)
shl
shl
sub
push
sti
fmul
pusha
xchg
rol
sbb
in
push
lea
mov
pop
mov
loop
scas
scas
popf
pop
jp
mov
or
xor
shl
pop
nop
inc
jg
jns
or
pop
push
cmc
(bad)
rcl
xchg
shl
test
jp
push
dec
jmp
ins
pusha
cmp
xor
jle
fsubr
lods
adc
xchg
jg
fstp
aam
pop
je
pop
test
cdq
push
jmp
les
mov
jge
mov
(bad)
cdq
rol
cmp
imul
shr
je
add
sub
push
xchg
jae
inc
mov
cmp
sbb
jmp
sbb
add
jnp
xor
pop
jo
push
aas
mov
dec
repz
stos
jne
sub
and
(bad)
inc
in
popa
jge
ins
add
pop
mov
test
mov
mov
cmc
or
outs
repnz
mov
mov
mov
aas
rcl
imul
xchg
push
xchg
pop
(bad)
and
iret
ss
outs
mov
arpl
mov
aam
popf
aam
xchg
fisttp
pop
jle
mov
daa
mov
rcl
jb
mov
fs
xchg
cmps
adc
cmp
out
xor
pcmpgtd
jnp
out
imul
mov
test
pushf
stc
sub
push
pop
cmps
add
stc
in
pop
scas
mov
push
add
rcr
jmp
int3
inc
ja
push
mov
xor
push
xchg
(bad)
imul
and
sbb
cmp
jl
xor
enter
outs
pop
mov
cmps
cmp
and
shl
repnz
jo
mov
inc
jecxz
mov
lock
add
adc
inc
lods
fwait
mov
push
fwait
or
jns
mov
or
out
(bad)
jg
xor
pop
sub
(bad)
xor
or
adc
stc
dec
pop
adc
adc
xchg
pop
mov
stos
sbb
pop
adc
mov
(bad)
stos
and
int3
add
movs
pop
popf
mov
xchg
pop
sar
xchg
je
dec
mov
mov
push
mov
jmp
(bad)
dec
xchg
and
pop
xor
jnp
dec
or
fadd
jne
popf
dec
or
lds
dec
fcmovbe
cmp
retf
fs
js
int
fs
push
add
(bad)
sbb
(bad)
aas
jg
cwde
mov
sbb
adc
dec
pop
popa
nop
jl
xchg
sub
pop
in
mov
xchg
or
jns
cli
lea
mov
xchg
retf
fisub
(bad)
aad
leave
ja
or
push
les
aas
fs
xchg
xor
push
sahf
(bad)
test
sar
or
jb
aas
mov
cmp
and
dec
push
add
adc
pop
xor
pop
std
cmps
cdq
add
jge
js
dec
std
call
jmp
jb
jge
scas
mov
pop
stos
add
or
fcom
and
cmps
dec
hlt
dec
hlt
daa
sub
js
or
sbb
cdq
jo
add
cmp
(bad)
jmp
mov
add
inc
sub
mov
aaa
std
popa
arpl
inc
xchg
(bad)
sbb
data16
push
ret
xchg
mov
repz
adc
out
cmp
mov
fild
or
addr16
pop
sub
sub
inc
pop
jle
sbb
cmp
push
call
jle
idiv
xchg
int3
sbb
push
fimul
addr16
pop
stos
jle
mov
sets
cmp
test
jl
fsub
mov
cmp
in
xor
out
ss
sbb
sar
mov
into
leave
lock
ret
and
cmps
dec
retf
or
and
sahf
adc
cmp
dec
mov
inc
mov
movs
int3
sbb
cld
push
(bad)
xor
retf
jb
mov
sub
adc
adc
js
mov
pop
jmp
in
test
xchg
sar
jnp
pop
stos
jo
mov
jnp
jmp
(bad)
fcomip
jno
pop
mov
call
pushf
xchg
addr16
(bad)
xchg
cmc
loope
arpl
in
pop
adc
mov
and
pop
add
ins
mov
add
xchg
movs
pushf
push
or
sub
inc
(bad)
and
xor
sahf
or
mov
push
call
jmp
pop
jnp
pop
movs
pop
repz
loope
loope
sti
push
shl
mov
loope
stc
cmp
cmc
and
stc
movs
lock
js
sbb
pusha
lock
outs
fistp
inc
cs
push
sub
mov
int
or
popa
jecxz
add
jmp
lea
jg
ins
xchg
sbb
fldenv
(bad)
sbb
jle
push
lods
pop
xlat
into
shl
call
rcr
or
mov
mov
rol
enter
lea
cmp
shr
repz
push
jnp
arpl
dec
pop
inc
out
mov
cwde
adc
cld
and
rcr
jbe
dec
sbb
and
sahf
jns
mov
dec
mov
sub
in
xchg
fwait
mov
dec
je
cmps
jnp
les
push
xlat
stos
add
int3
hlt
pushf
adc
jp
cmp
mov
test
xchg
stos
push
clc
jb
or
xor
retf
popf
and
and
jbe
jbe
outs
in
movs
lahf
scas
aaa
add
fs
inc
dec
push
cmp
xor
aas
sub
and
inc
pop
test
aas
mov
push
fidivr
out
inc
and
xor
mov
inc
lds
jno
dec
fwait
mov
imul
xchg
add
icebp
aad
adc
inc
xlat
sbb
push
retf
and
ins
sbb
imul
cmp
sbb
add
push
and
das
shl
scas
imul
adc
mov
cmp
repnz
cwde
ret
inc
push
inc
(bad)
xchg
(bad)
dec
in
in
in
pop
aaa
enter
in
scas
clc
stos
fsub
outs
jae
shl
int3
idiv
pop
fwait
mov
dec
pop
pop
enter
shl
push
and
xor
movs
xor
mov
sbb
inc
fsqrt
or
fimul
push
inc
add
inc
sub
xchg
pop
iret
add
sbb
or
test
out
xchg
or
int
pushf
push
retf
pop
mov
mov
adc
dec
test
js
xchg
cwde
out
outs
add
shr
stos
mov
or
sub
mov
pop
iret
adc
dec
fstp
sbb
inc
sub
mov
mov
in
sar
mul
pop
pop
in
pop
adc
pop
xchg
or
mov
jg
mov
pop
sbb
dec
test
sbb
jge
and
pop
mov
test
cmc
hlt
add
inc
sti
pushf
fld
dec
mov
xchg
arpl
loop
mov
mov
xor
jg
sbb
push
call
and
or
test
add
cs
cmps
adc
mov
sbb
add
inc
adc
addr16
shr
adc
adc
jno
retf
fwait
in
inc
cmc
jnp
inc
xor
loope
cmps
rol
push
(bad)
mov
mov
add
cmp
stc
cmps
shl
jp
mov
cmp
imul
cld
jmp
sub
mov
pop
cmp
mov
aaa
clc
inc
jmp
add
xor
sbb
out
jbe
dec
sbb
sub
mov
xor
aaa
jl
neg
les
pop
ins
mov
cmp
popf
add
pop
sti
test
lds
mov
mov
pop
retf
icebp
cmp
cmp
fld
sub
test
and
mov
push
cmp
xor
les
push
sub
and
cld
dec
push
scas
jae
xchg
xchg
mov
jmp
mov
jecxz
jae
(bad)
pop
cdq
(bad)
loope
call
mov
jmp
fadd
inc
inc
lea
(bad)
mov
mov
dec
jecxz
scas
ss
rol
jns
aaa
bound
xchg
xchg
dec
popf
int
test
nop
jmp
cmp
mov
and
mov
mov
cs
clc
mov
ror
div
jno
ins
xlat
(bad)
repnz
cmps
pop
jmp
ins
lds
mov
in
fdivr
sahf
fimul
lods
fdivr
push
pop
xchg
pushf
ins
shr
push
push
retf
lds
sbb
jae
inc
cmp
mov
sub
jnp
loope
adc
(bad)
cmp
add
lods
push
mov
setns
call
mov
out
popa
jle
xor
nop
aad
and
adc
xchg
dec
pop
in
nop
das
icebp
adc
xor
jl
xchg
fiadd
lods
mov
shl
cmp
xor
fcmove
push
iret
add
cmp
mov
pusha
push
mov
jb
mov
mov
sti
imul
addr16
jae
jno
mov
jl
push
(bad)
or
sbb
add
out
lods
stos
xor
popa
(bad)
cld
test
ror
mov
(bad)
(bad)
jle
in
outs
out
dec
push
in
cmps
or
push
mov
pushf
jnp
movs
mov
sbb
mov
xchg
mov
push
pop
push
(bad)
jmp
pop
or
sbb
js
inc
pop
mov
in
jl
aam
je
pop
out
daa
sbb
aas
lahf
sub
jns
add
mov
sub
call
jge
sbb
pop
cmps
push
in
and
loope
rol
or
push
push
mov
cld
and
mov
cwde
inc
dec
in
fldcw
cmc
dec
jmp
sbb
push
cs
repnz
(bad)
add
and
cmp
or
mov
xchg
cmp
pop
gs
or
sbb
(bad)
aad
ins
ds
xchg
adc
inc
data16
inc
mov
mov
hlt
mov
pop
mov
mov
mov
jbe
scas
ror
hlt
fdivr
sbb
sahf
xor
jle
cmp
scas
push
out
aaa
pop
or
sub
cmp
xchg
stos
mov
pop
hlt
(bad)
icebp
inc
dec
jbe
les
popf
push
mov
mov
jno
retf
sbb
fst
mov
inc
jb
push
jmp
jl
mov
mov
jecxz
mov
push
jnp
fwait
mov
clc
mov
sbb
stc
pop
cmp
int
mov
in
sbb
cmp
mov
outs
xor
int
ds
sahf
icebp
add
fstp
ja
mul
push
pop
push
popa
mov
inc
inc
mov
pop
jmp
mov
dec
sbb
loop
out
mov
arpl
lds
clc
jle
into
xchg
xchg
pop
sbb
cld
xchg
jne
jl
(bad)
fcomi
adc
popf
xor
loopne
xchg
lods
xchg
stos
fiadd
jbe
push
aaa
dec
sbb
addr16
pusha
jge
dec
pop
dec
out
int3
test
inc
jmp
pusha
dec
arpl
mov
push
push
xchg
add
sbb
push
add
mov
cwde
scas
mov
jmp
(bad)
fadd
shl
int3
icebp
mov
hlt
jnp
xchg
xchg
dec
fmul
cmps
shr
aam
aas
pop
mov
std
sbb
mov
scas
sub
and
(bad)
inc
push
xchg
xor
mov
or
pop
xchg
shl
mov
push
fld
imul
fsub
add
xor
into
mov
sbb
js
out
inc
shr
jmp
(bad)
stc
pop
mov
mov
xlat
fcomp
mov
movs
(bad)
out
add
jmp
je
adc
xor
ss
fs
mov
bound
dec
pop
push
stos
mov
lods
inc
push
out
pop
ret
lahf
loope
push
push
add
mov
mov
dec
or
stc
push
retf
mov
sti
inc
pop
inc
lods
jno
xchg
lds
fst
xor
sar
sti
mov
pop
jecxz
mov
ds
rol
xchg
inc
fld
push
pop
inc
mov
stos
arpl
add
cmp
push
daa
or
mov
enter
cmp
adc
and
sbb
and
adc
push
ss
pop
mov
or
shl
in
inc
jno
push
mov
movs
adc
cwde
jbe
in
icebp
xchg
sub
cmps
repz
dec
jns
fimul
std
loop
dec
popf
mov
sbb
dec
loope
stos
jp
xor
dec
mov
push
or
push
int
fdivr
cmp
push
jmp
rsm
psubsw
fild
mov
pop
in
test
pop
push
xor
aam
and
inc
pusha
(bad)
jno
mov
xchg
inc
std
mov
xchg
and
in
inc
scas
dec
jl
nop
lods
push
sbb
jecxz
test
ins
outs
popf
fisubr
ficomp
es
enter
dec
mov
dec
sub
fwait
mov
cmp
sbb
mov
bnd
dec
add
cdq
or
add
or
mov
mov
inc
push
jno
hlt
xchg
and
push
mov
inc
mov
test
mov
cli
test
cmp
mov
xchg
repz
in
mov
sub
repz
jnp
and
push
mov
ins
push
jp
lahf
lahf
adc
rcr
rol
pop
fild
or
sub
int
pusha
test
mov
mov
int
test
enter
inc
inc
fstp
pushf
lock
mov
popf
jae
out
sti
mov
mov
movs
movs
cmps
jl
lock
fcomip
dec
adc
mov
lea
or
pavgw
int
stc
cmp
jge
cmp
dec
cli
inc
and
sub
mov
push
jno
xor
cmp
and
pushf
add
inc
popf
inc
sub
cmp
sbb
cmps
mov
int
fsubr
dec
mov
push
cld
cmps
pop
hlt
mov
out
sti
mov
call
add
sbb
retf
repnz
pusha
push
lods
scas
inc
jmp
shr
pop
dec
xchg
call
jp
ins
xchg
or
das
xchg
pop
xchg
mov
test
and
dec
std
sar
rol
pop
out
add
push
ss
xor
sub
dec
inc
fst
mov
outs
call
xor
mov
adc
jl
mov
inc
stc
ins
sbb
ja
jecxz
sub
push
test
fcomp
loopne
hlt
xor
fcmovb
mov
stc
pop
jle
fbld
dec
std
sbb
dec
rcr
jmp
lods
cmp
jbe
push
and
xor
mov
es
aaa
jmp
imul
xchg
cmp
push
cmp
jle
icebp
mov
adc
test
mov
pop
jecxz
test
clc
add
movs
lods
and
dec
movs
call
movs
mov
cwde
out
jmp
in
clc
cs
imul
daa
pop
jae
dec
and
push
push
lods
pop
shl
jno
loopne
push
sbb
fstp
sub
and
mov
push
mov
push
cmp
retf
mov
add
push
add
jp
mov
mov
sub
div
test
inc
mov
(bad)
(bad)
cmps
out
sbb
rcl
inc
cmp
xchg
call
aaa
cmp
outs
sub
mov
dec
sub
pop
loopne
or
cmp
ss
sbb
or
sbb
aas
push
in
cmps
adc
cli
fwait
cmp
into
inc
jecxz
arpl
popa
fidiv
stos
dec
in
xchg
gs
xchg
dec
mov
mov
bound
rcl
mov
es
ficomp
outs
enter
(bad)
scas
jg
ss
add
adc
std
outs
or
mov
into
dec
rcr
stos
lock
inc
out
imul
jg
dec
pop
test
cmps
and
mov
in
leave
movs
xor
xor
gs
test
cmp
push
fimul
test
rcr
cmps
in
lods
jp
popf
mov
pushw
aam
mov
(bad)
imul
int
and
push
call
jne
scas
inc
pop
jg
test
cdq
and
into
inc
ret
stos
fdivr
sub
and
jl
xchg
pop
mov
leave
sbb
pop
xchg
das
push
test
jle
jbe
call
loope
push
div
test
rcr
mov
dec
inc
xchg
mov
(bad)
loopne
ins
mov
mov
pop
das
into
shr
push
clc
push
pop
or
xchg
sbb
aaa
cmp
mov
sbb
inc
sbb
jb
inc
in
push
or
daa
mov
pushf
cs
inc
lea
mov
push
test
mov
out
mov
leave
pop
sbb
mov
jecxz
mov
xlat
stos
dec
cmc
xor
scas
add
lea
out
cmps
rdpmc
jmp
inc
jns
aam
call
(bad)
fbld
inc
add
inc
lods
cmp
retf
adc
addr16
adc
lds
adc
pop
mov
in
adc
js
mov
dec
mov
mov
sbb
leave
call
push
sbb
lods
jae
pushf
ret
inc
mov
add
retf
dec
xchg
mov
jg
mov
repz
push
out
xor
adc
jecxz
int3
push
repz
imul
pop
test
hlt
pusha
retf
test
outs
fs
aas
ficom
push
push
mov
fst
mov
jle
(bad)
mov
fxch
call
xchg
in
pop
shl
addr16
jge
mov
sbb
fsubp
jmp
(bad)
xor
pop
pop
xchg
test
xchg
fdiv
dec
dec
jmp
dec
out
sti
and
ffreep
retf
sub
ins
inc
pop
sti
push
or
lods
inc
enter
xchg
push
pop
jno
aam
cmp
sub
jge
nop
pop
inc
lea
outs
jmp
int
call
ins
pop
mov
repz
dec
xchg
jmp
pop
dec
out
test
mov
jb
ret
lods
sbb
mov
test
mov
and
xchg
div
daa
cld
push
push
aas
jp
push
sbb
mov
add
ret
mov
push
(bad)
and
and
add
cmp
fmul
mov
bound
es
stos
add
bound
sub
movs
ins
ret
and
stos
mov
fcomp
stc
mov
aaa
nop
dec
pop
xchg
(bad)
cmp
loop
icebp
in
jl
fidiv
fcom
push
adc
sti
fst
dec
or
es
xor
and
jmp
retfw
mov
sbb
and
add
cmp
sub
aaa
lock
ja
je
mov
pusha
fwait
xchg
mov
fxch
cmps
aaa
retf
fdivr
dec
lahf
imul
fisub
mov
dec
in
pop
adc
call
or
cmps
out
bound
les
mov
(bad)
aaa
cmp
not
jbe
cmp
arpl
push
mov
dec
sub
dec
call
inc
sbb
sbb
icebp
add
fldenv
mov
push
nop
xlat
xchg
add
(bad)
movs
and
pop
cmp
dec
test
call
neg
cmp
jl
(bad)
cmc
stc
into
xchg
(bad)
mov
push
sub
add
cmp
cwde
dec
and
(bad)
iret
mov
rcr
mov
pop
loopne
push
adc
and
inc
js
jg
mov
mov
sbb
test
call
sbb
push
test
mov
cmps
bound
jmp
gs
(bad)
mov
call
inc
(bad)
jmp
cmps
dec
idiv
xor
jl
pop
jns
fstp
push
pop
xor
ins
in
shr
clc
cli
jnp
(bad)
jp
inc
sbb
inc
ins
inc
adc
pop
lahf
and
sub
or
test
cld
xlat
call
addr16
dec
(bad)
movs
sti
dec
mov
cwde
pusha
pushf
xchg
pop
dec
cmc
jecxz
ja
pop
test
addr16
mov
(bad)
pop
mov
push
pop
sub
(bad)
(bad)
jg
pop
jle
dec
test
outs
sub
lods
ret
mov
or
jmp
ret
ficomp
dec
pop
in
ja
and
sbb
mov
sbb
nop
call
mov
aad
pop
jns
lds
xchg
adc
out
sbb
clc
mov
xchg
pusha
xchg
mov
fs
repz
repnz
xchg
mov
ficomp
pop
sbb
lock
xor
cmp
mov
inc
in
mov
fsubr
xlat
pop
xchg
mov
popa
js
(bad)
inc
ss
cmp
adc
sub
aas
add
movs
adc
jmp
sub
push
retf
sahf
aad
mov
pop
or
loope
pop
ror
loope
in
mov
mov
scas
scas
xchg
fmul
inc
fild
jecxz
sti
xor
pop
xchg
add
xchg
mov
dec
and
call
and
xor
and
ins
push
(bad)
jg
mov
lea
push
adc
call
retf
pop
mov
jnp
std
xchg
push
add
retf
mov
(bad)
sbb
test
lahf
(bad)
mov
sbb
rcr
xchg
add
lods
push
sbb
mov
rcl
inc
pop
popa
fidiv
inc
jle
dec
adc
or
sar
cmc
jge
retf
dec
dec
push
pop
fistp
aas
imul
jno
sbb
sahf
adc
sub
(bad)
stos
pop
cmp
mov
lds
push
mov
mov
xchg
loop
pop
(bad)
rcr
cmp
jmp
mov
xchg
sbb
jmp
mov
xlat
sub
enter
retf
cmp
sub
pop
cmps
pop
xor
lods
or
mov
sahf
out
pop
bound
iret
or
add
fdivr
mov
inc
(bad)
mov
(bad)
les
push
gs
fldcw
mov
mov
cmp
imul
mov
jge
loope
mov
stc
ret
adc
xchg
retf
daa
shl
retf
push
retf
sub
jbe
test
arpl
and
xchg
les
out
(bad)
das
xor
inc
pop
aas
retf
add
fwait
pop
mov
mov
add
sbb
out
lods
xchg
js
pusha
jb
and
retf
and
jl
jmp
mov
gs
mov
mov
xchg
mov
scas
xor
repz
adc
ss
inc
inc
pusha
(bad)
sbb
mov
xchg
cmps
mov
loope
or
cmp
inc
cwde
aas
fcomp
fcomp
lahf
dec
inc
xchg
xchg
stc
pop
inc
dec
cmp
clc
test
stc
jne
(bad)
fmul
sbb
mov
loop
std
xchg
pop
adc
(bad)
or
test
mov
cmp
cmp
lea
je
jns
or
cmp
mov
jns
mov
fisttp
and
fs
mov
pushf
sub
js
nop
addr16
popf
aaa
jge
xchg
mov
mov
retf
xor
clc
inc
jmp
cmps
fstp
(bad)
cmp
stc
mov
in
push
stos
xchg
das
mov
scas
and
test
dec
lea
leave
xor
adc
in
and
adc
and
inc
sbb
(bad)
shr
fstp
aas
stos
ror
adc
jmp
sbb
and
xor
or
dec
dec
test
or
(bad)
sbb
and
mov
repnz
add
sub
mov
cmp
daa
xchg
fild
mov
retf
sub
pop
pop
mov
repnz
fidivr
jne
adc
adc
fsub
push
call
lods
or
lods
pop
aaa
push
mov
push
out
(bad)
fdivr
xchg
push
ins
pop
xor
imul
and
sub
xor
sub
xchg
xchg
sub
push
and
fsub
add
inc
push
inc
fldcw
sbb
(bad)
mov
lea
call
sahf
xchg
arpl
les
xchg
popf
pop
aad
clc
inc
sub
int3
fucomi
push
fisub
popa
add
jnp
jo
dec
test
and
arpl
in
jno
div
push
xor
adc
adc
(bad)
sub
test
cmps
sub
jmp
or
and
imul
repz
mov
arpl
mov
out
cmp
popa
call
mov
fwait
mov
add
jecxz
xlat
retf
jno
vphadddq
adc
stc
mov
sbb
mov
push
mov
xchg
nop
mov
loopne
add
cld
inc
dec
jp
int
or
or
dec
fisub
aas
addr16
stc
lock
fisub
and
push
add
dec
mov
popf
pop
or
pop
xchg
mov
jnp
mov
fucomip
stos
fdivp
jns
in
fnsave
lds
and
int3
hlt
ror
sbb
push
mov
and
sbb
mov
sbb
and
jae
mov
jge
xchg
movs
aas
adc
and
jmp
je
ins
fldcw
mov
(bad)
fwait
add
in
mov
retf
pop
(bad)
lea
jno
movs
lods
sub
in
(bad)
es
mov
dec
pop
cmp
test
sub
adc
mov
push
cdq
mov
lods
dec
and
sbb
enter
inc
les
sbb
xor
or
test
gs
and
fdiv
bnd
inc
scas
jnp
mov
mov
push
mov
mov
mov
jl
cmps
xchg
cld
and
mov
arpl
mov
adc
push
fldcw
ja
imul
push
imul
fstp
push
xchg
test
pop
clc
adc
mov
mov
mov
xchg
inc
jne
mov
jnp
repnz
das
lods
out
gs
arpl
sub
mov
sahf
push
hlt
cdq
jnp
(bad)
pmulhw
xchg
dec
jo
leave
cmps
and
fsubp
bound
lea
outs
int
ds
xchg
neg
or
cmp
sub
cmp
int
dec
pop
test
fsubr
sub
or
fnsave
add
mov
jbe
adc
jnp
mov
jle
mov
jp
stos
mov
mov
pop
std
dec
jnp
lods
push
fiadd
test
sar
repz
push
sti
sbb
inc
std
out
lock
jmp
xor
outs
cmps
dec
add
fnop
std
imul
call
imul
std
jbe
(bad)
fild
out
inc
and
jno
jmp
(bad)
xchg
xor
call
sub
mov
and
jecxz
in
inc
inc
sar
mov
cwde
push
mov
add
sbb
xor
mov
xchg
(bad)
call
gs
push
leave
pop
sub
mov
aad
int3
adc
(bad)
sub
cmp
test
int
xor
sbb
aas
clc
add
mov
pop
push
or
xchg
or
mov
fdivr
mov
mov
test
jbe
dec
shl
mov
xor
retf
mov
movs
movs
loop
(bad)
jns
movs
call
out
lock
pop
mov
cmc
pop
push
es
into
shl
aaa
inc
pop
inc
fidivr
or
mov
(bad)
mov
cmp
dec
out
out
add
inc
mov
or
adc
jb
mov
mov
loope
sbb
jno
fmul
shr
pop
rcl
mov
jle
jmp
hlt
movs
xchg
adc
dec
scas
fwait
mov
dec
cmps
mov
cmp
xlat
fdiv
mov
enter
stc
out
mov
jp
mov
jo
ins
scas
cwde
cwde
retf
push
pop
out
test
sbb
xor
add
fcomp
dec
fnsave
xchg
cmp
nop
fsubr
int
loopne
mov
inc
loopne
inc
pop
mov
shl
int3
mov
push
sti
(bad)
jnp
pop
mov
pop
pop
loope
mov
iret
jecxz
(bad)
arpl
test
fisub
xor
(bad)
out
jb
adc
xor
dec
pop
je
mov
cmps
pop
in
bnd
ficomp
push
inc
ficomp
sub
xor
jae
add
(bad)
sub
(bad)
in
add
inc
enter
pushf
ret
inc
fldenv
cmp
pop
sub
pop
loopne
add
mov
mov
xchg
push
or
lock
(bad)
jnp
mov
or
call
push
xor
inc
sub
jmp
pop
aam
jmp
popa
and
or
add
mov
jle
rcr
mov
add
and
aaa
sar
aam
jp
mov
inc
in
xchg
dec
shl
sub
ja
sbb
gs
cmp
fadd
pop
lods
lods
push
xor
imul
xchg
imul
mov
push
cmps
push
jmp
jl
mov
adc
popa
icebp
push
shl
mov
dec
mov
imul
addr16
push
retf
ins
jge
test
mov
xchg
push
(bad)
out
pop
retf
aam
and
jns
std
mov
inc
mov
xchg
hlt
mov
sar
sub
mul
cld
fs
xor
jl
aaa
inc
and
jbe
jne
rcr
int3
add
push
aad
sub
mov
call
ss
inc
mov
mov
add
pop
(bad)
stc
loop
test
jnp
shr
and
xchg
jne
out
sub
rol
jmp
add
fisub
(bad)
jmp
cmp
aad
lock
aaa
sbb
xlat
fnstcw
adc
test
pop
inc
mov
mov
repz
ret
std
add
hlt
push
adc
cmp
sbb
add
sbb
dec
fmul
xor
sar
push
inc
push
popa
in
test
rol
inc
popa
inc
stos
dec
fstp
mov
call
jno
(bad)
mov
mov
mov
mov
(bad)
lods
shl
inc
dec
mov
fs
pop
stos
xor
lock
fstp
pusha
dec
fsubr
outs
mov
cwde
sahf
iret
xor
cmps
ins
push
jnp
mov
pop
sbb
es
jbe
lahf
pop
xchg
and
ins
jnp
jne
mov
mov
ins
loop
xchg
pop
xchg
mov
jnp
scas
arpl
into
sahf
jae
leave
mov
in
in
dec
sar
call
mov
scas
das
pop
stc
fisubr
scas
popf
push
in
shr
add
neg
aad
fiadd
and
or
xchg
jno
push
lahf
xchg
(bad)
fistp
ret
pushf
(bad)
bound
dec
(bad)
and
cmp
pop
stos
push
sub
lahf
sbb
add
(bad)
(bad)
ds
pop
fadd
popa
adc
test
out
popf
inc
out
add
les
mov
ret
outs
mov
(bad)
std
test
pop
dec
scas
call
psrld
jae
cmp
inc
pop
imul
stc
pop
fwait
mov
inc
mov
push
pop
cmp
sbb
mov
pop
sahf
aam
sbb
adc
enter
or
rol
gs
cmp
mov
mov
enter
mov
ss
mov
test
cmps
gs
dec
out
xor
dec
ficom
arpl
addr16
xor
jp
mov
call
mov
pop
popa
jb
iret
aaa
adc
and
add
fisubr
xchg
adc
cwde
mul
inc
cmovp
repz
pushf
jg
and
ins
call
mov
stos
ja
pusha
cmc
lods
mov
pop
mov
cmps
mov
mov
ret
popa
pop
scas
movs
dec
jmp
sti
enter
pop
es
push
fs
mov
or
imul
mov
adc
sub
adc
jne
xchg
dec
add
es
call
fnsave
jge
jl
dec
fnstenv
outs
ficomp
xchg
add
je
xchg
dec
cmps
xchg
xchg
xor
loope
xchg
repnz
cmp
ret
push
push
jmp
daa
fisubr
push
jbe
lea
pop
mov
mov
(bad)
in
xor
sub
or
add
mov
cmps
push
outs
stos
mov
arpl
pop
(bad)
stc
mov
in
pop
inc
fidivr
lods
mul
int
adc
shr
xchg
js
sbb
lock
stos
sahf
jne
sub
divps
(bad)
idiv
inc
jbe
outs
fist
jle
mov
xchg
jbe
cld
cmp
adc
pop
packssdw
and
xor
add
mov
cmp
mov
stos
mov
outs
push
and
jl
icebp
cwde
sbb
int3
in
cmp
sbb
xchg
mov
xor
(bad)
out
stos
retf
mov
enter
jmp
push
jns
pusha
fcomp
sbb
dec
lods
(bad)
iret
iret
dec
and
push
(bad)
fwait
retf
pusha
inc
add
fiadd
or
popa
xchg
pop
scas
cmp
dec
jns
js
cmp
popf
mov
nop
inc
mov
jnp
sbb
js
jb
rcr
jmp
mov
or
lds
cmp
mov
mov
scas
jecxz
jge
add
or
inc
fiadd
sbb
jp
pusha
add
stos
mov
adc
add
fnstsw
add
mov
add
or
or
or
xor
rol
pop
jnp
test
ret
xchg
shl
sbb
js
repz
xchg
xlat
cmp
cwde
xchg
xor
inc
jge
mov
adc
sbb
lock
pop
cmp
shr
sbb
push
sbb
out
mov
adc
jg
fild
cdq
sti
js
add
fld
adc
adc
sahf
or
mov
outs
mov
neg
xor
push
xor
ins
test
dec
mov
mov
and
fiadd
sti
fidiv
lods
ret
aas
stc
std
mov
mov
jns
push
call
int3
std
and
or
jp
xchg
inc
jae
inc
xor
xchg
push
or
mov
dec
ficomp
jmp
retf
inc
dec
mov
or
mov
pusha
fucomp
in
fwait
inc
js
push
cmp
(bad)
cmp
add
adc
in
sahf
dec
jne
mov
sbb
mov
cmp
xchg
sub
sub
mov
and
ins
inc
outs
mov
mov
mov
pop
enter
sbb
ja
retf
dec
push
sbb
jp
fdivr
movs
adc
and
sub
leave
rcr
loopne
fs
popf
pop
mov
popa
xchg
movs
inc
pop
out
mov
jnp
mov
jnp
mov
xchg
add
dec
in
fidiv
sub
cmp
inc
int
test
fstp
jl
arpl
push
pop
or
jmp
mov
cmp
xor
mov
jl
sahf
fs
cmps
xor
repz
fwait
sub
push
dec
enter
lahf
jmp
jo
xor
mov
call
jb
stc
out
push
clc
jne
mov
imul
mov
jmp
cwde
sub
pop
leave
push
or
into
sub
adc
idiv
push
xchg
fwait
mov
ror
ins
dec
xor
add
inc
add
and
mov
inc
xlat
cmp
sbb
push
push
loop
mov
fild
add
xchg
dec
dec
popf
inc
sar
repz
fnclex
push
mov
mov
and
jecxz
pop
jmp
inc
call
mov
inc
icebp
dec
push
jns
or
test
les
ret
pinsrw
pop
pop
inc
mov
mov
scas
ss
ins
adc
and
stos
xchg
aaa
cmp
fsub
xor
pop
test
sahf
inc
in
xchg
imul
pop
and
mov
movs
cli
ffree
pop
fwait
jns
mov
repnz
loopne
sbb
out
or
ss
icebp
jnp
xor
or
mov
stos
int
cmp
xlat
sbb
out
pop
mov
add
gs
rol
push
and
dec
inc
lods
pop
xor
stos
cmp
and
iret
hlt
mov
xchg
lea
jbe
mov
popf
frstor
aad
sbb
test
jmp
outs
mov
test
xchg
xchg
sbb
enter
xchg
sub
push
retf
cmp
out
std
and
adc
jno
add
pop
test
mov
push
aad
stc
retf
push
xchg
jmp
cmc
sbb
jne
mov
int3
add
sbb
pop
sbb
xchg
add
sbb
fidiv
jne
mov
jae
repnz
pop
into
cld
jle
enter
jmp
xchg
mov
repz
rol
dec
mov
inc
sbb
pop
popf
and
mov
push
popa
in
sbb
mov
push
hlt
pop
pushf
leave
jl
rcr
xor
sub
jae
cmp
dec
je
dec
and
and
sahf
xor
push
dec
sbb
int3
mov
push
xchg
sar
cwde
xor
mov
mov
xor
push
in
mov
in
iret
dec
and
jmp
add
push
fld
jp
xor
outs
call
sbb
fs
cmp
pop
neg
adc
and
jle
xchg
xchg
mov
pop
enter
shl
cld
push
jnp
mov
sbb
test
mov
push
mov
lods
or
data16
cmp
mov
mov
push
shr
mov
rcr
cmps
ss
jg
or
sbb
xchg
mov
icebp
adc
jle
jno
test
sahf
xchg
mov
or
push
repnz
push
enter
push
inc
fistp
sbb
arpl
inc
adc
outs
xchg
cmps
mov
aas
push
inc
(bad)
and
(bad)
(bad)
dec
dec
inc
pushf
jnp
call
mov
mov
pushf
(bad)
dec
scas
sbb
cmps
ret
push
mov
jmp
stos
pop
add
into
shl
jnp
es
pop
mov
outs
push
dec
lods
mov
out
jnp
ret
xor
and
pop
or
aas
xchg
pop
lea
jmp
aaa
xchg
(bad)
push
pop
xchg
fucom
cmp
arpl
mov
gs
sahf
dec
(bad)
mov
mov
int3
pop
mov
ret
out
mov
pop
out
ret
mov
xchg
pushf
outs
out
jo
or
out
fmul
push
rcr
cmp
dec
add
lds
jg
fidiv
test
dec
loope
sbb
xor
popa
inc
test
nop
xchg
std
imul
xor
jns
ror
ret
xchg
in
mov
mov
pop
push
lds
mov
cmp
mov
aas
and
xchg
mov
adc
xor
repnz
daa
call
fnstsw
imul
mov
mov
int3
ret
fadd
push
and
and
loop
xchg
das
repz
xchg
jnp
lea
call
sbb
pusha
pop
jbe
pop
ret
pop
cwde
xlat
xchg
jno
mov
repz
imul
pop
pop
mov
lods
adc
jecxz
(bad)
cdq
pop
pop
mov
out
inc
cmp
jmp
rol
xor
bound
outs
ss
test
fisttp
retf
mov
push
add
add
inc
sbb
stos
push
mov
stos
jl
mov
lods
push
add
adc
retf
jmp
retf
ins
mov
loopne
(bad)
push
mov
mov
(bad)
sti
mov
mov
inc
test
fnstcw
mov
rcr
sub
xlat
shl
pop
fidiv
jle
jnp
pop
sbb
mov
(bad)
xchg
scas
cmp
imul
mov
loopne
pop
pop
inc
cli
add
imul
push
retf
push
inc
fmul
sub
idiv
test
or
sbb
mov
pop
mov
test
(bad)
out
and
push
mov
cmp
popf
jmp
pop
enter
xchg
mov
scas
daa
pop
aaa
clc
mov
jns
pop
push
sbb
inc
cmp
inc
out
mov
pop
xchg
stc
sub
fsub
pop
sbb
inc
add
das
retf
xor
dec
ins
sub
adc
mov
ins
cmp
jge
fstp
leave
fs
mov
inc
mov
jmp
sar
(bad)
mov
mov
cld
ret
call
lea
xor
lock
ret
ds
dec
jo
jns
ins
mov
add
pop
stc
shl
int
arpl
(bad)
cmp
inc
cs
jecxz
mov
mov
inc
nop
jb
test
js
mov
pop
call
xlat
jnp
jg
jno
push
cdq
scas
hlt
jl
out
jo
cdq
or
lea
xchg
cli
test
or
add
xlat
mul
mov
in
or
push
stc
mov
inc
sti
sbb
popa
mov
outs
pop
imul
iret
movs
retf
pop
ins
inc
inc
retf
imul
ins
push
sahf
jae
adc
ins
inc
cmp
lods
test
test
jle
cmps
dec
rcl
sti
inc
fnstsw
or
pop
mov
mov
sahf
cmp
xor
pop
mov
cmc
adc
cli
cli
fnstcw
pushf
and
cmp
fsubr
push
clc
push
or
cdq
xchg
lea
or
pop
sti
fdiv
xchg
fmul
jo
add
and
jge
jl
cmp
sub
gs
xor
cmc
movs
sbb
jns
cmp
inc
test
sbb
mov
repnz
(bad)
retf
cmp
mov
daa
(bad)
cli
mov
jmp
push
shl
pop
cmp
out
jo
sbb
add
push
and
popf
lea
cdq
mov
pop
mov
cmp
adc
or
xchg
inc
inc
fwait
xchg
mov
add
cmp
cld
mov
mov
inc
pop
mov
xor
ret
pushf
cld
jl
repnz
adc
imul
mov
loopne
std
cli
popa
dec
sahf
lods
push
aam
cld
das
es
jmp
(bad)
or
push
jle
add
jbe
push
cmp
jmp
push
fst
js
into
push
push
jb
mov
mov
push
mov
push
mov
xchg
sbb
aad
or
mov
pop
push
jo
imul
sar
loope
inc
retf
test
xchg
sub
pop
add
pop
sahf
mov
add
aad
mov
jmp
bound
hlt
cmp
push
lock
adc
popa
push
dec
mov
mov
add
fstp
xchg
cld
add
push
inc
std
sbb
sbb
ins
repz
push
mov
cld
or
push
and
stos
in
mov
inc
fst
movs
push
loopne
cmp
mov
xchg
loopne
dec
icebp
movs
mov
rcr
(bad)
lods
aad
fwait
jnp
fwait
xor
adc
or
xchg
push
retf
xor
call
jp
xor
cmp
push
cdq
movs
cmps
mov
fcmove
aas
lds
(bad)
cmp
ss
das
stos
pop
int
arpl
pusha
xchg
aam
adc
or
(bad)
jmp
int3
iret
jbe
dec
pop
dec
ficom
popf
mov
in
inc
adc
jmp
xchg
cmps
jg
pushf
and
retf
(bad)
pop
dec
mov
je
jno
cs
dec
dec
pop
add
ins
jbe
sub
pop
mov
call
dec
ret
jo
sub
adc
add
pop
mov
(bad)
xlat
push
inc
jmp
dec
ins
int3
(bad)
movs
dec
call
xchg
das
aam
imul
mov
adc
lock
jne
ja
mov
leave
pandn
movs
mov
xor
cli
div
popf
push
sbb
div
jmp
jg
cwde
addr16
inc
sahf
dec
aaa
popa
mov
stos
mov
or
cmp
in
jge
pop
sbb
inc
xor
sub
push
call
xchg
or
sub
leave
fwait
sbb
dec
jno
push
call
std
lahf
push
fisub
mov
movs
in
mov
push
lea
out
test
mov
dec
ds
xchg
int3
jo
sbb
cmp
jo
jbe
mov
ret
xor
neg
into
or
dec
retf
add
rol
jnp
shl
xchg
sub
imul
dec
int
mov
rcr
(bad)
adc
test
inc
enter
std
in
add
mov
push
xchg
cwde
cmps
adc
loopne
mov
cld
pop
pop
lahf
xchg
popa
out
sti
adc
sbb
(bad)
retf
dec
push
pusha
outs
fsub
js
test
pop
pop
xchg
popf
mov
dec
(bad)
imul
lahf
iret
outs
jbe
xor
adc
or
pop
neg
dec
mov
add
sub
jmp
pop
retf
inc
pop
jle
dec
ret
pop
mov
mov
or
loopne
jo
jle
clc
call
cdq
stos
cmp
aad
fsub
dec
js
mov
nop
jb
xor
add
add
movs
adc
push
xchg
xor
jns
mov
mov
aas
mov
repnz
mov
adc
and
popa
pop
xor
pop
outs
test
inc
mov
add
push
ins
cld
cmps
loope
mov
jns
sbb
pop
lds
je
xchg
rcr
movs
je
pop
stos
mov
jmp
mov
jl
pushf
mov
scas
fstp
es
mov
pop
repz
adc
cmp
sti
rcl
cs
sub
or
sbb
mov
adc
sub
mov
gs
sub
xchg
xor
xchg
cdq
sahf
xor
jg
scas
xchg
adc
jecxz
test
push
jbe
push
stc
lods
test
xlat
mov
mov
push
icebp
mov
lods
lods
mov
sbb
(bad)
repnz
fimul
jbe
dec
adc
and
inc
sbb
fsubr
push
mov
daa
push
xchg
retf
and
jb
arpl
mov
xor
mov
scas
or
jle
movs
or
xor
mov
cld
out
pushf
and
dec
outs
sub
xor
mov
stos
popa
jecxz
imul
out
mov
fisttp
movs
ret
and
sti
scas
(bad)
std
jnp
mov
jp
jg
sub
inc
fmul
push
sbb
xor
mov
cmps
mov
fdiv
add
cli
ins
sbb
sbb
xor
in
dec
sbb
gs
push
inc
clc
test
pop
loopne
gs
pop
in
sti
dec
out
loopne
out
mov
fnstsw
scas
jno
inc
mov
shl
popf
mov
ss
xchg
mov
cmp
sub
(bad)
xor
pop
(bad)
adc
cmps
push
pop
dec
xchg
add
iret
and
jbe
fst
and
ds
and
sbb
pop
in
mov
pop
fdivrp
mov
sbb
rol
clc
jmpw
jno
sahf
jbe
retf
shr
(bad)
mov
jle
ret
cs
out
test
inc
(bad)
sub
leave
(bad)
in
pop
loop
popa
jp
les
add
mov
mov
rcl
mov
inc
dec
addr16
xor
pop
or
aaa
rcl
out
sbb
or
dec
inc
jmp
mov
xlat
cmps
jmp
les
ja
push
les
add
jl
iret
cmc
mov
enter
stos
out
push
mov
in
mov
arpl
repz
call
jp
dec
in
or
inc
(bad)
jmp
fisttp
jns
mov
inc
and
(bad)
xchg
adc
retf
adc
cmp
das
es
ins
inc
fistp
cmp
add
dec
out
mov
call
push
popa
mov
push
loop
mov
xchg
cld
jg
mov
test
cmc
pop
fwait
test
call
in
lea
loope
test
out
push
fild
push
out
adc
shl
adc
pop
mov
dec
sub
jmp
int3
mov
push
out
inc
std
retf
sub
and
inc
or
and
sub
mov
push
call
and
int
cmp
lods
imul
clc
cmp
in
pop
out
frstor
mov
pop
addr16
push
add
xlat
js
xchg
xchg
jb
dec
icebp
sub
mov
icebp
dec
loope
push
or
adc
jbe
je
bound
push
enter
jl
aad
inc
or
inc
push
pop
mov
inc
ins
fistp
mov
jno
xchg
scas
sub
xor
(bad)
cli
xchg
fsub
pop
pop
sar
(bad)
fisub
test
xor
push
sbb
std
cmp
sti
jmp
loop
cmp
fnsave
jnp
xor
stos
es
xor
jg
cmp
movs
push
cmp
mov
icebp
ins
retf
test
inc
push
pop
xor
and
fild
popf
jge
xchg
cmp
cmps
lahf
add
add
rcr
add
add
mov
arpl
call
test
xor
mov
in
shr
in
movs
push
or
leave
in
repnz
fisttp
pop
inc
mov
sbb
movs
inc
add
sar
or
imul
ss
push
fwait
sub
sub
add
sahf
xchg
lods
adc
sub
and
jnp
jbe
push
xchg
xchg
push
shl
pop
mov
pop
xchg
stc
not
ret
ins
push
mov
xor
das
lods
dec
sbb
retf
ret
popa
ret
aas
jo
data16
add
jo
pop
pop
jge
mov
in
call
jnp
in
or
xor
adc
xor
adc
pop
push
xchg
pop
mov
push
jnp
aam
add
fs
movs
pop
cmp
dec
xchg
mov
mov
cli
je
cdq
sub
cdq
sbb
mov
cmp
retf
mov
gs
sahf
aam
cli
jb
dec
pop
dec
mov
repz
adc
cmp
xor
mov
mov
mov
push
lods
pop
int
cs
jne
and
adc
lahf
aas
shr
pop
mov
mov
stos
sub
push
ins
jmp
in
pop
mov
inc
test
aas
xchg
aad
push
(bad)
pop
daa
aam
mov
jmp
out
xchg
in
shl
test
data16
mov
and
lock
shl
adc
mov
ret
and
into
ds
push
arpl
mov
sbb
pop
mov
cli
outs
dec
or
call
leave
clc
and
push
fcom
gs
je
mov
mov
cmp
in
push
mov
inc
mov
push
(bad)
mov
aaa
sbb
les
push
and
outs
push
and
popf
mov
addr16
repz
cmp
fnstenv
cmp
sub
aaa
aam
push
xor
stos
test
add
ret
std
adc
call
add
lods
rol
mov
push
int3
cmc
stos
jb
dec
mov
fcom
adc
push
pop
mov
repz
in
sbb
add
es
into
and
pop
fistp
jnp
inc
jp
retf
retf
and
push
out
fld
div
inc
inc
fbstp
push
or
call
inc
dec
cmp
sahf
add
minps
xlat
test
lds
pop
call
push
pop
call
inc
mov
mov
dec
fwait
gs
popf
mov
mov
mov
outs
cmc
pop
int
ss
loope
mov
add
mov
and
rcl
out
cld
or
sti
jg
pop
inc
fdiv
push
ss
xchg
aaa
xchg
xor
imul
sub
adc
sbb
stc
lahf
jo
push
push
test
jle
mov
add
int3
jmp
mov
xlat
or
mov
div
les
mov
push
or
fcmovnu
jo
add
jg
adc
jge
cmps
xchg
icebp
fsub
shl
jne
or
cmp
xchg
das
add
dec
ins
cmps
dec
inc
xchg
cmp
movs
stos
push
invd
push
ret
and
pop
jns
push
in
fstp
loop
outs
in
mov
pmuludq
mov
jle
fisubr
mov
cwde
push
xchg
pop
rcl
pop
push
cli
mov
and
inc
arpl
movs
xor
adc
mov
cmp
addr16
pop
jge
aam
ins
inc
add
fstp
xor
sbb
movs
xchg
test
xor
cdq
fcomp
(bad)
pop
dec
sub
stc
fs
inc
pop
fucom
mov
xchg
sbb
cmp
lea
lds
mov
jne
ins
into
inc
pop
adc
mov
sbb
outs
sbb
in
(bad)
mov
adc
sti
sbb
icebp
sbb
push
sub
aas
or
scas
cmp
ficomp
xchg
or
sahf
xor
test
imul
sub
enter
test
out
and
push
(bad)
fnstcw
mov
out
ret
cld
inc
pop
test
outs
sti
scas
cmp
cmp
fcomp
dec
jbe
cmps
aas
jg
lods
push
cmp
mov
stos
dec
(bad)
iret
or
cmp
or
mov
jp
mov
xchg
lods
aad
or
push
dec
jmp
retf
mov
nop
ret
std
xchg
jbe
xchg
push
push
xlat
icebp
lods
cmp
dec
test
inc
push
lods
ret
sbb
fcmovnb
lods
cli
cmc
pop
pop
fwait
xchg
pop
xlat
xor
push
ret
inc
les
push
sub
pop
not
mov
sub
add
clc
inc
je
and
cmp
cwde
sub
ror
sbb
and
stos
mov
pop
dec
dec
out
stos
xor
gs
pusha
fwait
das
xchg
fwait
dec
mul
or
xchg
shl
mov
cmc
stc
in
jmp
inc
mov
xlat
das
xor
cmp
sbb
sub
xchg
dec
or
mov
retf
imul
sahf
xlat
outs
push
jge
mov
daa
cdq
cmp
adc
jns
lea
xchg
frstor
xchg
inc
cmp
cli
cmp
in
sahf
push
in
mov
push
neg
hlt
adc
dec
xchg
mov
dec
add
mov
jmp
out
sbb
fild
push
mov
pop
sbb
repnz
in
add
inc
lods
cmp
cmps
inc
cmp
popf
mov
xchg
inc
add
aas
mov
add
jle
in
sub
pop
scas
jae
gs
jg
mov
cmp
out
add
inc
mov
and
mov
dec
push
(bad)
lahf
or
jp
and
mov
fs
sub
scas
jnp
dec
ror
cmp
jmp
pusha
jg
mov
inc
inc
cdq
addr16
pop
xchg
mov
ret
cs
push
cmp
jb
add
aam
aas
pop
cmp
jmp
dec
push
fistp
push
add
push
inc
fwait
rol
in
push
jp
inc
in
out
lahf
jmp
push
adc
nop
dec
lods
xchg
mov
xor
outs
inc
call
pop
inc
mov
ficomp
cmp
loope
mul
xor
jg
or
inc
idiv
sub
xchg
mov
sbb
lods
sbb
jmp
push
add
mov
jl
push
mov
fistp
push
pop
(bad)
mov
push
(bad)
retf
mov
retf
fild
mov
dec
sub
inc
leave
mov
test
in
jl
xchg
rcr
mov
hlt
fcmovu
ds
mov
jae
inc
(bad)
sbb
fsubr
addr16
inc
add
cmp
xor
xchg
mov
fcomp
repnz
test
push
jno
cmp
xor
jb
pop
mov
stos
aas
iret
js
adc
adc
ss
inc
jecxz
mov
sti
fs
inc
sar
(bad)
sahf
inc
test
xchg
add
(bad)
std
mov
add
movs
mov
rol
jnp
pop
cmps
es
dec
fist
pop
or
pop
addr16
mov
test
cmp
sbb
aam
mov
pop
jl
push
les
jnp
imul
(bad)
sub
dec
push
xchg
mov
xchg
cdq
(bad)
cmp
cmp
test
push
mov
inc
js
push
neg
mov
xchg
jecxz
and
in
jnp
jp
mov
inc
mov
bnd
jnp
ret
pop
cli
pop
jmp
push
adc
out
call
cmp
jl
mov
mov
mov
pop
call
ret
xlat
add
fisttp
sbb
sub
inc
js
pop
aaa
xchg
adc
fwait
idiv
pop
and
scas
mov
mov
pusha
cmc
pop
push
push
or
repnz
popf
or
es
pop
mov
sahf
test
cmps
test
iret
in
push
mov
inc
jmp
push
cmp
shr
sbb
pop
mov
call
(bad)
js
xlat
push
pop
jbe
sti
sbb
add
cmp
(bad)
imul
movs
xor
sub
imul
fstp
inc
xchg
outs
cdq
nop
test
out
mov
(bad)
stos
pop
push
int
cmc
add
adc
xchg
mov
outs
xchg
mov
jecxz
mov
stos
jb
fs
daa
pop
or
add
adc
sahf
outs
sbb
cmps
cwde
mov
aas
lods
push
loope
cmp
jnp
mov
xchg
pop
mov
(bad)
addr16
fstp
mov
pusha
fwait
retf
pop
pop
jp
cli
add
push
(bad)
push
add
mov
clc
mov
mov
xchg
sahf
pop
or
rcl
sbb
sbb
pop
jns
xchg
std
bound
into
add
mov
shr
or
dec
aad
loopne
ficomp
jg
jns
addr16
push
clc
jno
outs
cwde
mov
nop
xor
jmp
pop
dec
jnp
out
ds
adc
xchg
pop
stos
or
pop
dec
fisttp
cmp
fwait
ss
xor
mov
add
jle
xchg
jno
mov
mov
xchg
jge
call
test
ret
inc
jecxz
aad
or
bnd
inc
inc
js
fild
sbb
sub
popa
cdq
mov
test
(bad)
out
addr16
(bad)
pop
inc
inc
cli
inc
aaa
jle
fs
add
push
sbb
xor
xchg
and
dec
jmp
leave
push
push
ins
mov
fs
jl
cdq
imul
mov
inc
push
xchg
enter
fadd
ja
mov
and
retf
shl
jg
cs
xor
arpl
out
xchg
sub
int
(bad)
iret
addr16
ins
ja
sbb
cmp
pop
mov
mov
arpl
xor
fist
inc
bound
dec
(bad)
mov
stos
dec
shl
inc
pop
mov
mov
mov
scas
shl
or
aam
lock
push
and
and
repnz
sti
and
sbb
pop
ror
inc
jle
outs
push
ins
xchg
test
push
int3
imul
mov
xor
xor
or
jmp
pop
jae
pop
xor
pop
js
mov
ins
cmp
xlat
shl
and
js
lods
sub
shl
add
xchg
pop
mov
lea
mov
test
imul
or
add
xor
daa
sti
pop
add
cmps
lds
add
ret
not
les
fs
push
pusha
mov
addr16
imul
loope
and
mov
(bad)
pop
jb
scas
ins
jecxz
rcl
rcl
add
mov
mov
(bad)
xor
test
movs
stc
sar
mov
cmps
dec
cmp
call
cmp
push
inc
pop
sti
push
sbb
xchg
mov
push
(bad)
imul
pop
jo
inc
retf
push
sub
mov
pushf
sub
push
and
mov
loop
test
jmp
rcl
mov
inc
movs
fist
xor
call
mov
sbb
cwde
ret
xchg
outs
adc
dec
scas
cmp
dec
(bad)
inc
add
cld
mov
imul
add
and
mov
std
popa
(bad)
jl
jmp
outs
fs
sub
je
xchg
push
retf
jb
inc
ins
fist
scas
cmp
stos
div
add
fscale
xchg
pop
mov
jb
cmps
push
xchg
push
popf
enter
xchg
inc
xor
imul
push
mov
mov
cmps
sar
push
inc
mov
dec
or
inc
cmp
adc
xchg
push
xor
rcr
inc
sar
xlat
add
inc
jno
inc
mov
js
sbb
mov
jne
sar
neg
mov
sbb
retf
pop
cmps
cld
test
test
jno
adc
or
repnz
loopne
xchg
fmul
jb
ja
daa
cmp
mov
lods
es
adc
xor
call
mov
repz
pushf
sar
inc
and
inc
adc
jmp
adc
and
test
xor
stos
out
mov
jb
shr
or
xchg
push
retf
sub
xchg
push
cli
cwde
popf
rcl
sbb
sbb
lds
popf
(bad)
je
je
push
pop
dec
(bad)
clc
inc
sti
pop
push
jnp
test
push
movs
jnp
push
mov
dec
fucomp
sub
xor
cmp
pop
mov
(bad)
jg
pusha
jae
push
and
adc
adc
sti
fild
add
xchg
fdiv
ins
xchg
mov
popa
lock
test
mov
mov
and
xlat
cmp
bound
test
dec
ds
icebp
mov
jle
mov
inc
pop
jno
mov
lea
push
aad
sar
das
mov
je
inc
xor
or
imul
mov
pop
mov
aaa
jge
stc
mov
xchg
push
movs
ja
rol
mov
mov
xor
mov
in
test
icebp
or
stos
sbb
xchg
out
fcmovbe
dec
jns
adc
out
push
adc
jecxz
push
inc
push
cmps
dec
add
mov
retf
cld
arpl
(bad)
sub
mov
arpl
iret
and
push
pop
add
add
popf
dec
popa
lods
mov
aam
jmp
fcomp
jae
je
xchg
(bad)
sar
sub
shr
mov
inc
test
test
mov
dec
sar
or
cmp
inc
inc
push
(bad)
fmul
pop
js
jno
jb
fwait
mov
cmp
into
inc
(bad)
and
out
jle
jb
out
sbb
push
scas
aas
in
fs
pop
inc
test
mov
xor
jle
clc
mov
sti
inc
pop
inc
call
in
out
out
sbb
stos
mov
leave
jne
mov
add
adc
clc
stc
cdq
fs
ins
cmc
sbb
or
enter
add
xor
mov
add
icebp
stos
mov
push
shl
push
in
or
push
sub
push
mov
jae
cmps
cmps
cs
fs
(bad)
add
rcl
cmp
xchg
iret
cwde
jo
test
out
(bad)
mov
mov
sbb
not
mov
dec
xchg
imul
aas
or
xor
jle
cmps
push
pop
pop
in
or
cwde
or
std
inc
in
add
pop
inc
aad
push
sub
add
push
xchg
sbb
pop
jg
aam
cmp
push
bound
push
mov
sbb
loopne
xor
dec
stos
cdq
lods
loop
cmps
pop
add
rol
push
mov
lea
hlt
sbb
je
inc
add
fdivr
sbb
jo
dec
scas
mov
sahf
dec
or
popa
jmp
pop
inc
frstor
rsqrtps
(bad)
in
cmp
movs
dec
push
cmp
popf
fmul
in
pop
jp
sub
popf
aad
popf
sar
mov
mov
inc
addr16
xchg
cld
add
test
mov
sub
std
(bad)
jp
pop
jns
outs
lods
sub
mov
inc
mov
xchg
mov
push
enter
cmp
popw
mov
ss
pop
test
ror
aad
push
mov
xchg
dec
jnp
xchg
mov
(bad)
stos
sbb
je
ins
jns
lahf
dec
jmp
jno
xchg
add
dec
sti
mov
inc
jnp
mov
loope
jecxz
ds
xchg
cmps
push
fidiv
adc
adc
retf
jmp
sbb
arpl
mov
(bad)
aad
and
dec
pop
or
dec
or
sbb
das
int3
dec
jbe
pop
cmp
push
jo
xchg
mov
in
mov
nop
(bad)
jo
fs
stos
push
jmp
in
mov
stos
dec
pushf
call
int
mov
jl
mov
(bad)
(bad)
(bad)
jno
sub
sub
push
call
dec
jns
imul
test
sbb
sbb
mov
or
add
mov
scas
adc
dec
jno
dec
xor
adc
xchg
(bad)
xor
jl
fdivr
and
js
mov
inc
loop
mov
xchg
aad
mov
test
test
movs
mov
gs
cmc
xchg
fisubr
mov
xlat
sub
cmp
aaa
out
xlat
fsub
xor
xor
push
push
mov
lahf
mov
loope
daa
sahf
jecxz
pop
jnp
mov
mov
jae
test
add
movs
lea
sbb
cmc
mov
out
pop
pop
xchg
mov
fwait
sbb
icebp
aad
jo
gs
cmp
mov
shl
cmp
xor
xor
aaa
enter
fcom
push
pop
dec
mov
cmp
stos
test
dec
add
add
inc
and
out
cmp
add
pop
test
cmps
aaa
jle
scas
mov
and
cmp
fcom
outs
pop
jns
sub
xchg
and
loop
aam
jns
into
fidiv
test
mov
fwait
stos
mov
pop
call
cmp
shl
cmp
or
fidiv
inc
or
pop
add
or
cmc
mov
inc
out
jl
fstp
pop
inc
mov
cmp
inc
xchg
das
dec
mov
and
clc
jno
sub
(bad)
lahf
aaa
xchg
ret
sbb
jl
jno
fsub
and
mov
xor
mov
cwde
mov
sbb
mov
sbb
jmp
mov
inc
pop
cmp
fimul
jge
fld
jge
std
pop
push
mov
repnz
popf
(bad)
and
repz
and
sub
xor
in
aaa
mov
test
adc
push
cwde
mov
add
and
in
adc
jno
xchg
push
mov
pushf
pop
add
data16
popf
sahf
mov
xchg
xchg
scas
jl
mov
hlt
lods
test
lea
inc
ss
mov
leave
jo
adc
jns
aas
data16
cmp
cmc
mov
mov
sahf
xor
xchg
jnp
pop
aas
clc
and
sub
jno
pop
jb
or
mov
add
add
fild
pop
(bad)
js
sub
mov
jecxz
and
fldz
sub
in
nop
pop
inc
jmp
jecxz
stos
cmp
xchg
ja
push
scas
sbb
pop
mov
ror
and
xor
daa
lods
inc
pop
push
mov
push
int
sub
xor
inc
or
pop
test
xchg
and
mov
aaa
and
mov
push
lahf
inc
adc
rcr
out
shl
nop
sub
inc
cmps
(bad)
fstp
or
add
fisttp
push
jmp
out
pop
dec
clc
sar
jp
dec
dec
cmp
pop
pop
ins
stos
xor
mov
mov
jo
push
sti
add
add
push
mov
jnp
sahf
push
add
mov
out
inc
mov
push
and
cmp
jmp
not
xor
pop
xchg
cwde
shl
cdq
xchg
cmps
sbb
shl
push
xchg
mov
dec
lds
mov
cmp
xor
test
push
dec
jmp
mov
dec
fucomi
or
pop
sbb
xor
and
imul
xchg
or
dec
jle
(bad)
movs
pop
mov
sbb
push
jl
push
sti
into
test
loope
or
in
xchg
sbb
mov
mov
fadd
out
mov
test
imul
sbb
cmp
cmps
imul
xchg
sub
icebp
cmp
mov
and
sub
adc
adc
idiv
pop
xchg
repnz
fdivr
jae
dec
jmp
xchg
mov
xchg
bound
(bad)
mov
stos
mov
sbb
movs
xchg
adc
xchg
(bad)
test
xor
fistp
jns
ss
mov
sub
xor
mov
outs
xchg
mov
(bad)
(bad)
jmp
dec
push
inc
mov
or
arpl
adc
jl
scas
sub
into
stc
sub
or
frstor
aam
add
test
(bad)
into
inc
hlt
cwde
push
(bad)
loope
xor
in
xchg
mov
ins
lea
frstor
xchg
mov
adc
xor
out
xlat
jo
aaa
push
inc
inc
mov
jge
nop
cdq
sahf
adc
cmps
outs
call
add
or
add
imul
mov
lods
sbb
push
lea
arpl
sbb
jmp
fistp
push
cdq
push
fistp
jmp
or
mov
cmps
add
sbb
adc
xor
sub
or
shl
push
jle
adc
in
adc
mov
sub
inc
call
dec
pop
add
bound
add
pop
pop
mov
dec
out
or
fsub
sbb
ins
and
jno
shl
and
stos
mov
mov
pop
jo
mov
push
xor
ret
lea
test
jle
dec
es
fxch
shl
fwait
inc
inc
aas
ds
imul
mov
pop
or
mov
xor
sub
jne
mov
lods
and
inc
shl
ins
mov
cmps
ins
add
sbb
jns
sub
repz
rcl
mul
call
in
cmp
idiv
int
mov
call
jmp
rcl
jbe
aas
or
cmp
das
sbb
cld
cmp
dec
popf
call
mov
fcmovnu
addr16
add
jmp
mov
pop
test
pop
lahf
test
imul
jg
mov
cmp
lock
mov
inc
lods
cld
xchg
lock
test
mov
mov
daa
call
dec
pop
mov
cmps
push
sbb
or
sbb
sbb
test
aaa
dec
xchg
xchg
retf
daa
cld
jns
rcr
(bad)
inc
pop
aas
mov
add
or
inc
adc
xor
mov
ins
(bad)
repnz
and
xchg
(bad)
loope
cdq
iret
loopne
neg
and
fdiv
fwait
cmc
add
jecxz
inc
adc
dec
iret
das
sbb
ror
rol
and
cmp
push
dec
jae
dec
es
mov
call
mov
xor
sub
adc
inc
push
mov
jne
and
fstp
mov
inc
mov
and
call
leave
adc
clc
stos
in
or
cwde
mov
(bad)
icebp
lods
loop
pop
push
jmp
fldenv
scas
inc
cld
sbb
pop
push
push
mov
cmp
jg
mov
vandnpd
cmp
jae
lods
sbb
push
fld
fnstsw
dec
mov
aaa
data16
retf
sbb
pop
adc
mov
icebp
sahf
(bad)
popa
in
mov
cld
pop
push
shl
(bad)
mov
iret
dec
rcr
pop
loopne
movs
addr16
std
icebp
stos
in
ja
aad
imul
dec
and
sub
ja
adc
add
jne
sub
dec
out
mov
pop
xchg
call
jae
and
inc
sbb
and
bound
arpl
cmp
retf
retf
xchg
jg
push
mov
mov
sub
hlt
cld
mov
jp
mov
fiadd
mov
adc
stc
jmp
push
jmp
push
add
movs
or
stos
jbe
push
mov
fild
into
sbb
in
sbb
fs
es
retf
add
jge
xchg
xor
stos
div
jmp
dec
pop
and
jne
mov
cmps
pop
xchg
xchg
int3
mov
icebp
mov
in
cmp
icebp
add
xchg
out
xchg
movs
jnp
sub
adc
(bad)
lds
jp
cdq
jno
outs
lods
inc
ss
cmc
(bad)
cdq
popf
dec
aas
(bad)
pop
(bad)
leave
sbb
push
fiadd
push
mov
into
inc
inc
mov
dec
jmp
scas
and
push
cmp
xchg
std
or
dec
sbb
mov
jp
(bad)
mov
pop
cmc
clc
xchg
xor
(bad)
push
lahf
dec
push
xchg
mov
retf
mov
aam
in
hlt
sbb
cli
cli
stos
inc
retf
cmp
lea
push
sbb
mov
jmp
mov
cdq
call
in
pop
ja
push
sbb
add
mov
pop
lods
lods
mov
pop
inc
(bad)
xrelease
rol
stos
imul
mov
sub
div
scas
out
push
scas
jg
jmp
fnstenv
sahf
cmps
inc
jmp
out
fsub
clc
cmp
cmp
ins
or
adc
retf
(bad)
xchg
add
dec
out
or
xor
xchg
aas
xchg
xor
sbb
ficomp
mov
mov
jmp
fsubr
sbb
movs
pop
faddp
mov
out
sti
inc
in
loop
je
mov
sub
adc
shl
fdivrp
inc
js
movs
inc
(bad)
pop
int
pop
push
ftst
bnd
cmp
ds
mov
aaa
sub
mov
aaa
mov
into
rcr
dec
inc
jnp
in
xor
addr16
jg
add
pushf
push
sbb
fbstp
add
pop
fisttp
popf
push
(bad)
cwde
add
mov
xor
ins
cmps
std
lahf
mov
mov
test
out
test
retf
push
scas
xor
dec
xlat
xchg
test
sbb
das
jge
test
add
test
mov
lahf
out
or
and
xor
inc
sub
push
int3
push
arpl
arpl
sub
sub
ret
imul
and
ret
mov
mov
cld
jb
inc
movs
cli
fwait
in
cmp
leave
xchg
adc
fild
sub
inc
cli
das
add
call
pop
ins
inc
dec
jmp
cdq
popf
dec
and
js
sar
mov
jnp
loopne
sub
or
addr16
movs
jg
mov
pop
inc
add
stc
leave
sti
das
sahf
xchg
dec
test
mov
xor
mul
mov
sbb
xchg
cmc
scas
jecxz
cmp
stos
stos
xor
or
cld
(bad)
inc
shl
imul
jb
add
jmp
rcr
arpl
jmp
jmp
push
aas
mov
cmps
ins
xor
mov
fwait
scas
mov
cmc
pop
pushf
arpl
mov
retf
mov
push
test
idiv
ja
xchg
mov
add
loopne
mov
std
jo
xchg
cmp
stc
dec
inc
dec
mov
clc
(bad)
loopne
jne
push
call
mov
pop
shr
mov
enter
js
out
pop
cmp
and
sbb
mov
stc
clts
pop
inc
shr
cmp
pop
pop
fimul
(bad)
cwde
not
add
sbb
movs
jns
in
mov
cmp
ret
stos
sar
jge
fiadd
das
lds
sbb
int
pop
rol
cmp
push
sbb
aaa
pop
push
jmp
xchg
lahf
sub
leave
pusha
jmp
pop
daa
mov
pop
xor
sti
js
cmps
dec
inc
rcl
ss
daa
ins
(bad)
mov
fldenv
pusha
frstor
(bad)
rcr
into
sahf
adc
sbb
retf
lds
fwait
movs
leave
daa
mov
mov
inc
out
cld
adc
mov
fmul
sub
dec
fsubrp
loopne
xchg
or
pop
mov
cmp
jmp
mov
call
pop
imul
and
or
sahf
dec
cmp
mov
jne
pop
pop
fdiv
mov
sbb
dec
lods
js
xchg
hlt
xor
arpl
in
cli
imul
test
lods
fdiv
stos
jge
scas
xchg
mov
fstp
jmp
mov
add
sbb
dec
fadd
cmp
addr16
daa
push
pushf
sub
fcmovnbe
or
add
adc
pop
pop
lods
jnp
nop
add
mov
(bad)
adc
int3
add
jg
ins
stos
dec
in
in
xchg
loopne
jno
mov
add
std
mov
mov
imul
sti
mov
mov
das
and
xchg
mov
and
push
std
xor
xchg
push
pop
test
(bad)
jl
inc
fild
add
imul
push
call
test
ins
retf
out
cwde
inc
mov
add
jge
movs
aad
popf
repz
inc
std
cld
push
push
in
neg
out
mov
mov
mov
add
sub
mov
nop
sub
dec
sbb
in
sti
stos
jns
inc
inc
or
lahf
xor
sbb
fst
push
fiadd
jl
ret
bound
out
pop
into
or
push
jb
getsec
scas
sbb
inc
push
pop
(bad)
cmps
es
push
test
jae
int3
movs
adc
mov
sub
aad
sub
mov
fisttp
in
(bad)
cmp
(bad)
jmp
adc
jnp
push
add
mov
scas
push
call
sbb
push
pop
jg
(bad)
shr
(bad)
out
jnp
fistp
jbe
jmp
fs
and
add
dec
dec
xor
sbb
stos
xlat
xchg
or
dec
push
int
or
shr
jle
inc
mov
inc
mov
mov
add
retf
lea
sti
xchg
mov
fdivr
lahf
mov
ss
lock
xchg
adc
or
lds
addr16
test
ins
jo
pop
pop
push
ss
call
loop
mov
add
sbb
push
lods
imul
sub
add
dec
arpl
hlt
out
retf
adc
(bad)
aad
ins
icebp
test
aad
icebp
or
fs
cmps
ror
pop
jnp
mov
and
(bad)
ret
repnz
sar
jg
sbb
sub
jmp
cmp
cs
mov
aaa
jo
cmps
iret
stos
or
pop
call
inc
add
and
mov
adc
dec
adc
pop
sbb
mov
pop
xor
in
test
mov
push
pop
fisubr
test
cwde
data16
push
cmp
out
xor
enter
add
add
in
mov
sbb
cli
neg
arpl
inc
gs
xchg
cmovle
outs
inc
jle
lds
sbb
frstor
mov
bound
xor
and
pop
xor
mov
xchg
or
jae
adc
xchg
mov
in
in
lahf
xlat
push
out
and
in
aad
mov
call
in
sbb
inc
test
scas
mov
lahf
test
loope
mul
cmp
test
push
adc
pop
(bad)
pop
pop
cs
test
sbb
imul
mov
rcr
je
(bad)
sbb
inc
jb
mov
nop
jle
outs
mov
add
mov
(bad)
mov
inc
int3
(bad)
jp
sbb
scas
xor
iret
test
mov
push
rol
mov
icebp
sbb
pop
push
loop
nop
xor
out
outs
xchg
movs
inc
icebp
push
fst
iret
retf
(bad)
sbb
inc
shl
push
cwde
pop
pop
jg
test
mov
sbb
addr16
sub
pop
mov
js
add
sbb
dec
and
movs
sub
sub
lahf
cmp
push
jb
pop
sti
nop
rcr
std
lahf
je
mov
xor
scas
mov
pop
mov
int
test
xchg
(bad)
dec
out
pop
fldcw
cs
nop
mov
inc
popf
sub
cmp
fld
dec
pop
xchg
push
lahf
cwde
xchg
into
adc
sbb
mov
push
cmp
inc
push
push
push
xor
stc
pop
ins
nop
push
add
ds
xchg
scas
aas
inc
push
inc
rol
das
lahf
call
pop
jo
lahf
dec
aad
aad
mov
xchg
push
add
jmp
mov
sbb
mov
mov
sbb
cmc
sbb
sub
push
pop
sbb
ss
mov
sar
frndint
xor
mul
fs
fs
pop
mov
leave
pop
adc
inc
cwde
mov
push
cmps
mov
neg
pop
popf
mov
xchg
push
jmp
icebp
xchg
and
(bad)
ror
pop
outs
in
cmp
cmc
cmc
lods
aad
outs
sbb
xor
cmp
daa
adc
pop
inc
sub
outs
dec
dec
cdq
outs
add
out
mov
sub
outs
fcomp
das
xchg
dec
dec
push
inc
mov
cmp
mov
adc
inc
xchg
mov
xlat
shr
(bad)
adc
js
sub
mov
test
xchg
mov
pushf
or
jp
stc
adc
lods
sahf
movs
cmp
(bad)
jmp
out
les
call
call
out
pop
retf
add
es
sub
mov
iret
mov
sub
imul
jge
pop
and
es
daa
pop
scas
or
mov
sub
mov
pop
shr
xor
dec
pop
mov
and
retf
nop
mov
mov
iret
dec
call
dec
cwde
mov
arpl
(bad)
cmps
repz
inc
sbb
jne
or
pop
loope
or
mov
inc
mov
mov
test
ffree
jnp
(bad)
inc
addr16
cmp
adc
add
sbb
jp
sbb
or
mov
push
daa
push
jb
aad
es
addr16
ret
test
jns
mov
add
sti
in
or
pop
movs
mov
imul
shl
stos
leave
loope
dec
mov
daa
and
repz
in
cs
jg
scas
or
or
mov
stos
jnp
fcomp
mov
push
push
push
pop
ret
jbe
data16
lea
ficom
xchg
mov
jle
mov
push
cwde
shl
loopne
jns
mov
pop
jmp
pushf
inc
and
cld
xchg
adc
call
mov
xlat
test
imul
scas
mov
dec
push
dec
lock
inc
(bad)
or
cmp
xchg
dec
pop
pop
mov
test
fs
push
xchg
mov
push
inc
mov
sbb
fidivr
addr16
dec
push
mov
xchg
xor
arpl
out
movs
cmp
inc
push
inc
xchg
scas
fdivr
iret
mov
into
loopne
adc
xrelease
imul
mov
pop
sahf
mov
pushf
xchg
shl
arpl
lods
sbb
paddusb
mov
ds
mov
fs
xchg
into
ins
shl
test
pop
loope
adc
sub
adc
push
adc
inc
xchg
and
leave
mov
sbb
icebp
outs
pop
inc
mov
xlat
mov
xchg
inc
out
and
ret
lea
pop
call
inc
mov
sbb
test
mov
inc
clc
sub
int3
(bad)
add
pop
mov
inc
imul
pop
in
mov
fistp
xlat
push
pushf
xchg
add
es
pop
jae
das
and
and
xchg
push
cmp
movs
xchg
pop
and
sar
lds
jno
push
jmp
jbe
cmps
add
cld
mov
test
pop
cmps
sahf
mov
stos
popf
cmp
xchg
inc
repnz
cmps
sub
push
cld
fmulp
jle
sbb
pop
mov
push
cs
mov
mov
sub
xlat
pop
sti
mov
push
sbb
or
xor
mov
dec
data16
sub
sub
jmp
outs
jge
mov
(bad)
lock
mov
test
mov
out
inc
mov
sbb
test
mov
mov
shl
cmp
push
mov
scas
jo
and
add
mov
ins
cmp
lahf
adc
cmp
(bad)
xor
sbb
lahf
cmp
call
stos
stos
or
pop
xor
stos
xchg
adc
inc
jbe
and
(bad)
leave
data16
mov
adc
clc
dec
cmps
cdq
fcmovne
add
ins
ins
call
icebp
loope
dec
popa
loop
imul
jle
cmp
pop
mov
jge
xchg
push
popf
mov
iret
and
rol
fwait
lea
dec
sbb
inc
push
popa
sbb
cs
inc
fistp
stos
sbb
mov
stc
in
call
push
and
jge
jmp
pop
adc
ret
cmc
adc
inc
movs
test
dec
push
in
shl
sbb
clc
imul
inc
xchg
push
in
pop
push
mov
repnz
shl
jp
cmps
es
gs
je
mov
test
sub
jge
call
inc
jp
loopne
or
adc
fs
jl
or
adc
xchg
xor
pop
jae
jae
sub
push
out
inc
push
retf
cmc
and
mov
(bad)
add
jmp
movs
stos
out
push
mov
(bad)
sbb
and
inc
mov
inc
adc
mov
ret
fistp
icebp
jb
bound
mov
sbb
daa
scas
daa
mov
int3
sbb
pop
daa
lahf
dec
jge
xchg
fwait
stc
xchg
inc
stos
ret
sbb
pop
fld
fwait
enter
fwait
jge
jmp
rol
mov
mov
mov
out
cmc
mov
loopne
pop
mov
push
(bad)
push
sub
pop
std
or
sbb
scas
or
xchg
push
pop
jne
cmps
lea
out
or
or
dec
adc
pop
mov
jle
mov
pop
jmp
cld
scas
mov
retf
pop
jb
cmps
popa
cmp
push
xchg
mov
pop
into
fimul
mov
jg
xchg
xchg
hlt
xor
retf
mov
sub
stos
aaa
jmp
retf
popf
sbb
cmp
push
push
jnp
(bad)
nop
mov
(bad)
xor
sbb
or
or
mov
lahf
adc
pop
inc
cmps
or
fadd
push
mov
inc
call
mov
pop
call
mov
addr16
stos
inc
xor
xchg
jp
lods
mov
jae
mov
fisubr
fldenv
jns
dec
sbb
sub
cmp
sub
fwait
inc
and
popf
mov
jl
retf
sub
or
cmp
pop
adc
jg
imul
dec
call
jmp
addr16
je
push
mov
aas
in
mov
int3
sahf
pop
and
xchg
mov
enter
pusha
mov
cmc
test
in
fldenv
gs
pop
adc
(bad)
scas
jb
cmp
arpl
sub
dec
mov
jmp
sbb
pushfw
loop
cmp
push
inc
pop
loopne
or
pop
or
add
gs
xchg
or
sar
sbb
push
dec
out
lods
mov
(bad)
cmc
arpl
push
(bad)
mov
fwait
je
cmps
inc
push
test
xchg
pop
jmp
mov
lods
and
aam
xchg
stos
and
mov
xor
es
imul
adc
mov
and
addr16
data16
sbb
sbb
jae
sub
fs
fmul
inc
lahf
das
pop
jmp
push
inc
call
icebp
jnp
jnp
sub
cwde
enter
call
fisttp
mov
jg
xchg
shl
stc
(bad)
pop
pop
mov
(bad)
sti
je
sub
jbe
mov
push
pop
dec
mov
ficomp
test
jns
(bad)
push
fs
dec
fistp
push
popa
sub
(bad)
out
addr16
push
sub
cmp
mov
inc
clc
int
sbb
pop
jg
test
mov
movs
adc
mov
bnd
cmps
mov
pusha
lods
sub
mov
xchg
fist
cs
dec
pop
push
mov
cmc
js
and
xor
arpl
mov
out
gs
cs
add
inc
cs
jl
shl
mov
sahf
push
(bad)
fwait
aas
mov
bound
inc
sti
movs
fldcw
fdivr
xor
fild
scas
mov
outs
mov
(bad)
in
repz
ins
mov
xor
or
test
cmp
adc
pop
fdivr
and
mov
add
jg
fistp
inc
fistp
imul
fwait
or
nop
jo
mov
push
mov
xchg
and
loopne
movs
add
jbe
test
push
mov
xchg
adc
loopne
and
dec
mov
sahf
out
sub
(bad)
xor
mov
cdq
jmp
mov
cmp
fbstp
jnp
jns
aaa
imul
ret
sub
cmp
cmp
cs
lods
adc
jae
js
xchg
sbb
mov
jle
(bad)
xchg
adc
jbe
push
mov
add
mov
mov
mov
xchg
je
clc
scas
mov
fstp
pushf
xchg
scas
cs
rcr
mov
in
imul
fucompp
retf
inc
int
je
pop
mov
push
dec
cmps
test
pop
in
sub
or
add
sbb
jle
xchg
test
nop
clc
add
fs
jb
ficom
mov
xchg
inc
retf
cld
jno
jmp
dec
xchg
add
mov
xlat
lock
clc
inc
jl
movs
push
call
ds
retf
hlt
inc
retf
cmp
imul
ds
lds
js
enter
dec
dec
inc
sub
daa
adc
sub
adc
movs
adc
mov
(bad)
mul
adc
dec
pop
popf
pop
std
sahf
fcom
jecxz
adc
mov
xchg
adc
mov
push
lods
movs
scas
or
test
pop
inc
test
test
cmp
div
or
data16
pop
push
lahf
mov
aad
test
pop
mov
sbb
adc
xchg
es
gs
push
and
cwde
test
daa
sub
cmp
inc
addr16
push
cmps
shl
cmc
mov
or
fcomp
dec
inc
jecxz
mov
xlat
xchg
mov
into
cmp
(bad)
cld
rcl
pop
dec
js
xchg
pop
pop
push
movs
cs
mov
sub
sbb
int
mov
jg
sbb
mov
xor
jmp
dec
push
mov
add
test
inc
xchg
sbb
add
test
xchg
dec
retf
or
mov
lods
jns
xchg
jmp
dec
mov
scas
adc
dec
aam
stc
inc
rol
inc
add
jg
jo
jp
test
scas
xor
cmc
dec
int3
in
jl
(bad)
jno
or
in
or
add
push
lods
xor
xchg
stc
imul
cmps
dec
enter
jle
pop
cdq
cs
mov
pop
jecxz
jecxz
loope
add
rol
test
jp
mov
repnz
leave
repz
dec
cwde
mov
adc
call
or
jne
push
and
mov
in
out
push
xchg
xchg
push
push
jge
mov
adc
add
push
add
cdq
pushf
jne
or
fcmovu
mov
repnz
pop
mov
fld
xchg
inc
pop
in
lahf
jne
sbb
movs
mov
adc
or
int
jno
mov
fdiv
sbb
lea
ja
inc
fldcw
inc
lahf
dec
sub
in
xchg
arpl
ret
hlt
push
push
cmp
sbb
jle
mov
add
loope
pop
adc
mov
les
push
jo
push
hlt
add
mov
nop
pop
cs
mov
cmc
sbb
adc
cmp
retf
scas
scas
inc
(bad)
adc
jmp
rcl
cs
aas
pusha
adc
inc
jne
nop
int3
test
popf
fidivr
push
jne
sbb
cmp
sbb
sub
(bad)
retf
adc
loope
popf
fdivr
sbb
sar
mov
dec
mov
cdq
je
(bad)
adc
sbb
lea
mov
ror
arpl
lods
dec
es
fidivr
pop
sub
fild
js
cmps
jb
popa
cmc
ror
rcr
or
pop
out
ss
jl
scas
cmp
stos
push
or
lods
imul
loope
mov
mov
pop
out
add
test
addr16
movs
add
adc
fs
idiv
add
mov
shl
ds
xchg
xchg
(bad)
cmp
dec
popa
jnp
fimul
outs
test
pop
lods
pop
fdiv
add
aam
push
push
sbb
xor
outs
ss
inc
arpl
inc
call
test
popf
sbb
jge
movs
inc
sti
lahf
xlat
pusha
add
inc
xchg
lahf
add
aad
test
aam
xchg
(bad)
mov
mov
ffree
mov
xchg
dec
cli
adc
(bad)
icebp
aad
mov
pop
es
lahf
mov
fidiv
jle
fistp
jg
fstp
push
push
das
js
and
jle
dec
jb
pop
sub
test
retf
int
push
xchg
clc
data16
inc
jge
jg
mov
test
rcr
repz
pop
icebp
cdq
test
or
lock
cwde
mov
mov
mov
push
out
fsubr
sti
dec
les
jle
ins
cmp
push
xor
jmp
pop
fwait
xchg
ds
leave
jo
pop
inc
rol
inc
xor
setne
inc
ja
adc
mov
cmps
sbb
dec
pop
jecxz
out
xchg
repz
sbb
test
xchg
les
jecxz
loop
push
adc
(bad)
or
gs
fcmovb
or
mov
pop
idiv
scas
scas
sar
inc
jmp
jns
dec
aam
sbb
ret
leave
scas
fild
pop
test
pop
cmp
icebp
fnstcw
sbb
idiv
mov
push
pop
fs
out
cmp
xor
and
push
or
add
adc
mov
mov
data16
jmp
xchg
push
mov
and
fld
mov
jg
mov
repz
retf
cmp
mov
push
out
cmc
xor
rol
push
ds
xor
sub
mov
mov
(bad)
dec
shl
lahf
jmp
jl
or
pop
sbb
sbb
dec
push
mov
add
sbb
inc
jmp
xchg
adc
fiadd
ins
inc
popa
fisttp
fcomp
dec
test
sahf
pop
sub
fmul
mov
fs
mov
movs
sbb
icebp
addr16
mov
and
fcomp
iret
inc
iret
sbb
cmp
inc
pusha
mov
mov
std
pop
pushf
out
js
leave
outs
dec
push
add
inc
adc
lea
lods
xor
add
xchg
dec
push
mov
mov
xor
(bad)
hlt
call
jge
inc
bound
ret
push
in
mov
test
neg
in
dec
movs
pop
popa
test
repnz
loope
push
inc
mov
call
xchg
into
ds
jns
outs
mov
inc
pop
jl
test
pop
pushf
(bad)
jge
out
inc
or
loop
push
pop
ss
dec
je
push
pop
mov
movs
ins
cmp
adc
addr16
fld
mov
dec
cmps
mov
jge
(bad)
loopne
sub
bound
sbb
and
in
lds
mov
sub
sbb
fisttp
sbb
fistp
pop
inc
mov
cwde
mov
loop
and
popa
push
inc
sub
jo
mov
jp
(bad)
jg
xchg
adc
cwde
shr
sahf
fdiv
aam
jb
shl
repz
dec
mov
cmp
out
jp
pusha
movs
mov
dec
pop
mov
cmps
push
inc
hlt
ret
cmc
ds
xchg
pushf
jb
push
mov
cmp
fcmove
hlt
dec
fistp
jl
fsub
pusha
clc
push
and
fst
push
into
add
call
xor
dec
outs
fisub
xor
cmp
sti
mov
cwde
push
jp
cmps
popa
loope
sbb
mov
adc
cmc
out
jp
jg
add
xor
sahf
data16
(bad)
mov
stos
aam
hlt
inc
dec
cs
sti
imul
movs
sub
mov
mov
stc
pop
cli
fadd
(bad)
hlt
arpl
add
push
xchg
push
mov
scas
adc
mov
push
xchg
mov
xor
sub
and
pop
divps
sub
mov
mov
or
icebp
lods
xor
sbb
lods
inc
pop
mov
neg
sbb
ret
enter
xor
retf
cmp
cmc
icebp
addr16
inc
or
stos
or
dec
mov
push
mov
or
mov
bound
inc
mov
add
jbe
pop
es
xor
mov
sbb
adc
dec
dec
push
cmp
loope
mov
mov
mov
loopne
mov
inc
mov
mov
pop
mov
clc
neg
addr16
cmc
(bad)
sub
sbb
(bad)
out
dec
call
cmps
adc
push
dec
push
call
imul
inc
adc
rcr
jnp
cmp
mov
push
cdq
dec
pop
mov
mov
and
mov
and
sahf
pop
ret
inc
mov
mov
sub
cli
mov
xchg
add
mov
sti
mov
mov
and
xchg
jmp
jae
ficomp
adc
pop
mov
(bad)
inc
icebp
lea
cwde
clc
push
dec
push
dec
retf
push
outs
jge
add
dec
fwait
push
inc
mov
loope
pop
and
or
fidivr
sbb
dec
(bad)
cmps
xchg
ret
ret
loope
and
jp
movs
mov
cs
inc
add
xchg
adc
ret
out
mov
cmp
loop
lods
jbe
cmp
ins
jbe
mov
mov
stc
imul
outs
inc
inc
retf
aas
xor
jbe
mov
xor
add
add
mov
and
pop
mov
inc
in
lahf
dec
pushf
mov
mov
in
shr
and
test
cmc
xchg
and
cdq
mov
sbb
fild
add
data16
aas
data16
mov
aam
repnz
inc
pop
out
and
out
and
bound
arpl
push
outs
(bad)
pop
mov
addr16
dec
xchg
cli
dec
popf
lock
push
hlt
loope
sub
hlt
popf
ja
push
mov
mov
(bad)
jl
stc
cld
mov
test
aad
sbb
(bad)
mov
inc
fisub
and
adc
mov
movs
xchg
mov
loop
add
dec
fld
adc
nop
es
fistp
adc
pop
pop
xlat
or
in
in
adc
gs
lahf
and
mov
ins
sub
dec
retf
mov
mov
xchg
mov
imul
push
xchg
stos
cmps
leave
push
cmps
inc
add
popf
std
adc
loop
retf
jl
test
leave
cs
and
fiadd
and
cmp
push
xor
xchg
cmp
jl
clc
sets
push
push
jae
cmp
mov
pop
dec
fsub
dec
jno
(bad)
mov
add
dec
popf
repz
fld
pop
push
push
mov
mov
pop
xchg
shl
adc
loopne
adc
pop
movs
test
xchg
(bad)
mov
fidivr
stos
fisttp
push
std
rcr
jl
sbb
ins
jae
jo
jnp
test
pop
shr
movs
(bad)
jl
inc
sub
pop
xor
xor
jmp
bound
js
mov
push
xchg
test
sub
pop
sahf
push
or
hlt
mov
pop
out
mov
jmp
mov
mov
test
mov
enter
popf
jne
sub
adc
cmp
fidivr
pop
es
pop
pop
jmp
or
xchg
into
sahf
push
sub
ins
sar
add
mov
sub
inc
dec
mov
inc
mov
jl
test
arpl
cmps
loope
scas
jecxz
in
pop
jns
arpl
fsub
ins
xor
jmp
sbb
sub
mov
xchg
retf
pop
push
mov
outs
fmul
pop
and
fcmovbe
push
xor
dec
inc
mov
sahf
mov
cwde
retf
sub
cmp
or
pop
sub
add
adc
jp
xlat
cmp
jmp
sti
repz
in
inc
dec
mov
xor
loop
xor
sar
ret
inc
jl
(bad)
hlt
ss
shl
test
fisttp
xchg
scas
ja
outs
shl
add
repz
jb
adc
cmp
dec
sub
cmps
fwait
xchg
or
cmp
es
and
pop
sbb
mov
lods
sub
push
dec
fistp
mov
add
cmp
mov
test
and
dec
xchg
retf
mov
bswap
ret
leave
push
cli
mov
push
pushf
xchg
xchg
push
pop
test
retf
sbb
icebp
add
into
imul
push
add
fdivr
pop
pop
sahf
inc
add
mov
add
push
int
and
pop
(bad)
and
inc
pop
and
stos
sbb
xchg
mov
mov
in
out
mov
inc
test
inc
shl
mov
test
cld
mov
test
dec
mov
xchg
enter
dec
mov
cmps
adc
stc
shl
test
test
or
ret
jae
cmp
cmp
push
pop
call
scas
or
cmp
mov
push
adc
sbb
push
jno
push
and
pop
data16
adc
xor
int
das
mov
jl
imul
xor
mov
dec
aam
scas
xor
push
nop
sbb
push
mov
test
mov
push
loopne
int
push
sub
repz
dec
out
pop
pop
or
sub
xchg
or
in
push
cwde
cmc
sbb
xor
pop
add
pop
mov
jl
mov
dec
mov
add
cmp
jno
fwait
jne
(bad)
repnz
xchg
jge
jmp
or
mov
cmc
loope
(bad)
sbb
mov
ss
(bad)
and
fisubr
jp
aaa
cmp
stos
(bad)
int
cmp
pop
int
push
mov
and
and
cwde
xor
jae
dec
dec
movs
pop
daa
lods
dec
jno
mov
prefetcht1
hlt
rcr
frstor
arpl
movs
out
test
xchg
sahf
pusha
add
je
fwait
mov
sbb
arpl
push
pop
(bad)
loope
rol
outs
dec
mov
add
(bad)
int
iret
xor
adc
xchg
xchg
dec
daa
aad
std
mov
add
loopne
sub
and
xchg
pop
shl
outs
xchg
retf
nop
xchg
cwde
or
sub
push
xchg
ret
data16
pusha
jns
or
xor
sahf
pop
sbb
jmp
sbb
lds
add
fs
aad
xchg
jmp
fidiv
cs
add
test
push
dec
pop
mov
add
(bad)
xchg
mov
inc
sar
and
cmp
push
sahf
sbb
mov
and
lea
ret
push
(bad)
std
pop
(bad)
jns
je
dec
lock
xchg
xchg
xchg
arpl
fcmovu
mov
iret
pop
lock
gs
mov
inc
jmp
mov
push
inc
rcr
cmp
out
stc
pop
in
or
cmp
mov
stos
sub
jmp
add
fld
dec
and
or
ins
xor
dec
jl
test
inc
xlat
lods
test
lds
cmps
sub
mov
xchg
add
mov
xchg
sbb
imul
test
std
xchg
(bad)
pop
sbb
in
push
or
jae
cmp
sbb
cmp
popa
popf
xor
outs
nop
(bad)
sahf
mov
or
cmp
rol
dec
data16
adc
xor
pop
stos
sub
add
mov
js
fldenv
ret
inc
mov
fs
cmps
dec
test
test
xchg
mov
push
(bad)
stc
(bad)
xor
pop
cmc
mov
idiv
mov
pop
loopne
popf
cmp
ds
mov
(bad)
cmp
or
jmp
push
(bad)
sbb
ins
test
test
bound
inc
retf
imul
xor
adc
adc
stos
adc
jno
push
dec
mov
add
and
push
loope
test
push
inc
ficom
cmps
(bad)
inc
test
mov
pushf
xchg
imul
loopne
stos
test
outs
inc
xchg
(bad)
pop
mov
cmps
cli
xchg
in
aam
mov
xor
leave
icebp
jnp
cmp
jnp
imul
icebp
pushf
scas
mov
in
add
jae
fistp
jae
das
bound
inc
je
jg
mov
test
mov
mov
push
aam
push
pop
shl
popf
stc
bound
stos
jns
test
out
and
sbb
mov
mov
mov
test
cdq
push
dec
mov
sub
fcom
call
js
fwait
es
cmp
dec
sub
stos
cdq
mov
aas
test
xchg
jecxz
dec
jle
jmp
or
(bad)
cmovb
dec
dec
scas
aam
push
sbb
xchg
sbb
sti
jb
add
fdivr
mov
jge
rcr
push
neg
mov
in
xchg
mov
outs
push
mov
loop
scas
into
std
pop
jg
aad
xchg
push
(bad)
sub
push
rcr
shl
popa
jle
shl
pop
in
sar
rcl
add
and
dec
cmp
jmp
inc
adc
or
popf
add
lods
cwde
bound
popa
clc
out
xor
into
add
push
sbb
or
sahf
jnp
cmc
test
in
add
ror
mov
dec
ror
mov
ffreep
lods
int
ins
inc
mov
jae
dec
shl
pop
or
in
and
pop
add
dec
stos
jns
jo
xchg
test
add
cli
inc
leave
in
sub
xor
pop
add
sbb
jne
test
por
test
cmp
pop
call
loopne
dec
and
jb
test
xor
mov
mov
nop
js
clc
fnstenv
mov
int
mov
cmc
jp
call
std
sub
or
add
or
fsubr
ins
fs
rcl
fcmovu
push
pushf
jmp
push
inc
fdiv
aaa
pop
adc
adc
sbb
inc
inc
mov
pop
(bad)
cmps
cli
sbb
inc
div
mov
out
add
dec
fdivr
jmp
sub
aam
ins
loope
mov
mov
popa
cwde
cdq
xchg
and
(bad)
xchg
(bad)
jle
mov
sbb
inc
rol
push
ds
fdiv
jns
mov
push
call
ins
(bad)
std
sbb
lea
js
(bad)
and
inc
jb
xchg
pop
(bad)
push
mov
jo
push
and
in
add
data16
add
ins
push
ds
test
mov
sbb
(bad)
cmc
add
js
mov
sbb
mov
mov
jecxz
jne
sub
pop
or
inc
call
scas
or
dec
lods
js
jne
mov
cli
sbb
aad
imul
arpl
jno
outs
dec
fmul
sub
in
adc
xchg
aaa
mov
jl
inc
gs
ss
imul
push
or
adc
inc
mov
sub
movs
jmp
push
push
mov
dec
loope
stc
push
sub
add
push
sahf
inc
jns
ins
rol
sbb
xor
dec
and
jp
loop
leave
out
push
dec
pop
fild
adc
ja
mov
xor
dec
arpl
inc
xchg
and
(bad)
mov
xor
fld
inc
jae
push
cmps
into
call
movs
cmps
adc
rcr
cmps
inc
add
(bad)
xchg
test
pop
xlat
or
mov
clc
sub
sub
mov
push
adc
stos
gs
std
or
clc
jg
jg
shl
gs
add
outs
push
sbb
inc
push
cmps
xchg
mov
in
mov
jmp
inc
mov
inc
cmps
mov
inc
das
repz
je
pop
call
jg
cdq
xchg
sbb
loope
jg
in
mov
dec
push
dec
lea
push
or
xor
mov
xchg
test
dec
ds
ret
int3
add
cmp
data16
inc
mov
pop
push
mov
inc
xchg
mov
xor
aaa
popa
fcomip
test
out
push
jg
push
in
sti
pusha
sub
ja
xchg
pop
pop
in
(bad)
mov
mov
push
test
cli
mov
idiv
mov
sar
dec
or
je
sbb
pop
jnp
test
retf
mov
push
cld
mov
ficom
jg
fnstenv
sub
adc
sbb
add
inc
adc
pop
xor
or
xchg
gs
mov
nop
stc
imul
jnp
out
movs
arpl
mov
lock
cmps
sub
jnp
sti
cwde
(bad)
dec
fisub
movs
call
(bad)
outs
cdq
mov
call
dec
mov
sti
dec
ret
or
jg
xor
lods
mov
into
pop
xchg
fbld
test
add
add
xchg
or
mov
inc
ror
xchg
mov
(bad)
mov
test
inc
fsubr
dec
movs
(bad)
out
pushf
arpl
(bad)
stos
lods
add
mov
jl
(bad)
mov
daa
(bad)
loope
test
ins
in
clc
inc
cmp
enter
ror
push
jnp
imul
push
bts
bnd
in
sbb
into
sbb
jbe
sbb
retf
cmp
pop
sti
into
popf
push
rcl
cmp
enter
mov
rol
stos
jnp
pop
lods
xchg
bound
lock
cmc
cmp
xchg
cwde
inc
icebp
push
(bad)
das
aaa
cmp
cli
inc
ss
sbb
push
arpl
popf
jo
push
icebp
retf
lds
enter
jecxz
je
adc
ds
xor
aaa
cwde
sub
pusha
jbe
addr16
ror
ins
cmp
inc
fst
mov
fild
push
push
inc
mov
push
mov
mov
retf
mov
aaa
in
mov
in
mov
test
cs
dec
push
mov
mov
cmp
fnsave
xchg
test
dec
jmp
(bad)
enter
dec
movs
sub
das
test
ss
mov
neg
fidivr
enter
je
call
and
sbb
dec
inc
mov
pushf
xor
cmp
int3
and
sbb
sahf
and
cmps
in
mov
xchg
jne
xchg
xlat
sti
out
and
stc
push
lahf
imul
aad
cmc
cld
xchg
xchg
fcomp
jne
or
adc
in
(bad)
jl
and
adc
xchg
jae
push
lods
mov
out
jl
xchg
cmp
loopne
jb
pop
mov
ss
mov
mov
add
or
pop
xchg
in
pusha
ficomp
dec
sub
js
scas
mov
inc
out
add
cli
jmp
mov
pop
mov
xchg
outs
and
outs
inc
out
cwde
inc
(bad)
push
add
ret
neg
push
(bad)
bound
xor
or
in
pop
jae
mov
push
popf
neg
mov
push
fcomp
inc
ja
mov
mov
movs
je
mov
sbb
into
xchg
bound
adc
sti
out
adc
jge
inc
mov
mov
jae
iret
fwait
adc
lahf
push
bswap
xlat
stos
adc
outs
mov
jge
in
movs
sbb
loope
mov
fdivr
mov
(bad)
sub
cs
scas
data16
pop
or
sub
test
dec
xchg
xchg
test
push
pop
in
clc
mov
ficom
pop
pop
cmc
sub
aaa
stos
sbb
add
outs
pop
mov
sahf
bound
and
int3
mov
retf
inc
xchg
mov
jecxz
div
jmp
retf
xor
jp
cmps
cmps
mov
mov
fdivr
imul
fmul
call
jge
fst
gs
dec
sub
cwde
push
sbb
fs
cmp
add
fst
mov
mov
mov
push
mov
jno
stos
lods
xor
ss
fidiv
cmp
mov
inc
mov
mov
sub
ret
sar
xchg
fidiv
cdq
push
ja
ret
adc
jmp
mov
or
lock
ret
ds
fs
es
xchg
jns
xchg
mov
popa
fist
add
inc
adc
xor
ins
mov
test
sbb
add
(bad)
call
lock
sub
push
ret
js
leave
xchg
push
iret
test
out
jp
test
push
inc
mov
popf
outs
inc
repnz
fmul
fimul
add
test
and
arpl
test
fxch
add
push
retf
add
push
in
sbb
dec
mov
js
mov
sub
dec
dec
fmul
in
mov
fs
push
loopne
fild
retf
int
add
adc
fwait
in
mov
xchg
sub
icebp
sti
dec
mov
ror
pop
xor
test
cmp
movs
addr16
jge
xor
jmp
dec
ret
movs
call
in
ins
or
pop
in
pop
dec
lods
jo
xchg
sub
mov
lahf
and
or
fiadd
or
(bad)
xor
jne
pushf
jns
mov
mov
movs
pop
je
fimul
mov
mov
jne
ss
adc
dec
ret
into
idiv
xor
jo
adc
sub
test
or
or
sub
add
push
xor
(bad)
push
mov
fwait
addr16
scas
xor
push
xor
add
add
scas
dec
icebp
add
mov
xchg
push
pop
lock
mov
mov
popa
cmps
mov
sbb
fadd
mov
jp
outs
leave
getsec
sbb
fucomip
pusha
sahf
inc
pop
pop
inc
lahf
imul
dec
push
jne
test
retf
aaa
pop
iret
outs
int
pop
shr
push
fs
fadd
inc
sub
fcomp
push
data16
xor
mov
push
das
push
aam
xchg
inc
xchg
loopne
leave
sbb
mov
mov
jecxz
shl
icebp
jo
pop
cmp
mov
fld
mov
mov
cmc
push
and
out
int
inc
ret
inc
fs
mov
pop
push
push
xchg
sar
call
push
pop
inc
add
and
jns
or
pop
cmps
jne
mov
bound
xor
fcom
jecxz
dec
jbe
dec
add
cmp
xchg
pop
or
cmps
mov
mov
sahf
xor
lds
bnd
sbb
lds
es
les
aaa
pop
pushf
or
stos
pop
push
scas
mov
sti
sbb
std
xor
in
ins
push
inc
sub
sbb
pop
(bad)
sar
aam
jp
mov
ds
add
rol
fild
data16
cld
pop
mov
pushf
dec
shl
inc
pop
fcmove
mov
cld
mov
push
stos
dec
add
xor
stos
in
push
mov
xor
ss
repnz
pusha
call
mov
inc
push
outs
cdq
xchg
lds
bnd
jp
bnd
inc
or
cmp
inc
or
stos
pop
pushf
or
imul
push
inc
xchg
push
icebp
mov
shl
pop
add
movs
sub
mov
mov
jmp
fsubr
sbb
push
sbb
test
stc
(bad)
xor
push
cmp
out
mov
jnp
push
jae
gs
pop
adc
lahf
data16
sahf
mov
rol
fwait
clc
andps
adc
pop
or
add
lods
push
shr
data16
mov
xchg
bound
sahf
in
loope
test
jg
pop
arpl
pop
xchg
call
fs
test
lahf
and
push
test
pop
inc
mov
loop
cmps
in
rcl
test
cmp
adc
in
jmp
xchg
pop
dec
cli
jae
outs
fwait
mov
retf
mov
mov
jo
fs
std
inc
imul
cmc
pop
int
repnz
jl
mov
fwait
sub
or
push
ror
fisubr
es
xor
cmps
jno
(bad)
in
push
fidiv
fnsave
mov
mov
mov
cmc
ins
arpl
out
dec
add
imul
inc
es
ins
push
dec
clc
dec
sbb
popf
xchg
enter
shl
cmp
loope
ja
cmp
pop
add
and
pop
pushf
push
pop
(bad)
adc
xchg
add
outs
cwde
sti
jecxz
call
lahf
jno
mov
jmp
push
out
enter
adc
inc
xchg
sbb
(bad)
mov
scas
sub
stc
or
sub
lock
cdq
push
sbb
cs
or
sbb
fs
cmp
inc
mov
sbb
pop
addr16
nop
adc
xchg
cmps
ins
add
inc
ret
enter
sar
mov
push
adc
pop
push
faddp
mov
in
lods
mov
add
xchg
div
loop
push
xchg
ss
fxch
and
inc
sbb
mov
jbe
pop
lods
ror
sub
vmovdqu
sbb
sbb
xor
mov
xchg
and
inc
imul
test
dec
jno
shl
fnstsw
daa
xchg
xchg
pop
popf
std
call
push
aad
xchg
sbb
pop
scas
mov
fs
xor
xchg
xlat
ret
mov
sub
ins
mov
and
aam
out
inc
int
jp
aas
movs
ins
push
je
jns
jnp
mov
cmp
or
pusha
sbb
dec
push
jge
aas
mov
outs
push
mov
adc
adc
sbb
les
test
mov
ret
test
jmp
stos
push
pop
imul
mov
mov
ins
arpl
test
icebp
fadd
jae
xor
or
and
adc
pop
stc
imul
mov
fwait
mov
fcomp
sbb
cmp
je
cmp
pop
push
or
mov
loope
xor
outs
(bad)
les
fild
outs
push
cmps
pusha
enter
mov
out
aam
dec
and
(bad)
pushf
xchg
dec
rcr
popf
mov
not
lods
movs
imul
or
sbb
sbb
dec
xchg
add
mov
pop
cmps
sbb
ret
adc
retf
add
xchg
sub
(bad)
jg
mov
jl
xchg
call
in
mov
add
mov
push
xchg
fucom
(bad)
jmp
addr16
(bad)
fdiv
jbe
pop
mov
inc
jb
xchg
repz
frstor
in
mov
pop
cmps
or
and
sub
or
sub
fidivr
pop
pop
adc
mov
stos
mov
call
add
cmp
push
mov
repnz
dec
or
xchg
test
push
aaa
pop
pop
(bad)
in
and
loop
fcomp
dec
mov
ret
xchg
mov
pop
xor
repz
mov
inc
pop
movs
mov
cli
cdq
stos
out
outs
mov
dec
in
lds
rcl
and
add
jae
jne
jb
cdq
movs
mov
or
iret
popa
pop
push
pop
stc
inc
sbb
xchg
pop
mov
rol
lea
mov
pop
mov
cmp
div
je
arpl
jno
les
and
repz
or
adc
jl
add
loopne
leave
cmp
cmp
loop
inc
jle
mov
arpl
xchg
test
push
sbb
fucomip
add
and
xor
pop
mov
scas
add
and
xchg
mov
cmp
push
aam
loope
popf
retf
inc
jp
cmp
jmp
loope
inc
xchg
xchg
add
out
adc
dec
xchg
xchg
imul
movs
jle
xchg
jmp
(bad)
sar
mov
outs
mul
jmp
lods
inc
fistp
push
jns
scas
jne
inc
mov
mov
jnp
leave
sbb
fistp
jb
mov
xor
pop
(bad)
push
fistp
inc
mov
sbb
dec
or
xlat
shl
lds
ins
sub
sahf
and
pop
and
xlat
cmc
or
imul
cmps
jmp
sub
fidiv
sub
add
dec
mov
cmp
fnstenv
ins
je
xor
mov
cmp
jp
mov
div
push
cmp
cmp
nop
push
scas
jae
arpl
pop
xchg
xor
out
mov
ins
pop
add
inc
shr
aad
inc
push
mov
xchg
jmp
push
out
jecxz
and
ror
mov
bound
cwde
pushf
bound
in
ret
test
cmps
jo
dec
xlat
xor
adc
and
xor
test
jb
xchg
test
fyl2x
push
sar
ins
push
sbb
sbb
or
scas
push
scas
sub
inc
jo
addr16
xor
fnstenv
cwde
rol
sbb
mov
pop
mov
jecxz
xor
loop
push
jmp
lea
mov
mov
inc
fsub
mov
cdq
inc
pop
stos
xor
call
sub
jne
mov
push
das
sbb
dec
out
cs
inc
fs
aad
or
sbb
aas
int
dec
fild
nop
xor
mov
data16
inc
cwde
bound
fsubr
cmp
in
out
shl
jno
not
xchg
call
mov
lea
xchg
or
mov
scas
push
dec
fidivr
or
fcomp
retf
fisubr
sbb
xor
fwait
fwait
cdq
and
ficomp
fcmovne
jge
jmp
sbb
sbb
psrlw
mov
pushf
add
mov
cmp
mov
push
fidiv
in
xchg
fwait
or
(bad)
repnz
jne
std
xor
popf
movs
bound
or
mov
test
jmp
sub
icebp
ficom
pop
pop
cmp
test
outs
and
cmp
(bad)
je
addr16
and
mov
pop
or
inc
scas
mov
outs
inc
or
pop
scas
(bad)
jo
sbb
mov
test
shr
xchg
test
aam
mov
(bad)
scas
retf
das
xchg
sbb
repnz
ror
sbb
pop
dec
cli
in
and
pop
pusha
and
jae
or
mov
ror
stc
jbe
stc
add
mov
jb
into
cmp
adc
pop
scas
and
push
adc
or
and
add
push
enter
xchg
icebp
add
adc
push
mov
scas
aam
cmps
into
sbb
repnz
xchg
cdq
cmp
sbb
(bad)
cmps
lock
mov
addr16
into
and
jmp
lods
ins
jg
mov
dec
lods
test
inc
in
shl
mov
pop
ss
fs
jo
cmc
add
mov
pop
fwait
cdq
cwde
adc
xor
lods
cmps
adc
xlat
imul
inc
jnp
ins
retf
xchg
lds
out
inc
fsubp
pop
and
mov
lock
push
and
aam
repz
ins
sbb
cmps
aaa
xlat
dec
leave
pop
push
cmp
pop
push
fs
(bad)
jle
gs
ins
xchg
mov
jp
(bad)
adc
pop
cld
sbb
pop
int
rcr
lea
xchg
add
mov
mov
lahf
repz
xchg
bnd
add
push
in
clc
inc
mov
test
adc
push
xchg
mov
jg
cwde
popf
mov
xchg
jmp
push
inc
mov
retf
or
fld
into
dec
dec
sub
or
arpl
test
mov
pop
in
sti
nop
addr16
push
inc
in
ss
adc
mov
lahf
sub
ins
pop
mov
jg
test
sti
leave
loopne
sbb
cld
pop
push
cmp
dec
xchg
loop
aam
add
xor
sbb
scas
xchg
daa
stos
dec
pop
xchg
and
lods
out
pusha
cmc
mov
dec
ss
jmp
sub
or
mov
pop
push
mov
adc
add
pop
jmp
arpl
or
add
ror
jne
mov
push
repz
mov
inc
lea
(bad)
out
xchg
cmc
mov
leave
mov
test
loope
shr
mov
out
neg
gs
lds
sbb
in
sti
out
and
cmp
or
es
cmp
rol
out
sbb
add
jmp
das
call
ds
xor
sub
mov
cwde
push
fisubr
shl
mov
xchg
mov
(bad)
fcomip
or
and
mov
mov
lea
dec
mov
lods
cmp
arpl
cmp
push
sahf
ins
sbb
dec
sub
xor
ror
ins
jp
loop
sbb
jge
stos
and
cs
imul
and
mov
aaa
inc
xor
sahf
rcr
sbb
mov
popa
cdq
ret
pushf
dec
jmp
(bad)
std
sub
fwait
stos
daa
mov
pop
xchg
fwait
mov
sub
dec
imul
sub
xor
push
pop
adc
dec
mov
call
out
clc
or
add
mov
adc
cmp
ret
xchg
adc
aas
adc
aas
clc
fist
shl
pop
mov
jl
cmc
jmp
push
cli
stos
mov
xchg
dec
xchg
sbb
mov
retf
inc
dec
lea
sbb
rcr
push
pushf
and
jno
push
dec
jae
xor
pop
cdq
mov
cmps
pop
leave
jecxz
ret
push
push
mov
and
clc
inc
adc
push
pop
lods
adc
mov
fidiv
dec
adc
mov
stos
imul
cmp
mov
repz
scas
pop
jge
ret
popf
xor
jmp
xlat
mov
lahf
mov
dec
pop
inc
imul
shl
loop
sbb
mov
push
inc
imul
cld
xor
(bad)
ins
ins
jge
loopne
push
xor
mov
addr16
or
stos
push
je
retf
es
push
fwait
clc
mov
shl
dec
pusha
popf
pop
(bad)
mov
cmp
loopne
sbb
mov
adc
loopne
and
arpl
sbb
xchg
mov
lock
popf
pop
sbb
test
ds
test
cmp
push
mov
imul
icebp
cmp
xor
imul
arpl
pop
xchg
jno
sar
dec
outs
push
lds
cdq
fld
std
stos
outs
call
cli
xchg
jae
dec
mov
mov
call
out
scas
test
addr16
aad
leave
sub
adc
sbb
ror
aas
mov
imul
sbb
adc
(bad)
jg
fiadd
inc
push
mov
cmp
cmp
lea
push
ja
xchg
xor
push
arpl
cmps
xchg
adc
rol
outs
add
test
inc
in
sub
add
test
xchg
and
jle
cli
rcl
sub
fwait
mov
push
iret
fisttp
scas
mov
push
add
enter
jmp
jp
cwde
push
add
mov
iret
mov
cmp
inc
in
fsub
enter
adc
xor
nop
add
imul
cmp
mov
sbb
outs
out
mov
iret
lock
rcr
jno
test
and
int
jne
sub
mov
cmc
stos
mov
inc
xchg
cmps
scas
push
cmp
mov
popf
cmps
dec
leave
das
out
dec
sub
jmp
adc
pop
in
sub
mov
adc
cmps
rcl
adc
cmp
inc
scas
add
and
dec
fs
shr
loop
popa
and
pop
adc
dec
sar
lods
or
jl
and
test
scas
shr
inc
inc
adc
add
fisub
add
movs
pop
add
rcr
leave
jecxz
xchg
xchg
outs
push
pop
pop
cli
add
jbe
mov
retf
pop
cmps
adc
or
and
fwait
mov
inc
adc
std
mov
frstor
inc
cdq
outs
xchg
loope
call
pop
cli
mov
clc
push
mov
call
or
jge
in
stos
sub
push
in
jmp
push
push
cmp
lea
or
mov
sbb
clc
jp
clc
jns
pop
cmp
cmp
or
mov
retf
dec
adc
js
xchg
dec
call
sub
inc
rcr
jo
pop
outs
jg
dec
mov
popa
xchg
jg
retf
or
inc
mul
jae
mov
retf
loop
ins
(bad)
fldcw
inc
retf
or
(bad)
lods
pop
rcr
inc
inc
pushf
inc
sbb
mov
scas
scas
xor
ins
fsubrp
arpl
fidiv
sbb
xor
add
adc
pop
sbb
mov
push
aam
adc
add
and
shr
fmul
or
aam
adc
pop
call
jno
cdq
out
pusha
sbb
shl
jmp
inc
nop
jbe
cmp
add
shl
js
sub
ins
stc
push
push
push
out
call
stc
js
jmp
ret
push
cmp
loop
mov
fisttp
cmp
mov
and
data16
rol
aad
jnp
mov
mov
push
lock
stos
mov
outs
out
jmp
inc
fcompp
icebp
mov
pop
inc
or
or
mov
fadd
and
cmp
ss
sahf
push
or
or
push
int
mov
jne
push
inc
cld
dec
and
add
or
inc
adc
push
nop
shr
(bad)
stos
xchg
aaa
stos
mov
imul
sub
test
popa
test
jge
not
mov
test
jmp
lock
hlt
loope
jmp
xchg
sub
jo
dec
pop
aaa
mov
stos
pop
rol
jnp
lods
jb
push
push
aaa
cmc
dec
vmovddup
loopne
push
pop
or
ds
bound
sbb
inc
adc
add
inc
clc
fadd
mov
pop
jb
push
rcr
pusha
out
clc
arpl
sar
test
jecxz
repnz
(bad)
dec
mov
cmps
pop
pop
fiadd
outs
mov
scas
inc
pop
xor
pushf
dec
jne
gs
daa
pop
and
mov
and
jmp
(bad)
jge
and
and
sub
ins
out
pop
mov
push
cmps
xchg
mov
call
fisttp
retf
and
neg
mov
fs
mov
jmp
mov
jge
adc
aam
pusha
mov
jo
jb
adc
sub
clc
cmp
xor
lods
xor
mov
jbe
jecxz
fucomip
jae
jbe
jmp
adc
dec
push
cmps
inc
test
sub
aam
add
test
add
push
call
aad
push
rcl
push
jmp
rol
mov
int3
xchg
mov
hlt
dec
sbb
mov
into
jg
adc
popa
mov
jl
mov
jle
pushf
retf
nop
adc
enter
arpl
and
sub
js
pop
xchg
add
pop
fdiv
test
mov
add
cmp
fadd
loop
push
sub
pop
rol
inc
lahf
push
xchg
in
sub
mov
movs
mov
fidivr
popf
dec
popa
cmps
xchg
mov
xor
pop
sbb
std
ds
dec
retf
fnstenv
jnp
dec
mov
dec
ds
test
movs
mov
lods
add
iret
das
mov
jno
imul
sub
out
outs
jns
jbe
mov
je
xchg
test
mov
inc
xchg
int
(bad)
arpl
dec
and
push
clc
pop
sbb
cmps
stos
sbb
imul
dec
mov
aam
nop
clc
(bad)
jg
mov
in
sub
lock
pop
jnp
outs
sbb
jae
xchg
mov
pusha
jmp
bound
sbb
jbe
adc
jns
(bad)
or
xlat
or
or
pop
jnp
scas
and
inc
je
dec
les
mov
xchg
sbb
scas
ja
popa
test
mov
(bad)
gs
ret
test
nop
sahf
push
int
test
and
mov
mov
cmp
mov
bound
pop
and
mov
hlt
add
neg
or
sbb
sub
pop
scas
jge
mov
jp
stos
mov
pushf
test
inc
jl
fwait
sub
mov
push
in
xchg
push
sar
pop
cmp
mov
cmc
test
test
mov
repnz
cmp
jp
pop
and
je
inc
add
dec
ins
clc
jo
jae
test
(bad)
leave
push
lds
ret
inc
adc
sbb
popf
inc
adc
jmp
push
pushfw
repnz
test
jnp
sub
cdq
leave
xor
xchg
inc
xor
fldcw
cmp
mov
pushf
sbb
fldpi
mov
xchg
and
xor
jo
inc
jnp
inc
fcom
adc
in
pop
inc
jmp
jl
icebp
or
gs
and
add
mov
shl
mov
js
cdq
popf
cmp
adc
iret
cld
sti
adc
retf
jp
inc
outs
lea
stc
xabort
mov
loop
aad
inc
or
out
or
imul
push
jb
(bad)
mov
or
shr
mov
jecxz
jmp
retf
jmp
pop
jp
push
add
ror
push
and
dec
jmp
jns
jbe
not
mov
mov
int
push
fmul
pop
popf
add
ror
loopne
in
rol
outs
mov
ret
xor
or
lock
pushf
out
cmps
imul
(bad)
(bad)
mov
sub
ror
ds
test
dec
push
push
xchg
fnstcw
ins
(bad)
fstp
ret
push
add
dec
adc
and
jmp
inc
fbstp
xchg
pop
xchg
fcomp
std
lock
cmp
add
push
xchg
(bad)
repz
push
in
imul
dec
repnz
mov
sar
scas
jmp
sub
ss
ds
les
jle
push
(bad)
addr16
lahf
xchg
popf
or
shl
adc
call
lds
dec
adc
and
dec
lods
outs
adc
mov
ss
retf
cmps
mov
in
add
pop
jge
cwde
dec
cld
xchg
inc
mov
loop
push
xchg
stc
xchg
add
imul
test
push
xor
rcl
and
add
dec
shl
or
adc
jae
test
fs
pop
xor
aaa
or
inc
dec
cwde
jl
cmps
push
inc
xchg
mov
pop
(bad)
stos
mov
jecxz
inc
and
jle
icebp
jmp
xor
div
and
mov
xlat
pushf
mov
clc
jge
out
pushf
dec
shl
es
cmp
sti
mov
add
pop
push
mov
mov
pushf
adc
les
in
cli
xor
and
inc
sbb
pop
sub
sbb
pop
cmp
mov
aam
mov
mov
inc
cwde
jb
mov
dec
mov
mov
jmp
in
dec
xchg
dec
mov
rcr
cdq
std
cmp
scas
jp
inc
cmc
sub
adc
push
pusha
cmp
mov
pop
jmp
pop
(bad)
dec
(bad)
retf
sbb
sti
data16
cmp
xor
(bad)
cmp
adc
inc
mov
pop
ret
cmp
pop
push
mov
push
lahf
jmp
inc
mov
mov
xor
mov
shl
xchg
stos
dec
call
xor
xlat
xlat
sub
xor
ds
das
pop
inc
cld
push
inc
ja
mov
out
pusha
fmul
sbb
imul
das
or
sub
sub
pop
ja
push
add
and
call
add
outs
(bad)
(bad)
jbe
mov
mov
mov
pminub
repz
gs
cmp
fwait
pushf
std
daa
inc
fadd
sbb
fdivr
dec
call
xlat
dec
pushf
sbb
push
aas
mov
js
fwait
push
pop
dec
mov
cdq
xchg
aaa
aaa
out
outs
into
neg
mov
add
push
or
push
adc
cwde
loope
aaa
xor
cmp
loop
jecxz
push
data16
outs
enter
loop
mov
add
retf
xchg
jnp
mov
fwait
(bad)
xchg
or
retf
imul
call
cmp
cmp
pushf
push
push
jge
pop
dec
lods
xchg
fwait
mov
sub
mov
inc
jne
add
inc
xor
add
rcl
dec
arpl
xor
bnd
jmp
dec
ds
pop
repz
dec
sti
mov
jnp
push
cmp
pushf
(bad)
xchg
jmp
mov
mov
aad
fst
cmp
ror
push
sbb
xchg
sbb
call
aam
cmps
pop
repz
mov
and
ja
mov
bound
jg
pushf
adc
sub
sbb
xchg
add
gs
cmp
sub
xchg
lds
sbb
push
out
push
or
jle
std
test
dec
sbb
mov
or
push
xchg
je
aaa
sub
out
(bad)
cmp
fs
fstp
pop
pop
scas
pop
or
push
fsub
loop
mov
cmp
ja
mov
dec
ins
lea
xchg
adc
mov
imul
xchg
aaa
mov
pop
push
fisub
mov
gs
ret
cld
xchg
(bad)
std
mov
loopne
test
fsubr
loopne
sub
int3
cwde
test
pushf
dec
(bad)
mov
sub
shl
enterw
pusha
xchg
jle
lea
pop
cdq
test
mov
push
stos
outs
in
add
cmp
push
or
sub
mov
call
xor
cmp
or
les
js
and
inc
mov
test
mov
repnz
jle
xchg
mov
dec
call
inc
mov
cwde
clc
xchg
adc
cs
out
push
out
push
data16
push
ins
push
mov
xchg
xchg
xchg
cmp
icebp
cs
adc
retf
dec
adc
mov
inc
adc
or
mov
adc
clc
mov
jmp
popa
dec
xor
mov
inc
enter
in
shl
movs
call
les
mov
(bad)
jl
mov
or
mov
jge
jnp
pop
bound
inc
pop
dec
cwde
cmps
test
fstp
mov
pop
ja
add
add
cwde
aas
xchg
pop
(bad)
jae
cdq
or
fstp
mov
push
dec
in
cdq
sbb
pop
pop
jl
xor
mov
push
xor
pusha
sbb
dec
cmc
mov
mov
test
fbld
cmc
fwait
dec
shr
ss
mov
inc
nop
inc
jb
dec
cmps
adc
jo
dec
cmp
stos
xchg
nop
mov
fdivr
sbb
or
cmp
mov
pop
push
test
cmp
scas
xchg
pushf
adc
scas
mov
enter
gs
mov
and
in
push
xchg
xchg
jno
jmp
mov
xchg
sar
mov
xchg
xchg
mov
shl
in
movs
xor
pop
mov
sbb
inc
fisttp
and
inc
and
cwde
xchg
or
addr16
cmp
xchg
pusha
push
dec
sbb
or
pop
sub
pxor
push
cmp
cmp
sub
popa
jmp
fisttp
fsub
pop
mov
and
neg
xor
in
sub
cmps
mov
retf
scas
mov
cmps
cmp
sub
das
and
cmp
inc
pop
and
or
and
mov
lods
gs
sub
push
out
outs
add
leave
add
adc
test
retf
jmp
(bad)
imul
xchg
sti
js
(bad)
jecxz
shl
cmps
aaa
int
xchg
cmps
mov
bsf
lea
aam
lods
lock
loop
jno
pop
mul
pop
adc
repz
push
out
cs
xor
bound
pop
xchg
mov
pop
popf
call
inc
jp
lds
or
pop
xchg
adc
push
cli
outs
jo
dec
and
or
mov
movs
sub
adc
dec
mov
sti
dec
jno
stos
pop
ret
mov
inc
in
xchg
outs
repz
std
or
xchg
xchg
mov
dec
mov
mov
xchg
mov
repnz
inc
sbb
hlt
scas
dec
loopne
inc
sbb
dec
lods
jo
inc
xchg
cwde
mov
inc
repz
adc
or
sub
gs
or
mov
test
pop
and
in
inc
(bad)
loopne
in
add
mov
mov
(bad)
jecxz
push
repnz
scas
mov
jns
mov
xchg
fild
mov
push
sub
cli
aad
jns
aaa
jp
ins
fisubr
and
dec
sub
or
sub
aad
les
jbe
and
cmp
jmp
add
popa
lahf
mov
aas
mov
(bad)
mov
icebp
imul
imul
aam
pop
cmc
xchg
or
mov
mov
xchg
dec
cmps
movs
fdivr
lods
fimul
mov
div
mov
in
cmp
cmp
push
pop
add
imul
lahf
mov
push
(bad)
fs
cld
pop
adc
mov
sti
pop
ins
fdivr
stos
sub
xchg
stos
xor
call
pop
retf
add
pushf
jg
ret
(bad)
arpl
test
(bad)
cmc
add
xchg
out
pop
or
xchg
hlt
xor
sti
test
iret
adc
hlt
gs
add
inc
scas
sbb
push
stc
addr16
popa
nop
mov
mov
scas
jl
mov
jne
call
sub
ja
dec
daa
adc
mov
push
jg
(bad)
loope
mov
fisttp
jb
pusha
cdq
add
mov
in
add
out
adc
sbb
pmaxub
mov
sti
rcr
sahf
fistp
das
sbb
rcr
mul
sbb
sub
adc
sti
bound
lods
pushf
int
push
or
inc
out
pop
cwde
inc
jb
fiadd
push
add
adc
inc
addr16
jl
test
jge
out
pop
xchg
jecxz
(bad)
dec
inc
jae
pop
in
test
mov
inc
jmp
inc
dec
hlt
clc
xchg
jnp
ins
nop
stos
add
cwde
jns
mov
cld
xor
cdq
jp
push
stc
sbb
dec
cmc
(bad)
jecxz
retf
add
pop
aas
rol
jl
aaa
and
mov
xchg
push
div
jmp
inc
cmc
cmp
or
sbb
popa
pusha
xchg
lods
cmp
stos
mov
fcmovbe
xor
fadd
call
pop
cwde
jo
(bad)
out
mov
xchg
mov
mov
out
scas
cli
ffreep
xor
outs
adc
fbstp
test
int
pop
push
push
icebp
and
inc
mov
xor
xchg
aaa
ss
gs
jmp
xchg
sar
pop
cmp
xor
cmp
dec
fisttp
aad
add
or
mov
test
push
test
fisttp
mov
lds
movs
por
mov
pop
rcr
mov
mov
cli
hlt
mov
les
lea
and
mov
fs
and
movs
rcr
shl
add
push
jmp
add
adc
sub
sbb
addr16
add
(bad)
xor
scas
cmps
inc
mov
js
xchg
lods
les
mov
cmps
arpl
(bad)
mov
xchg
inc
stos
movs
stos
iret
or
mov
push
test
mov
sbb
imul
push
jl
fild
addr16
mov
mov
test
adc
sub
arpl
add
aam
inc
xchg
aam
sub
fnstenv
clc
outs
jns
shr
mov
cmp
jmp
add
xrelease
les
(bad)
mov
sbb
pop
rcr
scas
(bad)
pop
popa
lods
fbld
dec
xlat
dec
aas
adc
out
jae
dec
mov
pop
sub
call
ret
(bad)
cmp
add
in
sbb
sub
jnp
mov
push
ror
inc
in
mov
std
rcl
(bad)
pop
pop
jo
pop
mov
test
int
pop
sub
in
or
outs
icebp
lods
mov
pop
movs
dec
jo
(bad)
cmc
xor
call
pop
dec
lahf
lea
push
mov
pop
dec
iret
fdiv
push
pop
mov
cdq
pusha
pop
push
mov
fsub
nop
push
cmps
lock
inc
pop
add
xor
mov
pusha
dec
cdq
or
xchg
sbb
movs
stc
or
or
retf
iret
std
push
jns
inc
xchg
cmps
cli
popa
mov
mov
adc
push
push
xchg
shr
iret
(bad)
pop
pop
lods
mov
ja
xor
aam
lods
pop
fisttp
cmp
xor
xchg
mov
push
iret
fs
cmp
cmc
jno
push
inc
aad
xor
ds
or
xchg
and
cdq
sbb
add
cli
test
push
les
and
jnp
(bad)
fnsave
idiv
sub
in
push
mov
mov
jle
or
rcr
popf
cmp
push
test
out
in
ja
inc
sbb
test
inc
pop
outs
cmps
mov
lock
jmp
jb
clc
cmp
js
sbb
jns
mov
inc
nop
dec
inc
(bad)
xchg
or
and
in
mov
xchg
shl
inc
arpl
ins
rol
imul
jmp
xlat
not
sahf
scas
mov
mov
xchg
mov
bound
loope
imul
inc
inc
out
xor
pop
stc
xor
in
push
fild
pusha
sub
movs
xor
test
outs
mov
or
mov
cmp
pop
xor
jl
daa
test
mov
inc
mov
fwait
sub
dec
push
in
cli
test
mov
push
fcomp
push
sub
sar
in
loopne
fidiv
mov
test
repz
mov
ficomp
mov
popa
int
std
or
dec
ror
jbe
pop
imul
sbb
jo
dec
xchg
pushf
mov
cld
int
mov
aas
jecxz
and
aas
mov
fist
movs
push
adc
div
inc
sbb
loope
scas
fstp
inc
push
pop
mov
(bad)
cdq
int
inc
repnz
pop
sub
loopne
jp
jl
mov
gs
mov
sub
jno
je
cmp
enter
jne
inc
mov
inc
push
stos
inc
sbb
mov
mov
out
movs
loope
pop
fs
mov
sbb
jg
popf
verr
adc
and
in
push
fisubr
dec
fwait
jle
mov
test
mov
repnz
sar
cmps
push
cmps
mov
in
stos
xlat
xor
mov
cmc
or
cmp
pushf
inc
imul
ins
pop
(bad)
xor
(bad)
out
xchg
popf
xor
into
dec
rcr
sub
rcr
and
add
aas
xchg
jo
push
jbe
pop
add
sub
jmp
pop
add
scas
sub
mov
mov
das
hlt
retf
stos
xor
imul
mov
adc
loop
nop
repnz
add
call
(bad)
gs
pop
push
sbb
es
outs
mov
inc
out
retf
mov
les
jmp
call
dec
cmp
cmp
sbb
pop
adc
mov
sbb
pop
jmp
xchg
xor
pop
jp
lahf
jnp
xchg
sub
mov
cmp
xchg
lods
mov
push
mov
mov
push
bnd
call
call
sub
fidivr
pusha
sub
mov
pop
inc
mov
cdq
ror
sahf
mov
ret
mov
push
addr16
mov
sbb
or
xchg
fsub
or
push
xor
jmp
data16
dec
jle
movs
xor
xchg
jmp
fwait
out
sbb
mov
xchg
cmp
mov
fdiv
xchg
(bad)
mov
xor
ret
xchg
cld
fdivr
scas
fcomp
ja
pop
and
sar
into
jns
or
push
push
in
sub
xchg
xchg
nop
leave
and
ret
sub
jl
jmp
xor
and
gs
push
cmp
test
in
aad
and
inc
jae
outs
inc
std
outs
mov
mov
adc
out
setp
adc
lock
das
mov
adc
push
out
sbb
iret
(bad)
(bad)
shl
cs
cmp
and
rcl
adc
push
mov
inc
adc
(bad)
cmp
inc
jl
mov
popa
adc
pop
cdq
mov
xor
and
rcl
es
outs
inc
ror
aad
mov
xor
push
sub
cmps
mov
xlat
popa
cmc
mov
mov
fild
mov
mov
icebp
fsubrp
inc
mov
push
aad
pop
dec
or
popa
mov
inc
add
mov
test
fs
xor
sbb
jns
adc
dec
jnp
or
mov
loop
cwde
or
jmp
fs
popfw
push
(bad)
movs
fild
into
jecxz
loop
sbb
stc
xchg
sub
inc
cli
cmp
mov
rcr
mov
add
addr16
xor
aaa
aaa
cmp
out
scas
and
and
outs
mov
sub
dec
test
push
fstp
loope
xchg
pop
push
or
in
fs
sub
mov
xchg
add
or
test
push
mov
sub
call
arpl
push
inc
call
inc
loop
jge
xchg
stos
popf
or
add
mov
jle
xchg
(bad)
and
clc
clc
cld
shl
cdq
stos
dec
xchg
pop
cmps
push
add
lock
imul
and
mov
int3
or
jl
test
xlat
jno
inc
and
sub
push
mov
sar
nop
dec
fnsave
jl
fyl2xp1
xor
pop
pop
pushf
clc
mov
rcr
sbb
lahf
push
xchg
test
and
sti
adc
sub
cmps
fs
(bad)
retf
sbb
xor
(bad)
mov
je
xor
jns
cs
stos
outs
push
inc
mov
test
(bad)
jmp
push
pop
mov
mov
jne
mov
dec
fsubr
xchg
and
pop
and
inc
test
xchg
dec
and
mov
(bad)
in
mov
lea
sar
arpl
mov
sbb
push
call
cdq
sbb
in
or
lods
ss
jmp
popa
pop
inc
aaa
loopne
pop
inc
sub
inc
mov
mov
push
mov
loope
inc
xor
es
into
add
pop
add
jne
rcl
movs
rol
xor
fsubr
or
addr16
fwait
call
mov
shl
call
inc
rcl
sbb
dec
in
fldl2t
dec
in
dec
push
ja
sub
sub
nop
xchg
sub
fadd
mov
mov
and
push
cs
pop
lods
add
xor
inc
jb
or
scas
cmp
xchg
sahf
add
retf
sbb
pop
push
fisubr
hlt
mov
xchg
ja
cwde
jns
call
sbb
sbb
(bad)
(bad)
xor
imul
mov
cmp
dec
icebp
fsubrp
arpl
adc
mov
gs
scas
adc
into
arpl
add
cmp
add
(bad)
call
jae
mov
push
xchg
dec
push
out
xchg
cwde
aas
inc
adc
sti
lock
enter
data16
mov
arpl
movs
gs
test
icebp
add
inc
mov
test
pop
fwait
fwait
mov
mov
out
jl
mov
ret
inc
sar
inc
(bad)
fidiv
cmp
lods
or
xchg
cmp
adc
aaa
fist
jmp
jp
push
daa
fnstcw
sbb
cmp
push
push
test
xor
and
in
sti
adc
dec
push
inc
mov
arpl
mov
xchg
add
imul
(bad)
dec
(bad)
stos
std
add
or
ja
mov
jnp
sbb
hlt
jle
sbb
sub
mov
pop
or
dec
push
cld
push
fld
push
imul
sub
es
cdq
pop
inc
pushf
or
stos
neg
sbb
gs
mov
mov
inc
fstp
inc
cbw
sub
test
pop
sahf
loop
inc
jmp
jp
test
cmps
sub
lahf
xchg
cmc
into
shl
mov
test
scas
jb
inc
inc
cmp
imul
jmp
sbb
fiadd
and
xor
in
ss
or
pop
je
push
push
xlat
ss
nop
stc
outs
sbb
xchg
xor
(bad)
pop
ror
movs
dec
(bad)
(bad)
jnp
aad
inc
pushf
lahf
or
into
icebp
mov
xchg
sbb
mov
jle
mov
loop
xchg
loope
sbb
ins
fidivr
adc
bound
sahf
push
inc
lea
dec
test
fnsave
lock
mov
inc
fs
inc
ja
add
or
ins
push
mov
lea
dec
or
dec
(bad)
adc
loop
aad
jmp
mov
out
mov
jecxz
mov
cwde
imul
add
dec
xor
sbb
icebp
clc
pusha
loop
add
dec
rol
lea
dec
in
xchg
ja
jmp
sbb
xor
jnp
pop
lods
pop
leave
daa
cmps
sbb
test
xchg
xor
test
je
jo
and
cwde
ret
ror
iret
jecxz
cmp
jl
(bad)
fdiv
xchg
sub
cli
repz
mov
cmp
inc
fimul
inc
aam
(bad)
and
call
pop
mov
add
imul
pop
push
dec
cmp
and
sbb
fisttp
add
movs
mov
add
xor
mul
adc
xchg
je
xchg
xor
add
adc
dec
icebp
movs
xchg
mov
mov
and
jecxz
cmp
sti
push
scas
cmp
dec
(bad)
shl
sbb
data16
cmps
mov
push
test
adc
jmp
jl
inc
ret
pop
adc
ja
adc
push
or
pushf
and
push
pop
shr
in
inc
jbe
inc
xlat
mov
inc
mov
mov
daa
in
in
ja
dec
test
inc
mov
xchg
leave
lock
popa
inc
stos
fwait
outs
nop
sub
retf
enter
sbb
jns
or
mov
mov
pop
in
mov
pusha
pop
fldenv
gs
push
daa
mov
int3
sub
addr16
sub
test
xchg
and
jnp
stc
mov
ret
sbb
dec
xchg
movs
call
out
sub
pop
in
call
and
scas
loope
dec
jne
lahf
push
aam
ror
retf
sbb
xor
or
add
mov
out
loop
jnp
aad
or
(bad)
pop
sub
add
and
fcomp
lods
adc
mov
xchg
scas
xchg
xor
push
ins
lahf
cs
fisttp
mov
jl
loop
push
in
xor
bound
nop
jle
xchg
mov
shl
cmp
lahf
inc
loopne
not
sbb
clc
repnz
adc
ins
sbb
jbe
ja
retf
dec
or
inc
ret
nop
and
sbb
and
pop
and
adc
dec
push
add
mov
push
scas
xchg
test
push
xor
fiadd
retf
adc
pop
scas
imul
mov
dec
(bad)
xchg
push
sub
jecxz
sub
jle
xor
mov
nop
cmp
cld
leave
xchg
repz
xchg
xchg
dec
iret
push
out
dec
and
ror
retf
inc
call
fistp
jns
dec
add
ret
into
mov
jmp
call
pop
xor
add
adc
pop
dec
fld
cmp
adc
push
dec
xchg
fsub
lock
push
inc
xchg
push
icebp
lock
shl
cmps
test
dec
stos
push
data16
cmps
add
int
movs
in
enter
fidiv
in
repnz
ss
mov
sbb
cmp
dec
push
pop
mov
movs
lods
push
or
icebp
jle
pop
sbb
cmp
push
lods
xor
outs
pop
fbstp
or
mov
xchg
shl
icebp
je
pusha
fwait
inc
clc
cwde
xchg
mov
(bad)
cmc
call
lds
movs
sar
xchg
xchg
mov
or
clc
or
cdq
dec
in
stos
xor
sbb
push
inc
jp
sahf
or
pop
clc
inc
pop
dec
mov
fistp
aam
xchg
rcl
and
add
jno
mov
mov
mov
push
jmp
lahf
das
inc
pop
jnp
leave
(bad)
cmp
dec
pop
daa
scas
push
mov
mov
aad
dec
pop
(bad)
stc
xchg
ins
fiadd
cmps
movs
fabs
or
mov
xchg
pushf
test
es
ficomp
jnp
mov
popa
pop
mov
mov
add
sub
xor
inc
add
mov
gs
test
mov
mov
int
mov
dec
push
test
fldenv
xchg
nop
push
out
mov
repnz
(bad)
push
scas
inc
jo
adc
(bad)
cld
dec
jne
test
jmp
sti
inc
es
sub
xchg
inc
dec
sahf
addr16
dec
stos
mov
jmp
cwde
sar
(bad)
push
fs
int
or
or
je
pop
sbb
xchg
or
xchg
setl
add
jp
pop
mov
(bad)
mov
pop
xchg
retf
cwde
jne
mov
push
out
fist
scas
test
mov
xlat
ret
jmp
das
call
retf
mov
cmp
or
xchg
je
jle
stos
retf
sbb
pop
repnz
add
data16
enter
inc
mov
push
xchg
mov
jecxz
stos
add
jmp
outs
cli
cdq
in
xchg
sti
inc
jmp
aaa
shl
in
pop
cmps
ins
inc
cmps
add
jge
ret
inc
(bad)
dec
scas
push
inc
xor
inc
pop
or
push
std
cmp
out
fisttp
ins
retf
or
push
imul
ss
or
bound
mov
mov
mov
not
mov
xchg
push
inc
test
xchg
mov
jecxz
jns
fcmovnbe
test
xchg
pop
nop
mov
push
cmps
enter
cli
shl
hlt
cli
jns
lea
sub
cs
dec
sbb
addr16
js
outs
aas
jbe
xchg
xchg
lods
push
or
ins
fsubrp
jl
out
push
or
add
aaa
cs
and
lods
pop
test
neg
push
ror
push
mov
push
mov
cmp
cli
popf
inc
mov
outs
pop
lods
ja
xchg
(bad)
pop
xchg
mov
pusha
fadd
and
jl
mov
dec
bound
mov
test
pushf
mov
push
in
adc
xor
jmp
(bad)
cli
sbb
gs
push
or
(bad)
mov
cmp
add
jmp
ret
inc
xor
mov
jno
jb
ror
pop
movs
mov
inc
enter
test
jbe
pop
dec
bound
xor
loop
dec
in
mov
iret
data16
gs
mov
(bad)
stos
(bad)
in
pop
mov
clc
sbb
xor
ret
dec
push
cmp
pop
bound
inc
add
mov
push
stc
push
fstp
cmp
cmp
pop
aaa
or
or
sbb
xor
(bad)
movs
into
lea
xor
jmp
xchg
sbb
fisubr
repnz
sar
int3
push
xor
dec
push
mov
test
and
jmp
mov
aaa
and
ret
fs
adc
jns
ss
cmp
stos
int3
cwde
sub
cmc
imul
or
or
add
in
and
push
push
test
test
pop
das
jae
sti
xchg
sbb
sbb
(bad)
in
xchg
mov
arpl
loope
or
test
cmp
mov
jecxz
rol
jns
test
fisttp
(bad)
je
add
cmp
xchg
push
jge
mov
adc
mov
push
dec
inc
cmp
jno
test
inc
pusha
fmul
stos
mov
or
daa
jp
test
jle
sbb
lock
out
mov
out
out
pop
or
movs
scas
jae
sbb
mov
sub
test
fadd
ja
jno
sbb
int
sar
push
ins
and
imul
into
or
arpl
in
das
cwde
mov
cmp
cmp
js
add
sbb
pop
sbb
lea
add
jae
out
out
pushf
mov
pop
push
mov
fdivr
mov
add
inc
call
mov
xchg
cmps
scas
xor
ror
cmp
jp
sbb
or
jmp
jl
cmp
test
retf
xchg
mov
ret
mov
inc
jmp
adc
aas
mov
cmps
push
xor
add
(bad)
adc
out
in
rcr
icebp
bound
ret
hlt
test
lock
jno
fsub
add
inc
lea
fld
xchg
lea
push
dec
or
aad
jnp
and
ins
mov
push
cs
inc
sub
xchg
rcl
add
(bad)
and
xchg
imul
mov
adc
push
mov
push
(bad)
popa
push
mov
mov
jns
fbld
adc
(bad)
mov
sar
sahf
xchg
clc
aas
mov
mov
(bad)
aas
push
mov
xchg
sub
dec
pop
dec
fdiv
mul
pop
jl
xchg
push
inc
cmp
push
cmp
mov
jl
int
popf
rol
add
jae
mov
mov
mov
push
test
test
or
push
jno
outs
loope
add
stos
je
xchg
jne
(bad)
std
sbb
dec
xchg
xchg
pop
xchg
mov
xor
std
lods
(bad)
in
inc
stos
xchg
push
cli
je
adc
es
std
push
call
lahf
sbb
pop
pop
lods
mov
cmps
pop
cld
idiv
ret
pop
push
and
or
mov
inc
imul
cmp
cmps
mov
ret
dec
pusha
inc
ficomp
mov
pop
xchg
call
fstp
mov
les
loope
(bad)
xor
mov
aaa
aam
call
push
ret
dec
std
or
std
inc
lahf
push
add
fsub
outs
xchg
dec
sub
mov
or
sbb
shl
sbb
cmp
sbb
pop
or
mov
imul
cdq
push
xchg
xchg
sbb
add
call
jmp
je
gs
mov
leave
cs
inc
pop
mov
mov
jg
outs
inc
mov
jp
dec
shl
and
lock
jnp
gs
imul
and
stos
mov
sahf
sub
scas
fs
sbb
(bad)
jl
int
es
or
(bad)
and
mov
pop
test
pop
retf
inc
mov
add
mov
xchg
lds
leave
mov
adc
(bad)
xchg
push
test
sub
ss
fcmovne
scas
rcl
bound
cmps
inc
fidiv
ucomiss
clc
mov
pop
fsub
pusha
mov
sbb
cli
dec
or
and
mov
add
or
jg
scas
ja
mov
jge
mov
pop
add
mov
dec
jnp
jp
(bad)
imul
mov
jl
mov
xchg
in
sbb
mov
mov
sbb
pop
lahf
mov
sub
jmp
aaa
popa
mov
pop
push
call
dec
lea
icebp
gs
push
popa
pop
pop
mov
das
data16
push
enter
push
call
mov
inc
stc
retf
and
hlt
pop
fisub
mov
outs
test
xchg
out
ret
sub
mov
jnp
test
mov
jmp
call
test
and
inc
(bad)
push
inc
sbb
es
mov
and
xchg
mov
call
aas
mov
sub
sbb
inc
dec
shl
mov
inc
mov
mov
jmp
retf
inc
dec
jbe
ins
repz
jnp
in
addr16
or
lds
mov
ins
ins
out
std
sbb
scas
mov
pop
mov
(bad)
cmp
out
pop
retf
inc
jp
cmp
push
adc
lods
push
or
sbb
jmp
xor
add
mov
arpl
rcl
lahf
sub
fdiv
and
mov
into
add
push
inc
shl
xchg
lds
retf
enter
xchg
div
je
jnp
movs
sahf
aad
cmps
push
sbb
pop
mov
(bad)
daa
cmp
aad
sar
sbb
xchg
push
push
inc
mov
dec
pop
dec
loope
add
enter
sub
or
xor
jb
xchg
push
test
mov
or
int
xor
jbe
js
popa
shl
mov
add
in
adc
pop
xchg
xchg
sbb
sahf
xor
in
int3
rol
mov
sbb
rol
je
jns
push
jge
adc
iret
push
pop
icebp
data16
jnp
into
inc
push
add
fsub
adc
xor
js
mov
sub
or
mov
dec
loopne
mov
ret
jl
pop
xchg
fimul
pushf
push
fsubr
mov
mov
inc
mov
fcmovu
mov
sahf
mov
sbb
adc
mov
inc
(bad)
adc
outs
mov
bound
inc
push
push
or
mov
inc
push
inc
add
inc
aaa
jne
and
sbb
fnstenv
test
inc
mov
mov
adc
jns
scas
movs
cmp
pop
and
out
xchg
retf
mov
fnsave
mov
test
add
cmp
shl
mov
sub
push
and
addr16
sub
cs
mov
jae
retf
add
fsubr
sbb
imul
mov
xchg
sub
pop
push
mov
pop
mov
and
shl
or
lea
sahf
in
xchg
retf
movs
jo
lahf
pop
xor
fsubr
scas
movs
mov
mov
mov
add
cmp
mov
lock
lock
data16
jnp
mov
dec
adc
mov
mov
into
nop
js
aad
jl
and
sub
nop
sub
ins
int
jne
pop
dec
mov
pushf
adc
mov
call
mov
cmp
loope
jge
mov
mov
fsubr
call
mov
scas
xor
into
jmp
call
fsub
cmps
aaa
sbb
pop
popf
aaa
je
ds
inc
pop
outs
out
cmps
xchg
adc
push
jmp
add
mov
or
jp
fwait
push
or
scas
adc
outs
lahf
test
pusha
inc
pop
lods
ins
stc
iret
fild
(bad)
xchg
inc
neg
test
(bad)
jmp
call
push
in
imul
xchg
mov
and
sahf
dec
push
cmp
or
and
mov
sub
push
(bad)
loop
mov
sub
inc
ja
and
lea
mov
cmps
push
dec
mov
jge
mov
(bad)
mov
mov
push
pop
mov
pusha
mov
jmp
or
xlat
lods
xor
test
sub
pop
inc
cdq
fisubr
ret
xlat
jns
(bad)
fcomp
je
pop
cmp
stc
push
or
test
pop
push
mov
mov
clc
je
mov
fisttp
fldenv
mov
inc
inc
mov
ins
mov
jns
(bad)
xchg
and
dec
cmp
outs
jmp
mov
mul
je
nop
mov
movs
std
in
addr16
movs
sub
dec
test
pop
fwait
es
dec
and
mov
leave
jbe
cld
setnp
jo
pusha
aaa
(bad)
pop
push
arpl
cmp
mul
fmul
xlat
adc
fwait
xchg
pushf
imul
sbb
bound
scas
ja
mov
call
ret
rcr
mov
jns
loop
mov
out
cli
call
dec
in
int
push
sbb
clc
std
inc
retf
pop
push
fcomp
or
mov
stos
pop
vcvtsi2sd
fistp
xchg
sub
jne
push
imul
and
push
inc
std
shl
daa
mov
push
(bad)
sbb
jns
sub
mov
xor
jmp
mov
je
mov
shl
icebp
fild
mov
jbe
jl
sub
cmp
fsubr
adc
jne
jbe
push
mov
retf
mov
inc
(bad)
iret
jo
retf
cmovp
in
add
adc
gs
jp
test
mov
add
sar
pop
xchg
mov
push
gs
stos
inc
xlat
into
loopne
sti
int
je
mov
push
shl
idiv
out
mul
pop
jo
xchg
stos
sbb
ret
or
mov
xchg
jno
adc
aaa
repnz
inc
lahf
cmp
sbb
sub
jp
jno
push
xor
stc
(bad)
sub
test
sbb
sub
scas
push
xor
push
cmp
aam
ss
cmp
(bad)
mov
fistp
and
leave
jge
out
inc
(bad)
mov
mov
test
sar
xchg
sbb
mov
xchg
cmp
jl
pop
pop
inc
retf
and
pop
jo
jno
add
jg
push
pop
mov
shr
in
or
retf
push
dec
push
jle
popa
jmp
mov
fcomp
or
lods
xchg
aas
daa
pop
push
mov
jbe
mov
imul
mov
mov
ret
dec
mov
mov
mov
xor
(bad)
cmps
loop
pop
adc
fwait
push
out
push
in
push
adc
fdivp
jbe
daa
inc
xor
jne
fs
add
add
dec
dec
jbe
add
push
outs
je
daa
xchg
setg
lods
ins
dec
scas
pop
add
movs
cmp
or
retf
leave
cld
popa
(bad)
pop
inc
test
mov
imul
loopne
adc
pop
movs
mov
push
lea
xchg
(bad)
outs
bound
cld
inc
sub
repz
inc
data16
mov
jno
bound
jg
mov
push
(bad)
and
and
add
stos
add
dec
fadd
dec
jb
test
inc
fucom
mov
(bad)
imul
cwde
xor
mov
movs
adc
imul
jne
test
gs
stc
retf
cmc
out
sar
ja
mov
adc
lods
dec
out
push
jl
mov
push
push
jp
test
push
repz
cmp
lock
inc
jecxz
ja
jl
mov
sbb
outs
add
stos
jne
sub
xor
fs
repnz
out
xor
pop
idiv
mov
sub
and
fadd
mov
adc
sbb
cdq
xor
push
xchg
jne
data16
push
mov
fwait
mov
rol
in
mov
jb
cmc
inc
add
or
dec
stos
outs
and
mov
fsubr
sbb
mov
ffreep
loopne
xchg
fcom
adc
aam
aaa
out
mov
cmp
fwait
push
popa
in
jmp
inc
int3
fisub
xchg
xchg
jne
sub
push
ret
(bad)
in
pop
or
jne
stos
xor
cdq
call
(bad)
mov
pop
jno
pop
mov
sub
add
or
add
mov
jge
xlat
cli
arpl
pop
push
scas
iret
inc
ret
gs
mov
ins
xchg
in
xchg
out
das
aam
xchg
mov
mov
jge
mov
call
jne
sub
push
pop
pop
mov
stc
daa
call
xchg
outs
js
mov
dec
xchg
mov
jmp
arpl
sbb
add
lods
and
inc
lea
inc
mov
neg
sub
inc
jmp
frstor
push
lahf
ja
and
mov
xchg
adc
xchg
jg
mov
xchg
or
popa
stos
xchg
pushf
int3
sub
mov
cmp
cli
repz
outs
sbb
retf
or
xor
in
cmp
pop
rcr
es
pop
cmp
retf
dec
cmp
cmps
sar
inc
cmps
cmp
cdq
mov
popf
or
mov
xchg
pop
out
xchg
xor
fs
or
inc
fwait
mov
pop
xchg
cdq
push
and
(bad)
xor
test
loopne
mov
les
mov
or
add
rcr
and
(bad)
pop
mov
cwde
mov
push
or
sbb
jnp
add
loope
adc
or
pop
or
add
fisub
iret
jmp
adc
in
call
std
mov
enter
aam
mov
sbb
pop
loopne
lods
cmp
mov
lahf
pop
into
ins
in
ds
and
out
dec
pop
jl
mov
dec
das
mov
or
and
shl
xchg
inc
dec
push
fcomp
sbb
push
cwde
push
xchg
add
mov
push
mov
mov
stc
int3
mov
aad
push
inc
lods
dec
fnstenv
cwde
jo
cmp
mov
fdivr
cdq
mov
fisttp
mov
sbb
inc
mov
nop
dec
xlat
imul
push
push
jns
pop
add
mov
in
(bad)
mov
int
jb
inc
sti
inc
sbb
sbb
cwde
dec
and
adc
std
ss
cwde
add
test
sub
fwait
sar
sub
test
out
aaa
fcom
mov
mov
cmps
loope
pop
popa
cdq
xchg
pop
xchg
sub
xor
cmc
in
jle
xor
xchg
sbb
lods
imul
xor
out
ja
shl
(bad)
jbe
pop
push
mov
pusha
stos
inc
add
js
xchg
adc
jmp
addr16
scas
push
xchg
hlt
imul
out
push
mov
lock
mov
sbb
mov
sbb
out
pop
mov
out
and
(bad)
jecxz
popf
inc
dec
and
cs
pop
sahf
dec
pop
or
xchg
lahf
scas
inc
aaa
scas
addr16
repnz
cmp
sbb
jbe
push
inc
popf
sub
pop
inc
lea
test
cli
ss
sub
(bad)
in
or
ficomp
jns
pop
xchg
dec
loop
cli
inc
xchg
out
jmp
sbb
pop
lock
mov
mov
xchg
cmp
int
and
outs
ja
fistp
push
in
cmp
repz
jmp
adc
add
sub
dec
fcmovnb
sub
add
adc
sbb
sub
dec
outs
test
adc
fyl2xp1
mov
aad
push
(bad)
scas
fcomp
hlt
call
and
imul
js
(bad)
leave
and
sub
stos
dec
jmp
rcr
inc
sti
xor
sub
and
dec
cmp
lahf
pop
push
(bad)
push
out
cld
jg
cmc
jae
push
sub
arpl
jp
fbstp
xchg
adc
scas
pop
sbb
pop
fcomi
out
test
dec
out
dec
push
lea
stc
and
rcr
aam
nop
ins
xchg
push
mov
je
mov
mov
movs
loop
jo
xchg
fldenv
jg
sbb
dec
loop
jmp
stc
xor
sub
and
test
sub
sub
xor
ds
jb
bound
and
sub
ss
xor
jmp
pop
loopne
jnp
lods
pop
(bad)
(bad)
fadd
(bad)
mov
adc
jecxz
movs
mov
push
cmp
mov
sar
lahf
pushf
push
ror
sbb
call
add
jl
xchg
push
cmp
iret
mov
pop
(bad)
jmp
mov
cmp
sbb
mov
outs
adc
jae
mov
cmp
test
and
jp
sub
(bad)
icebp
cmps
jae
mov
pop
shr
xchg
data16
popf
mov
pop
ret
xacquire
mov
xor
push
push
retf
test
pop
enter
inc
xchg
pop
pop
fwait
push
leave
mov
aam
lahf
nop
xor
rcr
dec
cmp
push
outs
punpcklbw
jp
mov
je
mov
in
fxam
add
push
push
mov
pop
jecxz
mov
and
xchg
push
cmps
(bad)
mov
pop
mov
(bad)
mov
mov
jne
jno
add
cmc
inc
in
add
outs
lods
pop
push
mov
push
inc
xchg
xchg
iret
into
push
pop
fiadd
std
adc
pop
jecxz
aaa
push
sbb
adc
jo
mov
inc
xchg
cdq
mov
cmp
(bad)
xchg
inc
scas
mov
push
test
popf
dec
shl
xor
outs
mov
pop
bound
cld
mov
mov
push
xor
stc
adc
cmp
xor
xchg
xchg
or
stc
mov
inc
jbe
sbb
jbe
stos
sub
fld
inc
push
mov
pop
dec
in
fld
sbb
mov
arpl
xchg
(bad)
xor
mov
cmps
(bad)
sbb
xchg
js
repz
sahf
pop
(bad)
dec
int3
cmp
loop
fcomp
add
ins
pop
push
mov
(bad)
xor
lods
pop
(bad)
fiadd
mov
sar
push
xor
pop
pop
mov
pop
mov
cmp
jmp
pop
leave
inc
inc
ins
call
fld
or
(bad)
mov
je
sahf
adc
mov
pushf
das
adc
(bad)
xchg
cld
ror
mov
sbb
retf
rol
pop
dec
clc
dec
or
xchg
shl
jecxz
sub
inc
cmp
xor
ds
(bad)
mov
push
xchg
xor
aad
jmp
fdivr
inc
test
mov
add
rcl
or
mov
mov
sbb
std
repz
cmp
movs
jne
pop
lods
or
or
out
(bad)
push
jmp
inc
pop
inc
mov
inc
cmp
mov
leave
pop
(bad)
call
inc
pop
push
rol
or
mov
(bad)
xor
dec
ja
pop
adc
or
xchg
lods
outs
verr
std
mov
mov
pusha
addr16
pop
or
dec
movs
cld
mov
xchg
mov
mov
xchg
jl
mov
movs
mov
cmc
add
fsub
pop
call
jmp
pusha
fidiv
push
test
sbb
cmps
mov
int3
loope
cdq
lea
dec
add
xor
jbe
test
push
jo
jge
lods
adc
mov
xor
ins
xchg
fnstsw
sbb
inc
cmps
jl
xchg
xchg
mov
stos
inc
pushf
mov
xchg
aad
movs
and
mov
retf
shr
mov
out
pop
xor
iret
enter
inc
aaa
push
cmp
ins
scas
xor
pop
mov
stos
dec
(bad)
movs
jmp
lds
ja
ds
sbb
nop
js
mov
pop
call
push
cmp
shl
leave
push
jb
fbstp
sahf
enter
call
sbb
mov
call
xchg
(bad)
jl
loope
call
pop
test
into
in
jle
or
ds
adc
and
adc
cdq
repnz
mov
add
outs
inc
xchg
ins
aas
scas
dec
push
mov
sbb
lods
mov
mov
push
pop
mov
cmp
int
je
cmps
jp
shl
xchg
lea
fcmovbe
dec
mov
mov
mov
fwait
mov
pop
and
rol
popa
pushf
sbb
jge
fisubr
jg
jb
dec
xchg
cmps
jl
aam
movs
jmp
ja
cmp
inc
add
add
jmp
jns
lahf
push
and
xchg
sahf
aaa
inc
dec
jb
stos
call
clc
inc
pop
and
pop
loop
mov
out
xchg
add
jb
dec
call
movs
ins
push
mov
in
jmp
dec
out
cmps
inc
loope
lock
pop
adc
retf
(bad)
push
cli
inc
add
jle
jno
push
popf
dec
add
mov
cmps
jns
icebp
sbb
cmps
pop
push
add
xor
pop
adc
jle
mov
loopne
mov
int3
rcr
jne
jo
pop
retf
popf
leave
arpl
pop
xor
shl
lahf
fdivr
sahf
fs
and
out
call
sub
jo
nop
loop
iret
push
in
pop
and
adc
sahf
bound
dec
push
into
jnp
frstor
fadd
inc
daa
test
or
xor
sbb
mov
mov
in
adc
and
pop
arpl
cmp
adc
std
es
cmc
mov
add
mov
fcomip
in
fidivr
mov
out
pop
and
in
xlat
rol
push
add
sbb
inc
mov
les
ja
and
sbb
or
std
adc
jbe
xchg
or
jo
pop
adc
adc
xlat
or
call
retf
xlat
out
retf
xchg
jo
push
mov
mov
cmps
jnp
out
call
xchg
mov
inc
fs
mov
and
retf
fild
mov
dec
nop
sub
(bad)
xlat
scas
and
or
sub
cwde
push
cmp
xchg
shr
or
jecxz
pop
pusha
or
and
sbb
sub
cmps
sbb
and
out
mov
retf
loopne
leave
outs
pop
pop
mov
jg
out
push
ret
or
rol
popf
lods
out
mov
mov
hlt
leave
stc
retf
fs
repnz
sub
idiv
inc
lahf
adc
cmp
mov
mov
(bad)
inc
in
mov
mov
pop
inc
jle
out
xor
xor
adc
fimul
fisttp
sbb
test
and
mov
sti
pop
add
mov
jmp
pop
aaa
ffreep
test
shl
neg
xlat
adc
gs
lods
(bad)
std
add
sar
retf
pop
mov
jbe
push
out
fcmovu
push
int3
add
jnp
shl
pop
stos
arpl
mov
and
add
out
outs
ja
push
pop
(bad)
sub
dec
push
imul
sbb
and
cli
call
js
mov
xor
add
sub
shl
cdq
inc
sbb
(bad)
cld
xor
rcr
or
jp
mov
inc
jmp
scas
dec
add
jmp
jnp
scas
push
jno
push
sub
mov
dec
int
cmp
es
sub
or
inc
and
xchg
mov
lahf
shl
sub
repnz
shl
xchg
xchg
jmp
call
add
loopne
mov
mov
sub
mov
cwde
leave
jecxz
fs
mov
jecxz
mov
or
icebp
out
cld
inc
sti
inc
je
dec
sub
and
xchg
cmps
inc
enter
ror
sbb
daa
xor
and
bswap
dec
pusha
ret
rcl
mov
inc
int3
stc
sbb
addr16
mov
aas
cmps
fld
xor
xlat
mov
jecxz
repnz
jg
cmp
test
scas
xchg
fsubr
or
popa
in
push
jns
les
sbb
lods
movs
iret
or
stc
je
rcr
xchg
inc
popa
push
jg
aaa
xchg
sub
data16
dec
outs
lods
mov
aaa
sbb
retfw
retf
mov
jg
scas
push
mov
cmp
jmp
stc
jmp
(bad)
in
pop
mov
ins
add
mov
xchg
jg
xchg
outs
out
push
lds
cmp
nop
sub
add
or
push
in
xor
mov
out
idiv
cmp
adc
push
push
xchg
aas
nop
push
fcom
pushf
pop
sbb
sbb
xor
sbb
cmc
or
push
jnp
pushf
xor
mov
mov
push
(bad)
(bad)
in
test
push
jnp
mov
cmc
xchg
leave
cmp
inc
aad
daa
sub
clc
xor
pop
xchg
sbb
push
adc
nop
mov
push
pop
out
jbe
in
or
add
sbb
bound
sub
push
pop
movs
jno
mov
inc
lods
test
or
push
pop
(bad)
out
xchg
(bad)
push
loope
push
push
mov
xor
lahf
js
rcl
xchg
xor
sbb
nop
add
sub
test
add
add
jecxz
arpl
jo
arpl
push
lods
mov
ret
stos
sbb
lea
fadd
pop
jne
cld
cmp
mov
inc
ins
movs
jbe
lea
push
mov
sti
sub
add
mul
lahf
push
mov
inc
cmc
add
mov
gs
push
repnz
or
out
add
push
lock
scas
shl
popf
push
push
xchg
test
fild
xor
out
and
cld
inc
nop
and
cmp
sub
mov
pop
aam
cdq
loop
mov
and
xor
(bad)
imul
push
mov
mov
pop
(bad)
or
pop
jp
jge
popf
mov
scas
out
loop
sbb
enter
rcr
cwde
mov
sub
mov
xor
hlt
imul
mov
push
(bad)
ss
or
pusha
dec
test
inc
cmp
mov
scas
jbe
xchg
sub
jne
ret
pusha
push
xor
das
lods
push
fcom
pop
mov
inc
mov
mov
adc
cmp
out
call
(bad)
sbb
fld
xchg
dec
(bad)
cmps
pop
adc
push
xchg
mov
cdq
test
fidivr
nop
test
lea
sub
cmp
push
retf
sub
sbb
scas
imul
inc
sub
xchg
mov
repnz
cdq
ret
jp
xor
ins
ja
push
cwde
add
fdivr
mov
add
jno
(bad)
mov
out
pop
jo
push
div
outs
shr
add
jle
test
jbe
jecxz
pushf
xor
std
clc
mov
mov
cmps
inc
pop
dec
mov
js
jnp
popw
inc
mov
retf
xchg
mov
or
pop
repz
add
in
inc
jl
pop
mov
and
add
xor
into
adc
adc
and
call
jno
ins
out
repz
ret
xchg
je
mov
xchg
jae
pop
movs
cdq
mov
pop
out
lods
add
ins
inc
fild
jl
dec
sub
jmp
sbb
mov
jge
mov
adc
enter
pop
(bad)
sub
retf
inc
cmp
sbb
arpl
xor
adc
je
aam
outs
add
add
imul
pushf
pop
loop
mul
ret
in
cld
push
jmp
mov
in
ret
in
xchg
pop
xor
cld
mov
fisub
sbb
(bad)
sbb
or
mov
addr16
daa
jg
dec
scas
xor
and
les
dec
jmp
sbb
ds
js
cmp
xor
pop
inc
xchg
pop
add
ins
xor
inc
xchg
std
xlat
pop
inc
ja
pop
cmp
adc
xchg
movs
mov
mov
sbb
mov
das
xor
in
scas
retf
and
test
sub
iret
(bad)
pop
loopne
add
outs
jne
ins
es
pushf
mov
sahf
adc
aam
xchg
add
inc
sbb
inc
cmp
seta
in
dec
sahf
dec
sbb
mov
jmp
mov
jle
jb
inc
retf
push
mov
mov
push
in
shl
fmul
push
xchg
jl
xchg
(bad)
rcl
or
cli
ror
jns
adc
ins
test
jnp
mov
xchg
lds
into
int
mov
inc
out
sbb
and
add
test
test
mov
cld
clc
xchg
push
mov
add
dec
gs
and
int3
jecxz
jmp
mov
mov
mov
adc
xchg
and
mul
mov
div
xchg
mov
or
daa
cli
leave
hlt
inc
les
inc
js
rol
cmc
mov
lods
jp
fisub
daa
hlt
cmp
jb
or
imul
pop
mov
or
cmps
adc
addr16
stos
and
xchg
(bad)
shl
jb
out
cmp
clc
mov
les
stos
lods
cli
sbb
test
lock
pop
call
(bad)
in
jp
and
cmp
dec
pop
outs
xchg
test
mov
ror
push
jns
hlt
inc
and
sbb
dec
inc
mov
push
stos
mov
and
dec
fucompp
test
mov
push
sub
sub
mov
mov
or
lock
xor
mov
inc
test
cmc
mov
stc
push
mov
ja
imul
pop
or
call
pop
add
mov
cmp
mov
int
cmp
mov
inc
je
and
and
pop
sub
leave
adc
dec
pop
ror
jmp
push
jb
fist
pop
dec
jo
ins
xchg
(bad)
pop
test
loopne
jmp
es
mov
sub
mov
(bad)
aam
mov
xchg
test
inc
nop
dec
fimul
sbb
retf
cld
sti
je
xor
sub
adc
mov
stos
mov
or
cld
inc
cdq
fadd
cwde
clc
pop
sbb
cmp
push
adc
dec
push
mov
fsubr
pusha
jmp
(bad)
pop
add
xchg
clc
movs
inc
mov
gs
mov
jp
loope
jo
cld
je
(bad)
xchg
lods
cmps
sar
repz
pop
int3
in
aad
jl
mov
lods
sub
sbb
test
arpl
inc
popa
push
pop
(bad)
xor
jnp
ss
pop
movs
lds
imul
or
bound
jmp
pop
dec
sub
lods
and
stos
jae
mov
inc
stos
mov
pop
out
mov
loopne
push
ja
sub
xchg
(bad)
pop
mov
jmp
adc
movs
mov
(bad)
arpl
lahf
add
xchg
mov
cmp
xchg
sub
sbb
(bad)
fstp
sbb
ins
fbstp
xor
xchg
dec
push
jmp
mov
pop
std
adc
inc
sub
mov
stos
jno
dec
dec
stos
pop
dec
or
add
dec
(bad)
jmp
inc
jae
movs
sub
jmp
xchg
jle
(bad)
sti
xchg
or
shr
test
push
aaa
hlt
test
ins
clc
push
sti
inc
add
and
and
bound
dec
pop
jbe
lahf
mov
xor
out
std
test
aam
inc
jg
ficomp
cmp
cwde
sbb
je
dec
xor
cmp
stos
not
xor
cmp
mov
inc
jb
mov
ret
std
pop
mov
popf
push
out
jg
fmul
mov
js
mov
stos
adc
xchg
bound
out
pushf
idiv
mov
in
movs
je
push
(bad)
adc
or
shr
pop
iret
xor
adc
pop
cld
pusha
sbb
call
and
data16
jae
jmp
cs
or
adc
xor
dec
push
scas
jbe
mov
std
sbb
das
popa
fdivr
call
bnd
push
lea
popf
repz
mov
and
enter
adc
mov
jns
cmp
mov
rcl
cmps
push
into
imul
test
or
jbe
js
or
mov
hlt
push
ret
fsubr
mov
jp
pop
cmp
and
pusha
imul
xor
sub
jmp
mov
mov
or
jge
ds
dec
hlt
mov
jnp
aad
push
hlt
mov
xor
mov
jo
cmps
hlt
push
add
add
mov
sbb
push
out
sti
mul
and
lea
pusha
and
inc
sub
leave
aaa
sub
xor
or
pop
sbb
or
dec
adc
dec
jge
shl
out
aam
xor
(bad)
add
js
inc
cwde
jle
(bad)
xlat
cmp
xlat
xchg
dec
loopne
jno
(bad)
cli
mov
(bad)
pop
test
inc
add
add
xchg
lods
fmul
mul
push
rol
fs
cmp
cdq
xor
jp
test
mov
frstor
add
push
sub
xchg
or
and
dec
jne
push
mov
push
mov
inc
inc
dec
dec
fwait
out
mov
mov
add
popa
push
push
test
cdq
add
in
jae
sti
loop
cmp
pop
test
pusha
mov
mov
cdq
in
icebp
jle
jmp
lods
es
or
shr
ins
xchg
sub
fwait
jnp
pusha
xchg
mov
out
out
and
and
add
push
jge
xchg
cmp
mov
push
fwait
xchg
cmps
or
push
addr16
cld
mov
fidivr
fmul
mov
in
mov
in
xchg
into
jecxz
xor
push
cmp
xchg
cmps
gs
(bad)
hlt
call
fwait
push
repnz
ror
es
cmp
inc
jns
ja
or
push
mov
sar
movs
xlat
pop
pop
jp
retf
adc
push
sbb
jb
inc
push
ret
mov
mov
dec
(bad)
and
push
pop
adc
fdivr
mov
mov
cmc
jne
sbb
cmps
fcmovne
dec
mov
test
loopne
call
movs
jbe
inc
(bad)
das
or
mov
cmp
cmp
xchg
push
jmp
pop
clc
add
inc
push
dec
sub
pop
sbb
sub
dec
gs
add
inc
jecxz
mov
bnd
push
jbe
sahf
push
cli
mov
jge
iret
xchg
push
into
clc
je
mov
xchg
ja
sbb
and
lods
and
in
les
xchg
scas
aaa
idiv
dec
push
push
fstp
mov
or
cs
push
xchg
add
cmps
xchg
retf
push
add
push
fscale
sbb
and
and
mov
pop
js
ins
sbb
adc
ss
out
sahf
inc
mov
push
ror
fisub
(bad)
neg
jmp
pop
add
(bad)
scas
ins
in
pop
mov
lods
cmc
adc
jbe
out
nop
and
xlat
(bad)
pop
dec
nop
lahf
xor
push
fsubr
mov
cmp
sahf
ss
daa
xchg
pop
push
push
call
dec
fwait
call
imul
inc
pop
gs
inc
inc
mov
test
jg
mov
xor
push
ds
out
movs
add
out
add
dec
pop
pop
scas
cs
mov
mov
dec
repz
daa
in
cmps
xchg
sbb
pop
mov
mov
ins
loope
lods
push
cmp
xchg
call
scas
sbb
(bad)
fistp
and
push
cmp
aaa
pop
mov
and
pop
cdq
shr
icebp
bound
daa
(bad)
adc
bound
popa
mov
mov
fadd
cmps
inc
xor
xchg
ror
fmul
and
xor
jmp
push
out
shl
mov
push
add
mov
in
fsub
inc
inc
in
xchg
and
clc
int3
(bad)
pop
fsub
adc
inc
test
mov
popf
nop
ds
jmp
adc
es
pop
retf
jle
imul
jp
xchg
add
mov
jmp
cld
pop
xchg
jle
pop
jmp
retf
cmp
mov
jmp
mov
out
call
test
fs
mov
clc
clc
jmp
out
lds
aam
cli
and
inc
mov
data16
cmp
mov
cmp
leave
jg
frstor
ss
xor
push
(bad)
je
imul
push
popa
scas
nop
mov
enter
mov
pop
ror
lea
test
mov
stos
es
gs
mov
inc
jge
mov
cmp
mov
adc
push
(bad)
int3
cmp
add
jp
adc
stos
xor
out
shl
(bad)
mov
sub
and
pop
xor
stos
aas
mov
xchg
dec
and
sti
imul
jnp
retf
scas
ret
jne
jbe
ss
ret
retf
enter
xlat
stos
mov
add
mov
iret
or
xchg
cld
push
xor
std
mov
lea
jle
or
adc
shr
jo
adc
sbb
add
mov
cmc
push
xrelease
sahf
out
pop
imul
sub
push
push
scas
push
fld
or
call
in
out
xchg
mov
jecxz
inc
pop
scas
dec
ret
cmp
leave
mov
xchg
rcl
das
mov
inc
mov
aam
lock
fs
mov
inc
cli
pop
call
xchg
test
into
adc
inc
fcom
sbb
inc
pop
push
mov
std
inc
jmp
jne
inc
pop
clc
inc
sbb
sbb
aas
mov
(bad)
pusha
push
je
mov
push
sahf
rol
ret
cmp
push
pop
movs
arpl
ret
mov
in
push
sti
out
sub
push
sbb
jp
mov
cmps
xor
retf
sar
loope
pop
inc
test
inc
rcr
es
aam
jp
and
jne
jb
ins
sbb
mov
iret
mov
aaa
retf
push
jmp
push
push
inc
cmp
cmp
push
add
nop
sbb
daa
hlt
imul
sbb
test
dec
div
loop
mov
jns
dec
jns
sahf
jp
(bad)
aam
popa
xchg
test
cmps
xchg
push
fild
movs
mov
cmps
xchg
sub
fld
in
scas
sar
daa
pop
or
repz
je
adc
les
push
mov
xchg
mov
dec
push
call
mov
inc
int
cmp
sbb
ins
mov
add
pop
and
retf
(bad)
clc
je
pop
fs
dec
xchg
mov
and
(bad)
xchg
xadd
xchg
jge
xchg
(bad)
jmp
popf
gs
int
daa
xor
jmp
pusha
cmp
mov
dec
push
mov
and
in
mov
std
gs
jmp
inc
jns
(bad)
sub
dec
sub
adc
inc
adc
add
push
popa
sahf
out
mov
pop
push
jbe
sub
hlt
mov
xor
enter
mov
in
xchg
fs
fwait
test
xchg
clc
icebp
push
inc
out
test
test
mov
jle
pop
je
cmp
dec
sbb
xchg
test
inc
loopne
pop
cwde
cli
pop
push
dec
push
loope
adc
js
and
and
xor
xchg
sub
mov
sub
cmps
std
inc
xchg
rol
clc
movs
test
push
call
movs
enter
stc
jecxz
xlat
mov
dec
call
shl
cmp
dec
test
ret
add
out
push
push
xor
xor
pusha
test
imul
inc
cmps
or
cmps
sbb
sbb
xchg
xor
lds
pop
shl
sub
and
cmps
enter
rcl
stos
call
mov
sub
adc
retf
xchg
add
stos
imul
adc
xor
es
fild
jg
lds
xor
cmp
add
inc
jb
imul
popa
scas
xchg
cwde
fstp
sbb
test
fbld
loope
xchg
test
adc
jmp
sub
pop
cli
test
je
mov
pop
pop
jmp
imul
mov
clc
inc
clc
sub
pusha
loop
ja
dec
sub
adc
or
outs
fxch
sub
inc
and
sbb
bound
js
mov
sbb
fwait
imul
adc
in
popa
pushf
push
inc
cmps
inc
mov
mov
sub
(bad)
mov
loope
mov
inc
jae
test
cs
jmp
dec
arpl
mov
dec
int3
pop
add
retf
std
push
js
sbb
bound
fnsave
gs
jmp
dec
push
loopne
or
add
pop
call
movs
mov
push
sub
call
jp
outs
inc
inc
mov
and
out
adc
mov
cmps
jmp
fs
mov
in
cmc
mov
fwait
lea
js
add
rcr
or
dec
xchg
cmp
cmps
dec
sbb
lds
xchg
ret
std
pop
imul
or
pop
mov
retf
add
or
fdivr
imul
test
mov
int3
pusha
in
jle
xchg
(bad)
outs
jecxz
test
or
pop
scas
mov
ins
push
mov
lea
adc
dec
aad
les
dec
sbb
ror
jne
inc
jge
dec
shr
xchg
push
add
mov
inc
rcr
(bad)
shl
popa
test
ja
jl
or
stos
jl
mov
jle
mov
inc
(bad)
aam
and
jle
ficom
les
pop
xchg
mov
or
aad
xor
push
test
fs
leave
sbb
jmp
imul
movs
jae
jbe
cmp
stc
jb
adc
jg
adc
or
fwait
mov
and
sbb
int
jge
and
ds
sbb
lahf
dec
and
sti
bound
add
(bad)
loope
lods
bnd
ins
arpl
rol
ins
nop
call
mul
mov
pop
ins
mov
icebp
f2xm1
faddp
ins
je
test
retf
addr16
fsubp
jb
cmp
cmp
outs
add
mov
mov
rcr
or
mov
data16
push
adc
or
arpl
inc
add
call
or
hlt
in
xchg
xchg
popa
or
mov
arpl
retf
mov
or
out
add
movs
mov
fnstcw
xchg
sahf
xchg
es
fst
mov
cld
xor
pop
in
(bad)
fisttp
cmp
imul
push
push
stos
xchg
cli
mov
mov
xor
ja
mov
mov
stos
dec
pop
mov
bound
push
dec
xlat
call
ja
inc
gs
stos
jb
mov
push
mov
mov
mov
pop
mov
xchg
push
rcl
hlt
scas
call
popa
into
sub
xor
inc
out
aad
data16
cmp
pop
mov
sbb
dec
scas
lds
jp
aad
mov
push
fidivr
push
pop
cmp
mov
mov
std
dec
ins
sahf
pop
cmp
aad
add
xor
sar
in
sbb
mov
jae
iret
mov
add
(bad)
sbb
adc
inc
ret
loop
stos
adc
int
mov
repz
out
xchg
and
(bad)
out
jmp
call
mov
sbb
cmp
cdq
sub
jnp
clc
ds
add
(bad)
dec
sub
adc
jl
popf
push
adc
mov
retf
leave
call
(bad)
inc
arpl
pop
mov
xchg
gs
lock
or
sbb
adc
mov
xor
lock
mov
xchg
dec
test
shr
add
cmp
xchg
imul
out
mov
int
fcmove
das
xchg
pop
push
push
fsub
adc
and
pushf
jb
mov
test
lods
and
push
dec
loopne
xchg
retf
pop
fiadd
xchg
in
or
pusha
push
int
stos
jae
jne
(bad)
fst
xor
js
(bad)
cli
scas
loope
push
icebp
mov
shl
sbb
cmp
clc
(bad)
sbb
xor
movs
dec
or
mov
in
jle
loop
test
inc
pop
pop
and
outs
adc
inc
fisubr
nop
ds
xchg
mov
add
scas
mov
sti
jnp
pop
test
jmp
(bad)
dec
xchg
lock
pop
enter
fcmovnbe
nop
add
addr16
movs
cmps
ror
fistp
mov
sbb
pop
jmp
enter
in
int3
fistp
xor
jle
movs
sbb
test
jmp
or
push
loopne
cmp
add
ret
jg
push
cmp
scas
dec
sbb
xchg
push
addr16
push
neg
pop
shl
xchg
(bad)
pop
mov
mov
retf
mov
mov
in
inc
test
sar
push
stos
pop
pop
in
test
in
loope
jp
ret
outs
(bad)
sub
inc
push
or
into
test
fs
mov
dec
add
mov
imul
or
jecxz
jae
add
sbb
ja
loop
mov
frstor
mov
je
cwde
mov
dec
and
xchg
into
out
mov
pop
daa
test
sar
stos
inc
into
mov
jmp
mov
push
ficom
jmp
xlat
es
cmp
xchg
aaa
push
cmp
xor
test
or
mov
sbb
outs
inc
sbb
sbb
daa
xchg
pop
mov
mov
adc
pop
in
sub
cli
mov
mov
push
push
lods
dec
adc
jno
xchg
push
push
(bad)
hlt
mov
jle
scas
and
sbb
sbb
ror
int3
imul
imul
and
movs
mov
pop
adc
add
loope
push
push
pop
aad
sub
gs
jnp
cmps
dec
sbb
not
sbb
pop
loopne
popf
cmp
push
inc
test
cmp
sar
int
gs
fsub
cmps
and
mov
jge
enter
retf
out
frstor
jmp
sub
jmp
jmp
sbb
xchg
sbb
sti
sub
mov
pop
int
int3
ret
and
cmp
add
cmp
jp
adc
push
(bad)
pop
and
sub
movs
mov
aas
xor
int
cmp
(bad)
mov
push
shl
mov
sub
outs
pop
out
fisubr
mov
out
cmp
(bad)
stc
retf
and
inc
cmps
and
and
lods
mov
addr16
addr16
fimul
gs
pop
pop
push
jo
lea
mov
std
dec
bound
jge
retf
inc
pop
pusha
fcmovnbe
test
clc
arpl
mov
bound
add
fsubr
fdiv
mov
fprem1
test
imul
fdiv
leave
das
add
loope
aad
shl
inc
or
call
or
cmc
imul
daa
test
jle
inc
ss
pop
adc
pusha
mov
mov
add
or
scas
push
arpl
or
xlat
call
neg
inc
pushf
jp
sub
in
test
pop
daa
aam
mul
out
pop
in
scas
sbb
push
pop
xchg
mov
dec
or
adc
push
fld
pop
popa
lods
imul
xchg
scas
inc
repnz
ret
inc
gs
mov
xor
pop
test
fbld
pushf
push
scas
dec
add
and
out
out
test
push
addr16
mov
outs
mov
mov
cs
mov
retf
mov
inc
sbb
in
hlt
stos
mov
fstp
enter
sub
hlt
test
jae
add
cmp
push
xchg
test
in
sbb
inc
shl
xor
mov
pop
popf
scas
mov
push
push
pop
(bad)
push
mov
(bad)
xor
fidivr
icebp
xchg
inc
and
stc
mov
les
scas
popf
call
mov
adc
jecxz
ins
sbb
cmps
adc
cmp
in
int3
pop
call
(bad)
daa
popf
dec
inc
pop
call
ins
sti
clc
and
add
pop
push
pop
ss
clc
push
jns
jnp
mov
div
inc
sub
aad
and
fild
aam
bound
pop
aad
call
cmps
fs
stc
idiv
inc
test
sahf
pop
push
and
lods
jecxz
imul
out
dec
sub
inc
ret
add
xor
in
and
icebp
call
jecxz
sub
pop
leave
inc
adc
pop
xchg
push
sti
push
ins
cdq
jl
mov
xchg
xor
sub
pushf
std
add
pop
in
bound
dec
mov
cwde
inc
nop
clc
js
into
rcl
movs
sar
mov
add
(bad)
mov
fldenv
cmp
add
clc
and
inc
fldcw
gs
cli
inc
cmp
xchg
push
jmp
addr16
out
sub
xor
pop
stos
sub
inc
inc
mov
arpl
xchg
mov
rcr
dec
retf
jmp
dec
movs
outs
mov
lds
add
in
adc
dec
xchg
stos
mov
bound
cmp
fsub
add
pop
sub
(bad)
fs
cmp
jns
adc
test
xchg
xor
cli
leave
and
sbb
cmp
jp
add
sub
test
(bad)
or
stos
cmp
xor
cmps
out
xchg
jmp
repnz
sbb
lds
xchg
cld
js
jmp
test
out
inc
idiv
pop
push
cmp
scas
cmc
cmc
jns
xchg
(bad)
xor
cmp
cld
lea
push
dec
fisubr
push
xchg
jge
nop
nop
mov
ret
and
dec
jge
aad
push
push
adc
(bad)
and
jo
jns
fwait
pop
and
push
inc
mov
mov
(bad)
pop
mov
sbb
pop
jb
lds
(bad)
xchg
sar
dec
add
imul
lahf
or
loopne
mov
scas
jnp
pop
enter
jmp
sub
inc
mov
or
xchg
jmp
fsub
imul
and
pop
dec
mov
jns
mov
sbb
or
int
inc
sahf
fbstp
sbb
mov
jae
mul
push
out
popf
add
into
inc
lods
pop
setno
retf
mov
scas
pushf
inc
jmp
xlat
dec
push
dec
fadd
jnp
mov
cmp
test
lea
or
addr16
pop
test
fs
sub
sbb
inc
sub
stc
push
push
ret
mov
test
pop
pop
pusha
clc
imul
test
stos
dec
cdq
pushf
ret
jns
mov
outs
in
nop
add
js
test
xor
std
addr16
loop
aaa
bnd
adc
popa
mov
or
jo
outs
adc
mov
cwde
jmp
inc
jnp
mov
adc
jbe
push
and
aaa
outs
in
xchg
mov
jmp
fdiv
push
add
das
cmc
cmp
cmp
push
aam
bnd
jns
test
add
mov
xchg
mov
ins
inc
mov
or
nop
test
jnp
pop
push
jg
cwde
cmp
mov
test
mov
add
daa
mov
adc
das
adc
js
mov
mov
pop
mov
and
shl
retf
jge
dec
clc
mov
inc
mov
mov
out
mov
cs
mov
repnz
mov
jns
pushf
mov
stos
(bad)
push
pop
xchg
mov
or
and
fld
jne
jae
dec
xor
mov
cmp
sar
outs
push
mov
adc
adc
adc
(bad)
js
fisttp
mov
mov
out
mov
mov
pop
and
outs
loopne
pushf
popa
in
jns
jmp
cmps
call
or
retf
sbb
jmp
inc
out
inc
and
xor
xor
xchg
retf
test
jg
dec
and
xor
inc
ja
mov
jae
outs
imul
xchg
mov
add
pop
js
std
mov
cli
sbb
cdq
dec
dec
xchg
cdq
ins
int
dec
push
(bad)
dec
cmps
(bad)
daa
(bad)
pop
outs
loop
xchg
and
in
sar
jmp
ins
out
add
repz
lods
and
addr16
cmp
fwait
bound
push
add
or
pop
clc
jecxz
leave
fdiv
add
inc
push
arpl
lods
inc
xchg
jae
jle
mov
pop
movs
add
test
inc
jmp
leave
pop
test
dec
sbb
test
jmp
pop
xor
mov
test
pop
add
neg
xchg
retf
icebp
js
xchg
cmps
pusha
lea
fisubr
or
(bad)
imul
js
inc
push
cmp
test
pop
dec
mov
sbb
sahf
lahf
sbb
mov
ret
pop
inc
pop
and
inc
push
dec
adc
loop
popf
jle
inc
outs
cmps
or
lods
clc
and
push
dec
fadd
test
mov
imul
fs
cmps
das
ret
mov
mov
sub
stos
xchg
cs
mov
mov
pop
loop
mov
pop
hlt
lock
and
stos
ds
push
fisub
aaa
inc
movs
dec
pop
jge
mov
mov
into
mov
xor
pop
jp
mov
or
bound
inc
push
fistp
movs
push
push
in
aam
ins
cmp
add
gs
and
fs
mov
xchg
test
lock
push
hlt
in
retf
or
and
inc
jae
mov
test
push
xor
call
je
inc
fidiv
inc
lahf
jnp
or
lds
fcomip
push
mov
aaa
(bad)
xor
push
xor
mov
jl
stos
push
sub
aas
add
push
jmp
fisubr
jle
pop
ret
cmp
repz
sbb
retf
adc
mov
out
add
dec
stos
leave
jmp
pop
lods
or
rol
and
ins
inc
js
xor
jmp
call
mov
inc
inc
pop
or
inc
sbb
xor
and
adc
dec
dec
rcl
xchg
ss
jmp
add
out
test
stos
rcr
jp
fadd
xchg
aam
call
mov
mov
call
loope
fild
ds
xlat
stc
icebp
(bad)
push
lea
sub
jmp
add
inc
test
cmp
mov
xchg
or
mov
fsub
pop
push
xor
dec
inc
mov
fs
or
cwde
enter
clc
add
inc
andps
dec
add
dec
shl
lods
jae
pop
mov
dec
sti
xchg
mov
or
dec
jmp
aam
and
ret
repnz
jle
es
outs
push
stc
inc
and
mov
test
fdivr
jle
jmp
inc
inc
dec
(bad)
xor
lods
pop
mov
ins
inc
mov
add
and
enter
sbb
js
arpl
sahf
shl
into
out
add
imul
arpl
mov
aam
movs
sar
dec
pop
xchg
mov
push
ror
and
in
jg
inc
push
add
fwait
sub
xchg
dec
cmp
xchg
mov
aam
fcomip
and
and
inc
sub
daa
ds
or
mov
push
stos
cmp
sbb
or
(bad)
push
xchg
movs
pop
sar
mov
xchg
xchg
fucom
mov
in
neg
js
xchg
test
aad
inc
mov
test
repnz
daa
aas
scas
es
pop
xchg
pusha
sub
mov
push
in
pop
fimul
ins
push
xor
push
aaa
mov
xchg
daa
int3
jl
pushf
push
and
stos
outs
adc
test
(bad)
pop
add
mov
jmp
push
faddp
div
popa
scas
clc
test
test
mov
lods
mov
jp
cmp
cmp
(bad)
mov
int3
ss
pop
mov
dec
cmp
call
sub
xchg
inc
dec
jbe
cli
daa
sub
add
or
(bad)
add
aad
cmp
out
sbb
int
rol
ins
lods
dec
sti
sbb
jecxz
pushf
adc
jmp
ins
lock
mov
push
scas
popf
div
inc
aam
clc
mov
xor
jmp
sub
ret
fucomi
jge
aas
or
inc
fwait
xor
std
dec
outs
fwait
retf
lea
in
fstp
enter
pop
adc
xor
fldenv
(bad)
sbb
xchg
mov
sbb
jae
stc
sahf
cmp
jno
mov
cmp
mov
mov
pop
addr16
(bad)
lock
retf
(bad)
clc
rol
pop
dec
mov
inc
shr
ss
hlt
clc
sar
pop
ds
test
jns
pop
push
pop
(bad)
dec
sbb
gs
sub
push
and
cmp
dec
ss
rcl
cmps
dec
pop
movs
dec
dec
xchg
cmp
shr
loope
inc
push
mov
cmps
call
inc
enter
sar
scas
xor
arpl
mov
pop
mov
sti
cld
cmps
(bad)
cmp
jmp
cmc
sbb
dec
lock
je
sbb
add
sub
mov
push
cdq
mov
int
xor
cmp
sbb
sbb
xor
adc
dec
arpl
and
fistp
sbb
mov
inc
mov
xchg
push
popf
movs
fs
jmp
jle
lods
lods
into
sbb
imul
fsub
mov
(bad)
ins
inc
scas
mov
cmp
xlat
mov
data16
jb
dec
mov
pop
sbb
mov
int
add
cmp
inc
ja
sub
sbb
fimul
test
push
mov
mov
cmp
pushf
inc
sbb
sub
add
loop
sti
mov
jbe
xchg
imul
icebp
add
push
bound
cli
fnstenv
in
or
adc
mov
push
jmp
jg
cmps
outs
pop
outs
xchg
mov
lods
sbb
fimul
inc
out
imul
sub
push
jns
jbe
ror
push
in
test
push
push
imul
xlat
add
icebp
xchg
rol
loope
dec
std
fwait
add
retf
add
fistp
add
cwde
out
mov
mov
cmc
sub
fdiv
test
cmp
sbb
lea
or
and
jns
bnd
icebp
gs
jmp
imul
lods
add
push
jae
xchg
movs
mov
sti
enter
aam
(bad)
sbb
pop
lea
rol
mov
(bad)
loopne
cmp
mov
sahf
jecxz
movs
dec
mov
outs
xor
ret
pushf
mov
or
sbb
fldcw
and
mov
pop
bound
stos
(bad)
or
cmps
inc
cdq
in
or
inc
adc
push
xor
stos
sbb
pop
xor
sahf
jne
and
retf
fsubr
sbb
add
cwde
jp
test
jae
mov
into
fild
test
icebp
adc
hlt
or
(bad)
sub
test
dec
in
dec
pop
(bad)
fadd
push
cdq
and
es
mov
cs
xchg
(bad)
xchg
pushf
sub
int3
dec
jmp
jle
(bad)
and
or
adc
sbb
jne
lea
neg
dec
(bad)
enter
(bad)
or
sbb
cld
fadd
pop
jecxz
dec
and
nop
xchg
inc
jo
cmps
cmps
sbb
jae
in
scas
pop
retf
push
rcl
or
jmp
dec
push
ins
lahf
sub
jl
push
sub
mov
sti
jg
cli
or
frstor
jns
fiadd
pop
adc
push
stos
push
jmp
jnp
outs
adc
or
aam
sbb
xor
stc
add
imul
pop
cmp
pop
movs
rcl
out
fcomi
adc
imul
bound
inc
mul
hlt
(bad)
adc
(bad)
ss
ja
pop
aas
xor
cli
enter
push
sub
push
sbb
push
pop
dec
lods
mov
fild
fstp
cmp
adc
or
es
imul
mov
outs
in
test
sbb
jae
hlt
mov
xchg
pop
call
mov
push
sar
in
mov
(bad)
mov
xchg
and
fidivr
ret
cmp
ins
lods
das
sbb
into
(bad)
inc
daa
arpl
sbb
movs
ja
or
push
test
ror
push
jle
iret
push
imul
mov
pop
test
xchg
push
mov
xor
pop
lods
jmp
sub
push
test
div
hlt
mov
pushf
out
and
clc
mov
imul
sbb
mov
jecxz
(bad)
imul
retf
adc
in
inc
daa
aas
or
inc
stc
dec
ds
mov
mov
cmp
fimul
xchg
xlat
gs
pop
mov
sbb
inc
fidivr
xor
xchg
push
call
movs
dec
loopne
shr
loopne
iret
out
ss
aad
adc
pusha
mov
test
xor
push
pop
add
add
(bad)
loopne
retf
jmp
push
add
aam
xchg
jle
mov
dec
pop
pop
mov
scas
lahf
pop
sub
mov
add
and
pushw
popa
out
das
retf
push
jne
dec
pop
or
mov
cld
imul
call
mov
jno
pop
out
leave
push
out
xchg
pop
aam
add
retf
jecxz
xor
mov
(bad)
outs
cmps
test
jl
rol
pushf
pop
rcr
or
fdiv
pop
js
adc
inc
and
lods
adc
rcr
mov
inc
pop
inc
adc
pop
cmp
inc
dec
sbb
sub
sub
xor
cmp
dec
push
pusha
mov
fstp
test
cmp
stos
mov
(bad)
jg
scas
fcmovnbe
or
xor
dec
rcr
repnz
rcr
jmp
aas
or
(bad)
push
clc
or
push
daa
idiv
cmp
mov
cld
inc
out
in
or
mov
push
add
imul
aaa
leave
sub
pop
dec
cmps
dec
sub
lods
pop
xor
dec
cld
aad
add
(bad)
add
popa
jp
cwde
jo
cmps
call
dec
xchg
mov
mov
push
push
scas
ja
mov
aad
scas
leave
cld
ins
jg
mov
jb
dec
ss
aad
imul
jo
mov
je
xchg
outs
pop
jg
mov
xchg
sub
dec
ret
cld
cmp
sbb
cmp
xor
mov
jns
scas
js
xchg
cs
xchg
jno
int3
mov
lods
cld
pop
ret
sbb
sub
mov
xor
pop
es
mov
xchg
pop
inc
test
shl
ret
xor
js
dec
inc
js
and
dec
cmp
and
pop
sbb
mov
add
ret
xlat
fs
inc
pop
loope
push
jns
cmp
sub
and
inc
jo
dec
add
or
and
and
and
jg
inc
test
retf
(bad)
aam
movs
(bad)
sahf
adc
popf
gs
aam
sbb
cmc
push
fidivr
xchg
xchg
test
cmc
imul
jo
dec
out
adc
or
jecxz
pop
xor
push
cmps
ins
aas
ins
mov
cmp
pop
jmp
adc
(bad)
cmp
or
lahf
sbb
xchg
sbb
in
test
ret
mul
aam
inc
push
mov
cmc
cwde
call
jmp
or
jmp
mov
mov
inc
cli
fdivr
jmp
stos
ja
imul
and
repz
and
inc
mov
cmp
lea
scas
dec
pushf
int
test
pop
pop
inc
xor
inc
gs
xor
and
pop
jno
imul
xchg
loope
cmp
dec
out
xchg
pop
cmp
xchg
inc
mov
mov
xchg
adc
adc
mov
jl
mov
sar
mov
test
vprotw
std
xor
ss
(bad)
idiv
pop
inc
xor
pop
mov
mov
xlat
sbb
jmp
adc
jmp
ss
pop
mov
(bad)
or
xchg
xor
cdq
xchg
or
pop
fld
inc
xlat
dec
jl
xchg
cdq
cli
dec
sti
jmp
(bad)
in
or
bound
nop
ins
outs
cmps
enter
int
mov
ret
pop
jg
fdiv
xor
retf
fcomp
daa
imul
pop
pop
mov
int3
mov
adc
test
sbb
jno
in
inc
mov
sbb
inc
mov
stos
bound
sbb
in
sbb
or
pop
push
jg
dec
enter
loop
mov
shl
jb
icebp
mov
in
lods
or
pushf
inc
add
lock
test
or
shl
sub
or
push
sub
call
jbe
mov
sahf
neg
jbe
loopne
fs
or
pushf
add
pop
ficomp
scas
packuswb
test
mul
jmp
jl
xchg
push
in
mov
in
clc
push
cmp
shl
mov
bound
test
jmp
adc
test
es
jnp
push
cwde
xor
arpl
or
mov
into
sbb
clc
xchg
jmp
pop
push
mov
ss
add
ins
dec
cdq
push
push
test
stos
ss
in
scas
iret
pop
lock
push
push
mov
jns
mov
inc
aam
or
iret
mov
test
mov
js
ret
pop
rcl
movs
stos
test
mov
in
dec
es
retf
add
add
sub
pop
mov
mov
int3
mov
int3
fisub
inc
dec
fcom
sahf
sbb
lods
ja
xchg
arpl
pop
inc
xchg
into
xchg
stos
(bad)
jne
arpl
call
mov
inc
(bad)
xchg
inc
push
fsubp
nop
jb
sbb
fwait
sbb
sub
aam
cmp
fwait
mov
jp
sub
mov
stc
jbe
inc
jne
dec
cmp
or
out
xchg
xchg
pop
inc
jmp
popf
sar
sub
or
adc
scas
and
adc
jns
mov
dec
sahf
fiadd
in
pop
jle
and
shl
out
cmps
sbb
push
repnz
fdivr
sbb
jmp
push
(bad)
jmp
add
int
sbb
repz
pop
(bad)
adc
sub
jg
fldcw
jns
retf
xor
and
pop
gs
mov
sbb
popf
outs
dec
(bad)
or
sub
and
ficomp
jecxz
fs
and
xchg
xor
mov
push
leave
retf
scas
je
push
cmp
idiv
inc
jmp
cdq
jmp
push
mov
adc
aam
int
cmp
pop
push
mov
add
test
inc
fimul
jae
fsub
adc
adc
jle
pop
jae
dec
sbb
cmp
lahf
rcr
in
cmps
movs
sbb
stc
dec
and
cdq
pop
fld
fist
aam
push
mov
push
mov
jmp
lock
mov
sbb
cmc
test
mov
call
jmp
push
mov
cmp
ja
mov
mov
cmp
and
gs
mov
xchg
and
jbe
test
lea
aas
adc
stos
xchg
add
push
lods
jb
xchg
sahf
ins
call
mov
out
std
jbe
jle
test
jp
mov
(bad)
cdq
mov
add
lods
push
out
popa
sub
and
mov
pop
scas
imul
outs
jg
int
adc
sbb
inc
inc
mov
jno
fld
in
xchg
add
dec
pusha
fld
cdq
call
out
mov
(bad)
xor
inc
lea
ins
push
mov
shl
fcomp
push
cdq
mov
icebp
pop
lods
adc
push
ret
clc
frstor
enter
jno
jno
pop
cmps
inc
inc
push
adc
fstp
xlat
cmp
xchg
pop
adc
fidivr
outs
je
cmp
jo
mov
add
adc
sti
push
mov
jb
pushf
dec
out
jecxz
mov
mov
xchg
clc
jp
aad
std
or
sbb
fisub
sahf
cmps
repnz
retf
xor
mov
dec
push
adc
shl
adc
inc
mov
popf
enter
idiv
jecxz
mov
push
enter
and
adc
sbb
(bad)
and
fs
jge
pop
pop
inc
lahf
dec
fcomp
cdq
pop
shl
xor
out
adc
pop
mov
call
stos
jmp
and
sbb
ins
clc
or
push
clc
dec
push
or
cs
daa
jae
stos
movs
leave
sub
stc
jle
in
jl
neg
lds
or
and
dec
mov
jno
mov
cmp
test
inc
jecxz
inc
addr16
dec
loop
mov
sub
stos
lock
pop
call
mov
mov
xchg
jmp
pop
mov
jmp
shl
ds
cmp
dec
test
inc
daa
jno
cmps
test
push
inc
retf
dec
in
fcomp
(bad)
je
inc
pop
jmp
das
jp
sbb
add
(bad)
pushf
or
mov
add
ds
jmp
fdivr
ds
je
fsub
jge
rcl
adc
(bad)
xchg
adc
js
cdq
(bad)
in
popf
sbb
lods
cmp
out
out
scas
fimul
mov
pop
(bad)
dec
jmp
pop
fwait
cmp
inc
mov
cmp
mov
jmp
lahf
sub
repz
pop
cmp
and
in
push
jns
jae
adc
mov
mov
cwde
shl
jge
pop
movs
jb
xchg
(bad)
dec
loop
loop
out
inc
adc
enter
inc
lea
inc
pop
cmps
cmps
mov
scas
retf
in
pop
test
xor
cs
enter
cmp
cmp
ins
pop
push
mov
mov
enter
daa
mov
cmp
aas
popf
(bad)
adc
sbb
push
and
sbb
mov
ret
lock
test
outs
xchg
inc
in
sbb
dec
push
sbb
pop
test
mov
scas
cmp
mov
repz
scas
lahf
inc
nop
pop
lods
or
sbb
clc
or
push
popf
inc
and
cdq
scas
cwde
dec
sbb
and
mov
jno
ficomp
aaa
xor
dec
mov
adc
loope
sbb
xchg
inc
pushf
sbb
jnp
and
dec
xchg
in
xchg
inc
xchg
loopne
add
(bad)
mov
out
ins
xchg
movs
rol
ret
mov
xchg
test
sub
mov
push
pop
pop
aas
pop
scas
xor
mov
xchg
stos
mov
jmp
jns
mov
pop
xchg
and
test
mov
push
not
aas
iret
call
push
fild
ins
nop
pop
cmc
cdq
mul
iret
mov
adc
(bad)
lods
add
add
fcomip
(bad)
sar
jno
sbb
hlt
push
cli
retf
in
jp
cmp
xor
and
mov
dec
or
dec
sti
retf
sub
ficom
push
sbb
inc
xor
imul
jnp
pop
adc
aas
and
ins
(bad)
mov
sbb
fstp
pop
push
nop
pusha
xchg
mov
repz
repnz
add
pusha
outs
nop
mov
xor
ret
(bad)
jge
mov
ins
fwait
das
repz
fbld
sbb
push
mov
dec
test
jns
mov
aam
add
ins
xchg
loope
mov
inc
mov
pop
mov
xchg
push
int3
inc
inc
mov
push
mov
mov
enter
scas
jmp
jae
(bad)
ror
xchg
push
hlt
mov
xchg
sbb
dec
lods
cli
(bad)
int
xchg
mov
cld
cmp
mov
push
in
or
es
fisttp
dec
je
inc
mov
ins
xchg
lods
cdq
push
or
dec
in
adc
add
je
mov
arpl
inc
xchg
or
cmps
cmp
out
mov
mov
pusha
fisttp
dec
scas
xlat
xchg
adc
sub
mov
stos
mov
pop
pop
xchg
nop
std
and
retf
dec
xchg
mov
int3
je
cmp
sub
in
push
cld
add
bound
push
and
pop
out
clc
mov
test
pop
cmp
adc
or
stos
push
test
mov
jg
retf
pop
cmp
fild
fdivr
xor
pop
mov
fwait
pop
pop
leave
fidiv
xchg
jecxz
add
fwait
mov
xor
fsubr
int3
loopne
pop
mov
stc
sub
mov
aad
loope
or
stos
pop
bound
div
pop
icebp
cdq
mov
cmp
fcomp
stc
and
pusha
add
and
and
stos
pop
inc
mov
pop
lahf
movs
test
call
pop
cli
pop
push
dec
mov
popa
loopne
mov
loop
ja
mov
mov
jmp
mov
cwde
push
jl
mov
bound
into
fmul
mov
xor
dec
in
cli
call
jns
fld
pop
pushf
jb
ja
ror
call
add
jb
xor
pop
addr16
inc
movs
fincstp
push
inc
sbb
(bad)
loopne
mov
pop
jge
push
sti
xchg
loope
mov
in
and
clc
lahf
jae
adc
and
addr16
sbb
fisttp
fwait
jae
jno
or
dec
clc
fldpi
push
iret
xor
dec
ficom
push
jnp
push
aas
push
xchg
retf
or
or
es
packuswb
jns
mov
jg
mov
cld
retf
or
loop
cmp
lahf
enter
xchg
pop
into
sahf
jge
leave
retf
ficomp
cmps
mov
adc
xchg
mov
scas
ins
hlt
jae
xor
aam
sahf
pop
push
add
xor
mov
stos
nop
xchg
dec
sbb
dec
adc
dec
cmp
cmp
add
adc
add
adc
call
sub
into
loop
lea
arpl
push
add
adc
xchg
jl
(bad)
cli
xchg
jo
sbb
dec
js
call
int3
(bad)
cmp
cmc
(bad)
push
shr
sub
push
mov
ret
cmp
dec
mov
inc
pop
ja
test
mov
dec
jnp
repnz
pop
stc
push
xor
and
int3
add
mov
mov
jmp
stos
and
lock
mov
stos
dec
sub
pop
push
fild
scas
mov
in
dec
test
dec
xchg
mov
add
fisttp
fst
aam
ret
and
sahf
cmp
and
cmps
cwde
movs
mov
add
jp
ret
sbb
inc
ds
imul
retf
pop
hlt
inc
jb
push
and
stos
jno
dec
pop
sti
fdiv
pushf
pop
push
lds
movs
repz
mov
mov
push
sar
stos
daa
call
(bad)
je
mov
hlt
cmp
in
adc
xchg
dec
les
or
add
cdq
cmp
cmp
scas
pusha
sbb
xchg
nop
int
sub
inc
xchg
fbstp
mov
ins
add
in
or
addr16
jmp
sar
jne
jno
fisttp
stos
mov
adc
loope
movs
es
jp
imul
repnz
mov
out
jae
pop
mov
jb
mov
xor
leave
fadd
xchg
xchg
imul
sti
xor
std
cmp
inc
test
jle
xchg
ja
jno
mov
mov
in
jnp
mov
pop
sbb
cmp
pop
push
arpl
add
(bad)
xor
sub
push
addr16
lods
jecxz
xchg
fadd
inc
inc
and
sub
sahf
ret
inc
mov
out
es
retf
adc
ins
scas
mov
dec
xor
(bad)
inc
outs
pop
mov
cmp
into
retf
js
sbb
sub
inc
pop
loopne
or
mov
icebp
jns
mov
mov
inc
hlt
pop
sub
js
pop
mov
mov
addr16
cdq
neg
dec
add
push
sahf
loop
jmp
mov
mov
mov
mov
repz
xchg
scas
jmp
mov
popf
add
xchg
icebp
shl
adc
in
sbb
adc
inc
jmp
or
inc
mov
inc
or
mov
and
sbb
cli
push
mov
pop
jno
add
pop
sbb
push
nop
sbb
cs
sbb
mov
sbb
stos
mov
leave
cld
jge
pop
fs
xchg
frstor
mov
push
(bad)
hlt
stos
xor
je
lods
mov
jae
fistp
jg
sub
adc
(bad)
xchg
jb
inc
shr
add
mov
lods
sbb
loope
push
jl
retf
and
jns
ss
mov
pop
mov
ds
in
rcl
and
jecxz
xor
pop
dec
(bad)
sub
cmps
repnz
push
pusha
test
ret
xchg
(bad)
xor
push
call
dec
mov
mov
stc
push
jbe
jae
add
bound
xchg
cli
(bad)
and
mov
pop
inc
call
sbb
pop
rcr
cmps
xor
mov
push
inc
and
out
cmps
inc
mov
or
data16
(bad)
fdivr
push
loop
jae
mov
neg
fmul
mov
jge
mov
xchg
stc
mov
xchg
mov
jl
inc
sbb
push
call
test
adc
mov
out
mov
out
(bad)
stc
and
dec
sbb
cmp
push
adc
sub
lahf
inc
adc
mov
add
mov
mov
sbb
and
movs
hlt
dec
out
or
popa
xor
data16
sbb
push
xchg
inc
pop
pushf
rol
(bad)
bound
xor
retf
jle
and
fbstp
pop
pop
xchg
outs
out
scas
mov
(bad)
xchg
std
push
adc
adc
jo
pop
mov
jl
mov
imul
dec
int
xchg
mov
sbb
(bad)
lahf
clc
jns
int
push
ror
or
je
lea
jg
test
adc
cli
ficomp
mov
imul
push
sbb
in
inc
in
jl
cmp
push
sub
mov
shl
sbb
mov
dec
xor
xor
mov
(bad)
cmp
inc
pop
rcl
mov
stc
xor
inc
sahf
cld
xchg
and
pop
inc
xchg
dec
cmc
lods
retf
jns
lock
cmp
mov
sub
xchg
shr
mov
push
push
daa
in
out
pop
cdq
inc
pop
or
daa
stos
inc
pop
pusha
cwde
(bad)
mov
push
sub
rcl
inc
sbb
pop
fs
sub
bound
inc
mov
push
call
jmp
imul
sub
inc
(bad)
into
fsub
repz
daa
shl
nop
adc
sahf
aam
fwait
gs
mov
xchg
cmp
out
sbb
leave
xor
xchg
(bad)
mul
inc
or
jnp
ins
cmp
mov
mov
push
retf
aam
test
add
inc
and
adc
test
mov
jmp
push
dec
add
xchg
movs
sbb
push
jl
stos
jecxz
xchg
into
pop
ret
ja
dec
ret
gs
out
adc
xchg
jl
(bad)
cmps
xchg
adc
stos
xor
repnz
xor
jnp
(bad)
fist
dec
cmps
cmp
push
ret
aad
and
pop
push
sbb
mov
pop
and
sahf
xchg
adc
in
pop
rcr
pushf
mov
inc
push
inc
call
daa
test
push
imul
sbb
test
xchg
pop
xlat
push
add
ret
mov
test
push
lock
vpcomb
inc
push
movs
mov
loopne
mov
push
stos
mov
or
xor
sbb
push
ds
nop
cdq
movs
mov
in
or
std
jb
jno
jecxz
adc
sub
aas
out
push
js
jg
xchg
xor
xchg
mov
add
push
retf
pop
retf
retf
outs
push
pop
test
cmp
mov
pop
pop
retf
ror
mov
addr16
pushf
mov
adc
jmp
sahf
pop
in
(bad)
adc
loopne
out
sbb
sub
sahf
pusha
sub
ret
xchg
mov
jecxz
jno
in
imul
cmp
jl
or
and
mov
data16
aad
push
pop
aaa
dec
(bad)
lods
jmp
ret
pop
lahf
push
sar
xchg
jmp
sub
inc
in
iret
sub
sahf
push
ds
xchg
fdivr
jl
in
mov
cmp
push
(bad)
mov
inc
rcr
and
cmp
cld
ins
sub
mov
int
out
cmp
sub
inc
and
add
sub
jo
fistp
(bad)
adc
inc
push
inc
xlat
test
sbb
jl
nop
js
les
jg
mov
mov
mov
sar
lea
xor
xchg
fist
icebp
mov
jns
xor
push
mov
scas
pop
std
inc
inc
or
pusha
xor
imul
cmp
js
fsub
mov
xor
pop
popf
pop
xchg
xor
sbb
popf
cmp
push
inc
ret
retf
mov
xchg
lock
les
and
inc
mov
in
retf
mov
mov
lahf
or
imul
fst
mov
adc
loop
mov
(bad)
mov
jl
aaa
add
(bad)
push
pushf
or
xor
mov
xchg
(bad)
mov
fimul
outs
jns
mov
and
div
fbstp
xchg
inc
btr
fsubr
icebp
ins
inc
and
imul
in
pop
repz
xor
fdivr
adc
pop
add
iret
cmc
cmps
hlt
out
sbb
test
or
aad
in
inc
sbb
sub
aaa
pop
mov
or
add
jmp
push
imul
jne
pop
dec
mov
jne
into
(bad)
aas
xor
fs
jecxz
stos
xchg
inc
test
xchg
test
dec
mov
mov
push
(bad)
je
outs
sti
mov
les
pop
push
lea
loop
stc
inc
loop
inc
xchg
jns
dec
sbb
fadd
dec
sbb
fcomp
pop
push
loopne
adc
into
or
(bad)
sbb
outs
jge
add
push
mov
pusha
adc
mov
(bad)
xor
or
int3
into
sti
adc
sbb
movs
cs
cld
push
ret
xor
fwait
dec
mov
mov
mov
mov
sub
icebp
sbb
jnp
in
test
inc
sub
inc
jmp
push
inc
xchg
push
dec
stos
(bad)
retf
or
push
loop
pop
xchg
jmp
adc
mov
enter
inc
mov
inc
scas
aam
adc
mov
retf
rcr
jns
mov
in
jmp
xlat
mov
mov
test
popf
pop
montmul
cmps
test
(bad)
(bad)
jns
mov
daa
sub
shr
shl
pop
or
lahf
xor
jo
cs
mov
aas
int3
jbe
sar
std
jno
jge
retf
jns
arpl
inc
inc
stos
push
or
bound
pop
pop
(bad)
hlt
adc
fsub
adc
arpl
cmp
mov
pop
fucom
pop
sub
ror
stos
mov
ja
(bad)
lods
cmp
jl
mov
push
nop
dec
scas
dec
and
jmp
adc
jno
sub
inc
(bad)
imul
or
jmp
inc
rcr
addr16
mov
dec
jb
inc
sbb
lods
scas
ins
cmp
fwait
and
adc
pop
call
ret
jecxz
in
mov
mov
mov
frstor
test
adc
aam
xchg
cmc
fistp
mov
pop
sbb
jmp
pop
inc
mov
jbe
dec
cdq
mov
in
jnp
mov
cwde
loope
inc
push
adc
or
je
push
lods
add
fdivr
xlat
adc
call
jmp
into
jno
inc
push
addr16
lock
xlat
cmp
hlt
xchg
imul
hlt
hlt
jbe
popa
mov
add
adc
jmp
adc
push
jle
mov
es
xor
clc
fistp
push
inc
jbe
mov
ja
pop
jmp
sbb
pop
iret
jecxz
xor
dec
sbb
xor
xchg
pop
stos
and
dec
add
lods
add
and
xchg
inc
mov
arpl
in
sbb
pop
leave
mov
test
(bad)
inc
mov
mov
out
cld
cmp
fstp
outs
adc
scas
pusha
into
outs
(bad)
aas
adc
rcl
inc
jge
stos
sub
push
clc
inc
aaa
push
mov
rol
ror
(bad)
jg
jae
loop
push
popa
jl
mov
add
lahf
jg
mov
jl
lea
in
lahf
and
add
push
fldenv
dec
aad
ja
mov
idiv
popa
xchg
cli
xchg
ret
outs
pop
mov
xchg
iret
mul
mov
dec
or
neg
(bad)
push
sar
sub
inc
jae
movs
mov
das
or
and
inc
add
fs
and
mov
arpl
pop
int3
(bad)
cwde
pop
stos
mov
inc
outs
dec
fstp
xchg
(bad)
jge
hlt
xchg
dec
in
xchg
loope
aaa
aam
mov
and
scas
popa
and
retf
jmp
retf
xor
cli
fistp
pushw
pop
fcomp
jne
stos
dec
ss
xor
stos
fadd
imul
and
outs
push
test
(bad)
cmp
xchg
fwait
lods
jno
push
pop
cwde
icebp
lahf
add
jb
sar
test
je
xchg
fsubrp
lods
cmp
pop
lock
dec
jo
mov
shl
lods
fisub
inc
scas
add
out
sbb
xor
in
stos
cmp
les
inc
mov
inc
mov
leave
push
shr
cmp
xor
sbb
pop
je
pop
add
mov
neg
xor
leave
add
sbb
mov
fdivr
inc
cmps
into
cdq
(bad)
rcl
or
jl
lahf
fsubp
dec
mov
xchg
cmp
out
in
clc
sbb
ficomp
inc
stos
inc
push
or
xchg
pop
cmp
adc
jo
xchg
mov
xor
into
inc
cli
fdivr
lock
inc
inc
fcom
or
ud2
mov
mov
sbb
popf
data16
mov
jmp
cld
push
shr
cwde
push
call
(bad)
or
inc
cmc
mov
pop
jecxz
test
cmp
dec
pop
mov
adc
xor
in
and
adc
pop
mov
inc
or
retf
(bad)
aam
inc
leave
js
jecxz
or
adc
in
push
add
or
inc
shl
lods
xor
mov
xor
push
dec
ret
add
(bad)
inc
retf
dec
jno
xchg
jl
fadd
outs
loopne
pusha
adc
(bad)
mov
xchg
push
loope
mov
dec
fcmovb
test
mov
in
test
sbb
mov
pusha
pop
mov
push
push
test
sbb
test
shl
mov
sbb
pop
cmp
pop
test
fwait
push
test
cmp
das
inc
mov
ins
xchg
in
mov
mov
addr16
jecxz
mov
loope
std
mov
and
call
retf
pop
jnp
mov
sti
sub
cmps
push
in
rcl
pop
or
rcl
inc
or
jne
push
movs
dec
sbb
nop
mov
add
mov
add
add
xor
or
xor
cmp
scas
into
cmps
aaa
adc
loope
int
arpl
sbb
rcl
(bad)
(bad)
pop
mov
mov
pop
mov
mov
pushf
mov
pop
popf
and
call
mov
icebp
dec
xlat
sbb
stc
out
jmp
fcomp
push
arpl
ret
dec
fstp
inc
mov
jae
or
adc
mov
into
add
sbb
mov
add
xor
js
ror
test
(bad)
pop
jecxz
retf
push
(bad)
je
mov
push
(bad)
test
adc
xor
test
arpl
inc
xchg
and
clc
stc
xlat
xchg
addr16
jp
jno
setae
mov
pusha
fmulp
or
ret
jp
jae
cli
add
jne
pop
mov
sbb
mov
inc
stos
cmps
xchg
and
pop
loopne
sti
add
retf
je
outs
mov
cmp
mov
out
stos
lods
and
fcom
sbb
icebp
addr16
not
lock
xlat
bound
dec
in
(bad)
sub
dec
jae
dec
(bad)
pop
mov
push
jl
ror
sub
pop
enter
cmp
adc
cmp
neg
data16
stc
and
pop
addr16
adc
stc
jp
adc
ins
rcl
pushf
loope
cmps
(bad)
in
(bad)
in
sbb
stc
mov
repz
xchg
xor
nop
xchg
ds
jmp
fidivr
dec
fimul
or
cmp
jae
or
mov
push
mov
out
dec
popf
fnstsw
popa
adc
sub
mov
jl
popf
push
cmp
adc
adc
mov
fnstcw
data16
jno
scas
les
rcl
xor
out
xor
jge
xor
in
mov
xor
mov
sbb
sub
mov
(bad)
fimul
push
push
xchg
xor
adc
repz
cld
jle
push
aaa
cld
sbb
add
push
xchg
and
stos
and
push
pop
fst
mov
rcr
jnp
nop
add
mov
jmp
jmp
mov
pusha
fwait
lds
mov
ins
mov
add
jecxz
stc
dec
out
inc
sub
sub
pop
std
cmp
mov
ds
xchg
sar
retf
outs
adc
pop
int
ss
or
lods
sub
mov
cmp
mov
sbb
sub
xor
pop
jp
pop
cdq
mov
jle
loope
inc
popf
in
pop
fldcw
mov
fptan
dec
xchg
mov
icebp
mov
sub
mov
push
inc
pop
cmp
xchg
leave
push
iret
xor
dec
scas
imul
mov
cmps
jg
aad
cmps
fmul
jae
ret
dec
or
xchg
push
cwde
jg
imul
cmp
cmps
or
or
bnd
ficom
push
mov
mov
mov
mov
stos
mov
lahf
push
sbb
div
mov
cmc
inc
pop
mov
cli
adc
adc
into
icebp
pop
stc
xor
dec
scas
imul
jbe
pop
mov
add
pop
in
es
jmp
pop
push
xor
adc
pop
call
mov
push
stos
mov
imul
xor
pop
push
nop
jp
nop
dec
fnstsw
add
clc
jle
movs
fsub
setae
xchg
out
ror
dec
cli
pop
jmp
retf
ret
and
inc
lea
outs
jl
push
pop
je
xchg
call
mov
mov
inc
cmps
and
pop
xor
stos
sub
ss
push
je
jge
pushf
cmp
stos
xchg
lea
dec
punpcklbw
leave
loopne
mov
ja
jle
and
xchg
rol
or
mov
or
inc
mov
fcomip
test
(bad)
jo
lods
test
jne
xor
adc
icebp
inc
dec
or
and
imul
je
cli
aas
xchg
mov
ja
mov
sbb
sbb
pop
hlt
dec
dec
mov
dec
mov
cld
xor
adc
xchg
and
pop
jnp
das
xlat
mov
in
sar
push
fild
mov
(bad)
sub
mov
(bad)
cmps
test
fild
push
repz
add
(bad)
cld
jns
sbb
jge
cmp
cs
ret
nop
aam
or
pop
(bad)
int
xchg
rol
cmp
and
and
lahf
push
lods
xchg
mov
in
fnstsw
pop
data16
push
shl
and
jl
sub
mov
xchg
sbb
adc
mov
push
shr
cmp
lds
push
sbb
jae
js
pop
mov
pop
stos
pop
lahf
shr
inc
jmp
outs
jo
cmp
or
je
dec
imul
push
scas
mov
in
pop
ins
movs
inc
call
mov
rcr
or
fucomp
add
dec
ins
mov
jmp
call
aam
es
repnz
inc
add
popa
xchg
or
adc
mov
inc
jnp
cmps
sub
jge
and
push
data16
sar
add
push
jb
rcl
neg
pusha
lea
mov
test
mov
rcr
pushf
jae
pop
fwait
xchg
pop
mov
lock
fnsave
ret
jnp
jo
push
sbb
aad
mov
js
mov
xor
mov
iret
add
mov
jl
out
push
arpl
add
inc
js
push
rcr
popa
test
mov
enter
xchg
(bad)
inc
pop
and
sub
fisub
enter
fwait
jne
int3
ror
(bad)
out
shl
test
xchg
ret
(bad)
and
outs
(bad)
dec
push
pop
cli
retf
iret
adc
or
push
jl
movs
pushf
scas
sub
(bad)
rsm
retf
pop
pop
addr16
mov
pop
cdq
and
je
jns
fwait
dec
adc
mov
jmp
loopne
add
inc
fadd
call
sub
mov
scas
(bad)
fcmovb
pop
fild
mov
mov
nop
hlt
call
cwde
xchg
pop
lds
or
into
(bad)
inc
cmp
pusha
movs
push
add
test
and
push
mov
cmp
push
adc
push
lods
adc
push
leave
dec
pusha
test
xchg
sbb
push
sbb
sahf
fdivr
adc
outs
and
inc
mov
sub
add
cli
cmc
or
mov
dec
out
mov
stos
(bad)
jae
loop
ins
lds
(bad)
dec
or
ret
inc
push
push
xor
gs
jne
mov
scas
sbb
sar
pop
add
add
jg
cmp
retf
mov
jno
mov
frstor
fild
pusha
stos
jge
iret
aam
mov
xchg
inc
xchg
mov
sbb
xlat
stos
adc
jge
fwait
mov
adc
bound
cdq
cmps
mov
aaa
jmp
mov
test
ss
jmp
and
pop
push
test
nop
mov
push
fcomp
aas
mov
cmp
pop
cmp
data16
sbb
mov
push
repz
push
sbb
pop
or
pop
fild
inc
fild
mov
movs
imul
pop
xor
fiadd
cmps
mov
dec
(bad)
ficom
loope
push
out
scas
cmp
dec
jecxz
ret
addr16
inc
daa
inc
fild
sub
outs
stos
fxch
leave
and
stos
jnp
shl
imul
push
add
pop
mov
int3
dec
cmp
dec
jge
mov
cmp
aam
dec
test
inc
lea
mov
loope
int3
out
or
jl
xchg
call
movs
xchg
stos
aad
sbb
inc
hlt
sub
sbb
adc
pop
xchg
adc
jb
jb
jp
stos
stos
into
ss
out
dec
cmp
js
xor
inc
retf
pop
inc
test
cmp
cdq
xor
pop
aam
test
rcr
inc
fadd
inc
lods
pop
fbstp
jo
mov
push
repz
sub
imul
cwde
scas
push
sbb
std
stos
call
aad
in
test
hlt
in
pop
dec
jo
outs
inc
push
pushf
js
ins
in
ret
lea
sti
mov
gs
gs
sbb
jbe
and
stos
jg
ficom
adc
test
ret
and
fadd
pop
stos
jp
mov
push
in
push
(bad)
std
icebp
ja
dec
xchg
xchg
push
in
sahf
rdpmc
xchg
leave
stos
xlat
fcom
mov
inc
rol
sbb
popa
loopne
pusha
sub
sbb
ds
mov
and
dec
fcom
dec
push
sbb
sbb
jp
sbb
jmp
and
xor
test
dec
jmp
xchg
std
gs
sbb
push
stc
mov
test
cmps
push
adc
int3
push
fwait
mov
out
adc
push
lock
enter
(bad)
cwde
je
dec
iret
pop
cmp
shr
iret
inc
fidivr
sbb
cmp
inc
pop
jns
mov
ins
fisttp
outs
add
add
add
add
dec
dec
mov
je
(bad)
pushf
push
add
jnp
out
aas
mov
add
fld
fnstcw
stos
dec
fsub
nop
ins
in
test
add
ret
jmp
push
mov
inc
inc
or
lea
cmp
adc
cld
bound
push
xchg
pushf
mov
(bad)
sbb
sar
jg
retf
xor
push
imul
push
mov
push
mov
mov
aaa
push
push
jecxz
call
sbb
or
enter
xchg
push
imul
xchg
or
jne
lods
cmps
loop
ficom
mov
push
sbb
fst
sub
(bad)
ds
into
mov
and
cmp
jb
xchg
ins
(bad)
loopne
pop
add
enter
or
pushf
rol
arpl
push
jmp
mov
sub
xlat
mov
mov
jo
fwait
outs
xchg
mov
out
add
pop
lods
test
pop
gs
mov
push
repz
mov
rcr
mov
or
test
fidiv
pop
cmp
cmp
test
mov
les
call
adc
(bad)
das
push
adc
jecxz
mov
mov
inc
in
test
ins
sub
inc
retf
pusha
lds
xchg
(bad)
pop
cmps
dec
xor
mov
movs
test
dec
pop
(bad)
fiadd
test
cwde
mov
xchg
repz
out
mov
aas
jg
push
pop
inc
jmp
cdq
int3
or
shl
jns
sar
add
and
or
loop
cwde
and
arpl
lea
ins
movs
mov
dec
test
sbb
gs
inc
nop
jp
(bad)
mov
mov
setae
div
out
jp
neg
dec
mov
aam
test
mul
mov
xor
push
lods
add
xlat
dec
repz
pop
ds
daa
pop
outs
test
scas
ret
mov
rcl
xor
cli
inc
outs
inc
adc
add
jae
test
lods
xor
jg
call
into
sub
xchg
ja
jns
cmp
cmp
mov
scas
push
xchg
pusha
mov
mov
jns
shr
inc
lock
ret
mov
leave
aaa
pop
dec
(bad)
out
int3
ja
inc
pop
sbb
fidiv
pop
mov
in
test
xchg
and
shl
mov
mov
cmp
sbb
dec
ja
mov
mov
mov
push
mov
mov
cwde
test
pop
mov
(bad)
cmps
dec
rol
test
sub
cmc
div
popa
cmps
mov
repz
sahf
pop
cmp
leave
mov
test
out
sub
inc
call
jp
xchg
out
popf
ror
jmp
jae
fld
dec
adc
in
inc
test
cmc
dec
inc
lea
and
mov
int
mov
pushf
dec
push
jg
pusha
test
xchg
stos
push
add
fiadd
mov
ins
jle
xchg
test
out
(bad)
retf
dec
pop
inc
jecxz
int3
js
add
pop
inc
rol
jp
fwait
sub
xchg
(bad)
aaa
sub
xor
push
push
cmp
daa
aas
pusha
ja
stos
pop
mov
mov
and
not
adc
xchg
inc
xchg
jmp
jge
fadd
cmp
enter
dec
cld
adc
add
movs
test
mov
outs
adc
fistp
cmc
fnstsw
xchg
sub
jmp
adc
cmp
sbb
cmps
sub
pop
mov
add
pop
(bad)
xlat
jns
leave
bound
pop
mov
add
aam
inc
shr
mov
push
mov
sti
sub
popa
in
scas
mov
fbstp
jg
js
sahf
lock
(bad)
mov
ret
push
call
pop
mov
mov
mov
movs
lods
loope
adc
fld
lds
and
sti
fstp
adc
cmp
pop
sbb
or
add
jns
in
sub
and
xor
mov
add
or
mov
ret
fild
clc
jl
jl
jno
test
jl
fwait
pop
push
in
mov
test
pop
push
mov
fiadd
xchg
(bad)
dec
mov
or
aaa
sar
idiv
popf
add
dec
popf
and
jnp
inc
add
movs
fnstcw
inc
jmp
jae
shl
iret
ss
push
movs
je
xchg
sbb
sti
loope
mov
popa
inc
xchg
je
xchg
frstor
aam
data16
mov
xchg
sbb
jnp
cld
adc
mov
xlat
fimul
lea
sbb
jmp
pop
cmp
push
and
mov
dec
pop
aad
fucomip
and
sub
sbb
and
add
pop
ins
movs
outs
push
xchg
inc
xchg
fs
(bad)
test
cld
dec
jg
mov
test
loope
xchg
les
xor
fldl2e
sub
je
jmp
pop
xchg
mov
jmp
mov
lds
pop
push
mov
imul
cmp
jp
cmp
stos
cs
xchg
cmp
fcomp
std
lock
gs
cmp
cmc
add
call
lods
mov
in
lock
add
arpl
lds
call
rol
push
call
mov
xchg
aam
fdiv
cmp
cli
fcom
xor
push
push
mov
dec
pusha
mov
or
scas
mov
leave
jge
fdivr
jmp
mov
and
mov
imul
bound
push
outs
jmp
in
retf
retf
sub
call
in
push
aam
cld
sub
jns
clc
test
cmp
pop
sti
movs
mov
sub
(bad)
mov
les
lods
or
inc
ret
js
add
imul
test
mov
dec
sti
mov
mov
sbb
inc
sub
or
inc
adc
add
shr
lahf
out
xchg
mov
jge
dec
inc
test
sbb
mov
mov
std
cs
mov
pop
jno
mov
aad
jmp
shr
dec
pop
pop
dec
stos
sub
sbb
inc
mov
push
push
mov
leave
jbe
and
sti
jo
pop
add
es
mov
mov
les
xchg
test
cdq
outs
inc
xor
xchg
hlt
mov
ror
jge
dec
icebp
xchg
aad
mov
mov
es
push
cmps
(bad)
pop
jp
mov
(bad)
mov
cs
dec
xlat
xlat
scas
inc
shr
imul
arpl
mov
test
xchg
xlat
jp
into
jp
push
mov
arpl
imul
js
mov
cli
rcr
pushf
sbb
fld
fcomp
mov
mov
lea
ins
add
mov
push
inc
loopne
mov
aam
jnp
test
xor
adc
leave
repz
xor
jle
or
dec
pushf
or
mov
aas
fild
pop
jns
push
jmp
mov
fdiv
mov
adc
push
pop
(bad)
cli
sti
inc
mov
inc
lds
inc
dec
mov
sar
adc
call
(bad)
js
mov
retf
sbb
call
sbb
pushf
xor
jno
dec
pop
das
rcr
int3
js
push
add
pop
cwde
push
sbb
sar
int
js
test
cmp
push
or
mov
mov
lea
mov
mov
xor
pop
cdq
retf
mov
dec
mov
push
mov
addr16
loopne
iret
test
mov
xchg
pop
mov
aam
test
shl
test
sub
pop
test
inc
push
inc
cdq
das
pop
lods
xor
mov
out
jge
fnstsw
and
push
or
out
or
or
cmps
sbb
xlat
call
mov
in
add
dec
ret
cmps
(bad)
jg
hlt
in
mov
jmp
aad
scas
add
mov
xlat
clc
jo
xchg
mov
or
push
retf
push
repz
inc
cdq
sub
mov
add
lahf
test
add
int
sbb
ss
push
xor
dec
je
jns
nop
aaa
push
mov
mov
fxch
lahf
inc
mov
add
je
mov
cmp
ret
push
xlat
jecxz
cmp
ja
test
shl
mov
bsr
xchg
mul
outs
xchg
sahf
push
push
jmp
jl
movs
xor
inc
mov
xchg
(bad)
aam
xor
jle
loope
dec
push
push
or
xchg
or
mov
je
mov
push
push
adc
jmp
xor
jne
mov
pop
mov
xchg
std
mov
lock
popa
sbb
xchg
mov
out
cmp
(bad)
lods
jo
dec
jg
jl
sbb
mov
mov
in
sbb
aad
mov
cmp
cmp
sbb
scas
ds
psubb
mov
js
lea
rcr
cmp
push
jae
ins
loopne
out
lahf
in
and
not
fxam
push
nop
bound
test
mov
(bad)
dec
push
mov
ss
push
fnstsw
xor
cs
cmps
push
sbb
in
retf
sub
test
mov
pop
popa
je
out
sub
daa
and
pusha
(bad)
stos
das
jl
into
movs
bound
inc
int
mov
sbb
aad
in
(bad)
mov
imul
dec
xchg
pushf
mov
inc
out
sbb
lock
push
xchg
cdq
push
daa
dec
mov
inc
adc
aas
pushf
cmp
in
pop
or
add
inc
shr
adc
xor
and
sbb
jne
pop
jnp
js
mov
xchg
imul
(bad)
mov
(bad)
hlt
push
loop
jno
adc
loopne
jno
popf
ja
fchs
cmps
push
repnz
and
in
popf
jns
xchg
xchg
xchg
adc
xor
loope
pop
mov
push
add
retf
cs
shl
push
(bad)
push
aas
pop
xchg
mov
mov
sub
inc
retf
or
xor
jge
ds
into
add
sub
lods
sbb
jle
cmps
popf
sbb
inc
ins
(bad)
popa
call
cld
cmps
push
(bad)
mov
mov
mov
fs
ret
mov
xor
leave
hlt
jmp
fdiv
outs
int
add
sub
sbb
cmp
cdq
inc
or
mov
sbb
sub
pusha
or
and
jmp
push
dec
fidiv
mov
(bad)
ins
and
cmp
lods
call
pop
xor
sar
cmps
rcl
and
(bad)
mov
pusha
outs
sahf
mov
add
cmps
push
icebp
dec
iret
adc
aaa
nop
iret
out
pop
fimul
push
ds
mov
ja
jo
mov
(bad)
pop
out
in
jno
fild
push
inc
into
pop
pop
pusha
xor
(bad)
fiadd
scas
pop
daa
cmps
cmp
mov
inc
retf
and
push
mov
xor
mov
mov
out
dec
nop
mov
push
dec
lods
test
and
cmps
sub
mov
retf
sbb
or
adc
inc
(bad)
imul
dec
cmp
adc
dec
ret
adc
jge
mov
mov
(bad)
mov
adc
pop
fwait
cmc
test
xchg
fnstsw
sbb
push
shl
xchg
aad
mov
mov
mov
rcr
cmps
xchg
xor
mov
mov
fbld
data16
(bad)
push
dec
fisttp
dec
jmp
and
and
daa
inc
jbe
imul
xchg
iret
adc
jmp
xchg
sar
pop
pop
mov
sbb
add
inc
rcl
push
push
or
(bad)
push
inc
adc
cwde
fnstsw
ror
cmp
inc
out
call
add
xchg
pop
sub
icebp
pop
inc
(bad)
ret
test
lea
dec
fcom
sbb
mov
js
adc
pop
add
mov
lods
mov
in
retf
sub
cli
jns
jl
loopne
or
sub
mov
fcom
pop
pusha
xchg
mov
cmp
add
cli
mov
and
cmps
lds
fistp
sbb
fdivp
or
popa
mov
test
fnstcw
lods
leave
mul
icebp
sti
scas
cmc
loope
pop
mov
cmp
inc
into
enter
add
daa
xor
or
call
int
pop
sar
ror
mov
jle
push
add
sub
fs
mov
mov
add
mov
les
imul
push
std
mov
dec
popf
mov
jo
mov
xchg
in
inc
mov
sbb
xchg
xor
ret
xlat
test
mov
retf
xor
ret
daa
into
sbb
xor
cmp
xchg
mov
shr
aad
popf
loope
dec
sbb
inc
sbb
add
dec
inc
mov
inc
popf
mov
adc
and
mov
sbb
outs
push
(bad)
cwde
sar
mov
daa
jmp
jle
sti
mov
gs
mov
add
inc
cdq
fbstp
and
sbb
dec
cmc
sar
dec
fidiv
add
pop
cdq
aaa
jle
sti
inc
sub
xchg
pushf
lods
sub
ins
int
jnp
mov
inc
pop
(bad)
push
push
pop
jb
out
and
pop
fnstcw
mov
lods
adc
(bad)
loope
and
inc
scas
jmp
pop
mov
scas
lock
mov
movs
ins
int3
clc
push
adc
out
pmaxsw
imul
pop
xor
mov
dec
mov
repz
and
out
dec
push
inc
cwde
jno
jae
dec
cmp
mov
cmps
inc
in
setno
je
inc
xor
push
cmp
or
adc
popa
dec
test
test
movs
sub
dec
imul
hlt
jo
arpl
call
jmp
push
aad
push
adc
push
mov
mov
movs
and
retf
xbegin
stos
test
retf
sub
adc
fistp
call
popa
and
push
add
mov
sub
push
fimul
dec
inc
push
loop
push
push
sub
cmp
pop
inc
mov
add
xor
sub
jmp
fisub
pop
mov
dec
xchg
call
xlat
cli
mov
pushf
lods
loope
cdq
push
sbb
xlat
xchg
xchg
lods
xchg
push
lea
xor
pop
sbb
arpl
xor
pop
popf
mov
mov
sub
rcr
add
aad
push
add
xor
outs
inc
fnsave
mov
jle
movs
test
pop
xor
jmp
icebp
push
frstor
cdq
adc
mov
mov
repnz
test
pop
movs
enter
(bad)
test
cmc
gs
xchg
movs
dec
fwait
jp
xor
cmp
nop
and
jge
test
inc
jl
outs
pop
add
push
in
push
ret
jecxz
adc
ret
pop
or
sub
in
sbb
stos
ja
mov
pusha
mov
jl
retf
sbb
out
inc
and
jg
rcr
(bad)
xchg
adc
pop
sbb
pop
in
sbb
sar
mov
xlat
cmp
mov
pop
aam
xor
inc
loopne
pop
ss
mov
inc
add
cmp
xchg
mov
hlt
jg
push
adc
xor
js
or
ins
imul
push
add
ins
iret
rol
jmp
inc
gs
sub
xchg
int3
xchg
mov
sub
ret
js
mov
(bad)
push
lea
xchg
ror
cmc
stc
pop
pop
test
jmp
(bad)
fimul
pop
push
cs
mov
xor
nop
leave
inc
aas
lods
imul
pop
inc
jne
leave
sbb
sbb
and
jns
test
cli
xor
pop
jp
aam
das
mov
push
call
movs
ret
mov
adc
mov
movs
aad
mov
and
in
fbstp
dec
fstp
or
enter
stc
cmp
or
rol
mov
mov
retf
inc
out
push
mov
cmp
adc
push
push
sbb
pop
stos
adc
pop
sbb
xor
cmps
xor
push
jno
push
or
jae
clc
dec
xor
repz
lea
inc
push
mov
xchg
daa
inc
aad
mov
cmp
movs
push
int3
push
stos
dec
sub
mov
daa
in
add
pusha
mov
arpl
outs
pop
dec
jmp
sub
sbb
lea
clc
pop
data16
adc
or
xchg
dec
sbb
mov
sbb
int
movs
adc
lea
fimul
push
movs
push
shl
inc
cmc
sahf
jb
fsubrp
lods
pop
retf
cmps
xor
mov
xchg
sbb
xchg
sti
cmps
aam
cmp
sahf
sub
dec
test
clc
shl
add
je
loopne
cs
lods
sub
mov
push
dec
jp
clc
pop
ds
das
popa
in
cmp
ror
lea
fwait
mov
outs
xor
dec
in
cmps
and
lock
fist
inc
fisubr
mov
cwde
outs
hlt
mov
xchg
daa
xchg
inc
mov
push
push
cdq
xchg
and
int3
out
add
adc
pop
loope
imul
mov
outs
and
lahf
mov
cmp
imul
sbb
sbb
cmp
dec
and
xchg
mov
sbb
push
sbb
div
sub
stc
aad
inc
int
pop
icebp
js
and
push
call
pop
sub
lds
mov
jae
stos
nop
add
mov
jmp
xor
jbe
cmp
cmp
adc
lea
or
mov
mov
dec
push
out
popa
loop
xor
sti
inc
imul
xor
pop
inc
mov
popa
mov
test
cli
jmp
push
lds
pop
and
inc
xchg
xchg
dec
aad
jae
retf
push
(bad)
dec
icebp
xchg
add
movs
xchg
sbb
into
sar
mov
in
add
inc
retf
jp
fsubr
inc
pop
cdq
js
outs
jmp
pop
iret
pop
out
cs
ins
jbe
or
inc
and
jl
mov
cwde
aas
cld
pusha
inc
fisttp
mov
pop
mov
or
into
mov
sbb
mov
cdq
rep
or
pop
push
(bad)
fst
mov
jnp
mov
cld
out
repz
pop
nop
mov
sbb
sub
(bad)
iret
jg
cmp
jno
jbe
inc
sub
mov
int3
fistp
(bad)
jne
pop
inc
jmp
push
mov
movs
push
xor
mov
pop
adc
int
pop
xchg
clc
popa
add
call
fsub
xchg
adc
fldcw
or
jmp
dec
sbb
popf
outs
loope
stos
dec
or
ret
enter
add
das
dec
das
mov
xchg
add
cmc
inc
outs
inc
or
adc
pop
and
mov
enter
push
mov
addr16
xlat
xchg
or
jmp
imul
sahf
jnp
stos
call
push
into
loopne
adc
push
lock
jmp
mov
mov
or
or
call
pop
sbb
cmp
push
mov
mov
std
je
mov
rol
inc
cmp
or
pop
push
adc
sbb
dec
add
xchg
adc
ss
cdq
cmps
loope
mov
jge
imul
outs
or
push
mov
mov
in
or
lock
aaa
call
int3
cmp
mov
stc
cli
ret
dec
outs
mov
cld
push
sbb
ror
sbb
add
mov
call
cwde
mov
je
enter
sub
mov
xor
sbb
mov
jle
into
div
inc
adc
mov
add
lea
inc
push
dec
cmps
ja
mov
pusha
movs
aam
adc
and
push
dec
scas
sbb
xchg
cld
and
scas
(bad)
mov
es
xor
hlt
loopne
loop
pop
adc
jo
ss
push
stos
xchg
imul
or
pop
push
(bad)
xor
inc
add
mov
adc
sbb
push
ins
vpsrad
mov
jl
fstp
xchg
pop
pushf
out
stos
pop
(bad)
loope
add
shr
mov
arpl
xchg
xchg
and
fld
ins
lds
sbb
lock
add
or
xor
pop
push
nop
popf
mov
adc
daa
call
xor
mov
(bad)
adc
jnp
popf
fs
mov
xchg
xchg
cmps
sub
push
ins
xchg
repnz
push
into
cmp
pusha
shl
mov
cmp
int3
xchg
add
jmp
mov
dec
pop
mov
fild
inc
mov
jbe
dec
std
adc
push
jecxz
dec
and
xor
mov
test
pop
or
popf
sti
pop
jg
adc
cmp
pop
xchg
sub
jge
cmp
rcr
fdiv
stos
cmp
add
jp
cmps
sub
and
mov
mov
dec
jge
mov
and
fdivrp
stc
shl
es
pop
pop
scas
sbb
fstp
push
jle
inc
mov
outs
cli
dec
sbb
rcl
sbb
push
xchg
cmp
push
pop
add
loop
xor
sub
add
push
daa
sub
ds
cmp
out
out
test
push
and
ins
sbb
jp
out
in
shl
push
fstp
div
pop
sbb
add
nop
mov
xor
shr
call
(bad)
or
ds
inc
loop
inc
or
push
jp
mov
sbb
mov
aam
into
test
arpl
ins
inc
jbe
mov
fs
push
and
pop
dec
test
aaa
dec
shl
sbb
int
test
mul
mov
xor
xlat
dec
call
jne
mov
aam
test
pop
xchg
fld
fiadd
rol
xor
push
stos
ins
pop
inc
clc
jbe
outs
out
cwde
xchg
mov
ret
xchg
xlat
ins
jb
add
pop
adc
jae
pushf
sbb
mov
scas
cvtdq2ps
push
outs
cld
leave
out
enter
pop
jne
movs
pop
jecxz
sar
mov
loope
aam
push
push
jmp
mov
scas
test
dec
cmps
pop
je
xchg
cld
mov
lock
loopne
bound
cmp
cmc
test
popa
rol
fldcw
inc
test
push
in
mov
or
addr16
sub
es
or
sbb
push
and
test
rcr
inc
mov
inc
push
scas
pop
mov
and
movs
or
(bad)
mov
fwait
popa
mov
jbe
cmps
sub
dec
mov
jnp
js
aaa
or
rol
jae
cmp
push
pop
das
loopne
and
sub
jo
ficomp
addr16
aad
xor
and
gs
(bad)
push
xor
cmps
sub
push
mov
inc
and
dec
xchg
stos
jge
clc
pop
adc
cmc
xchg
adc
xchg
mov
mov
xchg
sbb
cmc
nop
fstp
jno
in
fiadd
jle
or
cmp
shl
add
aas
sbb
push
sub
ret
dec
pop
repnz
jo
inc
inc
fst
fs
adc
pop
inc
(bad)
adc
mov
add
lods
mov
aad
add
sub
cdq
test
in
sbb
je
std
sub
frstor
mov
in
ret
add
and
jecxz
pop
jecxz
fisttp
iret
push
xchg
cmp
jg
or
mul
mov
nop
mov
repnz
mov
push
sbb
out
ds
sub
mov
sbb
dec
adc
sbb
fisttp
xchg
daa
fild
mov
test
jecxz
arpl
jmp
test
fmul
dec
sbb
inc
xchg
cmc
xchg
std
in
pop
mov
cmp
sbb
cmc
fidivr
and
pusha
dec
sahf
and
push
mov
mov
lods
ud2
out
add
(bad)
jno
push
cmp
and
push
mov
lods
arpl
and
xor
or
push
push
cmps
xchg
aas
stos
retf
data16
inc
pushf
sub
shl
mov
call
adc
mov
cmps
sbb
mov
(bad)
out
cli
bound
xchg
(bad)
call
push
ret
test
data16
dec
mov
add
fs
fwait
nop
pushf
xchg
sub
aam
out
sub
push
mov
cmp
scas
ins
arpl
ins
xchg
xchg
inc
xor
sbb
clc
push
hlt
jp
arpl
ins
mov
xchg
pop
push
fisub
mov
mov
movs
movs
adc
rcr
mov
aad
pusha
jmp
and
out
fcmovne
push
les
ja
imul
add
cmps
movs
ret
cmp
in
xor
sbb
cmp
push
add
pushf
ss
xor
sbb
imul
shl
sar
xor
dec
sub
(bad)
dec
test
xchg
in
jmp
sub
ja
neg
pop
fwait
(bad)
cld
add
div
scas
into
xlat
cmp
scas
push
in
shr
adc
(bad)
push
ror
pop
inc
lods
sbb
jne
pop
mov
inc
les
in
iret
and
leave
je
jg
out
add
or
fmul
nop
or
mov
(bad)
loope
mov
jb
jbe
push
fdiv
(bad)
cld
and
test
lock
mov
xchg
jp
rcr
icebp
js
xchg
mov
push
cmp
mov
and
ins
sbb
jae
push
call
add
imul
dec
adc
out
adc
gs
push
ja
jbe
mov
sub
pop
cwde
ficom
(bad)
dec
pop
push
shl
cmp
mov
mov
adc
shr
adc
outs
scas
std
xchg
(bad)
mov
test
lahf
mov
rcr
and
icebp
rcl
and
lahf
aaa
inc
and
mov
movs
shl
sbb
sbb
sar
pusha
sbb
jl
add
das
fist
mov
push
test
stc
add
inc
loop
mov
into
retf
or
inc
pop
pop
mov
aas
sahf
jmp
jg
call
bound
fstp
pop
jecxz
movs
xor
imul
mov
clc
cmp
fisttp
push
sbb
pop
test
add
xchg
mov
test
jmp
je
add
mov
add
jge
fmul
scas
cmp
xchg
(bad)
inc
inc
xchg
dec
mov
and
inc
lahf
icebp
jmp
or
retf
xchg
sbb
test
pop
push
mov
loopne
icebp
loope
ds
cdq
fcom
dec
repz
inc
(bad)
in
lds
jle
inc
sar
jge
bound
popa
cdq
rcl
repnz
pop
sbb
and
nop
push
int
int3
jb
mov
inc
movs
sar
enter
stos
jmp
xchg
add
sub
cmp
mov
mov
sub
xlat
mov
outs
stos
fwait
sbb
cmps
dec
pop
call
test
hlt
imul
push
gs
cmp
clc
out
jnp
cmp
jg
xor
clc
xor
je
xchg
test
int
and
(bad)
outs
push
add
jecxz
outs
or
push
or
stos
jnp
mov
mov
fmul
xchg
mov
sar
cmp
pop
mov
sahf
jle
rcl
xchg
aaa
cli
pop
mov
sbb
mov
mov
fdivrp
repnz
inc
pop
popf
mov
sbb
icebp
test
popa
xchg
jl
js
add
das
jmp
or
and
(bad)
arpl
add
and
cmp
xor
add
bound
pop
test
mov
add
dec
(bad)
rcr
jmp
jo
xchg
dec
cmc
scas
ret
inc
xchg
xlat
mov
imul
idiv
sbb
and
rcl
cmc
retf
mov
cwde
sahf
xor
sub
or
dec
fist
je
push
xchg
or
xor
in
clc
jecxz
fwait
mov
jle
mov
pop
jne
and
bound
outs
pop
mov
test
pop
stc
iret
cmp
lock
dec
(bad)
fldenv
cdq
mov
in
icebp
mov
mov
les
mov
bound
(bad)
aaa
aam
stos
clc
call
pushf
or
jmp
cs
aam
and
inc
pop
or
or
pop
pop
xchg
ins
add
xchg
mov
push
jnp
in
adc
adc
sub
fstp
into
sbb
sbb
and
stos
mov
test
xchg
shl
pop
jmp
in
aam
mov
nop
js
mov
stos
mov
inc
addr16
fisubr
repnz
shl
hlt
inc
loope
jle
cmp
cmp
dec
out
ror
or
stos
dec
lds
dec
pop
pop
les
adc
xor
and
jae
lahf
push
pop
mov
fs
test
sbb
in
mov
jno
imul
ss
xchg
cli
jae
out
cdq
push
mov
cmps
adc
mov
push
mov
(bad)
mov
in
addr16
mov
cmp
dec
retf
pop
stc
add
jp
mov
outs
inc
pop
pushf
mov
cmps
add
jo
jae
retf
push
das
sub
pop
arpl
jp
sbb
push
and
sbb
jo
test
fcomp
mov
dec
shl
adc
loop
or
mov
push
mov
mov
cli
add
mov
add
fmul
cs
dec
pop
push
jo
outs
pop
or
xchg
iret
xor
xlat
jl
icebp
addr16
pop
or
adc
and
dec
inc
xchg
pop
push
cmp
in
mov
inc
ret
inc
xchg
jecxz
sar
jnp
dec
xlat
mov
cmps
imul
add
lds
sub
pushf
bound
out
sbb
test
xor
sbb
(bad)
inc
pop
or
xor
mov
jl
(bad)
xchg
mov
sbb
mov
cmp
sbb
or
or
popf
xor
nop
lods
adc
sub
test
cmp
pop
push
mov
adc
dec
out
movs
je
int
mul
aam
mov
mov
xchg
sub
test
pop
pop
mov
imul
aaa
inc
retf
aad
push
call
mov
push
inc
mov
mov
call
and
les
and
ds
scas
sub
imul
and
cvtdq2ps
add
int
pop
fwait
repz
pusha
addr16
mov
rcr
xchg
dec
cmc
mov
and
out
jp
ja
movs
xchg
fwait
xchg
mov
shl
test
sub
cs
push
sub
popf
inc
pop
adc
push
mov
mov
push
enter
and
mov
pop
push
xchg
push
stos
or
cmp
pop
xlat
(bad)
stos
and
pop
cdq
jb
mov
mov
add
mov
mov
fcmovbe
dec
fstp
jb
mov
arpl
sti
mov
mov
fimul
xor
dec
clc
add
xor
pop
cmps
jae
dec
mov
xchg
int3
sub
cld
dec
test
jnp
clc
fs
add
pop
add
pop
lea
cmps
imul
pop
pushf
adc
xchg
scas
add
pop
shr
test
mov
in
loope
mov
xchg
push
adc
out
ja
adc
mov
pop
loopne
mov
xor
outs
pop
icebp
fbld
inc
jmp
inc
(bad)
adc
pusha
pop
cdq
ins
push
and
pop
mov
dec
leave
aad
xchg
repnz
dec
push
cmp
add
dec
pop
pop
jmp
nop
or
dec
inc
fisttp
adc
push
add
push
ins
fdiv
stos
add
jo
mov
push
jmp
push
es
inc
scas
popf
fadd
and
sbb
xchg
mov
ds
fimul
in
mov
jecxz
jmp
and
inc
imul
jb
jb
jnp
nop
int3
mov
xor
mov
js
push
and
dec
aas
add
pop
mov
mov
popw
popf
dec
mov
adc
dec
xchg
out
aas
lods
repnz
je
and
xor
movs
inc
or
fmul
cdq
fcmovne
or
repnz
icebp
xchg
xchg
outs
nop
imul
retf
sar
push
and
adc
test
lahf
mov
sbb
enter
daa
aad
pcmpeqd
and
pop
xchg
xor
pop
push
lahf
push
add
xchg
lahf
push
inc
push
pusha
xlat
test
imul
pop
push
loope
mov
mov
stos
mov
mov
mov
sbb
lock
pop
scas
mov
scas
cmp
es
inc
les
sbb
xchg
arpl
push
out
mov
fs
cs
pop
jne
inc
mov
cmp
ds
or
adc
cmps
call
sahf
xor
pop
outs
pop
xchg
dec
ror
jmp
adc
cld
add
cli
ret
xchg
or
jg
mov
retf
xor
dec
add
add
rcl
test
leave
or
sub
frndint
push
repz
data16
movs
daa
inc
push
call
lahf
add
add
std
push
adc
fstp
gs
sbb
sbb
or
nop
sub
scas
retf
and
int3
cmps
out
sub
sti
inc
inc
jae
pop
repz
loop
sahf
(bad)
in
rcr
test
(bad)
sti
(bad)
sub
mov
mov
call
dec
(bad)
fimul
es
js
cmp
jo
jo
push
mov
mov
jbe
cli
cs
inc
sbb
sub
fs
push
daa
aad
add
pop
dec
pop
ret
fsubr
jecxz
bound
jle
or
mov
loop
or
loope
aaa
out
mov
adc
movs
inc
inc
mov
mov
mov
inc
imul
imul
push
dec
pop
jge
mov
jne
call
or
pop
lods
jns
fadd
inc
add
push
aas
dec
daa
push
mov
inc
push
mov
inc
scas
mov
fnstenv
add
js
addr16
dec
mov
mov
xor
(bad)
div
inc
xchg
mov
pop
pop
loope
cmps
adc
clc
adc
pop
dec
sub
es
push
ja
scas
sub
sub
xchg
mov
pop
(bad)
sbb
jae
sub
icebp
cmp
mov
bound
add
cmps
in
test
jo
jns
and
cld
ins
cmps
aad
dec
imul
jle
test
mov
jl
loop
mov
mov
cdq
movs
jo
push
nop
int
sub
lea
dec
push
mov
push
scas
stos
movs
mov
add
sbb
icebp
jl
mov
bound
xor
sbb
or
mov
pop
test
jp
(bad)
cmp
dec
jl
test
in
les
stos
in
(bad)
stos
add
out
sbb
cwde
in
cmps
ja
fwait
mov
jmp
iret
rcl
mov
daa
pop
cmp
mov
pop
(bad)
and
mov
pop
inc
mov
lahf
(bad)
sahf
mov
and
jns
sti
add
or
or
jns
and
repnz
js
or
sub
imul
xor
retf
pop
out
push
pop
fwait
push
and
or
(bad)
inc
mov
dec
mov
test
xor
arpl
stos
sbb
aaa
retf
jbe
add
sbb
and
mov
cdq
cmp
out
push
(bad)
and
into
jge
push
inc
cmc
add
addr16
sbb
pop
test
fisub
mov
mov
jge
mov
imul
fwait
aad
lods
xlat
inc
stc
inc
and
dec
test
out
out
test
lock
ins
mov
lea
mov
mul
call
xchg
xchg
push
rol
sub
push
out
and
fs
addr16
lahf
xor
stc
inc
in
stc
pop
test
pop
pop
data16
cmp
inc
xor
test
popa
pop
test
mov
add
and
leave
int3
cdq
or
clc
push
loopne
pop
es
jle
cmps
fild
into
loope
cmc
mov
or
cmps
hlt
adc
outs
sbb
push
call
aam
(bad)
cli
pop
inc
lea
ss
gs
add
dec
fdiv
jns
test
icebp
mov
fstp
int3
call
push
jl
(bad)
sbb
xor
jg
jge
fistp
fsubr
add
mov
aaa
push
push
cmp
fsub
shl
mov
dec
mov
loopne
push
stc
shl
aad
movs
inc
movs
lahf
mov
add
shr
xchg
push
lock
int3
into
inc
fst
adc
cmp
stos
xchg
mov
enter
fsubr
jne
into
cmp
jae
add
sbb
cwde
jb
scas
xor
cmp
pop
cmp
fidiv
fisub
jo
ins
in
sar
loop
xchg
adc
clc
xchg
adc
ror
pusha
push
mov
stos
and
div
xchg
(bad)
jge
cdq
lods
je
dec
mov
sbb
call
adc
mov
fs
stc
ins
aaa
dec
mov
fldcw
retf
sub
rcr
inc
or
pop
xchg
push
mov
fimul
mov
call
mov
sar
ins
mov
loop
lock
mov
and
jge
mov
pop
add
daa
std
lock
iret
les
call
retf
push
pop
cmp
neg
pop
icebp
adc
cmp
dec
xchg
dec
ss
pop
aaa
out
jns
ror
xchg
fidivr
inc
retf
daa
ins
or
xor
jl
popf
push
adc
test
sub
mov
jmp
jl
sub
mov
call
aam
push
sahf
repnz
icebp
ss
call
outs
inc
jmp
push
fwait
pop
cmps
push
pop
xor
xor
sbb
pop
mov
or
in
cmp
enter
inc
loop
jae
jbe
sbb
add
jl
call
lods
sti
and
js
fldenv
aam
jo
(bad)
xchg
aad
sahf
jmp
fidivr
xchg
add
mov
mov
xchg
aad
pop
mov
je
push
in
es
ror
sar
ds
push
inc
stos
sub
jno
xor
pop
mov
mov
das
sbb
arpl
and
adc
sub
outs
inc
ror
movs
mov
dec
leave
aam
ds
mov
hlt
inc
add
movs
pop
add
pop
xchg
jmp
imul
rcl
mov
pop
mov
icebp
cmc
mov
fldcw
lea
dec
cmp
out
in
cld
imul
vmread
ja
dec
(bad)
(bad)
inc
loope
push
mov
xor
or
ds
sbb
add
lahf
or
movs
lods
sub
inc
sti
shl
pusha
jge
cmps
jae
mov
test
or
in
xor
dec
idiv
pop
dec
xchg
mov
cmp
les
sahf
sbb
adc
aad
push
out
jge
inc
fwait
imul
js
add
sbb
or
cmp
sbb
sub
add
gs
jno
aad
jae
mov
ins
inc
sub
std
xchg
sbb
jno
fsubr
mov
ins
in
cmps
inc
iret
fwait
pop
pmaxub
add
inc
nop
and
out
xlat
inc
push
icebp
mov
xchg
outs
repnz
xor
add
pop
mov
xor
add
or
shl
inc
inc
cmp
sbb
push
sbb
cwde
sbb
test
xchg
push
outs
mov
das
jl
out
xor
in
sbb
jle
push
fdiv
mov
cld
in
fucom
dec
adc
xchg
imul
test
pop
cmp
sbb
shl
cmp
xchg
outs
bnd
dec
cmp
sub
and
outs
out
lods
mov
retf
mov
inc
pop
dec
adc
aas
sbb
js
cmp
mov
sub
push
add
xor
call
pop
test
jp
jo
cmps
xchg
in
push
leave
stos
add
aam
mov
mov
add
add
(bad)
shl
sbb
xchg
inc
xchg
outs
fisubr
cmp
repz
push
add
inc
mov
pop
sbb
test
jns
inc
icebp
pop
push
ds
pop
pop
and
sbb
or
ror
call
add
int
and
outs
push
movs
je
xchg
cmp
pushf
imul
pop
adc
loop
cmp
inc
lods
mov
ins
pop
cmps
mov
fldcw
fbstp
loopne
out
push
aaa
repnz
push
rol
sub
pop
pop
jns
dec
daa
inc
lods
mov
retf
fstp
fld
mov
adc
and
js
add
cmp
mov
popf
mov
shr
sub
mov
dec
sti
(bad)
test
mov
or
cmps
cmps
sub
(bad)
in
das
mov
xchg
sti
sti
mov
mov
rol
push
cs
arpl
cmp
pop
xchg
xor
pop
push
cmps
mov
lods
pop
xbegin
pop
pop
inc
shl
inc
or
fwait
sbb
ja
or
or
mov
and
iret
popf
add
js
fs
jg
cdq
call
ins
lds
adc
fnstcw
mov
div
cmc
jle
out
mov
and
push
adc
jle
pop
pop
js
les
add
dec
pop
add
pop
std
data16
icebp
xor
sub
mov
jp
ficom
cmp
(bad)
sar
imul
jns
test
sbb
icebp
arpl
cs
cwde
ror
(bad)
mov
test
fwait
cmps
pushf
int
lods
dec
pop
sti
mov
(bad)
call
push
xchg
inc
scas
sbb
or
in
push
cdq
pop
pop
jns
mov
xor
leave
nop
cmp
cmp
pop
loope
gs
push
mov
or
dec
gs
pop
shr
pop
in
shr
stc
frstor
in
fs
test
iret
stc
pop
mov
mov
push
mov
test
in
popa
mov
fdiv
or
mov
clc
in
xchg
mov
jmp
add
int3
std
cmp
add
xchg
pop
pop
ins
mov
or
pop
test
or
in
pop
ins
pop
sbb
add
xor
adc
js
(bad)
xor
test
outs
fucom
and
in
add
dec
fs
lds
ret
lock
xlat
movs
push
loop
pop
pop
repz
xchg
add
mov
js
mov
ds
jmp
test
mov
sbb
and
lahf
cmp
(bad)
jl
push
sbb
scas
mov
cmp
sbb
and
sub
push
pop
sahf
and
stos
or
sbb
cdq
add
push
inc
fucomi
mov
jecxz
jg
mov
cmp
leave
stos
push
or
(bad)
mov
pusha
inc
mov
cmc
fdiv
mov
dec
(bad)
jbe
ss
xor
rcl
pop
int3
sbb
aas
inc
ror
jne
push
push
jae
mov
stc
ja
ret
iret
inc
ins
gs
and
and
pop
outs
test
mov
xchg
sbb
jmp
ins
ins
ja
pop
fcmovb
imul
(bad)
mov
pop
cmc
repz
call
mov
or
test
push
add
pop
fs
test
dec
sbb
aad
arpl
pop
pusha
and
(bad)
outs
arpl
xor
cwde
mov
dec
xlat
push
xchg
enter
or
adc
sub
inc
mov
add
xchg
mov
pop
xlat
jmp
jne
jl
and
dec
mov
dec
test
pushf
js
lock
xchg
inc
sbb
mov
cdq
retf
imul
rcl
cmc
imul
pop
sub
cmp
pushf
inc
sbb
test
pop
test
cmp
inc
aas
(bad)
or
push
or
jmp
dec
test
test
push
cmp
movs
xor
push
es
inc
inc
test
mov
cmp
jp
adc
aaa
pushf
pop
fs
movs
cmps
fs
jmp
cmp
test
cmp
ficom
jns
inc
mov
sbb
xor
jle
xchg
mov
ja
ret
mul
adc
push
sbb
enter
adc
mov
xor
(bad)
adc
inc
mov
js
(bad)
xchg
or
test
mov
iret
pusha
sti
stc
mov
mov
rol
out
ret
xor
xchg
inc
jmp
dec
fmul
shl
inc
pop
or
jno
jne
push
inc
dec
cmps
xchg
fwait
lods
adc
lods
dec
cli
in
and
(bad)
inc
cmp
inc
push
sub
mov
cmp
ins
popf
jno
aad
jg
movs
cdq
adc
and
and
addr16
pop
fiadd
mov
nop
mov
xchg
or
ins
lea
inc
push
xchg
mov
and
leave
repnz
fidiv
inc
mov
std
push
sub
cli
out
repnz
gs
mov
push
pop
jne
ret
dec
sub
dec
cld
ret
mov
adc
iret
sbb
js
cmp
jns
mov
or
mov
(bad)
mov
rcr
dec
fdivr
jge
push
cdq
test
dec
test
mov
add
loope
add
mov
or
cld
and
rol
scas
mov
ss
sub
and
pop
adc
popa
mov
mov
aam
in
out
jge
clc
inc
bound
jecxz
es
xor
aaa
mov
int
imul
cmp
push
xchg
in
imul
js
mov
xchg
xchg
shl
ss
mov
clc
sahf
lock
imul
stos
sbb
in
jmp
neg
aas
add
retf
push
(bad)
int3
lock
pop
jbe
jp
sbb
cmp
mov
inc
cdq
fistp
into
inc
jbe
inc
les
aaa
or
add
pop
sbb
pop
mov
xor
mov
rol
push
imul
and
jge
shr
fsubr
cmps
stos
(bad)
retf
sub
sahf
pusha
pop
repnz
je
push
sub
daa
loopne
fs
mov
dec
and
mov
mul
fnstcw
mov
inc
fist
sbb
and
inc
jns
push
pop
lea
call
fpatan
sti
and
mov
fs
sub
(bad)
cmp
stos
push
or
call
movs
inc
pusha
mov
not
mov
cmp
push
sbb
les
add
inc
mov
jne
jo
stos
mov
push
and
jnp
sti
push
popa
inc
dec
out
outs
jp
aaa
jmp
scas
push
pop
movs
sub
test
or
ss
mov
inc
mov
or
dec
addr16
jno
cdq
sti
cmp
test
ffreep
mov
int
mov
xchg
mov
stc
les
mov
fdiv
pop
loope
shl
push
inc
and
daa
loopne
or
mov
nop
scas
adc
mov
ret
xlat
push
pop
pop
aas
mov
and
xor
and
jae
lea
lods
or
lods
cmps
sub
daa
pop
fsub
mov
(bad)
dec
inc
movs
jg
mov
mov
sub
hlt
dec
mov
cmps
ret
xor
xchg
cmp
retf
jmp
mov
sub
(bad)
out
retf
push
jle
cmp
cdq
dec
add
xchg
imul
mov
arpl
setno
sti
jae
mov
mov
push
jmp
push
inc
in
xchg
cmp
idiv
outs
sbb
dec
loop
jmp
movs
out
push
xchg
cmps
jae
xlat
retf
enter
test
mov
add
test
mov
push
sbb
into
in
fcom
outs
inc
pop
sub
dec
mov
leave
mov
xchg
cli
cmp
xor
imul
pop
mov
jns
mov
dec
xchg
mov
sub
adc
scas
xchg
xchg
aad
loopne
jg
ror
(bad)
repnz
lahf
jl
jmp
mov
mov
inc
inc
mov
cli
stc
test
imul
or
cmp
int
jle
and
push
jge
xor
and
outs
and
xchg
mov
ret
cli
data16
cmp
div
dec
dec
out
sbb
es
add
dec
dec
fisub
xchg
sub
test
idiv
(bad)
arpl
and
dec
jmp
push
and
mov
cmps
scas
fcmovnb
adc
pop
add
mov
test
fdiv
push
call
scas
mov
jmp
sti
sub
add
pop
inc
pushf
imul
cmc
mov
int
out
cld
sbb
push
call
or
pop
dec
mov
lods
xor
movs
mov
fsubp
mov
scas
xchg
push
dec
add
jge
mov
cmp
clc
dec
or
std
xchg
adc
dec
nop
cmps
xchg
adc
ret
fldenv
jmp
sbb
fdiv
jmp
xchg
aas
push
add
sbb
push
sub
(bad)
dec
es
push
sub
call
inc
ja
jo
xchg
sbb
dec
cmps
dec
sub
sti
xor
cli
lahf
push
nop
sbb
dec
inc
arpl
dec
mov
sbb
xchg
pop
mov
lods
lds
lea
add
(bad)
repnz
icebp
xchg
push
cmc
sub
invd
ds
jmp
pushf
inc
jo
xor
ja
jo
(bad)
movs
mov
inc
test
test
add
push
in
sbb
pop
xchg
pop
mul
cmps
pop
and
mov
inc
xor
lods
xchg
inc
mov
push
cmp
stos
inc
sbb
xchg
out
add
call
test
ja
xchg
cld
nop
cld
cmps
jmp
call
retf
sti
push
nop
inc
inc
es
mov
jb
jg
xchg
inc
repnz
mov
dec
adc
and
cdq
push
lods
ss
outs
pop
mov
add
push
dec
not
mov
mov
sbb
addr16
fld
mov
stos
adc
stos
fs
cld
stos
xor
cmp
lahf
pop
jne
mov
or
scas
xlat
dec
sbb
(bad)
sbb
out
clc
clc
and
sbb
pusha
sub
or
ds
push
into
shl
mov
jp
push
mov
cmp
sbb
out
setae
popa
adc
js
mov
sbb
push
dec
(bad)
stos
mov
loop
dec
sub
sar
sahf
dec
in
push
or
pop
cmps
mov
ja
lods
mov
mov
(bad)
addr16
mov
rcr
cmp
cs
std
push
repz
jnp
mov
xor
push
mov
xchg
(bad)
cmp
(bad)
push
dec
pusha
pop
leave
ss
pop
data16
pop
xchg
or
ins
inc
ret
xlat
or
call
ret
sub
cld
addr16
je
pop
lds
cmps
jecxz
xchg
imul
push
fucomip
xchg
add
sbb
cmp
jle
xchg
mov
pop
cmp
clc
(bad)
sbb
fidivr
sub
int3
int3
aam
jmp
imul
mov
mov
or
cmp
frstor
add
pop
add
sbb
fcom
pop
xchg
xor
pop
add
scas
mov
test
add
jae
mov
outs
mov
xchg
adc
test
sbb
mov
add
sub
dec
inc
mov
push
daa
mov
add
ins
test
pop
pop
mov
or
out
test
or
enter
setbe
push
dec
jno
call
push
push
jno
lods
inc
add
dec
xor
add
sub
fmul
mov
leave
inc
sub
mov
inc
lahf
std
mov
xchg
mov
mov
jne
cmp
jmp
repnz
out
(bad)
pop
outs
(bad)
mov
pop
sbb
int
lock
ficom
inc
cmp
push
stos
arpl
xchg
dec
push
idiv
fbld
cwde
fld
gs
xor
xchg
es
and
outs
push
stos
or
fsubr
inc
fwait
aad
sbb
cmp
fabs
adc
pusha
pop
daa
cmps
dec
loope
call
loope
inc
enter
aam
xchg
jnp
pop
lea
jns
mov
ret
test
dec
dec
nop
fidiv
div
dec
aas
dec
enter
int3
inc
pop
add
les
addr16
popf
pop
adc
mov
out
out
or
aaa
retf
cmp
jb
xor
(bad)
jl
mov
test
add
adc
(bad)
sti
xchg
xor
xchg
imul
test
adc
fs
jmp
xchg
adc
jns
mov
arpl
fisub
cmc
loope
xor
mov
jmp
fdiv
stc
jg
inc
add
dec
mov
cmp
mov
or
and
inc
std
inc
or
xor
sub
fist
test
mov
sti
in
mov
xchg
(bad)
inc
push
ins
cwde
pop
mov
xor
mov
adc
out
sub
sti
xchg
ja
bound
sbb
cmps
mov
pop
call
cmp
xchg
inc
(bad)
jl
xor
(bad)
data16
jbe
fisttp
jns
loopne
push
dec
cmps
ret
test
jp
int3
cmp
fadd
pop
outs
js
daa
scas
ja
pop
inc
xchg
push
inc
lods
sbb
cwde
mov
and
jns
in
mov
fwait
aam
fistp
push
mov
inc
call
mov
sub
fsubr
or
add
loope
xchg
test
sub
fadd
xor
xchg
pop
pusha
mov
mov
stc
dec
(bad)
call
popw
sbb
sub
popa
push
aas
cdq
and
popf
inc
and
mov
xchg
cmc
cdq
inc
mov
dec
test
out
cli
bound
pop
xor
outs
test
ficomp
push
lea
fcomi
test
pop
mov
jae
imul
mov
and
cmp
dec
jg
jbe
pop
xchg
repz
out
and
loopne
xor
xor
or
inc
fs
pop
cmp
push
jp
stos
test
push
adc
out
jecxz
mov
push
(bad)
adc
movs
sub
mov
xchg
add
fwait
fs
fiadd
jecxz
xchg
xor
int3
adc
movs
ss
cmc
sub
aam
icebp
and
jp
adc
xor
jg
xchg
push
in
ror
mov
pop
adc
dec
test
jbe
xchg
cmp
add
pop
jns
jbe
xchg
or
xchg
xchg
or
pop
(bad)
enter
rol
inc
jle
mov
lock
mov
mov
xor
(bad)
jmp
mov
stos
fs
mov
icebp
sbb
adc
cmps
jns
pop
shl
sub
fnstenv
add
pop
pushf
sub
add
mov
push
scas
dec
in
cmp
sti
arpl
pop
rcl
arpl
adc
repnz
adc
xor
(bad)
mov
aam
mov
adc
fisttp
call
xchg
xor
or
sbb
mov
mov
aas
xchg
loope
(bad)
clc
js
popf
fiadd
icebp
cmp
cmp
pop
cs
mov
push
add
cwde
mov
adc
les
clc
or
and
cmp
bswap
aaa
fadd
test
and
sbb
sbb
stos
xchg
ror
fimul
mov
push
mov
xchg
push
ror
mov
aam
add
inc
mov
out
icebp
stc
hlt
enter
mov
scas
or
es
cmc
ret
sub
xor
mov
stos
xchg
xchg
xor
in
jns
fdivr
cmp
fs
and
pop
push
jp
adc
das
int3
xor
jp
nop
push
ds
jne
mov
xor
rol
cwde
push
es
push
(bad)
jb
aam
dec
repnz
js
mov
icebp
ins
neg
test
mov
adc
mov
xchg
xchg
(bad)
dec
jmp
out
dec
lds
pop
outs
shr
es
fs
iret
sub
fstp
cmc
sbb
inc
xor
pop
sbb
mov
cmc
sbb
push
dec
sub
nop
stos
scas
sbb
adc
out
pop
leave
mov
jmp
inc
inc
fcomp
fstp
scas
call
push
(bad)
repz
adc
jle
mov
inc
add
and
(bad)
neg
stc
addr16
popf
inc
lea
das
cs
fsubr
and
inc
pop
test
mov
int
sbb
js
fild
xchg
neg
inc
or
inc
xor
pop
mov
fbstp
mov
jg
nop
mov
aas
cmp
idiv
adc
jae
pop
out
fidivr
aad
jl
mov
mov
shl
lahf
repnz
lea
popf
xchg
sbb
mul
mov
cmp
ss
stc
js
cmp
cmp
dec
pop
ja
mov
mov
fdiv
das
lahf
icebp
inc
jl
and
sbb
dec
or
mov
mov
fmul
ss
mov
daa
dec
cwde
fstp
icebp
inc
jne
movs
jnp
xchg
cld
dec
xchg
ret
mov
repnz
push
adc
xchg
jns
mov
dec
sbb
sbb
fcomi
mov
and
rcl
stos
imul
mov
mov
leave
push
cmp
sub
jb
dec
mov
push
call
push
push
mov
ja
cmps
mov
adc
cdq
inc
mov
jo
xchg
xchg
(bad)
pop
mov
mov
daa
out
out
and
imul
push
inc
xchg
in
(bad)
cli
outs
pop
lods
mov
jl
adc
sub
(bad)
retf
inc
ret
pop
push
or
dec
mov
les
jnp
std
add
ds
xor
pop
ja
mov
(bad)
cmp
inc
imul
ror
inc
imul
xor
mov
imul
sar
mov
dec
psubsb
xchg
jno
push
hlt
mov
jl
cmp
mov
aam
addr16
into
sbb
aam
std
push
in
xor
imul
in
mov
int3
outs
loope
pop
(bad)
loopne
push
popa
inc
out
sbb
or
mov
mov
aad
inc
mov
inc
fwait
mov
dec
out
mov
aam
jp
mov
cli
xchg
aam
jmp
jmp
repnz
test
cwde
mov
lea
lods
test
out
stc
jmp
gs
xor
shr
std
pop
jge
push
stos
or
xchg
mov
out
loope
das
xchg
xlat
jno
imul
das
arpl
push
push
and
mov
adc
pushf
neg
loope
pop
jbe
inc
ror
cmc
inc
in
mov
and
ror
enter
push
mov
sar
(bad)
clc
cmp
xor
adc
fcompp
inc
call
jnp
mov
push
outs
in
mov
leave
addr16
mov
sbb
daa
aas
push
sahf
or
push
mov
jne
xchg
(bad)
imul
xchg
adc
pop
sbb
neg
jne
add
sti
repz
or
dec
mov
jge
sahf
test
(bad)
loope
cmp
dec
xchg
outs
cmps
dec
sub
rol
ins
lods
or
data16
ss
xchg
xor
shl
push
cmp
jl
pop
retf
pop
push
pop
add
mov
xchg
bswap
pusha
dec
mov
add
mov
aam
movs
inc
mov
add
push
lock
(bad)
addr16
out
sub
mov
sti
adc
mov
(bad)
xchg
cmc
cld
pop
inc
mov
iret
dec
add
clc
hlt
mov
in
jl
popa
mov
ins
and
xchg
and
mov
add
add
pop
or
xchg
and
cdq
jb
stos
push
pop
test
push
outs
in
mov
(bad)
xchg
nop
sti
push
loopne
popa
adc
cmps
lock
stos
or
arpl
(bad)
scas
stos
ret
popa
push
xchg
mov
cmp
das
cld
call
jae
test
js
lahf
sub
mov
mov
es
fild
aad
cwde
lock
xor
pop
sub
add
cwde
adc
shr
gs
add
(bad)
mov
repnz
fs
cmps
sub
shl
sub
shl
mov
adc
mov
es
aam
repz
mov
mov
aad
push
sub
in
and
aas
inc
pop
mov
add
scas
mov
lods
add
push
pop
pop
and
sub
adc
pop
fisubr
cmp
inc
inc
mov
inc
(bad)
xor
add
in
loop
xchg
aam
pop
xchg
stos
jnp
call
inc
mov
scas
out
sahf
pop
outs
scas
mov
xchg
fisttp
ins
lea
or
mov
cld
push
add
pop
mov
adc
test
pop
test
mov
push
outs
jnp
and
pop
lea
clc
ins
inc
lods
jnp
test
cld
adc
push
pop
out
mov
mov
push
jae
push
ret
jb
out
xchg
dec
(bad)
xchg
jp
fcmovnbe
repnz
out
xchg
mov
int
mov
mov
jmp
aad
push
loope
jbe
dec
popf
adc
pop
mov
(bad)
mov
ins
(bad)
stc
or
and
adc
mov
mov
rcl
pop
jge
xchg
(bad)
cmp
dec
(bad)
cli
mov
stc
pop
jg
mov
jg
mov
push
rcl
and
dec
mul
pop
pop
loope
lea
inc
int3
mov
mov
sbb
or
int3
inc
xor
and
mov
bound
add
ins
out
out
sbb
xor
and
jg
popa
icebp
mov
pusha
jne
jg
scas
sbb
xchg
mov
aas
sub
and
push
inc
inc
mov
push
retf
sub
jns
cmps
rcl
lods
ins
add
cwde
cmc
daa
cmp
std
test
loopne
pop
stos
cmps
outs
shl
push
sbb
ror
arpl
dec
cwde
push
push
jo
jo
or
fild
nop
cmp
xor
pop
cmp
and
adc
xor
and
es
in
fcomp
fnstcw
and
push
cwde
ret
(bad)
mov
test
fwait
scas
mov
mov
mov
xchg
int3
aam
inc
mov
(bad)
ds
(bad)
gs
pop
pop
cmp
sbb
pop
add
adc
or
es
lods
xor
or
jnp
cmps
or
mov
cld
push
aaa
xor
(bad)
arpl
add
mov
adc
mov
xchg
cld
mov
push
fwait
xor
dec
scas
mov
push
sub
hlt
call
push
cmp
sbb
pusha
sbb
mov
test
enter
in
push
adc
inc
in
or
cmp
lods
inc
pop
mov
pop
mov
xor
loope
mov
(bad)
jg
pop
shr
xchg
cmp
popa
and
jecxz
push
fist
xchg
mov
std
pop
pop
std
retf
retf
dec
inc
mov
mul
div
out
jge
and
gs
inc
add
mov
fdivr
mov
(bad)
fisubr
pop
inc
in
xor
or
ds
dec
pop
fisubr
fstp
inc
out
shl
call
cwde
inc
jo
mov
pop
mov
push
adc
(bad)
mul
nop
sbb
cmps
mov
sbb
cmp
loop
ins
inc
cdq
mov
sbb
paddusw
jmp
rcr
ss
sahf
packssdw
aaa
and
mov
test
or
popf
cld
push
bound
rol
add
pop
shl
mov
mov
jnp
shl
std
(bad)
mov
aam
add
ret
fimul
aad
jbe
mov
aaa
shl
sti
mov
dec
scas
mov
aad
iret
fnstsw
rep
jmp
retf
les
imul
jae
dec
and
xchg
mov
fcmove
add
fnstcw
gs
and
cmp
ja
addr16
shr
dec
mov
clc
leave
mov
lods
jecxz
fidivr
ja
ins
aad
push
stos
loopne
loope
pop
push
(bad)
cli
xchg
aaa
call
rol
dec
add
mov
mov
icebp
dec
gs
cmps
xor
cmp
fdivrp
inc
into
sbb
jne
push
mov
mov
repnz
out
sbb
sbb
adc
mov
mov
xchg
das
inc
mov
push
cmp
enter
jne
and
cmp
js
aam
mov
sti
inc
lods
test
popf
xchg
test
pop
leave
div
clc
clc
cmp
neg
dec
push
dec
(bad)
jg
inc
xchg
inc
movs
inc
ds
mov
scas
pushf
sbb
test
cwde
std
cmp
add
add
pop
xor
mov
push
nop
sbb
add
jl
call
jno
dec
jl
cmps
ins
jmp
jmp
push
jmp
ins
int3
push
mov
jl
xchg
retf
loope
sbb
sub
cmp
sbb
inc
add
push
cmp
movs
xchg
dec
pop
rcl
call
dec
pop
inc
int
or
xor
pop
sbb
imul
add
movs
mov
test
cmps
pop
iret
jmp
sub
shr
xchg
adc
loopne
xor
lods
popf
cwde
mov
mov
add
iret
les
mov
cmc
push
xor
and
pop
add
bound
xor
jno
mov
inc
lahf
jecxz
ret
push
add
inc
imul
xchg
xor
adc
pop
data16
sub
xchg
xor
push
addr16
int3
xchg
xor
push
jnp
js
ret
ret
mov
or
(bad)
rol
test
inc
lods
bound
cmp
sar
mov
stc
jae
scas
(bad)
dec
fiadd
or
cmp
mov
js
mov
xor
outs
mov
fwait
retf
lods
dec
lahf
jmp
xchg
rcr
aaa
call
xchg
sbb
mov
outs
mov
dec
cmp
retf
pushf
enter
pusha
jl
ja
mov
lahf
addr16
mov
(bad)
cmps
mov
pop
pop
sbb
clc
fiadd
mov
cmps
or
inc
loope
pop
cmp
mov
jnp
push
lahf
mov
scas
fs
add
aam
adc
xor
xor
add
mov
add
xchg
mov
sbb
xchg
aas
into
retf
pop
jb
mov
inc
test
mov
add
icebp
stos
xor
call
pop
xor
stc
lods
mov
cwde
dec
in
jmp
ss
mov
mov
cmp
sar
and
xchg
cmps
ret
lods
ja
icebp
jnp
aam
inc
inc
dec
mov
xor
idiv
stos
jbe
test
mov
das
push
ins
cli
call
push
sbb
aad
std
push
popf
hlt
xchg
ins
xchg
stos
or
into
movs
xchg
adc
ja
mov
popa
push
cmps
lahf
and
aad
test
adc
pop
or
shr
jne
or
and
adc
ins
mov
pushf
retf
aaa
stos
pop
sbb
xchg
leave
pushw
xor
push
outs
pop
sub
jecxz
mov
cld
sbb
inc
lahf
sub
cmp
in
fsincos
adc
je
ja
movs
loop
stos
in
call
(bad)
out
fsub
mov
dec
push
sahf
test
sbb
(bad)
icebp
call
mov
dec
cmp
rcr
loopne
jmp
dec
sub
cs
push
test
sub
les
sbb
enter
push
sbb
imul
mov
sbb
stos
adc
cmps
mov
push
bound
cmc
popa
(bad)
push
call
jmp
rol
xchg
hlt
push
in
mov
xlat
or
mov
cld
movs
inc
jp
icebp
mov
push
xor
push
fdivr
mov
fild
cmp
rcr
dec
pop
mov
mov
inc
call
js
pop
inc
aad
and
and
jle
fs
stos
push
adc
sbb
cmp
(bad)
push
(bad)
int3
jp
dec
jne
mov
gs
pop
rcl
cmp
adc
test
sbb
stc
xchg
in
call
cs
jmp
clc
sbb
bound
jo
push
mov
and
pop
popf
loop
mov
jnp
push
cmp
and
jmp
scas
push
xor
mov
(bad)
mov
mov
fs
fidiv
lea
adc
fstp
in
mov
lahf
push
ja
call
ret
repz
addr16
jp
cmp
sete
ds
mov
inc
sbb
xchg
cdq
mov
add
cs
pusha
outs
inc
sub
cmp
popa
jno
push
aaa
popf
xor
adc
mov
xchg
jmp
sti
push
and
jb
cmps
add
mov
aad
inc
dec
xlat
mov
mov
mov
ins
mov
mov
das
loop
mul
hlt
pop
pop
mov
push
adc
imul
push
jp
lods
aaa
pop
jg
jo
jge
xchg
mov
(bad)
and
or
fdivr
push
or
push
mov
add
es
mov
jb
inc
pop
test
shr
mov
adc
jbe
icebp
shl
ror
inc
xchg
mov
into
xchg
icebp
ret
xor
dec
(bad)
add
ror
inc
push
xor
xor
push
mov
xchg
cwde
adc
jecxz
mov
and
pop
outs
jp
sbb
arpl
inc
aas
cmps
or
mov
or
dec
pop
neg
adc
or
(bad)
test
xchg
jge
mov
scas
sbb
inc
cmps
movs
fwait
loope
and
mov
xor
std
retf
jl
xchg
lea
inc
ror
dec
loop
into
fs
sbb
push
movs
dec
sub
cwde
test
mov
daa
into
gs
cmps
lea
bound
adc
inc
or
mov
pusha
inc
stos
inc
or
sub
push
add
jno
jmp
imul
sub
scas
shl
jae
mov
lea
mov
bound
fwait
sbb
jmp
and
mov
add
stc
inc
icebp
pop
imul
pushf
ins
and
shl
cmp
jle
pop
add
dec
push
push
xor
stos
add
lods
push
and
mov
dec
mov
hlt
sbb
mov
push
cmp
pop
in
ret
movs
sub
pushf
shl
popf
addr16
pushf
lods
and
idiv
(bad)
jp
test
jb
sub
sbb
adc
mov
sub
xor
fs
ja
push
in
adc
clc
cld
sbb
sbb
xor
sahf
sub
mov
aas
xchg
aaa
jnp
or
std
mov
xchg
push
mov
cmp
neg
push
mul
mov
lahf
mov
sbb
inc
mov
leave
sbb
pop
std
inc
ja
dec
mov
outs
mov
leave
push
fdivr
xor
jmp
add
cld
push
or
pop
xchg
(bad)
neg
sti
cmp
sbb
dec
xchg
inc
(bad)
sub
leave
inc
mov
xchg
ret
or
adc
cdq
xchg
jae
xor
pop
xchg
and
jle
push
pop
mov
nop
mov
or
popa
out
add
and
cmp
inc
xor
sub
fwait
or
cmps
sbb
adc
add
shl
jp
je
push
repz
pushf
retf
sti
adc
mov
mov
out
dec
cmps
stos
mov
jns
movs
and
in
jmp
cwde
mov
push
and
jmp
inc
sub
cs
fs
push
sub
mov
sub
pop
xchg
(bad)
mov
mov
es
push
rcl
jns
scas
push
adc
cld
sub
fld
loopne
add
test
test
in
fnsave
popf
add
inc
mov
scas
arpl
sahf
mov
movs
mov
ins
addr16
fist
pop
sbb
out
daa
(bad)
aas
gs
lods
adc
mov
inc
mov
mov
imul
or
adc
inc
xor
jbe
in
shrd
add
stos
ss
xchg
mov
cmp
aas
fcmovb
mov
xchg
add
jg
je
push
mov
mov
mov
popf
xchg
sub
inc
inc
lea
or
mov
push
test
sub
nop
mov
push
jmp
add
push
addr16
pop
mov
test
ret
loope
mov
jbe
pop
push
int
push
pop
and
adc
push
and
cmp
mov
xor
fbld
loop
inc
outs
mov
call
into
xchg
or
mov
stc
shr
fisubr
mov
not
idiv
fstp
scas
test
xor
sbb
in
sub
or
sub
mov
nop
cmps
test
pop
stos
dec
ror
dec
sbb
cmp
cwde
bsr
enter
inc
add
cli
sbb
and
inc
mov
dec
and
arpl
mov
push
mov
popf
or
jmp
test
or
pop
pop
test
fisubr
fistp
jb
lods
xor
inc
mov
jns
mov
xchg
cmp
pop
loope
jns
ror
push
aas
into
sbb
add
jae
pop
ins
fldenv
shl
pop
out
test
sub
jmp
and
pop
jb
pop
test
out
(bad)
nop
add
repnz
mov
mov
(bad)
fisttp
mov
push
shr
xorps
iret
fdiv
and
or
and
jno
pop
jmp
pop
fiadd
fs
loop
or
sbb
sub
mov
push
mov
adc
(bad)
cmp
jp
mov
dec
mov
mov
sub
fs
fsubp
adc
xchg
mov
sbb
cmc
xchg
clc
cmc
dec
add
fdivr
push
dec
ret
jne
sbb
cmp
ins
aas
push
adc
push
mov
and
pop
adc
aas
fwait
add
addr16
mov
sbb
xor
dec
xchg
aam
ds
pushf
pop
push
js
push
dec
loope
shr
repz
add
movs
je
movs
movs
and
rol
cmp
sub
pop
or
faddp
leave
push
mov
pop
mov
imul
mov
add
jnp
test
push
add
sbb
add
sub
pop
adc
das
sbb
pop
aam
xchg
add
pop
je
pop
fmul
loope
cmc
jmp
shr
sahf
les
in
fwait
cmp
push
stos
stc
rcr
or
or
jmp
jnp
imul
lods
mov
lods
push
add
sbb
cld
add
pop
and
pop
xor
data16
push
lods
dec
jle
mov
outs
and
mov
test
mov
loop
lds
ret
repz
dec
cmc
out
xor
sbb
scas
pusha
jb
ret
inc
rol
cwde
xchg
outs
test
jae
and
fdiv
pop
jp
xor
mov
int
in
sbb
mul
pop
sbb
sbb
add
jb
mov
(bad)
ins
das
or
cli
out
xor
jle
popf
pop
fdivr
mov
adc
call
scas
sub
nop
mov
js
inc
inc
test
addr16
(bad)
sbb
dec
out
shl
and
xor
fwait
addr16
inc
nop
cmps
pushf
mov
or
and
pop
fmul
sbb
push
jecxz
xchg
ins
rcr
movs
jge
ror
movs
xchg
div
mov
hlt
sbb
jg
movs
call
scas
adc
in
aaa
out
addr16
sahf
(bad)
cmp
test
mov
cmp
lods
mov
jnp
sbb
or
retf
popf
cmp
or
test
mov
leave
xchg
setp
mov
add
inc
adc
dec
pop
scas
test
(bad)
xrelease
loopne
test
jo
dec
cld
(bad)
call
mov
sti
aam
ja
pop
mov
push
jo
mov
jmp
fmul
cmp
push
fsub
fsub
retf
sub
pop
jns
mov
lds
pop
shr
mov
push
push
fdivr
adc
daa
lea
das
jmp
or
mov
cmp
xchg
retf
imul
inc
jae
sub
xchg
loopne
out
movs
push
rcr
test
arpl
sar
mov
rol
imul
lea
add
inc
lods
sbb
mov
mov
out
push
(bad)
and
into
sbb
imul
xor
mov
sbb
jae
mov
js
mov
cmovo
dec
cdq
stos
xchg
adc
retf
popa
pop
inc
mov
mov
xor
sbb
ret
mov
jmp
lock
add
cmps
test
jecxz
xor
fnstsw
fsubr
in
adc
ja
add
and
movs
and
jns
pop
cmp
lahf
pushf
sbb
stos
arpl
int
call
inc
sub
xor
shl
sar
into
inc
jae
cmps
mov
xchg
leave
out
mov
inc
cmp
inc
mov
out
out
inc
sbb
in
jp
pop
repnz
mov
int3
rol
sahf
jb
jno
sbb
push
(bad)
jmp
dec
rcr
push
addr16
push
xchg
dec
add
out
lods
mov
sub
add
arpl
xor
arpl
cmp
add
test
and
dec
pop
xchg
mov
(bad)
push
inc
shl
and
pop
inc
xchg
mov
inc
mov
mov
mov
in
into
sub
ficom
mov
(bad)
imul
nop
push
(bad)
int3
rol
xor
push
or
gs
pop
pusha
mov
movs
cwde
inc
sbb
sbb
lea
or
aaa
adc
cwde
sub
mov
xchg
sub
add
adc
aad
sub
neg
jbe
jbe
inc
test
outs
repnz
mov
mov
sbb
aas
ror
sbb
es
xchg
shl
push
fcom
push
jl
sub
push
scas
mov
out
(bad)
call
imul
or
mov
mov
outs
sbb
pop
sub
inc
sahf
call
jge
inc
jno
(bad)
sar
sub
aad
les
add
cwde
mov
and
jns
dec
out
add
div
shr
dec
push
sbb
lods
sub
mov
inc
jge
fstp
sbb
jl
aas
out
aaa
pop
daa
xor
fist
jne
dec
inc
xchg
sbb
mov
jecxz
popf
daa
mov
add
sbb
ficomp
mov
movs
jge
mov
daa
xchg
inc
mov
inc
fadd
mov
jmp
cmc
xchg
inc
icebp
push
xlat
pop
sbb
(bad)
out
repz
fwait
inc
push
sub
xor
test
sbb
enter
inc
in
and
icebp
push
inc
popa
push
(bad)
sbb
inc
adc
mov
fcom
ds
mov
pop
loope
mov
ret
inc
bound
mov
dec
dec
mov
adc
addr16
test
cmps
mov
aas
cmp
aad
call
mov
dec
or
jmp
icebp
pop
sar
jne
pop
lahf
pop
je
jmp
pop
lahf
rcl
mov
push
add
imul
fwait
pop
xor
xchg
cmp
fwait
mov
inc
add
push
mov
jg
rcl
call
nop
imul
les
(bad)
mov
push
mov
int3
and
mov
fst
push
xor
mov
arpl
sub
das
inc
dec
test
pop
jae
xchg
ins
(bad)
(bad)
sbb
and
or
or
ins
test
jo
dec
and
push
outs
cmps
mov
xchg
mov
lea
fild
lahf
adc
mov
xor
cmc
lods
jbe
adc
pop
fdivr
mov
scas
addr16
and
mov
(bad)
push
fsubr
and
aad
into
push
cmp
addr16
pop
in
sar
repz
es
aas
push
or
adc
sbb
fnstcw
mov
inc
xchg
scas
test
cmps
lahf
push
int3
(bad)
push
ret
inc
push
je
ins
retf
xchg
repz
ret
std
loope
add
fdivp
cmp
inc
cmps
cdq
mov
cmp
ins
push
cmps
mov
and
fcmovnu
stos
lods
inc
cdq
mov
adc
dec
(bad)
retf
shl
sub
or
mov
and
lods
(bad)
dec
shl
cmp
inc
mov
aaa
lea
stos
aas
test
dec
mov
inc
mov
(bad)
cmp
push
in
stos
movs
pop
mov
js
pop
jae
mov
aas
out
mov
test
fadd
mov
cli
sbb
mov
test
add
lods
xor
std
inc
loop
jne
inc
fnstcw
jns
cwde
dec
cs
xchg
(bad)
and
mov
stos
std
jo
jl
mov
xor
xor
pop
outs
stos
push
adc
cdq
and
dec
call
repnz
pop
inc
lods
dec
lds
xor
dec
sbb
shl
xchg
movs
lock
sbb
mov
call
inc
cli
sub
sbb
out
jb
add
jns
das
inc
jnp
push
enter
in
pop
test
sbb
aaa
out
and
scas
adc
pop
xlat
sbb
cdq
push
inc
mov
ins
in
cli
add
sub
xchg
aaa
mov
je
pop
jp
mov
xor
(bad)
test
jmp
loopne
and
jp
mov
addr16
mov
mov
test
cli
and
stos
dec
mov
adc
in
and
jg
sbb
pop
push
xchg
shl
and
sahf
pop
data16
std
pop
or
data16
lea
fst
cmps
jbe
lahf
inc
add
adc
cmp
into
mov
fild
inc
nop
and
mov
test
test
or
in
adc
inc
cmc
mov
movs
mov
bound
xchg
mov
gs
pop
int3
or
or
(bad)
call
js
cmps
xor
xchg
dec
xchg
xchg
retf
out
push
xchg
stc
cmp
sbb
pop
sbb
sbb
dec
jo
pop
cmp
cwde
jno
or
cmp
jnp
pop
stos
dec
mov
mov
cs
(bad)
stos
je
fs
lods
mov
sti
test
test
mov
fmul
sbb
push
repnz
gs
cmp
dec
xor
and
out
movs
leave
mov
xchg
fisubr
xchg
dec
push
data16
sub
jae
jmp
mov
imul
(bad)
adc
imul
ins
cdq
mov
xor
outs
bound
dec
sti
mov
inc
out
mov
or
xchg
imul
dec
jg
cwde
xor
stos
icebp
jp
adc
add
stc
data16
sub
and
les
inc
rcr
sbb
push
fadd
mov
dec
mov
inc
sahf
xchg
ins
push
pop
arpl
retf
imul
in
mov
call
fnstenv
lods
rcl
scas
jp
cdq
mov
jmp
cdq
mov
push
sub
and
xor
inc
cmp
add
mov
mov
sub
jnp
rol
add
dec
adc
push
xchg
sbb
stos
push
xor
test
xor
inc
xlat
int
pop
xchg
fisttp
cwde
pop
inc
pop
mov
(bad)
mov
test
nop
inc
push
enter
nop
fs
mov
add
aad
repnz
mov
imul
sub
test
in
and
dec
mov
js
or
cmp
sbb
cmc
push
mov
pop
jmp
push
mov
ins
nop
or
xchg
mov
mov
xor
dec
in
and
mov
dec
dec
inc
pushf
pusha
test
mov
sub
mov
cmp
mov
loop
xchg
add
out
adc
scas
cmp
jnp
and
(bad)
ror
push
pop
mov
dec
and
mov
sbb
inc
fwait
int
cdq
lock
loop
pop
popa
push
add
push
pop
(bad)
pop
or
mov
shl
ret
dec
test
rol
cli
dec
mov
xchg
pop
and
aam
mov
fsub
xchg
call
shl
dec
outs
xchg
test
cs
jmp
push
dec
cmp
imul
cmp
inc
(bad)
ret
mov
nop
das
cmp
je
pop
cld
inc
outs
dec
das
popa
mov
bound
mov
add
fadd
call
lea
pusha
add
das
(bad)
cmps
cld
push
jmp
xor
out
xor
xchg
retf
cmp
xchg
and
in
rcl
mov
pop
lock
sbb
push
arpl
dec
sub
mov
fdivr
fadd
and
sbb
mov
dec
push
(bad)
dec
aaa
xchg
sbb
mov
sub
sbb
repnz
test
jne
pusha
inc
pop
adc
out
cmps
(bad)
test
push
out
repz
cmps
mov
fstp
(bad)
lea
and
inc
popa
mov
aaa
lock
(bad)
int3
jb
inc
data16
(bad)
das
push
movs
ins
sub
(bad)
mov
and
in
jp
nop
sub
ss
and
jnp
xor
pop
dec
sar
xor
mov
bound
sbb
repnz
mov
jge
inc
push
ins
mov
aas
mov
movs
or
dec
repnz
mov
out
lock
fdiv
mov
jecxz
pop
mov
clc
and
rol
scas
and
pop
add
push
lods
push
and
xchg
mov
push
fnstsw
rcr
hlt
push
bound
das
pop
or
cdq
sub
mov
push
mov
daa
dec
(bad)
fucomp
das
mov
outs
push
fisubr
shl
mov
mov
add
xchg
jge
movs
test
cmp
xchg
ss
sar
xchg
mov
adc
cld
vhaddps
add
push
arpl
addr16
ret
aad
ret
movs
jmp
sub
sub
xchg
sbb
cmps
adc
cmp
mov
in
loopne
mov
pusha
cmc
pop
push
inc
mov
jge
aad
push
in
stos
pop
push
shl
call
add
cmp
sti
lock
jg
mov
xor
and
sahf
sbb
push
clc
or
mov
fstp
loop
addr16
jmp
mov
add
add
scas
push
adc
loope
pop
adc
fild
aad
jns
scas
cs
xchg
loope
xchg
fdiv
ss
in
pop
and
jp
mov
retf
loopne
dec
mov
repnz
or
jae
and
push
xor
inc
sub
nop
test
cwde
cld
adc
clc
sbb
push
xchg
or
pop
fs
jnp
mov
movs
arpl
addr16
es
inc
pop
arpl
pusha
xchg
aam
mov
popf
pop
or
icebp
inc
mov
push
mov
loopne
mov
test
jecxz
imul
cmp
pop
ja
dec
xchg
ins
jnp
xchg
add
ds
pop
loope
add
es
or
inc
jo
addr16
xor
pop
push
push
cld
in
mov
fdivr
inc
add
jge
xchg
pop
in
movs
pop
cmp
cmc
xor
pop
mov
and
mov
int
mov
test
mov
iret
push
push
cmp
leave
stos
dec
iret
inc
add
jbe
xor
mov
enter
call
xchg
neg
push
cmp
cmp
dec
sub
pop
test
sbb
mov
std
lods
mov
xchg
loopne
inc
pusha
xchg
mov
lahf
pop
xlat
mov
les
movs
mul
inc
xchg
sti
repnz
dec
jl
aad
loopne
out
sbb
into
iret
retf
add
pop
fld
sub
iret
adc
iret
jg
nop
adc
cmp
sbb
inc
or
lea
fist
test
sbb
pop
pop
call
ficomp
gs
js
test
popa
xchg
mov
sub
mov
nop
inc
add
cs
in
cld
fidivr
xchg
mov
xor
push
rol
js
popf
push
add
arpl
jge
mov
inc
xor
mov
cmp
jne
scas
push
retf
add
pop
adc
xchg
sti
adc
push
inc
int3
shl
fcomp
jae
mov
xchg
mov
jmp
sub
popa
stos
mov
push
sbb
and
(bad)
mov
cld
fs
test
xor
pop
jmp
enter
inc
pop
jg
cmps
push
popa
dec
cmp
inc
mov
rcr
in
jle
jmp
jl
idiv
or
xor
stos
push
ins
fimul
inc
mov
movs
sbb
cmp
lock
adc
pop
fidiv
(bad)
cli
jnp
jmp
in
fldcw
mov
push
inc
jmp
repnz
stos
(bad)
jp
mov
xor
push
aad
or
jmp
inc
jns
dec
fistp
inc
inc
test
sahf
mov
dec
and
mov
jnp
pop
and
add
add
stos
jle
adc
pop
xchg
xor
mov
jno
push
jl
shl
cmp
jge
mov
arpl
(bad)
or
mov
jmp
rol
popa
je
mov
scas
in
add
xchg
je
inc
lds
inc
sbb
ror
imul
jp
inc
mov
dec
push
mov
mov
test
mov
pop
pop
jg
inc
aas
pop
jno
mov
sbb
mov
mov
sbb
cwde
sahf
jne
sbb
out
sti
pop
xchg
clc
js
sbb
mov
cmps
sar
stos
addr16
adc
rcl
cmps
rcl
lahf
push
xchg
mov
out
scas
neg
mov
dec
int
lods
and
repnz
retf
cmp
inc
cmp
dec
cdq
mov
in
(bad)
mov
ret
loope
dec
pop
dec
mov
cmp
ss
aam
pop
adc
dec
pop
mov
mov
sar
inc
fwait
mov
pop
addr16
xchg
mov
jge
fsub
pusha
iret
jmp
or
aad
add
rol
sbb
cdq
mov
adc
pop
jg
cwde
xor
and
ficom
outs
data16
push
out
mov
imul
push
daa
fadd
xor
repnz
adc
dec
sbb
not
pop
cs
jecxz
mov
iret
ret
add
bound
shl
ret
(bad)
mul
popa
in
test
(bad)
lock
push
rol
call
mov
add
cmc
cmps
test
inc
test
enter
jmp
xor
movs
cmp
pop
stos
cmp
lahf
dec
add
mov
add
inc
push
jbe
icebp
and
xchg
outs
inc
test
lahf
or
mul
xor
add
stos
push
popf
popf
cmc
push
out
or
mov
xchg
mov
mov
cmps
sbb
inc
call
inc
retf
inc
fldcw
scas
inc
int
popa
add
push
mov
push
jmp
dec
(bad)
cli
add
loopne
jne
pop
aam
xor
and
push
mov
sub
dec
pusha
xchg
xchg
loope
add
pop
(bad)
mov
retf
cmc
outs
pop
and
cmp
loopne
push
mov
mov
in
push
test
jnp
in
popf
and
xchg
push
cwde
(bad)
outs
into
fs
or
icebp
fmulp
data16
and
jp
ins
push
inc
cwde
xor
push
xchg
mov
mov
sbb
sbb
enter
popa
adc
stc
pop
cs
xor
inc
mov
mov
adc
dec
jnp
test
(bad)
out
mov
fild
push
xchg
pusha
xlat
ret
stos
les
or
out
lods
mov
pusha
out
cmc
pop
add
div
in
(bad)
cmp
retf
sub
aam
popa
enter
pusha
lods
sbb
push
xor
fistp
jecxz
sbb
jbe
ds
pop
mov
psubusw
sar
je
add
jmp
dec
in
jbe
mov
ret
les
les
(bad)
xchg
pop
fwait
inc
mov
(bad)
sub
enter
out
shr
pushf
popa
shl
sub
fld
dec
add
push
sbb
mov
pop
nop
add
stc
int
mov
aaa
jmp
sbb
lods
sub
mov
adc
sub
(bad)
sahf
push
xor
int
daa
leave
shl
dec
gs
mov
mov
pop
mov
call
lahf
fs
neg
xchg
sbb
mov
sbb
shr
cdq
test
mov
sbb
and
add
imul
ja
movs
mov
jg
jmp
pop
std
xor
dec
pop
sbb
inc
push
cdq
jp
(bad)
fdivr
ret
pop
mov
push
test
test
add
or
push
xchg
cmp
pushf
test
mov
in
arpl
mov
cmp
sbb
cmp
push
mov
and
mov
repz
in
in
sbb
inc
or
sbb
xor
jecxz
xchg
pop
stos
jle
adc
aas
jl
aad
adc
retf
call
xlat
outs
add
push
repz
mov
xchg
nop
add
out
cmp
gs
mov
dec
jg
mov
fdecstp
ror
dec
push
stos
inc
shl
push
inc
loope
stos
jbe
push
ja
addr16
jg
inc
cmp
mov
aam
sub
inc
fdivrp
and
in
jb
jbe
mov
cmp
ds
pop
mov
fld
cwde
dec
adc
test
sahf
lods
xchg
adc
data16
shr
ret
jno
shl
jge
in
ss
xor
and
xchg
inc
inc
mov
xchg
daa
add
lock
lods
sub
jp
xor
ret
inc
lahf
sbb
xor
add
cdq
mov
dec
or
ja
mov
push
sbb
sbb
scas
push
xchg
sub
pop
adc
push
xchg
movs
cwde
(bad)
sbb
not
in
jg
popf
sub
mov
jl
out
push
test
mov
fnstenv
mov
rcr
mov
call
jmp
pop
and
pushf
inc
pop
add
sbb
or
mov
iret
push
pop
out
sti
xlat
jg
std
push
dec
pop
sbb
sbb
sbb
lods
pop
mov
fadd
xchg
jp
mov
push
xchg
lods
xchg
or
sbb
repz
aaa
mov
pop
loopne
pop
jnp
dec
ret
pushf
ret
addr16
push
xchg
mov
cmp
mov
lahf
mov
fistp
inc
xchg
mov
bound
mov
(bad)
movs
imul
(bad)
adc
in
sti
shl
iret
dec
jge
jl
sbb
pop
push
mov
mov
aaa
sub
cmp
xor
sub
inc
or
scas
add
mov
pop
jmp
sti
and
mov
retf
mov
popa
pop
mov
dec
loopne
mov
sbb
jl
test
loop
mov
xchg
add
cli
retf
sar
push
outs
sar
ds
shl
jns
xor
cmp
ss
pop
mov
les
sbb
hlt
pop
push
cmp
ds
add
add
pop
mov
fcomp
fmul
inc
cmps
add
add
out
out
scas
xor
and
dec
(bad)
xchg
loop
mov
out
into
xchg
(bad)
sar
mov
cli
adc
cmps
lock
pop
mov
jmp
sbb
into
(bad)
leave
push
retf
or
push
dec
jp
cmp
dec
xchg
mov
fistp
in
sbb
inc
fiadd
sub
pop
jmp
imul
push
in
mov
(bad)
int
sbb
push
push
test
sbb
jno
mov
mov
retf
scas
cmps
xlat
daa
fstp
js
mov
les
scas
cwde
xor
jo
adc
pop
xchg
xor
imul
xor
mov
das
cmp
push
cli
aad
popf
jmp
fbld
xor
cmp
sbb
push
add
cmp
xchg
push
inc
and
in
cmp
add
inc
rcl
ja
cld
inc
pop
jmp
add
pop
adc
shr
or
clc
xchg
out
jp
and
imul
add
mov
fstp
xchg
or
inc
(bad)
and
dec
add
fwait
pop
nop
sbb
jae
mov
je
xchg
test
xbegin
inc
jecxz
jnp
mov
retf
mov
loopne
lock
mov
out
mov
imul
idiv
mov
loopne
dec
scas
mov
ds
call
ss
pop
dec
cwde
sub
mov
mov
xchg
sub
stos
pop
out
fcom
mov
add
jne
fist
gs
jbe
pop
adc
dec
push
cwde
mov
call
jmp
jmp
pusha
rcr
mov
(bad)
xchg
jns
out
mov
lds
xchg
(bad)
xchg
mov
mov
inc
(bad)
ficom
mov
pop
out
pop
or
test
ds
or
xor
pop
in
cdq
movs
pushf
push
sbb
fs
dec
fisttp
stc
xor
adc
mov
xchg
(bad)
gs
sbb
xchg
xchg
xor
mul
pushf
push
sbb
jnp
mov
xchg
xchg
pop
sbb
cld
mov
jmp
in
sbb
inc
mov
mov
inc
retf
jmp
out
inc
aad
pop
adc
and
aas
inc
and
nop
mov
push
fldenv
repz
cmc
pop
pop
add
fs
push
lods
pop
add
mov
and
fcomip
sbb
repnz
rcr
lods
jg
mov
xchg
clc
or
jmp
test
mov
cwde
inc
pop
test
stos
sub
xlat
(bad)
bound
mov
ds
pop
mov
int3
pop
int
popa
or
daa
popa
push
push
or
sub
add
loop
test
push
ja
cmp
xor
dec
sub
or
in
imul
rcl
mov
movs
xor
or
retf
pushf
repnz
cmp
xor
dec
std
fwait
popa
es
loope
jne
ins
scas
sahf
mov
sub
sahf
and
stc
push
adc
pushf
je
dec
aad
pop
dec
(bad)
div
xor
sub
push
test
imul
sar
inc
xor
inc
sub
(bad)
pop
call
inc
fwait
adc
xchg
mov
pop
add
adc
pop
arpl
imul
shr
adc
jmp
stos
add
push
test
fcmovbe
adc
mov
test
jl
fldenv
sub
das
pop
push
repnz
hlt
and
add
inc
pushf
sbb
inc
xchg
ins
add
xchg
push
pop
neg
fnstcw
cdq
cmc
dec
fs
pop
std
pop
ins
pop
xor
mov
pop
dec
mov
adc
lahf
or
pop
fisub
rcr
test
gs
rcr
rol
xchg
in
cli
mov
jmp
xchg
movs
sahf
or
int
dec
push
push
repnz
xor
retf
test
cli
add
pop
mov
inc
cmp
jno
pusha
mov
scas
or
call
xchg
mov
or
jno
stos
sub
je
pop
inc
mov
shl
add
sub
repnz
es
retf
pop
fiadd
pop
shl
aad
mov
out
adc
cmps
mov
mov
dec
movs
mov
mov
lock
outs
xchg
mov
in
je
and
cmc
jb
sbb
inc
mov
push
add
stos
mov
adc
mov
bnd
dec
inc
sbb
inc
cmp
and
mov
xor
into
sub
and
jmp
data16
fwait
push
mov
xchg
je
mov
out
add
sbb
test
add
mov
and
rol
push
cs
push
adc
xchg
stos
push
xchg
inc
push
sbb
jns
mov
inc
xchg
cmp
jmp
sub
daa
aaa
scas
pop
mov
mov
add
mov
lock
mov
jns
jle
scas
aam
mov
mov
mov
sub
sbb
(bad)
mov
out
cmps
mov
sub
retf
cmp
jl
test
dec
popf
mov
mov
pop
aad
fptan
cmp
add
xor
pop
sub
cdq
pop
retf
adc
push
jns
dec
push
xchg
dec
pusha
nop
mov
dec
call
mov
pop
pop
pop
mov
mov
test
adc
jl
sahf
mov
cmp
inc
push
loope
mov
adc
ret
mov
retf
add
pop
adc
fmul
pop
icebp
and
jnp
cmp
mov
cdq
movs
iret
sbb
dec
int3
(bad)
jo
out
jl
inc
cmp
add
pop
jo
mov
push
scas
aas
add
cs
mov
fadd
ror
jbe
jge
xchg
pop
xchg
ret
iret
jmp
or
fisttp
popf
scas
repnz
adc
cmp
fcomip
cdq
rcl
cmp
mov
sub
stc
dec
pushf
sbb
inc
test
inc
push
bound
sub
ins
(bad)
lea
test
jnp
push
push
mov
pusha
scas
and
(bad)
push
into
xor
xchg
stos
sbb
es
mov
inc
cwde
fstp
mov
push
mov
scas
jecxz
mov
lahf
add
mov
test
retf
stos
pushf
imul
mov
mov
inc
sti
jmp
repnz
bound
cmc
adc
dec
jmp
pusha
dec
fwait
adc
pop
cmps
push
sub
sahf
enter
shl
xchg
addr16
push
mov
cmp
dec
sbb
dec
xchg
cwde
cdq
xor
jl
mov
and
push
inc
fisub
nop
jmp
jo
loop
adc
(bad)
mov
les
test
retf
jns
mov
shl
hlt
jmp
dec
sahf
xchg
ins
ret
push
leave
adc
out
ja
inc
inc
pop
push
fisttp
cmp
movs
mov
aaa
out
push
loope
dec
inc
mov
aas
popf
sub
adc
add
in
sbb
mov
xchg
jno
jbe
(bad)
mov
mov
push
adc
mov
test
jg
movs
jmp
cmp
pop
dec
lods
scas
jne
push
aam
and
std
lock
pop
xor
sub
fsubr
push
lahf
inc
pop
ins
xchg
adc
fdivr
push
mov
pop
in
cmp
cmp
jb
jae
lods
sub
retf
daa
add
fdiv
call
jno
mov
ret
xchg
shl
adc
cmps
movs
sub
je
neg
addr16
mov
xchg
loope
cmp
fisub
xor
cmp
pop
fnstenv
add
pusha
lods
imul
nop
test
ror
mov
add
adc
push
and
add
mov
cmp
sub
and
jmp
or
sti
pusha
loope
jae
mov
fs
loop
adc
mov
mov
popf
(bad)
inc
add
mov
mov
jmp
sub
sbb
ret
cmp
jo
jne
push
mov
ret
lods
stos
adc
scas
push
retf
mov
add
inc
or
cmp
inc
mov
out
pop
arpl
add
cmp
std
add
test
fwait
leave
pop
loop
out
xchg
mov
rol
mov
xlat
push
sub
in
sub
xor
and
add
cmc
add
in
pop
clc
and
and
cmp
inc
popa
xchg
nop
xchg
enter
pop
out
xadd
bound
add
aas
or
or
push
ins
cmps
push
add
test
cmp
dec
retf
cmp
and
xchg
jmp
je
mov
mov
cmps
push
xchg
(bad)
cli
mov
imul
xchg
bound
div
or
add
jecxz
mov
sti
xor
jae
cmp
test
push
call
jp
fiadd
movs
mov
pusha
inc
aaa
mov
(bad)
jmp
fisubr
aam
jb
movs
lahf
or
cmp
retf
mov
(bad)
stc
dec
js
scas
dec
in
mov
mov
pop
out
mov
test
mov
inc
popf
test
nop
rol
out
fbstp
push
int
inc
and
pushf
add
sub
xor
jns
xchg
call
popa
dec
popa
inc
hlt
pop
sub
cmp
call
mov
sbb
xor
lock
out
inc
inc
mov
jp
mov
ins
in
mov
xchg
movs
enter
sbb
adc
fild
jmp
push
dec
clc
xor
pop
jmp
sub
outs
pop
fwait
dec
aaa
jns
xchg
mov
fld
mov
fidiv
jns
mov
sub
jl
lods
rol
out
dec
pop
cdq
jnp
fstp
jne
xchg
mov
(bad)
scas
(bad)
cmp
pop
es
js
loopne
push
jmp
je
inc
cmps
cli
test
xor
arpl
pushf
lea
dec
retf
(bad)
mov
les
mov
inc
sbb
lock
fisubr
and
arpl
push
and
in
mov
out
int
aas
cmps
mov
jb
iret
inc
add
sbb
in
push
sub
sbb
fist
pushf
aaa
jnp
test
shr
(bad)
dec
pop
push
mov
jno
stos
stos
outs
aam
jnp
mov
cmps
add
adc
sub
adc
mov
mov
dec
pop
xor
mov
inc
fwait
inc
jb
inc
rcl
push
outs
mov
add
gs
xor
ds
pop
pusha
cmp
mov
dec
outs
xchg
rcr
xor
xchg
pop
mov
bound
inc
jecxz
loope
xchg
iret
in
iret
cmps
jl
(bad)
loopne
sub
bound
nop
pop
push
mov
aad
mov
cmps
xor
push
lods
xor
or
call
jp
jae
andps
sub
jno
sbb
xchg
enter
ss
cmp
cmp
or
xchg
bound
es
cdq
div
ret
jl
dec
fisub
call
cmc
idiv
xchg
data16
fcomip
dec
nop
dec
add
fld
dec
cmc
xchg
push
(bad)
and
ror
add
cmp
jbe
jae
popf
mov
xchg
sar
ret
aad
push
adc
add
jmp
add
sahf
adc
and
stos
xchg
or
mov
pop
push
jbe
sub
jecxz
(bad)
in
mov
icebp
and
jle
mov
mov
fld
call
mov
in
pop
sahf
xchg
retf
sub
cmp
in
bnd
pop
fist
add
mov
pop
pop
mov
lds
sbb
jae
push
sbb
push
or
xor
fwait
sub
jg
jnp
xchg
add
das
and
jmp
push
xchg
mov
inc
push
jl
push
sar
dec
rcr
daa
xchg
inc
xchg
stos
mov
push
lea
xchg
jmp
sub
loop
sub
ins
sbb
cmps
ss
mov
inc
call
call
adc
push
jo
jmp
dec
(bad)
fisubr
sub
aam
imul
fs
push
gs
call
rcr
sub
inc
movs
mov
dec
push
mov
mov
add
sub
lods
jae
xor
js
(bad)
inc
and
mov
in
cli
nop
adc
or
xor
push
or
lods
or
add
jge
mov
add
mov
sub
aas
sar
and
dec
popa
stos
pusha
not
ins
nop
cmps
or
xlat
shl
aaa
out
jge
mov
push
add
aad
iret
lock
fwait
test
jbe
or
jg
sbb
cdq
addr16
push
movs
mov
lods
dec
out
ds
cld
jne
jp
leave
adc
jae
add
jge
lahf
jg
movs
sbb
aam
xor
dec
(bad)
mov
mov
or
pop
ins
ins
scas
ins
clc
fadd
jl
call
retf
sbb
(bad)
mov
jo
adc
in
sbb
mov
dec
push
sbb
mov
add
ss
jb
arpl
mov
les
repnz
or
sbb
add
je
jl
stos
or
sbb
add
scas
mov
cwde
inc
inc
inc
mov
dec
sahf
std
xchg
movs
pop
sub
in
sub
outs
in
mov
inc
jmp
jle
xchg
mov
adc
dec
int3
(bad)
lock
inc
pop
cmp
push
push
daa
lods
dec
or
mov
call
cwde
clc
js
jne
leave
pop
das
jl
cmp
and
cs
adc
inc
popf
fincstp
aas
xor
ret
out
xchg
aaa
call
test
cdq
loopne
mov
mov
stos
adc
movs
rcr
mov
mov
inc
out
fist
mov
icebp
sub
or
jmp
daa
out
jne
imul
pop
and
arpl
inc
mov
cmp
ja
mov
adc
mov
push
jne
sbb
jo
mov
daa
rol
jmp
cld
xor
adc
div
jecxz
outs
pop
mov
ins
xchg
enter
mov
pminub
mov
loope
test
test
pop
cld
fdivp
cld
std
push
jmp
push
lea
pop
inc
mov
inc
sub
sahf
ror
sub
and
adc
or
popa
or
imul
jnp
stos
mov
jmp
cdq
adc
inc
mov
push
jmp
rcl
mov
mov
pop
pop
mov
mov
xchg
in
aam
push
aad
cli
je
sbb
jmp
inc
and
stos
push
pop
daa
lahf
dec
push
jg
stos
mov
cs
retf
stc
add
jmp
pop
or
shl
js
imul
push
mov
and
xchg
ins
sbb
pushf
int
add
pop
inc
ror
xor
add
icebp
mov
in
mov
mov
data16
mov
push
sbb
and
fwait
je
push
enter
ret
and
sbb
mov
je
cwde
dec
cmp
fwait
fwait
xchg
mov
loope
(bad)
loopne
jb
cmp
lea
fimul
or
mov
fsubr
add
fiadd
mov
mov
fidivr
mov
out
stos
and
test
jecxz
mov
fnstenv
cmp
xchg
repnz
aas
or
pusha
test
outs
sbb
mov
sbb
inc
jmp
bound
fild
xor
out
xor
sub
push
mov
push
xchg
popa
cwde
call
push
jecxz
push
push
lds
mov
mov
jmp
or
retf
inc
xchg
mov
mov
mov
aad
and
dec
lock
inc
sbb
add
jne
xor
push
mov
iret
mov
retf
mov
retf
inc
sub
cmp
and
pop
adc
addr16
mov
jns
adc
retf
call
add
push
cmc
add
mov
xchg
pop
fisubr
out
sbb
pusha
movs
xor
adc
scas
lock
mov
xlat
jg
es
jecxz
fldenv
add
or
outs
dec
jno
xor
xchg
mov
xchg
cld
arpl
sub
sbb
pop
add
add
add
imul
sbb
mov
aaa
pop
inc
(bad)
mov
mov
pop
pop
inc
mov
jae
int3
sti
adc
pushf
js
stc
out
add
dec
lods
mov
pop
pop
xchg
ret
cmp
(bad)
xchg
mov
mov
pop
add
leave
int3
scas
push
sti
cmp
sub
sub
cli
push
cmp
cmps
xchg
aas
pop
jmp
mov
dec
dec
je
fnstsw
push
push
mov
inc
dec
xchg
popw
stos
adc
pop
or
pop
(bad)
inc
xchg
loopne
jmp
(bad)
inc
mov
out
add
rcr
mov
jp
pushf
ret
popf
js
cmc
in
call
xchg
jl
push
pop
dec
(bad)
mov
in
inc
or
xor
add
cwde
mov
or
retf
clc
push
push
add
int
ja
or
jae
imul
outs
call
hlt
fsub
inc
mov
push
ins
fsubr
(bad)
call
xlat
mov
xchg
rcr
xchg
out
sbb
les
mov
lea
sub
enter
sbb
and
or
push
xchg
pop
push
jb
lds
js
nop
and
daa
fld
pusha
add
push
xchg
xor
inc
mov
mov
sti
into
test
xchg
xchg
jg
je
fs
addr16
sar
push
repz
scas
jne
sbb
cmps
and
mov
and
outs
rcr
and
into
out
pop
cdq
pop
add
adc
inc
push
lea
ror
iret
or
xor
(bad)
pop
add
jbe
test
pushf
push
inc
sub
and
jmp
jnp
inc
hlt
into
sub
call
xor
sti
pop
repz
mov
add
dec
xchg
mov
scas
mov
ins
sbb
xor
leave
add
loope
lock
inc
and
xchg
cmp
fwait
xchg
stos
pop
push
fistp
clc
sbb
fstp
pop
and
sbb
push
add
add
inc
imul
or
cmp
stos
sub
push
sbb
push
cmp
dec
xchg
mov
or
mov
test
jl
lods
cmps
mov
loopne
mov
aad
inc
mov
push
sub
leave
stc
popa
loopne
push
or
lea
dec
inc
mov
xchg
clc
xchg
pop
test
jno
imul
fs
mov
fsub
fmul
sbb
xchg
sti
fwait
inc
mov
inc
jle
ins
test
pushf
pop
xchg
mov
mov
mov
push
push
loope
and
aam
mov
mov
dec
xchg
jl
pop
push
sub
mov
bound
movs
push
inc
push
mov
sub
dec
in
mov
mov
sub
cmc
sub
bound
push
mov
pop
bound
iret
or
jnp
jno
jg
(bad)
ficomp
ret
pushf
je
mov
lea
clc
outs
sti
mov
mov
movs
test
adc
(bad)
stc
mov
(bad)
xor
cs
test
jg
xor
xor
mov
dec
stos
fst
push
clc
int3
js
neg
inc
sbb
pop
outs
dec
sub
add
js
(bad)
jb
into
sub
retf
and
imul
fdivr
dec
pop
jbe
push
xlat
scas
mov
leave
loopne
enter
retf
jmp
ja
jnp
mov
jns
sahf
shr
mov
js
sahf
mov
xor
daa
and
push
stos
inc
cdq
aaa
addr16
jnp
jae
ja
mov
mov
jmp
inc
and
cmp
mov
or
add
aam
jae
movs
xchg
xor
and
(bad)
xor
add
(bad)
jmp
push
(bad)
mov
xor
lds
lods
mov
inc
sti
movs
mov
scas
call
scas
outs
xchg
jbe
cmp
inc
iret
mov
jne
xor
pop
fsubr
cmp
test
adc
cmp
iret
jo
dec
sbb
jbe
jmp
mov
lods
sub
fwait
movs
pop
and
dec
int3
leave
out
mov
jno
inc
inc
push
cmps
jg
mov
jmp
sbb
jmp
mov
sbb
mov
aas
aas
xchg
aam
(bad)
ins
jns
test
je
pop
sub
ret
and
jne
inc
mov
or
(bad)
lea
push
(bad)
mov
jge
int
ds
gs
and
or
push
inc
xchg
stos
adc
adc
scas
xchg
das
sar
test
fwait
dec
ret
lahf
aam
call
in
neg
mov
rol
xchg
sahf
int3
and
push
sbb
mov
movs
shl
jns
xchg
test
pop
int
push
or
int3
push
add
pop
inc
mov
inc
mov
fsub
nop
cmp
or
daa
adc
cmp
popa
push
push
jl
xchg
lea
inc
jmp
in
retf
cld
dec
ins
fld
(bad)
sti
push
or
dec
int3
xchg
jge
cli
retf
jmp
mov
mov
sub
in
mul
jae
mov
enter
ror
loopne
sti
push
jb
imul
and
xchg
dec
iret
and
clc
arpl
je
mov
pop
xchg
adc
and
inc
gs
jo
mov
or
xor
add
int
shl
mov
jae
cmc
lahf
jb
in
push
aad
cmps
push
rcl
pushf
repnz
sbb
call
dec
in
out
sbb
out
aam
inc
cld
push
inc
jbe
mov
ins
or
fnsave
ins
in
retf
jp
fnstsw
push
pop
fcomp
imul
ss
sbb
pop
sbb
fst
stos
add
dec
fild
mov
dec
cwde
aad
popa
aam
add
or
bound
or
mov
arpl
shr
ficom
xor
jmp
jns
inc
fidivr
addr16
mov
retf
aas
pop
fstp
mov
push
cmp
cmp
inc
xor
rol
test
pop
xchg
xor
das
and
cli
mov
clc
imul
rol
sub
pusha
push
repnz
mov
dec
cmps
dec
add
xor
test
fidivr
cmp
ret
rcr
jl
and
push
xchg
stos
dec
aaa
or
sbb
push
cwde
fcomp
(bad)
xchg
jbe
dec
or
add
pop
cs
loop
shr
call
or
dec
pop
mov
xor
leave
fsub
add
inc
pop
push
mov
test
cmp
les
repnz
stos
sub
out
movs
pop
pop
lea
cld
cmc
aad
cmp
mov
cmps
das
and
pop
sti
inc
push
sbb
outs
xchg
jbe
ret
mov
ror
sbb
cli
je
js
aad
xor
nop/reserved
inc
sbb
inc
mov
cdq
imul
cwde
into
mov
sbb
push
test
inc
shl
cwde
cmc
mov
shl
or
push
xchg
gs
mov
test
mov
(bad)
cmp
mov
es
and
mov
dec
inc
scas
inc
pop
dec
cdq
cwde
mov
push
and
pusha
loop
cmp
sbb
add
sub
xor
jne
pop
outs
cdq
addr16
mov
mov
mov
or
cld
mov
rcr
fistp
cwde
or
mov
out
push
scas
out
dec
scas
arpl
cdq
mov
and
fsub
in
fadd
jo
dec
sub
retf
ja
sbb
push
adc
and
ret
cs
and
push
out
xor
and
pop
xchg
and
bound
fs
mov
dec
jmp
in
scas
xchg
add
inc
jbe
cmp
ret
and
aad
jae
inc
cmps
pushf
lods
icebp
or
fimul
xchg
loope
js
mov
scas
inc
or
icebp
(bad)
fist
dec
add
fisubr
jbe
inc
sbb
sahf
cmp
dec
(bad)
clc
and
pop
jmp
and
out
or
push
test
mov
in
xlat
xchg
mov
pop
out
add
xor
fadd
jge
loopne
push
int
or
std
test
clc
sbb
movs
cmps
jmp
mov
mov
mov
mov
je
adc
lods
sub
es
pop
sar
inc
das
cli
outs
daa
popa
mov
xchg
cwde
inc
push
cmps
pop
(bad)
mov
push
dec
add
loopne
push
pop
xor
stos
cmp
adc
push
xor
xchg
adc
test
leave
ret
push
mov
and
jb
mov
mov
and
stos
mov
int3
pop
xchg
stc
cdq
xlat
or
inc
jae
cmps
(bad)
xor
stc
sub
aam
retf
or
add
int
dec
and
(bad)
push
outs
pop
mov
cmp
scas
mov
fnstsw
call
inc
jle
loope
or
sbb
pop
mov
mov
push
mov
(bad)
pop
xor
(bad)
clc
sti
xor
jg
daa
fisub
xchg
inc
cmps
rol
adc
out
mov
sahf
mov
push
cmps
xchg
test
rol
mov
xor
xor
pusha
add
push
dec
mov
xchg
pop
fcmovnu
adc
or
sbb
fistp
dec
mov
mov
mov
xchg
aaa
dec
and
jecxz
loopne
fsub
push
mov
out
nop
in
add
retf
outs
mov
xchg
push
add
pop
call
xor
pop
push
jmp
add
push
lods
xor
mov
push
int3
(bad)
mov
mov
and
and
imul
dec
mov
cmp
xor
(bad)
icebp
mov
mov
inc
xchg
out
rcl
sbb
push
daa
leave
inc
mov
mov
cmc
sbb
xor
stos
shl
cmc
cmps
push
hlt
push
icebp
or
dec
ret
jae
and
dec
test
jp
lea
dec
(bad)
fisttp
ja
lock
adc
inc
(bad)
aas
pop
das
ds
js
mov
sbb
dec
push
push
xchg
in
xor
leave
or
dec
jno
mov
jg
mov
pop
add
icebp
cmc
sbb
bound
xchg
outs
push
xchg
mov
fcom
mov
cmps
dec
and
dec
shl
sbb
jne
xchg
ins
or
jmp
dec
in
out
sub
inc
mov
mov
sbb
fmul
aam
add
es
clc
stc
mov
pushf
clc
inc
sti
add
lods
jae
cmps
lds
mov
test
aaa
into
std
xchg
aaa
rcr
mov
stos
mov
mov
jmp
repnz
xor
fld
ins
scas
sub
std
es
sbb
ds
adc
mov
or
mov
fs
xchg
jno
add
add
cmp
jmp
iret
push
iret
outs
jbe
ja
xchg
das
bound
push
jg
leave
test
xchg
into
pop
in
jp
fnstenv
mov
cmp
les
in
retf
xchg
push
mov
mov
fisub
mov
into
shl
icebp
inc
dec
out
fisttp
outs
cli
push
pop
ss
stos
push
jecxz
jp
dec
mov
sub
mov
mov
fst
push
pop
mov
xor
mov
mov
mov
adc
sbb
lods
std
adc
sti
xor
rol
pop
inc
push
ror
ret
jecxz
push
shl
cmps
sbb
mov
call
xor
lock
aad
xchg
outs
ror
jge
pop
inc
aas
arpl
push
pop
or
aaa
pop
mov
(bad)
or
and
inc
sub
xor
cmp
add
pop
mov
xchg
jg
xchg
(bad)
sbb
and
sbb
jl
popf
ja
fwait
sti
cmp
in
lahf
pop
push
stc
div
ins
idiv
mov
push
pushf
mov
cmp
les
addr16
jmp
stos
cmp
dec
mov
loop
pushf
xor
dec
(bad)
sub
push
in
mov
sahf
inc
pop
out
inc
(bad)
or
call
call
imul
sub
push
mov
xor
fmulp
mov
out
pop
pop
lods
push
fst
in
rcl
mov
loope
ficom
mov
adc
div
scas
ret
inc
mov
(bad)
cmp
jecxz
fist
xor
push
sbb
xchg
xchg
mov
inc
(bad)
call
adc
fisub
and
jl
cdq
add
mov
add
fwait
popf
adc
inc
xlat
aam
sub
lea
inc
addr16
rol
mov
aas
mov
mov
lds
mov
cdq
enter
pop
out
pushf
xor
jmp
addr16
mov
clc
or
clc
retf
cld
add
or
mov
and
cmp
lahf
push
pop
lods
pusha
repnz
loope
dec
pop
loopne
push
jnp
sub
pop
mov
dec
imul
pop
xchg
adc
cdq
or
pop
jg
cmps
mov
hlt
je
jns
arpl
mov
push
mov
mov
and
in
mov
test
inc
fwait
pop
jb
leave
popf
data16
cld
(bad)
cmc
mov
arpl
fisub
pop
out
inc
sbb
(bad)
idiv
jns
fdiv
inc
jle
outs
pop
popa
jmp
cmp
imul
add
mov
add
imul
sub
ins
fdivr
mov
inc
mov
in
test
inc
scas
in
push
lock
fwait
outs
hlt
call
jmp
jo
dec
fwait
mov
sbb
xchg
mov
inc
fild
inc
xchg
(bad)
dec
out
pop
sub
leave
retf
add
jbe
lods
jne
dec
mov
xchg
mov
inc
(bad)
int3
xor
rol
addr16
add
gs
and
pop
or
jo
sar
xor
push
pusha
fucomp
stos
cmp
add
mov
mov
push
aam
jne
cmc
mov
mov
movs
out
sahf
imul
(bad)
cmc
clc
jmp
dec
out
adc
sti
jnp
inc
pop
add
mov
cmp
or
push
les
and
add
pop
pop
add
cmp
ja
push
add
mov
cdq
shl
sbb
popa
mov
arpl
fild
xor
lock
xchg
pop
xchg
mov
ja
sbb
and
int3
aad
fdivrp
inc
sbb
out
adc
jl
es
cmp
cmp
pop
loopne
add
cmps
mov
inc
popf
jmp
add
imul
jae
mov
js
mov
das
orps
shl
icebp
ins
push
jns
push
jmp
mov
shl
scas
or
pusha
xchg
jp
mov
mov
mov
mov
cmp
push
fdiv
stc
pop
loopne
jb
pop
fimul
imul
mov
mov
xchg
leave
and
fsub
jp
out
pop
or
adc
mov
jp
xchg
or
mov
add
or
retf
test
pop
pop
fs
dec
cdq
mov
mov
rol
adc
jg
pushf
call
mov
shl
scas
sub
imul
and
addr16
fs
gs
dec
sbb
mov
or
cmp
jmp
xor
cmp
dec
je
imul
or
lods
mov
xchg
arpl
dec
loopne
xchg
jo
lahf
inc
push
retf
mov
cli
lods
mov
jb
(bad)
sahf
add
aad
retf
sti
xor
mov
fwait
outs
into
push
pop
or
enter
push
push
pusha
imul
xor
mov
add
ins
repz
cmp
cld
pop
jg
and
cmp
sbb
adc
ja
jnp
mov
call
mov
lds
pop
mov
mov
jge
in
push
in
mov
pop
hlt
(bad)
mov
scas
mov
cmp
test
xor
pop
or
cmp
clc
xchg
retf
inc
add
jg
daa
pop
inc
push
jge
mov
xchg
dec
push
lock
enter
push
push
inc
xor
sub
and
sbb
js
shr
out
cwde
(bad)
bound
jmp
rcr
push
inc
xchg
js
(bad)
loopne
xor
push
ret
sub
mov
cmc
movs
mov
ja
mov
and
ror
push
nop
dec
out
sbb
mov
cmp
xor
outs
xchg
setnp
cmps
pop
lahf
int
mov
push
inc
add
inc
push
cmp
es
jae
dec
sbb
push
ds
or
ror
shl
sbb
add
rcr
out
mov
add
addr16
sti
aad
repz
jl
mov
fmul
pmovmskb
fild
dec
cmp
data16
push
mov
ins
stos
mov
scas
cmp
pop
(bad)
jg
xchg
jo
jp
cmps
xor
inc
adc
mov
mov
fcomp
test
ss
adc
jmp
lea
sbb
pop
rcl
add
jbe
mov
push
test
mov
xchg
ret
ins
mov
vphaddbd
mov
sbb
enter
mov
cli
pop
sub
cli
stc
ret
pop
dec
and
ss
jle
ja
or
leave
pop
ror
stos
cli
add
pop
sbb
add
jae
adc
sbb
fimul
and
(bad)
mov
das
dec
call
call
push
xor
jno
test
sti
fld
mov
pop
pop
mov
sti
lock
div
jmp
fcom
xor
jae
or
ds
adc
mov
(bad)
scas
mov
ret
(bad)
movs
mov
inc
xor
or
and
dec
adc
sub
test
pop
neg
cdq
sbb
pop
inc
fimul
fadd
push
retf
ss
mov
xchg
fs
fbstp
mov
stos
and
rol
int3
xchg
inc
jmp
dec
clc
inc
rol
cmp
cmc
not
and
adc
push
mov
jae
test
pop
out
sub
jecxz
inc
pusha
ds
dec
sub
or
jg
adc
scas
(bad)
pop
cmp
movs
adc
repz
jmp
jb
popf
fsubr
(bad)
xchg
jae
mov
mov
mov
dec
ja
mov
test
stos
fdiv
pop
stos
xor
fbld
loop
jg
cmp
jns
jge
movs
int
cmp
neg
mov
retf
push
adc
and
xor
or
or
jo
fstp
stos
pop
ja
mov
lods
mov
ror
dec
sbb
fisttp
fucomp
pusha
int3
mov
xor
movs
std
push
retf
sahf
movs
mov
xchg
call
mov
lahf
xchg
xor
sub
xor
aam
xchg
adc
jg
xor
scas
cmp
(bad)
and
sbb
xor
xor
out
sub
push
lods
pop
dec
nop
dec
sub
sti
or
mov
repnz
add
(bad)
mov
mov
xchg
cmp
sbb
mov
stos
dec
fdivr
loope
test
sbb
out
jl
test
push
leave
dec
cmp
jae
adc
xor
jb
outs
push
popa
test
daa
enter
jnp
cmp
push
mov
sub
inc
imul
push
and
arpl
frstor
ret
outs
outs
inc
movs
js
xchg
loopne
mov
loope
in
jno
out
mov
mov
ficomp
push
mov
fdivp
scas
(bad)
jp
jecxz
ins
retf
jbe
sbb
inc
imul
aam
cli
adc
and
dec
add
xchg
ja
clc
add
shr
jne
mov
ins
jb
cmp
jae
adc
mov
inc
out
loop
mov
add
jne
ret
loope
mov
ficomp
and
push
xchg
clc
fsubr
mov
test
(bad)
fist
mov
cs
(bad)
hlt
push
into
adc
pop
call
dec
lahf
mov
mov
and
jge
out
jge
inc
pop
jmp
or
popa
push
ficomp
ror
movs
mov
adc
dec
sahf
hlt
xchg
leave
sti
add
mov
pop
jecxz
fwait
push
int
jb
sar
xchg
push
(bad)
push
mov
cmps
mov
call
and
fsubr
cdq
mov
adc
adc
repz
push
fistp
push
add
adc
mov
add
scas
sbb
(bad)
or
int
outs
pop
daa
ret
dec
xor
and
push
fld
xchg
add
mov
add
jl
test
adc
inc
push
lods
and
fwait
jmp
je
loop
push
mov
mov
sti
data16
push
jae
mov
fcomp
mov
fld
or
shr
jmp
iret
dec
imul
mov
inc
es
stos
lods
ret
dec
fiadd
call
adc
adc
(bad)
mov
push
sar
xor
stc
scas
popf
pop
adc
daa
xchg
test
out
out
sahf
adc
loope
daa
aad
mov
rcr
mov
cmc
sub
scas
add
fcmovbe
cwde
fmulp
dec
inc
mov
div
leave
and
or
cmp
jne
dec
sub
rcr
call
inc
pop
aad
cs
daa
loop
or
jg
nop
push
sbb
dec
ins
test
jns
lods
xchg
xor
repz
pop
pop
popa
mov
inc
mov
mov
adc
fsubr
cli
mov
mov
mov
mov
mov
dec
lds
or
in
test
popa
fbld
push
dec
push
and
nop
or
imul
jmp
(bad)
rcr
sbb
sbb
adc
mov
mov
aam
pusha
test
inc
fmul
pop
imul
cld
jbe
push
hlt
mov
dec
mov
mov
int3
inc
mov
fwait
ins
pop
mov
cli
mov
test
test
jl
push
imul
les
cs
fst
dec
push
adc
and
sbb
and
or
mov
inc
test
jae
icebp
in
int
add
add
mov
cdq
cmp
popf
mov
inc
int3
sahf
inc
add
mov
lock
movs
mov
mov
mov
jmp
mov
cmp
cdq
push
nop
js
xor
retf
enter
push
pop
xor
dec
xor
mov
adc
aam
enter
inc
add
add
pop
push
and
retf
pop
cmps
inc
sbb
stos
cmp
jb
out
xchg
sub
mov
jmp
pop
mov
imul
adc
pop
mov
ftst
das
fild
adc
clc
test
in
dec
mov
out
sbb
shl
cmp
sahf
ins
push
pop
cdq
pop
sub
mov
dec
add
mov
push
dec
jno
sti
or
add
and
pop
adc
jb
movs
mov
sub
retf
xchg
mov
outs
jle
sub
lds
jmp
push
sub
lds
fwait
movs
icebp
or
xchg
sbb
aad
scas
stos
hlt
arpl
fisttp
sub
sbb
pop
fsub
repnz
push
sbb
sbb
jo
arpl
jns
mov
stos
cmp
jmp
(bad)
call
push
pop
mov
bound
pop
adc
jl
movs
movs
xor
add
loope
mov
(bad)
jmp
push
push
cmps
ins
rol
outs
mov
xchg
jne
fidivr
mov
shl
cdq
leave
mov
adc
(bad)
call
ja
lods
add
retf
jbe
adc
outs
rcl
pop
dec
(bad)
cdq
scas
mov
push
scas
pop
cwde
out
and
add
inc
or
call
inc
jb
push
inc
xchg
dec
add
xor
sbb
sbb
nop
sub
mov
jno
cld
jmp
test
xchg
shl
sti
fmul
or
lock
idiv
cmp
mov
mov
or
ret
pop
pushf
sbb
fs
push
sbb
sahf
into
sysret
cmps
pop
enter
adc
or
jl
mov
jae
ins
adc
stos
cmps
test
cmp
dec
(bad)
std
jmp
rol
popa
test
iret
stc
inc
movs
stos
fwait
ins
out
pop
xor
div
sbb
inc
lock
mov
dec
test
(bad)
cwde
ret
out
pop
mov
pop
pop
dec
loope
loop
std
inc
inc
aas
cmp
dec
and
mov
enter
test
repnz
pop
dec
ret
adc
push
xor
adc
imul
mov
jns
out
das
mov
jo
inc
jb
cmp
std
dec
stos
out
xchg
push
aam
and
pop
test
mov
dec
cmps
test
jmp
rol
lods
sub
retf
or
dec
(bad)
(bad)
not
inc
push
cmp
mov
dec
sbb
xchg
mov
leave
clc
push
mov
pop
jl
xor
jmp
test
popf
adc
xchg
xchg
or
ins
call
stc
addr16
jg
dec
in
sar
mov
jb
mov
push
in
mov
lods
fcomi
xor
test
dec
repz
lods
dec
out
retf
cmp
in
pop
in
push
sbb
push
in
xchg
sar
repz
add
push
cmp
pop
ror
sub
mov
or
stos
or
pop
lock
mov
gs
loope
sub
(bad)
mul
out
scas
mov
add
mov
add
shl
test
(bad)
adc
or
retf
loopne
pop
jp
mov
imul
mov
mov
fucomip
xor
dec
int
add
or
add
sbb
mov
movs
sbb
inc
push
dec
ret
cli
mov
leave
mov
inc
push
pop
lds
lahf
clc
jle
repnz
shr
je
cmc
out
push
xchg
sbb
pop
inc
mov
mov
mov
jmp
stc
sbb
adc
jmp
pop
ja
xchg
jl
mov
cwde
call
in
add
aas
enter
adc
jmp
jb
mov
or
mov
(bad)
mov
sbb
fs
jbe
mov
cmp
mov
xlat
xor
sbb
cmps
mov
sub
inc
out
jmp
pusha
xchg
mov
adc
nop
(bad)
fcomp
adc
jg
addr16
outs
adc
mov
shl
mul
fisttp
sti
or
push
jl
jmp
scas
push
add
mov
lahf
mul
pop
xchg
fisttp
stc
push
push
inc
lods
sub
xchg
mov
outs
in
movs
push
and
outs
call
add
ret
sbb
clc
ds
in
mov
sbb
retf
push
retf
add
xor
loopne
cmp
movs
xchg
mov
xchg
shl
outs
ja
and
adc
jae
adc
pop
outs
test
xchg
outs
cdq
mov
jp
ficom
cwde
je
inc
mov
xor
xchg
fucomip
mov
xchg
jns
stc
movs
leave
cmp
nop
xchg
es
clc
test
mov
mov
inc
xchg
push
into
or
or
leave
(bad)
push
(bad)
inc
sbb
imul
xchg
out
add
int
popa
addr16
mov
adc
pop
adc
or
lahf
push
push
push
out
stos
xor
pop
mov
loopne
xchg
jno
into
loope
xor
outs
mov
mov
sbb
add
fidiv
mov
das
push
sbb
fnstcw
add
jg
adc
mov
aaa
or
mov
leave
mov
pusha
or
sub
gs
mov
mov
xchg
outs
push
mov
add
dec
jge
jmp
push
dec
pop
sub
imul
loope
inc
hlt
mov
nop
daa
loopne
movs
cdq
mov
dec
mov
out
sbb
fist
out
popf
jp
pop
clc
(bad)
cs
and
adc
test
pop
push
mov
movs
mov
repz
cs
outs
pop
or
inc
or
and
pushf
pop
sbb
sub
mov
pop
ret
std
call
pshufw
loop
mov
xor
lds
test
ja
movs
sahf
add
out
in
sbb
lods
dec
and
or
sbb
xor
xchg
dec
push
dec
pushf
ret
xchg
mov
push
stc
sbb
movlps
jmp
adc
das
cmp
sbb
fisttp
mov
jmp
push
pop
stc
fld
ret
outs
xchg
pop
sti
mov
cmp
aam
or
adc
test
pusha
movs
shr
aaa
mul
test
xchg
pushf
xor
jne
push
inc
sbb
jmp
imul
mov
push
ds
cmps
(bad)
lahf
mov
add
push
loope
and
ret
addr16
arpl
idiv
and
and
sub
imul
dec
popa
popf
scas
stos
aaa
pop
sub
inc
(bad)
repnz
jl
dec
movs
outs
fst
jecxz
into
xchg
pop
sub
stc
lods
jb
sbb
cld
mov
push
loopne
nop
cs
fxam
test
(bad)
test
addr16
mov
inc
sbb
jmp
pop
out
and
push
xchg
cmp
add
or
inc
(bad)
xor
or
and
mov
dec
adc
inc
or
stc
xor
xchg
push
scas
sar
popa
ds
and
idiv
push
cmc
cwde
je
repz
mov
je
mov
(bad)
test
icebp
jns
cdq
xchg
dec
iret
ss
sbb
rol
addr16
add
jae
aas
imul
mov
fnstcw
adc
cmp
sub
inc
and
sbb
adc
mov
(bad)
jno
push
push
leave
sti
stos
adc
inc
push
shr
test
inc
add
not
stos
mov
movs
mov
xchg
jecxz
jb
ja
or
and
fwait
cmp
dec
(bad)
adc
outs
call
sbb
inc
cli
cmp
in
add
add
adc
push
adc
out
and
add
jb
lods
adc
stos
xor
push
dec
(bad)
fild
fidivr
fs
js
ret
rol
cmps
dec
call
aam
pop
repnz
sahf
mov
pop
add
mov
icebp
inc
add
scas
or
aam
repnz
lds
popa
cmp
push
es
pop
add
mov
ins
enter
mov
add
mov
adc
cmc
jb
mov
dec
mov
or
inc
xchg
ret
pop
sti
outs
jp
fisubr
mov
mov
push
out
test
aad
xchg
pop
push
mov
lock
nop
(bad)
inc
stos
fstp
jns
xor
or
sar
dec
retf
add
jl
or
std
jne
jno
mov
push
into
mov
test
inc
push
pop
pop
jmp
add
xchg
add
sub
(bad)
cwde
sub
shl
fcomp
add
xchg
out
xchg
out
inc
popf
xchg
dec
or
push
mov
add
xchg
mov
aaa
inc
push
cmps
fs
es
push
inc
lahf
push
outs
popa
cli
jns
inc
mov
mov
sub
inc
iret
jmp
adc
and
jno
xchg
lods
adc
dec
pop
nop
or
movs
sar
fsubr
push
jmp
jl
sub
xchg
dec
lahf
iret
loopne
out
pop
add
inc
xchg
test
mov
mov
cmp
fbstp
out
test
jns
sbb
mov
jbe
mov
pop
jb
pop
and
mov
mov
ret
out
sbb
inc
mov
or
mov
mov
lods
jno
push
dec
in
cdq
dec
test
inc
ja
push
call
mov
(bad)
adc
movs
xlat
cmp
lock
or
pop
stos
adc
xor
sti
add
movq
push
pop
outs
mov
fnstcw
fnstsw
sahf
shl
push
cmp
inc
or
aaa
xchg
jae
push
jns
pop
push
mov
add
sar
or
outs
std
aad
inc
mov
test
pop
mov
cld
(bad)
shl
movs
push
neg
(bad)
adc
inc
fwait
cdq
cwde
out
dec
lahf
sbb
cmps
cdq
mov
or
fst
(bad)
mov
sub
or
(bad)
rcr
jge
mov
pop
test
dec
cdq
cdq
stos
retf
in
ins
sahf
in
addr16
jmp
clc
inc
ss
and
ins
dec
lods
ins
inc
retf
(bad)
fcos
or
xor
cwde
out
adc
(bad)
jno
arpl
mov
mov
out
xlat
mov
add
fadd
(bad)
mov
jge
xchg
mov
nop
sar
jnp
xchg
xor
mov
pop
push
(bad)
enter
sbb
cmp
imul
mov
xchg
int3
rol
lea
dec
adc
and
jecxz
mov
mov
scas
jnp
nop
sbb
nop
test
inc
adc
stc
mov
jecxz
push
jno
jl
cdq
clc
inc
mov
movs
inc
and
cli
xchg
add
jne
call
nop
mov
push
inc
rcr
cmps
int
dec
ins
cmc
test
rcr
pop
xor
(bad)
retf
and
add
ins
pop
arpl
movs
xchg
mov
test
jns
lea
imul
loope
or
popa
call
popa
outs
mov
jno
mov
and
add
cld
mov
test
pop
sub
imul
in
(bad)
out
test
mov
test
cmps
mov
add
test
add
stc
cli
mov
lods
xchg
inc
repnz
test
(bad)
mov
lds
push
pop
popa
xor
in
fldenv
call
push
and
add
add
sbb
push
js
adc
out
mov
enter
mov
add
inc
outs
jo
push
(bad)
fwait
cld
dec
xchg
pop
push
fcmovnbe
xchg
jp
inc
lea
pop
push
mov
lock
out
jmp
jnp
daa
sbb
adc
jae
sub
stos
xor
push
in
mov
mov
or
jg
sar
pop
push
dec
push
iret
adc
(bad)
mov
test
int3
pop
mov
jae
cwde
mov
add
mov
pushf
pop
jno
lods
push
loopne
leave
jae
repnz
xchg
stos
jne
mul
repz
sbb
(bad)
les
mov
clc
cmp
mov
dec
cmp
and
push
or
push
movs
jbe
jl
stos
(bad)
into
or
stos
pop
jecxz
sbb
js
mov
push
mov
sbb
into
add
stos
aas
add
inc
mov
clc
outs
push
pusha
xchg
lock
stc
inc
loopne
in
into
out
pop
clc
fdiv
mov
add
cmps
lods
sbb
xchg
xor
fcomp
js
adc
cmp
mov
jae
adc
jnp
sub
std
je
outs
mov
(bad)
iret
and
retf
leave
sub
repz
outs
pop
add
cmp
sbb
js
cmp
mov
add
fwait
xchg
sbb
(bad)
mov
leave
fs
js
dec
or
pusha
mov
mov
sub
out
inc
cli
mov
bound
mov
mov
mov
jmp
push
sub
and
cmp
aaa
pop
jle
bound
add
add
pop
(bad)
mov
mov
fiadd
call
dec
jo
addr16
dec
inc
in
lods
adc
xor
clc
fucom
cmp
jle
outs
mov
pop
xchg
mov
push
shl
mov
repnz
idiv
mov
push
cdq
ror
(bad)
push
inc
stos
mov
sub
enter
inc
dec
add
daa
jg
xchg
pop
push
mov
fwait
or
push
mov
add
jno
mov
xor
scas
cmp
adc
mov
test
adc
loopne
ret
dec
jb
movs
jg
cmps
mov
scas
or
cmp
mov
nop
test
pop
pusha
call
scas
leave
ret
mov
fimul
pop
icebp
shl
jae
sub
cmp
fnstsw
fs
mov
or
sbb
jmp
enter
ror
adc
cmp
or
push
push
fist
pop
dec
out
fsub
loopne
cmps
inc
nop
xchg
and
test
loope
test
jmp
(bad)
out
add
addr16
ficom
out
popf
add
div
xchg
rol
cmp
jg
sbb
dec
hlt
shr
sub
jne
dec
mov
call
int3
jmp
jne
xor
jae
xchg
push
or
add
pop
push
xchg
sub
cmp
push
cmp
leave
mov
jmp
outs
push
mov
dec
mov
mov
adc
mov
cmps
mov
loope
lahf
sbb
ror
rcr
pop
push
xchg
mov
in
dec
test
(bad)
into
sub
push
jg
js
cmp
movs
cmp
jno
xchg
gs
int
fwait
jecxz
popa
jno
mov
cmp
add
popf
push
sbb
xchg
mov
in
out
xchg
enter
add
imul
cmc
inc
test
add
mov
scas
sub
adc
daa
sahf
gs
jecxz
scas
retf
cmp
ret
cs
cmp
xlat
fadd
jp
sub
xor
cmp
mov
push
rcr
out
retf
in
jg
add
mov
ds
pop
mov
iret
inc
imul
repz
test
call
mov
inc
aad
add
xor
mov
mov
mov
xor
std
mov
xchg
mov
inc
lds
clc
dec
and
mov
lods
push
in
push
sbb
mov
outs
mov
ror
in
add
retf
inc
dec
imul
test
mov
pop
mov
outs
xchg
cmp
mov
pop
loopne
popa
jle
and
cmps
inc
into
mov
xlat
jmp
push
rol
add
fcomi
sub
scas
and
(bad)
mov
cmc
inc
gs
cmps
aaa
rol
add
sar
shr
pop
pusha
js
lods
cmp
aaa
pop
outs
mov
les
fimul
pop
add
les
push
inc
or
xor
inc
inc
mov
push
test
sub
int
add
aad
jmp
dec
ret
inc
test
in
add
out
add
pop
cmp
mov
rcl
(bad)
fnop
pop
jns
(bad)
dec
repnz
loop
mul
fisub
inc
or
xor
mov
xchg
mov
(bad)
out
jns
rcr
dec
add
mov
mov
imul
pop
mov
sbb
icebp
out
xchg
leave
add
pop
jge
lods
sub
ror
loopne
cwde
sbb
mov
mov
cmps
popf
hlt
xor
mov
loope
retf
rcr
pushf
push
lea
cmp
or
sti
mov
cdq
ds
sbb
cmp
cwde
xor
test
movs
ret
aam
(bad)
fbstp
shl
inc
pop
inc
push
jge
es
or
das
stc
dec
sbb
pop
mov
or
pop
mov
outs
mov
jge
mov
ins
in
mov
mov
out
inc
in
pushf
(bad)
stc
pop
mov
xchg
sbb
fild
sbb
sub
(bad)
jl
inc
inc
cmp
xor
das
mov
xchg
retf
aas
push
out
in
fcomp
test
jnp
inc
pop
jmp
gs
pop
mov
lods
jo
movs
or
push
daa
cmp
clc
out
add
xchg
imul
jl
fild
fidiv
out
aad
jae
(bad)
fcom
mov
push
mov
loope
test
movs
inc
lock
sub
(bad)
jge
adc
pop
sub
and
xchg
call
nop
pop
mov
push
dec
push
and
ds
sub
add
mov
push
test
pop
fstp
mov
retf
rcl
ins
jne
lea
cmps
fld
mov
adc
imul
mov
popa
xchg
xlat
mov
lds
mov
sbb
(bad)
mov
fsub
or
inc
xor
mov
mov
inc
les
push
cmp
inc
sub
and
xchg
dec
add
xor
das
cmp
cmp
rol
pop
inc
jnp
push
sti
xor
xchg
aad
lds
jmp
imul
mov
test
cdq
aad
jmp
call
(bad)
jmp
sbb
inc
(bad)
and
mov
adc
div
fldenv
movs
shr
gs
loopne
pop
inc
xor
jle
jo
mov
xlat
xor
das
and
sti
rcr
rol
mov
mov
pop
mov
xchg
ja
sti
stos
xchg
or
push
mov
stos
sbb
push
cmp
pop
ja
fist
dec
stos
pop
pop
cmp
in
out
imul
push
pusha
ins
scas
xor
dec
sahf
xor
jns
mov
cld
jbe
retf
or
push
inc
fsub
cdq
sbb
ja
jg
mov
dec
mov
cmp
idiv
pop
adc
call
ret
mov
and
stc
mov
test
mov
arpl
enter
fnstsw
mov
mov
adc
or
adc
imul
mov
lea
xchg
out
cmp
inc
inc
stc
pop
push
adc
test
enter
push
test
add
dec
test
sub
lock
out
ins
lea
movs
repnz
push
adc
call
xchg
pop
mov
int
mov
out
pop
add
inc
push
retf
pop
sar
pop
js
lods
pop
dec
std
jns
ja
shr
repnz
enter
inc
add
sbb
jo
add
jle
mov
inc
cdq
mov
add
inc
clc
stos
pushf
inc
iret
fisub
sbb
fist
sub
push
push
shl
mov
lods
sbb
mov
cmc
add
lock
outs
in
scas
inc
loopne
out
add
iret
test
push
dec
fwait
add
es
xchg
ins
retf
sahf
call
cld
inc
xor
push
test
sahf
jne
ins
adc
or
(bad)
lea
push
adc
or
jmp
retf
push
dec
ds
push
popf
mov
ins
loop
movs
jb
mov
lea
sar
popf
scas
icebp
dec
add
and
ret
addr16
call
xor
and
and
sbb
mov
sar
shl
and
cmc
inc
dec
je
neg
nop
sub
xor
pop
inc
fwait
jl
mov
mov
call
leave
je
jo
push
out
and
loopne
out
inc
push
shl
mov
(bad)
add
jg
mov
icebp
and
call
ins
pop
xor
adc
dec
fdivr
push
ds
jno
test
fwait
mov
or
and
cmp
inc
push
imul
pop
xchg
push
fistp
mov
add
mov
(bad)
sub
sti
fwait
xor
xchg
pop
loop
inc
and
sub
mov
mov
xor
icebp
mov
dec
imul
sbb
mov
jmp
mov
and
mov
or
inc
out
fnop
imul
cmps
daa
adc
mov
movs
mov
inc
icebp
mov
aam
pop
inc
add
sbb
jb
xchg
sub
and
inc
sbb
pop
out
xchg
mov
out
call
fs
mov
jl
icebp
adc
mov
and
mov
dec
sahf
cmps
idiv
add
aad
lods
lds
xchg
jb
push
pop
pop
mov
lods
dec
ret
fs
mov
push
sub
mov
xchg
mov
jecxz
arpl
push
mov
and
push
mov
cmps
jge
fist
test
jns
mov
cmp
adc
and
jb
fld
cmc
mov
cmp
nop
pop
push
rcr
lahf
adc
in
scas
jge
lods
mov
data16
(bad)
stc
cmp
lea
pop
leave
dec
cmp
icebp
in
sub
dec
push
sbb
pop
cmps
cmp
jno
fnstenv
jnp
lock
call
into
sbb
pop
or
scas
sbb
or
mov
push
dec
iret
out
test
int
aad
jp
mov
jnp
mov
push
jmp
cmps
xchg
rcr
pushf
fnstenv
xchg
mov
sbb
icebp
not
and
sub
in
push
add
arpl
jnp
dec
in
(bad)
cwde
mov
leave
inc
mov
sbb
pop
ss
xor
gs
imul
inc
out
scas
mov
out
mov
ror
cmc
dec
pusha
pop
mov
mov
xchg
imul
shr
mov
push
out
scas
add
jmp
movs
aad
jp
sahf
cwde
dec
clc
das
icebp
daa
and
test
push
dec
xchg
sbb
bound
mov
pop
(bad)
idiv
mov
pop
push
and
adc
xchg
pop
mov
mov
jae
jbe
sub
mov
lea
and
stc
in
retf
retf
push
je
xchg
mov
pop
mov
mov
pop
aam
test
mov
lods
movs
mov
and
jmp
jmp
inc
inc
cwde
mov
jno
inc
or
call
sbb
ja
mov
js
inc
sbb
mov
or
pop
repnz
ret
dec
jns
fidivr
sub
gs
mov
pushf
jnp
ror
scas
xchg
mov
cdq
fiadd
dec
popa
pop
xchg
(bad)
out
mov
test
cmps
jno
(bad)
loop
jb
pop
stos
cmps
mov
push
mov
stos
popw
xchg
aad
repz
addr16
sub
(bad)
repz
jne
jg
pop
pop
js
dec
sub
ret
or
inc
(bad)
cs
outs
push
cmp
pop
ss
cs
cmp
push
fadd
rcl
xchg
stos
mov
out
xchg
pop
mov
mov
mov
dec
movs
out
mov
or
cmps
div
repnz
scas
lea
call
stc
scas
in
pop
mov
jb
inc
jmp
and
sti
jp
adc
and
sbb
xor
mov
enter
rcl
add
push
sub
mov
(bad)
cs
pop
push
mov
jno
mov
sbb
or
out
sahf
sbb
ret
pop
add
xchg
test
loope
(bad)
mov
mov
mov
inc
pop
call
test
idiv
mov
dec
cmp
aam
aad
ret
add
push
sbb
bound
pop
leave
gs
sbb
sbb
daa
xor
sbb
jne
pop
jb
adc
lea
ins
call
push
inc
in
xchg
inc
test
js
sbb
mov
shl
mov
push
not
std
adc
mov
dec
in
test
cmp
dec
inc
mov
aaa
and
rcl
jle
js
cmp
pop
mov
mov
pop
jmp
inc
add
sbb
add
xor
push
inc
mov
inc
adc
add
pushf
(bad)
inc
nop
int
fistp
mov
lock
xchg
int3
mov
shl
lock
cwde
hlt
das
scas
pop
dec
xchg
stos
mov
pop
loopne
scas
ret
js
cmps
outs
xchg
jp
add
rcr
inc
add
inc
dec
mov
test
mov
push
leave
push
repnz
mov
addr16
add
in
inc
add
xor
(bad)
adc
jo
(bad)
adc
mov
or
xchg
daa
shr
jne
pop
add
dec
aam
call
xchg
jge
retf
out
push
xchg
adc
mov
mov
xchg
cmps
jae
push
fsub
and
jecxz
mov
clc
adc
jns
cs
mov
mov
jmp
call
sbb
dec
cs
pop
stos
add
mov
mov
ret
daa
mov
mov
add
xchg
lahf
dec
push
(bad)
hlt
mov
xchg
dec
call
inc
nop
xchg
mov
and
xlat
stos
int
pop
imul
sbb
cmp
(bad)
bound
lods
sbb
add
xchg
int3
or
mov
sahf
fcom
inc
and
xor
sub
adc
xchg
or
clc
sbb
and
int3
out
add
dec
dec
fisub
in
jmp
push
ror
mov
xchg
push
mov
mov
gs
nop
jl
enter
and
fld
enter
in
fld
jae
cmp
sub
and
(bad)
push
fistp
out
inc
jl
add
ds
pop
xchg
sub
jp
nop
push
inc
xchg
sub
rol
loopne
or
pop
leave
sbb
fwait
imul
rcl
jmp
(bad)
xor
sbb
mov
popf
mov
daa
daa
div
imul
fisubr
scas
fiadd
pop
cmps
inc
sbb
repz
pop
shr
gs
clc
push
sub
mov
xchg
mov
cs
push
(bad)
(bad)
sub
mov
jp
mov
pop
mov
pop
push
xor
mov
arpl
in
mov
(bad)
aam
lds
xchg
xchg
call
xchg
push
push
std
out
sub
jl
(bad)
mov
pop
out
lock
and
retf
call
sub
push
push
add
in
fcmovne
pop
fmul
add
shl
inc
mov
mov
fdiv
fadd
cmps
into
add
and
sub
or
mov
test
test
sub
xor
fistp
jns
ins
mov
bound
xchg
addr16
stos
xchg
xchg
jnp
xchg
jne
stos
test
int3
popf
ins
jp
mov
or
ret
inc
cli
cmp
ins
push
mov
fwait
mov
shl
js
icebp
inc
inc
pop
and
add
sbb
dec
push
mov
add
add
lock
add
push
lahf
arpl
scas
shl
cdq
jb
add
(bad)
lahf
and
jns
xchg
shl
xchg
mov
fdiv
fucom
jle
lods
mov
lods
sub
mov
imul
cwde
inc
push
cs
xor
and
mov
nop
xchg
dec
daa
rcr
mov
clc
jns
fs
add
jge
add
sub
and
push
cmp
or
mov
mov
out
loop
mov
jnp
mov
mov
jne
fwait
push
adc
outs
stos
mov
dec
push
popf
xchg
mov
sbb
fist
(bad)
mov
sbb
in
int3
lods
inc
int3
cs
add
pop
mov
dec
icebp
xchg
mov
fnclex
cmp
push
cld
inc
imul
lods
cmp
jb
mov
inc
mov
sti
xor
arpl
int3
mov
call
arpl
pop
call
mov
lock
scas
enter
pusha
mov
cmc
add
fld
mov
dec
sbb
(bad)
cmc
aad
clc
adc
pop
cmps
adc
(bad)
push
inc
or
mov
fdivr
iret
cmp
enter
or
xor
aaa
arpl
fs
inc
add
mov
inc
sub
and
cmp
jge
jmp
jbe
sti
fbld
xchg
in
sbb
xchg
sub
lock
aad
lds
push
sub
(bad)
rcr
xor
cmp
xor
shl
aas
xchg
mov
inc
add
sbb
add
pop
mov
push
inc
mov
cmps
xor
or
fidivr
test
inc
js
push
out
lds
scas
out
jmp
mov
xchg
jle
loop
mov
scas
lods
fidivr
mov
mov
cmp
(bad)
int3
jmp
fild
jge
mov
pop
push
pop
imul
shl
movs
aad
jne
pop
fsub
popf
cmp
adc
popa
push
sub
pop
mov
sbb
fmul
mov
repnz
pusha
pop
popf
je
mov
inc
xchg
cmc
mov
or
clc
inc
xchg
imul
push
out
mov
adc
(bad)
push
lea
rcr
push
std
aaa
pop
cmp
mov
bound
mov
int
push
daa
lods
sbb
repnz
fst
jae
stc
inc
sub
xor
mov
push
mov
test
inc
cmp
clc
fistp
xlat
sbb
out
(bad)
jno
std
mov
test
(bad)
clc
sub
test
inc
xchg
mov
popa
adc
fldenv
adc
(bad)
xor
rcl
pusha
inc
(bad)
sbb
dec
or
mov
sub
inc
jecxz
add
inc
sbb
ds
cmc
cmp
mov
test
mov
in
mov
(bad)
js
ja
ss
std
dec
sahf
(bad)
mov
int3
xchg
push
and
fdivp
xor
fdivr
daa
cwde
push
movs
nop
mov
test
jmp
popa
add
or
and
pusha
inc
mov
push
pop
jae
mov
mov
cs
popa
call
data16
dec
xor
fs
sub
sub
stos
cmp
out
adc
(bad)
in
mov
add
mov
cmps
dec
int
sbb
shl
stos
das
into
fs
mov
rol
test
mov
lea
dec
std
shl
mov
cs
icebp
jmp
rcr
imul
mov
dec
pop
(bad)
add
xchg
test
retf
sub
inc
imul
and
(bad)
sbb
lea
adc
sub
xor
fmul
inc
out
inc
cwde
ins
inc
mov
call
ins
(bad)
stos
pop
cmp
aam
cmp
jl
stc
movs
fcom
lea
nop
mov
xchg
in
ret
pop
bound
cmp
dec
cli
ror
imul
pop
daa
arpl
xor
mov
pop
add
or
bound
jge
push
or
aaa
sub
cmp
fld
sbb
adc
push
outs
(bad)
loop
mov
pop
aad
bound
and
and
xchg
aad
fs
ss
shl
sti
mov
inc
lods
ret
xchg
das
push
(bad)
test
ret
(bad)
cdq
aaa
xchg
sub
push
add
mov
jge
mov
push
imul
pop
(bad)
mov
add
aaa
popa
jecxz
call
pop
cmps
sub
das
pop
add
sbb
je
lds
xlat
mov
bound
and
shl
mov
imul
mov
mov
jmp
mov
lds
dec
aam
stos
imul
jne
cmp
xor
or
mov
cmc
push
in
add
out
pop
push
jle
aam
das
pop
sub
push
push
cmps
js
cmps
adc
xchg
mov
cli
stos
xchg
loop
hlt
pusha
fs
sub
lods
cmp
shl
std
cmp
dec
xchg
pop
pusha
xchg
lock
fisubr
mov
xor
ror
pop
cmp
and
xchg
je
clc
add
ret
imul
xor
sbb
xchg
(bad)
and
lods
cdq
sub
jae
out
jecxz
xchg
cmc
pop
repnz
pop
and
xor
mov
xchg
lock
test
ja
mov
mov
out
fldenv
push
iret
xor
xor
repz
jle
push
arpl
jg
addr16
xchg
pop
or
mov
dec
cdq
mov
mov
adc
adc
push
jbe
mov
inc
dec
(bad)
dec
sub
call
sbb
jns
int
xor
push
jnp
sub
xchg
xor
push
push
(bad)
sti
mov
dec
inc
mov
cmc
pushf
xchg
leave
test
inc
in
shr
sub
inc
rol
sub
pop
inc
mov
and
enter
dec
fld
cmp
jnp
iret
xor
add
in
pop
mov
mov
add
add
inc
ror
data16
call
iret
out
pushf
xchg
jg
cli
aad
or
mov
fst
lahf
fwait
mov
adc
jecxz
mov
fld
in
cs
push
leave
cld
ficom
push
jns
cmps
adc
dec
std
jno
jnp
lds
ror
sub
std
sbb
addr16
add
addr16
mov
pop
outs
mov
pushf
cmp
sti
stos
inc
lods
repz
dec
add
mov
lahf
arpl
mov
mov
clc
jns
clc
popf
in
cmp
cld
gs
out
shl
jge
cdq
cwde
jns
push
jmp
jns
lahf
cmovb
xor
push
stos
xchg
push
into
pop
inc
je
in
sub
xor
mov
mov
xchg
jbe
cmps
sbb
std
sub
fnstcw
rcr
fdiv
scas
repz
mov
xchg
test
mov
pop
call
mov
sbb
ins
in
or
xchg
xchg
in
es
sbb
mov
jle
ret
push
cs
cdq
fnstcw
lahf
aad
sbb
adc
cmp
and
pop
inc
xchg
or
(bad)
adc
das
vplzcntq
bound
ja
mov
movs
inc
xchg
mov
mov
movs
lods
(bad)
jmp
cmps
push
inc
mov
repz
mov
cdq
jae
lahf
(bad)
dec
lds
add
addr16
sbb
or
push
call
call
adc
cmp
sbb
lea
scas
adc
inc
pusha
popf
jge
cmps
add
aam
cmp
adc
scas
xchg
retf
sti
(bad)
test
cdq
out
sbb
push
mov
mov
mov
imul
jmp
sbb
xchg
lods
rcr
stos
mov
or
sar
inc
fld
pop
aas
mov
jae
dec
in
pushf
les
loop
arpl
rol
pop
fist
sbb
or
and
pop
adc
sbb
test
cmp
rol
jmp
test
jns
jmp
jl
cld
jge
div
mov
adc
xchg
clc
and
dec
jl
xchg
test
mov
popf
pop
sbb
movs
pop
repnz
(bad)
adc
or
fxch
pop
icebp
inc
pop
adc
inc
and
jmp
and
pop
cli
retf
arpl
fstp
ja
out
xor
pop
ja
cdq
push
lea
dec
sub
push
adc
outs
cld
fisttp
test
cmps
cs
pushf
in
lahf
scas
adc
or
hlt
mul
xchg
inc
mov
mov
popa
call
mov
mov
hlt
cmp
dec
jecxz
(bad)
je
sbb
es
or
and
dec
and
sbb
ret
stc
aas
ret
adc
mov
cmp
pop
jbe
push
inc
(bad)
aam
push
xchg
outs
out
lock
mov
add
cwde
pop
inc
call
jmp
in
xchg
adc
pop
test
fwait
dec
outs
mov
fiadd
pusha
in
fnsave
ret
sub
cli
aad
ja
cmp
arpl
push
inc
pop
out
movs
mov
push
pop
(bad)
(bad)
fstp
or
push
cmc
daa
ja
xor
adc
pop
xchg
das
inc
test
jg
test
pop
out
ins
and
mov
cmps
pop
jecxz
pop
push
jmp
push
xor
pushf
push
xor
idiv
aad
pop
jge
mov
jbe
ss
jge
es
inc
mov
push
pop
or
fldenv
dec
xchg
lock
(bad)
push
inc
lds
sbb
addr16
daa
into
or
sbb
or
rcl
add
dec
arpl
out
mov
aam
arpl
dec
(bad)
call
in
or
cmps
lea
ins
mov
push
cmp
fcomi
mov
pushf
mov
cmp
cmp
jmp
jge
ins
sahf
imul
sub
xchg
xchg
mov
fst
inc
inc
retf
push
or
mov
sti
pop
dec
test
mov
jge
mov
ins
loopne
add
std
add
pusha
js
lods
cs
lods
sti
dec
adc
inc
xchg
mov
repnz
imul
push
jb
mov
(bad)
call
pusha
loopne
out
push
sbb
jb
cmp
xor
xchg
popf
leave
sbb
xchg
ins
pop
inc
adc
outs
xor
push
movs
or
mov
sti
sub
cmp
cdq
inc
xchg
jmp
in
ins
inc
xchg
fld
mov
loop
jge
out
enter
addr16
mov
push
in
lods
and
cli
loope
lods
xchg
lahf
mov
imul
es
mov
and
mov
outs
cs
cdq
pop
add
pop
std
mov
xchg
pop
fs
pop
out
push
cmp
aaa
sahf
pop
(bad)
and
jae
lods
push
inc
mov
jl
test
test
test
mov
pushaw
pop
mov
rcl
adc
in
and
sbb
stos
mov
add
mov
cmc
mov
loopne
dec
stos
aad
loope
int
add
mov
ficomp
sbb
dec
lods
cmp
jae
inc
cmp
cmps
xchg
mov
sbb
data16
nop
sbb
pop
loope
ds
or
inc
dec
mov
add
std
sbb
pop
fs
fcom
rcl
fistp
xchg
mov
int
mov
xchg
mov
pop
movs
call
std
ret
pop
jle
fld
mov
test
sahf
adc
cmp
jnp
dec
mov
pop
stc
jg
xlat
cmp
mov
and
pop
stos
pop
pop
mov
inc
mov
cmp
out
push
retf
mov
push
ret
pop
mov
or
repnz
cmps
ret
jl
call
xchg
aam
arpl
dec
inc
sub
enter
sbb
xor
inc
add
in
lahf
test
dec
loop
sbb
add
adc
sub
sbb
fild
adc
pushf
ins
add
pop
out
xchg
xor
inc
arpl
dec
mov
mov
and
clc
cmps
jne
imul
jns
xchg
sahf
movs
add
std
jmp
fisub
dec
fisub
ss
mov
jl
les
pop
or
cmp
pop
fcom
cmp
rcr
gs
es
add
mov
add
xchg
dec
arpl
sub
stc
mov
lahf
fld
imul
repnz
mov
mov
repz
test
scas
mov
sbb
addr16
fmul
out
(bad)
push
(bad)
jmp
data16
lods
sub
test
mov
ss
popa
clc
retf
and
sub
aaa
cmp
aaa
cwde
or
mov
dec
sub
xchg
scas
movs
pop
adc
test
jns
jp
popa
cmps
jb
ret
cmp
jecxz
in
cdq
pop
add
retf
push
test
mov
jno
mov
cwde
mov
icebp
fisttp
jbe
sub
sub
pop
push
ja
mov
xor
call
outs
call
addr16
mov
add
pop
xor
lods
or
and
addr16
xor
mov
std
cld
cwde
add
jae
mov
cwde
stc
inc
xchg
in
in
ret
in
aaa
(bad)
fcomi
add
test
dec
mov
(bad)
loopne
test
outs
sbb
ror
and
inc
jmp
jle
pop
scas
jno
ins
mov
inc
in
mov
mov
int
or
inc
int
or
ss
pop
(bad)
jl
movs
imul
mov
fs
das
retf
cwde
push
gs
jb
rol
in
mov
adc
adc
sahf
test
outs
lods
mov
jl
into
xlat
call
dec
sti
push
xlat
xor
cmp
sti
fcomp
pop
jbe
pop
sar
pop
pushf
inc
push
dec
scas
fxch
or
in
add
pop
cmc
push
add
adc
daa
mov
push
jne
fcomp
pop
sbb
pop
mov
inc
jbe
push
ret
mov
test
jmp
fild
(bad)
mov
push
out
adc
mov
addr16
lahf
xor
jo
sub
xor
mov
push
in
jnp
pop
lods
xor
sti
cmp
xchg
movs
mov
sbb
inc
sti
out
or
mov
sbb
add
nop
or
or
inc
jle
retf
and
pop
lds
sbb
dec
jp
xchg
ja
fsubr
js
repz
cmp
jne
loope
fnstenv
xchg
inc
pop
mov
fnsave
mov
cmp
mov
and
or
std
xor
pop
(bad)
lahf
lahf
pushf
xor
aam
mov
push
push
pop
adc
xor
cmp
ins
stos
sbb
ins
add
mov
fsubr
inc
ret
dec
add
and
pop
xchg
mov
xor
mov
xrelease
dec
mov
xchg
sub
ins
aam
std
and
mov
push
dec
xchg
inc
es
pusha
sub
xchg
mov
into
inc
stc
xchg
add
fsub
push
(bad)
adc
bound
push
retf
mov
adc
loopne
movs
and
(bad)
cwde
inc
fadd
mov
adc
mov
mov
imul
retf
mov
aas
dec
lahf
mov
cmp
jecxz
retf
add
adc
jle
push
cmp
mov
pop
repz
push
push
inc
adc
and
data16
add
je
sub
and
cmp
div
out
push
je
pop
shl
mov
ret
push
(bad)
mov
cmps
xchg
inc
mov
mov
not
fnstcw
xchg
fimul
iret
dec
sbb
std
fchs
jns
or
sbb
jnp
xor
or
xchg
inc
(bad)
(bad)
or
pop
call
pop
call
sbb
mov
clc
and
xor
test
pop
cmc
je
push
cdq
jl
pushf
sti
jg
mov
push
retf
test
cli
repz
cs
jnp
test
jns
shr
adc
std
xchg
cli
out
sbb
aam
aas
sub
mov
popa
loope
inc
ss
lods
sub
sahf
vmovlps
push
repnz
inc
inc
out
pop
pop
jge
and
jo
push
sbb
cmps
or
das
imul
rcl
push
inc
jle
jge
call
lds
mov
rcl
scas
mov
ficomp
push
pop
int
stos
jmp
push
mov
push
into
ja
push
push
inc
pop
add
ror
dec
inc
xchg
inc
pop
test
rcr
aam
(bad)
aam
sbb
sbb
jbe
call
imul
addr16
push
and
call
inc
xchg
pop
cmps
jo
mov
xchg
inc
ret
adc
aam
and
adc
cmp
mov
icebp
stos
std
and
mov
xlat
push
add
loope
loopne
retf
and
outs
je
sub
call
(bad)
jle
loope
adc
std
inc
push
jnp
pop
nop
bsf
shr
jns
xchg
adc
xor
pop
(bad)
into
in
cwde
fst
pop
daa
mov
in
in
popf
ret
xchg
movs
pop
xor
mov
stos
xchg
outs
mov
mov
pop
(bad)
repnz
mov
jg
xchg
mov
and
cmp
xor
jmp
inc
pushf
or
fwait
inc
and
xchg
cdq
mov
inc
sbb
pop
jmp
push
je
inc
leave
inc
or
imul
jno
ins
pop
mov
adc
jmp
jbe
inc
pop
popa
mov
jl
icebp
out
ret
xor
xlat
cmc
jp
js
mov
sbb
bound
mov
pusha
mov
jnp
imul
icebp
jmp
fidiv
cmp
es
and
xchg
stos
jl
cli
add
pop
std
and
out
push
(bad)
adc
and
mov
cmp
and
(bad)
jg
inc
add
pusha
fstp
mov
bswap
ror
fucom
dec
or
call
lods
cli
dec
pop
lods
mov
ss
std
iret
stos
push
popf
xor
jne
mov
mov
out
(bad)
dec
and
adc
push
jb
mov
add
mov
push
movs
xchg
(bad)
shl
test
nop
jbe
mov
cmps
repnz
inc
int
pusha
or
cmps
lods
jnp
imul
mov
cmp
mov
lods
cmps
xor
cmp
dec
pop
cmp
push
pop
ins
jmp
nop
xchg
pop
push
sti
dec
cwde
and
cmp
cmp
or
adc
aad
inc
mov
xor
dec
je
mov
and
shr
cmp
fnstsw
bound
sub
(bad)
into
mov
cmp
mov
movs
xchg
fmul
inc
mov
mov
ins
mov
jnp
push
enter
stc
call
push
aaa
bound
dec
push
push
cmps
movs
stos
retf
fstp
leave
push
pop
arpl
add
cmp
dec
(bad)
(bad)
push
push
mov
fwait
xor
push
arpl
repz
(bad)
fld
fbstp
jge
dec
enter
lahf
leave
mov
out
addr16
mov
leave
pop
xchg
mov
sbb
push
cmp
in
scas
jmp
je
xor
adc
fisubr
pop
xchg
adc
neg
jnp
mov
repnz
(bad)
sbb
push
sub
add
fld
or
mov
or
sar
sub
into
inc
jmp
cmps
xchg
lock
(bad)
test
test
cwde
sar
cdq
xor
and
out
in
ret
mov
iret
xor
retf
inc
enter
outs
mov
outs
sbb
fst
sbb
iret
inc
jo
aaa
retf
sub
or
lahf
or
cmp
xchg
xchg
out
and
pop
fistp
mov
inc
fwait
repz
enter
(bad)
mov
je
mov
pusha
fs
enter
hlt
fadd
mov
pop
cmp
iret
(bad)
mul
inc
fistp
jnp
shr
iret
icebp
xor
iret
jbe
ja
sar
and
cdq
sub
jne
inc
outs
fdiv
xchg
or
mov
loop
mov
mov
pop
jle
jl
(bad)
repz
mov
test
loopne
mov
(bad)
push
fcomp
xchg
cli
div
stc
dec
jne
ret
xor
pop
test
pop
pop
ret
inc
in
jb
ins
mov
inc
push
fwait
mov
aam
sti
(bad)
xor
aas
fimul
sub
or
push
mov
mov
push
and
pop
enter
stos
loop
retf
inc
pusha
dec
mov
pop
test
movs
pop
out
out
or
hlt
mov
clc
ja
cmps
fidiv
jecxz
mov
in
in
retf
inc
pop
jmp
xor
fs
ss
lock
push
lock
jge
sbb
mov
sub
or
ss
inc
cmp
mov
aaa
clc
cmp
test
mov
mov
jl
nop
mov
(bad)
loop
(bad)
fadd
shl
jns
pop
xrelease
push
xchg
xchg
push
push
test
nop
mov
in
cmp
fisubr
mov
mov
lea
dec
sub
mov
enter
pop
ss
adc
jl
dec
inc
or
ror
(bad)
mov
andnps
jmp
sbb
inc
inc
mov
ror
xchg
mov
jno
cmp
fnstcw
ret
dec
inc
dec
mov
jp
rol
in
in
adc
movs
in
or
mov
mov
(bad)
cmp
jmp
sub
sar
pop
jmp
pop
js
dec
pop
or
frstor
cs
cli
bound
add
sbb
les
lea
adc
lods
std
sbb
inc
sahf
mov
cmpxchg
pop
fst
jno
jb
movs
std
inc
xor
rcl
jmp
leave
sub
popf
and
cli
leave
mov
jecxz
dec
mov
jae
pop
ror
cmp
int
mul
lahf
sub
or
std
push
add
lods
call
enter
hlt
jo
jbe
iret
adc
loop
lods
sub
pop
jae
push
xchg
push
xchg
cdq
cld
adc
test
test
push
push
fst
test
cmp
mov
push
out
fmul
mov
popa
sbb
cmc
aam
dec
sbb
retf
sub
sbb
cs
push
jo
push
push
jns
lds
sbb
cmc
jl
add
jo
jl
push
stos
cmp
inc
or
inc
movs
cmp
adc
pop
div
pop
fldenv
sub
loop
sbb
push
sub
jg
lea
xchg
(bad)
lods
das
adc
fld
nop
cmps
inc
(bad)
sub
push
add
call
aas
js
jnp
sbb
cmp
xchg
mov
or
cmps
dec
in
leave
es
pop
push
or
ja
mov
stos
pop
std
ins
jb
dec
and
sub
scas
sar
xor
push
inc
in
mov
cmc
bound
jl
ret
cld
inc
mov
cwde
add
rcr
mov
test
push
nop
ret
sbb
fisttp
xchg
mov
or
neg
in
sub
sub
mov
cmps
pop
xchg
aam
or
dec
pop
and
and
jne
cwde
jg
mov
inc
jmp
adc
loope
xchg
enter
push
jns
outs
jecxz
out
mov
loope
ret
cmps
jne
out
mov
lea
pop
pushf
test
adc
stc
test
mov
(bad)
retf
jno
xor
shr
iret
jge
xor
jne
arpl
fnstsw
popa
fcomp
add
stc
xor
cmp
arpl
dec
sbb
lods
sub
and
scas
rcr
pop
add
lahf
imul
std
call
movs
stos
sbb
sbb
pushf
dec
bound
test
dec
mov
dec
cli
fisttp
push
faddp
(bad)
add
jp
cmp
mov
popf
mov
or
pop
fstp
cmp
sbb
add
(bad)
mov
push
mov
cs
cmps
test
push
sbb
dec
out
rcr
fisttp
xlat
fild
mov
out
or
mov
and
inc
mul
dec
and
(bad)
inc
out
jb
jo
cmp
and
nop
fstp
sbb
jecxz
mov
push
jo
pop
into
and
cmp
mov
add
or
call
sub
cbw
pop
(bad)
pop
arpl
mov
or
clc
adc
jnp
xchg
(bad)
aad
or
mov
div
test
aad
sub
cld
retf
retf
and
cwde
cs
jns
push
sbb
xor
not
iret
xor
adc
push
jmp
fwait
daa
(bad)
dec
pop
movs
push
and
lods
push
xor
imul
fcomp
addr16
inc
lea
ficomp
out
out
pop
sub
sbb
stos
test
sbb
xchg
lea
inc
sar
xchg
aam
outs
lahf
cmps
inc
xchg
jo
or
adc
mov
arpl
es
jge
mov
ins
daa
je
xchg
test
dec
pop
into
add
lock
retf
xor
push
xor
inc
popf
pop
xor
test
and
xor
fisttp
jecxz
pop
and
js
xchg
sar
les
sub
jl
(bad)
and
xor
push
scas
xchg
dec
rcl
pop
dec
out
hlt
out
pop
out
inc
add
jl
sub
fld
jbe
fadd
(bad)
dec
pop
dec
and
xor
xchg
and
mov
aam
jle
aam
sub
pop
push
fsub
sti
das
xchg
std
dec
in
push
sub
test
ret
loope
inc
sub
shl
std
mov
jp
stos
mov
pop
fadd
mov
in
sub
leave
jmp
sbb
mov
jo
or
sbb
sbb
call
mov
aaa
mov
xchg
or
inc
sbb
pop
mov
sahf
or
inc
int
mov
cmc
add
or
sar
jmp
and
push
mov
cmp
cdq
cmc
cmp
jecxz
pushw
fld
xor
sbb
and
call
mov
popa
stos
xor
out
mov
ficom
mov
and
jo
cmc
pop
mov
enter
push
push
and
cmp
adc
leave
inc
(bad)
dec
lds
add
xchg
mov
inc
xchg
stos
add
(bad)
fimul
test
sbb
xchg
sub
fist
out
mov
adc
inc
(bad)
iret
inc
rcr
jg
xchg
arpl
fisttp
ret
mov
sbb
and
push
lahf
imul
xor
xor
call
add
inc
jg
cmp
shr
shr
mov
fld
lods
mov
arpl
retf
xchg
mov
xchg
and
ror
mov
into
and
add
mov
gs
outs
sbb
ret
ss
pop
call
jae
pop
add
and
add
mov
pop
jmp
loope
fwait
sbb
hlt
inc
test
outs
lahf
pop
(bad)
mov
mov
and
in
push
fisubr
mov
push
sbb
(bad)
fstp
mov
ins
hlt
jg
push
or
(bad)
push
fdivr
jg
pop
fidiv
and
jno
pop
out
ret
or
clc
pop
in
idiv
jnp
jecxz
cmp
jl
and
aas
sti
jge
xchg
mov
ja
lods
mov
imul
jge
push
dec
dec
mov
mov
inc
mov
movs
jne
mov
hlt
in
or
jmp
movs
test
mov
xchg
dec
mov
test
out
js
inc
jnp
push
outs
popa
jo
jnp
push
icebp
mov
lods
push
fldz
and
es
xor
cmp
sbb
pusha
in
xchg
fwait
imul
dec
out
out
out
retf
xchg
es
jb
mov
pushf
push
jmp
cmps
mov
mov
add
mov
cmp
call
xor
mov
cmp
jmp
push
push
cmp
das
je
stc
inc
es
xchg
xchg
imul
jns
jmp
or
jecxz
push
inc
sbb
mov
retf
and
fs
vpshab
(bad)
cmps
mov
xor
fnstsw
fs
jle
ret
adc
xchg
inc
or
loopne
add
pop
test
push
inc
mov
nop
sbb
xor
dec
out
add
in
(bad)
inc
js
test
imul
test
jmp
push
dec
arpl
sbb
popa
add
mov
popa
jbe
push
sub
lods
arpl
push
pop
jmp
aad
jp
mov
neg
mov
pop
mov
cmc
jo
dec
cdq
mov
outs
js
xchg
mov
mov
cdq
jno
pushf
xchg
push
int
rcl
or
out
test
cmp
imul
imul
out
mov
fs
ror
mov
daa
fist
xor
pop
sahf
sub
push
pop
lahf
imul
mov
and
(bad)
add
add
inc
popa
push
mov
jb
hlt
movs
jae
mov
and
ficomp
mov
movs
bound
pop
jmp
xchg
hlt
in
inc
mov
stos
sub
push
out
out
jmp
cli
adc
imul
sub
mov
icebp
push
in
in
pop
lahf
shl
push
sub
cmp
imul
psrlq
cmps
pop
xor
cmp
mov
inc
cmp
xlat
jmp
xor
(bad)
pop
push
fstp
iret
enter
out
cmc
mov
daa
in
test
into
xchg
std
xchg
cmp
add
mul
sahf
mov
or
test
pop
and
scas
es
jg
inc
cmp
pushf
xor
xchg
jecxz
imul
sub
mov
into
sub
dec
jnp
dec
or
sti
sub
jg
stc
mov
nop
adc
mov
popf
shl
loope
addr16
stos
pop
or
out
dec
xchg
cmp
nop
and
adc
push
lds
push
sbb
leave
cld
pop
enter
inc
rcl
jle
test
sbb
test
scas
sbb
lods
add
out
addr16
pop
mov
xor
or
jge
fisttp
lahf
xor
imul
in
popf
cld
pop
jecxz
ins
jns
sub
cdq
fiadd
(bad)
fwait
pusha
ficomp
repz
outs
xchg
jmp
push
call
call
push
mov
sub
sti
and
and
sub
sbb
lahf
xor
mov
sub
sbb
into
jo
ficom
popa
or
push
push
adc
mov
xchg
jne
ins
jno
dec
and
xor
mov
cmp
clc
mov
mov
push
push
mov
popa
xchg
call
pop
xor
gs
mov
pop
inc
test
scas
push
xlat
lock
test
aam
sbb
pop
in
push
js
xchg
popa
jne
imul
add
fadd
mov
rol
adc
in
dec
imul
das
inc
dec
ret
mov
pushf
cmp
pop
cld
out
cmps
xor
push
add
loope
cwde
loopne
pop
lds
icebp
or
sbb
pop
jne
fisubr
cmc
scas
fcomp
mov
push
jmp
into
out
pop
pushf
sbb
addr16
ja
add
add
dec
loop
das
(bad)
call
or
add
pop
mov
fistp
mov
mov
fcomip
xchg
and
iret
fs
push
inc
fldcw
xchg
bound
mov
dec
call
adc
xchg
(bad)
fidivr
mov
xchg
sbb
in
in
icebp
test
movs
pop
clc
js
push
pop
xor
cli
inc
jl
lods
cmp
sbb
retf
xor
sbb
out
sub
rol
pop
in
and
unpckhps
push
push
or
mov
or
and
out
jo
pop
push
jg
push
stc
mov
mov
sbb
sbb
cwde
pop
jge
sahf
out
push
adc
pusha
jne
lahf
jbe
dec
iret
ss
(bad)
sar
xchg
sub
or
add
or
stc
fistp
mov
adc
popf
cmp
mov
inc
in
shl
sub
push
rcl
out
cmps
mov
push
iret
xchg
jb
(bad)
(bad)
adc
mov
daa
fcom
inc
cmps
test
mov
mov
neg
or
fs
push
sbb
pop
rol
addr16
mov
pop
pop
out
xchg
mov
or
stc
inc
cdq
fdivr
pop
adc
cli
xor
push
adc
jae
pop
push
xor
test
gs
lods
mov
mov
jle
pop
jg
mov
(bad)
retf
ins
xchg
std
movs
inc
jmp
and
pop
xchg
mov
bound
xchg
movs
bound
(bad)
lods
into
jmp
dec
scas
fsubr
pop
out
sub
ret
stc
jmp
jns
xchg
push
daa
stos
jbe
jle
mov
mov
cdq
retf
lea
add
out
push
ds
xor
mov
mov
fidivr
and
test
and
add
mul
inc
mov
inc
add
imul
fsub
push
mov
dec
lock
fnstenv
popf
mov
add
(bad)
mov
in
pop
mov
into
cmp
cs
stc
cmc
and
fld
push
test
xchg
cmps
mov
fdivrp
jno
iret
dec
outs
addr16
imul
lahf
aas
idiv
movs
(bad)
mov
cli
ds
cmp
shl
fdivr
xchg
dec
(bad)
xchg
test
mov
dec
out
jbe
call
jnp
lods
mov
push
in
mov
add
enter
mov
cmp
inc
fcomp
fst
inc
cmp
mov
inc
cmp
mov
icebp
pusha
stc
(bad)
cmps
int3
inc
jbe
xor
xor
out
sub
ja
ja
movs
sub
ds
fst
in
jb
lods
push
rcr
adc
mov
repnz
dec
xchg
fcomip
xor
pop
jo
movs
xchg
add
call
cmps
dec
retf
jl
xor
pop
fadd
inc
daa
ins
mov
je
popa
in
ret
adc
jge
in
push
xchg
sar
push
and
sub
push
sub
and
mov
lods
fwait
cld
jno
add
cmc
call
pop
ins
xchg
fcom
pop
cmp
inc
repz
or
fdiv
pushf
jmp
mov
adc
arpl
call
cmp
push
or
jae
imul
lahf
adc
jmp
mov
addr16
inc
int
pop
jp
cmp
sub
push
xchg
and
imul
ds
lods
adc
add
inc
add
outs
aad
clc
js
neg
push
fbld
lods
mov
jo
(bad)
repnz
stc
popa
jle
fiadd
je
or
xor
aad
fcom
add
pop
and
lods
cmp
sti
jle
loop
enter
jno
jmp
adc
xchg
inc
scas
sbb
add
je
lods
xor
cmp
gs
cmps
cmp
je
fcomp
nop
loop
mov
call
in
outs
lock
push
mov
and
(bad)
gs
stos
cmps
popa
lds
dec
pop
sub
fdivr
inc
retf
xor
jno
xor
xor
jne
cwde
xchg
leave
ds
je
repnz
add
xor
js
daa
loop
cwde
jb
pusha
inc
lods
jp
shl
dec
mov
mov
enter
mov
or
push
jo
sub
lahf
repnz
mov
pusha
adc
jecxz
sbb
xchg
jns
cmps
mov
mov
jmp
aaa
or
out
shr
jne
dec
scas
aas
inc
jle
dec
pop
jbe
(bad)
movs
stos
adc
popa
in
shr
sbb
and
pop
xor
sub
pop
push
mov
or
mov
test
ja
pop
inc
and
push
xchg
adc
clc
add
(bad)
(bad)
mov
inc
inc
in
or
(bad)
(bad)
xacquire
loop
dec
lds
cmp
jmp
mov
fs
fisubr
mov
dec
mov
lea
test
sbb
inc
sbb
daa
ds
daa
or
dec
arpl
ja
xchg
push
add
hlt
test
xchg
rol
inc
add
arpl
cmps
(bad)
jno
mov
jo
mov
xchg
xor
jle
sbb
dec
mov
mov
fucomi
xchg
xchg
cs
push
xor
repz
popf
add
mov
imul
sub
sbb
arpl
sub
popa
pushf
and
stos
push
and
stc
imul
mov
leave
pop
inc
pop
mov
popa
sti
in
adc
test
xchg
cmp
adc
dec
cdq
jnp
mov
cmc
inc
cdq
mov
push
pop
xlat
fxch
push
clc
xor
jl
sub
mov
sbb
stos
int
es
add
inc
fld
push
das
enter
js
inc
inc
mov
mul
xor
dec
imul
pop
icebp
inc
inc
jp
push
cmc
xchg
test
std
loopne
int
jnp
leave
cld
mov
xchg
xchg
into
inc
ret
mov
loope
test
stc
dec
ins
icebp
fist
pop
(bad)
xor
shr
jo
adc
imul
mov
sub
mov
sub
push
or
add
inc
pop
fld
and
mov
or
shl
loop
push
dec
mov
jg
aad
ins
(bad)
cwde
ja
stc
(bad)
sub
test
pop
lods
sbb
test
fisttp
aad
nop
je
or
loope
mov
sbb
popa
xchg
pusha
mov
pop
iret
imul
pop
push
push
inc
in
xor
pop
in
sub
mov
jp
xchg
mov
xor
outs
retf
aam
adc
jnp
mov
cmp
aam
dec
(bad)
fwait
pop
push
(bad)
mov
(bad)
outs
scas
cwde
movs
not
inc
push
loopne
mov
inc
cli
std
mov
stc
pop
dec
mov
jmp
push
sbb
out
rcr
xor
cmp
or
and
lea
arpl
cmc
jg
jmp
fistp
xor
jl
sbb
mov
gs
retf
cmp
fs
and
inc
ja
push
fdiv
js
mov
dec
popf
cwde
fs
jmp
pop
mov
movs
repnz
sbb
add
mov
dec
push
das
retf
in
inc
icebp
adc
test
bound
dec
mov
pop
cld
ins
cld
mov
int
adc
fist
or
cs
pop
push
sbb
sbb
adc
inc
lahf
lea
dec
dec
inc
fimul
iret
ret
jle
ret
(bad)
cmps
jl
(bad)
loope
mov
(bad)
sbb
xchg
xchg
sbb
loop
nop
rol
ins
pop
xchg
test
and
into
cmp
and
or
mov
imul
(bad)
or
add
adc
dec
adc
xor
(bad)
movs
mov
(bad)
cli
cmps
add
pop
scas
dec
test
mov
icebp
xchg
pop
add
xlat
movs
xor
jl
inc
lea
shl
mov
xchg
push
int
pop
sbb
fidiv
push
cmp
(bad)
jno
fs
inc
pop
push
scas
rcl
cmp
scas
inc
loopne
and
pop
loopne
cs
sub
xchg
pop
enter
data16
mov
pop
xchg
xchg
leave
mov
in
gs
jge
lods
push
sbb
loop
mov
adc
lock
xor
inc
mov
mov
sub
les
js
fstp
ss
sbb
retf
mov
inc
sar
push
sbb
adc
lea
jl
xchg
scas
int3
pop
and
inc
out
lock
jnp
fadd
inc
jbe
icebp
pop
shl
adc
and
sahf
das
and
dec
in
stc
call
mov
push
cmp
jb
iret
and
add
sti
stos
idiv
inc
cmc
cld
mov
jp
xchg
mov
daa
neg
mov
frstor
jmp
sub
in
pop
ja
scas
sub
mov
fwait
lds
sahf
retf
cmp
cmp
sahf
and
push
mov
pop
xchg
mov
dec
in
clc
loope
mov
push
lds
loopne
mov
mov
pop
rol
mov
(bad)
fmulp
or
sahf
pusha
cs
fisub
(bad)
(bad)
imul
fst
mov
and
push
pusha
cmp
xor
ins
cwde
stos
xchg
mov
ss
imul
sbb
push
xor
sbb
inc
push
fcomp
sub
xchg
push
push
jl
shl
inc
xchg
out
pusha
test
arpl
mov
or
je
std
enter
push
and
je
loop
adc
fadd
sub
and
dec
ret
aas
dec
mov
push
pushf
je
outs
cdq
movs
mov
inc
inc
int
in
lock
pop
inc
leave
sbb
inc
sub
sbb
fwait
jbe
lods
or
sub
xor
pushf
sbb
fistp
add
mov
jle
loop
jb
mov
sub
hlt
inc
mov
scas
(bad)
sbb
test
pushf
lock
fistp
mov
cmp
dec
call
out
fnstsw
or
pusha
inc
mov
jbe
dec
xchg
mov
inc
or
pop
aaa
not
xchg
sub
sbb
fwait
mov
out
inc
mov
dec
je
mov
icebp
mov
mov
sub
iret
imul
test
(bad)
hlt
(bad)
arpl
mov
xor
jns
cmp
sbb
mov
mov
sbb
pusha
push
and
cmp
xor
xchg
pop
lods
je
dec
push
lods
pop
inc
xor
fwait
mov
adc
(bad)
stos
sbb
fadd
pop
arpl
jl
mov
jl
enter
fwait
pop
pop
jmp
movs
cmp
imul
xchg
cmp
sbb
xor
add
std
scas
lock
in
cmp
sub
das
pop
pop
aad
call
and
sbb
movs
je
or
push
leave
jge
fsubr
clc
addr16
dec
aaa
mov
ss
inc
adc
push
mov
pop
in
retf
or
mov
jnp
enter
fwait
addr16
jecxz
and
in
or
fwait
movs
and
repnz
aam
push
jmp
push
add
iret
cmp
and
adc
es
jmp
addr16
cmpltps
jg
cmp
sbb
jmp
jge
shr
test
scas
xor
xor
sbb
jg
mov
jae
mov
pop
sub
stos
mov
mov
add
cmps
mov
mov
mov
call
jo
dec
cmps
aaa
add
fiadd
or
push
push
mov
mov
(bad)
inc
ror
inc
pop
sub
cmp
pop
je
mov
mov
stos
ja
xlat
adc
or
(bad)
xchg
xor
jne
stos
jl
nop
cmp
into
test
out
xchg
push
pop
(bad)
idiv
adc
mov
mov
mov
rcr
cwde
push
out
in
sub
fsubrp
mov
and
sbb
das
mov
add
mov
pop
lahf
imul
mov
pop
inc
inc
daa
jmp
push
xchg
sbb
js
imul
test
call
loope
pusha
push
mov
dec
out
mov
loop
sbb
sti
repz
mov
fisubr
mov
and
call
dec
enter
int
pusha
sbb
xor
xchg
sub
push
lods
or
or
out
inc
out
fisttp
mov
push
and
xchg
sub
(bad)
or
(bad)
xor
xor
push
inc
in
lods
mov
mov
sbb
pop
inc
and
bound
loope
ss
lock
add
leave
or
lea
cmp
cmp
mov
push
cs
clc
inc
inc
or
sbb
sub
mov
enter
xor
add
xor
push
sub
xchg
or
popf
outs
adc
mov
in
rol
popaw
inc
mov
xor
cmps
jl
sti
(bad)
cmps
sbb
popa
test
pop
jle
mov
clc
cmps
sar
sbb
pop
fisubr
pop
dec
ror
or
cmp
push
stc
dec
cmp
mov
scas
aam
sub
pop
enter
std
dec
adc
and
xor
jl
xchg
mov
inc
in
mov
cwde
cli
xchg
pop
xchg
leave
inc
rol
and
adc
mov
sub
lea
imul
dec
popf
movs
nop
xor
cli
fisubr
lahf
push
push
in
cmp
sbb
rcl
pop
fwait
inc
jbe
cmp
pop
sub
stos
dec
cmp
fwait
rol
pop
adc
aas
stos
sbb
call
cmps
test
add
dec
div
fwait
adc
pop
ins
mov
addr16
xlat
nop
inc
cs
(bad)
out
or
lock
fsubr
xchg
test
cmc
mov
aam
pop
xchg
scas
xor
jbe
sbb
daa
into
jmp
dec
sbb
sbb
cmp
xchg
fst
(bad)
clc
jle
aad
inc
inc
cmp
dec
pop
jp
xor
cmp
xchg
or
sub
cwde
adc
cmp
fld
cmp
mov
mov
xchg
adc
xchg
push
in
mov
test
sbb
xchg
mov
ss
ret
xchg
lods
fisub
icebp
mov
cmp
dec
out
rcl
addr16
and
jnp
test
pop
jp
dec
cmp
mov
inc
into
enter
inc
ja
push
mov
adc
push
test
lea
and
shr
sbb
retf
outs
popa
jnp
pusha
(bad)
into
cmp
cwde
jmp
loopne
xor
js
dec
jnp
call
in
ret
mov
out
add
jl
inc
pop
pop
pusha
sub
outs
mov
push
mov
mov
cmp
iret
inc
ret
mov
call
ds
cmp
adc
jg
xchg
popf
aas
fs
mov
out
popf
sbb
push
pusha
(bad)
mov
sbb
dec
cmp
fst
test
inc
in
stos
sbb
xlat
(bad)
lock
pop
imul
or
adc
inc
jmp
adc
push
mov
sub
inc
fst
push
pop
in
sub
mov
mov
jns
mov
outs
xor
pop
sahf
leave
fwait
add
dec
mov
xchg
out
xchg
mov
rcr
lahf
xor
scas
cmp
xchg
pop
and
outs
in
mov
adc
sub
(bad)
int
repz
add
sub
inc
call
mov
shl
ror
push
push
in
and
test
mov
mov
ja
xchg
stos
sbb
jmp
outs
jb
mov
(bad)
sti
fild
and
fst
mov
jg
loop
popf
xor
sar
scas
loope
outs
jmp
aam
sbb
int3
imul
push
and
push
push
push
test
mul
repz
adc
cmp
jmp
mov
fisttp
mov
xor
stc
sub
push
dec
loop
xchg
and
pop
jge
dec
jmp
jecxz
lahf
mov
push
(bad)
mov
mov
shr
repnz
xchg
push
icebp
loop
shl
dec
fs
jbe
pop
cmps
sbb
cmp
mov
fist
or
fimul
aaa
jno
rcl
(bad)
dec
add
add
test
icebp
imul
dec
xchg
mov
ins
fadd
loope
ins
inc
fild
sti
iret
sub
mov
in
loopne
dec
fsub
mov
mov
sbb
call
jmp
fnstsw
cmc
jp
dec
ss
sar
enter
pop
pop
jnp
daa
inc
jno
aaa
sbb
add
stos
pop
call
push
inc
fild
jnp
aas
jmp
nop
dec
dec
mov
add
pop
loope
inc
retf
jg
sbb
inc
adc
or
loop
sub
call
stos
stos
mov
push
sti
mov
outs
das
sbb
aam
inc
jl
xor
int3
cs
adc
enter
and
xor
mov
movs
retf
mov
repnz
pop
xor
jno
in
add
cmp
imul
imul
sahf
sub
repz
out
push
fisttp
xchg
jno
loopne
sbb
int
mov
ror
mov
fs
neg
xor
cld
mov
(bad)
mov
or
jge
aas
add
pop
mov
ins
add
mov
inc
jmp
mov
add
and
dec
push
lods
inc
sbb
imul
pop
pop
clc
stc
jmp
mov
sti
mov
loope
int3
popf
sbb
mov
cmps
add
jg
lea
inc
xchg
xchg
lods
retf
popf
pop
inc
in
mov
ja
sbb
(bad)
sub
or
or
mov
sub
mov
inc
xchg
jmp
push
jae
fcomp
xor
pop
scas
add
sbb
dec
inc
mov
jne
mov
jg
repz
sti
bound
mov
(bad)
jmp
fwait
push
adc
pop
hlt
scas
mov
push
test
mov
(bad)
test
ret
outs
addr16
pusha
cmc
ins
fstp
or
shl
cmp
pop
mov
push
pop
pusha
mov
call
mov
sbb
sysexit
icebp
sbb
add
jae
fdiv
dec
lea
pop
cdq
(bad)
test
shr
lods
dec
xlat
lahf
sti
jnp
div
or
(bad)
mov
hlt
cmp
mov
pop
into
stc
clc
mov
popf
dec
out
jle
or
pop
sar
jnp
xor
ds
cs
push
adc
mov
rcl
mov
xor
sbb
push
je
xchg
or
sbb
popa
inc
mov
sbb
jmp
sub
and
pop
bound
dec
xchg
inc
pop
stc
(bad)
mov
fistp
call
inc
movs
shl
stos
sar
lods
inc
fisubr
test
(bad)
jmp
fiadd
sbb
test
push
mov
mov
in
jge
icebp
pop
mov
inc
fs
frstor
pop
and
xor
dec
cmp
cli
sbb
cmp
test
sbb
push
push
test
xchg
lds
mov
jmp
push
iret
jmp
pushf
mov
push
stos
ja
jecxz
out
adc
fdivp
mov
fcom
cwde
mov
leave
adc
push
cli
fucomi
dec
nop
inc
or
fwait
adc
loopne
pop
add
pop
out
rcl
movsx
jo
add
clc
inc
adc
adc
pop
dec
cwde
jns
or
mov
ins
(bad)
cmovo
cld
mov
fdiv
arpl
xchg
jmp
push
pushf
mov
lea
nop
dec
test
fwait
xchg
mov
repz
push
loope
stos
or
gs
cmp
cmp
pop
or
or
repz
xor
sbb
addr16
mov
push
xchg
test
(bad)
jmp
loop
leave
xchg
pusha
rcr
inc
pop
mov
(bad)
enter
test
fucom
inc
or
mov
rcl
sub
imul
popf
lods
sub
shl
sbb
clc
dec
push
sbb
jmp
pop
mov
push
fwait
mov
pop
repnz
test
sub
push
add
sbb
jo
es
sub
and
push
stos
sbb
repnz
inc
mov
inc
inc
sub
xchg
mov
push
mov
pop
push
rcl
repz
out
cmps
test
ins
inc
call
call
jnp
jno
sub
ds
sbb
pop
popa
xchg
arpl
push
mov
in
push
loop
add
push
add
cmp
push
push
xchg
push
sbb
dec
push
movs
lods
mov
and
inc
(bad)
in
push
xchg
xlat
jo
dec
dec
and
in
xchg
cld
xchg
jno
mov
mov
mov
jmp
imul
mov
mov
(bad)
jl
out
xchg
je
sub
sbb
daa
rcr
inc
out
dec
cmp
dec
and
dec
cmp
cmp
mov
inc
and
inc
imul
lods
ss
repz
push
sahf
push
push
mov
inc
mov
mov
retf
xor
stc
pop
cli
inc
inc
je
push
mov
pop
loope
mov
add
fsubr
mov
push
(bad)
mov
cld
cwde
mov
and
lea
pop
shr
inc
and
xchg
and
adc
mov
pop
cmps
fld
(bad)
iret
neg
test
inc
fs
jecxz
sub
sbb
adc
jp
adc
mov
sub
pop
cmp
stc
arpl
sbb
fs
sub
movs
mov
bound
loop
jbe
jle
loope
icebp
xor
jns
loop
mov
dec
jmp
cmps
lods
icebp
dec
arpl
in
cmp
pop
fistp
jle
ror
sbb
jnp
dec
cmps
stos
mov
je
shl
mov
dec
loope
push
add
sbb
dec
push
lahf
jbe
xchg
cs
mov
cwde
retf
sbb
inc
pop
js
mov
gs
cmp
cli
mov
retf
test
push
xor
ret
icebp
pop
data16
scas
xor
pop
inc
repnz
and
inc
pop
sbb
xor
mov
xor
lods
xor
xlat
sub
repz
push
cs
and
pop
retf
sub
adc
xchg
add
movs
sub
sar
sbb
or
jl
retf
(bad)
in
mov
xchg
loop
cmps
jl
mov
test
lea
xor
sub
test
imul
mov
jb
pop
mov
sub
mov
jl
add
cmp
jae
mov
cmp
outs
push
xchg
mov
sbb
sbb
pop
int
test
test
fdiv
dec
test
lahf
dec
in
add
inc
xchg
clc
pop
idiv
mov
popa
mov
cmc
div
stos
outs
cmc
pop
(bad)
daa
sub
repz
fistp
xor
pusha
popf
adc
mov
pop
jns
xchg
xchg
mov
sub
sbb
fsub
(bad)
jnp
arpl
loopne
adc
rcl
pop
jne
dec
and
xchg
mov
jmp
(bad)
dec
add
and
(bad)
sahf
shl
xor
(bad)
mov
(bad)
sbb
xchg
scas
xlat
inc
xchg
inc
je
mov
scas
ret
xchg
cmps
sub
sub
sbb
test
inc
fiadd
jbe
fmul
popa
inc
in
cmp
stos
mov
xor
lods
inc
loope
or
add
cmp
add
sahf
push
int3
push
shl
mov
cmp
data16
out
add
pop
ins
shl
fiadd
call
add
(bad)
xchg
sub
mov
mov
(bad)
arpl
(bad)
cdq
retf
(bad)
outs
inc
xchg
mov
lock
fsub
add
adc
sub
mov
mov
adc
out
inc
inc
push
or
add
jge
cmp
add
add
or
and
xchg
xor
pop
std
in
sbb
mov
ficom
mov
mov
mov
(bad)
mov
jmp
sbb
jmp
stos
dec
xchg
cs
and
leave
daa
call
outs
and
sub
sahf
mov
dec
pop
frstor
jmp
mov
inc
imul
pop
add
mov
les
xchg
adc
inc
mul
push
aad
inc
jl
push
add
arpl
cwde
push
adc
(bad)
leave
or
bound
leave
les
call
out
sub
(bad)
not
data16
or
imul
imul
sbb
movs
int
inc
inc
add
xor
(bad)
mov
xchg
and
jp
mov
and
stos
lods
adc
outs
fincstp
cmps
sbb
fild
ins
inc
mov
dec
xchg
out
addr16
stos
inc
or
cli
dec
mov
push
dec
xchg
les
popf
mov
adc
dec
iret
test
popa
out
and
bound
pop
pop
ins
xchg
fstp
pop
popf
into
add
pop
retf
push
mov
lods
js
mov
xor
mov
in
jecxz
lods
add
push
push
jb
push
test
jmp
sub
(bad)
lods
add
sbb
jnp
mov
xchg
cs
lock
call
in
xor
fucomp
cmc
pop
cli
and
sub
sti
jbe
dec
mov
or
add
jmp
stc
sub
add
(bad)
push
movs
xor
mov
fwait
imul
cmp
(bad)
inc
pusha
dec
xchg
push
mov
inc
jmp
pop
jmp
loope
jae
pop
nop
scas
(bad)
pop
fadd
mov
ffree
rep
cli
jle
out
adc
add
fstp
sub
pop
and
mov
fdivr
jnp
mov
dec
jp
cmps
xor
je
add
fcomp
xor
mov
or
jmp
jp
and
hlt
jb
mov
(bad)
out
dec
adc
fcom
lahf
cwde
fcomp
mov
(bad)
xchg
mov
test
sub
xor
pushf
adc
popa
mov
xor
push
mov
rcl
(bad)
repnz
loope
dec
jb
fild
pop
cs
pop
inc
lea
pushf
ss
mov
mov
(bad)
test
imul
push
(bad)
xchg
fisubr
rcl
push
icebp
retf
xchg
jbe
jp
mov
jns
mov
(bad)
cld
stos
(bad)
ds
mov
sub
sub
stc
fisub
add
outs
scas
or
jb
dec
and
ror
stc
clc
add
adc
pop
push
inc
ss
jmp
fisttp
sbb
xchg
mov
xor
push
ins
ret
and
push
pop
lds
cli
push
scas
xchg
(bad)
in
in
xor
frndint
je
imul
sbb
ss
shl
mov
hlt
and
or
leave
adc
ds
fisub
xor
push
mov
pop
ins
lods
lds
fcmove
adc
add
adc
mov
fwait
sub
arpl
outs
xor
mov
in
mov
lods
enter
jo
cmps
inc
mov
xor
pusha
pop
hlt
(bad)
icebp
or
dec
test
rcr
xor
cmp
cli
push
ret
and
mov
ins
and
xchg
imul
les
mov
pushf
push
cli
dec
jns
jo
mov
call
sbb
mov
and
pop
jge
push
popf
lods
xchg
into
jmp
aaa
aad
xchg
es
stc
cwde
out
sub
nop
cs
loope
push
(bad)
dec
iret
dec
cmp
neg
cld
je
sbb
pop
fistp
je
cli
cmp
adc
aas
jmp
add
aas
stc
sbb
adc
scas
pop
int3
ds
dec
sar
cmps
add
cmps
mov
(bad)
clc
stos
sbb
add
fidivr
test
push
icebp
loop
xchg
stos
push
sub
pusha
cdq
mov
popa
push
mov
mov
inc
cld
xchg
xchg
pushf
push
lock
adc
icebp
sub
push
inc
cmp
sub
xor
mov
ds
mov
test
sbb
add
push
sub
popf
sbb
dec
cmps
dec
inc
xchg
mov
sub
adc
ret
inc
lods
into
push
pop
pop
gs
fucom
push
out
popf
jg
shl
lods
mov
popa
jge
nop
cmps
cmp
(bad)
ins
pop
xchg
mov
fisttp
loop
clc
and
pop
aas
xchg
cmp
pusha
push
pusha
call
pop
cdq
jmp
xchg
pop
arpl
push
sub
adc
cmp
push
mov
sbb
add
icebp
loop
retf
aad
fidivr
jb
push
aam
fdivr
jmp
xchg
add
out
shl
idiv
mov
ins
push
scas
mov
test
mov
inc
mov
adc
(bad)
inc
call
(bad)
jp
or
xchg
lahf
xchg
mov
and
inc
cdq
xlat
jp
(bad)
push
jbe
cmp
pop
push
or
xchg
add
fcomp
xchg
dec
push
cdq
cwde
mov
add
in
mov
cmc
push
gs
call
jecxz
adc
mov
lahf
xor
and
test
mov
adc
rcl
xchg
in
ins
mov
jnp
jbe
xor
jecxz
popf
aas
inc
cmp
xor
test
dec
mov
stos
pop
in
sub
fisubr
push
xor
cmp
pop
add
mov
int3
xor
and
clc
sub
push
cmp
sar
lds
push
mov
xchg
lahf
dec
call
loop
and
imul
(bad)
mov
cmp
jns
xchg
mov
in
dec
(bad)
sbb
(bad)
imul
push
in
pop
push
xor
jl
push
inc
call
cmp
inc
fcomip
das
mov
pop
push
push
and
pop
fwait
pop
scas
or
sbb
mov
jl
movs
xchg
sbb
(bad)
stos
pop
mov
popa
inc
shl
test
popf
mul
fadd
mov
mov
mov
dec
in
lods
cs
cmp
shr
pusha
inc
mov
pusha
xchg
inc
jmp
rcl
push
push
inc
mov
xor
mov
pop
in
out
and
add
cmp
jbe
add
sub
mov
movs
das
pop
test
or
std
test
adc
retf
push
loop
jp
mov
mov
stc
imul
repz
movs
cli
add
js
xor
icebp
in
popf
pop
mov
push
cmps
dec
pop
or
int3
sbb
xor
pop
jne
popf
mov
cdq
cli
cmp
aas
loop
or
aaa
mov
bound
add
mov
cwde
aad
ds
push
pushf
dec
bound
sub
test
push
xchg
test
cmc
mov
lods
mov
inc
pop
xchg
mov
inc
mov
mov
repz
jbe
dec
out
or
xlat
clc
loop
jmp
pop
pop
dec
fldcw
outs
mov
xchg
mov
cmp
pop
loope
or
jecxz
push
jae
mov
sbb
cmp
jb
jp
mov
inc
sahf
test
xchg
jmp
adc
push
pusha
call
in
jecxz
loopne
jae
hlt
div
mov
outs
lods
mov
adc
mov
mov
icebp
xor
xchg
inc
xchg
fs
fild
pop
fs
push
js
push
and
stos
dec
add
push
loope
sub
cld
pop
adc
sbb
jnp
test
sbb
retf
pop
xor
(bad)
inc
(bad)
mov
inc
pop
pop
mov
shl
arpl
movs
pop
sub
clc
mov
mov
into
xor
cld
add
int3
fldenv
cmps
dec
nop
sub
push
or
fimul
js
outs
(bad)
inc
mov
and
mov
xchg
or
ins
les
imul
xor
xor
mov
inc
adc
sub
mov
hlt
fwait
pop
(bad)
adc
pop
lea
xchg
std
js
loop
sbb
xchg
(bad)
fmul
xchg
cwde
mov
scas
push
pop
xchg
xchg
sbb
fucom
mov
mov
push
call
(bad)
fiadd
add
xor
popa
fwait
pop
add
xchg
mov
repz
cdq
jecxz
push
jns
fiadd
sub
or
(bad)
inc
ins
mov
add
mov
dec
call
add
mov
inc
cmps
dec
(bad)
cmps
jns
call
dec
hlt
xchg
fsubrp
aaa
rol
loope
mov
add
out
lock
cmp
lea
loope
fstp
es
mov
push
and
cmp
ja
dec
test
mov
inc
call
jne
cmps
inc
xor
and
or
scas
push
dec
stos
push
pop
mov
xchg
sub
cli
jmp
rol
pop
mov
cmp
sahf
add
and
imul
fs
mov
pushf
add
rcr
ds
mov
pop
(bad)
cmp
or
aam
cmp
sbb
jns
fst
ins
jge
arpl
or
mov
jmp
mov
dec
adc
cld
pop
adc
pusha
in
sbb
xor
inc
pushf
dec
outs
div
aas
cdq
rcr
dec
pop
xchg
ret
cmp
clc
dec
push
out
lahf
ins
in
lock
mov
pop
mov
sahf
(bad)
push
mov
xchg
fisubr
and
rcl
inc
jg
mov
jnp
xchg
dec
xchg
repnz
into
lock
imul
add
add
xor
pop
data16
xchg
adc
mov
xchg
imul
cmps
add
jg
push
shr
sbb
mov
push
jmp
lahf
mov
gs
pop
dec
hlt
cmp
test
mov
or
cmp
cld
aaa
inc
or
pop
inc
jb
add
lds
addr16
and
inc
out
or
adc
ins
outs
lea
(bad)
xor
mov
sub
div
sbb
fnstenv
lods
fcom
jecxz
ins
fsub
push
or
test
jge
mov
and
(bad)
sti
out
call
gs
mov
cmp
nop
(bad)
in
jge
popa
fst
inc
das
mov
mov
mov
inc
in
cli
sub
cmc
push
sbb
add
adc
pop
jae
xchg
add
ds
pop
inc
mov
arpl
push
pop
fisubr
imul
push
outs
pushf
popa
sbb
arpl
cmps
jbe
div
mov
retf
jl
lea
pop
mov
fcomip
xchg
fcomip
fs
mov
in
sbb
push
fcomip
shl
es
pusha
imul
pop
dec
mov
mov
aaa
cmp
sbb
ficomp
push
adc
xor
mov
lock
or
cs
push
retf
fwait
test
push
test
mov
or
stos
mov
call
cmc
inc
test
popf
idiv
(bad)
lock
fld
mov
jmp
inc
fdiv
outs
imul
js
pop
lock
ret
sbb
aas
bound
cmp
pop
push
test
sbb
adc
in
mov
cld
test
pop
mov
push
pushw
jnp
ins
fcomp
mov
push
fcmovnu
pushf
xor
neg
xchg
lods
cmp
(bad)
fisubr
jmp
ds
out
ret
cs
pop
js
inc
add
lahf
adc
clc
inc
cdq
sar
jno
ss
inc
sbb
xor
push
adc
mov
xor
shl
fstp
pop
nop
dec
jecxz
xchg
mov
imul
push
dec
kmovw
in
mov
fsub
mov
loopne
xchg
(bad)
jecxz
sbb
div
sub
ror
jg
and
ins
mov
or
lahf
mov
scas
pop
cdq
aam
xor
jge
adc
adc
adc
or
inc
jne
jne
aam
jp
xchg
std
frstor
outs
ror
sahf
clc
jae
stos
mov
lock
inc
cmp
fist
sti
xchg
push
fisttp
mov
movs
xor
shr
mov
sub
push
lock
(bad)
jge
cs
sbb
jns
cmp
dec
xchg
retf
or
pop
rcr
sbb
inc
mov
cmp
sbb
cdq
dec
pop
mov
jle
mov
aas
and
dec
cld
in
in
mov
addr16
test
retf
inc
xchg
mov
jmp
jno
inc
hlt
xchg
add
lahf
nop
xor
repnz
ret
sahf
sub
retf
adc
cwde
pop
js
mov
and
mov
int
sahf
mov
mov
dec
bound
fnstcw
push
pop
xor
popf
inc
enter
imul
xchg
mov
ins
iret
in
loopne
mov
pusha
and
arpl
in
pop
in
mov
stos
mov
jle
and
iret
fnstsw
scas
mov
pop
stos
xor
xor
in
add
bound
cmp
call
or
inc
fwait
repnz
enter
sbb
xor
mov
inc
inc
popf
dec
and
dec
pop
xchg
or
fwait
sbb
sbb
test
test
adc
mov
push
enter
call
stos
fs
jmp
std
mov
xlat
dec
pop
test
mov
add
bound
inc
pushf
sub
inc
cdq
cs
jge
mov
xchg
or
(bad)
cmp
cmp
cmp
add
adc
in
ins
push
mov
add
push
pop
jmp
xchg
ja
pop
and
popf
sbb
jmp
or
imul
fild
adc
test
jns
mov
jp
push
std
cmp
and
sahf
pop
push
or
imul
stos
fnstenv
js
test
retf
pop
inc
fadd
je
and
push
test
mov
popa
cdq
mov
xor
scas
cmps
das
scas
fadd
dec
pop
ins
mov
outs
mov
xchg
jp
(bad)
sti
lock
(bad)
xor
popf
cmp
aad
test
jp
mov
stos
cmp
or
fbstp
cmp
xor
stos
xor
pop
xchg
mov
clc
sbb
int3
adc
inc
mov
es
add
fist
mov
in
sbb
popa
(bad)
fld
(bad)
jle
inc
popf
sub
mov
xchg
pop
pop
clc
shr
mov
call
adc
dec
push
scas
cmps
(bad)
out
clc
or
adc
mov
add
push
jne
push
jno
ret
sub
sti
sbb
retf
fisubr
jge
mov
xor
sub
fisttp
sub
cmovle
ret
fdiv
fisubr
jp
sub
mov
push
xor
dec
icebp
adc
rcl
xchg
in
dec
mov
cwde
xchg
add
xchg
retf
fdiv
cmc
xchg
inc
repz
dec
cmp
dec
sti
xor
daa
jns
lahf
pop
cmp
ret
cmp
hlt
dec
lahf
lea
test
jmp
and
inc
xchg
sbb
js
xchg
inc
fsubr
add
mov
or
dec
jae
hlt
mov
retf
data16
sbb
loopne
test
out
in
cdq
inc
cs
std
je
pop
hlt
sbb
outs
xchg
mov
xor
out
xchg
mov
scas
adc
rcl
sub
xor
jnp
outs
push
push
mov
xchg
mov
(bad)
sub
and
dec
push
inc
jge
scas
das
mov
mov
xor
xchg
mov
xlat
stc
popf
inc
popf
stc
push
ret
dec
jb
lea
pop
jle
jecxz
ja
pushf
inc
es
and
mov
pop
mov
popf
and
cld
cwde
xlat
fnsave
loop
pusha
shl
cmp
call
adc
pop
adc
push
popf
xchg
mov
imul
js
inc
pop
mov
sub
dec
dec
cwde
or
fsubr
add
xchg
mov
and
push
ret
adc
push
and
inc
and
dec
xchg
adc
stos
xor
dec
mov
mov
sahf
outs
cmp
xchg
xchg
aad
shl
xor
imul
pushf
pop
fs
lea
jle
sahf
(bad)
retf
repnz
cmp
shl
aaa
loop
sub
jo
xchg
cmp
jb
arpl
imul
sar
sbb
aaa
dec
(bad)
(bad)
inc
(bad)
ret
sbb
sar
cld
inc
mov
sti
dec
repz
adc
mov
stos
mov
dec
bound
rol
pop
in
mov
push
add
xchg
in
jne
inc
push
sub
sub
add
sahf
dec
sbb
push
int3
loop
mov
pop
int
outs
inc
xor
mov
jle
pop
push
sar
xlat
adc
nop/reserved
dec
(bad)
scas
movs
and
push
fcmovb
test
fild
sbb
dec
test
xchg
out
mov
add
mov
mov
in
pop
mov
xor
push
(bad)
and
lods
fs
inc
pop
imul
sbb
sbb
(bad)
ror
cld
pop
dec
data16
aad
das
push
aaa
sbb
jae
mov
adc
mov
mov
jmp
out
add
gs
fs
pop
fisub
test
dec
frstor
xchg
std
movs
int3
pop
movs
inc
outs
loopne
mov
or
les
mov
shr
adc
cld
aad
loop
add
push
mov
ins
pop
dec
cdq
popf
nop
mov
out
aad
fcmovne
push
dec
pop
pop
mov
sub
push
pop
sahf
js
or
mov
fwait
adc
xchg
xlat
je
jp
cmp
fs
pop
cmp
sti
mov
mov
data16
mov
cmp
loop
stos
rcr
mov
sti
dec
aas
sbb
in
or
jne
inc
add
mov
shr
push
pushf
std
inc
push
pop
pop
retf
cmp
imul
push
mov
cwde
or
xor
(bad)
push
aas
leave
lock
rcr
adc
ins
test
scas
ret
jge
mov
jbe
sbb
ret
mov
fild
mov
cmc
cmpxchg
pop
out
lods
add
mov
pusha
mov
dec
sub
leave
xlat
and
mov
pop
pop
or
or
push
(bad)
adc
add
aas
jae
jge
mov
mov
(bad)
dec
pusha
fcom
mov
inc
jmp
in
cmp
inc
arpl
jne
xchg
cmp
stos
jno
hlt
mov
lods
mov
jge
mov
test
sbb
mov
vphadduwq
daa
daa
push
mov
pop
add
adc
imul
daa
fmul
and
and
adc
mov
push
cmps
cmp
sbb
jmp
inc
add
mov
ror
in
out
cmps
jnp
(bad)
jp
arpl
mov
xchg
or
loope
pop
mov
jne
cmps
sbb
or
clc
mov
sub
sub
lea
jp
lds
pop
(bad)
jge
sbb
and
inc
sbb
jl
(bad)
xor
movlps
xchg
add
inc
test
call
stc
outs
jle
scas
push
repz
js
aad
dec
lds
cmp
inc
xchg
cmps
scas
loop
fmul
in
mov
stc
mov
xchg
sub
sub
fsubr
pusha
aas
mov
inc
cs
stos
lods
cwde
adc
out
jp
cmc
cmp
push
and
call
jo
fimul
xchg
push
out
mov
pop
add
data16
xlat
mov
mov
pop
fisubr
inc
cmps
dec
adc
inc
movs
add
sbb
test
inc
loope
hlt
cs
fcmovbe
mov
lds
mov
cli
and
lock
cmc
data16
cmp
sub
pop
mov
jg
cdq
xchg
dec
aas
clc
inc
retf
cdq
enter
adc
xor
mov
int3
jg
inc
dec
mov
push
lods
cmp
cmps
adc
scas
mov
cmp
push
rep
stc
inc
sti
retf
xchg
data16
xchg
inc
push
ror
mov
test
je
les
shl
dec
fs
cmps
adc
or
sti
fbstp
adc
push
lods
ins
sbb
dec
test
sbb
push
int
aas
xchg
mov
inc
pop
cmp
inc
ins
inc
push
sbb
sbb
push
dec
xchg
dec
push
mov
mov
fcmovne
jmp
neg
inc
add
rcl
xor
aad
xor
sub
lea
(bad)
mov
sbb
pop
(bad)
adc
daa
(bad)
jmp
push
in
inc
push
or
mov
pop
sti
gs
lahf
mov
scas
sbb
retf
fild
inc
pop
cmc
xor
dec
sub
push
out
pop
lea
mov
(bad)
shl
lds
popa
fadd
lds
scas
fidivr
(bad)
movs
jae
cdq
dec
push
neg
div
repnz
mov
(bad)
pop
call
xlat
hlt
scas
out
in
sbb
jmp
inc
xchg
jg
xchg
arpl
jno
pop
test
repz
(bad)
jl
ror
add
fsub
bound
add
jge
mov
fisttp
inc
mov
mov
sahf
clc
jmp
jmp
call
jecxz
pop
push
mul
mov
cdq
inc
sbb
xor
loop
ret
ret
mov
(bad)
sub
cmp
rcl
sub
cmp
or
mov
push
xchg
mov
mov
in
sub
push
out
adc
push
or
mov
ins
lods
inc
cmp
cs
movs
sbb
out
mov
test
scas
push
scas
or
mov
leave
xchg
js
icebp
stc
xchg
out
inc
xchg
push
pop
popf
mov
rcl
in
fisttp
and
xor
es
icebp
pusha
sahf
and
ins
mov
jae
dec
mov
mov
ror
mov
inc
dec
pop
cmp
inc
aas
push
push
or
sub
popf
(bad)
aam
push
mov
xor
cmps
xchg
adc
add
mov
in
out
mov
sbb
(bad)
stos
sbb
repz
mov
cld
fdivr
sbb
cwde
jno
push
(bad)
dec
aas
xor
(bad)
inc
in
pop
es
punpckhdq
jns
imul
retf
jmp
das
popa
and
lahf
das
lea
pop
push
mov
pop
xchg
mov
cmp
push
pop
retf
repnz
xchg
ret
pop
bound
push
sahf
sahf
xchg
out
jmp
xor
aad
or
pop
mov
mov
outs
pushf
mov
idiv
xchg
cdq
push
out
dec
out
sub
xor
(bad)
test
pop
sbb
outs
outs
cmp
pushf
(bad)
mov
ret
call
sbb
mov
mov
dec
(bad)
xchg
sub
adc
aam
sub
jmp
lock
push
jae
dec
std
mov
jns
mov
imul
jb
hlt
mov
mov
pop
pop
xchg
enter
dec
out
stos
ret
cmp
mov
push
sbb
clc
pop
sbb
dec
cmps
or
xchg
push
pop
mov
sbb
sar
inc
dec
jae
shl
pop
sub
imul
and
test
or
js
out
adc
mov
div
push
mov
fs
mov
sub
sbb
dec
mov
xchg
aad
idiv
shl
mov
idiv
cld
data16
or
test
inc
inc
mov
jg
movs
cmps
mov
cs
je
dec
pop
leave
push
or
sub
pusha
jno
ja
scas
dec
add
cmps
scas
sbb
xor
loop
mov
int3
out
je
jl
sub
dec
std
cmp
xchg
shl
adc
mov
nop
xor
sbb
mov
jae
mov
sti
stc
out
fidivr
push
jmp
adc
cmp
xor
jno
sub
mov
retf
xchg
sar
or
addr16
pop
adc
mov
lods
sub
mov
rol
ja
stos
cli
xor
sbb
inc
pop
jp
and
cwde
(bad)
pop
loope
mov
and
ins
(bad)
mov
pop
push
sub
inc
je
xor
pop
inc
not
pusha
add
data16
mov
ret
mov
dec
loopne
add
or
sbb
pop
mov
xchg
xor
sbb
lea
and
imul
pop
sub
aam
inc
xchg
fild
inc
jno
mov
jg
idiv
pusha
(bad)
xchg
and
sbb
mov
mov
inc
fmul
or
jge
lods
xchg
jo
jo
xor
(bad)
stc
rcr
inc
jnp
mov
dec
ds
mov
xchg
inc
cmp
sub
add
pop
or
or
sbb
ins
add
cmp
xchg
cmps
mov
sub
jns
fild
ret
jnp
jbe
xor
movs
sahf
jno
ret
xchg
in
add
mov
lods
lahf
lods
stos
adc
pushf
adc
std
aad
scas
repz
mov
dec
aad
icebp
adc
jmp
add
jno
push
inc
pusha
stc
inc
pop
jne
xchg
push
sti
stc
add
push
or
sbb
dec
ja
and
jle
pop
dec
shl
xchg
pop
scas
xchg
push
sti
xchg
xor
jnp
mov
iret
clc
imul
enter
add
mov
stos
xor
cli
fcomp
popf
test
aaa
or
int
rcr
dec
xor
dec
test
dec
xchg
rcl
sti
icebp
sbb
leave
jno
jb
call
xor
add
psubsb
movs
outs
xor
sub
mov
ds
xor
mov
pop
pushf
mov
test
je
nop
push
fnstsw
call
ret
iret
jp
mov
je
loopne
test
adc
pop
jp
mov
xor
neg
lods
push
fadd
cs
mov
cs
out
test
fnop
sub
add
inc
cmovno
xchg
pop
call
add
cmps
idiv
inc
dec
pop
iret
jmp
pop
lds
lods
sub
sar
in
mov
sub
stos
mov
mov
inc
popf
nop
mov
adc
ret
mov
mov
adc
cmp
ror
jp
call
dec
call
popa
in
test
push
or
pop
sub
cmp
data16
pop
cmp
mov
and
loopne
test
iret
cmc
push
leave
dec
gs
mov
push
retf
sbb
shl
mov
mov
lea
and
in
cli
fstp
push
cdq
movs
dec
enter
sub
xlat
xchg
lock
test
das
movs
ja
push
xchg
cli
push
fucomip
and
leave
ins
jg
and
xor
inc
jne
out
pop
mov
mov
dec
test
add
aas
retf
jmp
les
cmp
xor
add
iret
sbb
call
pop
pushf
mov
loop
sar
outs
pop
mov
pop
dec
rcr
jae
adc
inc
test
sbb
outs
scas
test
mov
fdiv
jge
mov
inc
dec
les
push
add
or
scas
or
or
(bad)
xchg
jne
or
in
aad
sbb
pop
ja
js
popf
lds
(bad)
out
fmul
mov
xchg
imul
test
pop
xor
jmp
popf
bound
hlt
hlt
stc
pop
call
mov
pop
es
dec
ds
and
lods
sbb
fild
mov
xor
add
inc
cmp
sub
pop
adc
add
sub
scas
xchg
pop
retf
fistp
pop
mov
xchg
jno
xchg
push
add
mov
mov
xchg
div
xchg
js
aam
xchg
out
jmp
sbb
mov
pop
cmp
fwait
add
sub
cmps
outs
pop
or
jmp
pop
(bad)
iret
aas
xchg
jecxz
jg
adc
and
pop
or
cmc
sub
xor
jp
xchg
stos
add
rol
(bad)
out
sbb
jne
scas
push
mov
in
je
jg
mov
pop
push
mov
out
test
mov
xchg
je
aaa
push
push
ffree
jecxz
in
fs
fbstp
pop
dec
call
add
(bad)
jnp
jl
fadd
and
adc
jb
mov
dec
test
xchg
sbb
xor
jl
fmul
into
ficomp
out
mov
pop
shr
mov
mul
dec
lahf
test
out
jmp
cdq
dec
aam
(bad)
push
and
lock
pusha
out
sub
push
push
push
xor
fwait
call
jecxz
sbb
inc
in
add
inc
jbe
mov
cwde
add
pop
jae
jns
mov
pop
scas
mov
push
fst
fild
push
scas
push
jmp
inc
out
in
xor
aad
sbb
in
das
mov
mov
adc
ds
nop
mov
xchg
dec
aad
pop
ss
fadd
and
and
inc
adc
data16
push
sbb
mov
stos
data16
adc
add
inc
push
add
lahf
push
jmp
push
mov
sbb
mov
xor
dec
lahf
into
jecxz
lods
jmp
jae
sub
movs
fbstp
push
out
fcom
mov
push
sbb
test
mov
sbb
inc
(bad)
lods
pop
ror
bound
movs
cmp
inc
pop
push
xchg
outs
pause
add
sbb
and
inc
and
jmp
mov
mov
cmps
pop
xor
jp
(bad)
aad
addr16
xchg
sub
mov
jmp
pop
fdivr
xchg
cdq
(bad)
sbb
sbb
test
mov
inc
out
dec
jmp
push
fdivr
sub
cs
push
sub
stos
(bad)
mov
pop
cld
frstor
mov
cmp
add
jl
arpl
bound
push
adc
cmps
cmp
or
add
push
and
pop
mov
cmp
movs
cld
and
inc
mov
fdiv
cmp
cmps
adc
mov
dec
stc
sub
mov
imul
je
inc
xchg
push
pop
jns
cmp
xchg
push
or
or
out
dec
inc
jge
(bad)
es
jae
stos
or
ds
or
pop
lahf
cdq
mov
cwde
rcl
test
sahf
sub
xchg
xor
icebp
movs
jo
mov
cs
lods
and
(bad)
aas
xchg
push
in
test
and
cld
cld
inc
je
(bad)
pop
sar
and
stos
imul
scas
daa
push
movs
push
push
push
xchg
mov
mov
cdq
mov
fidiv
and
push
arpl
pop
dec
fcom
dec
push
mov
adc
mov
mov
push
ja
and
mov
pushf
inc
int
dec
cmp
shr
ss
inc
test
fild
cwde
xchg
clc
xlat
retf
dec
dec
mov
ficom
sbb
int
push
cmp
cmp
mov
or
mov
outs
out
into
addr16
dec
inc
xor
and
stos
cmp
pop
daa
xchg
adc
lods
(bad)
adc
xchg
or
lock
add
adc
mov
cdq
arpl
clc
loopne
jo
push
or
add
cld
sbb
and
std
sti
jns
mov
xor
ret
rcl
jo
and
or
punpcklwd
ss
mov
mov
or
jg
into
outs
dec
inc
ds
add
and
xchg
sub
fisttp
or
fwait
add
push
inc
xchg
fadd
fsubr
jg
cs
aad
xchg
in
out
in
mov
nop
add
mov
adc
mov
call
cmp
mov
dec
repnz
fxch
pop
in
es
push
fs
or
popf
pop
ds
lds
js
fisub
xchg
lock
dec
bound
or
aas
xchg
daa
cmps
sbb
jns
mov
mov
call
fadd
mov
pop
scas
dec
cmp
inc
add
jl
mov
imul
neg
mov
jmp
mov
fadd
push
pop
inc
repz
sbb
lods
and
pusha
mov
mov
mov
sub
mov
dec
leave
cmp
xor
in
and
dec
adc
das
jg
add
rol
std
dec
pop
and
sbb
jmp
sbb
mov
fidivr
in
mov
rcl
mov
retf
dec
fstp
(bad)
and
add
sbb
outs
jle
mov
lds
inc
repz
std
jl
inc
cmp
xor
inc
mov
adc
dec
add
cmp
scas
mov
out
push
inc
mov
outs
mov
test
test
mov
push
mov
fldcw
out
adc
dec
dec
in
pushf
jno
inc
leave
push
push
psubusw
rcr
daa
inc
sbb
aaa
pop
and
(bad)
xchg
int3
push
aaa
out
jle
lock
xor
and
sbb
jnp
push
inc
aam
ins
popf
cmps
cld
adc
sub
retf
clc
mov
stos
mov
push
push
fisubr
xchg
cli
fs
shr
loop
ja
jmp
inc
xchg
dec
inc
test
mov
fnstcw
dec
scas
xor
dec
mov
push
and
inc
loopne
push
push
in
mov
mov
aas
int3
ins
ret
cdq
rol
pop
or
sbb
ins
push
fwait
fs
mov
sub
outs
lahf
aad
inc
test
jns
scas
jle
xchg
sti
dec
sti
mov
imul
loop
add
jg
xor
cmp
xchg
icebp
or
fist
imul
sbb
hlt
retf
loop
loopne
pop
push
es
xor
mov
cs
out
std
fadd
test
jp
jp
in
pop
xor
and
mov
adc
mov
add
ds
xchg
pop
aam
jl
shl
(bad)
fnsave
out
outs
xchg
test
(bad)
mov
xchg
xchg
cmps
mov
lods
pop
push
scas
(bad)
cld
pop
add
in
test
jnp
mov
jp
cs
adc
sub
xlat
cmc
fs
inc
pop
jns
(bad)
sub
push
or
sub
pop
fld
and
inc
and
cmp
stos
pop
mov
fmul
xchg
pop
cmp
mov
xchg
lods
mov
jmp
mov
xchg
stos
js
in
(bad)
xchg
xor
popa
mov
mov
add
mov
pusha
sbb
jmp
enter
xchg
mov
dec
fdivr
or
fisttp
inc
or
jp
xor
test
cwde
cdq
sub
inc
fdivr
mov
push
dec
push
pop
mov
sub
dec
push
scas
pop
and
sub
xor
or
aad
cmp
out
jge
outs
js
sub
xchg
cmps
jecxz
jbe
in
sbb
pop
movs
not
mov
call
(bad)
out
out
cli
inc
jge
stos
xor
add
inc
adc
cmp
adc
xchg
bound
push
xchg
mov
repz
xchg
out
or
sub
push
mov
or
cmp
stos
jne
mov
push
or
outs
retf
inc
mov
jb
sub
les
out
adc
aam
mov
rol
add
pusha
sbb
dec
scas
mov
into
idiv
aaa
inc
leave
in
inc
xchg
add
cmp
push
push
or
mov
retf
retf
or
retf
inc
inc
cld
adc
push
and
xchg
sbb
push
sar
(bad)
sbb
sub
adc
sbb
jmp
sub
test
xchg
icebp
mov
mov
ja
lods
xor
cmc
faddp
arpl
mov
xor
cmp
aad
dec
(bad)
or
cmp
add
call
je
call
xchg
xchg
add
jle
mov
and
imul
inc
lods
xchg
hlt
xchg
add
inc
pop
xchg
scas
test
rcr
adc
out
xor
mov
pop
call
mov
retf
and
sbb
repnz
jge
sbb
daa
inc
inc
test
push
ja
test
std
fdiv
mov
jg
add
retf
xor
js
and
ds
cmps
outs
data16
push
add
mov
outs
xor
div
mov
rcr
add
push
ficomp
cmps
push
jmp
(bad)
call
mov
hlt
jecxz
lods
loope
jle
xchg
and
mov
shl
fild
and
cmp
and
popf
ret
dec
and
add
ficom
pop
push
out
xor
mov
arpl
ja
sbb
xor
sbb
sti
inc
inc
pusha
and
push
std
popf
test
and
jmp
movs
imul
jle
mov
cmp
stc
fistp
icebp
fiadd
push
scas
xor
sbb
jmp
inc
or
xor
test
mov
int
(bad)
into
cs
js
pop
cmp
xor
xchg
xor
push
(bad)
jnp
mov
pop
xchg
pop
clc
enter
mov
lds
pop
mov
jecxz
(bad)
dec
movs
loope
ins
in
clc
bound
in
(bad)
lock
fiadd
mov
pop
inc
mov
test
scas
clc
sti
dec
push
sahf
fidiv
idiv
sub
rcl
inc
rol
cmp
adc
and
fnsave
jg
retf
and
cmp
pop
smsw
pop
xchg
sbb
jnp
cmps
add
(bad)
loope
inc
push
jns
repz
pop
pushf
stc
inc
loope
inc
dec
nop
jb
(bad)
lds
mov
je
xor
mov
mov
sahf
div
add
(bad)
mov
mov
mov
repz
add
cld
adc
mov
xor
add
pop
fldenv
out
add
and
sub
inc
push
mov
or
add
mov
jns
fnstcw
test
pop
mov
mov
xchg
jnp
(bad)
cmc
mov
mov
outs
loopne
xor
jmp
jmp
(bad)
cmp
cmps
push
sub
sbb
inc
enter
cmp
imul
mov
(bad)
sbb
fldenv
xchg
mov
inc
pop
add
cmp
sbb
push
mov
xor
imul
cmp
aam
ins
inc
cmp
int
pop
lods
mov
arpl
fsubr
mov
mov
push
test
mov
mov
test
enter
xlat
js
mov
fld
or
out
or
cmp
pop
adc
push
shl
xor
aas
(bad)
sbb
jae
fwait
add
stos
pop
pop
xchg
adc
xchg
stos
jno
adc
out
cmps
or
aam
loopne
jno
lahf
sub
mov
dec
mov
mov
and
adc
movs
mov
or
scas
daa
inc
lock
mov
retf
xor
adc
jne
pop
mov
push
mov
mov
jbe
ret
xor
adc
sub
jl
add
xlat
bound
push
ds
push
mov
dec
push
imul
mov
mov
pop
and
jno
int
adc
jmp
mov
jmp
mov
mov
mov
test
mov
push
out
std
and
jmp
std
inc
inc
add
sub
and
lods
mov
mov
sahf
enter
dec
je
sbb
and
push
daa
mov
jg
sbb
xor
cmp
cmp
xchg
retf
add
je
mov
xchg
or
clc
inc
push
shl
repnz
pop
mov
mov
mov
mov
sub
rol
int
ret
pop
js
dec
cmps
ins
fs
js
pop
mov
xchg
ret
jmp
test
clc
sbb
jae
add
pop
popf
je
bound
push
sbb
mov
aas
add
icebp
mov
std
jne
popa
dec
data16
outs
test
xchg
pop
call
stos
test
cdq
mov
push
add
shl
mov
pop
es
out
inc
push
sub
mov
pop
or
stos
lds
retf
(bad)
popa
jbe
pop
in
inc
ja
sub
and
push
inc
aam
outs
test
mov
mov
add
enter
pop
jle
ins
sar
outs
jmp
ret
retf
inc
cmps
test
ins
push
in
stos
adc
fdiv
lahf
aad
xchg
ja
inc
push
cmp
test
cld
push
add
movs
jne
outs
movs
ss
dec
out
int3
mov
call
gs
add
ret
inc
es
sbb
aaa
test
xor
lods
mov
adc
aas
retf
push
mov
pop
loopne
je
mov
mov
mov
jmp
popa
add
call
call
sahf
sbb
movs
or
inc
test
cmc
outs
scas
mov
fisttp
dec
pop
push
hlt
enter
or
cmp
addr16
pop
or
mov
sti
pop
into
repz
ret
pop
cmp
pop
fisttp
call
mov
sub
mov
xor
sar
aad
push
(bad)
call
cmps
mov
inc
outs
scas
mov
ret
mov
loop
dec
lea
or
aad
scas
lock
and
fld
or
mov
sbb
push
out
jo
jmp
rcl
add
daa
test
les
mov
jg
test
fsubrp
fwait
push
mov
sbb
push
and
ret
dec
mov
inc
cmp
mov
ffree
pop
popf
fs
xchg
cmp
shr
aam
cmp
lods
inc
out
jo
es
adc
stc
test
jbe
movs
and
jbe
ja
dec
mov
xchg
retf
test
add
and
cmp
pop
adc
inc
push
mov
sbb
xor
mov
mov
add
je
inc
call
hlt
sti
inc
(bad)
test
add
jmp
push
call
lds
stos
jp
cmps
mov
add
out
retf
mov
cmc
aam
cli
dec
cli
pop
sub
jmp
fidiv
inc
ds
push
push
dec
mov
aad
cli
jmp
enter
push
sti
push
push
outs
sbb
gs
mov
or
scas
adc
cmp
(bad)
and
push
and
mov
mov
mov
stos
jnp
jle
mov
imul
mov
inc
in
fdivr
mov
cmp
xor
in
xlat
push
jmp
jg
stos
addr16
mov
pop
bnd
mov
mov
add
or
ss
or
jae
mov
ja
mov
pop
cdq
sti
mov
fld
jns
test
inc
mov
out
leave
jmp
leave
popa
mov
jnp
cmp
imul
dec
xchg
stos
push
pop
cmp
fisubr
add
adc
jg
jno
or
stos
shl
frstor
fistp
sbb
sbb
pop
add
aaa
mov
xchg
ror
cmova
xor
repz
dec
push
inc
xchg
pop
cld
cdq
or
mov
sbb
not
mov
pop
mov
int
(bad)
shl
inc
pop
loop
dec
repnz
sbb
ror
aas
mov
jnp
jg
xchg
mov
push
out
jl
xchg
push
push
dec
push
mov
bound
push
lea
mov
sbb
xor
fnstsw
pushf
add
fst
mov
data16
mov
jmp
and
(bad)
mov
(bad)
mov
sub
dec
bound
std
shr
mov
dec
int3
dec
ficomp
sbb
jge
or
and
and
test
lahf
and
into
sbb
mov
mov
imul
and
mov
mov
std
outs
mov
je
movs
pushf
sbb
dec
shl
pop
mov
jae
mov
js
(bad)
inc
aad
or
lea
(bad)
jle
cmps
test
aas
ret
lea
adc
dec
std
xor
out
mov
jnp
push
dec
pop
cmps
jne
popa
jmp
iret
mov
cmp
push
loopne
jge
xchg
add
pop
sbb
adc
popa
sub
sbb
mov
pop
mov
call
mov
fstp
test
cmp
(bad)
mov
into
mov
xchg
daa
out
cmc
xchg
sti
or
out
xlat
es
lea
or
or
push
pop
add
fs
jns
adc
inc
in
ja
std
sbb
adc
adc
mov
retf
push
leave
arpl
add
sbb
mov
add
cmps
jmp
sar
mov
jle
ret
mov
sub
std
mov
(bad)
sahf
in
xchg
in
repz
call
mov
aaa
or
fcom
mul
pop
cmp
xor
pop
(bad)
outs
pop
push
jmp
dec
test
arpl
inc
aad
ins
pusha
adc
mov
or
pop
ins
popf
push
push
scas
cmp
in
popf
or
pop
xlat
les
stc
push
cmc
nop
jecxz
xchg
xchg
addr16
mov
or
out
and
sbb
dec
rcr
add
mov
mov
xchg
or
stos
dec
cmp
cli
inc
inc
outs
lods
sbb
stos
ins
or
mov
scas
stos
xor
test
fcmovu
add
jecxz
inc
jae
(bad)
pop
push
or
adc
inc
mov
fild
mov
inc
mov
outs
lods
xchg
xchg
or
and
and
(bad)
pop
retf
sar
jno
fsub
adc
popa
test
mov
xchg
daa
repnz
mov
xor
das
xchg
xchg
enter
dec
imul
xor
lods
adc
mov
test
add
daa
aas
jle
pop
mov
scas
push
(bad)
jp
scas
push
push
mov
push
mov
mov
inc
sub
(bad)
in
test
push
pusha
or
xchg
into
cmps
adc
cli
cld
adc
mov
pop
lods
sahf
xchg
mov
mov
retf
xchg
mov
lds
daa
sbb
mov
popa
lds
sbb
or
push
mov
or
(bad)
lock
mov
inc
jmp
pop
test
retf
pushf
inc
cmp
cs
test
and
inc
mov
jb
jns
popa
ficomp
cwde
retf
jae
mul
das
aad
mov
icebp
add
mov
into
cmp
shl
retf
lds
icebp
pushf
dec
retf
adc
or
in
data16
pop
pusha
(bad)
and
mov
fnsave
clc
and
jae
(bad)
dec
sub
pop
lahf
push
aad
push
mov
lods
dec
inc
mov
adc
test
into
jecxz
lds
push
mov
jae
lock
push
ret
sub
in
add
pusha
mov
pop
pop
cdq
cmps
xchg
and
mov
nop
retf
dec
mov
imul
in
inc
cmp
leave
cld
loop
jmp
inc
pop
jo
addr16
test
mov
leave
xor
xchg
jl
fist
or
iret
cmp
add
pop
stos
cmp
ror
daa
fstp
push
xchg
xlat
xchg
and
inc
stc
sar
dec
add
sub
lahf
les
stos
pushf
push
rcr
mov
loope
cdq
mov
gs
xor
cmc
(bad)
cmp
xchg
popf
in
in
xor
jb
pop
push
outs
lahf
outs
sbb
cwde
dec
pop
or
adc
fisttp
repz
jmp
push
push
sbb
scas
pop
retf
aas
cmc
outs
jbe
jb
mov
pushf
ins
daa
push
dec
(bad)
(bad)
or
pop
push
inc
xchg
(bad)
loope
sti
push
enter
(bad)
in
or
add
pop
push
mov
les
in
mov
cmp
push
loope
jmp
mov
imul
mov
add
pop
xchg
call
imul
add
mov
xchg
pop
int3
js
test
xor
std
sbb
sub
and
ja
pop
mov
mov
or
shl
(bad)
out
mov
mov
pop
stc
mov
in
scas
jp
outs
lods
adc
xor
ret
pop
dec
and
pop
sti
dec
sub
mov
pop
cli
push
in
(bad)
sub
data16
add
or
stos
cmp
jl
into
das
jg
scas
sti
bound
xchg
add
fstp
pop
jo
test
pop
test
pushf
dec
hlt
mov
push
aad
mov
xchg
sbb
xchg
mov
sbb
jp
mov
rol
test
lahf
xor
or
jmp
fldenv
cmp
arpl
aaa
or
mov
loope
jns
lock
inc
push
inc
rcl
sub
cmps
add
popf
xor
cmps
cmps
cmp
push
push
mov
outs
ja
popa
fidiv
loopne
xchg
test
(bad)
movs
xchg
icebp
popa
xchg
outs
jns
or
hlt
ret
mov
dec
retf
pop
cli
or
clc
jbe
and
pop
jge
xor
dec
add
mov
cmp
sbb
pop
jb
add
xor
push
and
ds
adc
jns
pushf
sub
xchg
(bad)
adc
fcom
les
push
inc
fsub
(bad)
(bad)
inc
xor
inc
cmp
loope
das
(bad)
jne
(bad)
lahf
aam
(bad)
jns
test
clc
xchg
out
adc
test
nop
push
dec
inc
sbb
(bad)
jno
inc
mov
(bad)
mov
stc
pushfw
mov
xchg
cmc
jnp
jle
mov
sub
pop
pushf
add
pop
push
push
and
clc
or
adc
setp
add
jl
jle
imul
loop
mov
mov
cmp
cmps
mov
call
mov
lods
arpl
popf
outs
pusha
mov
sub
pop
out
sbb
fild
push
sub
fnstcw
inc
fucomi
jnp
bnd
push
and
cmp
jb
push
jmp
popf
jb
jo
mov
push
mov
lods
sub
push
push
iret
loop
shl
sbb
pop
add
push
aad
lds
rol
cmc
mov
mov
jp
test
xchg
cmc
shl
pushf
push
imul
(bad)
cmp
(bad)
std
jge
push
pop
or
sbb
mov
pushf
mov
push
jmp
add
or
sbb
sub
fnstenv
lea
add
das
or
int3
(bad)
cmp
push
push
fcomp
mov
cmp
rcr
push
mov
nop
xor
dec
xchg
inc
push
scas
mov
jmp
xchg
dec
out
adc
inc
hlt
call
pop
push
inc
popf
jno
cmps
inc
or
mov
xchg
xor
into
push
sti
fistp
push
push
jg
fdiv
add
and
js
lods
pop
push
lea
jmp
ss
cld
cmps
and
inc
push
mov
and
fild
adc
movs
xchg
or
dec
cdq
popf
mov
push
out
mov
sbb
retf
neg
retf
nop
mov
shl
adc
sub
out
into
inc
int3
xor
inc
mov
imul
fnsave
pop
loope
arpl
sub
add
sbb
xor
js
xchg
or
mov
in
cmps
mov
mov
pop
add
pushf
inc
aad
in
mov
nop
jno
(bad)
div
mov
push
inc
mov
hlt
xchg
lods
cmps
jo
and
adc
pop
jmp
sbb
es
mov
into
ins
loope
daa
enter
dec
pop
mov
sub
add
sub
or
je
mov
push
mov
mov
shl
push
nop
jecxz
rcr
jae
jge
xchg
jecxz
xchg
mov
xlat
mov
scas
add
shl
inc
in
cmps
sahf
adc
loopne
hlt
out
sar
mov
push
shr
fsubr
pop
aaa
(bad)
aad
push
popf
dec
jb
es
or
ds
test
xor
pop
sti
lea
cmps
icebp
inc
outs
arpl
push
adc
add
push
scas
pop
ds
test
inc
or
jmp
add
arpl
inc
out
aad
loop
mov
and
in
mov
mov
mov
sbb
fldenv
mov
in
pop
push
jmp
and
aaa
pop
push
lods
jb
pop
stos
(bad)
les
(bad)
in
cmp
xor
add
jge
mov
jnp
cmps
imul
dec
fs
mov
ds
xor
clc
call
les
jb
push
mov
pushf
jg
movs
push
sbb
shl
jb
jns
loope
rcl
pop
jb
fwait
popf
and
(bad)
mov
mov
(bad)
sbb
rol
push
pushf
pop
inc
pop
scas
dec
pop
pusha
pushf
nop
ror
(bad)
adc
shl
pop
cld
and
push
pop
ss
(bad)
pop
cld
dec
jno
adc
mov
lea
or
sar
in
sbb
xchg
mov
jg
call
push
push
mov
lea
loopne
movs
cli
(bad)
sub
cld
push
add
sti
imul
enter
sub
hlt
(bad)
mov
xchg
ds
dec
xchg
push
or
lahf
mov
cmp
inc
sti
loop
mov
inc
ficomp
ja
jno
mov
outs
cwde
ins
cmp
lea
adc
dec
pushf
aam
or
clc
add
dec
jg
mov
pop
in
mov
out
inc
pop
shl
mov
mov
push
addr16
les
test
stos
or
push
mov
jmp
sbb
cmp
push
push
pushf
dec
pop
jl
ss
(bad)
mov
sbb
adc
xor
outs
jns
dec
inc
movs
push
jb
mov
jb
test
xor
arpl
outs
mov
popf
pop
fcom
icebp
or
lods
rcl
mov
xchg
sbb
fcmovnu
div
retf
popa
popa
pushf
cdq
(bad)
cmc
dec
stos
sbb
cmp
test
dec
retf
cmp
cmp
dec
cmp
les
inc
cli
lea
sub
arpl
sbb
sub
jp
scas
push
add
cmp
jmp
pushf
sub
arpl
stos
mov
xchg
rcr
pop
pop
call
ret
nop
cdq
add
jbe
pop
lods
sti
pop
xor
pop
pop
loopne
mov
cmp
js
mov
push
jecxz
fcom
push
dec
ret
jle
cmp
inc
movs
and
and
out
mov
stos
sbb
retf
std
jle
jae
mov
or
js
mov
(bad)
pop
inc
in
test
add
loopne
shl
xchg
and
pop
mov
xchg
jge
cmc
cli
mov
je
(bad)
mov
push
cmps
mov
test
lahf
dec
(bad)
jae
xor
or
shl
pop
in
imul
mov
pop
push
mov
cmp
out
jmp
inc
ja
out
xor
or
fnstcw
mov
test
dec
push
jle
(bad)
mov
pushf
out
push
neg
fldcw
scas
aad
cmps
out
mov
repnz
pop
xor
stc
test
call
ret
adc
repnz
pop
gs
hlt
add
cmc
je
and
and
adc
mov
jg
shl
cld
pop
jg
add
add
outs
sbb
outs
fild
mov
nop
into
test
xor
jp
(bad)
mov
ficom
repz
in
jecxz
xchg
nop
mov
adc
shr
xor
sbb
movs
fucomi
sbb
scas
add
(bad)
fincstp
retf
jp
cmps
ins
jecxz
icebp
or
mov
je
pop
arpl
pushf
xor
inc
or
mov
rep
ret
ret
jmp
bound
sbb
cmp
call
ins
inc
mov
pusha
repz
dec
mul
sti
pop
stos
ret
push
(bad)
jle
(bad)
fidivr
xchg
dec
popf
mul
sbb
ror
test
push
nop
inc
jo
call
cli
aam
jle
mov
sub
retf
iret
ret
push
push
sbb
and
arpl
dec
mov
jmp
leave
inc
jb
xor
sbb
sbb
lods
dec
add
cwde
mov
pop
add
test
aam
sbb
call
mov
adc
mov
test
fadd
mov
fsubr
cs
ins
jle
xchg
lock
pop
inc
mov
dec
rol
or
and
pop
pop
push
pop
mov
je
std
data16
mov
mov
dec
rcl
test
adc
inc
imul
jmp
mov
lods
dec
push
mov
sub
stos
sti
imul
mov
(bad)
jbe
and
mov
mov
inc
repz
jne
mov
dec
inc
xchg
add
inc
nop
mov
and
(bad)
and
xor
pop
out
stos
mov
ffreep
jge
cld
adc
add
xor
or
xchg
and
lahf
(bad)
call
rcl
sbb
sti
pusha
out
je
mov
cmp
mov
sbb
jmp
(bad)
inc
xchg
sub
fs
(bad)
mov
(bad)
js
mov
push
ret
jnp
sub
xor
ror
jo
sbb
or
stc
xor
add
sbb
dec
jecxz
and
add
pop
sub
xor
xchg
sbb
cmp
push
jnp
jl
mov
pop
lods
cmps
mov
stc
shl
inc
xchg
mov
pop
jge
fld
mov
lahf
imul
sbb
fiadd
fwait
les
out
(bad)
cmp
xchg
lahf
sub
jne
adc
adc
fldz
out
pop
inc
pop
jg
or
fs
stos
scas
mov
ds
(bad)
int3
sbb
push
inc
in
sbb
cmp
pop
or
pop
test
cdq
xchg
mov
pop
adc
in
loop
fwait
icebp
push
ret
pop
fsubr
xor
mov
cmps
pop
push
iret
ret
loope
stos
mov
sbb
mov
xchg
scas
xlat
outs
outs
xchg
(bad)
pusha
xchg
jnp
adc
sar
push
pop
sbb
sbb
or
stos
mov
mov
aas
scas
push
(bad)
fisub
xchg
neg
push
cmp
and
or
jae
or
mov
lea
dec
cdq
clc
in
enter
jg
pop
fsub
cmps
sbb
mov
rcl
repz
dec
nop
sahf
mov
inc
in
xchg
and
shl
in
pop
mov
aad
cmp
rol
test
nop
xor
cmp
xor
bound
pop
jmp
push
bound
fnstenv
xor
lahf
pop
nop
jg
sbb
sbb
inc
and
daa
mov
arpl
dec
inc
pop
sub
mov
dec
sti
repnz
dec
xchg
mov
mov
xchg
mov
cld
push
xor
cmc
clc
loop
pop
pop
mov
shl
pop
dec
hlt
mov
jns
daa
and
adc
pop
stos
jno
pop
stos
mov
jg
xor
sbb
dec
pop
in
adc
cmp
sub
push
mov
jle
xchg
mov
pushf
shl
repnz
jns
mov
in
jmp
push
shl
je
sbb
push
arpl
retf
aad
outs
push
xchg
movs
dec
jmp
adc
ret
push
inc
cmp
jae
dec
pop
jne
mov
mov
cmp
pop
sahf
imul
(bad)
sbb
push
dec
jmp
cmp
jno
mov
mov
stos
dec
sbb
pop
push
test
(bad)
inc
int
jle
inc
add
jb
or
xchg
adc
out
xor
js
mov
pop
mov
cld
lods
out
cdq
pop
ins
mov
ins
int3
jle
sbb
jb
es
aas
pusha
lea
popf
ss
cwde
pushf
sahf
mov
add
mov
push
sbb
dec
mov
xor
iret
dec
jns
dec
and
sub
lods
mov
xor
pushf
shl
rcr
push
(bad)
pop
retf
pushf
shl
stos
xchg
dec
xchg
adc
ret
test
mov
cmp
lods
das
inc
repz
fiadd
mov
shr
or
shl
lods
and
xor
adc
xchg
dec
ss
mov
lods
mov
rcl
xchg
rol
aas
mov
xor
sbb
fst
cmp
call
cdq
and
popa
je
jbe
adc
mov
mov
xchg
xor
adc
cmp
mov
nop
icebp
ficom
mov
jne
das
ficom
out
(bad)
cmp
pop
call
mov
push
imul
out
jge
(bad)
push
inc
pop
and
or
sub
and
js
stos
push
jno
test
jmp
jl
and
lds
shl
sbb
int
xchg
add
js
mov
arpl
out
add
std
les
scas
lahf
jb
pop
int
sub
iret
retf
gs
inc
add
ins
adc
scas
dec
pop
pop
out
mov
or
sar
repnz
add
mov
adc
push
sbb
dec
sub
mov
aam
sti
inc
mov
sbb
inc
jle
popf
dec
in
enter
jmp
adc
bnd
mov
in
adc
pushf
ss
shl
out
add
iret
adc
fdivr
pop
jns
scas
push
jne
(bad)
ja
jg
pushf
iret
xchg
dec
cmp
sub
arpl
jmp
sldt
push
mov
jae
fisttp
xchg
inc
xchg
mov
xor
es
fwait
sti
push
leave
out
add
push
bound
jbe
mov
mov
sbb
(bad)
xchg
sub
ret
das
stos
push
inc
in
test
movs
int
mov
sub
enter
std
and
imul
pop
inc
movs
cs
jae
movs
les
call
jp
in
pop
ins
jb
std
sub
jae
js
adc
sub
jle
mov
jns
xchg
test
fcompp
and
aad
retf
push
xchg
push
test
sahf
pop
enter
aam
mov
mov
mov
mov
hlt
pop
cmp
stc
cmps
lods
xchg
sahf
mov
call
cs
iret
inc
xchg
aaa
jbe
jl
sbb
ins
cmp
mov
call
fsubr
(bad)
aam
push
push
inc
fstp
xchg
pop
mov
out
ins
sbb
inc
mov
(bad)
cmp
dec
call
pushf
dec
jns
xchg
aam
ret
jae
(bad)
add
out
xchg
sub
jl
movs
scas
aam
xchg
dec
in
or
fsubr
cdq
fadd
push
pop
dec
clc
int3
cmc
push
clc
cs
sub
das
fs
push
add
int
add
jge
and
pop
add
stc
sbb
push
sbb
mov
int
jmp
or
stc
add
fwait
enter
leave
dec
loopne
arpl
push
dec
xlat
js
ret
test
cdq
jp
test
xor
call
mov
cs
stc
or
dec
mov
rcr
pop
es
add
inc
popf
adc
pop
xchg
aaa
cmp
rcr
stc
sub
rcr
xor
add
imul
jg
sbb
push
add
sub
or
xchg
(bad)
jbe
push
sub
repz
cwde
leave
adc
icebp
add
push
mov
xchg
ror
add
add
cdq
and
lods
dec
fwait
jbe
ss
rol
jecxz
jecxz
pop
or
(bad)
stc
pop
add
xchg
fwait
into
sub
lods
ja
loope
mov
add
push
xor
and
je
imul
test
mov
lea
add
out
loope
mov
and
xor
add
(bad)
xchg
cmp
sbb
mov
mov
icebp
jl
ret
ret
fnstcw
scas
push
cmp
int
repnz
or
pop
push
lods
jne
push
call
pop
pushf
bnd
into
pop
inc
addr16
jecxz
ja
jbe
stos
sbb
test
xchg
xor
xchg
mov
or
or
lods
cmps
ds
push
pop
fstp
mov
jns
call
jg
retf
(bad)
(bad)
inc
fnsave
call
mov
shl
mov
xor
push
aam
pop
cs
push
out
add
outs
and
jae
push
aaa
and
outs
loopne
add
inc
pop
ret
or
push
mov
mov
icebp
inc
mov
nop
xor
fwait
cld
rdpmc
sub
in
call
dec
pop
pushf
push
add
js
test
scas
push
shl
mov
pop
jecxz
add
inc
sbb
(bad)
daa
sub
int3
cli
rcl
xor
aas
test
ss
mov
int3
mov
ror
jl
cld
je
push
add
cmp
jnp
pop
out
add
fstp
lahf
push
inc
mov
jp
mov
int
mov
add
mov
jnp
icebp
xchg
jg
cdq
add
stos
test
xor
call
xor
(bad)
ror
inc
push
xchg
movs
push
cmp
aam
lods
jp
pop
push
or
cmp
std
pop
sbb
out
mov
xor
scas
jns
nop
and
and
mov
dec
dec
scas
mov
cwde
sbb
push
inc
xchg
aam
cs
pop
ret
cmp
pop
cmps
jmp
(bad)
frstor
movs
mov
inc
lods
popf
add
jmp
mov
out
popf
jbe
dec
shr
cmp
aam
stos
dec
loope
inc
sbb
test
pop
dec
mov
(bad)
leave
mov
sub
rcr
inc
push
retf
ja
addr16
push
mov
mov
pop
mov
das
xor
fadd
(bad)
pop
scas
popa
jmp
aam
test
pushf
adc
mov
mov
test
cmps
popf
mov
mov
lods
cmp
aam
(bad)
inc
jl
fidiv
dec
jmp
aad
imul
mov
bound
inc
cmp
into
mov
cld
fistp
inc
add
xor
jl
add
or
pop
popf
mov
inc
xlat
std
sbb
jno
fnsave
xor
xchg
push
(bad)
mov
add
repnz
mov
shr
pushf
mov
retf
xor
das
mov
scas
inc
shl
pop
push
dec
mov
dec
jbe
sub
fnstcw
pusha
clc
mov
jmp
push
pop
xor
and
bound
mov
push
adc
dec
aas
test
(bad)
dec
in
(bad)
or
push
inc
mov
inc
add
inc
aam
jbe
fyl2x
mov
test
gs
cmc
ds
lock
hlt
push
imul
retf
shr
jne
sbb
add
or
cmp
or
add
test
add
add
pop
or
cwde
cmp
movs
ja
mov
pop
mov
xor
(bad)
jmp
shl
mov
pop
cwde
rcl
cmc
fist
mov
add
arpl
cld
stc
test
imul
pop
ret
cmp
popa
lods
sub
stos
inc
aas
add
retf
pop
call
pusha
push
pop
sub
add
es
xor
aas
out
push
xor
mov
jmp
push
and
lods
push
jmp
push
(bad)
or
movs
mul
sti
jge
scas
scas
repz
test
and
ret
rcr
inc
inc
stos
stos
pop
cli
ins
out
sbb
cwde
pop
inc
add
ins
inc
inc
mov
jle
lahf
xchg
int
pop
cld
add
fdiv
or
fiadd
nop
ss
out
ins
push
cmps
inc
add
xchg
test
sbb
call
cdq
adc
inc
pusha
mov
lods
std
xchg
ror
repz
lahf
xchg
aam
fld
loop
sahf
jl
int
lock
arpl
fiadd
jne
pop
daa
dec
nop
xlat
rol
sub
sub
inc
test
jnp
mov
int3
sub
scas
imul
sbb
push
mov
pusha
lea
or
popa
inc
nop
pop
add
mov
sbb
pop
imul
mov
popa
and
cmp
mov
adc
jmp
mov
bound
cmps
popf
addr16
shl
icebp
loop
dec
xchg
test
loopne
aam
sub
shr
test
rcl
add
dec
cmp
or
or
retf
adc
clc
inc
push
inc
ss
sub
cs
jmp
mov
jle
sar
test
pop
test
test
mov
addr16
mov
mov
test
rcl
inc
jae
mov
jmp
neg
push
mov
or
in
cli
stos
jb
aas
data16
or
cmps
xor
mov
es
imul
adc
sbb
and
push
mov
or
mov
loopne
lahf
inc
lods
jmp
popa
rol
test
aad
push
out
or
jmp
add
test
xchg
std
hlt
in
dec
and
pop
adc
cli
into
js
add
es
inc
mov
xchg
pusha
(bad)
or
mov
jge
in
pop
add
aaa
cwde
sub
mov
mov
push
xchg
mov
fs
enter
pusha
pop
mov
lahf
test
out
frstorw
sub
sbb
mov
lock
maskmovq
not
fisttp
fwait
ja
ss
cmp
cli
repz
les
or
sub
xor
xchg
out
int3
(bad)
sbb
xor
aaa
aas
inc
jae
out
cmp
outs
add
stos
das
or
pop
test
push
popa
pop
jp
xor
shl
jmp
nop
inc
adc
movs
mov
hlt
sbb
mov
nop
push
add
(bad)
(bad)
fcomp
jne
jno
and
fmul
test
sbb
mov
bound
add
sbb
test
inc
ins
jns
hlt
sbb
ss
jno
inc
addr16
inc
aaa
scas
add
mov
dec
cwde
stos
and
push
inc
popf
pop
adc
inc
xchg
xchg
jb
in
lds
cmps
fdivr
pop
xor
mov
pop
aam
scas
fdivp
pop
jg
cdq
outs
iret
jb
or
jmp
nop
sub
adc
xchg
inc
or
inc
add
inc
in
push
ret
adc
fidivr
sbb
pop
or
jae
mov
jmp
dec
push
cmp
retf
jo
sbb
jne
mov
inc
fwait
mov
inc
ret
mov
and
cmc
mov
loope
call
mov
xchg
cmp
stc
clc
clc
shr
inc
push
pushf
pushf
dec
mul
sbb
(bad)
pop
jmp
pop
pusha
popa
cdq
or
xchg
jns
pop
cmps
movs
mov
adc
cli
push
mov
pop
jo
sbb
or
pop
jl
mov
scas
and
push
adc
sbb
aam
sub
popa
hlt
rcr
les
rsqrtps
jno
int
xchg
jecxz
add
nop
pusha
stos
neg
outs
in
scas
adc
cmp
cmps
popa
call
push
(bad)
in
inc
loop
push
ja
sahf
sbb
mov
stos
mov
sbb
icebp
jb
push
dec
jmp
pop
mov
fistp
push
popf
dec
aaa
or
scas
call
mov
test
ins
ror
les
dec
jmp
stos
test
mov
jmp
mov
(bad)
std
icebp
test
sar
sbb
inc
cmp
sbb
or
mov
mov
loop
jl
xchg
pusha
inc
je
out
sbb
mov
sbb
je
scas
aas
pop
out
xchg
out
fnstsw
lds
pop
fwait
ins
ror
call
clc
xchg
shl
cdq
aam
mov
xchg
cwde
mov
adc
(bad)
nop
icebp
(bad)
push
gs
scas
dec
enter
sub
and
pushf
movq
inc
push
dec
popf
fwait
mov
fcmovne
xor
and
sbb
adc
sbb
xlat
push
push
mov
adc
cld
iret
test
(bad)
imul
imul
(bad)
pop
xchg
xchg
inc
icebp
mov
xor
mov
mov
test
mov
fcomip
mov
icebp
gs
mov
push
and
addr16
pop
ss
mov
push
push
dec
and
sub
lea
jbe
(bad)
sbb
push
sbb
jno
push
add
(bad)
adc
push
(bad)
dec
jnp
lds
mov
inc
mov
call
out
push
lods
sahf
lods
jmp
xchg
push
mov
nop
adc
add
call
aam
call
sbb
in
cmp
pusha
xchg
xor
in
inc
pop
xchg
mov
mov
(bad)
ja
(bad)
sbb
cmp
xor
push
cmp
mov
inc
dec
fimul
xchg
dec
jno
shl
stc
lock
mov
jns
cmp
cli
cmp
lahf
imul
aad
mov
lods
lds
leave
idiv
cmp
loopne
ret
outs
cwde
popf
jne
push
clc
(bad)
pusha
rol
sbb
adc
inc
push
and
int3
push
lock
popa
inc
xor
sbb
ja
xor
into
jnp
test
pop
mov
jmp
or
ror
add
idiv
fs
sub
test
iret
xchg
inc
ret
mov
adc
rol
mov
lods
inc
pop
mov
mov
rep
xchg
jp
or
cmp
or
test
jbe
sahf
xor
movs
xor
jns
mov
retf
adc
test
mov
and
and
mov
pop
push
sar
mov
jmp
sub
stos
mov
clc
sbb
mov
stc
scas
out
mov
jmp
iret
js
mov
inc
sbb
lock
cmps
in
jmp
push
loop
leave
and
pop
inc
cs
jne
cmps
inc
sbb
mov
call
mov
mov
xor
jo
mov
sbb
push
add
mov
fsub
cdq
das
mov
add
jnp
inc
mov
fs
jmp
sbb
imul
sahf
sahf
jmp
ret
mov
hlt
shr
sub
sub
sub
icebp
mov
fs
lahf
sub
add
movs
cmps
mov
fstp
cmp
dec
loopne
sbb
adc
xor
and
arpl
outs
add
aas
sbb
xor
mov
or
mov
jge
into
jmp
sbb
inc
xchg
mov
ins
pop
cmp
test
inc
inc
xchg
scas
jae
outs
test
push
dec
loope
stos
imul
fimul
dec
jnp
dec
xor
mov
pop
out
cld
fistp
rol
push
push
jbe
test
pop
dec
mov
inc
mov
mov
out
fnstenv
(bad)
push
call
mov
addr16
out
and
fimul
mov
sbb
call
jmp
fisubr
push
leave
sbb
retf
jnp
sbb
lods
ins
sbb
sahf
jo
ins
xchg
test
scas
sub
sbb
jp
call
daa
lea
pusha
nop
pop
xor
outs
adc
js
(bad)
mov
and
ficom
shl
in
test
mov
sbb
imul
idiv
jo
cmps
idiv
add
test
nop
lods
sub
adc
out
add
cmp
push
ins
pop
fwait
push
pop
dec
(bad)
stos
call
jmp
inc
push
sbb
dec
pop
adc
or
cmps
je
xlat
xor
lea
jecxz
popf
inc
xchg
in
jp
sbb
mov
inc
mov
jmp
rcr
pushf
ffree
push
ret
call
mov
in
ja
mov
ds
dec
enter
dec
mov
dec
pop
pop
mov
xchg
lods
das
add
fs
aad
mov
sbb
add
or
sub
jle
mov
adc
cmps
pop
pop
daa
cmp
clc
jno
push
pop
ins
pushf
sub
nop
stc
outs
mov
sahf
imul
xchg
adc
adc
lods
sub
mov
inc
adc
lahf
xor
pop
retf
daa
out
cmc
aad
jecxz
add
dec
mov
dec
inc
mov
push
fwait
mov
rcr
mov
sbb
adc
add
lods
push
pop
xlat
sbb
call
loop
xchg
es
fcomp
push
push
and
dec
xchg
iret
xchg
jb
xchg
pop
push
jmp
sbb
fdivr
cdq
leave
nop
jl
shl
repz
cmp
(bad)
outs
mov
clc
push
popf
sbb
pop
jle
outs
inc
jnp
inc
or
stos
lea
and
sbb
imul
movs
std
add
inc
out
sub
cmp
sbb
mov
jnp
scas
loop
mov
sbb
jle
daa
mov
outs
stos
cmc
mov
jmp
add
in
jecxz
rcr
xchg
lods
mov
mov
xchg
bound
leave
aam
cmc
les
scas
movs
pop
rcl
cmp
cmc
(bad)
jae
aaa
push
sbb
pop
lods
imul
xchg
fwait
lea
fwait
aam
mov
push
dec
sbb
add
pop
push
test
sbb
sti
add
pop
inc
std
(bad)
rcr
popf
jl
popf
sti
push
and
pop
shl
sub
mov
cmp
lods
es
retf
int3
stc
inc
js
mov
das
pop
aaa
ret
cli
ret
jo
cmp
cmp
mov
push
scas
(bad)
test
jp
ror
call
shl
pop
xor
pop
mov
lahf
push
and
test
lahf
lock
leave
(bad)
gs
jl
je
ins
rcr
jge
mov
cmps
pop
aam
sti
mov
inc
jae
ret
xchg
and
sbb
ins
mov
sub
jbe
inc
pop
daa
jmp
pop
jbe
jae
outs
pusha
ins
mov
sbb
xchg
aaa
add
pusha
sar
js
mov
dec
xor
add
xchg
inc
shr
push
adc
xor
and
ror
out
sbb
mov
test
(bad)
(bad)
std
loopne
sar
sbb
dec
pop
push
xor
fs
mov
ds
jae
xor
mov
jno
push
lods
mov
enter
add
or
adc
push
es
xchg
pop
icebp
addr16
or
aam
sbb
not
jmp
push
inc
test
out
stc
cmp
out
or
mov
xchg
push
inc
lods
mov
sbb
clc
pop
pop
mov
iret
or
(bad)
jmp
(bad)
push
ins
sti
cmp
out
adc
pushf
(bad)
push
push
jne
loope
sub
daa
in
cmp
mov
sbb
xchg
outs
cs
jnp
cmps
loop
mov
jl
inc
jbe
mov
loope
xchg
jecxz
sbb
hlt
aad
es
into
push
cdq
inc
jp
mov
adc
lock
(bad)
and
mov
push
xor
add
popa
cmps
xor
mov
lahf
fwait
cdq
or
sar
call
inc
xor
mov
pop
adc
pop
lea
xchg
call
pop
fstp
popa
mov
imul
loop
jne
jnp
fwait
mov
aas
mov
mov
xchg
ret
call
scas
scas
dec
loope
cmps
and
fsub
enter
ins
fcomp
add
call
(bad)
sbb
dec
out
sbb
data16
or
scas
pop
cmp
stos
or
aad
or
not
pop
jl
fldcw
hlt
movs
dec
enter
(bad)
shl
mov
jns
xchg
popf
xor
iret
xchg
mov
dec
inc
adc
pushf
push
inc
cmp
cmp
or
(bad)
xchg
mov
and
xchg
int
pop
jbe
jmp
gs
xor
pop
iret
shr
fld
adc
sahf
mov
inc
int3
call
jg
fs
outs
movs
popa
mul
mov
add
imul
movs
mov
mov
int3
aad
mov
jge
cwde
mov
adc
repz
gs
bound
push
sbb
add
xor
inc
sbb
fs
fs
dec
bound
dec
fldz
mov
lahf
rcr
cmovge
dec
mov
cwde
dec
loope
pop
cs
or
inc
scas
mov
js
lea
hlt
xchg
loop
inc
ins
mov
xor
pusha
jmp
jns
mov
cmp
stos
xchg
mov
ret
ret
xlat
movd
jmp
push
inc
sub
inc
push
fwait
jg
mov
inc
xchg
mov
out
mov
clc
pop
pop
inc
scas
jg
mov
jns
rcr
xor
in
jbe
push
cmps
popf
(bad)
sbb
pop
add
neg
xor
call
cs
scas
jnp
and
push
xchg
dec
scas
(bad)
stos
mov
ret
or
and
mov
inc
pop
mov
xor
mov
out
xchg
xor
lock
jp
and
bound
mov
(bad)
add
bound
(bad)
xor
inc
mov
dec
retf
or
jmp
pop
cmp
or
jl
dec
cmp
mov
test
into
mov
cwde
lock
adc
cs
xor
or
call
mov
adc
cmp
stos
mov
fld
jle
inc
retf
cmps
inc
int
adc
mov
cmc
xadd
test
jbe
mov
rol
test
call
fisttp
push
inc
or
repz
fwait
dec
add
dec
pop
pushf
arpl
out
xchg
call
(bad)
sub
mul
add
std
sbb
stos
or
popf
outs
or
xchg
test
add
pop
popa
jbe
push
(bad)
xchg
hlt
js
hlt
mov
popf
je
jmp
cld
lahf
les
mov
inc
in
lods
sbb
inc
lods
test
fimul
ss
sub
retf
shl
push
cmp
pop
imul
daa
push
mov
push
jmp
test
lds
sub
jbe
scas
cmp
adc
dec
test
dec
sahf
mov
inc
mov
addr16
je
pop
lea
test
push
in
or
xor
mov
dec
push
mov
xchg
div
xchg
mov
div
xor
out
pop
add
mov
push
xchg
pop
mov
cmps
pop
rol
push
add
adc
test
mov
test
mov
fwait
add
xchg
inc
iret
iret
jnp
outs
fst
sahf
repnz
pop
pop
(bad)
sti
lods
or
adc
stos
mov
jle
xchg
cmp
inc
stos
jecxz
push
pop
pushf
(bad)
outs
fwait
dec
ror
sbb
neg
push
in
popa
adc
and
mov
xlat
inc
ret
fisub
mov
inc
int
ss
adc
std
imul
pop
add
stos
movs
outs
add
jp
test
add
pop
and
popa
cmp
(bad)
cmc
in
adc
in
inc
imul
dec
pop
cmps
mov
test
in
mov
out
dec
retf
push
pop
or
(bad)
jecxz
loope
jb
bound
jb
jnp
mov
sbb
push
inc
inc
int
adc
fs
pop
adc
sub
push
pop
movs
mov
imul
push
cwde
test
inc
xchg
mov
push
mov
popf
xchg
mov
xchg
or
push
mov
scas
pushaw
lahf
pushf
hlt
pop
inc
(bad)
repnz
mov
fimul
push
cmps
adc
fcmove
retf
jg
pop
inc
jl
lea
inc
pop
xchg
outs
jmp
xchg
sti
fbld
jecxz
dec
sbb
mov
cmovo
(bad)
jmp
ret
cmps
add
test
lahf
test
xchg
fmul
inc
retf
xor
stos
xchg
cdq
sar
mov
mov
sti
retf
(bad)
int3
xchg
popf
mov
or
dec
cmc
test
jp
sub
or
fisttp
inc
pop
popf
data16
mov
push
fstp
repnz
jns
jecxz
adc
out
adc
adc
pop
imul
sbb
add
mov
add
dec
push
fimul
cmps
aad
out
in
xchg
lahf
jge
(bad)
les
mov
dec
mov
mov
mov
fimul
call
sbb
fs
inc
mov
pop
sub
xchg
sub
shl
or
jmp
pop
or
xor
jl
push
pop
mov
fisttp
inc
adc
and
add
mov
inc
pop
pop
mov
mov
xchg
mov
push
in
(bad)
stos
jnp
sbb
or
out
ds
ret
out
dec
mov
(bad)
das
pop
sbb
cmp
push
mov
inc
sub
adc
repz
test
inc
outs
jns
shl
jg
adc
cmp
nop
jge
test
bound
and
aaa
xchg
shl
je
ds
dec
cwde
into
jmp
es
icebp
xor
dec
lea
pop
outs
mov
loopne
scas
mov
xchg
dec
(bad)
jo
dec
sbb
nop
cli
mov
ret
aas
pop
jl
cmps
xor
cs
or
rcr
fsubr
shufps
ins
pop
inc
rcl
es
(bad)
pop
mov
push
dec
mov
inc
rol
lahf
(bad)
(bad)
ins
dec
xor
into
mov
cli
adc
call
fcom
cmp
jmp
(bad)
outs
scas
mov
sbb
cli
imul
sar
mov
neg
cmp
pusha
rol
add
imul
dec
push
push
test
pop
icebp
fs
add
adc
sub
popf
push
scas
inc
ins
mov
and
outs
pop
sub
rcl
mov
pop
movs
dec
out
repnz
mov
xchg
add
dec
lods
pushf
sar
adc
inc
pop
mov
fcmovnb
mov
test
mov
icebp
adc
not
lods
in
pop
cmp
call
push
mov
mov
sub
push
(bad)
cli
js
xchg
sbb
add
or
add
dec
test
mov
mov
call
mov
inc
dec
ins
fcomp
mov
mov
dec
leave
loope
adc
dec
lock
mov
in
xchg
mov
mov
mov
jmp
sti
scas
pusha
loope
jnp
addr16
outs
push
inc
mov
push
cmp
test
push
pop
cmp
sbb
xor
mov
inc
dec
sar
rcr
test
mov
pop
xor
stos
mov
in
inc
inc
xchg
cmps
in
cmps
jmp
ja
mov
lock
jg
mov
inc
sbb
leave
stos
outs
and
jp
mov
jae
jl
push
or
fxch
mov
add
jne
cmp
cmp
in
sbb
aaa
jmp
ja
je
icebp
pop
xchg
cs
push
popf
or
mov
pop
mov
xor
retf
cmps
daa
test
push
arpl
dec
rcr
xchg
mov
xchg
pop
lock
cmps
neg
xchg
xchg
mov
sbb
ret
pop
pusha
mov
hlt
adc
sbb
xlat
retf
inc
stc
aaa
jl
push
sub
inc
push
dec
mov
or
dec
f2xm1
jl
add
add
xor
jle
or
adc
mov
in
fdivr
test
lahf
ins
clc
call
cmc
mov
push
mov
xchg
add
imul
call
dec
ret
lock
mov
dec
push
add
xchg
pop
pop
or
sub
movs
push
xor
xchg
pop
or
dec
(bad)
jl
std
fs
jle
clc
adc
push
jo
fwait
ds
pushf
dec
pop
test
lahf
mov
or
push
stos
xchg
arpl
jne
jl
dec
loope
loope
cmps
jecxz
inc
mov
push
and
in
cmps
pushf
mov
or
dec
js
mov
cmp
loope
mov
ror
call
(bad)
pop
dec
leave
xlat
(bad)
pop
call
fs
push
mov
dec
cmp
xchg
dec
call
jnp
les
push
push
je
jmp
stos
pop
stos
dec
ins
test
dec
addr16
test
stos
xchg
add
fs
mov
scas
sahf
push
adc
fs
mov
lods
es
inc
mov
mov
mov
mov
mov
mov
dec
retf
je
push
push
sbb
(bad)
scas
jg
xor
or
pushf
inc
pop
inc
cmc
(bad)
mov
cli
in
jp
rol
inc
cmp
sub
add
add
push
jns
push
xchg
nop
cmps
cmp
or
inc
stos
mov
jl
push
frstor
ret
div
xlat
xchg
pop
sar
test
fwait
je
movs
pushf
loope
sbb
adc
hlt
mov
repz
mov
xor
out
int3
call
xor
sbb
pusha
xor
or
pop
repz
ret
mov
pop
cmc
and
or
xor
inc
sar
push
lods
xchg
mov
cli
enter
ret
pop
lock
mov
mov
mov
sub
(bad)
test
push
mov
in
scas
aad
push
xor
invd
cmp
(bad)
daa
nop
sbb
sbb
pushf
sub
mov
retf
test
jmp
push
sbb
sbb
pop
mov
fcomp
jbe
ud2
rcr
adc
dec
and
lock
outs
gs
test
cmp
aad
dec
dec
retf
cmc
mov
or
sbb
in
in
fdivr
dec
je
mov
gs
pop
pop
(bad)
xlat
pop
ror
jo
movd
push
pop
push
cmps
xchg
call
stc
add
sub
xor
add
out
das
xchg
ja
push
aam
jp
and
fiadd
jmp
add
retf
mov
(bad)
loopne
loope
int
fs
(bad)
rcl
mov
pop
inc
cdq
mov
aad
fucom
push
sbb
test
jg
aas
push
cmp
imul
imul
and
adc
or
pop
cmp
sbb
xchg
inc
xchg
lods
(bad)
sbb
adc
cld
test
xor
cmp
fdiv
mov
test
xlat
cdq
jg
repnz
or
inc
stos
stc
mov
bound
fld
push
(bad)
and
in
xchg
ret
xor
cmp
daa
lods
ins
sub
(bad)
dec
push
rol
cmp
jp
push
fsubr
push
popa
push
pop
mov
shl
push
push
xor
in
mov
sbb
hlt
cmc
mov
xlat
ins
jne
fldcw
popf
test
inc
mov
mov
int3
lahf
sbb
stc
mov
pop
cmp
rcl
inc
js
lds
xchg
cli
mov
and
jmp
lock
cmp
aas
jge
div
dec
xchg
xchg
pop
(bad)
rcr
mov
pop
cli
push
ds
jno
stos
ss
ds
push
fimul
sbb
mov
adc
fist
xlat
pop
push
daa
lods
dec
xchg
out
out
mov
cld
lahf
gs
neg
mov
ficom
xchg
mov
and
push
hlt
in
loopne
je
xchg
das
rcl
pop
dec
loope
ret
popa
fidivr
jb
outs
shr
push
lods
xor
push
mov
mov
add
jmp
inc
addr16
inc
ja
add
cld
inc
jns
push
and
push
push
popf
fcomp
loop
mov
mov
pop
inc
test
sbb
sar
hlt
sub
push
idiv
fwait
mov
lahf
sbb
cmps
mov
mov
sahf
lea
int3
jg
dec
or
and
push
and
mov
mov
icebp
jno
icebp
gs
pop
sbb
and
jbe
mov
mov
xchg
ds
mov
aaa
inc
retf
std
movs
adc
dec
push
test
lock
xor
xchg
push
dec
enter
enter
scas
lds
test
mov
int
repnz
push
pop
mov
sbb
push
(bad)
rep
push
call
dec
pop
test
ss
mov
or
ins
out
sar
jecxz
inc
add
test
pop
or
inc
sbb
inc
xchg
stos
cmp
div
dec
jl
fcomp
pushf
clc
pusha
mov
mov
add
in
mov
mov
mov
ret
stos
xchg
je
jl
inc
pop
sub
cld
and
dec
xchg
push
push
jb
outs
aas
adc
cmp
jp
repnz
dec
mov
push
das
mov
movs
pop
daa
mov
aad
imul
xchg
cmp
popa
mov
mov
mov
add
push
mov
sbb
mov
popf
add
ret
hlt
mov
jg
cmp
or
iret
rcr
inc
fmul
dec
daa
sahf
dec
cmp
stos
mov
repz
in
pop
adc
or
add
dec
ja
inc
inc
test
dec
movs
xchg
not
and
(bad)
jmp
push
mov
jle
repz
mov
mov
loope
mov
fstp
pop
mov
xor
pusha
mov
enter
mov
mul
fmul
or
pop
les
push
test
cmps
cdq
xchg
adc
fist
mov
xor
cmp
add
mov
aad
sbb
dec
jb
out
xchg
adc
addr16
in
xchg
shl
add
xchg
pop
mov
mov
push
test
mov
cmc
retf
fsub
add
out
push
pop
push
(bad)
icebp
int
iret
pop
jns
cmp
xor
cmps
bound
jl
mov
jmp
push
addr16
add
xor
or
xchg
pop
xchg
adc
dec
push
push
jo
xchg
fwait
sbb
sbb
lahf
in
cmps
xor
je
and
fstp
mov
push
shl
inc
cmp
retf
mov
icebp
add
mov
bound
jmp
hlt
xchg
xchg
mov
cmp
or
dec
cld
adc
ds
stos
cmp
call
xchg
sub
test
test
jle
addr16
sub
add
cmc
pop
lahf
and
dec
sbb
jns
retf
sub
jno
mov
add
mov
dec
cmova
jle
jmp
mov
mov
repz
mov
rol
sub
popa
push
mov
fisubr
xchg
mov
inc
cmp
mov
fldenv
inc
jnp
cmp
xchg
inc
or
test
out
shr
xchg
rcr
xor
jl
mov
push
jbe
cmovne
cwde
add
dec
mov
pop
stos
mov
je
pop
fdiv
mov
mov
or
call
repnz
add
iret
fadd
(bad)
fnsave
hlt
push
int
sbb
cmc
retf
(bad)
and
scas
push
pop
js
pusha
ss
xchg
mov
push
test
ja
add
cmp
mov
push
push
mov
dec
xchg
mov
sbb
xlat
jg
jo
dec
xlat
lahf
sti
jns
fisttp
xor
call
mov
mov
mov
cmp
dec
sbb
stc
push
push
or
test
push
in
jae
jl
ins
inc
jge
inc
cs
mov
iret
push
pop
aad
(bad)
fidiv
xchg
jge
inc
cmp
sbb
and
fmul
lea
mov
jl
mov
dec
loopne
xchg
sub
mov
(bad)
bound
sahf
jae
xchg
jle
mov
pop
out
jp
repz
mov
cld
test
jo
mov
xor
stc
mov
mov
sub
ret
xchg
retf
add
es
xor
or
iret
mov
push
stc
pop
call
push
jl
inc
shl
pusha
add
xchg
bswap
jle
jge
(bad)
push
or
test
cs
test
pop
rol
movs
imul
cld
pop
cwde
mov
inc
pop
xchg
fcomip
jno
je
xchg
rcr
sbb
mov
cwde
mov
mov
xor
lods
push
les
push
and
test
push
xor
popf
or
in
add
lock
inc
push
fisub
imul
lods
add
stos
jb
mov
mov
fldz
sahf
and
jmp
popa
cdq
mov
jp
retf
loop
popf
mov
stos
aaa
int3
addr16
mov
int
mov
lods
and
retf
adc
xchg
pop
sti
push
call
(bad)
imul
aas
sbb
pop
add
sahf
xor
cmp
lea
inc
dec
jmp
sub
das
and
lock
cdq
push
sbb
das
push
fwait
mov
(bad)
popf
sbb
sti
inc
cli
dec
jbe
xchg
retf
mov
mov
or
inc
cli
lahf
fwait
in
pop
pushf
ja
cdq
les
xchg
rcl
arpl
jmp
push
or
fdiv
inc
iret
push
push
jbe
cdq
sbb
mov
mov
stos
dec
sbb
xchg
retf
push
push
in
xor
add
icebp
pusha
inc
ror
mov
gs
scas
mov
leave
rol
dec
outs
mov
inc
loopne
loope
enter
aad
movs
sub
inc
mov
add
xor
(bad)
cmp
(bad)
pop
retf
sbb
sbb
enter
xor
sub
xchg
dec
sbb
sahf
cmp
sar
hlt
cmp
loope
ins
js
retf
inc
xor
add
cmps
jns
mov
push
mov
stos
sub
stc
mov
std
js
pop
mov
cmps
out
xchg
call
bound
cmc
inc
mov
into
sbb
sahf
adc
fdivp
xchg
fstp
xor
jno
dec
es
out
retf
pusha
fwait
sbb
pop
dec
mov
dec
sub
mov
mov
(bad)
and
inc
cli
sub
push
xor
pop
sbb
jl
scas
cmp
imul
ds
cmp
cmc
arpl
bound
test
fs
loopne
rol
sub
pop
mov
lods
jmp
cmps
bound
fwait
scas
popa
pop
xchg
retf
repnz
enter
scas
jns
dec
out
add
(bad)
test
cmp
xor
push
pop
in
mov
lock
in
daa
xchg
inc
cmp
sub
icebp
arpl
push
mov
push
fcomp
fnstcw
xchg
jg
popf
mov
fnstsw
adc
in
add
(bad)
lock
inc
mov
lea
mov
(bad)
sub
ds
(bad)
hlt
gs
aas
jo
cmp
gs
dec
mov
test
sbb
outs
adc
mov
pop
clc
push
sbb
addr16
mov
cld
addr16
nop
je
rcr
or
in
pop
iret
mov
pop
push
mov
out
jmp
dec
(bad)
xchg
pop
add
xlat
repnz
shl
adc
add
adc
xchg
out
in
xlat
outs
sbb
fwait
push
out
ss
sub
lods
dec
popf
and
adc
xchg
inc
add
mov
mov
sub
fs
into
push
mov
inc
addr16
clc
and
ja
test
mov
lods
nop
xchg
adc
mov
and
pop
jnp
popa
mov
fiadd
fmul
sub
movs
(bad)
or
inc
cmps
in
shl
mov
nop
add
icebp
loop
hlt
fmul
lods
stos
jo
dec
call
out
stos
fs
push
cmp
sub
mov
mov
int
(bad)
nop
or
pop
cmp
adc
sub
sub
and
js
mov
pop
lods
mov
jb
in
mov
xchg
loop
xlat
inc
inc
jnp
push
xor
sbb
out
hlt
mov
int
xchg
mov
jmp
fidiv
xchg
hlt
rcl
dec
push
in
mov
sub
push
loop
push
or
sbb
xor
leave
dec
pop
lods
inc
rcr
or
adc
adc
pop
sbb
ror
fisttp
lahf
and
movs
mov
jge
les
fild
dec
mov
pop
loop
xchg
pusha
aad
sbb
aad
mov
shr
test
enter
pusha
fwait
rcl
aad
inc
push
xchg
xchg
xor
push
xor
cmp
shr
or
jno
mov
adc
xchg
(bad)
cs
jne
pop
pop
jmp
cmp
sbb
inc
out
mov
xor
push
pop
(bad)
xlat
mov
scas
(bad)
pop
loope
pop
ins
xchg
jo
xor
xchg
out
mov
adc
nop
pop
and
ja
mov
fcmovnu
mov
popf
(bad)
xor
cmp
lock
pushf
cmp
dec
les
imul
mov
in
or
adc
inc
sub
outs
jl
add
movs
push
mov
mov
std
in
call
jg
nop
das
lds
xchg
dec
lock
dec
sub
rcr
lahf
cli
inc
popf
ins
inc
movs
mov
jl
fadd
outs
xchg
test
push
mov
inc
sub
iret
xlat
dec
out
and
and
inc
movs
and
mov
mov
push
add
mov
push
or
adc
aaa
imul
sahf
sbb
pushf
pop
pop
scas
cmp
sbb
dec
retf
out
inc
pushf
out
inc
ret
dec
fs
cdq
dec
icebp
sar
movs
int
dec
inc
cmc
daa
hlt
push
cmc
mov
push
and
(bad)
outs
pop
mov
dec
lea
cmp
cmp
fisubr
pop
push
mov
bound
pusha
out
ret
push
sbb
push
ret
mov
cmp
sbb
add
cmp
ss
dec
xchg
mov
pop
clc
lock
sbb
loop
rcr
mov
loopne
ret
xor
xchg
jae
(bad)
mov
icebp
test
pop
add
push
lods
shr
xchg
mov
sub
dec
frndint
call
pusha
addr16
imul
aam
ret
pushf
(bad)
data16
aad
imul
in
and
xchg
push
add
imul
xor
push
(bad)
pop
test
inc
inc
popf
pusha
popf
mov
call
and
stc
pushf
or
jne
mov
sbb
loopne
xchg
xchg
sub
sub
rcl
rcr
or
outs
mov
xchg
inc
std
(bad)
js
mov
and
xor
stos
push
int
enter
inc
cmp
inc
inc
mov
push
fs
scas
mov
retf
pop
pusha
push
ror
(bad)
(bad)
dec
in
lahf
outs
sar
mov
aam
movs
div
popa
cmps
movs
nop
das
add
fld
mov
fs
dec
(bad)
adc
sub
int
js
inc
pop
cmp
sbb
test
sub
mov
mov
aaa
icebp
add
(bad)
ins
or
out
or
push
push
js
and
dec
fnstsw
lods
adc
mov
add
jl
out
and
pop
bound
fwait
rcr
push
imul
xchg
ja
pop
mov
sahf
jbe
sbb
hlt
fdiv
push
and
sub
(bad)
pushf
cs
or
push
jp
mov
stos
mov
sub
mov
adc
push
pop
dec
mov
cmp
adc
std
jnp
fisttp
and
xchg
mov
leave
ficomp
inc
data16
pop
fcmovne
lock
movs
retf
ret
or
shr
mov
add
lock
mov
mov
out
mov
aad
lds
bnd
or
and
push
mov
sbb
mov
jmp
dec
jne
sub
cmp
fs
loop
fwait
daa
fcomp
dec
mov
inc
mov
mov
(bad)
xor
icebp
pop
mov
call
jmp
inc
add
ret
cmps
sub
inc
lock
jno
call
cli
(bad)
push
lods
test
lock
fld
xlat
jle
dec
imul
sahf
push
pop
push
scas
xchg
call
enter
push
push
push
cmp
xor
pop
sub
pop
iret
das
lods
pop
jns
dec
inc
mov
mov
xlat
in
loopne
mov
push
pop
call
in
mov
(bad)
cmps
inc
ss
ror
ror
or
repz
out
lds
mov
test
in
pop
fisttp
dec
fdiv
inc
and
mov
int
retf
mov
pop
sbb
sub
gs
mov
movs
jge
xchg
cmp
test
cmp
not
lds
add
movs
imul
xor
stos
xchg
je
mov
mov
jmp
aam
mov
xchg
jl
lock
mov
test
outs
test
xor
and
inc
call
push
scas
sub
in
and
push
fnsave
xchg
daa
mov
mov
arpl
add
scas
test
mov
jb
pop
sbb
push
rcr
cmps
dec
in
cmps
inc
ss
fadd
xchg
pushf
fidivr
lahf
ja
xchg
clc
jecxz
ins
pusha
xchg
(bad)
ss
push
idiv
sbb
enter
loopne
pop
pop
cmp
aaa
dec
push
popf
push
sbb
xchg
lods
sbb
out
jmp
push
and
push
push
outs
cmp
pop
pop
stos
pop
sbb
add
mov
fsubr
call
pop
and
dec
aad
mov
leave
out
leave
cld
or
(bad)
adc
jl
mov
je
mov
enter
add
call
daa
jecxz
enter
dec
sub
sbb
cwde
or
stos
mov
out
shl
mov
add
adc
pop
mov
pop
into
inc
(bad)
fidiv
mov
pop
xchg
enter
mov
arpl
dec
jl
cwde
push
out
std
inc
xchg
in
push
pushf
stos
push
push
test
jne
outs
call
mov
mov
ret
shl
pop
jp
aam
xchg
jp
pop
sub
aam
mov
push
pusha
mov
dec
cmp
mov
retf
or
les
mov
icebp
pop
ins
ja
out
inc
ds
xor
imul
pop
sub
imul
aaa
pop
cwde
mov
push
mov
jl
fimul
movs
(bad)
inc
fwait
out
push
xchg
test
mov
lds
fwait
mov
sbb
adc
repnz
sar
mov
cmp
dec
ror
retf
and
les
es
cmp
or
sbb
imul
nop
mov
sub
add
adc
push
xor
xchg
xor
jmp
inc
scas
mov
outs
jnp
pushf
push
and
pop
push
xchg
retf
iret
dec
not
push
xchg
ret
xchg
sbb
fidivr
mov
push
loope
stos
pop
daa
cmp
cli
xor
sbb
cmp
inc
lods
push
push
ja
mov
inc
ret
(bad)
push
inc
xor
cmp
bound
xchg
jns
cli
fwait
and
jns
push
test
mov
cld
pop
push
(bad)
call
call
shl
fwait
ret
xchg
sbb
push
jne
mov
push
pop
xor
jmp
dec
and
adc
jb
push
pop
jo
retf
xchg
fcmovnu
bsr
pusha
jo
push
mov
sbb
imul
pop
xchg
mov
jno
cmp
enter
int
icebp
bound
pop
mov
mov
lock
leave
fxtract
aaa
aad
xchg
xchg
mov
jp
mov
jmp
stos
sub
jne
cmp
xor
aam
jns
cmp
aas
pop
inc
mov
mov
fcomp
mul
(bad)
ficomp
pop
fcom
sbb
aaa
jmp
xchg
scas
dec
addr16
xchg
test
pop
outs
(bad)
scas
mov
mov
pop
cld
inc
popa
and
bound
mov
xor
js
mov
sbb
mov
shl
fwait
dec
ficom
dec
push
cs
(bad)
inc
out
cmp
add
movs
or
mul
pop
scas
fnstenv
jl
repz
and
or
daa
jmp
inc
mov
jae
mov
jns
fsub
jp
inc
call
ret
hlt
mov
cmps
adc
outs
call
ins
jecxz
popf
push
cmp
test
sbb
aad
xor
data16
add
lods
pop
inc
dec
xchg
xchg
jbe
fcomp
lahf
repz
jl
push
mov
pop
mov
nop
or
dec
inc
add
das
push
mov
jnp
in
test
fisttp
pop
fwait
pop
popf
movs
aad
xchg
lock
adc
repnz
xchg
fs
fwait
nop
es
cli
pop
pop
and
add
jae
dec
add
test
outs
and
inc
aaa
or
pop
cmp
inc
sti
aad
test
jle
jl
stc
add
lea
test
ficomp
stos
pop
add
sub
xchg
mov
iret
scas
mov
loop
jbe
mov
cmp
repz
test
out
test
xchg
cmp
lods
rcr
ins
pop
mov
jmp
(bad)
retf
aaa
push
sub
or
pushf
jo
push
jmp
push
fimul
add
mov
xor
push
test
scas
sbb
or
jns
jnp
ror
xchg
std
cmp
iret
mov
mov
enter
xchg
ret
push
cmps
push
outs
mov
repnz
add
(bad)
lock
in
arpl
fistp
add
in
icebp
out
imul
jnp
cmp
pop
or
inc
fistp
repz
add
or
push
or
lods
push
fwait
je
inc
push
scas
push
(bad)
push
inc
in
xchg
fst
mov
aam
push
jl
outs
fnstenv
dec
enter
enter
xchg
sbb
cmps
addr16
mov
xchg
sub
scas
inc
leave
jo
inc
aaa
cmp
enter
jge
pop
sbb
mov
xchg
sahf
leave
adc
idiv
int
mov
and
and
out
pop
retf
imul
dec
mov
inc
xchg
mov
sbb
es
out
cmps
dec
into
xchg
jnp
pop
jae
or
shl
test
rol
out
sbb
mov
fild
nop
enter
enter
xlat
push
outs
mov
(bad)
cmp
jb
inc
push
sub
sbb
mov
dec
mov
add
pop
(bad)
and
inc
jmp
or
mov
popa
mov
dec
cwde
lock
pop
mov
imul
call
lahf
jbe
out
and
pop
lods
test
retf
dec
mov
addr16
les
xchg
test
xchg
fmul
sub
adc
sub
xlat
scas
push
push
adc
xchg
inc
push
push
in
cdq
iret
mov
ss
mov
inc
rol
or
(bad)
das
sahf
or
push
pop
fldcw
pushf
or
imul
cmp
js
adc
test
retf
std
xchg
jns
cli
loope
ins
call
or
shl
jmp
inc
jns
lahf
jae
and
jmp
add
je
jnp
jp
mov
xchg
xor
mov
test
dec
push
inc
and
adc
stos
add
xchg
shl
push
aaa
and
clc
xchg
sbb
arpl
fiadd
loope
pop
or
mov
fnstcw
mov
out
mov
mov
or
ds
in
popa
(bad)
cmp
or
sub
pop
push
mov
stos
xchg
es
lock
sti
fistp
in
gs
inc
aas
jmp
add
fnstcw
ret
mov
and
ins
ret
es
lds
mov
ret
ds
dec
inc
test
in
push
mov
mov
xchg
xor
and
mov
cmp
rcl
pop
movs
or
jmp
mov
fld
fild
mov
movq
mov
aaa
mov
or
inc
dec
mov
push
inc
out
xchg
cmps
and
push
jge
fld
shl
lahf
jle
mov
ins
cmps
in
dec
loop
pop
push
std
mov
pop
js
loopne
test
push
fld
mov
popf
test
and
cmc
hlt
retf
cmp
adc
imul
(bad)
les
loop
add
sbb
and
pusha
adc
and
jnp
mov
dec
xchg
add
xchg
call
fwait
aas
mov
pop
daa
mov
cmp
mov
sub
jge
sahf
shr
sbb
mov
inc
(bad)
fst
mov
dec
in
jnp
cmp
daa
cmc
lds
push
jno
outs
pop
inc
stos
jns
outs
mov
aaa
ror
fsubr
mov
adc
sbb
gs
or
jo
test
inc
add
scas
retf
add
jnp
stc
mov
shl
mov
outs
mov
mov
xor
cli
div
into
adc
mov
adc
shl
pop
lea
pop
and
fsub
pop
daa
jo
imul
push
jmp
inc
into
int3
xor
push
out
add
jo
stos
and
add
cdq
(bad)
xor
or
out
add
inc
inc
nop
push
lds
jmp
push
(bad)
aam
and
sbb
lahf
outs
pop
in
fwait
scas
sbb
cmp
test
dec
ror
or
sub
inc
pop
push
inc
cmps
das
jnp
call
mov
in
fnstcw
aam
outs
pop
dec
stc
add
jle
imul
ins
cmps
or
mov
add
and
pop
sbb
cmp
(bad)
movs
pop
sub
fdiv
aaa
in
imul
js
scas
stos
add
xor
rcr
ins
adc
jae
sub
sub
lock
mov
adc
jle
(bad)
mov
adc
aas
test
jb
pop
inc
enter
sub
ins
adc
pop
test
mov
aam
loopne
scas
bnd
jnp
cmp
inc
mov
out
sub
stos
lods
jae
sbb
mov
mov
xabort
mul
mov
dec
xchg
xor
fdiv
push
fdiv
jle
push
mov
pop
add
test
retf
std
je
(bad)
cmp
pop
xor
add
fwait
sbb
mov
sbb
dec
popa
cdq
(bad)
cld
or
push
jae
ror
leave
push
add
ins
xchg
push
aam
lea
call
mov
mov
sbb
or
ja
dec
cmp
jmp
sbb
push
add
xor
call
jp
xchg
pop
fs
xor
cmp
pop
daa
xchg
or
test
mov
mov
cmp
popf
(bad)
loope
mov
data16
scas
xchg
leave
out
out
mov
fcmovu
(bad)
sbb
jnp
mov
inc
je
sar
sbb
xchg
addr16
imul
fidiv
sbb
sbb
sbb
xchg
cwde
mov
dec
fwait
jmp
adc
inc
sub
adc
or
ins
aas
mov
mov
jmp
pop
gs
cmps
test
(bad)
ret
jo
jns
inc
lods
ss
ret
ins
out
test
mov
stos
jno
push
xchg
xchg
mov
push
mov
sti
fistp
mov
aam
and
shl
fbld
inc
dec
sub
sbb
xchg
push
pop
in
push
icebp
stc
pand
pop
jne
fimul
ja
jno
sbb
dec
xor
mov
out
int3
xchg
mov
jg
bound
lods
sub
sti
xlat
mov
push
shl
pushf
xor
je
mov
push
jno
mov
loop
loop
pop
ins
lahf
mov
pop
repz
aas
sbb
fcomip
jnp
pop
inc
jp
mov
inc
cmp
push
sub
mov
inc
repnz
mov
inc
jb
aad
adc
and
jl
pushf
push
and
xchg
and
in
retf
retf
jle
inc
mov
fs
xchg
shl
mov
mov
lock
fstp
loope
add
retf
fst
cmp
ret
dec
call
cmp
lds
push
and
jbe
mov
xchg
xchg
pushf
dec
add
mov
inc
sbb
ds
and
and
sti
dec
mov
xlat
push
data16
xchg
adc
push
xor
scas
lahf
adc
jmp
in
gs
fdiv
shl
xchg
shl
(bad)
(bad)
popf
or
pop
mov
ins
data16
lock
repnz
jmp
ror
sub
nop
rcl
push
lds
sub
pop
ins
out
mov
in
push
(bad)
aas
fwait
lea
inc
aas
mov
add
and
ret
mov
pop
mov
push
cmp
aam
and
pop
daa
nop
dec
lock
(bad)
jb
rcl
xor
dec
mov
inc
fwait
sub
adc
stc
jmp
ret
scas
scas
dec
les
or
out
pop
pushf
inc
push
sbb
mov
pop
push
stos
ins
es
cwde
mov
mov
and
inc
leave
nop
or
xchg
inc
ins
pop
or
cmp
add
adc
js
adc
xchg
cld
test
inc
test
popa
es
jge
mov
inc
xchg
hlt
cmps
jmpw
and
loope
cmp
dec
mov
ins
gs
xchg
pop
add
lds
icebp
mov
jns
sbb
loopne
fwait
sbb
sub
jp
imul
mov
jge
mov
sub
ins
inc
cmp
ss
sbb
cmp
jnp
xlat
mov
xlat
lods
cwde
inc
xchg
lea
hlt
pop
gs
xchg
pop
aad
out
call
sub
enter
jle
mov
push
jp
mov
add
mov
sbb
sbb
fcmovnbe
sub
cs
pop
sahf
sbb
push
mov
mov
test
loopne
add
es
sbb
popf
add
or
push
inc
neg
jge
lods
jmp
xlat
adc
inc
lea
xchg
cli
ins
loop
cmps
push
popf
stos
push
or
fild
loope
int
cwde
sbb
data16
out
stc
test
mov
sbb
ds
fsubr
daa
icebp
inc
push
or
lahf
adc
mov
lds
sbb
enter
sbb
inc
push
push
adc
xchg
sbb
add
lea
push
mov
jns
lods
xchg
add
not
dec
jp
lods
and
cld
test
xchg
(bad)
icebp
mov
clc
pop
or
pop
mov
mov
test
ret
nop
lods
push
jmp
lds
dec
mov
dec
outs
lea
inc
cmps
xchg
lea
sbb
into
inc
pop
sbb
add
cmc
pop
(bad)
and
sbb
cdq
test
sbb
dec
cwde
lods
inc
xchg
out
jg
push
js
popf
popa
cmc
cwde
cli
jle
sar
xor
hlt
mov
mov
sbb
sti
fwait
mov
pmaxub
mov
in
ja
mov
xor
test
addr16
sbb
cmp
or
mov
retf
pop
(bad)
sbb
dec
std
adc
sbb
xor
inc
pusha
xchg
mov
mov
lea
sbb
pop
jmp
pop
(bad)
pop
bound
pop
(bad)
(bad)
rol
adc
xor
inc
cmps
test
bound
mov
and
(bad)
movs
lods
sar
xchg
cmps
sub
ja
push
push
dec
rol
aad
enter
jo
xor
mov
cdq
mov
pop
fst
pop
and
sub
pop
cmp
mov
fs
mov
cmp
xchg
sub
xor
jmp
inc
retf
and
inc
hlt
mov
loop
cld
lahf
pop
das
jmp
mov
dec
bound
int
mov
mov
(bad)
aaa
dec
jmp
scas
je
daa
push
sbb
pop
bound
push
ins
xchg
mov
hlt
inc
rol
ret
(bad)
add
ja
(bad)
xor
jns
popa
mov
arpl
ja
xchg
and
or
push
mov
or
adc
fadd
repnz
xchg
mov
jne
adc
shl
and
int
mov
xchg
daa
inc
int
test
out
jle
test
(bad)
and
cmc
mov
and
sbb
or
cwde
push
sub
mov
mov
dec
adc
sbb
cmp
cld
sbb
sbb
mov
in
mov
(bad)
dec
pop
push
lods
push
into
jmp
call
cmp
inc
test
cmps
out
mov
mov
mov
lods
test
sub
and
sahf
cmp
js
pop
bound
outs
or
xchg
dec
sub
fisttp
cli
xor
arpl
or
js
(bad)
jb
xchg
xchg
sar
mov
lahf
sub
in
dec
shl
add
pusha
xchg
mov
imul
xchg
aaa
xchg
or
stos
outs
call
push
clc
retf
in
cs
and
push
xchg
arpl
pop
stos
mov
jmp
mov
daa
in
xor
lods
cmp
jle
sbb
js
aad
push
mov
cmp
call
mov
inc
test
(bad)
js
stos
stos
ja
xor
(bad)
sti
movs
in
adc
sbb
mov
stc
xlat
cmp
fld
je
cmp
jecxz
mov
in
pusha
or
cdq
push
dec
and
mov
popa
cdq
fbld
ret
xchg
add
imul
and
pusha
dec
(bad)
dec
aas
fnsave
sbb
inc
sbb
fnsave
out
jl
fisubr
mov
push
xchg
(bad)
xchg
ins
xchg
mov
push
out
lds
mov
jb
test
int3
sbb
mov
or
iret
lock
inc
add
es
pop
pop
jno
xor
call
pop
int
fprem
pop
ret
pop
pop
daa
retf
inc
cs
cmc
and
fisttp
pop
mov
outs
mov
push
(bad)
in
mov
jne
mov
jns
into
mov
sbb
icebp
mov
fwait
mov
pop
test
icebp
test
sti
pop
jne
cmps
gs
into
sub
dec
jbe
shl
inc
pusha
test
sbb
mov
mov
(bad)
call
push
ss
popa
(bad)
cmp
xor
nop
(bad)
and
inc
retf
sbb
clc
pop
sar
sahf
jg
xchg
in
cdq
in
xor
dec
adc
in
pop
mov
dec
jle
cmps
popf
sbb
jecxz
(bad)
aam
outs
mov
clc
dec
add
ret
push
loop
inc
pusha
arpl
or
ret
mov
push
(bad)
jecxz
push
sbb
push
sbb
or
sbb
dec
and
mov
in
pushf
add
pop
dec
popf
inc
adc
mov
cmps
push
cmp
ror
xchg
jmp
fcom
jb
dec
pop
push
loop
fcom
sbb
dec
popf
or
mov
sub
lahf
retf
out
loopne
or
in
and
daa
mov
shl
mov
cmpxchg
sbb
mov
mov
inc
test
jbe
js
call
fsubr
jbe
aad
xchg
or
pop
cmp
sbb
cmp
pop
pop
loop
pusha
call
repz
jp
push
or
js
push
or
cmc
lahf
mov
pop
loopne
sub
inc
out
adc
daa
lahf
push
cmc
pop
jnp
imul
xchg
arpl
cmp
rcl
xlat
add
mov
xor
loop
add
icebp
xchg
add
je
mov
outs
inc
mov
add
mov
inc
pop
adc
hlt
fidivr
inc
sbb
inc
cwde
sub
or
mov
cwde
cmp
in
jge
xchg
addr16
adc
push
fs
xor
xchg
sbb
movs
outs
mov
outs
test
cld
push
and
jno
(bad)
mov
xchg
inc
mov
pop
test
loope
adc
cmps
mov
cld
mov
cmp
test
nop
retf
loopne
jge
test
das
fld
push
jmp
js
test
xor
or
or
sub
dec
mov
js
pop
mov
mov
add
cmp
iret
mov
mov
pop
ja
dec
fcmovnb
sti
outs
test
mov
cld
sub
pop
mov
movs
ret
inc
jb
mov
mov
test
inc
outs
lods
mov
enter
cmp
(bad)
into
pop
out
pop
or
jl
jo
push
xchg
les
pop
fsubr
sbb
and
sbb
in
add
sub
jb
fimul
xchg
adc
mov
rcr
cmp
jns
push
mov
cmp
ret
mov
imul
adc
inc
cmps
fwait
mov
dec
stos
push
dec
xchg
sahf
and
repz
dec
mov
jb
and
sub
fmul
jb
fs
dec
add
cwde
xchg
mov
sub
int
(bad)
jl
leave
jle
jnp
mov
aas
xchg
sub
xor
aas
xchg
or
fdivr
fcmovb
xchg
mov
push
jp
jb
pop
cld
mov
push
ror
cmp
jp
test
inc
push
mov
mov
and
ret
mov
mov
jno
dec
(bad)
fsub
and
adc
add
mov
push
int3
add
jmp
or
adc
jnp
movs
dec
pop
mov
jle
fadd
int3
call
push
out
inc
jno
and
xchg
cmp
shr
cs
jnp
imul
push
mov
xchg
fs
int
out
fcom
ins
push
adc
in
sub
shr
cmc
and
inc
push
aas
pop
fisubr
addr16
movs
push
sbb
xchg
dec
sbb
movs
(bad)
pcmpeqd
mov
sbb
lock
push
(bad)
or
dec
push
mov
mov
cwde
into
add
pop
and
and
xchg
imul
retf
push
neg
dec
inc
mov
mov
pop
int
mov
shl
ret
outs
repz
cmp
sbb
cwde
and
push
pop
jle
push
push
inc
call
pop
lock
pop
adc
jmp
cmp
push
xchg
and
pop
mov
pop
mov
ss
fldenv
jmp
ret
pop
inc
ins
cmps
dec
out
ret
(bad)
sahf
inc
xchg
out
sub
aad
ins
icebp
pop
test
xchg
ror
push
mov
ret
cli
fsubr
in
xchg
je
je
or
jmp
sbb
cmp
arpl
inc
pushf
mov
leave
pop
add
pop
xchg
out
sbb
push
adc
adc
jb
pop
mov
xchg
xor
and
das
jnp
into
lods
arpl
push
push
add
scas
sub
test
dec
loopne
push
jo
adc
stos
mov
jge
(bad)
xchg
add
fdiv
imul
enter
jmp
push
and
push
mov
mov
xlat
inc
(bad)
mov
jge
push
cmp
mov
dec
addr16
dec
xor
cmp
mov
mov
cwde
int3
mov
enter
sbb
lea
mov
mov
xor
(bad)
dec
repnz
dec
outs
mov
icebp
cld
aam
inc
jmp
ins
fwait
dec
int3
cmp
sub
lock
dec
ret
fs
xchg
jp
mov
mov
or
mov
inc
(bad)
or
push
and
mov
scas
or
add
stos
cdq
xor
dec
dec
cdq
xor
ins
inc
sahf
push
stc
cmps
fld
in
cwde
jae
jmp
pop
mov
(bad)
es
mov
mov
loope
cmps
outs
inc
not
mov
shr
dec
call
int
push
cdq
pop
pop
or
and
popf
mov
fimul
push
pop
sub
inc
sub
and
aaa
cwde
adc
pop
inc
mov
std
sub
add
cmp
enter
add
imul
ret
ret
xchg
push
loope
pop
dec
mov
sub
mov
nop
(bad)
mov
mov
(bad)
push
in
(bad)
fs
jb
xor
out
sub
adc
inc
stos
js
push
cmc
lds
(bad)
loopne
sub
inc
mov
sbb
pusha
lods
or
pushf
addr16
mov
(bad)
call
daa
cmp
shl
add
dec
sbb
jg
rol
mov
test
dec
fmul
repnz
mov
movsx
les
jecxz
pop
xchg
push
ror
or
cmc
(bad)
fsub
js
cmp
lea
add
push
cld
fs
and
ss
inc
ja
sub
mov
outs
inc
lods
imul
fsub
out
stos
mov
fidivr
pop
add
test
inc
cmp
les
xchg
add
mov
push
cmp
fild
mov
addr16
sub
fdiv
push
ficom
dec
jge
mov
jl
pushf
xor
add
mov
idiv
imul
test
es
add
push
xlat
push
arpl
cmp
mov
rcr
inc
movs
jo
mov
jno
cmc
xchg
jg
mov
cmc
sub
push
mov
fimul
xchg
rcl
into
aad
inc
mov
in
dec
cmp
repz
jl
cmp
adc
mov
jl
mov
ror
xchg
or
add
hlt
inc
adc
sbb
dec
fld
mov
jp
mov
pop
loopne
out
popf
iret
or
outs
gs
inc
div
xchg
pop
and
out
xchg
test
xchg
test
mov
lock
int
rol
and
into
mov
popa
std
sbb
movs
cmp
push
aaa
dec
jmp
jnp
repz
rcl
or
inc
jae
sub
add
pop
ins
add
mov
jp
cmps
std
sbb
sub
mul
add
pop
bound
inc
test
repz
sti
sar
not
xchg
sub
popf
sar
inc
dec
add
hlt
retf
inc
test
jns
ins
retf
cmp
inc
jecxz
stc
js
inc
push
add
das
pop
and
arpl
mov
leave
(bad)
sbb
xor
push
ins
jae
add
fs
dec
daa
mov
test
and
mov
gs
xchg
dec
out
leave
pop
mov
mov
xor
lods
stos
rcl
and
pushaw
xchg
xchg
scas
rol
pop
pop
lods
mov
inc
push
sub
fnstsw
and
xor
es
punpcklwd
jb
jns
xchg
iret
adc
scas
dec
fdiv
cmp
inc
add
sbb
pop
sub
mov
dec
or
jg
mov
jno
in
jecxz
popf
leave
dec
aad
add
das
out
loop
mov
test
cmp
outs
nop
std
(bad)
xor
repz
cld
gs
mov
test
shr
jbe
add
or
mov
pop
mov
dec
out
xchg
mov
pushf
out
push
push
inc
cmp
jmp
mov
mov
popa
cwde
sar
fcomi
mov
xor
retf
jns
jg
xchg
cmp
neg
push
stc
shr
xor
addr16
mov
cwde
mov
stos
aam
jae
icebp
fld
pop
not
sbb
fst
imul
xchg
sub
mov
out
jl
retf
add
adc
jmp
pop
adc
imul
push
idiv
inc
or
or
outs
pop
and
pop
mov
movs
popa
cmp
jmp
fwait
jecxz
pushf
inc
add
fisttp
inc
nop
adc
in
sub
dec
idiv
icebp
es
and
or
mov
push
push
push
lea
aam
or
pusha
xor
add
cmp
mov
push
test
movs
push
and
push
call
lea
pusha
inc
dec
mov
jg
enter
mov
xchg
ss
pop
fwait
scas
cwde
stos
inc
mov
mov
div
add
cmc
xor
jns
cmp
retf
dec
in
adc
pop
fisttp
fs
dec
cmp
mov
mov
fwait
cli
cmp
es
xor
fisttp
(bad)
push
(bad)
cs
jmp
adc
retf
mov
sbb
sub
test
xor
xchg
or
sti
cmc
mov
cwde
and
lods
inc
inc
or
sbb
hlt
add
mov
xor
mov
shl
sbb
xor
push
es
jmp
pop
popf
fild
fild
loope
or
sbb
sub
add
cmps
imul
cmp
iret
in
xchg
fstp
addr16
ins
cdq
je
movs
shr
sti
ins
(bad)
mov
scas
or
push
cli
xchg
pop
mov
cld
add
mov
(bad)
lods
stc
xor
movs
jb
pop
lock
and
arpl
and
inc
(bad)
sbb
push
add
mov
dec
pop
out
shl
fcmovne
jg
add
fcom
or
in
sub
pushf
pop
sub
pushf
adc
cmp
lock
(bad)
push
fs
pop
or
js
lock
lds
or
ret
or
xchg
cmps
jl
loope
lods
retf
jns
mov
cmp
or
shl
and
add
or
les
js
sahf
push
sbb
xchg
pop
sahf
lea
cmc
jo
jge
jmp
adc
and
sub
pop
mov
lahf
sbb
or
int
cs
add
cs
sub
mov
mul
add
jbe
data16
rcl
inc
lods
dec
add
(bad)
jmp
and
cwde
mov
in
fld
das
stos
pop
daa
sbb
daa
or
pop
mov
pop
js
gs
jmp
ror
push
add
fiadd
inc
adc
in
sub
inc
fimul
sub
mov
cli
sar
fld
pop
nop
das
mov
div
mul
adc
(bad)
cmc
jbe
gs
stos
inc
lods
jl
lods
mov
arpl
cli
loop
retf
inc
lods
xchg
push
repnz
mov
pop
push
iret
call
pop
clc
xor
jno
or
xchg
inc
push
add
cmp
fs
js
into
push
pop
jbe
cld
push
outs
bound
data16
ss
mov
dec
mov
inc
sahf
fstp
xchg
dec
rcr
mov
jmp
mov
(bad)
ss
push
or
push
in
mov
(bad)
mov
dec
cmp
push
loopne
jb
xor
or
in
cs
cmps
mov
dec
sahf
out
addr16
push
jg
xor
add
mov
gs
(bad)
or
(bad)
aam
pop
add
inc
lahf
jmp
jbe
jns
dec
icebp
mov
xor
sbb
neg
mov
push
and
jmp
xchg
test
push
retf
jp
dec
push
dec
fmulp
scas
jle
cmp
sbb
dec
stos
inc
push
ins
cwde
adc
retf
sub
ins
add
and
cmp
jg
jp
mov
push
xchg
test
outs
es
dec
scas
not
jno
mov
jecxz
out
mov
movs
pop
pop
leave
jecxz
adc
dec
mov
(bad)
jmp
mov
aad
mov
out
dec
out
mov
sbb
sbb
fdivrp
jg
add
inc
(bad)
adc
jns
outs
out
test
inc
call
pop
je
adc
xor
jb
popa
mov
outs
cmp
cmp
lea
or
sbb
inc
dec
push
mov
xchg
ret
leave
xchg
shl
mov
in
test
pop
push
xchg
xchg
cmc
add
fadd
xor
cmp
into
(bad)
(bad)
and
and
add
outs
stos
jbe
jns
mov
mov
into
cmc
sub
enter
adc
and
and
ror
cmp
stos
xchg
cli
adc
pusha
retf
and
push
test
and
loope
xor
rcl
cmps
(bad)
dec
fstp
mov
not
add
mov
or
adc
fdiv
inc
std
ss
jl
sar
push
mov
mov
(bad)
jnp
ret
or
dec
lds
stos
pop
test
icebp
dec
inc
popf
inc
pop
mov
sti
ins
inc
sub
cwde
scas
test
jmp
(bad)
aad
xchg
jecxz
jne
popf
add
(bad)
(bad)
xchg
add
sbb
scas
pop
ja
stos
mov
out
(bad)
loop
pop
xchg
xchg
sub
in
scas
js
inc
inc
add
mov
dec
cs
xchg
(bad)
mov
or
inc
jmp
fild
fistp
xor
sub
cdq
pop
xor
aas
pop
xchg
mov
jle
fbld
cld
dec
pop
and
jno
les
daa
fcmovb
xchg
jnp
div
jae
lahf
mov
xchg
aad
xchg
push
(bad)
cmp
hlt
cmc
mov
and
lea
pop
and
sbb
fucomip
sub
fmul
jnp
mov
sbb
dec
outs
ret
adc
or
fsub
inc
mov
jns
dec
inc
jge
dec
jmp
inc
xchg
xchg
jno
in
movs
daa
xchg
push
cmps
pop
mov
leave
shr
in
xchg
sub
sub
shl
je
pop
add
pop
inc
js
push
sub
nop
mov
ret
lea
xchg
mov
inc
pop
or
inc
sbb
adc
pop
sahf
xor
imul
imul
sbb
xchg
xor
push
inc
(bad)
push
mov
add
jg
jo
and
(bad)
cld
pop
test
mov
shr
xchg
out
fwait
mov
xchg
fcomp
popf
sahf
ins
out
shr
xor
jg
adc
dec
xchg
adc
sahf
inc
add
mov
xchg
rcl
sbb
imul
sbb
loope
push
pop
add
cmp
push
lods
sbb
imul
xchg
stc
cmp
jnp
into
xchg
cmp
jo
dec
aad
ret
leave
mov
adc
movs
cmc
jbe
inc
lods
mov
shl
push
push
xchg
fwait
mov
in
popf
jge
xchg
call
push
cmp
pop
icebp
cmp
aas
mov
inc
pop
movs
push
jno
test
dec
fsqrt
jl
std
pop
push
jne
loop
cs
sub
mov
shl
gs
jo
mov
adc
test
mov
inc
inc
mov
mov
jae
loopne
(bad)
(bad)
hlt
std
jo
ja
call
lea
cli
icebp
out
std
imul
movs
dec
xchg
push
mov
push
dec
add
inc
pushf
pop
arpl
pusha
push
je
xchg
jns
enter
jo
push
and
push
imul
mov
fwait
sub
pop
imul
xchg
xchg
stos
sbb
aaa
push
test
inc
fadd
inc
sahf
jle
mov
mov
cdq
pop
push
in
mov
fistp
lahf
mov
fsub
mov
sbb
test
jae
cmp
movs
xor
inc
mov
xchg
stos
mov
sub
sbb
cld
sbb
icebp
ins
adc
ins
inc
add
pop
xchg
jg
pop
sbb
or
retf
xor
int
jecxz
mov
inc
jecxz
add
(bad)
mov
xchg
dec
cld
in
sbb
bound
mov
sbb
(bad)
pop
inc
nop
scas
inc
int3
gs
push
or
aam
je
adc
sbb
dec
cmps
imul
xchg
les
loope
xor
inc
stc
sbb
inc
jb
(bad)
push
lods
add
push
adc
mov
jmp
enter
inc
and
jle
into
enter
dec
out
pop
(bad)
fldcw
test
popa
jne
mov
fcom
mov
fst
pop
xor
loop
push
sub
lods
aas
push
arpl
cmps
pushf
mov
cmp
popf
(bad)
sbb
pop
cmp
xor
sub
xor
and
stos
mov
retf
mov
add
mov
jne
jb
jle
fadd
jge
retf
retf
adc
fcom
ffreep
setae
in
mov
sbb
rcl
test
adc
adc
fisubr
pop
and
push
jnp
lahf
mov
sub
(bad)
jmp
push
inc
inc
cmp
and
inc
or
mov
shl
inc
mov
(bad)
push
and
xor
rcl
jecxz
push
sub
or
fwait
dec
xchg
mov
xchg
sub
fsubr
in
mov
ds
pushf
mov
mul
nop
movs
dec
xchg
dec
fstp
int
out
add
pop
rcl
adc
cld
inc
and
push
fld
(bad)
fsub
mov
dec
dec
add
enter
jl
stos
or
scas
jns
xchg
pop
mov
push
inc
loope
mov
sti
imul
jmp
xchg
mov
loopne
jae
fucom
cmc
or
pushf
aam
pushf
push
popa
xchg
xchg
std
mov
mov
xlat
xor
adc
jmp
or
or
cmps
outs
pop
push
stos
mov
aam
xchg
cld
addr16
jo
adc
pop
sbb
mov
fwait
pop
leave
sbb
lea
nop
adc
test
dec
(bad)
in
inc
retf
inc
fdivr
push
fisttp
lods
retf
dec
add
push
lock
adc
loopne
rcr
cdq
stos
sbb
jnp
mov
push
xchg
test
pop
mov
jmp
fisubr
sbb
sahf
or
pop
jb
rcl
or
fst
fild
mov
sub
add
js
sub
es
mov
pop
mov
adc
loopne
mov
xchg
test
dec
mov
cdq
ins
in
cwde
push
ss
mov
push
add
xor
ret
retf
loop
inc
retf
add
fidivr
pop
jle
jg
sub
push
jno
stos
cdq
lahf
xor
sbb
enter
and
inc
ss
daa
sbb
cmp
ret
rcr
push
in
aam
sub
cli
xchg
sbb
clc
dec
ret
inc
inc
pop
test
dec
xchg
loopne
(bad)
add
sbb
stos
sbb
add
std
mov
(bad)
xor
jnp
sub
xor
sbb
aas
mov
jns
push
scas
sub
aam
(bad)
bound
xor
aaa
sbb
pop
pop
mov
pop
pushf
sbb
sbb
sti
mov
ror
push
or
mov
in
push
lock
mov
cmps
jle
sahf
test
adc
(bad)
jmp
rol
in
mov
into
jbe
cmp
sbb
into
or
daa
pusha
cmps
or
inc
stos
cmp
cwde
sub
aad
std
cli
aas
mov
sub
aas
stos
inc
scas
or
adc
fbstp
fmul
movs
(bad)
clc
pop
inc
and
fistp
out
inc
ins
mov
ins
stos
into
loope
into
mov
mov
int
mov
movs
gs
mov
fdivr
mov
outs
icebp
jp
adc
sbb
sti
fmul
adc
cmp
dec
cmp
xchg
test
rol
mov
cmp
cmp
pop
xchg
push
(bad)
pop
inc
mov
add
mov
or
sub
out
sti
and
lea
jnp
je
jnp
xchg
loop
sahf
loop
pop
loope
jb
enter
div
in
ret
gs
pushf
fwait
hlt
xor
scas
(bad)
dec
add
sub
push
leave
aam
pop
lahf
sbb
es
cmp
outs
out
retf
test
rcr
mov
inc
stc
or
mov
ja
adc
or
mov
leave
rcl
xchg
jb
mov
jecxz
xchg
leave
mov
xchg
mov
and
xchg
imul
scas
inc
dec
mov
(bad)
loope
jmp
xchg
xchg
jns
sbb
inc
fadd
repz
nop
push
push
cmp
push
sbb
xchg
aas
or
jp
aam
or
push
push
jns
sub
jp
xchg
inc
and
lahf
ins
sbb
cmp
jmp
push
push
inc
test
(bad)
mov
adc
mov
lods
pop
les
mov
js
xchg
out
fs
loop
sub
retf
sbb
jmp
lods
jle
ds
cmp
and
call
(bad)
jo
retf
jae
push
push
in
outs
jae
adc
pop
arpl
addr16
cmps
ins
sbb
push
stos
retf
push
jns
fild
xchg
pop
xchg
(bad)
mov
add
stos
xchg
and
inc
cli
test
outs
in
xchg
fs
rol
mov
fidivr
inc
ds
hlt
jp
pop
push
ss
popf
daa
imul
push
outs
jmp
pop
ret
xchg
repz
or
je
sub
pop
jnp
dec
and
mov
outs
in
jecxz
xchg
call
inc
inc
and
jo
mov
call
xor
lock
stos
stos
sbb
lds
hlt
inc
out
mov
ins
scas
adc
xor
(bad)
into
and
dec
mov
add
or
stos
mov
push
in
enter
pop
inc
push
pop
sub
mov
adc
push
inc
scas
jo
xchg
dec
inc
call
or
cmps
mov
hlt
adc
in
xchg
xchg
adc
xchg
pop
xor
mov
repnz
dec
push
cdq
xchg
xchg
adc
loop
sbb
arpl
mov
add
in
inc
int3
cmp
add
xchg
cmp
mov
retf
xor
leave
pop
enter
aam
dec
pop
es
sub
cmp
nop
jbe
mov
pop
in
mov
js
in
mov
stos
std
(bad)
jmp
pop
ins
fisubr
pop
inc
loope
push
push
leave
movs
mov
xchg
sbb
ficom
lea
(bad)
mov
mov
(bad)
push
cmp
pusha
in
and
jne
pop
(bad)
aaa
inc
jne
mov
int3
xor
std
jp
(bad)
pop
fs
cmp
sbb
pop
push
add
dec
jae
ins
add
sub
push
pop
retf
out
jecxz
iret
cmc
push
pop
outs
push
mov
xchg
and
cmps
pusha
jecxz
sbb
lds
add
mov
(bad)
xchg
aam
inc
pop
mov
jb
pop
(bad)
sub
sub
cs
jg
mov
inc
and
cmps
test
pop
shl
sbb
pop
adc
inc
ja
sub
mov
push
dec
(bad)
xor
xchg
imul
and
and
lods
xchg
adc
mov
inc
jp
fsubr
fwait
(bad)
pop
mov
mov
xor
aam
sbb
in
adc
mov
adc
sbb
stos
pusha
call
push
ror
clc
push
into
cmp
inc
mov
dec
push
cmps
push
and
les
dec
jmp
inc
cmp
cmp
imul
and
inc
inc
pushf
jg
shr
push
scas
movs
mov
retf
cli
out
pushf
jmp
mov
iret
loope
mov
fwait
outs
fst
mov
adc
cmps
test
adc
neg
(bad)
cld
mov
neg
lods
stos
dec
xchg
jo
add
mov
push
fidivr
pop
push
js
aaa
sbb
test
hlt
sbb
shl
imul
aaa
and
imul
pop
mov
enter
or
mov
pmulhuw
push
xchg
jmp
dec
mov
sti
cmp
fwait
ja
(bad)
lods
test
fwait
xchg
xor
int
call
dec
repz
(bad)
cmp
and
ss
push
push
mov
pop
jo
mov
mov
or
pop
int
add
rol
or
adc
or
and
or
dec
xchg
jp
(bad)
sbb
pop
jmp
or
pop
pop
pop
fstp
lds
int
pop
push
mov
lea
in
dec
mov
or
mov
movs
js
rcr
test
ins
xchg
push
clc
shr
cmp
test
outs
js
dec
cmp
mov
test
or
ja
into
daa
mov
sbb
xor
xor
sbb
pop
(bad)
jno
xchg
data16
ret
pop
call
test
cdq
(bad)
sub
jno
hlt
clc
and
pop
xchg
ja
out
cmp
jle
xchg
fdiv
out
push
scas
dec
push
push
fxtract
iret
les
or
sbb
jge
gs
popa
lods
mov
mov
sub
xchg
clc
ins
push
aaa
arpl
and
ins
sbb
dec
stos
mov
cmp
mov
inc
xchg
lock
jecxz
fs
jle
pushf
cmc
popa
sub
jb
mov
xchg
ror
dec
mov
xchg
gs
(bad)
test
xor
inc
dec
std
retf
test
and
cs
xor
mov
inc
cmp
inc
leave
out
sbb
inc
fld
add
add
aas
enter
ja
mov
pusha
test
jle
out
popf
add
(bad)
pop
cwde
dec
ins
jbe
dec
test
mov
add
aad
jno
pop
xchg
cld
fild
add
adc
test
stos
push
jecxz
jmp
pop
sub
jmp
outs
call
push
mov
xchg
mov
ss
js
(bad)
sbb
fadd
inc
addr16
cmp
jo
mov
mov
xchg
jp
lods
aas
jne
cmps
lahf
xor
int
and
dec
push
inc
xchg
shr
test
xchg
push
shr
lea
pop
repnz
setnp
mov
xchg
call
or
mov
push
inc
mov
inc
cmp
sbb
mov
jae
jl
jecxz
or
add
outs
ficom
mov
push
cmps
mov
pop
clc
cmps
popf
sbb
jbe
lds
rcl
xchg
mov
jg
xchg
push
pminsw
hlt
xor
arpl
rcr
add
mul
mov
loop
push
mov
sub
sbb
repnz
ja
sbb
cmps
xor
fwait
dec
add
mov
shl
test
gs
push
dec
in
and
xor
sbb
sub
inc
adc
jb
movs
cwde
or
dec
in
inc
pusha
pushf
jp
(bad)
std
fs
pushf
inc
int3
mov
mov
data16
mov
add
sbb
push
sbb
icebp
cwde
fcomp
inc
pop
cwde
cdq
xor
ja
cmp
jmp
push
inc
mov
std
ss
inc
out
sbb
lahf
retf
cmp
sti
jbe
add
iret
or
add
xchg
aas
ror
fnsave
sar
movs
sar
aam
xchg
sbb
shl
jbe
mov
imul
shl
mov
add
xlat
xchg
xchg
lea
inc
out
aas
push
or
inc
jecxz
jp
data16
js
scas
aaa
ds
xchg
enter
ror
int3
and
aad
punpcklwd
sub
jg
lea
mov
stos
scas
xchg
push
jle
stos
popf
and
sbb
ins
jmp
test
repnz
ret
cmps
jae
clc
sti
lods
or
imul
jno
mov
and
fst
sbb
in
enter
retf
inc
sti
adc
arpl
dec
pop
push
in
xchg
mov
sbb
icebp
add
enter
jle
je
(bad)
or
mov
bound
ret
xor
sub
cmp
stc
jnp
jg
jno
inc
test
or
sti
adc
dec
scas
lahf
sub
mov
pop
mov
xor
pop
(bad)
mov
das
sub
pop
pusha
sub
push
pop
ins
lods
pop
pop
pusha
mov
cmp
popf
xchg
dec
inc
adc
pop
push
jl
js
es
stc
inc
adc
movs
mov
arpl
pusha
in
mov
dec
push
sbb
(bad)
jb
retf
movs
push
enter
test
cmps
test
jnp
cmps
pushf
and
pop
push
stos
xlat
push
(bad)
cmp
daa
neg
scas
jg
or
or
push
lea
pop
xchg
mov
out
(bad)
jp
mov
jnp
les
push
inc
sub
je
pop
inc
fistp
mov
push
mov
mov
out
in
xor
gs
(bad)
xchg
xchg
call
hlt
mov
xchg
ins
mov
xor
mov
(bad)
shl
pop
sbb
retf
sub
shl
js
and
or
mov
es
lahf
mov
retf
xorps
mov
fs
jge
les
js
pop
xchg
pop
(bad)
and
push
inc
ret
pushf
sbb
xchg
cdq
or
adc
lahf
cmp
inc
dec
popf
dec
fld
in
fdivrp
arpl
iret
fnstsw
(bad)
clc
or
xchg
push
daa
xchg
loop
mov
movs
inc
aam
clc
or
add
jmp
push
inc
dec
push
call
pop
sti
je
shr
gs
adc
pop
mov
ficom
xor
xchg
neg
xor
icebp
add
xchg
jge
mov
mov
cmp
inc
mov
xchg
mov
mov
xchg
loope
fcmovb
push
idiv
inc
push
sub
in
(bad)
jbe
es
jno
add
outs
mov
push
push
mov
nop
mov
(bad)
sbb
and
push
jl
push
das
cmps
jp
movs
js
mov
mov
push
fadd
xor
push
add
mov
inc
sti
ret
cmps
adc
loopne
and
cdq
(bad)
or
pop
push
mov
icebp
mov
jmp
fisttp
push
sbb
cwd
ds
sbb
cmp
test
add
xchg
retf
lea
pop
fistp
cld
and
in
pop
pop
ja
retf
push
imul
retf
pop
push
sbb
arpl
or
stos
sti
inc
mov
fcomp
pop
mov
movs
fiadd
mov
jne
cld
dec
push
(bad)
(bad)
jno
popa
xacquire
ins
fwait
cwde
mov
repnz
inc
jle
lahf
jae
je
dec
pop
sub
jmp
addr16
inc
add
imul
pop
pop
and
nop
mov
retf
pop
std
icebp
cmp
sbb
pop
or
sub
inc
fbstp
dec
push
jmp
movs
sub
xor
mov
sbb
loop
aad
je
mov
inc
mov
xchg
(bad)
fcom
test
btc
(bad)
mov
(bad)
ror
pop
outs
call
out
cmp
xchg
fld
dec
mov
xor
jge
sahf
cmps
scas
or
(bad)
push
(bad)
aad
call
add
push
mov
mov
js
mov
adc
pop
dec
jecxz
xchg
and
jp
ficomp
adc
test
mov
push
div
repnz
inc
mov
jg
in
fwait
mov
aaa
retf
ficomp
popf
cmps
ins
repnz
out
sbb
int3
jecxz
xchg
adc
sbb
imul
pop
pop
xlat
sbb
fisttp
cmp
sbb
and
sbb
fs
pop
pop
mov
xchg
mov
jl
enter
enter
jg
sbb
sbb
xchg
imul
jb
jmp
fwait
xchg
xor
mov
push
mov
jo
je
adc
adc
fucomi
pop
nop
cmp
cmp
sbb
jns
dec
cmp
mov
mov
push
fdiv
aas
mov
jo
dec
pop
jecxz
sbb
xor
aaa
nop
imul
scas
xlat
sti
xor
push
pop
(bad)
rcr
jmp
bound
gs
jecxz
mov
mov
mov
push
mov
loopne
mov
enter
lods
jno
je
es
dec
mov
bnd
add
pop
xchg
aas
data16
xor
test
les
loope
sub
push
pop
sti
xor
pop
xchg
cs
imul
cmp
pop
es
stos
jmp
adc
scas
sub
adc
movs
shl
shl
stos
ins
jmp
call
adc
lds
in
mov
push
sbb
cld
vdivsd
add
sub
sahf
xor
setae
les
cld
cmp
pop
and
push
das
or
add
dec
adc
mov
mov
bound
mov
inc
jle
pop
test
test
and
shr
xchg
scas
repnz
popa
cmp
xchg
aad
pop
mov
fld
aaa
dec
mov
jecxz
retf
push
cmp
sub
cdq
cmps
sar
shl
enter
addr16
add
sbb
lods
jl
lods
sub
jno
pop
dec
int
mov
test
popa
nop
sub
scas
in
mov
cld
js
mov
cmp
cmp
bound
sbb
fidiv
scas
add
sbb
out
retf
push
(bad)
push
pusha
cmp
xor
push
sahf
jns
jg
xchg
into
ret
add
mov
add
aas
and
je
xchg
or
xchg
adc
movs
scas
test
cmp
xor
call
jl
adc
inc
stos
dec
retf
and
xlat
xchg
out
or
call
mov
(bad)
adc
hlt
out
test
jl
xchg
fnsave
fwait
jo
sbb
xor
xor
pop
outs
dec
popf
cmp
push
mov
or
sbb
enter
push
adc
and
xor
add
icebp
or
mov
add
mov
std
inc
aad
push
pop
mov
mov
jmp
cs
loop
je
dec
nop
stos
test
xor
scas
add
scas
cmp
fdiv
jnp
inc
push
dec
std
retf
loopne
jne
dec
fistp
push
cmp
dec
or
lds
jle
fsub
jae
iret
xor
pop
sub
xor
add
adc
mov
adc
aam
inc
retf
fbld
dec
fidivr
pushf
aam
xchg
lock
out
jg
jmp
mov
scas
cmps
ror
setle
xor
push
popf
mov
call
(bad)
mov
sbb
sub
mov
pop
imul
cli
push
mov
inc
push
push
jle
cmp
cmc
pop
adc
sbb
jle
enter
xchg
sbb
dec
pop
jnp
inc
lock
ins
int
gs
loop
push
(bad)
pusha
xchg
mov
les
sbb
mov
sub
inc
loopne
mov
pop
inc
mov
scas
jb
cmp
cmps
cmp
jne
xor
pop
mov
lea
fsubr
and
loope
or
cld
add
add
xchg
pop
lods
ds
dec
pop
mov
inc
scas
mov
loope
mov
and
mov
rcr
inc
retf
push
(bad)
lahf
cs
inc
repnz
cmps
int3
push
nop
push
mov
(bad)
icebp
repz
dec
imul
cmp
jmp
sbb
or
lahf
dec
or
lods
pushf
mov
xor
rcr
retf
adc
adc
push
jae
adc
mov
mov
lea
mov
outs
in
mov
es
cmp
lods
xchg
adc
sbb
mov
ret
scas
cmp
rcr
psubb
mov
shl
bsf
mov
in
xchg
jecxz
inc
xchg
dec
leave
dec
pop
pop
xlat
vaddpd
cmp
or
jle
aaa
sub
(bad)
mov
aaa
add
ja
icebp
sub
ja
fdiv
push
xor
jecxz
mov
jmp
dec
mov
pop
mov
sub
xchg
mov
inc
pop
inc
sahf
jb
mov
add
in
daa
fwait
push
cdq
mov
dec
fs
cmps
mov
cmc
std
xor
stos
sub
sub
in
adc
rcl
pop
cmps
mov
mov
in
jo
xlat
dec
popa
add
mov
adc
jo
mov
mov
push
fwait
shl
mul
popa
pushf
imul
fild
mov
dec
mov
test
mov
nop
sub
add
xchg
in
out
cmp
mov
lods
mov
pop
xor
push
call
sbb
xchg
retf
nop
mov
ss
push
(bad)
mov
and
and
add
or
imul
adc
push
pop
xchg
test
xchg
fsub
test
sbb
scas
popa
(bad)
jge
popf
dec
add
xchg
dec
mov
scas
out
mov
xchg
and
jmp
mov
cmc
push
push
mov
cli
cmp
xor
mov
je
sub
add
fbstp
gs
cli
dec
pop
jl
(bad)
outs
leave
repnz
add
(bad)
sub
sub
push
inc
call
into
clc
push
inc
or
(bad)
jmp
ins
jle
sub
lods
fdivr
mov
call
icebp
mov
mov
jl
cdq
xchg
and
into
(bad)
xchg
aad
cmp
lods
mov
jbe
xor
ss
cli
(bad)
jg
sub
jne
daa
mov
or
cmc
mov
scas
(bad)
fnstenv
xchg
(bad)
jge
fiadd
xor
pop
add
cs
adc
popa
mov
xor
(bad)
mov
test
data16
rol
pushf
jg
mov
cmc
lahf
movntq
test
jae
cdq
mov
sbb
imul
fucom
js
mov
stos
daa
or
loopne
pop
fs
test
inc
inc
sti
push
sub
mov
aad
cli
fstp
sub
dec
inc
pop
out
cmp
push
cmp
push
push
cs
(bad)
rcr
(bad)
test
jg
outs
sbb
mov
cmp
test
or
lock
lahf
shl
movs
push
je
mov
loope
test
mov
fcom
pop
ret
inc
sti
sub
pop
dec
mov
pop
inc
in
push
pop
test
stos
lods
and
add
adc
or
inc
pop
ds
ss
jne
sbb
fwait
push
xor
sub
adc
iret
enter
lock
sbb
cli
mov
mov
xchg
xchg
addr16
clc
mov
push
cli
xchg
sar
mov
pop
inc
sbb
loope
out
push
and
clc
imul
jnp
pop
inc
cmp
adc
mov
dec
mov
in
cld
mov
cli
push
imul
ja
out
sbb
ins
ficom
mov
test
xchg
sar
ins
jg
jae
mov
pop
fwait
jmp
retf
and
push
stos
jmp
pop
call
repz
cdq
inc
inc
jmp
pop
push
fdiv
std
fcomp
sbb
dec
cwde
pop
sbb
fwait
adc
cwde
shl
xchg
jp
pop
inc
enter
add
sahf
jae
pop
outs
(bad)
add
xchg
stos
sbb
push
dec
xchg
clc
or
push
dec
fdivr
iret
out
mov
mov
sbb
loopne
es
ret
inc
push
xchg
call
inc
outs
call
in
xlat
ja
sbb
pop
sub
jl
xchg
into
retf
pop
pop
out
rol
jg
shr
ja
aam
or
cmp
adc
dec
add
mov
lahf
test
add
pop
add
imul
retf
push
movs
jmp
test
xchg
movs
fwait
mov
lods
inc
js
rol
aam
inc
inc
nop
movs
push
xlat
sub
ss
or
fsub
or
mov
ss
adc
pop
aam
(bad)
adc
adc
sbb
adc
sahf
sub
movs
dec
ss
inc
scas
lods
cmps
outs
xor
sti
cmps
setno
push
idiv
jle
jae
xchg
loopne
test
mov
icebp
jecxz
sub
fisttp
sahf
(bad)
in
aas
cdq
jl
mov
std
retf
xchg
lods
xlat
inc
pop
cmp
aas
ds
test
jnp
inc
inc
or
sbb
arpl
imul
call
add
jmp
ret
push
xor
add
mov
mov
std
jno
sub
fiadd
in
inc
arpl
sub
jmp
jecxz
sbb
mov
mov
addr16
mov
adc
fiadd
dec
mov
outs
fstcw
lock
jg
fsubr
ins
lods
dec
sub
les
in
jnp
fmul
jb
and
pop
jae
jb
cwde
cmp
push
mov
add
xor
sbb
les
sbb
in
shl
out
lock
push
xchg
mov
call
sbb
push
daa
icebp
in
rol
dec
xlat
outs
fist
and
fadd
or
xor
(bad)
inc
jnp
mov
in
loop
das
xchg
hlt
and
mov
stos
ja
pop
jne
outs
and
mul
sbb
mov
mov
push
aad
rcr
stos
mov
(bad)
ret
nop
xor
pop
movs
stos
mov
jnp
popf
mov
aas
loopne
mov
cdq
mov
add
(bad)
pop
sahf
and
js
fist
pop
pop
sahf
bound
jns
mov
sbb
rol
cmps
fcom
inc
aad
das
inc
pop
xor
aam
inc
mov
cmp
test
push
cmp
test
pop
call
mov
push
fwait
shl
xlat
(bad)
cmc
or
inc
test
inc
inc
test
loopne
test
and
xor
pop
popa
pop
inc
mov
pop
jg
inc
push
dec
mov
sub
arpl
loope
vdivps
add
and
lsl
sbb
inc
xor
cwde
adc
add
popf
dec
mov
inc
test
sahf
and
lods
fidiv
mov
out
daa
in
hlt
add
fcomi
or
cwde
adc
std
push
inc
scas
call
adc
leave
stos
inc
in
inc
add
scas
sub
jae
imul
inc
or
or
sbb
scas
das
retf
gs
mov
aad
outs
mov
call
mov
nop
aam
cld
push
pop
fwait
popa
and
push
cmc
nop
popa
sbb
shr
cld
xor
test
add
in
lock
fisttp
in
fld
outs
cmps
adc
adc
sti
out
inc
fld
jg
pop
mov
inc
sub
mov
retf
pop
jmp
pop
cmp
sbb
mov
outs
addr16
mov
push
cdq
mov
sbb
or
adc
js
ds
aad
push
lock
dec
or
fucomp
das
ficomp
adc
push
jg
sub
ffreep
cmp
(bad)
push
imul
sbb
into
in
mov
enter
cmps
sbb
fs
mov
dec
test
cmp
or
cmp
xchg
pop
enter
adc
pop
mov
cli
or
xor
rcr
dec
inc
shr
test
xchg
in
sub
jecxz
or
jge
movs
mov
daa
ficomp
call
es
stc
mov
jecxz
jnp
mov
push
pop
xor
frstor
jae
pop
fisubr
jnp
xor
mov
sbb
mov
fst
dec
and
add
arpl
jl
and
mov
jae
xchg
fcmovnu
mov
retf
pop
test
dec
jmp
cld
jbe
xchg
mov
mov
sbb
cmps
xchg
cmp
scas
frstor
jnp
fld
mov
sbb
aad
into
and
inc
jg
pop
fwait
addr16
outs
pushf
xor
push
mov
mov
(bad)
ficomp
je
cld
add
pop
and
jne
js
mov
inc
pushf
cmp
cwde
cld
sub
adc
out
mov
popf
call
outs
and
mov
mov
lods
push
in
mov
cmps
inc
push
call
xchg
faddp
and
mov
dec
add
inc
popf
ss
sub
cmovae
arpl
mov
dec
fcomi
jnp
shl
inc
dec
lds
push
push
or
aad
jo
ins
sbb
sbb
movs
mov
ins
fsub
jge
jnp
pop
pushf
push
test
outs
rcr
add
imul
jge
cwde
mov
pop
retf
shl
addr16
and
and
out
rcl
sbb
ds
xor
pop
dec
out
(bad)
scas
or
sar
jmp
adc
aas
jecxz
adc
and
fsub
mov
jne
add
sti
sbb
std
inc
ficomp
inc
mov
clc
nop
(bad)
pop
popf
mov
push
xor
enter
data16
add
fs
fiadd
stos
xchg
pusha
hlt
dec
icebp
sbb
sbb
in
sub
mov
pop
je
dec
sbb
movs
lods
leave
and
(bad)
and
cmp
push
ds
cmp
or
pop
outs
mov
push
mov
push
inc
out
adc
mov
pop
jle
fidiv
mov
fs
mov
cmp
bound
ja
loopne
scas
add
mov
xchg
cmc
rol
push
shl
cmp
push
jp
dec
cmps
xor
inc
adc
xchg
sub
fdiv
daa
mov
adc
adc
add
arpl
push
cmp
add
pop
inc
cmps
push
pop
mov
addr16
pushf
push
sub
std
dec
push
inc
shr
xor
jecxz
(bad)
jmp
(bad)
sbb
mov
mov
add
out
mov
xchg
inc
xchg
push
and
ret
cmp
ja
cmps
adc
in
sbb
leave
mov
retf
(bad)
aas
or
cli
or
addr16
lods
pop
mov
fst
scas
ins
push
mov
add
dec
pop
xlat
iret
xchg
inc
stos
jmp
loope
popa
ins
fild
movs
jmp
adc
fst
popf
or
inc
(bad)
mov
ficom
(bad)
nop
lock
mov
mov
or
(bad)
jmp
inc
outs
test
outs
test
mov
sub
sbb
ficomp
push
pop
fdivr
pop
jb
push
mov
add
popa
push
stos
xor
stos
outs
sbb
push
enter
outs
pusha
inc
lahf
inc
std
fcom
inc
cwde
int3
call
or
aad
jp
jg
neg
dec
fwait
shl
repnz
pop
sbb
push
push
dec
xlat
(bad)
jmp
aaa
inc
movs
adc
sbb
push
pop
neg
xlat
js
test
and
sub
stos
and
jg
arpl
dec
cmp
xor
xlat
movs
cmp
movd
in
add
outs
mov
shl
test
mov
pop
stc
fnsave
(bad)
(bad)
or
imul
aaa
inc
jp
adc
out
sbb
jmp
jle
adc
test
cmp
lods
mov
les
retf
push
je
pop
mov
jl
sbb
stos
jp
(bad)
or
add
push
outs
(bad)
cmc
cdq
pop
mov
pop
fld
jbe
arpl
rcr
mov
in
retf
and
cmc
jmp
mov
mov
sbb
fldl2e
hlt
out
call
mov
aaa
pop
cmp
aam
jne
add
sub
fldcw
inc
test
jo
mov
cli
dec
jecxz
jl
leave
arpl
or
inc
or
jge
mov
pop
push
mov
pop
test
jno
cwde
cld
adc
xor
fucomp
stos
adc
dec
push
mov
aas
jecxz
cmp
sub
scas
scas
mov
jle
sahf
xchg
xor
iret
shl
add
pop
cmp
cmp
pop
inc
pop
mov
pop
push
mov
cmps
inc
ror
push
push
pop
call
aaa
jmp
dec
jns
jns
stos
push
pop
mov
mov
lahf
out
inc
xchg
repnz
out
push
pop
fsubr
cmps
add
xchg
clc
je
mov
movs
and
mov
out
jecxz
out
sar
jg
fisttp
push
cmc
sbb
cld
lock
loopne
bound
mov
inc
es
cmps
xchg
mov
fmul
push
jl
mov
xor
add
cmp
jl
mov
sub
shl
xchg
ja
je
xchg
push
in
push
mov
call
push
(bad)
fisub
mov
scas
imul
jmp
sbb
aad
out
popa
loope
add
mov
push
cs
mov
pop
stc
mov
movs
repz
pop
xor
jne
sub
lock
jb
push
xor
movs
cs
pop
lahf
xlat
jbe
outs
pop
sar
mov
mov
adc
retf
jmp
repnz
mov
dec
out
sti
movs
int
jg
scas
mov
retf
jle
adc
dec
adc
jnp
aaa
push
add
push
daa
outs
jmp
mov
cs
(bad)
loop
vcvtdq2ps
push
mov
adc
add
xor
cmp
jge
rcl
test
push
cdq
mov
xor
add
(bad)
loope
xchg
pop
jp
into
loopne
mov
mov
lods
ss
fidivr
sbb
mov
lock
repnz
jle
test
push
loope
cld
push
add
mov
sub
imul
xchg
rcr
ret
cmps
inc
popa
inc
jmp
lods
das
rcr
(bad)
inc
or
xor
pop
out
xor
int
lock
inc
inc
mov
dec
mov
mov
xchg
jmp
leave
pusha
idiv
add
add
or
leave
popf
pop
jnp
adc
cmps
pop
pop
sub
hlt
jmp
fld
push
push
lods
arpl
jp
(bad)
nop
or
repz
loopne
add
add
and
jl
addr16
add
sub
imul
push
add
adc
aad
sbb
(bad)
jo
sbb
mov
pop
mov
test
lock
push
das
xchg
xlat
cmps
sbb
iret
xor
mov
aas
repz
xchg
mov
adc
cmp
cdq
ds
or
adc
cmps
arpl
jae
xchg
mov
dec
xchg
fnstsw
cli
inc
adc
in
sbb
and
fnstenv
mov
dec
mov
cmps
pop
and
cmps
xor
pop
pop
lods
xor
movs
sti
push
mov
mov
or
dec
mov
fbld
in
mov
adc
xchg
lods
fidiv
pop
stos
sbb
mov
push
cmp
or
movs
dec
sbb
mov
test
xchg
out
add
(bad)
dec
inc
ret
arpl
ss
fs
mov
cmp
or
mov
mov
outs
je
dec
enter
mov
mov
and
cmps
lock
ja
clc
test
push
scas
push
push
out
cmps
cmp
mov
out
xlat
loopne
pop
mov
repnz
inc
fprem
leave
jle
and
adc
scas
jb
or
pop
rcr
or
adc
add
mov
popa
arpl
outs
cdq
mov
dec
(bad)
mov
in
gs
mov
ins
mov
sahf
dec
call
hlt
xchg
jo
dec
xchg
xor
mov
retf
mov
test
jnp
push
cmc
cmp
xor
out
jb
push
pop
sub
mov
lds
(bad)
pop
sahf
fild
jbe
mov
sbb
push
mov
fld
inc
xchg
or
mov
outs
add
xor
aam
xor
inc
mov
cmp
mov
mov
in
mov
mov
outs
out
add
jmp
jnp
stos
fsub
dec
scas
dec
cmp
pusha
fadd
sub
aaa
inc
jbe
inc
sbb
mov
into
icebp
cmp
push
loope
sub
cs
cmp
fdiv
mov
(bad)
adc
frstor
adc
cmps
fsub
mov
popa
dec
shl
mov
fisttp
mov
inc
in
mov
std
movs
aad
ins
pop
cwde
fidiv
js
sbb
in
jmp
les
jne
mov
adc
cmps
mov
cmp
ss
and
and
cdq
cmovb
cmp
mov
sub
stos
mov
shr
dec
mov
mov
mov
add
inc
cmps
cwde
mov
inc
out
mov
cmp
les
nop
movs
jnp
ins
fadd
or
rcr
pop
pusha
pop
test
push
sbb
mov
fstp
test
sbb
and
add
jne
pop
push
(bad)
imul
imul
lock
mov
push
jmp
add
mov
inc
mov
call
xor
sar
mov
ror
inc
pop
test
nop
and
std
cmp
jmp
sbb
pop
pop
(bad)
xchg
stos
pop
xchg
and
push
pusha
xchg
and
(bad)
push
pop
std
dec
in
add
add
sub
pop
add
rcr
mov
cs
mov
cmp
iret
cwde
cmp
jle
fldcw
mov
inc
mov
mov
xchg
sahf
dec
add
jmp
sbb
pop
scas
mov
inc
pop
mov
loope
test
dec
popa
xchg
xchg
pop
stos
dec
cmp
fmul
lock
and
cmp
sub
jb
sahf
cdq
test
add
add
(bad)
jno
gs
add
jno
mov
xchg
pop
rep
jae
dec
sub
xchg
sub
fucomp
sti
add
dec
pop
ja
push
shl
push
cld
pop
pop
aad
cmc
xor
adc
loope
(bad)
or
xchg
cmp
mov
test
in
jg
scas
push
jmp
call
ja
add
pop
bound
inc
pop
dec
call
sbb
dec
repz
mov
or
jl
pop
lods
and
add
mov
(bad)
cmp
sub
into
stos
and
popa
test
loop
lock
test
cmps
push
jmp
sub
fwait
test
test
retf
mov
mov
hlt
xor
inc
ret
(bad)
enter
inc
and
jno
jne
ins
add
and
addr16
in
inc
adc
fild
pop
adc
mov
inc
sbb
jo
mov
xor
cli
xchg
xchg
sar
pop
add
(bad)
ins
mov
in
or
in
or
das
test
mov
inc
lods
mov
fwait
inc
lds
das
loope
div
add
js
push
or
mov
test
jl
pop
sub
pop
and
push
sahf
aaa
stos
dec
pop
mov
mov
sti
cmp
(bad)
shl
aas
scas
cld
sbb
jbe
js
sub
or
call
clc
mov
jmp
add
sbb
(bad)
mov
dec
les
add
jmp
jecxz
dec
jbe
cmps
sbb
cmp
mov
cmp
ins
pushf
int
mov
sbb
daa
in
imul
fwait
cmp
xor
ins
jno
inc
add
sti
adc
shl
cmp
icebp
jp
pusha
inc
inc
rol
mov
xchg
dec
pushf
in
sbb
(bad)
cmps
jae
ja
add
dec
fsub
cmps
(bad)
nop
das
cmp
jecxz
in
loope
inc
mov
stc
xor
cmp
test
push
sti
cmp
cmp
sbb
xor
push
stos
mov
jbe
mov
mov
pop
stc
push
or
jo
jecxz
mov
sahf
jg
xlat
xor
repz
in
call
js
pop
pop
inc
xchg
sub
mov
in
popf
xchg
(bad)
loope
jb
pop
mov
fsubrp
sbb
out
ss
rcl
mov
sub
retf
and
jo
or
xor
jo
mov
mov
cmp
inc
jmp
sbb
inc
add
add
lock
jb
dec
cmp
stc
adc
sub
in
mov
mov
add
xor
lods
test
aam
dec
in
nop
dec
adc
lds
popf
cdq
into
sub
mov
sbb
retf
fnsave
mov
(bad)
push
div
fbld
aas
pusha
sbb
mov
push
int
adc
lock
and
adc
pop
enter
fs
arpl
and
adc
dec
inc
fidiv
cmp
mov
movs
push
shr
lea
push
cmp
stc
cmp
mov
jmp
rol
mov
(bad)
fdiv
ss
fst
push
sub
mov
jb
dec
mov
mov
dec
(bad)
or
retf
pop
popa
pop
push
aad
cmp
cdq
push
test
sar
mov
cmp
sub
cmps
aas
sub
pop
ffreep
mov
add
fnsave
lahf
ret
pop
cmps
mov
imul
ja
add
mov
or
test
jmp
imul
and
outs
test
jge
xchg
arpl
xchg
cmps
lods
into
cmp
add
rol
addr16
loop
sbb
adc
sbb
mov
sahf
cmp
push
cmp
mov
inc
cwde
enter
jae
lods
jge
sar
test
mov
fucom
jno
std
movs
mov
lds
lods
call
test
loope
mov
addr16
xchg
imul
std
imul
je
cmp
inc
xchg
push
push
lods
jns
or
or
enter
jnp
cmps
pop
sbb
sbb
push
mov
sbb
mov
outs
aaa
sub
std
jmp
je
mov
movs
jmp
je
sub
les
pushf
mov
popa
mov
sub
repnz
sar
jge
mov
sbb
adc
fcmovne
pop
xor
sub
adc
add
xchg
jge
clc
sbb
cld
arpl
xor
push
adc
js
sbb
jae
pop
inc
lea
inc
mov
jp
call
jb
sbb
je
fwait
sti
push
in
cmp
push
(bad)
clc
cmps
ss
iret
adc
neg
push
fadd
movs
test
bnd
and
(bad)
je
xor
jns
imul
xchg
test
xchg
repz
inc
add
sub
outs
adc
push
call
adc
cld
sbb
pusha
fcomp
mov
rol
inc
xchg
push
lods
imul
std
mov
int3
mov
repnz
mov
pop
mov
adc
dec
mov
xor
dec
(bad)
jne
popa
call
je
cwde
stos
nop
sbb
fstp
leave
jmp
or
adc
inc
push
adc
mov
sbb
push
inc
cmp
inc
retf
sbb
push
xchg
xchg
out
mov
mov
xchg
sub
mov
sbb
adc
cwde
xchg
shl
addr16
cmps
push
clc
das
lock
or
not
push
or
pop
mov
mov
scas
pusha
in
repz
popf
in
jno
pusha
adc
and
popa
mov
(bad)
pop
lods
fs
fisttp
inc
xchg
sysret
mov
and
out
inc
mov
sbb
pop
ins
js
pusha
cdq
mov
jp
mov
dec
fdiv
mov
lahf
rcr
fistp
lea
cli
test
popf
outs
jp
lea
inc
repz
(bad)
jmp
mov
dec
mov
cdq
cmps
mov
cs
xchg
push
jo
pop
shl
fs
cdq
pop
iret
and
outs
jo
or
cmps
dec
inc
lea
xor
sti
xchg
pop
sub
(bad)
outs
popa
outs
fcomp
shl
ret
cwde
imul
inc
push
(bad)
das
call
clc
sub
mov
xchg
fcomp
pop
push
test
mul
adc
push
rol
sub
xor
popf
dec
and
scas
cmps
mov
shl
sahf
rol
imul
add
inc
mov
lods
push
sbb
test
and
jge
retf
mov
loop
pop
je
jl
movs
test
test
mov
mov
lods
test
je
out
mov
add
rcl
mov
inc
xchg
sub
adc
adc
repnz
pop
out
add
ins
xchg
outs
pop
mov
popf
lods
sahf
ss
(bad)
jecxz
mov
addr16
pop
out
or
sbb
sbb
ja
push
xor
cwde
mov
lahf
out
sti
xor
add
mov
fnstenv
mov
out
xchg
pop
push
aam
xchg
or
jle
mov
pop
mov
mov
inc
lods
xchg
jp
sub
call
sbb
mov
ss
push
mov
sbb
jnp
cld
cmp
hlt
and
or
pushf
pop
mov
fist
cmps
aas
jnp
test
jne
xor
(bad)
xchg
push
mov
sbb
dec
dec
dec
movs
pop
out
fdivr
mov
sahf
ja
cli
call
cmp
out
xchg
es
ror
mul
bound
mov
enter
hlt
test
inc
retf
sbb
cmp
pop
pop
bound
pop
icebp
pusha
add
pop
adc
inc
add
add
mov
test
ficomp
mov
jno
lods
stc
xor
adc
fsubr
pop
aad
outs
jg
pop
rcr
mov
pop
iret
clc
repnz
pop
cli
mov
pop
ins
cmps
xchg
and
mul
mov
enter
adc
(bad)
cld
push
shl
inc
sub
sar
push
div
popa
mov
sub
je
in
or
and
pop
sub
push
jl
cmp
xor
dec
or
movs
(bad)
mov
(bad)
loop
mov
dec
aam
inc
and
addr16
mov
push
in
repz
ret
pop
cmp
push
lods
test
mov
repz
je
cdq
jnp
pop
fidiv
fadd
push
gs
mov
js
je
mov
mov
sar
in
jae
add
cmp
ds
repnz
adc
push
lods
xchg
mov
out
cmps
inc
stos
(bad)
js
jne
push
fwait
dec
jmp
test
in
xor
cmps
stos
adc
in
sbb
mov
sbb
in
stos
icebp
inc
sbb
into
sbb
shr
std
js
sbb
fcom
inc
push
sub
xchg
lods
popa
ret
adc
inc
push
adc
xor
push
stos
pop
call
adc
jge
fisttp
fwait
movs
(bad)
jge
aam
and
data16
push
in
call
dec
out
inc
sub
aad
or
mov
jp
xchg
stos
cld
clc
xor
mov
cmp
rcl
jb
pop
call
pop
popf
popf
mov
pop
and
enter
pop
inc
stc
cmp
dec
es
push
shl
pop
jns
pop
cmp
mov
loop
mov
cli
js
daa
test
add
enter
test
xchg
sbb
pop
into
out
cli
popf
push
stos
stos
dec
ret
push
std
ds
retf
retf
or
das
adc
lea
or
sub
sbb
fld
sbb
adc
cs
jo
fnsave
xor
cwde
mov
addr16
jecxz
xchg
cld
or
sbb
mov
call
in
jmp
pop
in
jmp
les
mov
popf
cdq
mov
sbb
jl
cmps
data16
jb
sbb
adc
(bad)
mov
inc
sbb
mov
(bad)
scas
enter
add
(bad)
jle
jmp
cld
xor
jmp
fsub
sbb
cmp
inc
popf
std
mov
add
fnstsw
mov
jns
int
jg
add
(bad)
popa
mov
lods
(bad)
xor
mov
add
or
mov
pop
stc
sbb
mov
jbe
mov
pop
sub
xchg
mov
jmp
call
add
fcomp
or
scas
sub
mov
dec
xchg
mov
das
xor
xchg
xchg
imul
push
rol
in
mov
popf
inc
mov
xchg
cli
scas
jmp
mov
cmps
mul
pop
inc
stos
pop
jp
cmp
sub
sahf
adc
jae
sub
pop
mov
adc
sbb
popa
repz
add
adc
adc
cwde
push
xchg
aaa
retf
jle
mov
test
popf
imul
jbe
popa
outs
and
cmp
push
adc
out
paddsb
fucomip
daa
mov
inc
(bad)
mov
shl
sahf
cmps
cmp
and
and
mov
int
dec
pop
ins
mov
jb
dec
mov
mov
pop
sub
lahf
int3
jbe
fs
mov
aaa
sbb
mov
pop
dec
lea
rcl
js
nop
mov
(bad)
out
call
(bad)
push
js
adc
(bad)
cmp
sar
or
enter
addr16
adc
mov
out
pop
inc
sti
ret
mov
cmp
mov
in
ds
adc
stc
scas
jne
add
and
push
or
pop
stos
push
int3
mov
int
dec
pop
add
push
xor
sti
push
inc
pushf
dec
xor
pop
add
push
inc
in
xchg
rcr
pop
inc
lahf
push
sti
sub
test
mov
ss
in
pop
in
repz
jae
mov
and
out
leave
test
aad
sbb
sbb
jecxz
fnstsw
and
cmp
inc
div
push
dec
mov
sar
(bad)
jg
rol
pop
aaa
into
or
push
add
lahf
pop
lea
xlat
sbb
test
and
mov
pop
jmp
rol
mov
push
in
mov
xchg
jg
stos
mov
inc
in
mov
adc
retf
retf
inc
inc
lea
daa
pop
pop
(bad)
out
leave
gs
xor
inc
inc
mov
stos
mov
xchg
mov
mov
inc
push
inc
add
cmp
imul
stos
adc
mov
mov
or
dec
enter
(bad)
frstor
pop
jl
fld
test
outs
xchg
iret
xor
add
cmc
out
push
jmp
test
(bad)
sub
mov
neg
in
jp
fist
push
idiv
pop
ds
call
pop
add
or
cdq
dec
and
lods
xor
mov
xor
add
pop
push
cmp
sbb
or
cwde
mov
test
test
pop
inc
push
call
retf
movs
sbb
in
ss
xchg
and
push
mov
sbb
mov
movs
ret
icebp
or
test
popa
cdq
fiadd
jl
pop
sbb
fdivp
inc
(bad)
and
inc
test
jns
mov
jnp
mov
mov
sti
loop
mov
add
and
or
dec
xor
mov
fdiv
call
in
jp
xchg
xchg
ret
mov
push
push
in
mov
xchg
ja
sbb
mov
jmp
inc
div
test
aad
jne
mov
dec
fadd
cmp
jmp
(bad)
fist
es
cmps
call
ror
pop
push
mov
mov
retf
dec
jno
pop
inc
shl
pop
lods
test
into
test
mov
sbb
dec
push
and
inc
xchg
xchg
sbb
fucomip
popf
push
jecxz
xchg
popa
outs
loopne
icebp
adc
call
stos
push
fwait
and
or
dec
in
sti
div
jl
cmp
push
push
dec
pushf
mov
test
and
popa
xor
cmp
or
xor
outs
push
mov
jae
mov
ins
inc
or
jecxz
loopne
mov
jns
lds
xchg
retf
ds
out
or
clc
icebp
add
dec
lock
push
test
jecxz
aam
dec
jns
mov
ss
sub
ror
push
ja
sub
jno
inc
add
icebp
mov
ins
out
(bad)
jp
(bad)
arpl
jne
cld
sbb
add
scas
pop
outs
test
mov
test
jg
test
push
sub
mov
xlat
call
fwait
inc
mov
fucomi
xor
mov
daa
(bad)
fidiv
xchg
ficom
fnstsw
sub
jne
xor
push
mov
push
lahf
inc
add
mov
stos
push
xchg
in
js
in
jl
inc
inc
fadd
ja
xor
inc
sbb
rsm
mov
jg
(bad)
mov
icebp
adc
daa
mov
cmp
test
lock
imul
mov
dec
fisub
loope
xchg
addr16
cld
inc
ins
lea
or
in
mov
push
rcr
gs
adc
loopne
sub
xchg
adc
in
dec
cld
fbld
mov
sub
pusha
cmc
aaa
mov
or
scas
cmps
mov
out
repz
inc
shr
inc
jmp
fldenv
mov
pop
mov
test
mov
jns
sbb
(bad)
pop
sbb
push
cli
push
add
lock
in
pop
int3
add
jg
fwait
sub
pop
or
add
pop
ret
hlt
das
xchg
mov
fs
cmp
xchg
cmp
pop
dec
xchg
xor
aad
sbb
cmps
mov
cmc
jns
arpl
cmp
leave
adc
dec
add
imul
jp
push
ret
cdq
mov
movs
jno
dec
in
sbb
xchg
in
repz
arpl
or
xchg
dec
or
or
sbb
jnp
fistp
or
jbe
iret
add
mov
(bad)
jne
pop
push
mov
pop
scas
mov
les
(bad)
push
jg
push
inc
call
add
leave
frstor
xchg
je
cdq
bnd
(bad)
cli
mov
enter
pushf
dec
loope
mov
and
aam
test
cmp
cmp
inc
test
jns
lahf
mov
adc
cmps
pop
repnz
push
aas
mov
mov
mov
movs
or
scas
and
mov
lsl
out
mov
hlt
inc
sbb
xchg
dec
retf
cmp
loopne
loope
test
xchg
pushf
xchg
aaa
mov
(bad)
sbb
ret
xchg
jmp
fnstenv
int
fsub
and
push
rol
popa
fisttp
add
ins
and
cwde
mov
test
mov
pop
in
xor
adc
sub
push
push
mov
shl
inc
lahf
nop
pushf
or
sbb
lods
mov
mov
pop
jl
ja
popf
sahf
inc
mov
jmp
add
cmc
mov
xchg
ins
xchg
mov
sbb
mov
jl
cmc
sub
push
shr
cmp
mov
popf
sbb
cmp
xor
jno
lds
gs
cmc
adc
(bad)
and
mov
mov
pushf
dec
shl
push
call
out
(bad)
mov
mov
push
lock
pop
test
pop
mov
sub
loope
or
jne
(bad)
cmps
mov
fiadd
lods
stos
xchg
frstor
stos
fdivr
icebp
jae
cmp
adc
out
in
push
jmp
ins
pop
call
call
cmps
xlat
push
jg
adc
inc
add
daa
pushf
pop
inc
pop
and
adc
fnstcw
call
cli
pop
inc
and
pop
mov
movs
adc
xor
fwait
inc
scas
mov
hlt
xor
pop
pop
mov
test
out
xchg
push
cmp
inc
lds
or
jle
test
test
mov
cmp
adc
adc
add
dec
das
and
xlat
push
ja
ins
xor
xor
scas
std
push
sbb
fxch
mov
sbb
push
mov
fidivr
or
mov
xchg
jbe
dec
cli
lahf
mov
sub
sub
jmp
jmp
out
shl
loopne
pusha
sub
xor
jo
jge
lahf
int
push
pop
scas
dec
push
cmp
sbb
or
push
and
mov
test
call
cmps
or
cmps
cmp
ins
dec
xor
cld
(bad)
clc
fs
and
jge
jmp
outs
(bad)
out
cmp
mov
mov
sahf
mov
fadd
xchg
movs
movs
and
(bad)
test
aam
pop
adc
daa
enter
loopne
jle
inc
xor
es
mov
iret
mov
cmp
jns
sar
fsub
pop
int
imul
sub
gs
push
add
aas
pusha
lahf
retf
cs
push
shl
add
std
pop
inc
bound
rcr
ret
cmp
shl
add
std
xchg
adc
push
test
pop
xchg
mov
mov
mov
mov
sbb
mov
and
lods
sub
pusha
and
popf
iret
test
fcmovu
and
std
popa
jno
pop
ficomp
addr16
xchg
pop
mov
cdq
jl
mov
push
scas
mov
in
(bad)
in
xchg
mov
imul
call
mov
test
pop
call
(bad)
push
jae
xchg
scas
xor
mov
movs
jmp
dec
ja
test
xchg
jb
dec
inc
xor
out
sbb
dec
cmp
or
out
inc
fcmovbe
sbb
inc
cmp
sbb
and
and
push
mov
sbb
ds
das
test
push
inc
sahf
push
retf
pop
out
xchg
dec
in
mov
lods
add
push
xchg
mov
pop
mov
shl
stc
popf
jp
mov
or
fdiv
inc
call
jns
pushf
jnp
jb
cwde
enter
aam
fcomi
sbb
lea
imul
xor
lea
sbb
lar
cli
push
adc
mov
leave
sbb
clc
test
aas
or
pop
out
push
es
out
add
sar
mov
outs
mov
loopne
cmps
aad
dec
gs
fidivr
push
repz
iret
int3
shl
add
jns
cmp
imul
dec
scas
test
fisttp
push
add
in
cmp
daa
scas
sub
sbb
pop
fs
pop
mov
xor
cmc
mov
mov
add
dec
jp
cdq
push
(bad)
mov
push
call
xchg
and
sbb
test
inc
shrd
ret
rol
and
test
clc
int
out
arpl
and
xor
jae
test
mov
xchg
hlt
jl
mul
push
aaa
lds
pop
and
xchg
or
lods
pop
xlat
push
push
xchg
mov
jno
(bad)
xlat
movs
inc
stos
retf
pop
outs
sub
rol
les
push
stc
hlt
mov
lds
mov
inc
arpl
mov
retf
rol
xchg
mov
rcr
inc
sub
mov
mov
pop
jle
imul
or
cmp
pop
cld
jmp
(bad)
iret
popa
adc
fdivr
imul
mov
jo
fimul
xchg
xchg
xlat
xchg
imul
fcmovnbe
xchg
dec
mov
jbe
mov
cmps
xlat
pop
mov
jmp
lock
neg
sbb
mov
gs
loope
repz
std
fs
mov
inc
in
aam
and
nop
retf
cli
sbb
add
pop
mov
test
dec
fwait
aam
sub
inc
push
cmps
inc
add
xor
adc
push
add
sahf
movs
stc
imul
in
sbb
inc
jmp
pop
mov
fwait
(bad)
jg
loope
adc
cmp
ficomp
clc
mov
dec
mov
outs
cdq
test
xlat
mov
scas
scas
imul
rcl
push
push
mov
ret
nop
mov
repz
sahf
xchg
dec
push
add
out
es
ds
ss
sub
pop
jo
xor
jno
cmps
test
sbb
dec
fsubr
test
test
popa
xchg
(bad)
fdivr
xchg
call
inc
xor
jns
mov
rcl
pop
jge
test
pusha
xor
cdq
xor
aad
fdivr
push
adc
push
pushf
and
pusha
and
mov
cdq
xor
fidivr
clc
jg
clc
jle
push
aas
fadd
push
mov
scas
imul
sbb
cmps
mov
retf
jmp
dec
pushf
pop
jbe
lahf
imul
call
jo
mov
mov
(bad)
mov
adc
mov
and
test
mov
sub
vmulsd
sbb
sub
inc
xchg
push
(bad)
(bad)
sar
aas
fdivr
(bad)
es
jae
arpl
push
push
push
xor
xchg
pop
stos
xsave
mov
pop
test
fwait
add
adc
(bad)
out
and
dec
pop
fistp
lahf
leave
dec
xchg
sahf
popa
aam
inc
or
loop
jo
test
add
and
cmc
(bad)
rol
bound
stos
push
idiv
inc
and
retf
data16
jns
shr
pop
outs
mov
mov
in
jns
ficom
mov
and
and
pop
stos
adc
adc
mov
cmp
fld
ror
push
mov
xor
fnstsw
push
clc
stos
mov
fistp
mov
bound
mov
stos
scas
clc
addr16
xchg
mov
push
retf
push
mov
or
cmp
cmp
mov
or
jns
ror
rcr
inc
inc
dec
sub
sub
xor
imul
xor
push
sbb
packuswb
(bad)
sahf
sbb
popa
js
pop
(bad)
xchg
sahf
je
add
mov
sar
cwde
xchg
mov
out
sub
loope
push
mov
cmc
or
rcl
lock
adc
add
ins
adc
cdq
dec
or
mov
sbb
in
jle
(bad)
dec
push
pop
jmp
pop
scas
adc
jno
lea
push
mov
xor
int3
in
mov
or
inc
(bad)
xchg
and
mov
mov
std
lods
jmp
cmps
ret
mov
es
hlt
xchg
mov
xor
push
ret
in
pop
pushf
xor
jge
pop
gs
pop
push
(bad)
jmp
sbb
bound
inc
jne
sbb
sub
push
das
ss
pop
mov
mov
sbb
or
test
inc
loope
sti
sbb
leave
lds
mov
mov
in
cwde
popa
push
test
xchg
mov
jbe
cdq
test
mov
aam
data16
movs
jo
jne
dec
push
cmp
aam
ja
push
je
dec
xchg
pop
mov
pop
mov
sub
jns
loope
mov
sub
add
sub
ds
dec
push
lods
pop
inc
mov
xchg
xor
lods
cwde
and
jmp
cld
inc
pop
jo
push
add
pop
push
fxtract
mov
mov
push
dec
movs
fwait
lods
pusha
xor
cmp
(bad)
push
int3
pop
(bad)
or
aad
int
jge
inc
mov
pop
cmp
mov
push
add
bound
inc
ins
or
shl
cmp
cmps
inc
inc
mov
push
pop
cdq
(bad)
fwait
cmp
rol
jbe
scas
jp
mov
mov
enter
std
ret
lods
xor
sbb
adc
hlt
and
jmp
sbb
ss
das
add
loope
bound
cmps
jne
jbe
pusha
and
icebp
lahf
xchg
mov
fucomp
jo
jmp
int
or
addr16
mov
mov
gs
dec
xor
sub
pop
pop
(bad)
mov
mov
sbb
lahf
arpl
pushf
(bad)
push
mov
sub
mov
sar
and
ret
test
mov
sub
pop
xchg
jmp
and
pop
jnp
jge
imul
mov
cmp
jle
jmp
mov
ss
or
adc
daa
out
push
mov
test
ins
in
out
pop
mov
push
and
inc
call
pop
inc
xchg
add
stos
ret
pop
jnp
cmps
std
arpl
fld
mov
push
shl
aaa
push
or
jmp
dec
lods
outs
push
inc
test
or
and
pop
jecxz
jge
in
jno
push
xor
jl
cmp
mov
push
(bad)
mov
jmp
idiv
ja
sub
mov
popf
inc
idiv
mov
mov
neg
mov
test
dec
sti
rcl
cmc
loopne
js
mov
or
sbb
call
js
jae
pop
push
jno
mov
mov
pop
out
arpl
mov
movs
cli
inc
jbe
call
inc
sub
push
lods
pop
jbe
push
and
mov
in
iret
mov
mov
add
pop
inc
dec
scas
and
xchg
inc
sti
leave
mov
add
icebp
xchg
rcr
cli
mov
or
sahf
add
rcr
neg
fstp
xchg
xchg
cmp
retf
mov
aas
inc
outs
stos
dec
push
jns
test
imul
sbb
add
or
jg
sahf
imul
mov
ss
pop
imul
iret
inc
aam
fs
push
loop
pushf
jno
or
add
rcl
mov
repnz
call
xor
outs
rcr
pop
cmp
nop
cmp
xor
push
cmp
mov
sahf
nop
dec
in
daa
rcl
inc
jne
cld
add
sub
scas
add
lods
adc
mov
xchg
push
and
fs
mov
int
xor
fistp
xlat
pop
mov
xchg
jns
out
fld
mov
push
in
pushf
cmps
js
iret
std
xchg
mov
mov
sub
mov
std
inc
shl
inc
ja
cmps
pop
adc
push
mov
aas
mov
xchg
pop
outs
inc
and
adc
push
or
add
mov
mov
pusha
movs
xchg
or
inc
stc
shl
test
ins
movs
pop
loop
out
test
mov
iret
mov
and
lock
jo
bound
fstp
add
cmc
fpatan
repnz
sbb
fstp
scas
ja
push
pop
add
or
cli
dec
sbb
cmp
jmp
pop
push
dec
pop
fild
je
adc
pop
lods
jb
mov
clc
adc
push
lock
pop
cmp
sub
cmp
loope
jge
test
test
leave
inc
mov
fist
jle
les
mov
mov
push
xchg
jnp
adc
ror
dec
sbb
data16
bound
mov
hlt
jnp
mov
repz
inc
xor
dec
add
jbe
lea
popf
push
in
push
mov
inc
call
cwde
out
mov
aam
outs
jge
jnp
mov
ins
call
nop
inc
es
cmc
mov
(bad)
jne
call
cdq
cmps
pushf
and
rcl
scas
xor
cmp
mov
je
pop
push
push
push
les
sub
mov
stos
pop
shr
mov
mov
xor
jo
nop
ins
sbb
aad
imul
out
scas
mov
jnp
pop
add
clc
inc
mov
mov
int3
retf
mov
stos
xor
sbb
fdiv
test
mov
inc
mov
ficomp
ds
out
fdivr
daa
or
xor
arpl
in
xchg
xchg
dec
add
sbb
add
inc
or
add
jnp
fnstcw
adc
retf
sbb
cdq
sbb
sbb
dec
enter
jmp
mov
scas
push
lods
shl
pop
jg
cmps
cmc
nop
cwde
mov
out
fsub
jae
push
daa
sbb
and
cmp
cmp
cmps
xor
bound
sbb
inc
icebp
ret
jo
mov
pop
sub
pop
jae
xor
icebp
addr16
mov
dec
lea
inc
call
jmp
add
cwde
sar
repnz
shl
mov
arpl
xchg
cmp
stos
push
jmp
fsubrp
popa
lock
pop
test
inc
inc
cdq
dec
pop
ins
xchg
les
add
jmp
mov
sbb
es
ja
and
out
dec
fstp
sar
add
cmp
lea
pop
inc
inc
popf
jnp
xchg
loope
cdq
mov
inc
jmp
and
imul
scas
out
movs
bound
cwde
ret
sub
fld
adc
aaa
dec
in
mov
inc
out
inc
ja
mov
inc
and
xchg
mov
lea
and
sbb
retf
cmp
out
jbe
inc
add
adc
jge
pop
mov
xor
jae
cwde
addr16
sbb
mov
inc
xchg
fdiv
(bad)
push
dec
lds
cld
fstsw
mov
push
in
jp
out
mov
call
mov
xlat
adc
mov
push
lods
push
sbb
jmp
dec
ss
test
je
clc
dec
aaa
push
mov
add
pop
fisttp
jae
in
es
and
pop
mov
cmps
pop
cmp
cli
xor
int3
mov
lods
repz
pusha
(bad)
mov
data16
fwait
dec
popf
loopne
xor
retf
popa
cli
cdq
fwait
iret
adc
lahf
stos
mov
xor
push
in
sub
xor
loop
sbb
xchg
or
add
mov
cli
push
in
mov
test
pop
int
outs
inc
xor
mov
xor
or
cdq
xchg
stos
sbb
test
inc
test
inc
stc
jbe
push
(bad)
push
ret
push
mov
mov
bound
retf
adc
arpl
fwait
popa
inc
sahf
xchg
not
cmp
outs
imul
(bad)
push
pop
in
arpl
dec
lahf
or
stos
inc
or
scas
mov
mov
repz
jl
popa
xor
sbb
pop
cmp
sub
cmp
adc
(bad)
mov
clc
pop
inc
dec
cmps
inc
(bad)
rol
xchg
jmp
adc
mov
(bad)
hlt
mov
lock
xchg
test
out
iret
hlt
cmp
popf
inc
lea
xor
and
and
cmp
mov
movs
test
out
(bad)
js
out
jp
inc
sbb
cmp
push
je
out
aas
mov
(bad)
dec
adc
add
ror
aam
mov
mov
jns
fisubr
mov
and
test
mov
dec
cwde
outs
inc
cmps
xchg
stos
and
(bad)
cmps
lods
jmp
jbe
inc
pop
adc
sbb
dec
and
inc
scas
cmp
push
out
mov
sahf
rol
mov
pop
ins
push
xor
sub
sub
jae
adc
push
mov
pop
pop
(bad)
inc
mov
je
mov
pop
xchg
add
into
stos
mov
out
jne
push
push
mov
test
and
out
test
inc
outs
mov
aad
push
or
mov
cs
cwde
push
outs
inc
(bad)
push
cmp
sahf
aas
push
(bad)
jge
lock
xchg
cmps
dec
cmp
pop
cmp
aam
bound
ja
scas
popf
xor
push
pusha
cli
sti
cdq
xor
push
je
sub
test
ins
mov
mov
aaa
(bad)
jo
jle
mov
dec
outs
cmps
test
cmp
in
fld
xchg
movs
push
and
cld
xlat
repz
adc
push
push
test
jne
mov
into
add
frstor
adc
or
inc
bound
bound
push
or
test
test
mov
inc
jmp
jp
xchg
cmps
out
mov
mov
mov
aaa
into
mov
cli
fwait
mov
jne
mov
adc
loop
test
mov
or
call
xor
push
dec
das
mov
cmps
xchg
mov
call
push
adc
outs
add
adc
lods
outs
adc
dec
and
sbb
ins
inc
xor
adc
enter
pop
and
pop
sti
call
ja
out
jmp
and
jle
cli
(bad)
icebp
push
sbb
mov
in
xlat
neg
mov
inc
int
fldenv
adc
jnp
add
inc
shl
push
lea
xchg
mov
adc
jno
sti
jle
pop
cmp
add
icebp
inc
jb
or
xchg
push
mov
mov
adc
inc
sti
shr
pop
or
popa
cmps
jo
xchg
loope
mov
loope
idiv
mov
leave
dec
mov
stos
(bad)
adc
std
push
das
out
les
lods
test
or
fucomip
icebp
jl
dec
push
cmp
lods
sub
mov
or
xor
cmps
call
hlt
add
add
sbb
and
sbb
or
cmps
cmp
sub
fidiv
je
dec
push
push
fimul
mov
test
stos
jp
out
jmp
jne
pop
scas
sbb
or
mov
add
lds
sbb
cmp
retw
cmp
dec
mov
aaa
add
scas
xchg
xchg
xchg
dec
cmp
mov
sbb
ds
sub
mov
pop
lods
dec
push
lods
xchg
mov
fwait
out
mov
sbb
cli
mov
mov
into
fwait
je
rcr
mov
cmp
sahf
mov
(bad)
xchg
jmp
bound
imul
repnz
inc
rcr
sub
push
or
out
scas
lods
adc
(bad)
dec
mov
adc
add
scas
add
sbb
mov
(bad)
outs
adc
popf
daa
mov
gs
mov
inc
cmps
aam
adc
loop
sub
out
cmp
inc
mov
call
cwde
xchg
add
shr
mov
(bad)
sub
cmp
shl
jle
test
inc
push
mov
jno
adc
rol
cmp
and
ds
and
cdq
jl
cmps
xor
test
pop
shr
pop
gs
mov
pushf
in
call
mov
cs
ret
in
dec
in
popf
test
bound
jmp
fld
hlt
dec
stc
cmp
dec
ret
(bad)
fiadd
cmp
push
mov
ins
cli
xor
mov
out
into
aam
add
add
inc
jne
stos
pop
xchg
sub
inc
pop
mov
add
adc
fsubr
xchg
das
mov
add
mov
mov
mov
adc
mov
test
jecxz
mov
inc
push
mov
xlat
shl
mov
das
and
gs
adc
outs
mov
pop
or
xor
stc
dec
sahf
cld
es
jo
pusha
cmp
dec
imul
mov
pop
fst
mov
outs
xchg
mov
in
add
retf
addr16
jae
sub
test
inc
movs
retf
mov
mul
inc
and
neg
(bad)
fstp
add
sbb
add
jp
test
rcr
aaa
cmp
(bad)
mov
js
cmp
inc
fidiv
imul
les
pop
loop
pop
mov
dec
push
addr16
fldenv
dec
or
sub
imul
pop
fmul
test
mov
xor
fcmovnbe
fwait
inc
xchg
mov
jle
jbe
sub
xchg
jl
mov
xchg
xor
pop
mov
pop
pop
in
cmp
stc
ret
inc
pop
out
xchg
sub
dec
ror
pop
xor
(bad)
jecxz
(bad)
cmp
sub
loopne
push
inc
out
mov
ds
addr16
sbb
cli
sbb
mov
inc
jne
dec
aas
mov
jl
lea
loop
xchg
mov
push
jno
and
mov
pop
movs
out
loop
out
or
enter
out
sbb
fadd
mov
mov
push
out
shr
mov
fldcw
or
jne
inc
push
add
jno
push
pop
push
sub
adc
sbb
and
lea
nop
and
dec
pop
mov
outs
mov
mov
inc
mov
(bad)
jae
jb
(bad)
stc
aas
xchg
hlt
loop
out
lahf
ja
mov
or
outs
movs
mov
dec
push
in
pushf
add
xchg
adc
stos
pop
xchg
ja
dec
ss
clc
stc
pop
in
and
cmp
pop
and
test
dec
lahf
fild
xchg
cli
push
adc
lds
sub
sbb
addr16
jo
xlat
mov
add
xlat
out
cmp
add
mov
aas
mov
mov
dec
mov
xchg
cmp
les
mov
xchg
sbb
(bad)
test
add
and
(bad)
pop
pop
and
enter
jge
add
dec
mov
or
cwde
cmps
retf
pop
les
int3
das
test
add
mov
popa
mov
dec
push
or
push
push
repz
lods
aas
inc
push
ins
mov
push
aam
popa
jl
jp
sahf
test
mov
pop
(bad)
mov
xchg
ja
dec
mov
cmps
push
jl
mov
(bad)
mov
(bad)
bound
movs
imul
cmp
test
cdq
push
inc
sub
mov
addr16
int3
sbb
and
or
mov
arpl
jae
(bad)
sbb
mov
ds
dec
xchg
out
mov
in
inc
js
jnp
xchg
pop
mov
loope
aam
push
and
xrelease
in
div
push
and
bnd
mov
inc
retf
pop
in
daa
sub
in
push
jp
mov
sbb
mov
iret
adc
leave
jle
jecxz
mov
sbb
(bad)
mov
sbb
push
or
cdq
adc
push
xor
out
sub
stc
dec
sub
sahf
ss
cld
dec
fwait
out
mov
mov
push
fisubr
and
jmp
mov
xor
jge
mov
icebp
add
scas
jge
or
pop
dec
lea
dec
jbe
ss
xchg
sbb
repnz
push
jae
inc
ret
and
inc
jae
mov
inc
ja
jg
cmps
cs
movs
lods
scas
adc
adc
pop
shr
mov
jge
sub
mov
arpl
lahf
jge
in
cli
xchg
out
inc
cmps
movs
sub
mov
into
fsubr
into
fbld
xchg
aad
(bad)
sub
dec
and
jle
or
pop
dec
movs
das
inc
cmp
dec
pop
ins
mov
test
(bad)
pop
push
sbb
xor
ja
pop
dec
mov
sbb
test
das
or
cld
jmp
(bad)
dec
arpl
fmul
repnz
(bad)
in
maskmovq
lock
hlt
push
cmc
sahf
cmps
mov
scas
imul
daa
and
(bad)
mov
ficom
push
(bad)
sbb
(bad)
shl
add
jnp
mov
jae
fnsave
lahf
repnz
sub
push
xchg
sub
xor
dec
imul
out
mov
ins
ret
cmp
hlt
imul
test
inc
stos
or
in
mov
mov
popa
js
mov
cmp
int
inc
jl
mov
inc
pop
or
sti
lods
jge
sub
cmp
sbb
mov
dec
mov
cmp
adc
push
enter
adc
add
inc
dec
mov
push
mov
xor
cli
mov
mov
pop
sbb
jg
push
xor
jo
and
xchg
outs
lea
arpl
mov
xor
inc
mov
dec
shr
cmc
(bad)
clc
pop
shl
pop
sub
jne
jle
dec
add
movs
popf
lea
(bad)
out
sbb
adc
inc
gs
ss
sbb
xor
es
add
adc
fld
out
jnp
mov
dec
xchg
les
mul
nop
cmps
mov
push
cmps
mov
aad
shr
push
outs
jecxz
jbe
dec
jmp
and
xor
ins
stos
daa
pusha
inc
xchg
or
xchg
iret
dec
sub
mov
pop
mov
data16
stos
aas
mov
push
mov
jge
lods
mov
iret
out
pop
ror
xchg
mov
pop
mov
mov
iret
add
clc
stos
mov
test
(bad)
mov
adc
bound
mov
jmp
or
rcr
xchg
jge
mov
cmp
(bad)
mov
push
jmp
inc
cmp
sub
xchg
pop
retf
jg
sbb
dec
pop
(bad)
sub
cmovle
dec
fdivrp
xchg
adc
gs
dec
not
cmps
push
std
sahf
sbb
movs
std
xor
inc
hlt
mov
jg
mov
xlat
out
call
mov
fidivr
inc
sub
jmp
jmp
(bad)
pop
arpl
mov
push
pop
popf
je
pop
cwde
mov
cmps
jp
iret
sub
xor
or
push
sub
mov
xchg
jne
pop
pusha
test
adc
stos
sbb
adc
xchg
sar
dec
bound
jge
popf
test
loope
popf
nop
push
cmp
fcom
mov
je
mov
das
sbb
xchg
mov
dec
sbb
ffreep
mov
ja
mov
dec
sub
mov
cdq
in
add
adc
cmp
add
sbb
pop
mov
lods
push
xor
cmp
mov
push
push
jmp
jecxz
lahf
out
push
(bad)
dec
inc
mov
cmp
shl
fld
in
retf
xchg
popa
test
jnp
cdq
lahf
test
jmp
ds
out
test
jne
adc
push
cmc
test
inc
int3
cmp
jl
sbb
mov
add
and
add
loopne
xor
and
push
inc
mov
jne
stos
movs
or
push
inc
fidiv
inc
jecxz
push
inc
fisubr
jmp
sahf
cmp
cmps
pop
or
cdq
cwde
shl
cmp
add
xchg
nop
pop
add
dec
ja
fidivr
jne
inc
pop
inc
hlt
imul
add
jbe
jo
jb
mov
xchg
push
push
stc
jl
idiv
icebp
dec
ins
pop
cmps
xor
jb
cmp
inc
push
lods
jge
pushf
adc
nop
mov
daa
pop
push
out
stc
stos
add
hlt
jbe
inc
data16
push
sbb
dec
test
mov
xchg
add
retf
ret
sti
inc
mov
mov
icebp
cmp
jmp
jl
fwait
add
or
mov
push
add
cmp
ja
(bad)
cmps
lds
out
ret
call
mov
pop
stos
inc
iret
pop
jmp
outs
test
or
adc
mov
pop
ror
daa
ror
fldcw
mov
mov
or
(bad)
movs
fcmovbe
dec
mov
mov
and
cld
js
out
pushf
push
xchg
push
mov
out
dec
sahf
aas
pop
sbb
lods
push
sub
xchg
dec
cli
in
sub
sbb
sbb
pop
mov
scas
adc
sahf
xchg
push
jmp
pop
fnsave
mov
pop
mov
xchg
xlat
in
jnp
sbb
(bad)
sbb
mov
int3
cmp
cwde
push
je
xor
adc
jmp
inc
xchg
adc
mov
or
movs
call
ret
mov
push
adc
sbb
adc
push
(bad)
rol
fsubr
popa
retf
jb
jp
(bad)
stc
push
mov
sahf
push
or
out
jp
sahf
test
dec
test
sbb
xchg
iret
aad
push
push
jmp
or
shl
cli
inc
jge
jae
xor
popa
mov
xchg
mov
out
and
bound
fidivr
xor
add
cdq
push
or
(bad)
cmp
push
pop
jecxz
lahf
add
pop
inc
pushf
je
popf
hlt
jle
mov
ja
xchg
inc
dec
sar
cmps
or
dec
xchg
lods
test
add
(bad)
xor
out
loope
pop
jle
xchg
jbe
ja
pop
and
dec
jnp
fsubr
add
inc
or
mov
push
aad
fadd
jl
sbb
sbb
and
dec
push
cmps
pop
test
mov
popf
arpl
adc
mov
mov
(bad)
fmul
ja
das
aam
sti
inc
mov
mov
stos
das
repnz
mov
ror
xchg
fs
xchg
call
mov
not
xor
jo
adc
inc
mov
pop
ins
clc
push
add
mov
pop
jmp
out
jp
mov
inc
cmp
or
jb
ss
pop
mov
mov
xchg
xor
mov
add
daa
xchg
fld
pop
je
mov
jp
mov
fs
nop
add
jmp
mov
ja
mov
cmps
repnz
mov
lods
das
pop
push
fimul
dec
push
jp
xor
pop
mov
call
ret
fistp
xchg
jmp
push
test
adc
lea
pop
lea
xor
adc
int
inc
fwait
in
or
jno
mov
jecxz
out
jge
enter
aam
mov
pusha
push
sti
xchg
test
push
retf
lock
mov
fisubr
int
inc
or
in
imul
xchg
pop
and
ret
dec
es
add
enter
ins
jge
fmul
imul
stc
inc
sbb
pusha
mov
mov
fdiv
in
mov
jo
cmp
out
popf
loope
jne
pushf
add
sti
repz
retf
cmp
stos
adc
loope
scas
sar
xchg
cmps
jns
sub
push
aas
sub
cmc
std
push
jecxz
push
or
jne
jb
jnp
outs
test
(bad)
push
(bad)
retf
out
push
addr16
(bad)
push
dec
imul
es
and
pop
ins
xchg
xchg
cs
cwde
mov
inc
and
repnz
call
mov
jns
cld
cwde
push
clc
push
xor
div
es
sbb
add
xchg
cld
pop
inc
sti
cli
xchg
ret
(bad)
bound
pushf
fs
outs
fdivr
adc
push
cdq
and
push
cmp
cmp
cmps
arpl
pushf
cmp
aad
out
add
daa
mov
sbb
cmps
dec
ins
test
xor
cmp
add
dec
xchg
cli
xchg
cmp
jl
sub
ss
push
mov
mov
leave
add
ror
mov
sub
mov
and
stc
test
std
jns
mov
hlt
pop
push
adc
cli
retf
inc
pop
sub
mov
inc
pop
jae
movs
les
nop
sbb
sub
xor
pop
cmp
jb
fwait
jae
mov
add
push
dec
fucomp
add
cld
sbb
out
std
bound
xchg
sbb
lds
inc
mov
mov
xchg
jecxz
gs
imul
and
pop
cwde
cmp
cmp
pop
inc
jo
push
pop
outs
mov
iret
jp
rcl
lock
jo
add
or
imul
ins
lock
push
mov
ja
mov
pop
shl
adc
sbb
movs
jno
fwait
(bad)
pop
test
loopne
lds
popf
es
dec
mov
mov
inc
xchg
(bad)
mov
xchg
fwait
jp
jbe
sbb
aad
fiadd
and
adc
stos
dec
daa
jns
mov
retf
(bad)
icebp
and
jae
jmp
jnp
pusha
test
popf
push
mul
push
and
mov
push
add
neg
loope
inc
inc
fistp
rol
mov
movs
push
out
rep
das
aad
lods
xchg
je
mov
xchg
fprem
js
cmc
mov
inc
cmps
sbb
scas
inc
lds
cmp
jo
push
nop
cmps
mov
or
int3
sbb
leave
push
push
push
xor
xor
inc
sub
aas
mov
repnz
jb
dec
aaa
aam
pop
in
mov
cmp
xor
in
clc
mov
xlat
fs
inc
lea
fdivr
movs
popa
(bad)
in
xor
sti
lahf
add
pop
mov
lods
clc
cmp
sbb
xor
test
neg
ins
jnp
fwait
push
shr
pop
push
ror
jnp
dec
shr
inc
mov
or
out
call
lahf
ror
shl
inc
and
sbb
arpl
aaa
lods
pop
pop
fsubr
mov
jb
mov
inc
imul
mov
(bad)
loopne
jecxz
add
jnp
xchg
loope
xchg
aad
inc
jmp
rcl
fwait
mov
push
mov
std
les
jmp
ins
call
or
fmul
push
ret
js
mov
jns
inc
sbb
icebp
(bad)
mov
xor
scas
imul
push
dec
pop
inc
call
gs
push
lods
ins
shl
fwait
jge
frstor
add
test
lahf
stos
call
inc
push
lods
pop
rol
and
pop
push
in
cld
cmc
xor
jg
(bad)
movs
out
das
test
jno
stos
xchg
and
fchs
push
mov
xor
cmp
fdiv
jb
add
pushf
push
add
call
fmulp
cmp
gs
sub
inc
xor
jne
inc
nop
outs
mov
mov
hlt
shl
fist
repz
ror
sahf
dec
ret
call
neg
push
fsubr
lods
mov
leave
cdq
iret
aam
pop
xchg
cmps
jns
sub
dec
aaa
xor
or
cs
xchg
and
xchg
mov
scas
sub
jmp
mov
adc
or
arpl
dec
and
mov
xor
dec
cmp
fisttp
hlt
pusha
pop
push
lods
jnp
fwait
in
call
adc
std
mov
mov
fs
mov
idiv
mov
aam
pop
or
les
jns
cmps
adc
dec
mov
mov
fbld
xlat
sbb
add
cmp
arpl
ins
and
dec
push
cdq
mov
jno
adc
retf
call
cwde
inc
fxch
cmp
sti
pop
call
lock
jecxz
in
cli
sahf
call
sahf
xchg
xchg
js
into
out
imul
pop
push
mov
dec
mov
sub
es
vsubps
inc
jge
pop
shl
outs
mov
cwde
xchg
and
shr
mov
and
or
je
xchg
or
popf
pop
dec
xchg
cmp
scas
idiv
push
cmp
retf
xchg
mov
inc
push
jnp
push
jecxz
stc
xor
cmps
pop
pextrw
movs
xchg
push
cli
inc
repz
(bad)
cmc
daa
(bad)
ins
mov
not
jmp
test
mov
xor
sub
clc
icebp
inc
ret
xor
cmp
dec
sbb
cwde
cdq
cmp
and
push
xor
adc
mov
int
in
push
mov
inc
scas
xchg
(bad)
leave
xchg
(bad)
add
sbb
cld
cmps
ret
popa
xchg
in
ja
clc
gs
div
mov
call
mov
stc
clc
imul
fdivr
mov
sub
dec
mov
jmp
xchg
xor
lods
push
pop
out
sti
fdivr
test
fs
sbb
in
ja
xor
call
jp
mov
jnp
mov
cmp
test
jl
pop
inc
movs
push
fcomp
popf
pop
out
pop
sbb
pop
lods
xchg
pop
movs
xchg
scas
sbb
test
(bad)
fdivr
jmp
cmp
jmp
and
cmp
outs
push
jb
mov
mov
aas
sar
out
cmp
sbb
push
nop
adc
adc
pop
xor
xor
mov
das
push
or
fistp
test
push
fnstsw
popf
loope
xor
or
test
ret
pushf
mov
rol
test
xchg
dec
stos
or
cmp
out
popa
jge
mov
inc
cmp
xchg
shr
std
and
inc
adc
add
push
or
sub
push
inc
lods
outs
pop
mov
arpl
nop
cmps
or
xor
retf
lock
(bad)
lock
inc
add
iret
xchg
enter
mov
div
nop
pop
lea
inc
ins
loop
sbb
in
loop
push
add
loope
test
jmp
push
push
jl
pop
adc
dec
lods
xchg
(bad)
int
and
addr16
ret
inc
pop
inc
mul
push
pop
jno
test
sbb
sbb
mov
push
pop
(bad)
rol
in
pop
pop
mov
enter
out
in
loop
push
jmp
icebp
push
iret
sbb
fldcw
nop
xchg
cmp
xchg
test
pop
mul
aaa
pop
dec
retf
and
fbstp
data16
xchg
xchg
pushf
inc
sub
add
mov
jl
enter
and
cwde
push
cwde
or
pop
jbe
jb
fisttp
jno
mov
dec
xchg
fistp
bound
test
mov
xchg
inc
fdiv
xchg
or
jnp
std
mov
xor
mov
cli
stos
dec
jns
mov
retf
inc
and
repz
retf
and
adc
aas
sbb
xchg
dec
xchg
mov
sub
enter
jg
mov
push
dec
clc
ss
jae
gs
pop
sahf
aas
in
ja
pop
cmp
dec
push
mov
add
out
sahf
xor
xchg
jg
pop
dec
jbe
push
push
cmps
push
shl
sbb
stc
mov
xchg
adc
sahf
cdq
mov
fistp
pop
cmps
les
hlt
rcl
pop
dec
sbb
pop
sub
in
inc
out
or
or
xor
movs
jae
jno
movs
scas
lahf
push
or
imul
cmp
xor
sbb
jge
adc
pop
shl
jnp
cmp
bound
push
js
cmc
xchg
and
jecxz
loop
push
ins
call
(bad)
out
in
mov
mov
xor
bound
xor
fisub
mov
outs
xchg
and
aad
(bad)
arpl
ror
js
(bad)
jns
push
pop
or
arpl
xor
pop
push
pop
sub
push
xchg
xor
gs
xchg
push
sub
mov
xor
out
fwait
xor
sbb
ror
fnstsw
shl
sub
fild
cli
mov
xchg
xor
jbe
dec
pop
daa
mov
jmp
sahf
or
adc
mov
mov
lock
fcomip
add
std
gs
push
mov
xor
sbb
push
stos
push
push
mov
stos
xchg
mov
fcmovbe
mov
add
test
xchg
test
rcl
push
sti
div
mov
cmc
and
dec
push
loopne
mov
add
sar
sar
pop
jnp
stos
dec
xlat
jp
adc
jge
xor
jno
or
fwait
xor
or
(bad)
std
jnp
retf
push
inc
inc
xor
or
das
iret
adc
jg
nop
aas
jno
mov
cdq
enter
lock
jmp
and
ja
(bad)
out
mov
jecxz
out
xchg
push
push
vpaddb
mov
push
xchg
out
in
or
sub
out
pop
cmp
into
idiv
inc
fwait
adc
dec
pushf
sbb
call
mov
icebp
int3
cmp
or
cmp
or
cwde
pop
pop
xchg
dec
jnp
xchg
mov
int
lahf
cs
test
fist
mov
mov
dec
in
aam
add
dec
test
imul
sahf
das
xor
fnstcw
mov
imul
retf
sub
push
mov
fdiv
sbb
and
adc
bound
lahf
call
cmp
loopne
dec
inc
sbb
aaa
ss
cmp
scas
daa
scas
aas
retf
fld
inc
(bad)
aas
addr16
mov
add
stc
cld
xchg
adc
jge
(bad)
(bad)
cmps
idiv
aad
pop
icebp
test
dec
mov
pop
fwait
mov
mov
fbld
mov
cmp
pop
mov
sub
into
iret
lods
jo
adc
dec
les
jno
bound
push
xchg
shl
icebp
icebp
or
fiadd
inc
inc
lds
push
push
mov
adc
push
inc
xchg
push
dec
mov
(bad)
adc
adc
pop
(bad)
mov
dec
jl
mov
inc
mov
mov
repnz
jg
test
js
mov
adc
clc
pop
scas
cwde
cmp
sub
dec
sbb
sub
inc
les
sbb
test
out
fwait
movs
cwde
es
lods
fs
pop
vminss
aaa
mov
imul
mov
pushw
rcr
lods
and
mov
cs
xor
retf
mov
pusha
jbe
jle
sahf
xchg
(bad)
in
rol
xor
jne
lods
mov
sub
mov
sbb
loopne
ret
aam
sbb
sbb
shl
and
jl
sub
dec
test
ret
push
ss
clc
(bad)
cmp
ds
push
pushf
sbb
jbe
jg
mov
jae
xchg
movs
push
mul
clc
pop
dec
dec
mov
cmp
xlat
mov
out
or
sahf
neg
xchg
mov
rol
adc
lods
sub
dec
in
daa
cs
aad
jne
daa
push
sbb
pop
pop
xchg
or
ss
sbb
aam
adc
push
inc
push
mov
push
pop
adc
xor
inc
push
fst
xchg
cmova
ss
ret
clc
in
mov
jns
inc
pop
pop
test
mov
jno
call
add
mov
mov
mov
fimul
pop
jo
nop
scas
pop
ds
gs
jo
imul
cmp
pop
fsubr
es
cmp
pop
xchg
xchg
mov
add
fcomp
jge
fbld
sub
adc
add
mov
(bad)
in
cdq
cmp
xor
std
int3
fwait
add
leave
sbb
pop
inc
jns
je
test
pop
popf
jecxz
addr16
mov
push
fucom
mov
xchg
jp
xchg
mov
bound
into
leave
lock
jae
jmp
icebp
dec
aaa
push
(bad)
cmc
imul
pop
cmp
adc
jnp
jb
push
xchg
shl
mov
test
loopne
adc
push
xor
fld
lahf
inc
pop
mov
add
prefetch
out
out
fwait
leave
add
imul
popf
dec
cli
mov
jecxz
lds
scas
pop
clc
adc
mov
ror
test
push
out
mov
inc
jmp
clc
fiadd
enter
xor
adc
xchg
das
pushf
push
push
outs
cdq
xchg
into
adc
or
mov
cs
push
adc
adc
fwait
or
xchg
and
xchg
mov
adc
jp
mov
adc
push
pop
scas
sub
test
cwde
push
fdivr
mov
xchg
push
fwait
mov
sub
push
pop
mov
ror
and
add
add
mov
imul
(bad)
or
idiv
fs
mov
adc
push
push
ss
xchg
sar
aam
push
int
dec
fimul
ins
nop
outs
in
call
test
cli
fimul
cmps
test
push
test
ret
inc
iret
les
scas
pushf
jae
inc
mov
sub
jmp
sbb
lea
pop
jge
pop
cmp
(bad)
retf
push
repz
sahf
loop
rol
dec
addr16
cli
cmp
call
jg
ficomp
push
arpl
xor
out
sahf
dec
rol
ficomp
(bad)
cwde
cld
mov
fiadd
cmc
push
shr
mov
add
cmp
lock
test
add
sbb
(bad)
in
jne
dec
fst
pop
pop
cli
dec
aaa
dec
stos
mov
fidivr
cmc
cmp
pop
fiadd
cs
scas
or
and
adc
pop
gs
std
out
(bad)
mov
sbb
push
mov
ins
mov
test
lahf
inc
aaa
(bad)
cld
xor
scas
push
mov
mov
mov
xchg
clc
fdivr
inc
xchg
fidivr
ror
and
int
xlat
push
in
add
pop
mov
push
pop
ins
stos
fnstsw
jbe
mov
leave
fiadd
inc
xor
add
adc
mov
sub
outs
jbe
adc
test
je
xchg
lods
sbb
add
inc
xchg
shl
jp
push
mov
inc
xchg
mov
out
test
shl
adc
lods
and
stos
xlat
xor
xchg
dec
in
dec
aaa
sbb
clc
in
popa
jmp
inc
inc
pushf
xor
mov
std
push
ret
fidivr
xlat
outs
push
cmp
cmp
jmp
scas
jne
addr16
fld
stos
or
xchg
mov
sbb
sub
cmps
xchg
jmp
adc
lds
call
xor
int
mov
cmps
mov
xchg
push
jno
mov
fist
xchg
mov
sbb
cmp
in
and
lods
pop
jge
sub
xchg
xchg
mov
(bad)
jnp
int
push
daa
fistp
pop
je
mov
sbb
jne
retf
in
lea
ss
xchg
jmp
push
repnz
jge
fnstsw
mov
jmp
xor
imul
sbb
nop
mov
rcr
mov
jno
jo
cmp
(bad)
cmc
sti
inc
fwait
cs
push
sbb
and
xchg
cmps
cdq
or
jge
fnstsw
enter
inc
in
pop
ins
or
adc
xchg
adc
test
cmp
loop
mov
jl
lods
jae
cmps
fmul
(bad)
jmp
sbb
(bad)
xchg
pop
xchg
xchg
mov
jno
cmps
pushf
adc
repz
lock
jge
jmp
push
dec
idiv
jmp
loopne
add
xchg
adc
adc
stos
test
dec
out
stc
or
dec
inc
jmp
add
fdivr
(bad)
add
mov
add
xor
scas
mov
mov
pop
ret
dec
jbe
test
pusha
loop
loop
xlat
call
int3
add
cwde
bound
popf
mov
pop
call
inc
jnp
test
into
adc
rcr
push
fsub
pop
add
daa
pop
and
dec
xor
sub
ins
out
jl
cli
je
jb
aam
push
pop
or
mov
je
jo
test
sbb
shl
imul
cmps
xor
clc
ja
dec
inc
addr16
xor
mov
add
jecxz
mov
movs
jg
loope
xchg
xor
clc
cmps
lock
cmc
mov
iret
push
mov
scas
inc
cdq
aas
inc
jbe
test
pop
or
pop
iret
imul
inc
push
inc
pop
fidivr
push
cmp
xchg
cmp
sub
dec
inc
lods
cmp
xchg
stos
or
lock
mov
(bad)
lds
sub
xlat
pop
xchg
mov
sbb
iret
clc
mov
fadd
xchg
repz
and
leave
mov
cmp
or
mov
daa
aas
xor
(bad)
jecxz
cdq
es
pop
aas
fdiv
pop
xchg
mov
retf
pusha
ret
sahf
jmp
or
xor
jns
fld
daa
xchg
xor
xchg
daa
push
pop
in
xchg
stos
hlt
jl
dec
sbb
scas
jge
and
in
call
popf
mov
js
jp
mov
je
mov
shl
xchg
icebp
neg
mov
lds
xor
and
inc
push
sbb
(bad)
xor
jb
dec
xchg
sar
xchg
int
adc
addr16
or
adc
inc
sbb
push
and
lea
xor
loopne
xchg
mov
outs
jl
pop
push
mov
inc
ss
mov
mov
xchg
mov
cwde
sbb
popa
inc
int3
aam
icebp
cli
inc
inc
jmp
int
pop
sub
clc
into
jg
add
or
push
mov
mov
sti
sbb
xlat
js
(bad)
pop
push
imul
xor
pop
inc
mov
add
or
stc
mov
nop
(bad)
pop
cwde
pop
daa
mov
and
mov
xor
fmul
fistp
cmps
mov
rdmsr
mov
jmp
fimul
mov
push
inc
dec
sar
aad
jmp
jo
pop
lods
adc
xchg
ins
cmp
add
sbb
aam
xchg
cld
dec
pop
add
and
stos
pop
int3
jbe
sbb
mov
popf
cmp
push
cmp
cld
call
(bad)
je
addr16
shl
(bad)
mov
or
sbb
dec
lea
fild
xchg
(bad)
push
retf
push
fidiv
push
cmp
mov
fidivr
pushw
cmp
mov
sahf
lds
enter
jnp
push
inc
fidiv
or
pusha
scas
sub
jbe
dec
or
push
mov
call
cmp
pop
cmp
cmp
(bad)
call
pushf
mov
cmc
or
pop
xrelease
pop
test
fild
mov
(bad)
sbb
dec
xlat
fucomip
jo
and
pop
mov
inc
and
mov
in
repnz
sbb
cmp
inc
xor
sub
pop
enter
adc
mov
pop
push
test
das
mov
pop
outs
scas
pusha
sbb
inc
loope
dec
or
fdivr
xchg
scas
in
fstp
test
xchg
in
sahf
imul
cmp
mov
push
out
jo
push
cdq
ss
mov
dec
xchg
mov
clc
add
int3
adc
adc
sub
add
xor
icebp
dec
dec
and
xor
push
xor
adc
popa
dec
(bad)
fdivr
les
or
stos
cld
sub
inc
test
mov
mov
mov
lahf
cdq
push
in
int
and
ror
pop
lahf
and
cmp
pop
or
neg
test
adc
mov
scas
jbe
pop
jo
push
xor
mov
out
dec
leave
mov
pop
jl
lods
pusha
in
loope
mov
jecxz
popf
mov
mov
call
lahf
pop
in
mov
cmp
jecxz
int
inc
popa
mov
retf
add
std
ja
inc
jl
dec
cdq
sbb
fwait
or
mov
retf
enter
pop
dec
push
clc
or
add
pop
stos
dec
ss
ss
jmp
mov
push
inc
les
add
or
in
loopne
mov
loopne
sbb
imul
mov
ret
rcl
sub
and
jmp
push
dec
fmul
push
pop
mov
jno
mov
popf
or
out
dec
xchg
fstp
mov
adc
cmp
push
jno
jmp
xchg
xor
je
mov
outs
xchg
movs
xchg
es
fnsetpm(287
and
pop
mov
jnp
lods
rcl
mov
or
xchg
mov
je
mov
aad
mov
mov
out
xchg
jns
sub
sub
or
rol
aaa
xor
inc
and
ret
xor
lods
jns
fisttp
(bad)
cld
inc
adc
mov
gs
pop
mov
popf
js
scas
sbb
xlat
scas
imul
dec
std
leave
test
mov
je
mov
arpl
add
out
sub
jno
mov
cmp
out
test
mov
inc
fcomp
dec
sbb
in
xchg
retf
inc
add
addr16
jl
test
or
or
sbb
push
pusha
adc
push
sbb
pusha
xchg
pop
sahf
pop
cmps
pop
push
test
add
mov
test
pop
xchg
push
stos
sub
(bad)
enter
mov
pop
lock
icebp
sbb
mov
int
fisubr
mov
xchg
mov
push
iret
jno
xor
ss
gs
xor
push
inc
jno
nop
fwait
nop
dec
cmps
add
lock
add
(bad)
sbb
je
addr16
xor
adc
add
mov
sub
fwait
and
data16
pusha
fist
mov
cmp
shl
rol
sub
mov
ret
loope
push
sub
mov
fcom
add
push
mov
(bad)
mov
cs
inc
jmp
cmovle
iret
adc
add
lods
push
inc
mov
pop
movs
mov
addr16
xchg
add
push
inc
mov
and
ja
jmp
repnz
hlt
lea
dec
scas
mov
leave
mov
jmp
pop
sahf
(bad)
pop
rcl
push
dec
ret
(bad)
xlat
jle
and
dec
xchg
adc
mov
pop
pop
mov
cmp
dec
stc
hlt
adc
sbb
inc
add
cmp
arpl
push
mov
mov
xor
pop
(bad)
aad
es
int
ret
jp
dec
aam
les
cdq
push
xchg
call
les
mov
fimul
sahf
jle
popf
rol
loop
outs
inc
stos
test
jno
adc
dec
stc
stc
cmc
jp
adc
jge
xor
xchg
cmp
dec
cmps
xchg
mov
sub
dec
ror
cmp
inc
fisttp
gs
xor
pop
dec
mov
inc
cmp
push
add
stc
xrelease
pop
lds
(bad)
fcom
repnz
call
scas
loope
stos
adc
pusha
push
add
adc
mov
cwde
mov
js
xor
lds
popa
add
pop
je
mov
or
mov
sbb
pop
(bad)
fstp
mov
or
xor
jl
cmc
add
xor
inc
or
jg
mov
push
clc
in
mov
mov
jo
movs
jb
(bad)
repz
ret
hlt
mov
cmps
jno
push
in
icebp
pop
cmp
sbb
repz
call
lods
or
adc
(bad)
lods
push
jmp
push
and
mov
popf
dec
sbb
or
aam
ins
inc
and
xor
push
add
icebp
or
sub
push
inc
cmps
dec
xor
test
or
push
ins
in
xchg
(bad)
in
inc
test
and
in
adc
ja
(bad)
fisub
cmps
xchg
dec
ficom
ret
std
js
int
div
(bad)
jns
popf
stos
imul
clc
sbb
sbb
retf
shr
cmp
inc
xchg
xor
lods
push
sub
ret
inc
pop
fcomp
cmp
cmp
mov
mov
ret
mov
stc
adc
lods
loope
retf
fsub
inc
jl
push
inc
and
jbe
in
xchg
ja
popa
stos
mov
dec
mov
hlt
lds
stos
push
xchg
js
cmp
xlat
cld
pop
cwde
push
push
sub
jno
pop
test
or
cmps
into
stos
or
mov
ret
xchg
and
cmp
xor
jns
adc
std
dec
inc
mov
add
ins
popf
int3
and
leave
jg
pop
push
ja
and
xchg
dec
retf
cld
add
add
jnp
sti
xor
mov
aas
aas
(bad)
sti
test
mov
adc
cld
push
(bad)
xor
jl
sub
inc
mov
add
mov
xchg
cmp
mov
(bad)
add
ds
adc
and
mov
and
add
ins
and
nop
stc
adc
xor
sbb
iret
push
loopne
add
push
hlt
popf
(bad)
pop
mov
mov
cmps
jo
sbb
adc
bound
lea
adc
sub
out
sbb
dec
jmp
in
jb
sbb
add
cs
jae
jno
jge
test
mov
push
call
mov
push
outs
sbb
fbld
ins
push
and
mov
mov
fld
or
lea
in
out
xchg
mov
outs
dec
jnp
jge
pushf
(bad)
fs
test
xchg
out
imul
dec
jno
mov
xchg
xlat
cmp
mov
lea
cmp
sub
(bad)
jle
and
jle
fld
pop
arpl
retf
stos
call
sbb
and
pop
cmp
add
nop
inc
and
sbb
xchg
ret
std
popf
adc
jae
lds
mov
cdq
or
mov
mov
call
mov
mov
cmp
(bad)
pop
adc
cmps
sub
outs
stos
push
pop
sbb
cld
div
push
push
sub
fld
outs
arpl
xchg
jl
loope
cmps
mov
add
or
push
es
sub
xor
inc
mov
mov
(bad)
into
jecxz
rol
test
arpl
and
xchg
jge
repnz
sub
jge
cmps
and
mov
outs
in
mov
sbb
(bad)
mov
fild
in
xchg
dec
imul
test
jmp
push
cmps
inc
sub
mov
cwde
xchg
ss
rol
jmp
mov
inc
sti
pop
xor
xor
pop
inc
mov
cmp
jno
add
dec
test
jns
fnstenv
shl
test
in
xchg
mov
lahf
ins
imul
mov
aad
scas
jbe
popf
mov
sti
cdq
mov
mov
les
push
push
sbb
shl
daa
in
inc
inc
js
mov
dec
daa
sub
mov
mov
loop
lahf
icebp
push
dec
or
jl
mov
sahf
ja
push
mov
mov
sub
lock
loope
jo
fwait
dec
cld
mov
adc
icebp
popf
daa
enter
xchg
jmp
in
xchg
ds
loopne
iret
fnstsw
test
repnz
push
cmp
jbe
adc
inc
lahf
or
das
or
xchg
xchg
xchg
xchg
push
mul
sub
bound
mov
add
sbb
lahf
ds
stos
test
popa
hlt
iret
mov
mov
sbb
fisttp
lods
les
out
cmps
addr16
mov
push
out
lods
jae
dec
xchg
mov
sbb
fld
mov
scas
sub
inc
out
pop
sbb
std
sbb
and
pop
xchg
imul
cli
and
mov
ja
clc
and
inc
jne
(bad)
or
aaa
std
imul
pop
lods
xchg
mov
retf
retf
cmps
and
jno
jne
sahf
call
push
int
popa
adc
enter
(bad)
or
xchg
cwde
retf
fidivr
popa
mov
inc
inc
push
(bad)
retf
int
or
lods
outs
dec
push
clc
jae
jno
call
out
enter
jae
inc
xor
and
jns
arpl
adc
jg
sbb
cmps
mov
mov
pop
loope
jns
mov
cmp
stos
sub
je
xchg
mov
not
dec
inc
cwde
sahf
mov
mov
repz
mov
xlat
jns
xor
repz
jbe
push
pop
add
xor
lahf
pop
sub
mov
ja
clc
pop
(bad)
loopne
push
push
cmp
dec
push
inc
adc
lods
pop
adc
jge
test
xchg
and
add
stc
test
arpl
mov
jb
lock
leave
xchg
inc
xor
xlat
jns
call
sti
stos
mov
xchg
scas
inc
repz
or
adc
shl
and
call
push
out
test
mov
sbb
sbb
in
jb
jle
in
cmp
or
outs
push
cwde
or
(bad)
push
inc
xchg
scas
mov
retf
and
jl
cmps
dec
fldenv
mov
xchg
mov
stos
and
inc
lods
lods
mov
dec
and
cld
xor
(bad)
shr
xchg
scas
push
fcom
adc
jmp
in
and
push
arpl
or
lods
xchg
mov
iret
and
jmp
and
mov
sub
mov
xlat
xlat
mov
sbb
mov
addr16
(bad)
in
iret
call
les
mul
sbb
cmp
shl
repnz
inc
inc
stos
ficom
jne
sbb
(bad)
xlat
jb
daa
jle
jno
sub
mov
pushf
rcr
fsubr
ret
push
pop
push
clc
or
sbb
mov
mov
scas
pop
sub
sub
stos
cmp
push
and
call
push
stc
jge
pusha
mov
push
enter
in
clc
mov
std
mov
jae
xchg
mov
into
loopne
into
cli
pop
push
test
in
cmp
test
cmp
adc
jbe
arpl
ins
mov
mov
dec
push
fdivr
mov
retf
add
sbb
sbb
jb
test
test
fcomp
xlat
sub
fwait
lea
(bad)
jmp
sbb
gs
and
inc
mov
stos
push
(bad)
movs
pop
xor
stos
mov
mov
cld
xchg
out
push
fdivr
sbb
mov
stc
xor
fdivr
jb
dec
push
adc
loopne
bound
pop
cdq
pop
dec
jp
pop
pop
or
(bad)
movs
mov
inc
scas
pop
shl
jp
pop
cmp
daa
xor
sti
inc
adc
push
push
mov
inc
mov
dec
jmp
cmp
add
jecxz
dec
fisubr
xchg
jp
sbb
mov
pusha
sbb
xchg
xlat
(bad)
pop
pop
mov
(bad)
add
enter
fild
cmp
sub
add
ret
sbb
jo
fdiv
dec
inc
mov
xor
gs
mov
popa
mov
inc
sahf
fnstcw
icebp
arpl
jno
push
fstp
jmp
inc
(bad)
jmp
cmc
outs
mov
pushf
hlt
cmp
xchg
cld
fdiv
jmp
clc
js
adc
push
xchg
(bad)
pusha
enter
inc
scas
xor
jbe
push
aaa
add
pop
aad
fcmovne
or
call
mov
mov
mov
mov
dec
mov
jmp
add
mov
int
add
inc
push
ja
jge
xchg
sub
mov
sar
push
ror
cld
and
inc
mov
(bad)
dec
xchg
mov
sbb
fild
call
sti
rol
sbb
or
cmps
aaa
pop
fs
pop
imul
clc
push
sti
inc
add
enter
es
push
mov
idiv
push
inc
scas
ss
fwait
xchg
bound
cmp
cdq
shr
bswap
jmp
mul
pop
sub
cmp
loope
mov
sub
cli
stos
xor
inc
fwait
clc
mov
sub
stos
ds
icebp
jmp
enter
mov
rcl
jmp
pop
addr16
cmp
mov
mov
out
rol
add
inc
out
xor
or
sbb
inc
pop
mov
pop
mov
pop
imul
mov
int
add
dec
jne
fdiv
sbb
mov
pop
in
hlt
adc
(bad)
jmp
lods
mov
aad
cmc
clc
cmp
xchg
lea
cmps
and
shl
pop
mov
dec
sbb
mov
es
mov
dec
inc
cmp
xor
cmp
xor
adc
call
sar
lods
sahf
push
cwde
xlat
(bad)
out
add
dec
mov
mov
inc
dec
call
fs
loope
xlat
sub
cmps
movs
adc
stc
mov
mov
adc
inc
cld
shl
inc
jmp
dec
js
mov
push
or
sub
gs
test
jae
dec
inc
in
and
push
and
sub
adc
inc
xor
pop
sbb
dec
(bad)
mov
(bad)
jns
dec
lods
outs
(bad)
(bad)
jmp
fwait
aam
outs
retf
test
mov
mov
repnz
scas
sahf
lods
enter
pop
sahf
mov
fisubr
mov
pop
call
in
lods
addr16
add
aaa
dec
mov
xor
outs
test
aam
ret
xchg
xor
pop
and
xor
pop
inc
popf
jno
mov
add
push
push
(bad)
jmp
stc
add
frstor
mov
movs
inc
shr
test
sbb
xor
mov
(bad)
mov
sub
icebp
push
fdivr
js
inc
mov
push
pop
pusha
mov
fsubr
jmp
inc
pop
xor
pop
add
and
add
scas
push
inc
mov
push
mov
mov
cld
fdivr
mov
scas
sub
mov
test
arpl
movs
std
add
add
addr16
mov
xor
rcr
cmps
shr
inc
sbb
stos
xor
and
hlt
cld
in
retw
pop
outs
(bad)
pusha
cld
bound
pop
movs
mov
jmp
jmp
inc
fs
adc
imul
mov
dec
pop
lods
sub
aam
add
stos
inc
nop
repz
jns
and
push
xlat
movs
test
xchg
jno
test
mov
mov
push
jg
(bad)
jmp
inc
leave
mov
mov
movhps
retf
jge
add
ds
movs
push
arpl
xor
dec
fwait
xchg
call
add
and
add
sbb
mov
inc
test
mov
xchg
test
sbb
push
inc
lahf
and
cmps
xchg
in
test
xor
loope
push
xchg
push
stos
stos
sub
xchg
xchg
mov
ror
mov
stos
adc
or
(bad)
sbb
lods
xor
mov
fst
push
(bad)
seta
add
push
and
add
xor
pop
adc
outs
mov
or
dec
into
fnstcw
adc
fnstenv
mov
add
sar
(bad)
adc
xor
jge
in
or
rol
mov
out
pop
mov
push
add
pop
enter
cmp
xor
pop
fwait
sar
test
adc
cmp
push
inc
aaa
ss
sub
scas
dec
add
and
test
popf
out
push
retf
icebp
je
inc
mov
sahf
jecxz
mov
cdq
pop
or
shr
test
sub
add
xchg
scas
ss
cwde
mov
stos
mov
inc
or
enter
dec
popf
sub
mov
pop
mov
inc
fcomp
out
addr16
push
bound
sbb
add
mov
push
mov
cld
cmp
push
cmp
out
pop
int
fs
dec
ins
push
test
jmp
dec
shl
mov
enter
xchg
mov
int
mov
lods
cmps
ss
xor
sub
rcr
push
inc
lea
je
mov
sub
(bad)
retf
mov
push
jmp
les
dec
dec
and
inc
sub
pop
call
imul
and
mov
fsubrp
mov
(bad)
sbb
lea
mov
mov
cdq
jne
in
ret
leave
push
call
mov
mov
pop
(bad)
xchg
fwait
mov
push
pop
or
call
arpl
xor
les
inc
cld
xor
push
add
pop
(bad)
idiv
pushf
repnz
dec
inc
inc
fnstenv
add
and
imul
ds
inc
mov
mov
or
inc
loop
pop
fs
je
mov
mov
and
mov
mov
fisttp
jecxz
xchg
outs
pop
ffree
xchg
test
test
out
jo
dec
es
cmc
sar
push
or
dec
cmps
push
push
ja
mov
call
stos
icebp
jns
gs
inc
ins
add
push
mov
mov
mov
jne
xlat
sti
push
aam
cs
test
dec
shr
in
jecxz
xchg
pop
xor
retf
mov
mov
je
lea
div
xchg
popf
dec
test
add
repnz
add
aas
pop
pop
mov
je
cdq
mov
sbb
out
adc
add
inc
es
xor
fwait
sub
adc
jg
test
xor
pushf
outs
add
jl
lock
outs
dec
and
test
xchg
sub
fldenv
clc
lahf
repnz
mov
xchg
xor
test
(bad)
aam
xchg
dec
out
or
cmp
repnz
sbb
inc
outs
cli
jne
or
push
cli
sbb
fistp
retf
add
cmp
imul
cmp
pop
mov
lods
rol
in
xchg
cmp
inc
ds
push
ret
xor
enter
jle
lods
fwait
aam
cmp
bswap
lock
aad
pop
sbb
xchg
dec
aad
rcr
add
aad
into
jg
adc
dec
xchg
aas
arpl
sub
retf
or
out
jnp
retf
sub
xlat
inc
inc
add
stc
xor
jo
aaa
xchg
pop
xchg
cmp
outs
ficom
cmp
cmp
pop
cmp
fldenv
test
jp
jbe
mov
push
mov
out
adc
fisub
xchg
mov
movs
popf
test
mov
mov
pop
enter
in
shr
and
cmp
pop
test
xchg
push
aaa
pop
xchg
out
outs
lahf
aad
mov
sbb
adc
sub
fst
das
add
pusha
jmp
in
dec
loope
jae
stos
neg
jmp
adc
mul
mov
js
sti
mov
fldcw
mov
pop
(bad)
dec
out
aas
adc
call
shr
jg
ins
pop
jbe
mov
jmp
pop
data16
std
and
pop
push
gs
mov
into
adc
ins
or
adc
aad
push
and
call
out
xchg
clc
or
pop
inc
outs
lods
dec
neg
xchg
jo
in
or
loope
cmp
dec
xchg
adc
scas
xchg
xchg
sbb
in
repnz
into
jmp
inc
lods
sub
scas
push
fst
daa
sbb
popf
dec
or
pushf
or
call
mov
sbb
cmp
gs
cwde
push
aaa
neg
ja
jno
mov
pop
mov
lea
and
xchg
das
xchg
repnz
rcr
jge
jp
mov
out
repz
cmps
sub
jne
mov
pop
sbb
cmps
stos
bound
or
cdq
div
cmps
push
pop
sbb
out
(bad)
push
pop
sar
dec
outs
lods
jae
dec
mov
sahf
cwde
dec
sbb
cmp
mov
inc
ds
sbb
pop
and
aaa
lods
sub
cmps
xchg
xor
or
adc
inc
rcr
mov
call
jecxz
jge
sbb
stos
mov
out
xchg
stc
lea
fwait
mov
std
stos
std
lock
mov
out
dec
and
mov
repz
xor
xchg
pop
push
mov
and
(bad)
out
sbb
loope
cs
adc
stos
xor
imul
add
(bad)
mov
cmp
push
ret
jo
and
rol
loopne
jnp
in
fisttp
or
xchg
sahf
cmps
or
shl
dec
ins
mov
aaa
(bad)
ja
cmp
clc
jp
add
jge
addr16
pop
test
popa
mov
sub
inc
xchg
retf
neg
je
cmc
aas
sbb
sub
sbb
dec
scas
dec
daa
xchg
inc
outs
scas
lods
test
sahf
jmp
xor
js
sub
mov
sub
inc
xor
inc
cli
mov
fs
in
xchg
xor
loopne
(bad)
call
stos
addr16
(bad)
push
push
sub
sti
sbb
or
or
imul
sub
clc
popa
dec
or
jmp
aas
jmp
pop
adc
inc
test
ins
and
pop
call
into
test
cmps
arpl
fidivr
lods
out
dec
mov
mov
adc
xlat
es
mov
je
jne
or
daa
call
push
js
push
or
mov
int
test
or
pop
hlt
dec
pop
jnp
sub
outs
jo
ins
pop
mov
lods
pop
add
push
xchg
les
aad
addr16
lods
push
ret
bound
inc
es
es
arpl
cmp
shl
mov
mov
or
cmp
out
stc
jl
add
adc
push
mov
cmps
movs
int3
cmp
pop
sar
adc
add
sbb
jg
cmp
sbb
adc
mov
sbb
mov
inc
xlat
scas
xchg
sbb
inc
jp
push
scas
fldenv
retf
loope
ficom
xor
movs
scas
cmps
ret
sbb
test
inc
jmp
icebp
stc
dec
scas
mov
cmp
dec
repnz
jl
and
es
leave
or
mul
mov
clc
dec
inc
add
xor
add
sbb
xor
and
outs
inc
or
adc
stos
adc
pop
push
xchg
mov
pop
pusha
mov
cmp
(bad)
in
rcr
add
mov
push
movs
mov
jmp
stc
rol
lods
push
repz
es
push
jmp
jp
stos
sbb
inc
movs
dec
or
mov
mov
push
call
lock
rcr
jae
les
sub
push
pop
or
ja
mov
sub
xor
iret
repz
jmp
nop
fisttp
retf
xchg
xchg
clc
pushw
clc
rol
lods
(bad)
or
xor
shl
mov
retf
sub
ror
and
adc
ins
push
push
mov
movs
mov
sti
aad
test
pop
adc
(bad)
pop
adc
cmp
sub
pop
ja
push
sbb
popf
cmp
add
mov
add
fs
jb
dec
cdq
scas
fdiv
out
jmp
and
ret
dec
mov
lahf
mov
mov
fs
mov
loopne
into
fimul
mov
lds
fsubrp
jecxz
in
jg
js
add
and
xor
dec
xchg
xchg
dec
int3
(bad)
jp
add
push
and
cmc
sub
or
adc
or
fadd
cld
jg
push
mov
add
or
call
mov
xchg
inc
push
mov
mov
xchg
lods
mov
pushf
sub
push
repnz
or
sti
inc
add
pusha
mov
push
imul
int
out
ds
push
pop
pop
inc
not
mov
mov
dec
mov
aaa
jno
iret
out
fwait
cmp
pop
jbe
jne
(bad)
cmp
repz
pop
jns
inc
test
xchg
pop
and
test
push
xlat
dec
scas
sub
pop
xlat
enter
add
and
push
and
sub
fcmove
add
inc
(bad)
pop
cs
lea
retf
add
inc
push
xchg
test
sub
retf
mov
mov
jns
add
call
rcr
hlt
ret
popf
pop
iret
push
mov
mov
inc
mov
call
jp
mov
cld
cmp
or
jmp
push
fidivr
pop
pop
data16
dec
inc
lods
je
jno
xchg
ins
int3
retf
or
and
jae
lods
pop
lods
jae
push
je
push
adc
xor
mov
out
stos
ds
rol
add
xchg
mov
mov
push
rol
xchg
sbb
imul
mov
mov
test
aad
push
sub
out
out
jg
sbb
gs
sbb
pushw
jbe
fstp
jp
out
sub
daa
mov
mov
(bad)
xor
jo
cmps
push
add
cmp
or
sar
clc
pop
dec
push
call
mov
jae
mov
push
std
sar
add
jl
sub
mov
adc
mov
lock
popa
inc
lea
pop
cmp
mov
repnz
cli
add
test
and
xor
int
add
push
jecxz
jo
repz
jae
pop
mov
data16
adc
adc
pop
push
xchg
xchg
dec
add
sbb
hlt
mov
cwde
out
inc
clc
bound
and
lock
mov
sub
test
mov
mov
add
ror
fisttp
sub
in
push
xchg
sbb
sub
and
cmp
pop
lahf
fwait
les
leave
sbb
push
ret
sbb
pop
xor
adc
pop
and
stos
sbb
dec
popf
in
or
xlat
jge
inc
pusha
push
lea
scas
fstp
mov
movs
add
cli
mov
mov
(bad)
stc
sbb
jns
loopne
test
mov
jmp
adc
scas
xor
or
rcr
je
pop
jg
push
test
cs
fwait
xor
out
sub
inc
ficom
push
or
and
cmp
(bad)
dec
sbb
adc
movs
cmp
aam
icebp
bound
cmp
jne
jmp
fistp
scas
sub
movs
xchg
mov
xchg
in
enter
xor
xor
call
jnp
xor
and
push
or
mov
out
inc
sar
cmps
cmc
bound
or
and
inc
xor
js
push
daa
aad
fs
mov
ins
inc
push
dec
mul
xchg
add
int
in
cmovl
push
cdq
iret
mov
push
test
xchg
cmp
rcr
cmps
imul
test
sbb
xor
push
add
jne
daa
arpl
bound
xor
mov
test
test
cmp
xor
and
jo
adc
fstp
out
add
jb
sbb
pop
mov
and
loopne
dec
jmp
add
xchg
dec
test
xchg
in
mov
or
xchg
pop
scas
dec
sub
call
pop
push
pop
mov
and
sahf
test
es
data16
cmp
loope
ins
fs
mov
sub
ins
jno
pop
inc
xchg
dec
pop
stos
nop
mov
dec
dec
inc
xchg
shl
rcr
inc
fisubr
std
iret
loopne
mov
call
push
fsub
mov
stos
cmps
(bad)
daa
lahf
pop
jns
pushf
mov
sub
sti
hlt
call
cmps
inc
in
jg
or
or
test
ficom
imul
imul
in
daa
mov
inc
jl
push
ficomp
sub
aaa
scas
add
add
lods
in
dec
adc
mov
test
and
imul
fiadd
xchg
dec
ret
mov
xor
sbb
sbb
jnp
pushf
cdq
std
gs
retf
int
ins
adc
jle
dec
sub
or
jle
movs
outs
popa
outs
loopne
pop
or
or
sbb
into
pop
stos
icebp
punpcklbw
inc
cs
xor
mov
stos
xor
push
cmp
aas
sbb
jl
iret
mov
ror
pop
movs
jl
mov
out
rol
mov
fistp
sub
mov
mov
inc
icebp
test
jmp
ins
jmp
add
fild
inc
sub
aas
inc
jo
addr16
push
mov
in
fs
int
cwde
call
(bad)
sub
adc
sbb
js
test
inc
call
test
arpl
fnsave
xchg
jecxz
xchg
loope
or
mov
imul
retf
mov
out
mov
cmp
imul
fwait
inc
shl
cmp
sub
out
and
es
cmp
xor
out
test
aam
adc
das
mov
inc
div
mov
xchg
or
jns
movs
push
and
sti
ins
sbb
xchg
inc
je
and
ret
xchg
int3
mov
cs
loop
cmp
ja
std
stos
mov
xchg
jle
mov
gs
mov
adc
inc
in
add
test
xor
jno
pop
pop
jno
mov
sbb
stc
aas
stos
mov
or
and
adc
sahf
or
lods
jl
xchg
dec
add
(bad)
mov
(bad)
xchg
adc
bound
data16
dec
into
cmps
test
retf
mov
mov
mov
sbb
enter
mov
leave
push
fldenv
fmul
push
add
pop
mov
and
xchg
test
jecxz
sub
adc
adc
mov
inc
push
mov
add
push
xor
xlat
mov
mov
jge
pop
jno
pushf
dec
aam
lock
mov
call
call
cmp
adc
pop
imul
int
call
and
dec
cmps
dec
and
mov
sub
cmp
ins
push
shl
jp
arpl
bound
push
mov
xor
retf
xor
loop
xlat
adc
pusha
movs
jl
fdiv
cmp
push
or
stos
lods
xor
test
cmp
mov
mov
(bad)
push
ja
test
gs
sub
push
fmulp
call
es
mov
pop
outs
cdq
jbe
imul
repnz
dec
arpl
cmp
inc
add
add
fwait
jae
mov
add
and
ficomp
fcom
pop
xchg
jae
mov
test
pop
(bad)
stc
div
fmul
xchg
push
movs
mov
and
icebp
leave
test
retf
cmp
mov
xor
dec
cld
not
inc
sar
dec
cmp
cmp
dec
mov
inc
cli
pop
loopne
cmp
iret
jnp
jns
mov
push
loop
mov
fdiv
adc
or
or
cdq
fisub
rol
dec
mov
xchg
jno
call
add
lea
test
pop
inc
mov
inc
mov
icebp
cmp
fld
inc
push
push
pop
scas
or
aas
pop
out
mov
call
sub
xor
cmp
add
adc
pop
aad
pop
mov
jno
shr
cwde
adc
jno
jbe
lahf
loop
pushf
fcomp
and
(bad)
cmps
sub
ja
mov
sbb
pushf
mov
xor
dec
inc
mov
push
fdivr
sub
or
and
and
fst
fs
pushf
inc
sbb
test
add
pop
jecxz
cmp
pop
pop
clc
sub
adc
icebp
add
imul
or
ss
repz
push
lahf
xor
or
push
cli
rcl
test
or
imul
mov
xchg
lods
fdivr
mov
fldcw
idiv
inc
cmp
or
daa
dec
lods
movs
movs
mov
daa
icebp
popa
or
jg
mov
add
dec
push
test
and
test
cmp
(bad)
aam
pop
xchg
int
fistp
push
popf
imul
cld
in
enter
xlat
not
mov
pop
cmps
sahf
test
ret
shl
inc
pop
mov
pop
fdiv
push
and
leave
aad
xchg
jb
pop
adc
dec
mov
mov
popa
iret
loope
cdq
xchg
pop
inc
add
fadd
xor
and
dec
or
jge
aam
outs
dec
or
cmc
stos
and
and
jnp
jmp
ja
test
in
rcr
call
adc
(bad)
fstp
jl
call
cmp
fprem1
js
push
imul
ficomp
jle
dec
cmp
scas
lds
jl
fcomp
pop
sub
sub
xor
(bad)
dec
inc
movs
or
cmp
and
pop
sti
fld
ficomp
mov
cmp
xchg
add
fld1
lea
xchg
imul
mov
popa
add
icebp
test
mov
retf
sub
dec
pop
dec
idiv
stos
ja
sbb
pop
(bad)
inc
pop
xchg
jns
push
xchg
or
adc
sbb
mov
mov
js
jnp
fst
sub
adc
dec
or
inc
in
xchg
stos
add
inc
std
idiv
cmp
inc
inc
ins
fsubr
mov
dec
sti
mov
push
int
pop
push
aad
hlt
jo
jge
pushf
vfrczpd
jmp
mov
out
push
xchg
xchg
dec
sar
sub
out
add
xor
ins
or
scas
mov
hlt
jbe
fisttp
mov
pop
retf
xor
jbe
lods
add
adc
adc
mov
adc
pusha
loop
mov
iret
jmp
push
dec
pop
mov
ds
loopne
inc
retf
or
clc
repnz
dec
nop
cwde
movs
test
hlt
add
ret
test
fsub
jo
inc
and
div
ret
sbb
dec
mov
jb
outs
xchg
test
leave
call
xchg
cld
pop
adc
ror
jge
and
sub
inc
aas
mov
call
xchg
xor
xchg
popa
jmp
sub
add
shl
dec
adc
out
aaa
repz
cdq
loope
hlt
or
sbb
loop
mov
push
std
test
mov
sbb
stos
pop
out
gs
lods
or
cmp
mov
lea
sahf
in
add
adc
dec
packssdw
daa
stos
sub
imul
adc
cmp
repz
(bad)
pop
jne
movs
jno
add
xchg
jmp
push
or
loope
jne
add
mov
icebp
adc
push
jle
and
stos
fisub
mov
dec
jecxz
int
sub
xor
pop
mov
ja
dec
mov
test
pusha
cdq
loope
mov
adc
arpl
sbb
mov
mov
fucomi
xchg
sbb
add
movs
sub
movs
frstor
out
call
mov
test
std
cmp
sti
pop
sbb
cli
or
sbb
mov
or
pop
xchg
dec
lods
movs
mov
xchg
fsubr
pushf
repz
pop
add
sbb
jns
outs
sbb
das
ins
mov
pop
enter
mov
add
jge
push
xchg
inc
jmp
outs
lds
mov
mov
scas
or
lock
jmp
mov
push
push
adc
fcmovnbe
push
out
sbb
jns
outs
push
pushf
cmp
jmp
mov
or
rcr
cli
add
jbe
mov
lea
mov
lea
fstp
push
fwait
test
std
leave
jecxz
sahf
mov
adc
pop
adc
ret
call
add
fcomi
cmps
jae
sbb
mov
in
sbb
test
mov
fiadd
scas
mov
xor
js
add
cmp
sahf
sbb
lods
jne
push
mov
scas
push
sub
push
ror
push
sub
daa
ss
sub
jecxz
scas
xor
inc
bound
inc
mov
popf
bndldx
cmp
in
dec
(bad)
dec
arpl
xor
mov
pop
mov
movs
pop
sub
mov
test
ja
lods
mov
cdq
shl
addr16
loop
push
mov
mov
loopne
les
pop
cs
lods
xor
sti
jb
bound
add
dec
loopne
jge
dec
adc
inc
aad
xor
sbb
stos
dec
inc
test
outs
cwde
(bad)
mov
fild
add
bound
dec
fbld
test
or
rcr
neg
inc
push
test
(bad)
xchg
scas
ror
or
cmp
stc
cmp
and
sub
sahf
jae
je
(bad)
sahf
xchg
sub
(bad)
shl
addr16
gs
add
mov
addr16
pop
adc
jne
or
in
test
mov
push
fs
sub
sahf
fldcw
(bad)
pushf
outs
retf
test
mov
(bad)
fsubrp
sbb
arpl
cdq
mov
gs
inc
xchg
lea
fisubr
sub
out
repz
sbb
popw
jg
jo
jb
mov
pop
f2xm1
jl
jmp
dec
pop
sbb
add
jbe
and
adc
fimul
scas
push
adc
xchg
add
js
enter
fst
jns
ja
push
fist
mov
mov
lahf
adc
sbb
aas
cmps
jl
mov
lods
arpl
fsub
xor
fwait
inc
out
jb
xor
test
add
(bad)
pop
pop
test
sbb
mov
cmps
imul
jno
loope
jae
adc
pop
sub
adc
push
mov
(bad)
call
test
imul
mov
xor
dec
mov
ins
xchg
push
mov
test
cmp
test
xlat
or
dec
dec
popf
and
shr
bswap
enter
adc
add
mov
xor
mov
sbb
add
(bad)
sbb
pop
and
inc
outs
dec
add
jmp
stos
pop
cmp
cmp
fdivr
out
rol
pushf
jne
fldenvw
jecxz
loopne
mov
fwait
popa
(bad)
hlt
xchg
adc
int3
adc
cmc
popa
cmp
icebp
cdq
stos
ret
mov
outs
jecxz
fnstenv
pop
or
(bad)
jg
xor
pop
fidivr
push
push
in
mov
jmp
cmp
cmp
sbb
cs
fcomp
stos
push
inc
lods
and
cmp
add
or
cld
arpl
imul
dec
test
test
out
cld
dec
paddusw
scas
or
pop
repz
lods
mov
mov
(bad)
outs
pop
mov
(bad)
or
repz
jmp
xchg
sub
and
mov
stos
push
sar
cmp
pop
mov
jl
cmp
mov
pop
test
sti
add
cmp
test
popf
push
aam
lock
xchg
shl
cmp
movs
hlt
sub
jg
mov
ins
mov
fcmovu
test
cld
cmp
mov
shr
sub
fwait
pop
dec
or
outs
pop
cmp
pop
ss
test
sbb
add
int
lahf
aad
outs
jg
jmp
pop
xchg
add
dec
dec
cwde
push
inc
scas
or
out
xchg
cdq
imul
push
(bad)
lods
mov
mov
sbb
pop
push
ja
push
loope
std
jno
(bad)
mov
lock
leave
dec
mov
repnz
inc
test
inc
sahf
sub
cld
push
sbb
push
and
cmp
push
or
cmp
icebp
clc
sbb
out
push
imul
inc
aaa
pusha
je
mov
jb
fist
mov
mov
cmp
cmp
clc
mov
ret
sub
imul
jecxz
cmps
mov
dec
(bad)
mov
xchg
add
push
xchg
loope
fadd
dec
push
xchg
mov
loopne
neg
xor
mov
inc
repnz
scas
jb
xor
pusha
fstp
dec
bound
mov
mov
cs
int
dec
add
clc
pop
xor
nop
and
stos
inc
inc
shr
jp
(bad)
mov
jmp
jp
pop
sbb
rcr
ret
xchg
(bad)
test
icebp
add
sar
out
lock
push
mov
xchg
push
fchs
cmc
ret
push
mov
je
jo
and
jmp
mov
sub
mov
rol
cld
add
xlat
fs
push
lds
jp
xor
push
lahf
ss
aas
inc
repz
mov
sub
stos
cmps
das
test
push
jb
inc
(bad)
repnz
xor
jge
test
push
sti
loopne
aaa
rcr
cld
mov
push
call
movs
scas
(bad)
jnp
xchg
or
aad
inc
cmp
(bad)
stos
data16
cmp
outs
(bad)
cmp
xchg
xchg
scas
aas
pop
fld
repnz
and
push
xchg
pop
mov
js
(bad)
pop
add
lahf
xor
aad
sub
loopne
std
jne
mov
xchg
push
lock
daa
jecxz
mov
pop
add
jecxz
ror
pop
cdq
stos
ins
jmp
fisttp
and
fadd
sti
jns
and
ins
mov
pop
mov
pop
call
cmp
js
int3
jnp
imul
xor
mov
mov
int
push
fwait
dec
xor
xchg
push
inc
adc
in
and
(bad)
inc
jnp
push
fnsave
loopne
sar
cmps
pop
leave
adc
xor
push
loope
xchg
sbb
fdiv
inc
fs
mov
xor
and
int
inc
sub
inc
xchg
push
push
lods
mov
lods
xchg
jmp
mov
or
pop
es
adc
jmp
pusha
je
adc
adc
xchg
sbb
add
in
inc
retf
pop
inc
arpl
in
lahf
je
xchg
inc
adc
out
call
dec
lea
test
lods
fidiv
jne
or
or
mov
pusha
mov
inc
jg
ss
pop
mov
and
inc
loop
or
adc
xor
inc
jae
xchg
xor
sub
scas
pop
jge
mov
jp
jmp
pop
std
sbb
inc
mov
xor
jecxz
inc
retf
loope
push
(bad)
in
je
inc
cmps
mov
pop
add
push
retf
test
mov
jl
sub
inc
ret
sub
or
ins
push
bound
sbb
jge
xchg
sub
adc
pop
pop
push
or
ds
or
adc
sar
or
fdivr
jmp
pop
fnstcw
xchg
lds
enter
clc
jns
iret
(bad)
int3
imul
pushf
mov
cmp
loop
fcomp
xor
pop
(bad)
fcmovne
sub
and
jnp
or
dec
cmp
stos
lea
in
iret
jp
loopne
adc
adc
adc
and
sub
jp
fdivr
adc
mov
enter
xchg
(bad)
push
out
jp
fcomp
fwait
stc
aas
cmps
retf
cdq
jbe
xchg
jne
fst
popf
jbe
mov
pop
pusha
xchg
test
lock
fdivr
sub
cs
add
add
add
addr16
add
xchg
sbb
jge
jmp
inc
pop
inc
in
push
pop
aaa
adc
imul
pop
movs
test
adc
push
scas
hlt
inc
xlat
jg
jp
sub
iret
xlat
push
mov
adc
stos
pop
adc
adc
mov
hlt
push
mov
pop
cmps
mov
test
mov
das
sbb
nop
pop
inc
sbb
mov
pop
push
pushf
imul
adc
aad
sahf
and
daa
mov
aas
xchg
pop
mov
call
(bad)
(bad)
xor
out
rol
cdq
and
mov
inc
ret
adc
fiadd
call
push
jmp
rcl
mov
ss
clc
sub
es
jle
cmp
mov
mov
test
in
jg
mov
pop
push
std
inc
outs
add
mov
scas
or
test
dec
std
repz
adc
add
mov
jecxz
mov
sti
addr16
fstp
cmps
xor
fisubr
mov
popf
js
scas
mov
cmp
xor
hlt
retf
xor
jl
adc
sbb
mov
mov
dec
(bad)
mov
and
push
aas
fs
and
sub
(bad)
das
pop
sub
xor
pop
jns
sub
jecxz
loope
repz
mov
cmc
add
fld
out
lods
add
(bad)
dec
arpl
(bad)
sub
cld
fsub
jo
es
dec
mov
and
test
les
call
inc
popa
jae
loop
push
add
push
stos
gs
stos
push
stos
test
inc
int
mov
clc
add
jl
addr16
fadd
in
cmc
xchg
dec
dec
std
jmp
mov
pop
popf
test
movs
fcomp
inc
call
or
clc
lods
push
fnstcw
arpl
push
pushf
push
pop
push
cmps
lds
push
(bad)
js
div
jno
fisttp
add
cmp
arpl
js
scas
mov
enter
test
ins
dec
mov
jnp
std
test
loope
push
xchg
(bad)
jmp
stc
sub
mov
lock
jnp
in
mov
retf
dec
or
xchg
xlat
rcl
sub
jle
fmul
adc
dec
cdq
mov
(bad)
sbb
cld
or
ds
add
add
xor
xor
pop
data16
cmovnp
xchg
arpl
test
int
sbb
jns
dec
mov
scas
xlat
inc
mov
xchg
push
out
stos
pusha
or
enter
jle
stc
(bad)
imul
mov
repnz
ror
movs
iret
fidivr
mov
into
sub
push
out
(bad)
lock
inc
sub
push
jg
sahf
cmp
cmc
mov
lods
xor
pop
fwait
mov
std
js
inc
cmp
add
sub
jl
nop
dec
and
add
jl
jmp
inc
ins
jl
jg
rcr
test
out
xchg
out
and
int3
dec
mov
js
xchg
fimul
test
cli
pop
imul
sub
sbb
fcomp
pusha
pop
fdivr
pop
inc
sti
push
pop
jge
xchg
imul
pop
cmp
dec
outs
push
(bad)
mov
push
lods
or
arpl
xor
in
xchg
mov
jl
push
stos
push
icebp
popf
aad
jecxz
mov
push
out
mov
(bad)
bound
xchg
mov
in
retf
lds
mov
clc
cmp
sub
in
dec
loop
add
jnp
sub
test
and
cmps
stos
cmps
mov
out
and
inc
mov
adc
pop
push
mov
inc
cdq
mov
inc
cwde
out
cmp
(bad)
arpl
pop
jae
fmul
lods
call
push
xchg
fwait
pop
push
stc
cmps
test
mov
add
cwde
test
and
mul
scas
(bad)
fs
outs
into
push
pop
dec
ret
jl
adc
inc
sbb
xor
dec
cmps
test
mov
loop
pop
mov
addr16
push
inc
out
cmp
lea
sahf
adc
pop
push
ss
mov
es
in
stos
or
ret
jb
jl
fs
jbe
mov
mov
jecxz
jae
ffreep
mov
repz
repnz
les
cmps
inc
bound
rcr
pop
icebp
mov
pop
and
not
jmp
push
fs
pop
pusha
jbe
inc
ss
mov
int3
lea
(bad)
stos
lea
inc
adc
xchg
sbb
push
fstp
ds
mov
repnz
loopne
inc
jp
push
cld
iret
mov
mov
inc
sub
stc
xor
fs
mov
bound
std
add
test
stos
movs
(bad)
out
jno
sbb
loop
fcomp
imul
data16
add
ret
test
xor
stos
inc
out
jg
cli
pop
adc
out
sub
jo
add
es
fist
mov
inc
in
xchg
loop
mov
xchg
jmp
jp
jb
fmul
inc
loope
mov
(bad)
xchg
pop
sub
jmp
xchg
adc
pusha
push
mov
(bad)
shl
mov
enter
cmp
dec
(bad)
push
jae
and
sbb
add
mov
rcl
add
sbb
add
jae
or
dec
dec
fwait
pushw
mov
xchg
push
inc
out
cmps
inc
test
add
pop
jmp
adc
clc
mov
mov
data16
fs
or
stos
inc
int3
jg
sub
xor
les
or
and
shr
ror
cmp
and
push
add
sub
test
mov
mov
jmp
push
and
std
cwde
pop
add
mov
ins
test
outs
loopne
mov
add
(bad)
data16
mov
inc
add
xchg
fbstp
jmp
rcl
cmp
stc
std
push
jo
adc
mov
or
test
lods
js
shl
cmps
(bad)
jg
inc
xor
daa
ss
fs
pushf
aas
rcr
sbb
inc
mov
loope
movups
in
add
dec
inc
mov
aas
mov
mov
repnz
test
sbb
inc
mov
push
je
fwait
mov
mov
test
sbb
repz
sahf
sbb
cmp
imul
dec
sbb
sbb
retf
push
push
push
adc
pop
cmp
push
mov
nop
sub
fs
lea
stos
dec
outs
mov
sbb
cwde
repz
and
ret
sbb
pop
pop
daa
test
cdq
lahf
xchg
mov
or
loope
push
fdivp
mov
fwait
cmps
shl
mov
jmp
les
xchg
cmps
in
out
pop
or
cmc
shr
popa
shl
push
cmp
xchg
push
xchg
mov
fild
int
adc
cmp
daa
pushf
pop
enter
pop
test
ror
mov
popf
or
out
mov
(bad)
pusha
sbb
mov
jle
int
ja
mov
test
ror
mov
jns
mov
loopne
mov
ret
jno
push
lods
sbb
inc
fadd
jge
mov
xor
dec
xchg
mov
(bad)
pop
sahf
into
adc
pop
out
xor
push
add
pop
mov
les
mov
popa
scas
mov
xor
add
pop
mov
jp
push
loope
xchg
jmp
inc
daa
mov
test
(bad)
fldenv
mov
cld
xor
std
xor
fwait
dec
in
(bad)
push
inc
dec
std
fcmovne
and
cmp
xor
mov
sbb
rcl
push
pop
rcr
fadd
inc
jnp
in
or
add
or
sbb
mov
inc
not
xchg
das
mov
push
arpl
cmp
stos
push
push
(bad)
xlat
xchg
adc
imul
cwde
mov
cmps
sbb
ret
xchg
sbb
jnp
test
pop
in
lods
xor
dec
cli
int
push
popf
and
or
cmps
or
test
nop
mov
js
div
xlat
pop
pop
pop
sbb
pop
test
pusha
jno
pop
and
stc
cs
or
test
pushf
adc
jne
movs
jne
mov
jmp
xchg
jb
aad
xchg
or
pop
call
test
mov
inc
imul
sti
pop
jg
cwde
cmp
jo
sub
sbb
clc
rol
inc
inc
jns
mov
jae
cs
pop
mov
rcr
xlat
and
mov
pop
daa
stc
xor
cmp
or
pop
pusha
ficom
mov
inc
test
xchg
pop
sub
int
push
test
jg
imul
clc
addr16
sahf
jne
out
or
fisttp
mov
fcomp
mov
test
add
lahf
dec
lds
mov
add
fdiv
enter
inc
push
pop
fisubr
popa
sahf
xor
dec
call
sbb
mov
pop
fld
pop
popf
push
frstor
xchg
xchg
cmp
xchg
xchg
std
or
cmps
push
into
stc
jne
push
gs
lahf
je
sbb
xchg
sub
mov
lods
mov
inc
pop
call
or
fidiv
push
iret
sub
jb
adc
pusha
mov
dec
jnp
ss
pop
mov
out
cld
repnz
add
cmp
dec
or
imul
xor
shr
rol
adc
gs
dec
fiadd
loope
in
push
sub
sti
mov
sti
movs
loop
mov
inc
lahf
xchg
call
jp
jno
cmp
cmp
cld
mov
sahf
or
sub
shr
stos
movs
lods
test
add
add
fild
fs
jae
popf
or
push
mov
pop
stos
test
add
arpl
xlat
mov
leave
jmp
pop
sar
test
xlat
mov
sar
nop
cwde
fwait
stos
or
and
xlat
retf
cdq
sahf
(bad)
out
jno
push
and
shl
pop
aaa
and
or
ret
mov
add
fisub
inc
and
or
sti
outs
outs
sub
push
dec
mov
xchg
add
int3
xchg
aas
mov
jge
dec
pop
dec
nop
sub
call
pushf
inc
xor
les
imul
sbb
add
xchg
mov
push
ret
das
dec
cs
fstp
imul
cmps
xor
mov
or
and
sbb
fnsave
jge
inc
xor
sbb
sbb
sub
push
jne
jno
mov
jns
xchg
mov
in
loop
scas
add
jae
mov
inc
mov
lahf
fs
mov
push
jmp
mov
lahf
test
inc
xchg
bound
mov
inc
xchg
mov
fisubr
adc
fiadd
or
jnp
cmp
jl
jno
push
lods
stos
lea
xlat
jo
ficom
sub
cmp
outs
bound
jle
stos
xchg
adc
das
push
stc
retf
xchg
sti
pop
(bad)
jle
dec
mov
mov
pusha
mov
xchg
push
and
aad
or
dec
scas
cmps
mov
jle
stos
test
mov
popf
ins
js
mov
dec
adc
push
lahf
inc
sbb
cmp
xor
inc
pop
or
pop
stc
push
imul
leave
dec
pop
and
aaa
xor
add
pop
inc
sub
sub
mov
mov
sbb
call
lea
jge
xchg
pop
ret
gs
xchg
inc
add
in
adc
dec
mov
mov
mov
hlt
cmp
shl
mov
addr16
push
es
in
std
dec
loope
cmp
movs
xor
add
mov
sub
mov
xor
inc
or
gs
and
mov
cmp
loope
pop
sub
xor
pusha
sub
ret
pop
mov
mov
stos
es
adc
mov
add
rcr
int3
lds
sahf
xchg
sub
outs
mov
cmp
shl
cs
dec
fwait
cmp
cmp
xchg
mov
fist
fcomi
jle
add
std
adc
dec
daa
aaa
icebp
sub
adc
jns
test
push
test
pusha
xchg
test
push
cwde
mov
cmp
ins
xchg
cs
loop
movs
aam
outs
enter
shl
lods
xor
push
and
cmp
retf
out
bound
daa
or
out
xlat
into
push
in
sbb
pusha
lods
xor
push
mov
jbe
ret
sub
iret
jns
fdivr
xchg
jg
jg
not
xor
addr16
ror
pop
adc
push
sub
xchg
inc
pop
jae
aad
add
jp
mov
push
push
cmps
dec
loopne
jnp
shr
repz
pop
repnz
shl
dec
lods
inc
add
fadd
inc
cwde
fimul
and
cs
push
stc
cmp
or
lods
aaa
sbb
mov
in
sbb
adc
pop
imul
or
pop
imul
sub
or
shl
(bad)
pop
popa
push
fst
mov
stos
pop
out
test
lea
(bad)
pop
mov
fwait
pusha
dec
test
ret
fnstcw
inc
lods
sub
(bad)
sbb
ret
add
mov
outs
or
mov
test
or
bound
daa
aam
xor
(bad)
jmp
jle
mov
rcr
sbb
and
loopne
into
in
jl
dec
jg
scas
je
movs
(bad)
dec
dec
mov
bnd
jne
clc
mov
outs
jecxz
and
rol
call
(bad)
sub
sub
int
mov
lock
addr16
cmps
sbb
push
std
sub
mov
neg
fimul
jge
es
sub
scas
add
popf
inc
adc
ds
in
mov
(bad)
aam
xor
pop
pop
fst
mov
movs
push
std
mov
mov
aam
lea
pop
je
ret
stos
and
fimul
mov
cmc
xor
xor
sti
shr
sbb
sub
shr
inc
pop
mov
fwait
(bad)
retf
test
lahf
retf
enter
sbb
xor
jbe
dec
push
fisub
add
mov
and
and
sar
pop
pop
and
pop
(bad)
mov
stos
inc
out
jne
(bad)
loop
and
sbb
mov
jp
mov
adc
int
test
xchg
jb
inc
out
or
adc
(bad)
loopne
into
push
pop
or
mov
pop
or
xchg
pushf
les
(bad)
(bad)
xchg
bound
pop
out
sbb
sub
and
and
popa
jbe
popw
xchg
pop
push
in
aam
cmp
pop
inc
aam
mov
mov
jo
add
xchg
js
cmps
sti
inc
test
xor
pop
push
in
mov
mov
repnz
mov
std
push
inc
repz
loope
jno
mov
dec
sti
ss
pop
push
aaa
in
fldcw
push
push
sub
xchg
imul
movs
ret
push
sub
push
leave
mov
fcomp
jg
stc
and
pop
and
aam
fs
push
mov
(bad)
stc
leave
mov
fnsave
mov
inc
or
data16
loop
jb
fs
(bad)
ss
mov
ret
iret
call
test
pop
lds
pop
dec
int
into
and
sbb
and
js
jbe
push
out
fwait
stos
or
pusha
repnz
or
(bad)
and
jb
nop
pop
mov
fst
repz
(bad)
sbb
sub
ror
idiv
pop
or
int
outs
hlt
sahf
push
adc
fisub
std
mov
push
mov
mov
mov
jmp
imul
ficomp
inc
adc
retf
push
cmps
xor
std
push
push
dec
test
xchg
or
(bad)
jecxz
mov
inc
pop
inc
and
cmp
mov
xchg
jle
sbb
mov
push
into
ds
shl
sub
or
inc
inc
ds
jg
cld
call
xlat
or
fdiv
daa
mov
mov
scas
stc
add
mov
sbb
ror
push
jl
inc
fld
pop
pushf
jbe
pop
mov
sub
inc
call
pop
xor
sbb
dec
xor
cmc
dec
jns
jp
mov
addr16
(bad)
mov
xor
push
pop
lea
xchg
xchg
jg
pushf
push
push
idiv
mov
and
fwait
pop
jno
adc
imul
or
dec
cli
(bad)
es
inc
cwde
sbb
cmp
test
inc
in
jnp
clc
dec
jo
pop
out
add
cmp
adc
pop
dec
fldcw
stos
or
sub
hlt
out
mov
push
ret
pop
pop
pop
test
dec
mov
sub
fwait
imul
dec
je
mov
fs
ret
loop
gs
xchg
push
xchg
push
out
pop
xor
fmul
inc
jmp
inc
jne
outs
sbb
xchg
pusha
pushf
int3
es
dec
push
jbe
leave
cmp
add
mov
nop
inc
pop
lods
sbb
cmp
punpcklwd
in
inc
(bad)
fsub
inc
pop
pop
scas
pop
stc
mov
mov
out
cmps
pop
dec
fcmovne
lahf
and
push
mov
test
mov
mov
inc
int3
test
mov
enter
in
fisubr
and
xor
mov
or
mov
enter
inc
rcl
jge
shl
sbb
add
cmp
xchg
mov
jle
mov
sbb
aaa
jno
in
out
xchg
stc
jnp
adc
and
cmp
mov
lods
push
ret
pop
stos
lods
mov
add
push
fst
test
popf
jp
loop
push
jmp
adc
int3
shl
or
or
cmps
outs
aaa
push
retf
lods
nop
sub
repnz
or
add
sub
jmp
mov
pop
in
and
fild
icebp
arpl
mov
inc
mov
out
or
(bad)
scas
paddsb
call
xchg
mov
fs
les
sbb
clc
jno
xor
shl
jnp
test
inc
outs
mov
lds
inc
xchg
jmp
add
xor
xchg
or
jb
dec
and
loope
add
imul
out
je
pop
pop
data16
mov
mov
cmp
ret
fwait
mov
mov
repnz
shl
xchg
lahf
dec
out
sub
cmp
stc
daa
nop
sbb
pop
lea
pop
div
int
cmp
fnstcw
mov
jnp
aam
ja
imul
xchg
sub
or
xchg
mov
in
cmp
mov
jmp
jbe
fcomp
fs
test
repz
scas
mov
add
push
stos
cld
mov
scas
lahf
dec
xchg
push
aam
lods
jb
xor
mov
outs
es
mov
in
arpl
fisttp
mov
xor
push
outs
inc
xor
mov
fwait
xor
cmp
lods
imul
sub
xchg
clc
inc
nop
fadd
shl
test
test
xchg
jne
mov
call
dec
xchg
mov
out
cs
pop
xchg
loop
in
xchg
in
xchg
push
test
cs
pop
retf
ds
pop
cmp
dec
and
xchg
and
int3
push
xchg
out
dec
pop
jns
leave
cmp
jnp
adc
ds
xor
add
mov
jmp
push
xor
inc
xchg
add
inc
es
push
ret
mov
in
cmp
mov
movs
mov
pop
outs
add
arpl
out
test
push
mov
and
inc
pusha
cmp
cmp
sti
push
sub
mov
sbb
imul
push
push
cmp
adc
and
jb
lahf
dec
adc
xchg
inc
push
cmp
(bad)
xchg
inc
stos
repz
bound
(bad)
mov
mov
popf
mov
add
cld
mov
cli
pop
mov
push
mov
xlat
sti
mov
jmp
push
adc
in
inc
sub
outs
arpl
xchg
mov
out
into
adc
leave
and
js
sub
outs
jns
inc
adc
outs
adc
fwait
sar
clc
inc
push
jp
das
ret
inc
mov
test
iret
cmps
xor
out
pushf
dec
lods
test
add
fldl2e
movs
(bad)
jno
xchg
stos
dec
xchg
pop
cli
adc
aaa
(bad)
pop
push
pop
call
bound
cmp
ja
jmp
mov
cmp
xor
(bad)
jb
ror
xchg
xchg
xchg
ins
ucomiss
out
call
inc
jno
sub
add
(bad)
mov
push
mov
mov
imul
stos
add
retf
xchg
out
scas
addr16
inc
fisttp
add
hlt
lock
push
ret
inc
add
xor
inc
cmp
fwait
lds
int3
retf
jno
hlt
inc
adc
inc
loope
and
and
sahf
pop
mov
mov
mov
mov
les
shl
scas
inc
shl
loope
cmc
cld
inc
push
(bad)
(bad)
scas
add
lock
mov
mov
imul
jnp
jo
adc
or
out
jae
adc
jl
ins
popa
pop
loopne
or
xchg
test
pop
out
setge
push
imul
add
add
mov
lea
xchg
or
cdq
xchg
mov
or
cmp
bound
popa
fstp
mov
push
leave
rcr
mov
lock
cmp
sar
fcmovu
pop
ins
jmp
push
sub
repnz
fstp
pop
sbb
outs
call
mov
pop
test
jp
in
popa
fs
push
daa
cmp
inc
adc
data16
cmp
and
add
inc
gs
pop
mov
mov
sub
addr16
cwde
lods
mov
fdivr
cdq
movs
mov
xor
cwde
mov
mov
popa
clc
push
mov
cmp
std
test
or
es
jo
pop
stos
mov
cmps
push
lock
sbb
and
or
add
or
(bad)
jb
mov
xor
and
int
daa
mov
push
push
dec
push
pushf
ins
clc
xchg
stc
push
cwde
call
push
or
mov
fsubr
or
add
add
cmc
sar
mov
sbb
and
jmp
sbb
jmp
inc
cmps
mov
jmp
out
add
pop
add
push
adc
sub
mov
xchg
adc
inc
mov
inc
xchg
mov
xor
pop
(bad)
mov
int3
out
gs
inc
ds
ret
mov
loope
icebp
in
add
cli
std
sbb
jle
mov
imul
hlt
add
std
clc
mov
popf
inc
jnp
mov
or
scas
imul
nop/reserved
add
sbb
mov
popf
cmc
pop
popa
ja
ret
sbb
aaa
aaa
xchg
aaa
rcl
fs
mov
add
aad
pop
xor
rcl
inc
mov
push
(bad)
jl
pop
mov
dec
cwde
mov
inc
enter
mov
lea
jl
mov
pop
xchg
mov
and
std
pop
inc
mov
cmc
xor
hlt
iret
not
ds
cmp
stc
xor
(bad)
in
mov
retf
jmp
mov
adc
pop
ja
xor
ins
push
lods
inc
or
xchg
das
sbb
sbb
fnstsw
jbe
and
add
pushf
outs
into
test
clc
cmc
cmps
sbb
imul
pop
data16
cmps
int3
call
ss
jle
or
inc
retf
and
adc
cmp
movs
jno
ins
pushf
retf
sub
add
mov
lea
dec
mov
dec
mov
mov
imul
mov
mov
add
mov
jg
mov
push
shl
add
jp
stos
mov
btc
xchg
cwde
(bad)
ja
ss
das
sbb
fs
inc
pop
and
sbb
adc
mov
pop
std
push
idiv
pusha
dec
jmp
and
gs
mov
pop
test
dec
(bad)
cmps
add
push
inc
lds
xlat
push
popf
mov
jo
cmps
push
push
(bad)
xchg
push
xchg
mov
(bad)
cmps
scas
jmp
inc
shr
pop
loope
push
add
and
cmps
xchg
dec
(bad)
jg
iret
push
push
jl
clc
inc
sub
jge
popf
cmp
xor
adc
xchg
adc
sub
stos
test
add
bound
fld
ror
call
or
cli
mov
lock
mov
mov
aas
fnstcw
fiadd
stc
jmp
pop
je
lods
inc
rcr
push
ss
shr
xor
arpl
push
or
or
jge
retf
call
(bad)
ds
sub
adc
adc
lods
aaa
bound
sbb
(bad)
out
fwait
(bad)
push
(bad)
pop
push
sub
idiv
mov
jne
mov
push
out
rol
cmps
add
mov
mov
scas
loop
inc
sbb
mov
sub
add
into
adc
daa
add
cmc
lds
stc
icebp
cs
mul
jg
mov
adc
jmp
add
cwde
mov
add
jmp
add
fnsave
mov
cmp
mov
ss
jmp
les
mov
mov
cmp
test
dec
in
add
(bad)
iret
in
jle
cmp
dec
fsub
inc
dec
xchg
jns
popa
cmc
mov
aam
and
sbb
rcr
test
inc
sbb
cmp
aas
out
or
sbb
or
into
stos
jne
daa
inc
loopne
mov
jmp
sub
mov
cdq
outs
jmp
daa
out
jne
mov
(bad)
cmp
pop
bound
std
xlat
xchg
neg
push
jne
mov
adc
cmc
mov
pop
fwait
pop
sbb
mov
push
sbb
aam
or
ins
int3
aad
mov
sbb
pusha
xor
pop
pop
jns
sbb
pusha
fs
fsub
js
aam
or
jmp
add
jno
push
out
ror
int3
out
xchg
mov
sbb
imul
rcl
fcmovu
pop
dec
in
fidivr
dec
lods
or
aad
call
daa
bound
jl
or
gs
cdq
nop
and
jbe
into
sub
add
adc
sub
mov
mov
scas
jns
fisttp
inc
xchg
push
cwde
cmps
xchg
aaa
push
jae
out
sbb
push
inc
mov
pop
xchg
mov
xor
(bad)
mov
addr16
out
repz
ret
jmp
cmp
pop
out
jnp
sbb
fsub
inc
jo
addr16
daa
pop
mov
or
and
pop
(bad)
repnz
pop
cli
inc
xor
pop
mov
cmc
inc
pop
shr
das
shld
dec
(bad)
ficomp
loope
jo
sahf
jo
mov
loop
out
add
enter
repnz
in
cli
xchg
sub
pop
add
into
leave
mov
xchg
movs
dec
sti
push
cmps
cmp
inc
sti
inc
pop
ds
or
popa
cmps
mov
rcl
and
add
lds
jge
sub
dec
imul
adc
add
inc
sar
fnstcw
popa
xchg
xchg
mov
add
xlat
test
sti
sbb
xchg
inc
push
nop
ret
aas
jmp
clc
lods
out
bound
mov
sbb
fsubr
repz
(bad)
add
sub
jg
js
jne
movs
retf
sbb
add
repz
inc
pop
and
or
arpl
mov
imul
mov
in
cmps
mov
retf
push
punpcklbw
mov
stos
dec
sbb
stc
(bad)
ja
jp
mov
imul
popf
dec
fs
xchg
dec
repnz
and
fmul
mov
jmp
or
mov
dec
sub
mov
sub
cli
push
stos
ficomp
pop
cmp
add
add
daa
adc
dec
dec
mov
push
popf
mov
outs
push
sub
lods
mov
(bad)
jp
jle
arpl
pushf
(bad)
jp
in
mov
pop
cmc
test
stos
retf
xor
mov
mov
jmp
into
cvtdq2ps
sti
fldenv
add
arpl
(bad)
mov
repz
add
mov
cmp
and
jne
push
mov
xchg
mov
ins
pop
push
dec
(bad)
test
add
sbb
push
loopne
sti
js
(bad)
mov
xlat
mov
and
bound
lahf
jbe
fwait
cmps
nop
sub
(bad)
push
jmp
inc
cmp
in
fbld
xor
pop
(bad)
adc
push
out
lods
mov
pop
cmc
inc
cdq
lock
shr
jb
fsub
cmp
cmp
cmp
or
dec
sbb
popf
aas
and
sahf
call
mov
ins
fisttp
mov
mov
rcl
xchg
xor
in
xor
pushf
push
cmp
cmc
addr16
mov
adc
dec
leave
retf
ret
sbb
js
sub
dec
mov
cwde
xchg
mov
popf
(bad)
(bad)
push
add
sti
pop
ja
es
mov
pop
jae
pop
aas
scas
xor
nop
xchg
in
mov
xchg
out
push
out
je
lds
rcl
mov
add
jmp
mov
inc
lods
mov
stc
repz
pop
dec
pushf
fld
ins
int
or
retf
cdq
inc
push
cmp
jae
js
pusha
out
test
pop
into
test
add
in
ins
jg
add
in
sbb
xchg
rcl
mov
add
dec
mov
jl
pop
pop
push
fist
ret
(bad)
jle
in
data16
lods
cmp
inc
lea
jge
call
xchg
loop
jl
sub
cmp
sar
(bad)
inc
add
jo
and
addr16
push
sub
mov
pop
test
or
and
adc
cmc
sub
mov
fisttp
mov
and
jmp
je
jns
ins
mov
pop
pop
hlt
fsubr
or
sbb
sahf
xchg
shl
mov
mov
xchg
retf
idiv
push
ret
aaa
loopne
test
push
dec
mov
loopne
fist
pop
push
push
sub
imul
and
cmps
mov
ins
fadd
sbb
push
in
pop
imul
shr
(bad)
xor
mov
sbb
xor
cmc
sti
dec
sahf
shl
dec
ins
inc
fild
test
inc
std
xchg
push
stc
enter
ins
movs
mov
jae
cmp
mov
ins
shl
sub
cmp
call
je
pusha
popf
sub
jp
xor
psllw
enter
fdivr
std
sbb
iret
inc
adc
sub
mov
mov
lahf
jno
retf
mov
pop
int
movs
add
jns
mov
cmp
popf
pop
or
retf
rcr
fwait
mov
pop
cwde
lds
repnz
sub
and
fxch
in
pop
xchg
add
popa
cmp
and
mov
fsub
fiadd
fistp
addr16
in
or
adc
pop
retf
push
adc
outs
stos
rcr
fldz
mov
mov
pop
jmp
inc
fadd
adc
push
int
test
ror
xor
mov
(bad)
cmp
test
adc
das
cld
(bad)
jae
aaa
arpl
stos
xor
ins
in
cmp
pushf
adc
out
shr
das
(bad)
loopne
push
xor
sub
je
xchg
sbb
mov
inc
stos
xor
mov
xor
xchg
ds
add
call
jmp
jl
(bad)
jmp
jae
imul
mov
fstp
lea
sub
out
in
in
jle
inc
pop
add
ss
push
stos
push
add
stos
mov
pop
in
cld
jle
lock
addr16
inc
jmp
adc
in
imul
outs
in
mov
jno
iret
test
stos
repz
loope
and
jg
int
dec
std
cld
push
ss
repz
sti
mov
bound
mov
mov
pop
rcr
cmp
inc
iret
int
daa
cwde
add
sub
xchg
pop
mov
push
les
int3
out
or
xor
xor
jp
ds
imul
xor
dec
jnp
lods
cld
arpl
or
add
add
mov
aas
xor
push
mov
mov
movs
mov
pusha
mov
test
rcr
mov
xchg
fisttp
dec
xlat
sbb
retf
jl
inc
jg
inc
mov
dec
sbb
retf
adc
cld
dec
ror
inc
aaa
mov
gs
es
and
fs
dec
ja
mov
xor
push
cmp
mov
push
jnp
dec
fld
and
loope
repnz
(bad)
mov
xchg
call
add
mov
adc
std
movs
mov
mov
cmp
clc
(bad)
jecxz
les
pop
or
lahf
subps
js
pop
mov
pop
in
call
jno
rcr
add
and
or
jno
outs
dec
lods
inc
adc
push
bound
jno
fdivr
test
jge
pop
xchg
in
repnz
mov
mov
xchg
jecxz
fild
mov
loope
movs
test
cmp
nop
push
in
pop
dec
sub
and
fst
inc
inc
xchg
dec
mov
mov
push
pop
fdivr
and
loope
pop
jns
test
and
cwde
add
fstp
fcomp
jp
mov
pop
or
jb
out
pop
stos
aam
xchg
fisttp
xchg
in
call
movs
inc
das
mov
xchg
in
sbb
pop
jae
mov
test
ins
rcr
ds
jns
sbb
jp
jno
inc
stc
inc
aaa
push
sbb
in
push
lock
push
sbb
dec
xor
sub
adc
mov
cmp
das
bound
ret
arpl
mov
fcom
jnp
int
pop
(bad)
cmp
xlat
scas
push
clc
sbb
mov
test
mov
xchg
mov
je
cs
or
push
in
adc
lods
push
imul
mov
fwait
sahf
push
or
addr16
cmp
cmp
dec
xor
sbb
xchg
pop
rcl
adc
xchg
imul
test
xchg
jnp
addr16
pop
test
in
jmp
jo
loopne
or
cmps
scas
xor
xchg
out
mov
popf
cmp
ret
(bad)
dec
push
pop
enter
jecxz
in
jb
ds
sub
fldcw
inc
mov
push
jge
mov
popf
add
aam
shr
cmp
mov
and
add
mov
into
and
sbb
dec
sub
cld
or
push
pop
xchg
stos
call
aam
arpl
(bad)
push
enter
cdq
mul
adc
mov
mov
sbb
mov
retf
ret
(bad)
jae
scas
(bad)
push
pop
adc
shr
cmp
ins
movs
push
push
push
xchg
xchg
xchg
dec
push
lock
ret
retf
iret
sbb
cmps
xor
and
sbb
ja
mov
push
mov
xor
les
pushf
pop
jbe
mov
pop
stos
mov
js
mov
mov
in
push
cmc
in
fnstenv
mov
xchg
outs
adc
fidiv
sahf
mov
jb
adc
aaa
adc
and
cs
xor
arpl
popf
lods
scas
adc
icebp
imul
fistp
jae
and
mov
dec
jo
push
mov
push
xchg
mov
enter
lea
movs
sub
stos
fdiv
cmp
inc
mov
(bad)
pop
dec
xchg
leave
icebp
add
xchg
mov
jmp
push
cwde
and
xor
ja
pop
mov
add
push
mov
xchg
in
pop
inc
add
jmp
and
add
or
jnp
(bad)
cwde
xor
scas
xchg
add
bound
fsub
test
xchg
mov
test
lods
mov
inc
inc
sahf
movs
mov
hlt
xrelease
addr16
sti
push
xor
inc
cld
add
push
movs
sbb
mov
jns
cdq
int
xor
xlat
pop
(bad)
jmp
add
cmp
add
push
or
mov
sbb
mov
mov
dec
ja
pop
les
or
fnstcw
call
push
cwde
xchg
adc
loop
and
ficom
jae
dec
sbb
in
in
pop
fistp
pop
xor
js
js
pop
mov
enter
call
mov
inc
cli
adc
dec
adc
out
daa
call
aas
mov
fs
and
pop
leave
mov
push
jb
fbstp
lods
cmp
mov
sbb
mov
xor
adc
icebp
adc
(bad)
out
jecxz
dec
outs
mov
cmp
leave
mul
inc
aaa
jns
and
dec
not
dec
xchg
xchg
xchg
test
cmps
pop
fdivr
pop
xor
inc
add
sub
mov
outs
inc
fild
and
cmps
adc
sbb
add
movs
das
add
push
stos
shl
and
aad
sub
push
out
nop
gs
(bad)
icebp
loop
pop
sbb
push
and
pop
lds
pop
sub
cmp
jno
inc
add
test
sub
sbb
loopne
inc
pop
or
aas
or
pop
or
xor
rcr
pop
or
test
inc
cs
(bad)
mov
mov
mov
outs
mov
test
sbb
in
xor
lods
mov
lahf
sbb
nop
aad
mov
ficom
dec
cmps
dec
or
sub
xor
jp
xor
fwait
ja
inc
lods
mov
bnd
mov
clc
inc
popa
pop
sbb
and
inc
push
add
add
imul
push
mov
xchg
imul
leave
fldenv
clc
pop
push
bound
and
outs
xchg
cwde
pop
dec
mov
std
or
mov
cs
outs
mov
icebp
adc
and
sub
or
(bad)
and
xchg
and
jne
cmp
mov
ffree
jo
retf
jns
mov
das
jns
add
sbb
push
or
(bad)
xor
push
jge
mov
push
shr
out
add
push
xlat
mov
popf
jbe
cwde
or
(bad)
mov
out
mov
mov
xor
mov
pop
sub
push
outs
in
sub
dec
icebp
and
cmp
or
in
push
pop
mov
mov
sub
lods
push
in
jg
(bad)
push
inc
inc
pop
cld
sbb
mov
shr
or
jb
test
out
mov
fldenv
and
je
adc
inc
xchg
jmp
out
pop
xchg
std
mov
shufps
fwait
mov
sbb
out
hlt
aam
sbb
int3
or
xor
fmulp
fs
and
inc
mov
jg
mov
add
std
in
add
push
(bad)
inc
sub
add
daa
stc
inc
ins
xchg
rcl
pop
lea
dec
popf
scas
mov
stos
lea
fs
fimul
mov
loop
div
pop
arpl
stos
lahf
retf
push
ret
mov
mov
loop
jno
cwde
fild
pop
test
call
imul
mov
dec
pop
push
popf
mov
test
cmps
(bad)
jns
dec
xor
sub
pop
mov
mov
add
shl
fldcw
jno
push
inc
lods
jg
xchg
cli
outs
xchg
stos
cmp
lds
mov
dec
mov
xchg
arpl
shl
fnstcw
popf
sbb
xor
neg
jg
adc
test
pop
in
pop
adc
cs
sbb
clc
cmpps
push
pop
xor
adc
popa
jnp
inc
cmp
or
fadd
jmp
in
inc
(bad)
pop
jb
ror
mov
stos
adc
lahf
data16
cmps
xchg
adc
dec
xchg
or
out
xchg
add
in
lods
frstor
data16
lods
das
cmp
xlat
fdivp
jp
inc
jne
arpl
outs
aaa
add
push
(bad)
jge
jmp
fs
inc
(bad)
and
in
or
shl
lahf
dec
dec
scas
sbb
aad
imul
mov
aam
jb
fidiv
cwde
stc
push
xchg
shr
add
out
pop
hlt
clc
xchg
mov
mov
scas
shl
cmp
mov
pop
sbb
(bad)
lods
ror
pop
popf
cs
cwde
mov
out
sbb
hlt
daa
movs
jmp
and
add
imul
pop
(bad)
and
popf
cmovb
neg
mov
mov
or
pop
inc
jns
push
jecxz
mov
sub
loopne
aaa
nop
jl
mov
jns
mov
test
and
dec
sbb
xlat
sbb
cmp
xchg
fdivr
adc
xor
pop
jle
cwde
rcl
adc
aam
ret
enter
fs
add
xor
and
or
sub
push
stc
jmp
lock
xchg
and
test
push
cmps
jecxz
push
xlat
clc
or
rcr
mov
add
mov
adc
icebp
jecxz
jmp
add
xor
cmc
cld
pop
jmp
sbb
cmp
pop
out
cmps
iret
mov
call
push
cmc
cmp
mov
leave
xor
sub
xor
xor
xlat
mov
cld
je
push
mov
inc
mov
mov
out
jmp
adc
icebp
mov
stc
(bad)
(bad)
sbb
push
jnp
fimul
movs
hlt
xlat
arpl
cmc
(bad)
xlat
inc
cs
(bad)
rcr
pop
push
push
pusha
fsub
jb
push
movs
test
or
js
sar
clc
gs
adc
daa
sbb
pop
pop
in
and
(bad)
push
dec
rcr
lods
inc
ins
xchg
test
aam
mov
mov
push
clc
push
dec
inc
fwait
inc
sti
iret
sti
ins
mov
mov
nop
xor
xchg
mov
mov
mov
add
test
mov
sbb
sub
lock
imul
bound
xchg
mov
add
retf
fadd
push
and
sbb
popa
or
cmc
aas
xor
push
jo
xchg
sbb
fwait
ins
adc
mov
(bad)
pop
add
dec
aad
enter
xor
mov
in
outs
mov
ret
lea
rol
mov
call
vcvttps2dq
mov
dec
arpl
xchg
xchg
dec
or
dec
in
sub
sbb
xor
xlat
ins
push
ja
mov
loope
xor
dec
iret
lock
inc
(bad)
fstp
outs
jl
mov
(bad)
cwde
rcr
mov
mov
mov
popf
lods
iret
push
fidivr
add
xor
fiadd
outs
jmp
retf
or
xor
xchg
push
jp
popf
or
mov
pop
jg
stos
fwait
mov
loope
and
mov
inc
and
adc
xchg
sbb
push
mov
add
mov
inc
in
mov
xor
push
mov
mov
jmp
cdq
pop
dec
(bad)
cmc
cmps
mov
adc
repz
not
mov
sahf
mov
gs
in
rcl
xor
xor
push
test
leave
lea
loopne
adc
ins
or
xor
inc
mov
movs
push
adc
lods
cmp
clc
in
retf
loop
push
js
je
(bad)
fsubr
test
cli
mov
mov
fisttp
cwde
movs
xchg
(bad)
call
push
lea
dec
ss
out
inc
ss
ficomp
jbe
js
or
sbb
addr16
ror
mov
inc
mov
and
cmp
jb
add
pop
inc
fcom
push
out
mov
and
inc
mov
pop
icebp
bound
push
cmp
pushf
aad
outs
xchg
mov
push
ffree
lahf
jbe
bound
ficomp
ja
rcr
retf
push
popa
xchg
mov
or
sub
clc
ret
sbb
inc
xchg
cmp
call
lea
and
daa
mov
push
inc
push
add
lahf
aas
les
inc
cmps
dec
or
mov
fwait
leave
mov
xchg
fnsave
inc
inc
data16
mov
mov
sub
ret
xchg
push
stos
lods
xor
lods
pop
jo
mov
pusha
inc
rcr
stos
faddp
ds
fisubr
dec
(bad)
push
inc
test
outs
sbb
pushf
inc
add
mov
add
sub
jae
int
pop
addr16
sub
jo
cwde
dec
aaa
xchg
sbb
mov
fs
mov
inc
and
push
shl
daa
jecxz
test
jns
mov
icebp
out
out
xchg
mov
sub
dec
xlat
sti
rol
push
pop
aaa
dec
fmul
sub
in
movs
mov
xor
aam
in
jo
in
add
add
sbb
add
adc
out
push
shr
mov
pop
movs
cdq
xchg
and
jmp
dec
mov
sbb
and
(bad)
out
sahf
int
ins
icebp
mov
xchg
sub
bound
cmp
cdq
popf
adc
sti
popa
popa
out
mov
cmp
sub
shr
inc
ret
or
aas
push
inc
mov
pop
xchg
xor
loop
and
push
into
aas
sbb
cmp
sbb
shl
movs
push
jae
cdq
clc
or
and
sahf
cmps
mov
rcl
push
pushf
push
fsub
pushf
sbb
movs
js
(bad)
stc
mov
mov
inc
loopne
mov
xor
mov
mov
jns
outs
aad
cmp
clc
iret
lock
shr
cmp
arpl
mov
or
pop
enter
add
sub
and
pop
push
nop
dec
add
mov
aaa
push
inc
out
cmp
push
push
or
mov
or
in
lock
movs
xchg
rol
(bad)
imul
mov
ds
call
mov
je
dec
sub
ret
jle
sbb
xor
data16
aas
pusha
out
mov
inc
cmp
push
in
jne
pop
daa
clc
cmp
jle
xor
sub
xchg
dec
pop
lods
or
mov
or
add
data16
push
in
jecxz
cwde
leave
mov
int3
loope
sub
mov
test
test
out
sbb
lods
inc
sub
rcr
sbb
push
sub
cmps
mov
repnz
retf
inc
dec
(bad)
xor
jb
xchg
cmp
ins
sub
sbb
xchg
int
xor
inc
inc
xchg
pop
out
mov
ret
in
push
push
call
ja
in
repz
div
sbb
inc
lods
mov
xchg
jle
sbb
mov
int
fwait
cmp
arpl
push
pop
xchg
in
push
out
lea
test
aam
pop
pop
cmp
pop
shr
mov
inc
xchg
aad
adc
push
cdq
mov
pop
mov
push
fadd
je
jae
mov
sahf
addr16
mov
lea
pop
mov
mov
test
std
xchg
lock
inc
gs
cli
sub
fnstenv
or
scas
cmp
add
and
stos
js
mov
xchg
jecxz
push
push
imul
jecxz
mov
lods
outs
xor
mov
pop
or
inc
ret
test
add
imul
cld
inc
lahf
fbstp
or
inc
mov
test
cmp
add
lea
push
cdq
mov
sub
adc
(bad)
in
and
adc
js
xor
jmp
pop
lea
lods
pop
fwait
ret
ficomp
add
loopne
ins
jl
mov
dec
jns
jne
mov
sbb
adc
ficomp
fs
jle
mov
xor
stos
jg
jmp
(bad)
and
fadd
js
out
xchg
aas
rol
mov
mov
test
out
pop
xchg
push
sub
adc
push
div
outs
call
adc
add
inc
mov
jl
and
(bad)
jbe
xchg
xor
mov
add
neg
rcr
jno
xchg
(bad)
xor
fld
adc
idiv
mov
ins
data16
adc
je
movs
pop
in
in
ss
int3
(bad)
stc
pop
int3
sbb
pop
mov
push
dec
mov
xchg
mov
(bad)
mov
mov
es
sbb
mov
sbb
dec
inc
fstp
outs
xor
iret
call
dec
sahf
pusha
xlat
(bad)
fcom
aam
(bad)
iret
mov
cli
aad
je
add
movs
inc
sbb
pop
(bad)
mov
sahf
mov
xor
cs
ror
push
pushf
inc
pop
pop
jo
push
sbb
inc
sbb
xchg
scas
mov
add
(bad)
fiadd
cmp
add
xchg
push
sbb
pop
punpckhwd
lods
cwde
jl
js
xor
xchg
mov
int
mov
mov
mov
jnp
fimul
mov
mov
push
or
(bad)
aad
in
sbb
push
das
mov
stos
xchg
popf
push
or
sbb
xchg
jp
int
ins
push
or
cmp
mov
aaa
fbld
(bad)
dec
push
mov
inc
(bad)
(bad)
sahf
sub
jle
sti
jecxz
iret
ret
outs
pcmpeqd
pop
adc
inc
xchg
mov
push
(bad)
mov
cmp
dec
pop
xor
sub
cmp
push
push
call
xor
pop
fldenv
sbb
loopne
sbb
cwde
scas
scas
dec
or
push
into
aam
mov
and
pop
and
push
mov
gs
cli
adc
cmp
out
test
hlt
dec
arpl
je
cmp
mov
sahf
jbe
cmps
pop
and
hlt
scas
adc
sbb
mov
jne
mov
repnz
sbb
pop
into
or
mov
lahf
add
es
pop
and
pop
daa
push
xchg
icebp
jg
lea
mov
dec
or
fnstsw
push
push
xor
pop
mov
fadd
fidiv
stos
push
pop
test
dec
(bad)
sti
out
test
jne
dec
jns
scas
dec
ret
dec
xchg
shl
addr16
mov
xchg
adc
(bad)
sub
jmp
inc
fld
cmc
mov
dec
push
push
stc
aam
push
retf
adc
and
push
sub
(bad)
xchg
cmp
adc
sbb
es
xchg
and
imul
jge
scas
mov
or
inc
xlat
les
repnz
inc
push
fdivr
mov
mov
sub
in
sbb
nop
jns
mov
shl
xchg
call
scas
jp
push
fimul
xor
inc
jnp
pop
movs
aas
bound
push
sbb
xchg
test
jle
jmp
cmp
xor
lahf
push
leave
ins
fisttp
sahf
dec
and
scas
sbb
xor
repz
xchg
ret
adc
jecxz
in
test
nop
imul
xchg
pop
xchg
dec
add
xchg
repz
loop
mov
cmp
dec
lods
sbb
mov
stc
jbe
sub
adc
cwde
cmp
lea
in
js
out
add
adc
inc
imul
jmp
dec
bound
pop
jmp
retf
(bad)
xchg
dec
test
jge
inc
dec
inc
cmps
jbe
mov
jns
jmp
(bad)
pushf
or
mov
push
sti
test
test
lock
adc
push
dec
pop
cmp
out
rol
add
and
pop
push
scas
lahf
mov
dec
fcmovnb
sub
sub
adc
pop
push
xor
repz
test
add
or
cmps
stos
sbb
iret
mov
fimul
inc
scas
jno
into
fstp
rol
out
in
sub
out
or
inc
pop
mov
fild
gs
cmps
push
cmp
enter
lds
or
push
pop
gs
cs
xchg
adc
in
add
idiv
or
inc
imul
movntq
mov
jge
rcl
div
dec
aam
inc
js
jnp
add
test
mov
psubsb
mov
shr
test
cs
mov
test
(bad)
jne
inc
sar
pop
sub
xlat
icebp
pop
fnstsw
push
or
nop
xor
loop
mov
jle
or
fdiv
sub
push
mov
cmps
sbb
pop
(bad)
fcomp
(bad)
icebp
test
fistp
mov
cmp
hlt
mov
push
(bad)
fild
(bad)
inc
xchg
sbb
xor
fisub
ss
or
enter
fadd
push
push
pop
mov
pop
pop
dec
fwait
mov
sub
retf
sbb
int3
push
dec
pop
dec
fidivr
aas
jne
daa
cmc
or
test
add
adc
mov
bound
mov
mov
push
cmc
inc
add
movs
pop
jecxz
loop
cmps
in
adc
fs
shl
cld
cwde
icebp
lea
test
mov
stos
(bad)
dec
icebp
sub
nop
loope
int3
daa
out
pop
add
aaa
inc
mov
cwde
mov
(bad)
cmp
(bad)
popa
adc
sbb
sbb
out
pop
mov
stc
inc
inc
mov
pop
mov
std
out
call
jmp
(bad)
leave
cmp
mov
push
int3
test
mov
lods
mov
jl
ret
in
add
mov
push
xor
jb
sub
pop
jl
xor
lods
jno
popa
call
dec
loopne
add
sbb
push
xor
xor
sahf
push
scas
add
inc
ja
pop
sub
xchg
sub
pop
aas
test
mov
imul
lods
push
fldenv
addr16
mov
out
das
retf
xchg
lods
lds
pop
push
mov
xchg
daa
cmp
dec
scas
or
push
ror
repnz
rol
push
pop
push
movs
bound
jbe
cdq
mov
inc
fdivr
sbb
retf
inc
sbb
inc
das
jle
pusha
stos
sbb
ja
sbb
movs
push
push
test
push
scas
mov
outs
push
dec
jno
push
in
inc
jae
jae
cdq
call
cdq
arpl
repz
mov
sti
sub
xchg
jl
lahf
test
push
fiadd
mov
loope
test
inc
fwait
adc
sub
test
dec
jno
imul
xchg
mov
outs
pushf
(bad)
sub
daa
int
adc
adc
add
adc
sub
xchg
lea
jmp
movs
inc
mov
sbb
dec
jae
fdiv
jmp
je
mov
test
popa
xchg
test
loope
test
and
mov
mov
push
shl
sbb
out
hlt
xlat
pusha
in
dec
adc
inc
test
imul
add
idiv
push
and
aas
in
add
fild
mov
mov
clc
(bad)
movs
sbb
push
jge
imul
mov
adc
cmps
or
idiv
mov
popf
out
sbb
dec
add
sbb
jecxz
shl
cmp
icebp
mov
es
(bad)
cli
sar
inc
jg
call
jge
mov
test
int
xor
(bad)
pop
inc
or
cld
dec
fs
push
sub
and
add
jbe
mov
push
xchg
fwait
lahf
bound
xor
fdivr
ret
jns
inc
fwait
ins
repz
mov
rcr
or
in
cmps
addr16
call
add
popa
adc
pop
cmps
dec
sub
leave
cmc
je
aas
data16
fidivr
pop
mov
mov
clc
dec
icebp
retf
iret
add
pop
xor
cmp
push
daa
and
sbb
ror
cmp
dec
addr16
and
fwait
push
leave
jmp
pop
jmp
iretw
stos
push
sbb
hlt
mov
rcr
stc
mov
dec
mov
mov
pop
jmp
cmp
mov
jle
adc
fsubr
xor
pop
fisub
js
cmp
push
cmp
sbb
jecxz
call
or
sbb
stos
sbb
pop
xor
xor
jmp
in
clts
inc
ror
(bad)
mov
sbb
aad
call
arpl
jmp
fsubr
stc
sar
fidiv
ret
lock
jg
xchg
popa
leave
push
fcomip
lods
push
nop
adc
aaa
jo
cs
sahf
inc
sub
cdq
or
and
sbb
xor
inc
xor
cmc
jnp
mov
xlat
xor
out
mov
sbb
inc
leave
les
cld
gs
and
dec
ffreep
test
mov
dec
aam
ja
(bad)
xlat
xchg
jne
mov
fmul
sbb
add
rol
adc
fisub
mov
cmp
and
mov
(bad)
arpl
retf
in
jne
push
ficom
pushf
es
add
sbb
pop
pop
stos
adc
fwait
and
dec
ret
add
mov
sbb
push
lock
pop
mov
test
in
std
xchg
push
in
mov
nop
jle
loopne
test
push
call
jg
scas
xchg
fld
scas
cmp
lods
push
sti
sbb
push
dec
call
jg
mov
sbb
add
add
inc
or
popa
mov
imul
or
mov
arpl
adc
aas
xchg
shr
pop
jg
mov
xor
mov
jmp
(bad)
or
mov
test
mov
scas
cmp
enter
jmp
pop
jae
jno
jo
nop
test
into
ror
rcr
dec
jno
inc
imul
aam
ins
mov
dec
push
mov
push
xor
aad
and
je
mov
outs
mov
jmp
and
call
cmps
xchg
into
sbb
xchg
sbb
and
fisttp
push
fiadd
rcl
adc
outs
inc
addr16
jae
or
fwait
mov
pop
retf
xchg
iret
jg
pop
cmp
sbb
mov
push
js
or
mov
(bad)
in
cmps
aas
iret
int3
push
pushf
sbb
push
cmps
loopne
je
mov
mov
mov
push
add
leave
(bad)
mov
mov
das
aaa
push
shl
iret
dec
ficom
cmp
and
dec
sbb
xchg
mov
sub
rcl
ret
leave
jae
push
sbb
adc
dec
jge
xchg
add
xchg
lods
inc
add
push
push
cld
repz
jle
call
ret
xchg
jno
xchg
pop
push
hlt
fidiv
xchg
mov
push
in
std
adc
lock
cmps
rcr
jl
xchg
fidiv
ins
shr
sub
fild
jp
gs
xor
xchg
pop
retf
dec
std
aam
or
cmp
pusha
sub
push
mov
push
popf
or
in
xchg
jne
or
xchg
enter
retf
sbb
jnp
sub
lahf
enter
in
mul
pushf
add
adc
adc
test
(bad)
hlt
(bad)
loopne
inc
cwde
mov
daa
pop
or
out
stc
sub
and
jae
adc
cld
arpl
pop
lods
stos
mov
fisttp
jbe
sbb
cmp
sub
mov
inc
mov
ins
sbb
mov
(bad)
icebp
data16
push
inc
popf
dec
sar
in
fcomp
pushf
cmp
jmp
mov
and
fcompp
pop
imul
loope
std
inc
int
jle
xor
cmp
mov
in
fsub
mov
xor
cmp
je
adc
pop
mov
lea
rcl
xchg
mov
(bad)
and
jecxz
xchg
(bad)
inc
fadd
jnp
test
fst
cwde
pop
(bad)
clc
push
pop
(bad)
xlat
mov
cmps
lea
mov
shl
xchg
std
outs
lea
dec
and
std
daa
push
sub
sysret
inc
test
xchg
stos
mov
push
rol
retf
(bad)
adc
inc
std
add
gs
sbb
pop
movs
inc
pop
mov
add
std
xchg
mov
push
ds
out
bnd
int3
jmp
or
loop
ja
sbb
loope
(bad)
aas
cmps
pop
push
mov
mov
adc
dec
pusha
cwde
mov
cmp
dec
adc
mov
xor
jb
xchg
lods
test
ror
jbe
sub
pop
or
popa
mov
lahf
xor
inc
lahf
aaa
push
mov
jb
cmc
xchg
and
fs
shl
sahf
mov
rcr
das
xchg
mov
add
scas
cmp
xchg
hlt
cdq
cli
stc
jl
lea
dec
push
dec
(bad)
(bad)
ficom
adc
call
pusha
out
xor
fisttp
retf
sbb
or
stos
or
pushf
data16
sbb
(bad)
mov
call
jmp
dec
fistp
mov
pop
sbb
dec
jmp
cmps
out
sub
push
adc
lds
xchg
clc
lock
mov
dec
sub
(bad)
call
inc
jge
pop
sbb
retf
aaa
pop
jmp
clc
mov
leave
clc
pop
jb
sub
inc
pop
jbe
addr16
xchg
sub
bound
ja
or
aaa
aaa
(bad)
out
in
nop
retf
jnp
dec
push
pop
xchg
push
std
mov
mov
jecxz
pop
es
rol
mov
inc
test
pop
mov
mov
stos
mov
jl
xchg
popf
gs
jg
dec
or
rcl
test
sar
or
or
mov
mov
mov
in
out
or
cmp
xor
add
mov
sbb
fwait
jns
mov
dec
pop
xor
add
push
push
fdivr
iret
les
hlt
mov
push
pop
test
in
lea
dec
pop
pushf
mov
xor
int3
ret
pushf
fbld
inc
sar
mov
ret
adc
push
and
dec
pop
dec
in
ret
lsl
imul
inc
push
jb
(bad)
sub
pop
or
das
out
outs
lea
sub
mov
add
loope
mov
lahf
fidivr
dec
pusha
mov
push
test
mov
nop
jno
add
test
push
lahf
mov
mov
jmp
in
add
cmc
clc
int3
jl
push
jg
mov
jae
dec
fwait
sahf
mov
xor
out
push
(bad)
inc
jge
inc
retf
jnp
cmp
pop
mov
shl
pop
cmp
adc
movs
and
and
enter
jmp
je
jae
xchg
jmp
addr16
xchg
pop
or
xchg
inc
mov
pop
mov
sbb
jecxz
ret
shr
jne
inc
fst
cmp
jns
cs
or
xor
pop
test
and
mov
sbb
aas
or
xor
and
mov
sbb
inc
sub
mov
cmp
push
(bad)
test
xchg
aad
and
pushf
xchg
out
inc
jmp
pop
daa
std
out
adc
adc
sbb
or
xchg
lock
enter
mov
push
pop
xor
add
xor
jns
jg
cmp
push
dec
dec
push
and
cmp
jo
add
jo
mov
scas
and
movs
mov
and
dec
jmp
pop
loop
bound
outs
sti
lahf
in
test
mov
and
xchg
dec
xchg
fxch
sub
add
(bad)
icebp
mov
loop
inc
leave
pop
shl
and
les
pop
cmp
xor
mov
mov
mov
sar
js
div
pop
ret
sub
pusha
push
and
inc
push
mov
dec
xchg
xchg
mov
ret
idiv
add
ror
loop
loopne
jmp
and
fld
add
xchg
ret
cmc
ret
aad
push
mov
fidivr
dec
xlat
(bad)
(bad)
jecxz
push
cmp
arpl
in
lds
pop
std
jmp
call
adc
and
pop
push
(bad)
dec
cmp
xor
ins
and
aam
or
bnd
adc
inc
lea
rol
mov
mov
clc
fisubr
sti
(bad)
mov
repnz
popf
popa
fs
in
cmp
sub
out
adc
cmp
jno
push
mov
lahf
mov
int3
cmc
jp
xchg
pop
jl
cmp
push
jae
and
loop
mov
pop
inc
cmps
and
mov
sahf
mov
and
pop
pop
mov
cdq
xchg
ja
xchg
inc
push
int
xchg
add
mov
mov
xchg
add
xacquire
ins
mov
dec
pop
cmp
sti
fnstenv
add
jbe
xchg
push
cmp
mov
leave
iretw
sar
mov
pop
bound
loopne
das
js
sbb
jl
ficom
mov
cmova
scas
jmp
mov
inc
(bad)
push
retf
pop
movs
cld
lahf
jge
mov
xor
cli
mov
cmc
bound
rol
mov
cmc
adc
icebp
mov
fidivr
inc
mov
test
ds
(bad)
in
jl
push
pop
and
cmp
mov
ret
lahf
mov
dec
jg
pop
mov
sbb
sbb
push
pop
into
xor
mov
mov
scas
call
shr
mov
shl
mov
stos
or
fimul
lods
xchg
ret
sub
jg
mov
int
mov
(bad)
scas
fmul
fs
enter
inc
imul
cmp
or
lahf
adc
neg
call
push
pop
jae
pop
xchg
sbb
fisttp
xchg
pop
call
std
mov
das
mov
push
fnsave
inc
mov
pop
stos
std
mov
nop
mov
add
lea
sti
fwait
les
mov
push
mov
xlat
xor
ins
in
adc
and
loope
pop
and
ins
js
lods
xor
or
pop
jmp
jg
jae
mov
aas
mov
mov
in
inc
dec
rcl
sar
fs
push
and
int
sete
outs
movs
jno
xchg
out
mov
mov
xlat
xchg
(bad)
movs
lods
cmp
push
call
inc
mov
into
rol
in
xchg
dec
lock
icebp
cmp
xor
xchg
cmc
fs
or
sbb
adc
lods
push
add
ret
mov
adc
fsub
rol
mov
jae
inc
xor
sbb
sub
in
pop
rol
inc
arpl
jns
shl
(bad)
movs
sbb
pcmpeqb
cmp
xchg
stos
push
push
aad
mov
ret
ja
mov
imul
mov
cwde
test
mov
inc
xchg
outs
fld
cs
fucomip
dec
std
sbb
or
inc
cld
jne
dec
mov
inc
(bad)
fimul
xlat
add
aad
pop
bound
push
xchg
xor
sbb
inc
sbb
add
inc
(bad)
pop
mov
gs
push
jb
sar
sahf
adc
loopne
repz
in
scas
xchg
mov
movs
dec
push
mov
mov
push
shr
xchg
repz
sub
cs
mov
imul
lea
pop
stos
xor
pop
xchg
mov
mov
out
and
mov
push
jbe
out
imul
cmp
(bad)
fst
mov
pushf
outs
add
pop
jmp
sti
imul
(bad)
pop
mov
mov
mov
icebp
inc
mov
sbb
dec
mov
movs
scas
clc
addr16
sbb
or
sahf
cmp
fdivr
sbb
ss
push
mov
jmp
mov
jp
or
push
sbb
jl
mov
add
xor
inc
fwait
in
movs
and
sbb
inc
mov
ins
jecxz
xchg
(bad)
cwde
jge
aad
mov
aad
xchg
add
int
mov
mov
inc
jecxz
mov
sub
inc
in
and
cmp
punpckhwd
arpl
jle
mov
stos
sbb
shl
ret
inc
pop
adc
and
add
sub
outs
arpl
add
xor
cli
call
xchg
inc
xor
hlt
pop
call
sub
loop
adc
sbb
mov
cmp
shl
cmc
lea
pop
dec
adc
jae
imul
cmps
imul
xor
pop
cli
retf
lea
jbe
test
inc
add
loop
mov
retf
ficomp
mov
mov
aam
cmps
cmp
pop
and
repz
rcr
mov
and
fdivr
cwde
mov
out
xchg
das
inc
leave
stc
(bad)
retf
loopne
pop
sub
or
leave
icebp
inc
sahf
adc
cmp
test
or
and
jo
retf
pop
push
or
aaa
xchg
sub
and
ins
push
(bad)
jnp
(bad)
adc
mov
ins
jmp
sti
fnsave
mov
les
jge
xchg
pop
or
loopne
xor
pop
mov
push
add
call
pop
push
xchg
cmp
out
mov
jnp
adc
push
lea
dec
dec
mov
(bad)
mov
push
lea
ret
dec
pop
cmp
push
sbb
daa
mov
ins
push
lea
sbb
xor
jmp
addr16
bound
arpl
fwait
pop
add
cli
repz
addr16
(bad)
rol
push
rol
xor
out
scas
dec
rcl
xor
sub
inc
push
daa
inc
les
jbe
mov
fnstenv
inc
call
inc
sbb
pop
xor
addr16
sbb
or
mov
call
xchg
inc
mov
jbe
pop
pop
mov
cmp
nop
jl
test
not
jo
mov
and
ffree
js
mov
adc
fnstcw
in
jg
dec
xor
lea
adc
push
in
sbb
adc
fisubr
push
sbb
and
jl
sub
sbb
ret
test
test
adc
stos
inc
iret
out
pusha
fcomp
daa
cdq
sub
jmp
push
(bad)
loop
push
mov
repz
mov
inc
test
test
fistp
scas
mov
rcl
sbb
sub
in
inc
cmp
sub
sbb
mov
inc
in
jle
mov
inc
jnp
into
inc
cmp
je
xchg
or
xchg
dec
adc
stos
arpl
add
rol
pop
add
push
mov
adc
loop
cs
xor
mov
adc
mov
mov
movs
mov
pop
dec
in
cmps
push
aad
(bad)
cmp
and
out
jb
pop
fdiv
pop
pop
mov
call
cmp
(bad)
inc
and
adc
lods
cmp
mov
pusha
sahf
ror
dec
mov
icebp
inc
shr
dec
scas
jle
(bad)
in
loope
pushf
dec
(bad)
jmp
sbb
cwde
mov
sub
xor
adc
clc
lock
xlat
and
ficomp
gs
push
cmp
in
inc
es
inc
inc
mov
and
mov
mov
jg
mov
add
add
pop
xchg
sub
xchg
(bad)
test
dec
enter
xchg
repz
inc
pop
inc
mov
test
mov
adc
arpl
pop
jp
mov
retf
cdq
(bad)
in
sbb
mov
push
scas
sub
mov
int3
and
xor
adc
stos
xor
push
mov
mov
jl
int
mov
daa
cmps
add
push
add
cwde
pop
sahf
aaa
sti
pop
push
cmp
movs
lods
cmp
dec
jle
into
cmps
cmp
pop
jl
fidiv
mov
fs
int
adc
loope
daa
enter
xchg
je
mov
push
inc
rol
cmc
mov
jo
cmp
out
rcl
push
pop
cmp
jbe
push
ds
xor
add
jnp
hlt
and
or
pushf
or
rcr
mov
pop
mov
adc
std
xor
(bad)
scas
xor
out
xchg
push
int
pop
sub
lock
push
xchg
xchg
cwde
fmul
add
aas
rcl
mov
mov
add
pop
adc
(bad)
ss
jns
cdq
outs
sbb
sahf
push
daa
pop
mov
pop
in
inc
in
js
mov
jne
mov
add
add
test
inc
xlat
cmp
lods
stos
cmps
cmp
sbb
leave
mul
fst
xchg
loope
mov
sub
shl
das
int3
ja
stos
fild
mov
mov
mov
xchg
mov
scas
sbb
lods
and
and
push
and
xor
or
cs
lea
or
sub
and
pop
mov
fistp
push
adc
test
pop
sti
lods
mov
iret
(bad)
pop
in
arpl
fist
dec
(bad)
xchg
je
mov
xchg
and
sar
xor
mov
outs
dec
shl
out
rep
adc
inc
lock
(bad)
jmp
jo
xor
sahf
xor
mov
add
cli
jns
cli
jle
pop
inc
mov
sbb
inc
jae
pop
and
lahf
arpl
adc
call
rcl
push
fadd
jge
xchg
push
cmp
repz
fwait
push
mov
mov
push
sahf
cwde
mov
add
sub
std
imul
inc
sar
sbb
stc
push
xchg
sub
and
mov
ret
lds
enter
(bad)
jl
dec
ds
sbb
cmp
mov
inc
mov
mov
dec
pop
cmp
cmps
mov
test
add
fbstp
iret
xchg
icebp
and
jg
sti
(bad)
mov
les
mov
push
mov
shl
jmp
fdiv
jl
xor
cmp
iret
jmp
and
push
fwait
dec
pop
dec
mov
and
dec
icebp
sbb
lea
pop
ds
sbb
jle
bound
sbb
xchg
add
cmp
fcmovbe
movs
sbb
add
push
fisub
mov
and
adc
mov
js
movs
mov
shl
jo
(bad)
fdivr
pop
cmps
or
repnz
jne
sbb
sbb
mov
inc
sub
scas
pushf
xchg
aam
sub
add
fsub
mov
or
in
adc
and
jns
lods
push
daa
xchg
xor
mov
aaa
aaa
xor
mov
(bad)
outs
add
pop
test
xchg
pop
enter
(bad)
sub
bound
mov
lock
fild
mov
push
fsub
dec
pop
das
jecxz
mov
in
and
cmp
mov
pop
or
sbb
push
ret
shl
cwde
jmp
sub
pop
mov
ins
ficomp
lods
sbb
mov
mov
retf
adc
ror
dec
inc
jbe
jnp
scas
clc
outs
mov
pushf
inc
or
fstp
mov
push
push
mov
(bad)
clc
jmp
fild
sbb
hlt
jns
xor
in
sub
adc
arpl
push
add
mov
rcr
hlt
sub
call
jno
aad
xor
sub
sbb
outs
and
mov
fprem
mov
xchg
sti
jnp
dec
popa
inc
scas
push
sti
mov
xchg
outs
nop
or
stos
mov
retf
test
pop
sti
rcl
cmc
in
jns
popf
dec
in
push
not
(bad)
int
(bad)
adc
pop
mov
push
push
or
test
int3
mul
jnp
les
pop
add
mov
scas
jle
jg
mov
and
mov
push
jae
in
loop
mov
js
inc
pop
inc
nop
and
fdiv
(bad)
fcomi
sub
add
mov
mov
hlt
xlat
cdq
dec
sbb
rcl
sub
repz
ds
addr16
pop
call
mov
iret
mov
(bad)
retf
push
fs
xor
cmp
inc
ja
lods
adc
or
push
dec
test
adc
add
test
imul
xchg
mov
or
xchg
jne
test
jmp
test
test
popf
scas
xor
dec
int3
dec
add
int3
pop
push
sub
sbb
stc
arpl
setp
jmp
rol
push
add
sbb
sub
sbb
push
inc
sub
jno
and
pop
xchg
fnsave
adc
inc
pushf
sub
lods
cli
jg
rcl
and
retf
xchg
pop
mov
je
movs
ret
inc
jmp
xchg
stos
dec
enter
pop
adc
repz
add
test
pop
pop
push
pushf
cmps
mov
outs
enter
pop
inc
sbb
push
add
push
mov
fild
adc
dec
inc
test
or
stc
loope
call
xchg
sub
ret
cld
inc
loop
loopne
loope
jle
fadd
div
gs
movs
mov
adc
mov
cld
(bad)
test
loope
pop
stos
mov
adc
push
mov
(bad)
jle
xor
push
pop
dec
div
push
dec
in
sbb
repnz
(bad)
hlt
push
jno
sbb
gs
jl
mov
inc
test
data16
rcr
retf
daa
iret
xchg
pop
shl
mov
push
xchg
mov
dec
in
imul
fistp
mov
js
mov
out
aad
inc
jg
sahf
jne
dec
into
sub
cmp
lock
adc
or
movs
inc
or
xchg
iret
aam
sbb
fs
dec
jno
ss
and
bound
ins
rcr
push
sahf
push
inc
shl
jle
xlat
sahf
and
leavew
shl
pop
cwde
fadd
mov
pop
jae
push
shl
je
mov
xchg
fucomip
ss
lock
inc
test
cld
mov
mov
pop
imul
(bad)
push
sbb
hlt
daa
retf
cs
les
je
sahf
cmp
or
sbb
dec
pushf
std
jo
neg
pop
dec
in
inc
push
or
cmp
add
pusha
dec
popf
or
mov
ins
cwde
mov
sbb
jno
fldcw
jmp
pop
and
inc
test
loope
nop
mov
lea
push
mov
pop
push
(bad)
rol
fld
push
js
xor
dec
xchg
es
pop
jno
push
sbb
call
inc
leave
fld
mov
sbb
cmp
or
cmp
je
adc
mov
add
add
cmp
jb
lea
iret
xlat
push
cmps
scas
loope
ficomp
xchg
push
(bad)
shl
lods
dec
pop
mov
repnz
(bad)
retf
fld
mov
retf
nop
out
pop
loope
ja
push
sbb
push
dec
xchg
mov
lea
cmp
jle
jmp
push
xor
pop
sbb
mov
push
sti
inc
dec
mov
add
aad
or
xor
fcmovnbe
mov
stos
int3
inc
aad
jb
fstp
xchg
cmc
fs
mov
push
mov
or
arpl
xor
dec
into
repnz
cmc
fdivr
outs
lods
xchg
ins
icebp
imul
sbb
and
aaa
popa
cmp
jg
inc
sub
mov
fnstsw
(bad)
pop
mov
inc
pushaw
pop
cmc
sub
jl
or
xor
pop
data16
adc
call
es
rcl
in
jge
and
sti
cmp
movs
or
xchg
loope
or
dec
scas
test
dec
loopne
repnz
sar
xchg
cli
inc
imul
jmp
add
cmp
daa
sbb
ins
sbb
mov
cmp
pop
cwde
repz
pop
jmp
push
jle
push
inc
mov
hlt
jle
sbb
into
mov
fcom
xchg
pop
xchg
ror
inc
jnp
mov
jg
shl
push
loop
add
in
xchg
sub
rol
mov
repz
retf
jle
scas
stos
dec
in
outs
test
sub
out
fld
push
push
clc
jb
jae
(bad)
sahf
add
stc
push
or
push
inc
les
adc
or
jae
mov
push
xchg
lods
lods
sbb
(bad)
cdq
aad
or
fistp
push
popa
mov
push
mov
ins
shl
mov
hlt
jl
lahf
cwde
int
test
pop
mov
mov
out
(bad)
jnp
fwait
xchg
push
shr
hlt
cmp
cmp
int3
sar
es
popa
lahf
ins
pop
arpl
mov
mov
vpacksswb
pop
loope
or
mov
sub
jge
movs
pop
pop
cmps
push
push
jmp
sub
cwde
into
loope
(bad)
inc
pop
sub
pop
aad
in
xchg
cld
in
ret
pop
test
lahf
and
sbb
stc
xchg
mov
xchg
sbb
xor
(bad)
fcomp
jmp
inc
or
iret
int
cld
cmp
inc
movs
aas
sbb
sub
mov
push
std
jnp
fbld
pop
and
sub
(bad)
pop
jno
jo
mov
add
push
ins
(bad)
sti
xchg
add
add
jecxz
out
test
cmps
outs
rep
push
dec
idiv
xchg
or
jge
stos
mov
push
out
mov
icebp
(bad)
pop
inc
xchg
mov
push
enter
cmp
pop
call
jo
jnp
push
jns
div
add
in
fstp
inc
iret
in
js
cli
pop
jno
add
cmp
(bad)
inc
mov
mov
pop
movs
mov
gs
(bad)
and
sbb
cmps
push
mov
xchg
mov
push
mov
mov
(bad)
jmp
xchg
aas
sbb
cmp
mov
xor
push
shr
call
sub
in
ds
mov
hlt
ins
icebp
jmp
stos
inc
add
ret
pop
adc
and
cmp
xor
addr16
mov
xor
mov
loop
mov
loopne
push
pop
mov
aad
jecxz
stos
icebp
call
cmp
pop
in
mov
jge
or
repnz
(bad)
jmp
pop
mov
retf
and
pop
mov
ins
and
test
clc
jge
lea
pop
inc
ret
or
and
sahf
jns
movs
adc
mov
loopne
pushf
inc
retf
loope
push
fs
pop
mov
addr16
jmp
sub
push
mov
outs
mov
in
hlt
mov
sar
lods
(bad)
dec
ror
or
jmp
add
adc
aaa
dec
lahf
(bad)
enter
scas
jp
std
and
adc
xor
xor
addr16
pushf
push
dec
mov
pop
mov
scas
or
ss
jecxz
loopne
stos
out
pop
cld
pop
jge
shl
ret
rcr
loop
xchg
mov
add
xchg
sbb
lea
fst
mov
xlat
dec
mov
pop
inc
(bad)
xchg
fadd
pop
add
inc
outs
clc
dec
cmp
mov
stos
xor
cmp
push
inc
jmp
imul
push
jbe
mov
cmp
icebp
call
(bad)
jl
push
popf
arpl
test
jmp
stos
test
pop
(bad)
xchg
xchg
shl
push
jg
fstp
imul
adc
daa
jecxz
dec
sub
inc
mov
xchg
dec
ret
nop
sub
test
or
fwait
bswap
xor
pop
pop
xchg
add
mov
stc
int
sbb
retf
pop
push
daa
cwde
dec
fld
mov
push
fsubp
mov
cli
dec
idiv
popa
cdq
test
test
loope
pusha
out
test
and
dec
(bad)
js
sub
pop
push
cmp
push
sbb
mov
inc
sbb
popa
fsubr
xor
ret
push
daa
bound
outs
jo
jp
rcl
jo
test
ins
jmp
jmp
and
out
movs
jl
movs
data16
rcr
add
sbb
mov
sbb
xchg
mul
xchg
retf
mov
pushf
pop
xlat
dec
add
int
pop
sbb
push
and
xchg
sub
int
int
xor
mov
push
jne
sahf
or
push
or
or
outs
sbb
pop
(bad)
in
cmps
pop
retf
inc
jns
mov
inc
mov
call
ret
repz
test
mov
xchg
fdiv
call
jmp
or
call
sbb
inc
rcl
outs
dec
test
pop
push
mov
mov
cmp
jl
in
ds
inc
push
aas
jb
cmp
ss
and
push
dec
fimul
ror
lea
inc
int
in
mov
inc
rcr
push
mov
cli
xchg
jg
xlat
mov
retf
sub
cld
lea
hlt
adc
call
lods
mov
in
loope
dec
push
scas
stos
dec
idiv
sbb
cmp
dec
push
jp
mov
dec
ins
mul
add
cmp
imul
or
in
jbe
pop
pop
loopne
ins
add
sub
ins
push
push
daa
scas
dec
jle
xlat
mov
cmp
jmp
test
xchg
rol
sbb
mov
outs
mov
xchg
pop
xor
les
mov
inc
lods
mov
pushf
out
into
out
push
add
icebp
sub
pop
sbb
pop
popf
cmp
movs
cmp
and
push
sub
mov
in
out
jo
into
add
push
daa
shl
or
test
sbb
mov
adc
aam
sti
pop
call
lods
push
in
aam
test
mov
mov
nop
addr16
std
fcompp
sbb
std
add
out
stos
rol
mov
xor
inc
mov
fnstcw
rcr
push
cmp
adc
mov
ins
icebp
ret
dec
inc
retf
jg
enter
outs
bound
rol
adc
xor
jnp
xchg
sbb
mov
(bad)
cmps
mov
fstp
xor
neg
rcl
enter
les
mov
bound
add
callw
hlt
outs
aam
add
dec
loop
ja
jns
jne
inc
in
push
jle
adc
stc
ret
aad
adc
call
ss
or
mov
scas
add
mov
inc
fidiv
dec
jmp
mov
jae
fbld
add
aam
jbe
dec
mov
fcom
xor
sbb
popf
mov
dec
in
repnz
stc
jge
mov
xor
push
adc
push
icebp
not
pusha
sar
daa
dec
popa
xchg
jno
les
ret
repz
jmp
ja
pop
sbb
imul
push
push
mov
or
pop
dec
jmp
add
inc
jmp
jp
les
adc
mov
repz
inc
test
dec
sub
mov
jmp
and
(bad)
(bad)
arpl
les
dec
jb
aaa
pop
pusha
xchg
retf
xchg
into
cli
and
add
dec
pop
sbb
jb
ret
mov
lods
sub
push
int3
repz
xchg
fistp
addr16
pusha
rcr
add
mov
mov
add
aad
sub
jg
popf
mov
or
mov
cmp
shl
fimul
pop
(bad)
push
and
inc
fcom
arpl
inc
sub
stos
adc
sub
adc
inc
sub
gs
pop
push
fbstp
xlat
xor
mov
adc
cmp
test
movs
xadd
inc
lock
inc
mov
pop
mov
xchg
inc
cmp
(bad)
cmps
adc
push
hlt
cmps
mov
add
and
dec
xchg
cdq
in
sub
mov
(bad)
fild
cmp
ins
test
push
push
mov
pushf
test
pop
fild
xchg
add
in
push
pop
push
inc
out
dec
or
pop
mov
jle
movs
dec
adc
sbb
sub
in
mov
cwde
cld
add
xor
or
push
out
pusha
push
mov
test
stc
cdq
enter
pop
lods
xchg
xchg
cmp
hlt
clc
xchg
test
jle
adc
out
int3
jne
pop
jl
jno
push
ss
fwait
popf
mov
stc
(bad)
and
out
dec
inc
addr16
and
add
sbb
arpl
inc
mov
xchg
aas
sub
retf
shr
(bad)
pop
gs
fidiv
sti
mov
mov
popf
loope
sub
lock
lea
mov
sar
mov
(bad)
test
test
in
sub
push
xlat
mov
cmp
adc
and
mov
int3
pop
cwde
retf
icebp
inc
imul
cmp
add
int
cmps
data16
imul
or
xchg
hlt
stos
movs
cmp
inc
daa
adc
call
add
mov
popf
and
imul
popa
data16
popf
cmp
aam
mov
jmp
das
in
sbb
dec
jmp
clc
jo
cmp
or
push
sub
xchg
mov
mov
ror
sbb
les
pop
dec
or
mov
sahf
sbb
dec
inc
scas
jns
ror
add
adc
ret
iret
fwait
xor
xchg
jp
jne
jns
push
xlat
mov
jbe
stos
pop
cs
fld
test
xchg
lods
or
cld
loopne
sbb
mov
adc
and
ficomp
adc
push
test
pop
sti
hlt
xor
loopne
jb
add
push
sbb
sbb
fild
scas
cmp
mov
xor
rol
nop
je
mov
inc
cdq
int
adc
std
mov
mov
(bad)
sahf
repz
cmps
cmp
mul
scas
pop
jb
dec
add
in
rcl
pop
std
and
ss
sbb
arpl
pusha
mov
int3
enter
sbb
jmp
fistp
ja
push
scas
cmp
mov
arpl
xor
(bad)
xchg
xor
addr16
push
repz
out
mov
cdq
inc
adc
jecxz
cmp
fs
lods
loop
scas
gs
movs
ret
mov
add
leave
or
xor
(bad)
jo
sub
fucomp
test
or
imul
ins
cmp
mov
enter
mov
or
or
mov
int
ror
fnstsw
lahf
xor
mov
or
dec
sahf
test
jno
ins
inc
jno
outs
icebp
into
(bad)
jp
jmp
jbe
cli
movs
mov
mov
xchg
mov
xlat
out
int
outs
adc
ret
jp
and
rcl
lock
fild
addr16
pop
mov
inc
pop
add
add
inc
loopne
cmp
pop
call
pop
mov
pop
dec
mov
pop
mov
and
iret
add
fidiv
inc
add
mov
jge
loop
outs
rcr
add
je
mov
jg
loop
repnz
leave
retf
retf
pop
pop
in
fimul
pop
cmps
sub
sar
cmp
imul
out
or
stc
cli
jnp
(bad)
js
inc
cmp
sub
or
and
(bad)
mov
sete
dec
(bad)
stos
xor
in
inc
cld
arpl
mov
cmp
int3
xchg
jno
out
loope
sbb
mov
test
xchg
xchg
mov
xchg
scas
mov
pop
cmc
fdiv
aam
sar
daa
test
imul
js
dec
ss
lahf
mov
cmps
ja
enter
dec
jl
sbb
and
or
shl
aam
adc
push
mov
adc
icebp
inc
loopne
inc
jb
pusha
fisub
lahf
pop
mov
xchg
mov
mov
inc
pusha
xchg
fdivp
adc
iret
fst
mov
mov
cmp
out
(bad)
pop
push
jle
mov
mov
mov
sahf
ret
or
bound
loopne
adc
mov
push
push
(bad)
sar
jnp
into
sahf
or
cmp
retf
fidivr
test
addr16
fadd
div
mov
cmp
arpl
mov
cdq
mov
stos
cmp
add
inc
jp
mov
jns
pop
sbb
into
pop
je
jae
xor
mov
mov
sahf
cmp
out
into
std
sub
mov
add
fstp
push
add
jbe
inc
imul
aas
pop
xor
aad
push
mov
jl
rcl
fsub
arpl
xchg
push
add
out
das
jecxz
mov
jg
sahf
mov
js
xlat
loopne
clc
call
pusha
int3
je
sub
adc
leave
ficomp
aas
fs
pop
in
and
or
dec
cs
je
sar
jmp
and
or
sbb
jbe
inc
push
movs
or
mov
bound
and
sti
in
stos
repz
push
inc
and
pop
ret
(bad)
hlt
and
xchg
dec
xor
sti
jle
stos
mov
sbb
mov
cmps
rol
jge
cmc
scas
pusha
ror
das
sub
xchg
into
jmp
push
data16
push
sbb
jl
mov
jmp
call
pop
inc
dec
cmp
ds
jne
mov
push
mov
and
mov
call
sbb
pusha
fs
das
cdq
mov
mov
loope
push
rol
lods
ja
repnz
mov
dec
sahf
push
push
adc
retf
fsub
mov
aaa
or
cli
rcl
and
xor
aaa
pop
pusha
lods
pusha
adc
mov
pop
clc
pop
xchg
fimul
(bad)
popa
push
jnp
aad
sub
and
jns
mov
mov
stc
or
sbb
test
inc
dec
arpl
mov
mov
aad
stos
cmp
sbb
xchg
outs
mov
fcomip
movs
cli
sbb
fstp
sub
sub
push
mov
int
sbb
aas
(bad)
jnp
mov
and
mov
js
clc
and
adc
and
cmp
and
mov
inc
in
fwait
jne
cs
(bad)
in
into
repz
jns
pop
fisttp
xchg
jecxz
mov
mov
and
jmp
mov
popf
(bad)
xor
int3
sar
mov
out
xor
sbb
test
sub
aaa
jge
inc
movs
daa
pop
das
stos
inc
pop
or
mov
int3
aaa
daa
fsubr
out
adc
inc
les
aas
push
pop
add
shl
fcom
mov
sub
cmp
(bad)
add
jbe
fimul
test
cmp
mov
push
mov
scas
add
push
xchg
pop
jne
shl
jmp
ficom
and
(bad)
fld
pop
imul
mov
sbb
jmp
push
imul
push
adc
push
mov
fild
mov
xor
push
ins
popf
movs
cmps
sub
fadd
ficom
mov
jae
(bad)
push
std
cwde
jbe
retf
ss
call
cmps
push
pop
cmp
xchg
lods
mov
cmps
dec
iret
pop
fild
or
or
sub
xchg
aaa
arpl
dec
sbb
les
inc
fwait
ret
jg
mov
jae
push
ret
adc
and
add
jns
movs
pop
sbb
rcr
cmc
mov
jecxz
mov
sbb
loop
adc
xchg
pop
or
stos
lods
bswap
jg
mov
pop
jo
sahf
hlt
outs
cmp
sbb
aad
pop
cmp
xlat
fbld
inc
cmp
pop
dec
fwait
dec
sub
lods
test
mov
add
arpl
rcr
jl
les
adc
sub
push
cmps
outs
cmp
in
pop
cmovns
jmp
pop
cmc
pop
jp
xchg
ss
dec
cmp
(bad)
(bad)
mov
(bad)
fdiv
cmp
popf
sbb
fidiv
mov
inc
call
(bad)
fdiv
adc
and
sub
cmps
inc
push
jbe
mov
iret
push
pop
(bad)
pop
in
jmp
mov
inc
push
push
cmp
sub
outs
cmp
das
pop
mov
adc
mov
inc
xchg
aad
in
push
pusha
(bad)
sub
xchg
std
mov
sub
std
mov
mov
jl
movs
mov
mov
test
mov
imul
jle
or
pop
outs
dec
imul
or
add
pop
int
xor
sbb
push
outs
push
xor
mov
fcom
dec
push
xchg
ins
aam
mov
mov
pop
inc
lods
push
cli
xchg
ror
cwde
jne
jmp
xor
out
push
repnz
es
pop
pop
test
xchg
push
cmp
les
cmc
cmps
jns
push
repz
rcl
cmp
or
sub
nop
ror
(bad)
icebp
jg
fiadd
pop
xor
add
inc
outs
mov
pop
scas
mov
sbb
aad
sbb
data16
sub
mov
fs
mov
leave
jmp
rcr
and
lea
lock
mov
cmp
sub
dec
pop
jl
cmps
xor
pop
pop
add
adc
pop
pushf
in
pusha
inc
push
sbb
xor
mov
sbb
or
adc
in
xor
mov
sahf
inc
add
push
int
push
add
jmp
mov
push
cmps
fwait
mov
and
rcl
cwde
inc
lea
sub
adc
jmp
aas
scas
or
test
ror
std
neg
mov
es
add
sbb
ins
mov
xchg
cmp
sbb
outs
test
mov
sahf
rol
mov
call
leave
loop
lock
in
sti
cld
jnp
outs
mov
data16
lds
adc
xchg
outs
fmul
cmp
mov
and
cmp
push
stc
bound
push
mov
scas
pop
rcr
xchg
inc
adc
ss
aaa
mov
dec
pop
fwait
or
and
xchg
test
add
(bad)
in
mov
sbb
inc
and
outs
mov
mov
sbb
stos
mov
lods
retf
pop
jae
mov
repnz
mov
(bad)
push
jmp
fsubr
arpl
push
or
push
mov
jns
mov
rol
sti
add
pusha
sub
add
cwde
aas
mov
popf
push
in
into
xchg
sub
push
in
sahf
pop
int3
rol
fisub
and
jae
mov
inc
shl
push
adc
std
mov
call
int
ficomp
lea
add
fdiv
xchg
sub
xor
inc
call
add
xor
mov
mov
(bad)
push
dec
xor
inc
cmps
add
jb
mov
fwait
aaa
test
sbb
(bad)
mulps
ficomp
jecxz
pop
and
inc
cmps
repnz
imul
in
xor
call
mov
xchg
xchg
cmc
xchg
(bad)
loop
push
fisub
jp
and
in
mov
add
ins
sbb
lods
shr
cli
fnstsw
ficom
cmp
sbb
arpl
add
inc
push
mov
jb
xchg
mov
sar
xor
push
pop
mov
shl
mov
push
cli
std
mov
int3
arpl
lods
dec
inc
mov
iret
loope
mov
jl
mov
lods
dec
add
call
add
cmp
push
pop
xchg
mov
(bad)
sbb
cmp
inc
ja
sub
or
jp
xchg
jo
xchg
and
scas
xchg
sub
push
js
fsubr
(bad)
jp
ja
pop
jmp
repz
xchg
cmps
push
mov
mov
lahf
int
fistp
jp
shr
lock
mov
jbe
fs
cmp
es
mov
inc
loope
jb
cmp
imul
cmp
adc
inc
fnstsw
imul
mov
pop
adc
dec
cmp
sbb
in
stos
mov
rcr
adc
pusha
ja
push
les
adc
out
(bad)
scas
sbb
call
xchg
ret
cmp
pop
inc
mov
out
inc
cs
mov
dec
jmp
data16
adc
inc
xchg
lds
pop
loopne
cmp
loopne
ins
dec
cmp
and
and
stos
push
add
mov
push
push
cmp
std
xchg
xor
mov
push
fsub
pushf
jl
loop
or
nop
inc
(bad)
cld
test
test
mov
add
loop
shl
dec
jp
stos
xor
dec
leave
adc
leave
(bad)
mov
fldenv
js
dec
mov
inc
aaa
jb
mov
call
xchg
into
pop
sbb
sub
cmp
and
mov
sub
pop
jnp
push
push
aad
jg
scas
idiv
xchg
dec
rcl
retf
pop
push
inc
xor
stos
in
sbb
call
inc
mov
lea
mov
xlat
repz
mov
call
xor
ror
je
pop
inc
sbb
jne
push
pop
add
fldcw
repnz
mov
inc
inc
pop
inc
enter
and
mov
imul
in
fmul
sti
icebp
mov
(bad)
int3
jb
jns
test
nop
mov
cld
mov
add
rol
mov
inc
in
xchg
mov
add
sbb
mov
adc
test
test
pop
popa
xchg
dec
add
xchg
retf
jmp
ins
push
and
gs
fs
dec
inc
fnstenv
into
sub
nop
xchg
adc
sbb
(bad)
stos
sbb
adc
js
jg
nop
mov
mul
inc
cmc
xchg
pop
push
mov
cmps
adc
sbb
xchg
jno
test
mov
jecxz
je
das
out
add
in
shl
data16
outs
push
jo
rol
push
pop
clc
addr16
jp
ret
add
cmp
and
pop
stos
jo
jb
fimul
call
leave
std
mov
mov
jbe
pop
js
cmp
jmp
jl
(bad)
shl
lds
test
leave
adc
rcl
cli
xchg
mov
leave
push
xor
pop
sti
adc
inc
mov
js
pop
mov
jp
sub
or
jns
ret
pop
outs
jo
adc
outs
js
pop
adc
mov
dec
in
lods
mov
xchg
and
gs
mov
movs
leave
pop
test
out
retf
cdq
jae
cli
push
cmps
xchg
test
pusha
pop
mov
iret
(bad)
lods
hlt
fnsave
mov
add
in
inc
fnstenv
sub
push
je
mov
retf
(bad)
cmp
retf
push
and
sbb
mov
pop
call
or
lock
cld
push
jp
mov
cmp
mov
adc
jmp
aaa
call
mov
add
mov
fdivr
xchg
mov
cmc
pop
fcomp
and
ja
adc
push
adc
xchg
adc
icebp
outs
out
and
jne
(bad)
cmp
mov
sub
imul
pop
mov
xor
hlt
mov
shl
loop
jns
cmp
fidivr
mov
mov
out
popa
lock
mov
inc
cmps
test
in
(bad)
cmp
adc
dec
into
stc
ret
adc
or
xchg
je
pop
xchg
mov
lods
sub
clc
inc
(bad)
enter
push
pop
pop
add
adc
inc
push
add
pop
mov
xor
dec
pop
sahf
scas
xchg
add
cmp
loop
pushf
inc
(bad)
call
inc
cmps
dec
xchg
xchg
or
and
jmp
mov
cld
sbb
out
aad
inc
xchg
xchg
cmp
jno
pop
inc
es
(bad)
and
pop
inc
test
inc
jnp
dec
pop
dec
mov
cld
push
in
pop
xchg
pop
pop
push
add
inc
adc
or
pop
pop
movs
jg
mov
xchg
mov
xor
dec
xchg
out
mov
pushf
jge
inc
sub
scas
mov
xor
xchg
inc
mov
test
xor
sahf
ds
aad
jecxz
push
sbb
enter
pop
dec
cmc
(bad)
and
cmps
pop
push
pop
xchg
jo
push
mov
push
int
int3
in
jo
int3
add
inc
adc
sbb
je
xchg
mov
sbb
stos
mov
sbb
cmp
fsub
inc
push
rcl
mov
mov
mov
push
cmc
mov
mov
lods
push
pop
xchg
mov
outs
pop
mov
xchg
into
and
sub
adc
dec
mov
ret
push
or
inc
mov
or
adc
sub
and
aas
adc
and
outs
jno
pop
pop
scas
sub
movs
mov
and
pop
fstp
xor
rcr
sbb
inc
sahf
pusha
fisubr
mov
or
(bad)
xor
mov
lods
aam
xchg
jp
loopne
mov
daa
enter
cmc
cmp
scas
ss
sub
adc
pop
retf
dec
push
pop
jle
push
pop
jnp
inc
add
mov
xchg
mov
or
push
stc
adc
shl
jno
jecxz
push
inc
or
mov
shl
add
mov
aam
pushf
aaa
retf
lock
clc
pop
push
push
stos
jno
ret
call
push
xchg
in
jb
push
push
scas
add
mov
icebp
leave
lods
in
cdq
jl
jmp
repnz
dec
repnz
rcl
pop
pop
pop
cmp
pop
dec
cdq
(bad)
mov
sbb
cld
sbb
call
fild
jg
addr16
sub
mov
popa
mov
push
lods
shl
dec
sbb
fcom
call
shr
or
inc
mov
cwde
ficom
movs
push
sbb
std
cmp
push
sti
addr16
push
pop
adc
iret
rol
pop
ja
xchg
xor
inc
mov
jno
call
cli
and
jnp
ja
cli
sub
inc
xor
sub
pop
push
pushf
pop
aaa
mov
adc
lahf
aad
add
data16
into
fsub
fsub
sbb
(bad)
mov
in
out
mov
xchg
ss
ffree
mov
mov
push
xchg
jp
xor
sbb
fdivrp
ds
sbb
cmp
inc
and
inc
add
scas
call
std
sar
inc
imul
dec
aaa
push
sub
jmp
pop
jno
or
mov
inc
popf
movs
sahf
or
and
test
xor
js
fwait
jl
cmps
repz
mov
mov
lock
cmps
arpl
mov
mov
and
pop
retf
psrld
test
out
adc
les
inc
or
mov
sub
cmp
and
cwde
cmp
and
imul
add
sbb
mov
aam
push
inc
lea
(bad)
fst
call
jle
cli
mov
mov
fadd
mov
mov
pop
mov
stc
sbb
dec
fmul
pop
jnp
xchg
imul
imul
int3
addr16
mov
mov
sbb
aaa
push
cmp
popf
or
or
adc
mov
in
stc
cdq
or
cmp
jge
stos
jbe
rol
lock
add
jecxz
jae
inc
cmps
stos
test
or
mov
es
(bad)
mov
call
jb
inc
call
fld
cmp
inc
popa
xchg
jnp
jno
xchg
pop
pushf
(bad)
add
add
sbb
psadbw
adc
inc
jno
scas
mov
and
ins
(bad)
mov
out
je
jns
dec
sahf
popa
les
mov
push
mov
mov
(bad)
fsubrp
sbb
xchg
sbb
adc
ficom
fisttp
hlt
rcr
jnp
cmp
jp
sbb
sbb
mov
scas
or
std
add
out
sbb
ss
sbb
adc
ss
out
test
ins
inc
pop
jl
cmps
mov
test
call
leave
mov
std
jo
sbb
sbb
add
loop
test
(bad)
mov
jae
pop
sti
push
adc
jns
or
aaa
pop
xchg
or
outs
mov
add
dec
shr
cs
repz
adc
iret
add
push
scas
or
sbb
mov
push
cmp
in
out
cmp
push
pop
fdiv
movs
fisttp
int3
mov
xchg
in
or
cld
cmc
or
imul
fcomp
cmps
enter
(bad)
sti
(bad)
int3
call
inc
xchg
fs
movhps
repnz
pop
push
add
add
outs
loopne
sub
mov
nop
sbb
enter
add
add
push
das
adc
pop
jne
dec
cmp
(bad)
sub
push
cmp
xlat
xchg
adc
data16
outs
cdq
mov
push
xchg
xchg
mov
test
popf
(bad)
iret
sbb
cdq
test
push
fcmovnu
cmps
mov
test
jns
or
call
inc
inc
add
mov
imul
cli
adc
cmp
adc
jne
aas
xchg
sub
pushf
pop
aas
mov
outs
scas
cwde
mul
and
loopne
mov
fcom
popa
fnsave
mov
loopne
div
div
enter
fdivp
setno
mov
lock
mov
shr
es
fdivr
fiadd
inc
push
and
dec
pop
push
jmp
pushf
mov
pop
sti
jbe
mov
std
inc
push
pop
add
sbb
push
pop
mov
xchg
adc
inc
inc
mov
jae
xchg
movs
add
cmp
xchg
rcl
aad
add
(bad)
loopne
jmp
jne
inc
xchg
mov
ja
sub
mov
fst
test
aad
sbb
ret
mov
push
in
push
inc
push
jno
xor
inc
cmp
pushf
dec
sub
xor
cmp
js
sub
xchg
jne
fcom
xor
outs
pushf
hlt
call
fistp
jns
inc
test
pop
movs
cld
adc
call
ficomp
movs
stos
cmps
repz
mov
mov
mov
shl
lods
mov
push
pop
inc
hlt
iret
clc
je
pop
inc
sub
pop
inc
jbe
inc
inc
jnp
(bad)
leave
xchg
push
and
pop
(bad)
xchg
jecxz
inc
push
inc
cmc
xor
push
adc
and
xor
sbb
xchg
xor
xchg
test
fmul
mov
mov
dec
les
sar
sbb
dec
in
mov
add
jg
sbb
paddsw
cdq
rol
inc
repnz
enter
xlat
iret
mov
icebp
and
inc
test
inc
bound
(bad)
int3
call
or
and
adc
mov
aas
cmc
jl
xchg
jg
xchg
jno
mov
xor
das
jl
shl
std
bound
and
dec
xchg
retf
popf
adc
mov
neg
xchg
push
nop
sbb
popf
pop
push
mov
mov
(bad)
jmp
jecxz
pop
in
ss
sub
jecxz
call
sub
or
lods
aaa
pop
jnp
mov
mov
cmp
add
dec
inc
je
cmps
cmp
add
mov
mov
scas
ss
push
inc
(bad)
out
call
cld
pusha
pop
jb
sub
(bad)
test
xchg
push
xchg
in
and
dec
call
mov
sahf
data16
ret
xchg
(bad)
cmp
pop
retf
aaa
fdiv
fnstsw
add
pop
mov
ins
xor
lods
dec
add
sbb
add
and
daa
xor
sub
or
jo
pop
adc
ins
mov
push
inc
popf
call
inc
stc
pop
add
jle
mov
sub
mov
mov
mov
pop
stos
inc
push
xchg
stos
xchg
es
jmp
stos
lods
dec
aam
not
sbb
lock
ds
fs
mov
inc
dec
xchg
xor
test
cwde
in
seta
inc
adc
jmp
pop
xchg
adc
pop
jo
jge
mov
sbb
adc
outs
cld
out
adc
rcl
inc
push
inc
mov
loop
mov
xchg
dec
xchg
mov
popf
sbb
jne
mov
js
xchg
sahf
and
mov
xchg
hlt
out
jg
mov
ss
imul
fcomp
jne
bound
dec
out
test
xchg
ds
push
cdq
in
jo
fcom
add
out
adc
push
mov
add
cmps
sub
scas
scas
lahf
xor
cmovg
mul
lds
dec
ror
xchg
cmp
in
cmp
cld
cmps
or
mov
push
xchg
ret
xchg
aam
sbb
(bad)
dec
and
jae
aas
push
pop
pusha
lahf
cmp
stos
dec
sub
popf
lea
std
lea
test
fidivr
inc
jb
jecxz
sahf
jg
addr16
ins
rcl
pop
sahf
lea
(bad)
scas
xchg
adc
sbb
dec
lds
popf
push
repz
sub
stos
mov
retf
xchg
mov
bound
and
jl
mov
dec
(bad)
cmp
sub
sti
inc
push
push
pop
dec
test
cmp
cmp
xchg
sahf
ret
jmp
loopne
sub
add
or
cmp
mov
dec
shl
je
mov
jp
scas
xchg
inc
xchg
and
jae
cmps
jb
mov
jmp
or
jmp
sti
faddp
xor
xchg
and
scas
fstp
mov
retf
dec
rcl
push
xchg
arpl
inc
sar
stos
pop
or
xchg
mov
add
or
sub
add
mov
pop
push
mov
dec
xchg
scas
mov
cmp
js
in
cwde
dec
popf
std
addr16
pop
divps
jb
mov
pop
jecxz
mov
aaa
out
mov
mov
data16
cwde
nop
cmp
retf
div
js
mov
sti
es
dec
xchg
clc
sti
inc
rcr
inc
lods
sbb
jno
pop
cmc
mov
fisttp
mov
mov
pop
add
sbb
gs
bound
sbb
inc
adc
movs
push
pop
pop
jns
scas
xchg
and
fiadd
pop
add
inc
add
dec
mov
xchg
push
aaa
call
movs
cld
mov
pop
cwde
cmps
test
and
test
call
fcomp
sbb
test
inc
in
inc
add
dec
inc
test
mov
jmp
dec
pop
dec
and
and
pop
pusha
test
shl
arpl
pop
xor
mov
outs
cmps
jle
pushf
out
sahf
jecxz
inc
popf
popf
add
lock
in
(bad)
fwait
mov
add
fimul
adc
and
test
ret
jge
and
aas
fisub
pop
cmps
jo
or
sbb
out
call
addr16
inc
es
adc
mov
dec
dec
stos
or
cwde
nop
mov
ret
adc
push
out
rcr
call
cmps
mov
out
push
mov
test
xchg
mov
rcl
mov
test
pop
in
push
push
sub
adc
mov
mov
fdivr
mov
loopne
jge
xor
push
push
inc
or
daa
aam
push
cdq
dec
inc
mov
dec
stos
lea
sti
xchg
xor
push
jl
cmps
pop
mov
xchg
in
cld
xchg
adc
pusha
xchg
xchg
add
fcmovnu
mov
fsub
popf
test
pop
lods
sub
or
int3
sbb
add
(bad)
dec
mov
mov
mov
or
aaa
int
adc
and
jmp
(bad)
sbb
inc
fs
imul
test
cmp
fld
shr
cmps
jno
mov
xchg
adc
cdq
jbe
ffree
xchg
add
mov
xor
test
pop
stc
aad
int
gs
mov
aad
ficom
pop
pop
mov
dec
or
sbb
jns
dec
sub
(bad)
int
adc
into
inc
shl
leave
cmp
adc
pop
mov
jno
adc
dec
inc
mov
gs
adc
cld
mov
lods
std
ja
add
push
lds
xchg
inc
stos
aam
adc
mov
and
call
call
mov
(bad)
mov
(bad)
mov
xor
call
sub
sbb
jne
jo
ret
xchg
mov
out
sub
pop
xor
outs
adc
xlat
jo
add
movs
test
pop
adc
mul
add
std
push
dec
push
stos
push
not
call
sub
imul
imul
loope
lods
enter
test
out
(bad)
dec
push
xor
call
add
jno
xor
mov
mov
fild
or
fsubr
je
out
adc
push
jne
test
mov
repnz
push
aam
jb
cmps
mov
fucomp
cwde
cmp
mov
jg
pop
scas
jo
(bad)
repz
mov
pop
rcl
mov
mov
ins
add
mov
mov
add
hlt
hlt
pusha
std
cmp
jg
pop
ins
pop
mov
inc
test
adc
jl
mov
data16
daa
imul
clc
sbb
mov
data16
stos
stos
ins
aas
pop
jnp
mov
xor
call
push
fstp
mov
jecxz
sbb
test
mov
mov
add
ret
loopne
dec
cmc
call
dec
nop
(bad)
fild
inc
sbb
pop
mov
pushf
mov
push
loope
ror
adc
ret
cmp
push
fwait
pop
aad
arpl
inc
mov
(bad)
xchg
shl
retf
sub
pop
test
cmps
push
std
stos
pusha
sbb
xrelease
ret
pop
scas
call
dec
and
imul
inc
in
ror
push
fdivp
test
pusha
dec
test
bound
xor
ja
popf
test
cwde
leave
add
std
sbb
adc
push
fwait
cmp
lahf
dec
sbb
inc
jle
mov
pushf
int
adc
add
test
xchg
out
loop
push
adc
stos
xchg
and
push
test
mov
popf
sbb
xlat
jmp
xor
push
sar
jmp
or
jg
xchg
xor
push
xchg
mov
iret
sbb
sbb
push
les
push
pop
and
jb
rcr
stos
dec
inc
out
cdq
lods
xor
(bad)
mov
inc
retf
cld
outs
add
pop
aad
in
test
mov
in
sub
jecxz
jns
mov
mov
test
ds
hlt
xchg
ret
dec
outs
stos
stos
push
in
and
cmc
cld
clc
fiadd
dec
ds
mov
dec
pop
push
xchg
mov
fdivr
int3
add
adc
cmp
jo
and
test
and
lods
xor
pop
gs
mov
cld
pop
ins
lea
xchg
cld
data16
cmp
xchg
test
adc
cmps
adc
jmp
mov
and
sub
fadd
imul
mov
mov
xchg
sub
inc
cli
rol
or
sbb
adc
mov
xchg
and
add
mov
mov
(bad)
leave
mov
shl
movs
cs
mov
stos
mov
jmp
pop
push
(bad)
call
mov
mov
inc
cwde
xchg
mov
test
retf
mov
scas
or
jecxz
fwait
add
cmp
push
fwait
imul
xchg
rcr
in
add
push
les
sbb
and
pop
adc
push
xchg
xchg
(bad)
push
and
ins
int
mov
(bad)
neg
inc
and
jg
rol
add
loopne
jbe
jle
test
pushf
lds
mov
pop
push
push
adc
retf
and
inc
sub
sahf
push
push
jne
mov
fistp
cdq
retf
jl
into
dec
outs
jbe
mov
push
sub
sub
cmova
push
jns
mov
(bad)
out
sbb
pop
je
push
ret
scas
mov
xlat
mov
nop
stos
push
or
fptan
add
push
xor
sub
(bad)
mov
xchg
mov
push
add
jecxz
int3
push
out
push
jbe
scas
cmp
(bad)
push
push
dec
in
popf
movs
ret
cli
pop
cwde
xchg
and
pop
jne
mov
pop
sahf
add
add
jl
mov
mov
jo
(bad)
cmps
(bad)
movaps
mov
xor
ret
sbb
imul
mov
bound
nop
pop
shufps
ins
cmc
pop
lock
pop
test
jmp
fidivr
out
imul
fsubp
and
inc
push
sbb
sbb
mul
inc
cmps
cdq
xchg
lods
adc
das
xchg
xchg
pop
dec
ja
loop
push
js
cmp
sub
push
scas
sbb
adc
cmp
mul
adc
jge
mov
pusha
sahf
in
test
call
hlt
cmps
or
bound
ret
mov
test
dec
sbb
and
lock
aam
cdq
inc
inc
js
test
jl
div
push
pop
mov
fisttp
call
adc
sbb
pusha
out
add
ret
test
stos
sub
and
std
mov
in
inc
dec
mov
xor
out
or
fild
test
xor
(bad)
les
loop
xor
ins
fdiv
and
ret
iret
lods
pop
fadd
cmp
mov
and
lahf
into
rcl
cmp
fs
mov
mov
jns
inc
sub
ss
jo
jmp
mov
xchg
das
jle
mov
imul
sahf
into
movs
daa
pushf
into
inc
in
jp
mov
xchg
xchg
xlat
test
out
sub
ret
out
bound
stos
inc
pop
add
data16
lock
rol
xchg
movs
jb
jae
pop
add
ret
and
inc
stos
or
pop
cwde
inc
sbb
mov
int
ret
mov
js
dec
add
adc
and
retf
nop
ins
inc
cmp
cdq
xchg
in
(bad)
mov
test
pop
cmp
ins
test
loop
pop
cli
loope
xor
pop
movs
fwait
adc
mov
xchg
sbb
rcl
mov
jecxz
jp
jle
push
and
nop
fucomip
dec
les
jge
cmp
pop
sub
out
mov
mov
clc
out
daa
xchg
cli
add
dec
call
xor
push
pushf
sub
jg
rol
mov
fucomi
mov
in
inc
jle
ss
mov
jl
mov
pusha
mov
mov
xchg
je
mov
push
sbb
loopne
and
mov
or
sbb
adc
jge
cmp
and
lahf
shl
cli
rcl
cwde
cli
dec
bound
out
and
jns
add
inc
push
cmp
push
aaa
and
out
loope
mov
dec
cli
jl
ins
stos
pusha
ret
jnp
mov
sbb
mov
cmc
xor
jg
loope
cli
push
mov
nop
bound
(bad)
jmp
pop
xchg
ficom
gs
add
(bad)
jns
and
imul
sbb
xchg
xchg
mov
sti
fadd
cmps
out
je
arpl
jbe
xchg
sub
test
test
jcxz
xchg
xor
inc
and
inc
ret
pop
call
push
enter
les
mov
inc
jae
ficomp
cli
out
sbb
mov
adc
ds
pop
les
aaa
jno
cmp
cdq
push
push
or
ss
js
call
push
sub
pop
sub
push
adc
setle
dec
cld
jmp
jl
pop
pop
outs
xchg
jnp
scas
(bad)
jg
mov
inc
jmp
sbb
into
clc
repnz
bound
mov
mov
adc
xlat
mov
fwait
xchg
jno
addr16
and
jb
cs
push
cmp
adc
test
cmps
mov
cld
inc
(bad)
int3
adc
pop
(bad)
cmp
and
pop
xchg
jle
jae
cmp
mov
jne
cmp
leave
stc
in
scas
adc
popa
and
cdq
aam
dec
into
test
lock
mov
add
ror
js
pushf
popa
repnz
int
pop
sbb
out
add
gs
xchg
push
pop
outs
movs
lds
dec
cwde
xlat
and
add
and
mov
push
mov
add
add
out
mov
mov
fidivr
jbe
imul
jecxz
xchg
neg
shl
xchg
sub
mov
xchg
mov
movs
stos
(bad)
cmp
mov
sar
pop
push
shl
cmc
pop
jmp
dec
jns
dec
add
mov
stos
dec
popf
jmp
addr16
inc
in
adc
adc
dec
dec
mov
add
push
js
cmps
mov
mov
lds
pop
mov
in
repz
mov
cmps
push
dec
cmc
vunpcklps
jg
mov
push
dec
mov
xor
sti
cmp
in
push
repnz
sbb
cmp
mov
dec
or
adc
scas
pop
(bad)
sub
jno
les
sbb
and
shl
lahf
sbb
mov
ins
cmp
jmp
test
ret
pop
sub
pushf
sub
fwait
push
(bad)
mov
adc
mov
mov
test
xchg
movs
lods
cmp
icebp
(bad)
jp
mov
inc
in
fcomp
add
jmp
mov
inc
pop
jnp
mov
mov
retf
stos
fiadd
jno
adc
add
pop
add
mov
or
push
je
pop
or
mov
inc
pop
ins
fbld
inc
fiadd
bound
aas
xchg
mov
push
mov
xchg
outs
xchg
mov
jp
mov
jmp
pop
inc
scas
mov
pop
scas
push
pop
pop
loope
fldenv
adc
data16
mov
cmp
mov
lahf
pushf
and
sar
(bad)
jno
mov
es
push
arpl
inc
fwait
into
mov
(bad)
out
mov
mov
fild
xchg
cld
jae
aad
pusha
xchg
xchg
in
(bad)
mov
pop
dec
cmps
rol
(bad)
push
jecxz
fsubr
and
fmul
hlt
jmp
fstp
pop
ins
out
test
add
loope
sahf
mov
add
add
mov
mov
test
adc
sub
icebp
cdq
add
jge
mov
pop
mov
mov
xchg
add
jne
dec
xchg
push
inc
mov
fnsave
in
xchg
es
ror
jle
cmp
ins
mov
xor
push
in
test
inc
sahf
cld
and
sar
inc
mov
push
cs
es
mov
inc
mov
xor
fstp
mov
inc
fbstp
xchg
outs
cmc
stos
inc
das
clc
out
xor
mov
addr16
cmps
mov
cmps
stc
out
inc
loop
aaa
retf
ins
fld
lods
jns
xor
sbb
cmp
movs
test
jnp
shl
ret
push
inc
add
inc
or
xor
iret
xor
inc
push
cwde
or
dec
inc
mov
xor
repz
leave
pop
(bad)
jb
sub
mov
movs
data16
jnp
out
mov
aad
mov
inc
pop
mov
std
out
fdivp
dec
popa
mov
cmp
sbb
idiv
sub
push
inc
and
sbb
dec
cmps
jb
setbe
sti
(bad)
fsubr
js
enter
aaa
in
andnps
mov
inc
jb
jnp
fcomp
mov
(bad)
pop
cmp
mov
pop
loopne
inc
jl
imul
push
push
lock
repnz
mov
pushf
(bad)
daa
mov
add
mov
mov
(bad)
arpl
mov
xor
test
dec
mov
bound
jb
pushf
sahf
stos
sub
stc
sbb
and
pop
outs
pop
sub
add
mov
nop
adc
xchg
test
sbb
pop
test
xchg
add
punpcklwd
mov
mov
clc
sar
test
add
int
repnz
sbb
adc
fisttp
or
aaa
jg
cwde
inc
push
seto
test
std
shl
hlt
pop
pop
jne
mov
addr16
daa
sahf
je
dec
adc
ins
lea
inc
scas
into
in
adc
stc
(bad)
xchg
add
out
push
loope
jp
mov
movs
ret
popa
cmps
mov
inc
push
jmp
lahf
adc
ins
mov
fsubrp
adc
mov
lock
loop
add
sti
push
or
rcr
fnstenv
sbb
cs
test
sub
mov
and
push
mov
sub
inc
ins
pop
adc
test
pop
dec
xchg
cmp
jmp
adc
(bad)
stc
mov
mov
pop
retf
jo
sub
mov
out
test
or
fidiv
mov
xchg
and
xchg
inc
pushf
or
scas
or
sbb
int3
mov
jl
cmps
sbb
push
cmp
mov
xchg
leave
or
mov
bnd
push
xor
sbb
push
mov
adc
push
and
dec
outs
not
cmps
cmp
dec
push
cld
idiv
es
jp
inc
jo
mov
push
mov
mov
mov
popa
mov
mov
sbb
lock
cli
or
sahf
inc
shr
repz
es
jb
aaa
pop
sub
push
mov
jnp
call
repnz
sub
add
sbb
xor
nop
aas
jmp
push
mov
pop
fwait
adc
xchg
inc
mov
push
xchg
push
mov
popf
fild
jmp
mov
jmp
out
movs
jle
sbb
xor
std
jmp
mov
sbb
shl
cmp
push
fs
mov
and
mov
das
and
jge
xlat
movs
(bad)
pop
add
sbb
jae
sub
jnp
(bad)
sbb
mov
xor
mov
stc
jg
bound
pop
out
mov
std
mov
es
ins
test
push
pop
mov
std
cmp
div
jmp
lea
repnz
lods
sbb
(bad)
rol
ja
dec
xor
ins
test
and
mov
(bad)
int3
sub
in
ja
int3
jp
aam
je
sub
adc
pop
jns
dec
sbb
sbb
sub
in
call
fs
mov
fadd
call
(bad)
xchg
or
jl
mov
pop
inc
loope
popf
js
stc
aad
repz
mov
push
sub
jmp
jp
and
xor
push
mov
retf
aam
ds
addr16
sbb
jmp
dec
add
cld
xor
jo
popa
mov
dec
imul
inc
mov
inc
cld
enter
jmp
or
movs
push
out
sar
iret
mov
push
test
mov
outs
hlt
mov
(bad)
in
out
gs
mov
(bad)
ret
les
mov
or
sub
add
(bad)
adc
and
ret
lahf
mov
out
cmc
arpl
hlt
adc
add
push
in
adc
ss
mov
(bad)
clc
pushf
add
outs
push
mov
lea
push
fwait
arpl
(bad)
mov
nop
scas
(bad)
rcr
fiadd
inc
mov
loop
retf
lds
xchg
test
dec
sub
repz
cdq
daa
jo
js
daa
jp
mov
add
call
push
lods
imul
in
adc
jmp
lods
dec
pop
mov
pusha
mov
mov
pop
daa
dec
in
leave
mov
popf
xchg
dec
cld
sbb
mov
inc
(bad)
jmp
gs
shl
(bad)
adc
mov
and
hlt
out
lock
jno
xchg
stos
(bad)
retf
dec
or
loop
test
inc
add
fwait
sub
mov
push
jno
rcr
jmp
pop
adc
cmp
adc
push
or
push
sahf
adc
cmp
or
dec
dec
ror
setle
push
mov
jl
imul
aad
je
out
cs
stos
add
mov
add
and
cwde
mov
mov
sti
or
xor
not
imul
mov
ins
ins
mov
cmps
cdq
iret
aas
aas
idiv
jecxz
xchg
out
jae
pusha
adc
inc
xor
cmp
jno
inc
dec
mov
pop
movs
push
jl
mov
ss
dec
loope
mov
lahf
fstp
rol
pushf
jl
and
xchg
div
sub
fmul
test
inc
lahf
mov
(bad)
mov
scas
mov
dec
and
(bad)
and
xor
cmp
fwait
push
pop
dec
out
call
(bad)
bsf
sbb
inc
pop
mov
ins
inc
push
aas
in
aas
fwait
ror
cdq
pop
inc
test
pop
mov
lahf
push
daa
das
push
jmp
fisttp
mov
popf
xchg
enter
sbb
pop
xor
xlat
mov
push
xchg
lods
rcl
cmp
mov
mov
imul
xor
push
stos
or
shr
rcl
push
jl
push
mov
pop
sahf
push
and
xchg
movs
mov
push
in
and
ds
sbb
cmp
sbb
adc
dec
or
dec
inc
mov
jmp
das
jle
stc
cmps
xor
add
pop
ret
push
mov
xor
pop
dec
jmp
stos
mov
dec
mov
mov
movs
and
loop
cwde
std
sar
push
push
enter
sar
stos
jb
xor
xor
dec
pop
push
mov
aas
sar
mul
push
add
sbb
mov
fwait
jne
inc
dec
fld
cmp
add
xchg
popf
frstpm(287
pop
mov
inc
lock
add
jae
mov
inc
mov
xchg
mov
xor
iret
sbb
sub
stos
and
sar
icebp
fdiv
push
push
ror
or
mov
add
popf
add
inc
mov
(bad)
mov
add
into
bound
pusha
adc
xor
or
dec
lea
xchg
push
inc
mov
push
js
out
mov
mov
js
jbe
outs
mov
mov
xchg
pusha
cmc
loopne
sub
stos
xchg
adc
inc
movs
mov
gs
call
lock
(bad)
outs
push
mov
out
(bad)
push
int
out
dec
icebp
or
cmp
push
ds
cmps
cmps
mov
push
fstp
in
in
or
sar
jne
in
sbb
add
inc
sbb
cdq
aam
xor
push
aam
xor
pop
and
cmp
mov
push
push
icebp
adc
arpl
mov
mov
xor
repnz
test
jnp
stos
push
xchg
jle
pop
push
dec
(bad)
(bad)
jb
inc
jge
jnp
xor
dec
pop
jns
mov
dec
out
and
adc
ds
ror
inc
lea
call
leave
mov
sbb
repnz
inc
jbe
mov
push
fwait
out
jne
in
push
stc
(bad)
jmp
repnz
mov
sbb
fidivr
in
xchg
fs
jmp
add
call
gs
jnp
sub
and
ret
xchg
cmp
aam
shl
adc
out
jne
jbe
(bad)
sbb
adc
push
fistp
dec
dec
mov
or
stc
(bad)
mov
rcr
jns
jae
mov
adc
add
in
es
fs
jns
mov
stc
mov
fnstsw
jecxz
je
imul
push
add
jp
fisttp
pop
das
xchg
ss
add
inc
fldpi
add
repnz
xor
inc
push
adc
sbb
js
fstp
adc
stos
aad
or
cmp
shl
js
dec
mov
imul
mov
mov
inc
dec
sti
fiadd
xchg
in
retf
mov
dec
sbb
ror
fnstcw
and
pop
je
jno
push
scas
test
out
sub
or
dec
adc
cmp
adc
dec
inc
mov
scas
add
outs
in
(bad)
mov
jmp
inc
(bad)
ficom
repnz
push
cmc
mov
imul
stos
loope
loop
mov
mov
pop
(bad)
mov
fdivr
sbb
fcom
cmp
xor
rol
data16
pop
cmp
(bad)
imul
ins
popa
pop
xor
sub
pop
sub
sbb
lock
jbe
adc
mov
pop
mov
and
aas
mov
popa
lods
jnp
mov
dec
out
loope
xchg
call
iret
outs
mov
pusha
add
cli
mov
cwde
cmp
push
daa
daa
sbb
(bad)
shl
xor
daa
dec
test
inc
push
test
cmp
xchg
int3
cwde
or
add
adc
pop
xor
das
add
dec
push
fisubr
nop
add
mov
inc
pushf
call
arpl
inc
jge
mov
inc
jecxz
fwait
jae
loope
or
lock
push
rol
popf
stos
call
test
pushf
sbb
(bad)
ror
loop
outs
aam
cmps
pop
pop
adc
mov
jns
add
jns
add
inc
fwait
jne
ins
mov
lea
out
int3
push
mov
or
sbb
push
and
mov
ins
dec
mov
jge
aam
bound
xor
scas
mov
mov
push
inc
inc
jg
pusha
fst
jmp
and
out
adc
aam
mov
jmp
and
xchg
mov
test
cli
in
inc
shl
inc
cmp
and
dec
mov
pop
pop
mov
sbb
cmps
aad
dec
jg
enter
jne
xchg
pop
nop
jg
sbb
mov
pop
mov
mov
stc
cld
sbb
sti
mov
inc
xchg
mov
mov
hlt
test
mov
test
pop
and
mov
enter
test
pop
cld
or
cmp
fwait
add
push
inc
sub
dec
cdq
mov
mov
sbb
pop
iret
out
cmp
shl
and
aaa
cmp
gs
test
aas
stos
and
mov
cs
and
(bad)
mov
jmp
push
pop
test
mov
sub
add
(bad)
cmc
mov
jmp
sahf
pop
push
loopne
mov
int3
out
ins
call
(bad)
xor
dec
hlt
(bad)
in
cmp
and
outs
je
mov
cmp
stc
leave
or
xor
sub
es
add
xor
push
push
mov
sbb
cmps
add
and
mov
sub
jg
mov
mov
pop
jmp
push
(bad)
out
adc
mov
(bad)
fadd
popf
jns
dec
mov
sub
fyl2x
fdivr
add
or
imul
js
paddsb
rcr
repz
rol
aad
lsl
out
sbb
pusha
fisubr
into
and
(bad)
cdq
sub
pop
push
std
scas
cmps
sbb
rol
fsub
dec
mov
xchg
shl
mov
dec
mov
xchg
stos
mov
jns
mov
cli
icebp
fiadd
cli
sub
loop
test
fnstenv
dec
js
lods
unpckhps
inc
and
mov
sbb
pop
sahf
mov
xchg
iret
inc
adc
and
add
ins
mov
add
(bad)
mov
leave
ficom
jg
pop
mov
dec
pushf
mov
dec
leave
out
sub
into
inc
mov
cmps
dec
push
mov
enter
xchg
in
mov
push
xor
dec
fisttp
ins
adc
sahf
jo
dec
lods
(bad)
shr
fucomip
add
loopne
ja
and
sbb
adc
sbb
ja
smsw
test
sub
sub
in
pop
aam
pop
sub
fldenv
icebp
xchg
dec
popf
xchg
jle
mul
cld
jno
pop
mov
mov
setl
shl
lods
jne
jo
push
sub
jmp
daa
popa
or
xor
mov
dec
sbb
pop
call
jle
mov
and
ds
adc
xor
dec
outs
test
xchg
ja
xchg
cmps
xor
adc
mov
dec
xchg
out
arpl
jge
jp
pop
retf
mov
jb
std
mov
call
cld
cmps
das
xchg
jp
lods
mov
outs
mov
(bad)
pushf
test
mov
cmp
imul
sbb
js
inc
push
or
or
cmp
sahf
test
dec
pop
ficomp
stc
ret
push
ror
and
mov
jg
mov
push
lahf
mov
inc
aam
xchg
xlat
inc
(bad)
jle
pop
scas
dec
retf
nop
hlt
cmp
icebp
xchg
jae
mov
sub
imul
mov
retf
xchg
test
(bad)
adc
dec
mov
fdiv
sbb
sbb
movs
sub
test
mov
fst
jge
rcr
adc
push
pop
jo
pop
in
pop
stos
sub
push
pop
shr
mov
mov
jmp
in
mov
pop
fldenv
cmp
cmp
mov
mov
mov
jns
movs
or
jmp
stos
scas
jns
sub
sbb
adc
out
sbb
xor
dec
add
mov
test
pop
sti
frstor
test
add
fdiv
stos
and
fcom
(bad)
and
adc
cmp
mov
pop
ficomp
inc
mov
call
loopne
fs
fmul
xchg
mov
sub
add
or
fucom
xchg
cld
pusha
popa
cmc
test
sub
(bad)
add
sub
mov
pop
in
fld
loope
push
mov
popa
inc
jae
fadd
xchg
pop
lods
add
pop
(bad)
add
scas
test
adc
cdq
jmp
fs
pop
mov
pop
xchg
lock
push
int
adc
pop
stos
mov
aam
mov
xchg
aas
cmp
push
pop
cdq
mov
sbb
sub
hlt
iret
jae
daa
add
cmp
pusha
sbb
mov
dec
cmp
dec
pushf
test
push
or
push
add
aas
sahf
adc
imul
add
xchg
fwait
arpl
or
sti
cmp
dec
jnp
mov
iret
jmp
sar
push
xchg
ficom
xchg
inc
mov
test
xor
out
dec
mov
jnp
pop
std
push
ds
cmc
in
call
jp
fst
js
mov
ss
mov
pop
add
xlat
sub
inc
in
adc
adc
sub
jbe
ins
lea
mov
loope
inc
pop
ins
fsubp
test
lea
xchg
inc
xchg
pop
(bad)
sahf
call
push
lds
stos
sub
inc
xchg
mov
sbb
push
xchg
out
mov
pop
jg
movs
push
js
push
add
test
sub
add
and
nop
mov
(bad)
push
xlat
push
in
(bad)
and
inc
sbb
xor
inc
pop
xor
outs
fadd
inc
mov
sahf
jmp
inc
sti
dec
inc
lods
popa
aad
aam
mov
xchg
imul
jb
rcl
mov
out
pop
test
outs
xchg
fisttp
scas
scas
sub
jp
cmp
and
icebp
pop
sub
xor
cmp
jae
push
xchg
cmps
lods
popf
sub
repnz
rcl
add
pop
add
add
aas
cmps
jle
ror
sub
test
std
hlt
mov
cmp
mov
jb
retf
xchg
clc
or
mov
stos
push
mov
mov
cmps
mov
popa
and
arpl
jne
inc
fisttp
(bad)
iret
stc
push
cmp
pop
cmp
ret
dec
or
popa
ret
mov
sbb
add
add
or
sub
jp
fsubr
mov
jl
xchg
adc
xor
jmp
dec
jnp
mov
jb
in
mov
into
mov
xchg
push
(bad)
jns
cmps
fdivr
mov
mov
mov
(bad)
mov
das
or
cld
fadd
sub
ins
inc
push
mov
mov
into
add
iret
inc
sbb
add
cmp
adc
jns
cdq
or
mov
push
mov
stc
adc
repnz
and
dec
and
push
scas
out
mov
cwde
dec
out
jge
jmp
xchg
cwde
mov
scas
movs
sahf
sbb
div
xchg
mov
xor
cld
dec
inc
sbb
test
lds
fs
cmp
fisttp
add
sti
add
aaa
ss
or
ds
inc
push
scas
push
(bad)
add
mov
add
data16
mov
ficom
aam
out
fwait
rcr
sbb
clc
xchg
loope
call
rol
outs
add
out
ja
mov
push
stc
xor
dec
xchg
fcom
inc
repz
xor
jb
inc
sub
cmp
loop
xchg
inc
arpl
and
or
push
pop
gs
push
stos
ins
stc
inc
dec
mov
pop
in
cdq
cwde
adc
push
and
out
mov
mov
push
not
mov
mov
xchg
cmps
inc
sub
jmp
shl
push
pusha
xchg
test
dec
mov
push
(bad)
dec
cmps
ss
inc
out
adc
bound
pop
outs
out
xchg
mov
dec
into
jmp
pop
in
ins
push
sahf
je
jo
xchg
or
cwde
aad
outs
adc
outs
jecxz
cwde
sbb
bound
pop
fcom
adc
loope
cmp
jne
mov
dec
bound
aad
sub
fsubr
sub
imul
call
or
adc
ins
or
mov
jns
inc
aas
loopne
push
push
pop
arpl
or
push
fisttp
adc
out
xchg
test
repz
pop
mov
add
cmps
out
sti
sar
das
int
mov
shr
fsubr
adc
mov
mov
xchg
outs
test
push
fbstp
sbb
imul
jo
jns
xchg
xchg
or
test
fsin
sbb
arpl
ret
adc
jmp
mov
fs
scas
test
and
ds
cmps
sbb
jns
sub
ret
nop
in
adc
cli
xchg
leave
inc
cmp
stos
dec
nop
sbb
add
lock
inc
in
adc
sub
xchg
shl
dec
cmp
jne
mov
mov
ret
sbb
lock
adc
xor
cmp
inc
ja
mov
bound
or
aad
inc
mov
out
fnstsw
cmc
inc
add
inc
fst
xchg
ins
jmp
sar
iret
or
and
out
pushf
jb
and
cmp
dec
loope
aad
sar
add
cmp
xor
push
lods
stos
(bad)
(bad)
dec
jmp
push
dec
add
clc
xor
inc
sub
xchg
and
stos
outs
es
push
lahf
mov
or
adc
(bad)
cli
mov
xchg
jge
pop
push
bound
in
mov
mov
icebp
shl
add
movs
and
test
enter
cmp
out
inc
sbb
aas
jne
mov
mov
cmps
sbb
cld
aas
sub
push
fs
les
xor
cmp
jg
mov
test
cmps
cmp
sahf
adc
pop
fwait
jno
fdivr
addr16
aam
popa
std
mov
mov
dec
call
lea
adc
fdivrp
xchg
lods
hlt
gs
cwde
jns
dec
aam
or
cs
push
aas
les
jne
mov
cwde
pushf
sbb
stc
inc
rcl
mov
and
and
push
das
cmp
pop
cwde
xor
js
mov
push
stos
fcom
cmc
xchg
out
add
jl
dec
popf
pusha
fcomp
mov
not
mov
test
imul
mov
sbb
pop
pop
nop
mov
xor
push
test
js
inc
push
add
pop
stc
cmp
or
sub
sub
retf
cmp
popa
data16
xor
cmovne
push
aas
or
dec
loop
inc
pop
sbb
sar
xchg
pop
out
pop
add
fcomp
test
pop
mov
int3
fisubr
xchg
mov
and
scas
jle
adc
pop
pushf
or
mov
push
lods
mov
int
std
mov
sti
jnp
inc
sub
sbb
inc
jae
jecxz
mov
xlat
pop
outs
mov
jle
rol
div
movs
inc
mov
addr16
rcr
fcom
mov
xchg
xchg
pop
adc
aam
sbb
mov
mov
mov
mov
(bad)
ficom
push
scas
das
daa
cmp
pusha
and
les
imul
sar
in
neg
(bad)
(bad)
dec
bound
sub
inc
sbb
sbb
and
add
pop
jne
imul
pop
push
xchg
xchg
movs
and
and
es
repnz
fcomp
fstp
mov
xchg
mov
jmp
mov
mov
call
dec
inc
mov
pop
int3
jg
adc
or
dec
jle
jg
cmp
add
lds
ret
hlt
das
test
dec
push
jge
mov
das
popa
adc
in
pop
mov
pop
ins
xchg
(bad)
sbb
sbb
leave
mov
pushf
pop
jo
fisubr
(bad)
lock
mov
clc
dec
pop
fcmovnb
cmp
inc
movs
lods
xchg
aaa
stos
pop
fs
mov
inc
xchg
push
xchg
xchg
xor
sub
sbb
jmp
js
dec
test
pop
movs
outs
and
in
stos
cwde
mov
add
add
push
int
sub
sub
mov
jge
or
ss
mov
ins
inc
adc
not
fnstenv
fnstcw
sar
cmps
dec
in
mov
push
retf
fdiv
mov
dec
sahf
xchg
mov
xlat
fimul
icebp
xchg
xchg
pop
hlt
push
or
jmp
xor
mov
jns
test
pop
cwde
mov
stc
push
retf
mov
pop
shl
pop
or
xor
push
inc
mov
xchg
sub
stos
popf
inc
mov
or
jl
push
mov
ins
mov
mov
mov
xchg
mov
ja
loopne
out
add
mov
inc
jns
mov
(bad)
sbb
or
(bad)
imul
fs
mov
dec
outs
mov
dec
mov
add
dec
(bad)
sbb
sbb
ss
pop
mov
popf
push
push
stos
adc
mov
mov
add
xchg
and
dec
and
push
cmps
les
bswap
stc
mov
cmp
lods
les
stc
(bad)
hlt
arpl
mov
jae
ins
int3
sbb
xor
lds
cmp
imul
test
mov
ss
pop
xchg
in
add
inc
clc
adc
push
xchg
add
pop
dec
cmp
xchg
mov
(bad)
icebp
mov
aam
jns
mov
popf
(bad)
pushf
retf
(bad)
fwait
add
pop
lock
stos
je
lods
cdq
xchg
add
jecxz
loop
cmp
fisubr
jae
or
jp
aaa
cmp
pop
pop
pusha
xchg
add
ds
bound
std
adc
daa
mov
pop
pusha
mov
pop
mov
push
dec
popf
fsub
xlat
jp
daa
scas
dec
jmp
inc
(bad)
in
or
rol
mov
push
nop
(bad)
mov
ret
lods
fiadd
out
(bad)
jnp
dec
in
pop
pop
fsubr
jmp
cmp
pop
mov
jp
(bad)
mov
in
jg
mov
jno
jmp
aaa
lods
and
ins
outs
mov
inc
xchg
xchg
mov
xor
dec
pushf
shr
add
jns
pop
mov
dec
xor
sbb
mov
hlt
xlat
mov
icebp
dec
mov
mov
popf
push
adc
retf
fadd
icebp
mov
call
ror
push
fcomp
ja
jns
jne
jne
arpl
mov
pop
fdiv
sbb
cmc
inc
jge
sbb
or
xchg
pop
mov
jl
scas
outs
ds
mov
cmps
cmp
sub
inc
mov
inc
bnd
dec
lahf
dec
std
mov
pusha
xchg
mov
ins
(bad)
loopne
adc
ret
rol
clc
mov
inc
call
scas
(bad)
fmul
cwde
(bad)
call
retf
out
imul
mov
sub
or
pop
fild
or
(bad)
add
inc
cs
or
fwait
sub
inc
or
or
cmps
pop
jns
mov
ret
xor
mov
inc
addr16
push
lods
fnstcw
mov
stos
inc
sub
cld
mov
out
pop
lea
popa
jp
mov
(bad)
repnz
bound
mov
dec
add
(bad)
aad
pop
out
and
adc
add
mov
repnz
jmp
jge
fiadd
sub
sbb
aad
push
call
sub
out
mov
std
sbb
push
scas
push
xor
leave
test
(bad)
fimul
dec
inc
sbb
cmp
shr
xchg
xchg
push
int3
in
push
clc
push
inc
jl
cmps
adc
jns
add
pop
out
shl
sbb
inc
inc
clc
pop
sbb
pop
lods
and
sbb
jb
cdq
cmps
xor
cs
int3
add
ins
fnstenv
mov
das
repnz
xchg
arpl
sahf
cmp
clc
ins
pop
jmp
or
in
repz
aaa
jb
ins
fsub
jae
arpl
add
pop
imul
lea
std
add
or
aaa
ss
jae
xchg
push
enter
push
mov
ins
mov
mov
retf
cmp
jl
movs
sub
neg
add
call
mov
mov
xor
loope
cld
xchg
jecxz
imul
push
loop
jle
pop
(bad)
cmp
loopne
push
jno
mov
(bad)
or
pop
daa
fild
adc
arpl
cmp
sbb
inc
test
sahf
aaa
add
xor
out
test
mov
imul
pop
jb
jbe
xchg
(bad)
dec
movs
not
aaa
xlat
jmp
xchg
(bad)
sbb
jg
mov
xchg
cmp
out
fnstsw
mov
cmp
mov
(bad)
cmp
mov
inc
pop
pop
jmp
cwde
mov
iret
(bad)
repz
mov
sbb
xor
xor
pop
cmc
pop
push
mov
popa
mov
lahf
xor
and
and
pcmpgtb
pop
mov
add
fcom
mov
jnp
cdq
mov
fimul
xchg
cdq
test
xor
jecxz
call
call
cmp
ret
cmp
xor
lea
xchg
xchg
mov
jnp
jmp
or
jae
cmp
pop
push
das
call
sbb
or
or
fadd
jmp
(bad)
loope
loopne
xchg
mov
push
jmp
mov
outs
mov
cmc
xor
enter
loope
push
scas
xchg
push
(bad)
jae
or
push
(bad)
adc
outs
push
or
sbb
sbb
test
data16
sbb
pop
aaa
es
inc
jbe
or
mov
out
mov
aas
or
out
aas
mov
imul
pusha
cli
mov
pop
lahf
repnz
xchg
mov
add
icebp
mov
test
pop
test
stc
imul
jecxz
gs
gs
addr16
daa
pop
sub
vmaxps
cdq
aaa
jne
stos
jb
pop
lods
lahf
stos
mov
add
add
xlat
je
jbe
out
adc
jbe
mov
adc
arpl
mov
pop
fwait
(bad)
cwde
sub
out
in
sub
fmul
pop
mov
jg
loop
inc
jmp
pop
and
rep
jp
push
cmp
pushf
ss
test
cwde
lahf
jns
jg
cmp
aaa
out
lock
push
fidivr
or
imul
dec
push
pop
xchg
mov
mov
jns
pop
add
aas
jmp
lahf
push
inc
xchg
or
in
(bad)
das
sbb
inc
in
loopne
mov
(bad)
mov
cmp
loop
dec
(bad)
mov
jmp
(bad)
or
mov
or
(bad)
jecxz
jnp
nop
mov
imul
hlt
add
sti
jle
or
xor
je
dec
cmp
scas
mov
out
(bad)
add
dec
inc
mov
gs
sahf
daa
std
add
outs
inc
rcl
inc
in
xor
pushf
inc
scas
cmc
pop
rcr
push
mov
bound
jmp
fwait
pop
hlt
xchg
movs
int
mov
xchg
cmp
aad
cmc
fiadd
mov
push
fidiv
sub
dec
cli
stc
fdivr
pop
js
dec
test
inc
jns
push
cmp
popf
mov
in
pop
cld
enter
jg
jb
lds
dec
sub
mov
int
test
inc
lahf
sub
(bad)
loope
es
retf
adc
pop
fmul
mov
inc
test
out
(bad)
xchg
js
int
mov
jp
stos
movs
mov
call
xor
pop
stc
dec
or
mov
push
push
inc
mov
cmp
test
iret
pop
(bad)
pop
mov
sub
xor
push
mov
sbb
add
xchg
sti
mov
pushf
rcl
pop
cmps
dec
fidiv
test
fsub
dec
pop
mul
mov
pop
add
mov
movups
fisubr
cmc
pushf
aaa
loopne
retf
dec
sub
in
and
outs
mov
pop
arpl
cmp
push
call
and
push
ficomp
mov
jno
loope
outs
dec
aaa
push
scas
sbb
fstp
xchg
push
jb
lods
stos
xor
out
mov
sti
pusha
jb
mov
test
mov
mov
push
lock
and
popf
ret
dec
cmps
sbb
fwait
mov
rol
xchg
xor
cmp
sbb
ret
or
or
outs
fwait
pop
sub
sahf
pushf
stos
sbb
(bad)
or
(bad)
pop
push
inc
rol
sub
nop
or
adc
inc
mov
mov
fsubr
mov
fsubr
pop
mov
(bad)
dec
cmps
jo
mov
push
(bad)
sti
hlt
push
shl
pop
mov
jge
xchg
mov
xor
loop
rol
jl
lahf
call
dec
adc
pop
cwde
dec
push
and
cwde
push
push
jbe
bound
dec
scas
xchg
mov
in
iret
pop
(bad)
aam
push
pop
inc
neg
imul
shl
adc
jb
mov
mov
pop
daa
push
shl
ja
sbb
ja
push
cli
test
jb
mov
icebp
std
mov
cli
test
and
inc
jb
les
mov
stos
test
cmp
and
fild
pop
push
cmp
imul
xor
fwait
mov
stc
in
cs
jmp
xor
and
popa
and
ds
cmp
pop
sbb
pop
sbb
call
sbb
dec
cli
mov
aas
mov
pop
sub
popa
and
push
std
mov
sub
sti
mov
out
inc
mov
pushf
(bad)
adc
sahf
push
cmp
mov
nop
pushf
dec
icebp
sub
shl
addr16
push
add
sahf
es
mov
cmps
enter
in
inc
in
jo
call
les
je
cmp
adc
adc
add
test
jp
pop
mov
ds
mov
xor
int3
bound
mov
mov
cmp
test
mov
repz
sub
rol
ja
and
or
jae
dec
and
cmps
iret
mov
or
fist
jae
sbb
imul
imul
push
jmp
or
gs
lahf
sbb
mov
inc
popa
pop
xchg
shl
xchg
push
test
call
sbb
jns
mov
enter
retf
mov
sbb
cmp
mov
gs
push
outs
call
and
sub
or
cmp
imul
jns
push
inc
mov
mov
clc
adc
pop
mov
inc
fnstcw
xchg
ins
test
jecxz
shl
add
ret
popa
jno
mov
or
stos
pusha
xchg
jbe
dec
cmp
enter
xchg
add
inc
lods
outs
inc
mov
sar
out
cmc
ds
jne
pop
xor
adc
cdq
mov
lock
pop
fnstenv
xchg
xchg
scas
mov
out
mov
icebp
dec
arpl
shl
adc
cwde
jnp
(bad)
out
xor
sbb
neg
aad
mov
mov
mov
xlat
inc
add
shl
sub
(bad)
int3
inc
push
push
cmp
dec
div
add
and
inc
fwait
in
or
or
sub
push
adc
scas
or
rcr
(bad)
or
xchg
call
fwait
pop
mov
pop
leave
dec
pop
jl
js
xchg
fimul
lock
push
div
mov
mov
test
cmp
(bad)
cs
xor
sbb
out
or
pop
icebp
inc
arpl
popa
cmp
pop
mov
test
cmp
sar
lea
test
cld
sub
add
mov
mov
sub
movs
aas
adc
out
adc
stc
gs
inc
fld
mov
popf
push
enter
shl
mov
cli
fst
cs
jne
popf
mov
adc
fsubr
mov
push
xchg
das
lds
cmp
shl
inc
int
pop
pop
arpl
dec
cmp
mov
lods
ins
cwde
loope
fild
rcr
fs
aaa
scas
or
mov
mov
push
xchg
cdq
popf
or
push
pop
sti
into
mov
jmp
nop
(bad)
and
in
mov
retf
push
fcmovbe
nop
ja
sbb
lea
xchg
xchg
mov
retf
dec
pop
dec
xlat
(bad)
mov
out
add
inc
mov
dec
and
lods
mov
scas
sbb
mov
les
mov
and
inc
cdq
inc
nop
or
sbb
xor
(bad)
fldenv
pop
push
ins
scas
push
(bad)
(bad)
inc
xchg
xlat
test
inc
test
lahf
lods
shr
mov
icebp
pop
xor
hlt
mov
cli
jnp
in
mov
dec
enter
std
xchg
mov
and
push
adc
aam
ss
dec
into
aam
xchg
fiadd
push
inc
adc
pop
pcmpgtb
sub
dec
push
lods
pop
mov
mov
add
dec
aam
cmp
jno
cmp
jns
jmp
jge
mov
aaa
retf
fisubr
mov
sbb
mov
cmp
lods
sti
jl
stos
cwde
jo
push
cld
fyl2x
(bad)
fisub
or
xor
scas
addr16
outs
cwde
cdq
xchg
stos
dec
aas
stos
inc
ret
stos
repz
xor
daa
push
stos
cmp
jno
inc
inc
mov
jo
lods
test
in
or
test
adc
leave
jnp
retf
(bad)
lahf
jno
cmc
movs
pushf
jbe
dec
mov
jbe
fwait
test
mov
mov
push
xchg
js
dec
cmp
leave
call
push
cmp
jno
pusha
pop
push
es
jno
out
bound
add
pop
push
sbb
lods
push
sbb
mov
sar
retf
jb
ja
xchg
(bad)
jns
(bad)
mov
out
add
sti
shl
(bad)
(bad)
retf
xor
cmp
shr
hlt
call
inc
hlt
dec
cmps
or
ss
int
fldcw
push
cmp
sub
jg
rol
dec
cmp
outs
(bad)
mov
sbb
pop
xor
mov
adc
adc
and
sar
and
mov
hlt
dec
pop
jb
push
loop
in
mov
sbb
rol
stos
and
inc
stos
lea
loope
popf
xor
fdiv
inc
data16
push
xchg
dec
in
inc
pop
or
push
cmp
xchg
sub
test
and
mov
in
je
cli
push
cmps
repnz
and
push
je
mov
adc
jns
aam
jp
test
inc
out
out
retf
fstp
daa
xor
mov
xchg
bound
(bad)
in
arpl
sahf
inc
outs
mov
fidiv
sahf
ret
outs
repz
pop
push
or
inc
daa
test
gs
cmp
jle
test
jle
loop
rcr
dec
or
mov
add
add
push
mov
test
and
lods
mov
xchg
push
mov
xchg
dec
sti
shl
(bad)
aad
jnp
sbb
dec
fist
call
fidiv
mov
lods
push
sbb
ret
pop
ficomp
jp
stos
add
jp
ins
pop
or
mov
retf
inc
(bad)
fsubr
push
or
adc
jno
mov
(bad)
(bad)
ret
xchg
or
jmp
mov
loop
loop
mov
add
arpl
xchg
sub
mov
adc
sahf
pop
add
shr
rcr
sub
ficomp
ror
call
cmps
pusha
jecxz
test
and
(bad)
retf
adc
inc
shr
inc
and
ror
dec
or
mov
aas
sti
adc
or
fsubr
mov
jp
aam
xor
push
xchg
in
pop
xchg
and
pushf
mov
sbb
loopne
and
retf
xchg
jo
pusha
mov
ffreep
aaa
fldcw
out
mov
xchg
out
dec
(bad)
mov
dec
and
shl
fisub
popa
add
xor
fwait
inc
cs
ret
adc
jle
fldcw
test
push
jb
inc
les
pop
jno
mov
pushf
add
jne
xchg
or
add
gs
icebp
mov
ret
push
scas
dec
xchg
mov
push
aam
sub
xchg
movs
pushf
mov
fwait
gs
mov
test
fdiv
gs
adc
dec
loope
stos
gs
pop
push
cmp
inc
stos
jns
push
icebp
and
rcl
add
mov
jg
dec
pop
jl
es
xor
jb
fs
fisttp
pop
movs
or
fwait
xchg
cmp
dec
ret
inc
(bad)
fsub
pop
add
imul
fdivr
mov
dec
jecxz
push
pop
jmp
sbb
(bad)
mov
ror
(bad)
cmp
sbb
icebp
or
sbb
les
js
mov
jnp
jo
mov
shr
or
push
fsubr
add
pop
mov
xor
aam
dec
stos
pop
adc
mov
xor
or
lods
sahf
and
adc
ror
mov
cmp
inc
and
call
cdq
pop
sbb
xchg
div
mov
sbb
or
sbb
jne
js
dec
stos
lahf
mov
arpl
in
das
xchg
xchg
dec
push
pop
push
fcomp
and
es
pop
scas
jo
inc
push
scas
pop
inc
pushf
xor
scas
xchg
imul
jl
in
cs
add
mov
push
mov
mov
push
call
imul
xchg
cs
mov
mov
sub
jmp
rcl
add
cmp
dec
popf
ror
sbb
push
test
xor
sub
lods
or
pop
out
inc
fwait
jne
(bad)
dec
add
adc
scas
loop
mov
push
mul
mov
mov
xlat
ds
mov
inc
push
fxtract
std
or
movs
cli
dec
fimul
in
cwde
scas
fs
not
mov
xor
push
fimul
inc
sub
imul
stos
test
dec
ret
ret
lea
inc
fdivr
pop
push
je
sahf
pop
enter
push
mov
xor
cmp
push
jle
mov
push
mov
sbb
arpl
push
mov
jmp
loop
xchg
mov
rcr
lods
and
push
nop
cld
cmps
jecxz
mov
test
xor
lock
(bad)
popa
outs
sahf
cmps
pop
retf
jo
sbb
out
inc
ret
sbb
dec
lods
xor
jns
push
dec
mov
xchg
test
xor
adc
add
cmp
xchg
es
xchg
test
sbb
jmp
push
cmc
sbb
(bad)
cdq
enter
xchg
pop
hlt
cwde
jp
iret
std
repnz
arpl
mov
push
lahf
(bad)
lock
add
cmp
xchg
inc
clc
ss
push
imul
sti
pop
ret
sbb
sbb
add
adc
call
pop
push
and
inc
stos
sub
push
dec
shr
cmps
dec
dec
nop
xchg
mov
(bad)
mov
shr
js
push
test
call
imul
jmp
add
pop
mov
(bad)
jmp
xchg
add
cli
mov
mov
sbb
sti
push
ret
and
cmp
outs
pop
js
ins
push
or
and
(bad)
loopne
push
adc
sub
iret
sub
pop
or
jnp
stos
xchg
sub
cs
mul
outs
push
pop
rcr
rcr
aam
inc
(bad)
loope
and
fcom
fwait
mov
push
stos
inc
outs
loopne
mov
cmp
retf
out
dec
or
add
fsqrt
fdivr
sbb
xor
mov
fstp
push
retf
shl
adc
das
popa
pop
sbb
arpl
push
pop
imul
retf
sbb
cwde
das
clc
test
imul
mov
mul
mov
xor
jg
nop
mov
and
jmp
cmp
jmp
leave
in
and
cmp
pop
je
xchg
jne
jb
sbb
icebp
ret
icebp
push
imul
push
xor
and
call
nop
mov
jecxz
jmp
out
add
mov
cmp
repnz
xchg
adc
mov
popa
sub
push
jle
fisttp
push
int
sub
(bad)
int3
pop
retf
sub
cs
mov
jae
cmps
lahf
sbb
call
loope
and
aam
jg
add
or
jo
and
sbb
mov
pop
lahf
xchg
lods
sub
daa
jge
out
seto
pop
in
jo
test
mov
pop
mov
test
sti
lock
in
mul
stos
fisubr
cmps
ins
outs
mov
test
adc
shl
dec
sbb
mov
rcl
push
pop
js
outs
sbb
push
test
and
add
push
pop
inc
pop
retf
push
fwait
je
imul
jnp
sbb
cmc
inc
mov
inc
pop
mov
outs
sbb
dec
enter
icebp
ret
xchg
jne
xchg
mov
jno
lahf
xchg
push
add
or
dec
fdiv
sub
retf
and
and
sahf
sub
lods
push
sbb
mov
mov
std
fnstcw
ret
inc
jo
push
fld
cmp
xor
push
ror
adc
mov
imul
js
in
mov
xchg
dec
xchg
neg
sar
stos
retf
mov
lds
test
in
pop
lock
jmp
rcr
addr16
jmp
(bad)
ret
aad
push
push
fcom
or
js
mov
pusha
es
xor
movs
xchg
mov
(bad)
lock
inc
jecxz
xor
movzx
jl
mov
js
mov
(bad)
inc
mov
inc
aad
jno
mov
jle
rcr
sub
mov
in
mov
in
lahf
push
and
fld
pop
xchg
mov
dec
cmp
cli
call
data16
mov
xor
mov
cmp
jge
call
out
adc
adc
rcl
push
fimul
adc
pop
add
ins
aam
mov
lds
jle
outs
lock
mov
popf
imul
jecxz
scas
xchg
pop
cmp
repz
loopne
icebp
sub
dec
repz
shl
or
adc
pop
add
and
dec
fwait
mov
cmps
iret
inc
dec
addr16
add
jne
adc
inc
push
adc
dec
jns
nop
xchg
sbb
push
test
outs
cmps
inc
in
and
or
test
fsub
adc
mov
push
loopne
cmp
addr16
mov
xor
dec
(bad)
cmp
inc
adc
aas
mov
dec
sub
mov
out
in
pop
test
cmps
cmp
pop
sub
(bad)
cmp
imul
add
fwait
cmp
mov
sub
mov
dec
jb
mov
jnp
shl
loopne
sub
pop
or
jns
add
int3
repz
ins
scas
mov
adc
sub
shl
and
add
and
mov
dec
push
adc
popf
fwait
mov
adc
(bad)
addr16
test
dec
inc
jp
out
cmp
push
add
fistp
or
nop
sub
xor
xlat
mov
mov
jle
jp
pusha
fnstenv
xchg
hlt
outs
mov
cmps
inc
leave
mov
lods
push
xchg
xor
xor
ffree
cmp
dec
push
mov
inc
hlt
jbe
push
sbb
xlat
fist
adc
js
scas
sbb
and
int3
cmp
clc
pop
lds
popa
jbe
mov
daa
mov
sbb
imul
fcomp
(bad)
clc
popf
aaa
mov
gs
inc
fcmovnb
xchg
out
loop
dec
sbb
(bad)
mov
scas
xchg
xchg
mov
fisttp
xchg
sub
pop
add
call
pop
je
jae
xor
sbb
mov
stos
fs
mov
pop
inc
mov
and
sub
jno
stos
cmp
in
mov
and
xor
pop
mov
jns
inc
daa
out
(bad)
or
repz
(bad)
sbb
cmp
cli
retf
xchg
test
rcr
add
stc
int3
call
ss
fmul
popa
pop
mov
mov
xchg
cmp
sbb
and
push
and
cmp
mov
add
xor
int
movs
adc
push
js
ins
rcl
cwde
inc
neg
stos
and
ja
mov
fs
test
test
stc
clc
dec
jp
fist
gs
pop
sbb
fdivp
push
cld
xor
push
sar
pop
jbe
push
cmp
mov
add
pop
in
jmp
pushf
test
push
popa
and
call
outs
imul
out
sbb
in
pushf
jmp
out
push
jo
pop
test
mov
sbb
movs
xchg
pmaddwd
lahf
and
loopne
mov
pop
rol
enter
mov
cmp
sub
aam
and
inc
pop
ja
pushf
das
sbb
inc
cs
or
fimul
imul
xor
add
lods
jl
into
cmp
cmp
and
aas
shr
cmp
jns
jb
push
cli
pop
dec
in
loop
push
xlat
(bad)
popf
and
fst
push
mov
mov
pop
mov
xchg
inc
mov
rcr
ret
fs
inc
jns
pop
lahf
pop
inc
push
cmps
pusha
and
cmps
mov
or
inc
test
or
les
ds
pop
mov
sbb
or
xchg
xchg
mov
mul
mov
retf
repnz
sbb
push
hlt
xchg
pop
jecxz
mov
aam
data16
fsubr
mov
push
shrd
mov
mov
pop
or
fxam
aam
les
adc
sbb
nop
fwait
test
add
inc
cdq
fiadd
push
mov
or
push
pop
stos
xor
fs
adc
mov
daa
inc
loop
mov
pushf
arpl
call
mul
fs
in
xchg
and
arpl
or
xchg
repz
(bad)
dec
xchg
jb
jo
es
push
(bad)
cmc
int
cli
xor
cmp
jno
pop
stos
lahf
(bad)
retf
xor
in
inc
out
jnp
out
pop
adc
mov
js
add
(bad)
or
test
aas
aam
jecxz
(bad)
fiadd
rol
popa
mov
dec
fwait
mov
push
in
arpl
jmp
repz
sbb
fstp
mov
cmp
outs
out
(bad)
jns
dec
fnsave
dec
ret
cld
fist
cmp
xor
lods
dec
add
cdq
mov
out
inc
(bad)
fadd
xchg
(bad)
pop
sbb
and
pop
rol
jle
fsubr
xchg
ja
rol
dec
out
lods
(bad)
jo
js
daa
fcom
nop
rol
mov
sub
gs
mov
adc
mov
sti
mov
xchg
mov
add
fidiv
je
aas
scas
es
mov
mov
ja
and
xchg
add
push
add
inc
das
and
add
aas
sti
fs
addr16
mov
jns
cmp
stc
mov
mov
xchg
les
mov
sbb
mov
scas
adc
jle
test
data16
rol
out
(bad)
js
mov
cli
es
stc
bnd
and
jl
pop
inc
inc
mov
cmp
cmps
mov
mov
or
xchg
int3
outs
dec
sbb
push
cmp
and
add
imul
add
lea
and
inc
jecxz
xchg
pop
mov
ja
pop
and
mov
jmp
adc
nop
dec
mov
mov
sub
xchg
and
frstor
mov
push
sbb
clc
stc
out
jge
xor
aas
mov
push
add
mov
or
icebp
pop
into
aad
test
jo
pop
pop
fsub
adc
data16
sub
adc
adc
pop
ds
adc
aas
cs
push
fild
add
lahf
jnp
cwde
loopne
loop
jmp
inc
xor
mov
mov
test
or
mov
cmp
ret
popf
aas
ins
mov
jns
je
push
aaa
or
rcl
push
fwait
add
imul
jb
mov
dec
loop
sbb
push
mov
sub
jge
mov
add
sub
js
(bad)
sti
das
popf
rol
rcl
pop
mov
pusha
mov
test
push
fcmovu
jmp
jmp
nop
and
mov
mov
cmp
fcom
icebp
imul
and
push
popa
jae
pop
es
xchg
mov
cmp
ins
(bad)
call
sbb
dec
and
push
mov
in
dec
jb
or
shl
sahf
(bad)
sti
or
and
mov
adc
js
mov
loop
cld
out
xor
pop
xchg
mov
dec
jb
cwde
lea
(bad)
std
call
dec
call
(bad)
sti
inc
retf
sub
cmp
xchg
addr16
push
call
sub
adc
sbb
add
cwde
sbb
cmps
or
xchg
sbb
fsub
adc
es
sub
pop
clc
dec
js
movs
arpl
pushf
test
shl
xor
stc
add
sbb
mov
jp
mov
mov
xchg
std
fnstsw
mov
dec
sub
repnz
sbb
sbb
sub
mov
pop
inc
jle
in
inc
dec
push
jmp
and
jns
cwde
inc
inc
stos
add
xchg
xchg
cmp
pop
cld
fstp
inc
bound
dec
mov
sahf
sbb
fnstsw
mov
cdq
hlt
sbb
lods
aas
adc
popf
jae
mov
cmc
adc
sbb
and
imul
sbb
out
les
cdq
out
jp
aad
sbb
xor
sbb
jno
jae
xchg
mov
lods
xor
imul
jmp
push
lock
cld
outs
xchg
sahf
ja
add
test
les
cwde
xchg
test
inc
ret
repz
pop
in
sub
ror
xlat
pop
popf
and
jle
push
sbb
push
sbb
(bad)
movs
mov
and
push
ret
xchg
dec
bound
jmp
outs
add
es
sub
jne
push
mov
pop
mov
daa
inc
test
xchg
xchg
cmp
outs
data16
cld
mov
cmp
test
or
pop
xchg
cmps
mov
sbb
cmp
pushf
jmp
xlat
jnp
(bad)
mov
xor
push
pushf
cs
and
or
or
jns
clc
sbb
jge
mov
push
cmc
or
sbb
sub
sub
sub
or
pop
jbe
mov
pop
mov
mov
movs
jp
jne
cmps
mov
xor
repnz
shr
scas
push
call
es
(bad)
jg
pop
add
fist
inc
pop
mov
outs
test
inc
out
(bad)
in
adc
cmp
cmp
ins
ins
cdq
push
xchg
xor
lods
cld
das
cmp
sbb
pop
xor
(bad)
loop
xchg
div
sub
inc
test
inc
mov
pushf
lods
iret
fstp
jecxz
inc
aam
scas
ds
xor
(bad)
and
sbb
sbb
mov
sbb
lods
adc
jmp
shl
jae
and
mov
mov
stos
pop
dec
lea
add
adc
jge
jmp
sbb
jge
lods
ins
xlat
xchg
ds
cwde
inc
xchg
jmp
xchg
sbb
mov
xchg
add
mov
xchg
xchg
fidiv
cmp
fxch
loop
fiadd
push
or
jl
aaa
add
int
dec
sbb
ret
outs
bound
cmp
and
cmp
pop
scas
jb
(bad)
pop
add
pushf
push
aad
inc
stos
repz
fsub
jno
inc
lock
les
rol
stos
daa
jecxz
test
popf
out
mov
xchg
cmp
retf
out
ret
pop
cwde
sahf
jo
outs
out
add
jmp
aas
inc
mov
pop
arpl
mov
std
arpl
fstp
enter
dec
add
sub
or
cmp
mov
inc
mov
test
lahf
mov
inc
test
lds
inc
mov
jnp
stos
lahf
popa
ret
cmps
pop
add
inc
scas
stc
fnsave
cmps
fwait
xchg
sbb
lock
rol
push
sub
pop
pop
cmp
xchg
xor
inc
mov
ret
(bad)
cwde
xor
mov
mov
xor
add
arpl
or
jle
mov
add
ds
sub
sar
bound
movs
outs
(bad)
(bad)
ret
retf
out
or
sar
mov
(bad)
repnz
ret
cmps
mov
pushf
lods
lods
enter
call
daa
aam
call
sub
daa
imul
lds
popa
ror
push
ja
iret
inc
sbb
and
xor
jns
fcom
xchg
outs
xchg
xchg
test
movs
inc
test
jns
push
pop
dec
scas
sub
xchg
cli
inc
xchg
pushf
ja
mov
(bad)
loope
xor
inc
mov
stos
sbb
mov
pop
and
loope
test
sbb
dec
(bad)
dec
sub
fcomi
and
ss
sbb
js
jae
imul
neg
xlat
cs
leave
push
sbb
sbb
sub
dec
and
lahf
pop
mov
fcomp
sub
cmp
adc
hlt
cdq
inc
scas
fiadd
adc
shl
mov
or
aam
aaa
into
js
dec
pop
loope
xchg
adc
fiadd
xchg
loope
in
add
(bad)
daa
jb
pop
test
dec
inc
mov
mov
scas
mov
lahf
loop
call
add
das
sub
dec
dec
adc
pop
inc
call
cmova
lods
sbb
mov
arpl
mov
pop
loope
mov
fld
imul
outs
scas
mov
add
sbb
ffreep
mov
xchg
popf
jb
and
push
add
aam
xlat
je
dec
add
push
xchg
pop
and
fwait
stos
mov
les
mov
xchg
lea
sub
or
cmp
test
mov
sbb
cs
out
mov
jmp
retf
pop
push
inc
stos
pop
out
aam
jmp
nop
js
clc
ret
out
mov
fsub
mov
mov
stc
lock
inc
jmp
ror
sbb
retf
lock
popa
mov
outs
xor
xchg
das
pop
fld
aad
lahf
sti
pop
inc
push
and
mov
retf
fs
ficom
cmp
or
xlat
xor
sbb
fidivr
and
fwait
bound
movs
or
adc
mov
pop
sbb
fadd
mov
sti
push
icebp
jnp
pop
add
rcl
sub
fidiv
pusha
inc
movs
fs
push
xchg
stos
lds
cwde
mov
test
pop
push
pop
and
mov
sbb
mov
or
clc
sbb
cmp
repnz
lock
fs
dec
cld
mov
push
mov
adc
test
idiv
add
outs
inc
aam
test
les
mov
das
sbb
aad
out
ja
or
adc
lahf
dec
sbb
xchg
(bad)
or
sbb
loop
call
xor
pop
jb
xchg
push
fwait
jg
sbb
cmp
sub
or
pop
pop
fwait
stc
out
xchg
ret
sbb
dec
inc
pop
shr
cmps
fidivr
out
or
int
xchg
sub
outs
call
sbb
repnz
sar
inc
dec
loop
push
aad
iret
xor
pop
retf
cmp
aas
inc
es
jno
outs
mov
into
xchg
or
loope
add
daa
(bad)
dec
push
sbb
mov
mov
jp
or
shl
ficomp
and
push
jmp
inc
pushf
mov
xchg
add
fild
mov
mov
mov
ret
popf
xchg
inc
jmp
mov
and
add
sbb
mov
ret
xor
sbb
fild
pop
addr16
add
fidivr
xchg
xor
mov
popf
pop
sub
push
xchg
hlt
mov
clc
pop
loop
inc
dec
lahf
push
or
inc
ret
xchg
pop
or
loop
adc
test
sub
pop
dec
iret
xchg
mov
xchg
lds
or
popf
sbb
imul
data16
pushf
les
jmp
pop
xor
pop
ja
jo
cmp
jae
add
pop
xor
xchg
mov
popf
in
mov
loop
inc
inc
xchg
mov
test
out
or
ror
cmps
sub
fild
movs
cmps
jmp
sbb
loopne
jne
sub
jg
adc
clc
jle
sbb
sbb
adc
lahf
dec
and
xchg
dec
cmp
pop
lahf
enter
arpl
xor
xor
popf
sub
ja
jnp
mov
inc
in
xchg
lods
add
aaa
dec
iret
lock
xchg
mov
data16
(bad)
dec
clc
mov
arpl
xchg
popa
ss
seta
mov
rcl
sbb
int
mov
retf
mov
test
add
pop
into
cmp
scas
sub
jae
xor
jp
mov
in
dec
call
add
adc
jo
ja
xchg
shld
call
xchg
test
dec
ret
dec
mov
xchg
pop
adc
add
test
jle
shl
mov
outs
pop
mov
dec
push
ds
shr
pop
jmp
jbe
mov
adc
int3
or
dec
in
and
cld
pop
jge
pop
stc
add
and
(bad)
push
push
nop
retf
inc
adc
pop
mov
call
jle
pushf
dec
xchg
call
cmp
mul
stc
mov
bound
(bad)
leave
scas
scas
cdq
xor
test
sub
sbb
cmp
aam
sub
call
add
aam
std
std
cmp
cmp
pop
aas
add
arpl
push
pop
(bad)
stos
sub
mov
push
gs
dec
or
push
cli
shl
in
mov
push
fcmovbe
cmps
sub
sbb
scas
imul
sahf
stos
cmp
cld
leave
mov
cmc
push
lahf
xchg
inc
xlat
jae
cmp
aam
retf
inc
cdq
daa
fs
movs
outs
dec
ins
stos
xor
jmp
gs
cmp
inc
mov
ja
and
mov
or
inc
ins
lods
dec
dec
xchg
dec
jns
fwait
mov
xchg
stos
cdq
xor
pop
jle
xchg
outs
clc
fwait
dec
cmc
mov
std
out
das
fst
mov
popf
call
sahf
mov
xchg
(bad)
jo
mov
push
in
out
xor
sub
test
jnp
sbb
ds
outs
inc
jne
push
push
mov
jmp
(bad)
icebp
jl
hlt
push
dec
dec
xor
sub
jne
arpl
fwait
ins
sbb
or
or
add
loop
xchg
daa
mov
jno
mov
cdq
(bad)
loopne
adc
pop
adc
not
call
xchg
xor
sbb
icebp
jmp
stc
dec
dec
mov
mov
sub
icebp
sar
cmp
dec
jg
pop
mov
pop
add
in
mov
loopne
cmp
(bad)
add
inc
jecxz
and
or
(bad)
push
and
movs
imul
cmp
in
cmp
mov
dec
dec
or
aad
stos
iret
test
mov
cmc
es
test
test
mov
xchg
ds
leave
test
test
mov
(bad)
xor
clc
out
fist
adc
jp
aaa
jp
in
adc
sbb
sbb
loopne
push
je
jmp
or
lahf
pop
xor
pop
jnp
mov
dec
clc
in
test
(bad)
in
add
dec
jnp
nop
je
(bad)
fimul
jmp
add
test
ret
xchg
xchg
mov
lods
stos
or
mov
cmp
hlt
and
mov
pusha
pop
jno
xchg
stos
mov
and
inc
(bad)
push
pushf
cmc
add
aas
aam
sbb
aas
mov
dec
push
fmul
mov
test
clc
shl
dec
bound
push
aam
call
cwde
jg
test
test
xchg
pop
cdq
test
js
xchg
stos
add
cmc
loop
jmp
outs
inc
in
xchg
scas
and
hlt
push
jae
imul
out
mov
out
je
out
jl
fadd
ja
inc
ror
je
pop
out
add
call
xchg
and
pusha
int
mov
sti
pop
jns
mov
jno
frstor
int3
stos
mov
rcr
mov
jae
mov
std
cdq
mov
mov
and
out
jbe
adc
or
test
pusha
push
mov
je
mov
cmc
jp
repz
dec
cmp
dec
or
add
arpl
add
test
aas
and
mov
inc
xchg
hlt
imul
ins
ja
inc
aam
lds
xor
dec
call
mov
repnz
sahf
xlat
das
fisttp
mov
repnz
mov
xchg
pop
out
sbb
leave
repnz
adc
inc
sub
test
or
popf
mov
fld
shl
jg
fdivr
adc
or
pop
popf
sub
jge
mov
jp
rcr
int
xchg
scas
loopne
jmp
sahf
shl
idiv
jne
add
inc
jne
ret
jmp
sbb
cld
call
sub
outs
frstor
sub
inc
into
or
inc
lods
xor
lods
push
sub
test
cs
jle
mov
popf
rcr
sbb
inc
xor
popa
mov
pop
xlat
dec
push
mov
lods
mov
aas
xor
enter
add
mov
pop
movs
enter
cwde
push
out
lock
adc
outs
xchg
xchg
add
cld
lock
in
repz
(bad)
mov
inc
and
in
jmp
es
fisttp
inc
and
stos
cmps
xchg
dec
and
inc
jmp
jle
push
xor
adc
jo
add
adc
or
shl
(bad)
cmps
xor
jno
(bad)
outs
cmc
(bad)
inc
(bad)
jecxz
retf
cmp
pop
mov
(bad)
push
push
push
cmps
jmp
push
test
xlat
jo
adc
(bad)
pop
sub
stos
imul
test
pop
mov
fwait
mov
xchg
icebp
jnp
jae
rol
add
mov
js
test
pop
fsubr
popa
cwde
mov
arpl
pop
test
test
fisttp
outs
ins
mov
(bad)
mov
fwait
pusha
xchg
loopne
push
into
icebp
cld
adc
mov
dec
fstp
in
stos
and
in
jecxz
neg
pusha
inc
lahf
fwait
cmp
pop
repz
fmul
stos
jp
aas
sbb
stos
sub
call
xchg
adc
stos
gs
push
mov
pop
push
dec
adc
xor
into
gs
push
aas
rol
mov
jns
out
mov
in
add
mov
mov
xchg
sahf
popa
push
clc
(bad)
popf
sbb
jl
adc
xchg
mov
clc
test
sub
mov
enter
loop
fsub
es
ins
cs
mov
stos
xchg
aaa
or
popa
fadd
sahf
neg
inc
and
xor
push
mov
into
arpl
mov
pop
cmps
rcr
int
call
hlt
sbb
pop
call
jmp
(bad)
sti
hlt
psrlq
mov
adc
mov
dec
mov
aam
pop
dec
out
test
arpl
dec
pop
or
mov
imul
cdq
sahf
mov
inc
sub
dec
repz
inc
push
or
pop
jecxz
xchg
aaa
int3
ins
adc
pop
cmp
popf
and
or
out
mov
neg
pop
inc
fst
pushf
(bad)
jle
repnz
jl
mov
jmp
push
fwait
mov
arpl
out
and
mov
call
push
jmp
in
xor
jbe
inc
push
sbb
sbb
cmp
mov
mov
loopne
xor
xor
pop
outs
je
push
pushf
and
lods
push
push
stos
adc
outs
adc
cmp
stos
mov
cld
jl
bound
cwde
mov
add
cmp
ror
mov
cmps
sbb
repz
mov
je
sub
dec
enter
jecxz
imul
mov
push
fwait
popf
lods
scas
xor
bnd
enter
gs
add
(bad)
sbb
push
jl
cdq
sub
dec
sahf
push
aaa
mov
jno
lods
test
(bad)
mov
add
xchg
leave
dec
xchg
ret
loopne
add
loope
sbb
ret
xor
xchg
and
int3
stc
mov
mov
stc
dec
sbb
ror
add
jo
adc
sub
mov
call
imul
cmp
cmc
cmp
mov
xchg
out
test
jecxz
call
clc
inc
sar
cmps
jne
movs
lds
cld
cdq
(bad)
mov
std
add
jl
xchg
retf
sbb
test
add
hlt
stos
enter
mov
xor
dec
nop
stc
enter
pusha
and
pop
clc
push
pop
mov
mov
pop
repz
mov
pop
fld
outs
push
jno
mov
gs
jae
mov
jle
rol
ret
dec
enter
sbb
pop
mov
mov
mov
out
mov
add
fsubr
mov
in
mov
xchg
mov
loope
test
test
pop
lods
cmp
daa
mov
out
and
cmp
sbb
sahf
scas
mov
jmp
inc
push
pop
sub
xchg
cmp
push
mov
jg
lea
cwde
enter
stc
or
sbb
mov
popf
sahf
(bad)
ds
in
cwde
adc
mov
adc
in
sbb
inc
lods
test
pop
lods
xchg
mov
push
cli
fdiv
out
cwde
jns
pop
stc
sub
es
out
and
sbb
cmp
jne
jno
ret
dec
sbb
push
xchg
(bad)
das
cmps
(bad)
inc
dec
pop
or
and
cdq
or
jno
push
sbb
stos
mov
sbb
pop
clc
jmp
inc
dec
sub
imul
loopne
mov
jno
shl
xchg
mov
mov
mov
xchg
imul
xchg
xchg
inc
lock
jmp
retf
retf
add
mov
pop
add
call
in
mov
cld
pop
ins
pop
push
aad
adc
or
sbb
mov
arpl
push
jae
in
xchg
and
(bad)
pop
fiadd
daa
test
sahf
loop
xchg
mov
ret
mov
dec
(bad)
mov
loopne
repnz
out
xchg
add
mul
mov
imul
mov
gs
add
jbe
add
outs
mov
inc
add
in
add
cs
fistp
mov
xchg
std
sub
daa
and
push
je
imul
mov
and
inc
stc
repnz
mov
add
mov
jl
shl
xlat
fmul
mov
out
fiadd
xchg
sahf
movs
cmp
shl
xchg
mov
movs
gs
cmps
or
dec
jecxz
sti
sub
add
adc
and
mov
pop
leave
(bad)
jns
in
push
inc
jl
enter
sub
mov
mov
shr
mov
xor
das
dec
out
xchg
cwde
aam
cmp
fs
fwait
pop
xlat
cdq
sar
loop
nop
test
jmp
lahf
jnp
dec
mov
cwde
(bad)
adc
out
add
mov
sahf
jns
push
sbb
inc
jmp
add
jae
das
pop
jns
pusha
push
pop
mov
mov
inc
fcmovbe
or
mov
popaw
and
sbb
push
lods
and
dec
push
mov
pop
xchg
movs
stos
mov
push
mov
loop
pusha
mov
jmp
aam
mov
jmp
adc
lods
fwait
mov
sbb
(bad)
scas
aad
inc
jecxz
pop
retf
inc
(bad)
adc
jmp
or
cmp
adc
call
imul
out
pop
cli
nop
or
add
sub
arpl
add
inc
push
pop
add
xchg
mov
lahf
repnz
hlt
pop
inc
and
pop
cmc
(bad)
repnz
fdivr
add
hlt
xchg
or
adc
mov
popf
mov
leave
cmps
(bad)
call
dec
ror
dec
cs
int
retf
adc
jns
sbb
xchg
sub
pusha
xchg
lods
fs
cmp
ss
xor
add
call
inc
push
cwde
jae
mov
pop
lahf
sar
(bad)
jmp
pop
add
pop
stc
add
out
pop
xlat
fstp
in
out
adc
lods
and
jmp
inc
xchg
fstp
ins
rcl
xchg
int
jbe
add
dec
mov
jae
pop
xchg
or
and
rcl
fadd
imul
ss
fadd
test
cmp
test
and
cld
gs
push
dec
mov
adc
push
sar
ins
retf
dec
sub
mov
jmp
mov
ds
inc
rcl
pop
jle
mov
xor
push
lods
mov
fbld
cli
sbb
fsub
add
in
push
xor
push
popa
stos
push
mov
xchg
je
mov
popf
mov
(bad)
enter
(bad)
jne
js
ds
pop
fcom
outs
repz
adc
fcom
cmp
xor
mov
mov
sub
xor
in
pop
fisubr
adc
or
out
mov
cdq
xor
sub
push
cmc
adc
pop
jbe
cdq
cmp
je
pushaw
mov
pop
(bad)
cvtdq2ps
cmp
(bad)
int
and
add
fbld
push
rcr
pushf
es
pop
cmc
cmps
mov
add
adc
jmp
stos
enter
xchg
inc
in
(bad)
dec
or
pop
in
inc
sbb
test
pop
jbe
mov
lods
das
aaa
cmps
dec
fiadd
dec
jg
call
push
pop
rol
outs
jb
push
adc
mov
push
adc
sbb
push
jo
dec
ret
mov
jmp
mov
mov
lahf
scas
not
movs
mov
in
repnz
test
jmp
sti
mov
and
push
xchg
add
pushf
mov
cwde
fistp
mov
sbb
retf
jge
and
or
ja
jl
fwait
push
lahf
adc
cmps
cwde
cmp
and
sti
mov
iret
(bad)
push
gs
ja
adc
mov
mov
or
retf
adc
out
mov
mov
(bad)
outs
pop
mov
cmp
leave
and
sub
and
test
js
push
(bad)
mov
std
inc
cwde
fisubr
mov
adc
adc
lods
inc
retf
pop
mov
mov
pop
mov
test
push
mov
mov
add
xchg
test
mul
inc
ret
push
fnstsw
nop
add
cs
out
sbb
dec
mov
add
cdq
push
imul
jle
ja
jle
(bad)
mov
(bad)
jmp
adc
dec
add
sub
add
xchg
push
mov
mov
pop
mov
mov
(bad)
jmp
xor
data16
jge
cwde
div
rcl
hlt
fcom
mov
push
inc
mov
lea
cmp
cli
mov
in
inc
jecxz
push
jmp
enter
(bad)
sti
aam
ret
add
fdivr
pop
arpl
cmp
mov
cwde
fdivr
cmc
inc
jl
adc
add
pusha
ja
out
sbb
movs
inc
sbb
mov
sbb
idiv
out
jle
mov
xchg
cwde
sbb
cdq
push
sub
jmp
jbe
push
push
stos
push
jnp
test
xor
retf
test
xchg
pushf
sub
push
cmc
ds
sbb
call
pop
pop
sub
xchg
inc
pop
push
out
or
fadd
sbb
xor
xor
popf
and
ret
cmp
lea
data16
lods
mov
mov
pop
fiadd
ins
xor
mov
stos
push
sub
enter
ja
cmps
mov
pusha
jecxz
mov
push
fcmove
sub
ins
inc
stos
pushf
addr16
sub
not
stos
pop
pushf
adc
jg
aaa
imul
sbb
mov
fbld
call
inc
pop
daa
mov
xor
scas
push
adc
push
mov
mov
pop
dec
jle
in
mov
retf
rol
push
push
shl
mov
inc
xchg
call
push
int
out
sub
sbb
call
inc
shl
(bad)
fnstcw
mov
jns
pop
out
xor
cmp
clc
scas
pop
fadd
pusha
js
sbb
in
sbb
retf
mov
pop
jecxz
sbb
pop
mov
clc
sbb
mov
xchg
cmp
cli
push
pop
sub
cdq
repz
jecxz
push
sub
xor
xchg
pop
mov
mov
xor
mov
lods
lods
movs
mov
lods
imul
fsub
movs
aam
pop
imul
sub
dec
jmp
adc
ins
cmps
push
mov
push
loope
dec
jge
(bad)
daa
or
cmp
cmp
pop
cmps
jb
mov
jge
mov
xor
int
aas
(bad)
jne
jnp
push
neg
ret
stos
mov
cmp
stos
test
repz
xchg
mov
push
stos
pop
push
sti
mov
aad
xlat
retf
inc
adc
fnstcw
inc
hlt
sub
hlt
jnp
inc
inc
jg
mov
push
jp
mov
in
ins
jmp
jge
jecxz
outs
dec
unpcklps
sbb
mov
xor
or
lods
mov
jmp
or
mov
add
jge
test
call
inc
and
cmps
stos
xchg
icebp
sahf
popa
shr
pop
daa
mov
repz
sbb
and
jbe
push
xchg
mov
not
jns
and
cmp
mov
mov
shr
mov
sbb
cmp
inc
(bad)
mov
mul
jg
push
fbstp
test
sahf
push
adc
fadd
mov
mov
call
xor
mov
lods
ret
xor
mov
pop
fmul
sub
jmp
fisttp
inc
imul
stos
xor
add
mov
lods
adc
cld
inc
loop
xor
adc
or
call
imul
dec
cmp
or
ss
dec
jl
scas
mov
fstp
sbb
scas
outs
loop
enter
lahf
ins
leave
stos
sbb
(bad)
mov
mov
push
add
adc
dec
movs
inc
lds
(bad)
add
frstor
add
test
push
mov
xchg
(bad)
cdq
push
pop
in
jg
call
adc
mov
and
pop
mov
stos
jb
adc
popf
mov
jmp
fwait
adc
jno
push
ror
push
repz
mov
or
aas
inc
sbb
ins
mov
xor
inc
icebp
aad
arpl
mov
push
cwde
push
add
sahf
test
push
add
sbb
pop
mov
imul
adc
ja
aam
ss
or
jmp
daa
test
outs
inc
xchg
test
pop
ficomp
mov
inc
repz
lods
leave
cmp
xchg
mov
movs
aad
cmp
test
lock
fsub
enter
jbe
jae
adc
mov
or
mov
in
jg
icebp
cmp
fiadd
pop
arpl
sbb
xor
sbb
mov
push
mov
pop
jmp
cdq
cs
clc
pop
fisttp
outs
nop
push
lock
call
xchg
test
test
pop
stos
(bad)
(bad)
push
lods
push
jae
mov
leave
test
loopne
inc
sahf
fidiv
imul
in
cmp
sub
cs
pop
cmps
cmp
sbb
mov
sbb
leave
jg
add
shl
pop
ficom
lods
pop
stos
sub
dec
dec
xchg
jns
mov
pop
xchg
mov
ds
mov
mov
jbe
xchg
cmp
sub
dec
shr
jnp
mov
mov
ror
sub
xchg
cld
cwde
repz
jp
fld
push
aam
aas
push
rol
jns
cmp
xor
cmp
outs
or
stos
mov
push
pop
retf
aad
lahf
rol
pop
push
(bad)
and
dec
add
or
aas
mov
addr16
sahf
ins
inc
add
clc
sar
fsubr
ins
mov
ffree
hlt
push
xchg
mov
adc
fwait
fs
int
mov
push
sub
leave
retf
inc
inc
jecxz
ja
and
sub
das
repz
push
popf
sub
sub
test
test
popf
sbb
add
push
lds
cmp
sbb
sub
dec
dec
cmps
push
outs
call
int
mov
or
fnstsw
cli
pop
sti
icebp
lahf
push
loopne
bound
rcl
mov
mov
lea
push
mov
cmc
js
int
cwde
(bad)
lock
dec
mov
push
int3
imul
rol
inc
pop
gs
pusha
add
mov
(bad)
pop
ror
leave
aas
test
inc
or
aaa
sbb
fs
pop
nop
pandn
mov
jne
mov
add
jg
scas
xchg
pop
enter
je
jo
inc
jmp
jmp
cmp
ret
aam
adc
mov
(bad)
stc
xchg
sar
bound
(bad)
push
xchg
cs
adc
add
fild
pop
sbb
inc
mov
or
sbb
pop
jecxz
push
adc
inc
push
pop
sub
mov
xor
mov
jnp
rol
std
inc
inc
jl
pop
mov
lahf
jl
xchg
pop
push
(bad)
stc
xor
fsubr
mov
jmp
adc
icebp
repnz
in
lods
fdiv
xchg
sub
loope
iret
and
xor
pop
pop
add
push
lods
sbb
jmp
xchg
(bad)
xor
push
and
mov
jmp
sub
cmps
loope
inc
or
fldenv
in
push
cwde
je
add
pusha
leave
sahf
or
shl
mul
call
fcomp
data16
xchg
lods
in
adc
mov
aad
iret
dec
pop
sub
iret
fdivr
xor
adc
je
pop
push
popa
movs
ret
scas
scas
inc
pop
jmp
ret
clc
adc
pop
(bad)
sub
adc
or
sahf
outs
cmp
shl
hlt
mov
inc
(bad)
jmp
pop
lahf
jge
mov
mov
adc
adc
test
mov
loopne
out
loope
pop
mov
lds
ror
inc
jbe
mov
push
bound
add
ror
jg
sub
adc
cmp
test
popa
push
fild
mov
jnp
scas
stos
ins
sbb
ror
push
mov
add
inc
lock
lock
call
and
dec
test
add
ficomp
xchg
rcl
(bad)
mov
sbb
or
arpl
jle
outs
jle
cwde
outs
pop
ins
xchg
cld
pop
ret
mov
xchg
jae
or
retf
pop
aaa
sub
dec
dec
(bad)
test
push
xchg
mov
or
ss
test
pusha
clc
dec
sbb
push
cli
popf
cli
cmp
into
mov
mov
xchg
and
hlt
xor
hlt
cmp
mov
stc
test
and
test
out
sar
pop
pop
and
sub
add
mov
pop
rcl
sub
sub
and
push
js
sbb
add
sbb
dec
sbb
xor
push
iret
out
rcl
or
(bad)
enter
mov
push
(bad)
cmps
hlt
das
(bad)
arpl
pop
push
scas
and
leave
hlt
inc
outs
jecxz
cmp
pop
cli
dec
inc
xor
int3
repnz
nop
inc
arpl
pop
stos
sub
cdq
or
mov
mov
and
push
(bad)
mov
sbb
and
jo
mov
xchg
jo
inc
jb
js
scas
inc
push
nop
test
adc
cmps
mov
shr
jg
jg
mov
jmp
in
sub
cld
mov
xchg
inc
(bad)
(bad)
mov
jae
mov
mov
adc
fstp
sub
xor
rol
add
adc
sahf
mov
add
lahf
lea
push
pop
ficomp
imul
cmc
dec
pop
cwde
push
popf
scas
pushf
and
cmp
shr
dec
sub
les
(bad)
mov
int3
xchg
or
cld
xchg
pop
scas
lahf
movs
clc
(bad)
jge
mov
pushf
ds
xor
and
hlt
or
(bad)
fdivr
push
js
inc
movs
cmp
ins
add
and
adc
aaa
std
adc
add
inc
xchg
push
test
paddsw
sti
xor
aaa
ins
jmp
fisubr
push
scas
popa
mov
popf
sbb
cmps
jns
in
lock
push
fisttp
cdq
lods
les
jp
mov
xchg
inc
int3
xchg
loop
xor
imul
rcl
jne
sbb
dec
shl
push
call
xchg
sbb
cld
dec
(bad)
in
and
dec
inc
in
xor
sbb
cmp
or
pop
js
push
inc
mov
test
(bad)
imul
jno
out
inc
lahf
xchg
push
hlt
jge
inc
mov
inc
sub
imul
xrelease
pop
imul
pop
inc
mov
(bad)
test
fisttp
mov
adc
retf
je
add
inc
fild
push
inc
mov
test
out
arpl
ficomp
dec
sbb
sbb
pop
adc
xchg
add
outs
add
fwait
stc
imul
add
addr16
scas
leave
bound
xchg
fs
mov
lods
movs
movs
mov
xchg
jmp
(bad)
inc
dec
xchg
mov
sbb
xor
(bad)
mov
fild
jg
rcl
je
push
rcr
fiadd
imul
adc
adc
add
push
mov
jne
lods
mov
in
mov
lds
pop
(bad)
nop
repz
(bad)
cmps
inc
fcom
xchg
sbb
push
mov
mov
push
cmps
movs
movs
cmp
cmp
mov
adc
std
pop
fcomp
jne
push
mov
xchg
call
int
mov
daa
cld
sbb
or
stos
add
mov
sub
cwde
sbb
test
aaa
mov
dec
std
inc
jns
fdiv
xchg
(bad)
bound
test
pop
stc
clc
mov
out
stos
cmp
xchg
xchg
xchg
sbb
leave
fmul
mov
sub
imul
inc
cmp
or
mov
xchg
test
jg
out
pop
stos
loopne
jne
sbb
inc
outs
push
data16
popf
adc
dec
ja
dec
add
cmp
in
mov
(bad)
outs
je
mov
push
xchg
stos
je
retf
cmp
dec
mov
mov
lods
and
std
test
mov
iret
or
or
shr
push
pop
shl
mov
mov
fistp
ret
repz
adc
xor
adc
into
sbb
jnp
mov
pop
movs
(bad)
mov
in
popf
sbb
lea
add
push
jecxz
shl
mov
add
out
xor
dec
sbb
inc
mov
cld
cmp
jmp
mov
call
push
outs
leave
push
ss
icebp
retf
dec
fnstcw
inc
xor
cs
or
aas
pop
in
sbb
pop
popa
jp
mov
xor
(bad)
bound
mov
xor
adc
cmp
test
add
push
pusha
inc
test
xchg
std
outs
fwait
jmp
inc
leave
jmp
aam
repnz
push
pushf
(bad)
dec
(bad)
test
std
pop
pop
in
mov
cmp
sub
icebp
daa
jae
pop
mov
pop
pop
dec
mov
int3
push
in
(bad)
aas
mov
cmp
adc
scas
push
rcl
gs
scas
push
adc
mov
test
push
repnz
jae
rol
mov
call
sbb
ficomp
in
call
test
test
jmp
sub
(bad)
in
leave
addr16
sub
push
jle
mov
rcr
cwde
int
mov
adc
or
inc
adc
xchg
add
pop
retf
inc
je
jnp
mov
inc
mov
inc
hlt
int
sbb
fidivr
mulps
inc
out
xchg
sbb
int
xchg
gs
xchg
cdq
stos
adc
repz
mov
mov
in
or
int
in
pop
and
jns
xchg
push
pop
test
fnstcw
fs
pop
and
add
and
pop
popf
and
je
mov
ja
cmps
sub
jecxz
pushf
and
rcl
add
retf
inc
pushf
loop
outs
mov
mov
adc
test
ret
pop
xchg
sti
call
stc
fldenv
sahf
xor
sub
sbb
xor
sti
xlat
je
adc
sbb
sbb
dec
xor
lods
xchg
nop
mov
popf
jmp
je
dec
(bad)
cmp
add
or
popa
pusha
mov
and
push
pop
xchg
xchg
mov
loopne
mov
cmc
dec
jl
test
inc
movs
mov
addr16
fxam
xchg
add
push
sti
test
push
xchg
pushf
mov
stos
loope
ins
popa
mov
xor
pop
fistp
aam
fldcw
jg
cdq
sub
mov
(bad)
rol
int
jnp
aad
imul
jno
mov
jae
mov
sub
adc
sbb
imul
out
mov
push
and
push
inc
aaa
in
shl
mov
ins
mov
hlt
out
scas
cmp
fdiv
and
lea
fs
fidiv
sbb
mov
pop
xchg
mov
add
pop
shl
sub
cmc
push
jo
push
loope
xor
pushf
sbb
cwde
jnp
lods
sub
jmp
loopne
mov
popf
int
retf
bound
mov
sbb
call
sbb
movs
pop
sbb
cmp
fist
or
dec
sbb
call
adc
pop
sbb
dec
or
fst
sbb
fstp
mov
add
jb
fiadd
jae
sub
ins
int3
dec
push
xchg
mov
add
mov
idiv
movs
adc
pop
pop
movs
sub
mov
mov
push
out
mov
sbb
fwait
sbb
sahf
mov
fucomi
xchg
cmp
fisttp
dec
in
ss
or
leave
sar
pusha
ds
test
add
inc
(bad)
ret
jecxz
inc
inc
pop
cld
xor
push
jno
icebp
ss
sub
adc
xchg
daa
pusha
test
out
xchg
mov
pop
push
arpl
jae
(bad)
call
cli
icebp
cmp
test
jne
fwait
mov
cmp
shl
mov
push
and
clc
adc
cmp
mov
push
dec
mov
pop
clc
push
sti
fistp
mov
xor
push
outs
add
cmp
pop
pop
xchg
push
cmp
mov
xlat
retf
sahf
dec
retf
test
push
call
aad
fs
(bad)
stos
cwde
jmp
mov
stc
hlt
les
in
fwait
inc
in
clc
push
pop
sbb
pushf
inc
pop
push
dec
movs
xor
mov
lds
sbb
(bad)
and
pop
and
adc
icebp
pop
cwde
pop
fldcw
cdq
or
xchg
xor
nop
xchg
xor
cmps
cmp
dec
push
and
arpl
jae
(bad)
repz
ins
lea
ins
arpl
(bad)
cmp
mov
lods
ftst
ins
jnp
fisttp
push
(bad)
rcl
fnstsw
pop
inc
cs
ins
push
jl
mov
cwde
sub
in
cwde
(bad)
xor
repz
inc
je
loop
or
and
add
stos
adc
mov
sti
sub
or
stc
mov
aad
bound
rcr
mov
jmp
repz
mov
pop
movs
xchg
movs
test
fld
and
dec
adc
cmp
push
cmps
sbb
loopne
or
mov
int
cs
out
dec
push
add
stc
adc
add
es
sub
mov
jae
movs
fwait
adc
gs
jmp
and
jns
mov
out
jmp
jmp
sahf
pop
push
(bad)
lahf
xor
inc
mov
mov
jo
or
cli
(bad)
pop
dec
mov
clc
or
into
popa
call
imul
dec
and
mov
ror
test
jb
pop
inc
leave
cmp
stos
sbb
push
call
inc
cmp
lods
xor
out
xchg
pop
jp
inc
nop
jge
mov
inc
mov
pushf
data16
(bad)
stos
sub
jne
scas
xchg
neg
ficomp
add
xchg
mov
add
aam
inc
xchg
cdq
inc
clc
dec
cmps
sub
loopne
rcl
push
pop
mov
inc
and
dec
or
mov
inc
shl
mov
outs
popa
push
sbb
sbb
jbe
jo
lods
imul
sub
in
lods
imul
out
mov
test
data16
pop
popf
(bad)
mov
xchg
add
push
fcom
aaa
test
pop
sbb
xor
mov
scas
cmp
or
test
lahf
inc
jnp
inc
mov
pop
dec
mov
sub
sub
inc
dec
inc
leave
inc
outs
jg
cmp
and
adc
popa
push
ret
test
add
and
cmp
bound
mov
adc
push
iret
lahf
jle
jmp
xchg
push
sbb
test
mov
or
sbb
imul
jl
call
push
lea
scas
push
fxch
and
and
and
inc
adc
push
add
mov
fistp
les
push
or
ret
aam
retw
xor
neg
scas
int3
cmp
lea
xlat
loopne
jle
xchg
aaa
fsubr
(bad)
xor
dec
cmc
(bad)
shl
pop
scas
sub
loopne
inc
push
test
xor
ds
pop
in
sub
or
push
dec
movs
adc
mov
pop
(bad)
sti
inc
lods
mov
fs
dec
out
out
mov
mov
mul
cld
adc
adc
lods
add
in
mov
fdiv
jecxz
xor
and
(bad)
loop
push
cmp
sbb
push
popf
push
cmp
mov
pop
cmps
pop
shl
stos
fisttp
inc
jnp
mov
add
sbb
cwde
jbe
xchg
sbb
push
push
(bad)
or
add
mov
out
aad
add
clc
fst
mov
inc
pop
test
cmc
lods
ror
ins
adc
jnp
adc
dec
in
iret
rcr
inc
push
mov
inc
or
mov
rcr
lahf
jmp
jg
retf
inc
es
int3
xor
ins
push
mov
js
movs
mov
and
push
clc
xchg
das
xchg
rcr
js
pop
mov
js
int3
xchg
imul
ja
clc
aad
add
ins
cdq
mov
pop
pop
xchg
xchg
hlt
adc
jmp
loop
dec
cli
jne
pop
sbb
fcomip
inc
in
or
cmp
mov
mov
stc
pusha
shr
(bad)
mov
push
and
jl
sub
mov
inc
test
js
fucomi
inc
mov
push
cmp
inc
test
jmp
into
inc
test
mov
dec
pushf
inc
fs
lods
add
leave
fld
mov
sub
pop
out
xor
cmp
jmp
pop
fild
sti
jno
push
call
js
leave
and
sbb
dec
das
imul
out
pop
dec
stos
pop
pop
shl
inc
xchg
mov
cmp
int3
cmp
fsub
bound
xor
mov
fs
retf
test
cmps
inc
sbb
cmps
mov
mov
add
std
test
mov
inc
retf
sub
pop
pop
or
call
pop
and
(bad)
pushaw
mov
mov
xlat
retw
mov
add
add
jbe
jl
add
pop
cmc
push
jb
dec
inc
mov
pusha
lods
mov
outs
(bad)
lgs
jno
sub
xchg
xor
mov
(bad)
popf
pop
dec
jmp
pushf
sbb
jns
pop
inc
add
push
add
std
stos
(bad)
(bad)
aas
ja
lahf
push
call
repz
lahf
sbb
lods
push
dec
jns
xor
je
fnstenv
pop
fadd
inc
push
inc
jb
sub
or
sbb
outs
and
shr
pushf
(bad)
loope
xchg
(bad)
ja
addr16
sahf
push
mov
mov
or
mov
lea
jbe
cmps
leave
(bad)
jl
fmul
stos
out
rol
pop
ret
push
mov
(bad)
jp
inc
add
and
imul
stos
mov
hlt
push
int
add
inc
popa
add
or
xchg
sbb
push
stos
dec
inc
aad
push
xchg
test
out
out
mov
inc
xchg
jo
cs
fadd
retf
aad
pop
pop
fmulp
and
xchg
repz
xchg
cmovne
leave
mov
call
sub
imul
cmp
shl
data16
inc
cmp
cmp
xchg
fisubr
cmc
inc
pop
inc
and
xor
push
mov
iret
push
xlat
pop
pop
jmp
es
retf
sbb
jo
lods
pop
test
xchg
inc
out
push
xor
test
xor
pushf
icebp
xor
aam
push
pop
jecxz
je
imul
cs
(bad)
xlat
sub
and
ins
xchg
das
mov
jae
lahf
xchg
retf
push
cmp
push
sti
mov
into
popa
outs
push
push
loopne
sub
mov
retf
inc
jb
jno
lahf
and
cld
adc
cmp
stc
cwde
adc
jge
xchg
(bad)
scas
loope
jecxz
loop
out
dec
cmp
pop
xchg
sbb
xchg
xchg
movs
sbb
fldl2e
mov
stc
dec
sbb
mov
and
jmp
add
pop
lahf
push
es
jo
push
mov
retf
sub
push
std
jmp
xchg
enter
add
add
or
or
outs
inc
into
adc
stos
loope
xor
ins
jmp
clc
jns
pop
dec
call
gs
lock
(bad)
test
hlt
test
mov
add
popa
jg
sahf
lods
adc
retf
jecxz
repnz
inc
xchg
cdq
outs
repnz
rcl
push
push
arpl
or
lods
inc
cmp
cwde
mov
pop
cmps
pop
(bad)
xlat
sub
xlat
add
add
add
inc
or
pop
lods
push
out
dec
fst
push
mov
push
mov
mov
in
mov
xor
and
mov
and
mov
arpl
loope
es
pusha
stos
cmp
bound
loope
cmps
jmp
cmp
mov
cld
ss
push
enter
call
jl
jno
daa
dec
jb
dec
cs
xchg
mov
sub
lahf
fadd
sbb
jae
add
jb
pop
aaa
mov
js
lods
mov
sbb
sbb
into
in
inc
fcomp
pop
test
mov
test
loopne
aaa
mul
xchg
cmps
pushf
stos
xor
stos
mov
and
out
loop
cmp
dec
imul
xor
sbb
enter
aaa
imul
mov
xor
xchg
test
sahf
das
add
mov
and
cmp
add
jno
inc
inc
cmps
mov
push
pop
jmp
sti
pop
add
daa
test
pop
es
pop
in
loop
out
cdq
jae
jmp
mov
iret
push
lods
xchg
vpmacsswd
xchg
cmps
xlat
lock
test
leave
sub
fsub
add
dec
lods
or
call
mov
(bad)
pop
enter
mov
fs
push
cmp
and
out
(bad)
fnstcw
xchg
ds
xchg
push
les
lock
push
jnp
jl
xchg
outs
jmp
mov
mov
xchg
jg
pushf
fdivrp
sub
mov
and
and
imul
xchg
fstp
cmp
ss
stos
outs
and
les
sbb
ret
add
inc
ins
push
outs
aas
mov
retf
pop
out
popa
movs
push
sub
sbb
push
mov
and
pop
xchg
in
xlat
mov
sub
mov
bound
std
inc
mov
test
popa
rcl
sub
aaa
inc
pop
adc
xchg
ret
les
fcomip
add
(bad)
jg
pop
inc
mov
sub
addr16
jne
(bad)
xchg
jmp
loop
push
jl
jp
sahf
loope
cmps
hlt
sti
push
call
call
test
sbb
fcomp
push
cwde
xchg
dec
fnsave
dec
(bad)
int3
xor
jl
aaa
inc
bound
retf
add
lahf
test
imul
jmp
scas
xor
inc
adc
push
es
movs
xor
pop
pop
in
cld
pushf
inc
nop
icebp
push
xchg
jae
dec
repz
clc
jp
rcl
xor
shr
mov
loop
fld
add
jecxz
cli
cld
inc
gs
push
inc
or
lock
or
stos
sub
xor
add
sbb
gs
sbb
inc
ds
cmp
arpl
cs
sbb
inc
es
ins
fwait
cmps
mov
out
out
or
inc
sti
sbb
lds
ret
(bad)
gs
int
inc
xchg
mov
test
test
sahf
shl
cmps
je
xchg
mov
shl
mov
xor
or
lods
jne
aas
dec
jl
cdq
daa
pop
das
or
test
test
sbb
fs
add
or
(bad)
pop
sbb
dec
add
sbb
mov
loope
pushf
inc
ror
neg
push
and
pusha
mov
loopne
sbb
call
test
movs
mov
test
add
mov
repz
sti
cmp
out
mov
adc
out
pop
std
xor
push
cdq
push
sbb
leave
push
push
out
imul
cmp
jge
adc
and
imul
pop
xor
leave
repnz
sar
inc
test
fld
stos
imul
stc
scas
sub
dec
call
lods
jge
cwde
mov
xlat
mov
repz
out
fdiv
jecxz
fimul
or
iret
stc
into
arpl
ss
pop
stos
adc
mov
and
mov
fisub
cmp
call
cmp
sbb
cdq
ins
pop
mov
inc
mov
mov
and
jmp
xchg
das
popf
aad
retf
adc
popa
cdq
push
aam
test
ror
and
fnstenv
jmp
popa
mov
out
fistp
mov
xor
jmp
jne
push
test
or
(bad)
aam
pop
xlat
inc
(bad)
fisub
(bad)
mov
jp
clc
sbb
pop
and
sbb
adc
je
(bad)
mov
adc
mov
mov
add
test
pop
loop
mov
sub
je
test
aam
test
mov
hlt
cli
mov
jmp
mov
cmps
(bad)
or
fdivr
jp
pop
jo
pop
cmps
or
mov
pushf
pushf
or
jl
neg
jbe
leave
cmp
pop
xor
mov
adc
dec
cmp
ss
in
xchg
fwait
push
dec
dec
arpl
(bad)
and
xchg
push
pop
push
pop
adc
not
bnd
sbb
push
test
in
aaa
sbb
and
mov
ins
inc
xchg
xor
sub
call
je
pusha
fcom
dec
mov
les
in
add
mov
inc
xor
xor
pop
or
jg
jge
lods
jge
test
pop
xchg
test
int
cmp
pop
pop
mov
gs
xchg
stos
gs
cmps
mov
sbb
and
add
dec
nop
movs
push
shr
dec
or
call
push
cmp
mov
je
cmps
bound
or
adc
hlt
jg
nop
jg
lea
push
xor
inc
xor
bound
add
fisttp
js
cmps
xor
mov
pusha
dec
pop
xchg
outs
loopne
ret
xlat
add
cmps
stos
push
int
idiv
(bad)
adc
inc
pop
call
lods
cld
sar
mov
sub
adc
mov
and
pop
test
imul
xchg
mov
sbb
jo
test
dec
sub
xor
xor
jno
push
mov
outs
mov
movs
pop
daa
or
leave
test
stos
xlat
push
cli
ins
jb
lea
rcr
loopne
cwde
aad
ins
jmp
hlt
mov
mul
jp
mov
hlt
stc
ret
clc
inc
jge
lea
xchg
push
retf
stc
lods
jg
inc
pop
jbe
sbb
and
mov
pushf
mov
daa
retf
rcl
fwait
rcl
add
inc
outs
or
dec
arpl
inc
movs
sar
jno
pop
inc
int3
iret
cwde
inc
mov
dec
fistp
pushf
jmp
jno
xchg
clc
mov
test
popf
push
arpl
aad
mov
mov
or
and
cwde
sbb
ds
mov
dec
aas
push
jmp
or
jle
xchg
sbb
pop
(bad)
es
ds
and
dec
mov
js
mov
xor
push
jnp
lods
out
xchg
fsub
jae
mov
arpl
dec
cmp
stc
mov
mov
jge
out
cmc
daa
and
cwde
(bad)
icebp
div
jmp
jns
push
and
(bad)
jns
pop
pop
es
shr
push
cs
dec
cmp
lods
mov
cs
add
pop
push
fs
cmps
pop
cmp
xor
dec
jnp
jno
lods
sub
or
push
data16
mov
xchg
jbe
jge
sahf
test
mov
stos
inc
adc
movs
xor
xchg
xchg
mov
addr16
cwde
mov
das
rcr
mov
neg
or
ret
push
popf
inc
sbb
push
popf
push
pop
ja
mov
mov
in
jge
(bad)
bound
inc
(bad)
aas
cmp
add
pop
sbb
popf
mov
inc
in
sahf
adc
iret
inc
(bad)
pop
add
ins
test
mov
xchg
sbb
les
and
gs
mov
and
std
scas
mov
push
push
(bad)
in
xlat
sbb
psraw
in
imul
ficom
pop
dec
mov
repz
jmp
pop
add
mov
sub
dec
push
mov
jb
mov
cmp
ds
out
xchg
jmp
daa
cmps
dec
les
jmp
add
call
mov
push
inc
nop
mov
cwde
mov
test
dec
(bad)
ss
cmp
inc
add
sbb
sahf
imul
mov
dec
push
pop
fiadd
push
outs
sbb
sbb
pop
pop
mov
xchg
push
dec
cs
out
mov
sar
inc
mov
js
stos
mov
ss
add
inc
xchg
xchg
mov
ss
jg
cmps
mov
cmps
repnz
mov
ror
dec
mov
xlat
inc
(bad)
sub
add
cs
push
movs
ja
dec
mov
mov
ja
cli
jge
xchg
jo
push
xor
xor
mov
stos
cmp
sbb
mov
xchg
inc
scas
rcr
(bad)
sti
movs
and
jle
mov
mov
loop
sar
and
jecxz
xchg
xchg
fwait
mov
cmp
out
(bad)
jmp
dec
stos
inc
cmp
fmul
out
fadd
dec
fisubr
pop
xchg
push
bound
sub
fiadd
push
je
fiadd
bound
popa
or
test
xor
sub
imul
sahf
sbb
fsub
jle
jnp
dec
(bad)
lahf
xlat
ins
out
xchg
jge
add
in
add
gs
fcmovnbe
mov
scas
cmps
inc
out
cli
dec
pop
push
aad
lods
jl
add
arpl
cmp
mov
hlt
data16
dec
pop
or
xor
je
push
aas
test
jg
lea
loope
call
pushf
ins
bound
mov
rcl
xchg
dec
test
mov
dec
pop
cmps
movs
cmps
xor
mov
mov
frstor
test
icebp
sub
xor
xor
movs
ss
test
shl
ret
retf
shufps
push
bound
add
dec
jb
jg
(bad)
(bad)
mov
std
adc
dec
(bad)
in
mov
jecxz
ins
js
push
ret
sbb
push
loop
jae
call
inc
test
(bad)
mov
mov
sbb
(bad)
xchg
cli
icebp
inc
inc
in
(bad)
sub
cmp
jo
add
ja
mov
jp
lods
outs
and
jmp
cmp
mov
add
es
pop
mov
mov
inc
fisubr
mov
js
movs
mov
sbb
lods
xchg
mov
add
sbb
or
fnstcw
aad
jo
cld
pop
or
dec
lods
in
repnz
pop
add
nop
xchg
ds
loopne
fyl2xp1
pop
outs
scas
popf
(bad)
dec
clc
inc
sub
int3
cmp
dec
xchg
imul
test
int3
enter
arpl
mov
ret
ficom
add
jnp
aas
nop
or
test
adc
sbb
fdiv
stos
pushf
inc
mov
dec
imul
outs
mov
test
push
popf
lahf
inc
dec
sti
les
movs
xchg
adc
popf
sbb
jmp
adc
ficomp
push
dec
idiv
daa
inc
jg
movs
sub
sub
(bad)
mov
sbb
movs
test
add
into
dec
adc
mov
addr16
xchg
pop
xor
mov
sbb
iret
xchg
pop
ror
jb
inc
inc
inc
test
stc
sub
sti
(bad)
mov
sub
jmp
xor
jl
popf
test
je
xchg
mov
cwde
retf
fidiv
test
fnstsw
add
jmp
sub
ja
pushf
sbb
jne
cs
xchg
das
add
or
xor
mov
pushf
adc
jno
mov
jge
retf
dec
adc
(bad)
xor
push
cmp
jnp
(bad)
lock
in
xchg
sbb
test
fldcw
icebp
or
leave
xchg
add
icebp
cmp
cmps
push
out
dec
lods
xor
sbb
in
je
cmp
cmp
adc
mov
and
xchg
mov
repz
fst
and
sbb
cmp
inc
ds
mov
mov
rcr
stos
jge
mov
mov
fcmovnb
mov
mov
jl
jnp
pop
lea
mov
inc
test
mov
retf
aaa
(bad)
jnp
sbb
cmp
xchg
adc
shl
jmp
inc
je
mov
xchg
and
das
add
cli
(bad)
or
js
mov
pusha
cdq
pop
or
cdq
or
fisub
call
inc
inc
sbb
adc
inc
aaa
xor
push
dec
mov
gs
xchg
stc
and
ret
and
dec
and
pop
mov
in
or
cli
mov
cmc
push
mov
cdq
stc
cs
mov
adc
(bad)
(bad)
sbb
xchg
xor
jae
ds
inc
rol
jg
xchg
jbe
mov
mov
jbe
repnz
loope
outs
js
fstp
sub
cmp
push
mov
in
inc
jnp
adc
in
xchg
mov
xchg
jmp
adc
popa
ja
popa
mov
mov
lock
sbb
fisub
xchg
out
lahf
dec
jb
lds
mov
sahf
lahf
pop
icebp
dec
fmul
push
fimul
push
ja
mov
jo
ins
add
les
jnp
into
or
add
pop
xor
xor
dec
outs
fild
dec
fsub
jae
mov
cdq
(bad)
dec
mov
pop
xlat
fs
mov
bound
mov
xchg
es
dec
cmc
sahf
scas
shr
xchg
lahf
shl
xadd
outs
mov
aaa
jmp
aad
jl
es
push
inc
mov
inc
inc
xchg
push
mov
sbb
pop
sar
pop
mov
fnstenv
fs
imul
dec
or
and
rcr
(bad)
jmp
pop
mov
add
popa
js
cdq
jnp
iret
loope
mov
mov
mov
push
mov
mov
dec
(bad)
pop
push
mov
mov
xchg
xchg
lea
xor
sub
sti
loop
call
lahf
sub
xor
out
mov
pop
xchg
hlt
push
ret
icebp
jno
ja
cld
xor
inc
xor
dec
data16
or
retf
xor
sti
inc
mov
dec
outs
fcomp
stc
pop
fwait
div
add
mov
test
fisub
mov
cmps
js
and
fild
(bad)
xlat
xor
xor
ds
inc
test
jb
jge
cmps
lds
jecxz
js
fstp
pop
xor
adc
add
jmp
push
pop
aad
push
movs
mov
dec
ror
pop
xchg
call
sub
xor
nop
sahf
push
popf
jmp
pop
push
int
scas
adc
shl
sbb
xchg
arpl
cmp
push
mov
jmp
call
jge
sahf
adc
pop
jne
mov
mul
in
cs
pop
mov
add
daa
retf
inc
inc
mov
or
and
movs
sub
sub
mov
push
pop
pop
push
mov
jl
std
mov
xchg
mov
sub
adc
cdq
(bad)
test
and
int3
rcl
ret
cmp
ss
maxps
rcl
lods
push
repz
inc
jg
or
jo
xor
xchg
(bad)
ror
dec
cmp
pusha
cld
call
dec
push
sub
pop
aaa
add
add
imul
pusha
mov
and
(bad)
sbb
jmp
pop
movs
je
mov
push
int3
mov
xchg
in
xor
test
(bad)
in
aas
mov
mov
inc
mov
mov
lds
sahf
jno
sub
cmp
cs
jmp
jb
sub
adc
stos
push
cmp
xchg
adc
push
fwait
(bad)
sbb
neg
sbb
xchg
sbb
jns
push
push
and
sub
movs
pop
mov
je
je
ja
jno
(bad)
test
stos
adc
mov
mov
in
jmp
fwait
add
outs
and
cld
mov
cmp
outs
(bad)
or
cmp
sar
ja
xor
jae
imul
xchg
test
inc
clc
loop
mov
pop
sbb
xor
imul
stos
jo
dec
inc
mov
sub
movs
or
or
test
jl
pop
jp
scas
popa
ffreep
adc
mov
cmp
mov
mov
fild
mov
xlat
jmp
mov
call
mov
cmp
xor
jge
push
add
mov
cli
je
mov
cmps
mov
push
pop
pop
fsubr
es
outs
add
sbb
mov
cmps
aas
jne
shr
jmp
into
pop
loop
gs
dec
std
mov
test
stos
sbb
lock
(bad)
sbb
outs
inc
mov
neg
nop
leave
fisubr
xchg
sub
and
into
pop
lds
sub
jo
inc
ds
xchg
test
scas
or
inc
push
adc
add
cwde
or
psubusb
test
or
inc
pop
cmp
mov
pop
inc
rcr
mov
mov
push
or
(bad)
cwde
shr
cmp
movs
mov
adc
loop
scas
repz
lea
outs
repnz
adc
cdq
adc
popa
mov
push
push
add
push
(bad)
jns
shl
add
add
adc
push
mov
test
pop
add
mov
in
mov
cwde
icebp
add
pop
jb
fstp
(bad)
cld
mov
ss
mov
retf
arpl
fwait
inc
bound
(bad)
jmp
(bad)
ins
push
stos
stos
jno
jg
adc
sar
scas
sub
sbb
push
dec
ficom
sbb
pop
es
ret
xor
out
jle
into
jge
lea
sbb
and
mov
test
in
pop
dec
lods
push
in
call
cmps
sbb
xchg
or
pusha
jle
fnsave
cwde
ret
mov
inc
jmp
(bad)
lods
sub
scas
mov
pop
jle
cdq
mov
push
(bad)
(bad)
imul
sub
xlat
jge
inc
inc
sbb
outs
and
jp
shr
int
sub
jecxz
dec
jg
jmp
sbb
push
shr
fdiv
popf
pop
sbb
inc
daa
cmp
sti
sbb
sbb
stos
push
les
xchg
push
shl
or
push
movs
test
push
add
mov
sbb
loopne
mov
(bad)
sahf
test
jp
or
cmp
inc
imul
push
inc
icebp
mov
hlt
(bad)
jmp
popa
dec
inc
xor
inc
sub
and
ins
(bad)
fistp
pushf
sbb
sbb
sbb
mov
rol
cmp
jl
call
dec
adc
retf
int
xchg
pop
sbb
rcr
jecxz
inc
pusha
mov
push
(bad)
jb
sub
ds
shl
pop
call
outs
arpl
mov
in
sbb
(bad)
jo
fbld
pop
xor
inc
push
push
adc
jmp
sbb
inc
inc
mov
setbe
hlt
fst
test
nop
pop
fnstsw
loop
mov
xchg
xchg
sbb
sbb
(bad)
lock
pop
loope
xchg
ret
push
stos
movs
dec
div
sub
push
lock
outs
shl
bound
mov
mov
add
mov
aas
mov
xor
dec
dec
mov
inc
mov
add
stos
xchg
rol
js
and
cmp
in
push
(bad)
hlt
mov
aam
icebp
mov
push
xchg
fidiv
test
shl
inc
icebp
aam
cmc
and
sbb
int
call
or
lea
dec
xchg
ins
out
retf
pop
in
sbb
rol
mov
push
fisub
das
jae
adc
jnp
mov
sbb
fld
int
xchg
int
jno
pop
push
push
lods
dec
icebp
mov
xchg
imul
add
xlat
mov
movs
mov
dec
fistp
dec
call
mov
jmp
push
jmp
daa
mov
repnz
cli
and
cwde
or
stos
dec
pop
dec
mov
inc
fsub
and
sbb
adc
js
pop
xchg
add
data16
cmp
xchg
add
xchg
ficomp
retf
inc
add
sub
xchg
hlt
pop
mov
mov
and
mov
mov
lods
scas
pop
cmps
push
pop
in
test
cmp
fimul
push
into
sub
out
fsubr
aaa
dec
xchg
fs
outs
pop
or
cmp
inc
repz
pop
pop
into
inc
outs
fs
cwde
pop
mov
fisttp
mov
push
cwde
rcr
jle
call
inc
in
pushf
adc
scas
hlt
sub
xchg
adc
div
xchg
stos
fistp
push
cwde
mov
inc
and
out
addr16
mov
and
into
mov
in
jno
rol
inc
add
add
sbb
fwait
jns
sar
pop
cdq
mov
cmp
xor
(bad)
dec
rol
std
dec
popa
jno
and
jge
test
and
idiv
ja
push
xchg
xchg
jmp
mov
seto
in
cli
les
xchg
lods
inc
loope
scas
or
or
and
cs
cmp
mov
mov
pop
(bad)
cmp
add
add
jmp
xchg
mov
xchg
stos
sti
ins
push
add
(bad)
xchg
add
add
inc
bound
jbe
fsubr
inc
mov
mov
xchg
jo
jg
sahf
xchg
sub
inc
jg
mov
push
inc
aad
mov
fist
mov
lods
add
jmp
repz
push
or
stos
aaa
sub
xchg
lds
cld
hlt
pop
sar
pop
inc
add
push
cmp
add
fs
ret
fcomp
imul
mov
xchg
push
test
and
dec
nop
loope
pop
xchg
retf
(bad)
pop
cli
popf
(bad)
aam
ret
xchg
fdivp
adc
mov
out
shl
pop
mov
push
jmp
stos
es
cmp
retf
sahf
inc
pop
pusha
cmp
outs
pop
or
adc
test
popf
jmp
xchg
retf
push
xor
sub
add
scas
pop
mov
cmps
inc
push
cmp
cmp
jmp
jne
js
push
mov
jnp
rcr
aad
xor
outs
cmc
cmp
mov
xchg
(bad)
inc
push
test
cmp
or
lock
inc
fs
mov
popf
mov
jg
mov
(bad)
pop
jge
inc
mov
add
cmp
mov
nop
adc
and
fs
sbb
pop
std
dec
add
test
jge
mov
outs
in
cdq
add
call
dec
xchg
cdq
adc
test
jo
lahf
div
es
cmc
add
fs
scas
(bad)
jg
xor
jmp
jmp
jbe
fwait
inc
pop
push
adc
or
cld
and
xchg
sub
mov
xor
or
mov
retf
inc
lods
fadd
out
mov
ret
cmps
mov
pop
not
xchg
and
fs
xchg
addr16
loope
movs
aad
push
sbb
icebp
sbb
xor
dec
es
add
imul
pop
or
dec
cmp
pusha
(bad)
mov
inc
rcl
inc
or
push
call
add
xchg
fmulp
mov
cmc
add
push
neg
popf
adc
mov
mov
cmc
push
stos
mov
pop
fcomp
loop
xchg
sbb
shr
scas
dec
call
dec
lock
into
inc
cdq
cmp
mov
outs
cmp
ins
cmp
mov
pop
aad
out
icebp
das
xchg
xchg
je
dec
xor
lea
jg
jb
popf
push
and
mov
dec
shl
dec
(bad)
xlat
jge
sbb
lahf
sub
call
cmp
jp
mov
push
pop
in
xchg
xor
retf
mov
gs
dec
cmps
push
push
das
aam
fld
cs
jns
test
adc
mov
ret
(bad)
mov
out
sub
add
enter
or
xchg
sbb
ds
inc
je
or
dec
add
push
popa
loop
add
inc
dec
inc
mov
std
pushf
test
jmp
mov
fwait
cmps
test
and
inc
pop
xchg
call
jecxz
jl
scas
adc
retf
push
retf
sub
sahf
or
es
gs
scas
add
rol
clc
or
hlt
inc
cmp
xor
jo
push
sbb
mov
push
inc
loopne
pushf
add
lock
shr
jbe
jnp
mov
fwait
addr16
mov
jmp
retf
sub
cs
rcl
lods
idiv
out
cli
dec
sub
fnstcw
inc
cmp
xchg
imul
ins
jmp
mov
pop
sub
movs
mov
pop
sub
sbb
push
adc
rcr
imul
push
xor
xor
and
push
lea
(bad)
shl
xchg
push
hlt
mov
clc
(bad)
cmps
or
pop
mov
movs
ret
dec
popa
cmps
mov
xchg
icebp
(bad)
jnp
dec
int
add
cli
mov
gs
inc
imul
mov
dec
inc
mov
aaa
imul
mov
or
mov
daa
xchg
sbb
test
stos
inc
add
add
stos
mov
stc
pop
pop
jns
div
xchg
outs
in
mov
pop
xlat
aad
add
pop
mov
inc
pushf
test
shl
dec
bound
imul
daa
cmp
mov
je
sbb
inc
ficomp
pusha
xchg
dec
push
jbe
cwde
lods
mov
sub
dec
jmp
push
push
push
inc
(bad)
cmp
push
jl
sub
push
inc
xchg
das
pop
cwde
movs
test
(bad)
sbb
dec
push
mov
jle
imul
add
inc
mov
jb
fiadd
mov
stos
jno
sub
aad
ds
push
inc
and
call
or
sub
cmps
pop
(bad)
aad
xchg
loope
pusha
push
push
in
and
sub
mov
inc
pusha
xchg
adc
call
cld
mul
repnz
movq
pop
call
cwde
pop
or
enter
fsub
dec
mov
push
lods
mov
xor
sti
(bad)
jmp
sub
or
(bad)
dec
clc
inc
push
and
je
outs
and
jmp
ror
fsubrp
or
mov
push
out
ss
add
jnp
lods
ja
mov
add
or
jmp
mov
fstp
jnp
mov
mov
push
xchg
(bad)
mov
and
stos
repz
rcr
cmps
mov
dec
mov
mov
and
loop
ins
scas
aad
lds
xor
adc
test
and
xchg
jg
push
mov
ins
stc
fcom
les
aad
ins
jg
push
push
into
je
sbb
aam
inc
(bad)
cmps
test
fcom
repnz
inc
mov
arpl
mov
(bad)
sub
jp
mov
cmp
test
daa
sub
cli
(bad)
enter
je
pusha
shl
jge
cs
jle
mov
bound
inc
pop
inc
ss
push
mov
into
push
icebp
or
push
mov
loope
inc
push
jnp
stc
cmps
push
shr
repnz
jle
mov
js
rcl
sub
in
push
cmps
clc
jne
std
adc
loop
mov
rol
scas
fnstenv
cmp
ror
lock
pop
inc
ja
mov
jo
outs
xchg
mov
sbb
clc
or
cli
push
inc
push
add
cmp
add
sbb
sbb
popf
pop
aaa
mov
push
mov
test
dec
sub
rcr
(bad)
jns
inc
scas
push
cli
mov
dec
in
call
push
aam
scas
cs
fs
mov
pop
jo
add
shl
ins
inc
mov
and
inc
(bad)
adc
dec
test
sbb
gs
out
stos
mov
jmp
jo
add
add
mov
xor
jge
mov
jnp
mov
ds
into
call
test
js
sub
mov
mov
and
not
mov
repz
scas
push
jge
test
div
test
repz
or
pop
test
sbb
jno
arpl
sub
jae
mov
scas
ds
(bad)
pop
iret
nop
add
inc
(bad)
sbb
add
pusha
icebp
cmp
push
out
outs
dec
scas
or
sbb
mov
fisubr
pop
les
pop
mov
outs
sub
inc
lock
in
popf
sbb
push
xchg
mov
jmp
jecxz
mov
inc
iret
sub
cld
inc
push
mov
cmp
dec
nop
repz
inc
clc
adc
pop
cmp
mov
adc
(bad)
dec
pushf
out
jno
retf
inc
arpl
hlt
inc
aaa
jnp
xor
hlt
outs
jno
or
mov
push
pop
retf
in
mov
(bad)
adc
push
mov
xchg
pop
fwait
leave
call
clc
jnp
test
pop
leave
inc
xchg
cmps
mov
sbb
pop
push
mov
mov
mov
mov
fcomp
inc
sub
vcvtpd2ps
adc
dec
shl
mov
test
pop
into
mov
pusha
adc
pop
adc
adc
aam
inc
scas
push
cmp
dec
inc
scas
scas
mov
push
dec
cld
iret
sti
pop
test
dec
inc
mov
jl
out
inc
shl
and
push
test
sbb
fwait
stos
outs
pop
ror
scas
jmp
scas
inc
xchg
push
call
cmp
ins
popf
xor
clc
pop
push
dec
mov
nop
scas
dec
sub
jnp
fidivr
cli
outs
dec
gs
xor
fs
pop
push
sub
arpl
inc
jmp
out
outs
pop
xchg
jle
shl
mov
sbb
sbb
in
sar
jl
mov
into
loop
scas
jmp
dec
mov
xor
aaa
repz
fwait
xor
sbb
or
adc
enter
aas
cwde
out
arpl
inc
retf
push
push
sub
inc
ins
mov
add
mov
stc
jmp
add
mov
push
ret
(bad)
mov
es
(bad)
xchg
cmp
pop
icebp
popf
fidiv
mov
repz
out
repz
mov
adc
sub
jmp
jae
das
push
push
scas
aaa
or
movs
mov
rcr
xchg
mov
jp
(bad)
and
jnp
pop
sbb
imul
inc
mov
jnp
lods
dec
adc
imul
(bad)
jnp
dec
pop
push
cmps
imul
fimul
les
dec
int3
mov
test
pop
add
test
out
mov
adc
cmp
je
cmp
es
dec
mov
add
test
cwde
push
sub
inc
int
jge
clc
dec
dec
push
inc
jmp
pop
call
inc
push
mov
push
scas
xchg
sti
xor
xor
xchg
iret
in
add
inc
pop
sub
fstp
rol
cmp
loopne
or
dec
xor
push
mov
cmp
lock
jecxz
pop
jmp
cmc
xor
adc
fbstp
and
jle
push
cs
es
aam
in
hlt
es
pop
or
inc
aaa
push
add
pop
test
push
dec
jp
lea
retf
add
jnp
mov
cmps
sar
jmp
inc
xor
leave
jle
cli
test
dec
fwait
test
mov
cdq
stos
pop
repnz
stc
or
(bad)
stos
gs
add
sub
shl
jl
dec
inc
push
dec
xor
push
xchg
pop
jl
aaa
ret
pop
and
mov
jl
xchg
jnp
test
mov
fucom
xchg
xor
jae
test
lock
fwait
call
push
(bad)
cli
fs
lods
fs
popf
test
adc
xchg
loope
jmp
xchg
dec
aad
xor
sub
fld
adc
push
call
push
int3
dec
int3
enter
jge
inc
inc
in
cmp
pop
stos
imul
sbb
mov
sbb
cmp
mul
les
pop
scas
push
sahf
out
cwde
in
xchg
dec
rcl
mov
xchg
pop
xchg
popf
mov
sub
dec
ja
mov
in
shl
inc
pop
loop
dec
retf
es
adc
xchg
scas
(bad)
fistp
fs
cmp
daa
dec
cmps
mov
fisttp
int3
sbb
inc
loopne
outs
inc
adc
out
or
sub
xor
sub
scas
fwait
ds
bnd
add
daa
mov
les
xchg
push
popf
or
(bad)
mov
pop
mov
pop
jae
mov
fist
lods
mov
daa
xor
daa
sti
cmp
ins
arpl
stos
push
sbb
mov
jg
lea
cwde
jmp
adc
mov
cmp
in
dec
scas
ja
mov
pushf
or
sub
jecxz
movs
sbb
out
push
pop
inc
pop
mov
in
dec
(bad)
mov
clc
push
adc
call
xchg
pop
pop
mov
loop
test
xlat
inc
imul
in
push
aaa
cmp
(bad)
loop
cld
adc
jno
cmp
daa
movs
push
push
ins
lods
cdq
xchg
mov
push
scas
je
aam
mov
pop
bound
(bad)
adc
inc
arpl
imul
aaa
mov
cwde
aaa
add
ins
cli
out
inc
adc
pushf
dec
sbb
mov
mov
mov
sub
les
mov
cmp
add
xchg
adc
out
loopne
clc
(bad)
jns
in
mov
inc
and
cli
pop
inc
sub
sbb
sbb
popf
xchg
mov
sbb
pop
jmp
jnp
jno
les
push
xor
mov
jo
(bad)
push
pop
rol
pop
jmp
mov
int3
aam
inc
shl
rol
outs
arpl
inc
test
push
fdivp
mov
mul
in
shl
arpl
add
jmp
scas
push
lock
sub
cmc
hlt
int3
jge
xor
push
mov
pop
dec
test
retf
int3
xor
pop
loopne
adc
xor
push
push
jle
test
or
xchg
pop
pop
cmp
call
fidiv
iret
aad
out
mov
repz
loopne
xchg
popf
ffreep
or
adc
inc
inc
mov
dec
xlat
je
sbb
cmp
pushf
inc
push
sbb
es
pop
xchg
(bad)
mov
rcr
(bad)
(bad)
cmp
fild
jge
lds
or
or
icebp
pop
retf
and
bound
push
xchg
mov
xchg
push
sub
xor
je
sar
mov
xchg
stos
pop
adc
stc
repz
inc
neg
pop
inc
jmp
leave
mov
loop
ja
xchg
jbe
dec
retf
push
mov
lock
in
inc
jns
mov
push
cmp
scas
shr
cdq
mov
mov
sub
adc
jns
and
inc
inc
mov
sbb
sbb
call
inc
ins
fwait
pop
fsub
sti
jno
mov
fprem
xchg
sub
push
mov
outs
jp
mov
add
test
push
sbb
out
sbb
pop
cdq
ins
dec
and
mov
cli
inc
sahf
loope
sub
loope
push
pop
sub
xchg
sbb
dec
dec
into
inc
pop
lods
mov
push
aas
pop
jno
in
mov
retf
in
add
sbb
mov
gs
out
data16
mov
fst
cmc
adc
shr
stos
ins
data16
sahf
cmps
pusha
add
popf
cmp
fwait
pop
sti
imul
(bad)
and
and
mov
push
cmp
(bad)
scas
cmp
scas
inc
stc
xlat
jge
out
add
jb
fdiv
sub
add
lock
pop
movs
pop
adc
mov
xchg
int
adc
sbb
push
inc
mov
pop
mov
mov
mul
mov
sbb
pusha
push
xchg
repnz
scas
mov
dec
or
shl
shl
xchg
jbe
pop
mov
push
sub
and
clc
jo
int
bound
xor
and
cld
pusha
adc
and
mov
jp
scas
mov
sti
jp
ds
pop
loop
xchg
data16
pop
ss
mov
nop
inc
mov
jnp
cmps
nop
mov
xchg
cmc
es
mov
(bad)
ss
adc
jmp
jle
cmp
xor
cmps
movs
mov
xor
std
addr16
jmp
ret
jb
ss
cmp
pop
mov
mov
mov
cmps
add
add
sbb
test
outs
dec
mov
retf
test
data16
xchg
pop
xchg
mov
or
mov
dec
js
mov
shl
mov
push
or
in
std
jg
cmp
xor
xor
or
xor
cli
mov
xchg
cld
add
pop
ret
add
cmp
das
aad
pusha
mov
inc
test
push
cmps
test
sahf
ret
add
imul
fild
loope
shl
sar
sar
out
add
sbb
adc
test
repz
out
(bad)
in
sahf
xor
jg
cs
push
icebp
xlat
retf
or
and
or
dec
cmps
xor
or
mov
fild
in
xor
add
inc
imul
xor
jg
fisttp
lahf
or
inc
push
pop
jecxz
mov
rol
add
(bad)
xchg
iret
in
retf
mov
stos
jne
jle
movs
mov
dec
scas
imul
mov
aaa
xchg
ret
fild
out
xchg
sub
or
sbb
retf
lock
sbb
cmp
dec
sub
mov
push
jmp
out
frstor
stos
xchg
jl
push
xor
cmp
mov
pop
dec
sahf
dec
xor
push
pop
cdq
ror
jmp
clc
add
inc
jbe
lds
sahf
ins
in
jmp
cmp
sbb
cs
mov
repz
shl
mov
mov
into
sbb
sbb
inc
cmp
push
stos
(bad)
mov
xor
cmps
retf
add
pop
retf
cmp
cmp
mov
mov
mov
dec
out
lods
call
mov
fistp
pop
addr16
dec
xchg
loope
adc
(bad)
cld
test
mov
cwde
xchg
dec
xchg
jp
mov
xchg
push
sbb
frstor
lea
sub
lock
and
jl
shl
pop
mov
mov
inc
std
aad
mov
pop
push
add
loopne
sbb
add
and
adc
pop
adc
mov
in
in
mov
inc
in
add
pop
lock
sahf
push
xchg
adc
xchg
jl
mov
add
pop
xchg
stc
xchg
je
pop
in
sbb
inc
lahf
or
or
adc
add
movs
stos
mov
ret
test
mov
sbb
and
fidivr
rcr
pusha
in
mov
xor
out
fwait
aaa
sahf
int
jmp
jb
mov
loopne
ror
rcl
pop
enter
clc
sbb
scas
add
mov
jmp
xchg
in
repz
ins
test
lock
sub
call
sub
xor
mov
mov
clc
ins
(bad)
sar
push
sbb
fs
dec
dec
ret
mov
dec
mov
call
push
push
pop
std
iret
mov
adc
lds
xchg
loope
mov
xchg
sbb
fist
cdq
xchg
cmc
sbb
les
test
lods
mov
not
or
sub
int
pop
rol
cs
xor
jne
mov
dec
repnz
sbb
and
push
es
sbb
or
jae
mov
mov
enter
mov
add
dec
retf
cmp
leave
mov
mov
or
hlt
scas
or
imul
add
ret
scas
les
mov
shl
scas
imul
jnp
inc
mov
inc
and
mov
enter
addr16
call
add
mov
and
ins
inc
adc
inc
daa
xor
stos
mov
in
push
ins
fwait
push
cld
ret
ret
aad
adc
sar
out
xchg
lods
leave
mov
cmp
xchg
mov
xor
ds
int3
pop
ret
xor
dec
dec
xchg
xchg
inc
rcr
jno
(bad)
jo
push
aaa
jmp
adc
ss
sbb
and
jns
xchg
inc
xor
aas
inc
mov
dec
(bad)
aam
inc
xchg
jmp
pusha
xchg
push
fcmovnb
loop
cmps
mov
jne
in
adc
icebp
inc
mov
sub
mov
loop
xlat
call
in
lahf
(bad)
aad
fist
sub
(bad)
int
les
daa
push
mov
push
and
stos
rol
fwait
in
cmp
and
mov
xchg
jno
mov
mov
shl
pop
leave
mov
sbb
aam
xchg
imul
push
iret
cli
test
cmps
ror
(bad)
bound
cmps
test
mov
hlt
pop
pop
mov
pop
fiadd
dec
pop
sbb
aad
sub
ds
sbb
dec
mov
ror
sbb
imul
inc
adc
inc
aaa
inc
and
es
xor
data16
and
stos
sti
and
push
xchg
std
jno
pop
inc
arpl
dec
xchg
scas
loope
std
jmp
int3
push
cmps
sahf
idiv
pop
pop
xchg
or
leave
in
dec
and
sub
fmul
enter
jle
dec
scas
or
call
mov
push
lock
aam
test
frstor
aas
jg
sbb
inc
imul
mov
mov
sbb
into
in
pushf
(bad)
pusha
fistp
inc
cdq
inc
fisub
mov
retf
es
fimul
in
mov
scas
imul
repz
jmp
ins
jne
movs
ins
out
pop
test
jmp
jg
cwde
das
jle
mov
jne
mov
dec
into
fiadd
shl
arpl
inc
adc
sub
add
and
(bad)
mov
pop
in
xchg
pop
push
arpl
jmp
loope
add
jmp
push
ret
sub
cmps
jmp
iret
xor
mov
mov
xchg
mov
push
repz
sbb
in
bound
mov
xor
pop
xchg
mov
nop
or
test
loope
or
hlt
pop
jg
or
cmp
xor
scas
pop
pushf
adc
inc
inc
mov
inc
cdq
or
call
inc
loopne
pop
jae
jle
fadd
or
popf
je
shl
xchg
push
leave
push
sbb
xor
test
xchg
scas
inc
(bad)
jo
push
daa
adc
(bad)
arpl
push
jo
dec
mov
ins
or
xchg
leave
cwde
adc
fistp
repz
sbb
sbb
and
mov
adc
and
mov
retf
in
jecxz
mov
push
in
jne
test
xor
push
cmp
(bad)
cmps
xor
pop
cdq
cmps
mov
ins
sbb
dec
sbb
mov
push
rcr
pop
sub
retf
sar
imul
scas
sub
arpl
(bad)
adc
test
shl
mov
inc
out
and
cmp
adc
pop
push
or
cmp
int3
sub
jmp
fsub
inc
cwde
das
mul
movs
addr16
mov
mov
test
dec
scas
inc
add
xchg
lods
cmp
xlat
mov
(bad)
push
lea
xor
mov
out
cs
cmp
daa
inc
cs
xor
push
call
sbb
lock
aad
inc
dec
push
out
or
data16
mov
jmp
or
xlat
adc
xor
xor
pop
mov
dec
lds
push
scas
ja
xchg
fiadd
icebp
out
rep
jl
rcl
lods
push
(bad)
repz
mov
xchg
and
(bad)
fcom
call
int
add
pop
into
daa
jp
pusha
fbld
inc
std
je
pop
xchg
xchg
mov
xchg
leave
or
fiadd
add
daa
aas
mov
jae
ret
xchg
fs
cmp
imul
xchg
pop
ficom
sub
xor
push
shl
sub
mov
enter
cdq
jl
mov
ins
iret
dec
lock
adc
shr
cs
outs
pop
inc
cmps
dec
cmp
mov
out
(bad)
fisttp
mov
jg
pusha
adc
data16
shl
imul
add
or
dec
in
jne
cdq
imul
cld
cwde
pop
sar
mov
repnz
lods
mov
ret
inc
cwde
add
mov
cld
lock
inc
xlat
inc
out
sbb
cmp
jmp
pop
xchg
cmp
or
cmp
je
inc
xor
popf
movlhps
jbe
retf
rcr
adc
push
or
push
retf
sub
dec
xchg
pop
(bad)
mov
or
xchg
retf
cwde
pop
bound
push
cli
mov
lahf
jbe
mov
lea
out
xchg
mov
pop
cmpxchg
(bad)
das
inc
into
in
neg
ins
int
stos
sub
fldenv
es
ja
mov
push
stos
leave
or
test
sti
shl
out
jg
jge
out
xor
sbb
es
neg
stos
or
or
sbb
cmp
(bad)
data16
jg
mov
jmp
test
cmps
add
shl
psubsw
mov
(bad)
xor
mov
xor
es
aad
(bad)
push
lods
ss
sub
lahf
sbb
outs
fnstsw
pop
jp
xor
jbe
movs
test
or
fidivr
neg
push
imul
adc
pop
push
mov
inc
xchg
cmp
mov
or
mov
dec
pushf
rol
cmp
lds
test
cmc
dec
stos
arpl
mov
jecxz
(bad)
imul
jbe
jp
push
pop
dec
in
retf
cld
inc
push
push
cmp
imul
xchg
xchg
cwde
mov
cdq
fiadd
mov
add
inc
jmp
add
pop
js
push
ds
push
ins
cmps
retf
sbb
inc
clc
stos
xchg
push
mov
push
std
dec
popa
sub
cli
ins
call
jecxz
shl
sub
dec
mov
ret
xchg
test
fdivp
retf
data16
mov
push
cmp
jl
or
adc
mov
lds
out
and
popa
sbb
cmp
add
arpl
adc
sets
jge
into
mov
pushf
bound
movs
imul
(bad)
loop
rcl
aaa
shl
fcmovnbe
push
nop
sbb
outs
adc
clc
xchg
fstp
jne
jne
or
adc
(bad)
scas
inc
ret
pop
pop
pop
pop
fwait
sbb
xor
je
test
sbb
aam
cwde
sar
inc
clc
and
pop
push
xor
or
jbe
jo
mov
jb
test
pop
inc
sub
scas
stos
and
jge
sub
lds
fsubr
(bad)
lods
cmp
arpl
mov
xor
aam
xchg
add
sub
dec
push
aaa
aad
fistp
inc
add
outs
movs
pop
and
lods
cdq
mov
adc
sbb
clc
pop
inc
pop
and
and
jnp
cmp
js
lods
jno
mov
dec
lods
mov
addr16
scas
mov
sub
ror
cmps
imul
ret
jl
les
adc
jecxz
ins
rol
pushf
mov
mov
xchg
data16
in
fsubr
pop
arpl
scas
adc
jl
and
jbe
test
and
mov
xchg
or
shr
retf
jnp
(bad)
push
add
test
test
stos
push
addr16
xchg
inc
and
dec
cdq
iret
movs
cmp
sti
push
fisub
js
push
stc
mov
xchg
push
shr
or
fistp
mov
xchg
out
mov
add
rcr
into
js
push
jle
jns
cmp
mov
mov
fldcw
jg
rol
pop
aad
cs
xor
pusha
adc
mov
and
out
and
jno
jo
fwait
in
call
lahf
jg
int
xchg
or
repnz
fwait
cmc
pop
mov
mov
sbb
in
ret
fbld
lods
stos
inc
fwait
sub
xor
ret
mov
es
(bad)
inc
test
push
mov
mov
ss
rcr
int3
pop
jge
ss
jo
pusha
mov
sbb
mov
sbb
cmp
dec
inc
jmp
sbb
jno
ins
rcr
pushf
dec
mov
hlt
push
xchg
outs
movs
call
xchg
mov
sbb
std
rep
retf
mov
daa
sbb
ror
iret
jns
inc
jl
ins
fisttp
outs
je
xor
pop
out
cmps
retf
adc
and
xor
inc
push
pop
xor
sub
jg
sbb
scas
push
or
imul
add
sbb
bnd
jg
jl
outs
icebp
(bad)
(bad)
dec
loopne
cmps
dec
out
jg
out
sar
mov
xor
hlt
cmp
icebp
aad
dec
mov
push
sbb
sar
dec
out
inc
and
pop
sub
mov
neg
fistp
fdiv
pop
push
mov
cmp
pop
mov
lea
fcomp
inc
popf
movs
mov
inc
pop
pop
(bad)
and
std
pop
xchg
ds
dec
test
xchg
mov
mov
jmp
in
aaa
fdivr
cmps
mov
les
test
dec
into
sub
aad
out
sub
pop
jae
cmp
jb
test
push
pushf
fsub
add
int
xor
pusha
mov
xchg
add
imul
and
push
inc
or
loope
xchg
ds
rol
std
pop
cmovbe
inc
mov
xor
lock
bound
mov
xchg
adc
loope
test
mov
dec
sbb
(bad)
aad
push
in
push
inc
cmps
push
or
mov
xchg
std
add
or
mov
inc
jae
jbe
shr
inc
not
mov
cwde
fadd
or
cdq
pop
icebp
cdq
cmc
and
loop
adc
out
cmp
inc
scas
xchg
mov
or
push
test
stos
mov
addr16
fstp
pop
aad
and
fdivr
in
and
xor
cmp
pop
sbb
cmp
ret
leave
mov
out
repnz
test
dec
loopne
cmp
cmp
cmp
stos
dec
or
mov
in
mov
mov
add
add
cmp
out
sub
push
dec
test
xchg
or
test
push
pushf
pop
pop
out
xor
int
xchg
lods
loope
dec
mov
ins
jecxz
fstp
and
int3
fstp
aaa
ja
inc
stos
imul
loopne
or
icebp
cmps
mov
sar
int
pusha
pusha
add
adc
pop
lahf
adc
pop
push
(bad)
push
sub
mov
dec
sbb
int3
add
cmps
dec
hlt
popf
loope
mov
mov
(bad)
mov
sub
(bad)
outs
xchg
mov
push
arpl
lahf
mov
hlt
clc
cdq
hlt
(bad)
cmp
cmps
push
lds
xor
cs
int
imul
push
pop
je
inc
sub
mov
shl
add
ficom
pop
sbb
add
xor
sub
jmp
clc
xor
lods
loope
mov
jg
inc
jns
fstp
mov
dec
test
xchg
pop
or
jnp
clc
pushf
loop
fbld
mov
sti
cld
lods
shl
inc
jg
pushf
jae
inc
fstp
sbb
int
leave
pop
fadd
pop
mov
pop
pusha
cwde
or
lds
push
jecxz
fucomi
pop
dec
pop
and
inc
push
add
add
pop
dec
mov
push
lods
mov
dec
(bad)
in
mov
leave
push
jno
xchg
ret
sti
inc
xchg
enter
mov
xor
shl
cmp
scas
sbb
mov
dec
mov
scas
sbb
fdivrp
loopne
cdq
add
ins
mov
popa
xor
enter
pop
(bad)
xchg
aam
adc
jmp
push
add
and
sbb
popf
adc
sub
retf
test
mov
sbb
addr16
jg
and
mov
ja
loopne
cs
xchg
and
sbb
mov
mov
xchg
scas
fsubr
mov
fst
ret
addr16
sbb
ins
mov
inc
push
mov
pop
jle
retf
xor
push
clc
fld
(bad)
sbb
ss
cmp
ja
dec
bound
jnp
sub
fbld
cld
ins
push
push
fdiv
mov
mov
push
test
mov
mov
dec
inc
xchg
mov
arpl
(bad)
xchg
fmul
ins
inc
mov
jne
and
or
sub
out
fstp
add
and
adc
dec
lods
push
pop
(bad)
out
mov
xchg
cmp
das
mov
jp
add
inc
xor
sbb
fcom
lahf
push
pop
stos
mov
out
test
jp
inc
jbe
lods
push
call
shr
push
jecxz
jg
call
ja
mov
imul
(bad)
retf
aad
dec
cmc
xchg
jae
push
aas
add
rol
push
lods
cmp
dec
and
xchg
mov
retf
test
dec
and
adc
add
push
test
inc
or
mov
jmp
rcl
sbb
in
jmp
xchg
into
out
xchg
cmp
(bad)
mov
repnz
xchg
imul
ffreep
cmps
aam
inc
jns
mov
xor
dec
fdivp
ret
and
cmp
mov
mov
mov
or
push
repnz
pop
mov
jns
inc
sub
or
dec
je
xchg
sub
cmps
syscall
fdiv
arpl
xor
in
out
test
push
fld
xchg
sub
mov
or
dec
add
cld
popf
and
cdq
mov
mov
fucom
lock
push
shr
cmp
or
and
cmp
cmp
push
stc
jbe
pop
(bad)
cmps
mov
out
arpl
inc
jmp
daa
stos
sbb
jp
fidiv
mov
pop
mov
(bad)
adc
idiv
fcomp
jne
xchg
scas
aam
xchg
hlt
mov
pop
(bad)
test
in
lods
test
int
movs
push
jge
xchg
mov
cmps
into
xchg
mov
sub
push
(bad)
neg
ja
inc
push
push
dec
sahf
push
pop
dec
mov
mov
sub
and
pop
lds
jl
and
inc
adc
push
test
fs
pushf
xor
jae
mov
(bad)
into
or
loop
shr
jae
(bad)
fisubr
idiv
push
lods
(bad)
mov
or
mov
cmp
sbb
aam
pop
inc
data16
push
outs
test
test
jge
enter
packuswb
dec
call
and
jl
movs
push
sub
mov
(bad)
cmps
movs
adc
arpl
jb
mov
jnp
mov
jno
xchg
inc
dec
into
retf
jmp
cmp
fs
cmps
adc
jmp
ss
add
push
enter
pusha
mov
imul
cmps
lods
ret
fistp
into
rcr
mov
push
in
ds
adc
in
push
stos
aas
sbb
(bad)
ins
(bad)
out
cmp
outs
pop
cmps
sub
popf
retf
cmp
mov
fsub
mov
mov
aaa
fstp
scas
nop
xchg
adc
rol
nop
jecxz
inc
outs
out
cmps
pop
shl
cmp
ror
add
pop
mov
jno
or
mov
arpl
jmp
adc
add
ss
movs
imul
push
bound
sub
add
push
push
mov
cmp
loope
push
popf
nop
add
repz
lods
or
add
fwait
jle
fwait
mov
add
retf
ret
bound
fisub
push
cli
sub
lods
push
dec
mov
dec
es
mov
xchg
sub
repz
(bad)
aam
xchg
hlt
push
pop
pop
cmp
add
or
ret
adc
mov
xor
ss
int3
out
mov
mul
pop
movs
push
xlat
fadd
dec
call
pxor
nop
and
shr
fwait
mov
es
fucomip
xchg
fdivr
jg
jmp
jmp
jnp
add
jp
sub
jle
and
lahf
lahf
cmp
in
data16
test
inc
ja
sbb
adc
sub
fistp
nop
cmp
test
cmp
xor
leave
loope
(bad)
mov
jb
mov
(bad)
cld
cmp
mov
dec
out
(bad)
mov
scas
cdq
fcomp
mov
out
mov
movs
mul
cmp
in
jbe
sbb
dec
mov
mov
rol
fs
test
push
adc
mov
(bad)
jecxz
movs
fadd
or
add
pop
int3
pop
mov
pop
mov
mov
mov
inc
or
in
movs
inc
rol
inc
fdiv
cmps
or
sbb
cmps
mov
in
into
aas
mov
pop
mov
(bad)
ret
shl
lea
adc
jmp
fdiv
bound
or
pop
in
lock
push
cmc
cmp
add
add
pop
push
fwait
outs
add
dec
dec
in
fwait
imul
dec
retf
adc
push
outs
xchg
and
mov
out
ret
pushf
push
push
(bad)
hlt
mov
xchg
inc
icebp
xchg
xlat
cs
push
inc
cdq
mov
hlt
mov
call
xor
dec
out
ds
cmp
enter
xor
ins
mov
jb
or
or
sbb
lock
test
jl
push
dec
mov
or
jl
add
bound
jns
nop
and
lods
cmps
lea
inc
adc
(bad)
cmc
xchg
sbb
(bad)
jns
adc
fcmovnu
out
movs
retf
rol
and
data16
mov
je
in
xchg
std
cmp
mov
fistp
addr16
pop
sbb
shl
inc
popf
inc
push
or
fisubr
cs
or
xchg
fwait
adc
mov
fwait
mov
add
dec
push
add
push
mov
mov
lods
test
adc
add
xlat
aam
adc
push
push
ins
(bad)
pushf
jmp
jae
mov
lock
sbb
mov
xchg
mov
fadd
lods
mov
sbb
fucomi
and
add
jae
xor
mov
test
sbb
mov
arpl
sbb
mov
mov
mov
add
adc
add
aad
and
push
mov
pop
xchg
loope
aam
pop
sbb
les
in
mov
sbb
mov
repnz
xchg
int
gs
cmp
and
inc
jle
sub
pop
mov
retf
mov
fcmovu
jnp
mov
pop
add
daa
ja
and
aaa
xlat
imul
ja
mov
xor
sub
enter
in
dec
sti
jl
pop
sahf
pop
ret
imul
ror
(bad)
les
push
mov
xchg
das
pop
lock
(bad)
inc
jg
fldcw
imul
and
xor
fs
xor
pop
mov
popf
(bad)
rol
out
jp
fisubr
push
cmp
adc
push
adc
mov
imul
xchg
outs
int3
lods
cdq
inc
xchg
int
leave
dec
outs
bound
jns
(bad)
mov
pop
mov
xchg
ja
imul
mov
xor
fsub
xor
lods
das
add
ret
inc
rcr
jbe
fsubr
test
aaa
jno
les
sbb
cmp
adc
sbb
cmp
jl
test
pop
mov
pop
jmp
popf
or
dec
ret
jmp
push
mov
xchg
push
rcl
sbb
cmps
movs
mov
daa
call
add
dec
test
jae
jo
xor
aaa
xlat
out
frstor
push
add
sub
in
sbb
fnstcw
inc
(bad)
mov
pop
fbld
add
ss
or
push
mov
dec
in
mov
jno
lock
mov
push
mov
outs
fwait
in
neg
fldenv
cli
lea
mov
mov
inc
stc
xchg
jmp
sti
sbb
and
daa
jb
pop
fcom
pop
dec
mov
mov
cmc
jbe
ror
popf
mov
push
inc
fsub
fs
imul
push
mov
fstp
movs
pop
sub
sti
sub
push
and
fsincos
dec
xchg
cmc
pop
cwde
jbe
push
mov
push
mov
mov
retf
les
stos
cwde
int3
cmp
xchg
stos
loop
jns
mov
xor
or
ror
fs
imul
cmp
pop
and
test
xchg
cwde
push
ss
sbb
shr
push
add
dec
cmp
push
xchg
push
xchg
aas
clc
outs
arpl
add
sub
repnz
mov
je
bound
movs
and
scas
(bad)
cmp
retf
cld
out
push
test
mov
cmc
fs
mov
test
stos
out
aam
jg
(bad)
sub
sbb
sbb
mov
jg
push
imul
lods
push
pop
push
scas
fs
retf
sar
cld
xor
push
ret
dec
pop
push
and
call
inc
dec
mov
jle
mov
and
in
loope
mov
add
dec
jg
scas
dec
stc
call
mov
hlt
cdq
xchg
and
push
push
mov
loopne
lea
mov
or
maskmovq
test
push
pop
jo
mov
sub
fisttp
aam
cmps
mov
inc
add
adc
stos
cmp
ja
imul
sbb
xchg
mov
(bad)
cld
mov
stos
mov
ins
jno
sahf
jge
into
neg
cmc
xchg
push
int
inc
and
ror
mov
cmp
lahf
xchg
add
pop
sbb
aad
fld
adc
aad
fld
jl
fisubr
cmp
cmp
pop
movs
popf
retf
stos
pop
and
popa
sti
cld
sbb
sub
push
sub
push
test
fwait
add
inc
movs
push
cmp
imul
adc
inc
out
shl
xor
and
inc
loope
mov
push
sub
lock
pop
repnz
into
xor
pop
pop
mov
int
xchg
(bad)
inc
jge
mov
dec
jmp
fcmovnbe
ror
pop
jg
or
xchg
gs
push
cmps
lds
les
push
jns
mov
pop
out
sub
imul
ins
or
jae
stos
mov
mov
jo
jge
jl
sub
scas
ror
jmp
sub
movs
test
(bad)
dec
mov
mov
mov
xchg
fucomip
popa
pop
icebp
mov
push
and
clc
cld
ret
dec
jl
pop
xchg
aas
dec
pop
cdq
pop
add
lea
add
pop
(bad)
and
mov
es
add
mov
popa
mov
sbb
xor
mul
adc
gs
mov
test
mov
and
retf
mov
dec
arpl
mov
nop
(bad)
fisttp
mov
jns
dec
in
inc
sbb
jp
cmp
pop
mov
jnp
sahf
inc
push
ins
xchg
fbld
int
sub
arpl
out
es
and
xchg
cmp
mov
data16
lods
sbb
inc
sahf
retf
pop
clc
add
xchg
in
mov
sub
sar
popf
xchg
int
(bad)
jle
jecxz
mov
das
rcl
clc
(bad)
inc
mov
(bad)
xor
cmc
pop
jmp
jae
and
inc
cmp
cmc
stos
mov
inc
popf
lea
mov
and
jl
adc
jle
pop
dec
mov
inc
in
mov
aaa
push
inc
loop
mov
mov
inc
sti
dec
jb
popf
pop
icebp
xchg
addr16
xchg
jae
retf
mov
call
add
(bad)
mov
mov
aam
cs
out
mul
repz
dec
mov
sub
call
stc
xlat
cmp
or
or
sar
adc
dec
inc
aad
inc
xchg
mov
cmp
std
mov
(bad)
jmp
dec
jb
mov
mul
xchg
jbe
mov
mov
clc
and
cwde
jp
movs
cmp
jns
ret
ins
rol
push
adc
shr
pusha
sahf
adc
mov
xor
jb
shr
jmp
pop
xor
jb
sahf
or
mov
sbb
test
cs
js
in
cwde
jp
push
inc
mov
xchg
jmp
data16
std
ja
outs
or
icebp
and
out
std
cwde
scas
in
inc
jmp
pop
pop
ret
ror
inc
les
jnp
ficom
pop
dec
mov
mov
xchg
sbb
fmul
retf
into
jno
push
cld
adc
add
and
cmp
scas
jnp
mov
mov
xchg
adc
das
pop
xchg
jmp
push
ins
pop
xchg
and
nop
lds
rcr
out
xchg
sub
jne
mov
push
add
std
mov
shl
cmp
dec
lods
sbb
jmp
jge
lods
push
dec
push
not
pop
test
daa
jmp
out
sbb
sbb
dec
sbb
push
mov
cmps
inc
inc
mov
popa
xchg
mov
iret
test
pushf
aad
inc
outs
sub
leave
outs
cwde
ret
test
lahf
inc
add
(bad)
(bad)
and
adc
sbb
std
sbb
call
fwait
aaa
in
jle
adc
adc
int3
ret
and
sub
mov
mov
jmp
cmp
pop
pop
xor
xor
lods
sub
dec
add
test
adc
in
test
mov
jne
(bad)
test
inc
test
mov
and
in
je
pop
add
scas
aas
add
aam
xlat
les
xchg
stos
ins
nop
push
iret
push
cmp
es
jp
imul
sub
(bad)
add
lock
jns
mov
and
test
dec
xchg
mov
add
(bad)
xchg
xor
enter
fnstenv
sbb
popa
mov
dec
cmps
jmp
fsubr
cld
and
popa
xchg
mov
inc
mov
mov
or
hlt
mov
xlat
popa
sbb
lods
dec
and
mov
pop
shl
pop
sbb
mov
jnp
ds
lods
mov
lea
sbb
pop
loop
add
daa
aam
add
ds
cmps
or
mov
inc
out
xchg
mov
fwait
retf
mov
pop
jbe
dec
les
mov
or
std
pushf
and
pusha
mov
mov
mov
xor
ror
mov
enter
cmp
xchg
cmp
jg
dec
push
or
add
dec
ror
enter
pop
inc
loopne
ds
adc
out
ds
cmp
js
lods
or
xchg
or
add
pop
rcr
push
leave
neg
jle
push
shr
ret
out
call
out
dec
retf
sbb
bound
fwait
jp
add
shl
mov
cmp
shl
mov
(bad)
and
aas
jo
xor
pop
outs
cdq
ret
inc
pop
aam
sar
jo
rol
cmp
sub
arpl
test
inc
push
mov
dec
xchg
sub
mov
cmp
hlt
mov
scas
into
jl
pop
jge
mov
pop
mov
adc
stos
lock
imul
enter
(bad)
fisubr
mov
aaa
sbb
(bad)
xchg
call
jl
lea
pop
push
xchg
xor
mov
push
pop
add
add
sbb
sbb
pop
dec
mov
outs
cwde
test
add
jg
lods
mov
rol
lds
xchg
ret
cmp
mov
pop
or
dec
lock
sbb
mov
ds
(bad)
mov
mov
mov
xor
cmc
dec
ret
jl
mov
pop
mov
retf
(bad)
hlt
pop
jmp
inc
or
inc
or
push
pop
mov
mov
xlat
jle
mov
inc
test
or
(bad)
mov
add
mov
xchg
push
xchg
xchg
jb
icebp
mov
mov
jg
mov
std
lock
pushf
dec
loopne
jmp
retf
in
inc
dec
and
jo
jbe
ins
xchg
stos
nop
int3
aaa
pop
jmp
dec
or
retf
pop
sub
in
pop
mov
fimul
mov
scas
xor
mov
lds
pop
test
test
cdq
popa
ret
mov
mov
(bad)
pop
mov
mov
sbb
pop
lea
inc
sbb
push
or
clc
mov
ja
mov
xor
inc
xchg
xor
xchg
nop
push
mov
es
adc
sbb
push
lods
xor
mov
sub
xor
into
in
sahf
rcr
dec
jnp
popa
aad
lock
loopne
pusha
call
ret
cmc
inc
mov
xchg
push
jle
xchg
cmc
sbb
out
call
lods
mov
cmp
ja
cmp
cmps
pop
je
mov
lds
ret
fidivr
mov
js
mov
pop
mov
sbb
stos
push
outs
mov
imul
in
add
je
js
dec
out
enter
xchg
dec
repz
push
das
(bad)
jmp
cdq
fsub
or
inc
push
add
test
cmp
lahf
mov
xor
rcl
xor
dec
mov
push
xchg
(bad)
and
fidiv
into
outs
dec
gs
or
rdmsr
mov
sbb
or
sbb
lods
not
xor
cmp
stos
xchg
add
sbb
test
xchg
addr16
mov
sub
arpl
mov
dec
mov
cld
ret
mov
ret
bound
popf
cmp
and
sub
(bad)
leave
jmp
fdiv
sbb
push
test
cs
push
div
popf
ror
inc
pop
fadd
dec
es
push
mov
fnsave
shr
test
mov
mov
int
mov
mov
js
mov
lds
jbe
mov
scas
sub
jg
movs
fdivp
pop
mov
movs
xor
fadd
(bad)
idiv
cmp
adc
out
jmp
sub
je
dec
pop
jo
xchg
movs
int
aas
int
fwait
int
test
mov
and
adc
xor
push
bts
jl
shl
hlt
addr16
mov
jle
repz
ret
call
scas
push
pop
xchg
(bad)
lods
mov
lds
and
add
push
retf
sbb
sub
pop
movs
jno
outs
xchg
sahf
stos
iret
push
adc
pop
stos
rep
adc
out
sbb
or
pop
mov
popa
lahf
rcr
int
out
pushf
iret
pop
lock
push
sub
arpl
popf
sahf
xor
xchg
push
or
inc
mov
cmps
out
adc
dec
inc
mov
ret
mov
neg
and
sub
xlat
in
bnd
dec
add
push
les
jl
mov
or
or
jmp
push
inc
push
add
xor
bound
sbb
pop
ins
scas
or
stos
and
mov
jl
cmc
cmp
fistp
inc
push
push
fwait
jne
cmps
sbb
loopne
sar
push
shl
sbb
mov
test
icebp
xor
aam
les
dec
push
xor
(bad)
int3
inc
repz
jl
fstp
and
mov
fiadd
push
jne
mov
add
xor
and
push
call
sub
mov
inc
cwde
repnz
call
out
mov
add
loopne
(bad)
mov
inc
jb
mov
mov
out
sbb
rol
jmp
mov
inc
push
jbe
pushf
mov
push
fsubr
jnp
cli
pop
jb
and
sub
push
jno
xchg
add
jne
push
fcomp
jo
xchg
(bad)
bound
dec
push
shl
or
fsubr
xchg
test
fs
mov
mov
fucomp
cmp
mov
cmp
(bad)
mov
pop
or
jmp
rcr
ss
sbb
fwait
push
pop
jo
dec
inc
dec
(bad)
popf
mov
ret
out
inc
jl
adc
add
test
ins
push
jl
xchg
push
repz
cli
xchg
and
sbb
dec
jmp
inc
aam
push
xor
leave
add
cmps
ja
mov
mov
mov
fistp
xchg
lea
int
test
(bad)
cmc
es
adc
cmp
fcomp
pop
pop
test
mov
stos
and
lods
je
jmp
inc
fidiv
ds
add
dec
mov
data16
push
loopne
cmps
es
aad
aam
pop
sub
jnp
(bad)
in
mov
mov
sar
jbe
sbb
mov
jmp
inc
and
inc
cdq
fmul
je
xor
dec
cld
shl
jge
cmp
cmp
imul
push
vmovntpd
cmc
ds
pop
cs
pop
xchg
push
clc
jns
sahf
adc
xchg
mov
pushf
mov
inc
popf
loopne
fild
jae
fdiv
idiv
mov
rol
cs
iret
adc
xchg
xchg
dec
loop
out
jmp
lds
mov
push
sub
xchg
out
sub
(bad)
xor
outs
mov
or
xchg
lods
mov
ss
inc
rol
push
sbb
pushf
pop
lea
jl
nop
adc
test
lahf
(bad)
mov
rol
pop
and
aam
xchg
fist
sub
lock
push
stos
movs
popf
in
mov
repnz
rol
call
jmp
mov
inc
fdiv
add
inc
fsub
pop
mov
xchg
lods
mov
in
mov
mov
jne
loopne
and
je
jmp
(bad)
jne
fsubr
jp
or
int3
out
mov
pop
in
pop
push
mov
shl
test
or
clc
xchg
mov
nop
sbb
mov
lock
lahf
pushf
je
pop
jmp
sub
aas
add
inc
mov
push
pop
jae
test
popf
push
sbb
pop
mov
and
adc
mov
mov
xlat
inc
dec
call
mov
(bad)
xchg
aas
mov
push
cmp
aas
mov
jecxz
push
(bad)
jmp
fsubr
clc
mov
dec
mov
mov
adc
cdq
inc
out
std
and
mov
in
jle
jno
adc
mov
push
stos
mov
jle
ror
out
inc
inc
cmp
sbb
sbb
jle
jge
popf
jnp
test
mov
shl
xor
jl
dec
test
mov
mov
xor
fiadd
xchg
mov
xor
pop
xchg
scas
push
cmp
jmp
inc
xchg
mov
xlat
inc
fmul
iret
(bad)
scas
shl
add
adc
clc
dec
cmp
lods
xchg
mov
cmp
fst
lahf
rcr
pop
push
loop
das
push
ss
add
push
(bad)
sar
lea
jae
out
adc
pop
inc
daa
test
push
mov
pop
and
xlat
inc
cmc
mov
outs
jg
adc
into
retf
cmp
jecxz
push
sti
push
call
ds
jae
sbb
(bad)
sub
out
mov
inc
jecxz
and
adc
fs
aaa
pushf
and
push
push
xchg
adc
mov
popf
retf
lahf
daa
mov
add
mov
dec
mov
xor
shr
scas
fwait
repz
stos
dec
pop
in
mov
add
sub
pushf
jb
dec
into
or
xor
(bad)
daa
xchg
sub
inc
lods
ins
push
add
xlat
inc
out
lock
push
loopne
aas
push
xor
jmp
push
adc
push
call
cld
xlat
xchg
cmp
ins
lods
inc
jecxz
fld
cld
mov
or
cli
les
mov
push
pop
popf
xchg
popf
adc
fstp
mov
(bad)
pop
pop
mov
aam
and
out
mov
inc
fsub
pop
jns
cmps
outs
bound
mov
pop
jg
mov
scas
add
mul
icebp
inc
dec
jb
sar
jo
sub
jnp
mov
mov
movs
cmp
int3
and
enter
jne
sahf
cs
pop
xchg
mov
outs
pop
sub
sbb
lahf
jl
mov
shl
movs
out
loope
jg
call
sbb
inc
ss
sub
es
xchg
mov
fs
adc
jecxz
adc
lds
push
pop
or
xor
pop
pop
mov
adc
mov
fstp
cmps
inc
mov
push
ror
inc
sbb
sar
xchg
jecxz
daa
les
lahf
shl
lea
add
pop
aas
mov
(bad)
iret
cli
jns
jmp
push
or
xchg
in
lock
pop
fwait
imul
aaa
push
adc
pop
stos
addr16
jg
jmp
imul
pop
add
daa
(bad)
sub
fs
mov
pop
xchg
mov
adc
out
add
push
push
fisubr
test
jb
ret
mov
adc
xchg
dec
mov
(bad)
or
cmps
ss
fidiv
(bad)
cdq
dec
nop
js
daa
or
aam
pop
fist
inc
adc
outs
mov
xchg
inc
out
cs
fs
add
mov
add
dec
arpl
jb
sbb
xlat
pushf
pop
mov
pop
push
fsubr
dec
xchg
icebp
mov
push
(bad)
out
jnp
dec
mov
popf
arpl
mov
std
mov
inc
mov
inc
leave
jne
or
retf
(bad)
fnstsw
push
bound
inc
xchg
push
outs
mov
test
test
cmp
in
push
jae
adc
add
inc
outs
add
xor
or
jnp
lods
or
xrelease
shr
daa
mov
pop
neg
push
mov
dec
and
pop
push
in
mov
mov
mov
push
jge
mov
lds
call
out
push
or
mov
jb
sbb
sub
mov
pop
mov
test
add
inc
fild
arpl
sbb
test
inc
mov
inc
mov
popf
ds
dec
jecxz
mov
(bad)
dec
jno
xchg
test
jg
jmp
or
movs
push
dec
call
push
repz
ja
cmps
mov
cmp
fsub
mov
mul
xchg
jb
jb
sub
pop
lea
cs
cli
dec
or
(bad)
lahf
movs
rcr
es
dec
xchg
icebp
xor
pop
hlt
push
aaa
push
xor
sub
add
dec
adc
add
aam
adc
in
dec
pushf
(bad)
push
jmp
rcl
xor
ja
xlat
frstor
mov
push
fs
pushf
xor
shr
test
rol
dec
xchg
push
(bad)
or
adc
daa
jg
pop
mov
cmp
mov
(bad)
(bad)
out
mov
mov
pop
dec
jbe
mov
and
sub
xor
js
fwait
or
aaa
push
mov
cmp
jmp
xchg
inc
fidiv
call
aad
push
push
(bad)
aam
pop
bnd
xchg
mov
jnp
mov
cmp
test
int
pop
sbb
pop
int3
sbb
out
call
jnp
cmp
dec
sbb
xchg
adc
mov
cmp
mov
aas
mov
dec
ins
or
xchg
mov
or
inc
in
xchg
(bad)
rol
dec
jp
fldcw
repz
push
mov
xchg
arpl
cmps
inc
das
(bad)
idiv
xchg
jge
leave
xchg
das
push
cli
in
test
dec
pop
mov
std
sub
adc
mov
pop
rcr
push
pop
mov
test
fdiv
and
aad
or
and
dec
cmp
sbb
pop
ud2
inc
push
and
rcl
jg
inc
mov
retf
dec
jmp
out
xor
jge
xchg
lods
fcom
fstp
out
xchg
or
cmc
sar
fsubr
sub
dec
sub
shr
mov
int3
cmp
(bad)
pop
popf
pop
ss
mov
mov
jmp
and
or
dec
ds
mov
stos
cmp
sbb
xor
or
ss
jmp
loope
mov
bound
pop
cmc
sbb
pop
call
dec
movs
mov
add
imul
hlt
rcl
sbb
aam
cmps
or
pop
aam
fstp
xor
dec
and
inc
mov
mov
mov
pop
stos
pusha
fnop
xor
and
aaa
aas
sbb
popa
popf
xor
daa
out
pusha
lahf
jb
mov
push
mov
xor
(bad)
xchg
daa
test
push
je
pop
jmp
fmul
mov
dec
fadd
mov
cmps
lods
fst
test
mov
ret
lock
outs
jl
cmps
aaa
shr
out
dec
cmp
aam
pop
cwde
pop
push
jns
xchg
pop
lea
ins
jmp
xchg
mov
shr
xchg
idiv
arpl
aad
ds
adc
jg
dec
je
jnp
or
sub
ds
cld
mov
cli
pop
cmps
push
fcomp
inc
mov
xchg
push
int
jle
rol
stos
or
sbb
pop
pop
mov
xlat
jmp
cmps
dec
(bad)
and
xor
jmp
mov
jb
push
out
xchg
test
pop
stos
push
cli
push
outs
or
out
cmp
push
imul
mov
mov
adc
xor
adc
stos
and
pusha
stos
sub
mov
pop
or
fidiv
mov
add
movs
fwait
sahf
adc
dec
xchg
int
cmp
sub
ss
or
push
(bad)
cld
(bad)
imul
imul
mov
mov
inc
iret
cmp
retf
arpl
jmp
and
nop
ins
cmp
and
std
out
lods
(bad)
push
sar
or
scas
pushf
ins
aam
ja
into
aad
and
lahf
out
cmp
xchg
sub
lods
jecxz
dec
mov
in
pop
cmp
out
retf
and
jge
sbb
mov
mov
stc
push
ret
daa
lahf
hlt
fs
stc
pop
xor
xor
and
cmp
aad
and
push
js
mov
test
jae
loop
out
loopne
adc
fimul
test
shl
add
mov
fdiv
icebp
sub
mov
scas
sub
inc
ja
ins
cwde
or
stos
pop
pop
inc
mov
pop
idiv
into
sbb
cmp
sub
push
or
push
mov
repz
(bad)
xor
mov
pop
pop
cld
aad
inc
(bad)
std
ja
je
jns
inc
fadd
hlt
cmp
mov
push
rcl
mov
fwait
lods
mov
out
mov
mov
clc
xor
stos
aad
in
icebp
cmp
adc
xchg
iret
jle
ss
sbb
jo
ins
pop
jg
mov
test
ror
aas
mov
add
fs
into
inc
add
add
add
scas
ja
lods
cmp
sbb
adc
repz
inc
fs
arpl
mov
pop
(bad)
div
add
rcr
mov
retf
xchg
rol
data16
imul
or
(bad)
into
inc
out
add
and
push
pop
inc
(bad)
pop
pop
jo
retf
inc
and
jge
cmp
inc
jbe
cmp
pop
xor
push
fs
push
int
les
call
aad
cmp
push
push
jecxz
mov
jmp
mov
xchg
push
jmp
ror
xchg
xchg
pop
lea
mov
mov
je
mov
(bad)
push
aas
sub
out
test
cmp
pop
mov
cmps
int
push
sbb
js
repz
popa
add
inc
xor
or
arpl
or
mov
cmp
rol
inc
sqrtps
pop
mov
test
loopne
push
aad
stos
sbb
mov
mov
mov
out
imul
mov
out
xor
cmp
mul
js
inc
push
jg
test
sbb
and
mov
cmps
dec
xchg
pop
repz
jl
mov
push
mov
imul
pop
jmp
cli
adc
cmp
(bad)
lods
mov
fidivr
pop
ror
xchg
retf
gs
adc
and
leave
push
mov
xchg
(bad)
xchg
and
mov
xchg
cmp
sar
aad
cdq
sub
sbb
outs
dec
jle
cmp
mov
and
sahf
loope
push
push
push
mov
xor
cmp
push
fmul
mov
add
and
and
push
inc
test
sbb
dec
ret
mov
mov
aad
xchg
xchg
mov
sbb
push
dec
xchg
xchg
adc
xchg
jne
sbb
pop
ret
jnp
pop
inc
jle
cmps
adc
sbb
in
sbb
mov
cmps
or
jns
pop
fwait
cmp
je
dec
adc
dec
repz
sub
sub
mov
push
loopne
inc
and
pop
mov
mov
das
fmul
mov
inc
in
pushf
movs
icebp
dec
shr
sbb
mov
mov
rcl
out
inc
popf
and
or
dec
popf
inc
pop
jbe
(bad)
xchg
leave
es
sbb
and
gs
push
stos
add
jge
test
push
mov
in
pop
daa
cmp
ret
push
test
pop
fwait
push
hlt
cmps
shl
xchg
jl
mov
and
mov
test
mov
push
call
scas
fdivp
jae
cmc
cmps
jp
ss
or
mov
jmp
jbe
les
inc
mov
(bad)
gs
xlat
or
aam
sbb
dec
mov
cmp
push
dec
shl
mov
xchg
and
leave
(bad)
stos
sbb
push
sub
lds
out
in
cld
mov
popf
jp
inc
stos
fwait
test
pusha
mov
aam
(bad)
scas
xchg
in
cmps
outs
clc
dec
shr
adc
in
fist
aas
or
cmp
pop
jne
movs
lods
xchg
xor
lock
out
fsub
mov
push
dec
add
adc
stos
sbb
mov
jno
mov
sbb
xchg
repz
mov
jno
gs
js
dec
cli
(bad)
fisubr
xlat
jmp
add
fstp
mov
inc
test
push
mov
xlat
(bad)
stc
stos
ret
push
sbb
ss
out
mov
aas
push
adc
add
add
das
pop
icebp
dec
loope
xor
mov
bound
js
nop
jae
mov
inc
mov
in
call
outs
inc
mov
push
cmps
icebp
mov
dec
jmp
mov
jecxz
mov
test
push
mov
cmps
daa
inc
stc
std
test
(bad)
and
mov
push
push
push
nop
fdivrp
cmp
inc
and
mov
dec
sub
mov
enter
cmp
pop
cmp
and
pop
sub
stos
pop
dec
mov
test
xchg
wrmsr
xor
xchg
adc
rol
push
add
push
rcl
ror
sub
dec
xchg
cmps
mov
pop
mov
icebp
xchg
cmc
cld
xor
xor
jle
sbb
jecxz
retf
jle
es
sub
dec
ins
lea
push
lods
retf
lods
sar
sbb
sbb
stc
addr16
dec
sbb
inc
fstp
jnp
pop
in
sub
movs
push
inc
mov
push
in
and
out
lahf
adc
fs
cmps
and
fadd
jp
rcr
jmp
mov
repz
mov
push
inc
movs
movs
mov
inc
fst
xchg
fsub
cmp
mov
sub
adc
dec
shr
cmc
pop
fist
jo
ins
mov
dec
and
mov
ror
push
mov
aas
iret
cmp
push
sahf
pop
retf
push
jb
or
sub
retf
daa
dec
cmp
popf
fadd
pusha
sbb
sub
mov
xchg
arpl
xchg
je
aad
scas
push
ret
jns
test
jg
sbb
cdq
aam
pusha
dec
mov
push
jnp
push
sub
mov
inc
and
fsubr
or
mov
and
cmp
xor
or
pop
adc
je
jnp
cdq
push
pop
stos
add
mov
(bad)
rcl
cli
bound
(bad)
(bad)
lock
clc
inc
push
out
mov
xlat
pop
icebp
mov
addr16
in
mov
xor
inc
sahf
mov
dec
inc
push
jmp
and
cmp
cmp
mov
mov
inc
lods
dec
fsubrp
add
cmp
adc
jmp
lods
xor
jp
mov
jae
xchg
test
clc
lods
cwde
sbb
xlat
jge
jge
sub
pop
fcmovne
(bad)
outs
test
out
jecxz
jae
jmp
stos
adc
sbb
cmps
inc
jle
popf
sahf
cmp
rol
je
xor
aam
shl
add
test
jg
ja
inc
scas
or
push
fwait
loope
mov
xor
inc
ja
jge
pushf
and
dec
lods
or
pop
fs
sub
mov
aas
mov
push
popa
fadd
add
sub
ret
div
push
hlt
stos
mov
cmp
movs
push
sbb
jecxz
not
cmp
cmc
sub
cmc
test
and
xor
mov
or
leave
ss
sbb
into
aas
ja
sbb
lods
inc
inc
mov
jle
scas
stos
arpl
adc
pushf
iret
sahf
xor
jp
pop
out
lock
cmps
in
push
xchg
jg
mov
add
dec
xchg
cmps
mov
push
mov
out
div
mov
dec
ret
jno
sbb
dec
out
(bad)
bound
cmps
add
push
test
cmp
xchg
scas
lods
cmp
leave
jge
ret
js
push
sbb
cmp
or
add
adc
dec
pushf
dec
jno
movs
lods
sub
rol
sar
fmul
xchg
dec
stos
(bad)
mov
sub
out
pmulhw
xchg
outs
cdq
ret
not
es
fprem
lods
jmp
jecxz
imul
cmp
repz
pop
jbe
jns
sbb
pop
test
or
cmp
inc
stc
loop
xchg
ror
jnp
(bad)
push
or
imul
mov
jge
fprem
pop
sbb
dec
jmp
fwait
push
(bad)
ret
inc
dec
dec
mov
jge
in
in
test
mov
scas
bound
lds
test
loopne
jge
movs
gs
inc
sar
and
inc
cwde
cmp
dec
xchg
cmp
mov
mov
out
inc
out
and
aam
ja
and
pop
sub
sbb
daa
popf
adc
jo
mov
inc
shr
push
sbb
dec
cli
rcl
push
push
pop
mov
in
lock
mov
mov
or
lds
or
nop
les
stos
stos
sti
jle
test
jmp
pop
dec
(bad)
test
sub
mov
push
sub
fwait
mov
imul
repnz
adc
xor
cld
jo
lea
add
mov
mov
dec
sub
movs
add
jp
mov
xchg
ror
mov
daa
test
icebp
cld
mov
xor
mov
add
mov
cmp
dec
hlt
mov
sub
cmp
mov
cdq
test
add
push
pop
push
sub
pop
sub
popa
xchg
inc
mov
test
add
mov
add
dec
in
xchg
and
fst
dec
dec
jle
pop
and
bound
fcomp
mov
push
xchg
(bad)
adc
enter
mov
fwait
jo
or
clc
clc
sub
sbb
cmp
and
aaa
or
sahf
lods
lahf
cmp
int
cdq
leave
sbb
and
imul
pop
mov
clc
jae
mov
pop
mov
add
dec
mov
pop
jo
sub
mov
jp
enter
nop
dec
sub
lds
cli
cwde
out
dec
stos
bound
mov
shl
mov
or
cmp
vpcmpgtb
fisubr
pop
js
bound
lods
xchg
fwait
test
sbb
sbb
retf
push
nop
pop
je
jb
mov
inc
stos
aam
push
push
or
pop
pushf
fidiv
sbb
lods
push
or
pop
xchg
out
xchg
push
adc
les
fdiv
push
lahf
jbe
xchg
xor
jmp
mov
out
xor
test
icebp
inc
or
sub
dec
(bad)
push
pop
pop
mov
out
inc
in
cld
jp
neg
jbe
aam
xor
pushf
and
fbstp
lods
cmp
lods
mov
rcr
pop
mov
inc
fiadd
ds
cmp
pushf
mov
lock
inc
mul
fs
mov
add
lock
ret
inc
mov
dec
enter
or
pop
shr
dec
sub
fistp
add
push
dec
scas
fstp
dec
rcr
sbb
bound
rcl
inc
push
cmp
outs
pusha
mov
addr16
mov
imul
in
mov
inc
pop
cdq
push
test
mov
cmc
xchg
dec
or
fsubr
mov
jge
enter
mov
stos
jmp
scas
outs
retf
outs
cld
xor
aam
icebp
push
cld
pop
je
inc
scas
sub
jb
xor
mov
dec
or
adc
aaa
cli
cmp
push
or
jbe
pop
add
xor
into
(bad)
xor
in
into
jmp
(bad)
and
shl
mov
fs
push
add
hlt
test
inc
icebp
sub
inc
out
lds
jecxz
xor
dec
test
stc
retf
inc
fidivr
add
jno
and
mov
mov
fisttp
jae
loop
xor
and
xor
inc
dec
mov
inc
mov
inc
mov
lods
sbb
jge
in
cwde
and
fnsave
jne
and
cmp
jecxz
jb
leave
(bad)
xchg
cmp
pusha
nop
std
mov
dec
xchg
movs
nop
mul
std
inc
mov
aam
and
xlat
jmp
xchg
ins
push
dec
mov
test
mov
xchg
ret
mov
jns
in
sbb
cmp
xchg
sbb
push
add
pushf
das
daa
push
popa
loop
fwait
add
jl
xchg
fiadd
leave
loop
xrelease
call
inc
neg
pop
arpl
mov
mov
xlat
inc
inc
popf
mov
es
sbb
aaa
dec
pop
jns
xor
jb
xor
xchg
mov
call
outs
inc
dec
sub
push
sbb
imul
and
push
jo
scas
xor
inc
(bad)
test
pop
xchg
repnz
ror
pop
fist
repz
mov
cmps
pop
push
iret
loopne
jno
push
add
cmp
loope
lock
ret
addr16
cs
add
lock
iret
inc
xchg
push
add
push
add
lods
mov
arpl
sbb
sbb
cmp
sub
imul
or
dec
push
mov
and
inc
sar
leave
jl
inc
popf
sub
xchg
push
mov
mov
repz
lods
pop
ja
movs
nop
add
fistp
xchg
mov
(bad)
push
jmp
dec
pusha
(bad)
pop
pop
push
pop
xor
stos
dec
sub
mov
in
arpl
call
inc
inc
add
adc
inc
inc
scas
pop
cmp
stos
and
sbb
(bad)
movs
cmp
inc
pop
mov
hlt
mov
mov
adc
lds
neg
jno
enter
fcomip
xchg
fcmovb
arpl
mov
sbb
dec
enter
iret
add
outs
add
dec
loopne
sbb
mov
jp
enter
jns
jge
loope
ins
pop
outs
cmp
mov
lahf
push
and
and
cdq
sbb
add
sti
test
mov
inc
(bad)
bound
sub
sti
jl
shl
cs
mul
xchg
popa
(bad)
call
add
mov
adc
mov
mov
xchg
xchg
dec
shr
(bad)
sub
inc
test
pop
cmp
scas
sub
jmp
jbe
mov
test
imul
cmp
sbb
mov
sbb
adc
jmp
inc
add
(bad)
cmp
clc
imul
(bad)
pop
cmps
mov
pop
outs
xchg
popf
mov
repz
dec
jecxz
pop
int
iret
das
inc
or
icebp
(bad)
and
aaa
ja
inc
mov
imul
scas
add
hlt
ja
in
sbb
mov
ja
loope
ins
push
or
xchg
sub
pop
stos
dec
mov
mov
fwait
and
dec
(bad)
stc
mov
retf
retf
cmp
push
fidiv
test
cmc
sbb
movs
jl
adc
jo
jmp
and
(bad)
iret
je
xor
adc
mov
(bad)
data16
ret
sti
push
inc
gs
mov
imul
adc
sbb
push
ss
sub
jne
jno
ins
xlat
mov
xchg
ja
int3
stos
hlt
jo
js
mov
sbb
add
aad
jno
in
mov
dec
cmps
adc
adc
fwait
or
fs
stos
push
pop
pop
mov
(bad)
into
das
or
adc
jo
add
cmp
jnp
jl
sub
sbb
pop
push
pop
inc
stos
cmp
mov
dec
call
icebp
fs
shr
mov
cmps
adc
mov
mov
xchg
test
xor
cmps
xor
(bad)
neg
pushf
mov
daa
push
or
jmp
jns
adc
adc
inc
xchg
push
and
movs
mov
pop
cmp
push
(bad)
(bad)
adc
shl
jl
jmp
sbb
dec
bound
add
jle
lock
mov
inc
les
pop
xchg
push
out
lds
xrelease
jmp
adc
hlt
lahf
and
outs
xchg
inc
add
xlat
stc
mov
jecxz
pop
xchg
scas
jno
dec
hlt
xor
mov
sbb
xchg
sbb
dec
out
call
shl
jmp
xor
and
push
lods
or
xlat
dec
push
mov
cli
sbb
ds
retf
xchg
mov
movs
clc
js
lock
ret
popf
xor
inc
xchg
sub
cmp
cmp
fisub
mov
test
int3
jecxz
sar
jle
jns
pop
inc
lahf
push
pop
pminsw
lock
loope
das
xchg
jmp
sub
and
and
inc
adc
inc
add
cmp
ins
add
mov
sbb
shl
icebp
in
adc
mul
mov
xlat
pop
pushf
dec
pop
lods
mov
fsub
xchg
ret
jbe
dec
out
adc
cmp
ds
cmp
ficom
inc
jns
addr16
outs
out
(bad)
xlat
dec
clc
in
das
shl
push
pop
adc
sub
call
pusha
imul
and
dec
hlt
repz
mov
bound
mov
lods
loop
out
test
and
mov
call
cwde
adc
lock
arpl
jmp
imul
push
cmp
xchg
jne
and
inc
and
jmp
aas
lods
push
out
shl
js
jl
jmp
sbb
pusha
jmp
ret
scas
sub
mov
pop
jecxz
mov
cwde
fist
adc
pop
test
jl
mov
inc
std
in
add
in
sti
xchg
xor
lods
inc
pop
and
jno
nop
movs
imul
cmp
and
xor
cmps
jns
push
out
cdq
lods
xor
push
cwde
clc
push
xchg
cmp
aas
cli
inc
ss
das
and
or
jae
mov
pop
mov
adc
push
cmp
iret
cwde
and
hlt
pop
shl
outs
mov
xor
mov
xchg
es
imul
mov
outs
xor
in
out
loope
jnp
mov
dec
repz
push
lock
inc
fstp
jb
cmp
dec
pop
add
push
les
jmp
mov
xor
cmp
mov
cmps
inc
push
cmp
(bad)
mov
push
sub
jno
xchg
das
sar
mov
cld
loopne
or
mov
cli
or
lea
cwde
sub
push
inc
pop
mov
out
dec
jmp
sub
imul
jnp
mov
fstp
inc
movs
in
inc
sbb
sbb
add
mov
add
sbb
cmps
(bad)
add
out
xchg
inc
lods
loopne
(bad)
outs
pop
push
rcl
mov
mov
jmp
push
enter
iret
pop
(bad)
sti
fucomip
dec
mov
xchg
add
repz
test
cs
sbb
aaa
int
mov
movs
sbb
mov
sub
popf
mov
or
iret
cmp
or
sbb
sbb
scas
push
inc
mov
pop
jmp
clc
aas
sbb
xchg
cmp
push
pop
fbstp
test
xchg
pop
sub
pop
movs
mov
inc
inc
pushf
lds
xchg
test
xchg
outs
call
mov
jl
push
jne
push
xchg
push
movs
dec
inc
jge
xchg
dec
icebp
clc
pop
test
adc
cmp
push
sub
and
adc
movq
adc
aad
adc
xchg
(bad)
jp
jp
jbe
nop
fdivr
sti
mov
pusha
retf
mov
sub
lock
push
(bad)
inc
xchg
(bad)
fucom
add
pop
jae
mov
adc
loop
mov
lds
icebp
cwde
push
pop
repnz
leave
in
xlat
push
mov
pop
cmp
pushf
test
fcomi
pop
mov
inc
dec
bound
pop
das
je
addr16
push
xchg
imul
(bad)
(bad)
sti
add
jl
dec
mov
push
mov
stos
add
(bad)
out
sub
mov
mov
mov
sbb
mov
aad
cmc
jl
xor
or
sti
int3
push
popf
add
cmp
outs
add
mov
in
loopne
and
cmp
cmp
pop
or
mov
add
inc
jno
adc
mov
cmps
outs
add
inc
stc
int3
test
mov
sar
and
pop
xchg
test
aam
jl
sti
(bad)
nop
cmp
push
hlt
mov
arpl
and
pop
in
lods
dec
out
rol
cmp
fisub
sbb
pop
pop
inc
inc
lods
xchg
mov
gs
int3
pop
mov
inc
push
jp
mov
sub
jge
mov
ins
mov
push
dec
(bad)
out
mov
jbe
cmp
popa
test
mov
push
in
std
jns
xlat
sbb
popa
pop
loop
xchg
xor
lock
pop
xchg
mov
das
daa
push
(bad)
fild
dec
inc
or
pop
and
mov
or
rcl
fbld
stos
test
and
mov
inc
inc
mov
add
mov
mov
inc
push
and
scas
mov
xchg
cmp
fs
push
(bad)
mov
xor
jnp
(bad)
xchg
in
jl
mov
dec
jb
mov
test
mov
inc
out
outs
mov
cs
jecxz
int
ret
xor
data16
jnp
ins
icebp
mov
mov
cmp
inc
shl
cmp
push
inc
out
push
jno
nop
cmp
cmps
ins
sbb
cwde
push
sub
lock
xor
out
retfw
jp
inc
mov
inc
mov
call
ret
jecxz
mov
stos
popa
add
fucom
mov
mov
lea
test
(bad)
cmc
ja
cmp
push
pusha
(bad)
mov
lahf
mov
aas
pop
out
jle
out
push
xchg
in
jae
dec
cmp
or
dec
(bad)
push
sub
stos
add
cs
call
pop
xchg
js
imul
lock
mov
mov
retf
push
fucom
cmp
ja
mov
pop
inc
popf
xchg
test
mov
hlt
jmp
mov
sub
inc
lock
pop
jle
fsubr
sbb
jae
push
out
mov
out
pop
int3
ficomp
xor
dec
jle
aam
das
jge
sub
cmp
jb
push
mov
cld
cmp
retf
mov
inc
pop
jbe
push
cwde
aam
out
cdq
dec
in
push
sbb
pop
mov
cdq
aam
cmps
pop
inc
cmps
mov
ror
mov
push
pop
dec
sbb
and
inc
add
mov
sbb
xor
retf
xchg
ds
jle
enter
push
push
add
adc
xor
stos
add
(bad)
push
push
(bad)
movs
mov
and
dec
pushf
leave
mov
mov
push
(bad)
fild
fwait
dec
int3
call
aam
jo
push
xchg
mov
mov
nop
jp
cmp
nop
(bad)
xlat
js
jmp
test
push
xor
jp
and
js
cmp
sti
cmp
jns
(bad)
leave
call
js
std
jle
bound
and
fwait
or
ror
fisubr
mov
push
mov
(bad)
sbb
ins
enter
leave
aam
(bad)
jl
and
inc
mov
push
mov
mov
icebp
arpl
cwde
(bad)
out
cmp
cmp
(bad)
ds
mov
ror
or
pop
ret
dec
(bad)
cmp
jno
pop
mov
fwait
int
sub
jns
enter
pop
adc
loope
sbb
cmp
sahf
push
cmp
pushf
pop
and
push
retf
(bad)
inc
scas
ss
mov
push
in
out
in
gs
rcl
sbb
push
shl
sti
mov
add
stos
les
or
cmp
int
enter
arpl
fdivr
add
cmps
dec
pop
jo
cdq
xchg
fimul
jae
ds
pop
xor
sbb
inc
imul
in
mov
arpl
aad
inc
(bad)
ret
inc
push
es
cmp
out
popa
iret
call
mov
loope
ror
test
mov
adc
stc
xchg
mov
adc
push
fcomp
rcr
adc
pop
fdiv
js
xor
mov
cdq
into
or
cmc
js
fcomp
fld
push
fadd
or
pop
int3
jg
test
adc
pop
pop
xchg
shl
out
sti
pop
lahf
rol
dec
add
cdq
into
fstp
fistp
add
jne
lahf
stos
in
test
jns
sar
aad
inc
inc
xchg
mov
dec
sub
loope
stos
jl
adc
imul
cmp
lods
or
int3
cmp
sti
inc
push
arpl
mov
ror
fimul
fsub
cmp
das
and
outs
cli
fidiv
inc
jns
test
lock
dec
mov
test
repnz
psllq
stos
(bad)
icebp
xor
mov
adc
test
cmps
xor
cs
fidivr
push
imul
pop
loopne
daa
jb
mov
test
std
xchg
and
in
jbe
gs
jmp
push
push
jae
mov
mov
retf
imul
push
popf
xchg
xchg
sub
xor
out
pop
nop
imul
jl
xor
call
jl
mov
(bad)
in
adc
sbb
mov
mov
xchg
retf
stc
clc
aam
inc
out
fimul
ja
adc
xor
enter
adc
cmp
cmp
sub
mov
repnz
xchg
enter
inc
mov
ja
and
and
stos
dec
es
dec
push
mov
sbb
loope
mov
push
neg
add
(bad)
hlt
dec
mov
add
inc
sub
imul
pushf
mov
sbb
cmc
cmp
lods
ja
sub
cmp
adc
mov
cmp
jle
mov
pop
jo
mov
jmp
jae
pop
cmp
inc
sub
or
popa
js
js
aad
jno
xchg
cli
cmovb
jle
(bad)
rol
inc
fnsave
mov
movs
adc
add
cmps
xchg
adc
pop
xchg
sti
lods
(bad)
dec
fwait
dec
je
ret
jmp
paddusb
jns
mov
dec
and
(bad)
(bad)
jmp
add
xchg
adc
cmps
pop
sbb
mov
sub
mov
pop
mov
xor
test
bound
je
mov
(bad)
pop
arpl
lock
test
fdiv
movs
fistp
out
pop
(bad)
mov
or
test
mov
repz
hlt
popf
pop
push
lea
xor
out
shr
jl
jns
or
mov
jl
stos
into
mov
pop
stos
pop
int3
call
ins
inc
aaa
clc
and
js
popa
mov
pop
push
fisttp
mov
jno
mov
dec
fxch
test
jmp
scas
loop
sbb
push
cmc
jecxz
sub
lds
xchg
mov
push
fs
cmps
add
rcr
aas
inc
stos
mov
cs
retf
repz
data16
lods
push
es
mov
test
(bad)
sar
out
outs
or
frstor
adc
add
sub
and
inc
sub
jmp
test
mov
cld
imul
cmps
jbe
mov
pusha
call
sub
cmps
popf
xor
dec
mov
fsub
in
pushf
sbb
test
inc
add
es
stc
(bad)
shl
inc
push
cmp
outs
js
sahf
inc
and
fnsave
inc
(bad)
aas
mov
jbe
inc
sbb
inc
adc
pop
test
imul
in
call
test
sti
jle
jne
jo
pop
enter
cmps
idiv
or
(bad)
mov
jmp
retf
inc
fdivr
cmps
fidiv
icebp
fld
dec
sbb
pop
(bad)
sub
cmp
jmp
push
test
mov
in
imul
(bad)
pop
sbb
adc
sbb
inc
test
rcl
je
fnstcw
jmp
repnz
and
dec
idiv
xchg
jmp
stos
gs
mov
ficomp
cdq
mov
or
adc
jmp
and
ss
xor
and
movs
mov
inc
jmp
add
dec
sbb
and
jb
mov
nop
mov
(bad)
dec
fs
xchg
lahf
ret
jg
dec
push
dec
xchg
cmps
sar
mov
jmp
pop
dec
int
or
add
ror
mov
cld
shl
cmps
imul
aam
ret
dec
sahf
inc
pop
jl
les
sbb
pop
xchg
(bad)
mov
imul
femms
add
mov
cwde
sbb
stos
push
sahf
fprem
cmp
and
retf
mov
cwde
shl
push
sbb
in
in
test
mov
out
xchg
push
daa
out
(bad)
hlt
mov
int3
sub
mov
clc
xchg
mov
ret
gs
dec
lds
push
clc
cli
iret
and
sbb
jg
daa
inc
inc
lahf
aaa
pop
jnp
xchg
mov
or
je
sar
pop
sbb
es
jae
mov
xchg
aas
les
inc
sbb
mov
sbb
mov
loop
push
jae
dec
rol
loop
rcr
jno
arpl
cwde
push
dec
mov
(bad)
shl
std
xchg
cmc
(bad)
data16
cmc
sbb
scas
push
rol
jns
std
push
lahf
mov
repz
jge
jmp
xor
or
das
test
lahf
push
add
or
ins
adc
aas
pushf
cmc
movs
xor
jo
mov
cmp
adc
jmp
xchg
mov
pop
pusha
cmps
fwait
cmc
xor
sar
mov
dec
js
mov
and
(bad)
push
fdivr
sub
cmp
xchg
in
ror
mov
inc
clc
add
push
cmp
add
adc
js
stos
xor
mov
test
and
xchg
into
xchg
xor
lea
inc
push
fsubr
lahf
fsub
test
call
dec
mov
fdiv
cmp
mov
(bad)
aad
call
sete
jmp
mov
bound
jmp
pop
call
xchg
inc
dec
or
mov
push
add
psubq
pop
add
mov
ret
repnz
mov
jno
data16
repz
loop
popf
inc
iret
pushf
jle
leave
sti
xchg
fild
mov
fcomp
mov
xchg
adc
div
mov
out
xchg
dec
sti
dec
add
fcmovbe
inc
fwait
push
popa
jnp
call
push
mov
sbb
pop
in
and
jbe
in
and
sub
mul
xchg
xor
shl
retf
adc
jecxz
push
jle
sub
mov
mov
cmps
js
retf
lock
retf
xchg
pop
inc
test
mov
jmp
(bad)
cs
push
fwait
es
cmp
and
pop
inc
mov
add
sbb
sar
retf
push
jbe
add
scas
and
addr16
pop
mov
std
and
cmp
cmps
xor
jne
rcl
mov
cmp
fsub
cmp
fimul
stos
test
cs
gs
cmps
shr
out
sti
inc
inc
xchg
mov
sub
aaa
call
add
popa
mov
xor
jno
mov
sbb
call
inc
add
(bad)
xor
adc
in
or
jae
imul
xor
ror
cdq
cld
jecxz
(bad)
fild
sbb
cli
pop
cmp
xchg
mov
push
mov
xchg
sub
outs
movs
mov
jp
mov
cld
mov
mov
push
into
inc
cmps
xor
dec
lock
pop
enter
dec
xchg
sub
cmps
arpl
outs
xchg
call
mov
pop
push
pop
dec
sti
es
pop
aaa
add
bound
(bad)
fsubr
add
cmps
mov
in
mov
test
ins
sub
cwde
call
nop
ja
rcr
mov
test
dec
mov
into
sti
test
loop
xor
xor
push
and
imul
mov
jp
fidiv
dec
cmp
push
cmp
mov
pop
repnz
sub
add
add
sbb
push
push
cmp
xchg
inc
sbb
test
and
cmp
imul
ret
shl
cmps
sub
outs
xchg
mov
fs
xchg
sahf
stos
push
inc
xchg
retf
(bad)
inc
pop
xchg
mov
push
(bad)
xor
iret
js
sbb
sbb
lea
or
mov
sbb
clc
setnp
pop
outs
data16
add
push
and
iret
pop
push
mov
push
call
pop
jg
rcr
ins
jnp
(bad)
into
std
cmp
mov
mov
xchg
fsubr
adc
movs
sbb
fadd
dec
adc
test
(bad)
dec
leave
and
int
lds
pop
es
push
pop
jns
mov
or
add
lea
mov
sbb
in
cmp
pushf
push
and
mov
enter
lahf
retf
dec
pop
inc
test
and
std
adc
arpl
fistp
test
dec
loop
sub
repnz
add
and
out
int3
test
mov
push
sbb
mov
stos
cs
pop
pushf
mov
mov
sub
pop
sbb
popa
popf
sbb
aas
call
jae
dec
inc
retf
test
push
scas
(bad)
jno
jp
jae
dec
out
sti
cmp
mov
or
hlt
repz
fsubrp
aas
movs
imul
rcl
cli
mov
cwde
fisub
jo
es
xor
call
add
jl
pushf
outs
sub
mov
or
jge
(bad)
outs
adc
cmps
ss
or
fsubr
mov
jb
fdecstp
ins
xor
jnp
retf
lahf
rcl
adc
cld
add
xchg
iret
loopne
hlt
mov
mov
xchg
pop
mov
cdq
jge
fwait
sahf
movs
(bad)
xlat
stc
lock
pop
pusha
mov
aaa
nop
fs
push
sbb
repnz
shl
out
add
and
pop
xchg
push
pop
adc
cmp
sbb
inc
and
sub
adc
push
leave
outs
fbld
adc
mov
pop
xor
es
fdivr
add
data16
addr16
pop
imul
push
adc
loopne
adc
xlat
push
cdq
ins
jno
sub
stc
loopne
dec
jmp
push
xchg
scas
dec
or
cmc
fnstsw
imul
or
cmp
xor
jge
and
imul
inc
push
popa
rcr
jl
(bad)
pop
scas
pop
mov
inc
xchg
xor
movs
popf
add
pop
fcmovnbe
lahf
add
and
dec
mov
call
push
aam
pushf
jp
imul
mov
xor
repnz
fstp
dec
dec
jmp
fcomp
cmp
inc
call
xchg
cmp
scas
push
add
mov
stos
dec
repnz
leave
icebp
gs
popa
adc
pop
or
push
add
pop
adc
inc
cmp
push
inc
mov
xchg
adc
mov
div
jg
sub
repz
add
mov
mov
shl
xor
icebp
fs
jmp
(bad)
lods
call
outs
fld
enter
(bad)
(bad)
je
sub
add
aaa
addr16
xchg
gs
ret
xor
repz
jmp
jno
(bad)
and
sub
mov
inc
push
or
mov
(bad)
cmp
out
pop
xor
pop
ficom
in
xchg
shl
fsub
nop
and
pop
dec
(bad)
repz
mov
mov
cli
sub
dec
repz
dec
in
dec
jl
xchg
add
cmp
cmps
(bad)
lods
or
jmp
inc
hlt
xor
jge
gs
sbb
cmp
test
sbb
clc
mov
ror
rol
out
mov
stos
pop
sbb
pop
cli
mov
aad
movs
bound
mov
jmp
movs
cmp
das
fsubr
sbb
leave
cli
fstp
imul
push
jmp
pop
iret
retf
sbb
or
and
push
stos
or
mov
outs
movs
mov
xor
or
loopne
popf
fadd
imul
inc
loopne
ret
ins
test
fwait
ins
jmp
(bad)
daa
ficom
dec
(bad)
pusha
inc
cwde
mov
rcl
mov
mov
aas
sbb
vmovmskps
add
aas
inc
rcr
jo
outs
push
adc
cmc
push
fiadd
je
add
ja
jecxz
lods
sub
pusha
js
push
push
mov
sbb
pop
inc
cdq
(bad)
mov
sti
jg
pusha
cmps
push
jmp
fisub
in
mov
std
mov
sbb
retf
hlt
sbb
ret
mov
cmps
pop
cmp
mul
lods
mov
sub
es
pushf
adc
push
fist
dec
cwde
mov
stc
inc
shl
sub
pop
stc
es
sub
lods
data16
retf
in
mov
in
mov
lock
push
cmps
ins
(bad)
cmps
out
mov
mov
mov
cmps
movs
aam
mov
xchg
add
fsubr
mov
fsub
cmc
test
sbb
pop
aad
retf
add
arpl
cs
(bad)
addps
pop
jecxz
cmp
and
inc
imul
sub
or
aad
adc
push
jge
jmp
push
clc
outs
punpckldq
bound
mov
cmps
stos
add
sbb
neg
jl
test
mov
test
mov
ja
ins
lods
sub
rcl
loop
lds
bound
arpl
cmp
jbe
or
sbb
cli
jg
mov
clc
jl
inc
xor
add
jns
ds
fwait
fxsave
pushf
inc
inc
mov
stos
sub
sbb
call
dec
cld
pop
fs
arpl
cmps
neg
stos
stos
mov
and
lods
stc
sbb
pop
jge
ret
and
retf
mov
mov
xor
pop
fiadd
cmc
jbe
add
imul
sub
(bad)
mov
sbb
into
cmp
aaa
aam
vmwrite
mov
ins
adc
push
daa
mov
cwde
aam
sbb
xor
call
push
(bad)
pop
mov
cmp
xchg
mov
bswap
cld
cmps
and
sbb
stos
and
mov
repz
inc
(bad)
(bad)
mov
icebp
bound
fcomp
push
int
sub
cld
into
aam
loop
push
push
bound
mov
scas
dec
push
aam
test
push
xchg
loope
push
cmp
daa
add
sbb
imul
cmps
lea
test
mov
jmp
fmul
jge
repz
loope
sub
retf
int3
outs
xchg
mov
push
cmps
sahf
cmc
cmp
(bad)
pushf
call
xor
pop
cmp
jmp
sbb
ins
dec
jno
jne
outs
out
sahf
stos
lea
hlt
sbb
icebp
sbb
push
and
pop
sub
pop
retf
jle
fld
adc
xchg
add
addr16
clc
mov
test
add
push
add
dec
jmp
push
out
inc
or
jmp
call
xor
jnp
cdq
pusha
in
scas
inc
es
test
sub
cs
cmp
or
inc
or
xor
jecxz
mov
jae
pop
inc
in
es
jl
mov
outs
imul
cs
aaa
jae
retf
mov
inc
gs
jmp
test
retf
mov
sbb
push
sbb
test
popw
cmc
(bad)
xor
outs
arpl
xor
cmc
and
ficom
daa
addr16
call
pop
mov
mov
loopne
cmp
mov
jle
mov
pop
cwde
ds
test
sbb
mov
ror
xor
int3
popa
fstp
bound
arpl
retf
(bad)
mov
add
aad
adc
outs
xchg
mul
inc
mov
fmul
nop
mov
jns
dec
aaa
push
nop
mov
cmp
cmp
inc
mov
dec
sbb
les
jle
jmp
ret
push
push
add
cmp
aas
icebp
sbb
mov
jne
sbb
stos
mov
(bad)
sbb
mov
push
movs
std
mov
add
loope
or
add
test
seto
aad
stos
std
dec
inc
mov
cmc
add
in
jl
xor
sub
inc
mov
jb
ret
cdq
stos
sub
arpl
inc
jmp
adc
imul
pop
xchg
sbb
mov
neg
sub
int3
push
or
mov
scas
and
test
cdq
jp
clc
jmp
add
adc
lods
xor
hlt
sbb
out
scas
retf
mov
icebp
dec
cmp
iret
leave
jnp
adc
fst
jnp
scas
ins
sbb
xchg
mov
icebp
out
or
xchg
add
adc
jns
push
or
data16
ins
pop
scas
inc
fs
fild
jp
inc
inc
and
push
repz
loope
movs
mov
ja
adc
mul
scas
ret
sbb
xor
scas
in
push
adc
call
fcomi
sub
inc
popa
add
lods
ins
inc
dec
in
or
xchg
retf
xor
jns
mov
jmp
ds
sbb
and
push
icebp
imul
inc
lods
mov
inc
enter
cwde
hlt
sbb
pop
push
dec
sub
fbld
out
lahf
ins
sar
mov
enter
shl
adc
stos
lds
jecxz
xor
or
pop
int3
sbb
push
inc
mov
dec
add
test
stos
dec
cmp
or
retf
inc
(bad)
call
pusha
jns
jbe
xchg
add
lods
pushf
adc
adc
aam
cmp
jl
jno
fsub
inc
jecxz
test
cmps
inc
adc
xlat
mov
mov
sbb
mov
add
xchg
fld
mov
out
cmp
mov
lods
pop
in
pop
or
xor
popf
pop
sub
mov
fadd
jg
aad
jne
sbb
add
mov
xchg
adc
jns
fwait
push
sbb
or
mov
adc
push
pop
loope
mov
mov
inc
fcomp
add
pop
sti
xchg
xor
mov
inc
aam
jns
stc
mov
mov
(bad)
adc
mov
fdiv
mov
(bad)
dec
leave
cmp
dec
out
in
dec
std
sbb
(bad)
sbb
or
cmp
shr
jge
and
sbb
add
xchg
and
or
movlps
stos
adc
add
sbb
push
and
imul
cld
addr16
mov
adc
(bad)
std
mov
pop
mov
mov
jae
or
retf
pop
pushf
xchg
push
retf
inc
or
retf
pop
retf
or
es
cmp
mov
jbe
ret
ret
pop
jne
pop
mov
add
dec
push
mov
addr16
cmps
clc
cmp
jmp
popa
retf
adc
ins
mov
outs
mov
lahf
pop
add
fdiv
and
mov
test
mov
push
push
cmp
(bad)
(bad)
jge
adc
fdiv
add
mov
hlt
je
xor
fcom
push
inc
enter
je
mov
jo
jl
fiadd
fmul
jmp
pop
cmp
call
test
popa
mov
outs
out
mov
das
jmp
lock
cdq
mov
jne
call
(bad)
cmp
mov
xor
pop
cli
pop
push
jbe
xchg
push
sbb
dec
and
(bad)
clc
dec
xchg
int
sahf
in
pop
adc
fnstcw
push
xor
or
sbb
dec
and
test
sti
enter
(bad)
xor
push
fist
jecxz
xchg
mov
push
(bad)
movs
mov
jmp
scas
mov
mov
xchg
fist
jp
xor
sbb
int
pusha
sti
push
or
daa
test
cmp
cmps
mov
sbb
xor
out
dec
cmp
add
das
scas
xor
dec
inc
stos
ins
pop
rol
movs
into
test
sub
loope
mov
mov
inc
inc
mov
pop
in
loop
jmp
gs
xlat
xchg
push
test
sbb
xchg
adc
call
jl
xchg
aad
test
fcomi
inc
cli
aaa
dec
jnp
mov
dec
pop
outs
xchg
cdq
cdq
xchg
inc
and
imul
jns
retf
pop
adc
add
or
add
pop
push
xor
dec
jle
aad
sub
dec
in
into
mov
ret
jb
sub
(bad)
imul
loopne
dec
aad
inc
cmp
pop
fwait
cmps
fldcw
mov
sub
xlat
bound
cdq
push
call
or
in
out
bound
xchg
sub
xchg
jg
mov
out
retf
cwde
aam
jg
inc
loop
push
pop
push
es
cmp
xchg
xchg
cmp
mov
cmp
push
nop
sbb
sbb
mov
jle
ret
mov
add
loope
xor
dec
nop
test
loope
mov
std
bound
clc
test
fldcw
xchg
mov
or
fmul
mov
and
adc
lods
jno
pop
icebp
fst
inc
call
pop
imul
adc
mov
dec
xchg
push
push
stos
xor
stos
aam
sbb
sti
test
ficom
jb
sub
sahf
mov
jl
fwait
jle
sti
ret
mov
test
icebp
push
lea
pushf
xchg
xchg
ss
(bad)
stc
rcr
jle
cmps
jo
push
scas
sbb
mov
push
sbb
outs
pusha
outs
test
mov
mov
and
jle
out
aas
adc
(bad)
cmp
pop
and
stos
ss
ss
pusha
pushf
or
test
or
lock
shl
dec
push
inc
call
mul
push
xchg
cdq
pop
xor
cmps
mov
in
je
stos
mov
arpl
test
xchg
fdivr
js
mov
jmp
fsubr
pop
lock
dec
mov
inc
or
test
mov
sbb
pop
jno
retf
and
push
mov
fld
mov
pop
xchg
fmul
loop
call
mov
jbe
shr
sti
jle
cld
call
jle
clc
mov
xchg
mul
jle
movs
movs
xor
in
mov
mov
sub
ins
test
and
imul
lea
pop
jmp
inc
call
add
jecxz
outs
dec
sbb
dec
dec
fdivr
adc
mov
movs
cmp
ins
int
mov
mov
outs
jg
inc
aam
sti
push
movs
mov
dec
out
inc
pop
retf
fstp
add
mov
mov
xor
jmp
cwde
xor
push
scas
dec
pop
push
mov
stos
sub
inc
or
daa
arpl
push
pop
push
cwde
(bad)
lahf
dec
push
ror
sub
adc
or
and
fimul
add
cmps
sub
cdq
and
popa
jle
mov
jecxz
fdivr
loop
push
xchg
cwde
pusha
or
dec
test
push
out
xchg
cs
retf
enter
scas
inc
in
addr16
cmp
std
mov
inc
retf
adc
pop
xchg
imul
jnp
push
mov
test
cli
push
mov
bound
sbb
jb
loop
retf
jp
ficom
jmp
adc
call
stc
dec
inc
es
sub
rcr
sbb
(bad)
xor
inc
mov
outs
sbb
jmp
jae
mov
xor
pop
or
xor
dec
movs
imul
lods
(bad)
mov
sbb
inc
repnz
pop
cwde
aam
dec
dec
adc
push
cmp
sub
(bad)
imul
add
test
inc
shr
fist
rol
aas
mov
xchg
outs
xchg
movs
inc
xor
cld
mov
in
jl
mul
push
mov
(bad)
icebp
call
jbe
ja
aaa
pop
xor
cld
inc
push
jnp
fild
dec
(bad)
push
pop
push
xchg
(bad)
das
pop
out
in
add
fdiv
jno
loopne
sub
sbb
pop
not
mov
xor
ss
mov
pop
ret
(bad)
cwde
inc
test
pop
aam
jnp
xchg
rcr
loopne
ret
cmps
pop
and
call
(bad)
(bad)
daa
scas
dec
inc
call
icebp
cmc
xchg
lods
fdiv
inc
ficom
pop
adc
xlat
loopne
out
adc
scas
sub
mov
xchg
lods
aam
sbb
xchg
cli
pop
sbb
inc
(bad)
cmp
daa
sahf
or
sbb
cmps
data16
movs
sbb
adc
call
pop
cmc
jns
inc
test
pusha
mov
cmps
jb
rcl
mov
(bad)
pushf
ror
pop
xchg
mov
and
jne
jns
sub
sbb
mov
jg
mov
pop
jl
addr16
cdq
or
scas
ins
repz
mov
sub
dec
aaa
bound
and
and
pushf
jp
mov
jae
mov
out
mov
in
inc
push
xchg
push
out
mov
sbb
ret
mov
test
outs
call
call
fs
push
call
test
ds
cmp
sub
push
cdq
addr16
push
mov
retf
test
call
ins
sbb
ja
push
adc
cmp
push
mov
and
xor
cwde
fstp
jecxz
mov
popf
fcom
add
scas
mov
mov
mov
mov
lock
jl
std
popf
lock
repnz
xchg
stos
xchg
jae
sbb
call
sar
inc
inc
cmp
popf
cmp
pop
ja
mov
fisttp
aam
xchg
retf
pusha
push
add
pop
adc
pop
mov
add
test
cmp
mov
dec
loop
xchg
mov
mov
xchg
jg
mov
retf
dec
add
and
shl
jo
sub
leave
test
jl
popf
or
pop
push
out
cdq
iret
test
daa
(bad)
dec
clc
repnz
adc
cmp
and
jge
shr
xchg
cmp
sbb
push
push
out
mov
pushf
ret
data16
jae
movs
dec
ret
rcl
cmp
adc
mov
pop
fisub
lock
xor
xchg
xchg
cmp
mov
mov
fst
scas
pop
or
rcr
jne
inc
imul
push
mov
mov
enter
sub
aas
lds
ss
push
mov
popa
bound
psubsw
and
out
mov
sar
cdq
pop
loope
loopne
test
mov
mov
jmp
test
cmc
cmp
cmc
leave
add
xchg
(bad)
(bad)
ss
add
(bad)
out
mov
jl
cmps
sbb
and
lds
fmul
jl
xor
xor
xchg
sub
nop
or
mov
mov
xor
and
pop
add
dec
fistp
mov
retf
mov
dec
xchg
cmps
mov
ror
scas
adc
call
adc
pushf
lock
mov
xor
leave
enter
es
jp
cdq
cmp
pop
sahf
je
or
mov
(bad)
mov
inc
push
imul
jl
stos
or
cdq
pop
xor
sbb
ins
pop
pop
jns
repz
and
jns
mov
sti
mov
cmps
push
mov
(bad)
neg
mov
mov
jp
les
mov
mov
cmc
ficomp
inc
cld
adc
sbb
in
into
fs
push
push
pusha
outs
fisubr
adc
dec
out
call
in
cmp
adc
and
adc
shr
ficom
dec
je
xlat
movs
and
pcmpgtb
mov
pop
add
mov
sbb
xchg
or
repz
cmps
adc
repz
scas
cli
stc
fs
repnz
loopne
ret
push
inc
sbb
imul
scas
mov
xchg
sub
repz
jno
inc
sbb
add
ja
mov
data16
mov
test
sub
in
cmp
fs
lods
imul
mov
call
or
retf
jmp
rol
mov
sbb
cmp
cwde
mov
nop
mov
sbb
push
(bad)
jmp
push
add
aas
push
mov
jge
xchg
scas
mov
push
aad
in
sub
pop
sub
xor
mov
test
sbb
xor
(bad)
mov
std
in
mov
fisub
ins
lahf
jno
ret
loope
mov
and
mov
hlt
popf
shr
dec
pushf
inc
arpl
fimul
ja
fwait
(bad)
cli
dec
fimul
aaa
mov
in
pop
in
add
sbb
xchg
scas
ror
out
jge
ret
jbe
add
(bad)
xor
aaa
add
sbb
lods
sbb
or
or
retf
aam
daa
(bad)
clc
dec
cwde
ins
jne
mov
imul
retf
jmp
lock
dec
inc
sahf
mov
stc
(bad)
retf
inc
mov
ins
cli
jle
pop
add
repz
sub
cwde
cmp
mov
jl
xchg
mov
push
loop
adc
sbb
cmp
mov
enter
adc
push
xchg
movs
sahf
cs
sbb
out
xchg
push
mov
pop
jbe
imul
mov
add
jbe
pop
repnz
cmps
(bad)
sub
xchg
pop
and
cld
xchg
test
icebp
or
call
fcmovnbe
inc
rcl
pusha
dec
fldcw
pop
(bad)
cli
pop
or
mov
stc
clc
push
rcl
ins
push
pop
fcom
adc
push
and
cmc
js
mov
push
jmp
cld
push
add
cmp
ret
push
fcomp
inc
inc
xchg
sub
mov
xchg
fs
cmp
loopne
sbb
ins
hlt
cmps
shl
fwait
movs
cmp
xrelease
jmp
rcr
push
pop
rcl
push
pop
sub
(bad)
call
loopne
sbb
dec
enter
push
cmp
lods
adc
push
xor
or
daa
push
enter
out
arpl
pop
add
fadd
cmp
loope
push
out
loop
or
sbb
cmp
call
(bad)
stc
addr16
fisttp
pop
(bad)
xor
aaa
dec
add
outs
mov
xor
out
movs
mov
or
sbb
cmc
pop
popa
ja
mov
daa
mov
xchg
xor
add
cmp
push
adc
bound
int
fild
es
sub
mov
mov
shl
cmp
test
mov
fwait
xchg
call
cdq
ja
outs
stc
push
sbb
lock
and
xor
mov
add
mov
mov
pop
into
ins
fcomp
jp
(bad)
jnp
push
out
or
jb
add
pop
test
clc
add
fnstsw
push
(bad)
fwait
adc
pop
outs
lods
sub
mov
fwait
dec
shl
or
jmp
mov
dec
pop
xchg
mov
adc
inc
fsubr
add
fidiv
cmp
cmp
mov
mov
mov
jmp
adc
push
ss
mov
in
jo
test
pushf
or
inc
add
inc
scas
int3
push
fmul
jno
push
fadd
mov
xor
out
and
stc
push
mov
pop
sahf
or
loope
xor
mov
push
lods
dec
cs
(bad)
(bad)
daa
mov
(bad)
sbb
inc
pop
inc
xchg
mov
mul
(bad)
and
mov
jl
pop
shr
pop
and
sbb
test
mov
ret
inc
stos
shl
je
ds
ror
adc
test
cmps
addr16
mov
xor
hlt
fisubr
mov
sub
sti
jp
xor
dec
lahf
daa
pop
jnp
jno
inc
out
test
push
in
jo
in
inc
sbb
sub
push
loop
lods
and
jle
mov
sbb
mov
stos
or
pop
sahf
in
lahf
or
jmp
popa
xchg
mov
in
inc
push
mov
xchg
adc
mov
add
xor
sbb
xlat
xchg
ret
pop
mov
(bad)
sub
adc
icebp
frstor
sbb
mov
ins
or
xchg
fcom
in
daa
mov
and
inc
ss
es
sti
sbb
xchg
inc
jmp
dec
addr16
aam
inc
int3
jmp
popa
aad
lock
mov
in
cmp
and
popa
mov
or
scas
inc
inc
mov
cmc
icebp
mov
retf
xor
fsubr
sub
test
(bad)
fistp
gs
dec
mov
xor
push
nop
rcr
int3
iret
pop
sahf
xlat
pop
jno
xor
aas
outs
push
aaa
lods
sbb
xor
ins
push
mov
add
add
in
std
xchg
add
sar
push
arpl
cmp
mov
bound
div
pop
mov
mov
pop
mov
mov
mov
in
inc
xchg
popf
inc
idiv
cmp
vandnpd
inc
push
sbb
sub
inc
lods
xor
pop
mov
xchg
mov
cwde
xchg
and
and
adc
jge
mov
push
in
mov
out
iret
lahf
and
inc
inc
popf
dec
xchg
mov
sbb
cmc
test
xor
test
jmp
inc
mov
inc
retf
pop
mov
push
dec
out
rcl
cmp
and
push
pop
and
outs
pop
add
xchg
cdq
das
pop
stos
pusha
fxch
aas
fcmovnb
gs
jge
out
cmp
ds
lea
sub
sbb
lods
mov
out
inc
je
jp
mov
in
xchg
mov
push
fcmovb
out
add
outs
mov
fmulp
adc
dec
je
(bad)
cmps
push
cmp
jmp
inc
mov
cmp
inc
(bad)
rcr
jp
cmp
pop
scas
cs
imul
jp
fsub
add
adc
scas
sub
ficom
stos
sbb
test
imul
iret
inc
cwde
dec
push
and
ins
xchg
les
pop
jmp
mov
mov
inc
mov
pop
repnz
jg
loop
(bad)
cmp
clc
and
mov
jae
(bad)
les
pop
out
in
arpl
and
sbb
inc
xor
ja
jl
(bad)
adc
imul
outs
std
cmc
cwde
daa
xor
and
pop
mov
xchg
push
rcr
xchg
add
test
sbb
ja
lods
mov
cs
(bad)
movs
xlat
cmc
push
mov
push
pop
cmp
nop
sbb
jo
cs
jbe
push
pop
jg
xchg
mov
push
add
inc
call
inc
push
jb
out
imul
int
cmc
dec
adc
dec
mov
mov
cmp
and
scas
lahf
push
cwde
(bad)
push
retf
jbe
jae
lds
jge
test
(bad)
xchg
push
into
outs
mov
fistp
or
xchg
clc
ret
mov
cld
xor
cmp
(bad)
out
and
pop
dec
and
daa
adc
dec
cwde
fld
aam
or
pop
enter
xchg
inc
sbb
add
push
sub
jl
mov
sar
pop
sbb
js
test
(bad)
call
pop
push
fistp
in
jmp
jmp
iret
jns
(bad)
movs
mov
xchg
mov
shl
xchg
jecxz
cmp
mov
and
lods
pop
clc
xor
jae
cmp
push
je
xchg
movs
retf
push
cmp
fs
shl
(bad)
repnz
inc
inc
out
cmp
add
push
shl
inc
dec
fsubr
mov
jp
scas
div
mov
mov
gs
lahf
xchg
jmp
daa
fst
movs
push
in
xchg
test
shr
mov
cmps
scas
(bad)
push
loope
fisub
and
loope
rcl
daa
inc
push
imul
sub
cwde
mov
sbb
retf
jns
nop
movs
add
sub
cmp
add
movs
dec
add
push
push
in
rcr
cld
lods
mov
adc
xchg
retf
inc
fwait
mov
inc
retf
mov
or
iret
push
cdq
arpl
cmps
lahf
mov
mov
xchg
mov
inc
imul
repnz
ret
and
xor
test
lea
sub
sbb
ret
aad
je
add
dec
ins
jl
adc
outs
inc
scas
push
stos
or
mov
adc
push
push
(bad)
repz
scas
xchg
push
sbb
mov
cld
jp
dec
adc
mov
imul
mov
imul
mov
xor
mov
dec
sbb
mov
inc
jnp
imul
mov
and
dec
ror
push
sub
dec
cmp
daa
mov
lods
bound
dec
adc
mov
int3
les
fcomp
jb
push
ror
mov
sub
fcom
cmps
mov
bsf
fisttp
test
push
xchg
pop
fdiv
cmp
hlt
repz
cli
es
cmp
sbb
popf
(bad)
mov
icebp
ror
in
inc
inc
inc
adc
dec
adc
mov
retf
pop
push
mov
or
mov
std
imul
outs
fild
pushfw
jns
jo
jg
popf
aad
xchg
mov
aam
add
(bad)
mov
mov
bound
pushf
(bad)
sbb
div
scas
(bad)
inc
pop
mov
cmp
pop
(bad)
das
sbb
in
rcl
adc
dec
mov
push
test
sbb
lea
add
add
add
and
outs
js
push
jmp
and
sti
mov
fbld
push
mov
pop
popf
fild
sub
call
icebp
or
mov
(bad)
hlt
xchg
xchg
xor
jb
sbb
sbb
fcmovnbe
inc
retf
push
jg
sub
mov
mov
lods
pop
les
jp
clc
or
xor
pop
lahf
or
ins
dec
mov
xchg
pop
stc
std
mov
in
push
inc
mov
pop
xchg
xchg
push
jmp
add
add
pop
mov
adc
pushf
outs
in
xchg
int3
mov
mov
dec
sub
cmp
les
inc
inc
mov
cmp
mov
pop
into
sbb
pusha
sub
and
or
sbb
sbb
inc
pushf
cmps
call
push
jl
pop
retf
into
ret
pop
mov
or
inc
or
fdivr
xchg
lods
jmp
mov
mov
lods
lock
mov
dec
aaa
ds
(bad)
and
(bad)
dec
jno
cmp
xchg
lahf
mov
cld
jmp
pushf
rol
push
sub
inc
xor
pop
cdq
pop
int
scas
jae
mov
lods
or
mov
sub
push
xor
retf
scas
(bad)
js
dec
jns
mov
xchg
sahf
jnp
jecxz
inc
in
xchg
jb
leave
ficom
mov
jp
test
mov
xor
dec
mov
jmp
int
push
ret
pop
push
daa
pop
pop
lea
inc
mov
pop
cmps
pop
retf
xchg
jge
arpl
mov
add
push
xchg
das
repz
mov
es
inc
mov
in
inc
add
retf
xadd
pop
les
and
push
mov
dec
es
mov
mov
fs
test
xchg
div
sbb
mov
sbb
sub
mov
add
adc
sub
pushf
cs
std
inc
stc
in
cmp
add
ja
mov
inc
inc
cmps
js
lods
and
retf
cs
(bad)
shl
ret
dec
rcl
mov
sti
push
repnz
dec
idiv
(bad)
adc
inc
xchg
std
fwait
enter
jle
xchg
(bad)
sbb
std
lods
rcr
dec
inc
xchg
(bad)
addr16
sub
inc
cmp
xlat
repz
int3
ds
or
mov
jle
cdq
jb
pop
popf
mov
scas
push
out
clc
sbb
or
sbb
wrmsr
cdq
and
jg
inc
inc
sahf
push
add
ds
movs
add
push
dec
out
std
test
lea
pop
jg
cmps
imul
xchg
pop
cs
enter
push
(bad)
mov
(bad)
popf
xchg
add
call
mov
cli
dec
sbb
sti
inc
pop
push
sub
sbb
jbe
mov
int
cmp
das
xchg
into
sbb
inc
inc
cld
or
push
and
push
jmp
cmp
xor
mov
adc
addr16
scas
mov
mov
jp
push
inc
jb
outs
(bad)
mov
dec
call
adc
sti
test
test
xor
(bad)
cld
retf
pushf
or
stos
push
add
(bad)
ret
adc
mov
arpl
popf
mov
mov
sub
or
sbb
sbb
pop
ds
and
add
jnp
mov
(bad)
adc
call
out
outs
pusha
mov
pop
mov
movs
pop
adc
out
jge
and
cwde
stos
sahf
sub
lock
movs
dec
fcom
or
cmp
aad
and
cmp
mov
and
lahf
xchg
xchg
adc
fild
enter
jnp
out
sbb
pop
xor
adc
das
(bad)
adc
(bad)
sub
mov
or
divps
out
inc
lods
xlat
jo
inc
jge
xchg
popa
popf
mov
dec
loopne
xchg
arpl
cmps
jae
(bad)
mov
lock
ja
mov
add
fimul
mov
into
adc
pmuludq
clc
inc
enter
pop
mov
arpl
sub
sub
lock
int3
add
add
loopne
adc
sbb
mov
pop
into
dec
jae
mov
xor
jmp
rol
mov
push
xchg
aam
sbb
mov
xchg
repz
xor
popa
stos
in
lock
adc
mov
lock
arpl
test
mov
jge
xchg
adc
push
pop
dec
cmps
mov
std
pop
in
cmp
mov
xor
cmps
js
pop
dec
pop
call
push
pop
xchg
icebp
xchg
adc
sbb
mov
gs
xchg
mov
(bad)
hlt
mov
ja
movs
xchg
xchg
adc
mov
stos
fisttp
push
ror
das
inc
adc
mov
and
cmps
adc
xchg
jno
push
lods
mov
out
xchg
fisttp
mov
push
inc
push
mov
imul
addr16
outs
sbb
xchg
call
unpcklps
lods
cwde
add
call
inc
fisubr
mov
xchg
adc
out
das
int3
in
xor
inc
mov
lods
test
rol
aam
jp
lahf
fst
cs
fucomip
ja
add
dec
cmps
xor
lods
addr16
push
cmps
call
call
outs
inc
xor
push
push
push
and
mov
jb
outs
add
sub
sbb
dec
cdq
cmps
out
lods
lock
dec
add
cmp
cmp
xlat
movs
das
out
outs
cmps
sahf
scas
mov
mov
out
shr
out
lea
gs
pop
ss
out
push
jge
fs
std
ins
pop
ins
lods
xchg
cdq
mov
fsubp
cmp
sub
and
inc
lods
jae
sbb
imul
add
mov
adc
or
std
push
mov
iret
sar
xlat
mov
and
movs
stos
es
xchg
cwde
lods
scas
push
mov
scas
pop
sbb
xor
adc
and
int
sbb
push
mov
sahf
mov
add
fiadd
(bad)
push
dec
gs
out
cmp
ss
cmp
mov
add
push
push
(bad)
jmp
pop
enter
dec
push
inc
(bad)
jp
add
leave
mov
ss
clc
add
(bad)
in
(bad)
pushf
pop
pusha
mov
mov
sub
dec
push
mov
cmp
dec
mov
or
gs
adc
pop
mov
cmp
imul
jmp
jno
sub
pop
das
push
sub
test
cmp
sub
cmp
pop
inc
xlat
out
xchg
lahf
ret
pop
fs
shl
mov
jns
out
stos
jo
cmps
push
xor
in
and
dec
sub
mov
sbb
cld
xchg
div
dec
je
popf
fs
imul
sub
mov
aad
iret
es
js
or
jne
movs
mov
cmp
call
push
pop
and
add
pop
add
pop
lahf
add
addr16
ins
or
sub
test
fmulp
mov
int3
jmp
push
xchg
xchg
xchg
gs
call
pop
mov
xor
cmps
add
cs
jmp
sar
sbb
mov
cmp
hlt
(bad)
rol
or
jbe
shl
outs
outs
sub
(bad)
retf
xchg
sub
jmp
xchg
jmp
fisttp
push
jge
(bad)
cmp
movs
pop
ss
add
push
jp
repnz
mov
gs
imul
loop
sub
hlt
mov
jne
mov
js
loope
mov
inc
rcr
test
adc
(bad)
leave
dec
retf
and
es
das
lahf
dec
or
retf
test
cli
icebp
xor
xor
aas
adc
sbb
jns
je
(bad)
cmp
scas
idiv
(bad)
(bad)
shr
and
dec
jge
push
aam
adc
mov
sbb
movs
pushf
ja
arpl
mov
inc
jg
mov
(bad)
icebp
into
fldcw
mov
icebp
dec
add
loop
(bad)
pop
les
jae
pop
test
outs
and
xchg
lahf
enter
sbb
fadd
test
ins
ins
or
adc
scas
ss
call
and
into
mov
fist
inc
scas
sub
mov
mov
xchg
imul
aad
sti
cmps
cmp
mov
das
inc
hlt
shl
idiv
sub
stos
cmp
fstp
and
mov
inc
rcl
mov
je
add
(bad)
sbb
xor
jecxz
iret
pop
fsubr
jb
xchg
inc
inc
call
adc
cld
xchg
inc
mov
inc
and
pop
xchg
mov
cmc
ret
mov
add
xchg
mov
mov
mov
cmc
xchg
jne
sub
clc
jns
pop
pop
add
or
jne
jae
dec
jmp
les
mov
push
adc
outs
and
xlat
sbb
ins
inc
scas
cmp
adc
aaa
lods
rol
jne
jb
pop
cmp
pop
loopne
jb
out
cmps
adc
jns
test
mov
movs
inc
jno
lahf
popf
and
cli
div
shr
stos
xchg
xor
push
dec
sbb
inc
mul
jnp
mov
call
(bad)
call
fs
push
ror
pop
and
or
push
daa
mov
inc
fwait
retf
cmp
retf
adc
jo
stos
inc
fimul
test
mov
mov
loope
mov
cmc
pop
adc
adc
mov
ret
lods
dec
sub
lock
sub
dec
daa
stc
xor
pop
icebp
xchg
mov
adc
iret
sbb
fsub
fbld
pusha
pop
mov
pop
scas
sub
mov
ja
xchg
lods
or
cmps
in
(bad)
cmc
pop
jmp
lods
shl
scas
in
icebp
mov
adc
iret
je
xchg
cwde
into
cmp
add
retf
jl
mov
ins
cli
push
sub
aad
scas
and
lods
es
mov
stos
mov
adc
test
clc
enter
push
inc
jle
jmp
add
sbb
adc
sar
neg
rcr
cmps
push
idiv
jno
mov
sti
out
push
lock
mov
and
mov
in
imul
mov
int
add
ret
fcmove
sub
adc
sbb
cwde
cmp
jo
pop
xchg
fldcw
sbb
repnz
cmp
pop
sub
in
aas
mov
xchg
pop
and
dec
inc
test
mov
out
in
mov
pop
fbstp
ficomp
fadd
dec
sar
movs
aaa
jmp
mov
xchg
nop
xchg
adc
shl
mov
call
push
add
mov
jb
jnp
sub
cwde
outs
es
(bad)
mov
imul
loop
mov
and
inc
ja
cmp
ja
dec
ins
movs
pushw
mov
pop
lahf
stos
popf
sbb
dec
dec
leave
(bad)
mov
xlat
sbb
(bad)
idiv
mov
clc
jg
cli
stos
xchg
adc
ins
xchg
mov
inc
jl
ret
inc
mov
pop
popf
lahf
dec
in
push
out
pop
sub
rcr
sbb
pop
pop
push
fwait
pop
add
pushf
xchg
fadd
push
xchg
iret
fs
xor
inc
ins
ja
imul
jo
jne
mov
add
xor
icebp
mov
fcomp
cli
movs
test
les
or
in
or
les
outs
xchg
fisub
stos
mov
movs
xor
outs
jmp
dec
nop
adc
push
mov
jns
jge
fwait
xchg
xchg
and
ficom
test
bound
dec
cmp
inc
es
sub
pop
mov
jne
scas
push
jnp
fsub
shl
pop
pushf
enter
ins
movs
outs
mov
mov
push
sti
jecxz
add
pop
sti
cmp
sahf
mov
mov
clc
jle
stos
mov
sub
xor
int
pop
pushf
and
inc
fisubr
and
push
int
aaa
sbb
or
mov
jge
in
push
jb
mov
call
add
stos
popf
xor
pop
arpl
fsub
add
sub
mov
outs
mov
popf
pusha
sub
in
sub
pop
stos
mov
gs
mov
xchg
mov
xor
pop
out
aaa
add
nop
in
aad
shl
add
dec
mov
xor
xchg
mov
retf
(bad)
fnsave
pop
xor
adc
pop
xor
lea
shr
pop
sbb
add
sub
frstor
shl
mov
xor
(bad)
call
inc
push
jmp
sbb
movs
fs
xchg
mov
adc
bound
dec
sti
jl
pop
push
push
mov
jmp
and
mov
cmp
push
mov
daa
into
pop
cli
iret
addr16
repz
jge
or
dec
pop
dec
daa
push
inc
lahf
and
outs
inc
mov
ins
lahf
cmp
hlt
mov
fsubr
pop
outs
and
pop
movs
shl
sbb
movs
lea
jmp
mov
inc
popa
xchg
xchg
and
cli
and
cmps
dec
shr
fmul
imul
mov
xor
jno
xchg
mov
cmp
and
cmp
cmp
jbe
push
in
aas
shl
jnp
dec
and
fwait
xor
cmp
ret
inc
out
push
je
dec
lock
xchg
in
push
(bad)
stos
daa
fwait
bound
sbb
stos
mov
call
ins
enter
sub
iret
mov
pop
retf
jg
ficomp
sub
shr
repz
sbb
dec
add
out
and
jl
pusha
xchg
sbb
and
popa
je
sbb
mov
sbb
in
mov
push
ficomp
mov
inc
rcl
or
cwde
mov
mov
cmps
cmp
add
int
repz
fild
sbb
xchg
js
xor
mov
ret
fisttp
cmp
retf
inc
dec
inc
cmp
sbb
jo
jl
add
jne
pop
sbb
outs
inc
cmps
adc
or
das
jl
fucomp
adc
addr16
jae
fsub
pop
xchg
mov
popf
call
in
dec
stos
xchg
inc
loopne
nop
add
std
cli
cwde
enter
xchg
cwde
push
imul
sub
repz
jne
and
sbb
jnp
pop
sbb
xor
icebp
fstp
(bad)
aam
bound
in
sub
add
test
add
push
retf
scas
mov
pop
hlt
fild
test
ret
icebp
sahf
(bad)
out
add
into
icebp
icebp
sub
jmp
mov
mov
leave
rcr
lods
stos
imul
adc
fsubr
add
or
pop
jns
xchg
mov
push
shr
sbb
xor
adc
jp
sbb
jmp
inc
mov
add
push
adc
out
call
dec
ins
mov
in
jmp
mov
out
in
xchg
data16
stos
imul
hlt
popa
icebp
test
lods
mov
leave
mov
clc
jg
jmp
cmp
ret
aam
jb
and
pop
cmp
inc
pop
jg
test
pusha
leave
(bad)
jnp
jmp
fsub
push
and
jno
dec
push
aad
dec
in
mov
cmp
xchg
test
dec
jl
mov
popf
shl
int3
call
push
cmc
dec
pushf
(bad)
pop
xchg
lods
xchg
adc
mov
mov
mov
in
sbb
and
adc
inc
mov
pop
(bad)
ins
cmp
mov
lods
sbb
mov
dec
inc
retf
popa
or
mov
push
(bad)
jno
or
mov
pop
adc
xor
in
cmp
sub
push
rcl
mov
push
std
loope
ss
jl
sahf
fprem
and
sbb
shr
div
push
sbb
adc
pusha
fimul
or
xor
mov
mov
in
inc
sar
jp
cld
pop
adc
cmp
and
loop
sahf
aas
fdivr
or
dec
outs
lods
test
push
sub
aas
mov
add
das
imul
cdq
inc
icebp
jmp
out
push
call
jns
les
mov
ret
jle
sahf
test
xchg
gs
mov
push
dec
mov
xor
pop
test
ficomp
jno
cli
add
jno
ret
sbb
pop
mov
mov
add
mov
ret
pop
enter
jbe
daa
mov
mov
jmp
cmp
cld
mov
rol
test
cmp
jle
test
(bad)
out
pushf
dec
loopne
lods
push
cmp
cmc
(bad)
pop
lock
sub
cs
lea
inc
in
xchg
cdq
test
and
jp
std
sbb
adc
outs
pop
imul
aaa
mov
mov
add
add
addr16
and
int3
or
push
inc
fcom
scas
stc
ins
loop
test
out
js
hlt
fsubr
lods
test
test
sti
cwde
out
mov
mov
gs
iret
sbb
cs
fldz
and
add
cmp
xor
inc
icebp
retf
mov
inc
(bad)
cmps
lock
fs
in
or
add
push
inc
sub
fcomp
popf
leave
xchg
and
inc
ins
mov
cmp
in
push
fdivr
mov
jmp
call
sbb
xlat
jp
mov
(bad)
xor
stc
(bad)
clc
push
out
inc
jbe
stos
pop
jp
mul
ja
sub
mov
and
data16
adc
or
pop
push
fs
mov
sub
inc
test
mov
fild
push
scas
sub
sar
xchg
stos
mov
ret
stos
sub
xchg
sbb
fdivp
xor
into
cwde
mov
rcr
cwde
mov
ja
inc
sbb
iret
xchg
stc
jbe
push
imul
dec
mov
and
push
fiadd
mov
inc
jecxz
punpckhbw
xor
aaa
mov
mov
pop
mov
pop
mov
popf
xor
dec
popf
sar
inc
xchg
dec
xlat
jl
inc
mov
ffree
xlat
pop
movs
mov
dec
shl
pusha
adc
mov
mov
fdiv
mov
call
push
out
std
add
loop
shl
pop
jbe
mov
dec
jnp
cs
and
cmp
mov
sbb
pop
mov
inc
adc
callw
das
cmp
dec
aam
mov
mov
push
jg
sub
xchg
ficomp
aam
dec
xlat
mov
xchg
retf
or
mov
fnsave
aam
mov
push
pop
dec
repnz
ja
xor
inc
cwde
sbb
cs
fwait
xchg
mov
xor
dec
stc
(bad)
cmp
std
inc
inc
inc
adc
pop
or
add
push
mov
div
daa
or
in
mov
scas
rcl
jge
and
and
mov
lds
mov
mov
pop
out
xchg
sbb
mov
adc
aad
xchg
jle
or
push
dec
scas
push
inc
sbb
mov
push
mul
ficomp
cdq
jmp
mov
xor
fld
mov
add
sbb
jecxz
in
mov
mov
push
loop
shl
jmp
iret
out
or
pop
cmc
mov
sbb
add
test
aam
fimul
sub
cmp
(bad)
out
js
and
mov
dec
or
test
mov
adc
test
mov
pop
pusha
arpl
iret
sbb
jle
or
sbb
mov
je
test
add
and
(bad)
icebp
call
jp
mov
shl
xchg
mov
cmp
shl
clc
pop
mov
xor
mov
in
xchg
mov
(bad)
hlt
retf
pusha
adc
mov
adc
sbb
test
cs
push
outs
push
sub
cmps
cmps
enter
jmp
into
stc
push
test
fs
push
ds
add
or
ficom
fmul
jmp
loope
mov
cmc
bound
jb
ret
add
data16
cld
test
mov
cmp
xchg
and
ret
push
outs
out
xor
pxor
into
pusha
cwde
inc
imul
adc
xchg
sbb
xchg
mov
cmp
jmp
shr
ja
add
adc
scas
pop
rol
inc
jnp
inc
pop
mov
pop
fwait
lods
test
inc
push
outs
shr
adc
outs
fnstenv
rol
fnstcw
icebp
xchg
or
mov
mov
data16
cmps
adc
stos
popf
jle
mov
push
ret
push
scas
sbb
stos
daa
pushf
push
inc
add
xchg
outs
dec
cs
pop
push
inc
scas
mov
push
pop
or
mov
cmp
call
cmp
fdivr
cmps
xchg
and
outs
pop
cmps
das
sbb
push
sti
ror
mov
adc
dec
dec
jecxz
ins
lock
and
in
arpl
sbb
outs
mov
jbe
or
pop
repnz
iret
cmp
retf
sbb
inc
mov
cmp
daa
mov
mov
push
mov
test
add
jmp
loopne
enter
inc
jae
call
cmc
mov
not
sbb
imul
pusha
add
dec
sub
imul
(bad)
scas
je
or
cmp
cwde
pop
and
xchg
test
fisttp
dec
aas
cld
and
bound
cmp
jge
lahf
push
adc
mov
loope
cwde
pop
lods
fadd
mov
jp
push
jmp
push
int3
mov
mov
sbb
sahf
fdiv
movsx
mov
cmp
mov
mov
mov
inc
lock
retf
inc
mov
fdivr
sbb
cmp
cli
dec
pop
jns
xchg
mov
inc
out
adc
adc
adc
jmp
fisubr
rcl
push
cwde
mov
or
pop
jg
stc
loope
adc
out
push
jg
sub
xchg
in
test
(bad)
xchg
dec
xor
repz
and
adc
mov
pop
push
loopne
mov
inc
(bad)
cwde
cld
fldcw
mov
add
in
jne
and
sub
xor
jle
cs
test
push
test
add
jl
loopne
cmp
or
dec
mov
push
cmps
cmp
cmps
mov
div
pop
(bad)
pop
shl
xchg
cmp
hlt
jmp
sbb
mov
lods
call
inc
out
xchg
push
cmp
(bad)
inc
push
lahf
aad
jmp
adc
mov
jbe
adc
add
or
stc
pop
pop
push
lods
les
rcr
add
jmp
adc
sahf
sub
cdq
or
mov
jg
mov
pop
imul
mov
mov
dec
xor
jne
lods
ret
(bad)
mov
xor
jmp
sbb
pusha
mov
mov
pop
add
cmp
repnz
mov
sbb
sbb
retf
in
popa
push
push
or
cwde
push
add
lods
call
stc
std
addr16
idiv
push
inc
mov
xor
dec
mov
shl
pop
xchg
fwait
mov
add
call
call
jns
jne
cmps
fnstsw
mov
pop
lock
cli
aad
jno
outs
hlt
mov
bound
mov
xchg
test
fdiv
fsub
daa
dec
xor
jns
inc
es
cmps
mov
cmp
mov
dec
fbstp
imul
gs
ss
call
cmp
and
sub
icebp
xchg
cmp
pop
jl
xchg
jg
lods
(bad)
iret
mov
pop
(bad)
nop
add
ret
sbb
inc
push
mov
mov
cmp
cli
mov
loopne
dec
mov
repz
js
dec
imul
pop
jne
mov
inc
call
inc
clc
mov
fist
cmps
cmp
pop
and
and
popf
push
and
sub
mov
dec
fdivr
xchg
xor
cmc
jb
pop
jbe
cmps
dec
lds
jmp
sub
(bad)
lea
in
movs
mov
icebp
xchg
test
xor
fsubr
pop
sub
jmp
adc
xchg
cmp
or
mov
mov
or
imul
cld
aas
ja
adc
and
fs
pop
adc
mov
cld
jmp
jbe
bound
call
loopne
adc
xchg
xor
fwait
adc
mov
push
gs
ficom
(bad)
into
loopne
mov
inc
int3
sub
dec
inc
push
fucomip
lods
jp
and
sub
test
dec
pop
mov
mov
std
jge
shl
pushf
rcr
pop
mov
and
fdivr
test
add
stos
and
int3
int
sbb
push
pop
push
ficom
mov
fs
mov
test
fwait
mov
mov
jmp
mov
jmp
pop
ss
cmc
aam
les
pop
cmp
aaa
sbb
pusha
test
mov
jge
fidivr
pop
adc
fcomp
cmp
sbb
inc
push
mov
inc
mov
popf
push
push
inc
jecxz
stos
sbb
pop
and
cmp
loop
cmp
cmps
mov
mov
push
dec
movs
xchg
sahf
arpl
test
mov
popa
repz
mov
and
mul
mov
fs
sub
or
(bad)
retf
aad
fcmovnbe
xor
inc
inc
ins
jle
sub
adc
outs
or
sub
in
aam
adc
into
xchg
sbb
bound
js
(bad)
hlt
dec
mov
adc
inc
and
mov
mov
stos
(bad)
call
sbb
jns
mov
lds
pop
sub
repnz
imul
fs
inc
lahf
sbb
mov
xchg
int
dec
sub
add
sbb
sub
sub
repz
outs
nop
cmova
xor
ds
sub
test
push
retf
jl
inc
(bad)
add
pop
loopne
mov
and
stc
mov
in
movs
stc
xor
sahf
xchg
adc
cdq
push
shr
sub
(bad)
cli
ret
jle
sbb
pop
fdivr
inc
dec
mov
cmps
mov
call
add
add
mov
xchg
jg
dec
push
adc
or
xlat
xchg
xor
and
cld
mov
rcr
inc
jl
pushf
jle
(bad)
cli
ins
mov
xchg
pop
or
movs
mov
leave
pop
mov
add
mov
adc
icebp
xchg
test
test
cmp
push
aad
sti
js
pop
or
mov
push
adc
or
cmc
data16
fbld
icebp
add
adc
cmp
mov
inc
popf
mov
fisub
pop
(bad)
adc
ffree
mul
mov
adc
loope
pop
enter
in
inc
xchg
jmp
add
fcmovbe
mov
mov
dec
int
aad
sub
in
fdiv
and
push
bound
arpl
pop
scas
retf
(bad)
cdq
dec
adc
jle
fld
dec
sbb
call
cmp
mov
jge
(bad)
popf
sub
das
inc
(bad)
repz
nop
out
push
xlat
dec
push
pop
lods
push
(bad)
mov
xchg
(bad)
leave
out
and
retf
fisttp
and
cmp
cld
jecxz
icebp
xlat
push
push
jmp
sbb
mov
pusha
sti
xor
jg
sbb
mov
push
call
pop
int
iret
fcomp
mov
cmp
and
lods
sub
pop
test
js
or
cmp
cmp
into
loop
xchg
icebp
pop
stc
inc
and
mov
imul
enter
jnp
scas
sar
pop
fstp
sbb
mov
xchg
xchg
(bad)
push
jg
cmp
push
out
pop
push
push
pop
or
inc
popf
inc
es
xchg
mov
out
add
jmp
jbe
sbb
add
inc
inc
xchg
xchg
cmp
add
push
inc
sar
sub
jmp
in
add
mov
shl
mov
sbb
les
xchg
shr
xchg
in
repnz
xor
mov
mov
jae
pop
shr
add
fld
push
sbb
adc
mov
lahf
lahf
cmp
rcl
loop
add
dec
leave
xor
mov
retf
xor
jge
fdivr
ss
xchg
sti
or
push
cmp
mov
pusha
icebp
pop
outs
inc
mov
jns
cmc
call
push
leave
aad
sbb
outs
mov
lea
mov
loopne
mov
out
xor
and
sar
ja
sub
push
pop
ins
mov
pop
aad
repnz
jle
xchg
jo
inc
sbb
push
and
push
lea
xchg
aaa
jge
test
out
xchg
inc
xchg
in
push
or
mov
ds
call
dec
retf
push
mov
xor
not
pop
mov
hlt
push
cmp
shr
sbb
clc
dec
or
mov
in
inc
fimul
push
cmp
add
add
pop
lods
sbb
popf
imul
stc
imul
mov
xchg
icebp
add
arpl
mov
inc
in
sub
jg
repz
sub
cmps
pop
outs
out
repnz
inc
loopne
(bad)
cld
loopne
ins
sahf
fstp
dec
cmps
xor
fs
xor
fs
dec
(bad)
ret
mov
in
mov
bound
sub
popa
cmc
aas
mov
scas
or
xchg
ss
xchg
test
bndstx
out
call
mov
dec
(bad)
pop
je
shl
ret
cwde
rcr
movs
inc
in
jg
cli
idiv
shl
or
cmps
test
nop
retf
sar
scas
xor
ds
aam
lods
sub
xchg
jne
popa
mov
rcl
sbb
jmp
jbe
pop
inc
jmp
outs
ja
sbb
jns
mov
jae
shl
(bad)
mov
loop
popa
fs
sub
pushf
hlt
and
mov
inc
push
lds
lock
sti
mov
std
mov
call
mov
jge
push
loopne
add
mov
scas
dec
fdiv
or
jge
retf
sub
arpl
pop
dec
fdiv
xchg
add
push
imul
jle
mov
pop
mov
test
addr16
fcmovb
lods
pop
neg
cmc
lods
mov
dec
loopne
sahf
cmp
out
xchg
cwde
fld
jae
and
fsub
inc
ja
dec
mov
inc
outs
fwait
ss
cwde
stos
mov
sbb
retf
repz
jl
xor
add
jl
add
push
ins
xchg
mov
add
daa
imul
mul
pop
inc
mov
dec
xchg
mov
shl
add
lahf
sub
mov
push
movs
xchg
test
movs
aam
jg
out
fwait
dec
xchg
pop
fdiv
inc
aaa
icebp
test
(bad)
dec
add
xor
adc
je
inc
push
dec
cmc
pushf
int3
lahf
adc
add
xchg
ins
pop
pop
pop
mov
and
pop
adc
scas
aad
or
pop
dec
ret
shl
fldcw
inc
mov
pop
fadd
cmp
mov
xchg
popa
js
xchg
hlt
ror
pop
inc
scas
mov
shr
dec
sub
(bad)
(bad)
adc
add
das
ins
daa
sub
sahf
mov
sub
(bad)
retf
add
jmp
inc
mov
movs
or
sar
(bad)
test
lock
add
outs
fstp
jae
sbb
rcl
(bad)
rcl
mov
addr16
int
stc
ret
shl
mov
sbb
ret
(bad)
in
push
inc
sub
fist
push
dec
cmps
jne
push
out
mov
fcomp
loope
jnp
mov
jp
cmc
ds
arpl
sbb
inc
imul
adc
adc
xlat
xchg
cmp
jge
test
jns
int3
test
fsub
test
cwde
iret
push
test
jg
xchg
xor
test
fistp
cmc
outs
hlt
sbb
retf
and
inc
(bad)
outs
pusha
inc
test
add
cmp
pop
xchg
int3
and
out
pop
push
jns
aam
jae
push
xor
jae
lods
or
push
inc
in
lods
mov
hlt
fucomip
cmp
inc
jae
inc
enter
loopne
out
loope
jnp
fcmovb
xchg
adc
jne
cmp
fwait
mov
adc
dec
pop
mov
xor
iret
into
shl
sbb
jbe
lea
inc
(bad)
fwait
mov
jg
neg
mov
inc
int
or
cmp
pop
fstp
xchg
sbb
xchg
mov
daa
and
xor
jg
mov
push
jmp
dec
div
or
jp
fwait
ror
sub
jns
mov
rcr
lods
out
rcr
mov
cmc
dec
push
das
iret
sti
std
jp
adc
and
push
and
mov
int3
pop
cli
jmp
ds
inc
arpl
and
push
push
fisttp
push
jb
(bad)
in
cmp
inc
in
shl
sbb
push
arpl
pop
stos
shl
sub
out
adc
outs
cmps
cdq
mov
push
sti
ret
xor
out
mov
ins
inc
mov
or
lock
in
and
popa
test
outs
and
mov
out
pop
sti
in
adc
jmp
ret
sub
stos
sbb
adc
ss
lods
xchg
inc
push
push
in
fisub
sbb
jmp
inc
bswap
mov
xchg
xchg
push
fwait
push
sbb
mov
mov
dec
in
mov
sub
(bad)
in
inc
sti
inc
pop
sbb
inc
outs
xchg
push
mov
xchg
scas
or
repz
adc
and
jmp
imul
jne
add
lock
xchg
jmp
hlt
addr16
pop
lds
test
cmp
cld
pop
xor
repz
mov
pop
pop
mov
mov
cmc
fpatan
dec
sbb
mov
cmp
jbe
pop
or
call
bound
or
push
out
sbb
inc
aad
gs
or
add
lea
inc
test
pop
cdq
scas
mov
enter
xchg
and
inc
and
push
xchg
mov
push
(bad)
fild
std
shl
mov
mov
(bad)
xchg
jmp
pop
jns
mov
sub
and
ret
inc
fld
dec
ds
addr16
inc
cdq
ss
mov
(bad)
iret
and
pop
add
pop
jmp
cwde
jno
mov
cwde
xor
adc
jecxz
mov
jmp
sbb
pop
ret
inc
stos
aad
inc
mov
jne
imul
pushf
mov
sbb
cli
repnz
loop
sbb
push
(bad)
ds
fimul
pop
cmp
xchg
adc
mov
fxch
test
push
rcr
dec
ja
xor
jbe
stos
inc
nop
sub
adc
lods
outs
es
inc
jo
mov
fdivr
movs
and
dec
sub
sub
xchg
jg
mov
push
lods
cmp
add
fcomp
out
(bad)
and
(bad)
mov
cmp
(bad)
outs
(bad)
dec
into
dec
ds
xchg
push
jp
cmp
dec
pop
dec
mov
mov
loope
adc
and
js
push
call
and
xchg
xchg
or
push
and
sti
stos
and
inc
call
aad
jae
out
adc
shl
sub
xchg
mov
sbb
sub
cmp
leave
mov
push
gs
cmp
lods
jnp
inc
mov
or
inc
call
push
adc
sbb
push
xor
scas
pop
push
test
inc
push
lea
jnp
icebp
xchg
inc
xchg
lea
aam
pop
jno
imul
inc
add
(bad)
xchg
and
fwait
not
pop
mov
into
fist
icebp
movs
imul
(bad)
cmp
sbb
shl
sbb
cmp
cmp
scas
mov
stc
rcr
call
inc
cmp
sbb
jle
jp
cdq
push
inc
lahf
xor
xlat
mov
(bad)
sti
add
pusha
pop
mov
jb
enter
add
mov
lods
pop
call
out
daa
sahf
sbb
xchg
jmp
dec
fld
lock
(bad)
dec
inc
xchg
xchg
ins
(bad)
cmp
push
loope
in
push
out
push
sbb
dec
clc
inc
pop
jl
cmps
mov
in
add
sbb
aaa
add
jge
mov
test
lods
pop
dec
shl
nop
pop
sbb
sbb
dec
in
xchg
add
fs
imul
in
cdq
push
mov
daa
in
push
test
gs
xchg
cmps
(bad)
cmp
rol
or
jl
sub
cs
mov
push
push
xchg
push
pop
pop
out
(bad)
push
sar
iret
adc
dec
sti
and
add
loop
lods
aas
lods
jb
mov
add
or
fild
bnd
jo
xor
call
lds
or
push
mov
fucom
adc
mov
das
(bad)
shr
lods
fimul
outs
int
or
test
or
es
popa
cmps
jne
add
add
push
test
add
cmp
mov
inc
test
mov
loopne
add
jmp
cli
push
push
and
jp
lahf
stc
dec
xchg
fstp
dec
in
cmps
stos
xor
shl
dec
mov
mov
repz
fmul
mov
aam
push
es
(bad)
in
pusha
fild
pusha
arpl
jns
dec
test
hlt
add
out
jp
dec
xor
dec
or
and
inc
pop
mov
(bad)
cmp
mov
jno
or
leave
in
(bad)
test
pop
js
and
mov
movs
inc
neg
xchg
shl
cmps
jmp
lods
add
shl
fdivr
mov
sbb
repnz
int3
dec
fistp
push
inc
mov
inc
pop
push
xchg
mov
mov
push
lods
jge
call
(bad)
pop
jg
inc
mov
add
daa
sub
and
fisttp
mov
mov
jl
fstp
aam
lahf
add
inc
arpl
dec
xchg
loope
popa
nop
pushf
pop
push
out
(bad)
popf
ja
pop
cmps
xchg
mov
push
test
mov
cld
retf
loop
sbb
push
cmps
cmp
xor
and
sbb
and
lahf
pushf
aam
sub
sbb
in
or
jns
fistp
xor
jl
push
xchg
or
bound
es
or
mov
out
cmps
loope
xchg
fidivr
inc
sbb
cmps
fld
jecxz
xchg
xchg
int
mul
xchg
sbb
pop
push
cmps
mov
retf
(bad)
fucomip
push
call
or
fcmovb
jae
adc
jle
lea
push
mov
or
sbb
inc
int3
cld
add
arpl
inc
inc
or
stos
pop
ins
fld
ror
repz
sahf
xor
mov
xchg
leave
inc
leave
jne
inc
fcom
iret
frstor
in
mov
adc
shl
mov
push
jne
xchg
xchg
faddp
ins
ja
sub
stos
adc
push
retf
and
inc
dec
cmp
mov
xchg
test
int
sbb
bound
mov
cmp
repz
je
dec
and
mov
enter
mov
arpl
push
push
jno
jle
xchg
add
loope
push
jmp
cmps
sub
lock
scas
daa
adc
xchg
mov
push
(bad)
addr16
pop
sbb
cwde
inc
add
inc
xchg
gs
imul
popa
out
jnp
enter
add
aas
cs
xor
lock
adc
je
cmp
test
xchg
leave
pop
cwde
inc
push
jl
jge
sahf
jmp
jne
xchg
mov
cmps
popf
(bad)
dec
mov
mov
xor
stc
lods
rcr
dec
jmp
popa
jmp
sti
lods
pop
out
jns
pop
sahf
ins
jle
pushf
ja
bound
and
sahf
enter
and
adc
add
ss
pop
dec
fist
nop
mov
adc
push
loop
jmp
cli
dec
push
je
pop
call
aam
pop
out
mov
test
cwde
rcl
adc
jnp
xchg
nop
xchg
adc
mul
cmc
mov
inc
and
(bad)
pusha
jmp
ins
push
popf
and
xchg
bound
pop
popaw
push
cld
or
jg
gs
mov
mov
xor
stos
rcr
pushf
repz
ret
push
std
fcomp
push
aad
imul
xchg
mov
sar
call
call
outs
fist
inc
or
rcl
pop
and
xor
xchg
xchg
addps
ja
loope
mov
push
mov
ss
bound
ins
push
mov
popa
mov
mov
sbb
dec
ret
cmp
jne
cmp
mov
sub
pop
aaa
jmp
xchg
or
pop
scas
xchg
mov
call
shl
stos
adc
lsl
int
sti
push
(bad)
adc
or
cwde
pop
add
pushf
call
jecxz
mov
inc
or
fiadd
ja
xchg
sub
jbe
inc
or
or
mov
mov
push
fwait
idiv
cmc
add
mov
mov
popa
(bad)
mov
gs
retf
mov
xchg
sar
call
xchg
icebp
jecxz
jns
movs
sub
js
sbb
ss
jmp
pop
clc
pop
push
cmp
pop
adc
mov
inc
push
mov
push
test
jecxz
jo
enter
sbb
or
or
arpl
push
dec
xchg
adc
or
inc
iret
rcl
xchg
mov
inc
sahf
lock
or
mov
mov
xchg
retf
dec
lahf
pop
push
loope
nop
bound
jecxz
mov
ins
jge
scas
jbe
xor
sbb
repnz
mul
add
adc
add
add
ja
int
cmp
inc
dec
cli
add
jbe
aaa
in
sub
cmp
push
xchg
dec
push
xchg
and
out
loope
mov
jne
stos
jg
mov
test
enter
rol
mov
or
(bad)
sbb
mov
test
mov
(bad)
pop
fs
jno
jl
xor
cli
in
lods
jl
cmp
xor
add
test
push
xor
xchg
dec
push
dec
inc
out
sub
imul
fs
jge
mov
add
adc
ror
shr
mov
cmp
jg
(bad)
ficom
inc
mov
mov
xchg
stos
xlat
dec
imul
es
fucomi
dec
jmp
push
push
ins
cmps
mov
mov
and
xchg
enter
and
cmp
inc
sbb
mov
xchg
add
add
popf
dec
push
mov
mov
int3
out
mov
mov
jns
sbb
pop
sub
inc
not
test
in
mov
mov
or
addr16
mov
fmul
jmp
sbb
shr
inc
xchg
add
jge
xor
mov
jle
xchg
push
ret
mov
mov
sub
and
cmp
or
mov
gs
push
pop
clc
scas
in
scas
not
inc
bound
push
fild
cmp
cs
repz
push
xchg
dec
cli
mov
pop
jnp
xchg
scas
jl
shl
aad
pop
jp
mov
dec
pop
cmp
sar
and
mov
fs
inc
mov
cdq
xchg
or
lods
pop
std
std
jle
sti
pop
jge
push
(bad)
sbb
cmp
dec
mov
pop
nop
into
mov
xor
stos
mov
shl
ins
xchg
push
call
mov
cmc
xchg
add
mov
pushf
ja
jp
popf
mov
lods
ret
add
xchg
xchg
fisttp
jl
cmp
or
out
stos
pusha
int
inc
xor
das
mov
push
mov
leave
popf
sub
repz
(bad)
jae
jg
aam
adc
aaa
mov
(bad)
jb
dec
jb
or
jmp
mov
call
loop
pop
dec
sahf
dec
lds
movs
ja
in
push
mov
mul
cwde
scas
sub
stos
sub
leave
loope
jnp
fdiv
loopne
imul
cmp
jmp
fldenv
cmp
cmp
arpl
or
push
retf
std
add
std
addr16
and
or
or
mov
daa
ror
pop
mov
arpl
push
sti
dec
inc
and
pushf
xlat
mov
push
jmp
nop
scas
mov
adc
pop
pop
loopne
out
sbb
int
repz
inc
jns
call
sbb
xor
pop
xor
and
lahf
mov
dec
pop
int
call
fs
cli
and
(bad)
sbb
sahf
jns
mov
outs
mov
cmp
out
mov
dec
jo
das
sub
adc
popf
inc
pop
fsubrp
xchg
sbb
jl
stc
mov
ja
shl
out
aad
pop
xchg
test
clc
jbe
or
adc
int
addr16
cmp
inc
xchg
aaa
pusha
jae
bound
pop
cdq
xchg
popa
clc
shl
fcmovnu
arpl
arpl
jmp
sub
out
or
(bad)
push
ror
call
out
xchg
pop
popf
jmp
js
cdq
loope
out
fwait
jb
mov
mov
mov
popa
pop
movs
rcl
(bad)
cli
dec
jne
aam
jmp
rcl
or
sub
call
jns
mov
mov
ret
shl
xchg
jb
pusha
cmp
pop
or
scas
sub
nop
push
and
pushf
(bad)
add
int
and
fcomp
test
je
jno
sbb
adc
(bad)
div
cmp
out
mov
lea
into
xchg
jmp
aam
int
scas
push
pop
cmp
clc
out
data16
pop
pop
jbe
lea
jp
lahf
inc
or
dec
or
push
icebp
in
das
mov
sub
or
jae
lea
mov
dec
scas
mov
inc
retf
inc
scas
lea
inc
add
push
(bad)
test
and
test
imul
dec
xchg
inc
pop
lahf
cdq
jmp
cmp
dec
imul
sub
cmp
sbb
pop
inc
mov
bound
or
or
cdq
in
gs
pushw
fisttp
sub
or
ins
je
push
inc
cmps
pop
pop
cdq
lods
mul
sbb
sbb
fcomp
bound
test
cld
fcomp
push
ret
jmp
push
in
stc
lahf
jno
sbb
fwait
dec
add
cld
and
push
xlat
xor
or
shr
pop
pop
popf
cmp
jp
sub
mov
xchg
sub
sbb
inc
fdivr
add
sub
xlat
pop
js
jae
stos
or
mov
xor
xchg
adc
cmc
inc
jmp
scas
loopne
sti
retf
sahf
data16
xchg
mov
xor
(bad)
cmp
pop
jp
les
jmp
(bad)
jge
(bad)
fistp
xchg
sub
lock
jmp
push
daa
cmps
push
or
call
aaa
test
fld
outs
push
xor
sbb
jg
add
adc
outs
ins
mov
pop
sub
mov
and
(bad)
xchg
and
mov
pop
inc
mov
les
fnsave
push
ror
popf
add
test
pop
mov
dec
xor
movs
cli
out
jnp
fist
rcl
dec
jmp
and
adc
cli
dec
sbb
mov
or
iret
inc
clc
mov
mov
pop
push
sub
das
push
loop
nop
xor
xor
pop
call
push
pop
int3
cld
xchg
inc
pop
push
inc
inc
lods
popa
test
mov
push
(bad)
repz
in
dec
stos
xchg
mov
jle
mov
std
mul
in
bound
hlt
cmp
jmp
mov
xor
outs
lea
out
pop
fcomi
push
(bad)
add
sbb
or
inc
ss
jmp
mov
ror
mov
retf
repz
xor
ins
cld
in
popf
and
ret
pop
add
fist
(bad)
fsubr
out
fwait
ins
test
and
adc
sub
mov
jmp
popa
xchg
mov
fisubr
xlat
cmp
xor
cdq
add
pop
pop
mov
imul
add
retf
shl
or
sbb
js
popf
push
scas
or
stos
retf
pop
sub
ror
xor
add
shl
jae
test
mov
xchg
loope
ret
dec
inc
mov
in
sar
sahf
stos
inc
in
dec
scas
push
and
mov
inc
sbb
mov
ins
add
xchg
mov
rol
cmp
fadd
push
sbb
sub
in
or
sub
push
ds
pop
test
xchg
sub
sub
jmp
adc
jecxz
shl
inc
fldcw
mov
cmps
addr16
mov
or
mov
rcr
lods
ret
adc
inc
pushf
fsub
ins
sti
or
or
call
pop
and
cmp
popa
mov
sbb
sub
test
js
jecxz
cmp
xor
and
fisttp
test
dec
in
mov
adc
sbb
(bad)
in
sbb
sbb
mov
jge
scas
test
and
ror
cmp
lods
fs
shr
stos
std
pop
push
add
sub
jmp
push
jns
push
movs
cmp
push
sahf
dec
add
int3
add
std
xor
int3
pop
sbb
adc
add
jmp
push
fwait
inc
sbb
dec
inc
xchg
mov
fwait
repz
(bad)
adc
push
mov
jl
mov
adc
out
xor
fisub
xchg
scas
rcr
mov
(bad)
das
xor
cmp
mov
xor
imul
repz
sbb
pop
lea
pop
and
mov
in
ins
stc
mov
mov
jno
jnp
out
xor
je
imul
imul
cdq
test
hlt
(bad)
mov
stos
(bad)
test
xchg
inc
out
mov
mov
push
(bad)
stos
pop
xlat
inc
mov
(bad)
jbe
mov
xchg
arpl
retf
ror
test
in
out
cs
pop
icebp
sub
push
and
mov
sahf
ret
pop
push
dec
or
cmp
push
ja
xchg
pop
rol
imul
sbb
mov
adc
or
mov
pop
pop
lods
push
xchg
call
les
test
mov
xor
(bad)
dec
cmc
das
out
cs
adc
test
ret
ss
dec
lods
sub
push
mov
inc
mov
pop
(bad)
nop
arpl
cmps
add
sbb
cwde
adc
add
and
and
pop
inc
mov
jnp
repnz
cmp
cmc
pushf
add
dec
mov
lods
repz
test
gs
test
iret
(bad)
ins
ja
fisttp
sti
cmp
pop
cli
clc
ret
pop
inc
sbb
pusha
sahf
ja
jae
mov
mov
iret
test
push
sbb
push
cmp
adc
push
cmp
lods
add
and
call
call
dec
push
push
xchg
jp
fwait
xchg
iret
fwait
jne
xor
aam
(bad)
mov
pushaw
xchg
test
shr
cmc
inc
sbb
push
in
xor
(bad)
fbld
inc
popa
jg
sahf
push
pop
test
adc
mov
pop
lods
dec
ret
fcom
mov
and
or
aaa
sbb
pop
dec
lahf
inc
sbb
mov
(bad)
repz
pop
push
mov
jmp
mov
sahf
push
push
(bad)
retf
out
xor
lahf
retf
sub
mov
adc
in
ret
inc
mov
retf
xor
push
push
add
fcomp
pop
cmp
test
lods
or
pop
(bad)
stc
and
ds
rsm
aas
cmps
inc
push
lods
jl
mov
loope
cmp
push
jmp
fld
adc
cmp
cmp
mov
mov
rcl
lahf
mov
mov
(bad)
sti
mov
xlat
pop
pop
cmp
cmp
hlt
fcmove
pop
(bad)
cmp
xor
cmp
or
aaa
push
clc
dec
cdq
retf
mov
push
push
sbb
mov
push
adc
push
sbb
or
movs
sub
and
lock
repnz
jo
shr
lahf
fstp
rol
xchg
ficomp
mov
sub
mov
xor
test
into
test
xchg
mov
dec
pop
push
hlt
out
daa
cwde
xor
dec
mov
and
sahf
iret
test
xor
addr16
mov
jg
cmps
pop
add
pop
xchg
add
jo
mov
mov
fsubr
xchg
scas
and
jns
movs
jb
sahf
cld
pop
mov
and
jg
(bad)
jecxz
or
jp
test
pop
or
cdq
mov
mov
cmp
clc
dec
jecxz
pop
or
pop
mov
sub
mov
mov
nop
jnp
jecxz
je
xor
sahf
pop
mov
mov
jp
mov
jg
hlt
mov
sar
jns
dec
out
shl
mov
push
in
stos
dec
daa
(bad)
in
add
inc
mov
stos
call
xchg
lock
out
loop
pop
fwait
fwait
inc
(bad)
jne
cmp
or
les
or
jne
push
xchg
xor
cmps
(bad)
mov
pop
clc
iret
and
sub
add
inc
push
sub
pusha
jns
pop
dec
mov
mov
test
push
add
fstp
(bad)
(bad)
dec
mov
stos
rcr
fisub
(bad)
in
cwde
pop
dec
and
stos
hlt
xlat
inc
push
sahf
jae
pop
std
sub
sbb
fcomi
inc
mov
sbb
adc
fwait
dec
sub
cmps
xchg
mov
pop
lods
sbb
and
mov
and
push
data16
push
call
(bad)
jmp
in
mov
pusha
push
test
nop
xlat
jae
fild
sub
cli
mov
cmps
mov
inc
fwait
mov
pop
adc
inc
dec
mov
inc
cmp
shr
mov
sti
xor
adc
or
(bad)
(bad)
das
aas
repnz
sar
ror
jae
adc
cmp
imul
jecxz
mov
mov
add
and
pushf
and
pop
inc
fwait
sub
mov
mov
out
daa
neg
scas
or
js
in
in
movs
dec
push
mov
fcmovb
mov
mov
lock
add
jnp
inc
js
jge
adc
sbb
mov
cmps
stos
or
iret
inc
(bad)
or
pop
mov
aaa
mov
dec
ins
nop
push
add
cmp
pop
and
cld
test
lods
fdiv
inc
inc
es
cmp
test
retf
stc
stos
pop
int3
inc
cmc
cmps
(bad)
retf
dec
sbb
xor
out
addr16
mov
adc
inc
ror
jecxz
xchg
or
test
add
mov
enter
pop
fst
and
bnd
jle
into
inc
and
aas
stos
xor
add
outs
pop
popf
sub
into
xchg
and
push
fs
xchg
sub
ret
jb
outs
add
xchg
dec
add
or
imul
icebp
inc
mov
lea
cmps
shl
(bad)
jo
mov
addr16
mov
or
cmp
jb
inc
push
xor
inc
scas
dec
cmp
lea
or
sbb
loope
cmps
into
push
dec
jl
leave
aaa
sub
bound
dec
jb
jo
xchg
cs
mov
and
pop
outs
in
mov
int
jge
imul
out
test
call
cmc
xchg
es
pop
test
add
cmps
xchg
xor
xlat
loope
inc
sahf
lods
inc
hlt
jno
daa
pop
sub
(bad)
push
imul
sub
mov
inc
leave
dec
fcom
sub
add
pop
(bad)
xor
pop
popf
pop
icebp
data16
push
xchg
or
unpcklps
push
in
out
mov
pop
fild
jno
xchg
movs
jmp
mov
inc
jmp
fdivr
add
stc
cmp
popf
and
push
add
out
pop
add
ja
add
lods
or
stos
xor
lahf
sbb
(bad)
push
pop
mov
cmp
xor
jno
gs
or
mul
sub
inc
retf
aad
inc
js
dec
les
in
repz
or
fadd
mov
imul
add
cmc
test
test
lds
jecxz
ret
add
outs
test
pop
push
cdq
sub
icebp
xchg
pop
fst
sbb
add
imul
push
cli
pusha
dec
popf
dec
pop
mov
sbb
adc
mov
jecxz
push
jns
push
test
out
retf
or
lock
xor
jns
mov
sbb
scas
mov
jmp
scas
aad
fdivr
push
pop
push
ret
out
out
jl
xor
dec
sub
dec
xchg
jne
cdq
scas
lea
pop
rol
int
popf
rcr
dec
int
sbb
adc
jne
pop
sbb
movs
xchg
mov
add
sti
not
ror
movs
ins
popf
mov
arpl
mov
xor
lds
mov
jb
mov
(bad)
ror
addr16
push
sbb
(bad)
pop
lds
push
cs
cmp
sub
mov
cmp
dec
(bad)
pop
pop
inc
in
sub
xor
mov
pusha
sbb
mov
(bad)
cmp
or
iret
mov
int
inc
in
inc
jg
pop
retf
dec
xchg
loopne
adc
mov
xor
jmp
mov
cmp
xchg
addr16
repz
test
(bad)
push
out
cmp
mov
or
mov
pop
inc
clc
pop
add
xchg
xchg
xchg
adc
cmps
js
retf
jmp
jmp
push
(bad)
and
fld
inc
push
jmp
xchg
out
pop
test
add
dec
jp
mov
lahf
repz
outs
loop
bound
enter
ret
jge
std
mov
xor
dec
inc
mov
mov
ds
stc
int3
inc
xchg
popf
outs
jmp
jmp
popa
movs
xor
addr16
lahf
mov
ror
ins
inc
sbb
xor
inc
jb
mov
dec
push
test
stos
dec
pop
xchg
xchg
std
ss
mov
leave
inc
add
das
loope
fidiv
ret
out
add
clc
push
das
mov
popa
mov
cmc
adc
mov
clc
push
retf
cmp
adc
jae
pop
dec
jg
jnp
pop
nop
sahf
mov
nop
dec
sar
adc
or
xor
and
loop
int
into
pop
dec
popf
pop
sbb
call
cwde
and
pop
sbb
xchg
mov
jmp
cmp
(bad)
and
mov
nop
addr16
mov
mov
arpl
hlt
or
mov
rcr
and
sub
sub
stc
imul
popf
mov
pop
sti
std
jns
out
je
push
and
sub
aaa
or
inc
pop
ficomp
rcl
pop
xchg
xchg
mov
add
gs
mov
out
pop
and
push
mov
jecxz
into
stos
pop
sub
stos
cmps
jo
pop
xchg
in
mov
mov
mov
xor
repnz
(bad)
dec
push
xchg
cmps
dec
aad
int3
or
jmp
sbb
and
xor
mov
daa
stc
arpl
mov
xchg
dec
inc
inc
(bad)
pop
das
inc
adc
or
push
and
sahf
and
cwd
(bad)
loopne
(bad)
lea
or
xchg
movs
shl
scas
mov
adc
(bad)
faddp
aas
mov
mov
daa
leave
fisttp
mov
ins
aam
in
dec
sub
loope
lods
imul
popf
push
or
mov
mov
repz
pop
(bad)
jno
adc
sbb
cmp
mov
cmps
mov
pop
jmp
loope
ror
fld
pusha
sar
fdivr
call
push
rcr
nop
cs
outs
xchg
cmp
mov
ret
cmc
test
mov
inc
xlat
push
hlt
push
cmp
push
call
dec
and
popf
test
and
out
inc
loope
adc
add
adc
or
and
xor
adc
es
mov
cdq
scas
sti
and
jmp
sub
jmp
jmp
pop
in
mov
scas
movs
stc
adc
cwde
xchg
pop
int
jmp
sub
pushf
xor
sbb
int3
push
inc
outs
call
jbe
nop
enter
cmps
jns
iret
sbb
pop
int
cmp
adc
pop
data16
mov
cdq
adc
jno
jmp
and
add
add
out
xchg
out
xor
leave
push
hlt
mov
jg
popf
sub
(bad)
(bad)
xor
dec
cmc
inc
not
pop
sub
and
sub
and
arpl
push
mov
stc
jbe
ficomp
and
adc
or
ja
mov
mov
out
adc
gs
mov
inc
aaa
jg
scas
mov
loopne
pop
push
mov
js
in
sti
adc
ror
popf
xor
lds
xchg
mov
jl
cli
rol
lea
dec
hlt
adc
in
mov
pop
in
add
shl
pop
push
mov
xchg
mov
cmp
mov
stc
fisttp
enter
add
ss
jmp
mov
(bad)
js
mov
push
test
inc
fstp
mov
lock
pop
pop
fild
sti
mov
cmp
je
cmc
jecxz
adc
bound
mov
mov
xor
std
mov
loope
push
fisub
ja
dec
adc
ds
popa
pop
arpl
jne
jo
adc
cli
jecxz
cdq
mov
jne
adc
inc
and
or
movs
pop
inc
xor
sbb
adc
fcmovnu
mov
clc
inc
inc
ins
mov
dec
mov
mov
sbb
sti
xchg
idiv
mov
imul
scas
sbb
(bad)
xchg
jmp
sub
daa
out
sbb
arpl
sub
pop
mov
lahf
mov
push
and
pop
leave
nop
cmp
out
or
jg
add
dec
jno
push
add
mov
adc
xor
shl
jns
and
jno
ret
out
xchg
out
jecxz
leave
mov
sub
push
test
xor
es
cld
mov
jecxz
cmp
sub
fst
push
cmp
daa
cld
xor
(bad)
lods
push
pop
jmp
ret
fdiv
push
push
fcom
cs
bound
dec
push
scas
fs
mov
pop
lahf
in
mov
enter
jg
daa
ror
out
mov
mov
or
in
or
push
or
lahf
mov
mov
popf
dec
pusha
mov
fisttp
xor
(bad)
(bad)
and
dec
xchg
xor
mov
push
pop
call
inc
sahf
aam
mov
pusha
push
inc
add
sub
jbe
inc
dec
cwde
jae
mov
in
ds
add
push
pusha
cwde
js
mov
xchg
data16
lahf
push
sub
mul
mov
push
mov
rcr
mov
lds
fwait
(bad)
fs
jno
sbb
rol
push
pop
clc
push
pop
pop
mov
push
call
mov
jns
pop
add
add
sbb
jnp
mov
bound
push
pop
xchg
xlat
xchg
inc
popf
leave
jmp
dec
rcr
adc
cmps
inc
push
in
icebp
mov
in
inc
in
mov
inc
test
sub
mov
jns
fiadd
jno
sub
aaa
push
scas
ja
add
jns
adc
sub
mov
out
sub
xlat
jbe
push
sbb
inc
das
add
data16
stos
adc
inc
arpl
sbb
dec
fmulp
mov
mov
push
retf
pop
cmps
dec
icebp
mov
mov
enter
int3
ficom
popf
mov
push
pushf
mov
popa
xor
cmp
xchg
retf
sub
adc
leave
shl
inc
or
xor
inc
or
call
push
stc
hlt
cs
mov
inc
js
fcom
adc
and
and
mov
inc
movs
test
outs
sysret
xor
cli
fwait
adc
dec
jl
jne
mov
and
xrelease
xchg
jmp
xchg
loopne
mov
dec
inc
mov
aam
mov
fwait
aad
jecxz
neg
pop
add
nop
add
mov
outs
ds
xchg
repz
inc
push
xor
sub
push
jno
stos
ss
mov
ja
retf
pop
add
add
jg
mov
mov
test
leave
sahf
pop
das
in
aam
or
sbb
push
pop
xchg
(bad)
xchg
add
shl
mov
mov
outs
scas
push
inc
and
retf
fs
mov
sub
dec
pushf
sub
(bad)
arpl
aaa
cmc
adc
jb
pop
xchg
pop
(bad)
xor
jb
popf
pop
inc
mov
dec
daa
cmp
sti
test
in
jle
pop
ins
jge
push
jmp
pop
ret
mov
nop
push
fld
test
inc
add
mov
icebp
jnp
xchg
mov
sbb
(bad)
int
sti
add
lea
inc
dec
div
xchg
xchg
dec
sub
ins
repnz
cmp
call
(bad)
push
pop
xor
mov
jmp
or
adc
xor
fnstenv
pushf
jp
pusha
lods
dec
test
mov
xlat
cmp
vcvtss2si
out
cmp
mov
fadd
mov
dec
sbb
mov
fcomp
adc
push
fwait
cmp
stos
imul
mov
dec
dec
push
pop
jmp
add
call
dec
mov
inc
mov
aas
(bad)
fistp
out
jne
mov
jg
(bad)
ins
aad
add
out
or
shl
fistp
mov
fcomi
mov
mov
pop
push
dec
ret
fidiv
cs
cmps
sbb
mov
adc
outs
jmp
add
hlt
xor
arpl
bound
sbb
imul
rcr
clc
cdq
push
enter
js
pop
xchg
test
sahf
adc
add
sar
test
in
mov
adc
inc
pop
mov
sub
dec
enter
cwde
aaa
dec
or
adc
mov
and
cdq
mov
fcomp
jo
int
imul
inc
sub
mov
mov
mov
jl
lods
lods
cmp
cmp
stc
test
sahf
in
dec
cmp
mov
mov
dec
cmps
out
dec
test
cmc
mov
outs
gs
and
cli
scas
in
loopne
push
push
xlat
sub
cmp
rcl
and
pop
bound
jno
xor
aaa
pop
jmp
push
sar
int
jae
adc
aas
or
ja
mov
nop
xor
sub
loope
xor
popa
(bad)
ja
jns
fild
ret
aam
movs
cmc
in
xchg
mov
hlt
jb
imul
sbb
std
das
add
xor
sub
rol
int3
pop
rcr
outs
test
push
sbb
mov
or
test
xor
sub
mov
pushf
jae
jb
cdq
je
mov
addr16
lods
fwait
and
imul
sti
jle
je
and
dec
movs
xlat
fwait
jae
adc
fucomp
sbb
pop
test
add
loopne
test
call
mov
dec
jecxz
cmps
es
adc
xchg
jle
scas
packuswb
cmp
cdq
sbb
in
jmp
inc
inc
push
sbb
xor
adc
push
jmp
iret
lock
popf
enter
jp
lds
mov
mov
adc
clc
mov
xchg
sbb
fld
mov
cmc
cmp
iret
repnz
stc
test
jmp
lock
inc
adc
jns
outs
push
pop
mov
mov
pushf
sbb
lods
push
lock
ds
add
fwait
sub
scas
or
scas
xor
adc
xor
idiv
dec
inc
inc
fwait
ins
loope
rcl
(bad)
lahf
jg
mov
jmp
in
scas
fs
xchg
cmps
xor
repnz
jmp
je
sbb
or
div
dec
(bad)
adc
cmp
dec
or
mov
stos
dec
or
sbb
sar
add
sbb
cmp
push
mov
push
bound
push
cmps
test
push
ss
call
ret
addr16
cmps
loope
mov
mov
mov
xchg
leave
mov
xchg
(bad)
mov
stos
cmps
cmp
dec
in
sbb
adc
vaesdeclast
push
gs
mov
cmp
test
or
dec
in
cmp
xor
pop
ins
add
stos
adc
adc
adc
adc
mov
bound
push
jl
leave
mov
mov
js
jnp
xchg
sar
mov
mov
(bad)
xchg
je
(bad)
fisubr
movs
fdiv
cdq
div
enter
cwde
mov
adc
mov
sub
popf
cmp
sub
sahf
scas
ret
aaa
or
sbb
sbb
and
pop
adc
inc
in
cdq
jne
das
pusha
loop
loope
test
sbb
pop
dec
ja
popa
adc
inc
(bad)
out
cmp
loope
adc
pusha
lods
sub
popf
xchg
rcl
dec
rcl
inc
sub
lds
add
test
push
and
push
and
xchg
scas
pop
in
sub
aam
addr16
aaa
leave
add
sbb
adc
inc
inc
mov
shld
push
cld
clc
mov
sar
fcomp
mov
inc
loop
in
pushf
clc
or
neg
xchg
into
pop
test
xchg
daa
mov
mov
mov
stos
loop
push
mov
int3
dec
push
adc
(bad)
int3
inc
ret
or
xor
pushf
aaa
inc
push
xchg
mov
mov
into
jecxz
(bad)
dec
pop
xor
xor
pop
add
xchg
or
cmps
pop
inc
xchg
and
stos
or
stc
loop
xchg
retf
dec
arpl
push
sti
retf
repnz
js
jmp
mov
(bad)
add
dec
jg
mov
repnz
jmp
ss
cmp
(bad)
ficomp
add
mov
xor
push
mov
(bad)
dec
in
or
push
js
xchg
pop
mov
mov
jnp
test
or
xor
stos
loop
(bad)
rcr
aam
jg
fwait
and
pop
dec
mov
sahf
adc
mov
pop
repz
sbb
test
xlat
(bad)
clc
shl
cmp
ficomp
jle
adc
enter
push
xor
das
call
mov
sub
inc
rcl
adc
test
and
sbb
mov
xor
loope
sbb
jae
int3
inc
rol
(bad)
pop
fistp
call
pushf
push
push
mov
mov
lods
cmps
ror
mov
jmp
(bad)
std
pop
imul
shl
js
sbb
or
mov
sub
mov
(bad)
in
jg
lea
dec
cmp
cmp
jl
cmp
pop
mov
hlt
add
xchg
xor
and
mov
sbb
sbb
stos
sub
lods
test
int3
call
xor
(bad)
dec
call
ficomp
ja
and
bound
in
cmp
adc
clc
not
push
jb
ds
pop
sbb
or
adc
add
xor
dec
adc
test
sbb
ins
cmp
cmps
adc
imul
(bad)
arpl
push
popf
adc
xchg
jecxz
dec
out
inc
push
lock
icebp
or
push
xchg
mov
je
mov
std
add
repz
sahf
xchg
rcl
ds
push
fsubr
test
sbb
data16
push
push
xchg
retf
sub
scas
pop
fsub
adc
dec
ret
inc
or
push
xchg
push
mov
retf
adc
dec
jno
mov
dec
fsub
mov
mov
inc
fldcw
fadd
retf
pop
cwde
int3
or
pusha
sub
(bad)
mov
mov
mov
out
mov
sbb
or
dec
scas
dec
push
dec
sbb
jp
dec
inc
cmp
sub
sub
dec
mov
sbb
dec
int3
mov
call
pop
cmp
add
bound
pusha
cwde
(bad)
popf
sbb
push
imul
pushf
xor
push
push
and
inc
mov
and
xchg
das
lds
mov
pusha
movs
xchg
mul
xor
lock
xchg
scas
pop
sar
push
push
lock
jo
aas
add
imul
sub
mov
stos
inc
out
ds
push
jmp
pop
mov
mov
jbe
jg
(bad)
push
inc
cwde
mov
sub
sbb
(bad)
iret
mov
xchg
cld
jnp
inc
fs
fldenv
jmp
mov
xchg
inc
repz
lahf
add
stc
xor
pop
jg
mov
addr16
loopne
icebp
xor
jnp
cmp
leave
dec
cld
bound
push
mov
xor
outs
test
sub
pop
xchg
lea
xchg
(bad)
arpl
pop
mov
and
jae
fwait
cmp
test
pushf
sbb
das
pop
push
inc
hlt
repnz
rcl
pop
mov
rol
jl
mov
sbb
fxch
xor
mov
mov
arpl
in
ror
jmp
pop
xor
sbb
mov
arpl
inc
push
outs
cmps
fnsave
sbb
ret
and
mov
cmp
gs
cmp
mov
clc
pop
sbb
jae
(bad)
xchg
jns
jns
sbb
sahf
pop
xchg
into
mov
mov
inc
push
mov
mov
lds
call
xchg
stos
test
adc
pop
sbb
mov
adc
fstp
dec
push
fs
push
inc
inc
mov
sbb
mov
cdq
sar
xchg
push
je
adc
adc
jg
push
cmp
add
pop
adc
pop
xor
sub
out
test
dec
neg
popf
inc
xchg
shl
je
jnp
pop
fstp
out
xchg
stos
dec
pop
jmp
movs
mov
dec
cwde
ret
mov
test
mov
ins
cmc
pop
idiv
stc
pop
frstor
jns
dec
mov
jns
pop
icebp
test
icebp
cli
and
call
mov
and
outs
je
push
pop
mov
pop
xchg
xchg
scas
pop
sbb
in
xchg
scas
mov
jle
and
inc
mov
movs
add
in
lods
or
dec
mov
mov
sbb
cmp
mov
test
cmp
mov
sbb
and
add
ins
add
mov
dec
mov
sub
imul
push
push
sbb
sub
icebp
cmp
inc
nop
adc
and
aaa
outs
in
(bad)
xchg
inc
mov
add
sbb
lods
push
call
mov
imul
(bad)
mov
sti
jle
sti
xchg
stc
daa
mov
lahf
mov
fdiv
loope
outs
sbb
cmps
outs
hlt
push
jmp
pop
ret
es
inc
popf
dec
adc
mov
xor
add
add
add
nop
aaa
mov
aad
adc
outs
in
mov
push
push
jmp
add
cmc
jle
pop
popa
inc
call
jmp
push
retf
jae
gs
mov
add
add
fldcw
lods
lea
jns
cmp
rcr
shl
dec
push
sbb
sub
cmps
push
int
dec
cmp
gs
add
(bad)
pop
dec
dec
pop
in
cs
jo
out
push
mov
jg
sahf
ja
mov
mov
fdivr
mov
mov
lds
dec
test
loope
rcr
jecxz
dec
out
add
mov
std
mov
sbb
cmps
ds
(bad)
test
aad
dec
popf
xchg
and
std
imul
inc
fistp
je
pop
mov
cmp
jb
stos
mov
or
cmc
sbb
and
or
and
and
arpl
inc
xchg
stos
xor
xor
fsub
push
cwde
retf
imul
pop
retf
jns
test
or
gs
sahf
jbe
mov
call
push
fild
or
(bad)
mov
dec
sti
pop
push
ja
les
jge
sahf
ins
sbb
sahf
cdq
pushf
or
pop
retf
mov
push
arpl
(bad)
inc
ss
cmp
cmp
and
imul
mov
popf
lock
mov
jg
inc
push
cmp
cmp
mov
mov
cmps
xor
fdiv
(bad)
enter
idiv
cmps
enter
xchg
fisttp
inc
cmps
or
sbb
mov
ds
cs
xor
imul
cdq
mov
and
aad
out
or
pop
inc
enter
sub
nop
pop
mov
fld
mov
sti
outs
inc
sub
xlat
retf
xchg
cmp
jae
xchg
jl
iret
enter
mov
or
call
stos
mov
push
jae
mov
cmp
clc
dec
pop
jmp
imul
and
repnz
js
and
gs
sahf
dec
pop
bound
pop
jmp
fadd
push
bound
jmp
mov
stos
xor
pop
dec
fidiv
mov
inc
fwait
sar
sbb
sub
sar
xor
shr
dec
jb
lds
iret
(bad)
ins
jmp
add
div
cmp
pop
xchg
scas
fwait
clc
cmp
sbb
mov
into
jmp
dec
(bad)
fisttp
pop
jmp
ss
(bad)
rcr
je
pusha
fild
dec
pop
mov
daa
or
mov
jmp
rcl
cmp
push
and
sbb
add
jb
push
mov
add
push
jp
in
cmp
leave
push
shl
push
xchg
mov
cmc
sbb
in
dec
movs
test
jo
mov
popa
xor
retf
sub
mov
add
call
mov
adc
jns
les
je
jmp
adc
and
pop
add
add
outs
dec
test
mov
test
ret
call
ja
add
lds
retf
cmp
sbb
cmc
test
clc
mov
sbb
lock
stos
cmc
xor
mov
and
fld
pop
push
cmp
add
push
sub
dec
mov
leave
inc
iret
xor
and
add
cmp
popa
push
xor
and
adc
cmp
data16
fstp
mov
fwait
jl
xor
icebp
mov
ret
dec
xchg
push
sbb
xor
stc
jmp
push
fcomp
dec
fisttp
jbe
and
pop
sub
or
out
cli
cmp
inc
cmc
pop
cmovnp
arpl
dec
push
sbb
mov
jg
(bad)
mov
fisub
popa
xchg
ins
fbld
mov
daa
retf
jae
jg
mov
dec
jns
pushf
hlt
push
inc
(bad)
jmp
repz
push
ins
test
(bad)
aaa
pop
xor
pop
or
pop
sahf
aaa
gs
call
popf
xor
shl
neg
pop
and
and
mov
jo
jle
mov
jl
xchg
div
push
pop
(bad)
in
mov
inc
jge
fmul
mov
inc
mov
mov
push
mov
or
test
jns
lahf
mov
add
jmp
mov
scas
adc
shl
popa
cli
push
push
cmp
imul
movs
mov
sahf
sub
fbld
fbstp
add
pop
and
cmp
add
inc
jb
js
mov
not
pop
cdq
scas
xchg
vphadddq
push
xchg
(bad)
mov
mov
ss
xchg
daa
in
add
scas
inc
sbb
add
cmp
inc
cwde
mov
pop
retf
adc
cld
out
js
or
sbb
inc
cmps
aaa
sbb
scas
retf
(bad)
mov
and
in
xor
adc
pop
xor
or
jmp
(bad)
pop
fadd
scas
(bad)
fmul
dec
in
dec
adc
sbb
popa
fld
loop
clc
pop
movs
(bad)
movs
push
(bad)
cwde
push
or
rcl
adc
mov
std
lods
cli
aam
push
scas
pop
xlat
pop
retf
cmp
sbb
pop
(bad)
inc
inc
mov
(bad)
(bad)
int
or
inc
shl
test
pop
push
push
pusha
xor
scas
pop
stos
ja
push
(bad)
or
xchg
(bad)
cdq
or
jmp
inc
(bad)
sbb
pushf
ins
(bad)
sahf
js
ret
repnz
cmp
mov
lock
mov
xchg
shl
out
out
inc
lods
xchg
rcl
cmp
shl
rcr
cmp
and
jbe
pop
inc
push
mov
mov
aas
sub
sbb
(bad)
and
pop
cli
inc
addps
add
sub
stos
dec
ss
clc
push
cmp
iret
mov
adc
push
push
mov
pop
sub
dec
loop
jl
fsub
lea
xchg
dec
test
pop
xchg
mov
test
cdq
cmp
enter
inc
sub
iret
into
js
sub
js
scas
aaa
inc
inc
xchg
dec
nop
xchg
mov
jle
int
mov
fisubr
or
add
sbb
mov
inc
mov
push
inc
int3
fisub
std
outs
add
(bad)
jmp
adc
lahf
pop
and
fisubr
mov
jecxz
fwait
dec
add
rcl
mov
test
sub
shl
fsubr
in
cmp
sbb
or
and
arpl
lock
push
cmp
aaa
or
outs
pop
mov
pop
push
mov
mov
ja
mov
add
and
out
cmps
and
fadd
outs
jne
mov
dec
cmp
sbb
cmc
cmps
xor
jg
stos
or
fbld
mov
xchg
idiv
sbb
call
clc
call
adc
and
jne
sub
test
scas
mov
(bad)
inc
or
aaa
cmp
jnp
lods
or
mov
pop
mov
mov
push
dec
imul
pop
jmp
ins
fisttp
iret
loop
xchg
cld
call
shl
mov
push
adc
leave
repnz
mov
scas
ja
push
mov
fnstcw
out
or
xor
ss
mov
push
stc
inc
(bad)
shl
mov
push
sub
xor
ins
dec
mov
inc
call
or
mov
mov
gs
push
jbe
mov
nop
fdivr
out
mov
pop
jmp
pop
stos
cli
mov
pop
mov
mov
lock
pop
adc
imul
add
cmc
mov
inc
int3
push
add
sbb
mov
retf
sbb
fld
stc
add
fcomp
mov
retf
outs
inc
sub
dec
inc
movs
test
fs
mov
hlt
outs
pop
and
mov
mov
lods
adc
jp
fwait
mov
sub
(bad)
mov
xor
rol
or
clc
ror
pusha
fadd
jp
stos
sub
and
xchg
lds
repnz
cdq
cli
push
jo
ds
sbb
pop
adc
(bad)
pop
retf
pop
push
adc
mov
cwde
call
in
push
pop
shl
sti
push
xchg
lock
push
(bad)
add
cmps
mov
pushf
adc
mov
inc
dec
(bad)
fcomp
sub
adc
iret
enter
push
gs
mov
jp
test
or
shl
fdiv
xor
aam
or
add
inc
mov
into
pop
dec
test
in
adc
jg
(bad)
xor
jge
jg
adc
fwait
(bad)
loope
shl
pop
aaa
jmp
ja
add
cdq
stos
lods
and
xlat
loop
clc
loop
jne
fcom
iret
adc
pop
in
out
jne
inc
jl
cmp
adc
sbb
mov
fistp
lahf
cli
sbb
aaa
aam
imul
mov
sbb
mov
pop
nop
xchg
mov
aam
movs
and
call
inc
mov
inc
fwait
icebp
test
pop
(bad)
repz
mov
call
les
lock
push
jns
xchg
xor
pop
(bad)
sub
fprem1
jge
es
jle
fisubr
jge
arpl
mov
xchg
nop
sub
jge
cld
sbb
sub
pop
cmp
xor
push
jmp
cmp
in
mov
fmulp
xchg
and
jns
pushf
push
ret
mov
inc
mov
test
mov
push
mov
repnz
mov
sbb
cwde
mov
xor
mov
cdq
fidiv
dec
test
inc
jmp
cmp
outs
arpl
and
out
mov
pop
std
enter
inc
adc
xor
add
mov
dec
push
fsub
fdivr
mov
pop
inc
pushf
xlat
xchg
sbb
push
loope
lock
fwait
jecxz
inc
loope
jle
fcompp
mov
loopne
(bad)
sti
mov
sub
lea
loop
movs
enter
mov
push
in
jae
bndstx
iret
idiv
pop
rcr
pop
push
js
das
bound
dec
add
popf
mov
gs
jmp
push
jl
mov
daa
mov
dec
sbb
pop
cdq
mov
arpl
push
inc
std
iret
mov
jmp
push
jns
inc
fstp
mov
sub
pop
xchg
test
dec
add
fdiv
call
sub
out
and
jmp
ins
movs
sbb
xor
lods
and
nop
cmp
add
adc
mov
and
popf
retf
sbb
cmp
not
dec
inc
mov
jmp
in
mov
mov
pop
jmp
sbb
mov
test
pop
jmp
pop
pusha
mov
out
aaa
sub
inc
lds
xor
outs
cmps
bound
mov
xchg
ret
pop
or
and
inc
clc
aaa
sub
fs
sbb
jo
mov
jp
shl
in
stos
xchg
sbb
mov
inc
inc
inc
rcr
mov
dec
test
cmp
and
fisubr
lea
popa
xchg
and
movs
jnp
imul
push
daa
fmulp
clc
pop
fcomp
jle
lea
jle
push
and
fnstcw
pushf
in
jle
aam
pop
jge
out
adc
pusha
xor
or
je
xchg
adc
bound
and
inc
mov
je
addr16
jle
imul
inc
xor
in
xor
movs
sar
shl
sub
ror
cdq
fdiv
pop
call
call
jbe
pop
mov
push
mov
loope
jp
rcr
add
mov
sbb
mov
add
cs
cwde
shl
in
sbb
sub
nop
(bad)
cmp
les
adc
push
mov
btr
shl
lods
fld
pop
int
pop
cmp
(bad)
test
and
mov
popf
mov
adc
ficom
ror
cmp
aad
adc
aas
cli
sbb
jg
and
pop
bound
jo
lods
mov
sbb
movs
seta
pop
xlat
inc
inc
jb
je
or
mov
mov
mov
shr
lea
xchg
stos
test
fldpi
sub
icebp
inc
imul
or
push
out
ja
push
mov
inc
sub
ret
fwait
xchg
xor
scas
inc
jecxz
and
dec
cld
inc
aas
jne
xor
fnstcw
test
ror
xchg
test
lahf
mov
inc
inc
pop
mov
ds
xchg
add
out
(bad)
mov
loope
fwait
cmp
scas
mov
outs
sbb
sar
stos
jne
push
hlt
add
fadd
add
inc
inc
xchg
push
push
scas
mov
inc
loop
cs
data16
sbb
pop
xchg
pop
mov
cmps
jae
fbstp
pushf
dec
pop
mov
and
xor
fld
jge
jbe
pusha
fisttp
mov
push
std
cmps
scas
add
inc
mov
pushf
jle
xchg
mov
cmc
mov
lods
fnstcw
dec
fistp
dec
jecxz
sti
pop
loop
inc
and
aas
pop
inc
mov
mov
fild
idiv
test
inc
jae
adc
inc
and
sub
mov
test
mov
ret
iret
xchg
pop
dec
jl
pop
jmp
les
cld
xchg
push
popf
movs
pop
sub
mov
mov
outs
jl
ret
test
adc
dec
sbb
cmps
push
sar
sub
fadd
inc
add
jno
dec
jnp
ss
lea
jge
mov
fninit
dec
ins
ja
jmp
sbb
jle
addr16
mov
pop
mov
dec
cmp
mov
std
outs
push
jb
pusha
popf
movs
call
mov
mov
mov
xchg
mov
outs
inc
xor
push
jnp
pop
cmp
icebp
aaa
inc
sub
cmp
ds
xchg
retf
add
pop
xchg
aad
mov
inc
pusha
push
push
fiadd
add
gs
inc
mov
cli
pusha
push
jno
mov
fs
xchg
pushf
sub
ins
hlt
jmp
adc
pop
jnp
push
rol
jo
mov
stc
sar
jmp
lods
mov
mov
cmps
gs
enter
fidivr
mov
and
stc
pop
retf
and
pop
dec
mov
xchg
mov
(bad)
mov
pop
add
xor
mov
scas
push
fldcw
sar
mov
ins
in
mov
add
inc
xor
jae
jno
lods
fiadd
mov
dec
rcl
test
iret
dec
mov
dec
pop
test
std
cwde
std
rcr
mov
nop
jae
xor
in
sub
add
dec
mov
jl
test
ds
cmps
stos
sahf
retf
and
in
and
(bad)
push
jl
pop
in
push
daa
call
push
xchg
dec
pop
mov
cmp
test
inc
leave
arpl
fdiv
rcl
mov
cmps
jne
jmp
mov
bound
popf
xchg
mov
inc
retf
fstp
xchg
pushf
ins
(bad)
jnp
cmp
lock
pop
cmps
cmp
and
in
xchg
lea
pushf
in
jno
out
jns
pop
inc
hlt
and
push
add
bound
fwait
or
rcl
pop
xchg
and
cmps
xchg
mov
inc
sar
bound
jg
aad
push
loopne
push
adc
pop
test
push
add
hlt
lock
xchg
inc
mov
int
or
mov
mov
and
cmp
mov
ja
retf
adc
add
push
jbe
or
inc
adc
pop
popf
jb
sbb
ret
mov
mov
hlt
mov
xor
hlt
pop
ror
mov
push
call
xchg
dec
aam
pop
cs
xchg
fwait
jl
adc
cmp
imul
js
not
cmps
in
repz
dec
mov
stos
push
cmp
fst
jnp
xor
arpl
push
mov
test
add
fdiv
add
jecxz
cmp
and
inc
dec
shr
nop
cmp
sub
(bad)
test
adc
imul
push
jl
cdq
push
jmp
fsubr
hlt
test
mov
mov
loopne
xchg
cwde
xchg
mov
popf
push
loop
test
xor
imul
pushf
scas
push
int3
pop
aam
xor
jns
cmp
pop
mov
arpl
mov
repnz
loopne
or
sub
aaa
das
pop
xor
cmp
push
(bad)
jb
fild
dec
mov
pusha
mov
jae
in
in
lahf
loop
add
movs
push
jmp
xchg
jmp
pop
push
ffreep
nop
push
ret
imul
ficom
js
rcl
faddp
fs
xchg
lea
outs
enter
aad
fbld
sbb
es
popa
sub
push
cdq
mov
cmps
sbb
(bad)
sbb
fild
push
pop
adc
jle
inc
adc
pop
or
push
mov
pop
aam
outs
je
imul
mov
cmps
xor
adc
pop
fistp
lods
cmps
xor
repnz
int3
cld
pop
sbb
mov
sbb
adc
sub
add
dec
fsubr
push
dec
cmps
pop
pop
dec
scas
mov
call
nop
sbb
add
pop
push
mov
pop
or
jl
cmp
in
adc
pop
and
call
inc
jmp
push
add
fdiv
mov
pop
pop
mov
aad
rol
push
out
aam
int
fdiv
clc
push
int
pop
or
inc
or
call
dec
into
shr
loopne
push
push
add
push
imul
aas
stos
pop
out
push
push
sub
std
cmp
repnz
add
xchg
pop
frstor
bound
dec
stos
enter
fwait
pop
sub
retf
mov
jg
leave
cmps
push
xor
leave
mov
call
push
adc
and
outs
mov
jnp
mov
pusha
xchg
test
push
jmp
pop
ja
pop
fdiv
outs
jle
gs
inc
shl
test
sbb
(bad)
(bad)
jne
push
cmp
stos
mov
mov
pop
rol
inc
sbb
mov
push
out
push
push
fcomp
mov
fcomp
mov
adc
mov
not
xchg
cmp
fimul
xor
mov
lods
pop
fcomp
cmp
lods
arpl
xchg
mov
(bad)
js
mov
fadd
adc
add
xor
cmp
lea
sbb
cmp
cmp
ds
rcr
ins
mov
pop
mov
mov
sbb
std
out
jae
dec
mov
cmps
into
dec
mov
mov
mov
mov
dec
cmp
imul
jp
imul
pop
push
cwde
mov
repz
sahf
hlt
aas
mov
arpl
and
sbb
pop
mov
int
dec
test
shr
pop
mov
or
sub
sti
add
dec
pop
jb
push
shl
popf
push
out
push
sbb
sti
xchg
adc
mov
add
mov
xchg
rol
cmc
sahf
jae
jne
cmp
fist
sub
cmp
mov
leave
push
popf
(bad)
cmp
ds
and
jno
dec
and
adc
mov
mov
and
(bad)
in
cmps
es
fnstsw
push
popa
push
lea
fimul
mov
adc
mov
xchg
(bad)
fcom
(bad)
bound
mov
sar
cmp
add
jl
cmp
jno
outs
inc
outs
pushf
jnp
jno
or
retf
aad
fs
(bad)
or
pusha
outs
pop
mov
stos
or
dec
ins
mov
mov
inc
popf
xchg
test
add
inc
fxch
mov
enter
jnp
pop
test
inc
mov
fwait
inc
sbb
out
rcr
lahf
xchg
sub
test
xchg
jae
jne
push
sbb
hlt
test
pop
inc
scas
aas
inc
push
div
push
popa
lods
lds
sbb
popa
jl
add
out
sub
cwde
inc
ds
dec
push
scas
mov
and
jg
lods
add
mov
inc
jge
dec
rol
loopne
ret
mov
mov
out
mov
addr16
(bad)
sbb
cli
jmp
loope
jl
mov
scas
or
sbb
dec
jge
pop
xchg
jno
and
movs
xchg
shr
fist
retf
sahf
retf
jne
push
pop
retf
push
add
daa
lock
dec
and
mov
cwde
lods
test
(bad)
pop
sub
nop
jb
scas
lock
movs
dec
(bad)
cwde
pop
or
aad
or
ret
push
xor
retf
mov
popf
xor
sahf
data16
cmp
iret
shr
inc
jmp
jnp
stos
jno
jno
shl
cdq
retf
in
inc
push
push
and
sub
add
sbb
lahf
dec
xor
push
data16
scas
xchg
jno
sub
aam
or
int3
add
inc
jl
cmps
jo
rol
sar
jns
out
div
add
outs
mov
addr16
mov
scas
shr
inc
inc
jmp
push
dec
rol
in
and
mov
inc
push
outs
icebp
(bad)
mov
(bad)
fdivr
jecxz
imul
pop
add
jnp
lods
push
adc
lea
das
dec
fs
and
adc
loopne
aad
loope
xchg
dec
aam
inc
or
dec
xchg
dec
push
test
(bad)
repnz
fbld
mov
sti
sub
lock
jb
cmp
inc
sub
imul
adc
add
inc
add
fs
dec
pop
xchg
je
movs
das
push
in
lods
cld
and
xor
cld
loope
sahf
jmp
jl
xchg
(bad)
stos
call
pop
stc
fist
loope
cmc
xor
xor
out
loope
ret
inc
jmp
idiv
adc
adc
ret
pusha
inc
xchg
push
pop
mov
mov
hlt
dec
jmp
jb
push
daa
hlt
and
jge
ds
or
jo
dec
inc
pushf
dec
adc
adc
test
or
pusha
inc
jnp
jg
mov
mov
or
lock
stos
lea
ins
in
movs
cmps
outs
add
ret
fidivr
lea
or
push
push
lock
sub
cmp
mov
pusha
loopne
aas
mov
inc
inc
popa
sbb
in
aaa
sahf
push
leave
add
pop
or
push
inc
(bad)
and
loopne
rcl
icebp
inc
jle
rcl
sar
mov
mov
push
not
movs
and
adc
sbb
push
xchg
cdq
test
sbb
repnz
aad
pop
pop
mov
dec
jmp
(bad)
stc
push
iret
cmp
outs
mov
imul
mov
jmp
(bad)
enter
inc
pop
jnp
rcr
sub
sub
and
dec
jo
mov
retf
shl
hlt
inc
jle
cmps
ins
cli
cdq
mov
sub
out
nop
lahf
mov
sbb
movs
sbb
std
adc
gs
int3
adc
cmp
fmul
jp
add
xor
cmp
(bad)
test
fs
icebp
inc
pusha
ja
shl
add
test
aad
inc
mov
add
cdq
sub
sbb
ror
shl
cmp
cmp
jno
mov
xchg
mul
call
sub
scas
aam
gs
lahf
mov
cmp
or
in
loopne
fnsave
imul
push
lods
inc
push
dec
mov
(bad)
jbe
fsub
fdiv
jle
in
adc
pop
sub
mov
inc
push
test
xor
scas
mov
dec
fsub
test
stos
leave
jb
pop
push
arpl
and
shl
arpl
mov
stos
or
push
dec
fld
xchg
xchg
scas
and
mov
dec
pop
lea
push
pop
paddd
out
jne
xor
xor
jno
jae
cmps
mov
adc
outs
(bad)
pop
movs
fadd
and
pop
xor
out
sbb
push
fbld
push
xlat
ds
neg
outs
enter
mov
jg
push
mov
xchg
ds
mov
test
test
stos
or
jmp
cld
cmp
inc
js
xchg
inc
in
cld
or
sub
ret
cmp
fs
fst
pop
and
mov
retf
pusha
fdivr
add
inc
jmp
add
push
push
cwde
ja
and
lea
xor
fst
je
js
jle
xchg
fisubr
fstp
or
mov
sahf
clc
push
mov
mov
adc
jecxz
out
popf
arpl
(bad)
pusha
jecxz
in
sub
icebp
test
fs
cmp
dec
scas
ss
pop
adc
mov
shr
ret
out
jl
add
lds
push
push
and
mov
scas
sbb
jge
aam
inc
lods
xchg
clc
xor
or
xchg
lods
mov
or
sbb
xlat
fs
jmp
loopne
nop
popf
movs
(bad)
adc
popa
add
(bad)
stc
repz
(bad)
lods
jnp
dec
iret
dec
inc
inc
in
mov
ds
adc
daa
dec
mov
retf
fbld
adc
ins
inc
pop
aad
ja
outs
fs
ds
jb
jo
fnstenv
mov
std
cmp
pop
jae
icebp
cmps
push
xchg
jecxz
retf
jbe
outs
sar
mov
push
call
jg
mov
addr16
cwde
nop
xor
rol
jmp
lock
inc
sbb
imul
cmp
jge
push
add
xchg
pop
and
test
mov
ds
sbb
mov
mov
jo
sar
outs
inc
push
jb
repz
mov
pop
sar
pop
mov
dec
loop
test
nop
mov
pop
stc
mov
xchg
mov
jnp
popf
xchg
mov
scas
xchg
ja
jp
aaa
ss
(bad)
in
imul
pop
inc
ds
xor
std
push
add
xchg
inc
add
jbe
(bad)
xor
retf
sbb
aas
xchg
sbb
mov
pop
mov
add
int3
iret
mov
lods
jecxz
in
inc
sbb
test
jecxz
inc
out
stos
add
in
xor
scas
cmc
ud1
mov
aam
call
dec
retf
dec
and
mov
add
xor
inc
pop
jle
stos
mov
sub
enter
cmp
jae
retf
push
adc
add
cmp
sbb
adc
(bad)
mov
and
sub
(bad)
movs
cs
je
dec
inc
fs
std
mov
add
(bad)
xchg
fstp
xchg
and
test
mov
and
retf
imul
xchg
jns
das
push
and
xchg
and
or
sti
jne
dec
mov
and
jge
clc
jnp
fisttp
pop
sub
xor
inc
xor
mov
mov
rcr
test
cmps
adc
mov
push
aaa
and
fdivr
or
scas
rcl
mov
pusha
into
mov
lahf
sub
pushf
jmp
stos
arpl
rcr
mov
in
imul
jne
gs
femms
xor
js
popa
test
pop
pop
scas
jnp
push
mov
rcr
jmp
std
inc
jbe
sbb
inc
aas
pop
ds
hlt
arpl
pop
and
sbb
scas
loopne
stos
mov
push
inc
mov
in
add
(bad)
xchg
sbb
sbb
mov
mov
mov
scas
stos
jmp
ja
adc
jo
inc
push
sub
sub
sbb
ret
es
add
inc
inc
out
ss
bt
iret
inc
fs
jge
ror
mov
not
inc
or
(bad)
cmp
fnstenv
push
jae
rol
xchg
out
sahf
sar
es
cmps
cmp
jl
call
sub
fs
xchg
mov
adc
jb
push
push
and
outs
inc
inc
xchg
pop
pop
imul
dec
icebp
leave
sub
sub
inc
sbb
sub
movs
jp
mov
mov
dec
or
mov
and
push
jge
dec
aam
shl
pushf
je
cld
jns
rcr
xchg
cmp
imul
je
mov
lds
scas
mov
das
pop
sub
xor
cmp
pop
and
xor
(bad)
sar
out
add
add
sbb
cmp
daa
stos
inc
push
mov
pop
xchg
xchg
cld
imul
sahf
add
inc
arpl
ins
loope
cmc
pusha
mov
cmps
inc
xor
shl
mov
pop
push
mov
ffree
stos
jmp
ins
dec
jmp
pop
or
sbb
adc
mov
or
add
and
iret
sbb
inc
fcomp
sahf
cmp
sahf
push
add
lods
sti
sub
mov
xchg
sub
inc
fcmovb
(bad)
jb
leave
mov
shl
lahf
sbb
pop
mov
stos
push
add
into
out
inc
scas
mov
inc
cmc
dec
cmp
int3
out
daa
retf
or
mov
popf
cmps
stos
add
int
ret
cmps
mov
inc
mov
imul
inc
xchg
pop
inc
xchg
adc
stc
sbb
cli
cli
xchg
cs
int
fldenv
inc
popf
outs
adc
pop
int
inc
xor
in
cmp
bound
movs
pop
xchg
enter
and
cli
rol
call
or
xchg
fldcw
cs
sbb
pop
dec
mov
mov
std
sbb
fsub
test
inc
pop
jge
out
and
daa
retf
xor
pop
lea
test
adc
jge
sbb
ret
les
mov
xchg
xchg
push
mov
xchg
aad
test
push
mov
into
out
cli
retf
dec
dec
lea
or
into
(bad)
fisub
add
inc
fwait
or
inc
mov
or
cmps
test
enter
aad
data16
mov
ja
and
stos
and
adc
jp
add
pop
ja
mov
fs
(bad)
inc
mov
jge
ins
test
mov
push
(bad)
cli
mov
fwait
mov
inc
mov
mov
cmp
rcl
call
sbb
in
jae
inc
rcl
pop
stc
pusha
sbb
pushf
mov
mov
int3
bnd
mov
pop
push
cli
cmp
scas
or
sbb
ja
scas
push
popa
jmp
lahf
ins
xor
leave
retf
test
lds
addr16
bound
out
add
call
mov
call
mov
in
scas
test
jecxz
xor
adc
hlt
lods
rcr
add
sbb
xor
leave
dec
pop
neg
ror
mov
xor
xor
pop
adc
adc
pop
push
dec
jns
stos
clc
cs
cmc
cwde
inc
and
icebp
dec
jnp
mov
dec
mov
loope
xchg
mov
mov
lea
mov
ret
(bad)
loop
dec
dec
sub
ss
int3
fisttp
and
jo
das
dec
daa
movs
dec
sbb
out
xchg
mov
(bad)
xor
add
dec
adc
mov
sbb
pushf
cmp
xlat
mov
jmp
ret
adc
jecxz
out
mov
pushf
arpl
xchg
fist
xor
mov
and
rol
mov
dec
push
aaa
mul
repz
cld
and
ds
mov
ins
and
sahf
mov
xor
jg
ror
jnp
sti
inc
xor
adc
mov
stos
imul
sub
mov
sbb
data16
shl
aad
inc
pop
scas
and
mov
test
jmp
dec
sub
fisub
scas
mov
aas
ficom
pavgb
loop
ret
fcomp
xchg
gs
lock
imul
add
push
pushf
push
pop
inc
lods
cwde
cdq
sub
imul
mov
fild
imul
jmp
dec
sbb
arpl
daa
ins
jmp
jmp
es
jbe
mov
adc
pop
sub
hlt
pushf
sub
inc
xchg
mov
pop
pop
mov
pop
xchg
cmc
xlat
addr16
mov
dec
in
add
lock
cs
and
jnp
pop
mov
scas
sub
retf
jle
std
jo
inc
push
std
and
lahf
pop
call
sub
mov
add
cmp
enter
dec
sbb
test
jecxz
fldenv
out
push
pushf
xchg
jb
xchg
(bad)
mul
mov
cmpxchg
sub
mov
dec
pop
es
xlat
fist
inc
cmp
xchg
jle
mov
ss
movs
xchg
sahf
mov
les
dec
sbb
xor
jle
jl
mov
jle
mov
repz
loope
(bad)
dec
lock
dec
mov
mov
mov
sar
mov
pop
jle
sub
jnp
fist
hlt
push
push
sub
call
pop
fs
test
cmp
inc
or
lea
test
ror
adc
lds
or
lods
inc
mov
sbb
(bad)
and
xchg
lahf
das
inc
and
cmc
jecxz
mov
add
dec
inc
mov
iret
or
and
add
sar
outs
jg
mov
push
aaa
std
repnz
data16
mov
fisubr
sub
call
test
inc
sub
mov
mov
jmp
popa
xor
xor
das
mov
test
xor
(bad)
sbb
and
xlat
xchg
xor
jo
scas
pop
lds
xchg
fs
jae
std
rol
stos
sar
outs
jg
mov
adc
stc
repnz
pop
push
dec
ficomp
cs
clc
fist
ds
dec
test
inc
cs
mov
mov
jmp
jno
int
sbb
pop
mov
mov
scas
jae
mov
mov
aaa
xor
in
retf
xchg
sti
les
push
lods
and
movs
loopne
lahf
les
and
rol
popf
scas
sbb
test
aaa
stc
repnz
lods
inc
jecxz
fidivr
cs
cld
fist
xor
pop
ins
push
mov
jns
mov
mov
jmp
jno
int
sbb
das
mov
scas
jae
cmp
xor
add
xchg
xor
inc
push
lods
dec
rep
loopne
movs
les
and
rol
(bad)
test
jns
mov
push
xor
repnz
(bad)
cmp
inc
out
pop
fidivr
cs
cld
fist
ss
push
stos
pop
jge
mov
sub
xchg
lods
mov
jmp
imul
add
pop
fild
test
xor
mov
aaa
add
xchg
xor
pop
push
lods
jb
xchg
(bad)
dec
movs
les
and
ror
mov
outs
mov
rol
mov
mov
dec
or
cmc
rol
inc
cwde
sbb
cmp
arpl
test
stos
or
lods
pop
fcomip
and
add
push
es
sbb
fisubr
and
cdq
arpl
xor
out
sbb
shl
sbb
pop
stos
jb
lods
neg
fild
push
(bad)
not
(bad)
mov
ins
mov
fbld
jmp
aad
or
(bad)
repz
ds
(bad)
mov
cmp
mov
mov
ss
setl
jmp
add
push
ins
xor
push
jo
mov
pop
ret
sbb
rcl
pop
pop
xchg
xchg
fcomp
loope
push
enter
xlat
popa
xchg
sbb
out
mov
call
jbe
dec
(bad)
dec
and
popf
add
dec
cwde
pop
jnp
mov
test
retf
adc
fadd
mov
or
inc
gs
adc
add
sbb
jo
and
adc
sub
jmp
push
in
jnp
mov
out
cmp
mov
ss
xchg
or
into
cmp
scas
or
cld
add
xchg
pop
cmps
adc
daa
stc
sar
jl
sbb
pop
test
arpl
jb
xchg
test
outs
loope
or
shr
jb
out
sbb
xchg
pop
test
test
dec
xor
or
data16
call
push
hlt
sbb
mov
aas
out
loop
retf
mov
aam
mov
adc
mov
add
dec
mov
xor
fs
push
sub
aam
fld
dec
push
jge
cmp
daa
push
cmc
mov
xchg
sbb
inc
loope
add
pop
out
inc
push
pop
push
adc
les
scas
push
mul
pop
(bad)
and
push
dec
mov
sub
jae
mov
xor
lock
ja
xchg
xchg
cmp
stos
test
xor
jno
lea
adc
sub
enter
inc
push
and
cmp
pop
cmps
dec
daa
outs
scas
mov
(bad)
pusha
shr
sbb
or
and
and
bound
pusha
movs
test
clc
cmc
test
mov
push
fiadd
dec
mov
aas
sahf
(bad)
mov
adc
icebp
not
fwait
in
add
and
lds
mov
or
sbb
push
push
jge
pushf
pop
je
mov
xchg
movs
test
(bad)
pextrw
jbe
inc
out
sbb
xchg
add
nop
clts
test
movs
cmp
add
gs
jmp
bound
mov
ficom
xchg
mov
or
imul
(bad)
mov
xchg
mov
xor
rol
test
aad
bnd
xor
ds
fld
push
push
pop
dec
pushf
cmp
pop
call
push
cmps
test
ret
movs
sar
or
xor
add
pop
lahf
pop
mov
(bad)
pop
outs
lods
jo
stos
sub
mov
cdq
add
sub
xor
dec
dec
scas
push
fistp
stos
adc
nop
push
or
rcl
mov
and
call
xor
dec
ror
adc
call
jle
push
lahf
adc
cmps
pop
sub
jmp
imul
or
into
jp
jns
(bad)
sbb
dec
sbb
cmp
bound
dec
cmps
test
in
mov
stos
jmp
sub
xchg
retf
pop
mov
pushf
ja
(bad)
ficom
movs
lahf
into
cmp
lods
push
and
(bad)
mov
pop
and
out
(bad)
aad
cdq
sbb
sbb
cmp
xchg
movs
mov
fwait
loope
mov
cmp
xor
pop
and
pushf
add
xchg
pop
inc
test
call
lahf
and
pop
pop
mov
dec
mov
mov
(bad)
fisttp
cli
movs
ret
sbb
lods
xor
cli
shl
xor
stos
xor
cli
test
jge
pushf
pop
je
mov
xchg
movs
test
loopne
or
rcl
pop
out
daa
push
inc
and
out
and
mov
add
pop
cld
fild
imul
inc
scas
jne
movs
and
xchg
arpl
xor
loopne
xchg
popa
xchg
mov
add
lock
pop
jl
mov
aaa
cmp
shr
retf
inc
sti
xor
cmp
or
mov
push
xchg
mov
fld
jmp
adc
xor
xor
mov
push
mov
push
lea
pop
fwait
(bad)
xchg
xchg
jmp
out
jb
mov
dec
xchg
xlat
xchg
dec
jmp
add
in
add
ror
ins
fs
mov
jmp
mov
cs
clc
leave
inc
pushf
cmp
or
vmwrite
push
cmp
cmp
jns
loopne
pusha
jbe
fidiv
cwde
sub
add
pusha
jne
pop
sub
mov
cmp
pusha
retf
and
jg
lods
jno
cmps
in
xchg
(bad)
test
in
xchg
stc
rol
mov
cmp
mov
fsubp
inc
jns
mov
pop
fnstsw
into
jp
and
or
sub
mov
retf
sbb
out
or
pop
cmp
inc
xor
adc
pushf
sub
fdivr
ds
mov
ds
ss
in
fadd
fmul
inc
mov
ds
rcl
xor
rcl
scas
sar
test
in
popf
add
(bad)
not
jmp
inc
lock
int
cmp
in
push
jmp
arpl
pop
mov
push
cmp
mov
fadd
jmp
cmp
xor
mov
stos
ja
jae
lods
js
mov
pop
xchg
mov
sbb
dec
cld
aam
sbb
outs
jne
scas
dec
clc
mov
test
and
lds
pushf
scas
shr
fsub
xchg
mov
add
stos
ficom
lahf
stos
inc
lock
repz
push
sti
ds
mov
push
lea
push
cmps
xchg
lahf
sub
call
arpl
frstor
out
lods
add
outs
jae
push
cmp
mov
sbb
xor
rol
idiv
inc
cmp
xlat
xchg
ja
xchg
in
ret
nop
adc
jle
sti
mov
and
fdivp
dec
jg
lods
push
jecxz
fimul
cs
cld
cld
push
jmp
js
mov
xchg
xchg
mov
shl
sbb
(bad)
jp
add
fstp
adc
popa
adc
rcr
ins
fiadd
or
xor
jno
repnz
inc
mov
inc
out
add
(bad)
enter
call
xor
fucomip
and
sbb
call
aaa
iret
add
fdiv
call
cmp
(bad)
aam
clc
inc
jg
dec
fisttp
inc
or
out
movs
xchg
test
fimul
int3
jns
jns
jmp
sbb
outs
mov
gs
adc
out
cmp
jp
movs
pop
add
pop
mov
lahf
ins
xchg
in
aaa
(bad)
fcom
fwait
mov
jo
movs
cmps
sbb
in
arpl
adc
sub
mov
jnp
inc
jg
cmp
or
out
sahf
xchg
int
test
jns
push
inc
test
or
test
pop
outs
(bad)
ja
into
aas
outs
imul
dec
not
sahf
push
test
je
jne
pop
cmp
retf
push
xchg
retf
mov
cmp
fsubr
xchg
cdq
into
paddusw
or
xchg
mov
jmp
jnp
and
xor
jno
outs
xchg
or
add
sub
(bad)
addr16
jno
int
pop
inc
add
cmp
arpl
or
(bad)
pop
leave
enter
mov
dec
pop
pop
test
ins
movs
retf
nop
or
xchg
ja
mov
sbb
scas
call
loope
bound
movs
xor
and
test
ds
(bad)
sbb
call
and
push
popf
and
cmp
inc
les
jbe
data16
mov
ins
outs
(bad)
ja
mov
lea
dec
sub
fldcw
not
lods
jb
mov
mov
push
stc
ret
mov
stc
test
or
cld
pop
adc
pushf
cwde
loope
jns
out
fsubr
ja
pop
aas
dec
fcom
popa
ja
les
cmp
mov
mov
jmp
jno
into
and
jge
adc
dec
ins
mov
jb
lods
cmp
sbb
sti
popf
cmp
pop
mov
dec
mov
sub
fs
fimul
popf
int
mov
xchg
sbb
retf
repz
dec
pusha
mov
jp
addr16
and
fadd
fiadd
pop
jg
outs
fimul
inc
mov
fwait
xchg
mov
call
imul
cmp
pop
mov
call
imul
push
test
mov
int
sahf
setle
pop
ficomp
fld
retf
out
xchg
cmps
fs
xchg
sbb
test
into
push
xchg
sbb
or
xchg
lock
not
and
or
push
xor
xor
lods
dec
and
jmp
outs
sahf
mul
pushf
idiv
inc
inc
cmc
xor
push
or
lahf
pop
enter
outs
sahf
jae
(bad)
aas
inc
test
pop
cdq
into
add
xchg
pop
neg
pop
inc
lea
mov
xor
aad
ins
mov
lock
ror
stos
outs
ja
mov
push
aaa
stc
repnz
lock
pusha
pushf
mov
xor
push
jmp
and
xchg
pop
js
std
dec
pop
dec
movs
cmp
rcl
and
mov
or
and
pop
outs
lods
imul
pop
xchg
scas
mov
inc
cmp
lock
ds
jno
mov
data16
mov
xchg
mov
xchg
push
xchg
pop
xchg
add
leave
test
aaa
cli
loop
(bad)
cmp
inc
out
fldcw
and
lds
push
xor
push
inc
mov
xchg
xchg
cwde
(bad)
xor
inc
shl
xchg
sub
inc
jno
imul
ja
mov
dec
out
fist
leave
fs
mov
iret
cmc
dec
cwde
enter
popf
fs
fild
test
pop
scas
xchg
sbb
mov
bound
fidivr
or
cli
cld
(bad)
push
call
fidivr
dec
mov
xchg
mov
outs
cdq
ror
lock
inc
inc
out
cmp
pop
sahf
sub
add
mov
pop
test
lahf
sbb
and
(bad)
xchg
aaa
mov
pop
pop
mov
jns
retf
xchg
cwde
pop
push
std
rol
mov
aas
test
add
xor
jmp
arpl
sti
dec
and
mov
push
retf
and
aas
inc
addr16
add
sar
xchg
in
or
shl
dec
iret
xor
add
mov
test
pop
lahf
aas
add
push
dec
cdq
std
add
xchg
push
neg
pop
inc
lahf
outs
cdq
iret
cmc
cmp
aad
inc
(bad)
cld
je
std
ret
lea
mul
jo
leave
popf
pop
push
iret
pushf
mov
mov
mov
cmps
or
add
xchg
dec
popa
jg
les
xchg
dec
icebp
cmps
mov
dec
test
or
fisub
popa
pop
in
xor
inc
adc
fwait
inc
popf
add
pop
cmp
cdq
mov
cmp
iret
add
pop
test
popf
xchg
and
mov
repnz
pop
xchg
stos
rol
add
fimul
icebp
fistp
sub
pop
mov
aas
push
fcom
popa
pusha
pop
les
cmp
push
sbb
mov
mov
jmp
jge
aam
sbb
add
pop
mov
std
pop
outs
xchg
dec
inc
mov
push
mov
pop
jno
clc
sahf
dec
ror
popf
pop
xchg
mov
xchg
mov
lods
jnp
jg
mov
push
inc
nop
mov
mov
cmp
sub
ja
and
inc
inc
popa
cmp
pop
ins
push
xchg
jns
adc
(bad)
sbb
fistp
push
or
xor
or
cmp
arpl
dec
inc
mov
ins
mov
dec
hlt
stc
sahf
sbb
inc
pop
test
xchg
cmc
push
in
mov
add
fnsave
clc
movs
ror
add
aaa
cld
repnz
lods
inc
div
adc
jecxz
cld
add
and
push
dec
in
call
cwde
ret
or
fidivr
add
and
or
mov
test
out
push
outs
fisubr
mov
adc
adc
cmp
add
inc
cmps
push
(bad)
retf
jno
aad
inc
pushf
loope
sbb
ret
call
rol
pop
sbb
cwde
cmps
icebp
test
mov
sub
ja
sub
psrad
jo
dec
mov
inc
cs
shr
rcl
pop
push
or
and
jo
data16
adc
adc
inc
ins
shl
pushf
das
jnp
scas
popf
cmp
pop
sti
cmps
sahf
and
pop
mov
outs
mov
test
hlt
ret
call
mov
mov
cmp
mov
fwait
cmp
pop
out
aas
xor
test
push
rol
popa
add
sub
not
jns
call
test
pop
mov
jbe
push
xor
xor
sbb
mov
lahf
aas
jle
lods
stos
or
push
dec
out
popf
adc
pop
pop
mov
inc
mov
mov
mov
fistp
xchg
push
addr16
mov
leave
neg
cld
pop
arpl
into
sbb
es
cld
sbb
and
dec
fwait
dec
pop
push
in
pushf
xchg
cdq
mov
test
inc
retf
xor
push
or
fwait
pop
mov
idiv
mov
pop
mov
add
in
lahf
cs
add
outs
xchg
mov
mov
lahf
adc
iret
pop
test
inc
nop
pushf
stos
sbb
iret
xchg
mov
icebp
and
mov
push
(bad)
cmp
dec
fisubr
jns
dec
or
(bad)
mov
dec
sahf
mov
into
js
popa
inc
mov
lods
pop
rol
icebp
arpl
push
inc
lods
aas
inc
mov
mov
inc
or
retf
xchg
or
ins
inc
movs
push
mov
(bad)
aad
inc
popf
mov
push
mov
pushf
adc
shr
lods
pop
ja
mov
push
daa
stc
repnz
iret
stc
push
xlat
addr16
sbb
push
fadd
retf
cmp
sub
lods
dec
aas
push
out
mov
scas
dec
and
inc
call
push
inc
div
pusha
or
mov
add
dec
outs
mov
sar
outs
mov
stos
sub
scas
sahf
adc
jbe
lea
mov
push
popf
retf
mov
cmp
fsubr
xchg
or
mov
nop
test
sbb
or
pop
lds
and
(bad)
iret
push
repz
outs
fld
push
imul
and
outs
cdq
fisttp
lea
inc
inc
jmp
cmp
pop
xchg
add
jnp
cdq
outs
inc
mov
push
mov
adc
icebp
sahf
pop
mov
pop
cwde
jle
xor
je
stos
je
(bad)
xchg
add
iret
sbb
cld
sbb
stc
test
mov
lock
pop
fmul
jle
pop
fst
add
xchg
dec
and
push
popf
xchg
sbb
icebp
js
popa
inc
in
sub
sub
outs
jno
imul
dec
repz
outs
dec
push
popa
aam
and
xor
jp
test
in
xchg
les
and
rol
(bad)
xchg
int
fstp
xor
hlt
iret
mul
aam
fwait
pop
fidivr
sbb
loope
jl
dec
xchg
ins
push
dec
cmps
mov
mov
and
movs
sti
jns
popa
inc
fcomp
push
push
or
lahf
pop
mov
lock
outs
mov
inc
movs
scas
mov
(bad)
xor
ins
inc
mov
cmp
mov
mov
lea
loope
rol
add
fisubr
sbb
lods
inc
jecxz
(bad)
and
aam
test
pop
inc
pushf
sbb
push
xchg
dec
cmp
mov
cmc
dec
shr
or
call
(bad)
push
or
fwait
pop
mov
test
xchg
jl
lods
mov
in
popf
sbb
jp
call
enter
mov
mov
and
nop
mov
leave
mov
jmp
mov
ror
and
in
jl
jle
cmp
pop
pop
movs
xchg
mov
jg
ror
hlt
jp
jno
loopne
or
or
pop
mov
scas
pop
inc
xchg
fs
scas
xchg
inc
add
cld
cmps
sahf
aas
mov
jle
mov
pop
test
pushf
inc
xchg
mov
mov
mov
sbb
add
lods
iret
test
test
stos
add
fist
ss
outs
test
dec
and
test
and
pop
rcl
or
in
jp
push
or
xor
push
or
mov
mov
fstp
mov
xchg
aas
jno
lods
lods
sub
fistp
mul
mov
(bad)
mov
mov
fsub
je
rcr
mov
xchg
int
mov
nop
mov
sbb
stc
retf
sti
push
pusha
mov
jp
pop
(bad)
adc
push
fadd
(bad)
push
loopne
jl
pop
xchg
adc
test
xor
out
or
in
jp
push
or
xor
push
or
mov
cwde
add
pop
ins
xchg
cmp
sub
fistp
mul
pop
fwait
pop
retf
xchg
inc
mov
movs
je
std
fbstp
and
nop
mov
retf
(bad)
bound
mov
pop
ror
and
jmp
sub
sbb
pop
xchg
movs
mov
stos
cmp
clc
jg
nop
or
cmp
add
pop
mov
sbb
scas
mov
iret
(bad)
sahf
push
mov
pop
fwait
jle
test
push
retf
mov
pop
xchg
fdiv
push
xchg
fs
movs
pushf
iret
sbb
pop
cmp
mov
xchg
mov
xchg
pop
in
aas
xor
test
imul
push
js
test
pop
cmc
xchg
xchg
into
dec
aas
lock
adc
(bad)
repz
jge
mov
fs
adc
imul
add
lods
in
or
dec
push
sahf
inc
mov
pop
fimul
fstp
retf
xchg
cld
je
std
ret
test
jecxz
add
pop
and
mov
loope
arpl
retf
and
jmp
add
jno
inc
mov
mov
out
pop
cdq
iret
xor
inc
les
inc
or
loop
mov
std
pop
outs
fnstenv
mov
push
test
pop
retf
inc
ror
fidiv
pushf
retf
outs
mov
out
xchg
mov
repnz
xchg
pop
mov
rcr
sbb
xor
aam
arpl
(bad)
xor
dec
clc
xor
cmp
into
adc
inc
fist
sub
jmp
jnp
in
xor
inc
out
or
or
xchg
pop
xchg
adc
js
mov
pop
mov
test
inc
adc
cmp
arpl
jp
(bad)
in
mov
clc
dec
add
fst
mov
jg
call
iret
fimul
(bad)
lahf
mul
sub
sub
push
jle
cmp
cmp
xchg
dec
jmp
test
jnp
leave
xor
inc
sti
or
jns
xor
pop
enter
outs
mov
fsubr
pop
jmp
and
aam
push
mov
jnp
inc
pop
pop
sbb
fs
mov
adc
(bad)
mov
sbb
xor
test
stos
aam
ror
or
or
fmul
cmp
(bad)
lods
dec
sbb
les
arpl
js
add
das
pop
or
(bad)
pop
mov
in
pop
outs
xchg
imul
inc
xchg
scas
call
inc
cmp
neg
leave
pop
dec
pop
fldcw
lahf
in
or
dec
xchg
mov
repz
iret
inc
lods
sbb
xchg
repz
arpl
xchg
addr16
test
inc
fisub
popa
or
pusha
mov
mov
fistp
xchg
out
sbb
loope
arpl
aad
and
adc
(bad)
push
lahf
cmp
pusha
jno
push
dec
mov
dec
test
jno
out
cmp
jge
cmps
and
aad
push
pop
test
fwait
outs
xchg
(bad)
cmps
shr
rcl
jo
shl
loope
xor
test
xor
sub
test
imul
cmp
not
jne
call
xchg
aam
ret
inc
gs
stc
and
push
adc
xchg
push
adc
jle
lea
dec
rol
add
dec
dec
jno
mov
daa
lods
xchg
ja
sbb
adc
aas
test
mov
push
inc
scas
xor
rcl
add
sbb
cwde
cmps
iret
test
stos
test
adc
push
rcl
popa
cmp
and
(bad)
test
pop
or
pop
iret
and
gs
jmp
nop
dec
pop
test
push
jmp
dec
pop
xor
inc
leave
xchg
push
adc
popf
xchg
retf
and
mov
lock
inc
mov
movs
add
fimul
iret
popf
imul
sub
dec
mov
aas
push
rcl
fs
dec
stos
or
mov
jne
mov
mov
fdivr
xor
add
and
push
or
mov
lods
adc
jle
scas
pop
add
lods
xchg
add
in
fcomp
leave
outs
arpl
jb
cwde
retf
dec
movs
enter
movs
fs
cli
fisttp
mov
add
mov
or
lahf
jnp
dec
ficomp
(bad)
imul
jl
cmp
dec
cmp
cmps
movs
xchg
rcr
sbb
mov
or
jmp
sbb
or
inc
ins
mov
xchg
das
jno
lods
lods
bound
sbb
into
popf
adc
inc
pop
mov
retf
inc
out
and
fild
xchg
js
mov
retf
clc
imul
jp
dec
aad
and
test
inc
loop
jl
cmp
dec
push
ins
cmps
add
ror
xor
mov
es
push
ins
lahf
dec
or
mov
or
pop
jecxz
popf
setp
jg
popa
add
ficomp
retf
inc
xchg
loope
fimul
imul
fmul
adc
dec
mov
mov
leave
scas
loope
gs
in
aam
xlat
dec
iret
cmp
inc
mov
stos
inc
stc
sub
jbe
xchg
push
inc
mov
fld
push
fwait
(bad)
xor
inc
(bad)
or
pop
stos
adc
pusha
outs
lods
push
inc
mov
xchg
pop
cld
lods
sahf
aas
mov
jnp
mov
pop
mov
fwait
dec
xchg
mov
mov
xchg
push
mov
lods
push
add
movs
test
cmp
xor
mov
xor
sub
cld
push
jg
pop
ficom
js
loopne
cmp
mov
enter
xor
inc
jmp
or
jo
mov
xchg
das
popa
movs
scas
lods
cmp
jno
fcomp
out
push
pop
(bad)
jb
shl
stos
retf
mov
xchg
cld
fs
fsubr
xchg
xchg
pop
sbb
test
sbb
adc
dec
lds
and
enter
repz
jg
xor
aaa
js
fwait
dec
pop
or
popf
test
pop
cdq
enter
jns
gs
test
imul
jmp
pushf
push
inc
fadd
outs
sahf
scas
mov
int
sahf
push
ror
nop
push
and
fs
(bad)
hlt
jnp
ja
stos
popf
into
dec
sbb
inc
std
sub
xor
addr16
dec
and
mov
inc
iret
cmp
inc
fsubr
jno
dec
inc
pop
in
retf
dec
and
jnp
clc
sbb
jmp
retf
and
pop
or
jmp
lods
imul
pop
mov
jno
out
lahf
ds
push
out
jne
mov
bound
mov
mov
xchg
pop
xchg
movs
scas
iret
xor
pushf
sbb
std
xchg
loope
cmp
xchg
lea
cmp
ror
jle
push
adc
dec
dec
jmp
xchg
sahf
in
sbb
sar
add
and
add
or
data16
mov
inc
mov
pop
lods
scas
scas
push
adc
lods
lahf
adc
(bad)
dec
leave
inc
gs
mov
ret
mov
jmp
or
xchg
imul
sahf
mov
pop
add
mov
xor
and
dec
jle
dec
fnstsw
push
mov
add
lahf
test
arpl
js
push
inc
sti
and
jge
daa
(bad)
pop
retf
adc
dec
outs
pushf
jae
shr
inc
cmps
scas
mov
(bad)
lahf
push
lods
lea
push
pop
xchg
dec
test
loopne
xchg
xchg
(bad)
and
iret
dec
call
inc
rol
out
(bad)
xor
dec
jmp
imul
jle
(bad)
fsub
popa
fwait
dec
push
push
jmp
and
xchg
addr16
dec
enter
adc
loop
mov
jmp
dec
mov
dec
xchg
mov
sub
pop
(bad)
cld
xor
adc
add
sub
aad
adc
aam
mov
call
rcl
inc
scas
mov
repz
enter
test
dec
aas
das
add
sbb
daa
mov
mov
retf
imul
jae
dec
in
and
inc
adc
xchg
push
popf
cmp
adc
pop
dec
mov
add
mov
cmovg
pop
pushf
call
inc
out
jae
mov
mov
retf
cmp
in
push
retf
push
fwait
add
movs
add
pop
pop
fistp
jge
lahf
sub
dec
stos
das
aas
adc
xchg
ret
push
popa
and
cmp
and
push
add
fwait
xchg
sub
out
inc
adc
(bad)
shl
pop
pop
dec
push
adc
mov
jl
popf
dec
pop
(bad)
add
mov
mov
call
out
outs
inc
xchg
push
mov
stos
jo
or
ret
lea
div
ins
scas
enter
retf
pushf
test
cdq
inc
jge
aam
leave
addr16
aas
dec
not
popa
ja
les
js
adc
icebp
ret
test
inc
test
push
jb
int
push
pusha
push
adc
bound
add
lods
lea
add
xor
int
leave
outs
jg
scas
sub
mov
xchg
push
shl
lea
dec
mov
movs
pop
pop
xor
mov
icebp
ds
xchg
aam
fimul
das
and
ror
scas
imul
jl
dec
pushf
addr16
push
clc
dec
cs
mov
mov
shl
sbb
int
jno
or
or
or
push
mov
dec
ins
mov
jo
lods
xchg
pop
push
add
jmp
ret
imul
dec
retf
dec
cmps
enter
movs
dec
sub
fbld
xchg
add
retf
retf
or
pop
pusha
mov
jp
dec
(bad)
adc
(bad)
inc
loopne
jl
dec
xchg
or
add
stos
xchg
rcr
xor
or
and
or
test
inc
ins
cwde
push
or
mov
loop
popf
add
inc
pop
pushf
dec
retf
fmul
inc
call
cs
mov
adc
cmp
xchg
loope
push
pusha
call
ror
inc
repnz
out
jl
xor
dec
pop
push
movs
add
mov
or
js
adc
adc
adc
inc
cmps
add
scas
mov
inc
sub
in
sahf
xor
pop
scas
push
and
xchg
mov
(bad)
fmul
pushf
(bad)
into
aaa
mov
sahf
sbb
loope
arpl
retf
cmp
stos
inc
std
adc
(bad)
fld
inc
mov
aas
pop
out
(bad)
imul
jbe
inc
ror
dec
or
mov
test
enter
pop
inc
mov
cdq
sub
jno
scas
sahf
ror
mov
sbb
push
xchg
mov
cmps
push
xchg
push
mov
fstp
add
mov
arpl
(bad)
and
shr
add
and
dec
xchg
jge
movs
test
push
cdq
loope
stos
iret
jns
pop
inc
jmp
cmp
pop
xchg
cmp
dec
outs
cwde
jnp
xchg
add
scas
mov
int3
rcr
leave
dec
push
pop
lahf
jp
iret
in
out
mov
xchg
nop
fs
fdivr
lods
or
scas
xchg
xchg
inc
in
adc
mov
mov
test
jnp
fdiv
push
jb
dec
pop
dec
in
sub
cwde
int
xchg
std
jns
push
inc
mul
imul
cmp
sbb
push
inc
retf
cwde
scas
(bad)
xor
jno
cli
lahf
xor
dec
push
pop
scas
push
cmps
retf
arpl
test
fld
cmps
fmul
ss
cmp
xchg
xchg
fdiv
shl
dec
and
mov
jle
jp
imul
dec
and
jmp
arpl
js
jne
(bad)
and
inc
or
loop
mov
cmc
add
mov
pop
mov
cmp
in
lahf
cs
jno
mov
xchg
mov
xchg
mov
cmps
and
iret
sbb
sbb
cmc
xchg
iret
fdiv
mov
lock
(bad)
adc
pop
fst
push
js
dec
add
call
and
dec
popf
in
xor
inc
call
cmp
pop
xchg
adc
jle
cdq
pop
inc
mov
inc
mov
mov
(bad)
lahf
add
pop
arpl
jb
ret
retf
jns
retf
xchg
xchg
fs
fnsave
mov
sbb
cmp
iret
mov
lahf
xor
dec
jmp
and
mov
imul
jle
cmp
cmp
xchg
or
sahf
xchg
pushf
iret
sbb
mov
or
sub
push
pop
retf
inc
outs
(bad)
jnp
fsubr
inc
jmp
loope
inc
and
into
xor
jp
pop
inc
inc
scas
pop
mov
xchg
pusha
pushf
or
ret
call
movs
push
push
scas
mov
pop
aas
fisttp
jge
mov
or
xor
test
inc
shl
popa
add
shr
ins
cmps
push
and
les
jnp
xchg
xor
dec
les
pop
adc
mov
push
jno
dec
dec
mov
pop
mov
pop
lahf
hlt
and
adc
add
mov
mov
mov
mov
movs
sub
rcr
ret
adc
mov
loope
gs
aam
mov
cmp
sbb
sub
daa
jp
pop
js
mov
mov
cmc
push
sub
vpackuswb
pop
(bad)
or
adc
test
pusha
jno
push
pop
mov
add
adc
lods
add
jnp
cdq
and
aad
dec
(bad)
jmp
push
test
mov
mul
jno
leave
test
jo
xor
mov
xor
dec
fcom
popa
jl
les
js
loopne
pop
jne
fwait
test
push
test
xor
shl
pop
stc
or
adc
pop
cmp
jo
ret
shr
sbb
jno
fist
loop
jp
stos
pop
repz
dec
pushf
enter
fwait
dec
and
fild
(bad)
fmul
cmp
pop
fs
mov
sbb
retf
les
popf
aam
shl
and
test
inc
jmp
js
mov
xchg
inc
fmul
push
add
or
inc
or
lahf
sbb
cmp
ins
ins
mov
jae
lods
popf
pop
push
sub
jmp
push
pop
mov
dec
mov
xchg
mov
and
fiadd
mov
pop
scas
mov
sbb
in
retf
mov
cmc
cmp
mov
xlat
sub
test
loope
jl
jp
addr16
loopne
ds
cmps
mov
mov
and
dec
shl
sbb
xlat
jp
jne
ret
or
ja
cmp
jle
test
mov
mov
in
popf
sbb
popa
pop
call
enter
movs
fs
hlt
fbstp
or
scas
mov
retf
inc
lods
fdivr
rcl
and
enter
in
jl
xor
dec
pop
jne
stos
test
imul
sbb
mov
or
in
adc
data16
xchg
cmp
pop
ins
fidivr
xchg
add
lods
neg
or
jno
enter
rol
push
enter
jmp
xchg
fs
fadd
lahf
popf
into
cmp
sbb
mov
arpl
int
and
out
(bad)
cld
imul
jg
inc
(bad)
js
cmps
dec
and
out
add
fwait
ret
sbb
jmp
mov
sbb
pop
into
adc
sbb
jnp
cmps
add
scas
pushf
xor
jno
hlt
sahf
and
jns
pop
mov
pop
xchg
xchg
mov
rcr
xchg
jnp
dec
xchg
cdq
scas
into
daa
fstp
pop
and
scas
iret
in
arpl
(bad)
xor
stos
imul
jg
cmp
imul
dec
or
mov
mov
cdq
(bad)
xor
inc
shl
stos
adc
outs
add
mov
ins
mov
add
cmps
sahf
sbb
pop
call
retf
mov
add
push
mov
mov
adc
jmp
shl
arpl
cld
sub
pop
mov
jg
pop
fcom
push
je
dec
pop
ins
in
cmps
xchg
cwde
fstp
sar
inc
jmp
addr16
dec
outs
fist
xchg
das
push
cmps
scas
stc
cmp
pop
enter
mov
pop
pop
shl
retf
ins
stos
retf
dec
xchg
dec
add
fld
test
sbb
xchg
cmc
sbb
add
pushf
fdiv
sti
dec
not
and
enter
rol
pop
fbstp
jle
dec
and
xchg
adc
aad
lahf
iret
xor
inc
mov
sbb
hlt
pop
outs
mov
push
xchg
scas
pushf
pop
inc
daa
pop
(bad)
and
(bad)
jns
inc
inc
pop
mov
addr16
retf
xchg
test
(bad)
xchg
push
xchg
dec
mov
rcr
pop
sbb
loope
ins
bound
repnz
and
mov
inc
(bad)
and
sub
js
movs
dec
or
jmp
xchg
popf
clc
xor
inc
les
xor
cmp
push
mov
inc
mov
pop
fsubrp
lahf
sbb
jae
test
popf
in
mov
mov
adc
pop
mov
sbb
scas
and
iret
sar
lods
lahf
xor
and
or
ss
adc
cld
dec
adc
(bad)
xor
scas
jnp
jecxz
test
js
add
sub
or
pop
xchg
cmp
js
fmul
xchg
das
inc
lods
scas
clc
bound
jno
stos
lahf
dec
mov
dec
out
outs
pop
rcr
jge
retf
xchg
jmp
call
lods
push
jl
xchg
(bad)
loope
dec
jge
aam
cmc
dec
out
aas
cmp
test
imul
popa
pop
push
cmp
adc
out
test
arpl
imul
arpl
in
jno
imul
dec
jmp
and
and
xor
inc
mov
cmp
aad
dec
popf
xchg
ret
fwait
jne
inc
push
scas
ret
add
ror
jge
xchg
int
lods
or
sbb
call
push
and
push
or
out
test
push
xchg
cli
sbb
icebp
addr16
inc
pop
leave
and
push
adc
pop
cmp
pop
jno
push
pop
mov
add
jno
test
sbb
inc
test
cdq
nop
retf
cmp
(bad)
mov
mov
mov
clc
(bad)
or
add
pop
add
cwde
hlt
loope
jge
lods
test
dec
aas
sbb
xchg
fldcw
and
xor
adc
adc
ret
inc
aas
scas
dec
test
sbb
(bad)
gs
in
and
inc
adc
xchg
inc
pushf
adc
pop
mov
sbb
pop
adc
call
inc
leave
add
rcl
in
mov
in
dec
(bad)
lea
test
ja
mov
sbb
add
iret
rep
pusha
cdq
mov
or
cmp
retf
jmp
jl
pop
pushf
or
test
xchg
test
push
(bad)
xor
add
or
push
or
(bad)
sbb
movs
jae
lahf
das
jb
lods
cmp
push
jno
neg
out
sbb
jb
mov
dec
test
add
fs
xchg
push
fisub
mov
bound
ror
cdq
loope
jge
or
and
enter
out
and
xchg
das
js
mov
or
mov
and
pop
ror
inc
or
xor
xlat
bound
or
cmps
sub
das
pop
out
popf
sbb
ret
(bad)
leave
data16
xchg
in
mov
mov
sub
inc
xchg
test
pop
scas
mov
retf
stc
ds
test
shr
and
add
inc
in
jl
inc
xchg
addr16
pop
test
mov
mov
and
jnp
lock
iret
jp
jge
ret
and
jne
arpl
adc
cmp
inc
ins
fld
test
js
lods
std
(bad)
pop
jno
aam
inc
mov
pop
out
pop
pop
fdivr
xchg
inc
test
out
fisubr
cld
sub
push
xchg
sahf
or
and
and
pop
arpl
into
adc
xlat
imul
jg
push
or
cdq
dec
sub
stos
xchg
ficomp
std
jns
add
and
imul
adc
pop
outs
movs
imul
bound
push
jno
(bad)
sahf
cmp
mov
leave
js
pop
mov
pop
call
ss
xchg
push
xchg
popa
xchg
fmul
sub
sbb
add
lea
inc
and
dec
adc
inc
mov
xchg
arpl
jns
push
inc
mov
xor
mov
das
outs
mov
jno
out
sbb
mov
sbb
dec
and
push
(bad)
fsubr
scas
test
pop
adc
mov
shl
test
xor
dec
std
aaa
and
dec
jg
(bad)
fldcw
jne
dec
sbb
mov
cwde
xor
out
cwde
repnz
aad
pop
inc
inc
ror
add
sub
pop
stos
adc
jle
fmul
inc
mov
cld
sub
pop
retf
inc
lods
mov
dec
ins
pop
fild
sbb
dec
add
xchg
sbb
test
into
inc
rcr
sbb
sub
rol
cwde
test
sbb
rol
add
(bad)
fisttp
push
jg
dec
sub
movs
xchg
lahf
fidiv
cwde
mov
or
and
jg
sbb
dec
outs
mov
pop
jmp
or
sbb
into
lahf
cmp
pop
movs
sub
retf
xchg
nop
dec
or
fst
movs
fwait
iret
sub
sbb
fild
bound
or
daa
ror
jle
push
xor
jp
dec
push
jge
add
sahf
int
sahf
std
js
pop
inc
mov
ss
sbb
dec
inc
retf
call
shl
pop
leave
mov
inc
add
sub
in
pushf
retf
xchg
mov
int3
(bad)
mov
sbb
adc
iret
ret
jns
stos
aam
shl
dec
and
mov
inc
fld
cmp
js
mov
retf
test
inc
pushf
(bad)
xor
inc
(bad)
or
inc
or
lahf
pop
mov
jmp
das
inc
mov
cmp
jmp
pop
jnp
fisttp
in
mov
out
xchg
mov
bnd
push
mov
mov
mov
mul
les
lods
mov
sub
(bad)
sbb
or
rcl
js
loopne
sub
cmps
test
dec
xchg
jecxz
mov
ins
jne
jmp
sbb
jle
mov
dec
test
cmp
push
pop
aam
cmp
or
popa
inc
movs
and
aad
adc
hlt
ret
fwait
push
sub
shl
and
inc
jge
fdivr
hlt
scas
pop
aas
sub
test
inc
cwde
inc
popa
pop
xor
cmp
test
jne
pushf
test
imul
inc
or
and
popa
adc
mov
int
lods
pop
jno
jnp
fadd
add
pop
and
enter
xchg
js
sbb
adc
aas
jmp
xchg
ret
mov
popf
rcl
movs
add
pop
sbb
popa
jge
mov
or
or
sahf
ds
cmp
js
cmps
push
sbb
les
pop
cmp
enter
pop
pop
les
pop
adc
mov
sbb
jnp
mov
jp
cmp
hlt
add
leave
adc
popf
pushf
in
xchg
in
mov
repz
pop
xchg
loope
rol
add
sbb
pop
dec
retf
pushf
hlt
iret
popf
jnp
cmc
mov
ds
(bad)
cld
into
push
clc
xor
sbb
fwait
dec
sub
mov
fdiv
xor
add
or
or
fcomp
mov
jne
lods
xchg
add
jno
enter
int
out
dec
pop
cmps
sub
and
cwde
enter
jecxz
daa
(bad)
mov
aad
mov
fstp
scas
mov
sbb
mov
xchg
mul
mov
dec
and
add
imul
jl
inc
xchg
push
js
mov
xchg
test
push
rcl
sbb
jmp
jecxz
sbb
xor
sbb
pushf
add
lods
stos
bound
push
pop
out
popf
adc
pop
mov
inc
mov
mov
sub
fild
test
pusha
scas
mov
retf
clc
jg
mov
jp
addr16
and
test
inc
loop
jl
push
das
push
pop
mov
sbb
mov
and
inc
ror
push
push
or
xor
adc
cmp
jl
xchg
push
or
mov
or
jno
cmps
popf
inc
call
fld
scas
retf
inc
mov
mov
sub
fcomip
jae
inc
xchg
xor
sbb
leave
mov
loop
pusha
loop
jns
addr16
daa
and
(bad)
scas
imul
jl
jp
sbb
inc
test
add
mov
stos
es
arpl
jns
jne
fisub
jge
push
loop
scas
adc
dec
outs
scas
push
inc
xchg
fs
xchg
inc
or
rcr
leave
jg
pop
mov
pop
jmp
stos
dec
aaa
repnz
call
and
or
pop
arpl
retf
sub
mov
imul
jg
pop
fimul
push
inc
xchg
dec
cmp
nop
test
dec
call
inc
inc
loopne
or
xor
push
outs
mov
xchg
das
outs
xchg
scas
stos
pop
inc
push
jno
repnz
adc
dec
pop
mov
mov
push
sahf
retf
mov
cmp
fsubr
fcmove
adc
sbb
sub
cdq
iret
call
xor
dec
lds
adc
(bad)
lock
jg
cmp
xor
mov
xchg
pop
cdq
mov
jecxz
push
or
or
inc
or
(bad)
bound
jnp
mov
mov
inc
sub
call
(bad)
leave
dec
jns
fistp
retf
outs
mov
loop
xchg
mov
pop
(bad)
fdiv
jnp
inc
xchg
stos
movs
into
dec
movs
sbb
sbb
xor
mov
das
and
mov
fs
addr16
je
dec
cs
jmp
jnp
repz
inc
fsub
jae
push
mov
js
scas
dec
inc
mov
xchg
inc
pop
pop
(bad)
ficomp
out
outs
pop
mov
(bad)
retf
nop
movs
dec
or
fisttp
movs
(bad)
iret
xor
cmc
sbb
retf
xchg
loope
dec
bound
hlt
adc
xlat
inc
ret
sbb
vmread
dec
cmp
stos
xchg
sahf
fdiv
pushf
mov
add
or
arpl
or
pop
outs
mov
inc
xchg
add
scas
lods
pop
inc
sbb
(bad)
lahf
adc
pop
(bad)
and
retf
xchg
xchg
dec
or
(bad)
cdq
iret
adc
sbb
add
bound
out
or
adc
mov
inc
fdivr
jle
pop
fnsave
js
test
sub
popf
ret
xor
inc
mov
es
pop
into
cmp
pop
outs
mov
mov
mov
inc
es
neg
out
sbb
jb
mov
loope
xchg
mov
(bad)
push
xchg
dec
mov
sbb
scas
test
scas
loope
jge
in
(bad)
xor
dec
jmp
mov
imul
jle
xor
push
inc
or
mov
mov
fistp
(bad)
sbb
(bad)
gs
ror
add
pop
jmp
lods
push
dec
mov
dec
mov
mov
dec
add
rol
mov
jb
aad
pusha
pushf
cmps
sbb
push
xchg
mov
shl
adc
scas
mov
stc
loope
ds
test
sub
sub
cdq
add
inc
rcl
push
daa
not
pop
out
test
jnp
ficomp
iret
addr16
dec
jmp
or
push
xchg
cmp
inc
jno
imul
add
mov
cmovg
jno
aam
adc
inc
(bad)
jp
ror
test
mov
popf
xchg
fs
in
ret
mov
cli
adc
add
pop
sbb
xchg
mov
sub
stos
adc
stc
imul
js
cdq
push
pop
dec
cmc
pushf
xchg
adc
out
push
or
(bad)
std
addr16
add
and
imul
test
pop
retf
xchg
mov
push
and
xchg
mov
adc
inc
nop
push
movs
in
call
pop
out
test
fcom
dec
lods
add
fimul
lods
iret
cdq
outs
jge
xchg
addr16
aas
inc
(bad)
xchg
loop
xchg
popa
jbe
les
mov
fldcw
ins
int3
cli
sbb
xor
or
sbb
stos
dec
add
lods
mov
xor
aam
xor
pop
mov
dec
out
cwde
sbb
in
fisttp
lea
inc
scas
mov
sbb
std
les
xchg
aam
xchg
dec
fisttp
and
test
imul
jl
push
sbb
lods
dec
cmp
cmps
mov
retf
hlt
sbb
std
jp
add
fimul
sbb
add
push
cwde
cmp
pop
ins
mov
or
xchg
pop
push
maxps
neg
leave
imul
push
(bad)
in
or
dec
fsub
fs
fbld
xchg
int
lods
push
jne
mov
retf
sti
arpl
xchg
addr16
inc
and
(bad)
iret
inc
jecxz
jl
jp
push
push
pop
mov
xchg
test
push
rcl
sbb
loope
push
inc
or
and
inc
or
(bad)
pop
(bad)
cmp
pusha
ins
call
lods
mov
loop
popf
add
jge
popf
and
mov
inc
mov
test
cs
fcomip
push
fdivr
and
cmp
mov
out
test
xor
dec
inc
imul
sbb
xchg
sub
test
mov
dec
ror
or
cmps
and
push
or
pop
mov
stos
push
inc
scas
add
scas
mov
inc
cs
mov
xor
pop
lods
push
adc
inc
xchg
mov
xor
fmul
(bad)
into
xor
mov
xor
test
adc
xor
lea
pop
(bad)
fistp
push
inc
or
scas
dec
and
jnp
retf
xchg
jns
add
and
push
or
pop
lea
inc
xchg
pop
out
scas
test
inc
adc
(bad)
xlat
lahf
cmp
add
and
retf
xchg
mov
fst
mov
sbb
nop
sbb
xlat
test
mov
jmp
and
mov
imul
jle
dec
fdivr
inc
arpl
dec
pop
push
jmp
and
test
js
inc
inc
push
add
fs
(bad)
cmp
outs
outs
ror
aad
inc
mov
jno
cmc
lahf
pop
xchg
lea
pop
add
lds
test
xchg
pusha
pushf
xchg
dec
adc
ret
call
sahf
push
addr16
mov
jge
aam
leave
ja
sbb
xor
test
inc
ror
pop
push
rcr
cmp
mov
les
loop
(bad)
fisub
jno
cli
sbb
adc
cdq
sbb
mov
je
lods
mov
add
pop
in
fstp
imul
pop
movs
pop
(bad)
dec
movs
enter
call
fisub
mov
push
nop
mov
sbb
fcmovne
mov
cli
jle
mov
fidivr
and
cli
(bad)
fsubr
sbb
xchg
or
test
les
ja
repz
(bad)
jns
jns
fidiv
jnp
add
enter
push
inc
xchg
pusha
out
scas
xchg
cmova
dec
stc
in
adc
je
pop
(bad)
fist
retf
sub
lods
sub
into
adc
sbb
sub
test
aam
arpl
clc
inc
and
int3
mov
jnp
or
das
push
jne
mov
(bad)
pop
sahf
rcr
inc
loop
xor
xor
ins
outs
mov
aam
pop
mov
lahf
xor
mov
and
sbb
cmp
in
xchg
aad
inc
pop
test
sti
call
(bad)
cld
pop
sbb
push
jge
aam
ror
or
out
imul
es
and
shr
or
pop
int
fs
and
inc
mov
xchg
ja
mov
sbb
pop
and
fcom
repnz
(bad)
dec
in
adc
je
stc
fist
mov
jno
mov
sbb
retf
retf
cmps
loope
bound
(bad)
jnp
ja
push
and
jmp
daa
inc
xchg
sbb
scas
dec
pop
or
mov
out
shl
and
or
sbb
sbb
arpl
popa
ins
(bad)
or
push
neg
fldenv
pop
fst
xchg
fild
enter
mov
sub
fcomip
add
inc
xchg
push
add
mov
leave
neg
call
lahf
xor
pop
leave
dec
and
aam
int
repz
push
sub
mov
dec
in
movs
mov
jnp
hlt
and
cli
sbb
or
cmp
js
fwait
dec
pop
aad
push
popf
ror
out
fist
out
sbb
movs
pop
vpand
enter
xchg
dec
es
xchg
push
fisub
mov
fs
mov
sbb
mov
mov
sbb
retf
dec
fsubr
and
out
inc
jl
dec
xchg
daa
push
pop
cwde
dec
or
lds
outs
ror
xor
or
xor
imul
adc
push
ins
fnstenv
mov
js
lods
cld
or
jno
test
inc
lods
rcr
pop
pop
fisttp
or
jo
out
xor
fucomip
sbb
ins
xchg
lahf
mov
jge
mov
xchg
jmp
aas
or
fcmovu
inc
jmp
js
mov
mov
retf
inc
rol
xor
or
or
pop
mov
or
lods
cmps
cmp
sub
call
jge
add
and
cmps
retf
inc
cwde
enter
xchg
call
jp
test
ins
scas
mov
retf
clc
cmp
lahf
jp
addr16
and
fadd
repz
jl
inc
xchg
xor
lods
dec
pop
add
and
pop
ror
xor
or
or
push
or
xchg
pop
cmp
or
add
lods
mov
loop
popf
add
inc
pop
pushf
push
retf
into
retf
inc
out
cmps
sbb
hlt
fbstp
cmp
scas
mov
leave
mov
(bad)
jnp
mov
ror
enter
out
jl
push
or
pop
jne
movs
xchg
shl
xor
or
or
dec
or
adc
cmp
add
xchg
add
scas
mov
out
sahf
cmp
mov
jnp
pop
pop
iret
fistp
mov
add
fdiv
lods
ror
mov
test
inc
in
adc
xor
pop
sti
dec
and
mov
push
iret
xor
(bad)
fsubr
jno
dec
sbb
jmp
outs
lahf
fsub
cdq
in
js
jge
in
xor
or
inc
outs
mov
inc
xchg
aas
pop
jmp
rcl
adc
push
pop
(bad)
pop
xchg
(bad)
retf
xchg
clc
je
xchg
fst
movs
iret
push
mov
mov
sbb
test
stos
fwait
xor
and
(bad)
adc
(bad)
fdiv
inc
popa
test
retf
dec
and
imul
pusha
inc
dec
call
pop
jmp
or
(bad)
out
fist
leave
imul
cmc
inc
mov
out
fisub
repnz
pop
mov
lods
push
dec
mov
stc
leave
icebp
iret
loop
pusha
jecxz
jns
pop
iret
mov
pop
mov
pusha
cmp
dec
sub
test
call
jno
fisub
jp
cmp
pop
scas
add
jo
test
inc
mov
mov
int3
(bad)
sahf
sbb
mov
outs
pop
xchg
jbe
mov
pushf
push
into
fnsave
mov
shl
sahf
push
add
stc
mov
(bad)
cmp
lock
adc
sub
test
push
cwde
inc
popa
pop
outs
sar
push
imul
aas
cli
dec
xchg
mov
fisub
popa
dec
fistp
imul
cmp
adc
jg
lea
add
and
xlat
add
xchg
jbe
adc
inc
xchg
jle
mov
test
pop
mov
mul
ror
test
ja
mov
push
aaa
stc
repnz
fcomip
dec
pusha
mov
das
and
inc
stc
imul
jo
dec
mov
inc
cs
xchg
xchg
lahf
shl
cdq
cmc
js
or
or
pop
xchg
cmp
inc
outs
mov
pop
stos
scas
adc
adc
cmp
mov
jg
cmps
push
(bad)
retf
popa
test
sahf
inc
nop
loope
or
fisttp
movs
cdq
iret
xor
sbb
scas
fwait
neg
aas
jmp
pop
bound
lock
and
int3
mov
imul
jle
jp
pop
push
ins
jmp
and
test
js
inc
inc
fdiv
push
scas
sub
sbb
push
dec
xchg
adc
dec
push
pop
popf
lods
and
xchg
jno
sbb
cmp
fstp
mov
movs
jo
cld
je
test
push
lea
neg
popa
scas
enter
retf
pushf
cmps
iret
cdq
inc
jge
aam
(bad)
pop
mov
aas
inc
out
xchg
scas
push
xchg
xor
pop
dec
push
sahf
inc
cs
mov
fstp
call
bound
in
pop
dec
or
mov
inc
outs
popf
push
inc
sar
pop
movs
scas
mov
inc
cmp
out
xor
jg
sahf
pop
cdq
iret
retf
ds
loop
mov
div
lea
in
ror
add
fisubr
cmc
fistp
sub
pop
fidivr
cmp
cld
fist
inc
jl
cmp
sahf
dec
sub
stos
xchg
mov
(bad)
xor
add
xor
inc
or
mov
mov
pusha
mov
or
clc
fcomp
leave
dec
add
outs
xchg
mov
xchg
cld
dec
or
(bad)
scas
shl
fst
arpl
xlat
pushf
xchg
loope
addr16
mov
ds
call
xor
cs
ins
test
and
dec
rol
or
mov
pop
inc
shl
or
fwait
pop
mov
inc
xchg
add
mov
inc
add
and
pop
add
sub
retf
xchg
cld
dec
pop
jmp
inc
mov
mov
lock
and
mov
mov
stos
adc
adc
xchg
call
xor
dec
shl
and
cmps
xchg
adc
stos
dec
test
sbb
iret
addr16
sbb
das
mov
fild
test
add
lods
sub
pop
jmp
fldenv
(bad)
dec
retf
inc
movs
enter
or
fbstp
mov
pop
call
inc
stc
leave
cmps
icebp
std
pop
pusha
jecxz
jns
dec
int
and
ror
jg
jle
sub
inc
mov
jno
xchg
test
inc
call
inc
inc
mov
xor
les
fwait
ja
xchg
das
push
mov
popa
retf
dec
call
lds
mov
arpl
jmp
xchg
gs
xchg
jge
sahf
neg
sbb
ret
mov
xor
and
repnz
jnp
sbb
dec
(bad)
js
dec
pop
ins
jmp
and
cli
jbe
inc
xor
xor
pop
lods
sub
outs
outs
cwde
outs
inc
xchg
add
scas
mov
fdivr
lahf
pop
mov
jns
pop
dec
pop
(bad)
(bad)
in
stos
aad
push
pushf
mov
adc
ret
mov
sti
mov
outs
nop
les
stos
iret
test
jge
mov
sbb
or
xchg
lods
push
sahf
pop
popa
cmp
addr16
jno
mov
scas
outs
test
or
(bad)
addr16
jae
adc
lods
inc
rol
sbb
jg
movs
xor
mov
dec
out
enter
int
out
add
outs
lds
cdq
inc
sar
(bad)
adc
push
test
mov
nop
mov
sbb
ror
call
jp
pop
aam
and
in
jl
jp
sbb
pop
mov
movs
xchg
imul
push
inc
mov
or
pop
mov
mov
test
push
cdq
scas
mov
int3
retf
mov
pop
pop
nop
pop
and
je
xlat
fisttp
movs
mov
cmp
sbb
xor
bound
in
dec
aas
cmp
push
popa
sbb
js
mov
mov
repz
fidiv
(bad)
dec
pop
pop
loopne
push
adc
mov
lea
push
scas
aas
ud1
dec
out
fbstp
repnz
retf
dec
test
test
fadd
xchg
jnp
dec
xchg
mov
jo
mov
retf
clc
outs
pusha
mov
jp
ja
sbb
or
in
jl
xor
dec
sbb
mov
mov
and
mov
inc
out
cmovnp
add
pop
mov
retf
push
outs
mov
xlat
aas
outs
mov
pushf
xor
in
sahf
sbb
pop
lahf
jle
mov
push
xchg
popf
pop
pop
(bad)
mul
xchg
inc
xchg
test
into
push
sbb
xor
bound
cmc
or
das
out
mov
sbb
jnp
dec
cmp
test
xchg
mov
sbb
js
inc
inc
mov
xor
icebp
jp
adc
scas
mov
fild
leave
pop
push
pop
pushf
pop
test
retf
fs
retf
xchg
xchg
dec
adc
fnstsw
ror
mov
mov
movs
iret
mov
pop
jmp
inc
fistp
jle
(bad)
fsub
popa
cli
dec
inc
or
mov
mov
aas
fsubr
std
xor
dec
(bad)
sbb
dec
adc
mov
ins
jno
push
dec
mov
dec
test
jno
in
cmp
adc
sbb
mov
jb
aad
jl
mov
mov
call
sahf
push
inc
mov
or
xchg
movs
cmp
out
test
push
outs
rcr
js
cwde
push
cmp
retf
or
int
xchg
cmc
or
and
ins
popa
adc
mov
sub
inc
jno
pop
dec
xchg
pop
in
mov
xor
xlat
sub
sbb
push
inc
mov
xchg
cmp
cmps
fs
inc
cmps
sbb
rcr
adc
scas
ret
adc
mov
icebp
cmp
loopne
stos
xor
pop
not
popa
and
and
sahf
xchg
int
aas
in
pop
adc
add
gs
arpl
dec
jno
push
pop
cmp
xchg
mov
pop
pop
cmovg
xchg
add
adc
jle
push
repz
lock
xchg
les
daa
sti
fisttp
mov
int
rcl
xor
mov
cli
pop
pusha
mov
and
int3
(bad)
rol
or
and
pop
xchg
cmps
cmps
xchg
mov
and
ja
retf
enter
or
xor
adc
cmp
jae
fisubr
add
mov
daa
pop
std
stos
sahf
cmp
sbb
mov
jns
retf
xchg
out
adc
call
mov
ja
mov
push
xor
repnz
fwait
jp
addr16
xor
push
test
inc
in
jg
dec
(bad)
push
jns
mov
fistp
out
or
in
js
push
inc
ret
and
ja
ss
pop
xchg
adc
outs
jno
jge
movs
sbb
cdq
mov
popa
jmp
popf
das
ror
mov
pop
mov
mov
mov
xchg
pop
mov
lods
push
add
std
cmp
out
arpl
retf
or
cmp
mov
mov
retf
jmp
inc
mov
sub
push
outs
(bad)
xchg
das
push
mov
sub
into
lahf
xor
pop
movs
and
retf
xchg
sahf
fs
push
xchg
sbb
sahf
movs
sbb
jmp
jns
stos
fwait
xor
and
or
jle
fdiv
bound
les
ja
jmp
outs
jne
hlt
sbb
push
adc
mov
inc
jno
jg
cmps
aas
add
mov
bound
pop
xchg
jmp
inc
not
bound
dec
xchg
les
and
fist
mov
je
mov
retf
loop
pusha
in
mov
aaa
and
mov
jnp
and
cmp
adc
sbb
fst
imul
push
inc
inc
cmps
xor
inc
adc
xchg
push
xchg
add
xchg
add
mov
and
xchg
aaa
mov
jp
mov
retf
dec
mov
mov
mov
lahf
push
fistp
or
mov
mov
test
loope
arpl
stc
xor
dec
dec
jle
outs
fistp
push
jge
sahf
xchg
leave
adc
int
xor
(bad)
dec
popa
pop
mov
xor
inc
test
fimul
xchg
aas
sbb
pop
dec
jno
fist
aam
jp
stos
pop
repz
dec
mov
pushf
dec
and
fild
lea
pop
xor
cmps
icebp
cmc
pop
pusha
mov
xlat
inc
and
out
(bad)
aam
jecxz
jl
dec
xchg
cmp
pop
loopne
pop
add
fcomp
fwait
jmp
ins
jne
jmp
pop
stos
cmp
outs
mov
inc
mov
movs
cmp
stos
sahf
pop
sahf
mov
dec
sbb
push
xchg
je
mov
mov
mov
sbb
test
cmc
iret
les
lods
mov
and
lods
push
cwde
pop
popa
daa
jp
pop
jl
mov
pop
lahf
mov
mov
fsubr
sbb
(bad)
jp
gs
sbb
pop
or
xchg
push
scas
add
dec
ins
lea
rol
jo
lods
mov
loop
popf
add
pop
pop
nop
push
enter
xchg
enter
mov
popf
adc
into
das
xchg
sub
test
xlat
cmp
xor
ja
pop
and
ret
xor
push
push
jp
dec
sbb
mov
(bad)
xor
std
sbb
xlat
addr16
dec
(bad)
xor
push
adc
mov
sub
ins
jno
push
dec
xchg
das
add
dec
pop
jno
inc
neg
inc
inc
pushf
push
cdq
fsub
aas
adc
pusha
mov
jmp
sar
outs
dec
xchg
mov
push
aaa
stc
les
pushf
xor
or
cmp
lds
push
push
xchg
pop
inc
pop
xchg
cmps
stos
xchg
rcl
and
or
sbb
pop
leave
add
inc
outs
stos
ja
mov
pusha
mov
sub
test
pop
mov
add
fcomp
push
fwait
retf
test
pop
(bad)
std
sbb
iret
mov
sbb
jmp
dec
bound
out
dec
and
mov
cmp
pop
js
test
jge
mov
aam
xchg
retf
sbb
mov
gs
mov
add
scas
sbb
pop
dec
mov
add
mov
xor
lods
sbb
xchg
pop
fstp
inc
inc
cwde
inc
cdq
sbb
movs
aad
push
mov
add
ror
add
ficom
mov
popf
inc
jge
lahf
sub
ja
ds
in
(bad)
and
sbb
push
sahf
dec
sub
test
and
pop
(bad)
or
in
jp
inc
add
and
add
cmp
ins
cmps
push
add
lods
cwde
add
adc
adc
ret
imul
cmc
inc
call
call
fcomp
sahf
lods
int
fst
mov
sbb
aam
shl
and
repz
(bad)
fnstenv
inc
jbe
dec
sbb
cwde
adc
scas
push
cwde
in
sbb
lea
gs
mov
aas
add
push
lahf
pop
mov
mov
pop
jmp
and
das
mov
pop
mov
fs
inc
xchg
mov
pop
xchg
(bad)
sbb
sar
adc
or
mov
retf
cmp
fdivr
shl
adc
aad
lahf
cs
ds
shr
and
(bad)
mov
sbb
push
add
int
sbb
das
mov
lods
push
add
lods
xchg
add
popa
in
retf
popf
cmp
ins
arpl
and
call
fsub
je
retf
fbld
mov
add
ror
or
pop
pusha
mov
rcr
and
(bad)
cld
push
out
jl
dec
xchg
daa
push
push
movs
mov
sar
or
call
fdiv
ja
sbb
jnp
mov
gs
adc
icebp
sahf
cmp
jg
pop
cmps
jle
xor
ins
xchg
mov
test
nop
inc
test
mov
adc
sbb
inc
arpl
cld
dec
and
mov
imul
jle
xor
es
sahf
dec
or
retf
sub
icebp
inc
popf
shl
sbb
dec
sub
pop
cmp
outs
popf
push
inc
shr
inc
movs
scas
mov
(bad)
lahf
push
int
jns
pop
inc
pop
nop
jp
cmps
cmc
jg
retf
xchg
mov
stc
(bad)
sub
gs
mov
push
inc
scas
mov
pop
cmp
mov
mov
or
sub
pop
popa
sbb
cmp
mov
add
sahf
xchg
adc
call
xchg
into
xor
fisub
imul
and
imul
popf
cmp
mov
popa
in
cmc
popf
cmp
push
pop
movs
push
(bad)
dec
loop
xchg
dec
fcom
xchg
and
jge
mov
jno
mov
cmp
lods
xor
ja
cmp
adc
(bad)
(bad)
jnp
dec
jg
pop
fldcw
inc
jne
dec
sbb
retf
mov
ja
repz
inc
fisttp
xor
or
hlt
bound
pop
inc
xchg
aas
inc
out
scas
mov
(bad)
lahf
push
lea
pop
jns
fdiv
xchg
in
loop
in
xchg
movs
fs
xchg
sbb
fst
jl
xchg
pop
mov
jge
mov
mov
push
aas
aaa
add
outs
shr
and
cmc
add
cmp
enter
imul
lods
inc
fwait
sub
imul
pop
xchg
aas
sbb
pop
push
jno
stos
add
sti
jb
ins
jae
cmps
jle
mov
dec
pushf
enter
lahf
dec
daa
stc
fbstp
popf
mov
sbb
retf
or
xor
ja
dec
and
(bad)
mov
push
(bad)
cmp
inc
fidiv
js
test
push
pop
out
adc
call
pop
inc
mov
ss
cmp
scas
movs
xor
repz
adc
push
pop
xchg
outs
cmp
pop
pop
rcr
div
dec
test
test
pop
mov
jmp
pusha
arpl
lahf
xor
ja
dec
and
mov
pusha
inc
fdiv
je
dec
cs
jmp
addr16
shl
call
and
imul
lods
push
mov
jmp
dec
lea
dec
lea
popa
fwait
cmps
add
jbe
stos
pop
jecxz
(bad)
dec
in
xchg
fs
dec
and
fild
lahf
int
call
inc
mov
div
dec
sahf
mov
ror
das
and
fmul
or
jle
dec
and
jmp
imul
pusha
jno
int
push
push
or
(bad)
sbb
sub
pop
ins
test
stos
das
ins
xchg
scas
mov
retf
dec
mov
pop
pop
movs
inc
xchg
cmc
popa
stos
retf
xchg
mov
fnsave
mov
shr
adc
mov
mov
jge
scas
je
push
es
cld
(bad)
push
jmp
push
pop
cmps
stos
test
imul
sbb
out
jp
or
stc
xor
inc
or
ror
fld
xchg
bound
xor
std
lahf
cmp
add
add
outs
mov
cmc
jno
aad
push
pushf
test
aad
xchg
or
rcl
rol
pop
add
dec
dec
fwait
mov
ds
pusha
pop
xchg
or
pop
jge
movs
test
push
cwde
loop
xchg
aad
pop
pop
inc
out
and
dec
or
pop
sahf
cmp
push
test
pop
xchg
scas
sub
fist
les
push
stos
pop
rep
retf
pop
xchg
retf
mov
xchg
in
cmp
bound
mov
inc
mov
cmc
and
dec
div
and
repnz
push
fist
jle
push
aas
push
imul
aas
lods
imul
jno
int
sbb
das
mov
scas
pop
add
lods
lods
sbb
adc
adc
ret
fs
mov
(bad)
cmc
inc
or
je
(bad)
mov
mov
jnp
mov
retf
stc
jp
lods
(bad)
jp
dec
ror
and
(bad)
std
push
out
jl
inc
xchg
das
push
pop
test
les
ja
iret
and
inc
fsub
pop
adc
sbb
jnp
mov
pop
stos
scas
sub
pop
popa
ret
rcr
fst
lods
outs
mov
mov
push
inc
lods
sbb
ror
add
fimul
iret
mov
fwait
scas
je
push
sbb
ds
cld
fiadd
inc
jl
pop
xchg
and
pop
in
add
mov
and
mov
or
and
sbb
sub
imul
inc
nop
das
bound
pop
dec
cli
lods
sahf
xor
jp
pop
mov
mov
mov
add
test
mov
mov
inc
mov
arpl
lods
xor
addr16
sbb
or
mov
jnp
sbb
or
fisttp
inc
jg
dec
sub
lahf
xchg
lahf
stc
sbb
jmp
(bad)
and
or
add
repnz
outs
mov
inc
mov
pop
mov
xchg
cmp
out
lahf
add
mov
pop
arpl
jp
shl
cmps
retf
xchg
loop
adc
ret
call
xchg
outs
scas
mov
pop
cmp
mov
icebp
enter
fwait
cmp
scas
push
aas
and
popf
aas
popa
daa
push
push
inc
and
xchg
dec
aas
imul
jmp
leave
cmc
adc
stc
xor
push
adc
mov
imul
xor
(bad)
sbb
and
rcr
fldcw
pop
lods
outs
lds
inc
sar
xchg
and
ins
test
mov
nop
mov
retf
clc
dec
pusha
call
rcl
and
cli
(bad)
ret
push
sti
pop
jg
jle
push
inc
lea
add
test
lods
aas
and
outs
call
popa
inc
in
cmp
pop
enter
outs
fnstcw
add
cmovne
pop
mov
push
pop
mov
bound
loope
or
fst
movs
call
popf
std
sbb
fild
bound
in
dec
and
enter
fst
jle
outs
fcomp
push
push
out
mov
pop
xchg
hlt
or
mov
pop
dec
mov
cmp
jns
xchg
mov
add
sbb
fnstsw
aaa
mov
pop
repnz
jbe
scas
jle
lahf
in
cmps
enter
popf
dec
sub
fist
adc
adc
push
jnp
mov
sub
xor
dec
(bad)
cmp
fcom
aaa
jg
pop
fld
push
dec
in
sub
cwde
in
or
xlat
jns
add
sbb
or
pop
sahf
adc
inc
outs
cmps
dec
inc
cmps
add
scas
movs
push
or
stos
lahf
add
mov
pop
add
jb
fwait
in
sti
retf
xchg
mov
sbb
imul
(bad)
xchg
pop
adc
pushf
xchg
loope
inc
jge
lahf
sub
ja
ds
ds
not
xor
add
push
scas
dec
cmp
xchg
mov
jg
clc
and
or
or
add
cmp
pop
mov
aam
ins
fisttp
fadd
jnp
scas
lea
inc
xor
into
sahf
and
jp
pop
mov
pop
test
mov
mov
fwait
scas
into
or
sbb
xor
lods
aaa
jmp
xor
mov
jnp
sbb
imul
call
and
pop
pushf
retf
hlt
js
inc
inc
iret
xor
imul
push
pushf
add
inc
jno
addr16
mov
pop
lods
mov
sub
(bad)
and
xchg
inc
leave
sbb
inc
(bad)
mov
xchg
inc
and
js
mov
int
call
cmp
(bad)
icebp
(bad)
popa
pusha
mov
aad
and
(bad)
rol
or
or
mov
sahf
xchg
scas
sub
nop
xor
inc
mul
add
cmp
les
fistp
adc
test
dec
leave
call
test
retf
arpl
retf
nop
mov
mov
push
xchg
movs
mov
aas
fstp
gs
pushf
lods
sbb
xchg
mov
xor
and
int3
mov
inc
fcomp
jle
dec
(bad)
gs
dec
pop
dec
jmp
and
xchg
les
push
adc
out
push
nop
cmp
jae
movs
ja
popf
das
dec
mov
jno
mov
cdq
push
cdq
mov
ds
in
mov
test
jecxz
or
bound
xlat
les
cdq
lahf
jnp
dec
(bad)
sbb
out
or
and
pop
cld
dec
sbb
lds
sbb
jns
or
sbb
add
bound
push
popf
das
dec
xchg
mov
bound
jno
fiadd
neg
jnp
cdq
inc
cdq
ret
retf
cmp
aad
adc
ret
lea
in
ror
add
fimul
lods
icebp
mov
fwait
mov
ds
retf
jmp
js
lea
cmps
xchg
xchg
mov
mov
jp
pop
or
sbb
adc
cmp
jge
fmul
or
neg
or
dec
(bad)
jmp
jp
jle
pop
cmps
dec
and
pusha
xchg
stos
je
rcr
mov
scas
mov
jp
xchg
mov
test
xlat
jnp
in
xchg
loopne
clc
dec
and
ror
jle
data16
push
jge
dec
sub
xchg
adc
(bad)
addr16
fcomp
enter
inc
mov
adc
test
pop
mov
sbb
adc
dec
in
retf
xchg
aaa
mov
ins
pop
movs
and
iret
fisttp
enter
mov
mov
cmp
iret
ss
and
xchg
mov
hlt
adc
lock
(bad)
jle
outs
fnstsw
inc
popa
mov
dec
out
xchg
sub
rcr
(bad)
sbb
hlt
addr16
dec
shl
adc
mov
(bad)
add
add
mov
popa
out
jmp
imul
pop
retf
dec
mov
mov
sub
fild
cmp
nop
mov
leave
nop
(bad)
bound
fwait
jns
ror
inc
inc
scas
jnp
push
jl
jle
adc
inc
test
out
test
jg
cld
and
inc
jecxz
ds
aas
lods
pop
cwde
adc
popa
outs
mov
inc
mov
pop
test
jno
fiadd
fstp
pop
inc
sahf
jle
mov
loop
mov
test
jecxz
or
data16
mov
retf
clc
pop
pusha
mov
jp
addr16
and
add
imul
jl
jp
cmp
pop
mov
add
les
sbb
into
and
inc
mov
or
pop
sub
outs
add
xchg
aas
push
jmp
das
dec
(bad)
enter
mov
test
mov
mov
adc
fnsave
fmul
or
adc
icebp
fisttp
lods
xor
int3
mov
jnp
ss
jp
xor
or
sub
aad
xchg
into
or
mov
add
xor
inc
adc
out
push
retf
js
cdq
push
pop
xchg
aas
add
push
jno
test
ins
jb
mov
dec
jmp
cld
and
pop
test
sahf
push
inc
cmp
test
push
out
addr16
dec
and
jecxz
jl
push
cmp
lods
dec
or
out
mov
test
sbb
mov
jno
fdiv
or
idiv
mov
pop
sahf
scas
sbb
neg
test
mov
jp
retf
xchg
xor
std
push
xchg
fs
mov
shl
rcl
pop
mov
jmp
outs
jge
mov
fwait
dec
lods
inc
aas
mov
popa
and
cmp
push
pop
pop
icebp
test
ins
int3
stc
or
xor
xor
pop
or
(bad)
sbb
mov
or
adc
lods
test
push
and
les
out
add
pop
retf
xchg
inc
xchg
enter
in
sub
fistp
sahf
scas
int
movs
push
add
mov
leave
xor
mov
aaa
and
mov
inc
int
jle
pop
fisubr
jns
dec
cmp
call
and
sbb
adc
dec
cli
sbb
push
adc
lods
push
mov
mov
pop
mov
dec
popf
(bad)
adc
cmp
add
pop
cdq
mov
xor
mov
dec
in
ret
lea
scas
shl
outs
ja
mov
sbb
mov
stos
loope
push
nop
ja
daa
and
(bad)
loope
jl
xchg
sbb
pop
test
add
cmps
xchg
xchg
ror
and
or
sbb
push
or
jmp
fcomp
add
test
popa
stc
scas
sahf
adc
mov
je
pop
mov
cmp
ins
xchg
mov
(bad)
fsubr
scas
xchg
into
or
test
sbb
adc
mov
lds
xor
inc
cli
mov
inc
iret
add
pop
fisttp
inc
jg
dec
and
jmp
jnp
mul
pushf
in
js
push
inc
std
or
dec
or
xchg
pop
xchg
sub
pop
outs
fwait
push
inc
shr
inc
jmp
and
jmp
imul
inc
pop
popf
and
aad
inc
pushf
mov
sbb
ret
call
fst
dec
nop
xchg
nop
loope
pop
jge
cmp
lods
xor
and
cdq
sbb
dec
ror
movs
push
sbb
mov
ret
inc
aas
jmp
mov
jbe
jno
fmul
push
inc
or
mov
dec
ins
mov
jb
lods
sbb
jmp
es
jb
imul
cmc
dec
mov
and
xchg
sbb
jne
mov
push
scas
mov
sbb
jmp
dec
pusha
scas
lahf
jp
ja
or
dec
inc
stc
imul
jl
bound
dec
push
add
fisttp
hlt
xor
inc
jmp
pop
mov
retf
pop
outs
mov
pusha
nop
scas
xchg
sbb
dec
test
adc
mov
inc
jg
mov
(bad)
(bad)
retf
xchg
xchg
dec
or
(bad)
mov
sbb
mov
xchg
icebp
xchg
in
xchg
pop
fidivr
add
jmp
push
pop
pushf
imul
jmp
and
test
js
add
mov
push
adc
out
jno
jnp
xchg
das
dec
mov
xor
rol
neg
jl
pushf
sub
adc
ins
mov
std
jae
ins
or
outs
xchg
mov
push
xor
idiv
sahf
cmp
xlat
and
fadd
shr
cmp
and
js
mov
sbb
mov
mov
and
addr16
xor
or
xor
add
sub
outs
ret
fsubr
push
lods
scas
lea
sub
leave
scas
lahf
xor
sbb
ficom
movs
(bad)
fwait
aad
adc
ret
lea
test
and
jmp
dec
ins
sahf
xchg
ja
and
repz
jl
cmp
clc
dec
inc
push
movs
fst
addr16
stc
and
inc
fimul
push
inc
or
mov
bound
jae
(bad)
aas
popa
repz
lods
outs
inc
push
popa
sti
leave
sahf
sbb
jne
pop
nop
jle
mov
in
nop
mov
(bad)
and
inc
xchg
sbb
cwde
mov
cmp
xchg
fwait
aaa
aad
cmc
cmp
xor
mov
push
ret
and
ins
push
jns
(bad)
mov
pop
lahf
or
js
push
inc
mov
add
outs
mov
pop
test
dec
(bad)
and
inc
inc
pop
mov
pusha
call
xchg
adc
push
xchg
push
xchg
xchg
icebp
icebp
test
scas
fwait
sub
pop
cmps
or
add
nop
inc
popa
jnp
les
js
movs
push
pop
dec
icebp
adc
(bad)
addr16
jno
int
sbb
das
mov
scas
jg
mov
jge
scas
test
sbb
in
adc
pop
test
data16
mov
adc
ret
call
mov
icebp
pop
add
loop
(bad)
inc
ins
fwait
lods
inc
jecxz
ficomp
and
cli
retf
jmp
jl
push
add
pop
clc
dec
pop
dec
movs
lds
arpl
jns
add
loopne
cmovnp
push
out
pop
enter
outs
stos
push
inc
mov
pusha
mov
xchg
cmova
sti
fcomp
leave
jbe
pop
test
sahf
in
mov
stos
je
int
scas
push
xchg
js
stos
scas
iret
cmp
test
aas
xlat
xchg
add
and
repnz
inc
fsub
jle
dec
fst
adc
(bad)
dec
and
test
js
jns
mov
sbb
imul
ja
mov
dec
in
out
popf
ds
out
inc
pop
cmps
pop
(bad)
dec
movs
enter
lahf
pop
and
fild
xchg
or
mov
leave
movs
iret
std
pop
pusha
icebp
mov
ja
sbb
cmp
sbb
pop
(bad)
inc
mov
nop
mov
outs
call
add
mov
cmp
inc
outs
adc
das
outs
call
xor
rcr
leave
jbe
pop
xchg
xchg
cmc
push
jecxz
mov
add
fdiv
lods
mov
add
xchg
cmps
sbb
stc
xor
scas
fwait
xor
or
(bad)
mov
lock
or
mov
sub
test
xchg
adc
cld
ja
cli
sbb
jmp
dec
push
inc
loopne
cs
or
pop
test
ficomp
lahf
aas
inc
cdq
mov
sbb
popa
xlat
stc
cmp
or
outs
inc
movs
sub
sahf
aad
je
popf
je
ffree
idiv
pop
mov
mov
test
xor
lock
pusha
pushf
xchg
fst
and
out
retf
in
jl
jle
cs
stc
dec
push
jno
mov
test
call
or
sbb
pop
(bad)
adc
jle
pushf
push
inc
retf
(bad)
scas
cdq
or
dec
fild
dec
fstp
pop
lahf
dec
test
mov
popf
xchg
fs
out
stos
ja
inc
xchg
clc
cwde
ror
add
pop
inc
rcr
lahf
fwait
inc
jecxz
fisub
and
fadd
jmp
xchg
adc
xchg
dec
sbb
lds
pop
cwde
in
sbb
fdivr
add
or
arpl
add
repz
outs
cwde
outs
inc
popf
add
cmps
pop
inc
push
dec
aam
xor
xor
inc
mov
xor
je
std
rol
fcmovnb
aas
test
jl
mov
sbb
retf
stc
popa
arpl
cld
push
and
fmul
jle
cmp
sbb
loopne
and
(bad)
xchg
mov
aas
enter
or
cld
addr16
pop
int
sbb
das
scas
pop
fild
scas
ja
sub
lgdtd
jno
(bad)
popf
cmp
jg
mov
dec
mov
mov
and
fbld
test
sub
push
jge
mov
retf
clc
ds
stos
fwait
jp
pop
shl
(bad)
cs
outs
fist
cmp
pushf
mov
pop
cdq
cli
or
xor
xor
pop
(bad)
cmp
jns
mov
ja
mov
dec
in
lods
popf
cmp
popa
pop
mov
dec
mov
mov
fcomp
scas
jnp
je
test
add
mov
(bad)
loope
pop
pusha
icebp
mov
xor
ss
sar
or
sub
mov
stos
mov
inc
sahf
(bad)
sbb
cmp
sub
pop
(bad)
cmp
jp
scas
jg
(bad)
aas
dec
xchg
mov
pop
dec
pop
dec
fyl2xp1
and
or
jbe
stos
dec
repz
xchg
push
lock
pushf
fmul
xor
mov
and
sub
out
arpl
(bad)
dec
and
mov
imul
jle
pop
fimul
js
lahf
dec
ds
mov
mov
jmp
add
jmp
adc
data16
pop
mov
fcomp
mov
inc
jmp
daa
jno
sti
xor
and
jae
xchg
cdq
cwde
cmc
and
out
pop
std
rol
scas
sar
outs
jp
mov
sbb
add
icebp
icebp
es
xchg
mov
sbb
fld
cmp
xchg
adc
mov
cmps
lahf
xchg
mov
ror
dec
imul
or
mov
outs
ins
popf
pop
or
mov
or
dec
loopne
popf
inc
mov
push
leave
jl
pop
fcomp
fistp
retf
xchg
pusha
xchg
mov
fsub
scas
into
push
lods
sbb
mov
fild
bound
dec
and
or
and
xor
js
dec
pop
pop
out
xchg
cmp
stc
sbb
xor
sbb
add
sbb
inc
ins
rcl
xchg
adc
scas
mov
retf
inc
mov
je
rol
(bad)
cmc
outs
or
inc
nop
in
add
frstor
movs
or
mov
stc
test
and
aas
sbb
test
dec
les
push
mov
imul
shl
mov
jp
pop
add
and
pop
or
lahf
push
xchg
adc
inc
ins
mov
stos
add
mov
in
popf
push
rol
fldenv
pop
adc
in
mov
cmps
push
xchg
xchg
je
test
adc
push
xchg
lahf
fxch
sub
mov
daa
xlat
xor
call
cli
or
inc
loop
scas
inc
ret
dec
jle
pop
fimul
push
push
call
and
test
js
add
(bad)
sub
adc
lahf
inc
xchg
adc
pop
xchg
aas
add
mov
outs
pop
sbb
rol
fstp
pop
inc
lahf
jle
ror
loop
cmps
adc
lock
lea
xchg
pop
xchg
jp
leave
mov
(bad)
icebp
mov
jge
movs
sub
ja
xor
dec
(bad)
xchg
iret
jnp
and
jle
pop
addr16
mov
jns
mov
mov
fsub
xor
add
xor
or
(bad)
pop
mov
aam
ins
popf
push
or
add
lods
test
loope
popf
dec
mov
pop
shr
mov
xchg
ins
xchg
in
xor
fcom
cwde
popf
into
mov
pop
scas
cmps
mov
adc
cmp
xor
pop
(bad)
adc
sbb
mov
push
lock
push
(bad)
dec
test
ins
in
xchg
mov
pop
cdq
xlat
xor
inc
mov
and
std
outs
fld
inc
mov
push
mov
adc
test
dec
leave
dec
jns
rcr
push
xchg
xchg
(bad)
popf
and
inc
mov
fstp
inc
nop
lahf
mov
adc
xchg
mov
xor
and
fldenv
jle
inc
fnstsw
sbb
mov
and
jnp
std
xor
inc
shl
or
pop
lods
cmp
dec
outs
(bad)
stos
das
dec
popf
mov
add
jno
les
out
outs
inc
cmps
jle
xor
xchg
aad
inc
pushf
xchg
pop
push
mov
popf
push
fwait
pop
mov
test
push
nop
les
mov
fwait
scas
je
dec
fisttp
cs
cld
retf
inc
loop
jl
pop
xchg
push
pop
mov
movs
mov
stos
outs
rol
sbb
jmp
cmovo
sbb
pop
mov
leave
add
or
aas
push
mov
or
repz
inc
mov
inc
pop
cmps
pop
xchg
mov
xchg
xchg
fs
(bad)
mov
sbb
scas
xor
xor
mov
iret
lds
jge
aam
shl
dec
aas
pop
loop
ret
sbb
dec
les
push
cmp
push
pop
add
mov
mov
jmp
imul
push
test
popa
ins
mov
xchg
adc
lods
cmps
sbb
add
out
sahf
xor
mov
jnp
pop
mov
in
cmps
retf
movs
dec
xchg
cld
fs
fld
cmps
mov
cmp
sbb
nop
pushf
mov
pop
loope
mov
fisttp
mov
jmp
aas
xor
sbb
pop
ins
push
mov
cs
lahf
mov
mov
rol
and
in
sub
inc
int3
sub
imul
ja
mov
pop
loope
popf
setp
pop
mov
(bad)
cmc
jns
retf
xchg
loop
adc
mov
mov
add
add
leave
test
aaa
cld
les
fwait
lods
inc
jmp
retf
in
sbb
or
push
ins
cmps
test
imul
sbb
(bad)
jns
push
inc
iret
xor
pusha
or
lods
pop
mov
cli
dec
outs
fist
rol
inc
lods
scas
mov
xlat
in
cmp
or
push
sbb
scas
pop
mov
mov
popf
loope
push
std
ret
mov
clc
stos
ror
rol
pop
pop
loope
xchg
fisttp
sub
pop
mov
aas
or
cld
fist
xor
pop
stos
pop
ins
push
mov
test
and
dec
fmul
jno
or
sbb
jnp
xor
jae
stos
dec
inc
lods
aas
addr16
lea
jmp
jl
jge
pop
scas
pop
and
push
xchg
xchg
fmul
call
scas
mov
and
mov
push
and
mov
sub
js
mov
retf
dec
and
inc
sahf
xchg
sbb
sti
js
gs
iret
and
jg
cmp
pop
outs
sub
das
inc
mov
pop
fdivr
lahf
adc
popa
pop
xchg
and
aad
adc
iret
ret
lea
loope
rcl
add
scas
leave
test
aaa
loope
xchg
(bad)
dec
ins
fwait
test
dec
and
repnz
enter
fldenvw
dec
xchg
jne
fwait
mov
dec
lahf
mov
xchg
jecxz
jno
inc
call
cs
or
pop
mov
ret
sub
lods
mov
sub
jmp
jb
ins
jo
lods
dec
repz
dec
loop
xchg
fcom
xchg
and
jp
adc
pop
mov
mov
icebp
iret
out
arpl
lds
and
mov
imul
jle
data16
jns
dec
add
jmp
aas
fnstsw
shl
mov
addr16
dec
ficomp
outs
pop
adc
lahf
inc
mov
stos
inc
jno
addr16
mov
sbb
and
fst
repnz
jno
test
dec
dec
cdq
pusha
fsub
xchg
add
pop
xchg
push
jne
mov
or
mov
xchg
ja
cmp
dec
fmul
jle
cmp
xchg
dec
xor
nop
adc
icebp
imul
push
push
inc
mov
sub
dec
outs
fidiv
mov
inc
mov
push
jno
retf
lahf
pop
lods
lea
fstp
inc
mov
jno
aad
inc
popf
lahf
fs
in
ret
fwait
inc
xchg
mov
jle
mov
sbb
mov
call
cmp
inc
jl
cmp
dec
cs
out
mov
jmp
popf
clc
sbb
repz
inc
pop
fisttp
fs
adc
imul
or
or
int3
fstp
out
dec
pop
fstp
in
or
adc
mov
xchg
xor
push
test
mov
add
iret
mov
mov
dec
aas
and
call
push
jge
mov
jmp
mov
jbe
jno
mov
aas
xchg
pop
nop
adc
inc
ins
fwait
push
or
adc
lods
cmps
push
sub
loopne
popf
inc
mov
add
popa
jbe
test
pop
cdq
retf
call
fadd
mov
daa
mov
dec
scas
test
xchg
mov
xor
and
loop
fcom
adc
inc
fdiv
inc
bound
fldcw
sbb
addr16
jb
into
pop
push
pop
add
add
inc
ins
lods
addr16
lods
test
push
jno
into
popf
and
ret
imul
sub
mov
test
fcomip
sub
into
das
mov
scas
stos
xchg
sbb
iret
sbb
addr16
sub
dec
or
push
jp
aaa
js
mov
mov
lea
lods
dec
xchg
mov
(bad)
enter
pop
out
and
pop
adc
mov
push
jno
jg
movs
xor
mov
dec
in
fstp
imul
pop
and
xchg
fild
cmps
adc
iret
fmul
popf
fcmovne
xor
stos
sbb
stc
sub
mov
xor
xor
mov
inc
fist
jle
pop
shl
pusha
xchg
imul
aas
les
into
xor
jecxz
inc
imul
cmp
pop
jno
push
pop
mov
add
sbb
leave
add
xchg
popa
out
push
inc
fst
popf
retf
and
xchg
push
and
xchg
pop
int
lods
pop
pop
xor
nop
fcomip
imul
jnp
ja
dec
and
mov
call
inc
jl
outs
xchg
jne
pop
test
movs
mov
jmp
mov
inc
clc
or
or
adc
js
mov
lods
das
ins
xchg
pop
int3
scas
sahf
sbb
pop
fild
xor
or
xchg
sbb
popf
repnz
xlat
xchg
mov
or
adc
cmp
pop
fmul
arpl
dec
adc
sub
rcr
xchg
mov
mov
addr16
dec
lds
add
lahf
push
call
dec
retf
test
pop
fwait
out
add
xchg
add
sbb
in
mov
xchg
push
and
ins
xchg
pop
push
nop
mov
sbb
retf
les
xchg
(bad)
xlat
inc
out
or
addr16
jne
xchg
test
imul
and
or
push
lahf
pop
lea
int
outs
cmps
pop
inc
cmps
das
arpl
cmp
rcr
out
popa
pop
cdq
jbe
into
retf
push
cdq
retf
test
xchg
sahf
pop
add
inc
xchg
sbb
sbb
add
lods
aaa
(bad)
ja
dec
and
les
jle
outs
fisubr
or
call
and
arpl
push
jno
fmul
es
adc
test
sbb
dec
dec
adc
mov
xor
aad
add
adc
inc
fisub
popf
xchg
retf
and
xchg
jno
std
loope
sbb
adc
(bad)
test
jo
mov
sbb
rol
lods
loope
jns
xchg
aam
mov
xor
sub
cmp
push
push
xchg
push
push
add
and
dec
shl
or
leave
jp
jne
out
or
or
adc
sub
dec
outs
scas
push
inc
mov
gs
scas
sahf
adc
popa
sti
hlt
sahf
sub
mov
je
pop
mov
cmc
pop
xchg
retf
mov
xchg
xchg
je
fcomp
stos
and
into
pop
test
bound
fild
bound
clc
sbb
sub
inc
jle
pop
fisubr
jl
dec
pop
imul
and
outs
popf
icebp
or
(bad)
js
inc
inc
shl
or
mov
imul
inc
mov
inc
mov
mov
fdivp
lahf
inc
sahf
lea
pop
inc
pop
lds
mov
jl
aad
je
xchg
(bad)
call
test
pusha
nop
shr
iret
and
fwait
cmp
adc
inc
popa
and
sub
sbb
cmc
lds
inc
test
or
jmp
ja
adc
xchg
inc
mov
mov
jno
jg
movs
ss
mov
dec
out
aam
xor
inc
pop
mov
dec
mov
loopne
daa
xlat
fild
mov
sbb
std
retf
stc
cmp
fwait
jp
dec
(bad)
sub
int3
jnp
xor
xchg
sbb
inc
fwait
dec
sub
mov
xlat
pop
fwait
rcr
jns
imul
or
pop
outs
xchg
inc
xchg
das
outs
mov
dec
retf
inc
lods
mov
leave
dec
push
pop
scas
push
xchg
xchg
inc
xchg
or
fst
mov
sbb
nop
lahf
jmp
and
test
scas
xor
dec
loop
iret
imul
jle
data16
mov
popa
out
test
dec
xchg
retf
and
dec
in
and
ja
or
dec
jno
push
dec
xlat
das
add
pop
aaa
dec
fwait
inc
leave
sbb
cwde
push
sbb
test
out
mov
mov
rep
movs
lea
data16
mov
sbb
std
les
pushf
fdiv
fst
and
ror
clc
inc
jmp
jl
pop
pushf
cmp
test
call
(bad)
sbb
fidivr
pop
add
and
jl
add
push
mov
fistp
ins
mov
jo
lods
xchg
add
or
std
popf
pop
mov
inc
leave
fs
(bad)
sub
mov
mov
sub
fbstp
or
scas
mov
leave
mov
cld
dec
pusha
jmp
jns
ror
out
(bad)
cmc
inc
stc
xor
xchg
push
sub
test
fsub
mov
inc
mov
adc
inc
outs
mov
pusha
test
popa
stc
sti
sahf
pop
leave
mov
je
pop
mov
retf
push
mov
xchg
fs
fsubr
xchg
mov
pop
scas
nop
neg
add
add
pop
cli
or
inc
ror
jle
push
adc
jo
dec
sub
mov
fnstcw
fstp
idiv
jno
sti
xor
push
or
pop
rol
add
mov
cdq
sub
pop
ret
fcomp
test
mov
gs
mov
xchg
jmp
xchg
inc
xchg
sbb
xchg
sbb
fild
bound
in
push
and
fmul
jle
inc
fadd
push
push
jmp
and
xchg
retf
push
adc
lahf
push
xchg
sub
jle
mov
dec
lahf
mov
add
popa
fpatan
and
and
inc
mov
mov
fs
nop
fs
aam
scas
push
mov
lods
ror
call
or
pushf
cdq
icebp
mov
jmp
mov
aas
push
fcom
add
ins
push
mov
add
and
pop
(bad)
xor
add
sbb
jbe
push
mov
sub
ins
cmps
addr16
lods
lahf
femms
sub
xlat
popf
and
inc
pop
mov
retf
dec
mov
mov
(bad)
fbstp
mov
or
xchg
sbb
leave
mov
call
pushf
xchg
int3
ja
sub
xor
lea
push
(bad)
fiadd
inc
test
out
sahf
test
push
call
add
mov
xor
les
test
inc
lea
ins
jmp
or
dec
xchg
mov
out
inc
pop
fcom
xchg
retf
arpl
retf
nop
mov
xchg
adc
iret
pop
mov
js
sahf
cld
sbb
ret
stos
fdiv
and
enter
fisub
jle
jle
push
js
or
jmp
and
cmp
popa
inc
dec
fistp
and
adc
xchg
push
mov
in
jno
pop
dec
fst
inc
xchg
mov
outs
dec
sub
out
adc
xor
inc
inc
test
cdq
cdq
retf
cmp
(bad)
lahf
pop
pop
rol
lock
rcl
add
aaa
loope
test
test
fnsave
ror
repz
jl
outs
pushf
ins
push
pop
cmps
mov
leave
inc
rcr
and
or
add
pop
ins
sub
add
mov
loop
popf
push
leave
shl
inc
pop
ficom
retf
inc
test
out
xor
xchg
push
scas
mov
xor
xchg
jecxz
retf
sub
call
xor
xchg
jne
retf
sub
mov
in
jns
pop
inc
aam
cmp
fs
pop
iret
adc
push
outs
xchg
jg
popf
aas
pop
lods
scas
(bad)
pop
inc
and
les
fld
pop
mov
addr16
mov
seta
lahf
ja
sbb
mov
sbb
cld
sbb
ret
inc
bound
cmp
dec
cli
mov
push
fmul
sbb
mov
pop
out
test
push
xchg
ret
or
retf
or
xor
sbb
lods
pusha
jno
push
dec
fsubr
push
xchg
mov
outs
pop
sub
sbb
add
inc
popf
mov
stos
push
mov
lock
pop
xchg
movs
ror
test
ja
mov
push
cmp
repnz
fwait
je
dec
fidiv
and
jmp
and
push
add
and
mov
inc
cmc
and
pusha
or
(bad)
jge
sbb
adc
scas
mov
iret
fstp
leave
dec
add
jbe
ret
in
pushf
retf
cmps
sbb
in
mov
lods
or
scas
xchg
out
sbb
nop
(bad)
jg
mov
in
adc
dec
jmp
jle
fmul
push
dec
jmp
and
shl
pop
dec
out
es
push
mov
xchg
sub
sbb
addr16
cmp
popf
mov
or
dec
cwde
rol
neg
outs
inc
call
aad
inc
(bad)
mov
mov
mov
stos
lds
mov
xchg
mov
push
xor
retf
jecxz
arpl
int
and
test
sbb
mov
push
in
call
cwde
retf
xor
leave
and
pop
adc
xchg
push
mov
mov
dec
mov
adc
aam
and
sbb
pop
push
inc
mov
cmp
cmps
dec
push
xchg
ret
fwait
push
mov
rcl
push
scas
ret
adc
mov
icebp
sbb
movs
sub
ja
push
aas
or
xchg
scas
jnp
add
push
pop
inc
das
fwait
push
push
imul
aas
lods
imul
push
pop
jecxz
ja
adc
add
cmps
imul
xor
test
mov
cmp
inc
pop
stos
pop
retf
dec
call
sbb
fist
mov
inc
scas
mov
retf
hlt
iret
cli
fs
mov
(bad)
dec
and
jecxz
jl
jle
xor
sbb
mov
and
inc
rcl
dec
push
or
sbb
pop
or
lods
adc
add
inc
ins
fisub
mov
jnp
scas
call
sahf
and
mov
jbe
pop
test
sbb
mov
xor
lock
into
push
movs
sbb
sbb
icebp
xchg
mov
cmp
mov
popa
or
push
outs
fwait
push
and
mov
inc
xchg
repz
leave
addr16
imul
mov
adc
xor
mov
or
jmp
imul
pop
mov
inc
sahf
enter
mov
fcomip
ja
dec
test
call
and
and
movs
xor
ja
dec
and
aam
aad
ret
sub
pop
inc
addr16
dec
add
call
aas
fistp
repz
shl
dec
ret
sbb
mov
jae
popf
or
aas
add
and
(bad)
xchg
cmp
sti
jb
ins
pop
pop
mov
dec
xchg
mov
fiadd
icebp
sub
inc
mov
xchg
mov
leave
stc
loope
dec
arpl
int
and
cli
add
daa
push
pop
out
mov
enter
and
inc
retf
pop
or
test
jo
fld
mov
mov
inc
cmp
retf
ror
mov
jnp
retf
xchg
mov
mov
xchg
sbb
mov
test
add
test
jmp
xor
addr16
imul
popa
add
es
push
or
mov
mov
jmp
add
aad
or
or
jo
ret
movs
das
pop
test
sahf
xor
dec
ret
sub
(bad)
pop
xchg
out
cmps
inc
xchg
nop
je
in
cmc
push
xchg
jnp
mov
sbb
xchg
pop
cmp
mov
(bad)
push
jge
test
sub
sub
sbb
inc
ror
and
push
pop
push
icebp
lds
ins
int3
stc
aas
mov
jbe
jno
fidiv
jge
adc
sub
jns
or
add
lods
mov
loop
popf
add
inc
pop
pushf
push
retf
into
retf
inc
out
cmps
sbb
hlt
fbstp
cmp
nop
mov
xor
addr16
sub
cmp
test
push
popf
or
cmp
pop
fs
xchg
jns
mov
mov
rcr
or
icebp
jp
add
loopne
sbb
xor
add
aam
jle
lods
stos
push
cs
loop
sahf
cmp
jle
mov
fstp
mov
mov
popf
loop
push
rol
mov
(bad)
lods
rcl
movs
add
pop
add
test
lods
test
or
fdivr
std
push
call
pushf
cmp
cld
dec
cmp
mov
mov
and
movs
sar
push
inc
(bad)
or
inc
or
xchg
pop
mov
retf
sbb
mov
pusha
xchg
scas
fwait
sub
jno
retf
call
mov
pop
mov
mov
xor
xchg
dec
mov
mov
pop
scas
cmps
xchg
sbb
imul
xor
addr16
or
mov
jnp
inc
jle
inc
fld
push
arpl
(bad)
xchg
enter
sbb
addr16
pop
dec
mov
xor
inc
mov
sahf
jge
cmps
or
popf
mov
pop
out
ficomp
mul
pop
sub
cmc
pop
jmp
mov
int
test
nop
dec
test
xchg
mov
loope
test
stos
movs
xor
ja
push
and
(bad)
(bad)
cmc
jnp
sbb
data16
jbe
dec
sbb
call
and
inc
mov
daa
mov
retf
inc
outs
pushf
addr16
rcl
push
test
pop
popa
int3
test
add
mov
dec
jo
popf
jbe
mov
push
xchg
xchg
pop
add
fdivr
call
xchg
neg
or
adc
mov
icebp
ja
xor
dec
repnz
jnp
adc
pop
inc
jae
dec
pop
push
in
nop
xchg
lahf
add
fisub
xchg
(bad)
js
gs
fistp
xor
or
jae
mov
mov
or
stos
add
fnsave
outs
outs
push
stos
pop
repz
cmc
dec
xchg
mov
fdivr
fs
fbld
xchg
jo
mov
retf
sti
gs
mov
jp
dec
(bad)
pop
and
loopne
jl
dec
xchg
or
pop
test
cmps
mov
jmp
cwde
jmp
cwde
repz
inc
inc
loope
xor
pop
scas
sub
inc
outs
and
aas
inc
jmp
cmps
cmp
fbld
repnz
retf
dec
mov
stos
pop
sub
inc
test
call
inc
std
leave
nop
loope
pop
arpl
sub
xor
cli
pop
jg
push
ss
jle
dec
es
cdq
xchg
xchg
sub
aam
lahf
aad
cdq
sar
imul
pop
xchg
pop
lea
sbb
movs
or
adc
xor
lahf
cmp
push
pop
movs
push
xchg
(bad)
retf
nop
jmp
or
add
mov
jne
call
icebp
fldcw
mov
ss
hlt
adc
sub
mov
jnp
or
adc
in
cmp
mov
retf
sbb
js
pop
inc
aam
xor
add
pop
cwde
sub
pop
outs
mov
inc
adc
outs
inc
push
popa
ret
fstp
fld
pop
mov
xchg
mov
xchg
mov
movs
ja
pop
test
call
sbb
test
test
xor
and
enter
fstp
jp
fsubr
inc
popa
dec
dec
out
xchg
xchg
shl
ret
jbe
pop
ret
popa
adc
mov
mov
cdq
dec
pop
xchg
adc
stos
mov
push
sbb
cld
add
xchg
sbb
sbb
xchg
jp
mov
loopne
mov
xor
rol
add
mov
and
fcomi
lods
(bad)
dec
ins
pushf
movs
je
pop
fisttp
ss
not
sbb
sub
mov
test
and
jnp
cld
xor
or
xor
or
test
jb
mov
or
outs
getsec
jno
out
popf
inc
mov
pop
lea
mov
ins
fwait
retf
nop
xchg
pop
add
fld
test
sbb
xchg
mov
xor
xchg
sahf
fdiv
repz
cmp
cmp
mov
jnp
daa
jle
push
fisttp
inc
jg
dec
sub
test
xchg
or
fsub
cwde
mov
pop
inc
jmp
pop
(bad)
cmp
jnp
sub
mov
or
pop
fwait
sti
add
jmp
les
push
stos
pop
pause
fisttp
enter
mov
cmps
or
pop
test
fst
mov
xlat
retf
mov
mov
xlat
push
and
pop
mov
sub
jno
push
mov
cmps
mov
mov
and
addr16
and
or
sbb
pop
mov
xlat
push
ins
and
adc
lods
movs
adc
xor
aad
sbb
pushaw
pop
xchg
scas
fild
enter
mov
sub
fild
test
int
fst
mov
loope
mov
jmp
(bad)
call
jmp
inc
fistp
jle
push
or
sbb
mov
jmp
jne
ficomp
pop
push
leave
adc
push
xchg
aas
jno
lods
movs
add
pop
(bad)
cld
popf
pop
test
jnp
jg
pop
mov
pop
mov
adc
je
hlt
fcom
fwait
mov
inc
mov
fild
arpl
aam
nop
addr16
or
push
or
or
push
jg
dec
sub
popf
test
dec
lahf
xchg
or
idiv
push
inc
ret
or
push
loop
popf
add
pop
outs
mov
xchg
aas
pop
mov
pop
shl
sbb
mov
pop
gs
cdq
jle
ret
test
and
idiv
inc
mov
sahf
sbb
xchg
or
cmp
lahf
cmp
addr16
aas
aaa
fadd
popa
add
shl
pusha
test
jno
mov
leave
ja
fsub
ret
jg
dec
sti
xor
pop
adc
xchg
inc
xchg
sub
pusha
jno
jp
cmps
or
mov
or
rcr
leave
push
pop
mov
cmc
inc
call
xchg
rcr
test
fisttp
test
int
call
add
retf
(bad)
cmp
mov
xor
addr16
and
(bad)
out
imul
jg
pop
(bad)
inc
mov
aaa
pop
out
mov
push
popf
in
and
dec
dec
and
push
mov
scas
sbb
jg
movs
cmp
mov
dec
in
call
fldenv
pop
call
retf
xchg
inc
xchg
xchg
fcom
mov
sbb
mov
test
mov
scas
ds
in
fst
pop
jo
dec
stos
aas
inc
push
mov
test
and
push
pushf
shl
test
js
or
sbb
das
mov
fild
cmps
addr16
lods
stos
cmp
ss
in
popf
add
ret
push
fldenv
pop
xchg
add
cmp
nop
jno
fcmovnbe
test
jecxz
mov
call
adc
retf
sti
pop
pusha
mov
jp
addr16
sbb
shr
cmp
and
xchg
or
fwait
dec
add
movs
xchg
shl
xor
or
or
add
cmp
aad
ins
xchg
mov
jge
lods
mov
loop
popf
add
pop
pop
lahf
jp
ror
cmps
enter
jmp
fld
mov
jb
mov
leave
xchg
jmp
mov
shl
and
(bad)
lock
jl
push
xor
test
call
popf
mov
lahf
clc
js
push
inc
(bad)
xor
add
pusha
jmp
lea
movs
cmp
mov
cmp
fist
fnstcw
pop
scas
pop
or
dec
nop
xchg
fs
mov
xor
shl
fld
pop
pop
fistp
jge
mov
cmps
cmp
fdivr
enter
jo
cmp
cmp
sbb
cdq
sbb
stc
jnp
dec
int
pop
popa
inc
call
gs
pop
mov
sbb
push
inc
lahf
das
pop
mov
sub
inc
mov
pop
inc
mov
mov
mov
pop
out
ret
lds
(bad)
rol
aas
test
arpl
fcmovne
nop
loope
push
leave
pop
enter
jmp
and
or
mov
mov
iret
dec
aas
hlt
sbb
addr16
jne
cmps
and
pusha
adc
lods
inc
lea
cmps
imul
add
mov
popa
in
jmp
push
leave
ins
pop
pop
mov
dec
or
pop
sub
fild
xchg
jo
mov
and
xchg
jecxz
(bad)
xor
pop
ror
popa
sub
sbb
cs
test
lods
dec
and
outs
cdq
(bad)
or
hlt
jns
inc
inc
mov
cmp
or
pop
mov
sbb
jae
xchg
pop
out
scas
pushf
or
popa
shr
pop
sbb
jp
mov
jge
retf
xchg
in
adc
call
mov
jmp
inc
rcr
jecxz
sub
dec
mov
aas
or
in
fst
cmp
dec
stos
imul
dec
or
mov
mov
jmp
add
retf
je
add
pop
jno
dec
dec
aam
add
pop
sbb
int3
add
xchg
pop
leave
pop
inc
inc
fst
std
dec
cdq
les
and
fisttp
mov
push
mov
mov
mov
mov
jp
dec
ror
and
cld
imul
jg
jle
ss
jno
movs
test
inc
cwde
neg
inc
clc
and
jne
gs
imul
xor
mov
add
jno
xlat
popf
aaa
mov
push
fldcw
pop
mov
retf
inc
mov
mov
mov
fistp
test
int
movs
push
dec
scas
mov
retf
(bad)
outs
pusha
scas
mov
add
mov
in
jl
inc
xchg
sbb
pop
or
mov
mov
and
pop
shl
xor
or
or
inc
or
xchg
adc
cmp
sbb
mov
js
lods
(bad)
sub
inc
call
fcom
retf
inc
mov
mov
sub
fmul
sub
sbb
leave
lods
loope
imul
jns
rcl
and
(bad)
call
js
xchg
sub
loopne
push
jne
mov
push
ror
sbb
or
js
adc
cmp
pop
ins
(bad)
jae
fadd
data16
loope
or
jno
(bad)
sahf
aaa
mov
pop
test
xor
push
into
fadd
lahf
fmul
cmp
sbb
fild
arpl
sbb
ret
imul
jg
jp
cmp
inc
mov
daa
pop
out
xchg
xchg
fwait
shl
mov
inc
out
punpckhwd
sbb
inc
outs
mov
gs
scas
adc
adc
cmp
mov
jg
cmps
push
(bad)
retf
pop
test
sahf
inc
xchg
loope
aaa
fcmovu
mov
xchg
sbb
rcr
outs
nop
xchg
cld
sbb
xor
shr
sahf
xor
ja
or
push
fadd
popa
sub
shr
and
push
or
mov
mov
jmp
jno
(bad)
xor
pop
or
sbb
pop
inc
cmp
popf
scas
xchg
retf
lahf
cmp
mov
inc
push
pop
mov
(bad)
loopne
cdq
push
xchg
mov
lods
add
iret
pop
sahf
sbb
xor
or
test
jmp
and
mov
push
(bad)
sbb
sahf
push
sub
sub
or
fisub
jno
int
sbb
das
mov
fild
mov
inc
xchg
scas
sti
or
dec
fcomi
lahf
inc
mov
pop
ror
(bad)
cmc
jge
retf
xchg
out
adc
xchg
add
sahf
push
jo
xchg
mov
retf
mov
cs
cld
out
jnp
pop
jle
inc
fbld
inc
jo
push
push
lahf
lahf
mov
pop
ror
or
cmp
adc
or
lods
push
int3
add
pop
ins
(bad)
outs
or
aas
jae
lods
test
out
popf
pop
test
jg
gs
pop
sub
cmc
inc
popf
enter
mov
fild
test
int
mov
xchg
sbb
iret
retf
stc
jp
test
jp
pop
sar
and
les
cmp
imul
cmps
mov
mov
and
jg
repz
sar
inc
or
xor
or
arpl
jg
fmul
mov
std
or
dec
loope
popf
inc
mov
pop
mul
pop
fmul
test
inc
loopne
out
fisubr
cld
adc
push
xchg
push
seto
add
xor
pop
into
or
cmp
(bad)
retf
xor
jle
or
lods
dec
sub
nop
mov
pop
fwait
ror
hlt
jns
popa
inc
loop
cvtps2pd
sbb
adc
outs
inc
lahf
aas
bound
push
dec
cli
in
sahf
es
sbb
jge
pop
mov
pop
mov
xor
ss
xchg
xor
jg
cwde
cmps
into
sub
scas
sbb
iret
and
xor
pop
enter
int3
mov
push
inc
jg
pop
fisubr
push
dec
out
ret
mov
jg
mov
mov
inc
inc
into
xor
jl
cmp
inc
outs
or
aas
outs
in
movs
or
hlt
retf
sahf
sbb
inc
pop
test
xchg
cmc
push
retf
mov
add
fdiv
fcmovne
or
sbb
nop
xchg
mov
add
xor
scas
fwait
xor
sbb
mov
push
retf
aaa
jle
adc
je
dec
adc
lahf
cmp
scas
pop
cwde
in
or
fidivr
popa
inc
out
xor
add
pusha
lods
pop
xchg
add
outs
fsubr
mov
push
mov
clc
sub
cmps
sahf
dec
test
dec
test
ret
mov
cld
je
stc
fld
mov
cmp
xchg
hlt
sbb
iret
xchg
pushf
mov
adc
cmp
mov
push
ror
fbstp
jle
dec
and
xchg
mov
jg
int
call
xor
push
iret
add
pop
outs
mov
pop
xchg
scas
pushf
sbb
dec
(bad)
and
inc
add
pop
xchg
inc
xchg
mov
fstp
mov
sbb
pushf
popf
sbb
stc
xchg
mov
icebp
and
cli
mov
sub
pushw
dec
ds
mov
xchg
sub
repnz
(bad)
js
jno
ret
xor
jo
cmp
jae
test
test
inc
stos
scas
mov
(bad)
lahf
push
mov
push
pop
fwait
jle
test
jp
retf
xchg
stos
je
in
fnsave
mov
sbb
add
test
mov
in
or
add
fnstsw
or
test
pop
pop
jmp
and
test
js
push
inc
jecxz
sub
fs
pop
mov
call
inc
aad
inc
test
dec
fsubr
lahf
pop
sahf
lea
pop
jle
test
mov
xchg
inc
pushf
sahf
je
mov
add
jle
mov
sar
mov
outs
nop
mov
movs
(bad)
dec
jge
mov
leave
pop
out
aas
xor
test
push
rol
popa
add
sub
xchg
jns
sar
xchg
or
addr16
iret
xor
pusha
adc
mov
inc
jno
jg
stos
aas
pop
popf
mov
cmp
mov
mov
mov
mov
je
fcmovnb
movs
and
pop
xchg
(bad)
sbb
ret
adc
mov
fild
cmp
sbb
xchg
fist
sub
adc
add
into
xor
in
or
fisub
push
pop
out
xor
add
nop
add
pop
mov
add
adc
cdq
fild
neg
outs
inc
lahf
pop
cdq
shl
cmps
aad
inc
(bad)
xchg
je
cmc
ret
lea
test
leave
lock
inc
stc
pushf
xchg
fisttp
sub
pop
cmps
adc
dec
cli
xchg
call
xor
xor
pop
jns
cmp
test
or
lock
pop
mov
and
sbb
test
xor
test
jmp
mul
pop
ficomp
movs
cmc
inc
cdq
enter
xchg
fcomip
and
jne
or
mov
leave
movs
(bad)
cmp
lds
cmp
dec
fadd
lock
out
jl
pop
xchg
xor
lods
dec
pop
jns
cmp
ror
or
mov
push
or
xor
jo
imul
ins
sar
aam
test
(bad)
cmc
popf
pop
sahf
rol
inc
pop
lds
fdiv
pop
call
xchg
je
cmc
fadd
mov
jle
mov
or
lods
xor
pop
into
dec
and
int3
(bad)
retf
push
sti
xor
outs
fisttp
push
imul
and
outs
fwait
loope
mov
inc
out
xor
add
sbb
imul
inc
mov
gs
scas
test
inc
or
cmp
mov
pop
pop
mov
pop
cmps
retf
pushf
je
cmps
je
test
xchg
adc
sar
mov
lods
fild
inc
in
fidivr
cs
mov
push
into
add
pop
fisttp
push
pop
jmp
pop
jmp
inc
inc
cli
xor
or
pop
iret
add
adc
jg
mov
mov
stos
lahf
xor
push
pop
lods
pop
xchg
push
nop
mov
(bad)
xor
inc
xchg
sbb
mov
cmp
xchg
xchg
lods
aaa
ficomp
and
int3
mov
add
ins
push
jns
movs
mov
pop
xchg
loop
rcl
jb
dec
out
xor
inc
adc
mov
add
dec
lea
add
mov
sub
retf
sub
pop
neg
push
inc
mov
xchg
cmp
cmps
je
mov
cmps
xor
pop
xchg
scas
rcr
ret
adc
mov
fild
cmp
sbb
test
sub
jno
daa
mov
imul
aas
imul
std
or
loopne
dec
inc
pop
lds
pop
adc
mov
pop
jno
outs
pop
stos
aas
add
mov
sbb
dec
fwait
xlat
sbb
bound
jle
scas
cmc
ds
mov
push
iret
ret
mov
clc
mov
pop
nop
ficom
scas
fistp
sub
pop
mov
aas
inc
int3
xchg
stos
push
xchg
popa
jbe
les
das
mov
lahf
mov
fimul
jmp
mov
jp
popa
add
xor
jl
adc
shl
call
lods
mov
loop
lahf
aaa
mov
jbe
stos
pop
repz
dec
popf
les
xor
lds
lea
pop
nop
cmps
scas
sbb
iret
xor
fwait
xor
fmul
jg
pop
fnstcw
push
pop
in
mov
dec
cwde
std
or
into
jns
jno
out
xor
pusha
or
add
jnp
ret
fnstsw
push
lea
dec
(bad)
jmp
pop
test
ret
cmc
popa
call
fwait
je
fcmovnu
nop
add
iret
daa
mov
inc
nop
lahf
lea
adc
xchg
mov
xor
and
fmul
jle
outs
fstp
pop
pop
jmp
fild
clc
aas
mov
jbe
jno
int
sbb
sbb
mov
jns
lods
mov
inc
das
dec
shr
neg
cmp
retf
xchg
test
(bad)
mov
sbb
xor
cmps
ffreep
dec
bound
out
xor
psubd
jle
jle
xor
movs
dec
push
pop
call
and
jg
into
or
cmp
cs
and
jg
popf
pop
inc
sar
inc
mov
mov
fsubr
sbb
inc
jbe
popf
dec
test
fs
xchg
je
in
mov
mov
sbb
xor
ffreep
xor
lods
xor
pop
jmp
and
mov
push
frstor
jle
outs
fadd
push
imul
and
test
jmp
sub
mov
jnp
fsubr
xchg
aas
inc
xchg
scas
imul
cmps
lahf
push
mov
inc
scas
pop
mov
xchg
je
mov
ret
fwait
inc
xchg
mov
and
pop
pop
nop
ret
scas
pop
pop
fisttp
jge
lods
sub
pop
stos
cmp
adc
xchg
int3
push
pushf
pop
popa
and
cmp
and
push
add
call
adc
(bad)
shl
inc
pop
clc
xor
or
mov
add
pop
sar
add
dec
dec
call
not
inc
xchg
dec
popf
mov
dec
pushf
les
daa
rcr
mov
int
sahf
push
jg
mov
sbb
idiv
mov
inc
and
fadd
into
push
out
and
or
lods
dec
cmp
test
mov
ror
inc
push
inc
mov
mov
add
pop
outs
(bad)
jg
fdivr
outs
call
and
fistp
div
pop
or
cmc
push
mov
mov
cmp
fsubr
fcmovne
adc
sbb
nop
stos
test
sbb
call
xor
pop
lds
and
int3
pop
push
repz
jg
outs
fnstcw
dec
mov
xchg
mov
outs
cdq
ror
lock
inc
inc
out
cmp
pop
xchg
add
dec
outs
cwde
outs
inc
xchg
aas
push
scas
scas
mov
iret
stos
sahf
add
mov
jb
cdq
jle
(bad)
cmc
imul
fdiv
lods
test
or
hlt
sbb
fild
arpl
cld
xor
pop
cli
mov
push
retf
aaa
jle
pop
push
pop
in
mov
in
cwde
hlt
or
cmp
cmp
arpl
jg
fcomp
mov
cld
or
dec
retf
inc
mov
add
outs
adc
je
in
fdiv
adc
into
dec
test
inc
nop
xchg
stos
sbb
xor
mov
aam
stc
and
mov
push
iret
cmp
dec
fsubr
jno
dec
push
dec
in
(bad)
mov
dec
cwde
mov
into
jns
popa
inc
cmps
xor
or
and
pop
mov
test
inc
(bad)
aas
add
dec
push
dec
popf
in
adc
or
pop
add
outs
mov
mov
(bad)
xchg
je
in
ret
mov
cli
mov
pop
test
jl
lds
(bad)
fild
sub
pop
stos
ds
adc
xchg
leave
push
pushf
cmp
dec
ror
and
stos
mov
dec
sbb
(bad)
dec
popa
pop
jmp
cmp
inc
xchg
add
pop
mov
add
cmovg
xchg
inc
neg
inc
inc
cwde
pop
cdq
xor
in
mov
push
stc
ret
mov
stc
mov
add
(bad)
cmps
pop
add
cwde
cmc
fild
sub
or
xchg
mov
popf
xor
sbb
pop
jns
mov
ret
and
repnz
shl
push
pop
shl
adc
mov
add
pop
mov
setne
dec
xchg
retf
add
imul
push
inc
fdivr
mov
dec
pushf
les
daa
in
fdivr
adc
into
dec
mov
push
nop
enter
fistp
out
mov
xor
dec
cli
xchg
not
pop
popa
jns
les
push
jns
mov
pop
test
push
inc
pop
mov
jae
adc
lods
inc
mov
test
xor
(bad)
sbb
and
xlat
popf
aaa
mov
jbe
ins
bound
jle
mov
xchg
je
mov
and
xchg
pop
pop
nop
mov
sbb
les
fwait
je
pop
fcom
xor
retf
jmp
push
jns
mov
pop
fmul
imul
xor
push
or
sbb
add
pop
ins
mov
jb
lods
sahf
sub
fist
repnz
jbe
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
push
aaa
stc
repnz
lods
inc
jecxz
fidivr
cs
cld
fist
xor
pop
ins
push
mov
jns
mov
mov
jmp
jno
int
sbb
das
mov
test
xor
sbb
and
fist
repnz
jbe
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
push
aaa
stc
repnz
lods
inc
jecxz
fidivr
cs
cld
fist
xor
pop
ins
push
mov
jns
mov
mov
test
pop
pop
mov
jl
inc
(bad)
imul
repz
loope
pop
dec
and
mov
pop
(bad)
xchg
sbb
add
cmp
ss
fcomp
or
mov
in
loope
scas
push
mov
out
xchg
push
aaa
stc
repnz
lods
inc
jecxz
fidivr
cs
fist
aaa
jo
dec
stos
pop
pop
push
mov
jns
mov
mov
jmp
jno
int
sbb
das
mov
test
xor
jne
and
fist
repnz
je
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
push
aaa
stc
repnz
mov
ds
cld
(bad)
xor
pop
ins
push
mov
jns
mov
mov
jmp
jno
int
sbb
das
mov
test
xor
pop
aaa
and
fst
aam
jbe
stos
push
repz
dec
xchg
les
and
rol
test
ja
mov
push
aaa
stc
repnz
lods
inc
jecxz
fidivr
cs
cld
fist
ss
dec
stos
pop
ins
push
mov
jns
mov
mov
jmp
jno
int
sbb
das
mov
test
xor
sbb
and
xchg
aaa
mov
jae
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
push
aaa
stc
repnz
mov
jecxz
fidivr
fadd
xor
pop
ins
push
mov
jns
mov
mov
jmp
jno
into
xor
das
mov
test
xor
(bad)
cmp
and
(bad)
xchg
aaa
mov
jbe
stos
pop
repz
dec
xchg
les
and
rol
scas
sar
outs
je
mov
push
aaa
icebp
repnz
lods
inc
loopne
fidivr
cs
cld
fist
xor
dec
stos
sbb
push
mov
ins
lahf
mov
mov
jmp
jne
int
sbb
das
mov
test
xor
sbb
and
fist
repnz
jg
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
push
aaa
stc
repnz
dec
ins
lahf
cmps
push
icebp
jbe
cmp
fist
xor
pop
ins
push
std
dec
push
or
mov
in
cwde
cli
or
xor
xor
cmp
mov
cmp
popf
mov
dec
out
hlt
test
ret
push
in
pop
jbe
pop
repz
dec
test
and
xchg
mov
aas
test
jae
mov
push
xor
fimul
lods
inc
out
pop
clc
ds
and
pop
dec
push
mov
jns
mov
mov
jmp
jns
int
sub
imul
push
mov
test
inc
movs
das
jnp
cmps
test
out
fist
repnz
outs
push
stos
pop
repz
dec
xchg
les
daa
sti
rol
stos
sar
push
aaa
stc
repnz
dec
ins
fwait
test
cmp
ds
cld
rol
xor
pop
ins
push
mov
jns
mov
mov
jmp
jno
int
sbb
das
mov
test
xor
pop
aaa
and
fist
les
push
stos
inc
repz
dec
mov
mov
test
jecxz
or
add
loope
cmp
pop
ins
mov
adc
ds
rcl
jo
push
stos
ss
push
mov
xchg
ja
int3
das
mov
xor
xor
das
mov
mov
jge
mov
jl
(bad)
xchg
adc
sti
add
stos
inc
repz
inc
mov
and
rol
test
aas
mov
popa
mov
stos
push
aaa
xlat
repnz
retf
ins
mov
scas
adc
cs
aam
cdq
pop
jne
data16
or
movs
inc
ds
lahf
cwde
mov
inc
jmp
pop
xor
xor
add
and
xor
test
cdq
(bad)
xchg
adc
pop
push
stos
inc
repz
(bad)
xor
mov
pop
xchg
(bad)
mov
jecxz
mov
rol
mov
add
loope
mov
repz
fwait
mov
retf
or
ds
cld
lods
inc
call
stos
jno
push
mov
mov
mov
jmp
push
xor
xor
jo
adc
push
fs
jg
mov
arpl
icebp
xchg
xor
gs
stos
inc
pause
leave
inc
mov
mov
test
jecxz
xchg
xchg
lods
mov
repnz
repz
outs
ins
mov
rcr
cs
cld
(bad)
inc
in
jo
push
stos
or
pop
mov
stos
mov
ja
fbld
movs
(bad)
jbe
imul
add
cs
inc
pusha
test
xor
cmp
mov
dec
div
xchg
aaa
mov
dec
push
mov
ins
mov
test
fcmovnbe
mov
movs
add
movs
ins
push
lods
call
repz
mov
das
cs
jecxz
les
jo
push
stos
ins
outs
jl
inc
ds
lahf
retf
scas
nop
sub
iret
ja
dec
add
je
xor
sbb
popa
add
ds
jp
mov
pop
mov
jae
into
xchg
daa
mov
dec
push
mov
jns
ret
in
jno
sti
rol
test
ja
mov
push
aas
xor
cld
repz
ins
fwait
test
cmp
call
push
pop
stos
pop
dec
push
xchg
push
pushf
mov
mov
jmp
pop
xor
pop
sbb
sbb
js
test
xor
pushf
sbb
and
xor
push
stos
jbe
mov
dec
fwait
(bad)
xchg
fs
popa
and
rol
mov
ja
mov
push
xor
repz
ins
mov
ds
cld
retf
cs
test
push
cwde
inc
ds
cmps
lods
mov
jmp
inc
cmp
xor
arpl
pop
fbld
mov
inc
popf
mov
pop
out
les
repnz
repz
xchg
dec
in
popa
and
ror
(bad)
lods
shl
outs
jno
mov
push
and
repnz
leave
test
dec
ficom
cs
fist
daa
je
dec
stos
sbb
push
sti
inc
sub
lahf
mov
mov
clc
(bad)
das
mov
jbe
inc
xor
pop
pop
jae
add
jns
test
xor
xchg
xor
dec
in
ficom
loop
add
repz
dec
add
jno
cli
ror
(bad)
test
push
xchg
repnz
retf
ins
cwde
mov
push
sub
cli
cld
iret
inc
jmp
pop
push
mov
dec
test
aad
jmp
jno
ret
and
jo
adc
fsub
test
xor
pop
aaa
cmp
scas
xchg
daa
mov
add
repz
(bad)
outs
loope
cmp
xchg
sbb
inc
movs
stos
fcmovb
das
mov
pop
mov
cmc
push
daa
loope
stos
cld
(bad)
cmp
inc
into
jp
dec
cs
div
inc
jo
push
stos
xor
inc
popa
lahf
popf
call
leave
or
call
cmp
add
pop
cli
sbb
xor
in
mov
dec
retf
daa
mov
push
push
mov
outs
loope
cmp
xchg
sbb
sbb
stos
fcmovb
das
mov
add
xchg
cmc
push
daa
loope
repz
cmp
inc
xchg
pop
sti
dec
cs
scas
push
int
jo
push
stos
push
ds
lahf
retf
dec
cs
ja
sbb
mov
imul
add
pop
neg
pusha
mov
pop
in
mov
jl
scas
xchg
daa
mov
push
push
mov
arpl
les
or
ja
cmps
fcmovb
das
mov
push
test
repnz
cld
fidivr
ins
mov
dec
cs
call
push
push
stos
es
jle
inc
ds
lahf
mov
jmp
imul
add
xor
popa
pusha
mov
pop
xchg
mov
dec
(bad)
aad
daa
mov
jl
mov
data16
les
push
not
xchg
sbb
push
das
mov
jo
pushf
(bad)
push
daa
loope
xchg
fild
mov
xor
cs
shl
cmp
push
stos
adc
test
popa
lahf
mov
iret
ja
jmp
xor
pop
xor
add
popa
pusha
mov
pop
xchg
mov
ins
ret
daa
mov
push
push
mov
addr16
cmp
xchg
sbb
push
movs
mov
outs
add
loope
clc
retf
ins
mov
sbb
cs
shl
aas
jo
push
stos
adc
ds
lahf
mov
iret
ja
out
aas
or
pop
sub
add
pop
out
sbb
xor
in
mov
dec
fisubr
inc
les
mov
jnp
les
adc
push
xchg
mov
outs
add
or
in
ret
inc
ins
mov
xor
cs
rol
aas
jo
push
stos
adc
test
popa
lahf
cmps
lods
mov
cs
ja
loop
test
call
add
sbb
xor
in
mov
dec
fcmovnbe
xchg
daa
mov
jl
mov
jg
les
pop
(bad)
rcl
fcmovb
das
mov
add
loope
out
retf
ins
mov
dec
cs
rol
sbb
push
mov
inc
ds
lahf
mov
iret
ja
aad
cwde
mov
imul
add
xor
sbb
xor
in
mov
pop
(bad)
scas
xchg
daa
mov
jl
mov
jb
les
jge
add
mov
add
mov
repnz
cld
retf
push
ins
mov
daa
cs
cld
mov
push
dec
stos
sbb
cld
inc
ds
lahf
sub
enter
jbe
imul
add
add
pop
pusha
mov
mov
jne
mov
jae
lods
xchg
and
outs
push
mov
inc
mov
xchg
cmps
jb
in
xchg
add
pop
xchg
xor
push
and
repnz
std
push
ins
mov
daa
cs
cld
lods
jns
sub
sbb
jne
pop
xchg
inc
cmp
mov
test
cs
and
xor
xor
imul
mov
test
pop
std
(bad)
xchg
and
outs
push
mov
pop
mov
xchg
or
rcl
popf
mov
sub
pushf
push
and
repnz
mov
daa
cs
cld
repz
cli
sub
sbb
xor
xchg
inc
cmp
adc
jmp
ja
sti
xor
imul
mov
test
jae
(bad)
xchg
and
push
scas
pop
repz
pop
loop
xchg
pusha
in
jb
mov
add
fld
aas
mov
mov
adc
jecxz
jo
mov
clc
dec
sub
jns
cmp
inc
test
inc
pop
jne
test
arpl
mov
cdq
(bad)
jne
jge
mov
aas
fwait
or
mov
jae
mov
dec
out
fist
aam
pop
push
mov
dec
xchg
int3
xchg
fs
jno
sti
ror
(bad)
lods
sar
inc
ja
mov
push
aas
loope
mov
loop
ins
fwait
mov
ds
cld
bnd
inc
jo
dec
stos
sbb
push
mov
jns
mov
mov
jmp
jbe
jno
int
pop
jo
sbb
inc
pusha
test
xor
sbb
or
pop
mov
jo
ins
jbe
stos
pop
pause
lock
xchg
lahf
push
loopne
jno
icebp
rol
stos
shl
jae
movs
cld
push
aaa
xor
(bad)
dec
ins
xchg
lods
inc
into
je
xor
push
call
stos
cmp
cwde
dec
daa
pop
fwait
mov
mov
jmp
imul
add
das
mov
mov
jb
mov
jl
fist
repnz
pusha
pop
test
dec
mov
xchg
jno
std
ror
xchg
cwde
sar
test
aas
stc
repnz
repnz
outs
mov
inc
call
ds
cld
std
push
jmp
pop
push
mov
cs
mov
mov
int3
cld
sbb
xor
xor
das
xchg
das
fistp
stos
cmp
mov
dec
in
leave
cdq
xor
add
stos
pop
repz
dec
xchg
les
cmp
rcl
(bad)
test
pop
mov
loope
xchg
(bad)
dec
ins
fwait
lods
inc
lds
es
cmc
stc
push
out
xor
outs
sbb
push
mov
popa
lahf
test
jmp
jno
in
push
push
add
xchg
sub
pop
fild
test
xor
sbb
sub
rcl
repnz
jbe
mov
xor
mov
std
rol
mov
bound
stc
repnz
mov
shr
das
cs
(bad)
fist
xor
xor
lea
add
fild
shr
mov
jae
add
fst
sbb
das
mov
test
and
mov
sbb
dec
out
fist
fld
push
xchg
cmps
repnz
in
push
and
xlat
mov
mov
ja
mov
push
xor
loope
cld
clc
ins
ins
xchg
mov
pop
fidivr
cs
cld
(bad)
jns
xor
xor
inc
cs
call
jmp
jno
int
pop
jbe
adc
dec
pusha
cmps
outs
sbb
cmp
mov
arpl
fcom
lock
jbe
stos
pop
repz
fldcw
mov
mov
fcmovnu
test
jecxz
or
push
test
fadd
nop
mov
neg
ss
cli
cld
call
push
dec
stos
ss
jo
inc
ss
stos
mov
outs
jmp
pop
cmp
add
pop
fild
mov
jl
mov
dec
fstp
xchg
aaa
mov
push
push
nop
push
scas
loopne
mov
xchg
jno
jmp
add
bound
pop
ja
mov
push
cmp
repnz
popf
mov
ds
cld
icebp
inc
in
aas
ja
cmp
dec
sbb
mov
mov
std
in
das
mov
add
add
adc
sbb
jg
pushf
cmp
popf
mov
ins
jmp
repnz
jp
stos
pop
repz
dec
xchg
xor
push
xor
ins
or
jle
nop
lock
fcomip
dec
ins
fwait
lods
inc
into
jp
sbb
or
clc
std
jbe
sub
pop
ins
push
cwde
inc
sub
test
cs
pop
sar
or
xor
and
inc
push
sbb
das
int3
add
imul
xor
mov
jmp
repnz
pusha
push
lods
jle
sahf
loopne
add
je
xchg
jno
std
ror
scas
call
mov
repnz
retf
imul
and
cli
cld
fist
es
pop
mov
inc
sub
mov
mov
jmp
gs
xor
jo
adc
outs
xchg
xchg
cmp
mov
sbb
and
int3
xchg
cmp
inc
push
cmps
jno
mov
dec
xchg
les
add
jecxz
xchg
outs
pop
test
hlt
mov
repz
jl
lods
inc
jecxz
fsubr
aad
enter
popa
lods
pop
ins
push
mov
jge
sahf
mov
pop
jmp
jno
out
sbb
lods
sub
mov
movs
cmp
cmps
lea
das
and
(bad)
xchg
cmp
icebp
jb
ins
jbe
mov
dec
xchg
les
and
rol
(bad)
mov
mov
push
xor
ins
lahf
pop
pop
fidivr
fist
ss
inc
scas
pop
ins
push
mov
push
call
arpl
cli
or
aaa
int
sbb
sub
cmps
ja
movs
cmp
mov
dec
out
fcom
repnz
je
stos
inc
div
adc
rol
(bad)
scas
sar
adc
(bad)
dec
ins
lahf
test
cmp
fist
aaa
jo
xor
inc
sub
fwait
mov
mov
out
cli
das
mov
jbe
pop
ss
sbb
sub
mov
ja
mov
dec
out
fist
aam
jno
mov
dec
xchg
les
and
rcl
(bad)
mov
adc
iret
test
aam
jecxz
fidivr
fist
aaa
jo
jp
pop
ins
push
lea
push
call
addr16
cli
or
xor
add
pop
fild
mov
ja
mov
dec
out
fcom
repnz
jo
cmps
push
hlt
mov
dec
cwde
les
and
ror
(bad)
mov
ja
mov
push
es
cmc
sbb
mov
cmp
cmp
cli
fist
xor
pop
lods
pop
ins
push
lea
ins
cdq
mov
mov
in
cli
or
xor
xor
sub
mov
ja
mov
dec
out
fcom
repnz
je
mov
dec
xchg
les
stc
ror
(bad)
lods
shl
imul
xlat
hlt
sbb
xchg
fidivr
das
(bad)
cli
fist
xor
bound
cs
mov
mov
jecxz
or
cmp
xor
es
cmps
jae
movs
cmp
mov
dec
out
fcom
repnz
je
mov
dec
xchg
les
and
rol
test
ja
mov
push
aaa
fninit
sbb
xchg
pop
fidivr
xor
in
fist
xor
outs
mov
inc
cs
mov
mov
cli
cli
or
and
xor
aas
mov
lods
jae
movs
cmp
mov
dec
out
ficom
repnz
jb
cmps
push
mov
dec
xchg
les
and
rol
(bad)
sar
mov
push
xor
loope
(bad)
dec
ins
pushf
(bad)
push
jecxz
fidivr
fist
ss
dec
mov
inc
sub
mov
(bad)
arpl
cli
or
and
add
pop
fild
mov
ja
mov
dec
out
fist
repnz
jno
cmps
pop
in
lock
xchg
les
(bad)
ror
(bad)
mov
xchg
mov
push
cmp
in
(bad)
dec
ins
xchg
mov
pop
fidivr
xor
jmp
push
call
mov
inc
and
mov
std
cli
or
and
add
pop
fild
mov
ja
mov
dec
out
ficom
repnz
jb
mov
dec
xchg
les
sti
ror
(bad)
mov
xchg
mov
push
cmp
in
(bad)
dec
ins
pushf
mov
cmp
fist
aaa
jo
pop
mov
inc
and
mov
rcr
std
cli
or
and
xor
cmp
mov
ja
mov
dec
out
fist
repnz
jno
cmps
pop
in
lock
xchg
les
hlt
rol
(bad)
mov
xchg
mov
push
cmp
in
(bad)
dec
ins
pushf
mov
cmp
xor
ss
pop
mov
inc
and
mov
std
cli
or
and
add
pop
fild
mov
ja
mov
dec
out
ficom
repnz
jb
mov
dec
xchg
les
sti
ror
(bad)
mov
xchg
mov
push
cmp
in
(bad)
dec
ins
pushf
mov
cmp
fist
aaa
jo
pop
mov
inc
and
mov
mov
cld
cli
or
and
xor
cmp
cmps
outs
and
cmp
mov
dec
out
fist
repnz
jno
mov
dec
xchg
les
and
ror
(bad)
scas
shl
jns
xchg
mov
push
cmp
in
(bad)
dec
ins
xchg
mov
pop
fidivr
cs
jmp
bound
aas
pop
mov
into
pop
cld
cli
or
sub
xor
ss
stos
or
movs
cmp
mov
dec
out
fst
repnz
jae
test
jmp
sbb
(bad)
rcl
(bad)
sahf
jns
xchg
mov
push
ds
sbb
fcomp
pop
fidivr
cs
fist
xor
xor
inc
es
xchg
into
pop
cld
cli
or
sub
xor
ss
movs
dec
sub
cmp
and
fst
repnz
jne
movs
outs
jmp
je
xchg
jno
clc
ror
(bad)
scas
shl
jns
xchg
mov
push
aas
shl
mov
neg
cwde
mov
dec
cs
call
stos
sbb
mov
mov
retf
std
or
xor
xor
fs
pop
fisttp
mov
ja
mov
pop
jmp
loop
pop
push
test
mov
dec
loopne
mov
and
shl
mov
jne
mov
push
pop
std
repnz
lock
ins
stos
mov
push
cs
enter
jmp
jge
cmps
inc
sbb
mov
jmp
inc
xor
and
js
gs
das
xchg
pop
fdivr
fiadd
xor
neg
aaa
and
in
not
loop
pop
push
shr
call
in
popa
and
rcr
add
lods
outs
pop
test
icebp
movs
retf
imul
(bad)
cld
in
inc
jmp
jne
inc
test
inc
ss
xchg
jmp
push
xor
and
push
add
out
sub
pop
fstp
mov
xchg
sub
movs
scas
sub
adc
not
loop
pop
push
(bad)
and
xchg
dec
xchg
shl
in
(bad)
mov
loopne
xchg
(bad)
mov
lods
push
adc
xor
lahf
inc
ror
sub
(bad)
(bad)
scas
inc
jmp
jge
mov
cdq
lods
mov
call
jae
jne
mov
cmp
pop
and
movs
mov
xor
xchg
xadd
jb
push
push
rcr
loopne
mov
xchg
popa
es
xchg
sub
push
daa
lods
outs
pop
test
lock
retf
imul
fld
sub
(bad)
out
inc
call
test
inc
cmp
sub
icebp
jne
push
xor
and
inc
add
sub
fidivr
mov
je
mov
pop
in
iret
xchg
inc
mov
inc
loop
gs
movs
sub
mov
xchg
pusha
out
popa
and
xlat
test
loope
xchg
mov
jg
mov
adc
icebp
fs
dec
xlat
dec
sub
out
(bad)
repz
jmp
je
dec
test
jge
movs
inc
or
sub
lea
push
xor
and
pop
add
pop
fild
mov
mov
xchg
pop
aaa
add
jmp
(bad)
push
loop
jge
lea
mov
mov
and
xlat
test
mov
add
mov
mov
icebp
aas
imul
enter
out
dec
je
dec
stos
aas
jge
mov
lahf
mov
fld
neg
mov
jb
gs
out
adc
add
jmp
fimul
xor
stos
pop
aaa
es
jmp
xchg
pop
call
fsubr
mov
dec
test
xchg
popa
es
cmps
and
push
mov
les
mov
mov
adc
test
dec
fnstenv
sub
stc
aad
jmp
je
jle
sub
cmps
inc
or
test
jmp
jbe
add
mov
or
sub
pop
(bad)
add
into
sub
mov
pop
out
xchg
adc
gs
push
mov
mov
call
loopne
xchg
xchg
jnp
mov
icebp
(bad)
ins
sub
sbb
sbb
sub
cmps
inc
or
movs
lods
mov
cs
sbb
loop
mov
aaa
in
and
das
mov
lea
cmps
cmp
mov
dec
jmp
repnz
div
pusha
loopne
jno
std
shl
(bad)
scas
ror
push
xchg
mov
push
add
test
pop
fisubr
cs
stc
fst
and
xor
inc
sbb
call
pop
out
clc
or
ss
xor
sub
mov
cmps
cmp
mov
dec
out
jmp
jo
ins
pop
push
lea
mov
dec
in
movs
push
loopne
jno
test
mov
mov
jne
mov
push
add
test
pop
fnsave
cs
mov
fst
and
sbb
push
jno
mov
mov
out
clc
or
ss
xor
push
add
xor
sbb
test
mov
jmp
aam
add
cli
mov
call
daa
into
sar
xchg
ror
jp
mov
push
dec
icebp
hlt
mov
mul
jmp
cs
cmp
jbe
and
inc
lods
adc
movs
inc
push
jno
mov
cmps
dec
in
imul
mov
jbe
jns
mov
and
aad
pusha
lahf
push
xor
mov
stc
hlt
xchg
add
stc
je
push
pause
(bad)
dec
fwait
les
and
rcr
xchg
dec
mov
mov
daa
fcomip
cmp
popa
outs
lods
test
ds
push
dec
stos
sbb
lea
jns
mov
mov
jmp
push
xor
pop
sbb
das
lea
fisub
movs
push
xor
mov
loop
xchg
adc
je
fild
scas
(bad)
pop
inc
call
ror
call
mov
mov
mov
jmp
pop
lds
sub
push
jmp
jo
cmp
inc
sub
xchg
mov
out
cli
or
aaa
int
sbb
das
adc
imul
jb
mov
pop
jmp
xchg
xor
push
ins
jbe
mov
pop
xchg
les
and
ins
or
ja
mov
push
and
repnz
fwait
lods
inc
jmp
cld
fist
sbb
or
lods
pop
dec
push
mov
jne
cmps
call
icebp
sbb
xor
xor
pop
add
and
imul
xor
(bad)
sbb
jl
rcl
repnz
lock
xchg
les
add
rol
sahf
ret
outs
add
std
repnz
out
ins
xchg
movs
inc
out
push
retf
xor
cld
call
add
stos
sbb
push
mov
jge
mov
mov
jmp
jno
leave
pop
sbb
das
mov
test
xor
pop
aaa
sub
xchg
aaa
mov
jbe
stos
pop
repz
dec
xchg
les
and
rol
test
aas
test
ja
mov
push
aaa
stc
repnz
aam
jecxz
fidivr
cs
cld
fist
ss
dec
stos
cmp
mov
imul
stc
das
mov
jbe
push
xor
pop
sbb
das
mov
test
xor
pop
aaa
and
aaa
leave
sti
jb
ins
addr16
stos
sub
lahf
les
and
rol
(bad)
mov
jo
mov
push
inc
sbb
dec
pushf
cmps
xor
jno
cmp
adc
mov
inc
jmp
push
jge
xchg
inc
sti
push
add
cmps
mov
pusha
rcr
mov
xor
inc
xor
adc
sbb
fisubr
sub
test
cmp
in
sbb
sbb
(bad)
stos
ins
ror
xor
dec
scas
sti
xchg
cmp
xor
fsub
jp
cdq
fldcw
pop
call
pop
dec
jmp
jl
inc
sahf
add
outs
mov
xchg
stos
into
das
xor
and
data16
inc
or
pop
mov
sbb
imul
pop
mov
xchg
sbb
pusha
hlt
scas
mov
mov
push
in
inc
jbe
pop
loop
fdivr
fsub
je
xchg
out
retf
xchg
jbe
dec
icebp
(bad)
stos
aad
mov
mov
cdq
int3
xchg
call
ror
dec
jmp
daa
imul
popf
cmp
pop
aaa
jne
movs
mov
or
adc
pop
ficomp
push
inc
es
mov
fwait
sub
pop
jnp
jl
sub
sbb
inc
ret
and
inc
dec
mov
pop
mov
mov
mov
aad
lea
jecxz
fwait
adc
pushf
call
fsub
jge
mov
outs
clc
jo
adc
dec
jmp
xor
cmp
pop
mov
outs
out
cmps
iret
mov
xor
push
mov
and
sub
inc
and
nop
add
pop
fsubr
mov
push
mov
jo
mov
push
loopne
mov
enter
inc
jno
push
les
mov
and
lock
das
xlat
dec
xchg
pop
push
out
mov
movs
ret
cld
cmp
fdiv
das
cmps
or
cmp
xlat
(bad)
push
lds
push
and
push
inc
mov
stos
mov
call
jp
(bad)
daa
sbb
add
test
movs
cmp
adc
cmp
fild
mul
jno
dec
loope
jmp
outs
into
mov
out
enter
dec
fwait
test
push
xchg
mov
add
(bad)
jg
mov
jp
dec
leave
or
sub
inc
push
jl
stos
or
jnp
sub
mov
fst
loop
mov
or
xor
mov
adc
sbb
push
pop
mov
cld
or
cmp
stos
xchg
xor
push
jbe
dec
clc
xchg
fcom
les
xor
lock
jbe
dec
test
sbb
xchg
pop
push
mov
add
dec
pushf
aad
mov
xor
and
pop
push
pop
pop
xchg
add
push
xchg
push
test
mov
or
fs
mov
cmp
sub
ja
cmp
aam
inc
scas
pop
or
arpl
cmp
fild
sti
inc
ja
jp
cmps
out
mov
mov
xor
retf
not
push
mov
rol
dec
lahf
cmps
jne
dec
stos
adc
adc
into
rol
sbb
pop
push
(bad)
arpl
push
nop
stos
lods
cmp
and
pushw
call
or
je
push
test
popf
outs
cmp
gs
repnz
ror
cmp
lods
jmp
jae
xchg
leave
test
fwait
jecxz
mov
mov
cdq
ret
loopne
ins
pushf
mov
adc
data16
push
jge
cmp
and
xchg
mov
push
int3
jbe
push
pop
call
adc
add
push
int3
inc
js
inc
push
mov
jo
or
out
mov
ror
in
inc
jno
pop
fsubr
jecxz
fidiv
sub
ja
sbb
dec
mov
test
xor
(bad)
mov
popf
xor
fst
or
fdivr
int3
push
out
or
pop
push
jmp
push
stos
test
mov
(bad)
montmul
jbe
jle
out
sbb
cwde
add
scas
push
mov
mov
add
(bad)
fisttp
and
mov
enter
mov
xchg
leave
enter
js
pushf
xchg
loope
fadd
xchg
mov
mov
sub
or
stc
jmp
push
sbb
nop
bound
jle
xchg
mov
ins
in
pop
rcl
jge
or
xor
mov
mov
scas
push
add
xor
mov
adc
add
clc
out
and
clc
imul
pop
out
jmp
outs
enter
clc
lock
ja
cmps
fcmovnb
cmp
test
and
repnz
call
test
jl
add
and
add
push
mov
pop
jbe
xchg
into
mov
push
fsubr
jp
aad
push
jge
call
or
inc
pusha
scas
add
cdq
and
dec
(bad)
call
jb
push
inc
inc
mov
pop
stos
out
addr16
mov
sub
jecxz
scas
mov
loop
xchg
pop
outs
out
hlt
and
jle
mov
push
or
and
xor
cmp
arpl
jp
nop
into
test
in
fimul
mov
push
pusha
add
dec
es
mov
mov
mov
imul
cmp
repnz
sti
and
lods
dec
jecxz
fdiv
mov
xchg
enter
xchg
ins
test
push
ins
xor
dec
dec
xchg
scas
inc
(bad)
dec
lds
xor
jge
add
and
fs
and
mov
movs
mov
xor
montmul
cmps
ret
popa
push
jp
call
xor
cmp
inc
mov
jl
mov
gs
retf
stos
lock
fidiv
jbe
sub
xchg
mul
out
fnsave
shl
test
dec
mov
push
in
mov
sbb
cmp
jbe
das
out
or
idiv
stc
pop
jecxz
push
sbb
mov
nop
stos
mov
fdivrp
add
pop
out
inc
adc
sbb
sub
add
adc
and
shl
push
inc
xchg
xchg
xor
into
mov
bswap
lock
pushf
mov
outs
and
call
jp
dec
(bad)
sub
(bad)
clc
and
sbb
inc
stos
cmp
push
lea
jp
xchg
stos
mov
or
inc
fstp
and
rcl
gs
cmp
jne
popa
jmp
mov
scas
push
pop
mov
mov
lsl
loopne
mov
mov
push
sti
jle
je
push
adc
pop
rol
xchg
add
fninit
adc
test
add
ficom
and
or
dec
in
imul
scas
cmp
sub
xchg
mov
sar
js
inc
in
sub
inc
es
fwait
sub
imul
and
outs
inc
xor
mov
mov
push
and
lods
popa
lds
mov
bswap
enter
dec
mov
ins
mov
fisub
cmp
cmp
and
or
cmp
mov
pop
jbe
xchg
into
mov
cmp
pop
cdq
loope
stos
leave
push
bound
jmp
add
add
mov
push
xchg
mov
dec
hlt
in
mov
popf
shl
inc
dec
mov
jg
out
addr16
mov
xlat
lock
je
add
pushf
mov
mov
fst
jo
adc
int3
push
nop
push
imul
stos
or
inc
call
scas
xchg
nop
xchg
sysexit
leave
dec
(bad)
call
jb
sbb
aaa
xor
cwde
sbb
scas
inc
inc
test
popf
mov
arpl
add
clc
jmp
push
fiadd
dec
mov
dec
mov
xchg
xor
ror
mov
inc
ja
mov
(bad)
mov
xor
cs
or
out
cld
(bad)
jl
or
cmp
mov
adc
lods
add
jmp
inc
fidiv
gs
push
add
aas
call
push
mov
mov
add
inc
popf
iret
popa
jmp
jbe
mov
dec
mov
mov
push
shl
not
popf
jecxz
cmps
inc
ja
mov
lds
stos
jns
das
stos
ds
mov
(bad)
push
lds
je
call
or
xor
and
pop
call
sbb
inc
test
sub
mov
cmp
in
mov
int3
rcl
jns
inc
lods
and
lods
out
and
addr16
enter
jnp
mov
push
mov
lds
xchg
push
icebp
dec
into
ds
and
xor
or
xchg
push
cs
nop
iret
into
dec
xor
and
jge
fidivr
adc
pop
mov
fsubr
xor
xor
mov
ins
in
(bad)
ficom
mov
out
jmp
imul
add
(bad)
rol
xchg
xchg
sar
inc
ins
in
mov
call
push
or
sar
enter
jo
pop
cmp
push
mov
pop
lahf
mov
fstp
fmul
mov
push
jge
xor
inc
or
pusha
xchg
das
stos
adc
pop
js
pop
or
sbb
cmp
mov
mov
pop
ja
dec
fisubr
loop
fidiv
mov
in
xchg
test
fs
nop
push
and
cmc
cwde
stos
hlt
pop
jg
test
or
aaa
icebp
retf
clc
push
int
push
and
or
inc
cmps
gs
outs
movs
movs
iret
ret
fild
pop
xchg
loope
push
jp
int
or
ds
lods
je
inc
inc
fld
movs
ds
movs
and
in
mov
mov
push
and
lods
pop
sub
imul
jno
stc
retf
popf
adc
js
cwde
cwde
fisubr
cmps
push
push
out
test
sbb
frstor
and
cs
(bad)
xlat
push
pushf
add
fild
je
mov
mov
scas
jl
in
or
pop
and
and
nop
xor
add
pop
inc
xchg
sub
sahf
mov
push
loopne
xchg
xor
jbe
mov
pop
mov
xchg
sbb
mov
or
ret
nop
adc
js
mov
ins
out
scas
push
xor
aad
test
scas
outs
cli
das
ror
cs
fcmovnb
and
pop
push
push
pop
mov
test
mov
xor
pop
vandnpd
add
sbb
jmp
pushf
add
pop
inc
scas
pop
sbb
pop
aaa
cmp
in
aaa
mov
dec
jno
sub
lods
out
mov
mov
sub
les
xchg
and
xchg
inc
ja
cmps
mov
mov
jmp
fidivr
xor
inc
cwde
add
push
dec
xchg
push
mov
test
ret
cmp
loope
mov
adc
es
add
fs
pop
xor
dec
ins
xchg
mov
or
xor
fadd
neg
ret
pop
xchg
sar
xor
div
sbb
sub
pop
push
mov
mov
xchg
fdiv
cmp
mov
or
cmp
retf
sti
inc
pushf
inc
imul
mov
arpl
jb
nop
mov
push
(bad)
cli
or
jp
out
sbb
adc
sbb
sahf
jl
test
inc
mov
cld
add
add
out
mov
int3
rcl
inc
pop
dec
mov
dec
xchg
in
arpl
mov
mov
popf
or
dec
lock
(bad)
outs
gs
aad
mul
outs
jle
mov
sub
or
jmp
push
inc
inc
mov
push
lods
test
xchg
adc
leave
jl
fsubr
mov
push
ins
bound
out
inc
imul
adc
inc
inc
mov
cs
mov
arpl
xor
cld
aam
inc
int3
clc
addr16
adc
mul
mov
jmp
add
je
mov
pop
push
mov
loop
mov
call
repz
inc
pushf
push
imul
mov
pusha
cmp
stos
mov
mov
or
js
loope
mov
xor
inc
xor
push
push
jecxz
stos
adc
sbb
cdq
or
cmp
not
fidivr
dec
xchg
xchg
out
mov
mov
jp
je
pushf
add
scas
inc
ins
pushf
mov
jecxz
lock
dec
xchg
cmps
neg
prefetchwt1
jmp
sbb
xchg
push
movs
pop
ds
stos
movs
mov
cmp
shl
pop
pop
aad
cmp
ds
adc
pop
fdivr
mov
pop
mov
and
cmp
fwait
jmp
jbe
ja
dec
lock
mul
out
adc
mov
xor
(bad)
xchg
add
mov
outs
mov
out
ret
cld
cmp
fst
aad
push
sub
add
and
xchg
or
push
mov
xchg
stos
into
adc
lods
inc
rcr
xsha1
cmps
int
dec
data16
inc
xor
xor
and
adc
sub
mov
mov
ret
adc
inc
jbe
jne
scas
out
mov
mov
bswap
lock
mov
pop
outs
mov
jmp
mov
jae
das
stos
cmp
xlat
enter
and
inc
xchg
cmp
pop
cmp
mov
leave
pop
fdivrp
push
xchg
leave
push
dec
jge
ficomp
mov
fwait
sub
inc
inc
mov
js
test
ret
and
inc
jo
dec
loop
fisub
fadd
cs
ret
imul
into
je
mov
outs
arpl
cmps
lods
xor
aam
movs
fsub
jge
lahf
mov
adc
daa
icebp
aad
and
sbb
gs
cmp
movs
bound
jp
xchg
movs
mov
cmp
rcl
jp
out
inc
or
ds
das
lods
je
sbb
mov
fs
cld
xor
cmp
sti
add
and
movs
neg
out
outs
enter
(bad)
push
jecxz
icebp
mov
inc
gs
cmps
lods
xor
test
int3
cmp
scas
dec
shr
adc
daa
icebp
cli
clc
push
out
sbb
dec
movs
cmp
cmps
pop
aaa
jb
test
mov
ss
push
leave
push
dec
or
xor
pushf
sub
fisubr
adc
imul
clc
clc
test
(bad)
test
xchg
sti
movs
in
xchg
xlat
xchg
pop
and
cmc
dec
fwait
test
in
scas
pop
arpl
popf
repnz
ret
ret
call
sti
cmp
daa
jmp
add
cmp
add
pop
call
test
jmp
bound
out
sbb
inc
adc
mov
inc
scas
push
add
adc
arpl
add
repnz
stos
int3
addr16
inc
inc
dec
mov
inc
mov
xchg
enter
fstp
xchg
mov
outs
out
hlt
and
inc
dec
(bad)
(bad)
inc
aad
xor
jl
add
cmp
inc
sub
cmps
int
cmp
scas
pusha
int
sbb
jp
frstor
push
jnp
arpl
das
mov
test
sbb
cdq
or
cmp
retf
mov
mov
push
jle
dec
stos
pop
loop
stc
pop
mov
xchg
jbe
aam
or
rcl
test
cmp
mov
popf
mov
ds
dec
(bad)
(bad)
push
out
imul
lods
aas
jnp
mov
nop
iret
mov
or
arpl
out
jnp
ret
push
bound
rcr
inc
sbb
jne
sbb
jo
movs
cmp
adc
add
loopne
mov
mov
inc
dec
xchg
repz
mov
add
(bad)
dec
test
pusha
out
lods
push
inc
rol
int3
xchg
ins
pushf
mov
adc
dec
clc
xor
cmp
outs
mov
xchg
stos
adc
(bad)
pusha
(bad)
fisttp
leave
loope
jb
sbb
inc
cmp
sbb
jnp
test
sbb
cld
add
dec
xchg
lods
test
(bad)
push
hlt
jns
jbe
dec
sub
jae
mov
rcl
lea
mov
push
xchg
popf
mov
sbb
popa
dec
mov
inc
lock
cmps
dec
or
inc
sti
ss
and
cmp
movs
gs
push
mov
test
fcomp
jp
shl
pop
push
in
pop
push
pusha
daa
mov
push
aam
jnp
or
xchg
popf
mov
ss
mov
stos
(bad)
push
out
add
movs
test
xchg
pop
enter
aam
adc
jl
cmps
and
lea
xchg
mov
or
fsub
jp
cmp
xor
and
sbb
pop
xchg
or
pop
cmp
mov
sbb
aaa
or
adc
add
jnp
or
xchg
mov
xchg
add
sbb
fs
mov
ds
mov
xor
rol
cwde
mov
push
mov
fstp
cmp
or
fdivr
int3
and
inc
push
imul
aaa
push
stos
nop
adc
(bad)
shld
gs
add
inc
push
dec
add
sub
pop
jnp
ins
xor
push
pusha
test
cmp
jecxz
mov
imul
adc
ja
xchg
ja
retf
retf
fimul
mov
ja
stos
mov
xor
out
ret
cld
cmp
fld
jo
or
cmp
(bad)
shl
xor
push
sbb
(bad)
arpl
inc
(bad)
stos
movs
test
(bad)
(bad)
cmps
mov
jb
out
inc
push
add
adc
rol
mov
adc
push
pusha
test
cmp
in
and
shr
gs
mov
pop
mov
mov
sub
int3
ja
lahf
stos
fimul
outs
in
nop
add
out
retf
fidivr
mov
leave
push
ss
jmp
and
fild
daa
mov
outs
out
stos
int3
mov
fcmovnu
jp
clc
popa
dec
data16
inc
xor
xor
add
mov
jg
mov
or
xor
repnz
mov
adc
retf
scas
(bad)
dec
call
sub
enter
dec
movs
mov
outs
and
movs
(bad)
pop
dec
and
cmp
rol
rol
push
sbb
bound
outs
mov
mov
pop
shl
mov
or
inc
xor
adc
sbb
lods
push
sbb
lahf
sbb
mov
mov
dec
dec
fmul
mov
inc
cmps
out
ja
mov
push
(bad)
rol
xchg
fwait
loop
mov
test
xor
lds
fwait
scas
pop
sti
dec
repz
cmp
dec
rol
inc
sahf
gs
jno
test
lods
dec
aaa
scas
inc
ret
fldenv
jb
(bad)
sub
inc
add
push
iret
imul
add
cdq
getsec
xor
clc
lock
mov
push
fld
dec
mov
enter
loopne
xchg
into
mov
out
enter
dec
lock
xchg
in
popf
inc
push
test
retf
cld
jg
mov
jbe
das
repz
add
call
bound
ficomp
imul
nop
stos
scas
cmp
fistp
movs
clc
push
pop
inc
aam
sbb
pusha
mov
mov
sahf
jl
mov
std
adc
cmp
repnz
shl
in
pop
ja
jp
xchg
sbb
loope
fimul
xchg
cmp
jg
cmps
xchg
dec
mov
xchg
or
test
jo
mov
push
xor
dec
out
push
sub
cmp
pop
outs
mov
iret
lods
dec
fsub
js
xor
daa
push
pop
adc
cmp
mov
js
mov
dec
leave
fild
add
xchg
fild
fadd
xor
lock
je
pushf
test
cmp
lods
xor
(bad)
jg
mov
imul
retf
sub
(bad)
stc
and
sbb
inc
popf
cmp
fwait
pusha
sub
in
mov
test
fucom
jns
aad
push
data16
xor
jg
or
jo
pop
inc
mov
pusha
in
test
in
ror
in
pop
inc
xchg
xchg
addr16
pop
pop
test
shl
cwde
xchg
jecxz
rcl
xchg
mov
fild
xchg
mov
or
dec
sti
cmp
ins
test
pop
jg
pop
pop
add
fisttp
fisttp
bound
out
sbb
pop
and
inc
js
push
sbb
mov
sbb
ins
in
(bad)
mov
stos
lock
frstor
dec
mov
pop
mov
mov
rcl
add
dec
test
push
mov
cmovbe
ret
mov
add
or
(bad)
cld
enter
fs
inc
popf
pop
push
inc
mov
pop
outs
movs
mov
lahf
adc
fcom
loope
or
pop
out
xor
sbb
fdivr
adc
or
add
repnz
fsubr
ins
jbe
fsub
(bad)
xchg
mul
fisttp
push
shl
test
xchg
ja
pushf
test
push
cmp
xchg
test
jae
popf
mov
dec
or
inc
cld
add
xor
pop
aaa
jb
test
mov
push
leave
pusha
(bad)
fdivr
mov
addr16
jle
aam
push
inc
daa
pusha
cwde
sbb
inc
scas
js
xchg
addr16
mov
or
aaa
callw
and
dec
fdiv
xchg
stc
inc
in
xchg
jae
mov
shufps
adc
rcr
ror
mov
sbb
ins
lahf
(bad)
dec
stos
cmp
dec
push
ror
je
jmp
push
mov
movs
test
call
inc
aad
or
adc
sbb
xchg
mov
mov
and
jmp
xor
jbe
push
fidiv
loop
enter
std
enter
jne
sbb
adc
test
inc
bnd
movs
fsub
dec
dec
popf
xchg
inc
mov
test
or
xchg
pop
jnp
mov
xchg
movs
mov
or
sete
push
arpl
cmp
sbb
add
pop
js
outs
xor
cdq
outs
push
cmp
clc
cmc
xchg
xor
pop
jbe
pop
cli
cmps
and
mov
(bad)
lock
je
mov
push
mov
jmp
lea
adc
cmp
enter
pop
gs
call
or
ss
pop
jmp
or
call
pusha
mov
sub
imul
inc
mov
mov
add
in
in
mov
mov
push
repnz
arpl
fisub
loop
shl
test
test
mov
mov
ret
loopne
dec
lods
scas
push
(bad)
dec
stos
cmp
cmp
xlat
dec
sbb
and
pop
imul
mov
xchg
or
repz
fisttp
pushf
iret
push
dec
bound
out
sbb
cwde
and
fld
or
xchg
mov
imul
addr16
and
jbe
and
sahf
rcl
sub
in
repz
lods
(bad)
cmp
xchg
add
in
ins
lahf
fisttp
jbe
cmp
fist
cmp
dec
mov
push
add
mov
scas
ins
icebp
out
or
bound
int
and
adc
and
cmp
or
xchg
mov
and
xor
lock
inc
cmp
aam
dec
loope
add
in
shl
scas
sar
ins
popa
xchg
mov
out
in
lock
jl
test
pop
repz
cmp
repnz
and
xor
cmova
push
sbb
cmps
mov
pusha
out
push
mov
xor
es
gs
sub
movs
cmp
sbb
xor
fmul
cmc
bound
mov
jnp
(bad)
sbb
fadd
mov
fs
xchg
mov
push
and
cli
cwde
stos
retf
lods
scas
dec
repz
shl
aaa
dec
jmp
xor
mov
jbe
stos
int
cmp
js
in
or
cmp
sbb
jge
arpl
arpl
jo
stos
adc
dec
xor
pusha
(bad)
fadd
loop
jle
mov
pop
pushf
fucom
arpl
sbb
test
jmp
xchg
and
xchg
enter
shl
xchg
stos
fiadd
jmp
push
repz
aad
cmp
jp
xor
or
pop
jle
mov
fild
push
cwde
fbld
jp
frstor
push
fs
push
jmp
scas
add
imul
daa
mov
pop
sahf
mov
arpl
xor
and
fs
fisttp
cmps
fidiv
(bad)
xor
ret
cmc
jp
jg
test
bound
jmp
dec
js
mov
sbb
cmp
dec
push
call
jl
inc
stos
or
inc
mov
xchg
mov
fld
out
or
popa
xor
daa
sbb
fwait
adc
inc
cmp
ds
add
out
mov
mov
pop
ja
jge
xchg
lock
xchg
out
inc
xchg
mov
xor
xchg
dec
test
inc
push
pushf
mov
repnz
ret
clc
addr16
(bad)
(bad)
jae
cmp
cmp
sar
pop
sti
add
jge
stos
nop
pop
pop
dec
pushf
xchg
nop
lahf
dec
or
add
add
sub
sbb
test
and
cmp
inc
add
scas
xchg
xor
mov
outs
push
jno
and
lods
fild
loope
shl
retf
neg
sti
test
cmp
mov
inc
int3
mul
xchg
mov
adc
dec
jmp
or
cmp
pop
mov
nop
mov
pop
jmp
jne
int
or
jecxz
mov
lods
push
pop
adc
or
add
mov
stos
retf
sbb
lods
push
ficom
adc
sub
retf
popf
sub
jg
cwde
and
scas
mov
lds
mov
xor
push
into
xor
or
pop
jb
stos
movs
test
retf
leave
rcl
add
sbb
mov
mov
lods
push
mov
call
test
xchg
mov
bound
mov
retf
lods
jmp
ja
mov
(bad)
sub
dec
icebp
cmps
(bad)
in
scas
inc
push
xchg
movs
test
retf
mov
int
or
push
inc
jo
jno
adc
movs
arpl
test
or
ja
fidivr
mov
or
rcl
jl
cmp
inc
inc
fisttp
add
cmp
or
ins
in
cmc
mov
stos
fcom
jp
push
scas
popa
sar
mov
and
enter
jne
cwde
sahf
loope
fcomp
out
xchg
xor
jmp
sbb
cmp
(bad)
push
shl
jg
sahf
cmp
sub
movs
mov
in
jmp
jno
fdiv
xor
pop
push
xchg
or
mov
pusha
test
cmp
out
ds
dec
push
mov
xor
xchg
jmp
jns
sub
xchg
mov
leave
call
push
xor
and
cmp
pop
cmp
or
stos
movs
test
fstp
aas
mov
pusha
dec
bound
fld
jnp
cmp
int3
push
mov
cdq
or
add
div
popa
dec
push
mov
inc
loopne
xchg
dec
shl
cmp
icebp
cwde
xchg
in
stos
push
push
xchg
mov
xor
cli
lds
mov
gs
dec
stos
adc
iret
and
or
sbb
pop
push
inc
test
test
mov
aaa
lods
outs
jmp
jbe
aad
xor
daa
xor
sbb
lods
inc
push
xchg
push
in
or
clc
mov
scas
xlat
jb
jle
jno
and
xchg
fcomp
rcl
sub
(bad)
adc
pushf
cdq
mov
cdq
test
cmp
shl
or
inc
rol
imul
xchg
pop
imul
stos
stos
or
js
fsub
mov
and
daa
imul
stos
sub
inc
inc
scas
ins
cmp
getsec
sub
xor
ret
jb
push
push
pop
scas
jno
scas
sbb
xchg
xor
not
test
outs
in
lods
push
cs
sbb
mov
or
inc
jmp
push
imul
sub
stos
iret
xchg
adc
leave
sbb
loop
mov
dec
fnstcw
push
inc
and
pushf
pop
mov
scas
inc
push
xchg
test
add
xor
mov
inc
inc
jbe
sub
movs
fild
retf
rol
or
arpl
movs
push
jp
mov
(bad)
xchg
lock
arpl
mov
dec
ds
out
mov
inc
call
xchg
imul
sub
mov
fisubr
hlt
sbb
shl
sbb
daa
or
and
push
stc
sbb
add
lods
call
mov
stos
aad
cmp
mov
xchg
dec
rcr
xor
test
sbb
mov
sbb
stc
or
aad
imul
int
or
xlat
xlat
retf
dec
jecxz
push
inc
jnp
push
daa
push
test
or
jnp
div
mov
daa
call
add
sub
sub
inc
inc
mov
mov
ret
and
ret
dec
jbe
(bad)
out
test
xchg
mov
sub
not
pushf
mov
arpl
popf
repnz
iret
jmp
jl
aad
hlt
jo
add
rol
pop
inc
fwait
pop
inc
inc
call
jp
test
mov
xor
and
bound
sbb
mov
mov
xchg
mov
(bad)
imul
dec
clc
in
xor
inc
dec
xchg
movs
neg
fsub
outs
aam
js
int3
lock
dec
mov
push
xchg
movs
test
cs
int3
and
add
stos
adc
sub
mov
jl
inc
push
sbb
sahf
pcmpeqb
bound
push
mov
movs
test
call
bound
in
daa
push
add
adc
das
test
rcl
mov
pop
fwait
sbb
out
inc
xchg
int3
push
fsubr
jno
push
ret
pop
loopne
and
lock
or
dec
xchg
pushf
xchg
fldcw
mov
mov
movs
sar
jns
mov
xor
dec
(bad)
sub
sbb
xor
pusha
cmp
nop
mov
push
leave
outs
dec
inc
(bad)
and
jae
pusha
xchg
add
mov
fs
mov
inc
cld
out
and
jbe
mov
enter
mov
mov
push
retf
retf
xchg
jbe
jl
pushf
fninit
adc
test
xor
leave
mov
mov
ss
cmps
or
daa
icebp
int
and
inc
pusha
pop
pop
fstp
aaa
push
mov
mov
(bad)
and
pop
inc
out
aaa
or
sbb
sbb
imul
dec
push
or
out
mov
int3
jmp
jo
pop
adc
arpl
stos
adc
mov
push
mov
(bad)
fisub
call
int
or
xlat
aam
dec
sti
sbb
inc
fidivr
cmp
mov
repz
ficomp
mov
je
jns
out
pop
push
add
pop
fild
fisub
mov
lea
cmp
stos
xchg
xor
push
mov
dec
test
mov
and
rol
mov
outs
test
repnz
xchg
mov
adc
(bad)
jbe
sbb
outs
stos
add
push
mov
imul
fstp
mov
jbe
jns
rcl
pop
add
pop
fild
(bad)
xchg
mov
lea
cmp
stos
xchg
xor
push
lods
push
repz
(bad)
dec
mov
mov
rcl
and
xchg
mov
push
xchg
mov
push
xor
ins
xchg
test
add
inc
inc
jo
push
cmp
cli
inc
daa
push
lahf
mov
nop
adc
fld
repnz
mov
jbe
gs
pop
sbb
das
mov
fistp
stos
push
xor
lea
aaa
ss
cli
xchg
ds
push
loop
add
repz
xchg
adc
xor
rol
mov
sar
js
xchg
mov
push
xor
repnz
in
repz
inc
in
jp
dec
cs
cld
aad
call
mov
inc
daa
pop
lahf
test
mov
jmp
jno
out
pop
push
add
pop
fcom
test
cmp
mov
add
fist
loop
inc
push
mov
xor
les
and
rol
mov
jg
mov
push
xor
repnz
repz
popf
xchg
dec
fidivr
and
sti
inc
jmp
jo
push
pop
ins
push
mov
mov
(bad)
neg
mov
jbe
jno
rol
inc
add
pop
fisttp
lods
jnp
test
lea
sub
out
jmp
xor
push
mov
dec
mov
mov
and
or
ins
xchg
mov
push
xor
repnz
repz
popf
mov
jmp
fimul
cs
(bad)
cld
fist
add
inc
stos
pop
ins
push
clc
inc
sub
xchg
lods
mov
jmp
add
lds
sbb
das
mov
fcomp
sub
mov
sub
test
push
loop
push
push
test
dec
loope
cwde
adc
fcmovnbe
xchg
jecxz
or
test
repnz
in
repz
inc
jmp
fidivr
sub
cld
clc
inc
jmp
jo
cmp
sti
inc
sub
mov
lahf
sub
fnstcw
out
aas
mov
jbe
gs
xor
pop
add
xor
pop
pusha
scas
jg
xchg
lods
mov
pop
in
in
xchg
xor
push
stos
pop
repz
enter
cmps
fs
xchg
js
std
enter
ins
or
ja
mov
fiadd
lods
scas
inc
jecxz
retf
ds
jmp
imul
fistp
fs
pop
ds
mov
scas
cmp
cli
setnp
outs
push
jb
int
fs
and
sbb
test
adc
sbb
and
mov
mov
jbe
stos
pop
div
mov
fst
mov
xchg
stos
fisubr
stos
push
ja
mov
lds
fwait
scas
push
jecxz
retf
sbb
aam
push
call
xchg
outs
push
mov
jp
mov
mov
jmp
jno
int
or
cmp
jae
jl
movs
cmp
sbb
and
fisttp
lock
mov
dec
mov
mov
and
rol
mov
ins
xchg
mov
push
xor
lock
ins
lahf
mov
sbb
cmp
cld
clc
data16
jo
pop
stos
cmp
cmps
inc
daa
jno
test
mov
jmp
jns
out
pop
push
dec
add
and
sbb
dec
xor
mov
cmp
call
push
les
push
scas
sub
mov
xchg
push
(bad)
or
ja
mov
pusha
mov
test
ds
repnz
popf
aam
sar
cs
cld
sti
inc
jmp
jo
jle
cmp
push
mov
nop
call
idiv
mov
jbe
jno
rol
add
xor
inc
pusha
scas
imul
cmp
lea
aaa
sub
xor
outs
jno
scas
jp
scas
(bad)
dec
test
xchg
dec
in
jno
retf
adc
or
xchg
mov
push
xor
gs
xchg
movs
inc
out
jp
adc
aaa
fdivr
rol
jo
inc
stos
pop
ins
pop
cmps
inc
cs
cmps
mov
jmp
jne
out
pop
push
pop
add
pop
fcomp
scas
jae
xchg
stos
mov
jl
repz
ds
imul
outs
push
lods
jb
xchg
(bad)
dec
mov
mov
and
rol
mov
shl
outs
push
mov
test
xor
ins
popf
mov
add
clc
data16
jo
jle
or
inc
or
mov
mov
fild
in
or
xor
and
das
cwde
pop
fadd
mov
je
mov
ins
in
scas
xchg
xor
push
stos
pop
idiv
loopne
in
popa
and
ror
(bad)
fldcw
test
repnz
cld
lock
xchg
mov
xor
cmp
cld
sti
inc
jmp
jo
dec
mov
inc
daa
jne
mov
ret
fisubr
fstp
mov
jbe
inc
xor
and
or
pop
fcomp
mov
je
mov
pop
in
jmp
ds
pop
push
scas
and
lods
(bad)
dec
mov
mov
mov
xchg
jecxz
xchg
mov
jg
mov
push
xor
ins
xchg
mov
adc
cmp
inc
jo
outs
stos
pop
ins
push
cmps
inc
daa
jno
test
mov
jmp
jne
out
xor
inc
add
pop
fadd
scas
push
xor
mov
aaa
add
lods
xchg
xor
push
lods
jb
xchg
(bad)
dec
cmps
les
and
(bad)
xchg
jnp
dec
xchg
mov
shl
outs
push
test
and
mov
dec
cs
jmp
or
cmp
daa
imul
loope
mov
jbe
or
call
sbb
sbb
dec
xor
mov
aaa
add
xor
outs
dec
push
lods
dec
repz
xchg
adc
mov
and
rol
mov
ins
mov
mov
ds
repnz
lock
popf
xchg
jp
adc
cmp
add
pop
stos
cmp
mov
xchg
mov
arpl
fnstcw
mov
jbe
jno
out
pop
push
pop
add
xor
pop
pusha
scas
push
xor
mov
in
xor
outs
pop
push
lods
dec
repz
(bad)
dec
mov
xchg
push
(bad)
or
dec
xchg
mov
test
leave
xchg
(bad)
push
jmp
fst
cs
cld
clc
data16
jo
jp
pop
ins
push
mov
mov
fst
jmp
gs
xor
add
pop
fistp
stos
jg
xchg
movs
mov
pop
in
jmp
mov
inc
push
lods
jb
lods
lock
mov
xchg
push
in
popa
and
rol
mov
xchg
mov
push
ds
repnz
lock
ins
popf
mov
or
cmp
cld
shl
jo
push
stos
add
push
mov
mov
mov
cs
jnp
fisttp
mov
jbe
gs
xor
jl
adc
das
fwait
and
inc
pusha
mov
ja
mov
jl
stc
xchg
xor
sti
push
les
push
test
dec
mov
mov
and
rol
xchg
sar
outs
push
mov
mov
xor
repnz
inc
clc
pop
fst
cs
jmp
pop
inc
stos
add
push
mov
xchg
mov
jmp
jns
(bad)
and
das
fwait
xor
push
pusha
mov
je
mov
pop
in
cmc
xchg
xor
push
retf
movs
fidivr
mov
add
shr
fsub
adc
mov
test
(bad)
test
ds
cld
xor
dec
mov
inc
or
mov
nop
cmp
fild
jmp
movs
fidiv
inc
cmp
pop
add
sub
mov
jg
test
pop
sti
int
daa
mov
jne
mov
dec
test
xchg
dec
ret
xchg
pop
ss
fist
mov
jle
mov
lock
out
imul
(bad)
repnz
daa
jge
pop
mov
inc
cmp
mov
jmp
jns
into
xor
daa
mov
sar
mov
jg
test
sbb
xchg
xor
(bad)
jp
ins
js
mov
inc
xchg
les
add
rol
mov
xchg
mov
cmc
sbb
fadd
pop
fidiv
sub
loop
fcom
cmp
inc
scas
pop
ins
push
xchg
jns
mov
pushf
xor
cli
aas
xchg
icebp
jle
popa
cmp
xor
das
mov
test
xor
(bad)
getsec
and
xchg
daa
mov
jno
test
jmp
loopne
call
add
rcl
stos
ret
ja
xchg
rol
(bad)
dec
outs
mov
sub
fsubr
fst
xor
inc
test
outs
jo
inc
cs
popf
mov
iret
and
cld
or
fnsave
jno
ret
jo
adc
imul
ja
mov
dec
leave
(bad)
xchg
aaa
mov
ja
sbb
lea
mov
inc
mov
mov
or
aad
sub
outs
movs
xchg
mov
adc
cld
sti
dec
outs
mov
cmp
sub
cdq
xor
aas
test
ins
pop
stos
push
cs
mov
mov
daa
iret
dec
call
jg
pop
xor
pop
cmp
cmp
js
test
xor
test
arpl
repz
jne
push
popf
inc
loope
loopne
xchg
sar
repz
test
(bad)
scas
enter
ja
rol
retf
ins
lods
mov
xor
sbb
fcmovu
inc
in
imul
mov
jge
add
pushf
mov
mov
sub
sbb
cli
jne
jno
int
sub
add
pop
arpl
jl
mov
pop
out
xchg
aaa
mov
jbe
lea
mov
pop
xchg
les
and
rcl
test
sub
jge
test
rol
fwait
lods
push
les
cs
clc
cmp
sbb
push
lea
jae
call
loop
sbb
ds
push
and
stos
pop
and
lea
xor
ins
call
aam
jbe
lea
xchg
les
sub
rol
test
jge
test
sub
pop
jl
mov
fisubr
xor
(bad)
cmp
push
cmp
stos
inc
add
mov
mov
in
das
(bad)
(bad)
jbe
jge
enter
push
adc
bound
ja
xor
xchg
mov
ins
call
loop
js
lea
mov
cmp
mov
pushf
add
push
pop
test
ja
lds
or
mov
fidiv
sub
clc
int
inc
retf
daa
inc
mov
jle
xchg
inc
cs
lahf
mov
retf
das
cmp
jg
cli
sbb
xor
xor
sub
cs
xor
(bad)
adc
and
fst
icebp
gs
cmp
loopne
xchg
mov
push
fcom
lods
jae
imul
mov
and
repnz
test
pop
fidiv
sub
rcr
fist
es
add
sbb
mov
jg
xchg
jmp
jge
enter
push
xor
sub
arpl
jl
movs
test
jmp
(bad)
jno
imul
pusha
mov
xor
rcl
cli
mov
cmp
jnp
xchg
les
mov
inc
loope
scas
cmp
es
fst
xor
daa
jle
popf
data16
fwait
mov
fbstp
cli
and
ss
sbb
xor
or
test
xor
(bad)
pop
aas
es
(bad)
fist
loop
jne
mov
aas
xchg
les
and
rol
stos
ret
outs
ja
mov
adc
(bad)
inc
ins
fwait
lods
inc
loopne
scas
ds
clc
fist
xor
pop
ins
push
mov
pop
icebp
mov
mov
jmp
jne
into
xor
sub
test
xor
pop
aaa
and
fist
bnd
push
stos
pop
repz
dec
xchg
les
and
rol
scas
sar
addr16
rol
retf
outs
cwde
fadd
pop
fidiv
sub
cli
stc
fild
xor
pop
mov
inc
sbb
mov
mov
in
(bad)
aas
xchg
(bad)
jg
push
xor
add
sub
ja
cmps
sub
mov
pop
xchg
fcom
les
push
stos
dec
hlt
mov
pop
cdq
(bad)
cmps
fs
jb
cli
rol
mov
jle
movs
lea
daa
in
inc
mov
jnp
pop
aam
push
cs
fst
xor
pop
(bad)
sbb
jo
inc
cs
popf
mov
pushf
aaa
fistp
(bad)
aas
movs
lock
gs
pop
sub
and
or
mov
jg
mov
pop
leave
aam
aaa
test
jno
sbb
push
stos
jle
mov
push
loop
jno
out
mov
gs
mov
cmc
test
out
outs
fwait
mov
pop
clc
sbb
inc
fidivr
push
xor
inc
sbb
mov
ret
cmp
jmp
enter
gs
and
and
ds
mov
push
call
leave
xlat
xchg
aaa
mov
jno
dec
addr16
popf
dec
loop
loopne
xchg
(bad)
xchg
inc
rcl
nop
push
rep
xor
les
mov
adc
in
jecxz
retf
imul
out
in
fadd
cmp
sbb
lahf
inc
add
sub
pop
jmp
or
pop
adc
jnp
test
xor
or
mov
jl
into
xchg
daa
sar
les
push
stos
jle
mov
dec
xchg
(bad)
xchg
sbb
cmc
(bad)
(bad)
mov
je
leave
adc
in
jecxz
retf
imul
out
in
fadd
xor
outs
mov
inc
sbb
mov
dec
sti
stc
sbb
push
cmp
and
jns
adc
jp
mov
arpl
and
cli
xchg
aaa
xchg
sti
jb
dec
addr16
mov
pop
mov
cmps
adc
xchg
jno
cli
xlat
test
outs
xchg
test
jle
test
cmc
sbb
inc
mov
sub
cli
in
fadd
xor
lods
push
pop
je
push
cmp
mov
loop
aas
movs
lock
or
push
add
sub
xchg
push
cmp
(bad)
cmp
and
out
into
xchg
daa
sar
les
push
stos
and
mov
xor
nop
jno
in
rcl
mov
jb
movs
xchg
adc
in
out
ins
fwait
mov
out
cmps
cmp
ds
push
xchg
xor
xor
inc
pop
pop
mov
jmp
enter
gs
and
and
ds
sahf
imul
or
mov
dec
leave
xlat
xchg
aaa
sahf
repz
ins
jno
test
jecxz
(bad)
pop
add
inc
in
nop
popa
and
rcl
mov
jb
movs
adc
jmp
jne
mov
cmp
cs
cld
fist
xor
dec
test
inc
cs
mov
mov
jmp
jge
rcr
pop
sbb
adc
push
ins
xchg
jg
stos
aas
pop
mov
popf
imul
dec
jmp
in
dec
pop
mov
dec
mov
xchg
jno
std
sar
cli
pushf
int3
adc
outs
ja
lds
xchg
(bad)
pop
jnp
cmps
imul
stos
or
and
add
gs
cmp
inc
mov
xchg
mov
out
jp
shr
dec
inc
jmp
aas
cwde
sub
mov
bts
(bad)
scas
cdq
cmp
dec
pop
scas
pop
xor
fs
xchg
jno
std
rol
test
push
mov
(bad)
xchg
test
cmps
jae
push
hlt
or
cmp
(bad)
clc
inc
lds
push
jge
popf
cmp
pop
mov
xchg
movs
mov
or
inc
cli
loope
mov
or
daa
gs
adc
sub
inc
inc
mov
push
test
cld
adc
add
out
mov
mov
fidivr
jbe
jne
xchg
fstp
test
sahf
jae
retf
fiadd
mov
in
mov
test
cs
pushf
scas
xor
jo
(bad)
dec
iret
sar
inc
sti
add
pop
sahf
push
jnp
cld
dec
pop
jge
stos
xchg
shl
shld
js
pop
and
add
fdivr
mov
add
xchg
or
add
call
jecxz
arpl
repz
dec
xchg
les
add
rol
stos
sar
outs
ja
mov
push
aaa
stc
repnz
lods
inc
jecxz
fidivr
cs
call
stos
pop
ins
push
test
mov
leave
push
int
pop
jle
out
sbb
mov
pusha
test
xor
add
test
sbb
and
fist
repnz
jbe
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
push
aaa
stc
repnz
lods
inc
jecxz
fidivr
cs
cld
fist
xor
pop
ins
push
mov
jns
mov
mov
jmp
jno
int
sbb
das
mov
test
xor
sbb
and
fist
repnz
jbe
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
push
aaa
stc
repnz
lods
inc
jecxz
fidivr
cs
cld
fist
xor
pop
ins
push
mov
jns
mov
mov
jmp
jno
int
sbb
das
mov
test
xor
sbb
and
fist
repnz
jbe
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
push
aaa
stc
repnz
lods
inc
jecxz
ficomp
cs
cld
fst
xor
pop
gs
mov
jns
mov
mov
jmp
jne
int
sbb
das
mov
test
xor
sbb
and
fist
loop
jbe
lods
jle
mov
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
push
aas
stc
repnz
lods
inc
jecxz
fidivr
cs
cld
fist
xor
pop
ins
push
mov
jns
mov
mov
jmp
jno
int
sbb
das
call
xor
sbb
and
fist
repnz
jbe
lods
inc
repz
xchg
jl
and
jecxz
xchg
mov
outs
mov
mov
xchg
cld
lock
ins
fwait
lods
inc
jecxz
fadd
xor
jo
dec
stos
pop
jge
mov
jns
mov
mov
jmp
jno
int
sbb
das
mov
test
xor
sbb
and
fist
repnz
jbe
stos
pop
repz
cwde
ins
in
push
and
rol
mov
ins
mov
mov
aaa
stc
repnz
mov
sub
aaa
repnz
ret
inc
jmp
jo
inc
stos
cmp
push
cmps
inc
daa
imul
cli
or
xor
xor
das
mov
mov
je
mov
jl
fst
repnz
pop
push
scas
jb
xchg
(bad)
dec
mov
xchg
jno
icebp
shl
(bad)
pushf
sar
outs
jnp
mov
push
xor
repnz
lock
ins
sahf
lods
inc
jecxz
fnstsw
cs
fild
xor
bound
inc
sub
test
mov
jmp
jno
call
adc
das
fwait
and
imul
xor
or
cmp
in
xchg
lods
sti
push
repnz
fs
mov
dec
add
jno
std
rol
(bad)
mov
push
test
repnz
cld
lock
xchg
movs
inc
shr
cmp
xor
adc
mov
mov
fstp
jmp
popa
xor
and
das
fwait
and
sbb
imul
sbb
test
add
rcl
loop
pop
push
stos
pop
repz
(bad)
dec
cmps
les
and
ror
mov
push
mov
xchg
push
xor
repnz
lock
xchg
mov
dec
fidivr
cs
cld
leave
push
call
stos
or
mov
stos
lods
mov
jmp
pop
xor
pop
push
inc
add
pop
fcomp
pusha
test
xor
sbb
add
in
out
xor
pop
push
mov
dec
mov
call
jecxz
xchg
(bad)
fcmovnb
aas
test
bound
std
repnz
in
lock
popf
xchg
push
ucomiss
(bad)
cld
ret
inc
jmp
jo
push
stos
aas
jge
mov
nop
call
loope
mov
jbe
jge
out
pop
push
pop
add
pop
fcomp
pusha
mov
je
mov
dec
in
fcom
loop
add
repz
dec
xchg
les
(bad)
rol
mov
push
test
repnz
cld
lock
ins
popf
fadd
dec
fidivr
cs
cld
retf
data16
jo
pop
stos
add
push
mov
xchg
mov
jnp
fldcw
mov
jbe
gs
xor
das
mov
scas
jg
xchg
stos
mov
pop
in
hlt
xchg
ds
gs
pop
push
mov
dec
mov
mov
and
rol
(bad)
pushf
sar
mov
xor
repnz
mov
dec
fnstsw
stc
data16
jo
cmp
inc
daa
push
lahf
mov
fnstcw
fsubr
mov
jbe
pop
xor
pop
push
inc
add
pop
fistp
lods
jg
test
lea
sub
out
fist
leave
pop
sbb
sub
mov
mov
push
test
scas
push
xlat
pusha
add
push
out
mov
sbb
mov
mov
aaa
jmp
fld
rcl
push
jge
xchg
jg
cli
pop
aaa
jne
mov
hlt
push
ret
fdivr
aad
jb
add
and
add
call
pop
stos
adc
or
cmp
jmp
adc
cmp
push
int3
mov
push
leave
imul
inc
ins
mov
retf
fidivr
mov
push
dec
stos
or
adc
call
xchg
cmp
add
mov
lock
fild
ficom
data16
inc
xor
cmp
pop
mov
stos
pop
ins
cmp
cmp
and
test
push
ficom
mov
and
fidivr
(bad)
mov
ss
hlt
add
(bad)
fisub
lea
or
icebp
enter
push
push
or
pop
je
mov
xchg
nop
ret
lods
je
neg
mov
sbb
inc
ins
inc
and
xchg
pop
test
stos
jg
lods
aas
dec
cmps
mov
retw
and
hlt
jo
ins
push
pop
test
jae
fisttp
sub
repz
scas
mov
inc
ins
out
mov
mov
mov
dec
or
cmc
rol
inc
cwde
sbb
cmp
arpl
test
stos
or
lods
pop
fcomip
and
add
sbb
add
dec
push
aas
dec
movs
mov
push
loopne
mov
stos
cld
push
hlt
jp
jno
dec
ret
ds
fisttp
and
enter
dec
xchg
sbb
cmps
fs
mov
out
retf
lock
imul
add
out
pop
push
jge
adc
and
mov
ficomp
fsub
or
aaa
or
sbb
pop
jnp
pop
push
xchg
add
sub
cmps
pushf
inc
mov
push
jp
je
dec
xchg
xchg
fs
lahf
add
(bad)
or
xchg
add
pusha
jne
xchg
call
sub
dec
lock
cld
fist
xor
pop
ins
push
mov
jns
mov
mov
jmp
jno
int
sbb
das
mov
test
xor
sbb
and
fist
repnz
jbe
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
push
aaa
stc
repnz
lods
inc
jecxz
fidivr
cs
cld
fist
xor
pop
ins
push
mov
jns
mov
mov
jmp
jno
int
sbb
das
mov
test
xor
sbb
and
fist
repnz
jbe
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
push
aaa
iret
repnz
lods
inc
jecxz
fidivr
cs
cld
fist
xor
pop
ins
push
mov
jns
mov
mov
jmp
jno
int
sbb
das
mov
test
xor
sbb
and
fist
repnz
jbe
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
push
aaa
stc
repnz
lods
inc
jecxz
fidivr
cs
cld
fist
xor
pop
ins
push
mov
jns
mov
mov
jmp
jno
int
sbb
das
mov
test
xor
sbb
and
fist
repnz
jbe
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
push
aaa
stc
repnz
lods
inc
jecxz
fidivr
cs
cld
fist
xor
pop
ins
push
mov
jns
mov
mov
jmp
jno
int
sbb
das
mov
test
xor
sbb
and
fist
repnz
jbe
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
push
aaa
stc
repnz
lods
inc
jecxz
fidivr
cs
cld
fist
xor
pop
ins
push
mov
jns
mov
mov
jmp
jno
int
sbb
das
mov
test
xor
sbb
and
fist
repnz
jbe
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
push
aaa
stc
repnz
lods
inc
jecxz
fidivr
cs
cld
fist
xor
pop
ins
push
mov
jns
mov
mov
jmp
jno
int
sbb
das
mov
test
xor
sbb
and
fist
repnz
jbe
stos
pop
repz
dec
xchg
les
and
rol
stos
sar
outs
ja
mov
push
aaa
stc
repnz
lods
inc
jecxz
fidivr
cs
cld
fist
xor
pop
ins
push
mov
jns
mov
mov
jmp
jno
int
sbb
das
mov
test
xor
sbb
and
mov
dec
(bad)
dec
pop
push
test
xchg
ret
jg
ret
mov
adc
movs
icebp
adc
pop
stos
mov
push
mov
cwde
into
loopne
(bad)
imul
and
imul
retf
cmc
js
push
je
ins
mov
outs
mov
mov
(bad)
sbb
cli
cmp
or
test
inc
pop
(bad)
jb
test
push
cwde
cmp
mov
sbb
pop
jnp
aaa
sti
cdq
(bad)
fs
mov
mov
into
add
out
xchg
mov
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
add
je
imul
add
or
add
add
add
push
push
add
or
add
add
add
inc
push
dec
inc
add
add
or
add
add
add
inc
ins
outs
bound
add
add
add
push
push
mov
add
cli
add
add
add
add
add
add
add
add
add
add
or
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jp
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
push
add
push
add
add
add
add
add
add
add
add
add
add
or
cmc
add
add
add
add
add
add
pop
add
add
add
add
or
jmp
or
push
add
adc
pop
add
add
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
inc
push
add
inc
push
add
add
add
aad
inc
push
add
add
add
add
add
sub
dec
add
add
sub
add
add
add
add
add
adc
cmp
inc
add
add
add
add
add
push
add
add
add
add
pop
add
add
or
adc
pusha
add
add
add
add
and
add
add
add
add
xchg
add
test
add
je
add
add
xchg
add
mov
add
fsub
add
add
xchg
xor
push
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
xchg
xor
rol
add
inc
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
add
push
add
add
xchg
add
pop
add
add
add
add
imul
jno
aam
push
add
loope
add
add
add
add
xchg
add
call
add
add
add
add
add
add
add
add
push
add
add
add
mov
push
add
add
add
leave
add
add
add
add
rol
xor
push
add
add
add
add
add
add
add
icebp
add
add
stc
add
add
add
xor
jnp
or
xor
jnp
adc
xor
jnp
sbb
xor
jnp
and
xor
jnp
sub
xor
dec
add
add
add
and
cmp
push
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
sbb
pop
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
gs
add
add
arpl
ins
imul
gs
add
push
push
pop
ss
jae
jne
arpl
add
scas
fld
fld
jb
addr16
ins
add
je
push
popa
fs
dec
bound
arpl
sbb
fld
fdiv
mov
fld
imul
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
fsub
fld
add
gs
add
jae
gs
cs
push
imul
gs
push
jns
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
inc
jae
gs
bound
inc
jae
gs
bound
push
jns
je
ins
cs
gs
arpl
outs
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
arpl
add
je
bound
arpl
fs
add
inc
push
push
inc
je
jb
bound
add
jb
popa
ins
push
jb
je
jb
push
jns
je
ins
cs
dec
add
outs
jbe
jb
add
jns
add
arpl
imul
je
ins
cs
gs
add
je
push
push
inc
cmp
inc
gs
je
imul
imul
arpl
add
je
jb
je
jb
push
jb
je
add
imul
ins
add
jo
jae
add
ins
add
gs
add
mov
mov
sbb
fdivr
outs
ins
jo
ins
gs
popa
jb
ins
gs
jb
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
ins
jo
ins
gs
gs
ins
je
add
je
push
gs
outs
arpl
inc
jae
gs
bound
jae
push
je
imul
arpl
outs
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
push
jo
arpl
ins
imul
je
inc
outs
ins
jo
ins
gs
jo
imul
je
inc
outs
gs
je
inc
js
arpl
popa
bound
jae
je
inc
outs
gs
je
dec
outs
dec
gs
outs
jb
add
push
outs
fs
jb
jbe
fs
dec
imul
je
inc
push
push
dec
inc
imul
jb
pusha
xor
inc
outs
fs
outs
ins
push
jb
jbe
fs
inc
outs
ins
jo
ins
gs
jae
gs
bound
jb
ins
inc
imul
inc
outs
ins
jo
ins
gs
jae
gs
bound
fld
fld
add
outs
ins
inc
popa
jae
ss
je
imul
imul
je
inc
gs
outs
ins
fs
popa
je
add
arpl
ins
inc
outs
ins
fs
push
popa
je
add
je
gs
jo
imul
inc
outs
ins
bound
add
arpl
outs
jb
fld
fsubr
add
arpl
je
outs
outs
add
lods
fsubr
fld
xchg
sbb
fdiv
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
fld
sbb
add
mov
fld
add
je
outs
fs
outs
outs
add
je
inc
outs
je
jns
outs
imul
push
jae
add
jbe
imul
sbb
fsubr
add
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
jb
fs
je
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jbe
jb
imul
inc
outs
fs
je
jb
bound
add
jae
gs
cs
arpl
imul
push
add
push
dec
add
data16
add
and
add
push
add
pop
add
ins
add
add
dec
add
add
inc
add
pop
inc
add
ins
add
imul
jb
push
add
jb
jae
imul
add
jbe
xor
add
add
or
add
add
adc
jae
je
add
add
add
cmp
add
add
add
je
cmp
ja
imul
js
add
add
add
ins
add
je
data16
jb
ins
add
add
cmp
add
add
add
js
inc
add
add
dec
add
inc
add
aaa
add
dec
add
add
jae
inc
add
add
add
xor
cmp
jbe
data16
add
cmp
ins
add
inc
add
add
add
inc
add
je
add
add
push
add
push
add
add
xor
jbe
dec
add
add
add
add
jbe
outs
add
add
jne
xor
push
ja
jne
push
add
ins
add
dec
add
dec
add
inc
add
js
push
add
push
add
bound
jbe
ins
add
outs
add
outs
add
add
add
xor
add
add
add
dec
add
push
add
pop
add
inc
add
add
add
xor
dec
add
xor
add
jp
dec
add
add
add
ins
add
cmp
aaa
add
dec
add
add
pop
add
dec
add
push
add
add
dec
add
add
jae
push
add
add
xor
inc
add
jne
jne
inc
add
jne
imul
add
adc
and
mov
lods
(bad)
fsubr
sar
pop
push
sbb
mov
push
sbb
adc
add
push
add
push
add
add
add
push
add
adc
adc
sbb
and
add
adc
add
add
add
or
push
push
pop
and
add
add
add
add
add
and
add
add
add
pop
add
adc
adc
or
add
sub
sbb
push
push
push
add
add
push
add
add
push
push
add
or
sbb
adc
inc
sbb
adc
and
or
add
add
add
and
add
push
or
add
inc
adc
push
add
push
add
push
add
pop
add
add
add
adc
add
sbb
add
ins
add
add
ins
push
and
sbb
sbb
adc
adc
add
imul
add
push
add
adc
inc
push
and
and
fs
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
inc
inc
push
add
or
add
xor
add
add
or
add
or
add
add
sbb
jns
je
ins
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
add
je
sbb
mov
add
xor
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
