adc
push
add
add
add
add
add
add
add
or
add
add
add
add
push
shl
add
fadd
add
sub
add
xor
pop
add
add
add
adc
sbb
add
or
add
outs
add
add
outs
add
add
or
outs
add
add
imul
push
mov
add
fimul
or
or
add
or
push
sub
add
or
add
or
jb
add
jo
sub
add
or
add
or
sub
add
add
add
add
adc
or
add
add
xor
add
add
adc
add
add
sub
add
or
add
or
add
jo
or
push
sbb
sub
add
or
pop
jb
add
jo
add
add
or
outs
sldt
or
lea
add
add
add
add
add
add
or
fimul
pop
sub
pop
outs
push
add
or
fimul
push
sub
push
outs
push
add
or
fimul
sbb
adc
outs
adc
add
outs
adc
add
mov
adc
add
mov
outs
adc
add
mov
adc
add
mov
outs
adc
adc
or
pop
add
or
fiadd
sub
add
add
add
and
sub
or
add
add
add
add
pop
add
gs
add
add
add
sbb
add
sub
add
add
add
add
add
stos
ret
dec
in
dec
adc
(bad)
add
add
add
inc
outs
bound
push
push
push
inc
cs
or
and
add
add
add
sbb
dec
fs
mov
addr16
mov
addr16
mov
jae
fnsave
push
xchg
mov
movs
ins
fist
ins
fild
ins
(bad)
std
mov
sti
inc
imul
xor
dec
pushf
sbb
(bad)
in
xor
xchg
(bad)
mov
sar
rol
clc
ja
add
fist
scas
or
dec
rol
and
dec
mov
outs
out
imul
outs
lea
outs
arpl
test
mov
lock
(bad)
push
pop
pop
push
adc
fcmovbe
enter
push
call
add
and
mov
aad
int
add
push
add
add
cmp
stos
bound
dec
mov
jecxz
(bad)
dec
jb
call
clts
(bad)
push
aaa
add
fistp
add
lahf
scas
stc
add
(bad)
(bad)
jl
(bad)
pop
out
aas
jmp
sbb
xchg
mov
push
in
ss
cld
call
call
fild
outs
jnp
daa
arpl
mov
cli
cli
cmps
push
loopne
inc
mov
pusha
clc
pop
inc
aas
mov
mov
shl
cmps
jne
mov
std
fwait
or
pop
call
out
dec
cdq
sbb
jb
std
addr16
pusha
add
js
ror
loope
dec
add
mov
std
(bad)
fdiv
push
cmp
lahf
fbld
and
xor
adc
ret
or
ja
shl
push
test
jae
and
rol
mov
inc
dec
mov
and
jmp
or
push
push
adc
xor
xchg
ret
pop
cmp
adc
mov
(bad)
sbb
mov
push
add
outs
ins
xor
mov
sbb
int3
jg
(bad)
std
xor
ins
mov
and
sub
jb
jg
inc
cmp
cld
or
jmp
adc
or
cmp
or
test
ret
shl
adc
or
sbb
daa
or
lahf
jl
and
je
fistp
imul
shl
icebp
inc
jmp
lods
call
cld
pop
xchg
adc
cmc
in
jmp
add
mov
std
outs
aas
rol
add
gs
or
(bad)
sti
imul
call
adc
aas
ja
push
pop
mov
cmp
add
mov
inc
mov
(bad)
xor
data16
mov
data16
xor
inc
mov
scas
(bad)
sar
mov
add
imul
das
jbe
add
lahf
ds
les
frstor
sub
leave
dec
repz
jp
inc
mov
mov
xlat
pop
pop
fdivr
push
mov
fstp
sub
int
cli
mov
(bad)
lahf
jmp
fild
jb
outs
stos
and
pop
fild
and
int3
adc
(bad)
shl
in
dec
imul
fsubr
mov
pop
sub
sbb
fsubr
mov
enter
dec
imul
sbb
std
mov
jo
repnz
dec
push
add
shl
stc
adc
pop
pop
or
sar
mov
clc
sbb
clc
lea
repnz
add
sti
in
out
jge
cmp
or
push
stc
mov
rol
cwde
div
(bad)
or
test
add
mov
stc
push
or
nop
in
lods
packssdw
scas
outs
std
dec
inc
jnp
mov
cmp
jnp
inc
div
xor
push
(bad)
mov
test
jl
jge
push
iretw
jl
and
outs
imul
scas
rcl
add
and
push
jmp
xor
xchg
and
xor
scas
jl
jno
nop
push
jae
pop
cmps
scas
jecxz
jmp
xor
scas
xchg
outs
mov
sbb
pop
shl
mov
outs
mov
push
je
xor
mov
xchg
dec
cmp
mov
outs
inc
or
scas
push
ss
pop
push
cmove
aaa
fld
lock
lahf
mov
jmp
or
jp
(bad)
out
mov
xchg
outs
dec
cmp
or
or
cwde
adc
ficomp
jb
scas
cmp
pop
repnz
ss
data16
pop
xchg
push
pop
mov
push
jl
cmp
cmps
sbb
push
lahf
xor
dec
sub
in
dec
je
(bad)
outs
sub
dec
mov
lahf
mov
mov
xchg
sbb
jl
jge
in
dec
cmp
dec
std
iret
addr16
(bad)
les
mov
call
mov
gs
add
sar
mov
stos
iret
xor
mov
push
jecxz
adc
mov
jne
mov
enter
sub
sbb
outs
leave
test
scas
xor
retf
(bad)
daa
add
inc
or
jg
cmp
jns
pop
out
stc
leave
test
mov
aad
sbb
jae
int
dec
mov
mov
(bad)
in
cs
out
cmp
(bad)
aaa
mov
and
add
int
neg
jmp
cmc
xor
ins
movs
xchg
(bad)
int3
xor
sbb
pop
sub
or
iret
push
xlat
ja
dec
fld
scas
push
mov
push
mov
lea
sub
jecxz
shl
mov
inc
adc
loop
data16
rol
loope
add
rol
rcl
pop
xchg
in
pop
jbe
adc
jbe
fs
in
std
hlt
imul
rcpps
pop
mov
stc
aam
outs
daa
xor
clc
cs
xchg
ss
fbstp
xchg
mov
sub
jmp
and
inc
mov
loopne
ror
mov
jmp
mov
push
push
shl
fcmovu
outs
(bad)
mov
jl
in
mov
es
lea
mov
(bad)
fnstcw
xchg
push
ret
jae
mov
xlat
int3
repz
div
mov
fst
neg
aad
fcomp
sbb
pop
jmp
fild
scas
pop
xor
jg
and
icebp
iret
jmp
pop
adc
pusha
out
shr
mov
retf
and
mov
xchg
mov
(bad)
xor
fild
or
out
jecxz
adc
pop
sbb
dec
cmps
js
mov
aad
jmp
retf
out
lods
test
cwde
hlt
es
test
add
jle
xchg
fidiv
push
jg
data16
adc
dec
cmp
loope
xchg
xchg
pushf
mov
ret
xor
ja
jge
inc
jno
mov
dec
jg
inc
bound
out
add
cmp
sub
sub
cs
cmp
sub
xor
add
(bad)
sub
jb
in
inc
lods
jle
xchg
mov
out
cmp
(bad)
in
ret
push
cmps
xchg
pop
sub
push
cmp
add
es
in
pop
cmp
sbb
repnz
pop
or
push
hlt
pushf
movs
sbb
jae
(bad)
clc
jmp
aaa
add
jbe
aaa
add
cmp
out
stc
cli
sbb
in
retf
int3
sahf
sar
rcl
popf
rcr
enter
xor
out
jmp
ja
das
pop
movs
arpl
xlat
test
mov
push
add
add
xor
jns
popf
sbb
sub
push
fiadd
mov
inc
sub
push
xchg
test
adc
dec
ins
and
outs
or
push
ror
mov
out
call
mov
cwde
fnsave
cmp
sub
arpl
cmps
jge
mov
into
ins
ror
inc
and
das
and
ins
ins
pop
pop
mov
sbb
lea
fmul
sbb
fisttp
sub
mov
retf
push
dec
cmp
inc
pop
clc
call
jnp
addr16
sbb
mov
mov
jae
test
inc
push
clc
sar
mov
mov
rol
icebp
and
mov
(bad)
aam
adc
div
mov
das
int3
retf
lahf
lods
cmp
push
mov
jne
jns
ret
mov
mov
enter
fld
push
aaa
repnz
out
cli
sar
push
jecxz
pushf
mov
push
retf
inc
jg
ds
int
jo
add
push
jnp
mov
aaa
jle
and
push
fxch
popa
sub
push
loope
xor
retf
in
jns
xor
or
gs
es
mov
gs
adc
push
sbb
pop
sub
shl
mov
sbb
inc
(bad)
out
in
js
cmp
xchg
sbb
dec
sub
cli
add
cmp
das
mov
iret
enter
or
adc
(bad)
rol
mov
leave
test
aam
mov
mov
in
in
or
jo
cmp
mov
push
bound
ja
dec
outs
mov
jmp
add
or
inc
cmp
nop
lahf
mov
fwait
inc
push
neg
jmp
xchg
and
xlat
push
or
sub
test
jge
inc
xchg
push
into
xchg
clc
call
in
dec
xchg
mov
xor
mov
sbb
xor
mov
mov
bound
jecxz
pop
jne
icebp
fsub
jb
mov
push
xor
cs
shl
xchg
or
pop
xchg
loopne
lods
outs
ins
imul
les
sub
push
mov
cdq
inc
mov
sub
fucom
adc
shl
clc
sub
cli
push
lahf
dec
lock
jbe
gs
sub
mov
xor
jge
in
les
in
outs
sbb
(bad)
mov
jbe
jae
mov
or
cdq
(bad)
dec
lods
pushf
ret
test
ret
fisttp
pop
inc
out
scas
out
rol
cld
cs
stos
or
mov
clc
and
dec
mov
div
sub
xchg
fsub
out
push
outs
lock
je
sbb
lea
xchg
cs
arpl
cmp
cli
jb
mov
imul
imul
jg
(bad)
mov
enter
push
fiadd
push
lods
ins
dec
pop
xchg
and
in
lea
mov
mov
inc
mov
(bad)
push
ret
dec
jb
das
jge
aas
movs
push
cmp
cwde
sub
cmp
loop
xor
cwde
ret
pop
scas
mov
loopne
adc
retf
adc
aaa
xchg
adc
mov
mov
sub
pop
out
lods
sar
cdq
(bad)
mov
xlat
stos
mov
imul
xor
cld
dec
dec
rcl
jno
push
out
push
and
mov
leave
inc
aaa
clc
sbb
enter
inc
leave
jge
scas
int3
mov
inc
ret
cmp
out
sbb
ror
loope
retf
and
out
lock
cmps
or
out
out
mov
leave
jg
jge
bound
jp
das
not
xchg
cmps
mov
push
cmp
ins
gs
push
cmps
(bad)
add
aad
or
fsubr
test
mov
cdq
(bad)
out
mov
pop
addr16
movs
or
push
xchg
ret
sub
xchg
sub
repz
jne
adc
xor
retf
lods
mov
ret
pop
add
dec
clc
push
out
pushf
(bad)
fiadd
jl
sbb
dec
les
sahf
sub
sar
jp
mov
int3
lods
enter
add
repnz
(bad)
and
lods
cmp
xor
push
mov
push
push
(bad)
fcom
sub
sub
cmp
hlt
cs
test
inc
or
mov
data16
cmps
push
sbb
out
adc
jp
pop
add
jg
int3
mov
cmp
fwait
inc
test
jb
add
hlt
or
jnp
xchg
mov
push
inc
retf
test
jp
push
push
mov
xlat
scas
or
ds
cmp
imul
(bad)
lock
shl
pop
loop
mov
mov
test
int3
and
loopne
cli
shr
fiadd
push
ficom
jg
jp
scas
mov
fcom
or
and
out
sbb
fwait
test
xchg
scas
xor
mov
mov
(bad)
mov
xor
dec
jne
data16
repz
les
out
add
mov
inc
sub
daa
cmp
or
xor
xor
lea
nop
dec
fdiv
jno
push
or
xchg
fcom
outs
xchg
or
or
(bad)
jge
cld
mov
mov
inc
cmc
aam
mov
mov
mov
addr16
mov
in
pushf
fild
push
ds
dec
xchg
pop
xchg
xchg
inc
push
jae
cwde
push
hlt
xor
mov
xor
sub
pop
jb
scas
lock
xor
mov
xor
loop
ins
jae
cdq
add
dec
outs
into
xchg
icebp
cmp
add
dec
in
data16
inc
(bad)
and
fisub
mov
repz
cmp
sbb
les
jp
mov
adc
mov
sahf
(bad)
arpl
mov
xchg
sbb
sub
lods
sub
and
sbb
arpl
mov
dec
cmp
mov
jnp
sbb
hlt
imul
aas
mov
xor
cmp
hlt
and
inc
jg
lds
sub
mov
xlat
outs
retf
ret
or
mov
pushf
push
ret
cmps
retf
pop
sub
aad
pop
aam
rol
call
sub
(bad)
shl
push
(bad)
xor
sub
dec
test
and
test
push
jnp
inc
dec
mov
(bad)
les
jnp
ror
or
pop
push
sub
out
out
and
outs
shl
mov
dec
stos
lds
push
adc
(bad)
and
(bad)
xor
cwde
xchg
std
xchg
stos
pop
cmps
xchg
fwait
(bad)
test
sub
call
push
xchg
mov
loope
test
arpl
jb
movs
push
pop
adc
push
call
inc
aad
test
loop
pusha
icebp
sub
jmp
jae
cmp
test
enter
inc
test
out
movs
lahf
mov
jge
or
in
xlat
dec
jmp
adc
or
cmp
xor
xchg
repz
cmp
ret
lahf
mov
shl
lods
popa
scas
(bad)
loope
mov
inc
mov
aam
mov
jo
leave
cmp
call
les
icebp
mov
push
xchg
ret
sbb
pushw
test
pop
sar
das
mov
cwde
test
imul
push
icebp
cli
pop
and
inc
add
cmp
push
pop
in
fistp
call
sbb
jns
call
fist
sbb
push
inc
push
cld
mov
sbb
out
call
test
pop
rcl
sub
dec
sar
out
jbe
out
ins
mov
sub
dec
sub
enter
xor
push
into
scas
mov
(bad)
xchg
leave
sub
push
sub
pop
adc
cmp
push
cmc
daa
adc
jl
and
mov
ins
jno
data16
xor
cwde
add
sub
lea
push
retf
pop
xchg
pop
fisttp
pop
jo
mov
jne
inc
test
mov
xor
and
bound
out
jecxz
inc
fisttp
loop
loopne
ins
imul
pop
int
(bad)
dec
nop
or
std
into
sbb
gs
loop
pop
fwait
repz
or
adc
ja
(bad)
mov
adc
aaa
dec
iret
sbb
mov
xchg
or
loopne
imul
dec
sbb
xchg
outs
mov
push
mov
and
adc
nop
sub
shr
push
xor
imul
push
sahf
int3
cdq
into
dec
xchg
into
(bad)
adc
cmp
addr16
cmp
nop
loop
cmp
and
and
clc
mov
sub
retf
movs
imul
inc
lahf
in
pop
mov
movs
xor
cmp
test
push
mov
xor
aad
in
jmp
jp
inc
push
and
fucomi
loope
xor
jmp
das
inc
test
push
jmp
imul
xor
adc
push
pop
fisttp
mov
dec
dec
in
sbb
lea
push
into
or
adc
sub
stos
xor
(bad)
(bad)
test
push
pop
and
or
push
pop
and
sti
push
pop
sub
dec
jnp
lods
ret
fdivr
or
xor
or
and
loope
aaa
or
aaa
adc
add
mov
adc
fbld
cmp
retf
sub
xor
fmul
mov
test
ret
and
dec
cmps
lahf
je
mov
addr16
in
aad
pop
test
xor
dec
dec
sbb
hlt
imul
into
sub
lds
retf
retf
int
mov
and
repz
fmulp
and
inc
push
test
rol
call
and
jbe
cmps
push
lods
add
stos
jb
addr16
mov
or
popf
retf
std
push
jg
mov
cmp
xchg
fs
std
sub
pop
mov
fisttp
xor
(bad)
out
das
cmp
stos
adc
xor
cmc
push
rcl
enter
in
icebp
pop
cdq
rcl
cmps
xchg
(bad)
mov
ins
sbb
fiadd
pusha
dec
or
movs
mov
mov
ja
add
dec
adc
cmp
retf
aaa
popf
adc
and
pop
inc
fwait
iret
gs
xchg
(bad)
in
mov
out
(bad)
sti
adc
aad
lea
cmps
test
fild
iret
xchg
dec
xor
pop
jbe
test
clc
push
rcl
in
enter
cmp
jle
jmp
stos
in
or
inc
jo
mov
push
call
inc
pop
and
in
jne
ja
sub
imul
push
pop
out
(bad)
call
(bad)
jle
push
ins
jae
jne
out
mov
push
xor
iret
clc
mov
pop
and
into
add
xor
sbb
push
push
jns
cli
adc
(bad)
mov
mov
push
loopne
jbe
add
stc
sahf
(bad)
outs
into
or
stos
loope
out
adc
mov
dec
lahf
int3
pop
sbb
xchg
loopne
mov
sbb
out
int3
push
cmps
jne
in
pop
cmp
addr16
mov
mov
outs
hlt
scas
fdivrp
xchg
xchg
xchg
pop
icebp
jecxz
scas
push
jmp
adc
and
cmp
mov
into
dec
call
stos
push
mov
ins
pop
jns
push
inc
loop
push
xor
repnz
mov
sbb
dec
xor
add
inc
sahf
iret
add
ds
cmp
xchg
ja
mov
push
mov
adc
cmp
pop
ds
and
cmps
ret
fistp
mov
xchg
inc
mov
arpl
push
sbb
jl
inc
fwait
lods
inc
call
cld
dec
or
sub
sbb
out
add
and
sub
fs
loope
jb
mov
jge
imul
stc
in
mov
out
push
xchg
test
xchg
xchg
adc
mov
mov
aas
adc
stos
adc
popf
out
push
nop
xchg
pop
sub
adc
sub
cmp
call
jo
mov
adc
movs
mov
(bad)
fadd
test
(bad)
mov
sub
inc
sbb
test
or
mov
xor
test
cmp
inc
aas
xchg
xor
sub
aad
xchg
ss
sub
sbb
jne
add
in
aad
push
mov
shl
sub
cs
jnp
mov
clc
sub
loope
popf
fwait
std
out
adc
push
cmps
push
mov
jecxz
push
mov
(bad)
shl
loop
nop
dec
push
inc
movs
test
push
(bad)
sub
mov
sub
shl
push
addr16
adc
enter
sahf
dec
arpl
xchg
imul
xchg
pop
imul
test
push
push
sti
movs
leave
xchg
pop
aaa
inc
(bad)
cli
jae
mov
fist
and
push
xchg
popa
jno
cdq
sbb
stos
cmc
jmp
fistp
idiv
sbb
clc
test
mov
out
repz
sbb
idiv
aas
add
cwde
mov
mov
xor
sbb
pop
call
pushf
push
jmp
dec
stos
xchg
cmp
sub
iret
jmp
sub
mov
rcr
mov
sub
out
push
pop
or
pop
sbb
mov
and
jns
fcom
jp
xor
scas
icebp
lahf
and
cs
inc
cdq
fs
push
jo
cmps
mov
popf
fsubr
jge
inc
out
arpl
mov
lea
push
shr
ds
out
fiadd
cdq
sbb
std
mov
adc
sub
xlat
and
imul
clc
sbb
jmp
scas
ror
rol
pop
or
cli
mov
jb
lods
ficomp
or
lock
lds
ja
cmps
sbb
xor
test
inc
mov
popa
popa
mov
push
lods
pop
inc
mov
dec
sti
bound
push
movs
sbb
cmps
setno
add
sti
or
fs
and
sti
mov
or
add
sti
repz
jno
jle
adc
cwde
mov
xchg
or
data16
pop
push
xchg
xchg
inc
add
push
push
fwait
dec
pop
cmps
fnsave
loope
cmp
inc
push
outs
shr
aaa
loope
js
mov
out
sbb
push
sbb
lock
lods
aaa
mov
or
std
outs
jae
push
inc
sbb
push
mov
pop
xchg
mov
add
jno
adc
inc
aam
xor
mov
loope
xchg
jmp
xor
pop
adc
nop
iret
lods
cmp
mov
adc
or
add
push
scas
jbe
les
inc
mov
out
or
or
daa
push
loopne
in
outs
shl
sbb
inc
cld
pop
mov
test
in
icebp
clts
or
mov
fdiv
inc
sar
add
and
or
cli
ret
loop
imul
lock
rcr
mov
adc
lock
loopne
mov
lds
push
push
sub
movs
jmp
jmp
pusha
fucom
imul
ret
dec
into
mov
add
in
cld
pop
jmp
ud1
lds
popa
dec
push
add
sbb
fild
ds
xchg
pop
enter
lds
aaa
and
dec
mov
fbstp
ins
mov
(bad)
inc
(bad)
mov
xor
or
ss
cwde
scas
fnstsw
inc
inc
mov
jl
mov
arpl
loopne
or
in
fbld
mov
cmp
push
cmps
popa
pop
scas
aad
fisubr
cmps
pop
jmp
push
imul
jmp
xchg
inc
sbb
or
popf
mov
popa
mov
mov
aad
sub
mov
xchg
adc
fdivr
popf
je
push
imul
push
lds
or
inc
pop
out
cmps
mov
push
je
cmp
imul
jmp
in
cld
cmp
mov
push
inc
lds
xchg
loope
mov
or
loop
push
lahf
sub
arpl
cmps
ror
xchg
mov
mov
rcr
out
mov
pop
add
je
aad
fidivr
icebp
out
add
pushf
xchg
or
repnz
cmp
push
setbe
jno
loopne
outs
cmp
cmc
gs
adc
enter
js
hlt
xchg
and
xchg
mov
int3
or
fstp
pushf
mov
mov
shl
pop
xchg
mov
inc
add
daa
adc
sbb
push
mov
mov
pop
or
inc
mov
pop
imul
mov
cmp
cmps
aas
imul
push
ret
jl
push
jns
cmp
stc
daa
dec
xor
or
dec
sti
rcr
or
inc
xchg
aas
fbld
pop
inc
add
js
lock
inc
jnp
in
das
jno
pop
aas
movs
sub
push
push
(bad)
xchg
jne
cli
iret
call
xor
repnz
and
pop
pop
into
inc
and
fst
dec
add
sbb
(bad)
jecxz
mov
std
test
jo
mov
sub
xchg
enter
sbb
pushf
movs
and
fiadd
rcl
mov
retf
inc
int3
xchg
xchg
inc
pop
inc
mov
inc
jmp
cmps
stos
mov
mov
or
fcomp
mov
rcl
dec
movs
cmp
inc
pop
shr
aam
mov
std
repnz
stos
mov
pop
xor
dec
ret
out
sar
adc
inc
xor
xor
dec
dec
xchg
movs
sbb
lea
cmc
leave
in
sbb
dec
jmp
mov
ds
into
fcmovnu
sbb
push
add
mov
ror
pop
imul
test
cli
mov
or
ror
out
dec
imul
cmp
cmp
out
cmp
xor
and
mov
mov
push
fcmovbe
adc
mov
mov
pushf
inc
in
mov
dec
hlt
cwd
push
push
add
cli
xchg
jp
push
xor
pusha
idiv
xchg
inc
adc
mov
mov
ror
fidiv
or
sti
inc
sbb
pop
paddb
and
sbb
sub
div
dec
rcl
pop
xlat
adc
push
push
jmp
xlat
xor
fisubr
xchg
out
xor
mov
shr
xchg
sub
cmp
inc
aam
sub
dec
cmp
mov
fiadd
in
push
xor
xchg
(bad)
cmp
adc
mov
jns
or
dec
sbb
jecxz
sbb
movzx
add
mov
aad
retf
pop
scas
call
movs
sbb
push
xchg
xor
into
or
pop
jae
fisub
dec
sub
outs
js
(bad)
add
aam
cwde
mov
pushf
jle
push
out
cmp
test
cmps
(bad)
pop
nop
mov
mov
mov
xchg
clc
fld
bswap
cmps
imul
jmp
in
popa
jb
and
in
and
mov
aad
add
imul
ror
mov
movs
add
test
lods
jmp
rcl
mov
in
loope
inc
lods
cmp
mov
and
push
hlt
fnstenv
add
jo
inc
lods
hlt
inc
fild
cmps
aaa
stos
xchg
pop
jae
in
outs
mov
jb
aam
inc
sar
adc
repz
je
rcl
dec
mov
add
fisubr
cmp
mov
fsubr
pop
neg
jb
sub
enter
or
xor
sub
(bad)
jmp
rcl
sbb
sbb
fimul
aad
lea
ja
aam
mov
adc
inc
shr
cwde
rcl
jnp
mov
xor
and
cmp
push
sub
push
outs
xor
mov
xchg
push
(bad)
icebp
push
mov
add
cmp
or
mov
sbb
cmp
jge
mov
ds
clc
or
fwait
push
scas
mov
pop
dec
dec
fst
ret
pop
rcr
fwait
fwait
pusha
in
add
sub
sbb
popa
cli
lahf
iret
stos
movs
inc
dec
mov
sub
aam
ds
jg
add
das
mov
ds
outs
ins
cli
ja
and
mov
call
cmps
mov
jb
pushf
test
fst
push
mov
xor
mov
aam
lea
jmp
daa
test
icebp
jg
rcr
and
mov
push
mov
repnz
in
mov
pop
out
dec
aaa
pop
stos
mov
leave
in
or
sbb
dec
cmp
jp
jecxz
xchg
jo
mov
mov
mov
outs
rcr
sub
cmp
(bad)
rcr
(bad)
sbb
lea
push
xchg
jmp
or
cmps
sub
add
push
pushf
idiv
mov
lahf
ss
cmp
push
shl
ins
call
scas
fadd
arpl
pop
adc
imul
lock
cli
mov
sbb
es
jae
shl
add
movs
jns
ss
cmp
out
addr16
push
fisub
out
ret
xor
lea
xlat
xor
or
in
xor
movs
movs
cld
mov
or
jb
and
or
pop
jno
sti
movs
pushf
xchg
repz
aas
mov
adc
mov
repz
or
out
movs
addr16
inc
adc
push
and
in
cmp
adc
gs
movs
xlat
cwde
js
stos
mov
call
les
jmp
das
mov
fst
(bad)
in
mov
cmp
scas
cmp
in
in
fwait
xor
push
cmp
lds
pop
jge
rol
test
scas
xchg
pop
clc
int3
je
mov
xor
and
sar
or
jno
mov
test
fstp
stos
test
les
mov
jb
or
mov
fdivr
in
jmp
jle
lock
enter
add
and
push
push
test
jp
jo
xor
das
das
(bad)
ror
jmp
push
xchg
inc
add
addr16
pop
pop
sbb
adc
dec
inc
push
adc
xchg
fimul
dec
xor
cmps
mov
mov
fild
mov
sbb
cmc
jb
add
sub
or
in
mov
dec
aas
sti
jmp
cmp
pop
leave
call
adc
jg
lahf
mov
jmp
inc
mov
cmovl
nop
push
gs
mov
cmp
dec
cmps
jl
sbb
pop
adc
mov
sub
ror
or
and
icebp
jo
dec
dec
mov
std
jle
cwde
jo
(bad)
out
mov
mov
xchg
jbe
test
loop
xchg
sahf
push
dec
pop
mov
dec
and
fwait
inc
pop
cwde
(bad)
lods
push
ja
shr
fwait
xchg
call
cwde
cdq
fstp
sbb
xchg
and
push
lds
mov
shl
and
mov
into
lods
xor
push
movs
lds
cmps
retf
and
or
lahf
push
and
mov
fisttp
push
fcom
mov
not
rol
das
mov
push
sub
add
cmp
xchg
aam
fsub
push
and
mov
int
dec
mov
movs
(bad)
xor
aaa
jns
jae
aas
xor
xchg
out
ficomp
mov
(bad)
ds
dec
push
dec
mov
pop
repnz
mov
push
clc
push
rcr
pop
pop
push
mov
and
fdivr
arpl
dec
dec
push
je
and
cs
push
adc
or
mov
call
test
(bad)
fsubr
(bad)
jmp
fdivrp
xor
sbb
or
lods
std
mov
cmovg
stc
push
int
jg
sar
add
sub
jne
mov
clc
pop
add
push
cmc
push
mov
stos
sub
sbb
push
out
sub
out
into
mov
aas
xchg
cwde
fdivr
(bad)
movs
aaa
jne
pop
jle
fs
ficom
or
aad
ret
dec
xor
cli
sar
aas
inc
(bad)
jecxz
dec
push
scas
add
push
inc
sub
cmp
xor
(bad)
sub
lock
aaa
test
imul
cmp
jmp
pop
jno
es
sbb
fiadd
out
jmp
mov
sbb
movs
shl
jne
and
fstp
(bad)
push
int
call
out
xchg
imul
scas
(bad)
cmps
sub
leave
push
xchg
mov
jne
cmp
jmp
call
ja
inc
or
retf
retf
and
push
xchg
add
cmp
rcl
push
bswap
fwait
ins
addr16
xlat
(bad)
popf
xchg
dec
bound
jmp
cmp
mov
push
inc
daa
sti
test
inc
aas
jo
outs
loopne
cmps
mov
jae
test
jb
mov
pop
push
or
stc
dec
neg
jmp
mov
lock
jle
and
outs
jl
sub
loope
lock
cmp
mov
outs
std
mov
mov
out
sub
dec
js
in
xchg
in
std
retf
pop
cmp
(bad)
out
jb
sar
dec
ds
xchg
lock
test
lock
popf
fwait
pop
sub
adc
daa
sbb
dec
jmp
scas
cmp
pop
lock
es
daa
cld
data16
imul
xor
mov
xchg
or
(bad)
lods
cmp
sbb
xor
fwait
mov
(bad)
std
pop
outs
mov
js
icebp
xchg
push
mov
push
and
les
or
call
ror
or
sbb
add
mov
pop
sbb
add
hlt
xchg
(bad)
in
test
add
mov
cmp
ins
jnp
movs
mov
cmp
ss
fiadd
pop
loope
sbb
out
jb
xchg
imul
push
push
cdq
jnp
jl
int
or
sub
push
adc
or
cmp
sub
or
stos
add
test
cld
xor
loop
fistp
fisubr
out
inc
push
ds
test
popa
bound
xchg
push
mov
push
sub
lds
and
into
in
push
hlt
out
and
sbb
mov
test
dec
fs
fbld
popf
je
mov
ror
sub
repnz
sahf
imul
inc
pop
loopne
test
out
int
mov
jle
pop
in
retf
in
cmp
int
in
cmps
lods
mov
jp
test
push
adc
clc
cs
sub
popa
out
cmp
mov
push
ja
mov
fs
push
xor
mov
cmp
or
pop
mov
lods
cmp
pop
popf
mov
aaa
push
and
ffree
and
jp
icebp
cld
mov
add
stc
xchg
push
mov
rcr
out
enter
dec
dec
push
push
in
ret
mov
into
mov
and
mov
scas
lds
dec
mov
sbb
shl
xchg
dec
jae
inc
sbb
sbb
test
lea
jnp
sbb
and
cmp
xor
lock
les
stc
pop
inc
cmp
xchg
jns
mov
xor
idiv
ror
push
std
xchg
jne
jg
ins
cs
mov
pop
shl
sbb
aad
sub
xchg
mov
or
pop
sahf
in
jp
in
leave
sbb
or
pop
mov
imul
mov
adc
test
xchg
clc
and
imul
add
fwait
adc
cmp
mov
dec
add
cmps
out
jb
inc
pop
push
ss
inc
sbb
adc
retf
and
repz
ret
lea
stos
pop
pop
cmps
xor
into
lods
cmp
gs
pop
sub
sbb
xchg
lds
sbb
cmps
add
or
dec
aad
xlat
cmp
jge
mov
jo
dec
jecxz
mov
fisubr
mov
in
inc
push
call
outs
xor
xchg
into
retf
adc
jle
rcl
cmp
or
inc
ss
imul
adc
sbb
or
and
sbb
xor
adc
pop
jns
aad
and
pop
mov
cmps
stos
das
test
packssdw
mov
fisubr
cmp
cmp
inc
xchg
jle
ret
xor
dec
sub
lock
imul
xchg
pop
not
int
jmp
call
adc
(bad)
and
mov
loopne
bound
repz
and
or
out
sub
adc
inc
cdq
shl
add
lods
push
pushf
mov
cmp
push
movs
mov
dec
cmp
shl
xor
enter
aaa
sub
adc
and
pop
sub
pop
mov
into
xchg
sar
mov
cmp
mov
sar
aad
outs
in
mov
ins
adc
push
out
add
inc
ror
shl
and
push
loop
push
aas
shl
cmp
(bad)
stos
add
call
popa
adc
adc
jecxz
pop
(bad)
call
push
out
lea
dec
lods
dec
fist
and
mov
fsub
scas
cmp
ins
jmp
test
(bad)
scas
repnz
mov
adc
mov
addr16
outs
int
pop
in
and
adc
fmul
mov
sti
js
fdiv
ja
pop
ror
dec
or
mov
bound
and
jbe
repz
outs
push
bswap
xchg
inc
call
inc
cmps
repz
hlt
out
jmp
(bad)
and
jle
(bad)
and
call
mov
mov
mov
loop
mov
fwait
stos
sub
dec
mov
je
cld
fdivr
cmc
cmp
inc
int3
imul
push
jge
jb
retf
mov
jp
cmp
ror
inc
push
add
fisub
rcl
mov
and
ss
fs
mov
jl
sahf
and
push
sub
sar
jae
xchg
inc
cmp
(bad)
pop
push
mov
lods
push
dec
dec
arpl
sar
ja
xor
jmp
scas
loopne
les
out
repnz
inc
jle
dec
in
xchg
jo
or
std
or
pop
adc
push
xor
aad
stos
mov
movs
dec
dec
inc
mov
mov
fdivr
lods
stos
stos
aaa
add
xchg
inc
mov
dec
test
rcr
outs
xchg
int
and
mov
in
in
xchg
cmc
and
cmp
jno
ror
pop
not
fld
mov
jle
pop
pop
mov
mov
fistp
pop
xlat
inc
push
dec
xor
xor
(bad)
xchg
mov
and
add
es
cmp
lods
call
das
adc
xchg
imul
sbb
mov
movs
mov
xor
jne
fistp
mov
ficom
adc
mov
std
es
fnsave
popf
(bad)
loopne
and
mov
pop
repz
sbb
fstp
and
inc
mov
xchg
mov
push
stos
movs
into
(bad)
test
leave
mov
inc
(bad)
repz
jno
cmp
jno
jae
in
outs
dec
sbb
aas
ds
adc
gs
pushf
popa
test
inc
arpl
jae
mov
leave
imul
pop
adc
leave
scas
or
ja
mov
int3
mov
xchg
test
(bad)
rcl
or
test
dec
inc
xchg
mov
rol
push
cmps
adc
cmp
fxam
ins
popa
cmps
out
sti
pushf
repz
sbb
dec
push
jbe
in
je
sbb
idiv
clc
sbb
std
add
mov
dec
cld
xchg
daa
ret
jle
outs
push
mov
mov
cmp
cmp
sbb
ins
imul
push
jbe
in
inc
jbe
jge
dec
nop
jbe
mov
mov
mul
cmps
in
int3
and
cmp
adc
jle
mov
sub
mov
fwait
push
std
lea
mov
shl
pop
aad
add
cdq
(bad)
sbb
mov
mov
(bad)
stos
nop
cli
inc
pop
adc
out
rdtsc
cmp
fwait
adc
or
mov
pop
adc
cmp
leave
adc
popa
shl
cmp
arpl
xlat
in
inc
push
push
inc
cmp
jecxz
popa
push
mov
and
(bad)
jge
into
ficomp
jmp
mov
scas
add
or
retf
and
dec
mov
inc
icebp
loopne
sbb
in
or
push
mov
push
shr
mov
sub
xchg
retf
lds
enter
jo
out
mov
ins
fbstp
push
ins
add
add
add
scas
mov
push
xor
(bad)
movs
xchg
dec
movs
mov
inc
adc
movs
jecxz
in
xchg
sbb
aad
lahf
fidiv
add
mov
call
push
aaa
xor
sti
adc
test
xchg
dec
sbb
gs
or
enter
mov
clc
pop
push
and
xchg
mov
xor
in
fsub
and
sbb
dec
call
fild
rep
pop
outs
pusha
or
arpl
jae
mov
push
fsub
addr16
and
pop
pushf
mov
retf
mov
out
ja
cdq
call
(bad)
(bad)
stos
inc
cmps
arpl
pop
test
aaa
jo
lods
xchg
cld
inc
repnz
push
cmp
sub
add
jmp
mov
xor
movs
xchg
lds
mov
outs
sub
call
enter
mov
dec
xor
(bad)
sbb
mov
sbb
lods
push
push
out
out
adc
xor
cmp
dec
mov
ss
les
cmp
bound
ret
inc
push
inc
fild
push
fidiv
jl
aaa
jmp
das
cmovl
mov
iret
cmp
dec
mov
adc
xor
loop
or
jmp
aam
loope
mov
add
or
retf
(bad)
movs
push
xor
enter
mov
sub
sbb
push
jecxz
pop
pop
sub
dec
adc
pop
add
fiadd
lds
cmp
jbe
pop
add
in
jb
xchg
cmp
imul
jae
sbb
mov
int3
arpl
xor
or
mov
xor
push
mov
aas
mov
mov
inc
out
int3
xchg
mov
push
loope
pop
cdq
daa
xchg
push
push
setne
or
xor
inc
test
shl
inc
sub
sar
test
xchg
push
fnstcw
sub
mov
push
push
sbb
sbb
into
cmp
push
or
clc
sub
shr
shl
sahf
and
dec
push
(bad)
xor
popa
inc
and
and
cld
mov
or
in
pop
mov
pop
push
and
mov
nop
cmps
into
pop
push
cmps
inc
pop
add
mov
bound
movs
outs
and
and
adc
into
inc
popf
movs
sahf
xchg
cmps
mov
sahf
pop
jnp
clc
xchg
outs
lock
fcmovu
cmp
pushf
ja
sar
scas
cdq
pop
loop
jns
aam
arpl
out
pop
cs
sbb
jecxz
push
pop
das
fsub
ss
inc
and
popa
loop
adc
lea
fisttp
or
lahf
ja
frstor
mov
jle
push
xchg
xor
mov
mov
fsubp
xor
mul
cmp
pusha
ficom
pop
outs
std
jle
imul
rol
iret
cmp
out
lods
add
xor
icebp
and
sub
ja
mov
data16
jg
ror
test
mov
int
repz
loope
movs
int
sub
add
jl
pop
xor
mov
cmps
sbb
pushaw
(bad)
mov
repnz
in
fwait
pop
arpl
cmp
out
add
leave
stos
push
shl
fbld
fwait
jns
pop
fdiv
(bad)
test
lahf
sti
and
(bad)
in
mov
iret
lock
lods
push
and
outs
xchg
push
inc
inc
jmp
out
scas
pshufw
sub
cmps
jmp
sub
add
xor
(bad)
mov
cdq
pushf
ds
loopne
push
lds
push
pop
jp
clc
sub
(bad)
pop
hlt
out
dec
pop
and
repz
cmc
cdq
sub
das
mov
ja
add
loop
add
cmp
jl
fincstp
push
iret
in
jae
(bad)
ins
in
stos
sbb
jecxz
jae
cdq
out
stos
test
cdq
lock
sbb
cmp
cmp
inc
sbb
(bad)
es
iret
mov
in
into
in
or
div
adc
fbld
xor
xor
out
mov
arpl
lahf
adc
call
dec
push
int3
xor
pop
jnp
lds
push
cld
stc
cmp
or
pop
setg
and
cli
jp
in
pop
cmps
pusha
cmovbe
fwait
cld
es
push
fs
mul
(bad)
and
push
xor
and
loopne
in
jb
xor
push
jo
sbb
xor
cdq
sbb
sbb
(bad)
jp
(bad)
jno
and
mov
mov
adc
test
popw
push
inc
pop
sub
cmp
mov
(bad)
and
lods
into
cmp
mov
jl
jns
inc
out
or
push
push
lods
cdq
ins
out
push
push
js
or
lods
das
xchg
subps
jl
or
in
lock
in
jno
into
adc
xor
push
into
jmp
cli
dec
pop
push
fnstsw
cli
cmp
mov
idiv
test
inc
inc
or
pop
lock
lea
add
jb
push
push
pop
imul
fidivr
scas
or
fnsave
into
pop
xor
pop
stos
fiadd
sar
in
mov
shl
cmp
ins
xor
mov
or
daa
mov
shl
pop
or
rcr
adc
aaa
cmp
adc
sub
stos
pop
fs
aas
mov
int
mov
sysret
mov
jmp
in
xor
clc
lahf
loopne
aas
push
ins
movs
mov
js
fwait
adc
mov
popa
sbb
test
mov
cmps
xchg
push
shl
pop
inc
sbb
fldenv
idiv
pop
aam
mov
mov
jb
push
dec
repnz
ins
sbb
mov
inc
push
iretw
cdq
xchg
add
pop
sub
xor
push
lods
and
sbb
push
sbb
xchg
or
xor
cli
fbld
jecxz
aad
mov
cmp
outs
push
int3
cmc
pop
into
idiv
or
add
out
dec
add
test
jp
lea
mov
mov
mov
sub
cmp
retf
add
sar
imul
dec
mov
popf
repnz
mov
sbb
je
dec
mov
out
cli
arpl
adc
jo
(bad)
cmc
shl
test
xchg
mov
fmul
cdq
call
out
clc
popf
xchg
es
cmp
inc
outs
popa
and
push
xchg
xchg
pusha
lock
pop
and
fisttp
mov
mov
jne
nop
xor
jns
arpl
aaa
pop
or
fsubr
sahf
pop
sbb
pushf
aas
jnp
repnz
jmp
iret
loopne
daa
mov
inc
ins
cmps
sahf
and
gs
sub
popf
cdq
nop
mov
dec
inc
sbb
fidiv
(bad)
sar
pushw
adc
push
mov
retf
rol
je
shl
add
adc
xchg
adc
or
push
fsub
adc
sub
es
(bad)
out
leave
fidivr
xchg
sub
sub
mov
mov
mov
repz
mov
ret
call
or
test
movd
xchg
movs
mov
test
out
fwait
sahf
pop
mov
jle
mov
pop
loopne
xchg
jmp
test
jb
in
xor
dec
add
cmc
mov
in
mov
jns
dec
inc
jecxz
sub
rcr
xor
aam
mov
xchg
add
pop
sub
test
sbb
push
mov
jbe
sbb
loopne
in
mov
ss
push
and
jle
jl
inc
push
popa
sbb
in
gs
sub
std
ret
scas
push
bound
les
xlat
mov
or
in
and
cmp
fsubrp
xor
mov
push
lods
int3
jle
out
lock
inc
push
push
repnz
cmp
imul
push
jmp
mov
fwait
cmp
mov
or
mov
fiadd
pop
out
fistp
pop
int
inc
pop
mov
pop
bound
cmps
mov
(bad)
pop
loope
inc
mov
hlt
rol
ret
hlt
sbb
sbb
jmp
repz
jmp
sbb
pushf
inc
mov
(bad)
imul
les
fisttp
sti
leave
jns
sahf
mov
mov
call
ins
mov
add
mov
scas
aaa
push
(bad)
stc
pusha
or
cs
push
out
jmp
sbb
push
sbb
xor
sub
and
out
mov
xchg
xlat
jmp
fidivr
sbb
in
int3
xchg
pop
pop
jne
pop
popa
pop
cmc
imul
call
xchg
mov
mov
arpl
adc
jl
or
cmp
push
xor
ficom
jbe
(bad)
out
jp
icebp
xchg
pop
cmp
inc
aam
movs
clc
dec
lea
pop
not
loope
xchg
imul
push
xor
ins
jp
inc
std
outs
mov
or
outs
or
iret
pop
cmp
out
aas
xchg
xchg
arpl
test
icebp
jp
repnz
in
cmp
push
cmp
ss
cmp
mov
test
inc
pop
scas
imul
xchg
int
in
push
jae
imul
into
sahf
inc
xchg
fsubr
sub
imul
fstp
das
fwait
xor
mov
adc
stc
mov
mov
jno
or
mov
shl
and
addr16
mov
push
add
ret
jb
in
sbb
lock
add
nop
or
shr
mov
out
outs
push
std
fisttp
(bad)
pop
pop
jo
out
add
push
sub
pop
outs
cmp
(bad)
jns
jp
sbb
std
sub
push
pop
jbe
cld
cmp
inc
jle
dec
enter
mov
jl
pop
push
dec
in
mov
push
adc
mov
shl
ror
and
xchg
push
pusha
dec
hlt
in
repnz
repz
and
in
pop
jo
lds
or
jmp
push
add
sub
inc
push
pop
into
fisub
lods
mov
jecxz
jmp
pop
mov
shl
cli
pop
push
mov
clc
fsubr
add
nop
outs
push
xchg
push
push
add
mov
shr
inc
cmps
pop
fcmovnu
adc
int
xchg
inc
daa
mov
xchg
clc
push
rcr
and
shl
or
cwde
jno
mov
ins
mov
fs
push
lea
cmc
lahf
add
dec
in
shl
popa
push
cmp
add
arpl
xchg
adc
push
mov
inc
fs
xchg
stc
enter
jbe
jmp
adc
adc
jbe
pop
inc
adc
jo
ret
pushf
jno
cdq
dec
jns
vpshlb
rol
push
(bad)
and
icebp
popa
push
cld
mov
scas
dec
daa
data16
jo
pop
push
mov
call
test
jb
fs
ret
mov
retf
ret
add
xchg
pop
jmp
mov
adc
inc
les
dec
jecxz
(bad)
mov
jmp
or
fistp
push
ss
iret
(bad)
lock
les
repz
jl
cdq
push
mov
daa
pop
push
pslld
loopne
adc
in
jbe
cwde
pop
adc
sti
adc
push
scas
leave
mov
(bad)
xor
adc
retf
test
sbb
ret
inc
jo
in
bound
in
data16
add
mov
(bad)
pop
or
lock
or
aad
cmp
mov
sbb
jle
mov
pop
in
mov
enter
push
mov
cmp
out
stos
pop
call
sub
jne
in
mov
cmp
out
xchg
inc
fimul
xchg
pop
(bad)
(bad)
mov
mov
shr
rcl
sub
fld
pop
or
dec
sar
icebp
mov
adc
sub
out
pop
icebp
sahf
nop
push
dec
push
xor
xor
lea
cs
stos
jl
imul
mov
jg
cs
mov
cmp
pop
xor
jp
jg
push
mov
add
iret
or
in
xchg
(bad)
push
or
in
add
add
cmp
xabort
add
pop
or
test
ins
pop
sbb
mov
imul
out
dec
push
out
xor
jnp
mov
retf
arpl
loope
icebp
push
adc
call
mov
cmp
iret
sub
je
ins
cmp
cmc
jns
cwde
xlat
push
xor
inc
lods
sbb
in
int
and
mov
fwait
pop
es
mov
add
ja
sub
(bad)
or
mov
ja
pop
es
es
mov
inc
xchg
mov
movs
dec
add
push
and
mov
mov
and
add
icebp
pusha
dec
jbe
aam
sbb
aas
fs
xchg
ret
push
arpl
push
(bad)
xchg
repz
xchg
mov
(bad)
enter
inc
inc
(bad)
xlat
mov
stos
adc
cmp
pop
and
movs
jne
add
pop
rcl
out
cmc
outs
push
mov
retf
cdq
xadd
popa
dec
fs
mov
cmc
or
daa
and
xchg
ret
xlat
dec
jp
dec
inc
push
repnz
inc
aaa
retf
xor
stos
xor
xchg
pop
sbb
neg
add
pop
fisttp
ror
mov
push
repnz
mov
in
ret
jecxz
movs
pop
and
ja
in
mov
fcomip
sub
cmp
jne
add
inc
cmp
mov
inc
shl
mov
mov
into
inc
xor
adc
inc
js
mov
push
aaa
std
scas
or
cmp
jmp
sbb
and
dec
arpl
hlt
pop
rcl
mov
je
xchg
(bad)
mov
sub
push
push
xor
inc
iret
popa
and
add
jl
xlat
fwait
cmps
enter
imul
add
add
and
pop
xor
movs
dec
add
jmp
pop
xchg
xchg
cmps
je
mov
dec
sbb
das
rol
mov
or
mov
or
(bad)
jo
int
jne
int
mov
or
push
jl
push
xor
fstp
push
leave
scas
daa
cmp
ins
adc
jb
sbb
mov
fist
dec
loopne
int3
xchg
dec
adc
xchg
and
retf
cdq
inc
push
sahf
stos
mov
xchg
sub
(bad)
xor
mov
popf
js
mov
pop
xor
xchg
xchg
test
fwait
and
dec
xchg
add
mov
push
sbb
jo
mov
inc
jle
mov
dec
(bad)
fcom
ror
sub
inc
hlt
mov
jns
dec
xchg
movs
in
bound
adc
out
jmp
aad
push
lods
jg
and
adc
and
jnp
jbe
out
jno
xchg
mov
mov
sbb
cmp
dec
je
ins
fs
dec
cmps
(bad)
icebp
mov
mov
ss
fst
rol
add
add
or
retf
pop
or
xchg
adc
in
test
push
stos
and
and
and
mov
cmp
mov
into
sti
iret
iret
xor
addr16
aaa
jecxz
push
pop
out
ret
ins
cmp
xchg
and
fimul
cmp
mov
cs
inc
jecxz
add
sub
mov
out
daa
movs
outs
cmc
dec
mov
mov
pop
fsubr
jmp
sub
bound
cmp
test
mov
mov
pop
stos
into
push
shl
enter
mov
xor
es
cdq
(bad)
jl
sub
cmp
je
sbb
loope
xor
xchg
push
cmc
xor
arpl
pop
push
mov
adc
add
or
ficomp
jl
stos
rcr
ret
push
fstp
fisub
xchg
shl
xchg
cwde
call
sub
push
or
gs
test
shl
scas
cwde
inc
sbb
into
push
call
retf
mov
aam
xor
imul
xchg
scas
mov
mov
movs
sbb
idiv
push
popa
inc
push
xchg
sbb
pop
icebp
(bad)
xchg
cmc
mov
mov
shl
or
iret
adc
jo
pop
cmp
dec
ds
iret
lock
cmp
xchg
aas
cli
retf
add
int
push
cmc
cmp
push
mov
xor
dec
add
sbb
in
out
adc
or
jmp
stos
ret
pop
(bad)
cmp
xor
aad
cmps
sbb
inc
pop
xor
jno
aam
test
ins
int
jmp
test
fdivr
test
retf
js
ds
into
sbb
adc
shl
mov
fiadd
(bad)
sbb
pop
inc
stc
into
sub
push
(bad)
push
lods
mul
out
test
cmps
adc
pop
pop
xor
(bad)
pop
add
inc
in
mov
jo
mov
mov
xor
lea
add
add
xor
add
dec
lahf
pop
in
mov
push
pop
cdq
xlat
push
(bad)
and
fisttp
pop
outs
and
sbb
sbb
sbb
add
mov
cmp
es
and
pop
fist
fs
lea
pusha
js
dec
mov
scas
ret
mov
sub
mov
jmp
cwde
loopne
int
fcomp
and
fdiv
es
xchg
mov
fsubr
dec
movs
mov
mov
shl
aam
push
pop
(bad)
fcomp
inc
cmp
sub
call
mov
inc
aas
sub
xor
call
adc
call
and
lea
jne
add
mov
(bad)
fucomip
inc
cmp
fidiv
ror
iret
xchg
fwait
icebp
xor
(bad)
jns
and
adc
pushf
jmp
xchg
inc
fsub
sub
movs
jo
mov
push
adc
xor
mov
shl
sbb
cld
sub
jno
lods
sahf
xchg
shl
cmp
sbb
lahf
pop
cmp
out
mov
es
popf
xor
jmp
fstp
leave
mov
das
mov
inc
cmp
dec
addr16
dec
adc
out
sub
mov
jne
(bad)
push
push
mov
fmul
clc
pop
inc
pop
cs
ins
pop
mov
arpl
sub
xchg
xlat
jge
(bad)
in
push
(bad)
xchg
std
je
xor
mov
pop
pusha
xchg
test
int
pushf
(bad)
xchg
push
add
dec
data16
pop
add
push
mov
out
cs
dec
cdq
aam
mov
je
fsub
loope
mov
xor
(bad)
in
or
fs
iret
fdiv
je
out
aam
ror
add
je
or
repnz
or
outs
fild
mov
loope
icebp
ins
lods
sahf
enter
or
mov
mov
inc
sbb
cmp
pusha
ss
xchg
push
add
sub
in
inc
push
xchg
ffree
shr
(bad)
sub
mov
cmps
cmps
or
cmp
(bad)
push
push
shl
mov
cmp
in
outs
loopne
jl
cmps
xchg
int
std
fld
inc
rcl
push
add
hlt
mov
movs
int3
lds
pushf
push
push
jge
addr16
mov
mov
mov
and
(bad)
push
retf
mov
mov
push
adc
mov
mov
int3
xor
ins
sub
movs
sub
mov
or
call
sub
pop
adc
cmp
not
jno
imul
in
add
sbb
sbb
add
into
(bad)
dec
push
fwait
leave
add
into
in
scas
ror
mov
outs
stc
sbb
(bad)
lods
in
mov
sub
xchg
jge
inc
sbb
mov
ds
stos
and
xchg
in
and
retf
inc
or
pop
pop
add
and
cmp
js
jge
(bad)
jb
or
rcl
jns
sbb
mov
sbb
xor
sbb
lahf
call
out
mov
(bad)
rol
dec
jle
ins
push
into
push
mov
xchg
mov
loop
into
push
cmp
xor
xor
lea
push
or
jge
lds
or
ret
jg
mov
inc
rol
shl
inc
xchg
not
bound
(bad)
repnz
dec
add
addr16
push
xchg
add
xor
or
sbb
push
mov
mov
inc
push
inc
stc
test
test
mov
and
add
inc
sub
adc
cs
sbb
aad
(bad)
mov
jmp
outs
xchg
pop
retf
in
inc
mov
xchg
jmp
push
sbb
outs
sub
xchg
dec
test
in
dec
test
mov
mov
shr
xchg
jo
mov
push
pop
bound
mov
xchg
pop
pop
cmp
lea
mov
ss
push
mov
xor
aaa
inc
pop
loopne
jmp
fldenv
sub
test
xchg
imul
xor
and
ins
ret
sbb
pop
xchg
repnz
sbb
sar
daa
pop
mov
aas
fldln2
dec
aas
loope
inc
ds
pop
pop
jge
hlt
les
test
xchg
dec
sub
mov
aad
fnstenv
lock
sbb
dec
and
js
nop
js
iret
jl
out
std
int3
dec
test
test
int3
lea
rcl
cs
mov
add
push
jl
mov
sbb
adc
mov
mov
mov
nop
inc
(bad)
popf
xchg
lock
mov
mov
pop
jne
adc
out
or
(bad)
adc
inc
adc
arpl
mov
lods
dec
cmp
lods
gs
in
or
and
int
jb
sbb
stos
idiv
add
inc
lock
dec
(bad)
mov
je
inc
pop
adc
imul
sbb
ret
addr16
movs
mov
iret
sub
fsub
sbb
inc
dec
mov
out
sbb
adc
(bad)
arpl
jae
iret
add
mov
test
or
mov
fiadd
mov
push
push
jo
rol
ins
ror
lahf
or
mov
and
ins
mov
inc
loop
imul
lea
addr16
loop
sar
pop
pop
bound
mov
inc
push
and
scas
clc
daa
into
jg
ret
test
pop
mov
(bad)
mov
shl
add
or
add
jl
mov
fucom
arpl
adc
std
and
das
fisttp
adc
jo
pop
jmp
sbb
jg
and
push
mov
push
mov
sbb
adc
test
ficomp
cld
daa
popf
ins
add
jb
mov
xor
pushf
push
add
not
in
mov
add
hlt
add
(bad)
jbe
or
push
not
mov
jmp
(bad)
shl
add
adc
movs
loopne
test
test
and
jp
xor
mov
adc
outs
out
sbb
call
or
mov
out
hlt
rcl
mov
sub
or
in
xchg
mov
pop
in
cmp
cmp
js
cmp
or
fisub
xchg
sub
rol
test
push
aam
lods
add
dec
lods
or
sbb
fimul
mov
add
push
aam
andnps
xor
adc
push
cmp
out
mov
loop
add
in
inc
xchg
pop
int3
dec
loopne
mov
jbe
in
pop
enter
pop
mov
add
(bad)
into
loopne
jno
mov
aaa
ret
mov
into
adc
ud2
mov
add
add
or
ja
ds
into
adc
push
bnd
retf
jg
dec
pop
xchg
pop
mov
addr16
push
and
retf
xchg
mov
cmp
aas
ins
add
jl
ins
in
mov
dec
pop
lds
test
xor
cmp
sub
daa
into
inc
popf
es
in
push
aaa
add
and
push
mov
out
jecxz
cmp
xor
mov
cld
xchg
mov
sti
sbb
sub
pop
(bad)
jmp
jne
mov
xchg
xchg
jl
lea
mov
xlat
inc
pop
add
mov
aad
hlt
mov
push
mov
cld
add
sti
pushf
sbb
and
jne
pop
push
adc
es
mov
mov
stos
aas
add
mov
movs
xor
add
rol
mov
push
mov
jno
and
xchg
and
or
push
sub
fwait
jae
or
ins
sub
add
and
enter
xor
sub
mulps
add
push
mov
push
lock
add
ret
xor
sbb
aas
push
jo
fsubr
mov
and
sbb
daa
push
sbb
dec
nop
dec
hlt
sub
add
or
or
cmp
add
or
dec
add
fsub
repnz
imul
ret
packssdw
push
enter
add
or
cmps
mov
push
pop
movs
add
push
je
xchg
mov
sbb
cmp
and
add
(bad)
jl
hlt
outs
jg
and
push
adc
inc
add
adc
or
daa
add
sub
adc
inc
add
xchg
sub
cdq
test
es
inc
dec
and
mov
mov
sub
mov
add
daa
jae
add
mov
mov
mov
add
dec
adc
and
aas
sbb
and
sbb
and
dec
es
lods
sub
xor
rol
dec
mov
inc
inc
ss
push
inc
cmp
daa
ret
xchg
add
dec
pushf
pushf
jo
popa
mov
mov
pop
add
mov
mov
inc
or
and
mov
sub
and
add
and
mov
add
nop
ret
loopne
enter
mov
inc
add
lds
ret
add
add
pusha
mov
push
adc
pop
add
cs
cs
jo
mov
xchg
mov
and
xchg
add
pop
or
adc
add
mov
inc
stc
mov
test
mov
loopne
test
lock
adc
fld
dec
mov
ret
mov
xor
xchg
or
div
cmp
sbb
mov
and
daa
loop
xchg
enter
push
cmp
push
and
adc
lock
cdq
dec
and
xchg
loopne
xchg
pop
mov
mov
jmp
push
adc
loopne
lock
mov
test
clc
xchg
inc
mov
mov
sub
jmp
movs
or
mov
sahf
inc
inc
(bad)
pop
sub
and
out
ror
mov
je
cs
xchg
and
cwde
dec
out
loop
or
ror
cmp
popa
or
add
jmp
add
or
pop
sub
cmp
xor
mov
cs
in
pop
mov
adc
test
adc
dec
pop
fs
sub
xor
ins
mov
lahf
sub
mov
in
sbb
add
or
xchg
xor
movs
push
jmp
nop
das
push
sub
inc
in
xchg
pop
fld
sub
jns
inc
mov
and
push
dec
add
push
sbb
and
xor
xor
dec
test
inc
inc
jbe
daa
sub
xchg
nop
mov
inc
mov
repnz
js
sbb
pcmpgtw
pop
mov
loope
scas
and
adc
mov
enter
pop
and
and
fs
and
mov
repz
pop
and
or
inc
fisub
call
and
and
push
cld
scas
pop
push
loope
add
jo
jno
rcl
lock
xchg
dec
movs
add
rcr
adc
outs
jle
ret
jmp
mov
iret
sahf
inc
(bad)
jae
dec
sub
and
sbb
inc
in
xchg
and
shr
inc
mov
inc
ret
out
mov
xor
and
xchg
and
ret
push
jg
xchg
dec
or
and
sbb
sbb
js
imul
adc
dec
sbb
es
mov
add
pop
push
pop
cmp
ret
and
sqrtps
ror
jb
repnz
dec
mov
sub
mov
shr
ds
cmp
or
adc
dec
adc
xchg
adc
js
pop
push
sbb
mov
and
jns
pop
pusha
nop
mov
arpl
push
and
ins
add
xchg
arpl
adc
mov
stos
(bad)
sbb
add
add
test
push
loop
pusha
add
sbb
mov
nop
xchg
adc
sbb
inc
popa
and
or
inc
mov
adc
shl
jo
enter
push
push
cmp
mov
add
and
add
mov
push
xchg
push
shr
xor
ret
cs
push
sbb
call
cmp
ja
xchg
pop
mov
push
(bad)
pop
jg
(bad)
daa
rcl
into
xor
mov
fist
inc
jle
push
add
cmp
jg
xchg
sub
sbb
sbb
add
enter
inc
test
lods
xchg
shl
fcomip
cmp
ins
or
ins
jl
mov
push
xchg
daa
pop
stos
sar
stos
add
and
pop
sbb
xor
pop
outs
xor
sub
mov
cmp
pop
loopne
dec
sbb
aas
jmp
vmread
inc
icebp
inc
daa
popa
call
xor
add
inc
jl
test
je
dec
add
pop
test
jo
add
pop
call
mov
or
jo
out
dec
jmp
push
and
mov
lahf
jle
add
(bad)
hlt
das
cmc
ret
pop
jmp
loope
into
mov
xchg
dec
pop
mov
cli
mul
cmp
dec
call
pop
dec
nop
nop
call
std
sbb
stc
loop
pushw
repnz
dec
(bad)
(bad)
sbb
inc
sahf
cwde
daa
hlt
cmp
les
test
retf
popa
jb
fstp
jp
not
inc
add
mov
cmp
sbb
jbe
inc
aam
xlat
inc
fwait
mov
popa
push
outs
loopne
mov
push
adc
lahf
or
mov
pop
cmp
ds
sub
or
movs
mov
(bad)
daa
stos
jnp
test
lods
jge
lods
cmc
in
xor
mov
sbb
and
add
push
pop
(bad)
push
jae
cdq
outs
mov
call
into
inc
int
lds
test
push
cmps
mov
cmp
dec
js
bound
mov
mov
or
(bad)
in
cmp
sahf
shl
ins
push
cmp
(bad)
and
jge
retf
iret
jns
push
lods
daa
(bad)
pushf
(bad)
push
mov
cmp
xchg
mov
push
addr16
int3
xchg
gs
inc
push
outs
jge
(bad)
outs
jnp
jp
sbb
movs
push
cmc
add
enter
fcmove
mov
dec
in
cmp
ds
add
or
loopne
mov
mov
int
stos
cmp
inc
enter
jp
dec
adc
ret
or
js
and
ficom
ficomp
mov
inc
mov
ins
cli
jmp
dec
lea
mov
xchg
xchg
retf
stc
jmp
mov
jg
aam
out
xor
mov
std
push
jge
scas
and
push
add
mov
xor
aam
inc
jbe
lock
add
lahf
jb
sbb
jbe
mov
mov
shr
call
test
(bad)
fwait
push
xchg
pop
xlat
pop
dec
js
mov
call
ins
stos
inc
xchg
cmp
pop
push
mov
pop
out
dec
push
sub
fcomp
pop
fcomip
cmps
push
fcmovbe
pop
movs
xchg
mov
pop
and
call
js
and
enter
mov
ret
out
scas
cmc
fimul
retf
mov
mov
les
push
(bad)
jmp
outs
pop
loope
sahf
pushf
cwde
mov
ror
mov
ins
mov
gs
cdq
std
(bad)
ret
repz
lods
lahf
jne
arpl
(bad)
cmp
xchg
push
mov
icebp
pop
cwde
mov
adc
(bad)
test
outs
cdq
cmp
cmc
movs
es
jp
in
push
mov
mov
and
inc
imul
loop
pop
cmp
ins
dec
xor
lods
jne
push
(bad)
jl
xchg
idiv
clc
push
mov
ret
repnz
add
lea
in
stos
xchg
push
jne
js
mul
fst
pop
or
inc
movs
sahf
pop
xchg
xchg
mov
and
mov
ins
psubd
pop
aad
adc
sbb
jne
cmp
fwait
scas
cmp
cmp
and
cli
lock
dec
mov
push
mov
imul
in
push
inc
icebp
jae
jne
aaa
leave
mov
rcr
leave
(bad)
(bad)
dec
xor
dec
xor
push
xor
push
dec
mov
mov
stc
inc
and
sub
xchg
ret
xchg
mov
rcl
aad
out
inc
iret
sahf
dec
sbb
js
sub
fucom
pop
stos
out
mov
(bad)
aaa
gs
push
pop
mov
pop
xchg
jmp
mov
jmp
xor
or
cmps
xchg
aaa
in
iret
or
call
lock
test
aaa
dec
sahf
mov
nop
(bad)
sub
mov
fisub
add
aaa
adc
fwait
scas
jmp
adc
jb
dec
jle
pop
xchg
mov
push
xchg
cli
mov
or
sub
cmc
ins
mov
into
scas
in
pop
je
inc
daa
jmp
ror
dec
cmp
pop
(bad)
aad
jl
movs
dec
das
outs
js
inc
jp
f2xm1
stos
int
outs
out
mov
cld
and
daa
lods
xchg
mov
xchg
inc
sbb
out
mov
push
jl
fimul
mov
movq
(bad)
dec
mov
mov
push
scas
cmp
inc
jne
(bad)
mov
fwait
and
retf
push
mov
dec
(bad)
movs
(bad)
ficomp
sub
ret
(bad)
pop
mov
pextrw
xchg
(bad)
jno
aad
inc
es
addr16
pop
xchg
mov
in
mov
into
(bad)
cmp
ror
(bad)
stos
xchg
ja
add
inc
mov
lods
lods
stc
mov
pop
jp
in
idiv
mov
xlat
sbb
adc
fistp
pop
push
out
(bad)
rcr
ja
cmp
mov
push
push
pop
outs
push
dec
dec
mov
popf
ss
inc
in
aaa
fsubr
fild
push
in
fwait
mov
fld
adc
push
ds
fidivr
repz
(bad)
outs
mov
sbb
iret
js
mov
mov
inc
and
(bad)
adc
jge
jns
add
lods
cld
dec
leave
pop
sub
ret
fiadd
in
fs
scas
pushf
pop
add
in
dec
enter
push
ins
gs
cs
add
inc
pop
add
add
mov
dec
neg
mov
pop
lds
xor
mov
mov
and
adc
in
mov
mov
fistp
out
pop
jne
inc
mov
aam
jp
inc
and
sbb
test
fcmovb
out
out
sahf
sub
(bad)
(bad)
jmp
sbb
call
hlt
cmps
pop
jmp
out
(bad)
xlat
fisttp
xor
mov
cmc
ja
pop
cmc
cmps
pop
aaa
aad
in
stc
mov
inc
test
cld
push
mov
cs
aad
jnp
mov
adc
adc
imul
add
mov
movs
and
movs
jb
out
(bad)
addr16
test
xlat
and
sbb
movs
pop
outs
lock
push
pop
stc
jmp
in
loopne
xor
pop
aaa
pop
stos
std
xchg
not
(bad)
loope
in
sbb
test
pop
push
jl
mov
lahf
dec
pop
xchg
xchg
mov
das
sub
iret
hlt
add
jl
push
repz
mov
ret
aad
rcr
mov
dec
stos
hlt
pop
jmp
out
aam
enter
mov
cmp
aas
outs
cmp
dec
stc
cld
into
sub
mov
das
lahf
adc
mov
push
push
retf
mov
push
jno
xchg
xor
xor
mov
scas
cli
ds
pop
test
nop
fiadd
mov
sub
jmp
out
enter
jns
xor
test
aaa
repnz
(bad)
or
cmc
repz
aad
cli
cmps
cli
mov
cmp
neg
push
je
das
cmp
dec
into
lds
xchg
jne
mov
add
mov
jmp
xchg
lahf
cmp
push
test
icebp
adc
fbld
into
adc
mov
out
lods
aaa
movs
push
mov
xchg
es
call
mov
fs
xchg
enter
aaa
mov
mov
das
ficomp
dec
leave
dec
mov
lods
je
cmp
scas
xlat
lock
adc
dec
mov
dec
outs
inc
mov
mov
inc
xlat
push
jl
cmp
sub
mov
test
or
cs
shl
or
fiadd
xchg
test
out
bnd
inc
and
pop
daa
outs
nop
jge
das
outs
push
shl
lea
sbb
fdivp
lods
inc
jmp
sbb
ret
adc
cmc
enter
xchg
sar
dec
popa
dec
xor
sub
sbb
loop
jnp
adc
jno
xchg
shr
movs
mov
lea
test
or
mov
movs
inc
out
(bad)
test
jmp
mov
mov
out
add
xor
imul
add
outs
int3
shr
mov
inc
std
ror
ja
inc
in
jecxz
push
xor
or
xchg
test
daa
mov
push
enter
jns
jecxz
repnz
sub
inc
inc
call
aas
or
inc
xchg
bsr
comiss
dec
in
cmc
xor
adc
or
or
xchg
ret
outs
(bad)
adc
sbb
js
outs
mov
jno
mov
xlat
pop
xlat
std
pushf
jbe
sub
jo
add
jecxz
dec
gs
(bad)
mov
movs
cmps
lahf
adc
les
cmp
out
push
popa
pop
lahf
ret
mov
(bad)
jmp
stos
fwait
imul
fsub
ret
das
or
test
movs
jle
push
fdiv
cmps
out
in
in
test
xlat
int
mov
je
sbb
and
aaa
aaa
xor
inc
aad
pushf
test
xor
shr
(bad)
pop
fst
jne
adc
lahf
nop
and
repz
cmps
mov
mov
mov
lods
cmp
mov
jo
mov
xor
addr16
iret
sub
clc
into
xlat
into
je
xor
loope
call
xchg
leave
adc
(bad)
(bad)
mov
cmc
aam
or
inc
fs
mov
push
cmp
or
loop
and
push
mov
ss
push
loopne
fwait
les
stos
xchg
xor
dec
fdivrp
xor
mov
icebp
pop
xchg
jb
xchg
pushf
in
pop
inc
data16
enter
push
test
loopne
jmp
stos
pop
addr16
jge
mov
(bad)
in
sub
mov
jbe
rcr
mov
mov
jle
dec
ror
or
jmp
test
mov
jo
std
movs
fnstsw
aam
xor
hlt
sti
aad
leave
pushf
cmp
cmps
mov
cmps
mov
mov
out
mov
mov
loop
sti
or
out
and
mov
sti
cmp
sub
cdq
lods
xor
mul
(bad)
hlt
cmc
xchg
sbb
movs
out
or
cmp
lahf
call
xchg
js
stc
out
shr
adc
scas
jns
out
cli
clc
loope
(bad)
lock
(bad)
fsubr
lea
mov
pop
dec
or
fcmove
xchg
fs
push
or
dec
inc
xchg
push
push
mov
mov
call
mov
add
bound
ds
scas
in
dec
pop
or
mov
(bad)
lea
data16
movd
cld
mov
sbb
jmp
mov
mov
ret
xlat
mov
int
aaa
mov
jg
aaa
cmp
test
(bad)
test
xlat
fldlg2
ret
lds
sbb
sub
xchg
aas
outs
jmp
cmp
and
hlt
mov
cmc
shl
mov
jmp
xor
pop
sub
jb
ins
add
in
and
outs
adc
repnz
retf
scas
cli
push
lods
pop
daa
pop
jmp
imul
fst
dec
out
ins
imul
jp
and
cwde
push
scas
sub
cmp
xchg
bnd
push
stos
dec
jecxz
fnsetpm(287
jp
nop
fucomi
gs
rol
mov
xor
xor
mov
shr
sbb
ja
sub
mov
cmps
ficomp
inc
jnp
imul
pop
mov
loopne
cmp
int3
loope
test
mov
mov
loopne
loopne
pop
push
xchg
mov
leave
imul
(bad)
mov
imul
dec
xor
lds
jbe
push
test
ins
cmp
jnp
pop
jle
outs
test
jmp
sub
std
push
popa
push
jo
repnz
pop
adc
push
std
call
stos
test
mov
mov
arpl
scas
push
imul
mov
ret
call
jmp
push
dec
cs
xor
cmps
cmp
inc
inc
inc
mov
push
movs
inc
sahf
shr
sbb
(bad)
xlat
es
stc
jae
cmps
inc
lahf
inc
jmp
retf
lock
int
add
popa
lahf
xlat
sbb
jae
sbb
clc
lahf
retf
jnp
push
std
pusha
push
data16
(bad)
(bad)
dec
mov
pop
fimul
(bad)
jmp
dec
loope
pop
fidiv
mov
push
xchg
push
loop
and
out
mov
daa
sar
sbb
cli
jecxz
pop
cld
(bad)
jo
mov
mov
xchg
mov
mov
lock
fstp
xchg
sub
fs
movs
std
add
out
pop
stos
(bad)
out
scas
loop
sub
out
push
pop
mov
out
cmps
mov
icebp
std
jl
mov
inc
jmp
loope
and
pop
mov
mov
sbb
stos
jmp
nop
loope
scas
sbb
addr16
retf
pop
in
cwde
dec
je
ss
jmp
aad
push
imul
imul
push
dec
fisttp
add
loope
xchg
cmps
cli
mov
(bad)
retf
jb
push
pop
jmp
dec
cwde
and
dec
cmc
test
mov
test
leave
xor
cwde
ins
xchg
mov
xlat
push
mov
cli
in
stc
loop
movs
mov
ins
sub
repnz
dec
xchg
test
mov
push
(bad)
stos
xchg
fcom
sub
movs
mov
ret
sbb
pop
jo
arpl
jp
out
sub
retf
add
mov
mov
in
imul
mov
(bad)
rol
or
cmp
xor
dec
data16
cmp
cli
rcr
sbb
sub
shl
out
sbb
cmp
xor
jge
stc
mov
daa
mov
xlat
sti
imul
sub
icebp
out
outs
xor
or
cmp
daa
out
xlat
mov
repnz
out
outs
or
aas
sahf
call
stos
sub
push
mov
ror
sbb
retf
retf
aas
xor
js
jl
fdiv
mov
push
pop
sbb
es
out
jge
(bad)
pop
out
neg
adc
stos
fist
addr16
daa
fnstsw
int
xchg
xchg
dec
cmp
enter
fldcw
push
adc
adc
loope
hlt
imul
mov
mov
dec
sbb
into
mov
rcl
outs
outs
lods
fcomp
mov
scas
pop
inc
mov
and
ins
inc
retf
jno
inc
dec
(bad)
out
aaa
ins
add
movs
or
in
push
mov
push
lods
scas
nop
xor
adc
pop
call
or
sti
pop
xchg
clc
or
out
loope
aad
sbb
sub
test
(bad)
fistp
sahf
pop
adc
jg
jbe
add
jmp
cld
es
cmp
out
xchg
iret
mov
les
pop
(bad)
cmp
and
call
hlt
(bad)
adc
ins
out
or
mov
lods
xor
push
adc
iret
lock
int
pop
xor
xchg
push
jmp
jle
std
cmp
inc
xchg
(bad)
leave
std
les
clc
out
(bad)
inc
push
in
int3
jle
punpckhdq
mov
sti
movs
pop
dec
jnp
jne
lods
stos
mov
sti
shl
push
dec
mov
mov
mov
hlt
jo
cld
cli
cmp
movs
imul
dec
mov
cmc
push
mov
in
mov
mov
cmc
pop
sub
aam
repz
(bad)
test
fstp
dec
pop
fistp
out
or
jae
fimul
mov
jmp
pushf
mov
pop
dec
in
sti
sbb
pop
test
jge
out
sub
sar
pop
(bad)
jae
movs
xchg
cmps
fcomp
jle
push
mov
lock
dec
dec
aad
movs
sub
jbe
mov
inc
js
xor
fisub
(bad)
out
xor
test
stos
jmp
mov
cmp
sbb
fcomp
jmp
lahf
icebp
adc
push
aam
sub
xchg
add
out
sbb
fcom
push
aad
lods
cmc
cmps
rcl
jae
xchg
sar
jmp
push
sbb
push
int
mov
mov
dec
repnz
cmp
xchg
mov
(bad)
fdecstp
(bad)
(bad)
cmp
popf
and
into
out
jo
mov
inc
inc
scas
push
ins
mov
les
mov
mov
aas
or
call
dec
movs
xchg
test
or
sub
out
adc
mov
out
imul
sub
xor
or
mov
stos
rcl
pop
stc
cld
icebp
loop
sahf
xchg
daa
pop
imul
mov
mov
aad
push
push
retf
les
fnstenv
outs
pushf
xlat
stos
xchg
cmps
loopne
aas
lea
push
cwde
adc
mov
mov
push
in
xchg
push
out
pop
jecxz
pop
nop
jp
sub
sbb
adc
dec
icebp
out
mov
jle
push
movs
xor
lds
sbb
mov
cmc
xor
(bad)
iret
jmp
(bad)
(bad)
cs
xlat
gs
mov
cmp
xchg
cmc
imul
xor
stos
mov
ja
jae
ret
xor
test
rcl
or
push
jbe
mov
stc
in
sbb
inc
cmp
or
repnz
neg
pop
add
pop
inc
sbb
test
(bad)
jecxz
mov
pop
outs
jo
(bad)
jbe
jge
(bad)
jnp
xchg
in
test
(bad)
ficomp
jne
lock
add
into
push
add
mov
pop
cld
mov
pop
inc
pushf
mov
fcomp
in
pop
push
popa
inc
cdq
xor
fmul
pop
dec
add
lods
shl
sahf
test
int
sub
aaa
jbe
inc
leave
mov
jb
fcmovbe
mov
pop
(bad)
and
push
push
mov
stos
cmc
ja
pop
das
sub
dec
cmp
push
mov
js
(bad)
rcr
mov
mov
call
inc
fisttp
jne
leave
and
push
std
pop
pop
repz
out
ja
loope
leave
pop
pop
xchg
mov
adc
mov
jle
cmc
cld
(bad)
jle
aaa
mov
push
adc
imul
fisttp
inc
lea
fstp
xlat
pop
aam
jnp
xchg
pop
pushf
fistp
cmp
stos
pop
das
test
loop
push
out
les
or
sti
push
sbb
gs
repz
movs
loope
jae
xor
in
xor
push
pop
in
or
mov
lock
dec
ds
jge
cs
sbb
fstp
inc
movs
inc
xor
data16
loope
mov
xchg
jecxz
test
cmp
les
outs
stos
jae
sub
in
adc
jae
repz
mov
jbe
test
xchg
push
(bad)
aaa
xor
inc
sub
jno
div
mov
gs
lahf
leave
cdq
push
nop
xchg
pop
stc
jne
push
mov
push
ins
fcmovbe
sti
into
(bad)
(bad)
push
call
std
pushf
dec
adc
mov
sahf
cmp
ja
jno
dec
test
cmc
std
call
xchg
push
shld
out
sub
(bad)
iret
leave
ins
repz
(bad)
dec
stc
mov
cld
mov
movd
sbb
pop
mov
pop
repz
sbb
outs
adc
push
rcl
ret
add
dec
daa
ins
pop
xor
xchg
fisttp
push
mov
jno
dec
push
pop
enter
jg
fwait
ja
jmp
jmp
xchg
pop
and
in
les
sub
sub
outs
out
and
cmp
int3
xlat
pop
daa
push
sbb
fdivr
cmp
or
je
jp
test
retf
loopne
test
pop
fs
pop
aas
jne
push
mov
lock
stos
and
test
mov
test
jbe
adc
jae
out
mov
jecxz
or
int
movs
repnz
aas
jae
adc
nop
mov
ds
fild
cmp
dec
dec
add
adc
and
pop
ret
adc
lods
jp
and
gs
shl
jmp
sti
mov
fistp
mov
and
sbb
lods
pop
das
ficomp
js
jne
mov
mov
cld
mov
cmp
lods
mov
(bad)
int3
lahf
mov
mov
cmc
jmp
stos
or
loop
enter
mov
jnp
xchg
mov
inc
js
cmp
sbb
sbb
cli
xor
mov
jnp
iret
cmp
lahf
push
jmp
pop
add
push
cmp
std
fs
inc
cmp
outs
mov
mov
cmp
pop
adc
(bad)
imul
jmp
xchg
mov
jmp
out
popa
lds
std
mov
inc
cdq
mov
test
icebp
fdiv
mov
imul
xchg
(bad)
in
stos
cmp
or
dec
ds
jp
clc
cmp
sub
dec
sub
cwde
loopne
leave
jns
pop
shl
ds
xor
or
sahf
lock
dec
add
or
cmps
jo
sub
pop
icebp
not
lea
movs
sbb
jmp
mov
sti
les
cmp
cli
mov
iret
pop
dec
push
mov
or
dec
push
xchg
retf
fidivr
sub
mov
inc
mov
xchg
(bad)
ficom
cmp
xor
fist
hlt
mov
add
lahf
sysexit
push
pop
xor
cmp
imul
xchg
sar
mov
shl
mov
not
dec
repz
aam
(bad)
jl
out
cmps
xchg
mul
into
jbe
fcom
sbb
imul
cmp
movs
mov
xor
push
pushf
outs
aas
jbe
pusha
sub
xchg
push
cmp
shl
sbb
cmps
in
retf
stos
mov
sub
mov
pop
dec
mov
sub
and
gs
push
mov
sbb
sbb
hlt
outs
ret
adc
inc
xlat
adc
pop
inc
xlat
retf
imul
pop
xchg
iret
push
div
dec
mov
fcom
ja
push
xlat
or
sbb
outs
adc
(bad)
fild
cmp
cmp
mov
(bad)
fstp
push
or
fidivr
fistp
fisub
pop
inc
js
mov
jno
mov
mov
mov
mov
scas
aad
push
test
outs
or
jp
sub
std
cmp
(bad)
jge
mov
cmp
mov
dec
into
push
cwde
cmps
std
hlt
push
mov
retf
iretw
iret
jmp
xor
push
mov
popf
xchg
mov
cmp
fcomp
in
push
push
ret
sbb
jnp
xchg
(bad)
in
ds
xor
hlt
xor
retf
setne
rcr
(bad)
inc
sub
imul
imul
mov
pop
add
std
ins
push
sbb
outs
xchg
lds
jmp
sbb
lahf
loope
sar
mov
scas
lods
jle
push
fistp
frstor
xchg
xchg
pop
in
loopne
test
cli
jmp
inc
pop
out
push
clc
les
inc
push
xchg
int
mov
mov
xchg
mov
mov
xor
dec
jle
xchg
dec
xchg
fld
cs
mov
les
ficom
popf
stos
mov
js
cmp
(bad)
cmps
retf
adc
xchg
mov
cwde
in
mov
test
fistp
mov
sub
mov
xor
mov
stc
je
jnp
pop
dec
fs
jge
rcr
repnz
aad
ja
pop
rol
mov
mov
push
pushf
adc
icebp
jmp
push
mov
or
fadd
mov
lahf
push
jmp
mov
lock
aam
imul
mov
jo
shl
daa
mov
adc
into
lea
dec
mov
dec
jno
cmp
test
data16
add
pop
aas
call
jge
enter
retf
xor
pop
cmp
push
int3
shl
jle
jnp
cdq
repnz
gs
in
pushf
sub
loope
cmp
popf
int3
test
mov
xchg
mov
int3
iret
out
mov
or
ja
and
mov
push
in
or
inc
push
dec
stos
and
loop
mov
call
fcmovbe
aad
arpl
jge
jb
jo
xchg
shl
daa
in
inc
dec
mov
sub
ss
daa
jb
mov
mov
cdq
jnp
bound
mov
fisttp
outs
cmp
icebp
mov
sahf
sub
gs
aam
ins
mul
pop
cs
es
loope
pop
imul
sahf
cmp
xchg
mov
imul
jg
xchg
ja
jle
retf
ss
mov
jb
and
push
loopne
fild
jmp
(bad)
mov
add
out
jae
out
sti
movs
lods
and
push
rcr
daa
loope
fdivr
sub
pop
aam
cmps
imul
push
mov
dec
dec
movs
aam
mov
cmp
in
arpl
pop
adc
mov
ret
mov
arpl
jmp
dec
out
repnz
jns
dec
aam
fnstsw
in
lahf
stos
fmul
cmp
xchg
fcom
push
cmc
enter
jmp
dec
fistp
daa
repz
outs
cli
nop
retf
mov
xchg
pop
jns
mov
cmp
dec
mov
in
inc
and
stos
pop
push
xchg
push
iret
sbb
fwait
int3
mov
repz
gs
mov
sub
add
xchg
sti
sti
fisubr
mov
add
cmp
ja
jae
cmp
or
fist
pop
jb
in
into
hlt
mov
mov
ins
jae
jecxz
in
in
mov
jb
repnz
or
mov
cs
sbb
push
rol
(bad)
and
adc
mov
mov
cli
aaa
pop
stos
or
push
dec
push
sbb
sub
cmps
loope
call
mov
das
xabort
fsubrp
aaa
xchg
les
cmp
mov
pop
inc
xchg
ret
xchg
cwde
adc
(bad)
mov
push
nop
sub
push
in
dec
popf
jo
pop
push
ins
rcr
push
pop
mov
mov
mov
cld
sub
loop
enter
xchg
and
mov
pop
int
int
sub
(bad)
scas
jmp
ds
test
pop
cmps
fist
pusha
push
sar
adc
push
pop
pop
out
(bad)
iret
hlt
sub
test
mov
inc
jns
out
iret
js
mov
push
dec
cmps
cwde
daa
shl
out
sub
push
movs
jae
mov
repz
fwait
sub
dec
imul
js
lea
push
scas
sub
sbb
push
pop
and
xor
stos
mov
arpl
repnz
scas
(bad)
pop
push
sbb
mov
(bad)
lds
in
icebp
jge
add
pusha
(bad)
(bad)
push
lds
dec
icebp
mov
push
shl
ja
loope
mov
ret
xchg
push
sub
sub
les
cmp
daa
icebp
loopne
mov
leave
xlat
cmp
fs
push
out
out
adc
(bad)
ins
lahf
mov
lahf
or
cmp
in
push
outs
(bad)
dec
mov
lods
dec
mov
sub
cli
xchg
pop
(bad)
lods
sbb
xchg
lods
pop
pop
add
cmps
test
mov
mov
jmp
mov
add
in
sti
gs
mov
jo
daa
dec
or
jmp
xor
jl
jmp
mov
mov
cmp
scas
dec
lea
sub
sub
mov
pop
mov
fnstsw
mul
cmp
dec
pop
jmp
adc
fstp
dec
sub
add
movs
dec
not
jle
test
fimul
dec
jecxz
popa
int3
mov
jmp
cmp
es
mov
cmp
cld
mov
mov
inc
mov
(bad)
add
popf
scas
lods
jmp
gs
inc
dec
mov
loope
pop
(bad)
out
push
cmp
mov
lods
data16
pop
es
dec
and
movs
in
rcr
sahf
pop
cwde
icebp
push
popf
xchg
dec
test
push
xor
stc
mov
jecxz
outs
sub
ficom
pusha
and
outs
xchg
outs
mov
push
xor
jmp
dec
lahf
mov
pop
mov
inc
jnp
or
les
sbb
ins
jns
ja
shl
push
add
xor
inc
test
dec
or
xchg
jmp
xor
mov
hlt
pusha
ror
sbb
dec
cmp
sub
dec
pop
or
sti
xchg
scas
retf
call
xlat
cmp
adc
pop
bound
fnsave
xchg
outs
stos
jne
loope
mov
lds
cmc
mov
aaa
pmaxub
cmp
mov
pop
xor
mov
(bad)
sub
out
cwde
int3
pop
push
std
popa
lods
mov
lds
dec
lahf
out
repnz
js
sar
xor
jmp
jno
mov
sti
retf
movs
ja
daa
fdivrp
je
mul
icebp
cld
ret
outs
dec
lods
fisub
adc
dec
push
dec
sub
push
jle
jbe
out
pushf
xor
push
jae
mov
bnd
inc
cmc
hlt
loope
fisub
dec
jp
idiv
push
ins
leave
mov
cmps
jl
xor
das
cmp
pop
stc
mul
hlt
out
stos
and
xlat
mov
mov
jno
push
push
outs
cli
shl
mov
rol
push
push
jle
ret
lods
push
push
in
fdivr
jmp
nop
popf
pop
adc
adc
push
sub
out
jle
shl
test
aas
stos
cmp
das
cdq
cwde
jmp
sub
jo
jge
pop
movs
mov
fdivr
pop
mov
iret
jmp
mov
inc
(bad)
retf
cmp
out
rol
mov
dec
mov
pop
mov
dec
into
loop
adc
mov
jecxz
and
(bad)
mov
pop
(bad)
adc
sub
jnp
ret
mov
leave
push
mov
xchg
fisttp
xchg
ret
xchg
neg
mov
sub
icebp
push
xor
xor
fbstp
dec
adc
jl
mov
test
inc
and
mov
pop
test
into
inc
popa
lahf
(bad)
or
add
mov
dec
(bad)
xchg
pop
sub
jle
mov
mov
shl
dec
cmps
imul
ret
aad
(bad)
adc
xchg
xchg
fwait
cs
xchg
and
test
ror
mov
leave
jg
pop
pop
popa
xchg
hlt
cli
push
ds
sub
out
popf
pop
(bad)
fs
xchg
out
in
sbb
mov
sub
mov
mov
aad
xchg
(bad)
loopne
scas
outs
add
mov
ret
(bad)
mov
imul
push
fwait
stos
dec
jg
mov
xchg
push
jne
fiadd
mov
std
push
pop
mov
shl
call
jg
mov
shl
mov
loopne
fadd
mov
xor
jecxz
jge
pop
jmp
fistp
sub
mov
in
jns
test
or
add
lods
jne
mov
push
mov
xor
das
and
(bad)
std
mov
fs
ror
fld
xor
ja
pop
pop
ins
std
arpl
jne
sub
mov
clc
loopne
(bad)
cmps
loopne
ins
or
aad
stos
pop
xchg
int
lds
popa
push
jmp
aad
imul
stos
add
test
imul
inc
jo
mov
aas
mov
sti
push
mov
mov
xor
and
movs
add
ds
aad
test
fst
jp
push
into
mov
shl
xor
shr
mov
out
aam
arpl
out
dec
sbb
mov
jecxz
fcmovb
push
mov
fcom
in
lock
push
cmp
in
nop
mov
jmp
and
jmp
retf
push
cmps
mov
sbb
out
dec
stc
xchg
fidivr
adc
out
call
jno
in
aas
jnp
lahf
pop
popa
mov
cwde
in
retf
sbb
add
(bad)
call
scas
daa
icebp
cmps
xchg
sti
ins
push
fwait
mov
or
adc
xor
test
mov
aas
pop
mov
inc
sbb
stos
dec
push
daa
(bad)
mov
fcom
repnz
enter
inc
in
div
hlt
lods
(bad)
mov
push
inc
mov
pop
sbb
in
push
inc
in
inc
loope
aaa
xchg
xor
sub
mov
pop
jb
inc
loop
pop
jmp
cs
push
loope
movs
mov
jmp
repnz
xchg
push
and
hlt
stos
into
jbe
pop
and
mul
retf
and
mov
(bad)
cmps
out
movs
es
mov
mov
push
icebp
mov
fwait
mov
scas
out
cmps
jp
push
imul
in
mov
jecxz
xlat
sub
scas
out
pop
jmp
daa
cdq
outs
ins
inc
clc
jb
ret
and
ja
sbb
inc
ret
fdivp
(bad)
div
push
popf
fdivr
repnz
out
cli
xchg
lea
xor
hlt
jge
addr16
call
and
idiv
scas
cmp
fs
jecxz
or
xchg
jb
fidiv
and
(bad)
pop
push
pushf
xor
imul
jl
cdq
push
lahf
fbstp
push
pusha
mov
lock
test
pop
not
cmp
mov
les
idiv
repz
pushf
and
(bad)
(bad)
aad
inc
out
push
retf
fstp
cmp
in
fsubr
arpl
mov
push
call
(bad)
jnp
dec
mov
adc
bound
fldenv
mov
int
mov
test
mov
dec
into
pop
stc
xchg
ret
jp
lods
ja
mov
xchg
lahf
xchg
sbb
mov
sub
fisubr
mov
retf
sub
loope
push
es
sub
push
stc
rcl
ja
retf
adc
call
mov
idiv
inc
aad
push
or
inc
fiadd
lahf
mov
fidiv
aaa
add
pop
jmp
(bad)
test
mov
iret
outs
sbb
ins
leave
jne
stos
mov
stos
mov
sbb
mov
sub
imul
cmp
and
(bad)
fcomi
(bad)
dec
or
dec
cld
xchg
ins
lea
jae
arpl
mov
arpl
mov
xchg
sbb
jae
push
ja
loope
inc
push
out
movs
xchg
dec
in
push
inc
lods
(bad)
dec
aaa
sub
adc
lods
cmp
adc
adc
out
fbstp
inc
push
outs
cld
rcl
jle
xchg
js
stos
in
mov
and
test
jmp
sti
xor
push
(bad)
ffreep
in
sub
loopne
mov
aaa
and
in
dec
xchg
in
out
adc
imul
cmps
repz
(bad)
js
outs
jg
jmp
imul
std
push
lods
pop
xlat
scas
cdq
mov
pop
jnp
aam
in
jnp
mov
in
cmp
and
loop
shr
jecxz
cld
cmp
repnz
ja
aad
(bad)
fcom
inc
jl
mov
mov
outs
cs
mov
mov
lods
push
mov
into
test
dec
mov
cli
fs
shr
mov
in
mov
push
sub
add
mov
push
out
cmc
mov
hlt
clc
push
xor
movs
adc
xchg
retf
cwde
into
ud0
xchg
jmp
fs
stc
ret
jmp
stc
pop
aas
stos
xlat
(bad)
mov
adc
scas
clc
jo
mov
aas
adc
push
mov
sbb
push
test
in
cmp
(bad)
fldl2e
push
jge
call
cmps
inc
pop
je
mov
retf
retf
mov
shl
movq
jns
dec
pop
dec
push
xor
push
or
adc
repnz
cwde
pop
shl
(bad)
lods
push
and
dec
imul
cmp
inc
jge
jp
jnp
mov
fdiv
icebp
loopne
lods
push
rcr
lea
ror
lahf
push
(bad)
cmp
jbe
in
dec
mov
mov
fcomi
pop
into
xor
and
aam
les
jmp
ins
jne
or
mov
(bad)
push
mov
leave
push
jnp
mov
push
and
fnstenv
loop
inc
push
enter
out
dec
jge
gs
pop
mov
iret
jecxz
sub
cwde
in
stc
jl
cli
xchg
dec
outs
cli
fucom
mov
xchg
rol
jno
cdq
jl
fist
inc
gs
movs
aaa
mov
je
jp
xor
fisubr
xor
test
and
mov
push
into
mov
retf
popf
rcr
push
imul
(bad)
pop
int
pop
jno
ins
out
sub
mov
push
fisubr
arpl
fcom
jb
mov
in
in
lds
mov
fidiv
dec
gs
xchg
dec
add
in
fisubr
mov
stos
in
clc
sub
xchg
repz
xchg
dec
sub
imul
iret
mov
sahf
pop
loop
out
fst
sar
fimul
out
inc
jo
scas
shl
lods
mov
sub
jb
les
rep
mov
repnz
out
sti
push
ds
push
outs
sub
or
mov
sbb
cli
xchg
lea
cmc
sbb
jl
into
xlat
into
sbb
nop
pop
jnp
sub
adc
mov
pop
mov
into
cmp
popw
mov
stc
pusha
adc
fnstsw
jne
pop
rol
jns
clc
in
pop
addr16
sbb
jle
test
cmp
fdivr
sbb
outs
enter
mov
jle
cmp
pusha
jno
loop
into
push
jle
fsub
mov
adc
push
in
cmp
jge
sub
in
(bad)
or
ins
lahf
mov
mov
pop
scas
pop
jno
cmp
fcomp
xchg
aam
sar
fbld
sub
cmp
xchg
addr16
push
retf
loop
jp
push
jb
in
test
jecxz
jle
repnz
mov
lahf
outs
mov
sbb
daa
in
in
mov
jb
pop
push
xor
lea
jae
xchg
cmc
lds
sbb
enter
rcl
jmp
in
mov
test
jge
stos
push
mov
into
mov
scas
inc
jae
mov
ins
inc
fnsave
fmul
push
stos
in
pop
out
cmps
mov
scas
jmp
pusha
test
jns
outs
imul
popa
cli
or
retf
sar
mov
xchg
sti
std
loop
push
inc
cmps
cmp
inc
push
outs
lahf
mov
or
adc
mov
sub
pop
push
cmps
inc
jnp
btr
out
cmc
out
or
pusha
js
dec
repz
mov
xchg
mov
rcr
jmp
(bad)
(bad)
sahf
aam
scas
ss
pop
inc
jmp
xchg
popa
cmp
int3
or
int3
mov
ss
jecxz
jne
lds
into
loop
scas
daa
in
lahf
iret
movs
fbstp
lds
adc
jno
mov
clc
test
out
addr16
adc
cdq
mov
dec
ret
imul
jne
and
dec
in
aam
cmp
ret
mov
cs
cmp
mov
test
jge
cmp
in
retf
sbb
cmp
ds
daa
fmulp
sub
nop
out
jmp
in
xchg
les
xor
pushf
in
jle
mov
shl
cli
push
(bad)
jnp
leave
cmc
and
push
test
fwait
js
or
aam
xchg
jnp
scas
(bad)
cmc
jmp
lea
jmp
fild
in
(bad)
pop
retf
mov
pop
fisubr
cmp
rcr
and
mov
push
jmp
xchg
out
fwait
es
in
in
and
shl
mov
mov
out
cmp
adc
in
pop
jb
jmp
sub
lahf
and
out
(bad)
jecxz
xchg
retf
(bad)
jp
inc
ss
iret
clc
jle
inc
sti
shl
pop
xor
into
cmp
out
popa
in
repnz
mov
pop
jne
nop
xor
imul
pop
mov
dec
jne
mov
jbe
mov
aas
aas
cmc
fmulp
daa
fistp
cld
fstp
nop
add
idiv
(bad)
stc
xor
lock
(bad)
jecxz
nop
out
sar
push
cmps
and
leave
mov
rol
sub
pop
add
stos
xchg
pushf
test
cmp
std
xlat
icebp
mov
aas
jp
loope
idiv
add
loopne
pop
cli
jmp
fmul
add
sub
mov
mov
ret
(bad)
jg
cmp
mov
pusha
(bad)
sbb
stos
jno
and
sahf
fiadd
outs
(bad)
repz
adc
pop
xor
outs
out
sti
xlat
ds
inc
clc
sub
jae
popa
mov
fs
jnp
js
in
dec
into
mov
fisub
add
outs
out
push
out
(bad)
mov
xchg
and
and
loopne
jns
fldcw
popf
sub
cmp
(bad)
aaa
jg
(bad)
mov
ret
inc
retf
test
sbb
and
push
xor
adc
cs
add
mov
dec
mov
call
cmp
jbe
cmp
call
or
dec
cs
mov
out
mov
in
call
shl
pop
cdq
xchg
push
gs
xchg
outs
mov
sub
jmp
add
push
mov
pop
lahf
xchg
mov
dec
sti
mov
out
or
add
repnz
push
leave
cld
outs
cmp
daa
ret
cmps
movs
jae
xchg
fst
add
pop
mov
call
push
ret
add
push
ins
test
inc
aad
inc
inc
add
in
mov
add
shl
aad
nop
sbb
(bad)
rcl
cmp
or
mov
cdq
mov
jge
or
in
test
ja
div
or
and
or
xor
jp
call
and
fldenv
inc
retf
rol
lods
sub
mov
inc
xor
sub
ins
sbb
test
push
out
and
inc
adc
mov
dec
cmps
test
or
mov
inc
arpl
add
pop
pusha
outs
jb
xor
xchg
cwde
fwait
sahf
(bad)
xor
daa
cmps
nop
cmc
sti
enter
adc
retf
int3
xchg
aaa
mov
daa
in
inc
xor
(bad)
icebp
rcr
push
push
xchg
and
loope
sahf
jecxz
je
popa
rcr
jno
(bad)
sub
in
mov
cs
jne
mov
mov
cs
and
inc
repnz
repz
rcr
sub
pop
cwde
mov
aas
scas
(bad)
mov
sti
fistp
out
jmp
jl
shl
cmp
movs
sub
pusha
fs
cmp
jae
mov
scas
lahf
adc
mov
popf
test
movs
mov
out
xchg
les
fist
stos
arpl
adc
mov
xor
cwde
into
push
pop
fild
cmps
inc
mov
mov
pusha
ins
stc
bound
or
mov
and
ret
mov
add
aam
stos
add
shr
mov
mov
mov
sub
push
and
popf
adc
or
inc
dec
sbb
fdiv
js
fstp
or
pop
ja
fwait
in
push
and
add
and
push
cdq
aas
mov
loop
lds
stos
or
sub
mov
fild
aam
jae
push
sbb
sbb
sub
out
ficom
jno
mov
int3
int
call
mov
sbb
sbb
adc
ret
scas
js
dec
neg
sbb
cmp
cmps
out
lock
cmp
adc
sub
push
and
js
not
push
add
loope
xor
xlat
mov
out
add
add
inc
and
add
ss
xchg
sbb
popa
retf
enter
push
jg
jnp
in
adc
xchg
adc
movs
sar
inc
sub
push
aas
(bad)
dec
(bad)
call
movs
fadd
mov
push
dec
loop
fiadd
popf
mov
cmp
loope
js
xor
cmc
xor
jmp
(bad)
jmp
test
dec
gs
jae
ja
test
xor
shr
cwde
jno
pop
mov
or
fstp
clc
sub
push
iret
mov
mov
clc
jo
popf
outs
mov
xchg
enter
mov
ret
push
(bad)
lds
aad
mov
fild
les
xor
das
mov
pop
jl
hlt
int
cmps
out
das
and
cmp
cmp
add
sbb
mov
in
dec
outs
or
jg
mov
(bad)
cmp
mov
xchg
add
sar
inc
dec
jp
push
mov
stc
jb
jle
and
stos
mov
or
lods
xor
ds
dec
pop
push
or
jmp
js
pop
mov
and
enter
mov
add
cs
out
loop
sbb
adc
(bad)
sbb
push
fidivr
pop
std
retf
out
add
jmp
jmp
lds
jl
and
adc
pop
lods
add
into
outs
inc
cli
pop
sbb
cmp
jbe
les
(bad)
fs
push
neg
fnsave
jg
cmp
scas
pushf
pop
(bad)
xor
pop
in
cmps
push
adc
scas
mov
dec
mov
xor
inc
or
pop
sbb
push
jg
fistp
mov
out
movs
mov
out
sbb
out
sahf
xchg
fs
dec
adc
pop
cmps
out
mov
aam
retf
pop
sti
fcomi
mov
pop
pop
cwde
shl
aad
sbb
push
lahf
clc
or
inc
mov
push
pop
test
add
inc
(bad)
idiv
adc
test
adc
add
fadd
adc
gs
shl
xor
retf
add
sar
mov
enter
mov
cmp
pop
mov
cmp
add
jecxz
jbe
sub
cmps
sub
setae
pop
cli
or
scas
fsubr
jge
xor
jecxz
add
add
mov
loop
enter
or
shl
inc
jb
lds
mov
lahf
and
jnp
outs
repz
out
fiadd
mov
fdivr
out
dec
fwait
dec
and
js
dec
movs
pop
sbb
imul
clc
xchg
js
cld
retf
jg
mov
adc
rcl
sti
ja
push
fstp
fs
xchg
les
mov
inc
std
push
xchg
mov
mov
aas
icebp
shl
jg
enter
rcl
movs
clc
in
sbb
pop
fild
mov
loop
xor
push
jmp
aas
push
icebp
push
push
xor
jp
popa
jp
and
ret
scas
jo
jp
xor
dec
xor
push
pop
cld
pop
sub
mov
or
mov
shl
gs
sub
add
in
shl
mov
lods
adc
jne
mov
je
je
addr16
imul
push
cmc
loop
aas
and
add
push
push
mov
jbe
in
jae
dec
ret
adc
mov
pop
cmc
lea
sub
dec
adc
stos
jp
cmp
out
jl
into
fisttp
mov
into
mov
push
in
scas
(bad)
xchg
xchg
(bad)
scas
push
push
cmp
popf
cmp
ret
cld
sbb
xchg
mov
jle
adc
push
mov
retf
in
call
mov
mov
ds
ins
pop
dec
pop
(bad)
cmp
jbe
iret
pusha
push
gs
cmc
mov
and
pushf
mov
xchg
loopne
fdiv
or
add
add
stc
rcl
inc
and
js
shl
mov
out
fsubr
inc
fcomp
js
add
pop
mov
push
stos
and
pop
or
jge
and
test
sub
adc
call
jnp
dec
out
in
sub
cmp
dec
gs
sub
pop
mov
ja
cli
mov
jge
popa
mov
imul
iret
iret
setno
and
sub
adc
lock
jge
pop
jae
into
mov
ja
pop
les
hlt
retf
add
lds
or
mov
mov
mov
mov
loop
sub
mov
sar
dec
cmp
jmp
xchg
stc
retf
sbb
aad
xor
ins
xchg
mov
mov
push
mov
gs
daa
pusha
add
int
addr16
inc
arpl
leave
cmp
jmp
adc
inc
push
imul
mov
mov
mov
xor
fcom
sbb
push
adc
mov
sub
push
mov
fiadd
push
xor
mov
cld
sub
call
xchg
or
sahf
leave
sbb
into
mov
repnz
std
xor
out
push
cwde
add
mov
dec
and
and
gs
inc
sbb
lahf
ins
inc
mov
jae
test
pop
mov
inc
movs
shl
mov
shr
sub
jmp
add
(bad)
jecxz
inc
sbb
xchg
dec
sub
into
ins
lahf
repz
iret
test
outs
pmullw
fs
adc
push
jae
data16
mov
lods
pop
test
mov
mov
jnp
fdiv
mov
pop
mov
out
xchg
shr
call
sbb
adc
push
dec
adc
inc
into
addr16
and
aad
jl
aas
jo
sti
(bad)
adc
sahf
or
pop
repz
fucom
cmp
jge
pop
fld
cdq
pop
mov
mov
xchg
cmp
loopne
out
enter
xor
bound
cdq
sub
pop
push
fsubp
movs
mov
xchg
repnz
push
cdq
mov
mov
mov
imul
cmp
addr16
mov
xor
inc
sub
push
adc
xor
push
mov
out
mov
push
out
xlat
mov
dec
adc
mov
aad
and
icebp
jmp
jnp
loop
push
add
call
xchg
outs
push
adc
sub
mov
adc
cmp
int3
rol
inc
sub
jmp
push
fwait
popa
pop
sbb
cmp
fst
xchg
mov
dec
outs
and
(bad)
pop
pushf
ret
push
jmp
out
cwde
scas
scas
sbb
out
sub
popf
gs
iret
mul
ficomp
mov
mov
popa
inc
or
xchg
outs
imul
mov
push
in
or
mov
loop
stos
jnp
adc
test
in
jae
jns
push
inc
shl
movs
push
jnp
push
jmp
clc
add
push
daa
not
sbb
cmp
mov
cmps
inc
or
jecxz
lds
xlat
inc
jbe
mov
dec
adc
pop
xor
jp
loopne
mov
test
int3
mov
loop
xchg
mov
add
(bad)
cmps
(bad)
ins
adc
jnp
in
sub
cmp
cmp
ret
jno
or
add
inc
sbb
mov
pop
cmp
sub
pusha
mul
cmps
or
in
ja
pop
call
pop
test
xchg
mov
daa
scas
dec
in
cmps
or
fs
mov
in
mov
imul
mov
stc
or
call
loope
sbb
xchg
push
push
mov
rcr
sti
int3
imul
loop
jmp
aad
aas
ss
mov
add
mov
repnz
mov
jb
js
std
mov
jg
fwait
add
mov
push
add
inc
lock
mov
push
mov
add
pop
adc
and
inc
dec
push
mov
pop
cmp
cmps
mov
out
xor
jmp
cmp
sbb
push
mov
pop
adc
inc
xor
xchg
mov
adc
mov
jge
inc
mov
jle
jae
cld
sbb
push
add
cmp
push
mov
xor
cmp
fsubr
and
sbb
fld
cwde
fbld
lahf
rol
clc
xor
push
jecxz
jb
jne
xchg
sahf
push
fidivr
dec
(bad)
popf
xor
pop
mov
sbb
popf
fwait
push
jecxz
pop
xchg
push
adc
pop
inc
jmp
or
sub
push
jmp
cld
jmp
mov
ja
inc
xchg
and
sub
sti
mov
xchg
sub
mov
dec
cli
adc
hlt
xchg
mov
js
into
pop
jl
(bad)
cli
call
movs
pop
mov
xchg
add
inc
adc
bound
dec
inc
mov
dec
xchg
cmp
xchg
out
fisttp
fidivr
loopne
jb
icebp
adc
sub
jle
pop
adc
in
hlt
frstor
xchg
mov
lods
xor
jge
dec
adc
jb
or
sbb
xchg
xor
data16
mov
shl
push
fs
jno
sbb
push
jne
cli
in
sbb
daa
add
mov
cli
jmp
ret
push
adc
mov
or
xchg
or
lods
out
or
into
js
jg
(bad)
mul
shl
jne
loopne
sti
add
aad
ret
ja
pusha
push
push
(bad)
push
mov
mov
rcl
(bad)
mov
mov
inc
dec
test
sub
ficom
mov
in
cmp
add
sbb
mov
add
repnz
(bad)
jp
add
dec
fisubr
xchg
push
push
mov
dec
rol
rol
xor
sub
xor
jecxz
fisub
or
dec
inc
jge
repz
mov
lods
cmp
shl
bnd
(bad)
pusha
in
cwde
dec
adc
cld
mov
mov
sbb
sbb
cmp
sub
mov
mov
push
mov
push
xor
mov
ins
popf
push
mov
outs
jnp
dec
mov
mov
pop
test
stos
stos
out
stos
and
(bad)
mov
call
push
ret
add
mov
(bad)
jp
rcr
or
adc
push
xor
shr
je
outs
retf
or
arpl
les
shl
rol
fldenv
lock
clc
mov
(bad)
cmp
jae
pop
push
rcr
jo
push
dec
cld
mov
mov
mov
xchg
dec
cmp
pop
push
stc
fs
pop
or
cdq
dec
add
mov
(bad)
sub
pop
in
xor
inc
std
fist
inc
mov
sub
ret
inc
xor
aam
sub
mov
movs
in
sbb
ja
sub
mov
popa
xchg
dec
push
lock
inc
out
and
mov
cmp
dec
stos
jmp
gs
in
sub
cmc
xor
mov
mov
out
or
xor
jnp
dec
pushf
mov
jbe
fistp
repz
ja
push
sub
push
and
pop
push
xor
dec
add
ss
mov
je
push
aad
ja
maxps
fcmovbe
mov
dec
cmp
inc
enter
out
fild
xor
dec
cmp
daa
inc
out
pop
ins
mov
xchg
ja
je
lea
pop
addr16
imul
aam
icebp
mov
xchg
ins
mov
adc
xchg
or
inc
dec
xor
and
inc
adc
fwait
add
out
lods
mov
pusha
dec
call
jmp
je
jge
dec
pop
add
fcom
mov
pop
jbe
inc
fs
fs
fst
dec
push
add
dec
jle
repnz
jg
sbb
cmps
fild
or
xlat
or
clc
xchg
jmp
inc
rcl
jae
adc
cmp
test
push
ja
cmc
ja
push
jmp
not
xchg
push
add
adc
out
fisub
cmps
mov
push
hlt
pop
cdq
cmp
pop
jbe
imul
fcomp
sub
xchg
xchg
sti
repnz
or
nop
neg
or
dec
xor
lock
push
pop
cmp
xchg
inc
adc
or
std
das
mov
and
fiadd
into
in
xor
addr16
cli
sub
shl
push
in
xchg
xchg
jne
push
mov
addr16
cwde
out
push
sahf
imul
mov
mov
add
call
push
and
retf
int3
idiv
sub
xchg
sahf
mov
mov
push
jmp
repz
stos
(bad)
push
nop
out
fstp
add
xor
xor
sub
jno
test
adc
addr16
and
int
push
jl
push
cmp
ins
int
inc
jmp
mov
or
lods
and
aas
das
or
rol
mov
retf
mov
mov
push
ins
enter
or
loopne
jg
dec
push
add
add
sub
imul
sar
aaa
stos
mov
lock
jp
adc
pusha
mov
(bad)
addr16
pop
inc
pop
add
and
dec
inc
inc
push
add
aas
push
mov
dec
les
ja
push
in
(bad)
test
mov
sbb
cli
cmps
and
call
adc
cwde
and
retf
sar
push
call
add
rcl
idiv
mov
xor
xchg
pushf
push
adc
js
and
mov
add
aad
sub
aad
aad
out
aaa
add
fidivr
mov
aaa
enter
xchg
add
fxch
add
pop
mov
(bad)
sti
or
sub
das
(bad)
and
xchg
test
xor
cmp
xchg
mov
sub
dec
idiv
nop
movs
stos
jmp
(bad)
adc
jle
(bad)
enter
push
lock
es
inc
in
mov
jmp
and
pop
pusha
stos
xor
loop
ficomp
cmp
mov
dec
pop
jg
push
movs
xchg
es
pop
push
hlt
cwde
loope
add
xchg
call
sub
xchg
aad
pushf
scas
mov
leave
enter
jnp
movs
fdiv
pusha
add
push
daa
dec
adc
dec
rcl
push
xchg
push
popa
cmps
mov
not
scas
inc
jp
mov
mov
cdq
stos
add
adc
fst
pop
enter
dec
xchg
push
ins
push
adc
outs
je
jl
imul
ds
shl
test
pop
xor
jae
jne
xor
icebp
jb
les
sbb
xchg
ins
jge
sub
cmps
add
popa
pop
cmps
mov
mov
sbb
xor
xor
sbb
pop
add
movs
shl
adc
nop
sub
retf
iret
in
ins
jns
and
dec
xor
pop
out
or
add
xor
cmp
movs
fisubr
cmp
vcvtpd2ps
enter
and
cmp
mov
adc
xor
sbb
in
cmps
mov
cdq
popf
mov
ja
adc
jo
sbb
sbb
xchg
sbb
cld
and
jbe
sub
pop
stc
outs
and
add
dec
daa
add
ss
shl
cmp
dec
jg
dec
inc
mov
andnps
retf
pop
fdivr
jmp
mov
adc
std
jbe
xchg
vcvtps2pd
jp
pop
aaa
ror
ret
out
ins
add
mov
mov
mov
cmp
fsubr
scas
cmp
gs
ror
retf
push
mov
dec
dec
cld
push
xor
inc
ja
imul
jno
int
fidivr
adc
sar
sbb
dec
cs
sub
cmps
sbb
lods
jo
cmp
xor
rcl
inc
xchg
and
nop
out
mov
into
push
(bad)
into
sub
mov
(bad)
dec
dec
jp
pop
outs
aas
mov
scas
xor
inc
ror
pusha
into
sub
iret
int3
adc
sbb
cli
rol
lods
adc
cmp
mov
in
mov
mov
fs
enter
ret
pop
call
in
dec
clc
add
add
adc
push
shl
xchg
out
xchg
pop
jbe
jb
in
es
mov
dec
xor
or
ret
test
cmp
jns
sbb
icebp
loop
sub
push
sub
sub
inc
cli
xchg
stos
or
and
inc
repz
shl
mov
jns
ins
jns
push
out
push
pop
dec
(bad)
mov
pop
push
add
adc
(bad)
xchg
add
gs
cmp
enter
dec
gs
or
pushf
ds
mov
jecxz
leave
xor
or
ja
mov
mov
xlat
scas
push
pop
xchg
pop
inc
adc
je
xchg
mov
inc
sub
cmps
xchg
imul
mov
std
xor
add
inc
je
adc
xchg
div
push
push
adc
xchg
mov
daa
pop
add
adc
push
leave
mov
sub
jbe
mov
int3
inc
xor
jb
(bad)
fiadd
add
sub
adc
test
in
bound
std
div
je
ins
xchg
loope
aas
repnz
jae
ret
dec
push
aad
jo
jecxz
loop
int3
ficom
dec
out
cs
adc
add
mov
dec
ror
addr16
push
jle
push
inc
fcmovu
stos
cs
sbb
xchg
pop
(bad)
cli
in
and
scas
into
cdq
sub
mov
ins
or
inc
xchg
(bad)
test
jns
jae
xor
xchg
loope
test
xor
bound
jb
repnz
pop
add
pop
mov
push
in
add
in
std
aas
and
and
dec
add
test
jbe
mov
(bad)
pop
inc
stos
fnstcw
adc
adc
add
arpl
(bad)
jnp
(bad)
and
push
shl
sbb
pop
std
dec
mov
(bad)
pop
sbb
fist
inc
das
daa
or
sub
pop
ss
dec
sub
or
inc
push
(bad)
or
cmovo
adc
enter
movs
repnz
cmps
dec
(bad)
and
mov
stc
mov
aam
xchg
and
fs
adc
aas
inc
pop
(bad)
imul
cli
sub
jmp
mov
and
aam
cmp
mov
cli
sbb
mov
jae
fild
jmp
pcmpeqb
fidiv
pop
mov
test
mul
jno
adc
and
dec
jp
loopne
cmp
fsub
sbb
mov
dec
add
fwait
neg
arpl
test
push
jne
fdivr
mov
stos
fmul
mov
mov
jp
movs
xor
sbb
or
test
xchg
es
adc
push
mov
scas
das
das
sti
or
fild
add
inc
mov
test
fist
add
int3
xchg
add
sbb
add
outs
mov
daa
dec
sti
push
inc
and
pop
arpl
push
popa
icebp
call
mov
rcr
sbb
cs
cmps
cwde
cmp
xchg
sbb
sar
cmp
dec
and
cmc
mov
neg
js
xchg
sbb
dec
neg
frstor
lea
(bad)
xchg
ltr
xor
push
and
nop
xchg
repz
test
jnp
mov
mov
imul
mov
dec
push
xchg
cmp
add
inc
xchg
xor
cmp
xor
sbb
push
outs
cmps
dec
push
(bad)
sar
and
fadd
push
mov
mov
les
or
stos
xor
outs
pop
mov
imul
call
dec
and
outs
nop
mov
mov
nop
das
mov
push
icebp
push
dec
xchg
ds
push
lahf
bnd
sbb
stos
add
cdq
daa
add
xchg
fadd
adc
mov
add
stos
retf
sbb
add
xor
hlt
xchg
jecxz
jecxz
xor
addr16
jmp
neg
arpl
arpl
push
and
lea
es
xor
sub
xchg
cwde
fdiv
sub
mov
and
pop
xor
mov
lds
call
cdq
fild
mov
add
sahf
and
fidivr
shl
push
xchg
fwait
lds
icebp
retf
fldcw
inc
and
and
out
sbb
adc
add
dec
dec
ja
sar
(bad)
pusha
push
adc
cld
xor
test
retf
rol
push
adc
bound
xor
cdq
iret
or
loopne
jnp
mov
popa
adc
out
js
xchg
sub
pop
cdq
mov
mov
adc
aad
xchg
(bad)
mov
pop
mov
cmp
jno
inc
mov
(bad)
pushf
ja
into
sti
fnstenv
pusha
hlt
mov
mov
dec
loope
add
jbe
iret
xor
cmps
ret
sbb
movs
int3
hlt
movs
dec
push
adc
or
icebp
dec
cmp
cmc
outs
shr
xor
mov
mov
mov
nop
out
mov
push
mov
loope
mov
aas
(bad)
sub
repz
or
xor
fstp
int3
jno
inc
je
call
repz
hlt
sar
mov
dec
pop
sahf
pushf
push
adc
aam
mov
add
imul
jae
push
jbe
xor
(bad)
(bad)
jmp
fdivr
jo
push
add
lock
gs
xchg
shl
jmp
fcom
jmp
lds
adc
adc
aaa
iret
in
fwait
rcl
xchg
ret
sub
xor
dec
add
(bad)
fiadd
nop
inc
cld
mov
iret
ret
repz
pop
mov
popa
retf
inc
mov
bound
sub
jmp
and
jp
out
fcomp
sbb
shl
div
rep
push
jecxz
stc
sbb
repnz
mov
adc
retf
mov
call
xor
push
and
or
jmp
sbb
inc
or
call
mov
dec
cmp
add
or
cmp
xchg
div
fwait
jnp
cbw
sbb
cmp
dec
xor
std
add
push
pop
mov
arpl
inc
cmps
stos
loop
pop
cwde
sub
mov
xchg
xchg
bound
mov
test
add
popa
rcr
xor
ins
lds
dec
jnp
sbb
stos
mov
fdivp
fwait
sbb
mov
(bad)
movs
xchg
mov
lods
ret
mov
sub
and
pop
pop
jae
jns
mov
and
jo
add
xlat
cld
mov
cdq
sub
iret
add
test
nop
pusha
pop
sub
pop
pushf
push
jno
rcr
cmp
pop
inc
inc
fadd
dec
inc
sub
add
pop
add
leave
add
daa
sahf
cmp
mov
test
mov
pop
leave
shl
xchg
in
mov
jge
jne
retf
scas
in
pop
or
es
jno
mov
fidivr
scas
ds
sub
sub
inc
xchg
mov
inc
jg
sahf
int
mov
sub
in
adc
dec
sub
push
and
bound
aaa
repnz
pop
jb
mov
lea
dec
in
ds
pop
cld
jmp
adc
mov
mov
add
pop
enter
frstor
adc
daa
add
repz
xor
push
fld
fadd
in
or
add
imul
call
shr
mov
or
jb
and
ja
mov
push
sbb
rol
pop
inc
js
add
mov
dec
lds
test
mov
fmul
ret
outs
in
adc
mov
pop
test
or
push
jmp
gs
int
(bad)
bound
adc
lock
jbe
add
in
mov
daa
mov
in
(bad)
mov
and
retf
xchg
cs
test
das
sub
sub
cli
scas
and
call
xchg
in
inc
cmp
arpl
repnz
sar
add
sbb
test
int3
inc
xor
cli
int3
add
push
stos
mov
mov
sub
dec
icebp
scas
add
push
sub
in
mov
mov
sub
sbb
das
pop
inc
push
push
sub
inc
adc
test
les
mov
add
push
rcr
ds
dec
mov
sub
out
ficom
je
fdiv
jns
cmp
cmps
cmp
sahf
cmps
rep
jp
add
popa
inc
pop
mov
xor
leave
pop
sub
(bad)
xchg
fidivr
not
sub
jp
fdiv
jmp
leave
pop
xchg
popa
jmp
adc
xor
jmp
(bad)
les
cmp
outs
(bad)
sbb
iret
mov
jge
sub
mov
daa
ins
pushf
jbe
clc
xchg
ja
lods
stos
cld
sbb
div
add
sbb
loopne
dec
sbb
add
iret
jle
xor
sbb
xor
lahf
inc
jb
int3
call
fwait
adc
ja
stc
imul
jne
in
mov
add
cmp
sub
and
ja
adc
das
mov
outs
popf
gs
les
jge
mov
jmp
inc
ret
cmp
or
mov
add
ror
mov
mov
mov
and
push
mul
jb
scas
imul
ss
xchg
test
sbb
fiadd
jb
dec
cmp
out
xchg
stos
push
jl
into
addr16
jbe
or
xor
xor
cwde
shr
push
or
in
cld
xor
dec
xchg
cmp
shr
push
jno
mov
and
mov
mov
fdivr
(bad)
test
cmps
cli
mov
jle
cld
in
xor
retf
jae
(bad)
jb
nop
gs
in
rcr
(bad)
xor
mov
sti
mov
lock
add
push
xchg
dec
sbb
(bad)
mov
aam
add
mov
out
imul
cld
aaa
idiv
std
sub
mov
in
fmul
pop
push
outs
sbb
call
push
cmp
dec
pop
dec
aas
and
bound
xor
jge
inc
add
scas
pop
xor
nop
mov
jns
test
jge
shl
mov
xor
push
or
sbb
jle
cmp
push
mov
scas
inc
mov
and
adc
ret
repz
out
and
retf
ss
fstp
pop
mov
arpl
test
clc
shl
ins
imul
aam
adc
dec
add
jg
dec
add
pop
add
pop
inc
push
int3
fsubr
test
xor
(bad)
jge
loope
pushf
add
movs
mov
mov
push
(bad)
xchg
sub
retf
xchg
popa
mov
retf
mov
jo
and
sub
mov
add
out
or
jl
les
add
bound
push
enter
in
xchg
push
jg
test
jle
out
pushf
xchg
pop
es
xchg
dec
test
lahf
push
mov
pop
dec
(bad)
shl
pop
into
sar
imul
mov
fiadd
stc
(bad)
sbb
addr16
pushf
cli
mov
loopne
(bad)
and
mov
fld
sbb
sti
test
inc
lea
test
sub
repnz
lods
inc
loope
enter
adc
idiv
sbb
popf
xchg
sbb
dec
push
in
dec
inc
jmp
sub
cwde
cli
push
inc
add
fwait
int3
sti
div
or
rol
out
pop
sbb
(bad)
sub
adc
mov
add
sub
test
push
shr
sub
retw
push
data16
fsubp
imul
and
movs
aam
stos
out
out
xchg
jge
mov
ror
sub
push
mov
sbb
daa
inc
and
loop
inc
fidivr
pop
jb
test
fdivr
dec
mov
mov
dec
add
wrmsr
pusha
lock
cwde
push
es
jns
sti
fld
test
dec
xor
jecxz
xor
inc
add
and
adc
call
call
aas
mov
cmc
cmp
ficomp
cmp
jae
not
or
(bad)
retf
cmp
mov
xor
or
cmp
in
aam
push
cmp
in
es
push
add
push
pop
cli
dec
call
xor
mov
xor
sub
outs
and
cmp
cmc
das
sub
push
push
(bad)
fld
dec
shl
pop
lea
test
mov
pushf
out
jbe
stc
mov
fs
dec
ror
mov
mov
loop
adc
cmovp
add
scas
imul
add
test
cmp
inc
inc
add
popf
jbe
mov
cmc
adc
mov
stos
xchg
out
add
xor
and
imul
sbb
jb
mov
sub
mov
inc
scas
popf
jl
call
push
test
lock
std
stc
sahf
or
pushf
fs
pop
or
sahf
xchg
mov
clc
fcmovbe
rcr
push
push
sub
sbb
enter
test
jno
jmp
dec
sbb
push
(bad)
xchg
in
add
add
mov
stos
cmp
aam
jns
data16
int3
clc
sub
les
jle
leave
pop
aaa
inc
lds
jae
pop
shr
pop
(bad)
clc
xchg
adc
sbb
shr
xlat
mov
(bad)
adc
xor
mov
mov
or
imul
push
sbb
mov
cld
imul
mov
adc
adc
sub
mov
jecxz
cmp
les
aad
imul
add
jle
mov
mov
add
sub
xor
inc
sub
dec
es
xchg
cmp
xor
fld
dec
loop
lds
sbb
jo
pop
mov
push
adc
jne
jecxz
in
in
retf
nop
push
jge
adc
mov
addr16
jb
lds
sbb
push
cld
or
int
xchg
mov
mov
das
mov
pop
adc
hlt
fnsetpm(287
daa
lock
mov
cmp
cli
jle
push
shl
fdiv
(bad)
call
mov
stos
and
inc
cs
scas
xchg
popf
jne
in
dec
sbb
into
add
shr
push
daa
dec
rol
mov
dec
inc
jae
jno
inc
xor
jmp
(bad)
(bad)
push
rcl
add
outs
push
sbb
inc
push
or
and
xor
and
in
pop
jbe
cwde
push
xor
cmp
clc
addr16
mov
ret
jl
mov
add
inc
adc
dec
(bad)
fstp
xor
pop
pop
popf
adc
test
fdiv
jl
and
scas
or
psllq
pop
jg
popf
ret
in
jge
push
movs
push
push
and
mov
loopne
xchg
adc
xchg
jmp
or
or
ja
rcr
jmp
ins
dec
outs
test
adc
outs
fild
in
js
aam
leave
ja
in
dec
push
loopne
out
jae
ds
or
and
cdq
das
jle
rcr
adc
cmp
out
add
push
push
and
test
inc
test
jae
mov
add
mov
add
pop
pop
(bad)
cld
pop
mov
or
ret
movs
cli
xor
(bad)
pusha
sub
and
xchg
clc
cmp
or
add
(bad)
or
mov
test
inc
mov
add
inc
add
and
rsqrtps
fucomp
(bad)
sub
ja
or
sbb
lods
(bad)
and
sub
loopne
imul
mov
pop
call
repnz
push
mov
lock
jae
xchg
lods
or
in
(bad)
xchg
call
imul
iret
sbb
gs
stos
inc
inc
call
sub
mov
or
mov
cld
test
cmp
push
fcom
jne
in
or
dec
sub
inc
and
test
test
js
add
jae
dec
retf
push
repnz
ror
jne
mov
mov
mov
cmp
fst
js
call
push
or
sbb
mov
push
fxch
loope
(bad)
or
iret
jne
test
scas
push
movs
xchg
iret
xchg
xor
leave
rol
push
stc
adc
ins
xor
mov
xchg
retf
(bad)
push
repnz
xor
cwde
test
inc
mov
pop
enter
or
pusha
jl
mov
push
dec
dec
cmps
adc
cmp
adc
test
cli
adc
jmp
jne
jo
jg
dec
sbb
iret
scas
push
add
cmp
xor
sysret
or
cmps
(bad)
adc
mov
jo
inc
loopne
sbb
shl
add
sbb
xchg
lods
pop
sbb
(bad)
mov
scas
ins
rcl
add
pusha
inc
test
cmp
fmulp
cmp
into
inc
mov
push
mov
sbb
sub
dec
sub
xor
movs
sar
jp
jno
push
fcompp
imul
out
xor
xor
sbb
sti
int
imul
push
mov
jmp
dec
ret
pop
jmp
dec
rcl
ret
cmc
xor
pop
push
cmp
cmp
ror
retf
xchg
fdiv
mov
stos
mov
sub
mov
inc
mov
sahf
test
xlat
retf
add
jmp
adc
inc
cdq
and
jmp
out
or
hlt
jmp
iret
sbb
dec
xor
inc
adc
std
lock
mov
fstp
shr
cmps
pop
jge
xchg
inc
in
lea
xchg
out
add
out
fmul
add
movs
mov
in
xchg
sub
add
xchg
sti
nop
add
jb
xor
pop
add
sbb
xor
add
adc
and
sub
scas
fldcw
cs
push
inc
dec
cwde
(bad)
movs
or
xor
jecxz
(bad)
(bad)
cmp
dec
dec
test
sbb
push
sub
outs
inc
push
imul
inc
dec
cmp
cwde
jne
sub
push
sbb
mov
mov
adc
lock
mov
mov
(bad)
cld
fnstcw
inc
push
stc
add
sbb
jo
ret
ficom
outs
popa
shl
faddp
lock
mov
int
dec
lds
int
retf
cmp
add
xchg
je
add
jns
leave
jp
cmp
adc
movs
lds
mov
aad
out
mov
push
call
shl
mov
aad
mov
repnz
rcl
adc
cmp
sbb
loop
cmp
sar
sub
xor
dec
push
pushf
je
gs
sti
fild
outs
scas
pop
xlat
push
shl
cdq
xlat
xchg
adc
fimul
lods
pop
add
(bad)
adc
mov
inc
sub
pop
jno
mov
sysret
add
inc
popf
or
sub
lds
adc
sub
mov
neg
xchg
popa
test
int3
mov
xchg
gs
push
lock
out
push
cmps
or
push
xchg
and
adc
(bad)
pop
fwait
push
inc
xor
or
mov
enter
push
mov
mov
xchg
retf
aam
jns
jg
fistp
sbb
pusha
cmps
or
test
test
xor
dec
loop
and
inc
add
xor
sub
arpl
mov
sahf
test
cmps
cwde
dec
push
inc
mov
adc
mov
cli
and
lea
and
add
(bad)
mov
mov
pop
ss
stc
int3
cs
test
stos
movs
mov
mov
enter
sbb
adc
xor
enter
mov
inc
dec
sti
push
and
jle
dec
and
call
or
cwde
(bad)
mov
lods
and
or
(bad)
daa
xchg
cwde
mov
out
sub
sbb
adc
ins
in
pop
fwait
sub
nop
retf
popa
inc
xchg
sbb
cmps
sub
sub
in
add
clc
push
fdiv
in
enter
dec
ret
mov
rcr
daa
test
jnp
sbb
cmps
xchg
push
cld
add
add
and
pop
aas
push
xchg
mov
sbb
(bad)
ja
jmp
jg
push
push
pop
adc
and
push
lock
daa
cdq
and
pop
add
jp
ins
test
xlat
xchg
je
xchg
arpl
inc
dec
fstp
clc
fcomp
sbb
pusha
es
stc
mov
rol
cs
adc
fnstenv
xchg
mov
sub
sbb
pop
sbb
cmps
xor
add
popa
or
push
or
add
sbb
test
outs
test
sti
dec
in
fidiv
ror
arpl
sbb
rol
shufps
push
(bad)
mov
(bad)
cmp
lea
sub
test
sar
das
jnp
mov
stc
push
call
cld
pusha
jmp
pop
jg
lock
adc
push
iret
cmp
or
adc
push
dec
jbe
pop
das
push
xor
jecxz
push
xchg
scas
inc
fist
dec
stos
and
cmps
ret
mov
mov
rcl
(bad)
sub
and
ror
js
repnz
mov
jae
pop
add
(bad)
sub
ret
out
sbb
inc
imul
mov
mov
xchg
movs
ja
jmp
pop
jne
fs
sbb
lahf
jl
xchg
cmp
cmp
dec
mov
xchg
xor
js
xchg
mov
movs
xor
sbb
in
push
pop
cmp
push
loopne
pop
cs
sbb
mov
(bad)
mov
dec
mov
cmps
das
ror
cmp
mov
ret
pop
into
push
sub
rcr
dec
pop
cmp
test
cmps
test
and
mov
or
push
mov
adc
popa
mov
push
int
or
hlt
inc
adc
adc
xchg
jmp
les
mov
(bad)
add
mov
jmp
pop
push
xor
mov
scas
sar
xor
fcomp
jo
and
inc
out
inc
adc
xchg
pop
or
ja
lock
xor
fnsave
mov
loope
and
and
retf
or
lock
outs
in
stc
shl
inc
adc
mov
sub
sub
fisttp
je
inc
mov
mov
aad
sbb
lds
mov
(bad)
out
mov
cld
scas
jnp
inc
push
ficomp
imul
pop
xchg
sbb
mov
sub
xchg
push
pop
pop
call
dec
les
pushf
test
jle
movs
push
les
adc
sbb
pushf
mov
mov
stc
sub
push
add
pop
bound
inc
loope
xor
jmp
iret
loop
shr
in
mov
aam
cmc
cmp
sar
aas
push
cmp
inc
or
or
inc
mov
push
cmc
sbb
mov
cmp
neg
jnp
adc
or
lods
mov
outs
push
mov
cmp
cld
fst
sbb
sbb
jno
jmp
lea
in
inc
lea
(bad)
clc
pop
mov
in
mov
xor
xchg
push
cdq
mov
pop
mov
(bad)
pusha
cwde
push
lea
jge
jb
int3
in
mov
pusha
xchg
xchg
and
jo
dec
fs
sti
xor
lahf
add
or
xor
jmp
mov
push
aas
mov
xchg
fwait
cmc
or
mov
xor
mov
mov
sub
movs
jb
jnp
or
mov
mov
mov
test
sbb
jmp
adc
push
dec
frstor
pop
mov
fdivrp
rcr
mov
mov
jge
rcr
xor
pop
sub
test
add
pop
mov
pushf
icebp
ror
(bad)
jle
lahf
js
fistp
pushf
jge
dec
adc
or
lock
cwde
stos
xor
rol
push
mov
sbb
sbb
push
push
rol
push
imul
adc
add
inc
push
pop
cdq
cld
xchg
inc
or
pop
dec
dec
mov
(bad)
and
fbld
sahf
push
xchg
out
add
adc
cmp
ss
outs
mov
ins
popa
dec
mov
mov
xor
sti
lds
inc
and
inc
pop
fs
jo
sub
jb
(bad)
aam
sbb
ins
add
cmps
xchg
mov
push
(bad)
(bad)
xor
jno
push
pop
inc
cwde
mov
stc
mov
mov
mov
mov
mov
add
mov
xor
clc
sbb
jp
or
pop
mov
sub
inc
jo
stc
mov
add
js
mov
imul
sbb
pop
jnp
fmul
loop
out
pop
xchg
dec
adc
push
lds
jo
xchg
jae
pop
mov
fsub
jno
push
enter
mov
(bad)
xor
iret
mov
add
iret
add
retf
dec
sar
pop
add
cmp
(bad)
pushf
into
dec
mov
int
push
pop
mov
xchg
(bad)
pop
aaa
cdq
xor
dec
adc
xchg
xor
sub
(bad)
leave
push
add
sahf
nop
and
pop
ins
inc
pop
xor
xor
inc
int3
lds
rol
int3
mov
and
vextracti64x4
sahf
mov
mov
add
cld
loop
aam
and
(bad)
dec
xor
and
cmc
and
mov
pop
jg
jmp
es
sbb
or
push
mov
push
push
add
add
ja
retf
lock
icebp
jmp
pop
jo
imul
xor
stos
bound
push
and
pop
jae
daa
outs
test
scas
stos
bound
inc
push
push
cmps
push
lea
jl
test
cmp
(bad)
cwde
(bad)
dec
pusha
add
adc
sbb
inc
cmp
adc
mov
aas
pusha
push
or
mov
xor
add
sub
push
(bad)
cmc
outs
(bad)
gs
arpl
cmp
push
add
je
hlt
jae
sub
mov
xor
iret
xor
stc
std
scas
(bad)
jmp
out
push
push
or
fild
inc
sub
aad
repz
jle
pop
std
fldenv
cmp
int3
or
jge
xchg
xor
mov
das
jecxz
cmp
daa
pushf
dec
cli
adc
in
js
call
cmp
fisttp
jp
xchg
jg
out
cs
xchg
mov
in
retf
clc
pop
mov
stos
or
or
cmp
jo
mov
lods
pop
jmp
cld
loopne
int
sbb
ds
call
jne
lods
lea
pop
cmps
rcl
inc
lahf
dec
(bad)
cli
sbb
xchg
aas
xchg
pop
xchg
xchg
and
xchg
fscale
cmp
imul
pop
out
enter
enter
mov
fisttp
sub
rol
adc
mov
mov
mov
dec
daa
mul
call
cmps
es
xchg
mov
loop
mov
jb
and
cmp
icebp
jg
and
adc
mov
(bad)
retf
mov
dec
js
pop
jecxz
pop
shr
cmps
pop
icebp
jp
cmc
cmc
mov
sbb
iret
and
pop
aas
push
xor
lahf
mov
mov
mov
dec
dec
fisttp
les
fdivr
in
fadd
add
push
mov
and
sar
imul
jg
inc
dec
add
xor
xor
and
sub
add
stos
pop
call
cmp
jb
and
sahf
popf
and
or
mov
lods
mov
jae
ror
imul
pop
dec
add
push
add
cdq
push
out
mov
push
pop
neg
add
mov
cmp
icebp
jmp
and
cmc
push
fmulp
loopne
inc
mov
mov
pop
ds
mov
(bad)
inc
pop
inc
popa
xchg
or
xchg
pusha
and
inc
enter
test
add
repnz
lahf
mov
pop
std
ja
ret
(bad)
jnp
xchg
repnz
test
test
sub
dec
enter
xor
(bad)
pusha
pop
fbstp
test
mov
shl
fsubr
jne
mov
sbb
pop
inc
arpl
cmp
(bad)
sub
out
or
push
rcl
inc
push
add
xchg
push
movs
adc
shr
cmp
cmp
mov
jo
and
retf
fwait
xor
or
lds
and
dec
xor
and
outs
pop
(bad)
(bad)
ret
mul
(bad)
fcmovnbe
jns
inc
lock
lods
sbb
push
sbb
add
or
xor
sbb
movs
into
je
test
add
fmul
outs
(bad)
xchg
mov
xor
mov
mov
lock
inc
sbb
push
pop
or
out
pop
call
jg
imul
lahf
shr
add
mov
das
std
mov
movs
xor
or
stos
sub
scas
movs
aam
or
adc
dec
idiv
jmp
dec
mov
or
test
in
add
lock
movs
pushf
cmp
push
movs
push
sbb
ins
icebp
aam
call
sub
inc
in
jle
pop
xchg
mov
ins
mov
test
adc
cwde
addr16
call
retf
xor
xor
push
sbb
test
add
mov
loopne
xor
hlt
pop
movs
xchg
push
dec
jbe
inc
ja
jp
ss
movs
cmp
adc
aad
mov
and
pop
test
mov
pop
cmp
pushf
push
xor
inc
adc
fwait
dec
in
into
int
out
std
or
(bad)
push
sub
sar
je
add
pop
adc
jno
shl
pop
loopne
imul
pushf
jnp
pop
not
jle
mov
mov
pop
arpl
pop
push
jmp
icebp
xchg
leave
loop
xlat
lock
adc
outs
int
mov
stc
pop
test
xor
outs
and
imul
cmc
xchg
mov
add
test
fimul
int3
imul
jbe
out
jg
lds
rol
jbe
jno
dec
lahf
cld
mov
mov
fcomp
inc
in
cli
jg
mov
dec
push
inc
or
sbb
adc
sbb
cmp
fist
push
adc
inc
cmp
inc
fldcw
mov
xchg
cmps
repnz
and
hlt
test
addr16
jb
jg
push
inc
push
cmp
jno
mov
stc
mov
sub
in
(bad)
repnz
cmp
push
enter
in
ja
inc
push
pop
add
lock
mov
imul
arpl
(bad)
mov
sub
stos
cdq
fisttp
inc
jbe
fs
push
ins
out
jns
inc
mov
xor
pop
xor
cmc
nop
push
pop
and
add
add
xlat
or
push
call
dec
push
call
into
adc
repz
mov
dec
sbb
mov
je
fiadd
ret
dec
test
dec
lods
shl
mov
push
out
add
add
fwait
jns
sbb
push
sub
aad
mov
add
jns
fwait
cmc
cmove
push
jno
nop
adc
sub
int3
push
mov
cli
repz
jbe
mov
repnz
sahf
and
movs
sub
jg
sbb
sub
jle
rcl
in
jnp
stos
xor
mov
arpl
dec
scas
aad
jmp
(bad)
and
shl
out
inc
daa
sbb
push
mov
std
push
xchg
jmp
push
inc
cmp
push
lods
push
jno
lock
mov
lds
jecxz
test
pop
cmp
cmp
mov
inc
imul
lods
pushf
jbe
mov
jno
repz
repz
cmp
cwde
mov
xchg
add
mov
jne
adc
out
dec
xchg
sti
popa
gs
xchg
dec
mov
inc
aam
mov
push
sahf
and
pop
lods
icebp
icebp
dec
ins
or
outs
xor
jnp
xor
lahf
adc
inc
shl
push
inc
inc
mov
ins
jp
cmc
xchg
pop
lds
mov
add
movs
push
or
cdq
rol
mov
and
daa
cmp
jecxz
mov
sbb
fdivr
cmp
test
jl
rcr
mov
cmp
fld
jmp
sbb
dec
sti
rcl
mov
mov
sub
fucom
pusha
enter
pop
pop
sti
lea
or
movs
shl
sbb
lods
test
cdq
jge
jae
cmp
shl
jae
add
add
inc
es
xchg
popa
aad
jp
jmp
punpckhwd
jnp
cdq
fdiv
dec
mov
push
shl
add
sti
idiv
pop
inc
dec
xchg
pop
push
inc
push
stos
pushf
sti
jbe
in
xor
(bad)
and
push
fs
jp
xor
push
or
cmp
mov
fld
inc
adc
push
imul
xchg
add
jecxz
(bad)
(bad)
aas
std
pop
lods
jg
gs
icebp
mul
sahf
lahf
cmp
and
sbb
jne
sbb
jecxz
or
hlt
bound
and
mov
fs
aam
xchg
lahf
cs
lods
int
push
aad
dec
inc
lods
fwait
pop
popa
sbb
adc
lea
and
push
sub
popf
popf
pop
dec
fnstenv
dec
inc
in
shl
int
pop
jo
add
mov
xchg
dec
fcmovu
cli
clc
adc
add
movs
push
pop
lods
cmp
xchg
mov
int
xchg
bound
in
js
push
fsubp
pop
enter
push
ds
(bad)
call
sub
outs
mov
pop
fisubr
movs
mov
out
add
push
mov
pop
add
sbb
push
mov
inc
mov
adc
into
icebp
(bad)
sbb
mov
(bad)
int3
sub
popa
in
dec
mov
retf
call
and
out
call
ins
(bad)
xor
shl
mov
jge
adc
mov
sub
cs
jmp
sub
popf
or
imul
pop
sbb
cmp
dec
inc
add
pop
(bad)
add
dec
out
fstp
sub
stos
in
daa
in
mov
dec
jo
(bad)
push
pop
shl
repnz
dec
xchg
(bad)
push
scas
test
and
popf
ins
mov
fdivr
ss
popa
cmps
in
cdq
inc
sub
lahf
test
mov
daa
mov
out
mov
inc
or
(bad)
sub
mov
loop
push
aas
sbb
xchg
dec
fst
test
(bad)
sar
mov
loope
mov
xchg
adc
jge
lea
(bad)
scas
ret
cmps
bsr
dec
pop
sti
jne
ja
out
aad
gs
jno
cmp
retf
sar
movs
push
test
enter
aad
lods
dec
xchg
in
sahf
and
dec
jnp
lods
loopne
cmps
pop
mov
xchg
cmp
dec
js
pop
div
popf
pushf
je
add
cmp
repz
repz
sbb
ins
push
add
shl
xchg
(bad)
push
popa
xlat
pop
or
and
xor
dec
lods
(bad)
xor
test
gs
call
call
data16
sub
stos
sbb
cmp
lahf
out
cmp
xchg
mov
int3
xchg
or
jle
mov
scas
xchg
or
sub
sbb
mov
stos
mov
lea
push
cmp
call
rcr
mov
or
loope
mov
fisttp
mul
push
xchg
test
jecxz
daa
add
adc
xor
add
push
repz
mov
imul
pop
sub
int
rcr
add
imul
sub
add
pushf
xchg
dec
add
ds
pop
ss
imul
mov
les
add
cmp
int3
inc
pop
es
pop
jns
add
mov
cs
enter
adc
add
and
push
repnz
adc
cwde
or
int
pop
rcr
ja
xchg
sbb
pusha
sub
shl
add
(bad)
and
(bad)
mov
cmp
in
fisttp
in
(bad)
(bad)
aas
out
jp
cmp
cld
xor
cmp
nop
popf
xchg
cdq
out
shr
mov
es
stc
cs
hlt
outs
xor
pop
movs
push
cmp
add
scas
add
out
ins
dec
adc
cs
test
add
call
hlt
cmp
cmp
ds
call
mov
push
jge
call
mov
or
out
jae
test
xchg
out
cmp
add
pop
inc
mov
ds
popa
shrd
push
sub
dec
cmp
lahf
jmp
sbb
cmc
fidiv
jmp
mov
sti
jmp
add
push
cmc
sbb
adc
je
push
inc
jns
push
mov
(bad)
and
xor
jmp
dec
ret
jecxz
jmp
nop
sub
pop
xchg
jecxz
std
rol
sub
sub
xor
xor
test
cdq
aam
adc
mov
icebp
mov
xchg
or
add
shl
or
mov
push
xchg
xchg
sub
or
call
mov
sub
les
in
and
or
popa
push
test
arpl
adc
jo
and
cmps
fdiv
scas
push
nop
int3
sbb
sbb
xchg
adc
add
adc
dec
inc
cdq
jnp
sbb
scas
scas
jl
popf
lea
and
add
sar
test
shl
cmp
nop
aad
xchg
gs
jb
ins
shr
pop
retf
shr
fwait
pop
and
cmps
inc
adc
jecxz
dec
mov
sub
sbb
std
les
loopne
inc
xchg
int
(bad)
xor
sbb
pusha
and
xchg
into
lods
mov
push
int3
fldenv
sbb
pusha
add
cmp
ins
xor
xchg
mov
dec
inc
mov
dec
mov
pusha
dec
mov
xlat
xchg
jl
pop
and
xor
jecxz
push
cs
lods
enter
mov
sub
pushf
cmp
fdiv
sbb
ret
nop
adc
les
mov
adc
std
repz
xor
sub
lods
inc
and
sub
adc
sbb
adc
sub
cmp
pop
pop
add
mov
or
aad
imul
or
jp
(bad)
xor
xor
sub
add
xchg
jnp
rcr
bound
es
inc
(bad)
jmp
mov
dec
jge
mov
(bad)
shl
cmc
xchg
cdq
js
stc
lea
test
into
xor
ds
fistp
cmp
mov
jo
out
push
mov
cdq
mov
jb
into
adc
stc
aas
push
jb
sbb
dec
dec
jo
mov
adc
loop
mov
cmp
iret
push
rol
shl
movs
sub
test
cmp
fsubr
jae
hlt
adc
pop
das
jmp
and
push
je
lock
lea
cmp
lods
lahf
jnp
in
dec
adc
mov
pop
pop
or
add
in
(bad)
push
ds
push
and
mov
cmps
popa
push
icebp
or
into
and
pop
dec
cmp
popa
mov
popa
lahf
cmp
in
mov
dec
xchg
xchg
fdivr
sub
add
stc
dec
leave
xchg
and
fistp
dec
(bad)
sub
gs
inc
dec
in
jb
jl
or
test
push
mov
js
mov
jnp
cmc
outs
or
jo
dec
hlt
inc
xor
and
add
jmp
sbb
push
imul
stc
and
dec
dec
rcr
pop
dec
call
mov
stos
dec
inc
dec
popa
ds
xor
or
enter
es
mov
xor
mov
cmps
add
push
loopne
xchg
adc
mov
fmulp
bound
jmp
inc
sahf
mov
adc
mul
fwait
xor
popf
call
dec
and
rol
pop
sahf
sub
lods
shl
lds
jns
out
push
inc
mov
shr
xchg
loop
sbb
out
mul
inc
lods
retf
into
jnp
push
rol
pop
jae
stos
call
mov
(bad)
fisubr
add
xchg
scas
sbb
and
popf
jne
nop
jge
inc
xchg
push
cmp
pop
and
pop
add
jo
(bad)
mov
ins
jp
ds
or
pop
xchg
jecxz
dec
mov
movs
mov
sbb
pop
popf
stos
stos
shl
(bad)
cmp
xor
sbb
mov
jmp
dec
push
xor
rol
sub
pop
fwait
pusha
(bad)
mov
pop
popf
in
fimul
inc
std
add
push
push
or
repz
add
sub
fld
add
and
mov
xchg
repz
inc
in
push
es
push
push
cmp
xchg
sbb
cs
adc
(bad)
jne
and
mul
adc
pop
and
mov
ss
je
xor
mov
jne
popa
in
rcl
gs
push
arpl
pop
mov
lahf
push
pop
cld
cmp
iret
and
imul
add
mov
lds
fmul
outs
in
fcomp
push
jne
or
arpl
xchg
or
mov
cmc
cs
fsubr
xchg
sub
cmovae
jl
ins
jmp
jae
cmc
movs
xchg
or
sub
sub
daa
into
bound
frstor
add
sub
enter
mov
push
sub
sti
mov
cwde
dec
js
fisttp
push
inc
cs
jg
jle
mov
mov
jno
add
or
mov
repnz
pop
ss
vpaddb
push
mov
sbb
dec
xchg
dec
addr16
lods
mov
fpatan
movs
xor
pop
daa
or
sub
pop
jnp
retf
into
bnd
movs
xchg
loopne
mov
les
mov
add
mov
mov
enter
xchg
add
xlat
sar
cld
xlat
pop
or
repz
mov
in
outs
cmp
mov
inc
mov
jnp
dec
push
xor
cmp
test
mov
xor
fisubr
inc
loop
aaa
mov
push
mov
xchg
mov
and
mov
mov
cmc
jnp
inc
loop
ds
or
mov
cmp
inc
call
fidiv
sub
jg
mov
fcom
or
nop
push
inc
or
dec
fdivr
xchg
sbb
and
push
es
lahf
jns
mov
mov
add
jb
mov
call
ja
fs
pusha
mov
adc
cwde
sbb
xchg
je
mov
or
adc
dec
and
mov
sbb
mov
je
ror
and
add
xchg
mov
aas
je
leave
mov
mov
test
mov
repz
mov
cmp
stc
mov
jb
jns
cwde
mov
ja
push
enter
inc
ret
xor
mov
xor
cld
cmp
sbb
cmps
mov
(bad)
pop
fmulp
cmp
mov
aaa
repz
add
data16
(bad)
jmp
lods
adc
repnz
jecxz
sbb
(bad)
lea
mov
inc
jo
jge
xor
xchg
imul
jnp
les
aas
mov
scas
fild
jo
or
mov
mov
ret
loopne
ins
push
xchg
std
push
mov
out
test
mov
xchg
jo
rol
inc
icebp
clc
lock
mov
(bad)
aad
pop
cmp
jge
jge
adc
je
jecxz
rep
pop
jno
or
in
sbb
fnstsw
ret
xlat
xchg
nop
mov
add
cmp
adc
clc
mov
adc
data16
jae
pop
mov
dec
jmp
pop
add
pop
push
pop
dec
xchg
je
rcr
xchg
pushf
or
sbb
jno
xchg
xor
mov
int
(bad)
add
sar
mov
js
mov
stos
rol
push
(bad)
(bad)
in
(bad)
sub
lds
pop
xor
int3
adc
pop
loopne
mov
and
gs
iret
pusha
xor
adc
push
dec
jb
add
cs
adc
dec
mov
sti
sbb
sti
int
shl
mov
das
outs
or
enter
daa
fldcw
adc
stc
xor
lock
push
stos
lahf
cli
pushf
test
in
das
shr
cmp
jbe
(bad)
aas
fcomp
add
cmp
test
shr
loopne
rol
into
test
imul
inc
dec
ins
fisubr
cmp
inc
aam
cwde
stos
cmp
hlt
push
push
mov
fiadd
pusha
inc
leave
addr16
push
rcl
jne
cmc
test
xor
add
dec
jno
mov
imul
movs
dec
shl
out
sti
ins
xchg
shl
lods
hlt
sahf
mov
loope
loopne
out
jle
jle
adc
fisubr
lds
adc
xor
push
sete
add
mov
add
je
fmul
lods
in
cmp
mov
rol
mov
push
jb
cld
sbb
dec
inc
fwait
sbb
add
push
int3
shr
pop
mov
fstp
aad
cmp
xchg
cmp
aaa
mov
sub
fcomp
mov
idiv
in
mov
add
out
or
ja
call
pop
sbb
stos
fs
mov
popf
std
aam
sub
rcl
call
mov
xchg
mov
(bad)
xor
add
lods
sti
in
int3
dec
dec
adc
dec
mov
imul
pop
push
mov
mov
mov
stos
mov
sub
xchg
sbb
neg
or
(bad)
push
outs
mov
cmp
push
test
and
sub
test
and
sbb
test
in
retf
jns
pop
or
pushf
pop
iret
in
data16
mov
test
jp
(bad)
imul
shr
add
or
jbe
pop
addr16
or
daa
popf
fs
fwait
(bad)
jmp
xor
gs
jne
fstp
inc
jno
push
aas
std
in
leave
idiv
jge
hlt
pop
add
data16
movs
shr
pusha
bound
pop
dec
mov
or
jecxz
jmp
cmp
rol
rcl
sbb
das
leave
cmp
(bad)
cs
mov
push
ret
mov
sub
jmp
jp
push
mov
sti
adc
ds
ins
jnp
in
cdq
cmp
add
adc
pop
or
jno
pushf
mov
call
test
xchg
mov
cli
int
inc
daa
pusha
fidivr
xchg
icebp
lods
mov
sub
sub
int
sbb
mov
arpl
push
inc
pop
cmp
scas
mov
and
jmp
mov
jae
retf
and
pusha
data16
mov
fdivr
iret
push
jmp
pop
push
sar
add
push
sbb
test
repnz
stos
pop
and
cmps
or
into
mov
pop
and
test
or
data16
xor
mov
add
je
nop
add
in
ret
pop
cmc
mov
push
fstp
cmc
mov
bnd
pop
mov
inc
push
add
push
cmp
pushf
sti
xchg
xlat
loopne
inc
ror
jae
call
fst
dec
cmp
sbb
sbb
adc
pop
test
cmp
xor
out
pop
ret
add
xchg
fst
arpl
paddd
outs
mov
nop
call
dec
cmp
cs
(bad)
adc
in
jmp
ds
pop
adc
dec
aas
jb
dec
mov
adc
add
ficom
shl
sbb
neg
clc
and
pusha
mov
mov
mov
or
cmp
xor
sbb
sahf
push
fcomp
mov
sub
mov
mov
repnz
fidiv
xchg
lahf
pop
mov
pop
test
pusha
lds
arpl
cmp
ret
xchg
mov
int
or
dec
cwde
call
xor
push
push
dec
adc
ds
dec
push
inc
imul
mov
(bad)
adc
xor
xchg
ret
cld
or
ins
pop
test
icebp
sub
jmp
push
movs
sbb
mov
or
addr16
retf
pusha
int3
outs
push
sub
sbb
fmul
dec
xchg
sti
rol
push
repnz
in
fcom
xchg
call
in
mov
inc
test
jl
xor
int
mov
cmp
pusha
jle
cmp
ja
leave
fidivr
fwait
pop
retf
lds
ret
push
cs
xor
mov
jp
push
movs
stos
jl
rcr
stos
push
jl
iret
fnsave
mov
rcr
(bad)
data16
out
das
cdq
pop
out
idiv
pop
add
dec
inc
inc
and
ret
jg
mov
sbb
or
or
inc
mov
adc
xchg
xchg
(bad)
imul
or
mov
loop
cdq
repnz
sub
leave
fcomp
cld
or
out
cld
push
or
fs
(bad)
fcomp
ror
lods
sar
or
int3
inc
cs
int3
in
(bad)
mov
ja
test
inc
pop
in
retf
fidiv
mov
inc
add
add
mov
retf
clc
fnstcw
or
add
fcomp
jp
pop
stc
ret
xor
push
icebp
push
sbb
push
xchg
leave
pop
movs
mov
bts
dec
sub
mov
addr16
(bad)
imul
mov
push
inc
xchg
pop
push
ficomp
or
test
xor
pop
inc
sbb
retf
repnz
inc
or
ins
(bad)
mov
data16
jno
and
adc
test
pop
jecxz
push
mov
call
mov
lods
ret
add
icebp
cmp
call
iret
daa
in
stos
add
add
adc
and
movs
neg
jle
div
cmp
or
loop
(bad)
fimul
movs
xor
in
push
dec
xchg
mov
fcom
ins
movs
jne
xlat
fisttp
xchg
and
push
xor
mov
hlt
push
sahf
into
fwait
cmc
lahf
dec
push
test
mov
pop
lahf
cmp
jae
sub
(bad)
or
push
sbb
inc
mov
lock
pop
pop
sbb
push
mov
jae
inc
mov
inc
mov
jmp
sub
cmc
xchg
into
ins
inc
mov
and
cmps
fucomp
pop
scas
dec
xchg
xor
mov
fstp
test
jmp
xchg
outs
ja
sar
aaa
jne
ins
mov
nop
dec
or
in
stos
mov
mov
stos
inc
cli
jb
rol
rcl
cwde
mov
jp
jo
mov
lods
push
mov
xor
mov
das
mov
nop
jp
inc
test
jbe
push
pop
adc
retf
inc
or
sti
fidiv
test
daa
add
(bad)
int3
jg
xor
jle
xor
add
into
mov
bound
cmp
mov
sub
loop
sbb
xchg
inc
jne
repnz
dec
add
pop
cmp
dec
mov
aas
pusha
xor
leave
fisttp
dec
fdiv
mov
pop
fsubr
push
movs
and
sgdtd
pop
mov
jecxz
imul
and
add
lahf
jo
jo
shl
mov
and
rcr
push
stos
test
mov
cmc
(bad)
adc
xchg
cmp
push
push
ja
pop
sbb
push
mov
hlt
cmp
mov
inc
popf
or
mov
add
and
dec
inc
inc
push
xor
mov
cld
jae
in
scas
mov
in
push
jns
cmp
sbb
out
lods
ret
stc
dec
ins
(bad)
xchg
mov
jno
mov
fs
add
cmp
fdiv
xchg
mov
cld
pop
popa
sub
enter
int
dec
cmp
cmp
in
mov
cmps
pusha
mov
push
add
in
xor
add
aaa
jo
mov
pop
iret
or
push
ret
pop
pop
cdq
inc
cmps
ror
cdq
mov
mov
dec
mov
lods
sub
mov
fwait
int3
inc
test
mov
pop
rcl
or
outs
cmp
xor
fnstenv
cmp
jl
fimul
mov
push
sub
lods
or
out
lds
imul
mov
add
add
mov
pusha
mov
cld
std
xor
retf
(bad)
mov
push
rol
dec
sub
sar
cwde
cdq
shr
aam
fwait
mov
add
jmp
mov
(bad)
add
enter
add
dec
sar
es
neg
jns
ja
pop
lock
not
dec
outs
sahf
jnp
shl
(bad)
mov
push
push
fwait
dec
xchg
dec
push
pop
je
pop
push
push
xor
inc
sub
or
loopne
xor
lea
pop
mov
adc
fwait
xor
cmps
mov
or
mov
pop
(bad)
fnstcw
jle
dec
adc
jnp
cli
and
push
jge
push
aas
out
and
sbb
loop
test
or
add
lahf
test
xor
inc
mov
popf
fadd
sbb
imul
mov
aad
adc
sub
test
ds
push
fcomp
inc
(bad)
out
into
mov
out
and
imul
fnstenv
cwde
aas
pop
std
daa
ds
push
out
jmp
push
lea
add
mov
fdiv
pop
cli
sub
stc
add
(bad)
mov
scas
jno
or
push
or
jns
into
rcl
arpl
out
cdq
push
movs
int
aam
and
xchg
sbb
push
pop
sub
in
inc
cmp
push
and
out
and
jno
adc
dec
rcr
test
out
jbe
fst
xchg
dec
xchg
sbb
dec
ror
xor
ror
cmp
(bad)
cs
repz
fstp
cmp
jns
jmp
push
jle
xor
hlt
dec
(bad)
loopne
nop
dec
out
rcr
aad
cli
in
cwde
mov
not
cmp
and
sub
mov
pop
jns
mov
adc
lds
or
jns
jmp
inc
pop
je
sbb
fs
adc
pop
or
aas
test
clc
jmp
push
mov
rol
add
aas
xor
add
movs
fistp
mov
ds
aam
add
xor
loope
pop
fcomp
out
je
dec
sbb
out
sbb
std
sbb
loope
mov
jae
cmps
addr16
dec
out
inc
jnp
arpl
cmp
inc
dec
xor
push
mov
outs
test
jl
cmps
sbb
std
test
ret
mov
xlat
add
inc
push
push
mov
mov
fld
(bad)
ds
mul
fcmove
mov
stos
aaa
push
pop
mov
ror
and
push
cmp
lea
xchg
mov
jbe
leave
les
mov
inc
ja
push
je
in
add
push
jno
adc
adc
dec
aad
arpl
jp
sbb
in
jmp
cmp
clc
xchg
movs
int3
push
xor
xor
lods
xchg
mov
and
xor
mov
xchg
scas
or
mov
ficomp
jne
mov
out
imul
retf
(bad)
mov
pushf
nop
pop
cwde
out
(bad)
adc
mov
rcl
jle
enter
or
push
popa
push
pop
retf
lods
ds
mov
push
lds
cdq
mov
dec
les
lahf
test
sub
push
leave
add
(bad)
in
adc
movs
mov
(bad)
mov
stos
daa
mov
inc
add
jecxz
lock
pop
xor
xor
push
pop
or
cmp
inc
inc
adc
dec
sti
js
movs
adc
mov
inc
shl
mov
scas
shr
dec
mov
call
jge
fwait
push
jno
xchg
stc
dec
mov
(bad)
fistp
xlat
mov
push
inc
neg
adc
mov
adc
rcr
jae
dec
push
cmp
mov
jo
jge
mov
rcl
add
stc
ficom
mov
push
sub
clc
sub
xor
cmp
(bad)
int3
std
mov
sub
(bad)
sub
xchg
pop
push
mov
repz
push
or
retf
into
ror
adc
xchg
cmps
fdivr
xchg
push
int3
cmp
or
ss
in
data16
cmp
sub
lods
aas
jns
lahf
push
rol
xchg
mov
retf
jge
test
push
cld
cs
push
ret
jp
and
push
dec
xor
mov
add
sahf
xchg
mov
cmp
mov
xor
inc
out
aas
(bad)
iret
sar
call
pusha
or
pusha
jmp
mov
sub
outs
fldenv
mov
and
loope
sbb
inc
add
xlat
loope
and
stc
mov
mov
retf
aam
lods
mov
mov
pusha
push
xor
repz
xchg
inc
fcomp
int
sub
rcl
shl
in
cmp
mov
add
call
jg
or
aad
(bad)
jg
or
and
adc
and
xchg
jo
icebp
popf
sub
mov
and
mov
xchg
inc
rcr
or
in
aad
and
cmc
jp
shr
add
jae
mov
pop
jg
lds
dec
repnz
data16
pop
dec
jmp
lahf
sbb
lahf
add
and
iret
ret
xor
in
mov
imul
mov
add
sti
push
jl
and
add
fst
or
popf
add
into
mov
mov
cmp
jo
sbb
dec
imul
fs
mov
movs
mov
cwde
push
sbb
cmp
adc
add
xchg
inc
pop
ret
or
dec
xchg
push
ja
aad
fsubr
cs
push
fsub
adc
pop
nop
icebp
dec
not
lds
enter
ds
xchg
popf
xchg
dec
jnp
cmps
daa
push
(bad)
ja
out
xor
push
cwde
push
out
dec
fbstp
add
pop
add
add
add
cmps
ins
sub
and
pop
xchg
push
outs
fwait
mov
jle
xor
rcl
jg
mov
data16
gs
sahf
mov
jnp
xchg
out
test
xor
dec
les
nop
or
cld
mov
cmp
xchg
cmp
aam
in
mov
pop
es
pop
or
retf
dec
fs
mov
int
sub
std
stos
fs
aas
dec
jns
adc
jne
mov
call
cmp
fdiv
aas
nop
bound
sti
(bad)
es
outs
add
sub
add
add
cmp
jg
std
fstp
jl
aam
test
scas
out
out
mov
(bad)
jne
rcl
aas
sub
jge
mov
xchg
push
and
xor
div
mov
stos
retf
jno
adc
jb
jnp
mov
bnd
fist
mov
lahf
pusha
lds
inc
mov
aas
jp
call
test
cs
call
cli
(bad)
jmp
dec
(bad)
div
repz
add
into
push
je
je
dec
outs
(bad)
mul
mov
fimul
dec
pop
imul
aam
and
inc
or
and
enter
fs
shr
aas
sbb
(bad)
push
lods
inc
adc
test
xchg
add
add
aam
cmp
lock
cmc
xor
cmp
je
xlat
mov
out
mov
pop
(bad)
(bad)
push
cmps
je
stos
je
bnd
out
retf
movs
cmp
call
shr
shr
ins
dec
addr16
mov
std
dec
jbe
cmp
mov
imul
loope
adc
fimul
xor
and
out
aas
cmp
(bad)
inc
or
adc
pop
in
rcr
jne
lods
cmp
jle
lahf
in
push
or
sbb
jns
enter
pop
enter
cs
jae
ffree
jnp
call
sbb
sti
and
sbb
pop
or
sar
push
cmp
mov
lea
jno
rcr
pop
and
fnstsw
iret
mov
aaa
out
add
lock
std
mov
add
add
mov
repz
lahf
add
or
inc
cmps
xor
retf
test
push
imul
and
shr
out
je
inc
ror
daa
cmc
stos
push
call
retf
lock
call
gs
add
ret
xchg
cmp
shl
cmps
push
cmps
imul
int3
xor
mov
pop
pop
outs
into
sub
sbb
xchg
cmp
nop
jmp
add
push
jp
cmp
in
adc
cmps
inc
push
sub
(bad)
inc
sub
and
dec
or
loop
fwait
push
dec
scas
mov
cmp
mov
shl
hlt
stos
aaa
mov
jmp
pop
xor
data16
jns
sub
and
and
sbb
cdq
cmp
mov
add
out
jl
sti
stc
mov
fsub
fld
push
lods
mov
popa
sbb
and
pop
repnz
mov
jb
fnstenv
mov
xor
inc
jp
jg
pop
bound
fcom
mov
pop
lds
shl
cmp
out
xor
loope
mov
sub
mov
rcr
push
adc
xchg
push
shl
call
(bad)
popf
cmp
nop
sub
cmp
xchg
dec
mov
pusha
jl
aad
pop
test
pop
aam
test
xchg
in
test
inc
gs
or
pop
gs
dec
lahf
std
jo
push
mov
push
adc
sahf
data16
(bad)
fist
inc
hlt
call
jge
clc
mov
jge
and
pop
mov
jg
scas
aas
cdq
mov
leave
push
fild
push
add
mov
mov
out
(bad)
jb
cmp
push
sbb
mov
mov
xor
sbb
push
lock
jle
hlt
cmps
mov
in
inc
sbb
mov
imul
cmc
arpl
std
xchg
push
sub
add
dec
xor
fidiv
or
xchg
sbb
sub
sub
ret
cmp
imul
mov
in
fld
xchg
jb
mov
and
(bad)
es
inc
shl
adc
repz
(bad)
neg
js
repz
arpl
(bad)
scas
jp
sbb
addr16
lea
dec
xchg
add
test
pushf
imul
in
and
inc
out
push
or
and
add
xchg
pop
mov
cmp
pop
jg
daa
ins
outs
cmp
push
into
hlt
inc
fwait
dec
imul
mov
call
dec
mov
pop
dec
(bad)
lods
cdq
sub
pop
loop
xchg
mov
and
repnz
adc
dec
daa
sbb
in
xchg
mov
jnp
loope
repz
xchg
shr
ret
test
jle
lods
mov
addr16
pop
pop
je
das
and
stos
mov
cld
lds
sahf
mov
out
je
dec
push
psadbw
rcpps
dec
sti
sbb
adc
pop
sub
xor
test
push
add
cmp
adc
and
popa
add
addr16
lea
ins
fimul
sub
scas
sbb
lahf
(bad)
out
dec
out
pusha
cmp
or
in
(bad)
cmp
add
pop
push
bound
shl
cdq
js
(bad)
out
adc
shl
rcl
mov
call
daa
add
dec
pop
or
stos
retf
sbb
push
imul
scas
sub
push
pop
dec
sub
retf
pop
shl
xacquire
push
scas
xchg
imul
pop
pop
or
sahf
mov
push
sti
call
mov
mov
imul
test
ds
mov
std
pushf
jne
cld
jle
add
aas
lock
add
dec
mov
pusha
mov
sub
imul
mov
or
(bad)
push
arpl
jmp
cdq
mov
dec
enter
mov
out
enter
xchg
cmps
fwait
lods
(bad)
push
call
mov
sbb
je
or
bound
or
in
dec
mov
or
retf
inc
loop
pushf
add
popf
(bad)
jl
jecxz
push
shr
sub
inc
cdq
jnp
cmp
in
xor
sub
shr
jne
mov
retf
popa
add
jae
in
pop
mul
(bad)
std
sub
xchg
add
mov
cmps
cmp
mov
scas
test
adc
fwait
in
mov
mov
dec
jne
pop
fnsave
sbb
test
mov
push
aam
or
cmp
(bad)
cwde
add
fst
stc
mov
mov
dec
add
stos
shr
sahf
and
jge
fistp
mov
jnp
jbe
sar
dec
movs
icebp
rcr
xchg
mov
mov
ins
push
test
add
ja
fnstsw
jge
imul
cli
ja
lods
in
and
add
add
xlat
scas
fidiv
jp
sbb
and
into
dec
xchg
cmps
ret
aam
loope
jp
in
jmp
scas
inc
pop
imul
repnz
test
add
jg
pop
and
aad
pop
pop
mov
or
pop
mov
fldcw
in
imul
fs
pop
(bad)
stc
and
cmp
cmc
test
imul
nop
xor
cmp
fidivr
retf
in
scas
mov
xchg
or
int3
mov
push
(bad)
fdivr
dec
jg
sti
mov
adc
loopne
adc
push
fs
or
mov
out
cmp
sub
into
adc
add
scas
dec
adc
xor
sub
jle
push
xlat
sti
add
scas
les
push
cdq
push
stos
jmp
push
xchg
push
sbb
test
das
test
jmp
mov
in
or
js
and
fwait
xlat
call
int3
pop
fnstenv
adc
js
or
jmp
and
dec
and
xor
ds
mov
aad
stc
cli
mov
mov
xchg
out
stc
ret
fs
xor
pop
mov
aas
jmp
outs
rcl
test
add
fcmovnbe
scas
pop
jbe
in
daa
or
or
cmp
jno
mov
mov
clc
cmp
lods
mov
xor
add
pop
mov
movs
pusha
sub
(bad)
xchg
aas
sub
test
lods
or
mov
inc
jns
and
pop
repnz
fsubr
add
dec
push
jp
inc
sar
push
xchg
sub
out
adc
pop
push
xor
fcomi
jg
test
push
loope
cwde
and
popf
xor
mov
out
fdivr
pop
jns
cmp
aas
dec
inc
inc
ror
pop
lods
mov
mov
(bad)
add
xor
(bad)
adc
scas
test
hlt
retf
pop
push
ror
out
dec
mov
mov
sbb
sub
mov
addr16
xlat
jns
mov
fs
push
cld
and
adc
mov
pop
repnz
mov
test
gs
adc
out
jmp
mov
mov
loopne
push
and
cli
test
xor
dec
ds
or
loope
icebp
call
or
xchg
jae
mov
mov
neg
push
jmp
movs
cmps
repnz
jnp
mov
jmp
sub
add
adc
cli
gs
dec
enter
shl
bound
inc
push
inc
sub
jb
mov
(bad)
pop
icebp
fisubr
push
mov
retf
jmp
cwde
mov
stos
(bad)
jmp
cmp
pop
cli
dec
jp
sub
push
or
push
stos
out
mov
jle
test
cmp
ins
push
jae
pop
dec
out
popf
out
outs
pop
fbstp
ret
pop
mov
push
adc
das
movs
ret
push
cs
sbb
iret
push
aad
sar
sbb
xchg
fdivr
cmp
jne
aam
inc
sub
and
lahf
sti
ret
das
jge
sbb
sub
mov
mov
lahf
clc
(bad)
mov
outs
cdq
add
neg
(bad)
dec
pop
repnz
xchg
sahf
push
add
lock
mov
addr16
int
pop
pop
jbe
mov
in
sub
ins
and
fld1
out
iret
test
dec
ja
rol
pop
out
leave
mov
mov
inc
sbb
mov
leave
rol
inc
mov
inc
mov
or
aam
retf
sahf
imul
inc
sar
rol
daa
bound
xor
or
mov
dec
xor
call
fwait
pmaxsw
in
pop
es
dec
inc
jle
inc
mov
movs
and
push
jnp
out
push
jae
(bad)
hlt
clc
addr16
or
jbe
int
out
cld
fsubr
out
into
(bad)
fimul
jnp
adc
ror
imul
loopne
dec
sti
pop
cdq
fild
xchg
cmp
std
loopne
test
mov
push
in
lea
out
out
movs
adc
out
cmp
mov
ficom
dec
push
hlt
fucomi
sbb
adc
enter
mov
out
std
fcom
push
idiv
movs
add
rcl
lds
xor
mov
mov
xchg
stos
jle
call
imul
hlt
leave
enter
in
cdq
dec
and
aam
mov
pop
mov
xor
or
jb
aas
cmp
xchg
push
inc
xchg
hlt
xchg
xchg
push
test
aas
cwde
jbe
jp
xor
dec
or
stc
sbb
fwait
clc
nop
and
mov
sub
adc
jbe
jp
int
aas
jge
jae
cld
test
sti
and
dec
rcl
dec
add
mov
mov
jns
lds
mov
cmc
jo
and
lock
out
fmul
sti
pop
jp
mov
dec
pop
fnstenv
push
test
fadd
out
xor
inc
lds
xor
sub
arpl
xor
pop
pop
ds
mov
scas
sar
and
jle
rcr
hlt
pop
cld
jno
aaa
rol
pop
dec
stc
sbb
xor
cmp
sbb
add
into
fwait
(bad)
out
adc
cmp
push
jns
leave
push
and
inc
imul
in
dec
or
mov
jae
cli
mov
gs
xchg
icebp
sbb
add
fwait
xor
sbb
outs
pop
ficomp
ror
loopne
jge
inc
jno
sahf
stc
inc
push
jmp
fistp
stc
(bad)
out
mov
movs
mov
iret
push
dec
mov
inc
fmul
push
add
and
repnz
pop
(bad)
dec
cs
adc
test
arpl
stos
sub
ds
add
jle
dec
dec
dec
aad
clc
pop
cwde
jne
fmul
stc
cmp
ror
clc
popf
stos
es
xor
ds
popf
mov
gs
repnz
and
sbb
scas
(bad)
ss
stos
sti
jecxz
bound
sbb
popf
pop
stc
mov
js
fsub
std
mov
aaa
repz
pop
in
mov
test
or
rcr
hlt
ficomp
hlt
cld
xchg
mov
add
jno
and
dec
add
adc
mov
cmp
outs
mov
xchg
inc
sub
pushf
out
mov
movs
dec
jecxz
jbe
scas
enter
mov
sahf
mov
or
leave
sti
jo
xchg
shl
mov
and
out
jg
test
es
mov
mov
xlat
or
ror
jae
lods
xor
es
fnsave
jle
rol
hlt
aaa
jmp
idiv
out
cwde
ins
out
(bad)
lock
pop
repnz
loopne
ret
add
cmp
pop
mov
cmps
mov
(bad)
xchg
and
enter
and
mov
cmp
adc
cmps
test
inc
lods
push
test
scas
adc
cmp
lahf
test
and
es
push
sti
xchg
sbb
mov
ret
xlat
jmp
mov
pop
ror
pop
dec
stc
cmp
jmp
rol
cld
mov
call
and
pop
xor
or
stc
fdivr
popf
fdivr
rcr
mov
push
dec
loope
mov
das
or
fldenv
and
and
push
sbb
dec
ds
mov
test
cli
int
xor
mov
sub
lods
cmc
enter
ds
out
pop
repz
mov
in
(bad)
mov
hlt
aas
outs
loopne
sub
jmp
dec
aaa
add
test
lods
data16
lods
ficom
je
repz
add
pop
mov
lea
data16
cmc
cmp
imul
push
scas
sar
xor
and
retf
out
test
add
mov
adc
fwait
aaa
in
inc
cdq
imul
aaa
pop
lods
call
push
mov
ret
mov
push
push
mov
pand
or
das
sub
mov
sub
push
lods
push
jo
movs
jmp
cmc
inc
pop
(bad)
stos
sub
cmp
enter
mov
xchg
cmps
inc
jp
or
and
in
adc
mov
xchg
dec
mov
xchg
repz
in
mov
cmp
les
lds
push
jae
out
push
add
imul
xor
dec
ja
iret
mov
push
retf
fwait
mov
push
push
xor
sub
daa
lahf
stc
in
sti
gs
or
jmp
mov
addr16
lea
mov
(bad)
fsubrp
call
jmp
mov
scas
(bad)
push
xchg
pop
movzx
aad
outs
(bad)
out
jg
mov
xor
mov
and
call
pop
add
inc
pusha
adc
xor
or
(bad)
shr
mov
push
mov
xchg
scas
jnp
lods
push
sar
out
enter
dec
jle
and
mov
cmp
xor
mov
push
(bad)
outs
iret
test
mov
cmc
xor
repnz
mov
rcr
mov
xchg
call
stc
loope
jno
mov
xchg
jl
ret
call
pop
ins
inc
pop
jl
scas
fcmovu
push
add
xchg
data16
ficomp
imul
sub
shl
push
mov
mov
sbb
mov
pop
mov
mov
xor
in
pop
das
and
retf
mov
jo
add
test
sbb
sbb
mov
imul
lods
iret
lahf
ins
cld
fsubp
aas
mov
call
aas
adc
jg
xor
lock
adc
es
jbe
jmp
jl
inc
pop
sub
mov
stc
sqrtps
and
pop
adc
in
(bad)
push
(bad)
movs
dec
cmc
mov
add
mov
dec
mov
cmp
add
sete
mov
sbb
jmp
xlat
imul
loopne
ja
fistp
outs
retf
xchg
cdq
shl
mov
jp
out
mov
lds
pop
bound
idiv
cdq
fucomi
push
out
push
fistp
loope
dec
fiadd
test
or
rol
call
neg
mov
pushf
retf
das
cmps
sub
add
sbb
or
sbb
push
jno
dec
mov
stos
push
pusha
movs
fnstsw
nop
inc
push
imul
push
add
adc
retf
mov
stos
repz
sbb
ds
xchg
and
xor
lds
sub
dec
push
ret
xchg
daa
adc
ins
sub
or
pop
sbb
push
push
into
aam
outs
das
jg
sti
fisub
out
cmp
xor
test
dec
cwde
pop
daa
xchg
imul
mov
stos
out
repnz
dec
stc
push
mov
add
and
dec
dec
cmp
fisttp
into
mov
mov
mov
lds
mov
pushf
dec
ja
stos
inc
test
daa
les
push
and
into
call
test
retf
jle
add
leave
in
xor
sbb
shl
xor
jmp
(bad)
fidiv
int3
pop
jae
movs
xor
jle
pop
jecxz
inc
sub
xor
inc
dec
or
(bad)
ja
jg
xchg
mov
jmp
xchg
sahf
dec
add
aaa
add
(bad)
dec
and
(bad)
fwait
jle
call
lea
pop
add
adc
jno
jb
add
mov
test
jae
jge
call
rol
(bad)
jle
enter
sahf
add
or
retf
outs
into
clc
xlat
and
mov
cmps
fcomp
mov
add
pop
stos
xor
and
ja
mov
pop
cli
sbb
mov
mov
test
push
daa
fcomip
sti
mov
push
frstor
cwde
(bad)
xchg
dec
mov
lahf
adc
cdq
and
add
cmp
mov
fs
scas
cmp
inc
sub
pop
add
pop
cmp
iret
mov
mov
daa
push
cmp
sub
mov
out
imul
movs
jg
jecxz
ds
in
movs
push
mov
xchg
mov
sbb
or
int3
pop
mov
pop
mov
int3
mov
add
and
push
imul
mov
push
stos
out
std
fldcw
cmp
or
retf
test
dec
fcomi
dec
adc
inc
dec
aam
enter
rcr
push
jbe
jnp
lods
push
arpl
in
cwde
ror
add
pop
call
pushf
or
js
inc
shr
xor
ret
add
or
retf
jge
jmp
cmp
ret
and
push
aaa
leave
leave
stc
sub
sub
mov
adc
fiadd
(bad)
imul
push
sub
fldcw
push
outs
cdq
pop
jp
sbb
push
scas
pop
xchg
adc
mov
je
push
mov
xchg
ds
repz
jl
int
aas
cli
jmp
imul
jae
pop
cld
sahf
mov
(bad)
xor
stc
addr16
imul
out
pop
cmp
dec
into
mov
inc
jbe
inc
xor
std
nop
and
mov
dec
in
popf
in
outs
fistp
adc
push
into
leave
mov
shl
mov
xchg
stc
or
adc
jge
push
xor
mov
cwde
lahf
add
cld
cli
std
out
idiv
pusha
pushf
dec
cdq
nop
add
xchg
and
jmp
sbb
pop
push
pop
loop
xchg
(bad)
push
sbb
shr
test
shr
aad
outs
stc
icebp
push
scas
out
fwait
shr
cli
sti
xchg
arpl
add
in
adc
(bad)
mov
jbe
jo
jne
daa
sahf
jge
ins
ins
leave
mov
mov
icebp
imul
(bad)
shl
jmp
cmp
scas
mov
call
push
cmp
add
inc
stc
stos
mov
mov
test
iret
aam
cmp
pop
push
push
in
in
nop
and
call
pop
es
mov
xchg
jmp
cmp
lock
mov
dec
imul
xchg
stos
ds
fdivp
dec
lods
mov
push
pop
out
mov
sahf
addr16
add
ins
add
in
adc
data16
scas
stos
sub
pushf
je
cwde
test
inc
mov
push
pop
jge
or
in
or
mov
dec
inc
inc
push
jecxz
cld
ror
rol
adc
xor
icebp
dec
fidivr
pop
shl
aam
mov
add
or
push
sub
in
add
and
mov
push
push
mov
outs
push
mov
fwait
sub
adc
ins
jno
icebp
scas
mov
iret
std
out
mov
cld
jge
repnz
pop
jp
pop
icebp
add
mov
xchg
or
dec
repz
push
mov
adc
icebp
xchg
addr16
repnz
jecxz
repz
pop
mov
mov
push
pop
and
fucomp
fld
ret
cmp
mov
and
shr
sbb
or
call
lds
mov
lahf
jns
lea
mov
jbe
in
push
stos
push
xor
stc
or
fcomip
xchg
mov
icebp
outs
jle
jecxz
outs
sti
loope
pushf
es
cld
sahf
push
mov
mov
inc
adc
push
and
inc
push
fsubr
in
sbb
clc
mov
cmp
adc
push
aaa
jnp
inc
int
outs
dec
cmp
jp
pop
mov
call
dec
fsubr
or
or
test
repz
mov
gs
vmwrite
pop
or
mov
cwde
xor
mov
or
mov
leave
gs
lock
(bad)
mov
fdivp
fdivr
daa
ss
jo
je
sbb
icebp
stc
xchg
retf
lock
and
sub
xchg
stos
inc
sub
cs
lds
repnz
out
push
(bad)
out
addr16
cmp
ja
mov
popf
jbe
jmp
push
shl
inc
or
psrld
push
push
sbb
pop
jle
or
jl
daa
outs
scas
mov
out
or
icebp
or
jns
aad
cmc
int3
jp
shl
aas
add
call
(bad)
mov
(bad)
pushf
push
ins
cwde
cmp
sysexit
hlt
mov
push
add
or
adc
sbb
push
sbb
js
mov
cwde
mov
and
cld
fwait
aaa
(bad)
int3
movs
adc
call
jmp
and
fidivr
inc
jae
add
push
rcr
movs
mov
dec
ds
repz
ret
or
outs
cld
mov
pop
cmp
rol
hlt
aas
mov
fwait
(bad)
jle
scas
aas
sar
ret
sahf
pop
jmp
pusha
lahf
cld
xor
push
mov
sbb
sub
lods
cmp
mov
pushf
retf
iret
ds
xor
je
mov
pop
jl
test
adc
movs
rcl
ficom
in
call
cld
inc
mov
jmp
jnp
retf
jmp
icebp
(bad)
and
daa
cmp
cmp
cmp
aam
mov
add
imul
xor
dec
fiadd
ret
movs
inc
xor
mov
ret
jg
not
dec
fdiv
mov
out
and
xor
dec
mov
fbld
push
mov
loop
cmp
push
aas
loop
mov
loope
or
push
test
enter
push
mov
ss
sbb
cmps
add
inc
pushf
dec
in
imul
fnsave
(bad)
jmp
mov
sub
push
movs
jns
cld
add
add
(bad)
push
dec
les
inc
mov
push
sahf
jae
xor
movs
mov
icebp
xchg
cmps
mov
add
push
call
mov
scas
(bad)
out
out
push
push
mov
in
sbb
(bad)
call
stc
and
add
or
xchg
aas
popa
lds
jle
cmp
dec
cmp
xor
loop
add
daa
retf
dec
aad
inc
pop
out
mov
pusha
dec
pop
sbb
ins
dec
fbstp
iret
lods
mov
jne
and
or
repnz
dec
scas
mov
cmp
sbb
jmp
ja
fmul
jns
or
inc
sub
es
dec
pop
jmp
aam
pop
jg
(bad)
cmp
clc
iret
shr
push
fadd
cmp
pusha
mov
jge
hlt
mov
leave
out
cmps
dec
add
or
mov
mov
movs
jmp
jmp
(bad)
pop
jle
cdq
cmps
sahf
inc
adc
dec
loope
xor
mov
xor
(bad)
lods
xor
stos
cmp
fwait
stos
xchg
push
sub
cli
inc
ss
retf
pop
or
push
imul
sbb
imul
js
xor
in
repz
adc
sub
mov
pop
mov
sbb
(bad)
and
mov
mov
ret
jg
pop
xor
je
sbb
arpl
sti
jmp
pop
and
retf
sbb
inc
sub
mov
icebp
into
ja
xchg
sbb
adc
stc
into
nop
mov
fnstenv
lods
cmp
sub
into
xchg
or
(bad)
mov
adc
ror
push
and
loopne
and
outs
nop
fnstcw
pop
in
mov
dec
dec
adc
movs
icebp
inc
xchg
sbb
aas
cld
test
test
dec
sbb
sub
sbb
sub
jb
cli
dec
aas
cld
loop
lahf
mov
imul
ds
out
mov
repz
mov
or
cwde
ret
aas
bound
push
inc
pop
sbb
add
sub
stc
stc
das
mov
repnz
cmc
(bad)
mov
fstp
jnp
jmp
fcom
cmp
ror
adc
sub
add
ins
mov
sbb
pop
mov
imul
retf
aaa
push
xchg
sub
inc
jb
hlt
sbb
pop
rcr
mov
aaa
fistp
cmp
sbb
(bad)
sub
dec
mov
xor
mov
xor
(bad)
movs
test
xor
cmp
stos
fwait
rcr
inc
and
inc
sahf
sub
and
das
ins
mov
mul
sbb
inc
adc
lock
test
and
push
cmp
in
aad
add
dec
retf
add
adc
dec
and
sbb
repz
ret
shr
(bad)
jno
jecxz
pop
retf
xchg
in
mov
pop
gs
aad
lock
in
inc
add
mov
add
dec
push
xor
das
(bad)
in
cmp
cld
test
dec
cli
jle
or
nop
aad
and
daa
add
(bad)
mov
pxor
pusha
(bad)
xor
ins
add
loop
pop
sbb
sbb
xchg
lds
fimul
retf
xor
cmc
dec
or
dec
leave
or
aad
push
popa
cld
mov
movs
ret
push
call
pop
icebp
or
in
ins
jbe
(bad)
movs
je
inc
mov
ror
push
mov
push
faddp
aad
pop
xchg
popa
adc
repnz
push
out
fwait
jno
mov
cli
cmp
add
fs
xchg
sbb
jae
dec
or
xlat
sbb
adc
inc
into
cld
cld
aam
or
icebp
xlat
adc
mov
call
or
mov
mov
adc
or
sub
fldenv
pop
pop
sub
ins
test
fstp
adc
adc
and
repz
js
and
add
adc
in
lea
ja
loop
(bad)
mov
jecxz
or
jecxz
add
inc
dec
and
xchg
and
and
jns
jmp
out
sti
or
mov
fistp
fild
sub
cmc
cli
cmp
inc
arpl
mov
in
jbe
add
jne
sub
dec
inc
fst
call
(bad)
cmp
cmps
es
iret
mov
out
sar
sahf
add
mov
add
aas
inc
outs
add
movs
repnz
push
and
dec
sbb
ret
mov
aam
bound
adc
push
dec
jmp
cmp
dec
and
adc
(bad)
enter
movs
or
stos
inc
hlt
mov
pop
sub
jnp
adc
mov
sub
jns
jne
sbb
push
xchg
or
stc
and
inc
sbb
repz
repz
cs
stos
dec
pop
mov
clc
cmp
(bad)
stc
mov
add
or
or
xor
add
(bad)
mov
cmp
jns
in
(bad)
out
mov
adc
pop
cmp
or
pop
jg
push
cmp
pop
aaa
pop
daa
push
bt
mov
xchg
ins
mov
scas
xlat
mov
or
std
sar
or
(bad)
repnz
mov
xor
inc
mov
push
pushf
add
ret
test
out
out
inc
out
and
sbb
jbe
jb
mov
out
mov
popf
mov
xchg
in
hlt
adc
push
mov
dec
pop
cmp
aas
fild
imul
xchg
je
scas
adc
mov
dec
xchg
mov
jg
cmc
std
fisubr
add
into
data16
cmc
xlat
cmc
push
(bad)
std
or
add
or
mov
add
enter
sbb
push
jmp
push
aaa
pop
test
cmps
(bad)
sbb
add
ds
xchg
ins
inc
add
out
leave
daa
test
pop
pop
mov
iret
ds
fcmovnbe
out
outs
leave
mov
mov
cmp
pop
jge
dec
add
xchg
pop
scas
shl
mov
repz
outs
mov
fistp
jge
lods
xlat
aaa
js
nop
mov
cmp
mov
aas
(bad)
std
jmp
mov
popa
mov
xchg
test
cmp
dec
push
mov
jg
pop
scas
(bad)
xlat
inc
iret
mov
lods
xor
(bad)
clc
es
leave
cmp
jle
pushf
add
inc
mov
xor
sbb
dec
dec
mov
cmc
pop
jns
hlt
sahf
xor
mov
(bad)
call
add
(bad)
ja
and
hlt
fadd
int
dec
sub
and
retf
push
dec
cli
pop
dec
pop
imul
ds
or
adc
xchg
sbb
aaa
pop
aas
sti
loopne
jge
out
xchg
mov
test
cs
xchg
xchg
lock
inc
ins
ins
adc
add
or
es
push
mov
sti
aam
sub
push
adc
xor
inc
aam
sub
inc
pop
sbb
push
idiv
pop
xchg
jno
push
xchg
fmul
fwait
and
xor
and
outs
push
push
jge
int
nop
jbe
fidiv
ror
jg
inc
inc
push
dec
rcr
pushf
fwait
mov
aaa
call
xor
or
inc
(bad)
mov
cmp
fisub
fldenv
call
cli
fild
xchg
and
ret
add
sbb
(bad)
and
jns
adc
lods
mov
lock
loop
mov
pop
push
lahf
pushf
in
(bad)
std
int3
repz
cmp
cmp
jge
xchg
inc
je
sbb
pusha
call
out
cld
pop
nop
in
xchg
stos
add
iret
pop
and
inc
adc
pop
aam
popf
ins
cs
mov
out
cmp
push
fdivr
inc
fs
movs
fs
test
dec
rcr
or
repz
and
cmps
loope
pusha
jnp
jmp
or
xchg
das
pop
scas
lods
mov
push
sbb
inc
into
sbb
lahf
bound
bsr
fdiv
xor
cmc
or
jb
mov
jnp
(bad)
loopne
adc
mov
or
jno
rcl
in
popf
pop
cwde
adc
fcmovb
aaa
fstp
sub
ins
retf
(bad)
hlt
ins
retf
fwait
ins
add
rol
add
movs
pop
adc
add
or
inc
add
or
mov
pop
jp
or
jmp
in
mov
jnp
xchg
data16
bound
cdq
and
xor
out
jg
repz
xchg
add
std
retf
inc
movs
xchg
jle
ds
mov
in
je
lds
mov
xchg
cmp
retf
xchg
pop
push
pop
movs
test
xchg
in
and
shr
mov
clc
mov
sub
retf
xchg
cmc
cmp
mov
clc
pop
pop
(bad)
xchg
xchg
ins
repz
jmp
daa
xchg
mov
jns
push
imul
mov
imul
inc
xor
das
cmc
mov
mov
ficomp
cdq
jmp
jbe
(bad)
sub
mov
push
(bad)
mov
xchg
xlat
rol
xchg
add
movs
int3
sbb
sub
push
fwait
mov
mov
leave
and
jmp
imul
cs
das
iret
leave
ret
push
pop
or
aaa
stos
mov
mov
push
mov
cmp
gs
mov
aad
pop
mov
fdiv
dec
int
sub
mov
ins
sbb
jno
leave
push
xchg
and
std
xchg
dec
std
jl
lock
rcr
mov
mov
pop
or
sbb
addr16
jecxz
sti
int
fistp
in
cli
push
inc
xchg
paddb
jl
in
cwde
call
stc
call
or
frstor
and
icebp
jge
ins
(bad)
jg
inc
loop
inc
ja
dec
imul
sub
add
mov
loopne
mov
mov
add
in
stc
sar
jecxz
sub
ins
inc
pop
push
push
jl
clc
mov
stos
and
stos
and
ja
mov
pusha
push
leave
das
add
mov
ins
push
fisub
outs
fsub
sbb
push
int3
or
loopne
out
ss
mov
lods
cmp
dec
push
fidiv
xor
loopne
xor
and
mov
test
ret
imul
jecxz
fistp
xchg
pop
lea
adc
inc
and
fwait
mov
pop
xchg
je
mov
jns
sub
jle
test
movs
add
(bad)
xor
ret
mov
mov
rol
xchg
fadd
xlat
push
ds
cdq
pushf
xor
inc
pop
inc
mov
adc
inc
mov
adc
aad
clc
mov
sbb
cwde
pop
add
or
xor
and
shr
xor
aas
sbb
adc
inc
aas
cld
movs
int3
cdq
clc
data16
rcr
push
inc
lods
mov
dec
cmp
push
xor
cmp
loop
xchg
jle
inc
pop
stos
cmps
aas
fwait
dec
mov
fisttp
xor
clc
js
fadd
jmp
push
test
int
mov
movs
mov
lock
push
add
adc
xchg
daa
inc
not
movs
inc
or
or
out
ret
imul
vpsubb
sbb
mov
add
sub
push
jl
or
push
hlt
mov
mov
lock
mov
jmp
je
inc
sar
sbb
bound
push
and
lock
jno
xor
aam
mov
mov
jmp
stc
mov
inc
out
adc
out
jmp
fld
(bad)
scas
cdq
push
in
out
movs
lods
in
(bad)
xor
push
ins
pop
popf
adc
pop
jl
cli
fmul
cli
pop
loop
pop
or
lea
nop
push
xor
es
sar
lods
daa
jecxz
adc
pop
daa
cmp
inc
adc
out
cmc
pop
dec
(bad)
imul
(bad)
sbb
call
je
movs
arpl
mov
mov
(bad)
cld
pop
loop
cmp
jnp
pop
rcr
inc
xchg
mov
inc
and
rcl
xlat
xchg
dec
pop
lods
pushf
lock
(bad)
jae
mov
imul
xor
shr
adc
(bad)
loope
add
mov
sbb
jmp
or
push
xor
addr16
mov
test
dec
pop
jl
je
rcl
xlat
sbb
fild
inc
pop
js
mov
mov
jmp
adc
scas
mov
sub
test
mov
jns
cmp
push
jg
ror
or
mov
jp
rcl
lods
jbe
pop
in
jae
test
mov
mov
push
and
dec
(bad)
inc
pop
js
jmp
call
push
cmp
shl
in
and
cmc
or
jns
mov
cs
xor
fwait
nop
gs
aaa
dec
addr16
mov
cmps
xchg
sar
mov
lods
mov
sahf
jns
test
ror
push
xor
sub
lock
xor
loope
xchg
sub
fisub
cmp
adc
xor
lods
push
sar
inc
inc
dec
cmp
push
sub
shl
mov
dec
scas
pop
jmp
cmp
cmps
xor
pop
shl
gs
pop
cmp
ins
push
mov
xor
pop
lock
aad
icebp
pop
mov
mov
push
jnp
pop
xchg
sub
add
scas
mov
lds
out
push
sbb
pop
loope
jge
xor
aas
push
fstp
sbb
dec
push
movs
mov
mov
lds
pushf
scas
stos
ins
add
xor
loop
icebp
rcl
rcl
mov
sub
cmp
in
xor
mov
cli
cwde
leave
cmc
adc
xchg
pop
mov
pop
xchg
xchg
sbb
int3
(bad)
mov
adc
push
mov
mov
dec
lods
int3
and
daa
xchg
in
pushf
dec
adc
dec
in
jg
mov
sti
add
pushw
(bad)
fimul
into
xor
pushf
cmp
cmp
xor
jns
clc
ins
scas
stc
(bad)
(bad)
push
push
loopne
xchg
xchg
mov
or
add
cmp
inc
xlat
leave
cmp
sbb
pop
(bad)
mov
cmova
cdq
dec
out
ins
fimul
fdivr
dec
test
bound
nop
retf
cmp
arpl
lahf
ret
mov
out
pop
stos
ror
adc
or
aas
xor
cmps
mov
cli
mov
cmps
sti
and
(bad)
repz
pop
push
lock
mov
mov
sub
data16
int
test
fbstp
scas
sub
call
add
jge
adc
mov
fmul
xlat
cvtpi2ps
int3
and
mov
in
add
std
xchg
dec
pop
popf
and
xlat
push
jmp
jge
fistp
xor
ret
jmp
mov
push
out
xchg
mov
enter
mov
jno
arpl
push
pop
imul
mov
pop
dec
or
ins
loopne
sti
jmp
add
add
mov
push
jno
mov
es
mov
pop
inc
xlat
cmp
(bad)
pxor
cld
jl
out
fdiv
mov
popf
ret
stos
test
dec
and
inc
loopne
jg
mov
in
lock
or
xchg
dec
and
lahf
sbb
mov
lock
xor
mov
dec
adc
ffree
adc
outs
jmp
outs
fs
mov
das
xor
scas
sahf
fiadd
mov
dec
sub
retf
cmp
jnp
(bad)
dec
arpl
push
mov
add
dec
add
inc
scas
and
mov
add
aas
cwde
cmp
scas
sub
push
fs
cmp
cmc
xor
not
(bad)
jmp
mov
das
mov
jle
out
inc
sbb
loope
xchg
popf
lds
stos
mov
bound
jno
xchg
add
add
hlt
dec
pop
adc
and
movs
imul
hlt
add
mov
test
shl
mov
cmp
outs
push
add
andps
mov
xchg
sub
stos
add
(bad)
pop
icebp
ds
aas
xchg
sub
pop
stos
pop
jmp
pop
mov
sub
mov
lods
cmp
and
clc
pop
jp
sbb
cmp
mov
cmp
and
(bad)
out
(bad)
mov
(bad)
push
mov
lds
pop
ds
ja
clc
jmp
push
sti
sahf
aaa
dec
adc
jo
int3
pop
data16
int
mov
pop
std
add
into
push
(bad)
xor
mov
cmp
jle
push
in
sbb
out
xlat
xchg
(bad)
aad
or
xchg
shr
fnstcw
cli
(bad)
aaa
scas
fnstenv
iret
fnsave
sbb
(bad)
or
out
ss
lock
(bad)
xlat
or
and
ret
push
mov
adc
jae
dec
mov
xchg
sbb
fnsave
iret
leave
(bad)
mov
call
mov
fsub
mov
cwd
inc
mov
call
xchg
pop
lahf
js
test
sar
inc
int
mov
add
mov
in
add
or
(bad)
scas
sbb
call
or
sub
out
scas
lahf
mov
mov
jo
mov
mov
in
jl
arpl
(bad)
sbb
repz
into
cmovbe
mov
adc
out
loopne
or
jmp
std
sub
pop
ror
pop
ror
push
jmp
das
sbb
lds
lds
jb
cmc
loopne
cdq
aad
(bad)
jnp
ret
jge
shl
jns
lds
icebp
sbb
mov
xchg
push
cmp
repz
fimul
pop
inc
div
fild
cwde
test
dec
jo
enter
lds
cwde
mov
xchg
lds
push
jmp
fcmove
and
and
jno
dec
xchg
jg
add
fwait
inc
sub
addr16
std
dec
jne
xor
ins
mov
jg
sub
sbb
jnp
and
outs
push
(bad)
movs
test
push
fcom
mov
dec
lock
outs
xchg
dec
jns
add
icebp
inc
out
popa
pop
repz
or
mov
pop
add
pop
loop
ror
jmp
out
or
cld
or
push
loope
mov
ins
sub
inc
add
jmp
cmps
loopne
mov
(bad)
cdq
daa
mov
mov
dec
(bad)
(bad)
shl
xor
imul
js
pop
cmp
cmp
jecxz
cmc
mov
adc
cmp
jg
sub
ja
scas
icebp
pop
xchg
std
and
mov
pop
jl
mov
jmp
int3
fsub
or
arpl
add
test
sub
xor
and
rcr
adc
add
out
jecxz
and
unpckhps
call
and
das
into
push
scas
mov
jo
aad
adc
xor
mov
imul
cmp
xchg
pop
stos
aas
sbb
mov
pop
(bad)
out
popf
pop
xchg
lea
mov
inc
(bad)
add
sar
and
dec
stos
push
shl
int3
fsubp
pusha
mov
es
adc
mov
mov
dec
js
pop
scas
push
out
movs
jo
fwait
cmp
shl
clc
repz
aad
loopne
das
fadd
into
das
retf
inc
out
push
and
push
xor
mov
add
lahf
cmps
dec
(bad)
jl
les
mov
call
ret
mov
clc
xor
daa
jle
pop
push
pushf
in
cmp
in
mov
in
xchg
pop
mov
clc
shr
fnsave
ins
sar
addr16
scas
xor
jmp
ficomp
mov
adc
push
mov
fadd
(bad)
fild
ror
xchg
aam
cmp
es
mov
cmp
mov
idiv
lock
outs
lock
mov
mov
xchg
nop
(bad)
into
xor
push
and
shr
ret
adc
sub
fcom
loop
lds
loop
ret
jle
or
mov
push
xlat
cmp
sti
pop
and
out
fsub
jnp
shl
sub
ret
add
shl
rcr
xor
or
fbstp
cld
fild
xor
dec
call
aad
or
jbe
jno
dec
in
in
xchg
jae
mov
mov
cmp
ret
dec
in
and
fild
sbb
mov
or
jo
std
cmp
add
(bad)
jmp
and
cwde
ds
lds
mov
jle
dec
bound
aas
addr16
jle
inc
fisttp
cmp
clc
pop
xor
cmp
ss
jns
add
xor
jecxz
and
push
es
pushf
add
std
loopne
jecxz
gs
(bad)
mov
mov
test
int
stos
enter
hlt
sbb
mov
stc
rcr
loope
mov
inc
loop
cmp
div
shl
adc
loopne
adc
movs
push
push
cmp
mov
pop
jae
hlt
jno
and
jbe
adc
xchg
and
xchg
pop
mov
fdivr
jae
ins
sti
les
stc
iret
cmc
inc
cs
dec
js
pop
pop
cmp
mov
ret
movs
mov
or
pusha
and
cwde
mov
rcr
out
aaa
mov
popa
out
addr16
cmp
mov
cmp
mov
cld
int
in
sti
out
mov
bound
data16
pusha
xchg
fcomp
(bad)
fs
daa
and
add
mov
mov
xchg
lock
xlat
cmp
out
loope
(bad)
cmp
rcl
add
add
xlat
pop
fmulp
mov
pop
adc
adc
scas
pop
pushf
dec
scas
or
xor
retf
icebp
scas
add
fdiv
push
cmp
inc
outs
repz
push
(bad)
mov
push
xor
mov
jne
sub
cmp
cmp
loop
sahf
(bad)
jns
(bad)
fsub
cwde
cmps
mov
dec
inc
dec
xchg
dec
shl
daa
mov
and
push
xor
pop
sbb
or
dec
push
call
inc
fldcw
fcom
or
mov
in
out
add
sbb
call
xchg
sbb
js
dec
pusha
test
mov
outs
sbb
sub
out
cdq
movs
mov
push
into
leave
mov
xchg
xchg
stos
fmul
push
push
or
in
test
mov
mov
sub
fistp
rcr
mov
cmp
outs
mov
loopne
les
push
mov
pop
idiv
jb
inc
lock
or
ret
cmp
out
data16
add
xor
ror
xor
dec
test
scas
or
mov
push
je
jge
int3
cmc
lahf
add
add
push
imul
adc
mul
repz
sub
jecxz
sar
mov
scas
ja
outs
push
nop
push
stos
out
xchg
sub
jno
ds
jmp
push
adc
mov
mov
retf
rol
add
adc
inc
ins
aad
cmp
cdq
cmp
std
jecxz
retf
xor
xchg
std
pop
pop
call
repnz
or
scas
sub
pop
inc
cld
add
std
sub
div
(bad)
or
shr
mov
enter
mov
movs
int3
daa
pmulhuw
sbb
pop
out
push
push
sbb
shl
js
push
mov
pop
adc
push
out
jg
pop
mov
hlt
adc
cmp
push
mov
outs
in
sub
ins
(bad)
pop
push
cld
jge
lahf
iret
push
dec
mov
adc
and
jne
sbb
push
sbb
or
mov
sub
call
mov
rsqrtps
stc
sbb
ret
xchg
xor
add
mov
cwde
adc
test
fild
xor
sar
adc
adc
fwait
dec
ins
fdiv
pop
cwde
mov
rcr
das
push
adc
jnp
pop
loopne
pop
jmp
jmp
call
mul
xchg
adc
jmp
or
xor
jge
je
stos
ds
in
sbb
mov
xchg
xlat
jmp
jno
leave
bound
jno
jne
js
or
sub
loopne
sbb
fucomip
test
pop
jmp
or
inc
retf
jl
mov
iret
pop
scas
div
inc
xlat
loop
or
dec
pop
or
outs
add
imul
dec
rcl
(bad)
adc
(bad)
mov
dec
dec
inc
add
sbb
inc
jnp
std
loope
nop
adc
mov
mov
(bad)
xchg
test
adc
or
cmp
jle
lds
pop
je
cmp
jl
jl
mov
js
jbe
repz
cmps
dec
inc
mov
xlat
repz
neg
fneni(8087
cld
test
pop
lahf
in
cmp
jnp
sub
pop
mov
repnz
shr
jns
test
dec
mov
lods
lods
imul
adc
jnp
iret
cmp
or
out
cmp
xchg
test
icebp
imul
cmp
test
scas
jns
ror
push
in
or
fs
ret
dec
bound
test
aaa
dec
retf
jae
mov
int3
mov
pop
(bad)
outs
sub
pushf
fisub
js
retf
jg
xlat
adc
lods
xchg
scas
mov
xchg
and
int3
(bad)
cld
mov
or
add
pop
cmp
mov
lods
fisttp
mov
cmp
rcr
add
or
inc
(bad)
pop
icebp
mov
dec
push
in
scas
stos
ret
dec
mov
repz
jns
pop
(bad)
jb
pushf
call
stos
rsqrtps
mov
int
repz
xchg
shr
push
test
mov
in
adc
aas
jmp
ds
pop
lock
popa
ja
(bad)
xor
mov
call
fistp
out
dec
add
xor
data16
xchg
cld
daa
push
xchg
int3
xchg
push
clc
xchg
nop
aas
movs
mov
jp
cld
or
sti
sar
sub
fidivr
sub
mov
(bad)
xchg
push
cmp
mov
repnz
pop
push
jns
cli
repnz
xor
ins
mov
ds
inc
icebp
addr16
das
(bad)
jae
lahf
and
mov
(bad)
call
out
push
(bad)
push
xor
mov
cmp
pusha
push
cmp
ins
aaa
(bad)
gs
sub
add
and
xchg
xor
mov
dec
das
xlat
std
jb
inc
cmp
cs
adc
push
sub
fdiv
cmp
or
mov
mov
jno
icebp
imul
dec
js
jl
mov
mov
pop
push
push
in
xlat
imul
rcr
leave
sbb
pop
js
add
pop
adc
lods
mov
pop
lahf
dec
pop
pop
subps
cmovo
mov
call
imul
sub
sbb
stos
sub
inc
dec
gs
stc
sahf
ret
pop
sub
fst
out
and
or
push
mov
cmp
sub
xor
pushf
idiv
push
sub
es
push
adc
xor
xchg
data16
adc
aad
je
jns
jnp
mov
int3
jle
clc
add
cmc
jne
je
lods
or
sbb
clc
sti
pop
add
rcr
ss
fldcw
data16
dec
(bad)
(bad)
sbb
call
repz
pop
fcom
xor
loop
jle
or
mov
xchg
sub
jne
jne
xchg
and
sub
in
mov
or
jge
and
cmp
mov
jnp
int
mov
sbb
(bad)
xchg
out
ret
shl
mov
jg
call
pop
pop
movs
and
pop
add
addr16
jmp
loope
aad
in
mov
cli
pusha
inc
test
mov
mov
dec
scas
adc
and
mov
lahf
daa
pop
(bad)
out
int3
add
std
adc
ficom
clc
jp
movhps
jmp
mov
lock
aam
mov
cmc
xchg
aaa
aaa
sbb
or
js
leave
inc
pop
add
or
adc
mov
in
mov
lods
(bad)
xchg
mov
stc
out
jl
ret
push
out
cmp
dec
jne
cmc
mov
int3
mov
pop
push
test
cmp
int3
xchg
stc
inc
mov
cmp
call
sub
cmc
icebp
cmc
repz
into
stos
pop
sar
inc
aad
cld
cmp
cdq
in
cdq
cdq
popa
mov
sub
cmps
jge
sbb
adc
push
and
repz
aas
aam
popa
loopne
fmul
xor
daa
das
add
sub
nop
sti
jne
(bad)
push
scas
jno
xor
jno
push
pop
or
jge
xchg
std
pusha
push
rol
daa
and
and
lds
sar
mov
ds
sub
mov
mov
or
jnp
mov
sub
fwait
pop
shl
pop
xchg
cmp
cmc
inc
mov
loope
sahf
hlt
leave
pop
xor
inc
mov
out
cmp
sahf
jmp
xchg
and
xchg
mov
mov
pusha
jg
fcomp
cmps
inc
outs
sqrtps
loopne
test
retf
div
dec
jmp
or
jge
fisttp
aas
lahf
pop
shr
(bad)
fld1
fdivr
push
xor
mov
inc
or
rcr
and
and
jl
(bad)
out
mov
add
or
push
sahf
inc
and
push
int
popa
push
xchg
loop
in
mov
ficom
mov
clc
lahf
call
sbb
add
pop
jae
push
inc
add
mov
or
data16
jbe
lea
pop
pop
inc
repnz
es
push
pop
mov
ja
sahf
mov
xchg
aas
mov
and
push
stc
pop
cs
div
sbb
ins
mov
lea
mov
adc
xchg
pushf
xlat
xor
cdq
mov
mov
div
sahf
ins
lea
cmp
shl
aam
fidivr
sbb
push
jge
or
sub
sbb
lahf
in
lea
daa
inc
dec
arpl
daa
xchg
and
(bad)
push
xchg
mov
ins
mov
pop
jmp
pop
dec
fcomp
loopne
les
int
loop
or
and
scas
fs
jbe
mov
mov
xchg
leave
pop
rol
pop
mov
or
shl
es
cmc
popf
sub
cmovne
or
push
xchg
lods
aam
(bad)
fadd
scas
daa
jge
xor
stos
mov
add
and
add
mov
repnz
push
ret
scas
int
scas
scas
add
jmp
call
mov
lahf
loop
pop
push
js
into
lods
fbstp
dec
out
scas
inc
mul
cmp
xlat
ins
cdq
jns
jge
iret
test
adc
in
scas
inc
scas
jb
into
add
lahf
push
mov
out
sbb
push
call
cmc
xor
ja
adc
test
ret
mov
mov
fistp
rol
xchg
test
mov
popa
push
sub
arpl
push
sbb
sub
int3
push
inc
fs
pop
pop
cld
imul
nop
fidivr
retf
xchg
jp
cs
lods
cmp
hlt
aad
(bad)
push
jmp
cmp
mov
dec
sub
out
in
push
retf
rcr
xchg
and
xchg
jb
inc
lds
cli
(bad)
adc
(bad)
test
sbb
scas
loopne
rcr
cmp
rcr
pop
push
repnz
or
add
sti
out
je
jae
jg
hlt
adc
mov
inc
ret
pop
jg
dec
movs
dec
adc
push
jno
jge
lock
inc
aaa
data16
iret
jae
pop
jb
push
fidivr
cmp
je
xlat
xor
shl
push
jbe
sbb
cs
sbb
push
pop
jp
(bad)
shr
pop
lea
mov
sbb
cmps
lea
loop
clc
xor
call
lock
test
sub
in
ja
ds
adc
mov
push
jg
push
mov
fbld
ss
adc
cld
and
lods
imul
aas
int
cld
(bad)
mov
fcomp
sar
(bad)
lods
lahf
gs
mov
leave
dec
mov
add
sbb
mov
pop
cmp
mov
in
rol
mov
pop
and
xchg
sbb
cmp
mov
div
adc
sbb
aaa
daa
mov
dec
ja
aas
pusha
jnp
loop
rcr
push
add
jo
xor
ins
add
clc
sub
repnz
pop
mov
ja
pop
pop
add
mov
pop
shl
xchg
sub
sub
shr
aad
jge
bswap
rol
test
clc
jp
test
mov
mov
and
cmps
pop
add
rcr
mov
mov
loopne
in
mov
(bad)
ins
shl
in
sbb
sbb
adc
jmp
pop
imul
mov
sahf
fwait
jl
and
fnstenv
fcom
or
inc
xor
jle
sar
(bad)
mov
mov
sbb
rol
inc
mov
sub
imul
push
test
mov
data16
mov
pop
(bad)
cmps
out
dec
out
aaa
pop
pusha
mov
mov
(bad)
in
shl
ins
gs
jg
cmp
fsubr
pop
int
mov
or
mov
dec
mov
arpl
add
sbb
jl
jns
cmp
out
(bad)
jp
xor
jo
iret
lds
dec
and
mov
mov
rcr
sub
int3
pop
arpl
ss
jae
popa
outs
pop
out
lods
inc
ins
loopne
lods
pop
mov
movs
fbstp
sti
push
pushf
mov
cmps
mov
imul
out
mov
add
jle
pop
loopne
and
add
add
loope
add
push
fdivr
sub
cld
or
pop
cmp
jnp
xchg
test
and
add
lahf
sti
lds
jb
push
sub
aad
faddp
in
mov
enter
daa
mov
arpl
scas
icebp
pop
arpl
jns
mov
sbb
cmp
xchg
cmc
cwde
push
cli
pop
int
scas
je
outs
ret
push
pop
sub
push
mov
dec
and
push
mov
or
jne
shl
loope
cmp
push
push
or
push
sub
jmp
fisttp
out
aaa
inc
xchg
mov
xor
pushf
xor
mov
out
cmp
adc
loopne
pusha
punpcklbw
adc
ins
inc
mov
sti
mov
fld
mov
cmp
xor
push
fsub
pop
test
cmp
pop
fild
hlt
or
dec
inc
cld
pop
(bad)
mov
aad
arpl
stos
push
jae
fadd
xchg
dec
xchg
bound
por
push
in
and
mov
xor
mov
and
sbb
movs
inc
sbb
rcl
mov
dec
scas
adc
outs
xchg
xchg
popf
mov
(bad)
test
arpl
xchg
ds
add
push
sub
mov
int
aad
fs
std
test
mov
pop
imul
rcl
(bad)
jmp
and
or
sbb
shl
lahf
popf
jle
es
cmp
test
mov
jmp
jecxz
xlat
pop
(bad)
cdq
jp
aad
jno
push
cmp
(bad)
cmp
fmul
mov
dec
or
dec
jg
jne
adc
(bad)
ror
cs
mov
ret
jno
add
lds
nop
mov
repnz
std
cld
and
xor
cwde
daa
dec
test
mov
sub
aam
imul
popf
cld
loope
xchg
xchg
lahf
test
dec
xchg
sbb
in
out
out
aas
adc
add
mov
lds
fbld
ins
stc
fs
jae
outs
xlat
test
test
bound
pop
(bad)
mov
push
enter
std
enter
sbb
icebp
(bad)
cmp
pop
push
xchg
fidivr
and
movs
cmp
cmp
xor
mov
aas
ret
xor
daa
mov
cmp
test
test
cmp
je
sar
scas
push
(bad)
push
jl
repnz
mov
call
mov
sub
clc
inc
jecxz
mov
test
fcmovnb
(bad)
jae
adc
and
jnp
adc
or
jl
mov
xor
in
inc
gs
out
popf
push
xchg
cld
cmp
stc
lods
xor
and
xchg
aas
lods
inc
std
or
xor
imul
mov
mov
xor
aas
daa
lock
scas
sbb
xor
add
cld
inc
out
cs
add
stos
sub
outs
push
push
cld
aas
push
adc
xor
cli
int
jmp
sbb
mov
pop
adc
pop
jecxz
(bad)
jnp
sbb
sbb
jmp
push
sub
jmp
out
cs
pop
mov
imul
jp
fisub
adc
sbb
push
scas
jl
pop
aaa
out
hlt
shl
or
adc
pop
mov
lahf
(bad)
in
aaa
jnp
mov
or
mov
scas
test
lds
mov
aaa
repz
(bad)
push
int3
in
dec
aam
leave
jg
mov
aas
mov
int3
mov
xchg
bound
sahf
das
movs
les
xchg
and
aas
ret
jo
(bad)
enter
push
lods
out
out
popf
in
sbb
cmp
inc
repnz
std
in
xchg
adc
in
mov
int3
sbb
cmp
mov
addr16
fidiv
sar
or
outs
mov
(bad)
mov
or
(bad)
sar
mov
cmp
xchg
loop
sti
push
cmovae
push
out
mov
ss
imul
sub
stos
or
into
mov
jmp
out
leave
in
pop
out
push
adc
xchg
call
and
iret
movs
push
jne
add
cmp
pop
aas
cmps
fcom
fneni(8087
mov
lahf
jecxz
jae
aaa
out
mov
push
std
xor
adc
das
push
and
sub
sti
or
(bad)
jnp
daa
into
cmp
int3
sbb
mov
mov
add
imul
cdq
test
sbb
push
addr16
cmp
loopne
test
inc
dec
mov
adc
mov
push
cmps
pop
mov
pop
ror
ins
cs
adc
mov
sub
(bad)
cld
sub
mov
jg
out
xor
ins
inc
jo
or
pusha
push
mov
sub
mov
sub
pop
push
into
inc
(bad)
lahf
push
jmp
in
sbb
sbb
scas
inc
rol
lock
cld
movs
sbb
shr
pushf
mov
retf
ror
mov
loop
push
(bad)
ja
xchg
test
into
mov
xor
push
in
xchg
nop
mov
or
mov
add
icebp
sbb
jmp
clc
stos
adc
jg
cld
mov
xor
push
idiv
icebp
mov
je
test
out
shl
mov
inc
sub
mov
imul
jmp
jmp
sbb
dec
xchg
jmp
jbe
mov
cmc
push
cmp
loope
jnp
mov
jne
fwait
push
push
sub
mov
je
jl
cs
or
push
sub
mov
loopne
adc
push
adc
and
loope
(bad)
sti
fcomip
jmp
inc
push
inc
pop
dec
fbstp
dec
jo
ja
sub
adc
mov
fistp
mov
cmp
in
scas
shufps
rol
mov
xchg
xlat
test
ins
xor
(bad)
jbe
mov
popf
push
mov
fwait
and
mov
scas
daa
mov
lods
jp
mov
aam
push
sub
pop
or
popf
add
xchg
pop
mov
or
pop
mov
scas
popf
cmp
cmp
sub
or
push
(bad)
loopne
mov
sub
mov
jg
repnz
pop
dec
push
fsub
sbb
push
neg
mov
jno
cmp
jae
aas
push
cld
rol
mov
pop
jmp
aaa
cmp
popf
loope
xchg
lds
mov
stos
ror
cmp
call
sub
jno
add
mov
jb
pop
scas
jl
add
pusha
in
mov
jo
xchg
retf
sbb
inc
pop
in
mov
loop
or
push
std
(bad)
sti
das
add
cwde
cmp
sub
fisttp
out
out
push
add
jo
add
add
scas
repnz
jecxz
jge
push
jnp
pop
int
cmps
cmp
aad
cmps
rcr
sbb
aaa
xchg
jecxz
(bad)
cmp
xchg
out
push
mov
xor
and
outs
fs
sbb
(bad)
rcr
test
fadd
in
dec
ins
loopne
cmp
out
xchg
mov
cwde
mov
ins
push
push
push
cld
adc
mov
sbb
mov
into
jge
sti
dec
leave
jno
and
sbb
lods
inc
aas
push
push
cs
inc
repnz
or
and
mov
(bad)
test
aas
adc
inc
sbb
ins
mov
sub
and
jnp
mov
mov
mov
loope
inc
jmp
push
push
loopne
gs
retf
icebp
std
nop
leave
test
mov
jbe
cmp
out
inc
add
mov
arpl
lds
sahf
sbb
stos
xchg
jg
mov
push
popf
mov
cmp
in
push
cld
in
jmp
or
lahf
push
sti
mov
fnsave
xchg
outs
mov
jg
mov
xchg
mov
movs
je
outs
sub
add
dec
sub
cmp
mov
push
add
enter
ret
xor
mov
into
jns
xor
rcr
mov
inc
ins
js
add
adc
out
dec
stc
mov
mov
aam
mov
push
test
add
mov
push
aad
scas
test
(bad)
jl
jne
dec
fsub
jb
cmp
in
jno
xchg
cld
iret
movs
add
rcr
cmp
imul
(bad)
mov
ja
out
clc
sub
ds
mov
lods
or
jae
mov
cwde
out
or
mov
push
jg
out
in
stc
xchg
lods
mov
call
sbb
jmp
or
call
push
cmps
mov
fcom
inc
imul
cmp
jge
ss
pushf
out
lea
stos
inc
popf
xchg
mov
xor
test
ss
mov
clc
xor
sub
fs
into
add
scas
or
push
jo
pop
mov
or
jmp
fdiv
and
hlt
std
mov
and
mul
jl
daa
stc
(bad)
jae
not
ror
mov
outs
rol
int3
aaa
test
pop
fwait
jbe
stos
fnsave
cmp
movs
or
mov
stc
push
push
push
mov
fisubr
xchg
outs
jbe
jnp
add
mov
das
retf
cmp
cmp
xor
cmp
xor
aaa
aam
lock
sbb
out
ss
out
xchg
cmp
pop
fcomp
push
cmc
ins
scas
push
mov
jg
adc
inc
mov
cmp
jbe
or
call
das
pushf
lahf
cwde
fcom
repz
out
or
out
xor
and
in
push
enter
fnstsw
mov
lods
test
cmp
in
(bad)
mov
and
out
ror
pop
adc
(bad)
sub
cmc
jne
(bad)
xor
ret
xchg
sub
lock
mov
rcr
fidiv
cmp
pop
pop
cmps
hlt
push
fdivr
xchg
adc
cmp
add
aas
pusha
mov
jp
mov
jecxz
jnp
rcr
test
idiv
jno
into
dec
fdiv
imul
dec
cmp
imul
hlt
(bad)
cwde
add
aam
push
mov
jbe
mov
daa
push
in
pop
cmp
or
mov
push
shl
mov
inc
std
inc
js
xlat
dec
test
cmp
jecxz
pop
pushf
jno
xchg
or
push
loopne
test
loopne
jge
sar
out
in
cmps
sbb
xchg
mov
imul
xor
in
inc
test
fwait
mov
mov
shl
jmp
pop
jnp
imul
mov
ret
arpl
loop
push
jae
sbb
mov
(bad)
outs
into
mov
cmp
pop
jo
jno
not
repnz
or
jge
out
xor
(bad)
js
scas
push
pusha
iret
or
int
ficom
sub
mov
jg
(bad)
in
clc
sbb
cmp
(bad)
loopne
push
mov
ins
(bad)
test
rcr
pop
fucomip
xchg
mov
sbb
and
jp
pop
idiv
push
jnp
add
mov
cdq
or
in
add
cli
mov
repz
pop
jge
cmp
ror
js
jle
pusha
int
xor
push
loopne
adc
add
icebp
int
repnz
dec
idiv
out
jmp
push
adc
cmp
and
cld
inc
jle
(bad)
fnstcw
ss
movs
adc
push
sub
jmp
mov
or
ss
rcr
sbb
bound
or
inc
jp
mov
and
or
and
dec
scas
int
(bad)
into
out
in
out
in
and
mov
repz
cmp
repz
idiv
in
sbb
(bad)
inc
cmc
fs
imul
outs
loope
(bad)
cmp
(bad)
jb
jge
pop
into
out
mov
mov
mov
add
mov
push
mov
mov
inc
xchg
sbb
dec
inc
or
gs
imul
jl
pop
jle
fwait
or
int3
nop
mov
xchg
jg
jbe
adc
xchg
fld
dec
repz
(bad)
std
push
xor
xchg
out
(bad)
xchg
or
jmp
jle
and
std
out
out
add
jge
and
ficomp
out
sbb
jecxz
add
lahf
add
add
dec
xchg
out
stos
je
jo
mov
pop
cmp
outs
and
jl
jg
(bad)
in
ret
mov
in
adc
(bad)
mov
pop
jl
mov
push
ss
push
neg
sub
and
cdq
ins
scas
sbb
fldcw
out
aam
jp
(bad)
(bad)
push
xchg
and
xchg
lods
out
iret
out
loopne
push
loope
jb
adc
inc
adc
jne
rol
adc
add
and
cmp
xor
pop
icebp
ret
push
mov
jae
fiadd
sbb
jne
mov
ror
or
or
fsub
cmps
ficomp
mov
dec
jge
imul
repz
jno
pusha
jnp
push
out
retf
imul
cmp
int
sbb
cwde
jmp
sti
xor
add
test
sar
lock
pop
jle
enter
(bad)
lock
std
inc
pusha
cmp
add
movs
and
pop
jbe
adc
comiss
pop
mov
cdq
das
ss
cmc
aaa
sbb
inc
aaa
(bad)
stc
mov
mov
sbb
mov
cmp
out
push
icebp
mov
aas
lahf
out
stc
mov
mov
enter
or
cmp
push
hlt
pop
loope
pushf
inc
push
in
sbb
std
bound
in
mov
sub
adc
pop
adc
add
(bad)
clc
inc
pop
xchg
adc
mov
sbb
add
test
icebp
fcmovbe
(bad)
stos
icebp
jmp
ds
test
sar
mov
cdq
jecxz
xchg
inc
ja
hlt
and
push
mov
mov
mov
pop
cdq
in
lds
iret
in
cs
jg
lods
or
sub
(bad)
fist
add
jmp
outs
fnstcw
mov
add
or
jg
fistp
shl
mov
cs
xlat
and
int
mov
(bad)
arpl
call
imul
jne
ins
adc
mov
xchg
int
mov
or
jmp
jne
mov
not
call
(bad)
movs
jbe
nop
dec
shr
add
sbb
mov
cdq
pop
adc
mov
sahf
sbb
add
jnp
(bad)
mov
cdq
bound
jno
jle
add
into
ror
clc
pusha
jl
dec
lods
jmp
pop
std
dec
push
enter
sbb
mov
loope
jbe
fcomp
add
loopne
ja
rol
jg
aad
je
test
jg
lods
repz
je
push
sbb
xor
sti
push
and
hlt
jnp
pcmpgtb
ret
movs
cmp
pop
and
or
add
retf
rol
retf
mov
mul
js
mov
jo
into
cwde
data16
push
mov
arpl
stos
int
jmp
inc
test
and
out
inc
out
jl
cld
and
in
es
iret
and
mov
cld
sbb
out
loop
xor
mul
pop
(bad)
cmp
xchg
mov
into
or
enter
pop
pop
adc
inc
neg
popa
push
or
sub
cld
push
xor
sbb
sti
jnp
mov
sbb
scas
out
retf
(bad)
adc
mov
cmp
sar
sbb
cwde
jnp
mov
in
fist
pop
xchg
fdivr
pop
cld
outs
xchg
iret
stc
shl
dec
jno
inc
sub
jbe
fidiv
cld
dec
and
add
and
add
aas
and
jp
jle
aad
lds
ffreep
fld
sahf
aas
ret
cmp
jp
pop
mov
jmp
(bad)
xor
mov
xchg
(bad)
pusha
jg
in
jg
pop
out
loopne
mov
pusha
lea
out
sub
mov
cmc
and
les
ja
fwait
mov
test
clts
dec
hlt
mov
jge
inc
add
dec
adc
adc
and
pusha
sti
arpl
push
cs
jns
(bad)
imul
jecxz
test
lock
mov
cmp
repz
neg
sbb
jp
scas
(bad)
xchg
stos
mov
(bad)
pop
fs
out
jns
ficomp
out
xor
sbb
stc
add
iret
add
push
push
js
or
pop
and
das
in
xor
(bad)
xor
ror
pop
cmc
mov
mov
fwait
inc
test
dec
mov
aas
in
aam
mov
mov
loopne
and
fcmovne
popa
int
js
xchg
es
std
mov
(bad)
push
mov
xor
xor
lods
sbb
enter
adc
imul
clc
add
repnz
jle
inc
xchg
adc
in
cmp
rcr
ins
(bad)
movs
js
cmc
push
out
push
out
xor
sub
int
pushf
fisubr
xor
push
or
rcr
in
retf
jmp
pop
fs
sahf
mov
enter
pop
in
sub
push
mov
cmp
mov
push
test
add
cli
pop
shl
xchg
dec
arpl
loope
rcr
mov
loopne
jge
inc
ja
(bad)
int
push
(bad)
mov
iret
pop
(bad)
test
inc
jl
push
cli
jecxz
cmp
(bad)
lods
repz
shr
xchg
mov
jb
push
loopne
sub
jge
frstor
mov
xor
push
cld
mov
stc
inc
jg
pop
add
inc
add
jmp
inc
(bad)
mov
jb
push
mov
loopne
pop
popf
fisubr
repz
iret
pop
mov
call
(bad)
mov
dec
jnp
int3
pop
hlt
cwde
lods
sti
les
jmp
ficomp
in
mov
pop
jmp
xor
jnp
inc
shl
or
jle
test
or
in
pusha
mov
xor
and
das
push
dec
cmp
mov
xchg
mov
(bad)
fcomi
(bad)
fiadd
stos
lods
mov
outs
cld
ins
lea
pop
pop
pop
daa
mov
lds
jp
fsub
in
cmp
add
mov
pop
leave
mul
icebp
xchg
in
adc
sbb
in
add
xchg
add
or
and
xchg
cmc
xchg
div
out
jg
mov
dec
leave
sti
shl
das
stc
addr16
aad
push
lods
push
stos
imul
lods
out
pop
stos
inc
in
add
out
and
call
das
xchg
mov
pop
lods
iret
(bad)
mov
add
cs
sub
mov
in
loopne
aas
loopne
push
hlt
add
js
loopne
add
fcmove
sbb
call
cld
mov
cmp
mov
loope
retf
(bad)
pop
mov
pop
push
inc
xchg
(bad)
cld
fisttp
mov
hlt
push
test
(bad)
jg
cmps
and
pop
nop
lahf
jecxz
fadd
std
pop
dec
popa
inc
in
retf
jne
pop
idiv
cwde
pop
fstp
stos
test
xor
push
push
stos
add
jmp
icebp
mov
pushf
lods
(bad)
stc
cmp
pop
cmp
add
test
lds
mov
ja
pop
jl
(bad)
and
in
xchg
cdq
in
fisubr
add
jle
(bad)
stc
shr
div
daa
push
retf
pop
enter
in
rol
repnz
test
das
mov
dec
mov
fcom
les
xlat
add
jle
loope
imul
mov
inc
pmulhuw
sti
enter
xor
cmps
jmp
mov
jo
xlat
mov
imul
mov
cmc
aad
ds
cmps
push
sbb
jp
and
jo
cmp
push
adc
push
dec
icebp
int
mov
mov
mov
das
scas
test
out
aam
inc
sbb
push
jne
cli
cmp
movs
ds
bswap
jae
jge
pop
call
fsubrp
and
jmp
fstp
pop
fsub
cli
cdq
arpl
adc
std
lahf
push
daa
aaa
stos
inc
mov
std
push
in
push
push
add
sbb
jbe
lods
jnp
enter
ins
or
shl
pop
sbb
int3
out
retf
add
and
nop
cmp
mov
or
adc
(bad)
fmul
into
and
test
mov
fisub
shl
std
jle
out
iret
sti
mov
pop
loopne
xlat
add
into
(bad)
pushf
(bad)
or
js
shr
add
stc
mov
repz
pusha
adc
(bad)
add
nop
aam
ret
or
add
gs
fidivr
int
sbb
pop
push
sub
fild
cmps
fbld
mov
sub
cmp
pop
aad
into
out
sar
test
mov
fiadd
jle
not
std
jge
mov
xor
push
xor
push
call
(bad)
push
sub
mov
not
jmp
xor
add
sbb
and
or
jns
nop
(bad)
inc
sahf
ja
cdq
pop
fisubr
cs
xor
leave
pop
js
in
dec
in
into
fstp
mov
sti
adc
jle
ja
xor
rol
in
pop
lds
xchg
es
cs
aas
in
(bad)
mov
aas
clc
icebp
push
stos
movs
jle
mov
inc
add
pop
mov
ins
dec
lds
sub
jo
push
or
mov
mov
add
and
sbb
and
push
sbb
iret
cmp
stc
out
jbe
mov
push
mov
push
pop
fisub
or
cmps
inc
jmp
icebp
mov
pop
test
push
cli
push
lock
gs
repz
dec
loope
xchg
int3
cs
cmp
sbb
pop
stos
sub
loop
test
cmp
pop
imul
repz
dec
sbb
call
and
stc
mov
and
sbb
imul
cmp
repz
xchg
mov
outs
mov
xchg
aam
sti
pop
cmp
inc
aad
sbb
inc
mov
outs
gs
inc
jo
lock
xchg
sub
cld
nop
call
clc
sbb
sub
push
loop
sbb
sar
jp
xchg
xlat
fwait
aad
popa
scas
popa
loopne
xor
aas
xchg
push
and
sub
or
fwait
push
sar
std
imul
ja
jnp
jnp
repz
xor
inc
fucomip
xlat
push
fild
mov
jle
cmp
xchg
jmp
retf
jle
(bad)
and
rcr
xchg
(bad)
mov
clc
jecxz
sbb
in
std
repz
inc
js
push
js
jae
int3
cmp
repz
pop
push
mov
push
test
sbb
dec
fstp
ss
mov
ins
aas
in
aad
cmc
jmp
int
push
push
push
(bad)
call
cs
mov
shl
mov
in
dec
cmc
sbb
dec
shl
xchg
test
in
xor
lds
jne
dec
jnp
outs
test
mov
int
call
loopne
or
std
jae
sbb
out
int3
mov
adc
inc
add
(bad)
(bad)
xor
aam
xor
aam
xor
aam
xor
mov
pushf
sahf
stos
push
sub
mov
enter
xchg
leave
jns
(bad)
stc
ss
sub
ja
adc
in
mov
or
lods
(bad)
pop
dec
xchg
push
mov
or
int3
push
push
iret
push
cmp
and
lock
jmp
(bad)
arpl
cmp
aas
(bad)
xchg
cmp
dec
inc
jle
retf
xchg
dec
xchg
mov
inc
push
sahf
jnp
out
xchg
jmp
das
mov
sbb
lahf
adc
adc
adc
mov
jp
repnz
iret
mov
stc
pop
push
icebp
jg
(bad)
addr16
inc
in
jnp
(bad)
je
(bad)
pop
xchg
call
aas
push
lds
icebp
sub
scas
daa
add
aas
xchg
jmp
pop
iret
in
daa
xlat
inc
mov
scas
mov
jp
xlat
jmp
xchg
mov
enter
add
jl
iret
inc
bnd
or
in
nop
sub
adc
adc
dec
cld
mov
push
cwde
fnstcw
xchg
sahf
cs
aam
xor
jae
or
push
adc
sbb
cs
in
sti
and
pop
repnz
lods
inc
add
outs
add
or
mov
jbe
dec
lea
mov
out
sbb
sbb
sbb
call
add
ror
cwde
fldenv
jbe
call
sbb
lods
(bad)
push
add
repz
mov
xor
nop
or
add
mov
stos
pop
fldenv
stos
and
aad
push
shl
xchg
cmp
pop
jb
mov
popa
arpl
pusha
iret
or
(bad)
jg
cmc
push
cmps
adc
jp
ja
mov
ret
cmp
and
xor
pop
pop
cmc
movs
pop
sti
cdq
(bad)
int
shl
std
jmp
out
dec
enter
aaa
or
fisttp
mov
stc
pop
dec
(bad)
(bad)
mov
sbb
aaa
or
and
shl
or
aas
mov
adc
lea
sub
fst
loopne
rcr
repz
ins
aas
mov
xor
adc
int
xchg
out
pop
push
xchg
aad
imul
jp
shl
xchg
mov
lock
mov
ins
or
aaa
aad
fcomp
jns
mov
ret
cmp
lea
test
and
xchg
jno
popa
jb
sub
xchg
jle
cmp
ds
call
imul
(bad)
ror
mov
inc
pop
neg
xor
xor
cmps
fstp
dec
icebp
adc
jb
inc
adc
ror
sar
jmp
add
jge
les
xor
cli
js
xchg
mov
imul
fbld
aas
fcomp
in
xchg
ins
jo
dec
mov
dec
sar
or
jl
mov
std
pop
mov
leave
out
dec
arpl
sbb
pop
into
pop
jle
clc
jae
fmul
ja
ins
repnz
inc
cwde
sub
out
arpl
mov
cmp
pop
mov
add
jne
ins
cld
fsub
add
push
cld
adc
repz
jnp
pop
mov
lea
dec
ins
adc
dec
imul
sub
adc
aas
xchg
sbb
aam
in
sahf
lock
fnstsw
out
mov
fadd
shl
pop
push
dec
fcomp
push
leave
adc
sub
xchg
cmps
push
call
outs
les
mov
imul
jae
mov
pop
cmp
mov
sti
fisttp
mov
cdq
push
ja
mov
xchg
jmp
addr16
fisttp
ins
repnz
sti
fistp
cmp
sti
sbb
adc
or
fbld
retf
clts
cmps
dec
jmp
push
jg
inc
sbb
jecxz
fst
popf
ficom
daa
call
xor
sub
in
in
cmps
pushf
mov
std
jmp
mov
(bad)
pop
sti
jb
out
aam
mov
sub
popf
xchg
jmp
sbb
test
pop
out
xchg
jb
ror
scas
jns
cmc
pop
or
pushf
jecxz
je
mov
xchg
out
ffreep
in
jl
lea
push
mov
es
mov
mov
cwde
inc
in
xor
int
mov
xor
in
jl
push
mov
imul
dec
mov
mov
or
imul
xchg
lock
fsubr
xchg
inc
dec
jns
aad
pop
(bad)
shl
das
(bad)
cmp
enter
mov
idiv
cmps
daa
mov
jne
ror
call
dec
inc
push
cmp
jmp
das
and
hlt
test
jne
adc
dec
int
ins
push
aas
mov
xchg
xchg
leave
pushf
mov
inc
push
pop
fistp
lods
inc
les
inc
pop
jne
jne
test
cwde
test
cdq
jecxz
mov
xor
add
pop
inc
cmp
sbb
in
ins
shl
mov
(bad)
jp
fadd
mov
xchg
movs
das
fdivr
out
sbb
fidiv
and
sti
jo
mov
cmp
jl
dec
in
mov
ja
push
jp
push
cmps
jae
lock
xor
addr16
pop
mov
push
icebp
inc
xchg
shl
dec
ins
inc
(bad)
xor
daa
or
test
cmp
sub
sbb
pop
repz
pop
retf
pop
aam
push
mov
dec
stos
cmps
mov
adc
jne
mov
les
jle
gs
pop
dec
movs
in
xlat
mov
sub
cmps
cmp
(bad)
outs
movs
sahf
dec
rcr
fadd
jg
popf
inc
hlt
ds
mov
jmp
or
dec
xor
js
cmp
icebp
retf
stc
and
add
fnstcw
sub
in
xchg
sbb
leave
pop
and
sbb
and
or
mov
cmp
pop
dec
ds
icebp
out
sbb
and
jl
sti
jns
jle
outs
std
ds
mul
sti
(bad)
jnp
mov
jp
and
clc
mov
cs
rol
(bad)
aaa
push
iret
adc
jmp
and
fldcw
icebp
shl
xor
fisubr
imul
sub
mov
ffreep
mov
xchg
imul
fsub
add
aam
adc
pusha
add
ret
adc
ret
lock
ret
and
das
loopne
cld
mov
adc
int3
in
ret
lods
mov
addr16
rcr
popf
xchg
sub
mov
or
push
stos
xchg
popf
jmp
xchg
enter
or
adc
les
pop
sbb
scas
dec
popa
mov
repz
retf
cmp
adc
test
jae
mov
xor
stos
repnz
ficomp
xchg
test
sub
cmp
(bad)
in
pop
sahf
push
imul
fwait
aas
and
jge
cmps
add
jno
(bad)
rcr
fwait
std
push
xlat
lock
inc
sub
pop
inc
pop
cwde
fdiv
sahf
not
cmp
std
shl
rcr
push
lods
aaa
and
add
fistp
into
jae
jge
out
cmp
shr
movs
jl
sar
mov
retf
or
hlt
or
jge
dec
dec
popf
aad
xor
sti
mov
dec
dec
daa
fsub
fst
sar
aad
pop
mov
test
xor
jo
cli
dec
shl
stc
jge
js
mov
fst
and
add
sub
and
in
je
iret
scas
ja
mov
bound
ror
mov
and
(bad)
cli
aas
sar
sti
dec
dec
pop
dec
mov
ins
stc
iret
aad
iret
sbb
xchg
lea
mov
shr
cmp
pop
xchg
mov
xor
fadd
pop
mov
inc
mov
pushf
fcmovnb
adc
idiv
xor
inc
not
ror
fadd
ficom
lea
and
pop
loopne
call
call
pushf
xchg
mov
push
es
sbb
jb
or
inc
dec
cwde
fdiv
test
jecxz
push
cwde
xchg
xchg
data16
jecxz
leave
imul
mov
adc
loopne
stos
sbb
xlat
or
adc
adc
dec
inc
(bad)
iret
fisubr
adc
movs
jecxz
arpl
aas
lea
push
lds
sbb
int
cmp
xor
sbb
xchg
aam
shl
and
cmp
sub
les
push
gs
std
int3
push
jmp
mov
ret
lds
mov
in
and
and
mov
enter
leave
fdiv
dec
cmp
pop
sar
mov
shl
sub
cmp
push
sbb
xor
or
es
push
ins
bswap
mov
icebp
loope
dec
retf
lods
lahf
cmc
sti
cli
xchg
fadd
(bad)
push
push
xchg
mov
mov
movs
mov
shr
mov
lock
repz
push
or
pop
aam
in
mov
dec
pop
sub
adc
jnp
push
shr
inc
es
push
jo
stos
clc
sahf
or
push
xchg
add
fs
addr16
scas
pop
cmps
adc
pop
cld
dec
inc
xchg
jmp
stc
jmp
sbb
xchg
ja
jecxz
dec
inc
mov
lods
push
or
and
sbb
cli
jns
pop
dec
push
int
inc
xchg
movs
loop
jecxz
shl
mov
pop
std
call
add
add
jmp
lahf
sub
loope
jnp
mov
fsubr
add
ss
arpl
in
fcomp
push
popf
pop
push
test
mov
ret
daa
mov
jo
mov
push
xlat
and
push
fadd
movs
jecxz
repz
rcl
xor
cli
mov
sbb
pop
pushf
popf
jmp
data16
in
pusha
dec
jmp
dec
retf
(bad)
push
lock
outs
out
outs
xchg
lahf
adc
xor
std
ja
mov
std
mov
mov
mov
gs
pop
mov
mov
or
mov
dec
imul
xchg
movs
inc
pop
dec
inc
movs
rcl
mov
out
jns
lods
jmp
sub
mov
cmp
adc
lahf
cmp
outs
out
js
and
mov
mov
and
push
push
imul
scas
in
nop
imul
retf
movs
jp
cs
inc
lahf
cs
inc
das
cmp
fisttp
jg
xor
imul
test
jbe
add
imul
add
dec
mov
dec
dec
and
mov
gs
nop
outs
imul
pop
iret
out
add
jo
mov
(bad)
adc
push
in
(bad)
mov
dec
mov
inc
mov
loop
call
mov
add
mov
lods
adc
cmp
sahf
das
int3
loope
mov
jmp
jmp
rol
(bad)
adc
cmps
mov
in
addr16
xchg
or
loopne
scas
fisttp
clc
enter
daa
iret
call
lahf
scas
cmp
dec
iret
test
rcr
cmp
mov
sbb
loop
std
lock
jp
sahf
sub
sub
das
iret
pusha
les
cmp
xchg
aaa
jp
iret
out
(bad)
jmp
pop
inc
scas
push
into
aad
std
ret
(bad)
inc
xlat
out
rcl
mov
push
xor
push
in
aaa
call
dec
xchg
mov
lock
pop
xchg
xchg
cmp
cmp
lahf
out
push
mov
or
call
jae
ja
imul
(bad)
cwde
mov
sub
repz
and
xchg
jae
mov
test
sbb
pop
add
mov
jecxz
cwde
in
les
pusha
out
xchg
imul
ds
xchg
or
dec
inc
iret
not
es
xchg
mov
(bad)
pop
push
jl
aas
sbb
fisub
add
jmp
xor
test
mov
fisttp
mov
into
add
push
stc
repz
and
mov
(bad)
test
adc
mov
and
and
jo
mov
adc
(bad)
jo
fsub
mov
dec
or
and
cmp
sub
movsx
in
scas
(bad)
sub
sub
push
xchg
int
(bad)
fsubrp
sub
les
clc
xchg
pop
arpl
inc
loopne
xor
icebp
mov
xor
mov
mov
or
shr
jo
bound
data16
xchg
dec
push
shl
mov
clc
outs
inc
repz
ret
in
loopne
jne
cdq
add
xor
ja
fs
adc
je
inc
xor
fs
js
sar
mov
ret
les
mov
inc
dec
pop
div
aaa
sub
and
jecxz
sar
hlt
repz
std
and
dec
into
or
fsqrt
sbb
mov
pop
sbb
jg
clc
out
(bad)
ret
(bad)
mov
ret
dec
push
lock
inc
sbb
(bad)
dec
jae
sub
(bad)
mov
fidivr
popa
pop
pop
test
pop
lahf
lahf
mov
data16
mov
push
add
jg
jo
sbb
pusha
(bad)
cli
sti
mov
push
adc
into
mov
and
sub
sbb
sbb
jae
adc
inc
cli
(bad)
out
add
call
mov
imul
lahf
cdq
in
jb
or
jl
xor
inc
repz
pushf
aas
adc
movs
inc
scas
cmp
inc
cmp
mov
or
jge
shr
clc
dec
gs
(bad)
cmp
iret
sbb
push
push
mov
outs
int
sub
mov
push
pushf
mov
mov
jnp
hlt
mov
push
loopne
xor
jp
or
push
or
popf
mov
adc
(bad)
xchg
and
jecxz
inc
cmc
dec
inc
jmp
or
xchg
fidivr
je
xchg
sbb
dec
jmp
and
stc
mov
cmp
fstp
jae
scas
and
dec
cld
fbld
int3
push
test
ror
sub
pop
fcom
fild
inc
inc
mov
popa
or
dec
(bad)
jp
sbb
and
clc
ret
leave
jae
std
out
ds
or
fist
fiadd
cmp
jne
pop
adc
jb
adc
mov
xor
or
xlat
dec
jbe
mov
out
jo
fst
cmp
fld
loop
rcr
lods
ins
mov
scas
or
sbb
pop
aaa
mov
hlt
mov
fadd
push
cmp
mov
add
fnsave
mov
jge
push
test
push
inc
or
and
cmp
push
aas
aad
or
jae
sbb
xchg
inc
(bad)
xchg
mov
ins
jmp
inc
in
sub
xchg
and
jno
daa
stos
push
sbb
fisubr
sbb
dec
inc
gs
iret
test
push
xor
sar
push
fdivr
mov
xchg
pop
inc
ja
mov
lods
leave
or
xchg
int
clc
fist
cld
out
aaa
cmp
mov
mov
xor
mov
adc
mov
shr
lds
mov
dec
xchg
push
jle
xor
(bad)
bound
push
pop
or
push
adc
mov
pop
fisttp
repnz
sub
push
cmc
xchg
(bad)
call
or
push
ins
ins
hlt
fs
jg
ds
scas
push
les
jb
jbe
pusha
pop
pop
gs
stos
je
movs
fwait
mov
imul
ins
cmp
sahf
mov
xchg
pop
out
mov
mov
nop
in
push
aam
and
ins
aam
xor
or
pop
adc
mov
pop
lea
ffreep
in
mov
or
ret
pop
inc
(bad)
adc
in
cmp
push
inc
lods
cmp
jb
dec
and
dec
xlat
call
cmp
iret
cmp
jecxz
sar
loope
shl
addr16
daa
push
xor
test
cwde
jecxz
xor
mov
mov
das
sahf
xor
dec
je
jbe
bound
int
leave
xor
and
int3
push
pop
in
and
and
lock
fisttp
jmp
pop
int
xchg
jbe
bound
inc
ins
in
aam
jne
out
loop
fsub
push
loopne
pop
and
jb
and
out
mov
xchg
loope
sbb
push
ss
add
cmp
out
mov
sti
loop
or
(bad)
cmp
hlt
lds
fadd
fld
cmp
xor
rcl
cmp
inc
lahf
pushf
clc
sub
dec
or
cmp
ret
icebp
les
lds
inc
adc
xor
pusha
push
sets
jnp
dec
lods
es
push
imul
jae
mov
or
push
sub
cmp
lods
sbb
inc
je
inc
and
leave
icebp
das
xlat
sbb
aad
(bad)
fisub
int
inc
scas
adc
mov
mov
test
jo
loopne
lods
and
mov
fstp
retf
hlt
pop
push
mov
mov
push
inc
sub
push
mov
mov
idiv
sbb
jle
mov
ins
dec
push
xor
and
les
sub
cli
imul
ss
add
clc
scas
push
xor
or
push
dec
lahf
das
dec
inc
loopne
call
xchg
jb
mov
leave
sbb
popf
icebp
xlat
mov
pop
cld
xor
lock
inc
or
pushf
sbb
cmp
stc
xor
loop
shr
jecxz
repnz
lds
sbb
outs
cmps
imul
pusha
dec
inc
das
div
mov
dec
(bad)
adc
test
cmps
mov
lds
mov
bound
adc
repnz
sub
or
loop
cmp
mov
inc
push
mov
out
xchg
aad
sub
(bad)
push
and
in
and
add
dec
push
and
clc
pop
cmps
jne
lea
out
out
dec
jnp
add
mov
sete
jns
inc
pop
push
jno
ss
ins
das
daa
scas
fsubr
nop
fmul
push
sti
js
adc
aaa
inc
repnz
adc
test
push
aas
cs
data16
out
mov
hlt
dec
push
xchg
inc
jnp
inc
cmp
popf
leave
jge
inc
loopne
push
and
add
mov
rol
or
sbb
or
mov
lahf
sub
retf
out
jge
stos
fstp
out
sahf
in
fisub
cmp
ja
xlat
inc
mov
and
fimul
inc
lahf
in
test
les
sbb
xor
xor
adc
lea
cmps
sbb
jle
js
fidiv
sub
iret
add
jl
add
mov
fucomi
jbe
jns
sub
outs
mov
adc
push
out
and
jmp
xor
xchg
sti
sbb
mov
data16
ja
xchg
xchg
js
sti
jne
fld
or
sbb
sbb
dec
inc
pop
jg
xor
mov
int
push
mov
and
int
jl
aad
icebp
call
cli
pop
sub
mov
xchg
pop
sar
repz
mov
cmp
mov
fimul
xor
neg
jo
mov
in
cwde
lock
jo
hlt
add
lods
xchg
ret
sbb
es
mov
out
and
push
fwait
and
push
popf
fst
mov
das
push
fcmovnu
mov
push
imul
jmp
out
sar
jne
scas
imul
repz
pop
xor
pop
arpl
dec
add
cmc
popa
add
mov
out
mov
push
dec
ret
inc
jbe
fst
fdivp
mov
fild
cmp
outs
cwde
vpslld
fmul
jno
or
push
mov
dec
(bad)
xchg
push
mov
dec
rcr
into
xor
sbb
in
sub
nop
into
loopne
jnp
and
cmp
daa
loope
adc
clc
rcl
sbb
call
dec
mov
push
push
sub
cmc
mov
inc
loop
sbb
ins
sub
call
push
scas
sbb
outs
(bad)
sub
mov
xor
clc
loope
mov
pop
adc
(bad)
ds
jne
aam
inc
sahf
ins
sub
sbb
iret
xchg
mov
or
rol
xor
xchg
(bad)
push
ins
mov
into
xchg
test
mov
in
bound
add
cmp
mov
in
std
je
scas
push
(bad)
shr
mov
shr
cmp
rcl
mov
add
adc
sti
and
push
in
rcl
int
add
adc
bound
pop
adc
jb
dec
mov
jae
mov
sahf
lock
cmps
cmp
pop
mov
fstp
inc
stos
cmc
sbb
les
jecxz
sbb
jne
jne
cli
jp
sbb
mov
into
xchg
pop
adc
jecxz
sbb
idiv
mov
jnp
repnz
(bad)
xchg
mov
mov
lods
shl
sub
mov
aaa
add
sub
or
mov
sti
sbb
jg
add
(bad)
mov
aaa
cmp
enter
lods
adc
in
sbb
sub
mov
jnp
cmc
ret
jmp
push
xor
dec
repnz
movs
pop
sahf
cmps
ds
bound
icebp
jnp
jg
dec
mov
xchg
out
aad
pop
cmc
sbb
clc
pop
(bad)
hlt
pop
stos
xor
inc
xchg
out
in
sbb
add
ror
dec
stos
cmc
int3
out
mov
jne
int
inc
jecxz
rol
or
jnp
scas
add
jae
out
sub
add
(bad)
pop
jecxz
xchg
cmp
cmp
add
ret
sub
outs
push
mov
adc
daa
mov
bound
push
lahf
jnp
int
out
ins
shr
xchg
xchg
std
mov
aad
pushf
out
dec
test
push
mov
xchg
out
mov
cmp
sbb
xchg
push
scas
jae
mov
mov
call
inc
test
mov
jbe
lods
adc
cmps
fst
fimul
enter
xchg
retf
stos
adc
pop
cdq
jno
jle
scas
out
xor
out
cwde
call
add
add
popf
repz
push
jb
shl
or
popf
and
(bad)
jle
mov
shr
dec
in
jge
retf
sub
stc
xchg
xchg
int3
cdq
scas
pop
test
add
and
mov
fimul
push
aam
(bad)
xlat
test
push
std
adc
daa
(bad)
xchg
add
call
jg
lds
imul
push
mov
out
mov
lahf
out
sbb
loopne
mov
loopne
inc
push
jle
mov
mov
xor
ror
pop
dec
inc
mov
popf
and
fild
ffreep
rol
cmps
adc
cmp
cmp
mov
ss
push
shr
xchg
xor
fstp
sub
lods
loop
loopne
shr
push
pop
test
mov
(bad)
xchg
aaa
mov
jg
push
sbb
loop
push
jmp
pushf
cmc
push
cld
leave
bound
adc
cwde
mov
cmp
cmp
fs
daa
(bad)
(bad)
sbb
dec
add
dec
call
cs
xchg
test
pop
fdiv
std
pushf
push
push
cmp
and
jecxz
outs
sbb
(bad)
rcl
popf
leave
sbb
mov
iret
ins
inc
(bad)
xchg
fild
xor
and
es
adc
or
mov
jp
cwde
or
push
(bad)
icebp
add
jbe
in
lea
push
and
call
cmp
aam
sti
out
mov
fcomi
push
cld
fld
or
ror
in
loop
mov
(bad)
leave
in
leave
(bad)
xchg
clc
or
popf
aad
test
xchg
add
mov
sub
mov
std
adc
dec
push
pop
sub
pop
or
cli
or
cmc
in
push
retf
(bad)
clc
scas
adc
sbb
push
jnp
into
push
aam
mov
mov
xor
cmp
shl
ss
imul
scas
xor
pop
shl
jp
jmp
int
std
cmps
push
adc
ja
jno
or
pop
ret
js
out
jae
pop
pop
arpl
mov
sbb
out
xchg
mov
fnstcw
clc
adc
int
and
add
mov
push
(bad)
loopne
sahf
xor
call
shufps
pop
xor
mov
xor
mov
(bad)
imul
popf
fucomi
inc
add
loop
test
ja
and
inc
cmp
push
and
daa
sbb
jo
inc
cmc
mov
add
xchg
js
ss
jns
lock
and
mov
repz
outs
test
gs
repz
jecxz
lock
pop
mov
jbe
sbb
arpl
(bad)
ins
pop
outs
icebp
cli
xor
xor
sbb
xchg
jmp
mov
daa
cld
cmps
loopne
dec
or
jp
sub
stos
fnstsw
out
aad
cmc
dec
iret
ret
loopne
cmps
sbb
cs
js
(bad)
fiadd
in
call
imul
cs
pushf
pop
arpl
sahf
(bad)
aaa
mov
out
pop
push
out
ja
or
inc
jp
ins
pusha
aas
mov
arpl
ds
mov
fsub
jno
dec
sbb
jnp
xchg
imul
(bad)
xchg
clc
adc
adc
push
(bad)
(bad)
sti
out
shl
mov
in
lods
jno
mov
add
add
lock
bound
(bad)
sub
xchg
push
xchg
adc
mov
data16
inc
loop
lods
(bad)
mov
call
scas
mov
aaa
addr16
jno
add
mov
(bad)
cmps
push
cmp
aaa
pusha
mov
lods
pop
mov
lock
into
rcr
out
fucomp
lods
push
pop
stos
jne
mov
into
popa
fdiv
jae
cli
mov
sbb
jmp
aaa
imul
push
sahf
rcl
aas
add
div
out
push
jnp
jae
pop
inc
bound
pop
push
pusha
(bad)
sub
add
int3
push
mov
add
sub
dec
loop
mov
retf
mov
leave
push
(bad)
clc
and
pusha
sbb
pop
adc
push
push
das
mov
std
xchg
hlt
aaa
nop
std
mov
mov
xlat
out
ss
mov
cmp
(bad)
jl
into
loope
xchg
movs
mov
jl
mov
mov
cmc
rcr
call
pop
fidiv
jge
hlt
jmp
retf
inc
cmp
cmc
les
dec
in
mov
(bad)
call
add
in
int3
stc
das
jnp
add
inc
icebp
mov
dec
mov
hlt
sahf
mov
adc
test
inc
adc
adc
mov
add
movs
adc
sub
pop
adc
jnp
repz
outs
jbe
ja
dec
inc
inc
inc
(bad)
in
repz
dec
out
data16
jnp
sti
mov
inc
jge
into
les
inc
push
xchg
sti
rcr
dec
out
int
lods
push
jb
bound
pop
pop
les
dec
and
mov
jne
repz
pop
or
aam
sar
cmc
or
xchg
arpl
addr16
xor
cmps
dec
std
aas
int
nop
popa
lods
mov
jmp
ror
xor
push
jnp
idiv
out
and
cmp
xchg
in
dec
mov
and
push
sub
jno
fstp
cmc
dec
dec
jno
jl
ss
hlt
jl
push
pop
mov
shr
xchg
scas
retf
jb
push
in
mov
cmp
or
xchg
pop
xchg
adc
sub
pop
aaa
sbb
data16
imul
mov
pop
xlat
mov
xor
and
mov
icebp
and
(bad)
adc
mov
cmp
mov
xor
add
scas
hlt
dec
dec
push
arpl
xchg
mov
mov
mov
pop
push
rol
imul
inc
pop
fwait
and
mov
in
sar
push
outs
shl
fcomp
mov
enter
in
sbb
push
(bad)
hlt
loope
gs
neg
retf
ret
sbb
jl
dec
cmp
mov
aad
or
das
cmp
ins
mov
(bad)
and
push
nop
imul
repz
in
and
out
in
adc
xor
cwde
dec
cmps
mov
bts
or
mov
shl
ins
add
fdiv
mov
pusha
jne
pop
daa
aam
add
sub
(bad)
test
push
pushf
(bad)
add
loopne
push
xchg
in
inc
scas
mov
out
or
adc
lods
ds
xchg
mov
repnz
inc
sahf
rol
xor
sub
push
loope
cdq
and
mov
data16
pop
jae
dec
int
push
push
mov
ficomp
cmp
das
push
test
lods
lods
adc
or
push
loop
test
lahf
or
mov
push
mov
cmp
shr
lods
es
cmp
dec
fld
mov
fld
outs
xor
movs
es
psrlq
xor
inc
outs
and
pop
sbb
out
repz
jge
and
mov
out
mov
push
addr16
ins
popa
cwde
mov
push
adc
sbb
imul
scas
in
xor
mov
retf
or
pop
adc
or
in
push
mov
jae
cmc
test
xor
and
in
cmp
mov
dec
daa
ss
retf
mov
inc
xor
mov
clc
xchg
loope
dec
out
or
into
idiv
cs
les
aas
push
jae
mov
into
mov
add
cmp
bound
pushf
loop
sub
or
mov
mov
es
or
xlat
sbb
xchg
test
or
jg
fs
cli
arpl
jmp
pop
ss
pop
retf
cld
aad
sahf
out
iret
hlt
int
mov
mov
aaa
loop
out
call
fist
jmp
sub
cmp
jp
(bad)
sbb
fdiv
ret
push
cmovge
imul
or
mov
sub
mov
in
mov
imul
cmp
dec
cld
das
xor
or
repnz
push
mov
std
pop
cmp
sub
dec
out
dec
out
mov
adc
shl
loop
in
je
lea
inc
lahf
ja
(bad)
jecxz
pop
xchg
push
mov
pop
xchg
lea
aaa
bound
inc
imul
xchg
add
sar
int
dec
stos
pop
(bad)
in
mov
mov
dec
(bad)
mov
push
ja
(bad)
mov
or
daa
fcom
sar
xchg
fcmovbe
ficomp
jae
aaa
shl
ucomiss
sbb
pop
add
push
jp
les
jg
call
xlat
sbb
dec
xor
xchg
sbb
adc
pop
cwde
mov
push
xor
test
out
bound
add
pop
je
stc
pop
in
sub
jae
clc
out
or
imul
outs
test
mov
(bad)
lock
enter
mov
imul
out
dec
not
ins
call
xchg
cmp
and
inc
mov
mov
jns
sub
ja
jmp
pop
outs
call
xchg
push
add
xor
out
jns
jmp
stos
dec
bound
sbb
and
push
pop
sbb
fild
rcr
pop
pop
jl
jge
dec
mov
adc
loop
out
push
cmp
(bad)
ds
imul
mov
addr16
repz
push
ja
call
pop
jecxz
sbb
test
fwait
int3
mov
pop
scas
dec
pop
cmp
inc
ins
pop
and
add
or
jbe
mov
xchg
in
sbb
scas
push
sbb
clc
ja
rol
pop
test
rcr
cdq
jg
xchg
(bad)
and
in
icebp
aas
add
xor
push
fs
add
aaa
mov
pop
in
and
dec
lahf
lods
les
call
ja
out
test
or
dec
jecxz
in
call
aad
jb
mov
ret
sar
sub
and
sti
and
rol
push
push
mov
or
sti
rol
lock
std
scas
lds
call
clc
jg
jae
mov
and
and
das
xlat
popf
add
mov
repnz
jae
ja
fidiv
ret
pop
aas
sahf
es
sbb
adc
xchg
cli
mov
nop
imul
mov
cmp
mov
mov
retf
lods
inc
ret
add
jns
jmp
or
ficom
or
or
cld
cld
iret
in
idiv
cld
push
push
add
add
push
adc
cmps
rcr
pop
fwait
dec
jne
scas
lea
pushf
imul
jo
dec
adc
cwde
mov
fmul
les
push
cmp
push
sahf
rol
out
(bad)
mov
adc
pop
or
or
(bad)
in
repnz
dec
jmp
stos
ja
inc
mov
jae
add
pop
adc
ss
sub
jmp
add
mov
pop
in
shr
repz
xchg
nop
xor
sub
push
imul
xchg
out
jnp
xchg
lock
ret
int3
adc
les
or
jl
dec
xchg
pop
mov
push
fistp
or
fcom
mov
das
pop
sub
das
mov
daa
push
jmp
lahf
lea
pop
mov
pusha
outs
and
sbb
pop
mov
xor
loop
in
leave
xchg
cdq
(bad)
fidivr
pop
cmps
cld
cmp
add
dec
fst
or
mov
mov
inc
in
sub
sti
dec
inc
(bad)
in
mov
daa
push
mov
pop
je
cld
xor
aas
xchg
cmps
sti
xchg
or
xlat
seto
xor
xor
pop
ss
aad
lds
(bad)
clc
and
mov
sti
bound
sbb
cmp
pop
mov
int3
push
ins
repnz
ret
out
sahf
or
mov
jp
scas
lds
(bad)
xor
mov
loope
add
dec
call
(bad)
mov
fidivr
push
sbb
pop
repz
jbe
jp
push
out
sub
or
push
cld
std
ror
sbb
jae
jecxz
jmp
out
xor
mov
nop
sbb
xor
push
lea
sub
out
sar
jg
dec
jmp
retf
add
jg
xlat
sub
in
add
es
mov
xor
sub
scas
inc
add
(bad)
call
fild
loop
jecxz
jle
fldcw
dec
and
nop
push
fimul
mov
push
adc
cmps
jge
pop
into
pushf
call
xchg
(bad)
out
xchg
jmp
aam
xchg
cwde
dec
jg
cmp
imul
add
dec
outs
xchg
xor
stos
mov
shr
sbb
mov
xchg
push
cmp
jmp
dec
out
xchg
mov
jmp
push
mov
movs
dec
pop
jp
mov
nop
clc
outs
lock
call
pop
adc
je
mov
in
rol
fadd
ja
push
stos
jbe
test
jns
xchg
jae
retf
dec
outs
arpl
loope
add
sbb
sar
aas
and
and
sbb
and
js
scas
out
adc
clc
jno
lahf
scas
adc
jne
scas
pop
aam
outs
sbb
adc
mov
movaps
(bad)
sbb
and
das
pop
fld
mov
mov
xor
sbb
sar
(bad)
or
out
adc
pushf
sub
sub
xor
cmc
or
call
ret
daa
out
je
leave
cwde
sub
aas
cmp
imul
jmp
push
dec
hlt
pop
xchg
jns
xor
cld
or
icebp
jge
cdq
mov
mov
addr16
jbe
jmp
pop
fsubr
xor
lds
jl
push
cmp
dec
xchg
scas
and
pop
mov
neg
mov
mov
xchg
fiadd
sbb
test
adc
in
sub
inc
fdivr
icebp
jecxz
lods
xchg
inc
fisttp
mov
xchg
imul
mov
lods
inc
div
imul
pop
por
xor
aam
or
scas
xchg
call
and
jns
xchg
add
pop
enter
stc
lahf
cmp
scas
sbb
setp
add
cld
push
cmp
pop
sub
mov
fcomi
ins
sahf
pop
dec
xor
repz
lods
out
pop
test
jg
jo
mov
out
xchg
sub
movs
ss
pop
shl
jl
in
stos
bound
mov
dec
ja
or
retf
xchg
scas
mov
mov
mov
jb
jp
and
(bad)
stos
(bad)
test
fsubp
call
xchg
outs
out
ins
das
jne
adc
sub
inc
mov
sahf
outs
fist
movs
in
jg
in
imul
mov
mov
add
sub
out
jl
(bad)
or
sbb
xchg
ins
ds
cmp
jg
xchg
pop
(bad)
mov
out
lahf
pop
dec
mov
cmp
repz
sub
aad
jle
out
add
js
aas
jnp
xchg
sti
adc
mov
push
std
mov
(bad)
inc
add
loope
mov
(bad)
std
mov
xchg
jne
pop
adc
lahf
aad
(bad)
mov
add
jns
sqrtps
or
sbb
inc
cmp
mov
popf
push
fwait
pop
jecxz
adc
cmc
cmc
adc
imul
pop
call
sahf
jmp
fdivr
push
lahf
ror
dec
jnp
mov
sub
cmp
pop
mov
(bad)
fbld
add
es
jns
fsubp
pop
mov
cdq
outs
lea
sub
repnz
mov
fs
and
cs
fcmovbe
loopne
rol
mov
int3
push
popa
add
xor
push
out
inc
scas
cdq
shl
pop
adc
ins
lods
nop
psraw
push
retf
retf
stos
pop
mov
pop
mov
push
xchg
inc
repz
adc
cmp
bound
xor
push
xor
pushf
aaa
adc
stos
jge
dec
xor
imul
retf
ds
mov
jnp
mov
adc
or
aas
ffree
lock
out
sbb
or
ins
jg
sub
sbb
and
je
xor
imul
(bad)
div
inc
jno
mov
iret
mov
dec
fistp
aaa
sub
jmp
and
dec
fsub
int
cld
cmc
mov
or
push
cmps
mov
inc
or
js
adc
push
mov
cmp
inc
repz
sub
cli
stos
pop
js
imul
out
les
jae
dec
or
mov
cwde
mov
xor
xor
pop
dec
mov
js
popf
popf
hlt
fcmovnu
outs
add
aam
xchg
or
arpl
cmps
arpl
(bad)
cmp
sub
inc
test
repz
push
sar
jne
fcomp
mov
add
dec
retf
mov
jae
dec
mov
popa
lds
inc
adc
(bad)
ss
iret
mov
mov
(bad)
fst
xchg
(bad)
cmp
call
enter
std
pop
lods
lock
add
add
pusha
loope
or
jno
jo
les
mov
or
pop
sub
push
or
push
mov
push
push
mov
std
popf
stc
cmps
popa
not
jmp
idiv
pop
dec
mov
or
test
ja
repz
sbb
sbb
ror
pop
xchg
sbb
xchg
in
loopne
sub
test
mov
mov
cmp
es
hlt
push
(bad)
pop
jge
dec
lea
adc
lahf
mov
ror
sbb
ja
out
fisubr
ss
test
sbb
jo
sti
cmps
pop
jmp
adc
loopne
leave
mov
fdivr
repz
(bad)
or
addr16
test
ret
or
push
leave
ret
mov
js
fxch
adc
pop
mov
repnz
aad
or
mov
xchg
out
outs
es
xlat
cli
xchg
ror
cwde
scas
pop
and
ds
arpl
cld
push
mov
xchg
dec
scas
fnsave
adc
es
push
push
sar
pop
(bad)
mov
cdq
test
xchg
sbb
dec
inc
xchg
int
dec
sbb
popa
cmc
test
pop
mov
aaa
aam
scas
call
inc
and
push
pop
shl
adc
repz
scas
out
shr
jl
sbb
xor
mov
sbb
mov
int
cs
pushf
fidiv
cwde
adc
inc
leave
and
sub
xchg
pop
mov
ja
ja
out
push
mov
fisub
loope
data16
scas
jb
jbe
fwait
and
(bad)
je
sub
mov
call
push
jne
js
lods
stos
mov
ret
cmps
rol
push
je
mov
cs
shl
fistp
cmp
iret
popf
sub
xor
enter
cmp
fild
mov
mov
data16
jle
pop
dec
aam
mov
cs
pop
pop
mov
pop
jge
pop
mov
lahf
out
push
sbb
sbb
cli
pop
arpl
retf
dec
stos
aas
call
inc
sahf
sbb
call
retf
outs
imul
and
rcr
mov
mov
test
dec
xchg
xlat
shl
ds
mov
ss
dec
leave
addr16
enter
cdq
ins
inc
push
pop
shr
mov
das
aam
jmp
sti
mov
mov
js
sbb
xor
loop
jge
cmp
imul
cdq
push
shl
fisubr
cli
mov
out
push
xor
(bad)
leave
jp
ins
xchg
add
iret
ds
pop
or
inc
sbb
sar
or
jle
mov
cmp
xlat
push
xlat
icebp
out
jb
jns
cmc
xchg
sbb
dec
push
fimul
sbb
(bad)
add
pushf
shl
adc
add
dec
adc
sbb
inc
bound
(bad)
pop
inc
mov
pop
pop
sahf
or
dec
inc
pop
xchg
mov
imul
je
push
clc
add
in
xor
xchg
add
shr
push
pop
test
and
add
cdq
jl
fimul
pop
clc
scas
data16
push
mov
in
dec
sar
pop
(bad)
(bad)
jb
inc
cmp
cmc
jl
loopne
mov
lds
int
sbb
(bad)
xor
and
int3
adc
fldenv
bound
jmp
push
xor
add
sbb
call
mulps
repz
push
push
lahf
(bad)
mov
(bad)
mov
(bad)
(bad)
mov
fsubr
pop
retf
pusha
dec
push
cmps
outs
fcmovnb
jecxz
lods
mov
push
lds
mov
mov
pop
xchg
imul
test
and
(bad)
mov
mov
inc
out
shl
xchg
adc
cdq
popa
test
fist
inc
ret
int3
call
mov
fisubr
ja
pop
add
or
mov
jp
add
out
push
pop
xchg
mov
movs
xchg
dec
lock
push
stc
cs
repnz
and
leave
mov
cmc
out
loope
pop
push
shl
idiv
cmp
sbb
xchg
es
push
push
xor
jae
data16
add
jg
rcl
sti
cmp
aad
sbb
jge
push
cli
test
test
aad
js
jo
jae
lock
xor
jae
add
jbe
or
cdq
fistp
scas
pushf
fadd
ja
mov
mov
sar
and
or
pop
fild
(bad)
xchg
out
mov
mov
fld
mov
das
push
clc
add
rcl
(bad)
fild
ja
arpl
pop
call
push
jne
xor
stos
cwde
push
jmp
cmp
push
lea
mov
mov
stc
int
sbb
jge
daa
adc
int
and
jecxz
dec
pop
mov
sahf
mov
mov
dec
les
loopne
dec
pop
and
push
jmp
push
mov
jl
es
in
cdq
sbb
daa
arpl
jb
pushf
pop
xchg
and
and
ds
jbe
xor
or
fld
push
mov
popa
xchg
jle
xor
leave
cmp
popf
pop
inc
xor
cld
fcom
push
push
xor
lea
or
mov
mov
push
sbb
les
ds
lods
push
(bad)
adc
ss
jge
ds
inc
enter
fidivr
or
mov
fwait
jno
call
mov
inc
std
pop
movs
mov
xchg
sar
pop
dec
fbld
in
mov
pusha
rol
gs
scas
dec
inc
ss
and
dec
push
stc
cs
xor
xchg
jmp
jmp
or
sub
jecxz
outs
sbb
ins
push
lds
xchg
mul
fisttp
sbb
xchg
out
(bad)
fimul
sahf
push
xchg
sub
retf
jne
jl
cmc
xchg
fist
mov
cmp
into
leave
cmc
push
push
out
mov
test
(bad)
data16
inc
lahf
mov
push
xchg
mov
jge
add
xor
push
std
mov
add
inc
dec
mov
jae
cmp
imul
movs
add
inc
daa
mov
out
mov
push
int3
push
arpl
sbb
imul
dec
jns
add
cli
push
lods
mov
test
out
out
sub
je
pusha
hlt
dec
xlat
pusha
cld
je
pusha
xor
popf
or
xor
mov
cmp
std
paddq
adc
fisub
xlat
movs
xchg
jmp
adc
jb
daa
aam
ds
sbb
jmp
dec
mov
jecxz
sbb
mov
sahf
out
ror
sahf
test
inc
lock
outs
jl
dec
adc
xor
sbb
push
sub
jne
and
mov
sbb
ins
in
loope
movs
lea
shl
cwde
push
imul
jle
dec
inc
cld
jns
call
shl
xchg
cmp
cs
dec
push
sub
jno
in
daa
ss
fstp
cmc
neg
mov
inc
dec
(bad)
icebp
fwait
pop
cli
mov
retf
inc
ins
adc
inc
xchg
aas
daa
fimul
xor
adc
out
push
inc
ins
fnsetpm(287
sub
fldenv
outs
(bad)
xchg
out
mov
sub
aas
test
imul
xchg
leave
call
test
mov
xchg
pop
pop
adc
and
(bad)
jns
shr
cli
jb
adc
pop
push
popa
xchg
cmc
int
fimul
and
cmp
pop
lock
sti
push
icebp
leave
in
cs
enter
mov
pop
lock
pusha
pop
stc
jae
xor
xor
mov
ins
inc
inc
cdq
push
pop
cmp
bound
fsub
ins
jl
fsubr
xor
sub
aam
xor
aad
push
xor
or
sti
aaa
fwait
mov
imul
lods
add
dec
aad
(bad)
imul
ds
repnz
inc
xchg
arpl
xchg
pop
test
xchg
adc
shl
movs
(bad)
fnstenv
lds
outs
in
dec
arpl
loop
sub
test
jmp
icebp
push
repz
fbstp
(bad)
sub
popf
xor
or
mov
inc
out
not
jmp
rcl
pushf
ss
mov
clc
nop
fsubr
pushf
xchg
out
inc
mov
pop
call
sbb
jmp
cmp
jmp
dec
xchg
inc
retf
fidivr
mov
(bad)
fstp
lahf
and
and
ja
or
ror
jns
repnz
out
mov
jno
xchg
mov
cmp
dec
out
jmp
lea
mov
clc
jbe
and
repnz
ret
mov
push
xor
cmp
in
or
arpl
push
enter
scas
mov
les
xchg
push
and
popa
ret
retf
pop
sbb
push
push
xor
mov
and
ins
ds
sahf
ins
retf
dec
je
addr16
fmul
int
add
push
int3
dec
push
je
jp
push
adc
adc
cmps
inc
(bad)
jmp
lock
fwait
sub
and
mov
call
push
adc
std
fcmovbe
pop
cmc
aad
jo
in
(bad)
or
cmp
xlat
outs
mov
imul
(bad)
and
icebp
ds
pop
mov
and
rcl
cmc
(bad)
jmp
inc
push
into
stc
dec
std
sub
jl
fisttp
pop
adc
or
xchg
xchg
fwait
ret
dec
in
inc
push
popf
leave
xlat
push
xchg
dec
lahf
inc
movs
dec
loop
mov
ins
jno
loop
jmp
pop
adc
ret
or
leave
in
(bad)
mov
sub
(bad)
mov
push
mov
mov
or
pushf
(bad)
xor
push
daa
mov
push
rcl
loope
lods
dec
dec
xchg
sub
call
adc
sbb
cmp
and
imul
or
repz
fstp
pop
jb
or
ret
add
jbe
aam
jo
aad
dec
addr16
dec
jle
and
stos
cdq
mov
in
mov
pop
cmp
add
dec
mov
mov
les
sar
or
(bad)
sbb
sbb
imul
cmp
sub
test
adc
sahf
xor
cmp
retf
inc
mov
ins
test
pushf
test
xor
xchg
(bad)
sub
jb
dec
push
fdivr
ret
dec
cwde
cmp
in
mov
std
jge
xlat
cmp
ds
sub
add
sti
inc
out
mov
in
cld
ror
push
xchg
scas
push
xchg
xor
movs
imul
inc
push
bound
lock
leave
xchg
dec
shr
jecxz
mov
fistp
dec
inc
mov
arpl
in
in
push
xchg
outs
cmp
push
cmp
push
adc
xchg
or
aaa
inc
sub
inc
jmp
and
mov
add
adc
ins
dec
dec
(bad)
jecxz
pop
jnp
add
and
and
jno
xor
daa
mov
cmp
push
adc
sbb
pop
in
mov
xor
sbb
mov
mov
and
or
jbe
or
int
mov
add
push
dec
lods
je
mov
ja
enter
mov
jge
xchg
(bad)
sbb
shl
fnsave
pop
push
mov
cmp
xchg
ficomp
and
and
mov
bound
and
aam
imul
cmps
loop
stos
(bad)
sti
aad
cmc
mov
inc
mov
jle
pop
and
jmp
ins
inc
int
inc
inc
test
mov
add
mov
xor
fisub
movs
fbld
out
cmp
jno
in
mov
icebp
sahf
inc
or
xor
call
je
fsubr
dec
fisub
ficom
fs
add
mov
pop
(bad)
mov
aam
cdq
(bad)
pop
call
push
add
push
and
popf
xchg
jmp
lea
test
sub
mov
jl
fld
mov
sbb
test
mov
idiv
push
loopne
add
dec
lods
xchg
and
ror
mov
adc
pushf
xor
fs
xor
jbe
inc
pop
xlat
dec
push
adc
mov
lods
lods
xor
int
stos
jnp
cmp
push
adc
xor
pop
arpl
lahf
fsubr
jns
cmp
fisub
pop
mov
aad
mov
call
inc
pushf
jbe
mov
cmp
adc
jb
lea
icebp
gs
mov
mov
sbb
js
sti
push
mov
pop
xlat
pop
iret
mov
sbb
popa
rcl
cmps
retf
sub
data16
imul
fbld
aaa
(bad)
pop
ror
arpl
xchg
aam
and
adc
stos
aas
jne
(bad)
retf
cmps
in
loope
sbb
mov
xlat
or
mov
jae
cmp
cmps
pop
xchg
(bad)
adc
dec
or
lods
jmp
fimul
mov
cmps
aam
ins
ror
add
aas
shl
idiv
jecxz
(bad)
int3
cmp
pop
neg
ds
arpl
mov
dec
sub
jne
fwait
mov
les
leave
xchg
(bad)
sub
mov
es
in
and
xchg
inc
iret
jbe
add
mov
hlt
jb
mov
cld
popf
sub
dec
enter
dec
pop
push
sbb
mov
test
mov
sbb
push
cmp
xlat
pop
(bad)
shr
(bad)
cmc
stos
scas
sti
jle
shl
jae
adc
add
mov
dec
aam
push
hlt
pop
pop
adc
and
jge
je
adc
or
dec
loop
inc
mov
cld
int
cmp
pop
pop
adc
fs
ret
inc
nop
mov
inc
in
jns
mov
mov
movs
cmp
mov
(bad)
jg
sbb
jae
sub
dec
or
cmp
lock
pop
mov
mov
jbe
popa
arpl
jo
ds
mov
cmps
in
jmp
mov
imul
ret
lds
dec
pushf
movs
imul
fld
jle
in
jae
sub
ficomp
mov
jne
frstor
add
(bad)
cmc
mov
ftst
mov
test
or
inc
xchg
add
cmp
jno
xor
pop
in
sub
mov
mov
pushf
(bad)
enter
cwde
xchg
je
pusha
int3
(bad)
xchg
mov
fwait
sbb
test
lock
(bad)
maxps
mov
in
or
jbe
int
dec
repnz
push
xchg
sbb
(bad)
int
xor
pop
or
lods
shl
loope
icebp
xchg
mov
cmp
push
push
cmp
into
imul
es
mov
sbb
out
int
loop
mov
jl
jle
mov
loop
cli
jns
jmp
mov
sub
repnz
aam
and
shl
mov
js
jno
xchg
cmps
push
lods
fwait
xor
adc
jns
lods
adc
daa
lds
inc
fadd
jnp
sbb
retf
retf
dec
mov
pop
mov
mov
pop
std
mov
test
push
dec
mul
mov
inc
(bad)
fcom
movs
jp
lds
mov
in
ins
leave
imul
adc
mov
mov
jle
mov
jp
inc
movs
lods
pop
repnz
mov
mov
(bad)
sub
mov
sti
pushf
sbb
adc
dec
jle
dec
sbb
inc
pop
stos
cwde
push
sbb
mov
adc
and
outs
xchg
push
add
add
into
mov
cli
leave
cld
(bad)
bound
mov
mov
cmp
jl
sar
fbld
(bad)
fcomp
add
popf
xor
dec
inc
xchg
movs
push
inc
xlat
sbb
nop
mov
mov
push
mov
ret
dec
mov
leave
clc
(bad)
xchg
(bad)
(bad)
faddp
and
xor
sbb
jmp
int
lds
leave
out
add
push
dec
or
es
xchg
aas
push
stos
arpl
dec
sbb
adc
and
adc
jl
bound
mov
xor
push
xor
f2xm1
dec
inc
stc
push
ss
in
hlt
dec
leave
pop
lock
mov
jg
(bad)
xchg
adc
dec
ss
mov
mov
dec
pop
dec
jl
jo
not
mov
sbb
in
pop
frstor
sbb
mov
push
loopne
mov
lods
lahf
(bad)
cmp
mov
push
jge
aad
sub
inc
addr16
ins
mov
(bad)
xchg
(bad)
push
lea
sbb
iret
les
cmp
inc
mov
lods
push
ret
mov
psubusb
loopne
cld
daa
inc
jmp
ror
mov
pop
icebp
call
inc
ja
add
jg
pop
and
mov
call
jns
dec
xor
pop
mov
cmp
mul
rol
std
pop
mov
int3
pop
int
loope
xor
fucomp
cmps
cmp
jle
sub
and
add
popa
dec
mov
xchg
loopne
(bad)
jmp
lock
loope
xchg
leave
mov
push
xchg
jo
pop
sbb
xchg
imul
mov
sti
jecxz
clc
fnsave
add
in
pop
mov
cli
inc
cdq
imul
dec
mov
(bad)
ja
and
sbb
dec
cs
fidiv
jmp
jmp
cmp
loope
xlat
inc
outs
jl
pop
jg
jl
outs
shl
out
icebp
jecxz
pop
popf
jns
lahf
outs
sbb
stc
mov
out
(bad)
mov
pop
adc
cwde
xor
lods
test
xlat
stc
mov
or
pop
cli
ret
enter
sbb
dec
hlt
push
das
out
xlat
dec
sti
mov
out
das
jecxz
lock
sbb
mov
(bad)
and
fnstsw
cmp
(bad)
test
ret
inc
cmp
mov
cmp
cmps
pushf
int3
mov
(bad)
dec
mov
jb
pop
cmp
in
lock
stos
or
fcom
adc
mov
mov
jle
into
or
mov
mov
adc
js
lahf
outs
clc
test
lods
loope
fdivr
cs
out
lds
out
jge
(bad)
sti
mov
xchg
imul
adc
dec
mov
retf
je
ror
mov
add
test
jle
push
test
rcr
inc
sti
push
gs
adc
mov
ins
add
adc
mov
gs
nop
mov
jecxz
adc
sub
dec
(bad)
xchg
gs
(bad)
dec
cld
(bad)
jns
in
pop
icebp
daa
mov
cmp
ins
dec
jle
mov
mov
mov
xor
mov
cmp
fdivr
mov
fucomip
xchg
cmp
jmp
movs
call
jecxz
outs
mov
dec
jne
xor
not
(bad)
jmp
(bad)
mov
mov
ss
or
adc
push
sub
in
sar
mov
xor
mov
xlat
bound
lahf
pop
cmp
pop
cli
(bad)
fwait
mov
sbb
aas
aas
setno
cmps
(bad)
and
sbb
movs
sbb
clc
mov
cmp
mov
ins
fcom
mov
cmp
mov
or
addr16
icebp
xchg
dec
icebp
aas
adc
ins
mov
fstp
fstp
jmp
icebp
addr16
sbb
fs
xor
or
sub
idiv
sar
les
scas
pop
bnd
rol
cmp
enter
cmp
(bad)
in
mov
movs
enter
mov
repnz
outs
in
cmp
lock
and
mov
rol
jmp
push
sub
sbb
fcmovnbe
mov
ret
loope
mov
es
cmp
sbb
or
(bad)
jnp
fiadd
es
or
xchg
cmp
dec
mov
add
and
push
fldcw
ins
(bad)
out
or
mov
repz
cmp
stos
add
cli
push
fiadd
ins
inc
int3
out
(bad)
cmps
ficomp
pop
and
or
stos
in
jg
jmp
in
inc
mov
(bad)
(bad)
xchg
ret
mov
loopne
add
sahf
outs
mov
sbb
imul
or
ja
inc
cmp
fs
xchg
ficom
iret
mov
das
call
sbb
das
or
xor
data16
lods
fstp
pop
mov
imul
cwde
pusha
cmp
adc
push
ins
in
xor
out
rcr
mov
fwait
in
cli
in
shl
fdivp
cmps
fnstenv
cwde
clc
popf
mov
inc
add
mov
shr
loopne
add
enter
pop
xor
jbe
push
ja
lahf
int
cmp
xlat
in
mov
loopne
icebp
and
pusha
test
hlt
rcl
pushw
imul
cld
cmp
cmps
push
mov
pop
in
sub
xor
int
ins
popf
lods
repnz
into
mov
(bad)
sbb
and
xor
(bad)
out
(bad)
push
dec
push
js
cmp
je
stc
jno
mov
pop
xchg
xor
and
cli
mov
adc
data16
fimul
cs
ret
sub
xchg
and
push
popa
sbb
repnz
mov
data16
ret
std
lea
data16
stos
sbb
fsubp
aad
cmp
and
inc
out
or
sub
shl
retf
outs
dec
and
push
mov
cs
stc
cli
popa
(bad)
xor
loope
xchg
inc
mov
es
jge
and
adc
sar
std
cmc
js
mov
sbb
or
mov
pop
(bad)
neg
(bad)
and
mov
xchg
add
sub
in
repz
out
test
pop
arpl
xor
fbstp
lock
mov
inc
andps
(bad)
(bad)
aas
mov
test
(bad)
pop
ret
fdiv
sub
sahf
adc
mov
aam
xchg
ss
rcr
jbe
pusha
icebp
xor
mov
push
inc
in
xor
cdq
shl
and
aas
xor
popf
clc
stos
jae
xor
push
out
lock
xor
add
sar
jne
xchg
sub
(bad)
in
jne
scas
imul
dec
int
jmp
pop
mov
dec
cmp
retf
ficomp
outs
or
mov
mov
sbb
push
mov
jg
out
fwait
dec
sbb
shl
xor
cdq
adc
push
mov
jnp
aad
pop
pop
cdq
sahf
cdq
mov
sub
(bad)
push
jl
cmp
pop
jae
mov
sbb
mov
cli
push
retf
cmp
and
or
jle
xor
icebp
pop
icebp
dec
in
dec
inc
es
jmp
(bad)
fninit
xor
sbb
call
sbb
mov
aaa
js
test
and
sbb
les
repnz
addr16
push
jecxz
popa
add
and
xchg
sub
or
ret
iret
ja
mov
mov
xlat
cmp
mov
rcr
lock
(bad)
neg
repz
lods
add
adc
mov
sub
icebp
enter
mov
loopne
push
inc
mov
ja
xor
xchg
push
in
nop
pop
sbb
(bad)
rol
scas
out
push
jae
mov
push
(bad)
sti
out
ret
jge
cwde
push
fsub
mov
fisubr
pop
cmp
mov
mov
adc
clc
loop
sar
cmp
icebp
mov
push
(bad)
aaa
loop
sbb
pop
aad
int3
shl
xchg
fisttp
and
test
cmp
push
and
cwde
popa
in
inc
or
ins
(bad)
xlat
mov
hlt
adc
outs
sbb
stos
mov
xchg
and
cmp
faddp
jg
jecxz
adc
(bad)
pop
fdiv
bound
icebp
cld
out
loope
mov
shl
sub
mov
fwait
mov
mov
das
pusha
into
pushw
movhps
pop
pop
(bad)
aaa
mov
mov
fmul
cmp
cmp
sub
outs
mov
mov
mov
repz
or
in
clc
inc
push
sub
retf
dec
aaa
cdq
lock
fcmovnbe
jmp
sub
cmps
sub
fsub
inc
out
xchg
and
add
lods
jno
retf
or
cli
rol
imul
les
mov
mov
sbb
mov
mov
mov
sub
mov
ja
pushf
jl
(bad)
fimul
mov
mov
test
cmp
and
inc
sti
shr
hlt
neg
mov
mov
shr
sar
adc
jmp
sub
outs
xchg
(bad)
lock
mov
jo
popf
push
int
mov
cmp
bound
ins
call
add
add
rcl
mov
pushf
jecxz
arpl
in
mov
stos
std
xchg
(bad)
rcl
cld
iret
outs
dec
lods
add
loop
mov
dec
in
stos
fadd
dec
in
popf
adc
dec
leave
es
mov
shufps
test
mov
scas
ss
das
das
movzx
js
jecxz
popa
fistp
sbb
pushf
jae
jns
test
cmps
xchg
jbe
inc
adc
and
shl
mov
rcl
enter
mov
xor
push
jmp
jbe
fld
imul
fs
cmp
sub
pop
sub
jmp
(bad)
imul
mov
enter
mov
aam
sub
movs
test
(bad)
sbb
cwde
pop
fst
loop
jnp
clc
fdiv
inc
mov
sahf
mov
xchg
jp
neg
adc
das
out
dec
xchg
scas
and
lods
mov
push
mov
dec
xor
push
inc
nop
xor
jl
and
or
pop
inc
clc
mov
cmc
pop
or
jle
push
mov
cmps
add
clc
inc
and
sahf
lods
mov
out
adc
sar
sbb
adc
in
fdiv
shl
pop
xor
stos
and
adc
push
ret
ror
aas
bound
bound
call
or
fstp
stc
xor
lods
jno
lock
mov
outs
mov
sbb
jge
in
xor
xor
or
not
(bad)
and
cli
jecxz
clc
clc
xchg
into
clc
mov
icebp
xchg
ret
jns
sub
or
(bad)
lds
and
pop
cmps
cwde
xor
sub
jbe
ins
es
lahf
rcl
jl
dec
cmp
jne
lfs
and
or
pop
jnp
add
lds
pop
mov
push
sub
or
fadd
ret
je
add
mov
sub
inc
bound
test
mov
mov
mov
es
in
lea
lea
jae
aaa
out
(bad)
fnstenv
call
jbe
mov
out
popf
cmp
ja
out
adc
push
sbb
stos
hlt
not
mov
cmp
sbb
and
sbb
xchg
sar
push
mov
jae
call
enter
pop
mov
push
dec
rol
mov
and
jnp
xor
mov
or
or
lahf
out
mov
inc
jnp
pop
in
fldenv
hlt
mov
outs
aaa
and
lgs
std
loope
mov
mov
shl
movs
enter
ja
pop
ret
jae
loope
dec
cmp
mov
outs
es
sub
xchg
popa
add
mov
loope
xor
sbb
fsubr
adc
jle
sbb
ret
fiadd
fadd
push
pushf
fldenv
popf
inc
or
cmp
loope
sti
jmp
inc
paddd
push
movs
mov
add
xchg
add
pop
dec
cwde
enter
jne
cmp
push
sar
call
arpl
clc
cli
rcl
daa
xchg
jmp
stos
mov
pushf
mov
js
and
cmps
enter
scas
or
push
sahf
mov
outs
pop
loopne
mov
mov
scas
push
xchg
(bad)
sahf
mov
pop
cs
cmps
cli
idiv
mov
pop
fadd
jne
cmp
jae
aaa
mov
sahf
lock
sbb
icebp
dec
add
add
(bad)
xchg
je
jg
jo
mov
or
mov
stc
je
jle
stos
push
ret
jae
aaa
iret
lahf
mov
mov
fdivr
mov
and
pop
(bad)
xor
sbb
test
aad
mov
cmc
ja
pop
jno
repnz
cmps
jle
aaa
(bad)
cmc
sar
idiv
sub
iret
retf
(bad)
pop
movs
mov
pop
into
xchg
and
fcomp
test
xchg
ins
mov
mov
repz
dec
data16
inc
adc
cwde
dec
mov
mov
dec
pop
fcom
pop
cmp
iret
push
fcom
cmp
cld
xor
imul
pushf
mov
ss
push
in
sub
call
xchg
iret
mov
adc
ret
fidiv
xchg
call
mov
xor
(bad)
pop
push
push
jo
fwait
or
mov
pop
test
and
into
ins
ror
inc
loop
das
jo
shl
adc
cmp
add
sbb
mov
das
(bad)
enter
icebp
cld
xor
xchg
hlt
jp
fadd
aaa
mov
std
jne
jmp
stos
jl
imul
xchg
xlat
or
imul
pop
mov
idiv
(bad)
cmp
mov
in
push
sahf
retf
dec
inc
movs
mov
(bad)
jae
adc
cmp
cdq
lock
daa
push
(bad)
fiadd
cdq
aas
inc
movs
mov
scas
sbb
jb
inc
fucom
pop
loopne
pop
icebp
pop
sub
sbb
out
cmp
mov
jae
xor
mov
call
fs
or
stc
jns
scas
out
adc
cmp
jle
dec
in
add
iret
aam
mov
hlt
clc
js
mov
out
ror
mov
xor
bound
gs
iret
gs
ins
pusha
je
add
pop
xor
fucomip
rcr
ret
imul
loop
push
loope
ins
out
inc
inc
or
sub
sbb
cmp
ja
mov
lahf
out
jp
ins
push
je
push
fcmovb
pop
pop
add
aad
mov
(bad)
lahf
inc
mov
fmul
jnp
shr
(bad)
out
push
mov
xchg
xchg
push
pop
pop
out
sub
pop
jecxz
xlat
mov
xchg
mov
out
inc
rcr
int
es
mov
mov
push
arpl
movs
adc
push
loopne
inc
adc
out
cs
mov
mov
dec
movups
fsub
jns
inc
pop
dec
in
shl
pop
ret
loope
xchg
fiadd
scas
mov
sbb
xor
mov
sbb
cmc
sub
in
jne
push
dec
adc
cmp
out
dec
jo
or
add
adc
and
pmaxsw
sbb
adc
adc
mov
outs
ja
neg
fucomp
xchg
jae
stc
into
std
out
neg
jne
dec
push
dec
(bad)
mov
xchg
sub
test
sbb
and
cmp
push
enter
or
in
pop
sub
push
push
adc
popf
or
sbb
(bad)
cmp
neg
dec
stc
xor
fldenv
cmps
inc
shl
xchg
adc
jl
or
(bad)
retf
cdq
outs
stos
mov
inc
push
sub
repnz
cdq
out
dec
fist
jbe
mov
hlt
popf
adc
sub
std
rcl
pushf
mov
mov
mov
mov
add
sbb
or
mov
push
xchg
popf
mov
xchg
and
ror
rol
shr
push
aas
rol
inc
push
xlat
push
in
int3
rol
sub
int3
retf
pop
cli
adc
push
shr
push
hlt
int3
mov
scas
and
in
sub
mov
xchg
fcom
jmp
imul
inc
add
sahf
dec
aas
push
or
call
push
stos
inc
(bad)
push
sub
cdq
jb
aam
je
sub
mov
sbb
xor
ins
cmp
enter
pop
push
and
aam
push
sub
cmp
pushf
ror
std
rol
xchg
(bad)
test
movs
enter
xor
adc
jno
pop
hlt
push
popa
stos
icebp
dec
lock
jmp
icebp
les
pop
inc
fistp
jl
pop
xor
movs
cwde
add
sub
sbb
pop
gs
jbe
shl
arpl
cmp
mov
inc
xor
dec
jmp
bound
and
ins
pusha
es
test
out
jl
mov
loopne
retf
jns
push
inc
jno
imul
mov
jg
int
shl
sub
cmps
imul
loopne
popa
repz
inc
and
sbb
xchg
add
(bad)
or
repnz
jnp
(bad)
outs
xor
bound
cmp
and
sbb
mov
mov
bnd
or
xchg
cdq
in
dec
es
jmp
cmp
or
xor
xchg
xor
dec
jmp
cwde
dec
(bad)
mov
lock
cld
popa
cmp
in
cmps
xor
in
push
dec
lods
sub
sub
(bad)
sbb
fstp
shl
loope
lods
sub
inc
dec
pushf
mov
sub
cmp
and
xor
jb
jl
or
dec
iret
fisub
xor
popa
mov
xor
lds
dec
popf
adc
in
int3
xor
pop
jnp
ins
jnp
pop
jae
add
mov
pop
jmp
and
cmp
fisub
icebp
ins
nop
mov
sbb
pop
adc
jb
(bad)
pop
loope
fldenv
pop
sub
icebp
push
xor
adc
mov
in
test
sbb
ficomp
jo
inc
cmps
repz
add
mov
push
loope
and
outs
aas
outs
push
add
dec
frstor
xor
retf
sbb
jmp
lods
pop
sbb
out
dec
loopne
test
(bad)
cwde
cmps
into
mov
mov
mov
dec
xchg
or
jne
inc
call
shr
cli
aam
jne
ja
mov
jp
ror
and
(bad)
xlat
push
mov
cld
jecxz
jbe
or
cmp
mov
mov
cmp
mov
enter
jl
sub
in
cmps
mov
sti
adc
ds
mov
clc
dec
and
push
sahf
push
inc
jp
jnp
xchg
cmp
adc
sti
mov
out
stc
test
xchg
mov
lods
mul
jo
pushf
or
movs
into
popa
pushf
inc
fwait
dec
or
cmc
fdiv
iret
cmc
jmp
(bad)
int
into
jns
adc
(bad)
mov
push
repz
out
add
not
aaa
in
pop
(bad)
dec
nop
ret
jp
sub
xor
jo
ror
in
jmp
mul
test
mov
jmp
cmp
and
jmp
loop
and
push
mov
fsub
pop
sub
adc
lea
mov
out
mov
mov
ins
mov
(bad)
xor
xchg
fidivr
inc
js
mov
scas
pop
add
out
repnz
jb
dec
repz
call
(bad)
aas
xor
jle
mov
pop
jecxz
or
dec
aaa
mov
or
(bad)
mov
jp
fadd
jbe
test
les
cmp
mov
jo
push
fsub
sub
and
sti
pop
xchg
aam
jmp
fist
out
icebp
add
pop
xchg
cmp
xor
mov
je
in
jmp
in
dec
rol
sbb
xor
loop
xchg
mov
ins
pop
xchg
inc
out
push
imul
dec
lea
sar
stc
scas
clc
sbb
pop
popf
addr16
xor
ja
test
pop
js
fisubr
pop
fnsave
jmp
(bad)
sti
dec
pushf
xchg
test
add
mov
enter
dec
mov
enter
inc
fiadd
sahf
mov
add
inc
pop
dec
and
pusha
ret
ret
xchg
rcl
cmp
call
imul
mov
retf
lgs
fisub
outs
pop
frstor
mov
jnp
mov
jns
mov
sbb
sti
xchg
sti
in
mov
mov
mov
fisttp
popa
or
push
xor
xor
stos
(bad)
push
rol
aad
xchg
jle
and
sub
data16
bound
aad
pop
fdivp
rol
and
sub
inc
dec
pop
les
sbb
mov
repnz
aad
sub
xor
(bad)
cmp
jmp
call
add
test
cmp
cs
(bad)
push
int
sar
xchg
xchg
jmp
cdq
dec
dec
leave
cld
fcmovbe
or
dec
frstor
imul
inc
mov
push
add
clc
ins
clc
sub
mov
leave
add
pop
or
jbe
popa
sub
mov
test
std
or
add
mov
rcl
aas
xor
fnstsw
dec
stc
push
push
pop
jbe
or
mov
ret
push
push
jbe
shl
aas
lahf
sbb
stc
pushf
xchg
pop
test
dec
or
mov
fisub
adc
retf
outs
icebp
inc
loope
data16
mov
ret
inc
stos
xchg
mov
fadd
pop
out
pop
adc
dec
sbb
fisttp
adc
ins
sub
sbb
jns
ret
dec
shl
mov
adc
out
lea
mov
(bad)
imul
mov
out
push
data16
inc
or
pop
(bad)
fistp
sub
(bad)
and
ret
movs
sub
add
xchg
mov
xchg
les
cmp
ja
dec
jmp
fwait
dec
push
mov
adc
icebp
les
sahf
int3
pop
inc
fdiv
jnp
test
psubusw
(bad)
mov
pushf
xchg
push
pop
ds
lock
dec
scas
xor
jnp
das
cdq
pop
push
mov
xor
cli
xor
cmps
pop
mov
into
out
mov
jg
gs
enter
fldenv
out
hlt
cld
dec
fdivr
scas
movs
mov
jnp
scas
jmp
jecxz
mov
nop
retf
repz
add
fs
movs
xor
push
pop
mov
sub
mov
dec
mov
cs
daa
aaa
cmp
dec
rol
mov
sbb
(bad)
pop
cmps
jns
call
clc
jne
mov
xor
xchg
push
addr16
push
int3
inc
dec
add
div
ds
leave
xchg
push
push
jmp
sar
pop
dec
pop
cmp
jns
sbb
mov
(bad)
repnz
hlt
lods
and
push
sbb
rcl
dec
mov
dec
test
movs
xchg
adc
pop
out
sahf
inc
pop
pop
jge
or
ret
mov
fisub
(bad)
popf
mov
xor
push
xor
loope
and
adc
imul
xchg
jne
mov
mov
ret
and
xchg
test
fwait
xor
lock
push
lahf
loopne
push
or
repnz
enter
shr
popf
push
mov
mov
ins
and
mov
jp
sub
jge
push
xor
fdiv
cmp
jo
and
loope
call
jnp
mov
dec
enter
xchg
sbb
ror
jecxz
lock
imul
scas
fcmovne
addr16
xor
mov
(bad)
scas
iret
ror
dec
cld
add
dec
inc
bound
call
repnz
fs
arpl
mov
cmps
adc
mov
movs
or
repnz
adc
ja
mov
jmp
fwait
cmps
mov
sbb
sahf
adc
add
lahf
push
sahf
fidiv
imul
adc
sti
mov
adc
push
cmp
cdq
stc
in
jno
mov
sbb
jle
neg
pop
frstor
cmp
lea
pop
cmp
outs
pop
mov
pop
mov
lds
mov
(bad)
icebp
push
stos
mov
xchg
jns
xchg
mov
cmc
pop
jecxz
xlat
fdiv
and
mov
imul
push
adc
mov
mov
or
(bad)
jmp
xor
mov
pop
iret
sbb
sahf
adc
ror
mov
sbb
ds
sub
icebp
das
mov
cmp
mov
in
jle
mov
jmp
arpl
and
mov
lahf
imul
jp
inc
vsqrtss
sub
or
cdq
fscale
jl
je
cmps
cmp
adc
ja
inc
lahf
inc
dec
test
cwde
fcom
sub
jp
outs
inc
fild
stc
push
fstp
not
jb
jo
xor
enter
xchg
or
dec
lahf
ins
add
add
push
dec
push
jmp
ds
popa
push
into
mov
push
leave
mov
or
in
imul
addr16
jle
outs
sbb
hlt
jae
(bad)
xchg
mov
ds
icebp
pop
fild
adc
inc
push
pop
cld
pusha
(bad)
fisubr
cli
mov
adc
cmp
fisttp
cmc
sub
cmps
sbb
aaa
lahf
xor
dec
fidiv
test
not
aad
(bad)
push
and
ins
arpl
cmp
cmp
dec
xchg
enter
call
fistp
dec
stc
rcl
sahf
mov
ins
aam
mov
mov
cmp
(bad)
xchg
fcmovbe
fmul
inc
das
cmp
mov
jae
push
out
mov
mov
scas
pop
pop
push
jmp
push
cmp
hlt
pushf
mov
shl
test
cdq
sbb
(bad)
cdq
call
test
mov
xor
xor
jmp
aad
jmp
lds
int3
jo
cmps
call
inc
sahf
inc
cmc
and
icebp
cld
fistp
(bad)
mov
mov
inc
retf
and
jmp
out
dec
(bad)
sbb
xchg
adc
data16
mov
sbb
enter
xchg
retf
adc
ins
enter
mov
mov
pop
and
test
repnz
jp
ror
rcl
sbb
push
push
sti
int
push
inc
sub
and
bound
lods
shr
addr16
or
mov
popa
out
and
stos
jnp
add
popa
dec
or
rcl
into
adc
pop
stos
(bad)
popa
mov
xlat
mov
adc
cmp
cmp
pushf
sbb
mov
pop
scas
push
xchg
push
iret
cmp
mov
setp
test
scas
out
js
sub
pop
sar
or
retf
mov
shl
retf
or
out
xchg
inc
fs
cmps
test
mov
add
call
clc
rcl
repnz
test
pop
test
dec
stos
in
lahf
push
jmp
dec
movs
mov
repnz
mov
add
pop
pop
mov
dec
leave
inc
fsub
jns
jne
jae
std
test
cmp
jmp
in
jb
sbb
add
ret
pop
jne
fs
jecxz
rol
jecxz
jge
lea
jmp
xchg
push
pop
(bad)
sub
lea
rcr
inc
clc
loop
outs
jo
or
out
inc
dec
pusha
sub
mov
movs
inc
push
pushf
mov
popa
mov
stos
xchg
sub
add
loopne
pop
(bad)
push
mov
lods
push
loope
addr16
sbb
pop
sbb
sbb
inc
(bad)
push
sbb
inc
pop
addr16
scas
mov
cmp
addr16
dec
sub
inc
gs
pop
push
(bad)
cli
xchg
mov
xor
es
stc
cdq
out
push
mov
repnz
jge
lahf
out
jmp
in
test
cmp
jnp
jge
aas
jg
loope
pop
add
mov
mov
jle
movs
stos
ror
enter
or
scas
stos
jne
and
mov
xor
(bad)
rcl
ret
push
xlat
pop
xlat
(bad)
daa
lahf
jecxz
pop
lods
inc
outs
push
popa
scas
lods
jbe
test
inc
xchg
pushf
add
outs
mov
jno
and
ret
fisubr
cmc
fnstenv
fcomp
pushf
pop
mov
xchg
sbb
sti
sahf
iret
inc
sub
(bad)
sbb
and
fadd
mov
cs
dec
in
sbb
jl
hlt
inc
dec
dec
adc
jg
cdq
or
jno
sub
sub
or
cmc
push
popa
repz
enter
sahf
mov
add
xor
mov
jl
push
sub
loop
je
pushf
adc
call
mov
data16
jno
inc
cs
inc
push
mov
or
jge
cdq
cmp
div
cmp
pop
int3
scas
cs
sbb
outs
push
loope
adc
xlat
xchg
inc
jae
inc
dec
outs
mov
pop
dec
rcl
cli
inc
scas
cld
icebp
pop
sbb
in
aam
xchg
mov
ss
jmp
mov
fistp
jmp
jmp
inc
push
push
out
out
mov
inc
stos
stos
pushf
pop
jns
fs
pop
outs
jae
in
or
jae
cmps
jo
lods
ins
xchg
xor
jb
test
jge
jnp
in
arpl
les
or
rcr
stos
outs
aaa
sbb
and
fwait
mov
dec
movs
dec
ins
mov
test
daa
popf
test
test
jae
sub
daa
dec
jp
jbe
jmp
add
ss
(bad)
call
push
pop
das
inc
mov
push
dec
xchg
dec
adc
mov
mov
iret
pop
retf
pop
inc
imul
lahf
or
call
jg
pushf
xor
pushf
or
add
call
lods
retf
shr
jp
jp
push
mov
mov
lds
arpl
push
xchg
scas
push
aad
xor
mov
mov
or
sbb
(bad)
lock
fdiv
test
mov
pop
and
nop
ret
or
imul
cs
fsubr
or
cmps
fbstp
fnsave
cmc
aaa
mul
and
inc
sbb
pop
loopne
fistp
repnz
sub
retf
xchg
jecxz
xchg
nop
in
xchg
jmp
mov
adc
nop
cmp
test
not
and
mov
scas
repz
add
cmp
xchg
jecxz
cmp
retf
dec
push
fbld
mov
cmp
push
mov
fs
and
test
(bad)
jg
(bad)
push
iret
or
popf
mul
fwait
arpl
push
sti
pop
sti
add
xchg
or
cmp
inc
and
retf
mov
clc
xchg
jo
shl
sub
jge
or
xchg
sar
movs
rcl
enter
(bad)
std
test
pop
and
xor
dec
(bad)
fdiv
fstp
adc
imul
mov
push
test
inc
sub
dec
push
xchg
cmps
dec
push
jo
neg
xchg
pop
fbstp
or
or
mov
and
outs
cmp
cdq
cmp
rcr
jns
ins
mov
es
adc
xchg
mov
sbb
and
push
movq
sbb
pop
push
jle
and
mov
das
jmp
or
out
jno
retf
adc
cli
(bad)
fs
pop
xlat
mov
mov
jno
movs
jp
loope
mov
push
call
xor
pop
adc
out
repz
ficomp
iret
(bad)
loopne
dec
cmp
cmp
in
fnsave
je
lods
and
stos
cmp
fadd
fld
(bad)
int
lea
push
popa
(bad)
out
ret
test
in
std
xchg
push
pop
sahf
or
sbb
jl
ret
sar
sbb
sub
das
es
and
pop
add
sar
push
xchg
(bad)
cli
add
cmps
mov
push
pop
xchg
dec
std
mov
fnstenv
jbe
test
sub
xchg
xor
xchg
lds
sub
pop
cmp
jmp
xchg
stos
cs
mov
jb
push
lahf
mov
ins
sbb
mov
lock
ins
dec
call
mul
add
lods
in
sar
jnp
cmp
cli
lock
lock
sub
dec
jns
retf
test
nop
mov
and
push
pop
(bad)
imul
aad
movs
mov
cdq
cmps
int
cld
jmp
movs
sbb
jecxz
(bad)
jmp
into
out
je
lods
cmp
bound
adc
dec
xchg
lods
mov
add
jne
dec
test
es
jmp
mov
(bad)
and
inc
test
(bad)
xor
or
pop
sub
icebp
xlat
add
cmp
mov
push
stos
popf
push
call
movhps
and
leave
enter
int
mov
mov
jae
outs
pop
jo
sahf
nop
into
out
clc
jecxz
push
push
in
ins
xchg
scas
mov
inc
in
iret
push
das
aas
pop
aaa
xchg
je
cwde
hlt
jno
mov
fldcw
or
xchg
(bad)
xor
dec
push
lahf
ss
mov
mov
(bad)
test
pop
mov
ins
imul
push
bound
ss
loop
jnp
icebp
cmp
xchg
jae
(bad)
arpl
(bad)
div
repz
push
int
jo
jge
ret
scas
pop
and
fisttp
mov
repnz
jmp
stc
stos
out
cli
(bad)
pop
test
push
aas
scas
mov
adc
outs
stos
or
fld
pop
cli
push
fdivrp
shr
hlt
test
ja
xchg
in
inc
push
ret
jae
mov
jns
loop
mov
xchg
jmp
jle
out
xchg
inc
neg
mov
popf
inc
out
sbb
retf
popf
cmp
cmps
mov
dec
mov
ret
mov
outs
jp
popf
mov
mov
inc
cmp
ins
popa
aad
bound
imul
jns
push
cs
mov
mov
cmp
ret
mov
ret
les
pushf
in
xor
xchg
push
in
pop
sub
and
sar
sbb
mov
sti
cld
sbb
popf
ror
das
rep
imul
mov
pop
pop
pop
jo
ret
popf
pop
xor
ret
push
xor
inc
rcr
inc
bound
fisttp
or
sbb
(bad)
outs
sahf
call
mov
push
xchg
inc
popa
push
inc
fistp
sbb
xchg
lds
mov
jg
mov
and
lea
loopne
mov
(bad)
test
je
sti
clc
fldcw
sbb
mov
std
xchg
test
gs
sti
loop
xchg
mov
dec
jnp
call
test
fstp
sbb
jns
js
js
and
push
and
sub
fidivr
icebp
mov
mov
fmul
mov
icebp
jne
cdq
dec
or
or
mov
jl
jmp
je
sbb
push
sbb
data16
sub
stc
popf
xor
test
pushf
jno
pop
inc
push
xlat
jge
push
sbb
mov
mov
enter
sar
push
mov
adc
cdq
pusha
imul
les
push
jno
cwde
cmc
scas
sbb
(bad)
out
sub
leave
jmp
mov
(bad)
jns
cmp
lds
in
sbb
js
xchg
popf
push
icebp
or
xlat
daa
stos
or
(bad)
repz
jae
jp
xchg
bound
inc
bound
ret
int3
out
pop
jnp
push
mov
bound
bound
mov
(bad)
adc
enter
dec
cli
jl
int3
ret
pop
and
add
repz
mov
push
pop
mov
cli
dec
mov
cmc
xor
shl
adc
mov
ret
pop
fild
pop
jp
aas
ficom
mov
adc
mov
(bad)
retf
push
jge
add
repz
and
aas
push
dec
aam
cld
cmp
repnz
fwait
mov
mov
lods
or
fld
dec
mov
out
cmp
sahf
xchg
mov
test
test
in
mov
(bad)
mov
retf
adc
movs
cs
data16
dec
ds
aam
pop
leave
mov
aad
cli
mov
jns
mov
sahf
int
repz
sub
sub
cmp
inc
mov
jmp
add
test
adc
ficom
push
ins
jmp
lock
push
cmp
cmps
push
ror
xchg
add
xchg
test
push
inc
js
imul
out
jecxz
jp
ins
lods
jl
imul
push
inc
dec
dec
pop
jle
aam
and
stos
mov
in
popa
push
popf
and
mov
lock
repnz
pop
mov
dec
loope
push
fisubr
sub
hlt
cdq
mov
mov
jg
mul
and
sbb
shl
shr
dec
dec
mov
pop
mov
stc
call
(bad)
xchg
dec
dec
cmc
sbb
mov
mov
enter
jno
jp
daa
dec
rol
pop
cmps
test
cld
jmp
data16
add
sub
cmp
mov
xor
dec
in
scas
fwait
dec
and
leave
clc
jmp
xchg
and
popf
sti
lds
icebp
aas
int
or
push
cld
mov
sbb
int3
shr
and
aam
loopne
into
jae
lahf
mov
sub
lds
inc
jmp
mov
adc
test
fidiv
sar
push
out
fstp
fadd
inc
adc
iret
into
mov
xlat
pop
mov
ror
gs
pop
xchg
ret
arpl
and
shr
dec
mov
nop
stos
cmp
or
(bad)
lock
dec
repz
jecxz
enter
cmp
hlt
mov
or
push
or
and
xrelease
mov
ins
loop
xor
dec
movs
or
cmp
dec
cld
stos
repnz
add
arpl
scas
retf
mov
iret
out
xchg
pushf
sbb
xchg
fbld
xor
dec
int
ds
(bad)
cmp
int3
xchg
fidivr
push
jae
mov
jge
cwde
dec
fld
cmps
xor
jecxz
jnp
jp
jg
shl
push
movs
adc
mov
inc
stos
fstp
fistp
mov
fist
imul
jle
(bad)
loopne
(bad)
fst
cmp
xor
out
cwde
stc
fs
fwait
push
stc
lods
lock
xchg
iret
pop
xchg
mov
push
int3
dec
out
int3
not
jno
mov
scas
cmp
adc
xchg
push
les
mov
dec
sub
ins
jno
loop
mov
pop
and
pop
mov
cmc
sub
int3
xchg
pop
dec
stos
repz
xor
out
pop
fistp
jbe
jne
arpl
mov
lods
xchg
sbb
lods
jl
jge
mov
addr16
add
push
xchg
cmp
stc
and
mov
ds
scas
add
lods
pop
shl
mov
push
popa
std
lock
mov
and
cmp
mov
out
imul
sbb
daa
js
xor
xor
dec
dec
idiv
je
in
gs
loopne
jbe
cmp
in
popf
or
mov
outs
je
shl
mov
dec
xchg
or
sahf
fisttp
jl
sbb
jl
sub
out
(bad)
rcr
inc
inc
movs
push
mov
or
inc
cmp
(bad)
ja
shr
outs
inc
in
es
cmp
mov
into
xor
pop
jecxz
and
push
cmp
pop
(bad)
repnz
movs
ret
pop
mov
nop
into
fiadd
cs
iret
lss
add
xchg
mov
cli
adc
xchg
dec
xchg
das
cmp
stos
push
push
imul
push
movs
pop
cmp
adc
xchg
jnp
outs
stos
aad
sbb
dec
enter
push
push
mov
fidiv
adc
in
sti
loop
jnp
int3
loop
repnz
pop
adc
mov
dec
jmp
mov
nop
lds
ins
push
pop
nop
into
rcl
loope
sbb
(bad)
mov
xchg
aas
inc
arpl
inc
imul
sub
mov
sahf
and
mov
retf
jae
mov
in
mov
mov
dec
sahf
lahf
(bad)
fwait
stc
loopne
int3
jecxz
mov
pop
cwde
and
jp
imul
jmp
pop
cdq
inc
scas
pop
push
aad
xor
mov
xchg
mov
loop
push
out
sub
imul
inc
bound
scas
in
aaa
ret
inc
jmp
bound
sbb
hlt
ret
jns
iret
sbb
popf
sar
sub
repz
sbb
fsubr
jae
lds
fadd
cwde
mov
imul
shr
repnz
jmp
push
jle
cmp
dec
or
(bad)
repz
pop
mov
fsub
pop
shr
xchg
aas
mov
imul
in
mov
sar
mov
movs
or
xor
xor
cmp
sbb
mov
adc
push
mov
xchg
adc
mov
mov
stos
retf
scas
cmp
sbb
in
loope
jge
xor
hlt
push
fadd
jp
mov
(bad)
fsubrp
fistp
mov
loop
sub
gs
push
lods
cld
aaa
adc
enter
pop
sbb
cmp
retf
pop
push
push
jle
or
imul
mov
mov
add
mov
pop
data16
clc
lods
lock
inc
(bad)
call
movs
jae
add
out
(bad)
xor
loopne
ror
mov
mov
adc
movs
pop
call
xchg
out
sub
adc
lds
in
cmp
or
push
and
or
push
fnstsw
and
push
in
cs
in
retf
sbb
jbe
or
xchg
pop
mov
retf
jmp
jecxz
xchg
sbb
out
xor
test
dec
daa
dec
(bad)
mov
pop
in
fldenv
fidiv
outs
mov
dec
cmp
xor
push
sti
jbe
pop
sub
mov
add
inc
adc
mov
mov
xor
or
cmc
mov
sub
scas
fild
(bad)
fmulp
mov
jbe
inc
stos
aad
sub
cwde
jne
lods
jl
sbb
jae
xchg
or
fbld
out
out
movs
in
inc
push
(bad)
mov
pop
aam
scas
or
push
clc
push
and
loope
adc
leave
mov
lea
lods
les
push
adc
and
mov
push
mov
retf
mov
iret
arpl
cdq
push
(bad)
sar
xor
xchg
xchg
inc
movs
pop
test
jbe
mov
and
jg
ret
jno
push
(bad)
in
jne
mov
jne
ficomp
pop
js
push
xchg
xor
jmp
and
jp
and
retf
xchg
adc
sub
fs
mov
pop
xor
mov
pop
fild
mov
dec
mov
jbe
loope
xchg
ins
cdq
adc
lods
xor
cdq
xchg
movs
loop
dec
adc
out
sub
and
cmps
cmc
mov
clc
stos
xchg
ds
mul
add
pop
inc
add
lea
stos
ins
mov
fimul
enter
test
iret
jnp
xlat
mov
jae
push
std
and
jo
mov
mov
add
(bad)
jl
imul
mov
mov
pop
dec
jl
jb
jge
add
call
shl
mov
add
cmp
sti
mov
push
dec
pop
(bad)
mov
lods
jge
inc
movs
sub
pop
data16
dec
cmp
xchg
inc
pop
icebp
xchg
xor
into
fxch
fdiv
fadd
std
sub
and
in
cld
ds
js
mov
dec
not
ret
popa
sahf
scas
push
(bad)
in
movs
(bad)
add
push
cli
xlat
push
scas
fwait
sub
bnd
rol
cmps
cs
pop
adc
pop
clc
adc
lahf
mov
mov
int3
xchg
dec
cmc
shl
lods
pop
shl
(bad)
out
ret
mov
aas
lds
popa
cli
das
test
push
and
hlt
push
iret
add
aam
(bad)
cli
aaa
sbb
cmp
sbb
mov
push
loopne
cli
xor
xor
push
les
pop
das
in
dec
imul
mov
jge
pop
arpl
and
out
xor
jbe
and
mov
dec
mov
mov
dec
dec
and
test
call
sub
dec
leave
jns
cmps
fwait
xor
das
mov
xchg
in
jge
jp
sub
daa
ror
enter
pop
inc
push
push
push
cmc
jle
popf
inc
xchg
outs
mov
leave
xlat
xor
push
lea
adc
sar
call
js
cwde
jae
dec
inc
mov
mov
icebp
adc
cmp
pop
imul
add
jle
xchg
cmc
jne
test
sub
in
add
mov
imul
adc
push
lods
sub
call
ja
mov
lock
retf
xchg
std
jae
or
sbb
loop
pop
sub
sub
movs
aad
push
push
mov
xor
(bad)
cld
adc
aaa
or
sti
aam
lods
pop
lods
and
scas
sub
cmc
xor
xor
xchg
les
and
inc
xor
push
jp
cld
sbb
dec
xchg
les
push
or
mov
fs
jle
leave
dec
in
sub
repz
enter
inc
jmp
repz
dec
jno
pop
mov
sbb
cmp
add
imul
jno
cmps
adc
lea
or
aad
or
add
add
sahf
adc
sbb
sbb
jmp
sub
lds
dec
xchg
cmp
and
jle
sub
push
loope
push
int
int3
mov
jne
lds
sti
leave
add
aas
in
in
call
add
fwait
cmp
ja
jns
push
adc
in
les
es
dec
and
cwde
ins
jp
mov
jne
leave
sub
cmp
dec
stos
push
out
in
fwait
dec
mov
retf
push
pop
mov
sbb
fidivr
xchg
mov
cmc
test
loop
or
lock
and
xor
or
daa
cli
jg
push
arpl
adc
jae
inc
pop
test
lods
sbb
mov
sar
popa
cmps
dec
jge
jg
sar
jmp
repnz
add
ds
jge
or
rol
in
sbb
add
addr16
es
es
jbe
fidivr
cmp
add
push
jns
cmp
add
das
xchg
mov
hlt
mov
cmp
test
jns
jnp
test
sar
push
(bad)
lock
sub
popa
add
sti
and
test
sbb
or
icebp
xor
aas
jmp
jp
aas
sub
mov
dec
or
jns
add
add
or
xlat
pop
cld
stc
sbb
or
jb
mov
mov
xor
or
cmp
sbb
push
or
add
or
add
aam
shl
addps
or
push
sti
add
ret
(bad)
out
inc
cmp
jnp
fiadd
syscall
jns
mov
pop
call
mov
cmp
or
add
sub
call
jl
loop
rol
adc
mov
inc
repnz
adc
clc
popa
lods
inc
pop
clc
jo
pop
push
clc
ds
(bad)
pop
in
inc
rol
xchg
jns
movs
pop
aam
inc
add
js
jnp
imul
sti
cmp
xor
rol
jo
mov
sub
sub
xor
mov
movs
cmp
push
rol
popa
in
je
push
add
dec
sbb
retf
add
les
ja
int
mov
push
in
pusha
arpl
add
sar
pop
ds
inc
dec
add
pop
add
(bad)
int3
pop
mov
and
add
sbb
jmp
loop
jbe
rcl
jmp
stos
cmp
push
xor
mov
jne
or
out
outs
fild
jo
stc
jecxz
std
stos
inc
add
pop
cli
dec
sbb
mov
push
in
in
jbe
loop
call
mov
pop
add
adc
rcr
fs
gs
or
lods
add
mov
cwde
xchg
dec
dec
lods
shr
test
add
push
ss
mov
push
xor
test
mov
sub
sbb
cwde
sbb
push
push
sbb
pop
out
mov
pop
cdq
mov
sbb
mov
fs
jmp
xchg
push
ret
in
popa
ja
loop
dec
(bad)
movs
add
nop
test
sar
pop
fistp
fdivr
add
(bad)
call
ret
into
int
ret
mov
mov
or
das
daa
sub
pop
xchg
call
cmp
stos
addr16
push
push
jmp
fnstcw
pop
pop
fwait
xor
jnp
ss
xor
mov
xor
out
ins
bound
cli
rol
jmp
xchg
pop
sbb
pop
cmp
jae
push
vpsubq
fdivr
add
cdq
add
ins
dec
or
out
adc
mov
es
sbb
mov
push
push
push
sbb
hlt
and
popf
or
sbb
loopne
ins
mov
add
xor
imul
dec
mov
xor
push
mov
mov
neg
pop
mov
out
or
inc
outs
out
imul
(bad)
jg
out
mov
push
add
or
test
mov
aam
leave
ror
dec
out
push
pop
cld
adc
push
and
mov
or
outs
imul
push
pusha
dec
rol
rol
dec
rcl
ret
dec
int
adc
xor
(bad)
idiv
dec
aas
shl
xchg
push
jg
xchg
aaa
mov
pop
fnstcw
pop
cmp
fcmovu
dec
icebp
pop
mov
sahf
retf
fidivr
idiv
adc
cli
jmp
cld
stc
push
xor
cmp
cmp
sub
pusha
imul
or
or
in
popa
ja
jge
stos
adc
xor
add
lods
inc
xor
mov
add
std
rol
or
test
pusha
cld
jo
jecxz
push
into
loopne
cmp
out
jg
add
xor
popa
add
pop
(bad)
cli
(bad)
sub
jg
pushf
test
and
imul
mov
icebp
test
jno
jae
add
cmp
cmp
sbb
adc
dec
or
sub
sbb
xchg
or
cmp
inc
push
adc
and
and
pop
adc
cdq
or
mov
outs
add
push
add
rol
and
ret
inc
xchg
mov
mov
jge
fs
nop
sbb
or
mov
lea
das
jne
inc
and
dec
inc
repz
mov
add
mov
sbb
call
cmp
js
add
icebp
xor
adc
pop
or
adc
jmp
dec
add
and
push
cwde
inc
sbb
push
jbe
mov
jg
push
lock
pop
call
outs
out
jns
loopne
xchg
cmp
mov
dec
mov
xchg
(bad)
cmc
mov
inc
cmp
push
mov
add
bound
(bad)
cmc
mov
dec
or
push
(bad)
lahf
in
xchg
pop
out
outs
and
loope
dec
mov
jmp
movs
mov
test
dec
xchg
inc
jmp
(bad)
(bad)
mov
neg
idiv
adc
int
std
sbb
mul
lock
cld
sar
and
cli
pop
jb
jmp
addr16
pop
jb
jmp
push
cld
pop
jb
jmp
mov
pop
jb
jmp
(bad)
std
pop
repnz
scas
mov
(bad)
(bad)
mov
dec
jg
push
push
cmp
idiv
outs
mov
stos
cli
ja
xor
push
mov
fiadd
pop
iret
fiadd
jmp
(bad)
call
inc
and
sar
push
sub
je
and
pop
sahf
xchg
sub
sub
outs
std
arpl
mov
push
fdivrp
hlt
inc
xchg
add
push
sub
pop
push
add
inc
rol
test
mul
scas
jge
inc
adc
jmp
jmp
push
(bad)
jno
ror
add
mov
xchg
xchg
sti
pop
stos
mov
inc
mov
inc
lods
int
mov
stc
add
add
pop
xor
bound
jb
xchg
scas
xchg
int3
pop
sub
imul
pop
inc
sar
or
imul
pop
dec
sbb
adc
rol
cli
jo
gs
jae
hlt
arpl
mov
add
repnz
cmp
loopne
add
cmp
lahf
(bad)
push
ds
dec
jmp
push
mov
fcmovnu
pop
std
sti
add
mov
jns
in
in
jge
mov
xlat
fchs
rol
stc
mov
mov
and
pop
rcr
jbe
pmaxub
hlt
repz
ret
mov
(bad)
sbb
pop
jle
cld
pop
(bad)
iret
icebp
xor
shr
pop
daa
(bad)
call
jg
add
xchg
(bad)
call
fst
call
push
pop
inc
pop
inc
stc
(bad)
push
pop
cmps
mov
nop
addr16
inc
in
movs
xor
mov
jns
imul
and
stos
jmp
lods
out
jl
push
xchg
ret
jle
outs
mov
ins
cs
add
sysret
cmps
call
mov
jae
aam
xor
adc
adc
adc
mov
xchg
call
add
adc
ss
iret
pop
mov
dec
push
push
fstp
cmc
ror
jge
in
mov
dec
ds
ds
out
mov
(bad)
out
mov
and
sbb
jmp
adc
pusha
mov
add
rcl
dec
add
test
push
add
dec
in
shl
hlt
not
xor
sub
sbb
adc
mov
(bad)
sar
jnp
mov
repnz
(bad)
icebp
inc
add
ins
add
(bad)
sbb
push
or
lods
add
mov
xchg
inc
je
add
push
cld
xchg
stc
mul
push
dec
lods
xor
dec
(bad)
sub
xchg
retf
or
lds
jne
test
aas
jle
push
cmp
ret
xchg
mov
cmp
dec
fs
xchg
bound
fcomp
fcom
sahf
lock
lods
rol
add
and
jecxz
bound
lock
xor
and
test
dec
push
pop
xchg
pop
inc
repnz
adc
in
int3
jle
daa
jmp
imul
int3
jb
sbb
out
hlt
dec
hlt
xchg
mov
daa
std
sbb
push
mov
outs
adc
jg
outs
rcr
push
jecxz
addr16
nop
dec
js
pop
loopne
jns
psubq
mov
jno
aad
jg
inc
test
data16
retf
std
or
ins
jnp
mov
movs
jbe
cli
or
or
push
xchg
outs
std
jns
into
out
pop
into
jnp
mov
dec
ja
scas
fidiv
into
ret
sub
mov
mov
adc
and
aaa
and
xor
ret
inc
push
jp
fadd
cmp
scas
adc
jmp
leave
jg
mov
xor
retf
inc
sti
adc
lods
mov
lock
outs
push
not
inc
ret
icebp
and
out
lea
add
pop
pop
outs
mov
movs
and
ins
lds
xor
test
(bad)
aad
fs
adc
sbb
inc
or
ficomp
xchg
rcr
lds
mov
je
addr16
mov
dec
loop
mov
cmps
clc
mov
and
mov
xor
jge
jl
call
push
or
sub
fidivr
(bad)
cwde
push
jmp
iret
stos
jae
movs
xor
jecxz
rcr
dec
addr16
xchg
ret
push
retf
sub
cmp
shl
push
sbb
(bad)
mov
mov
pop
cld
dec
xor
push
inc
sub
imul
adc
cdq
loopne
in
xor
cmp
xchg
imul
xor
and
push
dec
mov
cmp
test
lahf
inc
bound
inc
inc
retf
or
sbb
test
bound
sbb
ins
dec
xchg
cld
and
pop
aas
jg
dec
push
xor
ror
cmp
mov
shl
pop
mov
sub
jns
mov
lds
xor
js
les
(bad)
xor
cdq
dec
and
xor
out
cmps
jmp
sahf
pop
pop
xor
cmps
or
jo
in
sbb
jl
xor
loop
mov
in
pop
pop
jge
ja
repz
mov
cmc
pop
xchg
(bad)
mov
add
and
pop
repnz
jle
fsubr
xchg
add
sub
adc
call
loopne
push
pop
sbb
ret
pop
loop
sub
adc
retf
pop
shl
arpl
mov
fstp
xchg
inc
lahf
out
xlat
aad
xchg
call
mov
and
es
out
stos
jmp
mov
inc
mov
lods
mov
shr
aad
aaa
fwait
xor
and
and
mov
sbb
sbb
sbb
pop
jno
pop
xor
push
inc
iret
xchg
repz
shr
add
mov
mov
sti
add
jb
push
mov
mov
inc
out
loop
hlt
dec
scas
leave
push
push
lock
sahf
sub
pop
mov
movs
ds
cmp
jae
pop
push
inc
push
dec
rcl
mov
adc
adc
imul
int3
test
int3
dec
js
(bad)
jp
sub
clc
jmp
lea
sub
dec
add
(bad)
jg
mov
fist
inc
jo
xchg
ss
pusha
cmp
xlat
scas
mov
mov
or
dec
mov
fstp
retf
fld1
arpl
dec
dec
bound
fdivp
sub
inc
out
xlat
and
mov
stos
mov
xchg
(bad)
pop
sahf
and
out
mov
fucomi
call
dec
jmp
push
pop
pop
add
pop
jle
dec
arpl
push
or
pop
adc
pop
jb
jo
jae
adc
jg
sti
fcos
xor
mov
fsub
jp
ja
sub
(bad)
xor
jb
test
call
cmps
cld
into
jge
mov
and
sub
push
mov
das
adc
or
cld
fs
ds
adc
or
neg
jmp
xor
fimul
aam
fisub
in
xlat
sub
fldenv
(bad)
pop
mov
in
outs
push
out
dec
enter
push
jp
mov
adc
into
ror
ret
repnz
lds
pop
and
dec
and
enter
shl
int3
jb
lahf
les
(bad)
jle
xor
push
retf
cli
lods
and
mov
gs
adc
sti
arpl
pushf
pushf
stos
test
(bad)
repnz
fmul
out
imul
jle
adc
sar
jle
adc
dec
pop
sub
and
out
(bad)
pusha
mov
xor
aas
xor
cld
in
cmps
mov
das
gs
shl
bound
mov
rcr
lock
push
mov
and
jmp
xchg
gs
les
arpl
inc
dec
mov
jg
add
xor
lea
push
xor
xor
sbb
cmps
add
dec
cmp
mov
out
aad
cli
pop
add
loop
in
lea
mov
jns
les
cmp
sbb
(bad)
xchg
cli
cmc
retf
sbb
movs
add
std
pop
ins
imul
dec
xchg
in
daa
mov
mov
ins
movs
push
xchg
outs
jnp
xchg
cmp
cmps
stos
jle
ins
das
je
mov
cwde
jg
xor
and
mov
sbb
das
repnz
movs
adc
jecxz
cld
and
ret
hlt
sub
inc
(bad)
(bad)
dec
hlt
mov
or
pop
ret
adc
inc
repnz
mov
jecxz
sahf
sbb
(bad)
scas
jecxz
or
in
js
inc
scas
xor
pusha
sbb
dec
xchg
dec
jl
ss
dec
dec
mov
pusha
adc
fcom
frstor
push
cmp
sub
ds
adc
test
stc
cdq
popa
in
cld
popa
in
xchg
or
and
jmp
xor
lahf
xor
sub
sub
daa
add
add
cmp
arpl
xchg
xchg
(bad)
out
sub
ficom
cli
ja
push
add
adc
sub
jmp
repz
arpl
and
sti
push
jnp
adc
xor
cld
push
sti
or
cmp
mov
dec
xchg
movs
jnp
in
pop
cld
cdq
test
test
fwait
repz
pop
inc
(bad)
xor
push
add
cmp
dec
and
or
jbe
test
iret
int3
jbe
pop
cs
dec
ss
push
jae
jo
arpl
lahf
jl
sbb
je
cdq
jo
cmp
or
pushf
fnstcw
xor
pop
addr16
inc
test
test
mov
arpl
loope
xlat
pop
xchg
mov
add
push
dec
mov
sbb
imul
mov
ret
das
sbb
dec
mov
int
mov
xlat
cdq
pusha
fadd
lock
das
sub
test
adc
int3
cmps
mov
test
ss
push
mov
arpl
jo
cli
jp
dec
inc
mov
in
ins
cwde
shl
inc
lea
bound
sub
aad
lahf
dec
adc
icebp
pop
dec
lods
jl
ficom
inc
mov
inc
lods
ror
call
daa
mov
enter
stc
ret
int
fisub
addr16
add
jge
adc
in
ds
push
test
(bad)
fidivr
mul
aas
adc
sub
pop
pusha
pop
mov
mov
fld
pushf
ja
and
icebp
mov
ins
das
xchg
or
scas
add
adc
jl
push
mov
cmc
retf
ja
das
xchg
scas
inc
cmps
jp
fimul
pop
xchg
push
push
and
cmp
daa
scas
dec
dec
ins
int3
mov
movs
xchg
xlat
cs
shr
mov
gs
test
mov
(bad)
pop
jecxz
(bad)
cmp
jns
fadd
xor
popf
aaa
neg
xchg
inc
jmp
or
scas
pop
data16
sub
jg
sub
cmp
adc
fbstp
addr16
mov
(bad)
fsubr
pop
xchg
push
inc
push
sbb
dec
(bad)
loopne
and
jecxz
inc
in
sbb
dec
and
jl
das
jae
ja
adc
repnz
test
xchg
jbe
sub
jge
je
pop
mov
xchg
and
ror
daa
call
retf
inc
(bad)
out
push
sub
popa
lods
int
xor
cld
(bad)
ins
pop
test
fnsave
xchg
jae
sti
cmps
es
not
out
and
cmp
jne
pop
movs
mov
mov
es
xchg
loope
inc
shr
je
idiv
mov
data16
hlt
xchg
pop
mov
in
jmp
dec
aam
jno
pop
ja
mov
sub
pop
dec
and
pop
sub
or
jb
adc
push
cmp
xchg
push
std
(bad)
jns
mov
stos
imul
test
sar
jl
push
sub
jmp
fwait
cmps
repz
jge
pop
das
rcl
push
xor
test
mov
adc
inc
pop
mov
test
sbb
pop
adc
cs
xor
scas
fst
loopne
and
call
cdq
aaa
mov
(bad)
shr
xor
retf
scas
cmps
pop
mov
(bad)
(bad)
out
mov
sub
mov
std
cmc
pop
jecxz
stos
push
or
push
ds
pop
mov
sub
int3
xlat
cmp
jne
aam
push
(bad)
sbb
sub
outs
les
inc
js
outs
mov
aaa
inc
xor
ret
test
(bad)
jo
ret
not
lods
push
and
popa
jp
(bad)
push
mov
xlat
jo
xor
adc
sub
jmp
adc
sub
shl
jle
nop
sbb
retf
dec
add
mov
xchg
fistp
pop
cmp
sar
cmp
addr16
sub
pop
out
mov
push
pop
jne
jb
fsubr
cmp
scas
aas
pop
lea
(bad)
sar
mov
xchg
test
cmp
xchg
das
push
gs
ret
pop
xor
or
mov
aad
daa
jmp
imul
mov
frstor
cli
mov
dec
xchg
fcomi
mov
jo
lds
jecxz
test
fnsave
imul
jne
gs
or
cmp
sbb
cwde
cmp
stos
and
das
cmp
fcom
aas
push
cmp
or
dec
in
imul
aam
adc
xchg
sbb
and
scas
mov
lods
into
mov
dec
sbb
das
mov
(bad)
sbb
out
lods
inc
push
push
mov
imul
sbb
mov
in
push
xlat
mov
jle
lods
nop
dec
arpl
pop
enter
push
pop
mov
or
inc
fwait
mov
icebp
jle
test
pop
mov
dec
stc
cmp
popf
mov
mov
pop
mov
nop
push
pop
sti
cmp
cmp
and
fisttp
das
mov
pop
xor
xchg
inc
push
xchg
pusha
mov
mov
mov
aam
dec
aam
xchg
mov
loope
fs
ficomp
inc
stc
mov
iret
jg
add
lods
retf
sti
sti
pop
mov
cmp
dec
shl
and
jmp
or
dec
sahf
push
push
inc
cmp
mov
in
gs
jns
je
mov
(bad)
cli
push
push
push
fidiv
out
retf
rcr
push
imul
push
in
rol
add
jbe
mov
mov
ds
mov
mov
mov
je
and
dec
(bad)
xchg
mov
pop
rcl
mov
lock
cld
test
jg
ds
pop
aaa
mov
jge
pop
jmp
mov
sahf
sahf
xchg
ret
cmc
mov
xor
scas
xor
adc
and
rol
dec
mov
sbb
xor
cmps
mov
movs
pop
xlat
cmp
sbb
movs
sub
lods
pop
mov
popa
dec
lods
imul
(bad)
lods
outs
xor
or
in
jge
rcl
cld
scas
(bad)
sti
push
mov
int
fucomi
outs
je
call
in
and
xor
lock
jl
add
pop
imul
ret
shr
aad
xchg
neg
jmp
sub
shl
ret
dec
jne
adc
arpl
sub
inc
dec
xor
dec
sub
dec
test
ret
cmp
xchg
cmps
mov
add
sbb
inc
and
mov
mov
mov
mov
push
mov
inc
stos
xchg
or
aam
pop
cmp
jnp
push
push
xor
(bad)
dec
inc
mov
icebp
dec
add
push
xor
push
add
jge
jmp
sub
std
cmc
xchg
loop
(bad)
mov
jmp
xor
push
movs
mov
popf
xchg
mov
pop
test
or
pop
cmp
iret
mov
push
test
outs
jp
mov
jno
cmp
cmc
cmps
fst
shr
sbb
push
adc
push
dec
out
mov
mov
lds
mov
and
sbb
and
sub
lods
pusha
jmp
(bad)
scas
les
or
(bad)
xchg
push
adc
int
sub
jnp
lock
jno
jle
outs
mov
test
xchg
jb
push
jle
lahf
mov
push
ficom
fmul
js
push
sub
add
push
(bad)
inc
xor
jmp
push
jge
add
jbe
mov
dec
push
pop
push
push
xchg
jno
xchg
sbb
imul
sbb
in
in
cmp
(bad)
(bad)
ja
cwde
xor
push
inc
inc
mov
jecxz
out
aaa
out
mov
sbb
inc
xchg
mov
dec
in
repnz
add
inc
enter
mov
into
ret
sahf
es
push
sub
hlt
mov
cli
test
fisubr
addr16
sbb
dec
pop
mov
push
outs
test
cdq
jne
je
mov
mov
pop
xor
cwde
push
popf
jp
push
dec
scas
repnz
cs
and
mov
inc
je
cmp
aaa
mov
mov
bound
or
sub
je
xchg
add
mov
and
cmp
aaa
stc
les
and
add
and
ret
scas
call
int
push
mov
or
push
pop
ss
xor
or
mov
push
jbe
addr16
outs
jno
xchg
push
jmp
out
cmp
mov
cdq
jg
in
loop
sti
lods
and
or
add
pop
dec
or
mov
fs
mov
cmp
lods
mul
popa
mov
sub
cld
sub
cdq
mov
and
into
rcl
imul
adc
and
stos
sbb
xor
leave
dec
push
pushf
dec
es
xor
pop
std
movs
or
and
cs
std
xchg
inc
sub
sub
aam
sub
xchg
jne
jmp
dec
pop
in
or
popa
bnd
sub
xor
mov
and
mov
stc
sub
or
push
jecxz
sub
jl
inc
cmps
mov
mov
pop
pop
(bad)
dec
nop
sbb
in
pop
es
and
hlt
dec
cmp
push
xchg
and
mov
dec
and
push
add
xchg
add
fstp
sub
ja
xor
mov
fldenv
stos
mov
push
imul
bound
push
frndint
mov
fild
out
mov
into
xor
adc
sbb
lahf
cmp
adc
cmp
stos
xchg
xlat
in
mov
cmp
jmp
sub
cmp
jnp
jne
add
outs
or
inc
int
mov
std
cdq
pop
dec
adc
adc
outs
data16
pop
push
sbb
(bad)
sbb
dec
mov
mov
adc
jb
mov
fist
xchg
int3
pop
mov
(bad)
sar
add
adc
add
and
mul
ins
stc
imul
mov
adc
push
(bad)
mov
imul
push
test
jge
addr16
arpl
lock
stc
jnp
daa
dec
xchg
cmp
mov
pop
or
mov
out
add
mov
xchg
mov
movs
and
icebp
jp
mov
mov
xor
fwait
rcr
push
cmps
lock
hlt
dec
pop
dec
inc
and
cli
mov
mov
movs
sub
ss
fs
popa
in
ja
push
jg
xor
mov
xchg
call
scas
sub
jmp
cli
jg
inc
push
dec
or
rol
popf
pushf
(bad)
sbb
adc
mov
sub
dec
div
daa
pop
jmp
in
xor
stc
jmp
pop
jmp
sbb
das
cdq
add
jnp
fst
xchg
cmps
(bad)
sbb
fisubr
iret
mov
adc
repz
pop
idiv
addr16
add
jns
mov
outs
xor
movs
popf
jecxz
push
cmps
jnp
ins
sahf
inc
lahf
xor
xchg
pop
dec
test
movs
cmp
int
sub
add
sbb
imul
ins
mov
bound
(bad)
popa
bound
(bad)
scas
(bad)
pop
dec
fwait
add
out
ins
out
es
retf
cdq
jnp
lds
xor
pop
and
push
and
xchg
test
cdq
push
add
or
pop
rol
push
sub
in
out
xor
add
mov
add
retf
sbb
jnp
outs
push
add
imul
js
adc
movs
adc
dec
fcomip
sub
(bad)
stc
and
fidivr
mov
mov
repnz
inc
(bad)
int3
mov
loope
mov
mov
in
dec
js
(bad)
out
sbb
pop
push
push
rcr
jle
rcl
inc
(bad)
cld
retf
mov
add
push
int
in
push
push
inc
lock
push
cmps
retf
loope
mov
adc
popf
(bad)
bnd
lods
imul
or
sar
jnp
cbw
loop
fstp
out
popf
out
push
iret
loope
mov
jge
jae
imul
adc
data16
movs
sub
test
stc
call
rcr
out
in
mov
hlt
adc
push
stos
mov
loope
shl
dec
add
mov
jmp
push
push
jmp
inc
aas
rcr
jne
pop
in
sti
jmp
lock
jb
cdq
push
scas
jmp
call
add
jle
cmp
adc
jmp
test
ss
icebp
test
(bad)
daa
mov
cmp
aas
aad
adc
or
loope
xchg
mov
xor
test
inc
push
les
lea
cdq
sti
ror
add
(bad)
imul
inc
lock
sbb
jg
stc
outs
stc
outs
sar
dec
das
mov
popf
cld
push
xor
mov
mov
jmp
neg
cmps
pop
(bad)
jbe
sub
sub
xchg
pop
jbe
retf
xor
cli
jge
mov
fbstp
push
shl
xor
daa
pop
push
shl
pop
inc
aad
add
jmp
inc
cmp
stc
jmp
dec
pushf
push
pusha
test
test
and
rcl
adc
mov
call
test
pop
pop
push
add
and
arpl
dec
repz
fnstcw
scas
jg
pop
jne
sbb
retf
mov
xchg
jge
fisttp
ror
jne
push
sar
mov
adc
sub
pop
inc
push
cdq
pop
test
in
xor
jae
repz
popf
dec
outs
mov
pop
add
retf
jp
gs
fstp
aad
sub
jg
(bad)
push
push
cld
push
and
shl
or
inc
test
aad
dec
fild
test
xor
xor
jle
jmp
popf
or
sbb
push
jp
popa
fnstsw
std
cmps
push
add
xchg
push
leave
dec
aaa
je
aas
not
sbb
xchg
call
jo
xlat
pop
adc
xchg
iret
mov
add
dec
retf
aas
jge
sbb
test
jb
(bad)
call
adc
imul
or
(bad)
imul
mov
mov
pushf
out
add
pop
(bad)
fwait
(bad)
adc
gs
push
jae
dec
cmps
retf
mov
lds
push
push
loope
aad
aaa
add
dec
or
test
(bad)
or
test
push
cli
xor
sahf
and
stos
ret
or
aad
and
mov
fnstsw
clc
pop
int3
mov
dec
inc
mov
inc
mov
call
inc
inc
movs
std
xor
out
jg
and
inc
imul
int
cmp
cwde
pcmpeqd
mov
cmp
retf
mov
repnz
jl
jo
or
gs
std
sub
add
push
push
fcomp
pushf
jbe
test
push
stc
push
xor
aas
cld
xchg
pop
in
xchg
mov
adc
xchg
jmp
cmp
jmp
and
push
bound
jbe
and
test
(bad)
cdq
div
int
dec
fwait
popf
cmp
ins
add
xchg
jno
inc
mov
test
retf
mov
add
int3
fptan
in
xchg
lock
adc
in
fild
cs
repz
xor
mov
sti
fstp
pop
jge
add
imul
stc
jmp
and
mov
inc
add
aaa
xchg
cmc
addr16
push
pusha
cdq
pop
pop
push
jo
xchg
mov
clc
(bad)
pop
mov
pop
fwait
jne
fbld
cmc
in
push
pop
pop
cmp
nop
push
xor
jmp
cmp
mov
or
push
or
out
mov
jb
dec
pop
mov
hlt
sub
xchg
stc
jne
dec
popf
xor
xor
add
ss
into
sub
cmp
fdivr
div
test
in
fldcw
xor
xchg
and
add
into
sub
adc
(bad)
jle
test
mov
sub
sub
call
lea
fnstsw
call
mov
fwait
sbb
push
push
scas
fistp
(bad)
rol
cli
ror
sub
sbb
dec
das
rcl
scas
fld
test
pop
mov
fdiv
or
mov
xor
fsubrp
add
pop
pusha
push
jle
movs
xchg
adc
jl
es
mov
test
push
dec
mov
xchg
add
push
out
pop
call
cmp
jb
push
and
xlat
es
pushf
imul
cmp
adc
adc
xchg
(bad)
arpl
cmc
sub
mov
hlt
imul
xchg
aas
cmp
scas
cld
test
pop
pop
inc
imul
adc
cmps
xor
or
sbb
in
cdq
mov
or
adc
jmp
fcomp
nop
sub
retf
cs
pop
xchg
push
dec
ds
addr16
dec
mov
dec
push
ins
jno
fistp
test
cmps
cwde
or
rcr
push
into
cdq
fist
jmp
jnp
shl
jmp
add
rcr
mov
imul
sub
cwde
jne
pop
popf
mov
clc
loop
div
mov
aaa
mov
loopne
fild
pop
not
mov
xchg
jne
sub
adc
adc
mov
outs
pop
pop
mov
sub
shl
pusha
retf
out
cmp
inc
fisubr
lds
outs
mov
ss
cmovo
inc
aad
mov
sbb
idiv
scas
push
in
and
repnz
out
das
and
dec
int3
adc
not
retf
outs
inc
(bad)
out
fwait
retf
mov
mov
ds
sbb
and
xor
and
fdivr
fnstsw
jmp
adc
mov
ret
gs
test
inc
sub
add
cmp
stc
das
cmp
sub
jmp
xchg
dec
sbb
xor
pop
adc
xchg
jo
stos
(bad)
xlat
dec
add
or
test
push
fnstenv
addr16
sti
stos
mov
inc
mov
repnz
das
fcomp
inc
stos
xor
stos
pushf
lods
dec
xor
push
cwde
push
xchg
and
ins
mov
mov
imul
or
push
mov
add
cld
callw
xor
rcr
scas
lods
popf
cmp
int3
leave
mov
fwait
jle
mov
mov
mov
add
icebp
lds
cs
cli
shr
out
jge
sub
(bad)
(bad)
cmp
add
mov
inc
xor
cmp
imul
add
cmp
outs
jle
pop
cmps
jecxz
outs
pop
sub
dec
dec
pop
outs
push
dec
stos
jg
(bad)
jmp
daa
das
scas
mov
and
popf
cwde
retf
shl
fs
pop
movs
inc
or
add
(bad)
adc
cld
add
jecxz
(bad)
aad
fwait
into
es
icebp
dec
xor
int3
sub
aas
mov
jno
push
jbe
sub
adc
test
bound
cmp
push
gs
inc
add
icebp
mov
cmp
xor
stos
cmp
or
outs
pop
hlt
cmp
jmp
add
jnp
add
popf
cli
aas
sub
adc
mov
dec
(bad)
aaa
pop
aaa
les
mov
fnstenv
imul
nop
pop
scas
sub
pop
dec
sar
cmp
(bad)
lock
loope
and
inc
cmp
mov
jb
pop
and
pop
push
mov
pop
push
outs
dec
or
mov
xor
imul
adc
mov
xor
jmp
aas
xchg
pop
stc
mov
pop
mov
or
dec
fnstcw
inc
inc
jno
stos
shr
push
mov
dec
xchg
push
mov
dec
stos
jae
pop
jle
sbb
pop
xor
aam
in
bound
adc
cli
rcr
cmps
and
in
gs
pop
ds
mov
cmc
pop
add
mov
and
ds
jmp
jae
pop
dec
mov
test
jmp
jb
movs
jo
jmp
daa
xor
push
ret
inc
es
cli
into
aas
frstor
jl
inc
repnz
add
mov
add
pop
and
in
pop
test
test
mov
fdiv
(bad)
retf
push
dec
in
xchg
pop
out
nop
nop
or
data16
add
and
dec
inc
inc
push
ficomp
sbb
sub
out
mov
shl
retf
fimul
cmp
sbb
mov
inc
mov
sti
mov
call
inc
mov
cmp
mov
cdq
imul
test
cmp
jns
pop
inc
scas
jp
into
sbb
hlt
xchg
gs
mov
pop
les
xor
imul
sbb
mov
xchg
xchg
push
and
cmp
dec
mov
dec
xor
in
xlat
jnp
or
pop
sti
adc
cmp
ins
jmp
jae
or
jmp
mov
lock
test
data16
enter
mov
ror
sti
adc
inc
add
dec
aas
hlt
stc
fstp
lock
push
or
jmp
sbb
out
ins
inc
mov
rcr
sub
lea
(bad)
int
ficomp
cld
jae
pop
scas
popa
jb
mov
js
(bad)
mov
jmp
add
push
inc
ss
fwait
scas
daa
aam
mov
push
inc
xor
jb
fiadd
push
xchg
xor
test
jg
jmp
or
pop
out
sbb
aam
ja
repnz
push
cmp
inc
jp
mul
ds
cmc
ret
push
bnd
out
mov
cmp
or
pop
push
jne
rdpmc
(bad)
jg
xor
dec
stc
in
aas
call
test
pop
rcr
sbb
cld
lds
and
pop
mov
sbb
pop
jns
mov
(bad)
aas
shl
das
and
inc
jge
sbb
loop
push
and
sub
mov
daa
pop
hlt
push
dec
out
ins
mov
mov
test
ja
shl
lods
pop
xchg
in
xchg
cld
ret
scas
fnstsw
gs
nop
jecxz
dec
pop
ds
jbe
push
xchg
(bad)
cs
out
sub
sub
add
call
mov
dec
cmp
sbb
adc
not
xchg
sbb
xor
cli
lock
test
add
mov
dec
stos
xor
mov
rcl
retf
pop
repz
shr
jmp
push
jmp
movs
test
and
cli
ror
(bad)
(bad)
push
loope
and
push
add
xchg
xchg
mov
rcl
sbb
in
add
sub
jns
fsub
stos
lods
(bad)
cdq
add
cmc
call
and
and
jmp
cmp
jge
cmps
test
fisubr
push
in
mov
call
cmp
push
cmc
mov
or
xchg
fstp
aaa
cmps
jle
sub
in
push
lods
push
pop
popf
add
add
jbe
scas
jmp
mov
sar
imul
int
push
jnp
ret
mov
add
mov
(bad)
dec
mov
xchg
in
fstp
ss
ds
(bad)
aaa
xchg
sbb
into
xchg
pop
jge
inc
(bad)
cmps
sbb
std
and
sub
sbb
ds
dec
mov
xchg
fstp
push
jge
cmc
inc
add
psubb
cwde
and
jmp
leave
push
add
or
and
inc
mov
in
cmps
stos
pop
xlat
rol
jmp
xchg
call
jno
adc
arpl
dec
aaa
mov
nop
mov
jge
adc
pop
mov
xlat
or
data16
mov
lods
mov
push
pop
cwde
iret
dec
std
arpl
jns
pop
je
sbb
lods
pop
pop
dec
shl
jl
rcl
cmps
cmp
sbb
sub
loop
call
fild
or
xor
cs
rcr
mov
(bad)
out
and
adc
or
(bad)
(bad)
fmulp
dec
loopne
stc
out
sub
xor
xchg
lock
or
xor
push
imul
adc
dec
mov
es
aad
pop
lock
retf
daa
out
in
dec
into
retf
cli
jb
push
cmc
(bad)
das
jle
push
sub
jle
or
cli
dec
mov
mov
stc
std
xchg
inc
imul
iret
retf
cmp
mov
lahf
clc
pop
test
mov
jmp
test
add
cld
push
jg
push
push
sbb
or
jno
nop
call
clc
scas
mov
movs
pop
inc
jmp
imul
jecxz
jae
push
rcl
les
stos
push
pop
repnz
(bad)
int3
test
pop
les
mov
adc
pusha
adc
ret
test
bound
mov
pop
adc
dec
ds
outs
loope
test
mov
or
mov
xchg
push
cmp
and
pop
inc
dec
add
jmp
mov
inc
test
leave
push
popa
inc
sahf
ret
mov
xchg
pop
and
scas
push
inc
psubd
push
ins
jle
ss
and
sub
fstp
push
or
dec
iret
imul
mov
in
out
pop
out
gs
outs
mov
inc
js
add
pop
mov
or
and
fnstsw
pusha
call
or
adc
xchg
dec
jae
fnsave
or
mov
cmp
dec
add
in
push
add
sub
mov
out
or
retf
or
push
mov
xor
or
push
scas
push
js
push
inc
mov
jl
cmps
clc
fist
sub
push
pop
adc
mov
mov
pop
sbb
cld
mov
sbb
dec
push
xchg
dec
test
fs
pop
push
mov
ss
pop
mov
cmp
inc
int3
mov
cmp
cmp
cmp
xor
clc
fisub
sub
and
loope
outs
xor
in
in
fbld
pop
push
(bad)
(bad)
pop
push
out
inc
int3
cmp
mov
mov
pop
scas
xchg
or
mov
pop
sub
xchg
jo
add
jnp
sbb
aaa
or
imul
shr
aas
sbb
push
or
loope
dec
aad
lods
fild
aaa
out
std
stc
jge
in
movs
pop
jbe
aaa
or
jmp
scas
push
ret
cmp
sar
jmp
jmp
test
push
ds
lods
xor
xchg
mov
dec
adc
out
pop
test
imul
dec
jle
cli
xchg
inc
mov
push
jns
ret
add
sti
mov
call
call
dec
push
cld
mov
repz
pop
cld
test
jecxz
lods
mov
sub
movq
fidivr
retf
retf
fild
sub
fsub
lds
xor
sub
or
adc
fs
mov
mov
aad
aad
sub
mov
push
shl
pop
les
repnz
ss
or
ss
mov
add
jle
jne
(bad)
xor
(bad)
cmp
jecxz
(bad)
mov
mul
add
sbb
pop
loope
in
data16
mov
adc
mov
cmp
mov
add
and
mul
call
sbb
add
gs
xlat
jg
dec
cmp
sub
jg
mov
or
sbb
pop
adc
retf
push
jae
or
cmps
adc
xchg
js
dec
xor
cmp
pop
sub
hlt
xchg
or
movs
jns
mov
sub
enter
or
aas
push
ds
xchg
xlat
add
pop
mov
mov
cli
icebp
add
rcl
mov
(bad)
or
dec
pop
and
lods
jbe
add
and
loop
test
int3
popf
or
hlt
in
mov
imul
sbb
(bad)
pop
fistp
sti
mov
push
cwde
or
xor
stc
les
movsx
jmp
loopne
fs
and
push
cdq
iret
dec
lahf
lods
xlat
xchg
cmp
fwait
dec
xchg
fwait
retf
xor
cld
xor
cli
and
sub
xor
dec
push
mov
xor
inc
outs
xchg
cs
xchg
es
add
unpcklps
sbb
ror
pop
into
cmp
imul
stos
movs
xchg
sub
mov
cmps
movs
or
cld
loop
adc
sbb
inc
and
cli
sbb
(bad)
pop
sbb
xor
cld
out
sti
mov
iret
or
test
adc
(bad)
mov
add
xor
pop
mov
imul
lods
mov
lahf
in
mov
nop
mov
ja
test
ins
or
sti
xchg
imul
xchg
in
jnp
cmp
sub
rol
call
clc
mov
and
push
or
or
or
push
aad
test
popf
mov
adc
neg
adc
jmp
ds
jmp
neg
out
xor
push
xchg
inc
loopne
shr
es
jg
mov
fs
pusha
mov
scas
clc
or
mov
xchg
push
push
mov
hlt
ror
add
add
cli
pop
lds
mov
xchg
aaa
mov
pop
mov
push
sets
inc
cmovle
aas
mov
cmps
xor
jo
in
not
in
mov
cli
pop
lods
inc
(bad)
jmp
mov
add
js
arpl
ins
jmp
sub
push
(bad)
mov
pop
mov
shl
ds
jne
xchg
xor
jns
dec
or
mov
test
aaa
pop
call
jae
jbe
out
mov
adc
cmp
fsub
xchg
or
cmp
jmp
ins
fidiv
cmps
xor
push
jle
out
ja
mov
push
mov
push
fs
mov
push
sahf
push
add
jae
test
fwait
cmps
outs
mov
icebp
mov
jae
and
movs
repnz
lahf
add
push
ins
push
or
call
push
jne
sub
mov
or
cmp
xor
popf
add
xchg
adc
xlat
jmp
and
retf
jmp
mov
mov
test
mov
(bad)
xchg
sbb
mov
pop
push
out
int
xlat
inc
adc
not
add
ret
add
cmp
dec
mov
lea
shl
fcomip
mov
add
add
or
xchg
call
fbstp
rcr
mov
outs
imul
sub
xor
xchg
pop
addr16
push
inc
push
outs
retf
(bad)
addr16
cdq
push
push
add
and
mov
cs
out
adc
clc
or
sub
fcom
imul
imul
mov
call
sub
mov
inc
enter
and
xor
jg
cmp
mov
stos
add
adc
cmc
loopne
pop
xor
outs
mov
in
cli
das
pushf
add
arpl
jne
repz
pop
scas
push
push
mov
dec
mov
lock
add
sahf
jge
test
nop
data16
jge
pop
sbb
jg
(bad)
nop
addr16
dec
add
ret
xchg
gs
lock
arpl
jae
jge
xor
mov
out
popa
(bad)
ud1
cmp
pusha
(bad)
sbb
stos
jno
and
sahf
fiadd
outs
(bad)
repz
adc
pop
xor
outs
out
sti
xlat
ds
inc
clc
sub
jae
popa
mov
fs
jnp
js
in
dec
into
mov
fisub
add
outs
out
push
out
(bad)
mov
xchg
and
and
loopne
jns
fldcw
popf
sub
cmp
(bad)
aaa
jg
(bad)
mov
ret
inc
retf
test
sbb
and
push
xor
adc
cs
add
mov
dec
mov
call
cmp
jbe
cmp
call
or
dec
cs
mov
out
mov
in
call
shl
pop
cdq
xchg
push
gs
xchg
outs
mov
sub
jmp
add
push
mov
pop
lahf
xchg
mov
dec
sti
mov
out
or
add
repnz
push
leave
cld
outs
cmp
daa
ret
cmps
movs
jae
xchg
fst
add
pop
mov
call
push
ret
add
push
ins
test
inc
aad
inc
inc
add
in
mov
add
shl
aad
nop
sbb
(bad)
rcl
cmp
or
mov
cdq
mov
jge
or
in
test
ja
div
or
and
or
xor
jp
call
and
fldenv
inc
retf
rol
lods
sub
mov
inc
xor
sub
ins
sbb
test
push
out
and
inc
adc
mov
dec
cmps
test
or
mov
inc
arpl
add
pop
pusha
outs
jb
xor
xchg
cwde
fwait
sahf
(bad)
xor
daa
cmps
nop
cmc
sti
enter
adc
retf
int3
xchg
aaa
mov
daa
in
inc
xor
(bad)
icebp
rcr
push
push
xchg
and
loope
sahf
jecxz
je
popa
rcr
jno
(bad)
sub
in
mov
cs
jne
mov
mov
cs
and
inc
repnz
repz
rcr
sub
pop
cwde
mov
aas
scas
(bad)
mov
sti
fistp
out
jmp
jl
shl
cmp
movs
sub
pusha
fs
cmp
jae
mov
scas
lahf
adc
mov
popf
test
movs
mov
out
xchg
les
fist
stos
arpl
adc
mov
xor
cwde
into
push
pop
fild
cmps
inc
mov
mov
pusha
ins
stc
bound
or
mov
and
ret
mov
add
aam
stos
add
shr
mov
mov
mov
sub
push
and
popf
adc
or
inc
dec
sbb
fdiv
js
fstp
or
pop
ja
fwait
in
push
and
add
and
push
cdq
aas
mov
loop
lds
stos
or
sub
mov
fild
aam
jae
push
sbb
sbb
sub
out
ficom
jno
mov
int3
int
call
sbb
sbb
adc
ret
scas
js
dec
neg
sbb
cmp
cmps
out
lock
cmp
adc
sub
push
and
js
not
push
add
loope
xor
xlat
mov
out
add
add
inc
and
add
ss
xchg
sbb
popa
retf
enter
push
jg
jnp
in
adc
xchg
adc
movs
sar
inc
sub
push
aas
(bad)
dec
(bad)
call
movs
fadd
mov
push
dec
loop
fiadd
popf
mov
cmp
loope
js
xor
cmc
xor
jmp
(bad)
jmp
test
dec
gs
jae
ja
test
xor
shr
cwde
jno
pop
mov
or
fstp
clc
sub
push
iret
mov
mov
clc
jo
popf
outs
mov
xchg
enter
mov
ret
push
(bad)
lds
aad
mov
fild
les
xor
das
mov
pop
jl
hlt
int
cmps
out
das
and
cmp
cmp
add
sbb
mov
in
dec
outs
or
jg
mov
(bad)
cmp
mov
xchg
add
sar
inc
dec
jp
push
mov
stc
jb
jle
and
stos
mov
or
lods
xor
ds
dec
pop
push
or
jmp
js
pop
mov
and
enter
mov
add
cs
out
loop
sbb
adc
(bad)
sbb
push
fidivr
pop
std
retf
out
add
jmp
jmp
lds
jl
and
adc
pop
lods
add
into
outs
inc
cli
pop
sbb
cmp
jbe
les
(bad)
fs
push
neg
fnsave
jg
cmp
scas
pushf
pop
(bad)
xor
pop
in
cmps
push
adc
scas
mov
dec
mov
xor
inc
or
pop
sbb
push
jg
fistp
mov
out
movs
mov
out
sbb
out
sahf
xchg
fs
dec
adc
pop
cmps
out
mov
aam
retf
pop
sti
fcomi
mov
pop
pop
cwde
shl
aad
sbb
push
lahf
clc
or
inc
mov
push
pop
test
add
inc
(bad)
idiv
adc
test
adc
add
fadd
adc
gs
shl
xor
retf
add
sbb
push
enter
mov
cmp
pop
mov
cmp
add
jecxz
jbe
sub
cmps
sub
setae
pop
cli
or
scas
fsubr
jge
xor
jecxz
add
add
mov
loop
enter
or
shl
inc
jb
lds
mov
lahf
and
jnp
outs
repz
out
fiadd
mov
fdivr
out
dec
fwait
dec
and
js
dec
movs
pop
sbb
imul
clc
xchg
js
cld
retf
jg
mov
adc
rcl
sti
ja
push
fstp
fs
xchg
les
mov
inc
std
push
xchg
mov
mov
aas
icebp
shl
jg
enter
rcl
movs
clc
in
sbb
pop
fild
mov
loop
xor
push
jmp
aas
push
icebp
push
push
xor
jp
popa
jp
and
ret
scas
jo
jp
xor
dec
xor
push
pop
cld
pop
sub
mov
or
mov
shl
gs
sub
add
in
shl
mov
lods
adc
jne
mov
je
je
addr16
imul
push
cmc
loop
aas
and
add
push
push
mov
jbe
in
jae
dec
ret
adc
mov
pop
cmc
lea
sub
dec
adc
stos
jp
cmp
out
jl
into
fisttp
mov
into
mov
push
in
scas
(bad)
xchg
xchg
(bad)
scas
push
push
cmp
popf
cmp
ret
cld
sbb
xchg
mov
jle
adc
push
mov
retf
in
call
mov
mov
ds
ins
pop
dec
pop
(bad)
cmp
jbe
iret
pusha
push
gs
cmc
mov
and
pushf
mov
xchg
loopne
fdiv
or
add
add
stc
rcl
inc
and
js
shl
mov
out
fsubr
inc
fcomp
js
add
pop
mov
push
stos
and
pop
or
jge
and
test
sub
adc
call
jnp
dec
out
in
sub
cmp
dec
gs
sub
pop
mov
ja
cli
mov
jge
popa
mov
imul
iret
iret
setno
and
sub
adc
lock
jge
pop
jae
into
mov
ja
pop
les
hlt
retf
add
lds
or
mov
mov
mov
mov
loop
sub
mov
dec
dec
cmp
jmp
xchg
stc
retf
sbb
aad
xor
ins
xchg
mov
mov
push
mov
gs
daa
pusha
add
int
addr16
inc
arpl
leave
cmp
jmp
adc
inc
push
imul
mov
mov
mov
xor
fcom
sbb
push
adc
mov
sub
push
mov
fiadd
push
xor
mov
cld
sub
call
xchg
or
sahf
leave
sbb
into
mov
repnz
std
xor
out
push
cwde
add
mov
dec
and
and
gs
inc
sbb
lahf
ins
inc
mov
jae
test
pop
mov
inc
movs
shl
mov
shr
sub
jmp
add
(bad)
jecxz
inc
sbb
xchg
dec
sub
into
ins
lahf
repz
iret
test
outs
pmullw
fs
adc
push
jae
data16
mov
lods
pop
test
mov
mov
jnp
fdiv
mov
pop
mov
out
xchg
shr
call
sbb
adc
push
dec
adc
inc
into
addr16
and
aad
jl
aas
jo
sti
(bad)
adc
sahf
or
pop
repz
fucom
cmp
jge
pop
fld
cdq
pop
mov
mov
xchg
cmp
loopne
out
enter
xor
bound
cdq
sub
pop
push
fsubp
movs
mov
xchg
repnz
push
cdq
mov
mov
mov
imul
cmp
addr16
mov
xor
inc
sub
push
adc
xor
push
mov
out
mov
push
out
xlat
mov
dec
adc
mov
aad
and
icebp
jmp
jnp
loop
push
add
call
xchg
outs
push
adc
sub
mov
adc
cmp
int3
rol
inc
sub
jmp
push
fwait
popa
pop
sbb
cmp
fst
xchg
mov
dec
outs
and
(bad)
pop
pushf
ret
push
jmp
out
cwde
scas
scas
sbb
out
sub
popf
gs
iret
mul
ficomp
mov
mov
popa
inc
or
xchg
outs
imul
mov
push
in
or
mov
loop
stos
jnp
adc
test
in
jae
jns
push
inc
shl
movs
push
jnp
push
jmp
clc
add
push
daa
not
sbb
cmp
mov
cmps
inc
or
jecxz
lds
xlat
inc
jbe
mov
dec
adc
pop
xor
jp
loopne
mov
test
int3
mov
loop
xchg
mov
add
(bad)
cmps
(bad)
ins
adc
jnp
in
sub
cmp
cmp
ret
jno
or
add
inc
sbb
mov
pop
cmp
sub
pusha
mul
cmps
or
in
ja
pop
call
pop
test
xchg
mov
daa
scas
dec
in
cmps
or
fs
mov
in
mov
imul
mov
stc
or
call
loope
sbb
xchg
push
push
mov
rcr
sti
int3
imul
loop
jmp
aad
aas
ss
mov
add
mov
repnz
mov
jb
js
std
mov
jg
fwait
add
mov
push
add
inc
lock
mov
push
mov
add
pop
adc
and
inc
dec
push
mov
pop
cmp
cmps
mov
out
xor
jmp
cmp
sbb
push
mov
pop
adc
inc
xor
xchg
mov
adc
mov
jge
inc
mov
jle
jae
cld
sbb
push
add
cmp
push
mov
xor
cmp
fsubr
and
sbb
fld
cwde
fbld
lahf
rol
clc
xor
push
jecxz
jb
jne
xchg
sahf
push
fidivr
dec
(bad)
popf
xor
pop
mov
sbb
popf
fwait
push
jecxz
pop
xchg
push
adc
pop
inc
jmp
or
sub
push
jmp
cld
jmp
mov
ja
inc
xchg
and
sub
sti
mov
xchg
sub
mov
dec
cli
adc
hlt
xchg
mov
js
into
pop
jl
(bad)
cli
call
movs
pop
mov
xchg
add
inc
adc
bound
dec
inc
mov
dec
xchg
cmp
xchg
out
fisttp
fidivr
loopne
jb
icebp
adc
sub
jle
pop
adc
in
hlt
frstor
xchg
mov
lods
xor
jge
dec
adc
jb
or
sbb
xchg
xor
data16
mov
shl
push
fs
jno
sbb
push
jne
cli
in
sbb
daa
add
mov
cli
jmp
ret
push
adc
mov
or
xchg
or
lods
out
or
into
js
jg
(bad)
mul
shl
jne
loopne
sti
add
aad
ret
ja
pusha
push
push
(bad)
push
mov
mov
rcl
(bad)
mov
mov
inc
dec
test
sub
ficom
mov
in
cmp
add
sbb
mov
add
repnz
(bad)
jp
add
dec
fisubr
xchg
push
push
mov
dec
rol
rol
xor
sub
xor
jecxz
fisub
or
dec
inc
jge
repz
mov
lods
cmp
shl
bnd
(bad)
pusha
in
cwde
dec
adc
cld
mov
mov
sbb
sbb
cmp
sub
mov
mov
push
mov
push
xor
mov
ins
popf
push
mov
outs
jnp
dec
mov
mov
pop
test
stos
stos
out
stos
and
(bad)
mov
call
push
ret
add
mov
(bad)
jp
rcr
or
adc
push
xor
shr
je
outs
retf
or
arpl
les
shl
rol
fldenv
lock
clc
mov
(bad)
cmp
jae
pop
push
rcr
jo
push
dec
cld
mov
mov
mov
xchg
dec
cmp
pop
push
stc
fs
pop
or
cdq
dec
add
mov
(bad)
sub
pop
in
xor
inc
std
fist
inc
mov
sub
ret
inc
xor
aam
sub
mov
movs
in
sbb
ja
sub
mov
popa
xchg
dec
push
lock
inc
out
and
mov
cmp
dec
stos
jmp
gs
in
sub
cmc
xor
mov
mov
out
or
xor
jnp
dec
pushf
mov
jbe
fistp
repz
ja
push
sub
push
and
pop
push
xor
dec
add
ss
mov
je
push
aad
ja
maxps
fcmovbe
mov
dec
cmp
inc
enter
out
fild
xor
dec
cmp
daa
inc
out
pop
ins
mov
xchg
ja
je
lea
pop
addr16
imul
aam
icebp
mov
xchg
ins
mov
adc
xchg
or
inc
dec
xor
and
inc
adc
fwait
add
out
lods
mov
pusha
dec
call
jmp
je
jge
dec
pop
add
fcom
mov
pop
jbe
inc
fs
fs
fst
dec
push
add
dec
jle
repnz
jg
sbb
cmps
fild
or
xlat
or
clc
xchg
jmp
inc
rcl
jae
adc
cmp
test
push
ja
cmc
ja
push
jmp
not
xchg
push
add
adc
out
fisub
cmps
mov
push
hlt
pop
cdq
cmp
pop
jbe
imul
fcomp
sub
xchg
xchg
sti
repnz
or
nop
neg
or
dec
xor
lock
push
pop
cmp
xchg
inc
adc
or
std
das
mov
and
fiadd
into
in
xor
addr16
cli
sub
shl
push
in
xchg
xchg
jne
push
mov
addr16
cwde
out
push
sahf
imul
mov
mov
add
call
push
and
retf
int3
idiv
sub
xchg
sahf
mov
mov
push
jmp
repz
stos
(bad)
push
nop
out
fstp
add
xor
xor
sub
jno
test
adc
addr16
and
int
push
jl
push
cmp
ins
int
inc
jmp
mov
or
lods
and
aas
das
or
rol
mov
retf
mov
mov
push
ins
enter
or
loopne
jg
dec
push
add
add
sub
imul
sar
aaa
stos
mov
lock
jp
adc
pusha
mov
(bad)
addr16
pop
inc
pop
add
and
dec
inc
inc
push
add
aas
push
mov
dec
les
ja
push
in
(bad)
test
mov
sbb
cli
cmps
and
call
adc
cwde
and
retf
sar
push
call
add
rcl
idiv
mov
xor
xchg
pushf
push
adc
js
and
mov
add
aad
sub
aad
aad
out
aaa
add
fidivr
mov
aaa
enter
xchg
add
fxch
add
pop
mov
(bad)
sti
or
sub
das
(bad)
and
xchg
test
xor
cmp
xchg
mov
sub
dec
idiv
nop
movs
stos
jmp
(bad)
adc
jle
(bad)
enter
push
lock
es
inc
in
mov
jmp
and
pop
pusha
stos
xor
loop
ficomp
cmp
mov
dec
pop
jg
push
movs
xchg
es
pop
push
hlt
cwde
loope
add
xchg
call
sub
xchg
aad
pushf
scas
mov
leave
enter
jnp
movs
fdiv
pusha
add
push
daa
dec
adc
dec
rcl
push
xchg
push
popa
cmps
mov
not
scas
inc
jp
mov
mov
cdq
stos
add
adc
fst
pop
enter
dec
xchg
push
ins
push
adc
outs
je
jl
imul
ds
shl
test
pop
xor
jae
jne
xor
icebp
jb
les
sbb
xchg
ins
jge
sub
cmps
add
popa
pop
cmps
mov
mov
sbb
xor
xor
sbb
pop
add
movs
shl
adc
nop
sub
retf
iret
in
ins
jns
and
dec
xor
pop
out
or
add
xor
cmp
movs
fisubr
cmp
vcvtpd2ps
enter
and
cmp
mov
adc
xor
sbb
in
cmps
mov
cdq
popf
mov
ja
adc
jo
sbb
sbb
xchg
sbb
cld
and
jbe
sub
pop
stc
outs
and
add
dec
daa
add
ss
shl
cmp
dec
jg
dec
inc
mov
andnps
retf
pop
fdivr
jmp
mov
adc
std
jbe
xchg
vcvtps2pd
jp
pop
aaa
ror
ret
out
ins
add
mov
mov
mov
cmp
fsubr
scas
cmp
gs
ror
retf
push
mov
dec
dec
cld
push
xor
inc
ja
imul
jno
int
fidivr
adc
sar
sbb
dec
cs
sub
cmps
sbb
lods
jo
cmp
xor
rcl
inc
xchg
and
nop
out
mov
into
push
(bad)
into
sub
mov
(bad)
dec
dec
jp
pop
outs
aas
mov
scas
xor
inc
ror
pusha
into
sub
iret
int3
adc
sbb
cli
rol
lods
adc
cmp
mov
in
mov
mov
fs
enter
ret
pop
call
in
dec
clc
add
add
adc
push
shl
xchg
out
xchg
pop
jbe
jb
in
es
mov
dec
xor
or
ret
test
cmp
jns
sbb
icebp
loop
sub
push
sub
sub
inc
cli
xchg
stos
or
and
inc
repz
shl
mov
jns
ins
jns
push
out
push
pop
dec
(bad)
mov
pop
push
add
adc
(bad)
xchg
add
gs
cmp
enter
dec
gs
or
pushf
ds
mov
jecxz
leave
xor
or
ja
mov
mov
xlat
scas
push
pop
xchg
pop
inc
adc
je
xchg
mov
inc
sub
cmps
xchg
imul
mov
std
xor
add
inc
je
adc
xchg
div
push
push
adc
xchg
mov
daa
pop
add
adc
push
leave
mov
sub
jbe
mov
int3
inc
xor
jb
(bad)
fiadd
add
sub
adc
test
in
bound
std
div
je
ins
xchg
loope
aas
repnz
jae
ret
dec
push
aad
jo
jecxz
loop
int3
ficom
dec
out
cs
adc
add
mov
dec
ror
addr16
push
jle
push
inc
fcmovu
stos
cs
sbb
xchg
pop
(bad)
cli
in
and
scas
into
cdq
sub
mov
ins
or
inc
xchg
(bad)
test
jns
jae
xor
xchg
loope
test
xor
bound
jb
repnz
pop
add
pop
mov
push
in
add
in
std
aas
and
and
dec
add
test
jbe
mov
(bad)
pop
inc
stos
fnstcw
adc
adc
add
arpl
(bad)
jnp
(bad)
and
push
shl
sbb
pop
std
dec
mov
(bad)
pop
sbb
fist
inc
das
daa
or
sub
pop
ss
dec
sub
or
inc
push
(bad)
or
cmovo
adc
enter
movs
repnz
cmps
dec
(bad)
and
mov
stc
mov
aam
xchg
and
fs
adc
aas
inc
pop
(bad)
imul
cli
sub
jmp
mov
and
aam
cmp
mov
cli
sbb
mov
jae
fild
jmp
pcmpeqb
fidiv
pop
mov
test
mul
jno
adc
and
dec
jp
loopne
cmp
fsub
sbb
mov
dec
add
fwait
neg
arpl
test
push
jne
fdivr
mov
stos
fmul
mov
mov
jp
movs
xor
sbb
or
test
xchg
es
adc
push
mov
scas
das
das
sti
or
fild
add
inc
mov
test
fist
add
int3
xchg
add
sbb
add
outs
mov
daa
dec
sti
push
inc
and
pop
arpl
push
popa
icebp
call
mov
rcr
sbb
cs
cmps
cwde
cmp
xchg
sbb
sar
cmp
dec
and
cmc
mov
neg
js
xchg
sbb
dec
neg
frstor
lea
(bad)
xchg
ltr
xor
push
and
nop
xchg
repz
test
jnp
mov
mov
imul
mov
dec
push
xchg
cmp
add
inc
xchg
xor
cmp
xor
sbb
push
outs
cmps
dec
push
(bad)
sar
and
fadd
push
mov
mov
les
or
stos
xor
outs
pop
mov
imul
call
dec
and
outs
nop
mov
mov
nop
das
mov
push
icebp
push
dec
xchg
ds
push
lahf
bnd
sbb
stos
add
cdq
daa
add
xchg
fadd
adc
mov
add
stos
retf
sbb
add
xor
hlt
xchg
jecxz
jecxz
xor
addr16
jmp
neg
arpl
arpl
push
and
lea
es
xor
sub
xchg
cwde
fdiv
sub
mov
and
pop
xor
mov
lds
call
cdq
fild
mov
add
sahf
and
fidivr
shl
push
xchg
fwait
lds
icebp
retf
fldcw
inc
and
and
out
sbb
adc
add
dec
dec
ja
sar
(bad)
pusha
push
adc
cld
xor
test
retf
rol
push
adc
bound
xor
cdq
iret
or
loopne
jnp
mov
popa
adc
out
js
xchg
sub
pop
cdq
mov
mov
adc
aad
xchg
(bad)
mov
pop
mov
cmp
jno
inc
mov
(bad)
pushf
ja
into
sti
fnstenv
pusha
hlt
mov
mov
dec
loope
add
jbe
iret
xor
cmps
ret
sbb
movs
int3
hlt
movs
dec
push
adc
or
icebp
dec
cmp
cmc
outs
shr
xor
mov
mov
mov
nop
out
mov
push
mov
loope
mov
aas
(bad)
sub
repz
or
xor
fstp
int3
jno
inc
je
call
repz
hlt
sar
mov
dec
pop
sahf
pushf
push
adc
aam
mov
add
imul
jae
push
jbe
xor
(bad)
(bad)
jmp
fdivr
jo
push
add
lock
gs
xchg
shl
jmp
fcom
jmp
lds
adc
adc
aaa
iret
in
fwait
rcl
xchg
ret
sub
xor
dec
add
(bad)
fiadd
nop
inc
cld
mov
iret
ret
repz
pop
mov
popa
retf
inc
mov
bound
sub
jmp
and
jp
out
fcomp
sbb
shl
div
rep
push
jecxz
stc
sbb
repnz
mov
adc
retf
mov
call
xor
push
and
or
jmp
sbb
inc
or
call
mov
dec
cmp
add
or
cmp
xchg
div
fwait
jnp
cbw
sbb
cmp
dec
xor
std
add
push
pop
mov
arpl
inc
cmps
stos
loop
pop
cwde
sub
mov
xchg
xchg
bound
mov
test
add
popa
rcr
xor
ins
lds
dec
jnp
sbb
stos
mov
fdivp
fwait
sbb
mov
(bad)
movs
xchg
mov
lods
ret
mov
sub
and
pop
pop
jae
jns
mov
and
jo
add
xlat
cld
mov
cdq
sub
iret
add
test
nop
pusha
pop
sub
pop
pushf
push
jno
rcr
cmp
pop
inc
inc
fadd
dec
inc
sub
add
pop
add
leave
add
daa
sahf
cmp
mov
test
mov
pop
leave
shl
xchg
in
mov
jge
jne
retf
scas
in
pop
or
es
jno
mov
fidivr
scas
ds
sub
sub
inc
xchg
mov
inc
jg
sahf
int
mov
sub
in
adc
dec
sub
push
and
bound
aaa
repnz
pop
jb
mov
lea
dec
in
ds
pop
cld
jmp
adc
mov
mov
add
pop
enter
frstor
adc
daa
add
repz
xor
push
fld
fadd
in
or
add
imul
call
shr
mov
or
jb
and
ja
mov
push
sbb
rol
pop
inc
js
add
mov
dec
lds
test
mov
fmul
ret
outs
in
adc
mov
pop
test
or
push
jmp
gs
int
(bad)
bound
adc
lock
jbe
add
in
mov
daa
mov
in
(bad)
mov
and
retf
xchg
cs
test
das
sub
sub
cli
scas
and
call
xchg
in
inc
cmp
arpl
repnz
sar
add
sbb
test
int3
inc
xor
cli
int3
add
push
stos
mov
mov
sub
dec
icebp
scas
add
push
sub
in
mov
mov
sub
sbb
das
pop
inc
push
push
sub
inc
adc
test
les
mov
add
push
rcr
ds
dec
mov
sub
out
ficom
je
fdiv
jns
cmp
cmps
cmp
sahf
cmps
rep
jp
add
popa
inc
pop
mov
xor
leave
pop
sub
(bad)
xchg
fidivr
not
sub
jp
fdiv
jmp
leave
pop
xchg
popa
jmp
adc
xor
jmp
(bad)
les
cmp
outs
(bad)
sbb
iret
mov
jge
sub
mov
daa
ins
pushf
jbe
clc
xchg
ja
lods
stos
cld
sbb
div
add
sbb
loopne
dec
sbb
add
iret
jle
xor
sbb
xor
lahf
inc
jb
int3
call
fwait
adc
ja
stc
imul
jne
in
mov
add
cmp
sub
and
ja
adc
das
mov
outs
popf
gs
les
jge
mov
jmp
inc
ret
cmp
or
mov
add
ror
mov
mov
mov
and
push
mul
jb
inc
inc
mov
in
cli
ss
xchg
test
sbb
fiadd
jb
dec
cmp
out
xchg
stos
push
jl
into
addr16
jbe
or
xor
xor
cwde
shr
push
or
in
cld
xor
dec
xchg
cmp
shr
push
jno
mov
and
mov
mov
fdivr
(bad)
test
cmps
cli
mov
jle
cld
in
xor
retf
jae
(bad)
jb
nop
gs
in
rcr
(bad)
xor
mov
sti
mov
lock
add
push
xchg
dec
sbb
(bad)
mov
aam
add
mov
out
imul
cld
aaa
idiv
std
sub
mov
in
fmul
pop
push
outs
sbb
call
push
cmp
dec
pop
dec
aas
and
bound
xor
jge
inc
add
scas
pop
xor
nop
mov
jns
test
jge
shl
mov
xor
push
or
sbb
jle
cmp
push
mov
scas
inc
mov
and
adc
ret
repz
out
and
retf
ss
fstp
pop
mov
arpl
test
clc
shl
ins
imul
aam
adc
dec
add
jg
dec
add
pop
add
pop
inc
push
int3
fsubr
test
xor
(bad)
jge
loope
pushf
add
movs
mov
mov
push
(bad)
xchg
sub
retf
xchg
popa
mov
retf
mov
jo
and
sub
mov
add
out
or
jl
les
add
bound
push
enter
in
xchg
push
jg
test
jle
out
pushf
xchg
pop
es
xchg
dec
test
lahf
push
mov
pop
dec
(bad)
shl
pop
into
sar
imul
mov
fiadd
stc
(bad)
sbb
addr16
pushf
cli
mov
loopne
(bad)
and
mov
fld
sbb
sti
test
inc
lea
test
sub
repnz
lods
inc
loope
enter
adc
idiv
sbb
popf
xchg
sbb
dec
push
in
dec
inc
jmp
sub
cwde
cli
push
inc
add
fwait
int3
sti
div
or
rol
out
pop
sbb
(bad)
sub
adc
mov
add
sub
test
push
shr
sub
retw
push
data16
fsubp
imul
and
movs
aam
stos
out
out
xchg
jge
add
mov
inc
stos
ror
sub
push
mov
sbb
daa
inc
and
loop
inc
fidivr
pop
jb
test
fdivr
dec
mov
mov
dec
add
wrmsr
pusha
lock
cwde
push
es
jns
sti
fld
test
dec
xor
jecxz
xor
inc
add
and
adc
call
call
aas
mov
cmc
cmp
ficomp
cmp
jae
not
or
(bad)
retf
cmp
mov
xor
or
cmp
in
aam
push
cmp
in
es
push
add
push
pop
cli
dec
call
xor
mov
xor
sub
outs
and
cmp
cmc
das
sub
push
push
(bad)
fld
dec
shl
pop
lea
test
mov
pushf
out
jbe
stc
mov
fs
dec
ror
mov
mov
loop
adc
cmovp
add
scas
imul
add
test
cmp
inc
inc
add
popf
jbe
mov
cmc
adc
mov
stos
xchg
out
add
xor
and
imul
sbb
jb
mov
sub
mov
inc
scas
popf
jl
call
push
test
lock
std
stc
sahf
or
pushf
fs
pop
or
sahf
xchg
mov
clc
fcmovbe
rcr
push
push
sub
sbb
enter
test
jno
jmp
dec
sbb
push
(bad)
xchg
in
add
add
mov
stos
cmp
aam
jns
data16
int3
clc
sub
les
jle
leave
pop
aaa
inc
lds
jae
pop
shr
pop
(bad)
clc
xchg
adc
sbb
shr
xlat
mov
(bad)
adc
xor
mov
mov
or
imul
push
sbb
mov
cld
imul
mov
adc
adc
sub
mov
jecxz
cmp
les
aad
imul
add
jle
mov
mov
add
sub
xor
inc
sub
dec
es
xchg
cmp
xor
fld
dec
loop
lds
sbb
jo
pop
mov
push
adc
jne
jecxz
in
in
retf
nop
push
jge
adc
mov
addr16
jb
lds
sbb
push
cld
or
int
xchg
mov
mov
das
mov
pop
adc
hlt
fnsetpm(287
daa
lock
mov
cmp
cli
jle
push
shl
fdiv
(bad)
call
mov
stos
and
inc
cs
scas
xchg
popf
jne
in
dec
sbb
into
add
shr
push
daa
dec
rol
mov
dec
inc
jae
jno
inc
xor
jmp
(bad)
(bad)
push
rcl
add
outs
push
sbb
inc
push
or
and
xor
and
in
pop
jbe
cwde
push
xor
cmp
clc
addr16
mov
ret
jl
mov
add
inc
adc
dec
(bad)
fstp
xor
pop
pop
popf
adc
test
fdiv
jl
and
scas
or
psllq
pop
jg
popf
ret
in
jge
push
movs
push
push
and
mov
loopne
xchg
adc
xchg
jmp
or
or
ja
rcr
jmp
ins
dec
outs
test
adc
outs
fild
in
js
aam
leave
ja
in
dec
push
loopne
out
jae
ds
or
and
cdq
das
jle
rcr
adc
cmp
out
add
push
push
and
test
inc
test
jae
mov
add
mov
add
pop
pop
(bad)
cld
pop
mov
or
ret
movs
cli
xor
(bad)
pusha
sub
and
xchg
clc
cmp
or
add
(bad)
or
mov
test
inc
mov
add
inc
add
and
rsqrtps
fucomp
(bad)
sub
ja
or
sbb
lods
(bad)
and
sub
loopne
imul
mov
pop
call
repnz
push
mov
lock
jae
xchg
lods
or
in
(bad)
xchg
call
imul
iret
sbb
gs
stos
inc
inc
call
sub
mov
or
mov
cld
test
cmp
push
fcom
jne
in
or
dec
sub
inc
and
test
test
js
add
jae
dec
retf
push
repnz
ror
jne
mov
mov
mov
cmp
fst
js
call
push
or
sbb
mov
push
fxch
loope
(bad)
or
iret
jne
test
scas
push
movs
xchg
iret
xchg
xor
leave
rol
push
stc
adc
ins
xor
mov
xchg
retf
(bad)
push
repnz
xor
cwde
test
inc
mov
pop
enter
add
mov
or
pusha
jl
mov
push
dec
dec
cmps
adc
cmp
adc
test
cli
adc
jmp
jne
jo
jg
dec
sbb
iret
scas
push
add
cmp
xor
sysret
or
cmps
(bad)
adc
mov
jo
inc
loopne
sbb
shl
add
sbb
xchg
lods
pop
sbb
(bad)
mov
scas
ins
rcl
add
pusha
inc
test
cmp
fmulp
cmp
into
inc
mov
push
mov
sbb
sub
dec
sub
xor
movs
sar
jp
jno
push
fcompp
imul
out
xor
xor
sbb
sti
int
imul
push
mov
jmp
dec
ret
pop
jmp
dec
rcl
ret
cmc
xor
pop
push
cmp
cmp
ror
retf
xchg
fdiv
mov
stos
mov
sub
mov
inc
mov
sahf
test
xlat
retf
add
jmp
adc
inc
cdq
and
jmp
out
or
hlt
jmp
iret
sbb
dec
xor
inc
adc
std
lock
mov
fstp
shr
cmps
pop
jge
xchg
inc
in
lea
xchg
out
add
out
fmul
add
movs
mov
in
xchg
sub
add
xchg
sti
nop
add
jb
xor
pop
add
sbb
xor
add
adc
and
sub
scas
fldcw
cs
push
inc
dec
cwde
(bad)
movs
or
xor
jecxz
(bad)
(bad)
cmp
dec
dec
test
sbb
push
sub
outs
inc
push
imul
inc
dec
cmp
cwde
jne
sub
push
sbb
mov
mov
adc
lock
mov
mov
(bad)
cld
fnstcw
inc
push
stc
add
sbb
jo
ret
ficom
outs
popa
shl
faddp
lock
mov
int
dec
lds
int
retf
cmp
add
xchg
je
add
jns
leave
jp
cmp
adc
movs
lds
mov
aad
out
mov
push
call
shl
mov
aad
mov
repnz
rcl
adc
cmp
sbb
loop
cmp
sar
sub
xor
dec
push
pushf
je
gs
sti
fild
outs
scas
pop
xlat
push
shl
cdq
xlat
xchg
adc
fimul
lods
pop
add
(bad)
adc
mov
inc
sub
pop
jno
mov
sysret
add
inc
popf
or
sub
lds
adc
sub
mov
neg
xchg
popa
test
int3
mov
xchg
gs
push
lock
out
push
cmps
or
push
xchg
and
adc
(bad)
pop
fwait
push
inc
xor
or
mov
enter
push
mov
mov
xchg
retf
aam
jns
jg
fistp
sbb
pusha
cmps
or
test
test
xor
dec
loop
and
inc
add
xor
sub
arpl
mov
sahf
test
cmps
cwde
dec
push
inc
mov
adc
mov
cli
and
lea
and
add
(bad)
mov
mov
pop
ss
stc
int3
cs
test
stos
movs
mov
mov
enter
sbb
adc
xor
enter
mov
inc
dec
sti
push
and
jle
dec
and
call
or
cwde
(bad)
mov
lods
and
or
(bad)
daa
xchg
cwde
mov
out
sub
sbb
adc
ins
in
pop
fwait
sub
nop
retf
popa
inc
xchg
sbb
cmps
sub
sub
in
add
clc
push
fdiv
in
enter
dec
ret
mov
rcr
daa
test
jnp
sbb
cmps
xchg
push
cld
add
add
and
pop
aas
push
xchg
mov
sbb
(bad)
ja
jmp
jg
push
push
pop
adc
and
push
lock
daa
cdq
and
pop
add
jp
ins
test
xlat
xchg
je
xchg
arpl
inc
dec
fstp
clc
fcomp
sbb
pusha
es
stc
mov
rol
cs
adc
fnstenv
xchg
mov
sub
sbb
pop
sbb
cmps
xor
add
popa
or
push
or
add
sbb
test
outs
test
sti
dec
in
fidiv
ror
arpl
sbb
rol
shufps
push
(bad)
mov
(bad)
cmp
lea
sub
test
sar
das
jnp
mov
stc
push
call
cld
pusha
jmp
pop
jg
lock
adc
push
iret
cmp
or
adc
push
dec
jbe
pop
das
push
xor
jecxz
push
xchg
scas
inc
fist
dec
stos
and
cmps
ret
mov
mov
rcl
(bad)
sub
and
ror
js
repnz
mov
jae
pop
add
(bad)
sub
ret
out
sbb
inc
imul
mov
mov
xchg
movs
ja
jmp
pop
jne
fs
sbb
lahf
jl
xchg
cmp
cmp
dec
mov
xchg
xor
js
xchg
mov
movs
xor
sbb
in
push
pop
cmp
push
loopne
pop
cs
sbb
mov
(bad)
mov
dec
mov
cmps
das
ror
cmp
mov
ret
pop
into
push
sub
rcr
dec
pop
cmp
test
cmps
test
and
mov
or
push
mov
adc
popa
mov
push
int
or
hlt
inc
adc
adc
xchg
jmp
les
mov
(bad)
add
mov
jmp
pop
push
xor
mov
scas
sar
xor
fcomp
jo
and
inc
out
inc
adc
xchg
pop
or
ja
lock
xor
fnsave
mov
loope
and
and
retf
or
lock
outs
in
stc
shl
inc
adc
mov
sub
sub
fisttp
je
inc
mov
mov
aad
sbb
lds
mov
(bad)
out
mov
cld
scas
jnp
inc
push
ficomp
imul
pop
xchg
sbb
mov
sub
xchg
push
pop
pop
call
dec
les
pushf
test
jle
movs
push
les
adc
sbb
pushf
mov
mov
stc
sub
push
add
pop
bound
inc
loope
xor
jmp
iret
loop
shr
in
mov
aam
cmc
cmp
sar
aas
push
cmp
inc
or
or
inc
mov
push
cmc
sbb
mov
cmp
neg
jnp
adc
or
lods
mov
outs
push
mov
cmp
cld
fst
sbb
sbb
jno
jmp
lea
in
inc
lea
(bad)
clc
pop
mov
in
mov
xor
xchg
push
cdq
mov
pop
mov
(bad)
pusha
cwde
push
lea
jge
jb
int3
in
mov
pusha
xchg
xchg
and
jo
dec
fs
sti
xor
lahf
add
or
xor
jmp
mov
push
aas
mov
xchg
fwait
cmc
or
mov
xor
mov
mov
sub
movs
jb
jnp
or
mov
mov
mov
test
sbb
jmp
adc
push
dec
frstor
pop
mov
fdivrp
rcr
mov
mov
jge
rcr
xor
pop
sub
test
add
pop
mov
pushf
icebp
ror
(bad)
jle
lahf
js
fistp
pushf
jge
dec
adc
or
lock
cwde
stos
xor
rol
push
mov
sbb
sbb
push
push
rol
push
imul
adc
add
inc
push
pop
cdq
cld
xchg
inc
or
pop
dec
dec
mov
(bad)
and
fbld
sahf
push
xchg
out
add
adc
cmp
ss
outs
mov
ins
popa
dec
mov
mov
xor
sti
lds
inc
and
inc
pop
fs
jo
sub
jb
(bad)
aam
sbb
ins
add
cmps
xchg
mov
push
(bad)
(bad)
xor
jno
push
pop
inc
cwde
mov
stc
mov
mov
mov
mov
mov
add
mov
xor
clc
sbb
jp
or
pop
mov
sub
inc
jo
stc
mov
add
js
mov
imul
sbb
pop
jnp
fmul
loop
out
pop
xchg
dec
adc
push
lds
jo
xchg
jae
pop
mov
fsub
jno
push
enter
mov
(bad)
xor
iret
mov
add
iret
add
retf
dec
sar
pop
add
cmp
(bad)
pushf
into
dec
mov
int
push
pop
mov
xchg
(bad)
pop
aaa
cdq
xor
dec
adc
xchg
xor
sub
(bad)
leave
push
add
sahf
nop
and
pop
ins
inc
pop
xor
xor
inc
int3
lds
rol
int3
mov
and
vextracti64x4
sahf
mov
mov
add
cld
loop
aam
and
(bad)
dec
xor
and
cmc
and
mov
pop
jg
jmp
es
sbb
or
push
mov
push
push
add
add
ja
retf
lock
icebp
jmp
pop
jo
imul
xor
stos
bound
push
and
pop
jae
daa
outs
test
scas
stos
bound
inc
push
push
cmps
push
lea
jl
test
cmp
(bad)
cwde
(bad)
dec
pusha
add
adc
sbb
inc
cmp
adc
mov
aas
pusha
push
or
mov
xor
add
sub
push
(bad)
cmc
outs
(bad)
gs
arpl
cmp
push
add
je
hlt
jae
sub
mov
xor
iret
xor
stc
std
scas
(bad)
jmp
out
push
push
or
fild
inc
sub
aad
repz
jle
pop
std
fldenv
cmp
int3
or
jge
xchg
xor
mov
das
jecxz
cmp
daa
pushf
dec
cli
adc
in
js
call
cmp
fisttp
jp
xchg
jg
out
cs
xchg
mov
in
retf
clc
pop
mov
stos
or
or
cmp
jo
mov
lods
pop
jmp
cld
loopne
int
sbb
ds
call
jne
lods
lea
pop
cmps
rcl
inc
lahf
dec
(bad)
cli
sbb
xchg
aas
xchg
pop
xchg
xchg
and
xchg
fscale
cmp
imul
pop
out
enter
enter
mov
fisttp
sub
rol
adc
mov
mov
mov
dec
daa
mul
call
cmps
es
xchg
mov
loop
mov
jb
and
cmp
icebp
jg
and
adc
mov
(bad)
retf
mov
dec
js
pop
jecxz
pop
shr
cmps
pop
icebp
jp
cmc
cmc
mov
sbb
iret
and
pop
aas
push
xor
lahf
mov
mov
mov
dec
dec
fisttp
les
fdivr
in
fadd
add
push
mov
and
sar
imul
jg
inc
dec
add
xor
xor
and
sub
add
stos
pop
call
cmp
jb
and
sahf
popf
and
or
mov
lods
mov
jae
ror
imul
pop
dec
add
push
add
cdq
push
out
mov
push
pop
neg
add
mov
cmp
icebp
jmp
and
cmc
push
fmulp
loopne
inc
mov
mov
pop
ds
mov
(bad)
inc
pop
inc
popa
xchg
or
xchg
pusha
and
inc
enter
test
add
repnz
lahf
mov
pop
std
ja
ret
(bad)
jnp
xchg
repnz
test
test
sub
dec
enter
xor
(bad)
pusha
pop
fbstp
test
mov
shl
fsubr
jne
mov
sbb
pop
inc
arpl
cmp
(bad)
sub
out
or
push
rcl
inc
push
add
xchg
push
movs
adc
shr
cmp
cmp
mov
jo
and
retf
fwait
xor
or
lds
and
dec
xor
and
outs
pop
(bad)
(bad)
ret
mul
(bad)
fcmovnbe
jns
inc
lock
lods
sbb
push
sbb
add
or
xor
sbb
movs
into
je
test
add
fmul
outs
(bad)
xchg
mov
xor
mov
mov
lock
inc
sbb
push
pop
or
out
pop
call
jg
imul
lahf
shr
add
mov
das
std
mov
movs
xor
or
stos
sub
scas
movs
aam
or
adc
dec
idiv
jmp
dec
mov
or
test
in
add
lock
movs
pushf
cmp
push
movs
push
sbb
ins
icebp
aam
call
sub
inc
in
jle
pop
xchg
mov
ins
mov
test
adc
cwde
addr16
call
retf
xor
xor
push
sbb
test
add
mov
loopne
xor
hlt
pop
movs
xchg
push
dec
jbe
inc
ja
jp
ss
movs
cmp
adc
aad
mov
and
pop
test
mov
pop
cmp
pushf
push
xor
inc
adc
fwait
dec
in
into
int
out
std
or
(bad)
push
sub
sar
je
add
pop
adc
jno
shl
pop
loopne
imul
pushf
jnp
pop
not
jle
mov
mov
pop
arpl
pop
push
jmp
icebp
xchg
leave
loop
xlat
lock
adc
outs
int
mov
stc
pop
test
xor
outs
and
imul
cmc
xchg
mov
add
test
fimul
int3
imul
jbe
out
jg
lds
rol
jbe
jno
dec
lahf
cld
mov
mov
fcomp
inc
in
cli
jg
mov
dec
push
inc
or
sbb
adc
sbb
cmp
fist
push
adc
inc
cmp
inc
fldcw
mov
xchg
cmps
repnz
and
hlt
test
addr16
jb
jg
push
inc
push
cmp
jno
mov
stc
mov
sub
in
(bad)
repnz
cmp
push
enter
in
ja
inc
push
pop
add
lock
mov
imul
arpl
(bad)
mov
sub
stos
cdq
fisttp
inc
jbe
fs
push
ins
out
jns
inc
mov
xor
pop
xor
cmc
nop
push
pop
and
add
add
xlat
or
push
call
dec
push
call
into
adc
repz
mov
dec
sbb
mov
je
fiadd
ret
dec
test
dec
lods
shl
mov
push
out
add
add
fwait
jns
sbb
push
sub
aad
mov
add
jns
fwait
cmc
cmove
push
jno
nop
adc
sub
int3
push
mov
cli
repz
jbe
mov
repnz
sahf
and
movs
sub
jg
sbb
sub
jle
rcl
in
jnp
stos
xor
mov
arpl
dec
scas
aad
jmp
(bad)
and
shl
out
inc
daa
sbb
push
mov
std
push
xchg
jmp
push
inc
cmp
push
lods
push
jno
lock
mov
lds
jecxz
test
pop
cmp
cmp
mov
inc
imul
lods
pushf
jbe
mov
jno
repz
repz
cmp
cwde
mov
xchg
add
mov
jne
adc
out
dec
xchg
sti
popa
gs
xchg
dec
mov
inc
aam
mov
push
sahf
and
pop
lods
icebp
icebp
dec
ins
or
outs
xor
jnp
xor
lahf
adc
inc
shl
push
inc
inc
mov
ins
jp
cmc
xchg
pop
lds
mov
add
movs
push
or
cdq
rol
mov
and
daa
cmp
jecxz
mov
sbb
fdivr
cmp
test
jl
rcr
mov
cmp
fld
jmp
sbb
dec
sti
rcl
mov
mov
sub
fucom
pusha
enter
pop
pop
sti
lea
or
movs
shl
sbb
lods
test
cdq
jge
jae
cmp
shl
jae
add
add
inc
es
xchg
popa
aad
jp
jmp
punpckhwd
jnp
cdq
fdiv
dec
mov
push
shl
add
sti
idiv
pop
inc
dec
xchg
pop
push
inc
push
stos
pushf
sti
jbe
in
xor
(bad)
and
push
fs
jp
xor
push
or
cmp
mov
fld
inc
adc
push
imul
xchg
add
jecxz
(bad)
(bad)
aas
std
pop
lods
jg
gs
icebp
mul
sahf
lahf
cmp
and
sbb
jne
sbb
jecxz
or
hlt
bound
and
mov
fs
aam
xchg
lahf
cs
lods
int
push
aad
dec
inc
lods
fwait
pop
popa
sbb
adc
lea
and
push
sub
popf
popf
pop
dec
fnstenv
dec
inc
in
shl
int
pop
jo
add
mov
xchg
dec
fcmovu
cli
clc
adc
add
movs
push
pop
lods
cmp
xchg
mov
int
xchg
bound
in
js
push
fsubp
pop
enter
push
ds
(bad)
call
sub
outs
mov
pop
fisubr
movs
mov
out
add
push
mov
pop
add
sbb
push
mov
inc
mov
adc
into
icebp
(bad)
sbb
mov
(bad)
int3
sub
popa
in
dec
mov
retf
call
and
out
call
ins
(bad)
xor
shl
mov
jge
adc
mov
sub
cs
jmp
sub
popf
or
imul
pop
sbb
cmp
dec
inc
add
pop
(bad)
add
dec
out
fstp
sub
stos
in
daa
in
mov
dec
jo
(bad)
push
pop
shl
repnz
dec
xchg
(bad)
push
scas
test
and
popf
ins
mov
fdivr
ss
popa
cmps
in
cdq
inc
sub
lahf
test
mov
daa
mov
out
mov
inc
or
(bad)
sub
mov
loop
push
aas
sbb
xchg
dec
fst
test
(bad)
sar
mov
loope
mov
xchg
adc
jge
lea
(bad)
scas
ret
cmps
bsr
dec
pop
sti
jne
ja
out
aad
gs
jno
cmp
retf
sar
movs
push
test
enter
aad
lods
dec
xchg
in
sahf
and
dec
jnp
lods
loopne
cmps
pop
mov
xchg
cmp
dec
js
pop
div
popf
pushf
je
add
cmp
repz
repz
sbb
ins
push
add
shl
xchg
(bad)
push
popa
xlat
pop
or
and
xor
dec
lods
(bad)
xor
test
arpl
xor
cdq
data16
sub
stos
sbb
cmp
lahf
out
cmp
xchg
mov
int3
xchg
or
jle
mov
scas
xchg
or
sub
sbb
mov
stos
mov
lea
push
cmp
call
rcr
mov
or
loope
mov
fisttp
mul
push
xchg
test
jecxz
daa
add
adc
xor
add
push
repz
mov
imul
pop
sub
int
rcr
add
imul
sub
add
pushf
xchg
dec
add
ds
pop
ss
imul
mov
les
add
cmp
int3
inc
pop
es
pop
jns
add
mov
cs
enter
adc
add
and
push
repnz
adc
cwde
or
int
pop
rcr
ja
xchg
sbb
pusha
sub
shl
add
(bad)
and
(bad)
mov
cmp
in
fisttp
in
(bad)
(bad)
aas
out
jp
cmp
cld
xor
cmp
nop
popf
xchg
cdq
out
shr
mov
es
stc
cs
hlt
outs
xor
pop
movs
push
cmp
add
scas
add
out
ins
dec
adc
cs
test
add
call
hlt
cmp
cmp
ds
call
mov
push
jge
call
mov
or
out
jae
test
xchg
out
cmp
add
pop
inc
mov
ds
popa
shrd
push
sub
dec
cmp
lahf
jmp
sbb
cmc
fidiv
jmp
mov
sti
jmp
add
push
cmc
sbb
adc
je
push
inc
jns
push
mov
(bad)
and
xor
jmp
dec
ret
jecxz
jmp
nop
sub
pop
xchg
jecxz
std
rol
sub
sub
xor
xor
test
cdq
aam
adc
mov
icebp
mov
xchg
or
add
shl
or
mov
push
xchg
xchg
sub
or
call
mov
sub
les
in
and
or
popa
push
test
arpl
adc
jo
and
cmps
fdiv
scas
push
nop
int3
sbb
sbb
xchg
adc
add
adc
dec
inc
cdq
jnp
sbb
scas
scas
jl
popf
lea
and
add
sar
test
shl
cmp
nop
aad
xchg
gs
jb
ins
shr
pop
retf
shr
fwait
pop
and
cmps
inc
adc
jecxz
dec
mov
sub
sbb
std
les
loopne
inc
xchg
int
(bad)
xor
sbb
pusha
and
xchg
into
lods
mov
push
int3
fldenv
sbb
pusha
add
cmp
ins
xor
mov
inc
mov
dec
mov
pusha
dec
mov
xlat
xchg
jl
pop
and
xor
jecxz
push
cs
lods
enter
mov
sub
pushf
cmp
fdiv
sbb
ret
nop
adc
les
mov
adc
std
repz
xor
sub
lods
inc
and
sub
adc
sbb
adc
sub
cmp
pop
pop
add
mov
or
aad
imul
or
jp
(bad)
xor
xor
sub
add
xchg
jnp
rcr
bound
es
inc
(bad)
jmp
mov
dec
jge
mov
(bad)
shl
cmc
xchg
cdq
js
stc
lea
test
into
xor
ds
fistp
cmp
mov
jo
out
push
mov
cdq
mov
jb
into
adc
stc
aas
push
jb
sbb
dec
dec
jo
mov
adc
loop
mov
cmp
iret
push
rol
shl
movs
sub
test
cmp
fsubr
jae
hlt
adc
pop
das
jmp
and
push
je
lock
lea
cmp
lods
lahf
jnp
in
dec
adc
mov
pop
pop
or
add
in
(bad)
push
ds
push
and
mov
cmps
popa
push
icebp
or
into
and
pop
dec
cmp
popa
mov
popa
lahf
cmp
in
mov
dec
xchg
xchg
fdivr
sub
add
stc
dec
leave
xchg
and
fistp
dec
(bad)
sub
gs
inc
dec
in
jb
jl
or
test
push
mov
js
mov
jnp
cmc
outs
or
jo
dec
hlt
inc
xor
and
add
jmp
sbb
push
imul
stc
and
dec
dec
rcr
pop
dec
call
mov
stos
dec
inc
dec
popa
ds
xor
or
enter
es
mov
xor
mov
cmps
add
push
loopne
xchg
adc
mov
fmulp
bound
jmp
inc
sahf
mov
adc
mul
fwait
xor
popf
call
dec
and
rol
pop
sahf
sub
lods
shl
lds
jns
out
push
inc
mov
shr
xchg
loop
sbb
out
mul
inc
lods
retf
into
jnp
push
rol
pop
jae
stos
call
mov
(bad)
fisubr
add
xchg
scas
sbb
and
popf
jne
nop
jge
inc
xchg
push
cmp
pop
and
pop
add
mov
jp
ds
or
pop
xchg
jecxz
dec
mov
movs
mov
sbb
pop
popf
stos
stos
shl
(bad)
cmp
xor
sbb
mov
jmp
dec
push
xor
rol
sub
pop
fwait
pusha
(bad)
mov
pop
popf
in
fimul
inc
std
add
push
push
or
repz
add
sub
fld
add
and
mov
xchg
repz
inc
in
push
es
push
push
cmp
xchg
sbb
cs
adc
(bad)
jne
and
mul
adc
pop
and
mov
ss
je
xor
mov
jne
popa
in
rcl
gs
push
arpl
pop
mov
lahf
push
pop
cld
cmp
iret
and
imul
add
mov
lds
fmul
outs
in
fcomp
push
jne
or
arpl
xchg
or
mov
cmc
cs
fsubr
xchg
sub
cmovae
jl
ins
jmp
jae
cmc
movs
xchg
or
sub
sub
daa
into
bound
frstor
add
sub
enter
mov
push
sub
sti
mov
cwde
dec
js
fisttp
push
inc
cs
jg
jle
mov
mov
jno
add
or
mov
repnz
pop
ss
vpaddb
push
mov
sbb
dec
xchg
dec
addr16
lods
mov
fpatan
movs
xor
pop
daa
or
sub
pop
jnp
retf
into
bnd
movs
xchg
loopne
mov
les
mov
add
mov
mov
enter
xchg
add
xlat
sar
cld
xlat
pop
or
repz
mov
in
outs
cmp
mov
inc
mov
jnp
dec
push
xor
cmp
test
mov
xor
fisubr
inc
loop
aaa
mov
push
mov
xchg
mov
and
mov
mov
cmc
jnp
inc
loop
ds
or
mov
cmp
inc
call
fidiv
sub
jg
mov
fcom
or
nop
push
inc
or
dec
fdivr
xchg
sbb
and
push
es
lahf
jns
mov
mov
add
jb
mov
call
ja
fs
pusha
mov
adc
cwde
sbb
xchg
je
mov
or
adc
dec
and
mov
sbb
mov
je
ror
and
jo
outs
cwde
aas
je
leave
mov
mov
test
mov
repz
mov
cmp
stc
mov
jb
jns
cwde
mov
ja
push
enter
inc
ret
xor
mov
xor
cld
cmp
sbb
cmps
mov
(bad)
pop
fmulp
cmp
mov
aaa
repz
add
data16
(bad)
jmp
lods
adc
repnz
jecxz
sbb
(bad)
lea
mov
inc
jo
jge
xor
xchg
imul
jnp
les
aas
mov
scas
fild
jo
or
mov
mov
ret
loopne
ins
push
xchg
std
push
mov
out
test
mov
xchg
jo
rol
inc
icebp
clc
lock
mov
(bad)
aad
pop
cmp
jge
jge
adc
je
jecxz
rep
pop
jno
or
in
sbb
fnstsw
ret
xlat
xchg
nop
mov
add
cmp
adc
clc
mov
adc
data16
jae
pop
mov
dec
jmp
pop
add
pop
push
pop
dec
xchg
je
rcr
xchg
pushf
or
sbb
jno
xchg
xor
mov
int
(bad)
add
sar
mov
js
mov
stos
rol
push
(bad)
(bad)
in
(bad)
sub
lds
pop
xor
int3
adc
pop
loopne
mov
and
gs
iret
pusha
xor
adc
push
dec
jb
add
cs
adc
dec
mov
sti
sbb
sti
int
shl
mov
das
outs
or
enter
daa
fldcw
adc
stc
xor
lock
push
stos
lahf
cli
pushf
test
in
das
shr
cmp
jbe
(bad)
aas
fcomp
add
cmp
test
shr
loopne
rol
into
test
imul
inc
dec
ins
fisubr
cmp
inc
aam
cwde
stos
cmp
hlt
push
push
mov
fiadd
pusha
inc
leave
addr16
push
rcl
jne
cmc
test
xor
add
dec
jno
mov
imul
movs
dec
shl
out
sti
ins
xchg
shl
lods
hlt
sahf
mov
loope
loopne
out
jle
jle
adc
fisubr
lds
adc
xor
push
sete
add
mov
add
je
fmul
lods
in
cmp
mov
rol
mov
push
jb
cld
sbb
dec
inc
fwait
sbb
add
push
int3
shr
pop
mov
fstp
aad
cmp
xchg
cmp
aaa
mov
sub
fcomp
mov
idiv
in
mov
add
out
or
ja
call
pop
sbb
stos
fs
mov
popf
std
aam
sub
rcl
call
mov
xchg
mov
(bad)
xor
add
lods
sti
in
int3
dec
dec
adc
dec
mov
imul
pop
push
mov
mov
mov
stos
mov
sub
xchg
sbb
neg
or
(bad)
push
outs
mov
cmp
push
test
and
sub
test
and
sbb
test
in
retf
jns
pop
or
pushf
pop
iret
in
data16
mov
test
jp
(bad)
imul
shr
add
or
jbe
pop
addr16
or
daa
popf
fs
fwait
(bad)
jmp
xor
gs
jne
fstp
inc
jno
push
aas
std
in
leave
idiv
jge
hlt
pop
add
data16
movs
shr
pusha
bound
pop
dec
mov
or
jecxz
jmp
cmp
rol
rcl
sbb
das
leave
cmp
(bad)
cs
mov
push
ret
mov
sub
jmp
jp
push
mov
sti
adc
ds
ins
jnp
in
cdq
cmp
add
adc
pop
or
jno
pushf
mov
call
test
xchg
mov
cli
int
inc
daa
pusha
fidivr
xchg
icebp
lods
mov
sub
sub
int
sbb
mov
arpl
push
inc
pop
cmp
scas
mov
and
jmp
mov
jae
retf
and
pusha
data16
mov
fdivr
iret
push
jmp
pop
push
sar
add
push
sbb
test
repnz
stos
pop
and
cmps
or
into
mov
pop
and
test
or
data16
xor
mov
add
je
nop
add
in
ret
pop
cmc
mov
push
fstp
cmc
mov
bnd
pop
mov
inc
push
add
push
cmp
pushf
sti
xchg
xlat
loopne
inc
ror
jae
call
fst
dec
cmp
sbb
sbb
adc
pop
test
cmp
xor
out
pop
ret
add
xchg
fst
arpl
paddd
outs
mov
nop
call
dec
cmp
cs
(bad)
adc
in
jmp
ds
pop
adc
dec
aas
jb
dec
mov
adc
add
ficom
shl
sbb
neg
clc
and
pusha
mov
mov
mov
or
cmp
xor
sbb
sahf
push
fcomp
mov
sub
mov
mov
repnz
fidiv
xchg
lahf
pop
mov
pop
test
pusha
lds
arpl
cmp
ret
xchg
mov
int
or
dec
cwde
call
xor
push
push
dec
adc
ds
dec
push
inc
imul
mov
(bad)
adc
xor
xchg
ret
cld
or
ins
pop
test
icebp
sub
jmp
push
movs
sbb
mov
or
addr16
retf
pusha
int3
outs
push
sub
sbb
fmul
dec
xchg
sti
rol
push
repnz
in
fcom
xchg
call
in
mov
inc
test
jl
xor
int
mov
cmp
pusha
jle
cmp
ja
leave
fidivr
fwait
pop
retf
lds
ret
push
cs
xor
mov
jp
push
movs
stos
jl
rcr
stos
push
jl
iret
fnsave
mov
rcr
(bad)
data16
out
das
cdq
pop
out
idiv
pop
add
dec
inc
inc
and
ret
jg
mov
sbb
or
or
inc
mov
adc
xchg
xchg
(bad)
imul
or
mov
loop
cdq
repnz
sub
leave
fcomp
cld
or
out
cld
push
or
fs
(bad)
fcomp
ror
lods
sar
or
int3
inc
cs
int3
in
(bad)
mov
ja
test
inc
pop
in
retf
fidiv
mov
inc
add
add
mov
retf
clc
fnstcw
or
add
fcomp
jp
pop
stc
ret
xor
push
icebp
push
sbb
push
xchg
leave
pop
movs
mov
bts
dec
sub
mov
addr16
(bad)
imul
mov
push
inc
xchg
pop
push
ficomp
or
test
xor
pop
inc
sbb
retf
repnz
inc
or
ins
(bad)
mov
data16
jno
and
adc
test
pop
jecxz
push
mov
call
mov
lods
ret
add
icebp
cmp
call
iret
daa
in
stos
add
add
adc
and
movs
neg
jle
div
cmp
or
loop
(bad)
fimul
movs
xor
in
push
dec
xchg
mov
fcom
ins
movs
jne
xlat
fisttp
xchg
and
push
xor
mov
hlt
push
sahf
into
fwait
cmc
lahf
dec
push
test
mov
pop
lahf
cmp
jae
sub
(bad)
or
push
sbb
inc
mov
lock
pop
pop
sbb
push
mov
jae
inc
mov
inc
mov
jmp
sub
cmc
xchg
into
ins
inc
mov
and
cmps
fucomp
pop
scas
dec
xchg
xor
mov
fstp
test
jmp
xchg
outs
ja
sar
aaa
jne
ins
mov
nop
dec
or
in
stos
mov
mov
stos
inc
cli
jb
rol
rcl
cwde
mov
jp
jo
mov
lods
push
mov
xor
mov
das
mov
nop
jp
inc
test
jbe
push
pop
adc
retf
inc
or
sti
fidiv
test
daa
add
(bad)
int3
jg
xor
jle
xor
add
into
mov
bound
cmp
mov
sub
loop
sbb
xchg
inc
jne
repnz
dec
add
pop
cmp
dec
mov
aas
pusha
xor
leave
fisttp
dec
fdiv
mov
pop
fsubr
push
movs
and
sgdtd
pop
mov
jecxz
imul
and
add
lahf
jo
jo
shl
mov
and
rcr
push
stos
test
mov
cmc
(bad)
adc
xchg
cmp
push
push
ja
pop
sbb
push
mov
hlt
cmp
mov
inc
popf
or
mov
add
and
dec
inc
inc
push
xor
mov
cld
jae
in
scas
mov
in
push
jns
cmp
sbb
out
lods
ret
stc
dec
ins
(bad)
xchg
mov
jno
mov
fs
add
cmp
fdiv
xchg
mov
cld
pop
popa
sub
enter
int
dec
cmp
cmp
in
mov
cmps
pusha
mov
push
add
in
xor
add
aaa
jo
mov
pop
iret
or
push
ret
pop
pop
cdq
inc
cmps
ror
cdq
mov
mov
dec
mov
lods
sub
mov
fwait
int3
inc
test
mov
pop
rcl
or
outs
cmp
xor
fnstenv
cmp
jl
fimul
mov
push
sub
lods
or
out
lds
imul
mov
add
add
mov
pusha
mov
cld
std
xor
retf
(bad)
mov
push
rol
dec
sub
sar
cwde
cdq
shr
aam
fwait
mov
add
jmp
mov
(bad)
add
enter
add
dec
sar
es
neg
jns
ja
pop
lock
not
dec
outs
sahf
jnp
shl
(bad)
mov
push
push
fwait
dec
xchg
dec
push
pop
je
pop
push
push
xor
inc
sub
or
loopne
xor
lea
pop
mov
adc
fwait
xor
cmps
mov
or
mov
pop
(bad)
fnstcw
jle
dec
adc
jnp
cli
and
push
jge
push
aas
out
and
sbb
loop
test
or
add
lahf
test
xor
inc
mov
popf
fadd
sbb
imul
mov
aad
adc
sub
test
ds
push
fcomp
inc
(bad)
out
into
mov
out
and
imul
fnstenv
cwde
aas
pop
std
daa
ds
push
out
jmp
push
lea
add
mov
fdiv
pop
cli
sub
stc
add
(bad)
mov
scas
jno
or
push
or
jns
into
rcl
arpl
out
cdq
push
movs
int
aam
and
xchg
sbb
push
pop
sub
in
inc
cmp
push
and
out
and
jno
adc
dec
rcr
test
out
jbe
fst
xchg
dec
xchg
sbb
dec
ror
xor
ror
cmp
(bad)
cs
repz
fstp
cmp
jns
jmp
push
jle
xor
hlt
dec
(bad)
loopne
nop
dec
out
rcr
aad
cli
in
cwde
mov
not
cmp
and
sub
mov
pop
jns
mov
adc
lds
or
jns
jmp
inc
pop
je
sbb
fs
adc
pop
or
aas
test
clc
jmp
push
mov
rol
add
aas
xor
add
movs
fistp
mov
ds
aam
add
xor
loope
pop
fcomp
out
je
dec
sbb
out
sbb
std
sbb
loope
mov
jae
cmps
addr16
dec
out
inc
jnp
arpl
cmp
inc
dec
xor
push
mov
outs
test
jl
cmps
sbb
std
test
ret
mov
xlat
add
inc
push
push
mov
mov
fld
(bad)
ds
mul
fcmove
mov
stos
aaa
push
pop
mov
ror
and
push
cmp
lea
xchg
mov
jbe
leave
les
mov
inc
ja
push
je
in
add
push
jno
adc
adc
dec
aad
arpl
jp
sbb
in
jmp
cmp
clc
xchg
movs
int3
push
xor
xor
lods
xchg
mov
and
xor
mov
xchg
scas
or
mov
ficomp
jne
mov
out
imul
retf
(bad)
mov
pushf
nop
pop
cwde
out
(bad)
adc
mov
rcl
jle
enter
or
push
popa
push
pop
retf
lods
ds
mov
push
lds
cdq
mov
dec
les
lahf
test
sub
push
leave
add
(bad)
in
adc
movs
mov
(bad)
mov
stos
daa
mov
inc
add
jecxz
lock
pop
xor
xor
push
pop
or
cmp
inc
inc
adc
dec
sti
js
movs
adc
mov
inc
shl
mov
scas
shr
dec
mov
call
jge
fwait
push
jno
xchg
stc
dec
mov
(bad)
fistp
xlat
mov
push
inc
neg
adc
mov
adc
rcr
jae
dec
push
cmp
mov
jo
jge
mov
rcl
add
stc
ficom
mov
push
sub
clc
sub
xor
cmp
(bad)
int3
std
mov
sub
(bad)
sub
xchg
pop
push
mov
repz
push
or
retf
into
ror
adc
xchg
cmps
fdivr
xchg
push
int3
cmp
or
ss
in
data16
cmp
sub
lods
aas
jns
lahf
push
rol
xchg
mov
retf
jge
test
push
cld
cs
push
ret
jp
and
push
dec
xor
mov
add
sahf
xchg
mov
cmp
mov
xor
inc
out
aas
(bad)
iret
sar
call
pusha
or
pusha
jmp
mov
sub
outs
fldenv
mov
and
loope
sbb
inc
add
xlat
loope
and
stc
mov
mov
retf
aam
lods
mov
mov
pusha
push
xor
repz
xchg
inc
fcomp
int
sub
rcl
shl
in
cmp
mov
add
call
jg
or
aad
(bad)
jg
or
and
adc
and
xchg
jo
icebp
popf
sub
mov
and
mov
xchg
inc
rcr
or
in
aad
and
cmc
jp
shr
add
jae
mov
pop
jg
lds
dec
repnz
data16
pop
dec
jmp
lahf
sbb
lahf
add
and
iret
ret
xor
in
mov
imul
mov
add
sti
push
jl
and
add
fst
or
popf
add
into
mov
mov
cmp
jo
sbb
dec
imul
fs
mov
movs
mov
cwde
push
sbb
cmp
adc
add
xchg
inc
pop
ret
or
dec
xchg
push
ja
aad
fsubr
cs
push
fsub
adc
pop
nop
icebp
dec
not
lds
enter
ds
xchg
popf
xchg
dec
jnp
cmps
daa
push
(bad)
ja
out
xor
push
cwde
push
out
dec
fbstp
add
pop
add
add
add
cmps
ins
sub
and
pop
xchg
push
outs
fwait
mov
jle
xor
rcl
jg
mov
data16
gs
sahf
mov
jnp
xchg
out
test
xor
dec
les
nop
or
cld
mov
cmp
xchg
cmp
aam
in
mov
pop
es
pop
or
retf
dec
fs
mov
int
sub
std
stos
fs
aas
dec
jns
adc
jne
mov
call
cmp
fdiv
aas
nop
bound
sti
(bad)
es
outs
add
sub
add
add
cmp
jg
std
fstp
jl
aam
test
scas
out
out
mov
(bad)
jne
rcl
aas
sub
jge
mov
xchg
push
and
xor
div
mov
stos
retf
jno
adc
jb
jnp
mov
bnd
fist
mov
lahf
pusha
lds
inc
mov
aas
jp
call
test
cs
call
cli
(bad)
jmp
dec
(bad)
div
repz
add
into
push
je
je
dec
outs
(bad)
mul
mov
fimul
dec
pop
imul
aam
and
inc
or
and
enter
fs
shr
aas
sbb
(bad)
push
lods
inc
adc
test
xchg
add
add
aam
cmp
lock
cmc
xor
cmp
je
xlat
mov
out
mov
pop
(bad)
(bad)
push
cmps
je
stos
je
bnd
out
retf
movs
cmp
call
shr
shr
ins
dec
addr16
mov
std
dec
jbe
cmp
mov
imul
loope
adc
fimul
xor
and
out
aas
cmp
(bad)
inc
or
adc
pop
in
rcr
jne
lods
cmp
jle
lahf
in
push
or
sbb
jns
enter
pop
enter
cs
jae
ffree
jnp
call
sbb
sti
and
sbb
pop
or
sar
push
cmp
mov
lea
jno
rcr
pop
and
fnstsw
iret
mov
aaa
out
add
lock
std
mov
add
add
mov
repz
lahf
add
or
inc
cmps
xor
retf
test
push
imul
and
shr
out
je
inc
ror
daa
cmc
stos
push
call
retf
lock
call
gs
add
ret
xchg
cmp
shl
cmps
push
cmps
imul
int3
xor
mov
pop
pop
outs
into
sub
sbb
xchg
cmp
nop
jmp
add
push
jp
cmp
in
adc
cmps
inc
push
sub
(bad)
inc
sub
and
dec
or
loop
fwait
push
dec
scas
mov
cmp
mov
shl
hlt
stos
aaa
mov
jmp
pop
xor
data16
jns
sub
and
and
sbb
cdq
cmp
mov
add
out
jl
sti
stc
mov
fsub
fld
push
lods
mov
popa
sbb
and
pop
repnz
mov
jb
fnstenv
mov
xor
inc
jp
jg
pop
bound
fcom
mov
pop
lds
shl
cmp
out
xor
loope
mov
sub
mov
rcr
push
adc
xchg
push
shl
call
(bad)
popf
cmp
nop
sub
cmp
xchg
dec
mov
pusha
jl
aad
pop
test
pop
aam
test
xchg
in
test
inc
gs
or
pop
gs
dec
lahf
std
jo
push
mov
push
adc
sahf
data16
(bad)
fist
inc
hlt
call
jge
clc
mov
jge
and
pop
mov
jg
scas
aas
cdq
mov
leave
push
fild
push
add
mov
mov
out
(bad)
jb
cmp
push
sbb
mov
mov
xor
sbb
push
lock
jle
hlt
cmps
mov
in
inc
sbb
mov
imul
cmc
arpl
std
xchg
push
sub
add
dec
xor
fidiv
or
xchg
sbb
sub
sub
ret
cmp
imul
mov
in
fld
xchg
jb
mov
and
(bad)
es
inc
shl
adc
repz
(bad)
neg
js
repz
arpl
(bad)
scas
jp
sbb
addr16
lea
dec
xchg
add
test
pushf
imul
in
and
inc
out
push
or
and
add
xchg
pop
mov
cmp
pop
jg
daa
ins
outs
cmp
push
into
hlt
inc
fwait
dec
imul
mov
call
dec
mov
pop
dec
(bad)
lods
cdq
sub
pop
loop
xchg
mov
and
repnz
adc
dec
daa
sbb
in
xchg
mov
jnp
loope
repz
xchg
shr
ret
test
jle
lods
mov
addr16
pop
pop
je
das
and
stos
mov
cld
lds
sahf
mov
out
je
dec
push
psadbw
rcpps
dec
sti
sbb
adc
pop
sub
xor
test
push
add
cmp
adc
and
popa
add
addr16
lea
ins
fimul
sub
scas
sbb
lahf
(bad)
out
dec
out
pusha
cmp
or
in
(bad)
cmp
add
pop
push
bound
shl
cdq
js
(bad)
out
adc
shl
rcl
mov
call
daa
add
dec
pop
or
stos
retf
sbb
push
imul
scas
sub
push
pop
dec
sub
retf
pop
shl
xacquire
push
scas
xchg
imul
pop
pop
or
sahf
mov
push
sti
call
mov
mov
imul
test
ds
mov
std
pushf
jne
cld
jle
add
aas
lock
add
dec
mov
pusha
mov
sub
imul
mov
or
(bad)
push
arpl
jmp
cdq
mov
dec
enter
mov
out
enter
xchg
cmps
fwait
lods
(bad)
push
call
mov
sbb
je
add
inc
int3
mov
push
xchg
dec
pusha
or
in
dec
mov
or
retf
inc
loop
pushf
add
popf
(bad)
jl
jecxz
push
shr
sub
inc
cdq
jnp
cmp
in
xor
sub
shr
jne
mov
retf
popa
add
jae
in
pop
mul
(bad)
std
sub
xchg
add
mov
cmps
cmp
mov
scas
test
adc
fwait
in
mov
mov
dec
jne
pop
fnsave
sbb
test
mov
push
aam
or
cmp
(bad)
cwde
add
fst
stc
mov
mov
dec
add
stos
shr
sahf
and
jge
fistp
mov
jnp
jbe
sar
dec
movs
icebp
rcr
xchg
mov
mov
ins
push
test
add
ja
fnstsw
jge
imul
cli
ja
lods
in
and
add
add
xlat
scas
fidiv
jp
sbb
and
into
dec
xchg
cmps
ret
aam
loope
jp
in
jmp
scas
inc
pop
imul
repnz
test
add
jg
pop
and
aad
pop
pop
mov
or
pop
mov
fldcw
in
imul
fs
pop
(bad)
stc
and
cmp
cmc
test
imul
nop
xor
cmp
fidivr
retf
in
scas
mov
xchg
or
int3
mov
push
(bad)
fdivr
dec
jg
sti
mov
adc
loopne
adc
push
fs
or
mov
out
cmp
sub
into
adc
add
scas
dec
adc
xor
sub
jle
push
xlat
sti
add
scas
les
push
cdq
push
stos
jmp
push
xchg
push
sbb
test
das
test
jmp
mov
in
or
js
and
fwait
xlat
call
int3
pop
fnstenv
adc
js
or
jmp
and
dec
and
xor
ds
mov
aad
stc
cli
mov
mov
xchg
out
stc
ret
fs
xor
pop
mov
aas
jmp
outs
rcl
test
add
fcmovnbe
scas
pop
jbe
in
daa
or
or
cmp
jno
mov
mov
clc
cmp
lods
mov
xor
add
pop
mov
movs
pusha
sub
(bad)
xchg
aas
sub
test
lods
or
mov
inc
jns
and
pop
repnz
fsubr
add
dec
push
jp
inc
sar
push
xchg
sub
out
adc
pop
push
mov
xor
fcomi
jg
test
push
loope
cwde
and
popf
xor
mov
out
fdivr
pop
jns
cmp
aas
dec
inc
inc
ror
pop
lods
mov
mov
(bad)
add
xor
(bad)
adc
scas
test
hlt
retf
pop
push
ror
out
dec
mov
mov
sbb
sub
mov
addr16
xlat
jns
mov
fs
push
cld
and
adc
mov
pop
repnz
mov
test
gs
adc
out
jmp
mov
mov
loopne
push
and
cli
test
xor
dec
ds
or
loope
icebp
call
or
xchg
jae
mov
mov
neg
push
jmp
movs
cmps
repnz
jnp
mov
jmp
sub
add
adc
cli
gs
dec
enter
shl
bound
inc
push
inc
sub
jb
mov
(bad)
pop
icebp
fisubr
push
mov
retf
jmp
cwde
mov
stos
(bad)
jmp
cmp
pop
cli
dec
jp
sub
push
or
push
stos
out
mov
jle
test
cmp
ins
push
jae
pop
dec
out
popf
out
outs
pop
fbstp
ret
pop
mov
push
adc
das
movs
ret
push
cs
sbb
iret
push
aad
sar
sbb
xchg
fdivr
cmp
jne
aam
inc
sub
and
lahf
sti
ret
das
jge
sbb
sub
mov
mov
lahf
clc
(bad)
mov
outs
cdq
add
neg
(bad)
dec
pop
repnz
xchg
sahf
push
add
lock
mov
addr16
int
pop
pop
jbe
mov
in
sub
ins
and
fld1
out
iret
test
dec
ja
rol
pop
out
leave
mov
mov
inc
sbb
mov
leave
rol
inc
mov
inc
mov
or
aam
retf
sahf
imul
inc
sar
rol
daa
bound
xor
or
mov
dec
xor
call
fwait
pmaxsw
in
pop
es
dec
inc
jle
inc
mov
movs
and
push
jnp
out
push
jae
(bad)
hlt
clc
addr16
or
jbe
int
out
cld
fsubr
out
into
(bad)
fimul
jnp
adc
ror
imul
loopne
dec
sti
pop
cdq
fild
xchg
cmp
std
loopne
test
mov
push
in
lea
out
out
movs
adc
out
cmp
mov
ficom
dec
push
hlt
fucomi
sbb
adc
enter
mov
out
std
fcom
push
idiv
movs
add
rcl
lds
xor
mov
mov
xchg
stos
jle
call
imul
hlt
leave
enter
in
cdq
dec
and
aam
mov
pop
mov
xor
or
jb
aas
cmp
xchg
push
inc
xchg
hlt
xchg
xchg
push
test
aas
cwde
jbe
jp
xor
dec
or
stc
sbb
fwait
clc
nop
and
mov
sub
adc
jbe
jp
int
aas
jge
jae
cld
test
sti
and
dec
rcl
dec
add
mov
mov
jns
lds
mov
cmc
jo
and
lock
out
fmul
sti
pop
jp
mov
dec
pop
fnstenv
push
test
fadd
out
xor
inc
lds
xor
sub
arpl
xor
pop
pop
ds
mov
scas
sar
and
jle
rcr
hlt
pop
cld
jno
aaa
rol
pop
dec
stc
sbb
xor
cmp
sbb
add
into
fwait
(bad)
out
adc
cmp
push
jns
leave
push
and
inc
imul
in
dec
or
mov
jae
cli
mov
gs
xchg
icebp
sbb
add
fwait
xor
sbb
outs
pop
ficomp
ror
loopne
jge
inc
jno
sahf
stc
inc
push
jmp
fistp
stc
(bad)
out
mov
movs
mov
iret
push
dec
mov
inc
fmul
push
add
and
repnz
pop
(bad)
dec
cs
adc
test
arpl
stos
sub
ds
add
jle
dec
dec
dec
aad
clc
pop
cwde
jne
fmul
stc
cmp
ror
clc
popf
stos
es
xor
ds
popf
mov
gs
repnz
and
sbb
scas
(bad)
ss
stos
sti
jecxz
bound
sbb
popf
pop
stc
mov
js
fsub
std
mov
aaa
repz
pop
in
mov
test
or
rcr
hlt
ficomp
hlt
cld
xchg
mov
add
jno
and
dec
add
adc
mov
cmp
outs
mov
xchg
inc
sub
pushf
out
mov
movs
dec
jecxz
jbe
scas
enter
mov
sahf
mov
or
leave
sti
jo
xchg
shl
mov
and
out
jg
test
es
mov
mov
xlat
or
ror
jae
lods
xor
es
fnsave
jle
rol
hlt
aaa
jmp
idiv
in
call
addr16
mov
mov
pop
inc
div
sub
imul
push
test
dec
mov
inc
pop
or
fisttp
out
xchg
iret
jge
iret
mov
mov
out
ficomp
mov
inc
test
addr16
mov
not
test
push
or
lods
mov
nop
and
pop
shl
test
nop
jb
jo
pushf
adc
add
fild
inc
jno
mov
movs
ret
popf
mov
sub
sbb
cmp
sub
call
fld
sbb
cwde
rcl
jle
out
pop
imul
(bad)
retf
adc
ror
cmps
xor
sub
adc
cmp
add
pop
pop
and
mov
jbe
mov
xor
fmul
xlat
or
hlt
sti
push
inc
test
pop
sub
mov
in
ins
cmc
neg
frstor
mov
shl
or
xlat
mov
jle
iret
out
into
(bad)
mov
int3
dec
mov
or
jnp
ins
in
ret
mov
popa
push
pushf
(bad)
pop
mov
mov
jmp
cs
(bad)
sar
cwde
ins
mov
jle
mov
imul
adc
mov
fadd
stos
and
div
ror
(bad)
stos
cmp
mov
lahf
lock
xlat
setne
push
aam
xchg
(bad)
and
inc
aad
sbb
mov
enter
out
test
inc
loope
mov
stc
cli
les
shl
push
leave
mov
jne
leave
cmp
cmp
and
pushf
mov
pop
sahf
les
fcomp
mov
jg
cmp
sub
aaa
jecxz
call
sub
xchg
mov
fimul
mov
xor
(bad)
(bad)
sub
pop
mov
call
je
pop
test
jbe
mov
sbb
fbld
xchg
xlat
jae
ficomp
mov
loop
or
dec
cmp
(bad)
loop
inc
(bad)
das
push
push
cmps
in
js
out
cwde
bound
mov
lods
xor
jae
rcl
outs
mov
inc
movs
inc
iret
pop
jnp
pop
ins
jbe
test
test
jbe
pop
jnp
rcr
bound
jb
mov
jg
cs
jbe
pop
inc
push
shl
cdq
and
nop
mov
cmps
dec
push
ds
inc
jp
ror
cmp
hlt
sbb
pop
mov
int3
icebp
dec
mov
leave
jmp
int3
je
test
stos
cwde
and
mov
bound
shr
(bad)
fcom
push
cmp
dec
xor
mov
cmc
dec
jns
pop
push
cli
in
xchg
in
pop
cli
sar
test
cmp
and
mov
(bad)
adc
lds
mov
emms
dec
adc
xchg
mov
ja
jecxz
daa
fcomp
mov
xchg
inc
xchg
sar
cmps
mov
pop
and
int3
icebp
std
jmp
ud2
push
xor
push
dec
fs
mov
cmp
cmp
movs
mov
test
push
inc
adc
mov
stos
test
push
or
inc
mov
xchg
pop
cwde
xchg
add
mov
and
sub
cwde
out
call
jbe
lahf
(bad)
fld
jecxz
test
cli
adc
dec
sub
sbb
call
das
push
popa
pushf
repnz
movs
xor
rol
jnp
cmp
ret
(bad)
in
mov
jecxz
lods
mov
dec
fistp
push
test
arpl
test
push
popf
fsincos
(bad)
rol
xchg
dec
(bad)
ins
or
nop
sti
xchg
push
test
xor
int
dec
push
int3
call
cmp
(bad)
loop
outs
xor
xchg
jnp
mov
mov
ins
outs
pop
sub
sar
adc
clc
dec
or
(bad)
mov
sbb
dec
dec
loopne
pop
addr16
push
mov
mov
mov
cmp
push
in
add
ficomp
and
add
sbb
repnz
mov
dec
cmp
lds
mov
imul
cwde
cli
xchg
daa
push
enter
ret
xchg
or
rol
in
mov
and
jmp
and
jno
test
cs
add
rep
or
mov
mov
call
test
mov
mov
fcom
fcom
hlt
fcomp
or
xor
xor
div
call
leave
sbb
mov
retf
test
div
push
je
xor
(bad)
adc
xchg
cli
inc
mov
imul
dec
je
jbe
mov
push
outs
into
pop
push
cmps
dec
gs
dec
mov
dec
out
mov
xor
ror
mov
dec
int3
fiadd
cs
int3
in
js
cwde
inc
ret
aaa
sub
ins
fsub
xor
mov
repnz
pop
dec
clc
repnz
pushf
xchg
pop
cwde
call
mov
out
out
adc
test
mov
cmps
outs
leave
nop
daa
mov
jmp
enter
fsubr
mov
adc
xchg
in
mov
je
rcr
cdq
xor
loop
and
and
dec
add
rcr
dec
dec
call
adc
jns
push
or
xchg
daa
xchg
rcl
pop
cs
inc
jne
outs
mov
call
pop
inc
xchg
and
pop
mov
mov
push
mov
push
xor
sub
ins
cmp
inc
aas
cmps
mov
(bad)
sti
jbe
mov
mov
cwde
fdiv
inc
je
popf
cli
fistp
or
jmp
fidiv
cmp
inc
inc
pop
mov
sti
test
xor
or
mov
jmp
cmp
cmps
stos
mov
test
aam
and
mov
jmp
adc
icebp
loop
cmps
mov
cmp
dec
xchg
mov
mov
scas
xor
imul
fistp
cwde
or
aad
in
dec
cmp
cmp
sub
push
inc
adc
loope
clc
shr
stos
sar
sub
cdq
inc
mov
and
jl
stos
jmp
pop
fbstp
sahf
sbb
mov
push
addr16
mov
mov
sahf
cwde
ins
xchg
ret
(bad)
ins
(bad)
bound
mov
xchg
adc
pop
pop
(bad)
div
adc
into
dec
test
mov
jl
inc
loopne
jecxz
ret
test
mov
pop
das
mov
das
scas
mov
ficomp
and
cmp
rcr
in
push
push
scas
or
xchg
shl
mov
mov
out
dec
fist
xor
ficom
icebp
rcr
in
jmp
pop
push
push
fcom
lea
fsubr
push
xchg
and
in
adc
sub
dec
fcomp
mov
jno
aam
cmp
sub
in
xchg
jecxz
cwde
shr
lods
xchg
mov
les
mov
pop
mov
addr16
jl
or
pop
mov
and
add
dec
or
xor
mov
adc
sub
fsubr
push
sub
outs
mov
js
cmc
add
adc
lds
sub
inc
jl
pop
pushf
mov
je
dec
cdq
out
movs
(bad)
cmp
mov
loopne
jl
xchg
repz
xor
js
jecxz
inc
leave
pop
xchg
xchg
lods
addr16
repz
js
jbe
push
sbb
cli
(bad)
aam
dec
(bad)
xchg
pop
xchg
add
cmp
fild
jne
lahf
shl
fistp
add
ins
inc
and
mov
pop
out
(bad)
xor
xchg
sub
scas
lods
mov
xlat
out
sbb
clc
sbb
xlat
ror
js
cld
fadd
fs
mov
scas
inc
jbe
or
mov
push
inc
mov
fadd
lods
xchg
fidiv
cli
mov
push
sbb
test
aam
jmp
fsub
xchg
add
fwait
and
jbe
sub
push
cld
mov
xor
in
sbb
out
cld
dec
push
jecxz
push
cmps
mov
repz
in
and
call
pop
jp
cli
xchg
cwde
outs
dec
push
jbe
out
ror
idiv
(bad)
adc
sub
mov
mov
jo
rcl
and
fild
popf
mov
mov
lock
and
les
call
(bad)
int
mov
xchg
mov
mov
fiadd
mov
outs
xor
lods
inc
adc
mov
dec
xchg
repz
adc
adc
mov
ds
mov
out
jl
xor
ret
rcl
fadd
jb
or
pop
or
jl
out
and
fs
ja
adc
xchg
dec
cmps
jl
jl
mov
jno
hlt
fdivr
in
xlat
mov
add
pop
and
lea
call
mov
rol
xor
fmul
push
outs
cs
dec
loope
xchg
mov
sar
cmps
(bad)
js
jecxz
ficomp
sub
mov
sahf
mov
popf
and
icebp
test
push
fisub
scas
rol
push
add
xchg
push
add
call
sbb
dec
stos
fmulp
call
idiv
pop
in
push
lahf
xchg
add
and
test
enter
adc
ss
ja
fwait
pop
(bad)
call
les
mov
cs
xchg
xchg
(bad)
cmps
sub
push
scas
cmp
pop
push
jle
movs
mov
or
push
in
arpl
mov
gs
xor
dec
mov
les
mov
inc
and
movs
add
loope
or
sub
test
frstor
imul
pop
icebp
mov
outs
arpl
outs
sahf
mov
js
mov
xlat
add
repz
adc
xor
repz
pop
psrld
jmp
shl
call
and
div
sbb
sahf
mov
rcl
pop
mov
and
dec
xor
adc
adc
sbb
push
aad
test
arpl
fs
or
in
or
push
inc
jnp
xchg
mov
sahf
call
inc
repnz
es
mov
mov
adc
add
mov
inc
jne
sub
sub
fnstenv
outs
cmp
mov
xor
pause
inc
inc
jbe
cmps
retf
push
mov
les
mov
sub
iret
shl
dec
dec
jecxz
fadd
push
pop
popf
xchg
xchg
mov
retf
inc
(bad)
les
fcom
jb
out
fld
lods
sbb
ss
ret
addr16
movs
(bad)
sub
jb
out
pusha
loop
push
pop
cdq
(bad)
in
mov
xor
adc
nop
mov
xor
scas
mov
pusha
loope
jl
mov
or
jo
into
pop
das
fcomip
and
or
mov
or
and
nop
adc
ror
aas
fidivr
out
mov
push
cmp
cld
rcl
mov
push
mov
dec
leave
cmps
and
(bad)
ja
sbb
xrelease
mov
cmp
in
cmp
jae
jle
xchg
outs
dec
mov
cmp
mov
dec
js
mov
stos
aas
jns
sbb
sbb
jno
retf
xor
mov
push
push
(bad)
jmp
xor
cwde
sahf
fild
(bad)
sbb
jg
call
fcmovb
cmps
jne
inc
sub
pop
adc
cs
rol
lods
push
mov
sti
stos
or
mov
pop
sahf
fwait
mov
push
stos
iret
pop
push
adc
(bad)
int3
repnz
cmps
nop
sbb
das
mov
sbb
mov
jns
mov
dec
add
ds
pusha
mov
enter
mov
xchg
imul
push
js
and
sub
ds
fadd
pop
outs
sar
cmc
shl
cmp
cmp
mov
aas
js
push
jo
cwde
jnp
jns
int
(bad)
pop
inc
mov
lds
push
neg
ds
fdivp
cmp
ss
xchg
or
cmp
sbb
enter
pop
xor
xchg
sbb
mov
rcl
add
in
inc
sbb
and
push
gs
push
mov
dec
loop
dec
fisub
sub
dec
push
cmps
cmc
mov
popa
call
test
xlat
xchg
in
xor
push
repz
fnstenv
xor
cmp
mov
gs
ins
push
bound
xchg
in
imul
test
dec
in
jo
cdq
iret
ret
jae
pushf
lods
in
mov
mov
and
fcmovnb
repz
ds
cmp
sub
clc
test
push
push
xor
retf
dec
adc
xchg
lahf
cmp
iret
jb
dec
mov
mov
loopne
fbld
les
pop
adc
push
mov
int
add
sub
dec
outs
ins
aaa
fdivr
ret
cmp
out
jbe
adc
cmp
es
xor
mov
mov
mov
add
ret
sahf
ret
in
jl
(bad)
stos
loop
(bad)
in
mov
mov
nop
pop
pop
xchg
jecxz
sub
sub
jno
(bad)
dec
jmp
aaa
xchg
jp
jno
jb
inc
movs
fisub
std
sub
pop
adc
cmp
ja
jns
inc
imul
pop
stos
push
daa
lahf
mov
retf
xchg
cmps
or
test
cmps
mov
push
sub
jnp
mov
sub
outs
pop
xchg
dec
dec
or
jge
aas
mov
das
jne
mov
mov
mov
leave
clc
stos
cmp
mov
jnp
add
xor
mov
and
loope
dec
pushf
sub
dec
lods
jo
retf
adc
jp
pop
pop
lea
xlat
inc
sub
mov
aam
bswap
clc
(bad)
div
pop
fmul
sub
mov
mov
dec
dec
xchg
xchg
adc
and
sahf
lahf
ret
sub
inc
(bad)
fidiv
push
jecxz
lods
mov
and
arpl
aas
enter
push
push
mov
repz
cmp
mov
mov
cmp
fsubrp
psrlq
cmp
bound
ins
pusha
call
sbb
popf
ret
leave
pop
xchg
daa
jb
lods
int3
imul
jge
popf
jmp
sbb
push
dec
neg
sub
and
popf
sbb
std
adc
jae
pop
xchg
mov
pop
jl
nop
cdq
inc
xchg
retf
icebp
inc
and
fisttp
mov
loop
imul
and
jmp
paddsb
ja
dec
xchg
sbb
int3
test
mov
test
imul
push
cdq
out
sbb
fwait
neg
push
sub
cmp
xlat
dec
sub
fcmovnb
xchg
push
inc
lods
mov
out
cmps
sbb
jbe
push
cmp
push
aam
cwde
pop
inc
jecxz
fist
pop
xchg
mov
fs
leave
xor
ja
lods
cmp
into
jl
inc
(bad)
ins
push
inc
loopne
and
stos
mov
inc
daa
sar
push
sbb
lock
push
daa
popf
jg
(bad)
sahf
pop
and
loopne
test
pop
add
adc
push
push
or
(bad)
out
sub
daa
inc
xor
retf
cwde
and
movs
retf
push
fadd
cmp
ja
jbe
jmp
jmp
popf
(bad)
dec
je
(bad)
jns
test
outs
jne
sti
(bad)
pop
push
xchg
nop
jnp
imul
inc
mov
jbe
(bad)
or
aas
jmp
fimul
mov
push
cmp
add
mov
popf
lahf
mov
out
or
cmps
xchg
popw
in
sbb
ins
xor
(bad)
into
inc
and
or
jne
jnp
inc
mov
sub
mov
imul
lods
ret
mov
mov
adc
nop
repz
xor
xor
aam
mov
jle
or
les
dec
dec
jge
push
xchg
scas
mov
(bad)
fidivr
or
sbb
sar
shl
ins
xchg
lock
rol
push
push
ins
outs
xchg
out
xor
aaa
iret
aam
sub
retf
call
or
icebp
push
movs
push
aad
rol
lahf
test
inc
mov
xlat
fs
dec
jae
fwait
mov
enter
daa
xor
adc
iret
shl
test
lods
push
jmp
push
add
jge
and
xchg
out
arpl
cmps
(bad)
movsx
(bad)
(bad)
in
psubusw
cmp
cmp
pop
fisttp
es
rol
mov
or
cmp
mov
fwait
lods
xor
iret
xchg
cs
xor
pop
ret
test
int3
xchg
push
xor
jns
xchg
dec
les
adc
inc
push
outs
ins
dec
push
mov
or
es
loop
inc
in
push
pop
fimul
lea
xor
xor
clc
cmps
sar
sub
mov
cmpps
jae
fucomi
nop
mov
mov
jnp
mov
mov
into
push
popf
pmulhuw
jl
mov
call
push
retf
or
shl
adc
cmp
push
cmc
dec
cwde
mov
outs
(bad)
lock
xchg
rcr
aaa
mov
fwait
loope
sub
call
sbb
call
jb
aad
lds
scas
adc
adc
mov
or
mov
(bad)
xor
or
pop
push
fwait
cmp
es
xor
mov
push
cmp
ins
loope
lea
push
cmp
add
lahf
repz
push
mov
sar
das
cmps
xor
adc
(bad)
movs
push
jne
jge
fstp
out
ret
out
pop
push
xor
push
ss
loopne
jmp
mov
(bad)
xor
shl
mov
lods
mov
lds
adc
dec
pop
push
popf
(bad)
jne
out
in
cs
aaa
xchg
cmp
sub
into
mov
lods
push
jb
dec
in
ja
or
cmc
movs
popa
xor
jno
push
imul
jo
push
pop
ffree
inc
out
add
fstp
std
jl
mov
xor
fnsave
jns
fcmovu
fdivr
ror
es
pushf
xchg
lods
pushf
mov
mov
out
iret
sub
xchg
xchg
sub
xor
mov
fsub
not
rcl
test
les
lock
push
mov
pop
or
hlt
sbb
arpl
shl
jl
mov
push
nop
xor
mov
lahf
mov
repnz
push
push
jno
cdq
sub
mov
and
aas
xchg
arpl
mov
jmp
cmp
dec
ret
dec
lea
popf
cmp
aad
jbe
ficom
cmps
(bad)
jne
fsub
or
pop
leave
popf
fsub
cmp
iret
add
mov
mov
sti
pop
sub
pushf
addr16
scas
mov
xchg
cmp
jl
les
cmp
mov
push
repz
jecxz
mov
mov
inc
mov
or
and
push
or
mov
out
pop
mov
xchg
inc
test
push
repnz
leave
out
gs
mov
jae
fimul
and
dec
adc
mov
fcomi
mov
rep
outs
jne
xchg
jge
jnp
cmp
push
outs
push
enter
ror
icebp
mov
(bad)
(bad)
xchg
jmp
inc
and
das
add
sbb
fdivp
popa
idiv
dec
aas
loope
dec
icebp
push
jnp
mov
sbb
jae
adc
int
cdq
mov
cwde
or
inc
adc
add
rcl
sbb
mov
ret
imul
sbb
push
mov
pop
cmc
add
scas
push
dec
frstor
push
int
cwde
mov
xchg
rcr
test
cmp
shl
lea
jbe
ret
mov
cli
movs
jbe
test
jmp
fst
arpl
add
pop
cdq
mov
cmps
mov
cmp
sbb
push
inc
jp
(bad)
stc
mov
dec
fmul
adc
mov
out
daa
popa
cmp
aam
push
xchg
aaa
jmp
sub
mov
test
adc
icebp
mov
hlt
lds
mov
movs
inc
cmp
sub
(bad)
out
aas
inc
fcomp
inc
xor
pop
cmps
imul
nop
test
mov
stos
jb
mov
aas
mov
inc
push
jp
fwait
test
pop
jmp
out
and
jno
lods
mov
retf
add
xchg
into
xchg
inc
sub
cdq
rcr
mov
jbe
mov
pop
xchg
xchg
cwde
cmp
cdq
lahf
int
cmp
pop
hlt
dec
stc
pop
and
les
xchg
mov
fnstcw
mov
imul
adc
leave
sub
mov
(bad)
loope
mov
cli
pop
cmp
xor
sbb
stos
ret
pop
adc
pop
push
xchg
das
jnp
(bad)
jns
pop
aad
scas
test
mov
add
int
sbb
fstp
jns
(bad)
jl
sbb
and
aad
enter
shl
xchg
sub
push
push
inc
dec
leave
ins
les
pop
ja
mov
mov
shr
push
push
or
pusha
push
out
data16
dec
cmp
popa
pop
xchg
mov
imul
jle
test
(bad)
sub
mov
sahf
retf
adc
sub
popa
imul
rcr
pop
je
add
cmp
push
div
in
lds
mov
or
fwait
sbb
rcl
xor
int3
push
aas
js
mov
xchg
loop
loopne
(bad)
movs
push
enter
repnz
cld
pop
jle
inc
je
pusha
jg
fld
iret
xchg
add
and
inc
les
and
xor
loope
jmp
jle
loop
int
xchg
xor
inc
xor
call
or
or
inc
sub
pop
xlat
mov
xchg
adc
push
mov
adc
bnd
jg
stc
push
scas
repnz
add
xor
in
push
push
inc
cld
add
sbb
add
leave
jne
add
mov
repnz
pop
xchg
or
ins
xchg
adc
xchg
out
jecxz
add
pop
ds
push
add
pushf
add
jle
sahf
mov
or
mov
and
dec
add
pusha
gs
out
mov
fisubr
cmp
pop
jle
fdiv
inc
add
rcr
aas
addr16
pop
or
sub
sbb
mov
shl
jecxz
pop
ds
imul
mov
rcr
lods
xchg
pop
xchg
xchg
shl
xchg
push
cwde
cs
xor
cmps
test
js
out
fdivrp
clc
stos
in
(bad)
stos
jmp
test
xchg
(bad)
stos
out
jb
cmps
shl
shl
push
pop
sub
pop
test
xchg
or
xchg
or
dec
fcomi
ins
sub
test
jmp
mov
lahf
jecxz
add
adc
cmp
mov
fist
add
sbb
sub
enter
les
jecxz
inc
leave
loope
xchg
mov
mov
lods
test
(bad)
xlat
jmp
mov
inc
sub
mov
sbb
mov
gs
inc
push
pushf
(bad)
xor
cmp
jle
add
lea
sbb
push
ds
jns
in
std
test
pusha
pushf
sub
rcl
jmp
sbb
sub
mov
imul
jmp
pop
mov
pop
cmps
pop
ins
fneni(8087
pop
pop
mov
mov
push
arpl
fmul
adc
pusha
pop
adc
out
cdq
sbb
pop
ds
frstor
mov
das
cwde
arpl
les
mov
sbb
retf
inc
jge
pop
out
sub
sbb
lods
mov
ret
arpl
pop
or
sar
mov
pushf
add
mov
sbb
add
add
cmp
clc
sub
jl
jecxz
mov
cdq
int3
pusha
jge
or
nop
arpl
pusha
mov
or
stc
mov
xlat
mov
stos
cmp
jmp
adc
mov
inc
mov
imul
push
out
frstor
iret
lea
test
scas
jecxz
fldpi
ins
pop
rcr
aas
push
jg
push
jo
push
cmp
ds
adc
stos
add
pop
aad
cld
cmp
int3
adc
shl
arpl
das
clc
ins
xor
mov
scas
xlat
mov
jmp
jecxz
pop
and
jl
xor
adc
mov
test
into
add
int3
inc
inc
jg
xor
rcl
imul
test
push
jns
push
cmp
dec
lods
sbb
push
lods
and
mov
and
adc
daa
mov
cmp
pop
retf
pop
jge
push
sbb
ficomp
(bad)
pop
icebp
sbb
fdivr
cli
loopne
add
(bad)
arpl
ja
lock
popa
add
inc
add
(bad)
int
popf
dec
cld
aas
call
jmp
shl
sbb
sub
addr16
movs
mov
adc
fbstp
pop
cli
push
push
or
jmp
mov
in
fcom
and
mov
dec
ins
sbb
fnstenv
pop
pop
dec
push
loopne
push
test
or
add
pop
and
push
mov
or
addr16
mov
lock
mov
sub
fs
pop
cld
scas
js
jne
cmps
add
fs
pop
daa
and
cmp
push
test
mov
cld
mov
mov
sub
(bad)
movs
xchg
pop
fild
mov
xchg
bound
cmp
adc
aad
retf
sub
lods
icebp
ret
push
pop
push
push
sub
leave
dec
fwait
and
sar
xlat
aam
(bad)
in
jecxz
or
push
loop
pop
add
fcom
sub
adc
and
(bad)
cli
mov
xor
and
sti
ret
into
idiv
sar
sti
add
outs
inc
cld
cld
rol
cmp
mov
or
mov
mov
test
in
fwait
inc
mov
cmp
lahf
das
adc
call
add
inc
fld
out
sub
inc
cmp
repnz
stos
js
cmp
xchg
ins
leave
dec
(bad)
pop
add
pop
js
out
add
mov
scas
pop
pop
int3
loope
in
xor
test
out
aad
sahf
sbb
jnp
jne
and
or
add
sbb
push
pushf
cmc
stc
out
out
cwde
xchg
js
jns
jg
sbb
dec
clc
add
cld
repz
jl
xchg
pop
inc
pop
fs
mov
mov
fwait
add
add
mov
inc
and
test
hlt
in
(bad)
ret
das
(bad)
cld
pop
out
xor
mov
push
adc
cld
adc
push
shl
in
shl
fdiv
retf
ds
scas
int
jb
cmps
xchg
mov
(bad)
mov
into
and
lods
test
imul
push
nop
nop
add
ja
packuswb
adc
cwde
jmp
and
call
std
dec
fisubr
fld
mov
cli
(bad)
sub
jno
fcomip
lds
mov
sar
jle
call
push
pushf
sbb
pmulhuw
adc
idiv
pop
sub
test
in
pusha
dec
rol
and
adc
jl
and
add
jmp
add
inc
sub
xchg
mov
mov
jo
xlat
(bad)
jl
mov
sub
lds
(bad)
jmp
fcom
xor
out
adc
in
add
lock
sbb
pop
and
push
in
stos
loopne
xor
aas
rol
imul
iret
pop
cwde
xchg
xchg
leave
pop
mov
jnp
in
xor
and
add
adc
pop
jmp
scas
fldcw
mov
idiv
(bad)
adc
imul
ret
add
mov
movups
je
rcl
jp
in
jg
pop
(bad)
mov
clc
pushf
das
(bad)
int3
inc
lods
popf
jmp
ds
push
enter
xor
xor
outs
fbld
movs
outs
call
push
sbb
xlat
xlat
jmp
sti
mov
jmp
pushf
icebp
std
jno
mov
xchg
jae
test
mov
shrd
pop
cld
xor
rol
sub
lahf
(bad)
popf
imul
ja
or
out
enter
repz
outs
in
das
pop
adc
ret
out
lea
sti
mul
sbb
sbb
mov
and
xlat
daa
aas
test
stc
add
pop
inc
ss
aaa
add
fcom
add
dec
mov
cmp
hlt
aaa
jg
pop
jge
(bad)
mov
pop
and
mov
jbe
mov
adc
(bad)
les
das
mov
clc
(bad)
jecxz
mov
mov
fcomip
adc
fadd
mov
addr16
clc
out
out
cwde
cmps
fwait
add
js
fmul
adc
les
jns
cld
rcr
dec
xchg
add
mov
test
mov
adc
inc
out
(bad)
fsubr
popf
push
(bad)
jmp
inc
enter
std
push
(bad)
out
mov
mov
jne
add
jmp
nop
loope
ror
hlt
sub
js
fadd
and
mov
(bad)
jg
daa
and
das
test
mov
std
adc
pop
scas
fnstsw
fwait
jecxz
loop
lahf
mov
jge
stos
leave
mov
inc
repz
bswap
(bad)
and
or
pop
rol
inc
cmc
push
sbb
adc
mov
jmp
xor
add
mov
jbe
jmp
fstp
jmp
std
add
inc
lods
mov
push
rcr
vmread
and
jge
push
(bad)
pop
inc
cmc
aaa
test
pusha
loopne
test
or
loope
rcr
xchg
jo
scas
rcr
adc
mov
jno
jmp
leave
jl
mov
jp
lea
mov
cmps
add
das
adc
das
adc
enter
lds
arpl
pop
(bad)
cli
(bad)
add
pop
loope
ret
out
popa
and
scas
mov
jo
pop
popa
(bad)
scas
ins
icebp
iret
repz
(bad)
cli
pop
int3
clc
mov
inc
std
xchg
aaa
(bad)
mov
scas
sbb
sahf
pop
test
pop
call
or
sbb
xchg
adc
in
fs
leave
cmp
ret
nop
rcr
gs
xor
outs
mov
jg
mov
sbb
add
lahf
out
shl
jmp
scas
repnz
mov
sbb
push
jae
or
out
dec
cmp
jmp
pop
sbb
pusha
loopne
mov
push
sbb
lods
pop
mov
inc
mov
cdq
fwait
jae
pop
mov
scas
jle
cmc
cmp
xlat
ins
pop
fld
(bad)
jmp
fcmovnb
out
fsub
pop
call
xchg
test
mov
leave
loop
jle
add
fdivr
cmp
pop
mov
(bad)
test
ficomp
hlt
pop
div
icebp
stc
pop
sbb
sti
fcomp
sti
addr16
or
outs
in
mov
pop
jno
xchg
mov
xchg
outs
cld
lock
shr
in
add
xor
push
dec
pop
icebp
inc
ror
add
nop
xchg
push
cmps
std
jg
pop
xchg
adc
out
clc
or
xor
call
mov
jnp
out
fdiv
ja
hlt
mov
loope
pusha
or
adc
enter
fincstp
jg
popf
pop
js
push
inc
dec
ficom
xor
movs
dec
rcl
imul
push
not
xchg
sub
pushf
sub
add
ins
nop
sub
sub
push
xchg
push
dec
xchg
mov
mov
enter
sti
out
jge
out
jae
dec
outs
into
cmp
pushf
movs
lods
shl
test
mov
push
int3
dec
mov
ss
mov
adc
scas
ja
out
(bad)
loope
shl
mov
in
movs
mov
imul
jbe
lods
fnsave
sub
into
cmp
xchg
outs
fimul
int3
dec
inc
pop
cmp
sbb
movs
in
xor
call
in
sbb
xchg
cld
mov
idiv
adc
ja
ins
add
push
std
ficom
sti
ret
cmp
(bad)
rol
mov
fild
les
pop
xor
rep
imul
or
fs
daa
or
add
iret
neg
not
leave
aam
sbb
xor
adc
not
or
jmp
stc
leave
push
lds
xchg
aas
inc
mov
mov
out
rcr
fld
adc
ins
pop
mov
dec
add
dec
mov
or
shl
mov
lea
jmp
aaa
sub
lods
push
pop
clc
cmp
sub
and
lock
int3
xor
xchg
jle
pop
or
cmp
fdivr
cmp
xchg
lea
mov
fwait
out
aas
add
mov
pop
not
ficomp
cmc
fadd
fwait
xlat
call
cli
mov
mov
and
sbb
jl
divps
movs
mov
call
sbb
inc
dec
sbb
xor
mov
outs
shl
and
xchg
cmp
and
(bad)
jl
jne
mov
pop
lods
mov
iret
(bad)
mov
adc
cmp
jmp
mov
or
adc
mov
out
cld
jecxz
pop
sahf
aaa
pop
and
clc
adc
cmp
sub
add
call
add
ins
pusha
test
push
push
scas
or
mov
adc
sar
pop
fcom
mov
and
test
mov
pop
(bad)
push
call
and
aam
mov
jp
mov
jp
out
out
hlt
push
mov
cmp
int
mov
push
test
int
xor
jbe
sub
rcr
xchg
xor
sub
jp
xchg
push
movs
inc
arpl
js
pop
fiadd
cmp
pop
aas
fild
aas
cmp
test
and
ins
and
pop
ror
fcom
(bad)
jmp
inc
xor
xchg
int
pop
in
xchg
rcl
stos
test
ja
int3
xlat
jl
inc
clc
rol
ds
push
mov
push
aam
push
outs
jmp
out
stc
data16
in
test
push
je
cs
cs
popa
sar
inc
mov
mov
mov
mov
or
or
loope
mov
arpl
fadd
cmp
sahf
outs
cmp
imul
je
jge
rcr
syscall
out
adc
push
imul
or
sti
adc
xor
(bad)
repz
cli
pop
push
cmc
cmps
push
xor
sbb
xor
mov
sub
jo
push
push
mov
popf
xchg
dec
iret
inc
sbb
test
dec
out
jmp
fs
fadd
fsub
test
lods
pop
jl
xlat
adc
mov
dec
inc
cmp
xchg
dec
sahf
mov
outs
push
and
lahf
popf
test
jl
push
popf
scas
lea
in
retf
sar
jmp
sahf
cmp
mov
(bad)
mov
push
ss
arpl
call
cmp
das
sbb
dec
int
pop
mov
test
or
test
xor
sub
mov
(bad)
fwait
test
jge
jmp
jmp
jg
fsub
mov
retf
adc
mov
mov
ins
xchg
pop
mov
push
cmc
(bad)
xchg
dec
je
pop
outs
out
push
mov
in
push
fistp
out
les
mov
(bad)
cld
cmp
add
test
xor
sbb
arpl
pop
push
push
mov
push
adc
dec
adc
iret
icebp
shr
xor
test
clc
repnz
mov
daa
(bad)
lods
std
aam
push
mov
call
push
jne
cmp
mov
mov
pop
push
inc
mov
es
xchg
mov
xchg
js
dec
mov
retf
jno
(bad)
jmp
(bad)
jle
pushf
xchg
std
sahf
push
cli
cwde
pop
xchg
daa
push
inc
out
or
(bad)
adc
xlat
sar
aas
pop
les
test
(bad)
adc
add
bswap
dec
inc
fstp
inc
fucom
sub
arpl
dec
mov
out
adc
fild
xlat
sbb
cmp
jne
sub
jbe
jp
in
adc
stos
bound
sbb
mov
mov
add
mul
ror
lock
or
mov
jp
aaa
das
icebp
sub
lock
cwde
shr
(bad)
mov
pop
shr
nop
sar
div
push
xlat
jl
test
call
fdivr
ins
add
jge
lods
jmp
aas
in
(bad)
stos
mov
imul
ret
mov
add
fisttp
cmc
dec
xor
cli
dec
hlt
std
in
mov
mov
into
mov
in
test
(bad)
sub
pusha
sbb
(bad)
cdq
lock
xchg
jle
xor
in
aaa
jp
fcom
cs
rcr
inc
push
jnp
in
scas
bound
xchg
jg
mov
pop
cwde
jg
loopne
pop
pop
in
mov
int3
leave
stc
jae
loopne
push
mov
adc
mov
sub
mov
mov
mov
jnp
(bad)
mov
add
pusha
add
lea
bound
pop
out
mov
shr
pop
icebp
mov
ds
cld
lar
inc
jae
mov
push
mov
cmp
jne
movs
jle
(bad)
mov
aad
mov
xor
retf
sahf
stc
cmp
test
pop
mov
int3
mov
lods
test
fild
mov
cld
loope
jl
lahf
popf
jge
(bad)
jmp
fs
sbb
inc
jns
sub
(bad)
cmp
nop
pop
jge
mov
inc
and
jmp
jg
pop
repnz
push
daa
or
push
into
jg
pop
inc
sti
ds
cmp
add
std
ds
cmp
jmp
sbb
icebp
pop
dec
jmp
pop
repnz
std
push
sar
dec
adc
aaa
fdivr
jecxz
mov
push
cmps
loopne
(bad)
stc
mov
jns
push
mov
fwait
mov
cmp
mov
xor
ins
push
and
ss
ins
pusha
stc
push
std
dec
pusha
scas
add
popa
loopne
repnz
retf
arpl
mov
cmp
xlat
mov
int
mov
test
ja
out
leave
xor
jmp
xchg
mov
pop
xchg
fwait
repz
idiv
icebp
retf
or
mov
lds
arpl
sbb
bsf
and
push
out
aas
gs
mov
ss
ins
add
popa
pop
add
pop
dec
ret
rol
imul
sti
pop
xor
ret
iret
addr16
aas
fst
lock
jns
movs
cld
fnstsw
dec
repz
cwde
push
gs
cs
jnp
cmp
push
jae
mov
mov
push
add
fwait
sbb
inc
repz
dec
pusha
cli
pop
sub
ja
ds
pop
xor
lock
or
sbb
aad
jecxz
add
rol
icebp
test
call
call
jg
imul
clc
xor
pop
sti
je
cmp
repz
jge
adc
cmp
in
pop
pop
fdiv
cld
jecxz
sub
xchg
push
repz
retf
out
push
repz
(bad)
rcr
pop
dec
fadd
dec
push
sub
mov
rcr
std
lds
inc
in
push
or
js
das
bound
popf
or
inc
or
add
arpl
aas
setbe
(bad)
mov
imul
sar
sti
(bad)
adc
mov
out
push
jae
fdivr
jb
int3
aas
sbb
lfs
jbe
imul
jno
lds
iret
fwait
aam
xlat
test
sti
mov
fcomp
push
mov
fdiv
push
je
test
std
lods
ficomp
and
add
sbb
jo
mov
(bad)
and
mov
cmps
shl
mov
cld
mov
nop
test
inc
hlt
loop
repz
imul
outs
xchg
sahf
fld
mov
das
fdivr
push
mov
icebp
jecxz
mov
xor
mov
in
lods
test
jge
(bad)
out
iret
push
inc
fild
mov
jg
aad
mov
xchg
xchg
inc
mov
out
cmp
js
or
pop
xor
dec
sub
mov
pop
rcl
bound
pop
scas
scas
lods
sahf
mov
pop
adc
popa
loopne
add
stos
fistp
jns
mov
outs
inc
xchg
pop
mov
or
jb
leave
inc
(bad)
or
and
loope
or
cmp
sbb
jb
cmp
mov
or
sub
pop
data16
in
mov
mov
mov
hlt
leave
push
and
inc
jmp
mov
loop
pusha
shl
cmp
pop
push
jb
icebp
aas
add
inc
retf
sbb
push
test
mov
push
hlt
(bad)
sar
fcom
out
pop
pop
(bad)
data16
jmp
jmp
mov
dec
inc
pop
push
cmps
mov
mov
pop
xchg
mov
(bad)
xchg
mov
dec
mov
mov
mov
sbb
fisubr
mov
lods
xor
test
add
xlat
ret
lods
bound
hlt
inc
push
leave
ficomp
pop
dec
xchg
out
(bad)
lahf
inc
jecxz
int
out
cmps
data16
inc
iret
xchg
and
add
dec
dec
sbb
lahf
(bad)
cld
xchg
xor
test
adc
imul
stos
adc
mov
jno
outs
cld
lods
ret
or
call
xor
pop
ret
repz
popf
stos
aad
movs
stc
inc
pop
sub
mov
scas
stos
rcl
aaa
das
fwait
push
xlat
fs
mov
inc
iret
dec
(bad)
dec
iret
jnp
repz
ss
xor
fistp
je
xlat
test
popf
lods
icebp
mov
adc
(bad)
xlat
mov
fiadd
popf
in
in
sub
mov
popa
and
sub
in
int3
std
in
jge
mov
pop
cmc
mov
fistp
enter
pop
pop
in
mov
fdivr
sar
retf
les
sbb
stos
and
and
mov
cmp
call
mov
dec
stos
xor
repz
ficomp
outs
xchg
sbb
mov
pop
lea
jne
sbb
jge
add
mov
inc
inc
mov
cmps
xchg
pop
adc
add
adc
jmp
add
loopne
stos
and
and
xchg
add
mov
call
mov
pop
in
jge
push
jp
into
scas
fcomip
js
cmp
test
rol
movs
or
shl
mov
hlt
jl
popf
(bad)
and
mov
outs
aas
imul
add
cmp
lock
push
popf
out
mov
ds
test
movs
ins
xor
push
popf
xor
adc
mov
push
pop
call
inc
mov
mov
pop
push
lahf
jmp
push
div
push
jbe
out
xor
or
push
loopne
loop
movs
lock
or
dec
adc
shr
lds
int
mov
push
xchg
lods
dec
jbe
fidiv
jnp
add
ffree
call
lods
loopne
and
daa
push
in
rcr
pop
push
repnz
or
shl
sbb
jmp
clc
lahf
movs
ins
ror
fidiv
xchg
xchg
lock
fmul
mov
xor
call
mov
jle
adc
lahf
out
ds
cli
pop
sar
or
push
lods
pop
test
int
adc
sbb
pop
out
inc
pop
xlat
pop
jl
inc
mov
fstp
xchg
mov
out
shl
test
into
in
call
jmp
adc
enter
or
add
addr16
lock
or
xor
ficom
repz
xor
mov
dec
cs
cld
inc
(bad)
int
dec
repz
xchg
sbb
mul
cmp
push
jmp
(bad)
ds
int
fwait
xchg
sbb
icebp
fist
(bad)
mov
push
cmp
mov
ins
sar
imul
(bad)
div
pushf
dec
sub
inc
add
aaa
cmp
out
or
fist
movs
fcmovnb
jb
or
sbb
sub
push
repz
add
movs
or
mov
inc
movs
sbb
fiadd
dec
mov
aam
ins
mov
mov
fcom
les
jecxz
cld
pop
retf
fdivr
jg
sbb
pusha
in
sbb
jnp
mov
aaa
mov
dec
and
xchg
mov
sbb
adc
mov
js
lahf
mov
dec
pop
ja
sbb
pop
cs
mov
sar
fisub
mov
mov
jno
pop
imul
pop
sbb
jg
mov
imul
xor
neg
(bad)
mov
out
mov
push
jl
pushf
xchg
jecxz
jp
or
das
dec
add
lds
fisttp
rcl
outs
cdq
jae
cmp
(bad)
mov
mov
xlat
push
call
push
xor
sti
mov
imul
(bad)
push
mov
enter
daa
in
mov
jb
call
aas
int
out
ds
fdivr
call
jle
mov
mov
xor
cld
mov
xor
jg
cli
out
fisubr
ja
fucom
jp
ds
jno
out
js
fisub
arpl
and
scas
aaa
dec
xor
test
lds
in
cdq
pusha
inc
out
mov
mov
out
daa
cmc
xor
test
sar
adc
lahf
mov
fld
adc
ja
rcr
test
cld
lods
clc
jns
mov
mov
stc
adc
shr
push
fild
lods
lods
cmp
jge
fsubr
les
adc
sahf
inc
fldenv
test
les
clc
inc
int3
or
or
sar
enter
pop
xor
in
mov
ins
(bad)
or
mov
mov
inc
clc
retf
or
mov
mov
pop
pusha
lods
lea
pop
out
into
add
xor
mov
dec
data16
fild
mov
pop
shl
dec
push
push
es
push
int3
jl
test
es
neg
aas
outs
call
in
jno
loope
sub
addr16
adc
ja
adc
xor
jmp
rcr
iret
(bad)
xchg
ret
and
fisubr
add
out
fwait
scas
aas
ret
lock
(bad)
(bad)
push
out
inc
jns
mov
dec
jl
rol
cmp
xor
aaa
xchg
enter
xor
push
les
or
nop
lds
fcmovb
cmp
jne
pop
push
push
mov
sbb
out
sbb
mov
int
icebp
fstp
hlt
push
fistp
aam
das
push
cmc
retf
xlat
mov
mov
inc
das
cmc
mov
es
cli
pop
ins
xor
pop
(bad)
shl
mov
out
push
ficom
les
jno
sti
fst
je
hlt
ror
cmp
icebp
dec
xor
loopne
add
mov
inc
and
retf
imul
mov
push
mov
popa
lea
mov
dec
popa
js
jecxz
in
jo
out
ins
(bad)
int3
dec
adc
out
(bad)
fst
sub
xor
(bad)
mov
cmp
inc
pop
jecxz
test
pop
xchg
fcomp
mov
inc
mov
lock
fcmovbe
fistp
or
sahf
mov
mov
mov
js
out
loop
neg
cli
mov
das
(bad)
lock
or
rol
inc
cmp
add
mov
arpl
fwait
shr
xchg
inc
mov
adc
(bad)
imul
jb
jle
daa
pusha
fild
into
out
mov
dec
aam
outs
or
or
xchg
scas
cmp
dec
je
xlat
fldenv
loopne
jb
out
mov
(bad)
push
jnp
mov
pop
inc
cmps
mov
mov
imul
popf
add
mov
cmps
inc
and
inc
xchg
or
mov
inc
lds
ror
clc
sbb
lods
push
mov
dec
rol
pop
sbb
xlat
lahf
xor
aam
pusha
jg
fiadd
jecxz
mov
les
pop
rcl
cld
ja
or
mov
rcr
(bad)
pop
enter
or
mul
nop
cmp
jl
les
cmp
sbb
push
lods
es
push
scas
in
in
(bad)
in
mov
js
(bad)
xlat
inc
(bad)
jp
dec
aam
es
cmp
jmp
cs
add
push
sbb
(bad)
stos
mov
fwait
mov
jmp
lahf
cmp
rol
and
and
ins
mov
test
fist
cmp
rcr
(bad)
(bad)
push
add
in
dec
mov
ja
jae
ja
xchg
in
out
enter
mov
in
ins
inc
xor
int
inc
or
push
mov
push
mov
mov
cmp
scas
(bad)
mov
jge
fptan
cmps
rcl
iret
inc
mov
scas
cwde
jp
cmp
xor
stc
or
data16
popf
xchg
mov
cld
inc
ds
je
fs
adc
nop
(bad)
inc
repz
mov
repnz
idiv
sbb
pop
jecxz
stos
cmc
fdivr
mov
xchg
in
leave
jns
mov
adc
aas
push
addr16
ins
mov
aaa
mov
sbb
mov
mov
hlt
ins
add
outs
cmp
popf
dec
dec
sbb
daa
mov
outs
fistp
ins
pop
xor
in
jmp
cmp
cmp
repz
mov
outs
mov
add
shl
jno
or
push
jno
pusha
jmp
dec
lds
jle
xor
and
or
mov
inc
mov
or
dec
xor
stos
fild
xor
sbb
std
aad
or
call
das
inc
into
out
test
xor
repz
and
sbb
dec
sbb
bound
or
daa
(bad)
pushf
xchg
xor
movs
xor
retf
lds
cmp
mov
jb
fadd
push
inc
ins
jg
sahf
mov
cmp
sbb
cmp
pop
mov
inc
pusha
add
pop
push
lahf
mov
repz
mov
cwde
inc
sub
addr16
cwde
mov
pop
pop
aam
xchg
aaa
pop
stc
popa
hlt
cmps
lahf
push
jmp
or
clc
pop
(bad)
jecxz
xchg
adc
and
or
mov
jbe
stos
out
call
cmps
push
clc
lock
mov
mov
outs
push
xor
xor
int
inc
push
dec
(bad)
in
popa
pop
fsub
loope
inc
push
xchg
cwde
or
addr16
xlat
nop
es
push
ret
sbb
mov
or
jecxz
push
punpckhdq
fild
(bad)
sub
pop
inc
std
mov
aaa
inc
mov
push
lock
push
rcl
shr
movs
out
sahf
cld
pop
xchg
mov
jg
repz
push
in
aam
push
push
sub
mov
clc
mov
clc
cmc
leave
xor
in
xchg
into
xor
xchg
add
movs
ins
xor
cmp
mov
data16
lea
jg
out
cmps
ds
bound
fst
jb
mov
pop
xchg
mov
xlat
(bad)
in
jo
addr16
call
gs
sahf
jp
xchg
xchg
jmp
out
repz
jae
js
fdivrp
into
or
pop
or
test
jecxz
adc
push
aas
js
dec
mov
outs
mov
push
sbb
jp
and
arpl
fwait
loopne
add
dec
adc
add
cmp
cmp
lds
rcl
pop
pop
sub
fs
mov
(bad)
jbe
mov
pop
mov
stos
pop
out
mov
mov
xchg
gs
push
jb
out
ficomp
jg
int
int
inc
xchg
adc
(bad)
mul
mov
icebp
cmp
xor
jecxz
adc
pop
jnp
call
add
mov
loopne
pop
outs
inc
imul
inc
ja
adc
cli
jge
cmp
xchg
xchg
cmp
mov
in
push
clc
jbe
sub
or
add
mov
ja
pusha
imul
fcom
pop
(bad)
call
shr
ror
(bad)
mov
daa
fst
fidiv
not
iret
scas
aad
(bad)
jmp
je
scas
adc
pop
in
imul
jnp
lods
jmp
sub
out
neg
dec
dec
mov
scas
cmps
sar
mov
xchg
mov
sti
cmp
in
rol
xor
(bad)
mov
mov
pusha
or
fadd
lds
pop
ins
loopne
pop
js
add
cmps
rcl
pop
cmps
scas
fs
jmp
mov
test
cmp
lods
dec
jbe
jnp
sti
dec
push
sub
icebp
hlt
mov
aam
sub
jae
jne
fsubr
cmp
lahf
fs
xchg
pop
rcl
idiv
adc
int3
aas
push
in
xor
jne
(bad)
outs
mov
sub
fsubr
dec
sbb
xchg
adc
outs
out
mov
ins
xchg
xchg
sbb
jo
dec
ja
(bad)
es
pop
fiadd
imul
(bad)
jne
rol
jp
add
pop
popa
add
push
je
sbb
cmp
ror
jp
pusha
shl
ins
push
ret
adc
cmc
out
retf
fild
in
sahf
xlat
and
push
pop
scas
stc
cdq
xor
sub
sub
fbld
jno
xor
jecxz
mov
(bad)
out
rol
push
mov
call
jae
cmp
retf
call
add
in
xchg
jle
dec
xchg
mov
xchg
xor
inc
in
popf
add
js
mov
sub
in
jno
loopne
sub
jns
xchg
or
sbb
(bad)
pop
fsubr
add
int
jae
mov
pop
pop
inc
mov
fsub
sahf
fs
mov
add
cmp
pop
test
in
cmp
pslld
aaa
stos
scas
xchg
into
stc
push
jmp
cmp
(bad)
ja
cld
scas
push
fsub
jno
stc
out
mov
push
mov
cs
and
jge
jb
aam
movs
adc
cmp
mov
popa
pop
mov
jo
subps
cmp
nop
mov
fs
sbb
adc
test
int
or
sti
div
pop
or
(bad)
jp
loopne
popf
sbb
pop
je
add
loopne
xchg
aam
cs
or
sbb
arpl
popf
fs
int3
jmp
inc
add
je
loopne
push
cmp
cmc
dec
in
lahf
loopne
scas
test
mov
les
cmp
nop
es
sub
and
or
and
add
sti
or
rcl
loop
lods
movs
stc
aas
(bad)
rcr
dec
push
mov
loop
inc
push
inc
dec
fcomp
out
bound
pop
out
jnp
mov
rcr
scas
out
ret
xchg
call
cmp
aaa
(bad)
sub
scas
inc
adc
jae
mov
jg
dec
or
lahf
out
push
mov
mov
pop
icebp
rcl
out
fld
aaa
aaa
mov
mov
out
xchg
(bad)
sub
cmp
ins
sar
stc
pop
pop
adc
ret
sbb
call
inc
cmc
sub
cmp
lds
iret
(bad)
repnz
loope
aam
add
cmc
sahf
and
jb
iret
xor
adc
(bad)
mov
popf
adc
add
imul
imul
scas
rol
mov
jbe
sbb
dec
test
ds
(bad)
je
retf
lock
jae
sbb
scas
dec
xchg
mov
mov
pusha
pop
fdivp
add
fs
add
pop
sbb
ja
xlat
push
repz
mov
enter
jbe
scas
imul
sahf
fbld
jge
jne
aam
imul
icebp
jnp
or
jp
arpl
jp
rol
call
das
fistp
sub
call
sbb
jo
fidivr
push
mov
addr16
icebp
lahf
mov
sub
mov
aas
loopne
bound
jle
cmp
cmps
xchg
loop
mov
loopne
add
inc
push
pop
mov
or
inc
hlt
jns
aaa
mov
out
or
sbb
sbb
jmp
dec
jp
jmp
jp
push
popa
lock
aaa
and
mov
mov
cmc
ss
jecxz
psllq
(bad)
std
mov
ret
jecxz
int
mov
loope
(bad)
mov
push
mov
outs
mov
cmovp
push
xchg
js
xchg
dec
adc
xor
scas
sbb
paddusb
add
fdiv
cld
cmps
or
fdivr
lods
mov
pushf
sub
push
pop
imul
cld
aam
paddb
mov
xchg
mov
es
inc
(bad)
push
push
push
sbb
or
cmp
fcom
cld
or
add
cs
cdq
dec
jb
std
pusha
cmps
mov
arpl
dec
or
pop
std
and
jl
ds
adc
js
push
test
dec
or
arpl
mov
clc
shl
mov
call
repz
jmp
loopne
mov
mov
sub
sahf
fbld
das
cmp
jno
repnz
repz
jl
sti
inc
sbb
std
loope
pop
les
sbb
cmp
and
clc
ror
sbb
and
lock
push
xchg
add
or
in
mov
sbb
int
std
sbb
add
neg
iret
xor
dec
xchg
and
arpl
cld
jmp
data16
dec
int
jl
cmp
je
mov
(bad)
imul
lahf
out
xor
ja
out
arpl
push
gs
retf
mov
push
clc
stc
rcr
arpl
pop
and
pop
pop
jg
arpl
jle
add
adc
push
mov
jg
fld
das
mov
sar
psubb
sbb
jo
pop
sub
cmp
repz
fild
nop
repz
stc
ds
dec
mov
sbb
fistp
fmulp
and
cmp
mov
rcl
dec
cmp
lds
popa
sbb
mov
mov
add
fnstsw
dec
imul
cwde
sbb
pop
mov
rcr
ds
mov
es
jp
je
aas
cmc
jg
mov
xor
sbb
cmp
add
scas
dec
pop
lock
or
pusha
dec
dec
aad
ret
call
les
aad
shl
mov
fcomp
pop
mov
push
ret
cmp
popf
cmp
das
xchg
or
jge
mov
outs
jge
pop
btr
sbb
test
jecxz
mov
pop
aad
int
or
outs
imul
mov
jge
jl
nop
sbb
add
add
sbb
xor
cld
cmps
fdivr
or
cmp
sbb
cmp
(bad)
outs
out
pop
fsub
jae
mov
sub
fs
into
mov
inc
dec
jb
retf
pushf
rcl
imul
inc
dec
jnp
jb
das
push
dec
fld
adc
add
inc
ret
pop
or
pop
fimul
jecxz
or
int3
mov
clc
sub
mov
rep
push
fnstenv
aad
das
inc
jg
fsubr
int3
pop
div
enter
out
adc
xchg
push
mov
mov
idiv
cmp
retf
popf
fs
rcr
test
sbb
call
shl
rcl
das
nop
pushf
pop
dec
int
popa
in
lock
pop
cmps
test
pop
xor
arpl
(bad)
(bad)
sbb
in
pop
loope
cmp
ss
push
repnz
pop
imul
lock
jecxz
sbb
bound
mov
adc
cmc
clc
jno
aas
(bad)
retf
hlt
ret
shl
in
sbb
mov
(bad)
aad
movs
cmps
pop
mov
mov
mov
jmp
add
mov
test
call
mov
sti
clc
in
mov
jmp
or
enter
push
sti
repz
cwde
fistp
adc
cld
arpl
dec
sub
ja
rol
sub
dec
jno
jge
out
jae
cmp
mov
out
clc
jne
cmp
jle
loopne
push
add
nop
and
lahf
adc
jb
nop
sub
(bad)
fst
adc
xor
jp
jae
mov
outs
mov
scas
sti
cmp
outs
rcr
jae
push
xchg
lods
stc
sub
pusha
stc
inc
adc
jg
out
daa
push
out
xor
ss
dec
mov
addr16
dec
and
cld
sub
into
daa
cld
ds
int3
sahf
mov
movs
scas
jae
lahf
into
cs
push
mov
out
popa
inc
sbb
nop
mov
xchg
cmc
and
fldenv
cmc
icebp
pop
xchg
in
pop
sub
push
jmp
xchg
ret
jnp
pop
pop
into
lahf
cli
xlat
(bad)
jge
mov
pop
dec
(bad)
into
push
dec
clc
mov
xchg
mov
and
cwde
out
shl
cmp
or
fisubr
xchg
repz
icebp
movs
cld
jle
mov
and
sbb
adc
add
shl
nop
retf
fwait
pop
shl
popf
mov
jno
call
mov
retf
popf
imul
jb
xchg
xchg
(bad)
jne
jmp
cmp
lods
fdiv
stos
jmp
mov
cmp
push
cwde
jmp
adc
push
rol
ret
xor
jns
cmp
repz
mov
fs
stc
mov
mov
cmp
ror
sub
add
(bad)
add
add
(bad)
adc
mov
inc
dec
imul
scas
mov
and
push
test
mov
(bad)
stos
push
sbb
inc
mov
adc
xor
call
adc
std
(bad)
jl
cmp
lahf
retf
repz
mov
ret
das
dec
jbe
lds
xor
or
mov
and
add
cmp
push
shr
ins
pop
jg
jg
push
jmp
mov
outs
xor
fistp
cmp
fld
dec
dec
scas
(bad)
imul
inc
sbb
ins
lock
xchg
jae
daa
cdq
out
sti
add
pushf
jecxz
mov
(bad)
pop
mov
call
mov
daa
mov
inc
mov
aam
ret
push
ret
jp
sti
fcomp
push
je
add
mov
jne
fwait
jmp
jnp
mov
aas
outs
mov
xor
fst
int
out
jge
cmp
adc
jns
pop
xor
mov
mov
aas
pop
sbb
outs
cmps
inc
sub
mov
hlt
sbb
jl
ret
cmc
fidiv
inc
mov
dec
jg
repnz
mov
arpl
pop
sbb
ror
pop
ins
mov
inc
mov
(bad)
mov
mov
xchg
(bad)
push
js
scas
ins
addr16
or
mov
movs
xor
shr
loope
repz
mov
aaa
adc
add
push
jle
pop
xor
mov
jns
cld
pushf
aaa
rol
jge
mov
imul
mov
into
daa
arpl
iret
out
add
repz
int3
(bad)
in
xchg
adc
mov
add
popf
and
pop
pop
push
clc
fnstenv
xchg
inc
push
lods
pop
jo
dec
std
mov
pop
ret
mov
(bad)
out
fs
ins
adc
aaa
mov
or
mov
shr
cmps
(bad)
les
aam
lds
arpl
mov
xchg
out
xchg
jno
lods
cmc
enter
icebp
and
mov
stc
outs
and
add
push
enter
pop
les
mov
sub
push
sbb
fbld
mov
jmp
pop
xor
icebp
fnstsw
jnp
(bad)
fwait
mov
lock
fs
sar
jnp
lds
and
inc
pushf
idiv
mov
in
or
mov
test
push
sbb
adc
and
sbb
pushf
jmp
lock
(bad)
push
out
cmp
xlat
pusha
ins
dec
lods
push
cs
pop
pop
jg
ret
pop
iret
xlat
ins
fist
ins
out
enter
xchg
das
ret
mov
xchg
ss
pop
push
adc
pusha
xchg
(bad)
icebp
(bad)
push
imul
out
lock
lods
iret
stc
mov
pop
ret
fmul
imul
mov
fs
int3
cmc
xchg
and
into
pop
pop
xor
ret
addr16
movs
outs
mov
scas
mov
xor
stos
(bad)
add
pop
cld
mov
mov
mov
sar
push
dec
aam
lock
aam
repnz
(bad)
outs
in
mov
arpl
ins
mov
and
stos
or
int
mov
inc
mov
mov
std
cdq
ss
jns
gs
cld
pushf
inc
out
jno
nop
stos
add
jmp
movs
outs
cdq
ins
clc
fstp
addr16
mov
xor
popa
inc
(bad)
sar
add
daa
mov
retf
and
xchg
mov
outs
sar
xor
fstp
xchg
pop
cmp
cdq
push
add
test
mov
pushf
out
xchg
xor
fimul
add
jo
lds
cld
cmp
xchg
and
mov
add
push
dec
or
arpl
outs
in
mov
(bad)
fadd
pop
mov
fist
inc
(bad)
in
pop
repnz
mov
mov
push
adc
add
(bad)
fbstp
sar
mov
jl
jge
jmp
push
mov
fucomip
shl
call
cmp
xchg
or
clc
rcr
push
cdq
push
(bad)
sti
jl
popf
fiadd
cmp
(bad)
jne
or
sub
push
pop
lods
nop
aad
jg
popf
fisub
xor
adc
add
mov
cs
xchg
fs
fild
scas
adc
call
hlt
jnp
mov
fild
pop
loopne
loope
sub
(bad)
test
out
fdivr
mov
retf
cdq
lea
jns
fisubr
xor
stc
and
mov
retf
out
push
push
mov
fsubr
mov
xor
inc
or
push
test
ins
gs
cdq
(bad)
int
sbb
ds
inc
mov
push
loopne
or
add
add
or
shr
ins
lahf
mov
sti
pop
xor
adc
mov
iret
lahf
fbld
and
pop
repnz
or
inc
or
retf
retf
outs
or
retf
lahf
clc
std
ds
data16
cmps
and
pop
sub
cmp
xchg
cmp
xor
mov
add
fild
mov
data16
loopne
adc
push
jecxz
push
push
jge
imul
aam
mov
test
mov
jne
fmul
push
movs
ins
or
pop
retf
(bad)
imul
push
jle
inc
stc
loopne
fist
cmps
arpl
mov
scas
push
pop
pop
mov
sar
stc
cwde
dec
(bad)
mov
jle
repz
jle
or
iret
shl
mov
sahf
xchg
rol
pop
jns
mov
jo
mov
sbb
add
push
int
xlat
leave
popf
gs
leave
pop
inc
pop
fld
cmp
ficomp
out
mov
push
or
rcl
cmps
mov
into
std
jle
sub
pop
ins
sti
pusha
cld
retf
bound
dec
mov
xchg
ins
pop
xor
fnsave
sti
(bad)
das
(bad)
in
jl
push
sahf
jecxz
adc
(bad)
je
(bad)
scas
loope
loope
lock
cmp
fcom
int
imul
data16
repz
div
jecxz
or
and
idiv
pusha
sbb
pop
mov
cmp
(bad)
aam
mov
adc
in
cmp
push
repz
(bad)
jmp
pop
out
adc
push
jo
mov
jae
push
aaa
jbe
outs
lahf
das
push
into
std
imul
sti
pop
mov
sub
and
or
js
fadd
push
xor
xchg
add
mov
les
(bad)
mov
int3
scas
inc
pop
push
sub
ins
mov
rep
loope
push
fisttp
ins
push
cld
jmp
vcvttps2dq
mov
stc
jge
sbb
cmp
push
lock
out
mov
out
cmc
or
xor
cld
cmp
ss
test
pop
mov
adc
rcr
cmp
lods
inc
sbb
je
xchg
in
(bad)
jmp
jnp
aad
jge
movs
lods
sub
in
push
js
lods
push
aas
inc
mov
push
push
enter
or
mov
std
mov
fist
stc
cmc
sbb
jae
and
or
jmp
ins
mov
lahf
sub
cmc
sub
cld
sub
push
mov
cld
mov
(bad)
mov
in
push
mov
in
push
mov
in
push
mov
inc
xchg
outs
fwait
sub
popf
sahf
test
movs
jo
xchg
pop
out
lock
xlat
jns
pavgb
mov
adc
idiv
jne
pop
adc
xor
into
fchs
or
cmp
es
xor
in
or
fsubrp
fcomp
ficomp
push
mov
jecxz
(bad)
fstp
mov
pop
(bad)
out
push
frstor
mov
and
scas
es
jae
frstor
inc
sahf
aaa
adc
(bad)
in
cmp
xor
repz
xor
das
out
(bad)
jl
mov
fdivr
jl
gs
jg
jle
(bad)
repz
stc
cli
imul
stos
aaa
sti
mul
aas
fdivrp
iret
fwait
dec
std
fstp
adc
adc
adc
sahf
or
popf
xor
or
movs
xor
push
or
cmc
sbb
in
vdivpd
mov
adc
and
bound
nop
mov
mov
and
icebp
adc
and
xchg
ins
jp
fldenv
adc
push
pop
popf
push
push
pop
pop
aad
mov
inc
es
(bad)
dec
(bad)
cmp
lods
(bad)
add
ret
add
(bad)
mov
mov
(bad)
(bad)
mov
lea
inc
loope
add
nop
sbb
xlat
(bad)
fldcw
in
jnp
mov
test
adc
(bad)
push
inc
fdiv
jecxz
jg
pop
pop
jl
(bad)
dec
inc
push
mov
hlt
(bad)
outs
jbe
leave
cmps
outs
dec
or
test
jl
inc
les
and
(bad)
test
jns
push
inc
jmp
movs
dec
out
test
mov
int3
call
ss
sti
jle
mov
out
pushf
repz
xor
xlat
add
add
xchg
stos
pop
push
push
sbb
arpl
scas
fld
cmp
jae
pop
mov
(bad)
mov
arpl
pop
test
cmc
cmc
adc
add
ja
jne
mov
inc
cmc
ret
dec
mov
push
rcr
out
popa
repz
int
pop
scas
in
jnp
jno
jo
cmp
int
test
fs
mov
out
pop
xor
lahf
jo
(bad)
popf
jnp
inc
dec
iret
fbstp
stos
jno
mov
xor
mov
lods
daa
out
repnz
adc
sub
test
test
jp
lds
mov
sub
mov
rol
imul
iret
shl
dec
shl
dec
pop
(bad)
fld
cmc
icebp
call
movs
mov
mov
mov
push
iret
sar
inc
mov
std
(bad)
std
pop
loop
xor
adc
sbb
mov
data16
fild
xchg
out
jmp
cwde
xchg
dec
mov
shl
mov
(bad)
lahf
sbb
(bad)
repnz
or
scas
dec
push
fistp
into
add
and
aam
int3
icebp
out
adc
aad
out
imul
shl
mov
jle
out
ret
dec
movs
sar
or
sub
imul
push
inc
stos
jnp
cwde
push
xlat
repz
arpl
(bad)
mov
fnsave
xor
scas
imul
fistp
fcmovne
call
jmp
mov
scas
in
adc
mov
and
jp
fcmovne
pop
sbb
(bad)
(bad)
int3
(bad)
cmp
call
mov
adc
(bad)
aaa
rcr
lods
or
and
dec
sub
sub
dec
mov
imul
sub
inc
int
popa
ins
jecxz
ins
mov
outs
pop
repz
add
push
not
add
jmp
mov
mov
and
mov
xchg
cmp
mov
(bad)
sbb
cmp
fist
test
push
arpl
mov
cwde
scas
iret
lock
iret
fs
into
fimul
lods
retf
adc
in
div
sub
adc
mov
loopne
js
xchg
xchg
jnp
int3
retf
add
enter
dec
addr16
xor
scas
adc
and
test
mov
jmp
push
cwde
neg
outs
pop
pop
mov
push
and
in
test
xor
movntq
xchg
stos
lahf
pop
cld
cmp
push
out
addr16
leave
xchg
fldcw
pop
inc
adc
je
lahf
mov
cmps
mul
adc
jg
out
inc
inc
int3
bound
call
dec
mov
mov
mov
mov
cmp
out
sti
push
push
call
mov
cmc
into
dec
iret
sbb
push
pop
es
nop
fidiv
fadd
mov
xchg
ror
fld
inc
in
push
inc
into
aas
xor
out
into
rcr
xchg
neg
xchg
ins
sahf
xor
mov
adc
popf
push
(bad)
repz
mov
loopne
hlt
jb
addr16
leave
dec
cld
jle
cmps
xchg
fidivr
mov
and
sti
test
aad
push
cmp
add
jnp
sbb
test
lock
out
out
int3
out
fcmove
in
xchg
leave
into
cmp
mov
add
push
adc
test
cwde
jmp
into
icebp
cmc
shr
into
mov
pop
and
enter
sysexit
imul
pop
imul
fadd
mov
scas
sub
popf
cld
rol
sbb
loopne
inc
mov
leave
ficom
sahf
sti
cmp
cmp
xchg
sbb
mov
jo
ins
xor
inc
inc
push
or
out
inc
push
mov
inc
loopne
add
pop
into
jnp
arpl
hlt
jne
inc
pop
pusha
sub
jns
cmc
pushf
mov
rcr
push
cmc
xchg
cmp
mov
rol
cmc
test
fst
lods
jbe
aad
shl
pushf
mov
jg
fdivr
xchg
lods
jbe
jp
ret
pop
repnz
mov
lods
das
movs
pop
dec
push
(bad)
pop
les
popf
cmp
fdiv
fdivr
std
mov
loopne
js
jb
daa
repz
cmps
mov
sbb
push
retf
rdtsc
add
push
or
jle
or
xor
inc
jnp
ds
loop
cdq
jmp
pusha
pop
or
mov
test
ror
push
inc
jg
out
stos
mov
sbb
test
(bad)
xchg
cld
mov
ds
xchg
cli
xchg
push
aas
out
sti
mov
jns
clc
hlt
or
cdq
ss
je
popf
xchg
int3
in
mov
in
sub
mov
push
and
ins
lahf
mov
inc
repnz
loop
push
jb
mov
and
scas
or
ret
jne
and
in
(bad)
cmp
arpl
cmp
(bad)
out
clc
or
pop
mov
xchg
adc
and
jae
out
ss
inc
cs
aad
pop
out
icebp
mov
cmps
push
arpl
jo
ss
movs
xchg
fmul
imul
pop
mov
mov
xchg
stos
daa
xchg
data16
add
test
mov
jmp
push
mov
cmovo
add
int3
ret
pop
mov
stc
(bad)
cdq
mov
test
xor
and
popa
push
scas
call
rcl
leave
cs
je
aaa
xor
lahf
lods
ret
inc
ret
std
pop
test
sbb
sbb
jno
out
std
sub
mov
cs
lds
sahf
or
and
xchg
sbb
nop
dec
cmp
mov
dec
ins
xor
mov
ss
out
test
in
xor
jno
cld
not
call
mov
sub
dec
ins
lods
addr16
out
arpl
ins
add
jo
jne
cmps
lea
mov
pop
addr16
addr16
retf
jae
enter
int
jmp
pop
pop
cmp
aam
push
inc
pop
xchg
mov
pop
push
test
mov
test
ffree
xor
adc
inc
ja
dec
mov
inc
xchg
jp
lahf
jge
es
push
mov
mov
pop
leave
add
cld
pushf
jmp
jns
jmp
cli
push
xchg
fadd
jno
dec
(bad)
mov
lods
cmc
mov
sti
jle
adc
jmp
popf
jecxz
(bad)
pop
pop
leave
icebp
add
cmp
(bad)
fcom
aam
adc
loope
test
lock
imul
mov
mov
cdq
mov
sbb
sar
outs
stos
fmul
mov
xchg
das
pop
pushf
arpl
jae
js
dec
ror
pusha
add
jae
mov
jg
pop
mov
pop
cmc
mov
push
cmps
shl
cmp
sub
xor
mov
cli
push
mov
out
sub
adc
push
lods
push
rol
sub
out
inc
mov
sahf
adc
rol
push
mov
imul
inc
or
fistp
loopne
xchg
into
mov
arpl
sub
xchg
push
push
cmps
pop
in
push
pop
push
or
sub
lods
call
arpl
rol
inc
xor
pop
fist
ds
retf
mov
fisubr
mov
ret
mov
lods
in
inc
or
inc
cmp
les
pop
inc
test
dec
cmp
cmp
sbb
nop
inc
ss
dec
jne
sbb
retf
jns
pop
xlat
jbe
xchg
add
cdq
aas
scas
pop
sub
cwde
stos
jmp
xor
leave
inc
push
mov
fnstsw
sar
popa
lea
push
add
shl
cmp
js
mov
cli
push
xchg
scas
or
je
retf
movs
sub
jbe
sbb
into
push
stc
mov
aas
add
dec
or
xchg
aam
mov
ins
adc
lea
sub
leave
in
pop
mov
vmovups
pop
or
and
imul
inc
push
or
sub
cmc
mov
sub
dec
cmps
fwait
daa
movs
sub
jp
rcr
(bad)
mov
out
dec
es
jmp
imul
dec
addr16
pop
mov
addr16
ins
xchg
(bad)
jmp
cmc
js
cmp
mov
sbb
mov
xchg
push
adc
jmp
mov
call
push
inc
push
inc
pop
inc
dec
jbe
dec
jae
pop
bound
xchg
push
sbb
aas
mov
inc
dec
popf
mul
std
jno
fdivr
or
pusha
jns
cmp
out
out
repz
cmp
xchg
in
ins
inc
mov
jl
lods
lock
(bad)
pop
ins
test
repz
lods
sub
jb
fisttp
leave
aam
sbb
cwde
jo
xchg
scas
add
pushf
mov
lahf
pop
xchg
shr
movs
mov
pushf
and
addr16
xrelease
inc
sbb
xchg
je
cmp
int
lods
push
jnp
jge
xor
(bad)
mov
add
dec
add
les
cld
pop
retf
cli
sbb
jge
adc
fcmovu
std
jb
sbb
add
daa
cmc
fcmovnbe
adc
nop
xchg
mov
mov
push
mov
push
leave
cld
je
test
and
fs
and
cld
sbb
test
std
push
repz
lahf
sahf
pop
xchg
inc
pop
jnp
in
out
jmp
jmp
mov
mov
pop
add
(bad)
mov
pop
jo
(bad)
stos
jecxz
push
mov
neg
add
icebp
add
dec
loope
repnz
sti
dec
leave
retf
fcomp
jmp
mov
cmp
out
das
iret
popa
jmp
cmp
movs
repnz
pop
(bad)
and
xor
pop
pop
out
sub
cmp
dec
daa
cmps
add
addr16
stos
pop
mov
push
je
inc
xor
fwait
jmp
das
jo
dec
cs
and
pop
jmp
xchg
out
xchg
xlat
mov
int
fs
xor
fs
inc
fild
dec
jl
aaa
in
xchg
lahf
inc
repz
icebp
jle
mov
jmp
movs
jle
jge
dec
mov
cmp
cdq
(bad)
gs
xchg
jmp
out
(bad)
popa
pusha
mov
stc
(bad)
mov
jb
int
mov
push
clc
mov
inc
jmp
jle
scas
sbb
jnp
jg
mov
xor
xchg
not
lods
sub
dec
mov
jp
icebp
in
outs
or
jmp
pop
inc
pop
push
dec
imul
ins
icebp
in
nop
cmp
(bad)
inc
sahf
xor
mov
xchg
popf
mov
sti
add
lds
dec
pop
sbb
and
sbb
jmp
jo
(bad)
mov
cmp
leave
test
xchg
lods
xlat
retf
(bad)
sub
inc
leave
jmp
cmp
or
call
lock
jb
rol
les
jae
jl
ss
and
test
test
add
int3
sbb
jns
jns
int
mov
nop
jmp
mov
es
mov
lds
fs
mov
lods
xchg
je
outs
push
cmc
in
leave
xchg
loope
xchg
dec
sbb
test
sar
and
xor
cmp
jl
sbb
icebp
ret
(bad)
cmp
cmps
repz
jl
adc
scas
icebp
into
xorps
lock
int
test
bound
shl
dec
stos
xlat
jecxz
xchg
adc
out
push
inc
sub
xchg
lods
jne
std
jmp
mov
clc
xchg
pop
mov
and
xor
repz
pop
shl
sbb
sbb
popa
aas
pop
cli
cmp
std
(bad)
fsub
xor
repnz
fild
mov
icebp
int
lods
inc
in
aaa
mov
adc
mov
push
sub
call
sbb
mov
in
in
mov
or
lahf
jp
test
dec
jbe
fcomp
nop
jge
pop
popf
loope
imul
iret
inc
fdivr
mov
cs
dec
pop
cmp
jmp
xlat
(bad)
rcl
push
lods
xchg
and
fild
out
mov
popa
push
mov
jp
mov
mov
jne
pushf
mov
neg
cdq
xchg
loop
jo
sbb
jns
jns
ja
addr16
push
mov
cmc
sub
jg
aam
or
hlt
frstor
adc
bnd
sub
sbb
xchg
mov
xchg
xchg
jns
pop
jae
push
aaa
shl
xchg
icebp
int
arpl
fadd
xchg
inc
pop
add
xchg
test
or
fimul
mov
fdivr
mov
in
retf
movs
xor
adc
push
inc
idiv
inc
cmc
mov
stos
push
cli
ror
cmp
jp
call
retf
sar
test
sti
dec
mov
dec
es
pop
dec
jo
jnp
and
sar
xor
inc
fdivr
mov
adc
xlat
sahf
ins
call
lahf
sar
mov
and
adc
(bad)
das
mov
(bad)
ds
int
hlt
(bad)
pushf
sbb
ret
push
stos
es
jb
fs
adc
in
dec
mov
fsubrp
inc
fisub
call
fistp
mov
inc
loop
cli
or
xor
push
enter
pop
inc
dec
imul
dec
cmp
sbb
cmps
cmps
cmp
push
and
cmps
cli
sbb
es
mov
pop
xchg
xor
lods
mov
sub
(bad)
in
push
mov
iret
rdtsc
xchg
mov
je
xor
stc
mul
add
fstp
jnp
ret
push
imul
rcl
enter
add
sahf
xchg
movs
rcl
inc
jp
inc
(bad)
in
mov
jmp
mov
cmp
xchg
retf
mov
and
fiadd
(bad)
push
movs
nop
xchg
test
inc
inc
stos
xor
jmp
jmp
jg
adc
fistp
add
and
xor
jge
cmp
dec
leave
add
jo
xor
sub
not
xor
sbb
xchg
cs
adc
mov
cmova
rcl
xor
mov
fadd
push
aas
imul
push
pop
(bad)
out
push
out
cli
push
sub
cmp
xchg
jge
aam
jmp
repnz
mov
test
jl
mov
outs
fs
add
add
xchg
test
mov
push
ja
cdq
mov
(bad)
sbb
js
gs
daa
pop
outs
mov
pop
retf
jmp
ins
inc
scas
sbb
mov
xchg
je
dec
xchg
cmc
mov
mov
retf
jmp
add
call
sbb
inc
out
cmp
cmp
les
mov
dec
stc
ud2
lods
push
and
stos
cmps
loope
mov
std
pop
stos
int3
movs
pop
mov
sbb
aad
imul
add
rol
mov
jmp
push
dec
mov
sbb
lahf
pop
neg
loop
repnz
hlt
aad
jp
pop
pop
push
and
mov
jae
retf
xchg
das
in
inc
scas
mov
scas
popf
cld
jne
sbb
cmp
jl
aaa
in
lahf
aad
jnp
cdq
sahf
jge
cdq
pushf
jns
dec
loop
push
xlat
mov
dec
ret
mov
ficomp
cld
scas
dec
mov
out
retf
add
push
adc
dec
xor
pop
cwde
push
mov
xchg
jle
jne
sub
pop
xor
sahf
fdiv
std
cli
enter
in
add
pop
std
iret
pop
cmp
xor
xor
xchg
sub
pop
pushf
dec
pop
jnp
adc
xor
popf
test
pop
xchg
push
scas
pop
lods
hlt
sub
push
adc
push
in
mov
shl
jmp
inc
out
mov
dec
iret
add
jp
dec
adc
pop
inc
stos
int3
aas
jo
mov
dec
and
inc
inc
pushf
mov
stc
xlat
sub
and
ror
cmc
add
rol
test
rol
jns
push
repnz
push
in
pop
addr16
imul
leave
lock
sahf
mov
es
jno
xchg
test
pop
ds
ss
cwde
test
push
les
adc
and
lahf
mov
and
pop
scas
xor
or
xor
mov
(bad)
outs
test
pop
push
(bad)
(bad)
stos
inc
add
mov
push
mov
imul
stos
cmp
xor
push
mov
(bad)
rcl
adc
jmp
imul
sub
mov
xchg
scas
lods
fbstp
arpl
sbb
bnd
pushf
pop
xchg
jmp
sub
pop
mov
or
ins
mov
popa
mov
lahf
cs
mov
movs
lahf
jle
inc
lods
or
jl
mov
jle
dec
loop
or
dec
imul
test
sub
xor
cmp
cmp
push
sub
mov
stc
xchg
vrcpps
mov
push
imul
cmp
mov
cdq
mov
imul
inc
(bad)
fiadd
sti
mov
jle
int
int3
test
movs
jno
sub
xchg
into
call
dec
mov
or
imul
pop
fwait
add
xchg
dec
aam
xor
sub
sar
loope
stos
dec
fistp
mov
jne
ja
leave
mov
loope
sub
dec
ds
xchg
jge
stc
mov
lea
cmp
mov
shl
shl
cmp
shl
dec
cmp
xchg
je
jle
xchg
cdq
adc
mov
jmp
loopne
push
cmp
xchg
inc
ror
xchg
dec
mov
jnp
or
mov
(bad)
cdq
cmp
pop
out
xlat
and
jo
xlat
frstor
xchg
xor
pop
mov
adc
shl
sub
or
jg
stc
js
push
loop
test
sbb
(bad)
sbb
scas
pop
inc
push
out
lock
ret
(bad)
pop
lods
xor
ret
(bad)
and
push
repz
repz
cld
and
mov
mov
or
ins
lahf
nop
pop
xchg
jae
xor
adc
mov
sbb
mov
bound
jmp
dec
jo
jmp
push
add
and
xor
pop
xor
in
lea
dec
ins
outs
ins
inc
lahf
and
xchg
jmp
sti
imul
xlat
add
iret
fcom
out
cld
je
and
fs
cmp
call
jge
add
fst
movs
out
pop
adc
jbe
mov
sbb
mov
inc
jae
hlt
inc
fimul
icebp
pop
xchg
pop
vpsrlw
inc
sbb
mov
imul
cmp
add
xor
cmc
mov
scas
dec
movs
popf
dec
sub
xchg
inc
fistp
add
or
xchg
aam
xlat
mov
mov
mov
mov
xor
cmp
sbb
adc
popa
mov
mov
test
mov
cmps
mov
add
outs
mov
je
test
scas
rcr
out
shl
add
mul
fild
int3
cld
mov
pop
dec
push
loopne
stos
cmp
jg
inc
scas
icebp
jmp
sbb
lods
xor
fdivr
jge
push
mov
popa
dec
jp
pop
scas
je
jl
mov
(bad)
mov
dec
enter
sub
mov
inc
sbb
add
pop
in
lods
sar
imul
lahf
outs
xor
jmp
push
dec
mov
mov
cmc
sub
or
push
jecxz
lea
cmp
and
outs
test
inc
(bad)
lahf
test
in
test
dec
clc
ficom
jb
mov
js
push
ins
jg
fs
aaa
sti
cmp
jl
loopne
icebp
or
mov
popf
add
lahf
add
cli
into
adc
jmp
mul
addr16
and
popf
mov
and
push
sbb
cli
jecxz
out
in
icebp
pop
movs
push
mov
mul
pop
sub
sbb
xchg
imul
sbb
stos
dec
ds
dec
and
(bad)
je
push
pop
mov
push
aas
jl
inc
xchg
out
fdivr
aas
mov
mov
imul
mov
xor
add
and
mov
dec
xchg
repz
jle
scas
in
cmp
add
leave
xlat
dec
arpl
cmp
sub
pop
stc
jl
mov
aas
xchg
mov
nop
inc
jnp
in
push
lds
jmp
cmp
sbb
das
push
js
retf
outs
pop
sbb
popa
sar
dec
aaa
and
nop
dec
sub
(bad)
scas
repnz
jmp
imul
jno
inc
jnp
cmp
sar
(bad)
jecxz
pop
out
xlat
xchg
cmp
xor
clc
lock
jo
inc
push
aas
nop
repz
or
aas
sub
add
daa
mov
and
dec
movs
cmp
mov
dec
xlat
dec
jecxz
arpl
inc
stos
sub
mov
push
les
dec
jne
pushf
pop
loop
jle
inc
fadd
das
pop
and
cmc
mov
mov
sbb
sbb
aad
repnz
jne
les
ins
xor
cmp
cld
xchg
rcr
cmps
lahf
out
out
gs
inc
sbb
sbb
rcl
in
loopne
cmp
test
add
stos
mov
aas
out
pushf
inc
add
movs
pop
add
mov
scas
jecxz
rcr
arpl
iret
push
or
mov
lock
or
dec
in
mov
push
sbb
jl
sub
stc
jmp
add
iret
jns
repz
repz
dec
inc
fmul
scas
lea
ret
lahf
std
adc
aaa
mov
adc
iret
clc
out
push
xlat
dec
mov
and
push
aam
adc
dec
jle
sbb
fadd
push
ins
jg
adc
cmps
movs
adc
mov
out
repnz
xor
ja
mov
(bad)
sub
test
pop
pop
fadd
or
es
sbb
dec
sub
xor
repz
cmp
repnz
sbb
lock
ins
or
lahf
dec
jns
bound
(bad)
cmp
push
dec
xchg
mov
cld
hlt
sbb
push
jp
mov
xchg
div
(bad)
adc
push
in
stos
and
cmp
push
push
rcl
cs
or
jmp
and
rol
test
out
into
mov
sbb
ds
inc
out
dec
mov
call
retf
in
inc
jnp
sub
test
pop
xchg
lock
jp
fsub
inc
mov
test
ss
jno
xchg
jl
lds
outs
ss
push
lods
jmp
add
jne
popa
stos
je
lods
mov
ret
(bad)
and
lahf
xor
movs
sbb
addr16
push
sahf
in
sub
stos
call
and
rcl
add
test
sbb
fiadd
repnz
xor
std
iret
mov
lds
xchg
adc
fistp
mov
popa
lods
sbb
dec
mov
pop
sbb
psrld
das
ss
jno
test
mov
add
shl
push
or
adc
pop
sub
push
inc
in
pushf
pop
lods
cmp
xor
fidivr
jmp
and
in
mov
mov
pusha
int3
(bad)
(bad)
sbb
repz
mov
shr
outs
out
xor
mov
dec
mov
xor
out
jg
xchg
dec
sahf
in
fwait
dec
cli
pop
xor
or
cli
sbb
or
xchg
in
shl
inc
shr
mov
and
inc
pop
pusha
mov
or
inc
mov
ins
shl
jae
add
jno
repnz
dec
push
cmp
cmp
std
jg
fisub
push
mov
out
call
ror
neg
pushf
mov
outs
test
pop
sub
pop
rcl
mov
std
addr16
xchg
sahf
(bad)
test
jl
imul
call
or
fcom
sbb
adc
jbe
lahf
cld
jne
mov
popa
outs
push
(bad)
inc
sbb
bound
push
jl
gs
ins
out
add
fidivr
fild
pusha
(bad)
jmp
fdivr
dec
cs
push
(bad)
mov
push
jmp
jnp
aam
test
jge
push
(bad)
repz
fsubr
enter
(bad)
cld
ja
inc
sbb
lahf
icebp
dec
jle
jg
repnz
rdmsr
sti
mov
push
push
ss
(bad)
jge
push
jmp
and
mov
adc
pop
jmp
add
jns
shl
gs
in
inc
inc
aas
add
mov
mov
fcmovb
clc
daa
test
aad
out
sub
out
std
pop
enter
xchg
fcomi
in
jbe
mov
cmc
xor
sub
jae
int
jnp
sahf
push
fnstcw
mov
aas
pop
dec
cli
into
fdivr
shl
int
leave
mov
sub
rcr
scas
cdq
or
sbb
lods
add
add
add
rol
xchg
jl
fiadd
inc
fadd
inc
xchg
xchg
jns
(bad)
add
scas
inc
pop
jns
nop
into
cmp
jns
daa
jo
inc
dec
das
outs
xlat
xchg
daa
xchg
out
xor
cld
pop
add
sbb
aad
jge
test
sub
ja
dec
dec
hlt
cli
aad
loop
cdq
js
shr
cmps
inc
mov
jp
call
test
int
scas
test
xor
ds
addr16
test
sbb
sbb
mov
js
not
and
pop
test
in
pop
sub
mov
shl
jecxz
sar
out
xor
icebp
inc
pop
jmp
shr
mov
sbb
rcr
rol
dec
sbb
adc
pop
out
shl
pushf
jnp
jae
dec
iret
test
add
jge
clc
jmp
pop
clc
and
mov
fwait
push
ins
dec
add
lods
mov
pop
das
lds
mov
mov
pop
in
adc
ds
mov
jecxz
dec
mov
xchg
out
dec
jo
fldenv
dec
push
imul
fcom
jo
outs
pop
push
xor
inc
dec
(bad)
neg
adc
out
jae
xchg
fidiv
sub
leave
cmps
stc
cwde
mov
mov
sahf
or
inc
pop
aas
loope
lahf
leave
mov
adc
into
sbb
push
jo
mov
repnz
push
mov
pusha
push
fiadd
and
cmp
pop
mov
data16
(bad)
jnp
in
out
lahf
pop
mov
jno
jnp
lods
jmp
mov
dec
xchg
int3
mov
loop
xchg
ja
shr
mov
adc
xchg
jne
fwait
rcr
xor
frstor
outs
lods
pop
addr16
mov
hlt
test
cmp
pusha
jl
in
pop
dec
fs
enter
ja
or
pop
ss
lods
dec
add
cmpps
mov
outs
add
stc
jmp
cdq
mov
jl
mov
jno
addr16
addr16
neg
getsec
or
cmp
push
in
jno
retf
repnz
sahf
cmp
in
cmp
repz
sahf
jecxz
out
jle
xchg
es
mov
ds
adc
and
daa
jmp
add
or
dec
dec
pop
push
sub
or
repz
aas
inc
fadd
test
push
push
cmp
and
and
jnp
(bad)
mov
pop
sti
xchg
jnp
xchg
idiv
neg
adc
imul
sar
je
into
xor
adc
inc
mov
not
call
mov
fisub
je
clc
mov
cmp
mov
and
std
jnp
mov
not
enter
clc
imul
int
ins
sar
fadd
stc
push
rol
xor
mov
push
into
lahf
shr
das
out
rol
imul
les
mov
inc
stos
ja
out
fs
jmp
stos
jno
int
call
inc
ror
sbb
push
jo
xchg
pop
xor
rcl
repnz
div
leave
cmps
dec
ds
or
xchg
xor
fdivrp
(bad)
mov
jge
jp
(bad)
(bad)
cmc
out
int
mov
stc
mov
mov
test
adc
pop
ins
scas
and
pop
mov
pop
cmp
out
xor
daa
inc
ja
jle
jae
xor
or
mov
pop
in
out
repz
iret
sub
out
imul
jo
enter
xchg
into
adc
inc
retf
repnz
inc
pop
les
pop
jle
cmp
jmp
or
sbb
mov
push
dec
push
call
fwait
sti
lods
leave
loope
dec
lods
lea
gs
xchg
inc
(bad)
mov
xor
mov
clc
das
stos
stc
mov
scas
cmp
test
loope
mov
stc
fild
xchg
pop
sbb
jnp
mov
push
fdivr
xchg
loope
lock
cli
push
test
das
lds
jnp
repz
sti
popf
pop
sub
scas
pop
cmc
dec
repz
out
les
xor
call
lods
leave
jmp
xor
int
jp
and
or
sbb
jne
fisttp
mov
sbb
loop
and
or
lea
imul
cmp
xchg
imul
sbb
mov
loop
aas
frstor
js
jne
ret
call
cmp
out
(bad)
mov
sahf
gs
pop
push
xlat
pop
xor
xlat
sti
pop
lods
(bad)
push
into
adc
les
xchg
cld
jge
sti
cmp
pop
jb
lock
outs
imul
cmps
pcmpeqd
mov
sub
add
je
hlt
bswap
lds
pop
jmp
(bad)
cmp
stos
aas
fnstenv
cmp
(bad)
mov
mov
scas
xor
jnp
out
repz
mov
outs
jo
retf
test
adc
leave
not
ja
int
rcr
or
xor
and
push
add
mov
push
enter
inc
jo
push
sbb
inc
int3
pop
push
jb
xchg
lahf
pop
popa
into
ret
lahf
imul
(bad)
(bad)
lds
push
cmc
(bad)
ret
pop
inc
cld
sub
jo
xchg
int
out
les
bound
out
rep
out
scas
sar
adc
pusha
mov
loop
xchg
daa
xlat
aaa
jle
cmp
inc
sahf
test
repz
adc
mov
cmp
and
div
xlat
jmp
loopne
hlt
loop
fmul
in
pop
adc
cmps
cli
or
gs
mov
ja
xchg
jle
movs
fild
scas
push
stos
leave
xchg
cmp
push
popf
add
xor
fidiv
xchg
je
in
aam
mov
jecxz
jns
xchg
add
in
shl
mov
addr16
jge
into
iret
push
les
xchg
push
in
mov
lahf
pop
mov
add
or
popf
pop
(bad)
inc
jno
mov
jnp
inc
push
push
(bad)
push
dec
icebp
mov
adc
les
dec
dec
test
cmp
jbe
jns
mov
mov
loope
enter
js
xor
jae
mov
xchg
or
add
xchg
clc
(bad)
cmp
pop
jno
call
imul
xor
adc
jmp
call
stc
push
push
lods
repz
sub
pabsb
fild
aad
outs
jbe
xchg
aas
ret
loope
sub
inc
rcr
sahf
stc
cmp
popf
popa
fs
test
das
bound
and
cwde
test
xor
dec
jnp
pushf
adc
or
or
push
out
jne
lods
jmp
fisubr
aam
not
jp
jmp
pop
ficom
jge
(bad)
inc
pusha
dec
in
mov
test
push
inc
pop
pushf
inc
mov
mov
jg
je
jb
out
cmp
xor
mov
inc
add
cli
lock
cmp
sbb
cmp
pop
sub
sar
mov
dec
out
out
or
repz
adc
xchg
sub
bound
ds
stos
int
jmp
(bad)
xchg
mov
dec
outs
mov
jno
sti
pop
(bad)
jg
stc
loope
inc
(bad)
iret
mov
or
mov
pop
enter
sti
es
arpl
xor
imul
sbb
jno
jns
pop
xor
dec
loopne
mov
mov
repnz
or
fisubr
fdiv
ret
enter
add
add
mov
arpl
jo
stc
fs
int3
(bad)
mov
xor
pop
jg
fistp
movs
cmp
fdivr
in
loope
das
scas
adc
loope
mov
xor
xchg
imul
sar
jnp
js
wbinvd
dec
jg
sbb
pop
test
bound
sbb
mov
neg
(bad)
call
(bad)
repz
ja
xchg
not
je
push
out
lods
push
jg
(bad)
mov
retf
outs
pop
adc
sub
aas
or
jnp
call
jbe
ja
dec
cmc
sub
fmulp
inc
add
cmp
mov
in
nop
bound
daa
out
enter
cmp
in
jno
idiv
jle
adc
sar
into
xchg
sbb
jae
cli
stc
(bad)
call
push
repz
xchg
test
mov
pop
mov
cli
std
rcr
iret
(bad)
xor
or
imul
mov
adc
sub
retf
dec
scas
in
scas
cmps
mov
out
outs
add
call
push
xlat
daa
or
out
les
fmulp
icebp
jbe
out
xor
or
cld
sar
std
mov
cmp
das
mov
(bad)
fmul
cld
dec
jne
outs
xchg
add
addr16
in
loopne
cmp
lahf
retf
sti
mov
repz
sub
sbb
in
add
jg
repz
aaa
jg
pushf
mov
pop
mov
stos
mov
not
mov
xchg
mov
je
jecxz
cld
cld
pop
sbb
pop
pop
mov
gs
es
mov
sub
push
(bad)
push
adc
jecxz
mov
repz
hlt
mov
xchg
inc
jnp
jle
lock
xor
pop
cmp
fwait
inc
rcr
and
cs
mov
aaa
xor
add
repnz
xchg
jne
iret
(bad)
fistp
push
clc
repnz
push
jecxz
jnp
outs
add
in
out
out
out
out
out
out
out
adc
call
jp
push
retf
xchg
cli
mov
cli
mov
scas
arpl
icebp
or
imul
js
stos
jl
mov
cmp
lahf
sub
cs
popa
(bad)
ffree
repz
mov
cmps
cld
sti
push
test
outs
jo
jmp
div
std
adc
(bad)
js
scas
repnz
add
push
dec
lahf
clc
cli
dec
sub
push
pop
aas
mov
(bad)
jne
aas
mov
std
stos
mov
inc
pop
adc
or
shr
retf
aaa
retf
movs
mov
lahf
retf
xchg
mov
jl
(bad)
cmp
pop
icebp
or
cmp
das
icebp
popf
out
pop
out
xlat
in
lock
cli
dec
pop
inc
mov
pushf
adc
sub
push
push
cmc
mov
jg
pop
out
ret
icebp
fbld
cld
mov
xor
add
mov
les
and
(bad)
fcomp
xchg
(bad)
mov
mov
inc
fisubr
cld
fst
sub
and
and
jmp
call
and
(bad)
div
stos
icebp
fbstp
cmp
ins
mov
out
xchg
sahf
imul
in
retf
loop
and
retf
adc
shl
dec
mov
(bad)
lods
push
in
idiv
jge
pop
rcl
outs
add
cmc
rol
sti
mov
lahf
cld
bnd
mov
pop
cmp
loope
cmp
and
sbb
enter
mul
sbb
xchg
mov
scas
es
mov
js
pop
xor
loopne
cdq
mov
cmps
inc
les
dec
mov
sbb
mov
or
dec
jle
add
add
inc
sar
clc
lods
mov
div
fs
jge
jmp
cmp
pop
xor
in
add
es
lods
sbb
inc
les
mov
addr16
pop
call
sti
fdivr
(bad)
std
rol
and
ss
jno
xor
in
jle
jbe
mov
rol
mov
hlt
lock
xchg
(bad)
pushf
add
js
fucomip
xlat
mov
xchg
mov
pop
sahf
cdq
dec
push
int
movs
adc
cmps
fdivr
mov
jbe
fs
clc
fwait
pop
clc
fild
inc
mov
daa
and
pop
ja
fdivr
cwde
push
int
dec
sbb
in
add
sti
icebp
sahf
or
test
scas
sbb
and
dec
retf
inc
cmp
sbb
xlat
sub
mov
enter
js
jo
jl
jg
jle
je
cmc
loop
mov
out
pop
les
sbb
into
imul
pushf
outs
daa
inc
xor
sar
mov
neg
pop
xchg
mov
retf
pop
jmp
adc
call
lahf
pusha
pop
inc
push
stos
and
test
dec
dec
inc
inc
inc
push
add
and
int3
jg
fstp
inc
push
mov
out
outs
out
addr16
neg
popf
out
adc
xor
push
leave
mov
mov
arpl
out
xlat
jmp
mov
je
adc
inc
lahf
dec
xor
pushf
outs
scas
xor
mov
std
hlt
cmps
or
jge
pop
jmp
mov
ret
stos
pop
loop
(bad)
dec
and
or
xor
sub
loopne
movs
cmp
in
loope
(bad)
ror
jno
mov
xchg
retf
jae
pop
(bad)
mov
jne
mov
std
push
xchg
sbb
(bad)
ins
adc
lds
add
in
cmp
ds
mov
nop
or
xor
(bad)
ins
inc
push
pop
add
mov
call
fdiv
cmps
neg
dec
push
je
aad
(bad)
aas
adc
mov
int
inc
sbb
into
icebp
xchg
fadd
jnp
push
test
out
jmp
cmp
rol
cs
shr
ja
mov
int
xor
xor
out
push
jbe
xor
sub
mov
pop
mov
int
into
cwde
mov
sbb
loop
lahf
rcl
fs
dec
div
xchg
repnz
pop
push
lds
and
mov
jae
aaa
lods
push
jmp
ja
ret
mov
mov
jmp
and
xor
movs
movs
jbe
jo
dec
xor
dec
into
xor
mov
das
dec
inc
inc
xchg
mov
dec
push
cmc
fs
stc
inc
xor
and
mov
stos
test
inc
sbb
out
jbe
repz
arpl
xchg
cdq
inc
mov
je
adc
pop
jno
ds
xor
jnp
dec
clc
and
ss
xchg
jnp
arpl
arpl
cli
les
fidivr
jo
add
fiadd
aas
dec
imul
adc
mov
lea
popa
cmps
out
int3
pop
pop
(bad)
stc
fcomp
pop
lea
push
jl
mov
and
xor
ins
aad
in
fcomp
mov
ror
mov
sbb
jnp
adc
jae
cdq
pop
cmc
(bad)
call
sbb
(bad)
and
add
fdiv
test
push
sub
shr
xchg
sti
jl
out
pop
(bad)
lea
mov
push
xchg
mov
hlt
out
jge
loope
and
jmp
adc
dec
push
adc
dec
stos
cmp
cli
pop
gs
inc
fsub
mov
mov
daa
fcomp
push
jno
cli
mov
cs
in
mov
jno
ret
inc
scas
pop
cmp
mov
pop
mov
mov
popf
pop
outs
inc
jnp
lds
scas
push
cs
std
push
mul
pop
aad
shl
jnp
xor
push
pop
sub
sbb
or
mov
mov
cmps
sahf
fwait
imul
jle
daa
repz
leave
xchg
push
je
test
sub
clc
cmp
mov
stc
or
(bad)
cmp
sub
out
repz
retf
arpl
loop
and
xor
aad
cwde
(bad)
dec
addr16
jecxz
addr16
jl
jecxz
mov
cmc
pop
add
sub
mov
icebp
add
adc
mov
lock
es
sub
mov
pop
in
iret
cmp
je
dec
clc
push
hlt
pop
push
mov
scas
ror
stos
adc
and
add
inc
daa
push
cdq
icebp
imul
mov
inc
out
addr16
stc
(bad)
in
mov
pop
stc
bound
call
ror
sbb
sbb
cmp
rcl
std
pop
jmp
fwait
push
push
cmp
add
sbb
pushf
call
pop
inc
sub
pop
push
test
ret
out
sbb
rep
xor
pop
sbb
mov
outs
cld
jge
gs
push
lods
push
jmp
jecxz
scas
dec
inc
daa
push
or
jns
loope
lock
cs
xor
mov
test
lods
cmp
jno
dec
out
fnstenv
xchg
adc
int3
mov
into
cmp
jo
mov
or
pop
mov
xchg
outs
inc
push
aas
inc
lock
and
sbb
or
xchg
jmp
adc
mov
cli
mov
ror
stos
xchg
xor
sub
fs
jg
cld
push
cli
jmp
mov
lds
call
stos
enter
(bad)
jecxz
jmp
addr16
or
aam
outs
outs
stos
ja
xchg
jno
das
xor
bound
mov
dec
enter
mov
cmp
add
dec
ret
mov
dec
rol
test
test
fnsave
loopne
adc
loop
fnsave
jno
adc
outs
sbb
call
aad
popa
jnp
sub
push
pop
daa
and
inc
adc
out
dec
loope
call
jmp
sub
push
jmp
sar
(bad)
jl
cmp
pop
pop
sub
jb
test
push
ins
cmp
test
cmp
popf
push
pushf
cmp
pop
mov
mov
dec
fucomp
xchg
dec
jecxz
aam
dec
dec
in
dec
ins
pop
xor
mov
sbb
sahf
sbb
test
xchg
sbb
adc
hlt
and
push
fistp
mov
test
and
cmp
xchg
cmp
add
mov
xor
or
inc
icebp
push
jl
mov
stc
xchg
div
scas
lahf
mov
js
mov
pop
mov
cmp
inc
mov
adc
stos
es
pop
xchg
dec
add
xchg
bound
inc
icebp
sbb
int
fld
ins
pusha
call
ficomp
cld
out
ror
inc
or
mov
dec
mov
fld
out
sbb
out
aam
pop
cmp
dec
mov
rcl
dec
out
push
fidivr
ss
and
dec
push
(bad)
into
jne
in
xlat
popa
xchg
xchg
push
stos
push
cmp
scas
mov
jno
jmp
mov
mov
mov
mov
ins
sbb
bnd
cmp
inc
add
fist
cmp
cmps
or
cmp
cmc
xchg
scas
push
stos
dec
push
mov
pop
inc
popf
fistp
inc
sbb
ds
scas
sti
mov
xchg
mov
std
inc
add
je
cmp
mov
add
inc
dec
mov
(bad)
out
cli
movs
pop
retf
sbb
enter
imul
call
out
mov
xor
push
call
call
xchg
push
ret
sbb
lea
sbb
into
jle
pop
int3
lea
push
xor
or
in
movs
ret
arpl
jmp
jp
mov
sbb
inc
jecxz
push
xlat
in
loopne
pop
test
pop
sbb
mov
xlat
movs
xchg
jbe
or
mov
cmp
out
jg
fidiv
js
leave
icebp
leave
xor
inc
mov
popf
mov
jge
iret
popa
add
mov
cmp
jnp
mov
mov
dec
dec
mov
sbb
pop
aaa
push
mov
jle
and
sbb
jbe
shr
jmp
xor
mov
hlt
shl
stc
jns
call
push
xchg
mov
push
popf
(bad)
es
dec
(bad)
out
adc
fnstenv
lds
dec
(bad)
mov
jge
sub
call
adc
iret
jne
(bad)
rcr
std
out
inc
es
(bad)
ins
mov
out
adc
cmp
sbb
push
dec
sbb
lods
js
mov
sub
cmc
rcl
shr
cmp
mov
pop
jb
test
int
or
push
andnps
ds
sub
cmps
pop
hlt
in
push
cs
stc
repz
daa
cmp
adc
jno
adc
pop
pop
fist
lahf
(bad)
adc
cwde
fistp
pop
pop
imul
sub
(bad)
mov
push
clc
int3
pop
icebp
push
popf
jnp
(bad)
lock
mov
xchg
xor
mov
xor
pop
stos
push
jmp
stos
shl
scas
xor
mov
lea
push
lods
in
add
ficom
add
aam
gs
cmps
lea
jmp
and
int3
xor
mov
xchg
hlt
ret
data16
adc
pop
cmp
xchg
aad
mov
ja
xor
sub
push
int
cmp
popf
xor
or
je
in
and
pop
jns
cmps
loop
cmps
(bad)
push
sbb
mov
push
aad
sahf
icebp
and
rcr
and
xchg
sbb
ss
jo
aad
int3
iret
mov
mov
mov
retf
bound
shl
inc
mov
xchg
les
ret
sbb
ror
jg
mov
scas
and
mov
adc
popf
xor
and
jge
jo
xchg
adc
adc
push
(bad)
out
adc
push
ja
mov
rcr
sub
xor
dec
sti
sbb
cmc
rcr
adc
enter
fstp
frstor
mov
fwait
dec
nop
mov
xchg
call
mov
cwde
fwait
sub
mov
ror
fnsave
jb
dec
xor
sub
xor
shr
mov
mov
sub
and
retf
push
jae
push
sbb
xchg
adc
outs
mov
imul
lods
dec
je
arpl
js
push
sub
aam
xchg
imul
adc
movs
xor
sbb
out
les
xor
into
adc
jge
and
mov
mov
push
pop
cmp
mov
pushf
(bad)
outs
test
mov
lods
push
je
mov
or
or
ds
scas
jmp
xlat
fwait
or
fwait
mov
and
mov
push
sbb
je
add
sbb
sub
ins
(bad)
mov
sahf
imul
fcmovnu
ss
push
les
push
bound
dec
pop
sub
sub
adc
bound
or
cmps
movs
push
hlt
in
rol
push
mov
xor
in
or
test
jp
fiadd
fidiv
jp
add
cmp
or
cdq
jle
inc
stos
xchg
lea
lahf
sahf
pop
ror
movs
xor
into
enter
pop
pop
loopne
in
xlat
xor
mov
mov
shl
cdq
push
and
add
mov
mov
pop
push
inc
test
sar
fimul
ins
pushf
fisttp
cmp
test
jnp
rol
xor
and
fist
hlt
jbe
mov
retf
loopne
in
sbb
pop
ja
hlt
add
adc
std
mov
mov
inc
addr16
push
or
mov
push
rcr
(bad)
cli
jge
ror
xor
jae
inc
mov
ret
sbb
xchg
jmp
lods
push
repnz
dec
or
xchg
rcl
aas
adc
jb
cmps
inc
adc
mov
es
mov
mov
loope
ins
jp
repnz
xchg
dec
dec
test
jle
add
jmp
push
sub
sbb
add
adc
dec
dec
in
jo
test
nop
mov
dec
push
xor
fstp
cmc
(bad)
in
outs
xor
imul
inc
mov
cmp
mov
mov
aam
int
aam
mov
in
mov
add
outs
dec
and
jnp
push
xor
mov
push
dec
lods
sub
(bad)
(bad)
pusha
jp
mov
scas
xchg
ins
add
rcl
pop
mov
xor
test
fisttp
inc
mov
push
test
jle
jp
arpl
stc
dec
jl
lds
pop
lods
push
mov
sub
inc
aas
in
in
and
shl
cmp
xchg
ret
mov
in
jo
or
cdq
ss
es
addr16
push
push
jmp
mov
lods
jae
xchg
push
pop
lods
fld
enter
xlat
ds
jmp
jno
lds
inc
add
mov
jns
inc
cwde
stos
ins
pop
jg
dec
mov
mov
adc
adc
repz
outs
js
shl
in
cmp
xchg
mov
jmp
mov
or
cmp
imul
and
jmp
dec
xchg
test
movs
aam
loop
rcl
div
mov
xchg
ss
sbb
shr
or
or
call
xor
xchg
iret
sbb
push
pop
jl
push
push
push
sub
xor
lods
mov
mov
jge
addr16
and
push
push
adc
push
(bad)
sub
popa
xchg
and
or
cli
call
or
(bad)
iret
inc
pop
dec
xchg
sbb
push
fwait
es
out
mov
imul
jne
stc
and
cmp
ins
fwait
test
daa
aad
arpl
jg
jno
or
ins
mov
(bad)
repnz
or
aas
jne
in
sub
test
cmps
dec
xor
mov
xchg
cmp
sub
popf
xchg
jo
(bad)
mov
fs
in
xor
leave
xor
call
dec
mov
div
mov
fistp
aas
xchg
push
lods
pop
neg
cmps
lds
stos
pop
loopne
xchg
push
sbb
(bad)
bound
cmp
aad
cli
dec
pop
jae
cmps
push
sbb
jp
(bad)
rcl
cmp
push
stc
into
ins
push
mov
inc
sar
out
mov
in
xlat
adc
cmp
iret
ins
repnz
and
rol
add
mov
sbb
mov
call
jno
cmp
mov
cmp
xchg
jmp
mov
inc
dec
inc
enter
rcl
loop
xlat
enter
cmc
ins
sbb
cdq
xchg
sub
sub
bound
test
sbb
adc
mov
mov
je
call
fistp
pushf
or
pop
ficomp
mov
hlt
mov
push
hlt
sub
or
out
pop
ins
int3
adc
or
xlat
not
adc
xchg
imul
jb
add
cmp
jnp
cli
fld
mov
fwait
addr16
dec
push
aas
mov
pushf
cld
ins
ins
push
fild
xor
xlat
pop
ret
ins
(bad)
jae
xlat
inc
jb
lea
add
cmp
sbb
dec
scas
inc
and
jp
mov
sbb
or
dec
jae
inc
dec
jecxz
int
scas
sub
ds
mov
sti
sub
sbb
mov
scas
(bad)
stos
icebp
addr16
ds
cdq
call
lock
outs
into
push
ror
fiadd
mov
out
daa
dec
lahf
or
sahf
push
push
jo
cmp
cmp
cmps
(bad)
jecxz
mov
adc
mov
ds
imul
into
inc
popf
add
and
fcmove
jns
out
inc
jns
jl
test
add
scas
pop
call
pop
sub
push
mov
add
scas
movs
and
adc
cli
sub
in
xchg
xchg
jne
push
dec
cli
add
daa
scas
pop
sub
dec
jno
adc
clc
mov
aad
leave
or
mov
mov
lahf
pop
jmp
fld
push
iret
jge
pop
les
data16
adc
sub
mov
sbb
sar
das
jno
mov
mov
pushf
mov
out
clc
jmp
mov
add
jns
jmp
mov
sbb
add
shl
add
test
repz
aad
mov
cmp
sub
jae
pushf
stos
cwde
push
xor
arpl
jb
ret
adc
mov
cmp
push
jle
cmps
cmp
pop
sti
sbb
clc
clc
retf
add
aad
mov
mov
cld
push
or
out
aad
or
xchg
rcr
xor
(bad)
enter
lea
mov
ss
adc
daa
sahf
dec
mov
icebp
(bad)
and
(bad)
(bad)
sub
inc
rcl
mov
sti
mov
fdiv
mov
and
into
aad
inc
xor
ficom
frstor
out
ror
xor
adc
and
into
jecxz
mov
pop
push
cmps
loopne
outs
and
or
imul
push
cmp
jl
mov
out
dec
sahf
out
out
mov
cmp
adc
out
push
jno
out
(bad)
adc
pop
and
mov
push
xchg
out
mov
sahf
repnz
xor
push
push
cmp
test
pusha
(bad)
gs
(bad)
ins
jp
out
add
rcl
or
das
clc
rol
mov
mov
test
push
sub
or
fadd
xor
rcr
jno
xor
arpl
repnz
cmp
cmp
iret
and
and
fsubp
add
sti
add
fucomip
push
cmp
inc
inc
call
aam
ror
out
push
iret
mov
pop
icebp
call
clc
cs
add
xchg
aaa
jno
push
cmp
push
cs
dec
mov
(bad)
fs
lock
xor
jne
fcom
cmp
mov
pop
xchg
jg
add
adc
add
(bad)
and
or
cmps
pop
mov
popf
sub
cmp
and
fs
in
adc
sub
outs
cmp
dec
into
aad
xlat
pushf
inc
scas
pop
mov
das
sar
sbb
dec
push
ins
dec
outs
or
(bad)
jno
jl
pop
push
cmc
(bad)
cmp
jmp
adc
inc
loop
inc
pop
mov
test
adc
push
add
sbb
xchg
sub
inc
pop
jne
push
daa
jne
ds
subps
scas
add
fwait
and
je
jb
jp
stc
popf
stos
(bad)
mov
imul
dec
jo
jbe
test
mov
jg
sti
jle
mov
pop
std
push
mov
ret
rol
jne
pop
retf
sub
push
xchg
or
inc
pop
cmp
cmp
jecxz
push
in
sub
div
ret
mov
jl
sbb
loope
arpl
nop
mov
sbb
mov
pop
push
mov
fstp
sub
mov
inc
sbb
shl
aaa
xor
fs
fdiv
xchg
pop
sbb
jmp
cld
add
in
push
imul
push
std
shr
jmp
in
aam
and
mov
inc
cmc
loopne
sti
push
and
in
out
jb
(bad)
je
in
cmc
mov
push
mov
stc
stos
les
mov
xor
dec
xor
push
sti
mov
mov
retf
shl
aas
(bad)
jle
std
cld
sti
stc
jg
shl
push
cmps
repnz
retf
xchg
(bad)
push
bound
push
or
jno
or
xchg
(bad)
lods
jl
mov
ds
bound
push
data16
xchg
mov
pop
mov
xchg
retf
rcr
repz
retf
sub
sbb
dec
gs
ja
into
test
popf
retf
xor
test
retf
pop
mov
loope
sti
(bad)
retf
adc
sahf
lock
test
test
and
adc
mov
leave
jae
xchg
xchg
repnz
mov
mov
cmp
mov
xor
out
into
js
mov
cld
ret
ficomp
(bad)
cwde
cmp
js
test
arpl
sbb
ret
jmp
push
stos
shl
gs
out
jg
pop
es
lods
int3
loop
hlt
adc
sbb
jnp
push
scas
jmp
xor
ret
ds
jmp
xlat
jg
xchg
int3
outs
sbb
push
sub
movs
xchg
dec
push
int3
sbb
push
mov
(bad)
pop
out
dec
sbb
int3
test
(bad)
xor
loope
fsub
or
data16
cmc
adc
aaa
sbb
xchg
pop
(bad)
pop
sbb
lock
xor
jg
xchg
xor
adc
out
ins
and
in
les
cs
loopne
movs
inc
stc
sub
dec
dec
pop
and
jnp
cli
fs
mov
cdq
or
dec
das
pop
bt
aas
and
loope
das
loopne
lea
test
jns
shl
pop
repz
cmp
xchg
mov
sbb
mov
cmp
xlat
xor
movs
fcom
dec
pop
ins
dec
daa
push
in
fbld
mov
loope
inc
or
ror
cmp
daa
jmp
(bad)
pushf
inc
sar
outs
ins
jae
scas
xor
imul
xchg
sbb
xchg
push
je
or
adc
jmp
jno
(bad)
out
dec
sbb
shl
push
xor
push
fmul
lods
inc
lods
or
aaa
adc
jae
(bad)
mov
ds
(bad)
aam
out
pop
outs
push
call
sbb
adc
sub
mov
imul
cwde
ins
xchg
add
push
dec
jb
push
div
jg
xchg
into
and
dec
cmc
dec
jg
ss
in
(bad)
pop
mov
xchg
mov
pop
xor
or
cmps
pop
ins
rol
adc
mov
jns
mov
out
cmc
lock
fstp
sub
(bad)
adc
and
scas
inc
dec
push
push
fisttp
xor
pushw
mov
cmp
jo
imul
pop
ins
(bad)
es
ss
lods
fbld
ins
test
sbb
and
cmp
(bad)
out
aad
dec
xor
js
gs
test
xchg
add
data16
cwde
inc
cs
outs
adc
in
fwait
popf
push
out
fwait
arpl
shl
dec
cli
jnp
adc
(bad)
out
add
mov
mov
inc
mov
(bad)
lods
mov
leave
sub
sub
pop
lock
nop
jnp
setg
(bad)
pop
out
xor
cli
mul
shl
mov
xor
fdivr
scas
jmp
dec
sahf
popa
ins
dec
mov
ss
jnp
cmc
inc
dec
in
mov
into
and
jmp
or
lock
bound
iret
inc
cwde
fild
jmp
fmul
mov
xchg
leave
or
sti
cwde
retf
adc
cld
pop
push
cmp
arpl
pop
pop
ins
(bad)
int
cmp
pop
and
xor
(bad)
jb
jmp
cmp
clc
xchg
stc
and
jge
mov
sahf
sbb
loopne
jo
stos
dec
loope
sub
adc
or
iret
ins
pop
or
(bad)
lea
jecxz
adc
enter
pop
(bad)
fwait
sar
lahf
dec
or
xchg
js
out
dec
loop
xchg
xlat
icebp
mov
cli
xor
cmps
pop
add
jmp
and
mov
cwde
aaa
aaa
inc
xchg
movs
data16
jg
les
(bad)
and
xchg
or
jne
rcr
ins
pop
push
or
fild
or
jl
mov
aas
loopne
stos
hlt
add
outs
(bad)
call
jecxz
out
(bad)
fistp
imul
push
ja
(bad)
int3
int
xchg
mov
xchg
pop
jb
rcl
pop
or
shl
ror
std
in
lds
sub
or
xchg
fwait
shl
or
loopne
aaa
repz
inc
int3
mov
inc
push
cmps
in
xor
pop
ja
xchg
mov
rcl
pop
retf
bound
test
lods
arpl
dec
add
xchg
fdiv
xchg
mov
cmp
and
cwde
xor
or
pop
sar
or
pop
aam
fmul
sbb
pop
cmp
test
into
mov
int
cmc
and
lods
push
icebp
jo
aas
shl
push
jecxz
add
out
lds
cld
jge
mov
and
bswap
aam
bnd
outs
out
fdivr
fs
mov
dec
push
jns
les
inc
mov
mov
icebp
dec
cmp
mov
js
movs
imul
test
into
imul
leave
jge
sahf
movs
adc
ss
retf
adc
(bad)
test
iret
test
push
mov
pushf
sub
ins
jae
(bad)
pop
xor
inc
dec
ja
push
imul
cmp
xor
clc
in
push
idiv
(bad)
fstp
inc
jl
fisttp
sub
ins
inc
std
fcmovbe
fwait
loopne
jmp
jmp
(bad)
xor
jmp
add
arpl
loop
imul
ret
inc
xlat
je
repz
push
sar
fwait
jecxz
xor
mov
loop
or
and
add
jae
xchg
lock
js
movs
enter
movs
test
push
xchg
jle
sbb
or
push
lea
dec
cld
sub
add
add
dec
dec
pop
jns
mov
pop
sub
mov
icebp
sar
mov
mov
mov
lods
push
fimul
sub
std
jge
or
cmc
mov
mov
daa
jns
or
mul
out
dec
dec
sti
out
mov
adc
xor
cmp
sar
ficomp
dec
ss
or
pushf
or
add
fistp
xchg
sbb
dec
cld
and
(bad)
pusha
into
out
(bad)
sti
jecxz
add
mov
cs
or
fcom
stos
loopne
xchg
sbb
aad
shl
frstpm(287
xor
out
fsub
xor
mov
push
sbb
lea
pop
ud1
xchg
sbb
(bad)
sahf
test
ins
jmp
mov
(bad)
adc
outs
fistp
mul
cwde
pop
adc
pop
shl
jns
sub
mov
cmc
xchg
leave
cmp
mov
fsub
test
jecxz
pop
dec
jle
pop
sbb
pop
ins
cmp
cmc
lock
mov
into
(bad)
stos
cli
scas
fsqrt
outs
mov
out
mov
fstp
mov
inc
pusha
(bad)
jbe
inc
xchg
jg
xchg
enter
adc
jecxz
jno
dec
leave
icebp
out
mov
ds
cmc
mov
sbb
leave
jno
fsub
cld
iret
cmp
pop
mov
sub
(bad)
sar
fisub
call
push
or
mov
cwde
mov
mov
dec
jnp
lea
xor
sti
jne
adc
and
mov
mov
pop
mov
loop
inc
icebp
sbb
mov
call
sti
fsubrp
cmps
(bad)
mov
shr
mov
pop
pushf
adc
loop
rol
dec
or
call
and
cmp
mov
push
imul
sbb
rcl
into
ja
cmp
mov
clc
sub
leave
inc
jmp
mov
out
jecxz
pop
xor
test
push
rcl
lahf
pop
idiv
sahf
xor
xor
and
shr
sub
inc
or
push
or
lods
push
mov
pop
pop
scas
jl
cdq
mov
je
pop
xor
pop
pop
data16
mov
cli
aam
jns
mov
in
loope
ja
shl
ja
mov
pop
cmps
retf
sub
aam
cmp
(bad)
jmp
lock
pop
into
or
out
jae
rcl
mov
lods
inc
inc
cwde
std
cld
(bad)
push
movs
or
mov
sub
cmc
xchg
jmp
call
cmp
dec
ins
mov
or
inc
add
das
aas
add
and
std
inc
ins
pusha
push
push
pushf
mov
or
pop
mov
cmp
dec
xor
out
pop
push
(bad)
fisubr
in
sti
arpl
fmul
mov
inc
jae
inc
sub
pop
and
or
lea
and
dec
out
jle
add
sub
add
push
add
dec
sbb
outs
bound
out
dec
stc
das
inc
push
sub
scas
movs
push
(bad)
pop
test
or
or
xor
test
cmp
cmp
add
inc
xchg
out
icebp
je
lea
repz
cwde
test
rol
out
xor
inc
bound
xlat
pop
mov
mov
push
bnd
int3
mov
xor
sbb
sahf
bound
into
mov
adc
mov
xchg
ja
xor
test
fcomp
cmp
adc
pop
ja
aas
and
mov
push
jbe
mov
adc
ins
mov
bswap
rcl
mov
push
mov
lea
into
shr
js
mov
pop
dec
pop
mov
adc
mov
pop
aad
jb
(bad)
in
push
fild
arpl
jmp
ss
mov
mov
shl
sub
adc
mov
push
xchg
jecxz
sub
cmc
mov
retf
add
out
fwait
(bad)
std
in
fdivr
or
fstp
outs
rcr
std
ret
pushf
mov
or
jl
fidivr
push
sub
mov
push
lock
out
inc
loope
ret
and
in
into
stc
(bad)
mov
gs
jp
mov
dec
dec
mov
mov
inc
in
mov
push
cvttps2pi
vpavgw
push
mov
dec
ins
rol
lods
icebp
frstor
icebp
loop
and
mov
jnp
jecxz
or
test
push
int3
sbb
add
in
push
int
stos
mov
(bad)
test
xor
(bad)
fwait
cmps
sar
push
dec
mov
mov
sub
mov
jbe
add
cmp
sub
and
jbe
inc
movs
push
test
mov
(bad)
dec
pop
(bad)
iret
jge
sbb
push
dec
jl
cwde
out
xchg
pop
in
imul
fwait
sbb
xchg
imul
popa
sub
(bad)
jg
aam
das
out
and
dec
and
cdq
cmc
xchg
ss
dec
jne
jnp
mov
fs
clc
packssdw
jno
fcom
ds
xor
sbb
loopne
test
out
pushf
adc
mov
adc
sbb
loope
mov
sar
call
mov
mov
mov
aad
xchg
int3
in
sbb
mov
mov
xchg
inc
cmp
xlat
mov
fsubr
and
clc
push
mov
xchg
push
sbb
(bad)
daa
out
push
popf
cmp
xor
ds
and
sbb
mov
lds
fimul
(bad)
cmps
mov
outs
mov
pop
stos
add
mul
dec
movs
(bad)
scas
cld
idiv
call
in
jb
jns
out
jb
cmps
popa
cdq
adc
fnstenv
(bad)
hlt
sbb
push
aad
adc
cs
aas
and
leave
mov
loopne
push
lock
arpl
sbb
adc
icebp
repz
xor
lea
cli
adc
out
push
cli
xlat
sbb
sbb
cmps
xlat
inc
fcom
and
in
outs
arpl
cmp
pop
pop
sahf
adc
push
jmp
jg
cmps
sar
xlat
adc
mov
pop
jbe
icebp
and
add
adc
sahf
sbb
pop
retf
fs
push
jb
clc
cwde
or
inc
loop
xchg
xchg
sbb
cdq
(bad)
pop
(bad)
movs
push
mov
out
sar
jno
xchg
push
mov
jecxz
popf
rcr
xchg
(bad)
push
dec
xor
out
dec
inc
jecxz
push
lods
lock
inc
popa
(bad)
enter
dec
cmp
fwait
inc
mov
push
mov
sub
pop
adc
push
pop
inc
gs
icebp
aas
mov
xchg
jb
data16
add
shl
mov
in
loopne
mov
cld
or
loopne
push
clc
les
dec
jl
push
mov
mov
loope
stos
pop
jecxz
dec
in
enter
xchg
jnp
mov
int3
(bad)
out
cmp
and
jb
cmp
sbb
ficom
clc
mov
lods
add
mov
jns
sub
sti
loop
sbb
mov
inc
dec
out
outs
jp
add
lds
cmp
mov
fisubr
cmp
cmp
lods
mov
aas
into
mov
loopne
jb
sub
jae
mov
fisub
pop
(bad)
imul
dec
out
cmc
adc
aas
(bad)
jl
(bad)
(bad)
and
push
in
mov
push
mov
jnp
xchg
pop
adc
jo
add
enter
xchg
inc
dec
in
loope
inc
outs
jo
movs
pop
jo
or
scas
pop
jl
mov
out
cmp
test
(bad)
out
push
jecxz
fiadd
cwde
(bad)
lahf
cmp
jle
daa
sbb
(bad)
mov
imul
inc
mov
mov
xlat
cmp
adc
sub
gs
mov
out
sub
push
sub
push
push
cmp
mov
add
sahf
adc
retf
fucomip
or
ins
fisubr
cmc
sbb
lahf
jmp
aam
pop
xor
and
into
mov
popa
dec
jbe
jns
out
mov
cwde
sub
push
push
loopne
xchg
clc
imul
(bad)
mov
js
repnz
cmp
ror
xchg
retf
pop
cmp
jge
dec
popf
aas
cmc
jle
loop
cmc
retf
cmp
dec
jns
clc
ret
idiv
int
ins
repnz
jbe
mov
cmp
mov
shr
push
lea
jecxz
push
test
jl
mov
xchg
daa
(bad)
pop
outs
retf
sahf
cld
jo
jp
int
test
jno
out
lahf
test
fnsetpm(287
jns
jno
icebp
pushf
xchg
(bad)
mov
sbb
or
out
inc
in
jb
add
rol
cmps
xor
mov
loopne
cmp
pushf
push
cmc
mov
test
xor
fstp
or
(bad)
ss
repz
pop
jmp
sahf
arpl
xchg
cmp
mov
fadd
mov
enter
rcl
and
jnp
jno
loop
shr
movs
pop
leave
rcr
clc
xor
sub
ss
xor
jns
(bad)
mov
out
repz
sbb
cmps
xor
jo
cmp
pusha
loopne
pop
bound
or
aaa
xchg
scas
adc
mov
mov
inc
inc
retf
call
cmp
adc
xchg
dec
fdecstp
xchg
push
sub
in
adc
inc
xor
dec
int
xor
je
pusha
repz
fcomp
jl
jle
ds
iret
pop
stc
push
imul
scas
in
or
push
out
or
dec
repz
ret
fwait
mov
cwde
les
push
mov
and
adc
add
jo
lock
pop
lock
push
in
pop
stc
add
mov
or
cld
pop
inc
xor
mov
xor
ss
dec
call
sub
repnz
(bad)
faddp
adc
dec
push
sti
mov
xor
jo
jl
jb
cmp
or
in
test
fwait
lods
inc
pop
add
add
adc
jae
cmps
push
mov
inc
xlat
outs
adc
aaa
xchg
lahf
frstor
inc
call
xchg
mov
push
stc
dec
les
pop
loopne
jo
das
leave
mov
push
push
(bad)
adc
scas
xchg
push
je
retf
(bad)
pop
lock
push
sub
aam
dec
push
adc
outs
push
xor
xchg
mov
sbb
dec
sbb
lods
and
int
xchg
repz
rol
out
mov
push
jb
ins
jo
mov
mov
and
cmps
std
jmp
js
jle
mov
jecxz
shr
jno
nop
jns
jbe
jne
mov
push
mov
mov
test
test
xchg
mov
xor
aam
mov
jae
clc
push
jle
or
jecxz
sub
in
mov
retf
jns
sbb
div
and
lods
mov
test
jecxz
jno
mov
pop
and
jmp
test
(bad)
aaa
cs
push
cwde
stos
pop
push
ins
scas
pop
stos
daa
adc
repnz
xchg
cli
int3
int
jmp
test
cld
push
test
repnz
push
aad
cmc
and
dec
mov
mov
in
jp
retf
clc
imul
jns
xchg
enter
jne
(bad)
jle
std
cld
jecxz
fdiv
inc
jecxz
jnp
fstp
movs
hlt
add
mov
add
xor
nop
call
or
cmp
inc
and
add
aas
lock
push
sub
pop
(bad)
icebp
adc
mov
or
fistp
push
fcom
jmp
xchg
mov
mov
into
icebp
cmp
iret
jno
jo
mov
sbb
mov
outs
pop
fisubr
push
cmp
jbe
in
mov
push
arpl
pop
pop
dec
or
aas
in
in
mov
scas
std
mov
xchg
jno
test
jnp
fimul
(bad)
jmp
mov
pop
jl
or
loopne
and
bound
pop
outs
push
cmc
stos
mov
mov
div
add
cmp
xchg
out
ins
push
movs
cdq
imul
dec
(bad)
sbb
cwde
mov
outs
mov
lods
cmps
pop
push
add
dec
mov
jmp
ja
pop
xchg
outs
scas
std
adc
pop
(bad)
mov
std
lds
jnp
jnp
xchg
or
adc
xchg
aaa
sub
push
pop
pop
mov
clc
stos
out
ins
jae
(bad)
fsub
inc
cmp
test
addr16
sar
test
mov
outs
and
popa
jo
(bad)
es
mov
jo
fidivr
repnz
mov
bswap
mov
movs
mov
inc
fcomp
push
fcmovnu
jp
pop
jne
addr16
fcom
xor
in
and
add
inc
lahf
stos
out
aad
cli
inc
mov
jnp
lods
inc
xor
xchg
rcl
and
out
pop
or
retf
xlat
imul
mov
ss
push
xchg
sub
stos
mov
pop
mov
push
mov
mov
imul
stc
call
in
ja
or
mov
mov
ins
push
adc
mov
adc
pop
out
sub
in
jge
sub
(bad)
jl
int3
aas
push
add
out
addr16
bound
or
icebp
jbe
test
and
jg
sbb
pop
jb
sahf
in
addr16
test
and
out
data16
icebp
mov
enter
mov
inc
jl
repnz
push
cmp
sub
lds
popa
les
and
repz
outs
out
jle
fs
mov
mov
stc
sub
(bad)
outs
retf
mov
popf
loop
xlat
outs
adc
(bad)
iret
jge
ins
iret
lahf
outs
mov
(bad)
sbb
mov
mov
bswap
xor
and
dec
fnstenv
int
cdq
aam
bnd
inc
ins
bound
pop
inc
ins
test
sub
pop
imul
out
jg
(bad)
imul
lea
imul
pop
(bad)
cld
inc
mov
sub
pop
bnd
arpl
shr
test
inc
cmp
dec
pop
sbb
or
or
clc
pop
or
push
dec
lahf
mov
jno
mov
push
dec
mov
or
(bad)
sar
cli
rcr
xor
fstp
jb
sub
mov
xchg
sbb
sahf
pop
gs
mov
out
cmp
cs
shl
push
cmp
mov
or
loop
imul
retf
into
adc
mov
push
fstp
jp
jmp
les
jl
add
jmp
xchg
sar
cmp
xor
pop
adc
fadd
and
mov
mov
and
jle
add
cld
mov
mov
jmp
mov
push
sub
sbb
push
out
popa
add
add
cmp
sub
inc
inc
inc
mov
adc
sbb
and
mov
ss
in
sbb
mov
push
jge
xor
in
imul
scas
jp
pop
cmc
cmps
mov
or
xor
mov
pop
jns
not
mov
int
dec
push
cdq
shl
inc
cli
loopne
mov
and
aas
mov
inc
in
add
imul
ins
xchg
inc
and
lahf
in
out
dec
nop
shl
or
in
int
pop
fst
add
in
jp
cmp
mov
mov
das
jmp
iret
push
sbb
idiv
jnp
repz
push
inc
dec
mov
mov
inc
aam
sbb
xchg
lock
and
call
push
dec
outs
mov
jl
fidivr
cmp
inc
bnd
aas
or
sub
outs
sar
ficomp
stos
out
mov
ins
sbb
mov
cdq
das
ss
or
xor
xor
and
and
lods
outs
bnd
aas
adc
push
sbb
(bad)
and
(bad)
dec
push
push
xchg
int
lds
(bad)
(bad)
lods
icebp
jno
jecxz
xor
jle
fld
call
ss
test
fs
mov
ss
xchg
adc
pop
and
or
(bad)
fst
pop
mov
pop
xchg
mov
idiv
out
(bad)
jmp
ds
jg
hlt
ret
ret
jae
xor
xlat
test
ja
pop
ret
adc
loopne
push
sub
jle
add
aaa
sub
adc
out
test
jg
jmp
stos
out
out
pop
test
pop
mov
mov
outs
add
jl
pop
adc
fld
es
xchg
retf
(bad)
je
dec
mov
mov
cmp
fsubr
cmp
or
das
jle
fld
xor
imul
test
sbb
mov
rcr
ja
les
test
mov
fwait
cmps
sub
ins
fwait
jae
cmp
retf
pusha
mov
in
cmove
cmps
xor
dec
inc
in
adc
cmp
push
in
ins
dec
xchg
xlat
cmp
(bad)
daa
mov
inc
mov
outs
gs
loope
mov
in
fld
pop
lock
jg
pop
inc
mov
mov
outs
iret
mov
pusha
arpl
outs
sahf
and
inc
enter
jae
xor
mov
das
mov
call
dec
gs
jbe
push
cmp
inc
mov
or
dec
(bad)
xchg
mov
pop
mov
test
mov
and
cli
mov
pop
dec
sub
out
loopne
jmp
aas
inc
add
inc
ret
push
mov
shl
outs
jl
mov
scas
cmps
and
mov
into
in
sub
fist
cmp
jle
xchg
jmp
ret
xor
or
and
mov
out
in
mov
push
push
pusha
jmp
mov
mov
(bad)
cmc
cmps
sti
movs
int
adc
adc
jnp
inc
ins
call
cmc
dec
loopne
xlat
jecxz
test
ret
jge
sub
mov
loopne
repz
rep
pop
mov
clc
push
xor
ror
les
sub
js
pop
ins
xor
or
jbe
loope
out
imul
lea
cmc
ja
imul
in
retf
mov
jg
test
cdq
out
inc
xlat
lmsw
push
ins
sub
jb
xor
jecxz
jmp
pop
dec
pop
sti
mov
cmc
dec
mov
hlt
xlat
jb
cli
mov
mov
lods
inc
rsm
aad
push
test
pop
sub
push
(bad)
cli
je
movs
sar
(bad)
mov
aaa
(bad)
outs
ror
into
mov
dec
mov
int
outs
xchg
mov
inc
push
or
push
(bad)
clc
out
push
pop
xor
inc
(bad)
scas
add
mov
push
xchg
das
sbb
cli
sub
ins
inc
rcl
dec
inc
lock
call
sbb
push
and
and
fldcw
push
xlat
test
and
ss
mov
cmp
sub
or
mov
ds
sbb
or
loopne
mov
mov
retf
ret
jo
push
push
mov
cld
js
and
jnp
sbb
sub
jbe
add
loop
(bad)
push
test
cdq
shl
lock
jne
cmps
dec
inc
xchg
xchg
test
sahf
jmp
and
cmps
fst
ret
ret
retf
jo
jb
stos
mov
cmps
mov
fidivr
dec
test
scas
push
ret
repz
xchg
and
neg
xor
mov
nop
adc
mov
aaa
pop
jmp
movs
adc
mov
(bad)
(bad)
push
sub
cmp
data16
xor
(bad)
xor
or
sub
loop
icebp
sub
sub
or
iret
fsub
clc
mov
mov
lods
sbb
and
mov
and
nop
fwait
scas
push
retf
add
mov
cmp
xchg
das
adc
dec
xor
cs
(bad)
xlat
mov
daa
lahf
mov
sbb
adc
sub
clc
aad
in
cmp
ror
push
cmp
(bad)
ror
add
cmp
push
jns
or
call
movs
jne
arpl
xor
dec
mov
xchg
ins
pmuludq
icebp
pusha
jl
je
mov
cmp
mov
daa
(bad)
loop
sub
daa
pop
fdiv
mov
mov
sbb
sbb
jmp
xchg
shl
pop
and
mov
mov
arpl
fcmovnb
jne
push
xchg
push
ret
mov
cmp
ret
jb
push
cmc
or
(bad)
iret
jno
or
xchg
lods
js
sbb
adc
sahf
jg
dec
mov
test
xchg
stos
fucomp
stc
rcl
fdiv
dec
pop
cmps
jle
push
out
pop
pop
jp
sar
xchg
neg
xor
push
js
cmp
(bad)
retf
adc
les
sbb
push
sub
adc
xor
es
leave
mov
int
movs
mov
test
fcmovnu
sahf
sub
ins
push
ins
cmc
fwait
arpl
sbb
pop
dec
ficomp
mov
icebp
js
ret
pusha
cmps
sbb
mov
cld
xor
push
xor
nop
loope
and
push
out
xor
iret
xor
jne
xchg
add
cmp
jne
push
std
sahf
leave
out
mov
add
les
pop
mov
aad
sub
daa
(bad)
xor
cs
nop
or
retf
xor
cmp
lea
jne
stos
retf
outs
pop
cld
lods
pop
fcmovnb
js
(bad)
icebp
in
outs
push
outs
pop
mov
sbb
ror
daa
loopne
ret
add
dec
ins
loope
mov
std
and
ins
sub
or
fwait
inc
xchg
add
pop
aas
sbb
sub
icebp
push
sar
lock
xor
test
fidivr
push
xchg
mov
cs
and
xchg
es
jmp
sbb
sti
cld
push
sbb
jne
fsub
out
lahf
adc
cmps
fild
lods
sahf
xor
dec
add
and
or
push
dec
mov
and
jecxz
adc
jge
clc
adc
jp
mov
mov
call
jge
into
jecxz
div
jnp
repz
and
lods
push
cwde
jae
mov
(bad)
cmps
add
mov
popa
inc
sbb
push
dec
add
adc
cmps
sub
aad
(bad)
fdivr
mov
lea
es
add
into
add
int3
stc
jge
sub
shl
cmp
test
and
mov
rcl
inc
lods
cwde
jo
(bad)
sti
pop
mov
jle
imul
out
push
fild
dec
je
dec
imul
xchg
sbb
cmp
ja
xor
jno
psrld
or
iret
mov
(bad)
mov
jg
out
fstp
mov
jl
jecxz
push
das
ja
inc
bound
pop
mov
mov
adc
neg
in
and
mov
dec
mov
xchg
shl
sar
repnz
mov
ret
pop
cmp
stos
(bad)
icebp
sub
std
sub
(bad)
mov
xchg
inc
daa
pop
aam
push
fisubr
in
out
jg
or
pop
dec
daa
sti
xor
cmp
aad
call
leave
fsubp
mov
bound
sbb
nop
loop
xor
push
pop
dec
jne
mov
jae
arpl
retf
fst
into
jb
js
mov
leave
jb
pusha
push
iret
pop
stos
pop
fs
push
jns
cmc
mov
aaa
idiv
jae
iret
int
inc
xor
iret
xor
pop
push
fadd
fnsave
and
(bad)
addr16
and
sbb
cmps
add
pop
sub
fdiv
mov
aas
loop
rol
rcr
adc
mov
std
fisttp
jmp
jbe
outs
cli
jo
sahf
jo
sti
mov
fcmovu
or
sub
push
in
not
rol
push
lock
mov
test
push
and
loop
jae
pop
xor
push
cs
push
sub
shl
popf
xlat
retf
out
sti
xor
dec
jl
push
jg
xlat
ins
aas
push
test
vrsqrtps
cdq
cmps
sub
sbb
push
(bad)
add
pop
mov
sbb
sub
fnstenv
lds
jge
mov
cdq
sahf
movs
movs
into
adc
mov
jp
hlt
or
inc
mov
std
int
inc
mov
outs
(bad)
cli
dec
mov
xor
pop
mov
mov
dec
in
adc
push
icebp
sbb
imul
jg
(bad)
cli
icebp
mov
jae
in
inc
test
adc
sar
shr
sbb
mov
retf
iret
imul
movs
jns
and
aaa
mov
ins
pop
fs
mov
out
sti
push
call
lock
lahf
fs
outs
and
test
add
in
xlat
stc
lea
xchg
mov
and
xchg
mov
inc
jge
div
dec
jno
jge
enter
rcr
add
and
jmp
stos
mov
ja
cmp
ds
out
mov
imul
aad
cmp
(bad)
push
ja
jmp
adc
cli
retf
icebp
xchg
cmp
loope
mov
ret
dec
jnp
lahf
mov
jecxz
mov
loope
outs
mov
jno
lea
outs
(bad)
jae
mov
das
dec
push
mov
dec
test
sub
js
in
add
push
call
and
cmp
leave
and
outs
repz
xchg
out
aad
setnp
pop
sub
jl
lods
xchg
adc
ja
sbb
leave
mov
jge
or
dec
mov
fcomp
xor
aam
dec
jno
jmp
pop
cli
mov
(bad)
adc
pusha
outs
jo
pop
pop
pop
jg
pop
pop
xchg
test
js
xchg
adc
push
dec
sbb
retf
mov
in
add
xor
push
xchg
(bad)
(bad)
out
mov
fcmovnu
pop
jl
mov
xlat
test
pop
adc
xchg
push
fdiv
jae
adc
stc
jl
(bad)
movs
ss
aas
push
lea
xor
dec
and
sub
fcomp
(bad)
fucomip
xor
xchg
xor
imul
retf
xchg
imul
mov
mov
cmp
idiv
fisubr
outs
mov
(bad)
mul
in
bound
xchg
neg
xchg
popf
rcr
outs
jl
shl
xor
mov
or
in
pop
mov
nop
dec
cmp
xor
mov
mov
pop
mov
fwait
cmc
pop
pop
jle
imul
jecxz
out
or
aad
mov
gs
loopne
mov
mov
xchg
sub
sbb
pop
push
test
mov
xchg
int
in
mov
ds
das
movs
mov
mov
mov
cmp
push
loope
out
push
aas
es
pop
pop
lfs
neg
jp
sub
out
sub
lds
xchg
jns
or
scas
aad
mov
and
xchg
xchg
and
out
fisubr
aam
out
scas
xor
ins
fcom
loop
test
pop
mov
lock
pusha
dec
sti
les
cmp
push
mov
xabort
(bad)
lahf
pop
aas
pop
mov
pop
das
(bad)
pavgw
nop
test
push
or
cmc
(bad)
out
lahf
xchg
add
jle
mov
sub
(bad)
mov
xchg
retf
(bad)
mov
js
je
scas
fnclex
dec
scas
dec
lods
repz
sysexit
hlt
das
shr
jae
inc
inc
push
fisttp
call
repz
or
in
movs
int
das
push
js
xor
outs
pop
add
xchg
into
bnd
push
aas
hlt
ret
ja
jge
popf
xor
sar
add
push
int3
sti
shl
sbb
imul
loope
inc
(bad)
repz
sub
in
cmps
ins
sar
xchg
iret
outs
xchg
push
hlt
jae
scas
ins
jbe
cdq
cmp
fcom
(bad)
mov
aad
stc
pusha
mov
fsub
mov
jmp
mov
push
cld
jmp
pop
push
mov
sti
jp
jmp
pop
in
adc
xchg
mov
xor
fwait
repz
pusha
icebp
xchg
nop
retf
or
inc
sbb
aad
sub
pop
pop
and
mov
jmp
into
(bad)
sbb
dec
sahf
int3
sbb
mov
or
mov
add
(bad)
dec
je
dec
pop
out
and
cmp
jge
pushf
aaa
or
hlt
sub
outs
and
sub
loop
push
movs
xor
cmp
test
call
jo
jl
mov
leave
cmps
add
jno
xchg
push
push
mov
leave
fsub
jae
xlat
adc
shr
(bad)
xchg
icebp
sar
inc
jle
add
push
cdq
(bad)
xor
lahf
jg
inc
dec
sub
adc
sub
jne
in
adc
mov
fimul
fstp
enter
sbb
sahf
push
gs
jo
repz
mov
ds
in
add
dec
inc
punpckhdq
nop
sahf
aam
(bad)
mov
cmp
cli
push
(bad)
into
jnp
mov
imul
lea
dec
pop
jnp
scas
btc
aas
cmp
sub
icebp
mov
jnp
ss
jmp
pop
mov
shr
in
ss
mov
jecxz
lods
jbe
ss
jg
mov
pushf
sbb
cmp
mov
imul
test
mov
jns
xor
outs
pusha
xlat
push
mov
jae
adc
cmp
daa
out
push
sar
jb
jg
xchg
ins
fyl2x
std
out
leave
pop
jmp
outs
addr16
rep
xor
sub
mov
cmp
shl
sahf
mov
ins
xlat
cmps
xchg
mov
mov
push
cmps
jmp
sub
hlt
stc
stos
or
stos
bound
jnp
(bad)
ins
das
call
sbb
add
mov
aaa
cli
fsubp
(bad)
jb
iret
jl
out
inc
jne
arpl
test
add
dec
test
mov
pop
fisubr
cmp
cmp
mov
pusha
js
jmp
adc
adc
fdivr
pop
dec
adc
mov
shl
or
sbb
sub
push
pushf
and
adc
or
or
add
rol
ja
cmp
cmp
jnp
outs
aad
not
popf
pop
jmp
cdq
out
cdq
sahf
sahf
jmp
idiv
(bad)
sub
scas
dec
daa
js
ret
inc
xchg
lahf
jl
mov
xchg
jge
dec
mov
jle
dec
dec
mov
pop
std
popa
pop
jmp
mov
rol
pop
sahf
dec
xchg
add
xchg
pop
outs
in
aad
sub
or
rcr
aas
cmc
test
dec
repnz
fnclex
and
adc
sbb
mov
ja
test
adc
mov
jae
retf
xor
xchg
mov
mov
das
mov
and
jne
fmul
and
rcl
mov
rcl
arpl
push
in
ins
mov
cmps
call
imul
lock
push
mov
cmp
cdq
retf
jp
std
(bad)
loope
in
aad
aad
mov
xor
push
sbb
cmc
or
std
(bad)
cwde
sahf
(bad)
fld
fdiv
ds
out
pop
cmp
mov
addr16
jg
test
sbb
dec
dec
cmp
sti
(bad)
outs
in
mov
add
je
dec
movs
push
lock
dec
jno
pop
mov
jle
arpl
xor
cmp
mov
shl
fisttp
push
sti
mov
cli
shl
dec
ror
sub
fwait
movs
ja
push
fcmovu
nop
sahf
fucomi
retf
mov
cli
aad
dec
(bad)
and
jecxz
ja
mov
fnstcw
push
jo
call
in
inc
enter
rcr
mov
xchg
mov
(bad)
aad
shl
and
xchg
cdq
nop
pop
and
mov
(bad)
daa
xchg
mov
aaa
lahf
movs
(bad)
dec
rcr
cmp
outs
in
dec
push
test
adc
pop
icebp
cmp
aad
jmp
fwait
dec
xchg
in
ret
in
mov
mov
ret
loope
add
jnp
xchg
xchg
adc
push
pop
inc
pop
fstp
repnz
adc
push
cdq
jge
xchg
icebp
inc
lock
pop
icebp
pop
or
daa
pop
push
out
es
adc
sub
mov
test
out
bound
retf
loope
pop
or
test
pop
push
popa
aaa
jmp
add
pmulhw
hlt
xchg
rcr
ret
sbb
jmp
and
jl
mov
int
lahf
out
pop
dec
mov
adc
sbb
pop
loope
sbb
ja
mov
in
ins
pushf
enter
shl
ret
pop
sti
in
push
ins
cmp
fcmove
mov
mov
aad
mov
jae
cmp
ins
outs
fadd
test
sbb
xor
jge
or
cmp
sub
aas
hlt
pop
jns
stos
lock
push
inc
clc
test
xchg
test
xchg
hlt
mov
cld
inc
xlat
call
push
ins
push
and
mov
mov
fld
pop
fcomp
in
push
frstor
(bad)
mov
jle
retf
dec
cmp
inc
std
aas
aas
fstp
out
stc
xchg
in
jecxz
enter
mov
leave
sbb
outs
mov
and
xchg
inc
iret
mov
ret
jae
mov
or
add
loope
xlat
pop
popa
adc
ds
adc
sub
jnp
adc
fld
bound
clc
ja
inc
movs
mov
aam
sub
pop
mov
cmp
aad
ds
fwait
add
aaa
pop
jbe
cdq
pop
push
lahf
popf
fistp
mov
mov
test
and
pop
jmp
sbb
push
push
popa
pop
jne
sbb
cli
mov
sub
rcl
lds
movs
xchg
bound
xor
adc
inc
dec
dec
lahf
push
inc
mov
popa
push
pop
sub
not
lods
test
ss
rol
aam
out
mov
ret
dec
leave
sub
in
or
fiadd
cdq
in
in
push
mov
or
pop
cmp
ficom
mov
mov
pop
in
xchg
es
sub
mov
jmp
jns
popa
inc
mov
inc
and
mov
jmp
jae
shl
sub
out
dec
sub
sub
mov
les
ins
mov
jbe
or
popa
fwait
mov
pop
loop
js
fwait
mov
movs
retf
loopne
call
sbb
cdq
cmps
dec
call
dec
xchg
pop
inc
rol
addr16
lods
(bad)
mov
jb
in
leave
jle
cmps
fcomp
sub
rcr
xlat
sbb
movs
call
call
jle
mov
fistp
inc
not
jae
pop
add
sub
repz
sti
fisttp
pop
jmp
bound
dec
sbb
fcom
jo
test
xor
call
inc
jmp
je
fidivr
pop
lods
addr16
cmp
mov
popa
stc
jge
mov
mov
(bad)
adc
pusha
mov
enter
es
and
push
mov
mov
inc
int3
ds
lea
push
xchg
in
mov
pop
je
je
push
pop
mov
jmp
inc
lods
pop
mov
jo
fyl2xp1
jmp
xchg
inc
pusha
scas
cmp
jmp
adc
call
outs
mov
push
push
rcr
js
out
aaa
mov
jp
adc
jle
lahf
(bad)
mov
rcr
jp
out
mov
xlat
mov
mov
lahf
fs
inc
in
xchg
loopne
lahf
in
pop
rol
xchg
cmp
sbb
pop
cmp
stc
jle
adc
stos
or
push
pop
pop
rcl
in
ss
jmp
and
dec
fist
aad
pop
dec
mov
mov
popa
push
ror
fs
sar
shr
repnz
stos
cmp
mov
cmc
daa
mov
xrelease
loopne
add
mov
loope
(bad)
iret
int3
and
cmp
movs
in
repz
push
in
cmp
rcl
adc
clc
enter
sbb
mov
lea
loope
loop
stc
imul
add
push
sub
pop
mov
les
pop
(bad)
hlt
cmc
icebp
inc
arpl
xchg
call
movs
shr
ins
sub
sub
add
xor
rcr
cmp
or
loop
hlt
ret
jne
xchg
movs
aad
outs
or
sahf
sahf
push
jns
cdq
fdivp
dec
pop
pop
push
xor
loopne
neg
push
loop
(bad)
popa
jle
(bad)
ret
push
std
out
mov
push
pop
push
out
aam
imul
cmc
(bad)
dec
push
icebp
js
push
sub
(bad)
xor
nop
fist
push
jns
popf
repz
cmp
int
std
(bad)
pop
shr
outs
test
stos
xchg
mov
and
movs
cmc
int
mov
inc
(bad)
mov
stc
lods
aaa
(bad)
into
push
int3
adc
mov
mov
inc
pop
push
push
add
add
adc
addr16
sti
or
pusha
scas
sbb
lock
scas
test
lds
rcl
or
addr16
mov
inc
add
cmp
shl
imul
ds
mov
in
push
xchg
add
or
aam
aas
jl
(bad)
outs
xchg
(bad)
int3
jp
push
out
mov
xlat
fsubp
int
sahf
cmp
ja
aaa
push
clc
shl
rcr
dec
test
mov
inc
push
and
xchg
cmp
or
lock
(bad)
dec
and
dec
pop
pop
test
in
xor
loop
int
mov
mov
stos
push
das
mov
dec
and
dec
in
retf
pop
(bad)
fmul
jb
cmp
out
lea
mov
add
adc
call
sbb
mov
cs
xor
inc
or
push
test
hlt
lahf
cmp
scas
mov
(bad)
mov
fbld
bnd
in
xchg
out
mov
mov
test
sub
add
adc
bound
loope
jecxz
out
mov
pop
rol
mov
add
push
jle
lgs
add
add
imul
mov
mov
imul
xor
mov
cmp
adc
cmp
sbb
jp
in
or
stos
push
inc
mov
(bad)
cli
lahf
std
cmp
ret
add
fadd
or
jae
dec
shl
inc
add
out
icebp
(bad)
cmp
jb
(bad)
test
push
fadd
leave
and
repz
cmp
add
or
sbb
ja
stc
sbb
sbb
mov
sar
cmp
cmp
cld
(bad)
pop
idiv
sbb
dec
mov
fbstp
out
(bad)
mov
or
pop
shl
fild
(bad)
(bad)
popf
inc
cld
and
shl
adc
jnp
mul
jle
clc
adc
or
dec
out
dec
or
test
lahf
push
fdivr
sbb
push
add
hlt
test
sub
xor
test
(bad)
cmp
push
call
or
and
mov
add
cmp
jo
xor
and
add
push
pop
dec
sbb
push
ins
loope
add
mov
and
dec
pop
test
xchg
shl
loope
xor
pop
add
into
or
or
pop
dec
and
lock
outs
inc
sbb
add
pop
mov
rol
pop
ret
mov
jl
dec
mov
(bad)
inc
adc
pop
nop
popa
clc
jb
fimul
mov
js
jnp
mov
mov
add
add
or
push
out
add
nop
aas
outs
fdivr
scas
dec
add
jmp
in
cmovnp
retf
call
int3
pop
ins
mov
retf
add
push
push
push
add
cwde
test
or
fiadd
dec
es
push
push
xchg
aas
jnp
stos
push
jae
mov
in
js
adc
inc
retf
retf
rcr
imul
test
mov
jg
mov
ins
phaddd
out
dec
cmp
add
pop
mov
xor
dec
dec
sub
aam
retf
lds
mov
push
jcxz
lds
cld
dec
xchg
jmp
mov
in
popa
test
in
mov
push
pop
pop
push
addr16
into
mov
stos
cdq
mov
sub
cmp
jnp
sub
sub
popf
mul
xor
test
fwait
xchg
sub
cld
inc
mov
(bad)
fsub
mov
lahf
adc
ja
bound
gs
iret
mov
or
push
mov
mov
in
add
mov
adc
popf
sub
icebp
addr16
add
bound
lgs
cmp
fwait
add
xchg
push
xor
cwde
mov
sub
sbb
add
sbb
mov
cld
loope
ror
fwait
sbb
scas
jbe
and
repnz
push
pop
push
mov
xlat
xor
pop
cmc
mov
fnsave
or
popf
sbb
imul
or
not
push
cwde
mov
adc
loopne
ins
or
push
stc
mov
call
cmp
sbb
adc
cs
push
data16
out
mul
cmp
pop
(bad)
in
pop
jno
jnp
pop
sbb
lock
jg
add
push
sbb
out
in
pusha
jg
lds
mov
jns
sti
aas
xor
add
mov
push
loopne
adc
scas
imul
pop
lds
in
loopne
pop
add
sbb
out
loopne
sahf
lods
mov
add
push
push
out
xor
xchg
xchg
jecxz
sti
int
add
arpl
add
cwde
push
xor
mov
sub
sub
or
fstp
inc
aaa
push
std
xchg
call
lods
mov
repnz
sub
neg
adc
jmp
ds
inc
jae
inc
daa
mov
push
loopne
mov
test
loop
cmc
push
test
(bad)
and
xor
xchg
push
adc
sbb
add
lock
add
adc
xor
or
sub
and
js
xor
xor
mov
out
inc
mov
pop
pop
push
mov
test
nop
sti
and
test
mov
fwait
mov
inc
add
jno
jno
push
fdivr
sub
mov
mov
fisubr
inc
xchg
test
ret
add
lock
and
add
inc
push
pop
fwait
xchg
popf
test
lea
(bad)
and
je
enter
cmp
inc
sub
pop
sti
mov
inc
mov
dec
or
sub
ins
dec
loopne
push
retf
sbb
cmp
inc
out
std
in
and
ins
out
jns
xor
movs
sub
call
mov
cmp
pop
sbb
pop
ficom
pop
or
jmp
js
sti
cmp
adc
test
ret
loop
pop
xor
jb
push
(bad)
enter
pop
(bad)
leave
or
shr
rcl
mov
pop
add
test
ret
(bad)
inc
clc
outs
jb
mov
stc
idiv
dec
call
sbb
inc
popf
in
jg
inc
inc
pop
stc
jg
(bad)
inc
(bad)
jg
std
inc
cmp
inc
mov
imul
outs
mov
xor
xchg
test
inc
icebp
jg
pop
mov
(bad)
out
xsave
add
test
call
out
repz
jg
mov
add
xchg
push
icebp
fldenv
add
jno
loopne
aas
hlt
outs
add
fbld
cmp
outs
xchg
dec
or
sub
sub
shl
scas
xor
in
(bad)
gs
adc
mov
and
dec
jbe
in
fnstsw
sbb
jnp
cmp
push
mov
lea
or
sbb
(bad)
dec
cmp
jb
inc
pop
xor
aaa
xchg
scas
pop
pop
call
inc
xor
test
push
jbe
or
push
retf
xchg
sub
cmc
mov
inc
lds
ret
mov
jecxz
out
out
add
or
lock
pop
dec
adc
dec
jmp
pop
inc
(bad)
test
(bad)
repnz
mov
loopne
or
(bad)
jnp
popf
in
pop
lock
xor
cli
fmul
loopne
sbb
imul
and
push
(bad)
xchg
clc
inc
stc
jg
cmps
mov
cmp
mov
xchg
and
aas
into
repz
pop
or
retf
lahf
jp
fild
jmp
push
cli
pop
idiv
push
push
in
xor
shl
(bad)
push
clc
div
loopne
lahf
and
outs
rcr
sbb
out
push
xchg
jns
test
jecxz
popf
arpl
jae
xor
je
cmp
fistp
mov
std
retf
dec
mov
jns
shr
mov
call
cmc
cmp
mov
mov
es
inc
inc
inc
push
dec
pmulhw
(bad)
sbb
adc
sar
cmp
mov
cmp
inc
dec
adc
inc
or
sub
fcom
xor
jl
mov
ja
call
shr
or
jmp
cmp
xor
xor
push
pop
add
adc
in
fmulp
fadd
out
lahf
jbe
add
mov
aas
pop
mov
test
hlt
dec
test
outs
inc
(bad)
mov
xchg
or
repnz
pop
push
leave
mov
ret
in
pop
aaa
push
jno
ret
in
add
rol
imul
addr16
jne
xchg
call
mov
xor
push
pop
inc
xchg
inc
ss
push
add
and
jp
ret
push
retf
pop
aam
cmps
sub
outs
cwde
jge
test
rcl
pop
and
icebp
add
jae
sub
fcom
dec
shrd
das
mov
popa
test
mov
test
mov
cwde
or
xchg
sbb
sub
cmp
inc
call
nop
movs
jb
mov
xchg
scas
dec
adc
cmp
test
xchg
pop
imul
jnp
or
popf
pop
outs
lea
sbb
xor
cmp
xchg
mov
add
xor
inc
pop
je
lea
call
les
sbb
xor
pop
and
aas
or
idiv
xor
ds
bound
fistp
hlt
pop
jmp
sahf
mov
xor
lahf
sub
sub
mov
adc
mov
push
aam
push
fild
jg
mov
cmp
sub
or
pop
jle
add
arpl
xor
shl
sub
push
cmps
or
inc
sbb
js
push
push
inc
lods
out
test
ins
jae
mov
xchg
pusha
mov
pop
adc
mov
sub
dec
js
lock
inc
dec
rcr
lock
push
gs
sbb
cmps
sbb
pop
mov
xor
retf
ins
adc
mov
pop
in
fadd
or
loopne
stc
mov
adc
data16
jge
(bad)
sahf
rcl
test
or
bound
imul
je
rcr
lods
cmps
cmp
cwde
fwait
sub
shr
cmp
repnz
mov
arpl
adc
xor
out
jle
cmp
adc
inc
cdq
lahf
fnstenv
jmp
outs
loopne
add
add
ins
in
retf
sbb
inc
fwait
bound
mov
retf
(bad)
push
xor
push
ret
mov
(bad)
outs
ficom
mov
adc
sub
pop
es
or
outs
pop
mov
cmp
pop
stos
fwait
adc
dec
sub
or
inc
xchg
push
movs
je
movs
push
or
in
dec
mov
or
es
test
mov
sub
cmp
xchg
(bad)
push
lock
fstp
or
popa
mov
out
pop
xchg
push
shr
or
mov
sbb
push
hlt
mov
xchg
outs
scas
aas
les
in
fs
out
inc
inc
mov
cdq
setae
xor
pop
jmp
shr
(bad)
pop
gs
ffree
mov
cld
sub
push
inc
mov
jae
mov
arpl
jecxz
and
mov
stos
sub
inc
xchg
(bad)
fsubr
jne
sbb
sbb
out
xlat
mov
fsubr
xchg
add
sub
adc
retf
cmp
fist
inc
loop
fst
and
or
gs
dec
outs
in
call
retf
mov
lods
pop
jnp
push
pushf
shr
add
sbb
pop
cmp
fnstcw
push
not
jg
fwait
cmps
iret
(bad)
les
aam
mov
push
icebp
adc
movs
sbb
xor
mov
fist
jo
mul
imul
inc
not
rcr
sahf
repz
rol
jbe
pop
push
pop
sub
add
ja
in
in
sub
and
or
fisttp
(bad)
arpl
or
loopne
jp
mov
stos
cmps
ret
je
loopne
mov
pop
lods
movs
arpl
(bad)
mov
push
add
jmp
cdq
(bad)
xchg
shl
lds
retf
add
dec
(bad)
sbb
call
lods
das
cdq
push
fisubr
call
nop
fcomp
pop
int
and
lds
jge
xchg
fnstenv
mov
imul
pop
(bad)
xchg
inc
adc
es
lock
inc
xchg
jecxz
add
lods
(bad)
mov
adc
dec
add
sti
shl
vpmaddwd
popa
add
(bad)
pusha
jno
rol
add
xor
test
pop
pop
retf
push
loop
repnz
fbld
fisttp
mov
xor
pop
loopne
push
clc
nop
inc
lds
push
std
add
cmp
dec
out
lahf
pop
loop
les
adc
mov
push
cmp
nop
pushf
mov
dec
and
mov
xchg
stos
movs
ins
xor
mov
lods
jp
mov
sub
xor
push
jmp
mov
lods
mov
mov
lock
jmp
lock
xor
loope
inc
cmp
jmp
xor
pop
inc
or
inc
add
int3
push
shr
lahf
lods
fucomp
(bad)
and
add
loope
xchg
xor
imul
in
xchg
movs
jp
loope
inc
add
xchg
pop
xor
inc
out
push
push
jge
mov
mov
in
stc
push
xor
frstor
fcomi
xchg
dec
sbb
stc
sbb
inc
mov
jbe
idiv
loope
call
jmp
fild
fincstp
add
cmp
scas
lea
into
xchg
fadd
movs
push
mov
xchg
or
cli
add
jb
xchg
cli
addr16
iret
mov
ja
movs
sub
sub
pusha
dec
add
repz
inc
js
adc
cdq
lea
pop
ins
mov
imul
repnz
stc
mov
(bad)
daa
nop
dec
adc
popf
dec
in
push
xchg
jg
inc
push
leave
leave
pusha
jo
(bad)
ja
inc
fs
sbb
fucomp
adc
repz
ja
mov
popf
bound
(bad)
enter
retf
ja
adc
out
fimul
add
push
inc
call
fistp
push
fnstcw
movs
mov
aas
sbb
jle
inc
dec
ins
and
mov
xchg
add
sbb
test
out
fs
add
lds
loope
sbb
xchg
mov
mov
fwait
cwde
movs
pop
jae
fistp
cmps
adc
test
inc
jmp
xchg
hlt
(bad)
ins
pop
(bad)
loop
and
and
cld
call
call
sbb
add
(bad)
and
icebp
mov
push
sbb
aam
leave
test
js
es
leave
add
adc
adc
mov
les
inc
and
inc
xchg
push
std
stos
addr16
fisubr
repz
xchg
jle
sahf
popa
mov
shl
cdq
out
outs
pop
xor
sbb
dec
adc
lods
jae
push
les
jns
or
and
and
stos
mov
mov
mov
jb
clc
in
popa
xor
inc
sub
dec
fsub
sbb
mov
sub
lahf
fcomp
imul
mov
lds
add
sbb
jle
push
cmps
rcr
mov
jmp
mov
into
cmp
fldenv
ja
and
rcr
mov
outs
sub
mov
movs
loopne
(bad)
lock
push
in
or
jns
dec
mov
imul
jge
fadd
cmp
es
push
push
shl
popf
or
test
pop
mov
stc
add
push
lock
cmp
fisttp
pop
xchg
push
out
push
xchg
jl
aam
ja
jmp
xchg
(bad)
int
pop
fstp
pushf
or
adc
(bad)
push
iret
inc
cli
inc
lea
leave
lods
or
mov
in
icebp
cwde
adc
aaa
jmp
cmp
fsincos
pop
jmp
sub
xchg
xchg
imul
prefetch
or
ins
add
(bad)
in
xor
sbb
xchg
(bad)
shl
les
sti
test
pop
cmc
repz
popa
cdq
cmps
pop
mov
sbb
sbb
push
ss
test
frstor
jnp
jmp
aas
sbb
rol
jb
sahf
push
mov
cmp
(bad)
mov
sahf
ja
and
or
mov
fcom
adc
ins
push
add
push
mov
jg
push
mov
pop
adc
add
(bad)
popa
push
retf
push
mov
xor
cmp
cs
push
adc
daa
(bad)
ficom
enter
shr
mov
gs
test
daa
fdiv
dec
adc
and
ret
ds
mov
call
and
and
in
push
jg
int
scas
or
cmp
(bad)
jnp
ror
je
cmp
imul
push
mov
leave
test
pop
int
imul
scas
xor
test
jmp
xor
pop
cmp
mov
int
retf
movs
mov
lods
pop
in
repz
in
push
out
and
mov
and
fisttp
mov
call
xchg
mov
push
rcl
lods
aad
cdq
cmps
repz
lods
outs
jae
xchg
cld
das
jmp
clc
in
mov
mov
push
sub
add
std
or
imul
xchg
gs
or
fadd
outs
loope
add
sti
lods
and
call
xor
ds
jae
or
out
enter
push
xchg
inc
leave
lods
clc
and
inc
inc
stos
in
add
sbb
pop
inc
bound
or
outs
test
xor
sbb
and
or
inc
fs
sbb
sub
cmp
xchg
enter
outs
jmp
dec
pop
cld
sub
pop
comiss
rcr
hlt
cs
push
data16
aaa
xchg
mov
or
and
mov
push
into
mov
cli
add
neg
enter
sub
xlat
stc
sbb
pop
into
clc
retf
mov
cmp
or
sahf
ss
fldcw
or
push
sub
mov
dec
repz
and
movs
and
retf
jns
jl
push
movs
call
pop
mov
test
stos
cli
jecxz
gs
imul
pop
std
(bad)
aam
jle
fwait
mov
mov
xchg
pop
xor
mov
test
pop
lods
loope
jmp
ret
cdq
cmps
out
clts
sbb
shl
jge
dec
aas
(bad)
shl
and
sub
lahf
push
mov
add
inc
gs
lock
scas
fidivr
and
mov
aas
adc
ins
or
out
pop
popf
jge
repz
dec
icebp
mov
aas
jle
loope
mov
lea
push
mov
or
daa
pop
aam
pop
cld
jmp
push
ins
(bad)
pop
mov
and
cwde
out
sti
inc
into
jbe
stos
clc
mov
shr
push
mov
es
mov
ret
adc
mov
and
pusha
dec
loopne
pop
jmp
jp
fwait
xor
ins
jnp
pop
mov
sbb
leave
jae
xor
ins
pop
xchg
pop
mov
adc
cld
cmp
ins
inc
sbb
adc
push
or
dec
jmp
daa
push
fist
lods
jl
loope
pop
int3
fs
mov
mov
and
lods
cmps
div
push
fwait
jmp
cwde
push
stos
jmp
inc
dec
sub
jmp
retf
ja
idiv
stc
mov
setns
out
in
inc
shr
push
push
fstp
inc
hlt
jle
or
aad
ficomp
clc
jg
pop
mov
gs
iret
pushf
mov
jp
cs
aad
push
push
pop
fwait
sbb
(bad)
shl
lods
xchg
mov
dec
hlt
fldcw
inc
addr16
mov
mov
jmp
shl
mov
xchg
jmpw
es
fst
in
fld
jo
(bad)
sbb
cmp
cdq
(bad)
(bad)
out
push
gs
retf
inc
pop
or
fistp
dec
cmps
sub
(bad)
call
test
loope
or
pop
pop
pushf
outs
push
(bad)
in
or
(bad)
push
adc
cmp
jo
ins
ja
shl
ret
cmps
jae
je
and
pop
push
call
stos
fmul
lahf
into
adc
ficom
or
mov
pop
dec
sbb
pop
cmp
sub
pop
jmp
xor
cmc
mov
hlt
xor
dec
cmps
inc
adc
inc
or
(bad)
movs
xchg
mov
dec
test
rol
stc
cmp
aaa
push
stc
xchg
or
mov
in
cmps
out
jno
jns
ds
and
jmp
fbstp
pop
dec
lea
fild
adc
jl
(bad)
(bad)
fld
push
sub
pop
and
arpl
jge
inc
imul
mov
and
movs
push
xchg
lock
mov
xor
pop
or
outs
xlat
(bad)
pop
or
out
jbe
dec
jne
fwait
stos
cmc
lock
push
xchg
sub
popa
cmp
cmp
mov
xor
test
inc
push
(bad)
xlat
fstp
add
jcxz
(bad)
mov
adc
dec
inc
mov
scas
fmul
cmp
adc
retf
add
pop
mov
and
inc
dec
or
les
imul
pushf
jmp
mov
pusha
mov
adc
push
adc
lock
xchg
or
lock
push
(bad)
je
push
jp
clc
ds
mov
cmps
sub
inc
idiv
inc
inc
call
push
arpl
mov
and
pop
jecxz
and
jmp
mov
jo
pop
test
movs
xor
inc
mov
xchg
lea
add
loopne
cwde
sar
push
xchg
pop
(bad)
fld
int3
loop
mov
test
adc
lock
adc
rol
mov
mov
shl
dec
icebp
mov
xchg
out
pop
and
daa
dec
ss
jmp
popf
cs
(bad)
inc
cmc
shl
int
(bad)
mov
std
std
add
dec
xor
scas
jmp
nop
cmp
inc
cli
xchg
aad
int
fwait
cmp
cld
fst
pop
sub
cmp
stos
adc
nop
out
stos
ja
adc
stos
fisubr
jmp
push
adc
xchg
shl
xor
push
test
pop
mov
add
inc
sti
mov
jp
ror
mov
xchg
aas
icebp
data16
xor
test
jbe
in
outs
ret
pop
sahf
inc
dec
mov
cmps
mov
mov
fwait
mov
aaa
in
add
mov
js
loope
mov
add
ds
push
(bad)
out
mov
jno
js
push
aad
dec
mov
add
ds
fstp
scas
xor
ins
adc
push
arpl
jp
int
inc
cmc
pop
adc
fdivr
test
push
stc
mov
sub
jb
jmp
xchg
jge
fndisi(8087
cmp
lahf
mov
adc
scas
fs
jae
lahf
ins
sahf
test
cmp
xor
jbe
sub
mov
pop
not
rcr
jmp
pop
(bad)
jl
push
leave
data16
ret
xor
mov
clc
xchg
rdmsr
sti
mov
cwde
inc
ins
mov
inc
repnz
sub
push
inc
dec
cdq
movs
lea
and
ror
cmp
xor
stc
cmp
fistp
mov
in
dec
xor
btc
cmp
and
repnz
imul
daa
dec
scas
in
cmp
jecxz
mov
loopne
and
or
fs
xchg
lock
push
and
xor
and
(bad)
jbe
or
or
xchg
mov
mul
jle
fisubr
out
mov
xchg
mov
jnp
daa
lock
jmp
int
pop
pop
arpl
xor
mov
xchg
mov
repnz
imul
jmp
or
push
rcl
cmps
add
data16
mov
ret
clc
aam
mov
xor
fidivr
addr16
test
xchg
imul
xchg
push
(bad)
push
and
mov
bound
dec
popf
arpl
(bad)
shl
push
pop
out
retf
xchg
mov
and
jns
popf
or
or
sbb
loope
cdq
dec
cmps
mov
and
adc
call
xor
ficom
push
pusha
cmps
cli
push
pop
mov
enter
fs
jl
into
dec
lds
or
hlt
inc
jmp
push
shl
adc
int3
jns
cmps
in
into
and
je
pop
inc
xor
jae
into
fisubr
(bad)
lods
inc
mov
sahf
aam
loopne
cli
int
sbb
retf
push
sti
in
stos
pop
add
jne
(bad)
mov
mov
inc
jmp
mov
dec
sbb
out
pop
jl
pushf
inc
mov
pop
jl
stc
sub
xor
mov
jg
lahf
jle
icebp
jbe
test
adc
cdq
neg
std
mov
rol
mov
into
and
(bad)
das
dec
dec
imul
fcmovne
dec
and
ror
sbb
(bad)
sbb
jmp
cs
push
fdivr
pop
scas
sbb
mov
gs
sub
fsubr
xor
cmp
mov
fdiv
xor
mov
jecxz
sbb
repz
iret
scas
sbb
dec
sub
cmp
cmp
push
push
aam
in
inc
outs
fs
scas
sar
(bad)
(bad)
mov
mov
pop
in
and
stos
cmp
push
aas
pop
jle
stos
xlat
and
mov
movs
mov
mov
or
jnp
mov
scas
pop
clc
dec
and
sbb
xor
jecxz
retf
and
xchg
lock
mov
pop
dec
pop
adc
(bad)
outs
adc
mov
mov
sub
in
ins
leave
pusha
(bad)
popa
jmp
sbb
and
test
loopne
ficom
push
mov
push
xchg
and
push
xor
xchg
rcr
xlat
retf
or
ins
lods
and
out
mov
stc
pop
lods
mov
mov
xor
repz
push
push
mov
out
mov
retf
iret
add
stc
cmp
mov
sbb
sahf
mov
sti
in
out
in
out
cmps
and
inc
outs
not
adc
ja
dec
aam
mov
jle
adc
rep
jecxz
test
les
stc
mov
cmc
loope
retf
push
cmp
loope
cmps
mov
dec
imul
sbb
adc
fild
sahf
push
mov
add
push
cmp
push
push
lahf
adc
push
je
popf
xchg
cmc
popa
call
test
sub
dec
sbb
ds
rol
and
dec
adc
mov
mov
aad
(bad)
lock
sbb
popf
mov
out
pop
loop
out
mov
pop
movs
ret
pop
lods
xchg
add
push
loopne
divps
xchg
dec
dec
aas
jns
mov
xor
xchg
sbb
sbb
call
sub
pop
in
sub
push
aaa
pop
mov
test
fdivr
mov
sub
movs
jmp
and
fwait
and
jbe
call
je
call
hlt
adc
movs
in
mov
inc
dec
enter
repnz
xlat
mov
fwait
in
fwait
or
jns
in
imul
mov
out
ret
scas
out
sbb
pop
pusha
dec
clc
jne
lds
and
data16
cli
ins
adc
and
mov
push
movs
das
in
mov
cld
and
inc
std
dec
xor
shr
lods
push
mov
(bad)
xchg
cli
push
gs
jmp
add
sub
pop
loope
das
pushf
mov
mov
aaa
scas
push
xlat
add
mov
scas
scas
jp
das
cs
cmp
gs
popf
fst
aas
outs
mov
es
ret
(bad)
cli
xor
mov
fmulp
fwait
pop
inc
sub
pavgw
je
repz
mov
lock
dec
pop
push
or
test
push
xor
shl
jmp
scas
icebp
dec
icebp
add
cmp
jp
mov
inc
ja
cs
xchg
in
fadd
pop
cmp
ins
outs
mov
out
stos
adc
add
ins
jle
iret
sub
cmp
mov
imul
sbb
sti
test
or
cmp
fldln2
jne
inc
or
lock
out
pop
pop
inc
jge
fdivr
lahf
xor
xchg
jg
ftst
and
test
(bad)
stos
stos
and
mov
retf
jno
pusha
dec
repz
in
jp
sbb
cmp
cmps
sub
outs
cdq
mov
mov
xchg
aaa
push
(bad)
jmp
bound
jle
jmp
inc
jne
aam
loopne
xchg
fisttp
push
gs
sti
daa
add
je
or
es
call
mov
dec
test
xlat
push
or
cmp
xchg
sbb
cli
inc
shr
lods
pushf
js
xchg
ret
sbb
iret
lock
icebp
push
mov
inc
xor
jne
movs
dec
shr
add
dec
dec
cmc
retf
jp
xchg
push
ficom
hlt
aaa
mov
push
cld
cmp
xor
or
mov
and
test
in
retf
iret
(bad)
movs
repz
sbb
into
sbb
(bad)
mov
mov
xlat
test
movs
js
pop
or
mov
(bad)
jmp
fs
sbb
(bad)
or
mov
aad
pop
inc
cld
adc
stc
push
adc
add
test
mov
inc
aas
sub
jno
dec
jbe
push
jl
dec
mov
cmp
or
mov
fwait
mov
push
fsub
in
cmp
xor
cmp
pop
aad
push
hlt
inc
out
loope
pop
dec
gs
sbb
in
lods
adc
xchg
pop
jo
or
std
push
imul
sbb
popa
mov
sub
lea
not
mov
cld
mov
jmp
and
mov
pop
fs
jnp
test
mov
sar
xchg
mov
neg
push
or
outs
test
lahf
xchg
(bad)
hlt
aam
fwait
out
neg
pushf
sbb
js
jb
(bad)
pop
sub
xchg
xor
es
dec
xchg
stos
into
push
lahf
retf
scas
pop
xchg
stos
lahf
stos
jo
fwait
das
sbb
xchg
add
rcl
sub
adc
or
ins
inc
idiv
cld
lods
(bad)
nop
sbb
sub
cmp
xchg
dec
sub
call
adc
jb
cmp
pusha
cmp
test
push
ret
push
ds
dec
ret
das
leave
dec
pop
hlt
shr
(bad)
sahf
mov
xor
hlt
data16
push
aaa
cmp
mov
xor
or
and
in
je
xchg
mov
mov
jge
cld
repz
mov
stos
mov
fbld
loop
ss
call
jno
push
ficomp
jmp
clc
out
mov
ja
test
outs
or
stc
call
rcr
outs
stos
call
lds
call
loope
cmps
push
imul
mov
jae
cdq
fmul
cmp
mov
ja
pop
loop
aad
nop
jo
or
loopne
xlat
ror
into
mov
movs
leave
leave
push
sub
iret
jo
jns
dec
xor
adc
call
mov
fisttp
xchg
sar
aaa
cli
cdq
and
daa
out
scas
mov
mov
ds
rcr
stos
fdivrp
mov
lods
shr
jl
mov
pop
leave
xchg
inc
test
push
mov
pop
mov
adc
mov
mov
inc
hlt
xor
arpl
and
repnz
jl
mov
inc
out
xchg
icebp
dec
scas
daa
pushf
leave
push
rcl
mov
cmp
out
mov
inc
into
inc
inc
xchg
dec
(bad)
lods
push
mov
pop
sahf
fstp
rol
jne
adc
movs
fst
dec
in
push
sub
or
dec
inc
int3
ss
mov
pop
xchg
mov
aas
adc
push
mov
call
pop
arpl
out
fwait
jmp
cs
call
and
daa
es
jle
sub
std
cld
fwait
and
push
cwde
and
out
or
push
xchg
dec
xor
sbb
jbe
addr16
mov
inc
das
adc
xchg
jnp
mov
fs
sub
aam
jmp
in
pushf
pop
cmps
push
xchg
push
jecxz
dec
cli
imul
xchg
mov
cli
push
out
fcomp
mov
dec
mov
and
cmc
cld
pop
or
lods
xchg
cld
in
sar
call
xchg
pop
les
lods
adc
dec
dec
mov
gs
push
xor
movs
ja
mov
popf
jne
fwait
lds
ins
xlat
cmp
cmp
sbb
dec
js
fisttp
adc
(bad)
loope
sub
cmp
xchg
jae
jne
cld
mov
sar
jbe
sbb
pushf
lock
popf
bound
inc
mov
bound
push
movs
pop
dec
sub
pop
push
mov
or
jnp
sar
cmp
arpl
sbb
dec
sbb
and
push
aam
dec
daa
repnz
and
mov
loop
adc
push
les
enter
in
(bad)
ds
xchg
int
dec
xor
das
adc
xchg
jae
mov
adc
mov
xchg
sub
pop
mov
jnp
mov
dec
(bad)
(bad)
and
std
repnz
sbb
xchg
dec
jb
pop
cld
mov
js
dec
cld
jae
ror
xchg
loop
ins
xor
adc
jmp
aam
mov
test
xchg
imul
sub
xor
add
in
jl
int3
mov
jl
mov
arpl
inc
push
out
(bad)
cmps
cli
mov
xchg
xor
stos
data16
mov
xlat
lahf
arpl
js
push
cmp
mov
xchg
idiv
mov
repz
dec
mov
mov
fidiv
jo
xor
or
and
jg
sbb
imul
add
aam
mov
frstor
cmps
mov
icebp
ret
dec
mov
iret
cmp
cmp
ret
(bad)
xchg
sub
inc
xchg
mov
xchg
daa
test
repz
repz
imul
ss
mov
gs
call
mov
lds
es
dec
mov
pop
ds
add
ja
push
adc
pop
jnp
xor
jae
ret
mov
sub
(bad)
rol
cwde
inc
rcl
adc
mov
or
cli
xor
in
cld
rcl
fistp
js
aam
push
inc
imul
clc
ficomp
(bad)
jmp
sbb
adc
out
fcom
pop
mov
leave
iret
jnp
and
inc
pusha
mov
adc
inc
jmp
inc
inc
fld
xor
mov
(bad)
xchg
inc
cdq
shl
inc
mov
dec
pop
stc
dec
xchg
or
mov
dec
daa
adc
jno
inc
and
out
mov
pop
or
pop
int
test
add
dec
loopne
pop
leave
in
mov
leave
iret
xchg
js
jmp
xchg
dec
jno
out
popa
out
movs
(bad)
xlat
adc
pusha
xchg
mov
push
mov
mov
in
cs
clc
cs
test
cmps
pop
cdq
xor
or
aam
push
fdivr
ret
xor
dec
pushf
ins
shl
retf
ror
leave
aaa
icebp
push
push
cld
sub
shr
fistp
jo
and
sbb
sti
mov
es
movs
pop
xchg
mov
stos
adc
imul
inc
fs
aad
adc
leave
xor
nop
xor
fst
das
cmp
icebp
xchg
shl
movs
daa
jmp
sub
or
xchg
and
mov
lods
fisttp
and
lods
jge
mov
mov
xlat
sti
sahf
mov
inc
or
shr
mov
jmp
fs
add
jmp
inc
ins
mov
push
aaa
nop
pusha
inc
mov
mov
outs
xor
scas
adc
jle
aad
dec
call
fimul
idiv
call
mov
xchg
dec
mov
xor
lods
imul
sub
test
mov
or
loopne
movs
push
add
icebp
push
in
cwde
mov
xchg
add
daa
sbb
sub
inc
mov
or
pop
xchg
in
cmc
push
bound
sti
or
jae
push
out
pushf
cdq
stc
adc
cs
and
fisubr
xchg
adc
push
out
enter
pop
int3
push
in
xchg
pop
add
mov
sbb
mov
jbe
mov
sahf
xchg
dec
inc
cmp
add
int3
popf
ficom
jmp
adc
mov
xor
aam
ins
pavgb
rcl
sahf
repnz
dec
inc
out
mov
dec
jae
cmp
dec
dec
add
or
arpl
cs
loopne
or
repnz
cli
sbb
sub
ret
loopne
aad
pop
xor
cmp
pop
and
inc
movs
dec
mov
pop
ror
inc
pop
jmp
or
fstp
add
or
inc
xor
into
cs
aas
sbb
scas
add
cmc
dec
push
out
xchg
loopne
and
and
or
push
(bad)
(bad)
stc
mov
bound
ja
jp
and
stos
pop
and
lds
push
xor
xchg
sbb
sbb
mov
xchg
or
stos
cli
dec
sti
hlt
rcl
(bad)
clc
mov
mov
loop
cs
mov
hlt
aas
mov
mov
jmp
jge
cs
lahf
ins
movs
push
sub
lds
cmc
sub
or
fnstsw
fidiv
xor
xchg
jmp
jo
mov
test
or
sbb
sbb
pusha
ret
stos
fcmovnu
rol
nop
inc
mov
daa
stc
js
fwait
mov
fisub
add
mov
cmp
fwait
sahf
scas
scas
out
in
pop
jle
neg
sbb
paddsw
xchg
outs
(bad)
out
jns
lods
imul
mov
das
mov
xchg
mov
xor
cmps
ins
push
fnstcw
xchg
imul
icebp
jecxz
repnz
mov
mov
stos
and
aas
(bad)
push
inc
mov
cmp
scas
sub
xor
das
ins
mov
adc
(bad)
int
dec
jae
sub
shl
jmp
jecxz
into
cld
push
stos
(bad)
js
dec
pop
inc
cwde
and
or
push
or
popf
ror
sbb
cwde
icebp
jae
shr
jecxz
pop
repz
mov
mov
imul
xor
dec
cmp
in
sbb
fwait
dec
xchg
inc
cld
into
sub
(bad)
mov
or
out
pop
bound
jns
xchg
or
enter
lods
dec
stc
imul
sbb
jecxz
push
xchg
addr16
jl
mov
add
in
xor
sbb
adc
push
or
pop
mov
scas
jne
fmul
mov
js
sub
lock
cli
mov
xchg
test
jb
or
fadd
jmp
xchg
adc
adc
int3
cmp
popf
or
in
retf
not
jns
(bad)
ficom
xor
inc
bnd
mov
test
or
aad
ror
fwait
mov
sbb
push
push
and
or
adc
jb
cs
int
pop
adc
je
mov
jmp
pop
(bad)
pop
in
sub
rcr
cmps
aad
adc
call
xchg
ret
adc
and
int3
aaa
gs
lahf
mov
ja
rcl
mov
aad
popf
xor
jb
mov
mov
cmc
sbb
and
adc
cmp
jbe
and
and
bound
cmp
cmps
xor
jecxz
jbe
cmp
lods
xor
and
cli
push
(bad)
ffreep
mov
and
cld
xchg
les
or
add
retf
shl
out
movs
les
shr
jecxz
sti
ss
call
push
mov
stos
cmp
mov
xchg
and
fmul
dec
std
fisttp
ret
in
dec
aas
sbb
push
test
inc
sahf
jb
retf
jne
loopne
jp
inc
sbb
mov
nop
adc
popa
push
adc
jns
jae
in
pop
(bad)
cmp
out
pop
rol
pop
inc
adc
xor
int3
ins
(bad)
fcomp
icebp
push
stc
cmp
lds
sets
data16
pushf
and
add
pop
repz
mov
mov
popf
inc
stos
jmp
(bad)
out
(bad)
(bad)
xchg
push
dec
iret
cmp
cli
sub
sub
test
js
mov
sahf
and
inc
imul
(bad)
xor
push
cmp
(bad)
aad
xchg
ret
imul
adc
sti
popa
test
push
mov
jae
(bad)
dec
mov
adc
mov
sbb
mov
std
in
pop
outs
adc
stos
mov
ret
jg
sub
sbb
inc
test
div
xor
adc
lea
pop
adc
fisubr
adc
outs
xchg
mov
lock
push
sbb
mov
mov
int3
xchg
mov
ficomp
cmps
pop
(bad)
lahf
mov
int3
cmp
and
leave
es
in
cmp
xchg
xchg
add
cmps
enter
inc
mov
xchg
ret
xlat
call
addr16
mov
inc
mov
xor
pop
mov
out
cmp
clc
or
xchg
in
test
adc
cdq
icebp
mov
adc
sbb
push
sbb
cmc
or
xchg
or
cwde
aad
fwait
mov
fwait
pop
out
jns
jg
lahf
sti
cmp
cmp
jmp
(bad)
bound
pop
xchg
imul
push
pop
mov
cmc
jno
fnsave
cmp
xchg
inc
push
fidiv
mov
lock
sbb
jmp
pop
push
out
jb
or
stos
pop
cmp
sbb
loope
sahf
pop
jb
push
pop
and
shld
lock
jns
jg
inc
add
sbb
inc
movs
ret
push
cdq
push
fwait
jbe
mov
sub
lahf
retf
imul
rcr
fsubr
jp
test
popf
test
jp
sbb
iret
mov
sub
dec
loope
jne
neg
fbld
(bad)
rcl
lock
int
inc
test
test
fimul
mov
fiadd
inc
mov
(bad)
xor
xchg
inc
mov
cmp
icebp
add
or
rcr
outs
lock
movs
call
sbb
and
in
cmp
scas
cmp
mov
pop
clc
mov
iret
nop
inc
cmps
mov
cmc
in
nop
fist
mov
lods
mov
xor
outs
loopne
cmc
sub
jp
or
jg
sub
adc
mov
cmps
imul
hlt
popf
jle
adc
dec
rcl
bound
or
cmp
push
cmp
retf
and
push
add
fidiv
cmps
scas
xchg
cmp
jmp
jnp
mov
ror
scas
mov
lds
mov
mov
rcl
cmp
pop
mov
aam
call
cmc
les
xchg
neg
retf
shr
lds
pop
scas
xchg
mov
iret
lahf
fs
push
inc
(bad)
fidivr
maxps
mov
sbb
cmp
imul
xor
test
jb
pop
jg
fldenv
and
xchg
push
or
fwait
shr
retf
sar
leave
int
lods
cmp
inc
sti
push
lock
data16
retf
in
cmps
std
sbb
add
pop
pop
(bad)
xchg
clc
jmp
inc
push
sar
push
scas
cmp
mov
std
shr
push
sbb
in
xchg
lods
iret
jae
shr
fld
sbb
stc
pop
movs
loop
ins
push
mov
push
cmp
xchg
jne
push
jmp
mov
mov
hlt
repz
fsub
xchg
in
xor
push
enter
rcr
scas
loope
sub
mov
es
test
cmps
jae
mov
retf
repnz
(bad)
xor
adc
add
(bad)
loope
pcmpgtw
push
xchg
jge
loopne
aaa
test
mov
inc
retf
call
jb
adc
dec
cmp
jg
lods
cmps
ins
imul
inc
(bad)
cmp
call
rcl
add
sbb
repz
popa
imul
jne
or
fcomp
and
jmp
adc
ss
push
xchg
imul
and
les
(bad)
and
out
push
in
mov
iret
mov
sub
cs
adc
sub
mov
pop
inc
cld
stos
and
int
or
xchg
ror
ret
aad
lods
cmp
jg
push
and
jmp
shr
out
sub
jl
nop
pop
mov
outs
mov
mov
ror
fimul
into
pop
and
in
or
xchg
fisub
ret
loop
push
push
(bad)
lods
popf
adc
in
in
je
xchg
or
mov
push
push
push
ins
fisttp
cmp
lahf
je
cwde
mov
dec
fidivr
adc
bound
pop
adc
stos
mov
repz
hlt
(bad)
dec
pop
ret
aam
jmp
lods
dec
inc
mov
aaa
mov
cmps
jle
sahf
mov
mov
cmp
or
shl
adc
adc
xor
jbe
mov
pop
mov
cmps
xor
stos
mov
loopne
push
jg
dec
and
cmps
cld
xchg
popa
cmps
es
cdq
add
out
inc
sub
xchg
test
mov
sbb
mov
ins
es
aas
clc
push
cdq
add
xchg
xor
loop
xchg
stos
repz
jmp
pop
retf
jl
jbe
and
adc
cmp
test
push
add
cmp
call
(bad)
in
dec
stos
leave
sahf
lea
pop
adc
xchg
nop
fmul
ret
mov
lock
mov
aam
cli
mov
(bad)
repz
pushf
mov
ret
inc
sti
jmp
mov
jg
inc
inc
cs
and
loopne
sub
pushf
jle
stc
xchg
das
(bad)
adc
std
std
adc
jb
(bad)
jmp
mov
inc
shl
pop
fwait
je
retf
repz
sub
or
xchg
dec
and
push
cmp
aaa
fist
mov
(bad)
ins
stos
arpl
pop
mov
xchg
pop
xor
or
jnp
push
into
rcl
add
push
scas
ins
(bad)
jg
ins
scas
jb
add
inc
fnstcw
and
std
inc
int3
cmp
adc
mov
and
out
movs
sbb
ja
xor
lods
cmps
jne
dec
mov
mov
jb
rol
(bad)
mov
mov
mov
popf
shl
fnstcw
sub
sub
sub
mov
pop
mov
inc
test
xor
dec
lahf
pop
rcl
sub
out
cs
fpatan
adc
cld
rcr
jno
xchg
(bad)
sahf
add
mov
fdivrp
add
jecxz
rcl
pop
mov
(bad)
add
xlat
sbb
mov
aam
xchg
and
in
inc
push
out
nop
push
adc
lods
aad
loope
(bad)
cmp
mov
div
pop
dec
loop
stc
retf
adc
xchg
bound
popa
and
jecxz
repnz
ins
jg
int3
mov
sbb
push
jmp
repz
mov
adc
inc
dec
jne
jmp
shl
xchg
push
and
mov
int3
mul
xchg
in
ja
imul
jmp
adc
adc
(bad)
in
bound
sti
sbb
sbb
stos
push
inc
mov
fsub
dec
jne
dec
fldcw
std
(bad)
in
pop
inc
int3
cld
outs
pop
add
lods
push
retf
in
pop
push
test
push
add
(bad)
in
sub
pop
pop
mov
cli
cld
gs
and
xlat
push
add
in
cmp
sbb
xchg
int
les
cwde
stos
lahf
ds
lds
fidivr
ss
out
fld
jnp
neg
pop
ret
out
loope
sub
push
repz
dec
fisttp
repnz
mov
add
push
pop
and
mov
pop
in
lds
pop
dec
bound
jno
jmp
out
sub
ficom
enter
aas
test
mov
mov
and
sub
sbb
jmp
jge
sbb
aas
inc
mov
in
fwait
mov
(bad)
jns
aad
jle
xchg
mov
inc
and
cli
jb
pushf
dec
mov
lock
daa
and
pop
mov
sub
arpl
xchg
mov
fimul
aad
icebp
mov
mov
mov
and
stos
sbb
aaa
sub
adc
ss
es
mov
retf
in
pushf
sbb
sub
adc
stc
std
xchg
pop
sbb
sar
repnz
cmc
mov
(bad)
cwde
fild
int3
pop
push
inc
(bad)
mov
or
das
pop
pop
sbb
dec
out
sub
adc
push
pop
or
test
addr16
jo
jp
and
jb
mov
lods
stc
push
in
and
mov
test
div
mov
mov
mov
jle
sub
jb
jl
js
(bad)
fs
cwde
dec
fsub
(bad)
adc
int3
ja
dec
test
shr
cwde
dec
popf
adc
cs
dec
adc
jo
pop
jbe
sysenter
imul
mov
loop
and
mov
aam
push
xlat
push
scas
mov
pop
dec
outs
cmp
scas
cmc
cmc
jno
push
mov
jp
mov
mov
jmp
stc
call
cmp
aas
leave
ins
setae
cmc
xchg
inc
xlat
sbb
sub
aaa
(bad)
pushf
mov
sub
xor
xchg
std
imul
test
mov
fs
xor
push
test
mov
out
push
imul
inc
jne
rcl
in
pop
(bad)
sbb
stos
imul
outs
ja
gs
pusha
mov
push
sub
dec
ins
mov
xchg
and
aas
addr16
sub
xor
lahf
ret
(bad)
jno
retf
dec
xor
xor
es
daa
mov
sbb
pop
stos
imul
fcom
mov
pop
push
mov
mov
add
jmp
sahf
cs
fdivr
ins
int
arpl
xor
repnz
ret
sahf
mov
pop
out
add
das
out
mov
dec
adc
adc
scas
test
addr16
out
int3
and
inc
not
out
in
push
in
repnz
sti
fild
daa
stc
lods
ds
or
and
outs
jmp
enter
xor
mov
adc
out
sub
push
imul
push
mov
push
mov
cmp
xchg
aaa
outs
mov
out
pop
dec
cmp
outs
mov
or
ret
jle
xlat
adc
(bad)
mov
repnz
lods
lods
out
sbb
clc
stc
mov
push
imul
sub
shl
and
jae
leave
mov
xchg
inc
loop
xchg
or
adc
push
out
and
fisubr
test
inc
lods
ins
cmp
out
imul
mov
sbb
jl
jmp
sbb
pusha
scas
fnstsw
enter
mov
cmp
xchg
cmp
scas
or
xchg
stos
add
test
mov
push
push
mov
and
pop
jge
popa
rcl
cmp
inc
cmp
mov
jp
push
mov
stc
jb
jle
and
stos
mov
or
lods
xor
ds
dec
pop
push
or
jmp
js
pop
mov
and
enter
mov
add
cs
out
loop
sbb
adc
(bad)
sbb
push
fidivr
pop
std
retf
out
add
jmp
jmp
lds
jl
and
adc
pop
lods
add
into
outs
inc
cli
pop
sbb
cmp
jbe
les
(bad)
fs
push
neg
fnsave
jg
cmp
scas
pushf
pop
(bad)
xor
pop
in
cmps
push
adc
scas
mov
dec
mov
xor
inc
or
pop
sbb
push
jg
fistp
mov
out
movs
mov
out
sbb
out
sahf
xchg
fs
dec
adc
pop
cmps
out
mov
aam
retf
pop
sti
fcomi
mov
pop
pop
cwde
shl
aad
sbb
push
lahf
clc
or
inc
mov
push
pop
test
add
inc
(bad)
idiv
adc
test
adc
add
fadd
adc
gs
shl
xor
retf
add
sbb
push
enter
mov
cmp
pop
mov
cmp
add
jecxz
jbe
sub
cmps
sub
setae
pop
cli
or
scas
fsubr
jge
xor
jecxz
add
add
mov
loop
enter
or
shl
inc
jb
lds
mov
lahf
and
jnp
outs
repz
out
fiadd
mov
fdivr
out
dec
fwait
dec
and
js
dec
movs
pop
sbb
imul
clc
xchg
js
cld
retf
jg
mov
adc
rcl
sti
ja
push
fstp
fs
xchg
les
mov
inc
std
push
xchg
mov
mov
aas
icebp
shl
jg
enter
rcl
movs
clc
in
sbb
pop
fild
mov
loop
xor
push
jmp
aas
push
icebp
push
push
xor
jp
popa
jp
and
ret
scas
jo
jp
xor
dec
xor
push
pop
cld
pop
sub
mov
or
mov
shl
gs
sub
add
in
shl
mov
lods
adc
jne
mov
je
je
addr16
imul
push
cmc
loop
aas
and
add
push
push
mov
jbe
in
jae
dec
ret
adc
mov
pop
cmc
lea
sub
dec
adc
stos
jp
cmp
out
jl
into
fisttp
mov
into
mov
push
in
scas
(bad)
xchg
xchg
(bad)
scas
push
push
cmp
popf
cmp
ret
cld
sbb
xchg
mov
jle
adc
push
mov
retf
in
call
mov
mov
ds
ins
pop
dec
pop
(bad)
cmp
jbe
iret
pusha
push
gs
cmc
mov
and
pushf
mov
xchg
loopne
fdiv
or
add
add
stc
rcl
inc
and
js
shl
mov
out
fsubr
inc
fcomp
js
add
pop
mov
push
stos
and
pop
or
jge
and
test
sub
adc
call
jnp
dec
out
in
sub
cmp
dec
gs
sub
pop
mov
ja
cli
mov
jge
popa
mov
imul
iret
iret
setno
and
sub
adc
lock
jge
pop
jae
into
mov
ja
pop
les
hlt
retf
add
lds
or
mov
mov
mov
mov
loop
sub
mov
dec
dec
cmp
jmp
xchg
stc
retf
sbb
aad
xor
ins
xchg
mov
mov
push
mov
gs
daa
pusha
add
int
addr16
inc
arpl
leave
cmp
jmp
adc
inc
push
imul
mov
mov
mov
xor
fcom
sbb
push
adc
mov
sub
push
mov
fiadd
push
xor
mov
cld
sub
call
xchg
or
sahf
leave
sbb
into
mov
repnz
std
xor
out
push
cwde
add
mov
dec
and
and
gs
inc
sbb
lahf
ins
inc
mov
jae
test
pop
mov
inc
movs
shl
mov
shr
sub
jmp
add
(bad)
jecxz
inc
sbb
xchg
dec
sub
into
ins
lahf
repz
iret
test
outs
pmullw
fs
adc
push
jae
data16
mov
lods
pop
test
mov
mov
jnp
fdiv
mov
pop
mov
out
xchg
shr
call
sbb
adc
push
dec
adc
inc
into
addr16
and
aad
jl
aas
jo
sti
(bad)
adc
sahf
or
pop
repz
fucom
cmp
jge
pop
fld
cdq
pop
mov
mov
xchg
cmp
loopne
out
enter
xor
bound
cdq
sub
pop
push
fsubp
movs
mov
xchg
repnz
push
cdq
mov
mov
mov
imul
cmp
addr16
mov
xor
inc
sub
push
adc
xor
push
mov
out
mov
push
out
xlat
mov
dec
adc
mov
aad
and
icebp
jmp
jnp
loop
push
add
call
xchg
outs
push
adc
sub
mov
adc
cmp
int3
rol
inc
sub
jmp
push
fwait
popa
pop
sbb
cmp
fst
xchg
mov
dec
outs
and
(bad)
pop
pushf
ret
push
jmp
out
cwde
scas
scas
sbb
out
sub
popf
gs
iret
mul
ficomp
mov
mov
popa
inc
or
xchg
outs
imul
mov
push
in
or
mov
loop
stos
jnp
adc
test
in
jae
jns
push
inc
shl
movs
push
jnp
push
jmp
clc
add
push
daa
not
sbb
cmp
mov
cmps
inc
or
jecxz
lds
xlat
inc
jbe
mov
dec
adc
pop
xor
jp
loopne
mov
test
int3
mov
loop
xchg
mov
add
(bad)
cmps
(bad)
ins
adc
jnp
in
sub
cmp
cmp
ret
jno
or
add
inc
sbb
mov
pop
cmp
sub
pusha
mul
cmps
or
in
ja
pop
call
pop
test
xchg
mov
daa
scas
dec
in
cmps
or
fs
mov
in
mov
imul
mov
stc
or
call
loope
sbb
xchg
push
push
mov
rcr
sti
int3
imul
loop
jmp
aad
aas
ss
mov
add
mov
repnz
mov
jb
js
std
mov
jg
fwait
add
mov
push
add
inc
lock
mov
push
mov
add
pop
adc
and
inc
dec
push
mov
pop
cmp
cmps
mov
out
xor
jmp
cmp
sbb
push
mov
pop
adc
inc
xor
xchg
mov
adc
mov
jge
inc
mov
jle
jae
cld
sbb
push
add
cmp
push
mov
xor
cmp
fsubr
and
sbb
fld
cwde
fbld
lahf
rol
clc
xor
push
jecxz
jb
jne
xchg
sahf
push
fidivr
dec
(bad)
popf
xor
pop
mov
sbb
popf
fwait
push
jecxz
pop
xchg
push
adc
pop
inc
jmp
or
sub
push
jmp
cld
jmp
mov
ja
inc
xchg
and
sub
sti
mov
xchg
sub
mov
dec
cli
adc
hlt
xchg
mov
js
into
pop
jl
(bad)
cli
call
movs
pop
mov
xchg
add
inc
adc
bound
dec
inc
mov
dec
xchg
cmp
xchg
out
fisttp
fidivr
loopne
jb
icebp
adc
sub
jle
pop
adc
in
hlt
frstor
xchg
mov
lods
xor
jge
dec
adc
jb
or
sbb
xchg
xor
data16
mov
shl
push
fs
jno
sbb
push
jne
cli
in
sbb
daa
add
mov
cli
jmp
ret
push
adc
mov
or
xchg
or
lods
out
or
into
js
jg
(bad)
mul
shl
jne
loopne
sti
add
aad
ret
ja
pusha
push
push
(bad)
push
mov
mov
rcl
(bad)
mov
mov
inc
dec
test
sub
ficom
mov
in
cmp
add
sbb
mov
add
repnz
(bad)
jp
add
dec
fisubr
xchg
push
push
mov
dec
rol
rol
xor
sub
xor
jecxz
fisub
or
dec
inc
jge
repz
mov
lods
cmp
shl
bnd
(bad)
pusha
in
cwde
dec
adc
cld
mov
mov
sbb
sbb
cmp
sub
mov
mov
push
mov
push
xor
mov
ins
popf
push
mov
outs
jnp
dec
mov
mov
pop
test
stos
stos
out
stos
and
(bad)
mov
call
push
ret
add
mov
(bad)
jp
rcr
or
adc
push
xor
shr
je
outs
retf
or
arpl
les
shl
rol
fldenv
lock
clc
mov
(bad)
cmp
jae
pop
push
rcr
jo
push
dec
cld
mov
mov
mov
xchg
dec
cmp
pop
push
stc
fs
pop
or
cdq
dec
add
mov
(bad)
sub
pop
in
xor
inc
std
fist
inc
mov
sub
ret
inc
xor
aam
sub
mov
movs
in
sbb
ja
sub
mov
popa
xchg
dec
push
lock
inc
out
and
mov
cmp
dec
stos
jmp
gs
in
sub
cmc
xor
mov
mov
out
or
xor
jnp
dec
pushf
mov
jbe
fistp
repz
ja
push
sub
push
and
pop
push
xor
dec
add
ss
mov
je
push
aad
ja
maxps
fcmovbe
mov
dec
cmp
inc
enter
out
fild
xor
dec
cmp
daa
inc
out
pop
ins
mov
xchg
ja
je
lea
pop
addr16
imul
aam
icebp
mov
xchg
ins
mov
adc
xchg
or
inc
dec
xor
and
inc
adc
fwait
add
out
lods
mov
pusha
dec
call
jmp
je
jge
dec
pop
add
fcom
mov
pop
jbe
inc
fs
fs
fst
dec
push
add
dec
jle
repnz
jg
sbb
cmps
fild
or
xlat
or
clc
xchg
jmp
inc
rcl
jae
adc
cmp
test
push
ja
cmc
ja
push
jmp
not
xchg
push
add
adc
out
fisub
cmps
mov
push
hlt
pop
cdq
cmp
pop
jbe
imul
fcomp
sub
xchg
xchg
sti
repnz
or
nop
neg
or
dec
xor
lock
push
pop
cmp
xchg
inc
adc
or
std
das
mov
and
fiadd
into
in
xor
addr16
cli
sub
shl
push
in
xchg
xchg
jne
push
mov
addr16
cwde
out
push
sahf
imul
mov
mov
add
call
push
and
retf
int3
idiv
sub
xchg
sahf
mov
mov
push
jmp
repz
stos
(bad)
push
nop
out
fstp
add
xor
xor
sub
jno
test
adc
addr16
and
int
push
jl
push
cmp
ins
int
inc
jmp
mov
or
lods
and
aas
das
or
rol
mov
retf
mov
mov
push
ins
enter
or
loopne
jg
dec
push
add
add
sub
imul
sar
aaa
stos
mov
lock
jp
adc
pusha
mov
(bad)
addr16
pop
inc
pop
add
and
dec
inc
inc
push
add
aas
push
mov
dec
les
ja
push
in
(bad)
test
mov
sbb
cli
cmps
and
call
adc
cwde
and
retf
sar
push
call
add
rcl
idiv
mov
xor
xchg
pushf
push
adc
js
and
mov
add
aad
sub
aad
aad
out
aaa
add
fidivr
mov
aaa
enter
xchg
add
fxch
add
pop
mov
(bad)
sti
or
sub
das
(bad)
and
xchg
test
xor
cmp
xchg
mov
sub
dec
idiv
nop
movs
stos
jmp
(bad)
adc
jle
(bad)
enter
push
lock
es
inc
in
mov
jmp
and
pop
pusha
stos
xor
loop
ficomp
cmp
mov
dec
pop
jg
push
movs
xchg
es
pop
push
hlt
cwde
loope
add
xchg
call
sub
xchg
aad
pushf
scas
mov
leave
enter
jnp
movs
fdiv
pusha
add
push
daa
dec
adc
dec
rcl
push
xchg
push
popa
cmps
mov
not
scas
inc
jp
mov
mov
cdq
stos
add
adc
fst
pop
enter
dec
xchg
push
ins
push
adc
outs
je
jl
imul
ds
shl
test
pop
xor
jae
jne
xor
icebp
jb
les
sbb
xchg
ins
jge
sub
cmps
add
popa
pop
cmps
mov
mov
sbb
xor
xor
sbb
pop
add
movs
shl
adc
nop
sub
retf
iret
in
ins
jns
and
dec
xor
pop
out
or
add
xor
cmp
movs
fisubr
cmp
vcvtpd2ps
enter
and
cmp
mov
adc
xor
sbb
in
cmps
mov
cdq
popf
mov
ja
adc
jo
sbb
sbb
xchg
sbb
cld
and
jbe
sub
pop
stc
outs
and
add
dec
daa
add
ss
shl
cmp
dec
jg
dec
inc
mov
andnps
retf
pop
fdivr
jmp
mov
adc
std
jbe
xchg
vcvtps2pd
jp
pop
aaa
ror
ret
out
ins
add
mov
mov
mov
cmp
fsubr
scas
cmp
gs
ror
retf
push
mov
dec
dec
cld
push
xor
inc
ja
imul
jno
int
fidivr
adc
sar
sbb
dec
cs
sub
cmps
sbb
lods
jo
cmp
xor
rcl
inc
xchg
and
nop
out
mov
into
push
(bad)
into
sub
mov
(bad)
dec
dec
jp
pop
outs
aas
mov
scas
xor
inc
ror
pusha
into
sub
iret
int3
adc
sbb
cli
rol
lods
adc
cmp
mov
in
mov
mov
fs
enter
ret
pop
call
in
dec
clc
add
add
adc
push
shl
xchg
out
xchg
pop
jbe
jb
in
es
mov
dec
xor
or
ret
test
cmp
jns
sbb
icebp
loop
sub
push
sub
sub
inc
cli
xchg
stos
or
and
inc
repz
shl
mov
jns
ins
jns
push
out
push
pop
dec
(bad)
mov
pop
push
add
adc
(bad)
xchg
add
gs
cmp
enter
dec
gs
or
pushf
ds
mov
jecxz
leave
xor
or
ja
mov
mov
xlat
scas
push
pop
xchg
pop
inc
adc
je
xchg
mov
inc
sub
cmps
xchg
imul
mov
std
xor
add
inc
je
adc
xchg
div
push
push
adc
xchg
mov
daa
pop
add
adc
push
leave
mov
sub
jbe
mov
int3
inc
xor
jb
(bad)
fiadd
add
sub
adc
test
in
bound
std
div
je
ins
xchg
loope
aas
repnz
jae
ret
dec
push
aad
jo
jecxz
loop
int3
ficom
dec
out
cs
adc
add
mov
dec
ror
addr16
push
jle
push
inc
fcmovu
stos
cs
sbb
xchg
pop
(bad)
cli
in
and
scas
into
cdq
sub
mov
ins
or
inc
xchg
(bad)
test
jns
jae
xor
xchg
loope
test
xor
bound
jb
repnz
pop
add
pop
mov
push
in
add
in
std
aas
and
and
dec
add
test
jbe
mov
(bad)
pop
inc
stos
fnstcw
adc
adc
add
arpl
(bad)
jnp
(bad)
and
push
shl
sbb
pop
std
dec
mov
(bad)
pop
sbb
fist
inc
das
daa
or
sub
pop
ss
dec
sub
or
inc
push
(bad)
or
cmovo
adc
enter
movs
repnz
cmps
dec
(bad)
and
mov
stc
mov
aam
xchg
and
fs
adc
aas
inc
pop
(bad)
imul
cli
sub
jmp
mov
and
aam
cmp
mov
cli
sbb
mov
jae
fild
jmp
pcmpeqb
fidiv
pop
mov
test
mul
jno
adc
and
dec
jp
loopne
cmp
fsub
sbb
mov
dec
add
fwait
neg
arpl
test
push
jne
fdivr
mov
stos
fmul
mov
mov
jp
movs
xor
sbb
or
test
xchg
es
adc
push
mov
scas
das
das
sti
or
fild
add
inc
mov
test
fist
add
int3
xchg
add
sbb
add
outs
mov
daa
dec
sti
push
inc
and
pop
arpl
push
popa
icebp
call
mov
rcr
sbb
cs
cmps
cwde
cmp
xchg
sbb
sar
cmp
dec
and
cmc
mov
neg
js
xchg
sbb
dec
neg
frstor
lea
(bad)
xchg
ltr
xor
push
and
nop
xchg
repz
test
jnp
mov
mov
imul
mov
dec
push
xchg
cmp
add
inc
xchg
xor
cmp
xor
sbb
push
outs
cmps
dec
push
(bad)
sar
and
fadd
push
mov
mov
les
or
stos
xor
outs
pop
mov
imul
call
dec
and
outs
nop
mov
mov
nop
das
mov
push
icebp
push
dec
xchg
ds
push
lahf
bnd
sbb
stos
add
cdq
daa
add
xchg
fadd
adc
mov
add
stos
retf
sbb
add
xor
hlt
xchg
jecxz
jecxz
xor
addr16
jmp
neg
arpl
arpl
push
and
lea
es
xor
sub
xchg
cwde
fdiv
sub
mov
and
pop
xor
mov
lds
call
cdq
fild
mov
add
sahf
and
fidivr
shl
push
xchg
fwait
lds
icebp
retf
fldcw
inc
and
and
out
sbb
adc
add
dec
dec
ja
sar
(bad)
pusha
push
adc
cld
xor
test
retf
rol
push
adc
bound
xor
cdq
iret
or
loopne
jnp
mov
popa
adc
out
js
xchg
sub
pop
cdq
mov
mov
adc
aad
xchg
(bad)
mov
pop
mov
cmp
jno
inc
mov
(bad)
pushf
ja
into
sti
fnstenv
pusha
hlt
mov
mov
dec
loope
add
jbe
iret
xor
cmps
ret
sbb
movs
int3
hlt
movs
dec
push
adc
or
icebp
dec
cmp
cmc
outs
shr
xor
mov
mov
mov
nop
out
mov
push
mov
loope
mov
aas
(bad)
sub
repz
or
xor
fstp
int3
jno
inc
je
call
repz
hlt
sar
mov
dec
pop
sahf
pushf
push
adc
aam
mov
add
imul
jae
push
jbe
xor
(bad)
(bad)
jmp
fdivr
jo
push
add
lock
gs
xchg
shl
jmp
fcom
jmp
lds
adc
adc
aaa
iret
in
fwait
rcl
xchg
ret
sub
xor
dec
add
(bad)
fiadd
nop
inc
cld
mov
iret
ret
repz
pop
mov
popa
retf
inc
mov
bound
sub
jmp
and
jp
out
fcomp
sbb
shl
div
rep
push
jecxz
stc
sbb
repnz
mov
adc
retf
mov
call
xor
push
and
or
jmp
sbb
inc
or
call
mov
dec
cmp
add
or
cmp
xchg
div
fwait
jnp
cbw
sbb
cmp
dec
xor
std
add
push
pop
mov
arpl
inc
cmps
stos
loop
pop
cwde
sub
mov
xchg
xchg
bound
mov
test
add
popa
rcr
xor
ins
lds
dec
jnp
sbb
stos
mov
fdivp
fwait
sbb
mov
(bad)
movs
xchg
mov
lods
ret
mov
sub
and
pop
pop
jae
jns
mov
and
jo
add
xlat
cld
mov
cdq
sub
iret
add
test
nop
pusha
pop
sub
pop
pushf
push
jno
rcr
cmp
pop
inc
inc
fadd
dec
inc
sub
add
pop
add
leave
add
daa
sahf
cmp
mov
test
mov
pop
leave
shl
xchg
in
mov
jge
jne
retf
scas
in
pop
or
es
jno
mov
fidivr
scas
ds
sub
sub
inc
xchg
mov
inc
jg
sahf
int
mov
sub
in
adc
dec
sub
push
and
bound
aaa
repnz
pop
jb
mov
lea
dec
in
ds
pop
cld
jmp
adc
mov
mov
add
pop
enter
frstor
adc
daa
add
repz
xor
push
fld
fadd
in
or
add
imul
call
shr
mov
or
jb
and
ja
mov
push
sbb
rol
pop
inc
js
add
mov
dec
lds
test
mov
fmul
ret
outs
in
adc
mov
pop
test
or
push
jmp
gs
int
(bad)
bound
adc
lock
jbe
add
in
mov
daa
mov
in
(bad)
mov
and
retf
xchg
cs
test
das
sub
sub
cli
scas
and
call
xchg
in
inc
cmp
arpl
repnz
sar
add
sbb
test
int3
inc
xor
cli
int3
add
push
stos
mov
mov
sub
dec
icebp
scas
add
push
sub
in
mov
mov
sub
sbb
das
pop
inc
push
push
sub
inc
adc
test
les
mov
add
push
rcr
ds
dec
mov
sub
out
ficom
je
fdiv
jns
cmp
cmps
cmp
sahf
cmps
rep
jp
add
popa
inc
pop
mov
xor
leave
pop
sub
(bad)
xchg
fidivr
not
sub
jp
fdiv
jmp
leave
pop
xchg
popa
jmp
adc
xor
jmp
(bad)
les
cmp
outs
(bad)
sbb
iret
mov
jge
sub
mov
daa
ins
pushf
jbe
clc
xchg
ja
lods
stos
cld
sbb
div
add
sbb
loopne
dec
sbb
add
iret
jle
xor
sbb
xor
lahf
inc
jb
int3
call
fwait
adc
ja
stc
imul
jne
in
mov
add
cmp
sub
and
ja
adc
das
mov
outs
popf
gs
les
jge
mov
jmp
inc
ret
cmp
or
mov
add
ror
mov
mov
mov
and
push
mul
jb
scas
imul
ss
xchg
test
sbb
fiadd
jb
dec
cmp
out
xchg
stos
push
jl
into
addr16
jbe
or
xor
xor
cwde
shr
push
or
in
cld
xor
dec
xchg
cmp
shr
push
jno
mov
and
mov
mov
fdivr
(bad)
test
cmps
cli
mov
jle
cld
in
xor
retf
jae
(bad)
jb
nop
gs
in
rcr
(bad)
xor
mov
sti
mov
lock
add
push
xchg
dec
sbb
(bad)
mov
aam
add
mov
out
imul
cld
aaa
idiv
std
sub
mov
in
fmul
pop
push
outs
sbb
call
push
cmp
dec
pop
dec
aas
and
bound
xor
jge
inc
add
scas
pop
xor
nop
mov
jns
test
jge
shl
mov
xor
push
or
sbb
jle
cmp
push
mov
scas
inc
mov
and
adc
ret
repz
out
and
retf
ss
fstp
pop
mov
arpl
test
clc
shl
ins
imul
aam
adc
dec
add
jg
dec
add
pop
add
pop
inc
push
int3
fsubr
test
xor
(bad)
jge
loope
pushf
add
movs
mov
mov
push
(bad)
xchg
sub
retf
xchg
popa
mov
retf
mov
jo
and
sub
mov
add
out
or
jl
les
add
bound
push
enter
in
xchg
push
jg
test
jle
out
pushf
xchg
pop
es
xchg
dec
test
lahf
push
mov
pop
dec
(bad)
shl
pop
into
sar
imul
mov
fiadd
stc
(bad)
sbb
addr16
pushf
cli
mov
loopne
(bad)
and
mov
fld
sbb
sti
test
inc
lea
test
sub
repnz
lods
inc
loope
enter
adc
idiv
sbb
popf
xchg
sbb
dec
push
in
dec
inc
jmp
sub
cwde
cli
push
inc
add
fwait
int3
sti
div
or
rol
out
pop
sbb
(bad)
sub
adc
mov
add
sub
test
push
shr
sub
retw
push
data16
fsubp
imul
and
movs
aam
stos
out
out
xchg
jge
mov
ror
sub
push
mov
sbb
daa
inc
and
loop
inc
fidivr
pop
jb
test
fdivr
dec
mov
mov
dec
add
wrmsr
pusha
lock
cwde
push
es
jns
sti
fld
test
dec
xor
jecxz
xor
inc
add
and
adc
call
call
aas
mov
cmc
cmp
ficomp
cmp
jae
not
or
(bad)
retf
cmp
mov
xor
or
cmp
in
aam
push
cmp
in
es
push
add
push
pop
cli
dec
call
xor
mov
xor
sub
outs
and
cmp
cmc
das
sub
push
push
(bad)
fld
dec
shl
pop
lea
test
mov
pushf
out
jbe
stc
mov
fs
dec
ror
mov
mov
loop
adc
cmovp
add
scas
imul
add
test
cmp
inc
inc
add
popf
jbe
mov
cmc
adc
mov
stos
xchg
out
add
xor
and
imul
sbb
jb
mov
sub
mov
inc
scas
popf
jl
call
push
test
lock
std
stc
sahf
or
pushf
fs
pop
or
sahf
xchg
mov
clc
fcmovbe
rcr
push
push
sub
sbb
enter
test
jno
jmp
dec
sbb
push
(bad)
xchg
in
add
add
mov
stos
cmp
aam
jns
data16
int3
clc
sub
les
jle
leave
pop
aaa
inc
lds
jae
pop
shr
pop
(bad)
clc
xchg
adc
sbb
shr
xlat
mov
(bad)
adc
xor
mov
mov
or
imul
push
sbb
mov
cld
imul
mov
adc
adc
sub
mov
jecxz
cmp
les
aad
imul
add
jle
mov
mov
add
sub
xor
inc
sub
dec
es
xchg
cmp
xor
fld
dec
loop
lds
sbb
jo
pop
mov
push
adc
jne
jecxz
in
in
retf
nop
push
jge
adc
mov
addr16
jb
lds
sbb
push
cld
or
int
xchg
mov
mov
das
mov
pop
adc
hlt
fnsetpm(287
daa
lock
mov
cmp
cli
jle
push
shl
fdiv
(bad)
call
mov
stos
and
inc
cs
scas
xchg
popf
jne
in
dec
sbb
into
add
shr
push
daa
dec
rol
mov
dec
inc
jae
jno
inc
xor
jmp
(bad)
(bad)
push
rcl
add
outs
push
sbb
inc
push
or
and
xor
and
in
pop
jbe
cwde
push
xor
cmp
clc
addr16
mov
ret
jl
mov
add
inc
adc
dec
(bad)
fstp
xor
pop
pop
popf
adc
test
fdiv
jl
and
scas
or
psllq
pop
jg
popf
ret
in
jge
push
movs
push
push
and
mov
loopne
xchg
adc
xchg
jmp
or
or
ja
rcr
jmp
ins
dec
outs
test
adc
outs
fild
in
js
aam
leave
ja
in
dec
push
loopne
out
jae
ds
or
and
cdq
das
jle
rcr
adc
cmp
out
add
push
push
and
test
inc
test
jae
mov
add
mov
add
pop
pop
(bad)
cld
pop
mov
or
ret
movs
cli
xor
(bad)
pusha
sub
and
xchg
clc
cmp
or
add
(bad)
or
mov
test
inc
mov
add
inc
add
and
rsqrtps
fucomp
(bad)
sub
ja
or
sbb
lods
(bad)
and
sub
loopne
imul
mov
pop
call
repnz
push
mov
lock
jae
xchg
lods
or
in
(bad)
xchg
call
imul
iret
sbb
gs
stos
inc
inc
call
sub
mov
or
mov
cld
test
cmp
push
fcom
jne
in
or
dec
sub
inc
and
test
test
js
add
jae
dec
retf
push
repnz
ror
jne
mov
mov
mov
cmp
fst
js
call
push
or
sbb
mov
push
fxch
loope
(bad)
or
iret
jne
test
scas
push
movs
xchg
iret
xchg
xor
leave
rol
push
stc
adc
ins
xor
mov
xchg
retf
(bad)
push
repnz
xor
cwde
test
inc
mov
pop
enter
or
pusha
jl
mov
push
dec
dec
cmps
adc
cmp
adc
test
cli
adc
jmp
jne
jo
jg
dec
sbb
iret
scas
push
add
cmp
xor
sysret
or
cmps
(bad)
adc
mov
jo
inc
loopne
sbb
shl
add
sbb
xchg
lods
pop
sbb
(bad)
mov
scas
ins
rcl
add
pusha
inc
test
cmp
fmulp
cmp
into
inc
mov
push
mov
sbb
sub
dec
sub
xor
movs
sar
jp
jno
push
fcompp
imul
out
xor
xor
sbb
sti
int
imul
push
mov
jmp
dec
ret
pop
jmp
dec
rcl
ret
cmc
xor
pop
push
cmp
cmp
ror
retf
xchg
fdiv
mov
stos
mov
sub
mov
inc
mov
sahf
test
xlat
retf
add
jmp
adc
inc
cdq
and
jmp
out
or
hlt
jmp
iret
sbb
dec
xor
inc
adc
std
lock
mov
fstp
shr
cmps
pop
jge
xchg
inc
in
lea
xchg
out
add
out
fmul
add
movs
mov
in
xchg
sub
add
xchg
sti
nop
add
jb
xor
pop
add
sbb
xor
add
adc
and
sub
scas
fldcw
cs
push
inc
dec
cwde
(bad)
movs
or
xor
jecxz
(bad)
(bad)
cmp
dec
dec
test
sbb
push
sub
outs
inc
push
imul
inc
dec
cmp
cwde
jne
sub
push
sbb
mov
mov
adc
lock
mov
mov
(bad)
cld
fnstcw
inc
push
stc
add
sbb
jo
ret
ficom
outs
popa
shl
faddp
lock
mov
int
dec
lds
int
retf
cmp
add
xchg
je
add
jns
leave
jp
cmp
adc
movs
lds
mov
aad
out
mov
push
call
shl
mov
aad
mov
repnz
rcl
adc
cmp
sbb
loop
cmp
sar
sub
xor
dec
push
pushf
je
gs
sti
fild
outs
scas
pop
xlat
push
shl
cdq
xlat
xchg
adc
fimul
lods
pop
add
(bad)
adc
mov
inc
sub
pop
jno
mov
sysret
add
inc
popf
or
sub
lds
adc
sub
mov
neg
xchg
popa
test
int3
mov
xchg
gs
push
lock
out
push
cmps
or
push
xchg
and
adc
(bad)
pop
fwait
push
inc
xor
or
mov
enter
push
mov
mov
xchg
retf
aam
jns
jg
fistp
sbb
pusha
cmps
or
test
test
xor
dec
loop
and
inc
add
xor
sub
arpl
mov
sahf
test
cmps
cwde
dec
push
inc
mov
adc
mov
cli
and
lea
and
add
(bad)
mov
mov
pop
ss
stc
int3
cs
test
stos
movs
mov
mov
enter
sbb
adc
xor
enter
mov
inc
dec
sti
push
and
jle
dec
and
call
or
cwde
(bad)
mov
lods
and
or
(bad)
daa
xchg
cwde
mov
out
sub
sbb
adc
ins
in
pop
fwait
sub
nop
retf
popa
inc
xchg
sbb
cmps
sub
sub
in
add
clc
push
fdiv
in
enter
dec
ret
mov
rcr
daa
test
jnp
sbb
cmps
xchg
push
cld
add
add
and
pop
aas
push
xchg
mov
sbb
(bad)
ja
jmp
jg
push
push
pop
adc
and
push
lock
daa
cdq
and
pop
add
jp
ins
test
xlat
xchg
je
xchg
arpl
inc
dec
fstp
clc
fcomp
sbb
pusha
es
stc
mov
rol
cs
adc
fnstenv
xchg
mov
sub
sbb
pop
sbb
cmps
xor
add
popa
or
push
or
add
sbb
test
outs
test
sti
dec
in
fidiv
ror
arpl
sbb
rol
shufps
push
(bad)
mov
(bad)
cmp
lea
sub
test
sar
das
jnp
mov
stc
push
call
cld
pusha
jmp
pop
jg
lock
adc
push
iret
cmp
or
adc
push
dec
jbe
pop
das
push
xor
jecxz
push
xchg
scas
inc
fist
dec
stos
and
cmps
ret
mov
mov
rcl
(bad)
sub
and
ror
js
repnz
mov
jae
pop
add
(bad)
sub
ret
out
sbb
inc
imul
mov
mov
xchg
movs
ja
jmp
pop
jne
fs
sbb
lahf
jl
xchg
cmp
cmp
dec
mov
xchg
xor
js
xchg
mov
movs
xor
sbb
in
push
pop
cmp
push
loopne
pop
cs
sbb
mov
(bad)
mov
dec
mov
cmps
das
ror
cmp
mov
ret
pop
into
push
sub
rcr
dec
pop
cmp
test
cmps
test
and
mov
or
push
mov
adc
popa
mov
push
int
or
hlt
inc
adc
adc
xchg
jmp
les
mov
(bad)
add
mov
jmp
pop
push
xor
mov
scas
sar
xor
fcomp
jo
and
inc
out
inc
adc
xchg
pop
or
ja
lock
xor
fnsave
mov
loope
and
and
retf
or
lock
outs
in
stc
shl
inc
adc
mov
sub
sub
fisttp
je
inc
mov
mov
aad
sbb
lds
mov
(bad)
out
mov
cld
scas
jnp
inc
push
ficomp
imul
pop
xchg
sbb
mov
sub
xchg
push
pop
pop
call
dec
les
pushf
test
jle
movs
push
les
adc
sbb
pushf
mov
mov
stc
sub
push
add
pop
bound
inc
loope
xor
jmp
iret
loop
shr
in
mov
aam
cmc
cmp
sar
aas
push
cmp
inc
or
or
inc
mov
push
cmc
sbb
mov
cmp
neg
jnp
adc
or
lods
mov
outs
push
mov
cmp
cld
fst
sbb
sbb
jno
jmp
lea
in
inc
lea
(bad)
clc
pop
mov
in
mov
xor
xchg
push
cdq
mov
pop
mov
(bad)
pusha
cwde
push
lea
jge
jb
int3
in
mov
pusha
xchg
xchg
and
jo
dec
fs
sti
xor
lahf
add
or
xor
jmp
mov
push
aas
mov
xchg
fwait
cmc
or
mov
xor
mov
mov
sub
movs
jb
jnp
or
mov
mov
mov
test
sbb
jmp
adc
push
dec
frstor
pop
mov
fdivrp
rcr
mov
mov
jge
rcr
xor
pop
sub
test
add
pop
mov
pushf
icebp
ror
(bad)
jle
lahf
js
fistp
pushf
jge
dec
adc
or
lock
cwde
stos
xor
rol
push
mov
sbb
sbb
push
push
rol
push
imul
adc
add
inc
push
pop
cdq
cld
xchg
inc
or
pop
dec
dec
mov
(bad)
and
fbld
sahf
push
xchg
out
add
adc
cmp
ss
outs
mov
ins
popa
dec
mov
mov
xor
sti
lds
inc
and
inc
pop
fs
jo
sub
jb
(bad)
aam
sbb
ins
add
cmps
xchg
mov
push
(bad)
(bad)
xor
jno
push
pop
inc
cwde
mov
stc
mov
mov
mov
mov
mov
add
mov
xor
clc
sbb
jp
or
pop
mov
sub
inc
jo
stc
mov
add
js
mov
imul
sbb
pop
jnp
fmul
loop
out
pop
xchg
dec
adc
push
lds
jo
xchg
jae
pop
mov
fsub
jno
push
enter
mov
(bad)
xor
iret
mov
add
iret
add
retf
dec
sar
pop
add
cmp
(bad)
pushf
into
dec
mov
int
push
pop
mov
xchg
(bad)
pop
aaa
cdq
xor
dec
adc
xchg
xor
sub
(bad)
leave
push
add
sahf
nop
and
pop
ins
inc
pop
xor
xor
inc
int3
lds
rol
int3
mov
and
vextracti64x4
sahf
mov
mov
add
cld
loop
aam
and
(bad)
dec
xor
and
cmc
and
mov
pop
jg
jmp
es
sbb
or
push
mov
push
push
add
add
ja
retf
lock
icebp
jmp
pop
jo
imul
xor
stos
bound
push
and
pop
jae
daa
outs
test
scas
stos
bound
inc
push
push
cmps
push
lea
jl
test
cmp
(bad)
cwde
(bad)
dec
pusha
add
adc
sbb
inc
cmp
adc
mov
aas
pusha
push
or
mov
xor
add
sub
push
(bad)
cmc
outs
(bad)
gs
arpl
cmp
push
add
je
hlt
jae
sub
mov
xor
iret
xor
stc
std
scas
(bad)
jmp
out
push
push
or
fild
inc
sub
aad
repz
jle
pop
std
fldenv
cmp
int3
or
jge
xchg
xor
mov
das
jecxz
cmp
daa
pushf
dec
cli
adc
in
js
call
cmp
fisttp
jp
xchg
jg
out
cs
xchg
mov
in
retf
clc
pop
mov
stos
or
or
cmp
jo
mov
lods
pop
jmp
cld
loopne
int
sbb
ds
call
jne
lods
lea
pop
cmps
rcl
inc
lahf
dec
(bad)
cli
sbb
xchg
aas
xchg
pop
xchg
xchg
and
xchg
fscale
cmp
imul
pop
out
enter
enter
mov
fisttp
sub
rol
adc
mov
mov
mov
dec
daa
mul
call
cmps
es
xchg
mov
loop
mov
jb
and
cmp
icebp
jg
and
adc
mov
(bad)
retf
mov
dec
js
pop
jecxz
pop
shr
cmps
pop
icebp
jp
cmc
cmc
mov
sbb
iret
and
pop
aas
push
xor
lahf
mov
mov
mov
dec
dec
fisttp
les
fdivr
in
fadd
add
push
mov
and
sar
imul
jg
inc
dec
add
xor
xor
and
sub
add
stos
pop
call
cmp
jb
and
sahf
popf
and
or
mov
lods
mov
jae
ror
imul
pop
dec
add
push
add
cdq
push
out
mov
push
pop
neg
add
mov
cmp
icebp
jmp
and
cmc
push
fmulp
loopne
inc
mov
mov
pop
ds
mov
(bad)
inc
pop
inc
popa
xchg
or
xchg
pusha
and
inc
enter
test
add
repnz
lahf
mov
pop
std
ja
ret
(bad)
jnp
xchg
repnz
test
test
sub
dec
enter
xor
(bad)
pusha
pop
fbstp
test
mov
shl
fsubr
jne
mov
sbb
pop
inc
arpl
cmp
(bad)
sub
out
or
push
rcl
inc
push
add
xchg
push
movs
adc
shr
cmp
cmp
mov
jo
and
retf
fwait
xor
or
lds
and
dec
xor
and
outs
pop
(bad)
(bad)
ret
mul
(bad)
fcmovnbe
jns
inc
lock
lods
sbb
push
sbb
add
or
xor
sbb
movs
into
je
test
add
fmul
outs
(bad)
xchg
mov
xor
mov
mov
lock
inc
sbb
push
pop
or
out
pop
call
jg
imul
lahf
shr
add
mov
das
std
mov
movs
xor
or
stos
sub
scas
movs
aam
or
adc
dec
idiv
jmp
dec
mov
or
test
in
add
lock
movs
pushf
cmp
push
movs
push
sbb
ins
icebp
aam
call
sub
inc
in
jle
pop
xchg
mov
ins
mov
test
adc
cwde
addr16
call
retf
xor
xor
push
sbb
test
add
mov
loopne
xor
hlt
pop
movs
xchg
push
dec
jbe
inc
ja
jp
ss
movs
cmp
adc
aad
mov
and
pop
test
mov
pop
cmp
pushf
push
xor
inc
adc
fwait
dec
in
into
int
out
std
or
(bad)
push
sub
sar
je
add
pop
adc
jno
shl
pop
loopne
imul
pushf
jnp
pop
not
jle
mov
mov
pop
arpl
pop
push
jmp
icebp
xchg
leave
loop
xlat
lock
adc
outs
int
mov
stc
pop
test
xor
outs
and
imul
cmc
xchg
mov
add
test
fimul
int3
imul
jbe
out
jg
lds
rol
jbe
jno
dec
lahf
cld
mov
mov
fcomp
inc
in
cli
jg
mov
dec
push
inc
or
sbb
adc
sbb
cmp
fist
push
adc
inc
cmp
inc
fldcw
mov
xchg
cmps
repnz
and
hlt
test
addr16
jb
jg
push
inc
push
cmp
jno
mov
stc
mov
sub
in
(bad)
repnz
cmp
push
enter
in
ja
inc
push
pop
add
lock
mov
imul
arpl
(bad)
mov
sub
stos
cdq
fisttp
inc
jbe
fs
push
ins
out
jns
inc
mov
xor
pop
xor
cmc
nop
push
pop
and
add
add
xlat
or
push
call
dec
push
call
into
adc
repz
mov
dec
sbb
mov
je
fiadd
ret
dec
test
dec
lods
shl
mov
push
out
add
add
fwait
jns
sbb
push
sub
aad
mov
add
jns
fwait
cmc
cmove
push
jno
nop
adc
sub
int3
push
mov
cli
repz
jbe
mov
repnz
sahf
and
movs
sub
jg
sbb
sub
jle
rcl
in
jnp
stos
xor
mov
arpl
dec
scas
aad
jmp
(bad)
and
shl
out
inc
daa
sbb
push
mov
std
push
xchg
jmp
push
inc
cmp
push
lods
push
jno
lock
mov
lds
jecxz
test
pop
cmp
cmp
mov
inc
imul
lods
pushf
jbe
mov
jno
repz
repz
cmp
cwde
mov
xchg
add
mov
jne
adc
out
dec
xchg
sti
popa
gs
xchg
dec
mov
inc
aam
mov
push
sahf
and
pop
lods
icebp
icebp
dec
ins
or
outs
xor
jnp
xor
lahf
adc
inc
shl
push
inc
inc
mov
ins
jp
cmc
xchg
pop
lds
mov
add
movs
push
or
cdq
rol
mov
and
daa
cmp
jecxz
mov
sbb
fdivr
cmp
test
jl
rcr
mov
cmp
fld
jmp
sbb
dec
sti
rcl
mov
mov
sub
fucom
pusha
enter
pop
pop
sti
lea
or
movs
shl
sbb
lods
test
cdq
jge
jae
cmp
shl
jae
add
add
inc
es
xchg
popa
aad
jp
jmp
punpckhwd
jnp
cdq
fdiv
dec
mov
push
shl
add
sti
idiv
pop
inc
dec
xchg
pop
push
inc
push
stos
pushf
sti
jbe
in
xor
(bad)
and
push
fs
jp
xor
push
or
cmp
mov
fld
inc
adc
push
imul
xchg
add
jecxz
(bad)
(bad)
aas
std
pop
lods
jg
gs
icebp
mul
sahf
lahf
cmp
and
sbb
jne
sbb
jecxz
or
hlt
bound
and
mov
fs
aam
xchg
lahf
cs
lods
int
push
aad
dec
inc
lods
fwait
pop
popa
sbb
adc
lea
and
push
sub
popf
popf
pop
dec
fnstenv
dec
inc
in
shl
int
pop
jo
add
mov
xchg
dec
fcmovu
cli
clc
adc
add
movs
push
pop
lods
cmp
xchg
mov
int
xchg
bound
in
js
push
fsubp
pop
enter
push
ds
(bad)
call
sub
outs
mov
pop
fisubr
movs
mov
out
add
push
mov
pop
add
sbb
push
mov
inc
mov
adc
into
icebp
(bad)
sbb
mov
(bad)
int3
sub
popa
in
dec
mov
retf
call
and
out
call
ins
(bad)
xor
shl
mov
jge
adc
mov
sub
cs
jmp
sub
popf
or
imul
pop
sbb
cmp
dec
inc
add
pop
(bad)
add
dec
out
fstp
sub
stos
in
daa
in
mov
dec
jo
(bad)
push
pop
shl
repnz
dec
xchg
(bad)
push
scas
test
and
popf
ins
mov
fdivr
ss
popa
cmps
in
cdq
inc
sub
pop
inc
clc
mov
xchg
sbb
daa
mov
out
mov
inc
or
(bad)
sub
mov
loop
push
aas
sbb
xchg
dec
fst
test
(bad)
sar
mov
loope
mov
xchg
adc
jge
lea
(bad)
scas
ret
cmps
bsr
dec
pop
sti
jne
ja
out
aad
gs
jno
cmp
retf
sar
movs
push
test
enter
aad
lods
dec
xchg
in
sahf
and
dec
jnp
lods
loopne
cmps
pop
mov
xchg
cmp
dec
js
pop
div
popf
pushf
je
add
cmp
repz
repz
sbb
ins
push
add
shl
xchg
(bad)
push
popa
xlat
pop
or
and
xor
dec
lods
(bad)
xor
test
arpl
xor
cdq
data16
sub
stos
sbb
cmp
lahf
out
cmp
xchg
mov
int3
xchg
or
jle
mov
scas
xchg
or
sub
sbb
mov
stos
mov
lea
push
cmp
call
rcr
mov
or
loope
mov
fisttp
mul
push
xchg
test
jecxz
daa
add
adc
xor
add
push
repz
mov
imul
pop
sub
int
rcr
add
imul
sub
add
pushf
xchg
dec
add
ds
pop
ss
imul
mov
les
add
cmp
int3
inc
pop
es
pop
jns
add
mov
cs
enter
adc
add
and
push
repnz
adc
cwde
or
int
pop
rcr
ja
xchg
sbb
pusha
sub
shl
add
(bad)
and
(bad)
mov
cmp
in
fisttp
in
(bad)
(bad)
aas
out
jp
cmp
cld
xor
cmp
nop
popf
xchg
cdq
out
shr
mov
es
stc
cs
hlt
outs
xor
pop
movs
push
cmp
add
scas
add
out
ins
dec
adc
cs
test
add
call
hlt
cmp
cmp
ds
call
mov
push
jge
call
mov
or
out
jae
test
xchg
out
cmp
add
pop
inc
mov
ds
popa
shrd
push
sub
dec
cmp
lahf
jmp
sbb
cmc
fidiv
jmp
mov
sti
jmp
add
push
cmc
sbb
adc
je
push
inc
jns
push
mov
(bad)
and
xor
jmp
dec
ret
jecxz
jmp
nop
sub
pop
xchg
jecxz
std
rol
sub
sub
xor
xor
test
cdq
aam
adc
mov
icebp
mov
xchg
or
add
shl
or
mov
push
xchg
xchg
sub
or
call
mov
sub
les
in
and
or
popa
push
test
arpl
adc
jo
and
cmps
fdiv
scas
push
nop
int3
sbb
sbb
xchg
adc
add
adc
dec
inc
cdq
jnp
sbb
scas
scas
jl
popf
lea
and
add
sar
test
shl
cmp
nop
aad
xchg
gs
jb
ins
shr
pop
retf
shr
fwait
pop
and
cmps
inc
adc
jecxz
dec
mov
sub
sbb
std
les
loopne
inc
xchg
int
(bad)
xor
sbb
pusha
and
xchg
into
lods
mov
push
int3
fldenv
sbb
pusha
add
cmp
ins
xor
mov
inc
mov
dec
mov
pusha
dec
mov
xlat
xchg
jl
pop
and
xor
jecxz
push
cs
lods
enter
mov
sub
pushf
cmp
fdiv
sbb
ret
nop
adc
les
mov
adc
std
repz
xor
sub
lods
inc
and
sub
adc
sbb
adc
sub
cmp
pop
pop
add
mov
or
aad
imul
or
jp
(bad)
xor
xor
sub
add
xchg
jnp
rcr
bound
es
inc
(bad)
jmp
mov
dec
jge
mov
(bad)
shl
cmc
xchg
cdq
js
stc
lea
test
into
xor
ds
fistp
cmp
mov
jo
out
push
mov
cdq
mov
jb
into
adc
stc
aas
push
jb
sbb
dec
dec
jo
mov
adc
loop
mov
cmp
iret
push
rol
shl
movs
sub
test
cmp
fsubr
jae
hlt
adc
pop
das
jmp
and
push
je
lock
lea
cmp
lods
lahf
jnp
in
dec
adc
mov
pop
pop
or
add
in
(bad)
push
ds
push
and
mov
cmps
popa
push
icebp
or
into
and
pop
dec
cmp
popa
mov
popa
lahf
cmp
in
mov
mov
mov
rcr
cmp
adc
scas
shl
fsubr
jl
jae
pushf
repz
jnp
aad
fstp
fwait
lds
lods
cmc
pop
arpl
xor
lock
xchg
dec
mov
sub
mov
sbb
out
pop
adc
aaa
mov
push
cmp
cmc
and
inc
xchg
inc
or
xor
xor
dec
popf
mov
pop
jecxz
cdq
jnp
xchg
in
mov
(bad)
cs
retf
add
sti
push
or
xor
loop
jge
cmps
xchg
jb
scas
dec
xchg
scas
int3
jle
fidiv
sbb
adc
mov
and
pop
add
jmp
loopne
out
mov
xchg
mov
xor
sub
jle
jne
adc
push
push
cmp
mov
sbb
not
pop
push
out
ss
inc
jle
popf
add
push
xchg
in
sub
sbb
dec
cdq
jl
adc
mov
adc
cmps
xchg
iret
mov
mov
mov
xor
arpl
and
xor
add
xchg
xchg
jns
xor
push
fnstsw
addr16
lock
sub
and
pop
dec
cmp
dec
jo
ror
int
sbb
and
test
test
or
xor
fsubp
mov
xlat
iret
sub
sub
mov
push
dec
push
rol
push
cmp
shr
sahf
xchg
push
jecxz
in
in
dec
arpl
dec
aam
lods
push
ror
mov
jmp
xchg
dec
xchg
jle
xchg
aaa
sbb
inc
cmps
fmulp
push
mov
ret
(bad)
rol
xor
ss
fnstenv
imul
xor
xchg
xchg
fsubr
push
mov
adc
and
clc
lds
lock
mov
or
xchg
adc
cli
jle
jmp
test
or
mov
xchg
mov
pop
inc
fs
fcom
data16
out
int
dec
hlt
inc
dec
mov
jne
add
dec
(bad)
sub
ins
cwde
inc
std
sbb
call
das
in
gs
xor
push
fst
cmp
(bad)
mov
out
gs
fs
jle
test
push
mov
mov
pop
lods
pop
rol
js
test
data16
xchg
dec
(bad)
std
dec
jnp
cdq
jnp
arpl
nop
hlt
hlt
mov
ror
fisubr
push
(bad)
sub
adc
xor
clc
sub
cwde
(bad)
outs
xchg
adc
int
cmp
add
xchg
and
pushf
sbb
pop
xor
jg
ror
add
iret
lahf
test
jne
js
jne
xor
xchg
cmp
int
jae
cwde
or
jl
mov
dec
lea
je
hlt
cmp
mov
xlat
jge
lods
stos
jg
ret
jp
jnp
cmp
ja
push
cmc
pop
add
fisttp
jb
out
lods
int3
mov
test
add
inc
xor
cs
pop
scas
das
fidiv
sbb
or
aad
xchg
push
icebp
push
xchg
push
addr16
jecxz
or
mov
pop
fs
xchg
(bad)
loop
fst
cmp
pop
jp
adc
adc
fwait
je
in
test
in
xchg
cmp
sub
and
mov
pop
and
mov
sbb
cmps
arpl
or
mov
enter
pop
popf
jp
cmp
fucomp
cmp
(bad)
cs
push
cmps
mov
iret
sti
push
cdq
sbb
push
or
ret
sbb
sub
enter
icebp
cs
imul
arpl
(bad)
aad
retf
cmp
sbb
ins
or
loope
push
sbb
mov
mov
je
mov
adc
sbb
pop
sbb
call
fmul
push
pop
mov
pushf
adc
mov
jb
dec
test
sbb
dec
stos
ret
add
ficom
lahf
and
pushf
and
loopne
mov
and
mov
stc
dec
or
add
sbb
mov
shl
push
(bad)
adc
push
stc
not
mov
out
lods
adc
xchg
inc
mov
or
test
adc
sbb
into
fild
cmp
bound
adc
out
and
jp
lahf
fistp
iret
cmps
sbb
sub
mov
mov
das
sub
mov
std
icebp
pop
sub
mov
xchg
outs
dec
call
call
inc
push
push
iret
mov
(bad)
ja
stc
test
xor
push
aad
into
movs
int
adc
popa
add
(bad)
add
pop
mov
cdq
lods
nop
shr
and
add
int3
pushf
fisttp
imul
popf
into
pop
fild
lahf
mov
jl
in
push
cmp
ds
pop
or
nop
dec
and
addr16
mov
xlat
xchg
(bad)
xor
push
jbe
fisttp
sbb
mov
inc
jge
outs
cmp
sub
push
aaa
jl
in
sbb
out
cli
mov
sar
ret
bound
xlat
inc
mov
movs
test
in
enter
xor
mov
push
call
mov
mov
ret
mov
enter
in
push
mov
scas
mov
xchg
shld
jo
xor
ds
sub
sti
push
cmc
bound
sub
bound
dec
jg
push
push
loope
cvtpi2ps
sbb
inc
push
ds
sbb
pop
push
jmp
icebp
inc
dec
(bad)
sub
imul
push
jp
jle
(bad)
sti
push
adc
iret
int
aam
in
cmp
outs
(bad)
out
dec
push
ins
adc
jns
sub
hlt
iret
aaa
push
xlat
fwait
dec
jge
jl
mov
xor
call
dec
mov
arpl
jbe
and
add
out
mov
stc
inc
sub
icebp
sub
jno
cmps
push
sbb
popf
xchg
or
mov
mov
adc
mov
gs
pop
mov
mov
pop
fst
in
xor
and
pop
inc
popf
sti
lods
daa
jo
mov
dec
test
adc
shr
add
jp
cmc
push
jo
cdq
cdq
daa
shl
int3
out
scas
mov
popf
xor
jmp
lahf
test
mov
and
popf
cdq
in
mov
push
jns
cs
xlat
inc
xchg
fnstenv
rcl
clc
daa
mov
add
mov
dec
sbb
aas
lock
cld
aam
push
dec
outs
mov
mov
sbb
leave
call
xor
(bad)
xlat
scas
bound
jns
mov
pop
dec
dec
dec
dec
push
jmp
shr
sub
mov
cmp
in
jg
in
push
mov
call
aas
or
push
lds
into
xchg
mov
mov
pop
sbb
rcr
and
imul
mov
shr
jge
ja
jmp
pop
shl
mov
push
in
push
dec
xchg
lds
or
push
mov
rcr
xor
xor
xor
inc
pop
ds
xchg
or
jl
lock
in
in
cdq
pusha
xchg
add
iret
scas
js
scas
xor
and
inc
inc
push
cmp
data16
or
sub
sub
lea
(bad)
adc
aaa
jae
vprotd
js
pop
cmp
test
and
jg
clc
push
popa
ins
jmp
pop
data16
in
mov
jns
push
std
dec
mov
jp
in
xchg
mov
dec
ds
(bad)
jle
add
sub
(bad)
js
neg
gs
xchg
xor
rcr
int
std
jle
popf
mov
push
pop
cdq
mov
popa
imul
inc
cmp
mov
mov
mov
out
jle
or
mov
ret
mov
cmps
pop
(bad)
jmp
jle
jmp
push
xchg
or
retf
mov
mov
jmp
xchg
fcom
cmp
and
jle
mov
mov
in
rcr
cmp
loopne
inc
and
neg
pop
mov
(bad)
mov
mov
xor
loop
loop
icebp
cmp
jb
shr
cld
cli
into
fisttp
sub
int3
std
xchg
adc
ret
or
data16
xor
add
call
fiadd
sub
mov
mov
push
aad
sub
out
sti
push
inc
les
shr
cdq
cmp
dec
pop
std
mov
add
lds
inc
sahf
cmp
or
cld
jnp
ror
loope
lock
mov
and
mov
add
out
test
mov
inc
(bad)
and
cmc
out
retf
fwait
mov
jecxz
loop
in
fadd
out
xor
and
mov
add
(bad)
mov
jle
pop
sbb
ss
clc
arpl
mov
jbe
out
inc
js
je
adc
lods
mov
addr16
aad
mov
sbb
cmp
pop
iret
inc
icebp
mov
mov
fwait
push
dec
fld
pusha
mov
inc
sub
sub
into
push
push
xchg
mov
leave
ins
and
add
test
mov
push
mov
lahf
ror
sbb
push
sub
and
pop
xchg
xor
cmp
pop
mov
mov
cmp
xchg
cld
fsub
cld
loop
icebp
das
int3
nop
into
xor
mov
out
sub
imul
inc
inc
jae
pusha
xchg
push
stc
adc
outs
dec
sub
jmp
inc
cmp
push
xor
sbb
fdivrp
cmps
ret
xchg
stos
push
stos
push
push
mov
pop
fcom
fnstsw
btc
mov
add
jle
xlat
iret
ja
sahf
int3
pop
fsubr
mov
movs
mov
push
lock
dec
push
push
ret
mov
cmps
and
fcomp
inc
pusha
bswap
xchg
pop
rcr
and
and
xchg
cdq
sbb
cdq
jp
dec
outs
jno
mov
mov
rep
mov
fld
push
or
stc
jns
mov
and
cmp
into
cmp
jb
xlat
shl
data16
mov
sar
ins
or
in
scas
(bad)
adc
pushf
adc
fwait
pandn
popf
and
push
xor
ins
fidivr
inc
div
mov
push
mov
jb
arpl
dec
inc
mov
pop
push
dec
sbb
lods
rcr
pop
arpl
das
imul
scas
mov
call
xchg
mov
push
pop
and
mov
fidivr
int
mov
mov
dec
dec
lea
in
iret
daa
add
jl
in
cmc
jo
mov
es
sbb
out
fsub
push
imul
dec
iret
ret
xchg
mov
rol
mov
mov
cmp
out
dec
mov
fdiv
inc
sub
add
add
mov
mov
xlat
xchg
jo
daa
cdq
scas
das
inc
jl
jns
add
mov
pop
inc
and
mov
cld
jge
clc
push
repnz
mov
lea
push
add
push
push
pushf
sti
xchg
jp
pop
cli
jne
sbb
mov
cld
mov
shr
out
fisub
cmps
ins
repz
pusha
sbb
shl
xor
cmp
mov
int3
jmp
popa
jl
mov
xlat
icebp
arpl
and
xchg
push
sub
push
adc
xchg
jl
dec
sahf
ins
and
xchg
inc
push
xlat
dec
mov
sub
or
(bad)
movs
mov
in
dec
out
mov
bound
dec
xor
shr
jo
je
xchg
mov
adc
or
mov
sub
js
dec
push
xchg
jle
aam
ror
repnz
or
lock
and
dec
lahf
push
mov
out
jnp
jne
mov
sub
sahf
or
xchg
loopne
dec
adc
cmp
mov
hlt
pop
dec
frstor
cmp
mov
push
scas
dec
pop
mov
push
inc
push
add
inc
fnstcw
arpl
test
gs
cld
in
xchg
pop
popf
pop
je
add
in
test
xor
sbb
jne
int3
cmps
jecxz
ror
call
popa
rol
cmp
xlat
rcr
in
push
div
jne
cli
ins
lods
sub
xchg
cmc
das
aaa
pop
ins
mov
stos
xor
mov
hlt
fwait
jl
dec
cmp
jmp
lods
je
cmp
(bad)
pop
mov
jnp
xor
jl
call
push
push
std
out
add
(bad)
jge
pop
rol
mov
pop
icebp
and
mov
ficom
xor
sbb
pop
dec
out
pushf
xchg
mov
out
pop
inc
bound
adc
shl
pushf
mov
aaa
das
push
hlt
mov
nop
ficomp
xchg
icebp
ja
sbb
push
pop
and
xchg
ret
sbb
pop
call
aad
jecxz
fsub
lahf
(bad)
adc
mov
pop
xlat
sub
test
jne
mov
cs
jbe
cs
loopne
cmps
jno
shl
push
push
xor
xor
jmp
adc
enter
ror
out
inc
sub
adc
mov
push
shl
mov
ins
and
push
push
mov
cdq
loope
out
(bad)
imul
or
sub
xchg
sub
clc
shr
into
shl
sbb
nop
add
fidiv
sbb
mov
push
pusha
mov
and
adc
cwde
or
and
xor
or
adc
retfw
cmp
push
call
stc
gs
fisttp
lock
in
dec
call
sahf
sbb
push
rcr
sub
jb
inc
jb
jecxz
cs
jo
jecxz
jle
ins
mov
pop
loop
pushf
add
xchg
lods
lock
add
sub
pop
xlat
mov
mov
cli
repz
(bad)
pushf
hlt
push
mov
push
mov
sbb
push
and
in
cmp
cmps
outs
mov
outs
mov
mov
aas
inc
fsub
push
sub
jp
mov
adc
loop
dec
cmp
inc
pop
imul
outs
pop
cmp
mov
in
dec
retf
add
mov
inc
in
adc
cli
add
sub
and
mov
stos
outs
das
js
int
pusha
sub
xchg
retf
inc
jb
ror
mov
mov
mov
adc
mov
imul
push
add
sti
ror
mov
sbb
inc
fcomp
call
mov
or
push
fs
cmc
pop
in
add
mov
adc
mov
clc
and
mov
mov
mov
ror
test
int
ds
and
dec
mov
rcr
call
pop
rcl
fisttp
jmp
aad
or
cmp
cdq
sub
mov
inc
mov
data16
retf
jge
push
(bad)
mov
add
fcomip
sub
jns
push
jge
mov
or
call
push
cmp
pop
ficomp
dec
stc
jno
xor
jnp
push
retf
adc
dec
scas
(bad)
push
sahf
rcl
cmp
lea
mov
arpl
ret
jae
cmp
add
add
jmp
fadd
mov
sub
jne
jns
cs
and
mov
cld
mov
or
sti
call
data16
aas
out
mov
clc
mov
shl
int
loop
cmps
and
sti
jns
lods
lock
cwde
jne
cmps
push
(bad)
fnstenv
loope
fdiv
mov
test
stos
js
mov
lods
popa
clc
pop
or
imul
iret
inc
inc
sbb
xor
ins
aas
ret
aas
pop
xor
push
push
and
ret
xor
cld
jne
pop
sub
rol
jle
call
(bad)
movs
cmp
jp
inc
xchg
add
sub
push
cmc
xchg
ret
push
add
call
xor
shr
in
adc
in
or
mov
mov
nop
sub
retf
mov
jmp
out
in
pop
sbb
loope
or
lock
or
inc
ins
test
adc
add
aas
fcmovnb
ret
test
pop
cmp
adc
pop
stos
mov
or
lds
sub
aaa
mov
retf
sub
mov
popf
xchg
sar
sub
cmp
pop
popa
xchg
dec
ins
cmc
pop
xchg
addr16
int3
add
cmp
sub
jb
fmulp
xchg
push
sub
jb
inc
outs
(bad)
fnstcw
inc
(bad)
addr16
or
adc
mov
mov
mov
(bad)
jge
sbb
add
sbb
cli
addr16
and
pop
mov
xchg
scas
jg
adc
dec
sub
xchg
mov
fmul
mov
mov
addr16
push
adc
add
xor
out
stos
leave
dec
outs
mov
pushf
xchg
xchg
sub
outs
popf
je
imul
jnp
es
in
lds
push
popa
push
inc
lea
mov
mov
xchg
cmp
dec
and
push
out
jmp
out
sbb
mov
xchg
xor
xchg
mov
dec
imul
ret
inc
pop
data16
in
xchg
repz
xchg
jno
mov
(bad)
in
lods
and
bound
jbe
in
sahf
push
cmc
and
cmp
sub
mov
popf
mov
mov
clc
les
loopne
cld
loopne
(bad)
(bad)
sub
jmp
fmul
loop
pop
push
add
or
add
mov
fsubp
cmc
loop
test
jno
jmp
and
xlat
rcl
mov
clc
sbb
clc
adc
stos
ret
cmp
(bad)
cmps
inc
imul
mov
or
scas
inc
jecxz
fcomi
xor
cld
out
je
jbe
aam
in
movs
cmp
sub
ss
pop
and
sbb
xchg
div
adc
push
dec
xor
jne
mov
(bad)
and
test
mov
jmp
pop
fnstenv
add
pop
ss
xchg
movs
jno
inc
sub
pop
cli
rcl
and
mov
(bad)
mov
cmp
dec
jo
cmp
fs
xchg
scas
sbb
inc
sahf
test
push
(bad)
sahf
and
scas
mov
mul
add
or
cmc
test
loope
pop
fisub
std
retf
movs
cli
xor
lea
repz
pop
jmp
shl
add
shl
inc
fiadd
mov
loop
movs
scas
rcr
ror
cmc
push
inc
add
jno
shl
data16
xor
sbb
stos
inc
xor
adc
in
pop
stos
rol
sbb
xlat
repnz
mov
das
lods
leave
xchg
or
test
jnp
jnp
fstp
movups
pop
and
jp
jge
and
in
jno
fsub
sbb
add
sub
(bad)
jne
lock
mov
mov
mov
icebp
mov
mov
adc
test
and
(bad)
push
jge
pop
mov
es
mov
repz
mov
retf
lock
or
or
cmp
cmp
(bad)
mov
mov
shl
movs
ss
retf
cwde
jno
mov
mov
arpl
cdq
jns
mov
mov
lds
mov
bndstx
or
jg
mov
cwde
mov
test
in
add
cs
xchg
pop
xchg
adc
add
data16
hlt
mov
stos
fcmovbe
(bad)
cli
loop
mov
out
mov
test
scas
sti
leave
jnp
(bad)
or
and
xchg
int3
cli
xchg
xchg
mov
idiv
lods
cmp
pop
add
cmp
in
addr16
ja
cdq
out
push
call
xchg
fdivr
popa
or
(bad)
mov
out
ret
and
push
sti
inc
jnp
dec
or
rol
popa
pop
add
maxps
jns
mov
jecxz
mov
pop
ret
out
mov
lea
jl
xchg
mov
xor
cli
mov
and
inc
jno
add
cmp
scas
pop
sbb
loope
pushf
pop
mov
jo
xchg
or
int3
dec
inc
lea
mov
imul
sbb
sti
stc
pop
mov
(bad)
sar
mov
xchg
retf
pop
jmp
add
add
imul
ja
call
mov
inc
arpl
stc
iret
(bad)
fxch
mov
or
arpl
cld
jb
stos
pop
outs
retf
push
(bad)
push
xor
pop
in
fld
jge
sbb
inc
mov
mov
ret
leave
inc
(bad)
into
call
retf
mov
adc
sub
mov
popa
mov
sbb
cdq
inc
into
js
popf
sahf
mov
retf
add
(bad)
outs
sub
or
push
lods
sahf
fcom
push
pop
push
sti
mov
dec
xchg
call
sub
outs
ja
daa
mov
mov
cli
or
add
xor
xor
iret
xchg
xor
xchg
sub
add
icebp
jo
scas
pop
inc
or
fdiv
lods
push
ror
test
loopne
dec
inc
das
inc
push
sub
cmps
jno
push
adc
push
sahf
and
movs
jno
int3
push
scas
sti
cdq
dec
inc
xor
test
jg
push
jb
call
or
xor
rcl
arpl
inc
lahf
jne
adc
addr16
jl
test
repz
jmp
sahf
(bad)
mov
in
dec
adc
adc
popf
arpl
mov
cdq
and
pop
jns
xor
out
push
inc
dec
dec
or
xchg
inc
lock
sub
xlat
push
stos
ins
mov
adc
cdq
popf
jo
jg
retf
jae
and
mov
loopne
jbe
cmps
aas
cmps
hlt
mov
sbb
pop
dec
in
push
or
out
jmp
icebp
sar
jns
and
mov
inc
fs
ins
xchg
sub
repz
fstp
daa
iret
sbb
(bad)
sti
les
loope
dec
xchg
or
arpl
add
and
cmps
cdq
pop
ja
imul
mov
dec
sbb
push
jne
adc
push
adc
mov
jne
popa
add
add
xor
rcl
mov
push
cli
loope
and
mov
push
nop
sub
mov
das
inc
sub
cmps
leave
fsubr
jnp
add
or
es
sbb
sbb
dec
aas
mov
cld
or
rcr
sub
fld
or
stc
mov
and
mov
jmp
ficomp
and
ins
mov
mov
pop
imul
mov
jecxz
out
dec
xchg
dec
push
jmp
enter
dec
pop
lock
in
or
scas
imul
push
cmp
cwde
in
adc
fwait
outs
or
out
test
ret
fwait
sar
repz
cmc
fnstcw
hlt
xchg
push
mov
xchg
pop
jle
out
std
fdiv
or
xor
cmps
dec
cdq
sbb
pop
xlat
cmp
bound
sub
outs
dec
aas
hlt
aaa
ficom
inc
lahf
push
xor
cmp
test
in
pushf
sub
adc
popf
shr
into
test
inc
add
mov
xchg
jg
rcl
(bad)
sub
or
int3
(bad)
jg
mov
pop
fcom
mov
mov
cdq
sbb
adc
mul
data16
fwait
sub
push
mov
push
call
xchg
popa
and
push
inc
mov
pop
jne
xchg
pop
sub
pop
xchg
add
(bad)
(bad)
jecxz
pop
mov
jmp
shl
cli
jo
cmc
xchg
sbb
out
push
cdq
rol
xchg
in
mov
or
inc
jns
push
xor
mov
ins
faddp
jno
sub
inc
sbb
int3
cmp
adc
int
rol
fisubr
(bad)
sub
retf
int
fild
loope
jp
mov
loopne
sbb
push
outs
mov
pop
mov
sbb
add
pop
cmp
add
and
mov
out
dec
mov
jge
fadd
(bad)
mov
and
sbb
add
mov
or
jb
inc
adc
movs
cmp
mov
xchg
xchg
test
mov
jle
test
dec
out
jge
int3
dec
jmp
xor
subps
shl
movs
mov
out
sub
cmp
xor
push
(bad)
fwait
jb
mov
fwait
inc
dec
mov
stos
dec
mov
(bad)
shl
or
xchg
push
pop
mov
cwde
imul
adc
pusha
sbb
popa
sbb
(bad)
sbb
dec
mov
cmps
sub
mov
aad
leave
pop
adc
xor
fld
std
sub
frstor
jbe
or
mov
sbb
pop
sbb
cmps
repnz
cld
jo
mov
dec
jbe
jmp
rcr
repnz
repnz
std
rcr
(bad)
call
stc
or
cmps
fist
mov
mov
gs
sbb
sbb
adc
ins
inc
fs
or
mov
mov
dec
mov
jp
rep
ins
(bad)
jb
fisub
dec
lahf
mov
mov
inc
jae
cmp
mov
and
add
and
sub
js
rcl
mul
adc
loop
(bad)
sbb
sub
lea
xlat
mov
cmp
and
adc
add
aad
push
cmps
out
imul
sub
sete
inc
xchg
xchg
sub
cmps
jnp
lods
gs
sub
ret
xor
(bad)
stc
and
and
fiadd
lahf
fsub
fs
mov
pop
push
and
push
mov
add
sub
mov
fidivr
cdq
push
in
sar
(bad)
repnz
call
fucom
or
test
cdq
aam
sub
test
cmp
ja
mov
clc
test
(bad)
loope
xchg
or
repz
push
sbb
lods
mov
pop
mov
retf
ret
or
fdiv
pop
das
retf
test
fwait
ret
add
dec
in
or
pop
mov
inc
mov
aaa
adc
(bad)
(bad)
in
(bad)
and
stc
push
ret
push
loope
(bad)
mov
mov
lods
xchg
mov
sbb
or
sbb
mov
dec
mov
js
fisub
arpl
mov
pushf
bound
mov
sbb
mov
mov
es
dec
(bad)
cmp
stos
jle
sub
cmps
mov
mov
adc
popf
adc
push
xchg
cmps
int
pop
jbe
pop
push
icebp
jae
cdq
adc
cmp
les
lea
call
cwde
mov
pop
add
shl
mov
jo
rol
nop
nop
xchg
fidiv
jp
arpl
jno
cdq
mov
add
dec
pop
imul
pushf
or
sbb
jecxz
pop
call
inc
jecxz
inc
test
adc
pop
fistp
mov
cmp
icebp
mov
fistp
sbb
xor
dec
sub
mov
mov
popa
mov
adc
cmp
scas
cwde
pop
sbb
jmp
out
out
stc
xchg
gs
or
mov
loop
sub
sahf
outs
imul
xchg
xchg
xchg
pop
pop
pop
fcomip
jl
std
movs
push
or
mov
(bad)
jmp
push
jge
and
mov
cli
hlt
push
imul
xor
test
xchg
dec
ret
mov
(bad)
in
jbe
ret
data16
rcr
sub
pop
xchg
push
xadd
push
ret
inc
push
cmp
xchg
ret
jnp
xor
mov
jbe
hlt
fist
sbb
inc
ret
cs
pop
(bad)
pusha
sahf
test
sar
jmp
js
add
int3
sbb
jb
jnp
inc
dec
div
mov
pop
adc
sbb
add
out
pop
xlat
cmp
mov
jecxz
stc
jno
(bad)
aam
std
mov
pop
push
fs
(bad)
int
cwde
fdivrp
rcr
int
jge
punpckhbw
add
sar
xchg
or
inc
add
rcl
pop
repz
fld
mov
out
ins
push
sbb
imul
cmp
aas
les
into
pop
dec
(bad)
test
pusha
push
call
cpuid
inc
or
inc
mov
pop
(bad)
es
cld
shl
imul
pcmpeqb
scas
test
rol
addr16
add
xchg
int3
adc
popf
xor
std
sbb
mov
xchg
sub
adc
cmp
cs
ja
fcom
dec
pop
mov
push
adc
or
mov
xor
and
aaa
arpl
into
jle
cs
fs
push
(bad)
js
jmp
mov
stos
inc
sub
dec
xor
outs
in
into
int
adc
mov
ror
inc
add
repnz
aam
test
test
sub
pop
cmp
(bad)
adc
or
mov
cmp
fnstenv
and
mov
xchg
or
xchg
pop
push
and
jmp
aad
adc
loop
in
xor
rol
ret
pop
fbstp
test
push
fistp
cmc
jmp
sbb
mov
xchg
pop
mov
jae
xchg
pushw
cmp
fbld
xor
push
push
outs
mov
and
(bad)
movs
cmp
outs
cwde
mov
pop
aad
div
push
popf
aas
fwait
pop
fstp
sar
jl
sbb
mov
xor
xor
int
mov
ret
mov
mov
mov
adc
stos
movs
jp
jae
sti
cmps
out
lock
xor
test
jnp
jl
or
adc
scas
xchg
dec
or
adc
jne
sub
push
not
sahf
xchg
xchg
dec
inc
xchg
sub
pop
sar
push
jne
loop
jl
test
dec
pushf
scas
push
pop
sub
pop
(bad)
test
adc
test
sub
lods
loope
or
sub
sub
dec
push
icebp
jno
cmp
es
pop
imul
cmc
xor
xchg
mov
std
mov
adc
out
bound
sub
mov
push
ror
stc
test
popa
cmp
in
sti
push
loop
ffree
stc
clc
out
test
outs
push
push
jo
call
xor
mov
pop
bound
mov
cmps
mov
mov
popa
ror
jns
and
mov
and
pop
pop
and
pop
pop
inc
jmp
(bad)
int3
rcr
mov
test
leave
fimul
dec
sub
jns
and
in
movs
dec
(bad)
ficom
or
out
xchg
push
mov
xchg
pop
mov
jns
ret
stc
sbb
xor
aad
add
inc
mov
fnstsw
adc
jbe
fisub
sti
pop
add
ds
jge
mov
call
mov
cld
mov
add
je
mov
or
sub
call
mov
int
fwait
ja
xchg
arpl
mov
mov
rcl
iret
shl
add
pusha
sbb
pop
in
sub
xor
call
add
das
inc
call
cdq
movs
mov
cmp
fsubrp
xchg
rcl
or
inc
pop
push
stc
sbb
sub
iret
push
fucomip
cmps
mov
std
fisubr
aam
add
push
sub
sbb
dec
test
dec
xchg
dec
mov
pop
out
aam
int3
div
cs
leave
movs
(bad)
mov
fist
cli
push
loopne
addr16
(bad)
ss
mov
repz
jb
jnp
cmp
sub
nop
dec
fs
cmps
jns
lods
sbb
pop
cmp
xchg
rcr
sub
cmc
repz
in
cdq
dec
inc
jbe
fiadd
icebp
ror
mov
jb
ja
fs
push
pushf
mov
ret
fs
sub
ds
lds
dec
mov
inc
sbb
leave
in
es
ds
arpl
push
psubd
jmp
jns
outs
mov
xor
mov
xchg
cli
mov
lock
adc
inc
cld
inc
enter
mul
fldenv
sar
ja
movs
push
(bad)
movs
inc
push
mov
xchg
xchg
loope
xchg
and
add
loope
hlt
mov
in
data16
add
pop
fisttp
dec
dec
ss
cli
push
bound
push
xchg
mov
xor
pop
cmp
sub
mov
or
popf
sub
int3
jp
rcr
add
(bad)
xchg
push
adc
lea
xor
psrlq
sbb
mov
dec
popa
das
fwait
pop
pop
outs
push
sbb
(bad)
jl
xchg
retf
sub
add
aaa
jae
pusha
jp
cmps
std
popf
ret
inc
add
pop
add
jo
inc
mov
mov
fcomp
inc
adc
ret
inc
sbb
and
mov
lds
imul
cli
retf
fcomp
test
scas
dec
mov
ja
nop
pop
cmps
aaa
add
sahf
scas
inc
in
xlat
jmp
push
xlat
push
pop
test
or
add
(bad)
adc
jno
mov
mov
shl
scas
dec
push
push
add
xlat
jl
loope
jmp
fwait
jae
in
popf
xchg
sub
mov
mov
mov
call
xchg
ss
movs
push
adc
jge
cmc
stos
or
xor
xchg
add
test
(bad)
hlt
data16
adc
sbb
cmp
(bad)
and
retf
ror
pop
add
in
mov
inc
outs
cmp
mov
add
jae
mov
mov
int
mov
sti
or
jmp
clc
inc
stc
cli
jo
sbb
fstp
jmp
and
mov
cmp
repz
jp
cwde
mov
int
sub
or
push
jno
cmp
call
and
fist
dec
push
sub
cmp
mov
lods
repnz
cmp
in
mov
push
inc
std
stos
jmp
mov
popf
cli
xor
xor
lods
dec
xchg
sti
pop
push
add
or
out
shl
(bad)
shr
mov
and
push
fs
arpl
sbb
es
ss
xchg
mov
ins
sub
add
mov
jmp
(bad)
in
jmp
cmps
loopne
dec
cmc
xor
mov
mov
scas
in
ror
into
jle
test
adc
and
fimul
call
hlt
push
push
in
jle
rcl
(bad)
stos
mov
mov
scas
fsubr
xor
ds
enter
sub
mov
jno
pop
addr16
sahf
cli
push
loopne
jae
mov
pusha
rcr
mov
stc
popa
mov
mov
xlat
jp
popf
in
in
xchg
in
div
ror
fld
lods
fldcw
aad
mov
std
and
in
enter
mov
ja
jne
fsubrp
and
addr16
jbe
mov
cmp
das
fidiv
jbe
loop
stos
mov
and
mov
fdivr
jecxz
mov
cwde
fisttp
jl
sti
jecxz
jmp
retf
cmp
loop
adc
mov
dec
add
pop
(bad)
pushf
cmc
cmps
lods
fbld
xchg
xchg
mov
aam
into
ret
mov
push
push
mov
sub
mov
or
cmp
inc
sub
lds
adc
add
rcl
cmp
(bad)
rol
xchg
inc
int3
fcomp
push
popa
push
pop
das
jne
pop
and
pop
push
sub
popf
into
addr16
mov
cmp
jp
test
shl
movs
mov
add
sahf
sbb
xlat
jle
pop
fsubrp
ins
nop
sub
dec
or
dec
jnp
inc
add
fisub
jo
scas
jl
retf
stc
inc
dec
add
sti
in
or
popfw
out
js
pop
jmp
inc
bound
cmc
mov
sbb
data16
xor
pop
data16
inc
pushf
imul
movs
dec
out
jmp
out
mov
(bad)
shl
shr
shl
loope
(bad)
int3
imul
adc
mov
push
aas
cs
out
jmp
cmp
lea
xor
pop
bt
dec
das
repnz
inc
out
and
jnp
mov
add
push
add
fwait
add
pop
repz
xchg
cmps
dec
in
mov
mov
mov
pop
jmp
(bad)
(bad)
sbb
and
xor
sbb
adc
arpl
js
pop
xor
inc
sub
sbb
ret
add
out
sub
cmp
out
adc
fcom
rcr
out
add
dec
adc
inc
fsubr
(bad)
xor
pop
push
mov
xor
and
pop
fisttp
movs
stos
cmp
pop
cld
fsubr
mov
shl
xchg
adc
and
and
frstor
test
push
das
mov
lods
cs
scas
and
push
mov
cmp
ja
sbb
adc
push
push
mov
xor
push
mov
pop
inc
push
add
push
jo
std
fcomp
cmp
outs
test
sub
mov
or
imul
or
sub
push
fdivp
xor
stos
pop
mov
sub
mov
jp
in
repnz
popf
test
gs
lahf
lea
mov
and
std
aad
rcr
jl
cmp
ins
mov
mov
bound
sti
pop
cmp
enter
mul
sbb
ficomp
rcr
sahf
js
mov
push
inc
fwait
es
or
mov
cli
mov
inc
cmps
inc
ss
das
rcl
inc
pop
idiv
xchg
dec
es
pop
fsubr
mov
push
xchg
cmp
loopne
outs
mov
ins
(bad)
mov
mov
dec
sbb
scas
cmp
ds
ja
jge
push
jmp
sub
dec
xchg
rcr
sub
enter
fadd
mov
push
or
add
sahf
iret
adc
(bad)
push
cmps
(bad)
mov
jp
add
or
lods
iret
out
rcl
cmp
mov
movs
add
or
inc
pop
jb
mov
jns
jbe
jp
fwait
sbb
repz
(bad)
rcl
frstpm(287
sbb
cmp
hlt
fld
inc
jne
fcmovnu
or
and
xchg
js
mov
imul
jmp
stos
ret
lds
ret
leave
popa
or
ds
lds
pop
add
hlt
sbb
rol
ds
inc
adc
push
mov
pop
data16
(bad)
xchg
popf
jmp
(bad)
std
fdiv
xchg
jl
dec
push
xchg
stos
jbe
pop
jecxz
xchg
ja
mov
push
out
fstp
push
es
out
pusha
sahf
mov
mov
jp
jo
cmp
mov
or
dec
ss
rol
repz
out
in
mov
xchg
or
cs
adc
nop
xchg
fdivr
push
jp
push
jl
mov
repnz
pop
pop
mov
pop
adc
bound
test
addr16
push
pop
stos
jb
and
ret
arpl
ror
mov
jbe
outs
std
mov
sub
xchg
dec
and
shr
popf
ins
aas
push
xchg
inc
sbb
push
adc
jmp
push
adc
out
dec
xchg
cdq
push
ins
outs
out
sub
out
add
or
pop
pop
addr16
inc
mov
or
add
js
stos
mov
or
jle
xlat
popa
adc
jo
in
out
push
jge
sbb
nop
mov
dec
dec
sub
mov
outs
jne
sub
rcr
dec
mov
sbb
int
in
test
or
out
(bad)
ds
scas
fidiv
mov
stos
xor
pop
sub
or
cwde
xchg
adc
mul
add
mov
arpl
xchg
paddw
pop
xor
push
lahf
inc
sbb
ds
pop
ins
sub
movsx
popf
stos
repz
lahf
stc
push
cmp
adc
test
add
sbb
dec
inc
adc
cdq
dec
cs
imul
xchg
inc
dec
mul
(bad)
pop
push
mov
call
push
stc
fdiv
jnp
stc
mov
jmp
loop
sti
std
lds
lods
(bad)
sbb
out
or
mov
cld
movs
xor
cmp
cmp
cwde
mov
icebp
or
shr
(bad)
jnp
mov
mov
fist
test
xchg
loop
aam
lods
sbb
push
fldcw
cs
lock
out
adc
popa
jb
dec
dec
shl
jge
xchg
mov
cmp
push
mov
xchg
xchg
dec
popf
inc
jb
inc
cmps
pop
(bad)
mov
call
icebp
test
adc
xchg
int
cmc
push
icebp
je
les
fisub
dec
shr
jecxz
cmp
push
sub
ret
mov
push
add
out
pop
mov
scas
repnz
pop
pop
jne
cwde
(bad)
(bad)
adc
fs
mov
and
(bad)
(bad)
fxch
clc
mov
fild
jl
pop
repz
push
fist
adc
pop
mov
jg
dec
adc
push
imul
hlt
nop
xor
cmps
inc
jne
aaa
aaa
and
into
bound
loope
enter
fldcw
int3
cmp
xor
retf
xor
push
xor
jae
sub
adc
scas
pop
cld
jmp
push
je
jae
shl
cmp
bound
add
rcr
inc
jmp
shr
test
jg
gs
sahf
test
sbb
addr16
or
int3
cld
fs
cmp
jo
mov
jbe
xor
add
mov
jmp
dec
xchg
mov
sahf
xlat
xor
ins
jp
push
mov
out
sub
adc
fstp
into
pop
pop
(bad)
js
je
sbb
bound
sub
inc
int
ds
pop
(bad)
fcomp
xor
iret
mov
mov
adc
mov
mov
jle
mov
push
lahf
loopne
shr
or
scas
dec
aas
lahf
out
(bad)
jns
cmps
test
xchg
xor
aas
movs
repz
(bad)
adc
cmp
jno
sti
popf
fs
outs
fild
outs
cmp
xchg
hlt
repnz
int3
les
in
lods
xor
or
sub
push
xor
fst
repnz
dec
and
test
xchg
cmc
push
leave
sub
push
cli
pushf
iret
jne
enter
dec
xchg
(bad)
popa
mov
jnp
loopne
sahf
push
aam
mov
add
fcomp
scas
(bad)
sub
pop
clc
or
in
xchg
push
inc
fcmovne
mov
or
add
mov
mov
push
scas
jb
cs
push
clc
hlt
idiv
movs
pop
jno
(bad)
loope
mov
dec
out
and
jb
xor
gs
ds
mov
mov
add
int
cmp
mov
fidiv
pop
jns
mov
ins
out
out
movs
fisttp
sbb
ins
inc
sub
ficomp
push
icebp
into
inc
cwde
jo
lock
pop
inc
shl
movs
lea
out
lds
aad
iret
push
mov
mov
adc
sub
lods
lock
pop
cld
sbb
xchg
cld
outs
dec
pop
in
or
sub
jg
fadd
push
clc
stc
inc
dec
cmp
aad
imul
popa
std
out
cmp
mov
ret
lods
pop
cdq
cvtps2pd
hlt
pop
xchg
inc
and
jl
aad
fbstp
inc
push
rcl
bound
push
mov
mov
adc
add
mov
jle
push
hlt
loope
test
es
add
cld
(bad)
in
cmps
lds
ret
mov
jns
sbb
or
jb
test
mov
sbb
adc
mov
loope
outs
adc
dec
(bad)
adc
aam
stos
(bad)
push
pop
fwait
add
push
nop
xor
retf
xchg
mov
dec
xor
cld
es
retf
push
sahf
int
ret
cli
mov
add
ja
rol
lea
sahf
mov
rcl
cmps
inc
pusha
js
add
mov
pop
or
outs
or
jmp
pop
jge
lahf
test
cld
add
jne
xchg
ss
push
repnz
pop
retf
clc
cmp
(bad)
sub
dec
std
jns
sub
jno
icebp
push
les
loope
ja
and
shr
lock
push
xor
pop
mov
sbb
xchg
cmp
sar
push
sar
(bad)
test
test
push
adc
ror
sub
sub
mov
jge
jmp
ret
test
pop
or
xchg
hlt
and
add
cli
in
ret
add
fnstsw
xor
push
hlt
movs
nop
cmp
jecxz
fwait
sbb
xchg
arpl
dec
inc
pop
sbb
cmp
sub
pop
in
scas
sub
add
or
cmps
aad
icebp
arpl
(bad)
dec
and
jae
rol
push
jae
inc
repz
inc
jg
xchg
add
xchg
pop
xlat
mov
lock
push
nop
rcl
sqrtps
out
push
ds
xlat
adc
sub
dec
xchg
and
in
popa
loop
jle
cmc
xlat
out
mov
icebp
mov
movs
jae
je
jg
adc
fcmovb
int
mov
fldcw
push
shl
jl
mov
out
je
or
inc
dec
jmp
push
xchg
(bad)
sar
je
cmps
loope
(bad)
div
sub
addr16
pop
jp
loopne
ss
ret
scas
dec
aas
mov
cmps
jg
jmp
js
push
(bad)
jp
shl
jne
xor
retf
popf
jno
loop
mov
lods
retf
and
outs
call
push
(bad)
out
daa
movs
popa
push
int
es
cmps
(bad)
dec
ds
lods
push
fmul
and
xor
pop
and
and
ret
dec
movs
rcr
adc
adc
ss
mov
jbe
inc
pop
popa
icebp
jl
int
sub
pop
cli
inc
pop
stos
(bad)
mov
push
fadd
pop
fcom
test
call
push
inc
fnsave
lods
add
aaa
xor
(bad)
push
add
ja
addr16
and
xchg
inc
and
xor
test
lock
xor
das
arpl
jbe
ror
push
mov
imul
repz
mov
sub
mov
imul
inc
mov
in
mov
mov
add
aas
aas
add
and
cmp
sbb
stos
and
push
pop
repz
adc
loope
fdiv
out
cmp
sbb
xor
cmc
hlt
icebp
(bad)
in
adc
jecxz
in
(bad)
pop
ret
mov
jo
mov
cmps
scas
in
and
adc
cmp
xor
xchg
mov
(bad)
es
outs
aad
test
push
and
mov
aam
sub
xchg
shl
ins
push
es
mov
dec
shl
rol
and
jmp
xchg
pop
aaa
paddb
cmp
or
fwait
repz
call
cmps
sbb
bound
dec
jae
repz
fnstsw
retf
push
add
push
lock
sar
ins
arpl
ja
xor
add
jl
xchg
mov
sti
add
call
fist
jp
or
sub
mov
sbb
adc
bnd
clc
pop
mov
fs
repz
mov
in
or
xor
imul
test
cmc
or
or
addr16
and
and
loop
enter
cmp
jbe
pop
loope
test
push
rcr
mov
ja
fisubr
loop
(bad)
add
xchg
add
mov
daa
ret
cmp
dec
lahf
sbb
scas
nop
hlt
pushf
sub
in
xchg
bound
add
jle
jne
js
jecxz
(bad)
hlt
sahf
outs
push
imul
push
int3
and
mov
or
xchg
mov
push
cs
les
xchg
nop
nop
push
loopne
fs
sub
call
xor
(bad)
or
xchg
cmp
clc
enter
cld
rol
cmps
test
aad
push
cld
mov
and
scas
pushf
or
ret
inc
xor
and
pop
pop
pop
or
xor
out
test
scas
ja
mov
adc
push
pop
add
in
popf
adc
jge
sti
cld
cld
push
push
push
loop
jb
jge
sub
movs
rcr
movs
daa
xchg
lahf
psubusb
std
call
fisubr
rol
adc
push
fcomip
adc
xchg
inc
adc
outs
in
dec
mov
mov
mov
or
int
popf
sub
push
mov
mov
loop
call
sbb
sbb
stc
in
test
xchg
cmovl
loopne
sbb
(bad)
sub
popw
jecxz
jp
dec
and
ret
push
icebp
xor
ret
std
shl
xor
icebp
or
add
pop
es
mov
inc
rcr
jmp
popa
push
in
repz
inc
cmp
mov
clc
cli
jns
loop
ss
or
pop
adc
jno
data16
cmp
lock
or
out
pop
pop
das
add
pop
clc
sub
pushf
in
loope
cmp
in
mov
inc
loop
cs
test
inc
or
(bad)
mov
idiv
cmc
push
sbb
jle
dec
push
and
mov
lods
fcomip
jl
fistp
cs
xor
cmps
gs
cwde
or
jbe
in
cld
jno
(bad)
pop
sbb
mov
inc
or
pop
gs
pop
dec
aam
movs
pop
call
mov
push
hlt
sbb
lahf
aaa
test
sahf
out
push
int3
imul
add
pop
test
mov
shl
mov
sub
push
dec
jl
mov
pop
sub
daa
lock
aad
ret
mov
xchg
imul
xchg
mov
xchg
mov
in
(bad)
cli
adc
pop
cmp
divps
mov
push
ss
cmp
call
push
pop
push
add
xchg
xor
mov
out
sbb
je
je
sahf
ss
pop
outs
push
mov
aad
das
mov
xor
mov
mov
inc
hlt
stc
mov
adc
pop
adc
enter
imul
out
xlat
les
sar
mov
ja
adc
fadd
loope
push
dec
mov
dec
push
inc
ss
and
and
cmp
nop
sub
jnp
out
mov
mov
out
std
mov
iret
jg
out
jge
iret
repz
(bad)
push
sar
jne
loop
(bad)
mov
sub
scas
in
push
lods
sbb
cmp
add
jle
repz
(bad)
adc
pop
cmp
mov
ja
out
xor
retf
mov
mov
cmp
daa
mov
mul
mov
xchg
cld
(bad)
movs
ror
pop
nop
xchg
xlat
mov
sbb
rcl
and
push
call
pop
call
out
fsub
call
inc
xchg
jmp
repz
pop
pusha
call
imul
aad
xchg
aas
xchg
inc
mov
in
jg
jmp
mov
ds
mov
out
jle
(bad)
fsincos
jmp
(bad)
mov
mov
mov
(bad)
dec
hlt
xchg
call
xor
stos
(bad)
mov
cmp
mov
gs
aaa
es
retf
mov
dec
je
gs
jo
stos
mov
mov
pop
test
(bad)
lods
fldcw
cwde
cmc
lea
sub
movs
stos
jg
mov
outs
cwde
mov
test
cdq
ins
or
out
(bad)
sbb
iret
jb
(bad)
sub
out
outs
lahf
es
shr
aaa
lahf
jb
cmp
in
lods
stos
repz
jle
bound
shr
cdq
mov
enter
sub
repz
mov
in
lahf
stos
jmp
dec
xor
dec
cmp
ja
dec
retf
jl
mov
jbe
retf
fwait
or
or
test
mov
jb
add
mov
nop
sbb
(bad)
mov
xor
idiv
sbb
xor
loop
(bad)
addr16
pop
adc
push
jno
addr16
jne
not
movs
fsubrp
jmp
adc
jmp
test
or
ficom
sub
popa
and
ror
movs
cmp
out
ins
inc
xor
mov
stc
dec
cmp
imul
fist
cmc
mov
dec
(bad)
idiv
sbb
cmp
(bad)
adc
inc
xchg
push
(bad)
xchg
in
stos
ret
push
mov
jecxz
pop
and
dec
int
ins
hlt
fcomp
das
outs
push
retf
int3
retf
cdq
dec
cs
or
scas
lds
std
fdivrp
pusha
sub
ins
add
std
cmp
lahf
mul
cld
cs
fiadd
(bad)
jmp
arpl
aam
mov
mov
cmp
pop
mov
test
aaa
in
sbb
repz
sub
or
stos
(bad)
(bad)
push
jo
sub
arpl
or
js
push
mov
sub
fwait
call
and
mov
xchg
daa
aaa
stos
je
fbld
leave
stos
out
retf
push
imul
je
push
mov
hlt
jle
xchg
and
rol
push
mov
and
add
mov
aad
sub
adc
retf
mov
push
dec
pushf
xchg
cli
push
mov
jmp
cdq
loopne
into
push
or
push
mov
cmp
pop
in
push
repnz
sbb
mov
adc
std
repz
push
cs
dec
in
(bad)
xor
cs
xor
(bad)
jnp
xor
(bad)
fsubrp
xchg
xor
xchg
jno
mov
pop
into
daa
xchg
sti
dec
shl
(bad)
out
xor
sub
out
jmp
sti
(bad)
mov
out
dec
dec
fisubr
push
push
mov
test
sbb
test
cmp
rcl
mov
xor
push
push
and
fidivr
retf
arpl
and
dec
test
inc
out
cmp
jne
mov
or
inc
sahf
push
push
outs
ror
sub
imul
sahf
mov
js
popa
xchg
jge
in
loope
scas
or
dec
call
add
sub
aaa
sub
nop
mov
pop
mov
inc
test
fdiv
out
jmp
mov
pop
dec
xchg
jmp
je
sbb
shr
jns
nop
cmp
mov
popa
xor
aad
loop
ficomp
jp
and
(bad)
clc
sbb
inc
inc
dec
xlat
int3
dec
dec
dec
dec
xlat
mov
fsub
mov
sbb
loopne
repnz
ins
add
ss
xchg
jl
xchg
fisubr
sub
xlat
cdq
ins
pop
and
(bad)
popf
movs
not
fucom
mov
jnp
scas
mov
lock
mov
sbb
mov
xchg
jne
mov
out
test
fcomp
jge
mov
fisttp
popa
(bad)
out
aaa
aas
mov
and
test
adc
push
mov
lds
dec
mov
mov
inc
xchg
push
test
dec
mov
pop
or
ins
call
jg
popf
mov
scas
psrld
xor
arpl
not
cmp
clc
pop
adc
inc
mov
mov
imul
sub
mov
mov
xor
div
(bad)
cli
aad
dec
scas
cdq
scas
scas
pop
pop
retf
dec
xlat
sub
fwait
pop
ins
inc
fild
xor
inc
mul
mov
nop
jns
retf
and
mov
adc
sub
xchg
jge
mov
mov
jecxz
mov
jp
es
inc
pop
aaa
mov
and
sbb
stos
es
ins
(bad)
cmp
icebp
and
xchg
cmp
(bad)
mov
and
adc
pop
jl
and
push
stos
jae
cld
push
nop
jmp
aam
ja
ret
retf
jg
cmc
cwde
push
jmp
call
cdq
addr16
in
dec
iret
cli
bound
add
dec
mov
inc
or
sub
mov
pop
mov
jb
mov
mov
arpl
fisubr
scas
pop
imul
punpckldq
xchg
es
scas
test
mov
dec
retf
movs
shl
jle
cmps
inc
ins
and
stos
push
sub
mov
sahf
push
loopne
stc
js
push
jns
adc
cmps
dec
dec
or
cmp
or
fistp
retf
mov
or
xor
or
mov
inc
jbe
ins
or
mulps
loop
and
or
cmp
je
xchg
lds
je
pop
or
cld
pop
es
jns
mov
or
popa
adc
outs
jmp
sub
mov
data16
jbe
ss
and
das
mov
jmp
mov
or
(bad)
sub
push
lock
mov
cmp
jmp
inc
jmp
dec
cmps
and
in
xchg
adc
scas
jl
adc
pop
sub
mov
or
out
fs
cwde
pop
inc
pop
xchg
pop
mov
and
fnstcw
iret
jg
sti
stc
cld
out
neg
mov
jmp
push
loopne
xchg
arpl
mov
push
repz
mov
dec
push
shl
iret
sub
or
(bad)
or
ins
psllw
mov
pop
outs
fimul
pop
sar
mov
out
aas
out
xor
sbb
sub
xor
je
xchg
jae
clc
ret
mul
jmp
sar
xchg
sub
ret
ins
movs
jmp
add
pop
push
mov
ret
in
test
lahf
push
ret
and
pop
enter
out
xchg
movs
push
fst
hlt
pop
mov
mov
lods
xchg
and
jo
xchg
jle
push
add
(bad)
push
sahf
mov
fiadd
jecxz
cli
(bad)
xchg
and
out
sti
(bad)
cdq
jb
jns
mov
js
pushf
pusha
xchg
mov
adc
inc
sbb
xor
add
dec
pop
sbb
sysexit
and
jmp
call
pushf
nop
and
xchg
out
repz
dec
repz
outs
jnp
repz
push
mov
mov
rol
push
mov
mov
xor
mov
ror
enter
dec
cdq
jmp
jne
dec
pop
pop
sub
sahf
popa
mov
repz
rcl
pop
popf
xchg
out
fidivr
jnp
aad
adc
cmps
loope
and
push
call
stos
int
int
lea
(bad)
call
cmc
(bad)
mov
jo
(bad)
(bad)
fcomp
test
dec
mov
inc
test
jl
test
adc
dec
jnp
push
mov
jge
inc
ret
iret
sub
out
push
cmp
jmp
scas
call
adc
aad
pop
imul
lods
dec
sub
pop
jmp
push
jg
mov
(bad)
sti
mov
js
mov
(bad)
sti
xchg
(bad)
in
jo
les
fmul
ficomp
mov
movs
clc
push
xor
test
xchg
xlat
dec
addr16
ficomp
aaa
jle
mov
pusha
adc
push
pop
xchg
xchg
retf
mov
mov
mov
mov
mov
sub
xor
outs
xchg
fdivr
pop
ins
ret
lock
and
imul
(bad)
in
sub
ret
push
les
jp
test
dec
je
and
cmc
fild
adc
(bad)
jmp
sti
call
lods
arpl
add
pop
pushf
sbb
mov
xchg
ficom
jge
test
add
ins
push
cmps
stos
xchg
repnz
jno
in
sub
xlat
add
fwait
call
pop
push
aaa
test
in
push
inc
or
outs
movs
leave
mov
retf
or
push
sti
xchg
test
es
aaa
loop
into
test
shl
out
loope
pop
cmp
in
test
outs
add
inc
xchg
cmp
mov
jnp
test
retf
shr
(bad)
adc
or
push
jle
stos
(bad)
push
cmp
push
rcr
xor
jns
inc
popa
mov
scas
cmp
pop
fst
push
outs
mov
xchg
xlat
fsub
shl
fxch
shl
aad
lahf
sub
(bad)
sub
sub
dec
sahf
mov
outs
push
cmc
hlt
fcmovnu
shr
lahf
in
inc
mov
fcomp
and
add
loop
lds
clc
sti
xchg
jg
ss
xor
sar
stc
pusha
lock
ret
stc
cmp
fisubr
push
pop
cld
push
xchg
mov
arpl
xlat
into
fprem
xchg
mov
add
jb
jge
ret
shr
jmp
pop
(bad)
push
inc
mov
les
pop
lahf
and
mov
cmp
jno
and
xlat
push
cmp
imul
aaa
cmp
pop
dec
mov
(bad)
fiadd
arpl
sbb
not
jmp
inc
nop
mov
pop
(bad)
imul
imul
xor
cwde
xor
and
pop
cmp
mov
(bad)
lods
xor
in
sbb
mov
and
shl
pop
test
xor
cmp
aam
pop
fcomp
retf
xchg
popf
cdq
mov
test
or
dec
inc
gs
pop
popf
push
and
jmp
sbb
xor
inc
imul
call
xor
pusha
mov
scas
fcomp
pop
xchg
stc
or
dec
xchg
rcr
sub
pop
inc
call
leave
aaa
dec
cld
pop
mov
xchg
dec
test
pop
jb
jo
ins
pusha
mov
sub
cmps
hlt
inc
jns
dec
ret
push
dec
push
mov
mov
inc
loope
aam
mov
mov
mov
fcomip
sbb
jo
jge
out
int
sub
dec
pop
stos
sub
or
mov
iret
test
mov
out
fsub
aaa
(bad)
daa
mov
push
sub
dec
or
(bad)
xor
xor
pop
cmp
pop
sub
pusha
or
cmps
das
sti
in
mov
xchg
aad
jmp
outs
dec
call
iret
jmp
push
cwde
mul
cmp
jg
pop
fst
mov
loope
push
mov
test
fistp
pop
jns
push
push
retf
das
jp
stos
leave
mov
stc
mov
dec
fist
lock
and
add
sub
fucom
push
cmp
inc
or
hlt
mov
jmp
(bad)
jnp
outs
push
inc
xor
popf
mov
sti
imul
add
addr16
push
sbb
push
push
push
cmp
inc
sbb
cs
sub
stos
imul
sbb
xchg
es
pop
call
icebp
mov
sbb
leave
dec
aaa
(bad)
cmp
xchg
and
fbstp
sub
adc
push
(bad)
push
cmp
sbb
std
mov
sub
xor
(bad)
xchg
out
aas
mov
pop
lods
sub
and
xchg
ja
inc
push
mov
dec
out
loopne
imul
int
add
sbb
ins
adc
dec
into
inc
es
(bad)
sub
adc
movs
aas
adc
mov
ret
rcr
xchg
push
and
mov
or
add
(bad)
lahf
out
ins
fmul
sbb
enter
in
imul
jb
inc
mov
fbstp
fisubr
clc
adc
loopne
add
out
test
inc
imul
outs
mov
mov
das
(bad)
mov
sub
push
div
push
in
mov
mov
fisub
repnz
aaa
arpl
inc
pop
pop
shr
(bad)
cmp
and
dec
loopne
sti
leave
mov
and
mov
jne
pushf
mov
fisttp
movs
call
in
outs
shr
movs
mov
mov
dec
mov
sti
and
(bad)
xchg
cmp
sub
pop
inc
(bad)
jle
xchg
stos
je
lds
cmps
pop
push
cmp
sbb
cld
call
popf
cmp
push
pop
aas
add
fldl2e
jbe
or
popf
and
push
sub
adc
aam
push
(bad)
pop
les
jl
sub
pop
xchg
xchg
and
cmps
and
jo
das
(bad)
stc
inc
dec
loop
mov
sub
xor
dec
mov
cmp
popa
inc
sbb
lods
and
outs
imul
mov
push
pop
(bad)
push
and
mov
(bad)
scas
pop
fdivr
adc
and
sbb
adc
xor
scas
aam
jbe
std
jo
iret
adc
(bad)
les
imul
fidivr
add
dec
pusha
pop
js
push
mov
stos
icebp
mov
aam
pop
xor
outs
es
mov
rol
mov
fisttp
std
cmps
xchg
rol
xchg
nop
loopne
pop
mov
push
retf
cmps
call
fcomp
in
fld
ss
mov
ins
adc
stos
cmp
dec
xor
int
loope
push
add
mov
sub
test
aaa
inc
or
mov
out
cli
dec
mov
popf
add
jecxz
repz
mov
call
pop
lahf
rcl
test
jge
sub
mov
pop
and
adc
test
loope
jns
aam
inc
mov
out
(bad)
mov
lods
adc
hlt
lock
iret
aam
push
dec
fild
outs
adc
ins
je
ret
loopne
repz
adc
sbb
frstor
and
pop
int
or
fs
and
jo
sub
in
pop
int
cmp
int
loop
(bad)
in
(bad)
push
push
stos
fdiv
mov
adc
xlat
xchg
push
daa
inc
out
out
cmp
jno
jle
fbld
fiadd
xchg
pop
das
mov
dec
pop
pop
js
jno
stos
jnp
je
jmp
sub
inc
push
aaa
cmps
test
jmp
push
aad
add
jmp
xchg
cmp
ds
aas
int
jecxz
jb
imul
mov
lods
jl
mov
or
inc
test
out
repz
cld
push
cmp
cdq
out
mov
ins
jno
jnp
movs
jb
mov
clc
arpl
adc
mov
imul
pushf
jns
sub
sti
test
popa
dec
mov
fadd
in
ja
daa
pop
test
mov
sbb
lea
retf
jmp
ins
jbe
popa
cmc
sbb
sbb
aam
inc
push
(bad)
scas
or
mov
xchg
mov
add
pop
pop
push
xchg
adc
popf
iret
inc
(bad)
xchg
int3
fwait
retf
add
push
dec
test
arpl
jge
repz
sahf
jg
mov
xor
stos
sub
neg
outs
push
push
push
clc
pop
mov
cmps
and
mov
cmp
sub
mov
adc
mov
jecxz
std
imul
fidivr
nop
or
popf
bound
pop
pusha
cld
lods
xor
mov
push
test
xchg
push
mov
jo
retf
sbb
lea
int3
mov
mov
cdq
push
daa
pop
cmc
sub
push
je
and
mov
cmp
leave
cmps
lds
jecxz
jl
pop
nop
sbb
cmp
xchg
dec
sbb
test
sbb
push
mov
imul
idiv
jmp
movs
pop
or
fidiv
or
jmp
paddw
mov
dec
fst
mov
inc
add
stos
add
add
mov
bts
aam
mov
icebp
fsub
and
mov
in
outs
mov
sar
mov
dec
in
nop
shr
lahf
outs
mov
push
(bad)
adc
or
cmp
lea
inc
cmps
xor
icebp
lods
int3
(bad)
jg
leave
(bad)
pop
fstp
fstp
push
jae
ss
aad
lock
(bad)
jmp
pop
mov
sbb
mov
(bad)
pop
inc
aad
ror
out
mov
sub
imul
comiss
imul
adc
xchg
fld
sbb
out
in
jl
in
fldenv
pop
int
loopne
pop
das
mov
mov
inc
cmc
call
(bad)
push
fwait
or
jnp
push
and
mov
sahf
mov
imul
push
push
loopne
fwait
xchg
jae
mov
xor
sbb
jnp
dec
(bad)
bound
in
jae
(bad)
repnz
pop
add
mov
push
pop
xor
mov
mov
cld
cld
inc
jl
sti
push
outs
sbb
fnstenv
test
or
inc
mov
cdq
pop
fnstcw
mov
cmovs
cdq
inc
pusha
movs
mov
clc
pop
inc
mov
int
dec
int
ss
jns
sbb
outs
popf
daa
aaa
jp
cmp
push
jo
and
das
out
mov
pop
xchg
inc
xchg
push
cs
adc
adc
cmps
dec
ss
jo
pop
dec
xchg
fcmovnbe
or
inc
jbe
sbb
mov
sahf
ret
pop
xchg
int
sti
(bad)
loopne
mov
loopne
pushf
cmp
aaa
pop
ret
xchg
(bad)
aad
mov
retf
push
inc
jmp
mov
addr16
push
mul
popf
xor
push
repnz
push
stos
in
cs
outs
push
mov
lods
popf
test
mov
stc
lods
(bad)
fist
jg
xchg
adc
xlat
push
dec
xor
xchg
push
sti
neg
aad
jbe
jno
pop
mov
pop
mov
lock
xchg
(bad)
arpl
cdq
add
cmp
ficomp
retf
sub
jmp
retf
inc
shl
outs
and
xlat
lods
jge
and
cmc
mov
mov
das
sub
or
add
jg
xchg
mov
dec
push
enter
or
mul
fmul
dec
aad
outs
std
shl
fist
es
add
pop
mov
adc
or
aaa
push
retf
idiv
or
psubusw
xchg
fadd
dec
(bad)
mov
data16
test
fidiv
dec
xchg
cmp
sub
adc
ins
lds
imul
imul
jge
xchg
xchg
lahf
ins
in
es
in
fisttp
push
adc
lock
int
(bad)
nop
inc
mov
in
inc
pop
push
inc
iret
aaa
jne
sub
or
gs
test
jns
mov
pop
je
in
and
xchg
inc
idiv
jne
in
jae
ins
loop
jmp
repnz
gs
(bad)
sub
cmps
loopne
ja
adc
mov
pop
cmps
dec
test
dec
mov
inc
cwde
std
cmp
push
in
popa
gs
fadd
out
call
fsubr
jecxz
and
push
lods
cmp
std
ret
pop
jmp
mov
ret
addr16
cmp
add
(bad)
fucomip
pop
pop
sbb
push
adc
loop
xlat
cmp
jne
push
sub
xlat
xor
aad
icebp
mov
addr16
push
dec
push
test
in
sbb
call
mov
outs
and
lods
(bad)
dec
fs
out
inc
outs
push
out
xor
(bad)
in
aas
cli
ins
mov
fldcw
dec
mov
call
pushf
call
fs
xchg
sbb
out
jecxz
stc
data16
xchg
lea
das
xchg
mov
jb
pop
jae
jne
add
xchg
scas
outs
jno
cmps
data16
mov
jle
int3
scas
lock
mov
xor
sub
mov
push
pop
stc
mov
(bad)
mov
je
dec
cli
cmp
call
adc
popa
in
out
pop
inc
jp
shr
out
push
(bad)
out
daa
ror
xchg
mov
pushf
ja
cmp
outs
xor
ret
push
pop
xor
mov
sahf
ins
(bad)
mov
inc
int3
xchg
call
push
popa
popa
push
nop
hlt
xor
sub
adc
hlt
mov
inc
pop
das
xchg
add
fimul
cmp
js
stos
addr16
pushf
loope
leave
cmps
mov
add
sub
repnz
test
mov
push
rcr
add
addr16
mov
ss
sbb
clc
mov
dec
xchg
daa
cmp
push
xor
std
das
mov
push
and
shl
sub
xor
les
mov
imul
icebp
mov
add
dec
mov
stc
mov
mov
add
xor
push
sti
push
pop
pop
sub
cli
cmps
sbb
dec
fldcw
dec
loop
das
adc
repz
jb
cld
sbb
xor
mov
xor
adc
dec
jae
dec
pop
inc
ins
out
js
dec
int
retf
sbb
jmp
addr16
aaa
call
ds
fidivr
adc
rcr
sahf
add
sbb
into
cmp
sti
std
and
daa
pop
scas
repnz
add
sub
sbb
out
dec
jle
push
mov
sub
xchg
or
adc
stc
xlat
loop
pop
sbb
xor
nop
xchg
sbb
sub
hlt
std
or
dec
addr16
adc
cmp
and
push
call
jnp
push
or
addr16
(bad)
cmp
retf
ja
cmp
std
sub
dec
mov
jo
push
lods
outs
cmp
movs
lahf
xchg
into
hlt
push
fadd
or
sahf
adc
arpl
adc
cmp
adc
adc
movs
mov
clc
mov
inc
inc
jmp
dec
mov
cmc
(bad)
(bad)
cld
xchg
clc
std
(bad)
xchg
repz
fcmovne
push
leave
xlat
xchg
(bad)
jp
or
sub
pop
jg
(bad)
mov
xchg
call
mov
mov
inc
ds
and
out
dec
nop
addr16
and
add
xchg
ss
pop
sub
loopne
movs
popa
cld
mov
adc
sub
and
out
and
adc
push
xchg
sub
xor
sbb
lahf
in
mov
adc
fs
push
sub
popf
out
lea
mov
mov
int3
fldcw
pop
mov
dec
sbb
push
push
retf
fnsave
fstp
repnz
sub
fnstcw
popf
rcr
push
fld
stos
stos
outs
das
jmp
mov
hlt
pop
rcr
in
mov
mov
mov
push
mov
jmp
in
sbb
xchg
mov
mov
cwde
daa
cli
div
scas
fild
dec
in
pop
cmp
not
pop
fcmove
pop
add
popf
sbb
into
stos
push
push
sbb
push
dec
inc
(bad)
sbb
ficomp
out
xchg
das
inc
cmc
mov
sub
xchg
xchg
mov
jmp
push
jmp
mov
dec
mov
mov
clc
pop
push
jns
mov
and
lods
gs
hlt
or
aas
inc
int
hlt
(bad)
and
mov
test
test
xor
hlt
outs
push
les
lea
iret
add
sub
adc
out
retf
cs
fidivr
mov
add
dec
mov
shr
xchg
lock
fcomi
fist
xor
mov
repz
sti
xor
inc
idiv
add
les
adc
mov
cmp
adc
mov
mov
pop
lods
cwde
mov
nop
adc
nop
mov
inc
je
bound
xchg
aam
das
dec
sbb
add
pop
push
mov
add
xor
xchg
push
push
in
pop
pop
push
icebp
mov
dec
jno
mov
arpl
mov
and
neg
(bad)
fldcw
cmp
dec
ret
push
jns
jl
and
js
ja
push
xchg
stos
bound
add
lahf
xchg
ja
pop
cld
imul
pop
adc
add
jp
and
add
push
pop
adc
pop
adc
jne
fbld
fcmovu
(bad)
lea
fisttp
scas
imul
shl
popa
popa
jl
sbb
dec
adc
lahf
aad
xchg
sbb
mov
iret
push
sub
jl
jge
sbb
and
in
inc
dec
sub
inc
js
sbb
jb
jae
not
sbb
jge
xchg
out
pop
int
arpl
ret
aad
ret
inc
push
xchg
cs
sub
lds
push
std
dec
stos
mov
stos
movs
mov
push
push
arpl
adc
cld
retf
push
rol
jb
cmp
fdiv
sub
fsub
call
mov
jno
retf
out
(bad)
dec
or
sbb
jge
push
ret
pop
mov
popf
test
test
sbb
call
in
cld
push
add
xchg
out
fbld
sar
aam
xor
or
mov
inc
fsub
cmp
add
(bad)
iret
(bad)
xchg
mov
lock
or
fdivr
retf
retf
xor
aaa
in
test
mov
loope
add
sub
(bad)
clc
xor
cs
jno
adc
ds
test
js
sbb
sahf
loopne
ficomp
std
mov
push
cwde
test
test
mov
jae
jbe
test
ins
dec
sbb
inc
call
mov
popa
and
scas
adc
mov
daa
dec
jmp
sahf
inc
data16
push
xchg
push
stos
push
adc
movs
clc
daa
cdq
sub
adc
mov
test
cmp
push
js
movs
mov
out
xchg
dec
cld
lods
int
mov
sahf
xor
imul
leave
cmps
dec
pop
xor
cdq
test
fs
movs
fwait
lock
sbb
sbb
ds
cdq
mov
(bad)
in
jge
pop
out
cmp
jns
xchg
and
fucomip
jae
dec
ds
xchg
cmc
mov
stc
or
test
jb
push
ins
adc
bound
adc
adc
arpl
xor
jmp
outs
in
sbb
enter
push
cmp
push
cmp
mov
addr16
fsubr
jns
lods
mov
stc
adc
out
pushf
push
jne
mov
pop
cli
mov
test
mov
loopne
pop
outs
inc
xor
lahf
cmp
mov
push
xlat
and
xor
cmps
jnp
push
pop
fstp
sbb
add
mov
sub
ja
inc
mov
and
mov
sbb
or
popa
pusha
out
ret
adc
aam
ss
cmc
adc
lea
jle
dec
jns
lahf
popw
cmc
dec
cmp
dec
xchg
dec
(bad)
inc
or
jns
mov
jne
jecxz
xor
jge
inc
sbb
out
out
mov
and
test
into
mov
inc
dec
lahf
call
loope
mov
jmp
cmp
push
psadbw
pop
inc
pop
daa
fisttp
jmp
movd
xchg
sbb
push
adc
sbb
mov
mov
and
sbb
jae
mov
out
pop
dec
jnp
or
xor
std
cmp
xchg
cwde
pushf
sub
stc
clc
int3
sub
and
xchg
scas
in
(bad)
and
and
ret
fsub
push
sti
idiv
test
push
and
adc
hlt
arpl
pop
mov
jmp
lahf
pop
jmp
test
scas
xor
popa
mov
sar
mov
(bad)
mov
mov
cli
in
(bad)
jbe
mov
add
(bad)
out
xor
push
sub
sbb
jmp
cmps
mov
sub
mov
sbb
lods
cmp
cmps
mov
retf
xor
sti
stc
mov
mov
cmp
sub
ins
iret
cmps
xor
cmp
int
xchg
mov
daa
das
push
xchg
rcl
test
push
repnz
push
push
loop
int
mov
jecxz
dec
cli
dec
lods
xchg
loop
loop
addr16
add
inc
clc
xchg
ret
mov
inc
jle
call
adc
in
pop
jb
inc
mov
aad
mov
ret
ror
sbb
sbb
mov
dec
or
pushf
cmp
sub
mov
retf
call
xchg
mov
scas
das
fdivr
mov
mov
xchg
cld
loop
or
(bad)
xor
cmp
sbb
sub
mov
jmp
cmp
push
jg
cld
jnp
shl
or
xor
pushf
jb
jmp
in
mov
push
call
and
sub
or
pop
js
sahf
stc
out
scas
scas
push
idiv
mov
in
jg
cmp
or
jnp
sahf
icebp
sbb
push
loop
mov
sub
jnp
mov
and
lds
and
mov
and
stos
jp
mul
fdivr
push
lods
pop
stc
out
mov
es
test
xor
out
mov
xchg
enter
mov
mov
aam
ins
mov
sar
fistp
push
and
aam
loope
add
cdq
idiv
mov
ins
ror
popf
iret
dec
ret
out
imul
xchg
adc
jno
leave
(bad)
push
jb
stc
inc
inc
jb
inc
test
and
sbb
add
pop
sub
movs
jns
arpl
jae
mov
and
jle
shl
push
or
les
js
xchg
(bad)
mov
sbb
fldenv
add
aam
jo
inc
neg
push
in
daa
cld
cmps
cmp
das
repz
add
daa
sub
sub
sbb
ss
aaa
rcr
jmp
rcr
retf
aaa
ret
lods
xor
mov
hlt
push
push
imul
adc
push
jns
(bad)
loopne
inc
or
push
mov
ins
dec
dec
out
and
std
jbe
test
jp
pop
enter
stc
hlt
shl
jle
shr
ins
hlt
loopne
imul
clc
push
xor
sbb
test
mov
sbb
jge
dec
lock
sbb
rcl
lds
lods
xchg
jnp
jge
dec
mov
ins
pop
jbe
pop
(bad)
imul
push
or
sbb
ins
(bad)
adc
call
mov
xor
jne
fistp
xchg
and
popf
sub
loop
sbb
lods
out
mov
bound
push
jne
sub
xor
sub
jg
lock
jp
mov
lods
mov
dec
xor
xchg
xchg
xor
and
int3
popa
cdq
sub
inc
jno
sbb
(bad)
aad
xchg
pop
mov
and
retf
sti
lds
gs
enter
mov
add
std
stc
in
adc
and
inc
sbb
jg
movs
cwde
repz
into
jb
das
mov
shl
popa
add
aam
sub
imul
test
fs
cmp
xchg
push
inc
in
push
loop
(bad)
dec
cmp
jnp
test
or
iret
jb
je
pushfw
mov
call
xchg
frstor
push
sbb
jge
jb
sahf
adc
dec
adc
ja
ja
fdivr
xchg
jae
inc
retf
xlat
jp
shl
sar
ret
in
push
jno
sub
pop
addr16
xor
fisub
xchg
cmps
xlat
fs
stc
and
out
sahf
dec
ds
push
(bad)
sti
(bad)
lock
add
fist
int3
aaa
jmp
fcom
lds
(bad)
call
cmc
xor
xor
jo
and
cmp
jae
inc
clc
cdq
stos
lock
scas
xor
(bad)
sub
les
mov
jp
jns
push
cmp
push
jb
sbb
xchg
fdiv
jno
sub
data16
(bad)
mov
int3
inc
dec
cmps
pop
retf
jle
mov
mov
push
inc
loopne
and
xor
pop
fstp
pop
jle
rcl
sbb
dec
lahf
xchg
inc
sub
push
ins
es
adc
fsubr
out
scas
sar
arpl
push
adc
inc
mov
cli
mov
cmp
test
vcvtpd2dq
or
call
fmul
or
iret
mov
es
je
pop
stc
test
inc
xchg
push
sbb
inc
adc
mov
mov
in
ss
neg
mov
xchg
into
cmc
dec
dec
je
cmp
add
retf
fmul
mov
xchg
jns
shl
sub
dec
test
repz
scas
cmp
into
or
dec
mov
mov
cwde
lods
jecxz
pop
inc
mov
hlt
(bad)
xor
arpl
js
in
out
xchg
ja
sbb
push
add
ds
shr
pop
push
mov
inc
pop
retf
arpl
add
lahf
or
test
pop
iret
and
int
cmp
or
(bad)
in
or
out
outs
into
sbb
cmp
call
mov
push
sub
push
or
pop
sub
psubd
pop
gs
imul
sbb
add
sbb
sbb
pop
gs
fsubr
mov
mov
(bad)
gs
idiv
lahf
fmul
in
call
mov
daa
lods
pop
icebp
sub
popa
push
jg
mov
jle
pop
es
test
adc
shl
mov
div
or
popa
pop
mov
add
stos
jns
fidivr
xchg
pop
add
cmp
cld
mov
pop
lods
lods
adc
xor
scas
retf
sbb
or
push
mov
in
add
fsubr
cmc
out
fistp
mov
out
sti
(bad)
scas
mov
mov
fstp
fidivr
shr
lods
mov
adc
inc
adc
and
xor
sub
jbe
jo
aaa
jecxz
je
jge
jmp
cs
stos
xor
mov
mov
or
sub
jnp
rcr
cmp
imul
mov
out
fisttp
loopne
js
pop
or
arpl
sub
cwde
scas
xor
xchg
mov
mov
outs
mov
xchg
jl
add
jo
addr16
jle
ret
pop
pop
inc
ds
es
or
xchg
jmp
icebp
dec
ret
mov
out
cmp
das
push
repnz
sub
or
pop
enter
in
cmps
cwde
(bad)
lods
mov
pop
cmps
fmul
pop
mov
call
cs
and
shl
ds
lahf
cmps
(bad)
aas
fldcw
push
xchg
xchg
test
mov
push
popa
rol
sub
aad
or
rcl
sub
inc
mov
sub
(bad)
push
and
mov
push
outs
std
or
xor
mov
mov
fsubrp
xchg
jmp
xor
push
mov
mov
das
xchg
jne
cld
inc
movs
mov
cmc
cmp
and
mov
inc
and
pop
jns
out
cmp
xchg
cmp
sbb
hlt
and
jl
add
jb
std
add
icebp
push
clc
xlat
imul
scas
pop
in
pop
out
or
(bad)
fld
and
gs
iret
sbb
xor
shr
xchg
jmp
aas
(bad)
xchg
les
mov
(bad)
xchg
dec
dec
int3
das
sub
shr
sahf
inc
jl
inc
test
in
pop
repz
jmp
dec
mov
and
inc
aad
xor
jbe
jmp
clc
mov
loop
popf
pop
jp
cmp
imul
add
inc
addr16
push
jecxz
repnz
loopne
mov
mov
adc
sbb
sbb
fistp
push
push
fidivr
mov
sbb
mov
test
mov
and
fsubr
arpl
ds
and
sar
mov
add
jge
push
mov
cdq
and
adc
inc
add
(bad)
rcr
jl
int
sar
jae
(bad)
loop
lods
std
fcom
lea
jnp
dec
loope
cmp
push
jo
mov
js
ins
cmc
repnz
nop
sub
pop
outs
je
in
in
sub
mov
je
and
fwait
leave
arpl
mov
mov
mov
in
sub
or
imul
pop
imul
pop
pop
call
push
jp
jmp
aas
lods
sub
ins
stos
adc
out
or
frstor
in
sub
out
pop
out
add
pop
outs
fwait
pusha
fisub
dec
movs
jb
inc
scas
test
add
stos
cmp
in
loopne
loope
out
mov
lahf
dec
or
sti
jl
call
jecxz
pop
ror
test
(bad)
xchg
cmp
imul
dec
push
adc
inc
xrelease
jns
dec
gs
icebp
cmp
adc
aas
retf
iret
xchg
pop
leave
iret
loop
out
dec
mov
ret
icebp
in
pop
in
jmp
ss
pop
cs
pop
lds
stos
push
jmp
and
jmp
cmp
lock
jl
fisttp
enter
push
retf
js
mov
and
aas
xchg
sbb
aaa
iret
xchg
loopne
xor
and
add
in
or
sbb
mov
inc
retf
dec
jle
cmp
mov
fdivrp
push
daa
aas
dec
cmp
jne
iret
cmp
dec
xchg
jge
inc
jl
jmp
in
sbb
jb
pop
xchg
in
scas
fwait
call
or
mov
sub
dec
jmp
dec
daa
jle
ja
(bad)
pop
retf
xlat
cmp
mov
hlt
ret
cmps
loop
aad
daa
repnz
idiv
jg
xchg
clc
cmp
gs
push
push
add
cmps
popf
(bad)
gs
mov
dec
pop
fisub
scas
mov
pop
or
sbb
cld
dec
stos
sbb
inc
xchg
and
fistp
jle
ss
mov
mov
retf
push
ss
hlt
fwait
cmp
cli
gs
in
mov
outs
lods
cmp
xor
lds
inc
test
xchg
fcmovnb
sbb
push
sbb
adc
mov
nop
push
inc
pop
repz
dec
mov
push
xchg
xor
(bad)
outs
outs
loope
stc
mov
adc
push
loopne
scas
xchg
les
cmps
or
hlt
je
loopne
out
rcr
jl
add
xchg
addr16
jnp
and
push
mov
repz
mov
jge
pop
or
test
imul
in
dec
call
movs
retf
cmp
mov
add
jge
in
std
xchg
mov
jb
add
sub
cmps
movs
std
xchg
les
loopne
xor
shl
cmps
lods
jno
call
xlat
xor
jg
xor
clc
sbb
ror
fs
inc
rol
std
into
jl
add
or
fisttp
adc
push
add
and
icebp
stos
add
inc
ss
inc
iret
cmp
jb
cmps
imul
xor
cmp
addr16
pop
lods
xor
test
in
loope
loop
ret
xchg
es
test
pop
(bad)
push
daa
mov
fstp
not
idiv
cmp
mov
jge
xchg
and
in
sub
cmp
push
(bad)
and
(bad)
jmp
push
retf
test
add
fld
push
xor
add
xlat
in
in
(bad)
ror
xchg
in
mov
movaps
mul
idiv
push
adc
jno
icebp
loopne
out
mov
cli
xchg
ret
shl
mov
in
adc
push
jns
cwde
std
xchg
mov
stos
add
add
movs
rcr
retf
and
or
popf
gs
in
(bad)
lods
pop
int3
sar
sti
in
popf
sbb
in
mov
inc
mov
cld
inc
push
lea
pop
xchg
push
jmp
sahf
jne
and
jle
stos
inc
sbb
adc
jo
cmp
add
bound
push
das
add
push
or
dec
sahf
jne
std
adc
xchg
xchg
out
repz
dec
xchg
or
aad
cs
dec
jp
inc
cld
ss
clc
and
mov
loop
or
jmp
dec
ds
and
(bad)
mov
lock
sub
mov
sbb
mov
cs
lds
jnp
add
mov
hlt
and
sub
mov
xor
mov
add
scas
lea
xor
outs
add
lds
sbb
cdq
fst
popa
jmp
iret
(bad)
pushf
cmp
mov
bound
sahf
mov
push
outs
cwde
fstp
push
ficom
bound
call
stos
stc
jge
or
daa
test
(bad)
les
xchg
enter
dec
jecxz
retf
dec
xor
rcl
xchg
test
sub
jp
fdivr
aas
bound
cmps
fimul
mov
ret
inc
push
jnp
cmp
sub
or
xchg
retf
cmps
bound
sar
jae
mov
adc
movs
pop
movs
adc
js
or
add
xchg
rcr
xchg
cmp
jo
jg
hlt
sbb
test
shr
jmp
cmps
sub
jecxz
adc
rcl
sahf
cmp
(bad)
mov
jmp
test
push
inc
cmp
pop
fwait
cmp
rcr
movs
gs
jo
mov
ja
mov
inc
stc
cmp
mov
test
mov
mov
cmc
scas
leave
out
out
out
or
hlt
jge
dec
sub
or
fsub
inc
or
sbb
or
sub
add
std
repz
lods
add
sub
sbb
xchg
xor
cld
xchg
push
ret
sub
push
mov
sub
sahf
cmp
cmp
mov
dec
push
fild
out
js
or
and
cs
cmps
lahf
sub
ret
jmp
mov
push
pop
jl
sti
int
mov
into
scas
add
ins
push
mov
push
scas
jmp
push
cmps
add
push
aad
ret
mov
rcr
jns
mov
mov
fstp
sahf
daa
pop
dec
xlat
out
mov
pop
shl
cli
pop
mov
xlat
test
or
imul
iret
sub
addr16
int3
sti
cmp
mov
xor
cmp
fsub
mov
enter
cmc
push
mov
dec
add
jp
push
pop
jns
iret
jns
out
in
aad
or
aas
fstp
mov
sbb
out
mov
retf
sub
test
leave
sbb
test
fst
stos
pop
xchg
push
pop
hlt
pop
das
xchg
cmps
movq
aas
xadd
cld
and
xchg
in
fisttp
mov
rcr
int
inc
repz
mov
repz
mov
(bad)
add
leave
cmc
dec
dec
scas
cmp
jg
mov
xchg
add
cwde
push
adc
outs
ret
pop
mov
cmp
adc
call
or
mov
test
cdq
or
cld
ja
cld
mov
mov
adc
mov
push
sbb
test
sub
mov
add
or
aaa
xchg
gs
cmps
or
scas
adc
in
cmp
clc
xchg
shl
pop
fsub
dec
mov
leave
mov
push
mov
adc
lock
mov
mov
sub
push
pop
pushf
in
jmp
mov
sahf
in
xor
call
mov
in
(bad)
loop
add
jl
aam
cld
add
pop
idiv
sub
push
inc
mov
ins
mov
(bad)
fdivr
outs
popf
(bad)
ficomp
bound
test
or
lock
fdiv
popa
sbb
loopne
or
inc
push
inc
mov
(bad)
mov
xor
dec
add
sbb
cmp
push
(bad)
shl
xor
or
rol
sbb
pop
mov
jl
mov
sbb
jle
mov
push
ds
mov
ret
dec
sbb
js
push
mov
es
popf
and
ror
mov
jno
cwde
add
cdq
arpl
cld
and
jmp
int
fcomp
(bad)
cmc
cmps
sbb
jmp
push
test
(bad)
fwait
mov
loopne
fsubr
call
test
add
push
and
jns
mov
jmp
inc
into
lock
imul
lahf
fistp
popa
pop
into
pop
sahf
scas
xchg
inc
sbb
mov
xor
mov
lahf
ins
cs
fwait
sub
(bad)
cdq
mov
xchg
call
jmp
shr
in
xor
sar
call
mov
mov
jns
shr
(bad)
mov
ss
pop
or
retf
jns
and
jle
mov
in
mov
jb
push
daa
loopne
dec
push
xchg
dec
stos
xchg
sbb
div
or
fcom
jecxz
cld
push
mov
cmc
(bad)
dec
addr16
xor
(bad)
retf
(bad)
jmp
imul
mov
jne
scas
retf
mov
cmp
jo
in
leave
ret
fstp
movs
(bad)
nop
mov
mov
or
into
add
out
lods
jne
cli
mov
dec
outs
sub
hlt
aam
in
cmp
pop
imul
scas
jge
daa
sahf
mov
xor
sbb
xchg
inc
sbb
(bad)
inc
loope
cmp
push
hlt
jge
in
mov
jo
cwde
fsub
ds
cdq
out
pop
add
sti
mov
mov
int3
sar
xor
in
data16
pop
mov
mov
push
jmp
cmp
mov
stos
(bad)
xor
cmp
mov
xchg
out
cmp
adc
or
cmps
out
aaa
pop
dec
add
cwde
mov
aas
or
repz
(bad)
dec
popf
jecxz
mov
mov
cmps
sbb
shl
inc
inc
xchg
xchg
cmp
jl
push
jnp
dec
retf
in
out
push
lods
xchg
jne
pusha
jle
xchg
mov
pop
cmps
sub
pop
sub
aaa
cmps
push
and
pop
cwde
lds
fld
xor
xlat
cld
out
loopne
fcomp
cmp
sub
pop
aam
pop
in
ds
inc
ins
lock
xchg
push
sub
cdq
jb
cs
scas
and
pop
inc
xchg
adc
pushf
jb
leave
cld
(bad)
jmp
pop
in
adc
ret
push
rol
push
push
scas
outs
nop
jge
jge
xor
sbb
mov
shl
or
cmp
dec
jae
mov
fild
paddsb
scas
mov
icebp
pop
xor
xor
fldcw
rcl
and
adc
jl
lods
aas
pop
xchg
sub
mov
ins
add
xchg
push
push
jp
shl
scas
sbb
outs
xchg
cld
push
lock
and
or
sub
xchg
enter
lods
mov
xchg
xchg
xchg
sub
xor
sub
das
retf
out
xchg
cmps
inc
fstp
aad
fild
cmp
in
jns
int3
out
mov
mov
jecxz
pop
arpl
xor
(bad)
mov
adc
mov
test
(bad)
lock
mov
xor
iret
xor
mov
rcl
in
or
mov
daa
jmp
stos
loopne
iret
or
sub
inc
es
cmp
dec
jnp
and
cmp
dec
xchg
sar
dec
mov
in
adc
repz
xchg
aaa
pop
push
jl
test
cwde
push
adc
in
sub
mov
fisttp
cwde
inc
inc
int3
fisub
call
cli
jp
sub
cmp
idiv
add
xor
mov
fwait
jbe
sbb
dec
inc
sub
mov
(bad)
xchg
fwait
not
aas
cmp
cmp
aas
iret
cmp
cmps
bound
mov
xor
pop
mov
mov
inc
xchg
jp
inc
shr
in
sub
test
mov
or
jg
(bad)
cli
ds
xchg
popa
rcr
cld
sti
sub
mov
inc
or
into
test
pop
icebp
jo
push
bound
lds
and
in
fbld
mov
xchg
xor
mov
sbb
js
std
rcl
pop
test
xlat
out
inc
mov
out
lock
out
jb
fld
cdq
inc
sub
outs
sub
popa
add
ins
gs
mov
in
jne
lods
jmp
(bad)
dec
and
sbb
loope
xchg
inc
aad
add
sar
cmp
ins
mov
out
jmp
ja
xor
lahf
dec
fsubp
or
jne
arpl
xor
out
gs
pop
xchg
cmp
gs
ffreep
cmp
xor
pop
and
test
loop
xor
gs
push
push
cmp
popa
add
jge
mov
aam
adc
(bad)
pop
sbb
or
mov
inc
and
jnp
in
push
pop
add
sbb
out
cwde
(bad)
jl
push
lods
rep
(bad)
xchg
daa
pop
scas
frstor
popf
adc
add
mov
mov
cwde
cmp
and
or
add
or
pop
jp
and
mov
into
in
xchg
loopne
xchg
(bad)
pusha
lds
dec
in
inc
retf
jge
out
movs
outs
adc
cli
and
fdivp
repnz
jmp
jb
ror
inc
shl
cmp
and
jmp
push
xchg
sub
ffree
sub
xlat
mov
(bad)
jmp
xor
jbe
das
cmp
(bad)
sahf
fistp
ficomp
aas
sbb
add
or
sub
push
push
stos
nop
(bad)
dec
mov
pop
wbinvd
lock
pushf
(bad)
aad
push
cli
jl
mov
mov
cmp
nop
pusha
sbb
ins
(bad)
out
mov
lods
or
and
pop
xchg
xchg
mov
mov
dec
je
mov
fnstsw
jge
ins
fcom
push
daa
sbb
add
ret
popa
sbb
dec
pushf
xor
ret
retf
jbe
lea
scas
les
arpl
jbe
add
loop
ja
add
movs
lea
pop
clc
shl
sar
mov
push
add
sub
repnz
dec
mov
jge
cmps
push
jp
fsub
mov
push
pop
sub
jmp
add
mov
imul
outs
xor
out
mov
ret
sub
xchg
in
pop
lds
outs
rol
pop
and
jmp
mov
retf
mov
push
icebp
cmps
shl
xor
mov
dec
inc
icebp
sub
or
xor
mov
cmps
xor
jne
push
dec
xchg
dec
not
jo
ins
retf
cld
cmc
test
pop
les
ret
(bad)
imul
adc
add
mov
outs
pop
(bad)
jns
mov
adc
add
and
xchg
repnz
cmp
sub
pop
cmps
inc
dec
mov
mov
pop
daa
sar
arpl
cmps
xchg
cmps
fst
mov
xor
into
fldenv
sub
in
lock
lds
sbb
xor
movs
dec
mov
(bad)
iret
pop
fwait
call
xchg
sti
jl
pop
in
push
inc
std
push
jmp
cmp
pop
stos
repnz
jmp
mov
fldenv
push
push
jae
arpl
adc
(bad)
mov
mov
movs
std
xor
cmp
out
gs
sbb
inc
mov
mov
jge
(bad)
jbe
pop
loop
jnp
xchg
loope
pop
cmp
data16
and
cmp
fdivr
push
test
daa
in
icebp
mov
pop
push
xor
rcr
mov
out
lock
mov
lods
ins
xor
jb
jecxz
sbb
push
cwde
jb
cdq
dec
jns
lods
xlat
(bad)
std
(bad)
jmp
push
js
int
add
xchg
and
inc
or
pop
pop
xchg
jmp
stos
(bad)
mov
les
mov
dec
fwait
daa
xchg
shl
push
lahf
or
jmp
jmp
push
outs
or
mov
push
sub
or
popf
test
jae
ja
in
add
push
add
jo
mov
pop
inc
mov
std
pop
cmc
stc
xor
mov
adc
addr16
jnp
push
shr
jp
jo
fs
jl
out
push
cmp
inc
je
imul
out
push
mov
jge
jae
dec
(bad)
loope
jns
mov
pop
xchg
popa
add
arpl
sbb
sbb
push
iret
dec
sub
popf
add
add
and
xchg
adc
aas
push
and
gs
cld
mov
rol
jecxz
mov
test
and
pop
add
call
leave
call
fstp
jl
sti
cld
mov
(bad)
ret
mov
out
int
or
das
jmp
or
outs
mul
call
lahf
jb
repnz
fdivr
pop
je
mov
or
or
and
dec
dec
mov
arpl
stos
and
ret
pop
cmps
test
pop
mov
push
adc
ins
in
sbb
xor
xor
jg
mov
cld
cwde
shl
pop
cdq
cmp
xor
dec
mov
xchg
je
mov
pop
xchg
jns
sub
movs
shl
xlat
xor
fcomp
(bad)
adc
cmp
fwait
rcr
inc
mov
push
lods
hlt
ror
dec
mov
and
imul
jmp
mov
(bad)
in
ja
dec
add
aam
ds
xor
repnz
pushf
sahf
inc
mov
inc
push
lods
sub
or
jno
push
repz
jmp
out
sar
xchg
push
stos
sub
adc
xchg
pop
mov
push
(bad)
mov
cmp
jg
(bad)
fcomp
jmp
pop
in
or
bound
push
sbb
test
mov
movs
xchg
ret
sbb
add
pop
add
out
sub
xor
outs
shl
push
(bad)
nop
loope
and
loopne
fwait
jge
imul
fdivr
cwde
fdiv
cmp
mov
inc
jo
mov
mov
dec
es
xchg
sbb
lahf
cmp
outs
add
rol
add
push
scas
mov
aad
in
jmp
test
enter
clc
out
daa
test
adc
movs
call
loopne
iret
mov
cld
xor
(bad)
das
ins
retf
pusha
shr
dec
jno
or
xlat
pusha
test
cmp
cmp
jge
rcr
int
add
mov
shl
and
add
inc
(bad)
mov
in
sbb
icebp
add
cmp
addr16
or
mov
pop
pop
(bad)
push
loop
arpl
(bad)
mov
dec
jg
sbb
js
pop
inc
outs
mov
cs
daa
fldenv
das
and
cs
cmp
mov
clc
lods
mov
adc
ins
or
sbb
jns
popf
sbb
dec
dec
cmps
sbb
mov
xchg
pop
jne
jmp
mov
mul
leave
enter
xor
rcr
inc
clc
and
push
xor
jl
pop
cmp
int3
dec
stos
pop
cmp
mov
cmp
adc
lods
outs
cmps
jl
sbb
ins
pusha
adc
cld
rcr
mov
add
scas
aad
es
in
(bad)
push
fcmovne
xor
pop
jp
(bad)
cmovnp
adc
iret
mov
data16
add
jg
push
push
cmp
mov
icebp
(bad)
in
mov
mov
stos
adc
dec
inc
mov
es
fs
in
mov
mov
mov
mov
into
in
(bad)
cmp
dec
cmc
stc
or
movs
inc
popf
cli
into
loopne
pop
fadd
jmp
aaa
imul
dec
cld
inc
out
icebp
addr16
dec
mov
fdivr
ds
out
lahf
push
out
ds
push
xchg
push
and
pop
mov
sbb
stc
scas
sbb
call
adc
pop
rol
push
shl
push
in
fs
mov
(bad)
mov
mov
mov
sub
pop
jo
push
cdq
cmc
dec
mov
pop
sbb
push
stc
mov
iret
imul
adc
std
jo
retf
sbb
cmp
jb
in
push
sbb
ds
and
jl
mov
into
inc
shr
pusha
add
mov
inc
out
lock
loop
jo
jle
sbb
popa
add
dec
dec
jne
lahf
call
mov
xchg
lea
xor
std
in
cmp
shl
stc
sbb
popa
pop
cli
in
pop
in
ret
fucomp
pop
dec
jbe
call
cmps
mov
pop
mov
shl
lods
mov
and
lods
sbb
aam
in
out
push
lahf
jmp
mov
mov
dec
aas
pop
icebp
pop
mov
inc
les
mov
(bad)
in
sub
ret
dec
ror
retf
fisttp
and
in
je
data16
cmp
out
ret
xor
loope
inc
sar
cmp
xor
xchg
push
xchg
lahf
jae
test
test
jmp
and
dec
lahf
jmp
lahf
fild
stos
mov
jge
data16
mov
out
jl
movs
push
xchg
jecxz
int3
xor
js
fisub
lea
or
faddp
sbb
je
fdivrp
cmps
cmps
mov
fisttp
rol
jae
push
xor
mov
push
add
in
jmp
fist
loope
in
push
out
neg
movs
push
mov
fsub
inc
icebp
repz
fwait
xchg
mov
mov
mov
adc
or
dec
dec
jno
pop
ret
jp
cdq
mov
mov
dec
scas
push
mov
push
pop
cli
in
(bad)
xlat
mov
mov
push
test
pop
pop
add
imul
or
fistp
sar
int
and
push
mov
inc
jns
xchg
pop
add
cmp
xchg
call
add
or
aad
mov
stc
pop
sar
ret
jecxz
mov
adc
jmp
outs
jno
popf
xchg
inc
mov
dec
and
scas
stc
lea
sbb
cli
jb
icebp
rcr
sub
ror
adc
outs
pop
mov
mov
inc
into
ret
push
pop
cmps
or
cmp
test
xor
mov
xor
int3
xor
aad
dec
loopne
rcr
push
rol
je
pop
(bad)
sub
call
cmp
mul
movs
xor
pop
add
dec
push
fisttp
in
xor
cmp
and
adc
aas
mov
sahf
test
sbb
in
loope
call
test
es
aad
push
jno
adc
pop
out
pusha
jbe
cmp
xchg
or
ja
sub
rcr
sahf
inc
cmps
stos
gs
repz
cdq
leave
in
lods
fs
jle
jns
cmp
jns
mov
jbe
loop
cmp
jbe
mov
xchg
cli
jo
out
jle
mov
mov
sbb
mov
jmp
mov
ins
mov
cmp
mov
fwait
dec
inc
cmc
mov
ret
fidiv
loop
mov
pop
inc
dec
ss
das
xchg
push
popf
xchg
inc
push
std
cmp
add
and
add
lea
in
in
xor
cmp
pop
xchg
mov
pop
jmp
mov
in
scas
int
cmp
in
add
shr
das
cs
(bad)
aam
clc
clc
in
xchg
lods
jmp
pop
push
bound
mov
add
bnd
pop
or
dec
loop
add
mov
xlat
aaa
je
mov
xchg
dec
icebp
aam
ja
test
lods
cmc
jns
push
push
push
ror
repz
jae
in
clc
mov
cmc
cmp
fcomip
inc
cs
inc
xor
movs
jle
mov
xor
inc
dec
js
imul
sbb
out
arpl
push
enter
enter
out
and
cli
xor
mov
hlt
mov
sbb
dec
(bad)
int3
dec
and
ds
push
out
jmp
jmp
pop
dec
leave
aam
push
mov
jmp
(bad)
mov
ins
push
retf
and
mov
xchg
popa
cmp
je
jnp
pop
fadd
stc
ins
int
movs
rol
push
jmp
loop
jle
sahf
fist
fdiv
ss
stc
push
(bad)
call
cmc
cdq
pushf
scas
mov
or
popa
loop
mov
jecxz
xchg
leave
xor
scas
dec
icebp
pop
imul
cdq
inc
xchg
xor
xlat
mov
aam
pop
mov
sar
xchg
mov
mov
jle
lods
mov
push
shl
jl
sbb
ins
jne
fiadd
jmp
(bad)
ds
imul
or
push
stos
icebp
jb
fidivr
mov
push
xor
push
push
cmps
jg
push
in
fistp
fwait
addr16
pop
nop
inc
mov
dec
rol
mov
lahf
rcr
dec
sbb
cmp
ja
mov
loopne
out
call
retf
sti
dec
loope
cmp
push
xchg
cmp
cmps
push
pop
and
jg
xchg
ins
inc
mov
ins
sub
xchg
and
out
push
out
mov
div
repnz
mov
and
ror
pop
mov
cmp
sahf
xchg
call
fsub
mov
cli
jmp
inc
jle
mov
das
jl
jb
enter
mov
cmp
mov
jge
sahf
icebp
scas
xlat
mov
push
std
ins
loopne
and
ficom
out
in
xrelease
cli
mov
daa
out
retf
jae
jl
and
push
and
inc
push
stos
dec
test
call
jl
popa
xor
in
and
rcr
call
inc
cmp
sbb
inc
add
and
je
and
push
and
scas
(bad)
clc
stos
pop
and
sub
pop
enter
inc
sbb
or
ret
rol
mov
dec
repnz
mov
out
add
sub
cmp
and
shl
push
es
adc
es
lock
cmp
scas
pushw
shr
daa
aad
jbe
pop
add
js
and
rcl
jne
in
das
jl
xchg
das
ret
xchg
dec
mov
add
repz
hlt
dec
(bad)
cdq
rol
cmp
pop
shl
jae
ds
adc
das
int3
xchg
out
clc
popa
pop
push
int
hlt
les
bound
mov
(bad)
aas
pop
cwde
inc
aas
pop
nop
dec
pop
fucomi
test
jg
jnp
jbe
jae
push
loopne
fadd
or
js
mov
loope
pop
out
lods
xor
and
inc
push
jno
enter
aas
(bad)
mov
xor
jp
xchg
xchg
pop
imul
sar
jmp
fneni(8087
sbb
popa
loope
loop
sbb
and
add
(bad)
iret
int
shl
movs
or
and
mov
xlat
mov
(bad)
leave
xchg
cmp
or
push
das
xor
stc
pop
iret
(bad)
cmps
(bad)
pop
and
inc
das
(bad)
cmp
mov
xchg
dec
dec
xchg
into
in
mov
(bad)
aaa
out
xor
loopne
jp
sub
pusha
movs
imul
sub
sub
popf
cmp
jbe
mov
or
test
jno
xchg
mov
jmp
fcmovnb
or
inc
(bad)
out
or
scas
jp
push
fadd
sbb
jmp
pop
icebp
in
cmp
adc
push
pop
out
mov
es
xchg
iret
imul
xor
les
jne
iret
mov
es
std
fild
ret
add
cld
(bad)
retf
sti
shl
jge
cmp
dec
getsec
nop
fdivrp
inc
xor
jns
std
dec
cmps
jmp
dec
fwait
push
cld
lods
jmp
mov
dec
cs
mov
retf
pop
mov
xchg
xor
mov
cmp
push
(bad)
xchg
push
addps
das
mov
dec
xchg
mov
ja
and
neg
push
pop
leave
fadd
xchg
cld
stos
lahf
test
push
fnsave
loope
inc
test
pusha
jge
or
mov
inc
shr
shl
inc
inc
fstp
imul
sub
sub
(bad)
jl
mov
out
ja
jp
jo
bound
jecxz
adc
jg
add
cdq
sbb
push
xchg
mov
dec
add
fwait
push
cdq
addr16
jmp
add
pop
shl
shr
jbe
sti
movs
or
xchg
xchg
cdq
adc
mov
xor
aad
jmp
cli
pop
das
fmul
or
ins
icebp
mov
pusha
cmp
hlt
loopne
fs
lahf
fcomp
add
dec
fisub
ret
cli
sub
in
lahf
sub
fcomp
push
into
iret
xchg
es
xchg
mov
xchg
ret
jmp
sti
int
or
push
stc
cs
je
or
pop
cdq
pop
cdq
mov
pop
xchg
iret
imul
gs
sub
xchg
inc
pushf
mov
push
fnstcw
mov
xchg
or
(bad)
int3
mov
xchg
(bad)
inc
pop
sub
push
pop
call
pop
aas
fcomp
sbb
sub
inc
(bad)
das
cmps
ins
int3
push
sub
retf
stc
pop
adc
retf
sbb
mov
cmp
xor
jle
xor
jl
cmp
xlat
test
add
rcl
lahf
cs
fidivr
xchg
mov
cmp
sub
clc
dec
push
ds
or
inc
jg
aas
bound
int
jne
xor
pusha
retf
hlt
out
mov
mov
enter
shl
in
dec
mov
sub
mov
add
pop
mov
mov
pop
xchg
jl
iret
arpl
mov
inc
(bad)
icebp
pop
int
gs
hlt
aam
js
jb
lea
xchg
pop
mov
pushf
add
ret
(bad)
fs
mov
and
ficomp
mov
xchg
xchg
push
lea
cmp
jl
aad
mov
mov
call
into
jns
call
sub
cli
push
imul
rol
hlt
push
or
jle
ins
imul
jmp
mov
jl
out
rcr
fimul
fs
aad
int3
jb
adc
pop
mov
es
xchg
jbe
(bad)
cmp
push
jle
mov
mov
hlt
push
jne
stos
int
jo
mov
lea
cmp
icebp
clc
mov
out
test
dec
leave
pushf
inc
loop
or
mov
test
mov
sbb
mov
pop
outs
add
inc
pop
je
dec
xchg
mov
fistp
mov
xor
ins
lods
mov
fs
cmp
mov
mov
xor
(bad)
(bad)
mov
or
adc
jmp
test
and
call
sub
repnz
ss
xlat
lods
call
inc
or
push
(bad)
adc
jge
stc
mov
push
dec
fst
push
jno
pop
addr16
and
cmps
inc
sub
and
mov
jnp
push
mov
push
fimul
js
cmp
dec
push
std
outs
addr16
jge
inc
jae
cdq
mov
mov
repnz
xor
mul
pop
repnz
int3
push
out
fst
test
push
sub
push
dec
aas
push
jns
pusha
repnz
jle
mov
pushf
pop
sub
pop
xchg
daa
xor
push
xor
or
sub
jmp
sub
dec
sub
fcom
in
repnz
cmp
lods
cs
arpl
xchg
sub
cli
fiadd
hlt
xor
das
and
popa
mov
mov
jbe
mov
ror
lock
ror
cmp
jmp
ins
sbb
pop
popa
or
in
shl
mov
hlt
leave
cmps
es
js
cmc
dec
ret
int
mov
out
pop
inc
mov
shr
adc
and
retf
jb
aas
in
rcr
jle
cmp
(bad)
xchg
retf
bound
fdivrp
push
xlat
sub
lahf
addr16
bnd
in
repz
fild
pop
sub
xchg
mov
pop
jge
daa
xlat
test
(bad)
adc
cmp
mov
mov
and
cmp
fmul
mov
adc
iret
inc
cmps
aas
adc
mov
mov
sbb
(bad)
mov
in
add
shl
push
cwde
fwait
adc
jmp
aaa
rcl
outs
push
dec
out
pop
cs
js
bnd
push
adc
push
and
sub
aas
mov
push
in
jne
cmp
jo
cld
sti
add
lahf
ins
stc
loop
in
in
mov
xor
jae
adc
ret
cld
inc
call
jg
arpl
adc
out
xchg
mov
sbb
inc
fild
jp
push
adc
push
les
pop
nop
aaa
pop
lea
xor
cmp
rol
mov
loop
pop
mov
jns
add
or
(bad)
lods
mov
ret
out
push
hlt
dec
shl
push
out
mov
push
sbb
jb
jp
cmp
mov
mov
int3
inc
mov
call
pop
jmp
xor
sti
pop
mov
out
idiv
jne
mov
push
sub
in
push
xchg
mov
xor
mov
(bad)
xor
cmp
repnz
add
cmp
sbb
cmp
xchg
push
inc
cmp
fnstsw
push
sub
adc
inc
cmp
and
call
out
aad
push
add
shl
ins
js
stos
stos
xchg
mov
(bad)
jmp
sub
cdq
cmp
retf
adc
fdiv
ret
cmp
(bad)
adc
inc
xlat
clc
jbe
fisubr
or
jb
mov
stos
rol
das
out
push
or
sar
cmp
mov
not
lea
ins
jg
mov
jb
lock
fcom
dec
and
sub
add
jbe
and
push
(bad)
shr
cld
jle
(bad)
out
arpl
xor
xor
(bad)
fincstp
shr
xchg
movs
imul
stc
in
out
xchg
cmp
or
add
pop
sub
jb
and
in
mov
mov
push
in
cmp
cmp
stc
daa
xchg
sahf
ror
or
mov
push
jmp
rcl
inc
dec
imul
test
push
shl
sar
push
cmp
scas
cmps
mov
jle
out
dec
add
ret
inc
dec
aas
mov
jmp
lods
shl
sub
mov
fwait
add
mov
mov
enter
in
add
jmp
(bad)
jae
add
cmp
daa
stc
icebp
call
and
imul
cmp
imul
xchg
dec
(bad)
mov
push
jp
mov
mov
cmp
push
xchg
cmps
cdq
iret
pusha
sub
pop
cmp
xchg
mov
repz
dec
mov
fstp
repnz
mov
jmp
hlt
or
or
loope
inc
dec
pusha
inc
xchg
stc
inc
je
xor
sub
out
dec
inc
cmp
pop
push
jecxz
jmp
cmp
fdivr
mov
add
pop
scas
bnd
out
sbb
and
dec
sbb
call
fcom
retf
call
pop
in
mov
or
push
das
adc
dec
retf
jae
pushf
test
fst
or
and
inc
mul
nop
mov
mov
movs
arpl
dec
leave
(bad)
fcmovbe
(bad)
stc
scas
mov
stc
leave
adc
mov
sbb
pop
frstor
push
jmp
mov
dec
sahf
push
sbb
inc
shr
pop
cmp
gs
test
enter
(bad)
pop
adc
cmp
jns
jmp
pop
bound
mov
je
xor
fisttp
push
push
push
mov
xchg
jg
sahf
cmp
outs
xchg
repz
push
mov
daa
or
test
add
ins
vpmacsdql
leave
cmp
in
hlt
inc
(bad)
jmp
xchg
shl
out
pop
outs
scas
out
sbb
jne
les
mov
dec
out
mov
repnz
imul
test
sub
(bad)
inc
scas
pop
xor
add
ins
dec
mov
jl
in
out
xchg
loopne
je
dec
movs
mul
sahf
sti
cmp
je
lock
pop
bound
sbb
nop
mov
xchg
outs
shr
mov
xor
les
xor
cmp
or
sub
jge
fdivr
retf
pop
in
mov
sub
sti
sti
mov
inc
lock
adc
add
fbld
fimul
jecxz
xor
sbb
xchg
push
stc
shl
push
adc
mov
jnp
aas
scas
jno
data16
adc
imul
jmp
retf
ror
xchg
bound
inc
and
call
sbb
je
pop
es
in
fiadd
adc
cmp
retf
cli
ret
mov
push
push
fadd
and
cwde
es
sar
int3
pop
hlt
mov
sbb
enter
cmp
or
icebp
inc
stos
jmp
cmc
mov
not
int
(bad)
push
lock
lds
mov
sub
shl
jmp
fs
fld
xchg
imul
hlt
sbb
mov
test
(bad)
pop
bound
movs
popf
push
jg
mov
jmp
scas
dec
repz
jg
loopne
xchg
dec
mov
aas
leave
mov
xchg
fild
push
jmp
es
mov
mov
add
fwait
push
push
in
mov
dec
mov
(bad)
pop
dec
mov
cmc
or
lahf
cmps
rol
mov
xchg
mov
xor
inc
data16
outs
jno
xor
adc
outs
movs
cmp
inc
in
push
rol
aam
movs
or
ja
and
adc
imul
call
retf
or
pop
(bad)
push
dec
out
fisttp
push
inc
nop
lahf
vmread
ja
sbb
xor
add
hlt
nop
loope
(bad)
sti
in
shr
xchg
test
ins
mov
hlt
mov
or
jne
jb
ss
or
outs
inc
dec
mov
cmps
jae
dec
mov
retf
mov
test
icebp
iret
ss
in
sub
(bad)
cld
jl
vucomisd
loop
push
push
cli
std
pop
pushf
jnp
jg
push
lahf
and
dec
mov
adc
outs
inc
push
dec
pop
in
(bad)
xchg
xchg
sbb
inc
scas
push
movs
push
push
add
add
fs
cwde
pusha
mov
je
push
mov
xchg
out
jb
xlat
and
or
mov
sbb
pop
gs
fmul
das
xchg
(bad)
sbb
stc
cmc
jmp
sti
cld
xchg
jp
arpl
xlat
cmp
push
in
lods
xor
retf
in
arpl
push
(bad)
dec
pop
sbb
(bad)
(bad)
(bad)
sub
dec
dec
outs
in
dec
lahf
mov
sub
pusha
pop
or
fcom
sbb
adc
jmp
leave
xchg
popa
outs
push
(bad)
inc
sbb
bound
push
cmp
gs
outs
loop
add
in
jbe
nop
repnz
(bad)
cli
mov
outs
push
aaa
js
mov
dec
sar
add
cwde
sbb
ins
imul
pop
mov
loopne
in
mov
call
sub
das
mov
ret
or
xor
into
mov
xchg
pop
cli
(bad)
outs
fs
dec
mov
sahf
inc
add
std
mov
repnz
fsub
xchg
and
push
inc
fadd
daa
stos
jne
sbb
dec
mov
aam
pop
shl
gs
movs
fisub
pop
out
cmp
outs
data16
xchg
cmp
sub
outs
cli
sbb
sti
(bad)
sbb
test
stc
lea
jno
cdq
pop
fsubr
jnp
sbb
cmp
iret
stos
ins
pop
call
sahf
dec
sbb
add
lock
call
mov
out
cmps
inc
dec
mov
nop
(bad)
aaa
mul
pop
fnstcw
mov
add
in
imul
js
sar
cli
pop
repnz
dec
punpcklwd
cmps
push
mov
or
out
outs
adc
mov
inc
cmp
inc
mov
cs
xchg
aad
imul
das
ins
xor
ds
ret
(bad)
mov
pop
fsubr
in
std
repz
leave
jl
mov
ins
ins
mov
int
cmp
dec
dec
xor
(bad)
ds
test
jp
call
or
dec
clc
xor
ds
out
inc
mov
pop
and
(bad)
mov
sbb
sub
repnz
inc
stos
mov
sbb
jle
in
(bad)
sbb
pop
pop
inc
sbb
xlat
movs
(bad)
ins
fstp
(bad)
mov
pop
fild
shr
ret
fcom
inc
cs
xor
mov
gs
and
ret
mov
hlt
jl
test
shr
pop
sub
not
adc
xchg
iret
enter
fwait
mov
in
movs
sti
movs
fadd
mov
ins
bound
call
push
mov
imul
pop
mov
mov
pop
int
pop
in
test
jp
sbb
(bad)
dec
sti
cmp
jns
shr
pop
fcomp
sahf
jae
(bad)
fnstcw
cmp
mov
xor
push
push
rcr
cmp
adc
mov
xchg
imul
into
mov
push
es
ins
push
ret
shl
je
retf
mov
mov
arpl
lock
rcl
int
retf
fstp
inc
xchg
inc
adc
push
fsubr
mov
aad
(bad)
std
pop
pop
fidivr
repz
xlat
movs
sub
adc
xchg
lds
ficomp
rcr
xor
fldenv
outs
sar
call
cmp
mov
lahf
inc
icebp
fld
cwde
sbb
imul
test
push
push
mov
lea
mov
dec
movs
sti
mov
sbb
out
bnd
fidivr
sar
inc
xchg
retf
(bad)
leave
push
(bad)
leave
retf
pextrw
cmp
cmp
xchg
xchg
rcr
imul
mov
push
sar
sbb
lock
std
jo
add
or
stc
xor
cmp
shr
inc
sbb
cmp
mov
xchg
repz
push
mov
sbb
fcomp
lock
mov
inc
jg
and
cmps
xchg
mul
popf
mov
repz
sbb
aaa
cli
movs
loope
loopne
sahf
frstor
movaps
repz
rcl
int
ret
popf
pop
pop
inc
pop
adc
and
pushf
icebp
pushf
fld
pop
lock
(bad)
and
or
dec
fisub
inc
in
sahf
outs
push
pop
and
inc
xchg
in
rcr
repz
sbb
outs
jbe
dec
outs
xor
popf
repz
shl
rcr
repz
jnp
xor
fsubr
mov
lods
out
cs
xor
xlat
cmp
(bad)
mov
mov
out
jo
dec
push
jmp
push
jecxz
call
mov
loopne
push
int3
inc
mov
sbb
jmp
leave
data16
cmc
leave
mov
shl
push
pop
stc
shl
test
sar
xchg
fprem1
in
cs
dec
mov
loopne
cmps
in
xchg
mov
sbb
retf
fisubr
mov
js
fcomp
dec
mov
daa
inc
cmp
pushf
fwait
enter
frstor
sbb
sub
pop
mov
ficomp
add
mov
loope
xchg
sti
and
push
push
inc
retf
push
imul
cmp
leave
dec
in
cmps
pop
pushf
sar
sub
dec
dec
fild
xchg
ins
out
and
mov
in
mov
xlat
cmp
enter
enter
xor
sti
jb
jae
(bad)
ficomp
sub
cmp
mov
xchg
cmp
les
xchg
mov
push
ins
or
bound
shr
aam
lahf
mov
sti
add
jae
movs
xchg
repnz
outs
pop
retf
mov
push
pop
mul
mov
pop
jl
jl
test
out
cmp
inc
mov
fisttp
(bad)
lea
dec
xchg
imul
js
mov
hlt
es
adc
enter
out
add
mov
xlat
and
test
shl
stos
inc
imul
je
xlat
mov
(bad)
idiv
pop
and
scas
imul
inc
ret
rcl
call
retf
pop
cmp
fisttp
pop
ins
or
(bad)
adc
in
lea
stos
fisttp
push
fiadd
mov
lahf
js
(bad)
mov
mov
out
lahf
add
(bad)
in
and
pop
jge
mov
dec
or
xchg
test
js
push
mov
cs
mov
jns
mov
vhsubpd
bound
mov
push
mov
int
fwait
call
push
aaa
fcomp
cld
frstor
iret
loope
jo
push
mov
enter
into
jle
imul
mov
adc
xor
jmp
stc
icebp
cld
(bad)
adc
add
jecxz
mov
mov
sub
push
imul
push
call
pop
xchg
test
cmps
pop
pushf
fist
mov
xor
mov
fucom
xor
call
or
jmp
cmp
add
dec
cwde
das
cmp
fidiv
int
lock
ja
mov
xlat
popf
add
repnz
std
popf
or
adc
aas
xchg
scas
adc
nop
xor
xchg
sub
and
sahf
mov
fmul
xor
jp
mov
test
fisubr
out
out
stos
inc
inc
dec
clc
mov
mov
jnp
aad
add
out
jecxz
mov
loop
dec
aas
lock
fs
mov
xor
and
jo
ja
pop
xor
bnd
scas
push
les
xchg
push
mov
jnp
iret
lea
out
sub
into
sbb
cmp
lods
and
jecxz
jbe
outs
outs
fdiv
jg
pop
pop
js
(bad)
and
dec
out
cs
xchg
pop
jb
xchg
in
add
or
xchg
es
push
mov
and
push
jmp
and
and
test
or
dec
imul
aas
fucomip
in
out
in
xchg
and
stc
test
out
mov
repz
in
pop
out
fidiv
retf
jmp
test
fist
call
jg
hlt
inc
jns
inc
push
or
xor
jmp
add
mov
pop
in
shl
xor
es
cmp
sub
nop
xor
sub
push
imul
xchg
out
jnp
sub
packsswb
mov
sbb
cmps
ss
loopne
scas
pop
stc
imul
ss
pushf
leave
(bad)
mov
ror
pop
cmp
and
jl
iret
iret
mov
in
pop
std
xchg
xchg
lods
loop
cmp
sti
sub
xchg
jmp
fcom
cwde
pop
jno
ss
ss
cs
addr16
push
sub
inc
add
repz
adc
dec
in
push
sbb
scas
stc
lds
jl
push
fsubp
pop
mov
cld
pop
mov
jb
neg
or
mov
pop
and
jnp
jmp
sub
sti
mov
(bad)
pop
ffree
(bad)
in
mov
xchg
je
pop
(bad)
xor
leave
xor
xchg
add
cmc
cwde
pop
mov
mov
pusha
rol
pop
inc
enter
adc
push
pop
(bad)
es
mov
sbb
fcomip
retf
ins
fidiv
pop
mov
sti
mov
loope
ins
popa
fldcw
adc
xor
dec
out
fwait
call
lds
jecxz
out
pop
mov
xor
fs
popf
or
add
push
dec
pop
addps
enter
xchg
mov
es
mov
pop
jbe
out
mov
push
or
enter
pop
fsubr
sbb
and
mov
popf
adc
jg
fisubr
inc
cmp
shr
push
push
jg
out
inc
jge
fsub
cmp
cdq
hlt
aaa
fwait
add
push
nop
sbb
xlat
xchg
es
jo
fnsave
xor
fcomp
mov
mov
std
xchg
cmp
shr
push
stc
iret
jmp
xchg
mov
jp
scas
call
fcomp
icebp
jg
ds
cmp
mov
xor
push
bound
xor
ror
test
int
jae
retf
dec
outs
outs
jge
test
scas
jns
daa
inc
mov
in
rcr
arpl
jp
xor
cmp
(bad)
clc
div
and
xor
cdq
xlat
push
push
fidivr
stos
mov
cmp
mov
enter
jb
push
vshufps
das
sbb
shl
idiv
mov
sub
imul
fstp
add
test
xchg
pop
ficomp
repz
mov
dec
(bad)
mov
retf
sbb
es
sbb
sub
pusha
repnz
out
lea
cmp
orps
push
(bad)
dec
xor
not
arpl
cli
mov
xchg
leave
jl
dec
lods
jg
cmc
xor
mov
xchg
(bad)
(bad)
mov
lds
mov
jp
jbe
shr
adc
sbb
movs
mov
mov
xchg
test
cmp
cmps
sbb
push
punpckhbw
das
out
cmp
and
jl
jmp
inc
cmc
lahf
punpckhwd
loope
mov
in
sar
ja
cwde
div
xor
aad
push
jge
adc
ja
mov
xchg
jmp
std
xor
mov
jb
(bad)
jno
pop
sub
sti
mov
scas
dec
lock
jge
push
push
paddsb
ret
call
pushf
imul
ficomp
outs
(bad)
mov
fninit
lods
test
xchg
fwait
push
pop
xchg
fs
cs
imul
ss
add
jbe
mov
cmp
xchg
popf
jl
ins
push
xchg
das
ret
out
ss
ins
mov
inc
push
jnp
mov
repnz
or
repnz
dec
stc
jbe
aam
push
mov
dec
ins
push
or
or
ins
movs
mov
lock
mov
dec
jbe
mov
sar
fcmovnu
por
lock
pop
fdiv
cmp
ins
ds
lds
pop
outs
jl
repnz
leave
mov
sbb
jecxz
adc
pop
nop
outs
movs
into
and
mov
ds
out
push
mov
fadd
mov
adc
mov
cs
(bad)
mov
les
out
ret
loope
mov
cdq
ss
push
pop
cdq
pop
and
jecxz
repnz
lock
add
jns
pop
push
daa
or
sbb
inc
sub
pop
and
jecxz
into
jns
pop
jecxz
adc
cmc
jb
xor
mov
mov
or
std
sub
pop
imul
movs
mov
mov
add
scas
push
xchg
cli
push
mov
and
mov
call
aas
xor
daa
stos
adc
xor
sub
call
idiv
fxtract
retf
mov
cmp
xchg
das
sbb
push
fcmovbe
loopne
jmp
out
cli
hlt
and
data16
jnp
jmp
(bad)
out
push
out
pop
adc
ins
lods
nop
pop
xor
fcmove
repz
loop
es
push
(bad)
pop
int3
dec
inc
jo
iret
mov
popa
out
cmp
sbb
jno
inc
int3
int3
(bad)
push
outs
inc
jle
mov
dec
js
mov
hlt
div
xchg
or
test
push
aaa
cmp
push
push
(bad)
idiv
ja
rol
sar
push
test
ret
pop
add
test
mov
js
mov
sbb
shl
shl
or
sti
mov
and
pushf
lahf
mov
(bad)
dec
push
mov
and
push
out
jp
jnp
mov
jecxz
dec
sti
lods
enter
xchg
int3
xor
lahf
pop
cwde
cwde
shl
ja
ret
or
add
mov
cmps
popa
out
loopne
sbb
scas
icebp
jp
xor
and
adc
mov
aaa
mov
outs
push
mov
in
popa
sub
dec
(bad)
jmp
cmp
aad
xor
xchg
mov
pop
jae
lock
aas
(bad)
sbb
cmp
push
js
sbb
arpl
test
iret
adc
pop
not
(bad)
inc
ror
ds
adc
push
jae
lods
shr
in
repnz
dec
aas
dec
ds
scas
call
or
les
adc
ins
mov
ss
fcomp
jmp
xor
fwait
cld
test
pop
add
mov
cmp
mov
test
jne
addr16
jne
sub
xlat
adc
jnp
(bad)
mov
ins
scas
das
mov
push
sbb
inc
mov
idiv
lahf
push
push
dec
jmp
test
mov
jle
mov
lods
cmp
int3
jmp
or
scas
fidivr
xchg
cwde
lahf
repz
mov
stc
call
addr16
mov
lahf
clc
cs
xchg
shl
xchg
sbb
rol
aaa
mov
add
xor
pushf
jbe
adc
dec
mov
mov
(bad)
or
imul
(bad)
jnp
hlt
fcomp
repz
loope
js
scas
pop
push
adc
mov
repnz
xor
movs
jecxz
xor
or
dec
inc
pusha
sti
addr16
outs
fwait
ret
stos
aas
pop
arpl
cld
push
mov
xchg
les
mov
and
pushw
adc
out
jno
ds
jb
xchg
jecxz
ret
jmp
loop
mov
shl
sbb
ins
adc
pop
cmp
lock
dec
mov
mov
stc
jno
pusha
or
out
push
fbstp
sub
cmc
retf
fwait
jecxz
loopne
(bad)
adc
outs
mov
in
popf
adc
mov
scas
mov
mov
adc
xor
push
adc
xchg
(bad)
push
out
hlt
popf
sar
test
int
mov
fwait
sbb
stos
pushf
(bad)
sbb
call
jg
(bad)
mov
mov
mov
xchg
push
out
fdivr
jle
mov
lds
clc
push
mov
push
scas
xor
jmp
ror
popf
cdq
xor
sbb
jnp
inc
mov
(bad)
mov
or
pop
xor
push
sub
adc
xor
or
(bad)
sub
mov
cli
repz
scas
sub
daa
arpl
jp
jo
sub
xor
jg
iret
sub
dec
mov
into
mov
fsub
or
loop
lods
and
je
in
out
mov
ret
inc
neg
stc
int3
out
sub
sti
sar
push
aad
mov
push
xor
lods
pop
add
sbb
rol
cwde
popa
icebp
loop
ss
xor
xor
jmp
std
sbb
stos
test
mov
sub
test
and
popf
pop
push
xchg
push
mov
jl
les
stos
in
pop
stos
jl
ret
or
test
jp
inc
push
xlat
push
(bad)
icebp
out
jo
jns
jne
stc
icebp
jp
mov
(bad)
lods
sti
fcmovb
cdq
mov
lods
jg
push
add
aam
shr
adc
jle
push
out
out
mov
loop
retf
bound
add
rol
mov
mov
push
into
sub
fisubr
cmp
sbb
jbe
mov
dec
lods
mov
jno
push
pop
test
and
add
test
xor
mov
sti
lods
fs
mov
outs
dec
sub
js
pop
vsqrtpd
sub
pop
pushf
aad
add
push
mov
(bad)
push
cmp
mov
arpl
mov
or
aam
xor
stc
sub
dec
inc
daa
pop
xor
inc
cmp
daa
mov
sti
cmp
xchg
sub
aam
mov
dec
test
stos
fisttp
loope
and
das
pop
std
adc
cmp
push
jmp
mov
cwde
adc
arpl
leave
adc
cmp
xchg
pop
addr16
fs
mul
aaa
nop
xor
xor
call
fisubr
pop
div
test
into
or
ins
sbb
clc
jnp
push
adc
pop
ins
inc
pop
lds
mov
adc
popf
nop
adc
or
cmp
dec
jo
cwde
cmp
xchg
and
xchg
retf
pop
xchg
aaa
pop
stc
xchg
jmp
cmps
and
cmp
jle
cld
sbb
xlat
loope
mov
imul
xor
mov
mov
dec
call
jns
jns
call
out
mov
mov
xchg
inc
pop
inc
pop
std
in
out
and
cmp
ins
jne
pop
jl
jmp
mov
add
xchg
cmps
mov
int3
imul
cmp
cdq
jno
enter
ins
ret
int3
rol
sub
fwait
adc
ss
cmp
(bad)
push
mov
mov
cmp
addr16
fnsave
inc
(bad)
cld
mov
test
mov
mov
mov
out
sar
pop
aad
pop
jb
push
sub
jo
fs
ja
jae
push
div
inc
imul
pop
into
cmp
push
pop
loop
xlat
dec
scas
mov
xchg
sbb
arpl
sub
in
lahf
addr16
mov
pop
mov
push
into
popf
mov
xchg
and
jb
lahf
cmps
xchg
out
shl
mov
push
cs
xchg
ins
(bad)
repnz
dec
cli
movs
int3
test
movs
mov
and
je
pop
and
sub
sub
fwait
stos
dec
int
push
fwait
inc
cmp
cli
jns
lea
mov
pop
mov
dec
inc
(bad)
pop
rcl
and
xor
mov
or
les
mov
sub
arpl
sbb
mov
fcom
mov
push
rcl
jp
mov
out
jmp
jl
movs
adc
sbb
rcl
lods
ja
iret
out
fnstenv
movs
sbb
fbld
sbb
ins
cli
sar
in
sbb
daa
or
dec
inc
lods
and
stos
sbb
sar
hlt
jae
adc
idiv
pusha
loope
mov
push
push
aas
scas
or
ja
xchg
jb
and
inc
dec
dec
mov
pop
push
std
loope
aam
cdq
jmp
xchg
jbe
jae
lea
stc
int
test
mov
dec
pushf
movs
shl
fdivr
sahf
jmp
lahf
or
dec
lea
mul
ds
addr16
xchg
xchg
mov
dec
mov
outs
jge
cmp
mov
fstp
test
xlat
sbb
cli
shl
jecxz
add
push
test
enter
(bad)
push
jle
adc
inc
mov
sbb
jp
push
add
mov
pop
cmc
pop
shl
add
add
sub
inc
mov
(bad)
call
dec
push
mov
mov
inc
ins
arpl
ins
repz
push
mov
cmp
jmp
or
sti
mov
xor
mov
loopne
jno
cmps
jp
jge
push
cmp
xor
repz
lods
jo
xor
rcr
adc
push
or
jge
add
sahf
sbb
stos
sbb
imul
add
mov
add
out
imul
(bad)
push
div
mov
push
ror
mov
movs
pop
and
div
cmp
aam
(bad)
push
push
sub
jge
je
test
mov
cdq
push
push
sahf
jmp
les
pop
fs
jae
jecxz
dec
jecxz
ficom
mov
adc
cmp
push
sub
lods
cmp
aas
clc
adc
cmp
cmp
dec
or
and
adc
call
test
mov
xchg
lahf
int3
or
inc
emms
loop
int
retf
jecxz
bound
test
or
add
jge
imul
mov
cmp
(bad)
loope
(bad)
jecxz
fstp
lock
fmul
clc
push
cdq
sbb
int
inc
cwde
push
pop
sub
push
mov
out
loope
clc
ret
xor
imul
add
push
jmp
jle
fdiv
cmc
fisttp
dec
push
aad
outs
and
ror
call
mov
cli
fld
retf
ror
or
enter
push
sub
xchg
dec
pop
das
dec
rol
in
xchg
fs
sub
mov
ja
cmps
mov
xor
push
mov
test
push
repz
out
fwait
ins
xchg
hlt
dec
cdq
xchg
pushf
out
das
pop
dec
mov
xchg
mov
sub
hlt
clc
or
push
shr
and
retf
in
sti
in
daa
inc
je
sub
leave
mov
xor
xchg
out
push
ss
xor
mov
pop
pop
inc
aam
or
iret
xor
ja
daa
mov
(bad)
mov
in
mov
adc
xchg
sbb
mov
dec
(bad)
and
jo
popa
mov
xor
xor
sbb
call
out
dec
jmp
movs
or
sbb
icebp
xor
call
add
popf
xor
push
(bad)
(bad)
and
inc
mov
xchg
test
lock
sub
mov
jmp
daa
leave
jnp
pop
mov
and
sub
add
out
and
adc
or
inc
push
loop
shl
arpl
imul
clc
in
mov
jp
addr16
xlat
bound
push
int
out
test
int3
mov
pop
mov
sbb
mov
call
push
lods
xor
imul
and
movs
xor
push
(bad)
xor
stc
icebp
mov
sbb
cmp
mov
sbb
addr16
xchg
leave
or
mov
out
imul
fmul
xor
sbb
call
sahf
mov
cmp
lods
pop
aad
lods
mov
ins
es
ins
or
fwait
jmp
cdq
shl
mov
stos
popf
pop
or
mov
xor
ret
test
pusha
shl
push
xchg
(bad)
cmps
movs
inc
fadd
and
cmc
movs
xchg
push
les
dec
inc
test
pop
sub
push
test
dec
sbb
inc
iret
push
popf
fist
mov
sbb
out
xlat
mov
push
arpl
std
aaa
fwait
or
sar
ins
mov
hlt
mov
pop
into
ins
add
adc
lea
mov
jne
adc
add
xor
adc
dec
inc
jnp
ins
mov
jge
sbb
clc
mov
xor
fcomi
or
cmc
ins
shl
popf
xchg
imul
(bad)
mov
dec
mov
arpl
pop
cli
js
push
cmp
add
sti
inc
out
cmp
inc
rcl
mov
rcr
push
adc
xchg
push
jp
call
pop
shl
cmps
dec
inc
and
cmc
jno
pop
mov
pop
mov
mov
xchg
sbb
cmps
mov
je
nop
dec
xchg
outs
cmp
push
cmp
add
call
inc
jl
xchg
idiv
push
push
mov
inc
sub
adc
xchg
push
push
add
pop
mov
hlt
aam
fs
push
(bad)
push
mov
dec
sub
xor
or
sbb
mov
shl
xor
cmp
leave
cmp
mov
aaa
mov
inc
push
push
sub
mov
outs
and
jbe
add
add
push
cmp
push
xor
fldenv
movs
push
xchg
adc
bnd
jnp
repz
je
push
and
test
leave
push
jmp
sbb
in
out
adc
xchg
jne
ins
xor
cmps
inc
nop
lock
push
sbb
mov
mov
and
dec
or
sub
pop
mov
sub
repz
and
popf
(bad)
xchg
mov
inc
in
int3
(bad)
add
lods
xor
adc
jno
dec
xchg
inc
cli
cmp
pop
rcl
jmp
mov
(bad)
mov
sbb
out
nop
xor
xlat
sbb
sbb
clc
sbb
movs
jge
push
add
fnstsw
adc
loopne
sub
out
sar
nop
push
cdq
lods
(bad)
xchg
sbb
outs
and
lock
sti
loope
jmp
sar
sbb
pop
mov
mov
jb
rol
pop
je
inc
dec
and
sub
les
aam
mov
movs
xchg
mov
enter
imul
sbb
xor
repz
sbb
jb
addr16
pop
add
rcl
pushf
adc
pop
xchg
movs
pushf
push
mov
les
mov
pop
out
loop
cmp
inc
jne
dec
cmps
mov
jmp
outs
pavgw
lods
or
out
dec
lea
icebp
gs
data16
jns
call
xchg
sbb
xchg
call
aas
or
(bad)
add
pop
sub
xor
rcl
jmp
jns
cmp
retf
mov
aad
cmp
in
repnz
loope
or
mov
test
call
mov
and
adc
repz
push
and
inc
pop
xlat
les
jl
dec
test
cli
mov
mov
ret
(bad)
repz
cdq
hlt
push
pop
out
jp
mov
in
rcl
fidiv
lea
fbld
push
xor
arpl
hlt
jbe
imul
loopne
call
xor
push
pop
hlt
jb
(bad)
test
push
arpl
inc
(bad)
mov
fcomip
mov
test
lds
dec
call
clc
mov
jmp
and
xor
jbe
repnz
mov
call
mov
pop
and
imul
cmps
inc
dec
and
cmc
imul
dec
inc
dec
rcl
scas
imul
fisttp
lea
ret
xlat
xchg
stc
fcom
xor
xor
shr
addr16
mov
call
mov
dec
fild
repnz
call
int
push
psubb
mov
cmc
or
push
xchg
(bad)
outs
cmp
sub
shl
loope
jl
std
adc
loope
jl
pop
mov
dec
shr
mov
sbb
xor
mov
xchg
test
and
push
jmp
fistp
xchg
pop
mov
and
adc
dec
mov
rol
nop
cmp
js
adc
inc
ds
mov
mov
push
pushf
out
inc
ss
mov
mov
sub
arpl
mov
mov
fadd
dec
mov
vmovdqa
stos
icebp
inc
mov
xor
xlat
mov
arpl
iret
fiadd
sbb
jae
mov
cwde
ins
mov
mov
push
adc
and
cmps
(bad)
mov
jecxz
inc
and
aad
xor
pushf
add
pop
and
cmp
mov
jg
ja
xchg
mov
aaa
pop
je
inc
push
gs
jmp
bound
scas
inc
cmp
call
scas
(bad)
push
adc
push
adc
xchg
xchg
jne
cli
retf
cli
add
daa
das
scas
xchg
and
movs
fsubr
mov
xchg
shl
and
jne
sbb
out
push
imul
dec
std
ins
iret
daa
xor
sahf
std
aam
dec
sar
clc
imul
cwde
aas
test
jae
scas
call
ja
jb
sbb
ja
jb
loop
push
icebp
xlat
mov
and
xchg
hlt
or
xlat
xor
sbb
sub
ins
ror
dec
jmp
test
fimul
fisub
push
in
sbb
loop
(bad)
in
sub
sbb
pusha
and
jb
hlt
sbb
push
adc
jae
cmp
pop
repz
xabort
inc
stos
sub
pushf
cmp
cld
or
cs
repz
fistp
add
imul
adc
retf
or
sbb
jbe
dec
and
xor
loopne
mov
dec
cld
out
(bad)
push
adc
mov
mov
cmps
aam
fnstsw
scas
out
das
push
push
sbb
mov
vshufps
pusha
sahf
and
out
adc
jl
bound
mov
xor
push
xor
pop
sti
jbe
icebp
or
mov
dec
retf
imul
mov
jae
iret
out
pop
sbb
std
loope
rol
int
sub
or
xor
std
xchg
mov
clc
mov
pop
xor
push
adc
fcomp
das
fsub
mov
mov
dec
scas
ins
sbb
push
sbb
mov
(bad)
jbe
mov
mov
(bad)
out
rcl
pop
je
scas
mov
loop
dec
dec
cmps
mov
push
repnz
sub
cwde
icebp
pushf
push
mov
cmp
arpl
pop
nop
bound
mov
clc
std
add
push
lods
cmc
repnz
add
repz
xchg
mov
mov
loop
icebp
xor
add
sub
(bad)
or
js
sub
jns
je
inc
adc
pop
mov
cmp
mul
rol
(bad)
retf
pop
int3
daa
aaa
jp
sahf
(bad)
fnstsw
and
add
xor
call
in
xor
or
js
pop
scas
icebp
pop
in
jo
dec
in
add
jmp
ret
out
inc
mov
mov
mov
adc
aad
jns
mov
push
jmp
mov
cli
jno
ret
lea
or
out
xchg
push
sbb
cdq
dec
popf
loopne
xlat
sub
ds
sti
mov
in
outs
adc
outs
pop
leave
ror
or
adc
(bad)
shl
scas
ja
mov
out
aas
in
or
out
or
call
ins
call
popf
mov
fidiv
call
out
(bad)
outs
rcr
(bad)
in
jbe
dec
pop
mov
push
push
push
xchg
retf
jns
jmp
fidivr
cmps
adc
jmp
fld
cli
repz
push
adc
jno
int3
xchg
xchg
cdq
jno
pop
scas
out
push
xchg
pop
sbb
retf
mov
imul
mov
mov
xchg
mul
icebp
xlat
bound
sbb
(bad)
repnz
movs
sbb
out
(bad)
pushf
jmp
xchg
out
mov
sbb
jle
lods
imul
bound
mov
mov
scas
in
xlat
xor
jp
jecxz
sub
fcmovne
in
idiv
mov
ins
cwde
and
fbld
sub
jbe
ins
mov
inc
inc
pop
popf
mov
mov
mov
rcl
fs
retf
sub
mov
dec
fist
(bad)
(bad)
fnstenv
shl
pop
icebp
jmp
mov
stc
popa
rcl
mov
dec
int3
fs
mov
mov
push
jge
mov
cld
ret
fisttp
jmp
xor
jmp
movs
call
jecxz
outs
mov
dec
mov
xor
not
(bad)
jmp
(bad)
mov
mov
ss
or
adc
cs
pop
xlat
popf
jg
out
repnz
(bad)
xchg
jl
addr16
clc
jle
jl
mov
pop
pop
dec
xor
stos
lods
pmuludq
aaa
jae
dec
pop
(bad)
xchg
cdq
jg
and
arpl
mov
aaa
push
xchg
test
stos
xchg
imul
repnz
pusha
rol
cmp
mov
ins
fcom
and
repz
dec
lea
jge
iret
push
push
pop
mov
jl
(bad)
sti
addr16
int3
xor
fistp
out
pushf
loope
add
dec
xor
jp
pushf
fistp
shr
pop
in
aaa
lock
in
push
(bad)
xchg
pop
addr16
sub
lock
daa
lock
mov
and
repz
pop
push
aas
aad
int
cmp
and
inc
loope
je
xchg
cmp
cmp
mov
sub
fmulp
clc
sti
xchg
xchg
pushf
movlps
inc
inc
or
test
add
data16
ss
push
in
into
fs
out
xchg
mov
inc
test
pop
mov
jb
daa
pop
or
jo
ret
cli
call
popf
sbb
adc
into
mov
pop
mov
dec
and
mov
mov
mov
xor
mov
js
fucomip
gs
dec
mov
sar
jl
jge
lods
or
aaa
in
(bad)
lock
add
mov
lahf
imul
outs
out
dec
and
adc
mov
cli
cmps
jmp
scas
stc
sub
(bad)
jecxz
mov
cmps
add
pop
mov
sbb
cwde
(bad)
fcomp
ret
cld
std
pop
cmp
stc
fsub
nop
inc
mov
adc
push
(bad)
sub
jbe
pop
adc
das
in
call
mov
jmp
iret
out
mov
and
mov
outs
jns
jmp
dec
jmp
adc
hlt
push
fwait
mov
cmps
out
pop
mov
xor
in
xchg
arpl
ret
bnd
mov
cmp
mov
lea
test
pop
xchg
repz
stos
cwde
aaa
neg
jns
mov
fldenv
mov
mov
mov
cmc
call
jbe
popf
les
push
jg
mov
int
gs
outs
jnp
(bad)
xchg
push
out
xchg
jl
stc
push
jno
dec
addr16
test
jo
pop
fdivr
pop
cs
sti
adc
jl
or
test
xor
xchg
sbb
pop
addr16
mov
pop
pop
lds
add
inc
mov
sbb
mov
add
pop
arpl
es
push
push
jmp
mov
mov
cmp
(bad)
rol
jne
push
retf
pop
aas
jl
mov
xchg
xchg
xchg
out
xchg
adc
adc
sbb
loopne
mov
inc
dec
inc
adc
inc
movs
mov
cmp
sti
sti
(bad)
jp
cli
lods
imul
cdq
fnstcw
sahf
cmp
addr16
imul
jmp
pop
fwait
sbb
push
loopne
pop
push
and
mov
pop
mov
dec
fadd
(bad)
lock
cwde
cmps
mov
mov
ficom
imul
push
cmp
sbb
sub
sbb
(bad)
jle
imul
pop
bound
cmp
xchg
fdivr
mov
aad
sbb
sub
fs
and
cmps
mov
or
fiadd
ror
(bad)
daa
add
jl
mov
bswap
inc
cli
sbb
test
ss
fadd
inc
xchg
repnz
retf
fwait
mov
out
push
and
pop
test
pop
mov
sbb
leave
es
js
pop
pushf
fptan
pop
cmps
mov
or
imul
push
and
xor
das
xor
pop
loopne
popa
icebp
imul
jle
movs
daa
lds
adc
out
push
xor
push
int
inc
lods
int3
adc
sbb
xor
test
call
aam
cmps
call
dec
mov
xor
cmp
jno
shl
xchg
call
or
ins
retf
iret
xor
sti
bound
push
iret
std
mov
mov
jne
cli
sub
inc
retf
mov
adc
loop
and
xchg
push
push
out
inc
lea
push
fdivr
(bad)
jg
pop
mov
ror
retf
shl
repz
jo
dec
call
inc
mov
xchg
push
dec
mov
mov
xchg
pusha
jno
cmp
dec
and
xchg
ja
test
add
sahf
cmp
and
inc
(bad)
mov
cwde
dec
sbb
sbb
les
push
cs
mov
xor
push
pop
inc
push
arpl
push
inc
out
or
pop
mov
pop
dec
pop
hlt
push
dec
shr
dec
cmps
jle
xchg
icebp
xchg
push
jne
cdq
sub
jae
dec
or
push
mov
(bad)
mov
loopne
bt
sti
mov
push
stos
jo
jae
retf
call
jo
cmps
fcmovbe
icebp
mov
and
adc
lods
dec
push
nop
push
enter
mov
outs
repnz
jo
mov
jne
and
jnp
jnp
dec
mov
jmp
scas
lahf
mov
cmc
fs
adc
jmp
push
mov
mov
pop
loope
mov
push
fbld
es
ret
cmp
mov
or
mov
rol
div
in
das
or
pop
sub
xor
out
push
jg
xchg
stos
call
fwait
aaa
cmps
daa
mov
mov
jns
xchg
cld
jmp
ret
shl
(bad)
mov
or
stos
fsubr
mov
retf
push
jl
aad
(bad)
cs
mov
xchg
int3
imul
or
jl
out
pop
pop
push
cmp
inc
xchg
dec
sub
iret
in
popa
aaa
or
mov
(bad)
(bad)
movs
fistp
in
jge
xor
pop
lods
xchg
cli
mov
push
jne
lds
dec
pop
stos
push
mov
in
mov
cmp
mov
xor
push
pop
ins
jno
sahf
movs
out
fadd
into
mov
jbe
shl
mov
inc
pop
rcl
push
test
jge
mov
lea
(bad)
in
jns
pop
shl
mov
xchg
xchg
mov
mov
std
pop
or
sti
call
dec
cmp
pop
pop
mov
sub
cmp
popa
sahf
mov
or
sbb
aaa
stc
enter
cmps
es
xchg
retf
cld
and
test
pop
int3
push
add
jl
mov
leave
test
mov
faddp
inc
xchg
push
gs
movs
sbb
xchg
lods
adc
add
neg
dec
hlt
mov
sti
xchg
cmps
pop
inc
in
les
cld
dec
pushw
push
mov
mov
aas
jne
push
jmp
cld
sti
cmc
ds
dec
jge
stos
ret
mov
add
push
push
dec
xchg
cmp
and
sahf
mul
pop
jp
fstp
pop
shl
mov
icebp
cdq
lahf
sbb
inc
xor
jmp
sub
pop
pop
ins
jp
shl
push
cmps
push
cmc
xor
cmps
sub
add
setnp
mov
xchg
clc
push
int
mov
mov
repnz
sti
out
adc
mov
jmp
jmp
add
pop
mov
jae
cmp
mov
adc
inc
icebp
(bad)
and
ret
dec
or
mov
ss
gs
xchg
fild
sub
jecxz
in
call
loope
pop
pop
xor
jg
push
outs
mov
enter
mov
(bad)
lds
xchg
mov
in
pop
xchg
shl
cmps
das
test
dec
fidiv
mov
inc
shl
(bad)
daa
cdq
mov
cdq
(bad)
push
(bad)
or
iret
push
pop
pop
mov
es
(bad)
sbb
jbe
or
xor
push
outs
sbb
cmp
ds
mov
out
adc
pop
jae
out
jo
repz
or
cmps
jge
bound
scas
sbb
fcmovnb
add
cld
adc
mov
pop
imul
loope
ja
mov
hlt
nop
or
dec
pop
mov
and
pop
fsubp
lahf
mov
adc
dec
sbb
lds
jmp
jno
in
loop
xor
mov
iret
fadd
out
loopne
sar
das
mov
fdiv
cmps
call
push
mov
sub
(bad)
xchg
repz
cmp
aad
call
out
jno
iret
jle
in
mov
or
xchg
retf
xchg
cmp
(bad)
daa
iret
adc
mov
stos
aaa
lods
popf
xchg
jge
jo
pop
clc
jbe
pop
shl
dec
(bad)
call
rcr
jp
xor
mov
inc
(bad)
aas
and
shl
call
and
nop
idiv
gs
xor
xchg
in
shr
ds
push
stos
dec
das
out
pushf
js
cmp
cmp
sub
dec
fnstenv
jmp
cwde
(bad)
icebp
sbb
cld
sub
(bad)
rcl
or
dec
(bad)
loope
xor
mov
shl
lock
cmp
sub
and
ja
push
into
and
out
mov
pop
cdq
pop
mov
aam
fimul
pop
pop
pop
mov
sti
cmc
stc
cli
jae
dec
sbb
dec
mov
xchg
iret
jecxz
xlat
or
int3
test
add
ss
sub
pop
fcomip
jnp
push
push
mov
xchg
jbe
ss
(bad)
fistp
stc
lahf
dec
repz
test
repnz
pusha
enter
sti
ins
int
call
loope
mov
scas
cmps
mov
cmp
adc
sub
jbe
push
jmp
hlt
mov
pushaw
out
or
mov
out
jmp
out
out
js
pusha
and
adc
sub
inc
jbe
enter
push
sahf
test
mov
sbb
std
xchg
adc
(bad)
out
mov
int3
shl
cmp
repnz
pop
adc
dec
cmc
xor
in
mov
jae
cmps
sub
pop
adc
cdq
cmp
mov
push
jb
jmp
pop
hlt
mov
inc
and
out
mov
and
cwde
stos
pop
lods
inc
ds
sub
fimul
jb
push
pop
adc
inc
sub
retf
mov
fwait
les
and
mov
pop
arpl
mov
jno
mov
inc
repz
mov
int3
dec
loopne
dec
adc
cmp
stos
mov
loope
mov
pop
fwait
test
repnz
push
adc
les
xchg
lods
fiadd
mov
cmp
shr
add
stos
push
jp
mov
(bad)
retf
xchg
ins
push
(bad)
xchg
shr
add
sahf
test
paddw
not
mov
mov
cmp
add
int3
xchg
es
mov
adc
(bad)
adc
pop
jmp
js
add
daa
test
push
(bad)
xchg
popf
adc
mov
mov
mov
fisttp
test
push
sbb
aam
pop
sub
imul
fstp
mov
fsub
out
adc
pop
jle
jge
aaa
movs
mov
int3
lahf
mov
(bad)
je
mov
jmp
shl
fs
pop
inc
ja
ja
sbb
ds
push
aam
das
sbb
fild
jae
cmp
cmps
push
pop
fdiv
es
mov
loopne
cli
xor
in
xchg
cmp
inc
jle
das
lock
push
dec
lock
add
out
shl
bound
cmp
inc
outs
sub
fist
mov
js
cld
mov
inc
jae
inc
in
shl
enter
inc
into
cmp
jge
pop
dec
push
push
mov
push
xchg
or
and
cmp
sub
inc
dec
loop
leave
daa
jl
dec
adc
mov
sbb
hlt
mov
cmp
xor
retf
or
inc
dec
inc
cmc
adc
int3
sub
fldcw
retf
aad
jne
aaa
iret
cmova
cmps
inc
push
push
pop
and
xchg
push
jno
inc
scas
dec
sahf
rcr
inc
inc
cmps
sub
cmps
jae
dec
dec
xchg
inc
mov
mov
out
pop
mov
loop
stos
mov
mov
lahf
imul
loop
inc
mov
mov
push
mov
stos
es
inc
movs
lahf
popf
lds
cld
mov
cmp
mov
adc
xchg
cmp
sbb
dec
sbb
icebp
hlt
inc
pop
jge
cmp
xchg
or
in
xor
mov
adc
and
mov
push
icebp
jge
xchg
pop
mov
imul
in
mov
pop
dec
fst
ja
retf
push
cdq
xchg
jl
xlat
cwde
out
mov
in
cdq
jl
or
js
int
cmp
es
cmp
div
into
(bad)
(bad)
adc
pop
pop
leave
cmp
or
mov
not
adc
retf
push
es
repnz
packsswb
std
(bad)
(bad)
mov
and
mov
imul
mov
xor
imul
jge
in
xchg
retf
ds
ins
sbb
adc
dec
rcr
daa
imul
fist
xchg
mov
and
adc
lea
shr
add
sub
test
add
repnz
cmc
xchg
xor
push
jl
imul
imul
cli
ret
(bad)
not
(bad)
or
stos
out
ins
dec
push
jnp
mov
inc
aam
xor
pop
rol
jp
xchg
imul
push
and
push
xchg
sub
mov
jns
mov
sahf
cmp
(bad)
(bad)
jecxz
dec
mov
aaa
call
lds
mov
mov
pop
dec
jne
int3
pop
dec
cmp
cmp
ret
scas
push
fwait
dec
or
jno
or
aam
aam
div
add
loope
and
retf
dec
stos
push
xchg
and
sahf
mov
mov
sub
jae
jae
mov
pop
imul
and
cdq
mov
test
fsub
xchg
in
adc
jecxz
mov
push
scas
inc
mov
ret
add
int3
popa
add
sbb
xor
popf
jnp
in
imul
fdivr
cdq
mov
scas
pop
adc
sub
dec
stos
ret
loop
push
sbb
cli
lahf
loopne
sar
icebp
lock
out
dec
dec
jg
cmps
push
cmp
push
jmp
(bad)
cmp
lods
dec
push
loop
push
jbe
dec
ss
loopne
inc
inc
jge
clc
push
cmc
xlat
mov
mov
sub
push
fwait
push
cld
xchg
stos
pop
jae
mov
pop
jnp
sub
movs
mov
sbb
sar
mov
sub
mov
test
mov
push
int
dec
xlat
outs
push
cwde
mov
push
(bad)
data16
test
lahf
or
jle
sub
mov
sbb
push
mov
retf
cmp
or
push
cmp
test
in
xor
jae
ins
pop
ja
push
sti
pop
jmp
call
iret
add
loop
add
xchg
jmp
jno
push
xchg
ror
hlt
out
inc
xchg
mov
push
pop
mov
imul
add
mov
scas
(bad)
sub
gs
push
loope
xlat
cmp
cld
pop
fld
call
cmp
fsubp
call
sub
fcmovb
hlt
mov
pop
ins
sbb
sub
int3
pop
mov
pop
xchg
shr
leave
push
in
fist
test
scas
cmp
aaa
jmp
fwait
or
add
mov
sub
sahf
(bad)
scas
(bad)
adc
mov
push
bound
rcr
inc
pop
push
add
xchg
dec
out
sbb
in
fsub
cwde
dec
mov
sar
xor
ins
mov
(bad)
sbb
stos
or
jbe
xor
aaa
popa
ficomp
clc
and
jns
into
inc
(bad)
(bad)
xchg
and
xchg
sub
and
ret
mov
push
pop
mov
add
in
mov
inc
pushf
jno
and
rol
ret
add
subps
lods
mov
mov
mul
and
call
jle
dec
dec
jl
mov
cmc
xchg
ror
mov
lods
(bad)
aaa
stos
push
fild
inc
ret
inc
hlt
mov
inc
jp
adc
xor
push
scas
mov
pop
test
push
jns
jo
xchg
stos
scas
add
pop
imul
test
mov
jb
mov
mov
xchg
addr16
jl
pop
in
iret
adc
mov
mov
shr
shr
repz
jge
mov
inc
(bad)
into
ret
test
jmp
aam
push
js
dec
ds
es
add
inc
bsf
inc
sti
xor
ror
dec
leave
std
pop
mov
fwait
jns
jbe
jno
add
(bad)
out
lods
scas
sti
(bad)
leave
cdq
mov
jle
lds
cmp
xchg
sub
popf
outs
(bad)
xor
mov
stos
fbstp
add
adc
in
js
ret
cmps
xlat
cmps
lahf
into
outs
mov
cmps
(bad)
loope
aaa
sbb
test
xchg
xlat
addr16
pop
ds
xchg
out
cwde
cmp
jno
cli
inc
movs
mov
movs
dec
inc
icebp
jle
xchg
mul
call
add
adc
sub
fisubr
scas
sub
xor
adc
call
pop
and
mov
ins
arpl
inc
xchg
pop
sub
push
(bad)
(bad)
mov
repz
fwait
push
inc
pop
mov
(bad)
les
inc
pop
aam
mov
cmp
cdq
pop
mov
jge
in
add
movs
fwait
cmp
ror
nop
cmp
add
das
outs
dec
stos
adc
addr16
xor
jg
pop
push
jo
repnz
inc
das
jmp
lods
push
pop
out
int3
push
pop
aaa
mov
jmp
xor
or
cwde
gs
inc
test
ja
mov
repnz
push
test
cmps
stos
add
mov
movs
cmp
ret
sbb
or
fistp
mov
aad
dec
or
rcl
xlat
sub
pop
cs
out
mov
dec
nop
outs
shr
adc
dec
inc
mov
dec
in
stos
int3
jb
or
std
jnp
aad
in
mov
gs
and
or
xchg
retf
and
(bad)
mov
dec
inc
ins
call
mov
xor
pop
mov
cmp
lds
aaa
out
shr
aad
mov
inc
mov
mov
mov
pop
xor
(bad)
cmp
mov
ins
int
jle
mov
popa
cmp
jnp
push
enter
aam
dec
xchg
jmp
mov
inc
pop
mov
mov
in
jmp
aad
cmp
dec
cmp
imul
xor
xchg
sbb
jbe
push
ins
xchg
mov
mov
movs
rcl
clc
jmp
add
inc
jnp
xchg
xchg
(bad)
call
add
sub
aad
add
loopne
xchg
pop
loop
cs
clc
es
(bad)
sub
push
inc
adc
mov
ins
adc
sub
mov
jmp
push
xchg
push
hlt
push
out
mov
mov
inc
dec
jl
mov
enter
mov
push
mov
push
ret
clc
xlat
inc
or
lods
mov
stc
es
adc
mov
jno
pop
test
icebp
ins
in
movs
sbb
push
not
xchg
push
repz
mov
idiv
outs
and
jnp
sbb
xchg
out
retf
lods
mov
sahf
das
scas
nop
ins
jne
mov
xchg
xor
(bad)
daa
outs
cmp
jne
cmc
xchg
cs
fisttp
jge
push
je
in
test
jmp
sub
cmp
repnz
jge
adc
outs
data16
cld
add
aas
fnstenv
jb
retf
iret
(bad)
rcl
mov
mov
push
imul
jle
aam
mov
ds
mov
aad
push
dec
sbb
icebp
iret
popa
scas
pop
ss
mov
mov
mov
xor
arpl
push
sub
mov
into
jle
stc
fucomi
out
daa
daa
ins
ss
mov
pop
sbb
xchg
repz
lods
xchg
mov
pop
pop
pop
(bad)
cs
xlat
scas
sub
mov
ficomp
mov
sbb
movs
fld
ins
out
sti
icebp
std
push
arpl
fnstenv
cmp
out
loop
push
in
test
outs
ss
aaa
repnz
div
std
(bad)
jp
inc
cmp
pop
enter
mov
mov
jns
lock
in
sbb
add
ds
es
jg
xchg
fcom
(bad)
imul
in
pop
in
je
out
pop
out
sar
or
cmps
xchg
jnp
sub
pusha
sbb
sub
js
or
mov
icebp
jns
jne
(bad)
ror
sbb
jne
ss
aas
es
mov
or
stos
cli
inc
add
or
pop
push
in
jb
jo
ins
ret
arpl
fdiv
adc
cmp
data16
cmps
hlt
pop
loopne
cmc
sbb
push
dec
cmp
ret
scas
inc
cmps
mov
jg
in
mov
scas
jmp
xor
or
dec
mov
stos
and
jle
sbb
dec
cmps
daa
jle
push
push
sub
inc
pusha
cmp
cmp
cmp
mov
xchg
ja
push
dec
inc
or
lds
in
addr16
retf
shl
and
mov
das
outs
hlt
out
iret
adc
(bad)
cmc
je
sub
xchg
fsubrp
mov
scas
ficomp
add
push
cmp
test
arpl
mov
rcl
adc
ss
adc
loop
neg
mov
sbb
cmp
sbb
aad
push
push
mov
pushf
mov
push
jmp
fld
xchg
sub
enter
inc
in
scas
xor
fisubr
xor
test
not
loopne
int
(bad)
jnp
pushf
scas
stc
std
inc
retf
adc
and
idiv
push
cli
fs
ins
in
(bad)
xor
test
cli
dec
push
and
mov
outs
add
cmps
and
mov
or
iret
not
sahf
mov
push
(bad)
sub
and
movs
lods
(bad)
pop
add
push
ins
retf
out
ds
mov
sbb
cmp
pushf
sbb
cmp
jle
mov
and
jge
sub
mov
cmp
push
sub
mov
and
jae
iret
dec
dec
setbe
lods
or
dec
std
xlat
repnz
inc
test
mov
fdiv
xor
and
add
lods
popf
inc
es
mov
mov
cmp
xchg
sub
ror
xchg
loop
daa
gs
xor
sar
add
pop
xchg
adc
mov
xchg
sahf
ds
jmp
push
ficom
and
shl
dec
jp
cs
sbb
jns
in
xor
push
mov
mov
out
inc
inc
lahf
pop
aaa
test
add
and
mov
bswap
xchg
xor
push
sbb
add
mov
jne
inc
js
cdq
test
stos
shl
int
sub
xchg
loopne
ret
call
or
mov
mul
mov
rcl
enter
mov
je
aad
push
mov
ins
stc
fucomip
add
xchg
mov
ret
push
push
ret
outs
mov
popa
movs
cs
js
(bad)
leave
xchg
xchg
or
outs
popf
inc
ds
int
ret
mov
ret
jae
in
retf
jmp
add
ins
cmc
movs
(bad)
or
mov
popf
mov
push
outs
push
mov
jne
aam
ret
repnz
ret
jg
clc
hlt
mov
cmps
setnp
lods
lds
jecxz
lods
inc
jns
pop
cmp
push
and
sti
sub
jle
sbb
ret
push
std
in
pop
neg
xchg
sub
rol
mov
push
jge
cdq
push
leave
ins
and
aad
xor
ror
mov
scas
adc
dec
cmp
jecxz
in
ret
jnp
add
and
icebp
inc
xlat
outs
sub
dec
xchg
sub
outs
adc
mov
mov
scas
xlat
and
or
cld
mov
cmps
es
arpl
outs
repz
cmp
cmps
sub
int3
pusha
cdq
popf
cmps
int3
jae
loop
outs
dec
pop
ja
and
mov
cmps
push
mov
sbb
sub
sahf
fadd
xchg
mov
jbe
adc
repnz
mov
pop
cmpxchg
xchg
retf
cmps
in
add
pop
fwait
or
or
fisttp
dec
push
mov
sbb
pop
not
mov
out
mov
mov
sahf
mov
fadd
retf
gs
pop
mov
cs
aad
test
xchg
cli
mov
mov
inc
aaa
dec
popf
lods
cdq
outs
fist
dec
fiadd
mov
mov
lock
mov
dec
les
clc
arpl
xor
ret
sub
sub
adc
sub
cld
cmp
mov
mov
push
xchg
mov
jecxz
push
scas
sahf
popa
repnz
jmp
sar
push
adc
icebp
sar
in
inc
fxch
adc
out
fsub
adc
jno
shl
xchg
mov
sbb
fnstsw
pop
into
mov
sub
leave
fild
pop
or
dec
pop
clc
shl
daa
cdq
imul
and
jle
pop
mov
(bad)
adc
and
mov
jb
imul
movs
enter
fs
out
or
jns
out
add
push
outs
stos
xchg
lods
mov
popf
mov
movs
mov
jne
inc
push
adc
add
or
adc
lahf
out
pop
xor
cmc
fwait
jnp
in
push
mov
lahf
push
hlt
jae
lds
pop
stc
and
sub
ss
and
test
mov
outs
scas
shl
fcmovb
retf
cmc
cmp
aad
cmp
cmp
and
mov
dec
inc
mov
dec
mov
cmc
lods
sbb
cs
push
not
mov
mov
fcmovbe
push
ror
pop
sahf
adc
fwait
test
scas
jp
ret
rcr
jns
mov
mov
or
lods
in
jp
mov
lds
adc
aas
dec
cwde
sti
test
fild
pop
not
mov
inc
push
adc
dec
pop
sub
fisub
xchg
push
or
pop
mov
(bad)
loop
xchg
push
jecxz
adc
mov
retf
push
mov
xchg
aad
xor
xchg
pop
aaa
pushf
jle
cmp
inc
outs
cwde
repnz
inc
adc
cdq
aaa
jmp
lahf
xlat
shr
in
add
(bad)
in
enter
sar
cwde
out
mov
xlat
mov
sub
std
xor
add
in
adc
cmps
scas
popa
sahf
cmp
cli
enter
push
dec
pop
xor
jnp
out
and
xchg
loop
push
into
call
push
test
fcmovbe
sbb
cmp
push
outs
mov
iret
int3
adc
out
xchg
fstp
cmc
cmp
aaa
push
and
pop
mov
loopne
xor
push
sbb
popa
aas
arpl
add
cmp
push
pop
fwait
lods
add
lds
and
in
outs
xor
mov
sbb
jae
bound
adc
loop
sti
inc
cs
jb
cld
mov
clc
scas
fdivr
adc
sar
(bad)
mov
pop
pop
sti
xor
mov
stc
fist
call
push
adc
pop
pop
adc
gs
xor
popa
(bad)
push
jo
inc
jno
cld
inc
movs
xor
popa
or
ret
jge
jge
jmp
mov
sar
nop
sbb
leave
inc
in
sub
neg
push
and
sub
inc
xlat
fnsave
lock
xchg
imul
aam
cdq
icebp
or
test
mov
sub
add
cmp
cmp
mov
int3
xchg
stos
daa
out
adc
xor
dec
shl
wbinvd
aaa
jge
ja
xor
(bad)
cli
mov
(bad)
movs
xor
jns
adc
idiv
push
call
fld
loopne
stos
pusha
jmp
inc
mov
(bad)
push
pushf
cmp
sbb
xlat
cmps
adc
or
sub
cmp
sbb
es
hlt
cmp
mov
test
popf
loope
push
out
push
mov
sub
and
aad
pop
popa
lahf
ins
mov
or
dec
ins
mov
adc
stc
push
das
in
jno
test
fdiv
stos
mov
adc
pop
push
mov
ret
loope
inc
jbe
xor
sti
jmp
idiv
cmc
pop
jle
xchg
dec
jle
cmp
cmp
(bad)
mov
pop
sub
aam
pop
shl
pop
sahf
jmp
fdivr
cmp
cld
stos
ret
or
ret
int3
pop
dec
fimul
dec
or
in
aaa
rol
jb
stos
inc
(bad)
aam
jp
fs
imul
mov
sbb
mov
fs
aad
(bad)
sti
adc
jmp
and
cmp
std
dec
scas
movs
inc
nop
ret
fs
retf
call
(bad)
jb
test
popf
aaa
and
pop
or
outs
xchg
ficomp
cmc
jbe
out
mov
jae
mov
loop
repz
outs
fld
adc
pop
mov
es
mov
ret
mov
sbb
stc
repnz
in
test
jbe
call
jns
xlat
aam
mov
or
xchg
fnstcw
(bad)
loope
jge
das
les
jo
fwait
adc
add
mov
lock
cmp
mov
jecxz
stos
cmp
stos
cmp
mov
jne
mov
test
sub
mov
fst
scas
pop
scas
pop
mov
and
sahf
int
shl
lahf
sbb
fdiv
fiadd
xor
dec
ret
neg
push
ret
dec
(bad)
pop
jge
lock
add
mov
aaa
arpl
iret
sahf
jecxz
mov
or
and
arpl
inc
xchg
and
(bad)
xchg
pop
fisttp
in
mov
daa
mov
mov
lea
and
in
sahf
lea
movs
pop
pop
jle
sbb
adc
pop
scas
xor
gs
movs
and
rep
in
test
inc
xor
ret
mov
pushw
int
jp
xchg
xchg
dec
jbe
mul
pop
lods
jne
or
jge
mov
sub
cmps
cmp
pop
jmp
lahf
lods
xor
(bad)
xchg
push
out
mov
jns
neg
dec
jg
pusha
xchg
sbb
dec
and
call
stos
je
xchg
or
fmul
xor
fiadd
icebp
or
jp
xchg
mov
sbb
push
xor
loope
xor
cmc
sti
aam
fsubrp
and
mov
jle
push
mov
jl
mov
mov
ret
and
sahf
xchg
fst
jb
retf
jns
or
loope
ins
mov
stos
sar
icebp
and
or
sub
adc
jb
adc
xor
pop
dec
sub
js
adc
test
es
ror
mov
sbb
push
fiadd
out
leave
cmp
sar
stc
push
pop
cmp
add
xor
jns
cmc
cmp
(bad)
xor
retf
popa
(bad)
mov
ror
mov
sub
mov
div
mov
or
repnz
xor
in
jne
or
repnz
dec
mov
add
mov
sub
stos
push
fmul
pusha
add
ss
repz
xor
push
xchg
mov
shr
in
mov
retf
sbb
movs
pop
and
push
and
je
test
add
outs
cmc
dec
shr
(bad)
xchg
inc
rcl
xchg
sub
or
xor
push
pop
adc
les
ror
jge
xor
out
xchg
push
ds
pop
fadd
xor
lods
mov
xor
fstp
test
loopne
fcmove
mov
adc
cld
and
xlat
mov
and
int
test
pop
xlat
cmc
sub
int3
test
mov
mov
imul
jg
sub
dec
xchg
addr16
pop
in
das
push
mov
retf
dec
mov
outs
adc
idiv
in
mov
and
fcomp
dec
(bad)
int
cld
sahf
mov
add
rcr
(bad)
jae
xchg
adc
leave
and
cs
ror
or
xor
cmp
sbb
push
jne
inc
stos
pop
push
xchg
out
mov
xor
das
idiv
mov
mov
popf
xor
int3
xor
outs
lahf
rol
xchg
xchg
xchg
inc
pushf
and
xchg
inc
hlt
jb
cs
out
or
ret
xlat
cmp
cmp
test
or
xor
cwde
outs
jnp
push
lods
pop
(bad)
fsubr
xchg
inc
jp
loop
xchg
push
xchg
popa
stos
and
jb
jmp
or
cmp
xchg
xor
fwait
scas
jecxz
xor
hlt
jmp
xor
jecxz
pop
mov
adc
xor
fld
lock
cdq
stos
(bad)
out
movs
ds
fst
inc
pop
mov
lock
imul
add
bound
imul
adc
gs
mov
mov
cmp
imul
jp
dec
push
retf
test
jo
mov
ret
cmp
retf
mov
cmps
sahf
cmp
cmp
ja
mov
dec
cmp
sahf
cli
mov
mov
push
jg
loop
jns
fdivr
(bad)
and
clc
xor
in
das
push
mov
xchg
xchg
lods
fs
aam
add
xor
rol
mov
jp
in
adc
mov
retf
popf
sbb
or
mov
xor
mov
push
adc
mov
ss
mov
pop
shr
inc
dec
mov
call
xchg
dec
popa
pop
xchg
xor
ret
imul
push
mov
push
imul
dec
nop
fwait
and
aas
int
cmps
mov
jmp
fnstcw
push
ret
add
test
test
hlt
and
(bad)
inc
dec
lods
mov
pushf
push
mov
jmp
mov
ror
jp
jnp
loop
mov
pop
xor
lods
aad
mov
and
push
dec
mov
bound
lods
add
mov
cmp
cmp
pop
dec
adc
je
mov
cdq
movs
and
mov
mov
icebp
call
jne
ins
adc
mov
movs
fnstenv
(bad)
je
stos
jne
xchg
jp
and
ret
pop
adc
xchg
xor
shr
hlt
repnz
test
xor
xchg
mov
in
sub
hlt
loopne
neg
cmp
shl
dec
dec
outs
scas
dec
outs
jle
xor
or
cmp
push
inc
jne
xor
sar
inc
and
push
cmp
jl
xor
sbb
push
out
cmp
inc
pop
int
mov
mov
mov
mov
mov
inc
pop
pop
ss
pop
xor
scas
es
test
fwait
mov
mov
cmps
add
pop
or
pop
or
jns
out
cs
mov
dec
and
xchg
pushf
xchg
mov
ins
push
inc
lods
icebp
push
cwde
retf
sub
shl
push
dec
jmp
pop
dec
aam
pop
mov
fdiv
pop
push
jae
sbb
stos
inc
pop
jl
das
nop
loop
xchg
stos
inc
pop
or
iret
add
pop
jge
fistp
and
loop
enter
sbb
cmps
test
js
push
xchg
loope
dec
popa
sbb
out
push
pop
mov
adc
fcom
sbb
sahf
movs
sar
dec
xchg
jb
dec
cmc
mov
div
mov
and
call
cmps
mov
cld
push
js
adc
in
inc
add
imul
loope
pop
lds
enter
pop
scas
loop
rcr
std
ds
sbb
stc
sbb
test
pusha
sbb
in
aam
pop
in
out
adc
hlt
rol
pop
sbb
add
addr16
mov
pop
mov
sub
mov
repz
into
hlt
enter
out
mov
jne
fwait
dec
inc
in
in
cmp
jb
stos
hlt
imul
xor
pop
inc
mov
call
push
dec
push
inc
pop
sar
xor
dec
rcl
push
adc
fdiv
mov
xor
and
test
mov
loop
xchg
sub
(bad)
xor
es
imul
inc
movs
in
ds
nop
pop
imul
push
pop
clc
push
xchg
std
inc
lods
sub
inc
pop
add
in
in
fmul
imul
shr
lea
sahf
gs
aas
mov
xchg
enter
int3
outs
call
cmc
jmp
xor
adc
test
pop
dec
popf
in
jmp
fs
iret
mov
out
or
pop
xor
or
or
(bad)
aam
adc
xor
sub
into
daa
popf
cld
and
outs
out
dec
dec
adc
push
gs
jp
pop
fwait
jg
fldcw
add
addr16
inc
arpl
aaa
jbe
push
shr
fcmovb
fisttp
sub
shr
mov
or
adc
out
adc
add
repnz
xor
mov
pop
arpl
popf
xor
std
sub
or
(bad)
xchg
in
sar
outs
(bad)
push
cmp
mov
sub
xchg
or
neg
icebp
inc
cmps
jae
cwde
fidivr
push
inc
not
mov
xor
pusha
and
mov
cmp
(bad)
cmc
repnz
jg
in
inc
jle
lahf
fisttp
and
retf
out
loop
(bad)
pop
nop
pusha
outs
das
xchg
inc
ss
fwait
jnp
adc
sub
pop
scas
(bad)
xor
scas
adc
pusha
pop
sbb
mov
clc
xor
xor
pushf
xor
adc
test
shr
sub
ins
push
mov
fld
mov
ret
mov
mov
mov
ss
(bad)
inc
mov
loop
jnp
and
mov
mov
cmp
fist
xchg
lods
mov
xor
jl
shl
xor
mov
mov
or
inc
pusha
inc
hlt
cli
(bad)
mov
lods
loopne
in
out
xor
cmps
adc
out
sti
sub
and
xor
mov
push
xchg
popa
dec
cmps
or
jnp
ss
jbe
or
ret
sub
sub
add
cmp
jno
or
pop
or
(bad)
(bad)
xchg
or
cmp
inc
add
ss
fist
pushf
lds
push
outs
lock
and
jge
std
pop
dec
cli
ret
sbb
out
sub
(bad)
pop
aas
shr
arpl
cmps
and
pop
pop
repz
retf
inc
pop
sbb
test
int3
loop
bound
xchg
xchg
aaa
cmps
lods
mov
adc
push
dec
test
dec
xor
lods
daa
jge
iret
mov
mov
sti
mov
cmp
out
xchg
lea
stc
int3
sti
stos
imul
retf
inc
ja
(bad)
mov
lods
es
inc
das
dec
(bad)
into
mov
test
xchg
xchg
jo
daa
dec
mov
mov
jnp
cmp
mov
dec
pushf
sub
xchg
test
inc
in
retf
push
xchg
ss
mov
xchg
sahf
fisub
int3
enter
cs
jle
sahf
scas
cmp
iret
shl
xchg
jb
imul
repz
adc
mov
int
mov
dec
pop
add
pop
not
into
ficomp
loop
je
push
add
imul
mov
inc
cmp
mov
out
into
push
add
pop
retf
push
or
ds
adc
repnz
mov
gs
and
xchg
jne
push
pop
inc
pushf
jle
adc
push
and
push
push
sbb
pop
mov
scas
ja
retf
inc
xor
dec
push
inc
popf
fnstcw
lea
pop
jmp
sbb
mov
scas
adc
xor
outs
inc
aad
test
jp
cdq
xchg
in
loop
stos
lds
xor
jns
out
mov
test
sub
dec
mov
out
loopne
and
les
pop
pop
(bad)
int3
outs
outs
xchg
shl
shl
push
jle
sbb
sub
cmp
rcr
jae
mov
scas
loop
cli
pop
push
(bad)
jne
std
ret
push
mov
icebp
sbb
pcmpgtb
or
stc
cmps
icebp
adc
popf
dec
push
aad
cs
into
xchg
loop
jnp
gs
fist
dec
adc
loopne
cs
jmp
addr16
jne
scas
pop
mov
hlt
xor
movs
mov
push
shr
movs
shr
out
adc
jbe
adc
xor
dec
aaa
outs
into
ja
das
addr16
xchg
sub
jge
call
push
fnstcw
call
ss
pop
push
sub
push
push
gs
adc
outs
repnz
arpl
mov
jbe
leave
aad
inc
sbb
inc
mov
ror
sbb
jno
dec
rol
lea
hlt
shl
mov
movs
xor
jmp
mov
mov
lea
in
(bad)
neg
sti
lock
pop
cmp
inc
inc
fcomp
add
pop
fild
sbb
mov
out
adc
shr
xchg
ds
mov
push
push
push
mov
loope
pop
test
push
rcl
fnstenv
ins
idiv
aaa
push
xor
iret
scas
push
repnz
xor
out
sti
lahf
xor
jns
cli
dec
ret
hlt
mov
push
inc
repnz
ja
xchg
pop
leave
dec
fisttp
xchg
stc
ror
ret
in
mov
inc
xor
mov
jo
add
rol
mov
in
repnz
adc
and
data16
addr16
outs
add
jo
mov
test
int3
dec
scas
ins
sbb
add
cdq
ret
sti
mov
fisttp
call
pop
sbb
rcl
retf
xor
adc
jg
arpl
into
or
ret
mov
rol
and
lock
mov
popf
lds
mov
cmp
data16
dec
cmp
test
push
test
loopne
mov
in
lea
add
push
mov
mov
scas
add
jp
push
adc
add
jae
aam
mov
ret
fsubr
add
mov
add
pusha
pusha
div
out
xor
xor
sahf
xchg
outs
shl
int
pop
pop
jno
bound
add
fucomi
add
int3
jbe
ret
push
dec
mov
jmp
jnp
loop
daa
outs
out
cmp
xor
add
xor
mov
xor
(bad)
gs
inc
pop
mov
js
repnz
je
sub
cmp
enter
fadd
popf
popf
add
lods
pop
pop
mov
dec
mov
push
sahf
ret
je
and
sub
sub
sbb
stos
sub
pop
cmp
or
adc
add
jo
jmp
aaa
test
rcr
movs
and
aam
cli
iret
xchg
mov
jmp
iret
mov
push
pushf
std
push
push
adc
adc
cmps
sbb
or
or
cmp
mov
sub
cmps
shr
adc
add
clc
add
sub
dec
cmp
lods
test
add
xor
sub
retf
mov
cs
add
add
out
inc
push
adc
add
std
jbe
jae
cs
out
data16
pop
out
out
add
out
std
pop
rcr
pop
mov
mov
adc
jae
dec
shl
inc
add
(bad)
mov
leave
out
nop
out
push
out
shl
push
add
mov
xchg
push
inc
add
les
lock
add
or
adc
push
repz
add
add
inc
adc
jbe
mov
out
out
xor
push
sub
mov
push
rcl
outs
in
out
lock
jle
cmp
in
fidiv
test
int3
inc
and
jle
or
mov
pop
(bad)
clc
inc
lock
mov
out
cmp
add
and
add
repz
sub
jbe
add
in
push
call
sbb
and
sbb
sbb
sbb
cmp
add
cdq
inc
std
fld
cmp
pusha
inc
loopne
adc
push
adc
inc
add
adc
sbb
sbb
pop
pushf
adc
adc
adc
cli
inc
aad
sahf
cmps
cmp
sbb
jns
(bad)
sbb
pop
aam
mov
sbb
mov
(bad)
test
or
enter
cmp
mov
sbb
lahf
add
and
jmp
add
adc
or
adc
out
sub
out
adc
push
mov
aad
push
pop
pop
add
sbb
push
sbb
push
and
std
(bad)
cmp
sub
and
(bad)
daa
or
sbb
std
lahf
mov
cmp
das
outs
mov
rcl
push
sbb
mov
mov
lds
fidivr
loop
mov
loope
xor
retf
push
cmp
test
mov
call
xor
xor
inc
sbb
xchg
mov
sub
dec
popa
scas
jo
arpl
hlt
pop
(bad)
sub
es
(bad)
out
daa
or
rol
arpl
rcr
push
mov
or
popf
ins
mov
cld
retf
or
jmp
inc
loope
mov
sub
test
sub
popf
sbb
(bad)
(bad)
into
std
aas
sbb
cmp
mov
imul
mov
movs
loope
ins
or
das
mov
sbb
test
ret
xor
(bad)
imul
mov
bound
dec
adc
sbb
xor
out
sbb
mov
jg
mov
sub
dec
cmps
jg
std
aas
pop
push
mov
adc
dec
stos
(bad)
mov
sub
mov
(bad)
jg
adc
sub
addr16
sbb
fs
or
addr16
add
(bad)
or
movs
sub
div
mov
lock
adc
fs
movs
sbb
add
mov
loopne
in
dec
mov
addr16
lock
cmp
push
xlat
adc
mov
out
std
fcomi
fisttp
pop
stos
mov
cdq
adc
fdiv
fs
mov
push
outs
lods
cli
jmp
sub
dec
xor
fsubr
cmp
jae
xor
(bad)
imul
add
scas
and
out
sub
fiadd
dec
push
daa
or
in
dec
xchg
mov
xchg
mov
into
jmp
xchg
mov
sbb
ror
push
(bad)
not
retf
mov
and
out
jbe
jg
mov
(bad)
mov
or
stos
cmp
xchg
mov
adc
push
push
cld
sub
add
ja
fadd
pushw
or
adc
mov
std
mov
lds
js
ficomp
add
fiadd
sub
push
shl
ret
jp
arpl
xor
add
xor
sub
stc
push
adc
push
or
scas
psrld
xchg
ins
and
fdivr
jns
enter
lea
jg
js
add
lock
mov
(bad)
fld
scas
cdq
(bad)
stos
int3
or
adc
xchg
or
mov
add
rcl
adc
dec
and
add
sbb
shr
sub
xchg
add
sbb
or
and
add
and
frstor
pop
fimul
inc
inc
push
adc
mov
add
clc
mov
push
mov
addr16
dec
dec
sub
(bad)
adc
pop
inc
ret
pop
imul
shl
test
mov
outs
sub
sbb
mov
loopne
push
aad
in
jecxz
jecxz
out
pusha
jecxz
(bad)
rol
and
cwde
and
push
jmp
retf
rcr
pop
sbb
xlat
add
push
add
cdq
in
mov
or
xlat
inc
sti
xchg
pushf
mov
or
add
adc
pushw
jae
mov
cmp
adc
mov
cld
jo
sbb
sbb
outs
repz
pusha
dec
push
(bad)
xchg
pusha
std
jg
mov
and
jbe
outs
mov
cli
jecxz
repz
push
sub
mov
int
cmp
sbb
ss
add
pop
aaa
sbb
or
mov
jg
or
retf
jb
or
not
dec
cli
fdivr
add
adc
push
sar
fucomip
js
or
call
idiv
call
hlt
aas
call
idiv
call
adc
retf
or
jmp
mov
sar
fisub
dec
(bad)
jl
jge
and
jle
or
shl
push
adc
jmp
pop
in
jecxz
arpl
adc
push
add
(bad)
sub
jmp
and
pop
inc
inc
aam
repz
inc
adc
int3
pop
push
shr
xchg
add
mov
pop
jmp
aas
mov
pop
daa
std
aas
mov
xor
cmp
mov
sbb
fdivr
jnp
mov
add
repnz
ror
jb
(bad)
gs
xor
adc
push
jo
cmc
jo
mov
jecxz
adc
sbb
popa
loopne
pusha
or
dec
mov
cmp
jb
ss
sahf
sti
outs
sbb
ror
xor
cmp
nop
mov
cmp
and
mov
imul
sti
inc
sti
xchg
jg
fsubr
sti
add
retf
fnstenv
jnp
lahf
fld
and
idiv
(bad)
std
je
cwde
out
ins
jge
test
xor
fmulp
mov
mov
ror
mov
pop
(bad)
cmp
mov
sahf
lahf
sti
outs
std
stos
mov
sbb
daa
cmps
(bad)
fadd
mov
pop
sar
mov
xchg
(bad)
mov
pushf
aam
aas
dec
sbb
inc
cmp
sub
not
hlt
xor
in
or
in
fisubr
ret
sub
xchg
loope
xor
mov
gs
fnstsw
out
adc
adc
(bad)
scas
inc
jns
loopne
(bad)
test
cdq
mov
mov
fidivr
test
(bad)
fadd
pop
jl
cmp
dec
push
jg
jno
push
jbe
loopne
xchg
bound
leave
jg
mov
jp
jp
adc
and
sub
test
in
call
dec
cmps
pusha
pop
mov
pop
mov
inc
pop
bound
test
adc
test
fst
cmp
sbb
xlat
test
xor
arpl
mov
push
out
adc
push
xlat
je
int3
inc
test
pop
test
mov
daa
movs
jo
and
mov
stos
outs
sbb
aam
push
mov
sbb
inc
push
in
xchg
daa
rcr
cmp
add
sbb
test
std
add
mov
sar
mul
not
retf
xor
js
(bad)
dec
addr16
icebp
jbe
int3
mov
or
jmp
sti
sub
mov
jbe
es
or
test
mov
test
mov
xor
dec
gs
adc
dec
pop
push
or
adc
scas
test
fcomp
pop
mov
aam
sbb
push
mov
fidivr
(bad)
mov
sbb
(bad)
sbb
out
pop
cmc
lahf
mov
ds
mov
loopne
popa
and
cmc
xor
iret
imul
icebp
mov
addr16
adc
sahf
xchg
shl
xchg
imul
cmc
mov
push
jmp
sub
fimul
mov
mov
stc
sbb
mov
ins
test
jb
cmps
cmp
mov
sub
and
fwait
pop
mov
push
push
mov
xlat
mov
xchg
sahf
mov
stos
cmp
dec
push
shr
lods
das
sbb
pop
ficomp
gs
xor
dec
nop
popf
cmc
retf
and
rcr
repnz
adc
int
popa
mov
inc
ins
cmp
arpl
push
int
loop
mov
cmp
das
ror
sbb
pop
jl
std
add
inc
out
repz
fwait
cwde
mov
xchg
imul
sub
fwait
out
dec
test
imul
ins
pextrw
push
and
mov
xchg
pop
mov
(bad)
test
xchg
daa
adc
std
je
fdivp
imul
add
cmp
scas
jecxz
cli
sti
fs
and
push
xor
sahf
push
dec
arpl
and
pop
inc
add
sbb
call
daa
aad
xchg
ror
loope
(bad)
popa
mov
mov
inc
sub
iret
adc
nop
xchg
iret
movs
xlat
sub
out
cmc
push
sbb
ins
arpl
leave
nop
outs
dec
inc
cmc
sahf
mov
jae
pop
lods
sbb
fmul
cmc
or
fnstenv
xor
imul
std
inc
clc
xchg
shl
and
jno
scas
inc
push
pop
sbb
rdpmc
mov
out
jae
cmp
push
in
dec
adc
jle
cld
pop
lahf
mov
mov
(bad)
mul
sub
pop
fwait
arpl
adc
cli
ss
jae
cmc
and
clc
cmp
xchg
push
movs
push
inc
jb
test
daa
fistp
xchg
in
into
mov
xchg
push
and
push
aam
loopne
cmp
pop
repz
sub
mov
sub
in
fcomp
ss
(bad)
mov
pop
test
cmps
jae
retf
xchg
mov
repz
or
sar
push
pop
shl
sub
jl
xor
and
in
sbb
stos
leave
jecxz
in
(bad)
scas
scas
stos
sbb
fstp
mov
psubq
mov
cmc
sub
shl
mov
sub
jge
mov
sub
daa
ja
xor
aam
aas
jl
pushf
call
sar
in
rcl
call
xchg
xor
dec
arpl
jp
pop
pusha
adc
pop
push
repnz
and
xchg
or
add
retf
repnz
(bad)
push
sub
movs
in
mov
push
add
aas
mov
inc
je
js
mov
(bad)
jmp
mov
outs
mov
jmp
pop
(bad)
sub
xor
mov
xchg
das
or
cmp
mov
adc
test
push
lea
mov
test
jl
retf
pop
mov
fimul
xchg
jmp
jmp
es
dec
push
and
dec
pop
mov
mov
scas
je
jmp
(bad)
call
and
pop
fsubr
pop
movs
std
push
cmp
hlt
mov
mov
ins
(bad)
inc
dec
scas
sti
fwait
xchg
sti
push
sahf
and
ins
mov
add
je
loop
cdq
cmp
dec
jae
repnz
and
neg
ins
push
pop
push
in
fcmove
lods
iret
add
cmp
lock
adc
sub
add
aad
dec
leave
enter
movs
mov
xchg
add
push
xor
inc
push
add
(bad)
push
mov
adc
sbb
and
adc
scas
ja
and
sbb
inc
sar
jmp
pop
hlt
leave
shr
enter
cli
add
ins
push
cld
mov
lods
jp
dec
xchg
hlt
inc
cs
adc
aad
add
cmps
shl
sbb
cmp
add
stos
popa
push
(bad)
mov
movs
jp
fiadd
pop
(bad)
and
js
repz
mov
ror
inc
pop
mov
jns
mov
jb
ja
in
lock
mov
shr
addr16
inc
outs
or
punpckldq
inc
movs
cmp
dec
mov
icebp
dec
adc
pop
push
jle
repz
mov
adc
inc
xchg
rcr
movs
shl
(bad)
das
(bad)
iret
bound
jbe
mov
jmp
mov
cmp
aad
ins
adc
push
sbb
vpsubq
in
push
es
cdq
dec
out
inc
movs
lock
inc
ror
rep
jg
or
push
fldcw
in
push
scas
or
ins
out
fiadd
cmp
fs
sub
add
idiv
std
add
icebp
push
xor
scas
push
leave
adc
lods
mov
aad
inc
pop
aam
jmp
xchg
push
or
xchg
ins
mov
in
cdq
jbe
ret
(bad)
pop
retf
es
iret
iret
daa
sub
iret
pop
dec
jmp
push
push
je
xchg
sbb
jge
stc
rcr
aaa
ins
mov
sbb
adc
lods
or
pop
inc
fstp
stos
and
cmp
(bad)
sub
inc
mov
loope
les
sti
test
push
and
std
and
aaa
(bad)
cmp
and
pop
push
rcl
xchg
pop
jbe
sub
pop
and
xchg
retf
bsf
rcl
aad
stc
pop
mov
inc
mov
adc
xchg
and
mov
popf
cmp
icebp
jbe
adc
loopne
test
in
sar
fcom
mov
cs
pushf
int3
mov
mov
adc
jo
(bad)
das
jnp
rol
cdq
gs
loope
pop
les
mov
sbb
fldz
out
imul
xchg
inc
cmp
and
rcl
cmp
jmp
test
push
jmp
jp
sbb
adc
ins
cmp
les
xchg
xor
mov
in
pop
mov
(bad)
mov
mov
jnp
and
mov
mov
imul
xchg
jle
iret
outs
scas
int3
fnstcw
or
aaa
jecxz
jbe
ss
jmp
stc
xchg
mov
stc
rcl
ficom
jnp
and
mov
adc
out
inc
popa
mov
xor
(bad)
les
test
mov
(bad)
out
push
xchg
xchg
xchg
into
test
push
or
mov
dec
dec
mov
out
mov
push
mov
xchg
ins
imul
jbe
pop
push
adc
add
inc
cmps
sub
sub
cmps
inc
loop
mov
jae
jmp
fldenv
sahf
xchg
daa
mov
div
push
fs
fld
mov
sbb
add
and
inc
xlat
jmp
sbb
add
fist
aam
xor
fwait
xchg
mov
in
ja
mov
mov
xor
mov
add
fmulp
jp
loope
jl
movs
inc
dec
push
and
sti
aam
cmp
test
mov
xchg
cmp
fldpi
stos
sbb
mov
pop
mov
iret
mov
outs
mov
push
enter
xchg
add
bound
(bad)
and
pushf
(bad)
mov
call
adc
sbb
xor
lods
dec
dec
sahf
iret
aas
lods
mov
dec
dec
mov
shl
sbb
les
xchg
xchg
nop
jb
loope
and
ret
(bad)
out
mov
test
cmp
mov
mov
lock
add
ret
pop
mov
add
aas
dec
psubd
mov
dec
das
sbb
std
fstp
mov
pop
sar
cli
and
in
add
inc
add
retf
(bad)
cli
mov
push
dec
in
(bad)
daa
ret
cwde
pop
pop
push
test
pushf
iret
enter
ds
dec
aas
in
mul
or
leave
dec
add
pop
gs
and
add
cwde
gs
adc
pop
mov
icebp
out
ins
push
aam
mov
cli
sub
pop
cdq
cdq
stos
cmp
cmp
jge
fdivr
xor
adc
mov
popa
rol
sbb
sbb
adc
data16
stos
jo
push
fild
in
nop
test
loop
or
cmp
aaa
mov
addr16
std
cmp
push
push
xor
aas
cmp
aad
movs
shl
not
or
pop
mov
into
mov
add
loop
enter
push
icebp
call
pusha
fsub
mov
inc
sub
bnd
jmp
push
inc
not
mov
lea
pop
xor
popa
ds
cmp
fwait
call
jbe
enter
shr
mov
scas
inc
pusha
push
sbb
jbe
test
adc
jne
imul
pusha
pop
cli
mov
arpl
jmp
pop
lahf
push
push
cmp
imul
sbb
mov
fs
add
xor
adc
xchg
ds
pop
bound
mov
retf
xor
pop
idiv
jg
push
inc
lods
mov
pop
xlat
add
rol
and
cmp
retf
pop
lods
mov
aas
je
and
lds
cmp
(bad)
push
out
inc
mov
(bad)
repnz
dec
push
jl
pop
(bad)
enter
or
pop
jae
or
add
push
add
adc
dec
cmc
push
cld
dec
adc
rol
out
push
cwde
mov
xor
xor
cmp
rol
aad
xchg
imul
adc
pop
scas
lods
iret
push
in
mov
rcl
push
mov
mov
test
sbb
push
xor
test
adc
test
push
into
or
push
dec
loop
inc
xchg
pop
sar
clc
mov
pushf
les
sub
mov
inc
(bad)
jmp
dec
in
jge
mov
fst
xor
jle
cmp
arpl
fwait
dec
jg
add
or
add
jecxz
inc
inc
add
inc
std
ins
(bad)
rcr
rol
lahf
movs
cmp
adc
sub
mov
movs
xor
inc
dec
imul
mov
imul
jo
mov
add
shl
xchg
jmp
fld
push
sub
ficomp
xchg
lods
in
ret
xor
pop
leave
or
mov
sub
mov
lods
(bad)
stos
sub
sub
xchg
movs
jnp
aad
mul
das
mov
inc
mov
in
out
sti
or
jg
fdivr
or
lahf
fdiv
jecxz
repz
push
out
iret
fcmovnu
hlt
ret
pop
add
lods
cld
out
inc
and
add
sti
mov
sbb
test
sbb
adc
mov
push
pop
sti
xchg
pop
addr16
(bad)
in
imul
fldcw
or
call
in
out
cmp
cmp
rcr
clc
push
mov
(bad)
out
cmp
out
scas
in
push
xchg
stc
pop
ins
sti
jmp
cmp
pusha
cmc
lahf
inc
sbb
push
int3
dec
cld
aam
mov
xchg
pushf
(bad)
xchg
mov
out
shr
sti
mov
fstp
cwde
iret
into
jo
je
pop
push
sti
cmp
imul
pop
add
mov
inc
push
dec
or
dec
mov
and
imul
stos
out
stc
sbb
das
dec
pop
add
(bad)
fwait
push
sahf
sbb
ret
ins
fcmovnu
inc
adc
lods
mov
xchg
popa
pop
ja
mov
push
cdq
add
call
pop
adc
subps
ror
cmps
mov
imul
adc
dec
(bad)
stos
(bad)
imul
(bad)
aam
xor
aam
stos
mov
add
out
and
xchg
out
das
pop
ds
out
call
adc
or
jo
aad
mov
mov
mov
mov
out
add
xor
stos
aam
clc
test
dec
jno
or
dec
dec
pop
or
ss
fistp
std
rcl
(bad)
inc
adc
ds
or
jne
mov
ja
cmp
enter
push
psrlq
and
repnz
mov
mov
cli
pop
stc
iret
jle
push
inc
xor
mov
push
in
shl
int3
mov
cdq
sahf
js
cmp
test
add
iret
fidivr
dec
out
push
mov
into
mov
jle
mov
cmc
mov
add
add
push
inc
addr16
pop
shl
call
fistp
jle
lea
je
nop
mov
mov
pop
mov
out
retf
xchg
idiv
icebp
mov
pop
xchg
mov
adc
jbe
adc
or
add
jne
xchg
out
jmp
in
fdivr
mov
in
retf
out
mov
fdivrp
mov
int3
add
xor
add
jle
add
sar
(bad)
and
mov
xchg
loope
and
(bad)
ins
outs
cmp
iret
cmp
pop
stc
scas
aas
and
and
outs
jg
test
scas
cld
sbb
mov
mov
or
add
out
ds
xor
pusha
jecxz
push
imul
idiv
add
inc
cmp
fst
jae
add
xor
outs
add
inc
push
mov
lods
shl
jbe
jo
jns
fidivr
fcomp
fsubr
mov
sbb
icebp
retf
mov
or
mov
and
loope
jge
jle
(bad)
xor
xchg
lods
enter
idiv
lahf
aaa
inc
lock
mov
jno
fnstcw
pop
rcr
(bad)
pop
or
(bad)
lods
dec
cwde
ja
sbb
sub
jg
aam
xchg
mov
add
aaa
push
mov
xor
cmp
sahf
into
gs
pusha
inc
or
pop
cwde
cmc
ins
fld
and
adc
push
sub
inc
xchg
fbstp
ins
pop
inc
(bad)
hlt
scas
mov
pop
stos
(bad)
movs
pop
pop
(bad)
jnp
aas
fs
cmps
and
xchg
xor
mov
push
jns
sub
add
push
int3
pushf
sbb
test
add
adc
jle
out
or
add
addr16
push
inc
jmp
shl
js
dec
pop
das
pop
ret
xchg
sbb
enter
mov
int3
dec
outs
in
push
lahf
jmp
aam
out
cmp
mov
add
inc
imul
stos
jl
imul
add
dec
stos
retf
mov
fs
add
ins
fldl2t
or
jmp
daa
pusha
loop
call
into
imul
retf
out
sbb
popf
and
mov
icebp
sub
xor
fld
test
xor
inc
into
imul
ds
mov
push
dec
sti
sbb
ins
aas
jae
jae
add
repz
xor
adc
or
sbb
mov
movs
xchg
jle
cmps
fs
push
pop
gs
dec
and
mov
jb
mov
and
sahf
jae
jg
(bad)
loop
fs
or
mov
test
mov
ss
add
mov
mov
push
or
sbb
push
cmc
ficomp
(bad)
adc
icebp
xor
cvtps2pd
das
inc
cmps
and
retf
ss
mov
mov
idiv
mov
xor
fsub
cmp
into
(bad)
cmps
or
sub
jne
jle
mov
out
ret
or
add
sub
loop
movs
sbb
adc
cdq
fwait
mov
xchg
sbb
repnz
movs
aam
call
int
dec
jb
test
dec
mov
repz
cmps
jns
mov
shl
pushf
jg
cwde
cmp
test
adc
xor
in
leave
push
xor
retf
sub
jmp
push
mov
dec
mov
jno
pop
mov
cmp
sub
sub
(bad)
int
add
cli
cmc
push
icebp
out
add
mov
pop
cmp
mov
jp
inc
loope
jae
fidiv
inc
test
sbb
xchg
pop
std
int3
or
std
loope
stos
add
in
inc
dec
xchg
sub
fsubr
xlat
stos
in
jae
mov
popf
cli
outs
and
mov
xchg
fld
xor
jg
icebp
outs
mov
sub
ins
push
push
push
dec
sbb
push
mov
dec
ret
xchg
pop
fld
xchg
test
or
add
(bad)
push
sar
push
and
dec
cmp
inc
call
mov
das
sub
popf
inc
and
sub
dec
cld
out
and
nop
js
inc
movs
lahf
add
cmp
and
ins
jl
mul
mov
aad
jmp
fisub
rcr
out
mov
pushf
add
gs
dec
mov
push
jecxz
repz
pushf
clc
adc
cmp
div
sub
mov
fcmovne
fadd
dec
rcl
rcl
xor
inc
inc
add
add
dec
mov
ins
push
out
or
or
push
pop
add
push
fisub
sub
push
int
daa
mov
pusha
test
xchg
xchg
test
fimul
sub
xlat
repz
push
cmp
mov
dec
push
fstp
lds
mov
push
cmp
sbb
(bad)
std
in
pop
add
or
sub
int3
inc
aaa
(bad)
ror
int3
(bad)
sub
cmp
jecxz
gs
ja
sti
iret
pop
cld
pushf
add
sti
mov
test
mov
not
jg
inc
xchg
in
lahf
(bad)
pop
xchg
inc
adc
xchg
jge
or
or
xchg
xchg
mov
add
in
sbb
add
add
(bad)
push
push
sti
jne
fnsave
pop
daa
or
shl
lods
stos
xchg
cmp
push
and
jne
rcr
push
neg
push
fisttp
mov
shl
(bad)
rol
fldz
fldenv
inc
jg
pop
xchg
jne
inc
push
clc
add
mov
lahf
out
(bad)
clc
xchg
scas
ss
cmp
in
mov
add
push
and
or
imul
int
popf
jg
mov
xor
mov
xchg
mov
xor
jmp
push
push
jmp
inc
aas
rcr
jne
pop
in
sti
jmp
lock
jb
cdq
push
scas
jmp
call
add
jle
cmp
adc
jmp
test
ss
icebp
test
(bad)
daa
mov
cmp
aas
aad
adc
or
loope
xchg
mov
xor
test
inc
push
les
lea
cdq
sti
ror
add
(bad)
imul
inc
lock
sbb
jg
stc
outs
stc
outs
sar
dec
das
mov
popf
cld
push
xor
mov
mov
jmp
neg
cmps
pop
(bad)
jbe
sub
sub
xchg
pop
jbe
retf
xor
cli
jge
mov
fbstp
push
shl
xor
daa
pop
push
shl
pop
inc
aad
add
jmp
inc
cmp
stc
jmp
dec
pushf
push
pusha
test
test
and
rcl
adc
mov
call
test
pop
pop
push
add
and
arpl
dec
repz
fnstcw
scas
jg
pop
jne
sbb
retf
mov
xchg
jge
fisttp
ror
jne
push
sar
mov
adc
sub
pop
inc
push
cdq
pop
test
in
xor
jae
repz
popf
dec
outs
mov
pop
add
retf
jp
gs
fstp
aad
sub
jg
(bad)
push
push
cld
push
and
shl
or
inc
test
aad
dec
fild
test
xor
xor
jle
jmp
popf
or
sbb
push
jp
popa
fnstsw
std
cmps
push
add
xchg
push
leave
dec
aaa
je
aas
not
sbb
xchg
call
jo
xlat
pop
adc
xchg
iret
mov
add
dec
retf
aas
jge
sbb
test
jb
(bad)
call
adc
imul
or
(bad)
imul
mov
mov
pushf
out
add
pop
(bad)
fwait
(bad)
adc
gs
push
jae
dec
cmps
retf
mov
lds
push
push
loope
aad
aaa
add
dec
or
test
(bad)
or
test
push
cli
xor
sahf
and
stos
ret
or
aad
and
mov
fnstsw
clc
pop
int3
mov
dec
inc
mov
inc
mov
call
inc
inc
movs
std
xor
out
jg
and
inc
imul
int
cmp
cwde
pcmpeqd
mov
cmp
retf
mov
repnz
jl
jo
or
gs
std
sub
add
push
push
fcomp
pushf
jbe
test
push
stc
push
xor
aas
cld
xchg
pop
in
xchg
mov
adc
xchg
jmp
cmp
jmp
and
push
bound
jbe
and
test
(bad)
cdq
div
int
dec
fwait
popf
cmp
ins
add
xchg
jno
inc
mov
test
retf
mov
add
int3
fptan
in
xchg
lock
adc
in
fild
cs
repz
xor
mov
sti
fstp
pop
jge
add
imul
stc
jmp
and
mov
inc
add
aaa
xchg
cmc
addr16
push
pusha
cdq
pop
pop
push
jo
xchg
mov
clc
(bad)
pop
mov
pop
fwait
jne
fbld
cmc
in
push
pop
pop
cmp
nop
push
xor
jmp
cmp
mov
or
push
or
out
mov
jb
dec
pop
mov
hlt
sub
xchg
stc
jne
dec
popf
xor
xor
add
ss
into
sub
cmp
fdivr
div
test
in
fldcw
xor
xchg
and
add
into
sub
adc
(bad)
jle
test
mov
sub
sub
call
lea
fnstsw
call
mov
fwait
sbb
push
push
scas
fistp
(bad)
rol
cli
ror
sub
sbb
dec
das
rcl
scas
fld
test
pop
mov
fdiv
or
mov
xor
fsubrp
add
pop
pusha
push
jle
movs
xchg
adc
jl
es
mov
test
push
dec
mov
xchg
add
push
out
pop
call
cmp
jb
push
and
xlat
es
pushf
imul
cmp
adc
adc
xchg
(bad)
arpl
cmc
sub
mov
hlt
imul
xchg
aas
cmp
scas
cld
test
pop
pop
inc
imul
adc
cmps
xor
or
sbb
in
cdq
mov
or
adc
jmp
fcomp
nop
sub
retf
cs
pop
xchg
push
dec
ds
addr16
dec
mov
dec
push
ins
jno
fistp
test
cmps
cwde
or
rcr
push
into
cdq
fist
jmp
jnp
shl
jmp
add
rcr
mov
imul
sub
cwde
jne
pop
popf
mov
clc
loop
div
mov
aaa
mov
loopne
fild
pop
not
mov
xchg
jne
sub
adc
adc
mov
outs
pop
pop
mov
sub
shl
pusha
retf
out
cmp
inc
fisubr
lds
outs
mov
ss
cmovo
inc
aad
mov
sbb
idiv
scas
push
in
and
repnz
out
das
and
dec
int3
adc
not
retf
outs
inc
(bad)
out
fwait
retf
mov
mov
ds
sbb
and
xor
and
fdivr
fnstsw
jmp
adc
mov
ret
gs
test
inc
sub
add
cmp
stc
das
cmp
sub
jmp
xchg
dec
sbb
xor
pop
adc
xchg
jo
stos
(bad)
xlat
dec
add
or
test
push
fnstenv
addr16
sti
stos
mov
inc
mov
repnz
das
fcomp
inc
stos
xor
stos
pushf
lods
dec
xor
push
cwde
push
xchg
and
ins
mov
mov
imul
or
push
mov
add
cld
callw
xor
rcr
scas
lods
popf
cmp
int3
leave
mov
fwait
jle
mov
mov
mov
add
icebp
lds
cs
cli
shr
out
jge
sub
(bad)
(bad)
cmp
add
mov
inc
xor
cmp
imul
add
cmp
outs
jle
pop
cmps
jecxz
outs
pop
sub
dec
dec
pop
outs
push
dec
stos
jg
(bad)
jmp
daa
das
scas
mov
and
popf
cwde
retf
shl
fs
pop
movs
inc
or
add
(bad)
adc
cld
add
jecxz
(bad)
aad
fwait
into
es
icebp
dec
xor
int3
sub
aas
mov
jno
push
jbe
sub
adc
test
bound
cmp
push
gs
inc
add
icebp
mov
cmp
xor
stos
cmp
or
outs
pop
hlt
cmp
jmp
add
jnp
add
popf
cli
aas
sub
adc
mov
dec
(bad)
aaa
pop
aaa
les
mov
fnstenv
imul
nop
pop
scas
sub
pop
dec
sar
cmp
(bad)
lock
loope
and
inc
cmp
mov
jb
pop
and
pop
push
mov
pop
push
outs
dec
or
mov
xor
imul
adc
mov
xor
jmp
aas
xchg
pop
stc
mov
pop
mov
or
dec
fnstcw
inc
inc
jno
stos
shr
push
mov
dec
xchg
push
mov
dec
stos
jae
pop
jle
sbb
pop
xor
aam
in
bound
adc
cli
rcr
cmps
and
in
gs
pop
ds
mov
cmc
pop
add
mov
and
ds
jmp
jae
pop
dec
mov
test
jmp
jb
movs
jo
jmp
daa
xor
push
ret
inc
es
cli
into
aas
frstor
jl
inc
repnz
add
mov
add
pop
and
in
pop
test
test
mov
fdiv
(bad)
retf
push
dec
in
xchg
pop
out
nop
nop
or
data16
add
and
dec
inc
inc
push
ficomp
sbb
sub
out
mov
shl
retf
fimul
cmp
sbb
mov
inc
mov
sti
mov
call
inc
mov
cmp
mov
cdq
imul
test
cmp
jns
pop
inc
scas
jp
into
sbb
hlt
xchg
gs
mov
pop
les
xor
imul
sbb
mov
xchg
xchg
push
and
cmp
dec
mov
dec
xor
in
xlat
jnp
or
pop
sti
adc
cmp
ins
jmp
jae
or
jmp
mov
lock
test
data16
enter
mov
ror
sti
adc
inc
add
dec
aas
hlt
stc
fstp
lock
push
or
jmp
sbb
out
ins
inc
mov
rcr
sub
lea
(bad)
int
ficomp
cld
jae
pop
scas
popa
jb
mov
js
(bad)
mov
jmp
add
push
inc
ss
fwait
scas
daa
aam
mov
push
inc
xor
jb
fiadd
push
xchg
xor
test
jg
jmp
or
pop
out
sbb
aam
ja
repnz
push
cmp
inc
jp
mul
ds
cmc
ret
push
bnd
out
mov
cmp
or
pop
push
jne
rdpmc
(bad)
jg
xor
dec
stc
in
aas
call
test
pop
rcr
sbb
cld
lds
and
pop
mov
sbb
pop
jns
mov
(bad)
aas
shl
das
and
inc
jge
sbb
loop
push
and
sub
mov
daa
pop
hlt
push
dec
out
ins
mov
mov
test
ja
shl
lods
pop
xchg
in
xchg
cld
ret
scas
fnstsw
gs
nop
jecxz
dec
pop
ds
jbe
push
xchg
(bad)
cs
out
sub
sub
add
call
mov
dec
cmp
sbb
adc
not
xchg
sbb
xor
cli
lock
test
add
mov
dec
stos
xor
mov
rcl
retf
pop
repz
shr
jmp
push
jmp
movs
test
and
cli
ror
(bad)
(bad)
push
loope
and
push
add
xchg
xchg
mov
rcl
sbb
in
add
sub
jns
fsub
stos
lods
(bad)
cdq
add
cmc
call
and
and
jmp
cmp
jge
cmps
test
fisubr
push
in
mov
call
cmp
push
cmc
mov
or
xchg
fstp
aaa
cmps
jle
sub
in
push
lods
push
pop
popf
add
add
jbe
scas
jmp
mov
sar
imul
int
push
jnp
ret
mov
add
mov
(bad)
dec
mov
xchg
in
fstp
ss
ds
(bad)
aaa
xchg
sbb
into
xchg
pop
jge
inc
(bad)
cmps
sbb
std
and
sub
sbb
ds
dec
mov
xchg
fstp
push
jge
cmc
inc
add
psubb
cwde
and
jmp
leave
push
add
or
and
inc
mov
in
cmps
stos
pop
xlat
rol
jmp
xchg
call
jno
adc
arpl
dec
aaa
mov
nop
mov
jge
adc
pop
mov
xlat
or
data16
mov
lods
mov
push
pop
cwde
iret
dec
std
arpl
jns
pop
je
sbb
lods
pop
pop
dec
shl
jl
rcl
cmps
cmp
sbb
sub
loop
call
fild
or
xor
cs
rcr
mov
(bad)
out
and
adc
or
(bad)
(bad)
fmulp
dec
loopne
stc
out
sub
xor
xchg
lock
or
xor
push
imul
adc
dec
mov
es
aad
pop
lock
retf
daa
out
in
dec
into
retf
cli
jb
push
cmc
(bad)
das
jle
push
sub
jle
or
cli
dec
mov
mov
stc
std
xchg
inc
imul
iret
retf
cmp
mov
lahf
clc
pop
test
mov
jmp
test
add
cld
push
jg
push
push
sbb
or
jno
nop
call
clc
scas
mov
movs
pop
inc
jmp
imul
jecxz
jae
push
rcl
les
stos
push
pop
repnz
(bad)
int3
test
pop
les
mov
adc
pusha
adc
ret
test
bound
mov
pop
adc
dec
ds
outs
loope
test
mov
or
mov
xchg
push
cmp
and
pop
inc
dec
add
jmp
mov
inc
test
leave
push
popa
inc
sahf
ret
mov
xchg
pop
and
scas
push
inc
psubd
push
ins
jle
ss
and
sub
fstp
push
or
dec
iret
imul
mov
in
out
pop
out
gs
outs
mov
inc
js
add
pop
mov
or
and
fnstsw
pusha
call
or
adc
xchg
dec
jae
fnsave
or
mov
cmp
dec
add
in
push
add
sub
mov
out
or
retf
or
push
mov
xor
or
push
scas
push
js
push
inc
mov
jl
cmps
clc
fist
sub
push
pop
adc
mov
mov
pop
sbb
cld
mov
sbb
dec
push
xchg
dec
test
fs
pop
push
mov
ss
pop
mov
cmp
inc
int3
mov
cmp
cmp
cmp
xor
clc
fisub
sub
and
loope
outs
xor
in
in
fbld
pop
push
(bad)
(bad)
pop
push
out
inc
int3
cmp
mov
mov
pop
scas
xchg
or
mov
pop
sub
xchg
jo
add
jnp
sbb
aaa
or
imul
shr
aas
sbb
push
or
loope
dec
aad
lods
fild
aaa
out
std
stc
jge
in
movs
pop
jbe
aaa
or
jmp
scas
push
ret
cmp
sar
jmp
jmp
test
push
ds
lods
xor
xchg
mov
dec
adc
out
pop
test
imul
dec
jle
cli
xchg
inc
mov
push
jns
ret
add
sti
mov
call
call
dec
push
cld
mov
repz
pop
cld
test
jecxz
lods
mov
sub
movq
fidivr
retf
retf
fild
sub
fsub
lds
xor
sub
or
adc
fs
mov
mov
aad
aad
sub
mov
push
shl
pop
les
repnz
ss
or
ss
mov
add
jle
jne
(bad)
xor
(bad)
cmp
jecxz
(bad)
mov
mul
add
sbb
pop
loope
in
data16
mov
adc
mov
cmp
mov
add
and
mul
call
sbb
add
gs
xlat
jg
dec
cmp
sub
jg
mov
or
sbb
pop
adc
retf
push
jae
or
cmps
adc
xchg
js
dec
xor
cmp
pop
sub
hlt
xchg
or
movs
jns
mov
sub
enter
or
aas
push
ds
xchg
xlat
add
pop
mov
mov
cli
icebp
add
rcl
mov
(bad)
or
dec
pop
and
lods
jbe
add
and
loop
test
int3
popf
or
hlt
in
mov
imul
sbb
(bad)
pop
fistp
sti
mov
push
cwde
or
xor
stc
les
movsx
jmp
loopne
fs
and
push
cdq
iret
dec
lahf
lods
xlat
xchg
cmp
fwait
dec
xchg
fwait
retf
xor
cld
xor
cli
and
sub
xor
dec
push
mov
xor
inc
outs
xchg
cs
xchg
es
add
unpcklps
sbb
ror
pop
into
cmp
imul
stos
movs
xchg
sub
mov
cmps
movs
or
cld
loop
adc
sbb
inc
and
cli
sbb
(bad)
pop
sbb
xor
cld
out
sti
mov
iret
or
test
adc
(bad)
mov
add
xor
pop
mov
imul
lods
mov
lahf
in
mov
nop
mov
ja
test
ins
or
sti
xchg
imul
xchg
in
jnp
cmp
sub
rol
call
clc
mov
and
push
or
or
or
push
aad
test
popf
mov
adc
neg
adc
jmp
ds
jmp
neg
out
xor
push
xchg
inc
loopne
shr
es
jg
mov
fs
pusha
mov
scas
clc
or
mov
xchg
push
push
mov
hlt
ror
add
add
cli
pop
lds
mov
xchg
aaa
mov
pop
mov
push
sets
inc
cmovle
aas
mov
cmps
xor
jo
in
not
in
mov
cli
pop
lods
inc
(bad)
jmp
mov
add
js
arpl
ins
jmp
sub
push
(bad)
mov
pop
mov
shl
ds
jne
xchg
xor
jns
dec
or
mov
test
aaa
pop
call
jae
jbe
out
mov
adc
cmp
fsub
xchg
or
cmp
jmp
ins
fidiv
cmps
xor
push
jle
out
ja
mov
push
mov
push
fs
mov
push
sahf
push
add
jae
test
fwait
cmps
outs
mov
icebp
mov
jae
and
movs
repnz
lahf
add
push
ins
push
or
call
push
jne
sub
mov
or
cmp
xor
popf
add
xchg
adc
xlat
jmp
and
retf
jmp
mov
mov
test
mov
(bad)
xchg
sbb
mov
pop
push
out
int
xlat
inc
adc
not
add
ret
add
cmp
dec
mov
lea
shl
fcomip
mov
add
add
or
xchg
call
fbstp
rcr
mov
outs
imul
sub
xor
xchg
pop
addr16
push
inc
push
outs
retf
(bad)
addr16
cdq
push
push
add
and
mov
cs
out
adc
clc
or
sub
fcom
imul
imul
mov
call
sub
mov
inc
enter
and
xor
jg
cmp
mov
stos
add
adc
cmc
loopne
pop
xor
outs
mov
in
cli
das
pushf
add
arpl
jne
repz
pop
scas
push
push
mov
dec
mov
lock
add
sahf
jge
test
nop
data16
jge
pop
sbb
jg
(bad)
nop
addr16
dec
add
ret
xchg
gs
lock
arpl
jae
jge
xor
mov
out
popa
(bad)
ud1
cmp
pusha
(bad)
sbb
stos
jno
and
sahf
fiadd
outs
(bad)
repz
adc
pop
xor
outs
out
sti
xlat
ds
inc
clc
sub
jae
popa
mov
fs
jnp
js
in
dec
into
mov
fisub
add
outs
out
push
out
(bad)
mov
xchg
and
and
loopne
jns
fldcw
popf
sub
cmp
(bad)
aaa
jg
(bad)
mov
ret
inc
retf
test
sbb
and
push
xor
adc
cs
add
mov
dec
mov
call
cmp
jbe
cmp
call
or
dec
cs
mov
out
mov
in
call
shl
pop
cdq
xchg
push
gs
xchg
outs
mov
sub
jmp
add
push
mov
pop
lahf
xchg
mov
dec
sti
mov
out
or
add
repnz
push
leave
cld
outs
cmp
daa
ret
cmps
movs
jae
xchg
fst
add
pop
mov
call
push
ret
add
push
ins
test
inc
aad
inc
inc
add
in
mov
add
shl
aad
nop
sbb
(bad)
rcl
cmp
or
mov
cdq
mov
jge
or
in
test
ja
div
or
and
or
xor
jp
call
and
fldenv
inc
retf
rol
lods
sub
mov
inc
xor
sub
ins
sbb
test
push
out
and
inc
adc
mov
dec
cmps
test
or
mov
inc
arpl
add
pop
pusha
outs
jb
xor
xchg
cwde
fwait
sahf
(bad)
xor
daa
cmps
nop
cmc
sti
enter
adc
retf
int3
xchg
aaa
mov
daa
in
inc
xor
(bad)
icebp
rcr
push
push
xchg
and
loope
sahf
jecxz
je
popa
rcr
jno
(bad)
sub
in
mov
cs
jne
mov
mov
cs
and
inc
repnz
repz
rcr
sub
pop
cwde
mov
aas
scas
(bad)
mov
sti
fistp
out
jmp
jl
shl
cmp
movs
sub
pusha
fs
cmp
jae
mov
scas
lahf
adc
mov
popf
test
movs
mov
out
xchg
les
fist
stos
arpl
adc
mov
xor
cwde
into
push
pop
fild
cmps
inc
mov
mov
pusha
ins
stc
bound
or
mov
and
ret
mov
add
aam
stos
add
shr
mov
mov
mov
sub
push
and
popf
adc
or
inc
dec
sbb
fdiv
js
fstp
or
pop
ja
fwait
in
push
and
add
and
push
cdq
aas
mov
loop
lds
stos
or
sub
mov
fild
aam
jae
push
sbb
sbb
sub
out
ficom
jno
mov
int3
int
call
sbb
sbb
adc
ret
scas
js
dec
neg
sbb
cmp
cmps
out
lock
cmp
adc
sub
push
and
js
not
push
add
loope
xor
xlat
mov
out
add
add
inc
and
add
ss
xchg
sbb
popa
retf
enter
push
jg
jnp
in
adc
xchg
adc
movs
sar
inc
sub
push
aas
(bad)
dec
(bad)
call
movs
fadd
mov
push
dec
loop
fiadd
popf
mov
cmp
loope
js
xor
cmc
xor
jmp
(bad)
jmp
test
dec
gs
jae
ja
test
xor
shr
cwde
jno
pop
mov
or
fstp
clc
sub
push
iret
mov
mov
clc
jo
popf
outs
mov
xchg
enter
mov
ret
push
(bad)
lds
aad
mov
fild
les
xor
das
mov
pop
jl
hlt
int
cmps
out
das
and
cmp
cmp
add
sbb
mov
in
dec
outs
or
jg
mov
(bad)
cmp
mov
xchg
add
sar
inc
dec
jp
push
mov
stc
jb
jle
and
stos
mov
or
lods
xor
ds
dec
pop
push
or
jmp
js
pop
mov
and
enter
mov
add
cs
out
loop
sbb
adc
(bad)
sbb
push
fidivr
pop
std
retf
out
add
jmp
jmp
lds
jl
and
adc
pop
lods
add
into
outs
inc
cli
pop
sbb
cmp
jbe
les
(bad)
fs
push
neg
fnsave
jg
cmp
scas
pushf
pop
(bad)
xor
pop
in
cmps
push
adc
scas
mov
dec
mov
xor
inc
or
pop
sbb
push
jg
fistp
mov
out
movs
mov
out
sbb
out
sahf
xchg
fs
dec
adc
pop
cmps
out
mov
aam
retf
pop
sti
fcomi
mov
pop
pop
cwde
shl
aad
sbb
push
lahf
clc
or
inc
mov
push
pop
test
add
inc
(bad)
idiv
adc
test
adc
add
fadd
adc
gs
shl
xor
retf
add
sbb
push
enter
mov
cmp
pop
mov
cmp
add
jecxz
jbe
sub
cmps
sub
setae
pop
cli
or
scas
fsubr
jge
xor
jecxz
add
add
mov
loop
enter
or
shl
inc
jb
lds
mov
lahf
and
jnp
outs
repz
out
fiadd
mov
fdivr
out
dec
fwait
dec
and
js
dec
movs
pop
sbb
imul
clc
xchg
js
cld
retf
jg
mov
adc
rcl
sti
ja
push
fstp
fs
xchg
les
mov
inc
std
push
xchg
mov
mov
aas
icebp
shl
jg
enter
rcl
movs
clc
in
sbb
pop
fild
mov
loop
xor
push
jmp
aas
push
icebp
push
push
xor
jp
popa
jp
and
ret
scas
jo
jp
xor
dec
xor
push
pop
cld
pop
sub
mov
or
mov
shl
gs
sub
add
in
shl
mov
lods
adc
jne
mov
je
je
addr16
imul
push
cmc
loop
aas
and
add
push
push
mov
jbe
in
jae
dec
ret
adc
mov
pop
cmc
lea
sub
dec
adc
stos
jp
cmp
out
jl
into
fisttp
mov
into
mov
push
in
scas
(bad)
xchg
xchg
(bad)
scas
push
push
cmp
popf
cmp
ret
cld
sbb
xchg
mov
jle
adc
push
mov
retf
in
call
mov
mov
ds
ins
pop
dec
pop
(bad)
cmp
jbe
iret
pusha
push
gs
cmc
mov
and
pushf
mov
xchg
loopne
fdiv
or
add
add
stc
rcl
inc
and
js
shl
mov
out
fsubr
inc
fcomp
js
add
pop
mov
push
stos
and
pop
or
jge
and
test
sub
adc
call
jnp
dec
out
in
sub
cmp
dec
gs
sub
pop
mov
ja
cli
mov
jge
popa
mov
imul
iret
iret
setno
and
sub
adc
lock
jge
pop
jae
into
mov
ja
pop
les
hlt
retf
add
lds
or
mov
mov
mov
mov
loop
sub
mov
dec
dec
cmp
jmp
xchg
stc
retf
sbb
aad
xor
ins
xchg
mov
mov
push
mov
gs
daa
pusha
add
int
addr16
inc
arpl
leave
cmp
jmp
adc
inc
push
imul
mov
mov
mov
xor
fcom
sbb
push
adc
mov
sub
push
mov
fiadd
push
xor
mov
cld
sub
call
xchg
or
sahf
leave
sbb
into
mov
repnz
std
xor
out
push
cwde
add
mov
dec
and
and
gs
inc
sbb
lahf
ins
inc
mov
jae
test
pop
mov
inc
movs
shl
mov
shr
sub
jmp
add
(bad)
jecxz
inc
sbb
xchg
dec
sub
into
ins
lahf
repz
iret
test
outs
pmullw
fs
adc
push
jae
data16
mov
lods
pop
test
mov
mov
jnp
fdiv
mov
pop
mov
out
xchg
shr
call
sbb
adc
push
dec
adc
inc
into
addr16
and
aad
jl
aas
jo
sti
(bad)
adc
sahf
or
pop
repz
fucom
cmp
jge
pop
fld
cdq
pop
mov
mov
xchg
cmp
loopne
out
enter
xor
bound
cdq
sub
pop
push
fsubp
movs
mov
xchg
repnz
push
cdq
mov
mov
mov
imul
cmp
addr16
mov
xor
inc
sub
push
adc
xor
push
mov
out
mov
push
out
xlat
mov
dec
adc
mov
aad
and
icebp
jmp
jnp
loop
push
add
call
xchg
outs
push
adc
sub
mov
adc
cmp
int3
rol
inc
sub
jmp
push
fwait
popa
pop
sbb
cmp
fst
xchg
mov
dec
outs
and
(bad)
pop
pushf
ret
push
jmp
out
cwde
scas
scas
sbb
out
sub
popf
gs
iret
mul
ficomp
mov
mov
popa
inc
or
xchg
outs
imul
mov
push
in
or
mov
loop
stos
jnp
adc
test
in
jae
jns
push
inc
shl
movs
push
jnp
push
jmp
clc
add
push
daa
not
sbb
cmp
mov
cmps
inc
or
jecxz
lds
xlat
inc
jbe
mov
dec
adc
pop
xor
jp
loopne
mov
test
int3
mov
loop
xchg
mov
add
(bad)
cmps
(bad)
ins
adc
jnp
in
sub
cmp
cmp
ret
jno
or
add
inc
sbb
mov
pop
cmp
sub
pusha
mul
cmps
or
in
ja
pop
call
pop
test
xchg
mov
daa
scas
dec
in
cmps
or
fs
mov
in
mov
imul
mov
stc
or
call
loope
sbb
xchg
push
push
mov
rcr
sti
int3
imul
loop
jmp
aad
aas
ss
mov
add
mov
repnz
mov
jb
js
std
mov
jg
fwait
add
mov
push
add
inc
lock
mov
push
mov
add
pop
adc
and
inc
dec
push
mov
pop
cmp
cmps
mov
out
xor
jmp
cmp
sbb
push
mov
pop
adc
inc
xor
xchg
mov
adc
mov
jge
inc
mov
jle
jae
cld
sbb
push
add
cmp
push
mov
xor
cmp
fsubr
and
sbb
fld
cwde
fbld
lahf
rol
clc
xor
push
jecxz
jb
jne
xchg
sahf
push
fidivr
dec
(bad)
popf
xor
pop
mov
sbb
popf
fwait
push
jecxz
pop
xchg
push
adc
pop
inc
jmp
or
sub
push
jmp
cld
jmp
mov
ja
inc
xchg
and
sub
sti
mov
xchg
sub
mov
dec
cli
adc
hlt
xchg
mov
js
into
pop
jl
(bad)
cli
call
movs
pop
mov
xchg
add
inc
adc
bound
dec
inc
mov
dec
xchg
cmp
xchg
out
fisttp
fidivr
loopne
jb
icebp
adc
sub
jle
pop
adc
in
hlt
frstor
xchg
mov
lods
xor
jge
dec
adc
jb
or
sbb
xchg
xor
data16
mov
shl
push
fs
jno
sbb
push
jne
cli
in
sbb
daa
add
mov
cli
jmp
ret
push
adc
mov
or
xchg
or
lods
out
or
into
js
jg
(bad)
mul
shl
jne
loopne
sti
add
aad
ret
ja
pusha
push
push
(bad)
push
mov
mov
rcl
(bad)
mov
mov
inc
dec
test
sub
ficom
mov
in
cmp
add
sbb
mov
add
repnz
(bad)
jp
add
dec
fisubr
xchg
push
push
mov
dec
rol
rol
xor
sub
xor
jecxz
fisub
or
dec
inc
jge
repz
mov
lods
cmp
shl
bnd
(bad)
pusha
in
cwde
dec
adc
cld
mov
mov
sbb
sbb
cmp
sub
mov
mov
push
mov
push
xor
mov
ins
popf
push
mov
outs
jnp
dec
mov
mov
pop
test
stos
stos
out
stos
and
(bad)
mov
call
push
ret
add
mov
(bad)
jp
rcr
or
adc
push
xor
shr
je
outs
retf
or
arpl
les
shl
rol
fldenv
lock
clc
mov
(bad)
cmp
jae
pop
push
rcr
jo
push
dec
cld
mov
mov
mov
xchg
dec
cmp
pop
push
stc
fs
pop
or
cdq
dec
add
mov
(bad)
sub
pop
in
xor
inc
std
fist
inc
mov
sub
ret
inc
xor
aam
sub
mov
movs
in
sbb
ja
sub
mov
popa
xchg
dec
push
lock
inc
out
and
mov
cmp
dec
stos
jmp
gs
in
sub
cmc
xor
mov
mov
out
or
xor
jnp
dec
pushf
mov
jbe
fistp
repz
ja
push
sub
push
and
pop
push
xor
dec
add
ss
mov
je
push
aad
ja
maxps
fcmovbe
mov
dec
cmp
inc
enter
out
fild
xor
dec
cmp
daa
inc
out
pop
ins
mov
xchg
ja
je
lea
pop
addr16
imul
aam
icebp
mov
xchg
ins
mov
adc
xchg
or
inc
dec
xor
and
inc
adc
fwait
add
out
lods
mov
pusha
dec
call
jmp
je
jge
dec
pop
add
fcom
mov
pop
jbe
inc
fs
fs
fst
dec
push
add
dec
jle
repnz
jg
sbb
cmps
fild
or
xlat
or
clc
xchg
jmp
inc
rcl
jae
adc
cmp
test
push
ja
cmc
ja
push
jmp
not
xchg
push
add
adc
out
fisub
cmps
mov
push
hlt
pop
cdq
cmp
pop
jbe
imul
fcomp
sub
xchg
xchg
sti
repnz
or
nop
neg
or
dec
xor
lock
push
pop
cmp
xchg
inc
adc
or
std
das
mov
and
fiadd
into
in
xor
addr16
cli
sub
shl
push
in
xchg
xchg
jne
push
mov
addr16
cwde
out
push
sahf
imul
mov
mov
add
call
push
and
retf
int3
idiv
sub
xchg
sahf
mov
mov
push
jmp
repz
stos
(bad)
push
nop
out
fstp
add
xor
xor
sub
jno
test
adc
addr16
and
int
push
jl
push
cmp
ins
int
inc
jmp
mov
or
lods
and
aas
das
or
rol
mov
retf
mov
mov
push
ins
enter
or
loopne
jg
dec
push
add
add
sub
imul
sar
aaa
stos
mov
lock
jp
adc
pusha
mov
(bad)
addr16
pop
inc
pop
add
and
dec
inc
inc
push
add
aas
push
mov
dec
les
ja
push
in
(bad)
test
mov
sbb
cli
cmps
and
call
adc
cwde
and
retf
sar
push
call
add
rcl
idiv
mov
xor
xchg
pushf
push
adc
js
and
mov
add
aad
sub
aad
aad
out
aaa
add
fidivr
mov
aaa
enter
xchg
add
fxch
add
pop
mov
(bad)
sti
or
sub
das
(bad)
and
xchg
test
xor
cmp
xchg
mov
sub
dec
idiv
nop
movs
stos
jmp
(bad)
adc
jle
(bad)
enter
push
lock
es
inc
in
mov
jmp
and
pop
pusha
stos
xor
loop
ficomp
cmp
mov
dec
pop
jg
push
movs
xchg
es
pop
push
hlt
cwde
loope
add
xchg
call
sub
xchg
aad
pushf
scas
mov
leave
enter
jnp
movs
fdiv
pusha
add
push
daa
dec
adc
dec
rcl
push
xchg
push
popa
cmps
mov
not
scas
inc
jp
mov
mov
cdq
stos
add
adc
fst
pop
enter
dec
xchg
push
ins
push
adc
outs
je
jl
imul
ds
shl
test
pop
xor
jae
jne
xor
icebp
jb
les
sbb
xchg
ins
jge
sub
cmps
add
popa
pop
cmps
mov
mov
sbb
xor
xor
sbb
pop
add
movs
shl
adc
nop
sub
retf
iret
in
ins
jns
and
dec
xor
pop
out
or
add
xor
cmp
movs
fisubr
cmp
vcvtpd2ps
enter
and
cmp
mov
adc
xor
sbb
in
cmps
mov
cdq
popf
mov
ja
adc
jo
sbb
sbb
xchg
sbb
cld
and
jbe
sub
pop
stc
outs
and
add
dec
daa
add
ss
shl
cmp
dec
jg
dec
inc
mov
andnps
retf
pop
fdivr
jmp
mov
adc
std
jbe
xchg
vcvtps2pd
jp
pop
aaa
ror
ret
out
ins
add
mov
mov
mov
cmp
fsubr
scas
cmp
gs
ror
retf
push
mov
dec
dec
cld
push
xor
inc
ja
imul
jno
int
fidivr
adc
sar
sbb
dec
cs
sub
cmps
sbb
lods
jo
cmp
xor
rcl
inc
xchg
and
nop
out
mov
into
push
(bad)
into
sub
mov
(bad)
dec
dec
jp
pop
outs
aas
mov
scas
xor
inc
ror
pusha
into
sub
iret
int3
adc
sbb
cli
rol
lods
adc
cmp
mov
in
mov
mov
fs
enter
ret
pop
call
in
dec
clc
add
add
adc
push
shl
xchg
out
xchg
pop
jbe
jb
in
es
mov
dec
xor
or
ret
test
cmp
jns
sbb
icebp
loop
sub
push
sub
sub
inc
cli
xchg
stos
or
and
inc
repz
shl
mov
jns
ins
jns
push
out
push
pop
dec
(bad)
mov
pop
push
add
adc
(bad)
xchg
add
gs
cmp
enter
dec
gs
or
pushf
ds
mov
jecxz
leave
xor
or
ja
mov
mov
xlat
scas
push
pop
xchg
pop
inc
adc
je
xchg
mov
inc
sub
cmps
xchg
imul
mov
std
xor
add
inc
je
adc
xchg
div
push
push
adc
xchg
mov
daa
pop
add
adc
push
leave
mov
sub
jbe
mov
int3
inc
xor
jb
(bad)
fiadd
add
sub
adc
test
in
bound
std
div
je
ins
xchg
loope
aas
repnz
jae
ret
dec
push
aad
jo
jecxz
loop
int3
ficom
dec
out
cs
adc
add
mov
dec
ror
addr16
push
jle
push
inc
fcmovu
stos
cs
sbb
xchg
pop
(bad)
cli
in
and
scas
into
cdq
sub
mov
ins
or
inc
xchg
(bad)
test
jns
jae
xor
xchg
loope
test
xor
bound
jb
repnz
pop
add
pop
mov
push
in
add
in
std
aas
and
and
dec
add
test
jbe
mov
(bad)
pop
inc
stos
fnstcw
adc
adc
add
arpl
(bad)
jnp
(bad)
and
push
shl
sbb
pop
std
dec
mov
(bad)
pop
sbb
fist
inc
das
daa
or
sub
pop
ss
dec
sub
or
inc
push
(bad)
or
cmovo
adc
enter
movs
repnz
cmps
dec
(bad)
and
mov
stc
mov
aam
xchg
and
fs
adc
aas
inc
pop
(bad)
imul
cli
sub
jmp
mov
and
aam
cmp
mov
cli
sbb
mov
jae
fild
jmp
pcmpeqb
fidiv
pop
mov
test
mul
jno
adc
and
dec
jp
loopne
cmp
fsub
sbb
mov
dec
add
fwait
neg
arpl
test
push
jne
fdivr
mov
stos
fmul
mov
mov
jp
movs
xor
sbb
or
test
xchg
es
adc
push
mov
scas
das
das
sti
or
fild
add
inc
mov
test
fist
add
int3
xchg
add
sbb
add
outs
mov
daa
dec
sti
push
inc
and
pop
arpl
push
popa
icebp
call
mov
rcr
sbb
cs
cmps
cwde
cmp
xchg
sbb
sar
cmp
dec
and
cmc
mov
neg
js
xchg
sbb
dec
neg
frstor
lea
(bad)
xchg
ltr
xor
push
and
nop
xchg
repz
test
jnp
mov
mov
imul
mov
dec
push
xchg
cmp
add
inc
xchg
xor
cmp
xor
sbb
push
outs
cmps
dec
push
(bad)
sar
and
fadd
push
mov
mov
les
or
stos
xor
outs
pop
mov
imul
call
dec
and
outs
nop
mov
mov
nop
das
mov
push
icebp
push
dec
xchg
ds
push
lahf
bnd
sbb
stos
add
cdq
daa
add
xchg
fadd
adc
mov
add
stos
retf
sbb
add
xor
hlt
xchg
jecxz
jecxz
xor
addr16
jmp
neg
arpl
arpl
push
and
lea
es
xor
sub
xchg
cwde
fdiv
sub
mov
and
pop
xor
mov
lds
call
cdq
fild
mov
add
sahf
and
fidivr
shl
push
xchg
fwait
lds
icebp
retf
fldcw
inc
and
and
out
sbb
adc
add
dec
dec
ja
sar
(bad)
pusha
push
adc
cld
xor
test
retf
rol
push
adc
bound
xor
cdq
iret
or
loopne
jnp
mov
popa
adc
out
js
xchg
sub
pop
cdq
mov
mov
adc
aad
xchg
(bad)
mov
pop
mov
cmp
jno
inc
mov
(bad)
pushf
ja
into
sti
fnstenv
pusha
hlt
mov
mov
dec
loope
add
jbe
iret
xor
cmps
ret
sbb
movs
int3
hlt
movs
dec
push
adc
or
icebp
dec
cmp
cmc
outs
shr
xor
mov
mov
mov
nop
out
mov
push
mov
loope
mov
aas
(bad)
sub
repz
or
xor
fstp
int3
jno
inc
je
call
repz
hlt
sar
mov
dec
pop
sahf
pushf
push
adc
aam
mov
add
imul
jae
push
jbe
xor
(bad)
(bad)
jmp
fdivr
jo
push
add
lock
gs
xchg
shl
jmp
fcom
jmp
lds
adc
adc
aaa
iret
in
fwait
rcl
xchg
ret
sub
xor
dec
add
(bad)
fiadd
nop
inc
cld
mov
iret
ret
repz
pop
mov
popa
retf
inc
mov
bound
sub
jmp
and
jp
out
fcomp
sbb
shl
div
rep
push
jecxz
stc
sbb
repnz
mov
adc
retf
mov
call
xor
push
and
or
jmp
sbb
inc
or
call
mov
dec
cmp
add
or
cmp
xchg
div
fwait
jnp
cbw
sbb
cmp
dec
xor
std
add
push
pop
mov
arpl
inc
cmps
stos
loop
pop
cwde
sub
mov
xchg
xchg
bound
mov
test
add
popa
rcr
xor
ins
lds
dec
jnp
sbb
stos
mov
fdivp
fwait
sbb
mov
(bad)
movs
xchg
mov
lods
ret
mov
sub
and
pop
pop
jae
jns
mov
and
jo
add
xlat
cld
mov
cdq
sub
iret
add
test
nop
pusha
pop
sub
pop
pushf
push
jno
rcr
cmp
pop
inc
inc
fadd
dec
inc
sub
add
pop
add
leave
add
daa
sahf
cmp
mov
test
mov
pop
leave
shl
xchg
in
mov
jge
jne
retf
scas
in
pop
or
es
jno
mov
fidivr
scas
ds
sub
sub
inc
xchg
mov
inc
jg
sahf
int
mov
sub
in
adc
dec
sub
push
and
bound
aaa
repnz
pop
jb
mov
lea
dec
in
ds
pop
cld
jmp
adc
mov
mov
add
pop
enter
frstor
adc
daa
add
repz
xor
push
fld
fadd
in
or
add
imul
call
shr
mov
or
jb
and
ja
mov
push
sbb
rol
pop
inc
js
add
mov
dec
lds
test
mov
fmul
add
mov
outs
in
adc
mov
pop
test
or
push
jmp
gs
int
(bad)
bound
adc
lock
jbe
add
in
mov
daa
mov
in
(bad)
mov
and
retf
xchg
cs
test
das
sub
sub
cli
scas
and
call
xchg
in
inc
cmp
arpl
repnz
sar
add
sbb
test
int3
inc
xor
cli
int3
add
push
stos
mov
mov
sub
dec
icebp
scas
add
push
sub
in
mov
mov
sub
sbb
das
pop
inc
push
push
sub
inc
adc
test
les
mov
add
push
rcr
ds
dec
mov
sub
out
ficom
je
fdiv
jns
cmp
cmps
cmp
sahf
cmps
rep
jp
add
popa
inc
pop
mov
xor
leave
pop
sub
(bad)
xchg
fidivr
not
sub
jp
fdiv
jmp
leave
pop
xchg
popa
jmp
adc
xor
jmp
(bad)
les
cmp
outs
(bad)
sbb
iret
mov
jge
sub
mov
daa
ins
pushf
jbe
clc
xchg
ja
lods
stos
cld
sbb
div
add
sbb
loopne
dec
sbb
add
iret
jle
xor
sbb
xor
lahf
inc
jb
int3
call
fwait
adc
ja
stc
imul
jne
in
mov
add
cmp
sub
and
ja
adc
das
mov
outs
popf
gs
les
jge
mov
jmp
inc
ret
cmp
or
mov
add
ror
mov
mov
mov
and
push
mul
jb
scas
imul
ss
xchg
test
sbb
fiadd
jb
dec
cmp
out
xchg
stos
push
jl
into
addr16
jbe
or
xor
xor
cwde
shr
push
or
in
cld
xor
dec
xchg
cmp
shr
push
jno
mov
and
mov
mov
fdivr
(bad)
test
cmps
cli
mov
jle
cld
in
xor
retf
jae
(bad)
jb
nop
gs
in
rcr
(bad)
xor
mov
sti
mov
lock
add
push
xchg
dec
sbb
(bad)
mov
aam
add
mov
out
imul
cld
aaa
idiv
std
sub
mov
in
fmul
pop
push
outs
sbb
call
push
cmp
dec
pop
dec
aas
and
bound
xor
jge
inc
add
scas
pop
xor
nop
mov
jns
test
jge
shl
mov
xor
push
or
sbb
jle
cmp
push
mov
scas
inc
mov
and
adc
ret
repz
out
and
retf
ss
fstp
pop
mov
arpl
test
clc
shl
ins
imul
aam
adc
dec
add
jg
dec
add
pop
add
pop
inc
push
int3
fsubr
test
xor
(bad)
jge
loope
pushf
add
movs
mov
mov
push
(bad)
xchg
sub
retf
xchg
popa
mov
retf
mov
jo
and
sub
mov
add
out
or
jl
les
add
bound
push
enter
in
xchg
push
jg
test
jle
out
pushf
xchg
pop
es
xchg
dec
test
lahf
push
mov
pop
dec
(bad)
shl
pop
into
sar
imul
mov
fiadd
stc
(bad)
sbb
addr16
pushf
cli
mov
loopne
(bad)
and
mov
fld
sbb
sti
test
inc
lea
test
sub
repnz
lods
inc
loope
enter
adc
idiv
sbb
popf
xchg
sbb
dec
push
in
dec
inc
jmp
sub
cwde
cli
push
inc
add
fwait
int3
sti
div
or
rol
out
pop
sbb
(bad)
sub
adc
mov
add
sub
test
push
shr
sub
retw
push
data16
fsubp
imul
and
movs
aam
stos
out
out
xchg
jge
mov
ror
sub
push
mov
sbb
daa
inc
and
loop
inc
fidivr
pop
jb
test
fdivr
dec
mov
mov
dec
add
wrmsr
pusha
lock
cwde
push
es
jns
sti
fld
test
dec
xor
jecxz
xor
inc
add
and
adc
call
call
aas
mov
cmc
cmp
ficomp
cmp
jae
not
or
(bad)
retf
cmp
mov
xor
or
cmp
in
aam
push
cmp
in
es
push
add
push
pop
cli
dec
call
xor
mov
xor
sub
outs
and
cmp
cmc
das
sub
push
push
(bad)
fld
dec
shl
pop
lea
test
mov
pushf
out
jbe
stc
mov
fs
dec
ror
mov
mov
loop
adc
cmovp
add
scas
imul
add
test
cmp
inc
inc
add
popf
jbe
mov
cmc
adc
mov
stos
xchg
out
add
xor
and
imul
sbb
jb
mov
sub
mov
inc
scas
popf
jl
call
push
test
lock
std
stc
sahf
or
pushf
fs
pop
or
sahf
xchg
mov
clc
fcmovbe
rcr
push
push
sub
sbb
enter
test
jno
jmp
dec
sbb
push
(bad)
xchg
in
add
add
mov
stos
cmp
aam
jns
data16
int3
clc
sub
les
jle
leave
pop
aaa
inc
lds
jae
pop
shr
pop
(bad)
clc
xchg
adc
sbb
shr
xlat
mov
(bad)
adc
xor
mov
mov
or
imul
push
sbb
mov
cld
imul
mov
adc
adc
sub
mov
jecxz
cmp
les
aad
imul
add
jle
mov
mov
add
sub
xor
inc
sub
dec
es
xchg
cmp
xor
fld
dec
loop
lds
sbb
jo
pop
mov
push
adc
jne
jecxz
in
in
retf
nop
push
jge
adc
mov
addr16
jb
lds
sbb
push
cld
or
int
xchg
mov
mov
das
mov
pop
adc
hlt
fnsetpm(287
daa
lock
mov
cmp
cli
jle
push
shl
fdiv
(bad)
call
mov
stos
and
inc
cs
scas
xchg
popf
jne
in
dec
sbb
into
add
shr
push
daa
dec
rol
mov
dec
inc
jae
jno
inc
xor
jmp
(bad)
(bad)
push
rcl
add
outs
push
sbb
inc
push
or
and
xor
and
in
pop
jbe
cwde
push
xor
cmp
clc
addr16
mov
ret
jl
mov
add
inc
adc
dec
(bad)
fstp
xor
pop
pop
popf
adc
test
fdiv
jl
and
scas
or
psllq
pop
jg
popf
ret
in
jge
push
movs
push
push
and
mov
loopne
xchg
adc
xchg
jmp
or
or
ja
rcr
jmp
ins
dec
outs
test
adc
outs
fild
in
js
aam
leave
ja
in
dec
push
loopne
out
jae
ds
or
and
cdq
das
jle
rcr
adc
cmp
out
add
push
push
and
test
inc
test
jae
mov
add
mov
add
pop
pop
(bad)
cld
pop
mov
or
ret
movs
cli
xor
(bad)
pusha
sub
and
xchg
clc
cmp
or
add
(bad)
or
mov
test
inc
mov
add
inc
add
and
rsqrtps
fucomp
(bad)
sub
ja
or
sbb
lods
(bad)
and
sub
loopne
imul
mov
pop
call
repnz
push
mov
lock
jae
xchg
lods
or
in
(bad)
xchg
call
imul
iret
sbb
gs
stos
inc
inc
call
sub
mov
or
mov
cld
test
cmp
push
fcom
jne
in
or
dec
sub
inc
and
test
test
js
add
jae
dec
retf
push
repnz
ror
jne
mov
mov
mov
cmp
fst
js
call
push
or
sbb
mov
push
fxch
loope
(bad)
or
iret
jne
test
scas
push
movs
xchg
iret
xchg
xor
leave
rol
push
stc
adc
ins
xor
mov
xchg
retf
(bad)
push
repnz
xor
cwde
test
inc
mov
pop
enter
or
pusha
jl
mov
push
dec
dec
cmps
adc
cmp
adc
test
cli
adc
jmp
jne
jo
jg
dec
sbb
iret
scas
push
add
cmp
xor
sysret
or
cmps
(bad)
adc
mov
jo
inc
loopne
sbb
shl
add
sbb
xchg
lods
pop
sbb
(bad)
mov
scas
ins
rcl
add
pusha
inc
test
cmp
fmulp
cmp
into
inc
mov
push
mov
sbb
sub
dec
sub
xor
movs
sar
jp
jno
push
fcompp
imul
out
xor
xor
sbb
sti
int
imul
push
mov
jmp
dec
ret
pop
jmp
dec
rcl
ret
cmc
xor
pop
push
cmp
cmp
ror
retf
xchg
fdiv
mov
stos
mov
sub
mov
inc
mov
sahf
test
xlat
retf
add
jmp
adc
inc
cdq
and
jmp
out
or
hlt
jmp
iret
sbb
dec
xor
inc
adc
std
lock
mov
fstp
shr
cmps
pop
jge
xchg
inc
in
lea
xchg
out
add
out
fmul
add
movs
mov
in
xchg
sub
add
xchg
sti
nop
add
jb
xor
pop
add
sbb
xor
add
adc
and
sub
scas
fldcw
cs
push
inc
dec
cwde
(bad)
movs
or
xor
jecxz
(bad)
(bad)
cmp
dec
dec
test
sbb
push
sub
outs
inc
push
imul
inc
dec
cmp
cwde
jne
sub
push
sbb
mov
mov
adc
lock
mov
mov
(bad)
cld
fnstcw
inc
push
stc
add
sbb
jo
ret
ficom
outs
popa
shl
faddp
lock
mov
int
dec
lds
int
retf
cmp
add
xchg
je
add
jns
leave
jp
cmp
adc
movs
lds
mov
aad
out
mov
push
call
shl
mov
aad
mov
repnz
rcl
adc
cmp
sbb
loop
cmp
sar
sub
xor
dec
push
pushf
je
gs
sti
fild
outs
scas
pop
xlat
push
shl
cdq
xlat
xchg
adc
fimul
lods
pop
add
(bad)
adc
mov
inc
sub
pop
jno
mov
sysret
add
inc
popf
or
sub
lds
adc
sub
mov
neg
xchg
popa
test
int3
mov
xchg
gs
push
lock
out
push
cmps
or
push
xchg
and
adc
(bad)
pop
fwait
push
inc
xor
or
mov
enter
push
mov
mov
xchg
retf
aam
jns
jg
fistp
sbb
pusha
cmps
or
test
test
xor
dec
loop
and
inc
add
xor
sub
arpl
mov
sahf
test
cmps
cwde
dec
push
inc
mov
adc
mov
cli
and
lea
and
add
(bad)
mov
mov
pop
ss
stc
int3
cs
test
stos
movs
mov
mov
enter
sbb
adc
xor
enter
mov
inc
dec
sti
push
and
jle
dec
and
call
or
cwde
(bad)
mov
lods
and
or
(bad)
daa
xchg
cwde
mov
out
sub
sbb
adc
ins
in
pop
fwait
sub
nop
retf
popa
inc
xchg
sbb
cmps
sub
sub
in
add
clc
push
fdiv
in
enter
dec
ret
mov
rcr
daa
test
jnp
sbb
cmps
xchg
push
cld
add
add
and
pop
aas
push
xchg
mov
sbb
(bad)
ja
jmp
jg
push
push
pop
adc
and
push
lock
daa
cdq
and
pop
add
jp
ins
test
xlat
xchg
je
xchg
arpl
inc
dec
fstp
clc
fcomp
sbb
pusha
es
stc
mov
rol
cs
adc
fnstenv
xchg
mov
sub
sbb
pop
sbb
cmps
xor
add
popa
or
push
or
add
sbb
test
outs
test
sti
dec
in
fidiv
ror
arpl
sbb
rol
shufps
push
(bad)
mov
(bad)
cmp
lea
sub
test
sar
das
jnp
mov
stc
push
call
cld
pusha
jmp
pop
jg
lock
adc
push
iret
cmp
or
adc
push
dec
jbe
pop
das
push
xor
jecxz
push
xchg
scas
inc
fist
dec
stos
and
cmps
ret
mov
mov
rcl
(bad)
sub
and
ror
js
repnz
mov
jae
pop
add
(bad)
sub
ret
out
sbb
inc
imul
mov
mov
xchg
movs
ja
jmp
pop
jne
fs
sbb
lahf
jl
xchg
cmp
cmp
dec
mov
xchg
xor
js
xchg
mov
movs
xor
sbb
in
push
pop
cmp
push
loopne
pop
cs
sbb
mov
(bad)
mov
dec
mov
cmps
das
ror
cmp
mov
ret
pop
into
push
sub
rcr
dec
pop
cmp
test
cmps
test
and
mov
or
push
mov
adc
popa
mov
push
int
or
hlt
inc
adc
adc
xchg
jmp
les
mov
(bad)
add
mov
jmp
pop
push
xor
mov
scas
sar
xor
fcomp
jo
and
inc
out
inc
adc
xchg
pop
or
ja
lock
xor
fnsave
mov
loope
and
and
retf
or
lock
outs
in
stc
shl
inc
adc
mov
sub
sub
fisttp
je
inc
mov
mov
aad
sbb
lds
mov
(bad)
out
mov
cld
scas
jnp
inc
push
ficomp
imul
pop
xchg
sbb
mov
sub
xchg
push
pop
pop
call
dec
les
pushf
test
jle
movs
push
les
adc
sbb
pushf
mov
mov
stc
sub
push
add
pop
bound
inc
loope
xor
jmp
iret
loop
shr
in
mov
aam
cmc
cmp
sar
aas
push
cmp
inc
or
or
inc
mov
push
cmc
sbb
mov
cmp
neg
jnp
adc
or
lods
mov
outs
push
mov
cmp
cld
fst
sbb
sbb
jno
jmp
lea
in
inc
lea
(bad)
clc
pop
mov
in
mov
xor
xchg
push
cdq
mov
pop
mov
(bad)
pusha
cwde
push
lea
jge
jb
int3
in
mov
pusha
xchg
xchg
and
jo
dec
fs
sti
xor
lahf
add
or
xor
jmp
mov
push
aas
mov
xchg
fwait
cmc
or
mov
xor
mov
mov
sub
movs
jb
jnp
or
mov
mov
mov
test
sbb
jmp
adc
push
dec
frstor
pop
mov
fdivrp
rcr
mov
mov
jge
rcr
xor
pop
sub
test
add
pop
mov
pushf
icebp
ror
(bad)
jle
lahf
js
fistp
pushf
jge
dec
adc
or
lock
cwde
stos
xor
rol
push
mov
sbb
sbb
push
push
rol
push
imul
adc
add
inc
push
pop
cdq
cld
xchg
inc
or
pop
dec
dec
mov
(bad)
and
fbld
sahf
push
xchg
out
add
adc
cmp
ss
outs
mov
ins
popa
dec
mov
mov
xor
sti
lds
inc
and
inc
pop
fs
jo
sub
jb
(bad)
aam
sbb
ins
add
cmps
xchg
mov
push
(bad)
(bad)
xor
jno
push
pop
inc
cwde
mov
stc
mov
mov
mov
mov
mov
add
mov
xor
clc
sbb
jp
or
pop
mov
sub
inc
jo
stc
mov
add
js
mov
imul
sbb
pop
jnp
fmul
loop
out
pop
xchg
dec
adc
push
lds
jo
xchg
jae
pop
mov
fsub
jno
push
enter
mov
(bad)
xor
iret
mov
add
iret
add
retf
dec
sar
pop
add
cmp
(bad)
pushf
into
dec
mov
int
push
pop
mov
xchg
(bad)
pop
aaa
cdq
xor
dec
adc
xchg
xor
sub
(bad)
leave
push
add
sahf
nop
and
pop
ins
inc
pop
xor
xor
inc
int3
lds
rol
int3
mov
and
vextracti64x4
sahf
mov
mov
add
cld
loop
aam
and
(bad)
dec
xor
and
cmc
and
mov
pop
jg
jmp
es
sbb
or
push
mov
push
push
add
add
ja
retf
lock
icebp
jmp
pop
jo
imul
xor
stos
bound
push
and
pop
jae
daa
outs
test
scas
stos
bound
inc
push
push
cmps
push
lea
jl
test
cmp
(bad)
cwde
(bad)
dec
pusha
add
adc
sbb
inc
cmp
adc
mov
aas
pusha
push
or
mov
xor
add
sub
push
(bad)
cmc
outs
(bad)
gs
arpl
cmp
push
add
je
hlt
jae
sub
mov
xor
iret
xor
stc
std
scas
(bad)
jmp
out
push
push
or
fild
inc
sub
aad
repz
jle
pop
std
fldenv
cmp
int3
or
jge
xchg
xor
mov
das
jecxz
cmp
daa
pushf
dec
cli
adc
in
js
call
cmp
fisttp
jp
xchg
jg
out
cs
xchg
mov
in
retf
clc
pop
mov
stos
or
or
cmp
jo
mov
lods
pop
jmp
cld
loopne
int
sbb
ds
call
jne
lods
lea
pop
cmps
rcl
inc
lahf
dec
(bad)
cli
sbb
xchg
aas
xchg
pop
xchg
xchg
and
xchg
fscale
cmp
imul
pop
out
enter
enter
mov
fisttp
sub
rol
adc
mov
mov
mov
dec
daa
mul
call
cmps
es
xchg
mov
loop
mov
jb
and
cmp
icebp
jg
and
adc
mov
(bad)
retf
mov
dec
js
pop
jecxz
pop
shr
cmps
pop
icebp
jp
cmc
cmc
mov
sbb
iret
and
pop
aas
push
xor
lahf
mov
mov
mov
dec
dec
fisttp
les
fdivr
in
fadd
add
push
mov
and
sar
imul
jg
inc
dec
add
xor
xor
and
sub
add
stos
pop
call
cmp
jb
and
sahf
popf
and
or
mov
lods
mov
jae
ror
imul
pop
dec
add
push
add
cdq
push
out
mov
push
pop
neg
add
mov
cmp
icebp
jmp
and
cmc
push
fmulp
loopne
inc
mov
mov
pop
ds
mov
(bad)
inc
pop
inc
popa
xchg
or
xchg
pusha
and
inc
enter
test
add
repnz
lahf
mov
pop
std
ja
ret
(bad)
jnp
xchg
repnz
test
test
sub
dec
enter
xor
(bad)
pusha
pop
fbstp
test
mov
shl
fsubr
jne
mov
sbb
pop
inc
arpl
cmp
(bad)
sub
out
or
push
rcl
inc
push
add
xchg
push
movs
adc
shr
cmp
cmp
mov
jo
and
retf
fwait
xor
or
lds
and
dec
xor
and
outs
pop
(bad)
(bad)
ret
mul
(bad)
fcmovnbe
jns
inc
lock
lods
sbb
push
sbb
add
or
xor
sbb
movs
into
je
test
add
fmul
outs
(bad)
xchg
mov
xor
mov
mov
lock
inc
sbb
push
pop
or
out
pop
call
jg
imul
lahf
shr
add
mov
das
std
mov
movs
xor
or
stos
sub
scas
movs
aam
or
adc
dec
idiv
jmp
dec
mov
or
test
in
add
lock
movs
pushf
cmp
push
movs
push
sbb
ins
icebp
aam
call
sub
inc
in
jle
pop
xchg
mov
ins
mov
test
adc
cwde
addr16
call
retf
xor
xor
push
sbb
test
add
mov
loopne
xor
hlt
pop
movs
xchg
push
dec
jbe
inc
ja
jp
ss
movs
cmp
adc
aad
mov
and
pop
test
mov
pop
cmp
pushf
push
xor
inc
adc
fwait
dec
in
into
int
out
std
or
(bad)
push
sub
sar
je
add
pop
adc
jno
shl
pop
loopne
imul
pushf
jnp
pop
not
jle
mov
mov
pop
arpl
pop
push
jmp
icebp
xchg
leave
loop
xlat
lock
adc
outs
int
mov
stc
pop
test
xor
outs
and
imul
cmc
xchg
mov
add
test
fimul
int3
imul
jbe
out
jg
lds
rol
jbe
jno
dec
lahf
cld
mov
mov
fcomp
inc
in
cli
jg
mov
dec
push
inc
or
sbb
adc
sbb
cmp
fist
push
adc
inc
cmp
inc
fldcw
mov
xchg
cmps
repnz
and
hlt
test
addr16
jb
jg
push
inc
push
cmp
jno
mov
stc
mov
sub
in
(bad)
repnz
cmp
push
enter
in
ja
inc
push
pop
add
lock
mov
imul
arpl
(bad)
mov
sub
stos
cdq
fisttp
inc
jbe
fs
push
ins
out
jns
inc
mov
xor
pop
xor
cmc
nop
push
pop
and
add
add
xlat
or
push
call
dec
push
call
into
adc
repz
mov
dec
sbb
mov
je
fiadd
ret
dec
test
dec
lods
shl
mov
push
out
add
add
fwait
jns
sbb
push
sub
aad
mov
add
jns
fwait
cmc
cmove
push
jno
nop
adc
sub
int3
push
mov
cli
repz
jbe
mov
repnz
sahf
and
movs
sub
jg
sbb
sub
jle
rcl
in
jnp
stos
xor
mov
arpl
dec
scas
aad
jmp
(bad)
and
shl
out
inc
daa
sbb
push
mov
std
push
xchg
jmp
push
inc
cmp
push
lods
push
jno
lock
mov
lds
jecxz
test
pop
cmp
cmp
mov
inc
imul
lods
pushf
jbe
mov
jno
repz
repz
cmp
cwde
mov
xchg
add
mov
jne
adc
out
dec
xchg
sti
popa
gs
xchg
dec
mov
inc
aam
mov
push
sahf
and
pop
lods
icebp
icebp
dec
ins
or
outs
xor
jnp
xor
lahf
adc
inc
shl
push
inc
inc
mov
ins
jp
cmc
xchg
pop
lds
mov
add
movs
push
or
cdq
rol
mov
and
daa
cmp
jecxz
mov
sbb
fdivr
cmp
test
jl
rcr
mov
cmp
fld
jmp
sbb
dec
sti
rcl
mov
mov
sub
fucom
pusha
enter
pop
pop
sti
lea
or
movs
shl
sbb
lods
test
cdq
jge
jae
cmp
shl
jae
add
add
inc
es
xchg
popa
aad
jp
jmp
punpckhwd
jnp
cdq
fdiv
dec
mov
push
shl
add
sti
idiv
pop
inc
dec
xchg
pop
push
inc
push
stos
pushf
sti
jbe
in
xor
(bad)
and
push
fs
jp
xor
push
or
cmp
mov
fld
inc
adc
push
imul
xchg
add
jecxz
(bad)
(bad)
aas
std
pop
lods
jg
gs
icebp
mul
sahf
lahf
cmp
and
sbb
jne
sbb
jecxz
or
hlt
bound
and
mov
fs
aam
xchg
lahf
cs
lods
int
push
aad
dec
inc
lods
fwait
pop
popa
sbb
adc
lea
and
push
sub
popf
popf
pop
dec
fnstenv
dec
inc
in
shl
int
pop
jo
add
mov
xchg
dec
fcmovu
cli
clc
adc
add
movs
push
pop
lods
cmp
xchg
mov
int
xchg
bound
in
js
push
fsubp
pop
enter
push
ds
(bad)
call
sub
outs
mov
pop
fisubr
movs
mov
out
add
push
mov
pop
add
sbb
push
mov
inc
mov
adc
into
icebp
(bad)
sbb
mov
(bad)
int3
sub
popa
in
dec
mov
retf
call
and
out
call
ins
(bad)
xor
shl
mov
jge
adc
mov
sub
cs
jmp
sub
popf
or
imul
pop
sbb
cmp
dec
inc
add
pop
(bad)
add
dec
out
fstp
sub
stos
in
daa
in
mov
dec
jo
(bad)
push
pop
shl
repnz
dec
xchg
(bad)
push
scas
test
and
popf
ins
mov
fdivr
ss
popa
cmps
in
cdq
inc
sub
lahf
test
mov
daa
mov
out
mov
inc
or
(bad)
sub
mov
loop
push
aas
sbb
xchg
dec
fst
test
(bad)
sar
mov
loope
mov
xchg
adc
jge
lea
(bad)
scas
ret
cmps
bsr
dec
pop
sti
jne
ja
out
aad
gs
jno
cmp
retf
sar
movs
push
test
enter
aad
lods
dec
xchg
in
sahf
and
dec
jnp
lods
loopne
cmps
pop
mov
xchg
cmp
dec
js
pop
div
popf
pushf
je
add
cmp
repz
repz
sbb
ins
push
add
shl
xchg
(bad)
push
popa
xlat
pop
or
and
xor
dec
lods
(bad)
xor
test
arpl
xor
cdq
data16
sub
stos
sbb
cmp
lahf
out
cmp
xchg
mov
int3
xchg
or
jle
mov
scas
xchg
or
sub
sbb
mov
stos
mov
lea
push
cmp
call
rcr
mov
or
loope
mov
fisttp
mul
push
xchg
test
jecxz
daa
add
adc
xor
add
push
repz
mov
imul
pop
sub
int
rcr
add
imul
sub
add
pushf
xchg
dec
add
ds
pop
ss
imul
mov
les
add
cmp
int3
inc
pop
es
pop
jns
add
mov
cs
enter
adc
add
and
push
repnz
adc
cwde
or
int
pop
rcr
ja
xchg
sbb
pusha
sub
shl
add
(bad)
and
(bad)
mov
cmp
in
fisttp
in
(bad)
(bad)
aas
out
jp
cmp
cld
xor
cmp
nop
popf
xchg
cdq
out
shr
mov
es
stc
cs
hlt
outs
xor
pop
movs
push
cmp
add
scas
add
out
ins
dec
adc
cs
test
add
call
hlt
cmp
cmp
ds
call
mov
push
jge
call
mov
or
out
jae
test
xchg
out
cmp
add
pop
inc
mov
ds
popa
shrd
push
sub
dec
cmp
lahf
jmp
sbb
cmc
fidiv
jmp
mov
sti
jmp
add
push
cmc
sbb
adc
je
push
inc
jns
push
mov
(bad)
and
xor
jmp
dec
ret
jecxz
jmp
nop
sub
pop
xchg
jecxz
std
rol
sub
sub
xor
xor
test
cdq
aam
adc
mov
icebp
mov
xchg
or
add
shl
or
mov
push
xchg
xchg
sub
or
call
mov
sub
les
in
and
or
popa
push
test
arpl
adc
jo
and
cmps
fdiv
scas
push
nop
int3
sbb
sbb
xchg
adc
add
adc
dec
inc
cdq
jnp
sbb
scas
scas
jl
popf
lea
and
add
sar
test
shl
cmp
nop
aad
xchg
gs
jb
ins
shr
pop
retf
shr
fwait
pop
and
cmps
inc
adc
jecxz
dec
mov
sub
sbb
std
les
loopne
inc
xchg
int
(bad)
xor
sbb
pusha
and
xchg
into
lods
mov
push
int3
fldenv
sbb
pusha
add
cmp
ins
xor
mov
inc
mov
dec
mov
pusha
dec
mov
xlat
xchg
jl
pop
and
xor
jecxz
push
cs
lods
enter
mov
sub
pushf
cmp
fdiv
sbb
ret
nop
adc
les
mov
adc
std
repz
xor
sub
lods
inc
and
sub
adc
sbb
adc
sub
cmp
pop
pop
add
mov
or
aad
imul
or
jp
(bad)
xor
xor
sub
add
xchg
jnp
rcr
bound
es
inc
(bad)
jmp
mov
dec
jge
mov
(bad)
shl
cmc
xchg
cdq
js
stc
lea
test
into
xor
ds
fistp
cmp
mov
jo
out
push
mov
cdq
mov
jb
into
adc
stc
aas
push
jb
sbb
dec
dec
jo
mov
adc
loop
mov
cmp
iret
push
rol
shl
movs
sub
test
cmp
fsubr
jae
hlt
adc
pop
das
jmp
and
push
je
lock
lea
cmp
lods
lahf
jnp
in
dec
adc
mov
pop
pop
or
add
in
(bad)
push
ds
push
and
mov
cmps
popa
push
icebp
or
into
and
pop
dec
cmp
popa
mov
popa
lahf
cmp
in
mov
dec
xchg
xchg
fdivr
sub
add
stc
dec
leave
xchg
and
fistp
dec
(bad)
sub
gs
inc
dec
in
jb
jl
or
test
push
mov
js
mov
jnp
cmc
outs
or
jo
dec
hlt
inc
xor
and
add
jmp
sbb
push
imul
stc
and
dec
dec
rcr
pop
dec
call
mov
stos
dec
inc
dec
popa
ds
xor
or
enter
es
mov
xor
mov
cmps
add
push
loopne
xchg
adc
mov
fmulp
bound
jmp
inc
sahf
mov
adc
mul
fwait
xor
popf
call
dec
and
rol
pop
sahf
sub
lods
shl
lds
jns
out
push
inc
mov
shr
xchg
loop
sbb
out
mul
inc
lods
retf
into
jnp
push
rol
pop
jae
stos
call
mov
(bad)
fisubr
add
xchg
scas
sbb
and
popf
jne
nop
jge
inc
xchg
push
cmp
pop
and
pop
add
mov
jp
ds
or
pop
xchg
jecxz
dec
mov
movs
mov
sbb
pop
popf
stos
stos
shl
(bad)
cmp
xor
sbb
mov
jmp
dec
push
xor
rol
sub
pop
fwait
pusha
(bad)
mov
pop
popf
in
fimul
inc
std
add
push
push
or
repz
add
sub
fld
add
and
mov
xchg
repz
inc
in
push
es
push
push
cmp
xchg
sbb
cs
adc
(bad)
jne
and
mul
adc
pop
and
mov
ss
je
xor
mov
jne
popa
in
rcl
gs
push
arpl
pop
mov
lahf
push
pop
cld
cmp
iret
and
imul
add
mov
lds
fmul
outs
in
fcomp
push
jne
or
arpl
xchg
or
mov
cmc
cs
fsubr
xchg
sub
cmovae
jl
ins
jmp
jae
cmc
movs
xchg
or
sub
sub
daa
into
bound
frstor
add
sub
enter
mov
push
sub
sti
mov
cwde
dec
js
fisttp
push
inc
cs
jg
jle
mov
mov
jno
add
or
mov
repnz
pop
ss
vpaddb
push
mov
sbb
dec
xchg
dec
addr16
lods
mov
fpatan
movs
xor
pop
daa
or
sub
pop
jnp
retf
into
bnd
movs
xchg
loopne
mov
les
mov
add
mov
mov
enter
xchg
add
xlat
sar
cld
xlat
pop
or
repz
mov
in
outs
cmp
mov
inc
mov
jnp
dec
push
xor
cmp
test
mov
xor
fisubr
inc
loop
aaa
mov
push
mov
xchg
mov
and
mov
mov
cmc
jnp
inc
loop
ds
or
mov
cmp
inc
call
fidiv
sub
jg
mov
fcom
or
nop
push
inc
or
dec
fdivr
xchg
sbb
and
push
es
lahf
jns
mov
mov
add
jb
mov
call
ja
fs
pusha
mov
adc
cwde
sbb
xchg
je
mov
or
adc
dec
and
mov
sbb
mov
je
ror
and
jo
outs
cwde
aas
je
leave
mov
mov
test
mov
repz
mov
cmp
stc
mov
jb
jns
cwde
mov
ja
push
enter
inc
ret
xor
mov
xor
cld
cmp
sbb
cmps
mov
(bad)
pop
fmulp
cmp
mov
aaa
repz
add
data16
(bad)
jmp
lods
adc
repnz
jecxz
sbb
(bad)
lea
mov
inc
jo
jge
xor
xchg
imul
jnp
les
aas
mov
scas
fild
jo
or
mov
mov
ret
loopne
ins
push
xchg
std
push
mov
out
test
mov
xchg
jo
rol
inc
icebp
clc
lock
mov
(bad)
aad
pop
cmp
jge
jge
adc
je
jecxz
rep
pop
jno
or
in
sbb
fnstsw
ret
xlat
xchg
nop
mov
add
cmp
adc
clc
mov
adc
data16
jae
pop
mov
dec
jmp
pop
add
pop
push
pop
dec
xchg
je
rcr
xchg
pushf
or
sbb
jno
xchg
xor
mov
int
(bad)
add
sar
mov
js
mov
stos
rol
push
(bad)
(bad)
in
(bad)
sub
lds
pop
xor
int3
adc
pop
loopne
mov
and
gs
iret
pusha
xor
adc
push
dec
jb
add
cs
adc
dec
mov
sti
sbb
sti
int
shl
mov
das
outs
or
enter
daa
fldcw
adc
stc
xor
lock
push
stos
lahf
cli
pushf
test
in
das
shr
cmp
jbe
(bad)
aas
fcomp
add
cmp
test
shr
loopne
rol
into
test
imul
inc
dec
ins
fisubr
cmp
inc
aam
cwde
stos
cmp
hlt
push
push
mov
fiadd
pusha
inc
leave
addr16
push
rcl
jne
cmc
test
xor
add
dec
jno
mov
imul
movs
dec
shl
out
sti
ins
xchg
shl
lods
hlt
sahf
mov
loope
loopne
out
jle
jle
adc
fisubr
lds
adc
xor
push
sete
add
mov
add
je
fmul
lods
in
cmp
mov
rol
mov
push
jb
cld
sbb
dec
inc
fwait
sbb
add
push
int3
shr
pop
mov
fstp
aad
cmp
xchg
cmp
aaa
mov
sub
fcomp
mov
idiv
in
mov
add
out
or
ja
call
pop
sbb
stos
fs
mov
popf
std
aam
sub
rcl
call
mov
xchg
mov
(bad)
xor
add
lods
sti
in
int3
dec
dec
adc
dec
mov
imul
pop
push
mov
mov
mov
stos
mov
sub
xchg
sbb
neg
or
(bad)
push
outs
mov
cmp
push
test
and
sub
test
and
sbb
test
in
retf
jns
pop
or
pushf
pop
iret
in
data16
mov
test
jp
(bad)
imul
shr
add
or
jbe
pop
addr16
or
daa
popf
fs
fwait
(bad)
jmp
xor
gs
jne
fstp
inc
jno
push
aas
std
in
leave
idiv
jge
hlt
pop
add
data16
movs
shr
pusha
bound
pop
dec
mov
or
jecxz
jmp
cmp
rol
rcl
sbb
das
leave
cmp
(bad)
cs
mov
push
ret
mov
sub
jmp
jp
push
mov
sti
adc
ds
ins
jnp
in
cdq
cmp
add
adc
pop
or
jno
pushf
mov
call
test
xchg
mov
cli
int
inc
daa
pusha
fidivr
xchg
icebp
lods
mov
sub
sub
int
sbb
mov
arpl
push
inc
pop
cmp
scas
mov
and
jmp
mov
jae
retf
and
pusha
data16
mov
fdivr
iret
push
jmp
pop
push
sar
add
push
sbb
test
repnz
stos
pop
and
cmps
or
into
mov
pop
and
test
or
data16
xor
mov
add
je
nop
add
in
ret
pop
cmc
mov
push
fstp
cmc
mov
bnd
pop
mov
inc
push
add
push
cmp
pushf
sti
xchg
xlat
loopne
inc
ror
jae
call
fst
dec
cmp
sbb
sbb
adc
pop
test
cmp
xor
out
pop
ret
add
xchg
fst
arpl
paddd
outs
mov
nop
call
dec
cmp
cs
(bad)
adc
in
jmp
ds
pop
adc
dec
aas
jb
dec
mov
adc
add
ficom
shl
sbb
neg
clc
and
pusha
mov
mov
mov
or
cmp
xor
sbb
sahf
push
fcomp
mov
sub
mov
mov
repnz
fidiv
xchg
lahf
pop
mov
pop
test
pusha
lds
arpl
cmp
ret
xchg
mov
int
or
dec
cwde
call
xor
push
push
dec
adc
ds
dec
push
inc
imul
mov
(bad)
adc
xor
xchg
ret
cld
or
ins
pop
test
icebp
sub
jmp
push
movs
sbb
mov
or
addr16
retf
pusha
int3
outs
push
sub
sbb
fmul
dec
xchg
sti
rol
push
repnz
in
fcom
xchg
call
in
mov
inc
test
jl
xor
int
mov
cmp
pusha
jle
cmp
ja
leave
fidivr
fwait
pop
retf
lds
ret
push
cs
xor
mov
jp
push
movs
stos
jl
rcr
stos
push
jl
iret
fnsave
mov
rcr
(bad)
data16
out
das
cdq
pop
out
idiv
pop
add
dec
inc
inc
and
ret
jg
mov
sbb
or
or
inc
mov
adc
xchg
xchg
(bad)
imul
or
mov
loop
cdq
repnz
sub
leave
fcomp
cld
or
out
cld
push
or
fs
(bad)
fcomp
ror
lods
sar
or
int3
inc
cs
int3
in
(bad)
mov
ja
test
inc
pop
in
retf
fidiv
mov
inc
add
add
mov
retf
clc
fnstcw
or
add
fcomp
jp
pop
stc
ret
xor
push
icebp
push
sbb
push
xchg
leave
pop
movs
mov
bts
dec
sub
mov
addr16
(bad)
imul
mov
push
inc
xchg
pop
push
ficomp
or
test
xor
pop
inc
sbb
retf
repnz
inc
or
ins
(bad)
mov
data16
jno
and
adc
test
pop
jecxz
push
mov
call
mov
lods
ret
add
icebp
cmp
call
iret
daa
in
stos
add
add
adc
and
movs
neg
jle
div
cmp
or
loop
(bad)
fimul
movs
xor
in
push
dec
xchg
mov
fcom
ins
movs
jne
xlat
fisttp
xchg
and
push
xor
mov
hlt
push
sahf
into
fwait
cmc
lahf
dec
push
test
mov
pop
lahf
cmp
jae
sub
(bad)
or
push
sbb
inc
mov
lock
pop
pop
sbb
push
mov
jae
inc
mov
inc
mov
jmp
sub
cmc
xchg
into
ins
inc
mov
and
cmps
fucomp
pop
scas
dec
xchg
xor
mov
fstp
test
jmp
xchg
outs
ja
sar
aaa
jne
ins
mov
nop
dec
or
in
stos
mov
mov
stos
inc
cli
jb
rol
rcl
cwde
mov
jp
jo
mov
lods
push
mov
xor
mov
das
mov
nop
jp
inc
test
jbe
push
pop
adc
retf
inc
or
sti
fidiv
test
daa
add
(bad)
int3
jg
xor
jle
xor
add
into
mov
bound
cmp
mov
sub
loop
sbb
xchg
inc
jne
repnz
dec
add
pop
cmp
dec
mov
aas
pusha
xor
leave
fisttp
dec
fdiv
mov
pop
fsubr
push
movs
and
sgdtd
pop
mov
jecxz
imul
and
add
lahf
jo
jo
shl
mov
and
rcr
push
stos
test
mov
cmc
(bad)
adc
xchg
cmp
push
push
ja
pop
sbb
push
mov
hlt
cmp
mov
inc
popf
or
mov
add
and
dec
inc
inc
push
xor
mov
cld
jae
in
scas
mov
in
push
jns
cmp
sbb
out
lods
ret
stc
dec
ins
(bad)
xchg
mov
jno
mov
fs
add
cmp
fdiv
xchg
mov
cld
pop
popa
sub
enter
int
dec
cmp
cmp
in
mov
cmps
pusha
mov
push
add
in
xor
add
aaa
jo
mov
pop
iret
or
push
ret
pop
pop
cdq
inc
cmps
ror
cdq
mov
mov
dec
mov
lods
sub
mov
fwait
int3
inc
test
mov
pop
rcl
or
outs
cmp
xor
fnstenv
cmp
jl
fimul
mov
push
sub
lods
or
out
lds
imul
mov
add
add
mov
pusha
mov
cld
std
xor
retf
(bad)
mov
push
rol
dec
sub
sar
cwde
cdq
shr
aam
fwait
mov
add
jmp
mov
(bad)
add
enter
add
dec
sar
es
neg
jns
ja
pop
lock
not
dec
outs
sahf
jnp
shl
(bad)
mov
push
push
fwait
dec
xchg
dec
push
pop
je
pop
push
push
xor
inc
sub
or
loopne
xor
lea
pop
mov
adc
fwait
xor
cmps
mov
or
mov
pop
(bad)
fnstcw
jle
dec
adc
jnp
cli
and
push
jge
push
aas
out
and
sbb
loop
test
or
add
lahf
test
xor
inc
mov
popf
fadd
sbb
imul
mov
aad
adc
sub
test
ds
push
fcomp
inc
(bad)
out
into
mov
out
and
imul
fnstenv
cwde
aas
pop
std
daa
ds
push
out
jmp
push
lea
add
mov
fdiv
pop
cli
sub
stc
add
(bad)
mov
scas
jno
or
push
or
jns
into
rcl
arpl
out
cdq
push
movs
int
aam
and
xchg
sbb
push
pop
sub
in
inc
cmp
push
and
out
and
jno
adc
dec
rcr
test
out
jbe
fst
xchg
dec
xchg
sbb
dec
ror
xor
ror
cmp
(bad)
cs
repz
fstp
cmp
jns
jmp
push
jle
xor
hlt
dec
(bad)
loopne
nop
dec
out
rcr
aad
cli
in
cwde
mov
not
cmp
and
sub
mov
pop
jns
mov
adc
lds
or
jns
jmp
inc
pop
je
sbb
fs
adc
pop
or
aas
test
clc
jmp
push
mov
rol
add
aas
xor
add
movs
fistp
mov
ds
aam
add
xor
loope
pop
fcomp
out
je
dec
sbb
out
sbb
std
sbb
loope
mov
jae
cmps
addr16
dec
out
inc
jnp
arpl
cmp
inc
dec
xor
push
mov
outs
test
jl
cmps
sbb
std
test
ret
mov
xlat
add
inc
push
push
mov
mov
fld
(bad)
ds
mul
fcmove
mov
stos
aaa
push
pop
mov
ror
and
push
cmp
lea
xchg
mov
jbe
leave
les
mov
inc
ja
push
je
in
add
push
jno
adc
adc
dec
aad
arpl
jp
sbb
in
jmp
cmp
clc
xchg
movs
int3
push
xor
xor
lods
xchg
mov
and
xor
mov
xchg
scas
or
mov
ficomp
jne
mov
out
imul
retf
(bad)
mov
pushf
nop
pop
cwde
out
(bad)
adc
mov
rcl
jle
enter
or
push
popa
push
pop
retf
lods
ds
mov
push
lds
cdq
mov
dec
les
lahf
test
sub
push
leave
add
(bad)
in
adc
movs
mov
(bad)
mov
stos
daa
mov
inc
add
jecxz
lock
pop
xor
xor
push
pop
or
cmp
inc
inc
adc
dec
sti
js
movs
adc
mov
inc
shl
mov
scas
shr
dec
mov
call
jge
fwait
push
jno
xchg
stc
dec
mov
(bad)
fistp
xlat
mov
push
inc
neg
adc
mov
adc
rcr
jae
dec
push
cmp
mov
jo
jge
mov
rcl
add
stc
ficom
mov
push
sub
clc
sub
xor
cmp
(bad)
int3
std
mov
sub
(bad)
sub
xchg
pop
push
mov
repz
push
or
retf
into
ror
adc
xchg
cmps
fdivr
xchg
push
int3
cmp
or
ss
in
data16
cmp
sub
lods
aas
jns
lahf
push
rol
xchg
mov
retf
jge
test
push
cld
cs
push
ret
jp
and
push
dec
xor
mov
add
sahf
xchg
mov
cmp
mov
xor
inc
out
aas
(bad)
iret
sar
call
pusha
or
pusha
jmp
mov
sub
outs
fldenv
mov
and
loope
sbb
inc
add
xlat
loope
and
stc
mov
mov
retf
aam
lods
mov
mov
pusha
push
xor
repz
xchg
inc
fcomp
int
sub
rcl
shl
in
cmp
mov
add
call
jg
or
aad
(bad)
jg
or
and
adc
and
xchg
jo
icebp
popf
sub
mov
and
mov
xchg
inc
rcr
or
in
aad
and
cmc
jp
shr
add
jae
mov
pop
jg
lds
dec
repnz
data16
pop
dec
jmp
lahf
sbb
lahf
add
and
iret
ret
xor
in
mov
imul
mov
add
sti
push
jl
and
add
fst
or
popf
add
into
mov
mov
cmp
jo
sbb
dec
imul
fs
mov
movs
mov
cwde
push
sbb
cmp
adc
add
xchg
inc
pop
ret
or
dec
xchg
push
ja
aad
fsubr
cs
push
fsub
adc
pop
nop
icebp
dec
not
lds
enter
ds
xchg
popf
xchg
dec
jnp
cmps
daa
push
(bad)
ja
out
xor
push
cwde
push
out
dec
fbstp
add
pop
add
add
add
cmps
ins
sub
and
pop
xchg
push
outs
fwait
mov
jle
xor
rcl
jg
mov
data16
gs
sahf
mov
jnp
xchg
out
test
xor
dec
les
nop
or
cld
mov
cmp
xchg
cmp
aam
in
mov
pop
es
pop
or
retf
dec
fs
mov
int
sub
std
stos
fs
aas
dec
jns
adc
jne
mov
call
cmp
fdiv
aas
nop
bound
sti
(bad)
es
outs
add
sub
add
add
cmp
jg
std
fstp
jl
aam
test
scas
out
out
mov
(bad)
jne
rcl
aas
sub
jge
mov
xchg
push
and
xor
div
mov
stos
retf
jno
adc
jb
jnp
mov
bnd
fist
mov
lahf
pusha
lds
inc
mov
aas
jp
call
test
cs
call
cli
(bad)
jmp
dec
(bad)
div
repz
add
into
push
je
je
dec
outs
(bad)
mul
mov
fimul
dec
pop
imul
aam
and
inc
or
and
enter
fs
shr
aas
sbb
(bad)
push
lods
inc
adc
test
xchg
add
add
aam
cmp
lock
cmc
xor
cmp
je
xlat
mov
out
mov
pop
(bad)
(bad)
push
cmps
je
stos
je
bnd
out
retf
movs
cmp
call
shr
shr
ins
dec
addr16
mov
std
dec
jbe
cmp
mov
imul
loope
adc
fimul
xor
and
out
aas
cmp
(bad)
inc
or
adc
pop
in
rcr
jne
lods
cmp
jle
lahf
in
push
or
sbb
jns
enter
pop
enter
cs
jae
ffree
jnp
call
sbb
sti
and
sbb
pop
or
sar
push
cmp
mov
lea
jno
rcr
pop
and
fnstsw
iret
mov
aaa
out
add
lock
std
mov
add
add
mov
repz
lahf
add
or
inc
cmps
xor
retf
test
push
imul
and
shr
out
je
inc
ror
daa
cmc
stos
push
call
retf
lock
call
gs
add
ret
xchg
cmp
shl
cmps
push
cmps
imul
int3
xor
mov
pop
pop
outs
into
sub
sbb
xchg
cmp
nop
jmp
add
push
jp
cmp
in
adc
cmps
inc
push
sub
(bad)
inc
sub
and
dec
or
loop
fwait
push
dec
scas
mov
cmp
mov
shl
hlt
stos
aaa
mov
jmp
pop
xor
data16
jns
sub
and
and
sbb
cdq
cmp
mov
add
out
jl
sti
stc
mov
fsub
fld
push
lods
mov
popa
sbb
and
pop
repnz
mov
jb
fnstenv
mov
xor
inc
jp
jg
pop
bound
fcom
mov
pop
lds
shl
cmp
out
xor
loope
mov
sub
mov
rcr
push
adc
xchg
push
shl
call
(bad)
popf
cmp
nop
sub
cmp
xchg
dec
mov
pusha
jl
aad
pop
test
pop
aam
test
xchg
in
test
inc
gs
or
pop
gs
dec
lahf
std
jo
push
mov
push
adc
sahf
data16
(bad)
fist
inc
hlt
call
jge
clc
mov
jge
and
pop
mov
jg
scas
aas
cdq
mov
leave
push
fild
push
add
mov
mov
out
(bad)
jb
cmp
push
sbb
mov
mov
xor
sbb
push
lock
jle
hlt
cmps
mov
in
inc
sbb
mov
imul
cmc
arpl
std
xchg
push
sub
add
dec
xor
fidiv
or
xchg
sbb
sub
sub
ret
cmp
imul
mov
in
fld
xchg
jb
mov
and
(bad)
es
inc
shl
adc
repz
(bad)
neg
js
repz
arpl
(bad)
scas
jp
sbb
addr16
lea
in
popf
pop
pop
adc
test
sub
and
mov
mov
in
fadd
jbe
add
movs
dec
push
les
push
call
rcl
retf
fwait
add
int
(bad)
(bad)
jne
imul
data16
jle
repz
xor
mov
dec
ficom
add
std
lahf
pop
sub
imul
retf
sbb
push
jns
(bad)
fnstenv
fbstp
popf
mov
es
mov
lds
add
sub
cwde
or
repnz
jae
sbb
pop
cmp
stc
mov
lds
loope
mov
std
inc
inc
ret
sbb
mov
adc
int
hlt
dec
lea
shl
jg
js
iret
jle
mov
aaa
jmp
sub
idiv
xchg
mov
mov
into
add
movs
cmp
out
sub
not
int3
inc
mov
dec
xchg
dec
test
jae
cwde
mov
xor
ret
stc
pop
(bad)
and
hlt
xlat
std
jmp
sub
icebp
mov
outs
pop
mov
mov
cmp
stc
jno
fsub
xor
mov
jb
push
aaa
mov
sar
mov
shl
shr
jg
mov
jmp
jae
pmullw
in
fdivr
push
xchg
cmc
in
dec
jns
cmc
test
xchg
jo
aaa
jg
into
xchg
cmc
cmc
sbb
jmp
and
jbe
jmp
into
in
xlat
mov
test
clc
jmp
lahf
or
aaa
fst
(bad)
retf
aaa
shl
xor
mov
xor
inc
outs
dec
into
jg
jo
movs
xchg
daa
add
push
cdq
data16
les
cmp
and
stos
sbb
aas
aas
ffree
pop
outs
jne
jl
sub
push
mov
test
adc
sar
lods
and
mov
mov
lds
es
out
in
aad
out
pop
mov
nop
div
xchg
or
push
in
mov
cdq
mov
js
pop
cdq
jno
imul
mov
push
push
lods
sti
(bad)
das
push
cmp
ret
shl
pop
aas
(bad)
int
inc
in
mov
mov
inc
or
push
pushf
push
or
rcr
or
cwde
push
cmp
inc
repz
inc
sti
aam
push
aam
out
cmp
mov
cmp
lock
in
fcmovne
das
xchg
jbe
sahf
sbb
idiv
dec
into
add
mov
xlat
ins
nop
call
std
nop
pop
xchg
mov
neg
dec
aas
cmp
mov
cmp
std
ret
mov
sub
xchg
fst
adc
cmp
and
sbb
dec
jg
(bad)
mov
retf
int
das
int3
je
int
cmp
nop
dec
cmp
fwait
or
dec
out
dec
dec
jbe
fsubr
jge
sbb
or
lods
lods
in
in
call
xor
ins
ds
xchg
sbb
repnz
jge
addr16
retf
retf
xchg
cmp
fs
sti
mov
out
jg
fucomp
mov
cmc
add
and
neg
and
or
(bad)
and
(bad)
stc
jns
test
pop
adc
std
xor
adc
in
jle
sbb
xchg
dec
clc
push
mov
scas
push
inc
iret
fisub
xchg
cld
sub
dec
xchg
push
jge
ficom
jmp
cli
test
xor
mov
sub
jp
xchg
fdivr
lahf
scas
repz
mov
cmp
pushf
mov
in
xchg
sub
sar
mov
pop
cmp
dec
dec
aas
lahf
movs
mov
inc
int3
scas
or
or
fcmovnu
mov
mov
test
pop
cli
jns
jne
out
mov
pop
frstor
fild
jge
(bad)
(bad)
cdq
cdq
push
jne
mov
lahf
and
mov
in
(bad)
stc
fdiv
(bad)
jns
dec
out
fcomp
mov
dec
xchg
clc
aam
xchg
adc
pop
enter
sub
cmp
arpl
mov
enter
cwde
push
pop
dec
jmp
cmps
scas
out
ja
or
loope
loopne
(bad)
iret
int3
sbb
push
push
lods
jge
mov
outs
jmp
pop
pop
stos
je
aam
gs
cld
jecxz
add
pop
sub
fbld
xchg
repz
cmc
pop
mov
in
(bad)
fsubr
cmc
inc
js
sub
adc
gs
pop
sub
mov
mov
fstp
push
mov
sub
inc
fiadd
sub
fdivr
push
inc
xor
das
jne
push
popf
xchg
aaa
imul
ja
mov
push
movs
scas
icebp
pop
clc
sbb
(bad)
cmps
mov
jl
popf
fcomip
repz
outs
mov
mov
dec
imul
push
mov
cld
pop
pop
fisttp
fcmovne
xor
shl
sar
daa
lahf
pop
mov
pushf
xchg
jbe
inc
out
sub
pop
pop
popf
cmp
movs
dec
mov
(bad)
out
push
(bad)
mov
jl
jo
mov
loope
lods
pop
stos
fst
jb
mov
loope
outs
pop
mov
int
mov
test
pop
outs
fsubr
mov
dec
out
(bad)
and
int
test
in
fsubr
ds
jp
rcr
repnz
jle
mov
fwait
xchg
imul
jmp
push
mov
cmp
and
icebp
mov
cdq
cld
xchg
pop
cs
jnp
dec
das
or
(bad)
in
ret
lds
add
sti
nop
leave
std
cmp
push
pop
mov
jmp
push
out
xchg
clc
stos
jp
std
test
out
push
fcomip
stos
pop
jl
ret
sahf
or
je
jmp
sub
(bad)
test
loop
out
fs
or
xchg
movs
aaa
outs
outs
jo
ins
sub
ret
in
dec
fisub
mov
mov
es
fcomip
xor
in
ror
aad
xchg
test
cmps
mov
stc
js
sar
sub
fdiv
inc
(bad)
test
pop
mov
int
push
int
repnz
or
cs
ret
dec
loop
mov
mov
xchg
xchg
pop
hlt
out
xchg
mov
jno
jne
leave
mov
pop
push
mov
or
xchg
pop
stos
mov
mov
and
mov
shr
push
mov
and
iret
mov
(bad)
ja
fdiv
mov
push
jo
dec
repz
fdivr
int3
iret
cmp
scas
push
pop
enter
jnp
ret
mov
scas
mov
sub
sahf
call
or
loop
mov
mov
mov
xor
lods
outs
dec
xchg
movs
in
or
jbe
sub
hlt
outs
fcomi
push
jbe
lahf
or
sahf
pop
adc
cmps
fbld
sahf
dec
inc
into
mov
ret
pop
pop
loop
ret
or
inc
(bad)
jmp
imul
jne
lea
inc
int3
push
int3
xlat
outs
inc
mov
std
test
and
add
add
iret
outs
lahf
cmc
adc
dec
dec
and
jae
mov
(bad)
jp
shr
mov
sahf
retf
mov
mov
hlt
jo
shl
or
mov
gs
mov
ror
mov
fwait
xchg
pushf
pop
jl
hlt
fiadd
jnp
aaa
cs
jno
cwde
mov
ror
cmp
idiv
cmps
repnz
pushf
push
sub
into
cld
fcom
shl
out
or
in
call
cwde
lods
dec
in
(bad)
fnstenv
int3
mov
std
repnz
add
adc
mov
or
je
test
out
imul
and
ins
mov
xchg
jmp
ja
mov
inc
lock
jmp
mov
adc
js
pop
idiv
jl
push
out
loop
add
ja
fsub
dec
daa
mov
sub
in
(bad)
cmp
and
sti
sar
movs
mov
loop
cmps
push
in
sbb
mov
popf
pop
movs
ds
popf
(bad)
std
sahf
and
adc
mov
arpl
lahf
repz
retf
jmp
adc
cdq
xchg
lea
aad
dec
fs
adc
out
outs
mul
dec
aam
in
popa
stc
cmp
pause
leave
cmp
movs
inc
cdq
outs
leave
inc
int
cmp
out
jle
pop
aam
push
dec
das
or
sbb
outs
mov
pop
cmps
ja
mov
cmp
cmp
xchg
js
or
ins
int3
sbb
mov
cmc
cs
mov
sar
adc
ja
push
or
sub
loop
lods
push
sti
or
out
into
mov
pop
jb
jle
sar
pop
retf
mov
mov
repnz
sub
jne
(bad)
jp
lods
es
mov
push
or
cmp
fs
nop
sbb
(bad)
cmps
lds
pop
mov
mov
mov
call
dec
(bad)
add
xchg
pop
jle
inc
popa
mov
imul
lods
cdq
cmps
lock
jnp
jno
je
xchg
jl
push
xchg
xor
popa
test
out
cdq
inc
pop
adc
sub
mov
jecxz
into
sti
inc
retf
mov
push
mov
std
je
int3
mov
cmp
mov
leave
repz
stos
pushf
jge
outs
cli
push
std
movs
cmp
inc
rol
(bad)
iret
jns
outs
mov
sub
mov
mov
cmc
icebp
xor
mov
mov
in
mov
in
shr
jge
fstp
in
inc
sbb
ror
fbld
pop
jmp
sub
imul
in
jae
int
into
iret
xor
push
mov
aad
mov
xlat
imul
jge
outs
jbe
sub
ficom
ja
lds
mov
sbb
jmp
and
add
fwait
jbe
popa
mov
mov
movs
mov
xor
jg
or
push
movs
jmp
mov
jmp
lahf
sbb
repnz
in
push
pop
mov
cmp
outs
jmp
sti
out
aas
lahf
pop
repnz
(bad)
jp
cmp
jno
xchg
iret
sbb
xchg
pop
leave
mov
pop
xor
push
mov
and
dec
jbe
movs
xchg
es
pop
lods
scas
dec
daa
mov
lahf
je
jmp
jnp
pop
icebp
leave
iret
pop
ja
enter
(bad)
push
and
or
in
fldenv
call
jge
out
cdq
lock
bts
sti
add
mov
das
pop
mov
dec
xor
jmp
sub
mov
jmp
jns
sbb
fadd
in
dec
rcr
push
push
ss
xor
sbb
jae
fist
outs
pop
and
out
adc
arpl
out
add
popa
add
mov
mov
ins
cmps
fwait
lahf
mov
xchg
imul
neg
adc
popa
adc
retf
inc
mov
fdivr
enter
out
aaa
sti
fisubr
sbb
and
ins
div
or
imul
movs
sub
mov
arpl
aaa
(bad)
repnz
scas
into
popa
push
into
in
(bad)
sbb
int3
cld
(bad)
push
cmp
inc
in
sti
or
mov
jae
fidiv
es
lock
fwait
push
je
jns
or
pop
call
cld
inc
rol
out
mov
out
jns
push
xlat
ret
das
inc
shr
lods
cmp
sub
jne
das
jg
pop
int
lods
ret
fiadd
dec
push
lahf
or
mov
jge
pop
xchg
ja
and
je
dec
mov
aas
inc
push
sub
sub
lods
test
data16
fldenv
jg
js
adc
cmps
ret
shl
stos
mov
(bad)
fdivr
ds
dec
fcmovnu
imul
out
addr16
ffreep
ficomp
mov
imul
(bad)
fidiv
mov
loop
fistp
pop
or
cld
jne
out
or
hlt
popa
data16
rcl
xor
fld
jns
cld
and
outs
cmp
jmp
(bad)
ror
test
inc
xlat
and
fwait
out
repnz
inc
ficom
jl
mov
inc
fwait
xor
ins
mov
inc
mov
push
lea
fsincos
loop
mov
repz
mov
mov
pop
popf
mov
xchg
sub
fwait
sbb
arpl
cmp
loopne
dec
aad
(bad)
pushf
sti
int
cmps
cmp
jbe
fidiv
scas
push
push
push
mov
mov
scas
inc
jnp
scas
mov
dec
in
repz
(bad)
cmps
es
lods
cld
jb
into
scas
push
sar
sbb
fcomi
daa
in
test
sti
test
xor
sub
inc
or
ins
add
xchg
xchg
pop
jmp
std
stos
mov
popf
pop
xor
pop
pop
xchg
jg
push
fs
shr
lahf
in
out
push
stos
cmp
cmps
aaa
shr
sub
push
aas
mov
mov
(bad)
aam
leave
jge
and
ja
fsubrp
sbb
xchg
out
fist
jmp
idiv
aad
adc
mov
aas
push
sar
sbb
test
push
repz
pop
push
loop
xchg
xor
imul
(bad)
cwde
mov
cmp
mov
inc
pop
ret
push
call
mov
fidivr
mov
jg
(bad)
mov
sub
mov
scas
movs
jns
xor
test
inc
in
adc
stos
sub
sti
hlt
xchg
inc
(bad)
lea
xchg
das
retf
je
fstp
xchg
adc
lock
cdq
popf
and
mov
(bad)
int
jno
cmp
jmp
fstp
movs
ins
xor
cdq
inc
retf
repnz
in
mov
jmp
in
xchg
arpl
int3
jl
test
push
je
aaa
rcl
add
div
jle
inc
cli
cld
pop
fisubr
ds
or
out
mov
cmc
into
std
leave
jp
cmc
xlat
fcmove
push
adc
xor
xchg
xchg
fsub
lahf
mov
fnsave
sub
push
jp
movs
cli
in
jae
mov
push
sub
stc
xor
mov
jns
or
or
sbb
dec
jl
clc
push
cdq
int
out
ret
dec
pushf
enter
aad
iret
jl
ds
mov
call
push
fcom
shl
gs
inc
jae
iret
sub
cmp
imul
dec
push
scas
mov
adc
inc
sbb
and
cmp
mov
jmp
sar
sbb
lds
stos
icebp
jle
test
iret
push
ficom
imul
xchg
sub
cmp
(bad)
fsub
dec
xchg
jbe
mul
(bad)
jbe
jmp
push
leave
push
mov
lahf
js
lock
pop
daa
push
stos
and
or
inc
pusha
(bad)
cmp
push
neg
mov
in
call
aaa
hlt
ret
xchg
mov
pop
(bad)
jae
pop
pop
fstp
pop
(bad)
jae
mov
call
aad
aad
les
shl
add
ficomp
cmp
es
scas
mov
pop
faddp
mov
retf
idiv
or
into
fnstenv
push
rcl
xchg
ret
jecxz
mov
in
jle
aaa
ins
sub
in
mov
inc
push
jae
icebp
movs
push
leave
(bad)
aad
or
jb
scas
pop
cmp
aam
shr
cli
in
cdq
out
sub
xchg
pop
mov
jmp
mov
adc
adc
mov
int3
cdq
ret
scas
jae
sbb
jp
fist
jl
out
lahf
outs
clc
xchg
sub
fsubp
xchg
rcr
sbb
not
mov
(bad)
sbb
mov
test
cld
movups
inc
mov
pop
ds
and
sti
jb
cli
inc
mov
sub
addr16
jne
sbb
fsub
lods
sub
adc
pushf
leave
push
push
mov
popa
std
fwait
in
sahf
cld
out
outs
dec
jmp
imul
jo
xchg
pop
jbe
repnz
add
fild
mov
sub
addr16
jae
stc
mov
push
std
addr16
ret
xchg
out
aad
cmp
pop
cmp
adc
lods
cs
aas
jle
ret
mov
xor
and
retf
into
cmps
cmp
js
pusha
cmp
xchg
scas
(bad)
je
loopne
(bad)
push
stos
repnz
jae
jl
mov
inc
lock
and
mov
ins
pop
js
mov
jg
inc
push
adc
dec
sbb
cmp
imul
and
and
pop
retf
leave
ror
lahf
scas
(bad)
test
cmp
jge
mov
push
cdq
jl
xor
pop
cld
movs
jns
pop
retf
test
cmps
pop
je
mov
lock
push
cdq
cmps
aaa
out
pop
mov
sbb
stc
lds
mov
aaa
retf
or
xor
push
cmp
pop
lea
cmc
sbb
sub
sub
mov
fdiv
xor
xchg
push
pop
pushf
popa
pop
aas
mov
repz
xchg
mov
loope
mov
cmp
mov
push
mov
lods
pop
hlt
xor
sub
inc
popf
pop
in
mov
jecxz
(bad)
out
call
jnp
mov
push
and
mov
scas
and
adc
fistp
xchg
out
sahf
jge
out
mov
mov
mov
sub
pop
jb
pop
lods
sub
mov
pop
pop
mov
cmc
stos
mov
outs
pop
sub
jmp
sub
mov
or
xchg
mov
int
push
sti
pop
inc
sub
inc
or
addr16
call
fcomp
mov
mul
adc
sub
mov
mov
mov
dec
push
mov
out
mov
jnp
mov
addr16
pushf
jb
xor
push
jae
fld
xchg
stos
test
jnp
sahf
cmp
dec
mov
mov
push
lahf
sahf
dec
push
xchg
fnstcw
sbb
sbb
fcomp
sub
ret
xor
mov
outs
add
movs
repz
add
cmps
cmp
pop
jg
xchg
or
inc
jg
lock
out
sub
push
fsub
int
cli
lods
rcr
out
daa
sbb
dec
jns
and
or
dec
les
ss
add
cmp
push
jecxz
movs
das
fistp
std
aam
jmp
xchg
pop
dec
cmp
(bad)
loopne
push
hlt
pushf
hlt
mov
mov
jg
jle
mov
push
sahf
pusha
mov
test
and
inc
mov
ins
adc
ins
cmp
ja
test
jecxz
adc
mov
inc
data16
inc
aad
mov
into
cwde
daa
sbb
es
push
push
push
sbb
inc
jecxz
dec
adc
dec
cdq
xchg
arpl
jmp
adc
addr16
movs
outs
xchg
or
mov
push
fisttp
xchg
lahf
mov
out
sub
jne
pop
jl
icebp
dec
loope
rcr
dec
adc
call
sti
pop
jmp
ror
pop
dec
(bad)
hlt
mov
adc
dec
dec
or
lea
mov
iret
mov
mov
aas
ss
pop
inc
pop
outs
(bad)
scas
lds
xchg
or
popa
mov
ret
lds
rcr
sbb
push
cmp
ja
dec
mov
jmp
loope
cmps
sbb
inc
xchg
sub
outs
lock
add
push
xor
int
(bad)
jb
mov
mov
lods
push
push
shl
jecxz
mov
mov
dec
in
mov
out
stc
loopne
(bad)
retf
bound
pop
pop
(bad)
xor
sbb
jmp
jle
repz
xor
mov
mov
mov
cmp
pop
cld
dec
push
ret
repnz
mov
fstp
cdq
bound
jmp
retf
int3
ret
(bad)
fidivr
pop
fs
sub
es
imul
mov
fwait
jns
jnp
jns
mov
cmp
retf
jge
aam
cmp
ror
lock
xor
dec
ret
lock
popf
cmp
dec
pop
stos
inc
inc
repz
jae
inc
ss
(bad)
sbb
addr16
pop
adc
pop
xor
lahf
imul
lahf
sahf
cmc
pop
mov
retf
inc
dec
mov
xchg
jl
fmul
stc
push
or
pop
sub
movs
mov
imul
cdq
movs
(bad)
mov
and
and
outs
icebp
xchg
repnz
cmps
and
ins
dec
ins
leave
fnstenv
dec
stos
outs
retf
jge
repnz
ins
imul
cmp
in
jp
pop
aam
into
stos
je
aas
(bad)
leave
sahf
icebp
mov
push
xchg
pusha
mov
dec
out
lds
push
adc
jl
dec
inc
ja
mov
jns
push
fidiv
aaa
and
push
das
cmp
jns
mov
fild
aam
test
sbb
mov
push
test
in
push
arpl
out
lds
fnstsw
inc
fs
fimul
xor
xchg
xchg
mov
xor
rcr
push
jnp
lods
enter
push
int3
mov
out
pop
fwait
imul
cmp
jp
dec
icebp
pop
xchg
mov
cs
nop
jne
rcr
and
outs
sbb
pusha
cmp
in
add
cs
imul
push
rcr
mul
push
scas
out
adc
dec
movs
mov
pop
pop
iret
daa
add
push
mov
sub
not
out
(bad)
ds
loopne
add
cmp
pop
push
outs
in
jg
loopne
retf
mov
jecxz
push
jge
mov
push
xor
jbe
popf
fwait
push
mov
sub
push
sub
out
call
out
dec
inc
fidivr
push
(bad)
cmp
pop
cmp
(bad)
mov
inc
inc
in
loopne
xchg
mov
mov
shl
xlat
retf
jne
call
sub
sbb
(bad)
fimul
cs
es
jp
sub
aad
out
or
xor
cmps
loope
in
adc
cmp
mov
rol
mov
in
retf
test
cs
fdiv
das
jb
pushf
sub
cmps
sub
fisubr
push
enter
repnz
cs
imul
int
es
and
mov
mov
in
jbe
pop
dec
jnp
jp
test
cld
mov
fnstcw
fsub
or
inc
dec
add
fwait
inc
(bad)
xchg
mov
shrd
or
sbb
push
add
in
sbb
sbb
lods
movs
fdiv
jmp
xchg
push
jmp
out
scas
mov
pop
mov
pop
or
(bad)
cmc
std
adc
test
bound
out
ins
dec
xor
dec
rcl
jp
sbb
mov
push
pop
jle
neg
xchg
enter
outs
sub
xchg
lahf
and
in
add
lds
movups
mov
mov
in
mov
cli
lahf
lds
xchg
into
pop
xor
pop
out
xor
fdiv
mov
hlt
loopne
mov
int
cmp
sbb
loop
mov
add
sbb
xor
jnp
sub
in
sar
shl
sub
xchg
xchg
in
cmp
movs
loop
in
or
push
xchg
dec
(bad)
in
stos
or
fstp
jmp
jp
aaa
shl
out
ja
std
test
cmp
lods
fs
(bad)
jl
(bad)
lds
retf
inc
push
mov
pop
ins
in
dec
lahf
(bad)
outs
xchg
mov
fcmovnb
cmps
jl
sbb
out
in
xor
call
fsincos
fmul
jne
int3
mov
dec
loop
push
pop
jle
(bad)
dec
sub
lds
mov
sbb
xchg
mov
test
mov
mov
pop
test
es
add
test
mov
popa
aas
pop
or
ins
xchg
add
and
dec
lahf
stos
or
jle
shl
xchg
sbb
push
(bad)
xchg
(bad)
cld
jmp
fnstsw
mov
out
jle
lods
test
mov
or
mov
imul
sub
data16
bound
stos
cmps
jne
outs
push
(bad)
jge
mov
inc
jmp
lahf
repz
jp
fadd
add
aas
inc
dec
xor
push
inc
ss
mov
mov
fisub
pop
adc
in
push
cmc
into
into
ds
outs
test
xchg
mov
loop
test
fiadd
adc
repnz
lahf
ja
xchg
mov
pop
mov
or
jnp
jg
jmp
jle
nop
push
clc
jmp
in
push
ror
inc
xchg
cmp
sbb
fadd
(bad)
bound
xchg
mov
leave
(bad)
jmp
xor
outs
add
xchg
(bad)
shl
gs
lahf
push
inc
fisub
mov
cli
cmps
xchg
fsubr
fdiv
cdq
cmp
sub
mov
jle
or
jne
ror
(bad)
mov
imul
cwde
cdq
mov
clc
popf
mov
pushf
cmp
or
pushf
mov
hlt
hlt
mov
push
retf
mov
mov
(bad)
out
pop
stos
cmp
mov
dec
lods
fldcw
xchg
adc
js
pop
in
inc
retf
lahf
and
sub
out
jo
mov
loope
push
les
pop
jns
into
loop
repz
ror
aas
pushf
stc
in
int3
mov
and
dec
adc
cmc
out
enter
fld
pop
out
popf
add
fistp
test
lock
or
stc
xlat
cmp
xchg
fdiv
jns
idiv
int
in
ficomp
sti
in
int
dec
daa
fimul
aad
pop
and
jnp
sub
cmp
and
push
and
retf
ror
xchg
(bad)
sub
mov
cwde
(bad)
fistp
frstor
dec
push
(bad)
in
add
fcom
jecxz
rsm
xlat
js
mov
jmp
cs
mov
push
jns
adc
aad
rcr
dec
(bad)
in
iret
jecxz
lahf
and
jae
outs
fcom
inc
(bad)
in
pop
sub
out
popa
out
jne
mov
jbe
pop
dec
push
jbe
pusha
push
sub
mov
out
fs
sbb
dec
dec
dec
fadd
(bad)
iret
or
stc
or
xchg
push
sbb
and
cli
imul
jl
les
pop
das
repnz
into
fcmove
jmp
mov
xchg
fist
mov
fiadd
mov
jnp
loopne
mov
mov
call
cli
and
mov
lods
lods
mov
push
cmc
call
test
repz
cmp
xchg
(bad)
mov
xlat
mov
ins
sbb
pop
pop
inc
loope
popa
ss
in
push
mov
call
cs
rcr
jg
pop
imul
ins
xchg
adc
repz
cli
popa
(bad)
imul
dec
pop
icebp
mov
shl
push
arpl
mov
cmovbe
jg
adc
pop
jne
jnp
repz
jecxz
mov
fs
jb
xor
cmp
adc
or
jle
mov
jmp
call
mov
sti
ficom
fsubr
inc
cmp
jbe
lock
loop
cmc
shr
cmp
lahf
mov
repz
inc
jle
mov
mov
(bad)
(bad)
mov
sbb
inc
mov
dec
sahf
mov
test
sti
inc
ss
pop
or
int
aaa
mov
or
out
sahf
xlat
mov
add
test
in
pop
(bad)
jge
(bad)
ins
stos
inc
ret
mov
add
pop
(bad)
aaa
mov
loop
jg
ret
or
mov
mov
jge
imul
ja
dec
add
sub
ficom
and
push
shl
push
cmp
test
dec
data16
out
loope
and
lock
cmp
or
leave
imul
movs
jg
idiv
lds
cld
(bad)
mov
imul
fst
dec
jbe
pop
lods
lahf
out
cmps
out
imul
xor
(bad)
into
dec
bound
jecxz
fnstenv
xchg
and
jl
sti
aam
push
dec
test
mov
mov
ins
jge
and
(bad)
and
imul
retf
ficom
xchg
sbb
repz
shl
push
jge
lea
movzx
pop
cli
(bad)
sub
cmp
and
js
xor
les
js
mov
movs
jnp
aam
push
fist
fistp
pop
(bad)
cli
popa
and
std
jmp
mov
push
or
pop
lahf
outs
loop
(bad)
shl
fwait
mov
arpl
ds
sbb
jno
imul
jmp
mov
inc
adc
sub
(bad)
fidiv
in
lea
dec
in
pop
sub
fs
ret
mov
sahf
xlat
jmp
jmp
mov
cmps
call
cmp
push
sub
fisubr
jl
daa
mov
mov
aas
inc
mov
enter
pop
mov
(bad)
clc
repz
mov
mov
pop
jp
scas
rol
jb
loop
push
aas
rcr
pop
or
mov
jg
leave
xor
sti
neg
pop
retf
mov
imul
push
sbb
(bad)
jns
or
out
outs
or
cmp
outs
imul
fistp
ficomp
aas
xor
mov
pop
sahf
ffreep
leave
test
movs
dec
inc
in
pop
ins
(bad)
ret
repz
daa
xchg
cmps
cs
(bad)
fidivr
movs
test
xor
jp
mov
out
sub
jle
das
cli
adc
mov
mov
cld
(bad)
xchg
mov
and
cs
(bad)
mov
adc
xor
jb
or
clc
mov
ja
mov
fbld
push
fdivr
mov
jle
mov
sbb
xchg
fwait
movs
and
jle
mov
sub
mov
daa
cs
loop
and
out
(bad)
ins
xchg
mov
push
inc
scas
mov
repz
push
xchg
cmps
or
xor
neg
iret
adc
mov
adc
jge
fidiv
repnz
pop
rcr
je
sbb
(bad)
dec
stos
mov
ins
dec
mov
repnz
lods
dec
xchg
xor
test
lods
lahf
push
push
mov
imul
pmuludq
imul
xchg
rcl
and
sbb
outs
adc
xchg
into
ds
pop
sub
pop
leave
mov
in
retf
xlat
push
push
pop
xchg
mov
push
js
jmp
hlt
popa
lods
mov
es
push
mov
mov
mov
ds
lock
xor
lods
in
mov
(bad)
sbb
(bad)
jae
das
pop
ja
xchg
addr16
mov
mov
jnp
test
pop
pop
imul
mov
push
push
mov
xchg
jbe
inc
xchg
sub
imul
lds
pop
enter
or
leave
pop
js
adc
clc
jge
cmps
movs
sub
push
fbstp
lods
bnd
mov
and
push
mov
fisubr
xchg
and
jmp
fsubrp
push
push
sahf
loopne
pop
shl
jne
loop
pop
mov
jmp
ja
imul
cmp
call
int
ds
mov
enter
mov
dec
inc
sub
shl
mov
mov
sub
lea
sbb
leave
fsub
mov
inc
mov
sbb
inc
xchg
inc
mov
rol
or
xlat
cmc
pop
dec
lock
sti
ins
mov
or
mov
mov
jecxz
pop
mov
fmul
cmp
aaa
sahf
inc
cld
ins
xchg
sbb
fwait
(bad)
mov
test
fisub
cmp
imul
(bad)
fistp
push
int3
cmc
mov
scas
inc
lahf
add
(bad)
sub
not
hlt
jp
push
(bad)
sub
(bad)
sbb
out
pop
dec
mov
aam
scas
enter
std
mov
jbe
ins
into
cmp
out
jmp
into
fmul
in
add
dec
jle
lds
push
dec
dec
fnstsw
sbb
test
sbb
add
lea
pop
sti
movs
jbe
push
div
xchg
push
xchg
cdq
les
loopne
ror
aad
fnstsw
dec
je
mov
mov
dec
xchg
pop
ret
lock
(bad)
jns
repz
out
iret
jecxz
(bad)
aas
(bad)
dec
pop
in
(bad)
cmp
aaa
cmp
test
and
loop
stos
and
mov
aaa
cmc
xor
mov
push
xor
sub
jle
inc
sub
sub
sub
leave
push
push
mov
cmps
xor
cli
ficom
mov
aam
or
loop
repz
out
jle
(bad)
xor
add
dec
or
cmp
push
add
loope
aam
xor
xor
mov
mov
movs
inc
jge
cmp
cli
pop
add
(bad)
aam
or
leave
dec
mov
iret
jecxz
(bad)
popf
sbb
push
or
test
pmulhw
mov
ret
cwde
jae
mov
dec
adc
or
push
xchg
adc
pop
xchg
fld
mov
mov
jg
xor
(bad)
pop
jp
sub
mov
(bad)
into
or
clc
loopne
(bad)
cmp
xor
sub
xchg
mov
fs
data16
ret
outs
add
mov
(bad)
test
xchg
out
and
cmp
les
daa
lea
push
dec
dec
or
enter
cs
sub
loope
retf
addr16
pop
call
pushf
das
aas
ins
fwait
jmp
jecxz
xlat
and
add
lahf
(bad)
out
jno
mov
dec
xchg
cmps
div
sbb
jl
mov
add
cmc
nop
cmc
(bad)
jmp
cmp
jmp
and
xchg
push
mov
hlt
xor
ds
cmps
push
mov
(bad)
rol
ret
adc
popf
pop
xor
into
xchg
dec
mov
pushf
mov
cmp
cmps
sbb
and
dec
xchg
push
or
in
jg
xor
cld
aam
or
push
fwait
mov
jno
int
pop
fstp
mov
inc
add
scas
or
xor
sbb
and
aas
pushf
arpl
jnp
jp
aam
mov
jmp
pop
hlt
icebp
cs
lods
(bad)
adc
fwait
xchg
int
push
addr16
and
retf
push
mov
bound
cmps
lahf
sbb
xor
dec
sbb
inc
lock
mov
add
dec
xchg
imul
inc
mov
sbb
adc
mov
pop
(bad)
icebp
shl
sbb
push
jmp
or
icebp
pop
mov
push
cmps
mov
imul
dec
sub
cmp
sbb
call
popf
or
and
bnd
into
push
out
repnz
jmp
sub
call
sti
call
fucomp
xor
mov
addr16
loope
pop
push
aaa
call
sub
pmulhuw
add
cmps
sbb
rcl
test
es
mov
inc
pop
scas
out
(bad)
jne
clc
cs
movs
mov
mov
add
xchg
lea
das
fnstsw
cmps
fisttp
arpl
push
popf
jmp
inc
outs
bound
sahf
mov
movs
and
aam
fisub
push
cmps
or
pop
mov
(bad)
jp
cmp
jg
iret
sbb
dec
hlt
mov
and
repnz
and
ret
push
inc
push
cmp
add
mov
dec
stc
inc
cmp
popf
jp
xchg
test
cmps
mov
shl
adc
pop
movs
daa
xor
cdq
repz
out
pop
xor
cmp
loop
or
mov
cdq
mov
cdq
fld
xor
sti
in
test
adc
pop
shl
mov
mov
aas
rcr
(bad)
add
clc
movs
inc
out
jns
or
inc
out
xchg
jp
push
aam
add
mov
(bad)
jg
add
pop
movs
(bad)
leave
push
xor
into
and
out
cmps
or
fsubr
jns
add
jg
call
adc
sub
mov
call
xor
and
cmp
or
inc
repz
adc
adc
js
dec
sbb
cmc
sbb
fiadd
xor
cmc
jno
xchg
push
mov
inc
jge
jns
out
test
in
out
push
aam
aaa
mov
push
call
and
les
test
sbb
call
xchg
les
adc
add
push
movs
movs
xor
xchg
lea
outs
les
push
test
mov
lahf
mov
fsubr
stos
cmp
xor
inc
out
mov
xor
pop
fsincos
je
add
mov
lds
stos
jg
pop
je
dec
imul
addr16
iret
arpl
sbb
pusha
mov
cmp
fstp
xchg
call
aas
mov
inc
jmp
ins
add
cwde
aas
dec
lea
out
test
(bad)
jne
out
jge
js
cmp
fist
pop
or
jmp
jo
add
ds
lock
pop
sub
test
lods
adc
pop
fsub
cmp
mov
loope
inc
dec
inc
arpl
dec
pop
sub
mov
popa
hlt
pushf
or
mov
sbb
jns
out
push
push
mov
xor
fstp
pop
stos
addr16
cmp
popa
imul
bound
gs
(bad)
fiadd
inc
or
dec
xor
aam
fwait
popa
cmp
fidiv
aam
inc
xor
cwde
cmp
mov
xchg
out
(bad)
jnp
(bad)
std
sbb
or
mov
sbb
mov
out
arpl
add
or
ret
push
les
xlat
es
sahf
xor
popa
xor
adc
in
mov
xor
clc
mov
jno
sti
ror
jno
lahf
pop
mov
add
dec
out
test
ins
adc
cmp
xor
inc
push
cmps
shr
and
movs
addr16
enter
imul
ds
add
call
aad
mov
xor
add
(bad)
icebp
jae
push
xlat
nop
cmps
dec
jp
ds
push
imul
out
push
retf
push
div
inc
shl
lods
std
cmp
out
cmp
sbb
sbb
bound
enter
aam
and
xchg
cmp
jns
icebp
rcl
in
es
stos
cmovp
stc
rol
or
sub
fwait
shr
call
int
js
mov
imul
cmp
enter
popa
scas
xlat
daa
(bad)
cmp
cmc
repz
or
test
mov
out
fcmovnbe
jno
mov
ret
mov
ins
(bad)
cmp
cmp
daa
ins
aad
push
cmp
add
add
scas
out
test
cmovs
hlt
mov
icebp
add
cmc
mov
fs
sub
aas
sti
call
test
jne
xchg
sbb
mov
pop
mov
sub
repz
push
shl
ret
jnp
jne
inc
sti
pusha
mov
cmp
xor
or
(bad)
std
call
jmp
(bad)
jmp
repz
cld
push
popf
mov
dec
(bad)
sub
cmc
and
mov
ror
out
inc
sbb
mov
mov
mov
mov
sbb
pop
pop
in
push
jp
repnz
or
shl
in
test
or
jmp
jmp
mov
inc
pop
jmp
pushf
shufps
(bad)
push
fadd
(bad)
out
cmps
aam
aas
(bad)
getsec
xchg
fistp
(bad)
loopne
or
sub
and
dec
shl
repz
pop
lods
adc
std
push
xchg
mov
cmps
sub
inc
mov
mov
mov
in
ins
pop
(bad)
and
cmc
dec
jge
fcom
dec
repz
pop
mov
int
idiv
fdiv
fistp
or
cmp
stos
mul
fdiv
sbb
out
(bad)
nop
(bad)
lds
mov
mov
pop
lock
mov
ja
jns
pop
sub
jg
jle
in
imul
mov
add
add
inc
pinsrw
repz
or
out
or
std
pop
aam
in
aam
or
push
or
cmp
fs
sub
pcmpgtw
or
(bad)
xor
inc
jmp
fcomip
mov
mov
mov
inc
mov
repnz
jp
pop
jp
pop
cmc
inc
lahf
xchg
movs
sub
push
rol
call
adc
dec
jmp
arpl
in
rcr
push
mov
jg
jno
movs
test
xchg
aaa
(bad)
fcomp
inc
out
add
mov
dec
mov
pop
call
jmp
rcr
(bad)
scas
jge
push
cmc
lds
(bad)
lods
push
hlt
stos
push
mov
out
test
out
jo
out
jne
push
lods
movs
(bad)
into
lahf
push
(bad)
jbe
leave
nop
pop
sti
cs
adc
push
xchg
(bad)
hlt
cmp
in
inc
cli
aas
xor
mov
jg
sbb
in
loop
xchg
mov
xchg
(bad)
push
lods
ret
mov
mov
push
dec
dec
jmp
retf
lock
fs
jns
out
mov
sar
int3
cmp
ds
loopne
fs
cmps
dec
sub
add
out
fistp
pop
mov
adc
pushw
inc
jmp
cli
fstp
fisttp
xor
xchg
xor
shr
jns
and
push
mov
nop
sub
ds
ficomp
sub
jge
int3
(bad)
xchg
daa
inc
out
setl
pop
mov
outs
fdivr
in
out
inc
cmc
popa
jbe
ja
loop
pushf
ins
sbb
lock
lds
popa
int3
inc
popf
rol
or
cdq
cmps
fadd
das
cmc
addr16
icebp
and
pusha
mov
std
or
adc
xor
xor
ret
call
add
call
inc
psubsb
aad
js
(bad)
aam
popa
(bad)
jg
sub
mov
dec
push
test
ds
pop
movs
out
and
cmc
and
mov
sar
dec
mov
xor
jmp
out
shl
mov
pop
call
pop
jl
sbb
call
push
xlat
mov
imul
xor
xor
std
push
call
(bad)
xchg
sub
in
and
test
dec
mov
not
jnp
dec
xchg
test
out
or
and
add
dec
popf
jle
dec
pop
sub
inc
and
rcr
mov
js
and
call
aas
fsubr
or
in
push
xlat
mov
pushf
adc
push
sahf
mov
or
xchg
or
xor
dec
dec
push
loope
sub
loop
cs
push
mov
les
mov
xor
out
push
mov
pop
int3
xor
clc
leave
sbb
repz
popf
push
test
sbb
jmp
cwde
or
out
ret
mov
or
and
nop
rcr
scas
adc
and
jl
out
mov
sub
call
sbb
in
xchg
mov
xlat
push
jno
pop
sub
add
aam
ret
loop
sbb
jg
pop
xor
lahf
and
int3
movs
push
sbb
lahf
cmp
rcl
jmp
enterw
mov
fistp
push
mov
pop
adc
push
pop
xchg
add
sub
or
outs
(bad)
sar
pop
fisubr
mov
test
(bad)
adc
cli
dec
sub
jns
jns
dec
sti
adc
cs
mov
add
xor
cli
dec
(bad)
fild
aas
fs
mov
pop
rol
das
das
call
(bad)
shl
sbb
cli
rcl
ror
mov
cmp
xor
cmps
xlat
lea
ficom
sub
fs
and
adc
adc
rol
cmp
push
test
js
fadd
sahf
xor
dec
mov
repz
adc
inc
add
sbb
inc
dec
push
cmc
les
ret
loope
mov
inc
lahf
jle
shl
sbb
mov
inc
pop
fnstcw
pop
repnz
aas
cmp
mov
dec
cmp
aam
or
xchg
pop
and
imul
je
adc
add
repz
cmp
dec
xchg
xchg
cmps
hlt
sar
and
mov
xchg
sbb
xchg
cmps
xlat
push
jmp
unpckhps
xchg
aaa
pop
jge
pop
push
movs
jnp
and
mov
lock
outs
fdiv
bound
xchg
pop
lahf
shl
inc
jo
je
adc
iret
jl
in
call
lahf
stos
add
jmp
jnp
xchg
and
(bad)
jb
mov
push
stc
cmp
add
jge
psubq
cmp
xchg
pop
add
adc
pop
pop
sar
jmp
es
inc
lahf
push
popf
add
add
scas
push
push
or
jb
inc
jbe
sub
cld
stos
scas
inc
subps
inc
repz
push
jno
pop
pop
ret
cmps
jmp
jns
mov
mov
xor
mov
mov
adc
(bad)
cs
(bad)
clc
xchg
repz
sar
loop
cmp
pushf
xchg
jne
jle
(bad)
mov
mov
call
int
cld
fisub
(bad)
nop
jns
aad
sbb
dec
pop
mov
(bad)
out
mov
xlat
test
push
out
lahf
and
movs
stc
cmp
mov
add
ins
jo
mov
push
mov
cli
dec
xchg
inc
(bad)
fiadd
out
popa
repz
out
retf
mov
sti
mov
rcr
cmp
sar
inc
jge
ficom
sahf
out
add
adc
pcmpgtb
inc
lea
jb
dec
mov
jg
and
arpl
out
mov
ins
aam
xchg
les
mov
(bad)
inc
lock
mov
fimul
jno
addr16
jo
jne
aas
jg
jg
aad
imul
push
dec
(bad)
test
jae
mov
cmp
and
idiv
cmp
pop
or
add
xlat
(bad)
xlat
and
add
rol
stos
xchg
rol
popf
arpl
pop
push
inc
jl
test
push
and
ret
jno
sbb
jno
sbb
mov
nop
(bad)
(bad)
pop
adc
std
xor
enter
nop
std
add
mov
xor
or
push
scas
pop
in
cmp
pop
mov
sar
out
mov
outs
or
sub
push
add
and
out
jmp
sub
xchg
dec
lock
lock
mov
(bad)
pop
mov
stc
push
mov
imul
imul
into
imul
mov
out
jno
xchg
call
popf
jns
jns
addr16
pop
scas
cmp
adc
mov
loop
lock
enter
jp
test
adc
jg
push
fnstsw
rol
xor
adc
push
pop
lahf
out
js
pop
sub
mov
dec
xor
sar
mov
sahf
das
nop
sti
push
mov
dec
jl
movs
or
mov
popa
cmp
cmp
adc
std
sbb
rcl
call
sti
mov
pop
enter
pop
mov
imul
std
(bad)
sub
ds
push
imul
jg
xchg
jmp
sbb
int
add
loop
mov
mov
lods
jae
cli
mov
test
add
pop
jp
jno
adc
inc
fld
cmp
mov
pop
cwde
aas
les
jns
sbb
stc
xchg
inc
(bad)
adc
cmc
call
xchg
repnz
stos
outs
or
inc
repz
push
pop
add
popf
addr16
mov
mov
cmps
mov
movs
in
xor
xchg
stc
xor
lahf
sbb
mov
std
xlat
fdivr
push
imul
dec
sbb
rcr
out
(bad)
lods
ficomp
fs
mov
mov
std
es
cmp
add
fadd
fadd
sub
enter
bound
ret
(bad)
out
mov
sbb
jne
jae
mul
adc
jmp
pop
es
call
shl
or
fistp
call
add
aad
jecxz
xor
xchg
jmp
repz
ss
or
enter
or
dec
inc
jle
xor
iret
mov
(bad)
iret
repnz
add
jno
add
adc
mov
mov
jb
xchg
fiadd
xlat
jno
(bad)
xchg
mov
sbb
popf
outs
dec
gs
ss
out
sti
int3
xor
loop
dec
in
sar
call
int
ss
cli
ficom
add
cmp
stos
test
inc
bsf
xor
add
pop
enter
mov
sub
mov
and
dec
inc
or
xchg
push
dec
movs
adc
cmp
ds
dec
out
pusha
add
mov
mov
(bad)
fidiv
pop
dec
pop
jmp
ins
inc
mov
jmp
cdq
sub
scas
stc
add
jne
mov
or
pop
frstor
ret
pop
push
inc
popa
enter
mov
mov
inc
jo
popf
lods
mov
jecxz
sbb
pop
jae
or
cli
sbb
mov
in
daa
adc
in
cmp
xor
mov
jns
adc
push
clc
stos
sar
dec
test
push
int3
iret
inc
add
addr16
jne
jmp
mov
or
jmp
rcl
stos
in
and
push
xchg
popa
mov
enter
retf
adc
add
loop
xor
retf
mov
fild
mov
(bad)
fcom
ss
pop
sub
mov
add
call
pop
out
ret
xlat
jmp
sbb
aas
test
data16
sub
and
call
sbb
mov
cmp
mov
mov
add
loopne
cmps
adc
cli
cwde
test
iret
inc
dec
nop
adc
les
ret
cli
pusha
mov
stc
and
dec
push
mov
dec
and
popa
dec
and
pop
daa
sbb
pop
stc
ret
loop
xchg
fldcw
fadd
fistp
movs
inc
test
inc
xchg
aaa
sub
pop
stc
ja
xor
sub
rcr
aad
not
iret
fwait
sar
jg
pusha
sub
add
rcr
sbb
int3
push
loopne
pop
or
jp
popa
inc
pop
or
sbb
imul
cmp
add
jo
fwait
jl
pop
pop
inc
mov
cld
popa
in
enter
xchg
jno
sti
lods
adc
scas
dec
rol
cmpps
sbb
and
cmp
cmp
cmp
mov
xor
jge
sub
xor
dec
dec
add
dec
mov
push
test
imul
pop
or
sbb
sbb
cmp
xchg
mov
imul
xor
push
mov
jecxz
xlat
xor
mov
cmp
jmp
stos
sahf
sbb
addps
xchg
bound
add
cmp
jnp
in
in
(bad)
iret
ret
into
neg
stc
lahf
(bad)
or
pop
sub
sti
sub
(bad)
jne
push
cmp
mov
js
iret
out
inc
pop
fwait
popa
push
mov
cli
pop
dec
mov
push
cmp
adc
cmps
jmp
and
pop
sbb
mov
xor
imul
or
jge
xor
add
dec
imul
xchg
mov
mov
sub
int
int3
sbb
jbe
mov
repnz
inc
cmp
mov
(bad)
imul
inc
xchg
push
cld
nop
daa
fistp
jle
cmp
pop
push
sti
push
cdq
movs
push
stos
push
enter
das
pop
pop
jecxz
ficomp
jmp
cmc
sbb
jge
jnp
jle
or
sbb
jl
sub
xor
push
cmp
stc
mov
add
(bad)
mov
mov
and
shl
inc
push
sbb
in
add
jne
jecxz
icebp
dec
outs
pop
xlat
fwait
je
push
xchg
cmps
add
xchg
jns
or
mov
sar
psllq
sti
sbb
jle
lock
test
dec
jmp
jg
stos
add
int
test
mov
ds
jmp
add
rol
je
movs
fistp
xchg
mov
jmp
jle
das
adc
sbb
dec
pop
xchg
sub
cdq
ret
pop
test
inc
sti
int3
out
out
mov
cmp
std
shl
jae
cmp
rcl
xchg
mov
loop
imul
(bad)
jmp
test
inc
mov
mov
add
into
xor
addr16
mov
jecxz
push
in
aam
xchg
aad
jmp
pop
push
pop
jo
ffreep
mov
xchg
sbb
jl
mov
inc
sti
imul
push
inc
jp
psubq
inc
sti
fiadd
lds
sbb
sbb
mov
add
loop
push
dec
popa
sbb
data16
push
sti
aaa
add
test
ror
hlt
ds
jmp
(bad)
arpl
xchg
push
inc
jge
push
inc
push
xchg
push
xchg
cmps
mov
clc
or
loopne
nop
jge
or
add
cmp
stos
adc
lahf
retf
push
lods
and
imul
ret
jo
movs
stos
fucomp
out
mov
jbe
ret
arpl
movs
pop
cli
fisub
cmp
(bad)
pop
jl
xchg
ficomp
call
fs
shl
jno
jmp
popf
and
stos
pminub
mov
rcr
mov
sar
sahf
or
and
xchg
mov
mov
jmp
or
mov
rcl
mov
(bad)
iret
cs
xor
xchg
rcl
xlat
scas
dec
push
inc
pop
cmps
stos
inc
(bad)
push
ss
or
inc
cmp
mov
call
lahf
xor
or
mov
fcom
xor
pop
ja
lods
push
in
(bad)
adc
jl
jp
cmp
mov
push
rol
sahf
out
xor
icebp
rcr
fisubr
fild
loopne
test
push
hlt
(bad)
sbb
mov
inc
xor
outs
stos
fcom
jo
sbb
cmc
push
outs
xor
cld
jbe
out
dec
out
scas
mov
xlat
jle
adc
jle
loopne
ins
jge
ins
int3
mov
dec
fwait
xchg
pop
or
aas
xor
mov
mov
lea
sbb
sub
and
cld
cmps
pop
add
retf
inc
jmp
pop
inc
sub
aam
dec
jne
call
stos
std
cmp
cmps
ds
int3
sbb
push
addr16
ror
inc
(bad)
pushf
xor
and
pop
hlt
push
xor
iret
lahf
jmp
sbb
iret
push
stc
repz
pop
push
inc
enter
push
std
movs
push
repz
sahf
push
int3
xor
(bad)
enter
sbb
cmp
retf
mov
test
xchg
add
out
daa
test
pop
jg
int3
cmp
sbb
(bad)
stos
mov
scas
jmp
xchg
out
lock
das
xor
sub
out
sub
jb
push
imul
shr
jmp
jp
ds
or
outs
add
mov
ds
ds
sub
rcr
ret
fdivr
outs
mov
int3
ror
leave
sar
aas
aad
icebp
dec
adc
push
mov
and
test
mul
fld
test
pop
jnp
fucomip
adc
stos
test
jne
xchg
cmp
jns
push
mov
js
xchg
das
rol
pop
cli
jns
std
cmp
jns
mov
es
mov
sub
bound
xor
lahf
int3
sahf
int3
pop
(bad)
mov
in
pushf
jl
call
jg
popa
inc
push
pop
sbb
cdq
call
push
xchg
mov
lods
mov
cmp
lods
pop
sub
imul
pop
in
repz
test
mov
es
add
xchg
push
pop
xor
movs
inc
das
or
dec
or
inc
cmp
(bad)
das
cmp
add
fidiv
pop
(bad)
jg
push
cmc
mov
repz
jmp
pop
cwde
push
test
add
mov
add
mov
adc
mov
push
mov
jle
movs
push
std
or
aas
hlt
inc
jge
sub
xor
repz
xchg
add
adc
iret
push
and
(bad)
outs
jo
paddusb
sbb
add
inc
or
dec
xor
cdq
sub
lock
shl
jne
jo
int3
jecxz
je
in
shl
stos
push
(bad)
rol
mov
aad
(bad)
rol
(bad)
mov
into
(bad)
jb
or
xchg
lea
lods
out
push
add
mov
push
fild
push
xchg
add
dec
jge
ret
fsub
xchg
addps
add
fdiv
and
mov
fld
cmps
dec
out
xor
dec
push
loope
loop
adc
test
mov
pop
(bad)
repnz
(bad)
push
jecxz
lock
enter
fs
hlt
jno
idiv
mov
mov
iret
adc
inc
repz
xor
clc
and
nop
and
(bad)
inc
call
jmp
pushf
icebp
add
jae
add
mov
push
mov
xor
pop
hlt
jns
add
xor
adc
lock
xchg
pop
inc
pop
or
outs
sbb
mov
inc
cmp
test
das
mov
pop
ins
mov
jecxz
cmc
push
mov
cmp
cs
enter
xlat
loop
out
outs
test
ja
or
push
jl
pushf
(bad)
dec
push
xchg
out
out
pop
fld
mov
ret
addr16
push
js
xchg
pop
push
push
rcr
out
(bad)
jle
xchg
sahf
cmp
in
inc
xor
cmp
push
out
sub
jl
mov
mov
jo
stc
inc
cmc
shr
aas
push
add
push
rol
adc
fisub
xchg
mov
sbb
pushf
sub
mov
cmc
inc
(bad)
cmp
xchg
cmc
pop
xchg
loope
or
push
push
fs
xchg
jbe
(bad)
xchg
jle
push
pop
push
jae
mov
sbb
xlat
pop
jg
and
cdq
xchg
add
movs
scas
push
clc
stos
xor
or
test
mov
jnp
es
mov
cmp
das
cmps
rcl
bnd
stos
sub
jmp
sub
pop
js
mov
stos
call
jnp
dec
lds
stc
sbb
into
push
push
sub
pop
mov
mov
sbb
cmp
pop
xchg
xchg
addps
test
in
imul
cmp
cld
or
repz
stc
neg
test
fadd
sub
cmps
or
fnstcw
rol
std
(bad)
aaa
and
push
in
xchg
pop
mov
(bad)
(bad)
je
rcr
int3
add
daa
repz
int3
pop
push
xchg
and
ror
xor
push
sbb
mov
or
cs
mov
shl
jl
fcom
mov
aad
stos
sub
inc
stos
or
out
dec
and
test
icebp
cmp
(bad)
aaa
lock
and
inc
pushf
or
cwde
stc
ret
cli
(bad)
pop
ins
and
lahf
scas
fild
aaa
xlat
sub
popa
fwait
loopne
dec
adc
cmp
pop
aad
mov
fdiv
into
loope
std
mov
sbb
pop
(bad)
add
jmp
test
pop
into
push
xlat
and
mov
lock
inc
jp
add
cdq
adc
(bad)
mov
dec
mov
push
sub
movs
or
rcl
out
gs
in
mov
js
add
or
sti
mov
cvttps2pi
push
scas
or
das
loopne
jns
jbe
stc
shl
xor
test
xchg
dec
mov
or
mov
push
daa
jno
dec
mov
stc
idiv
or
(bad)
mov
ins
push
add
stos
inc
bound
or
sti
repz
sbb
cmps
jge
(bad)
push
stos
mov
pop
int3
mov
xchg
sbb
rcr
sbb
mov
or
pop
xchg
jb
and
cwde
test
jbe
or
sbb
push
loopne
pop
jg
out
sub
fs
dec
or
mov
cld
shr
or
ss
mov
pop
test
add
pop
or
daa
push
aam
lods
repnz
mov
push
xchg
hlt
loope
push
and
add
(bad)
(bad)
rcr
add
jne
dec
dec
xchg
div
xchg
imul
jle
cmp
mov
scas
ret
jmp
fidiv
sub
or
jno
dec
arpl
inc
sbb
cmps
add
cs
fsub
cmp
pop
pop
sub
xchg
cmp
mov
xor
test
sub
mov
aad
add
push
out
iret
add
es
in
mov
repz
aam
sbb
jecxz
xchg
aas
test
jne
ss
popf
lahf
or
fwait
pcmpeqw
push
inc
div
(bad)
fcom
in
sub
dec
gs
and
bnd
in
cmps
pop
pop
mov
in
data16
nop
jg
xor
repnz
push
(bad)
xor
push
xlat
sbb
in
jmp
retf
inc
inc
sbb
cmp
rol
int3
aam
adc
xchg
ss
(bad)
cmp
mov
xor
push
xor
add
xor
xchg
movs
iret
add
movs
or
stos
add
(bad)
mov
xor
push
lock
(bad)
adc
push
dec
(bad)
aaa
shl
mov
xchg
sbb
mov
inc
ins
rcr
jge
retf
or
push
inc
mov
jo
and
out
or
test
rcl
ret
pop
loope
fisub
test
add
xchg
daa
call
sbb
clc
pusha
test
shr
xor
mov
out
outs
sub
jle
or
sub
(bad)
ss
sbb
xchg
out
xlat
push
loope
in
mov
into
cmps
mov
in
jbe
mov
fstp
sbb
push
inc
(bad)
mov
int3
stc
mov
cmp
sahf
xchg
mov
inc
jne
sub
ds
out
push
int3
sbb
rcl
stos
test
(bad)
stos
adc
bound
adc
ins
dec
cmp
mov
adc
xor
aad
test
xrelease
adc
xchg
ds
ins
jo
jbe
mov
fs
mov
sbb
(bad)
cld
push
out
mov
adc
cmp
mov
in
fwait
int3
pop
pop
or
adc
xor
jbe
mov
sbb
add
cmp
push
clc
sub
push
xchg
push
mov
lock
add
(bad)
jle
jno
inc
(bad)
popf
(bad)
int
repnz
cmps
mov
mov
adc
mov
aam
pop
or
jae
hlt
rcr
push
push
inc
xchg
pusha
hlt
add
sub
mov
(bad)
imul
mov
inc
test
rol
adc
outs
outs
loopne
test
sbb
(bad)
fnstsw
add
cs
jno
cmp
std
sub
sahf
pop
pop
stos
shl
lock
mov
les
sbb
add
and
out
nop
cmp
stc
div
pop
repnz
lahf
gs
push
pop
sub
pop
mov
stos
mov
or
(bad)
xlat
daa
imul
retf
sub
shl
ret
adc
cmp
ret
mov
push
ret
into
push
out
cmps
lock
out
call
jno
sti
fistp
adc
bound
adc
addr16
lock
ffree
and
mov
xor
test
hlt
pop
out
or
stc
retf
inc
inc
hlt
inc
stc
retf
add
and
(bad)
ss
pop
imul
mov
jge
call
adc
movs
add
nop
pop
ins
(bad)
iret
jne
xor
arpl
sbb
dec
int3
arpl
adc
pop
pop
in
inc
stc
sub
mov
pusha
pop
sub
test
out
and
ss
mov
mov
adc
rcl
std
and
push
test
in
dec
sub
outs
(bad)
fld
cld
mov
rcr
dec
fld
lods
jmp
cmps
cmp
arpl
xadd
test
out
pop
and
ds
cmp
sub
add
loope
pop
das
pop
jg
nop
sub
lea
push
call
outs
fld
call
pusha
in
cmps
xor
mov
ret
xor
dec
movs
mov
mov
xor
fiadd
jb
das
push
repnz
xchg
jns
pop
(bad)
ret
jmp
dec
js
pop
loop
cld
mov
mov
(bad)
push
test
jmp
call
leave
arpl
stos
jne
xchg
into
ret
mov
sti
mov
mov
sub
inc
movs
mov
mov
jbe
or
daa
push
or
aas
xor
pusha
push
sub
ds
test
cdq
out
add
add
sub
rcl
add
inc
push
mov
cmps
ror
stc
stc
out
(bad)
jmp
(bad)
stos
mov
fwait
mov
adc
jae
inc
inc
add
xor
adc
mov
iret
icebp
push
ror
jmp
and
loopne
stc
sub
and
add
jp
repnz
leave
ret
das
shl
add
int3
rcl
addr16
or
mov
add
jmp
je
test
jmp
mov
inc
enter
(bad)
mul
fiadd
xor
mov
fisubr
inc
pop
push
cmp
jg
fild
inc
xchg
dec
mov
(bad)
mov
adc
cmp
pop
fidiv
lods
out
lods
fdivr
cmps
inc
jg
mov
cmp
cmp
mov
popf
and
or
mov
pop
adc
sbb
jns
and
rol
xchg
xor
sbb
add
fcom
sbb
push
jle
mov
jns
sbb
out
sahf
cmps
lock
push
popf
dec
jo
out
aas
(bad)
inc
repz
(bad)
jae
retf
xchg
or
sub
inc
js
js
xchg
mov
bound
sbb
rcr
out
or
pop
add
in
cmp
movs
enter
je
jle
mov
pop
fwait
sub
cwde
pop
pop
in
push
and
and
jg
push
imul
mov
or
imul
loopne
push
(bad)
in
out
pusha
cmps
jle
cmp
xor
jmp
push
pop
into
inc
mov
call
and
dec
jb
(bad)
div
xlat
jnp
jno
cmp
(bad)
(bad)
jo
jmp
ror
jecxz
adc
push
add
cs
cmp
(bad)
mov
mov
nop
jae
add
add
ret
sub
pop
add
enter
or
add
xor
sbb
mov
cmps
mov
push
push
sbb
jge
lods
jg
jge
pusha
lahf
aaa
in
sbb
push
add
out
sub
pushf
outs
sub
mov
hlt
pop
idiv
sbb
sar
or
cmps
test
clc
ret
jmp
imul
push
out
bound
sar
pmulhw
jns
neg
je
ja
mov
mov
push
sar
inc
jae
inc
in
xor
mov
ror
pusha
fild
loopne
rol
(bad)
std
ds
add
js
push
cmp
data16
inc
fidiv
inc
push
mov
cs
imul
movs
daa
adc
add
push
inc
ins
and
mov
push
movs
ja
sub
or
pop
inc
sub
inc
mov
mov
or
lds
leave
mov
call
mov
addr16
out
data16
jbe
std
mov
inc
and
retf
xor
fdivrp
les
or
inc
mov
lock
ja
cld
push
inc
fdiv
add
pop
ja
stos
(bad)
int3
inc
jecxz
jae
mov
cld
lds
stos
dec
inc
pushf
mov
repnz
pop
jne
fist
enter
lock
mov
mov
and
out
dec
or
dec
enter
or
push
nop
lar
add
fidiv
pop
in
add
ja
pushf
push
adc
sar
ja
push
sub
xchg
aas
std
outs
add
sar
(bad)
ret
aad
jg
mov
popf
fcmovne
fcos
jnp
(bad)
pop
and
mov
das
jle
out
addr16
fs
fadd
jp
ins
pop
sbb
ja
mov
mov
inc
xchg
sbb
pop
inc
or
fs
imul
jle
pop
jbe
mov
bound
sar
xchg
mov
es
and
xor
test
jl
jg
(bad)
int3
(bad)
mov
mov
jg
fisttp
jge
sti
sti
xor
int
arpl
push
mov
enter
clc
jle
jmp
fsub
shl
push
cmc
add
pop
shl
sbb
out
mov
in
push
dec
test
xor
fcomp
repz
mov
jo
cdq
add
mov
in
out
or
xlat
dec
xor
repz
outs
shr
(bad)
push
(bad)
pop
mov
jno
pop
jae
in
outs
in
das
std
int
xor
cmps
add
jnp
repz
movs
icebp
cs
dec
pop
xchg
ins
jge
push
(bad)
jl
mov
sbb
cld
mov
scas
add
dec
or
repz
in
in
in
ds
loop
mov
adc
repz
jecxz
hlt
outs
cmp
mov
fisubr
inc
jecxz
xor
inc
mov
add
and
sub
fmulp
imul
fisttp
mov
popf
das
loopne
or
enter
pusha
(bad)
in
sbb
clc
xlat
cmp
sbb
push
jbe
xchg
adc
out
loopne
test
jge
stos
inc
sbb
cdq
std
(bad)
mov
addr16
repz
pop
imul
mov
cmp
push
push
retf
popa
dec
push
scas
sti
pushf
in
jns
repz
sahf
(bad)
sti
dec
inc
fisttp
mov
mov
aas
enter
lds
adc
int3
cs
scas
and
fild
test
out
nop
push
aad
mov
jg
loopne
add
or
out
mov
or
sbb
sbb
push
dec
mov
scas
cmc
aaa
sbb
call
push
xchg
jns
sti
xchg
cmp
pop
gs
dec
dec
je
aad
pop
in
sub
jnp
pop
dec
fs
mov
icebp
int3
out
bound
pusha
mov
jl
pop
pop
test
clc
imul
test
inc
loopne
jo
fldcw
xchg
jmp
mov
lds
(bad)
scas
jp
sti
adc
cs
mov
int3
sbb
sub
jmp
mov
idiv
add
mov
sub
jl
jnp
test
pop
xchg
fcomp
shl
out
into
lds
or
popa
adc
push
or
add
or
cmp
jge
sar
xchg
and
(bad)
imul
sbb
pop
jbe
rcl
pcmpeqb
outs
aas
(bad)
cmps
(bad)
inc
add
mov
inc
add
jl
mov
pop
into
out
xor
add
jno
add
test
dec
adc
jge
lahf
daa
(bad)
mov
ja
cmp
jnp
out
jbe
jno
mov
jne
cld
inc
xchg
and
call
inc
jno
nop
scas
pushf
pop
cmp
cmp
add
mov
or
out
ins
data16
sub
cmp
mov
push
lock
xchg
and
cmp
fs
les
es
imul
cmp
fcom
jb
call
sub
xor
ins
das
(bad)
jns
lods
repz
mov
push
repnz
out
add
retf
pop
(bad)
fisttp
add
jo
mul
gs
mov
fist
cld
rcr
mov
cmc
out
sub
jnp
pop
jle
pushf
fadd
cli
in
push
and
aam
pushf
fistp
test
in
mov
mov
out
mov
jge
(bad)
sti
and
mov
fsubp
sub
std
add
pop
fistp
rol
cmp
sub
mov
std
add
add
inc
outs
(bad)
mov
mov
xchg
mov
dec
jnp
cmp
test
gs
in
jne
sti
xor
ins
iret
pop
imul
sub
xchg
push
fiadd
jg
aaa
out
loopne
fidiv
lea
out
sub
mov
cmc
and
les
ja
fwait
mov
test
clts
dec
hlt
mov
jge
inc
add
clc
and
mov
out
fmulp
lds
fdivrp
pusha
sti
jecxz
push
sub
cmps
sbb
aaa
movs
in
stc
arpl
int3
mov
lock
mov
mov
fist
test
lahf
leave
jp
scas
ficomp
and
jnp
push
sti
repnz
mov
out
cmp
mov
jg
and
xor
repnz
(bad)
stc
inc
sahf
or
aad
repnz
lock
add
outs
cs
fcomp
imul
std
imul
cmp
mov
in
cwde
sbb
fistp
or
cmps
ss
sbb
mov
mov
rcr
sbb
idiv
lds
sti
inc
jbe
mov
and
ins
sbb
mov
stc
or
out
push
lock
push
test
jge
and
sub
neg
pop
ja
rcr
(bad)
aaa
imul
(bad)
test
popf
sbb
dec
dec
outs
rcr
and
mov
mov
add
scas
push
xchg
outs
mov
jp
add
out
das
mov
cmp
add
push
aas
pop
loopne
and
cli
sub
or
add
or
cs
idiv
aad
sub
mov
inc
fild
sbb
repz
jmp
repz
idiv
adc
rcl
cs
mov
xchg
movs
cld
mov
inc
mov
inc
imul
pop
aad
(bad)
int
les
out
add
rcl
and
xchg
cli
inc
inc
xor
add
pop
inc
rol
(bad)
cmp
xchg
mov
cdq
ins
sub
cs
fadd
mov
dec
push
dec
push
jl
jnp
dec
fcomi
pop
call
out
pushf
fld
jmp
pop
cmp
jmp
mov
jnp
adc
inc
mov
(bad)
fst
xlat
jp
int
imul
add
pushf
paddb
add
cmp
jns
call
div
cmp
push
xchg
mov
call
movs
outs
xor
mov
in
stc
arpl
xchg
dec
aad
mov
push
mov
lods
(bad)
lods
xchg
fstp
cmp
cdq
test
sar
(bad)
jns
sbb
mov
scas
fs
lods
mov
(bad)
js
jbe
js
inc
in
pop
ins
std
jb
lahf
push
in
sbb
dec
inc
add
add
adc
or
sbb
aas
ret
in
stos
sti
mov
or
pushf
clc
dec
mov
clc
mov
(bad)
xor
stos
push
xchg
push
sti
xchg
inc
xchg
repz
aad
test
daa
retf
int3
into
daa
mov
enter
les
fbld
push
int3
or
fnstcw
jbe
lahf
pop
jo
sub
or
inc
mov
fisttp
mov
lea
std
adc
lods
push
mov
push
in
stc
jecxz
mov
xchg
push
xchg
inc
lahf
scas
push
ja
mov
test
shl
stos
pushf
std
icebp
iret
sti
jne
adc
stos
jno
mov
jns
outs
mov
(bad)
gs
clc
lds
out
mov
fld
inc
push
out
jae
pop
dec
jae
cmp
clc
out
movs
cmp
or
xchg
das
fcmovne
enter
jae
xchg
pop
imul
(bad)
call
clc
shl
xchg
mov
mov
(bad)
lahf
frstor
stos
rol
in
std
pushf
paddb
inc
jle
je
jl
movs
in
sub
fucom
arpl
stc
bound
push
lods
add
pop
pop
into
xchg
out
inc
xor
inc
jbe
xchg
lods
loope
ss
std
jp
ds
add
sbb
jnp
xchg
mov
rcl
aad
repz
push
rcl
xchg
popa
mov
xlat
adc
imul
jmp
ins
xor
cmps
cmovge
or
bnd
sbb
in
and
dec
ins
pop
enter
inc
mov
jge
mov
std
cmp
not
rcr
mov
push
mov
cdq
in
shl
aaa
test
cmp
cmp
jno
xchg
cmp
mov
aam
and
cmp
rcl
fistp
in
pop
xor
movs
jl
fwait
add
jo
add
jge
fcom
(bad)
cmp
mov
push
sub
add
outs
dec
sahf
dec
sub
or
jns
inc
mov
mov
call
pop
xor
stos
push
adc
fild
sub
in
mov
mov
loop
fistp
mov
jo
sub
fadd
mov
bound
movs
fcom
(bad)
cmp
daa
sbb
lahf
mov
mov
mov
inc
xor
cmp
pushf
jle
cmps
neg
and
or
imul
(bad)
fnstcw
sbb
dec
pavgb
in
ss
jae
xor
pop
(bad)
sbb
test
mov
fst
jns
es
(bad)
push
sub
pusha
mov
not
jmp
xor
sti
add
sbb
and
or
jns
rcl
test
ja
cdq
pop
daa
daa
xchg
pop
fsub
xchg
mov
sahf
ficomp
test
jle
ja
xor
in
pop
leave
jno
mov
call
aas
in
ror
stos
movs
ds
mov
adc
les
stc
mov
push
int
(bad)
fisub
sub
sbb
mov
jo
rol
jns
fadd
jbe
or
fs
sbb
loope
sub
popf
fsin
pop
shl
je
scas
div
lods
popa
or
icebp
test
out
mov
adc
push
push
push
cmc
mov
pushf
retf
(bad)
sti
pop
or
sub
or
pop
inc
mov
push
int
sub
call
mov
retf
jg
out
(bad)
inc
add
and
xchg
out
enter
jb
mov
mov
lahf
add
dec
inc
sub
and
mov
sub
jo
pop
inc
dec
mov
push
popf
fld
in
stc
mov
stos
inc
add
add
ror
cld
inc
je
pop
sub
push
neg
adc
pop
ds
or
jecxz
jecxz
stos
test
mov
sti
mov
pushf
(bad)
jne
cwde
imul
ins
(bad)
(bad)
test
(bad)
bound
(bad)
aad
shl
lock
jbe
sub
pop
mov
addr16
mov
jae
add
jle
(bad)
push
mov
mov
ja
mov
fsub
cmc
inc
aas
pop
sar
sub
pop
and
jno
int3
pop
xchg
imul
mov
sbb
ins
test
pop
iret
int3
test
imul
neg
movs
push
push
stos
cs
push
and
shl
mov
iret
ret
into
in
mov
jle
lahf
out
pop
push
push
pop
cmp
lea
scas
mov
fucomi
cmp
cld
cmp
mov
ret
scas
aaa
inc
xchg
pop
lods
push
xchg
addr16
jle
pop
xchg
imul
inc
push
not
fist
jge
and
call
shl
shl
pop
inc
inc
cli
out
xor
fstp
popf
xchg
inc
in
or
sbb
imul
push
call
call
jg
cmp
cmp
call
stc
into
scas
xchg
repz
mov
pop
jp
call
daa
sbb
imul
cmps
and
xchg
iret
xchg
or
or
xchg
aas
outs
and
dec
cwde
shr
pop
and
stc
into
inc
dec
push
(bad)
push
pop
out
cmp
dec
push
(bad)
push
js
ja
cs
fwait
cmp
mov
pop
and
adc
mov
repz
lahf
pop
adc
aas
sub
fild
psadbw
pop
sub
cs
dec
into
xchg
hlt
jl
jne
cmp
clc
pop
push
(bad)
jg
inc
stc
jnp
pop
pop
jg
mov
push
out
xchg
lds
icebp
push
pop
cld
retf
xor
jmp
lahf
fmulp
iret
in
and
xor
scas
xchg
jb
xchg
jmp
lahf
push
retf
cmc
cli
mov
icebp
(bad)
jp
iret
pop
bnd
aas
inc
adc
xchg
cmp
jno
test
out
jns
and
or
rol
adc
dec
push
aad
rol
cs
cmp
jg
mov
(bad)
in
cld
mov
and
xor
adc
inc
pop
sbb
(bad)
data16
xchg
push
sub
or
add
xor
test
scas
push
sbb
inc
sbb
popa
xor
xor
jecxz
ss
lea
stos
jne
push
dec
add
(bad)
addr16
or
push
mov
inc
adc
sbb
frstor
stos
inc
popf
pop
add
setg
fist
push
jbe
sbb
dec
ret
(bad)
outs
rcr
jmp
call
push
lods
int3
pop
jmp
jbe
mov
jmp
std
movs
in
enter
iret
out
call
sub
sbb
jl
icebp
mov
or
mov
sbb
jmp
cmps
in
outs
sbb
mov
xor
addr16
lods
iret
out
cld
jg
adc
cmps
add
call
xor
js
push
pop
call
push
sub
cmp
clc
scas
dec
mov
imul
add
cmps
mov
pop
scas
lods
push
lahf
fdiv
mov
jbe
jle
cmp
ret
xor
xor
mov
ins
cs
fcom
jg
jns
sbb
je
neg
fidiv
fist
mov
xor
loop
ret
aam
push
xor
std
lods
fs
cmps
lahf
repz
pop
sar
sbb
mov
mov
popa
imul
mov
cmp
fwait
loop
mov
mov
imul
mov
mov
mov
add
jnp
mov
leave
ror
cmc
icebp
clc
je
fsub
dec
scas
push
cli
lds
cmp
popf
gs
dec
lea
dec
(bad)
jnp
dec
lahf
jl
mov
cmc
push
js
mov
jecxz
outs
bound
into
pop
ds
inc
fimul
ins
pop
mov
pop
out
arpl
test
cmp
pop
mov
add
jbe
push
mov
mov
daa
mov
clc
jle
(bad)
(bad)
inc
fwait
imul
stos
lea
dec
imul
mov
mov
std
fs
aas
test
cmp
into
in
call
mov
push
pop
dec
pop
bound
in
xchg
aad
adc
push
leave
adc
or
cmp
push
lahf
outs
les
aam
imul
repz
mov
pop
xor
sub
test
ins
into
sahf
sbb
push
pop
movs
ficomp
sub
fisttp
ins
repnz
push
fcomp
fmulp
(bad)
sti
sbb
adc
mov
(bad)
retf
clts
cmps
dec
jmp
push
jg
inc
sbb
jecxz
cmp
sub
lock
call
cmp
ins
push
xchg
loope
cmps
pushf
mov
cmc
jmp
mov
(bad)
pop
div
sti
loopne
dec
je
cmp
cdq
xchg
loope
stc
inc
rcr
fidiv
inc
add
loopne
xchg
push
pop
loop
(bad)
scas
jge
in
xor
pushf
jecxz
je
adc
rol
in
jl
lea
stos
shr
sbb
pushf
jmp
sbb
sub
push
cwde
shr
fild
(bad)
outs
les
dec
lds
ins
mov
inc
into
fnstenv
fldz
es
adc
mov
sbb
aad
push
push
fidiv
cmp
push
call
retf
aas
dec
or
jns
xchg
in
les
outs
push
out
ja
push
mov
xor
jae
inc
hlt
shr
or
push
xor
add
jnp
xor
sbb
cvtps2pi
sub
out
aam
cmps
cmp
hlt
and
into
add
and
stos
xor
test
in
inc
out
jae
mov
add
pop
add
punpckhbw
xchg
jno
call
mov
fimul
adc
shl
stos
fnsave
or
pop
adc
jbe
repnz
add
pushf
xchg
out
jns
sbb
pushf
or
call
mov
push
adc
ss
mov
jge
cmp
nop
(bad)
subps
push
mov
jae
pushw
es
mov
rcr
push
xchg
cmps
sbb
push
and
dec
push
int
ja
jge
stc
sbb
jge
sbb
xor
vpsrlw
jecxz
or
mov
cmp
call
jne
into
je
add
clc
jecxz
push
into
(bad)
jmp
adc
mov
pop
or
and
xchg
test
call
js
sbb
jl
push
push
add
pop
add
shl
adc
pop
jb
retf
js
aas
xchg
call
ror
in
xor
inc
ins
pusha
fs
cld
(bad)
mov
xchg
push
xor
mov
scas
es
jecxz
mov
in
pusha
inc
xchg
push
fcmovne
dec
ds
mov
ds
out
xchg
jl
pop
int
out
pop
vcvtsi2sd
or
bound
aas
xor
or
lea
mov
ins
stos
(bad)
out
dec
and
es
leave
mov
cmp
fdivr
xchg
inc
push
sub
pop
pop
sti
outs
jecxz
pop
shl
pop
add
jne
loopne
daa
fadd
adc
adc
ins
sbb
mov
add
call
jne
mov
mov
std
jo
jns
and
jg
cmp
inc
sub
fbstp
pusha
popf
dec
pop
jmp
inc
and
or
cmp
arpl
inc
push
leave
in
mov
mov
cmp
pop
mov
arpl
jp
pushw
loope
aas
loopne
mov
test
jmp
(bad)
jne
dec
sti
jae
repz
loopne
jno
inc
pop
pop
jne
add
cmp
fistp
sub
push
or
mov
or
jg
call
sbb
mov
movs
(bad)
out
adc
pop
out
jge
int
jg
cmp
xor
sbb
into
xor
pop
mov
push
test
(bad)
jle
sub
sub
fld
or
mov
mov
mov
mul
cmp
in
jo
mov
jp
inc
fdivr
in
fwait
(bad)
and
and
adc
cld
lods
(bad)
es
fstp
and
dec
repz
mov
pop
pop
cmp
sub
and
cmp
in
push
loope
sub
stos
lods
push
mov
ja
mov
iret
xchg
cmp
jbe
pop
daa
es
xchg
shl
out
mov
mov
fadd
shl
retf
rcl
dec
jecxz
cmp
fsub
mov
aas
push
sti
ds
push
outs
sar
aas
pop
psubsw
cdq
fwait
mov
inc
jecxz
inc
jg
test
jae
or
mov
jp
into
dec
add
dec
inc
mov
fistp
dec
adc
test
mov
fld
not
lods
scas
cmps
push
inc
pop
and
cmp
jns
stc
leave
mov
lock
fmul
jle
or
xor
arpl
ja
mov
push
cmp
sub
inc
push
push
cmp
dec
outs
sub
xchg
add
xor
scas
pop
sbb
hlt
dec
inc
(bad)
idiv
out
sbb
or
fcomip
dec
pop
(bad)
lods
inc
cmp
dec
sbb
cmp
or
xchg
aam
xor
jl
lock
cmp
sub
inc
inc
aas
or
mov
jmp
mov
ret
lds
mov
in
and
and
mov
call
cld
xor
fs
sbb
xchg
fistp
mov
shl
sub
cmp
dec
sub
cmp
adc
and
inc
ins
bswap
mov
icebp
loope
dec
retf
lods
lahf
stc
(bad)
adc
pop
xor
push
push
xchg
xor
mov
ss
fstp
lock
add
ins
xor
mov
pop
fadd
in
mov
dec
pop
sub
adc
jnp
adc
lods
push
mov
(bad)
push
pusha
call
mov
push
jecxz
enter
stos
jno
add
fs
addr16
scas
pop
cmps
add
dec
pop
cld
dec
inc
xchg
repz
dec
sbb
sahf
jnp
jecxz
push
or
cmp
pop
cli
add
iret
dec
inc
xchg
movs
loopne
adc
shl
fmulp
je
call
add
repnz
sbb
adc
call
lahf
and
loope
jnp
mov
clc
fdivr
ret
ss
push
cmp
(bad)
sahf
add
pop
pop
mov
(bad)
iret
les
mov
mov
push
xlat
and
xchg
pop
(bad)
push
movs
loope
or
mov
bound
add
ins
aas
mov
mov
call
mov
outs
jno
in
inc
dec
jmp
int
ret
push
jo
imul
adc
xor
std
ja
or
lahf
std
mov
or
dec
xlat
push
mov
xchg
adc
inc
push
movs
push
sbb
outs
out
int3
jle
or
(bad)
fcmovbe
cld
jmp
iret
dec
xchg
jnp
mov
retf
repz
rol
jle
(bad)
push
cmp
xadd
adc
add
xor
sar
pop
jns
sbb
sti
fcmovnu
enter
dec
(bad)
push
inc
neg
daa
addr16
scas
ret
(bad)
arpl
(bad)
mov
icebp
sbb
pushf
mov
pop
xchg
mov
cmp
in
mov
dec
js
sub
and
sbb
pop
jg
and
mov
mov
dec
dec
and
mov
movs
xor
ja
pop
add
xchg
ss
addr16
mov
inc
adc
push
in
(bad)
mov
dec
mov
inc
ficom
pusha
hlt
in
xchg
mov
call
in
mov
enter
cmp
sbb
lock
js
cmc
movs
sar
jmp
cdq
nop
scas
in
or
popa
jmp
shl
shr
or
jmp
stos
inc
and
aaa
mov
(bad)
in
push
fdivr
jnp
je
xor
xchg
pop
cmp
into
int3
xor
ret
mov
sbb
pop
adc
mov
daa
jp
pop
sub
sub
das
xlat
pusha
les
cmp
rcl
sti
pusha
neg
add
jmp
push
dec
scas
push
into
aad
std
ret
cmp
dec
push
shl
not
mov
outs
(bad)
std
sahf
in
aaa
call
es
inc
mov
add
icebp
out
test
fisubr
in
sub
mov
mov
idiv
cdq
cmp
mov
xor
pop
not
inc
pushf
sbb
adc
cld
mov
leave
cmp
nop
addr16
pop
popa
push
fisubr
shl
or
int3
jb
bound
lds
test
or
rcl
add
and
addr16
stos
cmps
adc
adc
sub
sub
xchg
sbb
ret
mov
mov
aad
(bad)
cmc
mov
pop
sub
cdq
or
movs
jne
imul
imul
lods
test
hlt
stc
ret
push
add
push
out
repnz
test
jne
call
pop
ret
jecxz
pop
mov
das
sbb
ds
loopne
pop
xchg
sar
mov
jno
nop
mov
(bad)
cs
cmp
ret
cwde
pushf
push
aad
movs
call
fdiv
mov
cwde
repnz
pop
jb
mov
ss
push
js
xchg
aaa
in
xchg
jns
cli
jno
cs
hlt
retf
or
sbb
aad
cld
jb
xor
cld
std
fs
pop
fdivrp
(bad)
rol
out
push
int3
add
call
mov
adc
cwde
and
jne
xor
bound
xchg
cmp
jg
les
mov
add
test
pop
aaa
sub
and
jecxz
ret
hlt
repz
std
add
dec
into
or
pop
cli
sub
mov
pop
sbb
pop
mov
out
(bad)
ret
pop
push
mov
ret
dec
xchg
icebp
addr16
xchg
push
sbb
faddp
jg
sub
dec
jae
shr
pop
add
mov
ins
outs
xchg
mov
ds
jg
not
popf
jns
mov
pop
add
cmp
mov
xchg
addr16
cmc
cmc
mov
add
inc
imul
add
mov
cmp
test
out
das
int3
xor
shl
movs
add
test
cmp
std
in
fs
stc
sti
dec
call
adc
push
inc
push
jo
pusha
test
sbb
cmps
mov
lock
and
jno
xchg
(bad)
push
test
les
stos
push
dec
cmp
mov
inc
cs
rcr
shl
inc
inc
add
xchg
test
push
pmaxsw
fisttp
iret
in
out
sub
dec
sbb
jg
jbe
fdivr
jmp
sbb
out
cmp
sub
dec
sbb
pop
push
cli
jg
dec
jo
sti
xor
ds
aam
mov
fimul
(bad)
xchg
and
ja
lea
mov
in
and
out
xchg
jnp
push
add
lods
imul
xor
lahf
mov
sbb
sbb
mov
mov
sbb
in
jnp
dec
push
mov
shr
push
lahf
jl
pop
hlt
pushf
or
jns
mov
push
fistp
adc
jnp
stc
pop
rcl
adc
cmp
dec
les
dec
inc
stos
pop
xor
and
or
out
sbb
aas
pop
call
jmp
bound
stos
push
add
xchg
pushf
je
ja
add
lods
or
addr16
cwde
shr
add
aas
enter
addr16
inc
mov
js
add
pop
pop
mov
loope
xchg
rol
dec
scas
leave
mov
inc
fstp
xchg
div
loopne
pop
jnp
jle
push
test
mov
into
out
fs
sub
call
adc
cmp
mov
loopne
pop
dec
ret
inc
sub
pop
cld
aas
adc
outs
dec
and
das
(bad)
fbstp
and
cs
std
mov
add
xchg
add
and
addr16
loopne
add
stc
aad
push
mov
mov
jp
jecxz
shl
dec
mov
ja
xor
cmp
inc
sbb
jnp
lock
pop
out
(bad)
dec
fucomip
test
mov
rcl
sbb
jmp
mov
add
outs
jbe
mov
adc
sub
fisttp
hlt
pop
sub
or
xchg
(bad)
fcom
sbb
mov
xchg
ins
ins
je
mov
jg
ds
scas
push
les
jb
jno
pusha
pop
pop
imul
mov
mov
imul
ins
cmp
pop
cmp
je
inc
mov
sub
xchg
sbb
jle
push
aas
cld
dec
aam
cmp
das
stos
ins
aam
xor
or
pop
adc
mov
pop
lea
rol
in
mov
xor
jge
cmp
imul
rcl
jo
icebp
movs
icebp
xchg
sti
das
xchg
fist
sbb
push
inc
outs
add
cmp
out
xchg
mov
add
sub
xchg
cmc
popf
rcr
js
push
mov
add
push
std
cmp
daa
leave
(bad)
ficom
mov
rcr
jmp
gs
stos
and
mov
in
pop
jo
xchg
push
xchg
xchg
clc
out
shl
xor
xchg
stos
adc
mov
dec
imul
inc
sub
sub
jecxz
push
(bad)
sbb
jp
xlat
xor
scas
push
dec
out
sub
stc
mov
adc
icebp
cmp
js
mov
jge
shl
cli
arpl
mov
hlt
jp
adc
in
mov
std
sbb
into
adc
ja
lods
fbstp
and
cmp
jbe
pop
bound
int3
loop
mov
push
es
cmp
dec
xor
pop
(bad)
in
mov
fld
test
loopne
push
ss
cmp
(bad)
or
cmp
mov
push
cmc
loop
xchg
jmp
iret
out
jno
push
pop
in
adc
and
xor
jno
es
stc
sahf
adc
ret
inc
jge
sub
or
adc
je
jg
jp
mov
ja
fstp
xchg
jo
ficomp
shl
pop
mov
inc
mov
mov
lahf
xchg
xchg
les
mov
bound
fmul
cmp
xor
sbb
int3
push
mov
push
push
ds
inc
cmp
sbb
xlat
stos
pushf
call
xor
(bad)
and
jge
aad
js
dec
fld
fisubr
imul
clc
jmp
je
add
lahf
dec
or
xchg
mov
pop
cmp
stc
xor
loop
shr
jecxz
rep
pop
ins
and
cwde
inc
in
aad
sbb
ds
jns
inc
cmp
lahf
mov
ins
dec
ins
popa
mov
ins
push
enter
in
and
push
xchg
pop
hlt
inc
(bad)
test
jmp
test
les
sub
mov
sub
pop
add
scas
mov
fistp
xchg
fdivp
mov
jmp
sbb
pop
int3
xchg
cs
mul
or
sub
ins
inc
pop
sub
xchg
repz
push
cmp
or
fimul
pop
mov
loopne
div
mov
sbb
pop
repnz
xchg
mov
imul
aas
cs
data16
out
mov
hlt
dec
push
xchg
inc
jnp
inc
cmp
popf
leave
jne
inc
loopne
jne
push
or
inc
ss
sbb
or
mov
lahf
sub
stos
cmp
mov
arpl
int3
out
sahf
in
fisub
cmp
ja
xlat
test
cmp
xchg
and
cmp
mov
iret
loopne
icebp
mov
sub
in
enter
hlt
cmp
fcmovbe
fidivr
imul
push
js
push
jno
push
ins
add
fstp
in
stos
cmp
outs
cwde
fwait
leave
or
mov
in
stc
mov
add
mov
int
and
int3
ds
bound
lds
mov
popa
push
(bad)
jecxz
xlat
pop
adc
mov
jae
add
xor
std
repz
sub
mov
daa
in
xlat
pushf
cmp
out
jmp
iret
jl
into
lahf
xlat
pop
scas
dec
mov
xchg
lds
es
fstp
outs
pop
adc
iret
jns
add
mov
add
mov
mov
push
jecxz
ins
jno
test
pop
and
add
or
mov
pop
cmps
pop
ror
mov
sbb
jne
ret
or
(bad)
cmp
mov
les
out
scas
cdq
(bad)
mov
and
scas
xor
jle
ss
lahf
(bad)
xor
sbb
cmp
stos
cli
adc
sub
add
fst
mov
cmp
sub
ja
vpslld
fmul
jno
or
push
mov
dec
(bad)
xchg
mov
arpl
test
in
clc
in
sub
ror
loopne
sti
loop
neg
pop
push
xchg
(bad)
es
icebp
dec
clc
into
aam
cld
jmp
dec
jb
and
call
ins
sub
jmp
icebp
sahf
(bad)
(bad)
ss
cmc
or
sbb
clc
pop
sbb
xor
jno
loopne
fistp
test
addr16
enter
mov
mov
dec
mov
adc
jp
iret
mov
imul
lds
loopne
mov
cwde
mov
dec
bound
mov
lahf
mov
adc
ficom
(bad)
sti
arpl
ja
sbb
hlt
call
mov
ins
(bad)
popf
mov
(bad)
lock
(bad)
jle
add
push
xor
or
pop
test
mov
lods
mov
stos
pop
imul
push
or
adc
js
(bad)
dec
popf
pop
adc
push
das
mov
inc
inc
jnp
sbb
enter
aad
int3
out
test
jecxz
mov
mov
out
pop
push
fnstcw
lock
iret
or
icebp
lea
or
sahf
mov
call
jge
sar
jmp
xchg
pxor
push
lods
cdq
(bad)
pop
popf
(bad)
or
jl
push
in
cmp
or
(bad)
jne
into
jecxz
icebp
mov
fst
mul
test
inc
out
ins
bndldx
movs
pop
sahf
cmps
ds
bound
icebp
jnp
pop
lea
sub
cmc
push
pop
adc
out
pop
(bad)
hlt
pop
stos
ds
stos
aas
ds
inc
xchg
out
aam
sbb
add
push
lea
fdivrp
push
stos
cmc
int3
out
mov
jne
int
inc
jecxz
mov
jo
or
lahf
add
out
into
mov
jp
addr16
shl
cmp
sub
addr16
xchg
outs
push
cmp
out
sahf
push
pop
mov
bound
push
lahf
jnp
int
out
ins
shr
xchg
xchg
jge
rcl
pushf
out
dec
test
push
div
sti
int3
cli
pop
hlt
int
sbb
or
xchg
pop
scas
jae
mov
xchg
jg
aad
test
add
dec
lods
mov
jp
popf
adc
xchg
fstp
fimul
enter
xchg
retf
stos
adc
xchg
cwde
jno
add
scas
out
aaa
add
mov
sbb
add
push
jb
rcl
sub
(bad)
jle
mov
shr
dec
in
fld
mov
cld
inc
out
out
xlat
lods
inc
pop
xor
dec
jb
mov
and
adc
mov
add
ds
lds
imul
jmp
stc
fistp
fcom
dec
add
test
cmp
xchg
adc
out
fwait
xchg
test
xchg
push
jns
mov
xchg
xor
sar
lock
and
cmp
add
fistp
jno
test
iret
cmp
dec
inc
mov
and
fist
neg
mov
inc
ja
movs
adc
cmp
ror
mov
pop
hlt
jnp
arpl
and
adc
push
shr
xchg
xor
jne
adc
push
jno
jo
push
enter
sub
cmp
sbb
cli
lock
mov
outs
adc
lock
ret
pop
mov
mov
mov
jns
loop
gs
xor
stc
out
sbb
xor
dec
mov
pusha
push
inc
add
cmp
mov
jbe
sbb
dec
inc
mov
out
inc
mov
iret
js
pop
inc
leave
jge
fiadd
push
je
push
cmp
sub
fwait
nop
jno
test
push
mov
lds
aad
call
push
and
test
add
cs
mov
adc
scas
push
in
jg
sahf
push
pop
cmp
outs
ds
mov
ins
mov
sub
sub
cwde
pop
scas
xchg
in
pop
mov
push
ficomp
dec
js
imul
dec
sar
clc
cmp
mov
push
fadd
mov
dec
xor
sahf
add
das
arpl
dec
dec
ret
dec
or
sub
mov
out
inc
in
cmp
scas
dec
or
xchg
sub
ret
int3
push
xor
ins
cmp
arpl
cli
jbe
add
cmp
push
stos
std
out
aas
lea
jbe
inc
out
inc
lahf
test
mov
repnz
popa
out
outs
clc
cmp
xchg
in
push
mov
icebp
cmp
sub
and
movs
mov
std
test
mov
cmp
lea
xor
mov
cld
xchg
add
push
lock
sub
sbb
sub
test
sysret
bound
aam
sub
out
adc
dec
scas
dec
lods
jle
jno
add
pop
push
(bad)
mov
push
pop
mov
push
call
ret
mov
js
aaa
stc
cmps
cli
cdq
or
sar
aam
jle
call
jg
ror
arpl
mov
mov
jl
out
stos
jae
call
retf
pop
lahf
adc
xchg
icebp
mov
add
cs
iret
imul
jp
bound
(bad)
lock
push
shr
sbb
pop
pop
adc
push
mov
jl
pusha
mov
repnz
int
cld
pop
dec
loopne
enter
aad
int3
push
xor
adc
scas
mov
into
outs
and
fwait
rcr
pop
and
jbe
scas
neg
pop
aaa
pop
cmc
out
fsub
loope
inc
xchg
out
(bad)
int
in
xor
jnp
vpmullw
xor
adc
repnz
push
loop
jl
inc
jo
cdq
cmp
and
bound
cld
in
lods
icebp
fucomp
pop
jle
inc
add
inc
ins
ret
les
les
sub
adc
int
cli
mov
add
pop
pop
mov
adc
ins
out
add
mov
jp
cmps
push
mov
mov
mov
fwait
cmp
shr
push
mov
pop
lods
and
lods
mov
bnd
jecxz
in
mov
ror
das
xchg
jnp
cld
cwde
sti
mov
scas
dec
jns
xlat
call
xor
(bad)
jb
xchg
fstp
jmp
gs
mov
in
cmps
addr16
cmp
xor
push
adc
aas
sub
adc
add
mov
mov
pop
pop
dec
imul
jno
(bad)
fidiv
inc
push
mov
rcl
cs
cs
xor
je
mov
inc
sub
add
mov
mov
mov
xor
inc
inc
and
jl
mov
mov
add
sub
addr16
out
jbe
outs
jbe
mov
div
fnstsw
mov
mov
inc
inc
shl
stos
std
test
mov
cmc
cmp
test
in
ss
mov
rcl
cmp
out
cmp
sub
or
xchg
fisubr
sar
mov
jno
pop
popf
ror
mov
call
pop
aaa
mov
out
push
push
scas
movs
adc
mov
dec
or
dec
test
xor
push
mov
cmp
cmp
cmp
out
xchg
xchg
clc
jne
sbb
add
daa
adc
jnp
push
mov
cwde
jp
cli
dec
not
ror
es
mov
mov
xchg
cmp
and
push
(bad)
pop
xlat
stos
pop
mov
loopne
mov
jbe
lea
pop
mov
popa
fistp
pop
inc
fcmovbe
inc
fadd
not
arpl
(bad)
dec
jae
pusha
(bad)
not
push
lods
dec
push
stos
dec
jecxz
mov
mov
mov
stos
repnz
xchg
jae
push
(bad)
out
mov
push
mov
mov
mov
cmp
sti
fcmovbe
cmp
pop
repz
jo
mov
push
xlat
imul
xchg
icebp
or
mov
fnstenv
mov
inc
in
in
and
jmp
xor
call
mov
fwait
sub
jnp
xor
pusha
or
aam
call
jp
add
retf
jmp
mov
mov
add
cmps
stc
mov
and
add
pushf
(bad)
cmp
xor
cmps
push
or
mov
add
pop
mov
fnsave
push
mov
fnstenv
pop
movs
push
fadd
lahf
outs
jb
mov
mov
xchg
pushf
packssdw
cmp
dec
cmp
sar
jg
(bad)
jl
int
cmp
adc
fs
push
ins
sti
and
sub
pop
or
out
retf
push
sar
mov
pop
out
mov
mov
add
addr16
ins
xchg
repnz
cld
aas
(bad)
cmp
mov
inc
ss
cmp
inc
loope
sahf
inc
jl
das
or
dec
movaps
sbb
xchg
ja
cmp
lods
in
js
out
cwde
pop
repz
xor
(bad)
cmp
fimul
mov
xchg
es
pop
aas
fld1
cmp
mov
cld
in
xchg
movs
jge
les
sbb
xchg
mov
cmp
mov
das
out
push
cmp
in
or
mov
js
cmps
cmp
jns
cmp
test
call
mov
iret
pop
xlat
pop
idiv
sub
les
pop
int3
icebp
dec
sahf
popa
mov
mov
dec
inc
add
hlt
add
cli
mov
jmp
popf
leave
sti
jmp
sbb
ss
xchg
stc
rol
retf
jno
sar
xchg
popf
jb
jge
mov
icebp
sti
and
out
fwait
(bad)
imul
add
mov
icebp
clc
inc
jg
pop
fsubr
jmp
cmps
mov
push
sub
icebp
fstp
push
gs
lahf
out
and
inc
fcomp
jnp
mul
pop
mov
xchg
repz
xor
sub
gs
sub
sub
push
sub
arpl
(bad)
dec
retf
cs
inc
pop
outs
push
mov
mov
nop
sbb
ds
sub
jbe
push
(bad)
(bad)
in
cs
xchg
outs
jp
pop
xor
mov
pop
dec
imul
jno
xchg
int3
cmp
(bad)
mov
adc
ins
sar
int3
cmp
stos
mov
idiv
push
into
loope
lea
jno
jno
or
cmp
adc
push
ss
mov
mov
push
jb
push
jb
xchg
(bad)
pushf
jb
fist
mov
test
and
dec
mov
push
imul
outs
pushf
loope
mov
je
pushf
loope
mov
xchg
outs
or
das
sbb
mov
out
xchg
jne
mov
out
(bad)
repnz
jge
xor
(bad)
push
xor
and
out
xor
sbb
mov
push
shl
(bad)
gs
enter
jmp
(bad)
test
adc
and
or
inc
rcr
xor
into
sahf
mov
movs
mov
std
push
dec
xchg
imul
mov
std
(bad)
je
dec
lahf
outs
(bad)
jg
test
xor
stos
sti
or
retf
xchg
rcr
and
in
ins
int
clc
cmp
jl
pop
or
mov
and
js
pop
mov
push
pop
adc
pop
and
pop
nop
cwde
xchg
call
out
xchg
imul
pop
inc
lahf
or
mov
mov
sbb
and
mov
out
jecxz
jmp
outs
call
ficomp
int
fidiv
cmp
(bad)
xchg
jle
sub
cmps
leave
popa
movs
popf
jecxz
mov
retf
lahf
jecxz
jae
mov
inc
int3
sub
cmp
lods
sub
sbb
popa
jecxz
out
xchg
xchg
les
adc
pop
jae
inc
pop
mov
es
jle
mov
mov
sub
push
loop
out
push
cmp
inc
add
icebp
mov
fsubr
out
mov
addr16
repz
xchg
ja
pushf
rcr
pop
jecxz
sbb
mov
mov
pop
pop
into
dec
pop
bound
retf
inc
ins
pop
and
add
repnz
loope
push
sub
rol
outs
pop
das
xor
out
jmp
mov
repz
jae
clc
(bad)
mov
xor
jl
xlat
call
or
mul
add
rcr
bound
(bad)
xchg
mov
repz
or
gs
xchg
sbb
sahf
into
xchg
leave
pop
sbb
ss
jb
push
in
jb
mov
ret
sar
and
and
rol
pop
push
mov
(bad)
jge
dec
js
xor
sti
add
(bad)
cmp
and
jb
mov
xchg
hlt
pop
jg
sub
(bad)
and
das
out
mov
cmp
repnz
jae
ja
fidiv
ret
pop
aas
cdq
cs
or
adc
xchg
jmp
mov
cmp
out
ss
mov
hlt
std
mov
inc
ret
add
jns
call
or
ficom
or
or
cld
cld
iret
in
icebp
aas
mul
add
add
sbb
pop
ficom
les
fucomp
pop
fwait
dec
jns
scas
lea
adc
add
inc
jo
dec
adc
int3
into
bound
out
retf
inc
loop
nop
jb
push
jge
push
sahf
rol
out
(bad)
and
mov
sub
hlt
cdq
in
out
ins
les
or
or
lahf
sub
loope
fdiv
jecxz
pop
out
and
ins
scas
jle
aaa
push
clc
cmps
inc
add
lock
inc
fdiv
lock
out
iret
out
rcl
adc
cmp
dec
arpl
out
push
cmp
rcr
rcl
xor
psllw
sub
out
aam
in
pop
in
pop
scas
push
test
pop
lds
ficom
adc
mul
clc
adc
icebp
(bad)
xchg
or
movs
dec
push
mov
pusha
outs
and
sbb
pop
mov
xor
loop
in
jmp
cmp
cld
cmp
jae
mov
sbb
test
dec
iret
data16
call
jnp
fdiv
neg
mov
retf
dec
outs
(bad)
mov
jle
mov
(bad)
mov
ds
xchg
jno
pop
div
ror
fs
push
es
push
nop
xor
mov
popf
mov
lock
sub
pusha
xor
(bad)
xor
je
add
test
xchg
addr16
cwde
pop
mov
hlt
popa
(bad)
xor
xlat
cmp
iret
xchg
dec
cld
adc
push
pop
sub
lahf
stc
hlt
inc
ins
(bad)
daa
pop
mov
dec
sbb
mov
jle
enter
push
lods
pop
jle
clc
sti
mov
loopne
ins
popa
fnstenv
shl
xor
ins
shl
frstor
cmp
cmp
and
bound
(bad)
or
xor
out
shl
jg
dec
jmp
fwait
add
(bad)
jo
loope
sahf
dec
lahf
add
dec
ret
adc
or
mov
ja
out
mov
pop
psrad
jecxz
jle
(bad)
dec
and
push
lock
mov
push
mov
sbb
in
mov
call
xchg
or
clc
retf
jns
repnz
push
xor
icebp
xor
movs
xlat
ins
or
pop
add
ret
out
mov
loope
mov
jge
or
(bad)
cld
pop
mov
add
(bad)
mov
(bad)
outs
jbe
push
pushf
pop
or
adc
movs
das
mov
ins
or
clc
aaa
js
je
iret
sub
iret
mov
pop
cmp
pop
cli
push
or
lods
test
ret
sbb
cmp
inc
into
lods
in
and
add
outs
popa
jg
ror
fiadd
or
out
sti
inc
movs
cmp
xchg
mov
jnp
loopne
shl
jle
cmp
cmc
in
mov
ins
mov
jmp
and
daa
mov
adc
lods
or
(bad)
dec
pop
fsqrt
mov
gs
inc
movs
xchg
int
pushf
push
div
data16
hlt
retf
xchg
jb
mov
fwait
inc
jmp
daa
xlat
shl
frstor
(bad)
aas
pop
(bad)
fisttp
jbe
sub
mov
jge
call
icebp
cmps
mov
out
scas
pop
sar
mov
jo
mov
(bad)
cdq
mov
ror
pop
aam
in
test
ret
cmp
(bad)
cli
sar
fstp
das
xchg
pop
pushf
adc
das
out
xlat
mov
cmp
xchg
bound
pop
fprem
dec
out
ret
mov
mov
out
xchg
mov
adc
adc
sub
inc
fdivr
icebp
ret
add
sub
mov
push
punpckhdq
jnp
nop
outs
pop
sub
repz
cmps
pop
mov
in
xor
sar
add
scas
pop
shr
es
and
cmp
jge
pop
adc
pop
jno
daa
push
sub
mov
mov
xlat
punpckhwd
sbb
fild
stc
loope
(bad)
jle
shl
js
cmp
retf
jns
ins
jg
push
retf
push
pop
push
cdq
imul
xchg
fst
pop
push
or
push
popf
pop
pusha
adc
imul
bound
fistp
lods
push
call
pop
mov
in
mov
push
mov
sub
xchg
retf
repnz
test
popf
jo
inc
dec
jns
pop
mov
in
ja
fisttp
jmp
aaa
xchg
jb
jg
stc
idiv
jle
js
sbb
in
mov
fdivr
xor
sbb
bound
stc
clc
in
jl
repz
mov
cmp
pop
jl
fisttp
(bad)
clc
stc
test
cmps
cld
cld
inc
dec
jne
jl
sub
lock
cmp
mov
ds
sub
(bad)
ds
(bad)
jg
and
clc
pop
and
jg
lods
loop
jmp
push
mov
icebp
repnz
addr16
in
cs
test
fst
adc
sbb
das
mov
icebp
popa
xlat
aam
ins
cld
push
lock
cli
mov
gs
add
mov
cmp
cmp
push
mov
stc
outs
(bad)
cmc
das
test
sar
mov
dec
scas
dec
xchg
sbb
jg
ds
mov
aad
xor
icebp
push
out
stos
popf
mov
not
rol
in
xchg
int3
push
bswap
mov
bswap
dec
inc
aam
and
and
jo
push
cmps
push
lahf
xchg
cmp
sbb
(bad)
(bad)
in
xchg
in
ret
call
xor
stos
ret
cmps
mov
test
test
dec
lahf
imul
aas
(bad)
jl
stos
cld
das
sahf
fwait
mov
mov
test
push
cmp
xchg
add
jns
xor
repz
iret
push
mov
cwde
(bad)
btc
nop
pop
sbb
lock
pop
or
mov
loopne
(bad)
aaa
int3
ret
push
ret
and
inc
mov
int3
jle
idiv
aas
adc
sub
clc
lods
jae
push
js
aam
sub
jns
and
and
sbb
mov
sar
add
rol
cwde
add
inc
int
pop
dec
lahf
jp
jg
fimul
mov
ins
jle
sub
fsubr
dec
enter
shl
mov
cdq
stc
mov
dec
sbb
jne
adc
iret
dec
inc
and
scas
jge
xchg
jle
aad
pusha
push
lods
jmp
push
fild
sub
out
call
cmp
daa
or
mov
or
cmp
dec
or
cmp
ret
mov
cmps
ret
or
sub
fidivr
cmp
xchg
out
iret
mov
mov
(bad)
mov
repz
mov
adc
pop
outs
xchg
jno
mov
stc
pop
mov
rol
pusha
loope
or
jno
jo
int3
ins
adc
mov
or
pop
sub
cmc
pminub
stos
push
arpl
dec
ret
out
cmps
shl
lods
shl
sub
dec
mov
or
sub
ja
repz
sbb
lea
jecxz
pusha
add
bswap
push
cs
enter
adc
lds
hlt
push
iret
neg
xchg
mov
iret
ins
xchg
jecxz
adc
dec
inc
kmovd
repnz
test
faddp
loope
call
mov
ins
mov
or
pop
fsub
mov
(bad)
out
rol
or
in
sahf
xchg
jo
into
push
mov
(bad)
aad
rcr
popf
sahf
lock
mov
and
fbld
mov
mov
(bad)
push
scas
xchg
cld
call
xor
push
jle
push
js
xchg
inc
dec
or
mov
out
pop
xchg
mov
fdiv
cmp
dec
adc
out
(bad)
shl
in
mov
jecxz
int3
retf
scas
push
jle
dec
pop
cmp
lock
je
adc
aaa
fstp
push
dec
xchg
(bad)
imul
ret
retf
cmps
(bad)
pop
cmp
xor
popa
xchg
sar
popf
(bad)
cld
mov
jmp
xlat
cmp
xor
dec
and
xchg
mov
inc
cld
push
or
ins
pop
repz
cmc
sub
jle
push
sbb
xchg
shl
out
push
mov
fisub
loope
xor
mov
shl
xchg
sbb
sub
mov
push
mov
(bad)
aad
mov
lahf
popa
inc
leave
inc
or
mov
or
xchg
cli
pusha
push
cdq
mov
mov
(bad)
jmp
jae
dec
mov
or
cmp
outs
or
fmul
not
retf
xor
sub
push
adc
or
(bad)
test
mov
rcr
inc
sbb
repz
cwde
dec
cli
mov
movs
sbb
les
inc
les
iret
inc
jg
sahf
push
and
or
(bad)
fmul
inc
add
push
dec
jp
ja
mov
adc
mov
pop
mov
xchg
xor
setnp
mov
pop
inc
jnp
mov
sbb
ds
pop
mov
enter
or
and
test
das
out
arpl
add
pop
push
fmul
lods
xchg
mov
iret
inc
pop
in
cwde
arpl
lahf
and
in
leave
adc
add
(bad)
lock
shufps
jp
sbb
pushf
pop
test
out
stos
rol
ja
jecxz
sti
scas
xchg
int3
shr
mov
sub
loopne
mov
loopne
scas
cli
(bad)
popa
pop
mov
sbb
(bad)
inc
lock
or
jp
imul
jne
xor
cs
hlt
cmps
mov
out
add
inc
mov
sub
leave
jl
lock
ret
push
cwde
cmp
into
sbb
pop
loopne
xchg
(bad)
push
call
pop
call
repz
lods
adc
jle
iret
(bad)
xchg
vunpckhps
inc
or
repnz
xchg
dec
(bad)
pop
in
jmp
popf
and
mov
xor
ins
bound
or
mov
sub
xor
mov
movs
mov
arpl
call
shl
add
mov
lds
jb
rcr
push
cdq
jno
loop
pop
cmc
imul
sbb
push
push
jo
icebp
in
call
mov
fsub
push
dec
pop
pop
cdq
pop
cmps
push
movs
retf
sbb
and
outs
sub
in
dec
gs
imul
jg
addr16
sar
xor
retf
jge
pusha
gs
pop
loope
cmp
lods
mov
dec
icebp
std
out
aad
dec
clc
ins
lea
jge
sub
cmp
sqrtps
cli
outs
test
out
std
fisubr
(bad)
dec
adc
lea
and
fucom
loop
out
pushf
pop
xchg
es
push
mov
add
aad
cmp
cmp
ins
jbe
aas
fcom
or
mov
xlat
movs
mov
jae
adc
xchg
xor
jae
(bad)
or
clc
(bad)
sbb
cmp
leave
call
repnz
call
or
jecxz
shr
xor
cdq
xchg
loop
or
inc
and
popf
std
or
mov
sub
sub
mov
inc
jecxz
push
xor
ja
jl
jne
ins
iret
jnp
mov
out
lods
(bad)
out
inc
adc
out
push
loope
rol
sbb
dec
rcr
fstp
fidivr
(bad)
cld
xchg
aad
test
pushf
push
push
lds
sar
pop
fld
repnz
outs
xor
pop
(bad)
aam
popf
push
pushf
aas
mov
jbe
mov
sahf
mov
mov
in
mov
xor
lea
xor
jb
popf
fxch
sbb
in
popf
sbb
(bad)
mov
in
jae
dec
stos
movs
inc
mov
sti
hlt
cmp
into
xor
sbb
jno
sti
dec
stc
push
pusha
add
ret
and
push
push
xlat
rcr
xchg
jno
aaa
aaa
xchg
xchg
mov
jecxz
test
add
enter
cmp
pop
popf
in
push
sbb
les
sub
mov
or
fwait
cmp
xor
and
jnp
or
scas
mov
fist
ret
test
lds
push
stos
test
and
xchg
mov
push
shl
stos
adc
icebp
jmp
sub
mov
imul
imul
inc
and
dec
mov
mov
cmp
sub
leave
std
cmp
icebp
mov
mov
inc
fwait
push
xor
mov
test
jge
cli
loop
pop
mov
retf
shl
bound
lods
mov
aam
(bad)
jmp
xchg
dec
jae
hlt
pop
stos
test
pop
rol
arpl
popf
cmp
iret
shl
dec
fsub
add
xor
dec
add
push
addr16
xor
in
xchg
jo
hlt
and
retf
or
sbb
sub
push
ror
ja
and
push
out
xchg
pop
outs
adc
add
push
(bad)
cmps
xor
inc
mov
jmp
mov
test
jle
retf
cmp
mov
in
adc
xchg
dec
lahf
lea
jmp
xchg
es
mov
mov
sub
lods
lods
dec
push
sahf
mul
mov
repz
push
mov
cmp
fst
arpl
call
loopne
mov
lahf
sub
outs
hlt
out
out
inc
and
inc
not
dec
mov
pop
(bad)
or
lods
sbb
cmps
fidiv
push
sbb
push
retf
into
and
xor
mov
retf
lock
fbstp
hlt
push
outs
adc
scas
mov
pop
div
or
xchg
ror
xchg
bound
mov
(bad)
in
push
adc
sub
push
sbb
shr
call
sub
sti
mov
push
frndint
cmp
pop
add
aaa
push
mov
bound
inc
or
bound
(bad)
pop
dec
int3
mov
jle
add
aad
add
pushf
push
and
mov
jne
test
shr
aas
mov
dec
add
pop
push
stos
loop
pop
adc
ficomp
scas
pop
lock
ret
fwait
mov
sbb
inc
push
jbe
jge
ror
loopne
push
movs
loope
cmp
loop
sbb
loop
stc
popf
jno
xchg
xchg
repnz
data16
add
pop
test
cld
stc
mov
rcl
dec
imul
xor
sub
aam
xor
aad
push
xor
or
sti
xlat
sbb
stos
push
cmc
sub
pop
dec
in
dec
push
cmp
mov
aad
test
sub
mov
and
push
leave
and
pusha
and
xor
mov
stos
adc
fnstsw
cwde
into
jmp
pop
outs
adc
les
push
clc
jl
sub
movs
ja
xor
ret
js
sub
jmp
imul
fist
call
dec
jae
or
retf
fsub
inc
bound
mov
jg
mov
push
dec
arpl
movs
mov
adc
ja
inc
adc
pop
sbb
or
xchg
and
imul
shl
mov
jns
clc
xchg
fdiv
cmp
adc
xchg
pop
sub
dec
pop
mov
(bad)
and
jo
gs
xor
xor
ins
movs
lock
dec
xor
sub
mov
imul
in
fidiv
jmp
or
pusha
mov
xchg
mov
jne
cmp
pop
sti
sbb
mul
mov
dec
ret
mov
ins
jmp
add
out
in
mov
dec
retf
cmp
mov
sub
das
push
mov
out
sets
lods
mov
fwait
push
fwait
test
in
sahf
cmp
push
sbb
out
or
fst
mov
xlat
mov
mov
in
mov
outs
or
ins
mov
mov
xchg
and
dec
shl
adc
inc
jecxz
xchg
pop
leave
xor
or
aad
lds
xchg
inc
push
push
jge
dec
and
pushf
lahf
rol
sub
retf
in
cld
inc
in
xor
push
inc
adc
ficomp
dec
bound
xchg
jmp
cli
cmp
ins
adc
cld
sub
push
mov
ds
fstp
or
ds
out
imul
hlt
ins
popa
lods
(bad)
stos
int
lahf
sub
dec
dec
in
xchg
cmp
movs
call
mov
xor
xorps
dec
cmp
sbb
lods
cs
test
inc
ins
in
out
mov
dec
dec
push
xor
rol
adc
cmp
sar
push
in
pop
mov
mov
call
sbb
les
xor
dec
pop
ins
push
mov
jbe
cwde
sahf
rol
cmps
fbld
jb
adc
test
pop
adc
jmp
mov
xchg
mov
inc
pop
pop
loopne
in
lahf
push
add
add
shl
jmp
inc
iret
jbe
mov
mov
pop
div
add
jg
mov
(bad)
or
mov
sbb
(bad)
sub
jb
dec
push
fdivr
loope
lds
int3
sahf
adc
in
dec
pop
xchg
(bad)
ds
jl
hlt
add
sbb
mov
pusha
out
mov
in
cld
shr
push
xchg
lods
or
xor
movs
imul
xchg
mov
push
and
cmc
jno
pop
mov
aaa
stos
xchg
cmp
movs
mov
mov
jb
xor
movs
inc
mov
push
ds
stos
pop
or
mov
or
aaa
inc
sub
inc
jmp
cs
add
adc
ins
dec
dec
(bad)
jecxz
pop
jnp
add
and
and
jno
xor
daa
mov
cmp
or
into
ins
or
daa
stc
jg
adc
mov
repnz
mov
mov
es
or
jbe
or
into
cmp
push
dec
lods
fs
mov
ja
enter
inc
sub
adc
fnsave
pop
push
mov
cmp
xchg
ficomp
and
and
mov
bound
and
aam
jno
lock
ja
addr16
stos
fdiv
sti
aad
jne
xor
xchg
stos
xchg
adc
std
mov
xchg
or
loop
sbb
call
pop
push
retf
xchg
loope
lock
imul
mov
push
lahf
xor
push
jmp
mov
pop
out
pop
cmp
out
nop
cmp
xlat
sbb
or
jl
out
int3
(bad)
mov
in
(bad)
sub
inc
mov
mov
lods
push
push
mov
xchg
movs
icebp
and
ficom
sbb
fadd
lock
sbb
mov
push
je
xchg
fnstsw
and
leave
neg
adc
xchg
rcr
clc
jne
daa
dec
aam
push
imul
shl
div
pop
and
dec
sbb
mov
sbb
xchg
xchg
add
popf
and
xchg
mov
pop
dec
out
ret
sbb
or
and
test
test
inc
call
cmps
mov
gs
daa
into
mov
imul
pop
call
jmp
mov
icebp
inc
and
(bad)
push
mov
ret
sub
dec
lea
icebp
gs
adc
ret
push
or
mov
mov
rcr
mov
retf
pop
or
cmp
in
movhps
fbld
fcmove
cmp
mov
scas
lahf
pop
shr
add
sub
add
ds
jg
cmp
ret
leave
je
ins
jae
xor
je
aam
call
push
xor
and
adc
repz
and
inc
pop
xlat
les
jl
dec
test
cli
cmp
sti
(bad)
imul
mov
outs
adc
lahf
imul
xor
xor
cmp
inc
les
bound
lods
callw
ins
sar
popa
sbb
xor
hlt
(bad)
nop
mov
jg
(bad)
mov
imul
mov
sub
jp
xor
js
mov
mov
imul
jmp
les
rol
add
mov
or
hlt
rcr
cli
(bad)
retf
call
in
or
jns
dec
adc
cmp
pop
nop
xlat
jo
dec
mov
arpl
(bad)
cwde
mov
or
xlat
dec
shl
xlat
dec
xchg
inc
lea
mov
ds
inc
dec
adc
ret
arpl
pop
adc
and
fstp
stos
sbb
inc
jg
repz
mov
clc
dec
add
or
xchg
test
dec
imul
xchg
(bad)
xcrypt-ofb
cmps
out
and
jo
ds
jle
int3
(bad)
sub
stc
lock
ds
sub
popa
movs
call
iret
repnz
fistp
mov
and
pop
arpl
xchg
outs
cmp
fisttp
inc
sbb
stos
lods
inc
mov
(bad)
sub
sub
and
inc
dec
cmovae
sub
push
or
cmc
dec
cmp
xchg
mov
out
jb
inc
xor
and
jecxz
out
(bad)
add
cs
mov
out
shr
loope
dec
aam
int3
pop
shr
mov
imul
(bad)
mov
dec
mov
pop
pusha
arpl
push
cmc
push
imul
je
cwde
mov
repz
xchg
scas
dec
lahf
repz
or
inc
bound
ficom
(bad)
mov
lea
call
repnz
ret
jns
jmp
dec
pop
sub
mov
dec
push
mov
retf
sbb
jmp
mov
xchg
loop
dec
and
and
stc
retf
popa
gs
pop
movs
ror
cmp
sti
sahf
(bad)
outs
iret
pop
xor
dec
mov
cmp
in
xor
jbe
jge
sbb
sub
jo
inc
out
jg
fistp
out
ss
xor
out
jp
jae
xor
pop
iret
repnz
adc
rcr
sub
sbb
sub
call
(bad)
adc
mov
not
inc
fwait
les
rcr
inc
pop
stos
cwde
push
sbb
inc
adc
push
add
add
into
mov
jp
cld
(bad)
loop
arpl
frstor
pop
scas
out
cmps
mov
or
jae
add
retf
stc
push
mov
add
cmp
push
sbb
stos
sub
push
and
jno
dec
pushf
int
je
and
or
push
add
xchg
(bad)
(bad)
(bad)
and
xor
jae
clc
pop
(bad)
jmp
out
lahf
in
stc
add
cmps
add
jne
and
push
mov
aad
ret
mov
pusha
pushf
and
mov
popf
jno
xor
ja
cmp
(bad)
sub
or
mov
adc
sbb
inc
pop
(bad)
lea
ja
and
(bad)
cld
in
test
cmp
loop
push
clc
jg
and
mov
sbb
and
mov
movs
(bad)
(bad)
or
mov
sub
pop
aas
jmp
gs
repnz
(bad)
xchg
adc
in
push
mov
std
sub
inc
jno
jge
sub
jmp
call
out
mov
cmps
mov
push
repnz
sub
cwde
icebp
pushf
push
jae
cmp
arpl
pop
nop
bound
hlt
add
std
add
vhaddps
jle
fldcw
in
jmp
(bad)
jbe
adc
adc
jbe
or
xor
push
ins
and
jb
aaa
retf
push
arpl
les
dec
imul
and
mov
cmp
call
fs
stos
fisttp
inc
jl
mov
ins
retf
stos
pop
cmc
addr16
in
jl
xchg
or
xchg
les
(bad)
fild
repz
(bad)
in
(bad)
int
sahf
stos
sbb
cs
push
sar
mov
fidiv
lahf
jle
ja
jno
pushf
int
(bad)
mov
jecxz
(bad)
out
inc
fs
jne
data16
dec
fdiv
ds
sbb
mov
and
push
scas
and
repnz
mov
jne
inc
out
daa
clc
inc
sbb
push
jo
inc
(bad)
inc
outs
jl
pop
jg
bound
mov
cmp
ds
jns
pop
outs
sbb
out
(bad)
mov
iret
mov
push
mov
fist
jge
lock
mov
fnstsw
lock
cmp
in
sub
div
inc
cli
jmp
pminsw
sti
das
jecxz
lock
mov
inc
(bad)
jbe
lods
mov
das
cli
cmc
cmp
sub
fld
repnz
pusha
push
xchg
loopne
mov
cs
(bad)
stos
inc
enter
clc
xchg
pop
shl
jns
ss
add
rcl
jmp
cmp
mov
popa
(bad)
jae
xor
mov
cli
sub
je
cs
std
ja
jl
out
xlat
jp
cmp
fwait
jno
mov
scas
adc
pop
aaa
sbb
jnp
cli
pop
sub
pop
fisub
out
icebp
loopne
jo
cmp
sbb
(bad)
push
int3
adc
inc
inc
mov
xchg
adc
shl
push
cmp
lods
int
fistp
mov
fcom
retf
push
xor
in
fs
xchg
(bad)
mov
jb
(bad)
cmps
in
(bad)
jae
out
aas
mov
in
loop
xchg
imul
pop
mov
dec
xchg
cwde
imul
fbld
mov
pop
stc
ds
call
fsub
jecxz
dec
ja
mov
repnz
mov
mov
icebp
mov
mov
push
outs
shl
je
ins
ds
jae
fnstsw
push
xchg
shl
mov
mov
(bad)
push
aas
cmps
in
in
jno
div
ins
push
fnstsw
jmp
jmp
(bad)
cmc
pop
(bad)
stc
out
and
inc
adc
cmp
ret
xchg
mov
xor
pop
lahf
mov
push
push
retf
scas
lods
out
out
loopne
hlt
pusha
jecxz
test
sbb
adc
jnp
les
imul
das
fidiv
(bad)
sti
ret
mov
mov
sti
pop
outs
outs
jle
(bad)
cld
in
cmps
ret
mov
retf
pop
out
inc
jb
or
mov
xchg
mov
jns
sti
or
mov
rcr
fxch
adc
addr16
ins
and
in
les
daa
lock
mov
and
jmp
dec
call
jne
inc
xchg
out
je
inc
test
ret
jns
les
cld
dec
cmp
jge
jbe
(bad)
push
mov
mov
bound
rcl
or
test
sbb
mul
add
sub
(bad)
sbb
mov
or
sub
es
enter
cmp
xchg
or
std
mov
dec
pop
jmp
retf
stos
jne
cmp
sbb
add
adc
fidivr
cmp
push
(bad)
cld
fidiv
out
or
pop
sub
aaa
gs
retf
cmp
outs
test
add
and
icebp
pop
stos
ins
inc
jg
mov
retf
gs
jge
mov
pop
xchg
mov
mov
addr16
(bad)
dec
js
cwde
js
pusha
jae
pusha
not
ficomp
stc
popa
or
jo
mov
imul
mov
fnstsw
retf
addr16
add
or
aaa
cdq
(bad)
sbb
inc
test
pusha
cld
xchg
js
pop
data16
loop
add
call
pop
loop
push
gs
test
sub
loopne
add
enter
pop
aad
pop
adc
ficomp
neg
stc
out
stos
scas
fisub
sbb
jns
push
pop
scas
mov
jmp
scas
fcmove
aam
in
in
cld
cmp
test
sub
bound
outs
ins
popf
lods
hlt
pop
mov
daa
sbb
and
cmp
(bad)
out
aad
push
dec
push
js
cmp
je
stc
jno
cmp
and
adc
mov
xor
in
inc
push
and
pop
leave
adc
inc
fidivr
jg
stc
xlat
loop
mov
fwait
or
in
retf
mov
xor
ret
fnstcw
inc
out
or
shl
jo
scas
in
(bad)
xchg
mov
mov
push
loope
out
mov
fstp
and
out
or
xor
ret
fcom
dec
jp
sub
dec
out
xor
sub
cmp
sbb
mov
mov
sbb
repz
lods
out
xor
cmp
out
leave
add
(bad)
call
leave
(bad)
(bad)
mov
ficom
mov
shr
fbstp
fcom
fadd
push
andnps
jecxz
fstp
push
and
mov
test
ret
push
pop
xor
ins
outs
adc
mov
aam
adc
mov
in
add
out
vmread
sbb
inc
ds
test
icebp
adc
shr
mov
fdiv
jl
mov
mov
fcomip
and
adc
ins
out
aaa
cmp
scas
sar
rsm
xchg
jge
jecxz
fnstenv
pop
pop
ins
(bad)
xchg
pop
test
bnd
shr
sub
ja
ja
add
sub
mov
daa
fdiv
lods
pop
or
stos
inc
and
mov
pop
pushf
sub
(bad)
cli
into
(bad)
stos
jge
mov
lahf
xchg
xchg
cmp
or
push
xor
adc
push
or
stos
sar
enter
clc
mov
xor
(bad)
stc
int
nop
in
lds
xchg
(bad)
sub
sets
sub
mov
mov
es
bound
cli
xor
mov
cmc
inc
xchg
les
loope
xor
inc
popf
retf
lahf
std
jno
dec
(bad)
xor
add
mov
xlat
pop
je
fmul
sbb
pop
call
jbe
outs
inc
fiadd
ret
cmc
cld
cmp
fwait
adc
sbb
leave
ret
mov
mov
lds
stos
pop
and
daa
xchg
(bad)
jecxz
lods
add
ror
ins
push
(bad)
leave
and
xchg
call
lahf
sbb
(bad)
rol
outs
outs
retf
xchg
scas
pop
sahf
cmp
sbb
mov
(bad)
daa
pop
pop
or
retf
loop
aaa
test
xor
test
(bad)
xchg
in
out
outs
push
(bad)
mov
mov
clc
ffreep
rol
cmp
movs
mov
repnz
adc
jp
enter
jmp
adc
jno
dec
push
daa
mov
not
jne
out
sbb
sub
add
lahf
pop
sbb
ret
and
fadd
jecxz
adc
fs
cs
mov
call
repz
icebp
enter
xlat
ret
sbb
ret
clc
repz
popf
fs
(bad)
in
jecxz
retf
jmp
mov
mov
sbb
sbb
std
mov
sub
mov
cmps
push
or
cli
int
jno
es
dec
cdq
pop
and
cmovns
sub
lods
ins
inc
fild
jl
aad
jae
das
jp
push
push
cs
sbb
test
out
idiv
xchg
mov
pmaddwd
mov
ins
add
jnp
sbb
inc
jle
ret
cmp
ins
dec
(bad)
aas
das
sbb
mov
cdq
mov
leave
add
xchg
and
xchg
fcmovnu
(bad)
push
mov
push
rol
sahf
mov
xlat
lds
adc
retf
fisttp
push
jge
xchg
lods
dec
(bad)
(bad)
loopne
arpl
add
jge
(bad)
int3
or
or
imul
dec
push
jno
lock
jns
or
int3
js
adc
neg
sti
in
cwde
ins
cmps
in
sub
loope
outs
aam
mov
jl
jo
loope
sti
push
xchg
std
mov
dec
int
das
sbb
pop
sbb
lods
cs
pop
in
mov
xchg
pop
loopne
inc
adc
jno
jle
adc
mov
push
stc
es
dec
imul
pusha
les
mov
ss
sub
sbb
cli
cmp
mov
push
jecxz
repnz
mov
retf
shl
mov
(bad)
ins
pop
xor
cmc
dec
mov
jb
pop
into
jmp
fsubr
sub
pop
push
nop
adc
cld
dec
xchg
inc
scas
test
fistp
daa
mov
daa
lahf
aaa
or
loop
jge
lock
xchg
in
shl
push
cmps
stc
shl
push
xchg
std
pop
frstor
pop
clc
jb
or
pop
adc
ins
movs
mov
ja
retf
rcl
(bad)
jmp
pop
sbb
mov
mov
enter
test
push
xor
mov
xchg
lds
icebp
test
cmp
inc
fst
sub
int
(bad)
xchg
(bad)
cmc
add
mov
fst
in
mov
ins
jno
fmul
sahf
fs
cmps
and
sbb
cld
dec
jl
fld
clc
repnz
sbb
lods
jb
dec
cmp
push
jmp
push
cmp
sbb
js
int
and
clc
dec
mov
out
mov
movs
dec
in
bound
xlat
sub
dec
ins
call
xor
lds
mov
adc
jl
icebp
(bad)
(bad)
push
mov
call
mov
ins
arpl
sub
dec
inc
adc
jnp
mov
adc
(bad)
(bad)
fdiv
jnp
mov
lds
mov
adc
ror
out
cdq
cmp
mov
outs
stc
jg
dec
cmp
into
popf
cdq
cmp
jns
adc
mov
push
icebp
jecxz
(bad)
leave
(bad)
fist
mov
fbstp
cmc
call
es
jne
mov
mov
and
lahf
sbb
mov
lahf
(bad)
ret
addr16
ret
fucomip
push
sbb
test
scas
xlat
cdq
jno
cmp
movs
lds
xchg
jmp
jno
movs
les
xchg
adc
test
(bad)
cs
cmp
fisubr
jb
dec
mov
jnp
cli
jnp
mov
outs
shl
mov
dec
adc
outs
into
jmp
xchg
test
(bad)
fcom
cli
push
loopne
and
cmp
(bad)
dec
pop
dec
(bad)
add
pop
into
dec
ror
ret
in
int3
add
add
out
mov
loope
jnp
pop
add
das
ins
aaa
loopne
fcomi
sub
fist
dec
jg
repz
hlt
jecxz
sbb
xor
rcr
lock
js
xchg
push
aas
cs
daa
(bad)
int3
fs
ret
lods
or
pop
sbb
cmp
(bad)
pop
and
mov
sti
sbb
xor
push
lods
push
enter
inc
pop
adc
sub
xor
je
je
mov
add
movs
js
jmp
clc
ror
cmp
push
gs
aas
mov
xor
jle
fmul
shl
mov
push
inc
mov
loope
mov
hlt
add
inc
outs
(bad)
xlat
je
mov
stos
mov
out
stos
lock
mov
xor
or
pop
shl
cmp
xlat
rol
popf
jp
jmp
inc
lods
retf
stos
loope
push
push
in
out
pop
jecxz
into
sub
inc
mov
outs
shl
pop
(bad)
dec
call
mov
lock
movs
repz
push
test
movs
mov
aas
ins
jecxz
inc
cli
mov
jmp
aaa
retf
fdivr
rol
pop
pop
into
cmp
push
shl
cs
sbb
mov
ret
cmp
or
test
pop
ja
lock
aad
repz
test
stc
cmps
outs
sub
cld
neg
test
fstp
out
loopne
sar
or
xchg
imul
pop
loopne
loope
pop
int3
shl
jns
and
cwde
movs
jnp
movs
(bad)
cmps
or
dec
ret
(bad)
dec
test
out
ins
jmp
das
jle
xchg
jae
(bad)
in
cmc
pusha
sbb
repz
shl
hlt
ins
push
movs
shl
(bad)
jne
fisttp
pop
aaa
pushf
jne
xchg
push
outs
lahf
inc
hlt
inc
iret
rcr
pop
xchg
mov
inc
sub
cmp
loopne
ret
adc
addr16
les
jmp
cmp
fild
das
sbb
push
iret
pop
fstp
pop
push
ins
int
pop
les
stc
imul
repz
or
cmc
and
cmp
shl
imul
mov
jp
cli
(bad)
push
iret
retf
fnsave
pop
ds
out
imul
jns
lea
jnp
inc
not
cmp
movs
xchg
dec
inc
mov
xchg
cli
add
clc
push
test
jb
mov
movs
add
psubusb
test
inc
fucom
pop
loopne
pop
icebp
pop
sub
sbb
out
fstp
mov
popf
out
jb
out
stc
xor
mov
jmp
fs
sbb
stc
jns
scas
out
loope
cmp
jle
dec
(bad)
ror
aam
mov
hlt
clc
je
xchg
movs
jns
sub
add
shl
fs
xor
jno
gs
iret
gs
ins
pusha
jo
add
pop
xor
aas
out
(bad)
pop
adc
stos
sti
cld
shl
pop
pop
gs
add
jo
sub
sbb
cmp
ja
mov
lahf
out
jp
ins
push
mov
push
fcmovb
pop
pop
inc
cmp
mov
mov
fmul
jnp
ret
(bad)
out
push
mov
xchg
xchg
sbb
pop
sbb
rcl
(bad)
mov
adc
jmp
add
cdq
dec
push
pop
lods
popfw
jmp
cmp
shr
pop
add
xchg
jecxz
inc
in
cmp
cs
mov
lds
push
add
add
adc
fsub
jns
inc
pop
dec
in
rcr
and
mov
jo
dec
ins
inc
out
push
or
aas
call
fimul
jge
jmp
push
stos
loope
dec
xchg
imul
push
loope
fst
push
cmp
xchg
jnp
jo
dec
jne
mul
mov
or
cld
int
xchg
scas
or
fs
or
sar
mov
js
sahf
pop
inc
cmp
xlat
inc
daa
jnp
push
jnp
mov
add
inc
and
jo
loope
jnp
adc
jle
(bad)
xor
fnsave
int
pop
push
sbb
(bad)
push
test
cdq
jae
jmp
outs
rcr
movs
loopne
ja
jecxz
pop
xchg
lock
mov
scas
dec
ret
imul
or
add
push
xor
jnp
pushf
adc
push
aam
cmp
test
cmp
sbb
mov
lods
push
scas
and
ja
scas
je
xchg
loop
sbb
mov
mov
jp
lods
xor
jmp
lock
movs
fbld
jg
enter
rcr
shl
fcomp
inc
sbb
dec
ins
and
pop
push
outs
mov
jp
lods
xlat
ds
mov
add
sti
icebp
outs
pop
xlat
fisubr
pop
retf
xchg
jno
jecxz
sub
cs
mov
fucomi
ins
push
fnstsw
outs
iret
gs
add
or
icebp
pushf
es
inc
cmp
sbb
aam
loop
jo
xor
add
cli
in
push
adc
sub
pop
xor
mov
mov
fimul
sub
mov
(bad)
cmp
(bad)
(bad)
jmp
popa
rcr
(bad)
jecxz
and
and
iret
jae
adc
cmp
je
adc
mov
xchg
(bad)
sbb
inc
clc
sar
mov
sti
mov
inc
aam
pop
aas
mov
cmp
into
mov
fadd
pushf
in
cmp
dec
mov
dec
jne
cmp
icebp
rol
rcl
arpl
adc
jge
ss
int3
pop
cmp
(bad)
in
cmp
fild
mov
call
(bad)
jae
xlat
jmp
sbb
out
adc
int
xor
shl
jo
fdiv
mov
aad
je
mov
(bad)
xchg
sub
sbb
pop
or
jl
shl
push
sub
inc
jle
fnstcw
fucompp
jg
push
iret
div
mov
aas
ja
jo
ds
mov
sbb
enter
mov
inc
jne
sbb
and
adc
out
and
ret
jne
(bad)
imul
fist
daa
mov
xchg
jg
(bad)
vshufps
or
pop
ins
push
xor
arpl
sbb
and
jmp
sbb
jecxz
or
dec
jb
(bad)
mov
or
cmp
rcl
jbe
add
stc
or
repz
add
std
inc
jecxz
jmp
repnz
mov
add
neg
sbb
inc
jp
xchg
mov
ja
out
lahf
shl
test
cmps
cmp
xchg
mov
push
clc
xor
ins
cmp
mov
out
stc
add
jecxz
dec
add
push
call
out
sbb
jecxz
lahf
sub
imul
jge
adc
call
mov
dec
or
sbb
add
mov
jmp
mov
push
jg
imul
dec
dec
hlt
xor
jg
jmp
(bad)
int3
cwde
data16
jnp
out
popf
jmp
mov
mov
div
sbb
mov
lea
xchg
pop
sub
aas
iret
mov
hlt
scas
add
jg
int
mov
inc
jle
out
sbb
sti
jecxz
test
pop
pop
xor
in
movs
test
je
mov
sahf
sub
and
xchg
xchg
xor
push
add
test
sub
jmp
ror
subps
mov
(bad)
out
jo
cmp
jle
inc
ja
stc
fnstsw
jb
jbe
retf
cmp
cmp
adc
fstp
cmp
xor
gs
cdq
fbstp
aas
cmp
pop
fcmovnb
cld
out
pop
cmp
sbb
out
lahf
aas
loopne
out
lea
mov
sbb
jmp
mov
and
pop
inc
cli
call
pusha
pop
jb
add
xchg
pop
repnz
cdq
ins
mov
das
push
xor
call
cmc
(bad)
adc
mov
pop
jge
jecxz
inc
outs
push
xchg
sub
pop
jl
movs
fucomip
sar
out
dec
int3
pop
jmp
lods
mov
lea
popf
lahf
sbb
fidiv
fs
fs
out
sbb
xor
cmp
outs
in
jb
xchg
dec
gs
mov
dec
pusha
xlat
dec
jl
add
(bad)
fucom
jle
(bad)
inc
inc
inc
loopne
jno
lea
icebp
inc
sahf
dec
in
scas
gs
pushf
into
ret
scas
adc
(bad)
std
outs
je
add
cwde
pop
movs
mov
dec
in
out
jb
ja
mov
dec
jns
dec
jbe
fimul
fincstp
mov
jl
(bad)
xchg
dec
jecxz
mov
jbe
mov
retf
inc
mov
push
mov
mov
push
daa
push
dec
jl
jno
jmp
out
jg
push
fdiv
xchg
push
test
jns
call
push
dec
push
loope
loopne
adc
cmp
mov
adc
das
sahf
loop
xor
inc
adc
and
pop
mov
xchg
call
mov
lahf
outs
add
in
inc
jle
cmc
inc
mov
add
test
push
pop
mov
lahf
mov
popf
test
test
test
(bad)
sar
sti
mov
sbb
inc
cld
fcomp
push
inc
mov
(bad)
adc
cld
fbstp
cmp
push
add
ret
xchg
(bad)
cmp
jge
adc
add
add
pop
jno
div
jo
aam
loope
retf
dec
sbb
pop
push
mov
jae
ret
add
xchg
stos
mov
mov
ss
fistp
loope
dec
pop
ss
pusha
div
xchg
pop
sbb
test
mov
pop
retf
pop
fcmovnu
retf
aad
inc
aad
push
jnp
cmp
inc
and
cld
ret
adc
xchg
sbb
or
and
jae
cmp
adc
add
fisubr
div
dec
jno
mov
hlt
leave
(bad)
pop
loopne
loop
inc
jmp
js
pop
ret
cdq
xor
shl
cmp
xchg
xchg
cmps
xchg
xor
mov
iret
pop
test
push
in
xor
add
xor
fldenv
or
repz
outs
mov
lock
popw
sahf
pop
and
pop
lahf
clc
xchg
dec
std
mov
(bad)
rol
mov
jmp
loop
xor
nop
push
popf
sbb
dec
test
in
pop
mov
scas
mov
outs
xor
pop
mov
mov
jl
movs
ds
dec
hlt
or
ror
inc
pop
retf
inc
call
hlt
call
into
dec
mov
lods
test
mov
ret
out
test
push
and
pop
imul
inc
ror
lods
xor
add
sub
mov
mov
pop
mov
fcmovb
mov
in
xor
fimul
push
adc
repz
loope
mov
loopne
mov
mov
and
mov
ss
xchg
cmp
push
out
pop
mov
push
icebp
fstp
fwait
outs
or
sbb
pop
xchg
clc
outs
dec
jge
popf
out
xchg
sbb
mov
sahf
pop
(bad)
xchg
sub
(bad)
add
in
push
fdivr
add
lds
popa
or
fidivr
imul
dec
push
lahf
xor
sti
pop
pop
and
or
ror
cmp
cmp
dec
dec
btr
retf
stc
(bad)
xlat
jnp
nop
bound
clc
(bad)
data16
xor
dec
test
or
inc
adc
jg
mov
or
outs
sub
xor
js
cmps
ret
and
xchg
mov
cmovae
inc
sbb
cmp
push
jnp
and
and
pop
pop
and
data16
mov
test
sbb
sbb
stos
mov
or
sub
test
dec
lahf
pop
bound
add
pop
(bad)
iret
ficom
sti
mov
lahf
xchg
addr16
fidivr
mov
cmps
adc
in
pop
mov
not
mov
not
(bad)
push
cmc
cmp
aam
sbb
lock
jbe
fadd
inc
mov
(bad)
in
sub
cld
cmp
(bad)
rol
mov
ja
sbb
jg
aas
dec
hlt
adc
(bad)
icebp
call
sar
xor
and
pop
xor
std
pop
xlat
(bad)
adc
add
(bad)
loop
sbb
sub
jae
add
and
jbe
xchg
add
jl
enter
int
not
icebp
dec
or
dec
aam
cli
cmc
mov
inc
sti
push
cmc
add
xlat
imul
pop
js
jg
xchg
jge
test
jmp
jmp
jecxz
jle
cld
mov
add
sbb
and
mov
sub
(bad)
idiv
and
cmps
mov
cld
mov
fcmovb
addr16
cwde
fs
jno
(bad)
ds
fs
mov
outs
sub
fcom
imul
push
or
outs
scas
bound
mov
push
loopne
pop
loop
push
aam
mov
dec
fsubr
pop
fisubr
sbb
mov
imul
xor
xor
xor
stc
jp
(bad)
fild
add
cmp
push
cmc
aad
xor
(bad)
sbb
das
and
inc
sbb
aaa
add
cld
out
cmc
and
sub
leave
and
xchg
stos
mov
jb
icebp
mov
inc
lock
jmp
(bad)
mov
sar
and
mov
cmp
and
or
push
mov
retf
sbb
fldenv
(bad)
ror
and
lea
cmp
mov
pop
push
out
out
in
std
cwde
cmp
call
outs
jmp
pop
fwait
and
jmp
mov
scas
outs
pop
mov
ror
jae
outs
pop
(bad)
fst
mov
ins
mov
mov
jg
das
add
sub
js
lods
push
mov
in
inc
cmp
push
in
pushf
test
fcomip
jo
stos
test
sbb
out
inc
pop
cmp
sub
in
not
and
aas
in
or
arpl
pop
cmp
jl
fwait
or
push
jne
pop
mov
push
xchg
cmp
sub
daa
test
pop
mov
jmp
in
les
xchg
mov
jne
addr16
rcl
jl
xchg
mov
mov
mov
mov
in
clc
mov
rcl
jo
push
mov
mov
and
cmp
jb
inc
sub
push
leave
(bad)
rcr
inc
mov
cmps
daa
mov
repz
sub
cmps
in
pop
push
jl
jl
push
xchg
cmp
push
addr16
jmp
rcl
sbb
setb
sbb
clc
or
pop
jl
rcl
add
cmp
(bad)
pop
outs
imul
mov
call
cmps
jl
adc
pop
loop
repz
lock
mov
movs
sbb
shl
inc
fwait
push
mov
mov
jmp
(bad)
mov
mov
mov
(bad)
mov
dec
xchg
xor
repnz
mov
outs
ret
call
sti
inc
pop
dec
or
jo
adc
dec
(bad)
aaa
dec
out
das
out
xor
iret
test
(bad)
std
adc
xor
mov
dec
es
sti
cs
icebp
in
mov
mov
scas
cmp
cmp
stos
daa
xlat
test
in
sahf
mov
(bad)
mov
mov
mov
xchg
mov
outs
and
and
cld
lods
inc
push
out
ja
mov
(bad)
mov
lods
inc
fild
mov
jbe
push
movs
push
lds
and
lods
xor
mov
xor
pop
repz
out
mov
pop
add
mov
push
lock
idiv
jae
dec
call
cld
icebp
aad
jne
mov
pop
add
dec
inc
mov
out
js
jb
sub
jae
out
inc
cmp
mov
mov
add
mov
adc
mov
mov
xchg
std
xchg
xchg
fnstcw
aaa
mov
addr16
sub
sar
(bad)
shr
push
xor
cmps
xor
cmc
(bad)
jnp
retf
sti
and
mov
sbb
jno
test
retf
sbb
push
mov
icebp
icebp
int3
push
fdivr
push
and
jbe
dec
in
bound
mov
xor
xchg
cmp
cmp
cmp
jbe
fist
dec
(bad)
jbe
jl
pop
ds
sub
movs
or
in
add
mov
push
adc
mov
dec
test
sbb
popa
pop
lods
push
mov
rol
push
pop
pop
xor
repz
pop
jo
jp
jbe
sub
push
xor
inc
fwait
test
add
push
loop
sub
pusha
cmp
inc
or
(bad)
jns
test
int
mov
pop
das
push
les
jmp
xlat
xchg
dec
fist
pop
ja
push
and
sbb
fstp
mov
rcr
jmp
clc
jb
fsub
jmp
(bad)
push
les
or
mov
into
mov
adc
adc
lea
mov
sti
aam
sti
cmp
ins
loope
push
sahf
mov
mov
push
mov
call
fstp
fidiv
addr16
neg
mov
out
pop
mov
pop
xchg
and
lds
cwde
sahf
and
sahf
(bad)
mov
jno
enter
bound
inc
icebp
ficom
jmp
scas
loopne
jb
mov
aas
cmc
(bad)
ficomp
shl
mov
sti
jns
xchg
in
rcl
icebp
dec
jecxz
xchg
cwde
rol
outs
mov
xor
sti
cmp
mov
bound
mov
aaa
lds
les
ret
iret
sti
xchg
ins
jmp
push
imul
aaa
dec
clc
in
inc
add
dec
mov
jo
add
cdq
les
jecxz
push
jl
adc
push
jnp
mov
dec
les
mov
mov
xchg
test
mov
arpl
ds
call
dec
jp
lds
push
scas
xchg
lods
push
ins
cmc
pop
std
sbb
aaa
adc
dec
in
into
arpl
add
mov
mov
ss
push
pmulhuw
push
mov
mov
cmp
xor
xchg
std
in
add
int3
int
inc
push
(bad)
xchg
call
jmp
xor
pop
sub
pop
sar
outs
cmp
icebp
and
and
mul
mov
dec
cmps
xor
imul
fstp
mov
xor
or
pop
pop
pop
repz
jp
data16
jae
and
mov
add
jbe
mov
push
inc
pop
cmp
dec
xor
lahf
and
sbb
cmp
movs
pop
movs
mov
jbe
jg
mov
mov
dec
(bad)
mov
jnp
fnstsw
jg
clc
out
shr
sbb
outs
cli
repnz
sub
adc
aaa
mov
xor
leave
push
fsub
mov
dec
retf
adc
sbb
lods
dec
cli
pop
icebp
add
lods
mov
sar
loope
cmps
aaa
sbb
xor
and
arpl
(bad)
or
repnz
stc
icebp
(bad)
(bad)
push
mov
and
sbb
clc
xchg
stos
jmp
inc
jg
fild
call
inc
cld
iret
inc
pop
les
lods
sub
mul
dec
xchg
arpl
and
add
jecxz
mov
dec
inc
icebp
scas
push
push
xchg
add
sar
ins
imul
or
inc
sbb
popf
out
sbb
mov
shl
sbb
mov
pop
nop
xor
pop
pusha
enter
xchg
mov
imul
mov
mov
ds
ja
mov
jbe
pop
popf
pop
stos
gs
adc
dec
pusha
clc
sbb
pop
test
adc
mov
cmp
imul
and
sbb
mov
cld
mov
(bad)
sbb
in
(bad)
in
sub
mov
movs
mov
int3
ins
or
mov
(bad)
loopne
(bad)
popf
test
outs
jle
mov
gs
mov
dec
(bad)
cld
inc
lahf
pop
aaa
(bad)
cli
mov
jnp
imul
outs
in
mov
cmp
icebp
out
mov
xchg
adc
mov
loope
(bad)
xlat
jg
or
ror
lods
pop
mov
sub
mov
push
dec
mov
pop
stos
retf
popa
clc
add
adc
cmp
mov
or
es
cmp
dec
pushf
adc
(bad)
fbstp
sub
pop
and
inc
(bad)
jmp
mov
push
pop
stos
daa
aad
mov
adc
pop
dec
mov
arpl
or
retf
mov
lea
bound
jmp
dec
adc
jl
add
(bad)
and
jl
add
mov
ret
fst
arpl
xchg
jne
dec
aas
push
iret
imul
inc
mov
sahf
cmp
mov
test
in
pop
test
div
jo
test
mov
arpl
loop
fcom
lea
mov
pop
sbb
jbe
dec
retf
lods
pop
leave
fidiv
jg
xlat
cld
xchg
pusha
(bad)
jmp
clc
inc
sub
daa
es
jecxz
cmp
out
test
cdq
addr16
imul
add
ins
push
sub
sar
fdiv
pop
add
mov
xchg
cmp
mov
mov
and
frstor
mov
xchg
mov
out
ja
mov
fwait
mov
jmp
enter
loopne
mov
mov
jp
ret
or
and
call
js
imul
jge
neg
test
jmp
fdivr
sbb
ror
das
retf
imul
in
cwde
outs
cmp
pop
lds
fisubr
or
les
sbb
lahf
push
push
pop
inc
sahf
fs
jecxz
or
scas
mov
push
out
jmp
inc
push
pushf
int
fdiv
ret
cmc
dec
sub
mov
mov
in
ins
arpl
xchg
fdivr
jnp
mov
jae
int
inc
movs
mov
cvtps2pi
xchg
xchg
sub
(bad)
cdq
imul
clc
push
scas
out
pop
out
pop
mov
jp
mov
xchg
sub
rcl
aam
sti
or
sub
clc
idiv
sub
jno
mov
(bad)
arpl
xor
cmp
jle
add
jmp
xchg
ret
push
xor
mov
sbb
mov
jecxz
mov
fistp
neg
xor
stos
ins
popf
mov
xchg
xchg
(bad)
or
cdq
fwait
or
pushf
and
or
test
and
movs
jmp
sbb
ret
rcl
movs
fild
std
push
pop
mov
enter
mov
add
getsec
ret
or
push
(bad)
sub
pop
daa
in
sub
adc
(bad)
loope
mov
xor
(bad)
inc
in
inc
fcmovnbe
and
std
and
mov
(bad)
stos
outs
mov
fild
leave
pop
add
mov
out
es
mov
add
cli
sub
fild
dec
loop
and
cmc
fst
dec
pop
sub
iret
fld
js
fcomp
xor
dec
in
mov
adc
outs
rcl
rcl
and
hlt
sbb
cvtdq2ps
sub
outs
mov
in
js
xor
jle
push
and
in
ins
mov
or
push
ds
jb
aad
mov
or
sbb
mov
pop
lahf
inc
mov
lahf
push
(bad)
lds
test
aas
outs
mov
adc
(bad)
dec
mov
mov
loopne
aaa
pop
lock
sub
pop
pop
scas
and
sub
push
in
fldcw
pop
sti
mov
jge
adc
pop
xor
into
scas
shl
lods
xor
(bad)
mov
add
test
out
adc
rol
jecxz
gs
js
sbb
mov
inc
sbb
idiv
mov
mul
mov
jo
fwait
xchg
mov
pop
mov
pop
int
or
ja
retf
ins
cmps
push
push
pushf
or
jns
pusha
dec
sti
shl
jle
dec
mov
dec
add
push
jnp
(bad)
or
test
add
ins
clc
pusha
xchg
call
cld
xchg
shl
aam
jl
dec
push
jmp
test
js
sbb
retf
ds
mov
stc
xchg
stc
and
das
add
jbe
pop
lods
push
mov
fucomp
mov
lods
fbld
dec
loopne
cld
neg
push
in
inc
mov
pop
pextrw
pop
aas
pextrw
aaa
dec
inc
lock
mov
jo
loope
pop
fsubr
and
lock
mov
loope
sbb
add
aad
(bad)
in
and
fimul
adc
add
in
mov
outs
lock
and
ss
add
(bad)
jns
fnstsw
and
jbe
cdq
add
popa
pop
mov
lea
and
iret
xchg
jb
inc
sbb
fild
gs
pop
or
fstp
ja
jl
scas
ins
lods
out
mov
in
inc
lds
fwait
mov
mov
mov
test
jae
mov
lods
call
mov
in
push
scas
int3
cmc
xor
mov
ficomp
hlt
(bad)
dec
(bad)
sub
sub
xor
call
inc
dec
and
loopne
movs
xor
in
ret
lea
xchg
pop
inc
(bad)
shl
(bad)
adc
stos
jno
mov
xchg
push
movsx
leave
sti
in
jmp
inc
fisub
lods
cmp
xchg
sub
(bad)
(bad)
ds
dec
add
loope
lea
sbb
lods
dec
jbe
data16
lds
imul
mov
and
jbe
xchg
in
sahf
sub
ins
stc
addr16
inc
ficomp
adc
outs
in
xchg
das
sbb
ss
fs
into
dec
ins
xchg
inc
add
loope
pushf
mov
push
out
ja
out
pop
out
sti
outs
aam
retf
bound
sbb
(bad)
jecxz
mov
xchg
sub
jmp
pop
fdivr
mov
(bad)
gs
inc
call
jbe
xor
retf
jae
mov
pop
pop
cs
and
mov
(bad)
push
jl
stos
pop
in
loope
test
and
repz
jge
shr
and
jnp
and
std
stos
std
push
sub
gs
emms
aaa
xlat
mov
call
mov
fist
fdivr
(bad)
in
mov
int
fst
fcmove
push
outs
sub
cmp
rcr
les
adc
leave
in
iret
sbb
mov
push
mov
xchg
pop
scas
jp
pop
ret
dec
xchg
mov
repz
mov
int3
imul
out
sbb
scas
or
sbb
scas
xor
(bad)
pop
(bad)
cmp
xchg
cwde
cli
jecxz
mov
pop
adc
out
jmp
(bad)
call
mov
(bad)
aas
(bad)
pop
scas
rol
scas
pop
jmp
cwde
lods
int
std
add
or
pop
das
(bad)
cli
lds
cli
call
lods
mov
fidivr
push
frstor
cmps
sbb
push
retf
xchg
jecxz
lods
mov
xor
pop
repnz
pushf
outs
mov
xchg
sub
xor
mov
cmps
pop
push
pop
ins
adc
sub
pop
leave
push
jle
mov
ror
xchg
movs
push
push
jl
mov
jae
clc
int3
xchg
jmp
push
jg
dec
cs
jns
sub
ins
ja
sbb
inc
xchg
mov
in
adc
retf
mov
out
sbb
cmp
xchg
push
push
dec
pop
pushf
pop
int3
mov
pop
add
fistp
mov
xor
arpl
movs
out
xor
jns
pop
ss
mov
xchg
aaa
mov
push
fsubr
mov
jmp
inc
jmp
cmp
shr
sbb
into
pusha
add
pop
adc
lods
and
call
in
xchg
pop
aas
lahf
xchg
lahf
xlat
mov
dec
inc
fbld
and
jle
sbb
std
jo
mov
fild
cmp
sbb
pop
sbb
mov
fldenv
jbe
ffreep
out
shl
or
xor
cmp
add
pminub
out
cmp
cdq
push
jle
cmp
scas
sbb
add
(bad)
fmul
jnp
sub
mov
pop
das
pusha
xchg
loopne
dec
sar
sti
aaa
call
sub
lods
mov
pop
out
pop
ja
adc
(bad)
cdq
mov
mov
inc
jnp
sub
mov
push
inc
aaa
mov
lock
pushf
adc
xor
outs
not
pop
pop
pop
retf
movs
in
test
pop
sti
xchg
push
add
pop
push
jb
aaa
adc
dec
jle
and
sahf
frstor
int
in
push
out
cmp
clc
pop
rcr
cmp
adc
xor
cmp
or
xchg
stos
and
sar
jp
add
out
loope
and
or
call
pop
js
and
scas
mov
imul
pop
pop
(bad)
data16
rol
push
inc
lock
push
stc
mov
cmp
js
and
popa
cmp
and
xchg
mov
stos
div
stc
and
aaa
push
(bad)
shl
add
add
add
push
push
iret
stc
cmp
add
loop
fiadd
mov
in
xchg
dec
add
inc
movs
pop
xchg
xchg
jnp
mov
push
mov
scas
push
ds
adc
js
enter
lock
cmp
jmp
cmp
sbb
and
ins
mov
mov
iret
fwait
mov
inc
pop
aad
mov
or
(bad)
jns
sub
das
inc
sbb
scas
push
pop
dec
ds
push
clc
and
cwde
std
retf
sbb
retf
repnz
in
lock
add
pop
push
sub
arpl
into
inc
sbb
in
mov
push
xor
jnp
sbb
test
pop
mov
adc
es
das
or
movs
fs
fnsave
mov
mov
in
ret
mov
lds
xlat
jle
xchg
dec
jle
mov
xchg
sar
jmp
push
jmp
dec
push
cmp
jno
mov
sbb
test
and
retf
and
(bad)
cs
neg
cs
push
jno
or
dec
or
and
xchg
ret
mov
xchg
stc
pop
push
pop
clc
inc
lahf
ret
loop
pop
jmp
cmp
loopne
cmp
mov
sbb
(bad)
outs
jns
outs
int
push
jnp
sbb
idiv
retf
loope
jae
jno
aad
dec
ret
mov
inc
aas
in
or
mov
sbb
jle
mov
cmps
(bad)
int
retf
leave
push
and
sti
xchg
(bad)
jae
jmp
std
pop
imul
push
sti
push
inc
sbb
fisub
or
ret
(bad)
cmc
cmp
xor
ja
pop
nop
test
jge
push
es
xchg
sahf
xor
pop
jge
js
hlt
js
popa
jl
mov
(bad)
ja
aad
(bad)
loopne
lahf
and
jne
fxch
push
sti
cwde
dec
mov
pop
mov
push
xchg
xor
jbe
xor
cmp
jmp
out
in
popa
sbb
mov
mov
ins
mov
pop
out
loope
sbb
pusha
jl
pop
and
das
cmp
adc
into
iret
(bad)
pop
stos
js
jp
loop
aas
xchg
cli
xchg
mov
pop
add
sbb
addr16
cdq
icebp
inc
xchg
dec
fdivr
fs
push
rol
test
aam
push
cmp
leave
jae
ret
pop
mov
cmp
popf
fisub
js
aas
out
mov
jg
sbb
push
jle
repnz
outs
pop
mov
aaa
and
jbe
push
pop
pop
cmps
(bad)
pop
cmps
pop
inc
sahf
(bad)
into
add
movs
xor
stc
lods
pushf
mov
test
adc
lea
sbb
pop
cmp
repnz
mov
ss
test
pusha
mov
shr
outs
not
add
pushf
or
in
mov
mov
pop
cwde
mov
aas
fadd
push
ins
cdq
out
cmp
std
sbb
mov
in
mov
out
pushf
pop
stos
std
out
rcr
cmps
sti
out
pop
retf
xlat
push
fistp
cmp
mov
repnz
pop
cs
ja
or
xchg
(bad)
shl
nop
push
rcr
repz
inc
xchg
clc
test
outs
sbb
test
pushf
mov
cmc
jmp
(bad)
cli
push
cmps
repnz
xchg
clc
js
and
fwait
test
or
inc
lea
sti
add
sbb
inc
aas
add
cmp
ins
jbe
mov
push
les
enter
in
sbb
xor
inc
sar
inc
sahf
aas
sub
addr16
inc
push
outs
dec
data16
mov
mov
stos
rcr
stc
stc
cdq
fscale
mov
leave
mov
adc
repz
in
sbb
enter
das
aaa
aas
ja
sub
sbb
sbb
fld
adc
cmp
and
mov
movs
mov
inc
leave
in
popa
imul
sbb
lock
and
leave
enter
cmp
lods
mov
lea
and
dec
jl
mov
dec
retf
sbb
imul
out
push
sbb
out
in
mov
mov
mov
pop
addr16
pusha
test
mov
in
pop
sbb
add
clc
aas
inc
xchg
xchg
lahf
xchg
push
nop
cmp
dec
and
cmp
int3
jl
add
stc
cdq
adc
xchg
xchg
(bad)
shl
ins
adc
inc
in
cld
dec
aaa
in
push
add
adc
cmc
aas
lods
iret
dec
dec
add
add
add
add
stos
ret
dec
sbb
ja
xchg
add
add
add
pop
inc
outs
outs
je
outs
je
push
jns
gs
cs
ins
or
and
add
add
add
sbb
pusha
inc
ins
mov
mov
ins
mov
mov
ins
mov
mov
retf
or
pop
mov
sahf
ins
loopne
adc
or
mov
sbb
inc
dec
mov
inc
mov
repz
sti
dec
ss
xchg
js
dec
mov
add
cmc
or
out
stos
and
sub
jo
dec
jbe
fldenv
jl
or
(bad)
ds
dec
mov
out
cwde
sbb
mov
jmp
outs
pop
retf
mov
push
data16
and
cld
jmp
(bad)
dec
add
sub
add
add
stos
ret
dec
in
dec
adc
(bad)
add
add
add
add
inc
outs
bound
push
push
push
inc
cs
or
and
add
add
add
sbb
dec
fs
mov
addr16
mov
addr16
mov
add
sub
add
add
stos
ret
dec
sbb
ja
xchg
add
add
add
add
pop
(bad)
add
outs
je
outs
je
push
jns
gs
cs
ins
or
and
add
add
add
sbb
pusha
inc
ins
mov
mov
ins
mov
mov
ins
mov
mov
add
add
add
add
add
add
add
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
and
add
add
enter
and
jb
outs
addr16
add
add
add
je
add
and
add
add
and
dec
inc
add
add
pop
add
sub
add
and
outs
bound
add
add
add
inc
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
and
add
or
add
add
add
add
add
add
add
add
add
add
add
add
push
add
aaa
add
add
add
add
jg
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
aaa
add
add
aaa
add
add
add
into
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
push
and
add
add
add
add
add
add
add
add
and
add
add
add
add
add
sbb
add
add
dec
add
add
add
add
add
pop
add
add
into
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
pop
add
imul
and
mov
add
add
add
add
add
add
add
test
popa
add
add
movs
add
sub
add
mov
mov
add
add
movs
add
rol
movs
add
fld
movs
add
loope
movs
add
jmp
add
add
movs
add
add
movs
add
or
movs
add
adc
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
and
add
add
add
add
or
sub
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
outs
gs
outs
fs
add
outs
bound
push
push
push
inc
add
arpl
ins
imul
outs
ja
inc
popa
jae
add
jae
gs
add
jae
gs
cs
imul
inc
outs
jb
jae
popa
cs
jo
cmp
outs
fs
gs
arpl
outs
jb
push
add
dec
bound
arpl
jb
add
jb
popa
ins
add
jae
gs
cs
dec
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
arpl
add
imul
popa
arpl
add
jae
gs
cs
dec
cs
popa
arpl
imul
push
popa
jb
add
arpl
addr16
popa
jb
add
je
je
gs
ins
add
je
dec
outs
addr16
add
je
add
popa
add
imul
ins
add
jo
jae
add
add
pop
inc
jno
popa
ins
imul
outs
add
outs
arpl
add
addr16
outs
je
js
gs
imul
add
inc
js
gs
imul
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
inc
jae
gs
bound
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
outs
add
ins
gs
outs
fs
ins
gs
arpl
jae
add
je
inc
outs
je
jns
outs
imul
push
outs
add
je
outs
fs
popa
jae
add
jbe
imul
gs
jns
add
ins
bound
dec
outs
outs
add
je
dec
popa
ins
add
jbe
jb
outs
ins
outs
je
addr16
dec
gs
imul
pop
dec
gs
popa
add
je
push
je
arpl
jb
arpl
dec
gs
popa
addr16
outs
js
push
push
imul
jae
ins
je
dec
popa
imul
add
inc
push
push
inc
je
jb
bound
add
outs
data16
gs
jns
je
jb
bound
add
je
imul
jae
gs
bound
jb
fs
je
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
xor
outs
add
bound
ins
add
and
je
outs
add
add
add
add
add
jae
jae
add
bound
ins
add
cmp
and
add
popa
add
add
imul
das
add
add
bound
add
add
je
outs
add
push
add
add
add
js
add
add
add
inc
arpl
fwait
push
loopne
xchg
mov
inc
mov
or
xor
mov
xor
dec
xor
or
add
add
adc
push
and
add
adc
sbb
add
or
pop
and
or
and
add
add
adc
sbb
add
adc
adc
push
add
add
push
pop
add
adc
adc
push
push
pop
push
adc
adc
sbb
add
adc
add
adc
push
or
add
sbb
or
add
add
inc
push
and
sbb
sbb
adc
add
add
add
push
add
push
add
push
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
adc
pop
and
xor
xor
xor
cs
or
add
add
add
or
add
or
add
add
push
add
adc
outs
data16
gs
jbe
cmp
xor
xor
add
add
cld
add
add
add
add
and
add
add
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
