std
fwait
in
call
icebp
xor
mov
add
arpl
call
mov
pop
ret
pop
or
inc
and
add
or
(bad)
std
add
sbb
add
nop
nop
mov
fucomip
inc
push
push
push
push
push
fstp
sbb
nop
sbb
sti
pop
add
outs
or
in
cmp
mov
push
or
sub
cmp
in
outs
sbb
cli
pop
push
and
daa
adc
int3
std
ins
sbb
sbb
xlat
lea
or
xchg
sub
push
xchg
push
ins
xlat
sbb
mov
pop
popf
dec
sbb
pusha
fistp
sbb
pop
sbb
stc
ins
pop
imul
pop
hlt
sahf
pop
xchg
iret
out
outs
xor
or
pop
push
fwait
ins
pop
pop
pop
pop
ret
(bad)
push
mov
(bad)
jg
lock
ror
(bad)
cmp
je
cmp
pop
push
sahf
std
je
push
push
push
sub
clc
add
stc
in
ret
pop
mov
fs
mov
clc
xor
ja
pop
push
mov
jbe
fwait
pop
outs
jg
inc
add
rcl
push
jp
dec
or
movs
pop
fisttp
add
push
push
outs
sub
inc
dec
je
cmp
fs
dec
xchg
sbb
lea
inc
dec
(bad)
ret
ror
mov
popa
gs
fnstenv
rcr
jmp
and
add
mov
loope
sbb
je
shl
neg
xchg
ins
and
and
sbb
xchg
lea
pop
sahf
call
mov
pusha
rcl
fwait
push
mov
rcr
or
lods
or
nop
ins
push
cld
mov
imul
sbb
or
mov
or
out
xchg
or
push
add
xchg
push
sbb
sub
push
xchg
push
inc
ret
add
push
adc
push
nop
jecxz
push
push
mov
jmp
push
lea
push
outs
and
pop
dec
xchg
ficomp
ds
adc
dec
xlat
push
inc
add
es
ins
mov
jo
dec
and
dec
cwde
fld
xor
sub
movs
and
mov
(bad)
mov
pop
mov
xor
mov
xchg
add
pop
fstp
jle
xor
mov
leave
jne
mov
call
add
mov
add
in
or
mov
adc
xchg
and
xor
mov
retf
es
push
xlat
jae
shr
add
or
push
push
scas
sbb
loope
call
cmp
xor
scas
sbb
mov
int
jbe
sub
lea
push
mov
cmp
adc
inc
inc
mov
sbb
sbb
push
xor
push
fwait
sbb
ret
sbb
mov
xchg
das
pop
push
cmp
pop
xor
inc
(bad)
xchg
mov
pop
(bad)
inc
mov
sbb
addr16
sbb
lock
sbb
push
mov
leave
pop
push
dec
adc
in
pop
clc
nop
rol
adc
inc
into
mov
movs
xchg
adc
lock
js
movs
leave
ret
out
jnp
pusha
les
mov
mov
pop
mov
in
sbb
div
in
xchg
ins
repz
addr16
mov
test
mov
push
mov
in
dec
loop
hlt
xchg
data16
fmul
ret
icebp
movs
pop
repz
add
pop
adc
jl
and
je
fnstsw
mov
mov
jmp
xchg
and
add
nop
push
ret
repnz
mov
sbb
rcl
push
push
das
xchg
lock
div
jmp
or
dec
add
push
push
ja
addr16
or
or
cmp
fnsave
mov
in
mov
dec
retf
loop
je
xchg
es
xchg
int3
add
in
std
hlt
ret
iret
gs
leave
cdq
out
pop
mov
adc
adc
out
jae
mov
mov
in
je
test
pop
mov
test
je
push
popa
mov
scas
lods
retf
inc
push
mov
adc
sbb
leave
je
(bad)
lods
out
mov
or
dec
push
add
add
adc
or
jmp
sbb
sbb
xor
je
add
fistp
or
clc
and
cmp
ins
xor
cmp
push
in
xchg
xor
das
dec
and
push
mov
jmp
fdiv
push
mov
lock
fimul
mov
arpl
ret
or
adc
hlt
imul
clc
mov
mul
or
push
and
or
sub
push
push
stos
sbb
add
in
sub
ret
or
int3
pop
test
adc
mov
pop
push
inc
mov
bound
mov
sbb
add
mov
es
rcl
shl
or
push
scas
hlt
nop
ficom
push
pop
pop
push
pop
inc
inc
out
outs
mov
in
sub
and
dec
add
or
popa
jo
addr16
frstor
inc
div
fistp
(bad)
shl
lods
inc
push
or
pushf
and
(bad)
or
push
clc
pop
mov
cmp
or
push
push
dec
scas
sar
push
push
lds
push
hlt
repz
push
ins
addr16
popf
out
or
or
inc
sbb
xchg
fidivr
and
fistp
pop
sbb
jp
nop
or
je
and
outs
mov
int
inc
mov
sti
retf
push
mov
sub
inc
xchg
fisub
fldenv
or
push
ss
push
lea
movs
pop
in
push
push
mov
jnp
ins
mov
pop
call
push
je
ins
dec
dec
or
dec
sbb
scas
sbb
es
nop
sbb
je
or
(bad)
pushw
cmps
ror
pop
pop
sub
pop
ret
add
xor
leave
push
pop
int3
cs
jo
arpl
add
push
fcmovne
cmp
pop
cmp
push
xor
adc
jp
push
data16
push
sub
ret
stos
cmp
or
mov
and
push
xlat
ret
cmp
push
add
add
push
sbb
xchg
or
sbb
cmp
psubusb
js
int
pop
std
mov
xchg
sar
cmp
rol
xor
std
push
push
(bad)
sbb
ins
mov
jl
pop
dec
jmp
push
scas
and
push
xor
adc
jp
dec
pop
in
push
push
les
es
dec
in
mov
cld
or
rcr
dec
jo
ret
push
outs
xchg
add
push
fadd
cmp
dec
data16
(bad)
cmp
cmps
lods
les
xchg
iret
and
push
jnp
sub
lods
and
and
cmp
dec
pop
daa
push
push
fadd
es
mov
cmp
je
cmp
jne
cmp
je
push
loop
mov
sub
(bad)
or
aam
pop
jecxz
punpckhdq
cwde
adc
cld
shl
cmp
cmps
mov
ret
sbb
jbe
pop
sub
and
pop
mov
push
or
std
sbb
mov
pop
xor
jmp
jo
or
mov
stc
ss
mov
xchg
or
add
shl
lock
clc
daa
jbe
xor
add
dec
xor
pushf
dec
inc
movs
cmp
lahf
data16
mov
aad
add
push
and
(bad)
es
push
cwde
push
js
jmp
shr
ret
std
jb
(bad)
jl
or
jbe
cs
cmp
adc
adc
fst
(bad)
scas
std
or
iret
mov
adc
inc
adc
test
(bad)
mov
out
lock
outs
xchg
inc
jno
jge
inc
add
cmp
outs
pop
imul
jge
add
adc
ds
je
jecxz
add
stos
cmp
lahf
pop
jb
inc
in
ds
jge
mov
stos
jmp
jl
sbb
es
mov
hlt
fldcw
xor
jmp
aaa
and
sahf
pushf
jne
sbb
push
pop
popa
adc
mov
push
jp
pop
and
mov
mov
dec
or
(bad)
and
adc
scas
mov
sbb
pop
xchg
dec
mov
sbb
lods
outs
xor
repz
xchg
mov
test
gs
popa
cmps
inc
or
std
pop
in
bound
clc
lods
ror
(bad)
push
pusha
scas
mov
sub
and
sbb
pop
dec
sbb
mov
sub
dec
leave
mov
mov
icebp
das
mov
inc
imul
imul
mov
inc
push
imul
mov
mov
inc
push
mov
mov
jb
addr16
stos
sahf
add
scas
or
xchg
mov
call
sub
pop
mov
hlt
pop
add
popf
int
inc
or
xor
adc
mov
outs
xchg
inc
push
jge
pop
jmp
(bad)
(bad)
mov
sbb
ins
fs
jae
test
or
pop
hlt
and
mov
and
movs
sti
popa
gs
je
mov
bound
push
push
clc
lock
xor
jo
je
ins
cmp
dec
popa
nop
mov
mov
retf
sbb
jecxz
push
loope
sbb
jg
or
mov
adc
lea
call
aad
inc
and
add
fiadd
fs
xchg
adc
add
mov
xchg
leave
mov
mov
and
cmp
fwait
call
lods
or
aas
push
call
jl
cmp
cmp
(bad)
idiv
lock
mov
xor
add
or
and
or
inc
and
(bad)
mov
add
push
pop
sub
fcomp
nop
in
mov
test
dec
arpl
mov
ds
scas
mov
or
push
(bad)
push
adc
xlat
inc
xor
push
das
sbb
popa
cdq
and
popa
jmp
jbe
mov
mov
loop
enter
or
or
jle
push
retf
imul
lods
sti
out
or
clc
jl
adc
fisttp
es
std
in
cmp
xor
daa
jno
call
xor
loope
lods
add
add
out
fs
pop
mov
adc
dec
pop
or
and
inc
inc
inc
es
pop
add
or
xor
xchg
mov
lea
into
xor
addr16
dec
xchg
das
or
ins
pop
fmul
mov
std
mov
xchg
push
dec
test
je
outs
(bad)
add
cli
cmp
je
ins
rcr
or
hlt
mov
test
je
neg
cmp
shr
inc
ins
aaa
inc
rcr
add
or
mov
sar
push
adc
xchg
xchg
rcl
jnp
ins
outs
leave
sbb
xor
fild
push
cmps
pop
mov
jl
adc
ficomp
cli
pop
ss
test
comiss
mov
dec
jmp
xor
sbb
sbb
add
mov
cmp
ins
fwait
sub
sub
sub
daa
sbb
fisttp
or
movs
add
movs
ins
ror
sti
outs
add
jl
popa
sub
fwait
lahf
jge
xor
jb
pop
test
stos
inc
cmovle
cs
mov
mov
mov
out
push
pusha
push
add
(bad)
fwait
call
neg
je
cmp
jl
jo
cmp
es
ss
sbb
mov
mov
js
push
mov
sbb
dec
lea
or
es
add
push
retf
icebp
cmp
xor
push
sbb
out
and
xchg
mov
enter
mov
dec
cmp
iret
jmp
lahf
lea
or
push
fcomp
je
mov
fadd
mov
ins
(bad)
or
inc
sub
push
js
push
sub
add
adc
inc
or
mov
xchg
out
scas
cmp
inc
jl
push
sub
mov
sbb
test
sbb
sbb
stos
stos
je
push
outs
push
dec
add
and
mov
sbb
popf
fsubr
jg
pop
dec
cwde
xor
rcl
or
gs
adc
mov
stc
scas
mov
push
pop
and
fld
cmp
enter
push
sbb
pop
dec
ret
or
fst
xlat
cmp
sbb
xchg
sbb
lahf
adc
int3
push
sbb
les
jbe
adc
(bad)
popa
xor
popa
xchg
jl
pop
outs
fistp
mov
sub
or
or
adc
lock
ins
cmp
mov
daa
push
cmp
pop
lods
xchg
rcr
add
icebp
xchg
inc
push
lea
add
push
push
sbb
mov
cmps
push
into
enter
cmp
jl
jo
and
and
pop
orps
imul
jo
mov
add
das
or
mov
mov
ds
je
mov
shl
mov
hlt
das
mov
cmps
inc
int3
out
stos
xchg
sbb
dec
and
call
sub
cmp
in
inc
xchg
jmp
lock
je
cmp
inc
push
push
inc
jl
movs
mov
je
mov
aad
pop
inc
jle
mov
pop
push
jo
mov
xor
cmp
mov
adc
cmp
push
jb
movs
or
dec
fwait
imul
in
cmp
add
pop
add
in
sub
jmp
xor
ror
popa
mov
out
into
mov
jle
pop
adc
sub
inc
mov
push
ficom
push
rcl
out
push
fs
jo
pop
xchg
mov
add
sub
call
je
ss
(bad)
pop
fld
mov
loope
ret
je
or
(bad)
fisttp
xor
mov
and
shr
cmp
std
(bad)
ja
cmc
lods
mov
jl
mov
out
xor
xor
and
mov
sub
jb
in
adc
inc
add
inc
adc
les
cmp
xor
in
push
js
ret
add
in
aam
jp
jecxz
sbb
fldenv
iret
outs
mov
rol
(bad)
fcom
cmp
(bad)
sti
mov
and
adc
ret
push
or
(bad)
ins
jnp
mov
push
daa
and
mov
mov
xchg
mov
xlat
in
call
pop
push
sub
sbb
sbb
mov
loop
outs
div
inc
xor
push
sub
adc
cmp
jl
mov
push
lds
fdivr
mov
xchg
std
ins
cld
mov
or
push
popa
ret
xlat
rol
dec
jae
adc
pop
dec
shl
push
push
inc
and
dec
ror
push
xchg
sbb
dec
cli
push
and
rcl
cmp
xor
jl
lahf
adc
js
mov
sbb
push
inc
outs
aam
push
inc
push
xchg
xor
inc
pop
nop
jo
add
arpl
call
push
pop
or
and
add
ud1
popf
movlps
xor
test
in
xor
adc
cmp
pop
fstp
es
push
mov
in
mov
iret
add
mov
mov
daa
mov
sub
dec
or
pusha
bound
mov
xchg
mov
cmps
cs
ins
sub
fwait
addr16
inc
add
cmp
inc
sti
sub
inc
push
popa
push
jecxz
xchg
sahf
cmp
mov
pop
pop
and
ss
push
jg
(bad)
push
ss
mov
mov
cmp
push
fmul
loopne
cmp
lahf
jmp
or
sar
pop
cmps
stos
xor
and
push
sbb
xchg
div
inc
adc
nop
clc
xchg
(bad)
adc
addr16
leave
jo
stc
dec
cmp
mov
aas
cmp
mov
imul
sub
jb
fidivr
clc
push
push
push
add
bound
hlt
pop
dec
or
lea
cmp
xor
sbb
hlt
and
loope
jne
xchg
shr
push
or
mov
imul
xchg
push
and
mov
test
jle
dec
cmp
bound
inc
ret
sbb
leave
lods
not
add
pop
sub
fdivr
push
sbb
in
mov
push
popa
sbb
xchg
or
adc
out
sbb
fxch
loopne
xlat
add
ins
int3
push
add
sub
ror
push
idiv
push
es
into
or
pop
sub
sbb
push
rcl
add
ins
fwait
sti
div
sbb
add
sub
lock
sub
pop
mov
add
cs
adc
mov
adc
not
cs
in
dec
push
out
inc
cmp
cmp
clc
bound
or
hlt
dec
das
cs
inc
cmp
inc
js
adc
mov
arpl
push
dec
(bad)
cmps
cmp
mov
stos
je
ja
push
call
fnstsw
adc
mov
inc
out
push
pushf
mov
shl
mov
jo
nop
icebp
ror
cmp
out
or
mov
cmp
cwde
retf
shl
add
pop
pop
adc
repz
cmp
xchg
cwde
fisttp
or
jbe
xchg
adc
and
and
sbb
out
fdivr
sbb
xchg
mov
adc
daa
sub
or
not
mov
lea
(bad)
xchg
test
loope
vrcpss
push
xor
jl
in
mov
adc
cmp
or
stos
mov
or
mov
or
push
and
fdiv
in
inc
xor
cwde
outs
mov
adc
inc
test
cdq
mov
pop
pop
ret
sub
jo
loope
inc
pop
fnstcw
push
loopne
cs
mov
in
or
and
push
xlat
fild
jmp
adc
sbb
(bad)
jbe
mov
pop
xchg
mov
add
pop
sbb
fistp
aam
xchg
mov
add
cmp
jg
mov
mov
xchg
push
loop
push
push
add
fld
je
ins
add
pusha
push
or
dec
add
push
enter
sub
cmp
ret
and
shr
add
push
sbb
or
mov
xchg
js
call
repnz
and
adc
jb
mov
or
inc
xor
lock
call
ins
mov
push
pusha
xchg
arpl
cmp
iret
and
test
mov
push
test
pusha
ins
xor
jbe
inc
pop
out
je
xchg
and
sbb
mov
jmp
push
and
data16
fdivr
push
pop
iret
dec
ds
mov
clc
call
hlt
pop
inc
sbb
and
pop
push
push
mov
push
inc
sbb
sbb
push
(bad)
dec
add
sbb
scas
xor
fs
jl
lock
jmp
jo
lock
lea
xor
and
xchg
ret
add
pop
mov
clc
mov
int3
cwde
mov
je
dec
pop
aaa
sbb
or
ss
pop
pop
or
fs
ins
call
rcr
and
mov
and
jo
mov
sub
je
mov
cmps
sbb
xor
js
test
dec
xor
cmp
inc
mov
inc
inc
xchg
sbb
cwde
dec
call
nop
sbb
enter
push
mov
ja
xor
lea
or
cld
imul
mov
sbb
mov
or
add
out
jg
push
push
(bad)
aaa
sbb
mov
jmp
mov
pop
and
loope
ins
ins
add
arpl
adc
das
jo
lods
pop
outs
dec
push
js
sbb
mov
or
cs
ins
add
dec
jne
stc
jecxz
or
and
sar
icebp
mov
outs
nop
mov
push
xchg
mov
movs
jecxz
cld
push
add
out
fmul
in
neg
loopne
sub
sbb
pop
xchg
call
add
pop
pop
add
inc
out
scas
push
push
pushf
aam
push
mov
dec
push
sahf
arpl
fldenv
pop
push
xchg
push
iret
arpl
adc
xchg
push
xor
bound
pop
xor
push
jbe
mov
and
push
xor
pop
adc
push
dec
clc
cld
jno
jne
mov
pop
pusha
xor
fs
mov
call
jp
mov
pop
push
and
pusha
cwde
ret
and
retf
or
xlat
pop
xlat
ja
aaa
push
adc
cmps
into
movs
and
xchg
in
cdq
pusha
ret
(bad)
clc
cwde
fld
icebp
dec
mov
shl
cdq
repnz
xlat
fs
inc
(bad)
and
add
mov
jecxz
or
xor
sbb
adc
mov
les
stos
sub
mov
mov
jecxz
or
push
xchg
jle
dec
inc
out
arpl
das
or
pop
push
arpl
nop
inc
push
les
and
or
ss
je
push
sub
xor
xor
leave
mov
push
xor
and
mov
rcl
push
ja
push
sahf
mov
sbb
bound
add
xchg
and
je
sub
fistp
mov
mov
add
and
mov
(bad)
outs
test
pop
add
je
jl
nop
cwde
test
int3
cmp
cmp
sbb
push
xchg
add
add
into
clc
mov
outs
je
add
and
xchg
add
cld
push
lock
add
mov
aaa
ins
in
scas
mov
lods
inc
mov
aaa
not
adc
push
push
inc
(bad)
sbb
adc
inc
popa
adc
sahf
ins
cmove
mov
mov
dec
cmp
das
jb
je
mov
or
scas
loopne
ror
sub
lock
pop
xor
in
sti
adc
(bad)
pop
xor
pop
fs
mov
enter
add
jae
add
ss
movs
pop
or
jle
push
into
cdq
gs
pop
ret
pop
and
push
jb
lsl
mov
(bad)
sbb
dec
gs
(bad)
iret
and
(bad)
dec
add
or
adc
inc
dec
mov
pop
jecxz
fs
add
dec
mov
je
pop
push
xor
sub
jnp
jmp
loopne
jbe
ss
movs
and
sub
arpl
cwde
push
push
push
inc
dec
test
mov
adc
xor
pushf
mov
add
pop
iret
push
iret
add
ds
out
mov
sbb
sub
push
(bad)
rcr
sub
ret
(bad)
sub
sub
add
add
xchg
mov
push
pop
sbb
data16
mov
jo
pop
adc
scas
or
jne
adc
rcr
xor
sbb
or
push
add
jns
out
rcr
xor
push
sub
dec
sub
pusha
(bad)
mov
js
je
out
test
push
add
pop
jne
mov
popf
mov
xor
pop
stc
mov
imul
pop
adc
or
add
pop
cmp
addr16
or
clc
sahf
lods
sub
and
cmp
mov
xor
adc
lea
and
sti
adc
add
dec
xor
inc
cmp
mov
call
arpl
test
std
out
adc
mov
xor
jle
inc
cs
es
sub
sbb
ficom
sbb
in
mov
sub
sahf
pop
push
push
adc
je
lods
adc
add
or
cmp
ja
add
fdivrp
pop
je
(bad)
dec
je
dec
jne
inc
cmp
jmp
das
ins
(bad)
aas
div
cmp
jmp
cmp
pop
int
mov
add
pop
sub
mov
sub
push
push
push
xor
adc
inc
pop
mov
push
cld
inc
or
adc
add
pop
ss
cmp
or
rcl
sbb
stos
sbb
adc
pop
clc
scas
mov
or
and
jl
hlt
repnz
mov
cmp
daa
adc
in
nop
add
add
inc
inc
push
and
inc
cld
inc
sbb
cmp
ins
xchg
add
add
pop
adc
jbe
or
push
push
mov
push
dec
mov
dec
aas
inc
inc
push
add
xor
shl
test
shl
imul
xor
adc
mov
rol
cmps
int3
sub
mov
cmp
jno
push
mov
pop
push
call
inc
call
pop
in
sbb
out
sahf
xor
enter
test
add
shl
add
mov
sub
fimul
add
push
outs
mov
pop
adc
add
rcl
xor
cmp
mov
mov
not
(bad)
mov
test
leave
popf
mov
scas
sbb
fsubr
mov
fadd
fs
ficom
pop
cld
inc
adc
dec
pop
movs
into
add
lahf
jmp
icebp
cmp
xlat
mov
adc
xchg
mov
pop
mov
repnz
jp
js
cdq
adc
adc
js
sbb
or
ret
aad
retf
sub
je
cmp
dec
or
or
or
dec
mov
fistp
add
jmp
mov
cmp
imul
adc
loop
xchg
jnp
mov
fimul
fcomp
in
adc
or
adc
xchg
add
dec
or
pop
mov
or
push
inc
int
sbb
push
dec
cs
mov
mov
mov
call
adc
push
cmp
icebp
jle
mov
add
and
sbb
or
mov
inc
ja
enter
arpl
ficom
jne
xchg
adc
sub
add
add
call
or
xor
out
add
loopne
cdq
idiv
mov
add
lahf
scas
xor
mov
adc
adc
clc
dec
mov
cmp
jl
lea
mov
or
mov
push
and
or
loope
sub
xor
lea
pusha
fwait
or
push
pop
test
fdiv
or
(bad)
rcr
jno
pop
je
mov
sub
fnstcw
mov
or
inc
ss
inc
inc
jns
call
dec
iret
daa
mul
ja
push
mov
nop
das
jmp
push
test
add
sbb
adc
inc
mov
or
mov
pushf
clc
icebp
cmp
dec
xor
or
jne
ret
jae
and
push
sbb
dec
jge
bound
mov
(bad)
adc
in
lea
cmp
(bad)
in
cmp
cmp
rcr
sub
adc
mov
dec
pop
cmps
call
adc
inc
cdq
add
nop
aad
mov
(bad)
iret
aad
inc
aam
fsub
pop
lock
mov
jmp
enter
pushf
jno
fidiv
sbb
or
push
push
jno
xchg
mov
test
cmps
mov
inc
and
sbb
test
push
pop
jbe
lock
ret
mov
add
xchg
ins
inc
scas
mov
or
lock
adc
jne
add
jb
out
mov
jl
mov
cmc
ds
dec
mov
push
fsubr
sbb
test
pop
jno
jle
pop
push
push
pop
in
mov
shl
adc
jne
push
push
adc
add
add
jnp
(bad)
xlat
push
sub
sbb
inc
imul
sbb
cs
lods
lods
arpl
cmp
sub
pop
lods
and
fist
or
retf
push
aaa
rol
fsubr
out
icebp
sbb
ror
popa
ret
inc
push
stc
add
cld
push
xchg
mov
push
inc
xrelease
adc
cmp
div
jmp
(bad)
mov
add
inc
(bad)
cli
push
mov
mov
addr16
gs
iret
or
push
jp
mul
sbb
in
rcl
push
ins
and
push
inc
lods
and
das
(bad)
adc
push
sbb
or
mov
pusha
cmp
(bad)
xor
(bad)
sbb
pop
sbb
call
lods
mov
push
ins
and
xor
(bad)
pop
mov
pop
shr
movs
addr16
ss
xor
or
jo
sbb
jge
jle
dec
popf
(bad)
mov
dec
jno
lea
xor
pop
mov
or
sub
mov
cs
xchg
and
mov
and
popf
add
pop
aad
ror
jb
stos
retf
pop
jo
pushf
data16
adc
ficom
sub
jne
mov
add
sbb
sbb
push
lea
pop
inc
cdq
pushf
sub
ja
mov
lahf
les
imul
sahf
ins
fbld
addr16
adc
sbb
sbb
add
sbb
outs
mov
pusha
xor
cs
int3
mov
push
nop
aas
mov
cs
fs
sub
out
cmp
xor
add
xchg
sub
imul
pusha
ins
(bad)
pop
xchg
xchg
xor
cmp
jne
cmp
mov
sar
sbb
adc
sahf
xchg
or
jnp
sub
dec
jnp
sub
cmp
xchg
ds
ss
push
push
lea
push
lea
into
into
dec
inc
leave
xchg
push
jl
fsub
daa
pop
cmp
ins
hlt
cld
sbb
in
lock
sbb
sub
cdq
sti
jo
mov
enter
gs
xchg
out
dec
pop
xor
jb
icebp
mov
adc
dec
dec
loopne
add
xchg
pushf
adc
lods
mov
outs
pop
push
or
sub
jo
sbb
add
push
or
(bad)
icebp
retf
pop
lods
add
xor
pop
outs
lods
icebp
test
sahf
xor
and
adc
inc
xchg
pushf
iret
pushf
push
jne
push
(bad)
adc
sbb
arpl
adc
jb
push
icebp
pop
cmc
test
mov
jbe
jbe
mov
js
mov
cli
push
inc
test
sub
push
in
inc
jge
iret
push
or
xor
push
mov
lea
pushf
lea
nop
out
bswap
lea
sbb
not
or
adc
and
or
dec
inc
shl
pop
or
fnstcw
jbe
lea
mov
scas
fiadd
add
jl
mov
arpl
cld
(bad)
jle
jb
imul
retf
imul
inc
mov
jmp
mov
or
mov
mov
dec
push
ins
jl
push
(bad)
imul
(bad)
aam
lahf
ficom
mov
cmp
imul
into
test
mov
mov
imul
ret
dec
lea
dec
out
iret
mov
aam
ror
mov
popf
cmp
daa
into
pop
mov
ds
cmc
sbb
adc
outs
cld
push
call
jbe
inc
mov
dec
sbb
jae
mov
inc
inc
dec
loope
dec
cmps
pop
sub
mov
jle
push
cmp
std
mov
or
push
inc
cld
push
stos
xor
push
aaa
in
xor
cmp
jle
xor
aad
mov
or
cmp
xor
push
push
pop
pushf
jb
and
fmul
mov
arpl
je
test
ror
inc
cmp
adc
je
js
lahf
aas
fld
mov
clc
sti
je
adc
xor
aaa
je
or
test
(bad)
pop
outs
in
ret
push
int3
push
aad
cld
jo
lahf
add
push
jle
or
sahf
sti
jne
mov
cmp
(bad)
adc
loopne
or
mov
pop
jne
pop
test
push
dec
jnp
add
mov
iret
lock
cmp
mov
dec
pop
and
pop
fcom
shl
cwde
mov
test
push
mov
dec
jno
add
leave
ins
xchg
sub
mov
or
sbb
enter
xchg
mov
adc
ror
push
jmp
test
in
mov
dec
cmp
xor
cwde
inc
aad
jnp
mov
pop
retf
push
mov
mov
fistp
je
push
mov
mov
mov
jle
jne
jg
push
add
imul
rol
pop
push
mov
outs
adc
(bad)
xchg
mov
xchg
shl
adc
(bad)
xchg
cwde
js
stos
pop
adc
frstor
adc
cmp
fisubr
add
sub
data16
adc
jae
ins
out
pop
je
add
cmp
std
sub
cmp
jne
xor
cmp
cmp
adc
lock
pminsw
adc
mov
outs
enter
sub
cmp
jmp
out
aaa
dec
enter
into
mov
cld
xlat
mov
ret
ss
popa
scas
pop
and
jno
cli
mov
loope
mov
xchg
inc
push
push
aaa
pusha
inc
jbe
mov
mov
inc
je
cmp
mov
test
inc
je
enter
adc
loopne
cmp
(bad)
jmp
add
or
pusha
pop
xor
mov
mov
sbb
cmp
or
mov
fld
push
mov
(bad)
lods
clc
jecxz
cmp
jne
adc
or
add
mov
ret
dec
sub
add
mov
arpl
push
sub
es
ins
dec
mov
jle
adc
pop
int3
sbb
aaa
pop
dec
adc
xor
retf
xchg
pushf
mov
pop
mov
ins
retw
push
pop
push
cs
mov
adc
jne
add
lods
sub
push
pop
or
jbe
jne
pop
imul
adc
fnstsw
rcl
daa
test
call
push
pop
stc
push
scas
adc
cmps
cmp
mov
data16
mov
int3
push
nop
movs
jns
xor
pop
cld
jp
push
or
(bad)
jmp
or
mov
push
xor
xchg
xchg
xchg
xor
mov
xchg
enter
push
fnstcw
push
or
jg
add
das
or
fst
loopne
xor
in
inc
loope
and
or
data16
in
lea
icebp
cmp
push
rep
lock
xor
add
aaa
mov
sub
nop
mov
dec
cmp
push
pop
mov
dec
sub
xor
push
push
inc
jle
pop
jl
es
mov
inc
lock
outs
and
cmp
xchg
mov
fiadd
cmp
mov
push
adc
mov
pop
or
adc
sbb
adc
xor
mov
into
inc
test
sub
and
and
xchg
loop
pop
popa
pushf
pop
sub
mov
fnstenv
je
cmp
addr16
xor
loopne
add
lea
stos
inc
pop
xor
push
push
dec
mov
and
js
lock
inc
add
push
jl
loop
mov
movs
pop
ds
int3
cmp
sub
xor
mov
add
loop
es
rol
push
and
dec
aad
fstp
xor
jns
mov
sub
mov
cmp
in
push
mul
call
mov
add
mov
jmp
add
int
dec
sbb
sahf
and
sub
mov
push
imul
mov
mov
pop
icebp
sbb
sub
dec
fst
xchg
pop
loope
aaa
aad
pusha
adc
ss
mov
repnz
push
add
mov
push
cmp
inc
cld
sub
sbb
pop
sar
push
jo
imul
js
mov
pop
push
test
jno
jo
test
movs
add
jle
cwde
and
jb
or
mov
enter
retf
inc
or
int3
ffreep
push
popf
add
sub
cmp
mov
add
push
lock
(bad)
inc
jmp
jle
dec
mov
pop
mov
enter
sbb
test
and
adc
push
jg
add
les
cwde
nop
mov
ret
mov
or
push
push
dec
cmc
push
int
hlt
std
fstp
leave
add
push
xchg
add
aas
nop
pop
pop
inc
nop
test
mov
(bad)
popa
les
das
pop
call
jp
add
add
mov
jne
or
inc
jmp
inc
ins
xchg
add
ins
or
inc
enter
gs
and
mov
scas
add
rol
inc
or
in
test
ss
mov
js
movs
xchg
push
pusha
lods
fnop
clc
push
add
push
retf
or
sub
mov
(bad)
in
repnz
fsub
cmp
adc
loop
aas
or
mov
cmp
call
(bad)
or
and
jge
mov
pushf
fs
sub
pop
mov
cld
fadd
push
mov
inc
mov
cld
cld
cld
cld
cmp
sub
jle
(bad)
cld
sbb
hlt
movs
(bad)
in
or
jge
nop
xchg
shl
jge
test
add
xor
ds
call
popa
push
imul
stc
or
in
outs
push
movs
xchg
push
lds
mov
xchg
aam
(bad)
mov
movs
sti
cmp
lods
or
pop
add
leave
and
inc
nop
lock
mov
jnp
xor
mov
jo
sub
test
add
imul
jne
lea
and
sbb
popa
mov
loopne
ins
adc
ins
inc
push
add
scas
sub
dec
push
and
mov
sub
push
fsubr
pop
fmul
mov
and
or
mov
xor
jmp
ins
adc
pop
mov
jae
fmul
sbb
dec
dec
addr16
inc
ss
aad
inc
or
and
ror
fimul
(bad)
mov
add
pop
int3
push
test
es
mov
dec
jmp
pop
lock
int
movs
aaa
xor
aad
pushf
jl
xor
das
outs
fist
mov
mov
sub
inc
mov
add
sbb
scas
aam
xor
lds
push
sbb
call
out
sub
mov
cmp
cmc
aam
or
sub
call
cmp
and
xchg
aam
push
push
inc
mov
mov
pop
mov
pushf
in
push
je
shl
push
dec
mov
push
hlt
add
lods
movs
clc
outs
add
sti
int
and
clc
nop
sbb
mov
or
div
inc
jno
ficomp
mov
push
adc
inc
xor
and
push
sub
cs
cmps
fwait
pop
push
cmp
or
add
mov
popa
pop
mov
inc
sbb
push
ins
daa
dec
les
mov
mov
mov
mov
ds
push
push
leave
ret
scas
stos
jo
add
mov
or
cmp
add
fwait
cmp
ret
dec
mov
in
lea
out
mov
rol
pop
repnz
xchg
add
inc
fsub
hlt
jecxz
cs
stos
cld
dec
or
leave
adc
sub
add
imul
sbb
outs
jmp
xchg
push
cdq
push
outs
cmps
add
inc
(bad)
fsub
push
inc
push
dec
or
sbb
inc
sbb
rol
add
cmp
cmps
imul
push
cmps
lods
scas
mov
lock
push
test
dec
push
(bad)
int
or
test
popa
or
push
int3
fmul
fsubp
mov
cmps
dec
push
push
push
push
popf
inc
mov
pop
rsqrtps
sbb
rol
stos
pop
pop
lea
outs
aas
add
jb
or
add
adc
sbb
(bad)
jp
fbstp
add
adc
inc
in
mov
and
jl
pop
or
and
adc
pop
jne
pop
and
lock
loope
push
xor
adc
sahf
je
push
dec
push
sub
xor
ja
and
inc
dec
push
sbb
mov
inc
xor
shl
dec
rol
push
fisttp
retf
sbb
push
inc
jo
mov
inc
mov
push
xor
mov
dec
jb
icebp
shl
call
pop
push
je
mov
dec
push
push
push
mov
or
push
jo
out
adc
pop
les
push
sub
lods
add
sbb
pop
jle
mov
and
push
retf
test
and
pop
jae
xchg
pop
xor
lock
arpl
cmp
(bad)
nop
in
daa
adc
push
loop
rcl
lds
test
call
mov
in
fdivr
cmps
clc
mov
push
xchg
and
not
(bad)
pop
sar
push
scas
push
les
cs
adc
ret
test
push
xor
add
mov
scas
sub
ret
hlt
add
outs
ret
ja
ss
mov
mov
faddp
mov
adc
fadd
add
outs
je
inc
xchg
add
add
or
mov
sub
dec
movs
jp
iret
fimul
cmps
add
adc
xor
das
jb
jae
imul
and
dec
fcomp
pop
js
pop
push
xchg
cmps
cmp
mov
sub
push
push
and
push
pop
xor
scas
hlt
(bad)
lea
push
shl
loope
or
jo
adc
mov
outs
je
xchg
or
daa
adc
outs
push
jne
dec
jne
cmp
aam
mov
cs
(bad)
fstp
lock
or
fcom
adc
sub
lds
pop
and
jae
add
jbe
inc
pop
cmps
push
pop
pop
arpl
mov
cmp
sub
jb
inc
add
add
jmp
mov
jg
mov
or
sub
aaa
sbb
outs
pop
push
stos
pop
sbb
pop
in
mov
jle
leave
or
and
gs
dec
mov
or
xor
mov
icebp
or
shl
imul
cld
fisub
mov
jge
lds
xchg
sub
push
mov
daa
fdiv
sbb
pop
push
push
call
push
and
adc
iret
leave
and
jp
cmp
push
les
stos
pop
add
(bad)
pop
push
add
mov
popf
outs
pop
das
jp
dec
add
xor
pop
push
jo
inc
add
cs
and
push
in
rol
mov
sbb
dec
and
xchg
add
push
push
outs
xor
mov
inc
ja
mov
mov
adc
dec
pop
inc
or
dec
sti
mov
nop
or
inc
mov
add
sbb
pop
mov
add
push
adc
push
adc
pop
aad
adc
push
mov
lock
xor
pop
and
mov
ins
or
dec
push
add
push
mov
es
sar
in
fsubr
stc
rcl
stos
pop
sbb
mov
das
xchg
sbb
les
enter
adc
mov
and
mov
fcomp
jmp
arpl
es
or
jns
cmp
mov
and
sub
push
imul
adc
cli
push
mov
jmp
push
add
push
cwde
inc
data16
xor
or
mov
mov
lea
jnp
fbstp
call
cmp
leave
xchg
push
nop
adc
inc
lods
push
lods
xchg
adc
add
in
xchg
stos
mov
das
inc
mov
sbb
mov
jne
mov
cs
push
pop
sub
add
inc
jne
push
xor
and
cmps
jo
clc
retf
dec
js
add
push
mov
xor
pop
push
push
push
data16
xlat
inc
pop
test
add
push
mov
mov
out
or
inc
or
xor
push
cmps
mov
pop
mov
jnp
jmp
pop
and
push
or
mov
add
or
mov
in
mov
shl
fcmovnb
lods
test
mov
and
mov
cmp
adc
mov
pop
cmp
loopne
mov
(bad)
mov
cmp
or
mov
mov
xchg
dec
mov
push
sbb
inc
push
or
mov
call
int3
push
out
(bad)
jge
push
xchg
ins
push
jmp
movs
test
sub
lods
(bad)
mov
das
stos
sub
pop
ret
adc
or
(bad)
icebp
push
add
or
clc
push
test
bnd
and
fst
ins
mov
pop
test
cvtpi2ps
push
cmp
xchg
fbstp
add
rol
xor
jbe
push
push
push
lock
sbb
sti
stos
int3
and
inc
mov
sbb
pop
jl
sub
pop
iret
neg
pop
add
hlt
sbb
clc
cld
pusha
push
ins
pop
or
dec
dec
jo
and
fwait
in
ret
(bad)
ds
mov
mov
ret
sub
push
push
sbb
dec
gs
in
fisttp
xor
adc
push
push
sub
test
or
xchg
arpl
xchg
sub
lahf
and
xchg
loopne
arpl
or
inc
push
sbb
xchg
adc
or
xchg
and
mov
pop
packuswb
pop
and
push
ins
jp
push
dec
jl
pop
jl
dec
adc
popf
and
inc
jnp
mov
jae
dec
dec
call
adc
loop
lahf
fmul
mov
or
jae
mov
sbb
jno
adc
add
and
add
sbb
sbb
js
adc
clc
xor
mov
and
cmp
das
(bad)
mov
or
add
inc
jb
outs
push
in
lods
push
sbb
xor
lods
jbe
push
je
push
popf
pusha
mov
ins
mov
test
sbb
mov
push
add
movs
loopne
adc
adc
or
mov
or
add
lods
outs
int3
jno
les
add
stos
pusha
js
outs
add
cwde
pop
(bad)
jno
mov
call
pop
push
push
push
or
adc
(bad)
(bad)
enter
adc
ret
loopne
lock
adc
push
test
scas
or
mov
(bad)
retf
push
inc
push
clc
leave
ds
sbb
pop
xor
clc
inc
ds
pop
push
and
add
mov
bound
sub
add
mov
cmps
or
jae
ds
xchg
or
push
mov
sub
and
push
(bad)
pop
icebp
inc
jb
pop
and
xchg
xlat
cdq
mov
test
push
dec
mov
adc
js
pushf
xor
pop
xor
sub
mov
mov
xchg
inc
jmp
xor
mov
push
loop
or
push
adc
(bad)
xchg
sar
push
push
int
push
sbb
outs
or
xor
jmp
adc
inc
stos
es
inc
jb
mov
push
and
jno
sub
push
into
jmp
mov
popa
pop
mov
adc
rcr
cmps
and
imul
movs
aad
nop
sbb
jns
inc
mov
push
mov
mov
dec
add
or
push
minps
out
lea
fadd
pop
adc
js
aaa
sbb
push
sbb
inc
pop
mov
lods
xchg
in
call
push
xor
or
ds
daa
push
mov
or
sub
mov
lds
lahf
inc
stos
mov
lock
jne
mov
dec
and
push
adc
loopne
push
shr
sub
push
push
mov
or
xor
adc
and
inc
adc
push
pmaddwd
rcl
loope
add
(bad)
mov
stos
push
jp
cld
inc
sbb
mov
ds
les
add
inc
mov
sub
or
nop
ret
jmp
call
pusha
mov
fadd
jne
popa
adc
daa
test
push
pop
mov
cmp
pop
ret
cmpxchg
outs
inc
imul
inc
ja
mov
ret
in
sub
and
push
dec
xchg
int
mov
retf
sbb
add
inc
inc
mov
shl
(bad)
enter
cmp
aam
fsubr
fdiv
xor
fmul
retf
adc
in
jbe
add
lock
dec
iret
enter
add
and
xchg
ss
ds
(bad)
sub
mov
inc
ror
pop
push
and
test
push
sbb
stos
pop
push
or
addr16
pusha
lods
nop
das
add
dec
sub
ret
or
cmp
adc
pushf
or
adc
inc
mov
aaa
in
imul
and
dec
push
dec
mov
movs
ds
or
add
jb
hlt
or
mov
jb
mov
cmp
test
cdq
sbb
shl
pop
sub
sub
dec
mov
mov
push
or
lea
call
cwde
inc
mov
fs
push
push
cvttps2pi
add
xchg
inc
out
aam
add
aam
outs
rcr
lahf
push
inc
stc
je
(bad)
out
pop
inc
push
jle
adc
push
push
lea
mov
push
push
adc
mov
push
sub
mov
ins
cs
inc
fnstcw
outs
repz
mov
adc
sub
stos
sbb
push
sbb
rol
loopne
xor
or
add
push
push
popf
push
repnz
das
push
lea
lods
pop
sub
jmp
push
push
inc
dec
call
and
mov
fptan
ins
pop
fadd
adc
mov
int3
xchg
fisubr
push
dec
inc
add
aaa
imul
or
adc
xor
aaa
dec
cmp
and
push
(bad)
mov
mov
mov
xchg
out
stos
fist
jmp
add
or
xchg
dec
lds
outs
or
sbb
mov
mov
out
add
gs
mov
mov
adc
stos
mov
adc
inc
push
ss
movs
mov
xchg
aam
cmp
neg
xor
or
dec
push
lahf
or
inc
aas
xor
jl
lea
out
mov
test
pushf
jne
jmp
jbe
and
test
mov
mov
mov
mov
inc
xchg
push
and
add
je
cmp
stos
lea
cmp
adc
out
mov
sbb
sbb
icebp
cs
dec
push
ja
push
mov
clc
add
test
aas
add
je
das
je
sub
pop
test
repnz
out
ins
iret
push
retf
ja
adc
add
pop
lds
fcomp
sbb
sub
je
addr16
(bad)
in
rcr
les
jmp
imul
xchg
add
sahf
add
adc
pmaxsw
mov
mov
in
call
or
jo
xor
loope
cmc
stos
add
je
inc
ret
sub
call
add
push
pop
enter
ds
lock
fsubrp
mov
iret
jg
mov
mov
inc
ins
je
mov
or
adc
icebp
iret
rcr
prefetchnta
sti
pop
jmp
cmp
dec
cpuid
sbb
repnz
stos
xchg
adc
xchg
lods
mov
xlat
xcrypt-ofb
cmps
stos
nop
adc
je
ret
outs
shl
mov
push
mov
mov
loop
std
push
cmp
je
or
leave
and
or
push
or
fldcw
xchg
nop
add
sub
xor
sbb
push
adc
mov
daa
and
push
ins
and
push
ins
fs
add
pop
int
shl
ins
cmp
push
or
stos
xchg
and
or
push
shl
das
push
push
or
test
mov
sub
jns
ss
dec
xor
inc
jne
push
pop
add
xchg
add
setne
cmps
dec
xor
neg
add
adc
int3
jl
xor
in
adc
pop
pop
and
sub
adc
ret
dec
enter
xchg
cmp
and
int3
ss
stc
add
call
add
ss
js
shr
jg
pop
mov
jns
stos
sar
push
dec
pop
shl
mov
into
ja
dec
inc
hlt
jae
sub
pop
cwde
dec
or
jo
imul
(bad)
fbstp
pop
push
or
fdivr
shl
push
sub
inc
push
inc
xchg
inc
push
push
push
cmp
rcr
or
repnz
dec
shl
je
xchg
push
es
loopne
lods
jp
rcr
scas
sbb
sub
inc
dec
adc
lds
mov
xchg
jns
mov
rol
out
push
inc
iret
push
pop
inc
loopne
or
fstp
mov
retf
cmps
push
ret
test
out
mov
clc
cmp
pop
inc
cmp
jbe
pop
adc
mov
stos
mov
inc
je
mov
aam
adc
xchg
adc
scas
(bad)
sbb
cwde
inc
adc
retf
mov
das
imul
push
adc
lahf
adc
add
movs
jo
mov
sbb
xchg
adc
out
inc
add
and
aam
js
dec
push
add
sbb
call
add
adc
mov
mov
jne
jge
add
and
test
rcr
mov
sti
push
push
sbb
xlat
jp
inc
movs
call
das
pop
out
fwait
movaps
mov
push
sar
jmp
jne
adc
bound
or
mov
and
pusha
inc
test
cmp
xchg
shl
adc
cmp
jne
xor
aam
clc
retf
sahf
mov
or
mov
jo
dec
daa
mov
aas
int3
mov
cmps
movs
sbb
push
pop
fsubr
add
or
push
mov
cmp
retf
icebp
sub
push
fldenv
repz
cdq
sub
xor
imul
mov
cwde
sbb
add
daa
xchg
pushf
xchg
ins
ret
mov
sub
sbb
ss
sbb
and
mov
adc
dec
mov
nop
and
add
inc
sbb
daa
pusha
loope
(bad)
and
popf
adc
jg
xor
int3
sbb
adc
mov
dec
pop
ficomp
enter
and
dec
jb
push
mov
(bad)
(bad)
js
repnz
imul
mov
je
xchg
out
xchg
push
push
or
jnp
jge
xor
push
inc
or
in
add
or
xchg
pop
ss
jo
fisttp
mov
or
dec
js
pop
test
xor
add
mov
adc
jp
outs
js
outs
jp
test
push
push
sub
fdivr
jmp
mov
cmp
jae
push
call
jne
add
pop
and
fs
jp
sub
jno
cmp
push
inc
rcl
mov
pop
jle
adc
pop
pop
inc
push
adc
pushf
sbb
or
sar
jb
dec
mov
test
mov
call
dec
mov
mov
cmc
sbb
pop
jne
push
and
add
fcomp
leave
popa
pop
int3
sbb
or
cld
or
inc
adc
mov
sub
push
jbe
pop
xor
retf
cmp
in
sub
mov
pop
pop
sub
dec
inc
stos
fidivr
inc
inc
in
lods
mov
fidiv
inc
jne
jne
or
stos
jmp
push
xchg
fld
ret
xchg
dec
(bad)
dec
push
add
loopne
pop
mov
jmp
call
jmp
pop
add
add
stc
into
mov
in
mov
cmp
and
loop
int
stos
cmp
jns
push
push
push
add
ins
sbb
int
add
fsubr
arpl
movhps
pushf
pop
inc
iret
ins
dec
and
lea
icebp
push
pusha
inc
sub
rcl
add
pop
ret
xor
dec
dec
push
cmp
push
nop
pop
dec
ins
in
mov
jbe
sbb
scas
mov
cwde
add
sbb
push
fwait
add
push
push
xor
addr16
rcl
push
mov
and
inc
test
push
xchg
xchg
and
mov
xchg
xor
pushf
xor
cmps
stos
icebp
fisttp
push
out
xor
aaa
test
add
fiadd
iret
in
pop
sub
gs
mov
sub
jb
cmp
cld
fadd
loopne
adc
(bad)
addps
or
test
adc
add
movs
call
dec
and
stos
arpl
dec
xchg
push
xchg
push
stos
pop
push
pop
out
adc
jae
xchg
scas
(bad)
and
int3
pop
scas
bound
mov
or
int
sub
or
push
push
and
or
push
fwait
jmp
lahf
jo
pop
call
and
cwde
sub
inc
fs
push
dec
cmp
xor
push
jnp
jmp
xor
inc
pop
push
jg
scas
mov
and
lock
add
push
shr
aam
stos
jp
mov
popa
xchg
test
or
xor
inc
stos
push
je
push
mov
or
or
xor
popa
fs
push
addr16
ret
sti
push
leave
mov
sub
jb
aam
mov
adc
add
push
fadd
push
and
test
mov
mov
add
pusha
mov
jmp
into
push
add
jmp
jb
pushf
or
sub
call
pop
xchg
sar
shl
out
or
sbb
push
sub
pop
ins
xchg
xchg
test
shl
push
pop
add
(bad)
fcom
adc
xchg
jge
test
retf
jl
pop
mov
ss
inc
cmp
add
push
pusha
mov
push
inc
mov
test
aam
add
mov
mov
inc
add
adc
adc
push
(bad)
sub
and
xor
xchg
jle
push
call
mov
pop
rcr
imul
(bad)
daa
loope
ja
sub
jmp
sbb
fs
popf
gs
fs
mov
fs
pusha
pop
fs
dec
inc
cmp
xor
and
in
fs
add
cmps
imul
retf
cmps
imul
adc
xor
rcl
sbb
shl
dec
push
xchg
add
xor
(bad)
sbb
and
cld
fadd
sbb
rcr
and
je
loope
in
repz
mov
je
dec
lods
dec
jne
push
mov
enter
fadd
add
push
sbb
(bad)
push
xchg
pop
lea
cmp
adc
mov
lahf
out
adc
and
mov
inc
mov
sub
mov
xor
sub
mov
inc
loopne
pop
jmp
jne
ffreep
mov
push
leave
pop
and
xchg
das
mov
add
adc
sub
les
dec
cmp
xor
fiadd
sub
mov
fidiv
pop
push
into
xor
push
xchg
fwait
or
push
cwde
sub
push
dec
and
and
and
inc
add
and
js
mov
push
repnz
cli
call
imul
clc
inc
mov
int3
aam
or
data16
es
scas
in
inc
inc
mov
stc
ss
call
sub
fsubr
adc
div
adc
push
jo
pop
lods
lea
lods
pushf
ja
and
lea
movs
int3
jle
or
pop
adc
sub
fadd
mov
mov
aad
cmp
inc
dec
pop
adc
jl
jl
fwait
xor
sub
mov
pop
or
lods
imul
and
push
jne
adc
mov
add
and
ins
icebp
inc
and
mov
sahf
retf
outs
retf
sub
mov
mov
shl
je
mov
push
or
fnsave
xchg
cld
jo
fcom
adc
fmul
push
push
push
and
sub
mov
xor
out
jo
je
push
cmp
and
or
add
and
sub
xor
mov
jb
and
xor
mov
mov
cdq
or
fist
or
jl
and
cmp
ror
cmps
stos
rol
dec
dec
icebp
dec
adc
xor
mov
adc
push
adc
add
sub
lods
not
and
mov
push
imul
sub
push
sub
sbb
scas
or
mov
mov
mov
mov
js
pop
mov
mov
add
push
add
div
pop
iret
in
or
adc
pushf
and
xchg
jo
add
sbb
stos
(bad)
add
sbb
imul
inc
or
dec
adc
dec
add
sbb
ficomp
fidivr
xchg
jg
inc
cmps
bound
mov
add
ja
lock
lds
hlt
push
outs
neg
add
jge
jne
add
pop
sbb
inc
sbb
mov
int
and
and
clc
xchg
mov
pusha
int
fld
push
stos
or
jp
sbb
js
adc
xchg
adc
xor
mov
sbb
add
push
je
mov
sbb
push
mov
cmp
sub
and
and
cmp
ss
sbb
push
mov
aam
cmps
ja
or
and
jp
dec
hlt
aad
fist
sbb
rol
adc
popf
lods
push
add
pusha
and
or
sbb
mov
inc
xor
out
push
icebp
xchg
mov
fnstsw
call
or
push
push
hlt
call
inc
pushf
sbb
add
add
cmp
aas
pop
mov
movs
pop
push
gs
jb
mov
cmp
dec
das
outs
movs
push
add
je
or
sbb
stos
jp
xor
jae
add
es
and
pop
mov
pop
inc
rol
and
and
test
add
inc
mov
jg
cmp
lea
inc
pop
bound
xor
aas
mov
jnp
and
inc
inc
jp
dec
cmp
dec
les
out
jae
adc
imul
or
or
push
and
dec
mov
jp
in
xor
xchg
xor
data16
xor
(bad)
aam
pop
push
pop
mov
fiadd
or
pop
push
pop
mov
sbb
imul
mov
adc
pop
cmp
mov
adc
adc
or
mov
daa
and
movs
inc
inc
jg
pop
jo
add
adc
add
aaa
add
or
or
mov
and
mov
cmp
or
jecxz
cmc
push
nop
pop
lea
xor
cdq
add
add
push
sbb
and
out
adc
setge
test
xchg
rcl
loope
lea
cli
or
sti
mov
ret
jl
and
jbe
or
mov
mov
xor
push
and
and
push
mov
or
mov
adc
dec
sar
adc
ficomp
test
loopne
and
add
mul
and
and
mov
in
in
lods
sahf
jbe
cmovl
inc
push
adc
in
das
test
ror
shl
sbb
movs
adc
xchg
xchg
pop
call
push
icebp
fidiv
adc
dec
loop
push
stos
push
scas
xor
inc
xchg
fsubr
mov
inc
mov
sub
(bad)
sub
jo
ret
push
push
cmp
push
pop
js
idiv
jg
adc
enter
xor
aam
mov
adc
or
mov
push
rcl
jmp
test
push
push
ret
loop
stos
mov
push
(bad)
sbb
and
pop
pop
inc
xor
or
xor
out
mov
mov
lods
sbb
je
pop
(bad)
cld
(bad)
cmp
je
cmp
je
cmp
je
cmp
xchg
cmp
je
ret
lds
(bad)
fdiv
(bad)
adc
scas
pop
or
adc
sbb
and
or
pusha
(bad)
adc
mov
mov
xor
sbb
adc
mov
addr16
out
in
sbb
mov
sbb
sbb
sbb
mov
pop
add
xor
stc
adc
or
pop
rcr
push
enter
lods
sbb
cmp
sub
mov
jns
mov
or
xchg
fdiv
loopne
or
push
adc
cmp
cld
dec
inc
loop
add
sub
jmp
xor
mov
and
test
sar
and
xchg
jmp
jmp
sbb
sub
inc
in
mov
out
iret
inc
adc
or
mov
and
movs
test
push
rcr
lock
xor
mov
mov
adc
sar
inc
sub
mov
sbb
mov
lods
rcr
idiv
sub
(bad)
mov
pop
shl
cmc
fdiv
(bad)
mov
dec
out
mov
push
xchg
xchg
nop
nop
or
les
test
jne
or
and
add
mov
add
sub
cmp
inc
inc
cwde
lock
popa
out
cmp
adc
loope
inc
xor
push
cmp
(bad)
mov
cmp
mov
pop
inc
out
add
sbb
pushf
mov
add
cmp
ds
jge
mov
adc
add
sti
and
adc
adc
iret
xchg
push
sbb
adc
out
cmp
mov
inc
xchg
mov
aam
shl
inc
movs
div
rcl
lahf
mov
in
pushf
dec
pushf
pop
cwde
or
popa
or
lods
pop
sbb
inc
xor
jae
pushf
xor
dec
popa
and
mov
(bad)
dec
pop
rol
pop
mov
or
adc
push
xchg
xchg
add
pop
pop
adc
xchg
sub
in
inc
out
popf
jl
mov
sbb
(bad)
dec
mov
rcr
mov
push
jne
cli
fs
cmp
in
scas
(bad)
je
mov
fdivr
retf
je
mov
sub
cmps
stos
repnz
or
icebp
mov
outs
sbb
addr16
xor
push
addr16
test
and
test
call
ja
sbb
pop
sub
xor
add
sti
adc
xor
daa
or
sub
pushf
xor
cmp
xchg
in
(bad)
push
push
push
push
enter
mov
and
jne
scas
inc
push
or
adc
add
lea
mov
rcr
jle
rep
ins
mov
push
push
sbb
cmp
aam
pop
jno
push
push
jbe
sub
push
scas
add
add
fcom
das
jbe
lock
daa
mov
xchg
mov
push
push
shr
cmp
ja
ins
ja
dec
shl
add
push
or
xchg
pop
jge
sub
lods
mov
push
addr16
pop
pushf
std
or
pusha
repnz
not
jmp
mov
ja
sub
(bad)
repz
inc
cld
cli
test
adc
movs
dec
scas
adc
or
or
arpl
or
sti
je
and
les
pop
loop
inc
loop
in
jne
stos
in
movs
loop
mov
push
in
aam
or
sub
mov
sbb
in
add
cmp
jecxz
pusha
gs
mov
or
pop
aad
pop
mov
push
into
shr
sub
push
dec
cmp
mov
or
inc
and
add
lods
ficom
sub
loop
jnp
add
xor
jno
inc
jle
lea
and
jbe
cmp
sbb
arpl
rcr
(bad)
push
add
mov
scas
call
mov
js
jg
mov
mov
or
sbb
sbb
add
sbb
dec
rol
push
jg
test
ret
imul
mov
outs
dec
push
xchg
sbb
pop
(bad)
add
sbb
test
push
add
dec
lahf
sbb
add
xor
lods
add
push
jmp
popf
or
outs
or
jg
jmp
pusha
or
push
jbe
sbb
push
push
mul
call
add
add
jae
out
popa
and
push
lock
push
je
inc
addr16
add
outs
and
pusha
dec
test
into
inc
repnz
or
(bad)
sbb
xor
cmp
or
inc
cmp
pop
shr
ins
xor
or
adc
es
add
add
push
inc
in
sub
inc
lahf
adc
arpl
inc
test
add
inc
or
out
hlt
mov
shl
jmp
sti
or
and
punpckhdq
mov
adc
and
add
ud2
xor
or
outs
imul
pop
jmp
aas
idiv
pop
sub
inc
loop
mov
sub
or
push
ror
aad
inc
iret
adc
add
or
enter
in
jge
pop
ret
js
push
ins
add
adc
cmp
loop
imul
mov
outs
sbb
adc
dec
sub
push
ror
or
unpckhps
mov
not
mov
loope
(bad)
xor
int
aas
cmp
add
int
inc
je
sbb
push
fstp
mov
push
out
and
test
stc
fadd
and
and
jno
loop
or
mov
lods
adc
ins
rcl
cmps
mov
test
lods
sub
dec
and
test
(bad)
pop
ret
sti
adc
pop
dec
mov
or
mov
enter
sbb
push
adc
in
jnp
cmp
dec
pop
sbb
repz
mov
dec
cmp
aam
add
clc
mov
clc
sub
mov
hlt
cmp
je
sbb
pop
in
(bad)
mov
inc
push
add
rcl
sub
or
push
jbe
fwait
shr
fsubr
loopne
vmread
imul
xchg
mov
daa
adc
or
call
cmp
js
pop
pop
mov
imul
test
jae
adc
or
pop
push
add
pop
push
xor
test
iret
mov
add
cmps
jp
push
sub
(bad)
and
cmps
int3
pop
pop
mov
inc
test
and
mov
pop
fist
ins
ins
push
pop
stos
inc
test
push
test
and
outs
ret
cmp
xor
ds
inc
ret
jg
and
dec
xor
out
aam
inc
shl
push
shl
fsubr
sub
dec
jg
mov
jge
sub
pop
add
inc
mov
es
xor
test
inc
retf
inc
shl
dec
sub
mov
mov
ret
jb
push
movs
and
dec
push
(bad)
xor
push
push
jle
fimul
(bad)
or
inc
dec
cmps
call
push
sub
or
pop
sub
adc
bound
cmp
out
lahf
mov
push
sbb
adc
clc
dec
push
add
and
push
data16
dec
push
xor
cmp
(bad)
jno
mov
add
xchg
bound
cld
jle
ins
jp
mov
in
pop
sub
xchg
jns
inc
inc
ss
push
and
mov
shl
push
jl
nop
imul
sub
pop
jmp
sub
inc
dec
shl
mov
(bad)
adc
clc
inc
push
std
or
pop
sbb
inc
mov
xor
pop
cmc
imul
push
mov
outs
nop
int
lods
add
sahf
sub
(bad)
mov
daa
iret
rcl
add
push
add
clc
imul
cld
add
cmps
xor
sahf
sub
int
test
push
inc
scas
add
int3
repz
adc
or
rol
mov
or
mov
jmp
add
dec
add
in
add
add
sub
and
pop
mov
xor
push
cmps
gs
or
stos
jbe
adc
inc
xor
scas
cmp
xchg
adc
lahf
push
or
xchg
adc
imul
mov
adc
sbb
outs
das
mov
adc
push
or
inc
and
mov
out
fnstsw
sbb
pop
arpl
push
jl
and
mov
mov
out
sub
xchg
adc
lods
test
das
xor
adc
jge
add
pop
enter
cmp
push
or
sbb
sbb
mov
xor
repnz
and
add
xchg
iret
enter
add
pop
and
mov
pop
pop
repnz
jg
int3
fcom
add
in
mov
(bad)
add
sub
hlt
push
hlt
push
mov
jbe
outs
scas
push
ins
jbe
ret
or
pop
std
call
cvttps2pi
or
dec
pcmpeqw
jmp
mov
cdq
test
pop
mov
sbb
cmp
lods
sbb
call
pop
pop
sub
scas
popf
xchg
inc
pop
or
pop
rol
cmp
push
(bad)
sbb
inc
xchg
inc
mov
push
or
and
fild
inc
jecxz
sti
ds
add
adc
add
or
popf
xchg
sbb
or
test
inc
add
add
and
push
xor
sete
fst
cmp
xor
add
aaa
pop
add
sub
cmps
or
cmp
add
dec
xchg
and
push
push
dec
lods
rcr
add
sbb
addr16
je
je
push
out
add
(bad)
sub
and
dec
xor
cmp
cmp
jb
mov
movs
and
cmc
xchg
xchg
iret
mov
shl
test
adc
in
mov
retf
sub
add
lock
aaa
call
jno
mov
rol
pusha
cwde
push
mov
pop
and
jae
or
pop
pop
jle
nop
adc
je
icebp
pusha
cli
xchg
mov
xor
call
sbb
lock
jle
mov
push
mov
push
les
push
push
mov
lock
or
(bad)
xchg
mov
sbb
ror
call
sbb
cmp
mov
add
pop
outs
dec
je
cmp
ja
cmp
and
mov
mov
fcom
adc
xchg
dec
test
adc
xchg
rcl
add
jnp
mov
pop
jbe
icebp
push
and
push
or
enter
call
cmp
fistp
sbb
and
in
and
adc
enter
mov
sbb
and
cmp
jns
rcr
fadd
out
or
add
pop
xchg
stos
fs
fistp
dec
aam
or
jp
adc
pop
out
scas
icebp
lods
test
int
xor
or
mov
fs
inc
test
inc
imul
mov
and
jbe
lahf
or
div
jp
dec
rcr
mov
adc
push
or
or
adc
loop
(bad)
into
sahf
pop
inc
pop
sub
clc
sbb
les
mov
jge
in
aas
and
xchg
shl
test
cdq
jne
mov
nop
scas
push
inc
and
adc
mov
ds
dec
lock
xchg
mov
or
pop
pop
je
movsx
mov
enter
shr
add
sub
test
int
lahf
add
xor
sub
popf
push
xor
xor
dec
(bad)
and
inc
pusha
fcom
scas
movs
sub
dec
sub
mov
mov
cwde
sbb
or
or
cmp
daa
mov
iret
push
xchg
lods
fsubr
sub
mov
mul
mov
je
push
call
in
mov
and
mov
mov
push
ds
aaa
add
outs
fisubr
jmp
aaa
mov
push
adc
aad
adc
mov
inc
adc
ror
mov
mov
or
ss
sbb
fmul
test
mov
mov
cld
lds
(bad)
jmp
add
sbb
or
mov
iret
pop
and
adc
pusha
cwde
ins
inc
in
js
or
sub
in
dec
je
sub
dec
lahf
dec
mov
aaa
xchg
jne
popa
scas
(bad)
mov
mov
mov
inc
je
xor
adc
or
push
cld
adc
pusha
ss
adc
(bad)
pop
mov
dec
je
xor
adc
ja
add
mov
or
aaa
inc
bound
jge
push
or
adc
push
and
add
les
je
push
enter
jg
or
jl
mov
add
fstp
jo
enter
push
or
pop
cmp
jne
mov
mov
pop
call
and
imul
mov
mov
dec
pop
das
adc
xor
std
or
mov
shr
add
call
jl
pop
add
sub
out
sbb
out
popa
add
or
add
sbb
jno
out
inc
bound
jecxz
add
dec
lock
ret
add
retf
mov
mov
push
bound
and
jge
aas
jo
bound
idiv
rcl
sub
lock
sub
out
(bad)
test
(bad)
mov
clc
in
cmp
sbb
or
pop
or
or
adc
mov
je
daa
aas
int3
jl
lea
pop
cmp
pop
jg
or
jl
xor
push
dec
push
push
xchg
lea
mov
or
xchg
or
cmps
xor
push
ret
xor
jne
sar
push
xor
repnz
test
cld
dec
push
sbb
sub
inc
xor
mov
imul
clc
sbb
jle
frstor
jne
cmp
ret
cmp
mov
sub
movs
dec
push
jl
fdiv
push
popf
adc
add
push
nop
mov
cmp
iret
lahf
mov
mov
adc
pop
rcl
xchg
pop
sbb
dec
add
add
sbb
pop
push
jae
pop
sbb
pop
add
test
jne
add
inc
or
adc
adc
inc
adc
push
sbb
inc
and
or
daa
push
into
(bad)
mov
sub
and
xchg
inc
push
fimul
jmp
push
sub
sub
pop
popa
adc
mov
aas
lds
pop
add
int3
popf
out
xor
adc
maxps
call
sub
dec
test
add
adc
je
das
les
(bad)
pop
sub
jmp
xchg
ror
dec
mov
push
and
loop
je
cmp
push
ds
jmp
push
aam
fs
(bad)
neg
cmp
adc
push
fcmovnb
push
test
push
push
mov
adc
push
pop
sbb
adc
mov
clc
push
inc
fist
call
mov
inc
imul
jbe
fs
jp
ret
or
sbb
nop
sbb
addr16
push
dec
fst
mov
fld
cmp
cmp
aad
jne
cmp
add
jne
inc
add
loope
inc
mov
sub
inc
shl
mov
inc
sbb
pop
add
mov
sbb
xor
cmp
xor
dec
xor
adc
sub
pop
mov
mov
test
daa
cwde
push
fistp
mov
add
inc
test
mov
ins
push
push
sub
inc
sub
sub
leave
pop
pop
por
mov
in
nop
mov
sbb
sbb
push
test
cmp
cwde
inc
xor
data16
inc
outs
mov
push
push
or
mov
rcl
push
stos
clc
ins
or
cmp
addr16
mov
push
push
xor
push
dec
inc
dec
les
inc
push
add
test
cmp
jnp
dec
(bad)
xor
or
or
jecxz
dec
cmp
jge
mov
lods
xchg
mov
mov
sbb
movs
int
jnp
and
xlat
mov
pop
sbb
jnp
sbb
retf
je
(bad)
mov
adc
mov
les
cmp
jb
pop
pop
les
ret
outs
das
xchg
and
sbb
movs
push
jge
inc
mov
or
sbb
lods
push
iret
sub
pop
cmp
and
icebp
cmp
inc
sub
rcr
push
xor
and
add
and
add
sub
mov
mov
cmps
imul
dec
test
nop
jns
add
aad
rcl
jo
and
cmp
jle
int
push
and
mov
ins
push
add
xchg
xor
mov
mov
popf
push
push
add
pop
dec
mov
push
test
sahf
loop
and
nop
xlat
ins
push
(bad)
enter
sbb
mov
in
shr
and
push
add
push
and
jb
dec
add
pop
mov
add
or
add
lds
mov
add
rol
ins
inc
mul
adc
or
push
dec
iret
aas
and
push
add
xchg
nop
shl
leave
into
mov
push
add
pop
movs
jo
jae
fbstp
cmp
je
add
pop
rcr
iret
dec
push
push
inc
sbb
fild
inc
daa
inc
push
imul
push
push
push
jnp
adc
mov
xchg
(bad)
rcl
xor
pop
aad
stos
ficom
out
push
adc
inc
pop
and
push
pop
add
inc
jo
loopne
cmps
inc
push
shr
iret
push
jp
push
xchg
push
cmp
dec
das
inc
ror
lahf
inc
in
pop
sbb
rol
or
fadd
cmc
mov
repz
jae
or
cmp
ss
les
jae
cmp
jae
aaa
sub
add
sbb
(bad)
mov
push
sbb
inc
(bad)
je
and
cmps
xor
push
jp
ret
push
clc
add
add
pop
adc
rol
sub
mov
pop
fstp
add
jns
sub
dec
pop
inc
inc
jne
push
cwde
mov
jbe
pop
mov
xchg
add
pop
sbb
adc
mov
adc
adc
push
xchg
add
mov
add
adc
and
outs
js
sar
js
sbb
or
xlat
lock
mov
push
cmp
jmp
cmp
pop
test
ffree
adc
int3
dec
rcl
iret
xor
iret
push
or
pushf
aad
je
xchg
hlt
adc
les
jo
mov
dec
rcl
xor
cdq
add
push
mov
rol
or
ret
jge
ds
movsx
add
push
out
mov
mov
mov
dec
add
adc
or
sbb
pop
in
adc
cmp
push
sub
(bad)
sbb
mov
dec
fcomp
fcmovbe
stos
pop
pop
jno
xchg
fimul
dec
ror
push
stos
leave
out
outs
add
dec
lea
inc
sub
and
or
cdq
add
inc
push
js
call
aas
xchg
enter
inc
lods
mov
xlat
sti
push
sub
imul
mov
sub
sub
cmp
lahf
push
mov
sysret
inc
mov
mov
inc
cmp
jl
sbb
aaa
cmp
cmp
mov
or
arpl
inc
add
dec
or
not
adc
ss
xchg
lds
pop
add
inc
ret
push
push
dec
pop
jae
push
add
or
sub
pop
fiadd
or
stos
loopne
pop
cwde
mov
cwde
push
rol
div
mov
sub
push
and
test
cld
add
push
cmp
sub
inc
push
mov
out
ret
add
les
adc
or
cmp
mov
test
(bad)
push
adc
push
std
xchg
push
loop
xchg
test
xchg
pop
mov
cmp
sub
mov
jl
sbb
cmp
xchg
test
pop
mov
scas
rol
and
or
pop
push
fwait
les
push
or
push
cmp
mov
cmp
std
inc
je
jne
mov
pop
push
dec
add
or
mov
ret
adc
inc
ret
adc
ins
enter
or
(bad)
dec
into
push
add
push
retf
sub
pop
add
add
lods
cmp
je
pop
nop
jmp
cwde
jne
sub
shr
ins
jge
push
push
push
push
mov
xchg
pop
push
sahf
push
and
inc
and
sub
xchg
mov
add
dec
push
add
aad
xchg
xchg
mov
push
imul
shr
js
jne
aam
outs
rcr
mov
leave
in
(bad)
pop
sub
jb
aam
push
cld
leave
into
push
scas
cld
inc
pop
or
es
xchg
int
and
sub
fldenv
stos
pop
pop
cdq
rcl
outs
in
aad
push
inc
call
data16
int3
mov
push
les
ss
fwait
xchg
mov
movs
push
ins
dec
jo
xchg
imul
jle
enter
add
mov
push
pushw
xor
repz
adc
cmp
in
inc
cmc
push
jg
(bad)
outs
imul
inc
push
ins
dec
inc
jne
sbb
(bad)
push
push
or
loope
cwde
mov
in
retf
cmp
mov
gs
sbb
xchg
mov
outs
mov
sub
(bad)
adc
mov
add
sar
mov
int
outs
inc
and
imul
mov
xchg
sbb
ins
adc
add
loop
sub
sbb
pop
mov
push
mov
dec
lds
adc
loopne
pop
mov
add
jno
sbb
leave
add
mov
es
or
test
pop
ja
add
jb
fs
ja
adc
test
sbb
daa
mov
aas
xor
mov
cld
pushf
test
je
sbb
and
mov
add
sbb
nop
js
sub
push
xchg
clc
push
push
nop
int3
jle
mov
mov
inc
mov
test
enter
pop
stos
fisttp
cmp
ja
test
push
push
je
inc
inc
mov
scas
jnp
adc
sub
gs
cmps
imul
dec
dec
inc
mov
sub
jne
adc
push
sbb
or
in
dec
cdq
lods
mov
(bad)
fsubr
add
jno
xor
loope
je
fs
xor
dec
or
add
rcr
add
add
lock
add
das
add
push
sbb
rcl
mov
pusha
sbb
addr16
lods
loope
rsqrtps
int
mov
push
repnz
leave
mov
xor
out
hlt
cdq
xor
outs
xchg
push
fs
and
inc
xchg
rcl
and
and
push
mov
and
inc
push
sbb
push
sub
or
add
sbb
or
pushf
mov
push
mov
push
mov
mov
and
and
push
syscall
data16
push
shl
lods
mov
enter
mov
adc
gs
adc
fnstsw
mov
or
arpl
xchg
push
ret
push
mov
sub
inc
lods
mov
jmp
popf
sbb
dec
jbe
mov
in
sbb
lods
sti
adc
inc
push
sbb
inc
outs
jle
sbb
dec
in
pop
not
xor
cmp
sbb
inc
mov
sub
add
push
and
sub
mov
push
push
cmp
mov
mov
or
or
or
jge
jmp
scas
aad
add
add
add
cmp
xor
rol
jno
out
es
ins
sub
pop
push
ror
test
adc
jne
and
in
shr
ret
aas
fsubr
hlt
xchg
shl
or
(bad)
repnz
sbb
fst
sbb
adc
fld
mov
push
cmps
jle
mov
mov
(bad)
jl
jg
sbb
mov
shl
xchg
int3
rol
inc
add
cs
std
sbb
adc
and
mov
xor
sbb
js
and
inc
vmwrite
xchg
imul
jmp
mov
push
add
pop
lds
push
jg
adc
push
call
inc
cs
mov
dec
enter
add
push
push
stos
mov
xor
in
push
aaa
adc
mov
dec
scas
sub
or
aam
pusha
(bad)
lds
and
pushf
add
rol
inc
or
test
lods
daa
int
cmp
fidiv
int3
mov
xor
sub
nop
push
mov
dec
(bad)
mov
mov
cmp
repnz
adc
jbe
or
jne
sbb
add
adc
push
call
inc
clc
add
push
push
push
and
add
jl
je
dec
sbb
loop
mov
(bad)
or
jb
shl
outs
ret
aas
add
jmp
(bad)
rol
rol
sahf
pop
aad
out
arpl
jae
sahf
sti
pop
push
push
leave
push
push
mov
or
push
xor
dec
cmp
enter
push
(bad)
pop
and
sub
cmps
cmp
scas
ret
je
in
mov
mov
jl
sar
pop
jnp
xchg
ret
outs
push
div
mov
push
jmp
iret
jl
inc
push
ins
inc
scas
test
push
out
xchg
inc
enter
cmp
sub
pusha
leave
xchg
or
push
je
fst
ret
xchg
pop
popa
cmp
cmp
mov
adc
rcr
out
sbb
mov
pop
mov
mov
push
sbb
sub
(bad)
adc
imul
add
sub
add
mov
push
je
inc
or
mov
pusha
js
add
fstp
sbb
inc
pop
push
pop
dec
leave
mov
popf
loopne
push
lahf
aam
or
adc
push
or
rol
dec
add
sub
push
jbe
fsub
fimul
or
and
push
jb
and
inc
pushf
fwait
nop
das
jl
fdivr
or
mov
pushf
push
mov
and
push
adc
pop
sbb
xor
adc
dec
push
js
popa
cmove
out
or
sub
add
mov
cmp
inc
adc
mov
out
fsub
push
add
cmp
cmp
cmp
fwait
sbb
dec
sbb
shl
mov
adc
retf
sub
sbb
ins
and
mov
stos
cmp
push
push
rol
cmc
fcom
jb
xor
add
and
in
jle
xchg
ins
or
dec
dec
push
adc
std
xor
lea
mov
add
inc
cmp
inc
mov
aaa
pop
cmp
add
sti
inc
inc
adc
popf
mov
sub
and
sbb
sbb
daa
daa
sar
and
fistp
pop
push
adc
mov
sub
rol
adc
pusha
inc
mov
inc
into
mov
adc
sub
shl
or
ins
inc
push
sbb
add
sub
mov
pop
mov
and
xchg
xchg
mov
inc
pop
cmp
pop
mov
add
cs
inc
adc
scas
push
xor
stos
loopne
xor
test
inc
cli
shl
call
in
shr
add
cld
and
push
xlat
(bad)
or
test
ja
or
repnz
sub
jo
popf
out
push
idiv
mov
neg
cmp
pop
mov
add
call
xor
add
adc
pusha
add
out
inc
daa
pop
xor
mov
(bad)
adc
les
mov
or
dec
icebp
add
jae
movs
cmp
or
jne
sub
jns
add
rcl
sub
fadd
fs
sbb
jg
or
cmp
xor
mov
mov
xchg
add
add
xor
add
daa
add
mov
mov
dec
sub
sub
sub
xchg
pop
pop
test
add
inc
ret
(bad)
fcomp
and
rcl
and
into
xchg
inc
push
add
sub
xor
outs
(bad)
add
data16
jbe
out
mov
sbb
mov
int
adc
or
sbb
mov
dec
adc
sub
add
add
pop
push
cmp
jb
pop
add
push
les
adc
jmp
push
aad
(bad)
mov
in
and
out
xchg
shl
sbb
inc
std
xchg
cmp
and
push
xor
sub
popa
xchg
cmovs
inc
aaa
call
les
inc
pop
aas
mov
inc
sbb
lea
push
movs
es
xor
and
add
mov
ret
rol
add
mov
jg
sub
cmp
je
dec
aam
xchg
in
cmp
cli
mov
retf
adc
mov
repz
pop
push
sbb
pop
and
add
in
call
push
mov
push
inc
cmps
inc
mov
cmp
loopne
fbld
gs
adc
push
mov
sub
cmp
inc
cmc
inc
push
pop
dec
stos
push
add
pusha
inc
fldcw
sti
pop
dec
fcomp
dec
push
je
dec
lods
movs
mov
cmp
xor
pushf
lock
push
pop
test
xchg
sbb
jmp
sbb
inc
cmps
push
lods
lahf
mov
mov
mov
push
mov
aaa
mov
or
(bad)
es
adc
cmp
retf
and
and
aam
mov
iret
cmp
test
ins
sbb
outs
dec
jle
les
lea
pop
mov
arpl
push
jne
push
lods
cmp
pop
xchg
and
push
call
es
inc
dec
mov
rcr
or
or
shr
sub
mov
int3
or
push
pusha
or
mov
adc
inc
add
inc
scas
pop
iret
sbb
add
cmc
je
ror
les
mov
and
xlat
mov
add
rol
add
cmp
ins
add
out
test
push
popf
xchg
dec
test
add
cmp
jle
add
das
jmp
stos
and
leave
gs
cmp
mov
add
mov
shr
pop
je
fsub
fld
pop
push
xchg
lea
adc
add
jbe
mov
and
mov
adc
retf
adc
xchg
add
or
pushf
or
mov
push
loopne
xor
and
mov
scas
pop
jae
sub
push
retf
imul
mov
push
icebp
dec
pop
hlt
mov
add
lock
retf
pop
aas
das
mov
sbb
rcr
add
fs
enter
pop
sub
cdq
pop
xor
stos
add
add
shl
les
test
les
push
and
in
sbb
pushf
adc
push
in
inc
xlat
mov
das
lods
mov
xor
push
mov
and
pop
push
and
inc
nop
adc
sti
or
mov
jge
mov
push
jns
loop
call
add
rol
mov
inc
or
jmp
loopne
push
mov
jp
adc
sub
or
dec
xlat
pop
add
add
cwde
movs
nop
xchg
add
pop
inc
mov
ret
push
jge
pop
add
mov
xor
stc
add
sub
jecxz
shl
xor
clc
inc
add
xchg
cmps
es
jmp
xchg
adc
xchg
lods
andps
ror
and
dec
fisttp
push
pop
(bad)
loopne
in
dec
sub
or
cmp
xor
sbb
adc
mov
xlat
sub
or
loop
rcr
add
int
inc
or
pusha
popf
sar
xchg
inc
xchg
mov
pop
push
inc
mov
dec
or
(bad)
push
shr
push
add
and
xor
mov
add
or
dec
loop
mov
adc
(bad)
or
dec
adc
mov
bswap
lods
mov
sbb
sqrtps
mov
add
out
and
je
and
inc
adc
dec
push
aad
call
lock
scas
mov
pop
sbb
inc
gs
lods
cmp
pop
adc
mov
mov
pop
rcl
mov
mov
ror
mov
mov
and
ret
test
out
add
and
cmc
sub
or
mov
out
std
test
in
fsubr
push
pop
(bad)
adc
ror
(bad)
shr
fs
aad
fmul
push
test
push
ficom
shl
push
mov
adc
and
fidiv
out
mov
inc
sti
rcr
and
jo
mul
add
push
xchg
adc
push
shl
xchg
pop
add
int3
push
mov
test
sbb
add
push
lds
icebp
xor
neg
dec
movs
cli
dec
pop
mov
fimul
adc
cmp
mov
call
scas
pop
adc
mov
mov
call
push
in
inc
cmps
xchg
jnp
or
or
rol
mov
push
ss
add
mov
(bad)
lods
push
push
test
cmp
pop
dec
jp
adc
pop
mov
stos
jmp
pop
add
retf
bound
pop
cs
cmp
xor
rcl
add
nop
push
cmp
jnp
pop
xchg
js
adc
mov
sbb
mov
and
adc
inc
leave
adc
and
addr16
int
pusha
imul
nop
add
xchg
mov
int
jmp
push
inc
stos
shr
sbb
dec
outs
xor
push
pusha
and
sbb
in
cwde
add
lea
repz
and
dec
or
mov
jae
je
jne
and
and
ins
or
leave
xor
xor
cdq
or
sbb
jg
and
jl
nop
inc
push
and
adc
and
jl
jl
adc
mov
jg
pop
mov
fdivrp
jns
nop
cmps
jmp
pushf
pop
adc
cli
outs
or
adc
enter
fsub
pop
mov
push
js
fs
in
jmp
paddsb
lds
neg
sub
les
xor
mov
jnp
pushf
daa
or
mov
and
sbb
sbb
xchg
inc
push
shl
jmp
clc
pusha
mov
hlt
inc
xor
dec
push
mov
mov
xor
mov
xor
and
cld
inc
xchg
test
pop
sub
inc
sub
sti
xor
sahf
mov
sbb
loopne
xchg
mov
nop
sub
pop
pop
repz
add
fdiv
add
push
in
jge
js
cmps
cmp
pop
mov
push
push
mov
icebp
sbb
mov
cmp
lods
jne
adc
or
mov
mov
adc
pop
mov
daa
push
or
shr
enter
mov
neg
loopne
loopne
sbb
push
and
sbb
adc
dec
inc
and
push
ins
enter
pop
mov
dec
mov
pushf
call
lahf
test
popf
xor
inc
mov
out
xor
sbb
or
or
mov
mov
lds
pop
xchg
or
sub
xor
xor
fidiv
ret
cwde
jp
sbb
das
mov
das
(bad)
push
mov
dec
js
inc
test
pop
fs
cmp
xor
lahf
popf
sub
xchg
mov
ins
outs
cld
sbb
lea
push
adc
mov
mov
sbb
add
add
xchg
mov
push
dec
adc
push
jo
lea
push
leave
and
mov
addr16
jle
cmp
or
and
adc
push
in
push
push
in
adc
mov
icebp
mov
pushf
inc
inc
dec
out
mov
xor
cld
pop
cmp
inc
fadd
push
push
sbb
and
(bad)
fmul
(bad)
push
pop
fsubr
shl
push
cwde
inc
int3
leave
sub
fs
out
cmp
aad
sub
(bad)
jns
aam
or
push
iret
mov
loopne
icebp
pop
imul
push
or
into
mov
ret
jbe
push
cmp
arpl
arpl
jne
sub
cmp
scas
adc
jnp
shl
sbb
int
clc
rcr
inc
shl
imul
or
xchg
sub
inc
mov
jne
pushf
add
(bad)
or
pop
mov
jae
pushf
out
clc
or
push
addr16
mov
loope
pushf
jne
mov
test
fcom
push
push
aaa
imul
imul
mov
mov
cmp
cmp
fidiv
mov
loopne
(bad)
jmp
lea
lea
sahf
pop
mov
cmp
in
sbb
mov
(bad)
out
jmp
loopne
jmp
das
cmp
jge
or
cmp
cmp
cmp
cld
adc
add
or
and
shr
sar
adc
push
aas
sub
or
loopne
jge
sub
push
ss
mov
cli
bound
push
add
(bad)
push
das
dec
sbb
jno
pop
dec
add
aas
mov
dec
add
sbb
dec
dec
mov
pop
mov
mov
adc
jg
push
sar
or
push
sbb
mov
mov
xor
mov
cmp
pop
test
jo
adc
push
adc
dec
sar
pop
mov
cmp
cmp
adc
push
shl
fld
and
in
int
mov
push
add
adc
cmc
scas
mov
movs
movs
add
mov
mov
inc
inc
imul
add
addr16
bound
shr
pop
inc
xor
fld
cld
cmp
div
adc
lds
xor
push
ins
jne
test
ret
pop
aam
movs
and
fisttp
or
pop
icebp
inc
mov
fwait
inc
jmp
hlt
sbb
add
cmp
and
add
daa
icebp
adc
sub
daa
mov
fs
dec
inc
xor
jp
pop
sbb
add
inc
xor
nop
or
xchg
sub
push
mov
and
adc
xchg
cmp
sub
sbb
data16
sub
iret
mov
and
outs
jle
pop
lahf
cmp
mov
sub
ror
or
shl
sub
mov
fcomp
adc
shr
mov
inc
rcl
test
jns
sub
jnp
push
cmp
push
adc
inc
add
xor
adc
sbb
inc
enter
xchg
inc
adc
int3
and
(bad)
ret
mov
push
mov
inc
lods
adc
fwait
aad
mov
lods
aaa
pusha
and
mov
aam
mov
push
jmp
add
cmp
jbe
cld
cld
ins
ss
or
and
mov
ds
fs
enter
jmp
push
jle
inc
shl
or
add
add
lock
ret
(bad)
pop
or
imul
mov
fcom
rcr
les
mov
pop
inc
int
jmp
ss
add
jno
add
in
inc
inc
mov
(bad)
lods
stos
sbb
loope
or
xor
push
and
popf
push
sbb
and
aad
repz
stc
push
or
adc
sbb
mov
push
or
or
mov
cmp
add
rcl
mov
sbb
sub
sbb
push
or
loope
hlt
int3
and
leave
dec
pop
lods
xor
dec
sub
mov
inc
test
jmp
sub
or
or
sub
adc
mov
loopne
and
push
sub
mov
cmps
ret
mov
mov
pusha
sbb
pop
inc
popa
pop
cmp
inc
add
dec
mov
dec
xor
outs
sbb
fs
fld
ja
or
dec
add
pusha
add
pop
jl
mov
pop
dec
sbb
and
sahf
xor
pushf
add
enter
sbb
xor
(bad)
and
jno
add
enter
push
ret
inc
lock
push
outs
test
test
push
push
jno
jne
addr16
sub
fist
sbb
mov
lods
adc
mov
mov
or
mov
inc
dec
mov
movs
das
and
mov
sahf
or
push
push
push
data16
loope
xchg
xchg
add
sbb
pop
sub
sbb
sbb
and
leave
sbb
pop
(bad)
lods
nop
fs
sbb
lahf
out
inc
dec
push
adc
sbb
sbb
das
pop
pusha
and
sbb
inc
jb
mov
int
into
mov
js
xchg
pop
push
push
and
push
dec
add
movs
jge
add
pop
adc
push
xchg
out
js
mov
xor
int3
ins
or
lea
cmp
and
mov
adc
leave
jne
xor
or
sbb
add
test
jbe
jne
mov
adc
mov
repz
clc
psrad
sub
xchg
sub
mov
adc
adc
int
inc
sbb
inc
addr16
add
pcmpgtd
movd
sub
sub
adc
lds
mov
(bad)
pop
mov
adc
lock
fdiv
aaa
push
leave
pop
mov
test
jmp
adc
push
or
pop
pop
xchg
out
aad
push
or
xchg
sbb
push
adc
mov
pop
dec
push
or
add
mov
pop
xor
pop
push
dec
sub
cmp
adc
cmps
xor
add
push
cmp
adc
je
adc
(bad)
(bad)
clc
leave
mov
jne
mov
ror
cmp
sbb
xor
mov
(bad)
pop
xlat
add
mov
push
psubd
push
sbb
inc
push
sbb
repz
or
adc
call
mov
daa
jnp
repnz
icebp
sub
or
adc
push
fwait
imul
fst
push
push
push
mov
movs
les
sbb
out
xlat
test
xor
or
sbb
push
lea
shl
sub
in
sbb
push
in
sbb
push
pop
and
inc
lds
xlat
int
adc
cmovbe
stos
push
scas
int
mov
sahf
mov
scas
mov
pop
mov
dec
cwde
pop
push
add
inc
imul
push
or
dec
ja
jo
loopne
push
ds
mov
adc
add
mov
push
or
jno
mov
or
jbe
test
pop
mov
mov
nop
or
mov
out
dec
push
adc
test
cmps
in
jp
xor
or
aam
pop
push
sub
mov
push
jl
mov
inc
dec
sbb
mov
push
call
push
call
dec
cmp
and
mov
jo
inc
add
push
scas
rcr
lock
js
je
push
pop
call
push
jo
mov
ss
inc
adc
mov
test
cmp
push
mov
mov
pop
mov
inc
and
sub
pop
(bad)
inc
and
movaps
xor
aas
push
sti
and
sbb
adc
pop
pop
cmps
jae
mov
adc
das
cmp
ss
jb
cmp
jmp
jl
push
adc
inc
sub
hlt
sahf
loope
mov
cli
jb
mov
fsubr
inc
daa
mov
and
sub
rcr
sbb
cmp
add
ret
call
push
add
xor
loop
adc
mov
das
sbb
add
test
pop
inc
and
outs
lods
sub
cmp
add
cmps
jne
inc
iret
or
mov
shl
cmc
mov
or
xchg
mov
retf
mov
pop
dec
add
ficom
jg
les
or
test
push
rcl
add
(bad)
ds
mov
rol
dec
add
cwde
cmps
outs
pop
and
shl
in
pop
mov
fsub
dec
xchg
inc
or
adc
or
push
add
not
push
into
and
and
mov
loopne
dec
and
push
mov
and
add
or
xchg
and
jecxz
ins
push
xchg
into
sub
xor
(bad)
arpl
stos
shl
push
pop
jns
xlat
fdiv
dec
(bad)
push
bound
mov
jge
out
push
or
cmp
mov
popa
dec
xchg
ins
sbb
or
mov
(bad)
or
stos
push
fisub
mov
mov
mov
test
pop
pop
sti
add
retf
dec
push
push
ror
cld
movups
fiadd
jno
lods
pushf
sbb
stos
into
aas
pop
push
in
js
pushf
cli
ficomp
pop
add
pop
outs
rol
cmp
adc
cmps
ret
fmul
cdq
or
rol
fs
cmp
inc
mov
shr
sub
or
and
call
or
popa
adc
ficom
sbb
add
adc
cmp
enter
stos
xlat
scas
pop
push
or
test
je
int
jae
pusha
sbb
xor
pushf
xor
xor
cmp
inc
hlt
mov
imul
xor
out
cmp
or
dec
int
jae
ins
dec
pop
push
inc
pop
or
daa
push
es
pop
mov
int
push
pop
sub
sbb
dec
and
mov
ds
cmp
je
xor
das
add
sub
and
retf
retf
fcmovnu
sbb
dec
je
add
je
push
je
push
mov
adc
je
inc
pop
pop
pop
pop
pop
push
pop
adc
aam
les
cmp
mov
add
sub
mov
retf
and
xor
sub
mov
cmp
dec
dec
push
sub
mov
push
pop
pop
ret
mov
pusha
add
sbb
test
stos
pop
cmps
pushf
xor
push
or
mov
je
cmp
push
gs
xor
dec
dec
xchg
or
popa
sbb
push
xor
ror
dec
push
aaa
pop
and
sub
sub
push
jne
sub
push
lock
push
xor
out
addr16
out
or
ins
ror
rcl
adc
int
mov
mov
pushf
rol
arpl
push
mov
and
pop
or
jbe
pop
outs
dec
pop
push
or
push
push
or
sbb
or
or
mov
xchg
add
push
or
or
ss
stos
aaa
int3
in
or
push
inc
dec
iret
lss
idiv
inc
push
push
leave
and
or
in
or
cmp
cmp
mov
dec
push
cdq
and
adc
inc
cmps
add
mov
fdivr
dec
push
lods
movs
in
sub
cmp
push
pop
dec
cmp
stos
xchg
inc
sub
mov
nop
sub
mov
jb
mov
sub
fs
pushf
test
cdq
and
stos
xchg
inc
cmps
dec
cmp
nop
sub
cmp
mov
lock
mov
pop
adc
cmp
sbb
loopne
sub
sar
ret
cwde
and
aam
add
push
cmp
jmp
and
cmp
pusha
shl
movs
cmp
les
fs
popa
in
scas
or
enter
daa
(bad)
cld
adc
cli
push
pushf
sbb
pop
cmp
call
mov
xor
adc
test
push
pop
(bad)
adc
dec
lods
add
and
cmp
loop
adc
or
xor
sub
cmp
int
aad
inc
pushf
(bad)
aas
retf
mov
push
imul
test
inc
shl
call
adc
outs
scas
or
cmp
iret
push
int3
mov
sbb
mov
icebp
pop
dec
push
ins
and
inc
mov
cmp
or
inc
pop
and
std
cs
push
aad
lock
mov
pushf
push
and
push
jg
dec
push
push
mov
fstp
push
adc
dec
push
jb
push
jb
js
lods
sub
jbe
jnp
or
hlt
or
xor
push
pop
jmp
xchg
mov
addr16
push
movs
sti
inc
imul
aad
push
loope
int
call
icebp
add
mov
xchg
mov
lds
push
mov
ror
not
ror
shl
add
out
jmp
pop
sub
jecxz
jmp
jle
ja
push
add
push
ins
adc
inc
push
push
xlat
ins
add
(bad)
stos
and
dec
int
adc
jge
int3
push
or
jne
xor
xchg
mov
nop
ret
sbb
ins
gs
adc
loope
pushf
jne
dec
adc
xor
add
push
dec
dec
jmp
sbb
adc
push
push
sbb
cmc
sbb
dec
sub
dec
push
test
xor
into
into
gs
fmul
add
das
arpl
(bad)
push
pop
sbb
movs
rol
sub
test
fmul
pop
jb
add
mov
mov
push
add
mov
test
inc
jl
sub
inc
adc
(bad)
sub
add
ret
ficomp
mov
imul
pop
je
addr16
aas
ins
pop
in
inc
jae
add
sub
push
scas
sti
mov
movs
mov
mov
mov
mov
sar
jge
xchg
mov
mov
fwait
lods
inc
push
mov
adc
add
cwde
call
xchg
and
fist
in
in
or
push
inc
xchg
rol
and
xchg
sahf
test
push
sbb
mov
and
add
stos
sbb
xor
mov
test
loopne
sub
inc
daa
call
push
rol
cmps
sub
lods
xlat
push
sub
or
retf
mov
adc
pop
inc
mov
xchg
outs
fld
xor
std
sbb
cmp
data16
add
pop
ins
inc
jg
xchg
xchg
jmp
popa
pop
push
push
adc
fisttp
push
rcr
sub
inc
add
iret
sbb
cmp
iret
pop
inc
sub
test
cmc
pop
add
sbb
or
or
and
shr
jbe
or
and
xchg
cwde
rcl
jno
add
inc
jae
aam
jle
mov
xor
jmp
hlt
dec
push
mov
push
repnz
lock
data16
adc
dec
xor
in
jmp
fimul
ins
shl
inc
test
(bad)
fcmovb
jne
cs
dec
sub
and
jge
jbe
mov
adc
jae
push
movs
add
into
sbb
mov
xor
pop
adc
jp
or
inc
outs
and
call
jle
sbb
adc
xchg
(bad)
push
into
push
movs
call
push
dec
retf
cld
ret
sbb
std
add
test
add
scas
xlat
in
adc
push
sub
aas
mov
jl
sub
cld
lea
mov
aas
dec
loopne
or
xchg
push
ja
mov
mov
mov
adc
(bad)
jle
mov
add
mov
cvtps2pd
imul
push
mov
daa
fld
add
add
imul
and
sti
add
add
add
nop
movs
in
xor
add
lods
push
dec
jg
test
in
movs
pop
adc
mov
adc
xchg
and
fstp
popf
in
and
and
hlt
rcr
and
clc
cld
push
add
add
xchg
sub
les
push
frstor
lods
or
add
xor
mov
pop
div
test
lock
mov
test
pop
ins
mov
cdq
or
cmp
pop
mov
pop
sub
jo
mov
and
sub
ins
and
clc
push
cdq
mov
cwde
inc
xor
sbb
cmp
push
mov
or
fldcw
enter
inc
xor
jns
ror
adc
push
xor
push
les
dec
mov
and
loop
cmp
dec
mov
ret
adc
nop
pop
xor
fcom
ror
mov
in
sub
push
add
dec
push
push
jne
mov
cmps
cmp
into
dec
inc
jecxz
adc
stc
mov
fnstsw
fmul
xchg
fs
mov
xchg
retf
call
cmp
xchg
and
inc
repnz
scas
sbb
dec
inc
adc
push
and
dec
mov
xchg
pop
out
or
in
sbb
and
rcl
cs
push
loope
(bad)
mov
(bad)
retf
and
xchg
ds
push
inc
mov
dec
xor
cmp
jnp
int
xchg
or
sbb
adc
(bad)
int
push
and
leave
jle
cmp
mov
jb
adc
sub
addr16
mov
les
push
or
mov
push
retf
les
cmp
or
lds
cs
bound
rol
dec
add
bound
xchg
jmp
sbb
xchg
jne
push
or
rcl
mov
push
mov
sbb
jb
dec
push
push
(bad)
sbb
xor
mov
lds
pop
imul
cld
add
xchg
pop
cwde
ins
jmp
add
inc
(bad)
jb
scas
nop
inc
push
dec
sub
es
es
pop
sub
jbe
aaa
sub
loope
jp
or
push
inc
std
int
add
mov
push
pop
mov
mov
sbb
dec
pusha
push
mov
pusha
push
and
push
xchg
mov
sbb
push
sbb
nop
(bad)
sbb
clc
into
push
xchg
mov
cmps
outs
cmp
(bad)
call
les
inc
loop
xor
cdq
nop
bound
ficom
xchg
dec
sub
add
push
mov
nop
sbb
mov
cmp
jno
aam
into
sbb
pop
pop
cld
jae
fs
daa
push
xchg
xchg
shl
pusha
sbb
add
fsubr
add
mov
inc
dec
dec
push
(bad)
sbb
int
add
xor
cmp
jl
jbe
pusha
jne
mov
push
adc
push
sub
imul
pop
outs
xor
mov
jne
adc
mov
rol
mov
mov
iret
lods
or
test
push
es
call
pop
leave
sbb
dec
push
stos
jmp
pop
push
fdiv
cli
inc
jno
add
ins
xlat
mov
or
push
stos
jmp
aad
test
sub
ja
scas
xor
jmp
jg
mov
inc
jl
adc
adc
(bad)
dec
push
pop
enter
push
push
(bad)
sub
test
mov
pop
popa
dec
rol
call
push
stos
in
retf
shl
icebp
les
sub
sbb
clc
jae
inc
std
aad
(bad)
cmp
xchg
and
jne
in
test
cmp
outs
stc
mov
add
adc
pop
add
push
in
or
lods
adc
das
lods
outs
cmp
aam
push
or
pop
xchg
push
clc
cmp
fbstp
nop
nop
mov
mov
sbb
adc
cwde
inc
xchg
popa
mov
fs
ret
push
inc
push
add
jne
sub
fadd
mov
push
out
dec
pop
cmp
sub
sbb
pop
sbb
ins
bound
cmp
fstp
cs
add
out
push
pop
iret
sub
push
xor
lds
ret
popa
cmp
cs
mov
test
popa
dec
add
cld
loope
jmp
mov
lahf
push
mov
pop
movs
das
mov
pushf
(bad)
(bad)
add
push
jle
sub
cmp
sub
rol
je
adc
add
or
add
or
inc
sbb
lea
ror
and
and
cmp
test
add
stos
arpl
fs
or
adc
pop
rcl
cld
(bad)
cmp
jns
xor
add
mov
inc
jmp
call
pop
outs
and
cmp
mov
pop
and
dec
push
adc
shr
jne
test
push
leave
push
shl
rcl
xchg
sbb
in
xor
xor
or
stos
popa
out
sahf
loopne
mov
inc
xchg
pusha
pop
retf
cmp
pop
add
and
inc
adc
mov
mov
fwait
sub
jnp
jno
inc
adc
xchg
pusha
or
dec
mov
push
add
stos
dec
mov
mov
aam
stos
inc
ds
push
fldenv
jo
dec
push
pop
cmc
sub
sbb
enter
push
jae
add
pop
fmul
sbb
(bad)
repz
lahf
rol
push
rol
aaa
mov
inc
jne
cmp
cmp
jb
(bad)
je
push
mov
adc
cwde
cwde
push
mov
mov
hlt
fs
xor
cmp
lea
mov
push
and
add
jns
mov
jmp
add
jmp
in
enter
add
add
push
call
je
les
xchg
ds
popf
(bad)
(bad)
mov
or
pop
and
aad
add
(bad)
bound
outs
pop
or
or
inc
and
bound
int3
inc
adc
cmp
jle
pop
xor
outs
jmp
aam
adc
pop
loopne
retf
ss
xchg
cmp
and
mov
jo
push
pop
inc
ds
in
xor
push
and
enter
dec
sub
and
add
inc
mov
cmp
or
dec
rol
jnp
fmul
iret
mov
ins
mov
xchg
xchg
inc
xchg
adc
mov
xor
test
or
dec
mov
push
adc
xchg
adc
retf
lahf
fs
repnz
jmp
cdq
xchg
xchg
add
mov
adc
iret
gs
aaa
mov
push
inc
ss
sub
jbe
push
les
mov
pusha
(bad)
retf
adc
add
xor
sub
sub
adc
mov
xor
in
(bad)
add
pop
push
push
lods
pop
push
xor
ficom
pop
das
stos
call
daa
mov
sub
push
pop
out
fs
jg
lea
mov
adc
sbb
dec
enter
aas
and
inc
daa
dec
xchg
cld
dec
inc
mov
xor
push
push
sti
loope
loopne
push
adc
call
or
iret
adc
fmul
jnp
mov
arpl
outs
pop
test
jmp
adc
push
add
jmp
push
and
fs
(bad)
pop
int
fbstp
mov
repnz
sub
in
sub
icebp
pop
pusha
and
fst
mov
add
into
out
push
cmp
ins
jmp
imul
add
add
add
push
pop
arpl
and
add
mov
add
mov
or
scas
sub
and
and
nop
push
push
or
(bad)
retf
pop
adc
adc
loopne
jle
movs
ds
sbb
ret
inc
sbb
icebp
push
dec
mov
jne
adc
push
dec
aaa
push
bound
into
stos
push
add
pop
cld
push
scas
adc
add
and
push
jle
stos
into
add
adc
mov
mov
push
fsubr
scas
push
je
retf
adc
jne
jmp
add
push
push
out
outs
and
push
cli
cld
int
ss
test
int
push
ret
sub
dec
push
inc
push
lods
inc
cs
adc
push
imul
sbb
and
jp
xor
test
xchg
add
sub
pop
sbb
inc
cmps
jle
mov
sar
out
and
xchg
test
sar
adc
icebp
into
xchg
in
adc
inc
aam
iret
dec
push
(bad)
shl
dec
mov
adc
out
stos
or
fisub
push
inc
and
dec
ret
mov
dec
sahf
out
idiv
sub
xor
(bad)
mov
push
mov
push
jb
test
pop
push
mov
sbb
pop
mov
nop
push
dec
mov
cwde
int
mov
ret
jmp
clc
int3
sbb
inc
xchg
inc
xchg
dec
and
sar
fcom
mov
adc
push
stc
adc
and
add
fwait
enter
rol
in
cld
inc
push
mov
rol
cmp
or
in
les
adc
js
pop
cmp
or
sbb
mov
nop
es
push
rol
add
pop
mov
and
je
rcr
xor
add
mov
loopne
iret
retf
cmp
pop
bound
sub
mov
sahf
mov
mov
ds
or
sbb
xor
scas
sbb
jb
inc
cmp
sahf
sbb
dec
aam
push
inc
pop
add
sub
je
push
inc
sub
fsub
pop
jg
add
xor
std
sbb
icebp
jae
push
xchg
mov
loope
dec
adc
push
inc
pop
adc
ss
pop
pop
sbb
iret
hlt
pop
loopne
jmp
test
test
inc
fadd
cmps
aam
mov
push
cmp
add
add
mov
xor
mov
(bad)
shl
xchg
pop
pusha
cdq
or
mov
add
cmp
add
push
cwde
sub
adc
aas
and
push
push
outs
or
sbb
ja
jg
mov
arpl
push
ins
push
cmp
pop
ret
ror
icebp
gs
and
xchg
add
aas
mov
or
pop
and
sub
inc
mov
sub
inc
jae
xor
sti
xor
dec
cmp
inc
mov
shl
xor
push
inc
inc
dec
add
inc
lea
xabort
xchg
hlt
scas
sbb
sbb
mov
xchg
push
cmp
inc
cmp
scas
int
xor
or
add
dec
xchg
sub
lahf
inc
inc
aad
sub
cmp
push
mov
jecxz
aaa
cmp
adc
or
mov
push
movs
gs
pop
xor
mov
and
outs
push
sub
fisttp
mov
mov
adc
xor
mov
or
movs
nop
xor
push
rol
scas
shl
rcl
fs
pop
ror
sub
adc
js
push
sar
xor
sbb
cmp
inc
sub
int
cmp
popa
inc
ret
sub
in
lds
aam
push
mov
ret
movs
nop
cmps
or
add
cmp
xor
test
add
dec
xor
cmp
or
cmp
lahf
cmp
vsqrtpd
or
xor
test
or
mov
call
fstp
es
adc
out
adc
shl
mov
leave
push
pop
add
rol
popa
mov
push
shl
cmp
add
loope
dec
fucomp
rcl
loope
mov
cmc
and
adc
or
jae
fst
add
mov
jnp
and
nop
aam
sbb
or
hlt
mov
dec
and
loop
or
mov
adc
jp
sbb
xchg
push
add
xor
push
adc
cld
and
push
xor
aam
add
dec
dec
dec
or
sub
loopne
adc
enter
pop
add
fadd
inc
dec
bound
scas
imul
arpl
ins
shl
cwde
dec
dec
xchg
add
lahf
xor
inc
pop
mov
fcom
cli
pop
xor
inc
or
fld
cwde
add
mov
dec
test
ss
xor
lea
cmc
push
daa
xor
inc
or
inc
jae
lds
adc
mov
ins
add
or
test
ret
mov
dec
call
mov
pushf
push
mov
test
mov
jnp
daa
mov
add
mov
pop
adc
sub
adc
adc
adc
dec
and
call
inc
adc
mov
fmul
push
or
mov
and
scas
sub
add
pop
adc
in
std
inc
je
test
push
mov
movups
repnz
hlt
or
sub
and
add
test
cmp
inc
or
xchg
in
add
inc
inc
mov
popa
pop
dec
neg
into
sahf
or
and
inc
sub
pop
and
xor
aaa
fisttp
cmp
aam
adc
push
jae
mov
mov
mov
mov
cmps
and
and
or
nop
inc
imul
nop
adc
and
adc
pop
add
je
movsx
push
(bad)
adc
mov
pop
cs
add
sbb
jecxz
and
jbe
ret
or
ins
mov
push
in
rcl
cwde
pusha
sahf
inc
int
mov
mov
ret
push
add
and
or
sar
test
or
loope
add
fld
push
pop
mov
adc
add
lock
out
sbb
or
xchg
pop
add
sub
bound
shl
retf
js
leave
je
cmc
sub
mov
jne
xchg
sbb
mov
data16
mov
mov
cmp
stos
cmp
sub
sbb
inc
add
arpl
adc
pop
and
or
and
inc
hlt
jo
xchg
and
mov
push
adc
je
lea
cmp
ds
ret
lods
dec
mov
push
nop
xchg
sbb
fnstsw
pop
push
enter
sar
mov
pusha
aas
sub
mov
mov
xlat
cld
xchg
jl
xor
jmp
mov
or
(bad)
cld
stc
gs
rcl
outs
jge
out
mul
dec
mov
cmp
hlt
fsub
ss
stc
stc
imul
das
mov
and
stc
sbb
or
pusha
add
pop
push
add
push
bound
shl
add
xor
xor
jbe
dec
imul
xchg
add
mov
mov
(bad)
add
dec
jecxz
push
and
add
add
addr16
inc
dec
push
pop
mov
movs
imul
add
add
or
inc
add
or
dec
and
aam
pop
push
out
add
stos
or
or
push
dec
imul
add
mov
stos
ret
sbb
fucomip
(bad)
xor
shr
mov
icebp
test
xchg
pusha
adc
adc
pop
sub
xchg
loop
pop
xchg
push
add
ror
push
fadd
mov
add
aam
dec
cmp
inc
jno
call
mov
sbb
mov
or
cmc
xor
inc
call
shl
sbb
fs
push
out
and
data16
push
inc
xchg
ret
pop
push
adc
dec
out
cmp
push
rol
pop
xor
push
fwait
mov
push
inc
data16
mov
add
cmp
xor
jp
aam
inc
mov
jmp
xor
add
cmps
and
mov
mov
or
push
cmc
data16
adc
xchg
clc
test
cmp
clc
xchg
ins
xchg
out
fs
push
outs
rcl
dec
sbb
cmp
jg
sbb
mov
adc
xchg
cmp
sub
jmp
cli
inc
push
mov
fnstcw
cmc
fmul
dec
lea
dec
ds
dec
push
push
aad
mov
sbb
push
jbe
or
and
(bad)
stos
jo
push
scas
dec
mov
add
data16
cmps
jmp
jp
xchg
add
add
and
dec
add
mul
inc
fisttp
std
push
aaa
pop
retf
xchg
add
push
adc
popf
out
jae
xchg
out
movaps
sub
cs
je
unpcklps
leave
fsub
rol
jne
aam
sub
mov
or
arpl
mov
pusha
and
add
mov
div
cld
inc
xchg
vpcmpeqb
pushf
sahf
mov
dec
dec
or
mov
sbb
xchg
dec
mov
int
inc
in
sbb
aam
mov
jp
retf
pop
adc
push
int
test
cld
dec
xchg
add
in
leave
and
and
movs
adc
retf
push
sbb
adc
pop
addr16
jb
test
jge
xor
add
mov
or
scas
adc
sbb
cmp
push
movs
cmps
adc
xchg
sbb
sbb
test
jle
cmp
(bad)
sub
(bad)
hlt
fs
xchg
sbb
test
je
ds
daa
sbb
xor
(bad)
jbe
imul
rcl
pop
pop
in
adc
ss
xchg
rcl
repz
mov
or
popa
push
or
sub
and
adc
or
(bad)
or
pop
push
push
(bad)
sbb
sbb
shl
pop
fdivr
aam
and
inc
adc
mov
dec
sub
iret
jmp
xor
mov
push
je
and
cmps
sbb
sbb
cmp
dec
enter
das
nop
inc
enter
xor
inc
jle
pop
push
push
add
push
lea
xchg
inc
inc
or
push
enter
test
sub
jmp
xor
sub
loop
dec
lea
cmp
shr
repnz
mov
mov
cmp
pop
(bad)
xchg
and
mov
mov
cmp
(bad)
or
in
sbb
mov
add
mov
cwde
sub
fwait
data16
xor
mov
or
cmps
push
or
pop
fsubr
sub
fmul
and
push
add
adc
mov
adc
icebp
cmps
repz
xlat
mov
or
das
push
adc
inc
hlt
pushf
push
scas
mov
jle
fsubr
imul
loope
lahf
imul
add
inc
or
jbe
fstp
or
scas
push
dec
push
push
pop
adc
mov
cmp
ror
sbb
sbb
sub
gs
ret
loope
fmul
dec
jo
mov
push
sub
push
mov
inc
je
xor
(bad)
rcr
jl
push
enter
sbb
arpl
xor
mov
gs
xchg
xchg
and
pop
jae
jmp
add
sub
mov
mov
adc
jmp
repnz
ror
lock
int
dec
lds
cdq
stc
je
mov
popa
addr16
xchg
sub
push
sub
xor
fcomp
push
or
mov
mov
lods
adc
mov
pop
jge
and
or
sub
daa
mov
push
mov
inc
movs
mov
and
adc
adc
mov
mov
das
fadd
adc
dec
push
nop
shr
into
mov
cmp
jb
pop
pop
or
push
fs
cmp
outs
std
sbb
cmp
xor
aaa
xchg
hlt
adc
mov
call
pop
add
(bad)
jmp
xor
lea
dec
fs
push
xor
cli
mov
pop
aam
ss
xor
in
aad
sub
jmp
cmps
push
dec
into
iret
mov
sbb
clc
cmp
les
cmp
xorps
ficom
xchg
(bad)
xchg
and
or
xchg
mov
loop
rcr
adc
mov
(bad)
or
jne
xlat
push
int3
retf
mov
pop
and
push
mov
and
lahf
push
xor
rol
jne
pushf
sar
or
aad
adc
les
ret
pop
test
loop
jo
pusha
inc
jae
cwde
je
mov
push
cmp
mov
dec
mov
cld
mov
xchg
push
mov
pop
imul
in
mov
inc
push
xchg
jbe
push
call
or
aas
arpl
cmp
test
aas
pusha
add
jne
mov
dec
sub
sub
stos
mov
dec
sbb
mov
jbe
sbb
pop
mov
lds
adc
sbb
pop
dec
add
cmp
jae
inc
fcom
nop
xlat
aas
pop
pop
dec
mov
imul
push
jae
je
push
lea
adc
clc
rcr
sbb
jbe
pop
inc
sbb
jmp
imul
push
push
les
test
mov
push
xor
movs
jne
scas
or
push
popf
in
test
mov
or
sub
ins
ins
add
or
pop
mov
push
test
or
pop
mov
aaa
dec
ror
lock
retf
pop
adc
stos
mov
retf
add
push
sbb
pop
xchg
or
mov
mov
mov
js
call
or
push
movs
andnps
cmp
xor
shl
jmp
xor
mov
inc
xor
mov
xor
mov
pop
xor
ret
dec
imul
pop
daa
pop
test
push
dec
push
and
and
aam
lods
dec
mov
push
mov
nop
lods
iret
loope
(bad)
or
xchg
out
int
mov
es
push
push
dec
xor
inc
addr16
jecxz
push
sbb
stos
loopne
push
adc
sub
add
stc
adc
add
adc
into
test
adc
cli
add
enter
xchg
inc
mov
aas
mov
dec
cmp
sahf
and
inc
into
test
leave
add
hlt
xchg
push
ret
ins
and
mov
mov
inc
mov
pmuludq
dec
rcl
pop
push
sti
sbb
jge
lds
ins
mov
adc
inc
les
test
sub
sahf
mov
cmp
daa
sub
inc
jo
mov
add
pop
push
cmp
xchg
xlat
and
popf
add
cmp
cmp
xchg
mov
repnz
ins
push
inc
sbb
out
jo
(bad)
adc
jo
shr
rol
data16
cwde
add
inc
pop
arpl
fld
js
stos
sar
jle
and
lea
push
mov
push
out
sub
jl
pop
mov
mov
jo
xor
fwait
nop
out
and
push
mov
mov
sbb
fdivr
push
mov
mov
les
imul
push
push
mov
pushf
jno
sub
dec
je
aad
loope
push
mov
sub
cwde
inc
inc
push
fnstenv
sbb
clc
cmp
je
dec
adc
xchg
cmp
sbb
shl
test
push
push
push
adc
xor
fild
mov
pop
push
ins
orps
sub
ret
push
rcr
or
jmp
je
cmp
or
or
mov
and
sbb
cld
xlat
inc
sbb
or
mov
jmp
mov
jmp
mov
sub
das
je
push
push
jge
xlat
add
push
push
mov
cmp
clc
adc
push
push
xor
mov
into
mov
mov
or
inc
push
outs
ret
loopne
sahf
xor
and
dec
movs
jp
pop
or
js
and
jl
(bad)
jp
hlt
add
mov
pop
add
jl
sbb
adc
cmps
enter
lods
and
(bad)
pushf
ins
cmp
jae
stos
adc
or
por
push
and
push
enter
ds
and
pop
jmp
push
and
jne
or
push
test
jmp
je
and
je
adc
fdivr
add
and
xor
in
mov
sub
fadd
add
data16
sbb
or
mov
out
adc
fnstenv
nop
add
sbb
xchg
sbb
cli
push
lea
sar
mov
cmp
imul
daa
pusha
and
push
dec
popa
movs
dec
ror
pop
pop
sbb
inc
lock
mov
or
pop
and
xor
xor
ss
push
out
int
syscall
(bad)
adc
push
addr16
cmp
(bad)
(bad)
jb
jg
or
or
dec
inc
and
fsubp
push
or
cmp
pusha
(bad)
mov
inc
mov
mov
xor
add
lock
xor
sbb
jge
retf
and
push
push
pop
repz
stos
je
stos
sub
push
dec
add
popf
pop
ins
xchg
ins
test
add
ror
pusha
adc
or
bound
add
jno
clc
ret
or
fnstenv
push
or
ret
xchg
pop
or
push
fldcw
adc
or
sbb
cmp
jge
popa
mov
fld
adc
xor
inc
sbb
push
push
adc
lds
jnp
pop
adc
adc
and
lods
add
adc
jge
xchg
push
aam
iret
and
ret
subps
add
retf
pop
js
dec
and
fs
shl
cmp
pushf
test
ret
or
add
je
arpl
inc
mov
cld
push
rol
xchg
pop
mov
in
pop
xchg
mov
data16
stos
jmp
out
mov
fistp
push
(bad)
push
sahf
pop
in
pop
pop
in
cmp
add
ins
and
mov
add
cmovb
mov
push
pop
scas
add
dec
or
out
mov
adc
push
mov
(bad)
or
in
sbb
pop
test
sbb
cmp
sbb
icebp
fcom
mov
call
stc
cdq
gs
push
cmps
pop
dec
or
push
adc
popa
lds
je
lea
mov
add
push
inc
xchg
add
sti
ins
inc
aad
lea
add
or
inc
pop
add
stc
add
push
push
fldcw
fist
icebp
xchg
cmp
out
bound
cmp
jg
daa
sbb
sbb
cmp
pop
add
daa
sub
shl
add
jno
in
push
pop
mov
sub
or
sub
lock
sub
sbb
ins
add
add
xor
inc
mov
loope
nop
in
adc
add
push
out
shl
push
adc
aas
stos
repz
pop
mov
cmp
mov
das
mov
mov
adc
cmp
jecxz
sbb
push
out
xabort
and
leave
fmul
push
cmp
or
or
mov
mov
fnstenv
xor
adc
push
mov
fisub
mov
push
add
retf
lahf
pop
inc
xchg
mov
cdq
mov
pop
aad
push
mov
dec
sbb
add
push
gs
xchg
mov
push
mov
xchg
push
arpl
pop
hlt
jo
ds
icebp
inc
push
sar
push
fisttp
mov
xchg
and
push
inc
imul
push
bound
addr16
add
and
push
pushf
dec
adc
cmp
mov
gs
dec
sbb
out
lock
cmp
fistp
or
push
adc
call
ja
enter
sub
mov
dec
xchg
daa
add
push
sub
sbb
sar
mov
adc
movs
push
add
daa
add
ficomp
int
popa
push
lock
fucomip
bound
jmp
retw
popa
mov
dec
or
push
imul
call
mov
scas
lock
cmp
sbb
push
adc
adc
mov
or
aam
add
and
cwde
add
xor
jecxz
in
jne
or
rcr
xchg
xchg
adc
xchg
xchg
adc
stos
adc
fwait
adc
jo
push
fimul
mov
push
loopne
add
and
dec
and
push
rol
and
xchg
xor
in
dec
inc
rcl
cmp
sar
mov
sbb
jmp
xchg
push
sub
add
add
scas
dec
stos
ja
push
push
jns
xor
stos
(bad)
enter
push
call
push
push
ins
stos
pop
adc
sbb
enter
add
or
or
(bad)
fidivr
inc
push
and
fidivr
movs
mov
cdq
inc
es
es
or
sub
add
mov
jno
fwait
add
cmps
(bad)
or
xor
dec
popa
mov
dec
shl
in
adc
sub
cmps
imul
push
iret
ins
and
sbb
push
jns
push
cmp
xchg
test
sub
add
push
add
pushf
ins
sahf
ficomp
add
jb
mov
inc
or
sub
sub
or
adc
ins
adc
fadd
shl
dec
stos
push
aas
mov
push
sahf
sub
mov
push
std
sub
mov
xor
data16
pop
int3
dec
add
test
jmp
or
sub
push
inc
pushf
scas
push
mov
mov
push
jmp
mov
xor
sub
rcr
pop
enter
out
out
push
pop
sbb
xchg
movs
in
adc
adc
push
fcomp
pop
enter
jnp
test
push
add
push
mov
pop
adc
(bad)
jg
int3
pop
mov
(bad)
push
xor
pop
sbb
add
cmp
pop
bound
lea
test
xor
fisttp
pop
shl
sub
push
inc
lods
push
add
pop
cmc
add
push
add
and
sub
cmp
movs
inc
dec
repz
shr
pop
sub
mov
imul
sub
cmp
push
mov
call
mov
dec
jne
inc
mov
inc
cmps
push
and
das
inc
cmp
push
sub
mov
out
mov
pop
dec
sbb
rol
or
lea
ror
and
retf
mov
dec
jnp
push
jge
and
inc
push
iret
fld
ror
cmp
mov
and
or
inc
aas
mov
sbb
loop
add
jg
add
cwde
inc
push
or
add
xchg
pop
add
xor
sub
push
shl
popa
in
stos
jne
jbe
dec
retf
mov
out
mov
xor
ins
add
ficomp
adc
mov
aam
inc
push
sub
mov
and
in
dec
call
or
das
jo
data16
add
jns
fxch
or
lock
adc
xchg
push
je
retf
or
sub
data16
inc
dec
mov
push
mov
jg
push
mov
repnz
adc
push
sbb
aam
push
retf
push
push
push
and
pop
dec
jmp
push
cmp
or
and
test
push
scas
(bad)
adc
add
or
push
and
lock
xchg
mov
add
mov
shl
ins
sbb
icebp
js
add
push
jle
arpl
add
and
idiv
movs
push
sub
test
xchg
xchg
out
ja
mov
add
xor
mov
sbb
inc
add
push
cmp
ror
mov
ret
add
sbb
ds
popa
adc
mov
cmps
xor
or
mov
and
popa
cmp
adc
pop
cmp
adc
shr
out
adc
and
ja
pusha
cdq
adc
adc
push
(bad)
adc
js
add
sbb
fisubr
or
xchg
cli
xchg
in
mov
xchg
inc
jno
pop
and
adc
pmullw
mov
shr
push
jmp
js
ret
ret
dec
and
or
imul
cs
jmp
das
sbb
ret
xchg
sbb
mov
xchg
jl
sbb
popa
cs
leave
or
cmp
dec
mov
fisttp
mov
push
inc
mov
sar
cld
aas
cmp
push
jmp
push
into
push
js
jbe
push
mov
aas
addr16
or
sbb
jns
xor
add
or
and
pushf
add
stc
aad
xchg
cmc
sub
mov
movs
test
sar
push
inc
out
add
add
pop
sub
fsubr
jmp
xchg
pop
lahf
stos
inc
and
mov
or
mov
pop
jmp
aaa
cwde
enter
push
push
cmp
add
call
out
jp
inc
sub
dec
mov
sbb
jae
bound
xor
mov
pop
sbb
jno
adc
adc
sub
retf
push
sbb
lea
jns
mov
test
mov
pop
or
into
fadd
jo
mov
mov
out
inc
cmp
(bad)
adc
cmp
mov
xor
leave
and
jbe
adc
sbb
sbb
test
test
mov
ret
out
cld
add
xchg
movs
lds
push
cmps
jae
sub
cmp
sbb
xor
and
and
stc
add
outs
add
mov
popa
dec
stos
or
jmp
push
sbb
sub
inc
cmp
mov
adc
lahf
cmovno
add
sbb
mov
jmp
cmc
mov
mov
pusha
imul
call
xchg
mov
je
pusha
jmp
fs
adc
sub
shl
cmp
ds
sbb
pusha
and
adc
lods
mov
add
jle
push
punpckhdq
in
mov
fs
jg
push
xchg
sbb
xchg
ins
inc
les
mov
inc
xchg
push
pop
jl
test
imul
sar
adc
push
in
nop
inc
or
js
movlps
or
or
leave
adc
scas
pop
movs
mov
imul
adc
mov
into
adc
jno
push
mov
inc
ss
fs
mov
shl
cld
int
loop
mov
std
mov
cld
dec
or
add
fadd
nop
or
dec
xor
adc
cmp
cmp
pop
addr16
add
push
hlt
ins
adc
mov
mov
inc
dec
sbb
mov
push
cmps
pusha
iret
aas
add
jno
inc
add
inc
mov
or
push
pop
xor
sbb
xor
adc
cmp
(bad)
push
call
inc
mov
ret
ret
das
mov
mov
int3
cmp
dec
or
adc
enter
mov
and
push
add
add
pusha
in
xor
sub
test
fs
dec
std
xor
repz
outs
and
inc
xor
loopne
popf
xchg
aad
mov
jg
mov
push
add
mov
in
jbe
ins
mov
xor
adc
add
(bad)
adc
call
fs
js
lds
popf
mov
call
and
adc
pop
into
mov
jmp
xchg
or
out
std
or
dec
inc
add
inc
inc
(bad)
inc
push
inc
inc
jbe
and
jl
or
sbb
or
mov
sub
test
(bad)
test
scas
push
pop
fist
setge
mov
or
and
lock
and
add
xchg
adc
jne
lea
sbb
pop
adc
add
in
cmp
(bad)
sbb
jmp
sub
inc
push
push
push
stc
push
jmp
push
push
pop
inc
ret
hlt
add
gs
icebp
push
jmp
pusha
push
push
rol
add
dec
xor
xchg
jne
mov
add
pop
mov
es
(bad)
jg
push
mov
inc
ja
shl
push
ds
add
repnz
mov
sbb
adc
and
and
sbb
mov
test
cmp
scas
or
mov
or
cmp
fs
test
enter
mov
sahf
mov
mov
push
push
push
dec
pushf
jo
add
js
ins
mov
dec
add
sub
ror
inc
push
push
push
inc
xchg
inc
add
clc
add
xor
and
xor
mov
pop
cwde
mov
adc
aam
enter
xchg
cs
lock
fild
add
test
push
push
inc
sbb
push
pop
ds
adc
shl
push
lods
push
sbb
adc
dec
inc
sub
push
je
push
lods
mov
and
jne
mov
sub
into
(bad)
push
jecxz
inc
push
ins
xchg
push
add
and
adc
es
push
inc
in
xchg
rcr
xchg
adc
push
fsubr
add
ins
lods
out
jne
mov
sahf
lods
minps
pop
push
inc
mov
adc
push
sbb
loop
xor
cmp
add
jne
pusha
push
inc
movs
out
and
fnsave
rol
push
adc
rcl
push
int
add
jecxz
adc
mov
aaa
and
push
adc
mov
jne
ins
mov
mov
xchg
hlt
jle
xchg
ins
inc
dec
ret
add
cmp
mov
cmp
mov
add
push
mov
add
jl
mov
xchg
adc
jle
push
inc
les
add
icebp
push
sub
cmp
aas
sbb
xor
inc
push
mov
or
adc
cmp
data16
es
add
fmulp
sub
lea
sub
push
mov
rcl
push
cdq
shl
shl
shl
aas
enter
or
mov
and
jae
and
ss
add
and
lea
sbb
or
add
lods
mov
add
dec
jnp
push
sbb
or
test
popa
mov
mov
sbb
out
dec
or
inc
pop
push
enter
adc
mov
and
cmp
add
xor
aad
sub
xor
aas
cmc
imul
test
mov
fcom
cmp
or
cmp
jnp
pop
enter
push
adc
xor
loopne
push
mov
cmp
lods
add
cmp
or
mov
add
div
mov
push
stos
sbb
xchg
pop
mov
fsubr
call
push
cs
adc
mov
sub
fnstcw
movs
daa
imul
xor
popa
xor
push
sbb
and
mov
test
sbb
ud2
(bad)
inc
and
popf
or
fisttp
setbe
bound
jnp
cmps
mov
push
xchg
das
pop
mov
jl
and
stos
jno
call
hlt
jp
sbb
jbe
and
test
ret
lods
sub
icebp
pushf
retf
leave
push
mov
sahf
dec
pop
shr
cmp
or
cmp
mov
enter
aad
ror
sub
and
into
push
xchg
xchg
and
dec
push
(bad)
push
mov
push
cmp
mov
(bad)
bound
in
es
imul
pop
xor
or
cmp
xor
cmp
cmp
or
mov
sbb
add
in
mov
out
cmp
sub
inc
cmp
jp
sbb
pop
mov
inc
test
sbb
mov
adc
lods
dec
not
sub
mov
mov
ret
and
xchg
mov
in
inc
push
jle
adc
mov
test
adc
pusha
jmp
xor
lock
test
das
sbb
push
loop
fmul
pop
mov
inc
push
jno
arpl
xchg
mov
std
jl
push
or
dec
inc
adc
pop
xchg
inc
cmp
xor
es
data16
or
jnp
jne
xor
or
pop
dec
push
sbb
mov
aas
jne
loope
adc
push
aaa
add
pop
xchg
call
push
out
add
xor
icebp
or
out
mov
sub
mov
movs
ret
sbb
inc
ficom
and
jns
(bad)
cmp
mov
push
xchg
jbe
and
lods
jp
pop
ss
mov
adc
and
inc
push
(bad)
jecxz
cmp
jne
cmp
js
test
cmp
sub
mov
movs
outs
or
dec
dec
push
les
fild
add
aad
fimul
cwde
ror
xchg
sbb
mov
lods
jle
mov
(bad)
call
stos
sub
jmp
mov
ret
fcomp
mov
jp
cmp
jo
fistp
dec
iret
add
dec
shr
and
sub
jae
mov
xor
add
xchg
mov
pop
out
push
lds
rol
push
sbb
pushf
mov
xchg
fcmovne
mov
mov
pop
push
or
leave
push
push
repz
mov
add
cmps
std
outs
jno
pop
retf
push
xchg
cmp
push
mov
mov
lods
loope
add
push
mov
ja
shr
sbb
sub
test
inc
daa
clc
xchg
jle
xchg
adc
inc
or
cmp
and
and
and
pop
or
adc
test
pop
sbb
inc
pop
ret
das
pop
sbb
sub
sub
adc
pop
add
sub
or
shr
adc
fldcw
and
jae
loopne
sbb
je
xor
push
mov
add
test
push
pop
xor
and
add
mov
jmp
and
cs
cmp
mov
inc
loopne
cmps
shl
jbe
add
dec
push
and
adc
sar
sbb
sbb
cmp
(bad)
(bad)
hlt
inc
mov
fdivp
int3
add
xor
test
adc
push
add
aam
sbb
mov
inc
pop
sub
jge
ret
jnp
push
aam
imul
push
xor
pop
jno
pop
push
push
ss
retf
or
arpl
mov
cdq
sub
xor
imul
sbb
jbe
and
inc
adc
loopne
mov
push
push
push
mov
test
add
lods
imul
and
punpcklwd
sub
jo
xchg
pop
or
loope
call
pushf
cs
push
in
inc
inc
shl
add
pop
xor
xchg
dec
aam
ss
pop
xchg
enter
fs
loopne
in
cmp
mov
rcr
hlt
xor
jne
fld
clc
fist
out
jb
cmp
cmp
les
jge
mov
sbb
push
adc
add
mov
adc
mov
adc
das
in
mov
push
ficomp
pop
sbb
or
adc
jmp
sbb
cmp
je
shl
xchg
inc
rcl
sbb
mov
pop
retf
pop
out
push
sbb
push
xor
pop
cmp
lds
dec
sbb
gs
cli
push
push
cmp
add
loopne
or
les
das
add
addr16
add
or
mov
mov
mov
xchg
leave
adc
in
loopne
xor
pusha
push
mov
xor
and
and
pop
(bad)
xor
push
mov
sbb
test
not
cmp
imul
rcl
cmove
inc
je
inc
pop
mov
or
inc
fistp
pop
mov
mov
out
add
dec
sbb
in
(bad)
dec
mov
cmp
add
retf
sbb
add
aam
pop
je
dec
cmp
inc
xchg
fiadd
dec
(bad)
out
scas
inc
xchg
push
mov
mov
push
popa
pop
xchg
jmp
xchg
or
cmps
in
mov
sub
or
or
and
movs
fst
cmp
loope
or
iret
inc
push
xchg
adc
fisttp
xchg
mov
sbb
sbb
fwait
dec
and
pop
fiadd
lods
cwde
and
jecxz
or
mov
test
push
pop
sub
sub
and
add
mov
hlt
or
or
dec
enter
nop
mov
sub
stos
inc
icebp
ret
xchg
mov
vmaxsd
add
push
push
mov
cmp
add
push
loopne
xor
push
rol
sub
fld
add
adc
cs
push
mov
out
inc
add
xchg
sbb
inc
icebp
mov
pop
mov
mov
dec
pop
add
std
pop
add
dec
aaa
mov
cmp
push
cli
loope
add
pusha
add
fs
jmp
call
add
stc
adc
hlt
loope
retw
sub
mov
fst
sbb
dec
cmp
leave
mov
mov
push
imul
aam
cmps
pusha
sub
popf
push
shl
ins
int
mov
mov
adc
mov
cmp
jbe
popa
or
or
add
fdiv
and
push
or
test
push
rcl
sub
inc
cmp
mov
mov
fisttp
stos
loop
push
add
pop
out
hlt
mov
add
and
lahf
or
jp
adc
mov
xchg
inc
lea
inc
fs
test
jp
mov
add
call
or
inc
scas
add
mov
lods
mov
loope
sub
pusha
addr16
xor
sub
push
inc
out
jne
or
push
arpl
add
pop
adc
nop
pushf
inc
in
and
lods
adc
call
and
mov
sub
inc
mov
loop
(bad)
rol
pop
popa
mov
mov
cmp
add
mov
cmp
add
js
add
xchg
mov
add
pop
je
or
cmp
xchg
mov
pusha
aad
sub
cmc
sub
enter
out
enter
mov
mov
pop
pop
or
sub
add
out
sub
mov
fcomp
loope
cdq
and
inc
push
inc
pushf
xchg
push
call
add
cmps
in
push
xor
cmp
xor
push
stc
mov
and
mov
and
cmp
and
je
aad
fld
rcl
je
iret
inc
loope
pop
push
adc
dec
mov
adc
sbb
sti
adc
push
pop
add
sub
inc
add
adc
ins
or
and
add
jae
mov
dec
adc
push
ror
push
jo
and
jl
(bad)
nop
adc
mov
and
jl
hlt
cwde
cmp
in
mov
push
push
jge
push
cmp
xor
shr
sub
clc
test
adc
mov
pmaxub
add
pop
and
bound
(bad)
cmp
mov
adc
xor
mov
test
cmp
mov
add
ins
pusha
scas
dec
aaa
push
clc
add
(bad)
inc
jne
pop
jg
mov
rol
bound
mov
fld
or
and
add
(bad)
es
jae
or
enter
jecxz
or
jo
pop
mov
or
push
jne
les
ret
ret
int
dec
test
and
sub
test
push
clc
adc
ret
xchg
inc
add
sub
popf
cmp
sbb
mov
xor
add
inc
out
and
mov
xor
adc
xchg
push
jecxz
mov
daa
das
push
xor
ja
xor
xor
adc
cs
jns
call
div
add
mov
xor
pop
or
inc
inc
mov
and
jmp
jp
sub
inc
or
push
ds
pusha
and
or
in
loop
mov
das
add
and
or
push
add
xchg
adc
sub
mov
mov
or
test
call
in
leave
add
test
pop
inc
nop
jecxz
nop
and
repz
sub
clc
and
mov
leave
jle
jo
pop
xor
mov
add
and
inc
aam
iret
out
lock
test
cmc
je
jne
into
mov
push
or
add
cmp
xor
fisttp
loopne
push
or
sub
mov
adc
adc
fs
dec
mov
inc
or
or
add
inc
add
add
adc
std
inc
inc
ret
ins
inc
dec
or
and
loop
out
out
pop
inc
jmp
mov
push
or
cmp
mov
sbb
shl
scas
add
and
mov
add
add
pop
lea
enter
movs
lods
ret
push
add
into
xchg
scas
add
inc
cdq
cmps
adc
iret
add
fist
in
dec
and
cmps
je
shr
jnp
sbb
or
mov
jp
fwait
push
out
aaa
cmp
push
dec
adc
inc
push
retf
pop
push
mov
nop
sbb
xor
clc
mov
imul
jne
xor
pop
(bad)
xchg
add
or
push
mov
call
fsubr
ins
push
repz
adc
sub
push
ja
add
cld
aas
pop
imul
sbb
push
or
sub
sub
and
push
mov
gs
mov
mov
pusha
cdq
sbb
inc
nop
cld
lods
dec
sbb
jg
call
test
ret
push
sub
xchg
adc
dec
xchg
sub
outs
inc
xchg
or
add
cmc
jne
cmc
imul
push
push
jb
icebp
or
(bad)
cwde
pop
mov
aas
les
inc
adc
pop
sub
pop
sbb
push
ror
out
or
dec
(bad)
jp
or
scas
or
push
retf
adc
mov
xor
clc
stos
add
and
pop
adc
push
pop
push
outs
sbb
push
sbb
push
pop
mov
adc
fnstenv
mov
add
mov
stos
adc
or
dec
and
imul
retf
and
pop
or
and
adc
nop
adc
adc
jbe
add
or
sbb
pop
shr
xchg
mov
adc
adc
sub
mov
(bad)
jbe
out
pop
mov
(bad)
jle
mov
sub
jmp
mov
jl
mov
add
jmp
or
sbb
daa
cmp
in
and
jp
es
mov
pop
outs
scas
out
add
(bad)
scas
cmp
mov
loop
or
xchg
cmp
in
mov
or
fsub
xchg
xchg
and
and
stos
xchg
sbb
lods
or
cmp
mov
sub
push
push
pop
and
addr16
int3
arpl
sub
int
push
push
cmc
sub
dec
push
add
xchg
aas
adc
xor
jae
dec
cwde
out
add
add
outs
xor
scas
pop
add
sbb
sub
jle
dec
pop
cdq
lods
jmp
add
pop
lock
rcr
push
enter
inc
cmovno
mov
nop
xchg
pop
mov
push
jo
xchg
add
xor
xor
jl
call
in
retf
push
pop
out
sub
pusha
inc
bound
jns
shr
mov
pop
push
push
adc
push
jae
fldenv
adc
sub
push
rcr
pop
scas
mov
sbb
pop
sub
ins
mov
aas
add
mov
xchg
xor
adc
adc
mov
dec
mov
xor
div
pop
scas
add
es
xchg
out
push
pop
mov
in
dec
and
push
adc
sub
dec
jno
dec
push
iret
mov
or
dec
lock
mov
push
fmul
push
xor
stos
lahf
cmp
push
(bad)
loope
out
js
and
(bad)
cwde
pusha
xor
arpl
sub
mov
test
call
mov
push
jge
je
sbb
ret
dec
loop
ds
push
sbb
mov
dec
or
lods
inc
or
cmp
xchg
in
mov
into
or
sub
mov
add
scas
pop
mov
cmove
push
push
(bad)
sub
jle
sub
pop
fnstcw
or
adc
inc
inc
cdq
fwait
xchg
popf
pop
dec
cmp
mov
pusha
inc
mov
push
mov
int
pushaw
les
ins
jo
add
js
out
(bad)
sti
cmp
push
dec
test
or
rcr
xchg
sub
mov
adc
enter
pushf
out
rcr
push
cld
jle
mov
pop
xor
dec
xor
mov
fnstcw
ror
inc
inc
or
call
mov
and
jl
push
test
push
push
pushf
add
push
adc
mov
adc
dec
sub
(bad)
or
fist
mov
aas
mov
int3
mov
mov
pop
cmp
push
xor
in
push
fcomp
push
mov
jle
sbb
js
pop
popa
pop
and
not
mov
cmp
add
int
sbb
leave
mov
pop
pop
add
mov
clc
aas
out
add
and
pop
sbb
sbb
mov
push
and
out
rol
mov
and
call
inc
push
test
push
and
push
cmp
and
out
xchg
push
inc
das
leave
test
pusha
xchg
sub
mov
jl
push
cmp
inc
cmp
popa
bound
sbb
inc
or
xor
or
ins
push
adc
int3
or
add
add
lds
movs
push
(bad)
(bad)
cmp
push
stc
jo
sbb
and
stos
and
and
cld
out
test
sbb
mov
mov
aaa
fst
lock
mov
dec
enter
or
mov
push
jne
mov
mov
and
int3
and
jmp
sbb
lods
inc
hlt
stos
loop
aam
adc
and
js
inc
into
enter
xor
enter
mov
xlat
lea
push
dec
xor
push
pop
or
arpl
and
sbb
push
daa
rol
ret
push
fs
mov
mov
loopne
or
shl
mov
adc
adc
daa
pusha
push
jmp
aaa
sbb
sahf
push
xor
les
pop
in
pop
mov
cld
add
hlt
mov
loope
clc
adc
push
cmp
adc
data16
mov
test
pop
jae
mov
mov
cdq
les
loope
enter
fistp
pop
out
cmp
(bad)
movzx
push
add
inc
sub
out
pop
pop
jmp
std
push
cld
mov
jmp
pop
inc
jmp
fld
mov
(bad)
sub
jne
imul
pmullw
loope
les
addr16
mov
mov
pop
inc
shl
jmp
cmp
ret
sub
mov
jne
neg
daa
(bad)
mov
mov
or
inc
ret
jne
mov
push
add
fist
jno
loopne
or
inc
imul
in
inc
sbb
or
lds
dec
test
adc
imul
push
mov
push
dec
ror
(bad)
add
cld
fimul
add
mov
in
imul
sti
or
pop
pop
xchg
or
das
inc
inc
xchg
xchg
nop
mov
inc
lock
push
mov
mov
cld
lds
ja
mov
data16
fwait
adc
sub
jbe
mov
jb
loope
pop
jb
add
cld
lea
add
ds
fcom
push
scas
sub
mov
adc
push
adc
mov
jle
xor
push
dec
or
sbb
lock
fisub
loop
test
test
push
sbb
pop
imul
aad
pop
sbb
ins
int
xor
sbb
push
mov
rol
cmp
aaa
aaa
xor
js
add
call
test
call
push
sbb
add
clc
in
lods
fnstenv
mov
mov
popf
loope
fs
fsub
int3
add
sbb
add
push
movzx
mov
xor
dec
int3
push
xchg
jo
jge
pop
mov
fisttp
or
fmul
int3
lea
mov
stc
mov
sti
popa
mov
dec
inc
and
jb
jae
les
add
in
adc
and
add
mov
popa
jne
and
or
mov
js
xor
mov
jmp
dec
inc
ins
shr
pop
push
or
push
and
jge
ja
pop
adc
xor
mov
xchg
add
ins
push
or
sbb
push
out
pop
(bad)
add
pop
neg
mov
inc
jge
adc
dec
stos
clc
test
adc
mov
add
or
pop
jae
movs
fidiv
inc
ja
lahf
call
icebp
push
add
je
jecxz
sbb
cmp
jnp
xchg
push
mov
loopne
xchg
jae
mov
dec
mov
stos
push
push
xor
inc
xchg
pop
das
test
fst
cmp
out
xchg
(bad)
xor
mov
xor
pop
test
shl
aas
ins
sub
call
ret
pop
adc
lds
(bad)
stos
data16
push
mov
jle
or
push
or
test
cmp
or
mov
dec
add
imul
mov
add
jns
outs
inc
es
adc
jno
pusha
and
test
in
xchg
mov
mov
cmp
je
adc
mov
or
jg
push
pop
das
adc
jne
jg
retf
jle
mov
test
je
enter
les
test
xor
fidivr
mov
xor
ret
add
mov
mov
addr16
push
jl
imul
shl
jmp
cmp
inc
dec
repz
cs
and
cmp
dec
sar
loopne
pop
mov
rcr
push
inc
jecxz
add
popw
hlt
pop
mov
into
add
add
xor
or
add
(bad)
mov
mov
mov
mov
popf
out
mov
repnz
and
mov
sbb
loopne
xchg
add
sbb
mov
mov
pop
ds
pop
mov
(bad)
fild
mov
xor
sbb
pop
cmp
fistp
mov
sub
sub
out
mov
lea
mov
ins
loop
xor
or
and
pop
test
loopne
fnstsw
inc
pop
add
ret
mov
js
jnp
arpl
inc
jne
push
aaa
push
pusha
in
scas
pop
mov
mov
xchg
jecxz
sbb
mov
mov
cmp
sbb
jg
pop
cmp
jge
sub
fchs
dec
adc
or
push
(bad)
push
popf
call
fst
jmp
retf
sub
outs
add
pop
mov
imul
adc
pop
aaa
jno
je
push
adc
pop
ss
mov
outs
pop
cdq
mov
idiv
shr
stos
mov
mov
jge
stc
jmp
stos
movs
xor
mov
push
fwait
mov
or
repz
lea
pop
and
stc
and
stos
imul
push
jno
pop
mov
jle
(bad)
mov
push
rcr
sbb
add
in
push
add
add
and
or
and
jae
hlt
ret
(bad)
pop
dec
loop
push
xor
push
add
push
js
jp
jae
pop
mov
inc
neg
dec
mov
std
or
pop
je
add
sbb
pop
leave
rol
xchg
test
and
adc
loopne
shr
add
mov
ror
jb
cmc
xlat
pop
push
rcr
loopne
or
ret
fucomip
fcom
je
mov
push
adc
or
mov
push
or
pop
cli
aaa
vmovq
add
add
xor
lock
iret
mov
(bad)
js
and
and
push
je
add
out
ja
stos
push
inc
cld
out
pop
fcomip
cmp
je
aaa
out
cmp
je
dec
out
call
imul
call
(bad)
aaa
push
std
cld
ror
pusha
pop
inc
xchg
test
xchg
push
cwde
and
xchg
sub
ret
push
ins
add
add
cmps
sbb
push
in
dec
and
cli
add
sbb
ins
mov
inc
jl
add
jg
push
and
sub
dec
sti
mov
test
sub
test
adc
movs
ss
push
pop
ficomp
adc
sub
inc
scas
lock
jle
cmps
call
(bad)
sub
mov
in
jb
out
cmp
scas
push
or
pop
or
fistp
and
or
int3
(bad)
jmp
push
or
(bad)
leave
sub
mov
jmp
add
ss
or
lea
inc
dec
add
add
ins
mov
pop
or
add
dec
cld
add
sub
push
pop
xor
inc
ror
scas
mov
jne
add
sub
or
sar
fs
inc
rol
adc
push
call
adc
in
mov
fs
jl
mov
in
or
or
mov
je
fsubr
scas
pop
shr
mov
cmp
lea
adc
daa
mov
jbe
jmp
rcl
ins
mov
test
dec
inc
or
je
in
xlat
mov
mov
fbld
rcr
ret
add
pop
push
push
inc
fcomip
add
pop
loopne
adc
ja
sbb
add
push
ds
add
jmp
(bad)
or
out
icebp
jecxz
inc
fnstenv
push
std
into
push
inc
mov
jne
add
push
adc
add
call
popa
and
and
pop
shl
loope
sbb
xor
add
mov
dec
popf
mov
mov
or
adc
mov
mov
inc
cmp
sbb
and
add
retf
call
loopne
adc
sbb
sbb
in
mov
mov
add
mov
mov
adc
push
jecxz
(bad)
adc
je
out
bound
pop
mov
fadd
or
cmp
je
lods
adc
dec
adc
pop
inc
ret
sbb
cmc
jge
sbb
pop
lock
jne
(bad)
out
cmp
stos
mov
ins
aam
dec
add
pop
push
pushfw
dec
mov
mov
sbb
mov
retf
push
shr
enter
sbb
or
ret
cmp
sbb
push
dec
out
inc
jmp
inc
push
add
dec
or
pop
inc
sub
hlt
mov
cmps
not
sub
inc
push
or
ret
jecxz
cs
loopne
mov
mov
cmp
pop
addr16
or
imul
inc
add
sahf
add
mov
out
push
gs
nop
xor
popa
jp
mov
retf
pusha
lods
inc
jbe
scas
out
sub
jp
call
loopne
cmp
add
sub
inc
pop
mov
out
push
jae
mov
add
xor
(bad)
ss
xchg
add
pop
fsubr
inc
jae
add
hlt
push
aam
jae
lods
rcl
cli
xor
cli
pop
mov
out
add
or
sbb
std
mov
mul
sub
push
add
jmp
shl
arpl
pop
push
sbb
das
and
ret
xor
cmps
mov
sar
scas
dec
ins
mov
fcomi
(bad)
std
sub
pop
call
mov
pop
inc
dec
je
or
pop
pop
sub
sbb
or
(bad)
loop
ret
jne
bnd
test
ins
hlt
cmp
mov
cmp
in
mov
popf
ins
sbb
cli
sub
arpl
ror
mov
std
lds
rcr
mov
inc
test
xor
push
lahf
push
loopne
xchg
mov
mov
mov
push
add
push
xchg
push
or
pop
pop
xchg
xor
clc
mov
test
call
nop
dec
es
sub
repnz
cmp
add
and
scas
mov
pop
mov
mov
xchg
std
(bad)
xchg
and
sub
jmp
cmc
inc
or
adc
out
inc
stos
add
mov
sub
pop
adc
sar
repz
sub
test
add
cmps
sub
test
cmp
and
es
repz
mov
jmp
push
rol
pop
xor
and
xor
fidiv
lods
adc
inc
int3
pop
pusha
rcl
inc
je
dec
dec
out
mov
(bad)
inc
xor
jb
jecxz
push
jae
sbb
rcr
and
fmul
test
(bad)
repz
pop
out
pop
fstp
push
and
mov
jne
or
inc
push
dec
or
cmp
mov
mov
xlat
or
or
test
and
icebp
jo
gs
pop
push
mov
(bad)
jge
imul
sub
xor
addr16
sub
push
mov
sub
cmp
push
or
rcl
sbb
mov
or
das
push
bound
cmp
add
sti
jb
clc
push
iret
ss
add
add
outs
sub
add
jmp
adc
jb
cmp
(bad)
cmp
mov
dec
mov
sti
sub
jmp
dec
mov
lods
mov
je
sahf
inc
add
mov
add
lods
pusha
sub
jge
pusha
call
movs
dec
adc
out
movs
arpl
bswap
push
jmp
out
inc
test
or
outs
ins
sub
mov
or
add
retf
sub
mov
fwait
xor
xor
and
add
mov
sub
jmp
(bad)
or
in
adc
dec
cmp
inc
aaa
xor
xor
repz
sbb
pop
test
adc
inc
das
mov
add
clc
sbb
pop
shl
lock
push
fstp
adc
sti
add
cld
cli
dec
fdivr
add
cmp
or
and
adc
int3
push
out
adc
(bad)
fcmovne
jo
sbb
inc
push
or
leave
add
mov
pop
or
jge
mov
push
int3
sub
mov
inc
stos
lods
ins
add
daa
or
xchg
jnp
cld
or
xor
sbb
mov
leave
jg
jb
pop
scas
pushf
pop
aad
pop
sub
jmp
xchg
loopne
mov
mov
mov
fcom
jo
lahf
sbb
inc
add
ret
dec
lock
mov
mov
cmp
and
cmp
inc
sub
and
push
inc
retf
fistp
pop
cmp
sbb
pop
add
and
add
mov
xor
fadd
movs
push
and
pop
cmp
and
add
in
cdq
xor
inc
and
mul
mov
dec
and
or
lds
cmp
mov
inc
rcr
out
fmul
jno
lea
mov
push
out
pop
inc
out
add
mov
jns
mov
icebp
adc
ret
mov
cmp
je
movups
adc
push
add
adc
or
hlt
(bad)
inc
mov
pop
push
pop
push
cwde
jmp
push
pop
mov
and
jle
test
xor
adc
loope
mov
and
call
mov
add
lea
mov
push
and
jg
(bad)
loop
or
sti
mov
sbb
adc
rcr
stos
push
mov
adc
imul
sti
imul
aam
cmp
jae
and
dec
aad
in
outs
adc
shl
or
ror
fwait
retf
jmp
iret
sub
or
hlt
inc
pop
repz
push
adc
mov
push
cmovae
aad
or
push
jmp
ret
sub
mov
out
iret
sbb
mov
fstp
ror
test
in
pop
pop
in
in
mov
sub
pop
clc
scas
imul
fimul
loop
adc
dec
aam
adc
mov
pop
pop
jo
mov
mov
scas
mov
add
(bad)
mov
pop
imul
jge
dec
add
test
mov
cmp
dec
inc
adc
adc
adc
movs
pop
imul
or
jmp
or
retf
je
add
je
xor
je
jne
push
push
mov
outs
dec
test
pop
jge
mov
adc
push
cmp
jg
je
cmp
inc
mov
sbb
pop
jmp
jne
inc
clc
dec
or
je
in
inc
pop
or
pop
and
icebp
dec
push
push
cmp
je
bound
mov
mov
mov
clc
fcom
aaa
mov
fdiv
or
jo
not
and
aaa
jne
or
pop
jge
or
in
adc
add
(bad)
fidivr
test
or
or
add
pusha
test
sub
xor
adc
mov
add
mov
sub
js
sahf
cmp
inc
call
xor
sbb
enter
sub
or
shl
call
jg
xchg
or
jg
stos
div
daa
sub
sub
xor
mov
pop
fimul
ja
pop
dec
dec
mov
jmp
lods
sub
std
add
xor
(bad)
(bad)
mov
dec
push
mov
sahf
into
mov
sbb
stos
push
nop
jge
shl
icebp
sti
loop
sbb
dec
or
jl
ins
bswap
inc
and
mov
or
adc
xchg
xchg
or
dec
inc
mov
push
(bad)
push
xor
and
in
ds
pop
push
sbb
ror
xchg
movs
pop
sub
in
js
add
(bad)
aaa
add
and
cmp
jb
rep
imul
rol
mov
jb
mov
add
push
iret
xlat
in
mov
nop
pop
int3
iret
pusha
add
xchg
ss
mov
mov
shl
(bad)
bound
test
push
add
retf
(bad)
or
(bad)
pop
int3
inc
xor
sub
mov
and
and
aas
mov
push
sbb
int
imul
cmps
stc
ja
mov
mov
call
cmps
imul
ss
cld
cld
cmp
mov
clc
or
lock
add
cld
or
nop
popf
or
rol
outs
pop
ret
or
sub
cld
fistp
or
or
or
in
mov
shl
(bad)
lea
jae
stc
sub
shr
or
or
xor
ins
add
outs
leave
xlat
(bad)
dec
pop
dec
push
mov
ja
test
mov
sub
xchg
or
and
pop
fst
jno
fld
push
mov
xchg
fdiv
mov
rcr
sbb
sbb
adc
call
or
imul
or
loopne
call
pop
xor
mov
xchg
xor
pop
xor
test
dec
add
stos
pusha
mov
sub
es
movs
test
fnstcw
adc
or
mov
psubw
sbb
push
movs
jl
cmc
mov
pop
cmp
mov
mov
push
mov
retf
sub
leave
mov
or
adc
xor
pusha
or
clc
mov
jl
cmp
or
pop
xor
push
or
sbb
mov
mov
sub
jmp
bound
pop
xlat
mov
test
add
sub
mov
inc
jmp
shr
loope
in
push
ror
ror
repnz
sbb
add
std
std
add
repz
add
push
xchg
pop
push
adc
mov
jne
aas
or
xchg
or
push
pusha
and
icebp
add
ja
jmp
mov
push
inc
dec
adc
add
ret
cmc
adc
icebp
fisub
sbb
and
bswap
or
or
mov
pop
mov
mov
imul
mov
or
sbb
out
adc
add
pop
adc
push
(bad)
pushf
xchg
shr
push
inc
push
adc
mov
mov
mov
inc
out
dec
sbb
add
sbb
mov
or
adc
xor
js
mov
ret
push
sahf
push
mov
rcr
mov
or
push
je
shr
pop
sbb
adc
cmp
movd
mov
xor
movs
retf
imul
add
xchg
and
add
js
pop
pop
movs
mov
inc
adc
cmp
dec
cld
ret
jge
pop
pop
xchg
imul
shl
or
ret
mov
adc
test
push
test
push
hlt
add
sgdtd
pop
jo
es
xor
aaa
push
inc
ror
mov
push
in
jl
and
js
ficomp
hlt
or
inc
idiv
sbb
fs
inc
fcomp
inc
rol
and
xchg
mov
(bad)
lock
add
mov
retf
fsub
in
(bad)
cs
test
cmovs
cmp
je
loopne
mov
cmp
or
test
inc
dec
daa
or
retf
fsub
add
add
sti
sub
cs
lods
sbb
inc
add
fmul
sbb
mov
mov
xor
test
jmp
lock
pop
sub
cld
mov
inc
add
out
sbb
pop
ficomp
std
add
je
ins
mov
dec
bnd
add
and
jg
daa
aas
ss
jg
xor
push
inc
inc
daa
sbb
mov
movs
pop
rcr
sbb
inc
sbb
or
push
imul
or
cwde
dec
(bad)
int3
xor
xor
or
daa
rcl
clc
addr16
fisttp
gs
loope
adc
cmp
and
je
ins
pop
jo
ins
adc
jmp
shl
sar
add
cmp
or
stos
cmc
xchg
and
or
xor
(bad)
pop
mov
mov
cdq
in
adc
fdiv
mov
jne
dec
je
aam
cmp
sbb
inc
pop
retf
jge
dec
xor
ret
and
inc
lea
add
(bad)
iret
cs
fisubr
movs
enter
xchg
repnz
rcl
push
mov
hlt
pop
xor
fcmovne
push
xor
sub
pop
je
add
jbe
fsubr
je
dec
jl
add
adc
pop
mov
sub
inc
xor
mov
add
add
sub
pop
jmp
shr
jecxz
out
ins
int
out
sub
add
jg
push
mov
imul
adc
cmp
xor
int3
repz
lods
loopne
cmp
pop
dec
dec
mov
mov
xchg
add
aaa
loop
repz
and
jno
adc
jge
test
lock
test
pop
repz
adc
inc
xor
push
fisubr
sub
mov
push
pop
cmps
sbb
push
je
out
add
sub
std
xor
cs
xchg
leave
rcr
leave
or
sar
inc
std
xor
mov
jno
mov
es
push
sub
dec
mov
jnp
aam
mov
mov
push
fcomp
xchg
add
jmp
and
ret
xchg
jno
inc
xchg
sbb
cdq
or
in
data16
adc
push
cmc
adc
push
sub
cmp
imul
pop
jmp
cmp
sti
ret
dec
or
mov
or
fld
mov
jmp
and
jmp
pop
icebp
imul
xor
sbb
jg
jl
aad
dec
cmps
jae
pop
adc
neg
mov
mov
jmp
add
adc
jge
dec
ins
les
les
mul
ffree
jne
in
mov
adc
push
mov
pop
popa
bound
sbb
(bad)
out
pmuludq
sub
fstp
mov
(bad)
clc
fidiv
sub
xor
rcl
sbb
xchg
cli
ss
mov
je
jne
clc
mov
jmp
push
sub
jg
mov
popa
sbb
ja
mov
mov
sbb
fdivr
in
cld
test
es
mov
pop
(bad)
sub
or
je
ins
aas
mov
and
in
loopne
jne
add
dec
add
mov
or
test
add
int3
jge
add
aam
test
nop
int
xor
js
lock
inc
pop
jle
fstp
mov
add
enter
loope
and
add
(bad)
jmp
and
pop
pop
or
fcomi
add
push
(bad)
adc
and
je
mov
loopne
stc
jge
adc
data16
jmp
inc
cdq
aad
fwait
dec
shr
out
(bad)
es
out
and
sub
dec
add
fdivr
mov
add
add
add
fild
add
or
add
test
popa
and
lds
ds
ficom
scas
ret
sbb
(bad)
scas
jmp
es
xor
push
inc
sbb
ss
jl
aas
ret
dec
loop
xlat
push
jo
push
mov
inc
xor
xor
cld
sbb
sbb
call
push
mov
cmp
je
shl
data16
mov
ror
sbb
push
push
push
mov
push
sbb
data16
or
mov
call
cmp
ins
loopne
sub
js
jbe
retf
movs
dec
or
mov
sbb
and
sbb
add
adc
adc
mov
mov
and
inc
mov
mov
inc
sbb
pop
mov
nop
sbb
inc
add
test
fimul
mov
dec
jmp
add
cmp
jne
or
xchg
pop
js
and
xchg
jo
pop
inc
jo
push
inc
and
push
cld
call
add
or
mov
add
bound
mov
repz
sub
out
push
push
in
or
cmps
or
jmp
sub
mov
cmp
cmp
jg
push
or
es
push
cdq
popa
stos
xor
cdq
mov
stos
mov
jle
jbe
aaa
popa
push
cmps
leave
lock
clc
into
sbb
dec
in
mov
cmp
jg
or
inc
adc
ret
pusha
in
jp
xor
outs
adc
push
inc
rcr
sub
inc
stos
jne
dec
fdivr
or
ret
neg
mov
mov
push
leave
lock
pop
rcl
aas
(bad)
inc
ins
xchg
push
jl
imul
stos
addr16
xchg
xor
fs
cmp
sbb
test
clc
jae
cmp
jl
cmp
xor
cmc
dec
adc
addr16
mov
push
cmp
mov
jne
pop
dec
lock
push
outs
xchg
mov
mov
call
aad
mov
inc
and
mov
mov
push
lea
inc
pop
pusha
add
push
or
and
and
test
sbb
pop
shl
pop
and
xor
fmul
add
test
or
sbb
mov
xchg
or
add
icebp
xchg
add
cmp
add
mov
mov
outs
lock
retf
mov
hlt
sub
pminub
out
and
test
dec
push
dec
mov
xor
pop
jmp
mov
jmp
iret
mov
push
mov
stos
xor
mov
sbb
sub
adc
cmp
sbb
enter
fisubr
push
mov
or
sub
lds
mov
push
push
outs
cpuid
inc
mov
adc
inc
mov
lods
bound
push
sbb
and
xchg
adc
aas
mov
js
adc
mov
aam
add
shr
fsubr
ins
cmp
and
fisttp
lods
mov
loope
jo
mov
mov
push
mov
imul
and
mov
jp
test
gs
inc
loope
xchg
mov
push
sub
iret
test
fmul
mov
cmp
mov
cmp
pop
jle
jne
aam
inc
nop
dec
dec
xchg
or
cmp
cmp
js
push
xchg
inc
push
cwde
add
push
or
or
in
stos
add
test
adc
pusha
lea
outs
jge
push
jb
adc
test
add
call
pop
stc
push
mov
pop
xor
ins
aad
push
cmp
pop
ins
in
test
add
mov
leave
jg
dec
push
push
popf
xchg
jl
je
jae
add
mov
mov
loopne
add
mov
pop
sbb
fadd
outs
xchg
leave
jmp
sbb
add
cmp
out
nop
or
je
push
xor
cmp
fstp
je
test
popf
or
les
mov
jb
jae
sub
fistp
sbb
jmp
sbb
nop
icebp
pop
push
mov
nop
add
popf
mov
add
sbb
add
test
jbe
sbb
sbb
xchg
adc
data16
and
sbb
lods
mov
jl
pop
sbb
or
or
add
or
add
pop
pop
xchg
cli
aam
and
push
mov
(bad)
call
ins
loope
mov
cmp
fstp
cs
push
adc
lods
add
and
add
inc
sbb
mov
(bad)
fcom
je
sbb
xchg
faddp
push
lods
mov
sbb
test
in
aad
pop
cmp
add
popa
cdq
push
mov
pop
jg
inc
adc
enter
mov
sbb
xchg
aad
cwde
lds
push
inc
sbb
aas
ins
sub
xchg
and
adc
push
push
add
cmps
call
pop
test
cmp
dec
jnp
inc
out
test
pusha
sbb
pop
test
(bad)
(bad)
push
leave
cmp
mov
add
pop
push
pop
rcl
push
aad
sbb
(bad)
sti
inc
cmp
adc
jg
add
mov
fiadd
fwait
add
mov
inc
lods
or
add
inc
out
imul
(bad)
dec
adc
xchg
add
aaa
enter
call
or
imul
add
mov
mov
adc
mov
jl
je
adc
pop
mov
fcom
push
in
cmp
mov
xchg
out
add
push
add
repnz
xchg
push
retf
shr
repnz
or
push
dec
shl
cmp
ror
jecxz
add
int3
adc
xlat
sub
cmp
push
sub
sar
popf
mov
and
das
fldcw
pusha
neg
lock
mov
pushf
stc
dec
pop
cmp
in
pop
push
stc
outs
or
pop
lahf
mov
adc
fild
or
push
jp
mov
mov
inc
and
jae
jo
add
or
fidiv
rcl
arpl
ficom
cmpps
loop
and
loopne
inc
mov
xchg
cmp
lods
mov
xchg
(bad)
loop
test
ja
push
jl
adc
adc
movs
cmp
sub
addr16
inc
cld
dec
cmp
add
stos
ss
(bad)
out
cmp
ins
cmps
push
sub
mov
xlat
inc
inc
push
call
jmp
or
push
ins
inc
pop
jbe
push
or
sbb
inc
inc
lods
push
dec
add
fld
loop
adc
icebp
ins
out
ret
or
jbe
sbb
jbe
push
adc
pusha
mov
aas
cmp
push
dec
btr
scas
add
inc
or
cmps
push
pop
jnp
jnp
popf
clc
xor
test
addr16
sbb
fdiv
mov
fdivr
repz
add
sbb
and
div
outs
mov
imul
cmp
inc
hlt
add
ds
pusha
mov
popf
(bad)
adc
pop
fild
push
daa
imul
test
or
cmovle
cmc
fiadd
add
in
mov
jae
mov
je
and
mov
pop
inc
and
xchg
(bad)
mov
adc
pop
cld
add
mov
ja
mov
and
cmp
push
outs
or
inc
leave
dec
add
sbb
inc
jge
add
popf
xor
ins
ja
push
lahf
scas
adc
lods
sbb
add
sbb
push
out
sahf
mov
push
mov
sbb
repnz
in
dec
cmp
add
fild
scas
mov
add
sub
or
inc
push
jne
std
adc
mov
mov
imul
movs
jp
hlt
cmp
je
cmp
jl
cmp
jg
inc
jmp
or
mov
dec
gs
mov
sub
fs
iret
repz
pusha
jbe
push
xor
sbb
loop
mov
repz
jae
leave
fmul
out
mov
mov
and
pusha
mov
push
lods
pop
fnsave
and
aad
packsswb
and
add
aaa
cmp
mov
icebp
inc
movs
jo
adc
add
cmp
pop
mov
clc
sub
sub
or
push
mov
popfw
into
fsubr
push
pop
cmp
jmp
pusha
movs
or
stc
push
call
pop
pop
enter
and
adc
push
adc
sub
push
mov
add
xor
adc
pop
push
xlat
mov
or
or
popf
inc
mov
jbe
into
mov
inc
push
push
pop
and
jmp
push
fwait
mov
(bad)
stos
add
xchg
fadd
push
push
inc
pop
mov
inc
mov
cmp
jge
sub
mov
mov
adc
or
mov
add
cmc
or
jg
sub
xchg
loop
mov
add
dec
add
jne
xor
imul
pop
push
clc
mov
mov
pushf
or
ret
or
ret
cmp
push
mov
or
aaa
aad
mov
push
test
push
jecxz
mov
cmc
mov
mov
inc
call
clc
mov
adc
clc
lea
mov
inc
sbb
fnstsw
mov
sub
ret
xor
stc
jmp
or
mov
cmp
mov
inc
or
pop
in
lods
stos
outs
cmp
jle
pop
jmp
mov
mov
pop
dec
or
add
sub
add
cli
sbb
and
ss
inc
sub
loopne
sub
or
mov
imul
push
sub
add
mov
clc
jns
add
dec
mov
iret
arpl
adc
mov
adc
sbb
push
mov
adc
xchg
cmps
mov
pop
pop
loopne
nop
loope
cmp
push
inc
jo
jb
and
mov
pop
mov
mov
sub
dec
add
loopne
adc
test
sbb
lock
push
(bad)
push
dec
adc
cmp
add
add
stos
or
pop
ja
adc
inc
cmp
test
inc
mov
mov
retf
sub
cmp
dec
lods
sbb
and
cmp
jge
inc
push
jmp
adc
cs
pop
dec
sub
sub
mov
ficom
xchg
popf
mov
push
sbb
call
lods
(bad)
mov
ins
push
mov
retf
or
in
sbb
(bad)
pop
xor
add
sub
jno
cmp
ret
lea
jne
adc
fs
jne
adc
out
push
push
mov
sub
xchg
sbb
test
mov
call
sub
gs
cmps
cs
fs
call
xchg
xor
push
sbb
jmp
(bad)
sbb
and
add
stos
add
adc
adc
or
stos
(bad)
mov
sbb
int3
push
inc
js
cmp
sub
test
rol
cwde
mov
shl
inc
pop
add
shl
loopne
push
cmps
pop
das
adc
mov
adc
push
js
mov
jb
dec
jmp
adc
jp
arpl
lock
xchg
lods
int
cmp
popa
and
loop
lds
sbb
add
fsub
xor
inc
or
test
mov
jg
fidivr
and
xor
and
ins
shr
sub
pop
loopne
ins
mov
lods
jnp
jge
je
push
fs
je
lea
(bad)
mov
add
sub
push
mov
jno
adc
mov
adc
mov
sahf
push
and
and
mov
jbe
mov
add
sti
add
jae
pusha
or
cwde
inc
in
adc
sbb
add
push
mov
sub
or
push
xor
rol
jmp
push
cmp
jge
clc
push
shl
div
add
ror
cld
and
sbb
sar
adc
mov
cdq
mov
adc
nop
jno
enter
ds
xchg
cs
pop
iret
iret
xchg
cmp
aam
pop
aam
add
mov
sbb
call
mov
jmp
mov
nop
(bad)
xor
test
cmp
add
mov
cmc
out
cmp
mov
or
cmp
or
cmp
repnz
or
and
aam
cmc
inc
cmp
addr16
push
pop
sub
out
fbstp
or
jbe
jge
mov
imul
add
sub
psubsw
adc
mov
mov
cmp
sub
test
pop
cmp
jmp
lods
xlat
(bad)
call
mov
imul
mov
xor
test
push
adc
fistp
mov
pop
inc
cmp
and
sub
shl
lods
ss
test
sub
pop
add
aaa
jne
pop
inc
dec
or
sub
lods
test
sahf
jmp
ret
leave
push
xchg
sub
sub
mov
and
inc
hlt
sbb
sub
mov
out
jecxz
scas
cmp
(bad)
or
aad
popa
xchg
or
daa
and
(bad)
add
adc
retf
mov
cwde
sub
xor
and
cli
(bad)
test
mov
aaa
add
pop
fisubr
inc
cmp
sub
je
shl
sbb
add
push
inc
inc
or
pop
test
or
and
inc
ins
mov
add
sti
mov
(bad)
sbb
mov
inc
and
jecxz
lods
or
or
jne
dec
mov
sub
movs
loopne
call
(bad)
loopne
sub
add
enter
or
push
add
(bad)
rcr
mov
sbb
and
inc
jmp
xchg
sub
inc
mov
jge
mov
cmp
(bad)
jecxz
jmp
leavew
cmp
out
jmp
call
mov
pop
inc
jmp
cmps
dec
(bad)
push
or
sub
in
fisubr
sbb
ret
push
push
pop
sbb
inc
mov
jae
add
stc
lods
(bad)
xchg
femms
mov
mov
pop
push
add
mov
pop
mov
cmp
shr
add
repnz
push
inc
popf
pop
and
pop
out
xchg
jmp
sbb
aas
daa
ret
lods
mov
push
jae
inc
inc
or
jne
push
ins
jl
hlt
repnz
das
push
clc
mov
mov
add
rcl
add
xor
lods
mov
and
xlat
push
and
jle
or
xor
ins
daa
pop
pop
adc
dec
inc
daa
test
jmp
inc
xchg
dec
out
dec
movs
test
(bad)
movs
in
fcomip
je
inc
cmp
add
sub
inc
push
into
push
hlt
add
xchg
mov
ins
movs
mov
and
add
pop
pop
mov
dec
adc
or
test
pop
inc
sbb
pop
pop
nop
dec
and
test
mov
lods
cs
mov
daa
sti
and
cmps
jmp
dec
adc
add
pop
push
push
add
icebp
popa
outs
cmp
in
push
sub
repnz
jl
pop
out
mov
addr16
mov
int
sbb
lea
add
sbb
pusha
or
sbb
add
shl
and
cdq
jp
xchg
mov
or
push
mov
dec
xchg
jne
push
or
cmp
add
or
push
inc
push
call
mov
or
adc
push
jl
call
or
call
or
dec
ss
das
loopne
fdivr
jmp
ret
dec
mov
push
mov
jo
mov
out
xlat
cld
or
add
jmp
or
or
add
jnp
pop
bound
xchg
dec
ret
sahf
inc
data16
push
stos
cmp
sub
pop
pusha
ins
adc
add
cmp
sbb
call
cmp
inc
xor
pop
inc
xor
add
outs
ficomp
add
xchg
inc
pop
stc
sbb
adc
jns
mov
cmp
ins
mov
in
jl
fild
add
inc
push
push
lea
push
or
aam
mov
xor
and
jns
mov
add
(bad)
enter
(bad)
push
out
pop
mov
mov
push
or
or
sbb
movs
dec
lea
mov
mov
int
pop
push
ds
or
or
sub
push
int
xchg
add
ret
dec
shr
sub
and
push
mov
daa
push
ror
add
add
cs
dec
les
pop
std
movs
loop
sub
jmp
in
jecxz
je
inc
cmp
sti
test
xchg
sbb
sbb
mov
push
ret
ins
push
xlat
inc
frstor
jne
js
mov
icebp
inc
pop
mov
xor
shl
pop
test
or
inc
pop
adc
or
js
movs
aaa
cmp
popf
(bad)
fnstenv
sbb
clc
or
push
fs
xor
pop
rol
loope
push
pusha
arpl
call
(bad)
pusha
sbb
mov
fxch
rcl
adc
and
cmp
mov
and
es
lea
sbb
pop
or
call
nop
pop
leave
fs
adc
int3
sbb
ins
or
xchg
jp
add
pop
xchg
mov
mov
imul
idiv
mov
repz
xor
je
jl
inc
cmp
mov
add
xor
add
aas
lods
and
add
std
sbb
rep
stos
mov
xchg
lahf
inc
rol
out
in
dec
out
loopne
lods
ror
mov
(bad)
mov
jle
xchg
and
pcmpeqw
test
popa
dec
lea
cmc
add
lea
push
test
push
add
jno
lea
cli
cmc
ja
jl
jle
xor
mov
inc
adc
inc
inc
lock
push
xchg
dec
shl
cmp
data16
fadd
movs
adc
imul
dec
adc
mov
pop
mov
inc
lahf
inc
stos
arpl
imul
push
mov
icebp
push
cmp
sbb
push
push
and
test
dec
stos
add
(bad)
cmp
stc
jge
out
add
out
jg
and
inc
jae
pop
cmc
ficom
call
cmp
int
and
sbb
push
inc
arpl
sbb
mov
and
add
add
push
and
fsubr
dec
ins
iret
jbe
adc
adc
and
rol
outs
test
mov
mov
push
scas
adc
add
mov
mov
mov
add
int
test
aam
xchg
cmp
mov
mov
push
or
lea
mov
frstor
ja
sub
lea
mov
adc
retf
inc
inc
mov
mov
sbb
push
in
cli
mov
mov
mov
arpl
and
sbb
xor
add
call
nop
pop
pop
inc
lea
mov
imul
addr16
ret
adc
in
loope
nop
xor
sbb
je
and
cmp
cwde
jo
add
inc
jb
in
pop
(bad)
fadd
mov
enter
mov
ins
pop
sbb
ja
and
lods
(bad)
jmp
mov
sub
adc
test
add
adc
les
aam
gs
lods
mov
stos
enter
inc
add
pop
shl
cs
out
add
fcmovnb
shl
and
xchg
call
dec
sub
and
fld
jmp
or
or
dec
out
cmp
dec
idiv
(bad)
retf
add
jmp
shl
jmp
fstp
add
hlt
mov
push
rol
pusha
gs
pushf
ret
push
and
or
xchg
rol
mov
fwait
call
mov
jmp
mov
pop
push
sub
add
je
dec
or
dec
jne
(bad)
arpl
inc
inc
fnclex
pop
test
xor
inc
add
cmp
rcr
movs
fucomi
daa
and
jmp
sti
push
imul
sar
pop
sti
jmp
(bad)
jae
pop
xchg
dec
dec
sti
fdiv
dec
dec
or
or
mov
inc
sub
mov
cmp
jmp
or
jo
dec
cmp
and
es
lea
dec
add
leave
xor
and
outs
inc
les
mov
dec
(bad)
jnp
lea
outs
push
pop
mov
test
in
mov
push
fist
icebp
lea
sbb
cmp
outs
jg
add
arpl
sub
fs
add
mov
add
je
jo
push
adc
push
add
push
lds
fs
in
cmc
sub
push
cmps
jmp
lea
xor
sbb
mov
icebp
(bad)
xor
sub
push
cmp
push
cmps
imul
mov
clc
jbe
add
pushf
jle
xor
sahf
or
add
cmp
add
and
pop
aas
mov
ins
push
in
pop
mov
dec
(bad)
adc
data16
sar
sub
mov
add
in
icebp
sbb
inc
add
and
xchg
cmp
push
gs
in
test
es
sub
pop
(bad)
adc
stos
packsswb
adc
mov
jmp
xchg
mov
adc
fistp
add
ret
ret
lds
dec
aam
sub
repz
mov
xchg
push
test
inc
loopne
jle
xchg
mov
lahf
mov
jo
mov
push
fxch
test
adc
xor
xor
lods
addr16
imul
ret
retf
bound
sbb
popa
push
inc
aas
pop
dec
cmps
in
bound
lea
jno
and
jmp
inc
sti
icebp
add
adc
xor
and
sbb
sbb
mov
lea
sub
js
sub
pop
pop
stc
xchg
cmp
jge
dec
cmp
xchg
ins
push
test
inc
inc
push
jmp
verw
sub
lds
mov
lds
(bad)
fcmovnu
dec
sbb
pop
jne
mov
inc
sub
jmp
mov
cmp
je
inc
cmp
inc
mov
pop
push
jnp
ss
cmp
jae
mov
jmp
loop
mov
cmp
ja
adc
lock
inc
or
loope
mov
ror
or
lods
jecxz
add
dec
pop
xor
jmp
and
and
enter
rcr
fwait
imul
cmp
pop
cli
in
and
mov
mov
sbb
inc
retf
in
xor
loop
je
jge
sbb
pop
pop
sub
shl
sti
lock
add
dec
or
shl
jne
add
jmp
stc
inc
enter
or
fwait
add
push
rcr
add
rol
aas
lods
ret
mov
pop
outs
cmps
lea
jmp
int
mov
mov
scas
cmp
jb
mov
add
loop
test
stos
dec
push
ja
mov
add
push
pop
dec
leave
movs
xor
add
es
sbb
add
jecxz
cmp
pop
add
lock
cdq
or
ja
sbb
(bad)
pop
repz
repnz
mov
push
mov
push
ins
add
and
pop
fnstenv
mov
xor
push
dec
add
aad
cdq
mov
xchg
fcomp
imul
or
adc
mov
in
out
(bad)
dec
xor
test
and
push
in
popf
mov
call
add
test
jno
mov
outs
adc
xor
jo
(bad)
aas
iret
push
jbe
ins
shl
jmp
lea
shl
out
add
jmp
dec
xor
sti
out
ret
jecxz
lea
fucomp
push
jb
cli
mov
add
fisttp
inc
in
into
and
jecxz
jmp
push
push
inc
push
or
fs
inc
(bad)
jmp
popa
repz
lods
data16
and
or
jmp
mov
dec
sub
mov
or
adc
out
pop
mov
and
sahf
mov
inc
ins
jb
or
jne
aam
sub
jne
test
pop
sbb
push
(bad)
mov
sbb
retf
xchg
aam
pop
and
cmp
adc
stos
and
fimul
add
push
jle
inc
adc
(bad)
punpcklwd
out
cmc
lahf
adc
pop
mov
dec
js
mov
inc
mov
ret
push
xchg
(bad)
push
addr16
or
inc
xchg
aam
sbb
push
sbb
or
push
mov
iret
mov
arpl
inc
push
jne
adc
and
cmp
inc
pop
cld
call
xor
cmc
mov
adc
fs
imul
sub
ret
or
aad
es
std
cld
mov
cmc
punpckhdq
in
or
mov
jge
mov
or
test
and
mov
mov
adc
imul
out
sbb
sahf
fld
jmp
mov
jbe
div
mov
push
jg
adc
das
loope
ret
cmp
sbb
cmp
add
aad
mov
sub
sbb
sub
jmp
stos
jl
mov
pop
lods
shr
adc
or
mov
fist
or
push
nop
or
nop
mov
mov
add
cmp
push
cmp
outs
jae
mov
dec
ror
push
sbb
int
push
popa
or
adc
ds
adc
sub
dec
enter
or
lds
lock
cmp
push
or
(bad)
fist
inc
add
mov
adc
add
mov
sbb
and
or
fwait
cmp
sbb
or
adc
adc
mov
add
scas
pop
add
xor
pop
aam
push
pop
sbb
xchg
clc
push
or
in
sti
mov
sub
cmp
pop
and
sub
jp
or
(bad)
lods
and
pop
or
mov
inc
mov
out
enter
scas
push
cld
sub
retf
jl
inc
and
jae
adc
xor
adc
or
jno
add
test
in
aaa
pop
clc
cmp
jl
or
lods
mov
int3
jb
(bad)
or
je
and
mov
dec
and
mov
dec
mov
data16
mov
gs
enter
or
cmps
sub
and
ret
pushf
push
ja
xchg
adc
inc
and
or
cmp
stos
mov
sbb
shl
jg
cmp
inc
rcl
inc
jne
neg
enter
pop
loopne
or
xor
add
rol
mov
mov
aas
xor
xlat
or
xchg
mov
je
mov
jg
push
ror
lock
inc
sub
inc
add
jmp
out
pop
adc
nop
push
sbb
cmps
mov
push
adc
add
adc
call
or
adc
lock
aad
push
adc
pop
add
push
jno
add
jg
dec
xchg
fiadd
xor
sbb
das
imul
xor
idiv
(bad)
scas
sbb
pop
push
cmp
lds
inc
mov
daa
add
clc
mov
inc
jle
popa
je
cmp
and
cmp
and
add
add
and
movs
or
push
adc
mov
jae
inc
sub
cmp
mov
sub
jg
pusha
sub
je
add
sub
ss
retf
dec
lods
add
dec
dec
sub
dec
jecxz
jmp
adc
std
pcmpgtb
rol
or
cwde
fist
pop
mov
(bad)
loope
lar
xchg
clc
rol
stc
adc
mov
pop
inc
pop
or
sahf
add
sub
cs
or
mov
aaa
clc
push
jne
test
cmp
clc
jne
adc
mov
jg
cdq
lods
mov
mov
mov
push
cmp
inc
(bad)
ror
inc
or
add
mov
add
sbb
sbb
outs
mov
pop
neg
add
ins
add
add
dec
loop
inc
push
les
test
js
adc
fwait
(bad)
ret
je
jne
pop
mov
sbb
leave
sbb
(bad)
nop
add
mov
jnp
sub
xor
jne
lds
push
push
cmp
ret
int3
dec
fbstp
mov
cmp
cmp
pop
fstp
mov
add
pop
add
pop
adc
test
dec
xor
out
xor
retf
leave
(bad)
adc
mov
jl
leave
cdq
or
jecxz
div
sub
mov
and
or
arpl
xchg
call
ror
dec
push
jmp
adc
push
out
inc
movs
or
xor
and
test
add
out
push
fild
adc
lds
lock
inc
cmp
pop
cmp
frstpm(287
dec
mov
or
lea
adc
sbb
adc
test
in
jecxz
adc
sub
xor
pop
das
hlt
(bad)
call
or
shr
cmp
jle
xchg
stos
or
push
or
or
adc
hlt
ins
lahf
test
add
inc
push
pop
mov
icebp
(bad)
sbb
imul
ret
test
pop
dec
add
lock
pop
aaa
cmp
sub
push
test
jle
in
push
push
push
push
or
lods
mov
jle
cmp
xor
mov
pop
jecxz
or
cmps
movs
and
test
push
mov
lea
push
cmp
rcl
xor
js
stos
int3
test
gs
and
adc
add
cmc
or
push
adc
mov
sbb
push
xor
dec
enter
ins
or
pop
(bad)
pop
or
and
pop
std
fiadd
xlat
cmp
ja
adc
push
push
push
and
adc
xchg
push
stos
sub
add
mov
sub
sbb
jp
adc
mov
adc
pop
dec
lods
in
push
cmp
push
ins
aaa
mov
jbe
sti
mov
lea
mov
dec
popf
popf
jmp
mov
dec
sbb
fdiv
add
inc
imul
add
dec
jge
pusha
mov
pop
lock
push
popa
test
inc
add
and
mov
cld
fidiv
test
(bad)
push
ret
inc
ja
fldcw
dec
push
inc
scas
stos
pop
cmp
mov
add
adc
ret
mov
inc
pop
mov
sub
ficom
sub
jl
imul
and
call
and
cmp
cmp
pop
push
mov
sub
pop
mov
lock
cmp
cld
push
shr
stc
jp
imul
adc
inc
cdq
mov
mov
ror
mov
icebp
add
adc
mov
push
dec
pop
mov
adc
add
dec
pop
fs
inc
inc
daa
sbb
(bad)
shr
jbe
das
inc
into
add
xlat
and
dec
jne
jne
cmp
jbe
mov
sub
and
jns
ins
(bad)
push
mov
add
sbb
or
cmp
add
fcmovnu
(bad)
ss
jnp
pop
das
mov
fldenv
push
cld
adc
mov
dec
pop
cmp
cmps
jbe
mov
retf
mov
inc
ds
jbe
cli
mov
mov
inc
mov
jns
fs
adc
ret
add
shl
xchg
ins
pop
lods
and
mov
pushf
or
adc
aam
or
or
cmp
mov
lods
mov
or
std
arpl
and
mov
jae
out
mov
fimul
inc
push
mov
jmp
imul
or
jmp
and
sahf
lds
adc
pop
add
push
ret
arpl
cmp
sub
cmp
sbb
icebp
(bad)
cli
jbe
add
dec
add
loope
add
mov
js
adc
mul
int3
sahf
pop
xor
push
or
in
pop
loop
cmp
movs
mov
mov
dec
inc
or
cmp
cs
or
(bad)
adc
push
mov
ins
jno
lods
sub
pop
adc
adc
hlt
xchg
repnz
mov
call
adc
push
push
mov
or
test
and
cld
sahf
jp
or
lods
mov
xchg
sub
or
push
sub
ss
jbe
pop
push
add
cmp
out
sub
xchg
add
(bad)
in
jmp
es
lds
push
add
or
lods
jae
mov
cmp
sub
dec
iret
jg
fucomip
jbe
cmp
jne
mov
cmp
es
add
scas
sub
out
adc
push
jns
aaa
jmp
es
push
jae
push
jb
fdivr
inc
xor
xchg
and
push
add
idiv
cwde
in
adc
mov
add
loop
dec
fsub
mov
mov
cmp
mov
jo
push
fst
and
push
inc
or
mov
or
mov
xchg
test
pop
es
and
or
je
mov
mov
pop
pop
dec
jbe
push
mov
loope
push
fs
test
jl
shr
inc
jmp
mov
push
stc
inc
or
jg
jnp
push
sar
cmp
jle
pop
xchg
or
inc
and
and
adc
add
mov
pushf
rcl
and
mov
dec
jne
lds
shr
in
and
jmp
pop
sub
mov
sbb
into
push
or
jmp
sub
and
jp
test
sar
xchg
pop
mov
scas
jp
nop
leave
test
jl
inc
or
and
xchg
outs
xchg
gs
dec
jge
les
mov
bound
movs
into
mov
cmp
(bad)
jmp
aam
mov
sub
dec
mov
push
jmp
mov
lods
push
mov
aaa
push
mov
mov
cld
clc
ins
out
jb
jns
lock
and
adc
cld
fdiv
popa
lahf
aaa
lea
ds
mov
sbb
cmp
imul
or
xchg
and
add
add
push
stos
cmps
inc
pusha
jb
sbb
add
adc
mov
inc
pushf
sar
push
inc
xor
push
and
jmp
mov
sub
retf
jge
mov
sbb
and
push
cld
add
dec
and
mov
bound
add
mov
fild
mov
or
dec
loopne
ret
aaa
loop
cmc
jno
rol
inc
ins
fwait
jb
or
add
dec
in
push
mov
inc
fistp
mov
mov
lahf
adc
pop
std
cmps
daa
adc
lea
ja
lea
fst
loopne
dec
repnz
jp
pusha
fiadd
mov
pop
jl
sub
adc
loopne
lock
jbe
dec
dec
or
enter
pop
sub
mov
lea
or
xlat
lea
inc
mov
inc
mov
or
jg
dec
inc
jne
or
mov
aad
cmp
fdiv
mov
fistp
sub
jmp
jmp
jmp
cmp
dec
test
cmp
out
mov
test
dec
lds
mov
inc
add
les
lea
dec
pop
mov
pop
cmp
push
dec
repnz
cwde
clc
shl
pop
nop
sbb
pushf
nop
ds
xchg
or
or
adc
jg
sub
add
ins
sub
(bad)
and
leave
inc
xor
mov
xchg
or
or
fwait
retf
pop
aas
or
gs
pop
dec
pop
pop
sbb
adc
adc
ins
imul
and
and
mov
or
adc
xor
sub
inc
xchg
adc
mov
movs
jno
adc
ds
jb
jle
adc
jne
lea
push
pop
or
pop
aad
jmp
pop
xor
out
call
mov
test
inc
sbb
or
sbb
ror
pop
mov
jb
jae
mov
repnz
jne
and
push
jbe
jbe
(bad)
pop
inc
xchg
ja
ja
or
ret
add
fnstcw
pop
push
in
pop
dec
xchg
xchg
dec
pop
punpcklwd
xchg
xchg
psrad
xchg
into
pmulhw
mov
xchg
jns
fwait
or
les
dec
sbb
cmc
cs
paddq
mov
jle
xchg
or
push
mov
outs
mov
mov
sbb
test
lods
push
sbb
and
into
pop
mov
(bad)
push
test
add
and
push
xor
add
mov
pop
sbb
aam
fisttp
cwde
imul
loopne
arpl
push
test
inc
fcom
or
rol
in
adc
(bad)
mul
and
sbb
push
adc
mov
out
dec
add
mov
sub
stos
add
(bad)
sbb
or
add
adc
jg
scas
(bad)
dec
and
or
inc
sbb
adc
inc
adc
adc
pop
inc
mov
inc
pop
adc
push
cwde
xchg
rol
mov
add
imul
push
inc
pushf
xchg
and
xchg
mov
movs
sahf
mov
pop
sbb
pop
mov
retf
test
inc
int
or
inc
inc
cmp
ja
dec
mov
pop
adc
mov
or
das
loopne
(bad)
repz
adc
inc
sbb
jne
sbb
(bad)
xchg
inc
add
xor
pop
movaps
sbb
ja
and
fmul
cmp
(bad)
icebp
test
xchg
inc
or
mov
or
sbb
(bad)
jmp
rcr
or
xchg
div
pusha
fs
and
iret
jb
cmp
jnp
daa
popf
jb
cmp
jbe
dec
dec
mov
and
sub
push
outs
enter
(bad)
add
outs
adc
fs
jns
enter
fstp
or
or
sub
ins
adc
or
fstp
jl
and
pop
add
adc
xor
push
rol
mov
ds
aaa
sbb
sub
cmp
pop
loop
adc
hlt
push
adc
xor
jg
dec
pop
stos
es
mov
cmp
mov
fs
pop
xor
or
das
cs
xor
or
jp
add
es
xchg
outs
adc
or
je
push
cmp
sbb
cmps
pop
jmp
stos
push
mov
jl
int
retf
xor
inc
add
ds
mov
add
jmp
add
(bad)
pop
xor
retf
stos
mov
mov
add
mov
ja
cmps
add
mov
xor
mov
or
enter
and
movs
mov
test
ror
push
shr
movs
data16
push
sub
pusha
sbb
xchg
fwait
adc
repz
or
lock
jmp
dec
inc
xchg
and
push
jns
jmp
add
stos
repnz
jmp
std
jmp
aaa
adc
div
pop
sbb
pop
je
jp
inc
(bad)
out
jmp
add
or
int3
pushf
sub
loope
daa
adc
or
(bad)
cmp
pop
loope
inc
test
or
adc
inc
add
gs
add
mov
push
push
sbb
and
push
adc
inc
fadd
dec
das
je
sub
pop
push
cmp
add
ror
cli
and
push
cwde
add
and
xor
inc
and
push
push
add
inc
bts
jmp
jne
jg
mov
nop
inc
mov
adc
bt
push
add
aam
and
push
inc
add
xchg
mov
xor
cs
inc
pop
fld
retf
mov
inc
repz
push
loop
lea
leave
cmp
sti
js
mov
icebp
dec
dec
not
cmp
pop
or
jp
dec
shr
pop
or
test
sbb
xchg
test
push
inc
sbb
cli
add
sub
or
inc
sbb
jne
lahf
lsl
push
dec
aad
out
retf
shl
rep
cmp
and
inc
stos
js
dec
dec
call
add
test
mov
mov
add
sub
jp
aad
sbb
pop
xchg
inc
and
and
and
mov
cmp
inc
adc
push
inc
rol
addr16
inc
adc
push
and
je
adc
pop
fmul
adc
les
dec
pushf
mov
loopne
cmp
fwait
js
adc
add
sub
bound
pushf
pop
adc
jno
and
not
sub
and
mov
psubusw
adc
mov
sub
dec
pop
mov
pop
retf
frstor
sbb
and
pop
push
push
loope
add
enter
sbb
fdiv
sub
gs
ds
or
inc
rol
inc
xor
cwde
popa
adc
mov
cmp
xchg
xor
mov
jmp
jle
rcl
add
mov
inc
js
pop
mov
adc
call
sar
mov
push
adc
in
jmp
mov
ins
cwde
mov
add
add
add
or
sub
mov
pop
add
push
int
(bad)
pop
push
sbb
cmp
add
add
push
push
stos
and
test
jl
cmp
pop
or
lea
jmp
mov
mov
xchg
sub
out
into
jns
adc
aas
inc
rcl
lds
loopne
jo
cmp
xchg
push
or
aam
sbb
mov
mov
push
xor
in
aam
sub
mov
repnz
pop
sti
pop
into
mov
cmp
lahf
mov
adc
inc
xlat
sub
(bad)
cmp
push
mov
pop
add
adc
pop
imul
adc
and
adc
ret
fabs
push
xchg
push
or
je
int3
xor
add
adc
pop
cmc
aad
jmp
call
in
pop
add
jl
or
ret
and
pop
test
and
add
loop
aad
pop
jl
pop
push
ret
pop
add
mov
enter
push
cmp
or
outs
jg
loope
dec
add
or
inc
inc
dec
mov
mov
or
inc
mov
ins
and
in
adc
dec
inc
or
sub
add
inc
jge
rol
mov
sub
(bad)
sub
adc
mov
call
rcl
xor
fcomp
sub
fcmovnbe
push
cmp
clc
test
out
ins
lods
jae
int3
add
and
add
mov
add
test
fist
div
dec
clc
stos
not
jnp
sub
(bad)
cmp
je
and
xor
pop
test
clc
or
pop
dec
inc
out
or
add
add
xchg
sbb
sub
ins
mov
jne
or
je
lods
adc
pop
iret
or
dec
mov
sub
dec
push
push
push
mov
outs
add
xchg
loopne
ins
push
cmp
loop
mov
pop
dec
mov
call
adc
dec
in
mov
rcl
js
rol
clc
and
pop
rol
xchg
add
jb
add
add
sbb
add
pop
add
sbb
sbb
sbb
xchg
push
outs
(bad)
rol
mov
fwait
and
and
daa
sub
push
sar
aam
dec
mov
ss
cmp
std
add
stos
outs
mov
rcl
shl
out
je
(bad)
das
and
test
and
push
push
sbb
addr16
mov
push
in
dec
into
sub
xor
push
sub
in
cmc
(bad)
jno
add
aad
aad
adc
gs
mov
inc
mov
mov
addr16
es
pop
je
pop
sbb
jb
dec
imul
mov
out
clc
or
(bad)
cmp
jne
add
imul
or
loopne
adc
nop
retf
push
push
sub
sub
inc
or
mov
add
aad
rol
push
pop
ja
(bad)
jmp
jns
cs
aad
jne
jbe
push
mov
jno
push
pop
mov
mov
mov
adc
lock
sti
lock
jne
push
mov
lods
mov
inc
and
pop
jmp
sbb
shl
sbb
mov
sbb
push
push
inc
je
ds
push
xchg
sub
or
cmp
pop
sbb
mul
and
add
sbb
lock
sbb
cmp
ins
pop
jmp
and
popf
inc
fwait
imul
pop
or
cwde
push
mov
add
sbb
xchg
sub
mov
cmp
sbb
loopne
cmp
jg
lea
nop
fs
dec
push
out
push
dec
mov
push
jmp
pop
retf
sar
mov
adc
mov
cmp
adc
retf
inc
sti
cs
mov
jmp
dec
push
sbb
cmp
or
xchg
loop
cmp
scas
mov
and
test
xor
jbe
rol
add
or
mov
add
jo
out
xor
adc
or
adc
out
mov
push
pop
mov
test
jno
jae
add
push
jns
sub
sahf
nop
wbinvd
(bad)
cld
mov
(bad)
jmp
xchg
xchg
sub
xor
ja
push
xchg
out
aas
sbb
addr16
lea
adc
mov
dec
or
icebp
dec
aam
or
inc
and
(bad)
mov
mov
or
push
pop
mov
outs
add
jl
pop
(bad)
push
lods
inc
iret
adc
mov
stc
test
sete
cmp
jmp
mov
xchg
push
cmc
mov
push
xor
push
iret
adc
popa
jne
add
cmp
cmp
repnz
mov
add
pop
xlat
sub
cmp
and
jl
mov
imul
outs
mov
mov
push
icebp
inc
and
sahf
inc
test
lock
sub
test
retf
push
fcomp
mov
cmp
in
mov
xor
jge
fimul
leave
sahf
cs
or
shl
mov
adc
and
xchg
jo
mov
adc
sbb
mov
inc
push
dec
jbe
sub
add
inc
or
mov
dec
push
not
and
cdq
adc
int3
jge
sub
cmp
pop
rol
add
sub
and
stos
mov
pop
inc
adc
mov
outs
add
xlat
add
cmp
clc
jb
pshufw
sub
jmp
xor
jp
push
sbb
xchg
xor
push
jne
adc
cmc
add
lds
out
out
in
dec
add
push
xor
dec
inc
add
and
inc
rcl
add
pop
je
pusha
inc
sbb
sub
sbb
pop
mov
lahf
push
or
(bad)
and
mov
sbb
and
mov
cmp
inc
add
adc
mov
add
outs
and
push
pop
xor
push
push
lds
cs
or
outs
nop
movs
es
push
inc
or
adc
dec
inc
adc
add
and
or
and
pushf
add
dec
adc
or
inc
xchg
mov
push
jnp
(bad)
rcl
pop
sbb
dec
and
or
sti
jbe
xor
sbb
xchg
mov
mov
add
sub
push
push
mov
sub
sub
push
mov
loopne
sbb
fbstp
xor
and
push
mov
sub
imul
sub
or
sbb
inc
aas
push
pop
mov
cmp
ret
push
les
das
xchg
add
jmp
stos
push
xor
mov
aam
adc
or
add
shl
add
push
bound
hlt
adc
mov
lods
popa
cmp
aaa
mov
sub
cmp
or
pop
push
loope
cmc
test
push
inc
div
nop
cmc
cmp
cmp
adc
xor
lods
sub
popa
xlat
mov
sbb
sbb
shl
or
lods
mov
push
sub
das
pushf
ret
mov
sub
dec
push
(bad)
int3
aas
fadd
xchg
repnz
or
stc
jle
sbb
mov
fs
inc
retf
or
iret
call
sbb
into
adc
add
and
add
iret
xchg
ror
add
add
sbb
sub
add
shl
push
xchg
jg
add
cmp
mov
push
add
jmp
push
rol
push
and
mov
cmp
add
xchg
cmp
mov
xor
xchg
cmp
mov
or
and
pop
lods
and
fmul
ins
push
sub
or
cdq
cmp
call
jae
daa
adc
fstp
push
adc
mov
or
push
cmps
stc
xchg
dec
jb
or
dec
push
mov
dec
pop
or
inc
mov
adc
mov
popa
mov
push
mov
je
fistp
test
dec
dec
ror
leave
and
xor
push
xchg
jbe
mov
cmps
pop
fld
sbb
add
sbb
or
test
les
shl
push
lahf
cmp
sub
ret
enter
pop
jmp
inc
push
dec
sbb
repz
mov
(bad)
outs
or
mov
icebp
bound
add
push
jmp
mov
push
mov
adc
push
mov
cmp
and
imul
xor
retf
push
dec
int
data16
sbb
push
cli
fimul
ret
(bad)
adc
jbe
adc
(bad)
sbb
and
push
push
xor
nop
and
inc
dec
xor
mov
es
or
add
js
dec
inc
jl
mov
inc
test
adc
xor
cld
sub
mov
xlat
xchg
pushf
mov
fdiv
ins
gs
les
imul
pusha
aas
pop
dec
inc
movs
inc
xor
pop
mov
mov
je
dec
xchg
aas
xor
jmp
out
das
adc
mov
inc
inc
int
cs
pop
int3
aas
xor
xor
jns
nop
sub
add
dec
inc
adc
dec
pop
mov
cmp
sbb
add
outs
mov
push
xor
mov
cmp
(bad)
out
or
pop
out
fdivr
sbb
(bad)
dec
adc
push
pop
push
ficomp
lods
test
enter
and
fdiv
pop
pop
sub
sbb
jo
ss
dec
mov
cmp
nop
fwait
xchg
daa
dec
inc
add
dec
push
and
in
xchg
dec
push
add
xor
inc
xlat
mov
or
mov
push
cmp
repz
push
push
mov
add
or
fnstenv
pushf
sbb
push
add
pop
pop
adc
dec
inc
push
icebp
shl
mov
push
cld
pusha
inc
ins
outs
lods
xor
xchg
cmp
push
inc
add
and
push
sbb
push
test
bound
jne
mov
push
mov
mov
fdiv
adc
add
jmp
mov
and
jbe
add
adc
mov
jne
pop
or
int3
inc
push
add
pop
and
sub
add
jne
jge
or
xor
and
scas
or
lock
or
push
and
mov
pop
add
mov
cli
or
add
dec
jl
mov
pop
sbb
loopne
fadd
add
push
xchg
stos
mov
xor
inc
or
mov
or
push
int3
pop
push
sub
xor
hlt
jne
pop
pop
inc
pop
push
mov
push
pop
inc
add
aad
xchg
test
test
add
xchg
test
and
sub
push
inc
dec
sub
test
in
sub
loopne
inc
test
adc
pop
adc
push
push
div
push
add
mov
add
outs
push
test
inc
int
sar
into
pop
mov
mov
sbb
jb
fadd
jmp
sahf
pusha
into
int
inc
ss
xchg
sbb
push
or
or
cmp
inc
mov
inc
jp
mov
sub
in
cmp
bound
pop
dec
imul
dec
or
int3
out
call
(bad)
sbb
scas
imul
pop
push
mov
sti
int3
xor
das
pushf
mov
push
xchg
loope
sbb
mov
push
add
xchg
fild
add
inc
enter
sbb
xor
pop
xchg
and
loope
add
int
scas
xor
int
xlat
(bad)
sbb
inc
or
stos
mov
in
add
shl
clc
inc
pop
clc
push
mov
mov
ror
mov
cs
inc
test
or
mov
push
out
fldcw
(bad)
rcl
sti
xchg
push
sub
and
ss
xchg
data16
fisub
and
jle
cmp
outs
push
cmp
mov
ss
dec
add
mul
pop
call
in
dec
(bad)
pop
je
push
inc
nop
inc
scas
js
in
sbb
rol
add
rol
add
dec
dec
xor
shr
in
and
add
pop
mov
push
cdq
sub
mov
and
daa
test
and
push
and
pop
or
movs
push
inc
xchg
pop
sub
stc
push
dec
out
iret
ss
dec
enter
push
fs
pushf
xchg
inc
stc
xor
sti
push
ins
fldcw
sbb
sub
pop
or
jbe
xor
(bad)
sbb
mov
sub
stos
xchg
stos
and
call
(bad)
push
movs
movs
sub
loopne
push
aad
fmul
leave
sub
adc
mov
mov
mov
inc
mov
ret
jmp
(bad)
imul
xchg
push
add
add
fwait
add
fstp
push
push
push
jmp
je
add
popf
rcl
mov
call
(bad)
push
cmp
mov
pop
cmp
aam
pop
jle
jno
pop
jns
clc
jmp
cli
or
lods
cmp
and
xor
jmp
jne
retf
push
jae
xchg
add
push
sbb
xchg
cli
movs
popa
push
(bad)
movs
sub
add
adc
mov
jmp
test
pop
dec
(bad)
fsubr
mov
hlt
lds
and
sbb
xor
sahf
xchg
and
adc
mov
adc
xor
enter
push
loope
add
push
push
adc
fcomp
(bad)
pop
sar
fdiv
sbb
iret
cmp
push
loop
mov
ffreep
push
sti
call
dec
ja
aaa
inc
inc
sti
cmp
jge
mov
xchg
jp
xor
xchg
aad
je
push
cli
xor
pushf
jp
cs
les
xchg
scas
push
mov
dec
shr
inc
imul
lods
aas
out
mov
push
push
jnp
xlat
jo
pop
mov
mov
pop
movs
and
mov
mov
and
and
nop
or
add
out
or
push
shl
aam
xor
or
mov
cmp
xchg
test
push
or
mov
xor
call
inc
jmp
mov
scas
cmp
daa
or
mov
push
pop
ret
xor
inc
add
popa
sub
mov
mov
test
adc
sub
test
inc
jmp
sbb
or
call
adc
call
add
or
lods
push
xchg
jne
add
push
cmp
ds
mov
mov
sub
push
je
rol
aas
mov
adc
es
loopne
adc
and
aam
inc
int3
sbb
sub
sub
je
mov
push
movs
push
inc
push
mov
sub
aaa
or
into
ret
mov
or
sbb
movs
aas
sbb
push
push
cdq
aas
fcom
out
arpl
add
pushw
xchg
cmp
aaa
xchg
scas
or
or
movs
mov
adc
lock
sub
cli
int
jne
push
push
or
adc
mov
jmp
jne
push
scas
or
mov
pop
dec
fucomi
je
popf
mov
dec
inc
scas
xchg
ror
sti
adc
sar
xor
cmc
stos
test
push
add
xor
add
cli
dec
or
cmp
out
mov
call
ds
jno
je
and
jl
test
or
ficom
and
push
fsubr
xor
adc
push
mov
cmps
jae
mov
fild
out
push
or
push
or
js
xchg
mov
add
or
push
sahf
ror
jb
pop
pop
pop
mov
mov
std
rol
jne
sub
shl
mov
out
inc
adc
inc
jl
pop
jg
ja
mov
cmp
jmp
adc
cmp
sahf
xor
and
dec
ss
jmp
pop
sub
mov
fidivr
xor
jns
ja
add
jge
das
add
stos
add
std
push
inc
(bad)
lods
jmp
push
inc
inc
mov
test
(bad)
ss
mov
fisttp
or
push
pop
xchg
and
mov
mov
pop
lds
or
lock
popa
adc
test
xor
ja
and
pop
cmp
popa
push
adc
push
mov
pop
mov
inc
adc
mov
mov
aad
imul
fcomp
(bad)
jbe
mov
pop
and
leave
xchg
xchg
and
jb
dec
enter
add
xchg
or
int
or
(bad)
lock
mov
or
sub
inc
add
mov
aad
sub
imul
or
call
and
add
mov
rcl
nop
in
in
add
and
scas
test
jbe
sub
adc
bound
jg
ins
repz
sub
ins
mov
pop
dec
and
mov
mov
ins
jg
xor
sbb
ins
test
lods
sub
push
add
or
dec
outs
dec
jae
xchg
lmsw
cmp
pop
call
xchg
iret
xor
add
outs
shr
sbb
nop
addr16
pop
and
nop
popa
dec
leave
es
bswap
or
dec
adc
lea
or
arpl
cmp
ss
lahf
mov
fmul
call
ins
xchg
and
pop
int3
fmul
and
in
sub
and
add
fstp
add
and
fs
inc
add
cs
dec
dec
xor
mov
mov
out
movups
inc
add
scas
mov
rol
lsl
pop
nop
or
push
or
push
adc
ror
add
int3
lods
imul
and
inc
inc
or
and
sahf
pop
sahf
pop
shr
add
shr
sub
into
cmp
xor
lock
and
cmp
push
or
jmp
outs
xlat
(bad)
add
xchg
ins
jnp
jnp
cmp
add
jp
jnp
push
jl
pop
mov
add
inc
mov
mov
add
sbb
push
sti
ins
mov
add
add
mov
sub
push
pop
pop
or
aaa
xor
push
push
pop
mov
add
ins
mov
pusha
add
jo
js
pop
adc
mov
sbb
push
add
add
jne
ins
add
mov
movd
ins
or
loopne
addr16
add
pop
pusha
loop
ds
retf
iret
jne
dec
add
xchg
in
in
pop
fsubr
clc
or
in
cmps
out
or
cwde
jmp
xchg
add
cld
call
in
cmp
push
jne
jg
jmp
gs
push
push
popa
je
popa
outs
inc
bound
in
jbe
(bad)
jo
add
test
jne
sti
stc
jmp
gs
arpl
jbe
arpl
ja
repnz
ins
dec
outs
imul
(bad)
repz
xchg
add
cmp
idiv
je
ins
and
jb
jb
das
dec
dec
push
push
or
fld
dec
dec
inc
push
add
inc
outs
mov
lods
adc
push
xor
cmp
sub
ins
sti
imul
das
je
and
imul
push
(bad)
fcmove
aaa
daa
aaa
outs
outs
je
add
cmp
jo
arpl
data16
outs
ja
cmp
or
xor
xor
sti
ins
lods
std
jbe
jb
jne
xor
or
and
ins
sub
pop
pop
jnp
mov
das
pop
push
fsub
jae
fmul
pop
xor
imul
gs
xor
mov
ja
outs
pcmpgtb
arpl
cmp
mov
inc
and
retf
jl
and
aaa
mov
shr
ins
outs
arpl
adc
outs
lods
mov
add
imul
add
addr16
ins
and
movs
mov
inc
das
xor
dec
imul
adc
daa
sub
fisttp
lahf
sub
xchg
addr16
sahf
xchg
sub
xor
shr
mov
outs
sub
cmp
fs
push
sub
push
mov
push
imul
push
pushf
dec
imul
jb
daa
or
lea
aam
mov
or
loopne
sub
pop
loopne
mov
pop
ja
cmp
test
ss
popa
inc
inc
adc
push
mov
jne
add
xorps
call
jmp
jae
addr16
outs
js
pop
jae
jb
xor
fs
ins
dec
mov
ins
jo
pop
sub
dec
retf
mov
jns
xor
fs
push
mov
cdq
ins
dec
add
gs
bound
jg
push
xor
cdq
or
ret
call
in
sahf
leave
loopne
out
pop
outs
gs
jae
mov
ins
daa
pop
arpl
neg
dec
mov
fidivr
mov
inc
inc
xlat
neg
jmp
jns
aas
cmp
add
lds
and
or
fist
jb
scas
cwde
sub
or
jp
xchg
pop
inc
cmp
xchg
lock
daa
and
outs
call
cmp
add
push
cmp
jo
xchg
or
sub
adc
push
mov
nop
xor
mov
add
xchg
cmp
test
push
test
leave
or
inc
xor
clc
add
push
enter
imul
sbb
pop
add
dec
add
xchg
add
inc
push
inc
jle
call
mov
rol
ror
add
enter
lock
or
xchg
push
adc
jbe
sbb
iret
dec
push
adc
ins
pop
push
js
and
push
ins
cwde
xchg
mov
and
cmp
rcr
enter
lock
nop
pop
jb
adc
or
add
xor
adc
xor
inc
xor
nop
add
cdq
cmp
mov
outs
inc
pop
daa
pop
or
add
push
sti
add
adc
or
inc
bswap
jmp
cmp
retf
data16
sub
loopne
pop
sub
fwait
das
or
or
add
pop
aas
cmp
nop
or
inc
and
pusha
push
and
xor
pusha
pop
int3
inc
push
xor
daa
add
add
push
mov
mov
daa
or
add
nop
or
loopne
xchg
dec
push
and
pop
add
pop
xchg
xchg
inc
add
pusha
pop
add
jns
addr16
sub
or
nop
push
add
inc
inc
adc
fwait
pop
or
inc
lods
sub
(bad)
bswap
or
add
jle
fadd
test
adc
fisttp
ins
mov
jbe
dec
outs
pop
dec
sub
push
or
jmp
add
push
loop
fist
jb
arpl
inc
outs
nop
mov
cmp
and
add
mov
jb
jo
dec
les
pop
cmp
outs
or
pop
mov
adc
push
arpl
push
icebp
sub
push
push
out
mov
bound
gs
jo
gs
fisubr
and
xor
dec
outs
or
(bad)
mov
jae
dec
dec
push
inc
gs
xor
fmul
inc
call
inc
inc
imul
in
je
jo
cmovg
dec
jae
inc
cmp
mov
mov
dec
data16
inc
(bad)
jbe
in
les
jae
or
jnp
shl
mov
js
fsub
add
pop
inc
dec
add
div
and
push
je
sub
adc
mov
or
mov
mov
sbb
or
(bad)
sbb
outs
outs
and
in
jbe
mov
jae
sub
mov
mov
push
(bad)
lods
pop
mov
dec
inc
jnp
pop
inc
ds
sub
out
mov
cmp
cmp
push
inc
dec
inc
ja
in
jg
dec
dec
inc
push
dec
push
dec
inc
inc
inc
push
dec
pop
aas
aas
jnp
lds
aaa
and
cmp
push
inc
not
inc
stos
push
push
inc
imul
sti
sbb
pop
inc
push
and
xor
jge
pop
add
push
inc
push
inc
cmp
adc
rcr
add
mov
ret
or
jbe
sub
fwait
mov
add
fstp
jo
or
pop
dec
lock
sbb
arpl
pop
mov
aas
imul
sahf
fidiv
addr16
lods
sar
cmps
jnp
xchg
pop
cmp
dec
cs
imul
pop
sti
je
imul
jmp
inc
dec
dec
push
or
jbe
icebp
cmps
cs
cmp
icebp
mul
jmp
sub
jo
jae
jns
in
aam
mov
test
pop
sbb
sub
add
sub
and
inc
add
dec
fsubr
fnsavew
sar
scas
bound
push
push
data16
mov
test
das
test
popa
gs
jmp
(bad)
fsub
ins
jb
pusha
ror
push
xlat
adc
ret
mov
sub
mov
xor
or
pop
and
cs
adc
pop
sub
xchg
push
adc
outs
das
out
dec
mov
dec
inc
inc
add
jo
push
or
mov
call
adc
pop
fs
(bad)
jo
loope
sbb
add
push
in
out
jmp
sbb
iret
push
push
and
jno
(bad)
push
sub
dec
std
inc
or
pop
cli
popa
outs
inc
dec
inc
push
or
push
dec
inc
pop
jnp
out
(bad)
push
inc
xor
sub
sub
xor
add
xor
xor
gs
inc
call
inc
sub
and
int
or
das
ins
sub
gs
jae
int
add
addr16
mov
and
arpl
das
xor
xor
and
jecxz
push
ror
imul
xor
add
dec
push
or
inc
lods
inc
mov
mov
mov
and
and
and
idiv
xor
adc
jo
retf
sbb
sbb
sub
jbe
push
popa
mov
dec
(bad)
retf
and
push
push
inc
inc
cs
daa
in
fstp
push
adc
sbb
inc
xchg
inc
sbb
sar
push
inc
inc
ss
jae
push
ins
imul
add
sti
ror
mov
sub
lea
push
inc
inc
inc
pop
and
mov
dec
dec
lods
push
push
outs
ret
or
jno
stos
leave
push
jae
sub
xchg
arpl
push
inc
adc
loope
ret
jne
jae
mov
ficom
add
call
or
imul
je
dec
(bad)
int
div
or
mov
sahf
jle
js
xor
push
ja
and
neg
push
pop
test
outs
shl
enter
add
int
xor
xor
je
cs
je
and
pusha
in
inc
lahf
dec
push
jb
sahf
xor
mov
mov
add
imul
fimul
sbb
sub
or
mov
mov
jbe
push
cwde
xor
les
xor
shl
add
pop
or
fs
pop
push
or
jnp
test
js
mov
pextrw
and
cld
push
jb
inc
xchg
out
xchg
xchg
and
and
adc
mov
mov
lea
cmp
jg
xor
xchg
push
mov
xor
pop
test
ret
push
mov
xlat
add
and
std
mov
das
inc
add
lods
fisttp
cmp
cmp
(bad)
call
popa
jae
test
(bad)
jae
std
inc
xor
inc
jnp
imul
fs
fisttp
cwde
sub
pop
mov
test
cmp
and
and
jecxz
or
jne
rol
or
jb
test
daa
and
jns
mov
(bad)
in
or
and
pop
inc
arpl
mov
inc
fmul
jne
dec
sbb
add
nop
pop
neg
pop
sub
call
outs
(bad)
xor
push
inc
mov
inc
push
dec
xchg
lods
adc
sbb
fnstenv
sbb
push
popa
jbe
jae
outs
mov
jge
jne
arpl
data16
leave
sub
xor
push
xor
pusha
mov
or
test
push
push
xchg
addr16
into
inc
jecxz
js
sbb
aad
in
jo
fs
arpl
(bad)
sub
sbb
mov
lea
pop
stos
dec
shl
sbb
enter
push
pop
sub
sub
pop
rcr
es
push
pop
dec
jmp
push
stos
mov
dec
ins
inc
lea
mov
daa
jb
pop
mov
mov
test
test
sub
jae
sub
and
inc
loope
xchg
mov
outs
sbb
out
jns
and
arpl
and
andps
inc
js
pop
mov
inc
xor
jge
or
das
pop
cmp
test
je
or
and
dec
gs
add
daa
xchg
int
mov
sub
arpl
daa
dec
lea
push
ja
imul
dec
mov
pop
data16
pop
inc
(bad)
jns
xchg
sbb
inc
in
and
les
aas
(bad)
lods
loopne
in
xchg
jbe
jae
bound
adc
repz
sub
xchg
jb
add
jge
cmps
xor
mov
test
xlat
loope
dec
and
ins
fdiv
fstp
add
gs
inc
mov
sub
sbb
les
jecxz
push
jbe
cmp
jae
add
sbb
pop
xor
iret
xor
ins
xor
add
hlt
ret
cmp
test
fld
mov
stc
aad
js
in
sub
jnp
dec
sub
inc
out
andps
loope
lods
cwde
shl
add
xchg
jge
or
repnz
add
test
inc
or
or
loopne
std
getsec
xchg
push
or
mov
fs
cmp
scas
jae
dec
or
inc
call
cmp
inc
xchg
jae
mov
inc
and
jne
(bad)
shl
sub
cmps
mov
sbb
(bad)
jne
and
mov
loope
cmp
inc
xchg
cvttps2pi
(bad)
retf
arpl
dec
sbb
test
pop
adc
je
jno
jne
pop
cmps
pop
push
jae
add
fmul
add
and
ss
stc
ins
dec
jbe
xor
jo
jo
sub
dec
push
sub
hlt
es
nop
pop
and
xor
test
adc
inc
pop
pop
popa
nop
and
enter
pushf
sub
jl
push
add
dec
popa
fidivr
pop
pop
js
retf
cmp
push
add
cmps
dec
out
add
shr
push
mov
mov
mov
loopne
ror
dec
dec
pop
add
cmp
jbe
jmp
mov
test
das
sbb
dec
call
dec
out
pushf
mov
sub
adc
xor
fwait
mov
sub
aam
xor
xchg
rol
push
inc
inc
dec
dec
and
shl
pop
test
push
es
in
xor
dec
pop
xor
xor
daa
je
aam
cmp
push
inc
sub
dec
xor
sub
retf
clc
nop
fwait
inc
ja
inc
clc
or
stos
sub
int
sub
cmps
retf
sub
rol
or
loopne
in
ret
cmp
ja
push
or
fisubr
adc
push
inc
pop
icebp
xchg
loope
xchg
or
adc
imul
xor
xor
xchg
and
loopne
icebp
add
ins
add
lods
sahf
shl
dec
push
push
xlat
push
fist
test
inc
push
dec
push
push
lods
xchg
adc
dec
dec
or
sub
sbb
iret
fisubr
out
daa
push
cmp
and
inc
mov
dec
dec
cdq
and
push
das
fdiv
push
add
push
out
xor
inc
arpl
mov
jae
inc
push
xchg
xchg
jne
ds
push
scas
fmul
or
jbe
data16
xchg
mov
enter
xchg
ins
jne
addr16
add
or
push
sbb
xchg
xchg
pop
loopne
das
adc
daa
cmc
mov
jle
imul
out
gs
iret
fcomp
xchg
push
add
popf
push
xchg
sub
cmpps
nop
jmp
push
sbb
(bad)
out
dec
gs
inc
push
retf
das
jl
loopne
out
jno
jnp
add
sub
(bad)
popa
cdq
outs
inc
add
add
xor
or
call
pusha
movs
cmp
pop
loope
popf
stos
ja
adc
mov
or
outs
pushf
icebp
xchg
ret
pop
test
movs
rcr
add
and
arpl
aam
iret
jb
or
push
dec
sbb
loop
lds
xchg
stos
pop
sub
rcr
bound
push
sbb
mov
jo
out
loope
add
jge
or
jno
sti
aas
pop
ss
and
mov
add
enter
adc
leave
cs
xor
and
or
pop
and
add
mov
aam
in
adc
fmul
in
add
and
arpl
rcl
adc
loopne
das
and
push
adc
inc
pushf
pop
mov
ret
inc
sub
push
pop
adc
rcr
in
int
add
(bad)
les
push
inc
jmp
pop
(bad)
into
mov
dec
inc
pop
push
inc
das
sbb
outs
and
scas
sub
dec
xlat
adc
cli
imul
mov
cmp
jae
jb
shl
or
retf
dec
push
adc
or
adc
inc
fisubr
add
xlat
pop
lea
inc
(bad)
(bad)
pop
adc
sub
dec
ss
shr
or
out
ins
pop
push
scas
push
jge
imul
jne
iret
push
pop
xor
push
loopne
scas
add
pop
inc
aam
sbb
push
test
sub
or
mov
xor
add
cwde
inc
test
jae
or
lahf
jnp
and
jne
lock
cmp
xor
shl
xor
mov
ins
jae
mov
mov
cdq
or
inc
sub
(bad)
dec
inc
push
and
pop
hlt
cmp
loopne
pushf
xchg
and
das
bound
mov
cmp
scas
sahf
fild
cmp
dec
jae
mov
sti
push
scas
fs
arpl
addr16
mov
push
inc
pop
ret
mov
xor
jbe
push
test
dec
pop
xor
or
mov
adc
add
pop
aas
lods
nop
mov
lds
fisub
bound
pop
jae
pop
ret
test
xchg
jbe
add
push
popa
test
inc
mov
aam
jae
rol
pop
jecxz
sub
stos
mov
stos
aad
loop
sub
inc
call
popa
sar
adc
lods
add
sub
ret
adc
dec
sub
movs
adc
push
inc
mov
mov
sbb
dec
push
sub
jp
cmp
sbb
xchg
add
out
(bad)
push
mov
push
push
xchg
inc
jbe
and
xor
mov
jae
stos
add
mov
mov
addr16
cmp
(bad)
jo
push
fwait
adc
dec
ja
lods
or
das
sub
xchg
pop
push
mov
out
cmp
xchg
pop
xor
dec
retf
mov
sbb
sub
and
pop
ja
imul
shl
and
xchg
stos
scas
sub
dec
and
ret
daa
rol
das
cs
pop
das
arpl
xlat
ss
xor
and
adc
jno
jge
aad
or
fcomp
test
addr16
adc
je
sub
shl
and
sbb
fbld
adc
add
sub
cli
loop
ret
push
das
inc
inc
mov
aaa
dec
repz
test
daa
push
montmul
cmps
inc
pop
aaa
out
repnz
push
inc
push
add
jnp
aad
out
push
push
cmp
aaa
fwait
push
out
pop
addr16
rcr
outs
outs
inc
mov
inc
inc
dec
inc
aaa
pop
and
pop
pop
dec
pop
pop
mov
push
push
ja
push
dec
push
das
not
pop
mov
dec
int
add
push
sub
push
cmp
pop
jg
adc
fcomp
inc
push
xchg
push
jno
inc
fild
movs
push
fbld
or
outs
sbb
adc
jns
jne
lods
mov
xchg
mov
cs
push
mov
(bad)
jecxz
sub
dec
gs
jae
jl
sub
inc
cmps
cmc
lods
inc
pop
or
popf
fbstp
pop
pop
in
lds
popa
aam
sbb
mov
inc
call
push
push
pop
mov
clc
test
das
iret
dec
jae
and
add
daa
xor
mov
data16
aad
sub
int
xchg
pop
pop
mov
push
outs
adc
mov
pop
xchg
xchg
dec
push
or
sub
jecxz
sub
pop
inc
and
arpl
ins
inc
aaa
sub
sub
push
outs
xchg
dec
xor
cmp
inc
in
test
xchg
cmp
pop
mov
and
das
ins
dec
je
das
out
cmp
add
push
cli
pop
push
add
addr16
push
inc
pop
jg
xor
inc
fs
push
adc
fisub
inc
xchg
or
adc
fdiv
arpl
call
cmp
cld
in
lock
adc
inc
imul
pusha
(bad)
jae
shr
fs
mov
das
mov
xchg
mov
outs
pop
adc
and
push
dec
sti
ret
sub
pop
inc
dec
push
push
pop
or
sbb
xor
sbb
xchg
mov
and
inc
or
xchg
or
repz
popf
or
sub
test
stos
dec
jo
out
adc
xlat
pop
add
sub
ds
jmp
inc
xor
(bad)
pop
lock
fild
dec
add
or
ss
fld
aaa
sbb
mov
loopne
fwait
(bad)
add
scas
push
pop
or
adc
xchg
ins
(bad)
mov
or
jb
jp
pop
add
dec
rcr
add
push
(bad)
inc
dec
inc
dec
mov
outs
dec
cmp
adc
imul
imul
cmp
ret
or
and
or
xor
ds
pop
not
dec
push
xor
and
cs
sbb
cmp
pop
loopne
cmp
and
test
xor
ret
loopne
sbb
cmp
je
cmps
mov
mov
jb
xor
mov
in
cmps
jb
cmp
arpl
pop
in
popf
mov
data16
aaa
mov
cs
aaa
and
adc
dec
das
jb
add
loop
fwait
adc
not
mov
jae
inc
adc
inc
int3
adc
push
mov
jg
inc
int3
add
sub
and
adc
dec
adc
mul
shl
pop
inc
cmp
sbb
sahf
push
or
and
mov
sub
mov
adc
or
jnp
and
pop
dec
xor
ret
sbb
adc
fs
push
fsub
mov
jns
inc
(bad)
pop
add
inc
popa
arpl
mov
and
aaa
add
(bad)
clc
push
js
mov
dec
inc
inc
dec
pop
shl
and
lahf
or
sbb
cs
ins
outs
sub
in
bound
pop
inc
inc
or
mov
neg
mov
cmps
sub
xchg
call
jg
ins
fs
xchg
adc
push
add
cmp
inc
loopne
test
or
adc
push
das
(bad)
aam
fiadd
aas
sub
xor
cwde
int3
mov
adc
pop
xchg
jg
stos
inc
jns
aas
or
xor
jae
iret
push
(bad)
xchg
push
add
mov
ins
add
inc
(bad)
cmp
aad
mov
or
adc
ror
mov
mov
cmp
ret
add
mov
dec
aas
adc
mov
xchg
mov
inc
or
inc
bound
and
dec
aas
adc
pop
retf
and
imul
inc
jmp
test
pop
adc
jg
shl
shl
sar
test
jmp
mov
mov
dec
xor
pop
or
imul
mov
fild
pop
mov
dec
mov
inc
stos
mov
mov
cmp
push
dec
inc
adc
adc
cmp
addr16
daa
push
arpl
lods
inc
movs
mov
lods
xchg
adc
cmp
ins
sub
push
bswap
pop
add
ja
and
dec
pop
cli
pop
rol
fwait
mov
pop
jne
arpl
pop
sbb
push
push
mov
das
push
add
push
lods
pop
or
or
je
popf
in
xchg
sub
ins
or
or
or
ret
fiadd
mov
add
cmp
and
std
aaa
fbstp
push
dec
retf
inc
pop
add
ja
push
jmp
fsubr
loopne
fs
dec
call
and
add
and
adc
add
lds
ins
sbb
adc
push
push
or
outs
or
push
push
jb
cmovl
lods
push
fsubr
or
jae
adc
mov
cmps
ds
mov
fcomp
push
mov
ins
push
ret
nop
frstor
in
add
fwait
adc
and
cdq
jae
ror
pop
fsubr
lahf
dec
pop
retf
xchg
lds
jmp
pop
xchg
add
pop
mov
hlt
sub
ins
call
push
mov
out
xor
or
push
cmp
xor
xor
xor
xor
rcr
pop
xor
xor
xor
rcl
cmp
jbe
and
cmovp
pop
fwait
popf
in
xor
xor
pop
mov
sbb
xor
sbb
fisubr
xor
(bad)
sbb
in
jo
jo
ja
xor
jp
and
xor
popf
test
and
push
inc
and
mov
xor
push
pusha
call
pop
ret
jg
pop
cmp
inc
pop
fmul
add
cs
and
repz
aaa
xor
xor
add
sbb
sub
adc
ss
jae
pushf
adc
xor
mov
cmp
xor
jnp
lahf
outs
into
sbb
and
xor
cmp
cmp
addr16
cmp
dec
cdq
push
cmp
imul
and
xor
dec
xor
retf
adc
xor
xor
xor
add
xor
add
mov
mov
pop
mov
stos
xlat
adc
or
jb
add
js
inc
lods
jne
sub
xchg
add
push
push
and
test
stos
dec
mov
mov
xchg
inc
sub
fistp
and
adc
push
xchg
mov
and
addr16
mov
sar
je
jmp
add
cmpxchg
pop
jmp
mov
jle
in
add
sub
ja
mov
push
cmc
das
popa
rcr
sbb
nop
dec
dec
sub
mov
(bad)
mov
lods
add
test
xor
add
push
mov
cmp
sub
pop
sub
shl
mov
retf
mov
popa
adc
add
inc
jge
das
xchg
and
ins
dec
popa
scas
das
pop
mov
jb
sub
aaa
jne
inc
or
dec
pop
shl
sbb
sbb
inc
and
push
mov
sbb
dec
ret
cli
popa
and
and
aaa
cli
and
xchg
jge
push
and
xor
pop
je
mov
jp
add
stos
lds
bound
pop
mov
jecxz
xor
sbb
push
push
mov
xchg
int
aaa
xor
or
cmp
sub
movs
cmps
xchg
es
pop
lods
xchg
nop
add
mov
and
add
sbb
xchg
int
inc
ja
jae
mov
imul
add
arpl
add
cmp
mov
inc
inc
dec
dec
adc
outs
loopne
mov
retf
mov
sub
pushf
inc
inc
and
sub
or
mov
mov
push
adc
mov
hlt
xor
push
ja
mov
mov
and
js
mov
ja
ds
cwde
aad
stos
pop
adc
js
pop
cmp
sbb
push
test
daa
and
cmps
xchg
fbstp
je
jmp
mov
mov
jb
arpl
push
sub
call
xchg
xor
jae
pop
inc
mov
push
es
sub
sub
sub
out
dec
imul
adc
push
dec
aam
or
cmp
nop
xchg
or
mov
(bad)
arpl
and
inc
push
pop
jb
sub
cdq
pusha
call
fstp
xchg
cmp
mov
cmp
sbb
gs
push
and
pushf
cmp
test
or
(bad)
push
cmp
and
outs
test
aaa
xor
dec
dec
inc
retf
add
ins
push
push
not
and
add
sub
cmp
daa
inc
inc
and
cmp
loopne
retf
movs
add
out
jno
adc
pusha
inc
enter
and
mov
jae
rcr
retf
pop
push
and
sbb
in
jno
ret
lock
clc
imul
inc
not
dec
fldenv
dec
pop
gs
das
arpl
fs
jmp
push
adc
add
ss
and
and
inc
ss
add
xchg
push
xchg
enter
js
mov
int
gs
cwde
outs
add
xor
adc
test
push
loope
xor
std
xchg
mov
or
cmps
aaa
loopne
pop
test
push
mov
cmp
fstp
mul
cdq
inc
loop
(bad)
inc
dec
sbb
ins
add
inc
and
adc
sbb
xor
cwde
sbb
les
lock
ins
sub
fldenv
cdq
pop
(bad)
and
movs
ins
rcr
or
arpl
movs
call
push
sar
xchg
lds
sbb
call
fild
pop
mov
sub
mov
das
xchg
ins
aad
ficom
push
add
icebp
stos
and
ret
xchg
lods
push
mov
push
pop
dec
add
push
dec
outs
push
pop
mov
in
dec
inc
nop
(bad)
sub
push
pop
dec
inc
inc
inc
neg
dec
mov
mov
push
fwait
xchg
ins
ins
cmp
sbb
sub
cmps
ror
rol
or
or
je
add
cwde
lds
sbb
add
dec
or
or
fmul
push
mov
xor
or
push
add
addr16
stos
je
or
or
sbb
inc
cs
mov
popa
mov
push
or
adc
add
mov
arpl
shl
and
data16
aam
outs
pusha
or
xor
dec
add
add
xor
inc
and
sbb
ret
cmp
xor
add
or
fidiv
daa
callw
dec
push
jo
add
movs
pusha
cmp
inc
inc
enter
push
mov
or
mov
loopne
jl
or
fidivr
cmps
inc
xor
xor
or
mov
daa
retf
ret
xlat
or
or
xor
aaa
xchg
and
or
cmp
cmp
cmps
popf
inc
das
add
stos
and
pop
retf
out
and
in
xor
mov
xrelease
inc
test
inc
mov
mov
je
dec
out
push
ins
fs
or
ret
dec
and
repz
push
jecxz
and
dec
outs
inc
fcomp
cmc
call
push
adc
into
and
and
mov
les
iret
bound
out
xlat
sbb
pop
popa
jns
dec
mov
push
xor
and
mov
mov
sub
push
outs
push
mov
cmp
movs
sub
in
adc
fistp
(bad)
(bad)
rcr
jmp
outs
sbb
neg
test
punpcklbw
or
mov
mov
mov
ror
pop
inc
nop
sub
adc
jmp
and
in
inc
pusha
aaa
lds
(bad)
cs
ins
adc
sub
dec
push
adc
sub
xchg
ss
push
aas
mov
jle
adc
jo
fs
and
sub
scas
inc
iret
xor
mov
mov
ret
les
add
xchg
dec
jge
cmps
adc
outs
push
sub
aas
sub
and
nop
arpl
sub
adc
push
xchg
cmp
adc
add
push
ret
inc
sbb
shr
adc
cmp
sar
add
push
pop
or
cmp
add
mov
cdq
jmp
mov
loope
test
adc
adc
push
leave
hlt
mov
js
iret
lahf
sbb
xor
ret
add
bound
push
dec
aam
xor
mov
iret
mov
sbb
mov
arpl
test
mov
inc
xor
int
outs
sbb
es
into
jns
cs
sbb
mov
cs
add
or
xchg
sbb
or
push
xor
dec
inc
sub
das
add
inc
cmp
xchg
adc
adc
xor
push
xor
mov
jnp
mov
in
add
push
ja
pop
add
sub
inc
xchg
mov
push
push
push
inc
or
adc
fs
add
repz
push
adc
mov
inc
xor
mov
add
data16
add
push
sub
pop
ins
aam
cld
or
or
and
mov
iret
add
in
popa
push
je
and
or
mov
dec
mov
jnp
test
ins
add
es
dec
pop
jle
test
jl
call
pushf
fimul
nop
push
pop
inc
add
add
or
shl
pop
sbb
bound
ds
mov
mov
ds
fsub
pop
cmps
xchg
push
adc
or
dec
adc
ins
mul
and
gs
mov
pop
emms
pop
sub
mov
xor
or
loop
push
out
mov
or
push
or
mov
xlat
mov
pop
add
pop
inc
lods
fmul
adc
mov
add
dec
adc
das
push
and
sub
mov
sub
sti
inc
je
jo
mov
sbb
cdq
push
retf
inc
mov
aaa
dec
add
adc
dec
inc
push
loop
pop
inc
dec
inc
test
inc
inc
out
pop
jae
pop
add
inc
ffree
fldcw
mov
addr16
das
(bad)
cmc
call
in
rol
aaa
dec
mov
xchg
dec
fs
mov
sbb
sbb
pop
jle
or
outs
sub
sub
js
not
inc
and
sub
dec
out
imul
outs
fcomp
sub
adc
(bad)
popa
and
fst
or
pop
lods
and
or
jo
inc
pop
nop
and
pop
pop
adc
xchg
mov
jae
inc
ret
mov
xchg
ret
sbb
ins
shr
and
adc
or
test
stos
dec
sbb
or
pop
aas
xor
bndstx
inc
dec
fstp
mov
cmp
popa
adc
imul
arpl
cmps
aad
or
add
sbb
mov
fstp
loopne
push
nop
pop
aaa
mov
bnd
daa
movs
adc
retf
out
jae
adc
sbb
fcom
aam
ret
xor
push
adc
sbb
mov
and
outs
and
sbb
pop
xor
and
push
lea
lds
cmp
es
push
push
and
mov
mov
mov
mov
pop
inc
cmc
ret
daa
push
les
stos
cmp
inc
and
xor
aaa
xor
aaa
addr16
add
cmp
xor
mov
cmp
push
je
sbb
dec
push
in
adc
test
pop
adc
cmp
push
push
push
push
mov
loopne
lds
das
add
loop
push
stos
sbb
or
sbb
push
push
dec
inc
fs
cmps
jge
and
cs
in
adc
jno
or
or
in
push
lods
outs
mov
sahf
adc
inc
xor
add
push
dec
push
pop
or
sbb
sar
inc
ret
test
sbb
inc
push
bound
test
daa
adc
ins
fld
or
push
mov
sub
test
dec
add
mov
fisub
dec
bound
dec
cmp
push
ret
pop
or
adc
imul
adc
or
ficom
adc
or
mov
jae
inc
cmp
push
xor
push
aaa
jnp
lea
push
jmp
ja
mov
add
jl
jo
call
dec
dec
push
fist
rol
pusha
inc
test
iret
or
add
or
inc
ins
or
adc
push
outs
aad
sub
add
pop
mov
into
and
and
and
push
les
sbb
jmp
pusha
sub
pop
arpl
outs
adc
aas
xor
or
sub
rol
pop
pop
cmp
scas
sbb
add
mov
add
push
lods
fst
xchg
push
dec
mov
push
xor
inc
inc
or
xor
push
test
mov
fwait
adc
ins
or
call
and
jnp
mov
js
dec
dec
xlat
loop
loope
xor
ss
mov
dec
dec
push
add
or
pop
pop
mov
fiadd
mov
inc
push
adc
or
ins
dec
pop
scas
or
sbb
out
icebp
in
pop
adc
mov
add
sub
xchg
dec
push
test
jns
test
data16
cli
inc
pop
das
ror
dec
pusha
xchg
mov
mov
push
inc
push
and
mov
dec
add
in
icebp
pop
inc
push
dec
mov
add
and
sbb
jmp
pusha
pusha
pop
pop
lea
add
mov
inc
inc
pop
inc
inc
(bad)
or
enter
dec
dec
push
pop
push
mov
inc
and
and
dec
in
cmps
ins
jne
push
push
call
popa
push
addr16
inc
repz
sbb
mov
push
jnp
pop
ss
or
or
out
mov
cmp
movs
sbb
push
adc
adc
adc
enter
xor
and
pop
fsub
or
pop
jnp
out
or
sti
stos
jo
mov
add
xor
pop
sbb
inc
call
sahf
push
sbb
movs
outs
cmps
mov
popa
mov
lahf
into
pop
xlat
or
pop
jnp
sub
jb
xchg
and
and
adc
add
adc
add
adc
add
mov
add
pop
cs
ss
shl
add
ror
inc
test
pop
inc
lods
xchg
sub
push
aas
mov
mul
in
sahf
ins
gs
dec
mov
fwait
dec
rcr
call
sbb
sub
fild
add
imul
lea
push
fs
push
mov
inc
xchg
xchg
sbb
fs
add
mov
or
stos
adc
push
pop
or
cmps
imul
adc
adc
dec
shl
call
mov
ss
shl
sbb
sbb
imul
fnstcw
test
dec
add
add
shl
stos
cmps
fucomip
iret
dec
sahf
pop
mov
cld
inc
jle
cld
das
jnp
rcr
daa
cmp
cmp
das
inc
nop
(bad)
mov
mov
in
call
arpl
add
pop
pop
fcmove
in
scas
in
fidiv
rcr
fsubp
stc
cmp
jle
movs
mov
pop
pop
pop
pusha
dec
inc
enter
pop
add
mov
fmul
test
or
or
enter
mov
movs
jmp
pop
xchg
add
aam
adc
xor
ins
add
cmp
pop
ja
cmps
mov
shl
push
sbb
daa
das
add
aam
hlt
shr
ja
push
add
add
imul
fsubr
cmps
imul
cmps
imul
cmps
imul
cmps
imul
mov
xor
and
scas
imul
mov
scas
cs
add
sbb
add
out
add
mov
mov
add
test
inc
pop
xor
mov
mov
pop
or
(bad)
pop
add
out
inc
pushf
inc
loope
cli
add
lods
std
push
pop
adc
pop
sub
mov
or
iret
imul
scas
jo
pop
xor
jb
add
rcl
loop
and
and
or
fsub
pop
and
pop
mov
sub
inc
cmp
loop
and
pop
and
inc
setno
cmps
inc
pop
nop
push
adc
inc
dec
dec
inc
cwde
mov
cmps
(bad)
mov
inc
mov
xchg
xchg
mov
sub
and
pop
adc
ficomp
(bad)
add
pop
xchg
je
mov
add
xor
scas
inc
sbb
sub
dec
dec
push
and
popa
sbb
rcr
sbb
adc
mov
cmp
ins
ja
add
cmp
jbe
sahf
push
add
push
jmp
pop
or
inc
mov
add
jo
adc
fcomp
ins
outs
add
lock
in
(bad)
pop
xor
fldenv
mov
ss
mov
gs
mov
(bad)
sub
(bad)
ret
sub
repnz
xor
mov
mov
sub
dec
push
xchg
xor
and
ins
jmp
cwde
adc
dec
inc
and
and
mov
lods
lock
sbb
sbb
xchg
mov
dec
adc
mov
cs
or
in
push
popf
or
add
es
test
and
pop
push
cmc
imul
inc
mov
mov
push
cmps
push
arpl
and
pop
inc
mov
or
sbb
rcr
sub
push
mov
xchg
pop
icebp
xor
push
adc
xlat
jne
lods
out
and
xor
movs
inc
sar
lods
pusha
and
pop
aaa
push
or
inc
call
sub
test
test
test
sbb
data16
add
add
and
adc
or
or
xor
xor
add
adc
inc
aas
add
mov
inc
jb
add
jne
rsm
or
inc
fldenv
dec
gs
jbe
in
push
rcr
pop
ins
shl
inc
add
loopne
xchg
sbb
push
gs
(bad)
int
sub
jns
ss
jnp
push
pop
gs
mov
dec
ss
into
aas
push
and
and
push
test
push
sub
add
mov
inc
jecxz
shl
mov
or
loope
inc
jp
sub
mov
inc
arpl
add
bound
or
or
add
push
ficom
bound
lahf
adc
fisub
outs
push
xchg
stos
xchg
adc
push
or
add
js
or
adc
pop
push
adc
push
jnp
mov
lock
xchg
icebp
in
shl
or
adc
or
xor
mov
inc
ins
and
add
bound
cmps
into
int3
fmul
xchg
xor
xchg
(bad)
inc
adc
push
outs
lock
imul
ins
push
icebp
ins
jae
arpl
inc
fcom
(bad)
pop
push
popa
jbe
and
bound
mov
push
addps
sub
pop
popa
pusha
les
push
fist
jae
pop
icebp
push
and
sub
or
adc
int
mov
int3
loopne
dec
fist
sbb
inc
dec
push
add
cdq
sub
and
pop
shl
push
push
sbb
jl
imul
mov
lea
push
or
push
jbe
fisttp
leave
pop
ret
dec
mov
or
jns
mov
jae
bound
inc
in
dec
mov
pop
and
das
sub
add
inc
dec
cmps
scas
or
xor
outs
push
imul
jbe
pop
xor
shr
int3
jo
mov
lods
jns
ja
inc
mov
xor
outs
xor
sbb
push
mov
inc
inc
or
jnp
popa
imul
mov
sub
adc
adc
or
js
dec
inc
sbb
es
jmp
push
push
sub
cmp
lods
sbb
or
or
mov
mov
add
xchg
pop
push
pop
call
xchg
jo
pop
dec
lods
sbb
jecxz
ja
dec
push
mov
xchg
push
sbb
mov
pop
dec
adc
or
push
push
and
fldenv
int3
cli
and
in
popf
push
or
push
push
xor
inc
(bad)
adc
mov
das
gs
pushf
pop
sbb
cwde
sub
and
add
adc
fadd
pop
loope
or
mov
push
je
ja
vfmaddsub132ps
out
inc
in
push
xor
add
jmp
mov
push
aad
data16
call
pop
adc
inc
sub
inc
inc
arpl
bound
jnp
add
jge
adc
aas
inc
xchg
stos
pusha
push
pop
xchg
xor
sub
sbb
mov
add
call
arpl
scas
rcl
inc
popa
inc
fsubr
int3
add
fdivr
movs
adc
or
and
push
add
and
jmp
inc
adc
pusha
(bad)
mov
imul
fsubr
mov
(bad)
cmp
sub
fldcw
data16
mov
push
push
(bad)
mov
pop
cmp
pmaxub
or
imul
add
adc
ins
push
add
or
push
cmp
enter
dec
mov
es
dec
pop
aad
add
ret
mov
jo
je
sub
jmp
pop
out
data16
test
jb
xchg
push
loopne
cmp
push
lea
mov
(bad)
xchg
icebp
loop
mov
mov
call
jb
rol
pop
in
adc
xlat
rcr
jae
or
arpl
jmp
or
inc
dec
jo
int3
add
shl
adc
sub
mov
push
arpl
add
fidiv
xchg
xchg
push
dec
lea
sub
shl
shl
push
loop
pop
add
push
jo
sub
dec
(bad)
adc
pop
add
cmp
hlt
dec
mov
cmp
xor
shr
adc
inc
sub
(bad)
call
add
sub
mov
or
xchg
retf
mov
retf
adc
or
or
retf
mov
pop
add
outs
inc
jg
jg
push
inc
dec
add
or
les
add
add
add
add
inc
ins
cmp
xor
add
inc
or
add
pop
jge
nop
dec
pop
jo
add
into
xor
and
and
pop
or
add
push
pusha
(bad)
lock
pop
movs
dec
jecxz
jmp
mov
mov
and
jb
popa
mov
popf
xor
sti
xor
je
xor
es
int3
pop
nop
push
fwait
mov
jo
daa
ror
scas
push
into
or
repz
inc
dec
fld
dec
pcmpeqw
ins
add
add
add
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
add
add
add
add
add
add
add
add
add
xor
add
add
add
or
add
add
pop
nop
add
mov
add
pop
pusha
add
mov
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
outs
add
inc
add
ins
add
dec
add
data16
add
in
add
add
add
add
xor
cmp
xor
xor
inc
add
add
sub
add
add
inc
add
ins
add
inc
add
jae
arpl
jb
imul
imul
xor
adc
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
and
xor
add
add
add
add
add
add
add
sbb
add
dec
add
imul
outs
add
ins
add
imul
outs
add
ins
add
add
add
jbe
js
add
arpl
add
js
add
add
adc
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
or
add
add
add
xchg
add
lods
xchg
add
stc
xchg
add
mov
add
add
xchg
add
les
add
setae
add
xchg
add
sbb
add
and
add
fcom
add
xor
add
cmp
add
dec
xchg
add
pop
xchg
add
add
add
push
add
add
add
add
add
js
add
add
add
xchg
add
nop
xchg
add
add
add
outs
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
ins
add
xor
fs
ins
add
xor
cs
ins
add
inc
push
xor
cs
ins
add
push
push
dec
dec
dec
cs
ins
add
dec
inc
dec
xor
cs
ins
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
inc
js
je
jb
arpl
jae
add
inc
gs
arpl
add
gs
inc
outs
inc
jb
popa
je
inc
jne
add
push
gs
arpl
add
jb
jne
jb
push
popa
ins
jne
inc
inc
pop
inc
dec
adc
add
add
add
add
add
inc
pop
inc
inc
inc
add
add
add
add
adc
add
arpl
adc
add
push
adc
add
add
add
add
inc
pop
inc
imul
outs
jb
xor
inc
pop
inc
inc
inc
add
add
add
add
add
push
inc
push
push
inc
push
add
adc
add
test
add
add
jb
arpl
gs
je
jb
bound
inc
pop
inc
inc
inc
add
add
add
add
dec
inc
add
add
add
adc
add
add
add
add
xor
xor
xor
pop
inc
inc
adc
add
add
add
or
add
add
add
