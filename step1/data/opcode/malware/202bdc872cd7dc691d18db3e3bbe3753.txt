mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
xchg
xor
fisubr
xchg
(bad)
dec
cmp
jo
dec
int
xchg
in
mov
pusha
test
push
adc
imul
shl
jnp
push
inc
mov
xchg
test
push
into
dec
inc
mov
jg
pop
popf
jbe
ss
pop
jmp
or
push
es
add
pop
mov
pop
fwait
xchg
mov
xchg
push
bnd
xchg
mov
out
cli
(bad)
mov
adc
mov
push
in
fist
inc
pushf
xlat
data16
popa
stos
rcr
mov
outs
shl
mov
cld
std
lahf
or
push
shl
test
xchg
shrd
test
scas
cs
loope
push
test
inc
mov
pop
or
test
push
inc
sub
pop
xor
lea
pop
push
mov
outs
xor
imul
dec
les
(bad)
adc
pop
mov
sar
test
adc
mov
sar
jbe
cmp
shl
push
out
mov
(bad)
adc
mov
shl
int
clc
mov
je
dec
cmps
outs
xchg
mov
jnp
sub
sbb
and
push
or
das
arpl
mov
fdiv
fisubr
in
shl
lea
outs
lods
cwde
add
xchg
les
into
daa
shl
ret
rcl
dec
(bad)
lods
out
jl
(bad)
ja
into
gs
push
push
addr16
push
mov
das
mov
mov
dec
pop
lahf
imul
lods
mov
sub
mov
dec
data16
stos
int
inc
mov
aam
call
(bad)
lods
icebp
dec
xlat
aaa
dec
add
mov
sti
aam
outs
mov
ins
mov
sub
add
xchg
adc
aam
movs
pop
(bad)
out
mul
jmp
ret
cmp
or
mov
jbe
mov
jns
xlat
shr
arpl
mov
rol
jmp
mov
scas
sahf
adc
dec
stc
or
aas
test
dec
lahf
test
add
mov
int3
jo
jle
jl
jmp
loop
fist
ja
or
fld
or
stos
leave
xchg
mov
mov
jae
mov
lds
mov
mov
add
xchg
cmp
sbb
or
sub
cmp
pop
push
push
ins
inc
std
es
ja
push
imul
pop
jae
inc
stos
out
mov
jp
or
test
or
xadd
fbld
hlt
adc
xor
pushf
or
inc
shr
fsub
lods
ss
ins
imul
out
mov
push
pusha
f2xm1
cmp
cli
repz
dec
jmp
mov
lds
cwde
imul
or
add
ffreep
dec
dec
jp
cld
rol
xchg
pushf
popf
jbe
push
and
add
daa
mov
(bad)
cld
(bad)
push
inc
and
arpl
das
mov
call
rol
in
or
mov
cli
iret
scas
cwd
fstp
and
sbb
(bad)
inc
mov
call
and
call
in
pop
(bad)
fnstenv
and
frstor
rol
loopne
iret
fs
cmp
jle
mov
je
ss
inc
mov
es
inc
push
icebp
jns
mov
(bad)
(bad)
sub
push
lods
and
es
sub
dec
inc
cwde
test
sbb
jbe
pushf
mov
sub
push
leave
cmp
movs
sub
cmps
icebp
inc
mov
pop
mov
inc
je
repnz
mov
jl
je
sbb
xchg
xchg
xchg
enter
pop
shl
jnp
push
mov
enter
popf
jbe
out
int3
arpl
xchg
inc
and
addr16
rcl
les
mov
cs
cli
pop
adc
adc
adc
in
jge
ins
je
jge
pushf
mov
dec
pop
das
inc
ds
(bad)
in
xchg
popa
repnz
imul
mov
dec
outs
out
sub
cmps
lods
fimul
push
pop
enter
xchg
mov
scas
jo
inc
(bad)
add
movs
loope
sbb
adc
mov
(bad)
inc
sbb
dec
xor
and
mov
mov
sbb
pop
sbb
scas
pop
adc
inc
inc
sahf
cli
jmp
imul
pop
cmps
ficomp
mov
push
adc
push
inc
mov
or
and
push
(bad)
repz
push
jmp
sbb
sbb
push
push
push
lods
out
sub
adc
call
dec
sub
js
fmul
cs
adc
or
iret
outs
leave
fidivr
sbb
popa
mov
cmp
hlt
cmps
inc
push
outs
and
jo
mov
test
or
or
cmp
xchg
fst
ins
scas
xchg
jmp
cmp
gs
das
jo
scas
mov
jne
sub
shl
fdivp
loop
jg
lods
pop
test
pop
outs
cmp
jno
sti
dec
and
or
scas
xor
test
js
xor
fiadd
scas
cld
mov
dec
xlat
imul
mov
pop
jns
inc
add
pop
call
imul
addr16
(bad)
pop
pop
xchg
push
test
pop
or
mov
(bad)
rep
nop
push
shl
jnp
pusha
fidiv
fcomp
gs
(bad)
nop
mov
(bad)
inc
inc
inc
pop
push
out
outs
and
ret
add
dec
sub
call
cwde
sub
cmp
loop
jl
fdiv
jbe
sar
xor
cmp
and
mov
and
(bad)
aaa
jmp
jg
xchg
and
les
pop
add
add
(bad)
or
cmp
add
jae
dec
ins
or
pop
pop
mov
jl
(bad)
xor
leave
mov
js
mov
retf
dec
add
in
push
xchg
fild
adc
aad
daa
lods
aas
xor
aaa
jg
rol
xor
fistp
cdq
dec
inc
(bad)
hlt
mov
int
pop
pop
out
retf
mov
cdq
xlat
pop
push
cmc
push
int3
jp
xchg
popf
cmp
test
sbb
sbb
shl
sub
es
adc
xchg
aad
xchg
xor
out
jb
mov
push
cs
xstore-rng
cmps
xor
fucomp
cmp
rcl
adc
fld
leave
(bad)
or
shr
push
and
(bad)
bound
fcmove
out
jl
jno
xor
sub
icebp
adc
dec
daa
pop
add
fstp
ror
mov
ds
mov
hlt
mov
push
jg
(bad)
push
or
dec
mov
fisttp
mov
stc
fild
cmp
push
and
cmp
sahf
es
in
jae
cmp
add
mov
sbb
imul
cmp
cmc
int3
pushf
call
imul
(bad)
fidivr
(bad)
enter
add
jle
jl
js
je
mul
je
push
mov
dec
inc
mov
out
out
pop
mov
mov
and
mov
add
pop
mov
retf
sbb
lods
mov
int3
jbe
mov
pop
mov
jg
xor
addr16
cli
in
loopne
sahf
xchg
dec
dec
push
jnp
cmps
or
mov
sar
mov
mov
test
mov
les
dec
mov
sbb
mov
mov
cmp
iret
sub
add
call
mov
xor
adc
leave
inc
icebp
rcl
popf
mov
clc
mov
into
sbb
sub
cmps
mov
out
fcomip
enter
inc
loop
mov
jl
jae
pop
add
cmp
pop
pusha
xchg
mov
and
aam
call
jmp
aas
jns
arpl
dec
inc
movs
or
in
add
add
js
imul
retf
mov
les
or
dec
cli
(bad)
mov
pop
retf
sahf
into
rcr
(bad)
pop
dec
outs
dec
adc
cmp
push
outs
mov
fadd
and
pop
mov
and
dec
push
jmp
inc
pop
push
stc
xor
jp
jge
sbb
fdivr
out
and
cmp
jo
xchg
cmps
mov
cmp
shl
mov
sbb
jmp
mov
inc
int
jne
and
sub
fbld
cwde
or
mov
xchg
dec
lods
inc
and
retf
cdq
les
xchg
cmp
mov
ins
loop
inc
(bad)
cld
jbe
add
mov
ror
idiv
xlat
dec
add
push
inc
sti
jl
imul
gs
imul
call
sbb
daa
add
push
pusha
imul
mov
lock
jbe
mov
mov
jno
mov
xor
pinsrw
sbb
(bad)
rcr
dec
fwait
je
jecxz
pop
and
cmp
sub
and
jge
popf
cmps
mov
pop
xchg
cmp
std
stc
aad
mov
dec
pop
sub
or
cmp
scas
jle
sahf
dec
adc
dec
adc
lods
out
es
(bad)
mov
inc
mov
ficomp
xchg
or
pop
or
test
ins
ins
je
rol
dec
xor
add
jecxz
xor
movs
ins
stc
clc
aas
fsubr
mov
add
out
inc
mov
(bad)
sub
imul
jp
sub
inc
pop
push
pop
loopne
jmp
mov
mov
sar
mov
pusha
inc
pop
pop
gs
inc
into
call
push
push
mov
ror
add
mov
test
loop
test
mov
ss
not
inc
sbb
xchg
xlat
sbb
cdq
fs
mov
aaa
int3
push
rcr
mov
cmp
popa
out
out
stos
imul
into
or
cmp
lds
dec
and
in
aas
adc
add
inc
xor
push
sti
cli
int
stos
xchg
dec
fstp
int
fldenv
ins
sbb
xor
std
aas
xor
lea
enter
and
adc
ins
mov
push
ins
dec
xchg
or
push
mov
in
ja
and
sbb
xor
pop
jl
xchg
cmps
cs
in
sbb
sub
fs
imul
sub
mov
cmp
test
fwait
sub
and
stos
jno
mov
ret
push
inc
jb
jb
mov
clc
push
(bad)
xchg
lea
sub
mov
xchg
or
pop
repz
or
sbb
or
jmp
pushf
int
sbb
icebp
mul
stc
push
adc
addr16
iret
sub
mov
popf
stos
daa
ret
clc
test
or
cwde
movs
popf
jle
jne
std
fbstp
dec
mov
out
in
pop
or
or
dec
jmp
imul
xchg
push
clc
sub
(bad)
div
imul
cld
push
push
mov
mov
xor
or
fcmovu
mov
mov
test
call
lahf
sbb
push
mov
aad
lock
bound
loope
add
mov
ret
int3
jecxz
adc
xlat
popa
out
test
lods
(bad)
and
test
adc
pop
pop
push
and
ficom
fs
imul
shl
icebp
(bad)
push
dec
xchg
lock
(bad)
in
mov
pop
jnp
loope
sub
stos
mov
cmp
cmovno
inc
jge
test
mov
cmp
sbb
fcomp
and
in
call
mov
rol
fwait
cmp
adc
out
push
push
inc
(bad)
hlt
cmp
push
loope
iret
fld
cs
mov
xchg
adc
ror
cmps
and
mul
loope
cmp
jae
(bad)
mov
cmp
jg
dec
scas
add
cld
idiv
fiadd
mov
xchg
jno
and
mov
in
mov
xor
pop
push
pop
cwde
dec
daa
inc
mov
push
aad
dec
adc
inc
outs
and
or
push
mov
jae
pop
jg
stos
pop
sub
jns
stc
add
add
or
jl
mov
add
shr
fs
mov
cmp
arpl
int3
mov
ret
mul
mov
rcr
loop
sti
(bad)
fisttp
pop
pusha
test
sub
fist
inc
mov
cdq
jl
pusha
jg
lahf
cmps
ss
call
adc
xlat
xchg
(bad)
stos
and
adc
mov
mov
ret
push
icebp
inc
xchg
mov
ret
inc
sar
pop
(bad)
jg
in
mov
(bad)
(bad)
gs
mov
aas
(bad)
daa
cmp
das
int
int3
cmp
mov
adc
mov
mov
inc
and
xchg
rcl
add
mov
in
mov
mov
fstp
dec
mov
xchg
push
adc
cmp
movs
add
inc
stos
adc
xchg
rol
int3
mov
dec
outs
mov
inc
repnz
adc
cmp
and
mov
js
dec
mov
arpl
popa
inc
inc
das
aam
mov
jmp
sbb
adc
jae
lods
inc
mov
pop
int
std
es
and
lea
jl
(bad)
pop
fild
pop
adc
jns
test
dec
aaa
sub
out
les
popf
dec
mov
sub
cli
xor
mov
mov
pop
xor
sbb
fst
and
es
retf
rcr
pop
imul
sub
adc
popf
movs
xchg
lods
push
xor
in
ret
leave
add
das
jne
repz
pop
or
mov
pop
das
stos
enter
push
pop
lahf
sahf
and
call
cmp
cs
or
jnp
mov
inc
xchg
mov
dec
jmp
inc
pop
fdivr
or
jmp
push
mov
jle
(bad)
dec
push
imul
push
jg
rcl
cli
(bad)
lods
cmp
mov
adc
xor
mov
jno
push
int3
ret
fild
pop
(bad)
sbb
scas
push
cwde
lea
rcl
pop
jb
frstor
mov
loop
jo
sub
(bad)
pusha
cli
mov
sub
mov
addr16
push
xchg
and
shl
outs
scas
mov
jo
js
mov
sub
sub
sbb
adc
lea
mov
mov
iret
hlt
ret
or
sahf
repnz
leave
jmp
(bad)
repnz
mov
rcl
sub
or
xchg
sbb
aad
in
loop
fild
adc
and
movs
xchg
mov
and
popf
mov
pop
mov
jl
pop
movs
aas
or
sbb
xchg
rol
xor
fnstsw
pop
mov
daa
add
add
aas
test
mov
gs
xor
xor
cmps
rol
cwde
jp
out
cmp
push
rep
aam
xchg
mov
dec
ja
retf
inc
andnps
add
bnd
(bad)
es
(bad)
je
std
fcom
mov
mov
pop
or
sub
(bad)
shl
mov
xchg
cs
push
pop
ret
add
mov
scas
imul
and
cmp
dec
test
push
mov
inc
mov
xor
imul
mov
mov
pushf
dec
inc
cs
aas
mov
fdiv
mov
rcl
add
mov
mov
mov
leave
(bad)
push
fincstp
sub
jnp
sub
cwde
mov
pop
jl
test
mov
ins
(bad)
sahf
(bad)
jecxz
addr16
pcmpgtd
adc
js
lahf
ficomp
cmc
dec
clc
add
ror
fist
mov
test
mov
inc
dec
push
inc
repnz
mov
call
(bad)
call
es
out
mov
mov
out
rol
push
jbe
cmps
fstp
cwde
movs
xlat
xor
jmp
ins
push
dec
pop
fidiv
addr16
adc
mov
movs
jb
lahf
test
jg
popf
daa
xchg
idiv
add
pop
and
outs
sbb
add
enter
addr16
push
sub
add
(bad)
pop
push
fxch
jl
fimul
hlt
push
or
and
sbb
sub
xor
push
sbb
add
jmp
sub
arpl
inc
xchg
xchg
ror
outs
push
sub
fbld
push
ja
dec
ins
fdivr
sub
lock
jae
imul
adc
cmp
pop
mov
(bad)
ret
inc
sbb
mov
mov
jmp
fs
loop
pop
sbb
(bad)
jg
push
adc
sbb
xchg
bound
imul
mov
out
pop
fbld
or
not
or
loop
int3
mov
xchg
jae
adc
in
pop
cmp
test
(bad)
imul
stos
shr
xchg
into
ss
pop
les
push
call
add
cwde
push
(bad)
xchg
daa
dec
and
mov
and
shr
dec
fs
(bad)
xor
jnp
pop
cmp
pop
pop
lods
cmp
jmp
or
inc
loopne
pusha
sub
in
jmp
push
and
pop
or
ins
cwde
jmp
mov
imul
mov
stos
and
scas
push
mov
mov
add
int
popf
ins
les
loope
repnz
cmp
call
neg
sub
cmp
sar
dec
mov
test
sar
popf
pusha
jp
jo
add
das
cmp
mov
ret
pop
xlat
popa
lahf
or
les
out
push
inc
mov
shr
shl
mov
aam
loop
in
sbb
ss
out
push
dec
and
(bad)
fistp
(bad)
mov
cli
pop
inc
shl
les
inc
and
ret
adc
lock
repz
mov
div
test
sub
in
ret
push
jbe
xchg
jle
jo
and
mov
test
jp
add
inc
aaa
je
icebp
mov
xchg
or
cld
ror
fst
add
test
out
dec
add
push
ret
mov
ret
scas
mov
(bad)
out
es
mov
add
mov
(bad)
cmp
pop
push
imul
dec
push
push
ins
fwait
or
in
lods
cmp
jns
out
stos
lea
pop
push
iret
or
mov
xchg
fnstcw
retf
cmp
(bad)
dec
sysenter
loopne
(bad)
fldcw
sti
add
sbb
add
mov
xor
loope
(bad)
mov
push
test
mov
xchg
mov
call
xchg
adc
inc
lea
and
jmp
xchg
rol
push
or
or
stos
aad
js
rcl
lock
out
shr
cs
(bad)
xlat
cmp
sbb
mov
iret
mov
xchg
sar
ss
leave
mov
and
xor
sti
sbb
sbb
gs
js
std
adc
pushf
push
push
jge
fldenv
adc
mov
inc
push
mov
neg
fld
pushf
not
mov
jbe
pop
mov
pop
pop
mov
call
mov
adc
add
(bad)
stc
pop
test
rcr
stc
inc
es
pop
adc
add
mov
popf
pop
pop
out
push
xchg
xlat
dec
jo
and
nop
mov
lahf
dec
retf
adc
retf
cmp
jae
xchg
mov
ins
in
xchg
or
pop
mov
add
mov
rcr
movs
mov
ret
xor
retf
adc
out
cmps
in
(bad)
mov
ja
aaa
getsec
loope
push
not
xor
dec
test
inc
ds
mov
cmp
hlt
mov
add
or
push
inc
pop
loope
cmp
pusha
xchg
push
popcnt
fidiv
es
in
jmp
ds
out
mov
add
mov
dec
push
xchg
push
outs
and
lahf
push
push
nop
iret
mov
int
jl
adc
fcom
jmp
data16
add
mov
jp
test
pop
sub
ret
test
push
cmp
enter
scas
mov
sbb
adc
jecxz
bound
inc
jl
push
jg
xchg
mov
nop
(bad)
or
inc
jmp
or
bound
stos
(bad)
mov
and
(bad)
aam
sub
popf
cmp
mov
fcmovbe
sbb
pop
shl
int
mov
and
imul
push
xor
popa
cmp
ja
(bad)
ja
out
mov
ficom
xor
out
mov
das
or
dec
sub
jge
fstp
mov
lock
jmp
mov
pop
push
cdq
ret
xchg
shr
cmc
or
jg
jb
test
pop
mov
in
sbb
jns
mov
and
add
jl
pop
push
pop
js
scas
loopne
mov
aam
sub
ror
and
cmp
push
popf
aam
rcl
push
jmp
xchg
mov
push
mov
addr16
icebp
pop
dec
adc
or
push
sub
mov
push
jle
lea
and
aas
ds
iret
(bad)
in
sub
xchg
std
dec
aad
scas
lock
std
xor
jne
cmp
cmp
add
jb
push
call
adc
repnz
(bad)
push
pop
in
mov
push
ret
pop
(bad)
mov
or
pop
dec
shl
xlat
add
test
mov
pop
dec
pop
out
das
iret
mov
mov
scas
xchg
repz
sub
stos
loope
retf
ret
push
jne
adc
mov
imul
in
mov
pop
in
sbb
aam
mov
adc
mov
inc
(bad)
aam
mov
mov
sub
pop
cmp
enter
out
call
mov
jmp
imul
push
cmp
inc
enter
adc
push
sub
aad
ja
(bad)
cmc
pop
jecxz
sub
sbb
xor
push
aad
cmps
shl
in
pop
pushf
xchg
adc
(bad)
or
pop
stos
fwait
pop
je
fs
fst
in
add
add
repnz
out
add
jne
cmp
stos
arpl
mov
jo
xor
or
scas
adc
(bad)
jo
cmp
imul
ds
in
push
push
pop
int
jne
into
sbb
js
or
ja
iret
mov
rcr
test
jle
inc
mov
gs
adc
push
mov
push
es
mov
mov
adc
push
jne
mov
ret
jmp
(bad)
dec
fistp
xor
mov
jbe
mov
iret
loop
sbb
xchg
dec
inc
jb
stos
or
fadd
sahf
mov
xlat
stos
jb
js
xchg
jp
jp
fs
fcomp
inc
(bad)
cmp
cs
fsub
sub
loopne
inc
fisttp
aaa
into
xchg
mov
outs
popa
inc
dec
push
stos
push
xchg
jecxz
mov
dec
ret
xchg
sahf
xchg
icebp
push
push
dec
loop
dec
test
push
or
jmp
pop
gs
jmp
sub
xchg
outs
sbb
add
addr16
gs
cmp
ss
arpl
cs
jb
icebp
dec
pop
gs
sub
cmp
cmp
adc
xchg
sub
lock
iret
mov
and
pop
inc
push
pop
jnp
movs
mov
adc
fiadd
sub
stc
fs
cmp
dec
push
in
rcr
inc
stc
lods
and
dec
ss
bound
jnp
fs
inc
into
mov
jb
sbb
enter
push
cld
leave
fsubr
das
call
inc
retf
stc
inc
(bad)
daa
jbe
fldcw
mov
xchg
cmp
mov
repz
mov
popa
xor
mov
xchg
aas
push
loope
arpl
dec
xchg
in
in
mov
dec
mov
dec
addr16
adc
jg
xor
outs
sbb
dec
aas
enter
push
mov
pop
dec
mov
xchg
lds
sbb
popa
add
mov
mov
or
shl
leave
aaa
out
cmp
in
or
dec
movs
mov
out
scas
cmp
fdiv
xor
adc
std
jne
mov
aam
dec
lods
rcpps
movs
inc
or
pop
mov
sub
hlt
inc
or
into
dec
mul
popf
idiv
adc
outs
dec
jnp
ret
nop
jae
gs
or
mov
sub
(bad)
pop
jb
mov
sbb
inc
mov
mul
inc
xchg
xor
push
lds
jmp
pop
mov
gs
repz
mov
dec
push
xor
inc
fwait
inc
mov
test
aaa
ja
lock
loop
outs
into
fsub
mov
jmp
cmp
adc
mov
inc
xchg
or
push
mov
in
and
pop
div
movs
sub
fdivr
push
das
test
xchg
xchg
call
push
sti
ret
jns
inc
fs
mov
pop
xor
movs
sbb
sub
add
pop
pusha
dec
pop
inc
jl
push
(bad)
scas
cdq
das
add
pop
pop
retf
repz
loop
inc
inc
gs
cmps
pop
in
sbb
inc
jmp
shr
lahf
(bad)
mul
jb
pop
imul
mul
adc
xor
add
fs
pushf
xor
out
(bad)
into
add
fidiv
loop
test
ficom
xchg
not
dec
rcr
rol
pop
and
(bad)
cmp
idiv
push
sbb
ins
sub
inc
sub
popf
cmp
jnp
fnstsw
and
mov
ins
mov
aam
push
pop
push
(bad)
cli
cmp
sub
pop
fwait
pop
in
retf
mov
pushf
pop
mov
xor
out
lock
jo
loope
jne
les
rol
(bad)
je
ins
mov
or
inc
shl
xor
and
lahf
adc
lds
sti
sub
mov
add
push
fldenv
xor
js
lds
std
shr
scas
inc
cmp
retf
out
push
iret
sub
adc
mov
xchg
jp
cmps
sbb
mov
pushf
sti
inc
and
mov
dec
aam
sbb
retf
jb
pop
repnz
pop
popf
pop
xor
repnz
sub
add
mov
shl
stos
leave
lahf
add
pusha
and
ins
adc
gs
icebp
fisttp
xor
dec
sub
aaa
(bad)
out
repz
xchg
rol
dec
mov
inc
xchg
call
stos
clc
push
pop
std
adc
mov
jg
call
fnsave
das
ja
adc
jo
mov
adc
jmp
pop
xchg
dec
inc
jmp
push
call
into
icebp
jmp
pop
adc
mov
xchg
sbb
nop
push
add
rol
pop
cmps
jp
ja
mov
adc
and
and
xchg
mov
sub
sbb
sub
pop
and
add
dec
mov
cmp
push
js
cwde
mov
ins
or
test
ror
mov
push
mov
les
xor
xor
push
jne
test
fidiv
sbb
dec
or
push
push
or
xchg
ins
inc
lods
mov
jp
push
retf
iret
mov
ret
ins
lea
inc
sbb
das
(bad)
mov
sar
fidiv
jns
loop
add
mov
js
jmp
or
add
loope
mov
sbb
dec
outs
mov
pushw
xchg
mov
dec
cmc
in
jl
xchg
pop
out
mov
pop
fcomp
(bad)
push
inc
test
lea
xchg
xlat
sbb
leave
sub
sahf
js
rcl
(bad)
hlt
pop
lods
imul
push
mov
jb
retf
cmc
clc
mov
pusha
cmp
sub
push
add
scas
out
pop
in
sub
xchg
push
or
add
push
jnp
lea
add
inc
push
js
fdiv
test
push
mov
in
ret
or
and
call
mov
sar
jl
jmp
jg
xor
jae
xchg
push
xchg
sub
push
aad
cdq
data16
xchg
cmp
imul
rcr
repnz
je
retf
xor
sbb
mov
sub
mov
cs
dec
in
ror
dec
mov
sub
rcr
dec
push
rol
in
cmp
sbb
es
aaa
push
mov
and
mov
aas
or
sbb
ret
push
je
je
popf
or
adc
ror
inc
inc
jne
into
(bad)
xor
push
inc
mov
xor
stc
fcmove
add
enter
xor
mov
mov
xchg
adc
jle
pop
sub
pop
mov
mov
cli
sub
mov
adc
jne
xlat
mov
jo
retf
es
loope
pop
push
mov
cld
pop
ds
into
jne
xor
movs
mov
adc
mov
pop
das
mov
sub
inc
lods
lahf
cmp
popf
clc
fldenv
in
inc
cmp
sbb
cmp
lea
pop
pop
imul
inc
add
sahf
iret
inc
test
into
fimul
xchg
jge
xchg
and
pushf
and
ja
aam
scas
ins
in
mov
lea
mov
mov
movs
cmp
int
jbe
xor
cmp
sbb
call
xor
(bad)
mov
(bad)
sti
ret
(bad)
mov
jmp
mov
xchg
pushf
sbb
push
sub
cwde
xlat
pop
sub
xor
pop
mov
inc
ror
mov
sub
push
out
xor
adc
pusha
sar
fnstsw
ret
jl
test
(bad)
faddp
retf
dec
add
jno
mov
stc
(bad)
enter
mov
addr16
ret
inc
sbb
inc
mov
mov
cld
(bad)
scas
cmp
jg
fdivr
jb
xchg
push
in
push
add
jl
mov
js
mov
daa
mov
pop
outs
or
sar
push
cmp
mov
xor
pop
mov
ficomp
push
or
cmp
popa
and
mov
dec
xlat
aas
sub
push
or
xor
(bad)
sub
clc
data16
pmullw
inc
cdq
xor
xchg
loopne
cdq
jae
mov
int
in
jle
hlt
aam
ss
daa
das
cmc
jbe
add
es
mov
movs
es
pop
pop
test
ins
hlt
fstp
adc
add
push
leave
stos
arpl
ss
mov
push
test
sbb
mov
idiv
cmp
repz
jne
retf
dec
es
repnz
jae
or
fwait
mov
retf
inc
jbe
xchg
(bad)
addr16
leave
cmc
jp
pushf
mov
scas
dec
imul
(bad)
mov
sti
bound
xor
jnp
sbb
adc
jbe
sti
sbb
xchg
or
push
leave
sbb
repnz
ins
neg
out
cld
or
sub
retf
jns
popf
and
cmp
daa
aam
xchg
add
push
add
xor
mov
into
xor
imul
(bad)
loop
jns
fdiv
cs
add
fild
cmp
nop
sar
adc
imul
sar
mov
cmp
mov
mov
xchg
mov
fwait
xor
sub
rol
and
cmp
inc
cmp
or
bound
(bad)
fist
lahf
jno
lea
(bad)
retf
ins
xchg
test
mov
mov
dec
addr16
leave
pop
(bad)
pop
std
and
pop
lds
stos
pusha
sbb
push
or
cmp
mov
dec
icebp
xchg
lock
cmp
adc
jae
pop
push
imul
mov
fs
pop
std
scas
stos
jnp
push
cmp
(bad)
push
push
in
imul
sbb
jns
push
mov
out
shl
or
ret
push
jnp
mov
add
test
or
dec
jl
(bad)
(bad)
ja
push
xchg
and
js
xchg
sbb
enter
arpl
cmp
into
(bad)
add
push
push
xor
and
push
sub
cwde
sar
lods
adc
inc
xchg
xchg
pop
inc
push
sar
push
mov
dec
mov
leave
push
jns
fidiv
mov
lods
sub
nop
sub
and
add
adc
iret
sar
jo
lods
push
inc
mov
fisttp
pop
xlat
arpl
mov
jmp
fdivrp
and
pop
stc
fucomi
xchg
xor
outs
push
loopne
stos
aam
in
sub
mov
fldcw
sbb
test
out
jbe
xor
sar
xchg
add
inc
(bad)
hlt
aad
shl
inc
in
xchg
mov
jo
lods
cmp
push
inc
pop
inc
mov
fist
push
dec
xor
add
cmp
xor
loope
pop
test
loope
fldenv
movs
dec
add
jb
pop
fs
mov
add
and
dec
adc
xlat
xchg
inc
push
hlt
leave
xor
add
jmp
adc
dec
pushf
jp
mov
or
cs
aaa
jp
xchg
sub
adc
inc
jbe
ins
xor
(bad)
ror
sub
add
cmps
add
(bad)
xchg
and
test
dec
daa
fdiv
push
sar
imul
pop
fld
or
push
(bad)
cmp
sub
mov
cmp
popf
lahf
adc
ins
xor
std
clc
jo
adc
mov
punpcklwd
xchg
lods
mov
push
jnp
and
sbb
mov
sub
fsub
xor
mov
and
pop
sbb
jp
movs
adc
test
sbb
(bad)
ins
push
loope
movs
ror
scas
add
push
loopne
push
pop
and
inc
out
push
xchg
mov
das
mov
push
pop
movs
xchg
jbe
xchg
sbb
out
push
(bad)
bound
retf
jmp
jbe
xchg
xchg
les
pushf
jne
iret
and
in
je
sub
inc
pop
loope
xor
push
sub
movs
bound
scas
jmp
sub
mov
mov
sbb
ins
push
mov
lods
arpl
adc
pop
fiadd
pusha
sbb
sbb
cmc
ror
or
data16
lock
int3
sub
push
adc
ins
push
mov
int3
fcmove
adc
xchg
sub
add
ret
xor
(bad)
jle
scas
dec
mov
inc
push
in
cmc
test
add
push
xchg
lds
push
mov
and
(bad)
(bad)
in
inc
mov
shl
test
nop
jae
push
mov
xor
dec
aaa
mov
pop
fst
mov
adc
mov
lds
mov
push
sub
mov
std
push
cwde
pop
ret
out
xchg
in
and
push
jle
dec
xchg
pop
psraw
mov
gs
ja
xchg
bound
xchg
test
add
jg
loope
mov
mov
adc
xchg
(bad)
cld
jge
outs
dec
ins
enter
mov
sub
dec
into
jecxz
xchg
sahf
mov
jnp
retf
or
jp
scas
(bad)
addr16
mov
ins
push
pop
jne
jge
xchg
lds
mov
(bad)
jmp
fwait
and
jno
cmp
js
lea
cmp
ins
hlt
inc
popf
in
bound
ficomp
into
cli
sub
add
or
adc
add
retf
push
jmp
add
pusha
leave
rol
movs
or
mov
mov
daa
push
sub
mov
sar
iret
pop
xchg
stos
retf
mov
test
ins
jbe
xor
call
js
add
in
jecxz
arpl
mov
xor
sbb
inc
push
test
sub
fst
push
jl
push
add
stos
ss
rol
add
xchg
pushf
push
jp
call
in
and
lods
and
imul
call
or
enter
or
xchg
sbb
pop
pusha
adc
inc
jg
adc
in
aam
aad
mov
loope
mov
and
push
dec
pop
retf
push
ror
inc
arpl
pop
xchg
smsw
mov
sti
inc
lock
mov
test
push
sbb
pop
sub
dec
inc
add
xor
mov
movs
push
xchg
lahf
inc
push
scas
(bad)
xchg
jecxz
cmps
imul
push
repnz
sub
repnz
xchg
gs
add
add
pushf
int3
(bad)
xchg
and
call
cdq
and
inc
rcl
outs
sbb
cwde
ret
mov
out
int
arpl
push
scas
shl
pop
jae
pop
sub
push
sti
jnp
cmc
imul
jne
add
add
stos
iret
int
jo
add
push
(bad)
mov
mov
cwde
mov
mul
inc
inc
jmp
cdq
cmp
loope
jae
std
ret
sub
cwde
or
push
mov
mov
imul
in
mov
lahf
(bad)
jne
std
gs
call
or
inc
shr
pop
dec
fstp
mov
test
fcmovbe
mul
cld
xor
inc
pop
lods
jle
in
mov
xlat
xchg
sub
mov
adc
mov
xchg
push
and
into
fldenv
jmp
fwait
cmp
push
or
adc
arpl
pushf
fwait
ins
push
inc
cmp
in
cmc
ins
pop
lahf
xchg
mov
in
or
(bad)
mov
repz
inc
and
ins
cmp
push
in
push
neg
xor
ror
in
ret
fs
(bad)
int
cmps
loopne
test
jmp
and
test
pop
dec
push
adc
outs
jl
xor
xchg
sbb
repnz
movs
cld
add
hlt
fnstsw
push
xchg
sbb
loope
outs
xchg
lock
cwde
push
mov
ins
mov
into
mov
popf
add
popf
cmps
mov
lds
pusha
loopne
popa
adc
or
test
loope
and
xor
std
inc
mov
push
push
dec
cld
push
pop
call
aam
daa
ret
or
lods
mov
and
retf
xchg
popa
sar
inc
mov
int3
cwde
cmp
shl
xchg
icebp
stc
loope
push
push
out
adc
fcomp
sub
scas
dec
push
push
loop
dec
jmp
xchg
popf
test
pop
data16
or
fist
and
movs
or
clc
mov
shr
mov
mov
jl
mov
push
shl
inc
scas
sti
inc
pop
or
lods
dec
push
fadd
pop
mov
push
xlat
mov
jl
shl
jb
shl
push
mov
stos
je
sub
data16
jns
lock
call
ret
xchg
add
jno
adc
and
setp
adc
xor
lds
fs
adc
popa
xor
add
ins
xor
mov
lock
outs
lahf
cmp
push
sub
cwde
test
std
and
mov
push
in
fs
cmp
mov
pop
push
(bad)
mov
sbb
push
jmp
mov
push
aam
mov
sub
or
pushf
je
mov
dec
push
adc
cmp
fmul
and
jno
es
push
push
xor
mov
out
idiv
in
(bad)
or
aad
sahf
ja
in
xchg
cmp
hlt
adc
mov
adc
imul
ror
sub
ds
imul
lahf
push
cmps
popa
popaw
and
fisttp
loope
fwait
inc
cli
ret
adc
icebp
mov
fs
(bad)
dec
daa
mov
mov
rcr
dec
xlat
sbb
xchg
fs
int3
movs
xchg
xor
ins
or
fs
jbe
push
(bad)
out
aaa
xlat
and
lds
pop
add
jae
jae
and
xlat
fucomi
jne
push
cmps
loop
inc
retf
push
sar
inc
rcl
jmp
adc
sbb
ret
cs
add
mov
and
mov
out
push
jge
mov
stos
adc
xor
test
popa
mov
int
inc
jb
xor
aad
xor
pusha
jne
aaa
lea
sub
scas
sar
jp
mov
ret
pop
mov
push
out
push
(bad)
popa
mov
mov
lods
fxch
int
or
dec
xchg
ror
mov
mov
test
push
xchg
adc
shr
movs
lods
clc
xor
bound
and
sti
test
sbb
xor
outs
out
std
imul
jo
sbb
stos
push
push
aaa
stc
daa
adc
dec
mov
int3
(bad)
lods
cmp
jle
jmp
jmp
or
fild
add
into
mov
mov
xchg
mov
xor
inc
cmps
mov
adc
adc
add
test
js
enter
mov
(bad)
hlt
push
xchg
mov
stos
mov
gs
push
fcom
retf
adc
clc
loopne
jo
jmp
sub
jne
sub
daa
dec
pop
cdq
push
inc
push
mov
fmul
pop
stos
lods
retf
mov
add
push
mov
xchg
mov
daa
repnz
xchg
sub
inc
repnz
loop
les
mov
outs
push
pusha
repz
and
inc
pop
xchg
(bad)
xor
das
clc
aad
mov
pop
jne
inc
hlt
cmps
jne
and
mov
(bad)
std
or
xchg
loopne
leave
sub
push
fwait
imul
arpl
(bad)
(bad)
xor
imul
ins
and
das
in
div
xor
or
jb
hlt
xor
push
adc
cmp
cli
sbb
cdq
dec
jmp
sub
push
mov
cmp
scas
iret
lods
cmps
ins
rol
in
out
mov
fdiv
scas
mov
cld
xchg
sbb
scas
jo
pop
xor
loopne
icebp
fisubr
inc
adc
arpl
inc
adc
xchg
sub
jnp
mov
add
les
or
inc
icebp
ror
adc
adc
mov
rcr
cdq
jno
sbb
or
jo
sti
pop
sbb
inc
mov
out
stos
and
push
dec
add
ret
jl
outs
cld
pusha
jnp
add
loopne
jecxz
lock
adc
rcr
fst
sub
mov
cmp
push
iret
iret
inc
mov
mov
xlat
xlat
xor
push
ret
fmul
(bad)
test
in
js
addr16
ins
addr16
stos
or
sub
and
(bad)
in
xor
push
push
xchg
mov
pop
jg
aaa
push
jmp
mov
leave
xchg
(bad)
add
sub
in
test
adc
hlt
adc
jg
dec
push
sbb
fisttp
mov
xchg
aaa
dec
push
mov
pusha
les
out
pop
cmp
scas
dec
les
lods
jnp
cmp
or
sahf
cmp
aas
shr
xchg
pop
fdiv
test
rol
cmc
les
inc
pop
mov
xchg
pop
mov
adc
(bad)
push
inc
and
jle
cmps
push
mov
fild
xchg
mov
dec
ins
sbb
xchg
aaa
sahf
pop
pop
addr16
jmp
cdq
jl
popf
add
and
ja
dec
cmp
sbb
fld
pop
out
(bad)
imul
mov
push
repz
adc
and
mov
push
pop
pop
(bad)
daa
idiv
jb
lods
adc
popf
inc
andps
and
mov
nop
dec
or
xor
add
dec
push
inc
test
int
enter
mov
lods
xor
mov
fs
pop
mov
cld
pop
or
(bad)
mov
mov
sub
push
sbb
fwait
jae
dec
push
inc
pusha
mov
fs
jmp
scas
call
loope
sbb
mov
inc
jmp
adc
inc
mov
jno
arpl
ret
dec
fadd
cmp
mov
cld
xor
mov
adc
dec
mov
inc
sbb
bound
int
shl
aas
scas
or
cmps
jmp
idiv
xchg
dec
mov
imul
push
ret
(bad)
stos
aaa
adc
sbb
mov
(bad)
dec
adc
je
into
sbb
jecxz
inc
adc
inc
arpl
(bad)
dec
jns
mov
pop
mov
stos
lahf
sbb
jb
cmp
and
mov
dec
adc
or
add
clc
loope
test
xor
jne
pop
arpl
fistp
call
mov
pop
ret
sar
imul
sub
push
sbb
add
(bad)
pop
in
rcr
dec
jo
out
mov
rcl
xchg
fdiv
pusha
scas
cmps
mov
xchg
or
and
jg
xchg
pop
into
aas
lds
mov
and
inc
mul
fsubr
mul
or
in
dec
push
jmp
push
pop
in
jnp
cmp
ins
pop
jnp
lds
dec
or
inc
retf
adc
into
pop
xchg
neg
test
lock
xor
bound
jl
mov
cmp
mov
ret
or
inc
shl
(bad)
mov
mov
movs
retf
stos
sbb
outs
mov
fistp
shr
or
inc
movs
sar
pop
mov
mov
mov
mov
xchg
out
mov
pusha
les
xchg
mov
(bad)
hlt
ins
out
push
dec
popf
(bad)
push
jne
cwde
jecxz
test
rcr
or
jno
mov
jo
xlat
loopne
fwait
dec
pop
mov
mov
pop
mov
mov
cmp
fs
xchg
aad
jno
repz
aas
call
mov
xchg
or
mov
fistp
mov
or
pop
and
adc
fldcw
mov
adc
xchg
or
xor
clc
inc
mov
bound
aaa
inc
(bad)
fcom
push
adc
rcl
pushf
dec
retf
fist
pop
or
in
fldenv
popf
xor
mov
cmps
ds
jmp
pop
and
loope
push
aad
sbb
adc
call
pop
and
mov
and
push
js
and
out
loopne
jmp
nop
and
mov
pushw
repz
pusha
sbb
ret
xor
xchg
xor
and
cld
push
nop/reserved
mov
iret
aaa
xor
ja
or
fist
gs
or
pushf
xchg
xchg
das
lock
ja
adc
jmp
mov
imul
lea
retf
loopne
pop
les
inc
xor
nop
mov
mov
dec
test
repz
push
stos
mov
jne
dec
add
adc
mov
div
lods
xor
std
inc
jle
and
xor
add
neg
or
int
movs
mov
dec
arpl
test
(bad)
js
sahf
pop
mov
ror
js
in
xor
dec
mov
leave
xchg
imul
(bad)
lods
stos
jmp
sbb
in
inc
popa
aad
and
mov
test
jnp
xchg
ret
mov
out
push
cmp
fwait
push
xor
sti
loopne
jo
xchg
cmc
shr
(bad)
mov
cmp
inc
(bad)
test
jne
push
xchg
jb
outs
sahf
adc
mov
stos
pop
(bad)
adc
lods
add
and
adc
push
and
retf
dec
mov
sub
mov
cmp
mov
adc
or
xor
loop
in
cwde
pop
xor
sbb
mov
mov
mov
add
mov
mov
sbb
mov
dec
and
mov
xor
jne
cmp
bound
cwde
addr16
cmp
mov
cmps
mov
rcr
mov
out
cmps
lahf
pop
into
jno
popf
(bad)
out
mov
add
inc
xor
mov
and
movs
fisubr
int3
dec
imul
arpl
jae
je
cmps
stc
jno
mov
and
push
mov
lods
(bad)
mov
sub
push
sahf
jo
cmp
jb
cmp
not
cwde
fs
pop
ret
mov
jbe
mov
gs
outs
fdiv
lods
imul
sub
dec
push
test
nop
push
sbb
xor
jno
add
mov
jno
adc
xchg
mov
in
in
and
retf
inc
adc
jmp
adc
js
out
sub
xor
inc
pusha
scas
xchg
leave
fcom
jmp
xor
mov
nop
mov
pop
and
cmc
cs
jmp
aas
and
dec
or
stos
jae
push
nop
push
sbb
imul
inc
or
jp
js
or
scas
ret
mov
imul
xchg
pushf
fdecstp
gs
jno
mov
sbb
sub
aam
sub
rol
cmp
mov
jp
jne
lock
test
repnz
inc
les
movs
shl
outs
sbb
jae
dec
pop
jne
loopne
dec
mov
cmp
cmp
mov
gs
dec
xor
mov
fisubr
xor
pushf
lods
(bad)
cmp
daa
push
fcomp
sahf
data16
cdq
cwde
mov
jo
jg
outs
neg
mov
inc
mov
unpcklps
inc
inc
das
push
in
cwde
fcomp
mov
push
add
jl
js
inc
fs
mov
popf
sub
sbb
into
cmp
outs
fcmovb
loop
dec
xchg
jmp
lods
(bad)
sbb
out
xchg
cli
mov
cmc
leave
cmp
cmc
sbb
xchg
mov
xchg
mov
xor
mov
xchg
sbb
and
xchg
push
sub
mov
aad
mov
adc
aaa
mov
mov
or
mov
mov
lods
cs
lods
fadd
icebp
mov
dec
dec
dec
sbb
pop
sbb
mov
jle
std
sub
mov
inc
aam
or
mov
dec
pop
xchg
scas
cdq
sbb
mov
adc
sub
xor
mov
loope
test
xchg
mov
scas
cmp
cmp
and
mov
loopne
and
(bad)
adc
sub
rcl
sub
cli
adc
pop
das
cs
pop
loop
mov
movs
add
shr
clc
gs
mov
ds
(bad)
jmp
cmp
xor
inc
push
adc
clc
fsub
add
inc
loopne
xlat
inc
xor
mov
sbb
xchg
test
(bad)
ficomp
xchg
jno
sub
pop
aaa
aas
jmp
inc
dec
into
cmp
movs
push
pop
mov
push
and
add
cs
cs
ja
int3
(bad)
push
add
cwde
pop
cmp
shl
push
and
push
jbe
jle
cld
sub
or
imul
inc
pop
rcr
outs
push
int3
sub
setae
movs
in
ins
adc
mov
sbb
fnstsw
ret
idiv
mov
pusha
push
arpl
push
sub
sub
pop
add
xchg
add
out
sub
xor
or
sub
or
mov
sub
fmul
int3
outs
cmp
mov
ss
mov
xchg
jns
call
(bad)
inc
mov
jg
loopne
ret
inc
mov
cmps
cmp
addr16
mov
push
xor
movs
clc
sub
pop
mov
xor
mov
int
lahf
retf
and
mov
mov
mov
lahf
xchg
cmps
sbb
mov
mov
popa
mov
add
pop
sub
data16
xlat
cld
jmp
ffreep
stc
jmp
gs
push
retf
retf
fidiv
jno
clc
or
les
or
cmp
outs
cmp
mov
movs
nop
xor
addr16
inc
sahf
outs
and
pop
inc
dec
sahf
or
pop
mov
pop
aam
cdq
mov
jae
pop
cmp
lea
mov
sub
mov
sbb
ja
jecxz
mov
cmp
clc
sub
dec
dec
outs
movs
or
aam
stos
test
inc
aas
sbb
das
dec
neg
or
xlat
dec
sub
ror
sub
into
daa
or
xchg
addr16
inc
mov
cmp
js
xchg
(bad)
jb
xchg
aas
ficom
sub
push
ret
ret
(bad)
bound
jge
pop
call
or
mov
leave
in
jmp
and
dec
mov
xor
rcr
push
xchg
cmps
sub
or
rol
mov
lods
ds
jno
in
add
mov
pusha
retf
stc
inc
adc
push
pop
push
mov
push
daa
lahf
push
dec
iret
fprem1
xor
cmp
mov
std
xor
daa
in
fwait
popa
aas
int
jbe
jl
ror
mov
(bad)
sbb
leave
mov
jnp
sbb
pop
mov
stos
rcr
rol
out
int
fnstenv
xchg
mov
jmp
imul
xchg
ret
popf
inc
or
jg
or
fcomip
jae
fdivr
shl
add
jne
jle
mov
pop
fisttp
mov
clc
or
iret
std
test
ret
frstor
xchg
mov
movs
xchg
clc
cmp
call
push
gs
loopne
pusha
sub
jae
and
bound
inc
add
mov
loope
push
pushf
inc
in
push
adc
jns
popf
xor
adc
add
jmp
push
imul
(bad)
push
sub
lock
cmp
je
adc
mov
lds
lea
add
push
pushw
inc
scas
xchg
push
iret
inc
rcr
sbb
inc
pop
movs
mov
jg
mov
mov
adc
fldcw
gs
pop
inc
rcl
sbb
imul
mov
lahf
ss
jno
retf
cmp
(bad)
cli
push
sbb
pop
jo
add
add
adc
push
dec
xchg
scas
adc
les
ins
mov
cmp
add
xchg
pusha
loope
lds
imul
adc
stos
jnp
je
test
sbb
cli
pop
mov
les
jno
inc
shr
mov
push
push
enter
push
or
gs
push
pop
push
pop
sbb
mov
cmp
jmp
leave
popf
jno
push
mov
loope
in
mov
adc
mov
dec
or
aas
std
test
mov
adc
mov
mov
imul
jo
movlps
test
push
sahf
imul
add
lds
dec
cmps
push
sti
pop
stos
cmc
loop
jb
popa
push
arpl
pop
cmps
push
and
div
push
in
int
cmc
adc
jmp
test
jg
mov
sbb
scas
sti
jne
inc
mov
add
ja
aam
xor
call
lahf
cmp
adc
cmpxchg
push
test
scas
scas
fisttp
outs
repz
repz
pop
enter
icebp
sub
sub
dec
or
imul
xchg
lea
or
mov
fimul
adc
cmps
mov
mov
fidiv
popa
push
shr
add
ss
mov
mov
xchg
stos
call
mov
pop
or
(bad)
into
loopne
pusha
mov
inc
add
outs
dec
pop
add
xor
mov
(bad)
clc
mov
mov
jmp
test
in
aam
dec
out
mov
dec
ss
pop
xor
ror
jecxz
sbb
xchg
(bad)
pusha
std
push
xor
mov
cmp
leave
mov
fld
and
and
or
push
call
and
stos
inc
mov
mov
jne
xchg
cli
jl
pop
xchg
sub
test
daa
cs
pop
fsubr
ins
and
mov
mov
cdq
xor
retf
sbb
sti
lea
(bad)
ficom
mov
repnz
add
(bad)
sub
sbb
add
inc
pop
outs
arpl
lods
inc
dec
iret
into
fisttp
add
pop
or
aad
ins
nop
(bad)
aad
ja
xor
(bad)
fcom
adc
add
or
cmp
sbb
les
adc
sbb
push
mov
loop
movs
fldenv
xor
xchg
mov
push
ret
add
cmp
and
jo
inc
aam
jle
popa
(bad)
movs
jno
cmp
dec
(bad)
mov
stc
test
mov
or
stos
xchg
ja
jo
pop
mov
aas
mov
outs
popf
inc
ror
fs
jnp
add
cmp
ds
lock
add
popa
cmp
cmps
xor
dec
jns
arpl
or
push
xor
dec
lods
xchg
ss
(bad)
das
movs
lods
stos
scas
out
test
aam
dec
in
hlt
fsubr
cmp
jae
inc
push
jno
jmp
popf
jp
inc
mov
sahf
inc
mov
mov
xchg
popf
movs
or
repz
mov
adc
outs
mov
xchg
add
fs
cs
or
sub
or
pop
push
cld
fnsave
sbb
cli
daa
jne
dec
loope
inc
cmp
xlat
dec
int3
pop
xor
add
mov
mov
stc
lahf
or
mov
fbstp
pop
pop
xchg
imul
call
test
sub
push
xor
push
cs
sub
inc
and
sbb
inc
push
cld
sub
xor
xor
nop
and
or
fs
push
mov
jae
push
jg
shr
arpl
xor
fisubr
push
sti
mov
retf
cmp
ins
clc
push
(bad)
add
sbb
xchg
movs
dec
mov
cs
xchg
xor
push
fcomp
outs
adc
push
xor
std
pop
mov
lods
in
stos
enter
jecxz
xchg
fwait
cmp
push
xor
outs
or
pop
leave
cld
outs
inc
je
je
fs
xchg
into
icebp
sub
rcr
or
retf
push
or
cs
dec
mov
mov
dec
mov
int
sbb
mov
pushf
push
mov
sbb
nop
xchg
call
outs
dec
fidivr
fsubr
push
jns
out
(bad)
pushf
xchg
aad
fild
sub
xor
ss
aas
pop
(bad)
jmp
mov
and
out
cmps
retf
mov
sub
cmp
imul
ins
test
lock
or
jb
(bad)
das
out
(bad)
cmp
jne
xchg
rcl
in
frstor
cs
scas
xor
pop
fild
in
out
inc
xor
into
cdq
inc
pop
outs
add
movs
clc
neg
fnstcw
in
sbb
(bad)
jmp
pop
push
add
aad
jmp
out
jo
inc
les
cmp
inc
mov
lds
sub
jne
retf
call
popf
jnp
cmp
daa
popf
inc
test
daa
mov
(bad)
mov
jmp
dec
pop
sbb
test
push
loop
repz
dec
cmp
pop
pop
sti
adc
loop
imul
xor
loop
loope
adc
jecxz
leave
cmp
ins
xchg
jns
rcr
dec
idiv
outs
mov
pop
mov
inc
xor
ins
shl
sub
addr16
jno
enter
xor
cs
out
sahf
jbe
fabs
inc
mov
ret
dec
ror
jb
cmp
popa
dec
mov
mov
pop
mov
stc
jp
fs
xor
iret
mov
cs
xor
sbb
mov
cs
in
dec
mov
neg
sqrtps
pxor
scas
enter
lods
add
add
daa
out
aad
dec
mov
and
pop
cmps
inc
inc
outs
xor
pop
mov
mov
add
lds
or
jg
int3
mov
loopne
pop
inc
pop
sub
loopne
push
xor
(bad)
xchg
adc
xchg
jmp
lods
mov
cmp
jae
(bad)
int3
pop
pop
fmul
in
ss
mov
inc
fnsave
xchg
cmp
je
pop
cmps
pop
cld
mov
aas
cmp
test
repz
fist
mov
ja
and
pop
call
cwde
inc
int
cmp
dec
and
xor
lds
jmp
mov
fmul
std
xor
inc
add
in
fadd
inc
imul
(bad)
push
inc
imul
call
fcmovnbe
cwde
test
inc
mul
fnstenv
mov
dec
push
mov
jnp
sbb
dec
test
mov
xlat
pop
sbb
shl
loop
les
pop
test
or
jmp
adc
enter
mov
stos
xchg
mul
loop
push
push
push
mov
in
sbb
xchg
cvtdq2ps
xor
std
push
xor
popf
cdq
iret
push
nop
loop
nop
(bad)
fucomp
add
(bad)
fcomp
leave
out
imul
push
or
mov
ret
fsubr
pop
jns
sub
imul
loop
mov
or
aas
sub
mov
clc
sub
test
fdiv
ds
mov
jns
inc
sub
lods
(bad)
ret
je
dec
cwde
mov
push
fld
inc
data16
aaa
cmp
xchg
dec
lahf
pusha
std
inc
fiadd
push
xor
(bad)
(bad)
sbb
sub
cli
mov
inc
cmps
sbb
(bad)
repz
xchg
sahf
adc
cmp
push
inc
jmp
or
pushf
mov
inc
cvtps2pd
scas
stc
push
iret
mov
sar
outs
scas
in
cmp
movs
push
in
pusha
or
push
leave
cmp
and
cmp
iret
int
push
cmp
aam
inc
jge
mov
stos
shl
imul
cmps
(bad)
jo
mov
in
inc
out
xor
add
mov
pusha
mov
outs
dec
sbb
mov
mov
xchg
mov
jl
lds
(bad)
xor
jge
sub
lods
test
push
jbe
jbe
xchg
loopne
cmps
push
ss
lea
test
and
(bad)
cmp
stos
sbb
jp
std
adc
nop
js
push
push
mov
cs
arpl
cmp
inc
xchg
repz
loopne
adc
inc
in
cmp
add
add
retf
mov
inc
xor
mov
dec
xchg
aad
jno
add
or
push
bound
retf
out
mov
mov
or
pop
fs
dec
in
or
ds
clc
mov
shld
out
popf
push
neg
sub
out
in
pushf
fnstsw
mov
pop
(bad)
loop
pushf
xchg
push
sar
lods
(bad)
fbld
cmp
xor
(bad)
mov
push
adc
in
inc
test
add
inc
stc
fimul
mov
int
das
jbe
jbe
add
jmp
cmp
add
popf
mul
imul
push
hlt
mov
push
stos
jmp
outs
lds
cmc
aas
xor
sub
dec
dec
aad
xchg
jae
es
scas
sub
jg
nop
or
add
adc
inc
stos
adc
in
or
hlt
loope
mov
call
repz
cmp
lds
mov
pushf
pushf
pop
mov
xlat
test
xchg
inc
jge
add
xor
add
test
pop
das
push
lds
out
sub
jmp
shr
lods
jle
dec
aad
cmps
xchg
out
fcomp
lock
lock
pop
inc
jb
rcr
pop
mov
sbb
mov
cwde
cmp
push
rol
int
mov
mov
cdq
loopne
mov
push
ss
cmc
loopne
jl
or
add
mov
outs
adc
xor
retf
jg
xchg
push
loopne
sbb
push
call
sub
sahf
bound
inc
cs
lods
lock
test
mov
add
fidivr
mov
mov
sub
inc
xchg
aad
data16
out
test
jecxz
mov
shl
out
cmps
aas
mov
inc
adc
and
xor
dec
fisttp
das
or
iret
add
cmp
ins
cmps
cmp
outs
lods
add
mov
sbb
daa
jmp
retw
lahf
xchg
cmps
rol
jp
sub
push
dec
xchg
or
xor
enter
add
call
and
xchg
icebp
loope
stos
ins
mov
ret
inc
test
mov
retf
inc
into
add
or
push
mov
aad
les
xchg
jecxz
inc
xchg
pop
and
pop
repnz
popa
je
icebp
fbld
inc
data16
mov
xchg
div
sbb
fsincos
jnp
jae
or
pop
mov
sub
lahf
adc
stos
sahf
pusha
xchg
sbb
pop
dec
test
jno
inc
outs
pop
out
mov
div
add
mov
lahf
test
shl
push
push
xor
xor
movs
ins
div
aam
cmps
jo
add
ds
pop
xor
mov
adc
test
xchg
loope
xor
cmp
fwait
sbb
int3
mov
or
push
dec
imul
nop
mov
mov
inc
push
xchg
xor
cmp
shr
nop
cmp
or
adc
retf
cmp
push
pop
in
dec
pop
jbe
nop
je
push
bnd
mov
enter
sub
icebp
dec
mov
int
dec
int
push
sti
lods
push
add
sub
sbb
inc
mov
ins
sub
mov
inc
push
cmp
scas
adc
fwait
lods
(bad)
ret
mov
mov
push
cmc
mov
(bad)
mov
adc
jnp
push
xchg
(bad)
hlt
popa
data16
(bad)
repz
in
xor
mov
inc
sub
cwde
jle
sbb
dec
loop
mov
or
movs
popa
popa
mov
test
cmp
sub
in
pop
(bad)
test
(bad)
mov
mov
ins
mov
inc
les
icebp
idiv
push
movs
jg
push
or
inc
ins
movs
enter
retf
sub
pusha
(bad)
push
inc
gs
jbe
push
out
mov
mov
mov
sub
mov
in
or
pushf
cmp
lds
add
(bad)
sub
out
in
mov
out
js
inc
pop
mov
jb
sbb
daa
sub
es
enter
into
std
icebp
sti
jae
mov
cmp
test
mov
mov
adc
sbb
lahf
rcl
arpl
mov
(bad)
rcr
sbb
push
mov
sbb
in
pop
jno
add
mov
iret
or
repnz
ror
gs
and
mov
and
mov
xchg
cmps
in
jno
test
dec
cmp
shl
jp
xchg
call
mov
xchg
cmps
(bad)
stos
xor
pop
cmc
cs
jle
sub
adc
lock
jbe
ds
ss
ds
mov
or
cmp
(bad)
(bad)
xchg
cmp
cmp
rcr
mov
push
mov
pop
xchg
out
icebp
jmp
adc
ror
xchg
in
stos
mov
pop
popf
xor
rcl
call
xor
dec
add
rcr
and
test
mov
pop
or
fcomp
add
add
inc
mov
das
dec
xor
sti
sub
adc
(bad)
mov
adc
cmc
pop
bnd
push
xchg
dec
icebp
ret
cli
movaps
and
test
sbb
test
repnz
mov
sbb
push
mov
mov
in
out
push
hlt
jmp
retf
adc
enter
inc
(bad)
cmp
sub
mov
cmp
mov
jns
leave
xor
jmp
ins
daa
adc
pusha
rcr
je
xchg
mov
and
add
jle
dec
sub
push
jb
leave
push
xchg
rcr
ret
lds
jne
shr
mov
test
das
lods
popa
mov
mov
popf
mov
vprotd
sub
int
into
fdivr
inc
rcr
cmp
jmp
mov
pop
or
push
push
cld
in
rol
and
mov
sub
fistp
inc
ja
adc
std
aad
and
mov
push
movs
inc
sub
adc
test
inc
sub
xchg
adc
in
push
mov
int3
push
repz
cmp
dec
out
aad
or
pop
push
push
adc
xchg
jg
in
mov
int
push
cmp
dec
and
es
daa
cld
jo
jae
movs
out
sub
cli
jno
nop
cmp
or
mov
fadd
aam
mov
cmc
test
push
mov
cmps
cwde
add
pop
pop
sub
push
sbb
add
test
xchg
mov
ret
out
push
sbb
dec
js
mov
dec
xor
mov
pop
stos
mov
imul
pop
aad
cmp
fisttp
add
jno
push
push
push
push
mov
mov
mov
fstp
mov
int
jecxz
mov
(bad)
mov
push
scas
leave
xchg
or
xchg
les
and
fiadd
mov
inc
mov
pop
shl
dec
les
pop
add
outs
cmp
rol
xchg
leave
sbb
sbb
push
push
sbb
pop
std
hlt
in
movs
jmp
push
gs
push
fstp
pop
mov
test
ret
and
(bad)
shl
xor
ds
cmp
rcr
mov
push
mov
inc
test
mov
pop
pop
adc
xor
adc
hlt
in
lods
loop
jmp
pop
or
call
dec
outs
push
movs
sbb
ret
adc
xor
out
nop
cmp
scas
and
loop
add
xchg
mov
push
xor
cli
xor
sar
pop
in
xor
call
cwde
xor
xor
loope
das
xchg
jmp
dec
xchg
les
dec
daa
retf
dec
push
shl
in
push
clc
call
mov
push
sub
mov
sti
inc
inc
syscall
dec
jmp
add
adc
inc
mov
cmp
das
xchg
scas
add
push
xchg
add
int3
sbb
push
adc
cld
sub
push
jmp
add
inc
ss
or
adc
and
mov
js
xor
aad
cmps
ds
sub
int
or
bswap
clc
mov
or
(bad)
sbb
push
cmps
lds
mov
inc
nop
arpl
cmps
cmp
rcr
xchg
popa
imul
nop
ja
cmp
jle
xchg
popa
test
mov
xchg
std
cmps
sti
jge
push
add
push
das
in
cmc
out
movs
mov
dec
lods
movs
and
xor
sbb
clc
xchg
pop
adc
jmp
(bad)
das
cli
(bad)
in
pop
outs
test
call
std
cdq
scas
sbb
cli
sub
fild
bound
sub
add
dec
xrelease
mov
mov
aas
cmps
or
out
jge
inc
cwde
pop
(bad)
(bad)
or
sub
pmulhuw
call
pop
pop
fbld
mov
mov
test
xchg
or
icebp
clc
fsubr
xchg
jle
mov
mov
xchg
sbb
xchg
loope
dec
lods
inc
sbb
retf
imul
pop
mov
mov
hlt
fstp
jbe
in
mov
pop
daa
jecxz
lds
sti
sbb
xchg
gs
pop
and
mov
adc
sahf
je
mov
iret
sahf
add
push
sub
stos
fstp
imul
cmp
jns
das
or
pop
into
jb
jno
mov
pminsw
mov
xor
int3
cmps
sbb
xchg
ret
lods
cmp
xchg
hlt
js
mov
and
jle
cld
push
jl
cs
adc
adc
push
jns
fnsave
pop
ins
lods
xor
adc
add
mov
and
gs
pop
scas
or
fwait
test
push
inc
sbb
daa
fdivr
mov
add
ret
mov
outs
mov
pop
leave
movs
push
(bad)
cli
and
nop
fs
push
or
sub
into
jo
mov
sbb
pop
ret
(bad)
and
add
xor
adc
pop
lods
ss
pushf
add
mov
test
mov
test
shl
or
aaa
dec
and
xor
dec
dec
mov
lods
fbstp
dec
sub
prefetchwt1
pop
mov
pop
rol
daa
mov
bound
xor
mov
std
xchg
and
pop
and
pop
mov
dec
jo
mov
dec
cld
pop
sub
mov
arpl
jo
lock
out
call
push
movs
sar
add
outs
out
xchg
sbb
xor
sbb
call
ja
(bad)
jmp
enter
inc
pop
xchg
call
daa
stos
arpl
sar
out
or
das
pop
inc
mov
push
jnp
mov
xor
mov
push
add
loopne
mov
cli
jp
cmps
bound
cld
pop
jb
xchg
in
cmp
cwde
loop
out
call
repnz
out
jmp
jo
cwde
jnp
push
call
push
mov
cwde
jle
mov
jo
jge
sahf
jl
test
sti
add
(bad)
and
and
or
cli
ret
dec
push
add
adc
jne
adc
cmp
cmp
inc
pop
pop
adc
mov
sahf
icebp
retf
inc
(bad)
sar
(bad)
inc
pop
xor
pushf
adc
jge
sbb
mov
jne
mov
jge
xchg
pop
or
adc
inc
in
stos
xchg
ret
xchg
dec
xor
mov
sahf
movs
adc
ins
jns
hlt
xchg
into
js
repz
and
ss
sbb
imul
jne
ins
movs
scas
loop
mov
cs
stc
jae
jecxz
jp
inc
pop
imul
cs
push
mov
stos
aaa
data16
cld
inc
cmc
pop
bnd
outs
mov
mov
in
add
jg
adc
mov
jae
or
push
outs
fucompp
dec
mov
cmc
pop
inc
pop
cdq
icebp
test
fist
test
dec
adc
mov
sti
push
jl
ret
push
arpl
fimul
pop
sub
ret
pop
es
fadd
arpl
jmp
nop
fxtract
fwait
push
fmul
cmc
push
gs
dec
sub
inc
pop
loope
add
(bad)
in
mov
sub
adc
jno
xchg
xor
mov
push
mov
xor
aas
jnp
push
sub
sti
call
and
loope
loop
xor
jle
outs
enter
loopne
add
call
sbb
aad
cmps
adc
mov
mov
and
push
loopne
pop
inc
movs
mov
cmp
outs
gs
cmp
xor
rcr
mov
jge
dec
push
lahf
mov
push
jo
jp
xor
data16
mov
inc
inc
xlat
jo
or
or
push
aad
(bad)
xor
ror
and
xchg
mov
xor
pop
mov
pop
imul
add
rcl
pop
inc
cmp
les
xchg
pop
xchg
mov
addr16
sbb
pop
pop
mov
lods
mov
mov
lock
iret
cld
into
in
js
retf
xchg
inc
mov
cmp
adc
enter
sbb
repnz
das
jae
out
xchg
std
rol
pusha
scas
xchg
jne
rol
mov
and
push
mov
mov
mov
and
mov
mov
adc
cmp
(bad)
mov
xchg
cmp
pop
out
xchg
pusha
xor
cmps
mov
pop
pop
xchg
fmulp
inc
inc
or
push
std
mov
out
mov
jae
inc
cmove
cmc
leave
mov
aas
cmp
pushf
adc
inc
lock
enter
stc
jmp
test
add
sbb
cmp
pop
mov
inc
adc
cli
enter
pop
cli
out
js
(bad)
fwait
pop
adc
call
jae
enter
bnd
add
push
pop
ja
mov
sti
or
jae
mov
fisubr
adc
mov
(bad)
dec
aaa
add
aaa
aas
shr
inc
xchg
enter
loopne
mov
jno
xor
mov
jl
pop
add
movs
cld
mov
jmp
xchg
and
xchg
push
shr
push
add
dec
mov
ds
mov
or
xor
aam
cld
sub
sti
and
jmp
cmp
mov
test
push
popa
dec
test
push
rcr
push
test
shr
xor
retf
cdq
inc
fs
ja
(bad)
or
xchg
ret
fbstp
outs
je
add
lahf
pop
inc
jb
and
push
jnp
xchg
mov
mov
lods
jns
out
push
inc
mov
sbb
in
mov
rcr
cmp
xor
inc
std
pop
fld
and
addr16
movs
ret
scas
pop
and
xor
push
cmp
in
popa
gs
jge
push
or
or
jmp
push
xor
and
call
fcom
out
push
sbb
gs
das
adc
inc
xchg
arpl
xor
cdq
inc
sar
cmp
jno
push
pop
cmps
mov
jle
je
popa
sbb
push
add
(bad)
cmp
mov
js
lock
mov
jo
jae
inc
sbb
sub
gs
or
icebp
push
cmps
jnp
jnp
add
repz
and
test
fisttp
mov
and
inc
dec
sbb
(bad)
and
ret
inc
ret
jmp
retf
(bad)
(bad)
sub
enter
inc
jmp
mov
xor
add
inc
jbe
scas
cli
test
sbb
mov
int
imul
inc
push
arpl
fnsave
out
shl
lea
fwait
cmps
rol
jnp
push
pop
mov
adc
in
push
sbb
push
xor
sti
or
cmp
dec
data16
pushf
dec
sbb
pushf
or
out
or
add
retf
arpl
and
les
bound
push
sbb
cmp
aad
ja
test
(bad)
test
inc
pusha
inc
test
ds
cmps
stos
lods
js
test
pushf
push
sti
cmps
ret
(bad)
(bad)
out
lods
dec
(bad)
pop
movs
pop
push
xchg
icebp
jns
push
cmc
jno
stos
aas
cli
add
adc
(bad)
in
(bad)
jp
mov
mov
leave
retf
sbb
out
or
mov
add
jne
mov
pop
ffreep
xchg
popa
sub
sbb
ret
clc
test
pop
sbb
cmps
xchg
push
add
jo
adc
int3
fsub
aas
loope
adc
lds
jg
mov
push
dec
push
mov
jbe
and
repnz
xchg
sbb
jb
pop
ret
aad
cwde
mov
pop
xchg
or
jno
inc
out
ins
data16
ficomp
test
push
mov
and
gs
(bad)
clc
inc
in
pop
or
sbb
jge
inc
icebp
jp
cli
sbb
sbb
mov
sti
in
popa
mov
lods
fmul
movs
sti
lea
cwde
push
and
cmp
inc
mov
out
xchg
outs
cmp
pop
imul
and
clc
jecxz
xchg
pop
out
scas
stos
or
fbld
sub
and
ror
jp
push
out
xchg
xchg
stos
mov
inc
push
lea
mov
pushw
gs
jne
or
(bad)
enter
dec
mov
adc
inc
cmps
sub
imul
adc
and
xor
cli
dec
or
jne
and
repnz
pop
cli
das
or
dec
xor
pop
inc
addr16
lods
mov
(bad)
cmp
shr
adc
js
in
(bad)
repz
test
sub
int3
xlat
cmp
lods
enter
dec
inc
dec
xchg
les
cld
fxch
xchg
add
mov
(bad)
arpl
xlat
sub
cmp
fst
pushf
fst
or
xor
ds
mov
data16
loop
mov
aam
mov
dec
xchg
nop
pusha
aad
push
enter
iret
pushf
push
mov
popf
je
xlat
repnz
nop
xor
test
fistp
push
adc
ins
pop
arpl
cmp
mov
out
retf
inc
iret
and
clc
ja
(bad)
lods
dec
pop
inc
and
lds
sub
mov
xlat
in
xlat
fs
mov
sti
push
imul
cmp
inc
inc
pushf
sbb
jbe
outs
loopne
mov
add
mov
daa
aad
lahf
push
inc
xor
(bad)
out
mov
call
mov
cwde
xchg
cmp
mov
dec
xchg
dec
pop
test
mov
xchg
push
cli
pop
fidivr
loop
lods
inc
mov
mov
fcompp
pop
cmp
dec
jl
dec
rcl
lahf
xchg
iret
imul
mov
int3
inc
dec
sub
xchg
clc
xor
sbb
cmp
xlat
inc
or
dec
fbstp
aaa
ror
enter
mov
or
fs
sbb
fiadd
popf
cmp
dec
add
sbb
loope
scas
xchg
dec
sahf
jnp
(bad)
jns
push
call
mov
sub
gs
stos
shr
xor
xchg
mov
push
cs
inc
dec
mov
in
(bad)
mov
(bad)
mov
cmp
stos
push
dec
inc
popf
icebp
mov
cmp
lar
mov
xchg
jl
int
icebp
jb
cmc
das
rcr
mov
add
out
ror
dec
jo
mov
or
pop
xlat
inc
scas
push
inc
popf
sub
jecxz
popf
(bad)
inc
enter
iret
daa
mov
sti
(bad)
xchg
test
mov
imul
cmp
xor
xchg
dec
xor
mov
push
test
(bad)
jge
leave
pop
retf
mov
iret
fidivr
jmp
push
shr
ins
and
add
push
push
ss
repnz
push
inc
std
rcl
ins
inc
push
dec
and
mov
loopne
sub
xor
mov
out
xchg
cmc
mov
mov
and
mov
fnstenv
imul
dec
jmp
icebp
or
push
adc
ss
ffree
popf
xchg
xor
clc
sbb
(bad)
push
sub
mov
adc
loope
jae
mov
pop
test
push
add
mov
pop
fucom
jae
ficomp
out
out
(bad)
dec
sbb
jae
pop
out
pop
pop
push
push
inc
adc
sub
aad
stos
imul
push
mov
sub
mov
inc
jno
lock
inc
mov
daa
mov
daa
and
or
test
xchg
or
into
test
(bad)
or
cmp
nop
ja
xchg
test
inc
mov
or
and
inc
dec
call
lock
jecxz
and
stc
test
or
lods
mov
sahf
xor
stos
daa
or
sbb
jmp
xchg
jns
inc
add
and
lea
mov
out
pop
stos
(bad)
fwait
loope
icebp
(bad)
mov
cmc
xchg
and
nop
inc
xchg
arpl
sbb
je
es
and
sub
cmps
movs
mov
dec
repnz
dec
fwait
(bad)
aad
push
mov
inc
xor
fild
pop
bound
mov
cmp
mov
dec
test
fwait
sti
mov
shl
cmps
sar
test
mov
xchg
cmp
ja
test
xor
jp
xor
add
sbb
lock
mov
arpl
into
or
icebp
xor
jp
fmulp
jge
bound
in
cmp
xchg
fxch
(bad)
push
in
push
xchg
jo
xor
ficom
sbb
xchg
mov
add
lock
out
outs
ja
add
mov
push
aaa
aad
pop
xor
jns
pusha
sub
sub
call
xchg
sti
(bad)
(bad)
shl
(bad)
int3
popa
or
push
shl
ret
mov
sbb
cli
cmps
xchg
mov
add
xchg
jl
mov
popa
std
mov
pop
mov
mov
in
je
pushf
test
mov
mov
in
push
adc
xchg
enter
fnstsw
or
imul
pop
or
mov
sti
adc
push
pop
or
sar
mov
test
ins
mov
cdq
inc
lea
pop
mov
push
jg
(bad)
xor
xchg
stos
adc
dec
scas
clc
mov
cmp
xchg
call
ret
iret
sub
and
dec
jp
dec
call
xchg
fild
loopne
jmp
adc
cld
xor
lods
leave
les
loop
int
adc
fdivr
aas
dec
fadd
sub
div
push
adc
les
xchg
imul
adc
(bad)
lods
repnz
repnz
lock
sbb
out
xchg
bound
loopne
popa
stos
xor
test
lds
scas
pop
mov
sub
in
mov
dec
xchg
je
inc
add
add
inc
and
bound
scas
inc
sub
pop
arpl
inc
push
push
ds
arpl
inc
pop
sti
or
(bad)
sti
sbb
ret
bound
(bad)
rcr
pop
jmp
ror
lds
cmp
int
mov
ja
stos
xor
jnp
push
arpl
push
sbb
or
push
adc
nop
push
inc
jns
push
sub
or
test
adc
inc
jecxz
mov
push
and
sbb
lea
shr
mov
and
fwait
inc
retf
push
into
retf
mov
mov
inc
mov
fmul
or
and
mov
adc
push
push
repnz
sbb
stc
inc
sub
jae
sub
add
hlt
pushf
pop
jno
mov
cld
fdiv
stos
xor
aam
sub
ss
fisub
inc
push
imul
ins
push
and
sbb
dec
fstp
in
add
aaa
sbb
sub
cmp
sbb
xor
out
in
pop
aas
loopne
daa
cmp
test
repz
fmul
out
cmp
jg
mov
fcom
adc
imul
adc
fst
or
retf
mov
rcl
pop
dec
mov
lods
je
jns
out
and
std
jns
popf
ins
jl
fdivr
(bad)
dec
xchg
mov
int3
rcr
pop
shr
push
retf
sub
or
and
xchg
push
je
inc
aam
and
in
cmp
shl
int3
jne
popf
add
lea
mov
mov
call
std
or
and
fidivr
cmp
fs
cmp
add
cmps
out
sahf
cmc
cmc
ret
aad
iret
adc
push
ins
ja
jl
fst
(bad)
out
je
xchg
into
cmp
test
mov
jg
pushf
add
xchg
sub
movs
cdq
xor
in
push
jb
jmp
cmp
cmp
nop
cmp
push
push
out
retf
or
shl
push
popf
sqrtps
mov
cmps
mov
mov
and
ret
mov
adc
mov
push
enter
cmp
jnp
lea
fwait
stos
outs
push
cmp
push
lods
push
cmc
mov
or
sub
out
add
pop
in
cmp
push
stos
jns
and
popa
mov
jnp
sub
mov
stc
dec
mov
(bad)
add
mov
pop
mov
fs
add
push
ficom
je
lods
and
call
mov
mov
es
mov
sahf
outs
test
ins
test
mov
add
pop
sub
out
js
cmp
push
cwde
sbb
aad
add
xchg
arpl
dec
dec
cmp
(bad)
leave
ret
mov
cld
dec
mov
pop
adc
loope
mov
sub
mov
int
ja
stos
xchg
inc
out
js
call
repz
push
dec
lahf
cmp
pop
push
movs
mov
lock
jbe
leave
scas
test
cmp
adc
in
xor
cmp
or
fimul
inc
arpl
jb
jne
cmc
nop
loope
test
dec
aam
sti
iret
adc
(bad)
cmp
fnstcw
sub
shr
rcr
cwde
imul
sub
fcomp
jnp
imul
mov
adc
ins
in
cmp
leave
xor
mov
cwde
repnz
xchg
jne
repnz
push
test
(bad)
xchg
test
addr16
inc
loope
movs
pop
inc
mov
add
popw
sbb
shl
scas
and
mov
jo
or
pop
jno
mov
sub
(bad)
mov
fcomp
jmp
inc
dec
xchg
inc
xchg
or
ret
leave
in
cmp
sti
das
lods
xchg
rcr
stc
sbb
cmps
xor
jp
jns
int
in
mov
cmp
xchg
lods
and
sti
and
lods
xchg
mov
and
dec
rdtsc
cmp
arpl
dec
xor
xchg
xlat
in
and
pop
xchg
push
repz
clc
faddp
dec
int
sub
cmp
pushf
repz
xor
cwde
retf
xchg
test
jns
mov
push
stc
aaa
cli
bound
inc
iret
mov
sub
mov
int3
or
scas
iret
clc
scas
adc
sub
mov
enter
mov
call
(bad)
lea
sub
shl
push
mov
sbb
arpl
mov
jg
pop
out
test
adc
ret
jle
sbb
mov
sti
pop
shl
fiadd
lock
mov
jge
dec
mov
sbb
push
fdivr
push
jnp
push
(bad)
pop
std
daa
mov
or
les
fdivr
adc
pop
sub
daa
movs
(bad)
mov
mov
inc
mov
jmp
xchg
loopne
mov
pop
ja
mov
push
repz
push
jbe
loop
add
aaa
cdq
call
mov
jns
les
hlt
cmp
loopne
mov
mov
add
add
loopne
dec
cmp
dec
push
sbb
cmp
xchg
fdivr
retf
sub
mov
push
outs
ja
add
or
inc
mov
jne
loop
dec
rcl
xchg
js
sbb
pop
inc
or
aad
in
jg
jbe
adc
jl
stc
sbb
jle
daa
scas
push
pusha
sub
mov
(bad)
shl
iret
lods
xor
dec
xor
jne
pop
dec
mov
or
lds
add
inc
mov
inc
mov
sbb
sti
ja
xlat
and
repz
outs
jb
ss
scas
cmp
mov
lods
lods
mov
push
cmp
xor
and
in
xlat
inc
aad
and
ins
and
ja
movs
sub
fcomp
xchg
mov
pop
jae
test
mov
enter
mov
fld
push
ja
mov
or
(bad)
lock
pop
mov
mov
xchg
mov
push
xor
xor
dec
hlt
sbb
and
lds
mov
jecxz
shl
iret
call
call
add
(bad)
iret
sahf
push
push
mov
sub
add
sbb
jl
lods
mov
xchg
popf
out
and
pushf
lahf
jbe
jmp
fs
lods
and
shl
loope
cmp
nop
sub
cli
inc
ret
(bad)
and
xchg
sbb
loop
sub
outs
and
in
cmp
mov
adc
loope
sub
icebp
loop
mov
inc
dec
dec
bound
(bad)
jp
sti
(bad)
scas
data16
mov
xor
mov
into
stos
test
aaa
pop
loop
sub
xchg
mov
(bad)
mov
hlt
mov
adc
inc
jecxz
iret
addr16
ret
adc
sub
ds
cs
call
or
push
cdq
cmp
adc
ins
jge
mov
popa
adc
sbb
cmovg
dec
xlat
imul
cmp
xor
aas
push
xchg
pusha
mov
push
inc
pop
adc
or
sub
test
ins
(bad)
cs
push
je
or
ins
aad
jmp
int
add
lds
or
enter
loop
cld
ins
loop
jne
jb
in
and
lea
repz
jo
pop
cld
xchg
inc
mov
nop
enter
cmp
ds
and
aaa
es
fs
add
push
pop
jo
das
cmp
adc
imul
test
mov
mov
(bad)
outs
test
sub
sbb
fisttp
test
in
jge
xor
stos
xchg
adc
and
adc
shl
bound
(bad)
into
scas
scas
jle
(bad)
ds
test
xor
pop
cmp
mov
ja
icebp
jb
mov
or
ins
(bad)
jg
leave
jl
jo
adc
call
push
fnstenv
outs
dec
ss
pushf
scas
lock
fwait
cs
mov
(bad)
mov
retf
mov
push
ret
mov
sbb
sbb
(bad)
stc
sbb
jl
sti
xchg
mov
dec
das
lods
push
into
push
lods
scas
mov
test
inc
rep
push
pop
aas
idiv
std
mov
lds
cmp
jg
inc
inc
inc
or
mov
(bad)
arpl
mov
cdq
jmp
mov
jge
xchg
fidivr
jmp
mov
loop
xor
mov
mov
xchg
cdq
jno
mov
mov
push
adc
lock
dec
ja
xlat
shl
in
les
mov
lock
pop
mov
fistp
dec
inc
lock
popa
sbb
xor
scas
loope
or
pop
inc
dec
sbb
mov
cmps
mov
sub
ja
loope
xchg
into
out
dec
loopne
pop
retf
pop
sub
fdivr
call
dec
mov
enter
mov
mov
adc
fld
ins
dec
xchg
js
cli
mov
mov
dec
loopne
call
(bad)
mov
and
sub
mov
movs
lods
push
pop
icebp
mov
rcl
jle
repnz
ret
fist
pop
mov
adc
std
stos
shl
mov
ss
data16
cmp
test
nop
jl
nop
pop
fistp
aam
xchg
and
or
push
sbb
sbb
mov
add
sbb
mov
(bad)
js
rol
aad
inc
sbb
mov
iret
aas
sar
mov
stos
js
jb
lock
sti
push
jge
sahf
dec
mov
popf
ret
add
mov
loopne
push
push
repz
push
cmp
lahf
and
sahf
jo
pop
ror
jecxz
scas
pop
lahf
jno
push
mov
mov
add
xchg
dec
cmp
fild
cli
sti
shr
push
adc
mov
aaa
xor
and
mov
mov
ds
mov
xchg
in
jp
xor
ss
cli
or
add
mov
jne
xor
jge
jo
test
jne
lock
ins
mov
cmp
(bad)
cmps
push
pushf
data16
push
sub
jecxz
jecxz
xchg
adc
leave
imul
fs
test
jle
jns
hlt
rol
cmp
rcl
(bad)
mov
rcl
push
cs
out
test
sub
outs
inc
pop
cmc
out
pop
(bad)
push
jno
jnp
jmp
loope
ins
or
add
pop
movs
mov
inc
dec
pop
mov
enter
dec
jns
push
xor
out
or
and
nop
shl
cmp
inc
jbe
(bad)
shl
xlat
jge
jmp
adc
xor
test
fmul
into
xor
sub
ins
shl
sbb
fnstenv
stos
lahf
dec
xchg
adc
ret
outs
(bad)
stc
xchg
sbb
mov
and
(bad)
jo
mov
(bad)
cmp
addr16
retf
xor
adc
or
fwait
retf
pcmpgtb
addr16
shl
or
add
xor
std
push
repnz
jg
or
ins
and
sub
mov
ins
arpl
mov
and
jns
fisub
test
cmp
in
fwait
addr16
or
outs
pop
aas
icebp
ins
fidivr
jge
push
jb
jmp
mov
pushf
les
push
xchg
outs
sub
fnstsw
test
mov
jmp
mov
pop
jno
push
jne
in
(bad)
and
sub
loope
(bad)
xchg
sub
test
call
rcl
push
pop
arpl
(bad)
fstp
dec
lds
sub
inc
mov
popa
or
add
frstor
ret
in
push
rcl
push
ror
xor
in
dec
das
mov
(bad)
adc
in
iret
xor
lds
pop
add
aaa
popa
mov
jge
sar
dec
mov
adc
aas
mov
sbb
sbb
fs
mov
pushf
push
aaa
mov
pop
aam
in
mov
push
mov
sub
and
adc
arpl
aad
aas
test
ret
in
sbb
push
cmc
fwait
dec
mov
mov
es
mov
xchg
std
cmp
fs
add
mov
and
mov
xchg
dec
aam
and
pop
mov
movs
sub
add
push
sti
out
and
arpl
cwde
adc
xchg
push
int3
out
scas
adc
clc
mov
push
inc
aas
dec
aam
inc
out
gs
sbb
or
outs
dec
or
clc
add
xchg
lock
outs
out
adc
mov
lods
xchg
xor
jg
cmps
fwait
jne
leave
jae
xchg
dec
fnop
pop
(bad)
xchg
popa
lods
jo
add
add
cmp
push
xchg
xor
outs
hlt
adc
jo
shl
push
stos
mov
jle
call
pop
pop
cwde
cmps
pop
dec
das
mov
mov
mov
gs
out
cmp
lea
into
jbe
inc
fsubr
xor
movs
icebp
xchg
add
cmp
fs
lock
je
into
into
push
inc
jg
or
and
or
sub
popf
movs
fidivr
cs
in
cmps
mov
xor
ss
mov
add
mov
mov
(bad)
scas
jnp
icebp
pusha
sub
shr
jmp
push
sbb
je
shl
daa
nop
mov
mov
adc
stc
add
retf
xchg
aad
push
mov
popa
mov
sar
movs
test
mov
imul
lods
dec
imul
imul
fbld
icebp
out
rcr
call
aas
inc
aas
adc
movs
iret
push
or
adc
(bad)
jmp
repnz
inc
xchg
aas
or
pop
imul
aad
xor
sub
popf
aas
sub
pop
xor
mov
aaa
pop
and
jnp
loopne
test
shl
add
pusha
ret
daa
out
daa
xchg
shr
xor
mov
xchg
and
push
pop
mov
(bad)
mov
sub
pop
fcom
mov
aas
bts
and
test
push
iret
nop
cmp
push
pop
mov
pop
mov
enter
lods
xor
lahf
bswap
bound
pop
and
fidiv
inc
add
jne
inc
cld
lods
sti
xchg
imul
rcl
mov
add
scas
cmp
add
(bad)
pop
add
je
sbb
rcl
sub
(bad)
xlat
mov
in
aaa
repz
stos
inc
adc
mov
sub
or
xor
scas
js
inc
dec
dec
(bad)
in
cwde
imul
js
push
and
mov
jmp
and
test
movs
sub
jne
sahf
sub
ss
dec
test
inc
pop
inc
cmps
dec
cmp
add
int
int
mov
aad
add
push
cmp
xlat
push
int
in
fs
or
sbb
popa
mov
pop
clc
push
in
fs
jmp
movs
or
and
xchg
fld
pop
call
cld
das
jmp
aad
mov
jg
fstp
shl
push
(bad)
mov
xchg
mov
mov
js
or
mov
sbb
push
inc
inc
inc
ficomp
jo
ins
cld
fcom
icebp
mov
mov
pop
pop
sbb
fdivr
add
mov
or
xor
fcmovu
cs
in
not
popa
dec
sub
iret
repz
jno
xor
or
dec
movs
xchg
cwde
dec
mov
in
call
out
inc
lds
xor
mov
or
push
inc
arpl
in
in
jb
cmp
xchg
iret
xor
frstor
in
push
jmp
sahf
fstp
arpl
cmp
dec
lahf
or
add
cmc
inc
push
push
in
cld
inc
dec
xor
or
cmp
jb
je
and
leave
or
sub
adc
xor
movs
xlat
ror
cmp
pushf
xchg
call
push
icebp
test
inc
or
dec
inc
fist
neg
sub
aam
fs
stc
xchg
in
lods
idiv
adc
mov
mov
data16
mov
cmps
rcl
pop
test
icebp
fwait
push
sti
lahf
adc
jl
int3
push
je
mov
mov
dec
xchg
add
or
jmp
retf
out
inc
push
adc
or
inc
(bad)
pop
out
add
ficomp
jne
jb
loopne
jae
and
sbb
cdq
push
jp
lods
mov
sahf
cwde
mov
jbe
and
aaa
jns
pop
idiv
mov
jno
(bad)
ins
bnd
call
mov
jno
xor
and
imul
out
in
scas
out
sub
pop
inc
(bad)
es
jo
inc
pop
lods
daa
aam
test
xchg
xor
fwait
xor
call
xchg
shl
mov
scas
mov
cmps
out
inc
jne
ja
jg
cmp
pop
(bad)
loop
or
mov
dec
or
adc
mov
shr
lea
jecxz
js
scas
jne
jecxz
scas
dec
cwde
mov
je
push
xor
xchg
push
fistp
push
sub
scas
jbe
cmp
cdq
push
mov
ret
leave
and
inc
mov
stos
icebp
test
pop
stc
mov
push
std
cmp
js
fmul
mov
cwde
mov
outs
addr16
mov
sub
cmc
cmps
dec
dec
dec
aam
xor
shl
inc
cmp
retf
or
(bad)
outs
ror
loop
jne
or
ja
jmp
xchg
cmp
shl
xchg
sub
mov
sbb
sub
outs
sbb
cmp
or
jle
shl
in
push
test
jp
div
xor
or
pop
out
mov
add
adc
gs
leave
imul
sbb
cmp
xchg
(bad)
mov
push
mov
inc
je
out
cmc
xchg
repnz
shl
xchg
inc
fwait
and
sub
xor
or
xor
into
daa
out
icebp
xchg
sub
or
jge
ins
(bad)
mov
stc
mov
fwait
mov
shl
rol
sar
push
imul
inc
std
add
dec
(bad)
inc
popa
outs
xchg
cld
rcl
cmp
pop
pop
int
shl
push
push
push
gs
fiadd
sahf
adc
data16
sbb
test
in
xchg
jl
mov
fistp
inc
hlt
jg
sbb
jle
xor
xchg
jmp
in
sub
mov
jmp
enter
jne
add
scas
es
es
addr16
fiadd
in
loope
aad
xor
inc
data16
rcr
aaa
aaa
cmp
out
jb
test
mov
xor
or
and
sub
push
cdq
pop
mov
scas
retf
push
movs
sbb
test
mov
and
sbb
dec
or
inc
imul
pop
cmp
loopne
jmp
mov
out
retf
or
std
xlat
ret
mov
mov
mov
xor
fwait
rsqrtps
push
jmp
(bad)
mul
xchg
pushf
and
cld
dec
dec
call
call
sub
sahf
out
jae
imul
add
mov
mov
jbe
or
aas
mov
mov
cld
mov
cmp
je
jmp
sbb
cli
ud2
into
xchg
dec
enter
cld
pop
jecxz
out
push
sub
mov
movs
add
and
retf
mov
outs
mov
rsm
bound
mov
pushf
das
loop
dec
mov
and
adc
aam
push
push
jno
rcr
test
jg
scas
dec
and
inc
or
faddp
jmp
in
inc
movs
mov
mov
xchg
iret
xor
rol
xchg
test
aaa
and
cmp
lock
and
sub
mov
push
cmp
das
test
sbb
inc
outs
push
retf
out
add
inc
push
lods
jb
inc
and
pop
ja
nop
jb
sub
sbb
inc
loop
(bad)
jmp
imul
xchg
and
jno
xor
mov
cli
lds
shl
xor
mov
or
push
xor
and
aas
ins
aam
jge
add
fdiv
mov
aaa
inc
xchg
mov
mov
adc
or
or
or
and
das
sahf
ja
retf
inc
push
jae
dec
jb
dec
mov
enter
mov
movlps
mov
fist
stc
pop
ss
xchg
fisttp
jp
test
xchg
sub
out
stc
push
sbb
popa
call
dec
cs
lods
les
xor
jmp
sub
dec
sub
cmps
jecxz
push
jb
mov
ret
cld
inc
and
cmp
mov
call
repz
xchg
sbb
pop
iret
jp
xchg
out
cmps
xchg
lods
ficomp
sub
mov
arpl
dec
daa
mov
sbb
mov
scas
stos
or
ret
push
out
pop
jp
mov
sti
aaa
popa
add
leave
icebp
inc
out
pop
jp
loope
(bad)
(bad)
push
and
(bad)
aam
aaa
rcl
lods
not
push
sbb
xchg
inc
inc
push
xor
mov
pop
xchg
and
rcl
repnz
push
xchg
stos
scas
cli
push
mov
mov
in
and
test
xchg
pop
inc
arpl
cmps
dec
aaa
sub
cs
inc
aaa
sub
in
lock
dec
mov
adc
in
js
out
and
cdq
adc
or
int3
aam
or
test
leave
test
mov
sub
adc
icebp
pusha
mov
cmp
add
adc
and
sub
inc
icebp
jle
jb
pop
sub
dec
mov
les
arpl
cmp
cmp
jl
leave
inc
mov
mov
outs
add
mul
dec
add
loopne
fcmove
cmps
push
icebp
std
adc
inc
test
mov
das
and
mov
dec
jl
adc
fcom
into
clc
ds
retf
daa
dec
push
mov
and
pop
and
sbb
push
ret
xlat
ret
les
(bad)
xchg
loopne
and
xor
rcr
jecxz
int
jae
(bad)
frstor
inc
(bad)
in
xchg
setns
push
add
sbb
outs
xchg
enter
and
inc
mov
mov
data16
icebp
ds
mov
je
sbb
and
shl
mov
pop
add
jb
retf
icebp
(bad)
call
xor
(bad)
push
loope
mov
xchg
and
scas
jno
icebp
pop
in
mul
or
out
cmp
push
xchg
cdq
stc
aad
push
adc
in
mov
adc
fs
ret
cwde
(bad)
shr
jmp
retf
jb
fcomi
je
hlt
push
push
lea
loop
cwde
pop
or
aam
(bad)
sbb
in
push
jmp
js
xor
jecxz
js
sbb
xor
push
push
out
dec
dec
int3
xor
dec
ins
and
pop
les
aam
sbb
push
(bad)
loope
sub
gs
leave
pushf
sbb
aas
pop
test
mov
pop
xor
aaa
xor
inc
pop
pop
ins
fdiv
mov
pop
cmp
mov
jae
push
pop
ja
inc
mov
inc
test
adc
push
sahf
mov
pop
rol
ds
cli
xchg
cmp
aam
cld
xchg
xchg
sbb
inc
mov
dec
cmps
jno
pop
sub
cmp
es
loope
and
xor
xor
inc
movs
(bad)
mov
and
mov
fsubr
pop
jnp
fisttp
ffree
add
push
inc
popa
mov
sbb
fs
and
stos
fstp
in
cmp
mov
xchg
cmp
mov
mov
fst
js
out
ret
sahf
mov
aad
(bad)
fmul
and
test
js
out
es
enter
gs
gs
js
test
fmul
inc
push
push
jmp
mov
out
push
loop
xchg
es
jp
retf
int3
stos
ret
mov
imul
repnz
adc
or
call
mov
(bad)
inc
hlt
outs
dec
and
iret
add
into
inc
cmps
and
push
and
fstp
idiv
and
jl
mov
mov
dec
push
imul
imul
