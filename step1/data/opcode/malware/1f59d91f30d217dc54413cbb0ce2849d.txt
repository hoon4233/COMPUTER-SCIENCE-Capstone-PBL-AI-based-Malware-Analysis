push
cmp
mov
retf
lods
lea
sbb
pop
pop
sbb
and
jge
loop
mov
retf
jmp
retf
mov
cmp
sbb
xchg
js
loope
ja
ds
pop
sbb
pop
pop
sbb
pop
add
and
add
dec
dec
mov
dec
jbe
xor
mov
punpckhwd
jbe
cmp
xchg
pop
sar
outs
cmps
fsqrt
aaa
scas
retf
ds
pop
pop
add
enter
ja
lods
dec
cmp
ret
lods
dec
aaa
add
mov
xor
xchg
fist
and
jae
retf
jbe
xor
stc
push
mov
in
outs
ds
pop
sbb
sub
lea
daa
cmp
(bad)
cld
dec
sub
add
leave
push
mov
pop
repz
xrelease
mov
data16
retf
sti
rol
xrelease
mov
push
scas
retf
adc
and
jae
retf
xor
pop
pop
repz
push
mov
ds
cmc
push
mov
jmp
outs
loop
jmp
(bad)
mov
pop
add
mov
sbb
mov
call
and
mov
int3
lods
pop
pop
sbb
push
aam
data16
lods
dec
jb
sub
add
aas
jg
jg
jecxz
out
retf
mov
sbb
js
pop
(bad)
mov
pop
fcomip
or
ja
mov
mov
mov
pop
pop
sbb
sub
xchg
ds
lods
xor
out
retf
scas
retf
jb
cmp
movs
es
push
mov
ror
lods
retf
ds
pop
sbb
pop
add
jae
retf
std
xor
out
retf
mov
jbe
ds
pop
imul
xor
mov
or
ja
test
sub
lods
dec
cmp
cmp
mov
outs
aas
rcl
or
cmp
mov
retf
lods
retf
sahf
mov
call
mov
retf
mov
push
mov
int
leave
jae
int3
jbe
cmp
mov
jmp
mov
lods
dec
cmp
mov
jbe
imul
lods
adc
aaa
jnp
push
repz
mov
retf
mov
shl
lods
push
addr16
sub
mov
xor
push
test
ret
fidiv
fdivr
mov
lea
push
mov
in
or
jb
stc
jbe
cmp
retf
or
ja
mov
aas
daa
imul
xor
in
retf
or
ja
test
dec
js
lods
push
mov
xchg
or
xchg
pop
jns
lods
dec
cmp
jo
pop
sbb
pop
pop
sbb
pop
add
and
sbb
pop
add
mov
data16
lods
mov
lea
cmp
jmp
or
ja
(bad)
jbe
cmp
push
jb
test
fisttp
ja
ret
loop
retf
lods
sbb
cmps
push
test
mov
test
pop
out
jae
retf
jbe
pop
cli
fidiv
fisttp
ja
dec
daa
mov
mov
adc
push
fimul
pushf
sub
pop
sbb
pop
pop
sbb
pop
pop
sbb
pop
add
pop
pop
sbb
push
in
xchg
pop
cli
fisubr
adc
mov
mov
xor
fist
mov
mov
or
xchg
loop
mov
sti
mov
add
pop
push
scas
retf
jb
aam
jo
pop
sbb
pop
add
sbb
pop
sbb
aas
adc
shr
xchg
lods
retf
hlt
retf
add
scas
call
aaa
loopne
(bad)
jge
jns
cmp
jnp
mov
aaa
fwait
imul
mov
xor
mov
cmp
add
(bad)
sbb
jbe
repz
cli
dec
mov
nop
jge
jno
mov
cmp
daa
cmp
pop
pop
sbb
pop
pop
sbb
pop
pop
sbb
pop
add
and
sbb
pop
add
sar
adc
call
dec
gs
imul
adc
ja
aaa
push
mov
jmp
sub
add
mov
cmp
sub
jns
push
push
aas
jg
sub
dec
ds
add
pop
pop
sbb
push
in
fwait
xor
cmc
mov
sti
(bad)
leave
mov
push
mov
loop
fldenv
mov
pop
sbb
pop
pop
sbb
pop
add
and
sbb
pop
pop
pop
repz
loope
push
aas
pop
mov
sub
jns
push
push
inc
jg
pop
sbb
int3
mov
outs
mov
jle
push
inc
pop
or
stc
ins
mov
sbb
test
aas
mov
mov
out
retf
outs
mov
jle
push
aas
jg
sub
call
add
pop
sbb
push
in
fwait
loopne
cld
sub
into
push
sub
add
cmp
aaa
out
pop
test
out
retf
call
and
pop
sbb
pop
pop
sbb
pop
add
and
sbb
pop
add
mov
xchg
stos
dec
outs
ret
jp
lahf
mov
mov
stos
jp
pop
std
adc
(bad)
leave
push
and
add
cmps
int
jl
xchg
cli
ins
mov
pop
push
mov
mov
cdq
sub
cmp
pop
pop
sbb
pop
pop
sbb
pop
pop
sbb
pop
add
mov
push
repz
loope
xor
ret
cli
and
xchg
or
stos
dec
or
jmp
cmp
mov
pop
clc
retf
ja
and
aad
loopne
rcl
xchg
daa
cmp
cmc
sbb
fndisi(8087
push
xchg
xchg
fisttp
ja
mov
ja
lods
retf
lods
popf
add
jae
ds
pop
sbb
shr
cmp
(bad)
cmc
mov
ja
lods
retf
lods
popf
add
test
pop
cld
and
mov
push
xchg
daa
cmp
pop
pop
test
ja
ret
into
cmps
retf
lods
sbb
lods
cli
mov
cmp
jnp
icebp
(bad)
dec
mov
mov
sbb
adc
cmc
mov
ja
lods
retf
lods
fistp
in
retf
add
rep
fidiv
(bad)
and
mov
mov
cmp
rol
jecxz
push
outs
pop
cld
push
jp
cmp
sbb
js
pop
(bad)
mov
push
enter
add
mov
in
xchg
cmp
or
pop
ja
lods
dec
cmp
cmp
stos
push
je
aaa
add
int3
jbe
xor
retf
int3
jbe
xor
scas
sbb
pop
retf
retf
jbe
xor
add
outs
ds
lahf
cmp
mov
mov
ds
pop
sbb
retf
add
inc
sbb
pop
cld
dec
and
push
sbb
sbb
jbe
jb
push
sbb
pop
pop
jmp
std
ss
scas
aam
ds
pop
push
icebp
fidiv
lods
retf
jno
rcl
xchg
daa
cmp
pop
add
mov
fiadd
push
in
fwait
loopne
into
push
mov
cmc
(bad)
ss
outs
repnz
mov
or
mov
ds
pop
sbb
retf
mov
push
lea
(bad)
ja
lods
retf
sub
jbe
xor
mov
int
or
add
sar
shl
cmp
ja
lods
retf
add
jbe
mov
mov
cmp
stos
dec
outs
mov
adc
ret
cmp
ja
push
ret
int
(bad)
adc
int
fdivr
leave
mov
mov
inc
jg
jg
ins
pop
cmps
mov
mov
stos
jp
push
push
mov
push
repz
mov
jno
add
test
add
jbe
lods
sub
out
scas
aam
ds
pop
sbb
pop
add
mov
loope
aas
jg
jbe
add
cmp
mov
ret
(bad)
cmps
retf
lods
pop
pop
sbb
pop
pop
pop
les
jbe
adc
xchg
lods
frndint
pop
scas
retf
std
out
leave
adc
ret
cmp
outs
pop
scas
push
addr16
cmps
mov
outs
mov
pop
lea
mov
dec
cdq
jmp
js
lds
ja
adc
lods
or
std
sbb
sar
mov
aas
outs
ja
pop
loope
lods
fild
sbb
push
mov
cmp
outs
sbb
jmp
scas
retf
and
neg
push
cmc
ja
leave
in
movs
push
or
xchg
cmp
jg
mov
(bad)
push
or
rol
shl
out
push
imul
or
ds
pop
adc
mov
ficom
sbb
xchg
mov
mov
mov
aam
pop
aaa
packssdw
call
mov
mov
leave
shr
or
jmp
mov
add
mov
ja
dec
retf
cmp
jnp
ja
fcom
mov
jnp
mov
cld
dec
and
int3
loope
push
mov
cmp
jnp
xchg
shr
mov
cld
test
push
xchg
dec
pop
mov
retf
lods
aas
test
sbb
mov
mov
js
cmp
jnp
xor
inc
je
mov
jnp
scas
dec
aaa
add
aad
or
pop
sbb
sbb
loopne
and
or
loop
lea
push
out
mov
ja
lods
push
mov
adc
cli
loopne
mov
int
and
mov
lods
dec
aaa
fwait
xor
xchg
xor
jbe
mov
(bad)
mov
out
retf
lods
push
dec
pop
leave
xchg
dec
retf
cmp
adc
rol
cwde
xor
jbe
lods
sbb
jae
into
jbe
xor
sti
dec
and
fstp
and
push
mov
aaa
add
push
lahf
mov
fiadd
enter
pop
mov
aaa
add
jae
mov
leave
jbe
lods
mov
sbb
bnd
add
mov
outs
push
jge
fist
(bad)
xor
sti
dec
and
loopne
xor
fwait
mov
in
retf
and
add
shl
add
rcr
pop
shr
stos
dec
or
cmp
or
jmp
or
das
lea
lea
sbb
pop
pop
sbb
pop
pop
sbb
pop
pop
sbb
push
ret
scas
mov
int3
loope
or
mov
cmp
push
enter
jmp
cmp
add
mov
jns
xor
mov
cmp
push
sub
add
ror
outs
pop
inc
mov
scas
rcl
add
mov
out
jbe
xor
mov
hlt
loop
push
jne
stc
dec
mov
pop
inc
mov
dec
loope
fst
mov
outs
mov
mov
popa
pop
cld
out
jmp
cmp
fwait
xchg
or
xchg
mov
cmp
pop
pop
sbb
pop
pop
sbb
pop
pop
sbb
and
add
sar
cmp
dec
aaa
add
push
test
hlt
into
loopne
pop
retf
aad
jp
lods
pushf
sar
push
mov
sar
and
leave
cld
dec
sub
leave
push
retf
repnz
retf
lods
push
mov
xsha1
cmps
leave
jmp
std
leave
dec
pop
hlt
(bad)
mov
out
sbb
xchg
xchg
jns
lods
dec
cmp
xor
test
fisttp
cmc
lods
leave
mov
lods
fistp
dec
ds
sbb
into
test
movs
push
js
adc
sbb
adc
xchg
call
inc
adc
shr
pop
xlat
inc
retf
jbe
push
mov
sub
ds
adc
jmp
push
fwait
scas
lods
(bad)
call
leave
jmp
fisttp
fist
push
inc
fwait
xor
jns
lods
push
cmp
mov
sub
jp
xchg
dec
adc
fnstenv
imul
fld
fsin
sbb
lods
mov
mov
nop
jnp
mov
add
int
mov
sbb
push
js
mov
bound
jg
cli
dec
loop
sbb
cmc
std
(bad)
repz
jb
add
push
cmp
movs
call
inc
ds
js
cmp
cs
retf
jbe
ss
call
or
push
push
dec
sbb
sbb
cdq
xchg
es
jne
fs
adc
push
arpl
adc
dec
fwait
imul
fmul
jbe
sar
cmp
lods
mov
adc
lea
ds
pop
sbb
pop
pop
sbb
pop
add
pop
pop
pop
repz
mov
retf
inc
shl
rol
sbb
pop
pop
sbb
pop
add
mov
push
mov
sbb
pop
pop
sbb
pop
pop
push
mov
inc
mov
jg
cmp
pop
lds
xchg
sub
dec
ds
pop
sbb
pop
add
pop
pop
sbb
pop
pop
sbb
pop
pop
sbb
pop
fbstp
jbe
or
or
mov
pop
pop
sbb
xor
movs
leave
jbe
jb
add
pop
sbb
pop
pop
sbb
dec
ins
add
pop
pop
jmp
pop
sbb
pop
pop
pop
repz
loope
cmps
jae
lods
dec
cmp
pop
pop
sbb
pop
pop
sbb
pop
pop
sbb
pop
pop
sbb
call
add
into
mov
sub
dec
ds
add
pop
pop
sbb
pop
pop
sbb
nop
mov
mov
nop
mov
sbb
pop
pop
sbb
pop
pop
sbb
pop
pop
sbb
pop
pop
sbb
pop
add
test
leave
jbe
jb
push
mov
outs
fidiv
ds
pop
sbb
pop
pop
sbb
pop
pop
sbb
sbb
repz
es
mov
retf
scas
retf
push
leave
push
mov
mov
pushf
pmaxub
ja
ror
retf
lods
leave
pushf
pop
fimul
ja
rol
retf
lods
mov
adc
int3
jbe
dec
sub
adc
add
rol
xchg
outs
mov
sbb
ror
ror
fnstenv
ror
xchg
add
scas
retf
jbe
xchg
bnd
lods
mov
and
out
jp
sub
lock
test
mov
call
repnz
js
xchg
dec
add
jg
stos
scas
xchg
push
add
lods
pop
fstp
movs
pushf
add
shl
cmp
dec
out
retf
jecxz
cmps
retf
lods
pop
mov
scas
or
out
ret
retf
cmp
jbe
mov
add
test
sar
mov
out
sahf
(bad)
arpl
ja
dec
pop
js
cmp
fist
xor
xchg
mov
xchg
sub
loop
fld
adc
sub
xchg
mov
mov
fsincos
dec
das
retf
jbe
jae
adc
push
lea
retf
cmp
jbe
fmul
jbe
push
xchg
mov
retf
lods
data16
push
repnz
mov
in
or
sbb
mov
cwde
sti
mov
or
repnz
xchg
push
or
mov
mov
inc
adc
outs
jbe
rcr
cmp
fs
xor
mov
or
lods
retf
adc
mov
mov
std
ss
jno
inc
pop
jp
inc
pop
jp
pushf
repz
ja
shl
cmps
retf
lods
xchg
inc
pop
jp
add
mov
push
sti
(bad)
leave
loope
aas
jg
loopne
add
mov
hlt
jnp
maxps
ror
jbe
ss
push
adc
cdq
jne
shl
daa
outs
adc
cmp
outs
mov
xchg
add
mov
mov
fnstenv
mov
ss
arpl
scas
ds
in
mov
mov
leave
ja
packuswb
call
pop
push
fld
leave
inc
pop
xchg
fwait
xor
js
lods
dec
jbe
xor
lods
imul
retf
and
add
mov
loope
lods
call
lods
aas
pop
mov
out
retf
lods
push
outs
adc
mul
xchg
fcmovne
lods
dec
aaa
add
jp
jle
outs
adc
cmps
add
mov
xor
cmc
lods
xor
mov
mov
(bad)
mov
cmp
outs
jne
retf
add
in
xchg
lods
fild
push
and
stc
or
retf
pop
shl
retf
lods
fild
dec
and
(bad)
sti
mov
test
or
mov
addr16
retf
add
mov
cmps
cs
adc
sbb
scas
leave
inc
pop
xchg
fwait
xor
mov
pushf
jmp
cmp
xchg
adc
mov
push
das
add
shr
adc
mov
pop
or
(bad)
add
mov
xchg
mov
and
(bad)
mov
mov
jbe
fsqrt
mov
ss
sub
xor
push
fst
into
jne
cmp
add
mov
xchg
cmp
jg
pop
retf
leave
repz
jecxz
lods
fbld
jmp
ss
test
or
outs
mov
adc
ja
sti
cmps
enter
hlt
jg
daa
outs
mov
cmp
or
int3
loop
inc
fwait
xchg
loopne
add
fldl2e
xchg
xor
ja
movs
push
jmp
mov
mov
jns
pushf
pop
fimul
ja
lods
and
add
inc
or
ja
sbb
ja
sbb
ja
sbb
ja
sbb
ja
or
ja
adc
ja
adc
ja
xor
inc
pop
add
xor
mov
adc
ja
adc
ja
or
ja
or
ja
add
add
js
ja
arpl
ja
fs
ja
arpl
ja
lock
ja
arpl
ja
arpl
ja
fs
ja
fs
ja
js
ja
js
ja
popa
push
ja
addr16
ja
addr16
ja
jp
ja
ror
ja
add
add
xor
and
adc
add
sub
sbb
or
ds
push
push
push
inc
cmp
sub
sbb
or
xor
and
adc
add
xor
and
adc
add
adc
das
daa
pop
pop
sysret
sub
xor
cmp
inc
and
pop
das
getsec
pop
aas
pop
es
cs
ss
ds
and
adc
sub
xor
cmp
and
sub
xor
cmp
and
sub
xor
cmp
and
sub
xor
cmp
and
add
add
add
push
pop
or
or
or
or
or
push
movups
adc
adc
adc
adc
push
pop
sbb
sbb
sbb
sbb
sbb
push
pop
and
adc
adc
sbb
movhps
add
or
push
and
add
adc
add
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
aas
aaa
das
daa
pop
pop
sysret
ds
push
push
push
cmp
adc
or
push
adc
sbb
add
adc
add
or
pop
sbb
and
xor
daa
cmp
xor
sbb
add
add
add
add
add
add
add
add
add
ud2
or
or
or
or
pop
add
pop
add
add
or
add
push
or
or
pop
add
add
add
add
add
add
or
push
or
add
pop
add
add
or
or
add
push
or
add
or
push
or
add
or
(bad)
add
push
pop
or
add
or
push
add
add
or
or
add
or
or
add
lsl
or
add
or
pop
add
push
add
add
push
add
push
or
add
or
or
sldt
add
add
or
or
push
or
or
pop
or
add
sldt
or
or
or
add
add
add
or
push
or
push
or
or
or
pop
or
or
or
push
add
add
or
or
push
add
push
or
or
add
add
or
wbinvd
add
or
or
add
add
or
add
add
add
or
syscall
add
or
pop
add
add
add
add
add
push
add
or
str
or
add
add
pop
add
add
push
add
push
add
or
or
push
or
add
or
pop
or
add
ud2
add
or
push
add
prefetchw
or
pop
add
add
or
pop
or
or
add
push
or
add
push
pop
add
or
add
inc
add
add
add
inc
push
xor
cs
ins
add
add
add
(bad)
(bad)
jmp
inc
add
mov
add
lock
fsub
lock
inc
add
add
add
add
inc
add
add
add
add
add
jo
imul
push
inc
add
add
add
add
add
add
fidiv
add
in
xor
add
add
dec
xor
add
xor
inc
or
ja
sbb
ja
sbb
ja
sbb
ja
sbb
ja
or
ja
adc
ja
adc
ja
xor
inc
pop
add
xor
mov
adc
ja
adc
ja
or
ja
or
ja
add
add
js
ja
arpl
ja
fs
ja
arpl
ja
lock
ja
arpl
ja
arpl
ja
fs
ja
fs
ja
js
ja
js
ja
popa
push
ja
addr16
ja
addr16
ja
jp
ja
ror
ja
add
add
add
popa
jo
ins
ins
outs
arpl
mov
push
jb
arpl
jae
gs
jo
add
je
popa
ins
inc
ins
ins
outs
arpl
add
push
ins
gs
xchg
push
imul
jb
je
arpl
add
imul
jb
add
push
jb
arpl
fs
jae
add
push
add
fs
imul
add
xor
dec
jae
popa
fs
gs
fs
je
add
push
add
popa
jo
jb
add
clc
add
gs
imul
dec
inc
push
dec
inc
dec
xor
cs
ins
add
adc
aas
aas
xor
inc
pop
push
inc
pop
inc
pop
add
cmps
add
popa
ins
ins
outs
arpl
pop
add
gs
(bad)
aas
aas
xor
inc
push
inc
pop
dec
inc
pop
add
dec
push
push
inc
push
push
cs
ins
add
rol
pop
gs
je
dec
add
arpl
inc
imul
gs
je
add
ins
fs
outs
add
pop
pop
addr16
popa
imul
lidtd
outs
imul
add
jae
je
jae
jb
popa
je
gs
add
popf
add
fs
jae
pop
imul
add
jo
pop
arpl
ins
outs
fs
outs
add
jo
pop
ins
outs
fs
add
je
popa
jo
pop
je
jo
add
retf
gs
gs
pop
push
gs
add
mov
pop
arpl
je
outs
ins
data16
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
mov
inc
gs
je
jb
jne
dec
outs
outs
inc
add
dec
outs
arpl
inc
ins
ins
outs
arpl
add
add
je
jb
outs
arpl
fs
js
push
add
jae
inc
js
gs
imul
inc
gs
popa
jae
inc
jb
outs
jb
add
add
je
imul
add
add
add
add
add
add
add
add
add
add
aaa
add
nop
aaa
add
xor
add
add
es
adc
hlt
lods
add
add
ror
lods
out
int3
lods
data16
lods
adc
lods
retf
jbe
lods
shl
lods
int3
jbe
lods
into
jbe
lods
fidiv
lods
dec
ja
lods
jmp
lods
ja
cli
stos
lods
jne
lods
lods
jne
lods
leave
jbe
lods
add
lods
enter
mov
lods
enter
enter
enter
enter
enter
enter
enter
enter
mov
push
les
mov
push
xor
jmp
dec
add
xor
sbb
test
add
test
sbb
push
push
xor
jne
lods
enter
mov
cwde
adc
fs
adc
fs
adc
sub
adc
cs
mov
xchg
xchg
adc
jmp
cwde
adc
jge
or
jge
push
mov
jge
sbb
cld
xchg
push
mov
sub
adc
fs
adc
sub
adc
cld
xchg
or
and
cwde
adc
cld
xchg
sbb
pop
add
xor
cwde
adc
enter
enter
js
mov
dec
mov
lods
enter
call
pop
jo
enter
enter
enter
outs
sub
enter
enter
enter
enter
enter
lods
jne
lods
enter
lods
jne
lods
enter
enter
enter
and
ins
lods
stos
jne
lods
enter
enter
enter
enter
enter
mov
outs
lods
mov
lods
push
push
mov
je
lods
enter
enter
enter
enter
daa
outs
lods
mov
mov
jne
lods
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
xchg
add
cmp
push
outs
lods
enter
enter
enter
enter
enter
enter
push
add
cmp
mov
inc
outs
lods
push
pop
mov
jne
lods
enter
push
add
cmp
mov
and
mov
jne
lods
enter
enter
push
jne
lods
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
push
jne
lods
enter
enter
outs
sub
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
les
enter
mov
mov
jne
lods
enter
enter
enter
enter
enter
and
lods
enter
enter
enter
enter
enter
enter
add
ins
lods
enter
enter
enter
cwde
sub
mov
outs
lods
js
outs
lods
dec
sub
pop
sub
inc
sub
enter
xor
outs
lods
enter
daa
sub
enter
adc
outs
lods
enter
push
sub
enter
clc
sub
enter
scas
jne
sub
jne
lods
jmp
jne
lods
mov
jne
lods
mov
jne
lods
xchg
sub
lods
enter
cwde
sub
lods
enter
ins
sub
lods
enter
arpl
lods
enter
pop
sub
lods
enter
xor
enter
xor
lods
enter
and
outs
lods
enter
or
lods
enter
imul
outs
lods
enter
aad
outs
lods
enter
scas
sub
enter
enter
enter
enter
xchg
sub
and
outs
lods
enter
enter
enter
sub
lods
add
lods
enter
enter
enter
ins
sub
or
lods
enter
enter
enter
jbe
outs
lods
lock
outs
lods
enter
enter
enter
sub
clc
inc
outs
lods
enter
enter
enter
push
sub
loopne
outs
lods
enter
enter
enter
cmp
outs
lods
call
jne
lods
enter
enter
inc
sub
rol
enter
enter
enter
xor
outs
lods
fadd
enter
enter
enter
and
outs
lods
rol
enter
enter
enter
or
sub
enter
enter
enter
push
sub
mov
outs
lods
enter
enter
enter
add
sub
enter
enter
enter
out
sub
mov
jne
lods
enter
enter
clc
sub
test
outs
lods
enter
enter
enter
loop
outs
lods
nop
sub
enter
enter
enter
iret
sub
cwde
sub
enter
enter
enter
mov
sub
enter
enter
enter
(bad)
sub
mov
outs
lods
enter
enter
enter
mov
outs
lods
jo
outs
lods
enter
enter
enter
mov
sub
enter
enter
enter
mov
outs
lods
pusha
sub
enter
enter
enter
enter
enter
jne
sbb
outs
and
pop
xchg
sbb
pop
enter
pop
sub
ins
and
lods
jno
xor
pop
je
sub
push
jge
pop
push
je
mov
sbb
pop
jge
pop
push
je
mov
sbb
pop
xchg
sbb
pop
enter
imul
jp
cs
je
and
and
push
pop
inc
cs
je
sub
pop
jge
pop
push
je
mov
and
dec
js
pop
push
je
mov
or
ds
inc
cs
je
cmp
sbb
push
jge
pop
push
je
mov
and
pop
jbe
cs
je
cmp
and
lods
popa
and
pop
ja
cs
je
and
push
aas
pop
xchg
sbb
pop
enter
ins
and
ss
enter
pop
and
cs
je
xor
dec
js
pop
push
je
mov
or
jp
and
lods
pop
sbb
inc
jae
cmp
and
lods
jno
xor
jp
and
lods
enter
dec
stc
xor
push
inc
sbb
and
sbb
imul
push
dec
jmp
cmp
add
push
and
push
and
jne
inc
push
out
and
sub
lods
enter
cmp
add
push
sbb
xor
mov
out
xor
(bad)
stos
enter
dec
push
adc
pop
cmp
cmovg
jne
push
dec
add
and
das
lods
enter
cmp
sbb
dec
add
cmp
adc
push
jne
lods
pop
std
adc
push
sbb
xor
std
xor
sub
enter
jae
adc
aaa
inc
cld
mov
out
xor
push
cmp
push
stc
adc
xor
xor
cmp
cld
ss
sti
dec
dec
jmp
pop
add
das
cmp
sbb
push
push
add
outs
in
std
xor
adc
push
sbb
cmp
stos
enter
cmp
sysenter
dec
stc
add
dec
pop
sbb
imul
lods
enter
je
sbb
dec
or
push
push
add
dec
enter
dec
jmp
adc
cmp
out
push
push
sti
sbb
cld
xor
pop
add
push
dec
add
adc
dec
cld
sti
stos
enter
pusha
out
cmp
xor
and
enter
cmp
sbb
push
adc
ins
cld
push
dec
cld
sbb
push
add
pop
cmp
cmp
pop
add
sub
enter
cmp
adc
not
inc
pop
or
inc
dec
jmp
dec
push
cld
cmp
adc
push
sbb
and
push
xor
sti
and
sbb
sti
sbb
out
adc
jne
push
dec
add
push
cmp
or
dec
pop
adc
push
cmp
sbb
add
aaa
dec
jne
lods
stos
push
mov
jne
lods
enter
enter
enter
enter
inc
fnsave
retf
shr
mov
jne
lods
lods
jb
enter
aaa
lods
jp
leave
jbe
xchg
test
jge
ins
stc
loop
outs
mov
mov
jne
xchg
stos
loop
js
mov
loopne
ret
jbe
(bad)
pop
jb
lods
leave
in
ins
ret
(bad)
sahf
adc
jp
enter
enter
leave
int3
push
cmps
leave
jbe
jmp
fst
xchg
enter
mov
je
lods
enter
lods
jne
xchg
jecxz
pop
mov
push
mov
pop
leave
call
jmp
pop
out
aam
mov
lods
enter
add
lods
enter
in
pop
out
push
popf
loop
xchg
inc
pop
and
pop
or
lods
leave
lods
push
cmps
leave
jbe
shl
mov
enter
bound
sub
ret
jne
xchg
sub
cld
mov
jne
lods
leave
lods
jle
leave
jbe
add
mov
leave
jbe
pop
mov
pop
pushf
xor
jo
and
jge
pop
not
dec
hlt
test
push
outs
xor
jl
iret
or
iret
aad
hlt
dec
lods
fld
iret
xchg
sahf
outs
shl
pop
out
aam
cmc
xchg
mov
call
enter
ret
sbb
out
mov
enter
mov
out
hlt
push
mov
jbe
sbb
daa
test
pop
out
mov
ret
xchg
xor
loop
xchg
inc
pop
not
sub
adc
cmp
inc
mov
stos
bound
retf
mov
sahf
imul
fidiv
leave
xor
xchg
sub
les
cmp
outs
les
jbe
aad
aas
leave
jmp
jns
mov
std
xchg
lods
lea
(bad)
mov
xchg
mov
leave
jbe
xor
jbe
xchg
test
ins
lods
or
pop
or
push
jne
lods
enter
imul
mov
stos
jne
adc
pop
lds
or
xchg
xchg
sub
jmp
xor
pop
mov
jbe
inc
fcom
popa
repz
ret
jne
jae
in
fadd
jbe
sbb
or
sbb
outs
into
js
loope
ret
inc
adc
adc
pusha
mov
enter
cmp
or
lods
enter
dec
aam
dec
loopne
mov
call
sbb
loop
fadd
jbe
xchg
mov
arpl
sub
jno
aas
push
xchg
and
loop
sbb
aaa
mov
cmps
leave
jbe
sub
loope
ret
dec
bound
out
mov
das
mov
out
pop
aas
xlat
xor
cmps
enter
aad
not
lods
jo
inc
js
inc
lods
aas
pop
dec
sbb
cmp
lods
leave
div
pushf
out
pop
mov
js
rol
jbe
lods
pop
adc
(bad)
fiadd
pushf
xor
xchg
sub
test
rcl
aad
lods
enter
xor
popa
xchg
dec
mov
mov
shr
mov
jne
lods
cmp
adc
cld
mov
jne
in
cmp
and
jae
pusha
sbb
jl
lods
enter
adc
xchg
pop
jns
pushf
lea
sbb
div
enter
enter
xchg
lods
enter
shl
mov
and
rol
or
xchg
sbb
dec
xor
cdq
xlat
imul
leave
jbe
xlat
sar
lods
leave
out
shl
jno
push
jne
add
mov
test
outs
and
pop
sub
mov
sub
fwait
mov
dec
mov
arpl
adc
pop
mov
ss
mov
mov
mov
stos
loop
xchg
mov
jbe
cdq
jmp
mov
push
outs
lods
pop
or
push
mov
jnp
das
xchg
lods
inc
popa
or
adc
xchg
xchg
movs
out
fadd
mov
fwait
jmp
jno
rcr
hlt
xchg
imul
ja
mov
dec
and
daa
sbb
addr16
or
or
stos
into
shr
jbe
sbb
and
loopne
push
add
ud1
xor
add
pop
outs
movs
dec
loopne
cmovbe
dec
mov
ds
jbe
mov
in
cmpxchg
out
mov
es
cmps
inc
xor
jmp
xchg
clc
mov
stos
in
cs
mov
xor
imul
sbb
ds
or
nop
fsub
xchg
adc
sub
or
jl
mov
xchg
xchg
ins
(bad)
pop
mov
ja
bound
aad
lods
dec
xor
adc
imul
hlt
call
xor
addr16
retf
shl
and
jge
jmp
cmps
jmp
xchg
mov
xchg
sbb
inc
xor
mov
in
cmp
loop
dec
add
sahf
mov
mov
dec
inc
cmp
daa
or
and
push
ds
cdq
inc
and
lds
stos
shr
push
cmp
les
fadd
test
mov
call
loop
pusha
movs
jnp
in
call
ss
leave
jno
dec
push
sbb
outs
sbb
inc
rcl
in
pop
stos
loop
sahf
jp
dec
inc
aas
push
mov
mov
(bad)
dec
pop
call
jmp
sbb
clc
(bad)
out
mov
cmps
add
xchg
pop
sar
popa
outs
aam
sub
in
jns
mov
(bad)
in
mov
jl
fwait
or
punpcklbw
cmp
js
rcl
inc
xchg
bound
leave
jb
mov
dec
pop
gs
jmp
and
fadd
aam
imul
stos
mov
xchg
jae
aas
dec
dec
xchg
pushf
in
pop
lock
test
jecxz
mov
adc
outs
mov
(bad)
out
push
add
popa
adc
pop
sar
or
and
stos
xor
add
sub
rcr
mov
cmp
imul
outs
nop
adc
aaa
pop
dec
mov
mov
imul
arpl
mov
inc
pop
add
repnz
jo
mov
jmp
push
dec
ror
push
lods
gs
dec
dec
push
mov
arpl
aas
movs
inc
adc
mov
cmc
ins
aaa
jge
fnsave
test
scas
das
xchg
das
loop
rcl
pop
icebp
push
push
pop
and
xor
fist
popa
or
or
adc
pop
lods
push
mov
daa
mov
jno
in
push
mov
test
stos
sub
mov
aam
inc
sbb
xor
pop
lock
aam
push
jns
popf
repz
(bad)
fadd
jns
mov
sbb
add
in
pop
mov
xchg
imul
std
jae
jp
and
sub
mov
(bad)
repz
call
cmp
mov
inc
pop
loope
gs
scas
pop
cmp
mov
xchg
pop
and
add
inc
loopne
sbb
xchg
sub
sub
jmp
push
push
repz
sbb
cmp
jb
mov
push
aas
js
inc
dec
xor
int3
xor
and
xchg
stos
jge
cli
addr16
stos
fsubr
xchg
fmul
push
jp
mov
in
adc
mov
je
push
jecxz
xchg
cmp
or
test
inc
sub
sub
adc
xor
xor
ficomp
lods
sub
sbb
pushf
sub
shl
xor
add
or
xchg
adc
retf
mov
cmp
pushf
dec
loopne
pop
sbb
sub
rcr
and
adc
lods
cmp
mov
cwde
mov
iret
pop
out
movs
fisttp
and
xor
call
movs
xchg
ins
fisttp
add
cmps
adc
mov
push
ror
daa
iret
add
popf
dec
es
loop
jae
pop
mov
out
add
test
das
dec
popa
jae
mov
lods
(bad)
out
jns
xor
mov
cdq
dec
mov
enter
enter
jns
mov
pop
mov
pop
mov
loopne
xchg
enter
enter
enter
enter
push
lock
push
jne
xor
jne
lods
enter
enter
enter
test
xlat
xchg
stos
jne
mov
jne
ror
in
mov
pop
outs
repnz
mov
imul
add
mov
cli
aam
push
push
xchg
shr
dec
push
repz
mov
push
sub
call
loopne
ja
fimul
and
mul
(bad)
jb
inc
in
xchg
addr16
popf
push
cmp
icebp
ficomp
inc
ins
cdq
pusha
cmp
ja
and
push
sub
lahf
push
inc
jle
mov
add
dec
scas
pushf
push
and
mov
mov
inc
ja
xor
adc
mov
inc
scas
fisttp
das
xlat
jo
cmp
leave
jno
jmp
pop
xor
dec
add
push
ret
jle
add
shr
sbb
pushf
ins
jmp
jnp
pop
retf
add
outs
fwait
jnp
inc
mov
jmp
xchg
jl
sbb
or
test
xor
push
ret
in
jno
movs
inc
xor
movs
mov
fimul
and
pusha
js
pop
cmp
pop
mov
movs
in
inc
repnz
daa
jmp
mov
add
xchg
inc
mov
getsec
nop
and
jl
cld
sbb
cmc
sub
push
dec
mov
pop
push
mov
adc
popf
rcl
and
ja
fwait
sbb
ror
in
movs
xchg
in
sbb
arpl
jne
bound
mov
or
sub
and
sub
loope
fstp
add
pop
call
sti
(bad)
mov
mov
iret
ins
jl
inc
sub
call
ror
sub
daa
(bad)
aam
ds
inc
xlat
mov
sbb
rcl
cmp
and
push
push
(bad)
push
sub
jno
int
js
inc
mov
pop
mov
fadd
cwde
or
xchg
or
inc
sbb
push
repz
mov
(bad)
mov
or
pushf
outs
jge
mov
jp
pop
xchg
pusha
adc
imul
add
rcl
adc
icebp
(bad)
outs
mov
and
mov
jg
enter
shl
jp
cmp
gs
mov
imul
xchg
xchg
(bad)
jmp
sub
aam
xor
shl
sysenter
in
sbb
xor
mov
xchg
leave
jnp
cvtpi2ps
mov
dec
and
dec
hlt
icebp
pusha
inc
push
jmp
test
dec
mov
jecxz
pusha
push
imul
out
les
push
std
outs
jmp
sub
sub
stos
pop
pushf
std
repz
(bad)
ss
fldenv
or
xchg
dec
test
mov
push
inc
or
lds
sub
mov
rcl
test
and
pushf
loope
mov
adc
fld
icebp
add
push
rcl
and
ror
jmp
scas
cmp
enter
leave
lock
mov
loop
(bad)
idiv
in
fidivr
push
lock
ret
mov
int
dec
dec
nop
sub
mov
mov
mov
or
imul
sbb
mov
sub
adc
mov
pop
push
popa
dec
add
inc
call
stos
and
aas
or
cld
das
call
sbb
cmp
mov
pop
pop
mov
(bad)
xchg
popf
stos
and
cmc
imul
sbb
scas
pop
cmp
push
adc
call
add
test
pop
and
xor
in
jns
jmp
jmp
inc
adc
or
jbe
or
xor
dec
sbb
imul
aam
add
aaa
cmp
jg
sub
mov
inc
mov
xor
xchg
jge
push
adc
ins
stos
mov
sti
dec
or
dec
addr16
mov
int3
int3
inc
sub
jae
jnp
daa
mov
call
xchg
inc
rcl
inc
aam
sbb
inc
sbb
sub
pusha
sbb
adc
aam
imul
ins
add
xchg
into
inc
ss
push
sub
jle
(bad)
nop
jae
out
sub
or
jnp
mul
xchg
sbb
test
std
pop
sub
xchg
and
jge
fadd
mov
jns
lods
xchg
cmp
add
fs
pop
movs
xlat
cld
(bad)
lahf
jne
aaa
xlat
scas
hlt
bound
cld
sbb
add
inc
in
adc
push
sahf
shl
xchg
mov
fld
and
add
cwde
jle
das
hlt
inc
fcmovne
(bad)
loope
pusha
xchg
js
leave
cmps
jecxz
data16
cld
es
scas
xchg
ror
cmps
test
xor
ins
scas
xchg
xchg
in
xchg
test
icebp
popf
sub
cmp
jo
and
retf
cld
push
shl
lods
jle
add
jge
(bad)
in
jg
cs
es
and
push
dec
in
mov
mov
xchg
jge
pop
jmp
call
and
mov
lds
mov
ret
movs
test
adc
jg
fwait
in
shl
(bad)
cld
es
jl
xchg
shl
inc
repz
ss
adc
xor
sub
jl
out
ficomp
jmp
push
inc
cmp
lds
push
test
add
cmps
mov
or
cld
in
mov
ins
imul
int
out
mov
jl
mov
fmul
aas
mov
jp
hlt
sub
cli
fdivrp
outs
push
movs
std
pop
mov
repnz
pushf
test
mov
push
xchg
adc
mov
movs
push
ds
and
sub
hlt
std
idiv
fs
push
adc
loop
(bad)
mov
test
mov
(bad)
cmc
mov
aaa
test
push
test
addr16
inc
dec
adc
mov
sub
jbe
aam
mov
call
jo
push
hlt
js
(bad)
fistp
rol
cmp
in
adc
mov
xor
out
xlat
gs
outs
repnz
cmp
dec
and
push
sbb
push
ss
movs
lock
sbb
cli
mov
mov
mov
pop
lds
and
adc
jp
mov
outs
fist
mov
cld
inc
inc
in
les
out
test
jle
fcmovu
mov
pop
shl
pop
or
stos
cmc
push
jns
cdq
mov
ins
stc
lahf
push
cdq
loop
jle
stc
jecxz
xchg
pushf
mov
imul
pusha
mov
inc
sti
lahf
outs
(bad)
clc
cmp
sti
dec
pusha
dec
and
mov
mov
fcomp
(bad)
out
lods
push
cmc
or
iret
xchg
aas
sub
pushw
xchg
loop
mov
in
addr16
xchg
call
sub
inc
pop
and
pop
add
into
inc
outs
or
dec
mov
and
push
add
rcr
es
je
inc
pop
ret
(bad)
xor
lods
iret
loopne
scas
add
mov
idiv
and
mov
push
pop
popf
cmp
mov
(bad)
xchg
xchg
xchg
out
mov
inc
xor
pop
mov
es
inc
scas
nop
mov
xor
jp
dec
dec
in
inc
adc
mov
mov
(bad)
dec
pop
jp
punpcklwd
add
fcom
xor
jl
xor
xlat
scas
pop
jecxz
cdq
mov
inc
retf
outs
mov
int
ss
and
adc
scas
pusha
(bad)
cmp
in
test
out
mov
(bad)
cwde
jae
dec
xchg
pop
and
push
xor
(bad)
and
vmwrite
jmp
or
(bad)
es
xor
pop
fimul
adc
ret
test
or
cmp
sbb
adc
pop
cmps
cwde
mov
aas
cli
jo
(bad)
out
pushf
aas
fbld
pop
je
xlat
movs
push
shl
xchg
ins
sub
cmp
movs
push
lods
stos
test
push
mul
cmc
jecxz
out
push
cmps
out
scas
aaa
stos
data16
test
sbb
add
imul
jbe
outs
fidivr
adc
loope
test
aad
mov
mov
ret
cs
lds
cmp
dec
shr
repnz
mov
sub
test
imul
loope
lahf
lds
aam
fwait
mov
popf
popf
cli
push
stos
pop
lea
test
call
or
push
pop
pop
inc
cmp
push
or
dec
push
push
lahf
add
adc
nop
icebp
cwde
movs
lds
inc
out
jne
stos
out
and
(bad)
fwait
push
ret
hlt
shl
(bad)
jae
sbb
das
cmps
fld
int3
fwait
fwait
and
out
movs
repnz
gs
nop
test
and
mov
out
mov
ds
sub
in
imul
jne
test
adc
jb
push
out
pop
and
cmps
cwde
test
cmc
sub
movs
pop
call
movs
test
add
test
xchg
pop
bound
add
clc
jecxz
sub
mov
test
aad
cmc
pop
mov
sub
jno
leave
les
inc
xor
sub
push
shr
jbe
adc
cmp
dec
arpl
pop
pop
or
mov
cmp
mov
iret
adc
not
dec
in
sbb
lar
cmc
mov
sahf
mov
and
xor
pop
cmp
das
fmul
or
jmp
call
or
mov
push
cmps
add
in
popa
jno
mov
ficom
jle
hlt
sar
dec
cwde
xor
icebp
gs
adc
xchg
fld
inc
std
call
xlat
dec
adc
ror
inc
bound
(bad)
cmp
jno
in
rep
inc
imul
adc
in
ret
clc
vprotq
addr16
dec
into
fisub
pop
push
push
jge
inc
and
pop
test
push
mov
and
cmp
pushf
push
xchg
in
in
call
test
fstp
fidiv
mov
shl
push
mov
nop
fistp
cli
sub
mov
(bad)
xor
xor
xchg
cmp
xchg
test
jo
xchg
mov
pop
xor
push
aam
push
inc
inc
mov
sti
(bad)
push
add
jle
pop
mov
inc
sbb
xchg
dec
pop
cmp
pop
adc
cmps
out
stos
push
cwde
inc
hlt
dec
mov
push
sbb
shl
cld
pop
fbld
(bad)
jmp
cmps
inc
faddp
mov
les
fidiv
clc
fs
loope
(bad)
and
adc
(bad)
jg
(bad)
dec
pop
daa
jne
bnd
shl
in
jno
or
jae
sub
xor
sub
push
and
clc
and
(bad)
xchg
loop
(bad)
mov
enter
std
xor
mov
inc
addr16
push
sti
dec
add
xor
pop
sahf
mov
xchg
nop
and
sub
sub
xlat
cli
xor
in
xchg
xchg
loope
mov
xchg
xchg
fdiv
and
movs
sub
push
and
fimul
ins
sub
xchg
inc
sub
jmp
retf
cli
xchg
mov
add
mov
jne
cs
sbb
ins
test
cmp
outs
mov
sbb
dec
inc
popf
popf
dec
fadd
sti
dec
popf
inc
xchg
push
repnz
imul
or
ror
add
popf
or
popa
inc
in
jg
sbb
sbb
sti
jmp
hlt
mov
or
xchg
call
xchg
lods
jl
mov
jae
test
aam
inc
adc
or
mov
jne
popa
cmp
(bad)
(bad)
mov
cli
xor
ret
xor
adc
in
push
jp
pop
add
lods
inc
push
mov
dec
int
add
test
test
and
pushf
add
sbb
aaa
js
add
or
pusha
dec
mov
sub
aaa
xchg
push
or
idiv
arpl
loop
in
and
sbb
mov
sar
jmp
adc
dec
jecxz
pop
popa
lahf
test
enter
jnp
out
in
xchg
push
mov
jmp
cmp
pop
pop
ins
sub
xor
mov
call
in
fcomp
in
pop
fsubr
popa
pushf
pop
jge
movs
lea
lahf
rcl
or
outs
push
add
push
pop
inc
(bad)
cli
jb
dec
jp
mov
cmp
sbb
outs
ret
sar
xor
adc
call
mov
mov
xor
fs
push
(bad)
lock
adc
jnp
pushf
mov
fwait
inc
cmp
daa
adc
scas
mov
imul
add
sub
mov
xor
jmp
in
cli
push
cmp
sub
cld
imul
jl
rol
sbb
movs
dec
cmp
imul
add
sbb
add
imul
sahf
dec
mov
aam
movs
das
and
call
xchg
jo
jo
pop
and
bound
xor
dec
mov
inc
push
dec
clc
lahf
dec
push
inc
out
arpl
adc
mov
rcr
les
sub
push
push
aas
sub
dec
pop
inc
mov
pop
jl
inc
add
movs
hlt
jbe
and
push
(bad)
(bad)
mov
adc
(bad)
xor
push
inc
in
sbb
stos
xor
dec
out
pop
sub
cmps
xor
rcl
or
xchg
outs
dec
(bad)
aad
push
jmp
add
add
sbb
lods
mov
push
clc
pushf
jnp
stos
jge
adc
and
mov
retf
and
mov
mov
mov
addr16
call
sbb
push
daa
push
(bad)
mov
ja
xchg
xor
cli
bound
pop
push
jge
ret
movs
xchg
test
dec
jl
xchg
shl
bound
dec
mov
cmp
stos
cmp
mov
push
into
pusha
push
iret
lea
in
and
sub
xchg
sahf
call
push
pusha
out
aad
ja
stos
shr
cmc
jmp
cmp
sbb
mov
scas
xor
shl
cld
pop
loop
add
jg
lods
rcr
sub
xchg
stos
xor
test
outs
xchg
or
(bad)
mov
and
js
and
xor
dec
xchg
sbb
pop
xor
cmps
cmp
xor
out
jnp
addr16
hlt
mov
aam
pop
ror
data16
mov
push
dec
(bad)
sub
lods
lock
sub
loopne
xchg
int
ins
rcl
mov
jecxz
test
pop
movs
fs
cmp
push
or
dec
fucom
in
ins
or
xor
xchg
jge
clc
ror
ja
sub
push
xor
jbe
cs
pop
pop
mov
cmp
push
xor
pusha
outs
pushf
xlat
xchg
popa
out
(bad)
mov
je
sbb
mov
int
(bad)
lahf
xchg
xchg
mov
or
loopne
jmp
jmp
mov
in
adc
and
movs
(bad)
jmp
adc
push
add
daa
mov
adc
mov
test
cld
cmp
pushf
rcl
cld
mov
lea
lahf
push
xchg
mov
pop
shr
ja
mov
jb
ds
pop
clc
and
dec
jge
inc
push
cwde
add
lea
inc
les
mov
in
int3
fwait
jg
mov
fisttp
mov
imul
push
or
or
sbb
ret
push
outs
and
mov
sbb
mov
and
mov
out
inc
push
pop
mov
iret
pop
idiv
mov
sbb
push
pop
fld
retf
pop
fadd
adc
daa
xchg
(bad)
sub
xchg
out
mov
outs
add
jno
jae
xlat
inc
sbb
sbb
jo
inc
and
sbb
pop
xchg
enter
sub
jle
push
shl
adc
xchg
ins
int
jle
js
inc
(bad)
fidiv
sub
sbb
adc
sub
(bad)
jge
or
pop
or
sbb
inc
fmul
je
sti
fld
mov
jae
mov
mov
popf
sti
xchg
imul
xchg
test
outs
cs
mov
mov
sub
mov
fimul
and
stos
dec
inc
arpl
ret
or
call
xor
adc
es
sahf
sar
aas
push
sti
cwde
int
and
std
(bad)
loopne
dec
out
ins
out
call
push
sar
push
ficom
inc
call
fs
test
mov
aam
cli
xor
cdq
cs
push
pop
lock
cld
inc
adc
fld
cmp
add
adc
xchg
shl
jmp
cmp
jmp
pusha
pop
inc
jae
mov
sbb
cmc
fstp
push
loop
adc
pop
pop
icebp
pop
xor
fadd
mov
scas
add
(bad)
out
(bad)
pop
iret
sbb
or
and
movs
jmp
loope
pop
xchg
add
xor
sbb
icebp
push
stos
div
adc
(bad)
mov
jo
dec
add
sbb
mov
sub
repz
dec
push
inc
rcr
ss
mov
jne
imul
ins
jmp
xchg
jbe
sub
push
add
xchg
xchg
xor
push
or
mov
mov
jecxz
lock
pop
pusha
test
add
jp
movs
int
cmc
bound
jb
aaa
(bad)
adc
xlat
ret
in
enter
cmp
sub
adc
cmp
js
loop
cmc
mov
or
add
sub
adc
inc
push
leave
aam
loop
mov
cmp
fmul
cmp
es
loopne
jbe
pop
jno
ds
ret
xor
mov
add
jl
jb
call
daa
inc
and
and
jbe
setle
inc
jmp
jne
push
or
test
scas
loopne
mov
aaa
out
cmps
xlat
mov
inc
and
std
es
pop
inc
arpl
cli
inc
int
mov
mov
fsubr
sti
hlt
or
xor
jp
or
icebp
push
or
rcr
and
aaa
sti
shl
push
mov
icebp
push
jmp
push
jbe
idiv
(bad)
addr16
inc
mov
pop
inc
in
xchg
cmp
dec
inc
fnstenv
inc
mov
jae
xlat
and
sbb
js
pop
sub
cmp
cmp
das
or
xchg
(bad)
outs
push
inc
fcomp
pushf
mov
and
idiv
dec
mov
pusha
add
cld
outs
out
cmp
out
mov
(bad)
lea
stos
xor
jmp
cmp
aas
jle
cmp
push
fnstenv
dec
iret
pop
mov
fdiv
inc
loop
adc
xchg
je
and
push
dec
mov
(bad)
jmp
mov
mov
ins
xchg
mov
(bad)
mov
jle
jg
cdq
retf
shr
push
daa
fwait
sub
jne
jmp
dec
jp
inc
(bad)
test
sbb
lds
call
cli
inc
xor
std
mov
xor
bound
ins
cwde
leave
cmp
mov
xchg
pop
test
jne
mov
addr16
aam
imul
inc
hlt
(bad)
nop
neg
and
inc
xchg
or
repz
(bad)
xor
int
jmp
pusha
pop
lods
push
sub
xor
mov
mov
pop
push
push
out
push
aam
les
and
sahf
ja
test
jbe
cmp
jge
addr16
sahf
stos
in
xchg
push
sbb
mov
cld
cwde
aaa
retf
xchg
sbb
loopne
stos
pop
(bad)
aad
pop
jmp
out
das
xlat
icebp
ins
pop
mov
je
test
ss
mov
sub
dec
pop
shl
xor
xchg
psubw
sbb
xor
mov
pop
jmp
push
pusha
mov
ja
sub
push
jne
mov
mov
mov
out
cs
jle
dec
pop
test
nop
fs
xchg
xchg
mul
add
or
xor
loop
out
dec
xor
fst
popa
data16
sub
mov
cmps
push
in
add
cmp
jbe
mov
xor
jmp
rol
mov
(bad)
cli
cmc
ret
outs
out
scas
jcxz
xchg
or
bswap
fwait
jnp
or
and
add
jl
ins
leave
mov
adc
xchg
pop
cdq
imul
xor
gs
cwde
loope
mov
les
fwait
xchg
dec
or
(bad)
js
jl
pop
retf
(bad)
icebp
das
inc
inc
xor
cdq
lea
outs
mov
test
jne
leave
add
add
dec
sbb
mov
cmp
jmp
mov
sub
add
sub
inc
(bad)
and
pop
cld
cmp
push
dec
push
or
or
pop
mov
and
dec
mov
test
(bad)
test
jp
xchg
cmp
popf
adc
jo
jle
xchg
or
push
outs
inc
sub
adc
sbb
mov
push
cwde
mov
add
cmps
adc
loop
jne
(bad)
movs
pop
jnp
jo
mov
add
mov
mov
xor
in
fcomp
xor
jle
lods
(bad)
fxch
mov
std
loope
(bad)
dec
scas
jge
out
mov
mov
dec
test
xlat
xchg
push
in
jno
inc
xlat
cmp
mov
dec
or
inc
sbb
xor
pop
loopne
xlat
jl
mov
aaa
clc
(bad)
sbb
fcomp
sti
shl
adc
jno
sub
int
int
xchg
test
(bad)
fmul
jle
mov
pop
retf
mov
data16
jge
fcomp
mov
jnp
push
mov
mov
push
sbb
sti
push
imul
fnstenv
repnz
fwait
ret
push
pop
and
jbe
inc
xor
pop
inc
jbe
cli
sub
iret
dec
mov
jp
scas
push
fnstcw
cli
sbb
stc
fsub
rcr
imul
adc
pop
test
push
mov
in
in
add
jnp
cdq
fsubr
sar
mov
mov
sub
xor
mov
in
sub
stc
add
test
lock
fdivr
add
cmp
cmps
addr16
inc
leave
or
sbb
cmp
push
xchg
fstp
cdq
inc
imul
(bad)
pop
xchg
inc
xor
fwait
adc
xlat
rol
dec
test
out
(bad)
std
inc
sub
retf
inc
mov
in
mov
popa
es
(bad)
push
mov
sbb
or
pop
jmp
cs
lods
mov
test
out
int
cwde
sar
iret
mov
sbb
mov
out
jbe
cmps
(bad)
xor
xlat
sub
and
sbb
int3
lahf
data16
retf
not
dec
ds
mov
popa
in
cli
mov
jno
pop
stos
cld
repz
test
inc
cmps
sub
leave
dec
test
mov
push
pop
inc
ss
sub
imul
sbb
shl
inc
loopne
inc
js
sub
fisttp
idiv
call
mov
pop
jb
mov
add
dec
imul
inc
out
loope
cld
adc
mov
shr
jp
inc
call
inc
jmp
addr16
xchg
xor
inc
cmp
adc
sub
inc
ss
es
aas
adc
icebp
imul
ja
jge
adc
outs
loopne
outs
int
sbb
retf
stc
in
jmp
inc
rcr
push
hlt
jnp
in
fimul
mov
dec
pushf
fild
or
retf
js
gs
jnp
cwde
mov
jle
pop
jo
jmp
add
les
shr
inc
lea
mov
and
mov
adc
mov
ret
jle
push
int
scas
mov
jne
jp
mov
sbb
or
xchg
sar
push
sub
push
je
cmps
mov
div
out
popa
push
mov
pop
xchg
mov
test
jl
and
adc
clc
jl
data16
movs
jne
push
scas
add
mov
imul
in
jns
test
sbb
push
sub
out
mov
lahf
cmp
jecxz
scas
mov
stos
jb
mov
mov
in
mov
add
sbb
cmp
mov
adc
add
lods
mov
lods
adc
scas
scas
(bad)
sub
pop
fistp
popa
jno
jmp
jne
and
xor
jl
xor
inc
mov
mov
dec
call
sti
inc
pushf
mov
mov
popf
out
aaa
jno
xchg
repz
pop
mov
loope
jns
pop
and
popa
je
retf
call
inc
cmp
jg
dec
(bad)
cmp
(bad)
fisubr
xchg
add
sbb
ror
mov
and
pop
hlt
jb
jnp
pop
data16
cmps
add
xor
es
arpl
mov
pushf
sbb
jl
fwait
je
lahf
popf
pop
xchg
neg
dec
outs
jmp
push
bound
call
inc
pop
add
xchg
imul
fst
adc
cmp
lock
out
mov
repnz
outs
jle
cmps
fmul
mov
jbe
add
xor
test
cmp
xchg
mov
adc
cmc
dec
and
mov
shl
inc
in
int
inc
mov
mov
cmp
jg
std
cwde
and
repnz
(bad)
cmp
pop
jns
and
shl
in
push
push
ins
cmp
arpl
jb
inc
mov
xor
je
or
pop
outs
mov
jmp
in
mov
ins
outs
sub
sub
or
push
jge
add
fdivr
outs
out
loopne
sub
js
xor
xor
sbb
jmp
fadd
std
in
lods
or
shl
add
cmp
mov
jae
pushf
push
pop
xor
pop
sub
mov
and
pop
mov
bswap
inc
ror
mov
das
iret
jp
and
call
mov
(bad)
ss
shr
lods
les
mov
(bad)
xchg
inc
adc
mov
jmp
cmc
or
dec
push
jnp
xchg
inc
call
into
mov
cmp
mov
stc
shl
mov
mov
xor
sub
sti
push
ins
or
cmp
sub
jns
jno
(bad)
stc
adc
mov
sub
jmp
sub
fadd
ss
retf
and
cmps
mov
aam
adc
bound
mov
scas
cmp
add
sbb
mov
movs
daa
adc
jno
cmc
pop
loopne
in
addr16
inc
movs
mov
jge
or
push
push
jecxz
ret
sub
int
and
push
inc
push
test
inc
mov
das
push
mov
inc
jl
jno
arpl
jl
lock
add
and
retf
fiadd
inc
lahf
and
nop
cmps
jge
or
fxch
(bad)
loopne
aas
xchg
adc
es
icebp
xor
pop
mov
in
(bad)
fstp
enter
and
call
shl
mov
imul
add
pop
ins
fidivr
into
mov
mov
lods
aam
cmps
ffreep
dec
dec
pop
mov
addr16
jl
jle
in
imul
cmp
ins
popf
or
dec
sub
outs
aam
call
mov
jae
out
aaa
dec
lods
aam
mov
jbe
cdq
je
cdq
inc
cvtps2pd
and
inc
(bad)
shr
jns
inc
mov
add
in
in
cmp
inc
inc
(bad)
sti
mov
jecxz
lods
mov
fcomp
repz
fnstcw
jmp
lahf
sti
inc
or
dec
enter
xchg
mov
nop
aas
jne
fisubr
add
or
mov
add
xchg
push
aad
and
cmp
sbb
pop
js
or
push
xor
jns
rol
ret
sub
mul
inc
arpl
mov
pop
(bad)
sti
mov
ret
sub
idiv
sahf
aad
mov
int3
xchg
jmp
cmps
pop
add
daa
loopne
adc
jns
sbb
stos
mov
push
ja
jle
inc
vpcmpeqb
dec
cmp
cmp
inc
imul
test
mov
rcr
mov
(bad)
out
fcomi
shr
jno
jne
push
xor
push
fs
jnp
(bad)
movs
xchg
je
fwait
loope
outs
inc
pop
pop
outs
aam
jl
mov
adc
mov
mov
adc
mov
repnz
adc
fmul
repz
inc
mov
cld
inc
sbb
fisttp
vmovapd
pop
sahf
mov
out
cmovne
in
rcl
dec
nop
bound
dec
xor
out
adc
jmp
stc
mov
push
stos
retf
(bad)
and
mov
jns
ret
adc
jo
inc
inc
stos
loopne
pop
hlt
jmp
mov
push
cmp
push
xor
adc
sbb
(bad)
or
pop
test
sub
fisubr
mov
xor
inc
sbb
mov
shl
cwde
sar
push
jl
jb
pusha
push
push
xchg
mov
leave
call
pand
cmps
iretw
cdq
jae
mov
dec
mov
mov
xor
or
les
add
dec
add
or
add
mov
inc
in
sub
sub
jne
(bad)
pushf
lock
neg
inc
stos
pop
addr16
dec
ror
mov
add
imul
fst
mov
retf
test
jmp
outs
rcr
add
xor
lods
mov
call
mov
fs
inc
push
ds
adc
add
sub
pusha
xchg
scas
dec
lds
aad
mov
jmp
and
jg
nop
retf
enter
pop
jae
call
rcl
bound
fistp
cld
dec
mov
adc
add
jae
add
sbb
ret
adc
or
fstp
jg
or
sbb
jbe
test
mov
inc
cwde
jmp
cld
jmp
add
arpl
mov
jg
xor
xlat
test
mov
inc
and
inc
sbb
dec
mov
mov
into
in
xchg
mov
push
jo
(bad)
fidivr
add
movlps
adc
push
fxch
mov
stc
movs
xchg
jge
sbb
inc
cmp
inc
(bad)
cmp
adc
mov
dec
mov
pop
mov
and
mov
pop
cmp
test
or
mov
stos
gs
call
sub
jnp
xchg
add
mov
out
fidiv
and
ss
push
jo
mov
fstp
and
inc
sub
(bad)
pop
cmp
pop
lahf
cmp
dec
mov
pop
mov
jmp
push
cmp
push
add
cmp
popa
mov
xor
jmp
mov
adc
push
cmp
sub
fwait
stc
ficomp
cmp
or
inc
ret
jno
xchg
xlat
xchg
push
inc
or
cmp
mov
lods
pop
movs
jmp
aam
and
into
sbb
sti
mov
pop
test
bound
mov
cmps
xor
(bad)
loop
outs
push
mov
adc
jmp
add
nop
push
mov
lods
cmp
adc
xor
pop
cmps
mov
xor
ds
sbb
push
adc
or
mov
sub
fs
imul
in
loope
das
out
fisubr
dec
outs
cmps
mov
dec
pop
fstp
push
lds
loop
rol
dec
mov
(bad)
mov
xchg
mov
xor
pop
xor
jmp
jmp
clc
jnp
adc
add
nop
dec
inc
mov
cmc
adc
retf
mov
inc
dec
std
stc
lods
push
cmc
inc
loope
sub
adc
sbb
and
mov
sub
mov
mov
fdiv
lock
cli
lahf
dec
fst
retf
out
sbb
rol
and
push
push
cmp
mov
pop
adc
test
repz
cs
xor
xchg
leave
popa
into
inc
xchg
addr16
test
pmulhuw
adc
lock
lods
sub
dec
pop
xchg
push
ficomp
mov
jmp
call
sub
mov
or
adc
loopne
ret
push
(bad)
retf
jle
bound
fimul
jmp
dec
dec
add
into
(bad)
mov
icebp
mov
iret
in
and
movs
jl
add
sahf
ret
dec
push
or
in
or
pop
adc
xlat
iret
push
mov
aas
fadd
in
xchg
in
shr
and
iret
pop
and
into
or
jb
sub
mov
aam
adc
or
int3
mov
test
mov
and
mov
xchg
push
movs
jno
xchg
add
mov
ins
pusha
fmul
int
test
ins
sub
(bad)
fwait
and
loopne
(bad)
ja
aad
retf
retf
cdq
fucomp
mov
and
jle
jg
test
add
icebp
mov
adc
cs
sti
add
dec
push
in
cdq
xor
dec
push
mov
call
addr16
push
enter
push
ret
xchg
jg
jns
aas
dec
sub
xor
movs
adc
adc
dec
stc
xor
cmp
in
mov
hlt
sub
je
nop
add
sbb
mov
js
popa
ins
xor
sub
enter
(bad)
ins
xchg
bound
stos
pop
push
pop
ds
and
jecxz
push
fcmovu
xchg
push
mul
sbb
mov
into
mov
push
xchg
xor
jge
js
inc
mov
sar
fmul
cld
sti
enter
cmp
ins
outs
gs
mov
sbb
push
push
xor
ins
xor
jg
test
imul
imul
push
adc
icebp
jo
repz
(bad)
push
inc
push
ss
popa
(bad)
adc
or
add
mov
pop
push
push
lea
out
jns
pop
movs
out
adc
xor
retf
adc
adc
jns
in
(bad)
jae
iret
inc
cmp
aaa
in
push
stc
cli
out
inc
nop
sbb
aas
loop
lods
mov
iret
sbb
fsubrp
lods
mov
and
xchg
fdiv
idiv
movs
into
xor
xchg
cmp
adc
mov
outs
or
or
add
and
and
xor
and
idiv
aas
cmc
or
sbb
add
mov
lock
inc
movs
inc
ror
and
fwait
iret
mov
jge
and
cmp
(bad)
xor
bound
mov
int3
or
cmps
mov
push
or
imul
int3
call
and
ss
in
cld
mov
ret
dec
inc
mov
xchg
cmp
xor
repz
fild
mov
pop
cwde
int
xchg
(bad)
jbe
pop
stos
sub
mov
cmp
add
daa
push
outs
cmps
lock
mov
add
pop
and
scas
jo
mov
adc
pop
sbb
repnz
jg
fdivr
pop
sbb
jae
adc
adc
and
or
dec
push
mov
std
push
pop
jle
add
stc
stos
xchg
add
test
mov
in
mov
cmp
cmp
add
lods
push
inc
xchg
inc
lahf
stos
lods
mov
and
dec
aad
into
fdivr
nop
and
pop
mov
jbe
mov
adc
mov
cmps
(bad)
and
pop
aad
out
xchg
imul
enter
pop
iret
or
jns
lds
nop
hlt
in
jne
aas
mov
popa
neg
inc
arpl
or
out
cmp
pop
test
lds
jge
pop
xchg
clc
(bad)
call
stos
xor
sbb
clc
loop
dec
or
mov
dec
ret
fstp
pusha
xor
pop
lahf
jns
inc
adc
jmp
adc
mov
push
xchg
push
adc
adc
mov
mov
arpl
jno
jl
lock
mov
test
and
lock
mov
ficomp
pusha
out
adc
test
in
push
psubb
add
(bad)
aam
jg
xor
popa
aaa
push
ficomp
mov
xchg
and
sub
icebp
pushf
push
cmp
ret
xor
dec
or
add
popa
cmp
fs
(bad)
scas
pop
mov
and
ret
jl
sbb
push
in
pop
jle
jl
or
jle
xchg
jmp
pop
xchg
jle
adc
and
bound
jecxz
push
rol
xor
cs
ret
cmp
fnstsw
cmp
xor
mov
add
add
pop
dec
cmc
xchg
lods
daa
fnstsw
sbb
cwde
or
xor
or
xchg
mul
add
ins
(bad)
jnp
xor
mov
sbb
mov
pushf
dec
nop
fsub
popa
call
(bad)
out
out
scas
inc
call
je
out
pop
mov
mov
cmp
retf
fnsave
xor
adc
mov
dec
ja
cmp
mov
test
pop
add
cmp
and
sbb
shl
inc
jbe
pop
movs
in
(bad)
adc
test
ficom
outs
xchg
rcl
adc
dec
add
push
mov
cmp
outs
and
and
ret
or
cli
sbb
pushf
imul
xchg
cli
cs
xlat
sbb
lds
cmp
loopne
jl
shl
inc
in
dec
je
mov
jmp
sbb
jns
xchg
(bad)
hlt
outs
cmps
jne
xor
push
and
movs
or
jae
repnz
retf
pusha
xor
sub
push
jg
mov
(bad)
cdq
dec
or
mov
mov
mov
pop
fsub
add
push
movs
sub
adc
iret
lea
aad
in
neg
fistp
fidivr
add
sub
or
dec
vmptrld
mov
in
add
arpl
jbe
mov
lea
add
mov
dec
jmp
cli
int
mul
jne
adc
xlat
clc
test
jae
test
or
pop
call
push
push
lods
or
retf
cmp
movlps
cmc
rcr
mov
push
dec
jl
jp
mov
in
movs
mov
mov
adc
pop
iret
pop
xchg
and
dec
mov
stc
inc
cwde
(bad)
icebp
addr16
stos
bnd
ret
mov
lock
xchg
out
cmp
jl
adc
out
mov
push
fmul
sti
xchg
sub
sar
jnp
and
dec
fbld
push
mov
mov
or
mov
fld
adc
mov
aad
nop
mov
mov
lahf
or
inc
inc
mov
pop
nop
dec
in
add
lds
jle
sbb
fwait
sub
mov
(bad)
mov
cmp
gs
in
test
retf
fild
outs
js
push
dec
dec
(bad)
mov
mov
mov
xchg
adc
lds
xlat
sub
cld
and
push
mov
std
adc
mov
jecxz
cwde
popf
xor
or
push
xor
ret
mov
add
xchg
mov
push
jb
test
xchg
or
inc
ds
push
fs
and
inc
xlat
stos
shl
xchg
and
sbb
mov
and
pushf
pop
loop
cmp
sbb
xchg
xor
ins
mov
dec
jo
cli
add
retf
cdq
mov
fdivrp
mov
retf
cmp
call
neg
das
xlat
sub
inc
fwait
add
arpl
dec
push
push
and
ins
ret
xchg
nop
cmp
jp
push
lds
shl
data16
je
push
xchg
fsub
movs
adc
adc
jmp
push
or
sbb
dec
fsubr
xor
les
or
mov
inc
mov
clc
fst
jmp
mov
jecxz
xchg
cmc
or
and
jge
jb
mov
std
sbb
xchg
(bad)
stc
jge
sbb
jg
sub
xor
push
mov
in
lahf
push
inc
int3
das
mov
cdq
dec
out
out
cmp
inc
dec
das
call
pop
dec
jbe
pop
call
sbb
inc
inc
mov
xchg
cmp
mov
ins
lds
es
clc
aam
cmp
ret
xor
out
(bad)
adc
popf
clc
in
psadbw
ins
mov
xchg
shr
int3
add
inc
cwde
ins
outs
loop
jbe
mov
inc
jne
fdivr
mov
mov
sub
cs
into
cli
call
fcom
xchg
sub
push
push
aas
std
or
add
xchg
mov
cdq
cmps
jno
fimul
mov
push
scas
pushf
push
imul
pop
jmp
pop
xchg
dec
ins
in
dec
sbb
out
out
or
inc
mov
repz
mov
jmp
cdq
cmc
scas
and
loopne
dec
jmp
stc
mov
ins
inc
pop
push
cld
inc
sub
cmp
pop
sub
dec
push
jge
frstor
xchg
jne
mov
lock
push
cmps
dec
mov
inc
test
adc
retf
gs
mov
int3
in
xchg
loope
repz
mov
out
dec
(bad)
xchg
popf
pop
mov
inc
test
add
inc
add
pop
mov
sub
sbb
cmp
scas
and
sub
jno
dec
xlat
std
ss
mov
cmp
cmp
cmc
and
daa
mov
jnp
call
bound
fwait
sar
sbb
lea
stc
fmul
mov
shl
loope
movs
cmp
mov
dec
dec
in
mov
sub
loopne
sbb
clc
test
add
movs
bound
imul
add
sti
mov
ds
and
push
nop
xlat
cmps
call
stos
cmp
mov
cmp
add
in
lock
pop
sbb
fwait
movs
test
and
into
dec
jbe
daa
bnd
cmp
pop
xor
out
add
out
iret
stos
cs
dec
mov
test
xlat
sbb
je
sub
inc
and
movs
add
lea
push
sar
in
mov
jmp
push
xchg
cli
cmps
gs
stos
mov
dec
push
xchg
or
adc
add
pop
fimul
aam
pop
xchg
jbe
push
jns
add
xchg
add
out
hlt
mov
lods
cmps
xor
fisttp
and
inc
fldcw
jb
xor
and
jmp
fldz
or
hlt
sub
or
call
push
jmp
(bad)
aad
mov
lea
push
jp
repz
pusha
sub
and
mov
in
xchg
xor
call
in
out
sbb
dec
(bad)
repnz
gs
(bad)
jmp
imul
leave
cmc
inc
test
addr16
adc
outs
fwait
gs
or
push
mov
fldcw
push
cmc
lahf
jl
fld
cmp
pop
(bad)
xchg
arpl
cmp
aad
xlat
ret
out
jge
jb
clc
xchg
sbb
out
(bad)
jb
nop
les
retf
dec
(bad)
nop
adc
rcl
jne
push
rol
push
in
aas
pop
push
bound
fisttp
cmp
movs
xor
das
imul
mov
(bad)
addr16
mov
jl
(bad)
cli
cmp
arpl
aas
mov
pop
ss
inc
popa
adc
add
mov
and
mov
movs
or
std
xor
xor
ja
push
test
(bad)
stos
or
aas
shr
adc
mov
and
adc
or
loopne
push
jmp
movs
and
(bad)
mov
mul
pop
add
jb
enter
push
jge
xchg
mov
fdivr
movs
push
ror
xor
cmp
add
pop
ja
fsubr
ins
add
pusha
popa
sbb
xchg
mov
sub
push
cmp
movs
cwde
call
stc
jecxz
mov
cmc
int3
xchg
adc
or
add
sar
sub
sub
cld
xchg
not
cmp
cmps
cmc
shl
mov
dec
xchg
xor
aad
and
jg
sub
pop
cmp
(bad)
mov
gs
lahf
jnp
sbb
adc
push
jmp
mov
cli
int
jl
adc
lods
xor
mov
shl
pop
(bad)
push
sbb
pop
mov
test
and
jns
hlt
xor
dec
mov
call
ds
adc
(bad)
pushf
das
shr
ds
xchg
imul
ins
js
inc
push
retf
popa
and
stos
popf
stc
push
test
aaa
icebp
in
sub
nop
mov
inc
fld
in
jle
inc
pop
push
dec
rol
and
movs
scas
add
inc
mov
jmp
rcr
movs
sti
jno
jge
shl
adc
imul
test
pop
outs
fyl2xp1
cmps
mov
adc
mov
sub
sbb
jp
cmp
js
jne
sar
cmps
sbb
sbb
mov
mov
dec
push
mov
and
or
adc
push
xor
inc
mov
icebp
and
pop
adc
shl
arpl
jecxz
cmps
call
nop
aad
and
cmc
fnstsw
cmp
push
push
(bad)
push
fld
pop
adc
sub
frstor
shr
pop
in
xchg
push
fucomp
sub
sub
cdq
call
add
test
cld
ins
shl
clc
cwde
jp
xchg
mov
lahf
push
jbe
mov
aam
jl
int
jg
jge
push
fild
cmp
jmp
push
sub
and
das
and
xor
sub
ret
sbb
and
imul
and
(bad)
dec
mov
rol
adc
mov
adc
xchg
ss
sub
out
popf
ret
pop
fisttp
xchg
mov
xor
mov
or
xor
mov
shl
or
jns
movs
add
leave
xlat
mov
fstp
dec
fcomp
and
push
arpl
push
into
cmp
or
mov
sbb
fs
or
(bad)
ficomp
es
jmp
dec
sub
test
popf
adc
imul
imul
test
push
neg
pop
bound
lds
push
push
(bad)
fld
pop
xchg
and
cmps
dec
nop
cmp
lock
sti
xchg
hlt
in
test
sub
test
outs
aas
popf
ja
xor
mov
jo
or
shr
shr
jbe
push
cmp
bound
aad
pop
dec
mov
jbe
jb
data16
stos
inc
inc
cld
and
popf
pop
push
mov
ss
xchg
or
push
sub
jge
out
dec
stos
cmp
mov
aad
mov
daa
pop
cmp
dec
xchg
mov
imul
xchg
cld
cmps
push
adc
dec
jp
sahf
pop
xlat
xor
out
jae
movs
mov
cmp
scas
add
movs
js
shl
sti
sbb
in
cld
jmp
pop
xor
pop
mov
test
sbb
das
jb
(bad)
xchg
icebp
xor
imul
xor
out
mov
cld
mov
cdq
push
jns
int3
arpl
pop
ror
adc
shl
mul
add
jo
cmp
jns
shr
pop
loop
jl
jae
out
lods
xor
lds
cld
out
cmp
xchg
xchg
outs
mov
sbb
repnz
xchg
mov
mov
mov
in
inc
cmp
adc
push
mov
sub
aaa
jmp
mov
and
mov
xchg
pop
dec
fwait
js
out
inc
xor
mov
xor
or
pop
mov
iret
ret
jno
cmp
dec
jno
cdq
xlat
mov
and
dec
cmp
test
test
cs
sbb
mul
jmp
xor
repz
pop
and
pop
jmp
repnz
and
call
ds
aad
xchg
dec
adc
push
jne
sub
gs
adc
inc
jp
cmp
test
adc
inc
bnd
rcl
fdivr
idiv
jno
sbb
mov
in
mov
jge
push
adc
xchg
cs
mov
out
mov
mov
sub
in
pop
in
mov
addr16
mov
dec
bound
loop
sub
sub
stc
dec
mov
fwait
mov
mov
jbe
sbb
cmps
pop
imul
cmp
jo
add
mov
iret
inc
jmp
and
or
push
jno
sbb
mov
fcom
pop
cmovno
jmp
mov
push
xchg
hlt
(bad)
xor
(bad)
ins
mov
xchg
out
jns
outs
addps
arpl
je
xlat
mov
dec
test
or
jno
inc
or
jge
cs
into
mov
mov
ror
lds
mov
enter
and
jle
jbe
mov
aad
pop
push
imul
mov
popf
test
sbb
shr
adc
pop
mov
or
(bad)
mov
jno
push
imul
xchg
adc
movs
sbb
jae
cli
pop
aaa
sub
daa
cs
adc
loop
(bad)
int3
outs
movs
jge
call
push
mov
jne
frstor
mov
scas
cld
or
enter
gs
adc
lea
and
outs
jnp
sbb
cmp
xchg
sti
stos
fs
add
sahf
(bad)
outs
shl
inc
xchg
adc
xor
inc
push
dec
and
push
push
outs
mul
ds
ss
and
inc
jne
stc
inc
cld
dec
sbb
inc
daa
mov
cld
loope
adc
xor
or
sbb
sbb
ror
add
adc
push
dec
int
mov
ja
push
mov
add
dec
mov
dec
(bad)
sbb
push
mov
clc
mov
sub
xchg
push
mov
sub
sbb
add
push
jmp
mov
xchg
jb
pop
xchg
mov
adc
in
outs
and
pop
push
stc
cmp
and
sbb
sbb
jnp
push
gs
rcl
mov
sahf
sub
mov
imul
mov
std
push
and
les
pop
dec
sub
dec
mov
ds
mov
pop
add
add
(bad)
lock
sub
pushf
jne
sub
push
mov
sahf
xchg
add
sbb
mov
and
popa
inc
and
push
xchg
je
jnp
mov
test
sar
mov
dec
sub
movs
addr16
sbb
xor
fild
or
cmps
add
lock
(bad)
(bad)
cmp
mov
dec
xchg
test
sahf
popa
daa
xchg
sbb
mov
movs
aaa
jg
jae
push
sbb
lods
and
sti
loop
adc
add
xchg
fsubr
jmp
inc
jno
adc
ret
cmps
aaa
mov
test
daa
pop
call
(bad)
mov
push
mov
jmp
aad
mov
push
sbb
mov
cmps
ror
mov
movs
int3
rol
jg
mov
add
xlat
mov
cld
ret
push
imul
in
mov
fidivr
push
and
loop
dec
jne
(bad)
sbb
retf
scas
mov
cmp
adc
rol
hlt
xchg
stos
inc
mov
pop
jmp
adc
mov
and
nop
add
sti
out
(bad)
mov
dec
sar
push
frstor
push
std
(bad)
(bad)
push
imul
cmp
inc
lds
hlt
repz
aas
(bad)
loope
cmc
(bad)
lock
les
clc
mov
xor
pop
cmp
cmps
jp
imul
inc
adc
loop
int
std
call
or
(bad)
dec
sbb
les
(bad)
mov
sub
or
push
out
cmps
sar
rcl
dec
cmp
movs
and
dec
ret
imul
or
pop
cmps
push
sbb
cmc
div
loop
shr
or
xchg
or
sbb
inc
xchg
cdq
or
pushf
aam
mov
push
jmp
loope
addr16
or
mov
sub
imul
std
dec
pop
or
sub
leave
loopne
test
test
push
dec
mov
test
xchg
sub
sub
pop
es
push
leave
ror
enter
pop
or
pop
test
mov
pop
xchg
outs
or
ret
xchg
aas
inc
jge
fs
pushf
dec
div
out
push
cli
cmp
push
mov
out
pop
ret
push
xchg
push
dec
scas
inc
inc
or
push
(bad)
retf
sbb
mov
enter
sahf
fld
rcr
fsub
or
mov
sar
sbb
inc
mov
sahf
adc
xchg
iret
inc
fcom
xchg
xchg
loop
loopne
cmc
add
sub
jg
xor
sbb
dec
jb
xchg
(bad)
mov
and
fldenv
(bad)
rcl
ins
or
fild
arpl
xor
xchg
inc
mov
pop
ror
mov
test
jl
mov
or
dec
inc
adc
mov
ret
mov
(bad)
idiv
fisttp
push
dec
push
dec
loope
dec
jg
(bad)
adc
les
ret
(bad)
add
in
inc
mov
ror
fidivr
jno
or
fild
mov
mov
cmp
push
scas
jle
loop
cmps
push
(bad)
and
mov
loope
xlat
sub
or
pop
push
mov
shl
pop
or
sub
mov
mov
pushf
sub
mov
js
pop
aam
push
scas
or
mov
out
inc
hlt
mov
jmp
cmp
jns
lods
loop
test
push
mov
mov
mov
ror
add
out
sbb
sub
repz
adc
mov
stos
es
mov
xor
dec
(bad)
adc
sbb
pop
std
push
dec
sub
cdq
adc
jle
xor
aas
dec
daa
lock
daa
repz
jnp
loop
in
push
jl
cmp
cld
mov
or
repz
adc
sub
jmp
jg
dec
xor
xor
sub
gs
popa
iret
test
xchg
nop
pushf
dec
xchg
xchg
mov
nop
xor
pop
inc
shr
(bad)
pop
fcomp
movs
xor
sar
cmp
pop
cmp
xchg
adc
adc
xchg
inc
push
cmc
or
mov
shl
push
pop
add
out
sar
arpl
icebp
mov
imul
call
mov
rol
rol
out
out
pushf
mov
js
and
add
xor
pop
or
mov
int3
xor
or
jp
pushf
or
js
xchg
gs
in
pop
ins
ss
jp
lea
lock
xor
adc
ins
adc
ror
jns
dec
ins
idiv
jmp
or
test
pop
popf
push
jno
mov
pop
into
sahf
cli
jle
jecxz
cdq
jb
pop
and
and
jl
ins
pushf
jo
xchg
mov
mov
mov
div
retf
ja
lods
lock
retf
cmp
xor
test
call
xor
xor
dec
jmp
mov
jne
mov
lahf
ja
dec
in
sbb
scas
pop
(bad)
in
outs
mov
push
std
xor
add
call
xchg
(bad)
shl
nop
out
pop
mov
jmp
in
sub
popf
cmp
push
fwait
test
cdq
aam
pop
push
fwait
inc
ror
pushf
int3
ins
mov
xchg
mov
cmp
pop
fucom
sub
jmp
stos
and
scas
ret
and
sbb
mov
out
aad
sahf
pop
jg
xor
test
cmc
push
stc
sub
mov
or
jmp
fidiv
cmp
fdiv
in
mov
or
add
inc
adc
je
popf
das
add
sahf
int3
clc
lahf
setge
in
in
add
repz
pop
xor
mov
jbe
std
jle
hlt
and
call
loop
adc
adc
sub
push
out
xchg
push
add
call
mov
lods
jmp
popf
fmul
ds
sub
not
push
shl
pop
out
mov
out
and
jae
out
aaa
bound
out
push
test
repnz
push
cs
xchg
mov
or
ds
retf
push
mov
xchg
xchg
shr
cs
rol
or
pop
inc
fdivr
xchg
dec
cwde
ins
and
add
xchg
icebp
push
inc
jns
ror
push
add
das
stos
retf
xor
lock
mov
xor
push
sub
hlt
not
cli
adc
push
out
add
mov
inc
(bad)
xchg
sahf
rcl
movs
ins
xor
push
inc
and
cdq
rcl
shl
inc
sbb
mov
pop
pushf
rcl
or
out
je
or
and
cmc
add
adc
xchg
push
pusha
jmp
sub
and
or
jns
out
push
jb
(bad)
je
adc
popf
xchg
mov
adc
mov
inc
mov
cmps
daa
clc
out
mov
ds
push
sub
pop
inc
push
hlt
add
push
outs
inc
inc
and
das
mov
and
push
retf
adc
popa
out
out
adc
xlat
adc
mov
cmp
push
mov
scas
call
and
iret
fidiv
out
out
out
mov
dec
loope
cmp
test
push
lds
aam
adc
inc
fs
sahf
mov
xchg
xchg
xchg
aam
loopne
(bad)
jns
mov
pop
sar
add
bound
sbb
rcr
add
push
xor
cmc
cdq
inc
mov
xchg
jl
jbe
pusha
xlat
ror
test
jle
lods
sub
sub
enter
cwde
pusha
xor
fwait
enter
pop
mov
xor
pop
call
mov
pop
xor
mov
mov
mov
or
ins
jne
hlt
cdq
dec
pushf
inc
and
cmp
nop
add
aaa
out
inc
jmp
lock
pop
neg
bound
jbe
xchg
and
fs
fdiv
in
pop
adc
push
js
mov
xor
jb
cmp
adc
add
jmp
popf
or
dec
mov
scas
dec
mov
lds
sub
inc
sub
(bad)
and
jmp
inc
jae
jmp
or
mov
mov
dec
movs
jge
(bad)
pop
je
pop
pop
jecxz
push
lds
fsubrp
add
sub
adc
mov
pop
in
jmp
lahf
pop
push
addr16
outs
add
in
pop
xor
cli
in
mov
pop
mov
cmc
or
cld
mov
sub
xor
and
cmp
retf
jnp
add
sahf
push
test
fsub
(bad)
jb
mov
adc
in
and
xchg
jbe
mul
add
cmp
and
popf
loopne
fnstsw
jne
cs
imul
rcr
cmc
dec
int3
xchg
add
push
jbe
cmc
xchg
mov
fnstcw
mov
mov
inc
daa
jge
cdq
pop
xlat
inc
int3
or
inc
into
aaa
std
jb
loop
jae
call
mov
std
dec
xor
push
jo
std
xchg
mov
pop
cld
call
ficom
cmp
hlt
repnz
push
les
jno
mov
xchg
sbb
inc
pop
repz
mov
clc
push
shl
and
test
daa
jg
sbb
lods
(bad)
or
lmsw
lock
xchg
mov
push
loopne
pop
into
mov
inc
nop
sti
pop
mov
sbb
les
pop
sbb
aam
jb
in
cdq
stos
sbb
jb
jb
imul
inc
jb
xor
shl
gs
fisttp
jmp
sbb
cs
fiadd
sub
das
std
sub
jl
mov
repz
inc
bound
xor
iret
and
push
add
xchg
es
int
(bad)
pop
fxsave
sahf
xchg
in
mov
jmp
jne
scas
mov
adc
rol
(bad)
sti
mov
add
xor
fnstsw
mov
stos
mov
gs
and
sub
ret
push
or
dec
stos
push
ret
jbe
outs
(bad)
jecxz
lods
ficom
aam
cs
rcl
sbb
jge
sub
out
sbb
out
jns
cmps
popa
push
push
jge
adc
test
mov
cmp
push
xchg
mov
std
je
aaa
xor
jmp
ret
jae
push
inc
inc
inc
je
xor
in
les
pop
pop
mov
test
sub
mulps
adc
push
div
sub
jg
clc
xor
inc
lahf
add
jns
aad
adc
jno
inc
mov
mov
hlt
repnz
pop
sti
shr
jge
imul
(bad)
or
dec
scas
and
push
xchg
jmp
gs
dec
inc
retf
aad
sbb
mov
or
lea
in
xchg
gs
push
out
mov
mov
icebp
mov
push
bound
push
pop
adc
push
mov
jne
lea
jo
repz
std
repnz
push
inc
push
(bad)
pop
jbe
or
icebp
sub
xor
sahf
(bad)
scas
mov
int
std
dec
fwait
shl
jmp
(bad)
loopne
mov
rcl
mov
and
(bad)
out
or
fimul
aaa
popa
int3
jg
adc
and
cmp
outs
inc
cmp
dec
inc
(bad)
jbe
dec
pop
add
loop
inc
push
imul
rol
lods
xchg
jecxz
movs
ret
pop
and
and
xor
adc
imul
(bad)
mov
mov
push
jmp
icebp
icebp
lds
inc
jl
call
in
mov
sbb
inc
in
add
sbb
jb
cs
movs
jmp
cmp
dec
(bad)
jge
lock
push
mov
and
hlt
jl
jmp
sub
sub
inc
stos
mov
test
sub
pop
pop
(bad)
test
ja
xor
sub
xchg
leave
enter
xor
scas
mov
adc
(bad)
idiv
and
inc
dec
inc
repnz
inc
arpl
and
sti
(bad)
jge
mov
sub
pushf
(bad)
jae
inc
add
push
or
int3
cmp
icebp
cmps
sbb
inc
or
rcr
add
rcl
imul
mov
mov
mov
push
ds
out
hlt
popa
aam
mov
sub
sub
dec
and
cli
inc
adc
mov
popa
aad
mov
cmc
imul
inc
jns
ins
not
leave
cmps
xor
inc
mov
and
xchg
icebp
dec
sar
movs
push
(bad)
sub
lock
mov
call
not
cmp
stc
jl
rcr
retf
sub
nop
push
iret
pop
sbb
jp
and
adc
cmp
mov
cmps
pop
adc
mov
add
mov
mov
cmp
div
aad
test
ins
or
imul
xchg
call
mov
pop
cmp
rcr
js
retf
and
stc
xchg
cld
das
mul
mov
nop
jne
adc
push
loopne
pop
js
xor
inc
daa
push
out
xchg
sahf
mov
fistp
or
int
mov
popf
dec
aam
push
mov
sti
hlt
dec
or
in
ss
jmp
mov
jmp
add
xor
leave
popf
and
ins
pusha
jne
int3
sbb
aaa
xor
mov
jmp
push
jge
movs
xchg
sub
cmp
adc
jmp
adc
neg
push
mov
in
mov
and
pop
repz
daa
gs
je
pop
jp
into
inc
fdivr
mov
xor
lods
out
xchg
xchg
mov
cld
or
mov
sub
dec
mov
jae
mov
or
in
data16
sub
std
pusha
sub
mov
add
lahf
dec
ror
sub
xor
imul
rol
mov
xor
push
jne
add
int3
sbb
(bad)
push
(bad)
fcom
out
or
push
xor
mov
xor
ret
lods
aaa
fldcw
xor
aaa
(bad)
cmps
stos
or
call
jl
adc
cld
out
shl
xor
xchg
dec
pusha
fcom
pop
imul
push
add
sbb
or
push
les
aad
and
sbb
mov
dec
cmc
inc
or
cs
std
lahf
sub
jl
imul
sub
jle
lods
stos
stos
fs
mov
stc
pop
nop
lahf
pusha
(bad)
dec
adc
lea
(bad)
lods
scas
js
add
repnz
cmp
pop
xchg
arpl
in
pop
cmps
sbb
pop
ja
pop
pop
add
or
inc
pop
dec
scas
repz
or
push
cmp
hlt
jge
dec
mov
rcl
(bad)
push
mov
adc
xor
lock
adc
cmp
pop
mov
rcl
gs
xor
inc
add
inc
xor
sbb
mov
imul
(bad)
std
sbb
sub
adc
shl
setns
push
xchg
xor
loop
sbb
jne
lahf
fcmovu
sub
push
fisub
mov
test
aad
mov
enter
mov
pop
inc
pop
adc
repnz
jb
loop
fisttp
(bad)
jmp
sub
jmp
daa
(bad)
adc
int
push
xchg
dec
popa
mov
mov
sbb
addr16
(bad)
int
push
div
adc
inc
or
or
adc
ret
outs
sub
cmp
data16
repz
ret
push
sbb
sbb
ss
rcl
push
in
icebp
les
xor
fcomp
jp
push
cmp
bound
neg
(bad)
pushf
adc
cmp
mov
sub
shl
repz
jp
in
je
neg
sub
xchg
pop
dec
xor
mov
nop
loopne
xchg
cmp
scas
mov
mov
or
jno
nop
jmp
mov
inc
push
inc
or
retf
fstp
and
data16
jge
pop
push
cmp
lods
scas
mov
shl
fisubr
mov
cmp
imul
ja
add
mov
sbb
push
push
mov
jle
sahf
cdq
enter
xor
jbe
(bad)
adc
call
adc
cwde
jae
mov
inc
or
inc
pop
push
mov
shl
stc
dec
pop
mov
scas
xchg
std
push
jg
or
lock
cli
cwde
xor
leave
pusha
aam
push
sub
das
jns
jge
js
mov
adc
and
pop
xchg
cmp
mov
scas
popf
cmp
cmc
mov
ror
fmul
rcl
cmp
mov
nop
xor
dec
sub
sti
jge
dec
mov
lds
in
cmp
outs
movs
adc
push
mov
adc
imul
sahf
cmp
out
pop
out
xlat
popa
pop
xchg
(bad)
js
sub
xchg
hlt
or
aas
inc
test
pop
outs
sar
xor
stos
repnz
jbe
cmps
dec
fdivr
dec
jns
stos
shr
jae
ins
jmp
jae
mov
daa
popa
loopne
mov
xchg
repz
aaa
mov
outs
push
clc
dec
inc
push
pop
sbb
pop
sub
push
add
aad
dec
fistp
mov
stos
push
fs
fninit
(bad)
cmp
push
jmp
(bad)
stos
out
jo
out
(bad)
xor
push
(bad)
addr16
inc
in
xor
fild
in
push
jne
mov
outs
mov
adc
fst
scas
je
inc
das
shr
dec
in
push
inc
xor
enter
enter
xor
push
lods
push
cmc
pop
mov
adc
(bad)
sub
xor
or
cs
push
adc
pop
out
adc
rcl
fisubr
leave
sub
stc
loopne
leave
call
mov
sbb
jb
cmove
push
jb
jnp
mov
mov
retf
and
sub
mov
mov
cmps
pop
aad
cmp
cdq
pushf
cmc
pop
pop
cli
and
fimul
outs
cli
pusha
mov
mov
int3
pop
jge
jbe
jp
xchg
mov
aaa
push
and
inc
sbb
ins
and
jecxz
mov
(bad)
mov
cmc
cmps
cmp
push
outs
pop
xchg
cld
fwait
aad
stos
xchg
js
mov
jmp
in
std
in
aad
ins
mov
fldl2t
sbb
mov
loop
(bad)
sub
das
fwait
push
stc
xchg
mov
(bad)
dec
adc
push
enter
into
rcl
loopne
nop
or
addr16
ret
cmp
cmc
scas
mov
imul
mov
fimul
out
shr
add
ret
(bad)
fs
out
adc
(bad)
cdq
jecxz
scas
xchg
adc
int
mov
in
and
ins
xor
das
cwde
fst
inc
scas
mov
lds
jmp
rcl
movs
(bad)
mul
push
loop
adc
je
rol
push
scas
addr16
mov
mov
imul
pop
adc
cs
das
out
jns
sahf
or
outs
aas
sti
cli
inc
fnstcw
loop
push
xchg
or
popa
shl
add
xchg
fsub
sar
jno
jp
(bad)
push
loope
mov
xor
jns
sub
push
(bad)
scas
fstp
sub
push
push
stos
jbe
xchg
out
jle
jmp
or
sbb
jg
add
movs
and
mov
mov
enter
cs
mov
cdq
in
or
cs
push
dec
ss
xlat
add
inc
call
sbb
jge
pop
idiv
pushf
retf
(bad)
mov
cs
xlat
inc
out
cmps
bound
jo
push
inc
fistp
adc
les
in
cmp
mov
int3
sbb
cli
fcomp
in
xor
mov
sub
xor
push
retf
(bad)
(bad)
push
dec
xchg
int
xor
mov
call
leave
xchg
pop
ds
retf
es
int
(bad)
push
push
inc
jo
fisttp
bound
ret
loope
rol
(bad)
iret
pop
pop
cs
mov
clc
jae
int
pop
dec
or
cmp
push
loop
ja
cmp
(bad)
xchg
push
ret
push
adc
std
inc
xchg
test
fucomp
inc
neg
sub
scas
mov
ror
out
mov
das
arpl
jle
bound
xor
es
es
or
jno
adc
cmp
popa
push
sub
adc
in
sahf
pusha
imul
pop
(bad)
lds
pushf
imul
cmp
sbb
mov
sbb
xchg
je
ret
sub
cmps
sub
xchg
sub
cmp
add
mov
mov
out
cwde
imul
hlt
loopne
fcmovb
lods
xor
xor
fadd
ffree
dec
icebp
movs
arpl
xchg
mov
push
je
test
cwde
lahf
mov
push
lahf
movs
cmovle
push
and
push
sbb
add
fwait
inc
(bad)
xor
cli
addr16
jmp
mov
into
push
lods
hlt
enter
mov
jmp
mov
aas
inc
push
xchg
dec
push
aaa
stos
xor
int
daa
into
and
cmp
sbb
pop
xchg
cmp
add
adc
sbb
jnp
adc
pop
and
sbb
pop
pop
lea
sub
out
test
xor
push
ror
in
dec
loop
lods
dec
or
pusha
(bad)
popfw
in
call
add
and
inc
std
mov
pusha
cdq
(bad)
sub
pop
jp
sbb
retf
jp
lods
imul
push
call
loopne
fs
fistp
sbb
icebp
test
stos
push
test
or
add
dec
or
sbb
push
shl
mov
test
push
mov
pop
xchg
retf
sub
xchg
fwait
push
outs
(bad)
lahf
jmp
mov
ja
mov
jne
ffree
repnz
adc
and
fcom
inc
call
xor
pop
push
ins
add
cmp
fnsave
in
and
dec
adc
shr
cmp
mov
aad
out
and
pop
pop
or
stc
mul
mov
cmp
push
test
mov
mov
test
and
pusha
in
popf
xor
fld
sbb
push
(bad)
cmp
mov
movs
fld
cmps
sbb
aam
mov
inc
xchg
ret
retf
mov
or
lea
into
xchg
jecxz
imul
mov
mov
cs
xor
sbb
jmp
jp
sbb
jle
push
ret
xchg
ds
cmp
push
cmc
mov
mov
sbb
repz
fwait
or
push
dec
loopne
adc
jmp
lds
xor
xchg
enter
jl
fmul
cli
adc
jl
test
in
cli
pop
sti
rcr
jb
rcr
out
push
fist
add
rol
cmp
inc
scas
sti
dec
xchg
cmp
add
xor
add
mov
sbb
inc
imul
std
hlt
mov
sub
xor
int
mov
mov
gs
jmp
(bad)
(bad)
ror
fistp
sti
daa
sbb
pop
aam
and
movs
adc
out
adc
sub
popf
mov
inc
add
outs
cli
xlat
div
addr16
push
sbb
ja
cmps
call
cmp
mov
cmc
iret
xor
adc
stos
cmp
inc
inc
sbb
jge
sub
repz
and
mov
ficomp
push
add
xchg
je
sub
push
aam
mov
rcl
fild
jg
sub
outs
dec
hlt
test
retf
xlat
add
mov
call
das
push
pop
popa
js
and
retf
xchg
loope
cmp
or
fidiv
pop
cmp
or
or
push
adc
pop
iret
mov
mov
scas
push
xor
xchg
push
mov
xchg
sbb
imul
test
lahf
das
mov
les
sbb
sub
inc
sahf
push
jmp
adc
mul
add
pop
into
mov
nop
adc
imul
int3
sub
mov
ja
(bad)
sbb
adc
xor
or
mov
add
mov
std
pushf
cmp
fsubr
outs
call
xchg
ficomp
(bad)
dec
pushf
adc
jns
dec
in
lock
xchg
fcom
cmp
cmps
push
push
(bad)
lods
mov
push
mov
out
jg
pop
inc
adc
test
push
std
sahf
fldcw
shr
sub
aam
out
pop
neg
or
xor
test
shl
pop
pop
mov
sub
pop
stos
mov
dec
or
xchg
xor
mov
and
jmp
(bad)
pop
and
xor
or
push
test
loope
mov
in
cmp
sti
in
sub
addr16
clc
inc
lock
jae
push
and
(bad)
out
fnstsw
inc
mov
pop
je
jne
cmc
sbb
push
mov
adc
jge
or
dec
(bad)
cli
arpl
sbb
(bad)
(bad)
icebp
fstp
fcomp
aad
inc
xchg
jo
xchg
xor
cli
out
nop
or
fist
test
dec
retf
inc
dec
mov
push
add
cmp
test
sbb
lods
and
jno
push
dec
pop
(bad)
hlt
iret
arpl
push
ret
mov
ins
or
mov
adc
or
lods
ins
in
(bad)
rol
mov
retf
stc
scas
hlt
sbb
add
cmp
pop
and
lahf
outs
or
in
fld
or
push
scas
or
ss
fdivr
or
lea
add
and
xchg
daa
push
cli
push
sbb
cmp
daa
xchg
sub
andps
and
ins
iret
js
xlat
add
mov
mov
push
out
xor
fadd
mov
pusha
aaa
out
pop
jp
sub
xchg
push
xchg
or
xchg
mov
bound
sub
(bad)
leave
sbb
daa
adc
gs
ret
rcr
addr16
out
ret
jp
stos
test
xchg
test
adc
in
xor
inc
aaa
xchg
adc
aam
in
add
or
test
fldenv
retf
xchg
sti
(bad)
ins
lods
xor
lock
adc
ret
cld
std
inc
fs
pop
aaa
and
mov
in
xchg
and
jmp
rol
push
in
loopne
pop
rcl
pop
int
pop
pop
and
aaa
xchg
enter
mov
clc
inc
push
test
ret
mov
inc
inc
and
test
ret
fmul
xchg
mov
test
std
mov
xor
push
sbb
out
push
dec
xchg
sub
xchg
ret
ja
xchg
imul
daa
rcl
pop
mov
sar
ret
ins
jp
inc
adc
fwait
jle
fisubr
push
je
pop
add
scas
xor
fist
xor
add
mov
cdq
or
xor
clc
int3
mov
shr
lods
stos
xor
fimul
nop
shr
xchg
rcr
jp
rcl
xchg
push
mov
pop
sbb
jecxz
lahf
xor
pop
pusha
jno
cmp
data16
in
dec
pushf
cmp
mov
shr
rol
and
or
mov
movs
sub
cli
add
adc
and
cmp
dec
shl
xchg
rcr
jnp
(bad)
scas
jb
shl
inc
mov
jge
cmp
xchg
inc
adc
out
or
fcomp
mov
stc
mov
nop
scas
aad
(bad)
fdiv
push
test
dec
mov
inc
(bad)
push
aas
pop
mov
cmp
fild
cmp
popa
mov
xchg
mov
pop
daa
icebp
lea
sub
dec
stc
push
loop
pop
cmp
aaa
arpl
adc
xchg
add
out
call
and
xor
lods
(bad)
arpl
dec
(bad)
cmp
xor
jo
jge
into
xchg
hlt
push
lahf
inc
movs
inc
sbb
xchg
mov
sbb
add
enter
mov
les
pop
jmp
in
push
adc
inc
add
jmp
test
cmps
je
mov
xchg
cs
out
jns
add
(bad)
pop
aad
sbb
je
pop
je
adc
sub
call
neg
fwait
fwait
ret
pop
mov
sub
pop
mov
jb
pop
fs
cmps
adc
movs
dec
and
inc
cmp
pop
adc
fisttp
push
scas
or
adc
and
dec
mov
hlt
push
popa
sub
xor
xor
dec
mov
mov
mov
xchg
mov
pop
xlat
mov
xor
or
jb
sar
loope
and
sbb
or
or
inc
test
sbb
cmc
jmp
das
mov
adc
movs
out
mov
sahf
xchg
cmps
sbb
xor
leave
push
call
mov
ja
and
out
inc
shl
pop
cmp
stc
mov
rol
xor
and
retf
retf
dec
(bad)
rol
push
movs
enter
mov
rcl
pop
jnp
pop
add
xchg
out
aam
pop
xor
ja
jo
in
enter
stos
mov
inc
das
adc
mov
xchg
push
and
mov
push
jmp
arpl
sti
(bad)
mov
and
js
and
jno
in
cmps
ins
mov
sbb
push
dec
aas
xlat
dec
movs
cld
mov
sub
cmp
mov
jle
das
int3
cmp
aas
push
dec
daa
add
std
pop
int
dec
movs
outs
mov
cld
shl
jmp
mov
stc
in
test
(bad)
cld
inc
imul
ja
movs
(bad)
add
in
add
pop
jg
inc
mov
fcom
ror
cli
outs
popa
stos
mov
mov
loop
jne
add
cmp
aas
idiv
push
out
or
and
clc
ja
aam
cwde
mov
sahf
pop
lock
(bad)
nop
pop
xor
fwait
out
mov
xchg
(bad)
pop
xchg
aas
dec
dec
popf
adc
aas
fdiv
icebp
out
add
lahf
lock
bnd
and
xor
jb
test
jg
scas
dec
sar
pusha
repz
mov
or
cmp
bt
stc
sub
and
cmc
adc
scas
pop
retf
or
(bad)
and
fwait
inc
mov
inc
(bad)
int3
jbe
cmp
inc
gs
sahf
(bad)
std
call
out
leave
fwait
lahf
sbb
push
(bad)
(bad)
(bad)
and
inc
adc
in
aas
push
jno
cmc
push
aaa
jle
lods
sbb
cmp
push
add
pop
sub
dec
mov
aaa
mov
cli
xchg
pop
inc
ret
fcomp
cmp
xchg
(bad)
les
and
jno
sbb
into
adc
push
cmps
sub
mov
shr
movs
sub
cdq
xchg
leave
and
stc
mov
jle
cmps
adc
ss
aaa
jl
xlat
scas
imul
sub
push
in
mov
push
pop
div
imul
loop
cmps
pop
push
or
popa
popa
lods
jae
or
fs
aaa
pop
mov
xor
lea
push
jge
xor
or
xchg
push
leave
cmps
stos
jae
movs
xor
jo
sub
cmc
je
or
sub
aad
and
push
mov
mov
and
mov
cdq
scas
aad
sbb
les
pusha
pop
test
push
push
xchg
sbb
hlt
xchg
mov
sti
mov
cmp
jmp
xchg
xchg
xor
iret
xor
enter
push
mov
popa
(bad)
shr
cwde
mov
or
faddp
inc
in
adc
pusha
out
or
cmps
pop
or
mov
sub
popa
loop
mov
data16
inc
push
xor
cmp
pop
outs
es
mov
jl
movs
or
(bad)
int
add
movs
add
into
dec
leave
lock
adc
sbb
scas
jbe
jl
inc
mov
dec
fisubr
pop
xor
lods
jb
add
sbb
iret
daa
mov
push
aad
xchg
xchg
in
cli
pushf
pop
into
mov
sub
xor
iret
xlat
addr16
jns
loop
fwait
mov
sub
xchg
inc
test
cs
cs
mov
cmps
les
imul
stos
pusha
shl
scas
xor
(bad)
mov
inc
mov
jmp
outs
mov
(bad)
pop
movs
mov
test
into
cmp
into
push
sub
in
std
es
push
les
pop
fiadd
call
lock
ins
jno
stos
and
out
push
icebp
pop
neg
mov
call
movs
mov
pop
lea
movs
pop
aas
stos
mov
fimul
(bad)
mov
mov
aaa
sahf
fs
lods
aam
jbe
cmp
xchg
xor
fdivr
and
std
mov
jmp
(bad)
(bad)
sub
pop
push
and
loop
sub
std
jae
iret
mov
out
xchg
sbb
cmps
or
cmps
xor
jp
jle
add
and
xlat
push
inc
dec
pop
mov
int
imul
inc
adc
outs
jg
das
cmp
xchg
xchg
pusha
dec
out
imul
test
lea
sub
push
xchg
das
or
add
leave
imul
arpl
inc
mov
mov
jge
jo
cwde
mov
inc
adc
cmc
iret
mov
dec
cmp
fs
mov
call
cdq
dec
hlt
pop
mov
and
jne
call
(bad)
test
dec
push
cmc
push
mov
mov
sbb
cld
imul
sub
mov
inc
mov
not
stos
(bad)
jb
mov
scas
iret
mov
jmp
dec
repnz
or
pop
jge
mov
cmp
(bad)
enter
jb
rcl
dec
fisub
test
xchg
mov
sub
(bad)
fild
fistp
mov
or
loope
cmp
ret
sbb
arpl
gs
push
stos
inc
or
xor
pop
hlt
jg
cmp
inc
sbb
cmps
clc
push
sbb
in
or
pop
movs
xchg
clc
in
clc
xchg
add
cmp
cli
jmp
loop
sbb
daa
sbb
jns
std
cli
sti
xor
psllq
xor
lods
pop
sub
dec
mov
(bad)
std
iret
mov
xchg
adc
inc
pop
add
int3
cmp
adc
dec
sub
xchg
xchg
in
leave
inc
or
inc
add
fidiv
jle
jg
xchg
dec
xchg
mov
pop
int3
(bad)
lea
(bad)
pop
int
(bad)
push
dec
lods
jle
mov
xor
imul
and
mov
mov
adc
jmp
outs
dec
leave
mov
lock
frstor
cwde
jp
jo
fcomp
aam
bound
push
adc
push
nop
retf
adc
xchg
shr
sub
cmp
jno
dec
sub
adc
or
mov
stos
jnp
ss
jno
jl
sar
iret
test
retf
bound
pop
xor
cmp
fwait
mov
mov
fisttp
stos
in
cmp
jp
push
lahf
dec
mov
mov
adc
xchg
fldenvw
movs
add
pushf
je
cmp
addr16
rcl
dec
pop
push
adc
sar
push
jae
(bad)
xchg
xor
sbb
add
ds
xor
push
xchg
push
xchg
xlat
mov
jecxz
loope
dec
sbb
or
dec
add
push
int3
sbb
inc
pop
cmp
dec
jne
out
pop
sub
pop
xor
adc
in
cmp
rep
mov
inc
daa
daa
add
mov
and
ins
jmp
inc
mov
sar
movs
jg
push
cmps
jecxz
mov
in
scas
lahf
cmp
sahf
mov
push
add
mov
push
push
inc
push
xchg
mov
or
int3
dec
mov
(bad)
es
xchg
(bad)
in
out
jbe
dec
inc
cwde
ins
arpl
dec
ret
push
jmp
test
pop
mov
and
repz
push
pop
and
(bad)
in
push
ret
jl
and
jns
js
cmp
in
mov
mov
push
je
add
and
push
sti
sbb
jmp
jmp
sbb
sub
icebp
cwde
fld
sub
add
(bad)
enter
pop
pusha
(bad)
pop
outs
mov
pop
jbe
lock
mov
mov
mov
sub
int
cmp
and
in
pop
test
push
outs
fimul
in
cmps
cmps
scas
call
les
dec
out
push
xchg
ret
gs
inc
push
cwde
dec
cmp
dec
repnz
and
xor
sub
out
punpcklbw
imul
int
mov
jge
out
push
jmp
xor
inc
xchg
mov
out
sti
push
into
mov
push
push
pop
sub
push
rcl
inc
cmp
sahf
ins
test
inc
and
pop
std
in
xor
dec
dec
aas
inc
adc
outs
(bad)
jb
(bad)
sar
lea
ret
fisttp
xor
test
test
mov
movs
fucomip
xor
out
xchg
mov
mov
mov
xchg
pop
mov
inc
mov
dec
aas
inc
cmp
push
mov
jp
test
les
jae
int3
jl
sahf
jecxz
and
xor
xor
adc
mov
sub
mov
arpl
pop
loope
mov
inc
push
inc
sbb
icebp
mov
push
add
dec
ins
int3
mov
add
pop
xor
ds
iret
cwde
mov
pop
loop
scas
dec
and
fimul
add
push
nop
test
repz
rcl
movs
cmc
jp
pop
lea
xchg
dec
(bad)
cmp
and
pop
gs
xchg
test
adc
lds
jmp
daa
pop
clc
xor
xchg
das
cmp
mov
js
pusha
das
adc
jnp
enter
ja
imul
sub
jo
retf
pop
out
adc
daa
call
cdq
div
rcr
push
mov
fwait
test
shr
int3
test
shl
mov
fwait
dec
loope
sahf
sub
sti
or
in
push
jecxz
cwde
adc
xor
jl
dec
test
call
loopne
aad
(bad)
cmp
inc
sbb
popa
mov
mov
mov
mov
lods
ret
mov
jae
lock
test
dec
xor
and
retf
push
mov
adc
mov
ja
mov
xchg
out
popa
inc
mov
aas
and
xchg
rcr
pop
fsub
imul
xor
xchg
mov
stc
xor
jne
sub
(bad)
(bad)
in
sub
sub
(bad)
popf
add
mov
cmp
xor
daa
mov
and
pcmpgtw
pop
imul
mov
add
(bad)
es
sahf
jnp
jp
or
xchg
pop
inc
loop
repz
(bad)
sbb
scas
jnp
jns
inc
xchg
cmps
stos
jl
sbb
mov
les
jns
xchg
adc
mov
(bad)
dec
xchg
and
scas
pop
aaa
les
pop
mov
cli
loopne
or
jecxz
scas
dec
fcomi
inc
and
call
inc
dec
imul
mov
mov
xor
(bad)
in
rcl
fld
mov
fldcw
xor
xchg
sbb
in
dec
xchg
and
and
jae
push
pop
add
iret
in
xor
push
pop
aaa
mov
popf
in
jl
call
inc
pop
in
sahf
scas
mov
cmps
dec
xchg
out
pop
data16
adc
mov
xor
and
shr
pop
jle
pop
aad
icebp
sti
(bad)
or
push
jnp
into
call
outs
or
sbb
aad
(bad)
sbb
addr16
ret
sub
in
lods
sub
repnz
aad
and
test
gs
inc
fsub
jmp
pop
lock
aad
xchg
div
cld
iret
loopne
inc
inc
pop
xor
movs
jle
(bad)
mov
mov
in
xchg
aas
pop
push
call
ret
(bad)
std
inc
cmp
clc
xchg
ins
data16
and
mov
mov
ret
push
sbb
popa
std
popa
and
mov
dec
pop
sub
and
xchg
rol
lock
xchg
inc
xor
xchg
cmps
mov
jecxz
lods
lods
jb
adc
sub
pushf
out
pop
push
or
cdq
dec
jno
mov
mov
scas
mov
nop
mov
mov
pop
push
lods
mov
ja
sbb
lods
daa
sar
xor
or
fidivr
inc
add
dec
xchg
mov
into
add
pushf
mov
cmc
(bad)
(bad)
out
cmp
into
aam
cdq
push
test
pop
test
movs
xchg
cmp
aas
add
fisub
imul
add
xlat
ds
rol
icebp
dec
mov
dec
in
aam
push
push
aam
cmp
dec
enter
push
sahf
aas
cmp
mov
ins
aas
cmp
cmp
xor
clc
mov
loope
test
aad
clc
mov
cmp
push
js
xchg
dec
push
js
mov
cmp
retf
and
arpl
push
mov
or
imul
mov
mov
sbb
and
pop
xor
mov
scas
repnz
adc
jg
hlt
mov
adc
icebp
add
les
mov
pop
stos
cmp
push
mov
cmp
lds
add
sub
push
rol
inc
mov
push
dec
cld
sbb
and
pop
sbb
js
pop
retf
int
xchg
ja
pop
inc
ins
in
(bad)
pushf
fidivr
mov
pop
mov
rcl
mov
leave
adc
retf
movs
push
frstor
xchg
test
mov
bound
jne
pop
aad
mov
mov
sti
in
push
xchg
jl
(bad)
push
rcl
into
ins
cmp
or
cmp
shr
sub
arpl
ret
imul
iret
push
jmp
dec
loopne
scas
cwde
cmps
dec
cwde
mov
les
mov
sbb
xlat
inc
pop
test
push
jg
jns
dec
or
jmp
xchg
dec
lahf
xor
in
scas
lea
ficomp
sub
adc
lds
dec
loope
pop
xor
mov
pop
js
xchg
cmps
push
jmp
fdiv
jne
test
push
or
in
push
dec
pop
(bad)
mov
mov
cmp
or
loopne
mov
mov
aaa
leave
std
xor
push
add
or
mov
mov
lahf
jo
jmp
jecxz
xchg
sar
imul
dec
test
rcr
or
mov
or
mov
ss
xor
pusha
sbb
push
dec
retf
test
cmps
popf
mov
inc
scas
popf
je
inc
std
pop
add
pop
add
mov
popf
inc
xchg
push
jle
ret
sbb
add
cmps
inc
push
retf
cmp
dec
sub
jge
push
data16
mov
ds
ins
push
and
scas
aas
sbb
inc
push
dec
data16
and
daa
mov
(bad)
(bad)
dec
call
fcomp
pop
test
xchg
xchg
not
int
fwait
jo
mov
sbb
sub
les
icebp
sar
stos
or
in
loope
fcom
aaa
scas
ins
sbb
xor
fiadd
sbb
enter
push
mov
ret
inc
lods
out
loop
ds
test
dec
mov
sub
adc
ins
jno
sub
scas
mov
call
xor
imul
addr16
push
push
dec
sbb
cmps
sti
(bad)
icebp
ins
int3
lods
jno
test
or
inc
xor
mov
aaa
and
div
cmp
ror
sahf
retf
mov
jne
imul
push
jns
jg
fsub
pop
daa
rcl
cmp
ret
cs
sbb
and
sub
gs
push
cs
loopne
xor
pop
in
out
out
loopne
inc
aam
ret
imul
(bad)
repz
pushf
fadd
movs
out
xor
push
mov
pop
jne
dec
push
mov
add
pop
aad
push
cmp
(bad)
(bad)
stos
cwde
mov
or
ja
in
cmp
xor
sbb
mov
popf
jmp
mov
dec
inc
mov
jp
in
jno
jmp
ret
jns
mov
xchg
or
mov
std
lock
into
push
out
sub
inc
and
daa
pand
jp
jbe
mov
popa
cli
lock
xor
scas
inc
adc
test
mov
mov
jo
pop
stos
ret
jo
mov
retf
and
ss
data16
push
ja
data16
fisub
dec
fidivr
jb
push
sahf
ret
enter
mov
retf
scas
mov
pop
xor
jbe
jne
ins
mov
mov
rcl
mov
mov
xchg
lea
sbb
xor
adc
clc
add
mov
jne
sbb
mov
and
push
imul
push
mov
stos
xchg
push
(bad)
js
dec
clc
sub
xor
xlat
cmp
mov
retf
sbb
mov
stos
fcom
lock
mov
pop
lods
ins
xchg
mov
loop
adc
mov
mov
out
sub
leave
push
dec
ds
xor
dec
pop
xor
scas
mov
pop
sbb
mov
ror
cs
ds
scas
aad
aad
stos
mov
cmps
mov
jns
jae
int
push
mov
hlt
and
(bad)
dec
ret
sbb
adc
mov
pop
xchg
hlt
xchg
cmc
mov
imul
(bad)
fbld
lds
sbb
inc
js
add
ja
push
addr16
repz
mov
mov
mov
mov
outs
into
push
out
aaa
pusha
call
mov
xchg
shl
adc
cld
arpl
pop
js
aam
inc
pusha
or
inc
and
push
out
repz
jnp
sbb
test
call
or
imul
lahf
sbb
jecxz
fsubr
stos
mov
mov
pusha
loop
sbb
cmps
cdq
or
mov
add
or
cmps
adc
fs
inc
std
ds
sub
fisub
aaa
scas
mov
pop
cdq
nop
std
imul
mov
out
and
or
pop
add
dec
test
push
mov
xchg
inc
es
sub
push
repnz
jno
sbb
cmps
test
push
out
cld
push
clc
int
jecxz
push
sbb
mov
dec
mov
cmp
fild
retf
std
lahf
pop
js
out
xchg
xor
outs
test
fcomp
(bad)
cmp
js
shl
mov
in
push
cmps
arpl
jmp
jl
scas
sub
adc
movs
mov
in
or
aam
mov
xchg
mov
and
sub
and
xor
outs
push
xchg
je
call
mov
or
mov
and
enter
outs
xor
dec
pop
out
shr
xor
push
sub
enter
hlt
inc
cli
cs
xchg
lock
dec
push
pop
push
in
xor
xor
sub
rcl
mov
adc
sub
and
mov
inc
gs
clc
fld
xchg
aam
mov
imul
shl
xchg
cs
pop
fdivr
lods
pop
mov
jl
sbb
xchg
leave
sbb
sbb
addr16
inc
test
outs
in
xchg
cmp
sti
mov
(bad)
loope
or
rcr
imul
sbb
mov
out
sub
or
inc
push
mov
add
inc
das
cmp
fiadd
mov
push
push
mov
mov
(bad)
xor
mov
into
sub
aas
shl
loop
scas
sub
leave
cmp
cmps
lods
movs
or
mov
out
mov
cmp
sbb
mov
or
xchg
call
and
fnstenv
cmps
in
mov
mov
div
pop
sbb
stos
gs
sub
cmp
fnstsw
(bad)
in
(bad)
xor
inc
repnz
movs
repz
fst
sub
mov
ins
loopne
loope
push
mov
shr
jmp
add
fwait
mov
dec
push
add
inc
frstpm(287
and
jae
add
das
out
jbe
retf
mov
dec
mov
(bad)
jno
add
dec
xor
int
jns
pop
arpl
aad
dec
lods
jge
pop
aaa
add
jl
fstp
idiv
stos
xor
xor
outs
push
dec
in
fsubr
cmp
sub
shr
outs
outs
pop
js
and
jo
jl
mov
cmp
inc
or
mov
outs
adc
jmp
jg
hlt
xor
mov
bound
sub
jns
loope
sahf
and
outs
in
jne
arpl
scas
mov
std
pop
jb
ins
outs
gs
dec
sub
push
inc
sbb
sub
mov
pop
stc
icebp
mov
rcl
mov
mov
retf
cli
mov
data16
pop
push
mov
jl
or
xchg
cmc
or
out
(bad)
repz
lods
pop
push
test
xchg
sbb
jbe
dec
enter
stos
xor
aam
call
out
sbb
mov
push
xor
test
xchg
ds
mov
stos
daa
out
test
repz
sub
cmps
sbb
push
mov
pop
and
or
sti
and
mov
repz
mov
mov
xor
xor
mov
mov
lea
je
pop
das
mov
mov
jle
pop
fiadd
mov
rol
mov
xlat
div
(bad)
push
cmp
inc
push
cmp
scas
jne
xor
aad
int3
aam
or
movs
fist
mov
call
adc
cmps
mov
stos
loopne
imul
xchg
pop
das
(bad)
call
adc
push
jns
xchg
xor
scas
or
adc
and
jg
pusha
and
adc
(bad)
in
jne
sub
jns
sub
fdivr
cmp
loop
enter
pop
ins
pop
mov
mov
xchg
ror
push
add
ret
test
push
sub
mov
add
in
inc
rcr
xor
sbb
jmp
cmp
jmp
sub
repz
fndisi(8087
jns
inc
loopne
xchg
in
mov
jmp
clc
xor
mov
fsubr
sbb
mov
jne
push
scas
lods
lock
repz
je
mov
mov
and
mov
pop
ins
xor
mov
sbb
ds
test
dec
outs
sahf
mov
inc
mov
stos
cld
mov
jbe
aam
inc
test
xor
fldcw
cdq
test
mov
js
jae
or
icebp
iret
aam
dec
sub
fidiv
cmp
xor
movs
jge
out
add
jmp
push
jecxz
ficom
or
xor
xlat
sar
fiadd
xor
jle
inc
xchg
rcr
dec
sbb
pop
push
mov
retf
shl
cmp
jl
pusha
xchg
cwde
adc
in
xchg
or
xchg
idiv
cli
or
inc
loop
popa
dec
icebp
sbb
and
cwde
inc
aam
imul
jl
rol
stos
ret
jmp
repnz
shl
shl
adc
jnp
daa
ss
push
push
mov
out
sti
out
jp
sub
push
clc
bnd
popa
leave
cmp
(bad)
scas
sub
in
pushf
push
pop
jmp
and
sbb
(bad)
scas
(bad)
retf
shr
add
dec
ins
mov
add
cmpxchg
cld
aaa
inc
les
dec
loope
jns
push
repz
xlat
push
fwait
jl
mov
push
rcr
imul
nop
dec
dec
jp
xchg
push
sbb
sbb
xor
push
dec
jb
sub
xor
movs
out
pop
hlt
test
cwde
pushf
push
outs
push
mov
mov
jg
stc
mov
shl
dec
rcr
js
push
pop
aad
jge
xchg
clc
xchg
es
call
lods
in
lds
mov
lock
pop
inc
and
test
dec
ret
jle
ror
int3
test
xchg
sbb
mov
mov
(bad)
jmp
and
sbb
rol
pop
dec
das
inc
add
cmp
adc
test
sbb
shl
jl
inc
ret
and
outs
jbe
sub
pop
dec
push
div
call
pop
pop
hlt
inc
repz
xchg
das
mov
dec
pop
sbb
repz
jge
in
cmp
jmp
inc
std
ret
enter
movs
and
int3
and
imul
sbb
stc
in
fwait
imul
mov
clc
sub
sbb
mov
popa
test
pushf
or
cmp
lahf
pop
pop
adc
adc
cmps
fs
push
and
dec
fidiv
js
scas
sar
inc
xor
sub
add
inc
push
mov
cmps
(bad)
(bad)
lahf
jg
clc
aaa
cdq
sub
jmp
xchg
jbe
and
sahf
xor
adc
cmp
jmp
inc
mov
(bad)
out
idiv
(bad)
mov
push
mov
add
jns
arpl
sar
iret
xrelease
and
outs
mov
and
pop
das
mov
pop
test
cmc
pop
xchg
out
test
pop
call
sbb
jmp
push
leave
mov
mov
pop
push
fs
sbb
scas
sbb
cmp
dec
lds
pop
sbb
arpl
xlat
inc
mov
fwait
repnz
jmp
dec
mov
add
dec
ret
es
daa
adc
stc
rcr
xchg
fmul
add
xor
push
cmc
adc
xchg
adc
call
lea
xor
iret
nop
aad
or
sub
out
fnstenv
jecxz
push
ins
lods
lea
mov
jo
stos
mov
jmp
jmp
and
jne
dec
pop
pop
mov
mov
sub
scas
leave
ficom
mov
cmp
pop
cmp
(bad)
and
inc
loope
sbb
idiv
loopne
push
mov
push
adc
inc
xor
xlat
push
imul
push
or
push
(bad)
push
jo
in
dec
xor
dec
or
pop
dec
leave
dec
mov
inc
and
jo
inc
out
aam
das
jle
push
mov
ss
dec
test
sbb
mov
sub
inc
popf
rcr
dec
das
jae
jno
imul
test
(bad)
fisttp
jg
jl
icebp
fwait
imul
enter
push
mov
cli
xchg
popa
jmp
xchg
dec
mov
add
cld
aaa
xchg
into
scas
out
cs
ds
xchg
test
mov
mov
adc
cmp
cmp
lea
mov
inc
jmp
repnz
or
into
push
cmc
dec
adc
movs
or
jmp
inc
adc
(bad)
sbb
xchg
xor
and
push
pushf
ficomp
add
xchg
jo
add
out
and
inc
and
and
mov
int3
hlt
fwait
xchg
sub
add
fimul
mov
cmp
mov
cmps
cmp
cmp
repnz
das
sbb
jle
arpl
jno
or
xchg
(bad)
in
sar
cld
and
ss
mov
xchg
inc
jle
ret
fst
out
(bad)
(bad)
aaa
pop
aad
not
mov
pop
jl
ret
mov
std
test
mov
movs
f2xm1
sub
cmps
int3
jo
aad
mov
xchg
mov
mov
push
aas
dec
dec
lods
scas
dec
xchg
jecxz
iret
xchg
sbb
rcl
mov
int3
jne
rcl
cmps
and
xlat
ret
adc
push
inc
pushw
ins
cmp
sub
cmp
cmc
(bad)
out
(bad)
mov
out
jmp
sbb
cmp
test
cdq
fs
fcom
imul
aaa
les
adc
xor
jp
js
jnp
jne
inc
sbb
and
out
fcmovnu
adc
add
test
imul
retf
retf
aad
inc
push
mov
arpl
cdq
sbb
inc
retf
dec
push
cs
out
mov
int
sahf
jmp
outs
sti
xor
popf
inc
pop
jg
cld
shr
nop
loopne
pop
add
cmps
and
stos
sbb
in
(bad)
loop
in
ror
mov
xchg
mov
sub
ins
xor
sbb
xor
cmp
stos
inc
jecxz
inc
or
mov
push
ret
add
mov
jb
jp
(bad)
rol
push
shr
cmp
lahf
mov
inc
test
mov
mov
mov
aaa
ret
sbb
mov
push
cmp
sbb
or
pop
and
lds
push
imul
mov
jbe
push
loop
push
pop
pop
cmp
scas
xchg
pushf
nop
cmp
fisubr
cmps
outs
inc
test
xchg
je
jle
xlat
lea
adc
fisubr
(bad)
iret
(bad)
leave
dec
sub
push
mov
mov
and
mov
(bad)
dec
ds
pop
cmps
mov
or
ror
pop
fisttp
cmp
or
stc
push
cmp
jno
shl
mov
iret
and
mov
ret
mov
out
es
mov
fld
dec
adc
sbb
lea
bound
ret
mov
loopne
pop
jae
mov
fadd
jl
sbb
ja
lds
push
cmp
cmp
lea
outs
aam
add
mov
jnp
inc
outs
jne
push
mov
add
xor
aad
mov
jmp
push
lea
xor
and
mov
push
js
out
vprotq
sub
imul
into
lahf
mov
lods
test
je
out
div
xor
xchg
and
ins
sahf
jb
push
gs
mov
cmc
push
fisubr
mov
cmp
loopne
push
inc
jl
xor
in
add
cmc
(bad)
push
xor
sbb
cwde
icebp
leave
test
mov
pop
data16
scas
mov
xor
dec
imul
fdiv
mov
cmp
shld
add
pop
mov
pushf
pop
inc
or
imul
jne
xlat
sbb
imul
adc
std
sahf
dec
or
les
out
imul
xchg
lahf
add
jp
mov
mov
enter
push
push
ins
xor
mov
ja
es
push
icebp
lock
mov
pop
push
push
mov
push
jno
das
ret
sbb
cwde
mov
hlt
jg
int3
xchg
jno
dec
bound
lahf
dec
inc
mov
stos
cs
sbb
add
push
les
xchg
inc
cwde
push
bound
test
enter
ret
sti
loop
jg
ins
jmp
cmps
addr16
push
popa
rcl
mov
push
xor
mov
mov
xor
shl
div
ret
stc
pop
inc
or
sub
push
int
(bad)
jg
ds
out
jmp
jae
adc
pusha
jecxz
mov
(bad)
mov
in
ss
sub
pusha
mov
sar
sbb
(bad)
adc
mov
xchg
xchg
stos
pop
mov
or
xchg
test
adc
in
adc
mov
movs
adc
sub
cwde
(bad)
and
and
pop
das
jg
jle
sahf
les
jmp
pop
mov
push
or
jbe
push
mov
cwde
push
mov
lods
(bad)
dec
mov
loop
fmul
xor
ss
xor
cmc
pushf
cmc
push
pop
or
push
pop
jae
adc
gs
jle
aad
adc
inc
arpl
mov
(bad)
push
pop
in
cli
ror
sub
and
push
xchg
push
std
js
imul
retf
sbb
retf
test
xchg
fidivr
mov
jmp
inc
nop
add
add
sbb
mov
call
icebp
mov
pop
mov
add
xor
cmp
ins
mov
xlat
rol
cmps
or
pop
sub
jle
inc
and
call
jmp
in
shr
xchg
cmp
mov
dec
(bad)
xchg
pop
adc
jmp
mov
mov
mov
add
jne
(bad)
das
int3
xchg
mov
jle
jmp
cwde
loopne
into
out
pop
ret
pushf
shl
daa
mov
sti
aaa
ins
push
xor
and
add
das
fild
adc
out
sar
and
ffreep
arpl
cmc
fsub
mov
je
das
cmp
loope
jb
mov
call
pop
bound
cmp
push
test
in
inc
and
push
jg
mov
or
inc
pop
push
push
sbb
add
xor
cli
fsubr
cmp
mov
cmp
fcomip
add
sbb
imul
and
dec
sbb
mov
dec
xchg
cli
or
sar
test
aad
push
rol
jo
pop
push
iret
and
int
in
aaa
pop
cmp
shl
popf
scas
icebp
fnstsw
lds
ja
mov
add
xchg
addr16
sub
mov
cdq
or
jmp
inc
add
test
cs
sub
dec
pop
jp
clc
inc
mov
and
mov
lahf
jns
or
adc
stos
call
or
into
inc
jo
xchg
or
inc
movs
icebp
mov
outs
sub
jmp
int3
call
jne
repz
adc
sbb
xor
push
rcr
shl
ret
(bad)
or
and
adc
or
out
rcl
out
mov
pop
xor
nop
add
fcom
jg
daa
push
es
cwde
fst
stos
push
mov
push
cmp
aam
sbb
mov
jo
jle
xchg
jb
mov
pop
cmp
jbe
fs
xor
adc
dec
sti
into
mov
xchg
or
(bad)
aam
pushf
into
pusha
push
mov
stc
pop
and
inc
icebp
repz
mov
mov
jbe
mov
add
add
lahf
xchg
repnz
loopne
je
(bad)
mov
jb
add
out
aas
dec
psubw
push
push
xchg
and
adc
(bad)
and
pop
sti
cdq
mov
retf
sbb
ror
inc
shr
pop
enter
es
jbe
pop
xchg
leave
mov
shl
fcom
repnz
nop
dec
push
sub
fnsave
sahf
adc
sbb
cmp
je
ja
cwde
mov
stos
sbb
sbb
inc
pop
jge
stc
int3
push
setg
scas
(bad)
rcr
dec
push
cmp
sub
ds
xchg
sahf
xlat
mov
or
ins
push
push
pop
loope
cmp
push
mov
enter
xor
pop
mul
out
icebp
shl
popf
repnz
(bad)
enter
push
ja
leave
(bad)
mov
jb
cmp
mov
fisubr
stos
out
add
nop
mov
xor
out
mov
cdq
imul
adc
push
inc
adc
xchg
pop
test
imul
xlat
xor
sbb
sar
xchg
fs
(bad)
xchg
xor
add
aam
mov
inc
(bad)
push
sub
or
jl
cmps
pop
pop
mov
inc
mov
sti
lods
pop
les
(bad)
icebp
je
std
enter
xlat
add
fldcw
push
dec
cmp
arpl
rol
dec
and
pushf
aam
shl
stos
idiv
push
lock
mov
fcom
jecxz
xor
sub
lock
or
movs
cwde
pop
iret
cwde
push
pop
jbe
mov
(bad)
sahf
or
mov
pop
adc
retfw
mov
clc
sbb
in
mov
sub
cmp
icebp
dec
repz
arpl
push
out
jg
and
add
or
shl
adc
dec
jns
jbe
popa
icebp
(bad)
adc
jle
jae
inc
jmp
xor
push
jecxz
push
adc
lds
cld
ins
xlat
ins
cwde
sbb
adc
jo
or
test
jl
shr
mov
test
mov
mov
lds
repnz
jno
loopne
loope
mov
xor
dec
ins
pop
daa
bound
movs
push
test
cdq
inc
jg
jmp
clc
jne
lock
aad
dec
popa
scas
push
mov
(bad)
or
rcl
bswap
in
(bad)
fisubr
jnp
mov
sbb
fdiv
add
xchg
test
jmp
ins
(bad)
(bad)
fstp
inc
int
lahf
movs
out
xchg
sub
scas
push
push
imul
popf
jb
push
xchg
std
mov
fisub
add
in
nop
shl
and
and
fisttp
xchg
xchg
pop
push
adc
mov
in
mov
pop
lahf
ins
dec
pop
stos
nop
addr16
ret
call
inc
ss
mov
mov
dec
add
mov
mov
lods
pop
mov
inc
shr
(bad)
icebp
cmp
inc
cmovp
cli
movs
inc
ret
imul
into
outs
lahf
pop
and
jae
rcr
fimul
in
jecxz
mov
outs
xchg
sbb
stc
sbb
push
cld
mov
dec
loope
ror
cmp
pusha
clc
cmp
mov
mov
or
(bad)
out
sbb
or
adc
das
cmp
neg
cmp
add
add
jge
pop
hlt
ret
mov
add
inc
(bad)
int3
nop
loope
jb
and
cmp
xchg
cli
adc
sbb
pushf
add
jecxz
sub
pop
imul
dec
pop
adc
push
dec
clc
jne
dec
shl
pop
test
mov
fwait
adc
mov
shl
add
push
mov
movsx
call
mov
add
sub
or
mov
pop
ins
cmps
xor
xlat
cmps
(bad)
jbe
mov
stos
xor
addr16
leave
leave
movs
test
rep
jns
cmps
mov
xchg
xor
or
sbb
idiv
pop
rcr
cmp
je
or
jge
sahf
mov
js
cdq
rcr
fwait
ret
adc
adc
repz
nop
ins
je
and
mov
xchg
inc
aad
std
fcom
sub
out
pop
sbb
cwde
mov
push
sbb
or
and
(bad)
mov
xor
data16
enter
sbb
xor
inc
mov
jne
cmp
jg
jp
xlat
push
xchg
inc
int
xchg
lock
add
xchg
jbe
imul
or
push
movs
mov
call
pushf
and
ret
dec
adc
test
adc
call
imul
shr
add
sub
push
out
stc
pop
ds
push
mov
inc
xchg
bound
outs
push
jo
ss
cwde
inc
leave
ja
mov
and
lods
rcl
imul
push
lds
sub
movs
arpl
fcomp
cmp
cli
mov
test
jg
into
mov
push
sbb
xchg
movs
inc
lea
adc
into
adc
retf
adc
repnz
movs
stos
and
mov
jl
fmul
push
gs
(bad)
xlat
mov
sbb
loope
mov
mov
pop
repz
daa
xchg
loop
fimul
xor
dec
pop
jge
jbe
lds
cld
push
loop
sub
enter
je
jp
mov
int
cmp
inc
sub
pop
(bad)
mov
mov
dec
mov
lock
int
(bad)
sti
shl
sbb
adc
add
mov
stos
dec
push
sub
scas
sar
xchg
cmps
sbb
jl
add
push
and
xor
je
aaa
or
or
cmc
mov
push
repnz
inc
int
ds
mov
xchg
in
sub
mov
jl
jnp
outs
mul
fs
jno
jp
jb
jp
gs
hlt
adc
xchg
aad
sbb
scas
xchg
mov
xchg
adc
cmc
mov
(bad)
or
cmp
push
shl
(bad)
fiadd
jg
push
mov
loopne
in
adc
hlt
mov
aaa
ins
sti
pop
push
or
xchg
jmp
xor
lods
les
jecxz
cs
fisttp
aaa
xchg
iret
inc
mov
hlt
sti
mov
dec
sub
int
stos
sub
jne
add
adc
imul
dec
int3
adc
jmp
aaa
rcl
sysret
jne
jbe
xchg
xchg
cs
lahf
stos
sbb
out
or
shl
sbb
sahf
mov
lds
sub
(bad)
les
movs
add
stos
jp
mov
push
pop
cld
sbb
aas
pop
jp
adc
inc
rcr
retf
mov
sub
pop
rcr
int3
adc
sub
and
out
movs
cmp
pushf
sub
jge
scas
add
outs
sub
repnz
shr
mov
cmp
jb
mov
js
or
hlt
add
sbb
fsub
mov
jmp
fdiv
sbb
xchg
push
or
popf
or
or
jno
jecxz
ins
ins
movs
ss
inc
xchg
adc
dec
mov
push
add
cmp
mov
sub
lahf
and
adc
test
shr
sub
mov
add
(bad)
or
sbb
arpl
out
in
jp
or
inc
xor
(bad)
out
xor
shr
cmp
(bad)
bnd
xor
xchg
jne
fcmovb
out
mov
pop
fadd
les
test
mov
movs
out
mov
cs
or
xchg
(bad)
sbb
sub
sti
cmps
(bad)
daa
test
in
xchg
loope
push
sbb
sti
xor
sbb
inc
out
rcr
in
int
push
outs
dec
(bad)
pop
push
je
cmc
cs
mov
icebp
es
movlps
lahf
addr16
outs
inc
hlt
pushf
test
or
push
shl
das
and
cmp
mov
adc
xchg
mov
ins
inc
ds
jae
shl
pop
ret
ins
xor
push
mov
or
mul
cld
or
sub
add
xor
ins
inc
sub
cvtps2pd
dec
bound
popa
sbb
(bad)
pop
pop
sub
dec
adc
sbb
dec
mov
test
xchg
aam
dec
jns
aam
leave
push
xlat
ins
mov
popf
loop
xchg
cmp
jns
retf
push
std
sub
cmps
mov
stos
retf
inc
shr
fwait
add
je
nop
ja
inc
inc
fstp
stos
aad
gs
mov
inc
loop
sbb
(bad)
push
stc
sbb
cmp
pusha
push
add
jns
popf
scas
xchg
sub
rol
repnz
fdiv
mov
or
(bad)
mov
test
xchg
in
push
sbb
push
scas
lea
retf
push
bound
jg
xor
pushf
mov
loope
ss
sub
push
pop
mov
xchg
shl
fld
int
jg
call
mov
dec
fs
mov
(bad)
sti
pop
das
lea
inc
and
sub
inc
mov
sub
arpl
adc
jle
das
int3
pop
bound
test
push
jle
imul
(bad)
or
jp
pop
or
xor
ret
movs
lahf
out
icebp
js
push
lahf
dec
and
add
xchg
daa
jg
dec
jne
fdivrp
mov
sti
das
(bad)
pop
jl
mov
cmp
push
call
sbb
(bad)
outs
sahf
fild
repnz
mov
push
xor
mov
and
std
out
pop
mov
push
or
jns
mov
pop
repnz
push
shl
aad
xchg
mov
add
cmp
iret
jo
jl
arpl
mov
sbb
call
push
xchg
or
mov
inc
jo
in
test
mov
popa
mov
test
push
jge
cmp
cmc
cmps
inc
sub
sahf
loopne
pop
push
add
jle
xor
xchg
push
mov
sub
xchg
xor
dec
cmp
imul
mov
mov
les
call
imul
icebp
or
mov
out
das
arpl
or
int3
scas
or
dec
fidivr
imul
inc
xchg
lods
mov
mov
cmp
iretw
sub
jnp
sub
and
int
loop
push
inc
push
rcl
dec
xchg
aas
sub
push
fcom
cmp
and
in
xor
sbb
or
aas
or
mov
(bad)
jmp
lods
js
mov
ins
xchg
xor
xchg
lods
daa
ss
bound
leave
mov
mov
jmp
sbb
pop
test
mov
pushf
pop
add
adc
rol
cmp
shl
(bad)
mov
loop
int
mov
rcr
and
imul
cwde
mov
lods
(bad)
and
arpl
jnp
push
sbb
mov
sub
loop
cmp
adc
xor
addr16
pop
jnp
sti
shl
jns
fld
mov
pop
mov
lea
bound
push
mov
aad
cli
and
push
cmps
and
in
inc
inc
ss
cmc
mov
mov
mov
jbe
sbb
mov
inc
jno
stc
xchg
out
adc
ins
test
pop
mov
repnz
fcomp
mov
mov
pop
aam
xchg
mov
std
sbb
jae
ins
cmps
xchg
push
add
les
add
bound
mov
cs
jb
cld
fmul
fsubr
mov
pop
add
or
xchg
ret
push
dec
aas
cdq
repnz
rcr
cdq
sbb
or
cdq
ds
mov
ret
popa
add
jmp
ud0
inc
jl
test
jp
repnz
das
js
mov
rcl
cmps
cmps
push
pop
in
push
sbb
lods
ins
pop
and
cdq
jle
or
jb
sbb
adc
stos
sub
push
dec
jl
js
fmul
or
push
int
out
pop
stos
xlat
rcr
sbb
mov
pop
mov
lds
sub
sub
sub
test
std
(bad)
cmc
das
ret
push
jge
cmp
xor
pop
icebp
cmp
sqrtps
out
cmp
loopne
or
call
nop
loopne
or
sub
in
dec
popf
push
daa
push
fild
and
pop
xchg
fisttp
mov
sub
fisttp
pop
mov
or
jne
std
or
push
sub
jp
js
add
repnz
pop
add
and
inc
or
enter
jle
ins
sbb
hlt
loopne
int
test
dec
or
and
int3
inc
sbb
and
sub
xor
fistp
inc
das
data16
xor
adc
ja
cmp
xchg
scas
pop
push
or
cmps
or
les
popf
(bad)
jnp
xor
adc
xor
in
mov
dec
in
in
and
ret
jnp
(bad)
retf
xchg
movs
repnz
cmp
lods
mov
nop
punpckldq
mov
and
cmp
sahf
in
popa
hlt
or
int3
sahf
into
lea
stos
lahf
sahf
mov
jle
or
mov
fisub
mov
xchg
int
arpl
dec
ret
push
mov
cwde
dec
and
(bad)
dec
sar
mov
push
cmp
jbe
push
in
dec
adc
jnp
inc
and
sub
lock
enter
or
sar
mov
jbe
aad
fdivp
lods
jl
fsub
sbb
test
jle
dec
lds
lods
in
fcom
jmp
lods
jle
adc
jb
cdq
iret
stc
jne
icebp
mov
adc
adc
jg
daa
xor
fisub
sbb
pop
into
adc
add
fild
jno
mov
xchg
les
mov
nop
inc
js
aam
cli
add
not
(bad)
cmp
(bad)
fsub
ss
dec
mov
sub
add
loope
jmp
push
arpl
aaa
adc
xchg
dec
xor
ret
mov
dec
inc
cmp
inc
xchg
test
(bad)
pop
paddsw
jmp
mov
push
es
pushf
and
fcmove
mov
fadd
mov
lods
rcl
imul
mov
jnp
pop
adc
jp
daa
fstp
retf
or
icebp
mov
push
repz
sub
cmc
cld
jmp
hlt
js
xchg
bound
int
jl
into
lock
mov
scas
inc
repz
sets
in
jb
rcl
mov
jl
cmp
push
push
lahf
push
jecxz
adc
movs
test
push
inc
push
fs
mov
sub
ss
and
or
stc
lock
adc
mov
mov
ror
jp
cmc
shl
dec
mov
cmps
fsubr
jecxz
push
or
shl
in
or
popa
dec
pop
dec
jmp
sbb
in
ja
inc
daa
xor
pop
lods
out
sbb
mov
fisttp
test
cmp
imul
sub
in
and
or
cmp
loopne
cdq
xchg
(bad)
fwait
jmp
pop
fnstsw
cmps
sub
pop
xchg
stos
aaa
leave
in
xchg
pop
(bad)
idiv
mov
or
sub
outs
sbb
lock
sbb
dec
xchg
jp
adc
scas
cld
cmps
cmp
adc
loope
cmp
add
jne
mov
sub
mov
div
out
fidiv
addr16
mov
repnz
cdq
push
jle
les
push
cli
fdivr
bnd
push
push
or
push
lods
in
mov
or
inc
retf
out
mov
hlt
stos
mov
in
or
rcl
adc
push
mov
test
jnp
mov
stc
aaa
repz
icebp
sbb
ins
sbb
dec
sahf
sbb
rcl
test
outs
inc
xor
repz
mov
lds
cmp
add
dec
in
mov
dec
push
mov
add
out
shl
sub
jecxz
mov
sbb
fcomp
das
(bad)
jp
xor
shr
aam
mov
(bad)
fcomp
jne
sbb
mov
aad
(bad)
movs
pusha
jno
sub
fnstcw
add
sbb
inc
scas
adc
inc
dec
or
or
pop
(bad)
xor
inc
dec
xchg
cmps
cmovae
enter
(bad)
data16
mov
sti
addr16
xchg
jmp
add
fstp
mov
jne
mov
leave
mov
gs
jmp
jb
repz
dec
xchg
test
pop
add
push
fs
mov
adc
mov
cmps
jns
mov
vpsubd
std
test
sar
mov
pop
pusha
xchg
out
loope
fimul
int
rcl
jae
popa
jo
sub
jecxz
clc
nop
lahf
pop
out
or
add
(bad)
pusha
pushf
mov
push
xchg
ins
sbb
pop
sahf
push
cdq
add
inc
inc
inc
mov
xor
test
sbb
mov
mov
xchg
push
fimul
fisubr
mov
dec
lods
test
mov
lock
mov
dec
and
(bad)
xor
add
dec
mov
jae
xor
mov
adc
jo
push
clc
pop
hlt
jle
aam
(bad)
bound
test
push
inc
lock
mov
call
or
iret
(bad)
cld
scas
add
lods
jne
cs
js
mov
pushf
mov
test
mov
lods
(bad)
out
inc
stos
ss
int3
sub
adc
jne
scas
sub
sub
leave
and
mov
xchg
bswap
hlt
imul
jns
fcmovnu
xlat
and
dec
mov
popa
mov
xor
stc
pushf
add
dec
mov
das
mov
scas
sbb
ror
rcl
loope
mov
mov
sbb
test
xor
fadd
dec
and
sahf
dec
mov
push
call
dec
jmp
pusha
pop
dec
ret
pop
test
and
mov
jge
les
dec
cs
cmp
sub
jg
push
mov
mov
ret
mov
cwde
(bad)
fisttp
xor
repz
js
or
push
sub
pop
aas
sbb
inc
int3
push
jmp
js
lea
arpl
mov
sahf
pop
out
nop
mov
jo
popa
shl
sub
loop
stos
ins
ins
jecxz
rcr
mov
cs
xor
xchg
mov
jp
xchg
arpl
and
jnp
popf
in
mov
or
aad
and
scas
push
sub
jp
lds
dec
cli
mov
mov
sub
mov
ds
popa
fidiv
cdq
sub
push
into
dec
sbb
cmp
in
mov
popf
in
lds
xchg
push
nop
dec
sub
ficom
je
xor
stc
lods
push
int3
fmul
sub
call
add
mov
ficomp
aam
jl
adc
jnp
mov
or
icebp
je
inc
out
mov
adc
lods
shr
mov
xor
cdq
fisttp
or
dec
push
and
popa
add
mov
mov
inc
adc
sub
dec
and
(bad)
cdq
icebp
inc
mov
iret
int
pop
test
cld
sbb
add
aam
or
jle
add
adc
mov
cmp
pop
stos
mov
sub
je
out
xchg
sbb
dec
inc
adc
fstp
and
aam
js
mov
jns
movs
xor
and
sbb
jno
mov
push
jl
ins
sbb
aad
clc
and
fistp
cmp
mov
mov
lock
mov
xchg
pop
jo
cdq
nop
cld
xor
xchg
or
xor
sahf
cld
xchg
mov
int3
fstp
xchg
test
pop
out
dec
push
popf
cmp
inc
sbb
daa
dec
inc
jg
cs
test
jmp
lds
adc
das
pushf
test
xchg
mov
xor
scas
mov
stc
das
pop
stos
pop
push
hlt
cdq
sub
dec
push
jb
xor
enter
cdq
jno
aad
and
dec
push
xchg
xor
add
push
adc
fidiv
adc
push
loopne
mov
pop
mov
inc
ins
sbb
jmp
into
fild
cmp
mov
jmp
mov
inc
cmp
std
mov
and
and
mov
in
add
push
sub
movs
dec
adc
jg
xchg
push
std
and
jle
les
mov
stos
mov
(bad)
mov
lahf
xor
jmp
adc
outs
xor
sub
add
pop
je
hlt
push
lea
sub
xchg
dec
inc
mov
and
stc
adc
(bad)
fnstcw
imul
test
js
xor
sar
sbb
test
dec
dec
xchg
sub
jo
pop
mov
(bad)
jne
cmp
cmp
mov
out
add
mov
es
cmp
add
rcr
ror
or
adc
and
lds
push
adc
lds
(bad)
in
sbb
sub
and
arpl
sub
push
pop
add
and
mov
push
mov
sub
(bad)
pop
xor
inc
imul
cmc
sub
jmp
mov
pop
xchg
push
pop
or
ret
add
cmc
in
aaa
mov
lods
add
shl
ret
fcomp
out
and
and
mov
cld
inc
jns
gs
pop
pop
mov
inc
je
mov
scas
mov
repnz
mov
fstp
(bad)
loop
inc
scas
jnp
cmp
push
sub
xlat
rol
in
pop
scas
pop
mov
pop
add
sub
lahf
pop
cmps
add
or
cs
add
cmp
scas
(bad)
or
adc
fild
test
(bad)
mov
js
mov
xchg
scas
aad
jge
or
sbb
mov
adc
mov
shr
sub
add
cdq
inc
js
pop
out
mov
fld
push
xor
or
mov
mov
lea
add
sti
in
jnp
int3
add
lahf
stc
sub
jle
(bad)
shr
push
je
mov
push
jb
pop
mov
pop
jecxz
and
jmp
mov
mov
cmp
mov
(bad)
iret
ret
pop
push
out
(bad)
ins
shl
es
and
push
mov
outs
data16
mov
cld
sub
pop
and
jbe
pop
loope
or
jecxz
pop
fstp
add
xor
mov
adc
jae
adc
jmp
movs
popf
lods
xor
test
mov
les
cmp
or
imul
push
imul
pusha
xor
imul
test
aad
ret
mov
rcl
ds
nop
movs
jns
mov
cmp
movs
pop
ret
cmps
mov
cmp
enter
clc
adc
cli
out
pop
inc
adc
mov
cld
xchg
clc
xchg
and
mov
rcr
push
sti
call
shl
shl
idiv
mov
inc
idiv
push
push
push
jae
jmp
jg
mov
mov
adc
xor
or
js
add
mov
or
stos
jns
pop
pop
jns
mov
das
or
in
add
dec
xor
gs
in
sub
icebp
inc
sub
sub
mov
out
pop
cmp
dec
pop
ins
dec
jb
jecxz
and
sbb
push
sub
cld
or
repnz
mov
(bad)
out
push
fs
cmp
inc
dec
inc
cmp
clc
fiadd
push
rcr
or
xor
in
cmc
sub
mov
xlat
add
sbb
jae
and
sbb
int3
jp
push
fcomp
test
aam
xchg
aam
or
int3
and
(bad)
adc
dec
fcom
inc
pop
std
cli
jmp
pop
adc
sahf
pop
out
jno
popa
ins
test
cmp
ss
jge
inc
or
sbb
fsubr
xchg
mov
push
shl
cmps
dec
les
hlt
or
pushf
(bad)
mov
aas
inc
inc
ret
xchg
or
jmp
scas
shl
(bad)
jae
add
repnz
push
cmp
mov
push
fistp
cmc
xchg
stos
ss
inc
xchg
push
enter
outs
icebp
leave
and
mov
inc
mov
jb
mov
in
clc
leave
jle
enter
enter
jmp
gs
mov
jne
pop
jg
out
xchg
or
dec
or
dec
mov
(bad)
fdiv
mov
(bad)
xchg
rcr
rol
mov
add
cdq
shl
jae
fcomp
sbb
adc
sub
stos
mov
mov
test
sbb
popf
daa
jmp
mov
adc
movs
jg
push
leave
sar
pop
sbb
push
adc
xor
xor
inc
push
setg
mov
push
dec
std
ror
or
mov
and
imul
stc
jno
shl
and
test
cmc
enter
push
fnstenv
sub
jmp
jp
or
gs
push
dec
imul
test
adc
cs
scas
cmp
push
mov
add
enter
pop
cmp
push
sub
lock
mov
stos
jle
loope
pop
pxor
aaa
das
lahf
cmc
mov
inc
mov
and
add
push
aad
popa
xchg
pop
in
push
outs
in
fist
and
sbb
sub
and
mov
arpl
cmp
ins
test
xor
cmc
ret
stos
int
fwait
pop
outs
push
jae
nop
push
aad
jle
dec
pop
aam
ret
cmp
mov
adc
popa
pop
repz
sbb
cmp
es
jl
sub
movs
stos
add
retf
lods
aad
cli
jmp
pop
test
push
call
xchg
lods
cmp
add
add
mov
imul
lahf
jo
push
pop
(bad)
aam
dec
cmp
pop
mov
dec
adc
and
pop
jnp
(bad)
fild
mov
sti
in
mov
adc
xlat
out
xor
push
not
test
and
and
jae
fld
push
mov
and
popf
inc
imul
out
push
cmp
(bad)
(bad)
push
add
push
push
jnp
mov
pop
sbb
jnp
in
loop
dec
adc
popa
cs
int3
xor
sbb
leave
loopne
stos
or
(bad)
repz
and
cmps
mov
push
or
push
mov
jge
lds
adc
mov
inc
mov
out
xor
push
mov
cmps
mov
fsub
push
shl
mov
pushf
scas
dec
inc
pop
addr16
push
data16
iret
inc
call
pushf
mov
jmp
add
lea
in
dec
test
mov
jnp
mov
push
sub
jle
iret
call
adc
or
dec
pop
std
cdq
and
and
add
sub
dec
mov
imul
std
ror
or
js
rol
xlat
into
cli
xchg
or
and
scas
pop
(bad)
leave
in
cs
sub
push
mov
cmps
jl
mov
cmp
fidivr
sub
mov
and
(bad)
or
ins
(bad)
sbb
aad
int
ds
int3
rcl
out
(bad)
call
pop
(bad)
iret
addr16
mov
js
adc
jbe
xlat
mov
test
xchg
cmps
nop
mov
mov
retf
sub
mov
inc
inc
hlt
cmp
mov
and
loope
repz
jnp
ins
sti
fwait
pop
inc
aad
add
add
xchg
(bad)
hlt
imul
jno
push
les
xchg
dec
sbb
cli
mov
pop
shl
sbb
addr16
push
mov
std
int3
shl
sbb
gs
add
imul
pusha
jl
pop
out
cmp
adc
pop
cmp
dec
cli
pop
pop
or
sub
outs
ins
neg
sub
mov
(bad)
call
mov
ja
lods
in
add
or
test
sahf
addr16
cli
arpl
add
mov
xor
cmp
dec
ror
pop
imul
out
(bad)
pop
cmp
movs
sub
adc
mov
aad
rcr
loop
scas
dec
dec
(bad)
jl
fcmovnu
(bad)
aam
inc
loopne
push
ins
add
test
or
xlat
call
scas
call
dec
arpl
mov
xchg
stc
mov
outs
pushf
lock
mov
ja
cli
xor
pop
push
xor
data16
and
xor
je
pop
push
fisttp
mov
pushf
enter
mov
push
lods
sub
inc
mov
retf
movs
pop
pop
sub
arpl
adc
inc
into
fisubr
pop
out
cs
ss
scas
lods
sub
pop
ror
xlat
mov
aad
lods
fadd
jmp
clc
push
in
jnp
dec
or
sbb
and
das
(bad)
push
ret
call
inc
stos
cmp
rol
call
mov
nop
jmp
out
add
fisub
mov
and
dec
rcr
push
mov
stos
dec
push
xor
fs
popa
jmp
xlat
add
mov
int3
nop
dec
dec
ret
jno
out
and
adc
imul
add
mov
ffree
mov
xor
dec
or
xchg
cdq
prefetch
mov
sub
inc
daa
jbe
jl
sbb
clc
jl
or
add
iret
lock
push
push
pop
mov
sbb
push
stc
pop
mov
and
pop
and
nop
cmps
stos
adc
push
(bad)
dec
jmp
inc
xchg
(bad)
mov
mov
dec
cmps
cmps
mov
mov
repnz
mov
nop
mov
inc
data16
sbb
xchg
outs
sbb
jp
xchg
out
jl
push
stc
test
dec
gs
fsub
mov
dec
fcom
ss
stos
pusha
dec
push
enter
inc
dec
gs
jns
sbb
xor
stc
outs
pop
pusha
push
test
into
and
int
jbe
repz
ret
jmp
push
addr16
fld
je
cmps
jecxz
jp
outs
ins
mov
lock
scas
xchg
xchg
pop
dec
xchg
or
fwait
sub
ins
(bad)
test
xor
sbb
popf
lods
neg
or
push
scas
shr
cmp
(bad)
loop
enter
stc
dec
lds
imul
out
jb
xchg
or
test
sbb
fcmovnbe
shl
cmp
mov
inc
repnz
outs
ja
fnstsw
pop
pop
hlt
stos
sub
mov
pop
icebp
sbb
mov
jnp
(bad)
jmp
in
mov
imul
out
popa
xchg
xlat
dec
push
imul
mov
lea
shl
mov
jl
test
push
push
xchg
cmp
bound
(bad)
fbstp
cmp
fadd
(bad)
sbb
cmp
scas
(bad)
sbb
out
xchg
je
xchg
adc
outs
pop
push
dec
mov
and
pop
mov
inc
or
shl
div
shl
inc
frstor
and
fld
xor
mov
repz
dec
dec
add
ss
daa
sahf
mov
and
and
lods
xor
ja
lahf
dec
sbb
(bad)
add
dec
push
push
outs
cld
push
imul
pop
pushf
add
iret
retf
jnp
int
jno
loope
int3
mov
bound
push
mov
push
push
repz
mov
dec
mov
fwait
adc
and
outs
cld
retf
(bad)
loopne
dec
dec
repnz
ficomp
mov
cmps
fsubr
(bad)
fdivr
call
mov
pusha
jbe
(bad)
scas
test
outs
stos
inc
lea
ds
cwde
mov
aam
test
shl
xchg
lea
imul
dec
and
outs
pop
xchg
sub
mov
and
dec
mov
(bad)
inc
pusha
imul
jnp
mov
(bad)
push
repnz
aaa
ret
or
out
dec
or
sbb
inc
push
mov
sub
ret
add
push
outs
sti
call
in
aaa
out
mov
int3
sahf
cld
mov
fsubr
xor
adc
ret
sbb
ja
sbb
jle
jo
xchg
mov
sbb
out
inc
fcomp
dec
ds
add
fucom
jbe
jle
hlt
xchg
loopne
or
or
loop
push
jne
dec
mov
aad
outs
mov
int
mov
shl
ins
icebp
sub
pop
pusha
mov
xchg
stos
mov
pop
sub
dec
pop
call
mov
mov
fidiv
dec
push
sahf
push
movs
inc
adc
mov
add
lea
mov
or
adc
sub
xor
push
or
pop
call
ins
jge
cmps
jb
loopne
ret
jge
cmp
out
add
cld
imul
adc
rol
and
dec
sbb
mov
cmp
and
add
dec
(bad)
cli
mov
imul
movs
jmp
jmp
fcmovnbe
ss
xchg
pop
imul
cmp
ins
jmp
and
mov
cmp
or
std
sub
mov
push
out
add
mov
dec
sbb
push
je
movs
imul
outs
lods
loope
fdiv
repnz
ficomp
xor
pop
or
push
or
cmp
das
cmc
sub
push
bound
cmp
add
sbb
pop
and
es
dec
addr16
pushf
(bad)
jg
lock
sbb
xor
(bad)
inc
addr16
outs
jge
cmp
popa
out
inc
and
fst
xor
dec
nop
pop
sub
and
xchg
clc
dec
test
fadd
(bad)
js
imul
dec
jmp
sbb
push
cmp
bound
and
inc
push
mov
cld
and
push
shl
xlat
adc
pusha
pop
imul
lods
test
enter
(bad)
out
aaa
ret
ja
xor
(bad)
out
add
fisub
jno
sbb
sub
iret
cmp
(bad)
(bad)
arpl
fdivr
adc
mov
aad
adc
mov
xchg
push
fstp
add
or
push
test
xor
or
sub
push
test
aam
sbb
aad
xor
retf
ds
jmp
call
mov
movs
mov
add
sbb
dec
sub
aam
sbb
sub
cmp
data16
xchg
push
inc
cmps
shr
add
dec
xor
mov
cmp
aam
pop
push
stos
cmps
ins
mov
out
jnp
shr
sar
call
(bad)
push
mov
aam
aad
push
jmp
lods
inc
(bad)
pop
cmp
jne
push
fwait
sbb
push
pop
(bad)
js
dec
sbb
dec
mov
xor
xchg
xlat
ds
mov
inc
das
mov
(bad)
jne
pop
rcr
cmc
jge
fcomp
sub
fsubr
mov
dec
dec
xor
sub
dec
push
push
shr
ret
inc
jae
inc
rcl
adc
loopne
jnp
or
lods
fisttp
es
or
ror
retf
jo
call
in
ret
outs
jg
cmps
aaa
cmp
xor
jle
aaa
(bad)
cmp
push
sub
iret
mov
pop
dec
test
(bad)
(bad)
jp
sub
lods
jge
mov
mov
inc
cmp
leave
dec
mov
sbb
mov
call
in
dec
rcl
nop
outs
lahf
aaa
cmp
jp
xchg
sub
clc
cmp
inc
je
sub
xchg
add
jp
fisubr
retf
add
push
movs
mov
jmp
pop
imul
or
stos
mov
rol
test
add
cmp
hlt
outs
jmp
or
fild
sbb
out
inc
clc
outs
int
pop
push
pushf
stc
xchg
lahf
dec
gs
push
in
push
jns
mov
test
dec
adc
pop
sub
dec
in
xchg
sub
loopne
mov
jnp
and
push
mov
int3
dec
pop
adc
fimul
pop
pop
dec
bound
xor
sti
int3
mov
mov
jb
hlt
cmp
xchg
or
cmp
nop
pop
fcmove
jns
in
outs
scas
cld
jecxz
into
adc
mov
jnp
and
movs
pushf
fwait
xchg
xchg
inc
(bad)
ins
int3
xor
sti
repz
xor
jl
pop
push
loope
sub
mov
cs
rcr
jbe
mov
add
add
retf
mov
(bad)
fcmovnb
clc
pop
xchg
mov
shl
sbb
rcl
xor
push
pop
mov
out
fistp
(bad)
mov
in
or
mov
sahf
mov
in
add
cmp
and
or
outs
cmp
or
mov
cs
ret
cmp
aaa
inc
cmps
adc
mov
mov
ss
clc
daa
aad
xchg
std
mov
pop
cli
repnz
add
imul
inc
add
add
push
iret
stos
jp
pop
inc
ins
fst
dec
test
push
dec
and
aad
shr
pop
stos
ja
push
pop
adc
mov
ret
mov
in
push
fs
cmp
imul
inc
retw
das
pop
xchg
repz
dec
add
lods
les
das
adc
nop
ins
xchg
dec
loope
cs
pop
sbb
adc
inc
pop
mov
mov
out
(bad)
fstp
loop
pop
rcl
inc
out
xchg
pop
fprem1
jmp
iret
test
loop
les
in
fcom
xor
xlat
sub
imul
cmps
movs
je
jo
(bad)
jecxz
inc
sub
mov
or
shr
sahf
inc
call
xchg
xchg
out
jno
push
mov
sbb
cdq
stos
inc
dec
mov
mov
pop
push
rcr
mov
hlt
jl
cdq
xor
cmp
ins
xchg
adc
jnp
dec
add
cs
xchg
inc
arpl
shr
lock
out
xchg
out
add
adc
xchg
out
int
cs
xchg
test
dec
imul
and
loopne
mov
mov
jo
(bad)
clc
sbb
pop
cmps
sub
call
sahf
stos
iret
inc
xor
and
xchg
mov
cmp
push
(bad)
shr
sbb
mov
in
xchg
dec
and
dec
aam
icebp
mov
cmc
ss
push
idiv
ror
gs
mov
outs
das
cmps
ficom
xchg
enter
xor
cmps
xor
sub
pop
cmp
cdq
xchg
cmp
cdq
jnp
cmp
mov
mov
scas
push
xchg
pushf
sub
lods
(bad)
not
in
mov
in
adc
outs
fwait
ja
sbb
xchg
outs
ins
or
push
aam
gs
xor
inc
jns
jbe
call
jne
dec
mov
pop
cs
mov
into
bound
and
jb
loopne
jo
enter
sti
iret
mov
sbb
push
mov
mov
jns
jmp
inc
jae
sti
and
lods
or
test
call
ss
push
fild
out
or
sbb
add
or
sbb
xchg
cmp
dec
mov
xchg
stc
lock
and
mov
or
add
dec
stos
push
popf
xchg
test
and
xor
jge
or
xor
cmp
les
dec
cmp
dec
mov
sub
rol
pushf
jg
loop
es
dec
pop
push
sub
xchg
enter
movs
cs
ds
jne
pushf
jp
aam
test
mov
int
mov
dec
stos
cmps
out
ror
jl
mov
sbb
or
xchg
mov
js
mov
sub
movs
fsubr
pop
mov
and
gs
int3
(bad)
repz
cmp
adc
push
inc
sub
dec
cmp
mov
test
test
and
mov
pop
enter
sti
bnd
pushf
fdivr
out
out
and
fidivr
adc
xchg
rcr
fs
sbb
ror
pusha
mov
shl
xchg
jecxz
rcl
call
cmps
mov
gs
repz
dec
adc
jecxz
jmp
dec
movs
cwde
or
(bad)
push
mov
int
jge
je
pushf
nop
rol
cmp
jno
ror
push
int
mov
dec
xchg
inc
inc
aaa
xchg
add
push
sbb
movs
stos
push
aad
jae
mov
ins
mov
sbb
inc
push
pushf
or
in
mov
or
pop
mov
das
mov
(bad)
mov
mov
and
(bad)
aam
dec
xchg
or
mov
adc
test
pusha
push
ret
add
or
pop
pusha
sbb
pop
std
xcrypt-cfb
cmps
cmps
xchg
jmp
jg
or
test
outs
jp
out
int3
aas
enter
xchg
push
cmps
lahf
sti
and
call
sahf
cmc
pop
daa
inc
jecxz
es
pusha
movs
mov
mov
loop
xor
pop
cmp
leave
inc
xor
(bad)
aas
inc
test
adc
sub
cmp
repnz
out
sub
sbb
aas
lahf
(bad)
ror
int
jno
in
icebp
mov
xor
into
sti
pushf
jne
(bad)
jecxz
push
mov
and
push
sar
pop
and
adc
mov
xchg
jnp
or
fs
movs
or
(bad)
sahf
das
popa
sbb
and
loop
push
pop
pusha
fsubr
(bad)
mov
sbb
xor
cmp
jl
or
xchg
ror
cdq
(bad)
inc
mov
jbe
xlat
add
daa
add
test
mov
ret
dec
fs
jle
out
popf
out
adc
push
pop
xchg
jo
mov
dec
sub
mov
scas
cmp
movs
lods
xlat
sub
cmc
inc
(bad)
enter
or
mov
loopne
cmp
push
adc
push
inc
sar
clc
clc
mov
jb
pop
cmp
das
popa
test
push
repz
mov
sub
fldcw
push
repnz
mov
sbb
jmp
mov
xlat
in
adc
call
pop
jno
dec
ror
shl
sti
mov
pop
lods
mov
mov
adc
jle
cwde
bound
in
or
ret
push
aaa
dec
push
and
(bad)
cli
es
jo
xchg
repz
cmps
es
(bad)
shl
dec
mov
outs
adc
xor
aam
push
cwde
aaa
sbb
ret
cld
xor
adc
aaa
xor
or
fwait
push
pop
jmp
pmaddwd
jnp
popf
test
add
pop
jp
sub
stos
nop
in
pop
xchg
adc
repnz
adc
retf
mov
jae
test
and
jo
add
enter
sbb
xchg
pop
stc
inc
dec
mov
mov
cmps
xor
jmp
pop
inc
sbb
push
xor
(bad)
and
xor
pop
adc
mov
daa
loope
icebp
mov
xchg
pop
mov
stos
xor
retf
cld
(bad)
cmp
push
mov
jl
cwde
retf
idiv
push
rcl
adc
data16
sbb
pop
popf
sbb
js
or
cmp
hlt
pop
mov
in
retf
pop
ds
stos
cmc
fsub
out
or
sbb
imul
mov
out
or
mov
jnp
imul
cmp
sar
das
das
jl
leave
outs
add
jmp
adc
jmp
in
ins
ror
inc
es
push
dec
imul
retf
adc
push
popf
pushf
adc
sbb
inc
or
jno
fcmovbe
push
jno
std
fstp
xchg
hlt
in
mov
cmp
aaa
retw
pop
out
mov
push
imul
mov
xchg
and
and
adc
lahf
add
add
mov
imul
mov
xor
cmps
imul
imul
pop
rol
mov
jae
cmp
add
xchg
mov
data16
data16
push
repz
cli
and
push
cmp
ins
retf
rcr
add
and
add
and
(bad)
call
ret
int
call
mov
xor
sbb
and
mov
inc
jne
mov
les
pop
in
daa
inc
jns
in
test
jmp
pop
dec
sub
repz
cmp
test
movs
dec
jp
movhps
adc
add
aas
dec
cs
stos
dec
jb
mov
popa
xchg
cmp
popf
dec
aaa
sub
or
jge
and
pop
or
cs
sub
std
cmp
sbb
cmp
ret
dec
adc
sub
cmps
(bad)
hlt
or
or
add
ins
stos
lods
loop
test
or
std
enter
xor
sbb
jmp
mov
dec
fisttp
xchg
xlat
int
mov
mov
push
pop
jae
lea
sub
jg
adc
in
test
inc
cmps
or
mov
out
push
pop
out
inc
mov
out
mov
xlat
mov
test
in
nop
or
(bad)
adc
jne
cmps
jmp
cs
in
add
xor
outs
and
mov
ficomp
mov
cmp
outs
call
cmp
sub
scas
fstp
adc
push
aam
push
add
imul
into
mov
(bad)
shl
push
sbb
div
int3
imul
jl
icebp
or
je
inc
pop
inc
inc
ja
adc
sbb
shl
std
push
cmp
loope
sbb
mov
xor
jno
pop
mov
repnz
clc
xor
gs
(bad)
jb
mov
inc
mov
popa
in
jecxz
jg
add
ds
cdq
hlt
jb
call
mov
int3
mov
pop
pop
push
jmp
call
popf
sahf
adc
and
pusha
(bad)
cs
push
or
mov
jl
es
pop
int3
push
xchg
ror
and
mov
jne
popa
and
or
jecxz
data16
mov
sbb
adc
jne
int
adc
cmps
nop
div
pop
(bad)
mov
jmp
dec
sub
pop
ror
ja
retf
jge
cmps
pusha
inc
cmp
std
nop
dec
jmp
sti
sti
sub
int3
(bad)
inc
or
and
(bad)
and
das
cmp
cmp
fwait
sbb
in
or
add
ja
outs
popf
icebp
cmp
cmp
dec
fisttp
add
ja
sub
call
in
test
es
push
or
jmp
inc
pop
iret
xchg
and
mov
push
sub
push
cmp
jae
mov
inc
lds
xchg
jo
sub
mov
and
movs
pop
mov
fisubr
mov
(bad)
fidiv
pop
and
xchg
call
shr
xchg
push
sub
sbb
mul
sub
in
sbb
bound
sar
clc
lods
loopne
cmc
iret
ins
push
(bad)
xor
popf
out
push
jecxz
mov
sub
jmp
jne
add
xlat
pop
inc
xchg
int
je
enter
or
dec
xchg
inc
adc
sub
jp
cli
rcr
jmp
mov
in
pop
lds
sbb
pushf
jae
js
arpl
xchg
jl
cmp
sub
add
adc
jbe
sub
inc
dec
pop
sbb
test
daa
test
daa
fnclex
aad
fld1
sub
stos
setno
aad
or
loopne
xchg
inc
leave
es
sbb
or
xchg
and
xchg
push
into
(bad)
sbb
or
cwde
inc
scas
test
add
mul
je
imul
ficom
sub
dec
(bad)
call
imul
arpl
inc
jg
fcmovnb
out
adc
jb
inc
cmc
rcl
add
cmp
or
or
mov
mov
add
sbb
adc
pop
push
adc
mov
and
loop
pop
mov
jl
sar
cmp
add
gs
and
leave
cmc
les
and
lods
mov
or
mov
jbe
mov
pop
sbb
fs
cmp
mov
push
cmp
cmp
aam
loope
fimul
stc
stos
fiadd
cmp
outs
mov
shl
test
mov
add
lods
inc
sahf
sti
movs
mov
dec
mov
inc
ror
xchg
xchg
idiv
stos
sahf
int3
xor
cmps
sti
push
pushf
add
mov
cli
push
sub
in
arpl
lods
out
inc
mov
scas
and
cmp
xor
pop
jl
inc
call
cwd
mov
icebp
mov
stc
push
cmp
pop
in
mov
and
push
push
adc
retf
ret
pop
call
inc
mov
fimul
push
popf
rcr
and
fwait
pop
mov
f2xm1
jnp
(bad)
push
movs
mov
xchg
sbb
imul
or
pop
jle
loope
mov
neg
(bad)
or
test
cwde
jnp
sub
std
xor
xchg
sbb
cmps
pop
ret
cmp
jbe
mov
into
(bad)
mov
adc
xchg
(bad)
lea
mov
scas
pushf
aas
push
jo
push
jbe
push
xchg
gs
xchg
inc
mov
imul
mov
cmp
jbe
and
pusha
sbb
xchg
enter
fnstenv
dec
xchg
or
mov
repnz
bound
data16
ja
hlt
nop
jg
add
adc
mov
or
cwde
movs
jb
mov
mov
in
retf
test
enter
and
jae
cmc
cmp
scas
sub
pop
cmp
add
gs
outs
pop
ds
loope
inc
retf
js
inc
pop
push
jo
test
sbb
mov
scas
push
add
stc
fld
in
cmps
std
cmps
(bad)
sub
in
lods
movs
arpl
out
sti
lahf
test
es
pop
std
sti
lds
xor
jp
fnstcw
xchg
jp
cmps
jo
shl
adc
idiv
pop
sar
retf
or
(bad)
into
or
xlat
out
add
js
imul
fistp
fnstenv
pushf
push
jnp
enter
sub
sbb
out
daa
ret
xchg
jne
outs
aam
inc
inc
cmp
sub
jmp
pop
and
test
mov
jecxz
idiv
ja
cdq
mov
repnz
mov
xor
outs
push
xlat
stc
test
call
mov
fs
mov
in
jnp
jb
cmps
stos
repz
dec
daa
call
xlat
in
mov
test
jo
fisttp
xchg
daa
inc
mov
jecxz
loopne
cmps
clc
fdivr
pop
jnp
bound
pop
inc
xor
movs
jg
jno
rcl
sub
push
cmp
add
stos
dec
mov
outs
out
jbe
mov
addr16
pop
test
cmp
jns
repnz
data16
shl
inc
adc
pop
stc
add
or
mov
in
xchg
jne
mov
jmp
cwde
les
jbe
push
add
into
cmp
jmp
jbe
and
pop
fisttp
sub
or
es
xchg
jnp
call
shl
sti
int
or
pusha
ss
mov
out
call
xchg
dec
dec
sub
dec
sar
jl
es
lock
cdq
ja
loope
outs
adc
mov
data16
cmc
jg
shl
rol
or
cld
sbb
add
add
jns
mov
sub
retf
xchg
in
mov
pusha
inc
(bad)
dec
pop
popa
arpl
adc
jp
add
sbb
shl
inc
jle
sbb
fist
out
dec
sahf
jno
cdq
fsub
pop
sbb
cmp
adc
aaa
mov
dec
jne
pop
push
adc
jmp
push
js
xchg
sub
or
xor
adc
int
jmp
out
aaa
jne
jg
sbb
sbb
int3
mov
mov
fwait
push
in
mov
push
jle
sbb
rcl
in
xor
dec
(bad)
(bad)
xlat
cld
sbb
ins
jb
inc
cli
xor
out
jb
add
sub
xlat
jl
mov
es
dec
mov
loop
cld
jp
aad
shl
stos
dec
fs
xchg
aad
sbb
je
xchg
out
mov
das
mov
inc
iret
and
sub
pop
scas
lods
dec
and
scas
into
shr
add
lahf
push
rol
or
jp
les
out
scas
cld
shl
add
test
add
call
gs
cmps
mov
dec
pop
scas
repnz
push
jmp
or
add
clc
or
jmp
cwde
ja
add
sbb
ss
pop
fisttp
mov
jno
xchg
or
mov
sbb
fdivp
scas
ins
push
add
sub
add
icebp
jecxz
lock
or
enter
xchg
leave
or
call
shr
push
ins
scas
outs
push
adc
ss
xor
dec
add
ss
pop
bound
in
inc
inc
and
idiv
(bad)
es
iret
ret
loop
sbb
mov
cld
fistp
and
xchg
mov
mov
mov
xchg
mov
xchg
jmp
xchg
mov
(bad)
out
mov
mov
pop
imul
lods
push
add
sub
mov
dec
or
jo
push
push
retf
cmp
mov
mov
adc
je
in
mov
sbb
mov
cld
enter
cmp
ins
pop
xlat
xchg
jmp
and
fisub
(bad)
mov
xchg
xor
daa
fstp
mov
mov
xor
aas
pop
pop
mov
js
inc
adc
jmp
add
cld
mov
mov
push
inc
das
inc
jp
pop
sbb
jno
inc
pop
fnsave
mov
into
pushf
jge
pushf
addr16
cdq
mov
xchg
pop
(bad)
pop
imul
call
jge
(bad)
scas
or
mul
pop
inc
int
out
xlat
leave
je
or
movs
add
lods
mov
lock
test
add
call
pop
add
jnp
push
imul
fs
imul
push
cmp
xor
pop
cld
cmps
mov
push
jmp
test
adc
inc
ret
fimul
jecxz
sti
xchg
(bad)
sub
dec
gs
mov
aaa
push
mov
(bad)
stos
cmps
push
or
jae
sbb
iret
inc
call
jle
pop
dec
push
in
cmps
unpcklps
(bad)
xor
jecxz
or
dec
adc
sbb
mov
scas
jmp
call
push
arpl
xchg
dec
shr
mul
cmps
push
jge
jne
ja
arpl
(bad)
mov
and
ret
jle
adc
inc
cmp
cmp
loop
das
retf
inc
rcr
fldcw
imul
pop
lock
ds
dec
add
mov
rcr
xchg
cwde
adc
(bad)
or
push
retf
dec
imul
adc
(bad)
ja
dec
add
xchg
mov
outs
xchg
iret
lock
jnp
xor
jnp
popa
jns
retf
xchg
mov
lods
fstp
loopne
aas
shl
push
xchg
and
js
dec
push
inc
jle
(bad)
adc
dec
xchg
mov
pop
fs
js
inc
lahf
push
pushf
xchg
pusha
out
dec
hlt
test
daa
daa
inc
stos
lods
sbb
(bad)
pushf
xchg
gs
ficomp
loopne
fld
aaa
sub
add
in
inc
sbb
(bad)
xchg
(bad)
(bad)
mov
test
pop
dec
xor
xchg
test
or
gs
or
(bad)
retf
aaa
mov
gs
test
inc
ret
push
lods
loope
fmulp
inc
inc
(bad)
loopne
in
inc
add
push
outs
fiadd
sbb
mov
sub
inc
xor
and
ss
loopne
pop
rol
and
cmps
mov
je
or
and
dec
pop
pop
fnstcw
int3
fidiv
sahf
cli
push
sub
mov
out
mov
dec
adc
cld
push
cmps
rcr
stc
xor
jo
lea
xchg
push
fs
fs
pop
push
cmp
xchg
or
and
out
push
mov
mov
push
popa
inc
pop
xchg
mov
jmp
mov
xchg
popa
adc
es
add
inc
mov
mov
jmp
(bad)
fistp
into
or
pusha
sti
fs
popf
aam
xchg
shl
or
aaa
push
mov
pop
mov
cmc
mov
sbb
out
push
push
dec
cmp
jmp
ror
mov
test
mov
fild
cld
test
bnd
xchg
and
and
push
(bad)
sbb
and
retf
lods
mov
adc
or
fcomp
mov
outs
out
retf
pusha
int
out
xor
add
fcomp
lea
or
push
jae
jg
xor
div
and
(bad)
xor
leave
adc
ror
imul
test
pop
stos
cmp
push
scas
ins
test
dec
jl
jno
imul
aam
fisttp
add
jecxz
stos
jmp
fs
sti
jns
test
mov
xchg
pop
scas
mov
mov
dec
outs
leave
fiadd
loopne
bnd
add
xchg
cdq
or
dec
mov
out
xchg
mov
xchg
loopne
das
or
cmps
push
sbb
retf
or
inc
test
xor
adc
mov
or
push
sub
pop
arpl
mov
(bad)
xchg
fst
enter
pop
xor
in
out
mov
cmp
add
call
push
popf
mov
aaa
and
mov
dec
push
pop
pop
ret
out
into
das
addr16
in
push
into
jg
sahf
ror
loop
mov
call
mov
dec
mov
das
popf
jg
jmp
inc
dec
add
xor
sub
cdq
sbb
call
mov
pop
sub
psadbw
sbb
movs
gs
lea
in
mov
jmp
inc
out
mov
add
dec
(bad)
test
enter
out
sub
cmps
hlt
ja
cvttps2dq
mov
push
(bad)
xor
rcr
lea
out
adc
cmp
inc
or
or
xchg
call
popf
icebp
mov
sub
xchg
cmp
mov
loop
jmp
call
cld
cmp
cld
jae
fisttp
add
(bad)
mov
push
add
and
inc
fstp
enter
mov
les
cmp
neg
outs
lods
xor
xor
sar
push
aam
xchg
fbld
ror
xchg
or
push
add
imul
retf
ror
iret
(bad)
aad
sbb
clc
pop
xor
pushf
xchg
inc
lods
add
lods
jne
aaa
sahf
mov
xor
jmp
xchg
imul
mov
mov
aam
jno
mov
sbb
xchg
mov
and
ins
out
cld
xchg
mov
or
pop
push
push
jns
out
test
mov
mov
push
lahf
sbb
addr16
pop
pop
outs
push
jmp
xchg
fsubr
cmps
add
cmp
jns
push
mov
out
push
sub
push
out
cwde
gs
cld
or
inc
(bad)
leave
mov
pusha
fdivp
mov
test
outs
xchg
push
cmc
jo
movs
ja
adc
ret
hlt
mov
outs
std
jle
ja
push
jp
lock
mov
and
fisttp
sbb
lock
stos
and
fild
or
loopne
ror
push
je
sub
push
pop
sub
movs
pop
out
dec
push
shl
jmp
mov
call
or
cmp
add
cmps
mov
sub
(bad)
out
xchg
dec
sbb
sbb
add
mov
xor
enter
test
cmp
daa
int
fmul
push
iret
das
cwde
cmp
pop
adc
cwde
xchg
xchg
lock
inc
mov
jle
jp
mov
push
ret
fcomp
cmp
jle
or
mov
repnz
push
imul
xchg
and
jmp
jo
ja
xchg
mov
loope
mov
xlat
mov
mov
addr16
or
sbb
and
not
cmp
icebp
fisubr
push
add
sub
div
nop
repnz
cmps
aad
ins
popf
int3
add
adc
stos
arpl
jnp
imul
or
or
inc
add
lahf
fsubrp
jmp
outs
sbb
xor
sbb
mov
cdq
xchg
mov
add
mov
mov
in
jnp
xor
push
cdq
sub
into
dec
retf
add
and
cdq
(bad)
aaa
mov
ins
ss
iret
ja
dec
outs
push
push
fldenv
sbb
rcr
sub
mov
dec
adc
add
xor
jb
or
cmps
pop
mov
das
lods
sbb
and
inc
push
fwait
xor
jnp
shl
mov
xor
cmp
or
xlat
inc
mov
(bad)
xor
mov
jge
cld
cmc
jnp
jg
ss
inc
xor
jnp
sbb
and
je
mov
pop
and
adc
mov
das
lods
inc
call
jmp
shr
daa
jmp
or
in
and
inc
fnsave
pop
sub
xor
out
add
lock
jecxz
jl
cli
pop
cmp
or
(bad)
cdq
(bad)
test
cli
xor
pop
jnp
test
or
jne
sub
lds
xchg
test
pop
mov
lahf
xchg
fwait
push
push
push
push
jmp
xchg
xchg
stc
movs
(bad)
popa
sub
fsub
xor
scas
mov
jmp
push
mov
stos
jge
cmps
stos
mov
pushf
push
dec
in
sti
rol
xor
aad
add
(bad)
std
sbb
test
scas
ja
adc
(bad)
cmp
jbe
sbb
cmp
pushf
jb
shr
mov
or
push
fsubr
test
sti
jecxz
ss
add
adc
pop
popa
add
jne
or
or
mov
ror
cmp
dec
clc
pop
call
push
mov
push
xor
mov
(bad)
mov
mov
cmp
mov
adc
scas
cs
arpl
sar
pop
or
or
(bad)
sbb
ins
dec
jecxz
mov
xchg
mov
and
cwde
xchg
sub
cmp
fnstcw
js
retf
aaa
adc
or
ja
js
xlat
bound
sbb
xchg
movs
bound
loopne
sbb
pop
ret
pop
(bad)
push
fs
hlt
adc
popf
mov
jno
icebp
mov
pop
movs
int
repz
call
pop
call
xchg
call
hlt
pop
mov
pop
jg
adc
push
xor
jp
adc
iret
stos
lahf
jae
pop
or
addr16
pop
add
in
(bad)
stc
pusha
ror
or
ins
pushf
mov
inc
inc
add
inc
das
fcomp
sub
mov
adc
popf
dec
adc
push
mov
fcom
or
ret
pop
lock
outs
dec
ins
test
pop
(bad)
push
shr
shl
xor
push
jp
mov
push
jl
fcom
add
xor
jns
cmp
test
mov
aad
std
test
lds
push
jne
gs
xlat
iret
js
sub
icebp
fsubr
cdq
clc
aad
pop
scas
or
jns
(bad)
push
mov
or
mov
mov
scas
outs
jmp
imul
cmp
sbb
dec
cbw
fldenv
ret
sar
or
dec
push
sub
or
stos
add
imul
(bad)
out
aad
repz
cld
popf
stos
dec
out
sbb
sbb
fdiv
enter
inc
scas
fcom
stos
arpl
fs
rcr
call
pop
or
call
push
mov
push
mov
mov
mov
out
popf
jg
mov
in
in
sbb
das
popa
xchg
or
in
int
ret
mov
fcomi
cld
(bad)
repnz
push
enter
add
dec
inc
mov
test
ret
retf
loop
cmp
inc
mov
dec
sub
inc
mov
ins
loop
mov
xchg
push
out
inc
mov
std
in
dec
push
movs
rcl
ffree
push
aad
adc
xchg
jle
mov
fnstcw
enter
dec
lods
adc
lahf
pop
push
xchg
cmp
shl
pop
or
mov
sub
cmp
add
and
dec
loopne
jns
add
mov
jbe
xchg
imul
adc
test
cmp
mov
out
repnz
not
popf
mov
in
add
repz
dec
xor
(bad)
(bad)
jp
lods
inc
ja
mov
inc
or
mov
arpl
mov
jns
sar
xchg
xor
fcmovu
(bad)
mov
js
xchg
push
sbb
lods
popf
inc
leave
fld
jne
mov
mov
in
push
xchg
xchg
lock
jmp
inc
outs
inc
call
jbe
sbb
out
out
xchg
xchg
mov
jmp
mov
fdivr
jmp
lahf
and
and
das
sub
and
test
out
jge
cld
adc
movs
or
mov
pop
int
scas
ret
iret
jo
repz
rcl
loopne
mov
jge
ret
jecxz
jns
out
pusha
scas
outs
nop
sub
inc
test
pop
xadd
retf
lock
xchg
imul
mov
fcmove
sub
stc
fisub
ror
in
jmp
scas
mov
jns
sub
popa
gs
arpl
jb
push
leave
pop
dec
int
push
add
xchg
inc
push
or
mov
inc
dec
sub
stos
ds
rol
mov
dec
aam
data16
clc
push
out
test
pop
sbb
and
loopne
vmovdqu
mov
mov
sub
jmp
cmp
out
mov
xor
xchg
mov
mov
sub
add
in
(bad)
dec
std
out
mov
push
scas
and
fwait
fwait
sub
popa
fs
dec
popf
xor
(bad)
stc
test
mov
and
mov
sub
pop
ret
add
cwde
data16
ins
int3
ja
lea
inc
pop
dec
push
(bad)
cli
xchg
arpl
mov
dec
idiv
call
pop
xlat
xchg
or
lock
xlat
into
jmp
(bad)
hlt
inc
jecxz
jge
cli
xchg
mov
and
pop
jmp
jbe
loopne
mov
ret
retf
inc
sbb
fwait
pop
xchg
pusha
sub
jp
fisub
shl
popa
dec
in
test
mov
shl
push
xchg
and
aas
jb
loop
mov
popa
push
(bad)
mov
cmp
xor
mov
in
and
dec
sbb
imul
rcl
gs
cmp
in
aaa
ins
mov
(bad)
sub
in
cld
pop
call
lahf
ror
ja
sbb
mov
test
mov
enter
aas
addr16
dec
retf
in
data16
or
popf
xchg
push
scas
repnz
xchg
pop
push
xor
lods
xor
jne
push
lods
pop
cli
les
ins
pop
mov
and
jle
cmp
mov
jne
push
jle
loop
jne
mov
jns
fsubr
adc
std
je
cmc
and
sbb
mov
mov
loope
lock
inc
jnp
xor
pop
push
xor
cmp
mov
mov
xchg
leave
ins
xor
inc
cmp
retf
lods
popa
adc
(bad)
repnz
ret
dec
popa
iret
lock
mov
sbb
pop
dec
dec
daa
jecxz
out
mov
stos
mul
jo
dec
and
pop
mov
mov
loope
sbb
das
lods
dec
cmp
mov
push
sti
mov
jle
retf
jp
dec
scas
mov
pop
xor
lods
(bad)
in
ror
jmp
push
jl
out
in
cmp
xchg
jle
xor
imul
(bad)
fdivr
arpl
ja
test
cmp
or
or
cmps
leave
mov
cli
mov
lss
movlps
push
test
cmp
daa
div
inc
xor
psrlq
stos
les
mov
mov
int3
dec
cli
pop
cmp
mov
mov
scas
mov
mov
(bad)
aam
sbb
push
adc
lods
sub
mov
arpl
retf
rcr
sub
or
ud2
push
sub
push
pop
dec
mov
aas
pop
loop
or
popf
jnp
sub
paddsb
nop
add
rcr
pop
(bad)
fwait
cs
aas
(bad)
mov
outs
mov
mov
jmp
xor
mov
enter
inc
nop
mov
outs
xor
sub
loop
jo
push
sbb
xor
aam
es
jle
hlt
retf
aaa
push
lahf
and
push
sub
ss
(bad)
paddusw
and
push
pop
(bad)
fisub
jno
popf
pop
ins
add
xchg
inc
adc
bnd
shl
lods
sti
and
arpl
(bad)
je
mov
shr
xor
sbb
sub
mov
xchg
shl
xor
xchg
js
std
push
mov
bound
or
dec
cmp
mov
sbb
mov
xchg
(bad)
lock
xchg
enter
leave
jp
adc
push
mov
test
jge
loopne
or
xor
dec
sbb
push
adc
cmp
aas
mov
cmc
cmps
sub
or
inc
setns
add
push
jbe
(bad)
mov
jecxz
xlat
loop
xchg
js
inc
xchg
movs
loopne
and
sar
pop
xchg
pop
pop
add
mov
aad
mov
fsubr
je
fcomi
repz
fimul
cmps
int3
ror
lock
adc
out
data16
ins
fist
sbb
adc
sbb
sbb
sub
push
retf
inc
jns
pop
mov
mov
cwde
mov
aad
call
jg
jecxz
mov
mov
mov
mov
pop
leave
scas
iret
or
dec
push
xor
cld
cmps
test
jbe
sub
aas
test
xor
adc
sub
xchg
iret
aam
cmp
add
and
mov
jmp
and
dec
cmps
int
movs
sti
hlt
adc
mov
out
aad
clc
sbb
mov
and
clc
jecxz
dec
int3
in
out
sahf
loope
xchg
outs
jg
add
add
push
push
test
scas
jmp
push
mov
xlat
jnp
es
jnp
retf
jbe
mov
loop
ret
nop
cmp
pop
pop
and
jns
stos
xor
push
call
pushf
test
mov
jp
cmp
and
adc
fstp
sub
call
and
mov
repz
pop
jl
sub
or
lods
mov
and
int3
pop
movs
xor
ret
dec
or
xor
lds
addr16
fnstcw
bsf
daa
push
(bad)
mov
jb
pusha
ins
or
jmp
xchg
mov
mov
xchg
mov
daa
inc
test
leave
out
cmp
mov
fild
mov
mov
pop
daa
daa
pop
sbb
dec
ja
or
test
sbb
nop
mov
inc
(bad)
jb
repnz
enter
addr16
dec
mov
push
or
mov
and
xchg
loopne
pop
out
ins
inc
movs
aaa
sub
stc
aas
pop
and
fimul
sub
das
sub
pop
out
push
retf
cdq
loop
icebp
cmps
scas
jo
fimul
in
fwait
mov
sub
nop
pop
mov
inc
and
adc
add
pop
out
ret
neg
shl
and
mov
mov
cmp
popa
out
adc
ret
sbb
cmps
jle
and
hlt
mov
adc
jae
adc
outs
jge
pxor
stos
push
or
(bad)
push
cdq
retf
mov
jl
dec
mov
inc
cmps
loope
mov
pop
fst
mov
jo
push
cmps
mov
ins
aad
pop
mov
pushf
push
mov
adc
in
pop
adc
pop
cmp
pop
fidiv
sbb
or
push
rcl
ins
cmp
mov
jo
test
and
jmp
sti
or
or
xor
in
xor
pop
in
aam
jge
ficom
ja
dec
jp
lds
mov
retf
cmp
popa
push
pop
lahf
shl
and
xchg
mov
jns
xchg
push
dec
mov
and
rol
inc
jbe
test
stos
pop
cmp
js
adc
sbb
mov
mov
adc
push
repnz
cld
dec
ins
cmp
std
sbb
fdivr
dec
or
sub
xchg
sub
idiv
mov
xchg
stc
imul
arpl
fwait
out
cmps
div
inc
aad
push
stos
mov
mov
lock
push
push
inc
pop
icebp
push
shr
mov
ret
inc
jmp
lods
(bad)
mov
push
xor
not
sbb
nop
cmp
inc
xchg
mov
adc
sub
std
xchg
test
jl
sbb
lea
mov
mov
sub
cdq
cmp
push
push
dec
es
sub
lods
push
dec
mov
jno
cmp
imul
icebp
add
aaa
stos
xor
jle
stc
sub
lods
das
retf
xor
out
fnstsw
test
jbe
fcmovb
add
enter
in
inc
add
out
paddsb
ror
mov
bound
stos
mov
cmp
rcr
xor
xchg
push
jge
sub
mov
dec
inc
jmp
or
in
and
lock
scas
test
mov
mov
ret
pushf
sbb
fcomp
sub
stos
push
lods
or
fistp
test
rep
mov
xor
push
inc
ret
and
add
add
sti
add
pop
or
or
inc
test
xchg
call
ins
and
into
sbb
push
pop
dec
ret
sbb
sub
mov
stos
in
sub
xrelease
icebp
outs
adc
test
mov
mov
cmp
pop
imul
in
imul
lds
retf
pop
jae
stos
inc
and
mov
push
ins
fisttp
stos
outs
xchg
jecxz
sahf
hlt
lods
clc
clc
jge
mov
or
pmullw
out
sub
ret
ror
jmp
sub
dec
dec
pushf
mov
cmc
or
ret
sub
mov
fwait
pop
std
lea
mov
gs
or
and
call
adc
adc
xchg
xlat
lds
fdivr
push
test
(bad)
data16
xor
add
sub
or
inc
fdivr
jge
lahf
jg
vpcmpeqd
adc
in
ror
adc
rcl
(bad)
std
bnd
pop
outs
pop
sbb
ret
jne
in
cmp
repnz
rol
(bad)
adc
mov
int
dec
dec
aas
xor
scas
lds
dec
call
cmp
mov
add
xchg
cmp
xor
push
xor
sti
sbb
call
loop
out
fwait
mov
mov
(bad)
mov
test
aas
sbb
jae
and
sub
in
or
push
adc
into
push
test
mov
xor
pop
shr
(bad)
ds
mov
fcomp
pop
popf
mov
rcr
push
add
fst
or
outs
sub
cwde
out
mov
daa
pop
and
outs
cli
mov
pop
ins
(bad)
jg
test
pop
ins
out
cmp
shl
push
int3
jbe
sub
sahf
pop
outs
ss
push
(bad)
sub
push
jnp
not
fcmove
por
sub
xchg
ins
test
fnsave
ret
dec
ret
sahf
cld
js
das
(bad)
mov
jo
jp
les
aas
retf
mov
cmp
push
push
je
(bad)
fadd
out
shr
adc
fcomp
and
cmp
jecxz
hlt
lds
leave
popf
xor
sub
fisttp
mov
test
shl
mov
mov
mul
mov
cmps
sbb
push
or
xor
mov
jnp
and
cmc
add
(bad)
xor
inc
add
add
pop
xchg
aam
imul
imul
jg
into
scas
mov
arpl
inc
or
aaa
retf
pop
push
dec
mov
pusha
pushf
mov
mov
fbld
push
mov
outs
push
pop
mov
stos
adc
ins
retf
pop
adc
lahf
pop
and
or
in
dec
jmp
mov
xchg
jo
loop
or
inc
leave
push
aad
pusha
adc
push
xchg
es
(bad)
lahf
mov
mov
int3
inc
xor
push
int
push
push
sahf
cwde
rcr
or
fcom
jbe
pop
or
dec
and
jg
outs
arpl
mov
push
(bad)
bound
jnp
push
mov
push
inc
pop
sbb
popf
lock
adc
rol
dec
pop
xchg
das
xchg
loopne
lock
mov
jl
imul
mov
addr16
cmps
pusha
sahf
mov
shr
mov
lea
vmovsldup
push
mov
daa
movs
cmps
mov
pushf
sbb
(bad)
adc
scas
sub
and
xchg
add
gs
shl
fnsave
sbb
sar
inc
inc
out
popa
not
or
mov
je
or
sti
jo
pop
call
in
dec
jecxz
mov
out
les
daa
aas
retf
mov
arpl
sbb
mov
pcmpeqw
(bad)
fidivr
adc
adc
call
inc
sub
gs
leave
mov
xor
neg
mov
mov
and
sub
ins
pop
jg
out
xor
mov
stc
jmp
sub
cwde
or
xchg
dec
add
rol
mov
or
(bad)
sbb
cmp
mov
and
into
ins
jae
rol
sbb
adc
inc
inc
sbb
xor
into
fdivr
dec
push
mov
test
mov
pop
stos
mov
scas
xlat
or
ret
mov
dec
xor
int3
xchg
xor
lock
push
pop
mov
mov
jg
bound
or
and
aad
rol
push
cmp
cmp
cdq
xchg
frstor
mov
fidiv
jecxz
fst
jge
data16
xchg
dec
jb
sbb
mov
cmc
ret
or
push
or
pop
test
(bad)
ss
and
add
adc
jl
neg
nop
movs
test
or
push
push
gs
mov
setb
xor
rol
rcl
push
xchg
mov
xchg
mov
jb
ret
xor
push
cmps
mov
test
pop
mov
mov
inc
push
jmp
mov
loope
outs
sub
imul
sbb
mov
retf
ja
jae
push
in
lock
jge
scas
adc
shr
imul
sub
call
(bad)
adc
xchg
int
cmp
(bad)
call
scas
arpl
jmp
or
hlt
cmps
mov
cmp
inc
arpl
mov
sahf
inc
pop
xchg
shld
add
mov
cmp
ja
pop
jle
fs
rcl
push
fidivr
aam
pop
in
ins
fdivr
adc
(bad)
cld
mov
leave
cmps
std
pop
mul
dec
mov
fwait
mov
icebp
push
mov
mov
push
xchg
and
(bad)
xchg
shr
dec
repnz
mov
pop
cmp
lahf
mov
xor
xchg
push
push
inc
jg
rol
mov
fbld
test
push
or
int
mov
loop
add
or
xchg
out
mov
retf
lods
push
icebp
sti
pop
loope
jo
pop
fdivr
and
pop
(bad)
js
add
push
lods
mov
call
mov
jecxz
sub
stos
push
xchg
and
fbstp
cmps
movs
push
shr
cmp
daa
enter
push
push
adc
mov
inc
(bad)
(bad)
call
repnz
arpl
mov
jge
pop
(bad)
movs
mov
aad
loopne
int3
cmc
dec
inc
add
dec
jbe
push
pop
xchg
cs
xchg
push
scas
in
add
adc
inc
fiadd
xor
ds
push
sbb
push
jp
daa
rcl
popa
sar
lea
add
popa
stos
xchg
ret
mov
adc
in
mov
inc
aam
mov
jle
icebp
push
pop
aas
and
jno
sub
inc
jns
sar
data16
and
repz
push
mov
mov
retf
mov
daa
jbe
xor
xchg
push
sbb
pop
(bad)
push
jns
jg
pusha
cmp
test
pushw
(bad)
xor
fidiv
into
inc
into
or
push
or
sub
mov
ret
jmp
mov
imul
call
xor
pop
jbe
in
sbb
lea
xlat
xchg
out
lahf
in
test
jnp
mov
push
out
or
pop
ret
sbb
enter
push
push
or
pop
xor
pop
mov
stos
mov
dec
mov
out
mov
fcomp
je
out
retf
add
and
inc
cmp
das
jecxz
test
in
push
xchg
dec
(bad)
aas
aaa
loopne
cs
jnp
cmp
cmp
fs
xchg
stc
and
or
jmp
cmps
fimul
aam
pop
cmp
test
pop
jge
inc
out
mov
inc
dec
stos
add
sbb
adc
lods
iret
or
cmp
and
mov
push
mov
dec
xor
inc
lahf
cmc
jns
(bad)
fwait
inc
xor
sbb
imul
cmps
jl
adc
repnz
ss
fiadd
jecxz
int
das
xchg
cmp
out
retf
inc
dec
stos
arpl
aad
sbb
mov
loopne
or
in
int3
psrad
inc
adc
dec
popa
imul
movs
xchg
push
call
jno
stos
xor
cmp
call
push
je
out
sbb
jecxz
pusha
mov
cmove
cmp
pop
es
sahf
test
arpl
pop
xor
aas
push
movs
xchg
mov
sahf
in
mov
daa
pop
inc
aam
test
arpl
das
jle
imul
pop
aas
in
mov
push
mov
in
sti
je
mov
iret
(bad)
out
rcr
xchg
mov
lods
push
or
ins
sub
and
mov
xchg
mov
xlat
push
pop
mov
inc
ror
xor
call
pop
xor
mov
jmp
idiv
inc
loop
inc
aas
sbb
or
add
icebp
pop
inc
adc
adc
push
xchg
xchg
mov
jne
or
out
mov
out
inc
lahf
fwait
ror
xor
inc
jne
ins
sbb
push
or
stos
les
adc
adc
leave
xchg
movs
xor
cmp
test
test
shr
inc
(bad)
xchg
mov
cmp
mov
ds
repnz
mov
push
xchg
dec
xor
cmps
push
imul
mov
inc
or
push
sub
inc
sbb
lods
pop
cmp
xor
cmp
sbb
adc
mov
push
mov
and
sbb
int
add
xor
xor
out
mov
pop
mov
out
push
test
mov
movs
push
and
inc
retf
sbb
push
mov
call
pop
imul
and
(bad)
mov
push
push
cld
jns
or
mov
pop
into
int3
cmp
sbb
jp
mov
stos
sub
mov
pop
xchg
and
cmc
outs
ror
addr16
inc
sbb
add
pushf
clc
xor
mov
jg
aam
leave
push
push
clc
bound
pop
sbb
pop
jmp
sub
sahf
push
je
xor
loope
push
pop
out
mov
mov
or
fisub
push
stos
fisttp
xchg
xor
stos
xchg
lahf
popa
jmp
ret
xor
jns
std
xor
mov
mov
mov
stos
push
shr
xchg
test
inc
jmp
mul
js
icebp
loop
fimul
mov
out
inc
out
mov
cmps
repz
or
jp
xor
icebp
xchg
clc
xor
jbe
das
mov
mov
fiadd
dec
scas
sbb
popf
fmul
repz
in
or
test
jb
add
cs
es
sahf
inc
int
xchg
push
pusha
cmp
and
call
or
ss
test
(bad)
sar
ret
out
fcomp
inc
xchg
dec
imul
mov
cmps
push
iret
sbb
jl
dec
bound
pop
pop
test
xchg
fst
hlt
dec
fsubr
pop
into
bnd
(bad)
or
jecxz
cmp
test
adc
jecxz
sti
in
and
push
xor
aam
aas
and
mov
and
or
adc
out
push
or
push
sub
sar
stc
adc
adc
jg
rol
jg
or
outs
push
pop
stos
leave
sub
xchg
pop
dec
paddb
out
(bad)
call
cmc
push
fisttp
imul
ret
hlt
dec
cs
xchg
inc
push
in
in
lea
ins
jno
mov
push
nop
scas
out
mov
add
mov
add
xchg
mov
mov
jl
not
pop
jp
das
loope
lods
iret
mov
jg
aas
mov
jp
jg
jb
das
add
jp
cs
js
das
test
pop
inc
jmp
dec
xor
stos
in
cmp
cmps
or
mov
dec
push
test
data16
popa
jo
push
ret
jb
add
outs
mov
or
mov
pop
add
sbb
mov
cli
mov
retf
jl
cmps
sub
pop
aaa
movs
addr16
inc
dec
add
mov
adc
dec
dec
add
cmc
btc
mov
and
sbb
movs
mov
mov
scas
out
dec
call
retf
dec
pop
sub
jg
sbb
icebp
adc
ret
out
xlat
dec
in
mov
add
pop
aam
add
push
jmp
repz
test
dec
xor
cmp
pop
pop
inc
fstp
pop
add
imul
push
clc
(bad)
mov
dec
push
call
leave
(bad)
mov
fisttp
inc
mov
lods
inc
std
mov
mov
pop
push
aam
fadd
inc
cli
adc
add
sbb
fnstsw
mov
push
or
dec
js
xchg
int3
xchg
imul
xchg
mov
adc
dec
mov
dec
ds
imul
imul
push
pop
js
nop
jb
mov
mov
clc
test
cmc
xchg
iret
stos
adc
seto
mov
call
out
jle
(bad)
arpl
and
mov
frstor
addr16
enter
int3
xor
shr
or
fadd
fmul
jo
hlt
pop
sar
mov
sub
test
jne
dec
push
jns
clc
sbb
mov
adc
mov
sub
mov
dec
sbb
in
inc
mov
lea
cmp
sbb
adc
cmps
loopne
daa
call
fsubrp
sub
adc
jae
jge
outs
inc
in
mov
out
pop
shr
mov
xchg
jns
sahf
jno
jp
pop
xor
scas
arpl
mov
sahf
sbb
jb
sbb
shl
fs
dec
xor
dec
add
inc
ror
test
mov
and
pushf
lods
dec
je
lods
dec
dec
cmp
(bad)
pusha
out
mov
adc
(bad)
sub
cmp
out
fs
cmps
sti
call
mov
fidiv
retf
jno
ss
adc
inc
ds
jmp
inc
inc
dec
or
lds
cdq
xor
loop
add
(bad)
pop
mov
inc
ins
aas
inc
pop
inc
shl
das
xlat
sub
jb
aam
jns
xchg
xor
cwde
or
dec
fisttp
push
or
or
(bad)
retf
gs
mov
dec
push
xor
jmp
pop
(bad)
stc
adc
adc
iret
daa
es
scas
pushf
data16
sub
fild
dec
pop
fisttp
jl
sbb
outs
rol
ret
mov
adc
mov
icebp
inc
push
mov
jecxz
sub
sbb
sar
std
mov
mov
xchg
aas
jnp
dec
dec
xor
mov
jmp
dec
push
push
push
sbb
popf
in
leave
int3
sub
cwde
clc
adc
rol
(bad)
fdiv
dec
and
or
inc
fwait
aad
inc
push
ds
cmp
test
inc
xor
or
aas
pop
add
mov
int3
nop
out
push
jge
icebp
repnz
pop
jg
enter
inc
add
mov
sbb
cmps
int
cmp
xor
aas
cmp
call
push
push
nop
lods
ss
cmps
or
mov
adc
add
mov
(bad)
cmps
call
mov
clc
jmp
ja
jo
mov
shl
pop
or
lock
scas
adc
mov
out
adc
adc
ins
and
icebp
xchg
mov
cmp
cli
cli
mov
rcr
movs
or
movs
push
das
mov
movs
sub
inc
jb
inc
inc
xchg
sbb
outs
push
pop
cmps
pushf
or
xchg
out
push
jmp
idiv
add
xor
cmp
xchg
cdq
jo
in
sub
das
(bad)
mov
pop
adc
test
xchg
call
rcr
pop
push
add
dec
mov
popa
inc
xor
loope
inc
(bad)
mul
int
add
cwde
xor
push
retf
and
sub
inc
fld
jge
cmp
inc
xchg
dec
xor
(bad)
push
aas
mov
dec
iret
shl
jne
push
fdiv
xor
mov
outs
cli
dec
fs
jmp
mov
adc
ds
pop
or
sub
pop
or
sar
add
dec
retf
jnp
mov
add
in
mov
xlat
out
inc
aam
ins
or
mov
mov
retf
nop
movs
pop
sar
inc
loopne
js
add
jbe
hlt
movs
das
pop
shl
std
jno
sbb
es
cmp
inc
pop
mov
sub
into
cld
jne
clc
test
sar
clc
mov
cmc
cmps
ret
push
rcr
retf
xlat
mov
xchg
cmp
pop
pop
cs
jbe
mov
jbe
or
mov
cli
xchg
out
int3
and
cld
mov
mov
pop
push
ja
cmp
xlat
imul
and
arpl
aas
popf
pop
repz
push
adc
mov
imul
inc
stos
frstor
sub
sbb
mov
ret
jo
stc
jnp
out
aam
adc
hlt
jg
pusha
ds
out
ja
pop
add
and
cmp
add
jbe
sub
mov
movs
cld
loope
test
sahf
inc
pop
xor
sbb
setle
dec
dec
jnp
call
das
push
cdq
dec
mov
xor
adc
inc
xchg
and
xor
xchg
in
pop
(bad)
xor
cmps
dec
or
outs
clc
add
mov
xchg
retf
mov
lock
mov
push
add
pushf
mov
test
mov
(bad)
cmps
sub
bound
sahf
adc
xchg
jg
and
mov
ss
cmp
mov
jge
add
jne
push
mov
xchg
popa
sub
call
and
icebp
fisub
pusha
or
aas
mov
xor
mov
aas
dec
pop
dec
cmp
(bad)
push
jns
jecxz
test
(bad)
(bad)
in
and
out
frstor
enter
pop
mov
push
ja
dec
cmp
popa
jns
cmc
icebp
jnp
pop
outs
icebp
ret
pop
fmul
pop
mov
push
push
lods
sbb
scas
add
and
xor
xor
mov
sub
comiss
clc
xor
adc
not
test
cs
(bad)
fldcw
sbb
cmp
in
ds
clc
mov
sbb
pusha
or
ins
retf
add
out
mov
sbb
std
cs
push
not
fstp
push
inc
inc
mov
leave
mov
or
mov
outs
xor
add
add
fadd
sbb
mov
call
or
jne
adc
jne
into
rep
lea
or
or
movs
mov
xlat
aad
or
call
mov
shl
(bad)
mov
mov
(bad)
ins
jae
jle
add
adc
xor
sbb
dec
and
cmp
loop
jmp
mov
mov
xor
or
pop
outs
ja
test
sub
xchg
sub
inc
jmp
push
push
and
fmul
mov
sub
ror
(bad)
popf
or
mov
and
fstp
cs
ins
call
xor
sahf
jno
inc
xchg
jns
xor
xchg
jmp
fild
pop
repnz
loopne
inc
jo
call
test
or
gs
xchg
and
pop
and
in
xor
mov
mov
inc
ins
push
loop
mov
cmps
cdq
push
fimul
rcr
mov
push
repz
rol
inc
daa
mov
lods
mov
and
adc
adc
scas
mov
push
pop
pushf
cmp
lods
or
inc
push
or
mov
test
mov
xlat
xchg
mov
lahf
clc
fwait
in
int
xchg
dec
inc
xchg
or
mov
sbb
mov
pop
dec
ja
lock
xlat
and
jmp
bound
aaa
hlt
shr
jl
inc
mov
push
ret
mov
fisttp
mov
or
test
imul
dec
mov
jecxz
les
adc
rep
cmc
inc
inc
ret
test
loopne
push
cs
rol
dec
inc
repz
cmp
je
shr
ror
(bad)
arpl
outs
push
mov
mov
jle
sbb
shl
mov
mov
jno
cmp
popf
out
inc
push
pop
cmp
imul
popa
test
sub
dec
gs
xor
jecxz
sub
(bad)
sub
inc
imul
lock
cmp
loop
inc
push
sahf
cwde
and
adc
jle
aas
pop
hlt
sbb
stos
jae
push
sub
dec
lock
sahf
mov
pop
jg
inc
addr16
cmp
xor
jno
repnz
call
shr
xchg
cmp
adc
pop
inc
push
inc
sub
cwde
push
mov
lock
cld
xchg
ja
push
stc
xor
jne
out
idiv
lods
jmp
outs
fstp
fcom
pop
mov
jo
jb
sub
arpl
stos
push
sbb
dec
retf
add
sbb
mov
clc
sti
xchg
or
daa
mov
mov
test
mov
lods
stos
adc
or
adc
jo
mov
sub
mov
mov
sub
nop
popa
jo
cmps
jb
test
mov
in
movs
mov
and
sar
stos
cmp
mov
mov
gs
and
test
or
pop
(bad)
hlt
inc
push
aaa
outs
pop
pop
mov
out
rol
sahf
out
aaa
inc
ror
add
pop
mov
cmp
dec
and
or
inc
ss
dec
dec
jno
pop
sbb
jbe
aaa
jl
jmp
lods
jb
pop
arpl
xor
(bad)
dec
(bad)
dec
call
or
es
(bad)
loope
xchg
or
xchg
inc
cmps
jg
push
retf
xchg
ss
push
pushf
das
dec
xchg
inc
outs
popa
dec
sub
rol
call
call
icebp
inc
int
ret
xor
jb
retf
stos
jl
mov
neg
xor
xchg
sub
daa
repz
fwait
aad
sti
je
cmp
dec
sar
and
(bad)
pop
xchg
mov
popf
mov
out
sar
push
sbb
xor
movs
jno
inc
cmps
cmps
mov
hlt
sub
dec
add
jmp
fnsave
and
out
adc
pushf
outs
dec
lods
lahf
sbb
inc
sbb
fidiv
jb
sbb
sbb
xlat
shr
mov
mov
or
add
ror
in
sbb
or
adc
sub
inc
xor
add
jbe
pop
pop
ret
aaa
int3
rdpmc
fldenv
fcmove
aas
mov
rol
bound
aas
std
outs
mov
bound
dec
or
movs
out
iret
adc
jb
mul
or
retf
jnp
jg
out
jecxz
or
cld
jns
mov
lea
(bad)
int
ret
adc
and
cmp
inc
mul
pop
popf
mov
sbb
pop
jo
mov
scas
outs
jne
shr
lods
add
add
out
test
cmp
ja
sub
arpl
xchg
adc
cmp
(bad)
jne
ins
int3
adc
ins
gs
lods
sbb
push
stos
data16
jl
in
mov
movlps
xor
lea
outs
imul
fs
pop
fwait
or
inc
sahf
push
imul
fistp
add
cli
scas
sbb
imul
int
dec
shl
lods
imul
push
retf
xor
pop
mov
das
stos
push
cmp
and
scas
xchg
cmp
push
stos
dec
data16
xchg
stc
hlt
xchg
(bad)
je
or
mov
cmp
fiadd
nop
or
inc
test
call
lods
lods
push
jmp
mov
push
xlat
inc
test
sar
xlat
mov
mov
sbb
pop
mov
mov
retf
sbb
jb
hlt
adc
mov
mov
xchg
scas
pop
xor
int3
cmp
and
cmps
fidiv
ja
mov
add
(bad)
dec
retf
cmp
les
jns
mov
retf
pop
(bad)
adc
sbb
test
out
cmp
jns
sub
add
dec
out
out
and
jns
cmp
rcr
jp
mov
shl
jae
add
xchg
out
int3
xor
push
mov
lds
pop
mov
pop
lock
sbb
shr
sub
and
(bad)
mov
and
cmp
ds
jmp
mov
ret
aas
jne
cdq
call
mul
inc
fwait
jae
adc
mov
dec
xor
mov
jb
inc
sahf
icebp
sbb
data16
or
jae
jb
loopne
int3
mov
(bad)
mov
aaa
add
enter
repz
cmp
or
add
xchg
inc
mov
adc
pop
icebp
data16
int3
and
sahf
xor
fisttp
mov
or
(bad)
test
sbb
push
in
retf
cli
fsubr
jecxz
js
push
dec
cmp
adc
add
adc
rcl
sti
mov
xchg
sbb
jno
daa
inc
push
inc
cmp
ficomp
or
sti
sbb
mov
pop
mov
adc
dec
pop
dec
add
stc
cmp
sub
xor
mov
adc
loop
icebp
inc
pop
fidiv
add
in
sbb
sbb
pop
add
stos
add
cld
jp
push
iret
ret
jmp
cs
stos
jbe
dec
dec
(bad)
int
inc
and
xchg
cld
dec
cmp
cmc
das
and
cmp
or
mov
dec
push
imul
cmps
movs
mov
fdiv
mov
sub
mul
dec
fidiv
push
adc
adc
adc
inc
jecxz
cmps
mov
loop
add
sub
mov
enter
pop
sub
int
shr
imul
push
outs
jae
mov
mov
push
js
mov
pop
jnp
mov
xor
iret
xchg
jb
fisttp
mov
gs
psraw
fidivr
stc
je
dec
or
pop
sub
cld
stos
je
cmp
mov
push
fwait
out
int3
xchg
jnp
mov
add
adc
xchg
jp
push
ret
xchg
lea
iret
push
fisttp
test
(bad)
into
jl
cmc
xor
in
push
mov
mov
es
inc
jl
and
in
push
sub
xor
(bad)
enter
inc
call
adc
loope
add
pop
sbb
adc
je
sbb
scas
push
sti
add
sub
adc
pop
mov
push
jl
adc
fcomp
push
cwde
(bad)
sub
sub
add
call
(bad)
popa
shl
aaa
and
jmp
mov
imul
add
sti
sub
repnz
das
lock
mov
xchg
dec
fs
dec
lods
rcr
cld
mov
stos
or
push
pop
test
mov
out
jne
inc
cmp
adc
arpl
pop
ins
jnp
sub
dec
jnp
and
shr
ins
push
lea
mov
xchg
cs
fsubr
retf
or
imul
xchg
ror
jmp
repz
xchg
mov
mov
scas
ins
cld
dec
sub
movs
jb
mov
enter
sbb
loop
(bad)
movs
out
repnz
push
rol
ret
cmp
jo
sbb
icebp
test
jns
jmp
into
push
jns
clc
cli
std
ret
or
sub
aas
mov
push
pushf
xlat
shl
leave
cmps
aad
addr16
sub
fcom
cdq
mov
push
pop
dec
push
add
imul
push
inc
jp
xchg
or
push
daa
fbstp
pop
enter
push
mov
mov
loope
xchg
and
and
sbb
scas
iret
mov
in
xor
sub
retf
les
sbb
imul
mov
mov
sbb
pop
adc
jns
ror
mov
inc
mov
inc
ss
dec
loope
add
mov
mov
imul
popa
lds
jmp
scas
sbb
in
xchg
mov
xchg
rcl
add
push
mov
push
ins
add
xor
adc
mov
xchg
loopne
out
jno
inc
dec
aaa
int
bound
add
dec
and
xchg
inc
jg
mov
dec
mov
test
push
jmp
mul
ret
shl
push
movs
(bad)
push
sub
xor
inc
add
mov
repnz
jb
lock
pop
sbb
(bad)
lods
jle
fcomp
push
arpl
cmps
sub
(bad)
shl
push
xor
ins
in
dec
sbb
inc
push
xor
fld
xchg
dec
jae
pop
cmc
mov
retf
pop
sti
mov
cmps
mov
retf
repz
test
jecxz
jg
jp
cli
ds
sub
out
sub
je
push
inc
dec
adc
and
mov
out
pop
imul
ret
jmp
mov
adc
movs
push
inc
jl
fsubp
push
(bad)
inc
adc
cmp
retf
mov
stos
ja
jne
retf
add
sub
test
mov
push
fisubr
out
jo
(bad)
test
push
sbb
aas
xchg
(bad)
aam
cmp
pop
fild
push
js
ret
ror
cmp
(bad)
push
sbb
kaddb
push
xchg
ficomp
sahf
popa
mov
clc
mov
cdq
test
pinsrw
jae
sub
enter
push
mov
movlps
sub
lods
mov
cmp
and
and
lea
jnp
jbe
inc
shr
cs
mov
movs
addr16
call
fadd
cwde
imul
stc
cmps
int3
cmovp
xchg
jge
pop
and
xchg
outs
(bad)
adc
mov
ins
mov
nop
lea
add
adc
dec
dec
push
jae
jnp
imul
loope
pop
shl
push
test
fisub
das
push
push
jo
xchg
pop
jp
sub
jno
push
adc
arpl
add
add
jl
scas
out
cmp
ret
clc
xor
lahf
adc
push
leave
sbb
imul
and
je
aam
xchg
in
xchg
jo
fsincos
inc
(bad)
mov
and
dec
nop
popf
xor
leave
ins
mov
movs
mov
sbb
xor
and
sar
add
mov
test
or
dec
std
gs
mov
mov
adc
cmp
jge
sti
ja
push
mov
pop
jge
xor
xor
lods
xlat
fcom
sub
data16
mov
dec
sbb
lods
jg
jg
mov
sub
bnd
lahf
je
test
retf
or
test
std
mov
pshufw
or
inc
add
pop
jmp
cmps
and
pop
adc
jl
mov
into
adc
rcr
pop
mov
or
mov
loope
fwait
or
shl
loop
inc
sub
pop
mov
push
pop
rcr
lods
fist
je
dec
mov
cwde
mov
pop
pop
test
cs
lds
sub
jne
mov
cmc
inc
jmp
dec
push
mov
sbb
add
cmp
mov
cmp
shr
rol
repnz
ret
add
xlat
cld
imul
fnsave
or
test
or
sti
add
retw
inc
out
fcom
scas
push
push
inc
or
push
imul
pop
popf
mov
add
lea
cwde
add
ins
inc
push
in
retf
call
fdivrp
dec
lahf
xchg
mov
xchg
sbb
test
mov
hlt
in
add
and
cmps
es
cmp
mov
out
cmp
add
fcmovu
(bad)
(bad)
lock
adc
dec
repnz
fneni(8087
fistp
sbb
fs
add
fbstp
mov
leave
std
repnz
add
jns
repz
int3
xchg
aad
mov
imul
add
retf
jns
jo
loope
out
(bad)
sti
ret
mov
loopne
iret
stos
dec
xchg
inc
in
push
pop
mov
mov
stc
jg
aad
push
inc
dec
or
cdq
sub
mov
out
jg
sub
push
mov
pop
jle
stos
xchg
fs
xlat
sahf
addr16
sbb
shl
dec
or
mov
push
jp
dec
out
pop
sub
cli
xor
cdq
push
mov
jmp
sub
adc
mov
mov
sbb
or
and
xchg
ror
adc
sar
out
push
mov
mov
pop
enter
fidiv
ss
mov
lahf
and
(bad)
and
xor
xchg
cdq
popa
shl
lods
ror
hlt
and
push
ins
lahf
jb
fcomp
cld
mov
jo
add
sbb
rcr
outs
adc
mov
ficom
xchg
lahf
icebp
enter
jnp
cdq
mov
and
push
jb
push
(bad)
ins
xchg
push
shl
pop
mov
in
shl
inc
xor
xchg
call
adc
pop
and
push
sub
adc
std
add
pushf
(bad)
aaa
cmp
iret
jmp
xor
test
out
fcmovnb
rcr
pop
std
pop
out
loop
sbb
mov
mov
mov
in
movs
sbb
aad
cmp
cmp
fnstcw
stos
push
xor
pop
pop
pop
test
std
inc
jle
adc
fisub
arpl
mov
or
mov
gs
and
dec
xchg
out
jecxz
retf
sbb
data16
sub
test
ror
jo
or
lods
push
mov
adc
pop
icebp
jne
(bad)
add
cmc
pop
mov
cmp
out
sbb
rol
repz
mov
pop
add
mov
or
adc
sbb
pop
(bad)
cld
je
ret
xor
ret
add
dec
loop
sub
scas
ror
sbb
cdq
mov
lods
jmp
adc
xor
retf
jge
push
sub
sub
or
inc
sub
fs
push
data16
cld
xchg
pop
pop
mov
clc
fnstsw
dec
dec
(bad)
mov
fnsave
or
int3
xor
push
pop
daa
xor
clc
fild
ret
aam
fimul
out
icebp
cdq
in
cmp
cmp
fmul
sbb
inc
xor
add
ins
in
(bad)
popa
mov
pop
inc
ss
jge
mov
ss
mov
cmps
jecxz
sbb
inc
push
jnp
mov
and
sbb
popa
sub
mov
and
xchg
mov
ret
cdq
mov
dec
(bad)
sub
(bad)
mov
xor
mov
adc
cdq
retf
dec
jne
and
or
push
mov
jmp
lock
or
rcr
mov
dec
sbb
ja
pop
(bad)
pusha
add
outs
out
dec
mov
mov
rcl
add
dec
dec
call
lds
clc
pop
cmp
lea
add
mov
and
int3
shr
rcr
mov
popf
mov
mov
(bad)
mov
cmp
mov
inc
add
jmp
cdq
popa
ret
scas
jo
adc
cmc
jmp
xchg
arpl
cdq
loop
pop
pop
mov
or
scas
outs
or
cmp
dec
pop
and
push
inc
jmp
imul
push
cdq
push
xchg
sbb
sbb
pop
sub
repnz
(bad)
movs
push
mov
les
mov
jg
dec
dec
je
das
ja
sti
pop
jmp
xchg
mov
loope
popf
xchg
sahf
inc
shl
stos
jp
pushf
mov
fld
mov
mov
call
dec
mov
or
mov
(bad)
cmp
rcl
rcr
daa
addr16
cmp
retf
or
scas
cmp
cmc
call
in
push
adc
mov
sahf
mov
cmp
call
(bad)
mov
dec
inc
mov
daa
(bad)
not
xchg
iret
jb
(bad)
aas
js
int
pop
mov
in
dec
addr16
aas
inc
sub
stos
ja
mov
shl
push
adc
js
in
(bad)
pop
shr
mov
push
jmp
mov
nop
enter
mov
(bad)
adc
aaa
adc
into
data16
hlt
add
leave
or
scas
aad
add
add
inc
addr16
popa
test
push
cld
icebp
xchg
bnd
shl
mov
repnz
push
jg
inc
(bad)
lock
pushf
sbb
push
sub
or
xor
or
push
jle
xor
in
xor
jge
ds
inc
ret
shr
push
pushf
lock
push
add
pushf
(bad)
fs
jp
dec
mov
sti
and
leave
repnz
or
sub
sar
mov
ins
call
or
je
cmp
dec
or
sahf
retf
aas
jo
xchg
(bad)
pop
aam
cli
adc
inc
clc
aaa
imul
inc
push
push
sub
test
sahf
xchg
inc
mov
repnz
cmp
jns
sub
mov
mov
fcom
inc
cmps
dec
in
clc
mov
repnz
shl
call
popa
mov
icebp
adc
cmp
aad
std
jge
and
or
fcom
mov
cli
cmps
je
mov
add
xor
xor
stos
movs
adc
pop
inc
mov
jl
push
icebp
or
push
inc
or
outs
mov
fs
repz
jmp
out
add
cmps
mov
scas
iret
jb
sub
cwde
ss
xor
je
pop
pop
add
iret
and
dec
test
fsub
pop
pop
into
or
cmp
loope
xor
retf
out
jmp
scas
bound
jmp
(bad)
bound
jmp
xchg
jmp
push
xlat
or
sub
aad
jge
fld
cmp
ret
fadd
inc
shl
test
bound
adc
mov
fistp
adc
inc
(bad)
hlt
enter
into
xor
or
test
stc
shl
popf
out
mov
xchg
mov
mov
jg
fist
mov
and
xor
mov
(bad)
mov
(bad)
aam
hlt
mov
add
cli
data16
js
or
jmp
jge
pop
sub
sar
test
sti
mov
or
xor
and
xor
add
dec
mov
add
sbb
pop
ret
and
fcom
cmp
ret
std
pop
push
ror
xchg
pop
mov
lea
fdivp
ret
dec
sbb
or
xchg
stos
pop
sbb
pop
jg
xchg
mov
push
mov
dec
test
jecxz
daa
push
stc
cmp
jno
sub
or
pop
dec
aam
push
mov
loop
push
mov
sbb
sub
mov
push
add
cwde
mov
or
jmp
sbb
jl
enter
out
dec
mov
xchg
sbb
les
ins
jo
mov
imul
and
mov
je
mov
inc
mov
inc
sti
imul
mov
sbb
mov
inc
je
cmps
add
dec
adc
jb
mov
jae
in
(bad)
mov
(bad)
adc
aaa
jmp
mov
ret
sbb
shl
popf
inc
pop
pop
leave
jmp
and
xchg
sbb
cmp
ds
xor
sub
push
gs
fstp
out
cmc
pop
scas
enter
sub
adc
data16
popf
add
es
cwde
daa
or
push
mov
aas
sbb
adc
data16
cmp
sub
push
mov
loop
dec
xchg
mov
mov
inc
mov
adc
mov
mov
pop
test
adc
and
and
jg
pop
fiadd
jmp
popf
sar
shr
adc
fwait
sbb
xchg
fdiv
mov
ins
push
int3
leave
fistp
aas
std
push
cwde
or
jne
pop
lahf
mov
das
cdq
aam
adc
out
dec
push
lods
mov
and
leave
pop
xchg
add
jbe
sbb
inc
xchg
or
dec
retf
add
and
shl
(bad)
and
test
add
leave
call
ins
xor
pop
mov
loopne
push
addr16
inc
gs
fidiv
cmp
ror
ret
aaa
pop
mov
or
mov
imul
stos
je
jno
jns
dec
dec
pop
xor
hlt
and
or
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
and
xchg
dec
mov
dec
sub
adc
xchg
xor
mov
movs
(bad)
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
and
xchg
dec
mov
dec
mov
xchg
xor
mov
movs
(bad)
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
icebp
pop
dec
mov
dec
iret
outs
cmps
lahf
test
mov
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
icebp
cmc
movs
xor
cmp
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
fcmovbe
sbb
in
repnz
mov
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
movs
out
push
xchg
pavgw
mov
(bad)
add
mov
lods
retf
lods
push
retf
lods
mov
inc
mov
xchg
ja
mov
dec
into
aaa
sbb
movs
mov
sti
aaa
adc
mov
popa
dec
test
cmp
pushf
fld
(bad)
stos
ins
mov
xor
sbb
ror
test
not
sahf
popa
std
push
dec
xor
nop
mov
repz
sub
les
mov
and
dec
shl
aaa
mov
sbb
lahf
(bad)
jl
push
mov
bound
fwait
pushf
mov
out
les
cmp
(bad)
scas
ret
bound
inc
aas
(bad)
imul
sahf
xchg
pminub
sti
test
fs
jne
sub
test
gs
and
cmp
call
imul
xlat
jns
fs
or
dec
jno
mov
mov
sbb
outs
sub
cmp
xchg
or
fcom
into
jne
jmp
push
fwait
mov
or
mov
scas
int
cmps
push
lods
leave
xlat
adc
jb
sar
nop
mov
rcl
into
movs
sbb
out
xchg
call
xlat
icebp
je
fwait
(bad)
imul
xor
retf
or
int
xor
sub
adc
inc
pop
jmp
ror
lods
data16
lock
ss
retf
je
fwait
mov
xchg
fistp
lods
xor
or
rcr
lods
leave
jbe
inc
mov
loopne
push
fld
lods
leave
pusha
fadd
retf
xor
int3
loopne
xchg
hlt
mov
xchg
mov
int3
lods
mov
mov
repnz
xchg
(bad)
in
or
cmp
aaa
push
fwait
cmps
xor
push
fwait
mov
xchg
add
lock
pop
fsubr
enter
cs
xchg
dec
xchg
mov
retf
lods
mov
mov
mov
xchg
rcr
test
retf
popa
shl
ss
fwait
mov
das
nop
jnp
mov
jbe
rol
cmp
lods
xor
jne
into
jbe
cmp
pop
lock
retf
scas
retf
push
push
add
daa
dec
mov
push
lods
leave
add
fisub
pop
out
jmp
fnstenv
xor
xchg
mov
mov
or
cdq
or
push
cmp
retf
rcl
adc
cmp
fwait
xlat
mov
retf
or
sub
ror
cmp
lods
push
inc
adc
test
or
ret
int
mov
fwait
xchg
cwde
mov
add
test
jbe
or
mov
mov
push
fdiv
cmp
mov
mov
xchg
pop
fwait
inc
mov
jne
leave
jbe
ds
pusha
mov
jbe
jne
fwait
xchg
push
and
jge
lods
mov
call
jnp
xchg
enter
mov
mov
jne
pop
fwait
imul
sbb
out
cld
in
ja
hlt
retf
pop
call
pop
and
sbb
fldcw
adc
sub
ds
fwait
arpl
js
lods
push
mov
dec
mov
mov
(bad)
(bad)
cmps
shl
mov
push
mov
scas
in
mov
cmp
fwait
retf
xchg
mov
mov
xchg
jp
jb
fcomp
dec
push
cmps
retf
lods
data16
push
cmps
frstor
stos
ins
or
in
cmp
ror
mov
add
scas
(bad)
sti
jns
retf
inc
mov
adc
push
pusha
bound
pop
pop
mov
retf
sahf
iret
mov
push
jb
pusha
cld
mov
jbe
inc
nop
pop
fwait
xor
mov
retf
movs
fwait
xchg
outs
push
cmp
jle
xchg
outs
push
inc
sub
ror
lods
mov
push
lods
leave
call
out
int3
jbe
or
enter
pushf
fstp
lods
retf
mov
push
fwait
(bad)
lods
inc
mov
rol
cmp
add
push
cmp
lods
fldcw
cmp
xchg
mov
fidiv
rcr
fisubr
ror
shr
jne
rcl
(bad)
cmps
ror
jmp
mov
leave
jmp
(bad)
xchg
je
fwait
ret
adc
mov
pop
les
scas
mov
sub
ror
repz
rol
hlt
out
push
mov
mov
nop
lods
retf
ret
retf
mov
or
xchg
xor
jno
or
xor
push
ss
mov
popa
adc
aas
fwait
inc
pop
fwait
dec
(bad)
shl
mov
mov
xchg
pop
movs
mov
out
mov
mov
xor
dec
scas
fcmovne
lods
mov
xchg
lods
retf
shl
test
mov
xchg
daa
xlat
repz
push
in
pop
movs
mov
jl
lods
pop
xchg
jo
xor
push
mov
int3
ret
repz
jmp
xchg
xor
lods
xlat
fisttp
ja
repnz
scas
repz
cmps
dec
inc
lods
ds
(bad)
lods
ds
retf
outs
push
ja
repnz
scas
daa
jne
fwait
ret
mov
mov
ss
xchg
xchg
xor
jl
call
xchg
je
or
jae
(bad)
jbe
je
call
xchg
mov
int3
lods
pushaw
mov
pusha
ja
lods
retf
mov
xchg
xchg
mov
jbe
imul
in
pop
jae
xchg
cdq
in
mov
retf
jbe
mov
arpl
adc
or
lods
xor
test
fnstenv
pop
pop
rcl
cwde
nop
mov
popa
ror
iret
jbe
std
and
sbb
cwde
dec
repnz
ror
sub
cmp
sahf
cmps
test
mov
dec
mov
aaa
addr16
idiv
pop
aaa
lea
out
pop
(bad)
leave
jbe
adc
ds
shl
ss
fwait
(bad)
adc
push
fld
pop
xchg
pop
(bad)
test
adc
rcr
int3
jbe
ss
fwait
xlat
lods
ds
fwait
adc
movs
icebp
je
fwait
lahf
sbb
push
repnz
jp
xor
jmp
std
mov
mov
add
not
(bad)
jne
ror
adc
out
jne
ror
cmp
lods
xor
scas
fist
push
pop
rcl
pushaw
sub
out
mov
mov
out
mov
int
ja
mov
jne
dec
pop
adc
mov
enter
cs
(bad)
mov
retf
js
pop
call
stos
leave
jbe
repnz
mov
or
ja
add
ror
push
cli
sub
dec
leave
stos
scas
adc
ds
xor
adc
sub
cmp
mov
leave
jbe
retf
enter
icebp
mov
fdiv
je
fwait
mov
es
je
int3
jbe
dec
push
mov
nop
adc
aaa
push
mov
out
jp
test
ds
ror
jbe
lods
xor
push
mov
ja
in
retf
jb
fld
leave
sub
pusha
ds
lock
retf
lods
xchg
mov
pop
fisub
xchg
push
mov
outs
mov
into
jbe
cmp
pop
inc
rcl
adc
push
jnp
cmp
push
dec
pop
enter
mov
scas
retf
es
jne
xchg
and
setg
retf
adc
or
loop
dec
shr
pop
dec
mov
ror
and
dec
jg
xchg
xor
jae
popw
repnz
ds
xchg
adc
inc
in
mov
int3
jbe
xchg
push
test
mov
cli
cmps
lods
retf
add
addr16
mov
neg
scas
aad
cld
push
stos
leave
jbe
xor
xchg
inc
mov
mov
and
daa
inc
adc
push
mov
scas
or
push
fwait
cmps
pushf
xchg
(bad)
fisttp
ja
repnz
xchg
ficom
xchg
jnp
xchg
mov
jne
ror
cmp
lods
ins
sar
pop
cld
mov
pop
push
adc
sub
xor
dec
ja
fld
pusha
pop
ret
call
ror
enter
jle
lods
data16
in
mov
xchg
lods
retf
rcl
hlt
push
repnz
jp
cmp
mov
scas
or
leave
adc
jbe
cmp
fwait
(bad)
mov
leave
mov
cmp
call
jbe
jne
cmp
(bad)
icebp
cs
adc
call
enter
stc
jns
lods
bound
fwait
inc
mov
repnz
xor
adc
ds
mov
cmp
dec
cmp
mov
retf
cmp
jbe
dec
jp
je
shl
mov
out
jp
mov
(bad)
xor
mov
jbe
jb
cli
mov
cmps
retf
lods
fwait
gs
faddp
cmp
aas
add
xchg
test
and
jbe
add
jp
jo
jbe
cmp
fwait
iret
xchg
jp
mov
retf
cmps
leave
jbe
sub
mov
mov
pop
jae
aam
jbe
xchg
stc
jg
lods
popw
add
or
push
xor
pop
je
les
xchg
xchg
or
leave
jbe
sub
mov
add
mov
out
ret
retf
or
mov
add
jbe
cmp
(bad)
adc
out
jp
dec
push
les
dec
push
fld
mov
xor
rcl
into
and
or
mov
xchg
lods
retf
cli
out
sahf
daa
lods
(bad)
call
out
mov
mov
out
jp
sub
mov
mov
out
mov
push
mov
ins
js
into
call
(bad)
jbe
adc
sub
xchg
dec
je
lods
sub
xchg
xchg
adc
mov
data16
add
mov
cmp
fwait
(bad)
jae
call
or
repz
enter
je
shl
je
fwait
shl
jae
mov
mov
pop
shl
adc
lods
ds
mov
jb
test
popa
aam
mov
(bad)
jbe
adc
je
ret
xor
dec
cs
fsub
adc
add
pusha
repnz
mov
ja
sub
call
mov
enter
push
fwait
scas
dec
mov
xchg
lods
retf
ja
jbe
or
retf
adc
jp
out
jne
push
push
mov
(bad)
ss
fwait
stos
dec
mov
jmp
push
pop
out
retf
mov
and
add
shr
pop
jmp
jbe
xchg
shr
mov
cmp
mov
(bad)
jbe
push
add
sbb
mov
lods
sub
shl
pop
push
and
jbe
(bad)
(bad)
jbe
adc
xor
sbb
add
or
mov
xchg
lods
retf
jmp
mov
out
jne
jmp
push
fwait
mov
adc
out
push
sbb
or
sbb
in
sbb
std
pop
adc
aas
sbb
fnstcw
fwait
jbe
add
fwait
arpl
jbe
push
push
lods
add
rcl
adc
cmp
retf
jg
stos
scas
xor
dec
sbb
mov
repz
mov
xlat
daa
dec
jmp
stc
mov
mov
rol
call
ss
fwait
stos
adc
pop
dec
mov
xor
add
dec
pop
test
or
mov
cs
jmp
mov
mov
nop
pop
xor
or
xor
push
add
rcr
adc
(bad)
retf
test
jbe
repnz
ret
or
and
jp
sub
ret
out
jle
lods
ds
xlat
outs
sbb
or
cmp
push
mov
mov
push
ret
scas
fldenv
rcl
imul
stos
leave
jbe
ss
jbe
xor
sub
rol
call
mov
sbb
out
retf
stos
leave
jbe
xor
pop
cmp
pop
data16
mov
mov
pop
pusha
pop
mov
ins
pop
cmp
pop
call
rcl
scas
mov
fld
fsub
mov
adc
fnstenv
dec
inc
mov
mov
add
adc
out
or
retf
rcr
sbb
out
retf
lods
lods
add
push
fwait
mov
pushf
xchg
mov
int
adc
jbe
lods
call
mov
rol
cmp
nop
rol
stc
jmp
leave
jmp
jmp
data16
adc
xchg
call
popf
xchg
fwait
cmp
adc
out
jp
mov
ror
out
jp
lods
(bad)
call
pop
std
push
mov
clc
jne
lods
xchg
mov
retf
lods
mov
std
stos
leave
pop
and
stos
fcmovne
lods
(bad)
inc
sub
call
call
pop
add
ror
test
outs
sbb
push
xchg
push
jp
lods
push
fld
mov
call
cmp
fwait
(bad)
mov
leave
leave
jmp
data16
shl
pop
push
mov
lds
ss
ins
pop
(bad)
dec
xchg
ja
mov
sti
daa
int
sub
or
push
adc
fcom
xchg
(bad)
mov
sbb
out
sahf
call
mov
jne
into
jbe
mov
imul
leave
stos
scas
cmp
mov
or
shl
ss
fwait
(bad)
dec
retfw
daa
lods
ds
xlat
outs
sbb
aaa
daa
inc
sub
sub
xchg
adc
lods
mov
mov
push
fwait
out
retf
rcl
inc
jne
iret
jbe
ss
(bad)
out
fcom
out
jp
add
jle
and
(bad)
dec
add
pop
push
mov
fld
lods
data16
cmc
add
sbb
pop
fld
rcl
test
nop
cmp
xor
mov
pop
sbb
lods
sub
add
mov
cmp
fwait
cmps
jmp
add
out
cmp
jmp
lods
xor
push
dec
push
test
or
dec
push
jg
pop
ret
cmp
fwait
scas
mov
retf
fdiv
clc
mov
xchg
test
shr
test
ds
mov
add
jge
out
scas
xchg
lea
sbb
cmps
pop
sub
out
sbb
rol
call
cmp
dec
cmp
repz
dec
cmps
add
jne
int3
jbe
cmp
fwait
xchg
mov
leave
fisttp
leave
mov
setnp
lods
or
leave
retf
jae
ss
dec
push
shr
dec
mov
lea
ss
adc
les
jp
call
fistp
ror
nop
push
lods
mov
mov
and
or
rcr
call
jle
xchg
leave
jecxz
lods
mov
mov
retf
fidivr
xchg
add
mov
jle
leave
xlat
daa
lods
(bad)
call
jo
mov
cmp
xchg
xor
mov
fld
jae
jne
je
call
leave
lods
retf
fisttp
ja
repnz
mov
adc
out
jne
shl
cmp
xor
hlt
lods
sub
lods
ds
xchg
outs
(bad)
jbe
mov
iret
jbe
jae
call
ds
(bad)
xchg
cmp
sub
jne
iret
jbe
adc
xor
nop
shl
xchg
lods
xor
push
xchg
lods
outs
mov
retf
repz
fucomip
pop
push
(bad)
icebp
mov
pop
fst
out
scas
outs
aaa
push
fwait
pop
retf
popf
leave
jbe
iret
push
lods
leave
pusha
sbb
retf
addr16
jbe
je
call
or
repnz
mov
mov
jecxz
into
call
out
cmps
dec
loop
cmp
cmp
retf
lods
leave
jbe
cmp
call
xchg
add
outs
retf
jbe
xchg
in
or
pop
adc
mov
mov
std
push
xor
adc
cmc
imul
scas
jp
mov
sysret
je
shl
cmp
iret
jbe
cmp
fwait
stos
mov
leave
pop
xchg
mov
jbe
and
xchg
out
mov
(bad)
cmp
mov
loope
adc
dec
xchg
mov
mov
leave
xlat
sbb
out
call
mov
jbe
ss
call
sub
ss
mov
inc
movs
leave
jbe
outs
bound
adc
sbb
adc
jle
xor
hlt
add
outs
enter
and
pop
fstp
ss
mov
es
mov
mov
mov
push
cmp
cmp
mov
jle
leave
cli
ja
add
std
dec
arpl
or
mov
jp
leave
fstp
iret
shl
xchg
push
jne
lods
dec
aas
or
jmp
xor
imul
adc
push
in
pop
dec
data16
adc
out
jle
adc
stos
je
leave
jbe
push
cmp
mov
mov
shl
(bad)
call
out
pop
lock
leave
jbe
jns
jbe
cmp
call
mov
jge
xor
mov
test
push
pop
mov
movs
mov
sbb
or
cs
das
outs
enter
ret
jbe
jne
fwait
(bad)
in
sbb
fwait
xchg
mov
leave
int3
call
jbe
mov
cli
dec
add
jae
shl
ss
add
or
and
xchg
mov
shr
nop
mov
lock
test
or
jbe
push
ret
xchg
adc
lods
add
xor
lock
retf
jbe
test
push
xchg
mov
int
sub
jne
ret
jbe
ds
mov
push
repnz
sbb
add
rcl
scas
add
fbld
call
pop
sbb
jle
dec
adc
jmp
mov
push
(bad)
fwait
(bad)
jnp
cld
sub
jbe
dec
pop
mov
dec
push
add
test
icebp
mov
push
or
in
push
fwait
(bad)
lods
(bad)
call
pop
fstp
dec
pop
jbe
ror
(bad)
call
xor
cmp
jae
je
call
adc
or
jbe
ins
outs
div
loop
hlt
or
nop
xlat
icebp
mov
out
call
jecxz
add
repnz
loopne
retf
(bad)
cmp
call
ror
fcom
out
xchg
out
xchg
loopne
data16
out
mov
icebp
ss
fwait
xchg
dec
mov
xchg
lods
retf
adc
mov
repz
jbe
adc
sub
cmps
shl
mov
push
fwait
(bad)
jae
call
out
mov
retf
imul
sbb
mov
leave
std
pop
xor
cmp
sbb
xchg
push
add
jge
xchg
(bad)
sub
push
fwait
xchg
xchg
pop
jl
lods
ins
pusha
lods
call
out
retf
ror
fadd
(bad)
rcl
cmp
adc
xor
pusha
aaa
sbb
arpl
mov
sub
cmp
push
mov
dec
jno
stos
scas
cmp
pop
sub
or
push
fwait
mov
xchg
mov
int
mov
mov
xchg
pop
jne
mov
jne
lods
pushaw
cmps
mov
jbe
xor
mov
dec
(bad)
jo
daa
repnz
leave
pusha
lahf
lods
leave
jbe
repnz
scas
push
popa
int3
jbe
dec
pop
rcr
mov
xor
mov
scas
mov
ja
lods
retf
cmps
leave
jbe
call
adc
xor
in
lods
ds
mov
div
out
pop
call
call
call
inc
shl
rcl
fld
lods
retf
push
mov
test
rcr
pop
enter
out
scas
je
or
ins
shl
inc
mov
retf
mov
out
xchg
jbe
xchg
push
bound
or
mov
nop
jnp
bound
mov
int3
lods
mov
jnp
leave
cmp
cmp
(bad)
and
push
call
scas
retf
adc
mov
jp
leave
cmp
jne
mov
mov
(bad)
jp
fld
stos
leave
int
xor
mov
jae
xor
push
sub
rcl
out
daa
(bad)
mov
lea
mov
sub
push
std
retf
scas
retf
xchg
xchg
ins
mov
leave
stos
scas
sub
pop
mov
mov
retf
jle
int
mov
out
jp
dec
scas
ror
lods
sbb
fmul
std
retf
scas
retf
mov
js
and
jp
ds
jnp
and
mov
lock
pusha
dec
adc
out
cmp
cmp
retf
adc
jbe
mov
push
jne
enter
mov
test
xchg
pop
jns
leave
jbe
adc
xchg
jae
leave
jbe
mov
or
lods
push
ret
scas
int
ds
into
ins
enter
mov
or
lods
mov
sub
cli
in
push
cld
mov
mov
mov
dec
mov
jnp
leave
pop
cwde
pushf
leave
jbe
pop
push
fstp
div
outs
pop
cmp
imul
jbe
mov
mov
ins
dec
scas
ror
lods
adc
dec
push
std
retf
scas
retf
ds
xchg
add
pop
adc
out
push
in
add
pusha
js
leave
jbe
repnz
mov
or
loop
cmp
ror
xchg
daa
dec
leave
lods
(bad)
fisttp
ja
repnz
mov
(bad)
cmps
cmp
adc
out
fcom
out
scas
daa
lods
ds
shr
ja
jae
fwait
fwait
and
in
adc
ds
scas
dec
xchg
mov
int
xor
nop
rcl
xchg
loop
ds
scas
outs
bnd
test
pusha
xchg
cmp
scas
mov
fwait
scas
or
mov
ins
lahf
lea
sbb
or
and
int3
jbe
mov
jnp
sbb
mov
test
out
jne
shl
pusha
iret
sahf
leave
jbe
repnz
cmp
push
fwait
stos
mov
mov
scas
mov
leave
add
shr
test
jmp
shl
push
jg
mov
jbe
xor
dec
jbe
dec
sbb
fnstcw
sub
push
ret
scas
in
pushaw
ins
cmps
leave
jbe
adc
sbb
push
jnp
or
fnstcw
fwait
cmovnp
push
push
fld
lods
leave
adc
movs
call
repnz
jp
adc
scas
lods
ds
(bad)
daa
xchg
and
lods
sub
or
out
mov
out
xchg
dec
ror
pop
lods
test
xchg
mov
int3
lods
push
add
sbb
(bad)
pusha
mov
leave
jbe
adc
sahf
call
mov
ja
enter
out
cmp
aaa
push
fwait
mov
push
mov
lock
test
mov
movhps
neg
rcl
mov
adc
out
jp
xor
push
fwait
retf
cwde
jmp
jp
lods
fst
dec
pop
pop
rcr
cmp
mov
push
data16
mov
push
dec
push
ret
mov
int3
lods
push
push
mov
jno
jae
enter
dec
xchg
push
pop
cmp
jne
lods
leave
xlat
adc
out
jle
neg
rcr
retf
jbe
ss
fwait
xchg
xchg
dec
push
sub
jbe
adc
jle
xor
xlat
adc
out
add
shr
pop
push
mov
jbe
push
pop
fbld
std
push
sbb
fldcw
cmp
fwait
(bad)
mov
pop
pusha
repnz
leave
jbe
mov
outs
dec
inc
or
adc
out
pop
cmp
data16
ror
test
jno
jbe
push
mov
jne
lods
fsqrt
test
cmp
lods
leave
adc
jbe
or
push
fld
cwde
leave
jbe
adc
inc
sbb
mov
leave
ins
sar
pop
dec
lods
leave
jbe
dec
pop
add
sub
data16
pusha
xchg
cmps
leave
jbe
dec
push
fld
mov
pop
nop
in
sub
mov
jg
leave
ds
repnz
xor
lods
leave
jbe
jne
call
mov
(bad)
mov
data16
into
jp
in
retf
loop
pop
rcr
sar
dec
pop
dec
test
jbe
add
mov
inc
cmp
in
(bad)
call
push
ret
scas
jmp
push
pop
inc
out
retf
rcl
scas
shl
ror
cmp
mov
out
mov
repnz
rcl
mov
fist
push
mov
xchg
(bad)
fisttp
lods
leave
pop
sbb
fwait
(bad)
mov
mov
xchg
stos
jo
lods
push
fld
stos
leave
fbld
inc
mov
mov
cs
mov
push
jmp
mov
mov
or
pop
xchg
outs
and
inc
mov
sub
push
hlt
inc
jecxz
lock
mov
in
stos
leave
add
shr
pop
mov
enter
xchg
adc
mov
pop
fbstp
lods
cdq
xchg
pop
outs
sbb
inc
fwait
xchg
adc
dec
repnz
mov
outs
mov
lods
retf
push
repnz
add
adc
ds
repz
mov
mov
outs
arpl
push
int3
jl
aas
dec
repnz
ins
cli
mov
leave
fstp
movs
xor
or
sub
cdq
fstp
nop
mov
imul
inc
lods
xor
push
jo
pop
repnz
ss
mov
cdq
sbb
repnz
cdq
jp
cs
sahf
fs
imul
scas
cmp
dec
dec
adc
repz
repnz
mov
and
pop
fstp
xor
xor
push
cdq
cmp
repnz
ins
push
add
inc
mov
leave
std
daa
mov
mov
mov
out
cmp
ror
int
jne
fwait
mov
lods
(bad)
call
sar
out
mov
xor
mov
sahf
xlat
daa
push
data16
rcl
pusha
cmps
leave
jbe
adc
scas
call
sbb
jmp
adc
jp
xor
sar
leave
pop
pushf
xchg
leave
jbe
mov
mov
pop
mov
jo
leave
pop
pop
cli
out
jp
cmp
js
lods
sub
jne
mov
mov
dec
jnp
leave
fstp
leave
mov
mov
ret
mov
test
or
jbe
jmp
push
fwait
mov
xor
nop
rol
pop
bnd
fwait
xchg
out
cmp
sar
cmp
lods
(bad)
ret
loop
adc
pop
(bad)
jbe
jne
fwait
mov
es
je
repz
pop
jmp
sub
movs
leave
jbe
cmp
cmp
sbb
dec
push
shr
pop
sbb
out
dec
cld
dec
push
add
mov
imul
fwait
imul
mov
fwait
iret
lods
or
iret
ror
pop
xchg
jmp
or
call
shr
pop
mov
cdq
inc
fsubr
push
cmp
test
sub
pop
lea
xchg
dec
loope
xchg
jnp
xchg
popf
call
push
xlat
or
mov
iret
mov
mov
stos
arpl
add
(bad)
pcmpgtd
iret
push
cdq
lea
sbb
stos
xbegin
aas
push
mov
cld
and
inc
cmp
sub
daa
ins
ror
sahf
hlt
loope
ret
add
pop
out
sbb
hlt
xchg
or
cmp
sbb
(bad)
and
or
aas
mov
jle
mov
ja
call
fimul
push
add
dec
test
push
popf
jmp
or
cmp
dec
gs
int3
push
hlt
mov
fcomp
inc
lods
push
cmp
mov
and
mov
shl
fadd
xchg
jnp
xchg
test
dec
xchg
xor
pop
retf
pusha
xchg
adc
jge
xor
jo
icebp
neg
xor
mov
cdq
(bad)
xchg
sbb
stos
xbegin
inc
pop
mov
dec
daa
(bad)
popf
jb
push
imul
ror
sahf
push
loope
ret
add
cmp
fs
jmp
fprem1
sub
push
mov
pop
imul
sahf
and
xchg
sti
aam
out
or
and
sub
and
cdq
ja
call
imul
dec
dec
pop
mov
mov
mov
or
dec
add
lock
(bad)
test
mov
cdq
inc
fdivr
and
lods
push
cmp
push
cld
dec
xchg
xchg
sbb
jmp
lahf
mov
xor
xchg
mov
cmps
int
(bad)
push
adc
popa
mov
stos
ret
jns
xor
popf
pusha
xor
push
push
cdq
mov
sbb
stos
(bad)
mul
inc
sub
aas
retf
mov
and
inc
mov
ins
aam
sahf
inc
loope
ret
add
xchg
push
enter
mov
cmp
retf
and
bound
fistp
hlt
cmp
fstp
fisttp
push
xchg
fidiv
call
(bad)
jmp
mov
pop
push
sahf
xchg
(bad)
clc
leave
movs
rcr
jmp
or
add
dec
cmp
cdq
out
mov
fmul
mov
cmp
icebp
pop
(bad)
xchg
or
repz
cmp
rcr
jnp
xchg
popf
mov
loop
retf
inc
(bad)
push
int
lods
mov
cmp
stos
shr
mov
cmp
ja
cdq
cmps
xchg
sbb
stos
xbegin
aas
ss
retf
sub
jecxz
jl
jbe
shr
dec
sub
setle
mov
jae
add
mov
mov
fwait
imul
(bad)
pop
add
sti
adc
fcom
(bad)
pop
push
mov
adc
ja
call
pop
scas
jb
not
fistp
sub
lahf
(bad)
fistp
adc
clc
inc
jle
dec
mov
call
push
ins
out
neg
ss
inc
fmul
push
cmp
mov
lods
cmps
adc
and
sbb
dec
rcl
dec
jmp
fwait
mov
xor
sti
sub
mov
push
adc
xor
loope
or
mov
iret
out
push
cdq
push
mov
stos
stos
mov
inc
sbb
cli
je
neg
sar
mov
ins
ror
sahf
vcmppd
add
jge
(bad)
out
inc
icebp
in
mov
repz
dec
mov
pop
pop
fcmovu
(bad)
sbb
adc
push
fdivr
shl
sbb
call
push
push
adc
std
push
out
jns
sub
cmps
(bad)
out
pop
sub
not
cs
in
es
adc
das
fimul
packssdw
not
shr
jmp
repnz
das
fsin
daa
and
cmp
fldcw
add
fisttp
or
mov
xchg
leave
lea
sti
(bad)
pop
add
test
sub
or
sub
and
rcl
in
sbb
and
or
ret
mov
call
jo
je
fst
int3
jbe
pop
mov
pop
scas
icebp
jp
popf
push
inc
dec
int
test
(bad)
push
add
xor
pop
xor
call
mov
xor
lock
and
inc
adc
scas
divps
xor
leave
xchg
shr
add
add
neg
xchg
rcl
lock
leave
xchg
ins
jb
sar
inc
add
ja
xchg
mov
sbb
push
add
sahf
lods
pop
add
scas
ja
mov
(bad)
mov
add
mov
mov
aam
jg
je
xchg
in
neg
aas
test
dec
fdivr
scas
xchg
fdivr
test
jmp
(bad)
int
cdq
xchg
or
pushf
enter
push
in
daa
add
push
cmp
pusha
loope
jl
push
push
pushf
or
mov
not
cs
in
es
inc
scas
test
mov
mov
loop
repz
test
mov
push
rcr
or
mov
cdq
shl
in
mov
cwde
lods
mov
xlat
cmp
fidivr
repz
popf
pop
mov
mov
mov
inc
les
push
test
pop
pushf
xor
hlt
inc
icebp
retf
ret
sbb
sbb
fisub
push
retf
cmp
mov
ss
(bad)
jmp
(bad)
stc
into
and
call
adc
lock
and
fdiv
pop
jmp
rcr
xlat
daa
pop
push
pusha
js
fild
xor
test
sar
mov
dec
jne
call
not
add
and
cld
dec
ss
repz
cmp
ficom
sbb
dec
inc
ret
(bad)
sub
addr16
leave
mov
movs
aas
inc
int
js
mov
retf
enter
int
mov
xchg
iret
pushf
inc
sbb
hlt
push
mov
popf
push
pusha
(bad)
jno
fsubr
repz
rol
cmp
sbb
(bad)
adc
xchg
in
es
mov
cmp
test
(bad)
out
pop
arpl
daa
ds
je
pushf
jo
push
lahf
les
imul
mov
sbb
inc
sar
pop
mov
fstp
ficom
sbb
xchg
jp
jg
leave
arpl
inc
sbb
aam
loope
mov
xchg
sub
das
add
lahf
pop
imul
xchg
sbb
push
cwde
es
mov
rcr
inc
scas
mov
push
pushf
jp
sbb
fs
in
sbb
mov
pop
test
test
mov
movs
mov
push
push
stos
ins
xchg
mov
jmp
out
int
lock
and
cmps
add
int
mov
and
lahf
mov
iret
push
fsubr
aad
mov
aam
imul
scas
pop
jge
in
bnd
lea
pushf
dec
xchg
sbb
sbb
iret
sbb
or
(bad)
push
mov
js
fldlg2
pop
push
pop
mov
ret
push
mov
xor
or
fwait
lods
dec
adc
loopne
aam
mov
arpl
sub
int
sbb
mov
xchg
inc
adc
fild
cmp
push
mov
out
pop
sub
not
cs
in
es
retf
jne
pop
adc
loope
sbb
repnz
scas
lods
jp
loopne
retf
dec
xor
(bad)
jnp
dec
sbb
rcl
sar
add
gs
push
mov
xor
mov
pushf
pop
jl
cs
xlat
or
and
add
lahf
test
stos
sbb
cmp
xor
xchg
cmovo
(bad)
in
dec
or
sub
imul
cmp
jae
jns
ds
ret
or
push
sub
push
call
and
add
and
loope
mov
dec
or
sub
fsubr
int
lock
and
out
push
pop
popf
cmp
sub
sahf
out
jbe
sub
pusha
dec
xor
mov
and
push
outs
push
ja
cmp
mov
int3
lock
mov
gs
lock
inc
cli
pop
pop
je
mov
in
push
std
bswap
jge
cmp
scas
fild
and
jmp
mov
inc
or
div
fsubr
and
jg
mov
ret
scas
test
wrmsr
add
cmp
mov
or
jne
dec
call
mov
add
fld
rcr
sbb
pop
sub
not
cs
in
es
or
repnz
cmp
aaa
adc
inc
scas
mov
xchg
clc
and
jo
adc
sub
ins
mov
or
fistp
inc
and
lods
push
dec
je
xchg
and
jno
arpl
(bad)
push
inc
jg
mov
stos
dec
xchg
test
int3
adc
std
jmp
pushf
imul
(bad)
lea
test
repnz
scas
xor
cs
scas
bound
adc
xchg
aad
or
hlt
mov
xchg
cmp
xchg
jo
neg
sbb
mov
mov
in
adc
lock
and
push
pop
test
sub
lock
push
clc
mov
js
bound
loop
xor
(bad)
stos
enter
paddq
addr16
mov
mov
in
mov
dec
les
sahf
add
cmps
mov
xor
pop
push
xor
push
dec
pop
je
fcomp
push
sti
dec
mov
mov
cmps
push
ins
mov
or
retf
xor
mov
xchg
sbb
lds
mov
ds
pop
push
xchg
xchg
rcl
aad
call
xor
lds
add
js
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
and
and
jae
ins
bound
or
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
ins
popa
outs
imul
jb
imul
xor
ds
jae
ins
bound
fs
je
je
and
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
and
or
and
jb
imul
xor
xor
xor
or
and
gs
xor
and
and
ins
gs
outs
inc
popa
outs
jbe
jae
gs
and
ds
and
gs
jb
jo
imul
outs
inc
popa
outs
jbe
jae
das
fs
jb
jo
imul
and
and
gs
outs
fs
arpl
or
and
gs
outs
fs
je
jae
gs
bound
or
and
jae
gs
bound
fs
je
je
or
and
and
and
je
jo
cmp
xor
and
and
and
and
outs
popa
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
or
and
and
and
jbe
jb
imul
xor
xor
xor
or
and
and
and
jo
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
ins
popa
outs
addr16
addr16
or
and
and
and
and
jo
outs
arpl
jae
jb
jb
push
je
jb
cmp
and
ds
and
fs
outs
fs
je
jae
gs
bound
or
and
fs
outs
fs
arpl
or
jae
gs
bound
or
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
xor
or
inc
add
add
add
or
inc
add
add
add
add
add
or
inc
add
add
add
add
add
add
cdq
add
add
add
add
and
add
add
add
add
add
rol
aas
adc
aas
add
add
add
add
inc
cmp
adc
xor
adc
and
adc
(bad)
(bad)
(bad)
(bad)
push
add
push
add
push
(bad)
aas
push
(bad)
aas
push
(bad)
aas
push
(bad)
aas
push
(bad)
aas
push
(bad)
aas
push
(bad)
aas
push
(bad)
aas
push
(bad)
aas
push
(bad)
aas
push
(bad)
aas
(bad)
adc
aas
(bad)
adc
aas
cld
aas
(bad)
(bad)
mov
jg
dec
(bad)
(bad)
inc
pop
(bad)
inc
jg
inc
inc
inc
inc
dec
inc
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
js
add
dec
add
aas
into
add
and
add
and
add
and
add
and
add
and
add
and
add
out
add
or
add
lock
and
add
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
inc
add
inc
add
inc
add
inc
add
inc
xchg
inc
xchg
inc
pop
(bad)
inc
pop
(bad)
inc
pop
(bad)
inc
pop
(bad)
inc
pop
(bad)
inc
sti
(bad)
inc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
mov
mov
ja
ja
mov
mov
ja
mov
ja
jo
add
or
add
or
add
or
add
or
add
or
(bad)
dec
xchg
(bad)
(bad)
(bad)
dec
xchg
add
ja
(bad)
(bad)
(bad)
dec
xchg
(bad)
(bad)
(bad)
dec
xchg
lock
(bad)
dec
xchg
(bad)
(bad)
(bad)
dec
xchg
lock
(bad)
dec
xchg
(bad)
(bad)
(bad)
dec
xchg
div
(bad)
dec
xchg
add
(bad)
dec
xchg
(bad)
(bad)
(bad)
dec
xchg
add
(bad)
dec
xchg
(bad)
(bad)
(bad)
dec
xchg
div
(bad)
dec
xchg
(bad)
(bad)
(bad)
dec
xchg
(bad)
(bad)
(bad)
dec
xchg
(bad)
(bad)
(bad)
dec
xchg
(bad)
(bad)
(bad)
dec
xchg
data16
xchg
jmp
dec
xchg
push
outs
dec
xchg
jmp
dec
xchg
idiv
outs
dec
xchg
jmp
dec
xchg
imul
dec
xchg
(bad)
jmp
or
dec
xchg
imul
dec
xchg
jmp
dec
xchg
data16
or
outs
or
outs
or
outs
or
outs
or
(bad)
dec
xchg
(bad)
jmp
or
psadbw
dec
xchg
imul
clc
or
ud0
clc
or
ud0
dec
xchg
push
outs
mov
ja
ud0
dec
xchg
idiv
outs
mov
ja
ud0
test
(bad)
(bad)
dec
xchg
(bad)
push
add
ja
ud0
(bad)
dec
xchg
(bad)
push
add
ja
ud0
lock
ja
ud0
(bad)
dec
ja
ud0
lock
ja
(bad)
(bad)
(bad)
dec
ja
ud0
lock
ja
(bad)
push
lock
ja
(bad)
(bad)
(bad)
inc
ja
ud0
lock
ja
ja
(bad)
(bad)
(bad)
inc
ja
ud0
lock
ja
ja
(bad)
push
pop
ja
ja
add
add
pop
ja
add
add
ja
ja
add
add
add
ja
add
add
ja
ja
add
add
ja
ja
add
add
add
add
add
and
dec
pop
push
pop
push
arpl
stc
pop
fisttp
add
add
add
cmp
dec
imul
jmp
adc
sub
add
sub
add
add
add
add
dec
push
pop
push
jg
cwde
jl
lea
add
add
add
add
inc
add
add
add
add
add
or
add
add
push
add
add
add
add
push
iret
push
push
jg
js
add
add
pop
push
dec
add
pop
add
push
pop
add
add
mov
(bad)
inc
add
inc
push
push
jg
js
arpl
dec
add
add
or
add
add
add
add
jns
jae
dec
add
jae
je
push
add
add
xor
xor
add
dec
add
jae
je
xor
add
add
add
add
add
add
add
inc
jns
add
add
sub
add
add
add
add
add
add
add
add
inc
jns
add
add
add
add
push
fiadd
retf
add
add
add
add
add
inc
pusha
sub
add
sub
add
add
add
push
adc
retf
add
add
add
add
add
inc
dec
cs
test
add
sub
pop
add
push
pop
add
inc
add
(bad)
inc
add
inc
dec
xchg
dec
cmp
add
add
add
add
push
adc
adc
add
or
jmp
add
(bad)
inc
add
add
push
sbb
push
add
add
add
inc
mov
add
add
sub
add
add
add
add
add
add
push
add
add
or
add
add
sbb
push
add
add
add
add
add
add
add
push
add
add
or
adc
sbb
or
(bad)
(bad)
(bad)
inc
pop
cmp
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
pop
cmp
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
pop
cmp
add
add
add
add
add
add
add
add
or
(bad)
(bad)
(bad)
inc
xor
add
push
add
add
sub
add
add
or
inc
ja
add
add
add
add
push
add
add
sub
add
add
or
inc
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
or
inc
jns
cwde
enter
add
sub
add
add
add
add
add
add
add
or
bound
inc
add
or
inc
add
add
add
add
add
or
add
add
test
add
str
mov
add
lldt
or
add
or
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
adc
adc
xor
(bad)
cmp
cmp
cmp
cmp
add
fdivr
add
(bad)
cmp
cmp
add
cmp
add
cmp
cmp
add
cmp
cmp
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
cmp
add
cmp
cmp
add
cmp
add
paddd
movs
add
add
(bad)
(bad)
cmp
add
lahf
(bad)
jmp
add
xor
add
loopne
add
aas
add
add
add
add
(bad)
inc
add
add
jb
into
pusha
clc
jmp
stc
call
call
outs
and
push
ret
lods
inc
jns
ret
scas
(bad)
(bad)
(bad)
jmp
adc
cmp
clc
jmp
xchg
mov
jns
add
jmp
push
add
xchg
ds
jmp
aaa
add
add
adc
push
mov
jmp
jge
add
stc
jmp
push
iret
mov
jmp
push
int3
loopne
sub
jmp
mov
add
jmp
pop
test
call
aaa
les
(bad)
(bad)
jmp
inc
cmp
xlat
and
ret
or
add
and
sbb
sub
stc
jmp
mov
(bad)
(bad)
(bad)
jmp
jbe
call
jmp
pminsw
jae
sbb
call
(bad)
into
stc
les
push
mov
push
jno
jne
cwde
mov
pop
dec
(bad)
les
test
xchg
push
ja
lods
dec
cmp
mov
jmp
push
mov
or
push
jns
jo
icebp
(bad)
fcomp
inc
jnp
mov
jbe
jbe
and
fcom
mov
mov
scas
retf
cs
jbe
lods
retf
scas
sti
lds
and
jno
add
daa
jg
jbe
add
mov
dec
cmp
sbb
mov
mov
mov
ror
aam
lea
xchg
push
pop
jmp
cmp
jg
icebp
into
add
mov
dec
jmp
lods
aas
xchg
ror
jbe
sub
jb
mov
push
ret
mov
push
leave
int
fwait
xor
ja
jb
mov
(bad)
into
mov
