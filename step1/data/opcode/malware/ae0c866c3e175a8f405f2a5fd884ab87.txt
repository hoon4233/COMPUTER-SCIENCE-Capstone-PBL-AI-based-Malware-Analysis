(bad)
call
push
mov
push
lea
add
shl
mov
xlat
xor
jecxz
push
lods
mov
sub
out
push
pop
push
cld
les
neg
rcl
into
and
cdq
out
xchg
and
sub
and
(bad)
(bad)
call
push
rcl
or
add
mov
mov
inc
xchg
pop
adc
or
ins
mov
(bad)
(bad)
(bad)
out
in
neg
fisttp
inc
inc
mov
pop
dec
xchg
scas
jge
pop
dec
lahf
jb
test
retf
gs
lahf
(bad)
(bad)
(bad)
(bad)
jmp
jge
shr
retf
mov
lea
in
loopne
ret
je
inc
push
(bad)
(bad)
(bad)
dec
inc
data16
test
mov
mov
mov
xor
or
ret
out
cs
icebp
int3
(bad)
(bad)
(bad)
dec
loopne
enter
inc
test
test
rcr
sub
pop
xchg
shl
or
(bad)
(bad)
jmp
data16
mov
lahf
push
retf
in
aaa
into
repz
mov
(bad)
(bad)
(bad)
retf
jg
push
jnp
ja
dec
mov
lea
in
jno
int
cld
in
fwait
cmp
(bad)
(bad)
inc
repz
sti
cmc
mov
imul
fsubr
cdq
jns
jae
push
and
and
push
adc
mov
(bad)
(bad)
(bad)
call
mov
and
lea
fwait
movs
jnp
mov
mov
(bad)
(bad)
push
mov
push
int3
(bad)
(bad)
ins
push
xchg
sub
cmp
sar
adc
mov
(bad)
(bad)
(bad)
inc
mov
or
addr16
jae
push
push
scas
repnz
jl
cli
push
dec
ja
bound
(bad)
(bad)
(bad)
clc
mov
ret
sbb
cli
xchg
add
addr16
call
addr16
and
mov
dec
not
outs
cdq
jecxz
test
call
arpl
push
(bad)
(bad)
(bad)
call
dec
cmp
cmp
mov
or
mov
sub
sbb
inc
call
(bad)
(bad)
(bad)
jmp
mov
fcom
cmc
cmps
jl
cmp
mov
xor
jns
mov
test
(bad)
(bad)
(bad)
dec
cs
xor
movs
ins
ja
sbb
sar
into
or
push
test
retf
(bad)
(bad)
dec
sub
lods
sub
(bad)
adc
xchg
cmp
xlat
jb
outs
out
xor
(bad)
(bad)
(bad)
jmp
in
adc
mov
pushf
out
test
imul
(bad)
(bad)
inc
xchg
push
fistp
loopne
mov
sub
gs
sub
mov
in
lahf
mov
fidiv
xchg
push
adc
fwait
or
jb
idiv
xor
cmp
idiv
cmp
jne
(bad)
arpl
mov
imul
dec
sub
js
or
jb
(bad)
(bad)
(bad)
call
enter
cmp
cmp
cld
jbe
int
mov
inc
mov
jae
fnstenv
or
inc
inc
sub
or
inc
xchg
push
es
pop
mov
loop
inc
rcr
addr16
out
ins
or
hlt
sbb
mov
out
inc
add
jg
mov
(bad)
jg
adc
xor
add
pop
inc
mov
dec
ss
jecxz
cmp
pop
inc
mov
add
(bad)
(bad)
jmp
dec
cld
(bad)
and
test
and
outs
ror
rcr
adc
pop
or
jp
out
(bad)
(bad)
(bad)
sti
push
xlat
sub
mov
adc
xor
inc
push
jmp
dec
xchg
ins
int
cmp
(bad)
inc
mov
mov
push
(bad)
push
icebp
int
jl
in
adc
(bad)
(bad)
(bad)
(bad)
jns
add
loope
adc
fnstsw
lahf
fldlg2
out
push
shr
sub
(bad)
(bad)
(bad)
dec
addr16
call
push
push
jns
aad
mov
xchg
mov
xor
loop
nop
adc
adc
jb
mov
jl
mov
cmp
or
aaa
jb
fwait
nop
scas
mov
adc
sub
xchg
xor
fiadd
sub
loopne
inc
mov
retf
loope
cld
jmp
dec
dec
mov
jb
inc
add
mov
(bad)
(bad)
jg
sub
in
add
push
loope
inc
or
(bad)
rol
(bad)
(bad)
jmp
add
push
inc
dec
(bad)
xor
jne
push
sbb
cmc
mov
test
loope
dec
ret
mov
retf
push
fnsave
fwait
sar
cmps
inc
movs
(bad)
(bad)
(bad)
call
mov
cwde
adc
hlt
mov
cli
sbb
mov
sahf
and
inc
pop
(bad)
(bad)
(bad)
dec
xor
repnz
cmp
jg
sub
mov
div
sub
and
jmp
jl
cld
inc
ss
xchg
adc
scas
and
iret
int3
dec
cmp
mov
cmp
lods
(bad)
(bad)
call
aad
cmps
dec
lods
scas
pop
(bad)
or
aaa
mov
and
sub
(bad)
(bad)
jmp
pop
jmp
sub
jae
and
call
push
out
(bad)
loop
(bad)
(bad)
(bad)
(bad)
fst
leave
test
mov
mov
bswap
ret
daa
or
add
pop
mov
(bad)
(bad)
call
pop
mov
and
cmp
mov
sub
mov
call
imul
jge
(bad)
(bad)
call
xchg
mov
pop
mov
(bad)
sbb
push
jg
add
or
mov
pop
push
mov
adc
(bad)
push
jmp
adc
dec
jne
inc
mov
adc
xor
or
dec
xchg
cmp
push
sbb
sbb
test
(bad)
dec
loop
mov
xor
ins
in
mov
int3
push
cmp
lds
(bad)
call
pop
ret
mov
aam
rcr
arpl
mov
loopne
and
aam
std
(bad)
call
jnp
cmp
push
dec
out
and
xor
or
fcompp
(bad)
(bad)
call
test
loopne
push
jg
xchg
inc
(bad)
ss
xor
push
mov
nop
add
aad
lea
cwde
add
(bad)
(bad)
(bad)
dec
bound
mov
xor
jns
jne
xchg
call
pop
adc
scas
mov
cmp
mov
mov
xor
pop
dec
mov
cmp
cmp
push
mov
xlat
jge
ds
shl
mov
or
cwde
mov
outs
icebp
cs
(bad)
(bad)
jg
test
arpl
je
cmp
popf
retf
test
cmps
test
ss
sub
dec
mov
lods
lsl
ficomp
inc
add
sti
sub
(bad)
(bad)
dec
lods
bound
stc
pop
push
inc
push
add
push
popf
dec
imul
fbstp
push
scas
(bad)
(bad)
(bad)
jmp
jae
sbb
mov
and
scas
adc
jle
(bad)
div
add
sbb
adc
(bad)
(bad)
inc
xchg
(bad)
mov
xchg
xchg
ss
mov
stos
xor
xor
mul
pop
sbb
(bad)
(bad)
dec
jno
rcl
mov
imul
mov
jmp
(bad)
(bad)
(bad)
clc
jnp
jae
dec
push
stos
fdivr
and
mov
rol
mov
outs
cmp
(bad)
mov
sbb
cmc
jb
xor
test
jl
mov
jmp
clc
dec
movs
dec
mov
les
inc
sbb
(bad)
call
and
mov
ins
adc
dec
and
xchg
int
cmp
push
pop
loopne
inc
loopne
fcomp
faddp
jecxz
cs
jmp
dec
leave
sbb
lods
mov
scas
or
repz
(bad)
movs
push
retf
sti
out
or
mov
outs
inc
inc
out
hlt
cmp
sbb
ror
repnz
(bad)
(bad)
(bad)
dec
inc
ins
mov
dec
push
lods
stc
test
neg
xchg
cwde
adc
je
stc
pop
mov
sti
(bad)
mov
xor
inc
js
in
ds
xor
push
aam
and
(bad)
push
daa
sbb
fst
aad
xor
xchg
rol
and
ja
lds
and
repnz
hlt
and
mov
mov
pop
mov
(bad)
jg
xchg
lds
lods
daa
or
(bad)
pop
sbb
xor
mov
dec
sub
inc
mov
repnz
popa
mov
mov
js
stos
push
jo
out
jo
mov
lahf
addr16
or
inc
and
jns
sahf
mov
aas
mov
(bad)
or
mov
stos
(bad)
jg
call
dec
pop
jmp
aad
daa
mov
xor
add
push
(bad)
(bad)
(bad)
call
cmc
sahf
cdq
outs
imul
or
lea
aaa
sahf
mov
sbb
(bad)
mov
(bad)
call
mov
push
cmp
mov
lock
mov
pop
cmp
sub
xchg
(bad)
push
push
call
call
(bad)
lods
dec
sub
(bad)
(bad)
call
pop
pop
adc
hlt
pop
jmp
adc
sbb
pop
adc
sub
iret
aam
(bad)
(bad)
jmp
push
pop
sub
and
push
das
fstp
ja
cld
xor
outs
out
pop
fcmovnu
test
(bad)
call
pop
ret
add
je
xor
cmc
test
jmp
xchg
sbb
sbb
inc
cli
cmps
cmps
inc
popf
cmp
das
popa
retf
jp
jns
std
outs
push
cli
fs
retf
and
adc
xchg
xor
call
cs
or
mov
push
add
cwde
int3
add
xor
(bad)
cwde
mov
adc
xor
aas
mov
pop
pop
mov
cdq
inc
pushf
retf
jp
popa
stos
push
dec
sbb
lahf
and
shl
test
retf
leave
in
add
mov
ret
hlt
dec
(bad)
pusha
cmps
inc
and
(bad)
dec
fpatan
mov
int
add
fabs
ins
arpl
mov
scas
sti
jo
ja
std
(bad)
dec
(bad)
in
or
in
lock
aaa
pause
(bad)
jmp
pop
push
mov
test
outs
jl
aam
clc
sti
enter
sbb
adc
scas
or
outs
std
jl
xor
xchg
push
push
sbb
and
xor
(bad)
jmp
int
arpl
adc
sti
and
and
fisttp
jne
mov
pop
pop
jns
shr
sbb
inc
shl
shl
(bad)
test
loop
ds
mov
fisttp
fbstp
xchg
clc
dec
enter
pusha
inc
lods
dec
cmp
aas
xor
pusha
(bad)
call
(bad)
fldenv
xchg
cmp
push
mov
int
xchg
adc
sahf
push
or
arpl
mov
add
nop
dec
mov
std
jmp
inc
push
push
sub
(bad)
dec
je
(bad)
movs
mov
mov
pop
xor
sub
mov
mov
call
call
jnp
mov
in
push
imul
imul
rcr
cld
push
das
xor
jmp
and
(bad)
(bad)
dec
push
pop
lahf
dec
sti
ror
push
sub
addr16
pop
(bad)
aam
sbb
clc
ja
cmp
loope
jmp
or
ins
jae
jge
push
add
(bad)
(bad)
(bad)
fsubr
push
iret
sub
sub
mov
pop
and
dec
gs
sbb
dec
std
pop
inc
adc
scas
or
test
test
icebp
outs
mov
shl
popf
pop
aas
mov
sub
arpl
inc
outs
(bad)
jmp
xor
cli
inc
pop
hlt
push
test
jge
cs
mov
inc
push
inc
lds
pop
push
lock
retf
mov
outs
adc
fsub
push
std
(bad)
push
pop
jns
in
mov
mov
in
jmp
xor
xchg
std
(bad)
inc
cmp
or
cmp
mov
jns
inc
(bad)
(bad)
mov
cmps
sub
mov
mov
inc
add
cmc
(bad)
(bad)
fild
and
or
jne
xchg
loopne
arpl
push
cmps
sub
push
int
pop
outs
je
jnp
cli
ds
ror
jle
(bad)
inc
cwde
push
test
jno
out
or
ja
mov
jl
inc
xor
dec
xor
or
fiadd
pop
pop
ret
push
push
mov
call
push
push
loop
mov
call
mov
pop
ret
in
sub
push
mov
lea
std
fisttp
pop
and
push
pop
mov
or
pop
pop
mov
call
mov
mov
add
ss
pop
into
mov
sbb
in
or
mov
outs
adc
das
push
aaa
sbb
and
lea
or
or
mov
cmp
push
mov
and
mov
test
je
push
pop
ins
lea
(bad)
cwde
fldcw
sub
je
adc
mov
(bad)
idiv
jmp
fisttp
hlt
mov
mov
sub
sub
mov
sar
add
push
push
push
fld
sub
(bad)
sti
fild
int3
mov
cmp
add
pop
mov
loopne
sub
out
and
jmp
pop
cmc
adc
outs
fst
dec
add
push
add
and
rcr
add
jae
call
mov
add
test
inc
mov
icebp
pop
test
je
movdqa
pusha
stos
push
into
outs
mov
jg
movs
in
push
je
pop
jmp
xor
mov
push
fsubr
loope
fst
jne
(bad)
pusha
dec
push
mov
pop
and
mov
push
int3
retf
cmp
fs
cmp
call
fsubr
clc
in
pusha
das
lods
loop
xor
mov
mov
cmp
mov
or
clc
sub
sti
test
and
dec
aam
fisttp
mov
push
pop
xor
test
adc
sbb
gs
je
and
jl
xchg
pop
mov
int3
push
mov
inc
and
or
jge
sub
cs
in
or
or
or
jnp
mov
je
inc
add
xor
xor
mov
sahf
xor
adc
inc
sbb
and
sti
sahf
(bad)
push
sbb
or
ins
into
jge
mov
jmp
sbb
push
push
push
dec
cmp
mov
cmp
sub
inc
fst
std
xor
mov
rcl
outs
fbstp
jge
rol
(bad)
adc
add
jl
je
mov
sets
icebp
cmp
je
push
(bad)
sbb
call
test
je
push
pop
(bad)
mov
mov
xor
cmps
adc
rep
lea
movs
call
xor
out
pop
pop
mov
movzx
ror
fstp
xor
and
mov
dec
daa
mov
jo
sub
dec
or
and
leave
sub
shr
inc
and
ja
dec
mov
dec
ret
jmp
sbb
pop
in
out
cmp
dec
or
repz
(bad)
lods
mov
mov
dec
fidiv
inc
or
inc
or
das
mov
push
push
sub
or
ret
std
in
dec
je
add
sub
je
sub
sbb
fild
jne
and
jmp
mov
mov
mov
sbb
adc
popa
inc
test
push
adc
ret
outs
pop
adc
cld
fsubr
mov
popa
(bad)
out
dec
push
sbb
ror
inc
or
or
pop
adc
or
aaa
or
push
sbb
dec
jbe
cmps
or
xor
sub
sbb
add
pop
sub
or
sub
(bad)
and
adc
cmp
rcr
repnz
add
outs
repz
jne
cmp
mov
dec
inc
out
fs
imul
and
xlat
push
or
in
sub
test
push
inc
or
scas
add
leave
in
adc
lock
pop
ret
sbb
xor
mov
loop
xchg
mov
std
popf
aaa
adc
shl
or
push
sbb
lods
fwait
movs
or
scas
iret
jno
pop
ds
add
data16
aam
sbb
and
lea
cmp
jl
imul
adc
stc
jg
bound
clc
push
xor
push
inc
pop
mov
(bad)
mov
xchg
xchg
pop
iret
ficomp
jg
sti
inc
mov
push
xor
ja
clc
iret
mov
out
push
mov
ins
inc
or
ret
pop
pusha
fild
aaa
(bad)
mov
jge
cmp
add
jge
(bad)
loope
push
(bad)
ins
sbb
add
cmp
or
aaa
sub
and
adc
hlt
daa
daa
add
xlat
rcl
fadd
shl
test
inc
mov
mov
mov
sub
inc
dec
enter
or
add
loope
cmp
mov
not
or
add
add
in
test
rcl
ja
jg
jecxz
and
sahf
xor
pop
clc
pop
jp
mov
lds
stos
push
or
and
imul
icebp
mov
daa
or
idiv
jno
icebp
sub
out
or
fadd
fstp
inc
clc
rcl
or
sahf
mov
xor
fwait
in
lock
mov
(bad)
aad
int
outs
neg
test
jns
mov
adc
adc
or
outs
pop
mov
sub
test
jg
loope
mov
cmp
cmp
jb
jmp
in
fstp
adc
mov
movd
ret
fild
(bad)
pop
sub
add
retf
push
push
repnz
(bad)
or
unpcklps
jbe
pop
sbb
add
adc
add
iret
mov
outs
push
and
mov
xor
mov
mov
imul
out
cmp
sti
add
mov
leave
or
ret
cmp
leave
cld
movsx
imul
retf
daa
mov
mov
and
jne
inc
inc
sbb
arpl
lock
xchg
push
push
mov
fimul
mov
jmp
jo
or
nop
push
movs
cmp
push
push
pusha
add
push
imul
and
mov
hlt
fisttp
inc
fist
mov
or
mov
inc
aam
sub
mov
add
push
adc
jge
(bad)
aam
or
mov
clc
pop
ins
inc
and
push
std
cmp
adc
or
sub
dec
jl
(bad)
addr16
dec
pop
aas
aaa
or
test
dec
xchg
in
popf
ret
aam
mov
push
fsub
sbb
pop
pop
das
je
fadd
sub
ds
sbb
mov
hlt
cmp
in
inc
clc
aam
iret
(bad)
fldenv
pop
in
test
fs
cmp
and
leave
dec
inc
pop
mov
jo
xor
pop
push
dec
dec
pop
dec
je
test
shl
rol
dec
jne
lds
ret
movs
rcr
fild
shl
mov
jbe
clc
ja
push
sub
xor
mov
inc
ins
adc
in
(bad)
(bad)
idiv
mov
bound
add
enter
jne
mov
add
push
add
xor
das
fcmovb
fisttp
xor
es
adc
cmp
xlat
inc
or
in
(bad)
lods
cmp
(bad)
sbb
push
adc
outs
enter
jno
sbb
dec
jge
add
imul
push
pop
pop
mov
neg
rcr
and
pop
pushf
lea
adc
xchg
pop
rol
ror
jbe
ret
retf
push
inc
xor
ret
add
sbb
sub
dec
dec
pop
push
int3
jne
div
cmp
mov
adc
sbb
and
mov
push
inc
ret
pop
gs
js
out
stos
movs
mov
ror
ret
and
das
push
sub
pop
mov
cmp
xchg
adc
rcl
in
rol
popa
das
in
ret
int
and
and
and
and
gs
ret
xchg
xor
mov
push
and
enter
or
pop
int3
sbb
inc
in
sub
sub
jno
jecxz
xor
sub
imul
xor
or
cmp
imul
add
inc
or
push
and
leave
xor
or
leave
jae
cmp
sbb
bound
cmp
(bad)
jg
add
stc
into
xor
and
or
mov
bound
lea
mov
add
fs
push
and
not
inc
jo
dec
sub
lods
dec
xchg
out
daa
or
lods
test
and
sub
mov
adc
push
mov
add
jl
sub
push
push
jle
adc
jno
push
mov
sbb
rcr
cwde
pop
and
iret
ret
stos
imul
add
leave
jae
adc
fs
and
inc
in
push
inc
push
xchg
ins
add
pop
inc
jns
and
jo
inc
xor
adc
je
add
add
es
xor
js
and
jl
sub
xor
es
or
fwait
adc
hlt
lds
push
dec
sub
(bad)
jmp
nop
dec
jne
lea
or
push
ss
xchg
mov
and
add
xchg
sbb
add
adc
adc
xor
xor
cmp
mov
in
mov
inc
sub
xchg
or
je
xchg
inc
pop
or
push
xchg
sbb
cmp
leave
add
leave
aaa
mov
pop
outs
push
adc
xchg
sbb
push
cmp
jb
mov
dec
pop
mov
and
rcr
add
pusha
push
xchg
push
cmp
ins
jo
scas
in
and
xchg
and
mov
pop
cmp
jo
ss
sub
(bad)
outs
or
mov
je
sub
adc
ins
es
lea
push
add
pushf
sub
popf
mov
cs
inc
and
ja
xlat
test
sbb
mov
ds
ret
push
inc
add
cmp
sub
mov
sbb
cs
popf
sub
pushf
inc
jle
cmp
cld
inc
test
dec
dec
mov
xor
push
sbb
sub
jo
outs
sbb
les
sbb
add
scas
xor
mov
and
pushf
and
or
sbb
inc
cwde
jge
rcr
push
dec
and
mov
add
xor
sbb
movs
push
dec
mov
das
sub
and
lods
or
fwait
mov
inc
and
fild
das
fst
adc
sbb
loop
adc
mov
dec
lea
pop
mov
and
xchg
sbb
nop
xchg
and
and
xchg
pop
leave
xchg
dec
cwde
enter
xor
add
pushf
mov
xchg
mov
cmp
movs
test
scas
in
adc
mov
xor
inc
cmp
push
dec
es
sub
jo
pushf
add
cmps
mov
cld
daa
or
mov
int3
add
gs
dec
cs
and
test
(bad)
ficomp
add
outs
xor
pop
repz
xchg
push
je
push
sub
fadd
cld
lea
mov
jbe
movs
add
in
fnstsw
and
pop
add
jp
fnstenv
adc
inc
lods
adc
jmp
xor
pop
popa
or
adc
and
mov
stc
fsubp
mov
ret
push
int3
pushf
scas
inc
push
sbb
movs
pop
lods
aam
cld
ror
mov
and
push
outs
and
retf
fldenv
lds
xor
pop
jmp
addr16
push
je
sti
inc
mov
xor
push
inc
xchg
and
dec
sbb
rcr
sbb
sbb
(bad)
sub
adc
mov
xchg
cwde
test
in
and
es
push
pop
xor
fs
jle
jl
ret
inc
test
call
arpl
pushf
hlt
xor
lea
mov
sar
or
push
test
jne
xor
les
les
mov
sub
or
aaa
test
lock
sbb
sbb
add
and
jo
ret
inc
and
mov
or
test
dec
and
fsubp
outs
sbb
mov
pop
adc
xor
sbb
fist
outs
jne
pushf
adc
loopne
mov
inc
add
pop
cmp
into
xchg
in
and
mov
push
sbb
dec
add
add
pushf
jmp
adc
jmp
adc
add
or
pop
mov
mov
inc
sbb
push
pop
jmp
mov
jg
lea
pop
cmp
jae
dec
fnsave
popa
and
enter
push
sbb
pop
sbb
into
test
or
and
scas
jge
push
movs
adc
je
mov
outs
popf
sbb
push
xchg
jbe
enter
aaa
sbb
inc
call
xor
inc
xchg
dec
mov
mov
cld
mov
add
mov
movs
mov
leave
repz
rol
push
xchg
mov
add
ss
daa
nop
inc
sbb
mov
sbb
scas
ss
or
cmps
movs
push
es
movs
adc
jmp
aaa
or
xor
or
push
adc
and
mov
aaa
mov
xor
add
fcmove
repnz
adc
cmp
pop
lock
xchg
xchg
sbb
dec
jns
or
xchg
outs
data16
mov
aam
adc
inc
dec
push
call
out
push
daa
cld
fcom
cmp
sbb
cmp
ret
pop
jge
cmp
inc
xchg
les
ins
add
cmp
xchg
or
enter
es
sub
rcr
rcl
add
in
mov
fsubr
cmp
dec
es
fsub
je
and
loopne
cmp
and
jo
ret
in
mov
pop
jge
lds
push
bnd
inc
in
enter
in
nop
in
nop
inc
pop
cmp
and
pop
leave
call
mov
fnstcw
sub
repz
adc
pop
ret
mov
inc
cmp
dec
xchg
int
sbb
sbb
sbb
lea
xchg
test
mov
sar
cmp
call
loopne
pop
push
pop
into
sub
mov
mov
and
cmp
lock
pop
xchg
call
jg
mov
sub
clc
mov
call
xor
mov
jb
add
shr
xchg
dec
and
cmp
inc
xor
add
or
dec
mov
hlt
nop
sub
xchg
clc
and
scas
in
es
xor
inc
push
popa
inc
add
pop
push
(bad)
dec
push
adc
pop
or
or
sqrtps
adc
out
retf
dec
or
or
prefetchwt1
sbb
dec
dec
dec
cs
pop
das
(bad)
jmp
cmp
pop
sbb
sbb
or
or
sbb
mov
adc
push
pop
or
push
pop
pop
adc
sbb
xor
sbb
or
sbb
pop
cmp
pop
push
xor
fistp
daa
ud2
pop
push
movhps
push
(bad)
jge
in
or
sbb
pop
or
dec
das
and
dec
outs
arpl
imul
out
imul
mov
adc
or
hlt
mov
sbb
sbb
or
pop
ds
vshufpd
cmps
ja
outs
sub
or
inc
push
in
jg
(bad)
cmp
or
imul
fcomp
xor
adc
sbb
aad
push
pop
imul
sbb
and
leave
fld
jno
sub
sbb
sbb
or
sbb
das
data16
(bad)
in
nop
sbb
or
rcr
push
adc
inc
jnp
fwait
dec
mov
sbb
pop
neg
mov
or
or
out
ins
fnstenv
or
add
mov
xor
pop
adc
(bad)
pop
mov
sbb
or
adc
or
sub
or
ds
fild
pop
test
mov
adc
adc
mov
fimul
mov
sbb
lods
mov
sbb
push
jns
xchg
in
mov
sbb
comiss
pop
jns
jge
js
sub
jno
fisttp
adc
inc
jae
push
sub
gs
cmp
pop
(bad)
jle
fldcw
mov
sar
retf
push
lock
pop
cmp
and
sbb
(bad)
cdq
push
jb
add
jnp
arpl
inc
pop
sbb
adc
fistp
div
push
push
push
push
or
int
pop
sub
adc
pop
pop
xor
or
pop
aas
pop
aaa
sub
das
push
push
pop
or
aaa
cmp
jecxz
sub
or
fcmovne
sub
das
movq
das
or
jo
out
pop
adc
cmp
sub
psubusw
or
mov
js
sbb
pop
or
in
xchg
or
ds
or
arpl
cmp
adc
(bad)
adc
inc
in
and
leave
out
lods
mov
mulps
outs
push
jnp
or
and
(bad)
jno
scas
adc
sti
imul
jne
ficom
cmp
pop
adc
sub
stos
daa
add
fimul
mov
pop
push
or
pop
xor
mov
ds
nop
pop
fadd
xor
push
(bad)
arpl
ss
adc
or
add
sub
adc
add
add
add
nop
adc
add
test
inc
push
push
or
ins
jae
jb
outs
inc
mov
arpl
dec
outs
popa
fs
imul
inc
gs
push
jb
arpl
fs
jae
sbb
mov
dec
gs
xor
or
mov
sub
lock
adc
pop
(bad)
(bad)
call
shr
dec
arpl
icebp
add
pop
xor
in
mov
and
lock
lock
(bad)
(bad)
jg
add
xor
or
mov
and
or
mov
out
imul
sub
sub
and
cmp
add
sbb
in
(bad)
in
push
sub
sub
xor
and
sbb
pop
add
and
and
add
push
ins
jmp
add
adc
std
dec
pop
and
sbb
and
sbb
push
sbb
push
ret
pop
xchg
sbb
and
sub
sub
add
inc
fbstp
ins
popa
popa
push
sub
add
and
add
and
mov
sbb
adc
push
add
scas
push
or
add
stc
stos
ret
inc
add
sub
pop
push
jo
pop
cmp
mov
ja
dec
add
jae
adc
call
cs
js
inc
cmp
test
frstor
mov
pusha
cs
popa
je
sti
jl
or
inc
cmps
pop
ja
inc
add
add
pusha
daa
ror
mov
xchg
pop
add
jo
dec
dec
popf
popf
sbb
sti
pop
sti
sub
and
sbb
push
adc
add
enter
add
add
add
cmp
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
