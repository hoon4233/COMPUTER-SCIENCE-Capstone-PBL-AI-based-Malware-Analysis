add
adc
or
push
je
imul
add
add
xor
xor
cmp
mov
or
pop
push
dec
add
arpl
imul
ins
int3
adc
mov
sbb
popaw
jne
mov
shl
cmp
or
inc
and
clc
jmp
and
aas
push
inc
dec
int3
loop
int3
mov
mov
icebp
rcl
push
dec
adc
(bad)
push
and
hlt
adc
(bad)
int3
nop
loope
push
dec
(bad)
sub
mov
jmp
mov
mov
and
ins
enter
jb
cmp
mov
and
dec
jb
cmp
mov
and
xchg
xor
xor
sub
sub
and
and
xchg
sbb
adc
movs
jb
cmp
and
or
cmp
add
les
call
test
sub
je
add
xor
pop
mov
adc
enter
jb
cmp
sbb
mov
add
mov
cmp
jne
push
push
call
enter
add
retf
inc
cmp
add
ror
inc
cmp
add
push
mov
inc
push
inc
cmp
ds
js
adc
push
into
pop
nop
fcom
out
inc
pop
inc
repnz
fsubr
popf
lahf
xchg
test
or
or
outs
adc
pop
cwde
adc
push
add
iret
mov
push
push
adc
mov
push
push
pop
push
mov
into
adc
scas
call
add
push
pop
ja
(bad)
cmp
sbb
or
fimul
ret
adc
inc
fisttp
inc
or
jmp
add
cmp
and
cmp
push
pop
hlt
fistp
xor
jne
(bad)
lock
sub
pop
pop
pop
inc
mov
or
mov
xor
jo
into
add
call
int
bound
jne
sar
sub
or
dec
lds
mov
aas
ficomp
jp
add
call
jmp
xor
test
scas
(bad)
and
stc
mov
mov
jae
or
jae
push
inc
or
cmp
xor
nop
push
xchg
mov
enter
(bad)
loopne
loopne
sub
mov
(bad)
ins
jbe
ins
out
adc
push
push
ror
cmp
sar
push
ins
xor
dec
add
add
(bad)
stc
aad
fs
mov
xchg
mov
call
sbb
inc
or
call
jne
jns
push
cdq
dec
adc
cmp
cmc
std
sub
bound
in
hlt
dec
test
xchg
in
pusha
jecxz
call
add
pop
push
push
or
repnz
out
add
mov
mov
repz
jae
pmaxsw
and
add
div
je
mov
adc
imul
call
push
or
add
xchg
jbe
mov
or
cmp
pop
pusha
add
in
adc
sbb
dec
sbb
and
mov
xchg
cmps
sbb
adc
sub
scas
mov
jmp
ficomp
pop
ret
dec
and
pop
loop
mov
sub
inc
aad
xor
cmp
pop
add
jle
add
rcl
jg
mov
add
push
xchg
pop
adc
cmp
call
cmps
jmp
adc
mov
mov
or
imul
xor
mov
and
push
xor
jmp
add
pop
leave
dec
clc
xor
cmovno
and
mov
or
out
fiadd
call
lods
dec
inc
mov
dec
shl
dec
inc
je
mov
call
out
ror
pop
aam
dec
cmp
push
jg
dec
and
and
mov
je
inc
dec
mov
in
sti
xchg
xor
leave
and
movs
das
jle
pop
int3
mov
xor
pop
movs
pop
and
push
call
test
(bad)
adc
dec
js
or
xchg
jbe
add
je
cwde
push
sub
add
daa
mov
test
lods
dec
push
adc
fild
xor
aaa
or
push
push
aas
xchg
cdq
xor
jne
push
adc
std
xchg
ins
movs
lods
inc
jmp
mov
inc
xor
push
push
jne
dec
(bad)
(bad)
sub
mov
or
jne
adc
sbb
push
jno
sbb
adc
push
push
adc
call
mov
mov
mov
sbb
jecxz
ss
add
aam
or
cmp
jae
sti
adc
mov
and
add
mov
adc
je
mov
ret
data16
cmp
mov
push
or
sub
sub
xchg
and
push
mov
pushf
cmp
pop
push
xor
sub
stc
add
push
jle
dec
adc
mov
popa
push
adc
or
xchg
dec
js
push
cmp
inc
mov
cmp
es
add
rol
xacquire
mov
jae
mov
add
mov
mov
push
xchg
scas
mov
sbb
mov
outs
push
dec
lahf
and
je
inc
sbb
push
push
adc
push
out
imul
sbb
ds
mov
xchg
add
mov
push
jg
adc
jne
les
pop
add
jle
imul
fisub
sbb
or
adc
inc
fistp
loopne
cmp
or
adc
dec
or
jg
loopne
pop
add
rcr
push
int
mov
jmp
pop
push
mov
sbb
sub
hlt
lods
or
mov
dec
nop
popf
inc
and
cwde
mov
dec
in
pop
shl
jbe
movd
adc
cmp
bound
imul
retf
push
add
sbb
sar
jl
(bad)
xor
pop
xor
mov
sub
or
sbb
or
or
inc
rol
loop
cwde
jg
add
repz
outs
or
push
movs
retf
sub
je
inc
or
(bad)
xchg
or
dec
mov
loope
inc
or
add
ficom
xor
scas
enter
test
lods
inc
test
jmp
or
(bad)
cmp
bound
push
and
mov
popa
add
adc
fs
fdiv
add
add
and
pusha
fsub
add
in
repz
in
or
push
and
dec
(bad)
addr16
and
or
xchg
test
mov
mov
call
aaa
sub
jg
aad
out
jl
mov
pop
adc
add
je
sti
add
adc
dec
inc
and
mov
(bad)
ins
and
test
fstp
aad
(bad)
(bad)
arpl
dec
cmps
or
or
call
add
inc
not
mov
or
dec
xchg
mov
push
add
sbb
sbb
cmp
mov
add
ins
fs
aam
adc
dec
pop
lahf
or
jmp
cmps
sti
inc
adc
push
stos
pop
call
jl
sub
mov
inc
adc
mov
retf
push
pop
mov
or
dec
or
or
dec
fwait
inc
pop
jmp
sub
ror
adc
pop
cdq
xor
cdq
std
sbb
lea
cmove
mov
push
loop
icebp
enter
and
call
cld
call
loopne
int3
mov
adc
adc
add
or
cmp
or
dec
sahf
sub
add
and
or
push
je
inc
dec
(bad)
and
call
retf
popa
xchg
adc
and
mov
jmp
outs
mov
cmps
xor
add
adc
sub
xor
inc
aam
dec
dec
dec
pop
mov
push
push
mov
sbb
add
pop
xchg
and
(bad)
(bad)
les
(bad)
loope
and
es
and
(bad)
xchg
mov
cmp
push
aaa
je
push
add
jne
or
jmp
dec
mov
int3
stc
or
or
test
mov
jnp
xchg
sbb
xor
call
pop
sub
je
hlt
es
push
in
shl
push
aad
jne
sbb
pop
call
cmp
movs
sub
or
(bad)
adc
xor
add
sub
jbe
jle
out
xlat
xor
adc
add
(bad)
mov
adc
push
rol
or
xchg
call
cmp
test
pop
lods
mov
cld
pop
xchg
in
leave
sub
into
pop
das
add
call
je
out
or
push
or
scas
enter
push
nop
xor
and
and
add
data16
sbb
mov
mov
sub
inc
mov
aad
mov
scas
mov
pop
shl
dec
sub
or
jl
hlt
jmp
cld
retf
xchg
mov
inc
(bad)
nop
mov
push
(bad)
dec
or
push
shl
xchg
mov
inc
sbb
mov
jmp
and
or
sub
lods
pop
push
or
xor
call
cmc
inc
push
cmc
xor
mov
std
movs
inc
xchg
fsub
pop
and
lock
mov
fist
mov
push
pop
xchg
mov
nop
push
sub
(bad)
loopne
xchg
inc
pop
call
push
mov
adc
jp
jb
adc
popa
jno
mov
bswap
xchg
popa
mov
stc
aam
test
add
inc
inc
or
cmc
or
ret
sub
xchg
inc
mov
push
or
je
mov
sub
call
enter
pop
dec
sub
push
inc
sbb
adc
push
sub
cwde
adc
dec
xor
mov
shl
cmp
sub
jno
push
adc
sbb
jle
call
jo
movs
adc
mov
test
je
sbb
and
add
cld
mov
inc
aaa
or
jmp
add
push
lds
or
and
stos
ret
call
ret
daa
cli
and
push
inc
out
adc
adc
pop
icebp
ror
mov
or
nop
mov
in
xchg
fcomp
(bad)
enter
pop
stc
add
jmp
mov
xlat
sub
arpl
cld
mov
jne
cmp
or
jb
pop
adc
cdq
mov
jge
sub
nop
sub
inc
imul
xor
sbb
test
das
push
push
fidivr
sahf
call
nop
test
add
pop
xchg
adc
mov
or
mov
mov
(bad)
xchg
adc
inc
ds
jl
repnz
cmps
push
sbb
add
and
or
call
daa
push
or
mov
stc
xor
or
movs
mov
dec
sub
retf
push
cmp
lds
xchg
(bad)
scas
mov
loopne
in
adc
push
xchg
shl
dec
test
inc
jecxz
clc
pop
jmp
(bad)
xor
loop
jecxz
loop
jnp
xchg
and
aad
add
jmp
jmp
pop
cmps
shl
repnz
adc
call
retf
xchg
repz
cmp
es
sbb
xor
test
std
xchg
add
imul
mov
std
ret
add
lock
dec
cmp
add
xchg
call
pop
repz
add
pop
sub
mov
ins
cmp
sar
xchg
cmp
movs
dec
xchg
test
inc
loopne
shl
pop
add
jne
sbb
inc
je
inc
cmp
pop
add
cmp
or
add
enter
pop
or
cli
add
push
jmp
push
enter
jne
dec
sub
and
adc
shl
cdq
xor
adc
add
call
stc
icebp
nop
mov
cmp
dec
inc
or
call
cwde
cmp
cmp
ja
jne
jb
xor
or
xchg
int
lods
test
jmp
push
push
push
call
cmp
jne
clc
xor
jmp
adc
jmp
jge
aaa
addr16
add
mov
pop
out
sbb
or
sub
add
cmp
jg
sub
dec
inc
pop
push
jl
faddp
cli
add
(bad)
mov
inc
rep
push
jmp
mov
xor
mov
mov
cld
call
xor
dec
jle
mov
pop
or
les
ret
and
xlat
add
cmp
ja
je
das
add
xchg
fmul
cld
cmp
sbb
push
std
sbb
push
mov
sub
push
inc
sub
mov
imul
and
sub
adc
lea
xchg
sub
or
jbe
or
push
pop
je
cmp
ins
push
push
xchg
xor
mov
cmps
dec
scas
jae
sub
lods
xchg
push
push
inc
(bad)
cld
sub
xchg
xor
and
or
popa
jl
sti
sbb
xchg
movs
nop
and
cmp
repnz
aam
jb
adc
sbb
push
adc
sub
xlat
test
or
and
push
cs
(bad)
iret
dec
push
add
sub
sbb
adc
xor
sub
push
push
and
mov
xchg
test
and
xor
push
adc
lea
inc
dec
aad
xlat
out
dec
cdq
cmp
add
add
mov
sbb
dec
repz
ds
arpl
sub
add
cmp
adc
loop
mov
mov
xchg
inc
sahf
sbb
movs
test
outs
add
shl
cmp
push
inc
jmp
push
cbw
arpl
ds
jne
jmp
lea
or
sub
mov
je
mov
adc
loopne
xchg
pushf
cmc
call
cmp
mov
dec
or
xor
nop
mov
nop
(bad)
push
aaa
inc
retf
data16
inc
scas
mov
jmp
frstor
je
xor
leave
mov
or
push
aam
mov
and
stos
and
sub
out
xchg
jne
sahf
push
adc
pop
outs
push
dec
pop
in
cmp
and
xor
inc
add
jp
add
or
test
mov
jmp
js
pop
add
nop
(bad)
rol
imul
sbb
xchg
inc
pop
cmp
je
jp
int3
and
rcl
mov
and
sbb
enter
popf
mov
ror
icebp
push
retf
add
mov
add
rcl
out
cld
mov
div
rol
out
push
or
in
call
int
xchg
jo
ror
add
div
sbb
adc
dec
or
jge
lahf
add
and
jne
sti
push
or
or
popf
xor
mov
mov
push
cdq
mov
adc
ret
pop
retf
or
aam
sub
call
cmp
mov
mul
mov
jb
cmps
or
emms
sub
or
out
call
aad
popa
cmps
dec
or
and
sbb
pop
fucomi
adc
pop
dec
sbb
pop
or
xlat
add
mov
add
loopne
jae
or
shl
rep
pop
adc
stos
pop
leave
add
call
jns
and
cli
pop
mov
mov
iret
pop
xor
jge
movs
push
add
sub
cmp
add
xchg
pop
add
push
inc
mov
and
sub
xchg
std
sbb
jnp
je
inc
mov
or
and
shr
add
fld
sub
je
(bad)
sar
pop
sbb
fisubr
dec
call
dec
sbb
and
in
je
or
call
cld
mov
lods
sbb
sbb
fidivr
or
xchg
fs
jecxz
sub
call
in
inc
(bad)
push
movs
iret
ins
xchg
fstp
mov
inc
cmp
and
test
mov
sub
pop
add
and
pop
pop
pop
hlt
push
add
jne
lods
sub
test
inc
test
or
add
ja
cmp
mov
add
ins
fcom
jne
out
int
or
sbb
repz
neg
jle
js
pop
aas
sub
or
fcomp
sub
test
add
or
adc
add
or
mov
aad
inc
add
mov
adc
into
test
and
cmps
imul
jmp
in
sub
dec
xchg
call
lea
repz
and
fisttp
push
dec
das
pop
faddp
(bad)
call
push
(bad)
or
sbb
je
fsub
inc
sbb
or
push
cld
dec
mov
inc
icebp
stc
or
push
pop
stc
in
fstp
dec
stos
inc
imul
mov
out
enter
or
aas
jo
add
and
add
mov
and
je
adc
mov
imul
sbb
xor
or
adc
pop
sub
test
and
and
test
add
leave
sbb
or
jbe
imul
movs
inc
call
mov
rcl
and
pop
mov
xlat
fadd
lods
add
js
xchg
mov
or
or
push
in
int3
into
sbb
cmp
test
popa
push
pop
mov
ror
movs
sbb
nop
mov
add
mov
daa
(bad)
retf
cmp
or
sbb
pop
(bad)
cmp
dec
addr16
leave
repnz
hlt
xchg
pop
and
cld
rcr
test
lds
iret
or
mov
mov
push
stos
mov
cmp
jmp
xchg
jp
add
mov
inc
imul
(bad)
neg
jo
jl
xor
cmp
call
xchg
mov
movs
add
jmp
stos
push
inc
add
sar
pop
jbe
int3
repnz
test
nop
fneni(8087
daa
cmp
clc
scas
adc
(bad)
cli
pop
pop
pushf
mov
pop
inc
mov
fs
add
repz
loope
jp
jp
cmp
add
fdivr
mov
xchg
push
cmps
scas
mov
pop
pop
or
add
xchg
cmp
xor
push
in
cmp
sahf
xchg
pop
add
push
movs
mov
aaa
popa
jl
mov
stc
(bad)
repz
mov
sub
add
mov
push
pusha
les
aad
bound
xor
ret
jmp
xor
adc
pop
jne
jecxz
jecxz
cmp
and
or
sub
adc
je
inc
hlt
movzx
xor
mov
scas
push
mov
aam
test
and
xor
push
push
jae
push
mov
mov
mov
or
movs
hlt
cmp
ins
cmp
push
addr16
mov
push
iret
xor
shl
jno
and
aas
push
clc
pop
cs
pop
or
aam
adc
or
rcl
inc
add
ins
popa
outs
rol
push
push
dec
add
push
dec
popa
jae
imul
jne
call
fldcw
xchg
xchg
(bad)
outs
push
enter
jo
aam
leave
mov
inc
fld
mov
pop
retf
rol
push
test
xchg
sbb
xchg
cmps
repz
xor
cmp
fsubr
je
loopne
call
sbb
sub
adc
add
ret
push
adc
xchg
push
in
call
nop
imul
call
repnz
mov
fadd
xor
push
shr
dec
repz
pop
xchg
test
loop
sub
sbb
cmp
aas
add
sbb
in
cmp
ret
sbb
ret
mov
adc
adc
lock
sbb
dec
outs
jne
mov
repz
xlat
mov
sbb
adc
mov
(bad)
data16
inc
or
ret
jae
test
(bad)
jb
pop
bsf
xchg
cmp
and
rol
mov
jmp
test
icebp
cmp
adc
enter
xor
jg
add
das
pushf
aam
and
add
inc
call
clc
mov
repz
sbb
push
imul
inc
add
pop
lea
(bad)
adc
jb
dec
out
jo
ins
push
(bad)
es
ret
sub
cmps
mov
xchg
lahf
push
mov
daa
ins
aas
movs
in
ret
sub
dec
loope
lock
xor
jne
jb
ja
retf
lock
or
adc
jne
or
cmp
inc
dec
push
vunpckhps
dec
hlt
(bad)
daa
mov
add
call
cmps
cmp
mov
int3
dec
push
pop
xchg
les
sub
mov
push
pop
inc
push
add
repnz
adc
pop
and
dec
jae
pop
(bad)
shr
ret
je
cld
jbe
hlt
push
nop
mov
inc
push
(bad)
xlat
pop
dec
pop
pop
ja
out
jmp
(bad)
loopne
dec
shr
je
jne
rcr
cmp
push
push
xor
sbb
lds
sbb
js
pushf
or
mov
lock
push
push
push
add
jl
or
add
mov
mov
in
invd
mov
mov
and
pop
nop
cmp
cmp
xchg
xchg
hlt
inc
or
popa
push
xor
dec
call
add
mov
call
retf
or
imul
cmc
add
call
cmp
adc
arpl
add
cli
in
push
call
sbb
jmp
hlt
mov
push
jmp
test
int3
dec
loopne
sbb
pop
push
push
push
enter
sbb
cmp
xchg
cmp
jne
movsx
cld
jl
adc
bound
sbb
imul
loope
pop
jecxz
mov
adc
mov
pop
pop
push
(bad)
adc
ja
inc
pop
push
cmp
inc
(bad)
push
jne
cmp
cwde
ins
add
je
cld
call
adc
je
loope
xchg
adc
and
add
cmp
push
je
call
push
sub
ja
and
jns
xchg
movs
mov
sub
or
xor
stos
push
pop
cmp
or
and
jo
dec
add
cmp
dec
test
xchg
sbb
retf
mov
and
xchg
add
mov
test
outs
mov
shl
imul
mov
mov
stc
cmp
jecxz
and
adc
pop
mov
push
nop
or
or
sub
das
mov
and
or
jecxz
pop
jmp
ds
fisttp
call
in
adc
sbb
fadd
pop
push
push
push
es
push
inc
inc
pop
mov
add
and
xor
mov
cld
and
mov
pusha
add
std
mov
or
lds
out
or
mov
dec
jnp
lea
push
daa
pop
xchg
xchg
je
mov
outs
pop
ret
sub
pop
and
and
ret
ds
dec
pop
cwde
xor
cmp
jg
je
in
inc
or
mov
outs
xchg
dec
jmp
add
sub
aas
jb
aas
xor
push
cmp
cmp
cwde
inc
adc
and
jg
push
std
comiss
push
cmp
mov
mov
scas
bswap
(bad)
and
sbb
xlat
clc
push
clc
into
clc
adc
fdivr
push
clc
(bad)
or
fprem
push
clc
retf
adc
xor
mov
or
ins
loope
sub
fcmove
cmp
cmps
inc
add
lds
sub
mov
cdq
ss
cmp
xor
cmp
mov
xor
mov
and
mov
ins
std
ins
out
sbb
sahf
mov
or
int3
and
mov
adc
push
adc
xchg
adc
push
add
(bad)
mov
add
or
nop
jnp
jp
das
mov
and
sbb
dec
cmp
xchg
or
jae
cmp
jne
popf
and
ins
or
or
xor
pusha
test
add
lds
fstp
dec
mov
add
xchg
out
mov
jmp
pusha
test
(bad)
dec
ss
dec
sub
mov
in
cld
inc
sub
and
cmp
repz
sbb
sbb
shr
push
in
pusha
les
daa
and
mov
dec
cwde
mov
dec
adc
adc
push
cwde
sub
call
mov
lahf
ret
retf
mov
sbb
je
push
inc
mov
add
xor
sbb
(bad)
or
jne
pop
pop
mov
add
or
sbb
or
dec
jmp
or
adc
ret
mov
test
ror
sub
dec
aam
cmp
or
loopne
mov
and
push
push
mov
jmp
xchg
sbb
inc
cwde
scas
pop
pop
sbb
sbb
jl
sub
rep
retf
pop
leave
xor
xor
push
data16
dec
sbb
sbb
mov
sbb
or
push
push
adc
aam
in
and
aad
sbb
add
cmp
inc
and
xchg
or
pop
ret
shr
jne
sbb
adc
add
mov
or
push
mov
or
jnp
jbe
adc
adc
sbb
call
and
out
cmps
add
or
stos
xor
sbb
(bad)
sti
sti
dec
or
cmps
or
mov
bound
imul
dec
xor
fild
cmp
stc
je
sub
mov
stos
mov
xor
add
xchg
and
mov
cmp
test
repnz
jne
or
mov
mov
add
lock
sti
daa
bound
pop
jmp
adc
iret
adc
push
repnz
pop
or
inc
sbb
sub
and
dec
clc
dec
jl
adc
dec
cmp
inc
or
sbb
mov
push
sbb
inc
add
push
or
sub
xchg
xchg
push
and
adc
sbb
pop
inc
cld
js
or
addr16
add
js
xchg
jl
dec
icebp
es
jle
sub
cld
out
dec
ror
and
xor
push
(bad)
sbb
inc
add
mov
push
cld
jo
clc
xchg
adc
mov
(bad)
ins
add
push
stc
std
(bad)
js
sub
mov
pop
popf
mov
out
pop
cmp
push
push
clc
push
je
add
stc
imul
xor
sbb
sub
push
(bad)
sub
lahf
(bad)
jne
clc
fidivr
lock
pusha
test
jmp
lea
add
adc
push
xchg
out
movs
inc
mov
inc
out
ds
mov
ds
or
call
sub
or
aas
pop
shl
pop
xor
push
xor
jge
xor
adc
mov
mov
sti
repz
xor
xchg
push
push
and
or
mov
jg
inc
or
cwde
fs
cmp
mov
pop
jae
adc
int3
(bad)
gs
xor
bound
or
pop
or
or
jmp
or
dec
add
jbe
cld
scas
cmp
mov
inc
aam
push
adc
xlat
or
ror
jmp
pusha
add
jno
(bad)
inc
or
mov
mov
int3
je
ret
jns
push
mov
into
add
mov
fwait
adc
pop
out
xor
mov
mov
nop
jecxz
rol
pusha
(bad)
cmp
mov
mov
pop
pusha
(bad)
dec
pop
shl
into
mov
dec
cld
add
test
sbb
fmul
out
cli
arpl
add
enter
and
cmp
sub
dec
or
nop
jno
retf
mov
adc
test
sbb
je
cmp
mov
jp
inc
push
cld
dec
jmp
or
add
cmp
jne
and
cmp
call
int3
fmul
fidivr
push
jb
pop
dec
jmp
fist
mov
mov
aam
dec
add
into
call
jne
jmp
or
pop
add
and
sbb
pop
lea
in
hlt
lahf
add
(bad)
imul
repz
jmp
ja
add
push
cld
rcr
fmul
sbb
fnstenv
dec
not
xor
mov
int
into
and
pop
div
sub
mov
pop
pop
ja
jbe
push
sbb
and
loope
push
jae
or
shr
popa
mov
pop
adc
pop
or
jmp
sbb
dec
aam
sub
inc
hlt
dec
or
mov
mov
leave
add
xor
mov
sub
loopne
push
in
and
imul
and
or
aas
and
cmc
and
mov
leave
pop
cld
pop
push
add
dec
jl
cmp
jge
das
sub
shl
mov
adc
mov
aam
pop
jmp
xor
and
fld
call
in
xchg
jg
mov
push
loope
dec
cld
loop
mov
or
mov
inc
cmp
adc
fst
mov
cmp
mov
or
scas
sbb
test
mov
retf
mov
scas
and
jne
and
outs
or
or
in
loopne
cmp
pop
scas
(bad)
je
or
mov
sub
mov
std
cmp
jl
jbe
call
les
cli
cmp
rcr
popf
pop
mov
loope
add
xchg
pop
inc
push
push
call
and
push
enter
pop
lods
xchg
xor
data16
jmp
not
shl
(bad)
push
inc
mov
gs
dec
push
xor
into
adc
adc
and
pop
and
sub
in
fnsave
adc
(bad)
cli
icebp
imul
adc
inc
jmp
jb
cmp
add
cmps
dec
and
adc
push
mov
push
les
cmp
add
(bad)
mov
fdiv
add
call
mov
inc
push
push
lea
xor
dec
pop
or
push
pop
in
xchg
inc
and
sbb
pop
inc
sbb
int3
adc
jne
jecxz
jne
stc
movs
sbb
pop
sti
das
add
stos
pop
dec
cmp
ret
movs
add
call
imul
shl
inc
push
add
sub
call
call
jo
jbe
sbb
fwait
jl
xchg
mov
arpl
pushf
mov
adc
leave
mov
das
movs
fcomp
std
jns
dec
add
mov
mov
ds
je
push
sbb
xchg
rcr
mov
mov
cmp
pop
xor
jg
xor
cmp
pusha
adc
xor
or
mov
call
cmp
xchg
xchg
push
retf
fstp
jb
add
fidivr
and
and
ja
ds
ds
cvtps2pd
mov
and
xchg
sub
add
jg
call
mov
push
loope
test
cld
sub
retf
or
outs
sub
and
movs
jg
add
mov
mov
(bad)
sub
pop
push
push
dec
test
dec
adc
jmp
inc
cmp
cld
sub
inc
lock
hlt
adc
inc
ss
cmp
adc
into
adc
jmp
or
mov
ret
inc
cmp
jmp
fdiv
xchg
adc
lds
jge
ror
nop
pop
xor
retf
clc
push
or
sub
jle
mov
ret
ret
dec
cmp
pop
stos
add
sub
movs
or
cs
lahf
or
xor
andnps
stc
and
adc
inc
xchg
mov
popa
and
mov
and
adc
and
jmp
dec
adc
inc
sti
test
push
cld
dec
adc
xor
stc
cs
dec
add
and
dec
std
xchg
or
popa
aas
pop
sub
cmp
lds
add
je
sbb
pop
fbstp
sub
adc
adc
lock
mov
push
or
test
retf
jmp
call
call
add
mul
inc
adc
popa
inc
jge
xchg
adc
pushf
test
fisub
and
enter
sbb
jmp
sar
push
and
jp
inc
call
adc
jo
data16
dec
inc
cdq
cmp
adc
ja
hlt
arpl
add
leave
aaa
test
jmp
sbb
xor
lds
inc
add
push
cmp
lea
cmp
jmp
pop
data16
jo
movs
data16
adc
arpl
xchg
push
push
in
scas
dec
inc
rcl
fnsave
lock
mul
ror
fs
or
ficom
aam
retf
mov
cwde
call
xchg
adc
leave
jne
sub
mov
clc
jmp
push
jmp
loopne
js
test
stos
dec
dec
pop
push
sbb
or
mov
(bad)
fadd
mov
pop
(bad)
and
pop
jns
lock
cmp
popf
mov
mov
adc
sbb
inc
add
dec
cmp
sbb
and
cmp
xchg
inc
shl
jo
div
ins
call
xchg
xchg
cmp
popf
xor
add
xor
jge
jg
sbb
push
test
sbb
imul
adc
and
pop
lea
iret
push
in
mov
jmp
out
or
lods
fild
(bad)
push
xor
in
jae
in
xchg
or
(bad)
mov
mov
leave
or
xchg
into
sub
adc
into
das
call
enter
dec
rcl
out
xchg
icebp
xchg
push
mov
mov
nop
add
push
ret
ins
push
fiadd
(bad)
test
jge
add
jle
int
or
dec
and
cmp
pushf
jo
cli
sbb
ror
push
ret
mov
ret
and
out
retf
mov
pop
out
in
popf
push
and
and
push
mov
and
in
add
dec
jne
cmp
dec
adc
push
jecxz
cs
pop
cmps
xchg
mov
mov
ficom
mov
sbb
inc
mov
adc
dec
or
push
push
(bad)
stc
das
inc
es
pop
das
adc
(bad)
in
push
sub
add
dec
jne
cdq
pop
and
sbb
je
loope
imul
jne
push
sbb
mov
or
xchg
lds
aaa
les
rol
hlt
and
(bad)
or
call
mov
and
iret
or
dec
add
ret
cwde
adc
adc
jmp
xor
les
fiadd
jne
imul
mov
arpl
clc
push
fwait
cmc
add
hlt
push
sub
and
jl
push
call
sub
push
das
lods
jp
mov
push
addr16
sbb
adc
aam
mov
add
push
lea
or
add
ret
xchg
adc
sub
pop
add
stos
in
adc
push
adc
mov
push
mov
fisubr
mov
adc
push
push
cmp
sar
and
es
sub
add
inc
sub
(bad)
lahf
aas
adc
push
push
xor
push
sbb
mov
push
dec
adc
ret
je
and
lea
jmp
loop
sub
pop
push
ins
or
inc
cmp
mov
(bad)
ret
dec
retf
dec
push
popa
mov
dec
inc
and
pop
inc
mov
pop
test
fimul
mov
imul
outs
pop
ins
xor
cs
shl
test
call
outs
addr16
popa
out
dec
inc
ins
aad
adc
mov
mov
lea
jecxz
mov
sbb
mov
xlat
outs
repz
fld
aad
lock
or
push
stc
add
jae
inc
and
xor
xor
xchg
sbb
sub
call
cmp
jmp
mov
pop
addr16
and
push
test
add
lds
or
ret
jmp
out
mov
mov
push
dec
popa
call
add
add
test
mov
js
xchg
jge
or
or
retf
mov
mov
movs
push
nop
mov
jmp
dec
cmp
ret
adc
fdiv
lods
or
ins
popf
xchg
inc
inc
pop
je
add
sub
fmul
ret
adc
call
push
push
(bad)
cwde
dec
jne
push
je
sbb
mov
mov
shl
or
or
pop
and
(bad)
push
int3
push
push
add
je
popa
jb
sub
jo
push
aas
arpl
(bad)
jae
xor
lods
sub
mov
dec
icebp
xchg
outs
aaa
fadd
loop
or
rcl
test
mov
lock
jp
stc
imul
sbb
and
mov
sub
(bad)
sar
jns
sbb
pop
add
adc
add
add
adc
fstp
les
lods
pop
adc
pop
sub
test
push
sub
lods
es
add
lods
or
shl
arpl
jne
push
mov
mov
setl
(bad)
push
iret
mov
adc
lods
call
gs
ret
sbb
add
xchg
jmp
inc
test
pop
mov
add
mov
cmp
jne
or
outs
sub
(bad)
in
ret
lods
nop
cmps
in
test
cld
ins
fldcw
add
add
mov
jne
fsub
push
inc
jg
stc
and
add
inc
out
jns
sub
cld
sub
xchg
int3
movs
fbstp
xor
(bad)
fmul
lds
adc
mov
ret
call
sti
hlt
cmc
add
cmp
dec
or
nop
dec
adc
lahf
mov
jp
mov
stos
dec
or
adc
pop
xchg
rol
mov
mov
dec
mov
inc
mov
leave
push
xchg
cmp
mov
dec
add
cli
jg
push
mov
xor
jmp
and
add
cld
ja
stos
fcmovb
jmp
or
retf
loopne
sbb
inc
or
(bad)
aas
mov
jp
fs
retf
dec
add
jg
jmp
(bad)
adc
dec
es
push
arpl
in
sbb
dec
or
jae
js
sub
add
dec
(bad)
sub
test
sbb
dec
or
or
cmp
lea
loope
call
hlt
sbb
fnstsw
jmp
adc
aam
gs
dec
clc
test
inc
out
hlt
cmp
or
inc
add
ins
add
cmp
and
aas
mov
cmp
inc
in
fwait
sti
test
test
mov
int
into
cld
sbb
ror
lea
dec
cld
ret
inc
inc
lds
sbb
inc
popf
jae
jmp
in
xor
adc
pop
push
(bad)
xchg
inc
dec
xchg
inc
and
pop
adc
ret
xor
jae
mov
mov
push
out
test
sbb
jbe
xchg
push
fdiv
jo
xchg
out
mov
sbb
loope
fiadd
sub
xlat
(bad)
out
adc
xchg
ret
lea
mov
in
mov
mov
cmp
dec
(bad)
jmp
mov
pop
fadd
or
cmp
push
or
stc
gs
(bad)
pop
in
inc
sub
jns
push
or
fisubr
mov
xchg
nop
pop
lods
cmp
scas
push
push
cmp
jno
cmps
movs
and
mov
out
loop
in
cmp
out
xchg
test
in
(bad)
xchg
push
icebp
sahf
push
sbb
in
and
out
imul
mov
push
xchg
out
(bad)
imul
and
push
mov
mov
push
jle
and
xchg
push
je
add
push
mov
aam
mov
rcl
fs
xor
xor
push
mov
push
sub
pop
lea
mov
call
and
mov
push
adc
sbb
and
jbe
sub
bound
and
out
cmp
les
shr
and
pop
or
add
and
aam
adc
and
xchg
dec
sub
sub
fdivr
in
mov
and
adc
add
dec
add
xchg
lock
inc
aam
or
fnstcw
adc
sbb
(bad)
je
dec
mov
inc
xchg
adc
xchg
xchg
test
mov
or
mov
sbb
(bad)
cmp
call
call
add
or
pop
mov
and
xor
jns
por
mov
adc
test
popa
xor
jne
inc
les
out
cmp
call
mov
call
je
cmp
add
loop
test
mov
(bad)
xchg
push
ret
xchg
or
mov
jmp
push
mov
mov
or
adc
test
jne
mov
add
jp
popf
dec
sub
test
je
sbb
mov
push
pop
adc
inc
in
clc
jmp
mov
inc
clc
pusha
mov
les
mov
mov
rol
aas
movs
test
sbb
and
adc
or
xor
xor
or
fstp
cmp
pop
dec
add
dec
xchg
cmp
mov
cmp
xchg
push
js
je
jo
inc
ins
and
fs
jb
cmp
mov
and
inc
enter
jb
cmp
xor
xchg
and
and
sbb
sbb
adc
adc
xchg
add
and
jb
cmp
sbb
mov
and
xchg
loopne
fsub
fdiv
cmp
sbb
cmps
push
nop
xchg
mov
mov
add
mov
pop
or
xchg
jo
sub
je
adc
jns
or
mov
and
xchg
repz
jb
cmp
sbb
mov
and
xchg
sti
enter
jb
cmp
jb
cmp
sbb
mov
and
xchg
in
out
out
call
mov
and
xchg
in
enter
jb
cmp
sbb
mov
and
xchg
aad
(bad)
in
jb
cmp
sbb
mov
and
xchg
(bad)
fsubp
fbstp
cmp
sbb
mov
and
xchg
vshufps
jb
cmp
sbb
mov
and
xchg
int
into
in
jb
cmp
mov
mov
mov
mov
mov
mov
mov
and
mov
sbb
mov
and
cmps
jb
cmp
adc
pop
pop
les
rcr
xchg
inc
fmul
jne
ins
mov
jmp
(bad)
mov
cmp
cs
scas
pusha
call
jo
imul
int3
in
inc
and
and
mov
or
movs
loopne
dec
gs
push
jo
adc
or
inc
dec
jne
pusha
dec
gs
outs
and
fdivr
sub
mov
or
outs
fnstsw
xor
pop
pop
test
cmp
je
int3
and
ins
fcom
mov
call
sar
ins
in
scas
pusha
fs
cmp
or
adc
push
cmp
(bad)
mov
inc
inc
imul
mov
jnp
and
popa
outs
addr16
mov
and
or
jbe
scas
data16
outs
ja
je
push
arpl
dec
inc
fs
dec
or
dec
loop
cwde
mov
test
pop
fs
add
cs
mov
jbe
add
dec
jo
ret
lods
jp
jo
fs
dec
shr
pop
pop
test
xor
xchg
mov
mov
jmp
fs
pop
nop
js
scas
pop
dec
inc
jae
mov
push
outs
cmps
fwait
das
test
or
xor
or
pop
jne
es
jo
rcr
js
inc
xor
mov
fcomp
data16
cdq
int3
fmul
adc
arpl
ror
mov
jl
rol
push
jb
jns
gs
in
push
aam
mov
sbb
je
popa
arpl
adc
inc
ror
je
imul
mov
and
push
popa
or
in
pop
fs
rcl
adc
adc
and
inc
popa
and
fs
enter
repz
inc
pusha
test
and
lods
mov
fldenv
data16
cmps
pop
inc
cld
repnz
and
das
(bad)
movs
adc
lock
and
les
lahf
xor
aaa
xor
cwde
scas
dec
cmps
or
mov
ins
lods
xor
xchg
and
push
xchg
movs
jo
repnz
or
add
xchg
inc
inc
retf
jo
add
push
les
pop
gs
mov
jne
add
add
adc
addr16
push
or
mov
dec
sub
xchg
call
mov
mov
cdq
inc
or
sbb
xchg
xor
mov
jnp
sbb
fist
jno
cmp
sub
loopne
sbb
loopne
and
or
lahf
rcr
inc
push
dec
jne
and
push
stos
fisttp
xlat
lds
jne
push
test
loop
push
outs
hlt
test
jnp
jmp
xor
add
ret
adc
div
ret
std
mov
add
pop
adc
aas
sbb
adc
mov
add
repz
out
adc
in
ins
xlat
mov
in
mov
ds
adc
stos
fs
out
aam
sub
ret
xlat
pop
jge
dec
aaa
shl
add
cmp
push
jp
pop
sub
mov
sub
pop
retf
mov
xchg
inc
add
jbe
push
mov
or
into
rsqrtps
mov
cmp
jbe
arpl
mov
repz
add
sub
(bad)
or
cli
push
and
mov
and
cmp
je
movzx
rol
sub
pop
mov
frstor
mov
lock
cmp
or
call
fidiv
xor
mov
rcr
push
adc
aad
nop
and
out
ror
adc
adc
push
mov
(bad)
xchg
jmp
jb
(bad)
cmp
scas
and
adc
mov
push
adc
dec
jmp
add
mov
inc
pop
cmp
jl
xor
jmp
jbe
hlt
push
jge
mov
enter
jmp
dec
sub
shr
inc
aad
call
adc
leave
jne
add
jns
neg
call
sub
ret
xor
xor
shl
icebp
add
out
sbb
jb
adc
mov
push
jne
pop
pop
cmp
icebp
add
jbe
add
mov
hlt
(bad)
add
add
cli
shr
out
in
or
xor
push
jo
popf
jmp
stc
repnz
loopne
shr
pop
ins
sub
pop
mov
adc
push
cwde
xor
and
push
cmp
or
and
mov
dec
inc
fwait
jo
test
movs
add
jl
add
or
ror
sub
adc
and
lea
jg
add
and
rol
rol
add
sub
add
clc
dec
out
cmc
xchg
fdivr
mov
(bad)
xor
fdiv
arpl
add
fcom
fstsw
sahf
jae
loope
ins
add
cmp
ret
cmp
cmp
adc
out
jmp
out
cmp
out
enter
and
push
repnz
shl
and
push
loope
mov
and
inc
sub
push
mov
(bad)
sub
push
cmp
(bad)
call
jb
add
push
cdq
or
mov
inc
pop
aam
jmp
and
add
cdq
lods
xchg
sub
dec
mov
add
adc
sub
sub
cmc
into
pop
cmc
mov
retf
fisubr
xchg
mov
jl
mov
add
push
jb
call
popa
ins
jae
and
mov
xchg
repnz
jl
inc
stos
mov
clc
adc
daa
xchg
shl
jmp
aas
mov
jg
clc
fidiv
or
lahf
jge
repz
xor
xchg
sar
adc
ins
lock
xchg
cmps
add
xchg
add
dec
call
bound
or
jp
das
pop
xor
add
and
or
fldenv
stos
or
push
and
add
rol
or
push
add
xor
xor
gs
call
fist
push
jb
adc
mov
adc
mov
(bad)
xor
mov
push
sub
sub
clc
daa
or
xor
inc
ja
pusha
cdq
xor
inc
jmp
rcl
or
and
cmc
enter
lea
mov
pop
pop
leave
adc
dec
mov
imul
cmp
mov
sar
dec
movs
daa
pop
pop
dec
jmp
push
mov
pop
mul
es
adc
mov
aam
pop
std
push
xchg
sub
dec
xchg
push
inc
jmp
push
or
or
cmp
xchg
pop
or
cmc
stos
mov
mov
cmp
add
cs
fistp
shr
int
inc
sub
test
push
leave
xchg
neg
or
jne
push
xchg
add
enter
test
xor
or
mov
test
sub
dec
mov
inc
cwde
dec
sub
pop
adc
lea
mov
mov
jns
inc
leave
push
daa
add
add
add
push
lds
jne
mov
sbb
mov
pop
dec
xor
add
or
in
or
call
push
clc
inc
or
push
inc
mov
sub
jl
or
inc
pop
inc
hlt
dec
jecxz
outs
push
shr
nop
mov
sub
inc
pop
clc
push
sub
sub
ins
cmc
pop
ja
xchg
daa
add
aas
jae
adc
mov
les
push
out
jl
push
iret
push
imul
pushf
mov
pusha
cwde
push
(bad)
call
and
xchg
dec
xor
sub
dec
push
ficom
cld
out
leave
add
sbb
inc
xor
or
mov
inc
push
cld
jle
sub
sbb
or
call
ss
xlat
pop
dec
or
xchg
cmp
jne
dec
jecxz
push
jg
(bad)
pop
dec
pop
cmp
mov
leave
add
sub
(bad)
mov
xor
cmp
les
xor
daa
leave
bound
imul
mov
popf
in
add
rcl
push
push
repnz
int
and
mov
cmp
call
cmps
js
xchg
mov
push
int3
fs
dec
cld
cdq
jl
or
lock
clc
cs
pop
pop
pusha
adc
pop
jecxz
cmc
das
sar
inc
dec
mov
pop
add
ss
mov
aam
adc
inc
mov
or
xchg
in
jb
nop
jle
adc
out
pushf
(bad)
xor
in
sub
enter
js
lahf
add
mov
push
jecxz
push
lock
pusha
add
sub
std
test
mov
push
popf
push
pop
and
pop
pop
arpl
push
ins
retf
xor
or
das
fwait
arpl
and
rcl
xchg
or
mov
adc
cli
xchg
xchg
pop
inc
jmp
inc
mov
test
xchg
mov
mov
cmp
jmp
lahf
and
mov
inc
xchg
sar
cs
leave
fistp
sbb
jbe
push
lea
aam
lods
test
push
mov
mov
inc
(bad)
mov
push
and
ror
adc
mov
mov
clc
xor
je
push
and
mov
pop
inc
xchg
aad
into
rcr
cmps
cld
sub
stc
adc
xlat
cmps
adc
mov
in
rcl
pop
(bad)
clc
and
pop
jbe
mov
ror
ins
xor
inc
aas
dec
mov
fild
aaa
add
cmp
fld
aad
xor
mov
lock
and
sub
sub
or
cmp
or
sbb
shr
xchg
and
pop
repz
int3
push
scas
retf
ror
push
jl
mov
and
inc
hlt
shr
clc
mov
xchg
es
dec
or
lods
cmp
pusha
imul
clc
sub
jmp
das
repnz
mov
dec
dec
out
sub
lods
cli
jle
(bad)
repz
or
xor
and
lods
jmp
loope
loopne
inc
xor
cs
fs
fmul
jne
mov
rcl
xor
mov
jge
xchg
or
retf
inc
shl
movs
sub
and
stos
push
push
or
jge
repz
push
pop
sub
mov
or
xor
lock
jle
mov
lahf
sub
movzx
add
xchg
inc
xchg
pmulhuw
repnz
hlt
pop
cmp
jg
not
(bad)
adc
jl
out
cmp
sbb
je
cmps
retf
or
mov
mov
cmp
pop
test
jne
lea
pushw
pushf
aas
push
add
and
push
js
pop
out
or
or
mov
xor
mov
or
push
cs
adc
ja
in
popa
mov
cwde
dec
fsubr
addr16
cld
xchg
int3
cli
inc
js
mov
pop
fsub
xor
jmp
fcom
leave
es
mov
nop
sbb
mov
fs
or
mov
adc
sub
and
pop
jmp
push
mov
ret
dec
punpckldq
jbe
mov
xchg
imul
xchg
and
xor
and
inc
pop
shl
adc
enter
hlt
aas
mov
push
mov
adc
and
xor
jmp
sahf
cld
xchg
pop
jp
jmp
jle
sbb
add
mov
loopne
cmp
fdiv
or
or
test
(bad)
and
mov
jecxz
iret
dec
retf
stc
push
rcr
push
leave
mov
pop
call
mov
add
ret
pushf
xor
sbb
inc
je
out
(bad)
cmp
inc
mov
inc
jle
inc
add
nop
test
mov
sub
dec
mov
sbb
movs
repnz
and
mov
clc
in
mov
mov
mov
xchg
inc
iret
and
cmp
cli
xchg
ret
xor
ret
rol
jmp
mov
js
scas
sub
sub
ret
daa
xchg
imul
sti
lahf
(bad)
in
dec
sbb
or
xlat
call
mov
fidiv
add
cmp
lahf
les
gs
daa
jno
dec
push
repnz
test
cmp
daa
cmp
mov
arpl
push
cld
lea
(bad)
mov
in
dec
jmp
push
aas
lds
lods
xlat
inc
fwait
cmp
jl
jmp
xor
fld
scas
loope
enter
sbb
pop
rcl
sahf
aad
cmp
xchg
std
xor
lods
push
lea
xchg
call
into
cmp
push
xor
stos
or
in
test
push
mov
sub
or
add
push
xor
mov
mov
inc
dec
xchg
xchg
inc
leave
jg
dec
pop
mov
stos
cmp
sar
pop
das
mov
and
push
mov
push
sti
adc
mov
mov
adc
(bad)
pop
stos
xchg
retf
mov
lods
xchg
dec
or
xchg
out
adc
mov
cwde
dec
div
daa
dec
jge
add
jb
jmp
dec
clc
jge
cld
movzx
sub
add
jae
pop
or
jo
lea
mov
les
in
cmp
jmp
or
xlat
sub
adc
ins
add
add
or
mov
jle
mov
pop
sbb
mov
pop
xor
les
call
movs
gs
xchg
or
icebp
cmps
pop
fnsave
xor
jge
jo
ficom
dec
dec
inc
in
call
jp
in
or
(bad)
shl
stos
test
pop
mov
aam
xor
jg
cmp
jl
xchg
cs
sbb
cmp
dec
cmp
fstp
repz
sbb
inc
lea
je
adc
clc
or
mov
inc
push
stos
or
retf
sub
call
push
mov
or
gs
lock
dec
cld
jns
sbb
xchg
retf
fadd
imul
inc
mov
in
mov
call
call
cli
adc
mov
stos
xchg
in
inc
jmp
movs
out
and
or
mov
dec
add
adc
call
je
dec
jne
inc
mov
fsubr
jmp
dec
mov
mov
add
dec
inc
or
jne
call
leave
test
inc
jb
adc
(bad)
cmp
mov
retf
lea
push
inc
jge
push
je
push
push
retf
and
lea
or
push
dec
sbb
inc
loop
xchg
stos
hlt
xchg
cmps
add
pusha
push
sub
add
pop
std
(bad)
sub
jg
push
sub
add
test
sub
sbb
jle
sub
cs
inc
cmp
fisub
adc
xor
daa
sub
(bad)
in
sub
xchg
test
pop
sbb
es
test
call
or
test
mov
ret
mov
cmp
div
inc
push
fs
adc
jle
sbb
add
sbb
mov
int
adc
cs
rcl
mov
clc
shr
fnstenv
hlt
cmps
add
fabs
push
lods
adc
bound
jmp
fmul
fisttp
xlat
xchg
je
fidiv
pop
fbstp
push
or
add
mov
or
add
pop
in
add
mov
sahf
jmp
shr
or
xor
dec
ja
mov
lahf
or
cmp
clc
and
add
or
cmp
ja
jmp
mov
mov
sbb
and
je
cmp
or
test
mov
xor
dec
out
sub
call
add
add
add
ror
test
mov
enter
jle
test
jmp
add
pop
mov
sub
add
repnz
add
and
cwde
push
in
bound
cli
mov
or
fiadd
mov
jecxz
inc
or
or
mov
adc
test
ror
psubusb
dec
mov
xchg
enter
and
cmove
rol
dec
adc
pop
add
in
mov
jmp
test
dec
mov
push
call
dec
fs
sub
repz
sub
dec
or
mov
(bad)
jns
fnclex
bound
out
call
and
sub
xor
sub
test
xor
push
cmp
aas
or
ins
pop
sbb
icebp
je
dec
es
cmp
pop
jne
inc
push
call
add
jle
adc
jne
mov
jne
jno
js
dec
sub
lods
push
push
or
xor
jmp
(bad)
shl
test
daa
mov
jbe
test
movs
mov
xchg
cmc
push
jb
or
and
cs
sub
aas
lahf
sub
or
xor
sahf
jo
inc
jmp
movs
sbb
mov
cld
sub
push
sub
leave
imul
adc
sbb
mov
in
shl
jb
invd
(bad)
mov
adc
lods
mov
fwait
xor
mov
or
out
or
adc
inc
(bad)
retf
mov
test
(bad)
and
jbe
sbb
and
push
fwait
retf
sub
inc
enter
fstp
push
sub
lahf
adc
je
mov
loop
inc
or
inc
sub
inc
mov
pop
in
xchg
adc
int
cwde
xor
or
pop
xchg
pusha
sub
dec
pop
dec
mov
jmp
fwait
in
or
dec
or
jbe
inc
inc
stc
add
hlt
cmp
cs
xor
sub
or
shl
enter
popa
cwde
ret
sar
inc
xor
fild
cmp
fwait
xchg
cmps
add
enter
retf
pusha
inc
retf
movs
dec
dec
mov
movs
xchg
push
jne
push
or
adc
add
sbb
outs
mov
inc
mov
inc
and
fadd
out
cmp
xor
daa
cld
or
loop
dec
rcl
dec
sub
xor
adc
and
adc
add
ds
div
jp
adc
and
dec
je
pop
mov
mov
ins
in
mov
adc
cmps
lods
xchg
cmps
jg
lea
les
loopne
inc
sysenter
add
daa
xor
jmp
or
add
xor
ins
cld
xbegin
(bad)
ja
adc
push
cmp
add
or
sub
in
mov
cmps
mov
xor
ins
aas
mov
outs
mov
ffree
repnz
inc
cmps
mov
inc
stc
fbstp
(bad)
adc
sub
imul
mov
jecxz
popa
jno
and
std
add
test
jg
pop
jle
and
cdq
or
or
and
repnz
adc
mov
and
dec
pop
add
add
jl
loope
inc
or
adc
in
sub
lock
xchg
in
inc
jge
add
dec
mov
cmp
ds
fsubr
xchg
dec
shr
mov
add
rol
loopne
scas
push
and
or
dec
dec
push
fldcw
pop
jmp
jg
fs
movs
inc
mov
dec
inc
imul
arpl
adc
fs
jmp
fst
dec
sbb
mul
enter
es
ins
adc
push
test
xchg
cmp
dec
or
cmp
adc
les
xchg
pop
sahf
inc
call
and
xor
stc
cwde
dec
inc
stc
cwde
dec
lock
adc
(bad)
aam
xchg
out
dec
in
jl
push
dec
or
shl
lods
cmp
stos
ret
clc
and
sbb
ret
xchg
adc
lods
push
add
xor
cwde
sbb
xor
jmp
jg
jmp
mov
dec
jb
je
push
push
xor
(bad)
popa
xor
cs
call
out
fsubr
add
mov
adc
mov
jp
or
cmc
inc
xor
push
xor
(bad)
or
sti
je
inc
ret
mov
mov
js
push
cmp
in
push
jne
loop
dec
sbb
or
into
sbb
push
lock
add
xor
mov
add
jecxz
xor
adc
and
nop
call
sti
xor
jecxz
push
sbb
aad
fimul
mov
lea
and
pushf
mov
cmp
enter
in
xchg
or
adc
xor
dec
or
call
xchg
stos
add
mov
(bad)
fst
inc
in
and
mov
jo
or
adc
lea
cmp
mov
adc
cli
xor
inc
outs
adc
mov
je
and
or
add
and
imul
mov
mov
cmp
jne
cs
mov
dec
and
pop
or
aas
pop
call
lock
adc
dec
sub
mov
push
or
mov
ret
aaa
cmps
pop
mov
sbb
cmp
lahf
mov
and
ret
jmp
in
fld
(bad)
sti
sar
push
mov
and
pop
mov
jecxz
(bad)
in
inc
ja
mov
or
push
inc
test
cdq
mov
paddsw
je
xor
inc
mov
jne
and
cmp
xor
and
adc
test
xor
lahf
mov
shr
lock
sbb
xor
jl
and
lods
lock
jmp
(bad)
add
mov
adc
pop
dec
mov
mov
out
sub
mov
mov
xor
jecxz
loop
jmp
ret
sub
mov
jae
mov
stos
mov
rol
xchg
xor
fdiv
xchg
jmp
add
xchg
adc
push
add
int3
jmp
or
inc
or
pop
cmp
dec
mov
mov
mov
push
add
xchg
test
add
and
je
pmullw
es
pushf
push
and
test
push
or
add
or
add
dec
xchg
add
mov
inc
ret
lea
mov
(bad)
movs
nop
sbb
imul
push
mov
loope
push
scas
adc
or
add
xor
icebp
mov
int
adc
jmp
and
(bad)
(bad)
sti
cli
test
movs
pop
nop
cmp
pusha
xchg
aaa
aaa
dec
mov
xchg
(bad)
adc
inc
js
push
adc
repnz
add
xchg
in
or
xchg
inc
push
or
dec
or
loopne
sbb
xor
je
test
popa
sub
test
scas
sbb
loop
adc
out
inc
gs
mov
pop
arpl
(bad)
ss
push
sbb
jg
mov
push
cmp
test
xor
xor
dec
mov
xor
jo
inc
xchg
mov
daa
nop
es
adc
movs
cdq
and
std
adc
inc
out
cld
adc
dec
lods
iret
dec
stc
adc
sub
push
or
loope
jne
cld
jmp
xchg
or
xchg
jmp
loopne
push
cwde
add
lods
arpl
add
cld
push
jmp
pop
push
popa
mov
out
pusha
lock
and
jne
mov
add
lahf
out
pusha
sub
dec
xor
mov
adc
add
jne
xchg
sbb
add
adc
push
loope
out
mov
or
pop
test
adc
inc
jmp
push
push
std
jmp
jle
dec
lahf
or
test
cld
xor
push
add
or
es
xchg
inc
clc
xor
aad
cli
leave
xor
add
mov
push
enter
push
out
xor
fld
and
or
jne
sbb
or
sti
adc
pop
push
adc
movs
xor
cdq
cmp
push
pushw
or
inc
mul
ja
jno
stc
push
dec
ins
mov
out
jne
sub
mov
jo
mov
or
add
das
sub
in
add
add
in
test
mov
xor
jae
xor
xchg
adc
inc
cmp
rsqrtps
cwde
adc
dec
dec
add
xchg
jo
xor
adc
scas
xchg
js
sub
retf
ret
add
pushf
int
sub
pshufw
mov
gs
sub
jmp
(bad)
(bad)
aam
jecxz
xor
push
xor
and
pop
lahf
inc
sahf
sub
movs
neg
lock
dec
out
push
into
cmp
dec
inc
cmps
and
add
pop
stc
mov
test
imul
and
push
and
test
je
and
or
jmp
bts
adc
call
std
mov
std
sub
push
lds
out
enter
fwait
xchg
clc
dec
int3
rcl
jmp
adc
mov
fimul
add
cli
clc
repnz
js
mov
xchg
inc
fsub
xchg
stos
push
cmps
pop
sbb
add
das
push
iret
js
fimul
sbb
or
in
xor
mov
mov
adc
out
pop
mov
and
xchg
or
mov
adc
mov
mov
arpl
inc
movs
pop
mov
sbb
mov
aam
and
mov
lods
adc
inc
js
jl
enter
and
dec
jb
mov
retf
mov
jb
fs
(bad)
stos
mov
xor
sbb
div
jmp
mov
shr
test
mov
sbb
ret
retf
pop
inc
adc
shr
jae
xchg
adc
or
sbb
fsubr
dec
xor
mov
mov
push
(bad)
in
xor
loope
inc
rcr
cmps
loopne
scas
cmp
fcomp
lods
inc
xchg
call
arpl
xchg
call
clc
push
push
xchg
pop
lods
repnz
sub
pop
sub
ins
sub
pop
fnstenv
int3
or
aad
inc
add
scas
cmp
inc
xchg
add
call
inc
popf
bound
aad
pop
and
mov
sbb
dec
call
lods
jecxz
repz
(bad)
xchg
repz
and
ds
mov
dec
pop
scas
jbe
gs
mov
inc
notrack
fild
je
dec
inc
or
or
push
jmp
mov
call
push
xor
mov
or
xor
ffreep
ja
clc
call
imul
adc
pop
sbb
and
sbb
repnz
adc
inc
mov
push
mov
push
test
pop
dec
and
mov
mov
dec
sub
call
in
add
ja
sub
test
mov
gs
cmp
xor
repnz
sbb
mov
mov
cmp
cmp
sti
arpl
and
xchg
xchg
test
cmp
sub
xchg
cwde
jo
imul
fadd
cmp
push
mov
neg
xchg
push
inc
dec
xor
ret
push
inc
pop
fdiv
or
dec
mov
in
scas
cmp
push
cwde
test
dec
(bad)
and
fs
call
iret
adc
jns
div
cmc
jae
sub
sbb
xor
and
cwde
dec
dec
xlat
xchg
ror
dec
pop
pop
mov
loopne
pop
pusha
ficomp
xlat
mov
adc
dec
mov
loopne
adc
test
call
or
mov
mov
mov
jle
sub
call
or
cmps
std
adc
fs
jmp
cmp
ja
into
inc
and
inc
lock
mov
div
dec
jb
and
cmp
push
mov
lock
(bad)
jge
fs
inc
in
jmp
sahf
sbb
repnz
xchg
sbb
les
test
push
mov
call
xor
jmp
cmp
ja
or
push
add
xchg
in
dec
push
in
mov
jno
popa
jmp
pusha
cmp
cmp
jle
frstor
shl
pop
mov
xchg
nop
or
add
xchg
jp
and
arpl
mov
sti
add
adc
adc
xchg
sbb
fwait
adc
scas
cmp
cmp
sub
loop
test
or
sub
mov
(bad)
icebp
push
call
fadd
mov
(bad)
and
push
fcomp
inc
pushf
aam
pop
mov
fdivr
adc
sub
sbb
sub
mov
test
push
out
mov
inc
xor
movs
les
mov
and
call
cmp
jb
cmp
adc
mov
leave
jns
fs
(bad)
iret
lahf
jmp
fs
xchg
stos
(bad)
(bad)
adc
nop
mov
call
les
sub
sub
mov
or
cmp
sub
stc
sbb
or
jmp
adc
mov
popf
sub
push
pop
adc
mov
xor
adc
xchg
data16
or
jecxz
inc
or
movs
sub
push
lods
xor
out
les
or
push
mov
clc
lds
and
les
sub
data16
in
dec
inc
stc
mov
and
stos
enter
or
inc
adc
daa
add
xor
push
cdq
push
or
add
adc
sub
lock
dec
pop
mov
les
jmp
sbb
stc
or
mov
retf
les
xchg
push
shl
jl
aaa
les
cmps
mov
add
pop
adc
adc
int
mov
fist
test
adc
test
jne
pushf
es
js
sbb
daa
fisttp
mov
les
jb
movq
lods
add
fwait
jmp
push
or
sbb
(bad)
inc
rol
push
inc
test
push
push
sbb
rdmsr
sub
dec
mov
fst
mov
std
jmp
je
push
xchg
add
inc
mov
jae
out
jo
(bad)
jp
icebp
lds
out
popa
jo
mov
test
xor
and
cmp
fst
clc
push
fsub
call
add
out
dec
div
lds
clc
mov
xor
cmps
imul
stos
xchg
imul
add
sub
(bad)
mov
mov
push
movs
adc
in
popf
or
call
mov
pop
es
aam
push
daa
push
ficom
mov
dec
clc
inc
and
adc
pop
jb
and
rcl
cmp
pop
lock
ja
inc
jge
push
jb
or
or
call
sub
mov
fcomp
add
xor
xor
call
jecxz
or
xchg
sbb
out
add
or
in
mov
inc
call
lods
inc
call
xor
xor
pop
je
xchg
and
jne
addr16
or
or
call
int
les
pop
cmc
or
enter
dec
jmp
leave
(bad)
out
lock
and
shr
mov
stos
pop
xchg
mov
cld
jbe
call
cli
cdq
dec
lock
pop
out
cmp
sahf
cli
cmp
adc
mov
mov
dec
push
std
imul
sar
std
popf
clc
or
cmp
add
push
ret
popa
push
push
jg
and
jp
mov
jne
push
push
and
mov
test
xor
or
xchg
push
mov
cmp
mov
xor
jl
ins
mov
cwde
inc
sub
cld
inc
clc
bound
jb
mov
repz
mov
gs
pop
xor
nop
sub
dec
sbb
fmul
mov
loop
mov
or
or
mov
mov
jle
hlt
loope
jns
mov
mov
mov
dec
lock
daa
pop
xchg
jmp
pop
cld
jmp
pushf
dec
(bad)
lea
mov
pushf
movs
inc
cmovl
test
xor
push
push
inc
jmp
jle
lods
and
xchg
mov
nop
mov
ret
add
push
std
les
and
and
dec
cmc
pop
and
jne
aaa
fcom
xor
jmp
add
or
inc
lahf
jl
sbb
pop
jle
call
outs
popf
test
cmp
xor
sub
sbb
mov
xchg
mov
aaa
add
pop
add
pop
adc
jns
jmp
add
cli
fdivr
(bad)
mov
rcl
shl
push
dec
push
cmp
mov
sbb
ins
jl
out
std
ja
push
aam
call
and
sbb
loop
fs
popf
mov
mov
sub
and
mov
call
mov
(bad)
and
adc
adc
ror
mov
mov
pop
hlt
pusha
call
(bad)
and
loope
lock
mov
jbe
push
into
cli
setbe
sub
sar
push
ret
mov
inc
add
sub
stos
xchg
mov
adc
ror
lea
sbb
es
mov
xchg
clc
and
and
or
mov
adc
jae
push
xchg
and
jecxz
das
ret
pop
cmp
add
or
jecxz
add
call
lods
mov
out
xor
(bad)
(bad)
push
movs
mov
sub
dec
int
and
dec
fwait
or
mov
hlt
xchg
jae
lock
(bad)
jmp
aas
cmp
nop
ss
enter
ss
inc
cmp
add
test
call
inc
push
push
and
mov
ret
mov
stos
lods
jmp
push
loop
xchg
movs
icebp
icebp
mov
add
in
lds
lahf
push
pminub
cmc
in
mov
scas
into
mov
(bad)
aam
sub
adc
mov
mov
push
or
cli
cld
aam
cld
sub
push
js
mov
cdq
adc
aad
jle
in
dec
jnp
pop
popa
lea
mov
fnsave
lea
fst
sbb
mov
xchg
cmp
retf
lahf
mov
leave
pop
fwait
cdq
xchg
in
(bad)
retf
bound
cs
push
pop
sahf
cwde
arpl
push
stc
lea
or
loop
add
arpl
mov
and
sub
add
jg
cmp
jne
push
unpckhps
fisttp
jmp
mov
pop
(bad)
dec
adc
mov
inc
jmp
sbb
pop
movs
test
and
push
sub
retf
or
adc
jmp
sti
and
sub
xchg
test
and
lea
mov
iret
fld1
adc
repnz
inc
or
dec
pop
pop
call
cwde
mov
test
stc
jmp
xor
xchg
loopne
or
jno
mov
stc
dec
and
or
push
mov
mov
imul
xor
push
lock
add
xchg
nop
in
dec
or
mov
dec
in
inc
cli
cwde
addr16
xor
inc
fmul
and
mov
imul
repz
dec
in
mov
add
stos
push
xor
cli
add
rol
(bad)
jp
push
and
push
outs
adc
push
jne
ret
ret
mov
push
bound
dec
jmp
mov
repz
repnz
adc
xor
jmp
bound
mov
add
mov
push
add
adc
and
inc
or
or
icebp
nop
sub
hlt
cdq
test
sub
push
cmp
nop
lods
enter
das
mov
test
pop
cld
cmp
jg
xchg
xchg
or
mov
or
adc
push
sbb
pop
inc
pop
or
jno
mov
and
jne
xchg
(bad)
mov
cmps
in
inc
sub
inc
xchg
mov
cld
mov
dec
lea
adc
cmp
dec
push
mov
call
mov
les
enter
dec
movs
mov
dec
or
xor
add
dec
mov
mov
gs
cli
xchg
adc
xchg
push
pop
pushf
xchg
and
add
nop
inc
mov
sbb
xchg
pop
adc
pop
xchg
sbb
and
out
xchg
fsub
inc
mov
sub
shr
mov
punpckldq
std
inc
inc
rol
or
loopne
sbb
pop
and
out
cmp
data16
pop
ins
xor
out
lock
lock
pop
lods
les
popa
shr
adc
mov
push
pop
cmp
push
out
fimul
pushf
or
xchg
int3
inc
sbb
xchg
call
add
pop
inc
lods
sub
gs
lds
xchg
dec
pop
mov
xchg
jg
je
(bad)
push
xlat
pop
(bad)
loopne
adc
test
push
ds
fcomp
and
cmps
push
in
sbb
inc
mov
js
int
cmc
mov
or
adc
mov
inc
or
stos
or
xchg
jecxz
xlat
nop
ins
inc
xchg
mov
or
call
ss
jb
movs
test
adc
fmul
xor
test
test
inc
push
call
xchg
mov
xor
repnz
or
inc
call
add
sbb
outs
mov
mov
lock
or
adc
test
jmp
scas
or
clc
(bad)
adc
cmp
jmp
xchg
dec
stc
xchg
dec
add
dec
mov
dec
jmp
popf
inc
or
mov
adc
jb
mov
sub
enter
cmp
or
inc
sub
add
add
dec
repnz
mov
pop
pop
lahf
inc
sub
je
mov
sahf
(bad)
dec
sbb
mov
leave
push
lds
mov
and
scas
retf
jle
and
xor
pushf
mov
add
jle
xchg
xor
push
jg
aad
pop
mov
cdq
jle
sub
lods
scas
inc
adc
sbb
inc
cmp
inc
pop
dec
jge
xlat
(bad)
mov
cmps
cs
mov
xchg
inc
hlt
push
loope
jno
mov
inc
rcr
mov
jp
rcl
aas
mov
xchg
jo
adc
jge
inc
adc
aad
aam
movntps
xor
or
cwde
xchg
dec
hlt
pop
adc
(bad)
cld
dec
and
push
cmp
pop
shr
pop
daa
aas
js
sub
lock
cs
jbe
inc
rol
inc
cmp
mov
sub
inc
aas
jmp
or
cmps
sbb
js
sahf
inc
dec
fs
inc
adc
xchg
push
mov
neg
es
xor
(bad)
pop
push
nop
dec
pusha
jge
nop
cmp
inc
lods
sub
sub
lahf
hlt
mov
call
shr
stos
xor
and
mov
and
xchg
push
add
dec
adc
shr
adc
repnz
jne
inc
push
clc
xchg
pop
adc
xchg
test
std
push
or
call
les
cmps
retf
dec
icebp
adc
pusha
and
mov
pop
push
jbe
dec
test
retf
mov
push
data16
je
(bad)
repnz
pop
adc
int3
sti
in
inc
test
(bad)
icebp
jmp
test
jl
in
call
bnd
xchg
rol
jg
xchg
imul
or
test
test
imul
or
je
fdiv
adc
stos
adc
sub
daa
sbb
inc
push
inc
(bad)
push
sub
adc
sub
call
or
cli
jbe
repnz
xchg
cld
sbb
adc
call
lock
adc
push
cmp
sub
jne
cmc
(bad)
xor
cmp
push
mov
mov
sub
call
adc
inc
jecxz
sbb
jne
mov
or
hlt
and
inc
mov
adc
cmps
and
(bad)
adc
xchg
xor
cs
push
adc
mov
inc
call
jmp
dec
jmp
cmc
fsub
je
xor
rcr
add
sub
jb
inc
mov
inc
push
jmp
push
int3
retf
jne
jmp
or
jmp
add
push
inc
push
popf
cwde
add
pop
cs
sbb
dec
rcr
adc
push
(bad)
push
add
enter
adc
call
sub
adc
inc
adc
or
call
mov
mov
sub
movs
pop
add
test
rcl
mov
dec
sbb
mov
inc
mov
call
setne
sub
push
or
dec
mov
xchg
lea
add
cmp
lea
adc
jns
sub
inc
push
and
xor
cmp
cwde
xchg
ror
ja
jmp
or
call
int
inc
sbb
ja
push
lea
xchg
adc
cmp
add
lods
jno
dec
jne
push
movs
test
mov
call
pop
jmp
add
jmp
daa
jge
rcr
lahf
and
mov
pushf
xchg
cmps
les
mov
jecxz
xchg
mov
daa
sbb
outs
call
or
adc
and
sbb
dec
aaa
js
jge
add
mov
mov
sub
sbb
add
in
ret
add
mov
test
fadd
and
xor
out
dec
fadd
xchg
rol
mov
mov
aam
pushf
and
adc
push
jo
mov
and
push
xchg
es
inc
mov
adc
push
sar
mov
adc
sbb
test
push
int3
mov
and
sar
clc
and
push
enter
mov
xlat
int3
mov
test
jb
fadd
(bad)
in
popa
retf
les
aas
(bad)
cwde
and
and
inc
fldenv
hlt
mov
jg
inc
hlt
and
int3
sti
xchg
push
cld
or
adc
mov
lahf
sub
mov
pop
jmp
or
sbb
xchg
lods
add
jb
mov
xchg
jo
test
(bad)
jg
cmp
push
xor
push
inc
ins
das
fs
std
int3
aam
xor
and
aas
cmp
add
adc
dec
sub
outs
lahf
gs
push
icebp
pop
adc
and
mov
into
test
sbb
les
and
xor
ja
(bad)
faddp
jl
mov
(bad)
pop
aaa
inc
pop
lock
or
in
ins
pusha
clc
retf
sub
rcl
or
clc
mov
and
sub
cld
enter
pop
or
ret
sbb
sbb
aas
or
jne
repnz
mov
adc
sbb
test
pop
call
daa
jmp
adc
and
xchg
sar
mov
and
ins
and
mov
sbb
pop
or
lock
xor
pop
xchg
repnz
imul
push
pop
jo
arpl
rcl
inc
ret
and
dec
or
dec
or
stos
pmullw
jle
icebp
sub
mov
std
enter
aaa
push
stc
lds
add
call
jne
repnz
cmp
pusha
fimul
hlt
call
sbb
jle
pop
clc
jge
(bad)
dec
jl
cdq
mov
xor
fldenv
sub
push
push
les
pop
xlat
leave
in
cdq
jo
(bad)
cs
add
add
in
ret
push
out
hlt
jecxz
cmp
daa
mov
mov
addr16
mov
inc
mov
inc
or
lock
(bad)
clc
and
sub
push
test
pushf
sub
test
nop
jp
lea
or
add
je
test
inc
mov
push
mov
dec
fcomp
cmps
jo
enter
mov
sub
adc
jp
mov
sbb
add
jg
push
adc
inc
call
dec
imul
mov
push
imul
mov
ficom
push
or
lods
ins
ins
xlat
jp
cmp
sbb
jnp
(bad)
pop
inc
enter
adc
sbb
or
push
ins
lock
inc
retf
aad
or
pop
cmps
jae
adc
sub
push
sbb
and
xchg
and
add
call
cmp
je
dec
test
outs
sub
repnz
mov
aas
aam
cmp
mov
inc
gs
sbb
enter
sub
sbb
idiv
(bad)
std
sub
aam
inc
dec
nop
or
xor
mov
sub
sub
dec
cmp
push
sete
aas
sbb
ret
pop
les
inc
or
mov
xor
inc
xchg
loope
ja
add
or
push
pop
cmc
pushf
stos
mov
movs
cmp
retf
push
int3
mov
cmp
or
cs
add
call
inc
inc
add
and
jmp
xor
call
push
pop
std
mov
mov
and
adc
add
rcr
in
mov
mov
mov
nop
sbb
std
sub
xor
shr
pop
sub
push
or
xor
lods
xor
mov
jnp
dec
pop
and
pop
stos
xlat
loop
retf
push
dec
ror
movs
cmps
jl
cli
adc
adc
xor
daa
cld
popa
cmp
xor
xor
or
in
inc
dec
fcom
inc
adc
dec
in
xor
mov
xchg
adc
lock
lods
mov
mov
movs
and
pop
enter
and
mov
or
test
adc
and
dec
mov
mov
push
xor
pushf
adc
and
inc
inc
loopne
mov
cmps
and
aam
add
xor
jo
mov
cmps
sbb
mov
cmps
or
and
inc
sbb
mov
cmps
dec
inc
adc
cmps
sbb
cmps
or
add
mov
adc
add
hlt
dec
pop
in
dec
movs
xor
xor
call
in
and
loopne
pusha
in
dec
sub
fmul
xor
push
or
ror
and
int3
dec
hlt
or
enter
les
in
dec
mov
fs
mov
mov
sub
bound
and
and
and
and
and
and
cwde
or
jmp
hlt
mov
stc
retf
ss
or
or
push
or
adc
call
or
xchg
aam
inc
sbb
push
sub
and
inc
add
dec
hlt
adc
adc
jp
(bad)
ins
and
adc
aas
push
lds
and
adc
xchg
mov
and
adc
and
cwde
inc
imul
adc
mov
dec
mov
and
adc
adc
or
inc
test
test
and
js
mov
sub
add
and
test
xchg
jnp
pop
mov
cmp
sbb
cmp
ins
call
(bad)
jmp
xlat
mul
xchg
xchg
jae
das
test
(bad)
ja
pushf
and
js
and
je
enter
mov
or
or
pop
mov
jmp
shr
adc
inc
in
imul
pop
ret
xor
cdq
or
xchg
adc
gs
and
push
ror
retf
mov
sbb
jg
push
adc
out
call
sub
js
loope
ror
push
call
loope
das
fs
movs
sbb
enter
add
enter
xor
adc
stos
adc
push
enter
jnp
or
test
jg
sub
mov
les
push
and
jge
push
fsubr
lds
enter
or
cmp
sub
sbb
out
jge
xchg
mov
mov
cmc
sbb
inc
mov
add
or
call
je
scas
in
es
or
jmp
adc
and
ror
mov
nop
mov
loope
ret
pop
repnz
pop
xor
and
pop
and
and
inc
les
lods
jns
iret
jae
jnp
adc
loopne
or
dec
pop
sahf
sub
stos
je
fimul
lods
xor
cmp
cs
pop
mov
push
mov
or
pop
push
xchg
shr
inc
jbe
cld
cli
sub
scas
pop
push
push
hlt
out
mov
sbb
cmp
rcl
(bad)
je
xor
cmp
(bad)
push
cs
clc
adc
mov
add
mov
sub
test
out
cdq
sub
adc
pushf
and
jno
test
and
pop
xchg
mov
inc
xor
das
nop
mov
cmp
sbb
and
nop
mov
inc
xlat
enter
or
xchg
and
fs
xor
inc
rcl
and
and
enter
daa
pop
inc
imul
pushf
test
and
mov
lods
mov
adc
adc
and
adc
fucom
nop
ror
in
or
inc
(bad)
out
adc
or
mov
outs
ins
gs
jne
xchg
push
les
push
push
jns
jo
mov
pop
sbb
outs
je
mov
xor
push
jne
sbb
dec
stos
or
xor
lea
adc
outs
int3
xor
dec
or
ret
outs
test
dec
xor
(bad)
outs
ret
push
je
jb
push
mov
inc
jle
gs
dec
sub
inc
inc
fcmovu
sub
ret
inc
jae
adc
mov
dec
push
adc
enter
addr16
call
mov
les
xchg
and
call
and
loop
aaa
mov
dec
pop
aad
or
in
or
mov
push
adc
loop
loope
enter
fcomp
hlt
pop
adc
mov
sbb
and
dec
out
or
and
or
mov
adc
jl
or
sbb
dec
add
retf
and
adc
add
adc
test
test
sbb
sbb
mov
pusha
adc
or
or
not
int3
push
cmp
scas
sub
push
inc
xor
pop
call
jle
inc
fs
adc
mov
xchg
sub
ins
sbb
ror
pop
ds
inc
push
addr16
retf
mov
inc
mov
aam
and
adc
gs
sub
cld
fs
push
repnz
inc
mov
cli
imul
out
jns
int3
out
lods
push
sti
xlat
cmp
pop
enter
adc
mov
jo
test
int
push
int3
xlat
lods
(bad)
mov
mov
cwde
pop
enter
pop
mov
ret
pusha
arpl
pushf
fwait
cld
scas
fs
cmp
adc
jo
adc
jne
mov
pop
into
sub
xlat
xchg
inc
ror
inc
leave
stc
inc
aam
in
xchg
pushf
cs
outs
(bad)
adc
std
or
push
inc
call
test
cld
mov
hlt
adc
add
lods
in
push
xor
mov
sub
xchg
not
dec
in
hlt
(bad)
cli
outs
nop
cdq
clc
push
lock
dec
iret
lea
sub
inc
or
hlt
push
jg
push
mov
out
jns
sbb
test
adc
mov
rcl
pusha
mov
inc
out
push
lock
nop
or
ds
ror
adc
sbb
push
sbb
or
lock
adc
test
jmp
(bad)
rcl
call
adc
into
add
das
push
sub
mov
(bad)
mov
add
jmp
or
cmp
dec
mov
inc
or
clc
xchg
xchg
call
pop
jl
add
sub
std
inc
jmp
mov
cmp
(bad)
adc
or
retf
shr
test
jmp
or
mov
test
xor
cli
xchg
cs
mov
outs
mov
dec
retf
adc
shl
aam
or
lock
outs
mov
mov
ret
mov
in
mov
sbb
inc
or
popf
inc
mov
mov
lods
and
in
adc
bound
ret
test
sbb
fmul
mov
jmp
cld
retf
and
cmc
dec
out
adc
and
or
clc
(bad)
cmps
jp
inc
enter
xor
push
aam
mov
lods
mov
pop
fadd
fsubr
enter
shl
or
mov
mov
or
dec
gs
cli
aad
loopne
imul
cmps
sbb
bound
fidivr
mov
call
sub
hlt
fist
fisttp
and
adc
sub
or
xchg
enter
bound
rol
clc
add
rcl
shl
call
leave
cmp
jo
add
out
add
add
loopne
cmp
xchg
or
setg
ret
mov
inc
lods
jge
sub
jo
add
test
push
outs
ds
fstp
jne
add
jmp
and
jmp
in
ret
mov
dec
dec
xor
adc
test
mov
pop
movs
cld
aam
cld
mov
or
adc
das
add
loope
push
rol
jbe
push
(bad)
push
cmp
xchg
data16
mov
test
mov
inc
je
dec
and
xchg
cwde
clc
adc
adc
mov
lock
jmp
jl
inc
xor
mov
mov
test
xchg
je
pop
lea
dec
cmp
or
sbb
sbb
sub
cdq
push
and
adc
add
adc
(bad)
or
jne
jbe
sbb
mov
jmp
or
dec
repz
xor
jmp
call
je
adc
out
inc
xchg
std
and
mov
outs
inc
popa
jne
es
push
sbb
and
push
in
mov
adc
dec
(bad)
adc
jae
push
movs
push
cmp
inc
jmp
pop
scas
add
add
jne
sub
gs
jnp
inc
sub
hlt
adc
cmps
xor
idiv
or
je
inc
test
xor
and
rcr
cmp
jmp
mov
pop
fnstcw
jne
jmp
xchg
mov
es
push
jmp
adc
les
test
test
push
xor
and
nop
nop
in
lea
sbb
and
loopne
in
sbb
in
mov
cli
xchg
sbb
or
repnz
aam
push
loopne
or
push
in
xchg
jle
imul
cmp
inc
mov
and
push
mov
in
pop
and
(bad)
lock
retf
cli
rol
sub
push
sub
xlat
sbb
addr16
cmp
push
and
xchg
and
std
pusha
xchg
jmp
dec
push
out
mov
cli
sub
xor
dec
adc
or
mov
icebp
sub
push
push
push
mov
jmp
jns
jnp
or
ja
imul
push
add
cmps
gs
sub
add
lahf
shr
adc
pushf
or
adc
ret
addr16
pop
sub
and
arpl
push
xor
pop
dec
enter
popa
sbb
jmp
idiv
(bad)
xchg
inc
lahf
pop
mov
lock
je
cwde
scas
jne
retf
mov
add
cmp
mov
dec
jbe
jo
sbb
lea
into
imul
sbb
sub
mov
daa
mov
mov
push
hlt
fdiv
neg
lds
sub
adc
xor
mov
mov
sti
inc
sahf
inc
adc
lahf
sub
or
mov
aad
add
call
push
pop
add
inc
imul
call
mov
int3
push
xchg
mov
imul
and
jmp
jmp
nop
add
psrlw
xchg
mov
push
dec
(bad)
cmp
stos
inc
arpl
test
nop
aam
jmp
cld
mov
loop
fist
sar
shl
int3
or
movs
loopne
push
(bad)
push
add
fiadd
adc
add
clc
div
mov
or
push
mov
mov
jg
(bad)
leave
das
pop
imul
scas
or
retf
xchg
clc
mov
call
(bad)
pop
mov
jno
sbb
or
sahf
xchg
addr16
and
fcom
jge
lea
dec
mov
mov
int
adc
pop
sub
ret
xor
adc
test
jge
test
call
pop
lods
aam
popf
pop
and
call
test
call
stc
push
mov
retf
fs
xor
inc
sbb
inc
mov
test
bound
add
call
pop
or
mov
retf
jle
aas
loope
inc
lea
mov
cmp
adc
xchg
lods
jl
sbb
scas
or
mov
adc
and
fisttp
shl
pop
inc
jp
inc
fidivr
xchg
sbb
adc
vmovaps
or
mov
call
popa
mov
or
jo
mov
or
mov
call
fild
xor
cli
pop
mov
fmul
mov
nop
data16
sbb
enter
jno
daa
or
add
fldcw
jg
mov
out
inc
scas
fsub
mov
nop
(bad)
cmp
pusha
and
push
or
inc
lahf
sar
retf
cld
bound
xchg
(bad)
mov
test
and
popa
or
mov
call
loop
push
test
inc
daa
repnz
(bad)
ficom
enter
sub
fmul
mov
lahf
and
inc
pusha
inc
adc
aam
mov
cmp
or
add
shl
inc
js
mov
or
mov
jmp
and
inc
aaa
outs
adc
lock
adc
add
jecxz
push
cwde
sbb
sahf
xchg
cmp
add
stos
std
dec
(bad)
into
jge
mov
mov
push
sub
or
jmp
retf
jmp
movs
cmp
push
cmp
sahf
mov
sahf
sbb
je
shl
call
aad
add
sub
add
bound
xchg
test
mov
movs
inc
or
add
mov
adc
imul
mov
fidiv
arpl
pushf
dec
inc
mov
fistp
stos
add
xchg
pop
sbb
inc
ret
jle
cmp
(bad)
mov
jb
mov
and
fisttp
or
and
dec
xchg
mov
lods
call
adc
adc
inc
jae
or
dec
xlat
add
stc
pop
sub
movs
addr16
mov
cs
movs
sbb
cmp
adc
inc
hlt
pop
dec
mov
add
aaa
call
fs
and
nop
mov
imul
call
call
dec
jle
dec
retf
pop
dec
jmp
dec
pop
cwde
mov
push
sub
bound
adc
pop
jg
out
lods
mov
mov
xor
or
mov
mov
sbb
inc
or
int3
push
sbb
jmp
test
adc
fprem
sub
ins
int3
inc
ficom
fabs
mov
icebp
add
pusha
pop
repnz
arpl
cmp
loopne
mov
call
std
sbb
popa
sbb
adc
pop
dec
loop
in
inc
div
loop
pop
or
push
xchg
sbb
dec
jge
inc
imul
or
not
or
and
ffree
add
inc
cmp
dec
popa
clc
adc
push
leave
jmp
or
repnz
push
xchg
sub
inc
sbb
or
xchg
push
jno
imul
sub
sub
xor
mov
inc
or
dec
and
xchg
cwde
adc
and
outs
lods
adc
cld
or
cdq
sbb
or
xchg
adc
ins
sub
loope
mov
enter
cmp
inc
mov
pop
push
mov
push
and
jle
lds
inc
mov
mov
and
mov
xchg
jp
and
dec
dec
sbb
aam
pop
popa
cmp
loopne
mov
cmp
mov
xchg
xchg
mov
aaa
xor
sbb
fdiv
ja
pushf
cmp
adc
bound
aaa
mov
pop
iret
sbb
shr
sub
lahf
sbb
int3
call
daa
mov
mov
mov
pop
(bad)
fs
les
dec
pop
pop
inc
icebp
in
into
out
add
out
bound
jle
mov
adc
out
mov
adc
adc
and
push
mov
test
retf
push
sbb
mov
cmp
mov
aas
mov
sbb
mov
call
imul
dec
repnz
cmp
sbb
or
daa
sbb
sbb
ficomp
test
outs
repnz
in
pop
loop
mov
xchg
loopne
sbb
mov
cmp
sub
pushf
mov
xchg
loopne
call
cmp
iret
sbb
xchg
call
xchg
push
sbb
fs
nop
and
ss
pop
adc
pop
enter
adc
inc
inc
or
pop
(bad)
movs
mov
add
ja
cmc
mov
mov
sbb
mov
sbb
andps
inc
call
daa
inc
sbb
ret
adc
mov
pop
or
sbb
out
mov
call
in
and
ins
jo
jns
jns
ret
pop
or
adc
push
ins
popa
or
imul
dec
push
gs
pop
jb
lock
cld
ins
gs
adc
jne
movs
cmove
jb
leave
outs
arpl
js
inc
dec
loope
xor
dec
bound
stc
dec
xlat
cli
cmp
cmp
gs
outs
scas
adc
push
icebp
imul
ja
or
push
iret
clc
mov
and
inc
cmps
call
mov
jne
mov
adc
inc
fs
sub
cmps
adc
add
repnz
aad
adc
fmul
cmp
test
jl
mov
mov
(bad)
pop
and
inc
mov
enter
fst
add
cmp
mov
sbb
dec
pusha
inc
cwde
pop
or
jns
or
add
fistp
cmp
setne
call
push
adc
enter
cmp
sub
pop
dec
jb
hlt
mov
nop
es
lds
sub
adc
inc
test
fisttp
jae
inc
ins
and
jl
xchg
push
sub
inc
inc
jmp
mov
mov
in
mov
(bad)
call
inc
cli
jns
movs
pop
call
and
cmp
movs
push
xor
data16
jmp
jae
xchg
scas
ret
rcl
adc
mov
adc
cs
mov
sub
inc
jbe
pop
test
push
and
enter
test
pop
xor
dec
and
jl
sbb
inc
add
cmp
add
inc
or
xchg
hlt
and
movs
dec
mov
movs
repz
dec
push
out
fwait
ins
in
call
gs
stos
repz
aam
(bad)
sbb
xchg
les
pop
push
mov
adc
hlt
xor
outs
pop
pop
int
push
icebp
int3
adc
or
jnp
je
cmp
push
dec
rol
sbb
push
mov
inc
clc
inc
mov
fsubr
call
sbb
lea
retf
adc
xchg
push
ror
ret
inc
(bad)
pop
scas
sub
aam
leave
int3
cli
je
sub
call
std
adc
cdq
pop
mov
sbb
inc
and
mov
sti
mov
cmp
jg
in
test
mov
movs
add
and
or
dec
cld
outs
icebp
scas
in
and
retf
dec
dec
or
bound
aaa
xchg
sbb
or
out
add
loop
imul
push
jmp
push
lds
pop
loopne
cld
sub
pop
loope
or
cmp
dec
adc
lods
sbb
push
adc
in
retf
or
dec
lods
imul
cwde
adc
jb
pop
je
ins
mov
(bad)
and
jle
ret
icebp
cld
mov
out
push
mov
pop
mov
adc
push
popf
xchg
sub
test
and
mov
lahf
je
pop
or
gs
inc
jno
pop
out
push
cli
ins
adc
dec
xchg
sub
xchg
out
sbb
sbb
dec
(bad)
je
cmp
dec
movs
mov
nop
aas
push
adc
adc
push
adc
adc
adc
xchg
adc
out
cli
sahf
fld
(bad)
pop
or
scas
js
inc
lock
sub
cmp
fdivr
mov
rol
cmp
or
hlt
add
iret
adc
into
add
test
(bad)
mov
aad
cmp
mov
mov
(bad)
test
xchg
test
or
mov
jecxz
nop
push
sbb
test
inc
lock
stos
dec
dec
stos
ja
and
lods
or
lods
xchg
scas
enter
jb
cmp
xchg
and
je
inc
lock
cwde
cmp
cmps
nop
inc
push
ror
sub
dec
push
scas
sahf
jo
mov
push
pushf
retf
push
icebp
sbb
cmp
adc
mov
dec
adc
ins
xchg
daa
jns
test
test
cdq
inc
adc
test
cmp
pop
nop
(bad)
imul
aaa
bound
xchg
mov
icebp
scas
jnp
and
leave
pusha
sahf
gs
dec
ins
div
dec
inc
repnz
inc
inc
imul
test
cld
test
add
cmp
and
add
repz
mov
or
dec
jo
outs
test
enter
das
xchg
dec
adc
pop
xchg
mov
mov
js
test
inc
xchg
fmulp
sub
nop
or
pop
call
inc
mov
jb
xchg
bound
mov
dec
imul
cld
mov
je
outs
stos
pop
cmps
je
sbb
cld
fs
adc
sub
std
push
cmp
mov
(bad)
sbb
push
jl
pop
fs
sub
push
fs
or
fsubr
push
not
mov
cmp
retf
pop
push
mov
add
add
sub
loop
(bad)
mov
sbb
push
xchg
int3
test
adc
jo
pop
inc
ins
cmp
cmps
gs
rcr
dec
es
jae
fs
jo
pop
pusha
adc
das
pushf
add
push
rcl
sahf
cmps
sub
cmp
mov
lods
cmps
les
sub
ret
dec
nop
and
aam
sbb
dec
mov
inc
movs
cld
les
cwde
or
int3
mov
adc
adc
mov
or
push
hlt
jecxz
push
xor
test
and
add
sbb
mov
or
add
and
jge
jo
sub
mov
or
xchg
nop
fmul
outs
xchg
jns
and
les
or
inc
inc
ins
cmp
push
test
lods
adc
je
xor
icebp
adc
xor
adc
or
movs
xor
adc
clc
or
adc
and
mov
xor
enter
hlt
dec
xor
sbb
xchg
outs
xor
adc
xor
and
je
sub
mov
test
mov
adc
adc
dec
shl
(bad)
hlt
clc
iret
je
adc
lds
in
push
lods
test
enter
adc
pop
and
add
xchg
les
stc
iret
in
stc
scas
xor
mov
movs
pop
or
jo
adc
outs
fs
dec
and
fdivr
clc
sbb
icebp
pop
sbb
movs
jae
push
mov
push
cli
je
test
adc
pop
icebp
xor
add
push
push
add
inc
jb
jne
inc
int3
test
pop
xchg
test
and
and
pop
ins
fld
sbb
cdq
cmp
mov
fsubr
xor
cmp
ja
or
rcr
mov
test
pop
mov
pop
imul
xlat
pop
leave
xchg
ja
stc
cmp
cmp
sbb
out
sub
and
leave
pop
mov
shl
push
or
or
iret
or
mov
leave
cmp
sbb
stos
push
add
fdivr
adc
cmp
and
push
add
or
adc
adc
xor
ss
xor
cmp
mov
ja
imul
and
jb
sbb
andps
pop
mov
adc
and
leave
pop
jns
rcr
mov
jae
mov
and
cmp
push
and
inc
push
mov
adc
jecxz
and
sub
jo
call
lea
lods
retf
ja
push
in
jl
inc
xor
sub
jecxz
cmp
jne
dec
hlt
movs
sbb
mov
nop
and
push
fcom
dec
pop
clc
jl
mov
pop
gs
fcmovbe
cmp
dec
(bad)
adc
mov
inc
jmp
cmp
dec
ins
retf
retf
ja
mov
mov
test
push
push
push
inc
xchg
aas
and
arpl
ret
jmp
xchg
pop
mov
cmp
sub
xlat
mov
pop
dec
mov
add
hlt
sub
xchg
call
add
and
xor
xchg
mov
mov
retf
stos
or
aaa
xchg
xor
cmp
ret
xchg
add
setae
mov
daa
push
mov
clc
dec
jmp
xchg
or
shl
in
sub
push
jbe
nop
mov
sub
push
xchg
sbb
vmovhpd
jmp
and
hlt
imul
(bad)
retfw
mov
retf
mov
hlt
mov
movs
sub
inc
cmp
cmc
retf
cmp
es
daa
icebp
jmp
in
ins
xchg
dec
xchg
pop
mov
loop
ds
dec
cmp
jbe
sahf
lods
out
inc
mov
mov
jl
push
adc
push
into
sti
or
retf
add
adc
or
mov
xchg
add
call
or
push
mov
pop
mov
jle
push
sub
mov
call
loop
(bad)
aam
jo
dec
mov
mov
push
call
inc
(bad)
adc
xor
mov
cld
push
xchg
test
dec
ja
stc
std
mov
stc
xchg
cmp
push
dec
pusha
(bad)
sub
jg
dec
dec
mov
dec
sbb
repz
xor
mov
or
and
mov
adc
int
and
(bad)
int
push
xor
push
xor
dec
xor
arpl
ret
inc
sbb
jb
cmp
push
std
and
int
pop
inc
adc
arpl
sbb
in
and
in
push
fs
pushf
push
push
retf
cmp
arpl
hlt
mov
cmp
sub
ficomp
mov
xor
fs
stos
or
inc
push
adc
clc
sar
add
fs
iret
add
cmp
and
inc
movs
mov
mov
push
call
jmp
mov
pop
leave
les
sbb
mov
sub
and
push
jno
mov
hlt
sbb
adc
jmp
jae
xor
dec
mov
and
or
(bad)
cmp
xor
push
iret
push
outs
imul
daa
je
push
cld
sbb
cli
mov
aam
mov
adc
cmp
mov
mov
jne
stos
enter
imul
es
test
mov
adc
ds
or
xchg
fs
dec
dec
call
js
or
push
and
xchg
push
les
std
int
mov
cli
mov
mov
cli
daa
xlat
xchg
or
lahf
pop
iret
xlat
(bad)
arpl
and
push
iret
adc
hlt
sub
push
outs
xchg
sub
fistp
es
add
mov
push
pop
clc
dec
jns
lahf
jp
or
sbb
push
or
jmp
enter
sbb
dec
and
(bad)
and
add
inc
and
add
add
inc
hlt
call
xor
jp
shr
movs
fild
shl
jl
sahf
push
inc
imul
add
test
mov
inc
fst
pop
or
push
(bad)
inc
xor
inc
xchg
pop
mov
test
inc
pop
push
in
and
test
pop
je
(bad)
lock
or
xor
(bad)
(bad)
bound
xchg
jo
pop
sub
(bad)
pop
mov
daa
adc
(bad)
sub
sbb
sahf
mov
add
push
adc
dec
jb
push
xchg
setg
movs
in
push
xchg
out
mov
and
mov
push
test
jmp
mov
dec
and
jle
in
or
dec
or
dec
mov
and
out
and
or
in
dec
pop
mov
sbb
jmp
fs
inc
xor
xchg
ja
(bad)
push
and
repz
call
sub
jne
and
pop
test
inc
dec
in
icebp
dec
mov
aaa
and
or
xor
ss
js
pushf
pop
nop
jo
daa
popf
inc
(bad)
xor
jns
data16
out
lahf
jb
ja
push
pushf
lahf
addr16
(bad)
ret
inc
sbb
dec
xchg
dec
test
scas
je
mov
in
loop
or
pushf
movs
cmp
pusha
or
std
inc
push
push
pop
dec
dec
das
imul
in
dec
and
imul
mov
jno
xchg
in
lahf
and
xchg
(bad)
cdq
or
push
and
les
fcomp
sti
push
std
(bad)
push
test
ins
mov
jg
gs
mov
or
mov
sbb
hlt
aam
push
div
push
in
pop
xchg
inc
dec
sbb
sbb
addr16
cmp
push
imul
dec
or
pop
xor
xor
jl
push
xlat
ins
xor
leave
mov
mov
pop
pop
or
repz
xor
jo
js
imul
mov
adc
inc
dec
mov
sbb
loop
add
movs
mov
jp
dec
cli
retf
cmp
xlat
push
push
lods
and
cmp
cmc
mov
pop
xchg
call
div
mov
ja
mov
xchg
add
bound
cwde
push
inc
in
sbb
je
mov
adc
loopne
pop
jmp
jnp
fisttp
and
xchg
ret
cmp
hlt
adc
ret
popf
mov
xor
add
fdivr
fwait
clc
inc
mov
xor
xchg
pop
cmps
mov
xchg
mov
xchg
shl
(bad)
cwde
dec
sar
inc
mov
xchg
movs
ret
cld
movs
mov
push
jle
cmps
push
xchg
adc
add
sbb
and
mov
daa
nop
cmp
test
movs
inc
movs
enter
shr
jp
adc
xor
xor
adc
jecxz
(bad)
xchg
stos
mov
xchg
je
out
sbb
loop
(bad)
js
cmp
je
inc
dec
jne
sub
pop
push
les
mov
and
out
fs
push
push
sbb
mov
mov
lds
adc
jno
xor
or
mov
xchg
retf
or
ret
adc
xchg
nop
lods
rcl
mov
and
or
stc
xor
push
mov
xor
movntps
gs
xchg
or
iret
leave
ret
mov
pop
sbb
sub
pop
ret
sbb
inc
stc
and
stos
sbb
call
push
sbb
(bad)
in
sub
scas
mov
sub
pop
xchg
push
clc
mov
ins
sbb
div
clc
jno
dec
push
sub
repnz
and
or
clc
inc
sub
sub
les
cmps
in
fwait
adc
push
out
int
and
push
jno
call
or
adc
das
fs
xchg
mov
lods
sub
mov
pop
and
or
dec
or
(bad)
mov
adc
in
cmp
and
adc
(bad)
mov
or
sub
sub
aas
mov
push
jnp
addr16
xor
jmp
cwde
push
fwait
adc
or
retf
or
ror
inc
and
sub
aas
mov
sub
in
gs
xor
enter
mov
sub
cwde
cmp
sub
sbb
enter
test
dec
aaa
pushf
fmul
cs
pop
push
sbb
xchg
test
inc
scas
cmp
pop
mov
repz
mov
and
adc
mov
ret
xor
vpsrlw
and
dec
add
inc
jmp
pop
(bad)
sbb
mov
mov
or
sub
gs
mov
sub
mov
xchg
xor
xchg
cmp
pop
or
aaa
jp
cmovl
pushf
sub
or
inc
jg
sbb
icebp
test
mov
xchg
adc
pop
mov
movs
or
out
es
adc
and
or
adc
popa
adc
or
pop
daa
cmp
sub
iret
mov
add
and
or
jle
lahf
mov
pop
mov
lock
aaa
test
or
mov
sub
call
mov
test
sub
sub
imul
bnd
xchg
cli
xor
lds
adc
xor
push
adc
shl
nop
adc
pop
loop
cmp
inc
les
mov
xor
adc
fcmovu
dec
cs
xchg
sbb
mov
test
ja
xchg
jecxz
push
xchg
shr
adc
nop
xor
jl
jg
test
clc
leave
int3
pushw
and
ror
and
loope
adc
sub
sub
or
fisttp
xchg
test
inc
out
dec
adc
les
xor
ret
or
mov
jbe
pop
adc
push
mov
inc
hlt
dec
push
or
pop
mov
lods
lahf
push
jae
add
adc
cmp
sbb
jl
push
push
xchg
or
outs
loop
daa
test
jnp
adc
sub
xchg
pop
repz
call
xor
mov
(bad)
stc
sub
nop
jmp
mov
movs
test
dec
aaa
dec
dec
repz
fmul
lock
clc
stc
dec
daa
pop
out
inc
ror
or
or
je
jg
aas
pusha
pop
or
(bad)
jmp
sub
inc
adc
imul
cmp
add
sbb
dec
mov
and
or
dec
jmp
repz
jle
fdivp
xchg
bound
clc
fsub
dec
repz
(bad)
push
(bad)
cwde
clc
dec
sub
gs
leave
sbb
adc
dec
mov
push
jmp
outs
add
mov
sbb
adc
adc
inc
mov
(bad)
cdq
pop
xchg
pop
mov
and
pop
bound
dec
sbb
rcl
fs
mov
xlat
in
in
lock
int3
pop
mov
push
lods
and
adc
cwde
(bad)
imul
mov
push
bnd
cmp
pop
jle
xchg
xchg
push
shr
xor
sbb
repnz
pop
stos
adc
bound
push
adc
or
dec
dec
dec
xchg
mov
(bad)
adc
mov
loope
sub
mov
ins
sub
mov
mov
icebp
or
or
ret
mov
in
inc
scas
inc
or
rcl
rcr
push
rcl
jbe
shr
and
aam
lods
inc
ror
mov
sbb
or
test
jg
pushf
sbb
mov
sub
cmp
jne
mov
or
dec
mov
mov
clc
and
mulps
xor
out
cmp
ficomp
or
loop
lea
jae
mov
and
ror
pop
mov
pop
retf
push
sub
es
inc
xor
jo
dec
push
or
xchg
idiv
lahf
pop
sub
or
jle
jae
sub
(bad)
push
test
pop
or
push
dec
or
pop
push
inc
shl
outs
xchg
inc
mov
cs
(bad)
into
cmp
jg
mov
sar
retf
xor
jnp
mov
jb
mov
movs
cmp
adc
dec
stos
stos
or
pop
jne
ins
sub
(bad)
lahf
out
int
or
add
jmp
jl
jo
xchg
shl
pop
mov
push
bound
and
ror
add
adc
xchg
aam
inc
lea
inc
cli
mov
adc
mov
mov
nop
mov
mov
gs
std
fs
lea
jge
(bad)
pop
mov
cmp
sbb
push
mov
jbe
fld
call
push
mov
adc
loopne
add
jle
mov
mov
push
out
fdivr
add
clc
(bad)
(bad)
xchg
sub
mov
pop
mov
lods
ret
dec
or
daa
jne
rcl
push
loopne
and
daa
mov
mov
push
imul
adc
mov
inc
xor
sbb
repnz
sbb
xchg
and
mov
pop
daa
(bad)
and
adc
pop
xchg
loop
jg
adc
pushf
xchg
mov
mov
push
shl
dec
mov
dec
(bad)
rcl
pushf
movs
or
mov
hlt
cmps
pop
loop
xor
das
cmp
enter
adc
sbb
dec
loop
(bad)
out
retf
inc
jnp
push
call
xor
fs
repz
or
and
jne
jg
aas
xlat
shl
push
enter
mov
das
or
fwait
rcl
in
aaa
inc
mov
fist
outs
dec
jmp
add
das
je
or
in
jns
or
bound
mov
jmp
xlat
lea
loope
pop
imul
lea
mov
fmul
dec
mov
mov
push
js
mov
mov
dec
and
and
ret
jmp
stc
xchg
in
sub
jae
pop
stos
in
int3
add
dec
test
mov
add
mov
les
dec
sti
fwait
ins
dec
aaa
push
sar
xor
xchg
in
lahf
jns
movntps
les
inc
ffreep
movs
and
pop
lock
fdiv
fdivr
mov
mov
inc
lahf
shrd
mov
adc
push
loop
or
pop
out
and
sub
in
or
sbb
push
cmps
test
das
xchg
sub
sub
push
popf
dec
mov
xchg
loope
adc
inc
xlat
enter
or
test
jb
test
xchg
cmp
jo
pop
cmps
cmp
mov
add
cmp
in
mov
dec
adc
xchg
fcomp
std
test
mov
sbb
jae
mov
cwde
lea
push
seto
retf
rol
jmp
mov
sub
mov
push
cmp
jb
std
rcl
dec
retf
jb
add
fstp
nop
retf
or
cld
rep
cmc
in
add
pop
jnp
xchg
call
lds
mov
out
push
xchg
adc
aam
dec
fdiv
and
lods
lock
mov
push
sub
(bad)
(bad)
dec
aad
inc
pop
jle
retf
pop
dec
inc
xor
les
test
push
idiv
add
je
add
add
(bad)
cli
ds
call
test
and
push
data16
sbb
push
je
or
jmp
retf
nop
push
xchg
xchg
jmp
adc
and
add
repnz
mov
pop
dec
mov
mov
or
mov
xchg
nop
loop
sbb
jmp
in
mov
or
mov
std
mov
xchg
ja
push
xchg
ret
dec
add
test
mul
push
mov
arpl
icebp
std
sub
sub
and
sub
cdq
cmp
das
xor
pop
xor
adc
ss
lds
cmp
call
push
push
ds
adc
xchg
mov
mov
jno
lock
stos
clc
fimul
lock
lea
inc
jne
jb
neg
sbb
pop
jns
xchg
pop
fldenv
or
aam
call
repnz
sbb
fwait
fwait
jl
push
(bad)
ret
int
dec
hlt
call
test
scas
shl
push
call
icebp
cmp
mov
push
add
sub
jae
adc
clc
mov
jp
cld
xor
inc
and
xchg
jl
(bad)
call
push
push
test
xchg
or
loopne
div
inc
dec
popa
out
cwde
inc
sub
and
or
and
adc
sbb
int3
retf
enter
icebp
jo
sub
or
les
fstp
jae
sub
retf
test
add
adc
pop
and
inc
xchg
push
jmp
sbb
push
jne
xor
movs
ins
xor
pop
sbb
retf
or
arpl
or
and
adc
nop
mov
mov
sbb
jns
or
popa
std
std
adc
dec
push
inc
and
mov
or
dec
cwde
icebp
mov
push
pop
pop
sti
xlat
push
jne
call
inc
movs
dec
data16
or
pop
int3
popa
mov
mov
jle
test
lock
mov
mov
cli
adc
jmp
jne
or
pop
(bad)
daa
xor
pop
xor
das
in
sub
dec
cmp
ret
xor
mov
push
mov
ror
pop
and
dec
scas
inc
adc
and
dec
enter
mov
push
dec
mov
fcmovnb
push
add
das
mov
cld
dec
sbb
shl
les
push
movs
jmp
inc
jmp
dec
into
int
inc
cmp
sbb
movs
push
in
push
jmp
pop
mov
enter
and
sub
ins
jmp
and
mov
cdq
xor
pop
lods
imul
pop
and
movs
adc
lods
or
push
mov
and
mov
add
pusha
jb
and
aaa
hlt
adc
(bad)
es
and
mov
cmp
fld
xchg
pop
sub
movs
xor
cli
xor
test
pop
ret
jnp
mov
fsubr
push
and
and
push
or
fldcw
nop
dec
fidiv
sub
pop
add
xchg
ret
dec
inc
adc
add
adc
pop
pop
cli
daa
sar
or
mov
jge
sub
dec
dec
inc
and
mov
mov
and
scas
(bad)
cld
sub
mov
xlat
push
loopne
lea
dec
sahf
int3
sti
xchg
xor
or
repz
or
mov
outs
sar
push
pop
and
scas
sub
xor
cmp
pop
xlat
icebp
shl
es
sbb
push
sub
popa
call
pop
mov
and
je
pusha
je
sub
aam
and
pop
cli
inc
and
or
inc
cmc
sti
inc
fst
nop
jmp
es
adc
and
fdiv
or
cmp
sbb
mov
mov
es
or
js
les
fstp
jmp
and
jl
adc
enter
or
jbe
mov
loopne
cmp
push
mov
mov
hlt
push
sub
adc
ins
imul
inc
inc
mov
mov
push
ret
inc
xor
sub
test
rcl
push
stos
mov
jo
jae
imul
sbb
fimul
call
and
adc
cmps
mov
sub
push
sub
adc
sbb
(bad)
xlat
jmp
sub
pop
test
adc
jmp
lock
mov
pop
inc
sub
sbb
dec
std
movs
sub
pop
mul
xchg
sub
imul
and
movs
imul
xchg
sub
pop
(bad)
jns
movs
mov
(bad)
aad
cwde
sub
pop
push
jmp
icebp
xor
adc
push
lea
clc
(bad)
fcom
and
or
and
les
arpl
rcl
lahf
adc
cmp
popf
xor
call
adc
rcl
xchg
rcl
or
(bad)
jge
lahf
pusha
dec
push
mov
sbb
lods
(bad)
(bad)
and
mov
loopne
mov
jnp
or
or
sbb
xor
call
ret
sbb
or
inc
add
bound
movs
call
stc
les
or
shr
mov
mov
aas
inc
les
jnp
in
push
inc
jmp
or
cmp
cmp
ds
pop
je
jl
dec
and
inc
int
jp
sti
push
lea
push
xchg
in
xchg
push
aam
sbb
aam
sub
jmp
jne
mov
ss
jmp
or
ins
or
push
test
std
xor
cmps
je
sar
in
ds
ins
or
cld
mov
out
mov
int
xor
jne
sub
push
xchg
jbe
jmp
cs
popf
mov
jl
imul
push
loope
mov
pusha
pop
jle
mov
add
jae
and
jle
mov
cli
dec
jns
add
jmp
adc
adc
ret
ret
pop
dec
sub
rol
or
leave
ret
inc
mov
cmp
jg
ja
inc
or
inc
sub
fnstcw
in
pop
add
xchg
adc
in
mov
inc
out
movs
cmp
xor
dec
or
mov
and
hlt
jmp
pop
sbb
mov
stc
and
(bad)
neg
adc
inc
in
push
inc
inc
call
mov
nop
lea
ins
adc
jp
into
ins
dec
mov
lds
adc
push
sbb
pusha
sub
nop
sub
adc
jmp
std
jb
sbb
imul
jmp
ror
mov
push
shl
cmp
cli
mov
jmp
mov
jmp
cld
cli
dec
push
adc
pop
into
stc
push
loope
and
xor
xchg
inc
adc
inc
or
add
adc
pop
test
add
clc
or
add
mov
jl
pop
xchg
shl
push
pop
outs
test
stc
dec
jge
push
shl
adc
push
push
or
or
daa
fimul
add
mov
dec
test
ds
jne
inc
xchg
ja
pop
or
fnstenv
mov
aas
dec
nop
dec
mov
and
(bad)
push
rcr
out
es
lock
test
pop
mov
cmp
mov
into
rol
clc
or
add
pop
adc
adc
das
xor
or
xor
dec
rcl
leave
and
xor
mov
adc
sub
or
jmp
rcl
dec
dec
es
lahf
inc
sub
sbb
mov
mov
mov
and
dec
je
adc
cmc
cmp
or
add
in
inc
cmps
mov
mov
shr
shl
mov
jbe
mov
mov
push
iret
sbb
test
jge
cmps
push
add
(bad)
lock
mov
mov
adc
inc
mov
add
loopne
add
jle
jg
sub
jle
add
or
jne
lea
adc
data16
movs
loopne
mov
test
sub
push
test
das
mov
pop
or
add
mov
cmp
les
js
test
cmp
dec
inc
inc
or
pushf
sbb
xor
ins
mov
dec
xor
test
adc
xor
adc
cmp
aam
inc
cmps
push
mov
aas
pop
or
pushf
cmp
jns
movs
popf
sbb
xor
sub
jle
cmp
sbb
retf
stos
lds
mov
or
push
je
cmp
enter
push
or
cs
nop
xor
sete
mov
jb
imul
and
les
fwait
hlt
mov
adc
nop
or
adc
dec
inc
pop
cmc
mov
out
or
adc
sub
adc
inc
mov
xchg
jle
add
inc
mov
mov
adc
and
ret
push
xchg
push
lds
push
pop
pop
mov
inc
xor
fs
outs
cli
cmp
dec
adc
cmp
or
and
inc
shl
push
dec
jp
movs
or
aas
add
mov
push
pop
call
xchg
and
dec
rcl
pop
mov
test
add
mov
je
xlat
jle
or
jne
test
mov
and
push
stos
popf
lock
inc
(bad)
cli
pop
add
add
adc
cmp
and
push
pop
inc
cmp
repnz
mov
and
inc
popf
dec
or
inc
add
sahf
and
jb
push
mov
sub
inc
add
xor
mov
xchg
push
imul
std
mov
push
and
fbld
dec
cdq
adc
sbb
mov
adc
cmps
push
or
and
test
cli
mov
inc
lea
mov
test
jne
adc
fild
or
push
call
cld
add
push
test
push
and
dec
loopne
jne
mov
fist
fldcw
or
adc
jmp
stc
inc
stc
sub
test
inc
dec
fsub
in
jbe
xor
cmp
or
mov
jge
pcmpeqd
fsubr
aam
lea
push
inc
mov
mov
dec
pushf
nop
lods
jae
xor
enter
sbb
push
ins
call
jbe
stc
call
movs
mov
mov
pushf
mov
xchg
test
mov
sub
inc
xchg
add
or
add
dec
retf
ret
test
shl
mov
jne
sub
call
mov
stos
cli
mov
add
mov
pop
inc
(bad)
mov
xchg
lea
add
pop
xchg
jbe
sbb
ins
xchg
(bad)
push
scas
sub
add
nop
push
push
mov
dec
dec
test
test
movs
adc
xor
retf
jae
lods
imul
mov
sub
(bad)
push
xor
fisubr
and
pusha
int3
push
int3
push
mov
xchg
fmul
rcl
or
jg
(bad)
nop
xor
push
jg
dec
dec
in
push
push
mov
mov
movs
sub
push
enter
add
repz
push
aam
out
inc
aaa
call
mov
movs
aam
add
or
mov
inc
fcom
gs
and
ret
inc
pusha
add
cli
xchg
scas
rcl
lea
ret
sub
nop
mov
jae
jmp
or
(bad)
cmp
jbe
inc
dec
xor
sub
xchg
mov
mov
js
xchg
dec
xchg
or
pop
inc
xor
lods
sub
loopne
int3
mov
cmp
adc
sbb
das
sbb
mov
ja
sbb
adc
dec
or
or
movs
and
add
mov
mov
mov
pusha
enter
sub
add
shr
jmp
xchg
(bad)
pop
(bad)
int3
or
or
mov
rol
std
fmul
pop
mov
nop
sbb
test
pop
clc
clc
in
dec
aad
add
add
ja
add
inc
(bad)
shr
retf
pop
pop
and
jae
xor
sbb
jb
or
pusha
cld
les
fs
sub
sub
inc
sub
mov
and
pusha
xchg
or
stos
movs
in
add
mov
and
sti
dec
mov
push
call
in
add
fist
fsubr
or
xor
sti
aaa
shr
and
xchg
mov
call
dec
test
jmp
(bad)
enter
and
imul
dec
and
jne
ficomp
outs
inc
imul
or
xor
sub
dec
scas
lds
mov
xchg
add
call
xchg
adc
adc
(bad)
sub
mov
mov
(bad)
push
mov
jecxz
fdivr
std
jnp
xchg
sub
xchg
jmp
es
out
xor
call
sahf
xor
jo
mov
pusha
in
sub
or
cmc
sub
push
jne
add
or
stc
js
lock
jl
push
adc
xchg
movs
leave
mov
js
adc
mov
push
(bad)
and
adc
adc
out
(bad)
(bad)
fs
add
int3
nop
mov
imul
or
sub
xchg
mov
icebp
xor
lock
and
leave
pop
js
mov
sbb
sub
imul
xchg
add
mov
mov
sti
ds
cmp
cmp
das
jne
and
in
adc
cli
inc
lds
cmp
test
fistp
inc
pop
arpl
(bad)
pop
ror
jg
sbb
jmp
adc
out
pop
mov
mov
sub
pop
nop
pop
or
jl
loopne
test
sbb
xchg
test
addr16
enter
and
inc
and
mov
add
add
cmp
sbb
inc
lea
cdq
sub
call
and
sub
pop
popa
std
add
add
jl
xchg
mov
push
outs
dec
and
sbb
adc
ds
outs
mov
adc
movs
mov
out
and
or
or
xor
cli
adc
cld
mov
and
out
and
sub
cld
xor
mov
lods
adc
imul
pop
sub
or
xor
push
inc
(bad)
sub
(bad)
pop
lds
inc
sub
inc
mov
pop
inc
push
xor
imul
mov
push
out
aad
push
inc
xchg
add
jmp
ins
inc
test
int3
mov
dec
xchg
xchg
pop
inc
xor
xchg
aad
xor
sub
adc
mov
cwde
cdq
dec
in
adc
repnz
sbb
xchg
and
ror
push
mov
je
or
mov
mov
ins
cmc
adc
dec
adc
dec
ret
dec
imul
or
adc
loop
mov
cmp
div
push
bound
adc
les
movs
pop
lea
mov
pop
in
nop
pop
push
(bad)
pop
xor
mov
dec
mov
cmp
add
adc
cmp
xchg
dec
push
loopne
sub
lahf
fwait
mov
dec
push
jne
repz
add
pop
jne
mov
lds
movq
mov
or
pushf
mov
das
xchg
sbb
dec
xor
in
dec
xchg
pop
pop
xor
gs
push
cs
gs
and
push
dec
add
cdq
imul
daa
mov
pop
dec
inc
adc
and
xchg
repnz
adc
push
and
shr
push
sahf
cli
sub
cmp
aad
movs
sub
outs
dec
dec
or
xchg
or
xor
sub
imul
sar
dec
aam
xor
jmp
outs
cmp
lea
dec
mov
mov
inc
xor
sbb
or
and
and
sub
shl
fst
call
inc
fcmovb
or
mov
add
dec
add
push
add
push
add
push
or
mov
push
add
mov
test
es
mov
sub
and
test
leave
scas
loope
pop
retf
adc
das
adc
inc
and
xor
movs
push
mov
xchg
adc
adc
nop
dec
sbb
ret
or
mov
xor
adc
mov
sub
cmps
cld
loop
cdq
hlt
es
into
dec
rcl
jmp
dec
dec
dec
and
shr
ins
cmp
outs
mov
test
or
outs
xor
mov
aam
mov
lea
mov
mov
call
xor
movs
(bad)
gs
or
sbb
jge
call
jecxz
in
bswap
popa
pop
inc
inc
cld
dec
into
xchg
movs
and
dec
adc
enter
jmp
fisubr
inc
sbb
mov
and
pop
push
es
adc
imul
dec
in
leave
and
or
std
cld
fisttp
int3
jmp
push
fcomp
mov
cmp
pop
mov
xchg
mov
jne
cdq
sbb
pop
es
push
gs
cmps
push
xchg
and
dec
(bad)
(bad)
call
jmp
inc
push
cmp
je
jne
test
xchg
and
daa
outs
push
data16
lods
jno
or
add
cld
aad
lods
cmp
test
sbb
jmp
push
jne
dec
xchg
sub
dec
mov
push
retf
jg
sub
adc
mov
and
les
and
or
jne
pop
sub
aas
pushf
repz
sbb
je
dec
jbe
cmp
cwde
dec
cmp
sar
and
and
mov
cmp
inc
dec
push
cmp
mov
sub
mov
push
dec
or
cmp
pop
test
mov
inc
push
sub
stos
es
retf
adc
mov
sbb
dec
sti
pop
aaa
imul
push
jbe
sub
pop
ror
push
fcmovnu
dec
shl
scas
inc
sbb
sbb
push
call
pop
test
xor
adc
and
xchg
pop
dec
stc
out
ret
jne
sub
dec
test
retf
loope
cmp
xchg
dec
xor
ror
cld
pusha
inc
sbb
or
mov
mov
imul
xor
stc
sbb
pop
shr
mul
push
jg
aas
jbe
mov
xchg
dec
add
push
push
mov
dec
pop
xor
nop
sbb
(bad)
mov
adc
push
call
mov
or
jae
test
sbb
adc
and
cmc
mov
mov
pop
mov
nop
push
popf
gs
or
leave
or
pop
and
pop
jmp
add
mov
mov
hlt
or
push
out
test
test
imul
ja
sbb
jle
jbe
or
jb
call
pushf
mov
xchg
mov
adc
mov
xor
out
sahf
test
mov
xor
xchg
das
jp
push
mov
icebp
dec
mov
and
adc
mov
arpl
or
int
pop
and
pop
mov
rcl
imul
(bad)
enter
enter
inc
dec
adc
cmp
in
sub
sahf
arpl
retf
mov
gs
jb
(bad)
push
fldcw
inc
xchg
aam
jmp
adc
jne
mov
arpl
mov
push
lods
pop
cmp
icebp
push
push
and
xchg
sbb
jmp
leave
push
dec
shr
(bad)
icebp
push
adc
pop
push
and
enter
adc
sar
loop
dec
movs
push
in
mov
cmp
loop
push
div
xchg
mov
dec
or
inc
inc
cmp
retf
aaa
sub
daa
mov
cli
cld
add
retf
mov
pop
jg
cmp
sub
movlps
jae
pusha
mov
out
test
xchg
aaa
push
(bad)
sbb
cmp
fild
out
jmp
in
cmc
das
retf
je
lods
push
test
jmp
add
out
pop
inc
and
adc
loop
xchg
cld
cmp
in
outs
repz
test
mov
dec
push
inc
mov
ficom
and
push
cli
mov
jl
sbb
sub
adc
sahf
jle
cmp
jnp
(bad)
jmp
repnz
inc
dec
sar
jmp
pushf
cmc
int
and
adc
adc
xchg
adc
inc
pop
cli
and
pop
add
lea
jo
jnp
fstp
mov
ret
sub
sbb
test
cmp
inc
inc
add
push
icebp
inc
das
jmp
dec
leave
popf
gs
xor
lahf
stos
inc
pop
leave
xchg
push
mov
lods
pop
add
lahf
dec
je
cmps
pop
or
jbe
pop
je
pop
repnz
and
(bad)
mov
push
xchg
bound
cmps
and
stos
mov
ds
mov
xor
cmp
and
sub
pop
jbe
or
and
sbb
das
pop
sbb
mov
mov
jns
xchg
repz
daa
xor
push
sbb
pop
sbb
mov
out
repnz
xor
ret
das
retf
repz
adc
jmp
pop
sub
hlt
or
pop
test
sub
leave
mov
mov
sbb
hlt
imul
push
mov
je
out
and
out
cmp
push
inc
call
mov
(bad)
imul
sub
mov
pop
lahf
sbb
mov
mov
adc
jo
fmul
mov
adc
dec
adc
push
adc
and
xchg
retf
enter
push
dec
dec
xor
fs
int3
jmp
daa
sbb
and
movs
mov
sub
sub
and
pop
mov
cmc
or
inc
push
nop
les
ret
pop
add
pop
add
pop
add
pop
sbb
pusha
adc
popa
adc
add
sub
add
jb
in
or
repnz
jb
sbb
dec
test
fwait
lds
ror
add
arpl
mov
and
jge
ret
push
fxch
movs
push
jle
daa
fwait
and
mov
test
dec
adc
movzx
popf
hlt
jb
mov
jae
sub
test
inc
mov
xor
adc
aaa
sbb
pop
add
sub
pop
xor
sub
or
int3
xchg
(bad)
jle
mov
lds
or
mov
sbb
sub
mov
ret
sbb
movs
mov
lahf
in
ss
pop
fdivr
and
test
cdq
or
outs
pop
fs
bound
enter
and
xchg
jmp
data16
loop
sbb
jmp
sbb
adc
stos
push
icebp
add
mov
ins
(bad)
fist
sub
sbb
pop
pop
jne
xor
mov
add
xchg
push
or
js
hlt
jb
adc
ret
outs
sbb
cmovns
adc
inc
and
push
push
ins
pop
aas
lds
push
and
cmp
or
xor
xchg
jecxz
add
mov
push
xor
out
sbb
and
jecxz
pop
shr
cmc
in
push
int3
jp
lahf
aam
mov
xor
push
add
mov
movs
dec
and
mov
inc
adc
mov
pop
jmp
add
mov
movs
jne
ins
(bad)
cs
adc
dec
inc
movs
inc
fild
push
fild
loop
dec
popa
jne
movs
ins
and
clc
loope
movs
bnd
push
inc
or
jns
clc
jg
dec
sub
cld
xor
test
adc
aam
or
loopne
adc
add
cs
fadd
jb
cli
aam
jp
mov
das
jmp
gs
bound
adc
lods
jle
loope
adc
adc
retf
sbb
sub
dec
xor
fnstsw
inc
repz
jmp
lods
xchg
stos
pop
push
inc
test
shl
popa
jb
ret
xor
xchg
jno
xchg
sub
mov
sub
xchg
xor
retf
mov
sub
fidivr
sahf
add
xchg
jne
(bad)
lods
mov
sbb
fdivr
and
test
fild
daa
mov
pop
inc
mov
mov
jl
or
std
push
outs
hlt
leave
mov
mov
dec
jnp
outs
push
mov
inc
pop
int3
mov
mov
xchg
rol
cmp
jne
sahf
in
dec
sbb
or
push
mov
xor
shr
mov
adc
add
aas
mov
jno
cmp
movs
mov
push
movs
dec
test
hlt
call
add
push
fsub
mov
xor
scas
xchg
push
les
arpl
mov
add
sar
je
fidiv
lods
mov
xchg
das
cld
mov
test
in
test
sub
sbb
es
ret
(bad)
shr
jb
movs
jp
test
dec
call
mov
xchg
jecxz
test
cmp
ja
xor
jmp
sub
adc
in
aaa
dec
adc
dec
repnz
les
sti
jne
cdq
xchg
imul
(bad)
mov
xor
add
mov
ja
cmp
mov
and
push
call
inc
mov
(bad)
jmp
pop
or
bound
mov
dec
push
jne
push
xchg
inc
test
dec
dec
inc
adc
lods
(bad)
and
aad
ror
cmp
inc
movs
loopne
add
jns
fisttp
xor
xchg
xchg
adc
inc
sub
leave
pop
sbb
movs
shr
daa
adc
imul
and
cs
add
ss
in
add
or
imul
(bad)
pop
jbe
sbb
adc
jmp
and
ins
sbb
stc
mov
test
clc
pushf
(bad)
xor
lahf
jecxz
loope
and
enter
jecxz
callw
xchg
dec
xchg
or
(bad)
call
add
(bad)
int
mov
hlt
in
clc
xor
sub
int3
retf
fwait
pop
push
call
out
fmul
mov
jecxz
mov
jmp
ds
push
add
push
sub
mov
je
gs
jbe
dec
out
sub
and
sub
dec
nop
cmpxchg
bswap
int3
adc
pop
or
mov
jae
popa
fs
push
popf
xor
aaa
ins
or
jb
scas
jle
les
mov
fsubr
cwde
ret
ret
jb
or
aad
cwde
jp
jno
xor
mov
enter
jmp
mov
sub
(bad)
xchg
repnz
(bad)
ror
jns
enter
and
jo
shl
dec
jp
or
shr
jmp
sub
and
rcl
cmp
lods
test
daa
dec
int3
sahf
mov
dec
sub
add
cmc
jmp
sbb
or
jmp
add
fcomp
in
pop
lahf
dec
or
adc
mov
sbb
iret
outs
test
sub
shl
lds
xchg
push
mov
mov
fcomp
jmp
push
pop
mov
xchg
jg
mov
xchg
shr
adc
je
mov
aam
mov
push
and
test
or
jge
rcl
call
cld
push
nop
aam
jbe
int3
push
lods
and
jle
shl
push
js
sbb
inc
push
mov
(bad)
pop
cmp
dec
test
xchg
mov
pop
clc
mov
xlat
pop
xlat
add
test
imul
mov
ja
adc
mov
add
cmp
popf
mov
jg
dec
out
aam
mov
stc
adc
scas
sbb
(bad)
retf
sub
movs
les
mov
or
mov
and
and
inc
cmp
out
shl
mov
push
adc
ja
outs
push
adc
mov
mov
sub
call
pop
sbb
sahf
dec
daa
mov
mov
ja
dec
add
sar
inc
pop
int3
push
imul
xchg
das
mov
or
ins
push
dec
add
mov
in
mov
mov
stos
in
xchg
fst
xor
and
(bad)
sub
les
je
push
mov
dec
je
(bad)
call
xchg
call
and
inc
push
xor
xchg
ins
inc
inc
cmp
push
inc
loopne
xor
loopne
sub
adc
rcl
inc
dec
les
ffreep
mov
or
loop
ins
adc
cmp
retf
imul
mov
or
cmp
xchg
jl
or
adc
mov
popa
or
fcom
mov
inc
mov
ret
out
xor
loopne
les
cmps
call
push
mov
dec
call
out
fcomp
aam
push
(bad)
jecxz
js
imul
jbe
aam
(bad)
mov
and
xchg
hlt
scas
inc
inc
je
in
ss
xor
xchg
xlat
lea
xchg
dec
inc
and
test
mov
(bad)
and
in
sti
mov
daa
nop
hlt
adc
vpcompressq
loop
xchg
mov
sub
xor
loope
and
pop
call
cmps
push
inc
jmp
and
xchg
pop
mov
mov
call
xchg
push
jl
and
iret
adc
pop
inc
sbb
imul
xchg
in
sahf
loope
cmp
retf
sub
je
adc
and
lock
adc
add
push
push
stc
and
mov
and
fisub
and
or
pop
or
mov
mov
sub
and
(bad)
mov
fdiv
inc
lods
pusha
int3
pop
adc
shr
sbb
lods
cmp
push
cmp
add
mov
mov
sub
xor
jmp
test
jne
cmps
mov
jne
adc
mov
cld
dec
sbb
mov
shl
push
add
and
sti
mov
std
rcr
std
out
mov
bound
mov
in
test
inc
mov
sbb
addr16
loopne
and
inc
push
push
daa
loop
push
out
out
cwde
mov
jle
mov
jg
rcr
dec
pushf
jne
daa
xor
and
sbb
push
add
aam
sbb
dec
outs
scas
pop
sub
jmp
jmp
adc
jmp
pop
sar
cli
or
ret
(bad)
int3
mov
xchg
test
enter
mov
pop
js
inc
lds
jno
les
xchg
loope
or
mov
jge
lds
aaa
fadd
stc
inc
sti
enter
jb
push
jno
inc
mov
xor
pop
mov
in
sbb
add
mov
outs
mov
xchg
les
out
(bad)
sbb
jb
out
adc
daa
fild
aam
jmp
mov
or
mov
movs
jb
test
jge
push
xchg
add
mov
outs
mov
mov
xchg
mov
mov
adc
das
and
dec
push
add
mov
push
sbb
inc
pushf
push
dec
mov
add
imul
mov
retf
jno
cmp
inc
or
clc
pop
sbb
inc
pop
inc
or
mov
dec
mov
mov
xlat
pop
xchg
xchg
test
dec
cmp
mov
push
xchg
jl
or
test
mov
adc
adc
xchg
mov
sub
mov
nop
je
inc
jl
push
fs
jo
cmp
inc
xchg
and
mov
jno
inc
sub
sbb
into
adc
jecxz
dec
and
loopne
cmc
test
adc
out
fs
dec
jge
shl
adc
test
scas
and
and
mov
xchg
and
enter
sbb
push
sub
cmp
pop
inc
or
or
sbb
dec
out
sub
inc
push
and
nop
push
mov
or
and
gs
dec
xor
xlat
int
dec
or
xchg
xor
mov
jmp
xchg
adc
movs
xor
inc
or
retf
xchg
test
and
sub
and
push
(bad)
cdq
fdivr
cmp
and
push
add
mov
mov
mov
lock
add
je
test
mov
shr
and
outs
gs
dec
xor
les
sub
pop
test
lea
sub
mov
adc
cs
push
and
inc
jbe
outs
js
mov
push
sbb
adc
sbb
add
or
cmc
xor
xchg
push
pop
enter
mov
xchg
jnp
mov
mov
jo
jbe
mov
ds
jb
and
je
sub
jl
and
inc
inc
int3
cmp
jns
out
loopne
gs
cli
ins
sti
jp
jl
imul
cmp
push
fnstenvw
imul
sbb
arpl
adc
test
jp
push
push
aaa
xor
cmp
push
jo
das
mov
xor
popa
ins
fcomip
jp
arpl
push
cmp
addr16
das
out
ret
gs
lahf
push
arpl
arpl
cs
call
test
outs
adc
ja
sub
fnstcw
outs
test
xchg
outs
push
jne
stc
inc
sub
jne
xor
(bad)
mov
ficom
and
pop
test
call
cmps
push
xor
dec
cmps
dec
push
jmp
dec
imul
adc
mov
and
jecxz
and
dec
cmovne
inc
out
push
pop
sbb
pop
push
std
cmp
inc
mov
jl
or
arpl
sbb
iret
data16
push
in
outs
iret
xor
faddp
inc
jne
rcr
mov
jg
outs
lahf
(bad)
pop
push
jmp
out
jbe
cmp
adc
cli
dec
mov
or
cwde
dec
xlat
jmp
leave
mov
dec
jg
pop
push
dec
dec
retf
push
jge
mov
or
adc
popa
popa
aad
cmps
or
push
jp
adc
jae
add
add
cmp
bnd
fst
mov
or
mov
cmps
pusha
inc
pusha
inc
aad
jne
fadd
and
xor
ret
inc
div
and
and
ins
fisubr
enter
inc
outs
sbb
pop
xchg
push
fwait
inc
sub
and
jle
ins
jbe
mov
test
mov
imul
or
and
mov
outs
and
and
stos
adc
xchg
push
or
adc
push
(bad)
mov
fild
ficom
mov
popa
outs
in
mov
pop
imul
in
cmp
aas
jne
jb
push
cmp
je
loope
and
add
xor
mov
xlat
jmp
sbb
or
enter
mov
fcomp
fxch
(bad)
(bad)
sbb
loope
or
in
add
or
fs
mov
or
in
adc
adc
xor
add
in
xor
add
xor
ss
cmp
inc
add
inc
daa
retf
or
aad
xor
and
push
test
sbb
loope
imul
adc
movs
or
in
cmps
mov
adc
add
sub
xor
movs
push
mov
or
sbb
jecxz
sbb
and
pop
dec
or
or
xchg
sbb
and
mov
pop
call
inc
pop
pusha
mov
jo
js
adc
mov
and
dec
rcl
loopne
call
pop
adc
or
mov
adc
and
int3
and
add
gs
cmp
inc
and
addr16
bound
mov
std
sbb
and
addr16
xor
sbb
inc
popa
adc
pusha
rcr
inc
and
sbb
adc
add
call
fmul
or
xchg
and
xor
inc
push
mov
js
mov
xchg
test
mov
call
jmp
add
or
adc
popf
xchg
cld
or
or
and
inc
fs
bnd
and
or
scas
pop
je
stc
movq
mov
ja
adc
fldcw
push
jb
push
fcom
push
in
jo
cmc
imul
div
push
(bad)
imul
push
jns
iret
fs
cmp
outs
add
xor
fbld
push
jge
adc
imul
es
addr16
sub
fs
cmps
mov
add
and
inc
or
mov
adc
pop
sub
sbb
sub
xor
push
dec
arpl
mov
add
jae
mov
add
add
inc
add
add
ror
call
clc
retf
in
dec
and
popa
or
add
mov
push
and
dec
or
adc
sbb
mov
pusha
mov
sub
push
xchg
les
push
cmp
sub
mov
add
cmp
jbe
call
adc
inc
jns
dec
ins
xlat
fistp
aas
dec
push
dec
or
ds
cwde
push
fwait
and
aaa
fist
ss
inc
and
push
inc
aam
mov
push
and
jb
cmp
sbb
mov
daa
cmp
cmpxchg
bound
xchg
ret
jo
adc
jae
ins
cmc
sbb
or
popa
icebp
jns
adc
pop
inc
pop
ins
push
and
mov
bound
outs
ins
rcl
mov
xchg
lahf
mov
test
test
sub
push
inc
push
(bad)
lock
call
aas
and
dec
jmp
in
and
pop
enter
sub
mov
enter
pop
cmc
lock
mov
adc
movs
ds
pop
push
sub
lea
and
and
adc
call
xchg
je
loopne
pop
js
sbb
push
pusha
loop
lock
cwde
int3
or
in
mov
or
cmp
add
adc
pop
clc
jns
mov
addr16
mov
push
or
xchg
inc
pushf
xor
and
inc
jo
and
inc
push
in
test
retf
rcr
test
cdq
test
pop
mov
fcom
daa
ins
lock
inc
inc
cdq
inc
mov
adc
xchg
dec
xor
inc
sbb
sbb
pop
push
sbb
and
adc
xor
adc
sub
xchg
test
call
pop
pusha
daa
cwde
or
pop
sahf
xor
inc
outs
js
xchg
xor
push
shr
dec
and
push
sub
sub
enter
inc
mov
