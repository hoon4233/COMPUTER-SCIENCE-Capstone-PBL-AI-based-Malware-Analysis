xor
add
add
add
add
add
add
lea
add
add
add
add
push
(bad)
mov
add
jb
or
iret
sti
adc
push
call
add
push
add
adc
add
add
sub
add
inc
sub
sub
jo
adc
call
add
add
or
(bad)
gs
call
add
add
or
jbe
add
push
call
add
push
add
sub
add
or
add
add
inc
sub
sub
aas
adc
call
add
add
or
das
fiadd
dec
adc
call
add
add
xor
add
add
add
add
adc
or
cmps
pop
addr16
call
add
push
and
push
add
cmp
add
add
add
or
cmp
add
add
add
push
add
dec
add
add
add
(bad)
(bad)
push
add
add
add
add
add
add
add
add
add
jge
add
cmp
add
add
and
add
add
push
add
sub
sbb
add
cmp
adc
add
push
add
add
lods
(bad)
(bad)
push
add
or
jae
add
or
and
add
add
push
add
pop
cmp
sbb
add
add
add
push
add
push
sub
xchg
(bad)
(bad)
jmp
and
add
dec
add
cmp
(bad)
inc
sub
add
adc
add
and
add
add
add
sub
sub
add
adc
call
add
add
sbb
add
or
add
add
push
sub
add
adc
add
and
add
add
add
sub
sub
push
call
add
add
sbb
add
or
add
add
push
sub
add
adc
add
and
add
add
add
sub
sub
push
adc
call
add
add
sbb
add
or
add
add
push
sub
add
adc
add
and
add
add
or
repz
arpl
push
call
add
add
sbb
add
or
add
add
push
sub
add
adc
add
and
add
push
add
adc
or
pusha
sbb
inc
adc
call
add
sbb
cmp
add
add
sub
add
inc
sub
sub
pop
cmp
call
add
add
or
jmp
es
sub
add
adc
add
sub
add
adc
or
add
js
adc
call
jnp
add
add
add
add
jge
add
add
jnp
add
add
cmp
add
add
sub
add
adc
add
out
add
add
add
adc
or
scas
adc
adc
call
add
add
push
add
sub
add
push
cmp
add
cmp
cmp
add
add
add
add
inc
or
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
sbb
add
test
add
cmp
add
and
push
add
sub
add
push
cmp
(bad)
(bad)
inc
cmp
add
add
add
add
sub
add
push
jae
add
or
add
jl
add
add
add
add
and
add
add
push
add
push
cmp
add
add
add
add
and
add
add
push
add
sub
add
push
cmp
(bad)
inc
cmp
(bad)
call
sub
add
push
cmp
add
add
cmp
(bad)
inc
add
add
xor
add
add
adc
or
loope
ins
pop
adc
call
mov
add
sbb
sbb
add
(bad)
(bad)
push
push
add
sbb
add
or
push
add
add
cmp
add
add
add
add
add
or
add
jle
add
add
inc
push
inc
adc
add
add
add
add
push
add
sbb
and
add
outs
and
add
adc
adc
cmp
add
add
dec
add
add
daa
add
push
push
lea
add
add
and
add
jae
add
or
cmp
add
add
jae
add
or
add
add
add
push
add
sbb
and
add
adc
and
add
add
add
or
xchg
add
add
add
add
add
add
add
push
cmp
add
add
add
or
add
or
add
inc
push
inc
(bad)
adc
and
daa
add
push
pop
lea
add
add
sub
add
outs
sub
add
mov
add
or
pop
or
add
or
add
or
sub
add
fst
add
add
jle
add
add
push
add
sbb
and
add
outs
sub
add
add
add
or
add
add
or
add
add
add
sub
add
add
add
aas
ret
add
add
pop
add
add
adc
add
sub
add
adc
or
push
push
call
(bad)
push
push
add
sbb
add
or
add
add
adc
push
add
sub
add
jbe
or
fisub
dec
adc
call
add
push
add
sub
add
or
add
add
adc
add
and
add
or
add
sub
sub
push
call
add
das
add
or
sbb
add
or
add
add
push
sub
adc
add
sbb
add
adc
or
hlt
xor
adc
call
sub
add
push
or
add
add
push
sub
add
adc
add
and
add
or
add
sub
sub
imul
es
sub
add
add
sbb
add
or
add
add
push
sub
add
adc
add
sbb
add
adc
or
es
push
call
sub
add
or
cmp
add
add
sub
add
inc
sub
sub
(bad)
pop
push
push
sub
add
inc
sub
sub
push
call
add
add
or
adc
push
bound
call
add
dec
add
sub
add
or
add
add
or
add
add
es
sub
add
xor
add
sub
add
sub
sub
call
or
add
and
add
sub
add
xor
add
add
add
add
adc
or
sub
ins
bound
call
add
and
add
sub
cmp
add
add
sub
adc
add
sbb
add
adc
or
lods
or
adc
call
sub
add
push
or
add
add
push
sub
add
adc
add
and
add
or
add
sub
sub
push
xor
es
sub
add
add
and
add
or
add
add
push
sub
add
adc
add
sbb
add
adc
or
xor
push
call
sub
add
or
cmp
add
add
sub
add
adc
add
cmp
add
push
add
adc
or
mov
push
call
mov
add
sbb
add
pop
cmp
add
add
add
add
or
push
add
add
or
add
add
or
add
add
add
sub
add
xor
add
add
add
add
adc
or
adc
dec
dec
adc
call
adc
(bad)
adc
push
add
sub
or
(bad)
inc
push
adc
call
add
push
add
sub
add
or
add
add
sub
sub
push
inc
adc
call
or
add
das
add
or
add
jb
or
push
jmp
xor
push
sub
add
or
add
xor
add
sub
add
inc
sub
sub
and
push
sub
add
inc
sub
sub
fs
adc
call
add
add
or
in
xchg
sub
adc
call
add
sub
add
or
add
add
xor
add
add
add
add
adc
or
dec
xor
das
adc
call
xor
add
mov
add
sbb
add
pop
cmp
add
add
add
add
xor
add
jle
add
or
cmp
add
add
sub
add
or
aam
jne
adc
call
add
push
add
sub
add
or
add
add
inc
sub
sub
inc
adc
call
add
add
or
ins
mov
call
add
add
xor
add
add
adc
or
enter
adc
call
jnp
add
add
cmp
add
add
sub
add
bound
or
mov
push
popa
adc
call
add
add
add
sub
add
adc
add
sbb
add
adc
or
push
pop
ds
adc
call
jnp
add
add
cmp
add
add
sub
add
bound
or
int
punpckhwd
call
add
add
add
sub
add
adc
add
sbb
add
adc
or
shr
call
jnp
add
add
cmp
add
add
sub
add
bound
or
jae
jnp
adc
call
add
add
add
sub
add
adc
add
sbb
add
adc
or
inc
inc
ins
adc
call
jnp
add
add
cmp
add
add
sub
add
bound
or
jno
jns
adc
call
add
add
add
sub
add
adc
add
enter
add
add
sub
sub
cmp
adc
call
add
push
and
add
add
cmp
add
add
add
add
add
add
or
add
adc
add
and
add
dec
add
push
cmp
add
add
add
xor
add
jge
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
add
add
cmp
(bad)
(bad)
inc
add
xor
or
push
add
add
push
add
push
cmp
add
add
or
add
push
sub
add
push
cmp
(bad)
jmp
and
xchg
(bad)
(bad)
inc
sub
or
xlat
xor
call
add
add
or
sub
xor
call
add
add
xor
pop
add
add
add
adc
or
sbb
cmp
call
add
push
and
add
add
lods
add
add
pop
jge
add
add
pop
sbb
add
add
add
push
add
cmp
and
and
add
sub
add
add
or
add
add
pop
pop
jae
add
or
add
add
push
add
add
pusha
add
add
add
or
jge
add
add
pop
jge
add
add
call
add
add
push
add
sub
add
add
add
call
add
push
cmp
(bad)
(bad)
jmp
and
add
cmp
jae
add
or
add
add
jbe
(bad)
jmp
pop
add
add
push
add
dec
add
add
add
add
add
(bad)
inc
(bad)
(bad)
jmp
(bad)
push
add
add
(bad)
(bad)
call
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
sahf
add
push
and
add
add
lods
(bad)
(bad)
inc
add
add
add
pushf
add
push
jge
add
add
and
daa
add
push
and
add
inc
jae
add
or
popf
add
push
and
add
add
push
add
cmp
(bad)
inc
add
add
add
xor
add
add
add
add
adc
or
ror
pop
inc
adc
call
add
add
push
add
push
cmp
add
add
jnp
add
add
add
xchg
add
add
push
add
add
push
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
jle
add
push
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
cmp
add
and
add
add
push
add
push
cmp
add
push
add
add
push
and
add
add
push
add
pop
cmp
add
add
add
inc
push
inc
or
sub
sub
add
and
js
(bad)
inc
jnp
add
add
inc
push
inc
or
cmp
jnp
add
add
add
mov
and
add
add
inc
(bad)
(bad)
inc
add
add
add
xor
add
add
add
add
adc
or
fidiv
outs
xor
push
call
add
add
push
add
cmp
add
jl
add
add
sbb
add
pop
push
fiadd
jnp
add
add
fisubr
cmp
add
and
push
add
cmp
add
add
jnp
add
add
push
add
add
cmp
add
add
add
push
cmp
add
mov
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
add
scas
(bad)
(bad)
push
add
or
add
ins
add
add
add
add
cmp
(bad)
(bad)
inc
add
add
add
movs
(bad)
(bad)
(bad)
cmp
add
add
dec
add
sub
push
(bad)
(bad)
(bad)
cmp
add
add
or
pop
add
add
xchg
(bad)
(bad)
inc
add
sub
add
push
sub
ret
(bad)
(bad)
jmp
and
add
add
push
add
sub
imul
inc
add
adc
add
inc
add
or
add
sub
sub
popa
adc
call
add
add
push
add
sub
xchg
add
add
cmp
add
add
rol
add
add
outs
cmp
push
add
add
sub
pop
add
add
adc
add
push
cmp
add
add
add
cmp
add
add
add
add
dec
add
dec
add
add
add
add
adc
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
add
add
add
sub
add
and
add
add
push
add
pop
cmp
(bad)
(bad)
inc
outs
add
or
cmp
add
add
dec
add
cmp
cmp
(bad)
jmp
add
add
dec
add
sub
js
(bad)
(bad)
cmp
add
add
or
cmp
jmp
mov
lahf
add
push
cmp
add
addr16
(bad)
inc
add
add
xor
lar
add
add
adc
or
jae
ds
adc
call
lahf
add
push
cmp
and
add
add
mov
add
add
add
add
push
add
add
cmp
add
add
add
pop
cmp
add
add
add
or
jnp
add
add
cmps
add
push
add
sub
jnp
add
add
inc
add
or
add
sub
add
pop
add
add
add
add
add
inc
push
inc
or
add
add
cmp
add
add
add
test
or
push
add
cmp
add
add
add
add
add
cmp
(bad)
cmp
(bad)
jmp
and
add
add
adc
add
pop
cmp
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
pop
add
add
(bad)
(bad)
call
add
add
(bad)
jmp
add
xchg
add
add
(bad)
call
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
cli
add
add
add
add
dec
add
sub
lods
(bad)
(bad)
inc
add
add
add
movs
add
push
add
jnp
add
add
sub
inc
or
cmp
(bad)
jmp
or
add
cmp
(bad)
inc
add
add
add
dec
add
push
and
add
dec
add
cmp
(bad)
inc
add
add
push
and
add
add
push
add
cmp
(bad)
inc
add
add
push
add
outs
je
add
and
add
add
push
add
sub
sbb
(bad)
(bad)
cmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
inc
add
add
add
inc
add
or
or
add
cmp
(bad)
(bad)
inc
add
outs
inc
add
or
add
add
add
add
add
jnp
add
add
inc
or
cmp
add
add
sbb
add
or
add
add
add
inc
push
inc
or
pop
add
add
push
add
pop
cmp
(bad)
(bad)
inc
add
add
or
add
jb
adc
call
sub
add
or
repz
dec
adc
call
add
add
add
outs
cmp
add
add
sub
xor
add
add
add
add
adc
or
call
es
sub
add
push
cmp
add
and
add
cmp
add
add
sub
pop
add
add
bound
add
add
add
add
inc
add
add
add
add
cmp
add
push
cmp
(bad)
(bad)
inc
sub
add
add
cmp
add
add
add
add
add
adc
add
cmp
(bad)
(bad)
jmp
and
adc
add
push
cmp
add
add
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
inc
(bad)
(bad)
jmp
(bad)
jmp
(bad)
dec
add
add
push
add
add
push
add
sub
jnp
(bad)
(bad)
cmp
add
adc
add
into
add
add
add
adc
or
sub
sub
push
call
add
add
inc
add
add
add
sub
add
and
add
add
push
add
cmp
add
add
add
add
or
and
add
add
push
add
pop
cmp
add
add
into
(bad)
(bad)
inc
add
sub
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
cmp
and
add
cmp
(bad)
(bad)
inc
cmp
push
sub
add
push
sub
fcos
(bad)
jmp
and
push
add
sub
jg
(bad)
(bad)
cmp
add
add
xchg
or
sub
cs
call
pop
outs
add
push
add
add
inc
add
or
add
add
xchg
or
loope
add
push
call
pop
outs
add
push
add
add
lods
add
push
add
sub
add
xor
push
add
add
add
adc
or
xor
imul
stc
and
add
add
push
add
push
cmp
add
add
add
inc
add
add
add
add
cmp
add
sub
add
and
add
add
push
add
pop
cmp
jnp
add
add
push
add
add
add
dec
add
or
add
or
add
or
push
add
add
cmp
add
add
add
and
add
add
bound
add
add
push
jge
add
add
test
(bad)
jmp
and
add
dec
add
push
cmp
add
add
push
outs
add
push
sub
mov
fcos
(bad)
jmp
and
add
add
and
add
push
cmp
(bad)
inc
sub
or
add
or
stos
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
call
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
jge
(bad)
push
(bad)
push
add
and
add
add
(bad)
inc
add
add
adc
add
add
add
adc
or
je
dec
dec
adc
call
add
add
mov
add
add
add
dec
add
or
or
add
cmp
add
add
jnp
add
add
dec
add
add
outs
inc
add
or
add
or
inc
cmp
add
add
cmp
add
push
cmp
add
add
add
add
dec
add
push
cmp
add
add
cmp
add
add
add
push
cmp
add
and
add
add
sbb
add
cmp
(bad)
(bad)
inc
jnp
add
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
pop
add
add
push
add
dec
add
add
add
(bad)
call
(bad)
push
(bad)
jmp
add
add
add
ds
(bad)
inc
add
mov
add
or
add
daa
add
add
add
mov
cmp
add
add
jnp
add
add
push
add
add
jl
add
add
sub
push
add
or
push
add
add
cmp
add
add
add
push
cmp
add
add
and
add
add
push
add
push
cmp
(bad)
inc
cmp
add
add
sbb
add
push
and
add
add
push
(bad)
(bad)
inc
add
add
or
add
adc
inc
push
inc
or
lahf
add
push
sub
mov
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
jnp
add
add
jnp
add
add
aaa
add
add
add
or
or
add
dec
add
sub
cld
(bad)
(bad)
inc
push
sub
add
jnp
add
add
(bad)
aaa
add
add
add
or
cmp
add
add
add
add
or
add
add
add
add
inc
push
add
add
cmp
add
add
add
push
cmp
add
add
push
outs
push
add
or
push
add
add
push
add
sub
pushf
(bad)
(bad)
inc
add
sub
add
adc
add
add
add
sub
sub
rcr
adc
call
add
add
push
add
sub
mov
add
add
add
add
rol
add
and
add
add
push
add
sub
imul
add
xchg
add
add
jns
add
add
add
add
or
add
add
add
add
push
add
add
cmp
add
add
add
pop
cmp
add
add
or
dec
add
add
jnp
add
add
and
add
cmp
add
sbb
cmp
jnp
add
add
cli
add
add
jnp
add
add
cmc
add
add
add
add
cmp
add
add
jnp
add
add
push
add
add
cmp
add
add
add
pop
cmp
or
jbe
(bad)
jmp
push
add
add
push
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
inc
add
rol
add
mov
add
pop
add
add
add
add
(bad)
call
add
stc
(bad)
(bad)
dec
add
add
or
push
add
cmp
or
test
add
add
add
add
and
add
add
(bad)
(bad)
(bad)
inc
add
sub
add
outs
dec
add
or
add
add
add
add
dec
add
cmp
(bad)
inc
cmp
add
add
push
add
add
pop
(bad)
(bad)
call
or
cmp
jnp
add
add
pop
cmp
add
add
or
sub
add
add
add
add
and
add
cmp
(bad)
(bad)
inc
cmp
cmp
adc
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
or
adc
add
dec
add
sub
std
(bad)
(bad)
inc
add
add
push
add
or
add
add
or
add
cmp
(bad)
(bad)
call
cmp
add
add
add
pop
cmp
sub
mov
and
add
add
mov
(bad)
inc
cmp
or
add
add
cmp
jl
add
add
push
add
or
outs
aas
add
or
adc
add
add
add
push
add
or
add
add
add
add
push
add
or
outs
add
or
adc
jnp
add
add
je
(bad)
jmp
sldt
add
push
add
cmp
(bad)
call
cmp
add
add
add
pop
cmp
add
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
sub
xor
add
add
adc
or
test
push
call
add
add
cmps
add
add
add
outs
inc
add
push
jge
add
add
sub
aaa
add
add
and
add
add
push
add
sub
jbe
add
pop
cmp
add
and
add
add
bound
add
add
add
add
jnp
add
add
add
and
add
dec
add
sub
inc
add
add
cmp
add
add
add
mov
add
outs
dec
add
or
or
add
cmp
add
add
fadd
add
add
jnp
add
add
pop
add
add
add
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jnp
add
ins
(bad)
(bad)
dec
add
add
pop
add
add
int
(bad)
dec
inc
or
add
add
add
add
add
add
add
add
add
add
(bad)
jmp
add
add
(bad)
(bad)
cmp
add
cmp
add
add
sub
or
add
or
cmp
add
add
sub
add
outs
dec
add
or
cmp
add
add
add
mov
add
outs
dec
add
or
cmp
add
push
add
or
mov
add
cmp
(bad)
(bad)
jmp
and
add
add
dec
(bad)
(bad)
inc
add
sub
add
xor
add
add
adc
or
sar
das
push
push
sub
add
dec
add
pop
cmp
add
add
pop
(bad)
or
push
or
ds
add
add
push
add
add
pop
add
add
or
sub
add
add
and
add
add
push
add
pop
cmp
add
add
add
add
(bad)
aaa
add
add
outs
inc
add
or
add
or
mov
add
pop
or
sub
add
add
jle
add
or
pop
add
or
cmp
add
add
add
push
add
dec
add
add
add
(bad)
call
(bad)
(bad)
inc
add
add
(bad)
call
add
add
add
cmp
(bad)
jmp
and
add
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
aaa
add
add
sub
pop
add
or
mov
add
sub
add
add
jle
add
or
pop
add
or
and
add
dec
add
sub
cmp
(bad)
(bad)
cmp
(bad)
inc
sub
add
adc
add
sbb
add
adc
or
clc
je
xor
push
sub
pop
add
or
cmp
add
add
sub
add
adc
add
icebp
add
add
add
adc
or
stc
xor
outs
adc
call
add
add
mov
cmp
add
add
add
add
inc
or
jbe
add
and
add
add
outs
inc
add
or
sub
add
add
ins
add
add
add
add
or
sub
lahf
add
push
cmp
(bad)
(bad)
jmp
and
add
add
push
add
sub
add
cmp
add
add
add
pop
add
or
cmp
add
add
add
add
add
pop
add
add
push
add
push
cmp
add
or
(bad)
(bad)
(bad)
(bad)
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
cmp
(bad)
dec
(bad)
jmp
(bad)
call
(bad)
(bad)
call
(bad)
dec
add
add
push
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
xor
add
add
adc
add
sub
sub
push
call
pop
add
or
cmp
add
add
sub
or
fiadd
push
adc
call
sub
add
xor
add
add
add
add
adc
or
mov
push
call
or
add
add
push
sub
or
rol
es
sub
add
adc
add
sbb
add
sbb
add
sub
sub
cmp
adc
call
or
add
add
push
sub
or
aas
aaa
sbb
push
call
sub
add
xor
add
add
adc
or
sbb
dec
push
adc
call
sub
cmp
add
add
sub
add
sub
sub
add
adc
call
add
pusha
add
or
add
mov
add
add
sub
add
adc
add
sbb
add
adc
or
addr16
xor
call
sub
add
or
add
add
push
sub
add
sub
sub
and
adc
call
add
bound
add
add
sub
add
add
add
xor
add
add
adc
or
jge
pop
pusha
adc
call
jnp
add
add
cmp
add
add
sub
add
bound
or
out
inc
das
adc
call
add
add
add
sub
add
adc
add
sbb
add
adc
or
enter
adc
call
jnp
add
add
cmp
add
add
sub
add
bound
or
ins
movs
adc
push
call
add
add
add
sub
add
adc
add
sbb
add
adc
or
les
ja
adc
call
jnp
add
add
cmp
add
add
sub
add
adc
pop
add
add
add
add
adc
or
sti
out
data16
call
lahf
add
push
cmp
and
add
add
pop
add
add
add
inc
and
add
add
inc
add
add
add
jge
add
add
outs
cmp
add
and
add
add
push
add
push
cmp
cmp
add
add
add
add
or
push
fiadd
sbb
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
jmp
add
add
mov
(bad)
jmp
and
add
cmp
(bad)
(bad)
inc
cmp
add
mov
(bad)
inc
add
add
adc
add
sbb
add
adc
or
pusha
dec
or
push
call
jnp
add
add
cmp
add
add
sub
add
bound
or
or
imul
push
sub
jge
add
add
sub
add
adc
add
std
add
add
add
adc
or
nop
cmp
push
call
add
add
add
add
add
add
add
sldt
add
add
add
dec
add
push
cmp
add
add
cmp
add
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
add
add
add
movs
(bad)
(bad)
inc
add
add
cmp
(bad)
(bad)
inc
jnp
add
add
mov
(bad)
jmp
lahf
add
push
sub
pop
add
add
and
add
add
push
add
sub
lahf
(bad)
(bad)
inc
cmp
add
add
sldt
add
and
push
add
cmp
outs
inc
add
or
mov
add
or
and
and
add
add
jnp
add
add
and
add
add
push
add
sub
push
(bad)
(bad)
(bad)
cmp
add
add
sub
add
adc
add
out
add
adc
add
sub
sub
mov
adc
call
add
add
cmp
add
add
jnp
add
add
sbb
add
and
add
add
sub
add
jge
add
add
pop
add
add
sbb
add
push
cmp
add
add
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
add
add
xor
add
add
add
pop
sub
inc
add
add
and
push
add
pop
cmp
sbb
mov
add
add
dec
add
push
cmp
cmp
inc
outs
inc
add
or
sub
(bad)
(bad)
(bad)
jmp
and
add
add
push
add
sub
aad
(bad)
(bad)
cmp
(bad)
inc
sub
adc
add
in
add
add
add
adc
or
dec
aad
pop
adc
call
mov
mov
and
add
add
pop
add
add
sub
arpl
add
or
mov
add
cmp
add
add
add
and
add
add
xor
add
add
jnp
add
add
or
add
and
adc
add
push
cmp
add
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
(bad)
(bad)
inc
add
and
add
dec
add
push
cmp
(bad)
(bad)
inc
cmp
add
add
cmp
sbb
pushf
(bad)
(bad)
(bad)
cmp
and
add
add
push
add
sub
xchg
(bad)
(bad)
(bad)
cmp
add
add
sub
xor
add
add
add
add
adc
or
fnstsw
aas
inc
adc
call
add
add
jg
add
push
cmp
add
add
outs
inc
add
or
outs
add
or
and
add
and
add
add
push
add
add
jnp
add
add
cmp
add
dec
add
add
add
jge
add
add
pop
add
add
push
add
pop
cmp
add
add
add
or
add
and
add
add
adc
add
push
cmp
add
add
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
inc
(bad)
(bad)
(bad)
jle
(bad)
call
add
add
sub
push
and
add
add
push
add
push
cmp
add
add
xor
add
add
adc
or
mov
pop
outs
adc
call
jnp
add
add
cmp
add
add
sub
add
jle
or
aaa
add
pop
adc
call
add
add
add
outs
cmp
add
add
sub
xor
add
add
adc
or
inc
out
cmp
call
jnp
add
add
cmp
add
add
sub
add
adc
add
loopne
add
or
add
sub
sub
imul
sub
add
push
cmp
add
and
add
add
sub
add
add
add
or
pop
add
add
push
add
push
cmp
add
add
jle
add
or
add
add
xor
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
test
add
add
add
cmp
add
add
and
add
cmp
(bad)
(bad)
inc
add
add
and
add
add
push
add
cmp
or
add
outs
add
or
add
add
add
jge
add
add
add
push
add
push
cmp
cmp
(bad)
(bad)
jmp
add
add
dec
add
push
cmp
(bad)
inc
add
adc
add
sbb
add
adc
or
test
call
jnp
add
add
cmp
add
add
sub
add
adc
add
sbb
add
adc
or
add
push
call
jnp
add
add
cmp
add
add
sub
add
adc
add
sbb
add
adc
or
daa
lea
adc
call
jnp
add
add
cmp
add
add
sub
add
adc
add
fiadd
add
or
add
sub
sub
(bad)
ins
push
adc
call
add
add
imul
add
add
jge
add
add
lahf
add
push
sub
mov
and
dec
add
add
cmp
sub
mov
pop
add
add
sub
cmp
add
add
add
and
add
add
push
add
pop
cmp
add
add
outs
pop
add
or
jecxz
(bad)
(bad)
cmp
(bad)
(bad)
jmp
push
add
add
push
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
jmp
add
add
add
add
dec
add
pop
cmp
(bad)
(bad)
inc
sub
cmp
sahf
(bad)
(bad)
jmp
and
add
cmp
add
add
adc
add
sbb
add
adc
or
scas
mov
call
jnp
add
add
cmp
add
add
sub
add
adc
add
aad
add
or
add
sub
sub
push
call
lahf
add
push
cmp
and
add
add
jno
add
add
add
add
add
add
add
dec
add
pop
cmp
add
add
outs
push
movs
add
push
and
add
add
inc
add
add
cmp
add
add
add
cmp
add
add
mov
cmp
outs
pop
add
or
adc
add
and
sbb
add
push
cmp
add
add
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
jmp
(bad)
call
add
add
(bad)
inc
(bad)
(bad)
dec
add
add
mov
(bad)
jmp
and
add
add
retf
(bad)
(bad)
inc
add
add
add
xor
add
add
sbb
or
lea
inc
adc
call
add
add
push
push
add
cmp
add
add
add
add
data16
or
add
add
add
add
dec
push
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
retf
(bad)
(bad)
inc
jae
add
or
sub
jecxz
(bad)
jmp
and
scas
(bad)
(bad)
dec
outs
push
and
add
add
popf
(bad)
(bad)
inc
jnp
add
add
imul
jno
(bad)
dec
adc
sub
add
or
add
or
add
push
add
adc
add
ins
add
or
add
push
outs
ins
add
or
add
add
dec
push
add
cmp
(bad)
call
add
jmp
add
add
dec
push
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
sub
xor
inc
add
add
add
adc
or
mov
push
call
add
push
sub
and
add
and
add
add
push
add
add
cmp
add
add
scas
add
add
add
sbb
add
and
add
add
push
add
add
cmp
add
add
mov
add
push
or
inc
add
add
pop
call
cmp
add
add
add
add
sub
add
or
add
add
add
cmp
add
add
outs
cmp
add
and
add
add
inc
add
add
pop
pop
(bad)
or
pop
or
add
add
scas
(bad)
(bad)
jmp
add
add
cmp
add
add
add
(bad)
(bad)
inc
jnp
add
add
outs
sub
sub
outs
add
or
mov
add
add
dec
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
(bad)
inc
(bad)
inc
(bad)
jmp
add
add
pop
add
add
push
add
(bad)
(bad)
inc
sub
add
mov
add
push
add
(bad)
(bad)
inc
add
adc
add
sbb
add
adc
or
into
or
dec
adc
call
jnp
add
add
cmp
add
add
sub
add
sbb
add
add
add
adc
or
pop
lea
adc
call
lahf
add
push
cmp
and
push
or
pop
cmp
add
add
add
add
or
pop
add
add
push
or
cmp
add
add
add
add
add
sub
inc
adc
add
and
add
add
in
add
add
sub
add
or
mov
lahf
add
push
cmp
add
add
cmp
add
add
or
(bad)
or
or
push
adc
sldt
add
add
sub
out
(bad)
inc
or
sub
add
sub
add
outs
xor
add
cmp
(bad)
(bad)
jmp
add
add
dec
pop
add
or
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
and
add
dec
pop
add
cmp
(bad)
(bad)
call
pop
mov
cmp
and
add
add
push
pop
add
cmp
sbb
add
sub
add
or
add
sub
add
fisttp
sub
add
fld
add
add
add
jge
add
add
pop
add
add
add
push
or
dec
add
add
add
(bad)
(bad)
(bad)
fdivrp
(bad)
dec
add
add
(bad)
(bad)
push
(bad)
(bad)
jmp
add
add
push
add
add
sar
(bad)
call
add
add
cmp
add
add
outs
push
add
or
add
add
dec
or
pop
cmp
pop
sub
add
push
add
sub
add
add
cmp
add
add
adc
add
add
mov
add
sub
add
adc
add
and
add
adc
add
sub
sub
clc
ins
dec
adc
call
jnp
add
add
outs
jae
add
or
add
add
push
sub
adc
add
fld
add
adc
add
sub
sub
add
adc
call
add
add
push
add
push
cmp
add
pop
cmp
add
add
sub
add
add
and
add
add
push
add
cmp
add
add
cwde
add
add
add
add
add
add
je
add
and
add
add
push
add
sub
fcos
(bad)
(bad)
cmp
add
add
jnp
add
add
add
outs
add
or
add
add
add
add
dec
add
dec
add
add
add
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
(bad)
jmp
and
add
add
push
add
push
cmp
(bad)
(bad)
inc
add
add
add
outs
outs
add
or
and
push
add
cmp
add
add
add
lea
adc
call
add
add
or
rol
push
add
sub
xchg
sub
sub
outs
pop
adc
call
add
sub
add
outs
outs
add
push
add
sub
add
sub
sub
outs
add
adc
call
add
push
outs
outs
add
push
add
sub
add
adc
add
add
add
adc
or
mov
call
add
add
into
add
add
add
add
add
ret
add
push
sbb
jae
add
or
and
add
add
push
push
add
cmp
push
add
add
or
add
cmp
outs
push
add
or
mov
dec
add
add
and
add
cmp
add
add
push
outs
js
add
sub
add
jge
add
add
or
add
dec
push
add
push
add
add
or
(bad)
or
or
mov
adc
inc
outs
jp
add
cmp
(bad)
(bad)
jmp
and
add
add
add
add
pop
outs
das
add
push
adc
add
jnp
add
sub
or
sbb
add
or
mov
(bad)
jmp
add
add
dec
push
add
or
add
add
add
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
aas
(bad)
(bad)
jmp
(bad)
call
(bad)
(bad)
jmp
add
add
add
add
cmp
(bad)
(bad)
inc
sub
adc
push
add
add
and
add
sub
sub
push
call
jl
add
add
add
jle
add
sbb
add
jg
add
sbb
(bad)
sub
(bad)
sub
pop
lar
add
or
pop
fimul
add
add
or
sub
jnp
add
add
cmp
add
add
sub
adc
add
and
add
adc
or
inc
xchg
xor
adc
call
add
add
test
add
outs
jbe
add
or
add
add
push
sub
add
adc
push
add
add
add
add
adc
or
mov
inc
pop
adc
call
jl
add
add
sbb
sbb
add
pop
push
add
pop
fisubr
test
add
add
jnp
add
add
cmp
add
add
sub
xor
add
add
add
add
adc
or
mov
push
adc
call
(bad)
sub
add
(bad)
sub
add
jg
add
lar
add
or
add
push
or
add
add
push
sub
add
adc
push
add
add
and
add
sub
sub
dec
dec
push
adc
call
add
add
or
adc
sub
add
add
add
or
add
add
sub
add
(bad)
sub
js
add
or
add
add
push
sub
adc
push
add
add
add
add
adc
or
lea
inc
adc
call
add
mov
sub
add
push
(bad)
sub
add
(bad)
sub
js
add
or
add
add
push
sub
adc
push
add
add
add
add
adc
or
sub
inc
adc
call
add
mov
sub
add
push
add
lds
add
or
add
add
push
sub
adc
add
add
add
adc
or
push
cli
pop
xor
call
jnp
add
add
add
mov
push
add
mov
xchg
add
or
add
mov
add
or
add
add
push
sub
adc
add
add
add
add
adc
or
xchg
xor
adc
call
jnp
add
add
outs
push
add
push
add
add
push
outs
mov
add
or
add
mov
add
or
add
add
push
sub
add
sub
adc
call
add
push
add
mov
sub
add
push
outs
add
sub
sub
sub
pop
pop
push
push
sub
lar
add
or
add
add
or
add
jle
add
lar
add
add
push
add
sub
add
xor
add
add
or
add
sub
sub
mov
adc
call
lahf
add
push
cmp
and
add
cmp
add
add
cmp
add
add
add
add
or
add
add
jnp
add
add
jnp
add
add
add
add
or
jb
add
and
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
push
add
add
leave
(bad)
(bad)
inc
cmp
add
add
cmp
(bad)
(bad)
inc
add
add
add
cmp
(bad)
(bad)
jmp
and
add
add
push
add
sub
iret
(bad)
(bad)
(bad)
cmp
add
add
add
jnp
add
add
push
add
fcmovbe
add
add
or
add
jbe
(bad)
inc
add
add
add
jnp
add
add
add
(bad)
pop
pop
sub
add
push
add
jnp
add
add
jnp
add
add
push
add
fcmovbe
add
(bad)
pop
pop
outs
mov
add
and
add
add
push
add
push
cmp
(bad)
(bad)
inc
add
add
or
das
add
add
add
add
or
mov
cmp
push
call
add
push
(bad)
add
add
push
sbb
fimul
add
fisubr
leave
add
push
add
sub
mov
bound
es
sub
push
push
add
add
or
outs
add
or
add
push
add
sub
add
fisubr
or
or
pop
adc
call
add
add
add
or
add
add
or
add
jle
add
lar
add
retf
push
add
sub
mov
jge
inc
adc
call
jnp
add
add
add
push
add
fimul
add
add
push
add
sub
add
sahf
sub
sub
imul
push
sub
push
push
add
add
or
sub
add
push
outs
test
add
add
sub
sub
sub
dec
push
inc
adc
call
add
add
add
or
add
add
or
add
jle
add
lar
add
add
push
add
sub
add
rcl
adc
call
add
sub
add
push
add
push
add
int
add
add
sub
test
das
adc
call
add
outs
push
add
push
lar
push
add
or
add
push
add
or
add
push
add
sub
add
fcomp
push
adc
call
add
outs
push
add
push
add
sub
add
push
add
sub
add
xor
add
add
adc
or
rcr
inc
popa
adc
call
add
add
push
add
push
cmp
add
add
mov
add
push
inc
or
sub
pusha
add
add
and
add
add
sub
add
pop
cmp
add
add
cmp
add
add
jge
add
jge
add
add
jl
add
add
outs
aas
add
or
pop
add
add
jg
add
sbb
add
add
push
sbb
jl
add
add
add
or
pop
fisubr
test
add
cmp
add
add
and
add
add
retf
add
add
add
add
add
add
add
pop
add
add
push
add
pop
cmp
cmp
add
add
add
add
jl
add
add
push
add
or
add
add
add
push
add
or
add
add
and
add
dec
add
pop
cmp
add
add
call
add
sub
jl
add
add
jg
add
fimul
add
add
add
push
add
or
add
add
and
add
add
sub
add
cmp
add
add
add
add
jl
add
add
push
add
or
add
add
cmp
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
cld
(bad)
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
jmp
add
add
add
int
(bad)
inc
add
sub
jo
dec
adc
call
add
add
push
add
or
add
push
add
or
into
add
push
add
sub
add
adc
pop
add
add
adc
or
jno
pop
pusha
adc
call
add
add
cmp
add
add
iret
add
push
push
inc
or
lahf
add
push
sub
dec
add
add
and
add
dec
add
cmp
add
push
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
cmp
add
and
add
add
push
add
sub
(bad)
(bad)
(bad)
inc
cmp
add
add
jnp
add
add
add
add
push
add
outs
mov
add
and
push
add
cmp
add
add
xchg
or
movs
lods
es
adc
call
add
add
add
add
outs
xchg
add
push
add
sub
add
lods
jne
adc
call
add
add
add
add
push
add
or
add
push
add
or
add
push
add
sub
add
sub
sub
imul
push
call
add
add
add
add
xchg
add
push
add
sub
add
adc
push
add
add
add
sub
sub
and
xor
push
sub
add
cmp
add
add
cmp
add
add
add
jl
add
add
push
add
or
add
add
push
add
or
add
sub
add
push
and
push
add
sub
dec
add
add
mov
cmp
add
and
add
add
push
add
push
cmp
cmp
add
add
mov
outs
lea
add
fiadd
add
add
push
add
or
add
sub
add
push
and
add
add
ja
add
add
rol
add
add
add
sub
pop
add
rol
add
sbb
add
rol
add
sbb
outs
mov
add
sbb
sub
add
or
add
add
(bad)
(bad)
push
(bad)
(bad)
(bad)
cmp
add
add
add
push
add
or
add
sub
add
push
cmp
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
inc
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
fsin
(bad)
(bad)
cmp
add
cmp
(bad)
(bad)
jmp
and
add
add
push
add
sub
mov
add
add
sub
lahf
add
push
cmp
(bad)
(bad)
jmp
and
add
cmp
add
sub
repz
fs
call
add
add
push
add
or
add
push
add
or
add
push
add
sub
xor
add
add
adc
or
push
push
call
mov
jg
add
and
add
add
inc
add
add
cmp
add
add
add
add
add
add
add
or
sub
add
push
outs
pop
add
and
adc
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
cmp
(bad)
(bad)
inc
add
add
cmp
and
add
add
push
add
cmp
add
add
xchg
sub
sub
fbstp
push
call
add
and
add
push
add
sub
add
add
or
add
add
add
add
or
or
call
add
push
push
and
add
push
add
sub
add
sub
sub
cmp
es
sub
xor
add
add
sub
add
or
add
add
add
add
push
sub
add
push
add
sub
sub
sub
fs
xor
call
jl
add
add
push
add
add
add
or
add
add
jnp
add
add
pop
outs
cdq
add
push
add
sub
add
xor
add
add
adc
or
out
pop
dec
adc
call
lahf
add
push
cmp
and
add
add
push
add
add
jnp
add
add
sub
add
push
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
and
add
add
sar
(bad)
inc
add
add
add
jnp
add
add
outs
nop
add
or
add
mov
add
pop
add
or
add
or
or
add
add
cmp
add
add
cmp
sub
add
shr
or
push
pop
sbb
es
sub
add
add
xchg
add
or
add
add
jnp
add
add
jnp
add
add
outs
nop
add
or
add
add
add
or
lock
call
add
sub
add
add
mov
outs
adc
call
add
dec
add
dec
add
outs
xchg
add
or
add
add
or
repnz
ins
adc
call
or
add
xchg
add
or
add
jb
or
fadd
call
add
dec
add
outs
push
add
push
sub
add
bound
or
(bad)
out
push
adc
call
add
outs
jae
add
sub
add
inc
sub
sub
mov
popa
adc
call
add
add
or
xchg
aaa
bound
call
add
add
xchg
dec
cs
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
sub
add
bound
or
test
and
adc
call
add
outs
aas
add
or
add
add
or
sub
push
adc
call
add
outs
jne
add
sub
add
jb
or
ds
inc
adc
call
add
dec
add
outs
xchg
add
or
add
add
or
mov
adc
adc
call
or
add
or
add
xchg
add
or
add
jb
or
cmp
adc
push
call
add
dec
add
outs
add
or
add
add
or
mov
push
call
add
outs
inc
add
or
add
add
or
(bad)
add
adc
call
add
outs
cmp
add
add
or
jmp
es
sub
add
or
add
cwde
add
or
add
add
or
push
or
adc
call
add
outs
inc
add
push
sub
add
jb
or
mov
push
call
add
dec
add
sub
add
add
or
mov
adc
call
add
dec
add
outs
add
push
sub
add
jb
or
lea
call
add
dec
add
sub
add
add
or
in
xlat
push
adc
call
add
outs
fwait
add
or
add
add
or
stc
je
arpl
call
add
dec
add
outs
push
add
or
add
add
or
lods
add
push
call
pushf
add
or
add
jb
or
mov
or
adc
call
add
dec
add
outs
dec
add
or
add
add
or
push
sar
es
sub
add
or
add
bound
or
or
call
add
outs
inc
add
or
add
add
or
shr
push
call
add
dec
add
outs
pop
add
or
add
add
or
push
repnz
xor
push
call
add
sub
add
add
or
rcl
pop
dec
adc
call
add
outs
cmp
add
sub
add
bound
or
xchg
add
push
push
call
add
outs
lahf
add
or
add
add
or
push
dec
pop
adc
call
add
dec
add
outs
inc
add
or
add
add
or
lea
push
es
sub
add
add
push
sub
add
jb
or
push
inc
jae
adc
call
add
dec
add
outs
inc
add
or
add
add
or
jns
dec
aaa
adc
call
add
outs
push
add
add
or
dec
pop
and
push
call
add
outs
sub
add
add
or
xor
pop
dec
adc
call
add
outs
das
add
push
sub
add
bound
or
sbb
xor
push
sub
add
add
push
sub
add
xchg
or
aas
lds
adc
call
or
add
or
add
or
add
mov
add
jb
or
fiadd
xor
call
add
dec
add
outs
imul
push
sub
add
sub
sub
mov
es
sub
add
or
add
or
add
add
push
sub
add
jbe
or
xchg
push
adc
call
or
add
or
add
mov
add
bound
or
mov
push
call
add
outs
mov
add
add
or
lea
xor
push
call
add
outs
add
or
add
add
ins
jbe
adc
call
add
dec
add
dec
add
dec
add
dec
add
outs
js
add
sub
add
bound
or
sar
adc
call
add
outs
push
add
push
sub
add
mov
or
push
pop
push
push
adc
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
sub
add
mov
or
out
push
gs
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
sub
add
mov
or
and
push
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
sub
add
ret
sub
or
adc
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
add
push
sub
add
mov
or
aas
or
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
sub
add
bound
or
rcl
inc
adc
call
add
outs
push
add
push
sub
add
mov
or
retf
inc
adc
push
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
sub
add
mov
mov
call
add
dec
add
dec
add
dec
add
dec
add
outs
lea
add
sub
add
bound
or
adc
or
call
add
outs
mov
add
sub
add
bound
or
lods
div
adc
call
add
outs
lea
add
sub
add
bound
or
test
call
add
outs
pop
add
push
sub
add
xchg
sub
sub
movs
adc
push
call
add
dec
add
dec
add
dec
add
outs
xchg
add
push
sub
add
bound
or
cmp
adc
call
add
outs
mov
add
sub
add
ret
sub
and
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
add
push
sub
add
add
or
xor
add
add
add
sub
sub
lods
add
push
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
or
add
add
push
sub
in
jo
adc
call
add
dec
add
dec
add
dec
add
outs
cwde
add
push
sub
add
jb
or
pop
pop
ja
adc
call
add
dec
add
outs
movs
add
or
add
add
xor
pop
add
add
add
adc
or
fld
call
add
push
sub
add
push
cmp
add
add
and
add
add
push
add
pop
cmp
add
add
sub
push
add
add
push
add
sub
add
add
and
and
add
sub
add
add
jle
add
or
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
leave
(bad)
(bad)
inc
pop
pop
jae
add
or
add
add
add
add
add
xchg
add
or
add
add
and
daa
add
push
and
add
inc
jae
add
or
add
push
cmp
and
mov
(bad)
inc
add
add
or
add
add
add
add
dec
add
cmp
(bad)
inc
add
add
push
and
add
add
push
add
cmp
(bad)
inc
add
add
xor
add
add
add
add
adc
or
rcr
pop
inc
adc
call
add
push
sub
add
push
cmp
add
and
add
add
mov
add
add
add
push
add
add
push
and
add
add
jb
add
push
cmp
add
add
jnp
add
add
add
jnp
add
add
inc
push
inc
or
add
dec
add
add
jnp
add
add
add
mov
(bad)
jmp
and
add
add
xor
add
add
add
inc
push
inc
or
add
add
dec
add
push
cmp
add
push
cmp
sar
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
jmp
(bad)
call
(bad)
(bad)
dec
add
add
push
add
add
push
add
sub
mov
(bad)
(bad)
cmp
add
add
add
xor
xor
add
or
add
sub
sub
not
push
call
add
push
sub
mov
and
add
add
push
add
cmp
add
push
cmp
add
add
add
push
cmp
add
add
add
xor
add
add
xor
add
jae
add
or
add
add
add
add
add
xchg
add
or
add
add
mov
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
or
add
inc
add
add
add
mov
(bad)
call
push
add
add
int
(bad)
inc
add
sub
add
push
and
add
add
push
add
sub
add
push
cmp
add
add
test
add
add
add
pop
(bad)
(bad)
(bad)
cmp
and
add
add
mov
(bad)
inc
sub
add
push
push
inc
inc
(bad)
(bad)
jmp
pop
add
add
push
add
cmp
(bad)
inc
outs
aas
add
or
cmp
(bad)
(bad)
jmp
add
push
add
pop
cmp
(bad)
inc
add
add
or
add
add
dec
add
pop
cmp
(bad)
inc
add
add
adc
add
add
add
adc
or
out
adc
push
call
add
add
arpl
add
add
or
add
add
add
add
and
add
add
push
add
sub
inc
add
add
sub
add
push
push
cmp
add
add
cmp
add
add
add
push
cmp
(bad)
(bad)
jmp
add
add
dec
add
sub
add
adc
add
push
cmp
add
add
push
add
add
push
add
dec
add
add
add
add
add
(bad)
mov
(bad)
(bad)
call
add
add
add
add
add
inc
add
add
add
push
sub
sub
add
and
add
add
sar
inc
sub
add
push
add
sub
add
add
add
add
push
outs
cmps
add
or
or
add
and
add
add
(bad)
(bad)
(bad)
inc
cmp
add
sub
add
jge
add
add
sub
add
push
and
add
add
je
(bad)
inc
add
add
or
cmp
(bad)
(bad)
jmp
add
add
cmp
(bad)
inc
add
sub
add
xor
add
add
adc
add
sub
sub
stc
or
push
call
add
add
push
add
add
add
add
add
inc
add
or
leave
add
add
add
add
dec
add
dec
add
add
add
add
pop
add
cmp
add
fild
add
or
add
or
add
daa
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
add
add
add
aaa
add
push
add
jnp
add
add
sub
inc
or
sub
add
and
add
add
push
add
pop
cmp
add
xor
add
add
dec
add
sub
add
push
cmp
(bad)
inc
cmp
add
add
add
in
add
add
outs
fld
add
add
add
cwde
add
or
or
add
dec
add
sub
add
push
cmp
add
cmp
(bad)
inc
add
add
add
inc
push
inc
or
cmp
jmp
add
push
sub
jp
(bad)
jmp
and
add
cmp
(bad)
(bad)
inc
add
add
add
inc
push
inc
or
cmp
pop
add
add
clc
(bad)
(bad)
inc
add
add
push
and
add
add
push
add
push
cmp
(bad)
(bad)
inc
add
add
or
mov
push
call
sub
add
shl
adc
call
pop
outs
jecxz
add
add
add
inc
add
or
add
add
xchg
or
pop
inc
dec
ins
adc
call
pop
outs
jecxz
add
add
add
call
add
adc
add
mov
add
adc
or
and
outs
adc
call
add
push
cmp
add
add
and
add
add
pusha
add
add
add
sub
add
push
and
add
add
push
add
sub
add
push
cmp
add
push
cmp
(bad)
(bad)
(bad)
cmp
add
add
and
push
add
pop
cmp
add
add
add
cmp
add
and
add
add
add
and
add
add
adc
add
add
outs
jecxz
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
inc
add
add
xchg
or
sti
dec
sub
push
call
push
outs
jecxz
add
add
add
cmp
add
add
sub
add
xor
add
add
add
add
adc
or
push
je
push
adc
call
add
push
sub
call
add
add
sub
add
push
cmp
add
and
sbb
add
add
sub
add
push
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
mov
(bad)
(bad)
cmp
add
sbb
add
(bad)
(bad)
(bad)
call
add
and
add
dec
add
sub
add
push
cmp
ret
(bad)
(bad)
inc
cmp
add
add
add
sub
add
push
add
add
cmp
add
and
add
add
lahf
(bad)
(bad)
inc
add
add
or
cmp
(bad)
jmp
and
add
add
push
add
push
cmp
add
add
jle
or
add
push
pop
adc
call
add
add
add
sub
add
adc
add
sbb
add
adc
or
outs
into
push
cs
call
sub
or
cmp
add
add
sub
add
adc
add
scas
add
add
add
adc
or
fidivr
call
add
push
sub
test
add
and
add
add
cmp
add
add
sub
add
push
or
add
add
cmp
add
add
cmp
add
add
jge
add
add
push
add
add
sbb
add
add
sub
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
adc
add
pushf
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
add
int
(bad)
inc
cmp
(bad)
(bad)
jmp
and
add
cmp
add
add
xor
add
add
adc
add
sub
sub
dec
dec
adc
call
pop
add
or
cmp
add
add
sub
or
lds
pop
cmp
push
call
sub
add
xor
add
add
add
add
adc
or
shr
ds
call
or
add
add
push
sub
or
daa
lods
and
adc
call
sub
add
xor
add
add
add
add
adc
or
adc
pop
xor
call
or
add
add
push
sub
or
jl
jl
adc
call
sub
add
xor
add
add
adc
or
outs
mov
dec
adc
call
sub
cmp
add
add
sub
add
sub
sub
jl
adc
call
add
aas
add
push
add
sub
add
add
add
xor
add
add
adc
or
mov
push
call
sub
add
or
add
add
push
sub
add
sub
sub
addr16
call
add
bound
add
add
outs
cmp
add
add
sub
add
adc
add
sbb
add
adc
or
or
push
call
jnp
add
add
cmp
add
add
sub
add
jle
or
sub
stc
add
add
add
add
sub
add
adc
add
sbb
add
adc
or
aam
sbb
adc
call
jnp
add
add
cmp
add
add
sub
add
adc
add
hlt
add
add
add
adc
or
dec
(bad)
popa
push
adc
call
add
push
sub
add
push
cmp
add
and
add
add
push
add
sub
add
push
cmp
imul
add
add
jge
add
add
sub
pop
add
add
push
add
add
cmp
add
add
das
add
add
and
push
add
cmp
add
add
leave
(bad)
(bad)
inc
add
sub
add
jge
add
add
add
add
dec
add
cmp
add
add
jle
add
or
add
add
sar
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
inc
add
and
add
dec
add
cmp
(bad)
(bad)
inc
add
add
and
add
add
push
add
sub
add
push
cmp
add
adc
add
sbb
add
adc
or
add
call
jnp
add
add
cmp
add
add
sub
add
adc
add
sbb
add
adc
or
sar
push
sub
cmp
add
cmp
add
add
sub
add
adc
add
out
add
or
add
sub
sub
outs
arpl
call
add
push
cmp
add
add
and
add
add
jo
add
add
add
add
add
sub
add
and
add
dec
add
push
cmp
add
add
outs
cmc
add
push
outs
inc
add
or
pop
add
add
push
add
cmp
outs
cmc
add
push
push
cmp
add
add
add
add
dec
add
pop
cmp
add
add
outs
pop
add
or
push
add
add
cmp
add
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
(bad)
inc
add
add
add
add
push
add
add
sar
(bad)
inc
cmp
add
and
push
add
sub
add
push
cmp
sub
adc
add
sbb
add
adc
or
xor
gs
push
sub
cmp
add
cmp
add
add
sub
add
adc
add
jmp
add
or
add
sub
sub
push
adc
call
add
push
sub
add
push
cmp
add
add
dec
add
cmp
add
add
add
add
add
add
inc
add
add
add
add
push
outs
xchg
add
or
pop
add
add
push
add
push
cmp
add
add
outs
pop
add
or
push
add
add
cmp
add
add
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
add
add
add
add
add
add
adc
add
and
add
add
push
add
push
cmp
(bad)
(bad)
inc
cmp
add
add
add
add
dec
add
sub
test
outs
test
xchg
(bad)
jmp
add
add
cmp
add
add
xor
add
add
adc
or
xor
push
call
jnp
add
add
cmp
add
add
sub
add
adc
add
add
add
adc
or
fs
imul
stc
and
add
add
push
add
sub
push
add
add
test
add
adc
sub
inc
add
inc
push
add
add
cmp
add
add
add
pop
cmp
add
add
rol
add
sub
add
push
jae
add
or
add
add
inc
outs
xchg
add
or
add
add
add
add
sub
add
and
add
add
push
add
add
outs
in
add
or
sub
xchg
add
add
and
add
cmp
add
pop
cmp
add
add
inc
add
push
and
add
add
push
add
add
add
test
(bad)
jmp
add
add
cmp
add
cmp
(bad)
(bad)
jmp
or
add
dec
add
dec
add
add
add
(bad)
call
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
cmp
add
add
add
cmp
add
add
and
mov
add
add
add
outs
cmp
add
and
add
add
mov
(bad)
inc
add
add
add
xor
stc
add
add
or
and
call
add
add
inc
add
add
sub
add
or
add
push
add
or
add
or
add
push
add
adc
add
ins
add
or
add
push
outs
ins
add
or
add
add
data16
or
add
add
push
add
add
push
push
add
or
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
cmp
add
and
add
cmp
(bad)
(bad)
inc
jnp
add
add
imul
add
lods
(bad)
(bad)
inc
jae
add
or
add
push
sub
leave
(bad)
(bad)
jmp
and
add
add
mov
(bad)
dec
outs
push
and
add
add
cmp
call
add
jmp
add
add
cmp
(bad)
(bad)
cmp
add
add
sub
add
adc
add
sub
add
push
add
adc
or
xor
call
add
add
adc
add
add
or
add
cmp
add
and
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
add
cmp
and
ret
(bad)
(bad)
call
or
or
add
dec
add
add
cmp
movs
(bad)
(bad)
inc
add
sub
int
(bad)
jmp
and
add
add
nop
(bad)
(bad)
(bad)
cmp
(bad)
dec
pop
call
add
outs
sub
outs
add
or
add
add
sbb
add
add
add
add
outs
sub
outs
das
add
push
outs
outs
add
or
pop
pop
(bad)
or
add
add
cmp
(bad)
(bad)
inc
add
add
push
and
add
add
ss
(bad)
inc
add
add
or
or
add
cmp
add
xchg
(bad)
(bad)
inc
sub
push
add
add
push
(bad)
(bad)
inc
add
adc
add
sbb
add
adc
or
das
(bad)
sub
adc
call
jnp
add
add
cmp
add
add
sub
add
sbb
add
add
add
adc
or
sub
push
call
sub
daa
add
add
and
add
dec
or
cmp
add
add
jnp
add
add
sub
add
push
inc
adc
add
and
push
or
pop
cmp
add
add
outs
cmp
add
and
add
add
daa
add
add
add
add
push
and
add
add
push
add
add
add
add
cmp
add
add
outs
sti
add
push
or
push
add
add
push
or
sub
add
push
cmp
out
add
add
sub
add
or
add
add
cmp
add
push
pop
mov
sub
add
push
sub
jne
add
and
add
add
dec
add
add
or
push
adc
sldt
add
add
sub
add
cmp
(bad)
(bad)
inc
or
sub
add
sub
add
outs
xor
add
add
or
(bad)
or
sub
add
and
add
dec
pop
add
or
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
add
add
xchg
(bad)
(bad)
jmp
and
add
add
sar
(bad)
(bad)
fstp
add
add
daa
add
or
add
inc
add
push
fstp
add
sub
add
or
add
add
add
add
add
add
pop
outs
cld
add
push
cmp
(bad)
(bad)
jmp
add
add
dec
or
dec
add
add
add
(bad)
dec
(bad)
(bad)
push
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
inc
add
add
add
add
add
lahf
add
add
add
xor
std
add
add
add
adc
or
ins
mov
call
add
add
aas
add
add
add
add
add
xchg
add
or
add
add
pop
add
add
push
add
sub
add
push
cmp
add
add
cmp
add
add
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
add
jg
add
cmp
add
add
and
add
add
retf
(bad)
(bad)
inc
cmp
add
add
cmp
add
add
sub
add
push
add
xor
add
jae
add
or
add
add
add
xchg
(bad)
(bad)
inc
add
add
or
cmp
jmp
push
add
add
push
add
cmp
(bad)
inc
outs
add
or
cmp
(bad)
call
sub
xchg
(bad)
(bad)
jmp
and
add
add
push
add
pop
cmp
(bad)
inc
sub
add
adc
add
and
add
adc
add
sub
sub
outs
fs
adc
call
jnp
add
add
outs
jae
add
or
add
add
push
sub
adc
add
into
add
add
add
adc
or
scas
mov
call
add
push
cmp
and
add
dec
add
cmp
add
add
jnp
add
add
add
outs
add
or
cmp
add
and
add
dec
add
dec
add
add
add
add
sar
push
add
add
add
add
add
xor
add
arpl
add
and
add
add
aad
(bad)
inc
cmp
add
add
add
add
add
je
add
and
add
add
push
add
sub
add
push
cmp
cmp
(bad)
(bad)
(bad)
cmp
add
add
dec
add
cmp
add
add
add
outs
outs
add
or
and
je
(bad)
inc
add
add
mov
or
ins
cld
pop
cmp
call
add
add
or
add
push
add
sub
xchg
sub
sub
push
push
push
call
add
sub
add
sub
add
add
sub
add
sub
sub
dec
inc
adc
call
add
push
outs
add
add
add
sub
add
adc
add
add
add
adc
or
sahf
adc
adc
call
sub
xchg
add
add
and
add
dec
push
add
cmp
add
add
or
mov
adc
add
outs
jp
add
add
push
sub
add
sub
add
jge
add
add
or
add
dec
push
add
add
push
cmp
add
add
add
mov
fdiv
add
or
and
add
add
push
push
add
cmp
add
add
add
push
or
add
push
push
add
cmp
add
or
xchg
(bad)
dec
or
add
and
add
add
xor
or
(bad)
or
push
add
add
add
add
pop
outs
das
add
push
adc
add
jnp
add
sub
or
sbb
inc
add
push
cmp
(bad)
(bad)
jmp
add
add
dec
push
add
or
add
add
add
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
(bad)
jg
(bad)
dec
(bad)
(bad)
jmp
(bad)
dec
add
add
add
add
dec
push
add
(bad)
inc
sub
add
xor
add
add
and
add
sub
sub
push
call
jl
add
add
add
jle
add
sbb
add
jg
add
sbb
(bad)
sub
(bad)
sub
pop
lar
add
or
pop
fimul
add
add
or
sub
jnp
add
add
cmp
add
add
sub
adc
add
and
add
adc
or
adc
xor
adc
call
add
add
test
add
sub
add
or
add
add
push
sub
add
adc
push
add
add
add
add
adc
or
mov
push
call
jl
add
add
sbb
sbb
add
pop
push
add
pop
fisubr
test
add
add
jnp
add
add
cmp
add
add
sub
xor
add
add
add
add
adc
or
mov
push
call
(bad)
sub
add
(bad)
sub
add
jg
add
lar
add
or
add
push
or
add
add
push
sub
add
adc
push
add
add
and
add
sub
sub
push
call
add
dec
add
push
or
add
jle
add
add
add
or
add
add
sub
add
(bad)
sub
or
add
or
add
add
push
sub
adc
push
add
add
add
add
adc
or
push
arpl
adc
call
add
add
or
sub
add
push
(bad)
sub
add
(bad)
sub
dec
add
push
or
add
add
push
sub
adc
push
add
add
add
add
adc
or
stc
ins
cmp
call
add
add
or
sub
add
push
add
or
add
or
add
add
push
sub
adc
add
add
add
adc
or
sub
call
jnp
add
add
add
dec
add
push
add
add
or
add
or
adc
sub
cmp
add
add
sub
adc
add
add
add
adc
or
out
les
adc
call
jnp
add
add
outs
in
add
push
add
dec
add
push
add
add
or
add
or
adc
sub
cmp
add
add
sub
in
ss
adc
call
add
push
add
xor
add
add
xor
add
sub
add
add
sub
sub
sub
mov
pop
adc
call
add
add
add
or
add
add
or
add
jle
add
lar
add
add
push
add
sub
add
xor
add
add
adc
or
adc
popa
adc
call
add
add
push
add
sub
inc
add
add
cmp
add
add
dec
add
push
cmp
add
add
jnp
add
add
add
add
add
jnp
add
add
push
add
fcmovbe
add
add
cmp
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
push
sub
rol
add
and
add
add
mov
(bad)
inc
cmp
add
jae
add
or
add
add
jnp
add
add
jnp
add
add
add
add
push
add
jnp
add
add
jnp
add
add
push
add
fcmovbe
add
add
or
add
add
add
jnp
add
add
add
(bad)
pop
pop
outs
mov
add
and
add
add
push
add
cmp
(bad)
inc
add
add
add
jnp
add
add
push
add
fcmovbe
add
(bad)
pop
pop
outs
mov
add
and
add
add
sbb
(bad)
inc
add
add
add
add
(bad)
add
add
or
add
add
add
push
add
fcmovbe
add
(bad)
add
add
or
cmp
(bad)
jmp
and
add
add
fdivrp
(bad)
inc
cmp
add
add
cmp
jnp
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
and
add
add
push
add
cmp
add
sub
add
or
das
add
add
add
add
or
mov
inc
dec
adc
call
add
push
(bad)
add
add
push
sbb
fimul
add
fisubr
push
add
push
add
sub
mov
push
dec
pop
adc
call
add
push
add
xor
add
add
xor
add
add
push
add
push
add
sub
add
fisubr
or
jle
dec
inc
adc
call
add
add
add
or
add
add
or
add
jle
add
lar
add
adc
add
add
sub
mov
pop
pop
ds
call
jnp
add
add
add
push
add
fimul
add
add
or
add
add
add
inc
pop
ins
adc
call
add
push
add
add
or
outs
add
or
add
push
add
sub
sub
sub
inc
push
adc
call
add
add
add
or
add
add
or
add
jle
add
lar
add
add
push
add
sub
add
les
dec
adc
call
add
sub
add
add
push
add
push
add
push
add
sub
jmp
push
sub
add
add
push
lar
push
add
or
add
push
add
or
push
add
push
add
sub
add
xchg
inc
pusha
adc
call
add
outs
in
add
push
add
outs
pop
add
push
add
sub
add
xor
add
add
adc
or
ins
cmps
outs
ins
adc
call
add
add
push
add
sub
add
push
cmp
add
add
add
add
add
add
add
add
add
out
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
mov
(bad)
call
add
add
add
add
cmp
(bad)
(bad)
inc
cmp
add
add
cmp
add
add
add
push
add
push
jge
add
add
sub
add
push
cmp
add
and
push
add
push
cmp
cmp
add
add
add
add
sub
add
push
add
add
jg
add
fimul
add
add
add
push
add
or
add
add
and
add
add
push
add
cmp
(bad)
inc
add
push
add
push
push
inc
or
add
add
cmp
(bad)
inc
add
jnp
add
add
or
inc
add
add
add
(bad)
jmp
and
add
add
push
(bad)
(bad)
(bad)
cmp
add
add
add
add
jl
add
add
push
add
or
add
add
add
add
add
add
add
jl
add
add
push
add
or
add
add
add
push
add
or
add
add
and
add
add
push
add
sub
add
push
cmp
mov
add
sub
mov
sub
adc
call
add
add
push
add
or
add
push
add
or
add
push
add
sub
add
adc
pop
add
add
adc
or
cmc
fadd
pop
adc
call
add
push
sub
and
add
and
add
add
push
add
push
cmp
add
add
push
add
push
push
inc
or
xor
add
and
add
cmp
add
add
data16
add
jnp
add
add
add
dec
add
push
add
sub
add
and
sbb
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
xchg
or
sub
sbb
es
sub
jnp
add
add
add
outs
and
add
add
sub
add
jmp
call
add
add
add
add
push
add
or
add
push
add
or
add
push
add
sub
add
sub
sub
pop
adc
call
add
add
add
add
pop
add
push
add
sub
add
adc
push
add
add
and
add
sub
sub
push
call
add
add
push
add
cmp
and
add
add
add
push
add
or
add
sub
add
add
or
add
add
add
jl
add
add
push
add
or
add
add
push
add
or
add
outs
and
call
add
add
aaa
add
add
cmp
add
add
add
sub
add
outs
or
inc
add
add
add
or
add
add
add
add
jns
(bad)
jmp
push
add
add
push
add
dec
add
add
add
add
add
(bad)
call
(bad)
dec
add
pusha
add
add
add
and
add
add
push
add
pop
cmp
(bad)
(bad)
inc
cmp
sub
add
push
cmp
(bad)
jmp
and
add
add
test
(bad)
inc
cmp
add
add
add
outs
aas
add
or
outs
lea
add
fiadd
add
add
push
add
or
add
outs
and
pop
add
add
jae
(bad)
inc
add
add
and
add
add
imul
inc
add
sub
add
sahf
sub
sub
mov
adc
call
add
add
push
add
or
add
push
add
or
add
push
add
sub
xor
add
add
add
add
adc
or
sbb
call
add
push
sub
add
push
cmp
add
add
and
add
add
push
add
cmp
add
add
adc
add
cmp
add
and
add
cmp
add
add
add
add
jnp
add
add
add
add
pop
add
push
add
add
or
add
or
add
push
add
sub
add
push
cmp
adc
add
push
cmp
(bad)
(bad)
(bad)
cmp
add
add
dec
add
dec
add
add
add
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
dec
add
sub
add
push
cmp
(bad)
(bad)
(bad)
inc
add
add
xchg
sub
sub
jae
data16
call
add
and
add
push
add
sub
add
add
or
add
add
add
add
or
add
pusha
adc
call
add
push
push
and
add
push
add
sub
add
sub
sub
adc
call
jl
add
add
add
sub
add
or
add
add
add
add
push
sub
add
add
sub
sub
sub
push
call
jl
add
add
push
add
add
add
or
add
add
jnp
add
add
pop
outs
sub
add
add
sub
add
xor
add
add
adc
or
push
xor
call
add
push
cmp
add
and
add
cmp
add
add
jnp
add
add
outs
movs
add
or
pop
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
push
add
add
add
add
add
and
add
add
sar
(bad)
inc
add
pop
add
or
add
or
or
add
add
sahf
(bad)
(bad)
jmp
and
add
add
test
add
add
add
jnp
add
add
sub
add
and
push
add
cmp
sub
add
shr
or
inc
in
ds
adc
call
add
jae
add
or
add
add
jnp
add
add
jnp
add
add
outs
nop
add
or
add
add
add
(bad)
sbb
adc
call
add
dec
add
dec
add
outs
xchg
add
or
add
add
or
jo
inc
cmp
call
add
add
or
inc
sub
cmp
push
call
add
add
mov
aaa
adc
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
sub
add
bound
or
pop
push
pusha
ss
call
add
outs
add
or
add
add
or
push
push
adc
call
add
outs
aas
add
or
add
add
or
or
adc
es
sub
add
or
add
cmp
add
sub
add
bound
or
sub
inc
adc
call
add
outs
pop
add
push
sub
add
bound
or
dec
xchg
fs
call
add
outs
cmp
add
add
or
sbb
aas
xor
push
call
add
outs
add
add
add
or
lock
push
sub
add
add
push
sub
add
jb
or
clc
ja
push
adc
call
add
dec
add
outs
xchg
add
or
add
add
or
rcl
ins
pop
adc
call
add
outs
push
add
or
add
add
or
in
jg
adc
call
add
dec
add
sub
add
sub
add
jb
or
fistp
jno
adc
call
add
dec
add
sub
add
sub
add
jb
or
jmp
es
sub
add
or
add
add
push
sub
add
jb
or
mov
push
call
add
dec
add
sub
add
sub
add
bound
or
xchg
jbe
fs
call
add
outs
cmp
add
sub
add
bound
or
mov
xor
push
sub
add
add
or
add
add
or
into
cmp
push
adc
call
add
dec
add
sub
add
sub
add
bound
or
push
movs
dec
dec
adc
call
add
outs
add
or
add
add
or
int3
fisttp
cmp
push
call
add
outs
inc
add
sub
add
xchg
or
test
sbb
push
call
or
add
or
add
or
add
mov
add
sub
sub
mov
adc
call
or
add
jo
add
sub
add
or
push
xlat
bound
push
call
sub
add
sub
add
movs
ins
pop
adc
call
add
dec
add
dec
add
outs
add
add
sub
add
jbe
or
fldcw
pusha
adc
call
or
add
or
add
mov
add
xchg
sub
sub
push
call
add
dec
add
dec
add
dec
add
outs
jge
add
sub
add
bound
or
sub
push
call
add
outs
js
add
sub
add
sub
sub
addr16
adc
call
or
add
jns
add
sub
add
add
das
adc
call
add
dec
add
dec
add
outs
or
add
sub
add
bound
or
mov
sbb
es
sub
add
add
or
add
add
cmp
pusha
adc
call
add
dec
add
dec
add
dec
add
dec
add
outs
or
add
sub
add
bound
or
rcl
push
adc
call
add
outs
out
add
push
sub
add
mov
or
pop
in
ss
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
sub
add
xchg
sub
sub
xchg
add
push
call
add
dec
add
dec
add
dec
add
outs
test
add
add
push
push
cmp
push
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
sub
add
mov
or
sbb
cmp
push
sub
add
or
add
or
add
or
add
or
dec
add
add
sub
add
ret
sub
push
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
add
push
sub
add
bound
or
pop
ja
inc
adc
call
add
outs
in
add
push
sub
add
mov
or
mov
push
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
sub
add
mov
pushf
adc
push
call
add
dec
add
dec
add
dec
add
dec
add
outs
pop
add
push
sub
add
bound
or
and
sbb
push
call
add
outs
mov
add
sub
add
jb
or
in
sbb
es
sub
add
or
add
add
push
sub
add
mov
or
repnz
pop
adc
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
sub
add
xchg
sub
sub
push
call
add
dec
add
dec
add
dec
add
outs
and
add
add
or
push
stc
outs
cmp
push
call
add
outs
lea
add
sub
add
ret
sub
or
push
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
add
push
sub
add
add
or
xor
add
add
add
sub
sub
leave
pop
dec
adc
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
or
add
add
push
sub
aaa
jno
adc
call
add
dec
add
dec
add
dec
add
outs
sub
add
sub
add
sub
sub
call
add
dec
add
dec
add
outs
nop
add
or
add
add
xor
int3
add
add
add
adc
or
imul
call
add
push
sub
add
sub
add
cmp
add
and
add
add
push
add
push
cmp
add
add
pop
pop
jae
add
or
add
add
dec
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
or
add
mov
add
add
add
and
aad
(bad)
inc
add
xchg
add
or
add
add
and
add
add
mov
(bad)
inc
add
add
add
imul
add
add
push
add
add
mov
add
push
and
add
outs
xchg
add
or
add
add
dec
add
cmp
sahf
sub
sub
push
call
sbb
sub
push
add
and
or
add
outs
xchg
add
or
add
adc
add
fild
add
or
add
sub
sub
call
add
add
dec
add
add
add
add
or
cmp
sub
add
cmp
and
add
add
sub
add
add
add
push
and
add
add
sbb
add
push
cmp
add
cmp
add
and
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
cmp
(bad)
(bad)
inc
cmp
add
add
sub
add
jge
add
add
push
add
add
lods
(bad)
(bad)
inc
sub
add
push
cmp
add
add
cmp
add
add
add
cmp
and
add
dec
add
sub
add
cmp
add
add
xor
or
add
or
add
sub
sub
push
call
add
add
push
add
sub
add
cmp
add
add
mov
add
add
outs
aas
add
or
cmp
add
pop
sub
add
cmp
add
and
add
add
mov
add
add
jnp
add
add
imul
add
add
add
add
dec
add
sub
add
cmp
add
add
add
or
inc
das
add
add
and
add
and
add
cmp
add
add
add
or
add
add
cmp
add
and
add
add
xor
add
push
cmp
add
add
add
push
cmp
(bad)
(bad)
inc
add
outs
add
push
add
ins
add
push
jae
add
or
add
add
jl
(bad)
jmp
push
add
add
push
add
dec
add
add
add
(bad)
(bad)
(bad)
jp
(bad)
jmp
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
leave
(bad)
(bad)
inc
add
adc
add
sbb
add
adc
or
inc
nop
inc
dec
adc
call
jnp
add
add
cmp
add
add
sub
add
jle
or
mov
es
sub
jge
add
add
outs
cmp
add
add
sub
xor
add
add
add
adc
or
add
pop
ds
call
add
add
push
add
sub
add
cmp
add
add
add
add
add
jnp
add
add
and
add
add
push
add
cmp
add
add
add
add
add
add
add
or
add
jle
add
pop
fcmovbe
lar
add
or
outs
test
add
add
add
add
add
or
add
add
or
add
add
(bad)
add
add
or
or
add
and
xchg
add
add
add
add
add
add
add
or
add
jle
add
pop
fcmovbe
lar
add
or
add
add
(bad)
add
add
or
pop
add
add
push
add
cmp
add
push
cmp
sub
add
cmp
and
add
add
push
add
sub
add
cmp
add
add
cmp
add
jnp
add
add
add
add
or
add
add
or
outs
test
pop
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
jmp
add
add
add
add
cmp
(bad)
(bad)
inc
add
adc
or
outs
add
add
add
add
or
movs
test
dec
adc
call
jnp
add
add
lsl
add
or
add
add
or
add
jle
add
pop
fimul
add
add
sub
add
add
jnp
add
add
lsl
add
or
(bad)
lsl
add
or
(bad)
lsl
jle
add
sbb
lsl
add
sub
add
add
sub
adc
push
add
add
add
add
adc
or
test
and
push
call
add
push
sub
add
cmp
and
add
add
push
add
pop
cmp
add
add
add
add
add
add
pop
jae
add
or
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
xor
add
sldt
add
add
add
add
add
dec
add
push
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
jnp
add
add
nop
add
or
add
mov
(bad)
inc
add
add
push
push
sub
add
or
jae
(bad)
jmp
and
add
dec
add
sub
add
cmp
add
add
add
or
aam
push
gs
call
or
add
xchg
add
or
add
inc
sub
sub
jb
ins
adc
call
add
add
or
icebp
mov
call
add
add
mov
call
add
dec
add
dec
add
outs
xchg
add
or
add
add
or
mov
outs
adc
call
add
outs
add
or
add
add
or
iret
leave
dec
pop
adc
call
add
outs
cmp
add
add
or
rcr
push
call
add
outs
aas
add
or
add
add
inc
and
adc
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
sub
add
adc
or
push
add
add
or
lods
or
call
add
push
sub
add
sub
add
cmp
and
add
add
push
add
cmp
sub
add
sub
add
add
pop
push
outs
pop
add
push
and
add
add
push
add
cmp
add
add
sub
add
push
cmp
add
add
and
add
cmp
add
add
or
or
push
and
add
daa
add
push
sub
add
jae
add
push
mov
je
add
sub
add
push
pop
push
pop
push
pop
push
sub
add
jae
add
push
mov
cwde
add
add
daa
add
push
pop
xor
xor
xor
ja
add
jae
add
push
mov
scas
add
add
daa
add
push
and
stos
add
or
mov
xor
add
sbb
mov
add
daa
add
push
pop
dec
pop
dec
pop
dec
sub
add
jae
add
push
mov
fiadd
add
sub
add
push
and
pop
pop
pop
pop
pop
sub
add
jae
add
push
mov
test
add
daa
add
push
and
jbe
add
sub
add
jae
add
push
mov
adc
add
sub
add
push
pop
sbb
jp
add
sub
add
jae
add
push
mov
add
add
daa
add
push
pop
or
jbe
add
sub
xor
add
pop
or
add
add
daa
add
push
sub
add
jae
add
push
or
push
outs
das
add
push
and
add
inc
jae
add
or
jl
add
add
mov
add
add
push
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
jmp
(bad)
call
add
add
(bad)
(bad)
cmp
add
cmp
(bad)
push
(bad)
call
add
and
push
add
sub
add
cmp
(bad)
(bad)
inc
add
mov
daa
add
push
and
add
inc
jae
add
or
add
push
and
add
add
fwait
(bad)
(bad)
inc
add
jge
add
add
push
add
add
push
add
sub
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
inc
add
inc
sub
sub
outs
aaa
adc
call
sub
add
xor
add
add
adc
or
jmp
push
call
add
add
push
add
add
add
add
add
jnp
add
add
call
add
add
or
or
pop
or
or
pop
pop
pop
outs
lods
add
or
cmp
add
lods
add
or
mov
add
add
add
jnp
add
add
call
sbb
add
push
and
push
add
sub
add
cmp
add
add
loope
add
add
jnp
add
add
jnp
add
add
call
scas
add
or
add
add
cmp
add
add
add
jnp
add
add
call
pop
adc
add
sbb
pop
adc
push
add
jnp
add
add
jnp
add
add
call
pop
push
add
test
add
sbb
add
add
push
pop
sub
outs
mov
add
and
add
add
push
add
cmp
add
add
add
add
add
call
pop
add
add
or
fiadd
sub
fisubr
add
jle
add
cmp
and
add
add
push
add
cmp
add
add
add
jnp
add
add
or
push
add
test
add
pop
or
add
add
or
or
pop
or
or
push
pop
sub
add
add
add
jnp
add
add
or
push
adc
add
pop
or
pop
or
or
pop
pop
pop
outs
lods
add
or
add
add
cmp
jnp
add
add
jnp
add
add
call
sbb
outs
aas
add
or
ficomp
adc
add
push
cmp
add
add
and
add
dec
add
pop
cmp
add
add
jnp
add
add
jnp
add
add
call
add
add
or
adc
add
test
add
sbb
pop
adc
add
or
or
add
dec
add
push
cmp
add
add
jl
add
add
sbb
outs
aas
add
or
fiadd
outs
add
or
cmp
add
add
add
add
add
scas
add
or
jnp
add
add
call
add
xchg
xchg
add
or
add
add
jnp
add
add
jnp
add
add
outs
xchg
add
outs
nop
add
or
add
add
add
jnp
add
add
pop
push
add
add
or
fiadd
sub
sub
outs
mov
add
add
jnp
add
add
jnp
add
add
call
push
add
test
add
sbb
add
or
add
add
add
jnp
add
add
call
sbb
outs
aas
add
or
outs
add
or
or
outs
mov
add
add
jnp
add
add
push
cmp
(bad)
inc
jnp
add
add
jnp
add
add
or
push
adc
or
mov
add
pop
pop
sub
add
add
add
jnp
add
add
or
push
add
test
add
pop
or
adc
and
add
add
pop
sub
or
add
cmp
add
add
jnp
add
add
jnp
add
add
call
sub
ficom
pop
or
or
push
add
add
pop
sub
add
add
add
jnp
add
add
call
sub
fiadd
sub
or
pop
or
or
push
pop
sub
push
add
add
mov
add
add
jnp
add
add
jnp
add
add
call
push
pop
or
or
mov
add
pop
pop
sub
pop
add
add
data16
add
add
add
add
jnp
add
add
call
add
add
or
adc
add
push
sbb
add
add
or
adc
add
add
pop
xor
jnp
add
add
call
scas
add
or
add
or
add
add
iret
std
(bad)
jmp
add
add
dec
add
dec
add
add
add
sti
(bad)
jmp
std
(bad)
push
(bad)
inc
sti
(bad)
(bad)
mov
(bad)
(bad)
jmp
cld
(bad)
dec
std
(bad)
dec
(bad)
dec
add
add
add
mov
add
add
xor
add
add
adc
or
push
xor
push
sub
dec
add
add
cmp
add
add
sub
add
jle
or
jp
adc
push
sub
jge
add
add
outs
cmp
add
add
sub
or
sub
dec
cs
call
mov
add
sub
add
lea
push
call
or
add
or
add
or
add
jne
add
sub
add
push
or
push
call
or
add
or
add
or
add
or
add
jbe
add
sub
add
or
fwait
mov
call
or
add
or
add
mov
add
push
sub
sub
mov
call
stos
add
or
add
push
sub
sub
sub
push
call
lods
add
or
add
jb
or
push
xor
adc
call
add
dec
add
outs
xor
add
sub
add
jb
or
mov
push
pop
adc
call
add
dec
add
outs
pop
add
push
sub
add
inc
sub
sub
push
call
add
add
or
add
push
call
add
add
or
test
call
add
outs
add
or
add
add
sub
push
sub
add
or
add
or
add
or
add
or
dec
add
add
sub
add
mov
or
adc
adc
adc
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
sub
add
bound
or
push
out
inc
imul
es
sub
add
add
push
sub
add
bound
or
jmp
xor
push
call
add
outs
aas
add
or
add
add
or
pop
js
bound
call
add
outs
xor
add
sub
add
mov
or
js
pusha
pop
adc
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
sub
add
bound
or
sbb
dec
pop
adc
call
add
outs
das
add
push
sub
add
add
or
xor
add
add
add
sub
sub
aas
push
adc
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
or
add
add
or
jb
or
jno
pop
aaa
adc
call
add
dec
add
outs
jg
add
sub
add
adc
or
test
add
add
adc
or
push
push
call
add
push
sub
xchg
add
push
cmp
add
and
add
cmp
add
add
mov
daa
add
push
and
add
inc
jae
add
or
add
push
cmp
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
and
add
add
iret
(bad)
(bad)
inc
add
add
popa
pop
pop
sub
pop
outs
mov
add
and
add
add
push
add
cmp
add
lea
add
add
push
and
add
daa
add
push
sub
xor
add
pop
and
add
add
daa
add
push
pop
and
and
and
mov
add
jae
add
push
mov
mov
add
daa
add
push
pop
sbb
sbb
sbb
jne
add
jae
add
push
mov
add
add
daa
add
push
pop
sub
pop
add
jae
add
push
mov
scas
add
add
daa
add
push
and
stos
add
or
pop
add
jae
add
push
mov
add
add
add
push
add
sub
repnz
(bad)
inc
add
fadd
add
and
add
add
push
add
sub
das
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
add
add
add
or
in
outs
inc
adc
call
sub
add
xor
add
add
adc
or
push
out
push
dec
adc
call
add
add
add
add
add
add
add
jnp
add
add
jnp
add
add
nop
add
or
add
add
cmp
add
add
add
add
add
jnp
add
add
call
sub
nop
add
or
xchg
add
push
sub
int3
add
add
and
add
add
push
add
sub
popf
(bad)
(bad)
(bad)
cmp
xor
add
jnp
add
add
jnp
add
add
cwde
add
push
add
jnp
add
add
jnp
add
add
call
sbb
add
sbb
add
add
or
add
and
add
add
push
add
sub
add
inc
add
add
cmp
add
add
add
add
or
xor
and
add
add
jbe
add
sub
add
mov
jae
add
or
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
push
add
push
cmp
(bad)
(bad)
inc
add
add
add
add
call
push
push
outs
sbb
add
and
add
add
push
add
cmp
add
jnp
add
add
call
outs
xchg
add
sub
add
jnp
add
add
call
pop
add
add
or
fiadd
sub
sub
add
add
sbb
sub
fiadd
outs
add
or
fisubr
cmp
add
add
add
add
add
pop
inc
add
add
js
add
add
(bad)
(bad)
(bad)
cmp
(bad)
inc
add
outs
xchg
add
pop
fs
and
add
add
xchg
add
push
sub
add
xchg
xchg
add
or
add
add
dec
(bad)
(bad)
jmp
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
jnp
add
add
call
sbb
add
sbb
add
xchg
add
push
sbb
add
add
jmp
xor
add
jnp
add
add
call
push
add
xchg
add
push
sbb
add
xchg
add
push
push
fisubr
add
or
push
add
add
push
add
pop
cmp
(bad)
inc
add
push
sub
sub
pop
adc
call
mov
add
sub
add
jge
push
adc
call
or
add
or
add
or
add
jne
add
sub
add
or
or
xor
call
or
add
or
add
mov
add
inc
sub
sub
add
call
add
add
or
lds
call
add
add
or
jnp
adc
es
sub
add
add
or
add
add
cmps
add
push
call
add
dec
add
dec
add
outs
sbb
add
sub
add
bound
or
aam
inc
dec
adc
call
add
outs
add
or
add
add
dec
or
push
call
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
sub
add
bound
or
jl
inc
xor
push
sub
add
add
or
add
add
fidivr
gs
call
or
add
or
add
or
add
or
add
jbe
add
sub
add
sub
pop
adc
call
add
dec
add
dec
add
outs
nop
add
or
add
add
or
les
cmp
call
add
outs
xor
add
sub
add
adc
or
mov
add
adc
or
scas
add
adc
call
add
push
add
sub
add
add
sbb
or
push
and
add
daa
add
push
pop
push
pop
push
pop
push
sub
add
push
mov
push
add
add
daa
add
push
sub
xor
add
sbb
data16
add
daa
add
push
pop
xor
xor
xor
jne
add
jae
add
push
mov
jp
add
sub
add
push
pop
and
and
and
pushf
add
push
jae
add
push
mov
add
add
daa
add
push
pop
pop
pop
pop
pop
pop
sub
add
push
mov
add
add
sub
adc
pop
add
add
add
add
adc
or
aad
pop
das
adc
call
add
add
fwait
add
add
add
add
sbb
lar
add
or
fisubr
cmp
add
and
add
add
jns
add
add
jnp
add
add
jnp
add
add
jnp
add
add
mov
or
add
dec
add
cmp
add
add
jl
add
add
sbb
outs
aas
add
or
ficomp
movaps
add
or
add
jnp
add
add
jnp
add
add
call
jnp
add
add
call
add
mov
jae
add
or
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
(bad)
(bad)
call
(bad)
push
add
add
add
add
add
ins
add
add
and
add
add
ret
(bad)
(bad)
inc
add
jnp
add
add
call
jnp
add
add
call
outs
xchg
add
outs
add
push
add
add
add
or
outs
xchg
add
outs
add
push
add
jl
add
add
sbb
sub
fiadd
outs
add
or
fisubr
cmp
add
and
pop
(bad)
(bad)
inc
add
add
add
jnp
add
add
call
scas
add
or
add
add
jae
add
or
add
add
add
add
add
jnp
add
add
call
mov
add
mov
jae
add
or
add
add
or
add
cmp
(bad)
(bad)
inc
add
add
add
lahf
add
push
outs
scas
add
or
sahf
add
push
sub
sbb
(bad)
jmp
and
add
add
push
add
sub
iret
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
jnp
add
add
mov
add
add
add
jnp
add
add
jnp
add
add
nop
add
or
push
add
add
push
add
pop
cmp
add
add
add
std
jle
adc
call
or
add
or
add
or
add
jne
add
sub
add
or
mov
push
call
add
add
or
or
or
adc
call
add
add
or
add
jnp
adc
call
stos
add
or
add
bound
or
ror
inc
pop
adc
call
add
outs
aas
add
or
add
add
or
cmp
outs
ins
adc
call
add
outs
das
add
push
sub
add
push
sub
sub
adc
adc
call
scas
add
or
add
sub
sub
push
call
add
dec
add
dec
add
outs
nop
add
or
add
add
or
sub
adc
call
add
push
jae
add
or
add
adc
add
pushf
add
add
add
adc
or
nop
pop
bound
call
add
push
pop
sub
add
add
and
add
add
push
add
cmp
add
add
sub
adc
add
and
add
dec
add
pop
cmp
add
scas
add
push
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
add
add
add
add
cmp
(bad)
(bad)
inc
add
add
push
and
sar
inc
add
sbb
add
add
add
adc
or
xor
adc
call
add
push
sub
pop
add
add
and
add
add
das
add
add
jle
add
add
cmp
add
add
and
add
add
adc
add
or
mov
add
cmp
add
add
add
add
dec
or
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
(bad)
mov
add
add
add
add
cmp
(bad)
(bad)
inc
add
add
add
mov
add
jle
add
add
scas
add
push
inc
adc
push
sub
add
add
and
or
add
or
add
or
add
add
add
push
inc
push
inc
adc
adc
cmp
or
add
dec
or
cmp
add
add
add
pop
(bad)
or
adc
pop
adc
ds
add
add
add
add
jle
add
add
mov
add
push
fisubr
mov
add
cmp
add
and
add
cmp
cmp
add
push
or
add
add
cmp
jle
add
add
mov
add
pop
ficom
add
cmp
pop
add
add
outs
mov
and
add
add
outs
add
add
add
pop
(bad)
or
pop
add
add
pop
add
add
jle
add
add
pop
add
add
mov
add
outs
mov
add
add
add
sub
mov
mov
or
add
cmp
add
add
add
add
jle
add
add
outs
mov
mov
lahf
(bad)
(bad)
jmp
add
push
or
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
cmp
(bad)
jmp
(bad)
push
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
(bad)
out
(bad)
(bad)
jmp
add
add
add
add
dec
or
push
cmp
(bad)
(bad)
inc
add
or
add
add
sub
fadd
add
sub
add
add
add
jl
add
xchg
add
add
add
or
add
add
add
sbb
add
rol
add
add
adc
or
pop
in
inc
adc
call
add
and
jnp
add
add
and
add
push
sub
sbb
and
add
add
push
add
cmp
add
push
cmp
add
add
add
cmp
add
add
and
add
cmp
jnp
add
add
mov
add
and
sbb
add
push
cmp
add
add
loopne
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
or
add
add
add
mov
fadd
add
add
add
add
adc
mov
add
add
xor
add
add
adc
or
enter
adc
call
add
add
push
pop
add
cmp
add
add
add
add
push
and
daa
add
push
and
add
inc
jae
add
or
add
push
add
outs
test
outs
arpl
add
and
add
dec
pop
add
cmp
pop
sub
add
add
sbb
add
and
add
add
mov
add
add
outs
rol
or
add
mov
outs
test
rol
or
add
sub
add
push
add
and
daa
add
push
outs
ret
or
add
mov
add
sub
add
push
sub
add
push
add
sub
inc
add
or
mov
and
push
add
add
add
add
push
pop
sub
push
add
add
push
pop
add
stos
add
push
cmp
add
cmp
add
add
add
add
push
sub
add
push
add
adc
and
add
inc
and
add
sub
add
or
adc
sub
lods
add
push
sub
xchg
(bad)
(bad)
jmp
and
add
add
stos
add
add
add
add
push
adc
push
push
sub
outs
les
add
and
add
dec
pop
add
lods
add
push
cmp
add
sub
add
push
and
add
add
outs
add
add
add
add
push
jb
add
jo
mov
add
add
outs
test
sub
or
inc
add
add
add
mov
pushf
add
add
daa
add
push
sub
add
add
push
push
outs
jne
add
add
outs
test
outs
popa
add
push
add
sub
sub
outs
add
add
pop
add
add
push
pop
add
or
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
dec
(bad)
push
(bad)
(bad)
push
(bad)
dec
add
add
add
dec
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
(bad)
jmp
(bad)
jmp
add
add
cmp
add
add
push
outs
stos
add
push
and
add
add
lahf
(bad)
(bad)
inc
add
mov
add
sbb
add
and
add
add
mov
add
add
outs
mov
add
add
sub
outs
lds
add
and
add
add
push
pop
add
popa
(bad)
(bad)
inc
add
add
or
add
add
push
push
sub
outs
test
lea
add
add
mov
add
and
add
add
sub
add
mov
pushf
add
add
daa
add
push
outs
push
add
push
and
add
add
or
add
add
xor
add
add
sub
add
sub
sub
push
call
pop
add
add
cmp
add
add
sub
or
jbe
ins
outs
adc
call
jge
add
add
sub
or
int3
enter
push
call
add
add
or
push
push
call
add
add
or
inc
cmp
adc
call
add
sub
add
or
add
add
or
pop
add
adc
call
or
add
cmps
add
push
sub
add
or
aad
jg
adc
call
add
outs
enter
sub
add
bound
or
jb
or
push
call
add
outs
mov
add
sub
add
sub
sub
or
push
call
add
dec
add
dec
add
outs
leave
add
or
add
add
or
mov
push
call
or
add
das
add
or
add
bound
or
ja
or
adc
call
add
outs
retf
or
add
add
or
pop
pop
dec
dec
adc
call
add
dec
add
outs
pop
add
push
sub
add
jb
or
add
call
add
dec
add
outs
imul
push
sub
add
jb
or
jge
sbb
push
call
add
dec
add
outs
ins
add
push
sub
add
jb
or
mov
push
call
add
dec
add
outs
inc
add
or
add
add
or
jmp
cmp
adc
call
add
dec
add
outs
push
add
push
sub
add
bound
or
dec
lahf
sub
push
call
add
outs
test
add
add
or
dec
push
push
call
add
dec
add
outs
ret
or
add
add
or
inc
xchg
pop
adc
call
add
dec
add
outs
push
add
push
sub
add
push
sub
sub
inc
push
pop
adc
call
lods
add
or
add
jb
or
inc
inc
xor
es
sub
add
or
add
add
or
add
add
or
in
xchg
inc
xor
call
add
dec
add
outs
int3
add
or
add
add
or
mov
push
call
add
outs
int
add
sub
add
jb
or
scas
call
call
add
dec
add
outs
add
or
add
add
or
bound
add
adc
call
add
dec
add
outs
into
add
or
add
add
or
sub
js
adc
call
add
dec
add
outs
iret
add
or
add
add
xor
push
add
add
add
sub
sub
jge
adc
call
add
push
and
add
dec
add
push
cmp
add
push
sbb
pushf
push
sbb
pushf
push
sbb
pushf
cmp
add
add
and
add
add
push
add
sub
add
push
cmp
add
add
sbb
pop
add
add
pop
add
add
and
add
push
sbb
add
or
add
dec
add
pop
cmp
add
add
sbb
pushf
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
jbe
add
addr16
(bad)
push
(bad)
dec
add
add
add
addr16
(bad)
call
add
add
(bad)
(bad)
jmp
add
add
or
add
dec
add
cmp
lea
add
add
and
lods
(bad)
(bad)
call
lea
add
add
push
push
pop
pushf
push
pop
sbb
add
add
cmp
push
pop
pushf
push
pop
sbb
push
cmp
(bad)
(bad)
jmp
and
add
add
push
add
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
inc
sbb
and
add
add
dec
(bad)
(bad)
inc
sbb
pushf
push
sbb
pushf
push
sbb
push
sbb
pushf
push
sbb
add
add
push
add
cmp
(bad)
(bad)
inc
sub
add
adc
add
adc
add
sub
or
ins
ja
push
adc
call
add
push
sub
add
push
cmp
add
add
and
add
add
push
add
add
cmp
add
add
pop
add
add
mov
add
sub
add
push
or
add
and
add
add
ja
add
push
sub
add
or
add
or
mov
outs
rol
add
and
add
add
push
add
add
cmp
add
or
sub
add
or
add
rol
add
sub
add
or
pop
sub
add
push
sub
add
or
add
add
dec
add
add
and
add
push
adc
sar
jmp
add
add
dec
add
add
add
add
(bad)
call
jmp
dec
(bad)
dec
(bad)
(bad)
dec
add
add
add
and
add
dec
add
(bad)
(bad)
jmp
mov
daa
add
push
or
add
scas
(bad)
(bad)
inc
sub
xor
add
add
adc
or
add
call
add
add
push
add
add
sub
add
or
outs
(bad)
add
or
and
add
add
arpl
add
push
jle
add
add
pop
add
add
xlat
add
or
add
sub
add
or
add
add
cmp
add
add
enter
or
mov
push
sub
add
push
cmp
add
and
add
add
pop
add
add
add
push
or
add
or
add
add
add
dec
add
add
add
add
(bad)
(bad)
(bad)
jl
(bad)
inc
add
add
(bad)
(bad)
jmp
(bad)
call
add
add
popa
(bad)
(bad)
jmp
and
iret
(bad)
(bad)
(bad)
cmp
add
add
sub
add
inc
sub
sub
and
adc
call
add
add
or
popf
scas
cs
adc
call
add
add
or
xchg
push
pusha
adc
call
fadd
add
sub
add
jmp
call
add
dec
add
dec
add
dec
add
outs
fld
add
sub
add
adc
add
aam
add
das
add
adc
or
push
jg
pop
adc
call
add
add
add
add
sbb
add
jle
add
add
and
add
add
push
add
sub
add
push
cmp
add
or
loopne
(bad)
(bad)
cmp
add
add
and
push
add
add
jle
add
add
sub
add
or
sub
add
push
cmp
(bad)
(bad)
jmp
and
add
add
sub
add
and
add
push
rcl
add
add
int
add
outs
fild
add
jae
add
or
cmp
add
add
dec
add
dec
add
add
add
(bad)
push
(bad)
(bad)
jnp
(bad)
dec
(bad)
(bad)
jmp
add
add
add
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
sub
xor
add
add
xor
add
sub
sub
xchg
jbe
adc
call
pusha
add
add
cmp
add
add
sub
or
jp
cmp
call
and
add
sub
or
call
push
call
or
add
and
add
sub
add
or
mov
add
push
call
add
add
or
repz
cmp
adc
call
add
add
lods
sub
push
call
add
push
jae
add
push
sub
add
push
je
add
add
add
add
jb
or
xor
es
sub
add
add
fld
add
add
sub
add
adc
add
sbb
add
xor
add
sub
sub
outs
dec
adc
call
popa
add
add
cmp
add
add
sub
or
inc
dec
pop
ds
call
or
add
fiadd
add
sub
add
or
jle
pop
push
adc
call
add
add
or
jmp
es
sub
add
adc
add
sbb
add
xor
add
sub
sub
push
call
xlat
add
push
or
add
add
push
sub
or
(bad)
out
or
push
call
rol
add
sub
add
or
mov
push
call
add
add
or
lock
pop
inc
adc
call
add
add
or
fs
imul
push
call
add
push
add
fild
add
sub
bound
or
(bad)
test
call
add
sub
add
or
add
add
xor
add
add
add
or
cwde
and
inc
adc
call
add
push
push
lea
add
add
push
lea
add
add
push
lea
add
add
push
lea
add
add
jle
add
or
jle
add
or
push
lea
add
add
push
lea
add
add
sub
add
sub
add
fild
add
sub
add
and
add
push
push
add
add
add
sub
sub
adc
adc
call
xor
add
add
adc
or
in
inc
ins
xor
call
cmp
add
daa
add
push
sub
add
push
add
icebp
add
push
or
aad
add
push
push
push
mov
repnz
push
sub
add
sbb
add
sbb
add
xor
add
sub
sub
mov
adc
call
pop
add
add
repz
push
sub
add
push
cmp
add
add
je
add
add
repz
push
or
in
add
fld
add
add
fld
add
add
je
add
add
cmc
add
push
sub
add
push
outs
xor
add
and
cmp
add
daa
add
push
jb
add
jo
loopne
add
sub
add
or
das
add
add
je
add
add
cmc
add
push
sub
add
push
outs
xor
add
and
cmp
add
daa
add
push
jb
add
jo
loopne
add
or
js
add
fld
add
add
fld
add
add
outs
loop
add
and
add
daa
add
push
outs
jecxz
add
add
lea
add
add
add
or
add
or
hlt
add
push
cmp
add
add
add
or
inc
cmp
add
daa
add
push
outs
jecxz
add
add
lea
add
add
add
or
add
or
fst
add
add
push
add
add
fld
add
add
add
jo
push
sub
add
add
add
push
add
cmp
push
pop
add
add
add
add
add
pop
add
add
add
pop
add
add
xor
add
add
sub
sub
mov
call
pop
pop
jae
add
or
push
or
sub
add
push
or
adc
or
sbb
add
pop
push
or
add
out
add
adc
or
add
add
add
cmp
fisttp
cmp
add
add
sub
add
push
fadd
sub
add
adc
add
add
add
push
add
adc
add
add
or
call
es
sub
add
or
stc
add
push
or
pop
and
and
add
cli
add
push
sub
add
push
pop
pop
adc
and
add
call
cld
add
push
push
pop
outs
jmp
jae
add
or
add
add
add
or
add
or
sub
add
push
or
adc
add
adc
add
add
adc
or
mov
inc
adc
call
adc
add
adc
add
add
adc
or
les
call
adc
add
inc
add
add
add
adc
or
loop
cmp
push
call
cmp
add
daa
add
push
or
outs
mov
add
push
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
add
inc
add
add
add
adc
or
in
repz
adc
call
cmp
add
daa
add
push
or
outs
mov
add
push
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
add
inc
add
add
add
adc
or
jo
pusha
push
adc
call
cmp
add
daa
add
push
or
outs
mov
add
push
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
add
inc
add
add
add
adc
or
jmp
cmp
es
sub
add
sub
add
push
or
outs
mov
add
push
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
add
inc
add
add
add
adc
or
popf
lods
data16
push
call
cmp
add
push
or
sub
add
push
push
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
add
inc
add
add
add
adc
or
shl
pop
data16
call
cmp
add
push
or
outs
mov
add
push
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
add
add
add
adc
or
mov
or
adc
call
add
push
add
add
or
push
or
and
and
add
call
jae
add
or
add
add
add
or
add
add
adc
out
add
adc
push
adc
adc
or
sti
add
push
adc
adc
out
add
or
add
add
push
pop
jae
add
or
pop
adc
pop
push
pop
mov
jmp
add
adc
sub
add
push
adc
or
add
add
sub
or
jne
jne
adc
call
add
push
add
add
add
sub
bound
or
movs
hlt
pop
dec
adc
call
add
outs
out
add
or
add
add
or
bound
call
or
add
jo
add
sub
add
pcmpeqw
push
call
add
dec
add
dec
add
dec
add
outs
lock
or
add
add
or
test
call
add
outs
icebp
add
or
add
add
or
neg
aas
dec
adc
call
or
add
loope
add
sub
add
or
retf
rol
cmp
push
call
add
outs
repnz
or
add
add
or
push
retf
adc
call
add
outs
repz
or
add
add
or
imul
pop
cmp
push
sub
add
add
or
add
add
or
or
das
adc
call
add
outs
retf
or
add
add
or
ror
call
cmc
add
or
add
jbe
or
ds
gs
call
or
add
or
add
call
add
jb
or
inc
retf
adc
call
add
dec
add
outs
test
or
add
add
or
inc
retf
pop
cmp
call
add
dec
add
outs
out
add
or
add
add
or
push
sbb
xor
call
add
outs
js
add
sub
add
bound
or
pop
cmp
dec
adc
call
add
outs
mov
add
sub
add
push
sub
sub
push
call
aad
add
sub
add
or
mov
adc
call
add
dec
add
outs
test
add
bound
or
jbe
add
push
call
add
outs
clc
add
or
add
add
or
or
xor
call
add
outs
jp
add
sub
add
sub
sub
mov
call
or
add
jns
add
sub
add
or
mov
dec
pop
adc
call
add
sub
add
or
add
add
xor
add
add
add
add
adc
or
dec
movs
and
push
sub
sub
sub
push
xor
call
sub
sub
push
call
add
or
add
inc
sub
sub
mov
call
add
add
or
jmp
jl
adc
call
add
add
or
dec
push
call
jno
add
add
pop
sub
sub
imul
push
call
jge
add
add
add
or
(bad)
outs
addr16
adc
call
jb
add
add
pop
sub
sub
push
call
jge
add
add
add
or
ins
pop
adc
adc
call
jae
add
add
pop
sub
sub
dec
adc
es
sub
jae
add
add
xor
add
add
sub
sub
push
or
push
call
add
push
pop
sub
add
push
cmp
add
and
push
add
pop
cmp
add
add
pop
jge
add
add
add
add
cmp
add
add
pop
jge
add
add
add
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
or
add
and
add
add
(bad)
(bad)
(bad)
inc
sub
add
or
push
add
add
mov
(bad)
inc
pop
jge
add
add
add
add
dec
add
sub
add
push
cmp
inc
sub
sub
push
call
add
add
or
fdiv
pop
adc
call
add
add
xor
add
add
adc
or
xchg
and
call
add
add
add
add
add
cli
add
or
push
outs
sti
add
or
cmp
add
or
add
or
add
add
outs
cld
add
or
add
add
pop
outs
std
add
or
add
or
adc
or
inc
add
je
add
add
add
or
add
pop
adc
add
mov
mov
push
or
pusha
mov
call
add
push
add
add
or
add
jge
pop
adc
call
add
push
shl
add
add
and
add
outs
fild
add
outs
add
add
cmp
add
add
add
add
add
add
add
add
sub
sub
mov
call
add
add
and
add
outs
fild
add
adc
lea
add
and
add
call
test
add
or
add
add
lea
add
add
push
lea
add
add
push
lea
add
add
push
lea
add
add
jle
add
or
jle
add
or
push
lea
add
add
push
lea
lea
add
or
jg
add
fild
add
adc
add
add
push
xchg
add
or
xchg
add
push
xchg
add
add
adc
add
xchg
add
add
adc
add
or
push
add
add
or
sub
sub
sub
call
xor
add
add
adc
or
les
pop
dec
adc
call
lea
add
or
rol
add
mov
pop
and
add
add
adc
adc
and
add
add
add
add
pop
or
add
and
add
add
or
pop
outs
pop
push
push
ins
adc
push
push
adc
add
add
or
adc
cmp
add
add
adc
add
pop
xchg
pushf
adc
pop
pop
adc
adc
add
(bad)
inc
add
add
and
add
add
add
sub
adc
cmp
add
pop
adc
pop
aam
add
adc
pop
push
pop
pop
aas
pop
fs
add
add
rcr
or
or
cmp
pop
mov
pop
pop
and
add
inc
adc
and
or
(bad)
fdivr
jbe
xor
adc
adc
add
or
push
adc
cmp
add
add
adc
sbb
adc
adc
sbb
loopne
pop
sbb
adc
adc
sbb
loopne
pop
adc
pop
adc
adc
pop
pop
pop
loopne
push
bound
adc
adc
pop
loopne
pusha
sahf
adc
sbb
movups
pop
cmp
call
or
adc
or
adc
or
adc
or
adc
or
or
or
or
sbb
add
push
adc
or
or
or
pop
or
push
sub
or
or
or
or
pop
adc
push
sub
or
or
or
or
pop
push
sbb
sub
or
or
or
or
sbb
add
push
adc
or
or
or
pop
or
push
sub
or
or
or
or
adc
add
adc
adc
adc
or
sub
or
or
or
or
sbb
sbb
or
or
or
or
or
or
or
sub
or
or
or
or
or
adc
or
sub
or
or
or
or
or
push
pop
or
sub
or
or
or
or
or
pop
or
add
adc
or
or
or
or
push
sub
or
or
or
or
push
pop
adc
clts
sub
or
or
or
or
nop
pop
adc
sub
or
or
or
or
sbb
adc
sub
add
push
adc
or
or
or
or
adc
sub
add
push
adc
adc
or
or
or
push
pop
adc
sub
add
push
adc
adc
adc
or
pop
adc
adc
sub
add
push
adc
adc
adc
adc
sbb
adc
add
adc
or
or
or
or
or
push
push
sub
add
push
adc
adc
or
or
nop
pop
pop
push
sub
add
push
adc
adc
adc
or
pop
adc
sbb
sub
add
push
adc
adc
adc
adc
or
pop
sbb
sub
add
push
adc
or
or
or
push
pop
or
sbb
sub
add
push
adc
adc
or
or
pop
push
pop
sbb
sub
add
push
adc
adc
adc
or
pop
adc
sbb
sub
add
push
adc
adc
adc
adc
or
sub
add
push
adc
or
or
or
pop
or
push
push
sub
add
push
adc
adc
or
or
push
sub
add
push
adc
adc
adc
or
or
adc
and
sub
add
push
adc
adc
adc
adc
sbb
and
sub
add
push
adc
or
or
or
pop
or
and
sub
add
push
adc
adc
or
or
or
adc
and
sub
add
push
adc
adc
adc
or
push
pop
pop
pop
and
sub
add
push
adc
adc
adc
adc
sbb
and
add
adc
or
or
or
pop
or
es
sub
add
push
adc
adc
or
or
push
sub
add
push
adc
adc
adc
or
or
pop
pop
sub
sub
add
push
adc
adc
adc
adc
or
sub
add
push
adc
or
or
or
pop
or
sub
sub
add
push
adc
adc
or
or
pop
adc
sub
sub
add
push
adc
adc
adc
or
pop
pop
sub
sub
add
push
adc
adc
adc
adc
or
pop
sub
add
adc
or
or
or
or
or
cs
sub
add
push
adc
adc
or
or
nop
pop
das
push
sub
add
push
adc
adc
adc
or
pop
pop
pop
xor
sub
add
push
adc
adc
adc
adc
sbb
xor
sub
add
push
adc
or
or
or
push
sub
add
push
adc
adc
or
or
push
pop
nop
push
sub
add
push
adc
adc
adc
or
pop
adc
and
add
adc
adc
adc
adc
or
pop
xor
add
adc
or
or
or
pop
or
ss
sub
add
push
adc
adc
or
or
or
nop
push
sub
add
push
adc
adc
adc
or
pop
adc
and
add
adc
adc
adc
adc
sbb
cmp
sub
add
push
adc
or
or
or
nop
pop
cmp
sub
add
push
adc
adc
or
or
nop
push
sub
add
push
adc
adc
adc
or
or
push
sub
add
push
adc
adc
adc
adc
sbb
cmp
add
adc
or
or
or
or
or
ds
sub
add
push
adc
adc
or
or
pop
nop
push
sub
add
push
adc
adc
adc
or
or
adc
and
add
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
or
or
adc
inc
stos
cli
(bad)
call
adc
adc
or
add
add
push
adc
sbb
add
add
adc
sub
add
or
adc
sbb
add
add
adc
sub
add
or
adc
sbb
add
add
adc
add
add
push
adc
or
sub
add
or
adc
loop
or
and
arpl
call
add
add
add
pop
pusha
pop
push
pop
push
add
xchg
pop
jle
add
add
push
pop
pop
loopne
pop
push
add
push
pop
push
sub
add
loop
or
aas
lahf
jbe
adc
call
add
add
pop
pusha
pop
push
pop
push
add
xchg
pop
jle
add
add
push
pop
pop
loopne
pop
push
add
push
pop
push
sub
add
(bad)
sub
sub
cwde
push
es
sub
dec
add
add
push
add
xchg
pop
jle
add
add
push
pop
pop
loopne
pop
push
add
push
pop
push
sub
add
sub
sub
ins
push
xor
call
add
add
push
pop
push
add
xchg
pop
jle
add
add
push
pop
pop
loopne
pop
push
add
push
pop
push
sub
jle
or
jno
xor
call
and
pop
pop
pop
pop
add
pop
pop
pop
bound
cmps
sub
sub
or
bound
call
add
add
or
add
sub
add
pop
or
add
add
sbb
add
jb
add
cmp
add
sub
sub
push
call
sub
add
push
cmp
add
add
add
jo
mov
add
add
outs
add
add
je
add
add
fnsave
add
add
jae
add
or
(bad)
add
add
add
or
frstor
add
add
jb
add
jo
mov
add
add
outs
add
add
je
add
add
fld
add
add
sub
add
sbb
add
add
add
cmp
or
add
add
add
or
and
add
add
xor
add
add
add
add
sub
sub
push
call
add
or
push
cmp
add
or
add
es
cmp
add
add
add
sub
adc
add
add
add
pop
add
add
add
dec
jo
adc
call
add
push
cmp
add
jae
add
or
sub
add
or
add
sbb
add
sub
or
push
gs
adc
call
add
jo
mov
add
sub
add
xor
add
cmp
add
add
sub
sub
mov
adc
call
add
add
push
xor
cmp
stos
sub
add
or
add
or
add
add
add
and
add
add
push
add
add
and
add
add
out
add
dec
add
dec
add
add
iret
add
add
inc
add
add
adc
add
pop
dec
verr
add
add
push
xor
cmp
xor
add
add
or
add
cmp
add
dec
xor
cmp
or
push
ds
sub
add
dec
add
add
push
xor
push
cmp
ja
add
and
add
pop
dec
verr
inc
add
add
imul
add
adc
and
push
xor
cmp
add
adc
and
add
and
add
cmp
add
add
adc
and
add
add
sub
or
add
adc
add
and
add
add
and
add
pop
pushf
and
add
add
push
add
add
ret
add
inc
add
add
push
sbb
add
cmp
add
add
or
add
sbb
add
and
add
and
add
add
and
add
add
push
xor
cmp
add
add
push
add
add
js
add
pop
dec
sbb
add
dec
xor
cmp
add
cmp
and
add
scas
add
add
add
add
push
xor
add
pop
xor
add
adc
rol
add
dec
xor
cmp
sub
adc
pop
xchg
pushf
and
add
dec
xor
cmp
xor
add
fmul
add
cmp
add
and
add
and
add
pop
dec
sbb
add
cmp
add
and
add
add
sbb
add
pop
dec
verr
jns
add
cmp
add
add
lds
add
and
add
pop
dec
verr
mov
add
cmp
add
add
and
push
adc
pop
adc
adc
pop
adc
pop
pop
pop
rcr
dec
xor
push
cmp
add
add
or
add
add
add
dec
add
cmp
add
add
or
add
pop
add
add
jge
add
and
add
add
and
iret
add
add
or
add
add
add
and
add
add
pop
add
add
and
add
dec
xor
push
cmp
or
add
push
add
add
dec
add
add
add
add
and
add
add
push
xor
push
cmp
inc
add
add
inc
add
add
push
sbb
add
cmp
add
dec
add
and
add
add
dec
add
add
and
add
add
push
xor
cmp
add
dec
add
dec
add
add
xor
add
dec
add
add
ret
add
pop
add
add
and
add
dec
xor
cmp
xor
add
pop
add
add
or
add
sbb
add
dec
add
add
repz
add
or
add
sldt
add
mov
inc
add
add
and
add
add
push
xor
cmp
mov
add
add
dec
add
add
push
sbb
add
cmp
or
add
add
add
dec
add
dec
xor
push
cmp
add
add
imul
add
jo
add
imul
adc
and
add
add
ins
add
add
mov
cmp
dec
verr
sub
add
dec
xor
cmp
add
inc
add
adc
and
add
push
xor
cmp
add
add
and
push
pop
pop
adc
and
inc
add
rcr
cmp
add
add
or
add
sbb
add
and
add
and
add
cmp
or
add
dec
xor
dec
add
add
add
add
add
add
iret
and
add
and
add
add
inc
or
add
inc
add
sbb
mov
add
mov
adc
add
or
add
push
add
pop
push
add
pop
adc
add
add
and
add
sbb
add
add
add
add
cmps
sbb
(bad)
jmp
(bad)
call
pop
add
xor
add
pop
add
add
add
mov
sbb
add
clc
(bad)
jmp
add
dec
add
add
and
add
cmp
add
push
add
add
or
add
aam
add
pop
sbb
add
idiv
call
and
add
sbb
add
nop
add
add
add
or
add
sub
add
add
pop
add
add
sldt
pop
add
pop
adc
add
adc
add
idiv
push
adc
add
adc
add
in
add
xchg
sub
add
push
add
inc
push
add
ins
or
add
sbb
add
push
add
push
push
add
push
add
rcl
add
int
add
das
adc
add
hlt
sbb
add
or
add
inc
sbb
add
push
add
jg
add
cmps
sbb
add
add
pop
and
add
or
add
or
add
pop
add
daa
or
add
add
add
pop
adc
add
add
mov
add
hlt
adc
add
or
add
or
add
add
(bad)
add
add
sbb
(bad)
(bad)
aas
add
add
add
icebp
or
add
add
fwait
pop
add
inc
adc
add
inc
sbb
add
add
add
add
daa
add
mov
add
scas
sbb
add
sub
add
push
add
stos
add
add
add
add
or
add
add
add
adc
add
or
add
sub
add
add
push
adc
add
or
add
sub
add
add
mov
add
add
sbb
add
add
add
outs
pop
add
xor
(bad)
push
and
add
repz
add
add
scas
or
add
clc
(bad)
(bad)
(bad)
add
xchg
add
clc
sbb
add
add
add
sbb
add
add
mov
add
add
adc
add
idiv
(bad)
js
add
aad
add
adc
add
sbb
add
shl
dec
adc
add
adc
add
add
and
add
cmp
add
gs
(bad)
jmp
add
ins
add
add
add
fisubr
add
rcr
add
cdq
idiv
jmp
idiv
jmp
and
add
adc
add
idiv
push
add
push
add
loopne
add
inc
add
add
(bad)
inc
add
jo
add
stos
sbb
add
and
add
pop
add
and
and
add
retf
add
and
add
sbb
add
pop
and
add
sbb
add
add
dec
and
add
idiv
inc
sbb
add
add
xlat
add
add
or
add
adc
add
daa
add
jl
add
(bad)
add
mov
add
pushf
cmc
(bad)
push
or
add
aad
add
jne
add
ja
add
mov
sbb
add
adc
add
and
add
add
daa
add
aaa
or
add
push
or
add
add
push
sbb
add
add
add
cmc
(bad)
jmp
sbb
add
add
pop
idiv
(bad)
in
and
add
add
and
adc
add
add
inc
sldt
imul
add
sub
add
sti
sub
add
add
add
int
add
sbb
add
pop
add
dec
sub
add
add
mov
add
xchg
or
add
push
or
add
add
fcomp
add
fadd
add
adc
add
lods
and
add
pop
add
inc
clc
(bad)
jmp
or
add
push
add
jnp
add
popa
sub
add
add
pop
add
jbe
(bad)
push
pop
add
jl
add
xchg
add
out
add
inc
and
add
adc
add
and
add
or
add
pop
add
outs
sub
add
or
add
sub
add
push
add
call
add
in
and
add
adc
add
daa
add
ds
add
test
(bad)
jmp
or
add
add
push
add
add
sub
add
add
add
add
push
sub
add
add
add
push
add
aaa
sub
add
or
add
add
mov
or
add
and
add
dec
and
add
and
add
or
add
adc
add
add
enter
mov
and
add
fistp
add
sbb
add
cmp
add
add
sti
or
add
add
(bad)
add
add
push
add
cmp
add
or
pop
add
jnp
add
movs
push
add
and
add
add
idiv
dec
or
(bad)
inc
adc
(bad)
(bad)
jle
add
lds
add
sahf
or
add
daa
add
xchg
add
add
scas
adc
add
add
add
aaa
adc
add
push
add
dec
or
add
add
std
add
add
add
sub
add
sbb
(bad)
dec
sbb
add
push
add
push
add
add
push
add
mov
sub
add
add
push
add
add
cmc
(bad)
call
pop
add
les
add
adc
and
add
clc
(bad)
call
clc
(bad)
(bad)
mov
sub
add
adc
add
adc
add
test
(bad)
call
add
add
and
add
dec
xor
cmp
(bad)
(bad)
dec
add
add
push
add
add
add
add
and
add
cmp
stc
(bad)
(bad)
dec
add
and
xor
pushf
and
add
add
daa
stc
(bad)
(bad)
dec
add
or
add
and
add
and
add
pop
pushf
and
add
add
push
xor
cmp
stc
(bad)
call
or
pop
adc
and
add
add
push
xor
cmp
clc
(bad)
(bad)
dec
add
dec
add
add
push
xor
cmp
clc
(bad)
inc
adc
add
jbe
add
dec
xor
cmp
clc
(bad)
(bad)
dec
add
add
add
and
cmp
pushf
and
add
cmp
or
add
or
add
and
add
add
inc
add
add
and
add
add
je
(bad)
(bad)
dec
add
or
add
dec
add
cmp
(bad)
dec
add
and
add
add
and
add
cmp
adc
add
push
xor
cmp
clc
(bad)
(bad)
dec
add
dec
add
add
adc
(bad)
jmp
cwde
add
add
cmp
add
pop
dec
verr
xor
add
cmp
idiv
(bad)
dec
add
and
add
add
push
add
add
and
add
add
in
(bad)
jmp
loop
add
and
add
pop
dec
sbb
add
cmp
idiv
(bad)
dec
add
dec
add
add
push
xor
cmp
cs
cmp
sbb
add
cmp
or
add
push
add
add
sbb
add
and
add
add
and
add
add
jle
(bad)
(bad)
dec
add
and
add
add
inc
add
add
and
add
dec
xor
cmp
(bad)
jmp
or
add
and
add
push
sbb
add
dec
xor
cmp
add
cmp
xor
(bad)
(bad)
dec
add
and
add
add
dec
add
add
and
add
cmp
or
add
sbb
add
dec
add
add
push
xor
pop
cmp
idiv
(bad)
jle
add
add
inc
add
jo
add
add
cmp
sub
add
add
les
add
cmp
idiv
jmp
jno
add
and
add
pop
dec
sbb
add
dec
xor
push
cmp
or
inc
add
add
push
verr
aam
add
dec
xor
cmp
or
add
or
add
dec
add
add
push
xor
pop
cmp
jmp
aaa
add
add
inc
add
add
push
sbb
add
dec
xor
cmp
(bad)
jmp
ins
add
add
add
add
push
sbb
add
cmp
(bad)
(bad)
dec
add
push
add
add
or
add
cmp
idiv
call
adc
adc
mov
(bad)
jmp
rol
add
cmp
idiv
jmp
inc
add
add
inc
add
add
push
sbb
add
cmp
idiv
(bad)
dec
add
and
cmp
add
pop
pushf
and
add
dec
xor
pop
cmp
cmc
(bad)
call
sub
sub
add
and
push
xor
push
cmp
cmc
(bad)
call
adc
and
mov
or
add
add
add
and
add
and
add
add
and
cmc
(bad)
(bad)
dec
add
or
add
dec
add
dec
xor
cmp
loopne
(bad)
(bad)
cmp
(bad)
jmp
stos
add
add
cmp
add
pop
dec
sbb
add
cmp
(bad)
jmp
adc
add
and
add
push
sbb
add
dec
xor
cmp
add
cmp
cmc
(bad)
call
sub
or
adc
xchg
pushf
and
add
add
push
xor
cmp
cmc
(bad)
(bad)
dec
add
dec
add
add
push
xor
pop
cmp
cmc
(bad)
(bad)
dec
add
push
add
add
adc
add
and
add
add
and
add
cmp
hlt
(bad)
jmp
jecxz
add
and
add
pop
dec
sbb
add
cmp
hlt
(bad)
(bad)
cmp
adc
add
adc
js
add
cmp
or
add
sbb
add
dec
add
add
cdq
hlt
(bad)
(bad)
cmp
add
adc
and
add
add
push
xor
cmp
add
cmp
or
add
push
add
add
or
add
dec
xor
cmp
(bad)
(bad)
dec
add
dec
add
add
push
xor
cmp
(bad)
(bad)
dec
add
push
add
add
or
add
cmp
hlt
(bad)
jmp
dec
add
add
and
add
pop
dec
verr
pop
add
add
push
hlt
(bad)
(bad)
dec
add
dec
add
add
push
hlt
(bad)
(bad)
dec
add
add
add
and
sub
pushf
and
add
add
push
xor
cmp
add
cmp
repz
(bad)
cmp
add
adc
and
push
xor
push
cmp
repz
(bad)
dec
add
and
add
add
jl
add
pop
pushf
and
add
dec
xor
cmp
add
cmp
add
add
dec
add
add
push
xor
push
cmp
(bad)
jmp
dec
add
add
sub
add
pop
dec
sbb
add
dec
xor
cmp
(bad)
call
adc
adc
add
lea
add
cmp
(bad)
(bad)
dec
add
sldt
add
or
add
dec
xor
pop
cmp
repz
(bad)
dec
add
and
add
add
pop
add
add
and
push
repz
jmp
cmp
outs
add
add
push
verr
add
push
xor
cmp
add
cmp
repnz
(bad)
dec
add
and
add
and
add
pop
pushf
and
add
cmp
repnz
(bad)
dec
add
or
add
dec
add
dec
xor
cmp
and
pop
add
cmp
jmp
add
and
add
pop
dec
sbb
add
dec
xor
pop
cmp
or
add
or
add
dec
add
cmp
(bad)
jmp
jl
add
and
add
add
push
verr
jnp
add
cmp
(bad)
(bad)
dec
add
and
add
add
dec
add
add
and
add
add
push
xor
cmp
repnz
(bad)
dec
add
and
add
and
add
pop
pushf
and
add
cmp
repnz
call
and
sbb
(bad)
add
add
push
xor
pop
cmp
repnz
(bad)
dec
add
add
add
dec
add
cmp
icebp
(bad)
(bad)
jle
add
add
cmp
add
adc
and
fdiv
(bad)
(bad)
dec
add
dec
add
add
push
xor
cmp
add
cmp
popf
add
add
xor
add
pop
dec
sbb
add
cmp
or
add
add
outs
add
add
bound
add
pop
pushf
and
add
cmp
(bad)
jmp
aam
add
and
add
pop
dec
verr
enter
cmp
(bad)
call
adc
and
add
add
push
xor
cmp
(bad)
(bad)
dec
add
add
add
dec
add
dec
xor
cmp
or
add
push
add
add
or
add
dec
xor
pop
cmp
icebp
(bad)
call
adc
sbb
dec
cld
(bad)
jmp
and
add
(bad)
(bad)
dec
add
and
add
add
and
add
pop
pushf
and
add
cmp
lock
(bad)
dec
add
and
add
and
add
pop
pushf
and
push
xor
cmp
add
cmp
add
cmp
or
add
or
add
dec
add
add
push
xor
pop
cmp
pop
or
adc
xchg
pushf
and
push
xor
pop
cmp
add
add
dec
add
add
push
sbb
add
dec
xor
cmp
and
add
pop
or
add
pop
lock
(bad)
dec
add
and
add
and
add
add
and
add
dec
xor
cmp
and
add
xor
or
add
add
add
dec
add
add
and
(bad)
jmp
in
add
add
dec
add
add
push
sbb
add
cmp
lock
call
adc
ds
add
and
add
add
imul
(bad)
(bad)
dec
add
dec
add
add
(bad)
out
(bad)
call
sub
or
pushf
and
add
cmp
out
(bad)
(bad)
dec
add
dec
add
add
stos
out
(bad)
jmp
rol
add
and
add
add
push
sbb
add
cmp
or
add
pop
add
add
or
add
cmp
(bad)
jmp
cld
add
add
push
add
add
push
sbb
add
dec
xor
cmp
(bad)
jmp
pop
add
add
dec
add
add
push
sbb
add
cmp
jmp
data16
add
sbb
add
pop
dec
sbb
add
dec
xor
pop
cmp
out
(bad)
call
add
bound
add
push
add
add
push
out
(bad)
(bad)
dec
add
add
add
dec
add
cmp
out
(bad)
jmp
rol
add
pop
add
add
push
sbb
add
cmp
out
(bad)
(bad)
dec
add
dec
add
add
aad
(bad)
(bad)
dec
add
or
add
dec
add
dec
xor
cmp
or
add
sbb
xchg
add
add
sub
add
pop
pushf
and
add
cmp
or
add
add
add
dec
add
add
jp
(bad)
(bad)
dec
add
and
add
and
add
pop
pushf
and
add
push
xor
pop
cmp
(bad)
jmp
or
add
and
add
pop
dec
sbb
add
cmp
(bad)
jmp
xchg
add
and
dec
verr
jge
add
cmp
(bad)
jmp
xchg
add
add
cmp
dec
sbb
add
cmp
out
(bad)
jmp
lea
add
and
add
add
push
sbb
add
cmp
in
(bad)
(bad)
dec
add
dec
add
add
loop
(bad)
jmp
inc
add
add
sbb
add
pop
dec
sbb
add
dec
xor
cmp
in
(bad)
(bad)
dec
add
sldt
add
or
add
dec
xor
cmp
adc
add
and
add
pop
dec
verr
adc
add
cmp
or
add
push
add
add
or
add
cmp
(bad)
(bad)
dec
add
and
add
and
add
add
and
add
cmp
(bad)
call
pop
adc
push
add
add
push
xor
push
cmp
in
(bad)
(bad)
dec
add
or
add
and
add
and
add
pop
pushf
and
and
(bad)
(bad)
dec
add
or
add
dec
add
cmp
add
add
sub
add
pop
dec
sbb
add
dec
xor
push
cmp
in
(bad)
jmp
jbe
add
and
add
add
push
sbb
add
cmp
in
(bad)
jmp
retf
add
add
inc
add
add
push
sbb
add
dec
xor
push
cmp
or
add
add
add
dec
add
cmp
or
add
pop
add
add
or
add
dec
xor
cmp
(bad)
(bad)
dec
add
dec
add
add
imul
jmp
add
add
sub
add
pop
dec
sbb
add
dec
xor
cmp
(bad)
call
sub
adc
push
xchg
pushf
and
add
add
cmp
(bad)
jmp
fild
add
and
add
pop
dec
verr
int3
add
add
push
xor
cmp
push
add
cmp
in
(bad)
(bad)
dec
add
and
cmp
add
pop
pushf
and
add
add
push
xor
cmp
jmp
jmp
push
add
add
inc
add
add
push
sbb
add
cmp
jmp
(bad)
dec
add
or
add
dec
add
cmp
jmp
(bad)
dec
add
dec
add
add
scas
jmp
jmp
cmp
add
and
add
pop
dec
sbb
add
cmp
mov
aas
add
add
push
sbb
add
cmp
(bad)
dec
add
or
add
dec
add
dec
xor
cmp
jmp
mov
aas
add
add
push
sbb
add
cmp
(bad)
(bad)
dec
add
dec
add
add
push
xor
cmp
jmp
jmp
pop
add
add
add
add
pop
dec
sbb
add
cmp
jmp
jmp
lock
add
push
add
add
push
sbb
add
cmp
jmp
and
add
add
or
add
cmp
jmp
add
add
add
push
verr
push
add
add
push
xor
cmp
mov
inc
add
add
add
dec
sbb
add
cmp
or
add
add
add
dec
add
add
xchg
(bad)
jmp
mov
add
and
add
pop
dec
sbb
add
cmp
(bad)
(bad)
dec
add
dec
add
add
push
xor
cmp
sbb
clc
(bad)
(bad)
cmp
(bad)
(bad)
dec
add
and
add
and
pushf
and
add
add
xor
(bad)
(bad)
dec
add
dec
add
add
sbb
(bad)
jmp
retf
add
inc
add
add
push
sbb
add
cmp
jmp
add
add
and
cmp
add
pop
pushf
and
add
cmp
jmp
add
add
and
add
pop
dec
sbb
add
dec
xor
cmp
jmp
mov
pop
adc
aaa
add
add
lods
jmp
add
add
pop
add
add
push
sbb
add
cmp
dec
add
add
xor
add
pop
dec
verr
loopne
add
dec
xor
cmp
add
cmp
(bad)
(bad)
dec
add
add
add
and
add
add
inc
add
add
and
push
xor
push
cmp
(bad)
jmp
add
daa
add
add
push
sbb
add
dec
xor
pop
cmp
jmp
add
add
cmp
add
pop
dec
verr
push
add
add
push
jmp
add
mov
add
dec
xor
cmp
jmp
add
add
push
add
add
push
sbb
add
cmp
call
add
add
sub
add
pop
dec
verr
imul
add
push
xor
push
cmp
call
add
add
or
add
pop
dec
sbb
add
dec
xor
cmp
test
(bad)
(bad)
dec
add
dec
add
add
xchg
call
adc
pop
pop
inc
cmp
push
add
add
jg
(bad)
(bad)
dec
add
sldt
add
or
add
dec
xor
push
cmp
(bad)
call
add
push
sbb
add
adc
add
cmp
(bad)
(bad)
cmp
add
adc
adc
popa
adc
and
add
add
push
xor
cmp
call
sub
and
add
add
push
add
add
jb
add
pop
pushf
and
add
cmp
call
adc
sbb
xchg
pop
sbb
and
sbb
pop
loopne
pop
adc
adc
adc
pop
pop
loopne
push
bound
and
sbb
xchg
pusha
adc
and
add
add
push
xor
cmp
sbb
add
(bad)
out
(bad)
dec
add
or
add
and
add
add
dec
add
add
and
add
add
push
xor
pop
cmp
pushf
add
add
xor
add
pop
dec
verr
sahf
add
add
push
xor
cmp
add
out
(bad)
dec
add
dec
add
add
ja
(bad)
(bad)
dec
add
dec
add
add
pop
out
call
cmp
add
and
push
xor
cmp
add
cmp
(bad)
call
adc
ds
(bad)
jmp
das
add
add
push
xor
cmp
add
cmp
add
cmp
out
call
sub
adc
sbb
add
cmp
(bad)
jmp
fild
add
and
add
pop
dec
sbb
add
cmp
out
(bad)
dec
add
push
add
add
or
add
dec
xor
push
cmp
out
jmp
add
add
push
add
add
push
verr
dec
add
add
mov
adc
pop
adc
and
add
add
push
xor
push
cmp
add
add
add
add
push
sbb
add
cmp
and
push
sbb
sbb
add
add
pop
pop
sbb
cmp
and
add
cmp
(bad)
dec
add
and
xor
add
pop
pushf
and
push
xor
cmp
icebp
(bad)
(bad)
cmp
(bad)
(bad)
dec
add
or
inc
add
add
pop
add
add
and
and
(bad)
(bad)
dec
add
and
add
and
add
pop
pushf
and
add
(bad)
(bad)
dec
add
or
add
dec
add
cmp
in
jmp
sub
add
and
add
add
push
sbb
add
cmp
in
jmp
or
add
and
add
pop
dec
sbb
add
cmp
or
add
or
add
dec
add
add
push
xor
pop
cmp
loope
add
and
add
pop
dec
verr
jae
add
cmp
and
push
adc
and
add
add
pushf
and
add
dec
xor
cmp
(bad)
(bad)
dec
add
dec
add
add
dec
in
jmp
ins
add
add
or
add
pop
dec
sbb
add
cmp
sub
and
add
dec
add
dec
xor
cmp
add
add
and
add
add
xor
add
pop
pushf
and
add
cmp
in
jmp
enter
and
add
pop
dec
sbb
add
cmp
in
(bad)
dec
add
or
add
dec
add
add
push
(bad)
(bad)
jmp
and
add
dec
xor
cmp
sbb
add
xchg
(bad)
(bad)
cmp
xchg
add
add
xor
add
pop
dec
verr
push
add
add
push
xor
cmp
pop
add
cmp
(bad)
(bad)
cmp
or
add
or
add
and
xor
add
pop
pushf
and
add
cmp
(bad)
call
adc
adc
add
add
push
xor
cmp
push
in
call
adc
and
add
dec
xor
cmp
(bad)
(bad)
dec
add
dec
add
add
sub
(bad)
call
or
add
mov
add
cmp
in
call
and
bound
and
ins
add
add
or
(bad)
(bad)
dec
add
or
add
dec
add
cmp
jecxz
(bad)
cmp
(bad)
call
and
sub
and
sub
xchg
popa
rcr
cmp
jecxz
(bad)
dec
add
and
cmp
add
pop
pushf
and
mov
(bad)
(bad)
dec
add
and
add
sub
add
pop
pushf
and
add
add
push
xor
cmp
or
add
sbb
add
and
add
add
das
add
add
and
push
xor
pop
cmp
(bad)
(bad)
dec
add
and
add
and
add
add
and
add
cmp
(bad)
call
and
push
sbb
sbb
add
inc
pop
pop
adc
and
sub
(bad)
(bad)
dec
add
or
add
and
add
add
and
add
pop
pushf
and
add
add
push
xor
push
cmp
jecxz
(bad)
dec
add
dec
add
add
cmc
loop
(bad)
dec
add
dec
add
add
push
xor
cmp
add
cmp
or
add
retf
loop
call
sub
movups
sbb
add
add
mov
(bad)
(bad)
jle
add
add
imul
and
add
cmp
aad
add
and
add
pop
dec
sbb
add
dec
xor
cmp
sub
pushf
and
add
dec
xor
cmp
(bad)
(bad)
dec
add
pop
add
add
or
add
cmp
(bad)
(bad)
dec
add
and
xor
add
pop
pushf
and
add
cmp
(bad)
(bad)
dec
add
dec
add
add
and
(bad)
(bad)
dec
add
add
add
and
add
add
pop
add
add
and
add
cmp
loope
(bad)
dec
or
add
cmp
loope
call
adc
and
add
add
call
xchg
add
add
dec
add
add
push
sbb
add
cmp
loope
(bad)
dec
add
add
or
add
cmp
fild
add
and
add
pop
dec
sbb
add
cmp
jle
add
and
add
add
push
verr
xor
add
cmp
(bad)
(bad)
dec
add
or
add
and
add
add
aas
add
add
and
push
xor
cmp
(bad)
(bad)
dec
add
dec
add
add
dec
loope
jmp
adc
add
lea
add
add
push
sub
and
add
add
sub
(bad)
jmp
and
add
and
add
add
push
verr
add
add
cmp
loope
jmp
dec
add
add
dec
add
add
push
sbb
add
dec
xor
cmp
add
cmp
loopne
call
push
adc
pop
cmp
add
adc
add
push
xor
cmp
add
cmp
add
loopne
(bad)
dec
add
and
bound
add
pop
pushf
and
add
cmp
add
add
dec
add
add
push
xor
push
cmp
or
add
adc
add
dec
add
add
ja
(bad)
call
and
pop
adc
and
push
xor
cmp
adc
add
(bad)
loopne
(bad)
cmp
adc
add
and
ds
(bad)
jmp
ja
add
dec
xor
cmp
(bad)
(bad)
dec
add
and
add
add
inc
add
add
and
add
cmp
(bad)
(bad)
dec
add
or
or
add
dec
xor
cmp
(bad)
(bad)
dec
add
dec
add
add
clc
(bad)
(bad)
dec
add
and
add
add
inc
add
add
and
add
cmp
(bad)
jmp
(bad)
add
add
inc
add
add
push
sbb
add
dec
xor
push
cmp
or
add
push
add
add
or
add
cmp
or
add
or
jae
add
and
add
add
and
add
add
push
xor
cmp
adc
add
ja
(bad)
(bad)
dec
add
dec
add
add
push
xor
cmp
adc
add
fwait
stc
(bad)
(bad)
cmp
(bad)
(bad)
dec
add
dec
add
add
push
xor
cmp
or
add
sbb
add
dec
add
add
and
(bad)
jmp
and
add
lea
add
add
push
add
add
cmp
(bad)
(bad)
dec
add
and
add
add
push
add
add
and
push
xor
push
cmp
fdivrp
(bad)
dec
add
dec
add
add
(bad)
(bad)
dec
add
or
add
and
add
and
add
add
and
add
cmp
push
add
add
sub
add
pop
dec
sbb
add
dec
xor
cmp
add
cmp
sbb
(bad)
dec
add
dec
add
add
push
xor
cmp
adc
add
(bad)
fdivrp
(bad)
dec
add
dec
add
add
dec
fdivrp
(bad)
dec
add
add
add
dec
add
dec
xor
push
cmp
or
add
and
add
add
push
verr
add
add
cmp
fdivrp
(bad)
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
dec
add
add
loopne
(bad)
(bad)
dec
add
and
sub
add
pop
pushf
and
push
xor
pop
cmp
(bad)
call
and
add
inc
add
add
mov
(bad)
jmp
(bad)
add
add
inc
add
add
push
sbb
add
dec
xor
cmp
add
cmp
add
add
je
add
pop
dec
sbb
add
dec
xor
pop
cmp
(bad)
jmp
cmp
add
and
add
add
push
sbb
add
cmp
(bad)
(bad)
dec
add
and
add
add
jp
add
pop
pushf
and
add
add
xor
(bad)
jmp
pop
add
add
push
add
add
push
verr
aaa
add
add
sbb
(bad)
(bad)
dec
add
dec
add
add
add
(bad)
jmp
scas
add
add
cmp
add
pop
dec
sbb
add
cmp
fdivr
jmp
jno
add
and
add
add
push
sbb
add
dec
xor
cmp
mov
(bad)
(bad)
cmp
fdivr
jmp
int
add
and
add
push
verr
test
push
xor
cmp
or
add
add
add
and
add
and
add
add
and
add
add
push
xor
push
cmp
add
add
and
sub
add
pop
pushf
and
add
imul
adc
sbb
xchg
pop
sbb
and
sbb
pop
loopne
pop
adc
adc
adc
pop
pop
loopne
push
bound
and
sbb
xchg
pusha
adc
add
xor
(bad)
jmp
dec
add
add
push
add
add
push
verr
and
add
dec
xor
cmp
fdivr
(bad)
dec
add
or
add
dec
add
cmp
(bad)
call
and
test
add
pop
add
add
push
xor
cmp
sldt
cmp
(bad)
(bad)
dec
add
push
add
add
or
add
cmp
(bad)
(bad)
dec
add
push
add
add
or
add
dec
xor
pop
cmp
add
add
sub
dec
verr
xchg
add
cmp
adc
adc
cmp
add
adc
and
js
(bad)
(bad)
dec
add
or
add
dec
add
cmp
(bad)
(bad)
dec
add
add
add
dec
add
dec
xor
cmp
(bad)
call
adc
and
push
xor
cmp
(bad)
(bad)
dec
add
and
add
and
add
pop
pushf
and
add
cmp
(bad)
jmp
mov
add
and
dec
sbb
add
cmp
(bad)
(bad)
dec
add
dec
add
add
jmp
(bad)
(bad)
dec
add
dec
add
add
rcr
(bad)
(bad)
dec
add
and
cmp
pushf
and
add
add
lods
(bad)
(bad)
dec
add
or
add
and
aas
add
add
and
add
add
push
xor
cmp
or
add
or
mov
add
add
and
push
xor
cmp
add
cmp
add
cmp
(bad)
(bad)
dec
add
or
add
and
add
and
add
add
and
cmp
or
add
sbb
add
dec
add
add
and
or
add
sub
repz
add
sbb
or
add
sbb
fwait
add
add
xor
add
pop
pushf
and
add
cmp
fcos
jmp
pushf
add
add
xor
add
pop
dec
verr
pop
add
add
fstp
(bad)
jmp
jo
add
and
add
pop
dec
verr
stos
add
add
(bad)
fcos
(bad)
dec
add
or
add
and
add
add
dec
add
add
and
add
cmp
sub
mov
scas
add
add
push
xor
cmp
add
add
cmp
add
pop
dec
sbb
add
cmp
(bad)
jmp
push
add
add
jnp
add
pop
dec
sbb
add
cmp
(bad)
(bad)
dec
add
and
add
cmp
add
pop
pushf
and
add
cmp
(bad)
(bad)
dec
add
dec
add
add
das
fcos
jmp
or
add
and
add
push
verr
out
add
add
push
fcos
call
and
add
adc
jl
add
dec
xor
pop
cmp
fdivr
(bad)
dec
add
add
add
dec
add
cmp
fdivr
(bad)
dec
add
and
add
and
add
add
and
add
add
push
xor
cmp
or
add
imul
add
mov
(bad)
jmp
inc
add
add
cmp
dec
sbb
add
cmp
or
add
adc
add
dec
add
add
xchg
(bad)
(bad)
dec
add
push
add
add
or
add
cmp
(bad)
(bad)
dec
add
dec
add
add
push
xor
pop
cmp
(bad)
(bad)
dec
add
dec
add
add
xor
(bad)
call
add
and
and
pop
pop
xchg
pusha
adc
and
add
add
push
xor
cmp
fdivr
(bad)
dec
add
and
add
and
add
pop
pushf
and
add
add
repz
(bad)
(bad)
dec
add
and
add
add
push
add
add
and
add
cmp
xlat
(bad)
call
pop
adc
pop
add
add
push
xor
cmp
xlat
(bad)
(bad)
dec
add
add
add
and
add
and
pushf
and
add
dec
xor
cmp
or
add
pop
add
add
or
add
cmp
sbb
sbb
outs
add
add
push
xor
cmp
(bad)
dec
add
dec
add
add
push
xor
pop
cmp
(bad)
(bad)
cmp
add
add
push
adc
and
add
add
inc
xlat
(bad)
jmp
stos
add
add
cmp
add
pop
dec
verr
data16
add
push
xor
push
cmp
xlat
(bad)
(bad)
dec
add
or
sbb
add
and
add
add
and
add
cmp
xlat
(bad)
(bad)
dec
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
dec
add
or
pop
add
add
push
add
pop
pushf
and
add
add
push
xor
cmp
(bad)
(bad)
call
sub
pop
adc
and
rcl
(bad)
dec
add
sldt
add
rol
add
inc
add
add
and
add
cmp
pop
adc
popa
adc
and
push
xor
push
cmp
or
add
or
or
add
dec
xor
cmp
(bad)
(bad)
dec
add
and
add
add
add
add
and
dec
(bad)
(bad)
(bad)
dec
add
or
add
dec
add
cmp
(bad)
(bad)
call
adc
pop
adc
and
add
add
and
(bad)
call
pop
adc
and
repz
dec
sbb
dec
pop
add
sbb
push
or
and
pushf
ror
dec
sub
and
dec
add
dec
or
and
inc
xchg
sub
push
sub
jo
dec
add
or
sbb
push
or
and
sbb
sbb
sbb
sbb
push
sbb
and
pop
add
dec
add
or
add
push
or
dec
add
or
add
push
sub
dec
add
or
add
push
or
dec
add
inc
inc
pop
dec
and
add
add
add
pop
dec
daa
add
or
add
dec
add
bound
or
add
push
and
add
or
add
adc
push
or
and
cmp
push
push
push
add
or
add
push
dec
push
add
or
add
or
add
dec
add
dec
sub
add
or
add
bound
push
pop
add
or
add
or
add
push
pop
add
or
add
or
add
sbb
popa
dec
pop
add
or
add
or
add
push
pop
add
or
add
or
add
or
push
pop
add
or
add
or
add
push
pop
add
or
add
push
(bad)
dec
add
or
add
or
add
push
pop
add
or
add
ins
pop
adc
and
cmps
aam
(bad)
dec
add
and
add
and
add
add
and
add
add
xchg
(bad)
(bad)
dec
add
and
add
and
add
add
and
push
xor
push
cmp
(bad)
(bad)
dec
add
or
add
dec
add
dec
xor
push
cmp
(bad)
call
push
cmp
add
and
xor
or
add
adc
add
dec
add
add
adc
sub
cmp
dec
sbb
add
dec
xor
cmp
sar
jmp
jecxz
add
and
add
pop
dec
verr
lahf
add
add
push
xor
cmp
sar
call
adc
out
(bad)
jmp
add
add
rcl
(bad)
(bad)
dec
add
or
add
dec
add
dec
xor
cmp
or
add
and
add
pop
dec
sbb
add
dec
xor
cmp
mov
mov
(bad)
call
adc
and
add
add
push
xor
push
cmp
(bad)
(bad)
dec
add
and
add
add
dec
add
add
and
add
pop
sar
(bad)
dec
add
and
add
add
push
add
add
and
add
add
aaa
sar
(bad)
dec
add
dec
add
add
push
xor
cmp
sar
(bad)
dec
add
dec
add
add
add
(bad)
jmp
popa
add
add
adc
add
pop
dec
sbb
add
cmp
sar
(bad)
dec
add
and
add
add
dec
add
add
and
add
add
rcl
(bad)
(bad)
dec
add
or
add
and
add
and
add
add
and
add
cmp
cmp
push
add
add
add
cmp
jge
add
and
dec
sbb
add
dec
xor
cmp
jno
(bad)
(bad)
cmp
(bad)
(bad)
dec
add
add
iret
add
add
inc
add
add
and
add
add
pop
sar
(bad)
dec
add
and
adc
add
pop
pushf
and
add
add
push
xor
cmp
add
sub
(bad)
(bad)
dec
add
dec
add
add
sbb
(bad)
jmp
cmp
add
and
add
pop
dec
verr
ja
add
cmp
sar
call
add
cmp
add
push
push
cmp
add
and
(bad)
(bad)
(bad)
jle
add
add
and
inc
add
add
push
xor
pop
cmp
sar
call
sbb
pop
adc
and
add
add
mov
or
add
adc
sub
add
and
add
add
and
add
add
mov
outs
add
add
add
dec
verr
push
adc
add
add
push
add
add
push
sbb
add
cmp
(bad)
(bad)
dec
add
dec
add
add
push
sar
(bad)
dec
add
and
add
add
dec
add
add
and
push
xor
cmp
inc
int
(bad)
cmp
sar
(bad)
dec
add
dec
add
add
adc
(bad)
jmp
cmp
add
and
add
pop
dec
verr
jl
add
dec
xor
cmp
sar
jmp
fadd
add
and
add
pop
dec
verr
xchg
add
add
push
xor
cmp
add
in
(bad)
cmp
sar
(bad)
dec
add
dec
add
add
mov
(bad)
(bad)
dec
add
or
add
and
add
add
jl
add
pop
pushf
and
add
add
push
xor
cmp
or
add
or
add
dec
add
add
push
xor
cmp
(bad)
dec
add
and
add
add
push
add
add
and
push
xor
cmp
dec
sar
jmp
lea
add
and
add
pop
dec
sbb
add
dec
xor
cmp
sub
(bad)
call
and
adc
(bad)
out
(bad)
jmp
mov
add
dec
xor
cmp
sar
jmp
leave
add
add
inc
add
add
push
verr
and
push
xor
cmp
add
movs
loopne
(bad)
cmp
iret
(bad)
call
adc
sbb
pop
inc
mov
(bad)
jmp
outs
add
add
push
xor
pop
cmp
iret
(bad)
jmp
fadd
add
and
add
pop
dec
sbb
add
cmp
or
add
sbb
add
and
add
add
pop
add
add
and
add
cmp
or
add
or
or
add
dec
xor
push
cmp
(bad)
(bad)
dec
add
and
cmp
pushf
and
add
add
push
xor
cmp
add
add
push
iret
(bad)
(bad)
dec
add
pop
add
add
or
add
cmp
(bad)
(bad)
dec
add
and
add
add
dec
add
add
and
add
cmp
pusha
add
add
and
add
pop
dec
sbb
add
cmp
(bad)
jmp
jge
add
and
add
add
push
verr
fiadd
add
dec
xor
cmp
fmulp
(bad)
call
adc
pop
adc
and
add
cmp
into
(bad)
(bad)
cmp
add
jle
add
add
sbb
add
sldt
add
push
add
add
sldt
add
loop
(bad)
jmp
dec
add
push
cmp
(bad)
(bad)
jmp
dec
add
push
cmp
(bad)
(bad)
call
pop
fisttp
add
fld
add
add
add
jo
adc
sub
dec
add
push
cmp
(bad)
jmp
dec
add
push
cmp
dec
add
push
cmp
inc
add
push
cmp
retf
(bad)
jmp
dec
add
push
cmp
inc
add
push
cmp
inc
add
push
cmp
dec
add
push
cmp
dec
add
push
cmp
int
jmp
dec
add
push
cmp
(bad)
jmp
cmp
add
cmp
add
push
cmp
aas
add
push
cmp
dec
add
push
cmp
aad
jmp
inc
add
push
cmp
(bad)
jmp
dec
add
push
cmp
cmp
add
cmp
(bad)
(bad)
push
add
or
in
(bad)
(bad)
jmp
dec
add
push
cmp
(bad)
jmp
dec
add
push
cmp
(bad)
push
add
or
pop
fcos
jmp
dec
add
push
cmp
dec
add
push
cmp
add
push
cmp
add
push
cmp
fcos
jmp
dec
add
push
cmp
dec
add
push
cmp
dec
add
push
cmp
dec
add
push
cmp
dec
add
push
cmp
dec
add
push
cmp
fdivr
jmp
dec
add
push
cmp
(bad)
jmp
dec
add
push
cmp
(bad)
jmp
dec
add
push
cmp
(bad)
jmp
dec
add
push
cmp
loop
jmp
dec
add
push
cmp
(bad)
jmp
dec
add
push
cmp
dec
add
push
cmp
(bad)
jmp
inc
add
push
cmp
add
push
cmp
in
jmp
dec
add
push
cmp
(bad)
jmp
cmp
mov
(bad)
jmp
dec
add
push
cmp
add
push
cmp
dec
add
push
cmp
(bad)
jmp
dec
add
push
cmp
out
jmp
dec
add
push
cmp
out
jmp
dec
add
push
cmp
(bad)
jmp
dec
add
push
cmp
(bad)
jmp
dec
add
push
cmp
jmp
dec
add
push
cmp
dec
add
push
cmp
jmp
(bad)
jmp
dec
add
push
cmp
add
push
cmp
jmp
jmp
dec
add
push
cmp
in
(bad)
jmp
dec
add
push
cmp
in
(bad)
jmp
dec
add
push
cmp
dec
add
push
cmp
in
(bad)
jmp
dec
add
push
cmp
dec
add
push
cmp
(bad)
jmp
dec
add
push
cmp
lock
jmp
inc
add
push
cmp
dec
add
push
cmp
inc
add
push
cmp
(bad)
jmp
dec
add
push
cmp
repz
jmp
dec
add
push
cmp
dec
add
push
cmp
jmp
dec
add
push
cmp
stc
(bad)
jmp
dec
add
push
cmp
(bad)
jmp
dec
add
push
cmp
cmp
add
cmp
cmp
add
cmp
dec
add
push
cmp
jmp
dec
add
push
cmp
dec
add
push
cmp
sti
(bad)
jmp
dec
add
push
cmp
(bad)
jmp
dec
add
push
cmp
(bad)
jmp
dec
add
push
cmp
(bad)
jmp
dec
add
push
cmp
(bad)
jmp
dec
add
push
cmp
jmp
add
add
add
add
bound
pop
add
add
xor
add
add
adc
or
das
fs
adc
call
add
jo
out
add
or
add
jo
add
or
aad
add
push
push
push
mov
lock
or
inc
sub
sub
push
sub
push
sub
add
or
add
and
add
add
add
sub
sub
fs
adc
call
pop
add
or
push
add
add
fld
add
add
add
add
add
push
add
sbb
push
pop
add
add
xor
add
add
cmp
or
orps
cmp
call
add
add
and
add
jb
add
jo
lea
add
add
push
push
ror
add
sub
add
or
add
add
and
add
mov
add
adc
lea
add
add
pop
push
add
pop
pop
add
add
je
add
add
add
add
xor
pop
add
add
add
adc
or
mov
add
es
sub
add
add
add
or
loope
add
cmp
add
add
je
add
add
add
or
fst
add
add
push
add
add
fld
add
add
je
add
add
add
or
add
or
add
or
add
jo
add
add
loopne
add
sub
add
or
sub
add
add
add
outs
repnz
or
add
or
add
or
add
jo
add
add
loopne
add
or
outs
add
add
push
add
add
fld
add
add
outs
loop
add
jb
add
jo
jecxz
add
add
lea
add
add
add
or
add
or
loope
add
cmp
add
add
outs
loop
add
jb
add
jo
jecxz
add
add
lea
add
add
add
or
add
or
fst
add
add
push
add
add
fld
add
add
add
jo
push
sub
add
add
add
push
add
cmp
push
pop
add
add
add
add
add
pop
add
add
add
push
pop
add
add
xor
add
add
sub
sub
add
call
pop
pop
jae
add
or
push
or
outs
hlt
add
or
adc
or
sbb
add
pop
push
or
add
out
add
adc
or
add
add
add
cmp
fisttp
cmp
add
add
outs
retf
or
push
sub
add
adc
add
add
add
push
add
adc
add
add
add
adc
or
fcom
call
add
or
sub
add
push
or
pop
and
and
add
call
test
or
pop
adc
and
add
call
out
add
or
pop
outs
jmp
jae
add
or
add
add
add
or
add
or
outs
js
add
or
adc
add
adc
add
add
adc
or
(bad)
rol
push
push
call
adc
add
adc
add
add
adc
or
aaa
push
dec
popa
adc
call
adc
add
inc
add
add
add
adc
or
pop
iret
jg
adc
call
add
jo
push
outs
mov
add
push
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
xor
inc
add
add
add
adc
or
xchg
es
adc
call
add
jo
push
outs
mov
add
push
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
xor
inc
add
add
add
adc
or
cmp
push
call
add
jo
push
outs
mov
add
push
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
xor
inc
add
add
add
adc
or
jns
outs
outs
adc
call
add
jo
push
outs
mov
add
push
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
xor
inc
add
add
add
adc
or
pop
xchg
adc
push
call
add
jo
push
outs
mov
add
push
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
xor
inc
add
add
add
adc
or
jmp
es
sub
add
push
outs
mov
add
push
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
xor
inc
add
add
add
adc
or
pop
mov
call
add
jo
push
outs
mov
add
push
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
xor
inc
add
add
add
adc
or
jns
ss
push
call
add
jo
push
outs
mov
add
push
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
sub
sub
push
call
add
or
add
jb
or
std
clc
push
es
sub
add
or
add
add
or
add
add
or
sub
call
add
outs
or
add
sub
add
jb
or
nop
jae
pop
adc
call
add
dec
add
outs
or
add
sub
add
sub
sub
jg
pop
adc
call
or
add
pop
add
or
add
bound
or
int
xor
push
call
add
outs
hlt
add
or
add
add
or
fwait
bnd
adc
call
add
dec
add
outs
or
add
sub
add
bound
or
stos
cli
add
adc
call
add
outs
or
add
add
or
and
inc
inc
adc
call
or
add
push
add
or
add
bound
or
movs
retf
dec
cmp
push
sub
add
add
or
add
add
or
ror
push
adc
call
add
outs
sgdtd
or
add
add
or
imul
push
call
and
add
sub
add
or
je
jl
adc
call
add
dec
add
outs
adc
add
sub
add
sub
sub
mov
push
adc
call
add
dec
add
dec
add
outs
xlat
add
or
add
add
mov
call
add
dec
add
dec
add
dec
add
outs
jmp
add
sub
add
bound
or
xlat
out
push
push
call
add
outs
adc
add
sub
add
bound
or
idiv
sbb
push
call
add
outs
js
add
sub
add
bound
or
xchg
adc
adc
call
add
outs
jp
add
sub
add
jbe
or
mov
call
or
add
or
add
jno
add
sub
add
or
xchg
dec
and
es
sub
add
or
add
xchg
sub
sub
imul
sub
add
or
add
or
add
or
add
add
or
add
add
or
pop
cld
push
inc
adc
call
add
add
or
or
ins
pop
adc
call
add
add
or
inc
mov
ins
adc
call
add
push
add
stc
add
or
add
or
pop
add
pop
adc
call
add
push
add
add
or
add
xor
add
add
add
add
sub
sub
icebp
pop
ss
call
add
add
repnz
or
add
or
jns
add
and
add
push
sub
add
and
daa
add
push
sub
add
or
or
add
sub
add
cmp
(bad)
(bad)
jmp
adc
add
add
add
adc
or
in
mov
sub
add
add
add
or
push
or
and
and
add
call
sub
add
or
outs
in
add
or
and
jae
add
or
add
and
add
adc
test
or
add
add
adc
add
or
jae
add
or
push
adc
pop
push
pop
mov
jmp
add
adc
outs
jp
add
adc
js
add
sub
add
sub
push
or
iret
sub
call
add
push
add
add
or
add
xor
add
add
add
add
sub
sub
mov
inc
adc
call
add
add
pop
add
add
sbb
cmp
add
push
sub
add
or
fld
add
sub
add
cmp
add
add
adc
add
outs
adc
sbb
add
sub
add
outs
adc
push
add
sub
add
push
outs
push
add
or
push
add
add
fld
add
add
add
add
sub
add
add
add
aaa
imul
pop
add
add
add
add
add
add
or
push
xor
push
call
add
push
add
add
or
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
pop
add
add
and
add
add
and
jb
outs
addr16
add
add
js
add
add
add
inc
push
ins
inc
add
add
js
add
add
add
push
push
add
add
add
inc
ins
outs
jo
add
call
add
inc
push
dec
inc
add
add
adc
add
inc
ins
outs
bound
add
add
add
add
add
push
mov
cmp
add
add
cmps
add
add
add
mov
add
add
add
sub
add
mov
add
add
add
or
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
(bad)
inc
add
add
add
add
inc
add
add
push
add
add
push
add
add
jbe
push
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
push
add
rol
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
push
add
add
jl
adc
aad
in
add
push
add
add
push
add
add
or
add
or
add
add
or
or
add
or
add
or
add
add
or
add
push
add
add
or
add
add
or
add
or
push
add
or
add
or
or
add
rol
push
add
add
fisttp
jmp
add
push
ret
add
ret
add
ret
add
add
push
jl
push
add
jl
push
add
ret
add
ret
add
add
cmpps
adc
add
ret
add
add
add
add
adc
add
jl
push
add
jl
push
add
adc
add
adc
add
add
jl
push
add
add
jl
out
add
add
adc
clts
add
adc
clts
add
push
add
add
add
add
add
add
push
ret
add
add
push
adc
add
pop
jl
or
jmp
and
push
add
add
and
push
es
or
add
sbb
jae
add
push
add
add
add
add
add
add
add
add
add
push
push
add
mov
xchg
sub
add
sub
sub
add
xchg
sub
add
sub
add
add
in
add
(bad)
or
add
sub
add
add
adc
add
add
add
sub
adc
movs
adc
movs
adc
movs
adc
xchg
sub
add
sub
das
sub
xor
add
xchg
sub
add
xchg
sub
add
xchg
sub
add
cs
add
das
xchg
sub
add
add
add
add
add
add
xor
add
xor
add
xor
add
push
add
add
add
xor
xor
add
xor
xor
xchg
sub
add
add
xchg
sub
add
ss
push
add
ss
sbb
add
add
aaa
adc
adc
les
fstp
adc
repz
adc
or
inc
or
add
cmp
cmp
cmp
add
add
push
adc
xchg
fwait
cmp
add
add
cmp
add
cmp
add
add
inc
or
add
cmp
adc
inc
cmp
or
pusha
cmp
push
add
rol
push
add
mov
add
cmp
add
cmp
add
cmp
add
add
add
add
jbe
push
add
cmp
mov
add
add
add
add
add
add
add
add
add
add
add
add
leave
add
add
add
add
add
add
inc
add
add
add
add
adc
xchg
add
add
add
add
add
push
add
add
add
add
or
sbb
add
add
add
or
sub
add
add
hlt
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
jno
add
add
or
push
add
add
add
push
add
add
add
jne
pop
add
bound
pop
add
add
add
add
add
retf
add
add
add
rol
add
add
add
mov
add
add
add
add
add
fiadd
add
adc
inc
push
add
pop
add
fiadd
add
add
push
push
addr16
pop
add
fadd
add
add
jp
add
imul
add
adc
lea
mov
add
add
add
or
add
add
jecxz
add
pop
add
add
add
add
pop
add
add
adc
add
dec
pop
add
add
adc
add
ins
pop
add
add
adc
add
mov
add
add
add
add
cmps
pop
add
pop
add
adc
add
adc
aad
call
add
add
pop
add
test
jnp
push
add
add
add
or
pop
add
sbb
add
or
add
xchg
add
add
or
add
xchg
add
add
or
add
xchg
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
cdq
add
add
add
hlt
or
add
call
add
or
add
add
add
add
add
add
adc
add
je
add
add
adc
add
sub
add
add
adc
add
dec
pop
add
add
adc
add
xchg
or
add
add
add
add
add
add
add
or
add
add
loop
xor
push
or
add
add
add
or
add
add
add
add
add
fwait
or
test
pop
add
add
add
or
fisttp
pop
push
mov
add
jo
mov
add
test
mov
push
mov
push
ret
add
add
mov
ret
add
add
push
ret
add
add
push
mov
add
push
mov
add
push
leave
add
add
push
pusha
add
add
movnti
add
or
ret
add
add
shufps
add
movnti
add
sub
add
bswap
add
add
ret
add
add
aam
add
outs
psubusw
add
jg
ret
add
add
add
add
add
minps
add
fimul
mov
psubsw
add
sti
cmpxchg
add
push
adc
add
add
adc
adc
add
add
adc
adc
add
add
mov
add
dec
adc
add
pop
adc
add
pop
sbb
outs
adc
add
add
ret
add
add
aam
add
jb
fld
add
test
add
add
add
ret
add
add
add
add
add
add
adc
push
sbb
sub
add
adc
xchg
sbb
pop
push
repz
add
mov
add
or
add
add
push
ret
add
add
push
mov
add
hlt
adc
out
or
stc
or
adc
push
lods
or
add
add
cmps
or
add
or
add
add
inc
or
or
add
add
out
or
stc
or
adc
push
mov
adc
or
adc
add
out
or
stc
or
or
mov
or
push
add
add
jnp
adc
dec
push
mov
push
xchg
or
add
add
add
mov
adc
push
push
mov
push
mov
push
sahf
or
add
push
mov
push
mov
add
mov
adc
lahf
push
ret
add
add
mov
or
stc
or
add
add
push
ret
add
add
push
ret
add
add
adc
fsubr
cwde
or
add
das
pushf
or
add
xor
xor
xor
xor
xor
xor
add
add
mov
xor
xor
xor
add
add
mov
add
add
add
add
add
add
add
xor
or
add
xor
or
add
xor
xor
xor
xor
add
add
xor
xor
add
add
xor
xor
xor
add
add
xor
add
add
ret
add
add
or
add
mov
ss
add
add
ss
or
iret
ss
add
add
aaa
lods
or
mov
adc
pop
aaa
mov
adc
jb
mov
aaa
ror
or
(bad)
or
retf
or
or
push
sbb
and
and
add
add
add
add
xchg
add
or
add
add
add
sbb
and
and
add
add
add
add
and
add
add
add
add
and
add
add
sbb
or
add
add
and
add
add
or
or
add
add
and
add
add
or
add
add
add
or
adc
push
or
add
pop
and
add
add
or
push
add
add
adc
push
pop
add
add
xchg
add
add
add
and
add
add
add
add
and
add
add
or
and
add
or
push
or
call
add
add
add
or
and
add
call
and
push
sbb
and
and
inc
add
retf
add
add
add
or
inc
add
add
add
or
add
or
add
add
add
xchg
or
add
add
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
or
add
add
add
or
xchg
add
or
add
add
daa
add
or
xchg
add
or
add
add
add
or
inc
add
retf
add
add
add
add
test
add
add
add
add
add
add
xchg
or
add
add
daa
add
or
adc
stc
or
add
add
add
or
add
or
push
add
add
add
or
push
sbb
and
sub
add
add
add
add
xchg
add
or
mov
add
or
xchg
add
enter
or
xchg
add
(bad)
add
add
sub
add
add
add
add
sub
add
add
or
cmp
add
inc
sub
add
add
sbb
and
sub
add
add
add
add
add
add
add
add
add
or
cmc
add
add
push
or
or
add
add
sub
add
add
or
or
cld
sub
add
add
or
or
sbb
add
or
push
or
push
add
add
add
add
or
add
add
or
push
or
push
xchg
add
add
push
or
push
mov
sub
add
add
sbb
test
add
jl
add
or
xchg
add
push
(bad)
add
add
add
add
add
push
sbb
and
sub
inc
add
add
add
or
add
add
add
or
fs
adc
add
add
xor
add
add
adc
add
add
add
add
adc
xor
add
add
add
dec
add
add
add
or
inc
add
push
add
add
add
add
adc
add
add
xor
add
add
adc
add
add
add
add
adc
add
add
adc
add
add
inc
add
adc
add
add
add
or
add
add
add
add
or
add
or
add
out
or
cmp
inc
or
add
add
add
int
jnp
add
fs
or
inc
or
adc
add
mov
add
or
inc
or
adc
add
mov
add
or
enter
les
add
or
inc
or
adc
add
add
add
or
inc
or
adc
add
add
add
or
inc
or
out
add
adc
add
or
inc
or
cmc
add
add
add
or
inc
or
add
add
add
or
inc
or
add
inc
or
add
add
or
add
aas
add
or
push
or
add
aas
add
or
push
or
add
add
or
push
or
add
add
or
add
mov
add
add
add
leave
adc
add
add
or
add
rcl
mov
inc
add
or
add
fst
sbb
add
mov
add
add
or
adc
add
xchg
inc
add
or
push
or
adc
add
mov
add
add
or
adc
add
add
add
or
adc
add
add
add
or
push
or
adc
add
add
push
or
add
add
push
or
enter
loopne
add
or
push
or
aam
add
int3
inc
add
or
add
outs
adc
add
add
inc
add
or
add
jns
mov
inc
add
or
add
test
add
add
add
or
add
(bad)
adc
add
add
add
or
add
call
dec
add
or
add
movs
adc
add
add
add
add
or
add
add
add
or
adc
lods
dec
add
or
push
or
add
dec
add
or
push
or
adc
mov
add
or
add
stc
or
loopne
add
or
add
adc
dec
add
or
add
add
in
add
add
dec
add
or
add
or
add
dec
add
or
add
lea
cmp
add
or
add
pop
push
and
add
add
add
adc
add
add
add
inc
pop
jmp
push
add
or
add
and
inc
add
add
or
add
hlt
adc
add
add
or
add
test
bound
add
or
add
mov
ins
add
add
or
add
ror
in
add
or
add
fisttp
sub
add
add
adc
pushf
add
add
or
add
sbb
movs
add
add
or
add
inc
push
push
add
add
push
add
or
add
dec
push
jnp
add
adc
add
add
push
push
leave
add
add
or
add
pop
push
rol
add
or
add
ja
jmp
push
add
or
add
adc
lock
add
or
add
mov
std
add
add
or
add
xchg
push
or
add
push
push
add
or
add
lahf
push
mov
add
jl
add
or
add
test
add
add
mov
sbb
push
add
or
add
rcl
sub
add
or
add
add
fist
xor
add
sub
add
or
add
in
cmp
add
fcom
add
add
cli
push
push
push
add
add
add
or
add
add
pop
push
add
rcr
add
add
sbb
je
add
hlt
pop
add
or
add
and
jge
add
and
add
or
add
sub
add
add
or
add
aaa
pop
test
add
rcr
add
add
inc
pop
nop
push
add
clc
pop
add
or
add
dec
pop
call
add
add
pop
pop
scas
push
add
fcomp
add
add
je
mov
pop
add
or
add
jle
mov
add
or
add
mov
rol
add
js
add
or
add
xchg
pop
loop
add
cmp
add
add
pushf
pop
add
pop
add
or
xchg
add
add
xchg
add
add
add
add
add
pop
add
or
xchg
add
sbb
pop
add
in
pop
add
or
xchg
add
sbb
pop
add
or
add
add
add
add
add
or
xchg
add
sbb
add
add
pop
add
or
xchg
add
pop
add
pusha
pop
add
or
xchg
add
add
add
add
add
pop
add
cwde
pop
add
or
xchg
add
add
add
pop
add
fcomp
add
add
pop
add
clc
pop
add
or
xchg
add
sbb
add
add
add
or
xchg
add
sbb
pop
add
xor
add
add
pop
add
push
pop
add
or
xchg
add
sbb
pop
add
ins
pop
add
or
xchg
add
sbb
pop
add
mov
add
add
pop
add
lods
pop
add
or
xchg
add
xor
add
int3
pop
add
or
xchg
add
arpl
add
call
add
pop
add
or
add
add
pop
add
and
add
add
pop
add
inc
pusha
add
or
xchg
add
add
add
or
xchg
add
sbb
add
add
add
add
pop
add
xchg
pusha
add
or
xchg
add
pop
add
add
add
pop
add
int3
pusha
add
or
xchg
add
sbb
pusha
add
or
xchg
add
jp
add
or
add
add
add
add
add
or
xchg
add
inc
pop
add
inc
popa
add
or
xchg
add
add
add
or
xchg
add
add
add
add
pop
add
cwde
popa
add
or
xchg
add
sbb
pop
add
mov
add
or
xchg
add
sbb
popa
add
or
xchg
add
sbb
pop
add
clc
popa
add
or
xchg
add
sbb
bound
add
add
pop
add
cmp
add
or
xchg
add
sbb
add
add
add
or
xchg
add
add
add
add
add
pop
add
mov
add
add
add
xchg
add
add
bound
add
add
pop
add
sbb
add
or
xchg
add
sbb
pop
add
dec
arpl
add
add
pop
add
and
or
xchg
add
sbb
pop
add
mov
add
or
xchg
add
sbb
add
add
arpl
add
add
pop
add
cld
arpl
add
add
pop
add
sub
or
xchg
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
pop
add
movs
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
xchg
add
sbb
or
add
add
add
pop
add
jl
add
or
push
sbb
and
data16
or
inc
add
add
add
adc
add
add
push
fs
adc
add
add
push
add
add
adc
add
add
inc
add
add
add
add
adc
add
add
inc
add
loopne
add
or
inc
add
adc
add
add
adc
add
add
ins
add
or
inc
add
add
add
inc
or
add
les
add
add
mov
add
ins
add
or
inc
or
adc
add
lods
outs
add
or
inc
or
adc
add
aam
add
or
inc
or
adc
add
call
add
or
enter
or
add
or
inc
or
adc
add
add
outs
add
or
inc
or
adc
add
add
add
add
pop
adc
add
add
add
or
inc
or
cmc
add
add
inc
or
add
add
add
test
out
add
add
outs
add
or
inc
or
add
outs
add
or
push
or
add
add
or
push
or
inc
jo
add
add
or
add
add
or
push
or
add
add
or
add
mov
push
add
add
add
mov
add
jno
add
add
leave
adc
add
add
rcl
sbb
add
call
add
fst
pop
add
add
jae
add
add
or
adc
je
add
add
or
adc
add
add
add
add
or
adc
add
add
add
add
or
adc
add
add
add
or
adc
add
add
ja
add
add
or
add
add
add
stc
or
add
add
add
or
fild
add
jp
add
add
out
or
mov
add
or
add
stc
or
fdivr
add
add
adc
jl
add
add
add
adc
add
or
add
or
add
add
add
add
adc
add
add
add
inc
pop
jmp
jge
add
add
lea
int3
jge
add
add
pop
push
push
add
add
or
add
and
bound
add
or
add
hlt
adc
mov
add
add
test
js
add
loopne
add
or
add
mov
xchg
add
add
or
add
ror
pop
jg
add
add
fisttp
mov
add
adc
push
add
add
jg
add
add
sbb
jnp
add
adc
add
inc
push
leave
add
add
or
add
dec
push
rol
add
or
add
push
push
jmp
add
or
add
pop
push
cmc
add
add
or
add
ja
std
add
add
or
add
adc
loopne
add
or
add
mov
mov
add
or
add
xchg
push
adc
add
inc
add
or
add
lahf
push
sbb
add
or
add
test
add
add
mov
xor
add
mov
add
rcl
cmp
add
push
test
add
add
fist
push
push
add
add
add
push
pop
push
add
inc
xchg
add
add
cli
push
je
add
push
add
add
jge
add
cwde
xchg
add
add
sbb
clc
add
add
add
and
test
add
adc
add
or
add
sub
add
add
or
add
aaa
pop
call
add
add
inc
pop
scas
push
add
cmp
add
or
add
dec
pop
mov
mov
add
add
pop
pop
mov
add
or
add
je
rol
add
fmul
add
jle
loop
add
mov
add
mov
add
mov
add
add
pop
add
cld
mov
add
add
add
add
mov
add
add
add
add
add
or
xchg
add
sbb
push
mov
add
add
add
add
add
or
xchg
add
push
add
add
xchg
add
push
xor
add
lods
mov
add
add
pop
add
enter
or
xchg
add
pop
add
add
mov
add
add
pop
add
add
add
adc
add
sbb
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
push
xor
add
cwde
mov
add
add
pop
add
mov
add
pop
add
fmul
add
pop
adc
add
hlt
mov
add
add
or
add
lea
add
add
pop
add
xor
xchg
add
pop
or
add
add
add
pop
add
push
add
pop
add
mov
xchg
add
add
add
add
add
lea
add
add
pop
add
in
add
or
xchg
add
add
add
or
xchg
add
pop
jmp
add
sub
add
or
xchg
add
pop
pop
add
add
add
or
xchg
add
pop
pop
add
add
add
add
or
add
add
or
add
xchg
add
and
mov
add
add
add
add
mov
add
add
pop
add
sbb
add
or
xchg
add
jne
add
inc
pop
add
add
pop
add
je
add
or
xchg
add
add
xchg
add
add
pop
add
add
add
add
pop
add
add
pop
add
and
add
or
xchg
add
and
pop
add
push
nop
add
or
xchg
add
and
add
add
add
add
or
add
xchg
add
and
nop
add
or
xchg
add
and
pop
add
in
add
or
xchg
add
add
add
xchg
add
or
xchg
add
repz
add
xor
add
or
xchg
add
inc
add
je
add
or
xchg
add
add
xchg
add
add
xchg
add
or
push
sbb
and
xchg
add
or
push
add
and
add
add
add
adc
rcl
add
adc
add
add
inc
add
add
xchg
add
or
push
or
or
lock
add
or
push
or
add
xchg
add
or
add
stc
or
add
add
or
add
or
call
add
add
out
or
aam
add
or
xchg
add
add
xchg
add
or
xchg
add
and
add
add
add
or
xchg
add
and
add
add
cwde
add
or
xchg
add
and
pop
add
cmp
add
or
xchg
add
and
add
add
add
or
xchg
add
and
add
add
add
add
add
add
add
pop
add
rcr
sbb
and
fwait
add
or
inc
add
adc
xor
add
or
inc
add
adc
hlt
lahf
add
or
push
or
mov
mov
push
or
or
add
add
add
or
xchg
add
add
add
or
xchg
add
and
add
add
add
add
add
add
or
xchg
add
and
mov
xchg
add
and
mov
xchg
add
and
mov
xchg
add
and
pop
add
adc
add
or
xchg
add
and
add
xor
add
or
xchg
add
(bad)
add
add
add
or
xchg
add
(bad)
add
add
add
add
add
add
add
or
xchg
add
add
add
pop
add
fsub
xchg
add
add
mov
xchg
add
and
add
add
mov
xchg
add
and
add
add
add
or
xchg
add
and
pop
add
pop
mov
xchg
add
and
pop
add
js
add
or
xchg
add
and
or
add
add
pop
add
fsub
push
sbb
and
movs
add
or
inc
add
adc
and
jmp
cmps
add
or
xchg
add
or
add
add
add
add
add
add
or
xchg
add
pop
add
cwde
cmps
add
or
xchg
add
add
xchg
add
shl
add
add
cmps
add
or
xchg
add
and
or
add
test
add
add
add
add
add
or
xchg
add
and
pop
add
dec
test
add
add
add
add
add
or
xchg
add
nop
test
add
add
or
add
xchg
add
add
add
test
add
add
sbb
and
test
inc
add
adc
shr
xchg
add
cmc
add
add
stos
add
or
xchg
add
add
add
lods
add
or
xchg
add
add
add
or
xchg
add
xor
add
or
xchg
add
add
add
or
xchg
add
ins
lods
add
or
xchg
add
and
test
add
and
test
add
or
adc
xor
add
add
enter
or
push
sbb
and
lods
add
or
adc
inc
or
pop
add
test
add
or
inc
add
sbb
add
test
add
stc
or
add
jo
add
or
inc
or
add
add
mov
or
add
add
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
or
add
add
pop
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
or
add
add
or
add
add
or
add
add
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
sbb
or
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
add
add
add
pop
add
add
add
or
add
add
or
sub
mov
adc
imul
pop
or
add
add
or
sub
add
add
add
add
add
add
or
xchg
add
sub
add
add
xchg
add
add
add
sbb
or
add
add
mov
push
sbb
and
mov
push
or
adc
push
add
add
or
xchg
add
pop
add
add
mov
xchg
add
add
add
add
add
add
add
or
adc
(bad)
sub
push
add
add
pop
push
add
add
add
add
xchg
add
sub
add
add
mov
xchg
dec
add
mov
xchg
add
sub
pop
push
add
mov
xchg
sbb
or
add
add
add
push
add
xchg
add
repnz
add
mov
xchg
add
or
add
add
add
add
or
add
add
add
and
or
add
add
add
and
or
add
add
add
and
add
mov
xchg
add
push
retf
add
add
xchg
add
add
add
or
add
or
pop
rol
or
add
or
je
add
or
add
or
enter
or
add
or
sbb
add
or
add
or
jo
add
or
add
or
(bad)
or
add
or
sbb
add
or
add
or
ins
ret
or
xchg
add
push
or
add
ret
add
or
xchg
dec
add
ret
add
or
xchg
add
pop
add
add
add
or
xchg
add
add
add
add
or
add
xchg
add
add
add
or
add
ret
add
or
xchg
add
sub
loopne
add
or
xchg
add
cs
add
add
ret
add
or
xchg
add
cs
or
sbb
add
or
xchg
add
pop
or
xor
add
or
xchg
add
jbe
or
dec
les
add
add
or
add
add
add
pop
or
mov
add
or
xchg
add
lods
les
add
add
add
add
les
add
add
add
add
les
add
add
pop
or
cld
les
add
add
or
add
xchg
add
das
pop
add
add
lds
add
add
pop
or
push
lds
add
add
add
add
add
or
xchg
add
adc
or
mov
add
or
xchg
add
add
or
test
add
or
xchg
add
xchg
or
add
add
add
add
lds
add
add
add
add
lds
add
add
add
add
lds
add
add
add
add
mov
or
xchg
stc
or
add
add
mov
or
xchg
out
or
inc
mov
or
xchg
stc
or
pop
mov
or
xchg
add
mov
mov
or
xchg
or
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
or
xchg
add
mov
or
lock
sbb
and
enter
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
xor
or
add
add
add
add
add
xor
enter
add
add
add
add
add
add
add
add
add
or
add
rol
add
add
or
add
add
add
or
add
add
or
add
rol
add
add
or
add
rol
add
add
or
add
rol
add
add
add
add
add
or
add
rol
add
add
add
add
add
or
add
add
or
add
add
or
nop
add
xor
aaa
add
add
or
xchg
add
repnz
add
xchg
add
int3
or
add
add
add
add
or
add
add
or
add
add
or
xchg
add
add
xchg
add
add
push
add
or
xchg
add
xor
or
add
add
add
add
or
add
ds
push
add
or
add
add
sgdtd
or
add
add
add
add
add
or
add
add
adc
add
add
add
add
or
add
xor
add
add
or
add
xor
add
add
or
add
xor
add
add
or
xchg
dec
add
adc
add
add
or
add
add
add
add
xchg
add
add
adc
add
add
or
add
adc
add
add
or
add
add
or
xchg
add
xor
or
add
or
xchg
add
xor
pop
add
add
or
xchg
add
xor
pop
add
add
add
add
add
add
add
add
xchg
add
jbe
add
xchg
add
or
add
or
xchg
add
add
adc
add
add
pop
add
adc
add
add
pop
add
add
or
xchg
add
xor
pop
adc
add
add
pop
add
add
add
or
add
or
xchg
add
add
xchg
add
and
ds
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
add
or
xchg
add
add
aas
add
add
or
add
xchg
dec
add
add
add
add
or
add
add
add
mov
sub
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
add
add
add
or
add
add
add
mov
sub
add
add
add
add
xor
add
add
add
add
xor
adc
xchg
add
add
pop
add
adc
xchg
dec
add
add
add
or
add
add
or
dec
add
add
les
add
add
movntps
add
add
add
add
add
add
add
add
add
add
add
add
div
add
add
std
xor
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
add
add
add
pop
add
add
or
jns
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
add
add
add
pop
add
add
or
jns
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
add
add
add
pop
add
add
or
jns
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
add
add
add
pop
add
add
or
jns
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
xor
add
add
xchg
add
add
xchg
add
add
add
add
add
add
xchg
add
add
xchg
add
add
add
add
add
add
xor
add
add
add
add
add
jns
add
add
jns
add
add
sub
add
xor
add
add
or
dec
add
add
add
sbb
xor
dec
add
add
add
and
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
adc
jns
dec
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
or
add
inc
or
add
inc
or
add
inc
or
add
inc
or
add
add
adc
loope
and
mov
or
add
add
retf
add
xchg
or
add
dec
add
add
add
and
or
add
retf
or
add
out
call
or
add
adc
add
add
pop
or
add
add
or
add
pop
or
add
add
jbe
pop
add
add
add
add
or
inc
add
add
add
add
fld
loope
dec
add
add
add
add
add
add
add
add
add
adc
add
add
adc
loope
not
sbb
fld
adc
cmp
adc
loope
xor
pop
add
add
adc
loope
dec
adc
loope
adc
add
add
add
add
add
adc
loope
aad
popa
add
add
adc
sub
sti
adc
loope
push
adc
loope
sbb
push
add
add
add
test
and
dec
adc
xchg
add
add
sbb
mov
jge
sbb
mov
adc
add
add
add
test
scas
add
dec
add
add
add
add
add
adc
adc
add
loope
jl
adc
loope
test
out
add
add
add
adc
add
add
add
push
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
unpckhps
xchg
add
add
lods
add
add
dec
adc
imul
dec
add
out
dec
add
add
cmc
add
add
pop
add
pop
add
add
xor
and
adc
rcl
ficom
not
sbb
rol
not
sbb
test
add
add
add
adc
test
add
add
add
add
adc
sub
mov
xchg
add
push
push
add
add
mov
push
fiadd
sbb
mov
push
leave
add
adc
leave
add
adc
mov
push
mov
push
jmp
push
fld
dec
add
pop
and
mov
pop
loope
xchg
push
add
add
add
add
adc
add
add
push
add
add
ins
sbb
sub
mov
add
sbb
loope
jae
cmc
add
add
add
sbb
adc
push
sbb
mov
push
jmp
or
add
and
pop
call
or
dec
add
add
add
add
mov
add
or
or
or
add
or
or
or
push
rol
dec
add
add
add
dec
ins
add
and
adc
ins
add
sbb
leave
add
es
adc
cmp
pop
add
add
add
ins
add
add
dec
adc
jmp
add
add
dec
loope
mov
add
adc
xchg
add
jo
loope
and
push
loope
(bad)
es
add
add
dec
add
daa
sbb
ins
add
clc
add
add
and
sub
sub
mov
jmp
add
add
sub
add
add
add
fimul
or
addr16
or
or
add
add
sub
or
add
sub
sbb
lock
or
add
add
or
add
add
sub
cmp
dec
add
add
and
sub
add
sub
or
pop
sub
or
add
add
mov
sub
or
dec
add
or
or
add
pop
sub
lock
or
or
add
pop
or
add
and
sub
xchg
sub
out
addr16
add
cmc
add
add
sub
and
cmc
add
or
or
add
push
das
mov
sbb
cs
sbb
stc
add
and
xor
or
add
add
add
retf
xor
or
add
xor
add
add
xor
or
rcl
xor
or
add
or
and
xor
sub
add
add
or
add
xor
or
add
add
or
or
adc
xor
xor
or
and
xor
aaa
xor
jp
xor
mov
add
add
dec
or
call
or
cmps
or
adc
jno
dec
add
or
test
dec
add
add
add
add
add
push
mov
add
add
add
add
add
add
add
psraw
add
add
add
add
add
add
add
add
adc
add
and
retf
or
add
add
or
or
add
add
mov
add
popa
add
add
jns
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
sub
dec
add
or
push
arpl
mov
add
or
or
and
add
or
add
or
out
or
ror
xor
mov
or
and
mov
add
push
ret
add
or
or
push
push
loopne
retf
or
add
add
or
add
add
or
or
or
adc
or
add
add
or
or
and
add
add
and
add
sti
or
add
add
add
add
add
or
or
adc
or
or
add
and
ror
and
sub
or
add
sub
adc
adc
or
or
and
pusha
add
or
add
add
bswap
add
or
or
adc
or
add
add
or
add
add
or
or
adc
or
add
add
or
add
add
or
add
add
or
or
adc
or
add
add
or
add
ror
and
inc
add
or
add
ret
or
or
and
arpl
jecxz
and
arpl
add
and
arpl
retf
or
add
fisttp
and
arpl
mov
add
or
or
or
and
or
add
push
add
or
or
and
mov
add
add
add
xadd
ret
or
or
and
or
or
xlat
mov
cmp
and
arpl
inc
or
packsswb
adc
adc
adc
adc
add
add
or
and
rol
or
or
and
loopne
ret
or
or
out
or
and
and
or
add
ror
and
pusha
add
or
add
ret
or
or
clc
adc
add
and
inc
add
inc
add
arpl
mov
add
punpcklwd
adc
adc
add
add
xor
or
add
xor
or
add
xor
and
inc
xor
cmp
or
add
cmp
or
add
inc
adc
adc
inc
adc
adc
adc
inc
adc
adc
dec
adc
adc
adc
adc
adc
adc
add
add
and
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
adc
add
xor
pop
add
inc
add
pop
add
nop
add
add
add
add
cmp
inc
add
mov
fwait
add
add
add
add
add
add
add
add
add
add
add
stos
add
icebp
or
or
jnp
ret
or
or
bound
test
cmps
or
or
or
or
or
or
or
or
or
or
or
push
add
or
add
add
add
add
add
scas
or
add
mov
add
or
add
adc
sbb
pop
or
add
sbb
ss
dec
sbb
jnp
xor
sbb
adc
sbb
pop
or
add
sbb
ss
dec
sbb
jnp
xor
and
or
add
sub
sub
add
push
sub
add
mov
add
sub
or
add
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
add
add
add
add
sldt
add
adc
add
dec
add
add
add
adc
add
dec
add
add
add
adc
add
add
add
add
pop
add
add
sbb
add
push
sbb
add
in
sbb
add
in
sbb
add
out
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
and
sub
mov
add
add
pop
add
add
or
add
add
add
add
add
add
sub
add
add
add
sub
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
add
add
add
add
add
imul
add
pop
add
add
add
or
add
int
xor
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
int
adc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
inc
add
add
add
add
aaa
add
dec
aas
add
add
add
cld
aaa
add
add
add
add
add
cmp
add
add
add
add
jb
add
add
add
push
dec
add
add
add
nop
cmp
add
add
add
add
add
add
pop
add
and
sbb
and
and
and
add
add
add
sub
and
sub
and
sub
and
add
add
add
add
add
add
sub
add
add
or
add
add
add
or
add
add
add
add
sti
or
add
add
sti
or
add
add
or
add
add
jecxz
dec
add
add
jne
add
jne
add
add
outs
outs
ja
inc
jo
ins
imul
xor
inc
jae
gs
bound
gs
imul
bound
add
jae
gs
cs
gs
arpl
outs
add
arpl
ins
imul
jb
push
outs
imul
ins
add
jb
outs
add
ins
push
imul
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
outs
ins
gs
outs
add
jae
ins
bound
gs
popa
jns
imul
imul
jne
jo
gs
dec
ins
fs
jae
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
popa
ins
gs
je
jb
bound
add
imul
jne
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
je
xor
inc
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
inc
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
imul
imul
xor
arpl
xor
ss
sub
sub
aaa
bound
xor
add
outs
outs
ja
inc
jo
ins
imul
xor
gs
add
gs
inc
arpl
inc
push
jae
inc
dec
jbe
dec
xor
pop
add
push
arpl
ins
dec
imul
xor
dec
js
add
outs
inc
push
jb
xor
ins
xor
je
jo
imul
outs
outs
jae
ins
gs
jo
ins
imul
inc
popa
jae
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
arpl
jae
data16
push
imul
jae
arpl
gs
ss
inc
aaa
push
jns
jo
imul
xor
jbe
dec
push
push
push
push
inc
pop
inc
jbe
dec
xor
inc
outs
ins
jo
je
jb
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
dec
xor
imul
ja
xor
add
xor
jb
jns
xor
popa
dec
fs
inc
push
add
popa
push
xor
push
ins
pop
dec
push
add
imul
push
gs
push
arpl
jne
jae
add
jae
push
xor
imul
imul
xor
fs
ins
inc
bound
dec
imul
inc
add
jae
popa
imul
jo
push
push
ins
add
jne
add
pop
bound
push
dec
fs
push
xor
xor
bound
ss
xor
ins
dec
pop
pop
fs
add
jb
outs
outs
push
pop
je
push
gs
push
add
jns
fs
xor
popa
inc
xor
inc
inc
arpl
inc
outs
outs
je
imul
je
outs
ins
add
jae
gs
cs
imul
inc
outs
jb
jae
gs
xor
dec
pop
jbe
inc
arpl
push
inc
inc
jae
gs
push
ins
push
bound
push
inc
outs
pop
dec
dec
pop
ins
jae
inc
outs
outs
je
outs
ins
add
jae
dec
cmp
xor
dec
gs
inc
bound
add
pop
inc
outs
addr16
push
push
ins
push
dec
imul
imul
pop
outs
cmp
jo
xor
addr16
imul
inc
push
fs
inc
pop
xor
dec
bound
gs
jns
push
inc
inc
jbe
dec
ins
inc
imul
jb
popa
dec
ss
jb
pop
xor
xor
pop
push
xor
cmp
imul
push
je
xor
inc
dec
cmp
gs
xor
jno
cmp
xor
push
push
jae
inc
outs
jb
xor
inc
outs
jb
add
outs
xor
inc
dec
push
popa
inc
dec
fs
xor
ss
pop
arpl
pop
ins
xor
dec
dec
imul
outs
jne
arpl
add
outs
outs
ja
inc
jo
ins
imul
xor
dec
jns
push
gs
jne
arpl
add
push
gs
imul
outs
outs
ja
inc
jo
ins
imul
xor
dec
jns
inc
jo
ins
imul
push
gs
imul
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
push
gs
imul
jo
jb
jns
cmp
outs
fs
gs
inc
aaa
xor
xor
ss
sub
sub
xor
xor
ss
inc
jge
dec
dec
dec
imul
outs
fs
add
xor
data16
xor
xor
xor
gs
xor
push
je
js
addr16
inc
xor
arpl
ss
ins
jns
xor
ins
dec
dec
push
add
inc
inc
dec
xor
xor
ins
imul
jbe
push
dec
push
inc
jbe
dec
aaa
dec
push
imul
push
inc
bound
jbe
push
dec
push
gs
dec
ins
imul
pop
inc
dec
imul
xor
inc
je
jb
bound
add
jb
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
aaa
xor
inc
aaa
sub
sub
sub
sub
xor
inc
xor
inc
jge
pop
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
popa
ins
jne
push
jns
add
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
dec
outs
fs
gs
xor
aaa
xor
sub
sub
sub
cmp
inc
cmp
aaa
inc
aaa
jge
push
fs
push
data16
imul
addr16
pop
jns
dec
cmp
push
inc
push
push
push
push
xor
pop
inc
add
push
xor
bound
dec
jb
je
push
dec
outs
outs
data16
ins
je
arpl
je
gs
gs
je
add
pop
jne
jb
push
jno
pop
dec
inc
outs
je
dec
dec
add
dec
arpl
inc
cmp
push
inc
jno
push
inc
add
dec
imul
ins
dec
ins
push
popa
cmp
ins
bound
outs
dec
je
addr16
ss
push
xor
xor
jno
push
jb
outs
inc
inc
pop
push
ins
pop
push
dec
push
xor
add
pop
push
dec
push
addr16
xor
imul
js
ins
dec
bound
jb
push
xor
aaa
dec
jno
push
push
add
jbe
push
jo
xor
pop
dec
dec
push
js
xor
add
js
push
imul
xor
dec
data16
outs
imul
ja
inc
outs
push
dec
add
jne
dec
dec
dec
xor
inc
pop
dec
ss
add
jb
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
inc
inc
inc
cmp
sub
sub
sub
sub
xor
xor
inc
jge
pop
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
pop
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
xor
xor
jo
popa
js
xor
gs
dec
add
push
push
jo
gs
xor
inc
push
jae
add
dec
dec
ss
outs
dec
dec
dec
inc
inc
imul
add
push
xor
pop
xor
push
jbe
xor
inc
pop
add
inc
imul
push
imul
pop
inc
dec
dec
xor
add
dec
inc
xor
jae
add
gs
gs
pop
jo
bound
dec
add
fs
inc
pushw
add
arpl
outs
jb
imul
dec
add
xor
dec
popa
push
push
add
addr16
push
arpl
cmp
xor
add
inc
dec
je
push
push
jbe
pushw
aaa
add
imul
jb
inc
bound
ins
dec
cmp
add
push
gs
inc
jo
push
jo
inc
dec
data16
jne
dec
push
gs
pop
dec
jbe
inc
cmp
gs
push
je
ins
push
inc
push
add
dec
aaa
jb
dec
xor
gs
inc
jns
jb
jbe
add
jae
je
bound
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
jb
jne
outs
je
js
gs
imul
outs
jae
popa
outs
arpl
push
popa
jb
gs
outs
jbe
arpl
imul
jo
imul
pop
dec
jae
imul
add
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
outs
je
imul
push
je
ins
jae
dec
imul
je
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
je
gs
jne
arpl
je
imul
popa
ins
imul
imul
jo
imul
add
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
push
jb
push
arpl
je
add
je
jb
push
arpl
jb
jb
inc
js
gs
imul
pop
dec
outs
outs
gs
js
gs
imul
pop
dec
gs
popa
add
gs
jb
jb
push
arpl
jb
jb
push
gs
outs
jbe
add
ins
jo
outs
outs
je
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
jo
jae
add
jne
ins
jae
push
jne
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
je
popa
jae
inc
outs
fs
je
imul
inc
addr16
dec
dec
aaa
push
dec
arpl
xor
gs
ins
pop
dec
jne
ss
inc
inc
cmp
push
bound
ins
push
cmp
dec
push
dec
dec
pop
imul
push
jno
push
inc
xor
pop
imul
add
push
inc
cmp
dec
push
push
inc
jno
gs
dec
xor
inc
je
add
jae
popa
outs
arpl
gs
js
pop
dec
jno
dec
add
push
inc
dec
arpl
fs
ja
pop
jno
gs
inc
ss
imul
fs
inc
dec
je
xor
gs
push
dec
push
dec
ins
jne
arpl
dec
imul
je
dec
pop
inc
cmp
xor
pop
add
dec
push
xor
dec
outs
push
inc
inc
jbe
push
xor
add
popa
pop
dec
popa
inc
imul
ins
dec
dec
inc
jns
dec
add
push
popa
inc
dec
inc
outs
inc
inc
aaa
imul
add
ins
jne
pop
pop
add
je
add
push
imul
inc
cmp
bound
jae
inc
outs
ins
outs
jb
push
jns
je
ins
cs
jb
ja
outs
add
inc
addr16
dec
push
imul
outs
add
jno
pop
push
dec
pop
dec
add
jne
push
jb
dec
push
inc
add
xor
xor
add
push
ss
add
jne
fs
ja
push
add
push
push
imul
jbe
dec
dec
ss
js
push
outs
ins
imul
outs
push
pop
push
pop
fs
je
dec
dec
outs
xor
imul
outs
push
dec
push
inc
push
popa
xor
outs
jno
xor
ins
add
imul
xor
js
add
popa
jo
imul
outs
inc
outs
outs
xor
add
arpl
ins
add
xor
popa
push
push
add
jbe
ins
dec
jns
push
add
imul
outs
jno
jo
data16
xor
inc
inc
cmp
gs
pop
outs
dec
addr16
ja
add
ins
outs
xor
inc
inc
add
inc
outs
jbe
jno
dec
cmp
gs
outs
arpl
xor
add
dec
outs
dec
fs
dec
xor
add
jae
popa
add
dec
outs
ja
push
arpl
add
dec
outs
data16
outs
push
add
xor
aaa
push
push
arpl
gs
push
popa
push
pop
add
dec
outs
push
push
arpl
jae
gs
aaa
outs
push
js
inc
push
add
inc
outs
jae
fs
ins
pop
add
jb
inc
outs
jb
gs
je
ins
add
dec
outs
dec
dec
ss
push
add
pop
outs
xor
push
add
popa
add
xor
jbe
add
jp
add
inc
outs
push
xor
push
add
jbe
dec
inc
dec
xor
push
add
ins
outs
inc
dec
jo
jne
add
inc
outs
bound
push
imul
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
cmp
ss
arpl
add
cmp
pop
pop
xor
inc
add
outs
imul
inc
imul
jno
dec
xor
push
pop
add
push
outs
ins
push
add
push
outs
cmp
dec
dec
jo
gs
outs
dec
cmp
cmp
gs
ins
outs
fs
inc
xor
add
dec
outs
xor
push
add
gs
jb
jb
imul
jae
add
jae
gs
cs
jb
ja
outs
addr16
jb
ja
outs
xor
arpl
inc
ins
pop
dec
outs
push
add
jo
jns
inc
outs
outs
je
push
imul
gs
outs
jne
fs
outs
jb
add
jne
fs
jo
arpl
imul
imul
gs
outs
je
jb
jae
dec
outs
jbe
ins
imul
push
popa
imul
outs
je
jbe
outs
je
jb
jae
addr16
inc
jb
jo
imul
pop
dec
imul
je
push
imul
popa
outs
fs
gs
jb
popa
je
add
je
push
popa
jb
outs
je
outs
jb
add
je
push
jb
outs
jae
popa
jb
outs
arpl
gs
jae
je
push
imul
pop
push
popa
jb
outs
je
jae
je
inc
outs
arpl
inc
outs
arpl
je
ins
add
inc
jb
popa
je
outs
outs
add
dec
outs
jne
gs
outs
jbe
add
jne
gs
jbe
outs
je
jb
jae
dec
outs
inc
outs
popa
bound
inc
push
add
je
inc
outs
popa
bound
add
dec
outs
jne
gs
outs
je
jb
dec
outs
dec
outs
jne
gs
jo
dec
outs
dec
outs
jne
gs
gs
jbe
add
je
dec
outs
jne
gs
outs
jae
je
outs
outs
add
imul
imul
je
push
je
outs
imul
jae
jb
add
je
inc
gs
jne
je
inc
jne
jae
jb
jae
je
inc
jne
jae
jb
dec
outs
dec
outs
jne
gs
outs
ja
add
je
push
imul
popa
je
add
jb
push
imul
popa
je
add
outs
je
imul
pop
inc
jne
je
outs
add
jne
gs
jne
je
outs
jae
inc
gs
outs
fs
jb
arpl
jae
je
inc
popa
jo
jne
add
je
pop
add
je
pop
add
je
push
imul
gs
push
imul
add
je
je
add
je
dec
popa
outs
fs
add
jb
add
gs
je
add
je
inc
popa
arpl
outs
ins
outs
jb
jae
je
inc
popa
arpl
outs
ins
outs
jb
addr16
dec
jae
popa
outs
fs
gs
jb
popa
je
add
je
inc
outs
jb
inc
outs
ins
outs
jb
jae
je
inc
outs
jb
inc
outs
ins
outs
jb
addr16
inc
popa
arpl
jb
jne
fs
ins
popa
add
je
inc
popa
arpl
jb
jne
fs
ins
popa
add
je
inc
popa
arpl
jb
jne
fs
ins
popa
addr16
popa
jns
jne
add
popa
addr16
popa
jns
jne
add
je
inc
popa
arpl
jb
jne
fs
ins
popa
addr16
popa
jns
jne
add
je
push
gs
add
je
push
gs
add
je
inc
outs
outs
je
jae
je
inc
outs
outs
je
gs
dec
push
push
add
imul
add
gs
cmp
add
ss
aaa
arpl
add
jo
cmp
dec
push
add
xor
push
add
cmp
popa
push
xor
gs
push
fs
outs
jb
add
aaa
inc
js
push
dec
imul
add
outs
outs
cmp
ins
push
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
dec
outs
outs
jb
ins
jae
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
jb
inc
push
fs
cmp
gs
outs
jb
pop
cmp
outs
push
outs
push
popa
bound
js
cmp
imul
push
xor
addr16
push
imul
outs
push
push
add
inc
outs
dec
xor
xor
gs
jno
cmp
dec
dec
aaa
add
push
outs
jo
outs
imul
inc
xor
add
xor
push
pop
inc
imul
outs
jne
dec
jns
jns
inc
outs
jne
gs
je
jb
dec
imul
gs
popa
ins
jne
push
popa
imul
jbe
dec
gs
add
jb
popa
jns
inc
gs
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
addr16
dec
gs
addr16
push
popa
ins
jne
add
inc
outs
inc
dec
js
dec
push
add
je
dec
je
ins
add
cmp
fs
fs
add
xor
dec
xor
imul
outs
outs
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
inc
outs
outs
jbe
jb
gs
push
outs
dec
outs
je
xor
inc
jb
ins
inc
jb
bound
addr16
dec
je
ins
add
inc
push
dec
ins
push
cmp
jns
push
dec
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
popa
jae
ss
je
imul
gs
ins
add
outs
jae
add
jb
bound
inc
gs
jns
gs
push
jb
je
add
ins
outs
jb
outs
outs
imul
popa
imul
add
ss
ins
jns
xor
addr16
inc
ins
imul
je
outs
ins
add
push
push
fs
cmp
gs
push
jns
push
outs
inc
cmp
push
imul
popa
jae
jb
push
je
imul
imul
jne
push
inc
cmp
gs
inc
je
dec
pop
dec
add
push
xor
outs
outs
inc
push
add
xor
dec
dec
push
add
ins
ins
push
arpl
ins
add
xor
inc
push
add
inc
dec
dec
js
popa
ins
add
jbe
imul
jno
gs
cmp
jb
je
add
cmp
aaa
ss
inc
add
ins
popa
jns
xor
gs
imul
add
jb
jp
outs
je
ins
inc
ins
imul
add
xor
cmp
jne
gs
je
jb
jno
xor
imul
xor
addr16
dec
outs
addr16
add
inc
jbe
jne
push
add
inc
arpl
arpl
jo
inc
jb
ja
je
imul
dec
push
xor
inc
add
ins
ja
push
pop
push
jb
gs
push
inc
push
add
xor
push
gs
inc
add
jne
outs
inc
push
inc
ins
add
ja
arpl
dec
push
add
ja
ins
popa
add
imul
add
ins
outs
jb
ins
outs
add
arpl
aaa
outs
dec
push
dec
push
inc
push
je
imul
ss
dec
xor
inc
popa
pop
addr16
gs
imul
js
push
imul
inc
xor
xor
imul
imul
push
pop
pop
inc
jno
ja
outs
outs
xor
push
dec
push
add
outs
je
outs
ins
push
je
ins
gs
push
gs
je
ins
add
inc
arpl
cmp
inc
inc
dec
aaa
dec
dec
ins
push
add
outs
ins
dec
ins
popa
add
xor
push
dec
gs
jae
dec
popa
push
jne
inc
add
outs
outs
push
ins
bound
xor
jb
imul
dec
push
cmp
push
fs
ja
inc
bound
add
xor
popa
ja
dec
ja
xor
push
push
push
add
push
dec
pop
push
dec
pop
cmp
push
dec
push
add
xor
jb
dec
popa
ss
push
cmp
pop
js
gs
push
inc
xor
outs
xor
xor
gs
inc
inc
je
gs
js
outs
ins
cmp
jae
je
dec
imul
jo
bound
ss
je
ja
pop
xor
push
jo
outs
jo
inc
jno
popa
ins
imul
pop
dec
push
inc
js
push
push
jb
push
jae
dec
add
inc
jae
dec
push
cmp
popa
inc
dec
je
pop
jae
add
push
addr16
jb
xor
pop
gs
imul
je
arpl
push
outs
inc
dec
imul
jbe
gs
jae
imul
dec
inc
dec
pop
xor
xor
gs
aaa
bound
dec
inc
jbe
outs
aaa
gs
je
dec
jb
gs
inc
je
pop
dec
inc
dec
xor
addr16
gs
inc
js
popa
addr16
dec
push
push
push
inc
inc
cmp
dec
add
cmp
push
xor
je
pop
outs
xor
push
push
add
je
dec
outs
arpl
imul
cmp
jbe
push
push
pop
imul
xor
outs
ins
aaa
dec
inc
ins
push
inc
xor
ins
inc
dec
pop
xor
gs
push
imul
jb
inc
xor
dec
outs
inc
imul
outs
outs
push
add
xor
push
jns
xor
jb
gs
popa
add
je
push
imul
add
xor
outs
ins
outs
inc
dec
popa
dec
cmp
dec
je
ins
add
dec
push
addr16
jne
ja
dec
jne
jno
dec
dec
outs
add
dec
dec
push
push
dec
jns
dec
push
aaa
xor
xor
jbe
inc
cmp
bound
jne
ss
inc
dec
add
inc
dec
ins
inc
aaa
imul
dec
cmp
imul
push
jb
outs
jae
popa
jb
outs
arpl
gs
gs
pop
cmp
ja
push
imul
jo
imul
pop
xor
dec
popa
ja
imul
add
push
jbe
jno
inc
push
dec
jno
xor
dec
ins
imul
push
dec
jns
popa
dec
push
pop
dec
jns
dec
inc
push
add
push
dec
jo
imul
pop
push
inc
add
push
arpl
push
arpl
dec
imul
inc
ja
push
add
arpl
addr16
dec
inc
imul
push
inc
dec
dec
add
dec
bound
pop
xor
jb
js
jne
inc
inc
add
gs
je
jb
add
ins
jo
jb
push
je
imul
push
je
pop
dec
inc
inc
data16
push
jae
push
add
inc
push
dec
push
pop
dec
pop
imul
xor
aaa
push
pop
cmp
gs
cmp
jne
pop
push
push
xor
bound
data16
push
jo
xor
inc
jns
dec
ss
cmp
jae
add
je
inc
outs
jne
je
gs
xor
xor
push
jo
inc
jne
add
push
push
push
push
pop
pop
addr16
dec
cmp
jbe
ss
add
inc
dec
addr16
xor
xor
jne
cmp
js
gs
cmp
dec
pop
jo
js
inc
arpl
xor
arpl
gs
xor
cmp
dec
xor
dec
push
push
xor
add
xor
push
pop
xor
bound
popa
inc
push
dec
push
push
add
inc
inc
inc
pop
pop
cmp
js
fs
dec
xor
add
ss
pop
pop
inc
dec
je
jae
push
ss
xor
add
ja
arpl
ins
add
ins
dec
dec
xor
push
push
jb
cmp
inc
xor
gs
dec
inc
dec
pop
dec
addr16
xor
inc
dec
outs
imul
add
dec
xor
dec
ja
dec
ja
pop
inc
pop
addr16
gs
imul
je
cmp
jbe
push
gs
inc
push
dec
pop
dec
push
dec
jae
jb
xor
gs
push
ins
inc
xor
bound
dec
outs
bound
push
ins
aaa
add
jns
jb
pop
inc
xor
pop
jae
push
xor
add
js
ins
cmp
data16
dec
jno
outs
dec
push
xor
gs
dec
imul
inc
inc
push
jae
bound
imul
outs
imul
push
ss
inc
jne
push
outs
dec
xor
gs
imul
pop
xor
dec
push
xor
inc
bound
gs
outs
xor
pop
dec
xor
outs
dec
ja
jns
jae
je
dec
outs
je
jb
outs
ins
popa
je
outs
outs
inc
outs
ins
outs
jb
add
arpl
outs
ins
outs
jb
inc
outs
jb
inc
outs
ins
outs
jb
inc
popa
arpl
jb
jne
fs
ins
popa
add
arpl
jb
jne
fs
ins
popa
addr16
popa
jns
jne
add
je
gs
outs
xor
ins
inc
push
add
push
outs
pop
ss
gs
jae
push
ss
jo
dec
add
dec
outs
push
xor
imul
popa
arpl
push
outs
dec
ins
xor
xor
jns
pop
outs
push
add
jns
dec
push
aaa
aaa
dec
add
inc
bound
inc
xor
addr16
inc
add
je
imul
jo
arpl
push
popa
push
jae
inc
bound
ja
add
outs
imul
dec
inc
push
push
dec
ja
dec
imul
add
dec
outs
inc
cmp
jno
je
push
push
je
outs
imul
xor
push
add
dec
push
push
pop
cmp
push
push
push
imul
jb
add
gs
imul
push
cmp
push
dec
add
cmp
inc
pop
bound
push
xor
dec
inc
ja
xor
arpl
xor
pop
dec
popa
dec
imul
xor
add
inc
xor
push
pop
xor
jb
addr16
dec
ins
add
xor
pop
push
dec
outs
bound
inc
jae
ins
xor
gs
bound
jo
pop
gs
inc
inc
jns
inc
arpl
fs
gs
inc
xor
ss
arpl
dec
outs
imul
gs
outs
inc
outs
push
pop
push
pop
pop
push
push
dec
inc
jne
pop
xor
jo
jno
pop
push
bound
bound
push
dec
dec
aaa
add
addr16
jbe
jb
outs
dec
xor
fs
push
push
ins
add
gs
jb
pop
ins
dec
dec
dec
xor
jb
push
ins
add
push
outs
gs
imul
inc
pop
cmp
cmp
dec
jo
dec
pop
pop
dec
jo
push
xor
inc
push
inc
push
bound
gs
push
pop
push
pop
inc
jno
imul
ja
add
dec
dec
push
push
ins
imul
add
xor
xor
jb
push
push
push
pop
inc
push
jne
add
aaa
push
xor
inc
ins
push
imul
dec
add
push
push
xor
outs
ss
outs
imul
push
imul
push
pop
jb
jae
jae
jns
bound
xor
push
push
pop
push
inc
inc
je
jae
inc
ja
xor
dec
jo
push
outs
push
dec
inc
push
inc
xor
inc
xor
je
inc
pop
jne
je
xor
xor
add
pop
ss
pop
dec
push
pop
push
xor
dec
push
push
push
dec
js
gs
fs
arpl
inc
inc
inc
dec
popa
inc
jo
je
dec
push
dec
popa
push
pop
aaa
xor
jne
outs
inc
inc
push
xor
add
pop
dec
xor
pop
ja
push
inc
inc
popa
xor
jne
gs
pop
dec
push
push
pop
imul
push
jae
jno
add
push
xor
pop
xor
push
dec
dec
dec
push
bound
pop
push
push
add
push
cmp
pop
jns
inc
dec
outs
outs
xor
push
jae
add
push
jno
inc
pop
js
pop
push
bound
inc
dec
jne
jbe
gs
xor
arpl
inc
xor
inc
ja
push
jns
gs
inc
push
inc
inc
pop
jp
jno
addr16
jno
dec
outs
dec
push
add
push
inc
jb
dec
xor
popa
push
ja
inc
popa
xor
cmp
xor
pop
jo
inc
fs
bound
cmp
add
dec
xor
dec
dec
js
xor
dec
dec
inc
push
xor
push
dec
push
push
inc
jo
cmp
gs
inc
dec
je
dec
jae
xor
je
fs
pop
push
xor
gs
inc
dec
dec
dec
outs
push
inc
dec
aaa
inc
outs
inc
outs
xor
dec
dec
xor
dec
pop
outs
push
dec
push
push
xor
gs
pop
popa
jno
xor
inc
xor
arpl
xor
gs
aaa
inc
ins
dec
jo
xor
xor
outs
pop
ins
dec
jbe
outs
push
push
dec
dec
push
push
dec
jns
xor
xor
gs
dec
dec
xor
push
cmp
cmp
pop
add
push
jae
cmp
jns
popa
xor
push
popa
push
dec
cmp
gs
xor
inc
imul
ins
imul
addr16
ja
outs
dec
dec
push
inc
push
outs
jb
addr16
dec
add
xor
inc
ss
arpl
xor
cmp
push
inc
push
dec
push
push
push
add
dec
xor
js
push
dec
ss
push
dec
pop
bound
gs
dec
jbe
dec
je
jo
push
inc
push
inc
ins
outs
push
data16
dec
jae
addr16
dec
push
push
cmp
dec
inc
dec
bound
add
xor
xor
dec
dec
fs
xor
add
inc
push
dec
je
inc
push
push
push
jno
push
jno
jne
push
add
xor
inc
dec
inc
pop
jno
xor
dec
push
xor
inc
cmp
gs
fs
ja
dec
pop
pop
push
ss
inc
dec
dec
fs
jae
dec
popa
je
push
push
pop
push
push
inc
jb
ja
jb
add
je
inc
jne
push
inc
ins
gs
jb
addr16
push
jb
outs
jae
popa
jb
outs
je
dec
popa
je
push
add
jo
push
js
inc
imul
inc
dec
inc
cmp
add
je
inc
ins
popa
arpl
gs
dec
dec
cmp
jae
dec
fs
push
dec
push
add
pop
je
push
dec
popa
dec
inc
pop
dec
gs
fs
outs
jno
gs
push
push
outs
push
fs
inc
jo
outs
push
ins
add
imul
jb
fs
inc
cmp
arpl
bound
popa
outs
bound
aaa
push
inc
js
cmp
js
dec
xor
gs
dec
inc
aaa
ins
dec
dec
dec
inc
push
jb
popa
dec
inc
arpl
push
gs
push
inc
outs
dec
bound
addr16
xor
popa
xor
add
cmp
arpl
addr16
jae
jbe
push
add
push
dec
push
dec
xor
bound
imul
push
dec
dec
ins
dec
popa
xor
ins
outs
push
data16
ins
inc
pop
push
dec
xor
jno
push
dec
inc
inc
add
dec
outs
dec
inc
dec
push
gs
push
jns
je
jbe
dec
data16
inc
aaa
jns
dec
bound
imul
add
inc
jo
dec
dec
bound
pop
bound
push
gs
dec
dec
inc
dec
push
dec
jb
push
aaa
ins
xor
gs
xor
imul
arpl
push
push
push
inc
add
ja
imul
addr16
cmp
push
ss
jae
push
jbe
jno
gs
inc
je
dec
ins
aaa
pop
jns
push
dec
cmp
je
add
gs
arpl
imul
gs
aaa
xor
arpl
jae
jae
je
push
imul
popa
xor
dec
addr16
inc
push
jns
dec
fs
jo
add
popa
bound
dec
xor
xor
dec
jne
fs
jno
gs
xor
push
inc
js
jb
fs
pop
push
outs
dec
inc
dec
dec
inc
push
push
ins
xor
dec
push
add
xor
xor
ja
arpl
dec
push
inc
pop
bound
cmp
push
push
dec
ins
imul
xor
xor
inc
add
cmp
pop
arpl
dec
push
dec
bound
dec
outs
jo
xor
jns
push
dec
push
jae
dec
ins
xor
ja
je
add
arpl
jne
outs
bound
bound
cmp
inc
imul
push
xor
je
push
popa
pop
xor
ins
inc
add
pop
jno
inc
dec
dec
imul
jae
outs
push
add
cmp
inc
xor
bound
pop
push
push
pop
ja
jbe
gs
push
push
xor
aaa
dec
xor
cmp
push
push
push
cmp
dec
dec
xor
jbe
ss
gs
add
dec
inc
ins
outs
dec
ja
js
dec
jno
jbe
inc
inc
pop
add
jae
xor
imul
pop
jne
popa
add
xor
jns
xor
pop
push
ins
imul
imul
dec
js
dec
jno
xor
cmp
add
push
dec
push
aaa
dec
arpl
push
bound
ins
inc
push
push
cmp
gs
xor
dec
jp
pop
fs
addr16
ins
jo
xor
imul
push
arpl
inc
gs
add
popa
imul
gs
outs
arpl
dec
inc
outs
outs
je
imul
outs
imul
je
ins
cs
push
imul
gs
addr16
dec
jae
ins
imul
pop
inc
popa
jo
arpl
jns
inc
js
je
imul
add
je
inc
ins
imul
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
dec
popa
ins
add
je
dec
outs
arpl
imul
pop
push
popa
bound
fs
push
jne
jo
outs
fs
popa
jns
jne
add
je
inc
ins
popa
jae
imul
pop
inc
ins
popa
jae
imul
push
je
push
popa
ins
jne
add
fs
dec
xor
dec
popa
dec
push
popa
addr16
inc
xor
ja
jo
dec
push
jo
outs
jo
push
inc
inc
cmp
gs
addr16
push
push
popa
push
xor
popa
ss
cmp
ins
pop
push
imul
inc
add
push
dec
pop
jne
outs
outs
dec
imul
dec
inc
xor
add
je
inc
popa
jo
arpl
jns
outs
push
push
push
pop
push
inc
ins
dec
dec
push
gs
fs
push
push
jne
xor
cmp
add
ins
outs
jbe
push
popa
outs
add
push
addr16
bound
push
dec
inc
pop
push
push
push
jne
ins
dec
add
dec
dec
push
gs
inc
xor
inc
jbe
arpl
dec
inc
imul
ins
add
inc
xor
aaa
push
popa
cmp
push
outs
jb
gs
inc
xor
fs
jb
aaa
jbe
pop
inc
inc
add
pop
inc
xor
inc
dec
inc
inc
outs
push
dec
ins
add
inc
push
xor
inc
dec
imul
push
push
dec
add
dec
arpl
push
xor
jo
xor
gs
dec
push
jne
je
push
push
inc
ja
addr16
gs
dec
xor
push
jno
jbe
dec
inc
pop
push
imul
ins
jne
popa
dec
xor
pop
jbe
add
push
outs
ja
jno
dec
ins
cmp
push
xor
xor
gs
push
pop
jb
inc
xor
outs
push
inc
push
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
bound
jae
push
jae
xor
push
popa
arpl
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
dec
push
inc
push
push
jo
fs
push
addr16
inc
outs
outs
je
outs
ins
jae
gs
push
cmp
dec
data16
ins
jo
xor
add
cmp
je
fs
dec
imul
js
gs
push
js
jo
inc
pop
xor
xor
ja
push
pop
add
jae
ins
gs
popa
jns
jne
add
popa
jae
imul
gs
bound
dec
outs
popa
add
je
inc
outs
je
jns
outs
imul
push
outs
add
je
outs
fs
popa
jae
add
jbe
imul
fs
bound
arpl
outs
outs
jbe
jb
imul
ins
ins
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
dec
inc
jb
jo
outs
push
jb
outs
jae
outs
jb
add
arpl
imul
je
ins
cs
gs
add
je
push
outs
imul
gs
je
imul
popa
je
inc
arpl
jo
outs
jb
imul
fs
inc
gs
push
je
ins
add
push
xor
push
xor
push
gs
dec
push
add
ins
jns
pop
push
dec
js
ja
jbe
aaa
add
add
push
dec
popa
dec
push
pop
ss
push
push
cmp
add
outs
jae
outs
jb
inc
imul
arpl
jb
jae
jne
arpl
popa
outs
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
jae
jne
arpl
jne
je
jb
add
ins
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
push
gs
outs
arpl
jno
popa
ins
jae
addr16
inc
jae
gs
bound
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
ins
jne
add
jae
push
push
dec
jb
arpl
xor
gs
push
push
outs
inc
push
arpl
push
add
je
arpl
jno
dec
push
inc
outs
push
jns
jno
add
ins
je
jb
add
popa
jne
je
outs
jae
popa
outs
arpl
gs
push
xor
xor
data16
ja
pop
add
je
imul
add
outs
arpl
outs
outs
imul
addr16
push
js
dec
arpl
dec
xor
jbe
jns
add
ins
imul
push
ss
xor
xor
add
popa
jne
je
addr16
push
gs
imul
push
dec
pop
push
push
dec
outs
imul
dec
jne
push
dec
addr16
inc
ins
dec
dec
xor
push
push
dec
push
fs
push
jne
addr16
add
je
imul
inc
push
xor
push
dec
outs
inc
push
jae
xor
push
outs
jb
gs
imul
ss
push
push
dec
dec
push
aaa
je
xor
push
gs
popa
arpl
inc
imul
je
add
je
jns
add
je
jb
jo
jb
jns
push
jb
jo
jb
jns
outs
outs
add
je
popa
ins
jne
add
outs
je
xor
push
jb
je
push
jb
arpl
jae
gs
outs
jb
add
jb
gs
xor
cs
ins
add
popa
fs
jb
arpl
jae
gs
outs
jb
add
outs
push
jb
arpl
jae
inc
ins
outs
jae
dec
popa
outs
fs
add
ins
gs
je
gs
ins
add
ins
gs
outs
fs
ins
gs
arpl
jae
add
ins
gs
push
push
gs
add
push
fs
gs
add
jns
je
push
je
gs
ins
add
imul
inc
jb
popa
jns
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
jns
je
push
je
gs
ins
dec
outs
fs
xor
inc
jb
jo
outs
push
gs
imul
imul
pop
dec
push
add
outs
push
xor
cmp
dec
jne
arpl
js
push
jb
ins
add
cmp
push
push
pop
js
ins
outs
ins
ins
push
gs
pop
xor
push
xor
cmp
inc
add
inc
imul
dec
cmp
dec
push
inc
push
push
push
outs
push
push
inc
pop
dec
xor
xor
gs
push
je
addr16
cmp
dec
pop
dec
dec
xor
inc
gs
popa
ins
add
jae
ins
bound
popa
ins
add
addr16
push
push
outs
cmp
imul
add
je
inc
outs
fs
popa
jae
add
dec
dec
push
dec
push
aaa
jbe
jno
gs
inc
add
je
jbe
push
inc
outs
cmp
jbe
push
add
dec
inc
popa
imul
inc
xor
js
dec
je
ins
add
push
ja
dec
pop
fs
jne
cmp
je
gs
xor
dec
push
xor
imul
add
je
dec
gs
gs
inc
inc
push
dec
push
inc
push
outs
popa
add
push
push
push
inc
push
xor
inc
xor
add
js
ss
push
jno
dec
inc
cmp
add
xor
je
arpl
ins
dec
inc
aaa
push
xor
cmp
push
dec
push
xor
dec
xor
dec
popa
jae
inc
ins
outs
jb
je
ins
add
ins
jo
je
dec
popa
jae
add
jns
js
jae
dec
fs
jne
push
push
imul
gs
je
inc
outs
arpl
jo
outs
jb
gs
push
dec
xor
jae
imul
ins
outs
aaa
jne
gs
pop
push
jno
aaa
dec
pop
dec
bound
pop
add
je
outs
outs
jae
imul
outs
inc
push
ins
add
push
inc
dec
push
dec
gs
ja
inc
add
inc
inc
ins
jns
pop
ss
ja
imul
arpl
gs
fs
imul
dec
dec
jbe
dec
jo
jbe
xor
gs
dec
push
jae
ins
push
push
popa
jno
dec
pop
push
inc
cmp
gs
dec
aaa
dec
jae
jo
xor
push
push
add
ins
gs
outs
xor
xor
xor
xor
xor
and
ins
gs
outs
xor
xor
xor
xor
xor
and
ins
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
ss
and
ins
gs
outs
xor
xor
xor
xor
and
ins
gs
outs
xor
xor
xor
xor
imul
xor
inc
jns
add
fs
add
inc
dec
push
dec
jp
dec
dec
aaa
add
jo
ins
fs
inc
imul
outs
add
jae
ins
jbe
push
jns
add
je
imul
gs
bound
dec
outs
outs
add
je
dec
gs
fs
je
push
outs
imul
push
gs
ins
jbe
dec
gs
outs
add
gs
je
add
gs
je
inc
gs
gs
je
add
je
popa
ins
jne
add
je
dec
popa
outs
imul
fs
add
push
arpl
gs
outs
add
inc
imul
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
popa
ins
ins
bound
imul
outs
fs
outs
jbe
imul
gs
ins
je
pop
cmp
jo
xor
add
ins
push
dec
dec
jbe
jo
dec
dec
arpl
aaa
jae
push
push
cmp
xor
ins
dec
add
push
dec
outs
jo
ins
jb
jns
inc
js
push
ins
outs
add
aaa
ins
cmp
pop
dec
push
add
dec
ins
jno
dec
inc
cmp
imul
jne
outs
outs
add
data16
xor
jbe
pop
dec
xor
gs
ss
js
push
ja
jp
xor
ins
dec
add
jne
ins
gs
inc
ja
add
pop
ins
outs
inc
jb
jo
add
push
push
inc
push
push
addr16
pop
ins
xor
ss
je
push
inc
inc
push
xor
add
xor
push
xor
add
jno
ss
dec
jno
pop
dec
xor
inc
jb
inc
add
inc
dec
pop
push
push
imul
push
inc
add
push
ins
inc
addr16
push
jns
add
ss
inc
push
inc
push
xor
dec
fs
ins
xor
js
inc
add
push
outs
ins
inc
inc
push
arpl
push
xor
ins
popa
inc
xor
inc
jae
inc
dec
push
gs
cmp
pop
inc
add
dec
popa
jb
cmp
add
outs
je
xor
inc
outs
jo
add
xor
jb
imul
xor
add
cmp
inc
dec
add
pop
xor
arpl
add
arpl
gs
ins
popa
add
jno
inc
xor
je
add
fs
push
pop
inc
inc
add
inc
jo
push
inc
arpl
add
push
arpl
outs
fs
add
jae
gs
cs
jne
je
ins
gs
gs
outs
je
outs
add
ja
popa
jo
push
imul
dec
popa
outs
popa
gs
je
jb
dec
ss
add
jne
popa
push
outs
addr16
dec
cmp
outs
xor
xor
push
dec
push
inc
dec
inc
pop
cmp
inc
imul
popa
fs
dec
dec
ins
dec
arpl
push
inc
addr16
jo
ins
add
imul
ins
inc
jns
push
push
inc
inc
jb
jo
outs
push
gs
imul
imul
pop
push
jae
dec
popa
arpl
outs
gs
gs
je
jb
add
aaa
imul
bound
dec
popa
jb
push
gs
gs
outs
add
inc
push
inc
push
outs
popa
add
dec
imul
inc
push
imul
inc
add
dec
cmp
push
cmp
ins
ja
dec
inc
add
js
inc
dec
ins
ins
push
add
dec
imul
pop
inc
aaa
push
xor
jo
push
push
aaa
add
inc
pop
inc
dec
js
xor
dec
xor
push
xor
add
cmp
inc
push
add
popa
dec
outs
dec
cmp
imul
pop
addr16
ss
inc
push
pop
ins
ins
add
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
arpl
ja
cmp
push
dec
pop
jo
ins
cmp
addr16
inc
popa
jae
push
je
gs
ins
add
push
pop
jne
jbe
jbe
fs
pop
gs
ins
push
jae
je
push
outs
jae
je
outs
outs
add
dec
je
dec
xor
jae
dec
jne
jae
jne
add
ins
jns
push
push
outs
pop
inc
dec
arpl
xor
add
outs
push
jbe
push
ins
push
bound
jns
add
popa
fs
jns
gs
push
pop
imul
dec
dec
dec
popa
push
add
dec
push
dec
ins
xor
aaa
ins
dec
jo
bound
imul
gs
jb
add
inc
popa
dec
dec
imul
outs
addr16
arpl
jb
arpl
jne
outs
outs
dec
push
inc
addr16
dec
aaa
jbe
push
push
jne
ins
imul
imul
push
cmp
jo
dec
xor
pop
dec
push
imul
popa
inc
add
push
push
xor
dec
cmp
dec
dec
arpl
push
jns
jo
inc
imul
fs
je
dec
outs
fs
push
inc
xor
xor
aaa
xor
imul
ins
jns
dec
je
aaa
aaa
arpl
pop
inc
jo
add
pop
bound
pop
je
popa
jne
xor
inc
jb
add
jne
push
ins
inc
ins
outs
arpl
push
jne
dec
jo
je
inc
jne
xor
dec
ss
inc
push
pop
je
outs
pop
cmp
xor
push
js
inc
add
jns
jno
dec
dec
ins
jne
gs
inc
push
xor
inc
jns
jne
je
inc
xor
ja
pop
push
xor
bound
pop
dec
dec
dec
xor
jae
cmp
jae
push
add
outs
jne
jno
gs
jo
imul
pop
push
add
inc
je
inc
fs
push
dec
bound
inc
push
add
xor
ins
data16
push
jb
push
cmp
data16
dec
bound
outs
jo
dec
outs
gs
popa
ins
imul
jo
inc
outs
jb
add
popa
jae
je
imul
add
outs
add
popa
addr16
outs
popa
je
jbe
inc
outs
je
jns
outs
popa
je
jbe
push
imul
fs
ins
ins
inc
bound
jns
jb
popa
ins
dec
push
jb
je
add
ins
dec
push
push
outs
add
inc
dec
push
gs
push
dec
dec
bound
dec
gs
popa
addr16
outs
js
push
push
imul
jae
ins
je
dec
je
jo
outs
outs
je
js
add
jae
gs
cs
bound
addr16
push
gs
outs
outs
jae
add
je
push
gs
outs
outs
jae
add
ins
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
xor
and
ins
gs
outs
xor
xor
xor
xor
xor
and
ins
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
and
ins
gs
outs
xor
xor
xor
aaa
cmp
push
jno
push
dec
xor
jo
dec
ins
ins
jno
push
xor
outs
fs
push
aaa
push
dec
dec
inc
data16
inc
fs
add
outs
outs
ja
inc
jo
ins
imul
xor
inc
outs
jb
xor
jb
jae
jne
arpl
add
outs
outs
ja
inc
jo
ins
imul
xor
push
gs
jne
arpl
cs
jae
jne
arpl
add
outs
outs
ja
inc
jo
ins
imul
xor
addr16
jae
jne
arpl
add
xor
data16
xor
dec
ins
imul
cs
jo
popa
jae
inc
outs
jb
cs
jae
jne
arpl
add
xor
data16
xor
dec
ins
imul
cs
push
addr16
jo
je
fs
push
arpl
jb
je
inc
fs
jae
jne
arpl
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
imul
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
ja
popa
bound
je
jb
bound
add
imul
jb
popa
ins
imul
push
imul
je
inc
je
jb
bound
add
imul
jb
popa
ins
imul
push
imul
je
add
imul
outs
gs
je
fs
je
jb
bound
add
arpl
jae
fs
push
push
gs
jns
je
jb
bound
add
jne
addr16
je
jo
push
push
imul
push
inc
push
push
inc
je
jb
bound
add
popa
addr16
je
jb
bound
add
je
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
ins
popa
outs
popa
addr16
jne
arpl
outs
push
outs
imul
je
imul
popa
ins
ins
imul
outs
je
outs
outs
add
add
add
add
je
add
add
outs
add
add
and
push
add
jb
jae
imul
cmp
add
add
add
add
and
inc
add
ins
add
add
add
add
je
jb
popa
add
add
add
jne
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
add
xor
add
add
add
add
add
add
add
add
add
imul
add
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
add
inc
add
jns
jo
je
outs
add
add
jbe
imul
push
add
outs
add
imul
jb
add
jnp
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
dec
add
cmp
push
add
xor
dec
add
push
add
dec
add
ins
add
jno
add
xor
data16
add
dec
add
aaa
add
dec
add
add
outs
add
add
xor
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
je
inc
add
ins
add
add
je
add
outs
add
inc
add
outs
add
je
imul
push
add
imul
add
add
data16
ins
add
cmp
das
add
add
add
adc
add
popa
add
add
outs
add
xor
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
fisub
xchg
jbe
jmp
add
add
mov
pop
push
sbb
mov
add
push
add
add
add
add
add
add
and
add
add
and
ss
xor
xor
sub
sub
sub
sub
popa
xor
xor
xor
add
or
add
add
add
add
or
add
adc
jo
jb
addr16
and
xor
xor
add
or
add
add
add
add
inc
or
add
xor
xor
xor
xor
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
adc
outs
outs
ja
inc
jo
ins
imul
xor
add
mov
pop
jg
aad
cmp
add
add
push
adc
adc
push
adc
or
push
adc
or
add
sbb
push
adc
sbb
add
add
pop
add
push
adc
sbb
adc
sbb
adc
or
adc
or
adc
add
add
adc
add
adc
add
add
add
or
pop
add
or
add
adc
adc
adc
add
add
sbb
add
sbb
pop
add
sbb
or
adc
add
add
or
or
adc
adc
add
add
sbb
push
adc
adc
adc
add
inc
add
add
inc
add
inc
add
add
or
adc
add
add
add
push
adc
add
add
add
and
add
add
adc
add
add
sbb
add
push
push
sbb
add
add
add
add
add
add
add
xor
mov
and
push
pop
and
add
adc
add
xor
add
adc
add
add
add
pop
add
add
add
add
add
add
cdq
add
cdq
add
add
add
sbb
add
or
add
push
adc
add
add
adc
add
adc
add
add
add
push
add
push
adc
add
push
adc
adc
adc
add
add
and
adc
adc
add
add
and
adc
adc
add
or
and
add
adc
adc
push
adc
and
push
adc
add
or
fld
adc
and
push
adc
adc
add
push
adc
or
push
adc
add
or
adc
push
adc
add
or
and
or
add
adc
add
or
or
and
add
or
adc
pop
add
add
or
add
jne
and
adc
and
add
or
add
adc
adc
adc
pop
and
adc
sbb
add
adc
add
sbb
sbb
and
adc
add
adc
or
or
pop
add
add
or
pop
add
sbb
or
and
sbb
push
sbb
add
sbb
or
sbb
pop
add
add
add
add
in
pop
add
and
and
add
and
and
adc
adc
add
sub
cmp
pop
add
cmp
and
add
cmp
and
adc
adc
and
add
and
and
adc
adc
sbb
pop
sbb
sub
xor
adc
adc
push
adc
xor
rol
or
push
adc
xor
and
sbb
add
adc
adc
or
add
adc
adc
or
push
adc
adc
add
add
and
add
push
adc
or
rol
add
add
and
add
add
add
pop
or
or
adc
or
push
push
add
or
add
add
push
and
adc
add
add
add
and
push
add
add
add
or
or
add
add
adc
or
and
add
add
pop
pop
adc
sbb
rol
add
add
push
sbb
sbb
add
sbb
and
adc
adc
adc
adc
adc
adc
or
and
adc
adc
adc
or
add
sbb
adc
adc
and
adc
adc
pop
and
adc
and
adc
add
sub
or
dec
push
adc
add
or
and
add
add
adc
and
or
or
or
add
or
or
or
push
add
add
or
or
pop
and
add
add
or
add
adc
or
and
or
or
or
add
adc
or
add
adc
or
or
add
adc
or
add
adc
and
push
adc
pop
add
or
add
adc
(bad)
and
adc
or
add
stc
adc
and
add
or
add
sbb
and
adc
or
or
add
adc
or
add
adc
and
or
or
or
add
or
or
or
add
add
or
or
and
add
adc
push
and
add
add
add
or
or
and
add
adc
and
add
or
adc
and
adc
adc
add
adc
adc
add
sbb
add
add
adc
adc
add
adc
and
add
add
or
push
add
or
or
add
sbb
or
add
adc
pop
add
add
and
add
add
and
add
adc
add
sbb
add
add
add
add
add
add
add
add
adc
add
sbb
add
add
or
push
add
add
add
adc
adc
ror
add
or
or
or
push
add
add
or
or
add
add
or
or
or
pop
add
or
or
or
add
add
sbb
or
add
sbb
or
add
sbb
or
or
pop
add
or
or
or
add
add
add
add
or
or
add
sbb
adc
add
adc
adc
adc
adc
push
add
stc
add
sub
and
add
or
adc
adc
add
sbb
add
adc
add
sbb
adc
push
add
adc
add
sbb
or
add
add
adc
add
add
sbb
or
or
add
sbb
adc
add
add
add
adc
push
sbb
adc
adc
adc
or
rol
add
adc
pop
add
add
or
or
or
add
adc
adc
add
or
or
or
or
add
sub
sub
adc
or
and
add
sub
pop
add
and
or
sub
push
adc
adc
sub
adc
adc
or
adc
xor
adc
or
or
or
and
add
adc
sbb
or
sbb
sbb
sub
sub
add
or
and
add
jno
and
add
add
add
cmp
add
cmp
cmp
add
add
or
add
add
or
push
and
add
or
adc
add
cmp
jno
sub
adc
add
sbb
sbb
push
sbb
sbb
pop
add
adc
and
adc
sbb
sbb
sbb
sbb
add
push
sbb
add
push
push
push
pop
push
adc
sbb
or
xchg
add
add
adc
sbb
or
add
or
adc
and
add
sbb
adc
add
adc
adc
adc
add
and
add
and
push
add
add
push
or
add
and
add
sbb
push
sbb
sub
add
add
push
add
add
push
push
and
adc
add
add
add
sbb
or
add
add
sbb
pop
push
sbb
or
or
or
adc
adc
or
add
sbb
pop
add
add
rcr
add
adc
and
adc
add
add
fisttp
pop
add
add
add
sbb
add
push
push
push
push
pop
or
add
add
or
and
sbb
add
sbb
push
sbb
and
adc
or
and
or
int
add
add
sbb
add
add
push
add
adc
adc
push
adc
push
or
push
adc
adc
xor
or
pop
add
xor
adc
add
sbb
adc
adc
add
cmp
add
add
sbb
or
add
add
adc
add
adc
or
adc
cmp
sbb
or
or
or
or
or
or
or
or
sbb
add
or
adc
or
adc
or
or
pop
or
or
pop
add
lea
lea
add
adc
and
sbb
add
or
add
add
or
xor
or
sbb
or
or
or
adc
or
or
adc
or
or
or
sbb
or
or
or
lea
or
and
add
add
add
add
or
add
cmp
or
add
sbb
and
adc
sbb
inc
adc
sbb
adc
add
add
or
add
or
or
or
add
add
adc
sbb
and
and
sbb
add
or
push
adc
pop
sbb
add
inc
adc
add
or
push
or
sbb
or
adc
adc
or
add
sbb
or
adc
adc
add
adc
adc
adc
sbb
and
sbb
add
add
adc
add
xor
and
adc
cmp
add
adc
add
push
adc
or
push
adc
or
push
gs
jo
popa
je
pop
cmp
xor
xor
xor
add
push
or
add
add
add
add
and
add
add
add
dec
jns
inc
outs
ins
jo
je
jb
add
add
push
dec
jns
inc
jo
ins
imul
add
or
add
dec
jns
push
jae
jb
add
jns
inc
outs
jb
jae
add
add
push
dec
jns
push
bound
jb
imul
add
sbb
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
cs
jns
jb
push
arpl
outs
jb
jae
add
and
push
push
push
push
popa
add
xor
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
add
add
add
add
push
and
add
sub
add
add
add
add
ins
popa
jae
imul
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
or
cs
gs
imul
add
fstp
add
add
push
add
ja
jne
je
jo
add
dec
outs
push
gs
and
add
or
push
add
outs
inc
push
dec
ins
push
cmp
add
gs
js
pop
dec
jno
dec
add
gs
push
dec
add
sub
dec
dec
push
inc
cmp
push
inc
jno
push
inc
cs
dec
pop
jne
jb
push
jno
pop
dec
inc
outs
je
dec
dec
sub
dec
imul
ins
dec
ins
push
popa
cmp
ins
bound
outs
dec
je
addr16
ss
push
xor
xor
push
jns
je
ins
cs
bound
arpl
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
pop
pop
add
or
add
add
add
add
and
add
adc
dec
loop
enter
and
xor
inc
push
cmps
sub
inc
xchg
sahf
inc
jnp
xchg
sbb
or
mov
rol
cdq
into
je
push
or
and
mov
jg
cmp
and
mov
pop
push
cdq
xor
fimul
cmp
inc
int
pop
les
jmp
pop
jmp
inc
xchg
adc
or
(bad)
jecxz
xor
inc
in
clc
sbb
push
adc
mov
jg
inc
mov
push
dec
jp
inc
sbb
jg
adc
mov
test
es
in
push
ret
in
scas
lods
in
cmp
xor
xchg
jp
dec
mov
cmp
test
add
push
inc
sbb
icebp
and
int
push
out
(bad)
sar
not
jbe
push
aas
inc
ins
sti
mov
jbe
stos
mov
or
push
ins
loope
iret
sbb
pop
inc
mov
xchg
mul
mov
push
test
or
iret
bound
pop
push
push
pop
clc
sbb
adc
into
scas
lods
adc
cmp
fcmove
repz
xchg
xor
fwait
xchg
adc
and
push
cmc
sar
ja
xor
or
popa
(bad)
addr16
inc
mov
ds
xchg
gs
xchg
dec
inc
and
ret
and
ins
and
pop
mov
cmp
jnp
mov
cmp
(bad)
movs
aaa
sub
inc
enter
movs
push
adc
mov
push
cli
rcl
or
xchg
sbb
add
jne
cmps
mov
fisubr
jb
mov
rcl
sar
ss
and
imul
cli
icebp
inc
ja
and
repnz
push
inc
xchg
cli
out
or
(bad)
in
jecxz
add
inc
dec
add
sti
repz
js
pop
cdq
cmp
lahf
in
mov
cmps
mov
js
sbb
imul
dec
mov
adc
jno
out
call
jmp
jae
es
jnp
sar
mov
shl
ret
clc
fisubr
mov
xor
mov
pop
(bad)
push
shl
stos
mov
loop
mov
out
cmp
pushf
adc
sar
push
mov
inc
div
push
and
(bad)
jle
ins
std
pushf
sub
sub
dec
out
arpl
pop
adc
mov
jmp
das
inc
fwait
dec
sete
pop
lods
sub
pushf
xchg
xor
xlat
jne
repnz
xchg
mov
add
mov
pop
arpl
push
ret
sub
sahf
mov
mov
ss
and
mov
enter
in
cwde
nop
jmp
leave
sahf
ins
(bad)
jmp
mov
fbld
lods
pop
mov
cmp
sbb
daa
sub
jns
push
dec
add
push
inc
mov
dec
cli
jge
mov
sub
lods
cmp
cwde
mov
push
test
mov
aam
ret
add
jmp
scas
out
fist
or
mov
push
jmp
js
or
popf
dec
jns
or
or
jnp
and
shr
mov
and
jae
mov
in
es
loop
mov
lods
mov
xchg
pop
ret
movs
mov
rol
outs
stc
leave
and
gs
outs
inc
inc
mov
push
mov
movlps
pop
or
xchg
sbb
or
mov
pop
js
push
add
das
jne
int
or
sub
enter
inc
xchg
int3
inc
dec
ins
add
adc
xchg
inc
sbb
jne
pop
lods
mov
add
pop
pop
daa
cmp
ins
sub
adc
fbld
dec
push
xchg
cmps
mov
jae
push
pop
(bad)
push
mov
stc
jp
lea
pop
cmps
int3
jne
test
sbb
xor
sub
jl
add
jno
fstp
loop
and
xchg
test
push
pop
shl
fstp
cdq
mov
or
movs
fdivr
and
xchg
pop
xchg
xor
fsub
lods
jno
adc
jne
paddw
xchg
mov
call
retf
xor
adc
outs
pop
(bad)
addr16
mov
(bad)
cs
pop
cmp
repz
sti
loope
(bad)
es
stc
es
pop
cmp
ds
and
mov
cmp
mov
test
jg
inc
shl
xor
mov
stos
daa
cmp
iret
xchg
dec
push
leave
les
pop
stos
xchg
test
mov
push
movs
push
aam
mov
cwde
ror
ret
mov
xlat
lods
je
repz
ds
inc
iret
and
jecxz
retf
mov
mov
sbb
sbb
or
imul
inc
push
repz
dec
xlat
imul
cs
fwait
dec
add
or
div
(bad)
mov
loope
jmp
cmp
inc
sbb
inc
mov
rol
dec
sbb
mov
add
aam
clc
inc
aaa
adc
and
pop
dec
mov
or
xor
inc
mov
imul
sbb
pop
sti
iret
outs
xchg
(bad)
retf
aaa
pop
test
shl
inc
(bad)
jle
daa
or
mov
jl
(bad)
adc
leave
jnp
ror
daa
mov
mov
jno
or
inc
xchg
loope
enter
mov
mov
jge
sbb
jmp
imul
(bad)
mov
xor
ret
enter
dec
jnp
jp
repz
jmp
(bad)
xchg
xlat
xchg
(bad)
imul
mov
ds
cdq
jle
pop
push
in
mov
sub
lahf
dec
fidivr
shr
sbb
into
ret
pop
(bad)
xchg
shl
pop
adc
adc
cmp
test
mov
add
jecxz
stos
sbb
(bad)
sahf
fs
pop
(bad)
sub
mov
sub
cmp
push
sub
pop
mov
js
xchg
dec
lds
xchg
push
hlt
add
inc
pop
call
dec
lock
fsubrp
sahf
push
hlt
cmp
rcl
sbb
(bad)
jecxz
cdq
sbb
jg
xchg
dec
inc
add
sub
(bad)
mov
pushf
fiadd
add
sbb
jmp
aas
inc
jle
or
leave
test
mov
adc
pop
hlt
fcomp
push
xchg
add
stos
ror
cmp
jno
add
xchg
cmp
cdq
call
iret
mov
shl
dec
jno
in
xchg
repz
in
jmp
popa
mov
xchg
movs
je
repz
or
cs
imul
(bad)
shr
xchg
movnti
mov
xor
push
shr
daa
stos
mov
xor
out
adc
dec
lahf
shr
pop
mov
and
arpl
rcr
cli
add
push
idiv
mov
pop
jp
and
xchg
icebp
add
(bad)
mov
movs
mov
jno
mov
mov
sub
test
into
dec
popa
jcxz
aas
pop
cwde
pop
fcmovnb
xor
mov
and
fld
xor
dec
xchg
pop
adc
les
mov
add
imul
xchg
in
mov
xchg
ja
add
je
xor
sbb
push
js
mov
cwde
sub
repnz
cmp
add
mov
retf
popa
mov
sti
ja
and
(bad)
pop
cmp
cmp
ds
lahf
sub
dec
sub
fwait
xchg
scas
mov
sub
dec
out
push
xchg
jae
sahf
mov
fimul
ss
mov
test
dec
cdq
jo
stc
sbb
add
aaa
and
xor
jo
in
cld
sub
cwde
leave
into
add
inc
in
adc
cmp
retf
dec
inc
or
mov
leave
dec
std
bound
out
loop
in
pop
jg
pusha
jmp
push
outs
sbb
arpl
mov
shl
jge
cld
test
fwait
int3
sbb
sub
and
push
repnz
cmps
mov
jmp
mov
int3
daa
sbb
or
test
test
clc
and
frstor
pop
cmps
xor
shl
dec
cmp
jmp
add
ja
sub
push
push
out
adc
clc
cmp
iret
pop
fs
or
cmp
inc
aas
fisttp
popf
jmp
ror
mov
enter
pop
les
or
pusha
ins
sti
lock
nop
dec
push
je
popf
push
dec
add
push
dec
push
retf
fadd
mov
sub
push
jbe
movs
jg
call
mov
and
mov
call
(bad)
shl
out
and
cwde
aaa
inc
pop
out
fild
inc
inc
adc
xchg
mov
and
std
or
xor
add
xor
xchg
add
lods
mov
test
gs
loope
sbb
out
jp
sbb
out
xchg
add
cli
mov
(bad)
(bad)
ja
cld
xor
fs
rol
jg
movs
out
pushf
(bad)
xchg
das
test
cmps
mov
fs
fcom
cdq
jle
sub
or
addr16
mov
fist
push
cmp
push
mov
das
jl
into
out
cmps
push
cmp
mov
rol
inc
mov
lock
mov
int
lods
push
jecxz
and
inc
dec
jne
test
test
outs
out
fdivr
sbb
mov
add
mov
mov
repnz
adc
(bad)
push
xchg
jno
xchg
jns
outs
lahf
in
pushf
add
loop
xlat
dec
movs
je
shl
nop
cmp
jbe
adc
add
sbb
js
outs
lds
push
dec
and
ins
inc
sbb
jae
dec
inc
aas
sar
fwait
stc
push
xor
ja
stc
addr16
(bad)
push
inc
call
adc
mov
jecxz
neg
out
mov
push
mov
cmp
add
outs
(bad)
fwait
xor
xchg
sub
leave
xchg
mov
lds
scas
sub
sbb
aas
fwait
imul
int3
mov
aaa
mov
fmul
xor
sub
adc
xchg
sahf
in
aas
enter
retf
push
inc
add
jle
push
outs
in
ror
into
push
fistp
add
je
popa
adc
xor
push
mov
ja
lock
fistp
rcl
mov
push
ins
ds
push
and
inc
pop
pop
push
test
pop
arpl
xor
xchg
push
xchg
mov
repnz
and
outs
rcr
ds
cwde
retf
push
ins
scas
add
jno
dec
and
outs
fmul
adc
dec
mov
jmp
loop
sub
jmp
clc
and
cli
movs
mov
sub
lahf
sub
xchg
or
mov
in
adc
or
adc
fisub
or
dec
jge
cmp
(bad)
push
in
pop
jge
jbe
out
stos
or
mov
sbb
add
arpl
into
inc
dec
sub
add
xchg
pop
pop
sbb
fstp
sbb
mov
ins
xchg
hlt
push
aaa
ret
sub
sbb
push
sub
retf
push
adc
xor
pop
pop
mov
fild
loop
adc
mov
jl
dec
push
or
sbb
cmp
fsub
dec
xchg
push
push
jge
into
sub
fsubr
(bad)
out
cmp
xor
mov
sbb
push
pushf
inc
adc
inc
movs
pop
inc
push
out
fmul
cmp
in
rol
cmps
adc
xor
adc
pop
repnz
sbb
sbb
jp
fsubr
or
out
add
inc
dec
aaa
int
fdiv
jp
(bad)
sahf
ja
sub
mov
popf
add
sub
dec
lods
lods
cld
xbegin
mov
clc
mov
mov
in
push
ror
mov
rol
pop
hlt
sub
pop
mov
mov
aad
cmp
scas
fcmovnu
rcl
push
lds
lock
mov
jge
mov
cmp
dec
aas
mov
jmp
push
icebp
jo
push
out
sub
movs
std
and
jl
scas
lods
mov
retf
shl
mov
call
xor
scas
sub
(bad)
int
outs
dec
mov
nop
es
or
jmp
leave
sbb
cs
jge
shl
imul
sub
cwde
cmp
xor
dec
xchg
xchg
adc
loopne
stos
sbb
popa
sbb
int
in
(bad)
jge
cwde
cmp
mov
mov
cmps
cmp
add
sbb
pop
movs
js
jns
mov
dec
and
in
aam
call
sub
pop
push
shl
in
inc
mov
inc
xor
aad
mov
add
sbb
and
push
leave
stos
mov
mov
popa
and
add
pop
push
mov
push
pop
inc
jmp
sub
movs
test
pop
pop
fild
daa
and
popf
dec
and
dec
jne
or
out
jne
popf
adc
jae
jmp
stc
scas
call
mov
xchg
push
fs
jmp
fwait
out
scas
inc
data16
sti
xor
jge
loope
or
lock
jmp
lea
sbb
sub
jecxz
mov
mov
xor
cmp
jg
push
lahf
sbb
test
add
loop
call
sub
jg
daa
nop
sti
test
call
jge
ds
jmp
lock
scas
repnz
jae
and
mov
call
cmp
and
fld
or
shl
pushf
jp
xchg
jno
in
sti
mov
popf
ins
adc
inc
hlt
loope
push
cs
(bad)
mov
dec
jl
or
xor
cmc
test
or
mov
sbb
movs
loop
pop
mov
ja
push
iret
push
hlt
cld
adc
pop
push
icebp
fistp
(bad)
adc
mov
sbb
ret
adc
aam
icebp
mov
fs
sti
cld
adc
push
enter
(bad)
into
push
xchg
out
sbb
sbb
add
mov
and
je
nop
or
icebp
push
aam
imul
je
adc
xchg
and
jo
jb
ds
pop
mov
loope
xor
pop
cmc
mov
cdq
dec
mov
xor
mov
adc
add
lds
cwde
sti
or
(bad)
lds
addr16
mov
sbb
xchg
pop
dec
daa
jmp
and
lahf
jae
and
(bad)
mov
iret
icebp
mov
dec
mov
xchg
jge
aad
aad
jnp
jl
push
jmp
dec
int
push
xlat
shl
add
jbe
xor
xchg
test
popf
aam
(bad)
loop
mov
mul
cmps
pop
inc
add
mov
add
movs
sbb
test
das
add
iret
dec
scas
pusha
js
arpl
push
add
mov
shl
shr
outs
mov
pushf
in
fiadd
inc
retf
mov
call
in
repnz
(bad)
mov
pop
test
rcr
and
push
rol
and
fadd
loop
jecxz
scas
sbb
ds
mov
jns
outs
sbb
mov
sbb
mov
enter
daa
repnz
ss
sbb
mov
bound
cmps
(bad)
je
pop
adc
pop
neg
les
adc
jae
call
ins
push
shl
(bad)
aam
inc
inc
int3
ins
jmp
xor
mov
pop
cli
ins
call
(bad)
cmc
cmp
jno
add
sar
xchg
neg
mov
sbb
cmp
fistp
inc
in
sbb
movs
sbb
ja
and
adc
mov
push
pop
and
xchg
scas
stos
sub
fcmovnbe
sbb
adc
dec
pop
imul
aas
in
(bad)
jl
mov
data16
jmp
push
or
jbe
mov
bound
jnp
jge
cld
pop
imul
jecxz
mov
jge
imul
js
data16
xor
std
dec
mov
gs
dec
push
adc
jbe
inc
adc
sbb
mov
jle
imul
int
and
cmp
mov
shl
scas
mov
ss
int
jno
lds
(bad)
call
in
std
nop
clc
jp
pop
and
inc
mov
mov
and
mov
bound
sbb
(bad)
mov
fidivr
loopne
mov
jb
shl
arpl
outs
push
adc
xchg
lea
test
dec
push
xchg
fcmovnbe
sbb
xchg
cwde
out
cmp
adc
dec
ja
or
inc
mov
call
sub
stos
das
mov
inc
mov
push
jns
add
pop
sub
inc
icebp
pusha
cmps
js
jecxz
xor
mov
test
adc
sahf
shr
xchg
xchg
or
les
xchg
lds
jnp
cmp
inc
or
cmp
outs
mov
xchg
ds
pusha
sub
jo
lds
cwde
mov
out
enter
scas
push
inc
cld
dec
inc
ror
jecxz
or
jmp
repnz
inc
mov
pushf
xchg
jp
xor
inc
(bad)
cli
sbb
je
lods
test
dec
or
mov
out
aam
pusha
pop
aaa
xor
inc
(bad)
push
fwait
ret
jmp
or
int
div
sub
stos
sti
cmc
mov
mov
loope
shl
or
pop
(bad)
cmp
or
fild
adc
jb
fisttp
jl
dec
fistp
mov
adc
inc
popf
arpl
fcom
stos
stc
fnsave
mov
xor
add
xor
fmul
xchg
sbb
jmp
inc
or
addr16
sbb
sub
mov
sbb
pop
or
jmp
icebp
sub
cmp
iret
bound
mov
mov
jg
imul
in
in
cmp
sbb
aas
ins
stos
adc
xlat
lds
mov
popf
xor
jle
pop
xor
inc
pop
pop
xor
mov
inc
mov
retf
add
nop
pop
data16
inc
repz
shr
mov
jmp
lods
ins
push
pop
into
int
push
in
inc
mov
sub
add
cmp
in
jmp
rcr
cwde
cdq
retf
test
mov
push
repz
lock
dec
inc
dec
jecxz
inc
inc
aad
std
into
(bad)
cs
fcomp
mov
lods
(bad)
jnp
cwde
sbb
cmp
cdq
enter
jnp
js
popf
push
jmp
dec
dec
aad
push
pop
in
push
loopne
add
in
mov
ret
pop
in
mov
mov
adc
sub
(bad)
not
outs
daa
fcomp
fbstp
pusha
xor
in
push
test
adc
test
lahf
push
jne
lea
or
je
(bad)
clc
xchg
xor
xchg
(bad)
rol
xor
sub
lods
xchg
ins
movs
push
loopne
lahf
xchg
lea
lea
sti
jp
mov
stos
sub
and
xor
call
jmp
rcr
mov
std
bnd
xchg
mov
jno
out
mov
inc
and
jno
mov
pop
xchg
xchg
or
lds
(bad)
lods
clc
retf
pop
pushf
addr16
leave
push
dec
mov
pushf
int
pop
ins
out
add
xor
enter
mov
mov
xchg
push
adc
adc
aam
lds
stos
cmp
cmp
imul
in
push
cdq
add
call
mov
icebp
pop
adc
pop
cmps
cmp
and
sub
inc
add
bnd
retf
jae
test
cmp
cmp
hlt
xor
mov
(bad)
xor
loope
xor
fwait
loop
mov
sti
and
adc
jbe
and
lds
bound
fadd
jp
mov
mov
cdq
in
xor
test
push
jl
pop
jmp
inc
mul
retf
lods
mov
inc
test
adc
inc
xlat
sbb
inc
sub
jmp
dec
pop
rcl
sub
imul
cmp
rcr
(bad)
imul
mov
push
(bad)
movs
dec
aaa
jg
jmp
lea
mov
push
push
aaa
lock
jge
cmp
sub
leave
mov
(bad)
call
(bad)
hlt
xchg
inc
jmp
push
sbb
iret
cmc
cmp
push
xor
addr16
daa
les
aaa
mov
jp
fadd
mov
or
sub
aaa
or
movs
fist
pop
or
scas
xchg
or
jle
dec
(bad)
das
pop
cdq
jmp
es
mov
fld
std
jb
jo
sti
dec
cwde
pop
push
pop
and
cmp
stos
fs
push
sbb
sub
mov
pop
xchg
push
aam
push
in
push
or
jb
sbb
jmp
movs
inc
xor
ds
xor
retf
in
ja
pop
push
mov
sahf
dec
sub
(bad)
(bad)
mov
inc
dec
jmp
mov
dec
retf
xor
mov
and
cli
push
jg
sbb
(bad)
je
add
push
sub
dec
cmc
push
fld
inc
fldenv
add
je
jmp
sbb
addr16
fistp
inc
ret
mov
out
mov
mov
pop
xor
sti
mov
add
mov
jo
ins
xor
fnstenv
inc
sbb
jl
xor
js
lods
push
adc
outs
push
inc
inc
xor
xchg
cdq
jg
call
retf
cld
ret
xor
inc
mov
xor
bound
push
mul
lds
or
xor
pop
ins
pop
neg
stos
adc
mov
mov
iret
or
push
cwde
push
int
push
int
pop
es
mov
retf
ja
and
xchg
test
test
and
lods
mov
(bad)
xchg
call
sbb
jns
adc
mov
sbb
cmp
das
(bad)
cmp
push
aam
xchg
sub
sbb
movs
lods
iret
scas
dec
stc
push
jmp
ret
push
sti
fiadd
push
or
and
sub
mov
mov
sahf
std
pop
jae
scas
dec
rcl
pop
jb
sub
push
fwait
inc
dec
adc
retf
xchg
cli
pop
dec
out
mul
push
jge
leave
pop
js
loopne
out
or
dec
mov
retf
push
xchg
sbb
sti
out
fmul
jnp
add
(bad)
outs
leave
mov
jge
xor
sbb
jb
test
sub
xor
into
add
in
jp
into
mov
push
dec
enter
fadd
dec
movs
mov
lea
sbb
daa
pop
pusha
pmaxsw
jbe
mov
dec
xor
dec
arpl
and
std
xchg
cld
and
test
inc
mov
sub
dec
std
(bad)
mov
repnz
adc
push
std
fidivr
into
ror
aaa
pusha
icebp
sar
das
xchg
out
add
test
je
xchg
mov
xor
push
or
dec
loope
mov
jmp
pop
cmp
push
in
rcl
daa
adc
push
adc
mov
je
mov
icebp
and
xchg
sbb
pop
or
sub
mov
lods
js
or
retf
repz
call
lds
jb
aas
sub
mov
hlt
stos
nop
pop
fcmovnbe
test
xor
call
push
pop
sub
jmp
scas
cmp
dec
xchg
adc
std
icebp
into
inc
dec
aas
pop
mov
aaa
push
gs
lock
add
ret
or
into
or
cli
les
xchg
ja
pop
(bad)
xchg
lods
lahf
pop
push
popf
mov
cmc
pop
inc
add
xchg
add
popf
xchg
push
push
mov
xchg
mov
cmp
out
sub
pop
popa
ficomp
sbb
gs
sub
jo
iret
push
mov
daa
push
daa
sub
adc
cld
sbb
shr
push
out
es
sbb
cmps
bound
jge
xor
adc
(bad)
stos
mov
sar
arpl
mov
xchg
push
inc
test
xor
cdq
inc
mov
and
jb
push
cli
je
mov
pushf
mov
rol
(bad)
shr
mov
jae
xor
jmp
fiadd
(bad)
mov
mov
aam
int
sub
out
push
jle
in
jp
fldcw
(bad)
ret
xchg
popf
sbb
xchg
xor
aas
mov
cmp
sar
add
repnz
mov
in
push
mov
xchg
sbb
out
rol
lds
js
jle
pop
bound
loope
cdq
scas
sbb
add
scas
mov
(bad)
imul
inc
out
mov
inc
mov
cs
(bad)
push
or
call
cmp
cs
clc
adc
stc
and
out
mov
or
out
movs
pop
(bad)
cmps
hlt
in
loope
mov
jge
popa
sbb
mov
outs
cmp
mov
or
mov
push
jecxz
jle
mov
mov
xchg
adc
pop
xchg
addr16
repz
(bad)
push
iret
maxps
mov
jns
or
les
(bad)
sub
outs
retf
inc
sbb
mov
jns
pop
mov
and
push
sbb
cdq
sub
jnp
sub
jnp
pop
test
push
mov
movs
mov
or
loop
jo
out
mov
and
je
aad
adc
(bad)
fld
push
pushf
pop
loope
and
adc
into
jmp
mov
xlat
pop
hlt
addr16
lds
test
adc
stos
jb
test
data16
mov
ja
int3
fadd
lds
inc
loopne
fistp
arpl
add
xchg
cld
cmp
sub
outs
leave
add
(bad)
out
jne
xchg
jecxz
(bad)
pop
pop
or
lods
inc
push
rcl
sahf
mov
shl
and
sbb
adc
inc
pop
mov
cli
adc
fmul
dec
mov
fstp
add
mov
mov
popa
or
pop
imul
and
adc
xchg
xchg
xor
mov
mov
movs
cmp
cwde
out
shl
pop
ds
lods
sub
jg
jl
(bad)
cmp
fdiv
scas
jne
ret
rol
sar
or
popf
push
fimul
enter
leave
imul
add
xchg
sub
inc
jge
stos
or
cmp
test
gs
xchg
pop
int
(bad)
cmp
mov
jae
mov
xchg
out
dec
push
nop
lods
pushf
lahf
cmp
add
cs
cli
lods
test
push
push
fiadd
ret
xor
jle
into
pushf
scas
or
cmp
xor
adc
jg
pusha
fsub
retf
clc
loop
pop
loop
movs
xchg
cmc
or
lods
pop
or
bound
mov
push
fadd
add
mov
jmp
test
mov
push
sti
(bad)
fisttp
inc
adc
sub
jg
add
sub
xor
movs
div
rcr
push
aaa
mov
add
movs
aam
mov
xor
sbb
aam
das
cmp
mov
dec
(bad)
push
and
or
xchg
xchg
cmp
push
test
xchg
cmp
jo
and
mov
mov
das
push
dec
cmp
jp
int
push
xchg
xchg
icebp
sbb
mov
jp
xchg
xor
(bad)
iret
mov
cmp
outs
jbe
push
cwde
shl
cmps
dec
inc
adc
ret
std
or
in
jmp
into
loop
test
cli
test
pop
inc
jge
fwait
and
ret
pushf
and
loope
mov
fadd
popa
and
jne
mov
pop
pop
loope
fst
xor
cmp
mov
cwde
cmc
mov
sub
fnstsw
imul
jnp
or
ficom
and
cli
push
lods
daa
jne
and
gs
cli
pop
adc
rcr
sbb
mov
pop
pusha
adc
push
iret
add
jo
cmp
mov
lock
lods
cmp
push
ins
sbb
in
adc
cmp
(bad)
stos
das
aaa
mov
(bad)
xchg
aam
into
sar
cs
add
xchg
push
inc
pop
xor
pop
into
imul
aad
sbb
pop
sti
inc
shl
jl
cli
mov
adc
and
mov
push
bsf
scas
jne
and
sbb
js
(bad)
push
adc
add
push
mov
pushf
mov
jo
loope
mov
fxch
jl
fwait
je
movs
sbb
xor
lea
xchg
adc
or
sub
sbb
xlat
and
add
mov
sbb
add
mov
ss
or
movs
outs
stos
rcr
repnz
pop
call
call
call
push
and
cs
out
cmp
mov
xor
test
xchg
mov
dec
sbb
add
inc
and
xor
jno
jne
adc
outs
mov
cwde
sahf
retf
cmp
out
xchg
cld
push
enter
add
adc
aas
mov
jecxz
dec
push
mov
adc
inc
adc
and
or
xor
in
rcr
es
(bad)
mov
retf
xchg
(bad)
mov
mov
jl
mov
std
mov
in
shl
mov
dec
mov
mov
sub
xor
jbe
mov
jp
aas
ins
sbb
sahf
push
scas
sar
clc
jb
jle
or
mov
push
sahf
je
sub
push
cmp
add
xchg
stos
mov
mov
xchg
inc
sub
pop
xchg
inc
inc
lods
clc
mov
(bad)
fmul
or
dec
cmp
dec
int3
test
outs
push
or
repnz
aas
sbb
sahf
mov
popf
mov
sub
push
xor
sub
or
mov
mov
cmp
or
repz
int
mov
mov
loope
int
hlt
xor
idiv
and
cmp
add
jnp
adc
repz
mov
or
mov
popf
inc
sub
into
movs
xor
inc
xor
jmp
push
in
sub
test
cmp
or
xchg
mov
imul
stos
gs
dec
idiv
test
mov
into
call
hlt
out
fwait
aaa
loope
fs
addr16
addr16
leave
dec
inc
shr
rcr
push
shufps
mov
or
jecxz
repz
arpl
test
and
cdq
mov
nop
bound
add
push
mov
lahf
jae
(bad)
adc
mov
pusha
(bad)
adc
or
jecxz
ss
xchg
(bad)
pop
sub
or
ja
xor
jne
out
shl
repnz
inc
inc
pop
cmp
test
into
(bad)
fld
lock
xor
dec
ins
pop
add
inc
adc
js
cmp
ss
mov
pop
outs
fldenv
and
jmp
adc
icebp
and
jb
mov
sub
mov
xchg
fidivr
dec
add
jmp
cmc
cmp
cwde
in
stc
pusha
js
jae
jo
ror
(bad)
(bad)
jmp
cmc
fisubr
xchg
inc
jl
jbe
test
ret
in
mov
xor
pusha
cld
inc
xor
in
sub
and
retf
cmc
cwde
pop
adc
dec
push
sahf
test
jg
(bad)
cli
loopne
and
and
mov
(bad)
fist
enter
shl
cli
jno
sbb
or
jl
and
in
and
add
push
dec
fwait
push
push
je
sar
xor
inc
and
adc
jbe
leave
adc
or
nop
fbstp
repnz
push
cmp
adc
imul
sets
jb
test
daa
dec
jle
dec
dec
imul
int
lahf
mov
sbb
pop
sub
das
sub
mov
and
lahf
in
mov
imul
shl
sti
imul
mov
adc
xor
shr
scas
shl
imul
or
add
adc
pop
in
adc
outs
xchg
dec
mov
mov
xor
push
rol
stos
je
mov
jae
cdq
push
je
mov
xchg
pop
or
nop
fwait
in
xchg
fld
imul
sub
aaa
xchg
or
mov
xor
pusha
in
dec
fld
xchg
pop
aam
cmp
mov
or
mov
push
mov
jge
jl
(bad)
mov
mul
dec
movs
(bad)
sahf
jb
jmp
test
js
shl
cmp
repz
ss
test
push
les
dec
jno
inc
pop
stc
fisttp
mov
pop
scas
retf
mov
int
and
mov
jbe
fst
jns
mov
dec
sbb
mov
add
jbe
mov
fdivr
fldlg2
out
mov
and
xlat
cmp
cs
pop
cmp
js
mov
sub
fiadd
(bad)
fisubr
iret
in
aas
(bad)
les
xchg
and
imul
out
inc
int3
mov
jno
(bad)
mov
mov
xchg
push
hlt
ret
xor
dec
sbb
std
and
mov
std
jg
lods
fsub
pause
movs
cwde
cmp
push
push
cmps
adc
cmc
ins
stos
popa
xlat
push
sbb
or
sub
es
out
sub
push
sub
mov
in
gs
cmp
mov
cmps
dec
stc
int
rcr
mov
daa
sbb
and
pusha
xor
and
mov
pop
xchg
fstp
addr16
lods
mul
mov
jmp
ds
adc
mov
inc
adc
(bad)
mov
mov
push
jmp
mov
and
pop
test
adc
jnp
adc
and
cmp
imul
das
scas
and
sbb
cld
(bad)
int
jb
pop
sbb
dec
lds
test
adc
inc
loopne
in
xchg
mov
jno
loope
xor
push
cmps
mov
cmp
xlat
stos
loopne
adc
adc
pop
jl
fmul
push
arpl
jae
mov
jns
cmp
mov
rcr
lea
add
(bad)
enter
retf
xchg
pop
sbb
lods
test
lods
int
push
pop
ret
mov
ret
inc
(bad)
mov
mov
mov
es
cld
js
es
fmul
adc
aaa
out
dec
repnz
dec
ds
xchg
rcl
inc
inc
loopne
test
cmp
lahf
mov
ins
mov
imul
adc
push
xchg
inc
mov
jle
cmp
fwait
bound
push
cmps
cmps
mov
sbb
rol
inc
push
out
pop
jo
ror
mov
aas
sbb
ret
hlt
jg
sbb
in
inc
mov
xor
mov
inc
jmp
cmp
add
jae
pop
mov
mov
(bad)
out
dec
cmp
add
jo
stos
retf
and
fcomp
pop
les
cmp
mov
cmc
ins
jno
adc
sbb
ja
cmp
sub
fwait
and
mov
ds
hlt
ret
xor
in
push
cmp
xchg
loope
xor
rol
push
cld
int3
cmp
std
sbb
shl
imul
callw
fsub
pusha
call
xor
xchg
aaa
movs
movs
push
popa
mov
adc
xor
mov
lock
shr
and
mov
dec
mov
push
pop
push
mov
sbb
(bad)
mov
inc
add
cmp
jmp
push
jbe
or
lock
add
out
xchg
jg
push
mov
pusha
cdq
push
loopne
add
(bad)
lock
dec
dec
cmps
sub
push
mov
mov
push
sar
cmp
pop
mov
imul
push
inc
movs
lds
dec
rol
pushf
adc
pusha
cmp
adc
popa
mov
push
loope
pop
jb
lahf
call
mov
pop
jg
in
push
les
and
loopne
retf
jecxz
dec
or
rcl
pop
call
cmps
fisubr
repz
into
xchg
inc
das
pop
in
sbb
sbb
mov
xchg
ins
adc
ror
jmp
loope
xchg
sub
adc
push
xchg
push
mov
movs
mov
pushf
and
mov
cs
retf
jnp
(bad)
mov
push
xchg
jno
repz
inc
jp
fistp
jle
push
sar
dec
out
push
(bad)
adc
add
loop
aad
xor
es
out
jl
lods
sub
mov
mov
push
cmp
mov
fidiv
repnz
push
loope
pop
ins
add
inc
repnz
out
mov
out
jnp
jae
add
nop
in
jne
sub
movs
rol
nop
dec
sar
and
jae
das
scas
xor
xor
pusha
mov
shr
push
movs
es
enter
and
cdq
sub
mov
xchg
test
leave
in
hlt
fisttp
cdq
push
fstp
(bad)
adc
gs
sub
add
dec
jl
jmp
sub
fisubr
or
inc
adc
sbb
ja
aas
in
pop
fisttp
jg
daa
lods
xor
xor
repnz
xchg
jmp
cwde
pop
inc
sar
rcl
pusha
mov
xor
inc
retf
push
push
(bad)
(bad)
xor
push
repnz
hlt
inc
inc
cwde
jecxz
dec
push
push
bnd
aas
adc
mov
fs
imul
cmp
jmp
and
mov
mov
cwde
out
adc
test
test
(bad)
mov
push
mov
sub
push
ins
mov
(bad)
jmp
jae
mov
sub
data16
out
in
daa
cmps
imul
ret
add
ret
mov
or
repz
ror
shr
sbb
outs
in
sub
bound
call
mov
add
adc
enter
in
cmp
shl
push
imul
rcl
push
sahf
adc
ins
andps
cmp
xor
push
xchg
cld
sbb
mov
inc
sub
mov
dec
xor
retf
mov
dec
jl
pop
push
sbb
add
neg
ds
push
mov
pcmpeqb
sbb
gs
dec
inc
loope
inc
push
dec
and
aam
call
cwde
(bad)
sahf
repz
outs
(bad)
(bad)
das
pop
bndstx
cwde
add
pop
fnstsw
(bad)
out
add
outs
mov
push
mov
sub
sbb
jbe
pop
and
fxch
shr
(bad)
push
(bad)
jmp
sub
ret
(bad)
ja
jge
idiv
push
cmps
inc
xchg
dec
inc
cmps
outs
mov
mov
nop
mov
sahf
scas
outs
push
sub
jmp
adc
cmc
mov
mov
inc
adc
(bad)
int
mov
outs
repz
inc
inc
shl
retf
rol
pop
add
fwait
push
nop
loope
fs
aam
jno
pop
dec
mov
xlat
cwde
(bad)
mov
lds
jo
pop
mov
mov
popf
leave
sub
cld
xchg
cmp
mov
add
push
cli
std
inc
cmp
mov
xor
ds
mov
test
hlt
mov
jne
jno
cmc
pop
pushf
(bad)
xor
xchg
pop
and
js
(bad)
and
sbb
test
sbb
xchg
jmp
push
jo
mov
and
pop
xor
push
push
dec
leave
fidiv
test
fsubr
shl
int
popa
hlt
cmp
movs
jp
jecxz
test
or
test
cmp
xor
pop
ins
shl
push
add
stc
repnz
inc
or
dec
adc
mov
xor
push
mov
mov
or
inc
adc
dec
xchg
xchg
in
push
xchg
cs
out
cmp
clc
xor
jns
xor
and
fcom
(bad)
rol
jecxz
inc
dec
jp
mov
push
enter
dec
fldenv
add
out
fild
lahf
mov
outs
data16
cmp
in
data16
fidiv
mov
pusha
sub
add
ret
test
(bad)
movs
movs
push
xchg
das
inc
repnz
xchg
pop
mov
es
xor
cli
pop
test
call
jg
das
xlat
lahf
out
mov
pop
sbb
push
stos
out
cwde
pop
pop
or
sti
out
retf
outs
(bad)
sbb
lods
(bad)
and
and
cmp
pop
cli
cli
aad
adc
pop
dec
adc
xchg
repnz
xor
stos
imul
dec
cmp
or
push
fiadd
and
jge
pop
push
mov
mov
inc
xlat
dec
cmc
hlt
je
cs
hlt
out
dec
mov
mov
enter
jbe
outs
sub
mov
inc
xor
out
jle
aas
sti
outs
jmp
adc
jg
popf
cld
cmp
movs
daa
ret
test
jecxz
push
mov
xchg
push
mov
cmp
mov
cmps
xor
sbb
or
enter
inc
fcmovb
dec
mov
mov
jge
mov
pushf
add
cmps
shr
in
test
sbb
mov
fisub
inc
inc
cmps
push
loope
call
and
imul
pop
xor
mov
mov
sub
das
adc
inc
fs
jmp
(bad)
leave
push
xor
(bad)
or
and
fs
scas
sub
imul
cmp
lahf
imul
and
cmp
mov
jecxz
mov
nop
movs
(bad)
retfw
(bad)
jmp
add
xchg
sbb
mov
mov
mov
sbb
fmul
mov
sub
(bad)
inc
mov
shld
(bad)
push
into
add
mov
(bad)
mov
pop
jmp
sub
dec
fimul
ret
fwait
inc
mov
mov
mov
jle
push
mov
xchg
sbb
cmp
cmp
push
out
fdivr
add
push
jmp
ja
dec
sbb
push
inc
cmps
add
mov
jmp
mov
pop
clts
pop
cmp
rcr
cmp
jno
dec
popf
fnstenv
outs
fnsave
cmps
(bad)
dec
inc
pusha
nop
mov
push
scas
dec
jbe
leave
scas
les
dec
cmp
push
xor
(bad)
mov
cmp
(bad)
xchg
ret
push
and
dec
test
mul
stos
jae
test
add
add
aaa
pop
lahf
jne
dec
and
lea
ja
jle
movs
and
ds
and
bound
jb
xchg
mov
loopne
cmp
mov
jb
xchg
cmp
sub
xor
mov
inc
xor
aaa
std
cmp
dec
clc
xchg
cmps
xlat
lahf
daa
setno
inc
xor
stc
ins
fidivr
(bad)
dec
out
xchg
addr16
push
inc
int
sub
jne
adc
mov
(bad)
(bad)
lock
jbe
adc
iret
fsub
cmp
mov
dec
repz
add
push
xchg
xchg
mov
aas
mov
mov
and
adc
fidivr
jle
test
xchg
cmp
inc
push
inc
push
jp
push
mov
cmc
cwde
and
shl
xchg
sub
push
sub
pop
adc
addr16
(bad)
jo
out
(bad)
pop
jbe
ins
loop
xchg
push
fsub
retf
adc
adc
(bad)
cli
cmp
std
pop
or
loop
call
jle
mov
add
push
shl
cmc
imul
push
iret
sbb
(bad)
dec
sar
jbe
aad
or
xchg
jae
(bad)
es
dec
and
and
(bad)
pop
sbb
sub
mov
adc
xchg
xor
loopne
gs
rol
stos
int3
push
retf
jle
loop
(bad)
jbe
ss
xchg
movnti
mov
or
xor
adc
inc
or
jecxz
mov
jle
mov
xchg
push
adc
in
push
js
mov
xor
sti
mov
push
push
push
shl
push
cwde
jno
rcl
aam
cmp
sub
in
loope
add
call
xchg
mov
movs
sub
mov
push
adc
jl
add
inc
and
outs
das
icebp
sub
(bad)
les
scas
nop
(bad)
or
mov
pop
jmp
ins
pop
or
dec
xchg
hlt
test
jae
retf
mov
xor
sub
int
cmp
mov
mov
jns
icebp
cmp
inc
ret
mov
ja
dec
ds
or
outs
jbe
sbb
test
lods
mov
(bad)
xchg
(bad)
fcomip
and
fld
xor
das
mov
sub
sub
cmp
sbb
aad
idiv
inc
iret
dec
ret
dec
pop
and
shl
cs
xor
icebp
xchg
push
and
adc
daa
mov
pop
test
in
nop
xor
sub
into
or
ins
ds
sbb
mov
pop
cmp
cmp
and
ficom
iret
pop
mov
pop
outs
fwait
cmps
xor
adc
test
cmp
push
pop
dec
adc
neg
rol
jne
mov
and
test
sub
retf
mov
sbb
(bad)
imul
adc
xor
fdivr
jo
cli
jecxz
dec
sub
dec
xor
(bad)
pop
ins
fmul
ja
repz
(bad)
hlt
loopne
je
mov
rdtsc
mov
in
retf
pop
out
popa
rcr
sub
sub
pop
test
jmp
out
lahf
out
repnz
nop
adc
xor
pop
iret
sbb
cmp
in
sbb
push
icebp
xor
retf
and
push
xor
adc
xchg
shl
lods
jp
mov
cmp
xor
loopne
xchg
inc
dec
push
push
sbb
shr
add
pop
xor
mov
mov
add
outs
stc
push
push
add
pop
dec
sub
mov
lea
aas
pop
cmp
sub
push
and
stos
jp
sbb
push
cmp
pop
outs
pop
adc
std
call
imul
pop
xchg
dec
pushf
jle
jb
ja
das
push
movs
(bad)
lahf
xor
sub
arpl
xor
mov
fs
inc
dec
mov
inc
push
test
imul
outs
cli
jmp
cwde
outs
lahf
mov
dec
xchg
mov
xchg
xchg
jle
stos
outs
jne
rcl
sbb
adc
fcmovnb
sub
mov
scas
sub
push
mov
jg
and
adc
add
fldcw
addr16
cmp
repz
movs
cld
mov
mov
adc
daa
xchg
cmps
inc
fist
into
pop
cwde
repz
cld
add
xor
cmp
outs
push
outs
xchg
add
popa
das
mov
lds
jge
arpl
sub
pushf
dec
or
jbe
jne
ror
call
push
movs
mov
fs
stos
lds
in
adc
dec
or
lahf
ds
mov
xor
inc
dec
mov
pop
mov
sbb
ret
cli
js
and
jae
pop
xor
and
or
adc
cmp
push
mov
fst
ds
cmps
nop
outs
pop
cmc
test
xor
xor
(bad)
adc
sbb
addr16
ja
xor
mov
pusha
ret
pushf
cmp
pop
cmp
pusha
xchg
push
nop
mov
sti
lods
sbb
into
add
push
mov
or
mov
jbe
mov
cmp
xlat
mov
retf
inc
js
lods
sahf
xchg
scas
xor
jb
add
sub
push
mov
(bad)
sbb
test
xchg
pop
daa
cli
mul
imul
mov
or
dec
xchg
lods
gs
jo
inc
mov
hlt
add
pop
adc
in
push
mov
add
mov
fnstenv
popa
repz
or
xor
retf
jo
sub
or
ror
cdq
sub
jbe
cmps
cmp
lahf
adc
nop
lds
dec
pop
mov
(bad)
mov
adc
or
push
or
dec
inc
movs
cwde
in
je
ss
jecxz
mov
sub
xor
mov
xor
rol
(bad)
mov
rol
jo
gs
jns
push
xchg
int3
ret
pop
aad
bound
out
mov
ins
mov
icebp
call
into
push
fsub
or
test
fsub
pop
jl
dec
call
mov
dec
nop
mov
fisub
mov
jnp
adc
data16
ret
hlt
movs
lea
jmp
mov
xchg
push
add
inc
adc
outs
pusha
add
mov
imul
sbb
sbb
pop
pop
or
mov
icebp
cwde
test
scas
cwde
das
inc
inc
stos
pop
adc
dec
les
and
cld
or
inc
inc
xacquire
mov
mov
mov
and
xor
add
push
movs
and
ror
repnz
lea
outs
iretw
cmp
sub
movs
cmps
ss
push
fmul
adc
jmp
ret
movs
mov
jecxz
xchg
jmp
mov
sbb
mov
jmp
sar
mov
lock
fcomp
jmp
imul
sahf
xchg
sub
push
(bad)
cmps
xor
cmp
rol
rcr
aas
adc
xchg
repnz
iret
outs
es
and
mov
in
jl
push
or
jmp
mov
mov
jns
push
cmps
aam
and
cmp
inc
cmps
sub
sbb
sbb
(bad)
jb
out
ror
adc
mov
push
push
inc
push
pushf
ficomp
add
cdq
rcl
jo
aaa
retf
in
pop
pop
mov
mov
fldenv
nop
adc
call
shl
ins
and
and
push
cmps
inc
adc
or
daa
aam
jns
mov
pop
call
push
mov
mov
shl
sbb
lods
outs
dec
push
movs
xchg
inc
loope
out
xchg
imul
(bad)
ror
jp
mov
mov
jae
xor
retf
(bad)
cmp
int
jb
cmc
das
pop
shr
jmp
add
xchg
fs
jecxz
aad
cmps
ret
adc
sbb
movs
push
icebp
or
and
pop
cmps
push
xchg
push
call
push
pop
mov
jg
xchg
push
mov
frstor
ins
pop
sub
neg
(bad)
ret
sbb
and
jmp
mov
jbe
jb
call
xlat
lods
pop
pusha
jo
inc
lods
std
mov
(bad)
mov
dec
lods
and
outs
(bad)
fstp
fild
xchg
call
ret
push
cmp
mov
inc
jecxz
aaa
movs
pushf
lahf
push
and
outs
dec
scas
fidivr
pop
cmp
mov
cmp
cwde
(bad)
lods
and
mov
loopne
xor
popa
jmp
adc
out
fmul
mov
das
sbb
es
cmps
out
add
sub
and
hlt
jle
xlat
scas
sub
lods
and
inc
popa
sub
sub
jno
sub
outs
in
repnz
fistp
xchg
inc
jno
mov
out
mov
jne
retf
fisttp
dec
sub
stos
jecxz
test
int
mov
xor
xchg
and
or
adc
or
xchg
cmps
sar
rol
dec
aas
push
pushf
out
imul
fucomp
pushf
dec
test
mov
cld
fsub
xor
arpl
mov
lds
aad
sar
xor
rol
cmp
lods
(bad)
popa
mov
inc
nop
fs
test
lock
sbb
add
cmp
test
cdq
push
fsubr
fnstsw
xchg
sub
loope
dec
push
jbe
out
cld
inc
gs
adc
pop
xor
dec
addr16
or
xchg
pushf
sub
aad
sub
sub
and
inc
nop
pop
scas
xchg
cmp
pop
pop
adc
or
sbb
mov
inc
xor
pop
pop
outs
cmp
pop
fsubr
imul
or
xor
inc
jg
add
outs
inc
lea
jmp
loope
mov
aaa
(bad)
xlat
sbb
xor
pop
hlt
push
and
and
inc
push
ret
(bad)
and
jp
ins
pinsrw
pop
mov
mov
mov
xor
sahf
fisub
rol
ret
jecxz
les
(bad)
xlat
xor
mov
rol
ror
int3
std
fmul
push
pop
cmc
fadd
push
je
sbb
data16
sub
scas
adc
mov
inc
mov
dec
push
in
shl
push
fstp
test
push
rcr
inc
and
(bad)
icebp
icebp
push
push
push
sub
or
fadd
xchg
fwait
rcl
sub
inc
push
daa
and
mov
hlt
int3
dec
add
sbb
pop
inc
test
rol
sub
jecxz
mov
inc
or
lea
cmc
cmc
nop
aaa
and
jo
cmp
dec
mov
mov
addr16
jmp
imul
push
adc
(bad)
cmp
and
cmp
mov
pop
hlt
dec
xchg
loope
and
aam
test
mov
jecxz
push
cs
ins
inc
outs
sbb
ret
and
popf
mov
jmp
aaa
sbb
adc
push
adc
push
cs
mov
adc
into
outs
jnp
jp
cmp
push
jns
push
and
and
jg
mov
inc
adc
push
and
pop
xor
fild
ds
xor
adc
inc
fwait
and
cli
loop
adc
cmp
adc
std
sbb
call
(bad)
jns
sbb
xlat
mov
bound
ins
push
dec
sbb
inc
adc
sbb
dec
or
cmps
mov
daa
imul
xor
pop
sub
loopne
enter
add
test
rol
pop
pop
xor
int
ret
sbb
pop
pop
cmps
mov
addr16
pop
dec
(bad)
mov
sbb
imul
ins
mov
rol
xchg
add
shl
pop
lahf
cli
push
cdq
sub
mov
jo
scas
cmps
stc
cmps
jb
in
sahf
cdq
int3
dec
test
cli
fcom
xor
xor
cmp
cwde
js
pop
ja
xchg
inc
push
sbb
sahf
inc
and
aaa
(bad)
sahf
jns
jo
push
in
jns
stos
pop
add
mov
retf
xchg
jbe
push
jns
cli
call
cwde
lods
test
adc
push
add
fild
xor
jp
lea
adc
dec
xchg
jo
test
bound
and
push
ret
or
jbe
sti
pmuludq
adc
xor
mov
push
sub
addr16
leave
in
jne
mov
pop
fs
mov
xchg
mov
jg
xchg
xor
call
push
push
aaa
cwde
arpl
add
out
and
sbb
pop
mov
lds
pop
imul
or
cmp
arpl
dec
jmp
mov
scas
outs
test
call
popa
or
call
out
push
push
lods
mov
mov
sbb
push
pop
or
ds
std
or
push
push
dec
test
xchg
fwait
mov
xchg
cmp
mov
sub
or
les
push
fnsave
inc
inc
or
nop
cwde
enter
cmps
movs
and
cvttps2pi
mov
in
frstor
stos
imul
lods
sbb
pop
cmp
and
stc
shl
xchg
fisttp
xor
jne
add
pop
(bad)
call
ret
(bad)
(bad)
out
es
mov
imul
in
enter
or
inc
mov
adc
inc
in
or
mov
mov
jo
dec
or
adc
sar
xor
xor
enter
movs
fwait
push
adc
gs
pop
ret
pop
inc
scas
cmc
mov
and
sbb
mov
in
sub
add
out
dec
imul
inc
xor
pop
cmp
cmp
js
jge
adc
mov
xchg
push
bound
push
mov
jg
sbb
inc
pop
sub
xor
push
cmp
mov
aam
cmp
fcomp
call
fnstcw
int3
or
not
pop
mov
arpl
in
mov
out
mov
xchg
jmp
(bad)
test
xchg
idiv
mov
push
mov
fsubr
loop
xchg
icebp
mov
xchg
dec
adc
stos
movs
add
movs
mov
sahf
outs
out
and
xchg
pusha
fucomp
popf
(bad)
ss
mov
mov
ins
dec
jp
push
sub
stos
stos
retf
sbb
test
ret
leave
cs
aam
retf
xor
or
leave
mov
cmp
jne
and
mov
and
popa
jne
aaa
jns
fwait
adc
fimul
xor
hlt
jl
add
aam
int3
pop
in
jnp
inc
popf
sbb
(bad)
adc
aad
ins
in
and
pop
dec
ins
int3
neg
fcom
imul
std
in
in
(bad)
aad
je
mov
in
mov
loopne
xor
or
icebp
sub
jmp
inc
out
sbb
ins
xor
add
jg
add
cmps
inc
sbb
add
adc
sub
mov
cld
pusha
inc
scas
mov
or
xchg
shr
jmp
in
je
jmp
mov
adc
xor
mov
add
data16
push
clc
add
cmc
mov
jo
cmp
mov
dec
push
add
mov
cmp
shl
(bad)
cmps
dec
add
getsec
and
jmp
adc
(bad)
inc
add
xor
cmc
pop
ret
(bad)
pop
fnstsw
push
daa
shl
dec
inc
pop
or
lods
je
lahf
push
sbb
jecxz
int3
retf
les
nop
sahf
pop
sub
jns
ds
cmc
cmp
call
aaa
ret
sar
fdivr
mov
pop
cmp
cmp
fdiv
in
shl
pop
fnstcw
push
push
xor
jne
jg
pop
adc
sbb
mov
push
mov
add
(bad)
nop
pop
nop
inc
out
add
lea
jp
call
dec
jmp
xchg
or
ins
inc
aaa
fcomp
(bad)
in
fst
sub
dec
psubb
pop
adc
adc
sub
cmp
(bad)
mov
xchg
sub
test
sti
jmp
xchg
pushf
xor
out
mov
pop
mov
(bad)
push
xlat
jge
mov
jns
loop
add
xchg
cmps
es
nop
(bad)
push
fwait
scas
cmp
xlat
lahf
pusha
out
cmps
pop
fsubr
retf
cmps
test
fs
ins
pop
inc
ds
sbb
xor
int3
sub
not
xlat
ins
push
and
stos
inc
ret
ret
(bad)
int
ja
inc
or
fs
ds
jl
outs
xor
repz
jns
inc
add
loop
jecxz
mov
js
and
outs
xchg
add
(bad)
mov
sub
outs
sub
aaa
jl
rol
inc
js
add
out
test
cmp
jg
mov
pop
cmps
dec
cmp
mov
movs
mov
sub
(bad)
xor
pop
in
jns
and
test
jno
push
push
mov
dec
jno
loop
adc
or
xchg
or
loopne
push
jp
stc
sbb
cmp
test
add
sbb
or
push
sbb
sbb
mov
jg
sub
pushf
mov
faddp
cdq
aam
imul
xor
scas
xor
dec
mov
loopne
fs
cwde
xchg
mov
es
mov
cmp
xchg
je
push
pop
pop
mov
or
imul
popa
mov
fsub
test
std
aaa
ret
cmp
jmp
and
or
inc
fsin
cmp
or
out
add
test
aad
into
test
pop
pop
or
sbb
mov
shl
mov
sbb
ds
neg
jbe
call
or
sub
xor
adc
or
fld
sub
xor
loopne
jae
sub
(bad)
shl
pop
mov
push
rol
les
rcl
mov
test
cli
sar
popf
mov
sub
or
cld
outs
mov
clc
arpl
jl
call
inc
mov
int3
pop
mov
icebp
sbb
dec
aad
push
out
adc
add
and
mov
(bad)
cmp
mov
jb
(bad)
cli
into
push
push
test
movs
gs
stos
pxor
ror
test
pop
push
dec
xchg
loop
pop
push
dec
jmp
sub
add
test
pop
fadd
add
jns
mov
xchg
add
jno
fs
mov
nop
idiv
scas
push
jae
xor
adc
sbb
mov
movs
push
cmp
or
out
loopne
dec
cld
test
inc
xor
mov
test
mov
sbb
push
jns
dec
or
ins
jp
stc
mov
xchg
push
xor
mov
aam
dec
out
xchg
fist
stc
retf
out
or
jae
ds
xor
jbe
cmps
inc
outs
popa
iret
dec
in
push
dec
xchg
jae
cdq
stos
ins
jle
mov
mov
clc
test
jle
addr16
push
std
mov
xor
inc
les
mov
add
xchg
pop
rol
and
cmp
xor
ss
cmc
outs
jp
dec
or
pop
aad
mov
mov
(bad)
inc
out
jle
arpl
(bad)
mov
add
fwait
clc
sti
retf
adc
mov
inc
aad
sbb
fdivp
add
pop
mov
test
fidivr
test
leave
xor
dec
mov
jae
mov
cmp
call
mov
add
mov
dec
lds
lods
xchg
inc
out
cmp
push
ss
push
pusha
nop
pop
pop
out
and
dec
mul
mov
mov
cdq
pop
push
lahf
pusha
popf
aaa
mov
sub
jns
pop
fucomip
pop
(bad)
mov
jmp
dec
cmp
or
fucomi
nop
push
xor
jg
mov
sti
and
out
and
add
mov
(bad)
shr
inc
outs
and
mov
jmp
push
mov
lea
mov
scas
sar
cmc
or
popa
retf
rcl
dec
push
push
repnz
push
cmp
gs
sbb
lods
mov
mov
test
test
or
cmps
out
fldcw
mov
adc
cmp
fsub
repz
es
sub
push
lods
lock
mov
cmp
dec
retf
rcl
neg
call
pop
or
xor
pop
test
add
push
out
ins
pop
popa
mov
sbb
xchg
and
addr16
pop
mov
xchg
sub
inc
push
jp
out
adc
mov
cmp
mov
cmp
push
das
cld
jb
dec
xchg
jmp
sbb
xchg
popa
mov
lahf
ret
mov
mov
push
jle
bound
fs
mov
outs
jnp
or
test
arpl
xchg
pop
pop
xchg
test
jbe
mov
inc
mov
or
cmp
popa
fisubr
jae
sar
scas
inc
lods
leave
inc
xchg
lahf
xchg
add
jae
mov
mov
mov
push
ja
hlt
pusha
imul
pop
fsubrp
jmp
cwde
leave
xor
imul
ffreep
stos
test
xor
cmp
add
inc
lds
sbb
sbb
inc
test
dec
inc
in
dec
scas
jecxz
stc
aas
aad
inc
sub
test
mov
pop
jne
fild
mov
loop
clc
sub
jmp
lock
sub
outs
loop
mov
cmp
mov
shr
dec
imul
push
sbb
cmp
mov
or
mov
inc
push
call
leave
pop
mov
out
add
(bad)
adc
test
mov
rol
or
push
jecxz
push
data16
cmps
xor
cld
call
adc
int3
inc
sub
push
in
ins
xchg
xor
add
add
pop
test
cmp
retf
xchg
mov
inc
imul
cmps
adc
mov
sar
jnp
iret
lds
cmp
sbb
mov
mov
xchg
ds
test
in
rcr
pop
mov
in
repz
sub
movs
jno
mov
adc
fs
sbb
sbb
mov
gs
push
inc
xor
lods
adc
dec
(bad)
jecxz
xchg
cmps
dec
cmps
push
pop
jae
sub
mov
pop
test
cmps
xchg
aad
fs
cmps
retf
pop
ja
aad
push
dec
in
mov
enter
xor
adc
dec
jns
lds
adc
xchg
cmp
jle
push
add
adc
adc
mov
mov
retf
sti
out
(bad)
aad
pop
pop
loop
outs
xchg
push
mov
sar
mov
jecxz
enter
ret
movs
dec
xchg
lock
xor
popa
ja
inc
or
cmp
in
jae
pop
mov
mov
dec
adc
jle
jae
dec
mov
jg
sbb
dec
call
sub
mov
cmps
dec
fnsave
adc
lock
loope
or
daa
xchg
mov
aas
out
jne
sbb
push
ins
sub
adc
shl
push
cmp
and
(bad)
call
js
pop
lds
cmp
clc
jnp
ret
sub
cmps
xchg
mov
loop
scas
xor
sub
mov
test
xchg
lods
bnd
mov
iret
cmp
jge
jb
mov
dec
pop
push
xor
inc
(bad)
cmp
outs
inc
sbb
pop
mov
xor
mov
add
es
mov
aaa
js
(bad)
pusha
jo
(bad)
inc
sub
int3
ins
mov
push
inc
cwde
and
jb
add
mov
int3
sbb
cmp
mov
les
mov
outs
mov
pop
push
lods
sbb
pop
nop
jne
adc
out
xchg
ins
rol
push
push
outs
inc
cs
mov
call
adc
fcom
ror
inc
ret
addr16
pop
pusha
sbb
adc
jno
push
test
sbb
pushf
push
in
or
out
popf
sub
sbb
loop
mov
dec
adc
sub
inc
gs
rcl
shr
jle
jg
test
mov
dec
aas
iret
movs
pop
sbb
sub
out
(bad)
dec
call
push
xchg
bound
lock
icebp
lods
enter
adc
adc
sar
xor
mov
add
mov
lods
push
aaa
and
test
cli
mov
inc
test
dec
dec
enter
out
xor
dec
test
jne
sbb
or
pop
out
int3
sahf
loopne
div
cli
pop
xor
dec
mov
or
jg
lds
xchg
or
(bad)
out
gs
aad
dec
xchg
in
xchg
push
add
add
rcl
nop
repnz
xor
cwde
hlt
sbb
xchg
loopne
inc
in
mov
jecxz
loopne
push
in
dec
aam
inc
shr
or
inc
or
jne
stos
jp
cli
cmp
jne
ins
(bad)
pop
test
inc
sbb
xlat
pop
sbb
jecxz
mov
ins
stc
add
pusha
stos
or
sub
inc
mov
xchg
(bad)
push
inc
cmp
push
loope
and
fcomp
dec
cwde
popf
sub
push
test
cld
jae
outs
sub
fdiv
mov
cmp
push
les
jmp
pop
mov
in
cwde
hlt
fdiv
sbb
test
sub
jae
lods
xlat
xchg
stc
push
rcl
cmc
fidivr
sub
jbe
repz
jp
cmp
neg
jmp
shl
lds
xchg
fwait
stos
sti
jbe
das
loop
call
test
push
sbb
cli
xchg
imul
mov
jmp
femms
cs
fmul
dec
adc
adc
xlat
repz
ds
inc
in
add
jmp
ret
ret
adc
push
cmp
js
mov
test
sahf
push
mov
pop
mov
je
pop
push
push
std
push
xchg
scas
inc
idiv
sti
lods
xor
jp
jge
mov
(bad)
sbb
inc
dec
add
sahf
cmp
mov
mov
push
fist
imul
jbe
call
(bad)
bound
mov
push
adc
outs
mov
cmp
add
addr16
sbb
pop
xchg
ret
test
test
test
jno
sub
(bad)
clc
pop
sti
inc
arpl
jb
cmc
out
and
adc
inc
fld
movs
es
fld
repz
out
(bad)
pop
and
xchg
or
fsubr
(bad)
aad
mov
aam
pushf
mov
into
dec
sar
dec
leave
test
(bad)
or
test
fnsetpm(287
ja
adc
scas
xor
jecxz
mov
je
cmps
repnz
mov
push
jnp
mov
cmps
jbe
xchg
call
jp
outs
popf
call
or
loopne
push
inc
ror
pop
loopne
in
sar
adc
ret
pop
fsub
aad
xor
mov
pop
mov
pop
loopne
loope
adc
adc
bound
outs
(bad)
ret
mov
dec
jmp
ret
mov
data16
and
movs
lods
fsub
push
dec
pop
push
and
outs
es
adc
xor
ror
jl
fimul
xchg
sbb
adc
hlt
sbb
pop
mov
lea
and
or
call
inc
pop
lea
mov
ins
imul
out
adc
fld
xchg
add
mov
mov
(bad)
mov
add
push
add
dec
popf
mov
retf
lahf
cmp
inc
cmp
xchg
ret
mov
stc
(bad)
ja
add
dec
inc
adc
inc
xor
xor
int
pop
push
out
and
dec
cmp
jg
cdq
push
in
mov
and
xchg
or
test
sbb
mov
retf
add
fnstsw
jge
add
sub
gs
push
cmp
dec
in
push
inc
(bad)
enter
arpl
repnz
pop
push
jb
ins
int3
retf
sbb
sbb
rol
push
xor
inc
mov
lods
lea
enter
or
ficomp
or
hlt
push
lods
mov
mov
mov
pop
dec
inc
repnz
xchg
outs
push
push
addr16
fwait
push
pusha
scas
jnp
pop
sub
mov
fdecstp
inc
imul
and
inc
cmp
push
sbb
mov
pop
or
pop
jns
push
pop
pushf
pop
loope
xchg
pop
jp
push
gs
cmp
sbb
push
jle
dec
lea
test
push
ins
add
xchg
test
pop
pop
push
aaa
fs
pop
inc
cli
cld
push
js
(bad)
xchg
cdq
push
xor
dec
cmp
add
popa
xchg
add
or
inc
jo
push
shr
dec
adc
jp
xchg
pop
mov
ins
sbb
int
mov
push
mov
push
add
icebp
shr
in
(bad)
jge
stc
ins
movs
int3
xchg
(bad)
out
dec
cmp
loope
push
sahf
rcr
adc
and
mov
xor
push
pop
loope
xchg
dec
push
dec
sbb
push
push
fld
sbb
mov
add
sub
clc
mov
and
mov
cld
add
xchg
xor
dec
cmp
xchg
jmp
adc
lahf
(bad)
pop
cmps
cmp
stos
sar
add
mov
icebp
call
cmp
pop
jno
fst
inc
lahf
inc
fwait
pop
xchg
or
or
xor
jmp
scas
mov
mov
and
jne
adc
cmp
pop
xchg
call
add
and
mov
cmp
push
cs
push
call
fdiv
aaa
outs
pop
inc
mov
aad
pop
mov
jge
lea
sti
xchg
loop
aaa
lahf
pop
popf
(bad)
rol
push
mov
jb
lds
sbb
jg
push
ret
cli
call
sahf
fwait
hlt
mov
popa
inc
and
jle
es
xor
push
mov
xor
fstp
inc
ja
aad
and
sub
cld
pop
mov
add
std
js
scas
and
sub
xchg
mov
mov
push
mov
mov
xor
lods
xchg
jmp
xor
or
bound
loop
pop
and
xchg
inc
mov
into
idiv
test
mov
mov
dec
idiv
test
xchg
pop
mov
test
sbb
xor
mov
pop
push
xor
repz
dec
mov
pop
jmp
mov
push
jp
jne
mov
jmp
jmp
outs
and
enter
js
and
icebp
xlat
mov
mov
push
mul
pop
(bad)
mov
fmul
or
xchg
pop
push
sbb
add
and
(bad)
out
and
xchg
and
mov
inc
pop
retf
pop
mov
lods
push
inc
pop
adc
js
scas
js
clc
lods
push
jmp
and
fild
jb
mov
out
xchg
mov
push
stc
and
sbb
inc
scas
sbb
fcomp
fdiv
mov
lock
add
ins
iret
mov
ror
mov
xchg
mov
js
movs
and
clc
push
movs
outs
push
retf
shl
popa
or
loop
jae
icebp
fisttp
xchg
rcl
push
gs
mov
add
jne
fs
mov
gs
pop
daa
cmp
inc
push
mov
iret
imul
stos
popf
test
pusha
repz
(bad)
out
nop
jecxz
cli
ds
dec
out
call
aaa
dec
mov
mov
shl
test
dec
fsubr
pushf
push
inc
popa
sbb
cmp
aas
add
scas
cmps
mov
fldenv
push
fisub
sub
xor
js
pop
sub
stc
adc
sbb
jle
std
xor
and
jmp
shl
xchg
mov
shl
loope
pop
cld
sbb
and
out
fsub
mov
in
sub
xor
scas
cmp
push
mov
dec
dec
jns
or
or
xor
mov
(bad)
ins
or
pop
ins
mov
fcompp
movs
jbe
push
test
test
pop
push
adc
xlat
xor
sbb
retf
xor
cmps
cmp
pop
pop
xor
ret
out
add
ss
sbb
mov
mov
scas
xchg
xor
adc
retf
pop
js
push
cmp
dec
push
ja
adc
bswap
aad
xchg
icebp
xchg
je
xor
inc
test
mov
pop
mov
cli
or
loop
sbb
outs
adc
fcom
mov
jp
xchg
mov
xchg
cmp
sbb
jmp
adc
call
push
jbe
scas
icebp
clc
outs
mov
mov
push
push
call
or
and
cmp
lock
fwait
and
rcr
or
(bad)
loope
xchg
jle
pop
mov
push
gs
popf
hlt
(bad)
mov
outs
movs
mov
lods
jecxz
int
test
into
push
icebp
movs
inc
fldenv
xchg
ret
cs
imul
daa
mov
retf
sub
mov
ins
mov
push
es
jle
scas
mov
jnp
mov
test
movs
gs
scas
stos
stos
aas
into
xchg
ds
ds
xchg
cwde
add
sti
sub
(bad)
fist
xchg
xor
shl
add
inc
push
add
add
or
retf
pop
imul
scas
and
in
push
pop
sbb
inc
lea
dec
ss
repnz
test
dec
fiadd
dec
out
push
pop
retf
call
hlt
jle
mov
cwde
inc
stos
scas
cmp
mov
mov
add
rcr
jge
int3
out
aaa
in
xchg
loope
fld
fnstenv
dec
mov
jmp
cmps
mov
jns
cmp
int
xlat
or
sub
push
sub
cdq
jge
pop
xor
xchg
retf
lahf
mov
loope
hlt
mov
das
loope
pop
movs
mov
xor
adc
enter
dec
dec
mov
xor
fidiv
add
inc
rcr
stos
cli
mov
and
in
sub
mov
ins
popf
dec
mov
cli
add
enter
xchg
inc
test
movs
push
jns
scas
xor
out
xor
aas
clc
cmp
dec
or
ins
stos
sti
div
fnsave
push
in
dec
int
push
and
ds
mov
and
xor
push
mov
mov
daa
in
aaa
xchg
cmp
fimul
fst
push
mov
dec
push
test
(bad)
jmp
adc
(bad)
(bad)
push
mov
jg
xchg
out
mov
gs
(bad)
xchg
test
fst
shl
push
pop
mov
rol
iret
nop
shr
(bad)
sub
fcmovb
cmc
xchg
jne
pusha
jne
jnp
push
mov
fcomp
scas
jbe
enter
pushw
mov
cmp
and
fsubr
mov
cmp
inc
in
xchg
jge
pop
and
mov
cmp
fwait
int
pop
sbb
adc
push
mov
jmp
sub
imul
add
and
add
mov
sub
adc
or
call
dec
daa
xchg
lock
cmp
add
or
cs
xchg
out
jnp
mov
push
or
loope
jb
dec
call
sbb
lock
add
lock
and
shr
sub
les
jb
xor
mov
out
sub
loopne
stos
fimul
push
in
arpl
jmp
pop
mov
in
test
int3
push
loopne
sbb
mov
mov
and
dec
add
fs
push
pop
mov
inc
push
enter
fidivr
xchg
xor
rcl
in
das
pusha
sbb
(bad)
div
dec
(bad)
mov
sbb
imul
cdq
mov
mov
pop
movs
dec
loopne
shr
hlt
gs
mov
push
or
ja
push
adc
ins
add
div
cmps
or
mov
test
pop
icebp
pusha
and
push
retf
pop
les
inc
aam
and
cmp
outs
mov
mov
test
push
xchg
int
jecxz
inc
xchg
stos
shl
or
pop
adc
mov
adc
add
xchg
mov
add
and
int
sub
jae
cwde
pop
pop
cdq
mov
outs
jg
sbb
mov
outs
xor
pop
loopne
ds
or
cdq
mov
xchg
sub
imul
cmps
addr16
adc
retf
add
div
add
std
(bad)
adc
fidiv
add
push
popf
inc
popf
idiv
xchg
out
movs
call
inc
add
push
movs
add
popa
jno
cmc
rol
mov
adc
rcl
dec
inc
jp
inc
retf
inc
fsub
or
add
cmp
imul
sbb
imul
loopne
sbb
jnp
fild
aam
add
das
inc
xchg
xchg
xor
pop
xlat
ret
cli
fisubr
rcl
xchg
ficom
call
and
and
xchg
add
add
(bad)
mov
mov
xor
sbb
sahf
lahf
jbe
and
mov
pop
sbb
lock
mul
cli
dec
jae
sbb
and
in
loop
pmaxub
mov
cwde
dec
sbb
pusha
repz
mov
ret
ds
imul
ins
(bad)
and
push
cdq
xchg
and
inc
or
repz
mov
jmp
mov
push
mov
dec
sub
mov
jo
dec
das
cmp
mov
adc
pushf
sbb
mov
dec
inc
adc
rcl
imul
in
sub
mov
aas
lods
inc
sub
xlat
arpl
jo
dec
nop
mov
sti
mov
mov
fisttp
aad
ja
lods
retf
mov
daa
add
xor
mov
loop
pop
cmc
pop
or
not
data16
dec
adc
pushf
xor
inc
fs
and
push
test
jle
push
pop
sahf
(bad)
cs
mov
imul
adc
stos
test
out
jp
mov
mov
jmp
leave
cmp
cmps
movs
cwde
repz
mov
fnstsw
add
cmc
pusha
int3
loope
xor
arpl
or
mov
fs
enter
mov
mov
(bad)
and
sub
fstp
dec
or
out
and
addr16
xlat
into
pop
out
or
sbb
adc
in
mov
pop
lods
adc
cmp
sti
cmc
xor
inc
mov
or
into
call
add
add
das
loope
inc
aas
pop
mov
mov
rcr
cmp
push
push
dec
jge
xchg
jle
out
ficom
pushf
aaa
adc
aas
cmp
add
mov
sub
retf
mov
loop
pop
popf
clc
cmc
or
test
dec
and
cmp
(bad)
xchg
test
jb
in
stos
xor
xlat
dec
sbb
or
mov
cwde
xchg
sahf
xor
(bad)
cmc
jmp
rcl
cmp
mov
xchg
push
in
rep
jno
mov
dec
fcmovnbe
mov
add
xchg
cmp
xchg
mov
mov
outs
push
dec
mov
mov
aad
loop
pop
xchg
xchg
sahf
test
(bad)
cs
ins
and
adc
(bad)
sub
jns
jmp
pop
xor
xchg
inc
in
adc
ret
jmp
sub
scas
imul
movs
pop
rol
int3
or
call
and
or
xchg
cwde
je
loope
retf
data16
movs
jmp
cmp
je
cdq
mov
push
daa
ins
popa
nop
lods
aaa
getsec
or
jg
and
push
push
loopne
adc
mov
add
pop
xchg
loop
test
stos
hlt
sbb
pusha
stos
rcl
cs
shr
cli
pop
and
mov
and
scas
or
imul
pop
int
mov
mov
out
pop
sub
xor
mov
push
cmp
cmps
fiadd
imul
(bad)
sbb
cld
mov
cmp
ds
adc
jne
inc
adc
ins
mov
leave
push
jb
arpl
test
cmp
push
jecxz
pop
dec
dec
add
into
outs
nop
push
std
mov
mov
push
inc
xchg
cmp
ins
lods
repnz
imul
cmc
mov
push
daa
addr16
ret
popa
or
jb
dec
imul
xchg
lahf
jecxz
outs
(bad)
mov
and
aam
push
fmul
cdq
jle
(bad)
outs
push
es
jge
retf
gs
out
loopne
cmps
div
movs
jo
jge
dec
jecxz
sti
call
sub
cmps
hlt
neg
test
call
cwde
shl
(bad)
sub
jo
ret
mov
dec
xor
mov
adc
nop
retf
or
push
arpl
mov
dec
xchg
nop
sub
mov
jmp
(bad)
jmp
ret
jae
xor
push
ja
dec
imul
fst
dec
push
inc
push
(bad)
scas
pop
movs
test
call
and
aam
stos
push
out
pop
ss
sub
(bad)
hlt
sahf
and
add
iret
gs
and
sub
sbb
xlat
arpl
mov
(bad)
jg
adc
dec
jmp
in
leave
data16
adc
ret
jmp
dec
jp
icebp
ds
cmp
gs
cmc
inc
add
mov
rcr
mov
pop
push
mov
cs
shr
inc
ret
sub
xor
xor
sahf
fwait
(bad)
into
sub
cmps
stos
push
xchg
mov
sub
lods
cmp
stos
add
jmp
mov
and
cmc
add
mov
in
out
sub
lea
cmp
mov
or
hlt
loopne
in
data16
mov
add
or
and
adc
inc
xchg
lods
mov
cmps
in
popf
movs
pushf
dec
mov
cmps
lock
outs
int
sbb
test
inc
pop
xor
out
imul
(bad)
sbb
adc
and
mov
dec
and
inc
sahf
mov
ds
jb
bound
cli
push
sbb
adc
cld
adc
xor
mov
retf
bound
inc
std
loopne
mov
fsubr
sbb
int3
fadd
and
xchg
add
jo
std
cli
shl
arpl
jnp
push
out
test
ficomp
fst
and
(bad)
in
rcr
lods
cld
adc
push
in
add
ins
test
xchg
test
mov
pop
push
in
dec
int
clc
das
adc
mov
clc
sti
loope
cld
jae
fs
outs
mov
ror
inc
fldln2
jo
shl
fwait
xor
push
and
enter
sbb
in
inc
out
pop
or
xchg
adc
scas
sub
adc
adc
sti
icebp
xchg
xchg
mov
xchg
mov
cmp
push
arpl
jnp
in
enter
xchg
nop
adc
das
mov
aas
mov
int
(bad)
in
xchg
movs
lea
out
xchg
jno
adc
sti
int
out
pop
jl
popf
(bad)
fild
or
dec
fst
bound
sub
or
call
xchg
scas
push
sbb
mov
xor
int3
mov
or
not
loope
sbb
xchg
xor
push
jle
stc
cmc
pop
mov
popf
fistp
or
and
jno
mov
jae
xchg
add
and
add
sub
and
popf
retfw
jne
ud2
stos
mov
rol
mov
mov
dec
scas
inc
push
push
xchg
inc
mov
sbb
xor
stc
add
out
sahf
shr
wrmsr
(bad)
std
les
lods
in
push
pop
scas
gs
pushf
sbb
jb
stc
nop
mov
and
stos
and
sahf
xchg
iret
inc
sub
mov
inc
jns
mov
sti
shl
dec
scas
cwde
pop
inc
sub
ins
loope
and
es
out
mov
push
pop
aas
push
aaa
pop
imul
es
xor
mov
and
xchg
shl
dec
mov
add
movs
leave
int3
xchg
sub
movs
mov
es
call
stc
jmp
mov
push
xor
push
popf
and
sbb
sub
dec
jmp
dec
xor
mov
rcr
repz
xchg
ret
xchg
cwde
(bad)
mov
jle
bound
popa
inc
cdq
inc
(bad)
popf
repnz
imul
popf
mul
dec
cmps
dec
dec
inc
daa
mov
push
push
sahf
sti
push
mov
prefetch
fst
cmp
inc
pop
or
sub
mov
adc
dec
bts
jle
cmp
clc
push
pop
push
loope
call
sub
lods
cmps
mov
lahf
cs
loop
sbb
hlt
cld
push
pop
(bad)
out
jnp
push
mov
jmp
mov
add
jg
mov
push
cdq
push
cmc
or
pop
das
sub
dec
in
sbb
jp
push
cmp
dec
fpatan
in
popf
shl
inc
add
rol
mov
movs
(bad)
enter
cmps
rdpmc
sbb
data16
sbb
retf
mov
out
fbstp
xchg
mov
popa
repz
cld
xchg
ins
into
adc
bound
fs
push
pop
aam
cmp
push
in
mov
pusha
out
fisub
push
test
mov
stc
cmc
retf
dec
ss
and
adc
out
retf
pusha
push
inc
pop
or
repz
loopne
ja
and
jmp
lods
mov
mov
sub
fsubr
arpl
inc
jp
cwde
pusha
hlt
pushf
pop
stc
mov
das
push
inc
aaa
int
cmc
xor
das
push
jmp
inc
cmps
add
adc
ins
nop
pop
fs
out
shl
stos
std
into
inc
sahf
jo
and
or
jno
test
imul
sbb
jmp
pop
(bad)
push
out
dec
cwde
cmp
mov
jmp
js
(bad)
ja
jb
les
dec
sahf
xor
les
xor
jae
xchg
cmps
push
popa
in
sub
je
(bad)
jg
push
sbb
add
xchg
mov
ins
inc
cld
js
loopne
jbe
sti
adc
sbb
(bad)
test
xchg
(bad)
ds
icebp
iret
outs
in
xchg
sub
outs
jle
ror
or
leave
mov
stos
or
stos
lea
pop
xor
call
aad
cmps
sbb
imul
or
cli
mov
test
jge
fcomp
sbb
repnz
daa
mov
and
dec
pop
inc
push
mov
xor
cli
jae
xor
dec
jns
(bad)
ja
(bad)
sbb
mov
sti
retf
jmp
cmps
cmp
dec
push
xchg
loop
cmp
mov
retf
fucomip
mov
ss
test
pusha
xchg
ss
push
and
mov
sbb
jnp
mov
pop
sbb
inc
cld
adc
out
popa
mov
or
mov
and
aad
rcr
pop
jb
(bad)
clc
aas
arpl
jmp
xor
or
cmp
mov
jp
call
outs
mov
lea
repz
ret
stos
and
jae
xchg
jle
aas
sub
jb
fwait
cmp
movs
adc
fmul
repz
mov
cs
jge
xchg
shl
jl
xor
fisttp
shr
fstp
jmp
or
adc
sub
(bad)
repnz
add
sbb
or
cmc
mov
adc
add
xor
cmp
fldl2t
nop
jl
sar
fstp
jmp
sub
test
mov
add
adc
or
scas
(bad)
hlt
or
push
fwait
and
add
scas
ja
iret
rcl
mov
pop
movs
bound
sub
jo
retf
xor
dec
mov
xchg
dec
dec
push
pop
xchg
aad
jns
xchg
push
add
jnp
pop
rol
xchg
arpl
dec
add
aam
dec
xchg
push
fild
dec
aas
mov
and
mov
mov
add
or
pop
and
or
inc
jae
push
je
test
adc
inc
cwde
retf
cdq
out
fdiv
sub
add
dec
dec
xchg
push
push
sti
lods
js
mov
dec
xor
xor
dec
mov
fwait
xchg
pop
mov
outs
aad
(bad)
sub
movs
mov
mov
xor
rcl
sbb
mov
fist
in
pop
adc
(bad)
(bad)
inc
lods
pop
les
push
inc
xor
and
cmp
cmp
(bad)
mov
inc
mov
cmp
aas
jmp
jle
sub
cld
fist
inc
push
add
dec
test
and
jb
adc
inc
loop
jge
push
jne
daa
pop
jle
jmp
retf
inc
push
imul
test
xchg
mov
pop
adc
sbb
inc
push
pop
pop
aaa
sar
jecxz
sbb
sbb
lock
adc
mov
inc
sub
jmp
push
icebp
gs
ror
div
pop
ret
add
adc
(bad)
stc
adc
and
xor
mov
popa
imul
test
jne
iret
scas
xchg
out
std
xchg
push
push
push
(bad)
stc
cmp
pop
ja
add
and
aas
retf
sub
outs
jmp
out
sub
ds
push
and
cmp
ss
xchg
ja
sub
mov
je
mov
adc
inc
in
inc
add
fidiv
mov
shl
bound
loop
mov
xor
xor
movs
enter
cmp
jmp
and
lahf
aad
stos
lds
mov
xchg
and
ins
and
and
jns
cmp
mov
or
dec
sahf
mov
mov
xchg
jb
push
inc
rcr
sbb
xchg
cwde
popf
cmc
sbb
(bad)
cmp
inc
lahf
jge
mov
push
pop
adc
mov
je
leave
fdivr
sub
mov
ficomp
xor
das
outs
test
add
adc
jecxz
and
ja
jl
sbb
add
imul
xchg
es
or
mov
hlt
pop
mov
mov
fsub
add
imul
adc
das
mov
xor
test
xchg
xor
xchg
loopne
jbe
inc
inc
pop
sar
std
mov
inc
fimul
mov
enter
sub
leave
dec
mov
(bad)
pop
test
sbb
jl
pop
in
push
xor
mov
cs
or
dec
push
push
cmp
add
adc
in
xchg
mov
ror
cmp
push
outs
push
xor
sub
fnstenv
test
cs
inc
es
pop
test
retf
sub
loope
popa
jnp
nop
arpl
(bad)
shl
sub
loope
cmp
xor
popa
push
mov
call
push
pop
fldcw
or
mov
jnp
out
lock
pop
lahf
mov
shl
ja
outs
ja
inc
mov
mov
push
pusha
mov
jbe
shl
mov
push
push
inc
cmp
jmp
push
idiv
in
adc
add
stc
ret
adc
xor
mov
mov
sub
sbb
int3
and
sbb
les
pusha
jmp
sub
or
add
dec
fucom
push
loopne
fnstenv
std
cmps
pop
call
xchg
push
rcr
pop
dec
push
bound
add
xchg
pop
cmp
(bad)
movs
pop
mov
add
add
inc
or
sub
test
xchg
jle
inc
imul
adc
or
js
div
loop
les
sub
xor
sbb
movs
sbb
ja
outs
xor
jo
je
js
clc
jp
adc
mov
mov
fsub
sbb
push
inc
fwait
outs
fcmovbe
pop
and
scas
mov
ins
or
test
cmp
mov
mov
push
daa
(bad)
popf
cs
cmp
jo
sbb
sbb
fst
ds
mov
fmul
test
icebp
fs
cmc
push
in
mov
addr16
sahf
mov
and
jmp
mov
xor
mov
jg
xchg
fwait
dec
adc
push
adc
sub
xor
push
scas
mov
mov
mov
scas
jg
push
push
imul
xlat
stc
outs
repnz
repz
cmp
xchg
xchg
test
pop
cmp
xchg
pop
push
mov
mov
inc
xchg
lds
movs
pop
and
pop
xchg
jne
push
sub
ret
js
mov
adc
pop
hlt
xchg
leave
jo
or
cdq
push
arpl
add
mov
dec
jne
out
cdq
and
sub
test
push
push
fwait
xor
repnz
je
scas
ror
pop
xor
jp
rcr
mov
test
mov
pop
dec
fs
push
sub
mov
test
mov
mov
and
pop
xchg
hlt
dec
sbb
cmp
adc
ret
mov
jno
push
xchg
cmp
xor
mov
and
ror
out
fcomp
int3
mov
leave
adc
and
outs
fs
clc
jge
sbb
cmp
pop
adc
ds
inc
or
test
push
call
mov
or
cli
pop
fst
imul
mov
xchg
out
xchg
xor
gs
mov
jp
inc
sbb
cwde
lock
aad
jnp
jle
cli
enter
pushf
push
xor
and
fadd
xchg
mov
movs
sub
and
mov
and
retf
jo
aam
inc
ja
xchg
sub
pop
xchg
inc
jmp
add
jb
fld
shl
inc
(bad)
dec
pop
cmps
sbb
mov
sti
mov
popa
iret
test
fwait
inc
push
xlat
ja
clc
pop
sub
fwait
pop
loopne
ins
add
ror
std
(bad)
push
mov
arpl
mov
retf
stc
lods
shl
scas
(bad)
scas
pop
loopne
adc
inc
(bad)
or
sbb
or
adc
pop
push
cmp
cmps
outs
loopne
(bad)
mov
push
add
mov
sub
mov
pop
call
aaa
fisubr
xchg
test
add
cmps
sub
xchg
cmps
push
mov
xchg
jnp
push
loop
adc
pop
enter
in
imul
shl
fwait
cwde
or
adc
adc
and
pcmpeqd
jmp
jbe
test
sbb
repnz
add
ret
scas
mov
add
add
es
imul
mov
mov
stos
push
bound
jge
ror
(bad)
mov
cmp
arpl
(bad)
pop
mov
std
dec
jnp
xor
cmps
scas
call
stos
or
inc
pop
pop
sbb
(bad)
cmp
jmp
sub
int
push
out
aam
and
je
scas
push
cmps
lock
push
mov
retf
adc
call
stc
jmp
out
into
sub
or
mov
jmp
push
mov
sahf
cmp
push
in
fcom
ja
mov
jl
lods
popf
adc
mov
pop
sbb
push
adc
(bad)
mov
jecxz
push
call
rcl
(bad)
in
(bad)
inc
pop
mov
retf
sub
push
addr16
cmp
in
xchg
lods
xor
mov
das
and
nop
(bad)
jl
mov
and
jge
sub
rol
and
push
xor
adc
pop
fsub
inc
pop
(bad)
xchg
adc
ins
scas
adc
lock
xlat
push
mov
mov
push
popf
fidivr
or
nop
enter
push
jnp
enter
loop
int
cs
in
push
mov
push
in
fnstsw
iret
jle
add
rcl
cmp
or
ret
xchg
fwait
xor
in
aas
push
popa
jae
dec
mov
inc
test
inc
(bad)
jb
xchg
inc
int3
pop
push
lock
fadd
xchg
push
inc
int3
mov
loop
dec
add
cmp
into
push
and
dec
inc
iret
pusha
xchg
pop
div
loop
xchg
call
sub
and
sti
sahf
push
lea
cmps
(bad)
xchg
je
mov
clc
mov
xor
pop
stos
nop
jecxz
pop
push
pop
adc
aas
cld
mov
xchg
jg
jle
adc
data16
adc
inc
push
dec
mov
dec
and
dec
iret
mov
jne
xor
push
mov
loope
sub
mov
jae
cwde
arpl
aad
stos
(bad)
daa
xchg
out
sbb
fistp
fwait
xchg
mov
sub
sbb
sahf
and
and
and
lahf
loope
in
pusha
es
js
leave
push
loope
sbb
in
xchg
jae
es
sub
push
dec
or
repz
mov
les
sbb
push
jmp
shl
aad
jns
push
mov
jno
rol
mov
fld
scas
lods
fdiv
dec
xor
jo
xor
sti
sub
test
rcr
mov
lds
jecxz
sub
mov
push
pop
imul
push
add
sbb
scas
mov
xor
cmp
leave
(bad)
jae
les
(bad)
push
xchg
popa
mov
repz
and
bound
mov
(bad)
and
mov
inc
sub
(bad)
pop
fisttp
lock
hlt
aas
xchg
mov
sub
ins
out
and
xchg
push
adc
jg
mov
sbb
xor
pop
mov
cmps
xchg
inc
jge
sub
add
push
pop
into
jnp
repz
ins
mov
in
jb
fsubr
pop
push
push
aaa
ja
inc
rcr
sub
aad
fsub
(bad)
jle
xrelease
pusha
pop
lods
scas
jl
hlt
inc
ret
std
popa
sbb
and
fist
pcmpeqb
mov
cmp
test
mov
mov
aaa
jb
mov
fisubr
adc
push
pop
inc
push
and
cmp
dec
add
daa
cmp
mov
mov
test
xor
xchg
or
dec
mov
(bad)
mov
test
jge
sub
mov
outs
push
mov
mov
cmp
js
sbb
pop
mov
ja
xchg
mov
scas
call
cmc
push
lods
stos
xchg
rcr
(bad)
jae
mov
mov
nop
jnp
loope
adc
dec
clc
loope
sbb
inc
mov
xsha1
cmps
or
mov
adc
inc
inc
sub
(bad)
sbb
test
ins
pop
push
sbb
(bad)
pop
sbb
out
xchg
fist
cmps
fucom
(bad)
cmp
jmp
dec
sbb
les
sbb
std
mov
dec
je
call
fcmovnu
xchg
mov
cmc
push
in
sub
aas
jg
pop
inc
lea
and
imul
pop
pop
mov
dec
rol
popa
jecxz
mov
inc
jmp
div
(bad)
iret
jae
xor
jbe
(bad)
or
jecxz
mov
aaa
jge
test
xor
std
mov
xlat
inc
arpl
cmp
xor
jae
imul
pop
mov
nop
outs
and
mov
dec
dec
mov
push
xchg
mov
sub
ror
dec
push
cwde
push
or
retf
stos
pop
push
inc
adc
test
dec
mov
out
mov
mov
(bad)
cmps
add
data16
dec
jecxz
add
mov
dec
adc
cld
push
std
mov
fstp
fbstp
jmp
and
repnz
sub
jg
cmp
dec
retf
ins
aad
or
or
cmps
jp
cs
inc
cli
ret
inc
jmp
mov
fs
adc
or
sub
mov
ins
lahf
(bad)
cmp
shl
jns
repz
inc
mov
mov
dec
mov
loop
mov
(bad)
jg
clc
sbb
loopne
cdq
inc
cwde
inc
scas
adc
stos
jo
push
fwait
nop
jl
ror
test
push
inc
test
pop
lea
mov
int
ret
jnp
fild
stos
sub
inc
xchg
jle
push
inc
push
pusha
lods
frstor
(bad)
dec
ins
daa
add
out
or
jmp
sti
cmp
and
bound
cmc
xor
jmp
test
inc
jge
sub
add
test
xchg
repz
xchg
aaa
push
lahf
lea
xchg
in
push
mov
lods
sub
sti
cld
sub
mov
xor
push
frstor
arpl
fst
lea
mov
pop
fnstcw
rcr
in
lock
mov
dec
lds
clc
or
jp
repz
pop
or
std
cmp
adc
add
ins
in
mov
sti
es
cmp
xchg
cmp
xlat
mov
enter
cmp
into
xor
dec
dec
dec
and
ficom
pop
fimul
and
movs
inc
in
adc
mov
test
sbb
or
sbb
mov
and
hlt
mov
in
sbb
dec
dec
jge
dec
sub
test
mov
mov
aaa
scas
xor
retf
cli
inc
in
inc
and
enter
cmp
xor
adc
jecxz
add
loope
leave
sub
pop
xchg
sub
pusha
dec
(bad)
cmp
lods
les
scas
inc
jns
xor
inc
cs
sub
mov
icebp
mov
mov
mov
inc
nop
mov
in
xchg
bound
fdivr
mov
cmp
inc
push
inc
(bad)
(bad)
fist
in
xor
mov
(bad)
fist
sbb
les
aad
push
cmps
lods
push
jbe
jbe
xchg
into
stos
adc
(bad)
cmp
scas
or
aam
jae
jo
pop
jno
jmp
inc
mov
mov
sbb
pop
scas
inc
nop
aas
addr16
cmp
pop
push
lahf
lea
jge
pop
mov
inc
jns
jge
stos
retf
pop
push
bound
retf
lock
adc
mov
arpl
in
test
or
xchg
push
xor
dec
xchg
icebp
lods
shl
cli
leave
aas
inc
xor
leave
jp
daa
mov
into
addr16
cdq
pusha
jp
and
aaa
bound
push
aam
lahf
sbb
fnstcw
jg
add
fs
mov
add
shr
or
push
adc
pop
in
mov
pop
shr
push
inc
xchg
push
aam
out
gs
jmp
out
xchg
xchg
pop
mov
cmp
lds
repnz
or
mov
and
mov
push
mov
or
ins
dec
retf
loop
pop
daa
lods
pop
lahf
xchg
test
xor
imul
pusha
pop
shr
ret
jecxz
dec
mov
imul
movs
mov
rol
and
push
rol
inc
add
mov
mov
inc
cmp
inc
lahf
sbb
test
int
cmps
push
mov
xchg
mov
bound
fs
stc
mov
out
mov
xor
mov
ins
pop
gs
fwait
push
adc
sbb
aad
mov
jae
pop
inc
inc
xchg
daa
jnp
daa
mov
lods
fst
(bad)
jmp
xor
cmp
push
mov
sub
mov
xchg
loopne
dec
aas
mov
outs
(bad)
loop
iret
xchg
mov
pop
xor
cwde
adc
daa
shl
int
mov
cmp
push
ins
pusha
push
test
add
clc
ins
aam
dec
fimul
push
add
imul
mov
push
loop
cmc
cli
js
mov
adc
(bad)
addr16
mov
les
das
push
test
loopne
push
outs
jl
jmp
jmp
mov
sahf
ins
std
fstp
cmp
inc
sti
fst
frstor
cmp
add
cmps
mov
(bad)
adc
popf
cmc
xchg
push
ficomp
push
mov
test
out
jmp
pop
test
add
sub
inc
xchg
mov
sbb
dec
cs
into
mov
test
cdq
mov
jnp
mov
mov
and
fadd
adc
scas
xchg
pop
iret
lds
and
xor
xchg
outs
pop
sbb
in
arpl
div
scas
and
popf
mov
test
jo
lahf
cmp
sub
sahf
push
pop
arpl
shl
scas
fmul
add
movs
cli
or
and
mov
add
stos
lea
push
adc
out
xchg
int3
outs
into
and
or
lock
pop
push
fldenv
sbb
daa
inc
xchg
(bad)
outs
loop
stc
call
sub
stos
adc
mov
add
or
popa
stc
(bad)
inc
packuswb
push
outs
ins
and
add
aas
(bad)
push
clc
mov
sub
pop
jle
fs
and
outs
lea
and
jns
scas
std
ret
out
dec
dec
int3
xchg
cmp
cmp
test
jmp
data16
pop
pmulhuw
inc
mov
push
mov
add
xchg
pop
inc
je
imul
sbb
imul
jbe
pusha
sahf
xor
cmp
mov
(bad)
nop
lock
hlt
mov
or
mov
cmp
cmp
aaa
xchg
arpl
mov
loopne
mov
int
pop
and
push
sub
adc
cmps
jmp
jno
pop
(bad)
add
lea
add
repz
shufps
inc
inc
pop
adc
scas
std
imul
push
out
sar
ds
and
pop
xchg
stos
movs
mov
scas
gs
das
xchg
and
mov
xor
les
jp
add
fnstsw
push
adc
(bad)
iret
mov
pop
push
pop
lds
sub
cmp
add
sub
rcr
test
and
fldenv
pop
cmp
add
push
rcr
add
std
int
je
leave
mov
movs
cmp
shl
int3
mov
(bad)
xor
fsub
pop
fbstp
jecxz
ins
add
arpl
(bad)
je
test
lock
popf
(bad)
(bad)
in
(bad)
mov
push
out
mov
test
dec
cmps
ja
data16
aas
aas
mov
pop
xchg
rcl
or
dec
and
pop
push
cdq
das
arpl
xchg
mov
fisub
pusha
xchg
cmp
aas
es
nop
sbb
or
les
sbb
pop
in
test
inc
push
cmc
test
loopne
push
push
dec
repz
out
adc
push
cmc
mov
cdq
sti
cmp
pop
xor
or
clc
or
(bad)
cmc
iret
mov
or
hlt
mov
jmp
push
mov
cld
xchg
pusha
retf
lds
fwait
ds
pusha
cwde
dec
minps
pop
mov
fld
or
and
ret
push
enter
push
pop
pop
fistp
icebp
iret
das
jne
shl
pop
dec
xor
aam
pop
hlt
lods
rol
lock
adc
inc
and
add
pop
or
movs
fsubr
or
add
dec
sar
aad
xchg
pop
add
mov
dec
sub
add
mov
call
jns
pop
inc
cmp
inc
cld
stos
aaa
sbb
mov
pop
xor
aas
and
mov
inc
mov
inc
sub
jmp
dec
xchg
out
ror
push
xchg
dec
sub
sbb
cmp
cmps
into
push
push
test
or
fsubp
xor
xchg
aas
stos
jge
push
push
cmc
sbb
(bad)
jns
rol
out
mov
aam
push
cdq
lds
call
adc
loope
and
mov
popf
pushf
jle
xchg
add
fild
and
repz
clc
or
inc
or
push
mov
fdivr
sub
in
or
sub
jp
lock
adc
loope
ja
and
retf
outs
les
rsm
mov
nop
lea
pop
add
sub
repnz
sub
inc
dec
add
fidivr
retf
fs
ins
imul
into
ret
jnp
test
dec
sub
cmc
cmp
les
iretw
inc
test
aad
xor
inc
mov
ss
sahf
dec
xchg
stc
stos
scas
push
ror
pop
int
jno
or
pushf
or
push
lock
fwait
pop
test
das
iret
xor
xlat
arpl
push
imul
mov
inc
inc
pop
pop
sbb
add
xchg
shl
mov
adc
das
(bad)
jno
mov
cmp
jne
mov
sti
mov
mov
mov
(bad)
cmc
outs
(bad)
xor
(bad)
in
cmp
pop
sub
inc
cmc
mov
outs
not
mov
jo
call
ficomp
rcr
push
mov
sbb
inc
push
and
add
lea
cmp
and
aaa
mov
mov
lea
rol
in
or
fimul
xor
xor
dec
push
test
das
sub
xchg
outs
jns
jp
stos
jns
data16
imul
int
dec
clc
div
imul
push
leave
mov
mov
jno
cmp
xor
or
loope
sar
jle
push
inc
js
js
cmp
call
dec
ror
into
jo
dec
xor
and
xchg
push
jae
(bad)
call
stos
push
dec
push
pop
and
scas
xchg
test
cmp
rcr
push
xchg
mov
pop
stos
aad
adc
sbb
lods
xchg
sub
and
cmp
pop
(bad)
ins
cmp
jp
cmp
xchg
xor
push
or
jbe
and
xlat
(bad)
int
sti
mov
not
sub
push
adc
in
imul
call
cmp
(bad)
pop
cmp
or
adc
adc
mov
pop
xchg
adc
pop
mov
(bad)
jo
(bad)
cmp
dec
pop
daa
int
cmps
jp
mov
pop
cmps
icebp
mov
mov
sbb
push
stc
mov
into
inc
popf
leave
mov
lds
mov
arpl
cmp
stc
mov
xchg
sbb
arpl
sub
scas
es
push
add
xchg
xchg
es
adc
inc
sahf
push
mov
sti
cmp
xchg
mov
or
retf
add
cmp
dec
push
or
inc
icebp
f2xm1
xchg
xor
mov
js
fucom
test
pop
(bad)
aam
pop
mov
inc
mov
ss
mov
dec
pop
stos
mov
ss
mov
lock
mov
imul
call
dec
pop
xor
ror
push
sbb
test
and
rcl
scas
fmulp
imul
mov
ds
aam
add
(bad)
mov
cmp
mov
mov
or
fs
mov
dec
dec
sbb
or
sub
mov
sub
leave
pushf
clc
aam
sbb
sbb
(bad)
cld
repnz
push
movs
nop
ds
ins
adc
ins
mov
sub
xor
ret
movs
enter
fild
cmp
mov
outs
ins
mov
scas
sti
pop
mov
mov
and
mov
xchg
ret
pop
retf
nop
sub
ds
dec
jge
push
add
add
jl
xchg
das
or
setge
jmp
xor
fsub
pusha
cmp
(bad)
jmp
or
mov
dec
in
sahf
add
movs
push
pop
jp
dec
retf
repz
sbb
call
adc
(bad)
pop
nop
and
sbb
shl
inc
or
mov
inc
add
mov
mov
shr
retf
je
test
pop
stc
and
out
xchg
cmp
mov
mov
jl
sub
movs
jmp
fcomp
mov
cld
test
int
fs
push
rcr
ficomp
jmp
jmp
and
(bad)
fnstenv
xchg
pop
jmp
push
push
mov
mov
dec
inc
jno
jb
jno
xor
js
fwait
cmc
xchg
xchg
test
adc
popf
test
mov
pop
mov
(bad)
sbb
sub
and
jmp
(bad)
mov
(bad)
out
(bad)
and
mov
add
rcr
or
ins
mov
cli
dec
arpl
scas
xchg
push
repnz
je
xor
sbb
cld
or
fld
push
cli
add
adc
out
sbb
mov
out
cmps
jo
inc
or
movs
out
movs
not
jmp
pop
jo
push
pop
jo
test
cmps
(bad)
and
imul
xchg
hlt
mov
dec
cmp
xor
xchg
ds
inc
scas
cmp
(bad)
retf
inc
mov
pop
and
int
shl
inc
test
and
jmp
es
mov
into
xchg
neg
lods
inc
inc
retf
lea
xor
or
add
pushf
scas
aas
test
mov
aam
(bad)
jg
mov
mov
or
(bad)
jmp
shl
fidivr
add
or
pop
(bad)
mov
call
inc
outs
repz
mov
in
dec
inc
add
gs
arpl
push
mov
add
jno
ss
inc
not
movs
loop
and
jae
div
imul
iret
(bad)
fbstp
jp
rcr
jg
push
jp
lds
and
rcr
out
jmp
push
jo
cmp
xchg
test
xor
ror
jl
and
mov
mov
leave
nop
jns
push
daa
scas
or
cmp
adc
aam
addr16
mov
std
sbb
cmp
mov
arpl
and
(bad)
ss
mov
xor
sar
int3
xor
sub
mov
out
adc
cmp
jo
(bad)
popa
out
mov
pop
fnstenv
jmp
sub
les
ins
mov
bound
cs
cmc
mov
sbb
or
jl
xor
repz
xor
jbe
popa
fsub
(bad)
push
sub
mov
and
je
mov
ins
mov
ins
(bad)
mov
inc
out
mov
xor
stos
xor
add
jge
aas
outs
jo
xchg
pop
loopne
(bad)
les
clc
mov
js
rcr
xchg
imul
ss
jp
xchg
sti
lds
push
loopne
add
popa
(bad)
enter
imul
loopne
pop
cmp
fs
fisttp
loop
pop
out
dec
mov
and
mov
push
(bad)
mov
jnp
ss
ss
ror
mov
inc
inc
cmps
xor
rol
call
mov
mov
mov
jg
adc
(bad)
jecxz
lods
sar
sub
cmp
mov
xor
fdivr
cmp
sbb
cmp
iret
jne
retf
in
mov
hlt
icebp
jle
cmp
jmp
mov
or
adc
sbb
loop
mov
sbb
frstor
mov
call
iret
sar
test
cmp
pop
jb
dec
repz
xor
or
sbb
push
retf
cmps
and
add
or
int
and
adc
test
inc
stos
cmc
imul
mov
adc
retf
xchg
es
in
add
lods
and
test
xor
cmp
push
mov
stos
mov
add
jecxz
mov
sbb
out
mov
fnstsw
cld
fwait
cmp
icebp
dec
popa
xor
rcl
(bad)
mov
dec
(bad)
sbb
xor
fild
cdq
pop
push
stos
or
fadd
xchg
pop
arpl
inc
bound
and
out
aaa
inc
imul
add
inc
xlat
mov
stc
and
pop
pop
add
mov
inc
pushf
test
xchg
popa
dec
sub
xchg
aaa
fist
push
mov
pop
xor
mov
imul
inc
or
lahf
and
push
popa
or
jne
popa
push
xchg
fisub
sbb
mov
jl
out
lahf
repz
std
sbb
mov
cmc
aam
xchg
(bad)
in
inc
bound
mov
rcl
(bad)
addr16
dec
std
adc
popf
xchg
dec
jne
and
popa
fidivr
das
aam
(bad)
xor
popa
loop
daa
hlt
add
aad
push
sbb
ss
mov
push
adc
imul
out
stos
popf
add
mov
movs
aas
mov
icebp
das
cwde
cmp
(bad)
jns
dec
out
ret
in
jbe
sub
sub
jmp
jmp
mov
das
rcr
xor
out
jmp
enter
xchg
ss
adc
dec
push
jle
cwde
test
loopne
push
mov
push
shl
jp
add
and
dec
pushf
adc
and
mov
leave
jmp
xor
fsub
scas
ss
repz
add
test
out
xchg
(bad)
daa
adc
mov
arpl
dec
push
sbb
sbb
mov
scas
or
mov
stc
fist
or
scas
(bad)
(bad)
test
xchg
add
rcr
xchg
je
jb
ins
outs
test
fnstenv
pop
stos
fidivr
inc
or
cmp
add
imul
and
push
lock
sub
inc
mov
jne
dec
pop
outs
int3
mov
add
mov
xchg
sub
cli
(bad)
sub
mov
mov
pop
mov
jecxz
js
and
jl
jmp
sahf
bound
cmp
mov
jnp
sar
aam
out
in
lds
adc
or
lds
xchg
dec
syscall
cmps
or
push
(bad)
scas
inc
cmp
(bad)
lods
stos
cmps
dec
xchg
cld
sti
enter
pop
rcr
sub
std
iret
jl
cwde
test
in
push
lods
dec
mov
mov
stos
movs
(bad)
(bad)
in
inc
xor
sbb
dec
jnp
in
jbe
in
or
mov
fwait
scas
into
add
out
sub
mov
ss
pop
leave
jmp
pop
stc
movnti
sbb
bound
scas
jmp
call
inc
sbb
xchg
inc
movs
sbb
adc
loopne
sbb
mov
sbb
addr16
repz
out
jnp
shr
cmp
inc
hlt
mov
jne
jecxz
mov
pop
imul
dec
mov
outs
mov
outs
mov
pop
fisubr
ret
xchg
dec
mov
enter
jb
push
call
fistp
xchg
adc
sbb
push
mov
pop
jae
push
test
shr
xchg
ret
dec
daa
pop
jae
arpl
xor
addr16
or
ss
stos
dec
pop
pop
fistp
and
cli
cmp
imul
test
sub
shl
jg
leave
fistp
ja
loopne
add
loopne
sub
test
rcr
pop
pop
pop
push
xor
ror
add
mov
cmps
into
pop
inc
and
push
fild
adc
(bad)
xchg
sub
pop
add
rcl
inc
sbb
jo
call
push
fs
xchg
jecxz
das
add
(bad)
(bad)
push
sbb
xchg
retf
add
aaa
push
in
sub
ins
idiv
imul
mov
sub
push
pop
jecxz
pop
rcl
cmp
fwait
les
mov
adc
ins
mov
loop
jmp
push
add
jl
cs
and
mov
and
inc
jge
inc
adc
push
enter
in
pop
inc
cmp
pusha
addr16
repz
ins
inc
push
dec
inc
mov
aam
fcomp
rcl
sahf
adc
cmps
fcomp
(bad)
sub
adc
test
mov
fmul
lahf
popa
imul
dec
and
push
mov
lods
and
enter
ror
jno
sub
inc
sub
push
mov
dec
dec
int
mov
lahf
icebp
sti
imul
and
jp
scas
inc
movs
std
fwait
inc
(bad)
add
mov
xlat
push
mov
mov
adc
mov
mov
call
jg
fstp
movs
retf
xchg
or
jnp
xor
stos
popf
(bad)
pop
adc
movs
loop
xchg
retf
repz
sahf
adc
int
mov
lods
mov
loope
add
mov
cmp
rcr
cmp
cmc
fs
dec
mov
cmp
add
mov
fwait
mov
xchg
retf
pop
xor
aas
mov
push
jmp
pop
jle
in
sti
mov
inc
aad
retf
jle
mov
push
pop
xchg
mov
jnp
lahf
sub
and
inc
outs
inc
xchg
push
pop
rcr
mov
jl
std
lock
aas
aad
mov
int3
popf
sub
push
pop
mov
test
lods
or
mov
cli
fnstenv
pop
sbb
fwait
in
imul
mov
ins
adc
and
add
in
xor
jb
mov
cwde
stos
mov
sub
jge
sub
jno
arpl
mov
mov
sub
ror
cmp
loopne
jno
and
xchg
lock
mov
cmps
repz
sub
mov
dec
sub
xor
int
add
jae
pop
inc
imul
pop
push
repnz
pop
sbb
xor
xor
std
cs
mov
add
(bad)
adc
jmp
and
xchg
(bad)
fstp
mov
mov
pop
out
test
adc
aaa
cmp
cmp
sbb
lea
in
jno
in
call
sub
addr16
bound
fs
in
loopne
jp
fcomip
leave
cmp
push
in
ret
jg
cld
cdq
or
aam
push
jge
add
mov
and
push
lods
and
aad
push
xor
inc
outs
out
pop
mov
push
jp
mov
(bad)
dec
add
mov
mov
fxch
clc
mov
aas
dec
sbb
mov
inc
pushf
inc
lea
stos
fcmovnbe
cmp
cdq
ret
movs
pop
into
retf
mov
or
jg
pop
ja
imul
stos
cmp
add
and
xchg
lea
mov
stos
pushf
fmul
lock
sbb
xor
cwde
data16
adc
test
iret
sub
push
leave
lea
mov
pushf
nop
test
sahf
ffreep
jle
jmp
mov
dec
outs
das
(bad)
adc
hlt
sbb
rol
popa
stc
push
xchg
cmp
cmp
dec
outs
pop
fst
test
xor
sahf
inc
xor
cmp
adc
loope
sbb
std
les
sub
mov
daa
sbb
mov
pop
mov
fdivr
pop
test
sar
imul
adc
aam
pop
lock
mov
out
cmp
imul
and
retf
mov
push
jno
int
ds
not
in
push
sub
add
cmc
push
xor
jecxz
sbb
call
movlps
popa
push
rcr
mov
or
mov
xor
rcl
cwde
adc
ret
jp
adc
cmps
aad
push
inc
out
retf
sbb
sub
cmp
push
dec
xor
shl
and
ins
mov
cmc
mov
add
fwait
mov
and
in
(bad)
xchg
mov
sbb
push
ja
pop
(bad)
ds
aad
rol
lds
(bad)
ficom
in
and
test
cmp
dec
push
push
dec
add
jmp
jl
mov
sbb
mov
cld
mov
xchg
mov
inc
ror
outs
lock
scas
xor
fcomp
fistp
sbb
fstp
outs
jl
in
push
fld
push
jmp
gs
scas
cmps
not
sbb
push
cmp
xlat
lea
dec
pop
movs
pop
xor
pop
push
es
xchg
mov
icebp
xor
sub
test
and
fadd
cmps
movs
pop
test
fild
cli
jmp
stos
das
das
or
dec
xchg
mov
loope
clc
xor
dec
(bad)
lds
shl
stc
pop
outs
lea
fmul
xor
daa
cli
mov
jl
leave
outs
sub
imul
jae
cmps
int3
icebp
scas
inc
push
mov
sbb
cli
fnstcw
pop
inc
dec
cli
xlat
data16
mov
dec
clc
or
add
fstp
jns
fwait
mov
mov
loope
addr16
cmp
adc
jbe
cmps
and
fmul
and
sbb
mov
mul
jmp
mov
dec
(bad)
nop
xor
(bad)
popa
rcl
adc
dec
jmp
mov
sti
icebp
cdq
retf
jae
movs
mov
xor
movs
nop
pop
pop
push
icebp
out
ret
popa
es
xchg
call
pop
pushf
in
sub
movs
icebp
sub
sbb
push
out
jmp
pop
out
push
push
lods
inc
aas
dec
mov
dec
int3
adc
jg
fisubr
in
test
pop
add
fisttp
add
call
adc
sub
fwait
push
or
push
pop
sub
aas
(bad)
dec
nop
add
xor
cli
movs
lahf
push
fsubrp
mov
jns
inc
add
call
xchg
frstor
push
popa
je
movs
jp
or
ins
pop
sti
dec
cdq
fist
mov
test
(bad)
scas
sub
das
add
jg
fstp
(bad)
inc
stos
inc
dec
pusha
enter
cmp
dec
mov
xor
mul
xchg
call
mov
popf
add
adc
cld
mov
pop
inc
sahf
and
ss
mov
mov
jmp
in
jge
rcl
shr
xchg
pop
mov
jecxz
es
fcomp
pop
mov
xor
outs
add
test
retf
mov
push
int3
xor
lahf
and
call
bound
(bad)
jns
out
pop
jmp
dec
jne
and
pop
jno
add
lds
(bad)
mov
ins
inc
mov
jno
ds
cmps
gs
sub
adc
pushf
add
add
mov
dec
cmp
cmps
xchg
xchg
jae
sahf
aam
jno
mov
add
call
repz
into
jp
xchg
enter
in
cmp
cdq
jbe
add
cmp
xchg
push
push
pop
ss
shl
fdiv
sti
adc
mov
ror
xchg
dec
lods
sahf
mov
scas
inc
popf
sub
inc
imul
sub
and
imul
ins
in
sti
dec
div
aaa
sar
dec
mov
dec
inc
fnstenv
pop
test
xchg
cmp
inc
pop
inc
jecxz
ss
fld
xchg
inc
mov
cwde
dec
xchg
push
das
xchg
cli
add
push
repz
push
xor
int3
xor
sbb
cli
push
pusha
adc
jb
ror
cdq
(bad)
xor
dec
adc
les
push
or
jb
loopne
fstp
sub
inc
iret
mov
mov
add
xlat
daa
daa
fucomp
movs
cmps
xchg
fild
jl
fmul
cmc
js
(bad)
jl
cwde
pusha
inc
frstor
test
add
pop
mov
sub
push
(bad)
stc
aad
dec
neg
cwde
mov
fistp
out
call
inc
icebp
jle
std
cld
or
shr
mov
sbb
dec
push
adc
add
sub
test
aaa
out
adc
sbb
(bad)
pushf
mov
movs
cwde
jecxz
movs
add
push
cmps
into
outs
cmp
jecxz
add
fist
imul
sbb
das
sub
or
movs
test
sbb
pop
data16
inc
cmp
cmc
mov
sti
imul
fcmovnb
lock
jle
or
loope
cmp
into
pusha
sbb
icebp
icebp
(bad)
jle
mov
pusha
mov
call
das
jbe
movs
(bad)
or
nop
ror
sub
sbb
xor
ins
push
or
or
mov
je
sbb
jecxz
mov
imul
pop
inc
pop
ss
es
pop
and
es
das
sbb
test
sbb
push
mov
jno
and
arpl
jge
ja
push
arpl
inc
pfsubr
fist
int
sub
rcr
in
jg
iret
mov
mov
mov
push
dec
gs
jmp
push
adc
xor
popa
and
or
add
cmps
sbb
push
nop
pop
test
adc
mov
xchg
aas
push
pop
mov
shr
adc
jb
and
xor
xor
push
outs
enter
and
lods
fidiv
aad
mov
cdq
mov
cmps
stc
push
leave
call
push
push
out
xchg
pop
sti
clc
sar
add
jmp
cmc
jno
xchg
xor
sbb
jmp
ret
es
pop
xchg
sub
add
test
push
fsqrt
sub
add
push
adc
pop
in
rcr
arpl
pop
push
push
adc
test
jnp
inc
fwait
inc
sub
and
mov
stos
in
imul
sub
test
dec
repnz
lods
aam
xchg
scas
adc
cmp
rol
or
mov
dec
add
(bad)
sahf
mov
mov
arpl
cmp
test
xor
pop
xor
push
or
clc
popa
or
psubq
mov
movs
test
pop
push
out
popf
call
sbb
jae
xchg
lahf
adc
or
xchg
push
add
popa
and
aas
mov
inc
(bad)
jl
imul
in
xchg
das
test
mov
mov
mov
out
int
into
sub
push
outs
lea
mov
aaa
inc
adc
cmp
adc
aas
dec
mov
lds
cmc
add
shr
cmp
dec
rol
sti
adc
jne
xchg
(bad)
sbb
cmc
sar
xor
and
pop
xchg
jp
bound
sar
es
div
inc
jns
arpl
movs
icebp
popf
jno
add
and
rol
jmp
rcl
and
rcr
push
shl
pop
mov
sar
pushf
xor
pop
push
ins
test
gs
dec
jl
sbb
cmp
cs
lods
add
sbb
shl
xor
scas
scas
int
int3
mov
cwde
daa
retf
mov
xor
fisub
mov
jg
fsub
cs
add
call
xsaves
dec
push
daa
out
mov
inc
sub
les
mov
bound
loopne
jnp
xchg
rcl
in
imul
jnp
jnp
mov
or
lods
add
jmp
mov
add
loop
adc
data16
les
adc
in
jmp
scas
fsubr
xor
and
lods
addr16
nop
adc
xchg
loop
jmp
add
xor
or
cmps
pop
and
shr
sub
mov
test
xchg
cmp
fcmovnbe
jns
sub
fisubr
and
mov
inc
or
xchg
sahf
cmp
jg
stc
in
shr
das
cwde
pop
and
inc
push
pop
xchg
stos
xchg
xchg
jge
mov
dec
adc
(bad)
push
inc
jl
das
jle
(bad)
xchg
xor
adc
pop
adc
(bad)
cmc
xchg
iret
ror
shl
sbb
shl
xor
and
pushf
js
shr
fdivr
test
push
data16
fdiv
icebp
dec
pop
mov
or
xchg
mov
sbb
sbb
inc
mov
stos
adc
sbb
sbb
dec
addr16
stos
sahf
xchg
pushf
pop
je
ret
(bad)
xchg
ret
pop
xor
aad
mov
push
mov
scas
arpl
mov
mov
icebp
out
mul
inc
in
fmul
push
loopne
fwait
pusha
pop
or
jmp
inc
pop
add
inc
(bad)
dec
rcl
or
rcr
mov
test
dec
xchg
cmp
js
(bad)
in
ins
sbb
jno
push
ret
jmp
mov
aam
inc
enter
mov
lods
call
movs
pop
fcom
lods
cmp
ins
sbb
push
and
cmps
sbb
shr
shl
gs
data16
call
cdq
mov
or
add
cmp
out
pushf
bound
(bad)
(bad)
mov
push
ja
mov
jo
push
push
cdq
inc
pop
fbstp
(bad)
aaa
push
retf
call
mov
push
sbb
aam
dec
mov
clc
pop
add
mov
bound
(bad)
dec
imul
push
sub
push
je
adc
pushf
jbe
and
arpl
add
outs
fsubr
cmp
sub
or
fbstp
fisttp
cdq
dec
cmp
and
test
lock
push
dec
mov
sbb
shr
test
add
out
retf
xchg
test
jns
js
jmp
out
fistp
loopne
xchg
sub
fisttp
fst
fwait
ret
sahf
mov
mov
pop
nop
gs
or
rcr
pop
jle
jae
pop
imul
add
aas
shl
cmp
push
cmp
mov
das
xlat
mov
dec
inc
aaa
sub
aaa
mov
jmp
sbb
and
lds
sbb
push
mov
fstp
or
fcomp
addr16
retf
cld
jns
in
xlat
outs
popa
loop
or
out
push
or
or
pusha
popf
and
pop
fidiv
call
mov
test
int3
push
icebp
call
jg
in
and
test
lods
adc
sbb
mov
xchg
nop
jbe
pop
adc
jp
ficomp
stos
xor
outs
out
dec
int3
imul
in
pusha
mov
jno
mov
dec
and
add
fsubr
lea
push
xchg
fist
add
das
clc
dec
ret
inc
sbb
out
xor
mov
fs
aas
fs
lahf
dec
jle
sbb
lods
int
sbb
push
and
add
daa
push
mov
push
lods
adc
cdq
jns
jmp
xor
jge
dec
xchg
fisttp
cmps
or
and
push
dec
jnp
cmp
cs
sahf
jmp
call
stos
sbb
jmp
call
sahf
pop
das
call
cs
pushf
inc
gs
and
and
ss
xchg
fwait
mov
pop
sub
into
push
jne
or
add
scas
pop
ss
in
or
or
test
lea
retf
repz
dec
pop
adc
xor
mov
jle
call
lahf
out
mov
in
xlat
fcomp
mov
call
popf
xor
call
mov
lea
inc
les
mov
cmps
imul
push
inc
push
ret
sbb
mov
lods
sub
lea
mov
jp
mov
and
mov
inc
push
pop
and
cmp
mov
imul
dec
add
add
or
fnstsw
hlt
add
xchg
scas
imul
repnz
rol
bound
cmps
xor
xor
add
mov
jb
aas
lods
xor
popf
int3
xchg
or
pop
repz
xchg
in
mov
loopne
xor
test
shl
add
sub
mov
or
imul
icebp
(bad)
sar
aas
jmp
sub
mov
fnstsw
sti
sub
stos
push
nop
push
mov
das
adc
sbb
shl
jg
bound
mov
mov
cwde
(bad)
movs
add
repnz
(bad)
mov
loopne
arpl
add
les
push
cmp
int3
push
push
in
dec
dec
aad
mov
sub
outs
dec
jl
add
pop
sub
lahf
jge
sbb
xchg
sbb
and
mov
add
inc
imul
ds
pop
and
iret
jmp
jge
hlt
fld
cmp
mov
dec
xor
ret
jb
ret
mov
or
movs
jp
and
and
mov
retf
mov
inc
call
int
push
sbb
(bad)
out
aam
push
or
xchg
add
xchg
jl
mov
or
and
pusha
sub
cmp
aam
pop
jmp
mov
xor
mov
in
popa
loop
dec
aas
mov
mov
cli
mov
cmps
mov
dec
movs
or
fcmove
data16
sbb
int3
ds
and
jle
or
(bad)
jmp
mov
or
lahf
sub
add
push
push
out
add
cmpxchg
xor
jg
mov
dec
cwde
push
dec
push
test
jae
(bad)
cmp
push
sahf
mov
cld
push
dec
retf
enter
cmp
jecxz
xor
std
jne
test
in
add
mov
push
das
mov
idiv
lea
mov
jg
push
and
sbb
popf
(bad)
cmp
retf
shl
lods
cmc
call
mov
jp
imul
xchg
frstor
test
pushf
lahf
dec
into
shl
inc
jmp
jb
fmul
leave
(bad)
repnz
mov
retf
xor
mov
add
call
iret
(bad)
out
push
dec
loopne
inc
sub
cmp
cmps
loope
pushw
adc
shr
bound
iret
punpcklwd
mov
inc
xor
fild
push
xchg
loopne
xchg
xchg
cli
pop
in
aad
jmp
xor
inc
jbe
jl
and
adc
or
inc
scas
dec
hlt
add
mov
mov
and
cmc
inc
shl
add
popa
daa
push
in
int3
mov
dec
(bad)
xor
(bad)
pop
pop
fwait
push
push
jbe
xchg
jmp
jb
sub
retf
xor
cmp
mov
fild
vcvtsi2sd
mov
test
out
leave
retf
jge
push
mov
call
neg
jbe
sbb
call
clc
push
cmps
add
mov
mul
vpmulhw
lods
es
sbb
jl
cdq
sbb
fs
add
js
push
(bad)
fstp
dec
sahf
inc
sub
mov
sti
xchg
dec
stos
mov
adc
lods
dec
adc
imul
mov
and
stc
sub
je
out
(bad)
in
sub
adc
std
sub
out
lahf
sub
sub
imul
adc
cmps
sbb
sbb
push
mov
adc
loope
adc
ret
mov
xchg
gs
mov
pop
adc
push
cwde
cwde
js
test
or
call
aaa
cmc
sti
xor
dec
cmps
mov
cli
stc
sbb
cli
aad
lods
inc
xlat
cmps
cmp
sar
arpl
or
clc
aad
jo
leave
xor
push
movs
xchg
(bad)
push
lods
test
xor
imul
mov
mov
add
bound
jg
and
out
xor
sub
mov
adc
sbb
mov
adc
(bad)
xchg
cld
xchg
dec
call
pusha
xor
mov
sbb
mov
xchg
nop
pop
cdq
movs
push
out
xchg
mov
adc
mov
icebp
pop
lea
stc
add
pusha
cmp
mov
scas
(bad)
push
mov
rcr
xor
xchg
mov
clc
mov
adc
(bad)
lods
add
dec
or
shr
fwait
mov
mov
push
xchg
cmc
rol
imul
mov
jo
mov
sar
or
xor
cmps
addr16
sub
out
aam
imul
stos
outs
push
test
push
cmp
bound
hlt
or
sahf
xor
outs
sbb
or
bound
outs
popf
or
mov
sbb
repnz
adc
fcmovnb
sbb
lds
add
or
test
push
les
(bad)
jae
fwait
retf
pop
cli
cwde
inc
jne
lea
lea
ret
out
cli
mov
cwde
je
xor
lea
nop
cmp
enter
popf
push
sub
xlat
jbe
call
push
jb
pusha
cmps
jg
cmc
sub
les
jne
aaa
add
lods
dec
fadd
jl
iret
jmp
jmp
movs
mov
adc
aad
jmp
mov
add
and
adc
xor
xor
jnp
or
push
mov
cmps
cwde
xchg
pushf
mov
inc
inc
xchg
sbb
lahf
retf
jno
mov
int
xchg
xchg
jp
sbb
into
xchg
out
adc
sub
and
jbe
cmps
push
test
xchg
sbb
add
inc
cs
pop
jmp
dec
inc
in
and
mov
rcr
fdiv
sub
sqrtps
inc
cmps
or
loop
adc
sbb
or
adc
das
mov
outs
or
lods
fist
xor
inc
rol
mov
jle
pcmpgtb
rcl
jns
adc
jmp
mov
retf
daa
nop
mov
inc
pop
jmp
bound
fdivr
fild
push
xchg
jb
outs
pop
cmp
or
aas
mov
xor
out
mov
sbb
das
and
jmp
mov
cmp
call
cwde
jmp
add
test
js
retf
push
xlat
fwait
mov
stos
sub
fnsave
pop
pop
jmp
mov
push
nop
xchg
jmp
push
les
shl
daa
jne
push
xchg
cli
cwde
cli
ins
pop
pop
fimul
xchg
test
shr
lahf
push
pop
xchg
ret
repz
das
and
test
psubq
pop
xchg
aas
std
ss
jnp
popf
add
xchg
rcr
xchg
push
lgs
mov
push
pop
out
stos
cld
jo
popf
loope
stc
imul
loope
test
jmp
xor
push
das
sahf
imul
in
repnz
fmul
and
inc
mov
add
neg
daa
push
iret
es
xor
std
arpl
cs
popf
test
push
inc
inc
(bad)
pusha
sbb
mov
sbb
push
pop
cld
int3
(bad)
lods
jle
lock
outs
shr
ret
popf
xchg
mov
pop
mov
fcmovnu
push
adc
out
jmp
mov
mov
jae
out
add
xchg
in
stos
jo
mov
out
sbb
sbb
test
jmp
jbe
pop
push
fldln2
scas
sub
xor
push
add
mov
xchg
imul
inc
add
pushf
stc
ins
push
sbb
pusha
adc
inc
pushf
inc
popf
jg
pop
mov
bnd
dec
xor
(bad)
sbb
adc
fidivr
adc
or
fstp
mov
fs
cmp
jo
mov
rcl
mov
nop
test
lods
call
push
rcl
jle
dec
mov
mov
aas
push
rcr
adc
add
adc
dec
push
dec
cmp
fdiv
fwait
int3
movs
sbb
jnp
div
and
fist
and
fistp
dec
mov
sbb
cmps
arpl
xchg
sbb
mov
aad
retf
les
pop
push
and
or
icebp
jg
jb
sbb
push
mov
and
and
xlat
mov
xchg
stos
cmp
push
jnp
pop
std
mov
pop
mov
test
or
aam
xor
or
sub
retf
pop
push
cmp
in
in
stos
adc
or
or
fdivr
in
or
push
movs
jmp
mov
jle
shl
call
pop
aas
lods
fisttp
call
xor
xchg
ss
(bad)
mov
push
enter
dec
xchg
xchg
rcr
(bad)
pop
idiv
cmp
out
xchg
cmp
mov
sub
je
inc
adc
push
adc
mov
jae
jge
test
mov
pop
das
hlt
ficom
adc
mov
(bad)
jno
(bad)
in
push
mov
mov
data16
mov
xor
lahf
ss
adc
mov
jnp
call
mov
jmp
add
f2xm1
cdq
xchg
popf
sub
adc
stos
cmp
xor
arpl
popf
je
shl
bsf
mov
test
lods
mov
and
mov
pushf
push
(bad)
sbb
pop
push
adc
jbe
pusha
mov
inc
xlat
in
ror
adc
popa
mov
daa
adc
xor
data16
addr16
inc
mov
rcr
and
jmp
jns
addr16
cmp
ins
inc
mov
pop
push
add
dec
mov
mov
ret
addr16
(bad)
adc
ror
sbb
pop
inc
ss
pop
inc
lea
mov
sub
js
data16
cmc
add
or
lods
mov
jl
enter
jnp
(bad)
fbstp
sbb
xchg
sub
xor
inc
pop
cs
repnz
in
xchg
data16
sub
inc
sbb
xor
adc
hlt
inc
inc
out
jb
mov
cmp
fcomp
or
rcl
mov
xor
ror
je
test
popf
mov
push
(bad)
(bad)
mov
cmp
fldz
cmp
sub
push
inc
loope
sub
shl
repz
cli
mov
call
jle
sub
sbb
cmp
xor
add
rcl
call
pop
(bad)
sub
jne
inc
shl
xchg
inc
loop
lods
mov
cmp
stos
push
mov
cmp
sub
sub
sub
mov
adc
jmp
pop
fs
data16
push
add
jno
cld
or
(bad)
es
in
repnz
adc
mov
adc
xchg
ins
in
sub
dec
cs
push
or
cdq
test
cld
adc
mov
adc
in
push
adc
push
mov
xchg
mov
fiadd
mov
push
not
repz
jbe
inc
stc
jb
ja
xchg
jne
cs
imul
mov
or
mov
or
adc
scas
loop
jmp
jmp
fiadd
aaa
pop
mov
jmp
call
fst
shl
ins
or
cmps
cmc
(bad)
jae
fnstcw
sub
adc
gs
scas
popa
lods
push
(bad)
cmp
mov
es
dec
add
xor
fist
push
int
hlt
xchg
jecxz
rcl
sub
lahf
fsub
arpl
cmp
adc
mov
ret
enter
stos
inc
mov
lods
pop
sub
ret
lds
mov
ret
fwait
mov
xlat
jae
cmp
pop
iret
inc
out
addr16
jge
std
movs
adc
push
and
add
test
fidivr
ss
imul
inc
jp
aaa
sbb
push
les
les
push
fstp
cmp
fsubr
xchg
jg
mov
movs
sahf
mov
mov
ror
sbb
add
fnstcw
cmp
fisubr
aad
sub
sub
jge
cmps
test
fwait
ret
sbb
pop
jmp
(bad)
cmp
push
mov
xchg
jp
or
movs
mov
in
or
sbb
shl
fsub
xchg
push
sbb
in
jmp
add
fidiv
mov
ds
xlat
mov
les
cmp
ret
cmps
and
iret
jg
idiv
pop
cmp
(bad)
xor
lds
sbb
and
adc
and
cli
or
loope
mov
(bad)
cmp
cmp
clc
mov
sti
jg
cmc
shr
scas
sahf
dec
or
arpl
pop
xchg
mov
ffree
jne
dec
aaa
je
stc
int3
push
ja
mov
jmp
mov
shl
retf
sub
xor
scas
mov
cmp
bound
push
imul
mov
jns
dec
inc
int
test
add
push
pop
loop
cmps
push
dec
rcr
xor
icebp
or
mov
fsubrp
push
xor
gs
xchg
adc
test
add
cmp
icebp
std
sbb
add
inc
pop
adc
repz
stos
or
pop
adc
outs
inc
in
ficom
scas
cs
mov
paddd
stc
test
mov
inc
lahf
xchg
pusha
jg
pop
mov
ins
dec
dec
add
fst
(bad)
mov
enter
popa
cmp
retf
es
dec
mov
xor
add
cmps
and
xor
ja
inc
fcos
mov
jne
xchg
int
pushf
cmc
jno
loopne
mov
into
cmp
jmp
ins
cdq
leave
movs
adc
push
neg
or
pop
scas
sub
clc
sbb
scas
pop
sub
push
jae
push
loopne
jmp
sub
dec
inc
cmp
test
xchg
fiadd
xchg
aas
out
mov
inc
scas
aad
xchg
aas
cmp
add
call
and
inc
push
jmp
repz
inc
iret
ins
rol
or
add
call
sub
inc
fsub
icebp
push
and
push
and
js
cmc
imul
pop
mov
aas
jnp
xor
push
mov
movs
ret
jl
sti
daa
ret
cmc
dec
or
and
loope
adc
popa
mov
movs
test
inc
dec
adc
dec
push
mov
mov
pop
push
cdq
xor
xor
clc
lock
jp
in
sub
xchg
and
pop
aas
sub
call
mov
fld
pop
aas
mov
and
cmp
xor
test
xchg
inc
fnstenv
shr
aad
popf
cli
fldenv
sti
rcr
inc
sahf
jne
adc
scas
jmp
test
pop
jae
push
popa
mov
fwait
inc
pusha
aas
mov
sbb
jge
ret
add
rcl
fidiv
pop
rcl
fstp
cmps
jge
jbe
jp
je
imul
add
mov
leave
sub
je
(bad)
pop
dec
int3
xchg
mov
in
push
scas
(bad)
ja
push
sar
xor
dec
imul
ss
jnp
add
mov
into
xor
ins
and
push
sub
out
leave
adc
xchg
add
cmpxchg
ret
movs
call
jge
dec
int3
add
inc
lock
cli
pusha
mov
push
jbe
fmul
ret
jnp
and
push
out
mov
sbb
pop
xchg
fisttp
inc
retf
stos
leave
dec
ins
push
stos
inc
lods
popa
sar
dec
sub
mov
xchg
fs
clc
xor
jecxz
icebp
dec
mov
movs
stos
jle
inc
out
scas
std
or
push
shl
xor
xor
sti
inc
add
ins
xor
mov
cmp
ja
enter
xchg
addr16
or
cli
cli
out
retf
mov
movs
cli
xchg
pushf
jns
pusha
test
fmul
add
ret
mov
push
cld
inc
xchg
mov
lods
popf
inc
and
outs
xchg
mov
cwde
cdq
mov
cmp
cmp
xor
pop
pop
xchg
test
add
mov
retf
xchg
std
and
in
mov
push
mov
cmp
test
push
push
add
mov
adc
sar
repnz
adc
mov
and
add
jmp
jmp
test
mov
jg
dec
cli
and
ficomp
(bad)
int
sbb
xchg
aaa
ror
mov
jecxz
inc
or
jnp
stos
dec
pushf
pop
push
mov
mov
add
sub
je
xor
pop
outs
shl
ficom
mov
mov
imul
add
dec
pop
mov
out
mov
or
test
pop
add
mov
jg
pop
jae
cs
pop
cmps
add
call
push
repz
addr16
sar
push
push
xor
rcr
and
pop
leave
add
das
data16
cmp
mov
out
aam
in
inc
dec
call
shl
pop
jl
(bad)
loopne
mov
fild
dec
pop
mov
dec
xor
push
loope
push
das
and
jecxz
jno
sbb
mov
pop
jns
push
mov
js
outs
lahf
shl
pop
pop
cmp
xchg
pop
mov
mov
sub
or
adc
jl
mov
pushf
mov
push
jl
pop
(bad)
std
mov
inc
mov
or
push
push
pop
pop
ficomp
jmp
ret
imul
in
or
aad
mov
mov
mov
inc
or
or
pop
sub
inc
adc
pop
cmps
sbb
stos
add
mov
and
mov
jb
retf
mov
call
mov
sub
jmp
pop
xchg
jne
xchg
push
jo
mov
cdq
pop
dec
mov
mov
lock
push
(bad)
pop
sbb
push
addr16
mov
sub
jns
lds
mov
xor
sbb
mov
xchg
dec
add
ss
popf
jnp
sub
loope
xor
dec
and
inc
xor
xlat
retf
icebp
scas
add
push
sub
cmp
sub
mov
jg
mov
sbb
jmp
xor
push
dec
out
mov
adc
and
fdivr
dec
sbb
jb
lea
and
dec
lods
fmul
int
jl
mov
jl
data16
jg
push
or
call
shl
imul
mov
dec
jae
push
in
fstp
or
mov
inc
shl
test
cmp
adc
jle
cmp
cmp
jle
ret
clc
aaa
rcr
adc
mov
rcr
into
sub
mov
sbb
das
or
mov
enter
pushf
xor
dec
fstp
ds
mov
pop
and
xchg
or
mov
in
inc
aam
mov
mov
adc
sbb
adc
pop
and
dec
out
sbb
adc
xchg
fiadd
int3
pop
push
test
loop
out
xor
cmp
cmp
push
jl
mov
lock
jg
xor
mov
cmp
int
hlt
adc
js
cmps
ds
xor
enter
retf
div
and
fist
mov
mov
stc
imul
or
test
shl
or
sbb
mov
mov
inc
sahf
ret
iret
fld
cdq
dec
ror
inc
dec
add
adc
push
loope
scas
scas
ffree
scas
mov
jecxz
fistp
xchg
ds
pusha
cmp
popf
gs
clc
mov
inc
imul
cmp
pop
fucomi
ret
popa
and
les
shl
stos
push
mov
imul
push
cmp
inc
jne
xor
mov
call
or
mov
call
lods
xor
xchg
ret
xor
and
xor
test
stc
into
loop
mov
jns
push
or
rol
adc
test
mov
std
aas
adc
sub
mov
jecxz
lods
sbb
mov
xor
jbe
inc
cmp
cld
pop
ja
test
retf
dec
in
sti
(bad)
lds
ret
fcomi
adc
js
ror
cmp
std
js
pop
ja
push
pushf
jno
push
ror
inc
retf
int
in
sbb
xor
mov
push
add
ins
int3
dec
sbb
aam
sbb
ins
jmp
push
imul
add
aaa
sbb
xlat
mov
(bad)
mov
xchg
push
dec
icebp
test
cwde
jg
pop
jo
sbb
xor
dec
or
mov
cli
add
and
pop
sub
lea
repz
test
inc
pop
les
cmp
dec
mov
push
dec
jne
in
mov
ja
loopne
neg
stos
hlt
clc
ret
pop
xchg
cmp
into
dec
(bad)
popa
jae
sbb
ins
imul
xor
or
data16
jmp
mov
(bad)
shl
push
repz
inc
jne
loope
mov
dec
xchg
sti
push
sar
jo
sahf
lods
jns
dec
jno
add
rol
sub
ins
sbb
jge
adc
jbe
inc
(bad)
push
pop
scas
cmc
clc
ret
enterw
mov
ror
jnp
xchg
mov
jbe
dec
mov
or
dec
popf
mov
adc
add
fstp
stos
push
in
or
cld
outs
repnz
xchg
xchg
pop
sub
mov
mov
in
push
and
fwait
cmp
sub
not
inc
jmp
scas
cmp
out
pop
jl
inc
or
jle
adc
sub
mov
lods
cmp
out
bound
dec
pushf
inc
push
call
push
add
outs
ins
fs
jmp
test
or
lock
(bad)
je
jne
add
mul
icebp
cmp
std
cmps
sub
test
es
aaa
cdq
movs
je
mov
fistp
mov
stos
mov
cld
mov
jbe
ss
inc
dec
imul
out
cmp
lds
sub
fadd
das
sub
mov
fdiv
cmps
mov
mov
fwait
and
sti
pushf
mov
loop
cwde
es
dec
jae
push
or
cld
in
dec
jle
ret
ds
int3
dec
xchg
dec
cld
div
add
mov
jns
push
outs
jl
call
in
fldenv
push
test
jp
cwde
and
mov
outs
in
out
enter
jmp
xchg
rcr
in
pop
add
dec
cmp
adc
aas
xchg
fcom
outs
adc
sub
sub
hlt
inc
pop
cdq
mov
mov
(bad)
arpl
mov
test
lods
xchg
fist
dec
icebp
sbb
(bad)
jmp
inc
aad
xchg
addr16
cld
adc
jbe
push
lahf
cwde
xor
test
in
je
jg
pop
xor
jb
xor
xlat
xchg
mov
das
ret
adc
cmp
push
(bad)
movs
int3
fimul
inc
and
je
(bad)
xor
inc
adc
or
add
xchg
cmp
jge
pop
add
repz
sbb
or
sbb
punpckhdq
jb
daa
dec
les
ss
fs
add
pop
mov
icebp
pushf
fisttp
push
push
arpl
std
movs
cdq
cmp
sub
(bad)
cld
not
add
mov
iret
jg
pop
sahf
cmp
jbe
push
and
cmp
xchg
data16
lods
jae
imul
test
imul
cld
frstpm(287
je
push
mov
sub
ins
fs
test
fs
or
bound
sahf
add
fidiv
cld
cmps
xchg
add
test
stos
fistp
imul
adc
(bad)
push
sub
jae
scas
push
or
adc
ins
jne
dec
add
push
inc
adc
stos
call
stc
mov
inc
rcr
push
sub
and
or
ins
add
jle
(bad)
ins
repnz
in
pop
addr16
cld
push
lds
movs
(bad)
mov
xor
inc
ins
push
push
mov
outs
push
bound
(bad)
cmp
mov
dec
je
lods
fstp
dec
jb
js
call
in
pop
out
cwde
lahf
mov
pusha
cmps
mov
lods
mov
ins
(bad)
in
jmp
pusha
sub
out
cmp
test
or
mov
or
xor
xchg
cmp
inc
mov
mov
cmp
and
cmp
cli
sar
cmp
scas
fistp
call
sbb
fsub
std
push
mov
add
dec
jnp
dec
xchg
lahf
rcl
lods
sbb
xor
mov
push
outs
cmp
repz
dec
jmp
ret
push
adc
or
ins
pop
cli
les
dec
xchg
cmps
enter
lods
ficomp
mov
inc
pusha
sub
push
push
ret
mov
sub
mov
cdq
mov
movsx
mov
in
jg
scas
mov
(bad)
or
icebp
pushf
mov
mov
dec
inc
sub
push
test
mov
sar
push
enter
stos
pusha
push
mov
xchg
dec
iretw
aam
pop
or
push
test
iret
cmp
stos
mov
xor
ret
lahf
mov
xchg
xchg
and
xchg
push
in
lea
das
pop
jp
sub
(bad)
cdq
xchg
and
fcom
aam
cmp
jbe
test
(bad)
std
retf
test
cwde
retf
arpl
pop
fisttp
shl
push
xor
shl
movs
shl
icebp
sahf
cmps
scas
push
sub
ja
inc
dec
and
add
scas
cmp
and
fs
push
mov
inc
push
xchg
xchg
jle
fld
outs
in
dec
cmp
jge
jge
iret
sar
int
sbb
int
repz
inc
mov
dec
dec
dec
jbe
gs
mov
das
and
shl
and
add
daa
push
sbb
inc
stos
mov
jecxz
lock
ficom
imul
jmp
int3
push
rcr
sbb
inc
cmp
jo
rcl
outs
mov
test
in
lods
mov
and
push
lahf
ins
mov
js
dec
adc
out
(bad)
fst
ja
add
aam
cmp
adc
jae
or
imul
retf
lods
pop
scas
rol
sbb
inc
mov
out
xor
dec
addr16
mov
or
mov
and
les
mov
push
shr
push
mov
jae
ficom
mov
repz
out
sub
dec
scas
inc
xor
stc
pop
mov
out
dec
inc
fisttp
and
fdiv
shr
retf
jne
pop
cmp
or
push
lock
mov
lock
pop
ret
imul
std
xchg
ja
pop
in
call
jns
jge
mov
cmp
aaa
fisubr
rcr
sbb
pusha
push
cli
xor
mov
cmp
mov
mov
xchg
adc
sbb
and
cdq
and
cwde
jg
out
dec
xchg
lods
sti
and
jo
sbb
ja
test
xchg
cmp
in
stos
sbb
lahf
mov
and
std
pop
loop
ja
fst
scas
fnstcw
jl
lock
fdivrp
loopne
sbb
(bad)
push
in
cmc
push
sti
ror
sub
and
xchg
daa
mov
cmp
pop
test
adc
or
arpl
dec
inc
sti
ds
daa
popf
(bad)
shl
dec
adc
jo
pusha
xchg
sar
shl
add
inc
xchg
pop
aam
popf
aad
dec
adc
push
stos
aas
outs
int
xor
ret
loopne
mov
cli
into
stos
jp
stos
jno
cmp
mov
out
dec
push
mov
ja
pop
aaa
inc
cmps
aam
mov
leave
mul
inc
inc
dec
jecxz
arpl
cmp
imul
loop
xor
xor
jmp
(bad)
int3
outs
jns
(bad)
mov
mov
jecxz
(bad)
jno
es
push
jbe
pop
add
(bad)
sub
(bad)
lock
inc
sbb
pop
loop
push
lods
cld
sub
popa
cmc
sbb
jnp
inc
sub
sbb
fnsave
cmp
mov
mov
mov
lea
cmp
gs
lods
cld
cmp
pop
fsubrp
nop
add
mov
movs
mov
or
mul
mov
jmp
jb
xchg
adc
mov
inc
movnti
mov
in
retf
xchg
sub
jmp
outs
adc
(bad)
(bad)
mov
psubq
lahf
inc
popa
jl
adc
stos
aad
les
mov
or
call
arpl
arpl
push
mov
loope
(bad)
xchg
inc
cmps
pop
or
push
add
dec
sbb
es
mov
icebp
cmp
inc
stos
pop
scas
movs
mov
fld
sub
loop
loopne
mov
popf
js
int
push
jle
inc
sub
loope
pop
sar
pusha
adc
movs
test
aad
dec
sbb
jmp
xchg
repnz
mov
(bad)
mov
adc
add
sub
call
mov
cmp
mov
mov
cmp
mov
in
dec
movs
ficom
cmc
xchg
mov
or
stc
pop
sti
(bad)
pop
and
jbe
sub
dec
scas
out
push
jecxz
daa
in
jne
dec
int
add
cmp
jmp
sub
fsubr
rcl
pushf
cmp
shl
pop
sbb
test
bound
pushf
push
pop
inc
and
ret
jno
push
add
adc
mov
das
ja
dec
pop
test
push
adc
jbe
pop
pop
das
sbb
rol
jecxz
fidivr
stos
add
(bad)
out
je
dec
imul
push
inc
outs
lods
jp
or
cmps
(bad)
sbb
cvtdq2ps
daa
cmp
add
stos
and
sar
mov
mov
jnp
out
daa
jmp
jns
push
xor
pop
jecxz
lods
push
xchg
imul
gs
cld
test
ud1
je
xchg
retf
pop
pop
pop
cmps
xor
mov
test
ja
and
inc
fldenv
(bad)
xlat
(bad)
xor
sub
xor
outs
fld
(bad)
movs
adc
sbb
and
sahf
ret
(bad)
data16
pop
and
std
cmp
inc
je
or
sbb
jecxz
or
mov
cmps
fsubr
test
add
push
cmp
mov
jl
inc
push
outs
rcr
push
cmp
jbe
push
dec
cdq
pop
mov
daa
loope
mov
ins
xchg
(bad)
jecxz
sbb
rcl
xlat
cmp
rol
inc
dec
enter
je
fwait
push
inc
dec
sub
add
add
into
sub
fwait
sbb
sbb
mov
mov
aad
xor
mov
or
and
push
or
cli
jecxz
and
adc
stc
sar
or
mov
push
lahf
sahf
mov
xchg
popf
ret
jbe
clc
and
xor
jae
outs
or
cmp
fs
test
jne
pusha
lock
adc
mov
daa
in
(bad)
popf
shr
rcl
in
mov
arpl
(bad)
sbb
push
or
repnz
je
and
pop
pop
pop
stc
sub
dec
ret
mov
add
xchg
dec
mov
sbb
in
jno
popf
fisttp
and
rcl
inc
inc
inc
jecxz
mov
(bad)
mov
or
pop
mov
jp
out
test
push
call
in
xor
fcomp
shl
cmps
shl
dec
out
scas
mov
push
scas
dec
das
mov
jp
or
or
mov
push
mov
push
add
scas
fst
leave
fbstp
fcom
retf
and
imul
jecxz
sub
xchg
inc
or
test
jo
mov
jmp
retf
sub
pop
mov
jns
xchg
cwde
cdq
pop
or
popa
ins
sub
ins
inc
mov
mov
push
daa
fsub
(bad)
mov
sub
mov
imul
sub
movs
push
dec
or
dec
lahf
sub
jb
div
repz
push
cmp
jp
cli
clc
int
xchg
push
out
xchg
fist
adc
iret
mov
loopne
push
arpl
fnstsw
adc
daa
jb
add
out
repz
mov
sub
inc
adc
(bad)
in
jmp
mov
dec
mov
add
imul
xchg
dec
retf
mov
int3
or
pop
call
mov
dec
mov
add
fst
ja
lods
cli
mov
dec
ins
ins
mov
lahf
aam
pop
bound
jbe
cld
xor
pusha
mov
dec
enter
mov
mov
shl
int3
sub
stc
stos
pop
sub
sub
adc
imul
int
push
mov
xchg
sub
(bad)
jnp
mov
inc
js
int
lock
int3
dec
mov
sbb
(bad)
sbb
mov
call
ja
xor
mov
mov
inc
(bad)
scas
leave
in
cld
test
mov
loopne
enter
jb
pop
add
adc
rcr
das
popa
or
pop
in
clc
jge
mov
adc
fisub
and
and
mov
xlat
lahf
cmp
daa
dec
and
or
call
xchg
pop
push
mov
loopne
into
icebp
arpl
and
paddb
les
aad
js
fisttp
inc
test
aaa
push
into
pusha
push
inc
inc
mov
in
fidiv
or
ret
inc
lea
hlt
cmp
(bad)
out
pop
das
add
xchg
stos
xor
sbb
inc
cli
inc
xchg
sbb
mov
stos
pop
cmp
loopne
enter
(bad)
sub
enter
jmp
inc
ja
or
add
mov
push
icebp
inc
stos
lock
test
sub
fnsave
inc
out
lea
sbb
jne
leave
ins
xor
fcomp
(bad)
dec
mov
neg
out
pusha
scas
fisubr
push
fisttp
push
les
and
dec
push
das
clc
ins
pop
cmp
and
cdq
and
push
xlat
imul
sbb
inc
jae
int3
rol
pop
sub
adc
scas
js
mul
bound
mov
repnz
inc
xchg
cwde
stc
fidivr
sub
inc
icebp
mov
push
cli
cdq
xchg
jg
xbegin
(bad)
fst
inc
clc
or
push
fnsetpm(287
pop
aad
aad
xchg
dec
or
inc
sub
pop
shl
stos
dec
lods
pop
or
imul
aas
inc
mov
sti
fsubr
xor
xor
push
aas
nop
xchg
aaa
mov
ror
mov
arpl
sub
mov
jp
mov
cmp
std
pop
imul
mov
lock
icebp
rol
cmps
mov
ret
xchg
lods
das
dec
pop
cmp
sbb
enter
mov
xchg
push
gs
shr
das
outs
out
retf
pop
push
or
push
clc
jmp
(bad)
dec
cdq
pusha
(bad)
sub
sahf
adc
push
(bad)
ja
add
inc
jmp
adc
xlat
xchg
cs
jmp
fdivr
pop
sbb
and
call
cmp
out
jb
inc
inc
stc
adc
in
jns
jne
and
stos
pushf
cmps
stos
test
bound
inc
cmp
push
inc
xchg
mov
bound
xchg
jp
icebp
mov
mov
fs
and
xor
adc
xor
enter
cmp
mov
sub
sbb
repnz
xor
adc
ss
jmp
pop
aas
das
out
call
dec
xor
call
aas
lods
push
xor
je
sti
enter
out
inc
dec
pop
mul
mov
jecxz
jns
iret
xor
in
iret
sti
outs
xor
add
pop
mov
inc
repnz
retf
rcl
xor
fld
cmp
(bad)
mov
cmc
hlt
gs
mov
cmp
call
cld
sbb
inc
pop
enter
mov
push
mov
(bad)
cmps
pop
mov
stos
std
xor
mov
sbb
add
in
fstp
js
xchg
sub
push
popa
add
imul
call
fdivrp
jb
mov
pushf
jecxz
(bad)
mov
sbb
int3
xor
adc
mov
or
jmp
pop
jo
mov
mov
scas
or
jbe
ds
and
ins
dec
pop
rol
(bad)
pop
jae
mov
cmp
test
shl
mov
mov
out
push
or
mov
rcr
mov
ror
xchg
les
dec
jbe
leave
cwde
push
cmp
stos
push
shl
sub
test
out
mov
popf
mov
cld
ja
push
mov
adc
add
jns
mov
jmp
and
sahf
mov
mov
and
fnstcw
push
aaa
lods
mov
mov
pop
clc
mov
or
jg
xor
sti
repnz
jns
or
mov
jbe
ficomp
mov
mov
ror
fiadd
or
call
popw
pop
pop
(bad)
lea
mov
clc
std
clc
pop
cld
js
sub
pop
cli
pop
mov
loopne
jmp
out
xchg
scas
inc
push
es
xor
inc
repz
push
(bad)
leave
pushf
int3
sub
sbb
popf
mov
dec
xor
mov
movs
ins
xor
cmp
int3
mov
cmp
addr16
pop
fdivr
and
(bad)
cli
or
shl
in
add
and
cmp
cmp
dec
xor
daa
in
nop
mov
int
(bad)
ds
pop
jb
(bad)
mov
jecxz
xor
dec
lock
cwde
push
lods
out
mov
mov
aad
dec
mov
mov
jb
popf
and
adc
in
in
push
movs
cmp
(bad)
int
outs
mov
scas
push
clc
pop
stos
(bad)
adc
mov
ret
sub
pushw
aad
xor
loope
push
xchg
pushf
fmul
ror
mov
lahf
dec
mov
sub
and
sbb
stos
or
js
aas
fcmovne
cmps
mov
jns
fcom
xchg
pop
sub
sbb
shl
dec
mov
out
es
sbb
mov
or
rcl
xor
dec
out
adc
inc
mov
mov
xor
repnz
mov
cmp
sbb
jmp
jbe
iret
or
(bad)
(bad)
sub
gs
rcl
js
and
sub
pop
xchg
mov
jle
hlt
add
jns
xchg
mov
and
out
sbb
push
out
mov
mov
leave
mov
test
into
xchg
aaa
leave
scas
pop
xor
mov
sub
xchg
in
push
addr16
shr
pop
jno
int
push
inc
mov
jl
sub
enter
mov
sbb
imul
retf
retf
ss
cwde
pop
add
xlat
xchg
ss
sub
sbb
popa
xor
aad
test
das
inc
mov
ja
adc
or
mov
mov
movs
addr16
ss
mov
inc
and
int3
test
cld
push
sbb
mov
pop
fidivr
cmps
int
push
mov
mov
(bad)
lods
jmp
push
inc
inc
nop
sub
add
xchg
lea
add
mov
mov
mov
outs
xchg
jecxz
fbstp
dec
test
icebp
shl
daa
mov
js
cmp
mov
dec
leave
pop
in
xchg
mov
dec
pop
rcr
fwait
xor
fld
loopne
rol
inc
ds
test
es
jle
mov
push
lods
mov
iret
and
push
seta
jmp
cdq
mov
in
push
mov
xor
fmul
ss
pop
adc
movs
jnp
add
jle
push
dec
iret
test
int3
stc
mov
lds
icebp
addr16
sbb
ds
mov
jae
push
hlt
dec
popw
pop
mov
arpl
pushf
test
adc
mov
mov
lea
xchg
int
test
rol
mov
jmp
jae
hlt
push
push
mov
iret
das
cmp
retf
or
jbe
rol
jmp
jmp
lods
lods
dec
xchg
mov
popf
xor
into
(bad)
jmp
or
mov
add
jl
shl
jecxz
std
mov
push
ret
(bad)
jne
lds
rol
aad
fcos
retf
or
sub
adc
push
scas
(bad)
jo
ds
mov
and
cmp
cmp
jae
retf
cmp
idiv
scas
enter
mov
scas
inc
cmps
outs
sbb
or
dec
push
(bad)
lahf
dec
cmc
jecxz
dec
imul
ja
sub
mov
dec
xchg
sbb
in
ss
mov
cld
shr
inc
pop
xchg
or
cwde
xchg
mov
mov
retf
(bad)
(bad)
repnz
sub
jle
repnz
pop
lahf
and
fsubr
mov
loop
dec
sbb
or
push
mov
dec
jnp
dec
jno
jl
jae
adc
inc
data16
adc
ret
ja
fisttp
outs
aas
fwait
mov
rol
loopne
fwait
add
sbb
loope
dec
jo
sub
inc
aam
push
test
sbb
push
sub
mov
or
xor
test
stos
push
xor
mov
data16
push
sti
ins
data16
ins
popa
or
ficomp
fcomp
inc
lea
sbb
pop
div
cmps
into
adc
sti
adc
push
mov
add
(bad)
hlt
mov
adc
sbb
(bad)
push
out
and
dec
dec
ficom
xchg
inc
xor
xor
int
push
icebp
aad
adc
iret
clc
jecxz
mov
imul
push
sub
ret
inc
vpaddd
sahf
xchg
or
add
aaa
movs
stc
push
cmps
xor
popf
sbb
ss
stc
push
test
or
(bad)
pop
add
into
hlt
add
arpl
sub
mov
adc
lods
mov
aad
and
mov
enter
popf
xor
jb
or
sub
call
mov
sbb
xor
xchg
and
mov
cli
fbld
xlat
push
push
jbe
xchg
inc
ins
fwait
scas
dec
aam
clc
je
jecxz
nop
xor
cmc
(bad)
out
mov
push
jge
sar
aad
push
or
nop
jnp
push
hlt
das
stos
add
or
pushf
cmc
pop
xchg
in
mov
loop
(bad)
cmp
lods
jg
in
sub
dec
mov
adc
push
(bad)
sub
jo
rcr
dec
call
leave
mov
push
cmp
adc
dec
leave
(bad)
push
adc
adc
pop
mov
mov
in
loope
(bad)
push
aad
and
and
mov
repz
jle
test
mov
xor
(bad)
inc
pushf
push
rcl
cli
adc
fst
cwde
xchg
mov
pop
ror
into
lds
sbb
test
push
mov
mov
mov
or
(bad)
clc
xor
mov
xor
je
push
int
call
ja
jecxz
jmp
int3
mov
jmp
xlat
call
stc
fsubr
icebp
mov
pop
repnz
adc
pop
addr16
(bad)
fld
stc
mov
mov
push
fst
(bad)
pop
jge
icebp
xchg
test
sbb
and
jnp
push
jnp
sub
outs
push
adc
push
fcomp
js
add
jge
loope
es
jle
gs
sti
lea
out
mov
sysret
pop
and
scas
or
enter
mov
adc
mov
pop
sub
test
pop
dec
in
xor
mov
mov
out
icebp
push
out
cmp
pop
or
push
push
cli
pop
xchg
jmp
bound
sub
sti
ror
sub
dec
jecxz
xor
int
cmp
cmovbe
stos
cmps
ror
pop
mov
cmp
xchg
dec
mov
jl
and
sub
aam
retf
xor
fsub
out
push
and
pop
or
cmp
inc
loop
ds
mov
int
adc
gs
loop
mov
dec
push
ror
sti
movs
push
sub
pusha
mov
call
inc
lock
adc
mov
jmp
aad
loop
jmp
or
adc
jnp
adc
ror
jmp
inc
arpl
loop
in
xor
sbb
(bad)
sbb
mov
and
inc
pop
mov
mov
adc
adc
fistp
jge
adc
lods
cwde
test
fistp
cmps
lds
xlat
shr
rcl
jne
xchg
push
fdiv
push
stos
aad
mov
scas
mov
cwde
inc
xor
cld
(bad)
xchg
mov
into
mov
call
cmp
call
scas
xchg
jg
mov
or
jns
pushf
test
cld
xor
inc
xchg
xor
repnz
gs
popa
jge
or
mov
xor
test
js
pop
and
cmc
cwde
dec
sbb
add
push
(bad)
out
pop
xor
dec
jbe
adc
xor
cmp
push
xchg
and
data16
aam
jb
aad
inc
or
mov
jbe
mov
fwait
and
ds
and
clc
fsubr
cmp
dec
jecxz
(bad)
sub
sub
mov
pop
xor
push
and
push
leave
shl
xor
js
jbe
cmps
jg
push
or
std
jl
lods
mov
pop
adc
cmp
and
fiadd
arpl
(bad)
retf
xchg
frstor
mov
test
dec
jecxz
jne
xchg
inc
xchg
ss
cmp
test
lahf
xchg
jmp
cdq
ror
inc
cmp
and
xor
mov
cmps
adc
mov
aaa
(bad)
not
sub
es
cmps
rcr
push
adc
or
jo
xor
jno
xchg
xchg
jg
and
popf
sbb
hlt
dec
jnp
adc
arpl
or
sbb
sub
cmp
mov
push
or
mov
das
cmps
fistp
push
(bad)
lock
in
out
xor
out
sub
push
mov
mov
pop
ins
mov
scas
dec
adc
and
sub
sbb
xor
mov
arpl
fstp
cmp
mov
imul
nop
push
mov
push
mov
jg
push
and
ds
pop
push
pop
or
ins
fs
in
in
clc
mov
das
pop
push
mov
faddp
cdq
lods
add
or
jecxz
out
fdiv
add
jmp
xor
lods
xor
js
mov
xchg
mov
fcom
mov
movs
or
pop
and
mov
pop
mov
jbe
pop
(bad)
push
adc
add
cli
pushf
or
cwde
push
adc
ins
dec
out
add
push
aad
pop
fdivr
rcl
push
and
sub
iret
bound
repnz
ficomp
out
sub
sahf
sbb
popa
outs
gs
inc
or
xchg
pop
jmp
mov
or
pop
out
fcmovu
and
pusha
or
xchg
pop
xchg
dec
push
daa
in
aaa
repz
lock
retf
ja
inc
in
dec
sbb
xor
aam
cmc
int3
add
mov
dec
mov
jge
dec
movs
movs
mov
jecxz
pop
sbb
jge
(bad)
push
push
mov
and
jg
cmp
out
(bad)
std
dec
cmp
scas
jne
mov
cld
(bad)
jbe
push
iret
mov
iret
ss
(bad)
push
sub
pop
mov
fs
cdq
dec
push
cmp
xor
sub
add
dec
mov
cmp
jecxz
cmp
int3
sub
jle
clc
pop
shl
inc
loope
xor
jp
enter
mov
add
sub
add
stc
je
and
in
pop
inc
xchg
push
sahf
push
sti
mov
sub
xor
outs
leave
dec
cmp
fsub
ror
jmp
cmc
into
adc
mov
fst
and
fadd
add
sub
aaa
mov
mov
mov
or
lahf
fadd
pop
mov
add
inc
imul
test
xor
jne
rcr
sahf
or
sti
inc
cmps
mov
in
nop
push
and
pop
xchg
out
movs
or
or
inc
jbe
inc
rcr
sub
aaa
adc
clc
ss
(bad)
dec
sti
jns
call
mov
mov
fcomi
lahf
ret
in
push
(bad)
lock
sub
or
inc
aad
int3
lea
icebp
loop
add
jge
inc
push
mov
mov
cs
inc
push
sub
scas
enter
scas
xor
jmp
mov
(bad)
pushf
fld
push
mov
push
je
xor
push
xchg
test
ds
ffree
xor
jnp
out
mov
xchg
and
ret
mov
popf
loope
into
clc
push
repnz
lock
and
cmp
pop
out
cmp
daa
xor
mov
lahf
daa
sahf
pop
ror
in
popf
in
cmove
(bad)
and
inc
in
adc
aam
(bad)
jmp
aam
sbb
ss
mov
loope
xlat
mul
xchg
pop
cmp
aam
nop
xor
ins
mov
fs
popa
add
imul
fbstp
lds
push
jae
add
jge
push
outs
inc
sub
sub
jo
cmp
inc
addr16
dec
mov
jae
xchg
leave
push
add
int
push
shl
cmp
das
jmp
inc
sahf
dec
(bad)
mov
sub
and
(bad)
in
test
(bad)
dec
hlt
lods
dec
jmp
test
xor
mov
push
inc
addr16
stos
iret
(bad)
test
mov
popa
push
rcl
js
pop
pop
inc
mov
loop
pop
or
bound
mov
add
xchg
ret
ins
sbb
xor
fild
stos
(bad)
jle
add
fnstcw
mov
imul
dec
sbb
scas
push
inc
aam
dec
or
out
and
loop
repnz
inc
cmp
fiadd
sbb
add
cmp
jmp
sub
xchg
test
loopne
vshufps
ins
pop
mul
dec
mov
xchg
inc
shl
sbb
cld
inc
add
mov
push
jbe
ins
cmp
xchg
shr
mov
sbb
cmp
or
mov
ret
inc
dec
mov
and
sbb
push
leave
mov
leave
fwait
aaa
xchg
dec
add
pusha
adc
popf
mov
jecxz
xor
repz
out
(bad)
jle
call
sub
mov
pop
sub
mov
cmps
jns
pop
mov
(bad)
scas
cmp
jmp
movs
dec
xchg
mov
loope
push
repnz
pop
rol
out
pop
retf
inc
(bad)
repz
push
daa
xchg
mov
cmp
jnp
push
mov
or
pop
rol
repz
aaa
loope
inc
mov
cmp
popa
xlat
dec
pop
xor
add
(bad)
sbb
aaa
fisubr
test
arpl
lea
xchg
cmps
data16
je
dec
xchg
jmp
adc
popa
sub
sub
pop
int
push
inc
jne
mov
push
lahf
adc
in
aaa
xor
arpl
xor
add
aas
(bad)
out
or
mov
in
and
out
fs
scas
std
add
cmp
and
dec
lock
cmp
and
punpcklbw
mov
in
std
das
pop
jmp
fadd
jae
pop
in
aas
pop
loopne
jne
mov
or
and
neg
xor
scas
xor
mov
mov
jnp
movs
imul
push
jg
adc
fist
push
ja
call
out
jns
lea
sub
xchg
push
xchg
je
pop
mov
cdq
adc
xor
movq
mov
mov
test
iret
(bad)
cmc
pop
int
pop
or
push
aas
pusha
test
(bad)
into
add
and
dec
inc
cdq
idiv
call
repz
adc
and
mov
sub
cmps
fs
mov
and
movs
loope
mov
mov
dec
test
iret
pop
pop
out
jge
mov
mov
push
retf
pop
mov
mov
sbb
push
ins
in
in
push
sub
jmp
sbb
in
cmps
push
jg
xor
call
mov
jecxz
outs
(bad)
pop
xor
shl
mov
call
fsubr
call
inc
xor
cmp
rcr
jns
stos
(bad)
push
xor
arpl
repz
pop
jb
cmp
jne
es
mov
jne
test
repz
mov
adc
cmp
imul
fldl2t
ror
add
sahf
inc
add
jno
fmul
ss
fwait
leave
popa
push
jmp
jo
pop
jnp
and
out
inc
movs
pushf
and
in
loop
out
xchg
(bad)
out
or
jecxz
adc
popa
xor
lods
dec
and
ins
ficomp
icebp
arpl
sub
adc
cmp
fsubr
jmp
add
xchg
popa
xor
xchg
fbld
pusha
mov
cmc
push
fsub
add
sub
adc
inc
das
pop
not
and
adc
in
dec
cdq
add
jno
and
xor
mov
and
adc
jle
repz
sbb
mov
fistp
xchg
inc
dec
aaa
enter
jmp
mov
or
jb
xor
xor
push
or
jae
cdq
into
rol
aad
ror
mov
dec
or
dec
dec
or
sub
(bad)
cli
adc
sub
or
rcl
cmp
pop
cwde
dec
call
bound
xchg
jns
mov
add
push
mov
pop
mov
ret
cld
mov
adc
push
ins
inc
push
and
add
popa
jne
pop
pop
bound
mov
(bad)
jne
inc
fsub
cdq
fcomp
movs
sbb
jae
test
add
stos
lods
sub
pop
aas
jle
ror
adc
xlat
jle
pop
xor
push
add
call
push
call
pop
fs
inc
jge
mov
enter
cmp
push
xlat
mov
pop
adc
jb
push
cdq
mov
cmps
push
jp
push
mov
fisttp
cld
sbb
mov
cli
or
mov
imul
cwde
push
xlat
aaa
adc
mov
or
cmp
xchg
fcmovnbe
mov
pusha
(bad)
jl
mov
mov
stos
int
ficomp
lock
cmp
pop
mov
jbe
test
inc
sub
xchg
mov
rcr
loope
sbb
adc
bnd
fild
jg
push
lds
mov
sbb
xor
push
mov
dec
adc
pop
mov
push
adc
cmps
das
mov
inc
dec
mov
test
test
xor
inc
cdq
fcom
jae
fiadd
xlat
cs
or
dec
imul
pop
xor
xchg
push
je
ss
shl
pop
dec
and
in
mov
pop
xchg
jne
cs
jo
xchg
lahf
cmp
or
(bad)
mov
pop
xchg
cmp
xchg
in
mov
adc
adc
mul
push
dec
fist
dec
jae
jge
test
mov
test
or
clc
shl
out
scas
daa
cmps
fs
shl
lahf
pop
bound
mov
xchg
je
sub
cdq
addr16
test
mov
test
pop
aas
fld
popf
fmul
gs
xchg
sti
xchg
cmp
jg
(bad)
sub
mov
ss
sahf
push
lock
inc
xchg
cmps
fadd
sbb
int
jno
push
in
xchg
mov
mov
pop
pop
jae
jl
push
imul
sub
dec
repz
out
call
jg
dec
cmp
add
imul
push
jbe
loop
loopne
test
inc
adc
cs
jle
enter
xor
pushf
sub
and
fwait
jecxz
fmul
repnz
push
ret
cmp
data16
hlt
repnz
mov
clc
pop
inc
mov
icebp
xor
pusha
in
loope
test
xchg
inc
push
pop
dec
shr
enter
sbb
inc
sub
sbb
out
mov
adc
shl
mov
inc
cmp
lods
mov
push
(bad)
scas
push
stc
je
dec
adc
fstp
mov
push
mov
aas
mov
mov
mov
sbb
xor
xchg
fcom
stc
inc
jo
es
retf
sbb
cmps
pop
cmp
fisttp
sub
lods
or
mov
sub
pop
push
inc
pop
ins
xor
pop
jns
adc
dec
data16
pop
(bad)
pushf
xchg
or
jmp
cmc
lds
ins
sub
adc
jmp
mov
sub
lods
popw
imul
addr16
and
sbb
dec
xlat
imul
aam
mov
xchg
test
push
dec
xor
add
enter
scas
ja
push
adc
mov
loope
dec
cmp
sub
fdivr
xchg
aad
arpl
fistp
and
fsubr
inc
mov
push
sti
cmps
iret
loop
cmps
pop
inc
xor
xchg
jle
out
mov
pop
add
mov
mov
pop
push
mov
(bad)
jnp
xchg
xchg
lea
jae
jb
data16
daa
xor
mov
and
xlat
cmp
cdq
or
xor
mov
test
and
mov
mov
jbe
stos
sbb
xchg
jecxz
stc
or
jmp
sub
push
jecxz
lods
sahf
shl
dec
and
icebp
sahf
in
in
pop
add
les
xchg
push
push
leave
sbb
pop
fimul
into
popa
pop
pop
or
es
xchg
and
dec
jne
ins
mov
sub
mov
out
xchg
cmps
jmp
arpl
mov
movs
mov
dec
pop
cld
inc
cdq
sub
ret
repz
xchg
int
out
movs
push
xchg
sbb
push
mov
xor
mov
test
sub
push
mov
mov
sub
in
loop
stos
loope
test
call
mov
pop
mov
(bad)
mov
cmps
popf
xor
bound
jp
cmp
mov
stc
int
(bad)
mov
push
inc
mov
pop
bound
jg
data16
push
mov
mov
push
ds
mov
sub
out
jge
(bad)
loope
inc
(bad)
push
xchg
mov
mov
jno
adc
inc
cmps
fisubr
mov
nop
mov
jae
cmp
jl
adc
ret
cmc
pop
imul
adc
js
movs
mov
mov
cmp
sub
dec
sti
adc
jns
in
je
mov
test
inc
cmp
(bad)
cmps
xchg
cmp
jo
cmps
mov
dec
jg
push
dec
jb
sub
or
push
mov
ins
mov
mov
or
sub
add
jl
mov
mov
jmpw
rcl
push
fidivr
div
xor
call
shl
sub
pop
or
sti
pop
push
pop
and
(bad)
push
sar
mov
add
rcr
inc
(bad)
cdq
lds
push
xor
sbb
and
dec
pop
rcl
cmp
add
cmps
popf
and
aam
adc
sbb
adc
icebp
aas
ins
hlt
inc
fincstp
xor
push
sti
loope
and
outs
scas
fwait
lea
pop
push
dec
sahf
adc
cmp
mov
inc
loop
call
jne
fist
xor
dec
sar
ja
adc
stc
imul
and
fidivr
xchg
out
push
and
push
cmp
push
inc
mov
ret
push
add
dec
cmp
bound
mov
xchg
push
rcl
out
sar
xchg
lods
push
test
jae
dec
or
movs
dec
dec
pop
xor
(bad)
mov
dec
pop
ret
mov
jge
mov
sahf
call
pushf
mov
popf
in
lock
jl
pushf
pop
xchg
cmp
push
imul
mov
jle
test
pop
dec
or
or
pop
add
add
stos
outs
push
in
test
xor
jmp
in
(bad)
gs
call
dec
cmp
(bad)
in
in
dec
mov
or
mov
out
jnp
mov
test
aas
mov
adc
es
xchg
test
rcr
in
in
and
pop
jle
(bad)
(bad)
dec
(bad)
add
dec
neg
ret
out
sbb
int
ins
hlt
jmp
adc
sti
xchg
sbb
das
(bad)
push
lods
mov
gs
ficomp
jne
cmp
adc
cmp
daa
arpl
sar
mov
pop
nop
sbb
fucom
push
out
mov
push
das
inc
push
mov
push
mov
jg
xor
add
cmp
mov
les
pop
stos
push
(bad)
cmp
lahf
stos
mov
sub
loop
inc
add
xchg
mov
iret
jmp
or
test
xchg
lods
or
ss
jbe
pop
pusha
in
pusha
lahf
push
cmp
inc
push
je
mov
jno
jae
iret
dec
push
cmps
stc
(bad)
out
retf
sub
ins
fs
sub
mov
or
cmp
daa
cmp
dec
xlat
pop
loope
pop
mov
loopne
popf
cs
(bad)
fistp
ds
mov
sbb
in
cmp
mov
cmp
jae
not
cmp
mov
lods
and
xchg
mov
sbb
xchg
push
out
lods
push
add
int3
and
or
xor
mov
int3
aaa
lahf
or
sahf
dec
loopne
(bad)
arpl
outs
nop
push
call
xchg
(bad)
xor
push
add
popa
and
rol
mov
retf
jmp
inc
paddd
or
test
lods
pusha
sub
xchg
add
pop
imul
jmp
movs
movs
fsub
add
add
add
adc
add
stc
in
dec
xchg
inc
jg
ret
and
fadd
int3
add
sub
jno
xchg
ret
sti
mov
adc
jp
call
jo
cmc
rol
mov
jecxz
dec
pop
inc
ret
sub
cld
mov
adc
ret
pop
cmp
cmps
idiv
push
sbb
xlat
stc
or
adc
xor
imul
jae
ret
pop
and
or
mov
xchg
mov
mov
jmp
lea
into
mov
lods
sub
mov
ss
cs
loop
add
jmp
repz
adc
xchg
cmps
out
test
sbb
(bad)
adc
sbb
adc
arpl
test
sbb
cmp
or
outs
and
push
bound
sub
sahf
pop
inc
mov
jle
aam
xchg
or
mov
jno
cmps
shr
xchg
outs
sti
inc
out
mul
(bad)
mov
iret
jmp
(bad)
mov
je
bound
cdq
xchg
movs
mov
or
mov
aam
popa
inc
jge
loopne
movs
push
(bad)
cmp
push
retf
pop
jae
imul
retf
xchg
outs
inc
retf
and
das
retf
pop
pusha
loope
xor
and
dec
adc
pusha
push
aad
adc
js
scas
pop
mov
dec
fwait
sbb
out
pop
fcomp
mov
cmp
out
inc
sub
ja
inc
pop
sub
mov
add
sahf
lahf
cmp
pop
xchg
xor
mov
lods
stc
push
xor
fwait
sub
loop
xchg
sahf
js
push
ins
ja
jmp
sub
xchg
xchg
or
retf
call
add
pop
mov
cmp
jl
ss
jp
jnp
out
retf
daa
pop
xchg
js
mov
shl
lods
in
dec
push
mov
cdq
or
dec
jno
sahf
mov
ret
out
and
pop
hlt
test
xchg
pop
stc
and
jbe
add
sub
rol
neg
pop
fisub
int3
cmps
pop
push
test
mov
ins
mov
clc
mov
sub
out
inc
(bad)
push
aas
push
fld
shl
push
popa
dec
pop
sub
sti
cmc
push
in
enter
sahf
jbe
mov
jge
cmp
out
out
add
jbe
fstp
pushf
jmp
dec
mov
push
lds
jle
inc
cld
add
inc
add
mov
jns
inc
in
mov
xchg
cmp
cmps
mov
xor
mov
pop
jle
dec
cmc
(bad)
lahf
adc
ja
aaa
addr16
mov
mov
mov
test
and
dec
xchg
mov
dec
fld
jge
cmp
and
mov
push
push
(bad)
or
(bad)
stc
loope
mov
push
jp
aaa
cmps
rol
cwde
push
mov
sbb
jo
or
jmp
push
aad
cwde
mov
arpl
test
movs
cwde
addr16
cdq
fxch
mov
fidivr
push
popf
jl
sar
cmp
mov
(bad)
ror
pop
mov
pop
pop
mov
std
dec
mov
or
xor
pop
mov
bnd
mov
jp
dec
and
sbb
cdq
xchg
into
das
jae
out
push
je
or
clc
jns
mov
push
fist
mov
xor
push
xlat
mov
sahf
inc
repz
sbb
pusha
xchg
add
push
sub
ret
leave
pop
adc
mov
ins
loop
cmps
dec
fwait
test
push
movs
xchg
(bad)
mov
add
mov
lock
int
jge
mul
xor
adc
(bad)
jae
sbb
mov
lds
xor
push
call
push
pop
push
stos
lds
movs
mov
scas
movs
outs
jl
stc
aam
dec
pop
mov
in
addr16
retf
or
ja
in
lods
or
xchg
dec
jl
jp
lods
scas
jmp
inc
test
inc
sub
push
mov
nop
cld
fldenv
sbb
addr16
repz
push
call
lahf
jmp
int
loopne
sub
pop
out
xor
and
je
xchg
jmp
jl
push
cli
lods
fild
and
sub
lods
or
mov
push
push
mov
xchg
xor
mov
out
mov
sbb
push
and
push
imul
sub
loopne
xor
fadd
jp
lods
cmps
mov
push
xchg
lds
jo
dec
mov
lahf
(bad)
push
adc
dec
fstp
xchg
cmp
push
mov
xchg
test
les
or
xor
cmps
jne
and
mov
int
xor
mov
xchg
popa
add
xchg
jbe
into
int3
lea
sub
cmps
push
inc
ret
outs
shr
xor
mov
sbb
dec
push
ret
push
adc
jbe
and
inc
shr
shl
inc
add
cmp
and
int
push
dec
lock
add
push
(bad)
fcomp
pop
mov
bound
pop
add
jno
fadd
add
sbb
imul
cmc
cmp
cmp
cmp
inc
inc
or
cmps
cmp
adc
xchg
xchg
adc
popf
out
xor
sub
imul
push
and
add
inc
pop
ds
in
xor
std
nop
jmp
xchg
xchg
ror
mov
ss
mov
mov
out
cmps
pop
aad
ja
xor
add
(bad)
cmp
mov
stos
jl
push
arpl
nop
xchg
push
jnp
sub
xor
xchg
or
push
xor
or
mov
(bad)
ss
push
rol
inc
hlt
and
out
cmp
int3
pop
ret
call
mov
call
xor
mov
ins
jae
cmps
call
fisubr
add
xchg
mov
test
ret
std
or
loopne
jmp
(bad)
mov
adc
iret
add
(bad)
add
cmp
mov
stc
xchg
xor
ficomp
out
cmps
ja
pusha
in
inc
fwait
imul
push
push
add
jno
mov
cmp
inc
psrld
pusha
adc
mov
adc
jns
imul
std
or
sbb
adc
adc
xor
popf
dec
das
mov
sbb
cmps
out
shl
sbb
pop
dec
xchg
test
xor
mov
retf
xchg
das
sub
jg
inc
es
sub
dec
shl
inc
sub
loop
pop
mov
sti
fprem
pop
jge
pusha
add
cdq
dec
push
mov
movs
dec
pop
dec
and
cmps
cmp
mov
jge
or
hlt
pop
lods
fdivr
fldcw
adc
mov
xchg
sbb
pop
stos
mov
pop
sbb
push
push
sub
push
add
sbb
add
pop
clc
jmp
pop
mov
inc
adc
push
clc
(bad)
aas
stc
sbb
jb
cmp
mov
cmp
retf
or
in
adc
cmp
out
ja
mov
ss
pop
mov
nop
icebp
loope
inc
mov
pushf
pop
fistp
xor
push
push
mov
cmp
jns
sahf
jmp
mov
shr
addr16
push
sti
enter
mov
lods
cdq
test
rcl
fdivr
push
into
xor
movs
test
xchg
pop
cdq
bound
jge
pop
sahf
add
sahf
pop
(bad)
leave
xlat
sbb
cmc
add
shl
mov
leave
adc
lock
mov
mov
dec
loope
push
dec
ss
enter
pop
popf
int
fimul
mov
out
in
pop
aaa
outs
sbb
mov
gs
mov
mov
inc
je
sar
jns
test
push
dec
dec
push
cmp
test
ins
add
adc
mov
xor
fistp
jmp
cli
sub
mov
outs
ins
aad
or
add
scas
fwait
push
ret
das
xchg
dec
mov
pop
xor
mov
lock
adc
push
call
fiadd
ror
sbb
xlat
cdq
pushf
cmc
jo
hlt
jnp
stos
test
jne
jo
add
outs
cmp
ret
mov
sbb
scas
mov
retf
push
test
pop
inc
push
out
stc
cmp
mov
xchg
add
adc
push
in
mov
mov
dec
pop
inc
cmp
inc
punpckhbw
jl
test
or
cdq
jae
mov
cmp
in
xor
stc
jno
(bad)
cmc
mov
add
inc
fdivp
cmp
ret
sti
sbb
mov
sahf
sub
loop
xchg
dec
int3
sahf
xchg
jo
test
pop
add
inc
movs
mov
popf
cwde
xchg
pop
test
mov
movs
call
inc
pusha
jnp
shl
repnz
dec
pop
fcmovbe
cld
sbb
mov
jecxz
lea
xchg
ror
sahf
leave
cdq
push
clc
and
(bad)
out
call
xor
jmp
aam
cmp
movs
ins
xor
pop
push
adc
outs
pop
and
add
sbb
push
mov
lea
sbb
(bad)
out
into
in
cmps
cwde
mov
mov
xor
mov
mov
test
cld
stc
push
je
std
leave
pusha
es
retf
inc
inc
dec
lea
inc
aam
retf
aam
cmps
xchg
sbb
sbb
or
jge
xor
xor
jecxz
xor
xor
pop
jl
inc
or
les
push
xchg
cmps
jecxz
test
mov
jae
sub
pop
(bad)
cmp
sub
dec
sbb
fs
sahf
and
call
movs
or
dec
xor
dec
in
pop
inc
enter
xor
jmp
retf
cmps
call
call
fisub
mov
push
add
jg
sbb
sub
ficomp
add
mov
add
sbb
into
shl
loop
jl
(bad)
add
ret
mov
and
push
push
call
ss
test
inc
int3
ret
sbb
mov
cmp
add
sbb
inc
pop
dec
popa
or
mov
data16
xor
cmp
arpl
cmp
test
push
inc
lds
inc
jo
jns
mov
in
lock
xchg
aam
ins
sahf
push
addr16
add
jmp
(bad)
stos
mov
jo
mov
fs
call
or
and
cmp
dec
mov
repnz
and
sub
jp
nop
aaa
retf
pop
xor
mov
cmp
xor
mov
adc
sahf
in
movs
jle
cdq
mov
bound
jl
pop
aaa
inc
ret
mov
cmps
push
ins
jns
out
test
inc
ss
dec
fistp
or
ret
pop
mov
stos
aam
xchg
pop
ins
mov
addr16
push
test
pushf
(bad)
call
xchg
xchg
push
daa
lds
int
pop
in
cwde
popa
test
adc
ins
repnz
dec
daa
retf
sub
mov
xor
(bad)
arpl
into
shl
sub
data16
loop
mov
retf
xor
or
imul
fmulp
out
sbb
bound
cs
mov
xchg
xchg
fldenv
push
and
mov
lods
mov
dec
jmp
(bad)
cwde
fisub
inc
loop
je
(bad)
ja
mov
mov
(bad)
xor
cmp
retf
sub
aad
pop
pop
imul
jnp
ds
jmp
inc
mov
adc
ficom
xor
inc
xlat
rcl
(bad)
(bad)
loopne
jmp
fcmovbe
pop
push
sti
retf
sub
sbb
movs
adc
push
rol
and
pushf
push
mov
push
in
aad
pop
xor
pcmpgtw
mov
call
xor
fisttp
mov
xor
pop
push
rcr
inc
xchg
mov
pop
inc
push
(bad)
push
jo
retf
push
ret
mov
shr
mov
jg
fadd
mov
test
pop
repz
loop
outs
or
(bad)
sahf
idiv
lea
xchg
xor
fistp
sub
sub
out
(bad)
(bad)
ja
cld
inc
rcr
arpl
or
xchg
mov
stos
ins
adc
xchg
dec
repz
jecxz
cli
jle
push
xor
pop
sti
js
fwait
add
xor
dec
adc
cmp
pop
push
into
popf
cmp
rcl
cmp
xchg
dec
jne
jmp
push
sub
enter
mov
mov
push
(bad)
dec
out
lods
add
pop
add
movs
lahf
(bad)
jnp
xchg
adc
lahf
movs
shr
add
js
xor
push
inc
pop
xchg
mov
sbb
fistp
out
push
ficom
imul
jb
stos
je
dec
mov
ret
out
cmp
adc
mov
aaa
xor
xor
push
xchg
pop
or
jmp
pop
or
imul
movs
add
shl
mov
and
pop
fnstcw
xchg
aas
push
ficomp
add
pop
dec
fild
mov
mov
jmp
imul
div
and
xchg
jno
in
pmulhuw
imul
sub
mov
in
mov
pusha
mov
dec
jne
push
dec
xor
mov
sub
int3
adc
retf
sbb
in
xor
or
fwait
add
inc
cmp
leave
bound
adc
loop
adc
adc
lock
or
loop
adc
mov
stc
add
icebp
push
mov
mov
and
adc
out
fcomp
pop
adc
addr16
scas
jp
xchg
mov
movs
lods
addr16
push
mov
retf
jp
test
nop
fst
rol
retf
push
outs
jbe
mov
mov
arpl
sub
jns
cld
cmps
aas
mov
inc
movs
repz
das
cmps
(bad)
jnp
push
xchg
xor
pop
jg
adc
jb
in
dec
add
xchg
pop
int3
pop
sbb
dec
aas
out
mov
mov
mov
mov
xchg
and
cmps
shl
iret
jge
add
jno
cwde
(bad)
xchg
push
cmp
push
psllw
fidiv
xchg
pop
out
fwait
out
call
pop
mov
push
pop
sbb
pop
and
cdq
or
mov
loopne
int
jbe
mov
(bad)
jmp
and
fadd
test
jbe
daa
xor
mov
or
(bad)
dec
push
sbb
sbb
mov
push
scas
mov
dec
push
mov
movs
repz
pop
or
int
cmp
add
lahf
inc
mov
fstp
daa
push
and
xchg
out
out
mov
mov
mov
pop
arpl
push
not
push
pop
jbe
push
mov
call
out
pop
bound
mov
(bad)
loope
push
icebp
sar
sub
mov
shl
mov
daa
push
fcos
mov
push
sbb
lock
les
add
pop
push
pop
clc
sbb
inc
pusha
and
mov
mov
lods
jmp
sbb
adc
dec
sub
mov
mov
mov
mov
ret
mov
adc
xchg
xchg
dec
push
jbe
out
or
jnp
dec
cmp
les
cmp
mov
ret
aas
and
pop
or
rcl
out
jmp
cmp
lahf
enter
into
(bad)
and
xor
push
sbb
mov
fwait
inc
test
pop
stc
movs
xchg
or
das
scas
jbe
mov
fcmovu
push
cdq
sbb
dec
xor
(bad)
mov
sar
jae
rol
add
call
pop
and
dec
jl
stc
add
xchg
mov
aad
pop
mov
int3
loope
sub
call
in
in
scas
popa
popa
xchg
aam
cmp
jmp
pop
dec
lods
int
(bad)
dec
xchg
clc
sub
inc
add
out
aas
dec
xchg
bound
stos
push
jns
scas
push
and
int
out
imul
cld
cmp
mov
mov
in
mul
shl
cdq
xor
ret
imul
repz
push
jnp
sub
adc
fmulp
(bad)
int3
add
in
jl
or
sub
mov
or
leave
(bad)
jmp
scas
lods
xor
pusha
xchg
movs
test
test
outs
mov
daa
add
mov
push
dec
xor
push
jecxz
add
cmovl
rcl
jl
jmp
repnz
mov
mov
aas
jnp
sub
ins
mov
enter
mov
adc
cmps
pusha
out
sbb
ret
mov
adc
cwde
sbb
or
cdq
inc
push
rol
jle
cmc
xchg
cmps
sbb
fwait
and
xor
mov
je
ja
sti
jne
jno
out
sbb
retf
add
iret
in
adc
inc
dec
jbe
jmp
pop
test
jnp
sub
imul
shl
xchg
xor
mov
jl
xchg
in
adc
aas
fist
push
daa
ss
lahf
dec
inc
(bad)
and
and
out
test
push
mov
xchg
mov
cmp
adc
test
int
sub
cmp
sub
test
mov
dec
xor
(bad)
jno
mov
jo
xchg
sbb
sbb
push
jg
and
or
push
xchg
enter
into
add
mov
mov
mov
rcr
stos
and
adc
pop
(bad)
sysenter
mov
mov
mov
and
adc
push
add
push
aad
inc
pop
mov
jg
loopne
xor
cs
mov
(bad)
into
or
les
lea
or
xlat
scas
cmp
xchg
add
cmp
sbb
mov
push
and
icebp
enter
scas
in
popf
ret
fcom
ds
push
enter
inc
je
or
mov
mov
stc
inc
jmp
aas
shr
mov
repnz
mov
out
jmp
test
test
ret
or
cmp
cli
aas
rcr
cmp
mov
xchg
push
call
jbe
loop
mov
push
movs
add
std
ja
repz
movs
xor
scas
dec
js
mov
loop
adc
add
and
mov
mov
xchg
mov
sbb
popa
ins
xor
or
aam
push
jle
out
fisttp
ins
ins
imul
mov
sub
std
cli
adc
inc
fdiv
mov
mov
sub
sbb
in
fwait
cmps
adc
cwde
jb
cmp
mov
push
pop
adc
mov
mov
movs
lods
fnstenv
mov
mov
cmps
mov
mov
dec
add
into
mov
movs
pushf
and
add
fdivr
bound
add
arpl
adc
inc
and
pop
in
fcom
pop
sbb
loopne
js
jne
ror
shr
sar
enter
imul
sbb
lds
movs
leave
ja
les
div
scas
popf
sub
loop
addr16
out
loope
mov
ret
shr
sbb
mov
imul
retf
jo
dec
add
ins
cmp
push
daa
jae
dec
adc
mov
xchg
mov
loope
pushf
dec
ins
outs
stos
inc
mov
dec
test
sbb
mov
nop
mov
or
and
imul
lock
xchg
jo
je
sar
mov
and
movs
push
push
jns
adc
lods
test
popa
je
cmp
movs
adc
push
jp
add
inc
adc
clc
mov
fidiv
shl
or
pushf
and
arpl
int
xchg
mov
mov
ret
scas
les
adc
mov
clc
out
fisubr
cs
mov
mov
test
outs
pop
scas
pop
add
in
shl
inc
add
addr16
jne
xor
mov
lods
jecxz
mov
hlt
shl
inc
lods
(bad)
(bad)
(bad)
outs
sbb
jmp
test
jg
lods
dec
xchg
push
in
out
sbb
dec
lods
loope
mov
sub
in
jmp
daa
ret
and
mov
push
adc
shl
enter
mov
int
enter
xor
xchg
inc
mov
jae
pop
xor
ret
xchg
hlt
loop
add
cwde
mov
sbb
push
jne
mul
jne
add
mov
dec
xchg
mov
adc
inc
add
or
mov
cmp
out
inc
inc
(bad)
or
jne
pop
mov
out
hlt
nop
call
sbb
jno
push
cmp
dec
fisub
mov
jns
cmp
and
sbb
add
adc
in
aad
enter
out
jne
or
sub
sub
xor
call
mov
inc
enter
cmps
jmp
push
mov
shr
int3
jo
ins
nop
sbb
jecxz
pop
mov
dec
sub
or
aas
dec
xchg
mov
sub
out
mov
sub
inc
inc
mov
pusha
jmpw
adc
es
add
xchg
ss
pop
xor
fadd
push
pop
and
jnp
mov
pop
pusha
or
xchg
popf
or
xor
dec
arpl
je
jl
mov
dec
mov
add
mov
push
and
repnz
stc
sub
(bad)
mov
adc
pop
mov
es
cmp
mov
mov
fstp
mov
xchg
mov
ins
les
mov
icebp
test
mov
push
or
in
int
cmp
jp
push
jmp
dec
icebp
pop
arpl
mov
nop
popf
lock
push
dec
test
outs
(bad)
rcr
inc
cmps
mov
xchg
imul
xor
scas
loope
fwait
mov
xchg
fabs
(bad)
repz
fistp
movs
adc
call
es
imul
fwait
add
(bad)
out
movs
imul
add
(bad)
xor
cmps
(bad)
dec
movs
dec
push
fidiv
pop
fcomp
leave
or
cmps
jbe
mov
int
add
xchg
iret
push
mov
(bad)
sub
adc
mov
sbb
add
mov
cmp
adc
push
int
into
pop
xor
rol
popf
jno
jne
jmp
sub
pop
sbb
mov
push
pop
jecxz
inc
mov
clc
sub
fs
sub
adc
ror
sbb
adc
push
imul
rcr
adc
jle
es
in
and
mov
rcr
test
and
pop
push
adc
div
push
cmc
rcl
jp
(bad)
xchg
mov
jmp
scas
jns
movs
xchg
repz
pop
mov
popf
shr
lea
cli
hlt
push
xor
mul
gs
adc
inc
aas
call
imul
mov
sbb
pop
or
dec
mov
add
cmp
sbb
xor
(bad)
ror
fidiv
mov
out
test
adc
stos
sbb
jge
scas
scas
mov
push
test
or
inc
cmp
aas
push
lods
xor
or
lds
mov
hlt
xchg
cs
mov
cdq
cmps
add
iret
(bad)
cwde
les
js
sar
mov
lods
adc
outs
mov
add
pop
inc
ins
test
ret
push
xchg
mov
jmp
jecxz
xor
xchg
pop
rcl
add
xchg
inc
adc
xsha256
cmps
nop
mov
jae
adc
xor
push
sub
and
push
loope
adc
pop
inc
aaa
test
iret
outs
aad
call
aas
(bad)
push
pop
sbb
push
jmp
aam
jp
mov
mov
push
sti
pop
popa
add
mov
fiadd
sbb
cwde
ficom
rcl
popa
jmp
scas
iret
lock
(bad)
pop
ins
xor
xchg
ret
cmp
inc
ds
mov
mov
cmps
rcl
ds
sub
dec
in
aad
xchg
ror
je
push
sub
shl
inc
mov
(bad)
data16
xor
xchg
cdq
mov
(bad)
cmps
in
push
aas
js
add
inc
das
fsubr
clc
xchg
stos
in
inc
mov
rcr
scas
inc
jecxz
inc
test
mov
jae
in
jo
enter
dec
in
out
xchg
adc
cs
(bad)
in
loop
sub
pushf
retf
adc
movs
aad
push
pop
adc
(bad)
mov
das
xor
fs
mov
and
jb
jne
inc
and
(bad)
repz
mov
lock
dec
and
push
mov
mov
xor
ins
mov
xor
aaa
sbb
push
cwde
aam
adc
push
dec
mov
adc
xor
adc
and
dec
and
outs
and
push
mov
jg
jle
xchg
xchg
pop
cmp
add
aaa
pop
add
(bad)
mov
imul
test
add
addr16
ret
imul
add
hlt
adc
loope
pop
xor
and
mov
mov
loop
xchg
jle
pusha
jecxz
int3
cdq
aas
mov
pop
adc
cmps
scas
adc
aad
jmp
sub
mov
nop
adc
xchg
iret
push
add
jne
or
test
lods
dec
(bad)
enter
(bad)
cmp
fisttp
fs
adc
sbb
dec
stc
add
adc
xchg
clc
das
jns
pop
daa
and
sbb
pop
jne
or
pop
and
pop
pop
call
mov
push
mov
pop
pushf
call
addr16
aam
addr16
and
sub
cmc
push
int
push
mov
adc
adc
ret
or
pop
jae
int3
dec
(bad)
and
in
fwait
imul
(bad)
cmp
div
fwait
out
mov
das
fmul
sub
sub
fistp
movs
rcr
push
dec
out
shr
lock
or
(bad)
in
aas
daa
test
stc
mov
cmp
pusha
fdivr
jnp
dec
adc
sahf
int
mov
pop
sub
cdq
leave
mov
es
clc
xchg
fwait
and
int
ss
adc
nop
call
jle
sub
sti
inc
and
clc
xchg
xor
shl
retf
(bad)
sbb
sti
das
xor
cmp
movs
pop
std
xchg
adc
cmp
sub
mov
call
mov
pushf
pushf
nop
dec
jns
sbb
or
sbb
inc
sbb
push
in
sbb
xchg
inc
push
add
lds
call
push
loopne
push
(bad)
fsub
loopne
mov
lods
or
xor
das
dec
jle
add
mov
xor
iret
std
(bad)
fild
add
hlt
xchg
add
test
jmp
xor
sub
daa
dec
(bad)
scas
xchg
push
sub
icebp
cmp
in
mov
cmps
(bad)
outs
mov
pop
and
(bad)
jle
mov
repz
add
inc
leave
popf
mov
mov
addr16
inc
cs
lea
pop
loopne
sub
sbb
adc
push
xchg
push
jg
mov
pop
xchg
fldcw
add
daa
jg
mov
icebp
enter
hlt
test
fisttp
jnp
pop
mov
popa
(bad)
mov
fcom
xor
sub
sar
jle
and
lods
jns
pushf
fsubr
jmp
sbb
mov
call
xchg
mov
shl
sub
(bad)
lock
or
int
mov
push
lods
dec
jnp
adc
(bad)
and
pushf
mov
sub
jecxz
jns
inc
sti
jmp
push
int
sbb
je
adc
mov
xchg
paddw
clc
push
rcl
or
mov
cmp
rcl
sbb
pop
in
call
adc
in
lock
sbb
stos
jne
icebp
or
push
ret
pusha
xor
inc
rcl
xchg
fwait
shl
xchg
aam
jo
mov
fsub
lea
dec
cmp
fcmovne
sbb
cs
(bad)
jnp
bound
into
sahf
jecxz
xchg
pusha
mov
sbb
mov
outs
sbb
pop
dec
cdq
fbstp
aad
mov
stc
inc
xchg
js
out
ja
(bad)
scas
jmp
movs
jb
dec
sub
loop
sbb
mov
(bad)
loop
jl
add
xor
xlat
inc
sub
aas
cdq
xor
into
sbb
shr
pop
cmps
shl
dec
push
cmp
jno
fadd
push
mov
inc
mov
jbe
cmc
ja
fidiv
fbld
mov
mov
or
mov
mov
shl
xchg
lock
or
outs
(bad)
(bad)
and
sbb
xor
int
mov
cmp
mov
(bad)
adc
pop
sbb
dec
and
shl
das
and
push
dec
popf
cdq
fist
sub
jg
sbb
mov
pop
pop
adc
pop
test
mov
jo
xor
pop
sub
scas
xchg
sti
(bad)
(bad)
dec
jecxz
sub
or
mov
push
cld
pop
push
mov
imul
(bad)
scas
std
push
imul
test
ret
push
dec
fiadd
pop
rcr
inc
xor
cmp
mov
repz
cmp
out
xchg
or
fist
bound
dec
and
xlat
movs
nop
and
xchg
fwait
jmp
dec
sbb
mov
arpl
fld
cdq
jbe
mov
das
xor
mov
xlat
adc
xchg
inc
retf
xor
es
movups
pop
pop
inc
jns
jb
test
movhps
xor
jmp
mov
mov
out
xchg
mov
bound
cwde
push
mov
leave
aad
cmps
jmp
clc
mov
fs
rcl
xchg
sahf
pop
addr16
jl
cmp
mov
ds
mov
mov
(bad)
nop
loope
loop
sti
rcr
pop
xor
sar
mov
dec
sub
popf
mov
repnz
adc
pop
jecxz
inc
mov
jmp
loop
mov
stos
jns
vmovntps
ret
retf
stos
sbb
sub
xor
in
xchg
mov
add
addr16
aaa
int3
mov
(bad)
(bad)
mov
jne
js
jge
sub
fisubr
jle
jg
fsubr
scas
jb
lods
ret
(bad)
xor
lea
cmp
shl
mov
or
jecxz
in
push
xor
js
adc
mov
add
fwait
sub
mov
shl
sbb
lds
sub
push
mov
nop
ds
jmp
jbe
mov
push
xor
jl
sub
mov
jg
jecxz
inc
jb
sub
test
test
in
stc
adc
adc
adc
inc
lock
and
push
xchg
jbe
mov
or
mov
jecxz
lods
push
and
into
jb
pop
clc
imul
ins
and
fldcw
cld
xchg
xchg
xchg
lds
call
push
pop
mov
adc
mov
stos
lock
xor
mov
jge
inc
out
mov
fadd
mov
ins
jb
and
test
dec
inc
icebp
and
pop
mov
(bad)
test
in
ja
inc
sub
adc
dec
add
hlt
data16
mov
in
add
xchg
push
cmps
mov
mov
mov
xchg
mov
popf
fidivr
xchg
mov
dec
(bad)
pop
and
leave
in
mov
ret
push
push
pop
or
dec
sub
jnp
push
fcmovnbe
sub
repnz
popf
sbb
nop
push
inc
and
push
mov
cs
add
and
call
ds
scas
xchg
nop
and
cmps
lods
dec
jbe
clc
pop
mov
ins
mov
adc
gs
jmp
test
push
mov
xor
mov
sbb
loope
sub
mov
dec
sti
inc
mov
inc
mov
xchg
clc
sub
jb
push
or
xchg
mov
mov
inc
ret
pop
stos
mov
inc
fstp
fidivr
jle
adc
cmp
and
pop
mov
push
or
xchg
(bad)
stc
jge
imul
(bad)
or
(bad)
push
mov
jb
xchg
mov
inc
xlat
mov
aam
mov
adc
mov
mov
pushf
mov
das
push
in
outs
movs
cmps
xchg
and
and
mov
mov
jno
pop
xchg
retf
inc
push
push
mov
dec
sub
loopne
mov
(bad)
push
jb
xor
add
push
(bad)
clc
aam
xor
loopne
ret
add
mov
or
lds
dec
jmp
adc
stos
repz
inc
and
adc
pushf
mov
inc
rol
out
add
or
lds
aad
out
gs
xor
in
ror
and
js
(bad)
add
ss
outs
and
inc
je
push
pop
add
scas
pop
mov
pusha
adc
jne
cwde
cmps
pop
scas
jne
mov
add
fsubr
sahf
movs
mov
mov
call
xchg
jl
stc
push
scas
dec
aas
dec
loopne
ret
cmp
ja
scas
dec
stos
loope
add
cmp
mov
jns
or
cmps
cmp
cdq
cs
pop
pop
ss
push
imul
or
or
leave
aad
test
xchg
xor
mov
sahf
sti
rol
dec
aas
mov
std
sbb
inc
mov
xchg
test
and
jo
popa
mov
push
lock
ins
xchg
sub
mov
out
out
scas
cmp
stos
or
aam
jno
pop
cmp
xor
sar
or
and
inc
jl
pop
sub
test
daa
mov
aam
and
mov
sti
cmps
test
mov
sbb
test
std
or
repnz
and
jmp
(bad)
pusha
cmp
ja
adc
fcomp
dec
sbb
inc
outs
lahf
cmps
sub
xchg
daa
mov
fst
(bad)
dec
adc
xor
aam
pusha
mov
mov
loope
pop
mov
push
cld
fadd
addr16
add
dec
shl
mov
(bad)
lahf
adc
mov
loopne
neg
pushf
or
ja
inc
jne
xchg
out
loope
outs
xor
shl
call
add
xchg
xor
adc
loop
inc
shl
(bad)
fsubr
test
mov
(bad)
xlat
ret
retf
pop
lahf
jo
xchg
cmp
push
sti
push
pushf
enter
mov
push
clc
pop
add
fcom
call
int3
sub
pusha
sub
sub
mov
xchg
inc
dec
adc
push
icebp
test
in
xlat
mov
icebp
repnz
inc
scas
jmp
out
mov
jnp
(bad)
push
fsincos
shr
call
adc
es
sub
cmp
xor
popf
pop
mov
push
retf
out
in
or
aaa
dec
and
add
xor
jmp
adc
adc
sub
pop
bnd
mov
ins
inc
push
mov
addr16
popa
inc
mov
mov
call
out
aaa
adc
fsub
push
jo
push
sbb
cmp
add
push
aad
rcr
sti
jge
pushf
adc
js
shr
pop
inc
shr
(bad)
pop
retf
jb
repnz
cmp
aas
sub
cmp
scas
jecxz
and
int3
loopne
xchg
jmp
dec
scas
pop
stos
gs
xor
jo
push
repz
push
mov
popw
scas
jecxz
(bad)
arpl
les
dec
sub
add
mov
call
fsubr
cmp
jp
out
repnz
cmc
cs
fld
inc
push
jg
std
aaa
pop
cli
maskmovq
dec
loope
mov
and
add
cwde
inc
mov
push
or
out
loope
dec
or
dec
das
lods
cli
inc
dec
inc
cmps
aam
sar
cmps
scas
sbb
add
pop
mov
scas
pop
adc
lods
test
(bad)
xchg
sahf
test
xor
out
stos
fnstcw
mov
stos
test
pop
mov
pusha
stc
mov
xor
(bad)
sub
andnps
int
movs
and
mov
aam
cld
jbe
mov
loopne
retf
xchg
fwait
add
or
adc
sub
mov
sar
inc
mov
jbe
add
ss
pop
mov
ins
mov
pop
call
sbb
mov
xchg
sub
(bad)
push
lds
inc
xor
in
aaa
lods
and
out
adc
xchg
mov
cmp
shl
int3
sbb
jg
loope
leave
or
loopne
inc
out
sub
pop
lea
cmps
or
in
or
rcr
into
pop
push
xor
sub
bound
push
push
inc
jl
dec
in
xor
cld
sti
sbb
pushf
xlat
dec
sbb
iret
shl
xlat
sub
sub
xor
xchg
sti
lds
add
sbb
mov
dec
dec
fst
loop
mov
xor
mov
sub
sub
add
sub
out
sbb
out
push
scas
pop
aas
clts
mov
test
add
fild
icebp
movs
jg
adc
sub
inc
enter
movs
clc
mov
mov
mov
xchg
bound
sbb
shr
mov
in
mov
xor
adc
push
cmp
int3
ss
call
jns
mov
mov
sbb
in
daa
mov
mov
lahf
cmp
lods
retf
icebp
ins
dec
push
cmp
minps
adc
sbb
rol
dec
aam
je
popf
pop
cld
sbb
mov
scas
jge
retf
xlat
adc
add
dec
cwde
jmp
stc
inc
jnp
scas
outs
jle
fdiv
pop
push
mov
cmc
mov
push
xor
(bad)
arpl
jmp
push
call
rcr
cmp
xchg
test
cmp
lea
inc
add
xor
clc
cmc
mov
and
mov
shl
sar
push
or
jmp
rcr
mov
pop
xor
inc
jnp
and
popa
fdivr
mov
jp
push
stos
loope
jnp
add
lds
not
es
cmp
mov
hlt
mov
adc
inc
data16
dec
pop
jmp
outs
mov
loopne
cmc
inc
imul
out
inc
pop
(bad)
push
or
or
add
cmp
fwait
test
inc
sbb
nop
movs
cmp
xchg
inc
cmp
sub
pop
cdq
ss
int
mov
stc
scas
and
add
lods
or
rol
sahf
icebp
jae
sbb
and
cdq
test
lods
pop
jae
mov
rcl
rol
inc
stos
pop
mov
outs
adc
add
in
cli
repz
mov
aas
inc
movs
xchg
call
call
adc
inc
not
or
gs
test
push
inc
popf
pop
cmp
dec
jle
and
inc
pop
pop
fmul
cmp
leave
aad
mov
push
lds
fisttp
or
mov
jmp
mov
sub
gs
loop
jle
adc
sahf
arpl
call
dec
out
rcr
pop
loopne
in
push
fsub
push
pop
pop
xchg
outs
push
jge
lods
out
cmovae
ja
les
int3
push
popa
mov
cmc
call
push
pop
pop
rcr
sub
xchg
(bad)
stos
cli
loope
sbb
arpl
jecxz
out
pop
jl
lahf
fsubr
enter
loop
and
popa
or
and
mov
mov
cmp
adc
jecxz
mov
pop
pop
dec
pop
pop
enter
scas
push
dec
mov
adc
xlat
lods
pop
xor
jmp
neg
fldenv
mov
cmp
xor
mov
int3
pop
scas
es
rol
lods
int
test
movs
rcl
cli
inc
inc
scas
push
retf
xor
(bad)
xlat
mov
inc
mov
xchg
mov
xor
push
fdivp
jge
push
push
das
addr16
xor
xor
xor
mov
sub
xor
xor
hlt
sub
sub
sti
cmp
mov
inc
mov
sbb
push
pushf
fld
xor
push
xchg
adc
in
xor
or
mov
sbb
push
inc
jns
fidivr
sbb
aas
dec
gs
cmp
mov
jmp
cmp
and
jge
jbe
std
xchg
inc
mov
sbb
xor
xor
in
mov
sub
inc
test
in
pop
dec
sti
rcl
mov
adc
fld
and
sub
xlat
inc
sbb
aad
fist
mov
outs
mov
(bad)
shr
jbe
push
enter
adc
fsub
in
xor
test
add
jecxz
fcomp
aas
xor
xchg
dec
mov
pop
and
clc
aas
lea
imul
pop
pop
xlat
sbb
jl
add
mov
mov
out
ficom
(bad)
mov
sub
stc
outs
(bad)
shr
shl
pop
jnp
cmps
mov
cdq
mov
aas
leave
sar
imul
js
dec
inc
mov
inc
retf
fucom
dec
mov
inc
dec
xor
cld
fwait
pusha
xor
mov
fld
jb
lods
xchg
cmc
lock
xor
inc
inc
shl
pop
add
fcom
xchg
mov
mov
pusha
sbb
int
inc
stos
(bad)
lods
movs
mov
xchg
sub
cmc
cmp
aam
dec
call
push
cmp
test
(bad)
mov
xlat
scas
sub
push
jb
jecxz
pop
out
idiv
ficom
add
jg
mov
retf
xchg
jb
cld
push
or
pop
mov
inc
xor
cmps
scas
dec
repnz
cmp
mov
leave
popf
pushf
sub
test
jb
sbb
les
or
sub
or
push
cmp
inc
jno
scas
push
into
into
test
push
int
outs
push
sub
mov
jmp
xor
out
sbb
pop
push
(bad)
cmp
cmps
ret
pop
stos
adc
adc
cmp
out
and
jl
dec
into
add
push
or
daa
cmp
xchg
addr16
repz
dec
fldenv
mov
ins
xchg
push
enter
sub
les
les
xor
add
jb
xor
arpl
xor
mov
pop
cmp
and
sbb
retf
idiv
mov
xchg
xor
out
push
mov
call
loop
icebp
iret
shl
lock
xor
adc
bound
mov
lds
fsub
rol
push
pop
mov
mov
inc
(bad)
fstp
into
popf
push
icebp
test
imul
sbb
out
lahf
call
mov
xchg
add
cmc
mov
gs
leave
bound
sti
nop
shl
and
xor
aad
and
xchg
jg
push
lods
test
push
or
push
cmps
cdq
add
rcr
mov
xor
test
sub
push
lahf
or
pushf
sub
lods
(bad)
cmp
les
inc
outs
mov
dec
enter
xor
dec
movs
push
xchg
out
mov
pop
jbe
mov
out
add
dec
(bad)
rcl
out
imul
pusha
add
cmp
cmp
push
pop
and
jbe
test
mov
mov
mov
fadd
pushf
rcl
mov
sub
sub
loopne
or
mov
loopne
rcr
(bad)
(bad)
push
cli
imul
jno
loope
xor
ins
cmp
mov
scas
imul
shr
mov
test
cli
cwde
and
int
movs
ror
movs
xlat
jg
or
out
cli
sbb
inc
arpl
adc
movs
call
(bad)
int
inc
les
sbb
ja
dec
inc
push
in
jnp
xchg
ret
jb
js
out
jecxz
(bad)
jo
lds
push
inc
xlat
sbb
and
enter
jno
sub
fidiv
xchg
mov
imul
leave
dec
cmp
out
or
jge
(bad)
or
loopne
aam
rol
into
push
ret
adc
and
std
imul
leave
setg
mov
fxch
pop
inc
xor
aaa
sub
std
sbb
in
cmps
stos
and
mul
popf
imul
sbb
xor
rol
sub
ins
lea
inc
movs
push
and
outs
sbb
mov
pop
mov
adc
mov
adc
cs
inc
in
aas
mov
movs
sub
jle
push
movs
enter
fcmovnu
mov
xchg
cmps
xchg
xor
xor
jmp
add
mov
(bad)
xlat
xor
(bad)
loop
and
mov
shl
and
loopne
stc
or
lods
jnp
rcl
dec
inc
cmp
push
cmp
xchg
push
lea
jb
or
inc
call
jmp
aad
in
(bad)
(bad)
pushf
push
(bad)
das
push
in
xor
fist
jne
jnp
xor
push
call
pop
data16
leave
(bad)
in
in
lods
mov
cmp
fbld
test
lods
cld
lock
mov
dec
push
(bad)
mov
outs
fdivrp
inc
cmps
and
mov
pop
push
xor
jnp
mov
sbb
or
sbb
inc
mov
push
jno
aas
ss
cdq
fdiv
cwde
sbb
and
shl
xchg
out
pop
inc
cmps
(bad)
cmp
and
shl
fisttp
(bad)
mov
je
and
aad
ret
xchg
iret
mov
push
scas
sbb
jb
ret
fldenv
fadd
adc
mov
dec
push
call
sub
pavgw
add
bound
addr16
gs
lods
in
fistp
adc
mov
mov
movs
out
inc
mov
xchg
hlt
dec
jecxz
mov
cld
mov
mov
mov
mov
mov
or
shr
lds
dec
(bad)
jo
daa
dec
iret
xor
mov
inc
adc
push
mov
or
outs
jp
test
jmp
push
stc
lock
mov
(bad)
push
or
fcomp
mov
rol
push
pop
add
ja
push
dec
fs
pushf
add
mov
dec
lea
mov
(bad)
in
repnz
fsubr
inc
pop
or
jns
push
or
mov
and
aaa
cmp
cli
popf
mov
int
jns
push
sbb
mov
pusha
mov
add
cmp
mov
cli
stos
and
add
pop
push
inc
or
mov
ret
mov
in
push
or
jp
adc
or
stc
jmp
inc
cmp
push
add
mov
lds
dec
das
imul
sbb
lea
sahf
rcl
push
scas
stos
adc
inc
fcom
mov
sbb
sub
inc
int
cwde
ins
sbb
outs
dec
pop
mov
xor
ret
push
xlat
sub
cmp
pop
push
mov
mov
inc
xor
cmp
fs
jg
in
daa
add
xor
jl
cli
jnp
sar
xchg
(bad)
popa
jmp
mov
daa
fst
mov
test
aad
sbb
rep
shl
test
dec
es
xchg
inc
sbb
sub
popf
dec
sbb
es
ret
(bad)
fidiv
jge
or
jns
fwait
ror
(bad)
or
push
in
lea
push
scas
mov
aam
xchg
dec
in
xor
push
ds
pop
std
pop
ror
mov
jmp
push
in
xchg
jle
test
mov
into
repz
mov
js
daa
mov
xor
in
sub
sub
in
jp
pop
jne
movs
test
(bad)
jo
test
and
enter
pop
(bad)
call
into
inc
mov
mov
xlat
xlat
push
mov
push
mov
arpl
mov
add
mov
push
fdivr
fcmovu
mov
test
jnp
or
inc
dec
push
mov
into
es
les
adc
std
inc
mov
jns
inc
cwde
or
push
push
xor
jbe
push
jl
inc
inc
xor
cmp
sar
mov
jns
mov
mov
adc
mov
ins
gs
iret
ficom
mov
fidiv
and
imul
push
cmp
scas
ret
ds
push
jg
inc
cld
pop
sub
or
jg
out
xor
pop
out
push
ins
xor
mov
and
cmp
aad
ret
mov
xor
mov
xchg
shr
sub
mov
mov
pop
and
in
xor
retf
pushf
outs
psrad
cmps
or
stos
out
xchg
bound
add
retf
pop
pop
xchg
push
rcr
jbe
push
in
(bad)
fadd
jl
imul
pop
pop
jne
push
mov
mov
xchg
call
or
cmp
mov
cmp
(bad)
inc
int
xchg
pop
stc
mov
bound
inc
pop
mov
sbb
and
and
adc
and
pop
dec
dec
cdq
cs
rcl
jmp
test
xchg
inc
dec
js
inc
(bad)
pushf
push
mov
ret
scas
dec
xchg
cmp
jno
stc
bound
mov
xor
cmp
xchg
call
ins
xor
(bad)
or
mov
pop
jno
stos
lea
hlt
inc
sbb
clc
imul
mov
das
or
xchg
and
imul
(bad)
jnp
sub
cmp
scas
jo
jg
daa
dec
in
imul
shl
cli
xor
rcr
fisttp
std
cmps
add
outs
and
mov
sub
jae
(bad)
shr
pop
inc
dec
inc
nop
xchg
nop
lock
mov
stos
mov
mov
test
push
sbb
xchg
and
int
push
cmp
movs
test
pop
add
mov
imul
mov
movs
mov
ja
adc
xor
jno
add
test
cmp
push
js
xor
sub
lds
mov
test
arpl
push
cmp
scas
and
inc
pop
and
adc
outs
test
pushf
adc
xor
pushf
xchg
in
shl
ds
dec
imul
fnstcw
jmp
test
frstor
mov
out
pop
pop
jg
jg
adc
scas
pop
daa
out
dec
dec
lods
mov
ret
jmp
call
popf
shr
test
pop
in
xor
fiadd
lods
sbb
popf
adc
push
enter
xchg
jl
shl
lods
inc
push
enter
shl
(bad)
mov
xor
mov
loop
push
rcr
cmp
dec
mov
pop
ret
imul
mov
mov
lods
mov
neg
dec
shr
push
cmp
push
adc
imul
and
test
ret
xchg
imul
cmps
mov
and
dec
gs
js
int
cld
xor
loope
and
mov
jne
jmp
or
inc
mov
in
pop
jo
add
(bad)
inc
fcmovu
xchg
fwait
mov
ins
adc
pop
mov
push
add
inc
lods
jl
jmp
adc
push
out
add
xchg
add
jecxz
mov
(bad)
pop
ss
iret
sahf
jg
jae
inc
aam
jmp
and
jb
mov
stos
cmp
mov
adc
cmp
xchg
jmp
fmul
fs
inc
f2xm1
adc
mov
lock
stos
xor
or
push
jnp
loopne
mov
stos
sub
jbe
out
push
les
out
dec
push
mov
call
cmp
lods
jle
push
dec
mov
mov
(bad)
mov
int
jmp
xchg
lods
mov
pop
sbb
js
mov
inc
hlt
cmp
mov
cmp
jae
adc
ds
call
fisttp
xchg
add
(bad)
xor
push
sti
adc
movs
repnz
call
or
cli
push
ret
rcr
pop
fs
aas
dec
and
shl
add
adc
sub
pop
aam
xor
sub
test
sti
add
repnz
inc
add
ror
daa
in
mov
xchg
or
mov
lods
in
pop
xchg
cmp
xlat
add
mov
sahf
fadd
adc
aas
push
push
pop
retf
daa
push
(bad)
fistp
mov
xchg
push
(bad)
ss
test
ret
lods
fisttp
pop
fisttp
neg
sub
test
dec
mov
jne
shl
mov
sub
jbe
inc
inc
mov
xlat
add
nop
daa
fisttp
pop
pop
dec
pop
xor
mov
leave
add
jl
inc
xor
dec
cs
std
rol
mov
xor
inc
vmovq
xor
push
push
push
(bad)
mov
push
push
jl
ror
mov
retf
xchg
lods
pop
push
adc
and
mov
call
mov
jge
stos
jp
call
std
ror
and
pop
dec
xchg
(bad)
(bad)
adc
mov
adc
inc
mov
adc
sub
repz
rol
mov
sub
(bad)
fwait
outs
jne
mov
pop
mov
mov
pushf
cdq
mov
fucomi
loope
ss
mov
sbb
ret
ret
cmp
test
rol
dec
sub
inc
in
(bad)
out
(bad)
lahf
ficomp
xlat
push
mov
mov
adc
lds
stos
pop
adc
mov
dec
push
mov
data16
sar
out
mov
test
cmp
sub
pop
ins
test
in
aas
pop
aam
scas
mov
rcl
dec
and
and
push
in
(bad)
loop
out
adc
cmc
inc
mov
push
cmc
out
in
in
sub
inc
ret
mov
gs
fcomp
(bad)
sar
xchg
fucomip
fbld
ss
jns
pop
scas
mov
mov
vzeroupper
adc
frstor
out
xlat
inc
gs
sar
mov
adc
inc
mov
dec
jecxz
out
mov
shr
jne
cdq
and
and
hlt
outs
lea
pop
rcr
and
lods
(bad)
hlt
imul
xor
pop
cmps
jmp
inc
adc
arpl
ds
out
inc
mov
popf
mov
cmp
adc
fwait
sub
sbb
dec
out
test
mov
add
in
pop
dec
lea
push
mov
jb
mov
and
xor
adc
xchg
addr16
(bad)
rcr
test
(bad)
popa
jae
or
stc
cmovno
mov
sti
jnp
add
fistp
jge
out
test
fadd
push
ss
mov
or
inc
das
lods
pop
inc
inc
rol
sbb
imul
xchg
lock
sub
dec
adc
mov
push
push
fist
push
sub
bound
or
sub
mov
lds
(bad)
and
pop
push
mov
mov
xor
jnp
fdiv
cmc
mov
lods
outs
shl
mov
addr16
xor
dec
leave
or
dec
sub
jecxz
xlat
mov
lock
cmp
bt
enter
(bad)
scas
sub
stc
rcl
cdq
retf
sub
xor
push
pop
fild
cmp
lds
ds
sbb
mov
mov
js
sub
lds
mov
pop
repz
cmc
add
push
in
push
inc
pop
mov
and
mov
sub
(bad)
call
or
imul
jbe
xchg
dec
leave
ret
pushf
jle
sub
add
shl
fcom
inc
pop
sahf
call
int
sbb
test
nop
fwait
adc
push
nop
or
test
test
inc
jmp
into
jne
mov
mov
nop
ins
fidivr
mov
xchg
je
cmps
retf
popf
ret
cpuid
imul
mov
pop
cmp
lahf
xchg
scas
sub
sahf
and
sub
xchg
mov
jle
adc
and
stos
fwait
sbb
mov
dec
adc
movs
outs
mov
into
sub
shl
push
xlat
cmp
in
dec
jp
inc
sbb
mov
ret
leave
rcl
inc
jg
in
jp
mov
adc
repz
mov
sub
outs
fistp
leave
mov
bnd
or
xor
jmp
cmps
lods
add
add
cmp
mov
xchg
iret
dec
xchg
mov
adc
fcmovb
and
arpl
sub
push
mov
mov
jne
ja
stos
imul
push
dec
add
fwait
fs
xor
es
rcr
cdq
jmp
push
rcl
inc
adc
push
nop
mov
jo
mov
xchg
retf
idiv
push
js
scas
aad
push
stos
xor
mov
shl
aam
pop
hlt
sbb
dec
mov
imul
sub
pop
std
push
or
and
sbb
mov
adc
retf
jmp
fiadd
and
mov
inc
sbb
cmc
outs
fucom
cmp
push
pusha
jecxz
ret
popf
push
mov
pop
loop
rcl
jbe
adc
stos
retf
fnsave
inc
jo
push
push
inc
outs
or
mul
inc
add
pop
add
ins
pop
cli
test
ds
fld
jnp
std
push
nop
into
jge
mov
pop
jmp
aaa
stos
xchg
jmp
aaa
mov
mov
cmps
jns
aaa
aam
and
aad
push
push
ror
stos
cwde
imul
push
jge
jp
push
push
lahf
sbb
cmp
or
or
mov
pop
add
and
add
cmc
jns
mov
(bad)
(bad)
int
pop
add
and
sahf
adc
mov
loope
dec
jbe
aam
fsub
dec
test
clc
loopne
retf
push
mov
mov
pop
dec
xchg
mov
(bad)
fisubr
inc
pop
loopne
(bad)
call
pusha
in
xor
adc
cmp
add
movs
inc
jns
push
mov
cmp
aad
xchg
sbb
inc
xor
fild
adc
std
mov
sub
cmp
cmp
jo
loopne
or
xlat
test
mov
inc
outs
cmps
push
mov
mov
aad
xchg
inc
ret
movs
or
pop
or
imul
in
jp
mov
jne
mov
bnd
add
(bad)
jno
ins
mov
scas
loopne
movs
js
dec
jecxz
and
aas
movs
dec
out
leave
pop
xchg
cmp
push
xor
push
adc
pop
jnp
or
cli
add
pop
xchg
cli
xchg
xchg
push
push
sbb
push
int3
mov
push
xor
(bad)
div
xchg
fisubr
xor
repz
les
add
fadd
out
push
inc
not
dec
sbb
jno
pop
sbb
fistp
aad
xchg
rcl
ss
xchg
xchg
add
and
mov
lods
jp
scas
xlat
push
bound
or
stos
imul
or
mov
dec
pop
xor
jae
les
or
sahf
dec
fbld
nop
mov
in
pusha
inc
dec
imul
inc
jae
xor
inc
shl
ret
std
and
cmp
pop
imul
mov
aaa
pushf
dec
jns
fnstcw
addr16
add
cmc
mov
inc
aad
cwde
jne
mov
xor
rcr
(bad)
loopne
fwait
adc
pop
pop
fs
xchg
dec
int3
aas
inc
or
sbb
mov
cs
dec
fst
and
adc
enter
mov
push
loopne
and
mov
jae
sbb
ds
rcl
xor
xchg
repnz
jle
xor
xor
jmp
lds
pop
aaa
leave
inc
mov
nop
sti
js
div
(bad)
daa
loopne
push
movs
sub
(bad)
sub
push
mov
and
add
neg
mov
aas
(bad)
or
jmp
mov
mov
cmp
mov
nop
add
adc
xor
outs
nop
movs
inc
int3
sbb
(bad)
sub
(bad)
lahf
cmp
sbb
rcr
std
ds
push
sti
sbb
jg
sbb
pop
into
cmp
sahf
js
test
ja
mov
into
lds
jecxz
daa
aam
ffreep
mov
clc
das
dec
sti
dec
(bad)
ins
cmp
ret
cmp
add
adc
sub
xor
in
pushf
pop
(bad)
lods
inc
repz
inc
or
popa
xchg
jb
mov
inc
pop
mov
jg
(bad)
movs
lds
sbb
call
mov
in
xchg
imul
ins
daa
cmp
xchg
jl
sub
ins
mov
das
pop
aam
addr16
in
pop
pusha
aad
mov
dec
mov
ret
mov
outs
mov
push
mov
lds
mov
lahf
pop
cmp
sub
or
stc
lea
xor
rcl
pop
jnp
add
ret
hlt
sub
push
pusha
sub
aam
sbb
enter
fs
mov
pusha
jns
jae
fdivr
es
sbb
dec
aaa
pusha
test
leave
jl
out
pop
inc
(bad)
icebp
stos
pop
cmp
push
pop
pushf
cld
xchg
iret
imul
outs
dec
xor
pop
dec
shl
add
pop
pop
lea
pop
adc
jbe
pop
fsub
jns
sub
pop
stos
cld
jmp
ret
lds
jmp
xor
jne
test
fist
mov
push
inc
mov
movs
stos
jb
adc
in
jmp
inc
icebp
(bad)
sub
lock
inc
ja
stc
mov
repnz
add
enter
loop
mov
mov
int
xchg
shl
pop
adc
and
xchg
mov
(bad)
sub
retf
pop
shr
cmp
sbb
pop
mov
mov
push
push
dec
pop
dec
pop
daa
mov
sbb
add
pop
or
not
mov
cmp
or
add
mov
jecxz
xchg
push
add
loope
mov
rol
scas
lahf
xchg
and
jle
(bad)
retf
xor
idiv
or
jb
add
cmp
ds
fwait
sbb
sbb
outs
popa
adc
cmps
cmp
cmps
outs
mov
pop
ror
(bad)
mov
xchg
adc
and
mov
imul
ror
or
retf
xchg
in
or
mov
and
xchg
or
jmp
sub
mov
pop
imul
jns
rcl
adc
pushf
jge
(bad)
dec
adc
cmp
jge
pop
sub
stos
mov
(bad)
jg
push
xchg
push
xchg
mov
sar
(bad)
jno
jae
cmp
jo
retf
sub
lods
and
xor
inc
xchg
je
lock
movs
cmp
out
lahf
add
or
popa
sbb
(bad)
mov
ja
mov
mov
pushf
leave
inc
(bad)
cmp
lods
sbb
mov
mov
(bad)
aad
adc
test
outs
push
ficomp
scas
mov
adc
sub
mov
imul
cld
pop
add
leave
dec
inc
int
movs
sbb
fild
sti
add
jmp
(bad)
lock
iretw
pop
std
jns
xlat
popf
dec
and
xor
in
mov
inc
ja
jns
mov
add
aas
arpl
repnz
inc
cdq
and
or
repz
jmp
fnstsw
dec
loope
sbb
out
dec
jmp
inc
mov
push
push
and
shr
push
dec
dec
mov
pop
xchg
lock
cmp
adc
movs
pop
sub
repz
aaa
or
lahf
xor
or
jmp
mov
or
lea
ss
mov
lods
dec
adc
add
mov
sbb
push
clc
loope
ins
adc
in
cmp
test
mov
adc
add
mov
fs
dec
adc
pop
mov
inc
pop
fdivr
scas
mov
nop
adc
sbb
sub
inc
xor
ret
mov
jmp
test
test
adc
cmp
mov
adc
pop
pop
stos
mov
dec
fs
cmp
inc
test
jnp
push
test
mov
cs
mov
cli
pop
cmps
sub
cmps
call
mov
pop
cmp
in
jbe
jecxz
pop
(bad)
mov
int
pop
repnz
sbb
add
test
xorps
pop
les
inc
xchg
mov
inc
mov
shr
test
xor
xor
xor
loopne
mov
mov
fcmovnu
outs
jae
in
mov
jmp
xor
jnp
mov
out
cwde
sub
into
out
ss
mov
mov
data16
dec
movs
cmp
add
cmp
push
jae
dec
leave
out
sbb
stos
in
inc
mov
stos
rol
sahf
mov
popa
loopne
rcl
bound
cmp
lahf
iret
mov
pusha
dec
shr
cli
pop
fsubr
cwde
inc
push
stos
in
rol
cwde
jns
xchg
mov
das
inc
or
aam
jecxz
ror
or
xchg
in
cmp
in
mov
mov
arpl
or
push
fdivp
pop
and
pop
jp
adc
inc
mov
or
jns
fdivr
test
adc
(bad)
dec
outs
and
std
sbb
dec
pusha
nop
xchg
inc
jb
in
mov
pusha
in
add
int3
pop
scas
outs
aad
inc
jo
addr16
dec
stos
int3
jl
cli
xchg
mov
dec
(bad)
mov
xchg
sub
pop
test
cmp
das
mov
pop
add
mov
rcl
pop
pushf
mov
jmp
add
jmp
sbb
sahf
pusha
enter
call
aad
pop
and
push
mov
adc
mov
jg
mov
mov
push
test
xor
(bad)
loope
loop
in
xchg
inc
xor
sbb
out
cmp
ss
inc
sbb
sub
sahf
repnz
jo
push
rcr
add
push
mov
sub
pushf
call
mov
xchg
daa
ret
imul
mov
mov
ja
dec
mov
fist
cmp
scas
(bad)
and
pop
cld
add
int
mov
adc
int3
inc
pop
adc
mov
lock
in
or
lahf
aam
push
xor
cdq
mov
ficomp
jb
dec
cli
xchg
cs
inc
xchg
or
sub
popa
cmp
xor
or
push
rcr
xchg
inc
pop
outs
loope
(bad)
fcom
fiadd
jns
jb
(bad)
and
dec
inc
jb
ja
sbb
cdq
stos
repnz
lock
rcl
xchg
or
das
sahf
jp
push
cmp
cmp
push
pop
movs
adc
movs
jl
(bad)
loop
jmp
or
and
aam
fadd
fldcw
fisub
adc
mov
movs
xchg
xchg
lods
jns
ja
outs
pushf
and
dec
sub
xchg
jecxz
add
sahf
mov
dec
(bad)
sar
(bad)
nop
xor
sbb
ja
or
sbb
repnz
pop
lea
pop
jnp
in
cdq
xchg
test
jo
stos
movs
into
mov
fcmovbe
gs
and
sub
hlt
mov
bound
xchg
repnz
add
pop
sub
mov
inc
mov
fmul
std
pusha
fld
movq
in
imul
pop
sbb
cmp
aas
xor
jo
cmps
mov
mov
addr16
dec
jl
dec
jno
jnp
repnz
jb
inc
jg
and
cwde
sub
in
push
or
leave
daa
in
not
push
add
imul
pop
xor
xchg
das
repnz
imul
ret
push
fstp
lods
pop
or
je
xor
ret
cmp
sbb
dec
adc
into
in
mov
inc
aad
ins
out
adc
xor
sar
int
push
pop
aad
daa
and
popf
or
add
pop
xchg
nop
sub
sbb
in
jo
daa
outs
pop
or
hlt
xor
cmp
sub
aaa
sub
xor
mov
ret
inc
into
mov
push
dec
cmp
pop
rol
push
rcr
xor
pop
jge
pop
dec
out
cwde
lahf
stos
add
mov
test
mov
cld
push
into
push
ror
arpl
in
inc
ficom
xchg
outs
sub
iret
aam
xchg
lods
push
stos
ins
jmp
sub
cmps
out
xchg
jmp
dec
retf
es
push
cmp
jge
in
inc
jae
jnp
jno
sar
xor
ja
fcom
scas
jmp
and
adc
(bad)
in
dec
loopne
dec
movhps
xchg
cmps
mov
das
add
jle
imul
dec
stos
call
pop
xor
mov
jg
sub
lahf
iret
xor
mov
sub
cs
js
push
lock
fwait
jae
(bad)
push
nop
ds
mov
js
pop
out
rol
test
add
sbb
fs
mov
cmps
(bad)
std
cmp
ss
jnp
xchg
xchg
push
dec
rcr
mov
mov
das
loop
cdq
inc
rol
xchg
mov
test
pop
loope
ret
(bad)
stos
push
jns
sbb
in
out
mov
call
or
fld
in
iret
push
test
push
clc
xor
sbb
xchg
sbb
or
sbb
inc
jmp
ja
cmps
in
lods
repz
outs
lods
mov
stc
ja
xchg
add
stos
jb
stc
in
repnz
jg
repnz
inc
inc
mov
xchg
mov
shl
iret
shr
in
dec
pop
in
popf
aam
frstor
jmp
imul
xchg
std
push
nop
hlt
jmp
out
shr
test
lods
push
push
pop
xor
call
out
sub
dec
and
mov
inc
dec
xor
in
loop
jle
dec
movs
mov
scas
in
lods
and
les
into
cmp
leave
jb
mov
pop
jmp
stc
mov
push
pop
push
mov
fldcw
retf
xchg
cmp
(bad)
sbb
push
idiv
dec
push
lahf
cmp
add
out
ret
fidiv
push
push
je
add
cmp
mov
mov
repz
or
pop
fs
xchg
xor
add
lahf
jp
push
cmovo
repnz
sti
mov
enter
dec
aam
out
(bad)
lahf
lds
pop
outs
shr
adc
leave
pop
sti
mov
add
test
lds
imul
lea
mov
jg
fmul
fsubr
js
cwde
or
mov
ss
sbb
fsubrp
xlat
stos
pop
xchg
and
jb
fist
movs
aam
cli
dec
pop
cli
jo
leave
pop
mov
(bad)
outs
pop
lea
add
xchg
movs
push
addr16
outs
sub
push
push
push
jg
jg
ret
mov
mov
sub
pcmpgtb
push
cmp
clc
push
inc
in
mov
(bad)
es
imul
test
pop
into
add
cmp
mov
movs
sbb
loop
add
imul
or
rcr
retf
data16
sbb
add
xor
scas
dec
xor
inc
jno
fsubr
and
sbb
cld
aam
mov
mov
xlat
or
cld
clc
add
or
outs
gs
repz
add
stos
scas
jbe
cmc
ret
and
add
daa
(bad)
popa
push
mov
das
dec
xchg
fidivr
data16
out
sub
sbb
in
mov
fldenv
sub
jecxz
inc
test
inc
outs
pop
aad
in
in
push
inc
div
mov
pop
shr
mov
inc
inc
loop
adc
push
mov
sub
jo
inc
jno
out
jge
mov
ds
add
push
ret
test
in
int3
inc
adc
test
pop
adc
test
xchg
(bad)
mov
repnz
dec
mov
stc
sub
inc
push
mov
lods
cdq
push
(bad)
jmp
push
lods
jae
mov
jg
push
jne
icebp
retf
xor
imul
clc
mov
inc
rcr
in
fisubr
inc
xchg
lds
mov
out
mov
test
popf
lods
es
push
inc
xor
cmps
xchg
dec
xchg
loopne
mov
call
ss
mov
xchg
pusha
adc
add
cmp
es
and
addr16
jnp
outs
out
add
cld
pop
inc
outs
add
push
pop
maskmovq
neg
xchg
scas
xchg
mov
cld
adc
out
test
mov
outs
mov
fcomp
jae
or
mov
(bad)
sub
stos
push
pop
movs
jg
jnp
aaa
mov
dec
or
cld
mov
loopne
fcmovnb
prefetch
sub
dec
adc
adc
fsubr
ins
push
mov
mov
mov
pop
dec
pop
cwde
push
mov
push
xchg
fnsave
and
lods
and
(bad)
jg
hlt
rcl
push
mov
adc
mov
enter
js
cmc
jmp
jbe
cmps
mov
jmp
pusha
arpl
mov
sub
fwait
adc
lds
sub
icebp
hlt
or
xor
int3
cmp
mov
inc
shl
(bad)
pop
icebp
pusha
movs
xchg
jae
mov
(bad)
jmp
or
icebp
pop
xchg
pop
inc
ret
jae
aad
adc
rol
jb
outs
sub
mov
mov
xor
cmp
or
in
aam
es
mov
test
lods
inc
(bad)
in
cmp
sbb
call
not
xor
push
jl
shl
in
adc
(bad)
jbe
not
jnp
and
or
push
dec
adc
xor
aaa
mov
cmps
icebp
aad
test
pop
xchg
jl
iret
pop
cs
or
aad
jge
into
sti
cli
cmp
fdivr
sbb
stos
mov
movs
cmps
and
loopne
cmp
mov
pop
clc
mov
fisubr
lds
and
xor
das
mov
out
mov
mov
add
push
sub
push
jl
xor
xor
adc
popf
mov
ja
xlat
add
icebp
mov
and
cmp
adc
sub
ja
rcl
cmps
mov
iret
xchg
cmc
adc
popf
mov
jmp
mov
xchg
movs
loope
push
(bad)
fnstsw
inc
rol
jge
and
cmp
icebp
pop
mov
cmps
lods
xchg
or
(bad)
dec
(bad)
repnz
fwait
pop
loopne
les
pop
aad
aad
cld
cdq
retf
dec
mov
test
pop
mov
push
jg
mov
jo
ret
(bad)
iret
jns
mov
mov
push
and
xchg
ret
cmp
mov
cmp
and
ja
and
jne
test
out
jmp
not
fdiv
lods
inc
cs
mov
aas
in
stos
sbb
(bad)
sub
add
xor
dec
inc
movs
sub
nop
shl
xchg
ins
adc
(bad)
shr
and
out
(bad)
outs
fiadd
xchg
in
lahf
retf
repnz
push
xchg
imul
add
and
cmp
xchg
adc
dec
lahf
mov
sub
adc
rcr
ins
and
cli
fcmovu
jb
jns
fmul
out
not
mov
mov
push
mov
mov
lock
daa
adc
jae
sahf
les
cmp
jge
ds
stos
sub
call
(bad)
and
cmp
mov
push
scas
cdq
jge
pusha
pushf
xlat
les
std
sbb
nop
push
inc
xchg
sub
call
push
sbb
ins
add
enter
sbb
int3
xor
pop
xlat
and
in
and
dec
rol
pop
jl
xor
in
dec
dec
xor
fld
and
into
rcr
(bad)
cwde
pop
cmp
push
pop
lods
add
sbb
jno
sar
ficom
in
dec
and
jle
or
sub
repz
lods
arpl
aam
add
mov
mov
arpl
jmp
es
add
sbb
or
sahf
xlat
sbb
push
and
sbb
pop
(bad)
fxch
pop
out
cmc
mov
inc
xchg
mov
rcl
add
gs
rcr
leave
add
adc
popa
mov
enter
push
lods
or
das
push
je
in
push
pop
nop
leave
mov
aam
xchg
cmp
js
sbb
mov
nop
mov
outs
gs
push
adc
sub
mov
xchg
inc
cwde
pusha
push
pop
push
call
loope
and
lods
sar
in
sbb
sub
mov
sbb
pop
jns
pop
clc
aam
mov
call
test
and
jno
mov
in
cmp
enter
mov
movs
aaa
push
movs
xor
push
xor
push
imul
xchg
xor
xlat
pop
xchg
mov
dec
add
push
mov
inc
mov
les
mov
dec
jns
(bad)
xchg
(bad)
mov
movs
movs
xchg
cwde
mov
jge
jb
stos
test
xchg
out
rcr
in
repz
jns
xchg
push
mov
sub
mov
adc
popa
inc
mov
mov
je
mov
jecxz
xor
mov
ins
sub
jmp
shl
push
jge
inc
push
jl
pop
xchg
out
mov
retf
cmp
gs
mov
mov
(bad)
and
add
out
pusha
jg
push
mov
clc
push
ret
clc
addr16
loopne
jl
repz
mov
mov
cmp
fs
les
mov
mov
in
push
xchg
scas
popa
test
xchg
cmp
mov
bswap
in
jge
addr16
pop
rcl
xchg
jecxz
out
push
daa
mov
or
sub
sub
xor
xor
mov
rcl
fld
daa
mov
out
add
ins
fstp
lods
arpl
inc
dec
in
sbb
lahf
and
dec
ds
arpl
popf
sub
xchg
pop
lea
jg
das
sti
test
jp
(bad)
outs
stos
cmp
push
sbb
sub
arpl
pop
mov
cmp
icebp
popa
gs
xchg
push
jmp
or
pusha
xchg
in
jp
or
scas
jo
outs
mov
pop
mov
scas
fldcw
jbe
xchg
push
jmp
dec
call
jae
pop
stc
xchg
ss
xchg
xchg
pop
sub
(bad)
xchg
sbb
js
mov
add
or
push
add
fiadd
cmp
mov
call
sub
ret
in
jne
fsubr
data16
and
stc
xor
inc
push
jno
stc
ficom
xchg
enter
lods
mov
clc
stc
sub
mov
cmp
jg
xor
mov
sub
or
loope
xor
das
adc
mov
jbe
mov
test
or
sbb
adc
sub
pop
out
pop
sbb
dec
pop
ret
sbb
mov
cmp
(bad)
jmp
jg
mov
mov
or
call
lods
retf
lds
xchg
retf
scas
into
loopne
ror
in
cmp
dec
xchg
mov
addps
sbb
(bad)
lea
test
into
pushw
dec
xor
mov
outs
repz
xor
cmp
jns
movs
xor
jbe
adc
xchg
mov
sar
retf
cmc
mov
(bad)
jne
mov
pop
sub
xchg
(bad)
mov
push
jb
cld
push
icebp
or
pop
aas
es
test
fucomip
xchg
fist
push
cmp
push
or
lods
retf
cwde
and
setae
(bad)
xlat
das
dec
lock
inc
and
and
test
leave
cmp
push
lea
push
movs
(bad)
movs
sahf
dec
jb
pop
das
popf
and
mov
leave
push
cld
in
push
retf
push
or
inc
loopne
dec
out
mov
or
popf
enter
rcl
and
out
bound
push
pop
dec
and
in
add
cmp
aas
push
cmp
out
jmp
inc
xchg
sbb
imul
xchg
adc
xchg
mov
pop
pusha
ins
(bad)
cmps
xor
dec
mov
sbb
cdq
pop
add
pop
pop
xlat
outs
stc
adc
pop
(bad)
jo
xchg
ins
sub
cmps
std
or
pop
mov
xchg
popa
cld
daa
xchg
lahf
pusha
lahf
out
pop
xchg
pushf
pop
push
push
jne
jp
cmps
aaa
scas
nop
and
mov
lods
xor
cmp
cmps
push
aam
dec
mov
les
pusha
xchg
addr16
xchg
jp
int3
aas
mov
pop
out
mov
push
xchg
fstp
jns
iret
add
inc
sub
sub
mov
mov
or
js
leave
(bad)
fiadd
cmp
jl
inc
mov
mov
pop
jbe
mov
lods
lds
frstor
nop
into
mov
xchg
sub
ror
cmp
scas
mov
(bad)
cmc
pop
fs
stc
rol
jecxz
sub
add
jns
dec
pusha
fsub
jnp
aaa
movs
add
bound
shr
(bad)
jae
push
hlt
xor
jo
jg
rcr
mov
inc
in
(bad)
adc
call
das
cmp
ret
sub
hlt
mov
rol
jo
dec
data16
xor
ja
out
rep
add
push
sbb
mov
inc
fild
call
daa
cmp
mov
imul
or
add
jbe
cmp
add
push
and
push
jns
xor
xor
ds
shl
mov
adc
sahf
movs
add
mov
stos
pop
or
jmp
push
fidiv
sbb
xchg
push
sub
ret
sbb
inc
or
icebp
outs
je
(bad)
jge
scas
in
lahf
shl
into
outs
out
sub
popf
cmp
imul
(bad)
cwde
sbb
and
sahf
rol
sub
test
repz
inc
push
icebp
sbb
push
ja
je
push
in
push
mov
(bad)
call
or
std
sub
push
push
jbe
jmp
test
fsubr
add
shl
mov
and
fs
jmp
mov
dec
xchg
xchg
push
pop
sub
es
mov
stc
test
jne
adc
sub
adc
jecxz
das
not
xor
idiv
sub
fld
imul
add
pop
out
fdivr
lock
int
call
test
bnd
(bad)
int
cli
mov
cmp
dec
mov
pop
mov
in
aam
inc
or
(bad)
les
pop
nop
aad
nop
test
ins
push
scas
lods
cli
pusha
cli
in
xor
or
pushf
and
jmp
ins
(bad)
(bad)
adc
sub
daa
test
dec
mov
push
ja
dec
ins
fadd
stos
cmp
xchg
(bad)
bnd
js
xchg
or
and
xchg
sub
jl
push
scas
aaa
movs
cmp
add
pop
add
cli
popa
cli
mov
adc
jmp
add
repnz
shr
inc
and
cmc
xchg
push
xchg
xchg
mov
dec
loopne
fld
jmp
cmc
rol
paddq
out
jmp
rol
xor
and
cli
out
pop
scas
sti
push
sbb
jb
inc
dec
je
pop
mov
inc
dec
pop
rol
loope
jns
push
ja
movs
lds
mov
fwait
ja
or
or
push
push
or
push
xor
or
ins
in
push
imul
push
cmp
fnstenv
jns
scas
cmc
cmp
sbb
mov
(bad)
rcr
test
cmp
gs
rol
pop
sub
pop
jb
fild
lds
xchg
mov
jl
or
cld
movs
fdivr
mov
mov
scas
fwait
imul
mov
mov
xchg
pop
jecxz
push
fdiv
mov
mov
pop
sbb
test
push
and
cwde
mov
mov
ret
push
xchg
and
xlat
inc
inc
jno
popa
fs
push
jg
lods
push
sbb
repnz
ds
mul
xor
cmp
outs
stc
add
and
push
adc
stos
cli
mov
or
add
fsubr
jbe
scas
cmp
mov
dec
xchg
fcom
mov
jmp
jns
xchg
fild
cmp
add
push
ds
mov
sub
cmp
sub
sbb
push
dec
pusha
sbb
sbb
mov
outs
test
out
dec
xor
pop
push
sub
rcr
fld
out
jne
jo
ret
inc
mov
ins
pop
pusha
daa
out
into
inc
xchg
inc
cli
inc
inc
pop
dec
movs
mov
test
(bad)
adc
shr
gs
pop
push
pop
std
addr16
mov
push
fs
(bad)
inc
sub
lds
cmp
lods
dec
mov
ins
push
scas
pop
cs
out
dec
xchg
xchg
lods
inc
and
sbb
push
scas
sub
lods
dec
jb
movs
and
mov
sbb
inc
inc
push
aad
cs
retf
sub
push
movs
int
scas
in
lods
or
movs
push
outs
fs
cmp
jb
mov
cli
push
loop
xchg
fadd
mov
sbb
(bad)
imul
addr16
pusha
out
nop
mov
outs
or
and
xchg
xor
pop
add
(bad)
jns
cs
adc
test
dec
inc
push
mov
jbe
test
cmp
sub
mov
xchg
dec
out
jne
push
and
scas
retf
sti
arpl
loop
or
stos
pop
ficom
mov
fmul
pop
imul
jno
mov
stc
and
lods
repz
fild
fidivr
cmps
out
mov
jo
sahf
push
(bad)
jmp
arpl
mov
cmp
mov
cld
stc
outs
lock
das
icebp
pop
cmp
dec
push
sub
fidivr
and
fst
jb
sbb
or
(bad)
xor
addr16
xchg
mov
(bad)
out
out
aas
push
mov
gs
mov
adc
xchg
and
pop
cmp
mov
and
test
or
xor
outs
stos
pop
push
(bad)
mov
inc
aam
xor
repz
clc
jmp
arpl
mov
retf
add
push
jle
pop
or
ins
cli
lods
test
cmc
outs
ror
ja
pushf
xchg
scas
fsub
das
jge
retf
bound
out
xor
dec
push
in
cmp
ret
add
lea
jne
shr
inc
mov
pop
cwde
xor
fild
out
cmps
test
xchg
push
imul
xchg
shr
addr16
push
xor
hlt
sbb
(bad)
lods
cmp
cmps
and
fstp
dec
(bad)
ds
lock
mov
sbb
pop
and
ficomp
fisubr
inc
sub
outs
pop
loopne
pop
mov
sub
lods
sub
mov
imul
pop
aad
lods
jle
aaa
fwait
and
xor
mov
sbb
xchg
sub
sub
jl
sbb
inc
stos
scas
stos
je
retf
arpl
shl
test
and
pop
iret
scas
daa
lahf
fistp
cli
mov
push
push
jmp
mov
clc
or
cld
scas
add
pop
aad
vprotw
int3
loop
in
xchg
inc
jb
push
mov
jne
cwde
sets
(bad)
cmp
inc
call
ds
imul
int3
scas
stos
arpl
push
(bad)
clc
leave
mov
adc
sub
outs
xor
(bad)
sbb
adc
jecxz
lock
cmps
shr
aaa
aad
mov
ins
dec
fcomi
mov
mov
int3
or
iret
pop
data16
push
adc
push
(bad)
out
out
outs
(bad)
hlt
push
pop
mov
mov
dec
jmp
(bad)
jl
push
loope
xchg
inc
push
jp
int
bound
and
sub
push
in
lods
cmp
cmc
aas
inc
cmp
fs
mul
or
icebp
shr
xchg
add
push
mov
jbe
sti
sub
xor
stc
daa
loopne
loop
out
enter
pop
out
jno
movs
cmps
fiadd
dec
push
ret
cli
jne
push
fmul
inc
mov
sub
fdivr
xchg
jle
imul
mov
pop
dec
ss
in
outs
cmp
mov
push
dec
out
sub
imul
loopne
in
rcl
fisttp
pop
in
and
repz
add
call
inc
add
js
call
push
sbb
dec
sbb
scas
inc
push
scas
arpl
cmp
das
add
ret
in
in
mov
pop
mov
stos
pushf
mov
push
pushf
and
inc
int3
ficomp
mov
imul
cli
movs
imul
call
inc
inc
cwde
xchg
pop
stc
and
imul
jl
or
pop
rcl
mov
mov
mov
xor
jae
pop
mov
sbb
aaa
and
pop
cmps
out
faddp
test
fwait
jg
mov
out
push
cdq
cmp
mov
add
enter
dec
repnz
pop
imul
inc
add
add
fdivr
addr16
lock
stc
wrmsr
cmp
cmp
loop
or
jbe
mov
dec
mov
lahf
add
jl
and
ret
jmp
jmp
ret
lock
lock
add
dec
push
and
jge
lods
fbstp
in
call
cmp
xchg
xor
push
(bad)
xchg
scas
cs
or
mov
ins
loopne
je
mov
dec
(bad)
scas
adc
adc
idiv
mov
mov
pop
xchg
std
jecxz
bound
bound
jecxz
jns
sbb
inc
loopne
lods
mov
cmp
jge
cmp
add
push
mov
adc
inc
out
pop
jns
or
out
mov
pop
jno
jbe
fidiv
in
mov
aas
mul
jbe
ds
xlat
sub
jg
pop
pop
pop
push
test
mov
cmps
(bad)
les
retf
in
mov
movs
outs
inc
lahf
jecxz
push
shl
daa
aaa
dec
pop
jg
cdq
daa
shr
fdiv
xor
cmps
dec
mov
dec
dec
ficom
sbb
hlt
sahf
pop
rol
or
jb
mov
jp
xor
inc
sbb
dec
idiv
mov
scas
cmp
pop
shr
xchg
cmp
or
stos
xchg
nop
pop
unpcklps
aam
scas
in
jp
(bad)
retf
and
mov
arpl
and
in
stos
push
fst
ins
sbb
out
bound
in
pop
sbb
enter
stos
add
out
mov
ret
push
addr16
hlt
or
push
and
inc
call
js
out
sub
xor
and
mov
dec
xchg
xchg
push
mov
cdq
mov
mov
ret
js
jle
hlt
sbb
cdq
dec
stos
xor
(bad)
jle
sub
loop
(bad)
ror
cmps
popa
cdq
scas
push
stos
les
jmp
out
add
cmp
ins
sub
xor
push
push
daa
xchg
iret
in
mov
cmps
sbb
cmp
repnz
mov
neg
in
adc
ins
test
mov
jg
mov
(bad)
ins
cwde
mov
xchg
enter
sub
cdq
cld
rcl
xchg
xchg
cmp
add
int
fs
sti
call
sub
(bad)
(bad)
add
retf
or
(bad)
or
movs
dec
call
test
cmp
ds
dec
mov
xchg
lods
jbe
and
rcr
dec
aas
test
xchg
add
cdq
jno
nop
and
pop
(bad)
int3
clc
cmc
fld
mov
ret
test
sub
movs
fidiv
and
in
jbe
ds
jbe
mov
push
sbb
fisubr
sti
and
movs
xchg
inc
je
jmp
jg
out
cmps
and
lods
xchg
cmps
jb
mov
stc
pop
rcr
(bad)
jg
ficom
cld
ds
pusha
mov
dec
(bad)
bound
das
jb
mov
and
pop
inc
mov
cld
sub
pop
jae
dec
xor
jae
jb
and
cmp
jmp
mov
sbb
sbb
sub
sbb
xor
sub
add
mov
cld
sahf
aam
scas
inc
pop
push
jle
jmp
inc
xor
fbld
out
dec
shl
and
fadd
jb
ror
xchg
or
pop
fnstenv
popf
scas
scas
sbb
lock
out
pushf
std
popf
repz
dec
ret
mov
jp
mov
fidiv
cmp
rcr
push
frstor
sub
outs
jg
imul
jo
or
jne
cwde
inc
mov
adc
ror
push
mov
pop
xchg
inc
push
add
jmp
es
fdiv
mov
clc
lods
mov
inc
inc
inc
lods
mov
jmp
je
loope
add
sti
mov
mov
imul
push
into
and
sar
mov
cmp
pop
pop
xchg
jb
call
mov
lahf
inc
push
daa
cwde
cmp
jno
pop
jmp
out
aam
push
ja
push
dec
xchg
xchg
popa
lahf
xchg
xor
or
cmp
pop
mov
pcmpeqd
lds
scas
test
mov
mov
and
(bad)
in
test
scas
cld
push
cmp
mov
(bad)
sub
jne
fldcw
inc
sbb
mov
adc
cmp
add
and
in
aam
jmp
mov
sub
ja
jbe
ret
mov
shl
mov
inc
rol
cmp
cld
cli
mov
ds
ins
(bad)
jae
hlt
xchg
mov
cdq
add
ins
add
inc
loope
adc
imul
std
stos
movs
add
(bad)
mov
jge
push
xchg
aam
shl
pushf
sbb
dec
and
add
jl
aad
xor
bound
mov
pushf
in
stos
das
outs
push
out
leave
push
cmps
push
ret
push
aaa
int3
in
pop
lea
int3
fdivr
mov
idiv
cli
icebp
dec
jmp
pop
inc
jo
jnp
shr
(bad)
in
adc
out
retf
push
add
push
retf
mov
(bad)
inc
pop
arpl
leave
enter
dec
pop
loopne
cli
fild
push
int3
or
stc
pusha
pop
movs
mov
movs
or
xor
ja
gs
mov
jmp
or
outs
sti
mov
call
inc
inc
mov
adc
popf
jmp
and
cmp
xor
aad
inc
push
mov
mov
push
jae
mov
scas
xchg
inc
or
mov
inc
mov
aam
xor
dec
jmp
mov
push
std
mov
cmps
mov
mov
loopne
dec
and
and
xor
(bad)
int3
mov
mov
loopne
add
cmp
test
out
das
push
push
(bad)
data16
(bad)
jmp
inc
adc
div
into
xor
addr16
(bad)
push
sahf
mov
jnp
inc
jo
rcr
stos
in
into
xchg
clc
pop
enter
add
fst
icebp
out
js
cld
push
nop
pusha
sahf
cmps
inc
jmp
jg
inc
and
sar
test
(bad)
scas
xchg
adc
outs
dec
jo
arpl
or
dec
push
lods
and
jnp
mov
gs
ds
xchg
int3
mov
pop
lea
out
push
mov
mov
pop
mov
stc
enter
jge
retf
pusha
xor
add
pushf
jge
fdivr
aad
lds
and
rcr
mov
pusha
mov
push
xor
jmp
pusha
test
leave
and
mov
mov
or
iret
lea
test
test
mov
fwait
call
rol
add
scas
mov
pop
in
ret
sbb
loope
imul
cmps
mov
jnp
ins
mov
xor
add
or
pusha
mov
clc
call
mov
push
push
arpl
nop
jb
dec
pop
addr16
mov
dec
popa
and
push
rol
pop
imul
clc
ds
mov
fwait
and
mov
shl
gs
xchg
fsub
int
repz
adc
inc
test
push
fst
inc
mov
enter
nop
or
jnp
int
xchg
je
cmp
pop
push
cmc
mov
xor
ret
xor
test
xor
repz
aam
cmps
push
sub
dec
hlt
sti
jl
dec
call
stos
fwait
in
dec
imul
push
ror
adc
add
and
jns
push
jle
sub
dec
xor
aad
mov
push
xchg
int
imul
aas
pop
mov
std
xchg
jnp
cdq
nop
xchg
mov
inc
ss
in
dec
inc
add
sbb
jb
cmp
loop
mov
mov
sub
in
loope
imul
rol
(bad)
jae
push
outs
adc
add
sbb
(bad)
data16
cmps
hlt
add
aaa
jae
int3
mov
jo
and
sbb
xor
and
pop
add
add
mov
dec
xor
sub
enter
in
and
xlat
loope
cmp
jmp
imul
out
sub
mov
inc
adc
or
in
mov
xor
xchg
jns
adc
mov
loopne
(bad)
mov
sti
sub
cs
test
ds
movs
mov
sbb
test
outs
fisttp
and
jmp
cmp
scas
call
pop
cmp
xchg
rcpps
jmp
push
mov
cli
xchg
outs
movs
push
push
int
hlt
mov
mov
clc
sbb
xlat
loop
pop
daa
icebp
mov
sbb
sbb
cmps
sbb
neg
xor
add
push
scas
push
dec
fst
push
jmp
add
jmp
mov
push
enter
mov
pop
in
not
fist
sbb
mov
pushf
js
push
out
sbb
jp
sbb
jl
neg
inc
inc
dec
aas
fst
nop
cmp
cmp
js
push
enter
sahf
sbb
arpl
inc
dec
jns
cwde
mov
jnp
pop
imul
push
and
jbe
inc
push
jbe
mov
mov
jmp
out
stc
and
xchg
dec
lods
sub
mov
aad
pop
sbb
popa
jmp
aam
adc
dec
mov
(bad)
jp
dec
mov
cmp
repnz
and
scas
sbb
xor
(bad)
adc
and
mov
repz
and
lods
dec
sub
pusha
mov
add
dec
ins
sbb
mov
sbb
lds
addr16
movs
dec
mov
cmp
jns
dec
pinsrw
dec
rol
sbb
adc
aaa
adc
fiadd
scas
les
or
fsub
aad
call
dec
cmp
or
add
jns
sub
out
pop
popf
jmp
dec
adc
dec
aad
sbb
or
push
(bad)
ja
popa
imul
loopne
idiv
push
sub
(bad)
nop
dec
push
(bad)
ficomp
sub
(bad)
movs
outs
repz
mov
cdq
retf
loopne
mov
cmc
mov
aam
daa
push
lea
js
cld
jge
mov
xor
push
mov
cmp
int
and
mov
inc
add
loop
cmp
and
inc
bound
xor
fbstp
loope
sub
ins
dec
mov
xor
sbb
mov
sbb
add
jo
xlat
pop
rcr
xchg
jmp
jmp
stos
inc
test
add
jp
jns
retf
mov
imul
dec
xchg
aad
jae
(bad)
ror
mov
arpl
lds
sbb
je
stos
imul
pop
add
fcomip
mov
jmp
dec
inc
add
and
pop
cmp
pop
dec
xchg
mov
pop
or
pop
cli
mov
mov
shl
push
sti
jl
out
iret
push
push
sahf
les
mov
mov
jp
mov
dec
les
and
ret
shl
dec
push
jmp
std
div
cdq
push
push
cmps
xor
xchg
mov
lods
add
mov
sbb
mov
loope
xchg
jge
rcr
(bad)
mov
mov
sahf
aad
add
jp
out
pop
fdivr
jge
dec
pop
int
loope
xchg
inc
lds
push
dec
jge
mov
movs
mov
adc
and
cmc
cmp
arpl
push
cld
cmps
and
jmp
test
cmp
sub
adc
mov
fstp
dec
add
pop
ja
popf
inc
jns
jno
addr16
sbb
mov
out
sbb
nop
dec
cmp
jnp
xor
pushw
stc
jne
add
mov
cli
push
mov
mov
ret
push
push
dec
cs
fstp
inc
test
test
sbb
push
dec
mov
hlt
stos
inc
cwde
hlt
mov
and
lea
call
lock
inc
inc
sub
sbb
loope
and
xchg
mov
add
dec
sub
xor
add
jnp
data16
mov
rcl
pop
ret
outs
retf
stos
arpl
int
fild
cmp
jl
xchg
pop
mov
or
sbb
div
xor
jnp
adc
(bad)
out
in
add
sub
jmp
int3
xor
retf
(bad)
imul
(bad)
mov
sub
jb
mov
xchg
mov
es
lahf
popf
loope
xor
jne
pop
dec
pop
test
cmc
loop
pop
ins
aas
cmps
xchg
lahf
jmp
jle
fcomp
nop
mov
jb
add
add
dec
fstp
dec
lahf
inc
dec
mov
(bad)
inc
mov
jb
lahf
or
cmp
outs
(bad)
int
pop
jmp
(bad)
push
cld
mov
fwait
sbb
adc
iret
enter
mov
out
push
mov
sbb
inc
adc
pop
out
mov
dec
aas
loop
jecxz
adc
test
cmp
retf
pop
mov
jo
cmp
push
fistp
mov
or
mov
cmp
js
int3
xor
cwde
xchg
jp
addr16
repz
sub
mov
jae
imul
cmp
paddq
push
(bad)
aas
cdq
les
adc
js
cmp
and
mov
hlt
adc
loopne
adc
sub
ins
movs
add
inc
inc
repz
ror
pop
pop
mov
icebp
(bad)
pop
cmp
into
add
inc
or
popa
add
pop
jmp
stos
jb
cmp
mov
mov
mov
or
cmps
int3
jns
jbe
mov
xchg
pop
mov
mov
sar
push
(bad)
in
js
or
movs
sub
clc
mov
inc
mov
std
push
push
pop
dec
mov
stos
mov
cmp
push
call
xchg
dec
add
cld
ret
xor
push
and
aad
aaa
jecxz
push
mov
pop
mov
xor
test
mov
mov
ja
push
(bad)
mov
fbstp
sahf
cmp
dec
push
das
ds
adc
in
js
movs
and
sub
pop
jno
aas
or
mov
sub
xchg
and
push
or
cmp
bound
or
inc
jg
pop
jle
sbb
and
dec
ret
aam
add
leave
dec
and
mov
bound
arpl
(bad)
dec
mov
push
add
xor
cld
enter
fcmovbe
pop
jnp
mov
adc
ret
mov
loop
xor
rcl
cmps
(bad)
not
mov
cmp
and
lahf
arpl
leave
jl
add
pop
push
pop
cld
outs
in
loope
mov
xchg
leave
adc
push
mov
sub
scas
movs
sub
add
in
mov
fs
lock
cs
xchg
outs
and
int3
mov
sti
adc
ret
int3
mov
sahf
retf
xor
movs
(bad)
ret
cs
cmp
sbb
sub
movzx
das
lods
cwde
mov
(bad)
push
xor
cmp
mov
sti
call
push
pop
pusha
mov
imul
sbb
push
adc
push
mov
repnz
jne
mov
call
and
xchg
(bad)
jne
mov
iret
rcl
daa
shl
mov
mov
jb
inc
out
cdq
in
sbb
les
cmp
(bad)
sbb
push
ret
fmul
cld
mov
out
cmp
inc
jnp
mov
adc
cwde
lods
add
fld
jmp
dec
data16
sbb
retf
je
xchg
inc
aas
mov
icebp
push
adc
xchg
pop
adc
xchg
hlt
xor
lds
jns
xchg
add
hlt
scas
das
add
scas
test
fisubr
mul
push
std
in
xor
in
jb
pop
mov
push
stos
fs
out
and
popf
jecxz
aaa
push
mov
push
sub
xchg
sar
std
scas
out
add
xchg
shl
lahf
mov
(bad)
int
cmp
fldenv
ret
cmps
pop
mov
pop
pop
mov
jns
sub
call
mov
xchg
enter
iret
adc
pop
pop
cmp
add
jo
mov
adc
addr16
push
jmp
mov
movs
pop
xor
mov
push
mov
into
fucom
popa
jno
mov
sub
push
xor
mov
mov
mov
loop
out
ds
enter
cwde
inc
sar
aas
mov
dec
push
and
inc
add
mov
cmp
arpl
sti
inc
push
sub
mov
mov
xor
int3
pusha
pop
sub
pushf
lahf
(bad)
repnz
cwde
add
jb
jns
inc
adc
xchg
out
push
stos
and
lahf
xor
dec
pop
popf
jno
and
inc
shl
int
push
mov
(bad)
push
fistp
jo
cmp
mov
sub
pop
jle
dec
lahf
sub
and
jg
adc
in
mov
sbb
movs
int3
(bad)
fidiv
mov
push
push
(bad)
and
mov
and
mov
and
add
fwait
js
imul
fs
pop
dec
mov
inc
xor
inc
cmps
arpl
cmp
popa
and
jne
mov
sub
leave
gs
mov
rol
les
xchg
(bad)
pusha
or
cdq
or
pop
jecxz
inc
adc
push
cmp
aaa
sub
adc
mov
ret
lods
lahf
mov
gs
xchg
pop
arpl
mov
pop
and
icebp
xchg
mov
adc
test
inc
mov
or
sbb
jae
pop
jp
scas
rcr
jno
push
(bad)
sbb
sar
stc
fs
inc
add
loop
nop
lea
test
jno
mov
test
test
mov
and
dec
add
stc
jle
(bad)
push
ins
or
xorps
int3
add
das
in
jne
jmp
dec
cvtps2pd
(bad)
jecxz
loopne
cmp
sti
fidivr
mov
aad
add
inc
lea
ja
rcl
jecxz
out
inc
in
(bad)
data16
gs
das
xchg
push
call
gs
fnstenv
pushf
push
scas
jp
xchg
sub
mov
aaa
jle
cmc
hlt
fdivr
jmp
idiv
ficomp
jmp
mov
retf
sbb
pop
fiadd
fimul
jmp
push
cdq
ja
xchg
sbb
ins
mov
sbb
lahf
push
jp
mov
cld
out
imul
cdq
js
add
imul
dec
push
add
push
push
adc
pop
add
and
xchg
les
daa
add
test
xchg
pop
js
loopne
loopne
(bad)
aas
cmps
gs
and
rcl
xchg
mov
mov
popa
pushf
loop
fsub
sahf
xor
sub
push
into
nop
rdtsc
aad
mov
push
inc
mov
pushf
imul
call
adc
cmp
cmp
or
lea
sbb
and
cs
pushf
cmp
clc
mov
(bad)
xchg
inc
inc
gs
stos
xor
nop
retf
add
jg
gs
xchg
add
sub
mov
xchg
outs
mov
outs
fbld
sahf
call
jb
xchg
imul
and
jmp
adc
movs
aam
cmp
and
and
push
cmc
jl
(bad)
and
js
sahf
add
mov
scas
aaa
xchg
xchg
mov
out
add
mov
loopne
inc
add
sub
mov
jb
push
cmc
adc
mov
mov
xchg
mov
inc
mov
mov
loopne
dec
cmp
xchg
mov
xor
outs
bound
and
mov
or
ss
xor
or
fisttp
js
(bad)
cs
jbe
mov
in
cmc
mov
mov
shl
xchg
stc
and
cmp
hlt
cmp
or
and
sub
push
and
ss
inc
not
mov
dec
sahf
into
xor
mov
mov
shl
rcr
ds
jb
aas
jge
outs
inc
repnz
jb
aad
je
xchg
mov
push
jmp
jns
out
dec
stos
mov
cwde
inc
adc
or
out
dec
test
jl
pusha
outs
sub
or
jmp
cli
movs
xchg
and
ret
mov
push
pop
push
das
cmps
sar
mov
inc
movs
push
inc
mov
add
mov
mov
add
dec
xor
or
ins
pop
(bad)
pop
jb
jmp
or
out
call
inc
shr
mov
ds
push
dec
fs
mov
mov
in
and
ret
aas
movs
movs
xor
pop
and
sar
popf
sub
cwde
sub
pushf
sbb
out
jl
adc
call
sti
push
push
pushf
ror
sub
call
adc
push
and
cmp
push
xor
std
stc
sub
add
mov
loop
out
add
test
out
call
push
addr16
icebp
push
test
sbb
mov
aas
cmp
cmps
xor
std
(bad)
cmp
pop
cmp
pop
push
nop
test
lahf
ja
mov
pop
out
sub
jp
sar
std
mov
jmp
imul
retf
fcomp
sahf
sahf
(bad)
push
mov
sbb
mov
or
dec
movups
mov
pop
sbb
js
sub
sbb
pusha
mov
mov
sar
xor
movlps
mov
dec
mov
ja
and
pop
fs
jae
out
push
lods
jb
inc
or
lods
fsub
mov
dec
mov
call
mov
scas
shl
and
(bad)
aas
mov
cmps
dec
dec
dec
sub
imul
out
add
xor
stc
(bad)
sbb
and
and
pop
nop
loope
imul
popa
(bad)
loopne
cld
fiadd
cdq
push
cwde
mov
mov
xor
popf
add
aas
jae
test
repz
jmp
xor
out
movs
leave
lds
icebp
fisub
ror
(bad)
rcr
inc
shl
cmp
mov
mov
pop
stc
mov
inc
push
shr
sub
fbstp
inc
pop
push
out
daa
(bad)
jb
jmp
movs
es
in
mov
(bad)
mov
dec
pop
xchg
push
push
(bad)
mov
outs
mov
std
test
mov
ins
test
jl
push
mov
call
inc
hlt
mov
nop
push
jmp
in
jmp
pop
add
ja
loope
jp
mov
out
lods
dec
sar
mov
jmp
(bad)
jmp
dec
es
scas
(bad)
mov
mov
or
imul
add
mov
pop
cdq
out
pop
sbb
or
ret
lea
cwde
es
test
sub
jne
add
ins
inc
inc
lds
xchg
and
xchg
add
std
or
(bad)
rol
and
fs
dec
xchg
and
das
popa
xlat
mov
hlt
aam
sahf
xor
inc
test
scas
inc
hlt
cmp
push
or
xlat
mov
(bad)
js
shr
sub
mov
lock
dec
cmps
scas
stc
xchg
rol
(bad)
iret
ss
call
sbb
rcr
pop
and
xor
jb
dec
test
pop
loope
cmps
pop
in
fcomp
daa
hlt
add
mov
loop
repnz
and
or
push
ret
je
dec
dec
inc
mov
pop
inc
dec
(bad)
jle
sbb
jge
sub
ror
mov
add
sar
cmp
daa
sbb
pop
lods
pop
call
aad
aas
das
push
ds
das
push
cmp
cld
repz
and
dec
mov
(bad)
stc
mov
pop
in
nop
aad
ins
je
jb
add
outs
xchg
fdivr
jle
daa
xor
jp
rol
xor
push
test
hlt
mov
xchg
cmps
xchg
push
shl
cmp
addr16
xchg
jno
push
or
loopne
pop
push
push
jp
xchg
div
shr
jecxz
imul
sub
mov
cmp
push
fisubr
push
sbb
(bad)
loop
dec
xchg
fisubr
aaa
lods
push
adc
stos
add
sub
mov
dec
xchg
out
loop
push
call
enter
in
gs
gs
outs
push
dec
add
ins
jbe
rcl
retf
call
fwait
les
jae
sti
add
jno
sub
test
xchg
loope
push
iret
movs
bound
push
psrad
push
test
or
ret
sub
cmps
adc
dec
xchg
repnz
fbstp
inc
lea
(bad)
cmps
jnp
add
fistp
iret
inc
xor
cmp
sub
fmul
xor
call
adc
sub
adc
not
pop
cmp
inc
lahf
seto
push
int3
dec
popa
lods
push
and
aad
lock
xor
mov
(bad)
sbb
pusha
bnd
lea
enter
mov
rol
std
arpl
add
jp
popf
cdq
jbe
push
addr16
ja
jnp
jno
jno
add
mov
jecxz
(bad)
pop
adc
mov
push
lahf
popa
sub
std
and
sub
into
outs
pop
test
push
rol
scas
push
es
mov
js
mov
xchg
push
jmp
aad
push
sub
retf
fcomp
ins
adc
loop
and
cmc
shl
sbb
mov
std
enter
cmc
sbb
mov
or
les
adc
or
jg
les
int
xchg
mov
cmp
mov
cmps
in
cld
jb
push
push
fwait
inc
mov
fmul
jmp
sbb
mov
pusha
add
mov
ja
pusha
ret
mov
xchg
jbe
xchg
push
repnz
mov
outs
cmp
xor
jo
dec
aas
or
dec
iret
jmp
mov
inc
lds
fistp
jno
xor
mov
and
mov
push
jecxz
add
xchg
dec
retf
add
std
cmp
dec
xchg
data16
push
into
movs
addr16
jno
pop
retf
mov
pop
sti
out
sub
mov
(bad)
jne
retf
sti
(bad)
add
mov
clc
rcl
inc
out
aam
ins
mov
mov
(bad)
ret
lahf
xchg
jb
pop
jg
gs
and
adc
mov
call
jne
mov
(bad)
out
call
mov
into
jge
dec
test
retf
jns
retf
mov
cdq
rcl
test
iret
xchg
jno
mov
and
call
leave
(bad)
nop
scas
sub
or
xchg
inc
sbb
mov
mov
movs
ret
jl
dec
cmp
add
and
push
push
mov
fcmovne
sbb
in
(bad)
pop
test
iret
cmps
ds
mov
retf
sub
movs
push
mov
hlt
cmp
add
scas
daa
jge
sub
jb
jecxz
xor
out
xchg
pop
or
push
xor
arpl
pop
clc
cmp
cmc
retf
mul
pusha
jne
pop
add
out
pop
hlt
xor
pop
xchg
xchg
mov
test
pop
push
cmp
mov
out
mov
or
aam
out
arpl
sbb
xlat
out
pusha
inc
in
call
cs
xchg
push
push
and
sub
clc
test
cmps
push
pop
lahf
fld
shl
push
inc
cmp
aas
xor
shl
out
icebp
sti
and
or
pop
jmp
retf
mov
mov
dec
sti
stos
inc
loop
neg
jb
loop
or
sub
or
cli
ret
mov
or
jb
popa
dec
pushf
rol
clc
fst
push
sub
movaps
lods
shld
or
push
or
cmps
jecxz
outs
repz
sbb
fwait
cmp
sub
sub
shl
xchg
ss
bnd
add
cli
mov
ds
into
enter
repnz
icebp
daa
cmp
xor
dec
das
ror
jge
cmp
inc
push
retf
adc
out
mov
pusha
sbb
jge
mov
pop
and
repz
sbb
adc
cld
and
push
int3
jecxz
mov
in
dec
not
xlat
xor
loope
or
ret
gs
or
aaa
mov
into
pop
call
pop
scas
ja
out
sbb
lock
pop
cmc
xchg
adc
sbb
out
xchg
cmp
sbb
push
dec
xor
jle
xchg
dec
bound
hlt
jnp
rcl
sub
cmc
scas
shr
div
jae
out
jge
and
rcl
push
mov
cli
out
sub
(bad)
mov
(bad)
lods
pusha
mov
xchg
pop
adc
push
and
aas
sub
in
mov
pop
dec
push
stos
cmp
dec
aad
mov
dec
mov
mov
clc
and
fbstp
mov
xor
clc
mov
xor
adc
and
lahf
xchg
rcr
jne
lds
adc
mov
xchg
adc
xchg
lahf
int3
imul
cmp
les
cwde
mul
pop
not
stos
xchg
arpl
add
pop
xchg
mov
jno
mov
sbb
sbb
cmp
push
fwait
push
push
scas
clc
aas
mov
fcom
fld
es
test
adc
sbb
sbb
ds
adc
adc
jg
push
mov
ins
xchg
sub
xchg
rcl
cmp
sub
mov
stos
sbb
shl
pop
bound
aam
call
mov
sahf
sbb
push
pop
jge
cmps
cdq
jo
xlat
push
push
dec
mov
jle
call
shl
imul
movntps
jno
xchg
loope
push
cld
push
mov
movs
push
add
std
ins
lea
repz
cmp
iret
sbb
lahf
inc
and
push
xor
adc
and
sub
push
popa
ja
jl
imul
mov
adc
lea
loop
je
and
ss
sub
adc
shr
xor
and
xchg
push
push
push
mov
inc
mul
lea
ret
out
(bad)
(bad)
sbb
test
mov
test
lods
lahf
ret
xlat
aaa
inc
jg
adc
push
push
out
(bad)
push
push
adc
add
(bad)
dec
fisub
fsub
mov
outs
fdiv
hlt
outs
test
imul
pop
sahf
adc
push
inc
mov
jno
sbb
push
xchg
dec
and
mov
stos
mov
mov
rcr
lds
xchg
dec
sub
push
sub
xor
or
xchg
aas
fld
std
ficomp
or
jno
test
jl
xchg
push
(bad)
pop
pop
or
lea
mov
pop
mov
mov
repz
jg
sbb
movs
stc
xlat
int
repnz
mov
push
xchg
fld
fldcw
sub
sbb
xor
and
cmp
and
scas
dec
lahf
ins
out
cmc
sbb
add
jmp
test
lock
int
fild
lods
jb
xchg
mov
repz
lahf
jo
add
mov
push
and
lahf
retf
push
mov
aaa
js
sbb
sbb
mov
scas
pop
pusha
outs
sti
stc
sahf
mov
stc
shl
cmp
pop
lock
jg
pop
or
xor
fdivr
push
dec
cmp
push
mov
clc
add
add
cmp
adc
imul
add
enter
add
scas
repz
lea
jmp
sti
and
mov
mov
mov
(bad)
or
dec
dec
retf
fistp
in
(bad)
scas
outs
test
nop
iret
jg
push
repnz
or
(bad)
je
pusha
ffree
add
cld
je
dec
inc
(bad)
out
xlat
sub
pop
fwait
mov
stos
xor
pop
(bad)
sbb
dec
(bad)
mov
or
shl
pop
test
cli
jmp
cmps
fcomp
xchg
xchg
sbb
mov
cmp
ror
gs
sub
jmp
inc
xchg
push
sar
xchg
loope
cmps
pop
jbe
popf
(bad)
ret
ds
mov
push
shr
outs
fistp
adc
dec
push
in
test
das
xor
xchg
mov
pusha
adc
jbe
fwait
and
mov
inc
enter
mov
mov
jno
push
sbb
inc
cld
push
inc
add
imul
out
lea
jbe
or
xor
sub
pop
jno
or
rol
xchg
iret
push
call
lods
push
fwait
dec
mov
push
jmp
xor
xor
das
sbb
lahf
sbb
cmp
(bad)
sub
mov
or
push
lock
rcl
cmp
mov
dec
inc
das
sub
pop
outs
dec
dec
pushf
loop
out
rcl
ret
jmp
pop
outs
sub
adc
out
dec
in
mov
xchg
add
sub
pop
shl
gs
das
aas
jbe
mov
jb
jge
mov
cmp
shr
pop
fcom
repnz
xor
(bad)
lock
daa
xor
push
dec
outs
ret
test
mov
fadd
dec
xor
jp
mov
dec
ds
mov
or
cdq
pop
cmps
push
lahf
fsubr
test
add
mov
xchg
mov
outs
adc
movs
adc
(bad)
nop
jg
mov
icebp
xchg
mov
test
pop
xor
js
ins
xchg
call
popa
fisttp
fadd
adc
call
mov
repnz
mov
out
sub
in
mov
pop
inc
dec
jl
cmc
dec
pop
mov
and
stos
retf
inc
rcl
xor
cwde
sub
mov
push
pop
mov
pop
mov
jne
cmovg
loope
in
rol
fidiv
mov
mov
mov
mov
add
cmp
ret
pop
repnz
ds
push
bound
fisub
xchg
popf
cdq
cmps
daa
jne
jl
fsubr
adc
ret
jg
nop
test
cli
fsubr
sub
daa
sub
adc
pop
rol
xchg
fimul
push
mov
lods
jae
dec
scas
icebp
sbb
int3
pop
jle
jno
test
xacquire
rcr
jmp
jnp
sbb
aad
add
in
cmp
leave
fdiv
push
pop
pop
call
sub
jge
sub
jbe
adc
sbb
in
mov
je
test
sahf
sub
pop
cwde
mov
pop
and
ins
jne
popa
add
and
outs
ret
jge
sar
shl
pop
scas
icebp
mov
lahf
pop
pop
call
adc
ret
pop
in
or
or
pop
pop
cwde
sub
push
jl
repz
ins
jne
(bad)
enter
xchg
xor
in
nop
test
test
aaa
cld
xor
sub
cmp
mov
cmps
out
jns
es
pop
jo
pusha
add
ja
loop
int3
pop
les
sub
push
int
stos
pop
out
push
ds
xor
test
and
ds
or
mov
lahf
and
pushf
test
fs
popf
lods
cmp
jp
inc
mov
xchg
jmp
outs
sbb
test
lahf
jns
pop
ja
sub
ret
dec
retf
bound
adc
xor
and
xchg
or
icebp
dec
adc
popf
into
push
mov
sbb
out
cs
rcr
mov
mov
or
arpl
cmp
push
mov
cs
lahf
bound
mov
sbb
sahf
mov
or
mov
test
pop
fwait
loop
nop
faddp
lods
mov
loopne
test
push
pop
pop
test
std
xchg
xchg
mov
aas
call
sub
sbb
test
xchg
in
outs
sahf
fcom
unpcklps
dec
lods
cmp
inc
adc
dec
int3
jmp
pop
xchg
loop
retf
mov
popa
int
xor
push
test
adc
retf
ins
(bad)
jmp
mov
mov
pop
lods
xor
sbb
and
pop
stos
cmps
enter
sbb
inc
loopne
cmp
leave
and
jo
mov
mov
and
loope
lods
push
pop
or
push
imul
xchg
repnz
stos
cwde
mov
jne
cli
mov
mov
es
jecxz
aad
inc
add
xchg
inc
jecxz
fsub
ins
test
dec
xchg
pop
enter
imul
js
cmc
push
fdiv
inc
stos
or
(bad)
mov
inc
xchg
inc
sbb
imul
fld
jbe
dec
mov
mov
ret
jmp
in
cmp
fst
lock
pop
jmp
cmp
sub
mov
mov
inc
daa
(bad)
inc
clc
or
jnp
cmp
aas
jp
out
xor
jge
rcl
nop
sbb
stos
pop
lds
mov
icebp
rol
or
iret
enter
ja
rsqrtps
pop
inc
cmc
call
ins
test
test
pop
jnp
cld
rol
les
xchg
mov
jae
cld
xchg
and
mov
int3
sbb
ror
ds
ror
cmp
pop
sub
adc
mov
add
push
and
hlt
sub
sub
ins
jp
fs
arpl
and
cmp
fstp
aam
movs
adc
adc
loop
jo
mov
ja
(bad)
jns
test
or
scas
ds
cdq
out
dec
or
ins
faddp
and
add
repnz
int3
cli
in
mov
sub
fsubp
pop
aas
dec
je
gs
rcr
sbb
push
fs
stc
ss
fist
cmp
fwait
hlt
loop
xchg
je
xor
mov
add
pop
sub
jecxz
jmp
iret
mov
repz
xor
rol
js
xchg
cmp
jbe
out
rcl
out
mov
int
pop
push
add
dec
push
pop
jmp
aam
jno
jl
xchg
pop
daa
shl
mov
push
jb
mov
ins
sbb
sti
xchg
pop
push
popf
sbb
xor
mov
mov
mov
xchg
aad
rcl
pop
xor
out
jbe
dec
and
test
arpl
adc
add
xchg
push
sahf
loopne
pop
mov
add
ss
(bad)
aaa
mov
push
mov
add
mov
cmp
sahf
loopne
adc
jmp
aam
inc
rol
out
stos
arpl
lds
out
xchg
push
inc
xor
dec
dec
or
and
xor
ds
lods
xchg
fwait
loopne
in
jl
fisttp
invd
dec
add
rol
jecxz
jle
rcl
enter
and
daa
mov
iret
adc
push
mov
dec
inc
fs
push
pop
mov
mov
sub
loope
adc
sbb
cs
daa
stos
out
fisub
adc
push
xchg
pop
pusha
pop
sahf
mov
add
sbb
jle
cwde
pop
sbb
xor
sub
jb
aaa
arpl
pushf
cli
jle
xor
inc
shl
leave
imul
push
sti
pop
jb
sub
imul
fs
push
push
aad
fs
mov
in
ror
push
pop
ffreep
repz
retf
cmc
imul
cmps
jge
sbb
call
(bad)
sbb
push
cmps
mov
add
mov
mov
mov
mov
mov
std
into
lds
mov
in
push
adc
cmp
cmp
in
mov
pop
aam
cli
popa
inc
pop
jno
sub
cmp
mov
pop
jns
int3
mov
sbb
push
stos
aaa
sbb
fwait
add
aaa
add
cpuid
mov
adc
(bad)
push
jmp
cmps
pop
xchg
push
add
or
cli
mov
jmp
dec
push
push
iret
hlt
int
call
sbb
xor
xor
fild
bound
je
inc
inc
pop
jb
scas
pop
xlat
and
mov
ins
test
ficomp
les
es
mov
dec
jge
and
leave
sub
jbe
stc
(bad)
cwde
imul
ret
cmp
xor
xchg
stos
adc
push
jb
cwde
(bad)
ins
dec
ds
jl
xchg
ds
movs
movs
cmp
mov
ret
pop
add
pop
dec
add
stos
loope
mov
mov
and
fimul
ret
xchg
mov
loop
mov
fisttp
or
(bad)
jg
sbb
fnstenv
jbe
aas
push
mov
cmps
dec
mov
xor
dec
lea
shr
lds
jmp
cmp
inc
fldpi
cld
dec
dec
lea
repnz
repz
xchg
mov
les
sbb
out
test
sub
push
cmp
sbb
cmp
mov
daa
loopne
or
loope
outs
mov
xor
or
ins
stos
mov
jle
jns
adc
ffreep
jg
das
data16
call
cmps
or
pusha
push
outs
push
mov
rcl
movs
or
not
or
ins
cmp
sbb
push
sub
int
sub
push
in
inc
sub
mov
sti
push
sahf
call
sub
into
mov
adc
or
call
mov
mov
cmc
and
loopne
xchg
cmp
fld
dec
daa
mov
scas
in
movntq
adc
out
xchg
or
js
fist
outs
mov
cmp
pop
sub
sub
push
xor
inc
mov
cmp
sar
lods
or
fcom
retf
xchg
and
sbb
ror
shl
ss
mov
dec
std
(bad)
pop
dec
mov
les
and
push
jmp
add
test
cmp
mov
dec
ficom
fisubr
jnp
mov
aas
jmp
aas
lahf
stos
cwde
imul
xchg
cmp
jp
jle
test
push
lods
or
sti
jg
addr16
loopne
xchg
out
aam
push
(bad)
neg
fdivr
lea
fistp
(bad)
mov
dec
inc
loope
mov
fwait
jg
adc
inc
jg
fadd
jecxz
dec
mov
das
mov
push
mov
(bad)
rcr
cwde
or
mov
ror
fwait
dec
pusha
das
push
cdq
jns
cmp
xlat
mov
test
data16
data16
jno
fisttp
push
ss
dec
add
push
cmp
xor
dec
(bad)
hlt
outs
shr
or
mov
jb
adc
mov
mov
push
cmps
xor
inc
mov
adc
ins
jecxz
loopne
cmp
arpl
cmp
outs
push
or
add
fadd
sbb
rcl
pop
test
push
into
and
nop
std
mov
sbb
add
jmp
jae
out
test
adc
or
movs
push
inc
sbb
push
aas
cli
bound
jge
sahf
jb
rcl
jno
inc
shl
jbe
mov
div
mov
mov
mov
xor
pop
das
inc
add
mov
inc
mov
and
or
sub
or
mov
js
and
push
inc
jmp
pop
sub
cmp
mov
xchg
jnp
jge
dec
xor
xor
sbb
movs
xor
add
sub
mov
adc
mov
pop
ror
adc
rol
and
dec
imul
dec
aam
sub
test
or
cli
jbe
daa
and
xchg
or
mov
xchg
dec
rol
sbb
ja
xor
out
jle
mov
movs
cmp
push
dec
mov
mov
rol
jb
push
repnz
mov
lods
mov
sub
jl
sub
cdq
lahf
push
loopne
sbb
pop
(bad)
loopne
outs
xchg
neg
ror
sbb
adc
jecxz
or
test
mov
pop
dec
mov
in
(bad)
popa
pop
sub
sbb
std
iret
movs
daa
repnz
popa
mov
test
cmp
xchg
inc
and
or
sbb
aas
cli
shl
add
push
or
inc
or
and
lods
retf
adc
mov
or
dec
or
lock
cmp
mov
sti
(bad)
pushf
lea
cmp
pop
pop
stc
fmul
je
gs
mul
scas
push
leave
mov
cmp
push
pop
out
push
cwde
sub
data16
or
je
bound
pop
push
hlt
cs
mov
pop
jmp
add
inc
in
adc
fs
punpcklwd
xor
push
or
jmp
adc
cmps
add
fidivr
jmp
push
sbb
xor
xchg
cmp
cmp
xchg
add
inc
pop
mov
daa
(bad)
imul
or
inc
xchg
jbe
jl
out
aad
(bad)
cmp
fisub
sub
fwait
ror
loop
mov
call
pop
dec
out
cmp
inc
dec
jle
fcmovnbe
jmp
or
(bad)
loop
jge
and
repnz
out
shl
mov
sbb
cli
mov
jmp
cmp
enter
cmp
int
xchg
or
adc
retf
and
loop
leave
push
outs
mov
xor
dec
pushf
mov
out
call
jg
xor
sbb
ss
pop
cdq
and
cmp
cld
dec
cmp
xchg
adc
repz
and
or
(bad)
mov
or
iret
or
movs
pop
push
fs
call
icebp
enter
sbb
ins
adc
jmp
addr16
ins
xchg
mov
cmp
fsubr
xor
sub
pop
stos
fcom
push
out
add
fld
cmp
xor
in
inc
in
ds
add
inc
jae
stos
ror
pop
jne
jmp
cmp
inc
ret
push
sbb
dec
cmc
in
mov
mov
cmp
sahf
call
rol
xchg
xor
sbb
and
pop
fiadd
inc
cli
push
and
ret
xor
lahf
mov
fistp
arpl
xchg
scas
ret
inc
sub
push
loop
lock
mov
dec
pop
aaa
add
fsubr
cmp
xor
jno
sbb
add
cmc
or
(bad)
jle
iret
hlt
fst
fsubr
add
xchg
addr16
int3
jbe
cmps
ret
adc
mov
out
xchg
push
je
mov
xor
pop
mov
outs
xor
mov
fidivr
and
enter
lahf
cmp
jbe
stos
ins
mov
arpl
mov
lds
or
js
pop
xor
sbb
mov
call
xor
sub
pushf
xchg
loop
jmp
shl
adc
sbb
and
pop
imul
stos
fild
mov
jmp
and
jae
or
cmp
mov
(bad)
xor
cmp
cdq
add
add
sbb
psrlw
push
mov
addr16
cmps
fadd
xchg
and
fisub
dec
mov
mov
fwait
jno
(bad)
adc
lods
mov
mov
cmp
push
mov
pop
xchg
aas
popf
sar
inc
pop
mov
pop
mov
add
add
pusha
dec
jnp
das
movs
jle
jno
imul
retf
mov
cdq
add
aas
in
lods
adc
repz
ins
adc
dec
dec
js
ficom
and
in
cmp
mov
mov
adc
dec
mov
je
and
fnstenv
inc
imul
mov
lock
mov
les
cwde
stos
lock
add
stos
jne
dec
mov
xchg
imul
enter
xor
fwait
jg
xchg
push
pop
ffree
cmp
cmps
jbe
cmp
add
cmp
nop
rcl
or
push
and
inc
hlt
fdivp
aas
ins
adc
(bad)
jne
inc
test
icebp
dec
mov
std
push
stc
(bad)
stc
test
mov
push
out
jbe
imul
jo
sbb
ins
lods
shr
dec
xchg
ja
inc
(bad)
into
popf
gs
mov
popf
call
xor
cmps
dec
mov
push
inc
mov
add
add
or
movs
icebp
jns
lods
aaa
aad
je
jmp
rcr
jbe
fcomi
in
pop
fs
push
inc
jmp
movs
cmc
enter
sti
lock
mov
cdq
dec
cmps
xor
loopne
xor
in
xchg
cmps
mov
add
sub
mov
jmp
adc
mov
imul
cmp
daa
cli
scas
inc
mov
scas
cmp
int
inc
into
sub
push
dec
outs
retf
or
dec
call
pop
test
mov
push
add
icebp
inc
fs
iret
pushf
push
mov
neg
add
iret
fist
aaa
pop
sbb
push
dec
test
jb
sub
or
and
inc
push
inc
and
lods
xchg
movs
jl
xchg
jp
nop
iret
pop
adc
js
cs
cmp
js
cld
and
aam
xchg
mov
outs
dec
lock
cld
adc
lahf
in
popf
sbb
cmps
call
cwde
jl
repz
cmp
pushf
mov
inc
mov
jbe
cli
cmps
das
inc
movs
in
inc
and
lods
movs
push
add
fisttp
pusha
outs
out
mov
cmp
fs
pushf
adc
mov
stc
fbstp
mov
adc
rol
or
mov
fnstenv
gs
dec
ror
enter
mov
pop
fistp
shr
or
or
stc
pop
mov
inc
cmp
push
add
out
dec
xchg
(bad)
mov
xor
mov
mov
jo
cli
pop
inc
inc
jne
fwait
and
pusha
(bad)
inc
js
js
sahf
fnstsw
push
xchg
push
ficomp
pop
out
outs
push
stos
aaa
es
pusha
cmp
xor
mov
pushf
das
call
out
jne
hlt
push
ror
pop
loop
dec
test
das
gs
mov
iret
rcr
pop
mov
cmp
(bad)
out
push
and
f2xm1
hlt
pop
mov
push
dec
test
ret
inc
push
add
adc
mov
js
add
test
shr
add
dec
movs
add
mov
lahf
cmp
inc
imul
push
push
in
xchg
jmp
mov
xor
(bad)
xchg
jb
xor
cs
(bad)
fsubr
xchg
js
std
hlt
and
faddp
int
or
test
sbb
mov
mov
cmp
leave
dec
add
add
inc
jecxz
and
cmps
lds
adc
jbe
mov
mov
retf
mov
add
jmp
jns
cmps
out
push
loopne
enter
pusha
sub
mov
outs
push
ds
es
sub
das
add
or
mov
dec
dec
jl
jl
push
pop
out
cli
scas
xor
scas
sub
sti
shr
fcompp
mov
push
inc
fsub
mov
or
and
movs
lahf
les
inc
out
inc
cmps
jo
xor
xor
rcl
xchg
adc
jl
out
test
repnz
or
pop
add
ds
push
mov
inc
dec
pushf
xor
rol
xlat
jle
dec
adc
mov
pusha
adc
mov
mov
sbb
mov
fidivr
aad
cmp
cmp
shr
mov
cmp
int3
shl
into
and
inc
cmp
fs
dec
push
pusha
sub
repnz
jge
or
repz
shl
dec
popf
scas
retf
mov
cmp
sar
rcl
lds
jmp
call
das
xchg
repz
jp
and
aas
leave
std
or
adc
cs
add
jmp
jecxz
dec
aad
jmp
jno
scas
dec
ja
arpl
ins
mov
mov
push
fcom
jle
pop
xchg
add
add
rol
xchg
sub
mov
dec
ja
js
sub
pop
setl
mov
lahf
cmp
jecxz
and
adc
cmp
push
jg
sbb
mov
mov
out
bound
mov
bound
and
inc
xchg
hlt
xor
int
xor
inc
and
test
fist
inc
push
mov
push
(bad)
sbb
jne
push
xor
xchg
cmps
call
jae
mov
sub
mov
sahf
cmc
push
cmovg
push
adc
dec
cmp
pop
or
jl
shl
int
into
rcr
ja
cli
push
ins
rol
out
loopne
(bad)
mov
ret
add
cmp
xchg
and
rol
xlat
jg
push
jmp
add
es
rcl
arpl
cmp
sub
aas
adc
mov
inc
mov
arpl
call
(bad)
mov
repz
mov
pop
ret
sub
or
jp
ins
loope
sub
pop
pushf
cmp
fidiv
cli
mov
mov
jns
push
add
cmc
push
mov
ret
dec
rol
add
push
imul
push
and
mov
xchg
aam
mov
fsubr
test
es
mov
pop
jp
and
scas
mov
daa
and
mov
aad
jg
cmp
dec
pusha
jns
add
inc
mov
(bad)
fnstsw
mov
dec
leave
dec
repz
ins
cmc
fcomp
cmp
mov
jge
mov
mov
cmp
iret
add
loope
enter
mov
mov
in
fdivr
mov
add
push
loopne
xor
cs
jae
gs
dec
pop
pushf
call
loope
push
xchg
push
inc
pop
inc
bound
inc
sub
mov
or
pushf
lods
mov
in
mov
pop
gs
dec
std
enter
add
in
push
jb
and
cmp
jl
lock
mov
sbb
sbb
jecxz
scas
mov
inc
mov
gs
movhlps
adc
inc
pop
in
push
xchg
pop
mov
dec
push
sub
push
cmp
(bad)
cmc
adc
mov
adc
sbb
or
sub
(bad)
out
jns
repnz
fwait
xchg
gs
or
ret
xchg
(bad)
push
ror
inc
push
sub
(bad)
mov
xchg
pop
cmps
mov
std
xchg
test
ss
jecxz
rcr
xor
mov
movs
xor
rcl
inc
aaa
fisttp
lds
sub
popa
xlat
cmp
pop
sbb
pushf
fidiv
repnz
out
add
cmp
xchg
imul
adc
jg
lock
out
pop
shr
inc
push
pushf
mov
jg
imul
movd
cmps
sub
xchg
pop
mov
into
sub
int
cmp
inc
ror
leave
imul
stc
push
pop
aad
sub
sub
pop
pusha
lods
out
adc
jmp
push
and
jno
xchg
mov
sbb
inc
out
ret
ss
mov
fwait
(bad)
icebp
jns
mov
retf
fwait
ja
sub
or
jnp
scas
mov
sbb
push
das
and
ins
arpl
mov
iret
les
lahf
sbb
pop
push
mov
jmp
cmps
xor
inc
and
sub
enter
stos
mov
push
dec
sub
mov
sub
pusha
retf
hlt
scas
stos
push
fsubrp
push
div
sti
fisttp
jmp
lods
es
ins
sub
jle
cdq
loopne
lock
enter
icebp
aad
jnp
dec
rcr
repnz
sbb
dec
out
xchg
enter
dec
dec
cmp
mov
xchg
addps
imul
mov
fcomp
push
int3
add
clc
or
fwait
cmps
sub
pop
cs
loopne
enter
int3
xor
sbb
inc
into
mov
push
jo
push
sub
stos
sub
call
pop
add
out
inc
fstp
int3
pushf
xor
add
push
mov
push
xchg
fwait
inc
push
ds
adc
push
cld
je
mov
sbb
mov
movs
or
(bad)
xchg
aad
and
push
loop
xor
not
outs
das
xor
xchg
lock
and
sbb
mov
xchg
imul
sbb
cmp
adc
ja
idiv
jb
jno
fstp
sti
cli
mov
mov
adc
iret
fisub
pop
into
js
shr
movs
adc
scas
(bad)
or
ret
sbb
mov
imul
jb
mov
dec
gs
cmp
xchg
and
in
jb
cmp
or
pop
int3
in
in
retf
std
sub
lahf
inc
data16
fsub
loopne
dec
jle
mov
imul
lahf
jle
ficom
jno
xchg
mov
mov
cli
cmp
call
(bad)
pop
xchg
in
jb
mov
xchg
call
mov
pop
jne
push
push
pop
add
add
fsubr
mov
add
or
bound
adc
and
pop
pop
jg
enter
pop
outs
mov
loopne
push
retf
in
pop
adc
pop
push
xor
mov
or
(bad)
push
shl
aas
dec
sbb
stc
mov
stos
xchg
bound
aad
out
sti
cld
lods
mov
mov
jnp
fwait
mov
int3
(bad)
mov
movs
push
pop
push
hlt
test
and
adc
inc
test
rol
adc
push
int
add
push
jl
dec
ss
xor
and
xor
lods
stos
dec
rcl
add
enter
(bad)
cmp
leave
jg
rcr
mov
add
sub
mov
mov
cli
xor
cmc
jae
xor
outs
mov
and
xchg
add
leave
(bad)
jns
out
and
sbb
in
push
cld
retf
ret
push
(bad)
movs
aam
jmp
dec
fiadd
pop
xadd
(bad)
stos
mov
rol
adc
jmp
pop
inc
mov
inc
cmovnp
das
mov
mov
cmp
mov
ficom
sbb
test
add
leave
cmc
in
xchg
and
(bad)
push
aas
pushf
lods
xchg
shl
or
mov
fcmovnbe
call
push
rcr
pop
neg
push
pop
inc
jns
mov
inc
imul
pop
cld
nop
or
and
cs
sahf
add
lods
out
(bad)
sbb
fs
ds
(bad)
or
mov
cdq
and
xchg
(bad)
sti
jo
int
cmp
cmp
inc
cmps
iret
out
xchg
lods
sub
cmp
mov
test
pop
sub
outs
add
push
inc
push
xor
nop
inc
dec
xor
mov
call
jge
xor
iret
push
lds
pop
pop
ret
cmp
xchg
push
inc
adc
test
dec
cmps
fwait
test
test
inc
fist
adc
inc
mov
and
movs
out
add
leave
and
fcomp
dec
mov
pop
loop
fiadd
stos
mov
or
cmc
ja
ss
xlat
and
and
dec
gs
add
call
push
ins
iret
xchg
xor
cdq
(bad)
xchg
or
pop
aas
in
loopne
popf
popf
pop
cmp
or
sub
cmp
pop
pop
mov
into
mov
jmp
mov
mov
xor
xor
js
dec
cmps
loopne
loope
and
pop
xchg
loop
lock
shr
iret
shl
fld
push
fdivr
adc
movs
lds
adc
imul
and
jae
jmp
cs
loope
in
push
jbe
or
jnp
xchg
xor
stos
fcom
not
div
es
fcomp
scas
mov
dec
or
inc
cmp
in
inc
inc
shl
ror
ret
cmp
adc
rcl
add
sahf
movs
ret
sahf
cdq
(bad)
sub
fwait
hlt
outs
cmps
(bad)
xchg
scas
mov
push
ret
imul
dec
push
push
jne
dec
xchg
ss
fcmovbe
xchg
sub
iret
xchg
movs
push
xchg
cmp
fadd
mov
movs
std
adc
jmp
es
and
movs
fnsave
shl
ja
jb
dec
fwait
cmp
jle
add
ins
dec
sbb
push
sub
inc
xlat
adc
push
inc
daa
pop
pop
or
jmp
in
mov
cmp
fisttp
cmp
mov
(bad)
in
add
jb
add
test
stos
xor
cdq
mov
mov
or
inc
sub
add
sub
loopne
mov
xor
mov
sbb
movs
sub
fld
mov
push
retf
bound
hlt
cmp
pushf
je
(bad)
lock
pop
mov
popf
mov
fwait
mov
jge
xchg
jp
ja
inc
dec
dec
aaa
fwait
adc
sub
sbb
mov
pop
jo
jb
mov
push
not
cmp
jp
outs
or
mov
ror
retf
pusha
push
dec
or
imul
xor
jle
es
mov
enter
arpl
pop
test
pop
ja
fild
pop
mov
mov
(bad)
fistp
sub
stc
pushf
test
sub
fadd
sub
jp
pop
adc
cmps
and
pop
fistp
pop
sub
pop
and
xor
fs
mov
dec
clc
mov
dec
mov
xlat
fistp
and
jl
dec
cmp
jmp
pusha
push
cdq
mov
push
add
(bad)
lods
cmp
xchg
inc
add
cmp
sbb
ss
std
and
std
adc
push
out
xor
inc
inc
je
and
or
pop
jmp
push
jnp
dec
push
ret
into
push
das
(bad)
mov
add
outs
dec
lods
sbb
jmp
imul
mul
mov
add
xchg
test
cli
mov
xchg
idiv
loop
arpl
mov
iret
sbb
test
jo
sub
and
cs
cdq
cmc
sbb
push
pop
adc
mov
xor
div
movs
test
cmp
lock
sti
mov
mov
(bad)
fs
adc
adc
inc
in
push
lds
jnp
std
pusha
push
xlat
je
imul
adc
neg
mov
leave
jae
loopne
jo
out
nop
cmp
xchg
sbb
sub
ins
or
inc
movs
cmp
aam
pop
jmp
xor
sbb
xchg
add
push
(bad)
scas
(bad)
mov
nop
test
lea
push
repz
sbb
jp
mov
adc
(bad)
scas
nop
outs
dec
jp
sbb
test
mov
push
out
rcl
mov
pusha
lds
sar
in
pop
mov
sbb
nop
(bad)
cmc
xlat
jl
imul
gs
sbb
cmp
sub
add
sbb
rcr
movs
fwait
lods
loopne
push
adc
jb
push
inc
dec
xor
test
test
popf
movs
push
inc
lods
inc
inc
jmp
jne
mov
retf
in
movs
inc
sbb
mov
call
push
adc
inc
jge
xchg
cmc
xchg
ss
(bad)
xor
pop
mov
fcmovnb
fild
fstp
fdivp
shr
push
aam
sbb
arpl
test
(bad)
add
pop
jns
inc
repz
xor
int3
sub
add
xor
(bad)
sub
pusha
arpl
scas
dec
adc
jb
rcl
rol
pop
fst
push
idiv
push
sub
xor
or
pop
cwde
leave
popa
call
aas
mov
jle
pop
dec
pop
sub
es
jns
or
into
das
js
fidiv
dec
pop
mov
lock
imul
std
push
adc
int3
sbb
es
jbe
add
popf
into
int
fadd
mov
cmp
imul
out
jae
mov
(bad)
or
inc
push
int
inc
out
pop
hlt
pop
(bad)
push
add
les
mov
jne
dec
inc
js
jne
movs
mov
jno
(bad)
into
std
or
dec
cmp
adc
ja
xchg
cmp
fwait
popa
into
jns
scas
aaa
not
popa
leave
ins
cmp
push
and
add
fmul
and
adc
gs
xor
les
dec
sahf
adc
xlat
sbb
push
lea
pop
outs
xchg
mov
xor
jmp
ret
mov
or
mov
call
movs
xchg
xchg
jmp
mov
push
and
mov
fs
pop
inc
(bad)
fsub
scas
test
lahf
repz
jo
mov
cmp
pop
inc
xchg
mov
push
jns
inc
xchg
imul
and
inc
aas
sub
pop
popf
xchg
push
jnp
cmp
cmp
and
loope
sub
sub
imul
mov
fmul
cwde
leave
adc
xor
mov
ss
or
pop
adc
icebp
std
xor
mov
fsub
pop
mov
xor
je
sub
scas
inc
or
pop
or
cmps
lds
jnp
add
pop
xchg
adc
aas
mov
xlat
test
xchg
inc
xor
jmp
cld
dec
sub
sub
shr
sub
cmp
jb
sbb
daa
mov
stos
cmp
stos
ror
adc
lods
xchg
fld
pop
loop
and
push
enter
popf
sub
mov
push
retf
jae
xchg
rcl
xchg
cmp
ds
fcom
inc
or
jecxz
cmps
add
ret
and
dec
mov
push
or
scas
icebp
popf
jno
ins
adc
cli
rcl
aas
pop
dec
and
(bad)
jecxz
scas
scas
dec
mov
jbe
mov
daa
pop
(bad)
add
fcmove
movs
retf
stc
jmp
sub
gs
push
shl
iret
xchg
inc
ja
dec
or
cmp
and
jno
pop
xor
ja
fs
inc
jg
addr16
(bad)
mov
mov
xlat
pop
fsubrp
pop
pushf
jno
sbb
add
cmc
push
and
mov
(bad)
mov
les
loope
std
cmp
mov
jnp
mov
inc
xchg
cwde
iret
jg
stos
xor
sbb
and
mov
cmp
xor
mov
mov
or
inc
dec
call
push
lahf
cmp
mov
push
jno
imul
sahf
add
dec
xchg
pop
aaa
sub
mov
addr16
mov
jmp
xlat
arpl
(bad)
adc
mov
xor
push
adc
rcr
xor
dec
jge
or
mov
add
or
loope
pop
mov
fistp
movs
mov
xor
retf
in
jl
outs
cdq
xlat
jb
movs
ret
sar
push
in
sbb
pop
icebp
cmp
js
sbb
xchg
push
jno
or
je
sbb
stc
jnp
or
inc
imul
repnz
cmp
data16
data16
jecxz
pop
sbb
adc
and
mov
iret
mov
or
xchg
addr16
and
or
inc
pop
cmc
stos
test
or
xchg
pop
mov
xchg
inc
cdq
push
cmp
xchg
imul
xchg
jp
xor
in
scas
loopne
popa
lahf
div
aad
mov
cmp
push
jb
mov
pop
xor
mov
mov
mov
adc
mov
add
jns
push
test
les
stc
ret
jmp
xchg
call
add
xlat
pop
cs
inc
out
fs
xchg
push
arpl
aaa
dec
cmp
int3
adc
icebp
mov
addr16
mov
push
je
inc
xor
mov
dec
lahf
sbb
jns
pop
adc
in
sbb
mov
sub
loopne
push
cmps
vpavgb
jae
ss
and
adc
sbb
popf
mov
movs
ret
pop
popf
scas
repz
xor
in
push
out
xchg
rol
mov
xchg
int
jle
pop
rcl
adc
rol
jmp
mov
into
xor
in
imul
push
movs
jno
mov
pop
scas
fst
or
pop
pop
adc
dec
xlat
push
repz
and
push
sub
shl
rol
dec
lods
aad
push
inc
mov
push
xor
cmps
outs
push
(bad)
popa
daa
repnz
daa
cwde
xlat
sti
ja
test
inc
in
retf
repnz
test
xor
cmp
cmps
arpl
cmp
dec
mov
rcr
add
(bad)
jns
ins
mov
cmps
push
daa
cdq
cmp
sub
outs
sbb
in
pop
imul
sbb
shl
ror
fdiv
ret
mov
xchg
cwde
jecxz
xchg
pop
shl
fisub
fisttp
iret
sub
inc
inc
fstp
add
leave
mov
lods
add
das
mov
loope
jns
add
jb
data16
jnp
sbb
push
pop
jmp
popf
inc
mov
or
out
mov
xchg
add
xor
cmp
fmul
mov
pop
add
sub
push
mov
mov
out
mov
or
aam
pop
push
adc
adc
cmp
mov
or
push
pushf
mov
xchg
push
mov
or
sbb
retf
cmp
push
mov
fstp
sbb
call
sbb
je
xchg
rcr
mov
pushf
jbe
ins
mov
or
xchg
dec
sub
and
shr
lock
mov
cmp
xor
jne
adc
xor
push
add
in
test
adc
dec
jge
push
dec
xchg
mov
jmp
cmc
xchg
jmp
and
popf
(bad)
cmc
je
dec
lods
adc
mov
fmul
fstp
push
xchg
retf
jmp
adc
cs
lock
fisttp
icebp
push
cmp
test
shl
mov
mov
cmps
push
stos
bnd
in
aam
(bad)
dec
fistp
inc
shr
out
out
lahf
push
(bad)
sbb
shl
pop
(bad)
sbb
(bad)
push
pop
xor
jae
idiv
clc
ret
xor
mov
or
cmps
jne
sar
jmp
nop
mov
bound
psrlq
sbb
aam
inc
and
jae
inc
retf
pop
mov
aas
push
cmc
or
(bad)
sti
cmp
enter
sbb
mov
les
jg
pop
mov
cmp
sbb
dec
or
enter
ins
jg
push
div
outs
rcl
loop
add
push
into
xor
ins
dec
add
pushf
movs
xor
jg
call
shl
movs
push
or
enter
cmps
div
mov
iret
pop
daa
jl
push
jmp
push
push
xor
or
fcomp
inc
jmp
xchg
sub
cmp
and
neg
add
mov
jb
jp
pop
dec
rol
out
imul
push
jo
sbb
addr16
les
fsubr
scas
outs
push
cwde
push
push
data16
jo
or
pop
outs
dec
pop
mov
jmp
sub
jno
add
int
loopne
call
mov
pop
bound
xchg
jg
retf
inc
xor
dec
in
dec
imul
aam
xor
push
mov
imul
cmc
add
and
movs
loopne
jmp
jecxz
cmp
cmp
in
icebp
retf
test
popf
cmc
rol
sub
mov
xlat
jbe
jb
pop
mov
xor
dec
sub
stos
stos
sub
pop
clc
bnd
cmp
push
sub
push
cwde
pop
fisub
mov
shr
cmp
lds
cdq
sbb
or
push
div
fsubr
add
movs
nop
gs
lea
popf
push
call
dec
mov
xor
cmp
mov
adc
jb
xor
push
sub
xor
(bad)
adc
ret
jbe
cmp
ins
out
ror
pop
dec
sti
mov
fs
mov
fiadd
pop
cli
or
shr
sub
xor
push
mov
mov
iret
push
hlt
sbb
es
std
mov
mov
and
fsubr
jbe
test
push
mov
aas
cmp
cmp
or
lods
das
es
lods
jbe
pop
aas
xor
pop
xchg
imul
inc
inc
sub
ja
cld
ins
mov
and
jo
add
pop
lods
and
jmp
lds
mov
shl
sbb
jmp
cmp
out
cwde
pop
in
ret
pshufw
xchg
call
push
das
popa
movs
fild
mov
stc
aaa
dec
dec
jae
cmp
cmp
sub
pop
push
mov
lock
stos
fs
and
mov
or
shl
xor
xor
adc
retf
jb
dec
jns
adc
push
xchg
mov
js
pop
push
fwait
cmp
mov
and
mov
jns
inc
daa
inc
or
icebp
add
push
inc
fimul
rcl
(bad)
or
push
pop
xor
fistp
adc
add
pushf
lods
xor
icebp
ss
and
pop
sbb
sbb
fidivr
(bad)
push
cmc
inc
mov
xchg
push
and
in
dec
cmp
jl
punpckhwd
push
push
sbb
jg
call
push
add
push
dec
jmp
and
pop
fild
pop
push
fisttp
stos
neg
mov
pusha
mov
sub
leave
test
push
or
(bad)
or
adc
ret
cli
pop
imul
mov
imul
stos
(bad)
imul
inc
cwde
sub
scas
xchg
rcr
jbe
cmps
add
gs
mov
push
inc
stc
mov
xor
fild
or
(bad)
loopne
sbb
mov
loop
rcl
add
mov
mov
push
mov
inc
dec
je
jae
test
xor
xor
push
cmp
sti
or
mov
add
test
xor
out
inc
push
jne
jg
add
push
out
les
fmul
mov
cdq
pop
or
test
jmp
pushf
stos
push
cdq
stc
jmp
or
in
data16
loopne
scas
push
jne
mov
in
cld
mov
add
xor
rcr
push
aam
add
in
fdivr
xchg
inc
mov
out
loop
push
push
es
dec
fs
and
das
mov
out
retf
inc
ror
pop
std
jbe
(bad)
sti
jno
les
lods
loopne
pop
mov
ficom
push
(bad)
fcmovnbe
adc
dec
pop
cmp
aam
loopne
popf
inc
add
inc
mov
pushf
stc
inc
mov
add
pop
mov
xchg
(bad)
cmps
loopne
popf
or
or
mov
mov
lods
fldcw
jmp
enter
jmp
push
mov
test
push
out
sbb
in
rol
sub
and
daa
ins
mov
daa
(bad)
ret
dec
lods
rcl
std
adc
pop
jp
fbld
aaa
xchg
movs
jns
pop
imul
dec
nop
and
movs
push
xchg
sbb
mov
outs
mov
or
imul
stc
pop
pop
fsubr
imul
and
lods
pusha
inc
add
mov
mov
in
sub
adc
adc
adc
adc
sbb
paddsw
xchg
stos
xor
mov
movs
cdq
mov
adc
mov
cli
shl
lods
fdiv
or
jle
ficom
pop
out
and
test
punpckhbw
xchg
outs
dec
push
dec
es
pop
data16
outs
push
scas
xchg
shr
cs
fs
bound
inc
(bad)
jle
and
stos
dec
shl
sub
jne
sub
pusha
(bad)
cmp
adc
push
int3
xchg
fs
mov
fcmovu
mov
fs
push
sub
repnz
fst
aaa
out
add
mov
inc
lahf
outs
dec
dec
cmc
in
sbb
inc
sbb
(bad)
sahf
jle
dec
mov
lods
outs
mov
pusha
ss
jns
mov
jmp
aaa
shl
sbb
or
push
sub
mov
xchg
fistp
lock
ss
pop
or
das
aaa
mov
mov
cs
arpl
xor
movs
add
inc
ins
jmp
pop
add
pushf
dec
test
mov
mov
jge
or
frstor
pop
and
gs
iret
movs
in
lock
int
sbb
mov
cmps
xor
cmp
jecxz
inc
outs
dec
into
popa
mov
mov
push
and
and
or
jge
shl
div
in
(bad)
ins
push
xor
out
and
mov
xchg
mov
add
inc
enter
arpl
cwde
lds
xchg
mov
push
shl
jmp
int
mov
jmp
pop
dec
aas
iret
jb
imul
ret
ja
xor
mov
add
es
pop
dec
push
outs
push
(bad)
push
mov
sub
js
sbb
dec
int
mov
stos
or
scas
loopne
jns
sub
into
inc
cdq
bound
push
lods
std
adc
lods
and
jb
idiv
cmp
in
loope
pop
push
mov
sbb
retf
push
inc
mov
cwde
stos
loopne
xchg
scas
push
shld
mov
push
test
pop
fadd
jnp
sbb
inc
ds
mov
adc
mov
cdq
pop
jmp
js
loopne
dec
push
in
add
rcl
data16
lods
jl
cwde
hlt
ins
jg
and
cs
adc
retf
mov
les
push
pop
pop
cmp
es
(bad)
cdq
mov
adc
data16
jg
dec
jl
pop
jnp
pop
fnstsw
ror
and
(bad)
mov
and
push
cmp
add
pop
pushf
and
mov
fimul
and
jg
inc
scas
mov
ffree
push
fimul
je
mov
push
nop
aam
dec
push
(bad)
jne
jecxz
pop
mov
add
jns
push
in
sub
xchg
sub
(bad)
or
in
jmp
out
lock
js
jb
inc
push
test
loopne
dec
inc
sub
pop
sbb
or
push
cmp
iret
push
shr
scas
jnp
rol
xchg
cmc
repz
or
pop
cmps
gs
pushf
pop
(bad)
xor
sbb
push
leave
cmp
lods
xchg
cld
outs
cld
shr
mov
mov
pop
jle
push
push
into
fcom
and
push
ret
dec
fistp
cmp
das
jecxz
gs
mov
loope
cmp
mov
sahf
xor
in
xchg
xor
ret
out
mov
and
stos
loope
repnz
fadd
aad
xor
add
loopne
and
add
dec
xchg
adc
cmp
dec
add
shl
or
lahf
mov
push
fwait
or
aam
mov
aas
mov
lods
dec
cmc
cmp
test
cmp
add
mov
je
xlat
pusha
sub
leave
dec
fsub
add
ins
xchg
xchg
cmp
ja
jp
movs
jo
movs
sub
jecxz
add
dec
out
scas
mov
rol
and
das
les
mov
lock
pop
cmps
mov
mov
xchg
call
int3
jl
xchg
nop
xor
in
push
loope
jae
outs
mov
adc
fimul
sbb
dec
pop
test
mov
sbb
adc
outs
or
add
lds
in
jp
mov
mov
mov
out
pop
mov
div
jae
stc
or
test
push
je
popf
scas
push
sub
jno
popf
aad
pop
mov
mov
dec
xchg
mov
pushf
lods
sub
fisttp
les
iret
xchg
xor
push
sbb
fs
stc
pop
dec
in
push
inc
adc
pop
mov
jno
sbb
push
jmp
or
sbb
fwait
push
loopne
mov
leave
cdq
jae
mov
jno
and
push
pop
int
loop
jl
mov
call
imul
jmp
outs
add
lea
jnp
(bad)
in
mov
movs
inc
fsubp
xchg
jnp
cdq
in
imul
mov
mov
push
sub
out
loope
mov
ret
or
pop
mov
adc
inc
dec
pop
(bad)
add
dec
cmps
movs
movs
mov
push
inc
pop
adc
xor
ss
cli
icebp
push
scas
fmul
mov
ins
in
mov
out
mov
adc
call
mov
outs
imul
pop
mov
bound
pop
aaa
mov
cmp
scas
mov
data16
push
sbb
or
and
icebp
pop
inc
movs
(bad)
xchg
jg
jnp
fstp
inc
mov
add
push
pop
loop
pop
mov
push
add
push
popf
(bad)
lods
and
push
in
sub
rcl
mov
inc
cmp
aas
xor
mov
jb
push
mov
jmp
jns
mov
jmp
jae
arpl
inc
mov
inc
ins
and
outs
clc
jmp
pop
rcl
shr
ret
fsub
mov
hlt
or
dec
cld
cmp
sti
xchg
cwde
mov
(bad)
neg
pop
adc
rcl
ret
or
rsqrtps
loop
ja
or
shr
(bad)
popa
mov
xchg
jbe
out
sahf
jle
adc
aas
in
stc
xor
int3
enter
popa
repz
or
cwde
imul
(bad)
or
fs
sbb
(bad)
mov
cmp
addr16
push
or
dec
ds
retf
ins
cmp
test
cmp
mov
in
pop
sub
sbb
push
rcr
sbb
iret
inc
push
add
mov
push
pop
leave
jae
cmps
dec
sbb
ss
mov
mov
stc
jecxz
lahf
and
ret
add
jno
xor
xchg
pushf
imul
and
ins
adc
xor
sar
(bad)
push
es
adc
in
sbb
daa
fld
inc
adc
dec
push
(bad)
push
sub
(bad)
jo
cli
inc
data16
sub
push
(bad)
dec
lock
xchg
sub
jno
jnp
(bad)
(bad)
pusha
sub
mov
and
inc
scas
inc
mov
adc
(bad)
popa
mov
test
repnz
aam
and
in
pusha
je
fcom
cli
adc
add
or
cmc
mov
clc
mov
int3
and
lock
sub
test
push
jbe
cdq
movzx
and
xchg
in
push
inc
data16
sub
scas
jecxz
sub
popa
rol
mov
loope
inc
out
cmp
dec
fcom
mov
push
add
loopne
shl
sub
jne
fist
aas
iret
cmp
add
mov
inc
adc
lfs
sub
test
xchg
pop
cs
movs
mov
pusha
push
adc
and
xor
cmp
pop
jle
mov
mov
loopne
loope
cmc
call
sbb
js
sti
loop
and
mov
pop
inc
jmp
gs
(bad)
lds
loop
mov
scas
cmc
xchg
push
fbstp
mov
inc
shl
movs
fidiv
imul
sub
jo
mov
outs
mov
mov
add
test
mov
and
sbb
int
jl
enter
xor
(bad)
mov
rcl
aam
xor
shl
xor
inc
and
push
xchg
fldenv
and
retf
dec
in
and
les
sub
xor
mov
or
pop
iret
and
sub
loop
jb
imul
lahf
mov
add
xchg
pmaxub
rcl
inc
or
mov
jb
inc
aaa
jge
sbb
xchg
mov
gs
jae
adc
outs
mov
jnp
xchg
mov
dec
mov
popf
adc
loopne
je
dec
inc
jns
add
xor
and
retf
shl
pop
ret
inc
gs
call
shr
xor
in
add
out
dec
jecxz
(bad)
cld
cmp
nop
cmp
dec
imul
sbb
mov
test
stos
cli
(bad)
test
lock
fst
pop
sbb
inc
jno
ds
popf
imul
retf
mov
push
xchg
(bad)
enter
pop
loopne
jp
pop
fwait
or
je
xchg
loope
jnp
fwait
in
dec
xor
sahf
mov
mov
push
dec
push
pmaxub
rol
inc
add
mov
push
push
or
pop
loope
jno
jg
pop
cmp
mov
pop
cmp
(bad)
jbe
imul
(bad)
pop
cmp
in
push
mov
(bad)
les
inc
loopne
ja
stos
pushf
jb
retf
out
pop
loop
xchg
jae
js
icebp
test
out
int3
adc
jmp
(bad)
jg
fcmovnbe
or
cld
dec
int3
fadd
sbb
loop
sbb
mov
ret
pop
and
mov
push
cmp
xor
push
push
xor
in
cmp
ins
js
(bad)
push
xchg
dec
movs
lock
imul
xchg
mov
(bad)
mov
adc
mov
dec
cli
jl
push
xor
movs
push
(bad)
jbe
stc
jmp
inc
rcl
xchg
fucomi
das
jl
add
outs
daa
push
jmp
dec
arpl
(bad)
in
loop
ins
in
popf
mov
push
cs
(bad)
fcom
mov
repnz
repz
mov
mov
and
and
sar
or
shl
push
xchg
popa
sub
repz
gs
arpl
and
(bad)
in
pop
out
sar
dec
pop
lock
das
(bad)
push
xchg
test
pop
lds
fisubr
hlt
jecxz
(bad)
cli
mov
sar
into
ins
sbb
retf
xor
mov
mov
adc
mov
inc
mov
into
(bad)
repnz
push
push
int3
sbb
and
cdq
pop
mov
jp
push
int3
ja
aas
inc
and
fs
lods
xchg
bound
jmp
adc
fld
arpl
cmp
and
or
ss
mov
fldenv
les
or
mov
aas
adc
sub
ss
inc
lods
xor
dec
ins
jge
xchg
stos
(bad)
xchg
movs
sahf
xchg
pop
cli
add
adc
cld
arpl
jmp
xchg
cmp
fidivr
int
es
jle
dec
imul
and
cmc
popa
cmps
xchg
rcr
fnstcw
jge
in
xor
cmp
or
and
rcr
and
cmp
lods
xor
lods
push
call
or
les
xchg
ja
cmps
iret
stc
loopne
push
dec
xor
xor
push
or
ret
aad
add
imul
in
mov
inc
cmp
(bad)
clc
iret
movs
popf
dec
std
outs
adc
mov
repz
stos
cmp
sub
leave
xor
les
stos
adc
gs
lods
enter
mov
ret
(bad)
clc
xor
and
xor
lea
dec
rcr
inc
xchg
sti
sub
inc
sbb
xchg
jmp
aas
push
lock
cli
mov
add
xchg
pop
sbb
fild
cmps
push
or
idiv
mov
mov
push
adc
or
shl
and
loope
inc
push
jmp
nop
pop
sahf
mov
ror
inc
push
inc
popf
adc
inc
fisttp
int
sbb
pop
int3
test
gs
pusha
and
cmp
in
inc
stos
inc
xor
add
mov
jmp
and
sub
out
jge
lea
add
inc
(bad)
sub
mov
imul
sub
jle
lods
adc
inc
jle
or
mov
imul
or
scas
mov
lahf
inc
ds
rol
cld
fs
mov
into
mov
lds
push
out
xchg
mov
mov
and
jb
adc
push
ret
mov
cmp
(bad)
jp
xchg
or
bound
neg
xor
jbe
jb
mov
das
stc
xchg
test
jno
std
push
lahf
pop
loopne
push
mov
mov
(bad)
sbb
dec
ds
dec
lahf
mov
inc
in
and
mov
stc
jo
das
jno
or
jmp
out
mov
or
mov
push
push
fdiv
retf
pop
fcomp
push
in
ins
cmp
addr16
sbb
jle
imul
lahf
xor
out
cwde
inc
scas
pop
cmp
dec
add
pop
cmc
adc
pop
mov
cld
cmp
aad
retf
out
stos
sub
ins
fcmove
mov
cld
mov
pop
mov
jp
hlt
push
enter
jnp
stos
jne
out
aas
inc
sti
mov
pusha
lods
cmps
mov
(bad)
int3
fmul
ret
imul
mov
ss
mov
loope
push
sti
sbb
les
mov
sub
ret
cmp
ins
jne
arpl
xchg
cs
mov
mov
fcmovne
and
aad
mov
push
ret
mov
in
sbb
aas
dec
mov
adc
mov
pop
or
push
repz
cmp
lea
jne
pop
fcmovnu
mov
lock
adc
int
call
out
add
add
add
jle
pop
mov
push
xchg
jmp
jb
inc
dec
test
or
in
loop
movs
pushf
out
mov
sbb
enter
cmp
or
test
(bad)
out
adc
cli
sbb
jae
add
mov
mov
test
push
jne
adc
mov
pop
stos
cmp
cmp
pop
mov
sti
pop
pop
or
in
or
or
leave
xchg
dec
ins
push
cmp
xchg
fwait
sbb
fbstp
sbb
pop
cmp
into
sub
imul
xor
test
xchg
mov
jl
loope
adc
shl
(bad)
ins
cdq
(bad)
test
outs
or
pop
xchg
mov
lds
std
sub
in
inc
(bad)
hlt
dec
lds
mov
jne
adc
ror
outs
ret
aam
sti
cmp
mov
rcl
test
dec
ret
pop
sbb
sub
mov
cmp
or
pop
js
pusha
mov
dec
nop
mov
not
(bad)
sub
cmp
stos
je
adc
fsub
rol
xchg
call
pop
mov
pop
pop
fadd
out
sti
out
sub
shl
lods
push
xor
into
frstor
jge
adc
mov
scas
jo
aam
jp
mov
loope
frstor
cmp
call
vpshuflw
fwait
out
stos
enter
stc
add
out
mov
(bad)
mov
(bad)
pop
gs
aaa
ins
inc
movs
out
mov
lock
cmp
jecxz
icebp
bound
dec
(bad)
fdiv
repnz
(bad)
mov
pop
sahf
lods
cwde
mov
lea
xchg
mov
dec
add
mov
cmp
dec
or
loopne
xchg
dec
mov
test
ficomp
mov
movs
push
movs
adc
or
call
sahf
jo
retf
jnp
jno
js
mov
lds
or
xchg
sbb
push
out
out
pop
cmc
push
test
imul
xor
js
cmps
mov
jno
push
fnstcw
mov
xchg
test
sti
inc
add
sub
mov
sbb
sbb
pop
ja
mov
outs
xchg
out
shl
push
mov
cmp
(bad)
cdq
ror
shl
pop
jg
test
adc
out
jl
push
pop
pop
push
xchg
adc
icebp
push
mov
rol
sbb
fwait
popf
jns
mov
jo
cmp
cmps
sbb
addr16
jl
inc
adc
in
push
xlat
or
fld
mov
fsub
fucomp
in
mov
push
hlt
dec
sbb
les
dec
aam
jns
(bad)
fdiv
ficom
lods
dec
mov
add
sti
xor
pop
sar
sbb
iret
sbb
test
adc
sbb
iret
jl
fldcw
inc
pop
(bad)
xor
mov
popf
retf
cmps
xor
std
div
dec
mov
sbb
loopne
or
or
inc
mov
mov
mov
xchg
jmp
xor
leave
xor
or
sub
lock
out
mov
popa
xchg
pop
(bad)
adc
mov
or
add
and
sub
sbb
pop
ror
add
jb
xchg
mov
movs
lods
mov
ins
xchg
xchg
loope
push
repnz
test
out
lods
xor
fimul
sub
or
jb
popf
push
stc
movs
out
mov
fs
cmp
ss
adc
jge
or
nop
mov
xor
push
mov
shr
das
xchg
in
ror
adc
pop
mov
fisubr
xor
adc
rcr
repnz
push
cdq
nop
icebp
retf
mov
xchg
mov
mov
lds
jno
aam
movs
clc
or
test
sub
shl
add
js
cwde
int3
jo
push
sub
pop
sub
nop
lahf
xor
test
xor
push
dec
push
jns
inc
jns
ins
jmp
add
mov
xchg
and
inc
in
je
add
movs
std
rcr
icebp
ja
scas
ret
fist
ja
aaa
xchg
sbb
xchg
sahf
sub
xchg
inc
push
adc
cmp
mov
bound
add
mov
or
cmc
pop
cwde
push
pop
sbb
bound
movs
mov
ss
mov
xchg
pop
fnstsw
push
je
xor
in
xor
push
push
pop
movs
sub
dec
lods
mov
call
vpsubsw
inc
pushf
in
adc
in
les
push
aam
ret
add
fdiv
rcl
imul
int3
pop
mov
jp
cmps
dec
sub
gs
cmp
(bad)
push
(bad)
sbb
ss
mov
mov
mov
adc
loopne
imul
bound
mov
adc
div
ds
mov
push
inc
add
enter
movs
int3
jo
out
push
mov
dec
mov
das
lods
icebp
dec
pop
pop
xchg
mov
je
inc
push
shr
or
fist
cmc
out
idiv
loopne
push
pop
ror
lahf
mov
ror
mov
jge
xchg
lahf
das
push
xchg
retf
dec
cmps
cmp
jbe
dec
ret
pop
test
or
fld
push
stos
xchg
idiv
pop
in
lock
test
shl
mov
in
shr
test
aas
dec
(bad)
pop
(bad)
pusha
push
dec
lock
pusha
imul
xchg
mov
sbb
int3
icebp
sbb
jo
inc
pop
lods
out
cld
rol
out
ror
fidiv
mov
xor
adc
test
out
or
into
adc
dec
loop
aaa
sub
gs
push
xchg
or
lods
and
or
int3
fsub
add
scas
jbe
pop
js
sahf
adc
test
cld
cmp
xchg
rcr
ja
mov
jl
jne
mov
pop
shl
or
(bad)
out
in
(bad)
outs
fisubr
cdq
inc
mov
dec
or
rol
xor
pop
bound
sub
scas
sub
into
xor
push
out
movs
mov
pop
push
adc
jmp
je
mov
inc
cmps
test
lods
jns
(bad)
jmp
xchg
add
jns
pop
inc
sahf
adc
test
hlt
jl
and
sub
movs
iret
sbb
fld
popa
xor
dec
iret
add
cmp
js
push
clc
pop
es
or
retf
ja
inc
or
shl
scas
mov
dec
adc
xor
sub
out
ins
retf
out
push
sbb
adc
(bad)
movs
pop
lock
inc
fdecstp
in
sbb
inc
pop
(bad)
lea
sub
fs
and
popa
mov
add
movs
in
and
dec
aad
stos
jmp
fcom
sub
mov
ins
sar
cwde
outs
fwait
rcl
ror
test
mov
daa
hlt
inc
out
cmp
int
mov
sbb
xchg
or
lods
loop
(bad)
pop
pop
ficom
outs
mov
cmps
and
mov
jns
(bad)
pop
sub
mov
rol
xchg
in
adc
stos
adc
adc
and
pop
clc
add
enter
pop
clc
shl
and
mov
sbb
mov
add
adc
sub
push
add
mov
repz
mov
sbb
dec
cmps
(bad)
call
cmp
mov
xchg
imul
add
inc
add
(bad)
fdivr
push
fwait
jecxz
xor
inc
clc
iret
call
rcr
dec
inc
xchg
xor
test
pop
cmc
adc
dec
movs
sub
dec
sub
retf
xchg
movs
add
push
(bad)
movs
push
retf
loope
ds
jp
rcr
mov
sub
xor
dec
aad
sbb
mov
mov
or
call
dec
sti
jb
retf
arpl
(bad)
jb
retf
push
or
imul
fsub
bound
pop
mov
aaa
xchg
push
mov
dec
in
and
sub
icebp
push
stos
pop
add
cmp
dec
stc
jle
xchg
or
stc
or
scas
cs
jbe
xor
jb
std
js
scas
cmp
cvtps2pd
imul
dec
mov
add
xchg
adc
rol
(bad)
cld
inc
and
push
sub
xlat
xor
mov
lahf
(bad)
push
stc
out
dec
add
mov
adc
daa
xor
mov
mov
pop
shl
and
(bad)
dec
test
mov
aaa
push
sub
call
jp
arpl
xacquire
push
pop
cmps
and
call
jb
shl
pop
(bad)
xlat
cmp
js
mov
jmp
es
jp
mov
or
adc
(bad)
ins
scas
int
int3
ret
push
test
cmp
dec
clc
rol
sbb
and
jle
jne
stc
ss
movs
hlt
xor
into
lock
sbb
sbb
inc
sbb
mov
sub
xchg
(bad)
sar
cdq
or
push
div
out
fidiv
jno
lds
mov
push
dec
inc
shr
ror
push
and
sub
clc
(bad)
mov
(bad)
leave
adc
fldenv
cmp
(bad)
push
add
mov
pop
fsub
push
inc
dec
ins
inc
xor
call
icebp
arpl
dec
shr
add
add
add
push
jge
mov
jecxz
cmp
retf
pop
mov
addr16
cmp
ins
leave
xor
and
xchg
es
pop
loope
movs
mov
mov
jecxz
push
sub
pop
addr16
lods
mov
sub
xor
ins
mov
movs
jecxz
fiadd
mov
sbb
(bad)
push
leave
(bad)
cwde
cmp
add
adc
inc
clc
jnp
xchg
xor
jne
add
xor
sti
(bad)
and
add
xlat
jge
adc
xchg
mov
push
dec
rcr
sub
pop
shl
jmp
inc
dec
mov
xchg
push
cwde
fnstcw
scas
rcl
dec
cmp
mov
add
not
ror
call
call
enter
xor
or
stc
sub
sub
pop
ret
mov
pop
ficomp
sub
sbb
fs
pop
aas
cmovp
outs
paddq
push
(bad)
repnz
retf
pop
int
mov
prefetchw
and
pushf
cdq
adc
scas
cmp
loope
test
cmc
in
int3
fs
add
dec
and
retw
mov
inc
aaa
sti
mov
mov
aaa
test
sub
gs
fwait
sub
addr16
jp
leave
or
cmp
and
out
mov
cmps
scas
push
rol
pushf
push
lock
in
dec
dec
gs
cmp
movs
adc
push
(bad)
aam
or
or
fild
add
sbb
(bad)
dec
push
pop
sbb
dec
jecxz
dec
inc
ret
sub
ret
lea
sub
retf
into
pop
dec
(bad)
iret
pusha
push
mov
xor
test
aas
xchg
dec
mov
cmp
dec
cmp
mov
jae
push
stc
xchg
push
arpl
test
clc
push
imul
xor
dec
call
xchg
jno
xor
push
into
scas
sub
fdiv
iret
cmp
push
sar
aas
or
scas
push
aam
mov
xchg
dec
add
inc
lahf
bnd
(bad)
xchg
ins
outs
push
sar
and
dec
dec
push
int3
add
mov
into
mov
lea
inc
jnp
sub
push
xlat
xchg
scas
les
out
push
sahf
mov
cdq
out
mov
outs
aaa
test
xchg
adc
pusha
aas
adc
pop
lahf
inc
fcomp
adc
push
cmp
inc
dec
xor
jmp
in
mov
in
pop
jnp
test
dec
sbb
adc
retf
mov
inc
xor
inc
jbe
shld
aaa
xor
mov
sub
pop
xchg
popa
jmp
inc
inc
push
ins
(bad)
das
es
daa
dec
dec
jecxz
push
pop
std
mov
cmp
call
cdq
pusha
outs
cli
bound
adc
rcr
idiv
dec
test
daa
pop
shr
xor
fs
or
fsubr
sbb
cmc
fucomp
lods
jmp
mov
movs
int
mov
fmul
test
push
sub
pop
das
push
repz
lock
sub
(bad)
mov
std
(bad)
icebp
fs
jb
test
pop
pusha
(bad)
imul
push
retf
(bad)
mov
xor
xor
pop
cmc
loop
int
movs
jne
jg
arpl
push
ficom
pop
(bad)
jo
add
sbb
push
outs
xor
jbe
imul
jg
pop
repz
mov
out
ins
test
sub
stos
test
sbb
int3
mov
jno
jecxz
add
sub
int
mov
loopne
pop
or
lds
js
mov
pop
push
xor
xchg
cmp
xchg
xchg
fisub
add
push
retf
xchg
sbb
cmp
gs
xchg
outs
inc
loope
cmps
test
ret
loopne
in
lods
stos
retf
mov
jle
or
cli
mov
shr
jg
mov
add
ins
jae
test
cmp
aas
je
mov
mov
and
sbb
jg
mov
push
imul
movs
pop
ret
cmp
fs
add
or
mov
ins
adc
add
enter
movs
mov
mov
popa
and
cmp
cmp
cmp
gs
les
fsubr
rol
out
add
arpl
cmp
jge
adc
or
or
jmp
pop
sbb
test
mov
adc
gs
(bad)
xlat
das
std
(bad)
daa
stos
in
jl
fcmove
das
sub
xchg
(bad)
rcr
inc
xor
push
xlat
push
ins
and
sbb
and
cwde
frstor
js
add
push
push
iret
cdq
xlat
mov
sysret
(bad)
mov
fidiv
outs
adc
loopne
mov
jne
int
inc
lods
add
icebp
mov
sub
xor
mov
das
aaa
jo
(bad)
imul
into
frstor
inc
mov
movs
out
pop
or
imul
add
jo
add
sub
pop
fwait
add
or
mov
jle
and
or
lahf
jecxz
pop
outs
sub
sub
test
push
push
mov
enter
cmp
xor
adc
xchg
adc
push
aam
fiadd
inc
pop
xor
xchg
cmps
xchg
in
sar
jl
and
sbb
in
pop
imul
adc
jecxz
daa
(bad)
mov
das
push
js
fiadd
mov
(bad)
ins
sub
pop
aad
fimul
or
(bad)
stc
fcmovbe
aaa
stc
fbstp
add
rcl
push
inc
lds
xchg
aas
repz
fsub
ja
jecxz
daa
sbb
sbb
movs
scas
loop
mov
in
or
fist
add
fsubr
mov
pop
(bad)
out
sub
in
pop
dec
pushf
je
shl
xchg
ret
xchg
and
aam
test
cmp
sbb
jp
pop
rol
mov
mov
adc
mov
mov
pushf
pop
and
cmp
push
jae
cmps
std
adc
jge
test
xor
pop
les
test
aas
sahf
je
test
shl
jae
inc
movs
mov
fs
add
dec
inc
fcomp
popa
dec
add
and
pop
mov
sar
sub
inc
daa
data16
add
ret
sar
cmps
sbb
and
daa
popa
fwait
xor
popf
test
pop
pop
pop
sub
push
sub
repnz
mov
nop
adc
push
call
repnz
mov
xor
inc
xor
shr
mov
cmp
mov
stos
out
jmp
push
adc
test
push
jb
stos
inc
pop
cmp
push
push
jo
ror
inc
sub
pop
inc
pop
push
es
pop
(bad)
std
push
or
dec
mov
out
shl
pop
dec
imul
push
mov
daa
loopne
lods
nop
push
xor
mov
shl
in
into
icebp
ret
hlt
add
sub
fucom
mov
jg
mov
or
daa
adc
cmp
outs
pop
mov
xor
enter
add
adc
lods
dec
and
fnstenv
add
xchg
sbb
mov
test
jne
xor
dec
adc
dec
lea
inc
(bad)
xchg
or
adc
loope
mov
dec
pop
aas
(bad)
repz
arpl
dec
(bad)
hlt
xchg
lock
movs
sub
pop
ds
sub
out
call
push
xchg
int
int
imul
pop
dec
cs
pop
add
jno
push
and
in
movs
shr
hlt
sbb
add
cmp
cwde
cmp
(bad)
mov
cmp
psllw
and
into
inc
xor
or
jecxz
add
scas
adc
push
test
mov
jae
ds
into
sahf
xor
inc
leave
ins
inc
cmp
pop
loope
jmp
adc
push
jl
jmp
ror
pop
test
or
and
aas
mov
ss
dec
fisttp
mov
or
dec
adc
nop
fcomp
(bad)
xor
jns
int3
sub
dec
(bad)
jnp
xlat
mov
scas
sub
aad
add
loope
xor
inc
cmp
aad
lea
push
aas
sbb
gs
outs
(bad)
das
xchg
dec
lea
fwait
pushf
inc
daa
add
repnz
pop
(bad)
leave
sub
adc
sahf
enter
cli
jb
test
cmp
pop
leave
fs
jp
outs
mov
std
jge
jmp
xor
inc
mov
mov
(bad)
pusha
mov
scas
fsub
movs
enter
scas
out
add
stos
pusha
test
sbb
(bad)
jge
enter
sti
retf
lds
ins
pusha
sub
mov
retf
out
inc
xor
push
scas
stc
pop
out
rol
lods
jecxz
call
movs
adc
cli
jg
fstp
arpl
add
or
loope
in
mov
pop
xor
mov
aam
xor
adc
dec
mov
mov
mov
mov
mov
jg
das
jl
rcl
daa
mov
pop
(bad)
dec
arpl
xor
les
lods
inc
xchg
int3
dec
(bad)
imul
push
imul
jns
popf
fcmovbe
push
fnsave
jg
jbe
test
xchg
popf
clc
mov
sbb
ficomp
cmp
pop
(bad)
stos
outs
fstp
test
out
adc
sbb
imul
iret
pop
outs
int
shr
ret
lahf
hlt
add
adc
popf
sub
xchg
rcl
push
jge
or
es
push
sbb
xor
inc
ja
xchg
inc
or
int3
stos
lock
std
in
add
lods
or
pusha
stos
shl
loopne
pop
arpl
daa
or
or
mov
and
inc
dec
mov
push
push
test
mov
ret
jnp
pop
fmul
(bad)
mov
mov
and
cmp
fmul
shr
test
cmp
push
mov
xchg
xor
add
lea
ret
mov
xchg
sbb
pop
pop
inc
xchg
jmp
mov
cmp
movs
enter
hlt
inc
mov
std
gs
and
mov
jecxz
gs
inc
in
(bad)
loope
or
jne
imul
jno
sahf
fadd
std
daa
xchg
in
clc
test
inc
mov
sbb
fdivp
adc
loop
dec
mov
jnp
dec
rcl
in
mov
mov
frndint
lods
mov
les
sub
aad
mov
jns
xlat
aam
fwait
int3
adc
loope
stos
sbb
mov
xor
mov
adc
mov
out
repnz
in
in
or
lods
(bad)
stos
repz
cld
lock
pop
cwde
int
stc
jmp
imul
xchg
ror
push
dec
push
lds
fisttp
cld
jbe
ret
and
inc
sub
mov
test
pop
add
add
xor
sbb
sub
fstp
add
jbe
push
arpl
jbe
add
mov
cwde
mov
lods
dec
cs
sub
push
aas
scas
clc
out
mov
mov
cmp
dec
cli
test
pop
pop
iret
idiv
dec
pand
cs
mov
adc
sar
push
lea
push
outs
jne
and
pop
mov
xor
mov
scas
shl
xor
in
lods
jne
sahf
(bad)
mov
cmp
(bad)
scas
and
shl
sub
inc
xchg
cmp
enter
push
add
in
call
ins
inc
inc
sub
lds
dec
les
xor
inc
int3
mov
add
dec
and
mov
cmp
inc
push
xor
das
xchg
add
jl
cmp
movs
xor
sub
scas
dec
inc
dec
xchg
lods
add
fisttp
iret
bound
mov
mov
mov
daa
add
popf
sub
daa
cmp
sub
adc
adc
push
lea
lea
mov
or
cmc
xor
push
daa
outs
fisub
or
adc
cwde
scas
dec
mov
retf
or
xor
mov
shl
sub
mov
and
outs
xlat
inc
jmp
aad
and
jl
ret
inc
sbb
outs
lods
pushf
pop
ror
retf
jae
in
into
in
mov
loopne
fist
pop
push
scas
test
ss
xchg
fucom
stc
cdq
loop
hlt
inc
mov
cmp
mov
imul
jecxz
into
jb
inc
jle
inc
imul
gs
xchg
push
cs
add
arpl
outs
xchg
add
enter
adc
push
sub
popa
inc
sbb
cs
dec
aad
sar
dec
or
push
pusha
mov
repnz
movs
popf
jge
in
adc
xchg
clc
test
retf
aad
dec
aas
movs
mov
sbb
or
jb
imul
addr16
add
xor
repnz
into
push
xchg
ins
jb
dec
pop
lods
and
jmp
jno
(bad)
push
mov
cdq
test
std
inc
test
fdivr
push
sbb
xchg
call
adc
(bad)
push
pop
ja
das
or
ins
inc
mov
ret
sti
in
rol
mov
fsub
jmp
mov
mov
shl
push
dec
xor
ds
mov
movs
ret
inc
mov
test
jle
sub
pop
xor
adc
out
sub
hlt
adc
dec
into
lods
repz
cmp
fcomp
xlat
ja
mov
xchg
inc
bound
loop
mov
pop
push
mov
iret
(bad)
add
pop
add
xchg
jns
add
adc
fistp
ror
dec
mov
hlt
(bad)
mov
cs
push
lods
jecxz
xchg
sub
inc
dec
lods
sub
mov
test
mov
arpl
sub
ds
clc
sbb
xor
xor
in
cmp
enter
mov
not
xor
bound
dec
fs
sub
sbb
and
ja
xor
add
mov
int3
pop
int3
xlat
jg
cmps
scas
jb
adc
cmps
mov
and
or
lds
(bad)
clc
and
out
add
xchg
cld
adc
adc
add
mov
clc
xchg
and
or
mov
jns
lods
mul
cmp
icebp
cmp
cmc
mov
cmp
add
cmps
dec
es
ret
arpl
call
repz
sub
and
cmp
inc
mov
div
fs
pop
(bad)
jmp
xchg
test
jmp
jns
mov
add
adc
push
mul
lock
shl
xchg
jg
mov
sbb
inc
pusha
sbb
jg
leave
xor
mov
icebp
popa
push
dec
into
mov
push
pop
loopne
pop
mov
bound
jg
xchg
ficom
data16
movs
leave
xchg
pop
mov
xor
mov
aad
pop
jbe
xchg
rol
fist
jmp
adc
out
fstp
or
jne
ins
in
sbb
loope
movs
xor
and
jmp
push
js
jmp
or
cmp
fnstcw
scas
fdivr
outs
jbe
adc
and
nop
(bad)
cwde
sbb
or
int3
xlat
popa
(bad)
mov
(bad)
(bad)
out
sar
repnz
jnp
lods
push
jne
pop
xlat
cmp
push
or
arpl
mov
in
aam
loope
in
mov
jne
mov
cwde
(bad)
sub
xchg
iret
add
ins
push
pop
out
retf
jg
adc
dec
repnz
das
ins
jl
mov
xchg
inc
outs
stc
cmps
mov
mov
repz
pop
lock
(bad)
jl
(bad)
jns
(bad)
rcl
jp
inc
jmp
pop
rep
out
pusha
mov
movs
ds
push
and
loop
fcmovnu
jle
sar
or
dec
mov
cmp
adc
adc
arpl
jae
xchg
jne
test
aam
call
int
test
pop
jmp
cmps
in
je
xchg
dec
mov
hlt
push
mov
inc
pop
pop
call
mov
ds
repz
lods
mov
out
nop
sub
fidiv
push
xchg
adc
cs
adc
je
add
jg
test
cdq
call
adc
arpl
dec
cdq
dec
das
pop
rcl
mov
xchg
icebp
mov
fstp
sub
repz
cdq
mov
push
arpl
adc
cld
stos
pop
add
sbb
inc
jne
loope
pushf
std
dec
or
scas
add
scas
lods
mov
arpl
jmp
stos
and
dec
pop
rcl
or
adc
popf
cmps
mov
push
adc
call
sub
add
sti
cmp
sub
and
test
retf
cmps
xchg
sub
imul
je
adc
dec
mov
shl
cdq
pop
(bad)
loope
sub
enter
mov
mov
sahf
test
push
cmp
scas
(bad)
cld
sar
enter
and
cmps
imul
add
sar
adc
add
sub
inc
ret
push
aad
outs
aaa
(bad)
cmp
xor
jl
dec
jae
stos
sti
add
cmp
(bad)
test
dec
ret
or
in
les
cmp
retf
dec
and
push
pop
arpl
je
pop
test
retf
or
xchg
sub
pop
cmps
lahf
js
ret
and
sbb
retf
push
arpl
and
sbb
(bad)
cmp
bound
sti
fldcw
(bad)
mov
sbb
add
and
mov
xchg
dec
fmul
in
repnz
or
cdq
repz
call
mov
or
lods
sbb
ins
add
cmp
jecxz
push
nop
dec
xchg
out
mov
js
push
push
mov
jmp
fbstp
dec
sar
test
push
(bad)
les
into
pop
retf
jo
pusha
xor
mov
add
inc
(bad)
in
xchg
or
fist
jo
jge
push
data16
mov
shl
dec
jecxz
ja
movs
fld
add
gs
ds
cmp
js
cmp
add
inc
mov
adc
xor
xor
hlt
xchg
mov
shr
cmp
dec
xlat
or
into
aaa
dec
xchg
inc
fldenv
pop
push
loopne
pop
rcr
mov
aam
jl
popf
pop
xchg
adc
cld
std
daa
push
adc
adc
cmp
fsubr
push
sbb
push
ret
xor
or
pop
sar
out
and
adc
xor
pusha
cmp
test
pusha
sub
dec
jmp
shl
cmps
push
push
mov
jl
loope
movs
and
adc
sbb
out
xlat
aad
cwde
mov
add
mov
test
sti
sbb
scas
inc
dec
imul
mov
sbb
cmp
add
sub
or
mov
xor
imul
(bad)
pop
bound
mov
outs
or
outs
push
pop
adc
inc
mov
inc
cwde
nop
inc
jnp
mov
pop
bound
xor
mov
xor
cmp
xor
dec
pop
and
rcr
mov
cmc
outs
and
push
jne
mov
stos
and
les
inc
sub
loope
dec
fwait
push
mov
push
stos
pop
pop
sub
inc
leave
aam
and
cmc
or
lods
int3
shl
sbb
sar
adc
dec
and
and
nop
arpl
mov
add
aaa
pop
ret
loop
imul
dec
cld
pop
ret
mov
xchg
adc
sbb
lds
xor
(bad)
in
lds
lods
(bad)
fsubr
xchg
pop
leave
xor
in
cmps
inc
add
dec
lods
pop
xor
xor
mov
outs
aad
aam
repnz
cmp
xor
push
addr16
jnp
in
int3
pop
sbb
es
mov
icebp
icebp
ins
lock
adc
inc
int3
ds
jno
inc
jo
repz
(bad)
adc
xchg
rcr
inc
out
les
cmp
out
mov
jae
cmps
mov
inc
gs
xchg
and
push
adc
mov
jo
dec
sbb
dec
xor
(bad)
cmc
clc
lods
mov
movs
jb
jecxz
int
mov
adc
les
xor
push
ffree
mov
inc
das
or
dec
cmp
enter
push
div
adc
arpl
jmp
popf
iret
adc
shr
icebp
jns
addr16
pop
jb
jecxz
and
pop
and
(bad)
pop
lock
adc
stos
dec
mov
mov
add
fcomp
cmp
mov
mov
jb
add
mov
xchg
xchg
mov
pop
lods
movs
or
mov
mov
stos
or
test
xchg
jns
adc
fwait
ds
imul
mov
sbb
icebp
jno
ds
jmp
sub
jns
and
pusha
xor
sub
or
push
packuswb
sub
cmps
lea
jne
in
sbb
pop
repz
jg
pop
sub
xchg
xchg
add
pop
cld
mov
int
jecxz
in
cs
rol
aas
inc
fs
rcr
(bad)
js
sub
sti
dec
push
js
adc
mov
push
arpl
fisttp
mov
push
jecxz
adc
dec
dec
in
rcl
gs
cs
lea
icebp
cs
pusha
mov
ret
add
outs
aam
and
add
cs
aam
mov
inc
xchg
test
xchg
push
aam
xlat
mov
call
xlat
(bad)
jne
stc
fwait
cld
pop
sbb
pop
mov
jno
test
addr16
fs
jb
xor
std
outs
pop
fcmovb
and
xor
add
xchg
cmc
pushf
cld
mov
push
push
dec
mov
or
mov
mov
out
in
sub
sub
add
lods
and
pop
idiv
pusha
ror
retf
repnz
mov
push
xchg
adc
push
push
call
dec
in
fistp
pushf
push
jno
jmp
pop
inc
dec
ret
adc
pusha
xchg
and
aas
push
sub
hlt
jle
neg
call
xor
das
rcl
dec
imul
mov
push
bound
xacquire
pop
mov
mov
or
pop
stc
jb
adc
xor
adc
or
cmps
add
xchg
jecxz
or
xor
xor
popa
mov
bound
inc
mov
and
cmp
(bad)
push
pop
repz
in
test
xchg
fisttp
(bad)
pop
dec
stc
or
ret
mov
and
mov
pop
mov
sbb
pop
push
stc
addr16
pop
or
sbb
jecxz
loope
cmp
xor
movs
mov
cld
dec
lahf
mov
dec
dec
pop
test
cli
fist
or
sbb
and
jp
jo
xor
out
(bad)
and
stos
mov
ret
gs
mov
or
test
mov
mov
cwde
jne
push
or
inc
in
cmp
(bad)
inc
mov
and
jb
lea
outs
shl
adc
push
ret
sub
pop
pop
ds
inc
cmps
ret
enter
(bad)
iret
pop
cdq
sbb
fs
push
pop
shld
cmps
jmp
lods
aaa
retf
pusha
and
inc
or
js
call
adc
cwde
sti
test
fist
mov
jae
fdiv
ins
xor
xchg
ret
pop
mov
fimul
imul
mov
sub
fwait
shl
xlat
sub
movs
jne
add
ret
cmp
aas
scas
sbb
ud1
push
sbb
add
popf
test
lods
aaa
out
mov
push
add
popa
rcl
mov
xor
iret
jmp
push
adc
popa
jmp
mov
cwde
pop
mov
rcl
sbb
aaa
cmp
adc
call
pop
mov
xor
out
dec
lds
leave
xor
xchg
enter
adc
je
in
fidiv
(bad)
mov
das
cmp
mov
out
out
xchg
(bad)
imul
jg
mov
jnp
aam
call
std
lock
dec
xor
int
sub
pop
pop
pop
test
mov
daa
mov
mov
jnp
inc
icebp
sbb
(bad)
adc
inc
and
add
out
or
retf
inc
mov
mov
cs
rol
loop
push
imul
pusha
push
(bad)
mov
mov
xchg
sub
mov
popf
or
mov
ret
repnz
mov
push
scas
pop
dec
and
daa
popa
and
xlat
ss
(bad)
fmul
imul
pop
add
or
test
mov
push
xor
push
push
in
nop
fs
xor
fst
xchg
xchg
xor
push
enter
cmps
jle
ins
stos
ins
fisttp
pop
cmp
aas
xor
xchg
inc
inc
mov
adc
cmc
jo
sbb
fisub
fst
ret
jno
push
mov
das
addr16
mov
inc
and
push
nop
aas
or
fisttp
mov
inc
test
mov
dec
cmc
inc
dec
jo
int3
or
xchg
xor
mov
test
push
jmp
aad
cmp
sub
mov
sub
jae
xor
pop
rcl
xchg
ins
lods
dec
or
jmp
sbb
jg
adc
jne
inc
stos
and
out
enter
loopne
adc
stos
fld
add
addr16
pop
ret
and
push
and
pop
sahf
mov
and
sbb
outs
and
push
jg
inc
add
sub
nop
jl
xor
mov
pop
and
or
pop
jmp
mov
sbb
sub
sar
cmp
enter
mov
sbb
sbb
push
cs
inc
popf
int
aaa
push
shr
jmp
(bad)
pop
jns
mov
test
sbb
and
scas
mov
in
shl
repnz
loop
pop
add
shr
js
addr16
sub
jle
cmp
dec
lea
mov
push
dec
dec
mov
cdq
call
les
sub
ins
pop
cld
mov
or
test
fldcw
mov
pop
sbb
mov
popf
dec
outs
mov
pop
add
push
mov
add
jo
psrlq
or
test
mov
add
call
imul
cmp
add
loop
adc
add
mov
cmp
xchg
xchg
out
(bad)
ds
mov
jns
mov
cmc
adc
out
sbb
jp
dec
sbb
cmps
pushf
and
cdq
pusha
pushf
sbb
push
cmp
mov
cmc
(bad)
sbb
xor
cdq
gs
and
fdivr
fild
inc
adc
sbb
jmp
rol
ret
clc
aad
jb
adc
and
test
add
adc
ins
mov
cs
(bad)
pop
jno
xor
iret
xor
sbb
jl
push
mov
enter
cmp
sti
repz
loope
sbb
push
lock
call
fwait
xor
mov
mov
test
movs
movs
lahf
cmp
int3
aad
push
stc
aas
test
leave
mov
sbb
cmp
xchg
das
dec
push
fs
outs
call
retf
imul
sub
scas
push
or
rcl
mov
pop
out
lock
mov
js
pop
imul
add
mov
pop
repnz
adc
lods
nop
in
les
cdq
or
in
daa
add
pushf
sbb
xchg
cmc
clc
jae
not
jo
or
lods
and
clc
dec
push
stos
clc
fdivr
pop
dec
mov
sub
mov
std
das
or
mov
repnz
inc
pusha
adc
pusha
repnz
jg
jne
nop
repz
push
sub
test
sub
clc
aas
sub
lea
popf
ins
xor
lea
fst
stos
sub
cs
clc
das
data16
xchg
rcl
jl
push
adc
test
mov
xor
retf
mov
cmp
imul
mov
adc
test
jmp
enter
les
fdivr
mov
adc
xchg
mov
std
jp
ja
and
cmp
cmp
loope
in
daa
jo
jbe
movlps
es
movs
inc
mov
mov
dec
(bad)
mov
or
add
in
pop
push
inc
and
aaa
xchg
dec
dec
dec
xor
push
push
sbb
mov
jo
iret
push
mov
inc
mov
imul
mov
retf
xlat
dec
and
es
in
sbb
inc
mov
idiv
fisub
xchg
add
xor
cs
add
lods
lea
dec
jo
into
cli
add
popf
cmp
jmp
lds
mov
repnz
rol
pop
cmp
loop
pop
cmp
xor
fdiv
mov
cmp
je
out
mov
icebp
shl
cmc
popa
xor
fwait
lods
mov
aas
xlat
repnz
lea
mov
mov
mov
jmp
xor
push
(bad)
inc
call
test
dec
(bad)
mov
sbb
retf
in
sbb
jno
(bad)
lods
inc
loop
cmp
add
adc
ss
cmps
pop
dec
shl
das
fdiv
jo
imul
repz
sub
scas
scas
stos
adc
jne
or
fmul
sbb
mov
dec
loopne
loope
xchg
ret
cmp
ds
sbb
mov
inc
sbb
aas
scas
xor
xchg
inc
mov
mov
jnp
sbb
retf
test
fidiv
xchg
mov
sbb
pop
jg
int
out
inc
std
stc
test
gs
pop
cmp
mov
or
sub
out
jb
pop
daa
push
xchg
ret
jo
add
in
dec
lods
mov
dec
cmps
ja
out
sub
adc
rcl
or
push
(bad)
call
add
and
push
sub
push
and
(bad)
jae
xchg
cli
mov
sbb
mov
in
inc
xchg
inc
aas
popa
push
jl
hlt
cmp
cmp
rol
iret
xchg
std
scas
cmc
xlat
and
pop
add
out
mov
add
or
push
jmp
cmp
fisubr
mov
ins
daa
jmp
sbb
adc
data16
push
mov
mov
push
jp
pop
add
movs
aad
add
lds
out
or
and
out
movs
ins
push
mov
add
jmp
or
push
iret
das
mov
scas
add
push
clc
out
jmp
test
pushf
sub
jle
clc
sar
push
shl
lock
movaps
jecxz
sub
push
jl
pop
jne
ror
and
jno
loop
jp
mov
gs
add
mov
test
inc
cwde
and
leave
dec
mov
push
daa
jb
lods
adc
mov
and
sbb
dec
mov
call
div
bound
inc
mov
push
imul
inc
mov
inc
ret
retf
(bad)
in
adc
jns
les
popa
arpl
xor
arpl
inc
add
fs
jg
mov
ja
xchg
repnz
pop
dec
fiadd
cmps
push
cdq
cld
jns
loope
cwde
jmp
inc
push
inc
loopne
push
(bad)
(bad)
rcr
gs
push
les
adc
dec
ss
add
leave
cmp
xor
les
test
test
mov
in
movs
cmp
pop
(bad)
arpl
jo
cdq
xor
xchg
inc
or
shl
jle
and
jp
test
stc
mov
add
movs
jge
enter
xchg
pop
jnp
or
je
push
retf
shl
mov
pop
pop
xchg
jo
mov
inc
frstor
add
xchg
push
inc
push
aaa
push
cmp
sub
push
pushf
in
lea
sub
inc
pop
jecxz
ret
jo
pop
fistp
sbb
sub
popf
pop
pop
ret
daa
cmp
shl
push
rcl
mov
xor
test
jmp
fnstsw
mov
adc
pop
push
(bad)
sub
aad
je
iret
(bad)
xlat
ins
xor
push
out
adc
bound
ds
dec
jbe
cs
xor
ss
lds
mov
(bad)
out
xchg
mov
push
inc
mov
jo
push
pusha
sbb
fs
daa
stos
daa
fwait
adc
mov
add
push
mov
fst
outs
mov
sbb
jp
stos
std
xchg
and
xchg
int3
sbb
mov
popf
(bad)
jp
jle
and
cdq
(bad)
cmp
fstp
icebp
aaa
adc
rol
xor
nop
mov
test
mov
sub
sub
cmp
pop
mov
lea
popf
push
iret
dec
rol
and
(bad)
out
mov
mov
xor
in
or
push
inc
in
adc
repz
mov
out
mov
fsub
jecxz
loopne
popa
cmps
push
(bad)
data16
in
repnz
xchg
mov
ret
leave
mov
fwait
loopne
and
or
jno
jg
fstp
icebp
enter
dec
dec
scas
push
or
inc
(bad)
mov
inc
adc
test
aaa
dec
pop
stos
in
cli
cmc
mov
lds
push
sbb
cmp
std
sti
iret
xlat
pop
adc
cdq
sbb
outs
test
shl
rcr
add
inc
cmp
and
test
inc
xor
(bad)
in
mov
sti
mov
add
ret
push
pop
(bad)
in
test
iret
ja
or
cmp
mov
inc
(bad)
xchg
push
push
inc
ret
cs
mov
daa
jns
mov
jno
push
sbb
inc
adc
or
sbb
lock
out
ret
call
push
pop
and
shl
inc
outs
imul
fstp
fwait
iret
arpl
bound
and
dec
hlt
dec
xchg
int3
movs
(bad)
call
lods
dec
cmc
push
adc
ins
fadd
dec
scas
mov
push
js
xchg
sub
jg
mov
xor
cwde
in
(bad)
sbb
int3
cdq
outs
popa
jae
sbb
fnstenv
sub
div
das
into
dec
(bad)
mov
push
xor
stc
hlt
pop
jmp
cwde
lods
loope
jnp
mov
repz
adc
sar
lea
sbb
mov
mov
or
add
add
and
pop
cmp
mov
sub
or
jns
mov
in
adc
inc
push
xchg
mov
sub
cmp
adc
aas
test
ret
fdivr
fcom
ins
push
fsub
or
into
stos
aam
popf
xor
rol
test
mov
mov
test
sbb
out
retf
dec
pop
in
inc
jae
int3
jns
mov
das
mov
sbb
jle
add
mov
sub
gs
shl
pop
icebp
cld
popa
outs
jmp
push
out
daa
push
xchg
add
shl
lahf
pop
aam
sub
add
retf
ss
add
pushf
adc
test
out
cwde
jae
xchg
fsub
gs
push
out
sub
mov
sub
mov
pop
fwait
leave
add
mov
push
inc
or
add
cmp
pushf
jmp
jae
into
mov
push
je
(bad)
shr
mov
and
dec
pop
adc
pop
js
aas
mul
sbb
and
dec
or
retf
inc
inc
popf
mov
mov
and
inc
jns
or
xchg
(bad)
sub
cmp
cld
ss
pop
pop
or
and
add
and
sub
pusha
stos
outs
sti
out
jl
push
fstp
in
and
cdq
dec
dec
call
rcr
les
pop
push
fwait
jp
fld
push
jle
dec
inc
push
sbb
test
pushf
jmp
imul
adc
ror
ds
out
retf
push
sahf
xchg
xchg
ss
int
mov
cmps
(bad)
pop
ins
fimul
mov
cli
shl
jno
in
and
(bad)
or
enter
sub
push
pusha
cwde
frstor
mov
jnp
push
push
xchg
mov
and
sahf
mov
mov
mov
lods
pop
mov
dec
adc
or
xlat
sub
xor
sub
pop
shr
inc
xor
dec
fld
inc
jg
pop
dec
add
dec
mov
inc
or
ror
shl
stos
int3
mov
cmps
ins
sub
xlat
add
mov
jg
arpl
sti
push
(bad)
ret
shl
push
mov
push
lahf
(bad)
jmp
jmp
push
dec
sbb
es
(bad)
mov
imul
shl
push
fwait
xchg
or
and
lods
test
or
pop
ss
ins
rcr
(bad)
std
fdiv
adc
jmp
cs
push
push
mov
dec
out
inc
push
add
sti
dec
scas
jmp
outs
cmp
mov
pop
sub
fsub
inc
sbb
das
and
mov
adc
mov
jns
movs
stos
adc
call
stos
inc
mov
mov
cmp
fild
mov
fldcw
adc
outs
popf
mov
cwde
mov
mov
cmps
(bad)
std
mov
loop
ret
mov
loope
and
sbb
shl
push
xor
or
shr
test
ins
mov
pop
jle
mov
xchg
mov
call
cmps
adc
mov
out
inc
inc
repz
or
mov
xor
push
aad
(bad)
out
and
ja
pop
pop
add
mov
dec
jg
in
mov
pop
xor
pop
arpl
sti
push
push
or
xchg
jns
ret
mov
mov
inc
cmps
cmps
cmp
jge
gs
shl
xabort
mov
cmp
cmp
inc
jl
and
sub
ins
lahf
adc
jae
mov
pop
cli
xchg
test
shl
mov
(bad)
pop
xor
dec
aad
mov
mov
mov
movs
lgs
xchg
push
xor
cmp
xor
ds
dec
dec
cs
das
mov
and
loop
loop
(bad)
test
rol
cmc
test
adc
push
fadd
(bad)
mov
mov
add
or
mov
pop
ins
shl
add
fdivr
cmps
pop
bswap
imul
pop
sub
(bad)
cmp
xchg
inc
out
inc
add
std
fsubr
cld
into
nop
repnz
pop
in
movs
inc
sbb
out
lea
adc
lods
jecxz
ins
and
in
shl
lods
jmp
movs
sbb
adc
repz
jo
pusha
jmp
cmc
xlat
mov
je
adc
xor
gs
mov
rol
repnz
les
pop
or
mov
outs
in
and
dec
cmp
les
loope
push
icebp
xchg
clc
pushf
fsubp
pop
outs
adc
(bad)
jbe
xchg
(bad)
jl
xor
fwait
jmp
mov
cmp
(bad)
mov
mov
loop
clc
rcl
outs
stc
push
push
push
sub
je
shl
and
mov
jge
ds
xchg
jp
jg
ja
and
outs
jno
pop
dec
fs
sub
pop
in
mov
cld
sahf
push
adc
mov
pop
xchg
scas
call
int
fwait
xchg
vpacksswb
fldcw
sub
retf
add
ror
ds
push
xchg
ror
cld
push
and
call
dec
mov
xchg
push
inc
xchg
daa
jge
push
mov
hlt
pop
call
fimul
vmptrst
imul
push
xchg
adc
sbb
lods
xor
inc
xchg
out
adc
shl
out
adc
loope
inc
ds
mov
mov
cli
mov
xor
jg
jne
jo
mov
pop
xor
cmova
sbb
pop
cmp
jae
push
ss
aam
xcrypt-cfb
cmps
fs
cwde
adc
mov
sti
push
add
outs
or
in
ss
imul
dec
in
pop
jbe
pop
sub
frstor
inc
mov
movs
out
add
test
(bad)
pop
and
les
int3
xor
adc
bound
xor
stc
rcr
push
in
mov
pushf
(bad)
retf
or
in
fwait
xchg
leave
push
inc
rcl
and
not
mul
mov
cld
mov
sbb
jae
xchg
sub
xchg
mov
imul
(bad)
imul
loop
out
cld
movs
shl
movs
mov
jnp
pop
call
je
cmp
pusha
mov
in
call
mov
adc
mov
mov
cmps
cli
dec
cmp
les
and
cmp
sahf
sbb
sar
or
(bad)
mov
and
jbe
aas
pop
xchg
imul
hlt
data16
sbb
mov
xor
adc
adc
enter
sbb
fstp
in
imul
ins
adc
ss
and
iret
jle
pushf
fs
xchg
or
mov
pop
fcom
das
mov
ret
cmp
scas
push
pusha
call
in
fcomp
fisttp
lds
push
sub
nop
sti
push
and
push
ja
rcr
add
in
cld
test
sbb
cmp
inc
adc
sbb
rcl
mov
mov
jmp
inc
mov
and
add
les
mov
clc
pop
add
and
jp
pop
adc
sbb
scas
jo
xchg
je
adc
iret
pop
mov
xor
mov
inc
pop
fsub
(bad)
jne
pusha
and
les
inc
jbe
or
es
push
cld
xlat
cli
pop
mov
aam
pop
ja
(bad)
add
mov
repnz
not
cs
dec
nop
inc
mul
add
or
loop
lock
ret
lods
xchg
mov
aad
mov
pop
call
movs
or
push
inc
adc
scas
adc
inc
inc
inc
int3
sub
je
jecxz
mul
sbb
pop
and
xlat
mov
push
push
jmp
mov
call
arpl
cmps
and
xchg
and
fild
mov
sbb
jo
(bad)
aam
fisttp
fs
dec
nop
adc
lds
sbb
call
push
cld
in
xchg
push
jns
les
jns
fbld
sbb
fdivr
xor
xor
pop
imul
pop
or
cmp
test
cmp
data16
add
ss
outs
inc
fldenv
jns
jge
fistp
clc
sub
xchg
mov
loopne
mov
test
mov
jnp
cmps
lock
push
inc
pop
inc
push
jbe
fnstcw
jbe
mov
mov
dec
test
jb
pop
mov
iret
in
dec
int
ret
outs
jecxz
shl
jae
ret
stos
jg
xchg
pop
sbb
leave
push
mov
aaa
jne
out
fstp
sub
loopne
sbb
clc
inc
sahf
mov
gs
pushf
cdq
dec
pop
pop
cwde
repnz
dec
mov
mov
cld
cld
mov
and
fisubr
aaa
pop
ror
(bad)
push
mov
push
stos
test
pop
jno
mov
cmp
cmps
into
sbb
cmp
jecxz
mov
mov
sbb
nop
xor
(bad)
enter
pusha
xchg
xor
ret
jno
ret
out
adc
popa
lods
mov
pop
jnp
lds
xor
data16
cmp
cdq
mov
jno
inc
push
dec
inc
mov
mov
aaa
jp
pop
mov
call
fisub
loopne
jge
pop
arpl
fwait
sar
sbb
and
test
loope
and
push
inc
sub
sbb
jno
sbb
xor
xchg
or
jge
dec
mov
imul
inc
js
(bad)
mov
cmp
test
pop
test
dec
mov
or
jecxz
call
xchg
mov
mov
jmp
pop
lods
out
fsub
cli
fimul
es
mov
aad
in
fstp
ret
pop
stc
mov
inc
adc
mov
retf
dec
outs
outs
and
sub
mov
inc
shl
(bad)
xchg
mov
xchg
scas
test
imul
xchg
dec
and
sbb
in
icebp
retf
cmp
or
adc
and
ret
rcr
xchg
cmp
lea
dec
jo
mov
add
and
scas
imul
cmp
push
and
sar
and
popa
lahf
xor
add
xchg
push
push
push
xchg
push
sub
hlt
mov
movs
scas
mov
or
data16
mov
xor
sub
or
and
stos
add
and
pop
adc
push
dec
fcomip
mov
or
push
adc
imul
inc
data16
inc
(bad)
dec
dec
jmp
cmp
pop
int3
fld
jne
mov
in
jo
in
daa
pop
xchg
fdiv
shl
xchg
retf
cmps
add
in
in
pop
imul
sbb
mov
jg
lahf
inc
ins
jbe
aad
retf
push
and
sub
cmps
outs
aas
dec
das
cmp
pop
inc
adc
scas
stos
or
ret
bound
xor
cwde
stos
dec
ret
fdivr
jecxz
fsubp
add
push
fs
inc
rep
test
(bad)
push
dec
std
mov
or
jb
mov
aam
ficomp
xor
sub
dec
sub
jmp
fs
sub
jg
xor
sar
cmp
out
cmp
push
and
cld
xor
mov
xchg
xchg
xchg
xchg
lds
and
out
jns
mov
shl
lahf
add
adc
sbb
add
pop
call
stc
cmp
sub
push
push
retf
enter
mov
outs
cmp
push
or
fs
ins
out
ja
and
adc
fnsave
daa
push
mov
mov
addr16
cmps
sahf
shl
repz
push
pop
push
add
add
adc
(bad)
lods
mov
sbb
loop
out
jmp
loop
mov
aas
mov
pushf
mov
push
dec
mov
test
jg
sub
in
int
(bad)
mov
shr
movs
std
data16
loope
sub
mov
retf
xor
pushf
xor
pop
in
inc
std
xor
dec
cmps
jle
dec
iret
jle
es
dec
out
add
xor
mov
mov
stos
cwde
mov
ins
inc
mul
sahf
repnz
shl
scas
(bad)
push
(bad)
xor
dec
pop
icebp
inc
(bad)
sti
add
adc
rcl
(bad)
jmp
inc
mov
icebp
mov
mov
mov
repz
(bad)
stc
out
mov
test
and
adc
popa
sub
(bad)
cmp
mov
imul
sbb
(bad)
push
in
(bad)
in
mov
mov
retf
call
sub
xchg
sti
jae
jle
addr16
(bad)
daa
xchg
ins
inc
sbb
pop
cmovp
jge
aaa
push
xchg
or
cmp
mov
retf
cmps
xlat
fs
fisttp
mov
cdq
sbb
repnz
push
push
push
movs
push
xor
rcr
scas
js
(bad)
sub
mov
xor
inc
out
push
pop
inc
adc
mov
mov
add
inc
shr
bound
enter
repz
not
push
push
mov
nop
xor
push
fwait
sbb
and
pop
or
pop
add
ins
push
pop
icebp
cmp
sub
(bad)
iret
jo
jmp
sub
mov
test
adc
(bad)
jbe
(bad)
es
xchg
outs
enter
loop
or
mov
aas
mov
xor
pushf
xchg
pop
lods
test
cmp
rol
xchg
neg
cld
cmp
daa
call
and
fs
into
popa
div
jb
adc
sbb
adc
shr
scas
mov
inc
pop
call
add
sbb
dec
mov
xchg
cmps
sub
movs
stos
xchg
rcl
push
push
js
xchg
(bad)
scas
cmp
out
into
jo
or
jae
mov
mov
jmp
add
sbb
mov
pop
push
cmp
js
aaa
mov
xchg
push
and
js
sahf
push
dec
or
shr
(bad)
mov
mov
stos
rcl
sub
sbb
es
add
out
xchg
js
and
outs
xchg
gs
mov
xor
lds
push
daa
mov
sbb
aad
and
inc
(bad)
cmp
sar
xchg
daa
arpl
sar
push
dec
inc
cwde
dec
sahf
mov
xchg
cdq
loopne
xchg
mov
movs
add
and
pop
mov
mov
ror
ja
in
loope
ret
dec
xor
dec
retf
jne
xchg
out
movs
mov
xchg
mov
in
mov
daa
inc
ins
jae
sbb
sub
fdivr
dec
adc
scas
(bad)
xchg
jmp
mov
inc
imul
fwait
popf
cwde
jmp
dec
jno
mov
lea
pop
out
pop
jp
adc
fwait
sub
jp
jp
adc
inc
pop
pop
popf
inc
ficom
sub
jg
push
or
fnstsw
push
dec
fcmovne
ins
(bad)
xchg
inc
mov
cmp
movs
jl
jp
dec
and
lds
sub
dec
push
dec
ins
lsl
jo
jo
push
rcr
cmp
pop
jge
movs
mov
mov
or
inc
jmp
add
pop
shl
mov
cmp
jl
and
mov
adc
test
out
lock
fsub
pop
xor
xchg
xor
xchg
xchg
push
std
xchg
fwait
aas
dec
mov
into
pop
icebp
into
mov
inc
sbb
adc
repnz
scas
xchg
test
inc
popa
call
mov
sbb
xor
jge
cwde
(bad)
popf
push
adc
int3
nop
jle
iret
cmp
pop
sti
pop
add
jecxz
add
jmp
fsub
pop
call
dec
(bad)
jge
sub
xchg
or
retf
fdiv
nop
(bad)
jge
add
sub
cmp
popf
(bad)
repnz
inc
cmc
mov
cmp
sbb
(bad)
int3
pop
retf
icebp
(bad)
out
push
push
mov
or
sub
mov
fst
fnsave
dec
call
call
adc
daa
popa
xchg
outs
shr
aaa
outs
sub
fnsave
ins
cld
mov
xor
xchg
sbb
xor
jmp
stos
lahf
icebp
rol
neg
xor
call
cmp
pop
movs
push
in
lea
sub
inc
adc
sbb
add
mov
sti
mov
test
out
out
loop
aaa
sbb
sub
mov
jno
mov
jl
daa
push
int3
jle
xchg
movs
sti
sub
xor
mov
outs
popf
leave
aas
lahf
nop
push
inc
mov
and
mov
add
pusha
sbb
out
cmp
dec
mov
push
loopne
sub
xchg
std
xor
leave
call
mov
jbe
movs
lods
pop
push
nop
xchg
shr
fldenv
xor
pusha
sub
mov
inc
pop
cdq
lods
inc
dec
mov
xor
dec
lahf
aaa
push
test
popa
test
dec
jno
jl
or
push
(bad)
in
pop
jns
shr
push
xchg
imul
jno
fist
lahf
dec
mov
rol
jmp
push
js
adc
adc
cmp
data16
movs
adc
xor
and
fcom
lods
lods
(bad)
and
jbe
dec
xor
pop
jmp
cmps
mov
aas
retf
jge
sbb
(bad)
jae
mov
mov
movs
ins
fdivr
mov
outs
leave
cmp
mov
in
call
xor
xchg
outs
sbb
sub
xchg
cmp
xor
push
jmp
pop
inc
lods
lea
jp
jmp
mov
xchg
mov
jp
xlat
and
inc
dec
push
mov
add
and
jmp
xchg
in
xchg
pop
sub
sahf
jmp
std
iret
sahf
push
sub
push
outs
ret
xchg
jae
mov
mov
fld
mov
ds
clc
pop
ins
out
stos
cs
rcl
and
cli
fcomip
mov
mov
imul
mov
adc
in
rol
loop
sbb
add
in
adc
dec
aaa
or
adc
retf
fwait
repnz
cs
icebp
jae
dec
nop
adc
out
pushf
xor
pop
loop
test
mov
cmp
out
mov
aas
sub
mov
aas
mov
adc
mov
pop
ds
outs
addr16
ret
jl
movs
xchg
pop
jbe
nop
xchg
nop
cmp
adc
cmp
add
mov
sbb
xchg
mov
mov
loopne
sub
mov
loope
ret
shl
lods
jmp
test
dec
sti
aas
jmp
(bad)
std
pop
sub
push
scas
xor
inc
add
ss
xchg
into
push
jmp
xchg
jmp
inc
and
lock
bound
pop
cld
(bad)
out
cmp
add
sbb
or
sbb
mov
sbb
scas
pop
pop
jb
aas
in
and
mov
scas
(bad)
mov
ror
cmp
xor
mov
push
fst
int3
lea
aam
jo
jne
jp
and
movs
jmp
pushf
dec
enter
retf
out
mov
je
jl
xchg
in
mov
jg
dec
retf
mov
mov
sbb
push
jae
mov
or
adc
data16
fs
or
xchg
push
pop
mov
inc
pop
pusha
enter
cmps
xchg
js
lea
pop
aas
and
dec
clc
mov
cwde
pop
add
xchg
pop
ins
mov
mov
(bad)
xchg
push
fdivr
pop
mov
and
fneni(8087
push
dec
inc
out
sbb
mov
xor
push
pop
in
inc
add
or
stc
fidiv
add
mov
scas
in
outs
out
sbb
inc
jl
pusha
mov
inc
imul
mov
jnp
push
fistp
ret
mul
sub
inc
gs
mov
mov
mov
hlt
call
xchg
cs
jb
mov
addr16
mov
inc
stos
imul
out
clc
(bad)
ficom
inc
sub
jno
popf
jmp
push
jg
mov
jne
jmp
push
ror
sub
(bad)
jle
test
inc
fdivp
bndldx
inc
jbe
inc
jmp
imul
cmp
push
sub
cwde
repnz
adc
fbld
je
mov
repz
xchg
cmps
and
pop
mov
cmc
cmps
add
and
push
outs
dec
mov
inc
mov
add
outs
adc
pop
or
jbe
rcr
cmp
inc
pop
cmp
mov
aaa
loope
stos
adc
(bad)
fild
jp
inc
rcl
enter
iret
in
cmp
test
fidivr
popa
add
mov
cdq
neg
jo
aad
jo
jbe
cld
aaa
push
jbe
adc
jno
out
nop
mov
aam
mov
mov
test
mov
cli
je
xchg
ds
aad
xor
push
data16
leave
mov
dec
or
je
sbb
adc
sbb
add
js
outs
aaa
mov
call
addr16
cmps
inc
mov
les
mov
inc
sbb
retf
icebp
mov
mov
enter
test
sti
inc
dec
mov
mov
retf
rcr
xchg
mov
push
xor
pop
out
sbb
js
push
sbb
push
xchg
sub
scas
out
inc
sub
and
xor
cmps
aam
iret
push
adc
arpl
rcr
xor
int
shl
int
fcom
enter
jne
mov
jns
icebp
xchg
xlat
cmp
test
jl
cmp
inc
shl
popf
jns
lahf
aaa
sub
mov
inc
shr
popf
push
das
dec
test
mov
cmp
in
movs
fild
imul
xchg
sbb
enter
stos
and
rcl
imul
sub
or
cmp
add
mov
inc
push
cmp
call
push
fisubr
clc
das
and
jns
nop
mov
iret
les
sbb
leave
(bad)
lods
dec
push
ins
lods
popa
push
pop
loopne
jmp
clc
nop
pushf
mov
adc
loopne
mov
pop
sbb
jo
pop
lock
imul
popa
mov
test
pop
jnp
addr16
inc
sbb
callw
imul
scas
xor
pushf
adc
sub
retf
popf
dec
dec
fidivr
mov
out
mov
call
gs
jns
dec
lock
or
jo
lea
lock
push
pop
pop
mov
inc
(bad)
and
ret
mov
mov
aad
je
mov
pop
xchg
(bad)
sub
sbb
mov
int3
mov
nop
jne
ins
mov
add
call
aas
out
into
fidivr
jmp
(bad)
and
jnp
(bad)
iret
dec
scas
movs
int
adc
movs
call
sub
aaa
add
call
scas
mov
lods
stos
add
int3
fcom
std
outs
add
jl
fld
fadd
adc
movs
jmp
das
pop
push
fstp
loopne
std
mov
add
jo
ss
daa
aaa
inc
mov
fwait
(bad)
mov
mov
and
xlat
dec
mov
loop
(bad)
ss
retf
arpl
aam
shl
fnstcw
loop
and
mov
pop
adc
cmp
aam
rcl
test
sbb
pop
mov
dec
in
push
out
sar
inc
push
jnp
shl
add
sti
push
push
loop
aad
fild
lods
xor
add
shl
neg
fnstenv
aam
pop
dec
retw
les
arpl
pusha
out
in
adc
ficom
inc
pop
mov
mov
lahf
outs
cmp
sbb
mov
mov
dec
and
cmp
(bad)
mov
jge
int
dec
mov
adc
int3
cmp
loop
ror
in
jecxz
add
shl
mov
pop
enter
add
ins
cmps
adc
(bad)
adc
add
nop
cmp
sub
push
jl
sbb
push
ins
(bad)
sub
sub
cmp
pusha
xchg
and
pop
xchg
cwde
xchg
jg
fucomip
aam
es
and
cld
jno
mov
mov
push
inc
inc
jle
loop
pop
jge
(bad)
jmp
push
outs
(bad)
jp
dec
adc
out
or
mov
xchg
inc
sar
jnp
mov
icebp
adc
pop
sbb
call
loopne
int3
arpl
xor
in
xor
sub
sub
cmps
adc
in
add
cmp
jne
mov
aad
es
xchg
loope
jmp
jbe
cmp
inc
in
pop
mov
retf
adc
pop
cmp
loop
xor
cli
push
ds
jb
add
dec
enter
outs
lods
or
mov
ds
sub
stos
mov
fwait
movs
aas
call
call
mov
and
pop
addr16
sbb
mov
jge
test
out
xor
sbb
call
mov
cmps
pusha
mov
fstp
dec
into
mov
mov
xchg
push
jl
out
hlt
cmp
add
int
mov
cli
sub
rep
shl
inc
cli
nop
stos
cmc
fdivr
mov
adc
repnz
out
mov
iret
jmp
scas
cmp
pop
sub
ins
cmp
stos
or
mov
addr16
xchg
int3
jne
(bad)
mov
sub
cmp
cmps
push
fnsave
je
and
dec
xor
push
sub
ror
into
enter
idiv
jbe
mov
daa
inc
and
jp
stc
sbb
sub
inc
scas
arpl
mov
sbb
int3
adc
nop
lahf
or
push
or
push
(bad)
cmp
dec
cmp
out
int
add
jmp
les
mov
push
enter
and
rol
adc
aaa
pop
add
test
out
jb
push
test
in
xchg
xor
dec
xor
jo
jb
dec
xchg
mov
xchg
xor
and
leave
xlat
jl
mov
(bad)
ins
test
pop
inc
or
in
or
jmp
mov
cmp
xor
cmps
xor
(bad)
rol
and
add
clc
(bad)
and
push
mov
xchg
or
imul
shr
cmp
dec
fwait
sub
pop
inc
popf
mov
push
or
or
fistp
dec
push
in
mov
push
pop
out
daa
adc
imul
and
test
or
cmp
int3
call
push
dec
mov
sub
dec
mov
es
scas
sbb
out
lea
gs
xchg
stos
fdiv
xchg
mov
rcl
mov
je
mov
out
jmp
fwait
(bad)
popf
loopne
push
push
stc
(bad)
jns
inc
add
test
jg
jns
inc
imul
mov
ja
sbb
add
mov
(bad)
push
cmp
push
xchg
cmps
pop
retf
dec
sbb
xlat
inc
ror
mov
imul
pop
mov
jno
or
out
inc
outs
into
jb
sbb
sbb
cmovge
pop
inc
adc
(bad)
test
out
mov
bound
add
sbb
and
or
mov
mov
loope
rcl
fiadd
(bad)
cmp
call
out
fistp
jl
mov
loopne
cmp
aam
sub
inc
sbb
lods
xor
pop
std
xchg
pop
add
mov
fcomip
or
and
push
fisub
sub
fwait
(bad)
fmulp
xor
cmp
test
jbe
xor
pushf
jl
add
xchg
stos
add
xchg
test
retf
sbb
sbb
lods
mov
int3
jmp
out
sub
popa
test
add
nop
push
mov
or
xchg
mov
aam
push
jnp
push
sub
pop
jb
cld
mov
aaa
imul
sbb
sub
mov
lods
mov
pushf
xor
call
div
scas
xchg
aaa
push
inc
jns
sahf
ret
dec
jmp
aad
les
xchg
std
leave
cdq
lods
sar
mov
ins
and
push
jnp
mov
ret
fsubr
xchg
adc
in
push
sub
ss
adc
pop
fs
push
nop
adc
cmc
retf
ja
push
in
(bad)
mov
pushf
pop
fucom
add
pop
xchg
dec
rol
inc
scas
push
repz
imul
and
dec
mov
nop
js
jle
jne
repz
popa
lds
lock
or
xor
mov
fcom
inc
jno
dec
and
push
xor
nop
fld
and
je
or
movs
xor
out
mov
push
add
call
shl
dec
mov
cmps
cmc
iret
xor
aas
aam
xchg
jno
lods
outs
cmc
and
or
xchg
inc
outs
es
es
jns
or
lea
ins
gs
dec
xor
sub
out
dec
sub
xchg
pop
or
fild
and
pop
es
js
pop
pop
clc
dec
ins
inc
xchg
(bad)
(bad)
aaa
(bad)
sub
gs
setl
mov
nop
add
loop
adc
shr
das
xlat
mov
mov
mov
and
stos
ficom
jecxz
int3
addr16
and
int3
push
mov
mov
cmp
aas
icebp
mov
dec
or
inc
pop
fdiv
fbld
jge
mov
push
lea
scas
lods
fiadd
adc
push
cs
(bad)
sbb
jne
retf
push
ja
jle
out
mov
pop
and
imul
sub
pushf
inc
in
call
rcl
and
sti
fcom
mov
imul
sub
sub
out
jmp
xchg
repz
cmps
lds
jl
inc
loope
xor
push
cmp
inc
sub
mov
dec
mov
mov
retf
shl
add
ja
cmp
sbb
xchg
fistp
loope
xor
inc
inc
inc
pop
push
add
xor
adc
dec
std
sub
xor
and
mov
popa
xor
(bad)
push
or
inc
test
leave
in
pop
shr
mov
sbb
fldcw
adc
neg
rol
ja
in
movs
fisub
pushf
dec
cmp
inc
mov
push
inc
int3
loopne
mov
pop
cli
push
in
mov
adc
loope
mov
jmp
out
aaa
mov
aam
sbb
pusha
mov
jno
xchg
pop
enter
pushf
adc
ds
test
push
jle
mov
daa
fisubr
sub
mov
xchg
xchg
clc
and
jmp
xor
adc
aas
push
pop
xor
add
pop
pop
xlat
(bad)
cmps
xor
mov
std
cmp
sub
fcomp
cmp
outs
mov
push
lea
jb
std
add
sub
add
pop
aam
jo
popf
fwait
mov
cmp
push
daa
pop
sbb
sbb
fwait
cld
mov
inc
or
pushf
add
inc
inc
xor
pop
(bad)
jmp
retf
and
dec
pusha
xchg
cmp
adc
leave
sbb
xchg
pop
adc
loope
pop
mov
aam
jbe
push
fld
cwde
xor
sub
(bad)
iret
sub
mov
in
out
add
imul
and
lds
call
(bad)
pop
cmp
push
fsub
int3
call
mov
mov
jne
push
test
loop
jbe
pop
out
push
es
fwait
leave
or
dec
xor
outs
xchg
cwde
or
aam
mov
mov
call
outs
add
jne
fidivr
out
push
sahf
inc
shl
(bad)
adc
rcl
dec
imul
aam
into
xchg
jae
push
jnp
mov
xchg
mov
je
movs
add
sub
add
inc
test
je
mov
fadd
push
sbb
or
ret
repnz
ins
inc
or
(bad)
adc
test
mov
aaa
cdq
inc
sub
mov
mov
pop
xor
inc
jb
call
bound
daa
popf
mov
daa
cld
das
ret
(bad)
retf
push
(bad)
fild
push
mov
lahf
jno
xchg
cmps
add
pop
fisubr
add
lods
dec
push
push
push
mov
or
call
inc
out
mov
pushf
sub
pop
or
mov
push
jmp
scas
dec
ja
inc
sub
dec
das
cmc
xor
jle
mov
bound
jo
arpl
jb
sbb
out
push
cmp
xchg
mov
in
gs
cwde
outs
call
sar
(bad)
xchg
cmp
dec
ins
rol
outs
das
mov
pop
and
pusha
or
(bad)
daa
inc
or
std
pop
and
inc
daa
and
loope
cmp
outs
xchg
push
(bad)
jp
lods
mov
jno
fistp
int3
cmps
cmps
fld
pop
aaa
add
in
push
pop
imul
jg
sbb
lods
push
imul
dec
clc
jmp
daa
sub
sahf
ret
inc
mov
iret
xchg
imul
loop
ds
in
xchg
pusha
jg
inc
stc
inc
shr
push
fisubr
xchg
mov
mov
lods
(bad)
sub
test
or
out
(bad)
rcl
jno
cli
cwde
ret
xor
mov
sbb
cli
dec
jl
leave
push
pop
ds
xchg
cmps
mov
sbb
inc
mov
mov
stos
cmp
inc
pop
xchg
jbe
movs
repz
xchg
aam
and
dec
jle
xor
adc
sub
ret
mov
mov
call
xchg
fcomp
push
sub
push
fnstsw
or
jae
jg
mov
mov
fidivr
cld
dec
mov
rol
(bad)
cld
mov
mov
sbb
mov
or
sar
inc
fcomp
jl
ror
test
push
mov
jmp
retf
pop
aaa
or
jns
out
mov
xchg
cmc
pop
stos
sbb
mov
outs
cmp
cli
jge
add
mov
push
mov
pop
scas
and
je
das
cmp
mov
xchg
(bad)
pop
std
cmp
mov
les
pop
mov
push
(bad)
dec
out
dec
push
int
fimul
ja
int
pop
mov
or
cwde
cli
out
jmp
and
and
jae
int3
sub
or
inc
adc
add
fwait
adc
pop
movs
fnstcw
add
aaa
aaa
lds
pop
ss
stos
hlt
mov
mov
ins
xchg
iret
cmp
cmps
mov
sar
std
pop
int3
rol
cmp
outs
jecxz
mov
pop
or
dec
ror
xor
sbb
movs
sbb
cmp
pop
mov
push
arpl
sbb
adc
std
outs
out
xchg
pop
popf
push
sahf
test
popa
and
jle
inc
pop
int
int
repz
sub
and
js
leave
add
sbb
rcl
dec
stc
push
retf
push
mov
and
arpl
shr
sar
cmps
inc
clc
mov
fiadd
cmp
cmovb
das
adc
dec
cwde
mov
sub
stos
mov
or
loop
cmps
and
xchg
jns
jecxz
cwde
sbb
mov
adc
sub
aas
push
jne
sub
ror
and
fcom
shr
shl
xchg
rcr
out
repnz
inc
jg
mov
test
aaa
shl
push
shl
cmp
pop
das
loop
fiadd
cmp
push
xor
imul
sub
xor
and
adc
sbb
out
jmp
xor
dec
push
or
dec
mov
repz
push
cmp
add
xchg
fs
repz
jle
div
in
sbb
cmp
cwde
lea
jo
test
aad
das
mov
adc
cs
cmp
xor
xchg
in
push
leave
pop
imul
dec
or
div
xor
mov
push
mov
sbb
imul
mov
and
mov
(bad)
jge
pop
pop
adc
cs
call
sbb
sti
jno
push
or
scas
xlat
arpl
repnz
push
mov
inc
mov
or
in
sub
jnp
and
dec
aas
dec
mov
shr
sbb
inc
jl
mov
test
add
xor
cmp
aam
sub
or
inc
xchg
pop
ins
sub
jns
outs
or
int3
push
int
sub
inc
cwde
pusha
jbe
mov
xor
jnp
fimul
push
jmp
add
inc
pushf
dec
stos
out
scas
mov
pop
cmc
jp
add
jmp
not
or
stc
sub
push
sbb
adc
(bad)
sbb
imul
xchg
repnz
mov
mov
inc
sbb
jge
movs
xor
or
cmp
or
xchg
sub
push
inc
mov
dec
movs
loop
in
jns
xchg
int
popa
ins
and
cmp
iret
mov
fadd
cmp
fisub
dec
daa
clc
cmp
add
inc
dec
cwde
jecxz
mov
loopne
das
xlat
push
out
pop
repnz
jle
movs
inc
outs
retf
jns
add
push
test
cmps
dec
or
mov
gs
mov
jae
xchg
scas
sub
or
mov
inc
inc
outs
nop
or
xrelease
pop
pushf
xchg
stos
mov
inc
sti
cdq
hlt
adc
mov
xchg
push
addr16
sti
fisubr
xchg
fsub
cmps
mov
push
enter
pop
punpcklwd
fld
cmp
cmp
ss
jb
inc
cmp
xor
inc
int3
getsec
dec
jno
jbe
dec
mov
cdq
clc
cli
mov
jle
into
or
jl
ret
dec
outs
push
or
sub
int
movs
add
and
lods
out
outs
jnp
adc
mov
iret
sub
inc
mov
cmp
and
aas
add
mov
scas
addr16
push
pop
cmp
mov
dec
mov
outs
not
out
test
push
clc
inc
push
mov
loope
inc
jmp
xor
out
mov
sub
ror
xchg
out
hlt
xchg
sti
aam
mov
call
mov
arpl
fisub
push
(bad)
dec
fsubr
and
outs
add
mov
sti
jnp
push
push
cs
out
repz
push
xchg
inc
pusha
add
je
les
outs
mov
data16
pusha
pop
jns
ret
push
xor
or
cmc
cmovs
arpl
push
outs
add
inc
aaa
mov
cs
nop
lds
mov
jmp
jmp
movs
ret
sbb
shl
xor
icebp
out
cmps
push
adc
cwde
xor
sbb
shr
cmc
add
aaa
and
xor
push
adc
lods
inc
loop
mov
std
push
pop
inc
in
add
mov
gs
imul
clc
fld
out
push
xor
rcl
ins
xor
jo
dec
std
stos
pop
fist
mov
call
xor
add
loope
stc
aaa
out
das
repz
mov
mov
aad
jns
push
fs
std
aaa
adc
cs
test
sbb
cdq
enter
pushf
mov
bnd
gs
rcr
cmp
lock
jmp
idiv
and
mov
add
push
pop
add
ins
jnp
push
leave
adc
nop
mov
cmp
push
loop
imul
add
out
cmps
rcr
mov
mov
mov
jbe
xchg
jmp
adc
call
sti
out
scas
in
jmp
lea
pop
and
ins
ss
jecxz
out
xchg
inc
cmp
or
aad
xchg
xchg
xchg
inc
les
mov
xchg
popa
call
adc
push
into
xor
(bad)
in
ficomp
and
pshufw
jl
mov
push
mov
push
sbb
nop
jns
or
adc
jle
arpl
mov
push
mov
jge
jno
push
cmp
mov
(bad)
mul
jg
nop
pop
mov
sbb
sar
xor
popa
hlt
fiadd
mov
jp
xor
xchg
xchg
xchg
sub
stc
xchg
imul
fcomp
ins
push
iret
stos
sub
fisub
pop
movs
ins
dec
dec
sub
sub
add
pusha
inc
fwait
xchg
xor
(bad)
jmp
sub
test
mov
xchg
jns
inc
mov
jg
in
nop
push
mov
icebp
sbb
jmp
fmul
mov
addr16
fistp
enter
cmp
cli
jecxz
loope
xlat
xchg
jo
outs
cmp
cmp
push
or
jecxz
inc
jno
xchg
or
push
jmp
repz
ficomp
fnsave
fdivr
cmps
call
dec
call
int3
sub
pushf
std
call
or
sar
dec
std
add
inc
leave
push
nop
cmc
pop
mov
bound
fwait
or
mov
adc
ror
das
lahf
cmp
cmp
test
daa
push
out
and
inc
sub
das
cli
imul
jno
add
repnz
stc
das
jbe
dec
jg
out
in
repnz
dec
dec
jbe
and
(bad)
push
push
sbb
pop
rcr
cmp
xor
in
les
adc
fst
icebp
imul
xlat
je
lods
cmp
fisttp
int3
sub
hlt
dec
test
mov
popw
(bad)
jecxz
add
and
jnp
lock
je
xor
inc
movs
add
push
mov
shl
icebp
jg
sti
adc
daa
jmp
jae
sbb
cmc
cmp
lock
jp
pop
add
dec
cmps
or
mov
add
mov
movs
jae
adc
sahf
sub
sbb
sbb
jg
xchg
jae
sbb
inc
les
or
aas
cmps
mov
shl
outs
and
cmp
xchg
enter
mov
mov
jg
fs
xchg
dec
sub
clc
xor
ror
inc
and
scas
jge
xlat
push
retf
arpl
fmul
(bad)
push
mov
inc
les
jne
jnp
jno
sbb
adc
add
cmp
sbb
jnp
in
jl
(bad)
sub
repnz
daa
and
into
add
retf
cwde
cmp
inc
pop
push
lahf
xchg
rcr
lods
adc
sub
(bad)
dec
lahf
sbb
xor
xchg
push
jo
pop
pop
(bad)
push
mov
(bad)
mov
pop
addr16
mov
sbb
cmp
mov
loope
call
popa
daa
nop
mov
aad
hlt
pushf
fwait
xchg
aad
jae
cmp
lahf
mov
pop
mov
xchg
cmp
das
inc
xor
jp
into
push
push
sub
mov
dec
iret
bound
loop
(bad)
sbb
out
mov
push
fisttp
jmp
popf
push
mov
dec
sahf
fwait
push
mov
jae
cwde
sub
mov
aaa
xchg
jg
adc
ret
mov
lds
xchg
push
add
movs
(bad)
cmps
loope
hlt
or
add
fdiv
cmp
add
add
xchg
jns
jne
mov
mov
jle
ret
add
jbe
push
push
mov
outs
enter
and
cwde
out
jmp
nop
pop
stos
imul
loop
dec
stos
neg
(bad)
sbb
sbb
call
stos
nop
inc
mov
xchg
and
cmp
ror
outs
dec
xchg
in
clc
call
cdq
inc
fsub
dec
lods
imul
sub
adc
inc
mov
jmp
jmp
cmp
add
inc
adc
xchg
push
adc
xor
sbb
jmp
loopne
lock
bnd
scas
ret
push
mov
ins
jecxz
xchg
ins
das
xchg
inc
arpl
inc
jnp
jae
mov
out
test
or
dec
pop
inc
int
clc
(bad)
icebp
enter
push
mov
add
cmp
pusha
lds
add
jmp
jl
dec
cs
fwait
mov
sub
adc
js
mov
test
xor
inc
clc
xor
adc
retf
mov
jl
cs
out
gs
and
push
std
retf
shl
inc
push
and
(bad)
fwait
adc
sahf
adc
rol
and
xchg
mov
gs
pop
in
cmps
inc
ss
push
mov
and
cmp
adc
jmp
arpl
dec
add
dec
addr16
mov
mov
mov
adc
(bad)
xchg
mov
retf
pop
xor
jg
or
add
inc
aaa
dec
pop
sub
test
pop
into
and
adc
or
out
jmp
or
lods
pop
and
adc
jle
out
push
pop
mov
mov
(bad)
in
pusha
popa
dec
jp
aad
stc
and
mov
sar
aas
pop
dec
stos
scas
pop
loope
das
sub
xchg
loopne
push
pop
es
mov
std
xor
mov
fcom
adc
cwde
sahf
aam
sti
dec
mov
scas
mov
movs
pushf
dec
and
lock
lock
xor
test
mov
aaa
ror
cmp
mov
cli
fld
imul
jbe
test
mov
or
mov
mov
adc
es
in
mov
xor
inc
in
scas
loope
sbb
in
jl
adc
pop
pushf
loopne
mov
add
movs
add
das
add
mov
jnp
jl
dec
out
popa
daa
jb
and
movs
jae
cwde
xor
pop
xor
leave
add
or
loopne
or
sbb
mov
aaa
xchg
inc
loopne
imul
in
movs
das
outs
or
repnz
adc
int
adc
fwait
or
rcl
add
jmp
(bad)
out
lods
out
inc
aad
add
adc
retf
or
pop
out
stos
imul
cmp
sbb
(bad)
mov
(bad)
fsub
in
ror
xchg
inc
or
sti
sub
in
gs
out
aam
outs
cli
dec
adc
mov
xchg
(bad)
and
ret
pop
and
or
jns
aam
cmp
repnz
pop
movs
(bad)
imul
jge
lds
xor
jno
jmp
cli
cmp
fcmovbe
(bad)
ret
add
cmc
adc
dec
cld
loope
arpl
sahf
push
inc
(bad)
aam
pop
and
aas
push
dec
xchg
dec
jns
imul
popf
sub
xor
icebp
shl
xor
(bad)
jns
lods
retf
int3
mov
or
xor
sqrtps
(bad)
int
sbb
addr16
loop
mov
test
cs
push
xor
out
push
inc
jge
imul
push
mov
push
jmp
add
sub
xor
dec
out
les
lahf
dec
mov
xor
pop
sub
les
pop
xor
mov
and
lds
dec
xchg
nop
dec
jl
adc
cdq
sub
mov
sbb
push
mov
into
sbb
push
icebp
inc
ins
jmp
sub
(bad)
jns
xchg
mov
retf
repnz
pop
mov
cmp
pop
pop
jns
mov
aaa
and
xor
into
outs
sti
in
dec
or
(bad)
lahf
mov
jg
stos
jmp
data16
mov
out
sahf
jle
popf
xchg
xor
adc
jmp
imul
fdivr
in
sub
sub
arpl
jmp
cmp
fiadd
shr
add
mov
push
lods
dec
out
mov
retf
push
scas
and
push
or
push
outs
stc
into
mov
(bad)
repz
xor
mov
mov
in
inc
cmc
cmp
xor
ins
xchg
fsub
cdq
mov
push
push
(bad)
pusha
xor
pop
int
pushf
mov
jmp
(bad)
xor
xor
dec
xchg
push
xchg
mov
enter
xchg
stos
jns
inc
(bad)
popf
and
lds
out
scas
loopne
sub
movs
jl
pop
jle
xor
cmp
mov
je
mov
mov
dec
pop
jg
imul
mov
push
add
and
cmps
adc
add
or
aam
push
add
dec
in
fs
das
aam
add
in
test
and
dec
cmp
add
mov
sbb
xchg
js
pop
out
xchg
rcl
inc
sbb
jmp
jp
stos
cmp
(bad)
cwde
and
sub
adc
mov
hlt
leave
cmps
cli
fs
dec
dec
(bad)
(bad)
mov
and
call
sbb
inc
popf
xor
enter
cdq
fst
popa
out
(bad)
cmp
inc
dec
arpl
mov
shl
les
movs
dec
xor
gs
cdq
xchg
jbe
jmp
ins
jg
movs
push
sub
aas
sub
adc
push
inc
inc
test
gs
shr
sahf
ret
sbb
sbb
mov
and
jnp
call
inc
xlat
loopne
retf
je
movs
ss
mul
lds
jbe
iret
repnz
inc
dec
push
pop
add
movs
not
and
es
adc
pop
mov
lods
add
pop
cld
ins
inc
aas
push
mov
pop
dec
pop
ret
or
imul
test
jl
inc
add
mov
fdiv
inc
xchg
push
std
(bad)
cmps
mov
popa
ror
stc
jae
push
scas
push
jge
mov
inc
inc
mov
retf
cmc
aaa
test
clc
jns
sbb
sti
enter
test
pop
mov
shl
jl
ins
jbe
stc
repz
sub
mov
mov
push
jmp
movs
into
mov
iret
int3
push
jbe
call
or
ins
mov
std
out
jl
sti
into
popa
inc
cmp
inc
jge
xor
mov
dec
push
mov
mov
int
jno
test
pop
adc
cmp
out
scas
in
dec
mov
sahf
mov
or
mov
xor
pusha
bound
cmp
or
xchg
ja
add
sub
inc
add
inc
clc
add
cmp
test
mov
dec
sbb
sub
loop
(bad)
jle
std
(bad)
rcr
cmp
stos
pop
inc
jl
jns
(bad)
icebp
bound
and
add
adc
ror
test
push
xchg
mov
mov
xor
or
sbb
xchg
mov
and
pop
sbb
add
xor
fcom
add
push
xor
dec
aaa
xchg
addr16
sbb
js
(bad)
pop
adc
push
in
cmp
repnz
pop
mov
retf
ja
jno
jns
fidiv
cmp
pop
das
sbb
mov
xchg
neg
jnp
push
(bad)
iret
xchg
push
dec
ins
iret
hlt
dec
fisttp
daa
cdq
stos
cmps
add
pop
les
push
inc
mov
vaddps
xchg
xor
(bad)
dec
stc
mov
enter
cmp
loop
(bad)
cmp
or
lods
fxam
pop
arpl
repnz
pushf
or
push
sub
jnp
lods
adc
jb
jecxz
jbe
mov
gs
imul
push
cmp
xchg
jbe
fmul
mov
cmps
neg
or
xchg
mov
push
push
pop
xchg
in
xchg
call
and
jge
lods
push
rcl
lock
xor
aas
jmp
in
ins
or
cmps
push
cmp
jnp
pop
mov
ins
dec
mov
cmps
inc
loop
add
ror
inc
cli
mov
mov
pop
pop
xchg
fisttp
push
sbb
pushf
pop
(bad)
ret
in
out
and
xchg
push
push
pop
hlt
or
push
add
call
lahf
pop
cmp
int3
inc
(bad)
push
push
rep
int
push
test
jg
mov
retf
dec
fsub
test
add
and
and
dec
enter
aad
sbb
lock
cmp
jg
jg
push
jmp
cmps
mov
leave
dec
mov
dec
cdq
mov
mov
fnsave
imul
(bad)
cmp
mov
(bad)
mov
stos
ss
adc
lds
add
call
and
mov
out
mov
add
repz
mov
mov
scas
enter
jmp
scas
mov
push
imul
add
add
retf
dec
mov
cmps
mov
jne
xchg
dec
xchg
mov
test
sub
push
push
sbb
(bad)
xchg
popa
push
inc
inc
xchg
mov
arpl
ret
ficom
std
adc
or
scas
ja
jns
int
mov
cmp
and
repz
add
loope
cs
clc
mov
stc
push
mov
push
jmp
arpl
(bad)
pop
add
scas
leave
retf
push
pop
inc
outs
lods
xchg
rol
jbe
outs
push
xor
movs
fbstp
xor
mov
nop
dec
sub
add
popa
ret
push
les
sahf
mov
(bad)
cmp
test
inc
xor
sbb
jge
jge
(bad)
xchg
jb
inc
neg
(bad)
sbb
jo
(bad)
imul
aaa
iret
iret
pop
imul
imul
(bad)
mov
push
pop
bound
adc
ds
jge
xlat
cmp
xor
adc
stos
int
(bad)
mov
lods
(bad)
test
pop
(bad)
adc
out
fistp
or
hlt
scas
sub
xor
adc
pop
scas
jnp
mov
cmp
dec
jbe
rol
push
out
mov
push
repz
or
jecxz
push
les
rcr
je
into
adc
mov
cmp
mov
int
(bad)
mov
int3
ja
leave
es
cmp
bound
push
icebp
jmp
popa
neg
mov
xchg
fisubr
jge
loopne
jmp
call
jae
outs
cdq
adc
loope
cmp
inc
sbb
inc
push
pand
or
loopne
or
inc
jl
in
std
rcr
frstor
inc
adc
cmps
fisub
push
jmp
or
ror
sbb
cwde
aam
lds
mov
inc
sub
jge
dec
inc
inc
add
xchg
inc
loope
popf
xor
mov
cmp
cmp
sbb
mov
pop
dec
(bad)
lods
fst
ret
jle
pop
scas
test
push
shl
add
pop
mov
lods
out
sbb
xchg
mov
xchg
in
dec
jle
(bad)
push
dec
ins
sahf
inc
ss
xchg
xlat
add
lock
inc
idiv
and
sub
sar
inc
and
nop
xor
add
xchg
test
aas
xchg
loopne
mov
adc
nop
out
cmp
in
sub
retf
jae
repz
mov
mov
repz
cmp
std
ds
mov
pop
mov
(bad)
pop
(bad)
daa
(bad)
mov
mov
cmp
sub
jle
mov
in
push
push
ret
jb
dec
(bad)
jge
inc
enter
movs
xchg
(bad)
rcl
repnz
das
inc
adc
xchg
push
cmps
dec
jmp
sbb
das
jae
ins
retf
pusha
fistp
mov
fdivr
das
and
cmp
mov
xchg
jle
leave
fnstenv
xlat
add
push
cmp
nop
aas
push
cmp
ja
popf
iret
cli
xchg
and
add
dec
xchg
jb
xlat
pop
push
pop
test
cmp
push
or
leave
jp
out
aam
xor
arpl
sbb
adc
and
sub
add
aam
sub
mov
pop
jmp
cs
inc
xchg
lods
aam
jnp
iret
sub
ins
xor
jne
imul
iret
jne
jb
test
mov
mov
nop
jb
mov
mov
jg
fwait
cli
fidivr
pop
push
mov
or
sub
xchg
push
pop
repnz
fcompp
xchg
iret
jae
aaa
imul
rcl
add
mov
icebp
cmps
or
hlt
enter
(bad)
ja
or
cmp
fisttp
or
js
mov
test
shl
into
dec
inc
mov
test
dec
daa
adc
movs
icebp
fidiv
and
cmp
popa
ds
push
and
xchg
idiv
and
loopne
and
jle
push
sbb
dec
popf
pop
mov
sub
push
fcmovnu
mov
pop
iret
xor
and
xchg
cdq
outs
cli
jmp
popf
mov
repnz
inc
inc
(bad)
cli
imul
call
sbb
push
aad
hlt
dec
fst
xchg
inc
pop
mov
dec
push
fwait
jno
mov
jb
js
or
cmp
fwait
ds
fdivp
mov
push
in
pop
cmp
(bad)
mov
lods
adc
xchg
or
or
rol
sub
jecxz
mov
add
pop
mov
(bad)
and
int
cld
jle
inc
mov
pushf
adc
out
cmp
sub
or
inc
jbe
or
pushf
add
in
xor
mov
mov
out
adc
sbb
push
add
fs
movs
sub
mov
mov
jno
loopne
in
cmc
jge
hlt
cmp
dec
mov
jb
lds
sub
mov
and
iret
inc
mov
div
push
bound
jae
jo
mov
cmpxchg
xor
mov
mov
inc
or
pop
test
in
pop
mov
sbb
js
cmp
sar
outs
pop
fldcw
sub
(bad)
mov
add
out
jge
jle
cmp
xchg
add
stos
pushf
out
movs
stos
clc
pop
adc
test
outs
inc
mov
jg
cmp
add
(bad)
into
xchg
bound
dec
pop
retf
add
inc
call
dec
inc
jno
imul
add
pop
pop
add
push
outs
lods
inc
loope
enter
mov
and
icebp
pop
sub
nop
lock
mov
or
jae
xor
pop
hlt
dec
pushf
in
sbb
push
or
shl
and
sbb
cmps
inc
sbb
add
hlt
cwde
adc
imul
push
outs
(bad)
xchg
out
jmp
les
sbb
retf
retf
add
mov
(bad)
sbb
aaa
fistp
int
push
sbb
or
jae
call
jnp
and
jg
fdiv
pop
rcr
arpl
ss
mov
jge
das
cs
popa
mov
jp
push
and
aad
pop
adc
cld
ja
outs
movs
push
retf
pusha
sahf
mov
jns
cmc
mov
dec
pop
std
icebp
dec
retf
and
sti
mov
mov
data16
out
mov
sub
pop
(bad)
scas
pop
jge
ret
std
xor
inc
xchg
and
push
push
shr
in
ror
jecxz
stos
xchg
ins
aaa
and
add
pusha
inc
mov
xor
fsubp
sbb
sub
xchg
out
pop
mov
pop
outs
xchg
(bad)
cdq
(bad)
retf
jb
xor
das
mov
dec
inc
jg
aam
(bad)
(bad)
mov
jge
pop
lea
adc
(bad)
jae
jne
mov
sbb
and
add
pop
jg
mov
xchg
aaa
xchg
outs
out
sar
mov
or
fwait
pop
loopne
test
jg
xchg
(bad)
popf
xor
ret
push
mov
jo
push
ret
jae
das
stos
mov
into
adc
inc
mov
jmp
inc
jbe
mov
mov
pop
imul
arpl
jo
and
les
pop
popa
dec
add
out
push
mov
stos
cs
pusha
hlt
xor
jp
jae
pushf
popf
sahf
xor
sub
mov
ret
iret
repnz
cs
int3
push
ffree
mov
sub
add
in
sub
rcl
inc
cmp
retf
daa
xchg
mov
mov
int3
xchg
ins
xchg
(bad)
cmp
xchg
std
leave
add
aam
xlat
inc
lods
dec
mov
loop
lods
cwde
push
movs
pop
fistp
sbb
shr
jmp
fistp
enter
mov
dec
mov
dec
adc
mov
cmp
sti
out
fstp
test
push
jmp
mov
(bad)
stos
push
xchg
ds
dec
scas
(bad)
dec
inc
mov
sbb
and
ja
out
pop
sti
bound
bound
scas
arpl
adc
adc
shl
or
jae
mov
dec
mov
lock
cwde
mov
lea
gs
cmp
xor
popf
sub
or
dec
clc
outs
retf
enter
out
ds
jb
loopne
mov
mov
pop
sub
sti
sub
pop
fisub
lds
aas
idiv
out
push
mov
je
(bad)
div
mov
xor
mov
push
push
fwait
call
pop
adc
jne
dec
jbe
out
push
jbe
push
lock
shl
jb
(bad)
xchg
in
jb
lahf
sti
xlat
shl
push
das
cwde
inc
or
mov
in
dec
aad
adc
fiadd
pop
or
pop
push
xor
inc
jbe
xchg
xlat
inc
movs
jl
dec
pop
rcl
cmp
mov
xchg
push
add
pop
cld
mov
lds
push
push
sbb
sub
jae
mov
push
hlt
maxps
pop
cli
xchg
scas
fimul
sbb
inc
push
pop
jnp
lea
sbb
sbb
or
jmp
cwde
adc
jmp
add
adc
inc
(bad)
jg
in
xor
add
pop
into
or
int3
cli
(bad)
push
and
int
mov
sbb
in
popa
pop
fmul
loop
hlt
sub
mov
push
and
push
popa
aam
xor
pop
hlt
fwait
adc
outs
inc
cmps
ja
add
mov
cmps
lods
aaa
dec
mov
xlat
nop
xlat
xor
fnstsw
enter
movs
cwde
sub
xor
out
sahf
push
xor
std
xchg
mov
mov
loop
jmp
popa
data16
fbld
fwait
mov
call
inc
cmp
imul
xchg
out
cdq
xor
jb
pop
lods
bound
fwait
test
jp
xor
push
inc
(bad)
fdiv
push
jmp
dec
cli
jo
lds
lds
iret
lds
imul
mov
dec
and
in
das
cdq
mov
daa
retf
pop
sub
mov
loop
movs
mov
mov
(bad)
bound
push
sar
xor
add
lea
mov
adc
sub
ins
dec
mov
(bad)
xor
adc
loop
(bad)
rol
push
out
imul
and
pop
cdq
sbb
lea
inc
(bad)
cmps
jnp
pop
aas
push
push
inc
adc
bound
pop
dec
je
jbe
scas
cmp
push
push
add
pop
fucomi
movs
cmps
popa
xchg
daa
jg
jae
push
inc
adc
jae
ins
xlat
in
test
aad
dec
xchg
outs
retf
fst
adc
in
add
iret
fisubr
sub
vpsubw
mov
cmc
mov
cmp
add
cdq
sbb
push
add
dec
das
aad
in
lods
and
dec
jmp
xor
pushf
in
retf
and
iret
jge
out
fld
or
add
mov
push
push
fidiv
in
mov
mov
ret
xor
pop
xor
mov
inc
out
lods
push
inc
sub
movs
mov
and
rcl
pmulhw
xchg
inc
outs
in
pop
in
test
cmp
push
sbb
shr
fisttp
push
cmp
jbe
cmps
push
fmulp
fbld
sahf
xor
xchg
jnp
adc
ficomp
movs
push
or
jne
stos
jns
mov
lods
enter
push
dec
data16
jg
stos
sbb
cmp
cmp
jae
cmp
dec
mov
xor
adc
pop
cmp
loope
mov
mov
cmps
push
inc
retf
sbb
adc
lds
mov
cdq
and
in
inc
scas
inc
sub
data16
jb
xchg
cmp
jo
outs
stc
sahf
in
or
xchg
cmp
aad
adc
fnstsw
lahf
in
adc
stos
bound
popf
lods
ja
adc
xor
lahf
lods
mov
mov
shr
xchg
cs
mov
dec
repnz
and
scas
add
mov
or
mov
fs
ret
jge
mov
xchg
and
ds
sbb
inc
xor
add
test
xor
pop
xor
mov
btr
(bad)
dec
cmp
rcl
adc
cmps
xchg
test
mov
movs
lea
ins
xchg
sub
mov
dec
mov
push
push
mov
int3
ret
(bad)
call
ror
in
cmc
imul
push
pop
sti
mov
cmp
jns
aam
(bad)
push
jge
dec
inc
pop
cmp
xor
repz
(bad)
les
test
inc
push
push
or
cmp
mov
jne
xchg
mov
jmp
enter
hlt
les
add
leave
out
ja
push
jmp
sub
(bad)
dec
fs
addr16
pop
or
mov
dec
jecxz
add
add
xchg
hlt
xchg
int3
into
rcr
and
cmp
sbb
pop
dec
jmp
xchg
sbb
mov
add
push
or
pop
push
lea
adc
adc
and
and
add
mov
xor
movs
xchg
add
sub
xchg
push
fdivp
add
not
xlat
adc
add
sti
mov
inc
and
(bad)
jge
scas
sub
pop
fs
push
rcl
or
movs
dec
iret
movs
sub
push
(bad)
sub
call
jno
lea
lods
aam
push
jnp
movs
dec
sbb
or
je
jne
mov
je
jmp
dec
mov
jnp
cmp
sub
cli
in
xor
add
popf
add
das
daa
and
mov
adc
mov
cmps
loop
les
cdq
sub
inc
imul
icebp
repz
and
pop
and
inc
push
fwait
pusha
popa
in
inc
(bad)
fcmovb
dec
push
stos
test
dec
or
push
pop
sub
push
cs
fnstenv
pop
xchg
add
dec
loopne
in
movs
iret
inc
sbb
push
jmp
jmp
test
mov
jmp
out
or
adc
lahf
adc
and
call
xchg
mov
stc
out
sbb
arpl
cmp
pop
lock
push
mov
(bad)
fst
xor
add
mov
leave
icebp
mov
push
ja
imul
lock
xor
sub
xchg
pop
pop
mov
aam
ds
lock
sub
add
sbb
adc
and
dec
push
lock
add
inc
in
inc
xor
call
leave
imul
stos
pusha
mov
and
sub
(bad)
xor
mov
les
push
arpl
pop
or
loope
cwde
add
scas
cmp
jne
fs
xor
jb
push
fadd
(bad)
push
retf
(bad)
cdq
or
movs
jnp
xlat
aad
out
xchg
sub
sub
inc
jmp
lock
sub
push
inc
mov
iret
xlat
inc
rcl
sahf
xchg
stos
ret
arpl
movq
in
mov
pop
fiadd
ss
dec
xchg
aad
iret
or
aas
xchg
repnz
pop
add
cld
retf
mov
test
jnp
lds
nop
pusha
sbb
xchg
(bad)
out
sub
and
dec
rcl
ja
xor
jp
lea
jnp
or
xchg
movs
jg
lods
inc
adc
popa
push
jle
adc
test
adc
shl
ret
ins
imul
mov
gs
pop
and
hlt
ins
inc
push
jnp
(bad)
das
inc
adc
ror
inc
xchg
mov
mov
pop
cmp
imul
js
repnz
rcl
les
nop
rol
imul
xlat
xchg
loopne
lods
adc
mov
inc
cmp
fiadd
mov
fwait
hlt
call
test
cmp
arpl
icebp
jns
mov
push
pop
mov
jmp
add
and
ror
mov
and
fwait
jbe
inc
sbb
adc
xor
outs
retf
or
dec
ret
daa
sbb
push
cs
push
stos
inc
xchg
xchg
(bad)
popa
inc
mov
daa
push
sbb
popf
push
dec
cwde
cmc
inc
lahf
inc
xor
sbb
popf
call
add
xor
std
les
scas
ins
xor
jmp
pop
popa
retf
hlt
push
cmp
sbb
fild
add
pop
or
sbb
mov
(bad)
cmp
movs
xchg
sub
push
popf
xchg
xlat
frstor
loop
jbe
cmp
je
stc
dec
jb
cmc
aaa
mov
add
call
nop
ret
aas
fwait
ds
push
jl
add
in
cli
in
hlt
cmp
out
or
sbb
cmp
jp
add
mov
dec
mov
mov
adc
(bad)
std
(bad)
aad
mov
and
jg
sbb
(bad)
mov
mov
adc
rol
jbe
mov
xchg
cmp
dec
add
adc
mov
repz
aad
movs
addr16
dec
or
or
jae
int3
pop
jmp
sahf
data16
fwait
inc
xchg
repz
adc
dec
aaa
out
or
pop
mov
sub
cmp
cmp
cld
int3
js
cmp
cmc
dec
out
or
lods
pop
inc
fld
push
xor
cmp
jb
xchg
mul
jne
cwde
and
into
arpl
adc
mov
add
cli
add
push
inc
les
fist
dec
out
pop
sbb
jmp
ficom
nop
xlat
mov
ror
sub
push
call
in
ss
pop
mov
mov
fwait
imul
lea
bound
aaa
dec
test
pusha
inc
xor
(bad)
sbb
stos
push
in
or
in
lock
std
pop
fcmovnb
loope
jmp
ficom
enter
dec
inc
out
push
sbb
dec
loopne
or
leave
mov
(bad)
fdivrp
mov
mov
xchg
in
leave
cmp
xor
shr
sub
cmp
imul
cmps
nop
jmp
sbb
gs
lahf
les
out
jo
outs
mov
mov
push
add
mov
add
je
adc
jne
and
mov
dec
aad
pop
xchg
sub
repnz
lahf
in
leave
fimul
dec
ja
jl
int3
arpl
xor
jbe
sub
sub
or
test
and
ins
mov
cmp
lahf
(bad)
jge
cli
les
pusha
cmps
mov
add
mov
sub
or
sub
nop
push
shr
and
inc
aad
and
in
mov
xchg
mov
repz
call
sub
sub
cmc
push
and
add
cmps
enter
xchg
test
sbb
inc
call
pop
bound
lahf
iret
xor
pop
(bad)
push
ins
mov
out
pop
je
fidiv
(bad)
sub
and
add
push
xchg
movs
add
(bad)
fadd
mov
jg
aaa
xchg
push
cmc
aas
dec
push
fwait
aaa
out
rcl
int
in
add
or
int3
add
jns
inc
jge
sbb
jo
dec
inc
jae
jns
ss
mov
xchg
bnd
or
inc
mov
adc
ds
jae
mov
inc
xchg
and
fistp
mov
cmps
push
pop
jl
(bad)
mov
xor
iret
stos
outs
daa
shl
pop
jo
cmp
adc
sbb
add
inc
add
mov
dec
dec
popa
scas
adc
std
leave
call
inc
aas
dec
aas
mov
inc
jp
cmps
xchg
adc
nop
loope
es
rcr
or
ja
jle
jl
es
mov
or
addr16
add
arpl
(bad)
lods
js
jo
cwde
jmp
lods
cmp
xchg
bound
mov
in
cmp
sbb
shl
dec
pop
arpl
mov
in
faddp
pop
sub
lods
add
dec
aam
int
and
ret
arpl
iret
xchg
cmp
cmc
sar
repnz
jmp
enter
pop
pop
sub
xor
add
loop
and
adc
mov
dec
fst
out
aaa
adc
out
push
or
(bad)
mov
stc
mov
adc
fistp
sub
adc
push
call
jge
push
inc
shl
lock
add
or
dec
mov
(bad)
out
jno
xchg
fwait
cld
jl
daa
xchg
sub
cmp
test
xchg
repz
xchg
pushf
or
and
sbb
push
mov
inc
pusha
xchg
push
hlt
sbb
dec
sahf
imul
jnp
lods
or
xchg
sti
push
es
ror
mov
xchg
movs
inc
test
sub
jmp
cmc
push
pop
mov
sub
push
sbb
fwait
lock
das
sbb
movs
retf
int
sbb
add
jmp
pop
addr16
ret
adc
fsin
ins
xchg
add
add
out
popa
ret
ja
arpl
stos
push
rcr
out
or
out
xchg
and
call
push
sbb
jo
inc
cmps
test
jmp
cld
iret
add
aam
fisubr
cmp
or
mov
inc
sub
retf
sub
repz
jb
pop
call
or
lock
std
add
and
mov
ss
cdq
sub
pop
fwait
inc
fucomip
push
xchg
pop
pop
cmp
scas
jne
adc
pop
pop
int3
jmp
lds
mov
daa
push
inc
mov
div
(bad)
adc
sub
shl
enter
inc
mov
adc
mov
push
xor
jno
not
enter
out
xchg
cdq
sbb
mov
int3
cmc
rcr
enter
and
cmp
adc
push
pop
xchg
add
hlt
and
mov
jp
leave
add
mov
jns
call
mov
mov
clc
lahf
xchg
cmp
cmc
mov
fwait
aad
adc
inc
mov
loope
pop
jbe
or
or
inc
(bad)
clc
dec
int3
je
aad
lods
test
je
push
loop
sub
jp
iret
and
smsw
adc
addr16
enter
dec
xchg
lods
sub
sahf
out
mov
add
shl
add
dec
imul
aaa
xor
xchg
fsubr
outs
push
jnp
(bad)
fmul
loopne
and
adc
dec
xor
loop
pop
icebp
add
in
add
jmp
and
pop
in
mov
jo
mov
sar
push
jle
ins
inc
push
je
in
adc
in
leave
in
add
dec
mov
popa
int3
pushf
dec
test
out
jns
mov
cmps
movs
lahf
sub
dec
ds
test
nop
dec
jecxz
fsubr
mov
xchg
in
ins
dec
jbe
inc
stos
test
jmp
push
ins
push
mov
popf
push
ins
jnp
lahf
pop
sub
xor
pop
mov
jae
pop
or
jne
imul
fwait
arpl
jp
add
or
inc
inc
sti
mov
inc
cmp
popa
xchg
mov
aaa
hlt
sahf
jmp
leave
xchg
inc
xor
rcr
int
sub
cdq
or
outs
lahf
dec
in
jae
in
in
ins
fdiv
das
loop
loope
fs
dec
sub
dec
or
xchg
push
push
ret
pop
ds
sbb
push
add
sub
lea
aad
xor
aaa
cmp
xchg
popa
es
les
fstp
fcmove
sub
push
inc
ret
push
xchg
dec
push
push
pop
xor
fidiv
and
sub
icebp
add
pushf
ins
or
test
xor
xor
cmp
mov
mov
push
bound
popf
dec
mov
enter
pop
(bad)
sahf
and
mov
icebp
xchg
xor
shl
cs
dec
and
mov
fimul
fldcw
inc
push
mov
add
sbb
cmp
add
loop
cmp
jg
pop
retf
adc
dec
cmps
jb
test
dec
mov
test
hlt
loope
cmps
std
or
je
lock
inc
xor
lods
rcl
lahf
into
sahf
mov
adc
je
into
scas
jmp
and
(bad)
xchg
mov
xlat
aas
lahf
dec
xchg
or
xor
sahf
rol
test
mov
lods
movs
les
jmp
shr
xchg
push
pop
popf
cmp
data16
jno
add
sub
sahf
call
pop
fucomi
popa
mov
test
arpl
sar
bound
or
and
sub
scas
femms
jno
mov
push
push
pop
sbb
add
jo
ds
jmp
or
pop
repnz
xchg
dec
sahf
mov
das
scas
and
mov
mov
sbb
ins
fldcw
pop
out
dec
push
test
jnp
add
leave
dec
aad
in
mov
xor
cmp
and
cld
jg
mov
cmps
push
jl
out
adc
clc
mov
(bad)
dec
inc
hlt
pop
inc
std
inc
inc
adc
sbb
or
pop
jecxz
sbb
cmps
imul
xor
pop
jb
daa
xchg
dec
stc
pop
or
shl
idiv
mov
jecxz
pop
test
mul
push
mov
sahf
or
pop
mov
xor
add
xchg
nop
jns
hlt
pop
fmul
call
add
xor
inc
jbe
retf
lock
fld
push
sahf
pusha
jge
pop
loop
inc
mov
imul
xchg
sub
cld
pop
push
mov
pop
jp
movs
mov
jge
xor
cmp
add
and
adc
or
movs
cmps
pop
jae
ss
inc
lds
inc
ds
fild
xchg
cld
loop
stc
push
mov
mov
push
cld
jmp
lds
aas
sub
jae
les
jmp
setbe
gs
dec
push
mov
and
jmp
ja
adc
and
sub
retf
mov
ins
and
mov
nop
(bad)
inc
jmp
call
mov
bnd
mov
int3
inc
sbb
(bad)
pop
jo
xchg
int3
outs
rcl
int3
mov
and
sub
call
shl
ret
enter
fld
lock
pop
inc
jecxz
dec
in
jns
dec
mov
xor
das
imul
jmp
sub
pop
push
jg
pop
loopne
fdivp
jns
std
mov
jbe
and
push
mov
and
cmps
push
sub
xor
sahf
nop
(bad)
or
fninit
lods
mov
mov
sbb
cmc
xchg
jmp
lods
sti
mov
ja
xchg
(bad)
fisub
dec
retf
ja
dec
xchg
push
jno
popa
xchg
ret
(bad)
sub
popa
int
mov
sub
cmp
imul
sub
mov
out
adc
or
arpl
dec
push
and
mov
fisubr
xchg
mov
jecxz
hlt
jmp
int3
sub
inc
fwait
push
fwait
clc
mov
add
adc
adc
cmc
jo
jb
inc
jg
test
inc
dec
stos
call
jge
xor
dec
sti
cmp
xchg
(bad)
push
es
aad
mov
ret
cmp
in
or
aam
adc
jmp
cs
scas
(bad)
pop
sbb
dec
mov
jae
push
adc
test
fstp
pop
ret
into
xchg
cld
stc
mov
or
out
loopne
adc
ret
xor
mov
jmp
sub
pop
or
movs
ror
mov
std
std
fld
cmc
mov
cmp
mov
out
jns
and
jns
push
rcr
stc
mov
inc
mov
add
or
es
sbb
aam
mov
(bad)
hlt
cmps
mov
mov
ja
in
push
leave
push
out
ins
xor
in
outs
mov
add
mov
push
xor
loope
xor
in
dec
iret
mov
les
inc
pushw
mov
fcom
mov
mov
add
jl
bound
adc
sub
push
aam
inc
out
icebp
mov
and
jb
out
push
mov
test
sub
fimul
leave
xor
xchg
xchg
lods
lods
pop
hlt
push
hlt
xchg
aaa
add
or
mov
xchg
mov
fild
inc
xchg
loopne
jmp
fild
mov
(bad)
jp
sti
xchg
push
push
jl
lods
loope
ins
ja
daa
nop
jo
aam
test
lea
mov
dec
sbb
ja
out
dec
xor
imul
adc
push
jmp
lock
shl
push
jp
xchg
pusha
or
(bad)
stc
test
scas
(bad)
jmp
mov
(bad)
sbb
dec
and
mov
(bad)
pop
ja
jb
mov
jp
ror
xchg
xchg
(bad)
test
dec
mov
in
sbb
nop
and
mov
in
mov
aad
imul
jle
bnd
frstor
add
in
xchg
lahf
mov
hlt
inc
shl
neg
and
rcr
retf
jg
inc
out
xor
jecxz
(bad)
daa
adc
fwait
es
push
stos
inc
xor
sub
or
jno
or
adc
(bad)
cs
retf
push
(bad)
std
adc
or
scas
jecxz
jmp
pusha
cmp
lock
mov
fwait
in
jle
aaa
sahf
int
jp
push
adc
mov
(bad)
cmp
retf
cdq
and
mov
test
xor
neg
aas
in
xor
dec
in
xchg
inc
retf
bound
mov
adc
push
jo
stc
mov
imul
add
mov
mov
ins
add
test
ins
sbb
jo
xor
stos
lods
or
outs
sahf
adc
enter
fwait
add
mul
aad
xchg
cmp
stos
inc
ja
test
setg
inc
pop
lea
fistp
push
imul
push
shl
sub
sbb
push
ret
das
cmp
mov
or
add
jmp
mov
jne
retf
jge
imul
sahf
aam
mov
test
sar
sbb
sub
into
jns
push
xchg
or
xor
lds
cmp
lock
or
in
add
lods
xor
mov
pop
clc
mov
dec
ss
mov
sbb
mov
dec
clc
pop
xlat
das
push
sbb
inc
sbb
aaa
inc
aad
hlt
jmp
push
mov
sub
ins
mov
lock
inc
aam
mov
xchg
clc
mov
fbstp
sub
xchg
push
xchg
push
mov
loop
fcomi
test
adc
out
cmp
push
stos
retf
repz
dec
shr
mov
pop
jg
cmc
(bad)
call
or
cmp
adc
xor
jbe
stos
add
inc
add
addr16
(bad)
xchg
push
sub
inc
fst
loop
xor
stc
sti
outs
jnp
imul
add
push
pop
xchg
lods
cmc
call
dec
in
xchg
pop
loopne
ins
(bad)
or
leave
dec
xor
mov
mov
or
in
fisttp
pop
pop
sbb
jns
mov
popf
cld
sub
nop
enter
jge
or
bound
out
fst
fisubr
push
add
nop
cs
icebp
shl
xchg
or
jg
jmp
call
dec
not
adc
xchg
pop
cli
pushw
mov
push
aas
jb
fnstenv
repz
rol
(bad)
into
mov
dec
jmp
lods
lods
sbb
ret
push
popf
inc
push
mov
iret
push
and
pop
lahf
and
mov
leave
xchg
mov
xor
jae
cli
pop
mov
mov
jmp
aam
enter
(bad)
out
jg
ins
sti
stc
cdq
inc
sar
push
mov
repnz
lock
xor
adc
xchg
lds
pop
push
outs
call
sbb
mov
out
clc
jl
and
out
xchg
push
or
(bad)
xor
(bad)
jo
popa
xor
xchg
arpl
mov
inc
jns
invd
(bad)
(bad)
in
int
jo
jnp
sbb
and
test
pop
mov
ror
mov
jmp
adc
sbb
dec
std
movs
fnstsw
xor
xchg
pop
sar
or
enter
cmp
or
mov
rol
icebp
push
bound
(bad)
or
cwde
cmp
in
adc
jae
out
jno
into
shl
xchg
jmp
rcr
imul
pop
adc
sbb
jo
in
mov
push
mov
cld
push
aad
push
mov
mov
inc
repnz
sub
das
cs
mov
ins
jb
fwait
cmp
ret
fistp
dec
rol
jb
or
push
push
push
cwde
cmp
dec
rol
ror
jge
test
xchg
pop
sbb
fdiv
pop
repnz
(bad)
cld
in
add
lods
stos
pusha
or
push
and
sub
mov
std
scas
inc
jp
iret
scas
outs
loope
test
lods
jecxz
push
push
repnz
add
outs
test
not
stos
addr16
sbb
mov
addr16
cmps
mov
push
sbb
pop
nop
cmp
sbb
enter
xchg
inc
repz
sbb
mov
cmp
aaa
sbb
push
leave
pop
pop
mov
mov
icebp
mov
stos
add
adc
(bad)
nop
dec
out
rol
or
nop
repz
gs
lds
out
rcr
ss
lahf
push
(bad)
mov
jecxz
inc
adc
das
jno
mov
jnp
xchg
adc
lock
popf
rcr
sub
nop
and
sub
aas
cmp
xchg
cwde
popa
in
mov
xor
fdivr
pop
and
pop
sub
in
js
loop
and
inc
mul
cmps
pop
mov
fwait
xor
adc
rcr
add
adc
movs
idiv
retf
cmp
jb
adc
fbstp
enter
sbb
les
adc
daa
ja
mov
aad
and
pop
xchg
stc
or
ds
and
fdiv
cmps
lods
sbb
xor
cmp
movs
add
inc
add
icebp
push
and
mov
out
fmul
mov
stos
(bad)
test
and
xchg
gs
mov
fiadd
popa
push
mov
ins
loop
add
inc
mov
movs
repnz
pusha
dec
mov
push
aam
push
fst
int3
lods
inc
mov
cmps
push
xchg
mov
lods
sar
sbb
sub
sti
loop
(bad)
sbb
int3
cld
adc
mov
in
les
mov
xlat
cld
or
bnd
sahf
cmc
cld
dec
xlat
or
dec
mov
or
and
sub
jg
or
sbb
mov
mov
call
mov
or
mov
push
jbe
ins
imul
mov
scas
out
ret
in
add
mov
inc
xchg
xor
sbb
rcl
mov
xchg
rol
test
dec
sbb
addr16
sbb
jmp
or
(bad)
pavgb
or
aam
fs
lods
jae
lahf
cmp
pop
movs
xor
or
jbe
jecxz
in
mov
push
int
fst
sbb
and
or
jnp
(bad)
push
pop
pop
cmpxchg
stos
les
in
es
adc
jmp
shl
ret
out
movs
pop
aas
mov
push
out
xor
ds
rcl
sub
sahf
int
mov
jg
rcl
fcom
sbb
int
push
leave
dec
ins
ret
cmp
mov
sub
stos
je
(bad)
or
test
add
mov
mov
jl
sbb
add
pop
retf
dec
lds
out
xchg
or
nop
jmp
imul
(bad)
xchg
std
ror
retf
imul
loop
sbb
inc
mov
jge
aad
pusha
jmp
push
or
pop
iret
mov
mov
and
lahf
mov
in
(bad)
loop
dec
mov
add
outs
scas
xchg
sub
cmps
and
add
mov
daa
jp
inc
fisub
les
pop
inc
or
arpl
enter
push
mov
ds
fld
cmp
jbe
aas
cmp
arpl
mov
fstp
sub
(bad)
cmps
pop
lds
in
(bad)
pop
and
jnp
mov
fsubrp
sbb
xchg
scas
(bad)
hlt
mov
aaa
and
iret
lock
aad
aam
loopne
lods
inc
cmc
into
or
push
sub
cmp
ror
pop
inc
sub
jns
std
ret
push
xchg
cmp
daa
mov
mov
ds
mov
out
jl
add
cmp
sbb
pop
mov
pusha
pminub
jmp
jns
aas
push
out
popf
dec
icebp
inc
xchg
scas
iret
inc
lahf
sar
jmp
add
dec
mov
push
and
and
nop
jmp
push
(bad)
aam
xor
add
adc
push
mov
or
bound
and
je
sub
lods
mov
xor
mov
scas
xchg
(bad)
into
enter
pop
push
inc
cs
cmc
repz
cli
cld
mov
aad
pop
retf
test
imul
mov
inc
jb
mov
retf
mov
ins
cmp
xchg
imul
rcl
je
adc
or
(bad)
movs
stc
sub
pop
in
retf
add
pusha
xchg
jp
stos
jge
test
cmp
int3
dec
daa
idiv
push
mov
pop
dec
inc
sub
ja
rcr
(bad)
repnz
(bad)
loop
(bad)
pushf
movs
jg
movs
ret
sbb
mov
mov
add
movs
std
icebp
push
rol
cmps
iret
pop
out
adc
pop
fdiv
sub
jae
add
inc
inc
fnstsw
lock
pop
popa
loopne
mov
iret
mov
mov
and
in
ds
adc
mov
pop
fistp
sti
xchg
and
in
js
pop
pop
out
xchg
loop
and
inc
push
mov
push
fld
dec
sbb
cmps
enter
xor
dec
sbb
xchg
dec
(bad)
push
xchg
mov
xor
push
adc
lods
daa
out
sub
(bad)
stos
test
test
mov
fsubr
xor
js
int
mov
mov
in
out
outs
jl
stos
pop
and
adc
sub
inc
pop
mov
sub
xor
out
out
imul
lock
outs
adc
into
cmp
jecxz
and
dec
imul
add
cdq
(bad)
les
mov
not
jns
pusha
xor
(bad)
jmp
addr16
mov
inc
fs
fwait
outs
push
xor
mov
add
adc
movs
xor
leave
push
mov
sbb
shl
loope
je
mov
jbe
dec
mov
mov
je
cmp
nop
cmc
mov
xor
aaa
mov
xchg
jb
ficomp
ins
inc
aaa
xor
dec
sbb
fisubr
jns
xor
dec
movd
push
mov
jb
sbb
rcr
fdivr
mov
mov
xor
and
cmps
icebp
test
xchg
sbb
fdivr
inc
pop
sub
jbe
dec
stos
fwait
repz
cmp
and
in
mov
ret
ins
cwde
mov
add
sbb
imul
mov
retf
push
dec
cmp
mov
(bad)
pushf
movs
adc
add
jns
std
or
and
rcl
fiadd
mov
push
cmp
sbb
or
shl
xor
push
(bad)
repnz
jmp
jb
stos
in
push
ins
call
sbb
gs
in
and
xor
inc
mov
jnp
rol
and
xchg
lods
mov
mov
sti
mov
shl
mov
call
ja
inc
cmp
fcmovnbe
inc
cdq
pushf
xor
push
out
(bad)
push
mov
outs
lods
fild
pushf
mov
push
dec
mov
in
sbb
mov
fsincos
rol
mov
aad
jmp
cmp
and
mov
aaa
pop
and
pop
lds
aad
xor
mov
inc
in
push
addr16
cmp
leave
sar
mov
dec
mov
jno
mov
pop
mov
and
ss
int3
sti
inc
js
sub
dec
add
mov
sar
sbb
sbb
jns
inc
cld
addr16
cwde
mov
push
std
inc
adc
mov
mov
xchg
push
mov
or
gs
std
cmp
adc
xor
or
cmp
rep
retf
cdq
xor
add
dec
xlat
xchg
sub
mov
loop
cwde
jno
popa
inc
push
lock
aad
ja
pop
std
lea
out
stos
test
inc
fisub
daa
clc
sub
mov
test
adc
push
addr16
daa
dec
test
pop
(bad)
push
fisub
cli
retf
and
imul
bnd
mov
into
(bad)
xchg
xor
imul
retf
shr
stc
dec
sbb
add
push
idiv
aaa
aad
or
inc
pop
mov
cmp
das
jmp
pop
scas
jge
pop
dec
xor
xor
mov
fmul
add
mov
clc
ja
mov
add
jb
push
ret
icebp
cmps
jbe
xor
jno
loope
out
leave
jecxz
icebp
fwait
aas
or
loop
fld
push
cmp
xchg
nop
xchg
sbb
push
pop
inc
gs
cmp
or
push
in
or
mov
(bad)
icebp
loope
mov
inc
fadd
sar
pop
xchg
or
loopne
cwde
mov
jmp
fisub
stos
out
and
push
inc
cmp
push
lahf
and
sahf
sub
(bad)
sbb
push
cmp
and
xor
inc
fucom
mov
mov
lds
inc
test
sub
push
push
dec
mov
xchg
je
(bad)
arpl
(bad)
setae
push
inc
sub
lock
imul
push
and
jnp
pop
mov
dec
xchg
int
xor
add
xor
mov
fcmovb
adc
pop
cli
adc
push
mov
lds
leave
imul
lea
mov
fs
xor
iret
pop
mov
mov
mov
inc
inc
rcr
call
aaa
pop
mov
dec
loopne
pop
cmp
imul
adc
scas
jecxz
sar
out
ret
out
fcomi
lods
adc
xor
rol
add
sub
in
rol
mov
sbb
lock
push
dec
pusha
pop
sti
jle
cmp
jmp
xor
jo
(bad)
jne
test
scas
cwde
add
out
retf
fstp
lds
add
mov
sub
jae
or
push
fld
icebp
cmp
aaa
adc
fstp
add
imul
ror
mov
test
pop
pop
sar
and
mov
push
xchg
call
movd
lea
test
loopne
ins
repz
xchg
aaa
movs
dec
push
call
sti
into
out
gs
jecxz
shr
not
test
int
lods
push
cmp
fst
sbb
jp
push
leave
test
(bad)
mov
es
push
dec
repnz
ret
(bad)
fstp
push
mov
xor
in
pop
inc
vunpckhpd
or
cdq
xchg
aas
push
rcl
inc
sbb
icebp
imul
mov
mov
jmp
push
sbb
stos
movs
mov
test
clc
iret
and
sbb
ins
mov
test
in
call
das
idiv
leave
sbb
xor
jmp
fsub
sub
jb
fs
movs
pop
int
gs
inc
fsub
cld
xchg
je
dec
pop
mov
dec
pushf
js
xchg
push
push
sar
fld
cmc
push
aaa
(bad)
aas
dec
jno
pop
mov
cmps
push
das
in
add
lea
fstp
inc
int
sub
lods
xchg
cmp
dec
mov
jbe
dec
pop
pop
cwde
js
xchg
loope
mov
rol
int3
jmp
mov
add
sub
je
mov
mov
add
sti
movs
jbe
aam
iret
push
int
rol
adc
cmc
ja
retf
and
jno
jmp
test
dec
loopne
xchg
cmp
xor
push
pop
mov
stc
aaa
loopne
cmp
lds
mov
and
xchg
repz
jmp
push
sub
mov
pop
pushf
xor
jge
lea
ds
dec
js
in
mov
xor
mov
dec
addr16
ss
and
cld
mov
out
scas
test
fdivr
ja
arpl
ss
xor
test
pusha
fsubr
jg
sbb
pop
repnz
xor
mov
loopne
loope
lods
mov
inc
xchg
fdivr
retf
sbb
retf
in
aaa
(bad)
lea
xor
bound
cmps
inc
sahf
dec
ffreep
cmp
cmp
add
pop
or
xlat
loop
xchg
jnp
inc
adc
or
pushf
inc
inc
inc
ret
xchg
sti
pusha
imul
pop
jp
xor
sbb
xor
mov
jge
push
sbb
push
fnstcw
mov
pop
push
ins
cli
bound
cmps
mov
stos
xchg
sub
sbb
mov
sub
arpl
jp
mov
sti
or
jne
loop
sbb
add
(bad)
inc
outs
lahf
mov
bound
mov
sbb
push
push
fs
mov
dec
and
add
fst
push
ins
loope
sub
cmp
or
fsub
addr16
inc
mov
or
stc
mov
leave
daa
jge
push
push
arpl
fmul
push
es
xor
not
je
push
outs
iret
pop
adc
into
gs
adc
pop
fwait
sub
or
sbb
scas
sbb
loop
shl
cld
inc
sub
push
(bad)
inc
push
iret
mov
out
jbe
inc
jg
rol
jb
xchg
popf
pop
xchg
xchg
loop
add
cmp
adc
xchg
or
shl
or
xchg
dec
into
inc
sbb
mov
loopne
inc
leave
adc
push
imul
imul
bound
push
shl
add
icebp
fdivrp
fmul
xor
cmp
test
js
out
(bad)
leave
or
ds
mov
sbb
and
out
cs
cmc
push
add
popf
mov
and
cmp
push
jae
in
loope
sub
pop
in
mov
stc
pop
rol
jbe
mov
adc
pop
add
repnz
or
fwait
lock
jo
add
idiv
push
inc
push
cmp
push
sahf
inc
jns
jl
and
test
mov
js
aaa
test
ss
pop
loopne
fs
add
cld
popa
pusha
sbb
sbb
mov
or
dec
jmp
jmp
mov
ins
outs
adc
ss
adc
xlat
shl
adc
cmp
int3
inc
adc
in
cmps
outs
(bad)
sub
es
mov
call
mov
dec
mov
dec
stos
sub
push
sub
sbb
repz
ror
(bad)
mov
cdq
aaa
inc
jg
add
adc
repz
pop
(bad)
out
mov
cmp
out
leave
popa
scas
out
mov
mov
mov
mov
cs
retf
push
inc
jb
jge
jmp
mov
addr16
xchg
inc
mov
fwait
and
dec
bound
adc
mov
fnstcw
cmps
push
push
cld
cmp
jno
stos
std
xchg
sub
retf
push
or
jl
xor
clc
sbb
jne
and
loop
pop
jge
mov
sub
add
xchg
arpl
out
movs
inc
outs
pop
mov
lock
or
jecxz
push
xchg
jno
xchg
movs
call
sti
mov
leave
sahf
dec
mov
test
xchg
mov
dec
loope
lods
test
mov
cmps
sub
push
inc
xchg
fwait
sub
adc
or
imul
lods
movs
push
jnp
mov
jmp
movs
mov
iret
xchg
call
clc
ret
pop
ja
jp
or
cmp
sub
imul
pop
ret
and
xchg
push
xchg
inc
fadd
mov
pop
cmp
loop
lods
movs
add
dec
sbb
push
lods
call
or
lahf
outs
or
mov
movs
cli
loopne
push
adc
movs
push
adc
jbe
cmp
xlat
div
shr
test
push
ins
or
lods
pop
inc
(bad)
adc
sti
push
mov
mov
push
dec
inc
rol
mov
jecxz
add
retf
add
push
or
ds
cmp
cmp
mov
mov
jecxz
xchg
and
mov
sbb
int
sub
dec
nop
in
push
xor
scas
pop
arpl
popf
movs
loopne
mov
shl
mov
shr
lods
sbb
popa
cld
scas
fwait
ins
push
and
adc
in
inc
xor
lds
rcl
jae
dec
mov
cmp
aas
arpl
fsubr
test
hlt
cmp
xchg
shld
(bad)
pop
es
pop
inc
bound
and
sbb
ja
fisub
mov
jae
dec
inc
push
xchg
mov
sar
and
arpl
dec
jae
test
adc
sbb
jl
dec
test
test
pop
adc
jmp
and
sbb
jno
outs
mov
clc
ror
data16
push
and
bound
inc
mov
dec
sbb
cmp
sbb
(bad)
and
mov
push
into
fsub
dec
cmps
push
in
adc
cmp
in
xchg
pop
test
dec
mov
adc
adc
loopne
dec
push
ret
mov
inc
push
test
ds
popa
adc
cld
ja
(bad)
aam
and
lea
imul
icebp
das
mov
mov
loopne
ret
or
aaa
push
xchg
sub
icebp
jo
jns
cmp
add
fwait
or
and
lock
call
or
and
pop
lods
arpl
jmp
xchg
test
adc
jne
inc
fs
inc
fcomp
and
mov
pop
xchg
lahf
cmp
xchg
stos
mov
and
adc
cmp
in
(bad)
les
(bad)
xchg
ror
xchg
sbb
xchg
lods
lds
(bad)
mov
add
xchg
xchg
or
pop
sbb
scas
inc
aad
xor
push
mov
jbe
inc
lods
adc
sbb
ror
adc
mov
fnsave
push
fild
mov
push
fs
push
(bad)
jae
push
and
push
leave
push
mov
out
ret
pusha
mov
xor
ins
or
fucomp
lahf
into
je
ret
adc
push
sbb
js
jae
inc
aad
or
in
fwait
cmps
retf
or
jle
int
inc
fs
cmp
push
adc
movs
mov
out
dec
inc
add
sub
out
mov
cli
xor
stos
ds
pushf
addr16
call
gs
jecxz
push
or
sahf
xor
enter
mov
mov
inc
fild
jmp
lds
pop
hlt
repz
jmp
jg
cmc
sub
mov
pop
lahf
dec
fmulp
mov
daa
inc
lds
or
call
imul
mov
cmp
in
pop
sahf
xor
push
mov
mov
popf
imul
lea
outs
stos
jae
and
xor
mov
aaa
lock
mov
inc
pop
movs
jbe
mov
test
push
enter
cmps
ss
push
inc
sbb
push
sbb
cli
pusha
dec
sub
pop
popf
les
js
jmp
popa
mov
fist
test
inc
mov
stc
mov
jmp
in
mov
adc
int3
call
(bad)
mov
add
xor
movs
fst
xor
enter
pop
shr
in
loope
je
dec
std
imul
xchg
push
pop
std
ficomp
std
mov
push
(bad)
mov
pop
mov
out
les
sub
adc
adc
mov
push
jmp
mov
and
jo
and
jl
pusha
or
push
mov
xor
shr
fstp
pop
out
push
sbb
add
adc
cs
cld
shr
jbe
cwde
test
mov
mov
cmps
push
xchg
mov
sbb
daa
lods
ins
int3
or
loop
cmc
test
sar
adc
dec
outs
scas
ins
cmp
(bad)
into
addr16
xor
bound
in
inc
xlat
jmp
sbb
add
test
loope
mov
lods
stos
hlt
nop
jp
scas
add
add
stos
mov
dec
or
cmp
pop
or
icebp
(bad)
shl
dec
push
pop
out
push
sub
std
adc
popa
mov
adc
sub
jnp
ror
test
stos
jae
or
out
into
mov
es
adc
and
xlat
xor
sub
push
mov
out
mov
pushf
into
enter
fwait
dec
(bad)
iret
fldcw
dec
mov
pop
pop
inc
out
in
dec
push
data16
pusha
mov
mov
xchg
mov
fisttp
sub
(bad)
sahf
dec
rcr
movs
repnz
imul
xor
rcr
pop
call
ds
inc
push
mov
mov
sub
sti
cmp
xor
mov
outs
jmp
mov
dec
jle
xor
out
dec
inc
mov
pusha
addr16
inc
pop
leave
cmps
xor
xor
je
or
mov
xlat
lods
mov
dec
les
ret
jns
jmp
gs
(bad)
cdq
mov
sahf
dec
outs
jns
and
push
imul
shr
jl
xchg
xchg
loopne
in
inc
and
sbb
not
pop
cmps
inc
push
sub
mov
adc
sbb
ja
sahf
sbb
jns
fs
fldcw
dec
and
cmps
or
aam
sbb
xchg
cdq
cdq
jecxz
sub
dec
xlat
jnp
sbb
or
jo
mov
sbb
sub
ud1
cmp
inc
dec
dec
hlt
outs
and
push
pop
test
dec
mov
jbe
leave
add
cmps
daa
dec
fcomp
or
push
pop
mov
data16
or
xor
aam
in
dec
dec
mov
ins
leave
enter
cmp
mov
pop
call
xlat
sub
xor
aaa
or
fdivr
leave
sbb
pop
cmps
adc
lods
jl
setne
pop
xor
pushf
mov
mov
cs
jbe
std
xor
inc
add
jp
stos
(bad)
or
or
inc
jnp
retf
mov
fdiv
mov
je
or
jmp
pop
and
(bad)
ss
jo
cmp
mov
add
in
stc
int
pushf
dec
and
and
sub
in
fmul
push
loop
and
popa
xchg
int3
xchg
movntps
push
pop
inc
mov
xchg
out
loop
push
pop
pop
mov
xor
push
mov
push
sar
sub
mov
push
(bad)
xor
lahf
dec
mov
adc
dec
adc
dec
ins
jecxz
sub
add
push
btc
dec
(bad)
push
lds
xor
cmp
stos
mov
retf
call
mov
stos
pusha
adc
stc
cmp
xchg
clc
add
push
(bad)
(bad)
xlat
ret
and
xor
mov
jbe
mov
popf
xor
jge
fwait
dec
int
xchg
inc
ins
out
popf
pushf
out
fs
loopne
jb
mov
fwait
and
out
xchg
jo
pop
add
push
inc
jmp
dec
outs
ret
pop
jns
mov
add
mov
dec
xlat
cwde
or
pop
mov
fld
lahf
lds
mov
pop
dec
repz
fsub
jbe
std
aas
inc
mov
adc
sub
jmp
ret
mov
pop
in
out
js
xchg
xor
ficomp
in
test
dec
stos
fucomip
xchg
ret
push
das
and
or
xor
leave
pop
sti
push
in
lods
push
mov
push
mov
lods
daa
cld
mov
cmc
gs
loop
lods
or
stc
jno
aaa
bound
shl
test
(bad)
dec
pop
xor
ins
iret
cdq
sub
jp
adc
inc
dec
xor
in
repnz
jno
ret
and
cmc
fwait
cmp
jmp
adc
dec
(bad)
sti
leave
sbb
mov
pop
add
sar
xchg
cmp
or
jno
push
stos
mov
push
ins
aam
mov
jns
shr
aam
rcr
add
mov
dec
cwde
or
jnp
retf
mov
and
push
sub
ret
cmp
loop
pop
es
xchg
and
ja
pop
inc
rcl
jmp
sub
or
push
cmps
inc
adc
push
leave
scas
(bad)
call
sub
sti
aas
mov
es
mov
pop
loopne
jne
push
or
ret
sbb
fcom
inc
mov
lea
(bad)
ficom
push
sar
out
cmp
push
test
fwait
jae
nop
xor
sahf
stc
fnstcw
adc
ret
adc
cmps
mov
repz
push
and
jg
push
xchg
lock
sub
retf
cmp
cmp
inc
call
rcr
jnp
cmps
fmul
data16
xor
and
jmp
test
add
sub
adc
inc
iret
psubusw
jmp
sbb
call
iret
mov
cld
push
pop
retf
jl
(bad)
fidiv
adc
or
adc
dec
(bad)
xchg
cmp
test
mov
aaa
jge
ss
push
jp
inc
sbb
adc
or
inc
mov
int3
or
sar
jecxz
inc
nop
xchg
jecxz
mov
dec
xor
and
(bad)
jne
push
loopne
and
sub
fisttp
mov
xchg
xchg
xchg
ret
mov
jecxz
add
in
mov
arpl
inc
jge
stos
dec
mov
mov
pop
mov
ja
stc
fistp
aam
xchg
push
pop
adc
in
lea
mov
xchg
jge
mov
inc
mov
gs
mov
jl
mov
jnp
cmp
mov
rol
push
add
fxam
xor
dec
cld
push
(bad)
dec
test
mov
jl
mov
outs
and
rol
mov
xor
mov
xchg
inc
(bad)
std
ins
ret
jnp
ins
lds
lods
sbb
addr16
fst
cmp
or
push
cmp
pop
mov
jl
hlt
shl
mov
aad
mov
inc
mov
xchg
add
cmp
and
xlat
int
sub
imul
fwait
cmp
pop
and
pop
cwde
and
xor
xor
aam
xchg
popa
xor
fcom
push
fwait
mov
adc
jecxz
ds
in
dec
rcl
add
nop
lds
mov
dec
pop
sbb
xor
jb
or
fstp
sbb
adc
repnz
in
rol
stc
or
jecxz
push
push
pop
(bad)
test
and
scas
retf
jp
mov
cmp
aaa
inc
mov
add
xchg
mov
sub
xchg
xchg
adc
icebp
gs
out
sub
clc
and
mov
inc
movs
push
xchg
mov
cmps
ja
push
test
in
clc
ror
gs
add
aaa
mov
pop
aas
push
sbb
test
div
mov
pop
aaa
imul
dec
ins
and
aaa
or
aad
rol
rcr
pop
sbb
jmp
xchg
cmps
lahf
lea
jle
push
pushf
sub
in
pop
mov
movs
mov
dec
int
xchg
jo
push
bound
popa
sub
jmp
xor
jns
sbb
jge
adc
fisubr
out
pop
inc
xchg
pop
sti
daa
push
add
loop
sbb
jmp
add
xchg
push
int3
and
inc
pop
pop
cmp
int3
in
or
push
repz
addr16
mov
fild
aam
hlt
cmova
mov
cmp
enter
jbe
mov
leave
push
aas
cmp
push
outs
sahf
sbb
es
and
or
xchg
sar
mov
cmp
xor
or
push
outs
inc
sbb
fild
or
push
cmp
jecxz
push
mov
add
mov
mov
xor
ret
mov
scas
dec
aas
pop
cdq
add
out
ss
ret
dec
cmc
add
push
ficom
and
cmc
xchg
int3
or
popa
adc
dec
aaa
ret
or
lds
outs
mov
mov
sub
rcr
xlat
adc
das
ins
aaa
stc
cmp
cld
fiadd
sub
in
lock
adc
sti
icebp
mov
pop
xor
pushf
lods
outs
retf
jb
mov
pop
movs
add
add
aaa
ja
jmp
or
inc
movs
neg
mov
or
cld
sub
cdq
in
loope
sbb
push
lods
mov
out
ss
jnp
std
cli
and
sbb
(bad)
clc
retf
nop
fcomp
pop
aaa
das
or
js
push
aam
es
cmp
mov
out
mov
mov
(bad)
adc
and
pop
in
mov
cmp
cdq
and
loope
jge
jbe
std
push
mov
xchg
dec
jmp
sub
and
arpl
sub
(bad)
pop
(bad)
es
leave
push
xlat
into
inc
xchg
mov
cld
pop
es
sub
mov
enter
push
pop
scas
mov
adc
clc
mov
mov
cmps
aam
int
mov
fxch
mov
bound
ja
cdq
jo
xchg
ins
cmp
push
(bad)
or
xchg
outs
inc
inc
jae
and
mov
and
adc
inc
daa
fnsave
dec
imul
sbb
out
daa
lea
aas
jne
ffree
adc
and
jmp
fcom
loopne
fisttp
jge
adc
loope
or
sbb
in
mov
jb
dec
test
mov
inc
jae
cmp
sub
loope
cli
popa
and
repnz
in
xchg
leave
fxtract
mov
adc
mov
lea
(bad)
pop
paddusw
mov
cmc
fcom
jo
mov
xor
adc
jecxz
daa
push
hlt
cmp
sar
rol
jno
jo
inc
cmp
imul
fidiv
mov
retf
dec
cmp
xchg
xor
dec
jge
push
rcl
in
jge
das
ror
push
xor
idiv
cs
into
cmp
fld
popf
pop
sub
dec
mov
xor
xchg
enter
std
pop
(bad)
out
mov
es
jg
adc
mov
(bad)
outs
cs
xchg
sahf
sub
scas
aam
xchg
mov
sbb
scas
mov
xchg
sti
lds
lock
mov
ins
fst
cmp
or
dec
xor
(bad)
xchg
pop
mov
cmp
nop
push
fdiv
mov
pusha
nop
leave
icebp
int3
add
jno
pop
call
loope
add
ins
push
jmp
sbb
jp
cmp
sub
std
sub
fstp
cmp
int
fisttp
xchg
lods
xchg
test
cmp
xchg
add
ret
hlt
pop
jle
sbb
xor
fsubr
out
mov
xor
fst
leave
nop
ss
inc
movs
mov
pop
in
test
mov
jno
mov
xor
scas
pop
retf
scas
loopne
dec
in
loope
lods
in
and
add
fdivr
sub
fsub
pop
outs
add
push
adc
cld
push
cmp
jg
call
add
dec
xlat
sti
adc
in
jl
dec
aam
cmps
dec
(bad)
push
push
mov
ret
icebp
icebp
dec
lds
push
push
sbb
test
fst
push
mov
mov
rol
jb
jo
and
pop
mov
pop
xor
sbb
loopne
sbb
dec
fsub
test
repz
inc
stos
sar
aad
mov
cld
test
mul
and
nop
mov
push
cmovnp
mov
popf
pop
mov
cli
pop
dec
add
out
sahf
mov
and
in
or
dec
daa
mov
shl
add
icebp
lea
adc
push
and
(bad)
outs
retf
ret
sbb
mov
lods
shl
pop
out
ins
stc
out
xchg
dec
sbb
jne
push
fcom
adc
push
jbe
cld
mov
and
mov
jae
enter
fld
adc
xchg
addr16
adc
outs
jae
jmp
fdivrp
xchg
jecxz
inc
xor
(bad)
(bad)
in
mov
or
outs
xor
adc
cld
or
inc
pop
jp
nop
mov
es
xchg
or
xchg
or
dec
push
mov
or
add
xor
shr
les
scas
daa
cmp
imul
and
jno
test
(bad)
aam
push
enter
les
adc
cmp
push
cmp
sub
in
sbb
movs
jmp
stc
or
or
cmp
std
sub
jne
jbe
add
jmp
call
(bad)
(bad)
push
jle
xchg
movs
in
sbb
aam
(bad)
pop
test
inc
mov
aad
ret
xor
push
adc
or
jp
mov
jecxz
stos
cmp
and
mov
cli
and
jnp
cwde
mov
xlat
jl
inc
mov
mov
or
fwait
xchg
mov
imul
push
fs
cli
sar
scas
in
cmp
sbb
push
cmp
fcmovnbe
mov
pop
in
imul
push
ret
xchg
push
pop
call
je
sbb
adc
pop
jmp
push
out
inc
xor
je
mov
in
pop
xor
mov
dec
pop
jmp
aad
xchg
mov
fdiv
push
js
cwde
xor
fidivr
fsubr
jb
aaa
stos
add
mov
shl
inc
adc
sub
mov
mov
enter
test
nop
mov
std
mov
loopne
mov
fldl2e
push
test
push
sub
mov
rcl
pop
rol
lods
mov
ss
adc
(bad)
movs
addr16
pop
jmp
push
bound
adc
(bad)
retf
xor
jmp
test
adc
push
and
push
nop
adc
sbb
repz
sbb
jecxz
pop
(bad)
jp
shl
push
int3
xor
imul
jecxz
jb
dec
inc
out
jecxz
inc
ret
je
dec
dec
mov
aaa
mov
adc
xor
mov
xor
dec
push
cmp
xchg
lock
test
addr16
jnp
cwde
jo
inc
adc
jmp
fldenv
xchg
cmp
lock
lods
pop
push
mov
sbb
dec
test
dec
inc
(bad)
jle
stc
or
cmovnp
cwde
mov
iret
xchg
inc
imul
and
in
iret
cmp
jg
adc
mov
lds
mov
dec
jecxz
out
stc
retf
sbb
sub
or
fmul
pop
in
and
test
xlat
repnz
movs
inc
in
xor
dec
ins
sub
adc
mov
sbb
pop
mov
movs
popa
fmul
or
(bad)
mov
xchg
xor
iret
or
jae
lahf
loop
mov
xchg
xor
fcom
nop
xchg
jl
call
bound
adc
push
fdivr
out
xchg
sbb
jmp
xlat
xlat
movs
dec
xor
enter
pop
fidivr
popf
jle
fist
ds
cmp
jecxz
(bad)
jmp
sbb
or
mov
loope
and
pop
jno
js
cdq
jnp
and
mov
xchg
pop
lods
das
stos
arpl
cmp
(bad)
sub
sbb
comiss
aam
jno
or
dec
sbb
xlat
stos
mov
xor
(bad)
in
fucomp
mov
dec
out
iretw
sub
mov
jno
ss
fcomp
sbb
cmp
pop
mov
and
add
fstp
popa
add
test
sbb
addr16
data16
icebp
mov
xchg
sbb
fisttp
fisubr
inc
sahf
outs
adc
out
shl
scas
push
xchg
rcl
stos
mov
stos
xor
or
adc
outs
dec
sahf
rcr
xchg
xchg
aad
lods
mov
sbb
sbb
mov
adc
push
in
test
dec
inc
pop
sub
mov
add
fnstcw
dec
mov
pop
sub
sahf
xor
(bad)
fimul
mov
fldcw
addr16
dec
ficom
and
xchg
pusha
rcr
repnz
icebp
lahf
mov
cmp
shl
iret
jl
pusha
gs
push
pmulhuw
cld
push
or
lock
sub
push
sbb
loope
push
or
mov
sbb
xchg
enter
test
es
hlt
mov
js
or
into
mov
jl
mov
cmp
pop
into
push
ret
fdivr
sbb
leave
sbb
dec
or
ret
(bad)
dec
repz
mov
sbb
jl
mov
or
jb
inc
test
stc
in
jge
jl
iret
inc
or
lods
push
adc
fstp
add
push
inc
hlt
rol
pop
push
sbb
int
and
imul
and
and
jge
in
cmc
test
mov
(bad)
mov
out
lea
xor
lds
(bad)
test
loopne
inc
cmp
cmc
sub
xor
adc
pop
call
iret
pop
push
fmul
mov
out
ss
outs
js
in
xor
sbb
or
test
mov
movs
loope
mov
scas
sbb
inc
jbe
mov
pop
ins
jb
inc
sbb
push
lods
mov
jnp
outs
dec
rol
inc
lds
inc
mov
gs
jmp
es
shl
scas
bound
call
(bad)
fcomp
test
push
movhps
(bad)
nop
xchg
aad
mov
xor
mov
jns
outs
stos
xchg
jmp
mov
cmp
dec
sbb
cs
mov
outs
jg
mov
(bad)
ins
xlat
pop
sub
fist
sahf
cmp
mov
iret
div
ins
rol
xchg
add
and
gs
outs
call
sub
loopne
jp
cli
es
aad
adc
push
sahf
push
call
movs
ret
inc
dec
dec
add
sar
popa
xchg
push
stos
fs
outs
stos
jmp
icebp
stos
outs
sub
outs
ja
add
leave
out
xchg
test
pop
cld
xchg
jo
sub
mov
mov
js
and
mov
adc
lahf
add
test
shl
mov
push
pop
call
jnp
sub
int3
aad
rol
aaa
rcl
adc
push
and
in
(bad)
mov
push
mov
sbb
mov
pop
xor
std
and
mov
jl
cmp
dec
aam
(bad)
test
push
sbb
(bad)
xlat
inc
or
pusha
shr
les
call
mov
outs
loop
xchg
pushf
pop
or
xchg
bound
out
sub
xchg
imul
mov
shl
rol
dec
or
sti
and
inc
mov
fmul
scas
fcomi
dec
cld
cmp
repnz
(bad)
pop
cld
mov
scas
ds
xor
mov
pop
mov
xor
jge
mov
mov
adc
inc
pop
mov
mov
jbe
shr
jne
sub
aas
stos
push
cmps
daa
js
sub
aas
lds
dec
cmps
cmp
mov
idiv
xchg
xor
aas
cmp
jmp
jns
mov
test
adc
adc
and
stc
push
les
jnp
pusha
clc
inc
or
in
ds
mov
retf
lods
xor
push
shl
cmp
retf
jbe
sub
leave
pop
std
rcr
cmc
or
(bad)
sar
sti
jnp
in
sbb
je
rol
cmp
lahf
(bad)
test
in
arpl
pop
jge
lods
xor
mov
mov
imul
loope
out
sub
push
sbb
mov
sub
add
call
sub
mov
jns
mov
xor
movs
test
call
xchg
daa
(bad)
iret
xor
fisttp
loop
pop
xchg
xlat
leave
mov
adc
jns
pop
popf
sbb
lods
cmps
ret
arpl
out
sbb
jle
jmp
and
or
cmp
jmp
popa
pop
sub
push
cdq
jbe
lock
jle
movs
mov
inc
dec
sbb
(bad)
out
and
out
cmp
cmps
fist
mov
jmp
loopne
xchg
cmps
neg
push
shl
push
mov
dec
mov
call
daa
ror
cmp
mov
xor
aas
pop
mov
shl
sar
movs
xor
sub
test
sti
and
enter
jle
mov
popf
pop
fimul
dec
sbb
dec
xchg
push
and
or
push
clc
ins
int3
arpl
cs
jecxz
inc
sti
test
xchg
and
and
and
sub
dec
xchg
adc
repnz
xor
jno
pop
retf
inc
pop
mov
int3
sbb
pop
das
cld
out
jmp
(bad)
std
xchg
mov
imul
pop
sub
fs
and
pop
sub
mov
or
out
das
outs
mov
iret
xor
inc
(bad)
stos
cmp
cmp
icebp
sub
inc
call
push
lea
aaa
mov
xchg
jnp
movs
int3
xchg
push
aaa
imul
cdq
in
icebp
pmaxsw
in
loop
jg
call
mov
xor
inc
dec
xchg
ds
dec
add
fidiv
jmp
xchg
mov
mov
lock
fs
pop
(bad)
shl
mov
clc
xor
sub
pop
xchg
sbb
retf
(bad)
ficomp
dec
lds
or
cmp
dec
xor
cld
pop
sar
mov
or
cmp
push
dec
xor
(bad)
pusha
dec
ja
sbb
les
sar
iret
cwde
mov
dec
test
out
pop
repz
jb
in
dec
pusha
jle
(bad)
cld
add
xlat
pop
mov
addr16
pop
jge
and
ja
mov
rcr
call
mov
inc
push
enter
hlt
inc
pop
add
xor
sbb
outs
dec
stos
es
mov
sbb
and
dec
xor
hlt
add
call
push
int3
xor
adc
mov
mov
sysenter
pop
mov
retf
cmps
xchg
sbb
retf
(bad)
test
jmp
sub
xchg
lods
arpl
xor
xchg
jg
add
xchg
jno
(bad)
or
xchg
pop
pop
(bad)
movs
cli
movs
dec
sbb
in
jecxz
rcl
movs
repz
cmps
xor
jne
lods
test
mov
retf
adc
or
lods
mov
(bad)
movs
cmc
inc
jb
loope
sbb
stos
fsubr
(bad)
fwait
sbb
outs
jo
in
sub
cmps
lods
inc
and
jmp
iret
mov
xchg
(bad)
cmp
cmps
test
cmp
cli
addr16
sbb
and
inc
fldcw
jecxz
mov
rcl
xor
add
fcomp
mov
push
pop
in
scas
pop
or
push
push
add
pop
mov
retf
add
test
adc
mov
sub
call
xor
scas
mov
inc
xor
lds
shl
je
stos
stos
mov
cld
rcl
push
je
call
mov
push
enter
ds
fucomp
cdq
xchg
add
mov
(bad)
cmps
add
lods
mov
sbb
push
cmp
dec
lock
outs
cmp
mov
cmps
mov
ror
push
sbb
(bad)
sbb
dec
leave
push
test
sti
fcmovbe
icebp
js
xchg
movs
mov
cmps
test
pop
pushf
cwde
add
push
imul
add
xchg
retf
adc
shl
fimul
jecxz
fist
sti
xchg
fwait
jmp
fs
push
mov
sbb
dec
fstp
repz
cmps
btc
sahf
or
enter
mov
call
jae
jecxz
js
pop
or
sti
dec
dec
pusha
xor
(bad)
div
fwait
test
aam
adc
sub
adc
loopne
and
dec
jg
in
retf
ss
lock
in
xchg
push
sub
jae
std
xchg
cmp
xor
and
inc
pushf
push
lock
js
push
xchg
jl
mov
test
adc
(bad)
pop
retf
jne
push
xchg
ror
xchg
loope
cmp
ffree
movs
xor
push
int
xchg
and
jnp
shl
pop
inc
pop
xor
mov
mov
ret
or
jnp
xor
cwde
mov
shl
lahf
and
(bad)
adc
test
xchg
sbb
inc
loopne
xchg
pop
push
and
pop
clc
dec
loopne
push
and
fcmove
pusha
mov
cmp
push
sahf
mov
xor
aam
cwde
js
xchg
or
outs
out
adc
aam
std
push
cmps
cmp
push
inc
scas
outs
(bad)
mov
(bad)
enter
std
cdq
mov
add
fdivr
mov
or
rcr
xor
pop
push
js
call
add
xor
mov
jl
std
adc
das
and
dec
retf
sbb
cmps
sbb
inc
cmp
mov
sbb
icebp
cmp
push
es
addr16
sbb
ret
fistp
cwde
hlt
sbb
xchg
cmp
xor
outs
das
or
out
(bad)
adc
fstp
bnd
arpl
dec
outs
xchg
arpl
out
jle
mov
jecxz
in
mov
and
jo
(bad)
inc
ret
mov
test
loop
mov
cmps
shr
fcomp
push
in
icebp
jnp
outs
std
out
jp
repnz
(bad)
xor
inc
push
jmp
(bad)
js
(bad)
jecxz
jle
xchg
icebp
shl
in
or
xchg
xchg
cmp
push
gs
call
mov
shr
stos
repz
call
stc
pop
push
jbe
jp
in
ret
and
repnz
xchg
call
xchg
add
inc
pop
cli
lods
nop
xchg
push
shr
jmp
sbb
mov
fwait
push
cvtpi2ps
jl
cdq
jno
in
scas
cwde
in
pop
inc
and
adc
int3
fistp
aaa
mov
das
add
adc
outs
jns
push
(bad)
mov
loop
mov
mov
and
outs
in
rcr
popa
in
ss
and
mov
lahf
fild
dec
fxtract
add
in
ss
mov
inc
scas
hlt
jae
ficomp
(bad)
xchg
mov
inc
add
inc
lahf
cmp
jle
shl
mov
jp
ss
sub
cmp
dec
ss
and
jno
neg
clc
sbb
outs
enter
sbb
jp
pop
sub
xchg
(bad)
pop
push
dec
adc
mov
or
out
jb
push
cs
ret
and
dec
xchg
mov
pushf
js
pop
loope
sub
xchg
xchg
cmps
pop
jb
leave
mov
xchg
cmp
xchg
dec
pop
cmp
inc
sub
call
movs
js
xor
mov
jns
js
aam
jns
daa
mov
jno
push
and
jp
mov
jp
push
in
das
popf
in
add
xchg
mov
push
cmps
outs
out
div
rcr
hlt
sub
ja
xor
sahf
jp
lahf
jno
outs
mov
js
mov
jb
out
(bad)
mov
pop
cmp
mov
and
xor
mov
pusha
sub
call
push
jmp
sar
repz
cmp
int
call
mov
mov
xlat
inc
xchg
jae
vmread
in
test
mov
popa
xor
xor
jle
cmp
cmc
inc
shl
shl
pop
fbstp
icebp
in
fbstp
push
and
pop
(bad)
popf
int
adc
aas
cwde
xor
fisubr
push
and
nop
add
jle
jmp
(bad)
mov
mov
test
dec
(bad)
test
in
mov
shr
fnstsw
mov
push
xor
movs
add
pop
iret
iret
adc
fmul
out
das
xor
je
js
push
add
xor
test
adc
cmps
lock
add
dec
ss
icebp
adc
out
repnz
popf
adc
pop
and
and
adc
(bad)
(bad)
into
lea
mov
adc
sub
mov
mov
fld
mov
dec
pop
sub
xor
mov
jne
daa
into
mov
in
popf
mov
(bad)
fisub
jl
sub
(bad)
mov
lds
push
pop
(bad)
or
sbb
push
shr
(bad)
aam
(bad)
imul
xchg
mov
jno
fisub
mov
jns
push
xor
sub
retf
js
xchg
push
ja
out
adc
dec
out
rcl
mov
out
mov
sbb
ficom
out
xor
push
hlt
jecxz
sti
mov
cdq
xchg
or
outs
outs
repnz
test
aas
fwait
xchg
jno
push
sbb
fwait
daa
mov
sbb
jmp
or
or
daa
retf
(bad)
ins
fist
sub
adc
mov
mov
aam
or
pop
mov
loope
add
pop
(bad)
sub
dec
jne
popa
mov
pop
addr16
loop
stos
pop
lods
or
ficomp
adc
imul
das
pop
dec
jno
lock
retf
pusha
mov
sbb
jmp
(bad)
outs
lods
out
popf
push
out
mov
xor
mov
movs
lea
in
mov
les
pushf
sbb
cli
test
pop
cli
mov
push
ja
push
sub
aaa
lahf
dec
loopne
mov
add
ss
fisubr
push
and
mov
popf
loope
xchg
popa
inc
lods
push
scas
push
pop
ret
xchg
les
inc
add
mov
xchg
sbb
and
arpl
fs
mov
jns
inc
(bad)
add
xchg
(bad)
mov
popa
jae
imul
les
jne
fadd
aam
dec
mov
enter
push
mov
daa
mov
or
jns
sbb
shr
xchg
(bad)
push
les
jmp
push
pushf
test
mov
inc
dec
adc
sbb
loop
repz
out
mov
push
xchg
xor
ins
stc
xlat
add
mov
xor
mov
jecxz
js
mov
add
ret
rcl
mov
(bad)
xlat
and
push
loop
(bad)
shl
inc
jge
or
in
pusha
pop
call
dec
push
xchg
add
mov
push
jle
mov
cmp
sub
pop
push
ins
push
sub
mov
cmp
pop
cs
jnp
movs
stc
fs
and
mov
inc
mov
ja
jne
and
xlat
add
adc
add
test
pop
cmp
or
mov
aad
dec
rol
jmp
mov
movs
pop
loopne
push
add
(bad)
scas
gs
(bad)
pop
or
xchg
test
push
(bad)
das
xchg
sbb
and
aaa
aam
adc
mov
and
sbb
mov
sub
jbe
mov
jns
pop
sahf
retf
rol
mov
xchg
repnz
in
dec
inc
rcl
mov
fisubr
mov
push
das
add
repnz
pop
daa
fsubr
(bad)
dec
or
cmp
loopne
ret
sbb
inc
jne
mov
int
popf
mov
shr
push
bound
push
popa
fwait
pop
test
repz
xchg
shr
or
add
stos
adc
scas
test
mov
sub
dec
aas
mov
mov
sbb
ret
jne
data16
sahf
add
add
jmp
sbb
cmp
pop
add
xor
test
(bad)
push
cwde
out
mov
hlt
mov
pop
adc
or
arpl
mov
call
mov
adc
js
lock
in
mov
xor
xor
sub
jecxz
inc
mov
xor
aas
shl
movs
xor
xor
push
das
cli
pop
clc
dec
out
fisub
jge
data16
adc
mov
adc
inc
push
mov
and
icebp
jno
fld
xchg
mov
sbb
sbb
add
mov
jns
mov
or
gs
arpl
jle
enter
loope
repz
(bad)
loope
retf
inc
xor
shr
pop
cli
add
call
adc
push
push
cwde
imul
sbb
call
ds
sub
std
movs
sub
cli
fcomp
inc
shl
pop
fcmovbe
inc
enter
push
stos
test
xchg
lock
push
les
loopne
mov
retf
aam
cmp
ror
(bad)
xor
jns
pushf
cmc
aaa
es
xchg
rcr
out
jecxz
mov
mov
cmps
les
or
lock
outs
sbb
xor
sub
jno
or
mov
mov
pop
push
je
lds
mov
mov
cld
sub
fnstsw
mov
sub
pop
xlat
and
adc
daa
dec
in
clc
out
mov
loopne
fisttp
inc
cmc
out
mov
jbe
jnp
sub
sub
fdivr
mov
loop
lods
std
ret
jle
pusha
test
xchg
and
cmp
add
hlt
cmp
retf
inc
xor
jmp
data16
jge
push
loop
adc
mov
adc
lods
add
scas
fmul
mul
psllq
push
stos
(bad)
es
ror
je
push
dec
and
stos
pop
in
cmp
inc
bound
push
rcl
or
lods
and
inc
leave
push
dec
adc
das
mov
outs
mov
out
or
push
jge
xor
push
aas
add
push
or
enter
mov
jl
push
jmp
mov
fsubr
push
gs
(bad)
(bad)
jge
xchg
push
scas
xlat
pop
call
dec
and
test
mov
mov
clc
sbb
pop
push
inc
gs
adc
in
mov
inc
aad
push
cvtpi2ps
lahf
pop
lods
sbb
jl
aaa
pop
push
and
test
data16
rol
jo
xchg
fiadd
fwait
jl
mov
pop
add
scas
xchg
fisttp
cmp
adc
add
cmps
pop
out
xchg
jbe
xor
xor
sub
outs
dec
mov
(bad)
jmp
mov
test
dec
jns
fs
data16
mov
xlat
fistp
movs
or
jmp
shl
inc
xor
aaa
inc
cdq
mov
(bad)
cmp
jge
enter
rcr
ds
dec
adc
mov
jecxz
gs
dec
ss
inc
mov
int3
mov
cs
xchg
push
adc
cmp
not
sbb
lods
mov
pop
pop
loope
mov
cmp
outs
sbb
cmp
cs
repnz
push
xor
or
popf
pop
inc
std
retf
xchg
movs
(bad)
out
fild
pop
xchg
mov
mov
icebp
pop
mov
sbb
add
dec
sbb
and
cmps
pop
xor
jb
iret
rcr
leave
and
cmp
dec
shl
push
(bad)
sub
cmp
and
inc
test
adc
addr16
test
cmp
ud0
shl
add
and
out
rcl
sub
stos
fsub
pop
add
sub
xchg
or
in
sti
mov
sbb
or
pop
xchg
mov
enter
sahf
cwde
rol
or
xor
jl
mov
add
ds
cmc
scas
pop
(bad)
rol
leave
ret
fistp
sub
imul
loope
mov
push
rcl
retf
imul
push
jg
adc
xchg
push
fs
ficomp
xchg
add
mov
jmp
xchg
xchg
mov
inc
shr
jns
xchg
push
mov
fisttp
xor
cmps
sbb
and
cs
and
lahf
div
mov
in
xor
bound
xchg
sbb
jno
js
cwde
and
arpl
cmp
ins
ror
pop
jmp
pop
pop
out
push
mov
xchg
repz
call
cmp
loope
add
jmp
addr16
(bad)
push
shl
xlat
ds
ss
mov
mov
push
dec
adc
outs
mov
or
(bad)
and
aad
stos
or
cmps
ja
mov
jg
jo
and
sbb
adc
jmp
scas
std
dec
mov
rol
mov
dec
add
inc
clc
mov
daa
jmp
sub
into
ss
add
jecxz
push
pop
sub
dec
lea
or
int3
(bad)
ret
in
out
test
sbb
lock
jle
pop
imul
jb
jmp
jp
lock
add
movs
out
ror
pop
shl
lock
cmps
dec
int3
jae
pop
test
and
stc
int
push
lds
or
fs
cld
in
jne
int
retf
or
sbb
jecxz
mov
out
sbb
(bad)
jp
mov
out
xchg
dec
pop
add
mov
mov
call
pop
imul
xchg
and
xchg
add
clc
cli
mov
fimul
or
sti
mov
leave
cwde
fistp
xchg
fdiv
test
adc
pop
aaa
pop
popf
je
dec
adc
mov
scas
push
lds
movs
xchg
cmp
loope
and
inc
dec
xor
and
(bad)
(bad)
(bad)
push
dec
adc
mov
xor
mov
stos
sti
aas
icebp
pop
(bad)
loopne
push
aas
icebp
dec
push
and
cmps
or
dec
add
mov
and
pop
ins
ja
mov
out
cmp
dec
xlat
jo
pop
xchg
das
or
pusha
mov
(bad)
in
movs
jp
(bad)
pop
das
sub
mov
inc
cmp
rcl
in
mov
dec
enter
push
dec
or
cmps
idiv
loope
je
adc
shr
fcomip
scas
out
mov
mov
push
inc
aad
mov
adc
mov
xor
iret
sub
in
es
inc
and
shl
jge
scas
jmp
test
and
(bad)
cli
xor
adc
fist
adc
mov
loope
sbb
cmp
ins
mov
sub
jl
ret
in
xlat
or
rcr
lea
sbb
adc
mov
sahf
bswap
repnz
cwde
jmp
sub
inc
mov
mov
mul
fwait
mov
pop
(bad)
mov
xchg
pop
scas
int
out
call
mov
or
aaa
(bad)
dec
sub
repnz
cs
jge
retf
and
xchg
out
nop
imul
push
mov
cmp
xchg
outs
shl
xor
xor
loop
hlt
or
nop
or
and
movs
sub
inc
sub
hlt
mov
icebp
pop
xchg
mov
call
cmc
cli
cmp
aam
xchg
(bad)
and
and
lahf
shl
shl
pop
aas
xlat
add
fwait
pop
sub
sar
ja
mov
pop
mov
stos
sahf
sbb
pop
int
lds
cs
out
xor
movs
sbb
adc
fcomp
pop
std
adc
hlt
stos
fs
into
cmps
clc
aaa
scas
je
test
mov
xor
out
jmp
pop
adc
cmp
jb
cdq
cmps
fistp
mov
das
push
dec
sub
sar
jne
xchg
jle
xchg
jge
dec
and
fsub
fwait
cmp
inc
inc
icebp
mov
push
das
lds
retf
mov
sub
cmp
mov
jns
xor
xchg
inc
mov
stos
ret
jo
push
iret
popf
sar
inc
dec
adc
mov
xchg
xor
xchg
int3
push
and
mov
repz
neg
jo
ficom
xchg
xor
cs
adc
or
shl
jno
pushw
or
push
sub
cmp
call
out
scas
xchg
ret
xor
or
cmc
mov
hlt
test
pushf
pushf
cmp
xor
mov
cli
mov
jb
adc
imul
jbe
and
mov
xchg
and
xor
mov
outs
aad
pop
lahf
shl
test
movs
push
repnz
jp
add
and
icebp
rcr
lock
sub
jb
mov
mov
dec
popa
dec
pop
shl
jae
jmp
pop
into
add
sti
(bad)
mov
sbb
je
loop
lods
repz
repz
cmps
jl
cli
cmp
repnz
push
cmps
cmp
stc
and
aas
push
inc
(bad)
xor
push
jg
xchg
dec
add
pop
aad
sub
fild
dec
jne
pop
xchg
in
(bad)
pop
imul
scas
fsub
test
sub
xchg
int
cmp
and
sbb
data16
lods
mov
cdq
fwait
dec
ret
add
mov
dec
std
dec
or
xchg
jo
cmp
and
fwait
std
ror
aad
lods
test
inc
push
jbe
sub
mov
nop
dec
lock
mov
fwait
cmp
loop
setno
jle
push
fsub
mov
aas
fbld
mov
mov
add
cmp
enter
mov
mov
ds
xchg
nop
ins
es
es
clc
inc
mov
mov
pop
sub
in
repz
nop
push
sub
jno
pusha
ss
mov
pop
test
sub
push
xor
in
or
call
rcl
movs
adc
pop
add
int
(bad)
mov
and
loopne
mov
xchg
pop
repz
out
cdq
xchg
inc
fs
pop
stos
fidivr
push
jp
nop
dec
sbb
(bad)
stc
sbb
jns
bound
push
sbb
retf
xor
push
lock
dec
mul
(bad)
sahf
out
imul
fstp
(bad)
les
inc
test
ds
call
push
dec
lods
adc
cmps
mov
fnstsw
iret
mov
js
push
mov
pop
shl
inc
int
pop
retf
call
inc
cdq
or
sbb
mov
bound
ror
mov
xchg
mov
scas
mov
xor
mov
int
pop
lahf
jge
mov
in
adc
add
loopne
xchg
gs
and
popf
test
sbb
imul
push
ror
xchg
dec
(bad)
xor
xchg
ror
call
and
and
xchg
retf
mov
and
repnz
sub
fldcw
xchg
sbb
or
xor
retf
not
test
imul
mov
loope
bnd
lods
cmp
in
push
movs
mov
cld
mov
cmp
inc
or
mov
fs
xchg
ret
pop
repnz
popa
xchg
in
iret
or
pop
cmp
xchg
xchg
sub
ret
pop
dec
mov
jno
inc
cmp
popa
scas
leave
popf
test
jge
aaa
sbb
std
mov
pop
aam
xchg
sbb
mov
jb
pop
push
pop
cmp
sub
jmp
xchg
sbb
mov
retf
pop
rol
int3
ins
aas
sar
ins
push
fwait
fs
test
stc
or
dec
jle
add
xchg
mov
jae
sbb
in
fdivrp
mov
test
pushf
or
(bad)
add
jnp
ins
xchg
pop
push
or
mov
inc
lock
mov
test
lods
iret
clc
jb
sbb
leave
fsub
add
loopne
jae
jnp
iret
in
mov
hlt
mov
imul
push
jp
fisub
mov
push
mov
and
cs
test
pop
cld
sbb
out
mov
jb
fistp
scas
div
sahf
push
xchg
je
mov
add
sub
push
rcl
imul
scas
(bad)
ins
mov
dec
dec
cmp
fwait
mov
(bad)
sti
pop
cmp
jge
cmps
dec
aaa
mov
js
cmp
pop
nop
push
std
xor
cmp
repz
loopne
push
sub
mov
add
dec
cli
sub
xchg
ja
icebp
dec
add
inc
mov
in
inc
das
cmp
jmp
imul
xor
xchg
ret
jmp
retf
sbb
mov
rol
xchg
(bad)
xor
mov
arpl
jns
stc
xor
in
mov
dec
cmps
jp
ds
mov
idiv
test
mov
mov
pusha
sub
lods
add
xor
mov
(bad)
and
in
jp
inc
pop
push
dec
cmc
movs
movs
inc
cmp
dec
clc
out
jp
cdq
inc
(bad)
push
cmp
dec
jno
ret
adc
cmps
mov
and
iret
xor
and
add
hlt
xor
jge
(bad)
and
fs
call
outs
sbb
xchg
inc
sbb
idiv
in
daa
outs
push
mov
or
jnp
arpl
inc
mov
mov
fwait
inc
mov
adc
sbb
mov
iret
fadd
(bad)
leave
push
adc
outs
pop
loopne
bound
js
pop
ja
dec
js
xchg
call
mov
xchg
aad
xchg
cwde
jns
mov
bound
iret
or
inc
leave
cdq
outs
push
push
jo
jnp
das
loope
icebp
sub
retf
push
xor
ret
push
sub
lds
popf
cmc
mov
xchg
add
pusha
movs
cdq
rol
inc
mov
mov
adc
nop
cmp
mov
and
and
push
ja
jb
cmp
jns
out
xchg
sbb
rcr
or
icebp
es
pusha
jg
sar
push
inc
dec
bound
movs
movs
es
inc
shr
add
add
mov
mov
(bad)
add
(bad)
mov
and
jl
into
dec
push
mov
pop
rol
jl
add
jp
fidivr
adc
outs
test
lahf
pop
sti
arpl
pop
addr16
lods
jl
in
cmp
mov
jle
test
ins
sbb
xchg
xchg
jb
das
dec
int
lahf
inc
jae
inc
nop
sub
jle
cwde
sub
xor
arpl
cmp
cdq
push
inc
xchg
cmp
jle
pop
mov
jbe
sub
mov
clc
outs
mov
ror
ret
fistp
pop
dec
inc
sar
in
sti
(bad)
fistp
sub
fadd
mov
out
inc
sbb
cmp
test
xor
std
cdq
ds
sbb
sub
ja
jne
pop
xor
xor
pop
push
movs
ret
sahf
int
mov
sub
push
xchg
jae
add
out
inc
mov
pop
and
cmc
cmps
aaa
(bad)
es
aas
cli
out
fisttp
mov
pusha
jge
xchg
lock
neg
test
std
inc
mov
add
cmps
jmp
jg
(bad)
hlt
dec
cmp
mov
cli
pusha
xchg
dec
(bad)
int3
xchg
not
and
pop
push
pop
imul
(bad)
aad
ja
shr
ss
icebp
ss
jmp
ret
pop
add
inc
cmp
stos
jo
push
rol
cmp
in
fild
nop
sbb
call
scas
ja
hlt
mov
loope
sub
retf
push
rcr
sub
or
pushf
add
sub
or
pop
mov
sahf
mov
pop
or
jo
jb
imul
mov
adc
push
not
sub
lahf
call
fbstp
hlt
push
loopne
xchg
sbb
dec
cdq
repz
cld
call
aad
sub
sbb
adc
adc
ja
lea
sbb
pop
mov
adc
pop
jg
cmp
sbb
jmp
adc
loopne
sub
sbb
shr
mov
cwde
cmp
pop
mov
int3
sahf
sub
(bad)
rol
rcr
dec
add
add
fs
leave
sub
or
and
sub
cmp
lahf
das
stc
xlat
and
stos
pop
loope
arpl
mov
pushf
or
mov
and
or
out
arpl
mov
call
sub
aas
(bad)
mov
aad
pop
inc
jns
mov
cmps
dec
imul
fst
inc
in
(bad)
or
cli
test
or
and
pushf
xor
jg
nop
dec
mov
ret
jle
push
mov
xchg
cmp
cld
lahf
scas
cwde
cmc
test
ins
popa
cld
inc
js
inc
ins
jb
pop
pop
or
fs
mov
push
jecxz
cwde
outs
pop
in
adc
sub
cmp
add
outs
mov
xchg
pop
cdq
out
ds
fist
iret
ja
add
retf
sahf
pop
jbe
inc
imul
xchg
dec
in
fild
dec
lods
mov
or
loop
pop
dec
xor
retf
sub
pop
mov
dec
dec
xlat
in
imul
pop
inc
into
daa
pop
mov
xchg
fcmove
fdivr
mov
mov
push
fs
jmp
jo
sub
sub
push
loopne
stc
or
test
and
fdivr
mov
mov
jae
not
dec
scas
dec
cs
jl
rcl
les
call
gs
inc
pushf
dec
sub
xor
mov
cmc
ins
cwde
pop
dec
and
or
jecxz
pop
mov
cdq
lahf
mov
add
xchg
ror
dec
mov
repnz
xchg
sub
dec
inc
bound
or
lods
popf
loopne
dec
repnz
popf
rol
adc
adc
and
jno
add
sub
dec
je
mov
je
jmp
jge
pusha
dec
mov
outs
cdq
es
in
inc
outs
xchg
in
fdivr
mov
mov
sub
leave
dec
loope
test
pop
lods
cmps
jo
outs
js
aaa
push
data16
mov
neg
jg
mov
loopne
ins
cmps
dec
cdq
mov
jnp
rcl
(bad)
iret
adc
(bad)
cmp
sub
jns
cdq
outs
addr16
add
lock
adc
ret
das
push
mov
ret
xor
mov
dec
lock
add
jo
out
push
push
inc
push
inc
aam
dec
daa
push
js
push
nop
(bad)
mov
popa
call
mov
inc
in
leave
mov
jle
aam
mov
or
test
test
push
pop
dec
lock
and
push
arpl
jmp
mov
and
hlt
lea
les
pop
das
sub
dec
pop
fsubr
sbb
ja
fs
pop
jno
sbb
add
pushf
xor
mov
outs
mov
movs
or
loop
and
mov
lods
mov
push
in
jmp
sti
jo
dec
data16
push
dec
cmp
popf
xor
stos
xchg
loop
jp
sti
xchg
jg
dec
iret
pushf
dec
xchg
sti
in
and
stc
cmp
(bad)
clc
pusha
sbb
cmp
popa
addr16
nop
repz
push
test
sub
pop
pop
mov
and
xchg
sub
fdivr
adc
lock
out
cwde
xchg
mov
mov
jbe
movs
xchg
add
shr
mov
mov
clc
test
jns
cmps
loop
adc
adc
sbb
test
fdivr
ss
clc
ret
out
inc
daa
out
arpl
repz
inc
sar
pop
aas
test
int3
pop
push
cmps
pop
in
adc
jb
xchg
cs
xchg
lods
int
arpl
or
fisub
out
dec
push
xchg
loope
cmp
enterw
jnp
std
pop
push
xchg
sub
add
addr16
ss
xchg
sub
hlt
and
ja
or
cmp
int3
out
mov
mov
cs
call
cmp
fs
call
jb
jbe
movs
xchg
bound
push
xchg
push
imul
inc
jmp
or
retf
lahf
(bad)
mov
fadd
inc
inc
jg
or
or
xchg
adc
inc
cld
test
mov
mov
cvtdq2ps
pop
cmp
push
(bad)
or
push
stos
xchg
sbb
xchg
aad
xchg
adc
adc
call
fistp
aad
leave
hlt
(bad)
push
fwait
retf
pop
retf
cwde
inc
rol
adc
mov
cld
mov
or
ss
cmc
shl
cmp
stc
in
out
mov
pop
arpl
jl
inc
jge
inc
aam
mov
push
jmp
addr16
call
cmp
test
and
xor
mov
jl
repz
jb
les
ja
sub
mov
add
repnz
test
dec
aas
mov
stc
mov
das
scas
sbb
scas
pop
sti
mov
xchg
jmp
xor
out
sti
lods
pop
push
pop
mov
mov
add
jp
xchg
push
push
clc
rol
inc
(bad)
mov
xchg
and
mov
bound
xchg
mov
xchg
sbb
mov
cmc
call
out
neg
push
push
jecxz
ret
jge
in
es
dec
in
sar
mov
xchg
js
xchg
test
add
xchg
dec
jle
sbb
int3
cmp
cmps
push
and
mov
ins
mov
sbb
xchg
scas
pushf
jge
jmp
ret
lods
pop
add
mov
das
inc
movs
iret
test
cmps
leave
inc
add
ds
(bad)
xor
add
(bad)
push
es
leave
and
cld
push
mov
iretw
jle
dec
aad
and
push
cmp
pop
and
inc
adc
jle
push
inc
cmc
jl
or
je
push
push
lods
scas
xor
push
lods
movs
les
mov
push
push
bound
add
jae
adc
retf
sub
add
or
push
push
pusha
aam
pop
lock
retf
sub
sbb
dec
movs
or
dec
pop
xor
(bad)
mov
lods
inc
out
or
jmp
mov
stos
jecxz
or
mov
scas
inc
mov
test
mov
adc
movs
sub
cmp
aaa
stos
retf
cld
xchg
ret
cld
adc
fmulp
sti
push
loopne
mov
aam
ror
dec
dec
aad
imul
cmc
lock
lds
popa
sub
push
adc
(bad)
jl
cmp
cdq
int3
push
in
arpl
jnp
add
test
sbb
rol
popf
fist
test
xor
es
das
push
mov
jmp
xchg
addr16
mov
mov
jmp
or
add
bound
cmp
mov
mov
clc
ja
outs
push
stc
ret
or
(bad)
xor
repnz
inc
addr16
push
arpl
imul
stos
mov
dec
inc
push
push
cdq
jne
fcomi
cdq
dec
and
xchg
std
sub
mov
pop
mov
inc
push
imul
xchg
lds
xchg
push
jo
mov
pop
xor
sahf
idiv
lods
mul
pop
xchg
jnp
mov
and
scas
pop
cmp
daa
sahf
push
mov
sbb
sub
fwait
adc
xchg
mov
add
ja
nop
add
inc
jnp
ficom
fwait
dec
adc
lods
jnp
jnp
shr
jbe
cmp
mov
pop
arpl
add
repz
es
add
mov
dec
ins
mov
dec
call
mov
ds
adc
in
iret
nop
mov
dec
or
adc
(bad)
push
stos
and
cmps
movs
sti
gs
fsubr
pop
cmps
mov
popf
mov
(bad)
mov
int3
lock
cmp
push
add
(bad)
push
loopne
stc
mov
repnz
mov
xchg
daa
fldenv
mov
bound
ror
sbb
fsubrp
mov
sbb
adc
in
imul
mov
add
add
cmps
push
sub
push
test
pop
call
stos
lods
xlat
daa
cmp
and
jecxz
cwde
pop
iret
fistp
loopne
dec
stos
pop
icebp
lods
shr
nop
inc
test
gs
push
mov
stos
mov
pop
add
icebp
xor
mov
jge
xchg
xchg
int
push
inc
xchg
scas
hlt
and
adc
retf
cmp
ret
sahf
loope
sti
and
leave
test
inc
jne
and
iret
fstp
sub
sbb
and
or
mov
stos
call
popf
test
imul
retf
ret
lock
jnp
mul
addr16
cmp
mov
das
imul
les
xchg
xor
xchg
clc
imul
dec
pop
sti
xor
and
add
or
js
pop
xchg
rcl
mov
jle
dec
inc
and
pusha
fwait
cs
mov
push
test
inc
xchg
add
fsub
cmp
ret
cdq
iret
or
call
loop
imul
data16
jge
sub
pop
dec
xchg
aaa
movs
popf
cmp
xor
jmp
iret
jb
sbb
jae
and
scas
in
push
push
or
int3
rol
mov
(bad)
aaa
jl
mov
outs
pushf
into
movs
pop
gs
rep
pop
scas
jmp
xchg
nop
sahf
jl
mov
xor
mov
mov
int
scas
es
lock
aam
jge
repz
mov
ds
in
pop
and
call
add
push
cmps
mov
int3
js
jb
xor
sbb
mov
inc
or
xchg
ror
and
(bad)
and
les
xchg
(bad)
out
neg
out
ins
addr16
dec
xlat
push
cmp
psrlq
(bad)
jae
test
stos
mov
add
mov
bound
cwde
clc
outs
aaa
imul
loope
imul
pop
into
xor
mov
xchg
xchg
mov
aaa
pop
adc
int
jp
mov
pop
xchg
leave
cmp
fdiv
xchg
xor
in
leave
and
enter
cs
daa
out
loope
inc
dec
sub
aad
loop
push
adc
mov
sbb
sbb
mov
das
pop
push
jns
pop
iret
test
ror
ins
fsubr
das
push
imul
mov
fmulp
jb
jno
add
dec
push
retf
call
add
sub
sbb
imul
xor
bound
inc
sub
pop
stc
inc
dec
jae
jnp
jle
sbb
xor
(bad)
fidiv
xchg
lock
bound
dec
mov
lea
fisttp
cld
popf
in
adc
mov
enter
adc
push
xchg
in
add
inc
jle
pop
add
test
add
fs
or
loopne
clc
repz
pop
mov
push
sbb
add
int
outs
out
ins
iret
(bad)
imul
inc
scas
jl
movs
imul
dec
adc
dec
ins
gs
or
sbb
test
fs
cmc
aaa
(bad)
jmp
mov
jmp
dec
stos
imul
aam
xchg
jno
outs
or
iret
adc
stos
add
jle
jns
sbb
pop
add
repnz
pop
mov
in
adc
test
inc
inc
mov
fwait
pop
sbb
push
push
into
scas
adc
loope
iret
out
rcr
clc
sub
mov
jo
jbe
popf
fwait
push
push
sbb
repnz
inc
(bad)
pop
xor
fild
std
out
sbb
xchg
mov
pusha
xlat
iret
imul
test
xor
out
xor
cmc
or
dec
inc
mov
fcom
jno
(bad)
bound
adc
jp
add
inc
add
jl
xor
daa
fldl2e
mov
or
fwait
mov
out
mov
ror
out
mov
or
dec
mov
inc
in
or
mov
jg
push
pop
sub
std
inc
push
ins
pop
jg
sub
lods
mov
imul
jae
sub
std
aas
or
lahf
sahf
mov
mov
mov
or
sub
xor
dec
cmps
repz
push
mov
push
xor
add
xor
push
repz
and
imul
sbb
sub
xor
inc
inc
push
xlat
cmc
(bad)
retf
xor
test
sbb
cmp
and
scas
ins
fdivr
or
jle
repnz
push
jl
inc
mov
es
nop
jge
movs
fcomp
imul
add
pop
inc
dec
mov
jnp
std
push
jbe
mov
sub
imul
lods
pop
loope
aaa
imul
test
dec
shl
outs
pop
shl
dec
bound
and
rol
push
jno
push
sbb
adc
jg
or
or
aaa
add
mov
pusha
sub
sub
pop
scas
bound
cmp
fadd
cmp
test
dec
xor
and
push
mov
test
(bad)
xor
fdiv
ins
(bad)
clc
int3
or
aas
jmp
jl
mov
push
movs
add
mov
inc
(bad)
repnz
scas
inc
shl
(bad)
jnp
push
pop
stos
ja
js
jecxz
popa
sub
bound
ss
jbe
push
lods
push
lds
mov
cmp
retf
popa
stos
sub
hlt
or
stos
sbb
test
mov
adc
push
adc
mov
xchg
out
ficom
iret
mov
scas
mov
ss
stos
shr
and
pop
dec
and
xor
adc
bound
adc
xor
sub
cmp
jns
jmp
aam
xor
movs
ds
lods
iret
sub
jne
loopne
adc
and
xor
sub
in
scas
push
rcr
jbe
fistp
fmul
loop
lods
fbstp
test
mov
cmp
inc
jmp
jae
adc
lods
xchg
pushf
pop
jno
das
mov
mov
outs
(bad)
lock
or
mov
call
retf
repz
adc
lahf
cli
push
icebp
and
test
fxch
dec
add
ret
push
ins
adc
neg
dec
in
xchg
dec
cmp
(bad)
and
cwde
push
jbe
test
cmps
adc
inc
out
fcmovnb
and
ja
push
shl
xor
adc
sub
jl
imul
retf
adc
je
call
push
adc
dec
out
jmp
jns
fnstsw
ins
dec
enter
pop
xor
sbb
je
daa
pop
aas
call
mov
inc
push
ins
sub
aad
sub
jb
hlt
cmps
sub
lahf
aaa
jbe
jl
imul
inc
sbb
mov
jmp
xchg
inc
jno
and
xor
jecxz
push
aad
and
lahf
xchg
lods
mov
sbb
mov
xor
jae
scas
xchg
das
jmp
inc
mov
cld
push
cmp
xor
cmps
scas
xor
sbb
sub
xchg
mov
rcr
jl
push
arpl
pop
mov
std
mov
add
mov
fs
mov
pop
push
dec
(bad)
sbb
push
daa
inc
xchg
mov
or
mov
push
ds
jmp
ja
adc
pop
dec
jno
sahf
not
sahf
xor
movs
cmp
imul
xchg
jmp
dec
mov
std
jns
push
push
clc
or
jmp
pop
test
(bad)
sub
(bad)
shl
jle
xchg
adc
or
cs
cmc
or
inc
sbb
lds
pusha
cmp
outs
out
sbb
inc
icebp
jecxz
inc
imul
movs
retf
inc
das
inc
lods
std
outs
jg
aad
push
inc
push
outs
test
cmp
mov
mov
sbb
enter
in
inc
mov
add
fadd
ins
pop
mov
mov
adc
mov
xchg
add
xchg
mov
inc
pop
outs
dec
retf
push
fcmovne
mov
mov
mov
mov
pop
cmps
das
sub
dec
jns
imul
nop
push
jns
and
push
(bad)
push
pusha
dec
add
cmp
dec
cmp
test
packssdw
lea
nop
push
repz
ds
push
push
stc
inc
mov
mov
ret
inc
sub
and
out
inc
pop
(bad)
mov
push
mov
mov
arpl
out
data16
jmp
lods
dec
loope
xchg
(bad)
mov
push
mov
or
xor
pop
inc
mulps
cmp
xchg
pop
dec
dec
je
retf
dec
sub
jnp
inc
not
ins
cmp
xlat
push
clc
dec
xlat
aas
push
fisttp
cmp
mov
out
adc
pcmpeqw
push
call
mov
por
mov
dec
mov
jg
pop
dec
mov
aaa
retf
cs
mov
sbb
mov
or
mov
xor
cmp
call
loope
mov
jb
and
or
mov
imul
cwde
rol
cmp
inc
inc
aas
jb
jle
or
and
in
cwde
sub
sub
daa
mov
xchg
or
imul
sbb
xchg
jp
pop
(bad)
outs
idiv
xor
nop
cmp
fdivr
inc
or
dec
xchg
sub
cmps
les
or
jge
out
stc
sub
leave
pop
push
push
rcr
mov
rol
jecxz
rcl
cmp
xchg
imul
sub
push
xchg
adc
jecxz
ret
nop
scas
add
cmp
sbb
mov
lods
fld
sub
retf
mov
inc
je
adc
pop
xchg
and
xchg
leave
stos
js
(bad)
xor
inc
sub
mov
sub
nop
test
jne
pop
(bad)
nop
shr
or
test
stos
ret
aaa
(bad)
call
sbb
ret
movs
icebp
push
dec
ins
add
mov
rol
je
aas
loopne
or
mov
dec
cmp
fdivr
retf
jmp
xchg
arpl
adc
outs
xor
jge
fidivr
ja
sbb
mov
cld
pop
add
mov
mov
repnz
jno
cmp
int3
inc
into
xor
cld
pop
xchg
or
mov
mov
nop
fbstp
xlat
enter
inc
mov
cs
jle
cmp
jno
addr16
cli
xor
jg
mov
lahf
mov
fdiv
data16
pop
sub
push
into
push
jg
stos
ffree
jo
adc
lods
aad
inc
mov
inc
addr16
lahf
jo
push
lea
jb
xor
fcomp
adc
inc
mov
xchg
ins
rcl
adc
lods
in
test
mov
dec
sti
bound
add
iret
mov
add
push
gs
sbb
leave
sub
dec
cs
xchg
nop
aaa
cmps
call
xor
movs
stos
pop
lock
xchg
mov
push
push
push
push
outs
movs
dec
fnstsw
mov
dec
repnz
dec
inc
cmc
repz
sbb
mov
xchg
dec
jg
push
and
(bad)
es
out
mov
rcr
pop
jg
or
sub
add
popa
cmp
movs
lds
jp
mov
sub
je
jae
fdivr
mov
stos
sub
pop
not
scas
int3
xchg
aam
mov
mov
clc
ffreep
jne
pop
sub
lods
push
call
test
mov
xchg
aam
fnstenv
call
add
inc
inc
pop
mov
repnz
push
mov
sub
ins
and
bound
test
mov
push
sbb
cwde
mov
mov
xor
outs
adc
or
sbb
pop
in
shl
rcr
fild
ficomp
cmc
shr
cs
push
sbb
cmp
test
or
mov
movs
retf
dec
hlt
jo
test
xchg
bound
jne
adc
add
mov
mov
aad
inc
(bad)
clc
mov
cmps
push
addr16
ins
xchg
in
sbb
xchg
push
in
retf
mov
fcomp
mov
mov
loop
iret
stc
jb
ficom
push
ror
cmp
jo
mov
jmp
rol
pop
stos
jae
scas
inc
or
push
scas
aam
loop
sub
popa
mov
add
xchg
pop
mov
popa
push
in
rol
retf
inc
daa
add
std
cmps
enter
or
xchg
in
fwait
scas
sbb
into
out
ret
mov
fst
jmp
in
xchg
or
inc
adc
mov
add
icebp
pushf
push
je
xchg
in
imul
and
outs
(bad)
add
mov
xor
push
pusha
mov
push
inc
mov
dec
nop
mov
into
repz
dec
stc
dec
ds
add
push
leave
mov
inc
xor
ins
jne
test
stos
retf
mov
cmp
pusha
cs
dec
sbb
mov
xor
inc
test
daa
xchg
sti
adc
sbb
pusha
or
jb
jge
lahf
xchg
push
or
pop
cmps
mov
or
pop
dec
repnz
add
bound
mov
mov
sub
iret
dec
cld
mov
add
adc
(bad)
into
add
mov
div
(bad)
es
aam
mov
cld
inc
adc
leave
adc
sbb
sbb
icebp
and
pushf
lds
sti
repnz
push
jno
pop
das
std
es
shl
enter
mov
pushf
in
int3
lods
ds
fnstsw
pop
(bad)
imul
jnp
int
push
fistp
sbb
mov
sub
pop
sub
mov
sar
sbb
adc
dec
in
ret
inc
inc
dec
iret
xor
push
in
cmp
fwait
inc
arpl
sbb
fs
aam
jne
mov
push
lds
jp
into
ret
and
xchg
out
std
or
mov
in
xlat
mov
je
inc
loop
xchg
ins
fcomi
jno
sbb
sub
es
sbb
sbb
cmp
jmp
jg
mov
push
ins
cdq
sub
dec
into
jg
xlat
mov
das
lock
jnp
call
(bad)
popf
sub
jmp
or
sahf
lea
scas
inc
pushf
out
enter
js
aam
ins
pop
mov
(bad)
sub
ds
ror
sbb
ja
dec
mov
(bad)
pop
pop
je
sbb
dec
xor
pop
jno
cli
scas
ror
mov
push
repz
sub
aad
and
lds
push
out
xchg
out
rcl
mov
retf
dec
mov
fidivr
cmp
stos
cmps
loopne
into
pop
adc
ins
jle
jns
repnz
cmp
pop
sub
push
(bad)
(bad)
loopne
pop
dec
inc
out
push
(bad)
jl
ja
mov
push
xchg
data16
push
lahf
and
ins
sti
loopne
adc
jb
pop
lea
mov
in
sub
jp
or
sub
cld
pop
in
adc
lods
pop
lods
mov
aad
xlat
mov
jmp
(bad)
inc
xor
(bad)
jno
fst
add
xor
xchg
call
adc
aad
dec
test
pushf
dec
(bad)
cmps
inc
psubd
sbb
mov
popa
jp
xor
cli
sbb
in
xor
mov
scas
adc
add
jmp
dec
bnd
lds
cmps
and
aam
sub
call
xor
add
mov
cmp
cmc
ret
cmc
pusha
repz
pushf
jmp
dec
retf
scas
test
fidivr
or
enter
push
fs
int3
pop
sbb
jg
scas
lea
aam
pop
lods
mov
push
mov
adc
clc
div
shl
dec
xchg
fs
xor
(bad)
stc
icebp
sbb
fisub
gs
fucomip
clc
push
mov
fsubr
cmp
loope
mov
shl
xlat
cmp
and
mov
outs
mov
jbe
mov
inc
pop
push
rcr
mov
ds
fs
rep
arpl
arpl
push
cvttps2pi
popa
sbb
sar
mov
xor
or
pop
add
movs
cs
add
xchg
xchg
mov
inc
jecxz
es
out
jg
aad
imul
mov
dec
jecxz
add
mov
ds
(bad)
sbb
and
jmp
jmp
int3
(bad)
mov
retf
or
push
pop
pop
cmp
pop
dec
stos
cmc
push
push
dec
mov
test
mov
test
add
adc
pop
outs
popa
mov
popa
(bad)
lods
dec
add
xor
mov
mov
sbb
cs
sbb
add
aas
imul
push
and
jae
ins
in
daa
or
xor
repz
inc
cmp
push
adc
jmp
inc
test
lea
in
pop
and
sub
daa
add
ss
shl
inc
addr16
sub
std
(bad)
lahf
and
mov
or
fistp
int
es
scas
mov
xchg
sbb
xlat
sub
std
sbb
mov
(bad)
or
ret
xchg
loope
xlat
mov
inc
push
cdq
sub
cmp
sbb
mov
and
or
inc
xor
cmps
xor
out
int3
inc
loope
mov
std
jb
(bad)
or
and
shl
jns
push
rcr
xchg
gs
or
leave
jg
movs
in
adc
push
add
sub
ret
es
in
xchg
clc
and
mov
idiv
aas
push
repnz
or
xchg
inc
cmp
andnps
(bad)
loope
popa
cdq
xor
dec
retf
das
pop
cmp
in
shr
mov
mov
jp
pushf
scas
dec
sbb
push
ins
xchg
pop
dec
mov
pop
mov
repz
test
or
mov
inc
js
mov
cdq
cmp
out
repz
xchg
outs
or
movs
ins
loopne
and
xor
xchg
js
mov
mov
inc
dec
mov
aad
and
cli
test
leave
xchg
sbb
add
adc
and
cmc
mov
push
(bad)
popf
push
push
lods
out
scas
cdq
cld
cmp
jae
pop
xor
xlat
pusha
mov
mov
xchg
cmp
xchg
(bad)
loopne
ins
lock
mov
inc
ins
iret
or
inc
test
hlt
xor
pop
test
fsub
enter
mov
xchg
xchg
pusha
cmp
pop
pop
cs
and
add
sub
push
nop
int3
mov
inc
dec
(bad)
mov
adc
test
cmp
adc
xor
mov
push
in
xor
mov
lock
ret
int3
inc
data16
adc
mov
add
fld
adc
xor
dec
jmp
mov
out
pop
lock
cmps
dec
mov
xchg
push
xor
aam
add
fist
in
push
and
jbe
add
xchg
scas
cmp
cmps
jae
pop
mov
pop
pop
jns
jmp
mov
push
cwde
repz
addr16
mov
fstp
std
xchg
push
test
inc
(bad)
push
or
daa
mov
neg
sub
mov
hlt
(bad)
fadd
clc
pop
sbb
and
sahf
pop
cmps
loop
loope
pop
test
in
stos
div
or
dec
dec
pop
iret
cmc
in
(bad)
cld
push
xor
mov
lea
mov
fwait
pop
or
xchg
ror
and
pop
xor
mov
pop
ret
add
repnz
and
pop
ja
ins
pop
and
icebp
mov
pop
lods
mov
loopne
jne
push
jo
ds
sub
daa
div
ss
es
xchg
call
cdq
test
mov
push
adc
daa
jae
or
mov
cs
shl
sti
out
cmp
inc
mov
stc
out
int3
fisubr
scas
mov
sahf
imul
dec
addr16
inc
jle
test
add
cmps
in
(bad)
out
shl
mov
loopne
sbb
cmp
mov
imul
xchg
pop
inc
add
mov
jne
push
push
or
dec
(bad)
jo
in
out
outs
gs
int
imul
(bad)
in
loope
mov
mov
clc
mov
ja
and
jbe
jnp
sbb
popf
stos
sub
out
inc
hlt
(bad)
or
mov
push
pop
jmp
(bad)
pop
aas
fwait
jp
and
xchg
jl
dec
repz
retf
sub
jb
xor
gs
inc
in
xchg
push
xor
std
or
rcl
fbld
mov
mov
ss
rcr
mov
mov
jns
clc
lods
in
xchg
adc
test
mov
leave
nop
and
mov
ret
mov
mov
cwde
and
ja
int
sbb
push
arpl
jmp
fmul
sti
cmp
daa
bound
dec
lock
mov
fdivr
add
jmp
loopne
inc
or
cmp
loopne
mov
cmp
mov
aaa
std
pop
icebp
mov
pop
mov
inc
sub
xor
stos
mov
inc
mov
pop
jnp
push
stos
test
cdq
je
adc
push
retf
(bad)
dec
adc
inc
sti
int
xor
mov
jmp
pop
push
mov
std
mov
push
xchg
mov
push
cli
cmps
rol
push
mov
jle
jle
xchg
popa
add
outs
fdivrp
rcr
ret
and
add
xor
in
pop
push
scas
mov
mov
rcr
pop
inc
loope
lods
mov
jge
mov
and
xchg
xor
jge
jp
push
arpl
and
pop
int
and
outs
sbb
iretw
ss
sbb
sub
mov
enter
cmps
jle
sbb
jmp
xchg
cmp
aam
xchg
sbb
pop
add
in
dec
jp
add
call
or
retf
in
in
fnstenv
push
sti
xchg
jp
mov
push
test
adc
xchg
jo
cdq
inc
and
mov
scas
js
leave
popfw
or
or
retf
aad
das
inc
dec
inc
das
jge
or
je
mov
cdq
lahf
mov
(bad)
jb
ja
hlt
shl
bound
mov
popa
lahf
sbb
addr16
(bad)
cmp
jge
shl
data16
pushf
sub
dec
push
and
xchg
fwait
mov
or
xchg
les
and
inc
or
pop
enter
inc
(bad)
call
jno
jae
test
repnz
mov
ror
outs
nop
pop
jmp
test
sub
dec
retf
ds
pop
xor
das
in
cs
data16
xchg
lods
stc
jmp
mov
sbb
ja
sub
sbb
sbb
test
xchg
push
dec
cmp
retf
pop
mov
sbb
pushw
fbstp
into
sub
add
cmps
jmp
xchg
jo
or
xor
dec
jl
ins
jg
cld
inc
arpl
sub
mov
frstor
dec
lock
mov
stc
jb
add
std
js
jno
inc
mov
mov
inc
call
test
daa
scas
call
inc
(bad)
and
pop
cld
mov
inc
js
les
pop
xchg
cwde
test
push
paddw
movs
aam
mov
mov
fld
imul
jne
cmp
out
jbe
imul
or
jmp
das
jmp
inc
xor
fwait
les
or
inc
mov
add
lock
int3
or
mov
mov
sbb
out
push
inc
mov
leave
pushf
push
xchg
iret
pop
add
shl
loop
mov
retf
cmp
jae
dec
retf
mov
dec
fidivr
cld
gs
movs
arpl
jmp
arpl
aas
push
sub
push
cwde
mov
add
cmp
mov
seta
push
pop
adc
add
sti
lock
(bad)
test
call
arpl
sub
xor
das
retf
test
sti
loopne
mov
scas
sbb
xchg
in
inc
cli
dec
hlt
mov
push
push
call
push
(bad)
js
inc
cdq
movs
cmp
sbb
pushf
(bad)
jae
inc
sub
inc
add
mov
or
lds
pop
mov
test
ss
jbe
mov
push
xor
adc
sbb
imul
xor
jl
cwde
inc
xor
adc
jmp
outs
mov
mov
inc
js
lods
xor
pusha
clc
test
iret
dec
adc
fs
dec
shl
int
ret
or
pop
mov
cmp
rcr
ds
stc
and
sub
je
lea
pop
cmps
ds
ss
mov
inc
or
shl
or
jne
dec
mov
pop
fadd
sbb
pusha
push
shrd
js
repnz
jle
out
mov
or
lods
stos
add
jnp
adc
inc
mov
scas
(bad)
and
sbb
adc
adc
aam
lock
ins
mov
xchg
sub
xor
test
jmp
mov
repnz
jmp
sbb
(bad)
mov
sbb
inc
cmp
loope
mov
mov
(bad)
xchg
sub
mov
xchg
sub
mov
or
ffreep
adc
push
xchg
lea
inc
mov
or
not
pop
hlt
les
cmp
fsub
xchg
adc
fs
outs
mov
imul
aaa
hlt
fisttp
jl
inc
inc
xchg
(bad)
mov
pop
dec
ret
xchg
sub
cmp
jge
out
dec
add
xor
dec
or
daa
ja
and
mov
ss
mov
lea
aad
inc
add
sti
cmp
add
js
shl
cmp
jo
movs
lea
in
or
push
out
xchg
lahf
pop
aaa
mov
aad
xchg
lock
push
bound
cmps
cmc
push
(bad)
jmp
xchg
sbb
shl
add
mov
push
scas
jno
dec
mov
out
hlt
push
call
icebp
pop
add
cmp
and
xor
loopne
jo
pop
push
jecxz
fsubr
js
sub
mov
stos
outs
fsub
lods
xchg
xlat
call
inc
inc
ins
inc
push
in
mov
xchg
cmp
inc
jp
mov
stc
and
fucompp
add
shl
(bad)
and
lea
sub
out
mov
ret
add
jge
inc
shl
and
mov
pop
pop
in
xchg
push
xlat
cdq
das
scas
mov
mov
cdq
or
pop
mov
popf
pop
mov
jns
mov
ret
and
and
(bad)
add
in
jg
add
jmp
push
push
xchg
jns
aaa
fdiv
out
mov
enter
mov
xchg
lods
sbb
jns
pop
jo
fwait
in
ret
cmps
popf
push
and
pop
mov
ret
(bad)
aas
div
sub
or
jno
jp
xchg
pop
jne
int
in
fnstsw
push
or
ds
cwde
enter
stos
(bad)
xor
and
pop
or
sub
adc
rcr
adc
fdivr
cwde
cli
push
int3
pop
out
jge
adc
(bad)
call
mov
repz
sub
cmp
mov
jg
mov
push
fild
in
movs
retf
stc
pop
sub
adc
std
js
dec
or
adc
push
pop
out
adc
daa
xor
aad
mov
jp
bound
push
sar
jl
jg
scas
mov
lds
xor
bound
mov
aas
mov
or
mov
mov
fisub
xor
or
shr
xor
(bad)
push
sub
dec
rcr
jecxz
loopne
push
jmp
fbld
ror
sub
jmp
xchg
mov
cmp
ret
add
add
pop
mul
std
gs
mov
out
push
not
or
cmps
push
sub
xor
pushf
sbb
push
mov
xlat
leave
cli
cli
push
movs
add
cmps
xor
mov
mov
inc
adc
icebp
(bad)
fst
(bad)
pushf
(bad)
jbe
test
mov
xor
stos
sbb
jno
and
adc
sbb
add
mov
jge
ja
pop
lds
movs
sub
and
rcl
adc
cwde
loopne
xchg
sub
fwait
sbb
mov
fwait
hlt
mov
xchg
adc
cmps
add
dec
loop
pop
test
int
pop
in
xchg
ja
xor
jle
jp
movs
push
fs
mov
cwde
jnp
stc
and
push
in
cwde
jo
jmp
outs
aaa
out
fldcw
xor
mov
pop
xchg
and
ficom
dec
outs
sub
add
mov
mov
adc
sar
sbb
adc
dec
push
xchg
daa
not
adc
push
or
and
mov
scas
pop
dec
pusha
xor
fidiv
jmp
xchg
jg
(bad)
mov
(bad)
sbb
cli
jbe
sahf
retf
pop
jmp
sub
ror
cmc
retf
cmp
adc
jp
fdiv
adc
push
data16
and
nop
pop
cmp
xchg
and
add
inc
xchg
(bad)
std
pop
adc
mov
das
sahf
and
mov
addr16
in
mov
pop
mov
pushf
imul
pop
xor
test
push
aad
push
mov
outs
mov
nop
aam
add
jg
mov
arpl
fs
test
xor
pop
xchg
mov
mov
jae
sbb
inc
pop
or
mov
movs
and
sti
popa
xor
lds
mov
js
dec
add
push
(bad)
sbb
nop
jae
aaa
xor
pop
sub
pop
mov
scas
mov
dec
test
xchg
pop
jg
mov
sti
hlt
cdq
es
xor
(bad)
cmps
sbb
popa
mov
fstp
pop
jae
cmp
or
cli
pop
ins
and
(bad)
leave
jo
es
push
repnz
xchg
mov
out
or
lea
imul
sbb
cdq
add
sbb
or
jecxz
data16
mov
jne
(bad)
xor
and
pop
fiadd
jl
adc
fs
outs
inc
popf
push
xchg
fadd
jae
push
push
cmc
(bad)
(bad)
sub
xor
jmp
inc
mov
std
call
mov
(bad)
and
adc
stos
pop
mov
(bad)
loopne
std
adc
ror
je
sbb
test
ret
pop
adc
int3
in
ja
cmp
int
(bad)
add
xlat
imul
jmp
cmp
sub
adc
rcl
popf
dec
jl
pop
stc
cli
or
fs
push
mov
sub
inc
jns
lds
cmps
mov
xor
add
hlt
scas
cwde
mov
cmp
scas
aad
mov
aaa
jb
int
xchg
leave
ds
inc
(bad)
popf
cmp
adc
mov
hlt
(bad)
cmc
aas
cmp
lea
fadd
fisub
imul
inc
scas
jecxz
adc
or
dec
data16
in
hlt
ficomp
or
sub
cwde
retf
call
inc
xor
push
mov
ret
leave
aad
in
mov
ficom
push
and
xor
cmc
daa
push
aam
push
inc
mov
ror
cwde
iret
popf
fucomip
shl
ror
out
pop
add
jo
push
add
push
dec
cmc
rol
not
sub
mov
(bad)
cmp
inc
call
adc
cmp
fcomp
dec
xchg
je
das
jecxz
inc
and
das
out
push
pop
mov
je
jns
and
add
mov
stc
mul
retf
ins
mov
movs
inc
(bad)
or
js
adc
stc
ret
mov
mov
xchg
mov
rcr
push
dec
mov
(bad)
or
stc
mov
les
stc
jne
jge
leave
loope
loop
fcom
add
ror
add
cmps
cld
sub
add
sub
mov
xor
popf
div
mov
bound
imul
mov
mov
scas
cmc
movs
imul
xor
iret
xor
cli
das
lock
and
or
or
push
popa
sub
jl
movs
push
gs
mov
shr
push
jno
aas
test
and
push
and
cmps
sbb
or
(bad)
sub
std
sbb
sub
adc
stos
cmp
mov
scas
adc
ror
shl
cld
mov
sbb
loop
les
aad
sub
pop
es
xchg
std
movs
mov
mov
dec
and
jmp
fst
cs
rol
cdq
cdq
add
inc
pop
jle
mov
lds
xchg
retf
mov
mov
cld
pushf
ins
mov
neg
mov
std
cmp
std
ins
push
dec
test
out
inc
mov
xor
add
jge
fxch
hlt
xchg
mov
pop
dec
shl
test
mov
test
gs
adc
arpl
rol
loope
aaa
mov
xchg
adc
cmovs
es
push
sub
inc
(bad)
pop
and
mul
lds
sub
ficom
xchg
popf
test
jecxz
mov
movs
inc
sbb
jo
and
mov
(bad)
pop
and
pop
lds
outs
jl
jo
xor
pop
test
test
cmps
adc
popf
mov
mov
adc
out
add
cmc
data16
inc
leave
sbb
ins
fdiv
(bad)
xchg
test
dec
mov
mov
clc
push
(bad)
or
dec
push
mov
jp
inc
call
retf
fsubr
icebp
xlat
push
jmp
stos
or
jns
push
(bad)
sub
adc
arpl
inc
addr16
xchg
das
pop
fst
stos
mov
out
int
or
or
pop
call
out
js
(bad)
pop
shl
aaa
add
mov
jge
ds
mov
jo
arpl
adc
push
(bad)
ds
sbb
adc
in
xor
sbb
scas
cmps
outs
sub
das
aad
fs
inc
bextr
push
ret
inc
mov
add
(bad)
dec
pop
nop
jl
pushf
mov
repnz
sub
push
add
jns
push
push
enter
jmp
cmp
dec
test
and
or
add
(bad)
sbb
sbb
add
rcl
sbb
ret
mov
mov
jmp
es
lock
jg
xor
cld
sbb
(bad)
cmp
mov
dec
mov
xor
je
mov
sub
imul
sub
pop
test
add
int
mov
(bad)
cwde
push
adc
adc
aas
(bad)
lock
or
(bad)
dec
xchg
jmp
int
xlat
mov
std
hlt
call
mov
fisubr
jp
leave
or
mov
out
repz
shl
add
cmp
jmp
pop
sbb
dec
push
mov
jmp
push
test
mov
xchg
push
mov
pop
push
cs
xchg
das
push
or
repnz
adc
sub
adc
xor
fcomp
pop
xor
push
in
pop
scas
mov
aaa
mov
pop
pop
xor
lahf
aad
dec
pop
or
cmp
jne
jmp
cld
or
mov
push
js
in
arpl
mov
in
fst
std
mov
retf
or
test
cs
mov
cmps
stos
push
sub
push
mov
jb
stos
push
adc
mov
cmp
test
push
(bad)
popf
(bad)
or
jns
jle
aad
xor
and
pushf
dec
sub
enter
push
cwde
call
push
dec
mov
dec
je
xor
sar
sbb
xor
sub
les
pop
jmp
lods
mov
push
jmp
or
cmps
fdiv
inc
fisttp
pop
mov
cmp
cs
fwait
xchg
jb
cmp
cmps
cli
or
out
add
cmp
lahf
mov
loop
and
and
clc
repz
aad
inc
sahf
sub
xchg
and
cld
dec
jns
or
(bad)
lahf
xchg
mov
inc
in
sub
popa
arpl
imul
bound
dec
call
out
call
mov
inc
enter
sbb
call
mov
jno
(bad)
push
xlat
xchg
mov
jbe
sbb
repnz
cdq
aad
cmp
and
cmp
loope
in
jle
dec
daa
je
imul
fwait
mov
or
mov
add
fs
cmp
loope
mov
imul
jmp
rol
leave
adc
iret
cmc
clc
out
or
mov
mov
out
inc
iret
iret
(bad)
inc
cmp
mov
and
sbb
ss
jmp
and
std
call
into
into
mov
jns
(bad)
mov
xor
fwait
fwait
push
cwde
mov
sbb
stos
jnp
ja
arpl
cmps
cmp
aas
add
pushf
adc
pushf
fmulp
and
dec
ror
cdq
(bad)
out
push
jle
ret
outs
movs
xor
inc
ret
cmp
ja
and
xor
push
dec
sub
fild
pushf
jmp
mov
pop
pushf
lahf
xor
pop
xor
mov
pop
fs
or
jmp
add
dec
push
inc
out
lock
call
pop
sti
xor
ins
dec
or
add
sbb
pop
cmps
hlt
in
pop
in
push
mov
and
add
ja
stos
jge
jg
push
loop
arpl
loop
push
stos
xor
mov
nop
dec
xchg
pop
(bad)
cwde
jg
jl
ficomp
aas
movs
dec
cmp
xchg
imul
jo
cdq
mov
popw
iret
and
nop
sub
jge
push
popf
pop
mov
fsubr
das
jnp
xchg
sbb
mov
xor
jbe
dec
int
js
je
mov
jmp
aaa
neg
and
dec
icebp
dec
lods
mov
rcl
mov
sub
dec
adc
movs
fstp
out
icebp
add
mov
mov
imul
arpl
pop
mov
cmp
sbb
sbb
dec
outs
add
jne
fadd
xlat
in
in
cmps
adc
xchg
pop
out
in
xor
dec
push
outs
cmp
adc
xchg
cmps
mov
mov
jg
cmps
mov
mov
push
test
ins
je
out
test
adc
sub
pop
jecxz
gs
inc
repnz
cld
mov
pusha
aad
retf
popf
push
inc
xchg
jmp
adc
lods
or
xor
inc
fdivrp
adc
inc
cmp
adc
and
or
or
ss
xchg
dec
inc
xchg
xlat
(bad)
je
out
inc
jge
xlat
mov
repnz
cmp
push
sbb
xor
ficomp
or
les
pop
and
mov
stos
les
pop
jmp
ja
mov
hlt
fwait
dec
push
add
mov
push
out
sbb
movs
int3
adc
repz
and
mov
lock
mov
fmul
gs
add
mov
fdiv
mov
iret
or
(bad)
aad
pop
sbb
shl
data16
mov
jl
sbb
arpl
bound
fdivr
dec
add
pop
push
adc
(bad)
xor
lahf
rol
bound
or
cmp
sub
icebp
test
push
mov
mov
pop
nop
cdq
aas
push
sub
hlt
les
imul
mov
jno
mov
and
mov
mov
loopne
daa
mov
cmp
icebp
rcr
xor
cld
(bad)
push
ds
sbb
push
push
aad
jnp
xchg
icebp
iret
pop
jge
scas
js
icebp
mov
mov
ins
retf
int3
mov
adc
fwait
les
dec
push
hlt
mov
xchg
icebp
cmps
push
rol
mov
jmp
cmp
fistp
lods
nop
movs
xor
movs
sti
jecxz
xchg
dec
xor
movs
pop
cmp
daa
mov
sbb
or
pop
popa
je
iret
dec
ds
push
push
and
xchg
mov
das
mov
fmul
and
sub
mov
stos
mov
lods
adc
sahf
pushf
mov
mov
jb
mov
test
imul
fs
out
push
inc
mov
rcr
mov
jns
stos
(bad)
cmp
loop
stos
sbb
jno
sub
push
(bad)
fldenv
out
repnz
mov
fadd
pop
push
cdq
inc
jecxz
int3
jmp
and
jmp
lahf
mov
cmp
jnp
pop
dec
sar
mov
ror
push
aas
repnz
xor
push
repz
sub
aas
pop
push
mov
mov
les
ret
enter
cmp
jo
cli
rol
enter
pop
repz
ja
inc
adc
scas
mov
das
outs
sbb
outs
mov
mov
sub
into
and
inc
or
or
dec
xor
stc
cmp
sbb
or
adc
pop
(bad)
call
mov
sbb
or
jb
js
sub
jp
push
pusha
dec
xchg
mov
out
std
mov
xchg
enter
xchg
(bad)
push
repnz
sub
fsub
daa
loopne
push
push
xchg
jge
in
test
xlat
lods
loop
mov
xor
cmp
sub
pop
mov
inc
in
repz
(bad)
(bad)
mov
ja
mov
xor
(bad)
jo
iret
sub
jle
loope
pop
adc
movs
aaa
or
sub
das
test
cmp
xor
sub
and
call
scas
aad
in
scas
jmp
js
xchg
repz
enter
les
stc
cmp
das
popf
les
mov
cmps
xor
sub
mov
fcomip
pop
xor
(bad)
fsub
aaa
and
adc
jmp
cs
movs
or
add
sub
shl
movs
add
gs
xchg
or
fnstenv
or
fwait
jecxz
push
xchg
xchg
sbb
push
xchg
push
jbe
and
gs
inc
xchg
jne
mov
mov
aaa
sub
inc
sub
xchg
inc
jp
dec
xchg
and
call
or
test
hlt
out
scas
stc
add
xchg
lock
xor
dec
leave
enter
sbb
imul
mov
out
stc
xchg
(bad)
cmp
mov
push
add
jb
add
std
fbstp
sar
xlat
out
int
dec
nop
nop
mov
xor
(bad)
cmp
int
mov
(bad)
shl
mov
xor
sbb
inc
pop
sbb
and
(bad)
push
aaa
std
push
sbb
idiv
and
movs
call
sbb
outs
push
pop
pop
mov
sar
fwait
mov
data16
push
pop
adc
pop
sub
mov
sbb
jecxz
imul
sub
xor
hlt
sub
push
test
sub
add
cld
xchg
lahf
ret
cmc
sahf
ds
iret
call
xchg
ins
mov
sbb
push
xor
mov
mov
(bad)
retw
add
int
mov
cmp
mov
rcr
and
es
adc
test
mov
jle
ss
fmul
xchg
arpl
popf
cmp
push
sub
and
xchg
jmp
mov
xlat
dec
sahf
in
pusha
aam
inc
sbb
jo
pop
pop
mov
ins
jno
scas
adc
mov
sbb
call
fist
sti
aam
clc
cld
inc
into
xor
mov
inc
adc
cmp
mov
fsub
and
push
push
sahf
imul
mov
aas
cmc
xor
repz
push
fadd
jg
ja
cmps
adc
and
mov
push
xchg
mov
loope
jns
out
ret
push
mov
mov
inc
sbb
shl
pop
push
jmp
mov
sub
sub
cmps
in
jbe
jns
jae
(bad)
fnsave
jns
xor
or
call
xchg
addr16
sar
js
or
ss
inc
xchg
in
not
pop
shl
js
and
mov
fisub
ret
jno
xor
and
sbb
in
in
rol
clc
fmul
movs
scas
ds
jle
retf
mov
cmp
test
mov
and
sub
xor
adc
inc
xchg
shl
lock
(bad)
stos
(bad)
fadd
bound
jecxz
popa
jle
xor
int3
bound
mov
outs
ins
and
jo
stos
xchg
ins
sub
push
pushf
inc
fst
mov
cdq
mov
pop
jo
in
enter
scas
enter
daa
jae
in
pushf
add
sub
jne
cmps
ins
sbb
or
imul
fwait
retf
mov
xor
popa
mov
ror
outs
rcl
push
cdq
xchg
cmps
xchg
mov
es
adc
sti
jg
xchg
sbb
cmp
mov
mov
xchg
mov
xchg
dec
sub
loop
xchg
xor
xchg
dec
sbb
sbb
cmps
clc
jge
mov
lods
mov
mov
fidiv
push
xchg
push
jns
mov
nop
mov
pop
add
jp
push
adc
ss
jmp
hlt
add
(bad)
mov
add
sub
xor
push
aad
and
fxrstor
add
jne
imul
test
or
pop
jo
retf
fnstenv
loope
gs
scas
lock
jbe
xor
adc
mov
fist
rcl
inc
jp
ins
push
mov
sbb
push
sub
xor
cmp
aas
popa
pop
or
jecxz
cmp
push
retf
jne
inc
je
pop
push
(bad)
ds
or
mov
cmp
and
dec
xlat
add
aad
sub
xchg
cld
loope
xor
and
xchg
mov
xchg
ret
xchg
jns
movs
xchg
stos
dec
nop
xchg
add
mov
xchg
jle
sbb
dec
pop
mov
fsub
gs
dec
push
es
(bad)
push
aaa
jge
jns
loop
jno
pop
mov
fmul
xchg
mov
inc
fiadd
mov
xchg
push
pop
adc
adc
pop
data16
data16
mov
push
aam
push
(bad)
mov
(bad)
repnz
ss
mov
fcmovne
add
test
pop
dec
mov
jbe
test
(bad)
mov
xchg
js
int
stos
adc
mov
repz
out
hlt
iret
pop
jne
in
popa
aad
ins
hlt
hlt
lock
mov
inc
cmp
inc
in
push
add
imul
jmp
inc
fcomp
add
sub
retf
iret
xor
es
adc
jnp
cmp
std
adc
and
inc
jbe
mov
dec
jns
aam
imul
jae
in
in
push
imul
fldz
sahf
icebp
dec
or
mov
lods
cdq
mov
fidivr
loope
pop
or
push
clc
(bad)
push
sbb
push
xchg
imul
cmc
mov
adc
sahf
call
pop
retf
push
xlat
ror
stc
mov
call
outs
(bad)
rol
mov
leave
mov
adc
adc
fistp
loope
cwde
inc
sub
inc
loop
loopne
aas
sub
jp
ja
cmp
mov
sbb
js
xchg
xchg
xchg
jp
push
repz
gs
mov
not
xchg
mov
fisub
sahf
cmp
jmp
adc
jae
mov
das
vpsraw
xor
cmp
xchg
ds
cdq
or
aam
call
mov
je
lods
sbb
and
fmul
push
sub
dec
pop
jae
arpl
dec
jae
xor
xor
neg
ins
fwait
daa
cmp
scas
shl
iret
movs
out
lds
pop
jecxz
add
(bad)
mov
inc
mov
outs
cmp
xor
jmp
add
dec
gs
pop
pop
pop
pushf
xchg
es
test
mov
sub
sti
icebp
push
mov
mov
push
fadd
push
jnp
in
out
xchg
push
push
push
es
sbb
shr
push
jmp
(bad)
dec
retf
adc
pminub
aad
push
sar
fistp
mov
mov
jg
addr16
movs
jecxz
fdiv
lods
xchg
sub
imul
shl
sub
adc
sub
je
ret
add
mov
ds
xor
sub
or
(bad)
fiadd
sub
xchg
fwait
push
out
hlt
mov
pop
sub
nop
js
mov
call
and
jns
int3
das
jge
cmp
(bad)
shr
cmp
xor
gs
rcr
cli
sbb
ja
sbb
fild
dec
aas
dec
mov
lock
adc
push
nop
inc
and
test
loop
xor
ficom
sub
pusha
push
pop
and
scas
sti
mov
movs
into
stc
fnclex
push
xchg
xchg
ret
scas
int
ds
pop
leave
cli
push
or
rcr
jg
les
outs
in
enter
test
adc
sbb
mov
mov
jmp
xor
les
push
ss
push
jl
mov
mov
push
inc
and
sub
imul
pop
div
dec
idiv
bound
mov
mov
icebp
add
mov
test
push
or
mov
mov
(bad)
pop
popf
out
ja
loopne
fwait
movs
mov
mov
xor
cli
call
dec
fdivp
rol
push
mov
idiv
pop
push
add
test
(bad)
inc
and
adc
xchg
mov
retf
fsub
pusha
xlat
cmp
(bad)
cmp
pop
gs
nop
(bad)
sbb
pop
push
xor
shl
add
xor
shr
fisubr
pop
nop
hlt
das
lods
int3
idiv
std
mov
pop
xchg
push
fs
in
fst
xchg
push
add
xchg
add
pop
jae
jl
jbe
cmp
aad
fdivrp
xor
push
fucom
leave
fcmovb
bound
(bad)
aam
shr
cmc
fnstsw
scas
das
aad
jbe
cld
sar
loope
cmps
xchg
dec
hlt
pop
int
aas
add
xlat
pop
sbb
inc
inc
dec
jno
movs
daa
xlat
and
mov
outs
stc
push
fiadd
mov
adc
sti
es
dec
ja
mov
in
cli
adc
jle
dec
scas
test
push
xchg
mov
jmp
inc
sub
shr
inc
sbb
in
js
ds
dec
cdq
or
sub
lds
jb
pop
mov
inc
scas
fimul
fwait
stos
fdiv
and
pushf
mov
cli
jno
jae
push
jnp
pop
and
pop
adc
(bad)
pop
sub
jns
inc
out
adc
test
push
and
int3
loopne
jne
scas
ds
xchg
cmp
mov
xchg
mov
lods
ret
test
bound
push
add
mov
dec
adc
test
pushf
ret
es
int
out
mov
lahf
xchg
aam
clc
stos
ret
retf
mov
cdq
lds
xchg
push
pop
retf
out
xor
lock
mov
mov
push
sub
add
movs
(bad)
fisubr
or
dec
jmp
and
push
cmp
nop
adc
cmp
add
nop
push
fisub
jbe
pop
mov
popf
rcl
das
outs
test
push
push
fwait
cs
lock
or
push
retf
or
push
jae
mov
push
ret
or
leave
and
inc
out
pusha
cmps
mov
sub
sbb
cmp
stos
bound
and
sub
inc
sub
clc
rol
js
mov
ret
mov
mov
or
mov
call
inc
hlt
ins
push
je
ss
inc
retf
mov
adc
ja
sub
cmp
push
xchg
aad
sub
loopne
mov
pop
mov
pop
lds
xlat
sub
(bad)
push
jecxz
fimul
inc
xor
jmp
xchg
test
and
or
shl
repz
or
fs
mov
(bad)
mov
dec
cmp
scas
and
inc
inc
fld
push
jg
sbb
push
jno
fsubrp
jns
jmp
push
or
push
sbb
test
lds
lds
cmps
mov
push
mov
cmp
xchg
and
xchg
fwait
and
sub
pushf
xchg
test
xor
jno
aam
add
hlt
xchg
arpl
into
test
(bad)
das
popf
movs
ds
loop
fs
adc
stos
sub
(bad)
adc
lds
push
push
cmc
add
(bad)
loop
test
sub
(bad)
daa
inc
in
or
pop
test
mov
js
xchg
jge
adc
sub
sub
add
cs
mov
gs
push
test
xchg
sub
and
je
xchg
mov
repz
call
adc
popf
sbb
(bad)
or
xchg
stc
fsubr
xchg
sbb
jp
arpl
jle
cmp
cld
cmp
xor
call
mov
mov
add
and
(bad)
into
adc
idiv
sbb
scas
mov
cli
mov
stos
lds
xchg
cmps
sbb
jno
stos
hlt
lahf
mov
stos
hlt
sar
shl
nop
pop
call
scas
popf
sub
cmp
hlt
or
mov
leave
push
mov
outs
leave
add
pop
das
or
pop
adc
pop
jo
or
dec
dec
hlt
push
jmp
outs
jnp
into
sti
push
out
push
outs
sub
add
clc
imul
scas
sbb
sub
jo
in
or
push
jp
push
mov
ins
fcomip
sbb
sbb
out
push
and
inc
data16
mov
out
ins
push
retf
cmp
inc
push
mov
push
push
dec
mov
rcl
adc
cmp
popa
jbe
sub
pop
aas
inc
pusha
ret
cmps
inc
lds
cli
sbb
push
int
sbb
adc
cmp
adc
sub
pop
fidiv
es
push
dec
scas
and
push
adc
test
fimul
and
pop
mov
inc
cmp
xchg
cmp
and
xchg
fbld
jmp
inc
xchg
ret
adc
cmp
sub
int3
jge
cmp
imul
cs
inc
(bad)
stc
(bad)
jmp
popa
pop
ins
add
adc
icebp
inc
jb
pop
mov
pop
cmp
xchg
jb
push
outs
pop
jae
push
dec
jb
hlt
sti
push
sbb
bound
int
mov
arpl
(bad)
fimul
and
out
daa
inc
retf
nop
iret
pusha
jle
les
shl
adc
push
push
jno
les
xor
das
mov
test
pop
push
sbb
rol
or
mov
dec
cdq
mov
rol
(bad)
push
xchg
je
adc
and
push
ret
xchg
imul
jp
iret
inc
int3
cmp
fadd
jmp
sbb
jg
sbb
stos
pushf
sub
aas
(bad)
xchg
leave
jbe
leave
mov
mov
jae
and
call
mov
aad
stc
lock
daa
fcomp
sahf
out
push
add
add
cmp
jg
test
popf
stos
mov
sbb
add
or
pop
cs
mov
add
push
movs
sub
add
stos
ss
adc
jns
scas
and
cmpxchg
leave
je
pop
dec
test
dec
xchg
sbb
adc
jb
jbe
sbb
sbb
cmp
test
mov
pusha
mov
test
xchg
pop
repz
outs
pop
enter
clc
fdiv
or
mov
dec
xor
outs
cmp
push
inc
xchg
sub
adc
rcl
jmp
std
ins
je
loop
test
sbb
xchg
xor
jbe
das
in
dec
cmp
sbb
adc
inc
rcl
loopne
xchg
pop
jns
test
push
ins
(bad)
cmps
or
fwait
inc
pop
cs
xor
mov
loop
xor
test
dec
lods
dec
jmp
push
(bad)
adc
imul
pop
push
dec
and
lock
sub
(bad)
scas
cmp
sub
retf
dec
rcr
call
or
inc
and
cmp
pop
mov
lock
js
mov
cmps
pop
push
push
retf
daa
shl
je
rcl
dec
inc
ins
pop
dec
cmp
aaa
dec
shl
dec
aas
into
add
shl
aas
sti
mov
fdivr
retf
mov
xor
adc
mov
lock
jne
push
enter
retf
das
iret
out
or
jns
lock
icebp
ret
sbb
fwait
mov
mov
and
adc
push
pop
jmp
ds
jno
mov
mov
cs
mov
int3
mov
(bad)
mov
jo
in
clc
push
lods
xor
in
inc
cmp
pop
popa
cdq
sar
xadd
cli
cmps
arpl
repz
aam
scas
(bad)
stos
cmp
jl
or
mov
sbb
jmp
out
cmps
daa
icebp
aas
pop
xchg
iret
pop
fsubp
cmps
sbb
mov
fisub
sub
cmp
adc
nop
mov
call
xchg
ror
or
jns
fwait
out
pop
stos
fnsave
push
mov
xchg
cmp
aaa
sbb
dec
inc
stc
movs
sub
dec
xor
imul
or
cmps
mov
mov
adc
cmp
outs
jg
push
or
icebp
popf
nop
sbb
ja
idiv
pushf
fsub
test
(bad)
rcr
int3
pop
inc
or
mov
inc
dec
aam
rcl
jne
cmc
mov
ret
int3
inc
xor
xchg
aas
jmp
mov
add
adc
xchg
or
dec
aad
cmp
jge
jbe
dec
cmp
xor
mov
popa
mov
pop
nop
movs
pusha
scas
arpl
push
xlat
cmp
cmp
xchg
aas
lods
ret
mov
pop
(bad)
fdivr
mov
adc
add
or
cld
adc
dec
mov
paddd
stc
es
jecxz
mov
enter
sti
push
and
pop
inc
jg
cmp
xchg
sbb
and
mov
sub
sub
sbb
add
pop
stos
xchg
jnp
maskmovq
(bad)
cmp
push
inc
add
mov
push
cld
inc
pop
and
(bad)
in
mov
cmp
xor
jbe
fist
aam
aam
xchg
jns
and
outs
or
inc
mov
sub
and
xor
stc
fwait
xor
add
push
mov
push
jge
shl
or
stc
mov
fbstp
outs
add
inc
fidivr
test
sti
dec
into
xchg
mov
popa
imul
test
fwait
repz
lods
in
jns
les
mov
cmp
ins
or
inc
push
push
inc
loopne
or
add
pushf
mov
je
push
and
jns
dec
push
and
xlat
lock
mov
mov
add
iret
mov
imul
dec
xor
js
ror
inc
pop
jbe
xchg
mov
jae
push
adc
inc
pop
rcl
clc
loopne
jbe
lock
inc
rcl
in
jmp
inc
xor
jl
sahf
sbb
(bad)
add
lock
cs
js
test
cmps
fwait
jnp
pop
mov
lahf
pop
push
sub
cmp
fdivr
inc
scas
popa
jl
cwde
lods
pop
jne
jge
adc
mov
mov
fst
lahf
ins
iret
or
daa
lds
dec
nop
fist
hlt
inc
push
xor
mov
dec
and
sar
loop
(bad)
sub
cs
mov
xor
call
xor
cmc
and
push
dec
pop
ins
ret
jno
(bad)
div
push
les
pop
pop
bound
mov
(bad)
xor
pusha
test
push
or
xchg
adc
outs
and
ins
inc
outs
das
mov
mov
(bad)
icebp
jne
fcomp
push
repnz
stc
movs
mov
jp
adc
pushf
aaa
cli
dec
loope
cmps
mov
mov
or
aam
mov
fsub
pusha
test
std
xchg
or
jae
hlt
pop
xchg
lods
jmp
sub
push
out
call
push
sub
data16
outs
mov
stos
xchg
leave
mov
mov
(bad)
push
iret
or
retf
mov
fld
xchg
sbb
test
jnp
jmp
fldcw
(bad)
mul
call
int
mov
call
rcl
adc
aas
add
cmp
inc
stos
stos
mov
or
ss
rcl
ret
pop
mov
cmps
adc
mul
popf
icebp
sbb
xchg
mov
cmp
jg
dec
inc
sar
retf
pop
jae
jae
and
je
inc
or
or
outs
jb
ja
dec
or
dec
ror
test
test
imul
scas
mov
test
add
jecxz
jbe
sub
pop
xor
cmps
test
stos
(bad)
fxch
mov
(bad)
xchg
stos
aam
jge
ja
shr
mov
out
movs
fsubr
push
sahf
jl
(bad)
leave
add
lds
dec
repz
popf
jg
test
mov
shl
cld
(bad)
sub
ins
cmc
dec
popf
enterw
out
mov
xchg
popa
outs
scas
jp
sbb
popa
mov
and
xchg
jmp
stos
test
jnp
jg
hlt
lods
cmps
(bad)
sbb
mov
sub
mov
cmps
call
adc
movs
mov
das
mov
data16
xchg
mov
push
sub
retf
call
pop
cmovnp
outs
movs
push
rol
inc
retf
hlt
enter
cmp
jns
dec
cdq
fsubp
int3
sub
mov
inc
inc
rcr
cs
aam
cmp
add
adc
cmp
and
les
add
or
scas
xchg
jmp
in
sbb
and
cmp
bound
sub
jl
or
xlat
pop
fldenv
rcr
rol
ss
in
aam
repz
jl
pop
lea
dec
inc
(bad)
out
xor
mov
retf
jmp
mov
jns
mov
lock
push
cmps
fucomp
nop
cld
enter
inc
and
cmps
inc
lods
xchg
daa
push
ss
jno
aas
sbb
cdq
dec
add
pushf
mov
outs
pop
jbe
push
mov
aas
addr16
(bad)
not
call
pushf
mov
je
imul
out
mov
add
cdq
xlat
rcl
sub
mov
repz
adc
adc
(bad)
aaa
shr
sti
arpl
add
outs
call
fwait
push
mov
imul
add
(bad)
call
aaa
(bad)
pop
pop
stos
test
(bad)
outs
out
clc
jmp
test
loopne
aas
add
stc
push
shl
out
xor
dec
sti
not
mov
inc
xchg
pop
mov
add
out
cli
js
xchg
adc
mov
pop
add
sbb
mov
push
cmp
pushf
addr16
lds
pop
data16
fs
fwait
sub
pop
cwde
cmp
into
push
mov
add
out
xchg
inc
dec
pop
inc
(bad)
jle
into
xchg
lods
mov
es
xchg
pop
add
cmc
and
pop
jmp
in
mov
cmp
jne
adc
loop
mov
jbe
fs
ror
or
pop
cmp
sbb
out
imul
cmp
cmp
or
inc
cmp
loop
neg
and
jmp
aas
cli
dec
or
mov
sub
xor
shl
mov
aaa
sar
xor
imul
dec
pop
and
lods
lods
inc
movs
push
das
sbb
es
in
pop
outs
dec
adc
int3
(bad)
hlt
lds
lock
xchg
fisubr
sub
pop
mov
or
out
dec
push
(bad)
loope
int
push
call
pop
into
push
xor
cmps
adc
adc
push
shr
leave
push
add
jne
adc
jmp
outs
adc
daa
sub
mov
dec
sbb
movs
xchg
ins
dec
(bad)
imul
cmp
outs
es
mov
out
jl
sbb
loop
ret
call
mov
sbb
mov
jg
mov
push
mov
aas
iret
cmps
daa
push
mov
jecxz
scas
retf
popa
stc
(bad)
push
inc
rcr
int
push
sar
cmps
sbb
rcl
add
push
jl
pop
mov
jp
push
or
(bad)
push
es
mov
aam
xor
cwde
ins
mov
fs
push
and
xchg
pop
sub
arpl
pop
repnz
iret
jne
dec
mov
fstp
in
add
leave
dec
outs
mov
fsub
xchg
add
mov
inc
mov
es
push
imul
mov
retf
xor
ret
pop
push
pop
ins
std
dec
int3
pop
pop
iret
iret
mov
jnp
sub
xor
jecxz
pop
jbe
(bad)
xchg
aaa
loope
int3
inc
(bad)
cmp
inc
test
mov
add
fnstcw
pop
lds
mov
xchg
popf
mov
mov
pop
push
inc
jbe
fisubr
sub
iret
add
push
inc
loop
add
fcomp
aad
cmp
fs
xchg
push
dec
add
add
sub
gs
and
fisub
pop
jmp
icebp
int
dec
scas
inc
pop
adc
add
mov
jae
mov
push
dec
loope
js
sbb
sbb
cmps
xor
mov
icebp
add
aas
or
add
add
pop
lods
mov
imul
bound
fwait
es
or
push
xor
push
(bad)
aad
push
pop
imul
dec
lock
and
enter
aaa
jne
adc
push
addr16
mov
xchg
xchg
test
je
inc
jmp
cmp
ficom
mov
fisub
pop
cs
inc
mov
in
xchg
out
dec
test
loopne
jge
add
shr
and
in
push
sub
or
jno
mov
adc
or
and
test
push
jge
scas
repnz
cmp
dec
jb
push
inc
sti
lods
mov
or
cwde
cmp
jl
mov
iret
jmp
std
(bad)
jbe
jl
jg
neg
popa
mov
push
div
adc
out
mov
or
(bad)
shr
jg
and
pop
sub
jl
mov
mov
je
data16
ins
inc
in
dec
(bad)
loope
adc
add
jo
push
and
mov
hlt
fld
daa
mov
lahf
addr16
sbb
jge
or
fcomp
cmp
rcl
mov
xlat
(bad)
xor
xchg
push
mul
fwait
xchg
scas
(bad)
mov
cld
lods
addr16
jecxz
push
mov
fidivr
sbb
mov
mov
test
pushf
cli
inc
push
ss
pop
test
imul
fldcw
(bad)
(bad)
arpl
arpl
inc
pushf
mov
(bad)
inc
into
pop
jp
pop
outs
enter
ins
sbb
cmp
retf
pop
mov
xchg
daa
pop
sbb
mov
std
jmp
push
cli
dec
(bad)
sub
arpl
mov
leave
(bad)
xchg
dec
(bad)
jns
sbb
rol
mov
mov
jns
cmp
inc
ss
aas
push
js
arpl
and
fidiv
addr16
inc
xchg
ficomp
out
jno
cmc
ja
mov
pop
mov
or
adc
or
test
dec
addr16
lods
jnp
dec
mov
inc
lock
push
and
cdq
push
je
test
xchg
or
seta
retf
add
push
inc
lds
jmp
inc
test
mov
mov
xor
imul
lods
xor
pop
xchg
inc
mov
les
ss
or
call
in
cld
and
int3
dec
mov
inc
push
(bad)
dec
pop
movs
test
arpl
pop
popa
je
in
out
scas
push
imul
aaa
pop
mov
(bad)
fistp
daa
push
test
mov
les
or
aas
adc
lods
mov
pop
fdivr
jg
or
sti
jno
sbb
jp
lds
xchg
fcom
jle
mov
push
jp
fidiv
mov
sub
and
jns
test
test
dec
aad
out
hlt
add
mov
sub
stos
or
out
jo
test
or
popf
pop
enter
std
shl
jle
mov
aaa
cli
aam
sahf
scas
push
aad
sub
mov
mov
sbb
lock
sbb
inc
rcl
repz
cmp
jge
call
aaa
dec
imul
out
pop
mov
aaa
xchg
shr
lahf
jmp
cwde
push
in
inc
inc
in
and
adc
jo
push
mov
cmp
inc
lea
sbb
not
dec
daa
jns
mov
or
and
push
test
aaa
jp
jg
(bad)
(bad)
imul
test
sbb
loopne
scas
aas
out
adc
xor
movs
or
scas
mov
lods
xor
int3
or
fs
xchg
mov
pop
cld
mov
xchg
bound
xor
inc
dec
sbb
sbb
lock
ret
retf
push
aam
loopne
dec
cmp
adc
push
sbb
out
out
mov
(bad)
sbb
shl
mov
jmp
jb
call
push
cmp
(bad)
xor
mov
xlat
push
mov
sti
push
lahf
sbb
clc
jge
(bad)
adc
mov
pop
call
push
mov
test
imul
pop
mov
sub
cdq
lock
inc
or
cwde
cmps
nop
fild
or
push
in
jg
test
and
cmp
cdq
sbb
xor
mov
dec
mov
fcmovu
out
push
mov
xchg
jb
xor
push
mov
or
mov
pop
stos
mov
jg
inc
add
fdivr
jnp
int3
jbe
pop
and
jns
lds
enter
cwde
fcomp
sub
jo
xor
xor
pop
leave
cdq
cmps
(bad)
in
inc
add
loop
(bad)
and
push
mov
arpl
push
movups
sub
cmp
xchg
mov
cli
(bad)
repnz
and
shl
push
or
cmp
adc
mov
dec
mov
shl
inc
fs
cmc
aad
xchg
or
add
xor
cld
jmp
push
xor
cmp
cmp
ret
jbe
repz
cmp
cdq
inc
out
sbb
jle
cmps
mov
push
out
pop
lea
ror
sub
push
push
arpl
sahf
nop
mov
cmps
add
cmps
clc
ins
loopne
push
clc
push
inc
sbb
stos
lods
pushf
xchg
arpl
and
call
gs
and
add
jl
sbb
das
jl
pop
out
std
push
pop
or
mov
hlt
cmc
cwde
fwait
outs
mov
cmp
sar
movs
pushf
mov
mov
push
std
gs
(bad)
jae
sar
or
jl
rcl
icebp
adc
lods
pop
cmps
jmp
imul
xor
nop
mov
cmp
mov
aas
nop
test
xchg
sbb
loope
cld
jl
jmp
sub
adc
jl
in
mov
dec
jno
in
ins
loop
xchg
mov
icebp
imul
push
mov
or
and
or
int
in
arpl
cwde
pop
and
mov
sub
pop
cdq
xchg
cmps
jge
not
pusha
jbe
inc
ins
xchg
jo
cwde
out
mov
adc
sti
jg
leave
clc
jecxz
scas
pop
js
mov
add
sbb
aas
(bad)
cld
fimul
xchg
jbe
or
in
and
aad
cmp
xchg
(bad)
dec
ror
call
pushf
shl
mov
dec
push
mov
or
mov
push
mov
clc
cmps
sbb
xchg
xchg
fldl2t
adc
int
pop
mov
movs
(bad)
jmp
scas
push
inc
fild
cld
pushf
jno
or
stos
and
ret
jl
mov
xchg
mov
(bad)
fimul
ins
sahf
call
sbb
or
xchg
jb
xchg
div
add
inc
mov
dec
rcr
mov
jae
daa
call
cmp
add
cmps
jbe
push
sbb
xchg
in
dec
sbb
or
shl
sahf
sbb
lods
cmp
inc
in
fiadd
aas
leave
in
add
lea
loope
test
and
pop
dec
les
jmp
cs
or
mul
dec
adc
and
or
mov
mov
lgs
imul
dec
sbb
jecxz
add
outs
std
repz
add
pop
adc
imul
ja
movs
ja
mov
aad
xchg
mov
sub
ret
repnz
adc
cmps
arpl
stos
inc
rcl
xchg
xchg
leave
mov
(bad)
pushf
jo
nop
xor
cdq
mov
jp
and
mov
mov
mov
cmp
fimul
int
dec
and
pop
mov
imul
adc
daa
cmp
xchg
int3
cmp
xor
ficomp
push
mov
sub
inc
loopne
dec
xor
ins
div
cmp
stc
imul
repnz
dec
push
add
(bad)
mov
mov
pmaxsw
jne
mov
inc
pop
cmp
inc
adc
jmp
(bad)
pop
inc
sub
sbb
pop
into
std
sub
ret
and
rcr
push
lahf
test
ror
add
ror
jo
xor
and
jns
lock
fimul
add
loope
adc
imul
gs
(bad)
dec
xor
enter
xchg
mov
mov
or
daa
pop
add
nop
mov
pop
dec
test
popf
jno
ficomp
push
fnstcw
arpl
pcmpgtb
sahf
add
loope
stos
gs
call
arpl
bound
dec
pop
cld
mov
jmp
cs
pushf
stc
pop
pop
mov
pusha
or
movs
add
mov
push
ret
sbb
dec
adc
sbb
and
xchg
jo
push
es
fst
cmps
mov
loop
mov
loope
fs
xor
aas
mov
lock
fyl2x
sahf
jno
lods
adc
in
cwde
bound
cmp
cdq
xchg
das
mov
cmc
push
pop
jo
inc
inc
or
xor
mov
dec
adc
js
cs
lahf
jns
and
fmul
out
ficom
mov
pop
call
cmp
scas
sbb
add
mov
cmp
(bad)
xlat
jbe
fidivr
(bad)
lahf
(bad)
(bad)
out
push
aaa
mov
sbb
add
daa
xor
cdq
mov
in
daa
dec
xor
idiv
xchg
pop
mov
sub
sub
dec
adc
or
mov
lea
nop
into
jne
mov
fild
fs
repz
push
jmp
sub
push
pop
and
inc
ror
mov
outs
sub
xchg
cli
add
cli
scas
popa
add
retf
adc
sub
mov
pop
sub
mov
sub
jo
lea
xor
and
test
inc
add
sub
jg
in
fstp
(bad)
cli
(bad)
popaw
or
sub
jg
pop
gs
sub
push
adc
sub
ins
adc
es
xchg
mov
or
fdiv
add
arpl
and
mov
jmp
(bad)
pop
ret
int3
out
inc
xlat
retf
or
jno
cmp
in
(bad)
xchg
iret
cmp
or
jmp
cmc
test
adc
mov
dec
arpl
jbe
ja
cmp
movs
shl
ins
mov
xchg
fimul
fimul
dec
jg
cmps
shr
mov
mov
bound
xchg
int
retf
or
sar
fstp
push
sub
or
fcmovnbe
iret
jg
jmp
in
and
jno
push
xlat
ss
pop
test
leave
jne
les
stos
pop
mov
aas
jnp
inc
repnz
or
push
xchg
mov
xor
hlt
sub
out
dec
sti
mov
push
adc
sti
movs
ss
add
jns
adc
add
jp
push
mov
lods
sub
pop
cld
inc
(bad)
pop
push
ret
push
cmps
push
inc
sub
sbb
push
xchg
clc
loopne
cdq
and
ins
add
rcr
pushw
lods
into
iret
(bad)
xor
sub
pop
xchg
mov
sbb
out
dec
sahf
outs
or
repz
and
(bad)
inc
nop
in
xor
mov
sub
loopne
xchg
je
mov
inc
jecxz
mov
mov
cmp
adc
int3
loopne
repnz
xchg
(bad)
shl
sbb
dec
inc
xchg
cld
loopne
add
lds
mov
cmp
fst
cld
mov
pop
dec
test
xor
mov
xchg
out
cmp
das
dec
adc
cmp
or
jecxz
mov
pop
pop
xchg
lahf
push
xor
cdq
inc
xchg
dec
shl
jbe
js
sbb
xor
or
sti
push
cmp
cmp
mov
ins
mov
pop
adc
les
and
fs
popa
mov
xchg
dec
retf
es
pop
mov
loop
mov
and
les
out
sub
sbb
int
dec
nop
pop
xchg
ins
add
add
fnstsw
fcomi
add
mov
cmp
jbe
ins
neg
mov
pop
ror
rol
jb
and
js
mov
clc
and
icebp
test
call
(bad)
jb
xchg
pop
ret
fisttp
sbb
push
jae
das
sbb
sub
aam
mov
jl
in
repz
cmp
lods
or
mov
ins
xchg
pop
sbb
bound
repz
cmps
adc
push
dec
push
push
sbb
jno
cmovns
test
jae
hlt
jae
data16
and
fmul
sub
imul
add
fldcw
jbe
xchg
lds
dec
stos
xor
sub
add
xchg
mov
cmp
das
retf
mov
idiv
test
xchg
mov
aaa
inc
or
dec
stc
int
fisub
add
cwde
jl
xchg
cli
cmc
mov
das
cmc
mov
mov
call
sti
xchg
cld
popf
int
not
mov
fwait
rcr
inc
in
adc
rcl
lds
sub
imul
jle
(bad)
sbb
jbe
clc
stos
mov
inc
push
repz
mov
rcr
(bad)
mov
and
push
movs
cmp
clc
xor
cmps
mov
adc
imul
rcr
shl
mov
sbb
mov
das
dec
aad
push
scas
mov
fiadd
jp
lock
movs
jp
sqrtps
cmp
mov
xor
inc
das
fsubrp
inc
int3
cwde
push
sbb
test
data16
mov
mov
aas
push
repnz
or
and
push
in
pop
push
imul
inc
(bad)
pop
xchg
ret
cmc
inc
xor
out
repnz
scas
scas
div
addr16
mov
xchg
idiv
popa
jmp
pop
scas
jle
fcmovb
in
popa
adc
call
jne
or
jmp
mov
and
add
adc
jle
xor
fwait
xchg
mov
lods
cld
mov
inc
push
aam
cdq
fsub
mov
cs
mov
das
mov
fiadd
add
shl
and
and
fld
mov
pop
mov
add
dec
jo
mov
add
xor
jl
push
xchg
cli
movs
inc
jle
pop
pop
mov
and
xchg
xchg
mov
jbe
fdivr
xor
outs
xchg
pop
ss
mov
or
dec
loop
ins
in
ret
inc
out
out
inc
push
cmp
inc
mov
movs
xchg
adc
popf
jg
mov
shl
mov
shl
fwait
xor
(bad)
dec
pusha
sar
push
cdq
shr
xor
pop
dec
mov
jb
cmp
xchg
out
jp
in
jmp
in
(bad)
icebp
inc
lock
std
retf
fadd
mov
es
mov
sbb
(bad)
xchg
jg
inc
xchg
(bad)
push
push
pop
inc
inc
test
outs
dec
mov
mov
or
cmp
mov
icebp
inc
mov
cwde
inc
or
je
jecxz
pop
adc
dec
aas
mov
in
cmp
aad
jmp
clc
fidivr
cmp
lock
in
mov
xchg
in
jge
in
ins
dec
dec
lods
loopne
ret
jns
push
(bad)
mov
(bad)
stos
xor
xchg
jle
xor
cmp
cwde
sti
sbb
jmp
ja
cdq
into
pop
pop
shl
imul
xor
sbb
pop
cs
mov
loope
add
pusha
xchg
sub
bound
push
in
outs
fild
dec
pop
mov
test
lods
mov
mov
jecxz
and
xor
fadd
jnp
push
repnz
cmp
xchg
pop
scas
frstor
cld
femms
sub
scas
and
jmp
(bad)
call
or
jle
jne
mov
jno
add
(bad)
or
sub
into
mov
and
jno
cmp
push
xchg
push
cmp
mov
loope
mov
or
inc
pop
xor
cmps
shl
(bad)
pop
mov
(bad)
add
xor
cmp
xchg
xor
fidiv
aad
mov
stos
cmps
ss
pushf
cdq
lahf
fist
pop
jae
ret
scas
pop
cmps
call
adc
jg
mov
xor
hlt
xchg
int
retf
(bad)
shl
iret
pop
pop
stos
fisubr
cmp
outs
jbe
cmps
popa
popa
test
mov
in
push
loope
test
push
les
or
and
js
or
psrad
mov
adc
movs
xor
repz
jg
mov
repnz
and
lods
and
cmp
int
out
and
push
inc
jmp
xchg
fnstcw
jae
iret
test
mov
mov
adc
xor
jnp
mov
in
outs
test
jb
jb
ror
or
dec
in
fnsave
rol
mov
lods
jl
fistp
mov
stos
imul
daa
repnz
test
nop
mov
into
xor
stc
jns
push
mov
imul
lds
retf
xchg
cmp
stos
dec
lods
xor
push
push
and
repnz
mov
dec
pop
inc
ret
cmp
jge
adc
inc
jns
cli
mov
jle
test
and
mov
or
push
pandn
adc
jg
(bad)
add
push
div
jmp
cmp
mov
out
out
sbb
xchg
fistp
sub
cmp
xor
cmp
test
xor
mov
add
js
and
nop
sahf
fisttp
mov
sub
add
int3
fwait
xor
aam
sub
mov
ja
adc
pop
push
les
out
mov
push
test
xchg
aaa
xchg
lahf
sub
sbb
adc
movs
mov
in
add
mov
popf
inc
pushf
adc
leave
rcr
and
aam
mov
and
shr
and
jg
cmp
dec
aaa
xor
pop
inc
test
mov
cmps
sti
rol
adc
ficom
dec
rcr
sub
sub
dec
sbb
or
or
retf
add
pop
bound
pop
sub
sub
push
jns
cld
and
(bad)
mov
dec
mov
sahf
cmp
mov
es
add
fcmovbe
inc
call
(bad)
das
xor
aad
stos
and
test
test
mov
addr16
dec
call
popa
aad
imul
mov
push
or
cmp
adc
jns
ret
aas
pop
sub
ret
outs
mov
xchg
loopne
js
fistp
(bad)
loope
std
ror
(bad)
push
and
outs
mov
daa
jmp
outs
sub
mov
dec
repnz
aam
hlt
aam
mov
push
dec
test
push
fwait
div
and
ins
popa
les
and
mov
jno
das
and
icebp
mov
(bad)
and
lods
push
mov
cwde
fiadd
xchg
lock
pusha
(bad)
jno
mov
imul
and
ins
je
pop
push
dec
nop
add
shr
or
nop
cmp
sbb
vpavgb
push
cmp
movs
jl
fstp
add
das
push
push
add
mov
xchg
xor
or
mov
je
cld
pop
fiadd
hlt
push
popf
push
daa
cmp
sbb
call
cmp
xchg
dec
cmp
cmp
push
mov
pop
(bad)
fwait
jle
aaa
xor
mov
sub
add
mov
cmp
fsubr
mov
pushf
add
inc
mov
hlt
jbe
mov
in
and
test
dec
pop
mov
pop
xchg
adc
xor
sub
test
pushf
sub
push
and
mov
fdiv
je
dec
ror
jp
sti
and
popa
push
ja
mov
inc
in
mov
(bad)
in
lock
retf
test
jne
mov
cmp
mov
in
outs
jae
shr
cwde
shl
xchg
xchg
ret
dec
sub
out
add
fild
pop
and
dec
dec
int3
or
ret
(bad)
scas
xchg
sahf
pop
and
mov
clc
push
movs
or
xchg
cmps
loopne
repnz
lds
scas
jne
adc
xchg
or
popa
sub
jge
fimul
and
sahf
sub
sbb
xchg
repz
mov
cld
lods
push
pushf
pusha
inc
jp
lock
xchg
cli
test
iret
xor
push
pushf
jmp
test
ret
ror
pop
inc
mov
aad
and
adc
sbb
inc
pop
xor
add
inc
mov
pusha
sub
push
mov
mov
or
sbb
dec
outs
cdq
(bad)
in
test
popa
xchg
dec
jge
dec
pop
test
es
or
and
mov
inc
cmps
cmp
mov
cld
adc
outs
cmp
out
pop
shl
test
fdiv
popa
ins
pop
or
dec
int3
cmps
or
ficom
jge
inc
out
push
cli
imul
xchg
or
add
lar
mov
std
test
inc
imul
sub
outs
mov
push
pusha
enter
fld
xchg
ja
hlt
loop
fldcw
mov
add
cmps
or
ja
cmp
push
dec
and
cmp
inc
mov
jbe
mov
or
sub
or
add
sbb
jmp
cmp
in
cs
mov
je
(bad)
bnd
cmp
mov
icebp
(bad)
dec
les
fsub
inc
fcmovbe
cmp
xchg
mov
cmc
cmp
mov
pop
shr
jmp
push
or
xchg
ins
jb
popf
imul
mov
pop
pusha
push
out
jns
push
pop
add
loop
addr16
sbb
sbb
xchg
push
test
xor
jecxz
loopne
je
sub
jmp
push
in
mov
out
adc
add
sbb
imul
sbb
mov
mov
add
inc
mov
adc
hlt
out
arpl
cmp
add
xchg
imul
into
and
std
movs
sbb
cmp
fwait
jge
hlt
push
in
mov
movs
push
fstp
jb
mov
loopne
dec
mov
ja
das
xor
mov
mov
lods
mov
and
imul
iret
int3
lds
and
push
arpl
icebp
iret
sbb
rcl
out
mov
dec
adc
shl
mov
mov
ss
adc
leave
movs
maskmovq
sbb
into
jmp
or
sete
aas
or
mov
loope
sub
or
add
clc
push
iret
mov
lea
sub
fadd
(bad)
lock
pop
jmp
and
or
xchg
stos
push
push
lds
shl
rcl
fdivrp
add
add
sbb
add
dec
ror
fld
pop
por
jg
add
adc
dec
add
pop
loope
pop
push
inc
clc
inc
scas
(bad)
scas
sar
sbb
loope
vorps
jbe
inc
icebp
and
cmc
adc
push
push
fbstp
jge
loop
rcl
mov
pop
pop
or
lods
es
(bad)
stc
dec
loop
push
movs
cwde
add
jmp
leave
test
push
push
lods
inc
call
cmp
in
push
outs
js
or
inc
xchg
iret
lods
enter
cmc
pop
ss
ins
push
outs
xchg
push
das
cmp
push
sub
jbe
inc
pop
cmp
and
adc
jmp
fdivrp
cdq
inc
mov
into
mov
sbb
repz
cld
fidiv
sbb
pushf
(bad)
aad
sbb
jmp
fucomi
ds
iret
push
test
lds
pop
aaa
or
cmp
and
lock
or
and
or
movs
mov
test
pop
stos
cmp
inc
lods
sbb
jns
jmp
jmp
pop
push
sbb
mov
and
push
std
addr16
jns
clc
or
rcr
push
mov
(bad)
not
xor
push
pop
xor
fwait
jno
jg
sub
add
cli
data16
sub
xor
sbb
shr
mov
sub
in
push
test
xchg
icebp
fidivr
mov
mov
ror
pushf
(bad)
or
div
lods
add
movs
cmps
test
fs
and
rcr
mov
xor
mov
retf
inc
mov
lfs
dec
out
popf
cmp
loopne
mov
inc
add
dec
xor
adc
js
inc
fsubr
fwait
call
bound
mov
lea
aam
imul
imul
mov
mov
push
xchg
fldenv
add
and
iret
and
push
pop
jne
and
push
stos
lds
mov
cs
stos
ret
out
int3
mov
sar
call
fist
pushf
cmp
imul
test
(bad)
aas
dec
cmps
mov
inc
inc
sub
pop
jns
cwde
cmp
test
repnz
pop
cli
and
cmp
jmp
fld
xor
add
sbb
stos
sub
aaa
jmp
mov
out
xor
fisttp
mov
jg
mov
ja
pushf
call
aas
ss
pop
jecxz
jb
int3
out
mov
arpl
sbb
mov
jmp
iret
div
or
pusha
call
sbb
mov
pop
push
fs
sahf
aaa
mov
int3
pushf
mov
stos
dec
(bad)
clc
jmp
ja
pop
add
lea
inc
mov
daa
in
mov
dec
movs
(bad)
dec
sbb
retf
sar
cmp
dec
cmp
std
in
inc
xchg
mov
inc
pushf
sub
mov
xchg
imul
sbb
lods
mov
(bad)
mov
test
icebp
push
daa
mov
stos
pop
dec
scas
pop
push
sbb
lods
in
dec
jnp
cmps
and
(bad)
jns
cmp
hlt
add
arpl
bts
mov
or
lods
arpl
lods
cmps
cmc
jb
inc
mov
test
pop
sub
test
pop
mov
sub
mov
ficomp
fist
cmp
bound
sub
leave
pop
shl
dec
call
xchg
loope
cmp
pop
das
imul
fild
mov
in
shr
xchg
int
and
adc
inc
pop
jnp
xor
push
enter
or
enter
movs
push
ins
cs
gs
mov
sahf
ins
jae
not
adc
adc
sub
adc
xor
in
icebp
in
jmp
xchg
xchg
(bad)
addr16
sbb
or
mov
loope
mov
inc
pop
add
js
call
sbb
inc
mov
or
call
mov
cmp
clc
xor
scas
cmp
hlt
gs
mov
das
inc
xchg
push
outs
out
xchg
in
mov
pop
mov
popa
push
inc
aad
shl
hlt
lods
enter
cwde
and
mov
adc
inc
jno
bound
cmc
jmp
pop
pop
(bad)
adc
das
lock
jb
cdq
xchg
fucom
adc
and
push
mov
into
rcl
adc
je
scas
xchg
out
mov
and
sahf
repz
fxch
jp
lods
sub
lods
or
imul
jae
mov
popa
sub
fcomp
retf
aad
dec
and
xchg
pop
outs
outs
popf
mov
dec
int
fadd
sbb
cld
es
sbb
add
scas
loop
test
int3
push
cmps
retf
stos
movs
scas
(bad)
jae
imul
xchg
inc
pop
cmp
daa
nop
rcl
cwde
hlt
in
cmp
jo
sbb
(bad)
jmp
xchg
and
sub
pop
jmp
dec
add
ins
in
and
cmp
inc
ror
jl
imul
pop
jg
jo
or
jle
sbb
stos
cmp
xor
xor
add
sub
outs
aad
leave
imul
lods
fwait
jne
out
or
mov
addr16
inc
call
adc
icebp
inc
sub
sub
daa
ss
pop
dec
por
idiv
push
(bad)
sahf
ins
jge
push
cmp
stos
stos
movs
shl
add
inc
in
in
ds
mov
cld
sar
and
lods
pop
xchg
sahf
mov
sbb
push
daa
cmp
cwde
xchg
stc
in
inc
hlt
arpl
ins
sbb
or
xlat
nop
test
cli
sar
jl
inc
sub
call
mov
and
mov
scas
inc
and
mov
loop
mov
add
test
jbe
add
enter
stos
clc
loopne
sub
or
cmp
adc
aaa
push
cwde
test
mov
pusha
xchg
sbb
ret
pop
sahf
cld
xchg
das
xchg
shr
xchg
mov
(bad)
inc
fnstsw
(bad)
sbb
xor
and
imul
jo
ins
dec
pop
ret
xor
add
pop
or
cmp
fistp
xor
adc
out
or
popa
xor
push
adc
lahf
mov
jae
shl
pop
cmp
xor
and
pop
scas
jmp
mov
mov
retf
push
fdivr
add
xor
pop
rcl
loop
adc
or
mov
(bad)
int3
mov
or
jle
and
lock
aas
pushf
xchg
push
outs
fldcw
jmp
out
pop
dec
or
mov
or
test
leave
stos
ds
or
ins
hlt
push
adc
outs
mov
push
in
add
mov
mov
sub
enter
push
aaa
xor
adc
leave
or
ficom
cs
mov
xor
loopne
daa
ins
mov
xchg
adc
dec
std
sub
fs
jmp
mov
xor
(bad)
(bad)
test
shl
inc
push
push
mov
aam
mov
inc
pop
cld
shr
repz
(bad)
lock
aas
sub
sub
imul
imul
test
movs
jne
pop
cld
adc
cmp
xchg
imul
(bad)
push
push
fyl2xp1
jo
scas
rcr
xor
and
xchg
jmp
mov
mov
stos
mov
pop
ds
and
jmp
push
jno
aaa
dec
sbb
and
scas
xor
and
sub
pop
stos
lods
xor
in
dec
popf
test
int3
xchg
fbstp
mov
ins
cwde
dec
lock
cmp
cmps
mov
mov
mov
stos
popa
dec
jl
enter
xor
inc
(bad)
out
fisub
or
or
cmp
popa
fwait
mov
dec
mov
sar
aas
inc
push
jl
adc
fwait
adc
sar
mov
out
fisttp
in
or
mov
outs
cmps
movs
(bad)
stos
outs
xchg
repnz
push
shr
jge
ja
sub
ror
jb
mov
lods
sub
(bad)
xchg
sbb
xor
loopne
and
push
gs
(bad)
push
mov
pop
cmp
xchg
pop
jno
or
add
(bad)
jmp
stc
pop
jns
std
pop
sbb
sti
adc
pop
pop
pushf
xor
mov
lea
in
push
xchg
inc
push
lock
js
pop
mov
daa
mov
dec
mov
outs
(bad)
mov
inc
cmp
and
jae
data16
xchg
push
dec
mov
dec
stos
inc
(bad)
arpl
ss
sti
add
fwait
push
inc
jp
cmps
push
lods
mov
in
push
push
ret
pop
inc
or
add
leave
call
cmp
dec
outs
enter
pop
fdiv
shr
xchg
inc
imul
mov
and
ss
adc
mov
and
sub
mov
movs
pop
sbb
push
pop
retf
push
adc
adc
sahf
mov
out
in
and
data16
dec
jbe
jge
scas
xor
and
hlt
pop
sbb
lds
cmp
inc
test
(bad)
cmp
jmp
ret
xchg
fidiv
(bad)
cmp
es
xor
aaa
scas
jb
int
jle
wbinvd
jmp
sub
not
sub
mov
and
xchg
adc
jg
push
rol
xchg
xchg
or
cmp
sub
inc
arpl
cmp
movs
shl
push
call
out
push
push
sbb
pusha
rcl
sub
sub
or
(bad)
lods
(bad)
lds
icebp
in
mov
adc
adc
movs
jmp
xchg
xlat
sbb
dec
in
mov
pop
jb
cld
sbb
ds
test
cli
push
icebp
push
dec
jmp
(bad)
hlt
dec
push
sbb
sbb
or
cmp
add
lahf
push
sbb
in
mov
out
bound
lea
loope
adc
mov
xchg
mov
addr16
jo
lock
push
movs
test
vdivps
cmp
pop
fsubr
dec
sbb
xchg
into
imul
shl
jecxz
pop
or
xchg
retf
clc
aaa
lods
dec
imul
xchg
sub
jbe
fld
pop
shl
das
dec
in
xor
pop
rcl
cli
lahf
in
(bad)
mov
mov
jae
pop
mov
jge
outs
(bad)
out
xor
jnp
sahf
test
sub
jns
add
clc
stos
daa
jl
fld
test
jle
jne
pop
xlat
sbb
sbb
add
pop
mov
adc
xchg
and
rol
inc
xor
mov
jmp
inc
loopne
jl
xchg
mov
cmc
cmc
xchg
inc
mov
inc
fs
fs
add
mov
or
sbb
inc
or
outs
int
jmp
jmp
not
rol
cmps
loop
sahf
push
xchg
xchg
popa
fwait
push
sbb
(bad)
xor
xchg
sar
sub
xor
scas
gs
lahf
sbb
arpl
inc
shl
mov
sub
xor
(bad)
xchg
cli
fnstsw
(bad)
arpl
(bad)
in
out
mov
jo
dec
mov
js
outs
movs
shr
sahf
dec
into
stos
shr
adc
call
je
aaa
sar
xchg
adc
lods
cmp
pop
scas
icebp
pop
add
jecxz
jnp
aad
add
jge
mov
ret
lods
mov
inc
bound
je
dec
mov
push
jmp
inc
jae
jmp
(bad)
mov
mov
arpl
adc
push
stos
dec
inc
rcl
jnp
mov
loopne
xor
retf
sub
inc
sub
mov
dec
pop
cmc
fsubr
pop
sahf
mov
pop
push
popf
and
les
sub
pop
sar
mov
mov
in
dec
jmp
jo
repnz
lods
xchg
ret
shl
dec
push
jle
(bad)
pop
add
repnz
push
and
dec
dec
inc
push
call
aam
shr
and
jg
cmp
dec
inc
adc
and
dec
xchg
repnz
xor
mov
pop
mov
jae
fld
pusha
fcomi
sub
ins
and
clc
mov
ror
xlat
aas
mov
xchg
ja
mov
fadd
lahf
sar
(bad)
jg
cld
and
jae
push
ds
xchg
add
jg
mov
aad
daa
pop
jae
mov
ins
cmps
retf
ss
mov
sahf
ud0
push
fcmovb
xchg
mov
mov
test
movs
sbb
lahf
xchg
cs
je
int3
repz
loopne
imul
jmp
jecxz
push
test
daa
cli
arpl
mov
xor
lock
jae
sbb
stos
outs
xor
je
xor
fdiv
adc
data16
xor
adc
or
pushf
repnz
jle
inc
mov
enter
repnz
enter
inc
aaa
push
nop
rol
mov
arpl
xlat
add
pop
xchg
xor
ds
mov
inc
inc
mov
cmps
or
inc
dec
cmps
sbb
sbb
dec
jge
adc
mov
sbb
sbb
adc
fld
mov
adc
cld
push
pop
cmp
lds
jo
sbb
adc
int3
(bad)
out
das
outs
pop
sbb
jne
mov
jmp
sub
fwait
jne
imul
in
xor
and
mov
lock
sbb
xchg
and
mov
(bad)
scas
std
mov
int
xor
lock
mov
(bad)
shl
pop
inc
jl
xchg
pop
push
pop
jb
jmp
adc
(bad)
mov
das
cmc
sub
popa
loopne
adc
mov
(bad)
div
std
mov
fstp
xor
add
call
sub
adc
jbe
xchg
or
mov
movs
rcr
cmp
into
xchg
mov
sbb
pop
(bad)
sbb
pop
mov
aad
pop
daa
test
pop
sti
and
arpl
loope
jge
stc
mov
jp
test
push
push
pusha
imul
cmp
bnd
sub
daa
or
nop
push
fwait
pop
dec
jns
std
jbe
pop
icebp
push
ret
dec
fdivr
dec
ins
imul
mov
adc
xchg
or
and
(bad)
mul
cmp
mov
mov
fimul
push
and
xchg
sahf
jb
mov
mov
pusha
push
cwde
daa
shr
inc
in
push
push
ret
in
add
fisubr
(bad)
add
gs
push
lods
loope
xchg
into
lahf
add
in
ror
xchg
jae
rcl
vunpcklps
jmp
ins
cmp
aad
std
dec
sti
mov
jo
loopne
(bad)
jmp
test
icebp
pop
pop
leave
add
mov
xchg
push
jno
imul
mov
pop
pop
cmp
xchg
gs
xlat
mov
pop
jmp
das
and
dec
xchg
push
ficom
push
push
ror
arpl
push
(bad)
or
ret
(bad)
fisttp
mov
aad
call
(bad)
les
pop
pop
sub
xor
jp
adc
(bad)
lock
(bad)
sbb
xlat
dec
fimul
ss
push
sahf
push
xchg
jbe
mov
pop
test
mov
mov
mov
lahf
movs
or
xchg
pop
lods
mov
ficomp
cwde
sbb
in
je
int3
jge
xchg
add
shl
sub
into
clc
imul
pop
and
add
xchg
push
clc
or
das
(bad)
dec
ret
into
pop
mov
mov
lea
sbb
inc
in
out
and
retf
lahf
scas
push
or
neg
mov
cdq
in
push
or
push
shl
neg
pop
mov
push
mov
mov
lea
in
xchg
jno
mov
jnp
retf
je
or
stos
jne
(bad)
aad
xchg
inc
std
jno
fisub
sahf
add
pop
cmps
mov
in
add
xchg
xor
inc
fistp
out
dec
sub
ins
cld
pop
xor
(bad)
push
fs
scas
lds
outs
daa
inc
add
hlt
inc
mov
jns
add
addr16
add
sti
movs
cmps
mov
retf
je
mov
xchg
outs
in
(bad)
es
xor
pop
data16
stos
dec
mov
jecxz
or
and
iret
inc
mov
adc
mov
pusha
int
outs
gs
mov
lods
pop
bound
add
cld
retf
push
lods
xchg
ja
and
cmps
jns
rcr
out
sbb
inc
mov
dec
push
out
adc
dec
adc
xchg
add
fcom
dec
stos
xchg
xor
add
cld
cmp
test
and
loopne
mov
fwait
dec
js
mov
adc
mov
(bad)
loope
data16
mov
cs
cli
push
das
sub
adc
cmp
rol
adc
stos
in
std
lds
bound
or
ret
jecxz
mov
or
or
pop
outs
aad
dec
add
push
dec
in
ficom
sahf
call
and
hlt
pop
fmul
dec
sbb
xlat
xchg
test
sub
repnz
hlt
loopne
in
adc
push
add
add
mov
rol
jns
adc
push
(bad)
daa
xchg
hlt
fs
sbb
mov
sbb
popf
lahf
inc
enter
jmp
inc
aad
mov
mov
or
stos
lds
dec
push
jae
ins
push
jne
sbb
jle
mov
pop
xchg
pop
jle
into
jno
sbb
mov
lock
iret
and
in
hlt
jge
cmp
test
or
jno
mov
adc
loopne
mov
xchg
cli
cmp
pushf
loopne
je
mov
xchg
arpl
mov
dec
outs
pop
(bad)
out
sub
xchg
jp
or
(bad)
jmp
push
xor
xchg
ins
ret
mov
sbb
loopne
jp
or
mov
add
mov
cmp
outs
mov
sar
sbb
fdiv
pop
mov
mov
push
mov
mov
push
push
das
test
mov
mov
dec
adc
sub
rol
les
mov
das
and
loopne
pop
les
fmul
inc
sub
outs
xchg
rol
mov
imul
call
fstp
pop
lods
in
lods
loope
out
xlat
or
movs
pop
or
xchg
pop
ins
repnz
ja
xor
cmp
shl
hlt
dec
mov
xlat
cdq
repz
cmps
jge
stos
call
inc
mov
fild
jmp
sub
loope
jns
mov
in
rcr
clc
add
ror
inc
and
sbb
repnz
sbb
jbe
mov
packssdw
mov
js
sbb
test
mov
shl
dec
ja
cwde
mov
xchg
adc
jo
es
cmps
popf
xor
out
ret
in
pop
push
data16
and
lahf
pop
mov
(bad)
lock
jo
pushf
ins
xchg
xchg
popa
add
add
fcomp
cmp
pop
or
loopne
ds
push
cwde
sahf
add
mov
mov
cmp
daa
add
repnz
mov
rcl
les
test
icebp
pusha
bound
push
loop
inc
jbe
mov
shr
cmp
inc
icebp
dec
sahf
out
xchg
(bad)
cmp
jge
jbe
outs
repnz
push
out
test
cmc
pop
(bad)
jmp
icebp
inc
lea
xchg
fidiv
cmc
(bad)
xchg
inc
sbb
cmp
not
movs
mov
shl
iret
cwde
(bad)
sbb
jmp
arpl
stos
rcl
cmps
aam
add
mov
mov
sub
lods
push
sbb
stos
add
clc
jns
inc
adc
mov
dec
push
cmp
or
pushf
pop
sbb
mov
sub
jp
sub
pop
mov
fld
fbstp
sti
adc
dec
data16
jmp
xor
inc
(bad)
aaa
pop
mov
out
ret
push
arpl
sub
fcmovbe
xlat
xchg
mov
adc
je
or
lahf
mov
scas
shr
pop
jo
jb
(bad)
(bad)
xor
nop
and
xor
sti
push
ret
jnp
outs
sti
hlt
push
xor
lock
les
jg
mov
cmp
lods
iret
add
cli
fdivr
(bad)
js
mov
std
icebp
loopne
xor
or
xchg
xor
mov
(bad)
sub
mov
push
sbb
sbb
icebp
or
in
lahf
mov
outs
fisttp
jl
sub
cmp
pop
pop
in
xchg
jge
add
push
sub
dec
shl
fcom
adc
lods
mov
xlat
add
adc
mov
inc
sub
sbb
push
xchg
into
popf
xchg
ja
push
fdivr
ins
dec
pop
js
mov
inc
and
jecxz
in
sbb
xchg
sbb
imul
sti
xlat
sbb
inc
pop
pop
dec
je
data16
xchg
pop
mov
push
push
(bad)
jge
cwde
jge
aad
ins
jns
daa
(bad)
imul
movs
lahf
dec
cmp
push
jnp
and
sub
ficom
rol
sub
ins
sub
jns
lods
add
and
pop
mov
in
sub
dec
icebp
push
imul
mov
xchg
rol
pop
mov
inc
stc
jo
(bad)
retf
cwde
inc
bnd
dec
or
or
retf
mov
sbb
and
pop
xchg
jmp
sbb
ret
xlat
gs
add
xchg
rol
pop
push
aam
pop
mov
mov
lods
ins
test
push
(bad)
sub
add
fsubr
pushf
dec
inc
push
pushf
cmps
rol
call
out
mov
sbb
jp
fcmove
std
popf
inc
dec
aad
jecxz
dec
int
(bad)
lahf
xor
mov
mov
xchg
sar
cld
sbb
in
movs
cmc
popf
mov
js
je
xor
nop
adc
jnp
dec
test
(bad)
jmp
mov
into
out
dec
jmp
and
dec
repz
adc
mov
push
std
loope
loope
or
or
cld
aad
outs
inc
inc
call
jbe
push
cmps
cmp
add
xchg
repz
add
out
or
aaa
dec
ss
das
lock
xchg
enter
add
jno
lea
mov
(bad)
out
inc
cmp
sbb
xchg
icebp
xor
rcl
cmp
push
and
lds
cmp
mov
lock
mov
inc
fsubr
adc
adc
dec
xor
clc
clc
push
(bad)
cmps
icebp
push
push
xchg
and
pop
push
jne
cli
xor
fadd
cmps
jb
and
daa
lods
add
lods
jbe
adc
imul
int3
ins
push
call
fisttp
loope
xor
jne
inc
into
cwde
int3
dec
mov
mov
inc
(bad)
cmc
mov
push
rcr
daa
leave
js
push
movs
pop
mov
mov
or
shl
loop
fdiv
es
scas
(bad)
loopne
ss
sub
fdiv
push
mov
pop
or
stos
jne
ja
xor
cmps
ja
stos
adc
push
dec
xchg
retf
lahf
loope
inc
aaa
fwait
jmp
jle
test
(bad)
and
or
mov
push
xchg
ret
inc
pop
sub
adc
mov
xchg
push
out
jno
scas
inc
cmp
in
jge
popf
sub
cs
ja
mov
fldenv
ss
mov
shl
and
fsub
bound
push
lea
outs
sub
sbb
(bad)
mov
in
dec
pop
xor
pop
aaa
inc
mov
mov
push
jl
and
xchg
fcmovu
dec
cdq
(bad)
(bad)
mov
ficomp
outs
shl
pop
iret
sbb
xor
mov
xchg
lods
jno
add
xor
popa
and
xchg
fs
sub
pop
adc
jae
es
sbb
sbb
aam
mov
pusha
movs
adc
ret
mov
stos
pop
or
movs
(bad)
icebp
sub
loope
adc
repnz
inc
sbb
ja
xor
mov
ins
jle
add
add
(bad)
shr
movs
in
inc
xchg
clc
gs
add
(bad)
fild
pop
movs
sti
sbb
inc
xor
rcr
pop
fcomp
and
sti
cmp
aad
and
sub
rcl
rol
push
mov
pop
jl
aaa
jg
or
test
push
and
cmp
cdq
fucomip
(bad)
xchg
adc
pop
call
add
scas
fmul
test
ror
enter
fisttp
stc
clc
fld
bound
rol
outs
push
dec
aas
dec
cld
sub
mov
cmp
ror
cmc
push
fcmovb
jns
iret
leave
jns
inc
gs
and
lods
cdq
stos
jb
rol
push
sti
xor
rcl
xor
xchg
fild
pop
add
aaa
mov
loope
inc
retf
jp
jmp
ins
mov
cmc
lods
int3
mov
aas
xor
sbb
ja
push
add
fisttp
pop
loope
mov
xchg
ja
icebp
mov
push
pop
fs
push
cmp
push
sar
sbb
ins
aaa
inc
ins
jg
fidivr
outs
dec
jb
(bad)
pop
sti
idiv
fcomi
jmp
fild
in
mov
inc
jnp
dec
mov
(bad)
mov
ins
pop
out
push
pop
mov
lds
pop
add
mov
push
or
jge
mov
ficom
push
dec
pop
(bad)
jns
jns
xchg
mov
sbb
xchg
or
inc
mov
test
sub
cmp
xor
stc
dec
push
and
xchg
arpl
jecxz
xchg
rol
sbb
dec
xor
adc
dec
into
xlat
cmp
and
ret
xchg
dec
imul
ror
imul
sbb
mov
(bad)
into
dec
jnp
test
outs
icebp
xchg
hlt
dec
sub
cmp
mov
loop
pop
(bad)
out
adc
xchg
shl
into
imul
imul
pop
popa
mov
sahf
repz
in
sbb
outs
add
mov
aaa
cld
adc
jmp
or
xor
sub
into
rol
mov
test
add
inc
sbb
xor
xacquire
jmp
jo
xor
call
add
inc
ins
sbb
jae
bound
jmp
pushf
or
iret
adc
mov
rol
cmp
hlt
inc
dec
stc
cmps
inc
jmp
dec
xchg
adc
out
mov
rol
test
pop
movs
rcl
in
aad
jmp
(bad)
sub
arpl
sub
mov
jns
cmp
push
cmp
lahf
aas
or
(bad)
mov
jecxz
(bad)
cmps
sbb
std
dec
pop
ret
ret
mov
jle
sub
cmp
push
loopne
adc
or
loop
jno
mov
sti
sub
fsubr
xchg
mov
xchg
push
mov
int
mov
push
gs
rcl
enter
push
dec
mov
movs
mov
xchg
call
xchg
rol
gs
aad
inc
loop
into
xor
retf
andps
cmp
lods
scas
mov
xchg
pushf
test
sub
sub
jbe
out
cmp
fcomp
inc
lahf
adc
sbb
fisttp
scas
pushf
jns
into
pop
push
test
mov
add
and
lds
or
inc
fsub
add
fsub
cmp
fmul
test
lods
(bad)
jne
pop
adc
jae
shl
fwait
push
addr16
mov
jae
(bad)
jle
call
es
adc
add
mov
rcl
sub
and
mov
lahf
dec
adc
mov
movs
enter
ins
lock
sahf
mov
test
inc
or
and
fdiv
out
int3
pop
jmp
fcomi
sub
js
pop
inc
mov
xchg
adc
retf
mov
sbb
adc
cmps
xchg
jle
sbb
push
xchg
xor
in
div
lods
xchg
popf
aad
jle
sahf
ret
(bad)
inc
mov
push
(bad)
fidiv
mov
jbe
outs
or
ja
inc
jle
dec
xor
mov
imul
pop
test
or
jno
dec
out
int3
(bad)
xor
je
arpl
sti
cdq
into
mov
push
(bad)
lods
(bad)
hlt
and
push
popa
xor
add
fwait
or
fnstcw
aas
add
xor
dec
je
cdq
or
mov
pop
mov
call
outs
aam
xor
out
adc
jmp
leave
adc
xchg
inc
test
adc
jge
mov
pop
adc
fsubr
fiadd
sub
fs
ror
(bad)
test
sub
cmp
pop
sub
cmc
xlat
fwait
add
and
loopne
mov
sub
sbb
xlat
js
mov
mov
mov
stc
sub
sahf
pop
cs
test
lds
xchg
loope
sub
call
imul
xchg
dec
ins
inc
mov
enter
movs
inc
loopne
xchg
xchg
jge
jmp
lods
jmp
mov
mov
push
adc
jmp
(bad)
push
jb
cs
dec
cmp
out
pop
clc
jns
add
jg
in
fidiv
je
test
ror
xlat
pop
pop
test
cmp
mov
pop
push
je
or
fcmove
pop
mov
pop
gs
dec
enter
scas
and
jp
popa
rol
inc
jbe
retf
sub
cmp
mov
and
pop
xor
pop
mov
clc
mov
mov
xchg
rcr
lds
fs
inc
push
dec
sbb
in
js
xlat
mov
or
xchg
mov
stos
mov
aad
add
setno
or
fs
test
mov
mov
pop
std
mul
xchg
sub
mov
outs
in
cmp
sub
xlat
movs
iret
adc
jp
or
jmp
or
mov
lods
mov
out
dec
or
adc
sar
adc
cli
pop
mov
jmp
fld
in
test
jg
iret
sub
add
mov
push
lea
mov
lods
dec
pop
mov
test
ja
(bad)
cdq
dec
push
fmul
jb
(bad)
clc
enter
cwde
push
sub
xchg
sar
add
pop
fcomp
push
bswap
xlat
aas
mov
mov
dec
nop
ficom
aas
test
stc
inc
gs
inc
jecxz
iret
inc
mov
push
push
pop
pop
add
xchg
stc
mov
mov
pop
mov
rol
jno
scas
ins
inc
dec
cli
dec
lock
push
inc
pop
inc
adc
inc
or
stos
cs
push
inc
loopne
and
movs
mov
aas
inc
cmp
inc
fmul
fld
and
int3
out
and
jb
mov
sbb
paddb
add
xor
test
jge
imul
push
inc
jae
dec
inc
lods
mov
sub
pop
bound
adc
xchg
cmps
and
fstp
xchg
inc
mov
jns
add
cwde
xchg
pop
xor
lock
call
sar
dec
xchg
outs
mov
das
sub
es
aaa
cmp
jmp
loopne
sub
add
jge
jge
pop
rol
pop
push
push
cmps
sbb
jmp
jge
not
xchg
jns
fimul
sub
lds
push
sbb
rcr
adc
arpl
out
inc
or
jle
and
rep
iret
dec
movs
fsub
xchg
mov
sbb
pop
push
daa
cmp
cdq
sub
outs
and
bound
xlat
fsub
fbld
dec
adc
or
mov
out
mov
sub
loop
jnp
inc
xor
test
inc
std
das
and
jns
and
sbb
btr
sti
jl
mov
lods
adc
jmp
mov
sub
jne
inc
rep
mov
(bad)
(bad)
popf
mov
push
add
xchg
mov
dec
out
cmp
or
mov
cmc
cmc
mov
jl
add
(bad)
leave
mov
sub
jecxz
xor
adc
stc
fadd
dec
adc
pusha
inc
ret
gs
or
das
(bad)
xor
(bad)
retf
nop
sbb
repnz
int3
cmp
mov
aaa
fisub
mov
cli
push
dec
cmp
mov
fcom
pop
adc
neg
mov
fst
mov
and
jmp
jmp
sbb
mov
inc
sub
cmp
inc
xor
outs
jmp
adc
add
scas
add
(bad)
das
gs
int3
inc
xor
stc
jo
mov
inc
mov
pop
jle
jnp
add
fwait
loop
imul
out
cs
repnz
adc
cmc
jae
mov
mov
imul
mov
cmp
ror
(bad)
mov
pop
daa
cmp
adc
ja
fidivr
ins
retf
sar
or
call
push
cld
and
sbb
add
jle
mov
jb
push
and
jecxz
rcr
mov
inc
or
and
mov
adc
add
sbb
mov
lods
mov
outs
mov
imul
push
mov
xchg
fst
ss
pop
mov
mov
pop
inc
push
cmp
sub
xchg
push
adc
pop
sub
adc
mov
mov
mov
and
inc
push
enter
dec
mov
aad
cmp
(bad)
cld
mov
aaa
ds
adc
add
in
iret
stos
mov
loope
idiv
cwde
jmp
rol
mov
lods
jne
xor
mov
mul
call
fiadd
stos
test
out
sbb
jmp
loope
fist
scas
cmp
aas
(bad)
adc
cmp
dec
bound
fadd
fwait
adc
arpl
mov
js
push
leave
push
jecxz
sub
pop
mov
xchg
push
add
fdivr
pop
cmp
sahf
gs
loopne
mov
mov
ret
sub
push
xor
pop
sub
fxch
adc
shl
sub
arpl
xlat
(bad)
cdq
mov
sbb
jge
xor
arpl
dec
push
pop
imul
mov
int3
addr16
push
pusha
rol
dec
xor
(bad)
repz
push
pop
mov
dec
xchg
addr16
sbb
test
in
loopne
(bad)
repz
int
jle
ss
enter
dec
inc
add
cli
cmp
add
div
xor
pop
add
adc
not
rcl
inc
fimul
dec
mov
and
cwde
or
outs
test
popf
add
push
lds
jmp
mov
jmp
pop
arpl
jmp
(bad)
in
nop
ret
pop
inc
or
(bad)
outs
jg
sti
push
adc
imul
sbb
add
scas
outs
and
push
mov
addr16
add
add
pop
outs
jnp
pop
stc
(bad)
mov
sub
outs
cmp
jmp
add
fwait
jmp
mov
fstp
inc
cwde
and
aam
sbb
das
(bad)
mov
push
aas
inc
fdiv
mov
cmp
mov
jae
dec
call
cld
test
dec
fnstsw
repnz
push
add
rcr
(bad)
and
mov
repz
fiadd
push
arpl
or
jno
imul
cmp
push
pop
ja
mov
pop
xchg
mov
ins
test
cs
inc
sbb
pop
fcompp
movs
fist
ss
cmc
sub
(bad)
rcl
and
rol
out
dec
sub
mov
cmp
xchg
iret
push
sub
xchg
mov
and
repz
inc
and
pop
repz
pop
mov
cmp
pushf
sti
dec
or
in
std
inc
dec
mov
jge
pop
xchg
inc
pop
inc
sub
lods
fldenv
mov
dec
test
repnz
push
cmp
push
dec
(bad)
xor
pop
retf
pop
es
rcl
repz
fld
or
fsub
pop
jns
xchg
cmp
fs
inc
xchg
lods
jmp
xchg
mov
adc
sti
data16
aaa
pop
rcr
push
retf
dec
not
test
das
(bad)
sub
push
repz
sub
outs
aam
cmps
(bad)
cmc
arpl
jl
popa
xor
pop
pop
test
push
adc
adc
jp
mov
dec
mov
add
aaa
and
rol
dec
jmp
in
shr
ret
mov
jecxz
pop
je
xchg
xchg
das
push
stos
rcl
add
stos
lods
jns
add
cs
push
stc
lods
push
add
jecxz
test
stos
lahf
sbb
inc
dec
ja
jne
mov
and
loop
loope
je
pop
call
cmp
out
jo
aas
dec
iret
or
(bad)
jmp
clc
loop
in
dec
xor
and
leave
std
(bad)
lods
inc
(bad)
(bad)
pop
and
mov
xchg
push
cmp
pop
call
(bad)
lock
dec
aaa
cmc
aaa
lds
xchg
repz
mov
sub
xor
jne
pushf
shl
in
daa
test
dec
pop
lods
call
sbb
jge
call
xchg
dec
add
jne
mov
xor
jo
pop
or
cmps
mov
ret
jmp
mov
xlat
or
and
nop
call
ds
cs
jecxz
adc
mov
not
js
out
xchg
and
mov
and
mov
cmp
sbb
lea
imul
ins
out
add
jns
sbb
loopne
ja
mov
cmp
mov
jmp
xor
in
sbb
mov
inc
hlt
mov
add
mov
repz
fld
sbb
out
xchg
jns
fldenv
ins
mov
cmp
or
cmp
rcr
sub
pop
mov
add
stos
aas
movs
hlt
lea
mov
xchg
and
or
fs
sbb
or
cwde
sbb
dec
inc
movs
jbe
dec
out
xchg
movs
jl
stos
int
xor
retf
stos
jecxz
rcr
scas
jbe
loopne
int3
adc
enter
pop
dec
cmp
popa
dec
push
cdq
popf
sbb
or
repz
fnsave
into
pop
push
xor
pop
and
push
outs
int3
aam
fldcw
jo
sub
mov
jae
ins
mov
mov
dec
mov
cmp
add
pop
ficom
jp
or
mul
test
push
cmp
add
iret
mov
mov
cmp
in
cmp
cmp
add
mov
xor
xchg
sar
xchg
or
push
fadd
and
leave
sbb
ja
popf
or
loope
add
sbb
jge
pop
dec
lahf
retf
stos
inc
outs
mov
inc
add
mov
mov
jbe
mul
inc
and
xchg
mov
rol
or
js
lahf
inc
popa
popf
cmp
push
stc
popa
aaa
jle
pop
fsub
test
and
or
cmp
(bad)
fdivr
xchg
pop
inc
xor
in
adc
fsub
lods
mov
ror
lods
stc
pop
pop
xchg
(bad)
shr
or
retf
rcr
cmp
popa
adc
pop
and
cmps
push
(bad)
mov
loop
not
sbb
mov
ficomp
mov
(bad)
cmp
xchg
out
and
adc
mov
popf
mov
(bad)
jmp
call
ret
hlt
adc
or
jp
adc
and
scas
fcomp
sahf
jg
mov
lahf
jne
xchg
sub
js
mov
mov
jne
inc
rcl
mov
fimul
movs
ja
and
shr
push
imul
ror
imul
(bad)
cmps
push
mov
pop
fdivr
mov
loope
fdivr
ss
push
stc
(bad)
push
cmc
mov
enter
xchg
push
jg
mov
inc
rcr
ins
adc
sub
es
sub
xchg
mov
jp
out
push
mov
outs
pushf
pop
or
movs
xor
inc
mov
cli
jp
popf
or
mov
mov
jae
cmp
fcomi
sub
imul
out
sub
pop
or
inc
mov
fadd
jbe
pop
push
gs
mov
lock
cmp
cmp
sub
and
cs
or
hlt
xor
hlt
test
lods
in
sbb
aad
das
jecxz
dec
cmp
mov
and
adc
(bad)
mov
cmp
mov
sbb
ja
xor
push
pop
in
fistp
imul
cmp
cld
jecxz
fstp
jae
jl
ret
mov
jno
sbb
rcl
lods
push
xor
cwde
lock
xchg
out
dec
mov
ins
pushf
cmps
inc
fisubr
cmp
jo
jb
cmps
not
mov
mov
ret
pop
js
movs
adc
sar
jmp
retf
dec
add
outs
mov
(bad)
aaa
outs
jl
loopne
(bad)
scas
xchg
and
pop
aaa
mov
mov
(bad)
cmps
mov
xor
jge
pop
hlt
int3
sub
xchg
cmp
and
jne
push
xchg
add
sahf
sti
daa
movs
cmc
js
lea
push
xchg
adc
jno
repz
(bad)
or
xchg
mov
mov
dec
inc
bound
mov
or
sbb
xor
sub
ret
dec
out
push
rcr
ret
mov
xchg
mov
loopne
mov
jmp
inc
cmp
fisubr
push
movs
mov
and
(bad)
mov
xor
add
cs
call
sub
mov
(bad)
nop
ins
fidivr
cmp
jne
shr
adc
mov
and
mov
jns
ret
mov
xor
ficom
int3
fsubr
leave
int
and
push
pop
popa
ins
in
mov
out
sub
icebp
mov
les
and
test
push
lock
jmp
inc
lea
mov
(bad)
cmps
mov
loop
int3
je
pop
fisubr
sbb
sub
adc
imul
mov
addr16
mov
enter
imul
scas
sub
sti
les
lods
into
xor
lds
mov
enter
sub
test
push
dec
dec
jge
adc
(bad)
loop
jno
xor
adc
mov
scas
lods
adc
xor
push
xchg
xchg
imul
push
pop
hlt
rcl
mov
cmp
xor
xor
pminub
lock
stos
stc
out
test
mov
test
sbb
jb
jmp
or
je
iret
sbb
enter
mov
mov
out
or
aam
fisub
je
fs
add
inc
cmp
mov
jp
jecxz
repz
inc
xchg
sbb
mov
sbb
add
loope
cwde
mov
bound
cmp
lods
ret
scas
out
das
cmp
retf
stos
aaa
jne
not
jle
out
sbb
adc
jne
cld
xor
ret
pop
out
jl
mov
jp
daa
dec
xor
push
xor
sub
into
cmps
dec
test
lea
out
(bad)
pop
outs
xor
jmp
cmp
les
das
jmp
data16
sar
jno
jb
pop
sub
add
imul
push
push
cmps
or
add
cmc
int3
mov
lock
stos
rcl
ss
sbb
bound
ja
jp
xchg
pop
xchg
pop
sbb
in
mov
into
les
cmps
(bad)
sub
cld
pop
and
ud1
out
pop
pop
cmp
jmp
jmp
stos
add
xchg
inc
sub
mov
xchg
pop
sbb
jl
ins
jmp
and
and
in
xchg
and
lahf
pop
push
push
jmp
mov
imul
jge
jo
sahf
out
push
imul
rol
xor
sub
loop
daa
jns
push
dec
and
(bad)
in
dec
dec
push
retf
sti
mov
sub
leave
add
loop
mov
mov
loopne
xor
and
cld
dec
aam
cdq
jge
pop
cmp
daa
(bad)
cmps
mov
pop
jle
push
cwde
shl
and
add
mov
arpl
cdq
sbb
pop
and
pusha
mov
mov
inc
pop
add
or
dec
into
dec
cmp
mov
fs
and
enter
imul
sahf
cmp
mov
in
int3
es
imul
mov
adc
je
mov
stc
scas
ins
and
out
mov
xor
movs
(bad)
xor
inc
(bad)
cmp
push
bound
lea
and
adc
jno
adc
cmps
int
mov
sub
pop
xchg
pop
pop
imul
imul
repnz
and
inc
stc
xchg
xchg
push
mov
jmp
xchg
adc
add
aas
xlat
cmp
xor
pop
add
int3
xor
add
call
xchg
scas
leave
into
push
imul
int
mov
adc
ret
xchg
cmp
dec
jge
nop
(bad)
sub
pop
jg
mov
xor
cmp
pusha
(bad)
pop
adc
addr16
sub
fcmovnu
scas
push
popf
inc
mov
mov
mov
hlt
pop
das
int3
rol
repnz
adc
sub
jne
inc
lahf
mov
mov
add
push
pop
sar
data16
cmp
jo
scas
jmp
dec
mov
dec
cmp
rol
or
sbb
(bad)
jbe
icebp
add
sbb
cmp
xchg
retf
jecxz
and
inc
aam
call
pop
pusha
in
push
xor
sub
mov
xor
push
push
rol
mov
adc
inc
xor
iret
int3
(bad)
jp
xchg
xor
lods
lea
shl
mov
jp
dec
int3
les
dec
adc
xchg
pop
mov
sbb
push
test
pop
or
ret
and
rol
cwde
adc
repz
inc
popf
mov
jb
std
test
mov
mov
enter
leave
ins
outs
into
jmp
fs
clc
mov
popf
adc
push
stos
add
loop
dec
enter
xchg
pushf
mov
ins
movs
(bad)
and
rcr
mov
out
cli
xlat
xchg
shl
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
hlt
or
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
inc
push
call
add
adc
add
add
jae
add
arpl
outs
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
mov
add
add
add
and
add
add
add
test
add
push
add
add
add
add
add
add
add
add
or
add
add
add
test
mov
(bad)
inc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
jns
je
ins
cs
outs
fs
outs
ins
cs
gs
bound
inc
je
jb
bound
gs
and
jae
gs
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
jns
je
ins
cs
ins
outs
bound
imul
cs
jne
je
jb
dec
outs
outs
sub
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
jns
je
ins
cs
jb
ja
outs
addr16
imul
jae
gs
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
int3
mov
inc
push
call
cmp
sbb
push
mov
xchg
sbb
test
mov
add
add
add
add
add
xchg
add
cmps
add
add
add
add
add
add
add
add
add
add
add
and
je
push
add
add
outs
add
jo
push
add
inc
add
imul
add
es
je
push
add
add
add
jns
dec
add
jb
add
dec
add
outs
add
add
add
adc
add
add
jae
add
arpl
outs
add
add
add
sbb
je
push
add
add
add
imul
add
or
add
add
add
jae
add
add
ja
inc
add
imul
add
sub
add
outs
add
jb
add
jae
inc
add
jb
xor
add
outs
add
add
imul
jae
(bad)
or
add
and
je
push
add
add
add
popa
add
add
popa
add
ins
add
or
add
add
add
jae
add
add
add
popa
add
add
add
sbb
add
add
jae
add
jb
imul
imul
(bad)
adc
add
and
je
push
add
add
add
jns
dec
add
imul
je
jp
add
es
jb
outs
add
jb
add
jae
inc
add
jb
xor
add
add
imul
add
adc
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
mov
add
add
add
and
add
add
add
test
add
push
add
add
add
add
add
add
add
add
or
add
add
add
test
mov
(bad)
inc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
pop
push
jns
je
ins
cs
outs
fs
outs
ins
cs
gs
bound
inc
je
jb
bound
gs
add
add
jbe
ins
jne
pop
pop
add
add
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
push
jns
je
ins
cs
ins
outs
bound
imul
cs
jne
je
jb
dec
outs
outs
or
add
or
ins
je
jb
dec
inc
or
pop
imul
outs
ins
jns
arpl
jo
jb
dec
outs
outs
or
je
outs
outs
pop
outs
jne
dec
outs
outs
or
popa
je
push
imul
or
ins
outs
fs
jb
ins
pop
outs
popa
ins
or
fs
je
dec
je
ins
adc
jne
gs
jae
jb
jbe
jb
imul
add
add
add
add
push
jns
je
ins
cs
ins
outs
bound
imul
cs
outs
ins
jo
jb
dec
outs
outs
sbb
gs
cs
ins
outs
bound
imul
cs
gs
dec
outs
outs
and
gs
cs
ins
outs
bound
imul
cs
jne
bound
inc
outs
jb
popa
je
outs
outs
daa
push
jns
je
ins
cs
ins
outs
bound
imul
cs
popa
je
push
imul
popa
je
outs
outs
sbb
gs
cs
ins
outs
bound
imul
cs
popa
ins
outs
fs
jb
add
add
add
add
add
or
add
add
add
add
or
push
add
retf
add
add
add
add
push
jns
je
ins
cs
ins
outs
bound
imul
cs
outs
ins
jo
jb
dec
outs
outs
add
add
or
outs
xor
dec
inc
dec
inc
pop
arpl
je
jb
push
ins
pop
outs
popa
ins
add
add
or
add
jg
add
or
add
add
sbb
gs
cs
ins
outs
bound
imul
cs
gs
dec
outs
outs
push
add
add
ins
pop
ins
imul
jb
je
jb
ins
pop
imul
outs
ins
jns
arpl
je
ins
inc
jne
je
jb
dec
popa
ins
or
outs
inc
popa
je
dec
je
ins
adc
jne
gs
jae
jb
jbe
jb
imul
outs
xor
dec
popa
outs
addr16
inc
add
add
add
add
add
push
push
add
add
sub
or
add
add
jg
add
add
add
add
gs
cs
ins
outs
bound
imul
cs
jne
bound
inc
outs
jb
popa
je
outs
outs
and
add
adc
ins
bound
inc
jb
jne
push
imul
jb
outs
arpl
jb
jne
push
imul
jb
outs
je
jb
jne
push
imul
jae
je
jbe
push
imul
popa
je
jbe
push
imul
bound
inc
arpl
popa
ins
push
gs
jb
je
jb
outs
jne
bound
inc
jb
jne
push
gs
jb
je
jb
arpl
jb
outs
arpl
jb
jne
push
gs
jb
je
jb
arpl
jb
outs
arpl
arpl
popa
ins
push
gs
jb
je
jb
arpl
jb
outs
arpl
jns
bound
adc
jae
inc
jne
jb
outs
arpl
jns
bound
or
outs
push
jns
bound
push
jo
jae
je
jbe
dec
outs
imul
push
jns
bound
push
outs
gs
je
jbe
dec
outs
imul
push
jns
bound
pop
jo
jb
outs
je
arpl
popa
ins
push
gs
jb
je
jb
jo
jb
outs
je
jb
jne
push
gs
jb
je
jb
jo
jb
outs
je
jns
bound
push
jo
jb
imul
outs
ins
or
popa
je
jbe
inc
imul
pop
fs
je
dec
je
ins
adc
ins
bound
inc
arpl
popa
ins
inc
imul
jne
jb
outs
arpl
arpl
popa
ins
inc
imul
jne
jb
outs
arpl
outs
jae
je
jbe
push
popa
je
gs
pop
arpl
jb
outs
arpl
gs
je
jbe
push
popa
je
gs
adc
gs
gs
je
jbe
push
popa
je
gs
push
jo
jb
outs
je
outs
jae
je
jbe
push
popa
je
gs
push
jo
jb
outs
je
gs
je
jbe
push
popa
je
gs
adc
gs
outs
je
arpl
popa
ins
inc
imul
imul
jae
imul
imul
outs
ins
jns
ins
pop
jne
gs
jae
jb
jbe
jb
imul
fs
outs
jb
popa
jb
gs
jae
jne
bound
pop
jbe
ins
imul
jae
inc
jae
jne
jb
outs
arpl
pop
pop
add
add
add
add
add
add
add
add
add
or
or
or
or
or
or
or
add
add
pop
add
add
or
add
or
add
add
or
add
add
push
or
add
add
add
cs
or
sub
push
add
add
sub
sldt
add
cs
adc
add
add
movs
or
adc
add
add
dec
push
adc
add
or
imul
push
adc
add
or
outs
imul
or
push
add
add
and
add
loop
mov
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sysret
add
add
add
add
add
add
invd
add
add
add
add
add
add
adc
add
add
add
add
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
xor
push
add
add
xor
add
ss
and
add
add
push
and
add
add
push
and
add
add
or
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
add
add
or
add
add
add
sub
add
add
add
add
push
add
add
push
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
