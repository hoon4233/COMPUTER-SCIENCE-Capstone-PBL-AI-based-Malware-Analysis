jmp
jae
or
out
push
jae
mov
push
jae
xchg
push
jae
jb
jae
add
inc
dec
jae
pop
push
jae
ins
push
jae
push
dec
jae
mov
dec
jae
push
push
jae
ror
xchg
push
jae
add
inc
add
cs
push
jae
popa
push
jae
jne
jae
dec
push
jae
cdq
dec
jae
ret
ficom
push
jae
les
test
push
jae
mov
push
jae
add
ret
xchg
push
jae
ror
or
push
ror
sbb
loop
dec
jae
sbb
rcl
dec
jae
cwde
dec
jae
sbb
pusha
jbe
jae
jbe
jae
inc
push
jae
mov
push
jae
add
adc
jae
or
jae
xchg
push
jae
out
jae
mov
push
jae
add
mov
jae
push
jae
ror
add
sahf
dec
push
jae
sti
push
jae
xor
push
jae
jne
jae
ja
jae
lds
imul
jae
mov
push
jae
jne
jae
xchg
push
jae
push
jae
add
jae
jne
jae
in
push
jae
xchg
push
jae
lds
pop
dec
push
jae
fist
xor
jae
add
add
add
add
add
add
pop
inc
add
add
cmc
or
add
or
sub
inc
add
or
add
or
add
add
add
inc
add
add
add
lock
pop
add
add
adc
nop
adc
pop
add
add
adc
jmp
inc
add
adc
add
adc
add
or
or
fwait
adc
add
mov
add
add
sbb
push
sbb
xor
inc
add
add
add
sbb
and
inc
add
sbb
pop
add
add
push
inc
add
add
push
inc
add
add
add
pop
inc
add
add
add
and
dec
and
inc
and
str
add
and
inc
add
add
add
add
iret
daa
inc
add
add
inc
add
js
add
pusha
inc
add
inc
inc
add
sahf
inc
add
loopne
add
mov
inc
add
rol
test
add
pusha
inc
add
rol
je
add
test
add
inc
add
add
adc
add
push
inc
add
and
add
cmps
inc
add
call
add
inc
add
mov
add
lock
add
mov
inc
add
cwde
inc
add
les
add
inc
add
mov
add
add
xchg
inc
add
cmp
add
add
scas
cmp
push
add
add
add
add
cmp
add
add
add
stos
aas
inc
add
add
(bad)
aas
inc
add
add
inc
add
add
add
add
mov
inc
add
push
inc
add
fadd
add
inc
add
xor
add
loopne
add
add
ins
dec
inc
add
add
add
call
inc
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
mov
inc
add
add
imul
mov
fnstsw
or
push
add
add
add
jle
inc
add
inc
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
call
add
add
add
xor
add
cmp
add
add
add
cmps
jecxz
mov
xor
outs
push
icebp
inc
(bad)
add
add
add
add
add
xor
cmp
inc
popa
bound
imul
add
add
add
inc
add
add
add
inc
add
add
add
add
pushf
push
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
jo
add
add
add
inc
add
inc
add
add
add
jo
pop
add
add
gs
ins
test
xchg
std
jl
add
add
add
add
add
sbb
add
add
xor
add
or
or
add
add
add
sbb
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
push
inc
add
adc
add
add
add
xchg
add
add
je
imul
outs
outs
popa
ins
and
jbe
imul
bound
imul
add
add
lock
(bad)
(bad)
(bad)
inc
add
add
pop
inc
add
inc
add
add
add
cmp
add
enter
add
add
or
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
adc
clc
pop
inc
add
add
add
add
inc
add
inc
add
add
jo
add
cmp
inc
add
(bad)
(bad)
inc
add
add
add
add
sbb
sbb
add
add
(bad)
(bad)
jmp
inc
add
sbb
mov
sbb
mov
sbb
aad
inc
add
sbb
out
sbb
cld
sbb
or
inc
add
sbb
ins
sbb
jp
inc
add
sbb
add
add
rcl
inc
add
inc
add
adc
inc
add
inc
add
mov
ins
and
(bad)
inc
add
jl
add
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
hlt
add
add
add
mov
inc
add
pusha
inc
add
or
add
jo
add
adc
add
add
push
inc
add
add
add
add
add
add
xor
inc
add
(bad)
(bad)
inc
add
add
push
inc
add
jo
add
add
add
xor
add
sbb
add
add
add
inc
add
add
add
sbb
add
add
in
inc
add
add
add
sbb
add
add
in
inc
add
add
add
inc
add
add
add
popa
add
and
and
inc
add
sbb
xor
add
xor
inc
add
add
add
fs
inc
add
add
add
sbb
cmp
add
test
inc
add
add
add
sbb
add
add
add
sbb
cmp
add
test
inc
add
add
add
fs
and
add
add
inc
add
add
add
int3
and
(bad)
(bad)
(bad)
inc
add
add
add
add
sbb
ss
and
(bad)
(bad)
(bad)
call
add
in
inc
add
add
adc
inc
add
inc
add
add
adc
inc
add
inc
add
add
adc
inc
add
add
add
adc
inc
add
add
sub
jmp
jno
add
(bad)
inc
add
add
jo
add
ss
xchg
push
int
mov
xlat
or
add
add
add
lock
inc
add
pop
inc
add
add
add
or
add
add
add
add
add
add
(bad)
(bad)
push
and
les
inc
add
add
add
inc
add
add
add
inc
add
(bad)
(bad)
jmp
add
pop
inc
add
add
add
add
add
add
and
inc
add
(bad)
(bad)
call
add
cmp
add
add
add
pop
inc
add
add
add
add
add
inc
add
add
add
add
in
inc
add
add
add
add
add
and
fsub
inc
add
and
hlt
and
add
inc
add
and
sbb
inc
add
and
xor
inc
add
inc
add
inc
add
add
add
add
push
imul
ins
bound
imul
ins
outs
jb
outs
je
outs
gs
popa
bound
imul
pop
(bad)
push
jl
mov
fsubr
mov
in
je
lea
and
xchg
add
xor
shl
test
xchg
std
jl
xor
push
push
jo
xchg
cmp
adc
lods
xor
or
stos
add
xchg
inc
outs
jbe
imul
add
cmp
push
add
xor
inc
cmp
outs
addr16
ins
and
ins
gs
sub
push
inc
ss
dec
inc
add
add
add
dec
and
add
add
push
add
add
add
add
add
add
add
cmc
xor
loop
lods
xor
or
stos
add
xchg
popa
jo
ins
imul
add
jb
jb
add
dec
lods
xor
or
stos
add
xchg
inc
outs
jb
add
add
inc
outs
jb
pop
dec
outs
popa
add
add
dec
add
cmp
push
add
xor
jne
cld
mov
imul
cmp
ins
sbb
cmp
push
add
xor
xor
int3
(bad)
mov
mov
sahf
fwait
retf
inc
outs
dec
and
push
add
xor
inc
ins
popa
jae
add
add
dec
push
jmp
add
inc
cmp
outs
outs
ja
pop
jae
jae
gs
xor
pop
ins
jae
bound
xor
fs
ins
pop
xor
add
push
push
dec
add
add
add
add
add
add
add
add
add
add
je
add
cmc
xor
inc
imul
imul
inc
gs
popa
je
outs
outs
popa
ins
xor
add
add
outs
jne
push
add
dec
outs
jae
outs
jne
je
outs
xor
add
add
arpl
ins
popa
jb
gs
add
add
inc
gs
fs
gs
add
add
jne
bound
jae
add
add
gs
gs
add
inc
arpl
bound
jae
add
add
imul
add
arpl
ins
gs
dec
outs
je
jb
outs
jae
jae
add
arpl
outs
je
outs
je
push
sub
jl
add
push
add
add
add
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
gs
gs
xor
cs
ins
add
add
adc
add
push
jb
je
push
jb
arpl
jae
gs
outs
jb
add
xchg
and
test
inc
add
add
push
je
add
or
je
jmp
push
mov
call
jmp
add
add
imul
ins
ins
outs
arpl
add
add
inc
add
add
pusha
je
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
fs
ins
cs
ins
add
add
add
add
jb
popa
outs
addr16
addr16
popa
ins
gs
add
add
cmp
inc
add
add
add
ins
je
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
add
add
add
add
add
mov
add
add
add
or
add
add
add
add
add
add
add
add
add
add
sbb
add
cwde
add
add
add
and
add
pushf
add
add
add
add
add
add
add
add
xor
add
add
add
add
cmp
add
test
add
cmp
add
inc
add
add
add
add
dec
add
dec
add
push
add
add
add
add
add
pop
add
add
add
add
add
add
add
ins
add
add
add
je
add
js
add
jl
add
sbb
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
xchg
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
cmp
xor
cmp
inc
add
add
cmp
xor
cmp
xor
aaa
add
aaa
add
cmp
xor
aaa
add
cmp
xor
cmp
xor
cmp
xor
cmp
inc
add
add
aaa
add
aaa
add
aaa
add
cmp
xor
aaa
add
cmp
inc
add
add
add
add
aaa
add
cmp
inc
add
add
add
add
add
add
add
cmp
inc
add
add
add
add
add
add
cmp
inc
add
add
aaa
add
cmp
xor
aaa
add
cmp
xor
cmp
xor
cmp
inc
add
add
add
add
aaa
add
cmp
inc
add
add
cmp
inc
add
add
add
add
add
add
aaa
add
cmp
xor
aaa
add
cmp
inc
add
add
add
add
add
add
aaa
add
cmp
xor
aaa
add
cmp
inc
add
add
add
add
aaa
add
aaa
add
cmp
xor
aaa
add
cmp
inc
add
add
add
add
add
add
aaa
add
cmp
xor
aaa
add
cmp
inc
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
push
add
add
cmp
xor
cmp
inc
add
add
add
add
cmp
xor
add
push
add
add
xor
cmp
add
push
add
add
add
add
add
add
add
add
aaa
add
add
push
add
add
xor
add
add
add
xor
xor
add
add
inc
add
add
xor
inc
add
add
cmp
inc
add
add
xor
inc
add
inc
add
add
xor
add
xor
inc
add
add
add
xor
inc
add
add
inc
add
inc
add
inc
add
xor
inc
add
add
xor
inc
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
xor
add
xor
add
add
inc
add
inc
add
add
add
add
xor
inc
add
add
add
add
xor
inc
add
add
add
add
add
inc
add
inc
add
add
add
add
add
inc
add
inc
add
add
add
add
xor
add
xor
add
add
add
add
add
add
add
inc
add
add
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
cmp
inc
add
add
cmp
inc
add
add
cmp
xor
cmp
inc
add
add
add
add
add
cmp
inc
add
add
cmp
inc
add
add
add
add
add
add
add
add
add
add
add
cmp
inc
add
add
cmp
inc
add
add
cmp
xor
cmp
inc
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
cmp
inc
add
add
cmp
xor
cmp
inc
add
add
cmp
inc
add
xor
cmp
inc
add
xor
cmp
xor
cmp
inc
add
add
cmp
inc
add
add
cmp
inc
add
xor
cmp
inc
add
add
cmp
inc
add
add
add
add
cmp
inc
add
add
add
add
cmp
inc
add
add
cmp
xor
cmp
inc
add
add
cmp
inc
add
xor
cmp
inc
add
add
cmp
inc
add
add
inc
add
add
xor
cmp
inc
add
add
inc
add
add
xor
cmp
inc
add
add
cmp
inc
add
add
add
add
cmp
inc
add
add
add
add
add
cmp
inc
add
add
cmp
inc
add
add
inc
add
add
add
add
add
add
cmp
inc
add
add
cmp
inc
add
add
cmp
xor
cmp
inc
add
add
add
add
add
add
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
push
je
inc
ins
jo
xchg
add
add
cmp
xor
add
add
cmp
xor
cmp
xor
cmp
xor
cmp
inc
add
add
cmp
xor
inc
add
add
add
cmp
xor
inc
add
add
xor
inc
add
add
xor
inc
add
add
xor
cmp
xor
cmp
xor
cmp
xor
inc
add
add
add
cmp
inc
add
add
inc
add
add
add
cmp
xor
cmp
xor
inc
add
add
add
add
add
add
add
add
add
cmp
inc
add
add
inc
add
add
add
add
add
add
xor
cmp
inc
add
add
add
add
add
add
cmp
xor
cmp
inc
add
add
cmp
xor
cmp
xor
cmp
inc
add
add
add
add
cmp
inc
add
add
cmp
xor
cmp
inc
add
add
add
xor
inc
add
add
xor
inc
add
add
xor
inc
add
add
add
add
add
inc
add
add
add
cmp
xor
cmp
inc
add
add
add
xor
cmp
inc
add
add
cmp
inc
add
add
add
add
add
cmp
inc
add
add
add
add
cmp
xor
cmp
xor
cmp
xor
add
add
inc
add
add
add
add
cmp
inc
add
add
cmp
xor
cmp
inc
add
add
cmp
xor
cmp
inc
add
xor
add
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
inc
gs
inc
jb
xor
add
add
add
add
add
cmp
xor
xor
xor
xor
xor
add
add
xor
add
xor
xor
xor
xor
add
add
add
xor
add
xor
xor
aaa
add
add
add
xor
xor
xor
add
add
add
inc
add
inc
add
add
add
add
aaa
add
add
add
add
add
aaa
add
cmp
xor
add
add
add
add
aaa
add
cmp
xor
add
add
add
add
aaa
add
add
inc
add
inc
add
inc
add
add
add
aaa
add
add
add
inc
add
xor
xor
aaa
add
cmp
xor
add
add
add
add
add
add
add
add
cmp
xor
add
xor
add
xor
xor
xor
xor
xor
add
add
xor
xor
add
xor
inc
add
add
add
add
cmp
xor
add
xor
add
add
add
add
add
xor
add
xor
inc
add
add
add
aaa
add
add
add
jbe
popa
inc
jo
ins
jo
jns
add
add
add
add
aaa
add
cmp
xor
cmp
xor
add
cmp
xor
add
cmp
xor
aaa
add
add
add
aaa
add
add
add
add
aaa
add
cmp
xor
aaa
add
aaa
add
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
aaa
add
aaa
add
add
add
add
add
add
aaa
add
aaa
add
aaa
add
add
add
cmp
xor
aaa
add
aaa
add
add
add
cmp
xor
aaa
add
add
add
add
add
add
add
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
aaa
add
aaa
add
aaa
add
aaa
add
add
add
jbe
popa
push
gs
add
jbe
popa
inc
jo
jns
add
pop
pop
jbe
popa
inc
outs
gs
je
inc
outs
jne
fs
jb
outs
jb
add
add
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
xchg
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
aaa
add
add
add
add
add
add
add
add
add
cmp
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
popa
dec
xor
jns
add
xchg
add
add
cmp
xor
cmp
xor
cmp
inc
add
add
cmp
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
cmp
xor
add
add
cmp
cmp
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
popa
inc
jns
jne
add
xchg
add
add
xor
add
add
add
add
add
add
add
add
add
xor
add
add
xor
add
xor
add
xor
add
add
add
add
add
xor
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
xor
add
add
add
add
add
xor
add
add
add
add
add
add
add
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
xor
add
xor
add
add
xor
add
add
add
add
add
jbe
popa
push
cmp
add
add
add
add
xor
inc
add
add
xor
xor
xor
add
add
xor
xor
xor
add
add
xor
xor
inc
add
xor
add
inc
add
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
add
add
xor
inc
add
inc
add
xor
xor
inc
add
add
add
add
add
add
add
add
xor
xor
inc
add
add
add
xor
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
xor
xor
xor
add
inc
add
add
xor
inc
add
xor
xor
inc
add
add
add
add
add
add
add
add
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
xor
add
add
xor
xor
xor
inc
add
xor
xor
inc
add
add
add
add
add
add
add
add
add
xor
xor
xor
add
add
add
xor
xor
xor
add
xor
inc
add
xor
xor
inc
add
add
add
add
add
add
add
add
add
xor
xor
xor
add
add
add
add
inc
add
xor
xor
inc
add
add
xor
inc
add
xor
xor
inc
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
jbe
popa
inc
jns
fs
pop
pop
jbe
popa
push
popa
jb
outs
fs
je
jb
add
xchg
add
add
aaa
add
aaa
add
cmp
inc
add
add
add
add
cmp
inc
add
add
add
add
add
add
cmp
xor
cmp
xor
cmp
xor
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
aaa
add
cmp
inc
add
add
add
add
aaa
add
aaa
add
aaa
add
aaa
add
add
cmp
inc
add
add
add
add
add
add
add
add
add
add
cmp
xor
cmp
inc
add
add
add
add
aaa
add
cmp
xor
aaa
add
cmp
inc
add
add
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
cmp
xor
aaa
add
cmp
xor
cmp
xor
cmp
xor
aaa
add
cmp
inc
add
add
add
add
aaa
add
aaa
add
cmp
xor
cmp
inc
add
add
add
add
aaa
add
cmp
inc
add
add
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
cmp
xor
cmp
xor
cmp
xor
aaa
add
cmp
inc
add
add
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
cmp
xor
aaa
add
cmp
xor
cmp
xor
aaa
add
cmp
xor
cmp
xor
cmp
inc
add
add
jbe
popa
inc
jb
inc
gs
jb
arpl
add
xchg
add
add
cmp
xor
aaa
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
aaa
add
add
add
add
add
cmp
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
xor
add
add
add
add
add
xor
add
add
add
add
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
xor
add
add
xor
add
add
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
jbe
popa
inc
jns
popa
jb
add
add
aaa
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
cmp
xor
cmp
cmp
cmp
aaa
add
add
add
add
add
add
add
add
cmp
xor
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
aaa
add
add
cmp
xor
inc
add
add
add
add
add
add
add
add
xor
cmp
cmp
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
inc
add
cmp
aaa
add
add
add
add
add
add
add
add
xor
cmp
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
inc
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
xor
cmp
add
add
inc
add
cmp
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
aaa
add
add
add
xor
add
aaa
add
add
add
add
inc
add
add
aaa
add
add
jbe
popa
dec
outs
push
popa
jb
xchg
add
add
aaa
add
aaa
add
add
add
add
add
cmp
aaa
add
add
add
add
cmp
xor
aaa
add
add
add
add
add
add
add
aaa
add
aaa
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
cmp
aaa
add
add
aaa
add
cmp
xor
aaa
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
aaa
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
aaa
add
cmp
xor
aaa
add
add
add
add
add
add
add
aaa
add
aaa
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
cmp
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
jbe
popa
dec
xor
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
aaa
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
aaa
add
add
add
aaa
add
aaa
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
aaa
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
cmp
xor
aaa
add
add
add
add
add
add
add
add
add
aaa
add
cmp
xor
cmp
xor
add
aaa
add
add
add
add
add
add
aaa
add
add
add
add
add
add
jbe
popa
inc
jns
xor
add
xchg
add
add
cmp
add
add
add
xor
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
aaa
add
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
inc
add
add
add
add
xor
add
add
add
xor
cmp
add
add
add
xor
inc
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
inc
add
cmp
cmp
inc
add
add
add
add
xor
cmp
add
add
add
add
add
add
add
xor
cmp
xor
cmp
cmp
cmp
xor
cmp
xor
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
xor
add
add
add
xor
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
pop
jbe
popa
push
dec
xor
jb
xchg
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
aaa
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
aaa
add
add
add
add
add
inc
add
inc
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
xor
inc
add
inc
add
inc
add
add
xor
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
add
xor
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
xor
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
add
xchg
add
add
add
add
cmp
xor
add
add
add
add
cmp
cmp
cmp
xor
cmp
xor
cmp
xor
add
add
add
add
cmp
inc
add
add
add
add
add
add
cmp
cmp
cmp
xor
cmp
xor
add
add
cmp
inc
add
add
cmp
xor
cmp
cmp
cmp
inc
add
add
cmp
add
add
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
add
add
add
add
add
add
cmp
cmp
cmp
cmp
cmp
add
add
add
add
add
add
add
add
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
add
add
add
add
add
add
cmp
cmp
cmp
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
inc
add
add
cmp
add
add
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
add
add
cmp
cmp
cmp
inc
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
add
add
add
add
cmp
inc
add
add
cmp
add
add
cmp
xor
cmp
xor
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
imul
xchg
add
add
xor
inc
add
inc
add
add
xor
add
xor
add
xor
add
xor
inc
add
inc
add
inc
add
add
xor
cmp
xor
add
xor
add
xor
add
add
add
add
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
inc
add
cmp
xor
add
add
add
inc
add
add
xor
cmp
xor
cmp
xor
add
add
cmp
xor
cmp
xor
inc
add
add
xor
add
add
cmp
xor
add
add
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
inc
add
cmp
xor
add
add
xor
inc
add
add
xor
cmp
xor
add
xor
add
xor
cmp
xor
inc
add
add
xor
add
add
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
inc
add
inc
add
add
add
add
inc
add
add
xor
add
xor
add
xor
cmp
xor
add
add
inc
add
cmp
xor
cmp
add
xchg
add
add
xor
xor
xor
xor
add
xor
xor
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
cmp
xor
add
add
add
add
xor
xor
xor
xor
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
add
xor
xor
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
add
add
xor
add
add
aaa
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
cmp
xor
add
add
xor
xor
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
add
xor
xor
xor
xor
xor
xor
aaa
add
add
add
xor
xor
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
jbe
popa
push
popa
jb
outs
jbe
add
add
xchg
add
add
xor
aaa
add
aaa
add
aaa
add
aaa
add
inc
add
add
xor
add
add
xor
add
add
add
cmp
xor
add
xor
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
add
inc
add
add
xor
cmp
xor
add
add
xor
aaa
add
inc
add
add
xor
inc
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
inc
add
add
add
add
add
xor
cmp
xor
inc
add
add
xor
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
add
inc
add
add
add
inc
add
add
add
xor
inc
add
inc
add
add
xor
inc
add
add
xor
add
xor
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
add
inc
add
add
add
cmp
xor
add
add
add
add
add
add
xor
aaa
add
cmp
xor
inc
add
add
add
jbe
popa
push
popa
jb
jne
add
add
add
add
add
add
xor
inc
add
add
add
add
xor
cmp
xor
inc
add
add
xor
inc
add
add
add
add
xor
inc
add
add
add
add
xor
cmp
xor
cmp
xor
inc
add
cmp
xor
inc
add
xor
xor
aaa
add
cmp
xor
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
xor
inc
add
add
add
add
add
cmp
xor
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
add
add
add
xor
inc
add
add
xor
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
inc
add
inc
add
add
add
add
xor
inc
add
inc
add
inc
add
add
xor
cmp
xor
inc
add
add
add
cmp
xor
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
inc
add
inc
add
add
add
add
add
cmp
xor
inc
add
add
add
add
xor
inc
add
inc
add
add
add
xor
inc
add
add
xor
inc
add
add
add
cmp
xor
inc
add
add
add
add
xor
aaa
add
add
add
add
jbe
popa
dec
xor
popa
jb
add
add
add
add
add
add
add
cmp
xor
cmp
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
cmp
xor
cmp
xor
cmp
aaa
add
add
cmp
xor
cmp
xor
cmp
xor
cmp
xor
add
add
add
add
add
add
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
cmp
xor
cmp
xor
cmp
aaa
add
add
cmp
xor
cmp
xor
cmp
xor
cmp
xor
add
add
aaa
add
aaa
add
aaa
add
aaa
add
cmp
xor
cmp
add
add
add
add
cmp
xor
cmp
xor
cmp
aaa
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
aaa
add
aaa
add
aaa
add
cmp
xor
add
add
add
add
aaa
add
aaa
add
cmp
xor
cmp
xor
add
add
add
add
add
add
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
aaa
add
add
add
add
cmp
xor
cmp
aaa
add
add
aaa
add
aaa
add
aaa
add
aaa
add
aaa
add
add
pop
pop
jbe
popa
push
popa
jb
jne
add
add
xor
add
add
add
add
add
xor
cmp
xor
xor
xor
xor
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
add
add
add
add
xor
cmp
xor
xor
xor
aaa
add
xor
xor
cmp
xor
xor
xor
aaa
add
cmp
xor
cmp
xor
aaa
add
add
add
add
xor
inc
add
cmp
xor
cmp
xor
inc
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
xor
cmp
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
xor
xor
xor
cmp
xor
cmp
xor
inc
add
xor
xor
aaa
add
cmp
xor
add
add
xor
inc
add
add
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
add
add
add
cmp
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
aaa
add
cmp
xor
cmp
xor
aaa
add
add
add
add
xor
inc
add
cmp
xor
cmp
xor
xor
add
add
jbe
popa
push
je
push
outs
inc
outs
jae
add
xchg
add
add
add
add
xor
inc
add
aaa
add
add
add
xor
add
xor
add
xor
add
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
add
add
xor
add
xor
add
xor
inc
add
inc
add
xor
xor
add
add
xor
xor
xor
xor
xor
xor
xor
xor
add
add
xor
inc
add
add
xor
inc
add
add
xor
inc
add
add
xor
inc
add
add
xor
xor
inc
add
xor
xor
inc
add
xor
xor
inc
add
add
xor
inc
add
add
xor
inc
add
add
xor
add
xor
add
add
xor
xor
xor
inc
add
aaa
add
add
xor
inc
add
add
add
xor
xor
add
xor
xor
add
xor
add
xor
add
xor
xor
xor
add
add
add
xor
inc
add
inc
add
xor
xor
xor
xor
add
add
add
xor
xor
xor
xor
xor
add
add
xor
xor
inc
add
add
add
add
jbe
popa
push
je
push
outs
push
outs
imul
add
add
add
add
add
add
add
xor
cmp
xor
cmp
xor
cmp
xor
add
add
add
add
xor
cmp
xor
xor
add
add
add
add
add
add
add
add
add
xor
xor
xor
aaa
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
add
add
add
add
xor
cmp
xor
xor
xor
cmp
xor
inc
add
add
add
add
add
add
add
add
xor
cmp
xor
cmp
xor
xor
xor
aaa
add
cmp
xor
cmp
xor
aaa
add
add
add
add
add
add
add
add
xor
cmp
xor
cmp
xor
inc
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
xor
cmp
xor
xor
xor
cmp
xor
add
cmp
xor
cmp
xor
xor
xor
cmp
xor
aaa
add
add
add
xor
xor
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
xor
add
add
add
add
add
xor
aaa
add
add
add
add
add
add
pop
pop
jbe
popa
inc
jns
jne
add
xchg
add
add
add
add
xor
inc
add
add
xor
cmp
xor
inc
add
add
add
add
xor
inc
add
add
xor
inc
add
inc
add
inc
add
add
xor
cmp
xor
inc
add
xor
xor
inc
add
cmp
xor
inc
add
inc
add
add
xor
inc
add
add
xor
inc
add
inc
add
cmp
xor
inc
add
add
xor
inc
add
cmp
xor
inc
add
add
add
add
add
add
xor
inc
add
cmp
xor
inc
add
inc
add
add
xor
aaa
add
add
xor
inc
add
add
add
add
xor
inc
add
cmp
xor
inc
add
inc
add
add
xor
aaa
add
add
xor
inc
add
inc
add
add
xor
inc
add
add
xor
cmp
xor
inc
add
add
xor
inc
add
add
xor
inc
add
add
xor
cmp
xor
inc
add
add
add
add
add
inc
add
add
xor
cmp
xor
inc
add
add
xor
aaa
add
inc
add
add
add
add
add
xor
inc
add
add
add
add
add
xor
cmp
xor
inc
add
inc
add
add
add
add
add
xor
cmp
xor
inc
add
add
add
add
xor
aaa
add
add
xor
cmp
xor
inc
add
add
xor
inc
add
add
add
inc
add
add
jbe
popa
inc
jns
xor
add
xchg
add
add
cmp
xor
cmp
xor
aaa
add
add
add
aaa
add
add
add
cmp
xor
add
cmp
xor
cmp
xor
add
cmp
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
cmp
xor
add
cmp
xor
aaa
add
add
add
add
add
cmp
xor
aaa
add
add
add
add
add
add
add
aaa
add
add
add
cmp
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
aaa
add
add
add
add
add
add
add
add
add
aaa
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
cmp
xor
aaa
add
add
add
add
add
push
inc
push
dec
xor
inc
dec
dec
add
add
inc
ins
ins
inc
jne
arpl
outs
inc
popa
ins
ins
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
cmp
xor
cmp
xor
inc
add
add
xor
aaa
add
add
xor
inc
add
add
xor
cmp
xor
inc
add
inc
add
add
xor
inc
add
add
xor
inc
add
cmp
xor
cmp
xor
add
cmp
xor
inc
add
add
xor
add
cmp
xor
inc
add
inc
add
inc
add
add
add
add
add
cmp
xor
aaa
add
aaa
add
add
xor
cmp
xor
inc
add
cmp
xor
inc
add
cmp
xor
add
cmp
xor
inc
add
add
xor
inc
add
inc
add
inc
add
add
add
add
add
add
xor
cmp
xor
aaa
add
add
xor
cmp
xor
inc
add
add
add
inc
add
add
xor
inc
add
add
add
add
add
add
xor
cmp
xor
cmp
xor
inc
add
cmp
xor
cmp
xor
inc
add
inc
add
add
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
push
je
push
popa
jb
outs
jo
add
jbe
popa
inc
jo
dec
xor
add
jbe
popa
inc
jb
push
outs
ins
outs
arpl
add
jbe
popa
inc
jb
dec
outs
arpl
add
add
jbe
popa
push
je
inc
popa
je
pop
pop
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
inc
jb
inc
outs
outs
jae
jb
arpl
add
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
push
popa
jb
jne
add
jbe
popa
push
xor
je
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
push
je
inc
outs
jo
add
add
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
jbe
popa
push
dec
xor
add
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
push
gs
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
cmp
cmp
xor
cmp
cmp
cmp
xor
add
add
add
add
cmp
inc
add
add
add
add
xor
add
cmp
inc
add
add
cmp
xor
add
add
add
add
add
cmp
xor
cmp
inc
add
add
add
add
cmp
cmp
cmp
cmp
cmp
xor
xor
add
add
add
add
cmp
xor
inc
add
add
add
add
add
add
add
add
add
aaa
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
inc
add
add
add
add
cmp
inc
add
add
xor
inc
add
add
add
add
xor
cmp
cmp
inc
add
inc
add
inc
add
add
xor
cmp
inc
add
add
add
add
cmp
inc
add
add
xor
add
add
add
add
add
add
add
add
inc
add
add
xor
inc
add
aaa
add
add
add
inc
add
add
inc
add
xor
add
inc
add
xor
add
xor
add
ja
cmp
xor
cmp
xor
cmp
xor
xor
cmp
cmp
inc
add
add
add
add
add
cmp
aaa
add
add
cmp
xor
cmp
xor
add
sbb
add
jno
cmp
inc
add
add
add
add
add
add
cmp
add
xor
add
add
add
add
add
add
add
add
add
add
xor
cmp
cmp
inc
add
add
aaa
add
inc
add
aaa
add
add
add
add
add
cmp
xor
add
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
aaa
add
add
add
add
xor
add
inc
add
xor
add
xor
add
add
add
add
add
add
add
add
cmp
xor
cmp
xor
cmp
aaa
add
add
add
adc
add
ins
add
add
add
add
add
add
add
add
das
add
add
add
add
aaa
add
add
add
xor
add
aaa
add
add
add
add
add
aaa
add
add
add
add
aaa
add
add
add
add
xor
add
add
dec
add
add
add
add
inc
add
xor
add
xor
cmp
cmp
inc
add
add
inc
add
add
xor
add
add
inc
add
add
add
add
add
add
add
cmp
cmp
cmp
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
cmp
xor
aaa
add
cmp
xor
cmp
inc
add
add
add
add
push
add
add
xor
add
add
add
add
add
xor
add
add
add
cmp
inc
add
inc
add
add
cmp
inc
add
inc
add
inc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
popa
push
popa
jb
fs
jbe
popa
push
cmp
jb
add
jbe
popa
push
dec
xor
add
pop
pop
jbe
popa
push
gs
jb
add
pop
pop
jbe
popa
dec
gs
add
add
int3
xor
add
dec
ins
test
xchg
std
jl
push
pop
(bad)
push
jl
mov
fsubr
mov
in
dec
lods
xor
or
stos
add
xchg
push
lahf
add
cmp
add
add
add
push
imul
add
je
xor
inc
add
(bad)
(bad)
(bad)
push
in
add
add
out
rol
add
inc
jo
add
add
add
jbe
imul
dec
sahf
add
ins
je
add
add
inc
dec
inc
sahf
add
add
add
add
add
add
add
add
add
add
add
add
cmp
gs
je
jbe
pop
dec
push
cmps
scas
dec
dec
loopne
inc
pop
inc
inc
push
push
push
push
push
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
imul
jns
imul
xchg
jo
dec
adc
pusha
retf
cmp
sub
cmp
aaa
jbe
xor
cmp
cmp
cmp
xor
imul
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
adc
push
push
or
inc
push
adc
dec
push
inc
push
dec
mov
fcmovnb
pop
dec
push
dec
inc
(bad)
dec
dec
push
xchg
dec
pop
push
push
inc
popa
mov
jns
gs
cmc
push
pop
push
dec
or
push
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
test
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
jno
push
arpl
jne
inc
inc
pop
push
dec
dec
pop
push
push
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
mov
cmps
inc
push
inc
push
pop
push
pop
xor
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
xchg
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
mov
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
sbb
push
or
push
dec
fcmovne
push
inc
push
pop
push
push
inc
(bad)
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
push
cmp
inc
pop
inc
arpl
inc
push
stc
inc
dec
dec
inc
pop
pop
pop
retf
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
adc
xchg
sbb
popa
jmp
imul
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
cdq
jl
and
sub
mov
xchg
inc
push
pop
dec
rcl
popa
fs
arpl
gs
inc
adc
(bad)
gs
xor
inc
push
pop
inc
push
dec
inc
test
pop
push
dec
test
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
mov
and
je
jbe
test
push
pop
push
dec
dec
pop
repnz
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
sbb
sbb
cmp
push
inc
cmps
inc
push
push
inc
push
dec
dec
push
push
dec
pop
push
cmc
inc
popa
fs
arpl
gs
inc
push
pop
adc
or
sub
and
push
inc
xor
inc
dec
dec
push
pop
pop
pop
out
push
inc
out
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
sbb
add
popa
fs
arpl
gs
inc
jno
push
dec
dec
pop
push
inc
call
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
adc
adc
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
inc
adc
pop
dec
pop
cmp
add
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
and
push
dec
dec
pop
push
pop
jne
inc
ja
push
push
popa
imul
imul
jb
adc
popw
pop
dec
ins
pop
dec
add
push
dec
sbb
cmp
xor
mov
arpl
test
adc
(bad)
mov
push
nop
sbb
xchg
stos
arpl
xchg
push
enter
inc
test
push
ret
xchg
test
cmps
call
inc
nop
and
pushf
push
cdq
cmps
and
je
fwait
sbb
call
ret
imul
lods
data16
pop
pop
fiadd
add
ror
push
retf
dec
inc
mov
imul
mov
dec
rcr
push
fild
push
inc
rcr
add
xchg
cmps
jo
xchg
push
fadd
dec
rcl
shr
je
and
cmps
or
push
xor
jo
fisttp
cdq
rcr
push
dec
fcomp
push
push
iret
xchg
mov
cdq
mov
pop
fist
and
inc
cwde
xchg
adc
(bad)
mov
jmp
arpl
cdq
add
lds
or
aam
mov
push
(bad)
push
or
sub
int3
call
(bad)
sub
pop
gs
int
ins
dec
ret
lahf
sbb
pop
fld
jb
hlt
xchg
nop
add
xchg
fcom
inc
xlat
add
inc
call
and
out
push
int3
pop
rol
add
mov
push
rol
dec
int3
push
jle
(bad)
inc
fisttp
jae
fadd
ret
push
jae
xchg
inc
adc
push
sub
cmp
loopne
xchg
std
xchg
rcr
mov
adc
sar
push
inc
and
mov
push
imul
push
enter
fiadd
pop
ror
push
adc
inc
jmp
push
popa
rcr
ror
rcl
inc
fcom
bound
inc
stc
dec
push
add
xchg
into
xchg
mov
inc
fcomp
add
rcr
jle
fimul
xor
call
pop
into
inc
mov
mov
xchg
ret
sbb
psubusw
cmps
shr
push
fiadd
or
dec
rcl
inc
call
arpl
and
ror
inc
rcl
xchg
aaa
pop
fcom
(bad)
mov
mov
inc
rcr
push
fisttp
inc
fisttp
pop
pop
push
inc
mov
push
dec
mov
lods
mov
and
xor
pop
fmul
outs
and
rcl
test
mov
imul
xchg
into
pop
dec
add
mov
cmps
retf
cs
outs
jmp
arpl
add
leave
ficom
pop
leave
lahf
fsubr
or
mov
cmp
cmp
and
sbb
pop
dec
pop
pop
iret
adc
inc
jae
push
fist
sbb
adc
cmps
mov
xchg
shr
add
cmp
jb
cmp
int3
sbb
inc
adc
js
inc
push
sbb
or
fdiv
push
lds
dec
dec
lahf
jecxz
inc
jl
mov
push
fcomp
outs
pop
fld
ud1
jp
lods
inc
jmp
dec
ficomp
inc
ins
or
pop
dec
(bad)
adc
rcl
mov
rcr
dec
pop
inc
inc
daa
inc
stc
push
push
push
push
mov
movs
pop
pop
shr
fisubr
push
sub
push
ja
push
sbb
push
mov
cmps
scas
lods
retf
push
loopne
add
mov
xchg
xchg
sbb
xchg
movs
test
inc
cmp
(bad)
dec
inc
and
pop
or
gs
pop
or
adc
ret
mov
mov
gs
arpl
ins
push
gs
push
xor
pop
pop
add
fistp
cmp
pushf
cmps
lods
dec
push
ret
push
cmps
stos
retf
cmp
sub
push
push
or
mov
scas
mov
pop
je
push
out
mov
test
mov
inc
cs
leave
inc
dec
and
rcr
mov
js
rcl
or
or
pop
add
mov
mov
xchg
mov
jne
ret
push
pop
push
arpl
adc
in
mov
pop
rcr
fld
dec
ficomp
fisttp
dec
push
sbb
xchg
fcom
es
daa
push
jge
and
jne
and
add
dec
rol
pop
int
dec
sub
jne
jle
das
push
les
addr16
and
push
inc
cmp
adc
mov
(bad)
adc
sub
pop
inc
push
rcl
pop
movs
test
push
fld
popf
or
aad
(bad)
fild
jae
push
aaa
inc
ret
adc
fimul
adc
ja
call
ins
xor
cmp
xchg
cdq
add
sbb
aad
mov
sahf
fiadd
fstp
jle
aam
imul
mov
cmps
mov
fimul
ja
dec
inc
jle
cwde
scas
pop
inc
popa
in
gs
mov
ficomp
fld
jo
fisttp
inc
call
rcl
or
push
rcl
fadd
dec
fst
dec
push
dec
rcl
pop
imul
jno
ins
out
daa
push
jns
arpl
add
adc
retf
push
ficom
inc
fisttp
or
xor
xor
dec
inc
inc
push
rcl
jle
pop
ret
push
pop
lods
jne
mov
fisttp
call
jae
jbe
pop
std
test
fstp
xchg
or
or
adc
fstp
fstp
jae
fdivr
jae
fisttp
pusha
pop
rcr
pop
inc
popa
in
gs
mov
push
dec
jne
test
retf
adc
int
ins
push
ror
jle
jns
jbe
fisttp
push
clc
add
ficomp
inc
rcl
inc
jmp
std
arpl
jne
and
sbb
push
rol
outs
add
xor
add
rcl
push
js
cmp
push
add
fst
sbb
push
or
in
pop
outs
movs
jno
mov
pop
inc
push
pop
push
les
enter
xchg
adc
ins
dec
xor
int
inc
pop
push
or
xchg
enter
push
add
xchg
mov
shl
xchg
xchg
imul
sbb
inc
popa
xor
pusha
int
ret
push
dec
ror
aad
push
sub
fld
adc
adc
dec
jns
dec
jmp
xor
pop
lods
push
mov
fld
inc
into
push
outs
imul
xor
jno
sbb
ret
test
cmp
inc
adc
out
inc
jo
and
jnp
mov
imul
or
or
xchg
mov
or
retf
fsub
jb
stc
mov
or
mov
sub
mov
xor
inc
mov
pop
fild
ins
xor
ins
adc
int3
pop
popa
add
or
push
pop
int
dec
push
push
iret
push
rcr
fadd
imul
in
inc
push
lods
movs
scas
mov
and
dec
pop
ss
sbb
les
ins
inc
int3
lahf
mov
test
lods
shr
inc
pop
and
fiadd
inc
iret
pop
outs
inc
ficomp
push
mov
loope
inc
inc
mov
push
pop
push
ret
pop
retf
test
(bad)
xor
ins
fild
jbe
fistp
jae
fiadd
mov
pop
inc
fild
mov
jae
cmp
jne
mov
retf
je
fst
sbb
dec
lds
push
popa
test
psubusw
xor
outs
enter
xchg
iret
test
rcl
pop
fs
dec
call
pop
into
inc
pop
adc
pop
jb
sbb
inc
jge
pop
ret
ss
pop
das
dec
(bad)
lds
enter
test
inc
leave
mov
adc
nop
shl
out
(bad)
call
addr16
push
fdiv
enter
adc
push
mov
pop
rcl
imul
fimul
outs
inc
outs
ret
push
jle
inc
lods
lods
mov
call
sbb
add
mov
ror
gs
(bad)
pushf
daa
dec
retf
sbb
ret
push
rcr
test
retf
pop
fadd
ja
rcl
dec
popa
adc
aaa
push
popa
into
sbb
inc
imul
mov
shl
sub
push
pop
pop
xor
out
or
repnz
scas
lods
rcr
arpl
or
mov
stc
mov
scas
mov
icebp
stos
sbb
mov
mov
mov
push
stos
js
test
dec
push
xor
shld
je
dec
imul
inc
pop
leave
push
pop
xchg
push
push
jp
rol
scas
sbb
push
inc
and
xchg
or
add
push
pop
fist
mov
jae
sub
(bad)
pop
adc
xchg
dec
out
push
inc
pop
jno
or
and
outs
js
add
and
not
movs
mov
xchg
mov
dec
push
push
stos
test
(bad)
mov
cmps
enter
ror
lahf
add
pop
ret
inc
dec
jge
rdmsr
adc
push
daa
test
ret
push
xchg
pop
inc
push
ds
cmp
mov
push
mov
mov
gs
in
lahf
adc
mov
mov
mov
nop
or
sbb
rcl
mov
pop
ds
xlat
pop
push
sub
adc
mov
fadd
out
push
es
mov
sbb
cmp
inc
scas
dec
mov
mov
inc
mov
scas
lods
mov
push
nop
or
pop
mov
mov
fwait
adc
int
lods
push
xor
call
sbb
sbb
pop
mov
jecxz
xchg
adc
fisttp
retf
pop
das
xchg
or
comiss
dec
cmp
xlat
jns
mov
push
pop
cmp
out
and
xchg
mov
push
mov
mov
rcl
popf
movups
mov
adc
sahf
mov
push
dec
and
adc
inc
push
adc
ret
add
dec
je
adc
nop
gs
imul
sub
retf
push
ret
xchg
add
jge
rcl
leave
cmps
cmps
sbb
test
push
ficom
fmul
mov
push
rcl
(bad)
rcl
push
ins
std
popa
jl
add
rcl
gs
leave
push
ja
push
push
mov
push
jle
(bad)
enter
rol
adc
push
ja
sbb
adc
xchg
fiadd
popa
aaa
cmp
scas
(bad)
jl
mov
mov
adc
test
pop
int
dec
pop
inc
jne
sub
inc
mov
icebp
inc
lahf
adc
mov
pop
dec
pop
push
push
jb
in
imul
xor
rcr
pop
pop
retf
pop
ja
mov
pop
arpl
ror
xchg
or
push
ss
ficom
inc
loope
(bad)
out
addr16
loopne
aas
add
or
xchg
fldcw
mov
mov
pop
pop
inc
in
xchg
add
lods
pop
push
inc
xchg
ret
xchg
aam
pop
ss
rcl
and
stos
cmc
lahf
pop
cmp
fwait
into
sbb
fcmove
dec
push
xchg
lds
xchg
sbb
ror
push
fld
push
enter
push
dec
enter
pop
loopne
add
push
arpl
mov
xchg
rcl
lods
stos
mov
inc
dec
push
mov
dec
and
xchg
aam
pop
fdiv
pop
popa
mov
pop
push
push
ja
adc
movs
jno
mov
pop
inc
push
pop
push
les
mov
push
mov
xchg
adc
adc
mov
enter
pop
push
ret
and
stos
mov
pop
xchg
rcl
inc
adc
jecxz
inc
jmp
lea
dec
outs
rcl
dec
pop
mov
mov
gs
adc
sbb
xlat
sbb
add
add
xchg
lods
fidiv
iret
xchg
mov
rcl
dec
loop
dec
ins
arpl
stc
gs
inc
ficomp
pop
retf
adc
inc
adc
iret
cdq
ret
dec
je
mov
mov
cmp
shl
xchg
aam
pop
aaa
pop
ficomp
push
fild
mov
mov
mov
rcl
adc
inc
mov
jle
lods
cmp
and
mov
test
pop
outs
inc
fimul
inc
rcr
dec
bound
sub
daa
push
fcomp
jae
test
fist
cmps
mov
dec
fld
or
(bad)
xchg
mov
shl
gs
jecxz
imul
push
data16
(bad)
mov
fldcw
sub
int
int3
test
dec
les
fst
lea
pop
ficom
aad
fild
pusha
push
leave
xor
pop
dec
das
jae
push
ins
mov
dec
jmp
fidiv
pop
jl
adc
inc
ja
push
jb
push
mov
rcl
imul
pop
enter
add
ret
sbb
dec
jle
pop
gs
ins
std
jno
int3
inc
rcl
rcl
inc
mov
js
dec
cmp
mov
mov
fst
xchg
add
ret
or
pop
lds
lock
cmps
and
out
daa
push
ins
std
rol
jne
fimul
rol
gs
retf
pop
push
fild
ret
inc
into
dec
rcr
jb
inc
rcl
addr16
ret
inc
jae
add
xchg
push
adc
xchg
ret
ret
lods
and
out
inc
xchg
sbb
ss
xchg
inc
jmp
dec
scas
(bad)
out
inc
pushf
sbb
test
inc
inc
xchg
sbb
push
jmp
leave
mov
inc
cmps
scas
lods
jb
(bad)
bound
(bad)
pop
adc
xchg
les
xchg
ins
loope
lds
mov
(bad)
inc
fmul
push
mov
fiadd
push
aad
xor
push
stos
mov
jmp
mov
lods
mov
jno
inc
sbb
add
mov
cmp
popa
lahf
and
das
stos
mov
pop
adc
dec
push
adc
mov
pop
jmp
lahf
mov
ficomp
inc
lea
push
retf
in
xchg
push
push
stc
inc
retf
add
adc
enter
fcomp
mov
je
xor
xor
xchg
mov
cwde
xor
xchg
movs
dec
call
test
pop
adc
lea
xchg
fistp
push
enter
scas
stos
mov
xor
mov
xlat
adc
fnstenv
add
or
fst
rol
dec
xchg
push
inc
sub
push
pop
test
dec
fstp
lds
dec
das
pop
adc
push
push
xchg
loop
aas
fwait
enter
sbb
lahf
fisub
bound
inc
(bad)
push
inc
out
lahf
adc
mov
push
enter
pop
dec
fucom
dec
push
pop
lds
push
retf
sub
lods
data16
call
push
rol
adc
push
rcl
inc
fiadd
inc
jb
inc
xor
inc
fld
dec
and
inc
fimul
and
test
pop
push
pop
xor
test
jmp
ficomp
test
pusha
xchg
iret
push
ins
lods
std
dec
inc
pop
popa
add
xor
push
dec
aam
push
dec
sub
or
rcl
push
xchg
adc
and
bound
mov
pop
into
xchg
ficomp
inc
rol
pop
jo
aad
inc
ror
pop
lds
dec
push
inc
cmc
xchg
dec
mov
mov
push
fcom
imul
xchg
jp
push
into
inc
pop
sbb
std
stos
mov
mov
push
jb
cmp
int3
pop
rcr
push
les
push
dec
xchg
rcl
addr16
ret
adc
shr
ficomp
je
retf
mov
jb
pop
into
adc
pop
fild
mov
push
retf
dec
pop
cli
lahf
sbb
push
addr16
pop
add
sbb
test
mov
inc
pushf
in
call
mov
test
pusha
xchg
iret
adc
pop
imul
addr16
fisubr
push
xchg
or
cs
xor
xchg
add
pop
mov
cmps
lods
fisubr
dec
pop
inc
inc
shr
inc
shr
pop
pop
(bad)
aam
push
sub
or
push
int3
scas
fld
mov
ins
lock
gs
into
add
push
pushf
ret
retf
les
int
mov
sbb
rsm
rol
mov
pop
rol
xchg
or
(bad)
fiadd
retf
push
and
xchg
std
and
test
lods
fld
leave
adc
add
dec
(bad)
stos
retf
fcomp
lahf
inc
fcomp
movs
fcomp
pop
mov
das
cdq
pushf
jno
mov
pop
(bad)
mov
popf
push
inc
mov
dec
push
push
scas
fisttp
dec
jne
pop
pushf
sbb
add
dec
xchg
sbb
push
nop
pop
inc
pop
aaa
inc
push
inc
dec
pushf
adc
mov
je
jle
sbb
sbb
dec
push
push
nop
add
test
pushf
inc
fstp
ror
ficom
mov
lds
push
inc
dec
jmp
push
inc
mov
cmps
mov
mov
xchg
adc
dec
sub
adc
(bad)
je
mov
inc
pop
cs
cmp
xchg
add
cmps
mov
mov
inc
push
mov
add
mov
mov
imul
bound
push
shl
adc
push
lods
xchg
mov
daa
pop
xchg
inc
out
pop
pop
pop
inc
push
dec
xchg
adc
mov
pop
push
push
jb
xor
cs
xor
adc
shl
cwde
push
inc
pop
ss
cmp
adc
lods
mov
stos
(bad)
pop
mov
adc
pop
movs
mov
push
mov
xchg
add
push
arpl
mov
dec
rcl
sub
scas
push
pusha
inc
jmp
call
aam
pop
enter
scas
dec
das
dec
loope
pop
dec
fisub
xchg
and
gs
push
pop
push
les
mov
mov
add
inc
sbb
adc
inc
push
dec
mov
dec
mov
add
or
fwait
jmp
lahf
mov
push
call
popa
inc
dec
xchg
adc
and
push
inc
sbb
xchg
add
push
xchg
add
push
inc
sub
mov
arpl
xchg
outs
je
lahf
clc
pop
inc
push
rcl
rcr
cs
bound
mov
pop
jmp
push
dec
push
mov
enter
pop
inc
mov
(bad)
pop
mov
adc
add
and
inc
rcr
cs
adc
pop
pop
pop
mov
rcl
push
fmul
mov
fimul
inc
cwde
fwait
xchg
(bad)
shl
mov
adc
push
xor
bound
push
(bad)
imul
inc
cs
xor
mov
inc
mov
cmp
scas
ret
adc
adc
jmp
mov
rcr
test
aad
push
aas
inc
call
(bad)
mov
rcl
fnstenv
lods
stos
cmps
stos
cmp
dec
jb
sbb
ins
push
popa
mov
mov
imul
call
fisub
jle
jl
pop
adc
xor
push
pushf
sbb
jg
nop
or
push
pop
dec
fisub
ja
xchg
add
inc
popa
movs
xor
std
mov
push
(bad)
(bad)
push
retf
inc
movs
push
inc
and
or
jge
(bad)
push
addr16
dec
aas
push
fiadd
jae
mov
retf
lods
push
xor
push
bound
jmp
fsub
sbb
inc
fld
test
inc
pop
rol
push
shr
ins
inc
pop
mov
push
das
sub
push
xchg
fs
mov
pop
inc
ins
push
xchg
cmovnp
imul
inc
pop
sub
dec
or
inc
pop
push
lahf
adc
pop
push
lea
pop
xor
nop
pop
inc
fmul
cli
xchg
adc
pusha
dec
out
arpl
jbe
fmul
rcl
ret
inc
mov
inc
push
push
scas
aam
mov
pop
lahf
fisttp
jbe
fisttp
jae
mov
fadd
ja
rcl
dec
jmp
jne
rol
jne
jp
mov
dec
scas
sub
stos
retf
es
rcl
push
sbb
mov
mov
dec
ins
push
cdq
(bad)
push
je
retf
outs
out
mov
push
rcl
dec
pop
push
shr
bound
add
into
push
jle
fstp
mov
int3
xchg
and
dec
ins
push
pushf
(bad)
push
je
test
call
out
fwait
outs
xchg
pop
push
out
mov
push
retf
int3
push
jno
push
dec
les
int3
pop
jle
dec
std
push
rcl
xchg
fadd
fsubr
or
test
mov
pop
enter
je
lea
scas
cmps
aad
ds
gs
inc
push
dec
ja
sbb
inc
jb
push
sub
fldcw
xchg
or
xor
cld
xchg
sbb
jecxz
mov
mov
cmps
rcl
mov
inc
scas
mov
lds
ja
test
inc
ins
mov
leave
xor
fild
mov
ss
jbe
fwait
lods
ret
mov
scas
enter
xchg
push
pop
cvtps2pi
pop
es
pop
shl
adc
push
sub
push
push
lods
pop
mov
nop
pop
push
inc
mov
xor
cmp
xchg
sbb
sbb
mov
cmp
into
pop
jle
outs
imul
lea
dec
mov
dec
jne
dec
jle
or
out
sbb
loope
push
les
repnz
mov
scas
dec
jge
rcr
(bad)
lahf
aas
fadd
lahf
mov
pop
pop
push
nop
daa
pop
call
popf
out
jbe
pop
int3
inc
rcr
add
xchg
mov
cmp
pop
fisttp
xchg
adc
xor
pop
fld
shl
(bad)
out
imul
ficom
addr16
xchg
push
inc
and
lahf
lds
push
(bad)
lea
pop
mov
bound
(bad)
inc
push
dec
dec
mov
and
push
movs
loopne
jmp
pop
jbe
rcl
mov
xchg
int
retf
lds
mov
lods
mov
add
push
dec
(bad)
inc
push
dec
dec
or
enter
pop
xchg
add
dec
cdq
mov
out
rcl
test
js
retf
movs
xchg
mov
cmp
movs
cld
fadd
adc
push
test
xor
cmp
push
jl
fcomp
les
test
mov
into
pop
rcr
push
(bad)
cwde
and
mov
push
xlat
jl
aas
inc
ficomp
push
jno
fs
mov
out
pop
int3
adc
rcl
bound
adc
inc
push
mov
rcr
(bad)
push
adc
retf
push
jl
push
mov
rcl
pop
in
push
pusha
jecxz
dec
add
push
cmp
push
adc
iret
push
mov
mov
mov
fisttp
push
stos
fmul
push
iret
push
retf
sub
inc
jmp
std
and
pop
fimul
outs
pop
fld
push
arpl
stos
mov
jg
das
or
dec
add
fadd
ins
fst
mov
(bad)
pop
fist
popw
jle
gs
imul
pop
jnp
dec
sbb
xor
push
rcl
daa
sbb
(bad)
jae
sub
mov
rcl
rcl
test
jmp
inc
rcl
dec
rol
gs
retf
stos
inc
adc
inc
jb
xor
jne
dec
shl
test
stos
enter
jae
fmul
ins
pop
(bad)
cmp
popf
mov
mov
dec
pop
inc
ret
ds
inc
dec
dec
retf
push
add
push
stos
cli
scas
test
fimul
iret
nop
mov
mov
mov
in
addr16
loop
out
pop
popa
mov
rcl
fbstp
cmp
fistp
sbb
push
jg
cmp
ds
fs
fcompp
mov
mov
inc
jbe
adc
adc
push
pop
pop
xchg
daa
jl
sahf
es
enter
adc
(bad)
int3
call
xor
adc
xor
lahf
and
and
lahf
es
jg
test
pop
(bad)
mov
mov
inc
into
mov
rcl
mov
iret
(bad)
cmps
cmp
movs
cmps
mov
mov
pop
and
das
push
push
inc
mov
lds
cmp
jmp
fadd
pop
cmp
dec
xchg
movs
dec
mov
add
add
cdq
and
data16
sti
lahf
xchg
test
adc
pop
fdivr
mov
and
fidivr
lods
adc
sbb
mov
push
adc
lods
xor
adc
mov
lahf
daa
push
push
ficom
push
in
ins
adc
push
mov
jns
push
fst
dec
sbb
sbb
pushf
es
fwait
cmp
push
mov
adc
push
mov
xor
jle
mov
push
pop
mov
in
lods
mov
out
sbb
and
movs
imul
jno
mov
mov
xor
stos
xor
mov
push
adc
lahf
es
mov
das
dec
lods
mov
jo
in
pop
cmp
pop
cld
scas
pop
push
dec
mov
adc
mov
dec
dec
xor
cmps
push
dec
push
leave
dec
or
and
pop
ror
mov
dec
add
mov
and
mov
mov
cmps
aad
pop
aaa
pop
cmp
mov
mov
pop
pop
outs
dec
pop
inc
push
aas
push
fs
inc
push
dec
and
push
ror
mov
shl
fnstenv
rol
test
xor
pop
sub
dec
inc
dec
into
scas
fistp
sbb
or
fidivr
push
xor
popf
or
jmp
sub
xor
cmp
pop
mov
test
push
add
rol
imul
dec
fcomp
adc
nop
mov
mov
xor
gs
rcl
test
ds
cmp
jecxz
inc
(bad)
sbb
add
or
sub
and
sub
adc
aas
cmp
cmp
sbb
sbb
pop
xor
daa
add
pop
aas
pop
or
dec
nop
mov
not
push
test
mov
ret
cdq
mov
push
dec
push
stos
ja
test
ficom
inc
push
dec
adc
mov
mov
je
mov
imul
fist
fcom
mov
dec
(bad)
xchg
and
push
inc
push
sub
push
inc
push
dec
dec
rcr
inc
popa
fs
mov
jno
xor
pop
inc
xchg
leave
aam
aas
pop
in
ror
add
ror
xchg
arpl
sbb
cld
adc
mov
mov
lods
rcr
jmp
test
imul
mov
mov
mov
pop
add
dec
rcl
int3
mov
inc
les
aad
dec
adc
scas
outs
pushf
and
call
out
pop
out
xor
fst
inc
pop
push
enter
es
fbld
sub
xlat
mov
pop
adc
(bad)
push
movs
and
ds
or
cmp
cmp
mov
push
xchg
les
ret
xchg
test
or
pop
pop
cdq
aam
dec
add
fnstsw
push
mov
test
add
dec
mov
lods
mov
jmp
pop
cmps
xor
or
xchg
das
push
mov
ret
or
cmp
fbld
pop
sahf
adc
sub
push
int
inc
sub
push
adc
pop
gs
call
sbb
cdq
and
ror
push
scas
or
pop
dec
inc
dec
cmps
(bad)
pop
pop
pop
xchg
rcl
fstp
or
fcomp
sbb
fist
loope
or
xor
add
fidivr
jecxz
inc
push
aas
push
and
pop
xor
xchg
test
pop
mov
dec
xchg
add
(bad)
xlat
jns
cli
or
cmp
add
xor
sbb
mov
xchg
cmovnp
xchg
dec
add
cmp
cs
cmps
mov
inc
adc
aam
push
sbb
push
clc
adc
sub
add
mov
ss
fsubr
cs
(bad)
push
xor
cli
mov
push
mov
ficom
rcl
push
push
xor
sbb
mov
movs
scas
lods
adc
sbb
mov
xchg
cmovnp
bndstx
adc
or
push
or
xor
push
sub
inc
mov
push
push
nop
sbb
shl
jmp
punpcklwd
imul
cmps
inc
pop
mov
push
sbb
or
dec
mov
dec
inc
pop
pop
pop
pop
enter
dec
(bad)
popa
mov
pop
fadd
pop
and
scas
mov
mov
push
shl
rol
push
inc
fstp
jle
fsubr
test
pop
aas
pusha
mov
mov
fs
dec
push
sub
fisubr
icebp
and
inc
stc
and
mov
fld
clc
push
inc
push
rol
adc
(bad)
retf
adc
enter
push
jecxz
dec
push
sub
fisubr
icebp
and
jbe
in
inc
push
pop
add
mov
ret
push
or
es
dec
adc
or
dec
sbb
or
add
inc
add
fsub
dec
or
push
pop
push
inc
sahf
xchg
inc
inc
push
cmps
loope
dec
pop
push
enter
push
push
int
inc
iret
push
dec
sbb
rcl
test
mov
addr16
dec
dec
mov
fmul
popa
fs
call
pop
inc
push
rcl
inc
mov
cli
inc
push
push
inc
xchg
ret
or
ror
push
dec
push
pop
push
aaa
dec
ret
sbb
adc
push
arpl
dec
or
add
jmp
xor
or
adc
inc
inc
nop
fild
mov
pop
xor
dec
mov
rol
inc
push
dec
push
fmul
ret
pop
dec
rcl
pop
ret
xchg
in
stos
xchg
fwait
imul
sbb
inc
movs
test
lods
stos
ja
retf
sub
dec
add
inc
les
or
push
dec
xchg
fiadd
mov
rol
push
inc
popa
fs
jmp
adc
call
arpl
xchg
sub
mov
movs
lods
mov
mov
sbb
ret
adc
ror
movs
adc
std
xor
push
fs
dec
dec
cwde
sub
push
jp
push
inc
xchg
ss
cmp
pop
xchg
cmp
outs
ror
pop
and
cmp
mov
scas
gs
push
and
push
xor
movs
daa
push
and
pop
xchg
xor
sbb
jb
jle
mov
pop
call
ins
mov
(bad)
out
scas
jne
test
dec
icebp
test
lahf
jg
stos
mov
loope
mov
dec
jmp
dec
hlt
mov
mov
pop
pop
stos
and
push
dec
fst
pusha
push
mov
pop
push
pop
(bad)
call
dec
jne
and
fmul
outs
pop
push
test
xlat
mov
or
cmps
mov
mov
mov
aas
inc
pop
and
fs
sbb
push
fcomp
mov
or
sbb
push
rol
call
mov
mov
into
and
mov
adc
nop
stos
mov
call
fwait
mov
into
mov
add
dec
jb
sub
push
xchg
xchg
xlat
pop
lods
ss
pop
daa
fisttp
push
xchg
add
gs
inc
fisub
inc
bnd
sbb
int3
and
ret
ss
inc
popa
sahf
xor
leave
inc
aaa
fld
dec
retf
cs
pusha
push
cmp
call
pop
add
push
pop
fist
xor
sub
and
bound
sbb
lods
fs
imul
rol
pop
(bad)
pop
mov
fadd
scas
retf
sub
add
retf
sub
xor
std
jns
jno
pop
lods
cmps
scas
cmps
jmp
lods
stos
scas
xchg
mov
mov
sbb
add
jle
xchg
mov
jbe
add
ror
fisttp
push
mov
sub
push
cwde
adc
push
cmovnp
jno
retf
addr16
add
sbb
push
fistp
enter
aaa
push
mov
scas
jg
xor
add
aaa
enter
mov
(bad)
xchg
mov
mov
test
or
or
sbb
adc
push
push
dec
nop
pop
inc
adc
es
add
jmp
imul
scas
ss
push
cli
dec
(bad)
or
in
mov
xchg
or
push
movs
movs
cmps
xchg
push
add
call
repnz
ret
dec
push
hlt
adc
xchg
in
pop
push
push
fcom
inc
test
push
rcl
inc
ret
mov
fmul
call
pop
jmp
aad
pop
rol
ret
out
push
fs
fst
mov
sbb
mov
das
stos
std
movs
imul
inc
add
je
push
dec
iret
push
push
int3
xor
lods
xor
shl
inc
push
dec
movs
repnz
(bad)
rcl
stos
and
add
js
fwait
adc
(bad)
and
jg
xchg
adc
push
aas
dec
icebp
dec
test
pop
cmps
inc
ins
nop
add
push
aam
addr16
sbb
sub
cli
or
mov
sahf
xor
sub
aad
jne
add
sbb
cmps
mov
sbb
or
pop
pop
push
ss
and
sbb
or
cmp
sbb
inc
mov
call
mov
dec
push
pop
inc
pop
adc
add
pop
in
imul
sub
ds
fisubr
and
push
int
outs
jnp
ror
inc
ja
pop
fs
mov
dec
ins
(bad)
and
mov
test
addr16
dec
hlt
or
and
daa
inc
sar
sti
pop
pop
push
ss
jnp
fiadd
pop
mov
fisubr
jnp
pop
ins
jmp
jbe
sub
fisub
inc
retf
dec
retf
or
inc
frstor
push
ret
popa
das
pop
es
xlat
mov
dec
add
mov
enter
das
push
lods
adc
adc
add
cmps
mov
ds
aad
inc
add
push
xor
push
push
mov
pop
sti
pop
loop
push
adc
enter
fdivr
pop
mov
sahf
fwait
xor
cmp
xor
pop
mov
or
inc
push
in
push
mov
cdq
ror
lahf
es
xchg
dec
push
pop
push
inc
fadd
scas
push
cmp
mov
mov
add
mov
mov
or
fcomp
rcl
push
inc
push
dec
iret
add
lods
pop
stos
ss
(bad)
adc
mov
aam
push
add
mov
adc
xor
into
adc
push
enter
fcomp
mov
sbb
mov
mov
and
add
mov
mov
mov
pushf
mov
repz
dec
ficom
test
mov
rcl
push
es
test
pop
(bad)
adc
mov
xchg
leave
adc
xchg
and
or
xchg
dec
loop
xchg
xor
call
dec
pop
aad
push
sbb
add
dec
dec
inc
cdq
imul
ret
or
shr
fsub
xor
xchg
pushf
rol
mov
mov
cmps
fistp
sbb
nop
fild
cmp
pusha
push
es
push
arpl
inc
and
sbb
xchg
pop
movs
mov
adc
call
popf
int
call
adc
add
test
push
adc
(bad)
nop
imul
xchg
push
cwde
or
test
nop
iret
mov
nop
les
icebp
mov
scas
cmps
add
sbb
xchg
enter
scas
fist
stos
dec
mov
mov
push
dec
push
retf
sbb
mov
pop
sidtd
popa
out
imul
loopne
xor
fcomp
mov
or
cmp
and
int3
mov
cmps
push
adc
mov
ror
pop
or
fwait
jecxz
jmp
mov
shr
push
adc
mov
add
mov
test
mov
pop
nop
ret
cmp
mov
mov
and
or
rcl
fisttp
and
xchg
push
cmps
adc
sbb
inc
fcomp
jge
aas
dec
pusha
movs
add
mov
jecxz
call
movs
lods
jge
push
dec
shl
inc
jo
mov
mov
pop
rcr
movs
into
xchg
sub
push
cdq
lods
jge
mov
adc
mov
or
sahf
adc
mov
push
das
mov
mov
pop
or
add
arpl
stos
cmps
xchg
ret
sbb
rcr
rol
push
pop
push
(bad)
mov
daa
and
pop
cmps
lds
imul
jle
pop
ror
xchg
sub
int3
sbb
jge
cmp
pushf
push
ror
mov
retf
xchg
push
push
shr
push
fisttp
adc
das
pop
arpl
adc
and
pop
test
push
stos
inc
outs
nop
xor
xchg
jnp
mov
push
mov
aas
pop
imul
pop
mov
pop
sbb
call
rcl
mov
mov
mov
xlat
fistp
sti
mov
enter
and
mov
cs
fst
dec
sahf
mov
fmul
les
movs
mov
or
push
scas
add
inc
mov
pop
rcl
mov
enter
xchg
in
mov
scas
nop
retf
lds
movs
or
xchg
sub
rcr
dec
jg
xor
pusha
popf
ret
inc
imul
jno
mov
mov
stos
ror
dec
ins
mov
xchg
xchg
sbb
pandn
mov
ret
mov
imul
popa
outs
xchg
sub
mov
jne
mov
(bad)
xchg
jns
inc
xchg
jmp
test
sbb
test
or
or
pop
fisttp
adc
(bad)
fimul
fld
mov
pop
or
sub
jne
mov
mov
push
(bad)
inc
ror
xchg
mov
adc
mov
push
xchg
into
push
dec
add
add
xchg
rol
sbb
dec
fist
xchg
fs
imul
pop
or
scas
mov
sbb
xchg
pop
iret
push
shl
jp
sub
test
dec
rcl
ficom
mov
mov
xor
mov
stos
cmps
scas
(bad)
jo
or
cdq
leave
xchg
push
scas
mul
dec
fisttp
push
dec
push
pop
add
test
or
or
nop
enter
loopne
add
pop
inc
push
pop
add
fld
or
xchg
push
inc
fisttp
mov
test
mov
mov
mov
out
cld
pushf
mov
sub
nop
mov
adc
mov
int3
mov
cmps
lods
mov
inc
xchg
(bad)
push
leave
sbb
nop
(bad)
cmp
push
lds
inc
push
retf
sub
bound
push
pop
mov
ret
or
sbb
adc
(bad)
push
dec
push
adc
sbb
call
into
push
rcr
imul
outs
push
jnp
js
push
pop
push
xor
pop
cmp
fs
xor
pop
not
adc
fild
adc
mov
fistp
fiadd
inc
fcom
inc
fst
adc
jbe
fadd
fisttp
mov
push
xor
les
ja
retf
adc
mov
nop
rcl
cmp
sub
and
fwait
enter
les
dec
push
retf
add
sahf
fstp
dec
dec
inc
pop
mov
push
dec
push
rcl
(bad)
pop
or
fimul
dec
shl
jmp
jo
les
jbe
call
mov
fwait
aad
pop
dec
ret
mov
inc
push
sbb
pop
sbb
cdq
ror
fmul
andps
cmp
imul
je
cs
pop
daa
sbb
pop
jnp
repnz
inc
push
gs
inc
iret
rcl
pop
stos
rcl
inc
aad
inc
rcl
mov
stos
(bad)
dec
push
pop
fmul
mov
pop
int
push
ficomp
popf
mov
mov
mov
enter
inc
mov
push
xor
fst
js
fiadd
fstp
push
rcr
mov
scas
sbb
mov
and
pop
sbb
fdivr
movs
or
jge
pushf
retf
mov
push
push
dec
sbb
ror
push
lods
sub
dec
push
adc
push
aas
aas
xor
popa
popf
inc
pushf
call
rcr
push
add
fisttp
shl
dec
push
mov
push
sbb
push
inc
mov
int
pop
sbb
xchg
xor
mov
call
dec
mov
inc
icebp
sbb
jecxz
scas
mov
or
fcomp
dec
push
rcl
xchg
(bad)
pop
jb
and
jge
adc
outs
add
push
and
cs
xor
in
or
pop
mov
rcl
xchg
inc
mov
or
mov
leave
mov
or
xchg
cmp
jne
(bad)
scas
cmps
scas
add
mov
fadd
push
adc
rcl
mov
or
mov
ret
popf
fadd
enter
call
scas
dec
rcl
mov
push
inc
inc
sbb
mov
inc
iret
dec
int
pop
mov
push
dec
push
or
mov
(bad)
retf
imul
dec
dec
and
jecxz
popa
cmps
fidiv
jno
mov
add
mov
xor
push
push
fnstcw
pop
inc
iret
es
call
push
bound
dec
cmps
push
sahf
mov
lds
jbe
outs
jecxz
arpl
push
fdivr
push
and
fidivr
scas
inc
xor
into
mov
dec
push
inc
(bad)
mov
push
ror
push
dec
push
out
push
adc
mov
lods
retf
imul
loopne
push
pop
push
movs
rol
pop
call
inc
dec
dec
inc
mov
aam
jge
fwait
mov
sti
inc
dec
push
push
scas
or
fist
dec
movs
and
inc
sahf
adc
call
push
enter
xchg
mov
sbb
inc
ret
pop
or
add
jae
xchg
mov
adc
dec
mov
stc
gs
mov
cmps
out
dec
jne
cmp
push
push
add
add
fisttp
lods
mov
push
xor
push
mov
mov
push
add
cdq
fist
in
mov
shr
jne
fild
mov
mov
mov
cmp
sub
and
xlat
mov
push
push
inc
shl
pop
push
push
icebp
arpl
xor
xchg
call
jbe
test
rcl
mov
ror
mov
cmps
(bad)
adc
push
or
movs
mov
mov
xchg
out
fs
aaa
jle
rcr
inc
xlat
ds
fstp
inc
mov
mov
mov
sbb
mov
fidivr
movs
scas
lods
jo
out
sub
je
sub
push
adc
stos
mov
push
scas
mov
push
retf
int
pop
pop
sub
cmps
inc
retf
inc
shr
(bad)
nop
dec
retf
xchg
pop
add
mov
test
arpl
test
cmps
scas
mov
or
add
jo
xchg
ret
dec
mov
jle
push
mov
inc
jb
xor
inc
popf
adc
xchg
dec
push
mov
pop
or
enter
xchg
fidiv
jbe
imul
pop
push
inc
popf
push
arpl
inc
push
dec
sar
(bad)
mov
aad
jns
jbe
mov
pop
les
jle
jge
adc
daa
push
jns
and
dec
push
jmp
shl
mov
or
mov
cmps
outs
adc
jns
gs
rcr
mov
movs
scas
outs
sbb
scas
arpl
dec
cmps
jne
pop
adc
rcl
rol
and
inc
mov
inc
sub
mov
push
xor
sub
mov
push
inc
shl
mov
fs
mov
jge
mov
dec
dec
fstp
pop
push
xor
cmp
inc
sub
ret
pop
cmps
stos
mov
cmp
mov
pop
movs
push
jge
cmps
std
cmp
out
or
inc
push
cmc
lea
mov
pop
inc
arpl
bound
add
jle
rol
imul
stos
mov
push
push
inc
int3
popf
pop
dec
pop
fist
gs
mov
mov
mov
rcl
gs
stos
not
inc
fmul
jbe
sub
mov
mov
shr
pop
push
xor
xor
push
dec
sub
mov
sbb
movs
mov
fsubr
lea
cmp
inc
and
jle
fstp
jbe
mov
adc
ret
xchg
into
inc
push
outs
pop
add
pop
enter
in
aaa
push
xor
scas
(bad)
fldcw
push
rol
arpl
adc
mov
int
pop
lods
sbb
jbe
fistp
jae
(bad)
aas
jae
push
and
ss
pop
pop
cmp
das
gs
fs
outs
loopne
dec
jle
push
xlat
xchg
mov
inc
xlat
cwde
ins
add
sbb
sub
dec
inc
rcr
fld
ret
push
enter
test
inc
ror
ret
aaa
cmp
fld
mov
mov
sbb
mov
dec
mov
movs
lods
mov
adc
test
xchg
fadd
(bad)
rcl
scas
xor
lods
int3
add
fmul
mov
adc
mov
push
retf
pushf
and
push
repz
mov
fmul
mov
mov
push
inc
popa
push
xchg
out
pushf
imul
pop
fimul
mov
stos
inc
fcom
mov
dec
add
and
sbb
xchg
push
ret
push
fiadd
stos
mov
pop
test
adc
sub
cld
scas
mov
sti
pop
mov
rcl
stos
pop
retf
dec
xor
sbb
into
push
and
sbb
retf
ins
lods
cmp
test
push
test
mov
(bad)
mov
jb
les
mov
mov
sbb
mov
rcl
test
xor
adc
test
fldcw
mov
aaa
xchg
push
ja
sub
and
dec
cmc
xchg
int3
push
mov
and
or
rol
adc
pop
mov
jecxz
movs
scas
mov
push
mov
xchg
adc
rcr
mov
scas
xchg
dec
inc
dec
dec
inc
fstp
mov
(bad)
pop
stos
fist
sbb
inc
fcomp
pushf
ret
xchg
push
loope
push
push
test
xchg
inc
das
jno
or
test
mov
pop
adc
dec
or
sbb
rcl
push
mov
and
cmp
fild
test
cmp
mov
cmps
pop
inc
ficomp
push
test
xchg
(bad)
fld
cmp
popf
pop
pop
push
dec
push
mov
add
and
sbb
add
daa
dec
jmp
std
ja
cmp
push
mov
or
push
retf
xchg
cs
test
lea
inc
test
pop
pop
push
fiadd
stc
scas
lods
mov
cmp
inc
mov
aad
inc
bswap
stos
rcl
ror
sti
jbe
adc
push
scas
enter
aaa
outs
jnp
add
or
push
fisub
cmp
and
add
sub
dec
mov
lods
stos
scas
add
mov
stos
shr
push
sub
sbb
adc
push
sbb
jmp
mov
movs
or
mov
sbb
das
out
adc
push
sub
jp
sbb
(bad)
adc
cmp
adc
push
and
pop
and
push
mov
and
out
sbb
addr16
sbb
push
inc
fisttp
retf
pop
cs
or
movs
and
or
pop
mov
pop
movs
push
fist
mov
fwait
not
gs
movs
mov
mov
nop
fist
fwait
xor
inc
pop
pop
pop
push
sbb
pop
push
or
rcl
ror
add
out
(bad)
jmp
into
push
or
dec
fisttp
fisttp
mov
dec
cdq
fistp
push
mov
pop
xchg
rol
ret
mov
mov
push
sbb
add
out
das
cdq
cmp
stos
std
movs
or
inc
into
cwde
and
sbb
stos
push
(bad)
stc
add
adc
add
add
and
push
pop
int
and
mov
add
push
mov
call
call
mov
sbb
sbb
iret
movs
int
stos
or
les
mov
cdq
add
mov
pop
dec
xor
cmp
shld
sub
push
xor
adc
fcomp
mov
inc
scas
dec
movs
mov
ret
adc
lods
enter
movs
push
aaa
push
jnp
test
adc
xor
sbb
popa
jmp
xchg
mov
mov
test
add
mov
movs
ja
sbb
pusha
adc
push
sub
cmps
push
out
or
addr16
mov
pop
cmps
aas
mov
mov
arpl
sbb
outs
sub
pop
and
dec
xor
add
inc
xchg
mov
mov
shl
xchg
sbb
pop
rol
jl
ss
adc
dec
xor
pop
test
xchg
push
push
cmp
sbb
test
xchg
sbb
adc
mov
mov
call
fwait
add
pop
jns
sbb
pushf
ds
inc
push
add
in
xor
pop
jmp
call
mov
lock
xchg
lods
mov
jecxz
imul
bound
pop
inc
inc
xor
dec
mov
lahf
sbb
dec
push
inc
mov
mov
mov
sbb
pop
mov
lea
mov
adc
mov
jp
pop
push
xchg
(bad)
test
inc
rcr
add
xchg
cmps
jo
xchg
push
fadd
dec
rcl
mov
and
push
dec
mov
xchg
adc
int
int3
lahf
cmp
jmp
pop
repz
push
inc
mov
fmul
movs
aad
xor
fmul
sahf
mov
out
fucomi
push
inc
or
or
sbb
adc
and
xor
inc
fs
push
inc
fmul
xchg
mov
movs
scas
lods
loopne
aam
xor
xchg
sub
nop
add
pop
mov
ror
loop
push
stos
or
test
xchg
rol
mov
(bad)
adc
pop
mov
leave
xor
xor
leave
dec
pop
gs
jne
jmp
cmps
lods
mov
xlat
out
push
rcl
test
nop
(bad)
or
lds
and
and
add
gs
pop
add
add
push
ds
mov
mov
or
add
pop
ret
mov
or
fs
call
sbb
add
sbb
retf
push
cmp
or
sub
adc
add
xchg
test
and
movs
jne
nop
and
pushf
push
add
cmps
je
call
xor
mov
sbb
lods
pushw
call
add
scas
jg
mov
push
retf
dec
jno
xor
std
movs
cmps
pusha
inc
mov
dec
rcr
push
fild
push
inc
rcr
add
xchg
cmps
jo
test
push
fadd
pop
or
cs
pusha
jg
and
out
sbb
mov
cmps
or
jno
test
inc
ret
jg
mov
dec
fld
adc
jb
or
ficomp
add
stos
call
test
pop
fld
adc
fisttp
sbb
xchg
mov
lahf
xchg
push
rcl
pop
inc
fmul
sbb
sbb
jge
sbb
les
add
xchg
mov
dec
int3
call
fisttp
pop
dec
fst
adc
call
out
mov
sbb
cdq
scas
push
mov
inc
rol
push
dec
iret
mov
push
(bad)
xchg
mov
push
enter
retf
xchg
adc
xchg
movs
imul
adc
movs
xchg
inc
mul
mov
dec
rcl
adc
mov
rcr
push
fcomp
push
push
iret
xchg
mov
ror
mov
arpl
test
adc
(bad)
mov
push
sbb
xchg
stos
arpl
fwait
add
lds
or
jb
xchg
push
ret
xchg
test
arpl
movs
jne
xchg
and
pushf
push
inc
movs
and
je
cdq
sbb
call
ret
cmps
in
and
cmps
stos
add
mov
lea
dec
ds
arpl
add
pop
or
xor
or
inc
test
scas
mov
test
call
dec
xchg
test
add
pop
add
daa
cmp
aas
cmp
cmp
push
arpl
sub
inc
cmovnp
das
xor
push
cmp
or
sub
cmp
and
adc
inc
add
xor
push
push
dec
dec
push
pop
dec
pop
mov
add
push
arpl
test
cdq
pop
fwait
push
retf
popa
xchg
xor
leave
test
inc
and
pop
or
add
js
or
stc
sbb
push
xor
xor
xor
inc
popa
jmp
sbb
test
mov
add
lds
rcl
fstp
test
adc
scas
sbb
or
add
call
int3
inc
xor
add
clc
inc
push
push
inc
mov
test
mov
pop
push
enter
fadd
lds
push
sub
xor
inc
add
fnstsw
pop
scas
adc
add
push
or
xchg
rol
sar
add
or
lds
pop
fcom
mov
xchg
mov
mov
cmps
fisttp
mov
les
mov
xor
sbb
add
movs
mov
les
inc
dec
and
mov
call
and
sbb
pop
sbb
mov
or
iret
lods
adc
dec
pop
enter
lods
fiadd
pop
ret
inc
ficom
cmps
rcr
rcr
mov
xor
and
scas
pop
mov
stos
stos
scas
leave
mov
les
sbb
mov
popf
mov
mov
test
dec
mov
add
or
adc
sahf
push
push
in
inc
inc
mov
xor
add
or
icebp
cmps
mov
stos
mov
ror
xor
or
dec
cmp
push
or
int
test
push
mov
fcomp
mov
xchg
loop
lea
scas
cmps
fmul
mov
iret
or
inc
ret
xchg
pop
sbb
sti
push
test
adc
xor
add
popa
jmp
mov
mov
fld
or
and
aas
sub
dec
cmp
and
xor
push
push
or
sub
xor
xor
cmp
fs
arpl
loop
out
test
inc
shl
div
jecxz
mov
mov
adc
lods
push
cmps
sbb
ret
mov
xchg
ret
xchg
or
or
out
sub
push
add
push
daa
and
push
inc
mov
mov
lea
jle
cmp
add
push
and
or
test
add
rcl
dec
or
cmp
and
scas
mov
mov
mov
jo
fstp
movs
cmps
fisttp
jbe
fstp
mov
fiadd
ja
and
dec
xlat
sbb
dec
fistp
and
test
mov
nop
sub
sub
mov
gs
imul
add
sbb
add
ds
xor
push
add
je
jbe
xor
and
xor
js
push
inc
pop
inc
add
and
and
daa
or
and
aas
sub
dec
push
push
and
or
xor
push
shl
enter
and
cmps
into
adc
mov
jb
pop
das
inc
push
push
push
sub
jp
sbb
movs
in
mov
mov
or
push
stos
icebp
push
push
inc
push
rcr
push
pop
mov
jmp
mov
ficomp
mov
adc
cmps
leave
adc
mov
add
add
push
aam
mov
mov
dec
xchg
pop
adc
xor
popf
cmps
test
add
adc
xchg
xchg
rcl
sbb
sub
mov
adc
ror
cmps
fild
jno
push
xchg
cwde
xchg
mov
sbb
mov
imul
push
and
sbb
stos
add
gs
mov
cmps
movs
scas
add
bound
sahf
retf
mov
cmp
adc
jp
push
cmps
inc
adc
xchg
xor
daa
fistp
mov
add
adc
scas
ror
cmps
fistp
mov
jae
imul
cmps
test
mov
xor
mov
(bad)
js
lock
inc
push
dec
and
cdq
dec
dec
push
pop
out
push
push
popa
adc
je
add
push
pop
sar
dec
fistp
je
push
inc
dec
dec
(bad)
cs
fcomp
mov
fmul
dec
or
push
rcl
jge
scas
pop
scas
pop
lock
dec
dec
fsub
inc
(bad)
pushf
dec
iret
mov
fldenv
add
adc
adc
sbb
push
inc
call
jmp
jb
mov
xor
mov
push
cmps
cmp
rol
lods
push
push
xor
fs
pop
jmp
inc
fisubr
pop
arpl
and
mov
mov
cmps
out
xchg
outs
sbb
push
mov
out
pop
add
push
push
xchg
retf
push
dec
in
dec
dec
inc
ficom
xchg
mov
add
fdiv
add
pop
mov
add
add
xor
adc
fmul
mov
mov
inc
int3
push
pop
inc
adc
int
mov
pop
scas
or
or
push
mov
cmps
mov
pop
leave
push
mov
sub
out
es
mov
mov
lods
cmps
scas
retf
mov
int3
push
lods
scas
add
mov
sbb
(bad)
adc
stos
into
adc
jno
scas
movs
lds
mov
sub
call
dec
sub
int3
or
inc
inc
adc
scas
(bad)
dec
enter
add
mov
aad
cmp
pop
rol
sub
out
sbb
mov
test
push
pop
int
mov
pop
ror
mov
fld
mov
fimul
xchg
pop
lds
movs
xor
out
cdq
ja
sub
out
sbb
cdq
pop
retf
test
or
inc
sbb
pop
xlat
sbb
not
push
dec
mov
mov
mov
mov
xor
loope
loopne
mov
sbb
ficom
pop
mov
push
dec
lods
pushf
test
pop
and
xor
fst
pushf
pusha
cwde
sbb
ror
sbb
jge
outs
inc
jo
dec
jb
pushf
dec
fcomp
popa
pop
inc
int3
push
test
push
sbb
cmps
shr
cmps
enter
or
push
mov
dec
dec
pop
fist
mov
call
ss
cmps
fmul
lahf
rcl
mov
add
aam
movs
movs
aam
add
movs
fiadd
add
fst
nop
add
rcl
loope
lahf
jnp
ss
mov
sbb
inc
cld
sbb
fild
adc
rcl
xchg
inc
fild
rcl
inc
retf
ins
sub
jg
and
push
outs
or
xor
inc
retf
mov
adc
stos
mov
or
movs
call
or
add
mov
add
fwait
sub
out
sbb
dec
push
lods
fild
retf
add
add
sbb
les
cmps
cmp
ficomp
push
iret
inc
xchg
add
mov
outs
out
es
test
inc
push
fcom
add
stos
mov
add
pop
push
enter
push
push
sbb
stos
fs
test
fmul
mov
in
push
pop
sbb
sbb
sbb
aam
sbb
gs
mov
or
push
movs
push
push
or
cmps
stos
add
fmul
inc
fmul
scas
rcr
mov
adc
xchg
inc
movs
add
cmp
add
pop
iret
add
add
cmps
clc
mov
mov
or
xchg
ret
xchg
pextrw
mov
xchg
mov
jae
cmp
out
or
or
jle
or
movs
aaa
mov
adc
mov
xlat
sbb
(bad)
mov
lar
add
setl
dec
inc
adc
push
test
push
mov
push
xor
add
das
shl
pop
mov
fcom
mov
lds
mov
push
inc
jb
add
rcl
dec
dec
inc
fisttp
or
gs
je
std
and
adc
lea
mov
fmul
dec
(bad)
pop
pop
xor
mov
xor
push
iret
adc
sbb
sbb
retf
cmp
out
add
sub
into
mov
push
inc
push
out
ficom
xchg
push
ret
lds
scas
mov
rol
test
pop
test
movsx
add
mov
xor
loop
cdq
or
and
inc
xlat
bts
dec
adc
dec
iret
or
scas
xchg
lods
cmps
lods
enter
lea
scas
push
jo
adc
push
and
pop
and
push
xchg
jmp
add
fist
rol
mov
or
lds
lea
sub
adc
pop
xor
push
mov
pop
jge
or
sbb
sub
jbe
mov
mov
xchg
retf
push
xchg
push
push
dec
xchg
push
pop
pop
dec
pop
add
xor
xor
push
inc
push
pop
push
push
or
dec
dec
push
dec
push
pop
push
push
and
adc
gs
inc
push
pop
push
dec
dec
pop
inc
sbb
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
popa
ud2
push
push
push
inc
push
inc
inc
pop
inc
dec
or
popa
sbb
outs
and
and
and
push
push
sbb
je
inc
pop
push
inc
push
dec
inc
dec
dec
inc
pop
cli
add
dec
push
inc
push
dec
push
or
xor
mov
fdivr
mov
bound
push
inc
ds
fisttp
mov
shl
lock
pop
push
inc
fimul
mov
fimul
mov
add
mov
aaa
ins
xchg
xor
sahf
ficomp
mov
adc
xchg
push
pop
cvtps2pi
pop
es
sbb
or
cmps
xchg
stos
pop
nop
test
push
or
adc
mov
pop
lods
in
add
mov
fnstsw
add
not
add
sub
rcl
fstp
test
mov
xchg
scas
movs
push
rcl
loope
mov
popf
aam
and
add
sti
inc
push
push
inc
fstp
push
inc
mov
mov
mov
xchg
adc
push
fmul
pop
dec
rcl
xchg
call
add
pop
mov
mov
lods
out
nop
mov
push
adc
push
inc
push
dec
fld
or
dec
mov
rol
out
xor
mov
or
mov
rcl
mov
pop
out
or
stos
movs
movs
push
pop
or
xor
inc
xor
sbb
dec
fist
mov
pop
call
cmp
mov
lods
adc
or
add
mov
pop
adc
dec
push
adc
sbb
fsub
sbb
or
inc
xchg
xchg
call
add
mov
adc
ret
mov
sbb
xchg
stos
dec
stos
test
fiadd
mov
mov
test
lods
adc
sub
sub
fwait
inc
or
jl
adc
sbb
pop
push
add
mov
sub
(bad)
mov
mov
add
test
lds
cmps
xor
xchg
call
cmp
inc
mov
rol
mov
pop
out
or
lods
movs
movs
rcl
mov
shr
adc
ror
fnstenv
push
daa
jno
and
addr16
shr
sbb
clc
(bad)
mov
sub
int3
movzx
adc
lods
shl
(bad)
adc
fisttp
mov
lahf
test
mov
lds
cmps
in
mov
push
mov
das
cmp
int3
inc
xor
add
clc
inc
push
push
inc
mov
retf
rol
or
push
mov
xchg
mov
mov
shl
push
pushf
mov
jb
jb
or
bound
inc
push
stos
mov
dec
inc
jp
pop
push
sbb
scas
mov
xor
pop
dec
xor
scas
pop
es
adc
mov
std
jns
sub
mov
stos
mov
lds
or
inc
cdq
or
add
adc
pop
mov
fdivr
mov
arpl
gs
rcl
mov
xchg
mov
adc
cdq
inc
les
and
or
xchg
push
frstor
mov
push
push
and
pop
push
fwait
add
dec
frstor
sub
dec
in
sbb
loopne
test
adc
dec
inc
dec
lds
dec
sbb
adc
bndldx
sub
inc
sub
push
or
cmps
pop
test
out
xor
cmc
dec
pop
lea
pop
push
mov
sar
dec
or
push
sub
jp
pop
pop
test
inc
mov
pop
ds
adc
mov
mov
movs
loopne
popa
mov
or
mov
or
pop
push
xor
mov
push
xchg
sbb
xchg
sbb
adc
rol
unpckhps
push
xchg
movs
mov
out
imul
xchg
sbb
ror
add
mov
mov
pop
xchg
pop
imul
or
push
mov
mov
nop
shr
sub
mov
int
nop
add
inc
frstor
pop
inc
das
stos
or
push
mov
rcr
imul
pop
cmp
fadd
mov
stc
dec
fwait
add
dec
cmp
je
jne
mov
mov
nop
push
inc
xor
adc
sbb
jge
or
pop
pop
fiadd
mov
jmp
xor
or
popa
out
imul
sbb
pop
pop
push
inc
rol
mov
out
xchg
pop
xor
or
sbb
jmp
lahf
add
and
push
sbb
push
add
ror
xor
push
sbb
dec
or
lock
loope
pop
pop
rcr
movs
jae
test
add
out
or
ror
inc
mov
lods
loop
lods
sub
mov
inc
add
cmc
or
sbb
dec
iret
dec
push
scas
mov
cmps
lods
out
push
mov
dec
aas
mov
add
push
pop
lods
mov
xchg
adc
cdq
cmp
gs
mov
scas
cli
add
dec
cmp
inc
fcom
mov
in
xchg
sbb
imul
mov
dec
push
and
mov
xchg
jmp
add
or
sbb
dec
cmp
cmp
sbb
cmp
and
cmp
cmp
and
aaa
xor
push
pop
push
inc
pop
sub
push
and
or
and
xor
adc
cmp
xor
cmp
cmp
push
and
xor
das
and
xor
and
sub
add
cmp
dec
push
or
xor
xor
js
xor
sub
and
add
sbb
push
sbb
add
pop
adc
cmp
gs
sub
sbb
es
pusha
add
cmp
dec
push
pop
add
and
pusha
js
cmp
cmp
adc
or
adc
pop
inc
sub
dec
pop
xor
cmp
je
adc
and
xor
inc
push
xor
aaa
sub
jo
add
push
dec
push
sbb
aaa
aas
and
imul
push
sbb
arpl
xor
aas
pop
push
inc
pop
movaps
and
xor
(bad)
xor
dec
pop
sub
cmp
jno
sub
dec
dec
add
sbb
sbb
inc
inc
cdq
cmovnp
or
or
mov
movs
lods
mov
and
add
stos
push
arpl
mov
add
cdq
rol
jmp
mov
pop
sbb
dec
outs
mov
inc
sbb
xchg
jne
pop
pop
mov
adc
mov
xchg
sbb
fidiv
or
stos
jae
shl
inc
or
imul
add
mov
push
xchg
scas
cmps
mov
sbb
inc
push
mov
ret
call
xor
dec
or
or
pop
fld
mov
popf
cmps
call
mov
jnp
xchg
add
xchg
adc
movs
(bad)
lea
pop
mov
push
stos
mov
mov
aas
ret
xor
dec
xor
jae
and
push
mov
aad
and
sub
mov
lds
cmps
mov
mov
mov
ret
mov
cmps
push
retf
fisubr
mov
lahf
xchg
mov
mov
mov
pop
dec
sbb
xchg
sbb
push
mov
sub
stos
jo
adc
push
and
pop
and
cmp
pop
fst
mov
pushf
mov
sub
fisttp
mov
or
add
sbb
adc
lds
and
aas
mov
pop
mov
xchg
dec
xor
aas
imul
movlps
cmps
adc
push
inc
inc
push
push
adc
or
aas
cmp
sub
inc
push
dec
and
xor
cmp
jns
aas
es
add
mov
xor
loope
call
xor
mov
xor
jp
add
inc
mov
aam
mov
nop
mov
sub
fstp
mov
pop
dec
pop
sar
push
mov
rcl
push
xor
dec
aad
mov
push
scas
pop
pushf
mov
xchg
cmps
lods
cmps
mov
add
inc
push
dec
test
dec
push
pop
sbb
and
das
cmp
sbb
sub
sub
xor
sub
xor
sub
cmp
xor
cmp
ss
es
aas
es
xor
push
inc
mov
sbb
mov
add
mov
les
mov
inc
cmp
pop
mov
rol
test
pusha
mov
or
sub
inc
cmp
mov
xchg
mov
xor
test
inc
pop
pop
sbb
cmp
push
or
scas
cmp
pusha
mov
push
aaa
mov
out
xor
push
mov
fwait
mov
fst
jecxz
test
push
add
rol
add
push
dec
ficomp
stos
jno
test
xchg
or
fs
pushf
mov
add
es
bswap
stos
rcl
add
into
xsha256
cmps
shl
pop
and
sbb
push
cmps
push
xchg
jb
sub
cmps
jne
shl
nop
aad
mov
leave
add
mov
mov
dec
mov
adc
or
mov
add
dec
xor
add
mov
pushf
mov
std
and
mov
xchg
xor
icebp
inc
fcom
mov
mov
imul
cmp
scas
in
inc
push
dec
dec
mov
fiadd
mov
mov
mov
scas
mov
les
pop
test
int
sbb
movs
iret
and
cmps
lods
push
fild
stos
rcl
mov
test
and
xor
arpl
out
icebp
aad
call
fisttp
mov
stos
mov
inc
pop
mov
mov
mov
pop
fbld
adc
adc
cmps
scas
sub
mov
fidivr
lods
fld
cmps
rcl
mov
movs
bound
lods
stos
jg
test
and
push
pop
xor
jno
in
dec
packsswb
imul
cmp
pop
push
retf
scas
inc
cmp
mov
mov
aaa
jnp
test
dec
cmp
cs
sbb
cmp
and
cmp
out
xor
scas
or
cmps
ins
mov
mov
stos
mov
pop
and
dec
xor
adc
push
scas
jecxz
inc
push
dec
mov
mov
mov
cmp
stc
and
cmp
sub
daa
pop
push
mov
sbb
add
lods
xchg
or
xchg
pop
push
add
cmp
cs
daa
das
and
xor
adc
sbb
add
arpl
and
pop
push
inc
pop
adc
fsub
sub
inc
xor
cmp
dec
mov
or
add
lods
call
ss
or
sbb
or
and
sub
push
inc
pop
inc
sub
sub
and
ss
push
dec
push
adc
shl
push
push
sub
sub
push
mov
mov
int
call
push
xchg
pop
push
or
sub
and
xor
xor
cs
dec
inc
dec
dec
sub
sub
aaa
and
js
cmp
add
test
mov
or
pushf
push
sar
adc
cmps
and
retf
mov
dec
inc
pop
mov
lods
mov
into
sar
ret
test
jmp
sub
mov
mov
shl
pop
mov
jb
sbb
or
iret
inc
and
das
push
inc
xlat
fild
movs
fwait
test
xchg
stos
aaa
sub
mov
lea
lods
mov
arpl
imul
xchg
mov
imul
jge
rdmsr
push
xor
jnp
shl
shl
dec
dec
push
pop
cmps
call
loope
fwait
pushf
mov
jecxz
cmps
mov
dec
pop
mov
fadd
mov
mov
ret
jle
sbb
ins
xchg
test
sbb
sub
inc
sub
sub
scas
scas
lods
mov
pushf
mov
mov
mov
les
mov
push
dec
sbb
inc
or
popf
stos
mov
mov
in
inc
push
dec
push
mov
ficomp
inc
popa
fs
mov
push
pop
or
inc
adc
mov
sbb
shr
pop
pop
cmps
bound
(bad)
(bad)
adc
test
dec
push
pop
dec
loopne
push
inc
popa
mov
mov
add
aas
push
inc
xlat
pop
mov
mov
mov
mov
push
or
xchg
rcl
mov
mov
(bad)
shl
das
cdq
mov
mov
pop
pushf
mov
fld
stos
inc
sub
leave
das
sbb
lods
jge
retf
xchg
rol
dec
mov
fimul
mov
push
fadd
mov
and
aam
ds
fild
adc
sbb
dec
lds
mov
lods
enter
sbb
adc
(bad)
mov
add
xchg
call
lods
clc
mov
mov
sub
fild
mov
mov
pop
fld
stos
enter
mov
bound
enter
or
popf
loop
push
pop
push
cmps
push
xchg
test
mov
xchg
mov
adc
enter
push
push
enter
add
test
mul
inc
mov
add
mov
mov
retf
outs
sub
dec
cmp
sbb
and
rcl
test
fwait
(bad)
sbb
mov
(bad)
outs
cs
sbb
cmp
push
xchg
pop
push
dec
mov
test
push
jp
push
dec
adc
mov
add
mov
push
aas
add
test
lds
hlt
sub
adc
(bad)
movs
call
sub
pop
mov
sub
int3
push
lods
int
mov
dec
dec
inc
fidiv
jo
adc
add
retf
xor
or
push
push
test
mov
cmps
scas
mov
fwait
test
push
push
inc
add
push
or
add
cmp
cmp
and
add
cmp
sub
adc
das
cmp
xor
sbb
or
pop
jbe
pop
mov
dec
pop
push
adc
sub
adc
sub
pop
(bad)
mov
or
add
mov
and
cmp
dec
ds
arpl
lahf
into
fstp
scas
mov
sbb
mov
ret
lds
cmps
loop
push
dec
shr
(bad)
js
inc
rcl
inc
push
dec
ret
push
fidiv
and
shl
(bad)
int3
mov
inc
loopne
inc
push
push
scas
jne
mov
ror
popf
cmp
push
mov
fadd
dec
repnz
pop
dec
pop
mov
out
xchg
jmp
sub
mov
(bad)
or
inc
push
fild
mov
inc
mov
xchg
lods
mov
push
fisttp
mov
mov
add
xor
pop
mov
pop
movs
cmp
sub
(bad)
sbb
inc
push
mov
mov
mov
push
xchg
pop
stos
mov
inc
push
and
ss
push
sbb
xor
xor
mov
jp
cs
dec
dec
inc
movs
movs
cmps
lods
dec
push
inc
push
push
nop
test
test
adc
xor
aas
and
sbb
add
sbb
cmp
aas
daa
aaa
and
je
aas
ss
jne
mov
dec
pop
sub
(bad)
nop
sbb
add
mov
fcomp
mov
xchg
scas
lods
pop
or
addr16
sahf
clc
mov
mov
and
iret
push
push
inc
mov
and
lods
jge
retf
xchg
jecxz
inc
push
dec
mov
and
pop
mov
or
lods
inc
mov
ds
pop
inc
inc
fcom
aaa
xchg
rcr
sbb
and
inc
mov
mov
lds
mov
call
mov
add
and
aas
push
push
ret
push
scas
push
mov
pop
nop
mov
mov
sbb
adc
or
sbb
adc
sub
and
sbb
cmp
cmp
add
adc
sbb
stos
fistp
adc
sbb
nop
fmul
xchg
mov
test
fdivp
mov
movs
(bad)
xlat
in
lods
mov
popf
mov
scas
cmps
fadd
xchg
(bad)
lods
stos
mov
mov
pop
cmps
mov
sub
cmp
pop
dec
xor
bound
stc
arpl
mov
call
test
pop
inc
retf
mov
cmps
xchg
mov
aam
mov
stos
mov
scas
jecxz
pop
push
push
test
call
cmps
enter
mov
mov
inc
pop
inc
int3
(bad)
cwde
mov
sahf
mov
dec
push
inc
(bad)
xchg
ret
xchg
mov
cmps
cmps
jle
push
inc
jmp
sahf
cmp
ret
test
movs
iret
shr
inc
dec
dec
inc
mov
xchg
lods
mov
(bad)
jmp
mov
test
mov
retf
call
fstp
movs
lods
mov
ror
mov
inc
mov
inc
rcr
test
ret
mov
pop
mov
inc
fild
sahf
xor
inc
movs
add
cmp
cmp
pop
iret
ret
mov
dec
inc
mov
xchg
lods
mov
push
stos
mov
xchg
mov
mov
add
fsub
lods
loop
lea
mov
xchg
daa
push
out
inc
cmp
jp
sbb
jmp
push
fdiv
pop
push
pop
fimul
mov
pop
mov
dec
sahf
mov
or
pop
ss
popa
cmp
aad
cmps
inc
dec
xlat
xchg
inc
push
dec
iret
or
scas
jmp
ss
clc
push
mov
inc
push
dec
fist
mov
inc
test
mov
and
or
mov
push
scas
mov
mov
pop
test
out
xchg
sbb
cli
test
dec
push
pop
dec
rcl
xchg
call
lods
loop
scas
mov
or
pop
push
mov
ret
pop
mov
inc
mov
enter
dec
mov
das
push
xor
add
mov
test
push
test
push
cwde
push
lds
mov
dec
scas
push
xchg
cmps
lods
add
stos
mov
mov
ja
adc
or
(bad)
dec
cmp
das
and
xchg
into
ins
jbe
pop
lods
mov
scas
mov
mov
and
or
inc
pop
movs
cmps
lods
mov
inc
push
dec
or
inc
add
mov
mov
scas
arpl
add
or
xor
das
sbb
mov
scas
mov
test
call
dec
xchg
or
scas
aam
mov
adc
xchg
and
dec
xor
inc
mov
sub
push
cwde
adc
call
test
mov
iret
mov
xor
push
sub
push
aam
mov
mov
jbe
daa
mov
xor
out
das
lea
pushf
dec
test
cmps
scas
push
mov
lahf
movs
mov
mov
scas
jb
cmps
lods
(bad)
mov
into
mov
dec
sub
cmp
adc
push
xor
pushf
mov
jne
jbe
stc
jbe
add
push
das
rol
loop
pop
push
fild
stos
sbb
mov
(bad)
lods
mov
fisub
adc
cmps
retf
xchg
mov
or
out
mov
es
xor
scas
jl
or
inc
aaa
stos
jbe
shl
(bad)
mov
mov
test
inc
xlat
cmp
adc
jp
dec
fst
mov
arpl
adc
mov
retf
test
ja
adc
add
rol
adc
push
dec
ficomp
push
lods
push
lea
xchg
lods
mov
cmp
stos
mov
push
dec
pop
pop
push
inc
or
pop
mov
sbb
cwde
lea
call
out
jnp
push
aaa
push
retf
jp
test
out
xchg
cmps
mov
bound
cmps
jb
pop
das
push
and
jns
into
jp
lahf
mov
mov
movs
xor
dec
fst
mov
movs
lds
aaa
xor
mov
pushf
mov
iret
shr
add
cmps
fstp
stos
enter
sub
test
fmul
movs
arpl
in
jae
gs
and
mov
xor
cmps
pop
pop
ret
cdq
pop
pop
lods
mov
mov
addr16
push
dec
add
test
mov
push
pusha
xchg
call
inc
test
adc
mov
cmp
popa
rol
mov
mov
inc
pop
pop
rcl
mov
xchg
loopne
test
(bad)
into
adc
mov
xlat
retf
mov
mov
xor
mov
scas
cmps
fmul
mov
adc
lods
int
lock
push
inc
mov
sahf
lods
mov
cmp
xchg
adc
push
and
pop
and
sub
pop
fst
mov
pushf
mov
dec
movs
cmps
mov
sar
lods
stos
mov
jnp
pop
pop
or
mov
add
retf
frstor
push
lods
jno
in
dec
out
movs
pushf
in
call
dec
pop
fld
stos
jb
stos
mov
mov
or
into
adc
xchg
mov
fcom
stos
ror
mov
out
mov
cmps
jbe
add
push
das
rol
sbb
pop
push
fld
scas
mov
cdq
mov
in
mov
test
adc
xchg
dec
push
test
lods
mov
push
pop
dec
imul
xor
cmp
std
xchg
rol
mov
scas
retf
mov
or
cs
gs
inc
enter
rcr
push
iret
xchg
mov
mov
sbb
mov
sub
mov
or
mov
pop
mov
test
cdq
sub
pop
ss
daa
fild
or
enter
int
lods
mov
adc
(bad)
shld
cmp
add
sbb
cmps
fcomp
in
stos
mov
mov
mov
xchg
rol
sar
lods
fiadd
scas
ror
lods
jb
xor
add
xor
adc
fimul
mov
cwde
test
mov
ins
dec
inc
pop
rcr
inc
in
dec
mov
mov
cdq
test
push
fiadd
scas
mov
add
pop
pop
sahf
daa
and
cmp
std
xor
js
or
add
into
inc
cmp
and
mov
mov
stos
sub
test
mov
push
sbb
mov
jmp
mov
bound
sbb
lods
fs
imul
lahf
cmps
lods
(bad)
mov
loop
inc
push
dec
fst
mov
movs
push
mov
mov
lahf
pushf
jmp
(bad)
and
test
mov
xchg
add
les
cmps
cmp
pop
fadd
stos
mov
mov
mov
xor
mov
mov
xchg
or
push
aas
sbb
movs
jb
fidiv
sub
call
outs
and
push
cmp
mov
xchg
ror
and
inc
lods
rcl
mov
jno
push
cmp
and
inc
sub
jns
xchg
fld
stos
icebp
fld
xchg
test
es
sti
push
imul
pop
xor
sti
and
mov
lods
mov
sbb
pop
push
dec
push
pop
add
adc
inc
push
sbb
pop
and
cs
pop
xor
jno
in
dec
call
test
add
sub
dec
sub
ins
jmp
mov
rcr
push
dec
push
call
mov
or
dec
dec
pop
push
fdiv
arpl
scas
std
jae
cwde
xchg
cmps
scas
int3
mov
pop
rdmsr
mov
inc
ret
mov
fwait
lods
mov
mov
pop
mov
fmul
adc
icebp
lea
sub
repnz
mov
inc
int3
add
lds
xchg
sbb
push
ss
ror
lahf
or
pop
cmp
loop
fwait
add
cmp
mov
stos
mov
push
les
sub
jmp
mov
dec
iret
sbb
scas
or
cmp
loope
adc
iret
adc
mov
repz
mov
fs
jecxz
imul
repnz
sbb
cmps
mov
push
(bad)
ror
dec
cmps
pop
cwde
movs
cmps
jmp
rcl
push
mov
ror
pop
dec
pop
mov
enter
imul
pop
mov
jecxz
mov
push
ffreep
ret
dec
cmps
add
add
pop
nop
adc
push
inc
push
mov
loop
call
je
sahf
fstp
xchg
pop
fst
inc
push
mov
icebp
pop
mov
pop
rol
in
inc
push
mov
fmul
cli
push
inc
push
mov
stc
dec
call
je
sahf
sub
or
ret
inc
push
mov
jmp
mov
pop
rcl
cmc
push
inc
push
mov
cmc
imul
mov
scas
mov
and
movs
pop
inc
push
mov
mov
cmps
hlt
bound
adc
mov
sti
jbe
adc
enter
inc
mov
icebp
outs
adc
push
inc
popa
mov
cwde
pushf
mov
push
lods
sbb
fiadd
and
mov
push
dec
iret
retf
pop
pop
mov
mov
mov
push
enter
push
inc
mov
in
jae
adc
out
arpl
cwde
cmps
mov
dec
rcl
mov
jno
test
pop
pop
rcr
mov
push
inc
mov
loopne
adc
or
fnsave
cld
stos
call
inc
mov
cli
bound
movs
inc
push
dec
lods
lods
mov
movs
clc
ins
fwait
or
push
pop
push
stos
xor
push
loop
xchg
adc
repnz
push
arpl
shl
jecxz
movs
mov
push
ret
dec
inc
pop
mov
scas
mov
loope
adc
in
add
push
dec
dec
push
mov
call
gs
pop
lods
dec
cdq
scas
mov
mov
add
aam
push
inc
push
mov
loop
nop
adc
shl
push
pop
mov
fadd
jnp
dec
push
mov
cmps
scas
lods
retf
fisub
xor
ret
pop
push
test
in
adc
xlat
pop
pop
pop
mov
push
or
push
add
mov
cmp
sbb
scas
arpl
adc
add
pop
push
mul
xchg
push
inc
mov
clc
lods
stos
(bad)
add
jl
movs
cmps
jmp
out
mov
inc
mov
test
adc
jns
call
lods
inc
out
mov
or
add
dec
in
stos
mov
dec
scas
movs
in
lods
cmc
push
mov
dec
mov
lock
sahf
add
mov
loop
call
mov
lods
sbb
mov
mov
loopne
mov
inc
scas
sahf
jmp
inc
mov
out
mov
push
lahf
or
in
std
test
out
inc
lea
dec
mov
call
add
mov
push
mov
icebp
mov
out
inc
xchg
add
(bad)
mov
mov
pop
pop
mov
in
mov
sti
mov
ds
fwait
or
sub
movs
scas
jmp
test
retf
fnstsw
adc
cmps
test
push
mov
icebp
xchg
(bad)
sbb
sbb
lods
mov
push
stos
push
imul
or
jns
scas
lods
stc
movs
lods
sub
pop
xlat
mov
push
cmps
push
xor
dec
inc
dec
lds
dec
sbb
cld
xchg
sbb
sub
inc
sub
xor
push
cdq
cmps
xor
pushf
aaa
cmps
out
xor
cmc
dec
sub
cwde
ds
and
inc
aaa
stos
jbe
shl
pop
or
inc
mov
push
pop
push
and
cld
push
dec
dec
push
mov
rcl
dec
cmps
in
arpl
and
pusha
(bad)
jp
xor
pop
rol
or
mov
addr16
push
dec
push
cmp
push
push
call
dec
push
loop
pop
push
push
dec
pop
arpl
call
pop
inc
push
pop
push
int3
(bad)
push
rcr
fldenv
stos
jg
push
push
shl
jge
into
xchg
dec
xchg
rcr
pop
test
in
push
push
inc
lods
mov
scas
fxch
loop
push
inc
gs
stos
cmps
mov
fld
sbb
gs
mov
mov
rcr
xchg
lods
mov
retf
test
sbb
dec
sub
push
shl
call
imul
sub
push
lods
es
mov
mov
mov
push
stos
ins
imul
mov
movs
ret
iret
test
popf
pushf
mov
repz
mov
and
adc
mov
mov
ret
cmps
lods
movs
jb
test
(bad)
fwait
mov
test
in
div
scas
lods
mov
pushf
mov
mov
push
adc
jmp
stos
inc
iret
ror
and
xchg
inc
xlat
cmp
test
or
adc
sub
popa
jmp
xchg
int3
popa
pop
inc
push
mov
repz
xchg
test
hlt
mov
mov
adc
mov
mov
mov
add
cmp
add
sub
sub
xor
add
dec
mov
dec
jmp
retf
test
and
sub
and
xor
ds
sub
push
stos
push
cdq
test
dec
loop
lds
push
or
pop
add
push
or
mov
cdq
adc
push
sub
and
inc
xor
push
int
inc
xchg
(bad)
adc
push
dec
dec
push
xlat
or
add
and
je
jbe
je
adc
or
push
test
fld
jb
jns
xor
pop
das
pop
loope
fld
sbb
ret
xchg
(bad)
sbb
push
add
pop
adc
cmp
aaa
sub
sub
add
sub
sub
sbb
sub
or
and
cmp
dec
push
pop
add
xor
sbb
dec
push
pop
jnp
bound
push
pop
push
dec
inc
pop
inc
push
push
jl
ins
inc
or
and
sbb
xor
xor
inc
ds
push
pop
aad
sbb
test
jp
push
push
push
push
inc
popa
jmp
in
inc
push
adc
and
ja
push
mov
retf
push
outs
mov
push
jmp
test
mov
ficomp
inc
popa
aas
test
adc
das
and
cmp
add
cmp
sub
aas
daa
and
cmp
sbb
aas
aaa
sub
sub
es
push
inc
add
daa
xor
aaa
inc
popa
fs
push
push
dec
pop
pop
push
ins
jno
push
js
push
je
gs
sbb
lea
mov
cmp
dec
aas
sub
add
push
push
inc
shl
fist
dec
popa
bound
jbe
sbb
push
or
or
push
sub
inc
cmp
cmp
dec
iret
or
sub
pop
fs
ds
dec
and
push
ror
outs
sahf
lods
mov
outs
jne
jbe
fwait
inc
push
or
sub
das
aaa
xor
push
or
aaa
xor
cmp
das
cmp
or
and
sub
cmp
xor
and
daa
aas
pop
dec
pop
add
cs
adc
outs
jae
popa
bound
popa
ins
bound
push
jae
fs
js
outs
pop
or
mov
push
or
adc
sub
xor
push
ds
xor
popa
push
movs
aas
or
add
mov
movs
push
inc
pop
inc
retf
int
mov
push
lock
sbb
mov
stos
mov
mov
add
fld
jae
retf
xlat
pushf
mov
xor
scas
cmps
pop
in
test
fcom
mov
mov
pop
scas
or
sbb
pop
mov
fcom
mov
mov
pop
mov
or
fmul
mov
inc
scas
jge
mov
std
mov
mov
add
inc
test
test
dec
adc
cmp
xor
movhps
aas
and
imul
mov
(bad)
movs
mov
and
popf
xor
pop
or
mov
shr
iret
mov
mov
and
or
or
inc
adc
xor
push
pop
push
push
cmp
and
and
and
aaa
sub
xor
pop
pop
(bad)
mov
rcl
push
dec
push
pop
repnz
xchg
cs
das
push
xchg
add
gs
arpl
inc
push
fisubr
dec
sub
cmp
xchg
ret
add
call
test
stos
jg
cmp
mov
ins
pop
cmp
push
retf
test
sbb
or
or
fnstenv
push
and
je
adc
pop
mov
jmp
movs
xor
push
js
push
inc
pop
cld
or
mov
push
bound
arpl
cmps
imul
dec
fsub
mov
mov
mov
jmp
mov
mov
mov
or
mov
push
nop
aas
out
(bad)
and
xchg
fisubr
xor
push
(bad)
push
dec
inc
dec
lds
(bad)
push
jae
dec
push
rcl
(bad)
add
dec
push
adc
push
mov
imul
cmp
push
inc
call
retf
cmp
mov
cdq
mov
lock
rcl
sbb
adc
xchg
movs
mov
aam
xor
fdiv
in
je
iret
call
repz
add
in
lods
stos
mov
std
inc
rcr
pop
js
add
es
pcmpgtb
and
push
sub
add
xor
and
or
pop
inc
adc
(bad)
sub
and
dec
dec
inc
xor
push
daa
push
sub
push
cdq
cmp
mov
shl
test
shl
mov
fwait
sbb
sbb
inc
pop
inc
inc
add
cmp
sub
dec
inc
pop
xor
dec
cmp
dec
push
pop
xchg
sub
jbe
mov
fnstenv
mov
push
or
or
add
inc
inc
push
pop
jne
mov
pop
sub
test
inc
in
fst
mov
call
add
inc
and
cwde
or
add
into
inc
cmp
xlat
or
cmc
jmp
fisttp
pop
dec
push
xchg
aam
or
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
xlat
rcl
push
dec
inc
dec
inc
push
sbb
jge
push
addr16
push
jno
add
jns
inc
jae
or
arpl
push
dec
outs
and
and
sbb
and
sub
adc
xchg
daa
pop
lds
mov
mov
mov
ret
nop
rcr
div
popa
fs
loopne
gs
mov
adc
push
mov
fmul
leave
lods
mov
loope
mov
fiadd
mov
sbb
scas
lods
mov
inc
es
adc
aaa
and
or
sub
dec
cs
sbb
mov
lods
aad
push
daa
test
xor
cmp
adc
push
xor
inc
or
or
xchg
rcl
mov
sbb
test
push
dec
lods
nop
clc
mov
movs
xlat
sti
test
inc
push
enter
lods
mov
adc
lds
fwait
loope
xchg
pushf
add
call
or
sbb
movs
adc
or
ret
mov
pop
scas
fstp
jmp
loopne
mov
arpl
movs
scas
add
pusha
push
push
push
imul
jbe
sbb
xchg
scas
sahf
pushf
mov
pop
push
ror
mov
adc
push
mov
xchg
mov
hlt
scas
lods
stos
mov
xor
xchg
stos
jbe
cmps
mov
dec
or
daa
cs
sbb
daa
cmp
xor
cmp
push
or
aaa
aas
cmp
and
cmp
and
xor
add
or
or
add
push
pop
add
cmp
and
sub
push
inc
add
das
pop
pop
pop
push
daa
push
sub
enter
inc
push
dec
(bad)
mov
add
or
add
call
jno
scas
cmps
or
pop
push
adc
xor
adc
xor
push
add
arpl
add
and
das
ss
and
adc
pop
adc
sub
or
sar
add
mov
jge
rdmsr
inc
(bad)
or
xor
jne
add
mov
fist
mov
arpl
jno
cmp
pop
fisttp
mov
sti
dec
int3
cdq
mov
scas
mov
sub
imul
push
sbb
jnp
sbb
add
mov
(bad)
pushf
mov
scas
mov
adc
inc
mov
dec
inc
dec
sbb
sub
cmp
cmp
frstor
scas
ret
movs
fcomp
mov
sub
loope
call
cmps
mov
rcr
or
sbb
ficom
shl
(bad)
or
stos
jae
shl
sub
loop
jecxz
popa
mov
mov
add
fcom
inc
cdq
stos
add
stos
mov
lds
or
fdiv
push
cmp
and
pop
or
add
mov
xor
scas
push
sbb
in
add
mov
ret
sbb
mov
mov
or
ins
inc
and
adc
cmps
ret
inc
rcl
ja
push
enter
les
inc
inc
push
cmc
mov
or
inc
das
push
aam
mov
outs
mov
test
cmp
mov
imul
xlat
or
fwait
cmp
rol
(bad)
loop
mov
inc
pop
jmp
inc
fadd
sub
adc
call
fisttp
push
mov
lock
test
mov
add
js
in
(bad)
xchg
mov
sbb
mov
rol
push
out
test
dec
mov
cmps
(bad)
stos
stos
pop
clc
test
ficom
scas
enter
(bad)
inc
fcomp
mov
test
add
push
(bad)
pushf
mov
xor
adc
dec
mov
fcom
mov
mov
cpuid
fldcw
dec
lods
pop
and
sbb
stc
add
push
lods
pop
stc
mov
rol
loope
inc
jmp
mov
fimul
mov
mov
sbb
mov
into
sti
mov
rcr
mov
test
(bad)
jecxz
test
test
sub
movs
scas
fadd
mov
mov
mov
scas
mov
test
xchg
rol
inc
repnz
not
dec
mov
loopne
push
dec
push
stos
push
clc
test
fiadd
cmps
mov
rcr
sysexit
ins
jmp
loopne
gs
jecxz
scas
les
out
pop
leave
dec
ficom
stos
fstp
mov
aam
xchg
fld
mov
mov
leave
push
sahf
ret
adc
cmps
push
mov
mov
mov
add
mov
mov
les
test
add
lods
enter
mov
lock
and
nop
rcr
lods
test
pushw
or
xchg
mov
in
scas
pop
rcr
lods
fbstp
mov
fldenv
jg
ds
rcl
jmp
push
ror
stos
mov
loope
out
xor
scas
rcl
mov
leave
add
mov
xlat
sbb
movs
or
test
stos
icebp
xchg
test
push
mov
sar
pop
jne
jp
fwait
into
add
mov
stos
push
leave
test
add
mov
stos
jmp
iret
mov
dec
fist
test
jmp
loope
dec
rcl
sbb
fwait
xchg
out
mov
sub
lea
add
loop
enter
push
push
inc
(bad)
mov
rcr
cdq
fstp
shl
test
push
in
lods
rcr
jecxz
sahf
out
das
fnsave
aad
(bad)
and
inc
cld
mov
fst
loop
test
std
mov
push
inc
push
retf
mov
and
add
sbb
mov
push
test
call
mov
loope
scas
les
hlt
in
mov
push
inc
push
leave
lods
ret
xchg
mov
mov
stc
test
and
dec
mov
ret
adc
icebp
sahf
fwait
loope
retf
and
xchg
sbb
pop
mov
retf
add
mov
ret
loopne
rcl
dec
jmp
cwde
test
test
cmp
and
cmp
mov
pop
lods
xor
scas
mov
mov
add
stos
inc
jecxz
mov
data16
pop
loope
dec
push
ret
mov
enter
inc
lods
fdivr
mov
cs
push
mov
out
mov
sub
lea
or
or
popf
jmp
sti
mov
pop
int
repz
mov
out
imul
push
out
inc
push
dec
enter
movs
scas
repnz
shl
out
je
add
pop
enter
out
scas
call
scas
mov
mov
or
mov
imul
icebp
jg
adc
push
les
lds
rcr
mov
call
lock
scas
les
adc
adc
adc
stos
neg
pop
rcl
leave
repnz
push
shl
rol
push
stc
pusha
fs
mov
mov
push
int3
jae
and
sbb
adc
call
mov
mov
push
mov
pop
jmp
ror
jmp
cmp
repz
mov
or
fild
pop
iret
add
out
pop
push
dec
inc
mov
call
mov
lods
or
pop
dec
pop
push
cmovno
xchg
call
push
ds
and
sbb
cmp
sbb
xor
ss
cmp
sub
and
add
and
cmp
sbb
add
sbb
sub
dec
mov
test
push
pop
sub
cmp
push
pop
xor
aas
cmp
add
cmp
aaa
wbinvd
cmp
and
and
pop
add
or
pop
inc
push
pop
push
dec
dec
or
adc
aad
push
dec
and
cmps
push
xor
add
xor
inc
aas
int3
(bad)
dec
xchg
mov
std
scas
lods
stos
cdq
cmp
or
les
adc
cmps
les
mov
xor
push
scas
cmps
and
mov
pop
mov
movs
or
jmp
std
mov
or
retf
adc
pushf
jp
adc
jns
adc
mov
rcr
inc
push
and
dec
xor
fild
popa
mov
movs
pushf
mov
sahf
loop
mov
and
fiadd
pop
sub
fist
mov
pop
mov
cwde
lods
mov
push
mov
inc
aas
or
pop
inc
mov
push
mov
xchg
mov
or
jbe
pop
inc
fmul
fisub
scas
(bad)
mov
pop
xor
mov
shl
stos
pop
leave
push
stos
jnp
mov
lds
or
mov
lea
cmps
adc
pop
fwait
mov
adc
sbb
lods
daa
adc
push
jnp
pop
aas
push
cmp
xchg
mov
fisubr
sub
das
lea
and
sahf
sbb
mov
sub
inc
arpl
mov
pop
or
fnsave
aas
mov
faddp
adc
or
jmp
lahf
sub
sub
pop
and
push
xor
push
pop
scas
jl
mov
call
and
adc
in
inc
push
dec
dec
mov
nop
test
rcl
shl
dec
sbb
sub
cmp
and
xor
jg
daa
cmp
push
pop
push
inc
adc
aas
and
cmp
sub
add
and
adc
arpl
loop
push
cwde
adc
rcr
cmovnp
jno
retf
lods
push
(bad)
lahf
or
sbb
pop
cmp
fimul
push
call
mov
fldenv
cdq
adc
cmps
aas
out
(bad)
jmp
out
or
lea
(bad)
adc
scas
adc
or
or
scas
test
dec
loope
inc
pop
xchg
sbb
mov
iret
xchg
pop
ret
mov
push
retf
out
mov
xor
ins
pop
aad
sar
daa
jg
mov
fst
ret
pop
push
fstp
xchg
push
xchg
dec
push
rcl
xchg
mov
das
pop
rcl
push
enter
arpl
pushf
sti
mov
push
inc
cld
and
fistp
sub
int3
pop
push
rcl
jne
push
stos
enter
cmp
inc
inc
dec
dec
ficomp
mov
fist
mov
mov
(bad)
mov
pop
les
movs
fld
stos
lds
pop
xor
push
dec
fld
inc
sbb
sbb
inc
adc
push
mov
fisubr
adc
and
mov
mov
cmps
mov
mov
xor
sbb
or
shl
adc
add
cmp
scas
movs
mov
sub
pop
add
push
pusha
add
lods
rcl
rol
push
xlat
scas
pop
rol
jge
rcr
lods
lea
mov
sbb
xor
test
cmp
sub
pop
pop
div
cmc
mov
fisubr
adc
inc
xchg
fcomp
dec
push
inc
(bad)
mov
adc
dec
push
test
mov
and
or
mov
mov
dec
pop
push
push
inc
and
cmp
mov
sar
imul
stos
mov
(bad)
retf
or
mov
test
push
adc
sar
push
arpl
and
add
gs
sbb
dec
rcr
enter
push
add
int
pop
pop
push
aam
push
inc
push
rcl
mov
add
dec
ficomp
mov
adc
imul
test
and
(bad)
scas
lods
stos
mov
sbb
pop
mov
ffree
mov
rcr
adc
push
cli
lods
mov
mov
jbe
fstp
pop
pop
and
repz
push
inc
pop
stos
jo
stos
mov
or
fwait
mov
pop
sbb
retf
xchg
pop
iret
mov
pop
pop
fist
test
push
pmulhuw
jbe
shr
cmps
xchg
or
inc
fcom
dec
xchg
test
ror
retf
adc
add
ret
adc
and
(bad)
retf
loope
jae
scas
std
xchg
mov
ficomp
xchg
call
adc
aas
mov
cmp
push
sbb
inc
loope
adc
(bad)
add
enter
out
mov
call
scas
test
inc
mov
cli
lods
stos
retf
sar
rcr
test
test
jge
cmp
or
(bad)
ficomp
push
mov
mov
outs
fild
enter
aad
add
add
cmps
lods
enter
rcl
(bad)
cmp
pop
rcr
lods
mov
bound
enter
cmc
and
lea
call
cwde
jecxz
lods
mov
push
adc
mov
mov
push
inc
push
or
sub
add
add
and
adc
sub
cmp
xor
xor
imul
popa
pop
pop
pop
adc
cmp
xor
cmp
cmp
and
xor
add
das
ss
and
pop
or
or
sub
test
push
push
xor
and
xor
xor
xor
push
xor
pop
cmp
xor
aaa
cmp
cmp
or
inc
xor
dec
dec
pop
and
mov
push
inc
dec
dec
outs
xor
pop
push
dec
adc
inc
loop
pop
push
ret
and
popf
add
or
fwait
jp
popa
stc
push
inc
popa
in
ins
loop
jmp
jge
fwait
pop
mov
inc
pop
daa
inc
out
push
dec
inc
leave
cmp
nop
pop
mov
mov
push
enter
cdq
inc
mov
fist
call
mov
push
pop
push
fimul
inc
rcl
mov
mov
ret
lds
in
sub
mov
mov
mov
pop
and
dec
pop
fist
push
xor
sub
pushf
cld
int
cmps
(bad)
xchg
jno
and
sbb
mov
mov
ret
mov
push
cmp
dec
push
pop
push
enter
xchg
xor
mov
cs
rcl
sub
jns
mov
sub
ficomp
les
push
fild
stos
sbb
ret
or
sbb
mov
fcom
sahf
add
lock
ret
sbb
mov
mov
mov
aaa
mov
adc
or
stos
mov
or
xor
xor
xor
and
cmp
sub
ss
sub
daa
and
adc
add
adc
mov
mov
adc
fsub
dec
gs
or
je
rcr
jle
push
ds
sbb
test
xor
fcomp
loop
sbb
inc
mov
call
pop
and
sbb
ss
pop
push
mov
jp
sbb
pop
mov
rol
add
mov
mov
mov
fwait
xchg
in
mov
mov
and
add
jecxz
adc
mov
je
add
or
fist
ficom
push
sub
and
inc
push
ror
movs
mov
add
les
pushf
dec
int3
call
pop
xor
sub
inc
push
ffreep
inc
mov
mov
sub
mov
enter
sub
sti
fild
fimul
push
mov
(bad)
scas
lods
jb
xor
std
jns
pop
pop
inc
push
xor
dec
mov
clc
movs
mov
test
int3
pop
mov
push
scas
js
rol
fs
ficomp
inc
ficomp
mov
adc
or
gs
imul
cmps
add
sti
out
mov
push
push
push
dec
iret
int3
pop
mov
movs
(bad)
test
push
mov
lods
mov
inc
ror
sahf
out
lods
data16
popf
rol
mov
adc
stos
mov
push
scas
add
push
stos
(bad)
xchg
cmp
pop
iret
push
mov
mov
fadd
xor
neg
sub
cmovnp
inc
aam
inc
scas
inc
icebp
mov
push
scas
add
mov
jge
xchg
cmp
fcom
pushf
das
pop
jmp
test
push
sub
sub
cdq
out
cmps
cmp
pop
add
dec
xchg
int
cmp
call
xchg
sbb
cs
push
dec
mov
ret
adc
bound
enter
mov
xchg
mov
sbb
dec
dec
pop
mov
mov
mov
rcr
(bad)
pop
mov
mov
xchg
inc
push
test
lods
mov
push
pop
dec
sbb
and
or
sbb
sbb
adc
xor
xor
sub
cmp
sub
je
xor
and
xor
jns
and
arpl
sub
xor
inc
test
test
dec
adc
add
cmp
add
adc
sub
jns
add
pop
adc
adc
sbb
sbb
sbb
add
sub
cmp
xor
test
dec
push
sbb
pop
xor
or
adc
sub
sbb
sub
xor
cs
aas
cmp
xor
sub
ds
lods
mov
mov
jne
add
xor
cmp
push
cmp
and
sbb
add
add
sub
and
pop
cmp
cmp
dec
dec
inc
movs
movs
cmps
lods
push
inc
push
or
adc
cmp
das
sbb
xor
add
cmp
sub
imul
cmp
add
cmp
aas
js
and
and
push
mov
dec
inc
pop
sbb
and
sbb
xor
sbb
xor
sub
adc
and
jae
adc
push
add
and
push
dec
dec
pop
add
mov
sub
inc
lds
adc
retf
sub
push
dec
ror
push
push
inc
fadd
and
or
call
je
mov
fimul
adc
and
mov
dec
inc
pop
shr
mov
push
enter
push
(bad)
stos
mov
push
or
dec
pop
bound
popf
sub
pop
mov
sbb
adc
xchg
cmp
pop
pop
xor
mov
rcl
cmp
lods
mov
mov
pusha
sub
sub
inc
ror
js
add
(bad)
pop
push
xor
mov
ficom
sti
fiadd
div
adc
xor
lds
popa
cmps
cmp
mov
ficomp
push
inc
pop
adc
les
xor
icebp
mov
lods
jg
ds
xor
(bad)
test
or
jbe
and
xchg
call
lods
and
scas
mov
pop
out
pop
ret
and
in
mov
jnp
das
pop
cmp
sbb
mov
clc
in
pop
dec
(bad)
outs
inc
es
mov
ins
push
xor
push
push
pop
rcl
pop
shl
sub
mov
dec
cs
cmps
(bad)
out
movs
cmps
repz
pop
and
xchg
mov
mov
xor
pop
out
sahf
lds
dec
fs
mov
fs
xor
sub
movs
repnz
pop
pop
fisub
cmp
ins
scas
test
imul
test
mov
sti
mov
adc
pop
gs
jne
cmp
mov
cmp
in
mov
adc
(bad)
jno
cmp
scas
add
cmps
lods
jno
ss
and
div
test
imul
hlt
adc
imul
sahf
fwait
push
fs
jae
jbe
shl
scas
cmps
lock
cli
sbb
bound
(bad)
imul
mov
sub
mov
and
push
mov
loop
sub
popa
mov
mov
pop
das
push
mov
sti
mov
out
adc
add
loopne
test
inc
xor
addr16
lods
mov
push
stos
enter
rcl
jp
lods
mov
arpl
xchg
sub
pop
cmc
movs
mov
push
mov
ficomp
stos
mov
dec
sub
push
mov
aad
cmp
push
test
(bad)
mov
scas
retf
mov
sub
mov
stos
mov
dec
scas
ins
mov
aaa
push
and
loop
test
out
cmp
dec
mov
aam
xor
rol
mov
inc
lds
pop
mov
lds
scas
(bad)
mov
sbb
mov
xchg
sub
cs
lods
repnz
sbb
mov
mov
fs
imul
pop
mov
xlat
xchg
xor
inc
mov
mov
stos
lods
mov
aas
inc
mov
repnz
stc
adc
bound
jo
cmps
mov
call
mov
jg
jle
adc
push
or
mov
ror
dec
and
mov
inc
mov
or
fst
and
std
sub
in
sbb
(bad)
push
les
cvtpi2ps
mov
sub
jmp
div
pop
out
inc
shl
pop
fisttp
push
push
int3
xor
retf
inc
shl
std
gs
mov
in
inc
mov
test
inc
pop
pop
clc
dec
cld
adc
jae
sub
into
adc
in
adc
mov
fst
movs
(bad)
arpl
adc
add
push
clc
push
sub
inc
cmp
push
and
das
dec
(bad)
sbb
push
stos
pop
stc
test
ficomp
mov
add
in
movs
mov
dec
push
inc
popa
jmp
imul
mov
cld
mov
push
test
fild
stos
sbb
dec
es
hlt
loopne
test
mov
stc
lods
mov
xchg
das
add
adc
push
mov
fimul
jecxz
dec
dec
pop
mov
ficom
mov
push
sub
dec
cmp
dec
cmp
or
inc
mov
lds
mov
adc
out
test
mov
dec
mov
iret
adc
inc
ret
xor
ss
mov
fiadd
mov
lods
rcr
push
test
mov
xor
mov
lahf
cmps
scas
les
int3
mul
add
push
fld
std
push
pop
pop
push
movs
xchg
icebp
test
stc
inc
dec
push
push
lods
jmp
or
xor
or
addps
push
xor
jg
push
inc
sti
(bad)
not
push
int
mov
or
enter
or
enter
jmp
lods
into
mov
sbb
push
retf
(bad)
(bad)
mov
icebp
sbb
inc
pop
stos
daa
loope
mov
pop
inc
pop
pop
mov
jmp
or
push
neg
cmp
cs
and
and
cmp
push
stc
sub
push
fdiv
rol
daa
into
mov
or
fmul
mov
lea
movs
mov
dec
in
push
retf
outs
push
dec
(bad)
xchg
pop
ret
pop
sar
ss
push
aam
inc
mov
aad
loope
push
inc
push
push
scas
mov
mov
loopne
push
dec
push
stos
(bad)
cli
test
fadd
mov
fist
in
and
pop
and
cmp
popa
push
push
push
jmp
hlt
adc
dec
mov
adc
ret
lds
mov
jmp
sub
enter
pop
inc
pusha
mov
fst
loope
and
arpl
adc
jmp
dec
pop
push
test
fld
mov
leave
or
pop
xor
push
daa
push
sub
push
xor
arpl
push
push
in
sti
or
dec
mov
int
sahf
xor
mov
cmp
mov
test
push
dec
iret
dec
cmps
mov
add
adc
test
out
mov
fisttp
icebp
and
bound
and
xor
jbe
mov
shl
call
mov
push
push
sub
pop
pop
aas
inc
test
pop
inc
mov
lds
fs
movs
mov
test
xor
aaa
in
mov
adc
scas
lds
dec
fild
(bad)
push
pop
push
inc
mov
nop
mov
mov
or
test
test
mov
xor
cmp
xor
xor
sub
push
dec
inc
dec
sub
sub
and
and
xor
pop
push
inc
push
cmp
xor
aas
adc
sub
fs
arpl
add
inc
push
pop
push
sbb
mov
test
adc
pusha
xchg
iret
adc
int
out
into
pop
(bad)
push
sbb
and
or
stos
jae
shl
iret
mov
rcl
xchg
call
pop
retf
les
clc
fst
pop
push
fist
loopne
call
pop
jmp
test
aas
inc
cmp
lods
mov
mov
jl
fs
push
jg
sahf
jns
mov
dec
pop
add
lods
cmc
xchg
out
inc
mov
shl
and
and
shr
lods
mov
mov
fadd
mov
gs
jmp
or
stos
pminsw
movnti
repnz
push
dec
push
stos
fucom
test
fadd
mov
push
mov
xlat
adc
ret
je
jbe
pop
das
push
xor
dec
xor
fistp
inc
sub
mov
ret
ror
test
sbb
sub
inc
sub
aam
push
xlat
or
jmp
cli
mov
scas
cmps
mov
movs
pop
add
sub
sbb
sub
push
cs
sub
sub
sub
das
dec
push
pop
dec
pand
xor
and
mov
push
movs
mov
fcom
mov
mov
call
xor
sbb
push
les
fiadd
je
sub
cmps
mov
movs
ds
lds
inc
ficom
mov
dec
inc
dec
dec
scas
in
shl
dec
fadd
pop
dec
aad
inc
daa
js
push
loopne
lds
push
test
pop
push
xchg
add
push
cmps
inc
loop
mov
cwde
fst
dec
leave
or
std
pop
pop
pop
push
movs
and
test
mov
push
and
cmps
sti
bound
mov
xrelease
and
mov
mov
push
cmp
leave
or
mov
pop
pop
push
dec
mov
rcl
mov
cmp
test
fadd
pop
test
dec
movs
fwait
xchg
push
mov
rcl
cld
into
cmovnp
adc
push
scas
lods
fidivr
enter
mov
add
inc
test
test
dec
sub
lods
mov
arpl
cmps
mov
dec
pop
jne
jns
pop
jo
gs
inc
dec
sbb
mov
cdq
pop
and
xor
out
fisttp
int
movs
arpl
in
jae
popa
(bad)
and
shl
leave
xchg
inc
push
pop
in
dec
pop
adc
pop
jb
adc
add
pop
movs
or
dec
ficomp
push
adc
adc
pop
adc
sub
push
cmp
push
cmp
adc
add
inc
mov
pop
push
rcr
dec
movs
sub
inc
jmp
push
xor
sbb
cmp
push
xchg
adc
or
dec
jbe
adc
cmp
gs
sub
jbe
add
cmovnp
add
xor
push
and
inc
fnstsw
pop
pop
fisub
adc
cmp
dec
imul
inc
pop
leave
push
push
in
xlat
or
fimul
pop
(bad)
add
loopne
arpl
in
gs
adc
(bad)
pop
add
sbb
push
push
inc
mov
add
sbb
mov
pop
push
dec
push
sub
push
adc
mov
in
dec
mov
arpl
and
add
fcomp
mov
mov
and
pop
mov
stc
mov
enter
repnz
mov
inc
es
sbb
jmp
dec
fs
cmp
mov
aad
test
push
scas
cld
sar
sub
mov
dec
out
mov
inc
jmp
pushf
pushf
pop
sbb
in
mov
retf
scas
sbb
adc
adc
inc
out
leave
pushf
add
cld
sar
mov
out
das
mov
rcl
xchg
sbb
add
push
scas
xacquire
add
and
mov
adc
inc
loopne
dec
rcl
push
clc
fwait
xchg
xor
lea
scas
cmps
ficom
movs
jg
push
push
inc
pop
int3
test
inc
or
sti
mov
dec
call
dec
ficomp
test
lods
mov
arpl
mov
imul
inc
inc
pop
rol
push
dec
inc
sbb
jmp
xchg
stos
mov
inc
fmul
test
movs
add
inc
or
retf
std
mov
scas
jb
pop
push
inc
das
pop
adc
and
mov
(bad)
sahf
mov
loop
cli
pop
pop
fiadd
cmp
test
add
dec
cmp
sar
lods
mov
retf
dec
rcr
push
sub
and
movs
mov
(bad)
loopne
mov
push
or
test
sbb
mov
jecxz
scas
sti
scas
jmp
inc
out
and
fldenv
fist
stos
call
icebp
ret
pop
mov
fldcw
aad
add
xchg
mov
fcomp
xchg
jmp
sub
lea
mov
loop
loop
inc
scas
mov
mov
push
scas
or
lods
mov
test
cmp
test
or
jbe
and
xchg
call
(bad)
call
mov
or
sub
pop
pop
xlat
sbb
neg
push
dec
mov
mov
mov
ret
lods
mov
pushf
jae
jbe
or
and
test
push
push
inc
js
cmp
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
ficomp
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
push
jmp
sub
aad
push
pop
push
dec
dec
pop
push
inc
pop
call
inc
sub
pop
pop
xchg
sahf
test
xchg
mov
cdq
lea
mov
and
pop
or
imul
sub
xor
sub
jbe
and
push
bound
jae
rcl
arpl
imul
sbb
pop
push
lods
mov
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
(bad)
or
xchg
sbb
test
inc
jl
pop
pop
imul
adc
pushf
adc
test
push
stos
xor
push
lods
sbb
nop
adc
nop
push
inc
xchg
mov
push
mov
or
push
mov
lahf
sbb
sahf
or
lea
dec
push
sbb
cdq
adc
lods
sub
mov
add
dec
ins
lahf
add
(bad)
adc
or
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
push
test
std
sahf
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
mov
push
push
push
or
pop
dec
pop
push
push
inc
popa
fs
arpl
jbe
js
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
or
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
out
adc
fwait
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
adc
pop
push
inc
pop
inc
inc
push
push
inc
push
iret
xchg
dec
dec
aas
mov
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
inc
push
push
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
sbb
nop
inc
push
rcl
inc
loopne
pop
push
test
pop
push
cmps
test
movs
xchg
push
dec
dec
sbb
adc
mov
gs
cmps
imul
or
test
rcl
aad
inc
pop
loop
push
dec
xchg
nop
push
dec
or
dec
dec
push
mov
inc
xchg
fs
arpl
jbe
sbb
dec
pop
push
inc
pop
inc
sub
inc
dec
fcom
dec
push
test
push
inc
lea
pop
push
push
xchg
popa
fs
arpl
gs
jae
pop
push
or
inc
inc
cmp
dec
dec
inc
pop
pop
pop
(bad)
cwde
push
inc
neg
push
dec
xchg
add
push
pop
movs
(bad)
push
push
mov
mov
imul
dec
jne
push
inc
push
xchg
inc
push
cmp
push
dec
xor
pop
push
fild
push
cmc
or
xchg
push
inc
xchg
mov
gs
mov
inc
push
jg
dec
dec
add
or
and
push
dec
ret
dec
retf
mov
std
lahf
push
push
cld
test
lahf
lea
mov
inc
popa
xchg
mov
jbe
push
popf
push
pop
jae
dec
pop
js
pop
inc
inc
push
push
inc
push
xchg
inc
dec
adc
dec
push
cmp
lea
dec
dec
push
adc
fs
arpl
pop
and
xor
inc
pop
inc
inc
pop
xor
xor
xor
xor
add
xor
inc
push
dec
sbb
and
xor
xor
xor
or
pop
jbe
pop
inc
adc
and
sub
sub
cmp
and
pop
pop
pop
push
add
sub
and
xor
and
xor
sub
cmp
cmp
pcmpgtb
xor
cmp
pop
sub
dec
pop
push
pop
xor
xor
xor
es
push
and
and
or
push
dec
sbb
daa
xor
or
push
inc
popa
and
adc
aaa
sub
push
dec
or
and
das
xor
and
sub
and
ds
push
dec
push
add
aas
add
daa
es
cmp
xor
sub
xor
sbb
push
add
sbb
aaa
add
pop
push
or
sub
cs
sub
adc
cmp
sub
and
pop
pop
push
dec
adc
cmp
xor
cmp
sub
dec
dec
push
pop
or
and
cs
or
pop
cmp
sbb
sbb
pop
pop
cmp
cmp
and
xor
xor
sub
xor
and
push
dec
push
push
daa
sub
sub
dec
dec
push
mov
xor
and
pop
or
adc
sub
pop
cmp
aas
cmp
inc
add
sub
daa
xor
and
pop
pop
pop
add
xor
push
das
cmp
xor
and
cmp
dec
push
aas
cmp
and
or
or
or
je
add
cmp
sub
xor
inc
pop
inc
add
and
das
xor
sub
push
push
xor
and
sub
dec
dec
push
sbb
cmp
sbb
add
pop
pop
adc
xor
inc
pop
adc
xor
xor
cmp
aas
sbb
or
inc
push
dec
add
sub
wrmsr
adc
pop
add
and
add
pcmpgtw
sub
and
js
js
ss
push
push
inc
add
and
or
push
dec
push
or
add
cmp
sbb
pop
and
fs
xor
sub
or
or
xor
sub
jp
imul
push
inc
add
and
xor
add
cmp
and
dec
add
daa
pop
add
pop
add
imul
sbb
inc
pop
inc
add
and
cmp
cmp
push
sub
das
xor
ds
jns
aas
es
push
pop
dec
or
cmp
sidtd
sbb
push
sbb
aas
xor
add
add
cmova
pop
add
xor
adc
cmp
xor
push
inc
push
sbb
xor
adc
je
and
aas
push
and
cmp
adc
cmp
cmp
push
push
inc
add
and
cmp
cmp
cmp
sub
add
push
or
and
and
and
sbb
xor
dec
sbb
add
sub
sbb
gs
cs
aas
sub
imul
sub
inc
push
and
aaa
sub
adc
inc
add
ds
xor
sub
push
push
inc
popa
xor
or
adc
pop
or
and
sub
cs
and
and
pop
pop
push
sbb
xor
ds
xor
push
dec
dec
push
or
sub
and
je
jbe
xor
and
xor
cmp
aas
push
push
inc
push
pop
sub
sbb
and
pop
push
sub
cmp
and
sub
popa
aaa
movups
aaa
sub
sub
push
inc
or
xor
xor
sub
push
dec
push
or
and
sbb
daa
cmp
sbb
and
fs
add
cmp
and
push
dec
dec
adc
and
adc
and
xor
and
inc
pop
push
xor
add
and
es
dec
push
push
or
sub
xor
xor
cmp
fs
arpl
pop
xor
xor
inc
pop
inc
(bad)
xor
sub
inc
pop
pop
adc
sub
add
daa
cmp
push
inc
push
rdpmc
and
cmp
and
xor
inc
popa
fs
sbb
cmp
cmp
inc
pop
add
cmp
add
sub
push
dec
push
inc
adc
and
daa
and
pop
and
sbb
push
push
push
add
es
add
pop
aaa
aaa
push
pop
push
dec
or
and
xor
and
and
and
es
and
sbb
dec
push
add
aas
adc
cmp
adc
xor
adc
cmp
push
adc
add
sbb
push
cmp
or
cmp
xor
dec
inc
(bad)
sub
or
and
xor
inc
adc
cmp
add
cmp
and
adc
fs
or
or
xor
push
dec
push
and
xor
xor
or
ss
sub
xor
push
pop
push
add
add
and
cmp
and
add
arpl
add
xor
and
sub
inc
push
push
add
sub
das
cs
or
inc
push
dec
adc
xor
and
or
pop
or
add
sbb
or
pop
inc
adc
xor
aas
cmp
and
cmp
or
inc
sbb
das
xor
push
pop
push
add
daa
and
sub
aas
dec
das
and
xor
inc
add
sbb
gs
adc
cmp
cmp
cmp
and
daa
xor
xor
dec
dec
pop
xor
cmp
sbb
and
xor
xor
push
adc
das
and
cmp
and
arpl
sbb
xor
sub
pop
ds
xor
sub
sbb
sub
cmp
push
aaa
cmp
add
and
and
adc
inc
popa
fs
or
cmp
sbb
dec
sbb
xor
and
xor
xor
aaa
sub
and
pop
pop
push
dec
adc
aaa
cmp
and
and
push
or
xor
sbb
and
xor
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
mov
push
inc
mov
push
shl
or
mov
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
inc
inc
pop
inc
inc
push
push
inc
inc
je
jle
push
imul
jnp
imul
js
push
push
arpl
push
(bad)
pop
(bad)
push
ficomp
push
loop
xchg
imul
arpl
js
jbe
imul
arpl
fs
jne
jnp
pusha
fidivr
dec
jne
push
mov
pop
inc
cmp
ins
push
shl
jge
pusha
dec
ins
cmc
jo
ins
and
jge
ja
arpl
pusha
(bad)
je
jp
jb
pusha
mov
jno
outs
pop
imul
imul
pop
sar
arpl
jne
bound
imul
popa
jne
jns
jge
adc
leave
ins
jmp
ins
xor
ins
cmp
jle
cmp
dec
mov
outs
fs
imul
sbb
jnp
jno
gs
push
dec
push
arpl
xchg
inc
and
arpl
js
imul
pop
push
movs
pop
lods
push
xchg
pop
jg
dec
ja
imul
int
ret
jo
popa
movs
je
jnp
jnp
je
imul
jne
add
gs
ja
jns
bound
jb
push
outs
push
ja
pop
inc
ss
(bad)
shl
jg
bound
popa
jne
jo
or
outs
out
ins
call
jle
ins
imul
adc
ins
sub
xor
pop
and
push
shl
push
ja
pusha
pop
jns
jp
imul
bnd
jno
jg
bound
ins
mov
push
imul
fdiv
ins
loope
scas
ins
cmp
scas
pop
mov
dec
imul
push
dec
dec
pop
pop
push
ja
xor
je
jle
push
imul
jb
jns
data16
jns
push
fist
pop
mov
push
inc
jno
ins
aaa
jnp
ins
xor
jae
jl
jl
jb
outs
pop
addr16
sub
(bad)
lds
bound
mov
pop
js
inc
ja
push
push
push
xor
inc
pop
outs
(bad)
fisub
jge
pusha
mov
jg
jae
jae
adc
sub
jo
jge
je
push
add
jb
inc
push
inc
js
push
ins
cmps
gs
pop
pop
xor
sbb
push
fdiv
outs
jo
or
jns
jp
imul
pop
jle
arpl
imul
adc
ins
daa
outs
and
jge
jae
push
idiv
pop
rcr
sahf
dec
ins
bound
inc
imul
ins
jae
sbb
outs
aam
fidivr
je
pusha
mov
ja
jns
jno
arpl
ins
arpl
jae
popa
sbb
punpckhbw
pop
sbb
out
pop
out
in
pop
cli
jle
(bad)
xchg
jp
jns
push
scas
jb
jl
popa
pop
outs
outs
jno
jno
sbb
imul
or
ins
sub
ins
sar
pop
clc
pop
stc
dec
retf
dec
iret
imul
ins
lea
push
cbw
jnp
push
mov
inc
addr16
fs
jo
jle
jbe
fs
jne
push
outs
sbb
addr16
cmp
pop
push
push
out
(bad)
push
rcr
js
xor
mov
ins
jbe
push
ja
ja
js
gs
ins
scas
ins
movs
imul
dec
push
inc
je
jp
popa
out
mov
jno
push
test
inc
fld
imul
push
mov
outs
jno
jnp
ins
mov
je
jl
outs
jo
adc
imul
fldenv
(bad)
lock
fcom
pop
movs
push
xchg
pop
mov
mov
pusha
stos
jns
jnp
push
jg
jo
jo
jle
arpl
ins
aas
ins
fild
ins
icebp
ins
jmp
imul
xor
pop
mov
dec
dec
fs
pop
ins
adc
in
std
push
xor
mov
test
jbe
fs
jne
push
outs
and
addr16
outs
fistp
movs
pop
mov
js
mov
jg
jl
ins
dec
js
ja
ja
jns
fs
push
ss
je
outs
cld
jo
outs
jmp
fcomp
pop
lods
dec
mov
and
pop
xor
cld
push
inc
pop
imul
je
jle
push
imul
jnp
imul
loope
loopne
push
push
stc
push
mov
pop
push
push
sbb
push
jl
ins
and
jbe
imul
ret
jl
jb
outs
and
popa
in
arpl
jae
jge
data16
jbe
push
dec
pop
sub
dec
mov
dec
imul
jno
ins
enter
xor
ins
bnd
jb
addr16
push
jae
jge
jne
idiv
jbe
imul
inc
adc
bound
push
jb
ret
imul
bound
jnp
jne
push
iret
gs
cmps
dec
arpl
jge
pop
jle
xor
fs
jne
push
lods
push
mov
mov
nop
ins
inc
fs
imul
ja
add
popa
sbb
jno
jnp
outs
(bad)
ins
repz
jbe
jle
ins
mov
popa
push
imul
add
sub
push
call
jae
outs
lea
outs
stos
ja
jne
fs
push
or
jo
ins
and
popa
jmp
popa
mov
cmps
jge
imul
pop
pop
cs
sub
pusha
sub
imul
(bad)
fdivr
ins
hlt
outs
cmc
jl
jbe
bound
jnp
jae
pusha
pop
jp
jno
outs
outs
push
jno
arpl
arpl
push
pop
or
pop
call
pop
xchg
jl
arpl
jne
arpl
jp
jns
push
sbb
jnp
dec
outs
or
push
push
sar
add
jno
outs
push
inc
popa
in
gs
push
sar
push
imul
gs
or
imul
es
jb
jp
push
fisub
popa
sbb
push
xchg
push
sub
push
lods
pop
jnp
sub
ins
xlat
jnp
ins
cld
jne
jbe
addr16
jae
jl
jl
jb
outs
add
sub
(bad)
hlt
pusha
clc
bound
jne
cmp
sub
jbe
push
repz
stos
inc
mov
outs
push
imul
outs
cmp
jg
ins
pushf
outs
mov
arpl
pusha
or
and
pusha
fstp
jno
ins
sub
jb
pusha
lods
pusha
movs
imul
pop
mov
jae
sar
jle
outs
daa
js
ja
ja
js
gs
ins
sub
dec
(bad)
pop
push
xchg
push
dec
push
inc
je
jnp
pusha
adc
and
push
(bad)
push
pushf
inc
ins
inc
scas
imul
inc
bound
sbb
bound
pusha
leave
jb
js
ins
out
outs
pushf
jnp
jne
jl
outs
arpl
cmp
shl
ins
sub
mov
push
push
cmp
popa
(bad)
pusha
loop
xchg
jp
imul
jo
jo
jle
arpl
imul
lahf
outs
dec
ins
pop
outs
lds
ins
in
jle
jo
imul
imul
pop
neg
dec
mov
cwde
arpl
gs
adc
push
data16
hlt
push
xchg
jb
fisub
jo
jle
jne
jcxz
xchg
imul
ins
sbb
push
jmp
pop
movs
jp
stc
push
dec
iret
pop
push
inc
dec
jb
arpl
jns
jns
ja
push
bound
ja
jae
gs
popw
je
jp
popa
push
jle
pusha
(bad)
add
or
adc
popa
xor
lds
ja
fs
fnsavew
fld
imul
jnp
imul
addr16
arpl
imul
out
mov
pop
sbb
in
ja
imul
jl
or
inc
push
stc
inc
dec
add
pop
imul
addr16
data16
xchg
jp
popa
xchg
jle
pusha
xor
mov
mov
push
mov
push
ja
gs
addr16
jne
jg
imul
jl
jb
jp
pop
push
mov
dec
inc
push
inc
push
dec
js
push
push
arpl
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
push
push
push
inc
jns
push
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
cli
inc
push
aam
push
dec
les
pop
push
int
inc
push
retf
daa
pop
push
ret
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
imul
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
(bad)
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
repnz
pop
push
stos
push
pusha
fs
arpl
gs
inc
push
pop
push
inc
pop
pop
push
gs
inc
inc
mov
inc
push
dec
inc
dec
dec
imul
gs
push
inc
mov
push
pop
push
inc
push
dec
push
push
add
dec
adc
pop
adc
popa
outs
push
arpl
inc
adc
dec
push
pop
pop
inc
adc
add
inc
pop
dec
sbb
push
inc
ja
add
push
outs
push
adc
push
outs
push
adc
inc
push
dec
jmp
cmp
push
ins
ins
pop
dec
popa
gs
inc
popf
pop
push
dec
dec
dec
push
inc
pop
inc
and
add
adc
push
outs
cmp
xor
or
sub
aaa
and
push
pop
xchg
adc
cmp
xor
push
dec
leave
add
cmp
popa
push
or
inc
or
cmp
adc
xor
xor
sub
into
push
das
push
cmp
data16
dec
xor
sub
sbb
cmp
and
xor
outs
inc
and
push
sub
cmp
dec
push
ret
add
sbb
or
sub
dec
add
xor
cmp
add
add
cmp
or
aaa
das
xor
cmp
popa
mov
sbb
sub
ss
inc
repnz
xor
xor
and
inc
pop
neg
and
adc
cmp
int3
push
cmp
and
sub
sub
push
inc
xor
add
pop
daa
or
adc
sub
sub
sbb
and
cmp
ins
getsec
cmp
add
cmp
adc
js
cmp
aas
sub
adc
out
mov
sbb
xchg
les
fmulp
jne
addr16
fs
jp
outs
jno
jne
je
jbe
ja
jne
adc
jb
outs
jns
jo
and
inc
inc
push
dec
push
inc
jnp
jb
jb
imul
jns
fs
gs
addr16
pop
jns
jp
ins
jno
jne
pop
jp
pusha
je
jne
addr16
imul
jp
jo
inc
and
inc
inc
push
dec
push
inc
jnp
adc
ins
push
popa
pop
jo
gs
addr16
sbb
jno
jb
jne
je
jbe
je
jbe
addr16
or
ins
jns
jo
inc
inc
sub
push
dec
push
inc
jnp
jb
jb
push
popa
adc
jne
fs
fs
jp
outs
jno
jne
je
adc
stos
test
scas
lods
jb
ins
jns
jo
inc
inc
mov
mov
nop
pushf
jb
jb
or
bound
mov
push
push
fs
jp
outs
jno
jne
je
jbe
mov
mov
addr16
or
ins
jns
jo
inc
inc
sub
push
dec
mov
xchg
cdq
ins
push
popa
fs
gs
or
jns
jns
outs
jno
push
push
je
jne
add
imul
stos
bound
dec
and
call
jb
push
popa
fs
push
jne
addr16
mov
fwait
(bad)
int
aad
(bad)
fcmovnb
fstp
into
fcmovnb
imul
sbb
bound
mov
dec
mov
sbb
aad
add
cwde
or
retf
add
test
bound
sub
push
dec
sahf
mov
ins
or
bound
test
push
or
jns
mov
jne
je
adc
lea
test
mov
inc
inc
push
sub
jnp
ret
retf
nop
xchg
jne
jns
pop
jo
gs
addr16
sbb
jno
mov
mov
add
imul
cwde
xchg
scas
mov
sub
jnp
(bad)
jb
push
popa
fs
gs
or
jns
mov
jne
je
adc
lods
mov
jns
jns
jo
inc
inc
nop
cwde
xchg
fwait
nop
push
inc
jnp
adc
ins
push
mov
push
push
push
mov
outs
jno
jne
je
jbe
lods
mov
mov
jb
ins
jns
jo
pushf
xchg
test
jnp
jb
stos
mov
mov
bound
adc
jne
mov
jns
jno
adc
push
mov
jo
imul
mov
inc
dec
inc
inc
xor
push
inc
jnp
lods
test
jne
sbb
jo
retf
addr16
fs
jp
mov
xchg
(bad)
call
or
jns
mov
inc
dec
inc
inc
xor
push
inc
jnp
lods
test
jne
sbb
jo
mov
ins
fs
sbb
jno
ffreep
stos
xlat
mov
fstp
ins
jns
jo
inc
inc
nop
cwde
xchg
fwait
nop
push
inc
jnp
adc
ins
push
leave
into
mov
nop
ror
xchg
fst
faddp
rcl
addr16
imul
ins
jns
cdq
int3
repz
clc
jmp
movs
xchg
xchg
cdq
xchg
mov
push
push
push
addr16
jp
or
ja
jbe
je
jne
addr16
imul
sbb
bound
dec
inc
inc
push
sub
jnp
jno
jb
push
popa
addr16
gs
addr16
fs
jp
outs
adc
push
je
push
je
jo
mov
stos
mov
inc
and
inc
inc
push
xchg
mov
jb
or
bound
fs
gs
push
push
addr16
jp
or
ja
jbe
je
jne
addr16
imul
sbb
bound
dec
inc
inc
push
sub
jnp
jno
jb
push
popa
addr16
gs
addr16
fs
jp
outs
adc
push
je
push
je
jo
push
adc
inc
inc
dec
inc
inc
push
dec
ss
jnp
jb
jb
push
popa
fs
gs
add
ins
fs
jp
outs
jno
jne
je
jne
je
jne
addr16
imul
jns
adc
inc
dec
inc
inc
push
dec
push
and
jno
push
popa
fs
gs
or
jns
jns
outs
jno
push
push
je
jne
add
imul
jo
inc
inc
dec
inc
inc
push
dec
push
inc
sbb
jp
pop
and
enter
or
lock
jmp
pop
xor
cmp
retf
rcl
adc
add
sbb
int3
(bad)
mov
xchg
xchg
cld
leave
scas
adc
std
es
xlat
jmp
fwait
popa
out
cwde
adc
sbb
ret
jp
repz
or
jg
dec
repz
pusha
xor
jae
mov
ins
or
xchg
(bad)
repz
repnz
mov
pop
inc
mov
(bad)
(bad)
ins
not
(bad)
mov
push
gs
mov
ins
aam
std
or
retf
cmps
call
jbe
test
jle
pop
adc
sbb
push
stc
or
cld
loope
ss
out
pop
push
dec
push
or
gs
das
xchg
mov
push
das
sub
sar
inc
inc
lahf
xchg
sahf
cs
movs
pop
imul
adc
icebp
leave
in
mov
cmps
adc
pop
or
mov
inc
fsubr
outs
push
pop
mov
xor
jg
xchg
and
imul
add
jne
stos
dec
clc
mov
and
mov
push
popa
mov
mov
dec
shl
cmp
ja
ret
adc
sbb
out
icebp
cs
mov
ror
nop
jo
sub
jg
jae
push
pop
xchg
or
push
(bad)
sub
xlat
push
cmp
cmp
mov
add
jo
sub
iret
fadd
xchg
aam
aaa
mov
push
movs
mov
mov
add
mov
adc
push
aad
fisttp
repz
and
jmp
dec
shl
mov
or
sub
fistp
idiv
sbb
pop
fwait
in
sub
xchg
out
inc
jecxz
xor
xor
sub
in
or
push
test
add
sbb
retfw
ds
xchg
adc
mov
adc
repnz
mov
repnz
retf
call
mov
mov
cmps
pop
push
rcr
hlt
aas
ja
xor
lahf
or
neg
sbb
inc
sbb
fstp
cmps
adc
arpl
pop
mov
mov
popf
mov
out
arpl
xchg
test
push
push
addr16
inc
test
mov
cwde
mov
cmc
pop
cmc
xor
inc
retf
inc
and
add
fiadd
std
fs
xor
fs
dec
cmp
iret
pop
loop
in
fld
pop
test
jmp
test
jae
movs
les
sahf
adc
cmp
lods
dec
mov
or
mov
mov
stc
adc
jbe
add
rcr
pop
dec
or
repnz
sub
ror
sbb
pop
push
call
jo
dec
test
xchg
out
(bad)
stos
cmp
fcom
sti
jo
out
push
inc
pop
sar
inc
ds
(bad)
xchg
mov
out
lds
xlat
mov
dec
mov
mov
(bad)
push
add
lods
sub
rcr
(bad)
push
fxch
lahf
xor
test
(bad)
cld
ret
call
push
aaa
inc
test
inc
add
dec
popa
or
and
fwait
xlat
neg
cmps
mov
mov
test
fld
sbb
mov
dec
cs
dec
out
std
into
push
xchg
jge
xchg
xor
lods
mov
addr16
cmp
pop
dec
xor
cmc
xchg
xor
outs
jmp
xchg
mov
mov
add
(bad)
loop
mov
jle
shr
or
into
dec
cli
fs
or
pop
or
cmp
aaa
into
scas
add
xor
fist
add
mov
out
jae
pop
adc
xlat
sbb
sub
test
sub
mov
into
es
xchg
leave
dec
in
sbb
jmp
push
lods
pop
mov
outs
pop
in
lds
neg
mov
pop
retf
stos
rcl
cmp
clc
pop
pop
xchg
sbb
pop
(bad)
push
das
ins
cwde
iret
mov
dec
jnp
xor
push
cmps
stos
sti
push
xor
out
and
out
push
adc
shr
shl
pop
out
popa
pop
push
sub
mov
stc
push
popa
jb
ins
mov
add
or
sub
pop
xor
pop
sbb
pop
pop
lea
hlt
pop
xchg
xchg
imul
enter
data16
int3
cmp
dec
add
mov
push
push
mul
shr
sahf
rol
popf
outs
pop
mov
cld
xchg
clc
pop
aad
and
inc
shr
push
inc
es
popa
outs
lock
or
push
aad
xchg
imul
pusha
dec
call
xor
push
dec
sti
(bad)
mov
stos
icebp
mov
ror
add
sub
jnp
ins
mov
dec
jnp
leave
push
sub
jl
jecxz
test
mov
lds
jnp
or
jnp
scas
cwde
xor
or
outs
loopne
fistp
ja
out
test
xchg
add
jo
push
or
xchg
pop
das
pop
push
jo
mov
pop
test
xor
push
clc
hlt
mov
jecxz
popf
xchg
fistp
mov
std
sahf
loopne
test
imul
in
inc
(bad)
rep
xchg
and
dec
or
das
bound
and
or
scas
call
inc
and
mov
xchg
lahf
mov
gs
or
call
outs
lds
and
lods
pop
push
sub
jge
push
sub
ins
popf
mov
inc
mov
dec
cwde
dec
xor
rol
pop
cmp
into
icebp
lock
jae
xor
sbb
in
cmp
xor
aaa
add
add
mov
(bad)
lea
mov
inc
dec
or
lock
loopne
lahf
sub
jmp
adc
fnstsw
mov
fimul
push
addr16
xor
mov
fdivr
mov
xor
data16
xlat
sub
pop
push
ss
mov
xchg
lods
adc
dec
fiadd
popf
mov
sub
inc
xchg
loop
mov
scas
jae
mov
mov
pop
scas
arpl
dec
aaa
push
mov
xlat
out
cwde
mov
xchg
div
xchg
ret
xchg
jo
stc
jbe
ds
enter
sbb
rcr
sbb
(bad)
fbld
or
div
sub
pop
push
add
sbb
sub
mov
cmp
shl
or
in
frstor
call
lock
cmp
int
mov
jg
push
mov
pushf
and
push
or
xor
pop
or
mov
xchg
ret
dec
rcr
bswap
xor
add
sbb
ret
mov
movs
fdivr
jae
call
add
and
cmp
sub
aas
and
xchg
ss
les
mov
xor
arpl
jns
push
and
push
retf
sbb
push
call
iret
std
or
push
mov
sti
push
adc
fdiv
dec
sbb
xchg
and
test
pop
(bad)
xor
adc
pop
fbld
or
lahf
pop
popa
jo
jmp
outs
arpl
mov
jbe
xor
test
ror
aam
pusha
mov
int3
cmp
mov
inc
xor
cmp
clts
int3
mov
pop
and
imul
push
stos
(bad)
popaw
sub
ja
scas
cmp
out
and
sbb
xchg
fs
pop
or
mov
ror
xchg
dec
mov
fst
call
xchg
cmc
inc
call
iret
shl
imul
add
mov
mov
xor
cli
mov
out
lds
cs
loopne
je
hlt
shl
out
fs
mov
cmc
rcr
loope
or
(bad)
jl
(bad)
aaa
xchg
ds
rol
mov
cmp
int3
stos
pop
or
add
popa
aaa
(bad)
jg
inc
jecxz
adc
out
mov
cmps
sub
rcr
mov
xor
out
mov
out
push
jle
lahf
add
inc
test
hlt
pop
push
cs
loope
(bad)
sbb
fnsave
test
push
ins
call
out
shl
jbe
sbb
xor
in
and
das
sbb
sbb
into
mov
sbb
in
addr16
jge
hlt
dec
add
pop
(bad)
jmp
or
mov
inc
mov
out
js
xor
push
sbb
mov
cdq
sub
jle
daa
inc
fdivrp
js
imul
cwde
out
aad
arpl
imul
mov
inc
mov
or
xchg
clc
daa
ds
lahf
mov
xchg
sub
mov
(bad)
outs
call
add
add
loope
out
adc
mov
ins
les
mov
mov
pop
xor
and
out
rcr
in
fs
cmp
lods
enter
xchg
pop
inc
or
aaa
cmovp
jo
sbb
pop
dec
adc
pushf
and
jno
movs
not
lods
mov
pop
movs
div
pusha
arpl
adc
mov
repz
jbe
push
mov
cdq
and
fsub
xchg
in
(bad)
(bad)
(bad)
jo
inc
sar
push
xchg
(bad)
or
add
xchg
inc
fcmovnu
mov
shl
scas
push
pop
fbstp
outs
(bad)
push
(bad)
enter
scas
add
mov
and
div
adc
sub
xor
ja
sbb
movs
(bad)
mov
jl
pop
sub
xor
hlt
lds
iret
inc
mov
test
mov
mov
mov
dec
pop
int
aas
xchg
sahf
cld
stc
mov
ffree
aam
mov
jnp
bound
xor
in
pushf
scas
jle
or
jns
mov
pop
shl
push
mov
dec
mov
test
frstor
arpl
stos
xchg
jle
ja
jno
dec
xchg
leave
jmp
sub
mov
mov
call
loope
repnz
fcomp
push
xor
or
lahf
call
es
outs
cmp
rol
mov
xor
adc
adc
retf
pop
imul
jns
push
xchg
jnp
xchg
lods
adc
addr16
xchg
adc
int3
push
jge
dec
mov
push
out
ret
or
mov
xchg
retf
dec
adc
repnz
pop
xchg
jnp
lods
les
sti
mov
cli
int
xchg
fcom
mov
cmps
nop
in
fistp
and
xor
fcom
mov
dec
movs
ins
sbb
fist
cmp
pop
hlt
adc
mov
cmp
lock
daa
aas
lea
dec
xor
jmp
inc
or
clc
fcom
aas
sahf
cmp
xchg
std
push
int3
and
mov
sbb
test
mov
mov
mov
inc
add
jae
into
jmp
cmp
test
ror
xchg
ficom
sbb
jns
pop
push
push
pushf
pop
rcl
cmp
gs
imul
mov
mov
pop
ret
and
(bad)
or
in
adc
mov
fadd
ja
pop
push
add
retf
popf
jecxz
and
inc
jne
jbe
sub
xchg
sbb
ins
bound
(bad)
out
popa
nop
(bad)
cmps
or
inc
mov
mov
dec
std
dec
fwait
retf
push
push
xor
clc
ficom
jg
rcl
and
in
or
shr
sub
in
hlt
adc
in
push
or
or
mov
pop
out
push
mov
xor
test
mov
adc
sar
cmp
arpl
imul
(bad)
mov
nop
leave
jecxz
aad
xchg
mov
stc
sub
mov
jmp
xchg
sub
dec
movs
pop
das
xlat
loop
sahf
pop
imul
jecxz
into
xchg
dec
mov
inc
sbb
pop
sbb
iret
add
es
sahf
mov
pushf
push
(bad)
mov
inc
cmp
and
xchg
push
mov
test
movs
(bad)
or
jne
mov
pop
mov
int3
inc
call
rcr
xor
fidivr
pop
dec
jecxz
jne
jge
cmp
mov
jae
fabs
xchg
pop
mov
(bad)
test
sti
call
jmp
or
test
outs
push
jge
inc
retf
cmp
loopne
push
mov
dec
ret
data16
cmps
lds
into
aas
repz
xchg
mov
or
or
xor
sahf
jle
cmp
jne
xchg
xchg
adc
push
out
dec
ret
mov
cld
icebp
adc
xchg
sbb
repnz
xor
ret
leave
inc
mov
or
xchg
mov
inc
imul
out
add
(bad)
xchg
and
push
push
mov
and
pop
sbb
scas
cmp
push
sahf
inc
sub
jbe
and
pop
rcl
adc
push
int
shl
and
cmp
and
out
adc
jmp
js
mov
adc
jbe
outs
xor
test
pop
inc
es
std
push
lahf
sub
xchg
add
mov
mov
mov
rol
ja
push
sub
stc
mov
dec
retf
xchg
lock
xlat
jns
and
(bad)
(bad)
retf
cmp
mov
arpl
xchg
xchg
xor
and
sar
cmp
push
pushf
cmps
fs
xchg
stc
call
cmp
push
xor
icebp
mov
mov
call
pop
leave
cli
mov
js
adc
shr
jmp
add
push
(bad)
aad
push
sbb
mov
cmp
mov
sub
std
test
retf
dec
inc
addr16
cdq
inc
ins
mov
fimul
fld
test
add
mov
pusha
icebp
cmp
xchg
mov
ss
into
dec
or
adc
std
jp
jbe
test
push
fs
sub
cmps
jmp
xchg
mov
or
lock
vpmullw
jne
hlt
out
cmp
inc
(bad)
dec
mov
jmp
xlat
cmp
es
push
sub
ins
out
jg
mov
in
movs
xchg
add
or
sar
mov
test
xchg
sub
and
retf
cld
sbb
(bad)
lods
shr
cmp
push
call
sbb
cmp
dec
cli
lds
loop
repnz
dec
push
xor
cmp
cli
push
add
in
retf
test
pushf
pop
fistp
fcomi
and
call
test
in
jmp
pushw
retf
jg
add
jno
aam
cmp
cmp
xor
(bad)
mov
ins
stos
fdivr
pop
or
xor
jo
call
fcomp
jp
stc
jmp
mov
sbb
ret
xchg
mov
push
cmp
push
and
shr
scas
cmp
ins
cmp
mov
jp
pusha
pusha
mov
lea
loope
int3
pop
fdivr
clc
push
adc
or
and
cmp
push
fwait
xor
xor
jp
mov
fnsave
sbb
push
push
inc
sbb
xchg
mov
dec
popf
scas
into
adc
sub
movs
arpl
mov
fisubr
dec
xor
loop
jnp
jge
inc
dec
test
pop
xchg
mov
sub
loope
ds
push
ins
dec
mov
movs
add
jl
(bad)
jmp
outs
pop
inc
cli
imul
rol
xchg
sub
ret
fimul
fwait
mov
xchg
mov
int3
cmp
inc
push
cmp
adc
icebp
sub
repnz
cmp
movs
imul
lods
mov
outs
repnz
adc
and
cs
adc
pop
call
test
cmp
mov
shr
out
inc
jl
fld
push
in
jnp
es
fld
mov
mov
add
push
je
movs
sbb
mov
cmps
int
inc
sbb
retf
push
sti
inc
mov
mov
cli
(bad)
push
mov
dec
out
mov
addr16
cmp
outs
int
jp
lods
mov
fs
jg
xchg
int
stos
dec
test
push
bound
sbb
stc
mov
xchg
pop
xor
je
aam
movs
rcr
out
mov
or
dec
xchg
jae
pusha
push
cmp
push
sbb
sbb
and
cli
dec
imul
pop
(bad)
fmul
lods
pop
push
add
adc
push
imul
cmp
push
push
pop
or
cli
xchg
loop
xchg
repz
loop
add
or
jl
pop
inc
sub
xchg
js
mov
pop
or
push
pop
rol
jle
mov
mov
hlt
mov
sbb
rol
scas
lods
out
inc
jmp
movs
xor
adc
fcomp
stos
push
cdq
cmc
cmp
push
sbb
adc
imul
ins
jg
pusha
loope
cmp
push
add
outs
mov
push
in
jecxz
fdivr
cmp
outs
imul
aas
daa
test
leave
out
aaa
retf
test
xlat
or
pusha
sub
sahf
mov
into
call
cmc
fbstp
iret
push
lds
push
out
popa
movs
test
pop
je
cmp
ss
xchg
fist
leave
unpckhps
ss
clc
pop
repz
fidivr
mov
rol
xchg
jo
cdq
xchg
mov
cmps
push
xor
arpl
(bad)
sub
mov
pusha
push
les
xor
jg
xchg
push
(bad)
jae
das
ror
pop
xchg
loope
outs
adc
stos
mov
adc
es
xchg
mov
bound
add
push
jecxz
mov
lock
jmp
sar
push
pop
pop
or
cmp
dec
jl
mov
or
push
adc
ficom
xchg
inc
in
fnstcw
xchg
aad
pusha
jecxz
(bad)
pop
imul
inc
fild
fcmovnb
jb
fild
xchg
xlat
mov
pusha
pop
mov
pop
push
call
out
inc
pop
or
jo
ret
enter
add
mov
mov
ja
outs
(bad)
loopne
dec
xchg
lock
ret
clts
pop
in
inc
pop
mov
rcl
(bad)
and
or
outs
rcr
add
es
or
std
call
lds
je
stos
inc
xor
sbb
popf
mov
adc
mov
int
fwait
inc
leave
and
scas
mov
scas
int3
lods
lock
retf
add
xchg
retf
mov
pop
adc
mov
mov
and
jg
xchg
je
jmp
pop
ss
mov
xchg
cdq
mov
rdtsc
sub
mov
push
retf
or
data16
and
pop
xor
cld
lds
jecxz
fimul
mov
imul
mov
into
leave
neg
mov
push
jnp
outs
mov
push
inc
addr16
dec
dec
js
out
ins
(bad)
xchg
(bad)
sub
(bad)
mov
push
(bad)
mov
and
in
inc
pop
xchg
mov
(bad)
call
mov
sbb
cdq
mov
out
or
mov
mov
pop
aam
or
pushf
jle
fsubrp
scas
cli
add
jecxz
xchg
mov
(bad)
fs
in
mov
repz
data16
mov
(bad)
das
jnp
mov
call
aad
mov
into
out
nop
fst
fld
popa
test
add
js
mov
int3
jne
scas
div
(bad)
jle
push
jecxz
(bad)
mov
or
cmp
xchg
ins
mov
in
jl
(bad)
into
retf
(bad)
fwait
cmp
or
lahf
xchg
or
jns
or
sub
add
sti
inc
and
xchg
les
mov
(bad)
cwde
push
or
dec
push
or
aaa
push
mov
inc
out
jo
cmp
or
ins
fisub
mov
inc
nop
sub
mov
retf
ret
fxch
sub
repz
into
add
sbb
sub
repnz
inc
adc
xchg
fisubr
cmp
adc
or
in
dec
into
push
or
mov
shr
imul
loopne
in
pusha
fsub
mov
bound
lock
pop
inc
dec
scas
jmp
(bad)
mov
inc
jae
cmp
push
aad
sbb
fisttp
inc
stc
cmp
xor
adc
mov
outs
cmp
call
push
dec
inc
aas
pop
popa
popa
cld
jle
and
and
cld
xor
or
aaa
sub
sub
mov
dec
hlt
mov
addr16
sub
icebp
push
jp
and
sbb
push
mov
out
jmp
ret
imul
outs
ins
push
cmc
inc
(bad)
out
frstor
pusha
inc
cmp
in
adc
or
cmps
inc
aaa
fadd
jo
jo
mov
jp
stos
(bad)
and
jo
loop
xchg
sub
out
push
jne
cmp
xchg
dec
movs
sbb
jmp
pop
scas
mov
adc
adc
retf
jae
xchg
push
pop
inc
stc
jl
ds
lods
and
jns
push
dec
out
bound
fcmovu
xchg
rcl
ror
(bad)
mov
mov
push
lods
pop
(bad)
lods
dec
jp
cld
push
cmps
cmp
and
push
shl
out
test
test
ds
jne
xchg
pop
xchg
mov
std
stc
mov
nop
enter
stc
pop
test
pop
stos
fisubr
(bad)
(bad)
vminps
out
lea
jp
pop
sbb
sub
or
loope
loopne
xchg
adc
popa
retf
sbb
je
xor
dec
mov
jecxz
inc
dec
je
xor
loop
(bad)
fcmovne
sti
xchg
sbb
(bad)
aam
dec
loop
inc
(bad)
jecxz
sub
mov
or
jg
mov
and
cs
cmp
xchg
pop
test
repz
jns
sub
test
call
and
mov
cwde
bound
xor
mov
push
mov
scas
push
jae
pop
jl
pusha
mov
jg
sbb
scas
cmps
jbe
leave
jb
push
inc
inc
(bad)
enter
xchg
ja
add
dec
ror
xchg
or
jne
xor
add
dec
sub
add
xchg
push
outs
xchg
icebp
or
jne
call
mov
cli
dec
cmps
outs
lds
inc
fs
scas
fdiv
sub
cmp
in
pusha
mov
fs
imul
clc
lea
mov
inc
pushf
pop
mov
in
or
(bad)
scas
fwait
nop
test
pop
push
pop
mov
sahf
jnp
rol
pop
call
(bad)
arpl
sahf
les
leave
inc
test
xlat
sub
pop
rol
sub
sub
xor
add
sbb
xchg
lods
ins
(bad)
add
repz
pop
in
iret
popf
xchg
stos
cmp
inc
sub
cmps
cmc
mov
mov
push
mov
clc
test
add
stos
mov
les
out
out
push
or
mov
jl
dec
out
mov
jns
mov
movs
lds
xor
pop
sbb
stos
add
mov
mov
adc
icebp
jecxz
fxtract
std
sub
xchg
sbb
mov
mov
jp
mov
test
ss
cmp
xor
sbb
scas
mov
stc
shl
out
retf
lods
push
or
or
repz
pop
mov
inc
lods
fs
adc
push
lahf
mov
cmp
fsubr
fld
mov
xchg
jecxz
outs
push
jg
sub
in
imul
cwde
jno
stos
sub
mov
xor
popa
xor
sbb
dec
sahf
loop
jo
ret
or
push
mov
fcmovnb
dec
lock
shl
add
cld
and
xchg
test
mov
retf
rcr
sar
test
mov
sub
int3
dec
ja
out
push
jae
rol
fisub
xlat
mov
and
rcl
pop
stc
loope
mov
pusha
push
mov
retf
and
(bad)
inc
or
leave
fdivrp
pop
dec
adc
xor
fisubr
push
aad
outs
xor
out
test
pop
dec
enter
mov
pop
icebp
jns
ror
lods
adc
cmps
ss
xor
xor
and
nop
call
loope
(bad)
jno
sub
call
push
aas
movs
scas
stos
cmps
xor
inc
fwait
stos
push
sub
outs
loop
xor
push
sub
pop
icebp
test
int3
add
and
(bad)
repnz
lea
movs
fwait
fwait
jo
in
cmps
repz
xchg
cdq
fcom
sbb
popa
rcl
sub
out
cmps
int
jbe
sahf
in
inc
inc
call
xchg
add
dec
movs
lock
fild
mov
fadd
aam
shr
out
loop
retf
pop
(bad)
fild
lock
mov
into
jns
xchg
cmp
sub
jp
ja
push
adc
sbb
mov
xor
mov
cwde
(bad)
loope
push
aaa
bound
jnp
mov
jae
into
push
ins
in
cdq
inc
imul
pop
inc
mov
ret
push
(bad)
and
call
pop
jns
div
mov
imul
movs
stc
lods
mov
gs
inc
(bad)
es
add
add
ds
into
pushf
mov
xchg
data16
jmp
jne
popa
dec
adc
xor
sar
add
fsub
mov
in
ret
arpl
inc
scas
jne
daa
dec
adc
lock
inc
cmp
mov
xchg
xor
loopne
inc
mov
xchg
rcr
ror
outs
sar
stc
xlat
movs
mov
pop
dec
call
int
pop
or
pop
mov
jnp
ss
(bad)
jmp
aam
inc
loop
cmp
out
and
loopne
jle
(bad)
mov
inc
dec
fcmovne
mov
mov
loop
xlat
div
nop
xchg
nop
bound
cmp
and
fst
inc
and
add
idiv
(bad)
cmps
add
shl
push
jns
aas
test
jmp
pop
loop
or
fmulp
icebp
pusha
dec
push
sar
xchg
mov
and
cmp
push
icebp
xchg
and
xchg
cmp
jae
outs
and
paddq
jecxz
or
(bad)
adc
adc
(bad)
(bad)
(bad)
sbb
xor
popf
ss
push
scas
(bad)
into
cli
mov
jae
add
sti
jno
cmp
jmp
push
or
mov
fnsave
and
mov
sbb
adc
jnp
cmp
cmc
xor
nop
mov
inc
int3
xchg
mov
or
dec
adc
out
mov
dec
rcr
(bad)
jbe
sti
xor
daa
pop
xchg
pop
sub
adc
dec
stos
popf
pop
mov
ficomp
xchg
xchg
push
or
jp
push
dec
je
scas
pop
adc
push
push
mov
call
mov
pop
xor
inc
sbb
xor
push
inc
pop
sbb
pop
in
and
cli
cwde
mov
jecxz
aam
sub
pushf
mov
jle
cdq
jmp
jbe
inc
pusha
(bad)
jae
pop
call
adc
ja
push
daa
call
aad
sub
test
(bad)
out
and
imul
xor
cs
push
xchg
lods
rcr
push
out
mov
xchg
and
dec
outs
cmps
sub
cmp
and
push
sub
(bad)
or
add
mov
mov
retf
jns
inc
fwait
sbb
push
xor
mov
mov
pop
mov
and
movs
adc
push
popf
and
push
push
push
mov
push
pop
fmul
out
push
add
push
sahf
movs
adc
jecxz
and
xchg
bound
retf
xchg
pop
(bad)
lds
sub
lea
sub
push
xchg
cmp
pmulhw
(bad)
(bad)
fdivr
repnz
out
in
mov
xor
into
ins
push
(bad)
xchg
fs
mov
and
outs
(bad)
mov
in
ins
scas
ins
push
adc
sbb
call
mov
jns
jle
add
jmp
dec
cmp
int
sub
jl
mov
fwait
movs
pop
cli
fwait
xchg
cs
cmp
aas
imul
mov
mov
stc
call
js
mov
popf
dec
pop
push
xlat
hlt
aas
ret
retf
lea
push
enter
mov
cmp
mov
sahf
pop
imul
xchg
inc
add
push
or
fs
movs
pop
dec
jbe
add
and
jns
lahf
lahf
cmp
mov
and
mov
or
sbb
sub
mov
repnz
pop
imul
scas
push
mov
xor
mov
or
or
xor
xor
mov
ds
adc
sub
repnz
mov
dec
les
fstp
push
adc
ja
mov
and
add
out
push
or
aaa
sbb
std
cld
dec
call
jne
and
pop
das
sub
mov
push
out
mov
fidiv
sbb
add
inc
in
outs
adc
push
retf
pop
iret
xchg
jp
push
shl
movzx
fistp
int3
jb
mov
cmps
(bad)
xor
cs
aaa
xchg
sbb
cmp
xor
das
mov
daa
adc
xor
aad
fst
push
bound
fcomp
or
pop
sub
lahf
imul
jb
inc
aad
shr
dec
inc
imul
daa
and
sbb
cmp
xchg
scas
(bad)
data16
mov
aad
sub
adc
pop
shl
movs
mov
and
inc
and
pop
ror
imul
mov
or
mov
shl
loop
adc
add
fnsave
jecxz
imul
push
mov
dec
pop
int3
data16
ret
scas
sub
lock
popf
ret
mov
xor
mov
jmp
jb
retf
(bad)
xor
retf
mov
int
xor
xchg
into
out
mov
mov
(bad)
pop
pop
mov
mov
int3
cmp
loop
test
mov
pop
inc
mov
adc
dec
call
test
fs
pop
cld
gs
fistp
fadd
push
addr16
into
xchg
jecxz
fwait
adc
sbb
push
xchg
sub
add
hlt
inc
sbb
popa
push
cwde
jb
scas
mov
push
mov
add
and
mov
sbb
xchg
pop
gs
and
sti
mov
adc
push
test
mov
push
ss
call
(bad)
loope
and
icebp
pop
sub
arpl
jge
mov
aas
jp
je
xor
or
jae
add
stos
(bad)
push
and
movs
or
sub
(bad)
out
fild
xchg
ins
out
mov
ret
nop
jmp
mov
dec
sbb
xchg
sbb
add
addr16
pop
sub
or
and
(bad)
in
pop
xchg
lahf
dec
rcl
jecxz
ins
push
fwait
std
sub
adc
int
or
in
cmp
sub
xor
cmp
dec
test
jle
lahf
add
jnp
sar
xlat
and
sub
outs
imul
mul
mov
aaa
dec
add
aaa
std
pop
idiv
xchg
leave
xchg
push
sub
rol
(bad)
lods
mov
mov
cmp
lods
loop
xchg
(bad)
int3
scas
into
movs
faddp
adc
xchg
in
ins
aaa
leave
sbb
sbb
call
data16
inc
mov
jmp
repz
xchg
scas
enter
jb
inc
xchg
ds
fs
cli
in
sbb
pop
xor
and
outs
rcr
add
mov
add
sbb
cwde
push
shl
sub
sbb
jmp
mov
sahf
lahf
mov
pop
lea
shr
mov
bound
lock
xor
push
movs
pusha
jg
out
data16
push
ret
jg
add
call
in
test
mov
adc
cmps
ret
imul
sahf
js
aas
hlt
(bad)
dec
shl
xor
lods
shl
daa
add
lods
mov
fs
pop
or
xchg
mov
mov
(bad)
jmp
xchg
imul
mov
adc
adc
mov
mov
jo
push
sbb
cmps
inc
ja
pop
clc
push
add
iret
cli
inc
inc
aam
jno
test
xchg
dec
inc
jmp
dec
dec
call
mov
enter
mov
xchg
test
cmp
rcl
pop
ja
fstp
ss
imul
scas
mov
mov
test
jae
and
hlt
xor
xor
push
bound
(bad)
fisttp
pop
and
int
hlt
mov
inc
dec
jmp
data16
aam
mov
(bad)
aaa
and
vmread
retf
and
shl
xchg
lea
inc
lock
aaa
jecxz
lahf
dec
push
dec
das
push
test
push
call
scas
pop
mov
cwde
adc
pop
mov
add
push
jo
dec
xor
stc
pop
dec
and
xor
and
mov
je
push
xchg
enter
jle
mov
push
popf
xchg
push
sub
mov
inc
and
push
xor
idiv
popf
jb
les
daa
fist
mov
jle
mov
cs
jnp
mov
add
popf
push
ret
push
cmc
imul
les
push
xchg
mov
or
aam
loop
cs
sub
mov
imul
lea
and
lods
(bad)
call
call
pop
mov
popa
mov
in
and
inc
sub
mov
xor
pop
and
test
loop
sbb
mov
enter
inc
jb
(bad)
adc
pop
xor
movs
mov
dec
ffree
mov
mov
pop
sahf
adc
jo
add
jae
lea
ins
sbb
ror
push
lahf
sub
dec
(bad)
out
jecxz
ret
mov
push
mov
bound
(bad)
mov
lds
(bad)
cdq
pop
and
popa
cmp
fst
sar
jmp
pop
aam
lea
push
pop
repnz
mov
inc
or
mov
lods
rol
shl
dec
mov
pop
(bad)
(bad)
mov
fimul
inc
test
lock
mov
pop
call
pusha
push
add
cmp
mov
in
mov
neg
dec
das
es
lods
dec
push
cs
xor
xchg
mov
loopne
fwait
iret
shl
hlt
rcl
adc
pop
jb
cmp
movs
sub
sub
xchg
in
adc
and
stos
into
bound
or
mov
inc
vpaddw
jne
aaa
xchg
sub
xchg
push
mov
fisttp
dec
data16
jo
in
push
je
lods
push
xor
movs
jg
or
sbb
scas
push
jecxz
das
fild
jno
jmp
mov
jnp
adc
inc
mov
or
sti
xor
ret
jmp
push
shl
jge
ins
dec
jp
pop
data16
pop
cmp
jg
adc
(bad)
mov
pusha
mov
imul
xchg
fcomp
cmp
hlt
inc
jo
sbb
push
scas
dec
inc
fxch
ins
ret
mov
mov
and
lods
dec
test
jae
mov
mov
mov
loopne
fwait
out
sub
hlt
fnstenv
mov
adc
js
cmp
mov
ds
sahf
ds
adc
xchg
xor
inc
add
into
pop
xchg
aas
push
mov
ret
cmp
ins
dec
mov
and
sti
cwde
aaa
jp
cmps
js
out
xor
iret
xlat
lods
imul
gs
cli
in
call
or
outs
loop
out
add
aad
ins
retf
push
push
sbb
loop
cmp
(bad)
jle
cmp
enter
aad
inc
add
sub
loop
cmp
xor
lahf
add
adc
xor
movs
mov
jnp
sbb
into
lahf
jno
in
xor
add
jne
in
add
jo
mov
xor
stos
adc
cmp
jnp
add
pop
nop
pop
pop
adc
loopne
pop
stos
cwde
push
xchg
sti
cwde
daa
mov
lea
leave
and
call
jmp
test
scas
add
cwde
les
jmp
push
jmp
jo
push
inc
or
add
ror
test
xchg
call
xor
dec
fimul
call
cmps
es
jmp
jg
rcr
pop
push
pop
inc
add
adc
mov
cmp
xor
pop
sub
scas
pop
inc
loope
clc
cmp
fnstcw
jmp
(bad)
mov
sbb
cwde
shl
pop
repz
fdiv
push
out
cli
cmps
rol
lea
std
jnp
rcr
test
fs
aam
push
sbb
das
mov
sub
and
mov
push
sti
push
sbb
push
mov
xchg
cmps
push
mov
add
mov
pop
cmp
cwde
jae
cmps
std
fsub
out
enter
retf
les
cmp
mov
adc
or
push
mov
jp
sub
mov
push
shl
repz
dec
xchg
mov
clc
loopne
(bad)
movs
fdivr
inc
std
sti
pop
rcl
cli
pushf
pushf
sbb
pop
std
sbb
fsubr
and
xor
stos
inc
test
push
pop
mov
sub
adc
cli
dec
xor
xchg
movs
leave
and
rcl
aaa
push
iret
fs
xor
mov
mov
push
mov
xor
aam
jb
inc
cmp
mov
sbb
aad
sahf
test
cmp
mov
push
adc
add
repz
out
or
lds
dec
shr
xchg
inc
fidivr
sbb
pop
loop
or
or
jno
adc
pop
pusha
jecxz
xlat
cli
mov
sub
or
add
mov
inc
and
inc
cmps
mov
cld
inc
clc
dec
outs
shr
jg
loope
or
xor
fild
call
mov
inc
inc
pushf
outs
adc
mov
jge
popa
add
dec
add
outs
and
cmp
clc
add
pop
jb
(bad)
xor
xor
or
sbb
push
inc
data16
out
ret
call
clc
jecxz
or
xor
int
mov
outs
imul
dec
mov
add
push
dec
cmp
lds
jbe
test
inc
sub
push
xchg
pop
sub
mov
loopne
cmove
push
ja
cmp
sti
push
sbb
xchg
out
outs
or
mov
ja
test
dec
push
push
out
jp
sub
xor
add
fld
mov
or
push
ss
pop
cmps
inc
in
xchg
sbb
mov
jno
push
test
outs
adc
lahf
iret
inc
cwde
xchg
loop
push
mov
pop
jle
dec
mov
push
mov
icebp
dec
and
dec
rol
mov
cs
call
in
ret
jl
mov
mov
pop
neg
popf
sti
mov
adc
jae
in
ret
mov
sub
ja
mov
jo
xchg
dec
inc
xor
outs
cmp
leave
aad
mov
add
aaa
and
xchg
mov
add
mov
mov
movs
or
frstor
push
jo
xchg
sbb
ins
and
cmc
adc
int3
in
imul
test
mov
add
out
ret
jno
je
test
loop
push
and
mov
loope
stos
pop
fstp
out
icebp
leave
daa
aam
arpl
push
push
cmp
xchg
dec
push
dec
adc
cld
out
inc
jo
and
mov
adc
mov
repnz
dec
ror
in
xchg
loopne
pop
das
jp
into
icebp
sbb
adc
test
pop
cmp
fst
mov
and
sub
adc
mov
xchg
sbb
inc
repnz
in
cs
pop
shl
and
mov
add
daa
outs
into
pop
sbb
jp
inc
stc
(bad)
push
loope
dec
jmp
pop
mov
xchg
mov
push
jle
loopne
fcmovu
mov
fiadd
mov
xchg
xor
out
retf
into
pop
(bad)
in
inc
add
aad
fucomip
ins
inc
mov
jae
inc
popa
mov
lock
mov
mov
ja
pushf
lds
icebp
pop
xrelease
jb
(bad)
outs
int
and
aam
sbb
sbb
and
inc
inc
add
data16
xchg
div
jle
outs
cld
pop
call
jle
adc
test
fisub
fbld
ds
mov
addr16
cmc
and
mov
lock
sub
lds
add
popa
pop
imul
(bad)
xlat
jg
sbb
mov
sar
push
test
cmps
retf
mov
push
std
sub
enter
inc
cli
cmp
test
inc
pop
cdq
push
or
loope
jne
and
shl
xchg
xchg
mov
leave
and
call
stos
mov
or
enter
les
add
jae
mov
jmp
fwait
adc
cmp
mov
in
jle
fisub
and
pop
hlt
test
xchg
or
shl
and
inc
mov
int3
rol
in
in
xor
popa
inc
mov
aad
push
push
dec
sbb
rol
mov
mov
cmps
push
sbb
jg
inc
jo
sbb
xor
xchg
movs
and
mov
or
add
pop
mov
mov
ficom
arpl
ret
pop
or
xchg
loopne
mov
aad
sub
scas
and
ds
ficom
and
ss
xchg
xchg
retf
xor
mov
mov
mov
outs
stos
stos
or
fistp
sbb
inc
inc
sbb
jle
shr
adc
and
xchg
test
into
ret
add
cmp
xlat
enter
cli
rol
ss
push
adc
stc
xor
or
cdq
lea
add
jg
mov
stos
cmp
out
lods
in
aaa
jns
xchg
cwde
inc
retf
add
mov
sbb
inc
sti
and
adc
jecxz
and
cld
sub
dec
ret
in
add
popf
xchg
dec
(bad)
ds
push
jno
sub
sbb
and
push
aas
fnstenv
cdq
retf
scas
clc
stc
test
lods
mov
mov
loop
and
test
jg
dec
in
stos
push
mov
ret
rol
sub
jb
or
(bad)
loope
xor
cmp
adc
gs
fidiv
call
test
push
movs
lahf
mov
jmp
jae
xor
jne
call
call
pusha
jge
fsin
repnz
into
lods
mov
add
mov
sub
push
lods
(bad)
dec
or
jne
mov
mov
mov
xor
and
jae
sub
cmc
add
mov
sbb
sub
mov
add
fnstsw
sbb
mov
mov
pop
aaa
pop
adc
fild
push
jo
addr16
mov
cmps
sub
jne
pop
mov
lahf
and
sub
mov
call
nop
add
push
not
xchg
jbe
dec
pushf
or
sub
and
ror
test
add
or
pop
rcr
fsubr
xchg
mov
(bad)
ds
or
(bad)
hlt
and
inc
jp
jecxz
jp
xchg
sbb
sbb
dec
repnz
sahf
cs
test
sub
mov
into
xchg
test
int3
retf
inc
and
pop
pop
push
cli
add
jo
cli
lods
dec
pop
pop
(bad)
(bad)
lock
sti
sahf
dec
xchg
pop
out
inc
dec
add
inc
cmp
(bad)
sub
les
mov
scas
lds
cld
aam
outs
aas
scas
mov
dec
aas
pop
jo
sbb
movs
les
icebp
push
mov
mov
add
in
(bad)
lock
icebp
jg
mov
fistp
sbb
clc
test
xchg
call
mov
cmp
rcr
push
jae
mov
inc
jnp
push
pop
cmp
outs
lods
mov
and
adc
pop
xchg
and
cmc
jnp
(bad)
mov
jno
fsub
jb
adc
out
jbe
dec
add
mov
sub
jp
call
push
xor
jecxz
push
sbb
out
daa
xchg
inc
xchg
jmp
pusha
icebp
push
fmul
lods
cmp
xor
pop
(bad)
int
cmps
fs
add
daa
mov
in
int
ins
xchg
shr
push
sbb
and
adc
or
dec
fistp
aam
cmp
pop
adc
mov
adc
pop
pushf
xor
fistp
(bad)
cwde
sbb
pop
dec
sub
gs
pop
mov
out
and
inc
lea
xchg
bound
add
lahf
das
mov
xchg
mov
xchg
mov
les
jne
mov
sub
clc
and
or
jecxz
pop
jmp
and
pop
cmp
sub
cdq
sub
andps
cmp
xor
imul
cmp
sub
push
jecxz
adc
mov
daa
(bad)
loop
dec
jp
xchg
test
mov
inc
cmps
dec
sti
mov
sahf
fisub
sub
test
imul
lods
imul
sub
test
(bad)
and
jl
sub
inc
inc
aaa
cdq
das
cdq
sti
mov
push
cmps
sti
pushf
adc
sub
aaa
mov
add
fwait
mov
and
ret
cmp
scas
call
and
sar
xor
adc
out
js
and
add
in
lods
fimul
lds
add
xor
push
mov
add
inc
jmp
fistp
das
or
je
sub
or
(bad)
es
jmp
call
fnstsw
js
loopne
mov
ss
mov
fmul
test
out
sub
pop
loop
ret
pop
pop
fidiv
push
xor
mov
fdivr
out
into
push
jp
xchg
das
or
or
push
mov
cld
aaa
loope
icebp
cli
fwait
call
mov
adc
test
cmc
push
xchg
pushf
xchg
iret
sbb
jl
shr
ffreep
cmp
pop
mov
test
icebp
mov
mov
and
ins
adc
sbb
mov
(bad)
jg
jge
stos
sbb
arpl
jo
stos
pop
stos
pop
retf
sahf
pop
pop
and
ficom
es
fcomp
mov
mov
repnz
imul
retf
mov
(bad)
cmps
inc
xor
ja
mov
xchg
or
xchg
sub
mov
or
jae
or
inc
jnp
test
or
test
adc
movs
call
rcl
adc
mov
gs
dec
aam
fld
fwait
mov
push
adc
inc
and
mov
pop
mov
lods
dec
xor
push
aam
movs
clc
icebp
mov
add
or
rol
lds
ss
aad
pop
in
outs
fisubr
cmp
cmp
inc
fimul
inc
call
test
xor
loop
test
test
push
mov
cmovo
xchg
mov
imul
outs
jnp
cs
movs
mov
adc
cmp
xlat
cmp
daa
lods
push
or
daa
fild
test
xchg
or
out
xchg
fild
mov
(bad)
pop
or
push
sbb
cmp
aam
mov
adc
leave
jmp
dec
inc
pop
mov
mov
sbb
inc
mov
out
pop
mov
lahf
sub
jmp
mov
std
mov
mov
daa
push
call
and
push
dec
stc
shl
sar
or
adc
lds
fsub
inc
jl
in
push
outs
lock
push
cmp
or
jo
xor
inc
mov
mov
cmp
adc
or
jo
cmps
sub
js
and
leave
in
inc
and
pusha
jno
inc
aaa
dec
repnz
dec
dec
imul
mov
fs
and
xchg
mov
lods
out
cmps
leave
test
adc
cmps
xor
sub
xchg
pop
fimul
ins
cmp
dec
xchg
data16
fisubr
and
or
add
jg
loopne
mov
pushf
or
pop
sbb
fninit
in
arpl
sub
xor
fadd
jl
ds
ror
(bad)
xchg
mov
retf
dec
dec
xor
sahf
cmp
loop
dec
pop
cdq
lods
fwait
jns
ror
popa
leave
movs
aaa
ins
cmp
mov
mov
xchg
cwde
mov
xor
mov
ret
jmp
xchg
dec
jecxz
jo
pushf
stos
mov
movs
xchg
in
sub
(bad)
in
pop
push
mov
enter
les
push
jae
mov
xor
call
push
mov
loopne
mov
add
in
dec
lahf
cmp
push
dec
mov
sbb
sbb
push
leave
jae
sub
adc
mov
mov
inc
sub
xchg
pop
mov
mov
inc
sbb
jne
pushf
stos
mov
into
test
fisubr
xchg
loopne
jnp
ss
inc
mov
loope
jmp
xor
mov
inc
inc
dec
mov
push
daa
in
add
pop
push
jmp
xor
ins
sub
ret
out
loope
out
repz
mov
call
outs
retf
xchg
mov
dec
lds
cmp
pop
or
inc
fisubr
nop
jbe
sub
push
lea
and
call
getsec
nop
fs
inc
push
ins
adc
inc
xchg
fdivrp
pop
pop
pop
lea
or
and
adc
bnd
and
mov
and
jecxz
fsubr
mov
std
stos
mov
stos
fldenv
scas
out
or
shr
(bad)
sbb
xchg
and
xor
inc
pop
data16
cli
data16
js
mov
repz
pop
lock
test
call
jo
jb
jb
dec
ja
xchg
std
daa
xor
or
dec
daa
sbb
call
js
mov
or
jg
jns
jmp
jge
mov
(bad)
stos
adc
mov
jo
and
(bad)
push
sar
mov
sar
sbb
pop
push
repz
push
or
sbb
clc
sti
(bad)
and
lock
mov
xchg
pop
icebp
mov
jmp
mov
push
out
jle
imul
sbb
outs
fwait
es
out
and
dec
(bad)
push
pop
retf
pop
pop
xchg
mov
daa
jno
stc
sbb
add
retf
xchg
push
xchg
mov
xchg
ror
fisttp
rcr
sbb
push
push
sub
into
sbb
dec
mov
outs
jmp
mov
fist
pop
mov
stc
aaa
hlt
scas
arpl
fcmove
mov
xchg
xchg
pop
dec
sub
dec
movs
jg
aad
cmp
test
push
jnp
and
(bad)
cs
mov
aad
fist
jp
push
mov
fcomp
jmp
in
push
xlat
retf
loopne
mov
fsubr
pop
aam
bound
repnz
daa
scas
outs
sbb
sbb
test
xor
aad
sub
add
loope
shl
jp
arpl
xor
jae
mov
imul
hlt
add
jbe
pop
(bad)
mov
test
mov
push
push
jge
jge
imul
gs
push
pushf
jb
ret
aam
imul
sbb
fmul
rcr
dec
(bad)
or
pop
outs
or
sti
push
out
sub
jge
icebp
push
out
add
inc
cmp
and
cmp
retf
push
add
(bad)
xchg
imul
pop
in
adc
iret
movs
ss
cmp
ret
pushf
dec
dec
inc
sbb
arpl
inc
mov
call
std
and
shr
test
dec
add
dec
sub
mov
or
xchg
dec
sbb
call
add
sub
jle
in
nop
lock
mov
idiv
inc
adc
in
or
sti
cmp
leave
mov
ja
jp
aam
leave
sbb
pop
scas
push
sbb
xor
int
mov
mov
ins
sbb
imul
pop
popf
jae
cmps
sub
cwde
and
das
adc
js
mov
adc
pop
inc
or
dec
test
dec
cmp
push
call
adc
stos
(bad)
in
scas
xor
cwde
scas
push
xchg
fs
test
scas
jmp
fucomp
out
inc
mov
jbe
sbb
add
test
adc
mov
imul
cmp
mov
xor
test
mov
xor
xchg
shl
pop
cli
xchg
dec
pop
mov
or
inc
and
jle
rep
out
mov
lea
adc
icebp
inc
loop
sti
dec
(bad)
xchg
test
dec
loopne
sbb
sar
test
jnp
inc
inc
mov
mov
push
jnp
adc
nop
fild
hlt
ins
in
jp
inc
stos
aad
into
sbb
dec
scas
add
stc
adc
pop
mov
mov
or
mov
jmp
mov
pop
and
dec
inc
loope
cmp
shl
sub
sbb
xchg
out
int
ret
lds
jne
jns
push
inc
sub
cmp
in
aaa
int
lahf
xchg
sbb
call
loopne
jge
dec
jb
repnz
adc
retf
(bad)
into
and
jb
sub
xor
out
or
inc
daa
retf
out
ss
adc
mov
jae
cmp
loope
or
(bad)
loop
cmp
adc
unpcklps
mov
add
adc
xor
je
sub
bound
loopne
xor
std
pop
test
xchg
sub
dec
jecxz
add
push
in
push
adc
push
sbb
bound
rol
fst
sbb
outs
aas
xchg
lods
xor
je
mov
dec
jo
fild
(bad)
mov
cmc
sub
xchg
mov
push
inc
push
cmc
ffree
(bad)
and
sbb
jb
fisttp
sbb
xchg
(bad)
ret
mov
in
in
jge
add
sahf
icebp
sbb
scas
inc
outs
sbb
mov
imul
fadd
imul
movs
lods
call
std
rcl
jbe
dec
or
sub
popa
shl
inc
mov
fwait
retf
(bad)
mov
daa
enter
test
sbb
pop
pop
inc
jo
icebp
mov
mov
mov
xlat
push
ds
mov
pop
div
scas
or
aas
and
add
fstp
or
push
aas
xor
mov
fsubr
sar
jbe
iret
icebp
gs
sbb
adc
repz
clc
icebp
aas
popa
mov
lods
push
loop
jb
cmp
nop
(bad)
packuswb
jp
sub
and
pop
inc
(bad)
out
sub
(bad)
int3
inc
movs
out
jmp
cmp
sahf
movs
fs
ins
sbb
mov
bound
or
or
sbb
into
neg
mov
retf
rcr
and
shl
frstor
gs
mov
dec
out
or
mov
sub
fnsave
sbb
mov
cmps
fwait
inc
movs
jo
in
popf
mov
es
sbb
test
jno
retf
mov
bound
inc
jecxz
scas
fwait
rcl
repnz
cdq
or
push
pop
cmp
shl
cmp
ror
mov
repz
aad
add
jl
dec
cmps
jmp
mov
das
call
xchg
daa
inc
inc
ins
shl
outs
(bad)
nop
push
cs
or
adc
adc
out
bound
pop
jp
cmp
xor
repz
inc
xor
dec
xchg
mov
add
scas
push
inc
mov
add
imul
sar
jae
or
mov
sub
mov
add
fbld
shl
aas
out
aaa
int3
cdq
dec
cmps
nop
cdq
push
xor
inc
aaa
mov
movs
cmp
adc
adc
mov
adc
mov
loop
xor
push
lds
fidiv
es
push
lea
pop
fist
or
or
cwde
(bad)
(bad)
jmp
add
fisubr
pop
and
sbb
ins
and
cmp
cdq
inc
inc
dec
pop
fisub
mov
(bad)
rcr
fwait
test
loop
mov
std
ror
cmc
cdq
cs
hlt
ins
mov
inc
jns
addr16
xchg
scas
sbb
cli
ins
sbb
scas
push
cli
lss
sahf
cdq
cmps
sbb
add
pop
dec
cli
scas
sahf
or
leave
add
js
adc
mov
(bad)
rol
mov
xor
loope
das
stos
outs
packssdw
mov
leave
mov
xchg
(bad)
mov
(bad)
stos
mov
mov
stos
cmp
xor
lds
add
adc
fwait
mov
out
xor
test
cld
pop
int
sub
cli
retf
jns
cwde
sub
dec
movs
ins
int
imul
bound
jno
sar
enter
scas
int
jle
jns
add
in
dec
fstp
bound
(bad)
add
test
repnz
outs
sub
inc
lods
cmp
adc
ret
enter
loopne
out
iret
adc
mov
jg
mov
mov
dec
fidivr
xchg
dec
lods
jnp
aam
and
loopne
pop
test
xor
cmp
imul
pop
cmc
enter
mov
push
inc
aad
movs
fisttp
ror
ja
dec
mov
inc
ret
push
sbb
or
int3
xor
shl
sbb
sahf
jl
pop
pop
sbb
scas
inc
jnp
jg
add
mov
push
pop
scas
mov
fsubr
repnz
push
cld
push
repz
xchg
xor
or
jmp
cs
mov
jecxz
mov
jo
repz
sub
in
cmps
or
test
movs
pop
stc
adc
fsub
scas
xchg
sbb
mov
inc
push
stc
mov
outs
je
jmp
sub
cmp
sahf
aas
sbb
and
mov
sar
hlt
push
mov
sbb
or
push
icebp
scas
ss
test
lock
xor
mov
adc
jp
je
popa
push
in
add
add
dec
cmps
jbe
call
and
icebp
movs
(bad)
int3
sbb
sub
stc
jp
dec
adc
cmp
xor
jne
sbb
into
jbe
mov
ins
cmp
stos
jbe
iret
xchg
(bad)
adc
adc
inc
nop
sub
pushw
ds
or
mov
stos
xor
or
xlat
mov
loope
inc
fdivr
mov
xchg
ficomp
sub
out
add
mov
sub
cld
add
repz
pop
test
fs
jo
dec
call
jg
or
mov
ret
dec
or
inc
and
test
add
pop
repz
out
outs
jmp
imul
mov
scas
adc
int
mov
inc
dec
in
xor
and
aam
mov
das
dec
je
in
add
dec
mov
xchg
loopne
push
pandn
adc
dec
in
stc
test
jmp
dec
sbb
dec
mov
xchg
push
aad
push
xor
pop
sub
test
and
repnz
dec
jp
loope
cwde
push
and
fisubr
add
mov
push
retf
iret
call
pop
xchg
cmp
cli
dec
inc
mov
ds
or
lds
in
les
adc
adc
ds
movs
xchg
lods
clc
movs
shl
stos
rcl
sahf
cwde
pop
call
dec
inc
lods
mov
mov
dec
pop
pop
mov
es
inc
addr16
adc
test
xchg
inc
mov
ficom
mov
pop
sub
pushf
hlt
or
dec
cmc
imul
jbe
test
ins
cmc
add
mov
int3
sbb
jmp
and
xlat
outs
inc
mov
xchg
cwde
test
(bad)
dec
and
es
sbb
adc
push
inc
dec
adc
xor
push
out
pusha
jnp
jmp
std
xor
in
jle
adc
gs
mov
cmp
sub
test
pop
mov
aam
imul
jl
in
out
stos
(bad)
cwde
ret
shl
int3
mov
adc
cwde
loopne
lahf
minps
pushf
push
hlt
xor
and
pop
push
ins
cmp
mov
and
cwde
aaa
sbb
inc
(bad)
hlt
scas
mov
call
and
push
pop
repz
dec
ror
out
int
bound
jae
sbb
cmc
mov
inc
add
or
icebp
or
fs
jno
repz
fbstp
out
jbe
stos
push
aad
scas
clc
mov
xor
ins
or
or
les
pop
(bad)
mov
pop
sar
imul
enter
pop
dec
les
fistp
fs
dec
pop
jl
sahf
jecxz
mov
lods
add
int
in
pop
adc
jne
les
pmaxsw
or
cli
es
sti
jns
bound
or
mov
cmp
jmp
adc
clc
dec
cli
jmp
jp
ss
out
outs
add
mov
aad
dec
dec
dec
repnz
xor
xchg
test
shl
pop
jno
outs
(bad)
clc
(bad)
iret
mov
call
std
retf
out
pop
aas
jo
or
out
lds
or
hlt
mov
sbb
or
sub
mov
imul
xor
pop
sub
sbb
xchg
sub
push
aaa
sbb
inc
ror
cwde
mov
aam
loop
and
mov
adc
dec
sub
(bad)
xchg
dec
sbb
and
(bad)
shl
cmc
(bad)
fldenv
inc
sbb
repnz
mov
push
cmps
cwde
bound
pop
pop
sbb
pop
ins
ins
pusha
and
xor
xor
mov
push
out
aam
pop
and
cmp
mov
inc
mov
mov
je
movs
sbb
or
ror
out
(bad)
icebp
and
dec
mov
mov
popf
outs
ss
or
sub
or
push
mov
and
imul
inc
stc
mov
movs
std
sub
mov
sbb
mov
cld
outs
xchg
adc
mov
mov
out
in
in
mov
cmc
dec
jns
pop
xor
inc
push
xchg
xchg
cld
into
dec
jg
cmp
jmp
loop
inc
adc
sub
aam
and
and
pop
sub
jmp
iret
mov
shr
pop
cli
jnp
ret
pop
push
pop
push
fcomp
shl
jae
sbb
rcl
mov
fwait
aaa
fild
fcomp
lds
pop
sahf
add
in
sahf
adc
adc
repnz
fidiv
push
add
in
aad
(bad)
mov
cmp
xlat
lds
push
out
sub
pushw
shl
imul
jge
pop
cli
fldcw
pop
mov
pop
out
xor
stc
mov
xlat
adc
inc
imul
movs
add
ss
sahf
aad
and
pop
daa
dec
pop
addr16
and
add
test
das
sti
jbe
out
mov
mov
adc
add
mov
jne
push
ret
pop
dec
pop
ins
push
add
and
or
jo
js
fdivr
movs
pcmpeqw
das
out
fwait
loopne
jae
ins
xchg
dec
sti
xor
inc
shl
je
fisttp
cdq
add
jbe
bound
xchg
aas
adc
inc
and
push
mov
fidiv
je
popa
fs
sub
inc
and
mov
sub
and
mov
mov
jmp
cmp
sub
test
cmps
xchg
dec
cmps
dec
mov
jp
bound
(bad)
popa
test
sbb
inc
data16
sbb
loopne
cdq
jle
jnp
cmp
cmp
sbb
sbb
mov
jecxz
imul
aas
xchg
pop
or
shr
call
mov
sub
xor
in
movs
push
ficom
(bad)
stc
loop
ds
mov
pop
adc
mov
jmp
mov
adc
adc
nop
jo
mov
dec
retf
or
adc
mov
repz
rcl
movs
and
test
mov
mov
pop
and
sub
mov
js
pop
bound
push
jle
or
out
cmp
icebp
pop
cmps
enter
xlat
xchg
shl
mov
rcl
popa
nop
ret
or
rcl
jecxz
jle
sub
mov
cmp
aaa
mov
clc
fisub
mov
pop
mov
clc
call
into
or
mul
cmp
ror
stc
sub
(bad)
(bad)
nop
ds
inc
ja
mov
push
(bad)
pop
push
xchg
xor
or
dec
call
or
test
fistp
mov
jnp
push
xor
mov
push
leave
test
jl
pop
in
mov
mov
push
hlt
nop
xor
push
dec
idiv
aaa
jge
pop
psadbw
fwait
mov
mov
jp
dec
dec
ins
sbb
and
or
jp
push
push
inc
outs
xlat
xchg
push
inc
cdq
addr16
mov
jl
inc
jb
(bad)
scas
mov
mov
push
sahf
fnclex
sbb
push
dec
mov
jns
and
clc
fcom
out
mov
rcl
bnd
pop
and
push
xor
lock
push
in
stos
jb
mov
xor
adc
and
jbe
ror
xor
push
ror
adc
push
sbb
jge
fimul
mov
icebp
cld
push
inc
imul
sub
and
and
stos
push
push
int
popa
lock
xchg
imul
mov
inc
pushf
mov
retf
push
mov
and
std
aam
(bad)
js
lods
xchg
int
xchg
test
retf
jb
dec
mov
rcr
pop
inc
sub
sbb
sbb
(bad)
gs
xor
dec
xchg
or
xor
ss
imul
imul
and
xchg
fiadd
inc
popa
ja
fimul
pop
scas
inc
xchg
loop
jnp
les
sub
scas
add
ret
pop
mov
sub
rol
or
inc
call
mov
cmp
in
pop
push
inc
cmp
xchg
jle
xor
fs
and
xchg
push
and
ret
arpl
in
loopne
shr
popa
bound
pop
push
jge
cld
aaa
adc
add
imul
pop
sbb
out
xchg
push
xor
mov
loopne
pusha
stc
mov
add
sub
(bad)
(bad)
outs
add
or
xchg
mov
arpl
xchg
and
dec
sub
push
aas
inc
adc
cmp
inc
cmp
pushf
jp
pop
nop
pop
pop
push
pop
and
popa
int
pop
mov
imul
add
jbe
mov
pop
push
jb
popa
in
clc
mov
repz
fs
sub
call
add
and
cld
(bad)
in
inc
stos
enter
mov
sub
dec
push
or
sbb
xor
lock
pushf
lods
pop
sub
mov
jmp
les
sbb
in
push
leave
dec
jp
repnz
mov
scas
fiadd
fsub
pop
jl
shl
lods
sub
ss
xor
sub
mov
sbb
aam
adc
out
mov
mov
adc
and
call
pop
add
mov
pop
aad
jbe
jl
stos
mov
adc
aam
and
jg
xor
sub
stos
sub
jg
push
cwde
cmp
repz
mov
std
and
jecxz
not
mov
push
shl
(bad)
imul
inc
not
add
sbb
or
clc
jg
adc
xor
jmp
(bad)
stc
stc
ud0
ins
pop
sub
stc
jb
sub
mov
loopne
scas
loopne
cmp
movs
sub
pop
int3
add
loope
scas
dec
jmp
inc
mov
cmp
inc
out
int3
not
cmp
push
je
outs
or
cmp
jo
lods
loope
dec
repnz
jge
icebp
xchg
iret
xchg
mov
je
push
mov
add
xchg
inc
jmp
outs
sub
repnz
aad
mov
dec
mov
add
addr16
adc
xchg
ss
cmp
or
int
test
imul
loop
xor
jp
and
nop
pop
daa
inc
sbb
aad
jp
popa
push
inc
ret
jae
rcl
test
jl
icebp
cmp
cmp
das
dec
xchg
push
(bad)
pop
leave
adc
retf
and
(bad)
out
mov
in
ret
(bad)
aam
ret
mov
xchg
inc
mov
mov
push
fwait
sbb
ret
popa
call
jmp
lods
xor
mov
int
mov
mov
test
pop
fisttp
(bad)
movs
repnz
pop
jl
inc
imul
push
or
and
rcr
popf
jbe
mov
cmp
sbb
ror
movs
dec
push
fcomp
sahf
or
cmp
fadd
push
or
cdq
sti
or
jbe
pop
mov
cmp
dec
cli
out
lea
aaa
sub
les
enter
inc
out
push
aas
push
push
retf
fistp
les
xchg
shl
cwde
dec
add
outs
push
xor
mov
mov
fdiv
inc
(bad)
pusha
mov
mov
int3
(bad)
jb
xchg
ret
xor
or
rcr
aas
test
mov
or
xchg
push
sub
pop
in
mov
div
add
and
int
cwde
xchg
adc
(bad)
mov
loop
mov
mov
xlat
sbb
mov
clc
cmp
aaa
stc
add
xor
jo
ds
jae
jmp
in
push
fcmove
pop
lods
pop
xor
mov
jno
outs
ss
xchg
push
cli
fsub
mov
sbb
in
retf
popa
add
pushf
lods
test
in
pop
adc
imul
in
add
cmps
dec
lods
push
push
xor
and
stc
and
inc
sar
les
and
jmp
cli
ret
cmps
cli
(bad)
jle
stc
or
out
push
aas
inc
ret
push
push
and
imul
xor
sub
jno
dec
inc
(bad)
addr16
sbb
push
mov
movs
adc
cmc
mov
not
mov
push
mov
jae
dec
jnp
popf
mov
sbb
shr
div
js
sbb
shr
sbb
jne
sti
inc
test
adc
sub
or
daa
imul
and
dec
arpl
sub
and
retf
pop
sub
leave
cmc
daa
mov
or
cmp
jl
inc
pop
dec
dec
cmp
mov
dec
dec
test
mov
cmps
inc
retf
and
pop
jge
pop
push
shr
data16
lods
adc
and
cmps
les
pop
lds
mov
fisttp
enter
inc
outs
mov
repz
push
(bad)
fwait
add
add
jmp
hlt
lds
ins
add
loopne
sbb
xor
jl
pop
push
push
inc
push
ins
pop
mov
ja
mov
sbb
out
pop
ret
dec
lahf
les
mov
enter
mov
pop
push
call
lahf
(bad)
mov
push
fbld
pop
ret
inc
pop
inc
movs
cs
jae
retf
cld
cmp
add
sub
push
pop
cli
into
mov
and
scas
mov
rcr
jg
jecxz
xor
imul
fwait
or
mov
cmp
das
stos
dec
sub
and
jo
push
shr
or
mov
mov
mov
div
lock
sbb
sbb
aam
or
fist
je
push
leave
push
loop
retf
icebp
mov
add
sub
push
push
and
sub
xor
pop
dec
movs
jl
js
dec
mov
sub
ins
fs
clc
sbb
jg
cmp
ret
jp
pop
rcr
adc
gs
jp
push
cmp
ret
add
in
xchg
mov
loop
and
xor
ja
jmp
mov
popa
fbld
mov
adc
pop
data16
cwde
mov
pop
scas
mov
sub
mov
pop
test
test
jns
jns
test
mov
lock
pop
retf
inc
gs
push
jge
aad
sub
cs
mov
sti
mov
add
lods
adc
in
fiadd
test
mov
fs
retf
fucomi
xchg
shl
xor
pop
adc
bound
outs
(bad)
and
fld
mov
xchg
xor
push
lods
aaa
mov
cmp
pop
and
aam
sub
inc
cdq
pop
or
mov
cmp
es
in
mov
fwait
scas
outs
in
popf
arpl
cmp
sub
mov
test
inc
adc
ja
fcomip
pop
enter
mov
mov
xchg
jne
pop
mov
in
cmc
test
push
dec
inc
js
push
mov
mov
and
jmp
cs
cmovne
les
mov
pusha
mov
loop
scas
mov
jno
int3
in
or
sbb
add
jb
rcr
leave
mov
lahf
fstp
and
rol
sar
fdivr
xor
movs
repz
stc
mov
scas
out
cwde
and
gs
dec
std
adc
push
jecxz
xor
cmps
sbb
cdq
movzx
jne
ror
jns
pop
aam
push
sub
test
xchg
in
cmc
xor
mov
push
jmp
aaa
je
daa
adc
gs
rol
sub
cmp
clc
in
jb
aas
ds
mov
(bad)
or
mov
or
imul
pop
(bad)
push
jle
push
xor
movs
div
inc
inc
xor
jno
mov
retf
push
fs
xor
cmp
scas
or
or
mov
sahf
xchg
dec
xor
or
pop
jg
fmul
inc
stc
(bad)
fldcw
ins
pop
dec
cld
sbb
cmp
jo
push
shl
cmp
jmp
cmps
sub
dec
sub
jns
push
push
inc
repz
ret
or
or
pop
call
stos
fs
das
icebp
jns
leave
jne
sbb
out
push
hlt
ds
or
add
cmp
or
xor
fld
xor
popf
fsub
adc
cli
mov
shl
sahf
adc
pop
jp
dec
loopne
mov
ret
mov
or
in
test
jg
mov
cmp
dec
fadd
or
ja
scas
ss
xor
jae
(bad)
(bad)
mov
repz
push
or
icebp
or
leave
out
fbld
sbb
add
inc
dec
in
push
or
daa
mov
mov
cmc
aam
cdq
outs
sub
sub
and
adc
ja
and
retf
sar
and
mov
push
out
mov
mov
push
pop
inc
sub
fdivr
dec
inc
xchg
repnz
cmc
inc
jae
mov
mov
fadd
clc
pop
enter
jno
ficomp
add
sar
mov
pop
cld
mov
and
dec
shl
fidiv
xchg
adc
cdq
mov
lock
and
mov
pop
xchg
(bad)
sahf
in
pop
push
inc
test
inc
jbe
aad
movs
jnp
cmps
iret
adc
push
sub
nop
xchg
cmp
hlt
sahf
sti
shl
push
or
adc
pop
mov
(bad)
xor
sub
and
pop
mov
xchg
pop
fst
sbb
mov
cmc
arpl
push
pop
daa
mov
mov
or
scas
jnp
xor
call
add
call
pop
je
(bad)
dec
mov
add
pop
ds
or
rcr
jmp
loop
arpl
push
adc
inc
fld
push
inc
xor
pop
popa
dec
fdivr
xor
push
jnp
mov
aam
sbb
and
fstp
xor
cmp
jg
xchg
ret
mov
push
hlt
and
fwait
scas
add
dec
inc
fistp
call
loope
and
int
push
fwait
es
xor
(bad)
outs
mov
jmp
fst
push
div
ss
adc
cdq
adc
xor
sahf
dec
lods
mov
mov
das
shr
ror
ds
dec
lock
repnz
cld
inc
jo
mov
mov
pop
dec
cdq
cmp
xchg
adc
mov
ror
pop
hlt
popf
sti
inc
aas
sub
mov
mov
adc
sar
das
out
mov
clc
jns
in
sub
adc
jb
mov
sbb
or
jmp
ret
ficomp
fld
jmp
idiv
adc
mov
push
mov
adc
mov
inc
or
push
pop
lea
cmp
adc
cmps
leave
xchg
jl
sti
cmps
pop
popa
push
sub
mov
xor
xor
leave
cli
jg
xchg
fnsetpm(287
sbb
inc
fcmovne
mov
and
arpl
sub
xor
lock
rcl
(bad)
hlt
out
loop
dec
ret
lds
nop
fsubr
jmp
push
mov
in
das
mov
nop
cmc
test
xchg
pop
xchg
les
push
aam
push
adc
mov
jae
xor
mov
add
fcmovb
scas
shr
mov
icebp
and
sub
sahf
add
fist
stc
lock
mov
daa
dec
mov
popa
or
and
xchg
xchg
stos
sub
lahf
popf
add
movs
xchg
nop
jge
or
sub
ja
xor
inc
in
mov
adc
inc
call
adc
and
test
jp
push
or
mov
xchg
xor
jno
cs
pop
popa
mov
push
jle
call
call
jns
shl
rcr
popa
in
lds
dec
fidiv
ror
inc
cmp
rol
and
int
cwde
lea
sti
dec
mov
sbb
call
push
pop
sbb
xchg
loopne
push
push
xchg
add
mov
jle
cmpps
mov
sub
cmp
push
das
ds
cli
inc
into
mov
sar
les
inc
aas
cli
fwait
sbb
mov
cdq
ror
dec
jns
clc
ret
data16
ror
mov
(bad)
lahf
inc
movs
push
cmps
inc
stos
(bad)
icebp
jmp
pop
int3
and
xor
pop
ins
and
mov
enter
add
mov
mov
outs
hlt
dec
popa
lods
or
push
sar
pop
cwde
push
adc
push
add
retf
pop
mov
rcl
inc
bnd
pusha
or
loop
lods
mov
inc
fadd
xchg
stos
mov
dec
daa
mov
jge
sub
je
and
jge
or
add
inc
or
dec
push
leave
add
cld
js
mov
pop
inc
xchg
push
inc
fist
mov
repz
mov
sub
(bad)
xchg
lods
xchg
pop
loope
jmp
mov
mov
lea
mov
ficomp
mov
mov
or
mov
js
popa
adc
inc
sahf
add
xlat
cmp
call
pop
neg
(bad)
mov
cdq
jmp
or
xor
jbe
(bad)
mov
cmc
loop
dec
ja
and
mov
cmc
adc
(bad)
adc
push
(bad)
clc
mov
jp
fnclex
lock
adc
pop
mov
fdiv
aas
mul
pop
pop
pop
ja
sub
lock
into
cld
push
out
adc
icebp
fsub
in
push
cmp
mov
sub
shr
dec
jecxz
xchg
cmp
or
loopne
mov
xor
shl
inc
cmp
aas
cmp
(bad)
cld
shl
lds
call
imul
test
inc
xchg
or
fcom
dec
xor
into
mov
icebp
shr
sbb
data16
push
ret
inc
xlat
dec
xor
jb
icebp
xchg
repz
imul
push
rcl
inc
mov
jl
cmps
jl
inc
xor
push
jp
test
fbstp
mov
je
sti
adc
out
jp
ss
ins
mov
inc
xor
loop
bound
inc
inc
mov
and
cmps
cmp
pop
mov
(bad)
cmp
mov
sbb
xor
mov
jmp
mov
push
mov
jns
repnz
jno
push
inc
es
mov
es
es
movs
push
cmp
mov
pop
dec
adc
call
inc
adc
rcr
mov
cmp
jno
push
push
mov
mov
push
inc
xchg
das
mov
in
or
sbb
lods
mov
adc
leave
shl
pop
push
sahf
push
inc
add
and
push
out
icebp
jecxz
xor
(bad)
test
push
sub
outs
adc
sub
ss
cdq
add
leave
xor
stc
retf
movs
jg
push
add
sbb
fwait
inc
ss
sbb
rol
in
(bad)
fisubr
inc
dec
lea
test
loope
push
sub
mov
jnp
mov
pop
xor
push
out
push
jecxz
push
fwait
sub
out
xchg
dec
xchg
adc
add
mov
mov
xchg
jg
sahf
jne
inc
pop
clc
ret
lahf
hlt
jmp
sti
sti
mov
into
push
in
xlat
outs
push
je
mov
mov
sbb
pop
mov
loop
std
(bad)
cmp
cli
mov
cmc
pop
add
mov
cmps
(bad)
std
inc
cmp
movs
in
cmp
cmp
cmp
repnz
shr
test
aam
fwait
jae
sar
and
xor
push
mov
fwait
mov
fld
or
jns
arpl
cwde
push
sahf
sbb
mov
push
mov
leave
push
xor
shl
sbb
pop
cmovl
div
rcl
dec
sbb
cmp
pop
ins
push
mov
mov
cld
mov
lahf
xchg
mov
hlt
sbb
xor
fist
pop
mov
imul
lods
jno
cdq
sbb
pop
inc
leave
push
xchg
mov
test
mov
adc
sbb
mov
mov
out
adc
out
aaa
iret
xlat
sbb
bound
push
addr16
lods
test
sbb
test
jns
cmp
sbb
dec
dec
mov
vgf2p8affineinvqb
and
or
shr
test
mov
pop
test
dec
les
fnstcw
cs
stc
cmps
sub
xor
inc
fdivr
jo
push
jmp
ror
mov
add
ja
adc
fisttp
adc
imul
jnp
pop
add
call
jl
test
movs
call
xchg
mov
and
(bad)
pop
sbb
not
mov
out
in
dec
mov
cli
iret
mov
call
repnz
and
clc
mov
(bad)
xor
or
fwait
outs
dec
sti
or
add
dec
or
jns
std
cmp
cmp
jo
inc
jmp
and
push
sub
test
cmp
push
sti
test
sub
fisubr
cmc
pushf
adc
in
adc
mov
sub
sbb
lods
pop
outs
dec
lea
push
or
dec
jle
das
retf
and
pushf
or
(bad)
add
xchg
add
xchg
pushf
mov
icebp
dec
xchg
cs
das
fisubr
inc
jbe
jp
outs
push
(bad)
ja
pop
shr
push
xor
imul
pushf
jl
ins
sub
push
ja
call
adc
pop
jp
lods
xchg
out
cmps
ja
mov
fsub
add
idiv
add
out
cmp
push
test
mov
sti
shl
pop
and
mov
sahf
gs
enter
ins
sub
xchg
cmp
xor
mov
or
movs
sbb
gs
test
push
cli
and
and
stos
ud2
scas
test
push
cmc
pop
xor
pop
mov
idiv
into
dec
mov
in
xor
push
jecxz
add
test
test
das
leave
xor
sahf
in
fild
xor
ret
fidiv
mov
iret
jns
push
sub
lea
lahf
ins
adc
ret
mov
fs
stc
ss
add
int
stos
test
fstp
call
inc
mov
mov
mov
int3
sub
jns
xlat
push
sbb
retf
push
push
lods
cmp
inc
cdq
loopne
pop
adc
bound
xchg
les
adc
add
lods
clc
out
add
(bad)
xor
jno
adc
stos
pop
jno
cdq
mov
xchg
loopne
add
jnp
sbb
push
lahf
jmp
lods
stos
popf
adc
xchg
fcmovb
sbb
sub
sub
sub
or
ins
pop
dec
enter
inc
retf
ror
xchg
lock
jb
cmp
mov
shr
sbb
dec
inc
out
mov
inc
sqrtps
adc
movs
jb
aam
push
outs
and
jo
(bad)
mov
mov
mov
dec
pop
push
ret
test
xor
test
pop
push
mov
jns
xor
mov
lods
ficomp
mov
jb
cwde
pop
mov
xchg
cld
sub
adc
mov
mov
adc
lods
jp
push
jle
adc
and
dec
sub
movs
in
mov
cmp
push
jbe
pushf
jp
retf
shl
clc
pusha
push
xchg
gs
nop
and
adc
adc
je
scas
dec
or
stc
jne
push
addr16
scas
js
mov
test
sbb
pusha
jmp
fisub
or
das
push
jle
fisub
(bad)
mov
ins
lea
inc
mov
jmp
jb
int
mov
dec
cmc
mov
in
xor
mov
cdq
mov
xchg
adc
pop
pop
sub
xor
out
sub
je
inc
mov
aas
jno
and
jne
push
push
inc
and
mov
mov
inc
and
cld
fdiv
mov
cmc
sub
es
push
inc
scas
and
push
jo
pop
dec
and
out
(bad)
adc
hlt
dec
jne
push
sub
fnsave
sbb
imul
mov
jne
or
and
mov
scas
cmps
aad
repnz
aas
loop
jge
dec
and
mov
mov
cmps
push
aaa
popf
xchg
repz
jnp
xchg
movs
pop
mov
xchg
or
cs
test
mov
cmp
in
push
sbb
dec
rcl
sti
fcmovb
stos
pop
and
mov
xor
add
rol
test
sbb
enter
int3
shr
cmc
mov
and
push
in
retf
sub
dec
push
in
mov
jle
inc
fiadd
or
xor
fsub
popa
sbb
cs
and
add
adc
fsubr
out
(bad)
jne
in
lds
sbb
xor
fnstenv
adc
xor
jbe
dec
add
jmp
in
bnd
repnz
add
add
mov
jo
pusha
mov
call
ja
push
repnz
shr
cs
mov
cmp
push
sub
aam
pop
ja
xchg
dec
push
fnsave
imul
dec
cmp
imul
inc
imul
int
xchg
sub
jb
mov
push
and
pop
imul
aad
push
aaa
jb
out
mov
out
adc
mov
(bad)
lock
or
in
ds
test
retf
(bad)
jae
ja
push
jns
data16
dec
icebp
gs
xor
inc
or
jecxz
sbb
out
push
(bad)
ds
popa
cmp
mov
aaa
or
mov
lods
dec
jo
loope
jmp
mov
mov
fcmovnb
movs
pop
movs
add
int3
cmp
lds
cmp
jmp
and
fild
jb
in
mov
and
mov
fistp
ror
sbb
pop
out
fld
sbb
inc
cmp
pop
xor
ins
xchg
(bad)
icebp
sti
inc
push
dec
(bad)
pop
aam
push
xor
cli
iret
add
add
cmp
cdq
ins
mov
test
xchg
pop
pop
in
ds
sub
nop
push
int3
stc
pop
push
pop
daa
or
scas
adc
ja
or
aam
jmp
sub
inc
mov
pop
sar
adc
inc
(bad)
shl
scas
pop
stc
add
adc
mov
test
push
out
ret
rcl
cmp
adc
pop
je
ret
movs
repnz
mov
arpl
cld
dec
inc
or
xor
sahf
pop
aad
ss
icebp
ins
pop
push
imul
inc
sbb
int3
cmp
ja
dec
ret
stos
add
cmp
out
mov
stos
dec
mov
pop
bound
out
ret
jp
add
fwait
mov
pop
fld
sub
cmp
fisub
test
daa
mov
movs
addr16
cmps
pushf
adc
sahf
in
dec
ret
mov
in
arpl
pop
add
pop
mov
adc
mov
imul
aas
jge
xchg
data16
mov
out
sbb
mov
mov
or
sub
sbb
push
call
pop
sbb
mul
(bad)
mov
xor
out
adc
jp
xchg
add
addr16
stos
imul
inc
push
inc
dec
cmp
or
mov
iret
push
jge
add
sahf
lods
dec
pop
push
xor
inc
push
cdq
push
loop
aad
clc
sub
xchg
pop
add
(bad)
mov
adc
imul
shr
push
out
fadd
in
jp
loopne
xor
shr
pop
add
aaa
nop
mov
pop
inc
out
push
adc
enter
pop
xor
or
mov
adc
out
pop
int3
outs
mov
ret
mov
dec
std
js
jae
jl
and
add
vmovdqa
mov
cmp
mov
add
arpl
mov
adc
mov
cmps
out
inc
ret
inc
cmp
inc
loop
push
mov
in
daa
dec
xchg
jmp
(bad)
adc
arpl
aam
not
popa
cs
in
in
push
and
inc
fimul
div
xchg
test
sbb
nop
iret
sub
push
(bad)
repz
icebp
jno
fiadd
add
xor
xchg
adc
mov
pop
rcl
sub
and
and
jge
dec
jae
leave
push
or
xchg
loop
pop
xor
inc
pop
add
add
bound
adc
pop
mov
pop
out
sbb
cmp
adc
cmp
mov
xchg
punpckldq
test
cmovp
pushf
ret
mov
imul
ja
mov
mov
outs
push
ja
mov
pop
cdq
and
jbe
cmp
(bad)
shr
add
ret
adc
and
jb
ja
pusha
sbb
mov
adc
call
push
pop
psubb
ds
imul
jo
pop
xor
popa
sbb
sub
xor
dec
movs
in
xor
fwait
and
rcr
push
clc
bound
into
adc
loopne
xor
fwait
cli
fucomp
pop
xchg
rcr
imul
jae
inc
mov
outs
add
out
lds
mov
adc
(bad)
jae
mov
mov
lock
adc
cmp
shl
cwde
pop
mov
and
mov
xchg
loopne
push
pop
out
lods
icebp
hlt
xchg
ss
xor
mov
jns
pop
push
js
jns
cmp
inc
adc
jge
popf
sbb
pop
dec
icebp
fwait
pop
inc
lea
retf
push
jmp
mov
push
out
pop
jp
mov
push
call
jmp
aaa
or
mov
adc
xchg
sbb
(bad)
fcomp
push
test
lock
mov
(bad)
sar
mov
add
pop
jns
or
jb
outs
data16
add
les
add
and
cld
inc
or
cli
adc
adc
ss
inc
leave
adc
cs
sar
cmp
fcmovnb
aam
fidiv
test
push
dec
mov
xchg
jecxz
xchg
fsubr
mov
jp
push
lods
arpl
mov
call
push
push
loopne
aad
dec
hlt
in
sar
jge
sub
cmc
mov
hlt
(bad)
cli
xchg
retf
popw
loope
ret
cwde
sub
aaa
dec
xchg
mov
in
(bad)
addr16
cmps
popa
daa
dec
sbb
or
inc
sbb
mov
mov
xor
or
js
adc
jns
ss
shl
(bad)
jecxz
cdq
popa
rcr
dec
push
sti
mov
inc
pop
jl
or
test
push
ins
and
cs
mov
sar
mov
adc
out
idiv
(bad)
mov
sub
aas
ins
or
push
stc
es
jb
and
add
fidiv
xor
popf
adc
cmps
xchg
test
ds
sub
mov
adc
dec
mov
mov
ja
enter
mov
das
jo
push
cmc
inc
out
dec
test
mov
jmp
jnp
sub
add
jb
out
push
or
mov
pop
sub
push
bswap
sub
jmp
pushf
inc
shr
sbb
(bad)
es
mov
jb
xor
sar
mov
pushf
out
xor
mov
in
aas
cmps
call
out
push
sub
jns
(bad)
dec
mov
inc
pop
pop
mov
mov
in
mov
aad
ins
mov
out
fidivr
mov
cmc
cmp
es
clc
icebp
(bad)
fidivr
pop
xor
outs
icebp
xchg
push
lahf
mov
jg
pop
(bad)
loopne
test
fst
out
sbb
and
dec
xchg
les
cmp
out
int3
fnstcw
sar
arpl
ret
jle
data16
inc
stc
inc
movs
jnp
scas
cmp
cdq
and
xor
cwde
push
or
sub
mov
call
and
sbb
adc
pop
and
mov
add
cmp
mov
mov
adc
repz
push
jg
or
inc
and
loop
jbe
retf
mov
sbb
pop
not
adc
add
xchg
cld
daa
sbb
mov
lahf
mov
fbstp
pop
movs
jmp
pop
and
fsub
ror
ficom
call
cwde
mov
cmps
jne
xchg
and
jno
shl
mov
daa
inc
mov
mov
lock
sbb
mov
mov
out
push
xchg
loope
(bad)
fst
dec
test
inc
(bad)
add
jbe
jmp
and
fcmovnbe
mov
xchg
mov
inc
pop
inc
jmp
fcmovnu
int
sbb
sub
mov
add
outs
sbb
scas
retf
mov
cmps
in
ficomp
and
je
int3
mov
inc
outs
test
pop
sar
sbb
(bad)
mov
outs
or
fsub
scas
push
or
sbb
adc
push
and
pushf
sub
sbb
push
mov
dec
or
clc
sub
push
push
(bad)
scas
xor
mov
xchg
push
and
movs
ror
rcr
stc
(bad)
aad
call
loope
inc
mov
fwait
(bad)
xchg
inc
mov
dec
scas
push
inc
in
and
mov
iret
pushf
shr
std
dec
inc
arpl
lods
push
or
jge
mov
xchg
je
popf
ins
cmp
cmc
jg
or
jo
shl
addr16
(bad)
loopne
loop
sbb
lods
(bad)
cmp
dec
ja
mov
out
cld
jmp
out
sub
push
push
mov
mov
cmps
push
dec
and
add
lock
sbb
shl
dec
inc
jmp
adc
pop
cmp
push
cli
aad
sbb
jg
cli
aas
cmp
add
in
mov
mov
mov
in
mov
fcom
add
mov
dec
sub
imul
test
jbe
test
ins
ror
das
outs
mov
push
shr
shr
cmp
pop
retf
dec
jb
out
cmp
int
in
push
arpl
ins
sbb
push
mov
cwde
call
mov
rcl
ja
leave
retf
and
cmp
je
fwait
cwde
pop
fiadd
(bad)
jae
cwde
add
out
ja
test
cmp
ins
add
iret
mov
dec
loope
(bad)
dec
(bad)
loopne
cmp
lods
dec
dec
jb
sbb
cmp
jle
aaa
pop
xor
daa
mov
jae
cdq
ins
gs
aas
inc
int3
outs
xchg
push
outs
pop
add
jae
mov
(bad)
jmp
sub
imul
mov
dec
daa
cmps
pop
mov
or
arpl
adc
js
adc
add
es
imul
sub
fnstsw
inc
jno
xchg
inc
jmp
arpl
mov
jge
mov
xchg
outs
out
retf
jae
mov
shl
out
dec
fnsave
jmp
fild
dec
and
in
sub
vdivps
ret
(bad)
and
mov
test
in
and
mov
div
lods
jecxz
jae
shl
jmp
mov
mov
rcr
call
test
cmp
sub
and
cmp
scas
call
jmp
mov
fld
daa
call
daa
mov
ret
icebp
sbb
and
mov
mov
adc
push
(bad)
js
mov
dec
leave
out
test
outs
mov
mov
in
popa
cmp
jnp
sub
mov
fdivr
adc
push
sbb
call
iret
ins
mov
retf
aaa
sbb
scas
mov
aaa
xchg
clc
imul
push
fdiv
es
fcom
push
aas
clc
retf
jo
sahf
outs
pop
aaa
push
in
cmp
mov
lea
xchg
(bad)
sub
sahf
leave
pop
mov
cmp
je
mov
mov
or
lea
mov
(bad)
fisub
push
add
mov
or
sub
dec
pop
(bad)
push
push
mov
stos
into
loop
mov
push
inc
ret
add
inc
mov
add
out
xor
mov
xor
out
rcl
jae
shr
ds
mov
jb
ss
jecxz
mov
fsubr
pop
cmc
inc
xchg
pop
mov
rcl
pusha
cs
xchg
push
xor
xchg
jno
sub
and
enter
cwde
in
jno
mov
adc
push
popf
scas
xor
inc
push
mov
mov
xor
push
icebp
cmps
push
aam
pop
sub
cmc
mov
addr16
sub
test
lods
push
in
jne
rcl
int
aam
and
test
clc
inc
call
cdq
nop
xor
mov
mov
sbb
mov
int3
adc
dec
ja
dec
je
push
jmp
ins
lds
or
or
movs
int
inc
or
or
add
out
(bad)
mov
mov
push
gs
cli
dec
mov
leave
adc
in
cdq
and
or
or
jne
or
mov
xchg
mov
fcom
xlat
arpl
dec
int3
mov
ss
cwde
pusha
push
fwait
retf
cmp
sti
fisubr
mov
lds
mov
cmp
xchg
jmp
or
jns
mov
mov
fs
mov
nop
stc
adc
jmp
mov
mov
lods
daa
cmp
in
cmp
(bad)
shl
daa
mov
xor
jmp
pop
rol
out
test
(bad)
out
sti
les
arpl
inc
jg
call
dec
mov
sbb
add
sbb
ret
iret
cmp
call
call
cmp
cmp
lahf
mov
inc
mov
dec
lods
push
mov
or
ret
sahf
add
sahf
test
or
dec
mov
jmp
mov
in
pop
add
rol
in
ret
sub
mov
cmps
sti
jge
xor
or
and
test
dec
adc
inc
(bad)
or
jecxz
jmp
scas
(bad)
sar
arpl
xor
mov
(bad)
ds
jmp
push
arpl
jnp
dec
push
cmp
mov
repnz
sub
ins
pop
and
fsub
lods
add
loop
mov
popa
inc
mov
mov
mov
mov
test
xor
add
inc
push
xor
fnstsw
push
push
dec
adc
aad
sub
(bad)
adc
das
add
cmc
mov
adc
out
imul
enter
jge
(bad)
jb
pop
or
lock
adc
push
push
(bad)
stc
inc
and
adc
mov
xchg
in
aaa
cwde
jge
fcmovbe
pusha
scas
push
lods
add
mov
jge
xor
cli
ficom
addr16
and
(bad)
enter
sub
pop
je
dec
jle
push
or
push
push
or
jnp
jecxz
mov
fsubr
mov
test
jno
cmp
xchg
pop
shl
mov
dec
mov
cmp
fld
imul
cmp
mov
lahf
enter
cli
jmp
cmp
dec
add
and
mov
xor
mov
and
adc
mov
add
clc
call
mov
and
mov
sub
imul
stos
jbe
cmp
push
sbb
and
push
int
inc
retf
lahf
or
or
jne
dec
and
fisubr
in
ror
sub
push
cmp
lods
dec
mov
xor
or
jmp
push
popa
inc
xor
inc
cmp
das
adc
push
icebp
test
call
or
or
and
push
jnp
jp
xchg
dec
jmp
cwde
mov
jecxz
inc
in
xlat
shl
scas
lods
cli
xchg
xor
jmp
cld
jmp
das
jno
arpl
popf
sub
cld
mov
mov
mov
test
rcr
icebp
push
ins
aaa
lea
pop
sub
leave
mov
cmps
iret
cmc
ret
add
cmps
and
mov
cli
jbe
inc
cmps
push
lods
adc
xchg
lock
out
mov
pusha
mov
mov
out
loope
push
inc
inc
or
push
sub
loop
mov
cmps
mov
out
cmp
hlt
outs
clc
push
cmp
(bad)
pusha
mov
xchg
add
or
sahf
sar
inc
in
adc
jge
inc
hlt
cld
push
popf
xor
arpl
jg
lods
nop
jns
jmp
popf
mov
sub
jg
or
(bad)
xor
(bad)
adc
cmp
ja
mov
mov
dec
inc
dec
mov
stos
ds
scas
ins
nop
dec
ret
js
and
or
mov
mov
sahf
mov
stos
into
push
add
or
jmp
int
adc
jno
jb
xor
pop
cli
mov
jmp
ret
adc
pop
data16
xor
pop
push
mov
pop
cld
xor
xchg
xchg
mov
aam
lock
or
in
ins
adc
inc
mov
popf
fld
jne
test
in
dec
into
xor
cmp
jp
rcr
test
loopne
sbb
mov
data16
pusha
or
push
add
mov
inc
cmp
mov
cmp
mov
jo
or
(bad)
in
lahf
outs
sub
mov
out
ins
sbb
fwait
arpl
retf
imul
jle
adc
ficomp
stos
fld
leave
xchg
jp
xchg
repz
(bad)
push
sub
mov
xlat
pop
jb
(bad)
xor
aam
xchg
push
add
jns
fs
mov
xlat
cmc
mov
das
pop
push
scas
mov
dec
clc
jae
jge
and
lahf
inc
add
rcl
jnp
inc
(bad)
in
jo
push
jno
xchg
sbb
outs
adc
and
mov
lods
jne
sub
in
dec
loopne
sbb
fstp
pushf
dec
cdq
mov
sar
idiv
adc
sar
pop
or
xchg
fnstsw
xchg
jmp
pop
int3
and
lea
sbb
pusha
push
sbb
std
mov
and
xor
test
mov
mov
imul
mov
mov
ja
xor
push
(bad)
dec
push
mov
xchg
int
lods
sahf
mov
out
pop
ss
call
shl
rcr
int3
xor
out
ss
push
jmp
xor
inc
xchg
pop
xor
or
xchg
daa
xlat
(bad)
mov
loopne
stos
mov
dec
and
sbb
out
add
scas
out
push
retf
push
cmps
scas
or
xor
add
sbb
sub
mov
iret
cmp
es
xor
rcr
xor
retf
jecxz
rcr
inc
or
lock
fidiv
sub
aas
mov
ss
in
lods
mov
cmps
in
shl
enter
idiv
test
retfw
jg
xchg
xchg
jmp
cdq
add
mov
xchg
mov
sub
and
movs
inc
sub
inc
not
or
xor
push
xchg
dec
mov
fs
cmps
jecxz
adc
repnz
sbb
inc
stos
enter
or
out
inc
addr16
dec
cmp
addr16
aas
mov
jg
mov
mov
dec
leave
loope
xchg
fs
jo
mov
push
fstp
mov
(bad)
out
sar
mov
sbb
out
mov
int
imul
push
scas
adc
lahf
jmp
pop
jecxz
mov
mov
leave
mov
out
shl
cdq
sbb
dec
jp
mov
aaa
fs
pop
push
xor
loope
mov
mov
or
or
adc
mov
cmp
push
daa
and
clc
lods
cmp
cdq
into
mov
jge
(bad)
jmp
ds
xchg
push
dec
or
sbb
scas
inc
js
loopne
repz
test
call
dec
mov
cld
not
add
xchg
ins
test
mov
push
jle
mov
mov
pop
mov
sbb
cmps
inc
out
sub
cld
xor
jnp
push
inc
fwait
adc
cmp
xor
hlt
scas
inc
out
loopne
and
popf
movs
imul
mov
shl
leavew
jne
and
leave
mov
pop
sti
sbb
ja
jne
int3
(bad)
jmp
xor
pop
push
add
inc
add
hlt
daa
mov
arpl
fs
sbb
sbb
mov
sbb
and
mov
inc
push
addr16
aad
out
cmc
(bad)
das
mov
je
adc
leave
sbb
aam
icebp
popa
outs
cmp
mov
and
and
mov
ins
jp
and
pop
fld
xor
push
pop
aad
mov
jmp
jmp
fild
inc
lds
mov
inc
sub
jecxz
or
mov
outs
enter
sub
outs
mov
cwde
xor
or
fwait
and
pop
push
or
dec
push
jle
sbb
(bad)
into
or
push
fild
cmp
dec
xor
repnz
or
loopne
iret
dec
and
jmp
outs
ja
mov
pop
les
jmp
jnp
push
cli
add
ret
hlt
cmp
mov
mov
push
repz
mov
pop
int
jmp
inc
fs
aam
push
mov
cmp
or
mov
xchg
retf
cdq
fdiv
xchg
into
je
mov
cmp
adc
fs
ja
adc
lock
or
pop
xchg
pop
icebp
les
adc
xchg
mov
int
adc
push
mov
mov
jb
adc
stc
inc
mov
xor
das
xor
fmul
push
aam
sbb
inc
dec
fldcw
dec
test
or
cmp
in
jb
in
jp
add
clc
pusha
stos
push
mov
or
jmp
dec
dec
dec
push
pop
pop
ss
push
mov
(bad)
movs
lahf
adc
dec
loopne
aas
cmp
fs
sbb
dec
dec
shl
(bad)
jnp
inc
mov
scas
adc
mov
xchg
outs
adc
lahf
in
jecxz
lock
adc
(bad)
ins
in
adc
movs
adc
jl
dec
mov
mov
or
pusha
std
dec
fcom
cdq
leave
mov
jns
outs
neg
pop
or
inc
outs
jp
adc
and
test
pop
mov
loop
daa
ja
sbb
or
sbb
push
je
xchg
xchg
call
es
inc
push
cmps
into
sti
bndstx
fisub
cs
pop
pusha
inc
sbb
push
mov
add
xchg
mov
inc
fcmovnu
jb
ficomp
push
and
aam
cmc
loopne
div
nop
add
sub
push
(bad)
mov
cmp
jmp
ds
mov
call
xor
jge
inc
push
int3
or
in
mov
or
add
dec
sti
jmp
aaa
jecxz
call
dec
push
mov
sub
pop
movs
lock
loope
cmp
jno
add
(bad)
jge
adc
sbb
xor
inc
shl
mov
mov
mov
pop
jns
ds
add
jmp
imul
hlt
cmp
and
adc
les
call
mov
jne
imul
out
test
adc
aaa
nop
add
imul
add
and
es
add
sti
xchg
jge
mov
inc
(bad)
adc
pop
test
aaa
xchg
inc
movs
xchg
cli
das
mov
loop
sub
fldenv
mov
call
lods
xlat
sub
aad
out
push
xor
daa
pop
mov
inc
mov
lahf
into
(bad)
aad
pop
dec
sahf
lods
cmps
loope
js
cmp
push
outs
add
cld
in
in
and
pop
out
dec
inc
sbb
xchg
cmp
sub
push
or
cmc
push
mov
push
cmc
mov
popf
mov
push
fsubr
or
out
xchg
xchg
jmp
rol
shl
mov
(bad)
xchg
fdivr
and
lds
mov
add
scas
xlat
and
xlat
dec
ss
push
inc
nop
and
or
lds
add
xchg
retf
outs
jle
cdq
js
je
iret
outs
mov
mov
cmp
mov
cmp
dec
mov
mov
test
jns
cli
jmp
neg
data16
mov
jne
push
mov
inc
aad
or
xchg
xor
loop
(bad)
sub
sbb
sbb
out
adc
sbb
retf
mov
sub
or
sti
fist
ficom
dec
rcl
xchg
jb
pop
mov
mov
sub
push
pop
mov
imul
scas
push
or
ins
int3
jle
js
inc
das
stos
add
push
retf
je
jge
jno
jae
add
mov
pop
jno
and
fst
pop
std
dec
ret
inc
inc
imul
push
pop
pslld
mul
inc
imul
inc
in
in
cmp
pop
out
inc
mov
xor
das
in
xor
(bad)
sub
pop
adc
and
dec
dec
mov
xor
fs
pop
movs
pop
cwde
jne
(bad)
adc
mov
cmp
movs
xor
ficom
jns
push
and
mov
mov
xor
mov
loopne
or
lock
sbb
in
and
test
push
xor
push
pop
pushf
add
inc
(bad)
dec
iret
xchg
add
mov
ret
xchg
sbb
jno
push
pop
inc
fisttp
aas
retf
jo
cmps
push
mov
add
clc
mov
sub
jmp
imul
xchg
and
or
addr16
push
aad
adc
xor
jp
push
sbb
xor
(bad)
call
adc
pop
cmp
pop
or
mov
mov
sar
rcl
mov
and
push
sbb
cmp
dec
adc
pop
das
gs
jb
lock
inc
dec
jne
add
in
(bad)
mov
mov
out
xchg
rol
js
xchg
sub
push
cmc
into
cmps
in
pop
test
rcl
dec
(bad)
iret
shl
out
dec
test
sub
mov
mov
(bad)
fnsave
or
pop
push
mov
hlt
fs
and
add
sub
pop
mov
popa
sahf
scas
sub
inc
punpckldq
hlt
dec
pop
shl
inc
cmps
xchg
(bad)
ins
(bad)
sti
xchg
lea
imul
add
xor
div
enter
ss
and
cli
sbb
sbb
or
popf
push
lods
sti
mov
fdivrp
sahf
inc
ins
inc
addr16
push
js
mov
jmp
stos
xchg
retf
mov
and
mov
stc
xchg
mov
inc
stos
xchg
push
fcmove
sub
inc
mov
cmp
pop
dec
fisttp
dec
imul
pop
leave
stos
stos
push
xchg
push
stos
sub
xor
mov
cwde
ja
retf
sub
cmp
inc
test
push
xor
xchg
das
xchg
cmc
lea
and
mov
rol
jne
dec
js
jno
imul
mov
iret
test
mov
cmp
aad
mov
add
or
retf
or
arpl
loope
mov
mov
xor
aam
add
lods
mov
in
fldl2t
dec
sub
mov
xchg
mov
lahf
push
data16
mov
test
pop
aam
fwait
inc
pop
or
shl
push
repz
sbb
dec
outs
sub
lock
lea
ins
add
mov
or
jbe
ins
imul
cmps
inc
mov
(bad)
cmps
arpl
inc
jl
loopne
xchg
jmp
adc
mov
cmps
jmp
xchg
xchg
into
inc
out
mov
mul
out
and
mov
jo
pusha
sub
outs
ins
imul
test
and
mov
mov
iret
imul
loope
pop
sub
xrelease
jo
push
push
stos
(bad)
iret
cmp
mov
cmp
push
add
push
loope
call
retf
sbb
popf
fiadd
and
xlat
sbb
and
lock
fstp
push
rcl
addr16
dec
xor
push
cmp
mov
ret
and
push
cld
dec
adc
mov
sub
lods
pop
or
push
bound
fidivr
inc
cmps
push
in
mov
ins
cmp
jbe
rol
ret
cdq
mov
jge
adc
add
pop
int3
idiv
push
xchg
jge
cmp
stc
lock
movs
mov
in
cdq
pop
mov
mov
retf
popa
and
xchg
cmp
push
xchg
xchg
push
push
or
mov
xchg
push
scas
push
mov
jb
and
add
mov
push
jl
sbb
lea
adc
dec
jns
mov
ins
popf
(bad)
mov
cmps
test
or
and
iret
mov
sub
mov
out
mov
adc
test
sub
push
scas
aam
mov
dec
sub
or
pop
xchg
xchg
jae
ror
push
push
les
cmps
or
and
push
and
cmp
cli
fiadd
jp
bound
enter
test
and
cmp
(bad)
jge
mov
jl
mov
into
test
loopne
push
ficom
inc
in
cmp
mov
cli
inc
das
ss
or
mov
or
pop
retfw
jo
aas
call
ins
sbb
and
inc
inc
jecxz
mov
call
or
mov
add
pop
push
fnstcw
jb
ftst
xor
aad
lock
dec
xchg
xor
ret
cmp
add
fistp
retf
icebp
test
cld
movs
pusha
sub
jnp
inc
mov
rcr
(bad)
adc
aad
dec
sub
jo
dec
add
ret
or
cmp
push
lods
lds
cmp
push
aas
neg
repnz
push
gs
daa
dec
dec
pop
fs
pop
xor
stc
pusha
fs
and
pop
lock
cs
pop
push
and
jb
pop
xor
inc
xchg
sub
je
xor
and
jmp
xchg
pop
dec
out
pop
test
hlt
jg
sbb
sbb
enter
mov
clc
sahf
jge
inc
pop
inc
jae
bound
outs
(bad)
fidivr
scas
call
dec
mov
and
fdiv
mov
jne
stc
cmp
jmp
retf
xchg
mov
add
shl
loop
cmps
fist
enter
inc
(bad)
jne
fbstp
hlt
mov
sub
repnz
fadd
inc
inc
rcl
retf
adc
outs
push
mov
xchg
aas
pop
mov
movs
jns
dec
cmp
xor
sub
mov
sbb
jne
cmp
adc
sub
mov
mov
dec
sub
xor
and
adc
dec
xor
inc
jb
idiv
inc
push
push
sbb
scas
ret
add
mov
repnz
and
sub
push
clc
ror
jp
xchg
aas
in
pop
call
mov
test
and
dec
dec
in
mov
sbb
test
lahf
inc
dec
inc
xadd
nop
mov
inc
xor
add
xlat
adc
not
stos
cdq
xor
test
mov
cli
mov
push
pusha
cmp
mov
xchg
xor
mov
scas
rcl
je
(bad)
xchg
pop
loopne
icebp
int
mov
xor
lock
or
adc
dec
int
or
cli
mov
jmp
aam
xchg
test
dec
xchg
ret
and
mov
repz
stos
mov
mov
adc
imul
sbb
je
push
fstp
jge
inc
retf
cmc
pop
adc
ret
adc
retf
les
jp
jp
sub
fistp
cmps
mov
cmps
push
mov
call
sub
mov
shl
adc
into
jecxz
fistp
pop
inc
pop
fistp
scas
in
pop
mov
ror
mov
xor
icebp
adc
cdq
sbb
xor
lds
jg
hlt
ja
and
xor
ins
loope
xchg
shr
icebp
aad
or
pop
loop
es
push
aam
mov
adc
push
cli
int
cwde
ins
sub
jmp
push
sub
shl
mov
jno
retf
repz
icebp
scas
(bad)
add
loop
push
test
jle
lods
cmp
sahf
adc
popa
fidiv
out
inc
aaa
and
jae
jmp
and
dec
mov
mov
cmps
mov
enterw
pop
cmp
mov
xor
push
xchg
lahf
add
inc
(bad)
cmp
xlat
mov
fucomip
popa
xchg
ret
shl
ds
add
dec
out
jmp
movzx
xchg
pop
xor
mov
add
arpl
cmp
push
(bad)
mov
xor
(bad)
retf
mov
inc
jb
push
cdq
adc
mov
scas
(bad)
cmp
pop
shl
jns
(bad)
adc
mov
jmp
mov
scas
lea
call
push
scas
clc
stc
fwait
mov
(bad)
cmc
pop
shr
mov
pop
sbb
sub
dec
fild
lods
mov
out
jp
cdq
xor
rcr
xor
mov
mov
frstor
and
jns
xchg
mov
imul
std
push
xchg
int3
ins
outs
gs
imul
push
sar
mov
clc
mov
dec
jecxz
adc
push
dec
add
shl
mov
mov
dec
daa
(bad)
and
mov
or
jle
pop
arpl
mov
popf
(bad)
and
imul
sub
mov
xchg
xlat
test
xchg
jle
mov
add
cmp
loop
push
call
in
arpl
pop
push
xor
(bad)
cmp
stos
sub
jmp
mov
adc
adc
and
jle
repz
stos
nop
push
add
mov
call
daa
cmps
cmp
je
jl
outs
mov
and
loopne
fisubr
mov
pop
xlat
cwde
(bad)
test
lods
ret
ds
or
add
sbb
xchg
(bad)
mov
jno
aad
repz
cwde
mov
cmps
pop
(bad)
dec
and
cld
mov
jmp
(bad)
out
pop
push
jae
dec
stos
mov
(bad)
cmp
bound
dec
sub
imul
imul
nop
add
add
jae
mov
and
ins
(bad)
loop
repz
dec
jae
mov
add
cdq
inc
mov
xor
xor
sti
mov
pop
jae
dec
jmp
mov
lods
adc
repnz
dec
retf
test
ins
or
and
xchg
(bad)
(bad)
rcl
(bad)
pop
mov
stc
xor
fdiv
(bad)
imul
fsubr
hlt
outs
ja
cmp
popf
push
loope
push
add
sar
mov
add
(bad)
sbb
xor
mov
aaa
(bad)
hlt
push
test
pop
sbb
lahf
jbe
mov
push
adc
loope
pop
(bad)
adc
or
mov
dec
retf
dec
pop
xor
mov
lock
fucomi
addr16
and
mov
xchg
movs
out
inc
sub
cld
xor
sahf
push
inc
dec
sbb
jo
inc
(bad)
fs
aad
in
sub
xchg
push
mov
and
sbb
addr16
fisub
mov
adc
sbb
jle
inc
jmp
call
mov
sbb
xchg
out
pop
adc
loope
xor
ss
retf
iret
add
mov
rol
mov
out
outs
in
dec
pop
not
sub
ja
jns
dec
fwait
retf
jg
sub
pop
add
pop
test
inc
pop
imul
mov
inc
push
xchg
aaa
sbb
mov
mov
fstp
cs
aad
adc
xchg
mov
sar
sub
loop
and
add
daa
lock
in
or
xchg
es
lods
mov
add
cmps
sub
test
cmp
int3
cmps
jmp
adc
jg
sar
dec
cmp
int
aam
mov
aas
mov
mov
js
pop
mov
mov
xor
fisttp
jbe
inc
and
jne
leave
jne
inc
lods
loopne
cmp
addr16
outs
or
pop
mov
movs
cmp
or
(bad)
test
fstp
xchg
neg
out
(bad)
stos
ss
mov
inc
mov
push
mov
call
adc
bound
imul
mov
pop
out
lock
push
adc
std
xchg
loope
aaa
loopne
fcmovbe
test
stos
dec
repz
pop
jmp
fisub
aaa
loopne
sar
pushf
cli
jg
push
cdq
fstp
add
xor
mov
xor
push
xchg
and
xor
adc
cld
lea
(bad)
xchg
push
imul
arpl
mov
pop
xchg
ds
mov
ins
je
and
ficomp
pop
fldenv
iret
addr16
fcos
outs
dec
push
inc
cs
fsub
xchg
pop
inc
jnp
clc
xor
fs
retf
push
pop
psrld
sub
ins
or
mov
popa
jmp
mov
test
xchg
push
out
mov
ins
add
sub
dec
cmp
and
mov
xor
cmps
(bad)
push
les
aas
cmp
jns
(bad)
mov
and
jne
call
and
mov
dec
pop
ret
fwait
mov
sbb
push
and
jmp
retf
movs
pushf
clc
xchg
add
cmp
aam
cs
ret
popf
movs
jecxz
inc
les
fsubp
mov
mov
imul
dec
adc
jecxz
call
jns
loopne
pop
cmp
add
imul
mov
inc
xchg
test
stos
cmc
push
imul
arpl
icebp
inc
pop
sub
and
test
xor
sbb
(bad)
push
stos
int3
test
xchg
jne
cmps
pop
shl
clc
cmp
(bad)
cmp
repz
movs
mov
cmp
pop
mov
addr16
es
inc
xchg
push
inc
xor
push
sbb
and
push
xor
mov
push
jne
loope
aaa
popa
cmps
ss
les
sti
mov
sti
ss
pop
sub
shl
jne
test
lds
mov
xor
fwait
jg
push
cmp
inc
and
xchg
das
hlt
popf
icebp
sbb
call
ins
sub
fisttp
aas
mov
mov
call
sahf
clc
repnz
push
push
cld
(bad)
sub
jae
daa
jp
fs
ret
sbb
pop
xlat
mov
rcl
mov
gs
pop
mov
add
xlat
arpl
jo
and
fimul
mov
or
jns
cmp
and
cmp
pop
sbb
pop
daa
(bad)
jmp
adc
jbe
jbe
push
push
xchg
lods
push
xchg
xor
xlat
xor
cwde
fist
in
in
mov
out
sbb
mov
jne
stos
pop
cwde
jb
(bad)
xor
cmp
mov
sub
mov
shl
xor
in
jecxz
stos
cmps
sahf
or
mov
mov
pop
ret
out
jmp
xchg
dec
rol
test
mov
mov
sub
inc
cmps
mov
outs
inc
ins
adc
imul
mov
nop
pop
stos
test
push
fsub
xchg
stos
lea
inc
mov
test
mov
icebp
jnp
jae
fwait
popa
fwait
or
rep
loope
enter
leave
mov
ret
ror
(bad)
cmp
out
sub
cmps
aaa
addr16
outs
das
mov
dec
jle
rcr
mov
cwde
push
sub
iret
test
mov
mov
pop
inc
outs
inc
int
neg
and
es
out
xchg
stc
xor
int
imul
repz
pushf
lahf
neg
inc
out
and
dec
sbb
or
adc
fiadd
pop
push
int
pop
fcmovb
fidivr
in
mov
mov
mov
cs
cmovl
mov
scas
cli
dec
add
push
lds
mov
jb
inc
lahf
or
popa
call
nop
std
pop
cld
aas
xor
ret
pop
data16
rcl
jecxz
push
scas
pop
mov
gs
ins
xor
xchg
lea
shl
mov
aaa
mov
shl
repz
mov
out
mov
and
popf
adc
add
or
inc
cmps
clc
sub
mov
jle
inc
sbb
mov
dec
mov
jecxz
dec
mov
mov
scas
jecxz
not
bound
xor
mov
fxch
test
jmp
cld
(bad)
pop
movs
mov
scas
pop
push
fs
xchg
test
fldcw
pop
mov
fmul
push
test
mov
inc
adc
sbb
cmps
cwde
jge
mov
aam
je
add
add
je
pushf
jmp
cmp
dec
adc
ja
inc
fucomi
(bad)
in
sub
pusha
xchg
xor
in
pop
dec
neg
cmp
int
cmp
loope
lods
push
xor
(bad)
out
mov
cmp
mov
cmps
push
pop
push
je
mov
push
stos
shl
sub
mov
dec
test
and
mov
(bad)
lahf
cdq
test
repnz
rol
nop
arpl
mov
xlat
and
push
push
push
mov
scas
jge
or
xor
fist
mov
lds
mov
inc
aam
xchg
mov
les
push
fcom
repz
ret
rcl
in
js
aad
enter
dec
xor
adc
push
aam
inc
loope
leave
es
adc
shr
xor
adc
pop
mov
adc
pusha
or
xchg
aam
jle
mov
adc
enter
mov
or
mov
sbb
dec
pop
push
inc
inc
lea
jae
scas
pop
fs
mov
add
adc
pop
xchg
repnz
rol
or
inc
xchg
add
fisub
lods
inc
dec
outs
or
and
not
mov
pushf
(bad)
pushf
xchg
loopne
jne
inc
mov
pop
mov
fstp
mov
or
lock
sti
and
lahf
pop
mov
sub
xchg
repz
sbb
inc
xor
arpl
pop
push
dec
bswap
jl
sti
aas
and
nop
or
xor
xor
or
xchg
mov
or
pop
jae
pop
and
fwait
cmps
test
jecxz
lock
pop
xor
call
mov
(bad)
loopne
popa
int3
lahf
pop
sahf
xlat
jns
enter
mov
fwait
psubusw
int
ins
sbb
xlat
fdivr
je
xor
sbb
ins
neg
into
jb
repz
idiv
lods
int
jmp
jle
sub
popf
push
jmp
test
xchg
not
fidivr
push
ins
jo
call
inc
dec
data16
mov
lods
outs
xor
cmovle
cmp
xor
sub
imul
sub
movs
sti
fsub
ret
clc
stos
xor
adc
mov
jmp
jle
mov
mov
cmp
loopne
mov
fcom
ss
popa
mov
fsub
dec
or
inc
mov
or
shr
jo
stos
inc
ja
mov
jg
and
xchg
cmp
sbb
ss
push
pop
push
int
test
xchg
mov
dec
stos
mov
inc
cmps
mov
es
add
out
and
dec
into
and
adc
sbb
lock
jno
sub
sti
lock
pop
pop
mov
mov
cdq
imul
jne
fcmovne
mov
je
mov
fnstenv
mov
xchg
or
and
popf
pop
sbb
lods
and
mov
and
mov
shr
xchg
xor
fldenv
xchg
aaa
jo
cmp
push
out
call
cmps
pusha
cld
fadd
ret
mov
not
loope
sahf
push
xchg
sub
out
rcr
je
add
div
push
and
sahf
arpl
add
mov
ret
xchg
fcomip
sub
sbb
shl
pop
mov
push
popf
mov
and
xchg
mov
xchg
push
iret
mov
sti
add
xchg
fnstcw
popa
(bad)
gs
xor
sub
jnp
ins
xlat
add
xchg
push
outs
test
cmp
xchg
dec
mov
shl
lock
push
or
and
sub
call
test
or
xor
xchg
stc
cli
cli
pop
cmps
cmc
not
inc
sbb
mov
mov
loopne
inc
cdq
enter
data16
sub
or
test
mov
or
ror
shr
sti
cmp
pop
add
mov
inc
cmp
call
push
xor
and
xor
sub
retf
xchg
retf
or
push
aad
cmps
inc
mov
push
ret
cmps
cdq
ret
rol
les
jmp
jb
mov
push
mov
ja
test
sub
jp
in
xor
push
push
stos
test
addr16
push
cmp
push
jne
sar
cmp
into
in
push
cmp
jmp
push
push
or
out
inc
stos
popa
js
xchg
aad
jno
les
mov
xor
aas
jnp
iret
inc
inc
pop
lock
and
dec
add
push
sti
sub
adc
daa
jp
jo
add
repnz
cmp
das
mov
cwde
push
lea
(bad)
mov
mov
fld
imul
pusha
sub
(bad)
jmp
mov
and
test
xchg
mov
js
jmp
xor
bound
retf
ret
xchg
push
iret
sub
xchg
pop
pop
stc
out
jbe
or
cmp
cmp
test
push
add
add
les
mov
sete
in
imul
cmp
jmp
xchg
sbb
jnp
sbb
sbb
adc
cmc
cli
add
rol
mov
mov
in
out
ss
cld
ret
into
sub
xor
in
je
jne
(bad)
rcl
js
lods
push
push
and
icebp
imul
xor
mov
in
les
jae
mov
test
and
movs
es
das
mov
pop
popa
mov
popa
dec
mov
sbb
sbb
and
jb
jle
std
xor
jp
jns
jl
sbb
cmps
mov
neg
dec
div
addr16
cld
fwait
pop
add
mov
push
daa
mov
mov
cmp
aad
nop
push
fisttp
push
in
sbb
call
and
ss
daa
(bad)
ins
sar
mov
pushf
nop
dec
shl
call
test
loope
xor
mov
jmp
pop
dec
jle
rcr
pop
adc
and
sahf
adc
and
aad
fsub
cld
jae
xor
bound
(bad)
or
or
lds
cmps
fdivp
push
dec
in
sbb
je
loope
dec
in
xor
pop
(bad)
pslld
mov
adc
pop
jne
sub
push
outs
jnp
add
aaa
mov
sub
repz
sbb
jo
aas
jg
jb
sbb
mov
ror
jmp
fcomp
outs
mov
stc
xchg
xor
mov
jp
dec
outs
inc
mov
repz
push
push
inc
mov
in
test
aas
sahf
repz
xor
pop
int
and
retf
mov
int3
dec
cmp
sbb
mov
xchg
mov
popa
sbb
repz
shl
dec
outs
cmp
dec
mov
mov
jb
ret
mov
mov
(bad)
xor
add
mov
xchg
push
push
add
inc
sub
call
fisttp
mov
ret
pop
inc
bound
or
or
xchg
jle
psubq
pusha
cmps
repz
mov
mov
mov
adc
int
inc
adc
mov
adc
push
ins
gs
xor
sub
push
retf
mov
sub
lods
ds
clc
clc
pop
dec
xchg
push
inc
(bad)
rcl
sbb
mov
mov
gs
mov
mov
aaa
pop
xor
call
ja
cdq
imul
cmp
outs
icebp
cmps
fwait
inc
pop
inc
jne
inc
push
sub
nop
push
pusha
xchg
push
cmp
ins
repz
push
fnop
jmp
fwait
or
inc
adc
push
xchg
loopne
push
dec
out
(bad)
sbb
pusha
fdiv
sti
int3
push
iret
imul
arpl
std
fnstsw
in
jne
pop
shr
sbb
add
ja
dec
sbb
daa
fld
jmp
stos
xchg
test
fsubr
mov
scas
enter
ins
hlt
push
cmc
jle
retf
inc
adc
lds
adc
xchg
push
xchg
jp
rcr
cmp
cli
fsubp
scas
sub
ror
ret
call
sbb
popf
scas
xchg
pmullw
test
pop
push
xchg
ret
cdq
std
pop
jle
or
adc
test
movs
sbb
ins
jmp
push
addr16
inc
jns
dec
out
in
inc
mov
je
jg
lock
cmp
sub
dec
mov
ins
xchg
aas
cld
cmp
clc
rcr
add
cmc
shl
or
and
jecxz
push
aaa
inc
add
test
mov
bound
pop
dec
sub
push
jp
add
mov
aam
fcomp
sub
mov
out
popf
push
nop
nop
xlat
aad
adc
push
mov
stos
mov
mov
cmc
mov
repnz
repz
push
cmp
movs
sub
out
pop
into
push
icebp
les
loop
and
mul
fs
dec
jns
sub
xchg
pop
inc
icebp
push
sub
sti
je
add
jecxz
stos
movs
rcl
mov
std
or
jl
inc
mov
cmps
bound
mov
cli
popa
mov
into
push
(bad)
out
fcomp
ficom
pop
sub
fstp
cmp
add
or
(bad)
or
pop
jge
adc
pop
xchg
sbb
jo
jge
test
lods
stos
push
jo
add
mov
xchg
mov
(bad)
test
jns
jmp
jle
mov
pushf
pop
dec
lock
addr16
inc
xor
sbb
mov
(bad)
movs
inc
nop
or
cmp
sbb
add
mov
ds
mov
and
shl
shl
sbb
inc
fs
mov
mov
xchg
retf
fiadd
and
mov
xor
pop
push
jbe
(bad)
shr
pop
inc
cmp
in
inc
jmp
push
scas
jp
mov
xchg
mov
in
mov
sbb
mov
push
inc
add
cmp
or
pop
stos
mov
daa
xchg
mov
dec
mov
add
jecxz
jg
mov
xor
fldenv
or
jmp
pop
jg
daa
call
dec
sbb
jb
clc
and
push
jae
(bad)
jmp
dec
aas
xchg
jb
jns
nop
(bad)
cmc
xor
fdivr
std
adc
clc
test
outs
(bad)
loopne
imul
sbb
hlt
retf
jl
sti
icebp
bound
cmp
nop
add
ins
cmp
(bad)
mov
cmps
xchg
cmp
xchg
jmp
int3
movs
(bad)
fst
xor
add
cmp
sbb
dec
xor
cdq
inc
repz
mov
add
jge
push
adc
aam
fs
push
lahf
stos
adc
mov
pop
rcr
test
pop
pop
stos
sub
jl
mov
inc
mov
dec
mov
jo
and
cmps
mov
push
dec
add
mov
and
adc
sti
fldcw
mov
pop
mov
mov
jno
jo
xchg
inc
xchg
movs
and
jg
mov
lahf
add
or
(bad)
dec
sbb
or
or
hlt
pop
sub
lods
and
inc
jge
in
pop
jb
pop
push
cmp
inc
fcom
js
aam
popf
retfw
cmp
pop
scas
out
fs
mov
stos
ret
jae
adc
adc
ja
fidivr
stos
pop
xor
pop
les
cwde
dec
loop
aad
(bad)
cmp
sahf
and
add
(bad)
call
loope
dec
mov
inc
cmp
mov
mov
mov
(bad)
push
(bad)
jne
sub
and
inc
out
xor
lods
xchg
(bad)
mov
int
or
mov
fwait
out
or
sub
cmp
mov
push
or
pop
mov
in
xor
adc
aad
inc
or
or
xchg
mov
and
call
cmp
inc
gs
test
loop
push
jns
mov
int
cmp
pushf
outs
cmc
mov
jb
sbb
data16
call
cli
retf
add
ret
aaa
ja
or
or
and
rcl
inc
repnz
aaa
xor
mov
clc
data16
sub
out
cmps
jns
retf
fisubr
and
int3
push
xchg
add
movs
or
test
pop
cld
xchg
ficom
bound
popa
xchg
inc
ss
inc
hlt
sahf
ret
daa
push
xor
sbb
std
push
push
stos
mov
cld
fidivr
inc
cld
ret
jne
cdq
clc
adc
rcr
push
jbe
cmp
ror
inc
cmp
xchg
add
mov
rcl
ffree
shr
aaa
in
ss
jmp
xor
xlat
add
cmps
jl
cwde
pop
jp
cmp
sbb
mov
rcr
loope
lods
in
and
out
sub
inc
scas
shr
sub
bound
add
or
daa
cmc
cmp
cwde
jle
add
xchg
and
rcr
inc
add
gs
jge
jne
mov
push
jb
neg
and
les
push
(bad)
jmp
(bad)
mov
and
mov
mov
outs
into
and
mov
jbe
jo
dec
mov
sub
in
pop
push
scas
or
push
pusha
loope
fldenv
mov
ja
mov
out
in
dec
clc
mov
lahf
or
sub
dec
ror
out
or
ret
xchg
pusha
cld
mov
mov
inc
adc
int3
mov
into
or
arpl
sub
nop
mov
add
xchg
add
dec
add
add
bound
inc
enter
xchg
pop
and
push
jae
inc
pop
mov
or
cdq
or
rcl
mov
pop
ficom
adc
cdq
les
lock
sub
frstor
fs
(bad)
(bad)
fist
and
out
jmp
mov
shr
cmp
inc
int
inc
cmp
mov
jo
cmps
sub
ins
shl
popf
pop
and
aad
xor
pop
stos
and
add
pusha
(bad)
aaa
mov
adc
inc
mov
push
rcr
in
jne
jp
out
push
jle
nop
(bad)
shr
test
cmc
and
gs
add
pop
test
xor
hlt
add
sub
pop
ins
out
dec
and
and
dec
xchg
cwde
push
int3
dec
push
mov
jmp
ss
clc
and
add
jno
aaa
add
pop
xor
stos
pop
aas
sbb
push
ret
jns
aaa
push
rcr
inc
(bad)
xor
adc
popf
sbb
dec
or
mov
jl
jl
aam
push
pop
mov
pop
shr
mov
jns
data16
leave
call
lock
jb
imul
mov
cmps
xchg
xchg
test
push
sar
mov
lds
xchg
and
scas
mov
aad
sbb
sbb
mov
pop
outs
mov
repz
add
cmp
gs
jge
cwde
inc
dec
mov
pop
jmp
sbb
cwde
fstp
cdq
int3
nop
push
inc
pop
inc
or
loope
mov
test
push
jno
push
repnz
sbb
jp
stos
xchg
push
pop
mov
mov
(bad)
mov
imul
pushf
je
loop
push
adc
cmps
jno
retf
imul
imul
cmp
mov
mov
pushf
lock
cli
pop
xchg
gs
mov
mov
lock
imul
jb
adc
jns
push
dec
adc
nop
add
(bad)
ret
xchg
(bad)
fdiv
aad
retf
xchg
mov
or
les
das
jl
ret
and
mov
fldpi
push
psubb
es
push
mov
inc
mov
jg
imul
sar
jge
cmp
mov
cmp
int
loopne
push
leave
fwait
xor
push
dec
iret
and
das
(bad)
mov
das
pop
pop
ficomp
(bad)
ds
xor
mov
push
xchg
neg
fdiv
repz
pop
or
icebp
(bad)
pop
lods
in
and
fisttp
adc
inc
mov
ins
cmp
pop
dec
movs
imul
or
ins
sar
and
push
inc
xor
mov
adc
repz
mov
mov
ror
bound
or
lahf
push
iret
mov
dec
repnz
aaa
mov
shl
push
mov
sbb
in
fld1
test
and
sub
(bad)
fnstsw
pop
ror
sub
inc
inc
sar
cwde
mov
jecxz
popf
mov
stc
push
push
out
imul
push
adc
cmp
jl
lds
iret
adc
sub
jae
icebp
icebp
sub
fidiv
mov
pop
or
shl
inc
cwde
mov
leave
bound
pusha
mov
mov
ret
pop
dec
sar
lfs
xor
lods
dec
mov
icebp
cmp
jmp
adc
mov
pop
mov
cmps
shl
inc
cmp
mov
cmps
int
pop
(bad)
adc
jo
push
test
jl
sbb
xchg
outs
loope
scas
dec
fnsave
push
mov
sbb
ret
mov
cmp
fwait
jae
popf
sub
std
fwait
test
cdq
jmp
jnp
sbb
ds
and
jecxz
or
stos
inc
dec
push
aam
lods
(bad)
in
or
fiadd
pop
arpl
add
cmc
cmp
push
clc
xor
repnz
iret
fscale
test
or
cmp
dec
mov
movs
cmps
das
ficom
pop
adc
add
in
sbb
sub
retf
in
dec
icebp
push
pop
hlt
mov
xor
mov
fistp
enter
popa
fisub
(bad)
jp
imul
dec
ret
rcl
out
xlat
mov
ffree
mov
dec
fistp
mov
mov
push
mov
loopne
stos
sbb
fsincos
fist
push
pop
push
cmp
aas
stos
loop
jo
sub
and
xor
outs
push
bound
xchg
scas
and
adc
loop
xchg
retf
mov
push
mov
test
jae
or
jo
hlt
(bad)
out
dec
test
mov
xchg
mov
out
cld
fistp
int3
xor
jmp
push
pop
aad
into
add
push
cmps
xchg
ret
sahf
adc
leave
ret
push
pop
or
sar
ror
fiadd
add
xchg
sub
retf
xor
jo
loopne
cmps
cmp
sbb
stc
das
test
das
std
mov
jo
sahf
push
and
cmp
jl
push
data16
shl
and
stos
mov
ret
sbb
popf
data16
push
pop
ret
mov
popa
pusha
mov
mov
sub
inc
outs
mov
mov
mov
sbb
push
adc
cmps
jbe
fcom
cmp
dec
in
test
call
jmp
loope
arpl
xor
inc
(bad)
adc
aaa
add
add
fucomip
enter
(bad)
pop
ins
retf
pop
jp
dec
cwde
dec
cmc
lea
daa
inc
dec
inc
sub
xchg
inc
fs
pushf
jno
pushf
or
cmp
es
push
jmp
rcl
or
rol
pop
retf
xor
enter
sub
movs
mov
sahf
jmp
stc
retf
loope
and
dec
inc
call
stc
fild
cmps
pop
push
mov
jecxz
cmc
dec
push
nop
lea
data16
cld
jp
lock
lock
aad
or
mul
cmp
xchg
(bad)
mov
xchg
jl
jb
jns
pop
xchg
adc
mov
push
push
and
mov
push
adc
mov
mov
xchg
repz
popf
pop
pushf
mov
aad
and
sbb
pop
jl
sub
into
push
in
div
mov
mov
xor
and
add
lahf
out
mov
ds
xlat
push
push
test
(bad)
shr
cs
stc
mov
imul
cmp
mov
add
sbb
in
pop
dec
mov
inc
jo
or
dec
dec
mov
cmp
sbb
lea
in
pop
cmp
mov
push
outs
hlt
mov
imul
les
xlat
xchg
hlt
lods
in
aas
je
and
aas
ins
or
bound
test
inc
mov
imul
jecxz
adc
test
mov
daa
push
outs
test
sub
js
pop
jne
adc
(bad)
mov
sub
mov
call
sub
mov
or
test
int
mov
in
or
mov
xchg
jns
mov
cmps
cmp
inc
jg
push
xchg
dec
ret
ds
js
jl
pop
xor
fwait
add
into
(bad)
sbb
xor
retf
jl
adc
cdq
das
mov
ss
push
imul
cmc
je
imul
xchg
mov
iret
jae
in
leave
pushf
rcr
mov
push
fs
pop
add
sti
int
jp
push
lds
xchg
mov
test
push
lds
mov
popf
adc
ins
inc
mov
test
xchg
js
cld
adc
mov
or
mov
mov
dec
sub
sbb
aaa
push
mov
ins
pop
ret
enter
std
jbe
(bad)
fldcw
iret
xchg
mov
adc
xchg
pop
jae
mov
retf
push
and
jno
cwde
outs
xor
dec
iret
into
xor
sti
inc
dec
int
(bad)
mov
aas
scas
dec
inc
mov
mov
or
inc
xor
add
fwait
and
iret
cdq
sub
das
mov
xor
or
(bad)
out
shl
test
cmp
sbb
ins
hlt
inc
and
inc
popa
je
mov
mov
loopne
jg
sahf
in
pusha
adc
xchg
daa
arpl
bound
add
fwait
lahf
mov
sub
mov
sbb
rcl
into
push
push
pop
or
pop
fcmovnbe
sbb
inc
xor
add
scas
shl
lock
fsubr
xor
pop
int3
and
jbe
stos
and
mov
shl
pop
je
lds
sbb
mov
add
pop
int3
in
pop
lock
adc
(bad)
or
adc
mov
xor
mov
out
repnz
push
cmp
add
pop
pop
adc
adc
je
rol
or
fmul
popa
sub
add
xchg
sub
scas
pop
(bad)
pop
jno
sub
cld
sub
jmp
lock
xchg
sbb
mov
fisttp
(bad)
jecxz
fistp
and
and
std
neg
out
inc
cmp
inc
lock
pop
sub
sub
(bad)
imul
pushf
in
(bad)
mov
test
adc
cdq
gs
mov
mov
test
mov
mov
jmp
adc
test
or
leave
pusha
jmp
ss
and
test
cmc
mov
add
jno
xchg
sbb
les
sbb
daa
add
jnp
sub
push
xchg
(bad)
cmp
fld
test
cmp
mov
je
fisttp
or
push
adc
pop
fcomp
mov
daa
scas
mov
cwde
dec
pop
jg
sbb
rcr
sti
mov
jp
push
in
std
xor
mov
imul
movs
mov
fs
and
mov
sar
mov
xor
test
xchg
aad
push
or
or
lock
nop
xchg
jae
cdq
add
stos
outs
mov
ja
inc
add
call
mov
mov
sahf
add
stos
jle
pop
xor
pop
rcl
add
push
or
or
jae
nop
stos
hlt
pop
sbb
xchg
pop
mov
mov
bound
adc
xor
or
or
xor
mov
dec
xchg
test
push
aaa
mov
dec
adc
xor
imul
mov
inc
mov
mov
jmp
aad
fwait
call
leave
cmps
sub
rcl
add
add
pop
test
fild
add
jb
fs
cdq
inc
in
rol
fnstenv
adc
jl
mov
sbb
cmp
xchg
in
mov
mov
and
mov
or
cmps
jae
addr16
and
stos
mov
lods
call
lahf
pop
cmc
addr16
pop
test
add
(bad)
aas
pushf
push
push
dec
js
xor
hlt
mov
and
or
mov
jb
ror
xor
xor
mov
aas
es
ficomp
jno
pop
or
xchg
inc
cmp
mov
and
pop
pop
add
inc
xchg
in
cmp
ss
aam
add
cs
std
dec
imul
push
inc
popf
lds
push
(bad)
aaa
arpl
sbb
fidiv
push
sub
xor
pop
cli
xchg
test
imul
pop
add
fild
mov
adc
push
mov
mov
imul
aas
jp
push
rcr
loopne
xor
cmp
aad
dec
lods
jl
jecxz
repnz
std
rol
mov
iret
jo
mov
xor
sti
xor
mov
lea
push
pop
adc
fadd
fcmovnu
mov
or
push
adc
cs
sbb
push
xor
sbb
ins
push
ins
adc
enter
and
mov
cs
scas
jg
mov
cmp
mov
sbb
sub
call
dec
mov
jge
push
retf
ret
jno
imul
cmps
jb
lea
or
cli
sub
xchg
repnz
mov
retf
stc
mov
call
mov
das
ins
nop
out
lock
sbb
mov
mov
pop
inc
xchg
mov
or
push
sbb
mov
mov
call
lds
leave
enter
pop
jg
(bad)
loopne
test
call
imul
sub
mov
(bad)
mov
test
mov
cmps
and
pop
cmc
icebp
scas
ja
adc
outs
in
pop
xchg
cwde
test
or
xchg
sub
(bad)
gs
inc
retf
add
icebp
add
jbe
mov
inc
push
hlt
xchg
jle
xor
ins
loop
cmp
popa
xchg
fcom
xchg
push
mov
in
hlt
stc
arpl
fsub
mov
mov
inc
stos
xchg
std
(bad)
mov
cmps
mov
jae
mov
inc
xor
retf
adc
je
aaa
jl
in
cmovo
jg
push
popa
lods
mov
movs
mov
scas
mov
pop
test
xor
push
cld
dec
add
pop
cmp
xchg
in
cmp
add
xlat
stc
ret
rcr
jae
push
sub
nop
test
adc
sbb
jl
daa
(bad)
repnz
pop
shr
pusha
adc
dec
dec
push
pushf
mov
jbe
sbb
jmp
es
bnd
xor
ret
dec
iret
mov
into
retf
iret
mov
mov
call
test
dec
or
shr
sub
sbb
sub
jae
ins
push
or
ds
nop
dec
cmc
xchg
aam
imul
pop
mov
lahf
fwait
inc
sub
fcom
inc
jae
stos
ins
fdiv
mov
pop
lods
adc
pop
cli
out
and
sub
in
push
mov
cmp
aas
mov
mov
aas
arpl
je
addr16
push
jae
jae
mov
or
fistp
sbb
mov
fidiv
cld
xchg
mov
sub
popf
xor
out
mov
jno
loopne
sbb
push
cdq
mov
clc
cli
pop
in
pop
xor
repz
add
mov
fmul
outs
nop
movs
jno
dec
sbb
adc
test
shr
loop
jae
sub
fcom
sbb
fpatan
mov
push
pop
test
retf
inc
aad
lods
mov
adc
movs
add
mov
out
jnp
inc
scas
popf
ficomp
pusha
push
mov
cmc
out
mov
dec
fwait
cdq
in
shl
mov
mov
test
push
push
dec
jo
sbb
ret
nop
test
and
mov
mov
add
leave
sbb
daa
bound
xchg
inc
jae
rol
adc
lock
pushf
or
and
push
retf
aam
jg
fcomp
ins
or
(bad)
jae
dec
push
cmp
dec
mov
scas
clc
fnstenv
outs
pop
jns
sti
idiv
pop
add
jecxz
cmps
mov
xchg
xor
in
xchg
leave
stc
cmp
jns
cmp
jne
sub
mov
iret
push
pop
cmp
retf
loopne
sub
arpl
pop
push
pop
addr16
inc
mov
push
shl
inc
adc
test
stos
sub
aad
icebp
repnz
inc
jg
dec
cli
leave
fldcw
adc
shl
and
in
inc
add
add
mov
clc
das
stos
xor
dec
mov
not
pop
rcr
add
or
cmps
icebp
jl
rcr
sahf
int3
mov
xchg
mov
imul
rcr
add
mov
push
mov
mov
fiadd
mov
lea
imul
(bad)
jmp
mov
lock
div
pop
popf
js
loop
in
or
test
int3
jno
pop
xlat
daa
jo
gs
ss
xlat
popf
xchg
dec
cmp
or
imul
dec
mov
xchg
repnz
push
repnz
imul
out
std
imul
cmp
lahf
mov
movs
loopne
inc
xlat
push
enter
pop
add
mov
cmp
daa
popf
pop
mov
into
fld
sub
and
out
cmps
(bad)
xchg
xor
sub
jb
fstp
test
pop
mov
xchg
jnp
fsub
dec
cdq
mov
ret
loope
cmp
shr
jnp
call
and
pusha
retf
std
xchg
mov
sti
aaa
sub
in
cmp
outs
mov
outs
dec
popa
and
or
nop
js
inc
jo
and
retf
jo
push
sbb
sub
stc
mov
cmp
ret
leave
das
scas
cwde
sub
mov
inc
sbb
sbb
jmp
pusha
iret
sbb
sbb
dec
stc
inc
jo
push
in
ja
call
sar
mov
push
adc
jmp
imul
cmp
jmp
fisub
mov
out
pop
clc
stc
mov
jecxz
push
stos
or
shl
retf
jmp
nop
dec
mov
vmread
fwait
xlat
js
or
and
mov
and
push
movs
push
sbb
cmp
mov
sub
lock
mov
fdiv
hlt
jno
ds
shl
aaa
dec
adc
adc
gs
push
cld
push
cs
xchg
shl
rcr
pop
mov
imul
mov
xchg
jnp
shr
retf
stos
pushf
arpl
mul
(bad)
shl
mov
outs
xor
fwait
xor
xchg
jmp
dec
dec
mov
sbb
sbb
popa
leave
inc
pop
retf
xor
pop
mov
ror
mov
cdq
je
mov
mov
adc
fdivr
fiadd
iret
jge
(bad)
or
sub
jl
xchg
jno
mov
xchg
dec
movs
jmp
stos
mov
inc
test
les
sub
mov
mov
sbb
pop
adc
sbb
in
inc
popf
mov
enter
stos
stos
adc
dec
mov
out
arpl
jnp
cld
xchg
sub
pop
popf
fwait
xchg
mov
ret
jb
and
sbb
bswap
popa
jl
push
sahf
jne
jmp
pop
sub
ficom
nop
adc
rol
test
or
arpl
mov
retf
pop
js
xchg
and
ins
cmp
cmp
xchg
add
shl
shr
inc
jns
ret
out
cmp
mul
mov
and
out
mov
push
xor
fisttp
or
enter
stc
push
mov
test
fwait
add
cmp
stos
push
dec
or
add
mov
inc
xchg
nop
into
outs
inc
add
sub
mov
int
sub
loop
js
dec
cwde
and
ret
fsubr
je
mov
popa
mov
sbb
jo
ins
add
mov
pop
cmc
xchg
sbb
stos
(bad)
(bad)
out
and
cmp
mov
xor
test
mov
and
lea
adc
out
aad
sub
outs
mov
and
push
cmc
add
lods
retf
mov
fwait
push
xchg
cmp
ins
mov
sub
adc
pusha
sub
in
push
daa
jle
js
movs
jmp
mov
lock
mov
in
call
outs
cmp
mov
sub
ins
mov
add
cli
loopne
ficom
xchg
jnp
jmp
cmp
outs
dec
cmp
ins
or
push
push
mov
add
nop
sub
into
mov
xlat
call
sbb
fmul
xlat
jge
fiadd
(bad)
(bad)
cmp
mov
loop
push
shl
in
adc
fcomp
cdq
inc
push
sbb
les
stos
lock
sub
bound
add
lds
dec
jne
jl
jbe
mov
cmp
nop
xor
cmp
(bad)
cs
jbe
ins
inc
xchg
and
or
mov
cmp
pop
inc
shl
jg
pop
outs
jo
out
push
(bad)
sub
leave
pop
push
xchg
fwait
mov
add
imul
inc
repz
push
inc
or
fcmovb
outs
and
cs
mov
hlt
shl
mul
call
in
mov
fsubr
sub
mov
cdq
cld
jp
mov
sub
aaa
imul
repnz
xchg
pop
lea
cwde
sbb
sbb
pop
rcl
pop
inc
inc
inc
mov
jmp
cmp
dec
xor
jp
call
mov
fbld
aas
inc
(bad)
int3
fisub
adc
(bad)
push
sub
mov
rcr
mov
inc
das
mov
ficomp
inc
iret
add
les
jno
imul
sub
je
pop
out
ror
cmp
jle
rcr
add
cmc
xor
clc
mov
mov
out
sub
sbb
mov
push
fadd
ud2
cmp
mov
imul
out
aas
push
or
lea
pop
data16
icebp
jmp
pop
int3
jb
mov
in
(bad)
nop
dec
das
cmc
nop
push
movs
ins
push
dec
push
jle
movs
mov
push
mov
jno
stc
dec
in
jg
and
mov
loop
lock
mov
inc
dec
mov
push
cmp
cmp
dec
rcl
push
popa
add
jae
or
jmp
mov
jmp
dec
shl
cld
and
out
mov
dec
jo
(bad)
sbb
enter
arpl
lock
ror
pop
mov
mov
cli
mov
lods
mov
fiadd
outs
jo
fs
pop
cld
dec
push
loopne
lods
dec
fld
in
pop
test
or
dec
cmps
jg
jp
(bad)
fwait
push
and
adc
sbb
outs
mov
bnd
and
push
sahf
push
(bad)
fbld
scas
ss
mov
les
mov
and
int
jo
popa
add
and
dec
push
mul
push
mov
push
dec
adc
out
(bad)
retf
cmp
mov
dec
push
mov
mov
xor
mov
in
pop
cmp
xchg
push
inc
xchg
and
gs
jmp
xor
sbb
sub
test
mov
or
pop
push
js
cdq
outs
jmp
arpl
mov
pop
fadd
xchg
call
(bad)
sub
dec
jbe
mov
iret
mov
rol
push
push
fstp
cmp
jle
mov
pop
test
pop
fild
sahf
hlt
cmp
jb
mov
or
fnstsw
popa
es
ins
mov
mov
fisub
pop
mov
adc
mov
adc
pusha
fld
test
push
test
jl
mov
(bad)
movs
inc
in
pop
aam
div
jecxz
push
ror
test
lahf
mov
out
out
mov
pop
cmps
inc
lock
imul
push
xchg
or
or
(bad)
push
loope
mov
aas
das
je
mov
scas
in
mov
adc
sar
adc
sbb
imul
fs
lea
inc
push
sub
lods
ins
outs
dec
aaa
lea
add
dec
push
out
sub
adc
dec
call
pop
adc
outs
out
jnp
mov
mov
movs
mov
inc
jl
xor
fdiv
lea
stc
inc
loopne
jecxz
jg
cmc
dec
ds
test
inc
fdiv
repnz
icebp
loop
imul
mov
push
mov
mov
push
daa
xchg
sahf
and
inc
pop
cmp
(bad)
sub
dec
push
push
jp
mov
pop
shl
add
jp
mov
mov
pop
mov
mov
pushf
ror
ror
mov
and
out
pop
mov
repnz
sti
std
inc
retf
sub
sbb
js
fsubr
jle
outs
cli
ret
pop
popf
scas
jmp
sbb
mov
cld
retf
mov
arpl
sub
mov
test
mov
add
or
ss
das
stc
xor
jae
je
xchg
popa
fnstsw
ds
adc
fs
push
and
in
dec
push
sub
popf
mov
pop
fidiv
jnp
cmps
fmul
repnz
mov
fisubr
pop
stos
push
stos
mov
ins
cmp
aas
mov
jecxz
pop
adc
into
jg
call
popa
push
inc
xor
out
sbb
stos
ret
cmc
pop
xchg
shl
pusha
xlat
movs
jnp
movs
daa
test
inc
fidivr
(bad)
stos
out
test
mov
popa
loop
in
dec
loop
pop
icebp
adc
cmp
mov
test
xor
stos
inc
sbb
pop
xchg
xchg
pop
adc
scas
fisttp
inc
addr16
sub
sbb
ret
(bad)
outs
hlt
mov
fwait
ret
rol
cmp
ss
pusha
fwait
sub
fwait
xchg
retf
bound
sar
enter
jne
xlat
cmp
dec
fisub
pop
adc
fidivr
into
xor
loopne
mov
dec
outs
inc
mov
xor
cmc
adc
xchg
hlt
out
or
test
mov
fnstenv
push
ja
mov
add
imul
call
adc
mov
pop
cld
adc
mov
sahf
clc
rol
scas
ret
jl
xor
dec
addr16
xchg
jp
mov
pop
push
in
mov
outs
dec
xor
fist
inc
in
sti
inc
or
inc
mov
dec
jnp
cmps
sub
cmc
(bad)
fisttp
adc
inc
push
outs
push
add
xor
xchg
mov
pop
pop
inc
push
aaa
mov
int3
mov
(bad)
sbb
das
xor
aaa
mov
into
mov
jbe
into
fstp
fwait
je
push
rcr
cmp
(bad)
stos
jmp
xchg
dec
aaa
pop
pusha
mov
cwde
xchg
hlt
repz
ja
shr
dec
mov
imul
push
mov
inc
mov
jbe
sar
(bad)
pop
lea
cmp
int
push
xor
sub
sbb
pusha
sub
into
xor
inc
outs
dec
clc
(bad)
cmc
jo
dec
lock
mov
inc
movs
adc
inc
mov
fs
sti
stos
pop
cmp
bound
adc
lock
push
inc
mov
fistp
and
mov
unpcklps
add
ja
jns
fsqrt
pop
and
mov
jns
imul
mov
iret
and
dec
repz
pop
lods
mov
mov
movs
xor
lock
cmps
xor
add
adc
cmp
mov
pop
dec
cmp
mov
iret
add
push
(bad)
push
push
outs
xchg
jno
mov
(bad)
add
xchg
(bad)
outs
dec
xor
ins
jb
lea
cmps
jge
(bad)
int3
out
mov
add
sub
and
xchg
or
xchg
and
and
xchg
loopne
jbe
push
nop
jle
jl
loop
movs
xor
(bad)
jno
pop
bnd
cld
jmp
(bad)
sub
ret
push
cld
mov
ret
adc
mov
and
mov
jnp
out
(bad)
fstp
push
popf
adc
inc
ja
fadd
das
mov
xor
loope
and
int3
xchg
mov
sbb
and
loope
add
fincstp
les
jg
push
sub
cmc
mov
push
jmp
shr
popa
mov
xor
or
es
movs
aam
xor
pop
aam
dec
rol
mov
adc
xchg
in
pop
pushf
mov
imul
scas
loop
and
(bad)
sar
xor
in
mov
mov
mov
bound
pop
push
and
(bad)
sahf
mov
cli
stos
fbld
mov
lea
adc
pop
(bad)
pop
ds
imul
mov
push
pushf
mov
mov
stos
add
fwait
fwait
jnp
jne
jbe
xor
mov
lods
jp
shl
repnz
out
jnp
add
push
sub
ret
rcl
inc
in
adc
dec
iret
test
xor
adc
movs
aaa
cmps
mov
inc
movs
xchg
xchg
pop
(bad)
ins
jbe
outs
out
bnd
mov
(bad)
sbb
aam
mov
nop
adc
xor
sub
jmp
xor
mov
dec
cli
push
sub
imul
jge
sbb
and
mov
rcl
bound
pop
adc
jae
aas
jecxz
sub
mov
xor
pop
(bad)
cmp
ja
enter
shl
add
xchg
mov
out
mov
cwde
leave
pop
push
repnz
jmp
gs
or
jnp
push
mov
mov
jne
push
fidiv
cmp
into
test
mov
int3
and
outs
shl
adc
lock
cld
push
movs
cmp
jmp
push
jns
sti
call
lea
mov
dec
fst
mov
aas
push
and
and
mov
out
(bad)
stos
sub
pop
fcom
idiv
(bad)
out
jno
mov
push
sub
mov
and
push
gs
mov
mov
add
leave
adc
and
ror
xchg
mov
jo
sub
in
mov
jmp
sbb
mov
pop
cmp
dec
out
mov
dec
inc
push
outs
xor
retf
cmp
stos
inc
mov
or
cld
or
ret
fnstsw
push
mov
mov
sahf
aad
sbb
lea
xchg
ins
push
(bad)
fsubr
adc
movs
js
aad
(bad)
frstor
adc
loope
add
ret
mov
into
pop
sti
xchg
jnp
add
jg
sub
in
mov
scas
mov
xchg
imul
push
sub
mov
adc
sub
in
xor
stos
test
aaa
bnd
rcl
mov
pop
ret
inc
test
ins
xor
ret
std
jns
movs
mov
add
stc
mov
push
das
cdq
sub
sbb
mov
xchg
loopne
icebp
in
neg
xor
stos
frstor
out
dec
push
mov
out
ja
aad
mul
or
pop
mov
ror
out
clc
and
fimul
jmp
imul
call
dec
lods
inc
fisttp
(bad)
fistp
push
sub
cmp
sub
cli
jl
arpl
bound
hlt
addr16
sbb
mov
jnp
pop
sbb
mov
inc
cmc
mov
(bad)
jnp
cmps
dec
push
mov
push
arpl
push
(bad)
mov
sbb
(bad)
fistp
aad
lods
or
shr
push
mov
mov
lahf
fcomp
bound
les
std
jg
idiv
(bad)
(bad)
fild
aam
in
aaa
or
cli
pop
bound
sbb
mov
out
mov
xor
shr
das
cmps
repz
clc
es
xor
cmp
dec
push
mov
aad
mov
push
imul
pop
push
sub
in
cdq
mov
and
sub
jb
retf
mov
mov
add
ror
pushf
shr
and
cmps
jge
pop
cwde
ds
xlat
sbb
mov
lock
mov
inc
mov
dec
scas
ins
push
sbb
cmp
mov
(bad)
call
mov
jb
push
fbld
(bad)
add
(bad)
jl
cli
inc
fcmovb
addr16
loop
and
add
leave
imul
setno
push
jno
jae
shr
cwde
outs
int3
cmp
cmc
jmp
xor
cmc
int3
or
xor
mov
push
jecxz
fcom
stos
sub
jp
ja
sbb
repnz
sbb
inc
in
cmp
fisttp
push
add
pop
mov
(bad)
arpl
sbb
mov
xchg
imul
mov
ror
xchg
lahf
adc
sti
(bad)
test
add
aas
add
(bad)
push
into
lea
xchg
jne
adc
cmp
sar
cmps
jg
pop
and
mov
cmp
inc
call
jcxz
popf
iret
adc
int3
test
in
mul
xlat
sub
fdivr
xchg
fidivr
jnp
push
fidiv
call
cmp
enter
xchg
cmp
fld
push
cli
mov
je
sahf
sbb
push
cdq
test
sbb
rol
fstp
fs
add
and
dec
sbb
xchg
xor
mov
int
xor
mov
out
jmp
mov
out
dec
pop
push
sar
mov
mov
rol
jg
xchg
xchg
fst
jle
pop
mov
push
mov
add
repz
add
pop
jne
inc
jmp
jno
inc
xor
js
inc
push
cmp
nop
movs
xor
sbb
leave
mov
add
sbb
scas
pop
mov
gs
dec
pushf
(bad)
sub
mov
push
and
dec
xor
in
mov
and
xchg
(bad)
aad
shl
add
mov
test
mov
or
mov
scas
sbb
adc
js
adc
mov
sbb
pop
push
in
sub
cmp
ror
inc
pop
mov
sti
arpl
gs
shl
sti
jg
loopne
mov
push
mov
pop
inc
data16
push
adc
pushf
jb
and
fcmovnb
mul
push
icebp
aad
xchg
sahf
cs
(bad)
pop
sub
shl
xor
pop
pop
aaa
push
cdq
je
sbb
pop
mov
in
and
sbb
gs
loopne
stos
jno
push
push
cmps
pop
inc
ins
jmp
std
xor
dec
cli
fxch
ret
je
pop
jne
mov
inc
cmp
(bad)
dec
outs
aam
mov
xchg
push
mov
out
jg
ds
scas
aaa
mov
test
fcom
popa
adc
mov
retf
loopne
pusha
cmp
pop
mov
adc
sbb
pop
in
and
ret
in
or
or
mov
test
in
aas
mov
jge
call
bnd
sub
cld
sub
mov
mov
xor
xchg
sbb
fwait
mov
dec
cmp
jmp
dec
pop
add
call
dec
stc
push
fdivr
neg
mov
jmp
sahf
pop
xchg
icebp
jp
loop
cmp
pusha
aad
shl
ds
mov
rcl
mov
xor
push
pop
les
rcr
(bad)
adc
mov
push
add
cmp
popa
sub
(bad)
es
imul
mov
inc
aam
ret
add
pushf
xchg
cmp
in
inc
rol
test
retf
shr
rol
inc
push
das
push
bound
fisttp
xchg
or
mov
pop
mov
shl
sbb
mov
ins
test
adc
add
mov
in
rcl
popa
mov
fmul
dec
ss
in
stos
mov
rcl
xchg
mov
movs
mov
cld
mov
mov
jmp
cmp
push
(bad)
retf
add
popa
cdq
adc
xchg
mov
shl
xchg
mov
jle
push
fcomp
lods
xor
mov
mov
jne
dec
push
shl
xchg
call
add
pusha
int3
rcr
mov
mov
mov
dec
outs
call
jg
cli
outs
mov
xchg
sbb
sub
cmp
js
dec
aam
pop
fwait
adc
dec
or
sub
inc
sub
lods
mov
fidiv
pop
repnz
xor
push
mov
clc
lock
in
out
mov
test
pop
stos
aas
sahf
pop
pop
stos
jmp
sub
push
jmp
add
push
mov
repz
mov
or
push
adc
inc
jp
iret
dec
inc
loop
lds
stc
je
mov
out
lods
adc
dec
jle
jmp
cmp
in
xor
push
adc
mov
retf
retf
or
mov
inc
mov
sbb
pushf
out
ret
xchg
rcr
mov
cmp
add
aam
rcl
xor
sub
jae
add
(bad)
push
gs
add
dec
xor
mov
and
jns
icebp
imul
fcom
cli
aam
and
loop
and
lds
dec
and
dec
xor
ret
jg
xchg
ror
fst
mov
fwait
inc
retf
in
dec
test
jmp
mov
js
mov
mov
fs
fmul
dec
jmp
stos
mov
inc
xchg
retf
xor
clc
or
stc
and
pusha
mov
push
retf
and
clc
inc
sub
mov
push
in
sub
lock
rol
push
rol
push
xchg
fistp
sahf
xor
fild
je
or
imul
jo
dec
jp
std
sub
push
jmp
dec
mov
mov
mov
popa
push
outs
iret
add
pop
jne
int3
nop
xor
sbb
retf
mov
out
(bad)
lock
push
mov
jnp
aaa
pop
inc
in
hlt
fs
dec
mov
lea
mov
inc
fstp
inc
ret
jb
stos
push
and
jnp
push
mov
stos
fidivr
mov
cmp
add
addr16
loope
mov
push
jo
xor
mov
mov
aad
adc
dec
pop
xchg
es
outs
jb
mov
and
dec
nop
(bad)
pop
add
mov
push
mov
retf
cmps
shl
data16
stc
or
jo
mov
hlt
test
in
mov
lds
jbe
cmc
jnp
mov
sahf
mov
movs
inc
sbb
aad
push
mov
(bad)
scas
mov
dec
sub
and
mov
mov
push
fisttp
lahf
dec
and
dec
shl
dec
mov
call
rcr
in
dec
sub
adc
adc
xchg
lds
in
cmp
mov
scas
or
push
(bad)
pop
lods
lods
retf
or
mov
icebp
(bad)
sbb
dec
pushf
dec
gs
in
cwde
ins
in
ins
jbe
mov
sbb
das
(bad)
jle
mov
sbb
mov
dec
pop
in
adc
pop
add
sub
adc
mov
in
or
in
or
xor
cmp
xchg
and
adc
mov
pop
arpl
jl
adc
inc
cmp
fcmovb
inc
cmp
jp
sub
pop
add
and
fst
push
aaa
sbb
add
add
adc
or
sbb
nop
add
fcmove
fcom
jnp
movs
cdq
mov
imul
add
push
pop
out
int3
xor
push
adc
je
push
pusha
neg
inc
fistp
xchg
ss
or
imul
in
sbb
dec
hlt
jae
mov
movs
pop
add
push
popf
mov
adc
adc
shl
xchg
adc
sbb
cmp
mov
lds
sub
cmp
inc
pop
sub
jge
scas
cli
push
mov
add
ror
add
pop
lods
pop
pop
pop
pop
(bad)
repnz
adc
hlt
das
rcr
mov
scas
mov
lods
cmp
test
inc
xor
adc
cdq
(bad)
mov
xor
mov
pop
popa
fmulp
cmc
movs
scas
push
rol
push
je
sbb
mov
adc
xchg
(bad)
adc
mov
pop
xchg
fld
sti
stos
mov
mov
ins
inc
popa
shl
hlt
shl
or
int3
test
push
je
mov
gs
mov
inc
fnstcw
dec
dec
xor
cld
test
test
fmul
lods
movs
add
call
xor
lahf
dec
mov
xchg
push
and
sbb
test
sub
xchg
loop
push
sar
(bad)
and
mov
jmp
fs
packssdw
adc
stc
test
push
fidiv
test
mov
aam
pop
sub
div
or
push
inc
mov
or
push
xchg
sti
not
xchg
pop
cmp
add
shl
out
loop
out
jo
cmps
scas
(bad)
pop
cld
idiv
aam
mov
inc
call
push
sahf
(bad)
ins
mov
repnz
jbe
int
lar
fstp
sti
or
push
mov
test
ja
cmp
jmp
aas
fwait
xchg
fdivr
(bad)
jmp
retf
sbb
xchg
and
fiadd
aam
or
cmps
imul
mov
cmps
jbe
jecxz
mov
jmp
push
das
js
mov
and
inc
mov
sub
inc
ret
fbstp
je
std
or
pop
imul
sub
shl
jmp
aad
sahf
mov
in
and
push
call
test
push
mov
xchg
mov
and
stos
inc
or
lds
add
xor
(bad)
mov
push
(bad)
neg
mov
dec
test
mov
mov
loop
dec
jno
dec
lahf
lea
xchg
aas
bound
mov
mov
outs
xchg
jle
jnp
iret
fidiv
inc
cli
cmp
or
jmp
jmp
mov
dec
jo
xchg
sub
loopne
lea
clc
mov
scas
outs
outs
dec
xchg
test
mov
xchg
cmp
lds
or
add
lea
jne
cmp
pusha
or
sub
in
xchg
dec
popf
lds
add
dec
into
xor
scas
sub
sbb
pop
jg
mov
scas
iret
adc
repnz
cmp
ins
jmp
push
and
in
sub
loopne
ror
mov
pop
data16
and
pushf
dec
inc
mov
push
or
test
sub
mov
push
imul
xchg
fsubr
sub
pusha
xchg
in
stos
ss
cwde
in
add
movs
mov
push
push
mov
dec
repnz
cmps
sub
fild
mov
nop
scas
(bad)
sbb
push
push
je
loop
jge
add
add
cmps
mov
mov
daa
xchg
jge
hlt
out
sub
add
sub
mov
sub
and
sbb
cdq
lods
mov
(bad)
pushw
jecxz
adc
hlt
ds
aaa
retf
loope
(bad)
loop
leave
outs
nop
pop
xor
stos
pop
and
in
jmp
jmp
(bad)
ret
into
sub
add
and
cmps
fistp
das
lods
mov
and
lds
dec
fwait
jp
cli
ds
into
xchg
push
mov
leave
neg
cs
daa
xor
jecxz
je
mov
out
jge
xchg
cwde
jmp
and
cmp
mov
pusha
shl
mov
hlt
sub
addr16
push
xor
and
pusha
(bad)
push
xchg
mov
in
jno
cli
lea
sbb
jbe
dec
cwde
sbb
push
adc
ins
pop
mov
sub
cwde
push
std
or
push
sub
lea
test
jb
jno
mov
dec
cmps
xor
ret
(bad)
scas
fwait
in
(bad)
ficomp
mov
cmp
pop
push
popa
push
fs
lahf
push
cli
sar
cld
ds
xchg
adc
jle
sbb
push
fnstcw
lahf
jae
sbb
mov
push
fdiv
ret
sbb
sbb
add
aaa
sub
in
jmp
frstor
lods
daa
xchg
xor
mov
inc
mov
retf
adc
aad
jle
adc
sub
mov
jmp
push
(bad)
retf
push
and
test
scas
pop
cli
jno
ins
pop
jbe
ins
ret
cld
scas
dec
cmp
jge
fwait
outs
adc
push
sbb
mov
jns
pop
nop
mov
push
inc
movs
sub
inc
mov
add
daa
mov
aad
enter
stc
jne
mov
cdq
mov
test
inc
(bad)
and
cs
pop
daa
mov
repnz
loopne
(bad)
cmp
shl
dec
pop
scas
loop
inc
js
dec
jae
mov
icebp
out
xchg
mov
not
sub
dec
movs
jo
ja
call
fs
ret
dec
fnsave
pop
push
movs
cmp
push
adc
inc
mov
dec
or
daa
push
ret
sub
ret
in
pusha
xchg
sub
or
pop
pushf
inc
ins
ret
retf
dec
and
push
out
(bad)
repnz
push
and
xchg
jnp
je
out
lea
adc
fs
mov
add
cmp
cdq
pop
call
mov
enter
iret
ds
jle
test
fild
and
xchg
mov
adc
mov
lods
(bad)
data16
lods
pop
mov
jns
sbb
mov
sub
xchg
sub
jmp
lods
aam
out
add
xchg
sbb
dec
or
mov
jge
cld
idiv
sub
push
into
add
fs
rol
pop
push
std
test
in
das
icebp
inc
test
cmps
call
fldenv
in
push
mov
and
retf
shl
cmp
jg
popf
aad
js
xor
sub
inc
repz
sbb
sub
rcl
fdivr
inc
mov
xchg
xchg
cmp
jbe
nop
inc
mov
add
xor
lods
stos
and
call
adc
sub
leave
inc
push
lea
mov
int
xor
jmp
pop
inc
nop
mov
push
xchg
movs
add
push
push
sbb
adc
sbb
pushf
int
xchg
cld
das
mov
add
sub
scas
daa
fdivr
mov
push
fsub
rcl
lock
cmps
frstor
dec
retf
mov
xor
inc
cmc
das
mov
add
enter
or
pop
(bad)
outs
cmp
cdq
ins
ret
push
icebp
out
and
push
xchg
sbb
lods
adc
add
lahf
outs
add
lds
ja
test
push
cmc
movs
adc
leave
retf
sub
sbb
fistp
cli
sub
loop
int3
sub
inc
cmp
std
dec
mov
aad
push
jnp
ror
mul
mul
ffree
mov
xchg
push
out
or
clc
ins
arpl
cmc
adc
or
aas
lods
pop
mov
(bad)
push
loop
fistp
fstp
repnz
jmp
add
popa
cmp
lahf
and
adc
aaa
pop
mov
mov
sbb
loopne
jnp
in
jbe
lahf
fs
cmp
push
xchg
dec
out
fistp
cmp
outs
jo
add
stc
in
cs
ror
sbb
push
xlat
cld
pop
cmp
push
jge
xchg
xor
jbe
iret
cmp
in
jecxz
scas
les
mov
pop
inc
lods
inc
das
or
arpl
and
jecxz
mov
cmp
pop
add
imul
call
inc
add
es
xchg
nop
adc
mov
popa
pop
sub
ins
in
xor
jbe
test
imul
cmp
nop
into
cdq
or
xchg
(bad)
jmp
push
add
clc
shl
mov
arpl
enter
jg
mov
inc
inc
pop
cmp
push
test
jnp
sbb
pusha
(bad)
xor
jecxz
mov
and
sbb
jmp
sub
popa
jnp
lahf
ds
je
cmp
pavgw
loopne
cmc
or
push
push
xchg
jae
mov
cdq
mov
cmps
mov
lahf
loope
jno
fsub
enter
and
fidivr
pop
call
aas
aas
and
call
inc
fwait
jg
sub
mov
jecxz
jmp
jnp
mov
fcmovbe
gs
or
mov
adc
jmp
inc
jne
pusha
inc
cmp
mov
push
icebp
jno
test
mov
pusha
addr16
add
imul
jb
fucom
test
in
shl
shl
cmp
fcomp
repz
xor
pop
fsubrp
mov
fistp
fimul
mov
fnstcw
and
gs
sar
jg
ss
movs
xchg
retf
rol
scas
movs
push
test
es
ret
mov
pop
add
adc
ins
out
movs
(bad)
popf
dec
ss
cld
xchg
enter
sub
dec
push
loope
sbb
inc
mov
dec
dec
mov
mov
aad
xchg
mov
std
sar
loop
inc
imul
imul
sbb
fdiv
mov
jns
cmps
xor
cld
sar
adc
in
movd
cmp
cs
xchg
sbb
xchg
loop
xchg
push
sub
jle
rol
das
je
fcomp
mov
mov
call
xor
or
out
jb
inc
shr
cmps
out
and
mov
sub
mov
and
in
jmp
rol
mov
lock
icebp
es
out
div
leave
pop
jb
dec
cdq
bound
jle
push
jle
fidiv
leave
mov
leave
mov
mov
in
stos
lahf
mov
jb
rcl
mov
mov
outs
popa
mov
mov
xchg
(bad)
or
cdq
and
mov
outs
jl
mov
arpl
shr
jge
ins
pop
inc
aam
sbb
xor
scas
jmp
aas
pop
push
movs
pop
(bad)
jp
ret
clc
fwait
mov
jmp
and
fcom
cmps
lods
pop
and
pop
std
mov
ror
mov
mov
sub
stc
mov
mov
mov
shl
xor
mov
jb
push
mul
xchg
xchg
push
stos
xchg
mov
(bad)
xor
mov
inc
fld
xlat
push
jge
inc
mov
out
pusha
xchg
lds
int3
test
jmp
xchg
loope
mov
xchg
pop
add
test
inc
add
call
pop
sub
out
aam
lea
ja
in
pop
mov
jo
or
xchg
mov
xchg
scas
xchg
(bad)
std
push
cld
ja
sub
or
std
call
or
jno
outs
out
push
pop
in
ret
in
sub
pop
inc
dec
or
dec
jb
cmc
mov
add
test
loope
shl
hlt
add
fnstenv
outs
(bad)
data16
or
fbld
and
inc
mov
out
mov
push
imul
repz
inc
fisttp
fadd
int
js
and
mov
(bad)
shl
adc
and
outs
test
mov
test
inc
int
imul
mov
repz
sub
aad
fdivr
mov
lods
xor
sbb
pop
out
mov
and
mov
imul
ret
inc
push
movups
loopne
and
or
int
imul
sbb
xchg
jb
adc
ret
icebp
leave
dec
div
inc
arpl
lods
call
lods
cmp
stos
cli
or
xchg
aam
add
and
call
popa
lea
into
pop
sbb
mov
mov
dec
mov
dec
push
shl
cmp
icebp
daa
or
inc
xchg
dec
jl
sahf
out
popa
sahf
mov
pushf
movs
shr
push
sahf
jo
jnp
mov
data16
dec
gs
sbb
ret
push
fisubr
xchg
jmp
adc
dec
sub
xor
int3
out
js
fmul
and
xor
icebp
sub
jbe
mov
jmp
sub
out
mov
add
test
xor
ja
sti
sbb
inc
xor
aaa
pop
jle
mov
add
outs
dec
jmp
adc
push
or
inc
(bad)
mov
xor
adc
repz
push
lea
imul
mov
jns
movs
leave
xor
(bad)
retf
mov
cmp
inc
test
and
cli
push
sbb
lea
ss
(bad)
dec
inc
jg
adc
push
push
push
cmp
stc
test
aas
hlt
ins
shl
fisub
stos
sub
add
or
inc
sbb
out
push
call
sub
mov
sub
jmp
mov
and
push
(bad)
sbb
hlt
icebp
sbb
sti
and
cmps
xchg
sbb
xor
xchg
mov
pop
dec
ins
push
call
inc
push
and
into
pop
shr
dec
xchg
xchg
inc
cmp
les
(bad)
ins
jmp
sar
pop
mov
or
aas
xchg
hlt
icebp
aad
or
mov
mov
aam
xchg
jmp
xor
test
int
add
jbe
cmp
xchg
sbb
dec
and
out
lahf
fdivr
jp
ss
ds
xor
popf
mov
mov
xor
sbb
bound
jl
shl
into
dec
imul
out
sbb
(bad)
mov
or
sbb
and
sub
mov
dec
xchg
clc
xchg
mov
mov
mov
clc
or
mov
out
mov
nop
mov
mov
sbb
xor
lods
daa
pop
ds
jbe
popa
lock
adc
dec
push
sbb
jns
mov
and
add
add
js
mov
div
fwait
call
sbb
dec
retf
stos
fidiv
rcr
sub
sbb
mov
(bad)
mov
adc
mov
cli
mov
test
sahf
fild
adc
(bad)
cld
lods
loop
or
out
jmp
movs
dec
ins
das
pop
dec
in
xchg
add
mov
movs
push
mov
test
imul
xor
iret
xor
ret
add
adc
js
or
hlt
cmp
mov
pop
push
popf
out
in
xor
or
data16
xchg
inc
cmp
jo
ret
sbb
in
adc
push
and
mov
cmp
xlat
and
xchg
jmp
dec
cmp
jo
mov
dec
clc
mov
cmc
in
mov
shl
and
cmp
aam
jl
jno
and
mov
lds
mov
sbb
and
cs
aad
nop
ja
cmc
jno
jmp
mov
xchg
xchg
lods
aaa
and
ds
into
es
add
and
shl
ficomp
inc
arpl
adc
aas
fidiv
sub
es
mov
scas
std
mov
pushf
jl
sub
les
or
adc
rcr
cmps
xchg
fwait
cmp
jle
inc
sub
aad
sbb
imul
mov
xchg
push
cwde
jmp
adc
scas
aam
cmp
xchg
xlat
jmp
mov
push
loopne
xor
jmp
mov
sub
test
cmps
aam
sahf
jg
gs
cmp
clc
lods
or
dec
fiadd
daa
xchg
loope
cld
inc
and
outs
and
fistp
cmp
inc
into
in
adc
inc
es
xor
imul
xor
popa
mov
jmp
arpl
inc
push
cmp
pop
inc
or
aas
mov
sub
sub
sbb
inc
dec
call
retf
push
sub
fcomp
pop
call
retf
adc
push
jl
adc
outs
push
pshufw
movs
jns
jmp
mov
movs
repz
jmp
int
xchg
mov
sub
xor
cmc
ret
xchg
loop
cmp
shr
repz
jle
pop
in
jne
shl
pop
ja
scas
xchg
add
pop
add
cmp
jne
outs
mov
imul
mov
and
or
jp
daa
div
mov
pushf
fsub
adc
je
(bad)
mov
and
bound
jmp
std
mov
jno
ja
fisubr
and
mov
scas
add
or
out
out
test
add
sbb
jno
(bad)
mov
idiv
loop
and
xor
mov
pop
jmp
and
xor
cmps
sbb
(bad)
adc
or
dec
and
dec
push
fidiv
fndisi(8087
leave
and
scas
push
out
inc
pop
sub
dec
jmp
test
out
lds
out
pusha
call
add
sar
push
mov
cmp
or
lods
sub
sbb
ds
cmp
and
ret
and
jns
xor
mov
mov
mov
mov
popa
enter
pop
arpl
cmp
sub
xchg
mov
sti
daa
jbe
and
adc
pop
pop
cdq
pop
in
out
sbb
xchg
daa
es
jae
les
push
(bad)
jge
jb
sbb
fs
sub
imul
int3
lods
(bad)
adc
lock
mov
dec
xor
cmp
je
jge
stos
push
mov
(bad)
cmc
mov
cmps
fisubr
mov
jmp
mov
cmp
in
inc
xchg
pop
inc
pop
inc
(bad)
xor
sbb
add
aas
lods
jnp
shl
call
lods
push
out
dec
sar
mov
loopne
pop
or
dec
mov
sub
repnz
push
push
mov
sub
or
or
pop
xor
mov
jmp
pop
adc
mov
xchg
arpl
jge
or
movs
sbb
mov
mov
imul
lds
xchg
push
test
or
ins
mov
test
ins
jg
retf
lahf
(bad)
jle
mov
cwde
ins
retf
sub
sbb
lods
jae
scas
shl
or
sbb
dec
dec
mov
cmp
lahf
and
xor
jecxz
ret
fs
cld
mov
out
or
test
xchg
clc
pop
in
push
jb
or
fnsave
push
in
adc
pop
jp
inc
sti
enter
ja
mov
cld
sbb
iret
ins
sbb
xchg
or
jp
daa
retf
test
xor
sar
icebp
jbe
stos
stos
fucomp
scas
mov
fs
cli
mov
lods
out
test
sar
iret
xor
fbstp
movs
(bad)
jnp
mov
mov
mov
sub
mov
mov
shl
add
leave
div
mov
popa
push
test
rcr
in
fist
stos
stc
imul
mov
push
(bad)
and
jmp
loope
sar
cmp
(bad)
gs
fadd
ret
stc
mov
hlt
lods
push
mov
addr16
sbb
int3
jnp
test
add
les
push
jg
inc
jl
retf
shr
push
mov
inc
mov
jmp
push
xor
ss
pop
out
mov
dec
xor
loopne
adc
(bad)
adc
call
add
adc
ja
mov
adc
rol
pop
shl
jb
mov
data16
repz
cmp
addr16
in
jae
cmps
inc
mov
int3
mov
test
enter
stos
sbb
popa
sub
gs
retf
leave
mov
mov
test
mov
inc
test
xor
sbb
pop
sub
inc
lock
or
fnsave
lahf
test
mov
push
pop
jecxz
mov
jmp
inc
xchg
push
retf
sti
mov
lahf
scas
push
(bad)
and
xchg
inc
mov
add
jo
stos
lahf
inc
jmp
xchg
fisubr
xchg
sti
xor
jmp
sbb
(bad)
push
cmps
stc
cmps
aam
ror
pop
cmp
cmp
mov
xor
enter
pop
pushf
mov
div
mov
ret
dec
loop
(bad)
sub
ja
fcom
inc
jnp
xor
pushf
ds
sub
std
inc
fistp
es
mov
cmc
inc
stos
rcl
mov
jb
mov
add
pop
arpl
movs
mov
fsubr
mov
mov
jbe
out
inc
shr
retf
inc
sbb
and
inc
add
add
pop
push
(bad)
push
mov
pop
and
mov
lods
cmp
pop
jns
jo
out
sub
out
neg
pop
bound
daa
sahf
add
jmp
push
jmp
cmp
cmp
sbb
and
(bad)
(bad)
fist
mov
or
and
addr16
movs
cwde
or
retf
sub
pop
dec
fs
loopne
call
mov
pop
xlat
daa
cmps
(bad)
jns
cdq
inc
fdiv
popf
(bad)
mov
ins
call
loop
inc
xor
inc
popa
cmc
adc
hlt
xor
fnstsw
popa
mov
adc
retf
jmp
inc
repnz
das
ja
aaa
xor
dec
ins
das
jle
jmp
fild
jne
test
push
cmp
pop
pop
mov
adc
jb
(bad)
lods
adc
scas
rcr
mov
aam
mov
repz
sbb
dec
mov
adc
or
mov
adc
test
loopne
inc
(bad)
fnstsw
xchg
mov
call
pop
pop
push
sbb
push
and
stos
in
mov
mov
push
repnz
jle
fnstcw
dec
cmps
ins
fadd
ds
movs
add
sbb
inc
scas
cmps
xor
xchg
(bad)
fimul
sbb
mov
pop
cmp
push
fldenv
fdivr
cmc
lea
push
adc
in
cmp
adc
(bad)
and
sbb
fmul
sbb
fwait
aas
rcr
test
pop
fs
mov
movs
or
mov
movs
mov
xchg
mov
aaa
ror
mov
mov
xor
pusha
push
sbb
push
inc
popf
cdq
inc
mov
xchg
icebp
fwait
sbb
pusha
mov
scas
ret
std
adc
jecxz
jle
sbb
int3
cli
push
xchg
fs
stos
or
xchg
xor
and
std
(bad)
mov
aaa
mov
stc
adc
fs
sbb
lods
jb
jmp
xchg
cmps
jmp
sbb
pop
clc
sbb
push
mov
shr
lock
mov
mov
es
jle
push
xchg
lods
ss
mov
mov
fst
sub
ror
cmps
xchg
rol
repz
or
push
lock
mov
pusha
lahf
lods
call
dec
or
push
pop
arpl
sbb
xchg
fisttp
xchg
dec
mov
sar
or
das
ret
jmp
sub
mov
push
movs
outs
mov
push
push
cmp
cdq
cdq
loop
mov
pop
pop
sub
mov
xor
pop
(bad)
mov
cwde
test
jecxz
cmp
mov
or
jb
daa
mov
xchg
xchg
dec
gs
pop
xchg
jle
and
addr16
xchg
int3
aas
fwait
xchg
iret
mov
or
mov
outs
outs
imul
xor
fxam
inc
aad
or
and
jo
pop
xchg
xlat
jne
dec
mov
xchg
mov
push
fmul
pop
popa
add
addr16
push
std
out
dec
nop
add
fwait
xchg
test
jmp
xchg
jo
jbe
and
fcmovu
cmps
ja
call
adc
movs
(bad)
dec
(bad)
pusha
arpl
add
mov
gs
add
enter
dec
rol
pop
stos
test
imul
aam
or
bswap
ja
jbe
mov
iret
pop
sahf
or
ror
in
out
ins
aad
addr16
xor
(bad)
and
dec
rol
(bad)
mov
dec
adc
(bad)
dec
push
push
sub
adc
hlt
scas
imul
imul
in
mov
mov
dec
movs
shl
inc
std
ss
push
retf
pop
sbb
jmp
add
sbb
(bad)
push
dec
jle
mov
jb
mov
pushf
loope
(bad)
out
mov
test
push
push
clc
lods
in
adc
push
inc
sbb
imul
and
setno
bound
sahf
jge
mov
add
sbb
dec
jmp
retf
xchg
add
into
sub
imul
mov
pusha
hlt
adc
clc
and
stos
cdq
sahf
mov
and
stos
mov
push
cmps
idiv
xor
nop
not
dec
shl
pop
cli
das
fadd
sub
js
js
xchg
pop
mov
add
lock
add
test
call
popf
movs
mov
mov
and
xchg
xor
loop
push
mov
test
in
shl
in
dec
push
sub
loope
add
cmps
sub
add
push
int
and
out
mov
test
scas
sti
cmp
enter
jl
ss
jae
or
or
std
and
cdq
lahf
mov
sar
mov
jb
ins
jecxz
sbb
or
xchg
jno
push
ja
pop
sbb
outs
stos
iret
push
inc
imul
test
cmps
push
adc
jecxz
scas
xchg
hlt
popa
rol
mov
cs
sub
xchg
mov
icebp
adc
cmp
out
sub
ins
loopne
fbld
stos
mov
dec
mov
push
in
fist
add
ins
pop
mov
and
inc
in
pushf
stc
add
test
xor
cmps
aaa
aaa
and
cmps
(bad)
jbe
scas
mov
sub
jb
inc
adc
sbb
add
fist
aas
cmps
arpl
adc
test
sbb
cmp
aas
dec
push
mov
loope
lods
and
daa
(bad)
adc
add
ss
out
xchg
shr
add
mov
inc
cmp
fidiv
ss
in
mov
sbb
loop
mov
icebp
(bad)
jo
dec
mov
sti
(bad)
data16
mov
out
icebp
xlat
shl
fild
push
jecxz
mov
and
test
mov
fistp
xor
inc
pop
and
fisubr
in
jne
adc
call
sbb
test
ret
ret
retf
or
add
xor
outs
xchg
add
div
dec
retf
(bad)
out
in
mov
pop
cmps
mov
add
adc
jb
jnp
xor
stos
outs
movs
sub
mov
ja
fs
pop
stos
es
jmp
push
daa
jno
cmp
and
repz
jge
out
dec
xchg
add
lds
pop
imul
push
mov
xchg
cmp
loop
xchg
dec
vcvttsd2si
(bad)
popa
lea
ror
mov
data16
xor
imul
mov
push
cmps
(bad)
test
cmp
ret
sar
(bad)
mov
mov
shr
add
mov
sub
cmc
stos
xchg
loope
outs
mov
add
mov
xchg
adc
shl
or
addr16
int3
inc
ins
mov
inc
mov
mov
push
aam
and
jbe
xchg
add
mov
cld
fistp
test
(bad)
lds
fwait
je
mov
xchg
sub
outs
jns
ds
sbb
in
test
adc
dec
sbb
push
aas
imul
mov
or
mov
cmp
ja
dec
sbb
out
cmps
iret
loope
lea
(bad)
dec
ss
add
dec
stc
idiv
call
test
cwde
adc
mov
sbb
sahf
repnz
out
xor
mov
mov
add
stc
sbb
lds
xchg
js
push
push
or
jns
mov
aad
mov
mov
fidivr
out
cmp
xor
push
xchg
ror
add
lea
outs
inc
sub
sbb
xchg
cmps
rcr
and
lock
int3
int
(bad)
ret
mov
cmp
outs
loopne
mov
adc
loopne
push
or
ret
loope
push
rol
lods
add
xor
pop
jne
pop
adc
dec
mov
(bad)
mul
and
dec
sbb
pop
inc
call
and
test
cmc
rol
ret
dec
sub
fcomp
cs
stc
test
cmp
punpckhbw
fisub
addr16
lea
fdivr
sbb
addr16
jl
xor
push
std
jg
cwde
cmp
or
(bad)
sbb
loop
aam
js
dec
int3
or
(bad)
jge
ret
jmp
fcmove
xchg
mov
push
cmps
jle
mov
fldenv
imul
pop
movs
xlat
xchg
cmp
inc
mov
dec
dec
dec
add
je
xor
pop
mov
jno
loope
rcl
add
mov
ds
ror
mov
xor
pop
mov
cmp
jne
popf
and
out
js
add
int
(bad)
popw
cli
mov
mov
push
imul
icebp
sbb
in
stos
cmc
sub
rol
xor
mov
rcl
lods
rcr
fiadd
cmp
or
push
push
fwait
daa
cmp
movd
stos
scas
adc
aaa
jmp
push
retf
push
cld
addr16
or
loope
add
xor
leave
add
(bad)
test
addr16
mov
xchg
ror
jmp
adc
push
push
jbe
gs
cmc
mov
sti
jb
scas
in
gs
jo
ins
mov
cmc
test
dec
dec
imul
add
stos
shl
ds
inc
ja
mov
cmp
pop
jecxz
push
mov
retf
popa
jb
add
jl
mov
push
stos
sbb
push
mov
lahf
test
cmp
dec
(bad)
lods
dec
add
sbb
arpl
mov
movs
jbe
and
push
cmps
lods
(bad)
out
dec
add
push
adc
sti
mov
cmp
mov
mov
adc
push
shl
jo
or
dec
adc
mov
movs
push
and
mov
ret
jmp
pop
std
jg
xchg
call
js
sbb
scas
xchg
sbb
iret
sub
mov
mov
lds
lock
pop
dec
and
fnstsw
jno
add
fst
lods
add
popa
xchg
sub
mov
mov
and
popa
xchg
scas
mov
fnsave
jl
in
dec
sub
dec
movs
and
in
pop
and
mov
in
jmp
push
or
xor
jns
pop
sub
mov
mov
dec
aaa
rol
mov
push
imul
and
or
sub
add
xor
imul
push
gs
push
sbb
xchg
repz
cdq
int3
imul
mov
fiadd
and
lods
cmc
cs
and
repz
arpl
sbb
sub
inc
cwde
popf
loop
sbb
fbstp
push
out
mov
aas
jno
and
dec
mov
mov
sub
xchg
sbb
push
sub
(bad)
jg
cmp
mov
inc
test
mov
inc
sub
push
jmp
pop
(bad)
and
call
sub
inc
fdiv
fist
in
adc
cmps
lock
jge
sbb
sub
xor
inc
jmp
ins
push
(bad)
xchg
cmp
mov
nop
jb
pop
mov
cmovge
mov
aad
sbb
xor
mov
loopne
int
mov
ret
enter
cmp
sti
int
push
jne
clc
repz
mov
out
(bad)
sub
or
and
jb
and
cmp
stc
mov
clc
cld
cli
and
mov
add
inc
mov
push
in
xchg
stos
sub
bound
pop
and
fcmovne
add
pop
rcr
imul
(bad)
cld
ror
cmp
sar
push
test
aad
int
jne
adc
push
repz
dec
mov
ret
out
cmp
inc
fdivr
push
sahf
push
ss
xchg
sub
and
div
scas
ds
mov
or
push
pop
shr
sbb
pop
sub
loope
mov
sub
xchg
push
fild
adc
inc
dec
mov
xor
push
aad
aam
mov
sub
mov
nop
lea
leave
call
ror
pushw
pop
adc
pop
out
aam
pop
and
add
dec
mov
pushf
das
test
call
push
mov
data16
ret
adc
je
call
cdq
retf
push
dec
mov
inc
or
stos
imul
fisub
retf
add
mov
leave
or
retf
push
mov
push
sbb
pop
dec
and
or
push
(bad)
push
in
(bad)
bound
xchg
das
je
in
ja
jmp
mov
aaa
add
jg
cmc
pop
pusha
enter
mov
dec
in
sbb
jmp
xchg
xchg
or
cmp
mov
lahf
mul
and
test
sub
jle
adc
pop
int
call
xchg
push
xchg
or
pop
fst
popa
and
aas
sub
mov
clc
cmp
pop
push
or
loope
les
cli
enter
and
push
mov
mov
(bad)
jmp
cli
cmc
dec
sub
int
xchg
sub
dec
aaa
cmp
mov
or
dec
push
outs
iret
dec
daa
cdq
cwde
push
mov
call
jnp
mov
popa
outs
(bad)
fadd
jno
and
(bad)
and
call
jecxz
arpl
js
(bad)
adc
cmps
inc
inc
xchg
xlat
popa
das
das
lds
cmp
aaa
jno
pop
inc
scas
outs
int3
and
std
mov
sub
das
xchg
out
lea
fcom
cmps
iret
push
mov
mov
add
pop
arpl
jg
xchg
lds
dec
sbb
lods
add
lock
shl
mov
aaa
jp
out
pusha
xchg
xchg
or
popa
cmp
jns
adc
cmp
es
out
jbe
cwde
lods
push
push
pop
in
push
fcomp
cmps
fisttp
mov
fiadd
pop
aaa
sub
mov
sbb
mov
jns
cwde
adc
lods
cdq
inc
cmp
cmps
xchg
mov
cmp
or
pop
sahf
lods
jmp
sbb
loopne
xchg
ins
pusha
mov
push
mov
jle
pusha
ins
xor
ffree
xchg
shl
sar
sbb
nop
sbb
xor
push
scas
jle
xchg
stc
xchg
cmp
bound
cs
xor
mov
mov
imul
adc
inc
and
loope
xor
cmps
icebp
xor
adc
sbb
jle
out
cld
icebp
out
cmp
gs
inc
push
mov
mov
movs
mov
(bad)
or
aas
icebp
test
pop
push
xchg
cmp
xchg
xor
cwde
inc
out
xor
push
(bad)
jbe
(bad)
daa
inc
dec
test
xor
push
mov
inc
and
lods
sti
sub
data16
mov
push
lods
inc
push
adc
out
out
es
xor
push
nop
scas
dec
in
jmp
or
retf
inc
pusha
dec
lds
into
pop
test
loop
or
adc
div
lock
mov
cmp
mov
mov
xchg
sub
inc
(bad)
dec
retf
rcr
sbb
int3
imul
dec
dec
int3
inc
or
out
sub
jae
push
adc
inc
sar
xchg
or
stc
and
ficom
mov
call
mov
sbb
sub
ret
loope
xor
xor
xchg
outs
jnp
dec
inc
outs
call
push
hlt
push
out
popa
cmp
xchg
pop
test
movs
lahf
(bad)
out
sub
aaa
push
rcr
jmp
sbb
jecxz
daa
rcl
pusha
and
xor
fimul
adc
cmps
xchg
xchg
pop
inc
sub
push
inc
sbb
sub
and
scas
mov
mov
call
scas
sar
pop
pop
mov
pop
cmc
movs
std
pop
ss
cli
sar
jmp
xor
ret
in
mov
out
and
stc
xor
repz
mov
sbb
fidiv
fld
sahf
jmp
lea
pop
outs
push
pusha
popf
hlt
pushf
fdivr
jne
pop
mov
and
mov
pop
mov
lods
jmp
out
ret
push
ret
pop
test
add
push
or
inc
dec
push
inc
std
adc
in
add
lahf
jmp
shl
cmps
mov
pop
pop
push
shld
scas
dec
push
out
cmp
xor
ret
jae
push
in
adc
cs
adc
mov
jno
ins
add
je
push
cli
mov
shl
jmp
adc
popa
or
(bad)
jb
dec
out
fild
xchg
lds
xor
inc
and
xchg
fdiv
sub
jo
xor
call
sbb
shr
jle
sub
push
or
mov
adc
fcomp
repz
in
in
xlat
mov
push
nop
sub
inc
xor
jns
xor
and
(bad)
dec
and
mov
enter
shr
pop
dec
mov
mov
cmps
pop
dec
jae
ret
arpl
imul
xchg
fbstp
popf
sar
lods
or
jmp
mov
and
out
jbe
adc
aam
or
sbb
mov
(bad)
ja
pop
pusha
imul
sub
in
jge
mov
outs
inc
xor
mov
fsubr
in
mov
cli
mov
test
les
xlat
call
fisttp
xchg
cmps
xchg
repz
nop
psubusw
sub
inc
dec
je
ret
mov
inc
mov
add
enter
fcomp
push
outs
daa
ficom
dec
mov
xchg
and
bnd
jns
sub
call
xchg
test
test
dec
xchg
sub
ret
std
cmp
repnz
in
icebp
xchg
inc
inc
ins
xchg
xchg
push
sub
mov
xchg
sahf
mov
int3
xchg
jbe
mov
stc
div
int
mov
mov
jb
imul
pushw
mov
sbb
pop
mov
mov
dec
sub
mov
mov
mov
aad
sbb
xchg
not
popf
mov
inc
cmps
call
dec
push
inc
xor
pop
jp
mov
sub
pop
jg
enter
scas
or
ror
out
fidivr
mov
sbb
add
sub
or
jno
js
xchg
test
add
outs
mov
add
ins
outs
in
scas
enter
and
stos
call
adc
aas
test
aaa
sar
enter
add
jno
or
xchg
sub
pop
inc
out
pop
sub
xchg
xor
movs
fwait
in
loop
sbb
sub
(bad)
shl
and
ja
into
and
xchg
xlat
out
sbb
sub
hlt
pop
add
xchg
mov
add
sahf
out
bound
push
mov
pop
bound
test
sti
xor
add
push
in
dec
pop
mov
sti
out
jecxz
xor
pop
inc
xchg
arpl
cmps
sub
sbb
or
push
xor
push
push
lods
mov
ins
sub
dec
out
pop
jmp
outs
pop
jns
cs
cmp
adc
pop
xor
aam
sub
mov
mov
jno
ins
call
loop
lea
jb
dec
add
inc
imul
data16
dec
outs
shr
jno
mov
jb
fmul
pop
cdq
addr16
xor
xor
out
adc
shl
xor
inc
push
lea
stc
add
push
icebp
dec
inc
cmp
cmp
test
sbb
fld
stc
arpl
dec
inc
mov
loop
test
jmp
in
cli
add
push
or
push
dec
out
daa
sub
xchg
int3
and
mov
mov
mov
sbb
cmp
mov
inc
push
inc
into
xor
push
adc
xchg
mov
rcr
btc
push
stos
sbb
dec
aaa
shl
out
xchg
jle
add
sub
pop
repnz
mov
in
jge
xchg
fsubp
jecxz
jmp
pause
mov
imul
adc
loopne
pop
sahf
cmp
int3
idiv
jge
into
push
add
or
pop
mov
std
pop
int3
or
sbb
xor
jnp
out
lock
jmp
xchg
mov
jno
(bad)
and
icebp
neg
xor
or
inc
push
inc
div
mov
mov
gs
mov
lock
arpl
xchg
add
or
xor
mov
mov
lock
add
les
dec
out
xchg
mov
mov
call
jp
sbb
mov
xchg
xchg
jae
fisubr
and
inc
cld
adc
movs
mov
ret
arpl
or
ret
frstor
fs
mov
cmp
jns
(bad)
cmp
sbb
inc
ficomp
and
fdivr
xchg
sub
inc
mov
cmp
push
dec
jne
and
mov
ds
mov
add
sub
stc
fdivp
(bad)
cmp
iret
rol
inc
arpl
cmps
xchg
push
mov
adc
lds
xchg
scas
mov
mov
shl
in
xor
fst
popf
adc
xchg
sub
xchg
dec
push
dec
pop
sbb
add
js
mov
pop
rcr
xchg
push
das
push
jmp
sub
std
out
adc
dec
int3
cmp
mov
sub
pop
adc
sub
push
ret
sbb
sbb
xlat
sbb
out
mov
cwde
retf
xchg
xor
ret
cld
fs
pop
inc
loope
cmc
lahf
inc
stc
sub
fs
jmp
loopne
clc
adc
inc
nop
xor
pop
mov
add
jae
out
or
sti
ds
pop
xchg
mov
repnz
cwde
daa
imul
dec
mov
push
jecxz
push
or
dec
int
jp
fstp
fsub
int3
mov
mov
pop
cli
dec
mov
cmp
dec
add
or
dec
adc
adc
xchg
movs
arpl
mov
jmp
popf
and
pushf
push
outs
jle
sub
jl
out
cwde
(bad)
pop
mov
xor
ror
mov
xor
mov
mov
test
cmp
std
repnz
aad
or
iret
out
stos
add
(bad)
cli
out
sti
or
aas
clc
adc
pop
and
add
out
pop
loopne
jmp
adc
xchg
or
and
or
mov
shl
cwde
in
in
loopne
mov
jmp
pop
int
mov
popf
cdq
ins
out
sahf
inc
xlat
imul
sub
fucomi
inc
adc
loop
cmc
push
nop
call
pop
push
sub
pop
in
sbb
push
das
es
push
mov
ret
mov
mov
pop
and
add
mov
push
sub
lds
sahf
dec
sub
scas
test
adc
call
sub
add
jo
push
jge
push
mov
mov
in
adc
pop
jbe
ret
fiadd
or
imul
mov
aad
mov
data16
ror
aaa
push
cmps
hlt
pushf
xor
push
nop
fnstenv
iret
push
jge
retf
std
inc
cmp
jp
movs
inc
cmp
jmp
std
xchg
sbb
loope
push
loope
xchg
pop
and
sub
push
push
dec
cld
(bad)
loope
push
mov
lods
data16
(bad)
out
add
xchg
pusha
pop
lods
push
adc
call
jbe
arpl
pop
xchg
jne
bnd
ss
daa
and
daa
jo
pop
mov
pop
sbb
jg
lods
ret
mov
xchg
xchg
and
add
nop
inc
fs
cmp
fcmovu
int
ret
dec
fwait
div
mul
xchg
retf
jg
sbb
push
(bad)
add
ins
pop
sbb
mov
enter
sbb
enter
dec
sti
sar
int3
test
adc
sub
popf
inc
and
mov
add
xchg
(bad)
mov
fild
mov
out
(bad)
fsubr
jmp
es
leave
jl
xor
cmp
adc
mov
add
das
pushw
into
repz
dec
jle
icebp
jbe
rdmsr
rcr
jmp
loop
adc
je
fimul
or
ret
jl
inc
jae
xchg
inc
jb
pop
add
pop
add
outs
mov
ins
in
pop
sub
enter
push
repnz
into
jne
mov
(bad)
mov
and
rcl
pop
pop
xchg
jbe
jge
xor
out
ret
loop
mov
sbb
cmp
inc
ins
call
add
sub
push
push
pop
out
adc
cli
dec
ret
cld
dec
sbb
imul
(bad)
int
mov
push
mov
cmp
pop
xor
lds
inc
cmps
pop
or
popa
into
mov
mov
pop
and
(bad)
lea
mov
inc
jle
jae
or
mov
mov
test
inc
inc
cmp
xchg
mov
adc
adc
cmp
add
imul
add
ja
loope
(bad)
bound
xlat
shr
cmp
fs
das
or
adc
inc
mov
stos
ror
pop
inc
(bad)
popa
cmp
mov
(bad)
call
fs
and
mov
gs
cwde
div
dec
jb
dec
mov
stc
retf
outs
xor
mov
mov
jno
loopne
mov
xor
inc
stos
dec
mov
push
out
mov
inc
push
mov
dec
bound
(bad)
(bad)
push
out
fadd
pusha
sbb
jecxz
mov
addr16
in
inc
scas
jnp
mov
cmp
mov
pop
push
and
sub
leave
cmp
pop
cld
mov
xchg
xchg
cmp
dec
push
mov
inc
push
mov
sub
xchg
pop
btr
pop
fwait
repnz
or
enter
sub
repnz
sub
xchg
jge
adc
clc
mov
and
jg
out
adc
cmps
adc
(bad)
jno
push
outs
mov
xor
push
pop
cmc
or
and
movs
mov
rcr
bound
add
sub
rcr
out
adc
xor
jnp
push
mov
sub
les
enter
jmp
loope
cmp
pop
mov
loopne
push
cld
mov
arpl
iret
movs
mov
out
loopne
scas
nop
out
gs
adc
fucom
loop
cmp
push
xchg
cli
sub
cld
cmp
inc
sar
add
jnp
shl
push
sub
xchg
lahf
fsubr
frstpm(287
adc
scas
fstp
xor
test
lds
pop
sub
leave
in
fwait
cmp
xor
xchg
enter
out
xchg
sub
repnz
xchg
in
push
arpl
cmc
jle
sbb
popa
pop
push
and
sub
jo
cmp
xchg
xchg
jle
or
retf
mov
leave
stos
repz
adc
outs
repnz
mov
dec
retf
pusha
xchg
and
and
dec
stos
retf
dec
and
mov
sti
mov
mov
cmp
into
jmp
xchg
xchg
repnz
mov
xchg
mov
gs
push
fst
add
movs
adc
mov
test
xor
cld
cmp
retf
dec
xchg
repz
in
aam
in
jge
inc
jno
cdq
lea
push
push
aad
xchg
mov
adc
shl
jg
cmp
mov
fsin
and
mov
leave
iret
add
xchg
ret
cmp
stc
push
and
(bad)
fistp
sbb
push
shl
ja
dec
inc
sbb
int3
cmp
lds
jmp
aas
(bad)
lock
test
rcl
les
inc
loopne
sub
xchg
mov
xchg
push
je
sahf
sbb
or
jb
je
push
(bad)
push
mov
or
arpl
sahf
into
inc
or
fidiv
pop
ds
cwde
push
(bad)
or
(bad)
fst
or
ror
(bad)
sbb
add
jmp
xor
int
push
pop
outs
jecxz
(bad)
add
adc
sahf
dec
mov
sbb
push
test
aas
nop
ss
(bad)
loop
mov
cmp
ins
jl
pop
movs
test
jns
sub
jmp
mov
inc
adc
std
in
mov
cmp
fs
mov
xchg
sbb
pushf
cld
pop
mov
inc
fiadd
pop
jne
lock
mov
adc
dec
adc
pop
dec
loope
pushf
cmps
lahf
sar
and
dec
fcmovne
and
sub
dec
mov
shl
jge
mov
mov
dec
adc
fwait
push
(bad)
or
lods
iret
sti
xor
sub
xchg
xchg
scas
add
shl
dec
call
test
rol
jle
pop
aam
popf
mov
(bad)
or
imul
pop
push
mov
ss
test
in
ret
rcl
out
push
fsubr
or
inc
out
fist
rcl
fcomp
outs
mov
enter
jno
clc
icebp
dec
std
in
loopne
in
mov
addr16
sbb
ss
(bad)
sbb
je
sbb
lds
pop
jp
out
imul
cmps
adc
push
push
test
int
fnstsw
sahf
test
jnp
add
add
jp
fdiv
pop
jp
or
sbb
inc
ja
push
xchg
iret
fcomp
ins
ret
data16
test
jb
cmc
mov
fdiv
jmp
adc
in
repz
test
stos
fdiv
xchg
push
daa
fs
pop
pop
ja
cmps
xor
pop
imul
jecxz
std
mov
dec
in
pop
and
cwde
test
xchg
xchg
add
or
in
jns
hlt
stos
clc
sub
xor
sbb
retf
mov
sbb
out
jae
and
out
in
ins
push
xor
jno
shl
xchg
pop
adc
pop
or
mov
imul
mov
jne
mov
xor
mov
cmc
pop
push
scas
lods
test
cs
daa
and
neg
cmps
jae
sbb
repz
dec
pushf
push
push
add
jno
inc
stos
and
and
addr16
imul
sub
jmp
mov
add
arpl
cmp
mov
test
ret
cmpxchg
outs
mov
ja
sbb
cld
xchg
jle
push
iret
adc
cld
ins
jns
and
and
aaa
les
and
inc
std
mov
iret
mov
or
je
bnd
jnp
xchg
(bad)
in
(bad)
scas
je
mov
dec
cli
mov
and
xor
jmp
lds
mov
les
movs
call
or
sbb
xor
aaa
pop
jl
cmp
or
mov
xor
cmps
sbb
in
loop
mov
loop
lea
mov
(bad)
sub
mov
push
mov
inc
xor
mov
inc
fadd
push
pop
jmp
neg
xchg
ret
sar
mov
je
pop
jo
push
les
xor
add
mov
out
push
mov
retf
cwde
arpl
jmp
fcom
lods
jae
mov
sbb
clc
cmps
gs
std
push
sbb
xchg
pop
xlat
add
(bad)
cmps
jmp
shr
xchg
or
fwait
adc
sbb
pushf
cmps
mov
jmp
fist
stc
inc
or
xchg
or
pop
jnp
repnz
je
cwde
xor
sbb
outs
pop
and
mov
lods
add
ins
rol
shl
xchg
imul
push
sti
(bad)
mov
push
stos
xchg
sub
cmc
dec
out
gs
lea
pop
stc
xor
jne
movs
mov
int3
cdq
fisub
mov
mov
mov
and
lea
sub
popa
iret
scas
fucomp
and
adc
pushf
push
jae
xor
fdivr
jle
sbb
push
(bad)
adc
int
aad
sub
mov
jnp
add
std
mov
push
retf
pop
inc
add
int3
dec
inc
dec
sbb
out
add
das
mov
into
mov
and
es
je
add
dec
jnp
sbb
inc
pushf
mov
clc
pop
xchg
inc
addr16
gs
movs
mov
push
movs
push
cmc
std
inc
xchg
and
call
lea
sahf
lahf
adc
cwde
push
les
jns
nop
mov
sbb
and
cmc
mov
mov
leave
out
xchg
lgs
or
pop
(bad)
stos
stos
outs
sbb
or
jo
inc
mov
lahf
pop
push
jae
mov
fs
sbb
jno
pop
data16
mov
and
cmc
adc
into
das
mov
jmp
push
mov
or
cmp
jns
cmps
outs
test
inc
mov
fist
test
mov
ds
sub
test
jmp
(bad)
sbb
xchg
mov
out
mov
stos
rol
sub
enter
in
mov
pushf
mov
pop
mov
scas
dec
icebp
xor
sbb
mov
jne
into
xchg
cld
sbb
ins
sbb
xchg
jle
(bad)
das
sub
fnstsw
sti
sbb
imul
dec
xor
dec
adc
(bad)
test
movq
jno
add
scas
push
cwde
inc
xlat
pusha
dec
adc
rcl
mov
inc
dec
add
push
lock
jmp
lods
fnstenv
(bad)
and
mov
adc
pop
hlt
sbb
mov
cdq
pop
mov
jns
xchg
inc
push
sbb
or
xor
repnz
dec
push
xlat
popf
mov
pop
out
push
pop
cmp
mov
xlat
xlat
sub
sahf
or
fwait
mov
fs
fistp
xchg
test
aas
pop
xchg
test
cmp
mov
mov
xor
mov
in
pop
push
stos
inc
shr
xor
sub
scas
adc
sbb
ins
cmps
jmp
push
aad
xor
pop
div
outs
push
push
mov
mov
push
cmp
push
call
mov
xchg
cmps
arpl
xchg
sub
sbb
sahf
xor
aaa
loopne
dec
leave
pop
lods
cmp
punpcklbw
hlt
and
(bad)
cmp
call
or
mov
adc
push
or
pop
sub
into
dec
sub
shl
cwde
sub
or
xlat
sbb
outs
ja
pop
hlt
sub
add
ins
test
movs
add
aaa
or
dec
dec
inc
lea
jno
mov
mov
jp
and
add
mov
retf
mov
and
mov
fstp
jmp
sar
ficomp
mov
push
shl
add
jne
inc
push
cld
dec
mov
(bad)
icebp
pop
stc
test
dec
adc
and
adc
aas
loope
popf
jp
ds
nop
aaa
sbb
or
imul
or
scas
xlat
imul
stc
sbb
or
cmc
sbb
inc
xchg
mov
mul
xchg
test
sbb
shl
push
call
js
add
arpl
data16
pop
mov
popf
jae
outs
je
add
fdivr
stos
push
or
cmp
mov
outs
fdiv
mov
loopne
inc
ret
adc
ja
icebp
mov
adc
or
adc
adc
pop
push
xchg
ret
fadd
cmps
das
mov
sub
cmp
or
cs
mov
jge
xor
lds
ret
(bad)
pop
push
aas
push
adc
or
stos
push
mov
push
clc
add
nop
shl
(bad)
sub
pop
mov
jno
mov
call
pop
and
outs
loope
inc
sbb
push
cmp
sar
fiadd
dec
xor
fldenv
push
cs
push
xchg
(bad)
xor
ret
and
cmps
jp
and
iret
popf
mov
cld
add
jge
dec
test
adc
pushf
aam
js
and
push
adc
xchg
pusha
mov
loopne
cmp
pusha
(bad)
(bad)
and
in
aas
rcr
mov
push
jns
aaa
mov
mov
lahf
mov
or
cmovge
sbb
xor
sub
jl
cmp
pop
sub
or
and
js
and
mov
jg
hlt
test
imul
fwait
inc
jno
mov
arpl
arpl
stos
inc
lods
in
adc
aas
mov
add
xlat
pop
cmps
add
push
jecxz
jle
sbb
addr16
jnp
rol
push
adc
push
dec
mov
pop
shl
inc
mov
pop
xor
cmc
jmp
pushf
jo
jg
mov
inc
pop
fld
adc
push
mov
sbb
xchg
or
test
mov
xor
push
or
pop
sub
sub
sbb
fbstp
add
in
xor
push
xchg
mov
sub
outs
pop
push
mov
xchg
sub
jg
adc
pop
(bad)
fisttp
jb
dec
in
adc
mov
imul
mov
mov
pop
fwait
cmp
loope
and
sahf
js
ins
cmp
push
(bad)
inc
loop
aam
push
(bad)
hlt
mov
gs
cmp
dec
dec
stc
pop
dec
inc
sbb
loop
cmp
repnz
sbb
jbe
jmp
retf
mov
loop
(bad)
cdq
iret
sahf
(bad)
int
add
dec
aaa
push
push
jmp
push
xor
ret
leavew
pop
inc
int
dec
inc
xor
fwait
cmp
shl
sbb
sub
test
scas
test
int3
jge
xchg
mov
pop
sub
test
jns
ror
das
jle
call
out
or
rol
jg
push
pop
cmc
lods
xchg
mov
dec
pop
loopne
int3
push
shl
repnz
ins
xchg
retf
clc
pop
stos
adc
imul
pop
push
stos
jb
pop
aas
push
mov
jg
push
je
xor
test
adc
mov
cmp
retf
mov
jmp
mov
jo
mov
mov
dec
retf
repnz
add
xchg
or
fcmove
les
mov
pop
lds
fs
(bad)
(bad)
pop
mov
neg
sub
js
cli
movs
lods
out
xchg
in
cs
push
jp
pop
cs
popa
adc
ret
call
es
or
enter
je
push
pop
ja
and
jp
lock
or
out
data16
cmp
xchg
pop
call
or
jns
repnz
jne
ror
jecxz
cld
mov
xor
hlt
jo
add
outs
mov
les
xchg
inc
(bad)
movs
mov
xlat
cmp
jae
std
mov
mov
fwait
and
clc
pop
cmps
dec
jl
or
mov
fnstenv
shl
scas
pop
test
adc
jp
fld
xchg
lods
add
icebp
dec
sbb
push
mov
xchg
jbe
retf
lock
pop
or
imul
mov
fsubp
xchg
jnp
inc
jecxz
psubb
jecxz
prefetch
movs
gs
jg
xor
pop
jg
xchg
and
lahf
jge
pop
mov
push
inc
lock
loope
dec
addr16
jmp
fwait
and
cld
shl
(bad)
loopne
pusha
cdq
pop
in
es
and
and
dec
push
cmp
sub
sbb
fidivr
hlt
xchg
sbb
fwait
cmp
inc
(bad)
push
adc
aas
ss
enter
lahf
pop
jo
mov
push
xor
retf
jmp
js
ja
fldlg2
ins
or
(bad)
arpl
jnp
rol
cdq
add
sti
ins
test
out
push
adc
and
cwde
add
jecxz
movs
cli
xchg
sub
bound
repnz
pop
mov
xchg
lds
fwait
fs
or
inc
inc
ret
mov
mul
fs
xchg
or
mov
rcr
dec
retf
inc
(bad)
cdq
js
cmp
lods
jnp
shr
jmp
push
adc
ja
(bad)
cld
clc
call
(bad)
xor
mov
(bad)
pop
lods
sub
push
cmp
mov
out
cli
data16
outs
aad
fistp
mov
and
cld
test
fs
jae
and
fst
fst
sub
popa
cmc
sti
xchg
and
mov
push
mov
into
pop
(bad)
(bad)
ins
add
(bad)
stc
pop
ins
dec
sub
retf
icebp
js
xor
in
or
jmp
leave
xchg
inc
lea
mov
jl
and
sar
das
mov
int
ins
push
lods
dec
bound
jmp
in
mov
cmps
inc
mov
dec
xchg
push
pop
imul
xor
ds
mov
push
test
xor
dec
lods
jbe
adc
add
test
xor
call
dec
adc
cmpunordps
sbb
fsub
adc
sahf
gs
sahf
shl
add
stos
fs
fldenv
mov
mov
fcmove
jp
inc
and
pop
or
xchg
jp
(bad)
jmp
fwait
out
fwait
mov
cmp
icebp
out
add
cmp
shl
fnstcw
int
call
pop
aam
mov
outs
dec
push
clc
mov
popa
xor
sbb
repnz
xor
test
rcl
cmp
jbe
mov
dec
mov
lods
cld
and
and
sub
mov
jge
fs
ins
mov
lods
test
daa
mov
ret
(bad)
in
push
dec
sbb
push
push
mov
push
cmps
xchg
mov
xor
bound
push
pop
xchg
add
xchg
aaa
jg
lahf
xchg
std
inc
jmp
push
adc
push
outs
jecxz
jno
add
sbb
sahf
xor
adc
jg
frstor
or
(bad)
pop
pushf
imul
mov
test
jnp
mov
add
das
gs
ficomp
and
jge
and
mov
push
lods
adc
popf
inc
xchg
xchg
hlt
std
cdq
pop
mov
pop
adc
inc
cmp
and
sbb
and
aaa
jo
test
or
retf
pop
adc
(bad)
jae
xor
dec
in
sbb
push
cmp
xchg
sar
pushf
mov
inc
ins
push
sub
enter
popf
or
push
dec
and
in
mov
mov
in
ds
sbb
movs
xchg
xlat
push
inc
cmp
adc
mov
jl
les
pop
leave
mov
movs
jb
jecxz
sar
xor
xchg
pop
inc
jb
iret
shr
pop
sbb
pop
popf
xchg
call
and
imul
pushf
in
jle
dec
jle
ret
adc
iret
in
inc
(bad)
mov
adc
push
jo
in
cmps
mov
sbb
pop
daa
das
jo
jle
clc
int3
fstp
mov
daa
test
cmps
test
test
dec
xchg
mov
mov
mov
mov
pop
jg
cmp
cmps
shr
pop
and
xchg
cmp
ins
dec
cmc
popf
(bad)
xchg
push
or
out
ror
xor
pushf
cli
(bad)
mov
inc
add
fwait
mov
cdq
icebp
fimul
test
push
mov
add
or
push
inc
sar
mov
mov
xor
aaa
fsubr
adc
jne
sahf
(bad)
loop
stc
xor
ins
mov
outs
sub
int
out
stos
add
(bad)
mov
cmps
jne
cwde
clc
dec
fld
ins
xor
gs
fcom
xchg
jge
cmps
enter
jmp
or
out
int3
xchg
aas
clc
and
not
cmc
stos
(bad)
pop
cmp
jmp
pop
jg
ins
dec
dec
sbb
pop
sub
sbb
(bad)
and
dec
(bad)
lds
fs
fldcw
clc
xchg
lods
pop
sahf
(bad)
aad
fwait
movs
loop
dec
push
fld
add
cmp
andnps
mov
repz
fisubr
repnz
mov
cmp
sub
pop
xchg
je
stos
cmps
mov
dec
inc
addr16
adc
sbb
stc
neg
cmp
fmul
sub
push
ja
pop
cmp
fnstenv
and
stc
or
pop
mov
ret
stos
mov
js
jo
cli
fnsave
nop
ins
pop
lods
sar
push
mov
jmp
mul
lea
sbb
or
rol
push
xchg
pop
jge
jg
int3
sub
bswap
xchg
and
das
mov
aam
outs
dec
mov
cvtdq2ps
sub
sbb
mov
fld
dec
cmp
mov
adc
mov
retf
jg
test
les
xchg
push
repz
jae
xor
fadd
cmp
and
jmp
sub
cmp
mov
call
loop
push
lahf
movs
ret
popf
cli
jp
call
stos
xchg
jmp
ja
in
std
call
mov
xchg
and
out
loop
ja
or
mov
push
dec
cmp
adc
sbb
and
sub
jbe
(bad)
pushf
xor
loope
cld
scas
lods
loop
fabs
push
and
push
mov
or
icebp
inc
retf
movs
gs
push
cmp
shl
mov
jmp
ret
or
cmp
sub
fs
pushf
mov
add
imul
rcl
pop
and
add
jns
sbb
into
jecxz
mov
xor
in
bound
push
icebp
xchg
ins
mov
inc
pop
and
out
or
and
sbb
daa
lock
lea
rcl
xchg
adc
adc
shl
add
ja
imul
imul
pop
(bad)
js
ins
push
or
fisttp
pop
rcr
jb
call
jg
cwde
test
jge
imul
in
jnp
aam
test
sbb
or
add
(bad)
jecxz
xor
lods
ja
dec
xchg
into
push
inc
and
(bad)
mov
sub
shl
das
jmp
pop
jae
mov
mov
xor
jno
or
inc
push
retf
add
loopne
push
xchg
shl
adc
ins
and
les
daa
movs
jle
adc
ror
sbb
jnp
push
sub
in
adc
rcr
xlat
fcomp
call
and
sub
pop
lea
xor
xor
jo
xchg
sbb
pop
arpl
mov
dec
pop
pop
mov
push
inc
push
aam
push
pusha
jns
dec
push
mov
add
sahf
es
out
ja
mov
cmp
fldenv
cmp
jecxz
sub
push
je
inc
jb
call
lods
gs
inc
xor
sbb
or
dec
jae
lock
jmp
cmps
cmp
sahf
ins
jl
cmp
inc
mov
push
sahf
adc
loope
push
add
xor
xchg
inc
mov
mov
mov
jg
inc
push
sbb
imul
clc
ret
ins
mov
iret
xchg
fwait
jmp
sub
test
(bad)
fadd
sbb
mov
ja
xor
adc
popf
adc
and
jge
pop
and
cmp
les
mov
in
or
jp
repz
into
mov
xchg
shl
aas
push
out
push
not
sub
fcom
sbb
(bad)
push
scas
xchg
or
shl
add
push
jge
test
icebp
pop
aaa
jb
outs
mov
push
inc
sub
loop
dec
adc
in
repnz
xchg
outs
pop
dec
and
pop
in
in
and
js
(bad)
stc
sub
jae
cdq
sub
mov
add
push
cmc
fcmovnbe
sbb
iret
xchg
inc
out
loop
push
scas
in
sbb
xchg
dec
dec
cdq
sbb
es
xchg
not
pop
push
aas
lds
icebp
push
ins
inc
mov
pop
ret
add
mov
std
rcr
fiadd
cli
push
mov
popf
ja
cmps
and
sbb
enter
mov
daa
pop
rcl
mov
jmp
call
cmp
test
jecxz
jno
imul
or
jno
cmp
jbe
xchg
cmps
cdq
lahf
mov
lods
clc
mov
nop
add
movs
mov
push
xor
xor
jno
imul
fidiv
das
shl
mov
add
in
fwait
mov
cmp
pop
push
add
bound
inc
aaa
push
jb
cmp
add
sbb
jmp
mul
jge
sub
cmovl
mov
mov
lods
mov
dec
and
cmp
in
jmp
mov
xchg
xchg
pushf
dec
mov
pop
jmp
cmps
loopne
fistp
test
jmp
add
cmc
push
push
out
clc
dec
xor
icebp
pop
mov
xor
or
push
and
xchg
cmp
in
scas
adc
jo
loopne
add
jno
(bad)
pop
je
cdq
aad
ss
into
inc
xchg
popa
rcl
test
xchg
call
aaa
push
in
int
mov
idiv
mov
xchg
je
dec
add
imul
cli
xchg
xlat
fstp
adc
test
loopne
jno
aad
jl
push
dec
adc
rep
ins
and
inc
fwait
pop
pop
xor
aad
adc
shl
cwde
les
cmp
jns
test
add
popf
cwde
add
nop
sbb
jo
pop
not
xor
scas
iret
lea
or
xor
into
and
jp
inc
inc
mov
mov
aad
aad
ret
in
add
mov
inc
push
ss
imul
(bad)
sbb
mov
ins
mov
xchg
push
(bad)
loopne
dec
cmps
sub
adc
mov
mov
enter
mov
add
in
inc
sti
add
repz
mov
push
daa
mov
inc
pushf
dec
fs
loope
mov
jb
and
shl
pop
adc
stos
repz
pop
push
loope
rol
mov
popf
xor
mov
or
and
cdq
pusha
xchg
pop
pop
cmps
test
cs
fist
xor
xchg
adc
dec
in
je
inc
adc
(bad)
pop
jne
mov
inc
cmps
xchg
aas
stc
jmp
sub
fst
dec
pop
inc
lock
lods
and
inc
movs
cmps
aaa
dec
xchg
add
jb
xor
loopne
push
xor
adc
xchg
xlat
adc
or
push
mov
adc
xchg
test
test
dec
shl
push
lods
xor
dec
imul
ins
jns
hlt
mov
loope
stc
aas
pop
add
cmps
sub
cs
xor
add
(bad)
scas
rol
test
xor
out
jecxz
lahf
sbb
pusha
stc
mov
fwait
and
arpl
jae
push
push
ja
ret
and
mov
test
dec
xor
inc
movs
cmp
(bad)
test
inc
and
jno
invd
movs
lock
aam
or
xchg
shr
dec
test
xor
sbb
mov
dec
mov
xchg
jo
push
lock
jl
jl
shr
fs
pop
(bad)
inc
pop
scas
inc
sub
adc
in
xchg
imul
push
pop
and
jne
out
pop
aaa
mov
mov
inc
xor
ss
cdq
sbb
sub
jl
rcr
mov
je
jo
add
test
xor
jge
cdq
mov
call
or
mov
mov
inc
mov
push
scas
iret
(bad)
jmp
retf
cmps
dec
out
daa
sbb
mov
js
adc
(bad)
sbb
out
retf
jmp
sbb
shl
push
xlat
cli
fucomp
(bad)
fcomip
fnstsw
jle
stos
popa
frstor
movs
je
adc
fild
mov
jne
js
dec
push
sub
in
sbb
sbb
add
movs
pop
out
mov
out
dec
movs
xchg
or
loop
test
jg
or
enter
das
stc
loop
aas
cmp
imul
inc
xor
push
es
cmp
fst
lock
scas
ret
test
scas
adc
jl
sti
fcom
sub
sbb
dec
dec
(bad)
pop
lahf
in
jl
pop
ins
sbb
push
pop
jg
mov
jg
fcomp
jae
(bad)
and
inc
or
push
(bad)
icebp
icebp
lds
dec
pop
test
jge
sar
pop
and
lea
inc
inc
nop
je
mov
(bad)
and
cmc
repnz
(bad)
dec
mov
cwde
retf
outs
adc
cdq
push
rcl
clc
pop
and
dec
sub
xor
cmps
dec
out
ins
pop
or
fidivr
retf
nop
push
(bad)
leave
jge
and
push
in
clc
mov
enter
sub
xor
scas
adc
test
mov
add
sti
pop
mov
retf
and
mov
rcl
lahf
and
not
adc
sti
loop
popa
outs
adc
ret
sti
adc
popf
(bad)
out
les
cmp
cmc
fild
or
pop
and
sti
sbb
lock
(bad)
push
adc
jne
test
jecxz
stc
inc
xor
pop
pusha
push
xchg
es
cld
int3
je
and
out
push
sar
neg
sbb
out
adc
push
mov
das
rol
xchg
xchg
or
and
rol
dec
dec
xor
stc
mov
es
sti
inc
gs
adc
in
fistp
in
jb
jo
retf
pop
test
or
sub
and
adc
inc
xchg
sbb
jmp
jl
aaa
inc
sub
test
out
xor
sbb
add
mov
sub
neg
add
xchg
aas
scas
add
call
cwde
xor
(bad)
in
pop
cmp
mov
mov
test
dec
adc
rcl
mov
sub
fsub
adc
(bad)
push
test
mov
mov
lahf
aad
pop
gs
push
addr16
and
(bad)
outs
into
mov
ja
(bad)
dec
jle
and
cwde
ret
test
ret
movs
mov
call
(bad)
mov
popf
dec
retf
ror
push
lods
push
fidiv
sbb
ss
push
into
fcom
xor
sbb
sbb
dec
pop
pop
push
pop
popa
adc
lods
push
mov
cmp
cld
cmps
ret
fs
mov
sbb
add
ins
clc
not
cmp
loope
xchg
stos
push
add
outs
sub
xchg
sbb
rol
push
aaa
inc
ss
adc
xchg
inc
fwait
sub
rol
and
xchg
ins
mov
mov
outs
shr
and
mov
dec
push
shl
je
(bad)
(bad)
ins
fbld
xor
mov
inc
daa
loop
fimul
adc
mov
out
push
ffreep
sbb
pop
leave
mov
adc
adc
arpl
popf
into
daa
(bad)
sbb
fistp
addr16
mov
fnsave
mov
ins
inc
cdq
into
rcl
adc
cdq
fnstsw
jb
xor
fcomp
cwde
mov
add
xchg
pop
xchg
adc
mov
jb
mov
out
mov
push
mov
mov
or
pop
ret
in
mov
pop
dec
bound
das
lods
sub
push
push
inc
fs
mov
cwde
iret
addr16
mov
out
test
jo
pop
pop
push
in
shl
mov
in
pop
popa
and
retf
or
jmp
jns
inc
rol
xor
ss
in
jl
cmp
gs
cmps
inc
adc
cli
ret
adc
outs
mov
mov
cld
xchg
repnz
pop
jmp
jle
ja
inc
inc
adc
cmp
push
mov
mov
neg
pop
loope
fwait
cmps
cmp
mov
addr16
add
sub
mov
mov
in
das
cs
es
adc
adc
movs
clc
pop
mov
ret
push
rol
in
sar
xchg
mov
xchg
jbe
sub
out
jl
imul
aad
dec
imul
in
pop
fcomp
push
xchg
add
or
mov
jb
mov
xchg
push
addr16
ja
cmp
and
test
rol
push
imul
pop
push
aas
xchg
ds
jecxz
les
iret
cs
mov
pop
aam
pop
xlat
jns
js
mov
pop
jbe
(bad)
xor
push
test
rol
dec
cmp
scas
xchg
sub
jle
cmp
pop
lods
xor
js
add
fxch
sbb
cmp
in
mov
cld
push
xchg
bound
cmp
and
popa
inc
pushf
scas
mov
aad
add
dec
mov
or
or
mov
call
xor
sahf
outs
push
jb
mov
inc
ret
in
ret
or
mov
mov
fnstsw
jno
xchg
sub
xchg
pop
in
lock
and
pushf
mov
jg
test
mov
lahf
push
inc
fsub
pop
pushf
and
popa
push
jb
xchg
xchg
int
jbe
(bad)
shl
cwde
add
cmp
into
push
jb
mov
dec
addr16
test
lds
push
sti
ficom
icebp
addr16
mov
and
dec
aas
(bad)
jo
sub
in
stc
mov
in
xor
adc
stc
mov
dec
movs
add
mov
int
aas
sti
fiadd
cmp
cli
jo
adc
push
pop
fld
mov
or
cli
inc
xor
xchg
out
pop
ret
jns
add
dec
and
cld
pop
xchg
inc
pusha
cmp
test
(bad)
js
imul
repnz
inc
mov
jp
fwait
out
and
inc
jecxz
imul
aam
fld
dec
xchg
aad
or
int3
and
int
mov
jbe
inc
adc
push
xrelease
xor
mov
stos
pushf
jecxz
push
jnp
int
retf
in
adc
out
jp
xlat
ins
out
sbb
mov
add
stos
xchg
push
mov
push
pop
pop
adc
jmp
jp
cmp
or
adc
push
call
sbb
mov
push
cs
and
sub
test
fnsave
out
das
jb
dec
cmps
and
sub
jo
js
sbb
or
jns
adc
popa
int
mov
push
movs
ja
inc
cmp
mov
or
pop
bnd
add
dec
(bad)
std
div
data16
jecxz
scas
loop
xchg
in
into
hlt
mov
xchg
cwde
push
aas
fadd
mov
mov
pop
cmc
mov
cmp
mov
and
xor
jle
test
mov
xchg
retf
stc
jo
mov
(bad)
or
jmp
lods
popa
test
scas
xlat
and
lods
aad
cmps
add
scas
adc
add
push
cdq
inc
lods
push
je
adc
mov
popa
popa
rcl
retf
push
mov
xor
sub
sub
aaa
mov
jb
pusha
stc
xchg
jmp
movs
sahf
(bad)
call
in
popf
scas
fld
push
shl
(bad)
push
in
jg
or
cmps
xor
jecxz
push
mov
clc
stc
leave
jge
int3
cwde
cmps
repnz
int
mov
cli
das
fldcw
push
mov
sbb
mov
and
repnz
out
outs
stos
dec
rol
into
cmc
fiadd
xor
sub
adc
shr
ins
into
fisubr
addr16
xchg
or
adc
das
jae
mov
outs
mov
xor
div
test
es
jo
test
sub
jno
mov
xchg
shr
cmc
mov
(bad)
shl
pop
mov
add
xlat
test
jns
movntps
sbb
hlt
add
add
adc
mov
push
test
push
and
jmp
shl
pop
adc
outs
test
mov
(bad)
xchg
(bad)
jmp
adc
jl
sbb
cmp
imul
sti
iret
push
movs
cmp
mov
push
lahf
mov
inc
mov
sub
or
outs
ret
aas
dec
ins
add
cmp
xchg
fstp
dec
jo
jbe
(bad)
xor
xchg
ret
pushf
xchg
cmp
or
retf
mov
test
gs
inc
mov
or
add
sbb
xchg
mov
fdiv
lock
movs
mov
jnp
xchg
push
pop
inc
mov
scas
call
cmps
xchg
sub
dec
add
jns
push
xchg
cli
rcl
leave
int3
mov
mov
(bad)
mul
rol
xchg
jl
mov
dec
pop
cmps
sti
pop
mov
stos
jecxz
jge
fwait
and
xchg
cmp
repnz
fs
cld
clc
inc
sub
xor
dec
xor
xchg
mov
mov
and
mov
int3
addr16
cmp
push
cmp
pop
xchg
mov
cdq
stos
jmp
popf
mov
mov
jb
fiadd
jle
in
and
xchg
call
out
mov
and
dec
icebp
lods
ss
mov
pop
int
or
enter
jno
cmp
pop
test
out
in
sbb
push
(bad)
adc
pop
retf
sahf
inc
(bad)
or
lea
ja
xor
inc
sub
leave
jns
jmp
test
idiv
sub
fadd
pop
mov
pop
pop
xchg
enter
adc
ds
fisub
addr16
adc
pop
repz
pop
xchg
add
sub
xor
jmp
inc
xor
pop
lods
(bad)
fs
mov
dec
int
test
cli
movs
and
adc
lea
jmp
mov
push
shl
mov
setbe
and
dec
scas
jecxz
pop
out
lods
pop
or
ins
mov
fs
jb
mov
hlt
arpl
xchg
popa
add
je
cdq
cs
stos
loope
popa
push
call
sub
rol
jb
push
enter
mov
addr16
adc
in
cmp
cmp
lds
bound
lods
icebp
mov
outs
xor
popf
mov
jmp
mov
stos
rcl
pop
ss
cmps
scas
test
mov
sbb
in
icebp
xlat
test
ds
pop
cmp
inc
outs
pop
call
mov
push
or
xor
mov
jmp
cmp
xchg
loopne
imul
idiv
fdivr
aad
mov
std
xchg
adc
cmp
mov
inc
in
mov
mov
test
inc
popa
cmps
mov
xor
xor
inc
ss
or
loop
jg
inc
cmp
and
data16
stos
mov
test
push
icebp
retf
xor
mov
inc
or
or
fmul
cmps
dec
into
std
mov
out
mov
jmp
fwait
jl
pop
mov
(bad)
mov
add
sahf
shl
cwde
add
ja
out
inc
cmc
cld
and
or
stos
cmp
adc
icebp
in
xlat
lock
ins
mov
mov
repnz
dec
sbb
jbe
push
outs
adc
pop
dec
cwde
out
and
out
mov
push
into
xor
fsub
out
pop
loop
pop
xchg
sbb
imul
xor
sbb
mov
pop
inc
sbb
mov
or
sbb
repnz
sub
mov
call
lods
cwde
dec
test
movs
mov
test
fdivr
(bad)
cmps
or
mov
pop
cli
imul
or
push
jmp
shl
aad
push
ja
mov
xchg
leave
std
mov
in
sub
xchg
ins
rcl
mov
out
and
and
mov
iret
aaa
xlat
int3
xor
out
and
inc
sub
jb
int3
out
iret
sbb
popa
pop
xchg
mov
sahf
jb
cmps
in
cmp
sub
(bad)
int
arpl
std
cs
pop
and
in
dec
hlt
out
fs
pushf
xor
arpl
adc
cmp
ja
test
mov
aas
sub
shl
pop
aam
mov
xchg
sbb
mov
sbb
aam
ror
nop
sar
jle
in
xchg
scas
outs
frstor
sbb
cmp
icebp
ds
aaa
sbb
in
inc
mov
push
pushf
cmp
pop
adc
ins
or
stos
jp
ins
inc
mov
loop
fbstp
cmp
adc
inc
les
dec
adc
jecxz
pop
outs
movs
mov
ficomp
cs
ins
xor
imul
ret
in
push
mov
mov
mov
aad
rcr
dec
(bad)
dec
xchg
(bad)
rol
scas
fwait
cmc
repnz
xor
or
push
enter
xor
or
shl
sub
idiv
das
inc
dec
and
pop
jbe
push
or
adc
sub
adc
ins
adc
jns
sbb
cmps
ds
cli
pop
div
jo
inc
pop
cdq
push
lods
cmp
into
in
lea
jp
cmc
cmp
add
pop
test
and
jp
jno
retf
dec
jmp
mov
lods
outs
push
cmps
sub
mov
adc
cli
dec
out
mov
inc
sub
sbb
jne
cmps
jge
mov
fstp
(bad)
push
sti
cmp
in
sbb
jnp
outs
retf
adc
stos
div
add
stos
in
dec
cmp
out
int3
pop
loopne
inc
jge
inc
dec
je
push
and
call
sbb
cmp
aaa
adc
mov
sub
pavgw
retf
stc
loope
mov
outs
leave
ret
int3
jmp
popf
mov
and
dec
sbb
int3
pop
sahf
and
ret
daa
inc
jb
in
aaa
push
aam
call
mov
loope
add
test
dec
ins
bound
loop
rol
xor
sahf
(bad)
cmp
jno
sub
mov
push
pop
dec
mov
addr16
fistp
cwde
adc
inc
mov
push
pop
dec
mov
pop
iret
(bad)
jmp
hlt
inc
dec
(bad)
push
pop
mul
and
or
and
jmp
push
mov
inc
push
jg
std
push
adc
aad
test
(bad)
outs
out
loopne
ds
adc
aas
(bad)
in
ror
sbb
xchg
enter
aad
outs
popf
xchg
ss
fistp
jge
and
les
push
out
fst
idiv
aam
mov
jne
sub
adc
cmp
lock
(bad)
pushf
mov
sar
fstp
or
call
mov
inc
inc
xchg
ins
sub
jns
sub
(bad)
pop
xor
mov
add
std
push
xchg
push
and
pop
(bad)
jbe
jno
es
cmc
mul
mov
lock
and
inc
out
js
pop
imul
(bad)
mov
push
add
jo
dec
fcmovnu
sbb
call
sbb
push
pop
ins
addr16
jmp
fidivr
mov
pop
mov
mov
jae
int
xlat
mov
fisubr
xchg
mov
pop
xchg
mov
xchg
dec
push
sti
or
and
ret
xlat
cld
stc
shl
push
jecxz
sub
jge
(bad)
and
das
in
imul
mov
cmp
xor
and
in
add
sbb
sbb
mov
lds
inc
loop
cmps
sbb
dec
imul
or
mov
out
int
fmul
jns
xchg
and
addr16
adc
push
in
push
enter
into
call
xor
adc
pop
push
sbb
jg
mov
lea
adc
stos
push
pop
aaa
fmul
popf
mov
(bad)
clc
out
xchg
mov
adc
jae
mov
cli
inc
shr
xor
sub
ins
(bad)
(bad)
mov
std
mov
xchg
cmp
pop
push
icebp
push
(bad)
cli
push
mov
ins
repz
jp
js
loop
mov
adc
inc
dec
and
jns
test
cmp
sbb
mov
test
nop
(bad)
and
and
pop
and
cld
and
cmp
retf
sub
pop
adc
dec
sbb
push
data16
inc
rcr
and
or
adc
fcom
rol
pop
in
icebp
or
inc
pop
mov
fwait
cdq
cmp
jmp
push
ror
popa
mov
ss
jnp
adc
out
cmp
xor
and
fwait
adc
mov
mov
fnstcw
jb
xor
mov
(bad)
cmp
adc
test
repnz
inc
aam
xchg
mov
gs
aam
and
js
push
jge
xchg
jl
enter
mov
in
test
or
aam
xchg
std
pop
(bad)
jnp
mov
repz
outs
push
mov
dec
int
fdivr
enter
mov
xor
and
pop
out
movs
mov
jns
jge
lock
push
fsub
aam
add
inc
pop
ins
cld
jl
xor
xor
mov
push
(bad)
xchg
mov
mov
addr16
and
fwait
arpl
mov
sbb
xchg
sti
inc
(bad)
sbb
ss
call
mov
push
jo
stc
mov
push
jecxz
push
imul
pushf
popa
push
int3
jne
xchg
pop
inc
fimul
xlat
ins
push
jle
movs
inc
lock
std
xor
je
movs
pop
cmp
mov
sub
jle
aaa
fsubr
push
add
das
dec
mov
or
mov
(bad)
jo
pop
cmc
mov
mov
mov
sub
push
call
cmp
mov
xchg
add
cmp
test
push
sti
sub
mov
test
cs
xchg
sub
sub
xorps
inc
jg
push
lea
add
push
inc
retf
jno
sbb
outs
jo
loope
cmps
or
sbb
rol
or
sahf
mov
or
pop
cmp
ds
sahf
rol
jne
ja
xchg
push
and
pop
xor
mov
scas
cmp
shl
std
jmp
mov
std
ret
mov
sub
inc
cli
mov
dec
fst
mov
cmovne
(bad)
lods
gs
jp
mov
jmp
in
cmp
rcl
jg
sti
stos
push
addr16
pop
add
lds
sub
push
leave
add
pusha
xor
(bad)
rcr
in
dec
(bad)
push
repz
je
aas
jecxz
jae
xchg
xchg
lods
xlat
test
ins
mov
iret
jae
shl
adc
lods
repnz
stos
xor
push
mov
dec
and
movs
push
cmp
data16
pop
or
mov
or
push
and
push
(bad)
pusha
dec
add
mov
(bad)
mov
test
inc
dec
inc
(bad)
sub
cli
sti
sbb
mov
push
fsub
fnstenv
jb
ins
jge
pop
test
paddw
repnz
push
mov
iret
adc
push
stos
pop
jns
fnsave
test
clc
sbb
cdq
jbe
aad
and
mov
pop
imul
sbb
in
cmp
sbb
jb
push
adc
loop
inc
mov
add
test
stc
dec
je
stos
xchg
push
aas
xchg
mul
inc
ret
jp
push
push
xor
iret
sub
shl
mov
(bad)
mov
pop
loop
test
icebp
scas
xchg
out
mov
das
sahf
imul
lock
pushf
jmp
push
add
or
stos
jge
push
cdq
(bad)
aam
fcmovbe
jmp
lock
cmps
clc
jmp
mov
adc
popa
ins
fcmovnu
mov
cs
and
sbb
sub
outs
xor
sub
push
inc
cmps
push
push
fisttp
add
cli
add
and
dec
push
icebp
(bad)
in
adc
cs
fimul
int
pop
xor
inc
mov
mov
pop
push
imul
sbb
pop
adc
bound
int3
push
mov
mov
fild
enter
pop
mov
add
jmp
sbb
add
in
jecxz
xchg
add
icebp
xor
jbe
outs
add
rcl
adc
sub
in
adc
jle
pop
leave
shl
mov
shl
xchg
movs
xor
dec
scas
pop
cld
xchg
mov
add
es
loope
out
and
fcmovnb
dec
sar
xchg
in
arpl
(bad)
ficom
add
hlt
push
or
gs
inc
or
jmp
pusha
sbb
or
shl
div
jo
pop
cmp
outs
push
div
hlt
fstp
cmps
imul
popa
scas
rol
inc
(bad)
gs
cmp
mov
mov
lock
and
adc
push
mov
(bad)
leave
and
push
ss
fisubr
test
ss
add
push
out
popf
jp
and
arpl
fdiv
jle
mov
aas
fisttp
je
in
xchg
ins
xchg
movs
xor
call
in
pop
sbb
push
jmp
movs
stc
sbb
add
mov
cs
or
icebp
mov
int
loopne
out
jns
outs
cmp
lds
js
xor
sub
and
ins
out
in
mov
inc
mov
repz
adc
adc
sbb
in
imul
pop
ss
push
push
shl
dec
push
xor
jns
mov
mov
push
mov
shr
(bad)
dec
and
cwde
xchg
out
dec
mov
lahf
dec
push
fucomip
cdq
and
push
push
leave
push
frstor
mov
add
test
pushf
psubq
pop
(bad)
dec
mov
loopne
inc
rcl
sub
(bad)
clc
in
daa
std
push
fild
ss
push
pop
loope
sbb
call
xchg
push
mov
or
jb
dec
xchg
xor
ds
jnp
push
adc
dec
or
les
xor
aas
jmp
mov
xchg
ds
sbb
out
jno
push
ret
add
mov
sbb
mov
(bad)
cwde
inc
inc
push
cs
mov
fmul
jl
sti
lahf
sti
mov
nop
imul
lock
ret
nop
shr
fs
cmp
ins
adc
fiadd
clc
(bad)
xchg
or
out
cmp
push
pop
push
rol
sbb
leave
mov
mul
mov
sahf
push
xor
(bad)
push
cmc
scas
sub
cmp
test
outs
pushf
sahf
pop
and
jnp
in
jbe
dec
adc
cmp
push
pop
adc
adc
add
add
addr16
jbe
mov
les
mov
sbb
mov
pop
jo
cmp
xchg
sbb
loope
push
call
add
fiadd
jmp
sub
cmp
sbb
mov
pop
and
xchg
ds
push
inc
and
and
dec
lods
xchg
and
cmp
hlt
jmp
sbb
into
mov
sbb
jg
push
aas
in
xchg
vxorpd
es
dec
retf
mov
jecxz
rol
retf
cmp
daa
ins
adc
mov
outs
repnz
cmp
mov
mov
sbb
mov
xor
pop
loope
cmp
xor
fadd
pop
ret
data16
mov
test
nop
and
cmc
cmps
lods
push
ficomp
push
and
jo
sar
call
inc
push
jge
(bad)
and
add
pop
inc
xchg
cdq
mov
inc
fcmovnu
imul
iret
mov
jecxz
cmp
push
scas
js
movs
clc
jmp
cmp
jg
mov
gs
push
into
dec
cmp
jmp
pop
add
adc
pushf
fsub
xlat
add
out
nop
retf
jae
fwait
mov
add
inc
fcompp
(bad)
cdq
mov
popf
mov
inc
inc
inc
xor
loope
test
fwait
add
and
cmps
jl
and
popf
sti
mov
cmc
sub
jae
repz
cmp
test
pop
adc
inc
pop
enter
sub
stos
aas
sti
aam
or
adc
add
push
push
clc
mov
call
(bad)
jg
stos
int3
fwait
out
lods
mov
pop
js
sub
je
cli
pushf
call
out
pop
xchg
and
fidiv
in
mov
inc
and
pusha
sbb
ror
dec
pop
push
out
cmps
xchg
addr16
hlt
popa
adc
(bad)
pusha
push
inc
cmc
fstp
or
fwait
into
outs
stc
cld
push
mov
push
xchg
lods
mov
imul
fidivr
jne
in
test
xchg
cmp
adc
mov
jnp
cmps
fsubr
(bad)
cmc
ins
jp
mov
sbb
jge
or
imul
(bad)
dec
dec
bound
push
(bad)
arpl
xlat
push
enter
(bad)
idiv
push
push
pop
mov
lods
mov
add
xchg
sbb
dec
lods
inc
in
add
jmp
lea
imul
xor
popf
xor
xor
push
dec
add
(bad)
cmp
pushfw
imul
and
rcl
loopne
loope
movs
add
lahf
dec
sbb
ins
cs
in
push
mov
cli
movs
in
(bad)
lods
test
cs
shl
fisttp
dec
dec
aas
dec
les
hlt
adc
scas
rcl
and
push
jg
mov
outs
jne
cmp
jg
in
in
(bad)
fcmovb
cmp
(bad)
aaa
pop
icebp
add
dec
push
mov
pop
in
js
or
ins
movs
gs
sbb
movs
nop
push
loop
cmp
xchg
rol
mov
(bad)
stos
mov
mov
fld
out
(bad)
call
mov
mov
mov
adc
sbb
jne
pusha
bound
sub
xor
ja
icebp
xor
pop
shl
xchg
(bad)
scas
pop
pop
lds
cmp
mov
xor
push
lock
call
mov
push
xchg
cmp
pushf
or
loop
enter
inc
test
aaa
inc
adc
sub
sub
dec
xchg
retf
lahf
imul
fiadd
ja
or
mov
inc
inc
pop
retf
inc
out
push
adc
fsub
push
xor
(bad)
push
push
jb
(bad)
pop
std
cdq
sub
pusha
add
or
mov
xor
sub
retf
jle
dec
jecxz
cmp
cmps
push
inc
cli
mov
(bad)
push
cwde
outs
and
mov
ret
adc
dec
stos
add
out
popa
sar
mov
and
jae
imul
jecxz
push
mov
xchg
adc
or
push
scas
aad
in
fwait
xor
xchg
mov
push
cmp
es
iret
in
cs
xlat
xor
sbb
mov
add
sahf
aaa
or
xchg
sbb
dec
clc
add
lock
repz
xlat
hlt
push
sbb
jne
icebp
fsub
mov
(bad)
xor
jmp
aam
aam
push
jb
repnz
xor
sub
mov
ror
and
xchg
cld
dec
movs
rol
dec
jl
inc
mov
imul
mov
jmp
xor
pcmpgtw
push
shl
xor
in
pop
sub
mov
cmp
pop
es
fdivr
ror
jne
icebp
fsubr
jae
sbb
inc
xchg
into
es
or
jmp
lahf
cld
repz
pop
add
cmova
enter
jmp
mov
repz
rol
stos
repz
pop
xor
iret
aad
sbb
inc
dec
jo
call
or
mov
aam
jmp
and
imul
mov
fadd
cmp
mov
push
xchg
repnz
scas
(bad)
lds
sub
mov
pop
jmp
pusha
mov
mov
mov
loope
mov
ins
pop
ret
inc
lea
ins
cli
cld
inc
rcl
mov
pop
and
iret
fwait
cdq
test
mov
jmp
ds
mov
mov
test
not
cdq
xor
outs
retf
ja
mov
dec
sbb
push
mov
jmp
and
ror
out
aam
(bad)
pop
mov
xor
iret
sbb
sar
add
in
pusha
xor
add
clc
dec
sar
mov
mov
pop
ins
push
mov
cdq
and
mov
(bad)
(bad)
movs
imul
lock
cs
out
or
cmp
mov
rol
pop
push
test
xor
ins
xchg
sahf
cmp
cmp
push
xchg
push
arpl
clc
jmp
adc
sbb
sub
push
adc
popf
pusha
mov
adc
cmc
add
les
add
add
sbb
cdq
add
fcompp
inc
adc
inc
inc
inc
mov
in
call
arpl
jl
popa
sti
sub
es
sbb
ret
fnstsw
sub
mov
fild
retf
leave
fisub
pop
retf
cmp
cmp
std
cmp
out
movs
cs
out
jecxz
ja
fmul
int
push
xlat
adc
call
out
arpl
cld
sub
loop
outs
inc
int3
xchg
and
retf
and
adc
in
fs
mov
sti
out
add
pop
daa
push
cmp
in
or
lds
cmp
add
sub
sti
pop
loopne
inc
sbb
shl
mov
in
mov
test
sub
popf
dec
loop
pop
retf
jns
fmul
push
stos
cld
dec
in
cmp
push
adc
sub
pop
aad
push
mov
clc
mov
lock
jge
call
test
jno
je
push
mov
enter
dec
call
sub
fcomi
stos
mov
or
dec
cmps
aad
outs
mov
aaa
jbe
cmp
stos
add
inc
sub
sub
xchg
add
xchg
je
inc
(bad)
aad
ins
sti
data16
sbb
cld
mov
icebp
sahf
stos
pop
inc
sub
sub
sub
ins
or
(bad)
push
mov
jo
addr16
ret
mov
inc
and
je
inc
jmp
or
add
out
inc
daa
ds
pop
mov
in
int
sbb
dec
ror
push
sbb
mov
jg
add
lods
add
outs
adc
mov
jmp
xor
fprem1
popf
ja
add
xor
loope
cmp
cmc
arpl
ror
popf
dec
xor
cmps
in
xor
shr
add
jl
cmps
and
pop
push
push
jb
cmp
jns
in
shl
xor
jbe
mov
shr
dec
adc
add
adc
call
mov
mov
int
inc
inc
les
xchg
mov
addr16
jne
je
pop
add
jp
ss
jno
push
xchg
popa
mov
push
pushf
(bad)
mov
repnz
and
xor
shr
inc
sub
inc
leave
shr
jo
xor
mov
(bad)
loope
ret
sub
jmp
mov
js
mov
sub
outs
fnstsw
stos
mov
xor
stos
jmp
xor
mov
in
sub
call
push
cdq
ins
fs
ds
inc
fcomip
xchg
test
popf
fstp
call
sahf
sbb
inc
adc
jl
cli
call
hlt
adc
jne
ins
cmp
jb
call
stos
repz
cmc
scas
or
xchg
mov
cmp
pop
test
cwde
movs
xchg
ja
fild
outs
ret
sub
sahf
sbb
xor
mov
ins
shl
xor
fadd
retf
jg
xor
jmp
imul
push
shl
popa
mov
xchg
add
mov
ss
push
iret
in
xor
jb
ror
ins
sahf
popf
leave
out
(bad)
daa
jno
jecxz
sub
adc
cdq
mov
or
and
dec
xchg
dec
xchg
sbb
mov
mov
adc
sub
inc
xchg
hlt
mov
xor
fild
jne
cli
mov
retfw
xor
add
inc
jg
inc
scas
push
out
pusha
cmp
cmp
mov
lods
mov
mov
fistp
lock
cmp
ins
xor
mov
aam
or
icebp
inc
hlt
xchg
test
es
addr16
fmul
(bad)
fild
ret
ss
push
lahf
mov
mov
mov
stos
pop
jmp
mov
mov
sbb
push
lods
ja
jo
or
sbb
iret
aaa
ds
lods
mov
push
mov
sbb
mov
sub
int3
inc
xor
push
jne
and
shl
(bad)
fwait
push
xchg
test
and
and
data16
outs
xchg
(bad)
mov
std
cmp
and
mov
and
and
pop
pop
lods
jbe
repnz
scas
cld
hlt
hlt
push
pop
xchg
dec
jg
xor
daa
mov
pop
sbb
xor
dec
call
and
fcmove
out
pushf
test
in
jmp
js
es
mov
pop
retf
adc
sub
icebp
enter
scas
lahf
pop
(bad)
out
pop
dec
loop
lahf
test
mov
cli
push
cld
mov
pop
fst
popf
cld
data16
cmp
cmp
pop
cmp
sbb
inc
pusha
shr
lods
paddusb
(bad)
sbb
lods
(bad)
clc
mov
or
sahf
mov
and
xchg
stc
stos
or
xchg
in
xor
outs
cmp
cwde
shr
adc
dec
punpckhdq
push
adc
pusha
cmp
jmp
push
inc
mov
push
sbb
xor
mov
push
enter
std
std
fdivr
push
sbb
cmp
cmp
sti
mov
mov
cmp
scas
adc
in
inc
stc
xchg
and
push
(bad)
jmp
inc
mov
int
xchg
out
sbb
cmpxchg
pop
dec
xor
dec
stos
cmp
pop
add
in
xor
addr16
pusha
popf
mov
bound
sbb
sbb
dec
sbb
cmp
add
push
xchg
push
push
and
stos
retf
out
cld
je
or
pop
cs
mov
mov
inc
and
out
in
sbb
xchg
out
push
fbstp
out
out
jb
test
mov
mov
jmp
pushf
bound
mov
inc
adc
pop
pop
retf
fs
dec
cmp
cmp
retf
js
mov
das
inc
nop
aas
rcr
mov
xchg
hlt
jmp
jns
paddq
sub
clc
mov
pop
add
movs
das
push
mov
jae
das
jmp
xor
mov
in
sub
and
pop
and
push
cmp
jmp
xor
cmp
lahf
ret
out
ds
les
cmp
mov
fnstenv
or
xor
mov
in
fdiv
sbb
fcomp
add
arpl
jecxz
sbb
(bad)
outs
(bad)
mov
mov
push
adc
fcomip
xor
cli
mov
dec
adc
movs
xor
not
jp
icebp
ds
mov
sbb
sbb
xor
jbe
dec
jbe
jecxz
in
mov
(bad)
(bad)
sahf
out
adc
sub
out
aam
in
iret
cli
dec
sbb
xor
gs
or
mov
or
fdivr
sbb
stos
mov
fild
dec
out
jnp
scas
mul
mov
xor
aaa
in
out
div
(bad)
dec
xor
int
jb
fcomp
mov
daa
sub
jne
in
push
fdiv
xchg
enter
add
popf
cmp
ins
push
(bad)
in
push
inc
imul
jae
das
dec
mov
or
adc
sub
(bad)
push
ss
repz
push
mov
cmp
xchg
dec
xor
inc
jns
cmc
das
aad
inc
jae
or
in
mov
dec
ret
sar
push
add
mov
xchg
shr
repnz
mov
or
xabort
out
sbb
lods
(bad)
lock
mov
outs
sub
call
sbb
sub
fwait
xor
add
popa
shr
pop
fistp
pop
ins
gs
enter
fidivr
xor
push
ficomp
pop
adc
adc
mov
ret
cvttps2pi
(bad)
push
sbb
test
xor
pop
add
and
mov
sahf
fs
imul
gs
sub
mov
cmps
jl
sub
stc
scas
jne
loope
or
ret
cmp
sub
push
xchg
movs
loope
mov
xchg
ret
pop
enter
shr
push
and
mov
mov
mov
jnp
dec
out
loopne
js
dec
mov
jecxz
add
imul
and
outs
mov
mov
imul
pusha
jmp
xchg
int3
daa
sub
cmp
call
jo
add
icebp
inc
jmp
jae
pop
repnz
pop
shl
sub
jns
push
push
fwait
xchg
stos
(bad)
and
in
push
icebp
stos
xchg
ss
push
sahf
into
cld
movs
pop
sub
add
cmp
pop
test
fdiv
mov
in
mov
dec
mov
cmc
daa
sbb
sar
pop
lea
xor
mov
aam
jb
dec
das
push
inc
lahf
cmp
cwde
xchg
nop
or
xchg
in
push
in
out
pop
pop
push
mov
cmps
pop
mov
idiv
jecxz
pop
dec
pop
imul
out
push
xor
call
xlat
lock
imul
lods
mov
or
dec
cmp
add
mov
mov
xor
pop
in
push
inc
shl
inc
cmp
or
push
jg
(bad)
mov
bnd
dec
cmps
cmp
addr16
pop
or
popa
push
jns
scas
inc
fcomp
aad
cmp
xchg
test
cmc
inc
dec
jb
popa
or
stos
sete
jg
xchg
retf
cmp
sub
pop
jecxz
push
test
dec
(bad)
call
xacquire
cmp
pop
add
test
dec
push
icebp
or
mov
inc
(bad)
aas
and
mov
adc
ret
pushf
(bad)
cmc
clc
cpuid
sub
cli
stos
mov
ret
loope
out
add
sub
xor
das
pusha
jns
mov
movs
and
push
rcl
cwde
jp
xchg
jle
sar
xchg
jo
scas
push
push
sbb
out
xchg
out
jp
xchg
xchg
ror
pop
stc
xchg
dec
jg
in
mov
jecxz
sbb
sbb
dec
fs
mov
adc
inc
mov
fisub
stos
jb
clc
jp
fs
(bad)
jno
mov
(bad)
mov
or
lds
or
lock
pushf
xor
rcr
xor
xchg
xor
adc
sbb
xor
sub
aad
inc
stc
repz
cmp
or
cmc
ret
int3
leave
ins
lods
and
xchg
shl
sti
jbe
pusha
mov
mov
popa
(bad)
adc
push
shr
xchg
movs
jmp
cmp
xor
(bad)
cdq
cwde
stos
cmp
mov
jmp
jmp
movs
dec
jnp
xor
sahf
cmps
mov
lds
sbb
ds
hlt
cld
inc
cmp
push
fbld
lds
sbb
pop
mov
sar
add
pop
out
fadd
(bad)
enter
nop
or
pop
je
int3
cdq
inc
pushf
fcomp
into
jmp
jns
cwde
xchg
cmps
dec
pusha
ss
sub
mov
cmp
inc
push
loope
mov
cdq
dec
pop
jmp
mov
sub
in
stc
mov
cmp
mov
jbe
in
mov
mov
sub
pop
(bad)
aam
mov
cwde
(bad)
adc
jns
mov
stos
sbb
addr16
jnp
popf
ror
push
adc
outs
adc
jmp
jbe
cmc
xchg
jle
call
add
push
out
aas
daa
lock
jg
imul
aaa
shl
jnp
or
ja
xchg
in
aaa
push
in
xor
mov
sub
add
cli
lahf
mov
cmc
test
arpl
out
stos
push
outs
cmp
push
sub
jno
and
test
xchg
or
dec
pop
in
cmp
sbb
data16
fstp
std
test
pop
rcl
push
mov
and
mov
xlat
popa
add
test
jne
or
ins
jmp
aad
xor
(bad)
sub
push
(bad)
loope
pop
dec
push
fsubr
cmp
jne
imul
mov
adc
test
and
push
sub
lods
jmp
sub
imul
mov
loop
push
retf
push
call
jo
push
test
inc
(bad)
xchg
and
aas
or
sbb
fsubr
jno
mov
mov
inc
dec
add
je
out
fucomp
hlt
inc
add
sbb
fs
mov
pop
mov
inc
mov
stos
xchg
out
xchg
xchg
je
pop
out
mov
mov
mov
push
int
js
sbb
add
nop
lea
lahf
dec
jmp
fucom
int
pusha
test
inc
enter
fstp
jmp
mov
push
addr16
(bad)
(bad)
mov
inc
into
cs
call
jle
adc
dec
enter
push
xor
and
sbb
iret
or
hlt
cwde
add
pop
jle
sub
fldenv
cs
arpl
push
add
(bad)
loopne
push
out
or
jae
pop
ja
mov
hlt
sahf
aam
pop
into
mov
add
mov
adc
mov
mov
cmp
dec
mov
mov
movs
pop
addr16
(bad)
pushf
sbb
push
imul
scas
xlat
cmp
fcom
adc
shl
ret
loop
jmp
push
lds
stos
test
cld
out
push
leave
sub
dec
fcomp
ror
clc
xchg
pop
dec
adc
sub
cs
xchg
mov
outs
and
mov
movs
sbb
out
push
test
jnp
push
mov
mov
jae
test
js
jl
lahf
popa
enter
loope
xchg
add
pushf
sahf
es
xchg
jne
jbe
adc
inc
mov
xor
rcr
retf
data16
rcr
aaa
sbb
hlt
outs
dec
pop
(bad)
sbb
(bad)
or
jl
es
mov
mov
call
mov
xor
setg
movs
push
lods
fistp
int
repz
mov
dec
fnstenv
mov
dec
and
bound
fldenv
fbstp
add
in
mov
in
dec
sbb
clc
or
dec
push
pop
push
jmp
fiadd
imul
nop
pop
or
cs
dec
(bad)
in
and
retf
(bad)
pop
out
ror
jb
fs
sbb
dec
jbe
dec
vpunpckhdq
sub
mov
int3
jle
or
mov
and
add
sbb
xchg
ret
adc
push
push
xor
jno
ins
xchg
repz
sub
xchg
test
(bad)
nop
cmp
and
clc
(bad)
mov
xchg
fdiv
push
inc
cmps
loopne
xchg
fnstenv
jne
cmp
sub
sub
lock
addr16
and
in
out
dec
or
dec
fcom
xor
sti
pop
std
mov
xchg
ss
sbb
sbb
in
add
and
cmp
mov
mov
push
or
pusha
mov
inc
jp
jnp
jae
sub
push
jecxz
idiv
addr16
aas
in
adc
scas
scas
xchg
ds
mov
popa
rol
retf
cmps
icebp
mov
pop
retf
dec
stc
add
lea
adc
(bad)
or
les
jecxz
and
sub
xor
icebp
(bad)
fisubr
jmp
push
dec
mov
inc
(bad)
xchg
inc
pop
lea
xor
jbe
addr16
outs
in
jge
sbb
or
pop
ds
lea
xchg
jns
push
mov
inc
and
push
aaa
dec
(bad)
adc
push
pusha
or
push
das
push
adc
and
xacquire
mov
push
xor
xor
call
adc
test
imul
outs
push
retf
dec
adc
loopne
mov
dec
pushf
pop
ins
loopne
adc
jg
aaa
mov
xchg
outs
push
loopne
(bad)
loop
push
mov
mul
adc
(bad)
leave
iret
mov
jb
sub
aaa
xchg
jno
jne
sub
std
xlat
test
popa
pop
xor
and
jmp
rol
xor
int
call
xchg
and
stc
in
in
push
sub
fbld
fs
enter
popa
pop
or
ret
or
sti
shl
into
mov
(bad)
rcl
icebp
sub
sbb
test
enter
jne
mov
call
cli
std
lods
mov
jmp
pop
enter
ja
sbb
outs
js
push
dec
xor
add
call
sub
stos
mov
adc
push
div
hlt
test
mov
add
mov
or
push
or
std
icebp
cld
repz
outs
mov
ficom
test
test
sbb
mov
outs
sbb
xlat
push
ret
jge
clc
sbb
jle
lahf
rcl
or
cmp
loope
fcmovbe
adc
pop
jl
mov
and
fiadd
aaa
xor
int3
bound
adc
sbb
add
mov
in
and
scas
xchg
jecxz
aad
cmp
dec
leave
and
xor
jb
adc
scas
lods
pop
cs
test
repz
das
rcl
ret
(bad)
(bad)
jmp
in
dec
out
cwde
aad
fdiv
mov
(bad)
daa
aas
shr
lods
xchg
pushf
sti
ja
sub
and
(bad)
mov
push
pop
ror
xor
in
pop
xor
push
adc
mov
add
inc
xchg
push
sub
sbb
and
outs
popa
scas
xor
sbb
push
push
xchg
cmps
and
test
rol
push
iret
mov
shl
pop
push
sbb
adc
test
stos
sbb
les
repz
sub
xchg
push
repnz
push
inc
(bad)
and
dec
jnp
ins
push
(bad)
sbb
(bad)
jmp
cmps
adc
stos
pop
sub
add
sahf
add
push
(bad)
xchg
xor
mov
xchg
cmp
ss
sub
jnp
mov
retf
loopne
in
ret
daa
retf
adc
cmp
inc
cmc
aad
jp
jbe
fst
sbb
push
jg
aas
jbe
(bad)
fnstsw
in
sub
sti
adc
add
dec
add
push
xor
retf
sub
std
adc
mov
cmp
mov
mov
fld
xchg
push
push
out
mov
je
cwde
data16
mov
adc
cmp
aad
scas
mov
push
mov
add
mov
xchg
and
sahf
cld
xchg
popa
scas
lock
ss
sti
test
dec
xor
or
xor
cmp
leave
and
repnz
jmp
test
xchg
fist
test
push
push
std
pop
mov
fcomi
mov
mov
push
xor
pop
leave
add
imul
cld
jb
aad
call
das
sub
dec
pop
(bad)
xchg
outs
jne
jmp
push
aaa
sbb
mov
jmp
or
lock
and
cmps
jb
add
fwait
int
jb
aas
pop
std
js
mov
nop
stc
ret
add
cs
push
cld
jbe
push
pop
adc
xor
add
or
mov
mov
adc
mov
fstp
xchg
push
rcl
fcom
jp
repnz
clc
rol
xor
fbstp
outs
out
pop
sbb
cs
mov
dec
fwait
cmps
jno
jne
inc
int
xchg
movs
push
or
or
inc
sub
pop
push
xchg
lahf
scas
cmp
mov
leave
sbb
dec
and
aad
into
(bad)
mov
shl
mov
pop
jae
ins
and
xchg
iret
push
sub
mov
fadd
add
aad
push
mov
mov
xchg
ja
sbb
and
jo
scas
popa
cmp
mov
mov
out
xsave
dec
xor
xchg
mul
sahf
push
stc
xor
jns
ds
sti
js
xchg
movs
sbb
hlt
and
add
push
daa
ds
sub
inc
addr16
pushf
mov
inc
scas
and
push
ss
mov
pop
das
mov
pusha
push
inc
js
(bad)
mov
bound
and
bound
pop
cmps
out
aad
std
adc
out
cli
(bad)
hlt
push
adc
dec
dec
mov
int
adc
scas
movs
inc
outs
imul
cmp
jmp
xchg
xchg
clc
js
push
enter
aam
inc
or
movs
fld
(bad)
xchg
dec
(bad)
or
dec
test
pop
fild
jae
or
(bad)
cmp
fdiv
bound
fcom
mov
clc
pop
xchg
fiadd
and
mov
pop
fild
fs
mov
inc
fs
mov
(bad)
mov
cmps
or
pusha
push
jbe
mov
mov
xchg
inc
(bad)
push
jae
inc
cmps
mov
ja
test
lds
mov
sub
pop
xchg
sbb
movs
sub
pop
push
int3
outs
adc
xlat
jb
and
sub
hlt
enter
ds
retf
dec
sbb
mov
fcom
sahf
fstp
xchg
cmc
clc
clc
mov
xlat
inc
ret
dec
pop
or
xchg
lods
xor
cmc
push
adc
fld
imul
stc
int
push
jle
adc
leave
repz
jne
jle
push
or
stos
inc
xor
xchg
ins
sbb
xchg
dec
inc
enter
test
dec
(bad)
sahf
pop
sub
push
xor
xchg
pop
or
mov
lds
cmp
dec
test
clc
jl
add
imul
aam
shl
mov
inc
lds
cmp
pusha
adc
mov
mov
inc
xchg
adc
jecxz
cmp
push
mov
jl
retf
and
and
fisttp
outs
bound
ficomp
outs
gs
adc
mov
dec
mov
lods
fs
mov
inc
(bad)
(bad)
pop
retf
in
and
jmp
stc
ins
(bad)
push
and
jbe
inc
adc
imul
cmp
xor
leave
lods
dec
mov
dec
cmp
movs
jle
int3
js
jmp
push
jmp
pusha
jne
mov
ss
nop
jge
or
cmp
inc
imul
mov
gs
xor
adc
xor
in
enter
es
dec
gs
jbe
cmc
push
icebp
shr
fs
cli
and
std
mov
sub
inc
xchg
adc
dec
imul
mov
mov
lock
cmp
jns
mov
adc
in
aam
repz
cli
arpl
cmp
cdq
mov
cmc
div
cwde
iret
xor
mov
adc
xlat
cs
or
enter
or
lahf
jne
inc
xor
xor
cmp
mov
lds
dec
nop
popa
mov
sahf
jmp
mov
cwde
adc
jbe
mov
mov
js
xor
leave
cmp
mov
cmps
sbb
xchg
push
imul
add
add
inc
pop
sub
sbb
ror
jl
and
mov
sahf
sub
adc
imul
jge
js
dec
push
data16
outs
inc
dec
xlat
jns
retf
push
(bad)
movs
jne
sub
nop
pop
in
mov
leave
cdq
cmp
add
pop
add
or
dec
cwde
pop
ja
push
dec
cs
data16
xchg
lock
push
mov
xor
aaa
aad
stc
icebp
test
jbe
iret
imul
sub
fs
jb
aam
mov
lea
and
or
sbb
mov
or
shl
xchg
mov
popf
mov
dec
mov
adc
pusha
out
(bad)
and
xchg
push
lock
sub
rcr
mov
add
jnp
add
(bad)
mov
aad
call
xor
dec
inc
cwde
ja
ds
mov
mov
xor
out
adc
xor
pop
add
xchg
scas
jbe
sbb
adc
lds
jno
push
pop
xlat
out
mov
cwde
add
aas
(bad)
mov
lock
push
or
add
mov
rol
jecxz
push
mov
test
popf
aaa
sbb
jo
dec
(bad)
outs
sub
fisubr
repz
cld
outs
jmp
cmp
je
cdq
add
frstor
mov
lods
sub
or
cli
call
ds
(bad)
push
jbe
(bad)
sti
outs
nop
call
call
mov
ficom
adc
shl
fs
xor
out
sub
leave
sbb
cmc
dec
jmp
loopne
jp
out
jno
cmp
arpl
cmp
int
and
xor
dec
std
test
aaa
out
es
xchg
aas
push
mov
adc
hlt
add
sub
inc
mov
ror
lea
outs
shl
cmp
loopne
push
jbe
in
fwait
pop
sbb
loop
out
pop
and
lods
int
push
jae
movs
adc
cmp
ins
push
aaa
jle
sbb
or
scas
int3
mov
pusha
sub
test
pop
mov
or
mov
push
xchg
aaa
loopne
push
sar
cmp
pop
push
outs
jb
cmps
shr
shl
sbb
mov
imul
hlt
and
dec
xlat
imul
mov
mov
scas
jo
pusha
movs
inc
adc
mov
mov
int
imul
pop
sub
cmc
or
jle
push
sti
aaa
hlt
dec
in
lea
xchg
retf
les
les
enter
xchg
dec
or
lds
mov
out
pop
xchg
out
mov
inc
mov
push
cmp
fwait
mov
outs
out
add
mov
pop
and
cmp
xchg
call
pop
sub
int3
addr16
addr16
sbb
push
mov
das
imul
dec
or
lea
fsub
repnz
xchg
dec
cmp
and
xor
inc
imul
or
cs
push
(bad)
push
mov
mov
add
fisttp
(bad)
push
popa
loop
sbb
or
sbb
jb
mov
sbb
jae
sbb
arpl
btr
mov
sbb
div
pop
pushf
cmps
pop
scas
xchg
inc
cs
inc
movs
jle
in
push
jae
jo
call
pop
sahf
pop
pop
(bad)
adc
ja
dec
pop
ret
lds
fiadd
xlat
cmp
loopne
pop
dec
jb
movs
sub
push
push
jg
div
jo
mov
int3
in
jne
mov
mov
cmp
pop
xor
mov
cmp
push
arpl
shl
addr16
cdq
and
adc
sbb
call
sub
xchg
or
movs
xor
inc
dec
cmps
out
inc
ret
adc
or
jns
fstp
aas
mov
jnp
add
add
xlat
repz
sar
jecxz
add
xor
cmp
adc
(bad)
aas
bswap
or
jnp
das
cmps
xchg
sahf
sub
pop
arpl
sar
xor
pop
mov
repz
inc
push
and
add
aam
xchg
jne
sbb
fistp
div
jo
outs
jmp
bound
ins
mov
inc
shr
mov
ret
scas
cmp
or
out
inc
mov
idiv
push
mov
enter
ds
aaa
and
sub
outs
xor
or
mov
push
int
xchg
and
aad
imul
imul
sbb
push
push
adc
fidivr
cmps
(bad)
jnp
push
mov
in
mov
cs
and
(bad)
bnd
aam
add
lock
mov
stc
imul
lds
loope
jl
xor
sub
or
or
xor
mov
test
xchg
jbe
stc
cmp
std
and
sub
retf
int
or
inc
mov
les
rol
and
or
rcl
mov
or
cwde
popf
outs
pop
pop
int3
xor
adc
call
int
je
data16
mov
daa
mov
push
and
add
fwait
cdq
cs
jae
shr
xor
add
fcom
pushf
inc
into
xchg
outs
xor
and
sub
aas
les
xchg
pop
ja
inc
mov
adc
sbb
xchg
jnp
sub
jnp
add
jbe
lods
sbb
jecxz
push
and
fst
outs
and
dec
dec
pushf
mov
call
je
cli
sub
sbb
dec
inc
lds
pop
or
push
icebp
fimul
cmps
adc
inc
shr
xor
xor
aaa
aaa
mov
mov
mov
leave
xor
pop
mov
stos
mov
retf
mov
pop
mov
call
pop
push
and
cdq
out
je
xchg
jns
in
dec
sbb
add
push
cwde
jo
mov
gs
sub
sar
inc
bswap
cmp
les
out
cmp
add
cli
test
out
cmp
mov
bound
test
pusha
aad
mov
sub
xchg
hlt
test
rcl
les
adc
push
dec
fild
mov
fdiv
scas
push
call
in
and
movs
xor
inc
xor
push
and
dec
cmp
test
sbb
pop
jl
scas
in
ss
inc
arpl
and
xor
fisubr
pop
fadd
pop
int
mov
clc
mov
and
adc
fdivr
jge
jo
push
sub
adc
jbe
jnp
cwde
mov
jnp
hlt
retf
lods
inc
mov
inc
out
clc
push
sbb
scas
dec
or
add
clc
xchg
es
dec
loop
mov
or
cmp
jg
pop
pushf
and
mov
pop
xchg
and
je
adc
out
and
xor
rol
pop
or
dec
mov
xor
push
mov
sub
fldcw
inc
xor
jge
fwait
pop
mov
xchg
mov
imul
shl
push
lea
(bad)
adc
test
sub
mov
fiadd
mov
pop
push
xor
sub
or
out
hlt
mov
push
add
cdq
jne
movs
pop
ss
and
push
cmp
je
xchg
popf
dec
dec
jo
xchg
addr16
add
jne
pop
push
push
jo
add
int
dec
xor
mov
sar
hlt
les
add
ret
mov
add
inc
and
stos
mov
sar
(bad)
fidivr
mov
sbb
pop
jge
jge
call
shr
clc
dec
shl
mov
mov
sbb
in
int
mov
(bad)
ja
enter
movs
pop
cmp
mov
leave
test
mov
movs
imul
fs
pop
jae
mov
inc
mov
aad
jb
pusha
out
xchg
loope
jle
jb
jae
push
jmp
add
cs
pop
xchg
sub
addr16
jl
sub
repnz
arpl
mov
mov
and
out
add
(bad)
push
es
xor
lahf
push
push
rcl
inc
or
sbb
pop
ins
imul
pop
push
cmp
fnstsw
xchg
cdq
popa
mov
lods
mov
and
push
cli
sti
cs
dec
hlt
scas
jno
lods
test
in
cld
mov
scas
xchg
cmp
pusha
jg
add
inc
jbe
(bad)
push
ins
lock
fwait
dec
fwait
(bad)
enter
lods
stos
jb
mov
and
and
fst
(bad)
je
cli
jne
test
pusha
in
int3
call
stos
inc
mov
sbb
fidivr
sbb
lods
outs
lds
add
mov
xchg
mov
or
mov
lds
fisubr
stc
add
inc
add
push
sub
pop
imul
cmp
ret
aas
and
iret
jns
jle
mov
jle
jmp
sub
cmp
pop
dec
mov
pushf
add
mov
sbb
ds
jo
lea
addr16
test
les
aad
xor
sbb
ins
je
test
nop
cmps
es
sbb
or
lea
inc
xchg
jmp
popa
cmp
mov
push
jg
inc
xor
jp
dec
lahf
pop
fild
inc
or
aam
icebp
or
loopne
or
cs
lock
adc
push
ret
loopne
mov
dec
(bad)
std
push
adc
pop
mov
movs
sub
jno
pop
xchg
dec
push
popf
data16
ins
xchg
dec
mov
xchg
dec
xchg
mov
inc
jnp
fld
push
jns
test
(bad)
sub
jl
daa
pop
sbb
test
mov
jae
lods
shl
stos
sbb
mov
and
push
iret
das
scas
rol
and
push
ret
push
sbb
aaa
mov
fidivr
test
std
and
and
mov
mov
les
or
dec
pop
jp
dec
xchg
add
(bad)
mov
jmp
jo
xchg
mov
rcr
aam
popf
jle
out
cmc
scas
call
pop
jmp
cmp
push
pop
sub
mov
cmps
sub
inc
popf
pop
in
fwait
mov
aam
test
dec
cmps
je
das
add
pop
cld
xor
fwait
xor
lock
cwde
in
mov
fistp
lods
dec
xlat
inc
or
xor
or
cli
into
cmp
jecxz
daa
sub
ror
sub
popf
test
xchg
sbb
stos
and
dec
xchg
icebp
push
or
jp
scas
movs
jae
sub
cmc
scas
mov
push
or
add
ins
ss
dec
out
push
int
jmp
dec
rcl
add
sahf
imul
cmc
mov
fdivr
mov
stc
pop
adc
cmc
lea
pop
mov
retf
inc
jns
bound
fld
dec
imul
xor
(bad)
push
dec
sub
cmp
cmp
(bad)
mov
mov
ja
retf
push
add
jmp
int
mov
pop
cs
adc
push
sub
mov
jno
adc
push
mov
and
dec
add
pop
dec
add
stos
pop
std
inc
sbb
jbe
pop
mov
sub
mov
adc
and
xchg
inc
jne
pop
pop
adc
add
sbb
or
mov
call
sbb
cdq
jp
mov
inc
pushw
scas
xor
dec
cmp
jge
or
iret
xor
mov
setle
bound
ret
and
xor
jno
xor
sbb
icebp
pop
fidivr
aas
(bad)
hlt
gs
mov
ins
stos
icebp
and
xor
cmps
push
inc
movs
or
retf
xor
mov
test
std
sahf
inc
pop
push
xor
out
outs
push
xchg
adc
in
test
xchg
loope
popf
aaa
pop
push
jecxz
and
enter
xchg
int3
sub
pop
out
sbb
mov
sub
cmp
sahf
push
aas
push
xchg
pop
and
dec
sub
mov
stc
mov
mov
add
xor
daa
inc
leave
ret
push
inc
(bad)
mov
je
test
sub
out
repz
sbb
sub
jmp
test
fst
xor
test
cmps
or
cmc
mov
ficomp
(bad)
jae
push
mov
mov
(bad)
rcl
sbb
shr
add
lahf
xor
data16
mov
push
and
push
mov
push
int
mov
cmp
cmp
sub
push
inc
stos
jmp
loope
xor
inc
add
inc
jg
jmp
gs
jp
enter
div
into
loop
inc
(bad)
jnp
sti
leave
adc
fcmovb
mov
retf
sti
movs
pop
call
sbb
dec
retf
cmp
xor
dec
inc
fwait
mov
mov
cmps
stc
sub
lods
retf
cmps
push
mov
lahf
lods
(bad)
(bad)
cmp
sahf
cwde
ins
sar
std
loope
or
add
fadd
and
stos
test
sbb
lahf
(bad)
xor
xor
mov
mov
push
dec
jle
add
mov
nop
test
fnsave
gs
lahf
int
mov
mov
in
xchg
or
in
rcr
sub
add
inc
ret
call
sti
bound
adc
cmp
stc
rol
fnstsw
add
dec
jmp
xchg
mov
jno
mov
cld
adc
das
outs
push
jae
pushf
imul
addr16
pop
dec
xor
pop
jp
adc
fistp
ret
mov
sbb
xchg
push
stc
div
xor
jne
add
or
out
inc
jl
mov
sub
out
mov
jne
push
dec
mul
inc
mov
lock
pop
jo
mov
lods
cmp
jmp
lods
(bad)
and
add
mov
retf
mov
stos
sub
jnp
xor
sbb
cmps
fstp
movs
jmp
or
push
or
cdq
mov
movs
imul
sub
sti
or
push
jge
add
mov
mov
enter
popa
adc
push
or
adc
pop
std
adc
push
imul
pop
pop
cmc
mov
fs
pop
dec
dec
out
inc
and
adc
jg
por
sbb
stos
(bad)
ds
push
aaa
mov
dec
push
repz
xchg
call
xchg
sbb
repnz
sahf
nop
adc
push
test
je
push
ins
cli
add
ret
les
mov
test
mov
jge
leave
cmovne
lahf
dec
dec
(bad)
ds
pop
sub
std
xor
mov
lods
mov
popf
add
pop
fstp
in
aam
loop
mov
xchg
or
push
repz
loope
in
fimul
push
movs
push
mov
fimul
outs
les
jbe
neg
enter
not
mov
add
mov
loop
outs
idiv
xor
push
xchg
inc
jmp
push
aam
xchg
cmp
mov
je
jae
adc
mov
and
push
out
push
outs
mov
lahf
mov
pmulhw
pop
mov
(bad)
xor
loope
outs
and
jne
and
jg
mov
mov
nop
cmp
mov
je
add
arpl
adc
adc
push
adc
sti
jo
xchg
and
dec
das
daa
(bad)
xchg
pushf
sbb
lods
(bad)
dec
mov
call
mov
jno
jo
jmp
shr
pop
and
popaw
sub
sbb
lods
sub
mov
add
lods
lds
mov
shl
sub
pop
in
test
mov
cli
outs
mov
adc
repnz
or
idiv
push
popf
xor
jb
xchg
leave
popa
shr
push
cmp
rcl
xchg
scas
mov
adc
lods
fnstenv
dec
mov
jmp
cmps
pop
push
repz
xchg
rcr
out
es
out
mov
push
aas
sbb
(bad)
cmp
jb
mov
pushf
add
jns
out
cmc
cmc
in
arpl
test
cld
pop
(bad)
push
mov
cmp
call
shr
cmps
or
movs
neg
cmp
fstp
jg
xchg
nop
xor
dec
pop
inc
jl
fcomp
popa
es
push
sbb
sub
xor
fsubr
ret
xchg
xchg
mov
out
inc
ss
add
je
stos
fild
sar
xchg
(bad)
sar
addr16
push
arpl
cld
xchg
scas
aas
mov
dec
imul
inc
js
shl
and
mov
jae
mov
cmp
test
iret
and
mov
inc
pop
aas
in
adc
sbb
inc
out
jecxz
lods
push
scas
fadd
cmp
mov
(bad)
out
inc
imul
mov
imul
lea
(bad)
and
sub
inc
push
xor
cmc
sub
pushf
inc
jo
dec
bound
pop
cmps
out
xchg
shl
jge
push
jl
ss
inc
fiadd
mov
call
gs
popf
ins
outs
inc
xor
add
jecxz
je
cli
or
xor
dec
jae
push
mov
fld
movs
adc
fcom
or
pushf
jnp
cmps
cmp
fist
dec
retf
in
add
xchg
ror
in
ror
call
scas
xor
out
fwait
sub
dec
out
ins
xor
dec
repnz
sbb
pop
shl
or
sbb
mov
imul
clc
cmp
popf
inc
push
das
cs
push
inc
pop
or
stos
out
out
cmp
jo
xchg
adc
pop
push
xor
xor
pop
jno
push
xor
jmp
iret
dec
shl
ret
mov
lock
push
fisttp
pop
daa
lods
bound
in
lods
data16
pop
out
je
pop
sub
dec
xchg
and
mov
fmul
into
out
mov
jnp
and
mov
ins
mov
mov
retf
add
push
xor
sub
jmp
in
out
xabort
mov
stos
mov
jcxz
adc
cs
push
bound
sub
ins
fs
adc
jnp
int
mov
fs
out
push
pop
stos
mov
fdiv
sbb
scas
jle
clc
xor
out
push
das
lods
add
and
inc
and
pop
mov
(bad)
std
ins
je
ret
mov
imul
pop
cmp
dec
cmps
pop
and
scas
dec
jmp
in
fxch
adc
push
pusha
ja
inc
enter
repz
jbe
dec
out
push
out
sub
mov
mov
jg
out
fld
mov
loop
xor
neg
pop
loopne
sbb
mov
and
fdivr
rcl
enter
push
adc
lods
shl
sar
jp
xor
fwait
into
xlat
clc
(bad)
cld
jl
icebp
lods
mov
cmp
hlt
pushf
pop
jo
or
outs
or
cli
jge
stos
test
push
and
push
adc
sub
xor
mov
adc
sbb
xchg
stos
sbb
icebp
xor
pop
mov
in
fistp
jae
test
sbb
add
xor
adc
and
jecxz
nop
pop
mov
adc
or
add
icebp
or
inc
test
stos
loop
xchg
fld
vhsubpd
mov
retf
pop
out
and
aaa
pop
sub
es
xchg
scas
push
outs
sar
aam
xor
aam
mov
ja
stos
daa
add
(bad)
iret
mov
lea
aaa
test
pop
adc
addr16
fsub
dec
imul
lock
je
pusha
add
and
mov
lods
dec
mov
call
sbb
into
je
scas
out
movs
xchg
in
inc
fidivr
(bad)
push
jo
pop
fcom
das
mov
mov
in
iret
inc
movs
fmulp
xchg
adc
dec
cs
and
imul
add
in
or
loop
push
add
add
aad
push
pop
pop
adc
add
jg
imul
sub
xchg
fwait
sbb
out
cmc
push
mov
fmul
pop
inc
nop
outs
fistp
jecxz
mov
std
push
mov
bound
mov
xlat
in
inc
clc
repz
inc
pop
pop
or
mov
adc
in
into
xchg
out
cmp
lods
test
ficomp
sub
and
and
add
in
jbe
mov
ror
push
push
dec
mov
mov
lods
dec
jo
push
test
test
fnstsw
test
out
cmc
nop
push
pop
in
retf
ja
pop
dec
fdivp
or
aas
cld
cmp
push
nop
mov
popf
scas
pusha
push
movs
out
cmp
add
pushf
cmps
sub
inc
push
jns
push
xor
and
ja
adc
sub
cmp
xchg
in
sub
inc
adc
jbe
xchg
out
xchg
(bad)
(bad)
ror
push
popa
rol
sub
sub
retf
xor
cmp
cmps
bound
mov
push
dec
icebp
inc
fld
lds
rcl
inc
xchg
cli
push
push
pop
sub
push
lahf
ja
ds
cmps
adc
sub
cdq
dec
add
jmp
adc
fiadd
cmp
test
lea
inc
fldcw
xchg
bound
xchg
test
gs
mov
loopne
rcr
ret
cmp
dec
or
dec
or
or
sbb
dec
xlat
test
jne
cli
cdq
test
mov
and
pop
cmp
mov
mov
jno
movs
lock
neg
jg
leave
add
sub
add
adc
xchg
push
fs
or
push
mov
xor
add
addps
mov
dec
scas
inc
imul
stos
frstor
stos
jae
xlat
mov
adc
mov
xor
push
movs
mov
inc
inc
dec
sub
fld
xor
add
push
shl
cwde
pop
out
push
scas
leave
sbb
pop
pushf
leave
cmps
ror
test
clc
xchg
cmp
pop
add
in
mov
push
in
popa
cld
push
push
xor
sbb
jle
mov
cs
(bad)
enter
pushf
daa
mov
mov
(bad)
or
mov
mov
jg
clc
popa
(bad)
cmp
or
lds
retf
jecxz
ja
jmp
aaa
cdq
push
cmp
pop
add
mov
jae
xor
jmp
mov
hlt
adc
mov
dec
adc
jg
je
inc
je
xchg
ss
clc
dec
pop
js
cmc
fnstsw
out
push
cmp
mov
jb
in
push
rdpmc
mov
loop
mov
addr16
xor
cwde
push
or
add
pop
fistp
xchg
jp
ins
cs
push
cmc
and
(bad)
movzx
icebp
in
fwait
xor
stc
add
gs
mov
fwait
rol
retf
clc
bound
ret
ds
dec
and
mov
mov
mov
xchg
xchg
mov
rcl
mov
cmp
fstp
add
pop
and
ds
mov
push
jmp
repz
leave
pop
dec
mov
repz
cld
les
test
add
mov
add
popf
jbe
enter
int3
mov
ret
test
aad
outs
ret
nop
imul
jecxz
je
mov
pop
int
adc
popa
sbb
xor
xor
cmp
paddb
jp
out
(bad)
and
out
je
xor
inc
xchg
das
dec
aad
sti
and
sbb
push
adc
push
aam
push
xor
xchg
call
cmp
cmp
or
inc
dec
and
sub
mov
jle
retf
jns
lds
sti
push
out
xlat
fs
mov
mov
(bad)
call
mov
jmp
inc
in
rol
outs
or
mov
and
in
(bad)
push
inc
or
pop
mov
add
or
sbb
les
ror
stos
push
dec
or
fld
and
(bad)
pusha
sbb
add
dec
push
xchg
pop
xor
test
inc
sbb
xchg
clc
test
aas
xor
add
jmp
sub
lock
scas
in
sub
cmp
or
jl
stc
sbb
or
aad
mov
stos
ins
pop
ror
inc
inc
jns
fsubr
jmp
mov
jns
or
sub
lods
out
mov
fbstp
cmp
idiv
push
cmps
dec
jge
jb
cmp
cld
xor
repnz
out
inc
jle
int
nop
(bad)
and
xor
add
sub
cs
in
mov
in
outs
pop
xor
mov
daa
jg
fsub
in
fnstsw
pop
idiv
mov
rcl
fwait
jmp
jne
arpl
test
hlt
and
xchg
lock
sbb
pop
xchg
cmp
scas
adc
mov
das
js
cmp
xchg
lahf
nop
jnp
stos
loope
and
and
dec
jp
xchg
mov
pop
dec
lods
push
test
(bad)
fbstp
mov
and
sub
xchg
inc
shl
pop
iret
jge
pop
fsubr
stos
mov
cld
lock
push
aam
(bad)
cmp
stc
push
add
in
mov
mov
ret
adc
imul
ds
aas
add
cmp
int
ins
mov
fsubr
pop
retf
add
lods
xlat
pop
(bad)
jp
aad
sub
mov
sti
test
xchg
pop
sub
adc
test
pop
sub
std
repnz
sar
retf
or
loopne
jmp
pop
dec
ins
in
lds
dec
fcomp
out
or
int
sbb
push
imul
test
cmp
xchg
push
ret
test
jmp
pop
pop
adc
sbb
push
inc
aad
hlt
xchg
stos
mov
cwde
dec
retf
or
loop
dec
pop
push
pop
xor
pop
mov
aas
mov
(bad)
nop
adc
dec
icebp
sbb
shr
nop
and
mov
pop
jnp
mov
inc
fs
jb
jbe
pop
shr
js
arpl
xor
inc
mov
dec
pop
sbb
add
aad
(bad)
lock
call
stc
add
adc
mov
mov
in
ins
js
bound
loope
ds
mov
jmp
les
xchg
fnsave
jl
mov
add
mov
test
pop
xor
popf
inc
pusha
ret
jmp
xor
(bad)
das
or
test
arpl
jg
in
cld
fwait
mov
fnstenv
ret
mov
out
mov
aas
and
imul
xchg
(bad)
xchg
stos
jle
rcr
sbb
test
push
adc
in
mov
inc
int3
cmp
sbb
retf
xchg
push
push
adc
sub
xchg
pop
(bad)
(bad)
gs
inc
pop
cmp
out
out
inc
in
mov
jecxz
mov
push
mov
mov
(bad)
jmp
pop
cmp
jne
ret
jae
stc
rcr
jns
jp
dec
or
jb
sub
nop
or
and
pop
mov
fld
adc
out
sbb
add
cmp
add
retf
xlat
cmp
pop
cmp
sbb
imul
push
mov
jmp
sub
loope
mov
inc
ds
lock
dec
xchg
jmp
jno
cdq
mov
pop
pop
cmps
push
pop
or
iret
and
pop
test
xchg
mov
pop
cmp
fiadd
inc
mov
mov
fsub
push
add
jno
call
mov
sub
dec
inc
(bad)
mov
or
mov
add
ins
repz
outs
xchg
(bad)
mov
mov
or
lahf
inc
pop
cmp
and
adc
mov
inc
adc
mov
pop
in
sub
pop
inc
sti
mov
test
je
sub
outs
jmp
xchg
push
xchg
mov
stos
xlat
and
adc
sti
jo
cmp
and
out
rcl
cmp
dec
inc
shl
jae
push
mov
cmp
adc
and
jb
mov
jg
xor
enter
data16
mov
cdq
adc
mov
pop
js
cdq
popa
pushaw
ja
mov
sbb
and
cmps
xchg
sbb
inc
nop
adc
arpl
xor
adc
and
test
pop
mov
ror
cmp
movs
inc
xor
das
rcl
adc
mov
push
mov
adc
mov
lea
cmp
out
in
sbb
mov
ins
jle
cli
dec
mov
xchg
sub
imul
and
std
xchg
mov
addr16
mov
lock
cmps
xchg
aas
int
cli
cmps
push
pmuludq
fiadd
dec
mov
push
sub
add
jmp
loope
sbb
jno
lock
dec
pop
shr
xor
jge
sub
out
or
add
mov
and
sbb
(bad)
stos
inc
cmp
dec
retf
movs
push
test
mov
cmps
jns
pop
jo
adc
sbb
hlt
cwde
add
(bad)
neg
lods
xchg
cmp
cmp
test
test
cmc
jnp
dec
pop
mov
retf
mov
lahf
mov
xchg
and
jp
sahf
xchg
(bad)
in
movs
std
ret
cwde
and
xchg
dec
je
push
lods
mov
rep
add
sub
xchg
neg
(bad)
mov
xor
(bad)
xor
mov
addr16
mov
(bad)
popf
or
mov
ds
sub
mov
mov
dec
imul
pop
mov
or
lahf
mov
nop
aad
enter
cmp
shl
mov
inc
jns
pop
fwait
cmp
push
lds
aad
imul
shl
cld
mov
or
jb
cmps
mov
jle
xchg
call
(bad)
jg
mov
jbe
lock
hlt
cdq
cmp
ss
mov
and
pop
test
push
stc
adc
retf
sub
sti
xchg
out
mov
stc
dec
cmp
add
repz
fdivr
and
mov
test
imul
adc
test
data16
push
lahf
dec
add
adc
mov
das
out
fs
mov
rol
xchg
push
cs
dec
push
push
mov
dec
repz
mov
or
fs
call
stos
mov
add
cs
adc
rcl
pop
(bad)
iret
xchg
or
push
fcom
cmp
and
cmp
pop
call
into
enter
out
mov
inc
adc
outs
jl
push
jns
popa
adc
(bad)
scas
idiv
or
imul
sbb
dec
leave
and
popf
mov
xchg
lock
mov
in
mov
dec
addr16
and
mov
pushf
dec
cmp
mov
mov
mov
dec
in
mov
leave
pop
int3
aas
(bad)
jmp
push
test
xchg
cmp
sub
inc
jge
scas
(bad)
pusha
in
or
into
jmp
hlt
neg
add
popf
or
aad
fwait
fs
mov
enter
fdivr
shl
jge
ja
ds
push
popf
dec
test
jbe
and
pushf
jle
dec
mov
mov
push
sti
adc
repnz
fcom
ins
fs
jecxz
sbb
mov
mov
dec
test
sbb
sbb
pop
push
add
repz
sbb
dec
cmps
(bad)
push
jnp
sbb
mov
js
mov
inc
fld
lods
fsub
add
pop
push
icebp
and
sub
cmp
adc
mov
repz
pop
js
xchg
jecxz
into
adc
lds
sub
aam
(bad)
mov
stos
add
dec
jle
cmp
mov
dec
sar
and
dec
xchg
adc
not
ror
jmp
sar
push
mov
out
bound
sbb
xlat
stc
test
ret
mov
bound
rcr
xchg
xchg
imul
pop
int
inc
cmps
push
adc
cmp
test
cmp
fisttp
dec
cmps
push
dec
or
repnz
aam
or
call
push
xlat
mov
loop
mov
or
sar
jb
cli
(bad)
sbb
inc
push
addr16
enter
into
xchg
into
and
ret
jo
xor
mov
push
jne
xchg
rcr
ins
push
mov
int
mov
addr16
cmp
dec
xor
test
repnz
jmp
push
and
pushf
cmp
inc
enter
stos
sbb
jmp
mov
shl
xlat
shr
jno
ret
sti
mov
adc
aam
mov
addr16
lahf
xor
nop
pop
iret
test
dec
pop
popf
add
mov
lock
in
mov
add
mov
push
cdq
xor
mov
or
lods
push
xor
sar
das
aas
push
push
pop
sbb
mov
call
dec
fsub
mov
jno
hlt
dec
sub
(bad)
pusha
xor
pop
inc
adc
and
sahf
in
scas
push
mov
cmp
pop
rcr
mov
mov
fwait
out
add
pop
(bad)
and
dec
pop
ja
dec
sbb
rcr
pop
jmp
or
pop
(bad)
jle
xchg
or
int
sub
arpl
fnstcw
in
adc
int3
rol
std
pop
das
stos
xchg
fistp
mov
enter
pop
cmps
jmp
(bad)
stc
loope
int
(bad)
or
inc
cdq
sbb
sub
fucomi
in
sub
cmp
inc
and
(bad)
lods
test
aam
stc
push
inc
push
add
imul
push
popa
shl
cmp
pop
xlat
jns
imul
or
in
cld
scas
or
cdq
xor
xchg
mov
jmp
js
pop
xchg
push
jbe
push
sbb
sub
test
sub
adc
push
and
out
hlt
idiv
push
sub
ins
das
fsubr
out
xor
and
fdivr
scas
test
cwde
xlat
(bad)
adc
mov
inc
test
movs
lea
mul
push
enter
gs
inc
push
mov
nop
loopne
cld
repnz
repz
fdiv
mov
xchg
mov
dec
xor
in
cmc
push
loopne
data16
iret
xchg
adc
daa
pushf
mov
hlt
jno
xor
lock
and
fcmove
push
jmp
std
je
inc
jnp
pop
sub
and
fsubr
push
imul
dec
pushf
mov
mul
jg
mov
in
fst
sti
jecxz
cmp
mov
sub
movs
mov
and
jmp
and
lea
xchg
outs
ficomp
xor
bound
or
mov
cmp
test
cmc
ret
jnp
imul
mov
and
sbb
test
pop
mov
scas
push
dec
das
adc
mov
out
leave
mov
mov
mov
adc
and
pop
repz
les
stos
lods
fwait
out
push
pop
pushf
and
adc
push
out
je
jo
or
ins
jns
mov
fstp
(bad)
(bad)
int3
aad
fstp
push
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
cld
fstp
ins
leave
ffreep
retf
sub
push
in
ds
je
test
cwde
mov
fisttp
mov
leave
mov
mov
(bad)
in
enter
fcom
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
mov
out
jmp
rep
mov
out
out
icebp
out
pop
jmp
hlt
retf
out
out
in
out
loop
(bad)
stc
fcmovu
(bad)
sub
enter
in
in
movs
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
fcom
retf
stc
in
in
repz
jmp
cli
jmp
in
out
icebp
(bad)
clc
jmp
hlt
jmp
out
out
out
std
imul
aad
ftst
stc
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
(bad)
in
icebp
out
dec
repz
stc
(bad)
jmp
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
add
mov
in
std
(bad)
cld
sti
out
sbb
jmp
out
out
icebp
out
(bad)
jmp
hlt
stos
jmp
psubusb
in
out
std
int
(bad)
fxch
iret
aad
(bad)
stc
in
stc
out
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
mov
(bad)
cld
in
or
push
retf
ds
fxch
sbb
in
jecxz
in
aad
in
xor
sti
out
mov
adc
xchg
or
jecxz
mov
xor
shl
adc
mov
mov
test
shr
xchg
sbb
sbb
scas
mov
cdq
imul
xor
xor
lods
push
xchg
test
and
sbb
ins
mov
sti
int3
sub
dec
mul
dec
ds
dec
out
push
jp
outs
repz
cmp
mov
xchg
mov
hlt
iret
retf
mov
(bad)
pop
loopne
(bad)
lea
push
mov
add
adc
mul
enter
in
iret
(bad)
sar
mov
add
lods
mov
movs
mov
enter
out
in
clc
out
repnz
jmp
retf
jl
loope
(bad)
enter
stc
lock
shl
iret
or
jg
out
aam
inc
rol
sub
dec
inc
int
push
popf
(bad)
in
bound
(bad)
xor
ss
movs
cmps
div
stos
pop
cmp
adc
push
or
mov
fmul
sub
fsub
call
lods
sahf
fsub
out
add
out
clc
(bad)
cmps
in
clc
cld
and
(bad)
repnz
aas
scas
xchg
in
out
daa
mov
jb
xchg
icebp
scas
pop
xor
daa
mov
mov
jmp
stos
in
in
mov
imul
or
test
or
pop
jp
or
jne
jno
add
jae
jge
mov
jbe
cdq
loop
popf
lods
cmp
arpl
xor
jns
std
call
data16
sti
stc
imul
sbb
icebp
int
call
mov
stos
mov
xlat
je
pop
into
stos
jg
daa
dec
or
cmc
fucomi
mov
mov
jg
test
hlt
add
push
jmp
cmp
std
out
(bad)
leave
in
push
int
ins
mov
outs
or
cdq
neg
pushf
test
test
imul
adc
dec
mov
mov
icebp
(bad)
pop
stos
inc
call
ins
leave
ror
aas
les
sbb
sbb
pop
sbb
jecxz
(bad)
div
push
mov
xor
jmp
int
jne
jo
xor
push
ins
lock
test
ins
aam
test
push
mov
sbb
adc
(bad)
add
pop
rcl
xchg
test
retf
mov
sub
or
(bad)
daa
mov
enter
icebp
mov
dec
xor
inc
cwde
inc
jg
ins
daa
retf
and
in
xor
mov
aad
clc
enter
ja
jbe
fsubr
xchg
icebp
stos
rol
push
and
jae
push
pop
or
xchg
sbb
fs
push
dec
sti
clc
mov
mov
xchg
out
jmp
mov
jbe
sahf
inc
loope
xor
les
inc
and
bound
push
sbb
mov
or
out
mov
mov
es
add
jge
jo
or
mov
pop
mov
xchg
clc
mov
sbb
(bad)
jmp
add
cmp
xor
in
mov
sti
rol
sbb
leave
out
and
retf
sub
adc
(bad)
ins
adc
sub
jle
movs
mov
out
inc
ficomp
in
mov
(bad)
(bad)
push
movs
or
fnstsw
rol
lea
fcom
add
inc
cmp
jmp
jecxz
(bad)
sub
into
jae
pop
test
cmps
in
cdq
(bad)
inc
cmp
sub
xchg
stc
mov
lods
fadd
ficom
cmc
movs
repz
sub
arpl
out
outs
sub
and
push
jns
xor
mul
push
and
pop
dec
jge
aas
in
cdq
or
mov
in
cmc
dec
pushf
call
lods
call
sub
ds
call
mov
pop
clc
int
lds
fs
loopne
stc
ret
xor
mov
pop
mov
out
(bad)
cmc
dec
cmp
test
xor
fidivr
pop
cs
jecxz
add
adc
fwait
xchg
call
pop
int3
aas
mov
push
nop
aad
fmul
sub
ror
loope
xchg
fdivrp
sar
or
test
xor
in
imul
inc
fdiv
xchg
ffreep
mov
and
inc
mov
push
test
dec
jns
sub
ja
fmul
loope
push
push
movs
jg
scas
int
test
push
add
push
out
dec
imul
sbb
xor
xchg
sub
cwde
sub
or
out
jbe
cdq
call
clc
cli
inc
jb
pop
inc
xor
cmps
imul
dec
pop
cwde
pop
xchg
cdq
push
jmp
mov
adc
and
xor
xchg
out
mov
cdq
add
addr16
pop
hlt
div
pop
in
fistp
(bad)
cmps
dec
dec
inc
jecxz
call
xchg
cld
inc
or
mov
sub
inc
sub
mov
div
mov
test
mov
fdiv
and
pop
in
int3
sub
fstp
mov
push
mov
pop
and
dec
add
and
adc
aad
into
loopne
xor
int
aad
inc
push
fbstp
mov
push
inc
std
fcom
pop
iret
mov
in
jmp
push
lahf
mov
out
int3
fstp
mov
mov
scas
add
repz
mov
lds
add
push
sbb
jge
adc
sbb
or
loope
int3
cmp
push
ss
and
inc
xchg
cmps
gs
test
dec
adc
(bad)
out
in
(bad)
clc
cmp
xlat
test
jo
test
test
fdivr
mov
cmp
sub
adc
fstp
sub
in
cli
and
pop
mov
fstp
aad
ins
int3
add
call
sbb
inc
add
lds
std
cmps
retf
mov
iret
lea
xor
xor
out
pushf
adc
sti
aaa
ficom
test
xchg
out
into
cmps
xor
imul
jg
(bad)
loop
xor
sbb
xlat
sbb
ret
mov
in
in
aas
jle
bound
out
sti
shl
rol
(bad)
cmp
lock
mov
jp
jle
fld
ins
call
adc
ret
cs
jmp
and
lock
in
arpl
in
repnz
adc
pop
rcl
xchg
dec
jb
pop
add
sbb
neg
es
outs
and
mov
fsincos
test
add
mov
sar
ror
in
pop
mov
cs
fst
stos
ret
daa
ins
aas
xchg
int3
and
and
out
in
dec
out
sub
out
mov
cmps
ret
push
test
add
mov
jecxz
add
in
rcr
addr16
mov
push
daa
and
rcr
sahf
out
fisttp
out
xor
out
and
sub
iret
lds
aad
(bad)
jmp
(bad)
push
jl
jo
jg
sub
xchg
int
mov
and
inc
mov
jns
jecxz
add
jl
add
jb
jns
cmps
popa
int3
rcr
out
in
xor
mov
aas
cmp
sub
test
jge
mov
test
xchg
loop
and
jo
dec
or
imul
mov
aad
mov
xchg
out
mov
and
lds
xchg
or
sub
xchg
mov
lods
mov
pop
mov
mov
adc
(bad)
cmp
mov
jle
movs
into
push
cld
shl
test
mov
adc
(bad)
adc
loop
mov
adc
jno
cmp
mov
sbb
outs
mov
and
jle
adc
inc
icebp
loopne
mov
sub
xor
imul
pop
adc
stc
mov
or
pop
ret
js
(bad)
add
xlat
mov
arpl
(bad)
stos
(bad)
fsubr
add
into
outs
lods
mov
pop
pop
fsub
aam
pop
retf
and
jecxz
mov
loope
ret
ret
and
movs
movs
cld
in
push
int
mov
lahf
xor
outs
and
pop
jmp
xor
outs
pop
ins
rol
rcl
imul
mov
inc
(bad)
mov
jae
sti
xchg
dec
hlt
call
outs
sahf
xchg
add
mov
jnp
xchg
inc
jecxz
retf
mov
mov
cmp
mov
addr16
mov
bnd
retf
(bad)
adc
adc
out
xor
call
push
jmp
mov
mov
(bad)
jns
fwait
push
test
cld
(bad)
lods
out
sub
repz
das
(bad)
pop
mov
retf
mov
in
add
pop
sub
loop
adc
push
or
out
mov
xchg
sub
aad
aam
inc
icebp
test
mul
or
aad
in
mov
dec
mov
in
mov
repnz
mov
and
rcr
lock
or
(bad)
out
out
shl
out
xor
(bad)
lahf
mov
cmp
movs
xor
pop
cmps
loopne
mov
icebp
push
(bad)
nop
pop
and
xor
in
(bad)
ficom
movs
retf
nop
sub
xor
mov
fwait
loop
frstor
mov
cld
in
je
(bad)
sti
sbb
std
out
and
in
in
cmp
daa
mov
sub
adc
xchg
adc
ds
stos
mov
movs
pop
cmp
adc
adc
std
mov
xor
stos
aad
call
adc
ds
out
cld
test
xor
in
push
ror
xlat
adc
push
push
mov
inc
loope
js
mov
inc
test
adc
test
dec
popf
and
cdq
shl
jecxz
xchg
jge
test
shl
(bad)
(bad)
jmp
cmp
dec
xor
lods
mov
and
inc
cmp
test
icebp
jbe
xchg
arpl
fidiv
adc
mov
xor
sub
retf
loopne
(bad)
bound
push
jb
jmp
pop
push
push
add
out
std
mov
lock
mov
mov
sbb
movs
in
sbb
dec
pop
hlt
sbb
out
ja
and
cmp
arpl
test
push
loopne
gs
mov
push
fimul
gs
mov
aas
jb
sar
loop
jne
jnp
jl
push
sbb
out
das
xor
adc
add
add
xchg
pop
jmp
sbb
ja
mov
lds
in
inc
adc
ret
sbb
sti
xor
cmp
sbb
out
mov
outs
or
rcl
pop
fistp
xchg
hlt
and
mov
clc
rcr
pushw
adc
jb
fmul
loop
lea
repnz
inc
push
adc
jo
mov
call
addr16
sbb
aas
push
dec
cmc
dec
and
aas
push
aam
inc
fcomp
pop
fcmovb
pop
or
jmp
xor
jnp
xor
inc
inc
push
shr
or
mov
and
sbb
out
fld
jl
(bad)
xchg
inc
mov
pop
mov
jge
xor
test
pushf
ins
jp
dec
lods
in
in
push
or
adc
and
cmc
cmp
ins
jmp
xchg
mov
cmp
dec
js
jae
lahf
repnz
ds
imul
mov
adc
sbb
add
rol
imul
xor
popa
push
mov
xor
sbb
ja
lods
call
mov
(bad)
bound
test
mov
dec
cld
popa
das
jecxz
or
shl
and
inc
cld
push
nop
fst
push
loopne
xchg
test
es
mov
or
ja
mov
add
leave
mov
adc
mov
rol
jb
retf
mov
std
cli
jl
dec
fistp
ja
sbb
sbb
mov
adc
je
sbb
or
and
push
add
ss
push
iret
mov
ja
inc
inc
dec
in
jnp
into
sar
xor
fst
enter
adc
pop
cmps
sbb
(bad)
arpl
mov
pusha
mov
cdq
xlat
mov
and
xchg
add
xchg
jbe
cmp
sbb
ficomp
call
xor
in
sbb
sub
xor
daa
int3
dec
push
in
or
loope
ins
not
jno
fiadd
cli
pop
push
push
paddw
call
adc
mov
out
loope
hlt
adc
ss
call
xchg
clc
sub
aaa
sar
outs
icebp
adc
jbe
and
or
test
adc
das
arpl
mov
mov
cmp
ins
jmp
ss
mov
addr16
xchg
std
ins
icebp
outs
xchg
jmp
xor
in
jmp
push
retf
leave
int3
pop
jae
push
sub
(bad)
sub
push
pushf
or
sar
test
pop
or
jns
pop
(bad)
jle
cmc
not
xchg
jmp
inc
(bad)
pop
sbb
cmc
clc
hlt
xor
ins
div
shr
xchg
das
in
or
fsub
stos
or
pop
jnp
adc
sbb
ds
sub
xlat
pop
repnz
mov
cmp
xor
or
std
repnz
jbe
je
in
fisub
mov
pop
cli
imul
or
and
aad
scas
loop
mov
mov
inc
jmp
push
es
or
ficomp
es
sub
retf
add
loop
jg
test
dec
mov
sahf
fstp
iret
iret
out
mov
outs
stos
loopne
popf
loope
jecxz
in
loop
out
repnz
xchg
fdivr
cs
xor
adc
das
outs
or
test
cmp
push
std
mov
sub
das
mov
mov
in
push
adc
ins
mov
pop
dec
mov
imul
mov
adc
mov
cwde
pop
outs
pop
sbb
loope
repz
repz
call
rcl
pushf
or
repnz
sbb
scas
movs
out
xchg
out
mov
repz
nop
mov
aaa
fs
in
pusha
loop
out
jge
out
xor
lea
es
mov
(bad)
push
mov
jge
je
ret
jecxz
hlt
pop
je
jmp
(bad)
mov
adc
out
adc
adc
jecxz
cs
imul
pop
fabs
cmc
in
loop
mov
and
add
xchg
mov
lods
mov
mov
adc
push
loop
cld
mov
(bad)
out
push
sbb
lods
mov
sub
std
jb
in
retf
out
or
cmp
jle
in
das
hlt
cmp
(bad)
jmp
outs
mov
(bad)
loop
(bad)
mov
retf
popa
icebp
leave
sbb
pop
mov
(bad)
jmp
add
jbe
call
repnz
ds
loop
xchg
shr
sbb
cmp
lods
leave
jmp
and
or
(bad)
fsub
or
mov
into
jb
mov
inc
adc
mov
imul
ins
add
and
xor
stos
leave
mov
lock
test
test
mov
cld
neg
cmc
call
cmc
lods
sar
ret
or
fcomp
(bad)
fdiv
sbb
dec
pop
push
(bad)
pop
pushf
nop
retf
les
push
jg
mov
mov
xor
outs
dec
or
adc
push
sti
jle
aaa
xchg
in
or
std
push
out
repz
and
mov
push
(bad)
or
sub
push
add
mov
in
(bad)
mov
pop
jbe
mov
mov
push
sbb
pop
add
jge
lock
inc
lahf
or
fcom
pop
push
push
in
mov
call
scas
shr
sub
outs
pusha
stos
in
mov
cmp
clc
cmp
ror
and
test
arpl
clc
xchg
sub
jge
enter
adc
ins
pop
call
stos
push
pminub
stos
shl
cld
xchg
iret
retf
jg
mov
and
add
retf
add
rcl
adc
pop
xor
ror
sbb
push
jge
adc
and
jmp
std
inc
and
jmp
mov
add
jp
rol
mov
ror
cs
fadd
(bad)
rcl
dec
cli
cld
cwde
ja
stc
rol
xchg
dec
in
call
xchg
jle
clc
inc
mov
lods
in
lds
xchg
inc
mov
inc
or
je
pop
imul
jmp
pop
cmp
mov
call
lds
lods
bound
adc
icebp
cmp
push
mov
popf
test
loop
jno
mov
push
cld
xchg
bnd
ret
in
outs
add
add
sbb
pop
add
popa
inc
mov
xlat
xchg
popf
cmp
xchg
push
pop
popf
test
call
push
xlat
ja
cwde
hlt
scas
shr
cmp
xchg
jg
sub
ret
add
aad
mov
imul
and
mov
mov
xchg
inc
mov
xchg
sub
in
in
bnd
das
mov
icebp
or
rcl
jge
pushw
dec
push
test
clc
scas
in
dec
sbb
sub
(bad)
neg
mov
jl
(bad)
movs
imul
jl
ins
xor
lea
test
push
in
fwait
xchg
cmp
push
loopne
sub
and
xchg
into
cmp
into
jle
cmp
push
jmp
test
and
clc
in
(bad)
add
push
jns
das
jno
popf
lds
sbb
xlat
xlat
gs
adc
not
stc
repnz
stos
in
dec
mov
or
sub
mov
retf
call
jne
shl
xor
dec
cld
popf
movs
mov
(bad)
xor
(bad)
test
loopne
inc
and
and
shl
daa
push
repnz
scas
sar
add
inc
mov
jns
repz
test
repz
adc
repz
pop
sbb
call
push
push
sbb
lods
out
and
sub
sahf
inc
pop
pop
icebp
adc
fsub
lea
and
(bad)
mov
push
lea
sub
rol
dec
out
call
call
test
popf
adc
outs
mov
repz
cmc
in
adc
stos
stc
cdq
repz
stos
jne
into
dec
in
cmc
ret
stc
cmc
(bad)
daa
cli
cli
pop
dec
mov
sub
sti
sub
(bad)
mov
test
mov
cmp
pop
cld
or
idiv
jae
hlt
int3
in
imul
fcmovb
into
js
dec
push
dec
leave
out
call
mov
cli
dec
push
hlt
mov
inc
retf
pop
xor
ror
mov
inc
in
cmps
xlat
cmp
pop
shl
xchg
pop
test
outs
(bad)
jae
mov
dec
xchg
iret
out
mov
std
mov
rcr
fbstp
movs
mov
daa
dec
cmp
jmp
mov
cwde
not
out
or
jnp
adc
fbstp
cmps
loope
pop
mov
and
jecxz
mov
jne
mov
xchg
movs
enter
out
out
shl
(bad)
fcmove
ror
lods
std
jge
push
outs
cmp
push
cld
jge
ins
cld
lods
(bad)
and
cwde
mov
nop
mov
and
pop
mov
sub
in
(bad)
cmp
ins
sub
cmp
sub
mov
fld
data16
xchg
neg
nop
pop
sti
int
push
aam
add
fidiv
mul
in
mov
aas
mov
stc
test
xchg
add
js
loope
or
into
add
fcom
into
fld
pop
and
mov
test
push
push
clc
jge
mov
cmps
push
pop
or
int
lea
inc
int
shl
in
out
retf
sbb
std
mov
call
xor
dec
jmp
addr16
adc
push
test
in
out
xchg
out
dec
in
je
ins
pushf
adc
mov
jl
mov
outs
pop
cmp
mov
mov
jecxz
clc
inc
sbb
clc
loop
loope
mov
retf
push
nop
setle
test
jbe
lock
dec
test
and
pop
pop
stos
adc
push
ficom
mov
push
test
ret
adc
in
stos
ja
jo
mov
ins
icebp
lods
push
sub
pushf
mov
pop
mov
sub
push
mov
add
xchg
movsx
sbb
adc
stc
adc
rcr
vorps
clc
mov
sbb
je
addr16
jl
aam
mov
fimul
cmp
fldenv
ins
daa
mov
add
mov
sub
movs
ins
adc
(bad)
cdq
les
icebp
mov
and
push
inc
xor
mov
fisttp
pusha
div
cdq
sub
paddsw
loop
and
stc
sti
in
adc
adc
xchg
xchg
stos
and
xor
retf
ret
xchg
xchg
jl
push
mov
repnz
dec
mov
mov
sti
aad
pop
cdq
push
(bad)
and
xchg
jp
push
adc
aaa
cmp
fimul
or
inc
or
or
xchg
cmp
jecxz
outs
mov
cmc
jmp
out
cmps
push
jge
data16
loop
mov
mov
adc
test
scas
pop
outs
and
leave
adc
minps
in
(bad)
mov
sbb
lods
fisub
call
in
push
mov
or
das
push
(bad)
sbb
nop
(bad)
pop
pop
sbb
add
daa
adc
inc
cmp
push
cmps
fs
add
je
jmp
std
lock
iret
push
(bad)
cmc
(bad)
xchg
ret
js
shl
iret
js
(bad)
sbb
jl
movs
mov
mov
and
fsub
push
mul
or
test
xchg
(bad)
shl
out
xchg
out
sahf
xchg
div
mov
ror
enter
das
repz
cld
dec
pop
sbb
inc
mov
push
xor
cmp
mov
int3
fs
jecxz
inc
ror
aaa
in
gs
fst
add
clc
ret
fs
ds
xchg
out
ret
jno
sub
push
mov
fs
in
test
xor
jp
out
xor
jp
add
test
cmp
mov
adc
out
add
jmp
push
aam
fidiv
pusha
jp
ins
adc
mov
pop
mov
cmps
push
xchg
inc
add
sahf
(bad)
imul
cmc
pusha
xor
add
push
lea
xlat
popf
stc
mov
enter
lods
iret
loop
jmp
scas
mov
inc
fldcw
add
xchg
gs
loopne
fnstenv
sub
ret
add
out
mov
xor
pop
(bad)
adc
test
add
fstp
sbb
cmp
sbb
push
aas
mov
xor
(bad)
mov
mov
mov
(bad)
jge
mov
jbe
xchg
cmp
sub
lods
loop
ret
sub
in
hlt
xor
nop
jne
adc
mov
inc
mov
test
add
cdq
dec
push
lods
(bad)
sbb
mov
pop
cmps
or
lods
dec
daa
mov
aas
movs
pop
and
xchg
and
popa
mov
ficom
int3
jne
adc
mul
shr
inc
add
out
mov
clc
lds
push
mov
(bad)
fs
les
jb
scas
test
inc
scas
out
jbe
mov
mov
out
mul
pop
shl
push
lock
lock
jmp
mov
cmp
fistp
xchg
stos
loop
mov
cld
lds
lds
lods
lahf
xor
inc
mov
cmp
adc
and
xor
mov
xor
sbb
jecxz
fild
shl
dec
dec
adc
in
jno
rol
cmp
mov
into
outs
sbb
ror
sbb
mov
cmps
stc
loop
add
fwait
lahf
out
or
jne
retf
retf
shl
out
icebp
push
pop
xchg
jmp
out
fisttp
in
arpl
jmp
pop
sahf
aas
movs
(bad)
jg
out
xor
addr16
mov
inc
or
sub
out
pop
out
fsubr
scas
mov
inc
jmp
jmp
inc
in
push
mov
ror
xchg
hlt
daa
in
pop
pop
cld
(bad)
sti
xchg
(bad)
sti
or
jne
cmc
fs
call
(bad)
xchg
repnz
test
(bad)
mov
mov
cmc
sahf
not
xor
xor
mov
jmp
(bad)
sbb
fldcw
enter
stc
and
test
fmul
sbb
cmp
add
fmul
jb
ret
mov
mov
mov
repnz
retf
sub
mov
rcl
mov
xchg
retf
inc
les
jmp
popa
cdq
hlt
pop
into
cmps
cdq
pop
cmp
out
out
inc
xchg
inc
ficomp
sar
mov
iret
loope
mov
add
icebp
mov
cmp
xchg
xchg
out
psrld
push
out
ja
daa
js
loop
into
int3
movs
push
int3
into
adc
adc
out
pushf
mov
xor
enter
inc
adc
pop
add
sub
in
popf
cmp
(bad)
pop
mov
fcom
sbb
or
gs
ret
inc
jecxz
into
(bad)
mov
cmp
pushf
out
mov
cmp
scas
test
cs
frstor
mov
sub
mov
or
xlat
cmp
std
push
mov
popf
and
loop
xchg
push
into
jecxz
sahf
(bad)
hlt
fwait
mov
jmp
mov
pop
xlat
ret
leave
cmc
jno
mov
sbb
(bad)
push
jl
jge
sub
mov
shl
push
ficom
push
cmc
mov
retf
or
xchg
and
test
adc
sar
rcl
out
sti
out
ret
mov
les
(bad)
stc
(bad)
iret
out
fmul
int3
(bad)
in
fidivr
pusha
std
aad
es
loopne
pop
mov
cli
add
(bad)
and
daa
call
mov
sbb
add
test
mov
or
fidivr
push
add
call
xor
(bad)
jmp
(bad)
jge
push
out
xchg
out
mov
push
cli
cmp
aad
adc
bound
mov
fucomp
repnz
out
jae
push
mov
(bad)
xchg
gs
mov
mov
outs
pop
int
adc
retf
xchg
or
mov
jns
xor
add
jmp
lea
cdq
pop
arpl
sub
cld
cld
mov
push
and
in
or
outs
dec
sbb
inc
out
dec
dec
retf
xor
(bad)
es
jnp
mov
popa
(bad)
push
clc
movs
adc
(bad)
push
sbb
(bad)
outs
sub
adc
ffree
call
(bad)
jl
imul
xchg
pop
cmps
pushf
lds
or
(bad)
out
sub
stc
out
sahf
stos
loop
popf
cmps
in
loopne
and
inc
icebp
add
out
iret
mov
cmps
fcom
xor
icebp
sub
sub
or
(bad)
sub
and
and
adc
or
xor
inc
sbb
out
mov
or
sbb
cmp
gs
sub
cmp
cmp
mov
jmp
mov
push
add
sub
shl
std
mov
sti
js
adc
stc
push
mov
ss
nop
in
pop
ss
jae
jnp
xlat
into
or
jge
(bad)
jb
call
repnz
pop
mov
push
gs
add
sub
sbb
adc
ficomp
fwait
hlt
sbb
sbb
rcl
(bad)
mul
xor
adc
loopne
and
gs
mov
pop
cwde
xor
and
gs
sub
mov
popf
movs
push
retf
addr16
pop
xor
test
xor
pop
cmp
add
mov
in
xlat
cmc
push
sbb
xchg
(bad)
adc
out
call
hlt
jne
aam
xor
lds
jmp
pop
cld
mov
retf
ret
sbb
inc
inc
loop
ret
(bad)
shl
mov
xor
outs
xor
pop
in
xor
inc
xlat
adc
xor
pop
push
and
or
int
out
arpl
movs
js
ret
sbb
mov
in
(bad)
(bad)
mov
call
pop
push
inc
add
(bad)
jmp
xlat
sahf
mov
sbb
loope
cmp
mov
rol
adc
sbb
cli
adc
inc
mov
leave
(bad)
ficomp
stos
cld
cli
pcmpgtd
icebp
lods
test
adc
or
and
aad
fadd
adc
retf
retf
aam
out
rcr
cli
mov
lahf
jecxz
daa
out
jmp
sbb
mov
in
or
in
in
outs
sub
std
cmp
inc
add
sbb
inc
push
jae
repz
adc
mov
fcomp
ret
idiv
xchg
rcr
and
add
cmp
int3
sbb
mov
repz
lds
fpatan
cmp
sbb
outs
dec
xchg
(bad)
cmp
jno
sub
(bad)
mov
jne
jmp
cld
push
jmp
push
or
xor
jno
leave
scas
neg
mov
pop
push
aas
pop
mov
sbb
mov
enter
pushf
or
gs
out
fidiv
in
movs
das
mov
adc
outs
cmp
add
std
cmp
sar
scas
std
scas
fisubr
adc
sbb
mov
mov
loop
aaa
adc
inc
sbb
daa
cmp
icebp
xlat
inc
call
add
push
cmp
mov
pop
(bad)
mov
pop
in
mov
cmps
xchg
ss
leave
sub
cmp
sbb
or
mov
dec
pop
push
jae
pop
aad
cli
cs
(bad)
or
call
loopne
adc
fldenv
ds
ret
xor
std
jb
xor
mov
xor
test
shr
cmp
jns
lea
jmp
fstp
ret
add
or
adc
jno
(bad)
sbb
imul
std
cmps
dec
xor
repz
adc
popa
adc
cmps
add
mov
fisubr
pop
adc
sbb
and
idiv
and
xor
call
mov
mov
in
loop
jl
xlat
mov
mov
idiv
jl
nop
loopne
loop
sbb
mov
cmp
mov
sub
sbb
adc
stos
ret
jb
jb
ins
sbb
xchg
add
dec
outs
mov
xor
out
out
xchg
adc
loope
push
mov
pop
mov
inc
lds
(bad)
or
loopne
mov
add
movs
in
xchg
ret
ror
adc
or
cmp
xchg
loop
div
ret
jne
push
outs
iret
jl
push
popa
(bad)
fisttp
pop
lea
sub
ins
xor
mov
fwait
xlat
pusha
adc
pop
jnp
and
loope
sub
cwde
cs
cmp
jnp
mov
mov
jae
inc
mov
push
pop
clc
nop
out
fs
add
scas
int
es
push
mov
ret
mov
jg
xchg
push
push
mov
mov
mov
(bad)
shl
test
mov
stos
xchg
je
mov
mov
xchg
jmp
push
lock
stos
xchg
sub
fwait
xor
inc
call
jmp
movs
xor
in
or
dec
jmp
mov
pop
adc
loopne
mov
mov
and
xchg
and
mov
inc
sahf
ret
in
loopne
cdq
(bad)
retf
(bad)
not
cld
add
xor
push
lds
adc
mov
push
ins
call
std
fwait
jns
in
(bad)
jp
pop
or
bound
sbb
xor
add
test
inc
add
cld
cdq
fcmovbe
adc
add
pop
add
cli
loop
das
ret
mov
dec
sub
mov
cld
lods
jle
ror
xchg
push
jmp
ins
and
dec
test
popf
xlat
popf
fistp
idiv
imul
std
repz
out
out
test
imul
or
out
adc
nop
adc
scas
jle
push
repnz
mov
sbb
test
fwait
cwde
xchg
xchg
cdq
fld
add
xor
xor
pop
ret
loop
call
(bad)
into
mov
inc
mov
sti
lds
(bad)
(bad)
cmc
lock
pusha
clc
leave
mov
adc
gs
(bad)
cmps
mov
std
imul
sahf
out
ret
aad
lods
loope
(bad)
sbb
rcr
sahf
ins
add
lods
arpl
jg
frstor
mov
dec
sub
clc
sub
loopne
dec
test
jle
in
xchg
adc
lea
loope
test
jecxz
cmps
scas
mov
repz
mov
aad
out
add
mov
adc
test
es
and
or
pop
in
arpl
enter
(bad)
retf
mov
imul
dec
loopne
push
repnz
stc
test
xchg
pushf
das
movs
mov
xor
sbb
js
xor
movs
jmp
icebp
mov
push
imul
icebp
fild
jb
sub
jecxz
push
fwait
or
dec
(bad)
sbb
or
cmp
pop
pop
loope
mov
xor
(bad)
clc
mov
mov
push
sbb
jl
jg
fadd
lds
jne
leave
push
xchg
popa
sub
pop
out
or
in
fwait
xchg
mov
js
fimul
or
fisubr
sti
xchg
lods
xchg
xor
out
call
rcl
add
lock
mov
dec
test
stc
add
jge
push
jnp
je
addr16
scas
cmp
jmp
out
add
jmp
(bad)
pop
push
retf
mov
cs
cs
xor
(bad)
push
cs
ja
pusha
and
inc
fadd
popa
(bad)
imul
ficomp
test
mov
fwait
sbb
fucomp
loope
cmc
in
clc
in
stc
movs
(bad)
jecxz
sbb
mov
xchg
enter
cmps
lahf
mov
outs
dec
adc
gs
jge
iret
xchg
or
fstp
inc
or
xor
xor
out
(bad)
shl
ds
jmp
loope
lods
pop
inc
jle
and
push
ins
out
mul
jb
int
push
mov
cmp
mov
sbb
mov
fs
das
inc
in
idiv
int
fld
lock
push
push
outs
xchg
shr
dec
cmps
ja
call
mov
sub
into
retf
sar
das
mov
lea
dec
cli
xor
(bad)
mov
fsubr
(bad)
push
jns
movs
test
int
popf
icebp
jmp
imul
and
jmp
enter
dec
xor
movs
push
inc
(bad)
xchg
mov
mov
sar
cmc
sbb
push
repz
out
cmp
fldcw
jns
cmc
adc
or
aad
ror
or
leave
fmul
shl
cmp
int
xor
xor
jne
(bad)
shl
sub
dec
in
cmc
(bad)
(bad)
hlt
test
or
sub
adc
bound
pushf
(bad)
cli
sti
jecxz
rol
rol
add
aam
retf
push
add
sbb
loope
loopne
adc
push
loopne
rcl
and
xor
rol
fistp
inc
push
pop
ret
ror
rol
inc
(bad)
xlat
enter
arpl
(bad)
(bad)
jnp
bound
(bad)
iret
int
call
test
mov
icebp
in
repz
movs
mov
aam
into
fnstsw
(bad)
rol
stos
leave
rol
ret
aad
fxch
(bad)
ror
rol
cmc
out
int
rol
(bad)
cli
cld
jmp
retf
mov
inc
push
dec
xchg
jno
ja
xchg
mov
addr16
xchg
adc
mov
mov
mov
movs
mov
bound
mov
pop
xchg
cwde
xchg
xchg
mov
mov
stos
sbb
mov
mov
stos
mov
(bad)
stos
stos
cmps
mov
fadd
iret
fsub
jmp
fcmovbe
fcmovne
repnz
(bad)
mov
add
ret
int
or
pop
bswap
(bad)
shl
ret
cmp
ror
ret
push
inc
pop
int3
(bad)
rcr
inc
push
(bad)
retf
enter
inc
(bad)
dec
mov
pop
in
cld
cmps
sub
js
jecxz
mov
dec
xor
and
ficomp
mov
(bad)
aad
dec
jl
pop
jg
fnstsw
or
mul
loop
lahf
je
push
xor
pop
jg
inc
gs
movs
jne
mov
loopne
sbb
out
test
cmp
xchg
mov
or
stc
(bad)
sti
mov
xor
push
inc
or
lods
mov
mov
sbb
fnsave
mov
jb
sti
add
ret
lahf
aaa
lods
mov
cli
dec
int3
or
jnp
aad
cdq
into
cli
mov
call
dec
stos
fcmovu
jg
inc
mov
inc
mov
call
aaa
jg
stos
sar
push
and
dec
(bad)
scas
pop
cmp
outs
in
test
xor
xor
ret
test
mov
or
xchg
xchg
je
adc
xchg
int
mov
mov
enter
repnz
mov
pop
mov
shl
xchg
test
popf
cwde
adc
cwde
mov
aaa
sub
out
xchg
(bad)
shr
ret
int3
icebp
movs
mov
xchg
push
mov
mov
test
xchg
aas
loopne
outs
stc
shr
out
sub
aas
mov
call
retf
and
sub
nop
push
pop
aad
movs
jecxz
mov
pop
xchg
and
add
xchg
or
repnz
jmp
push
adc
add
mov
jae
enter
retf
ins
mov
ds
sbb
xor
aaa
int
out
imul
fist
xchg
leave
jnp
out
mov
add
sub
sbb
pop
shl
push
stc
xchg
adc
jb
(bad)
(bad)
call
(bad)
popf
popa
inc
push
jno
dec
or
jno
mov
push
rcl
xchg
inc
and
cwde
movs
sbb
sbb
mov
push
out
clc
jmp
pop
and
ds
call
call
jmp
sub
xlat
in
test
rcl
fwait
and
and
jo
mov
daa
dec
inc
mov
xchg
sub
psrlw
into
ins
movs
daa
and
inc
inc
push
xchg
mov
cmp
push
stc
mov
rcr
push
push
and
inc
mov
cwde
cmps
fcomi
ret
movs
cwde
sbb
jae
jecxz
sti
mov
imul
or
mov
and
mov
test
ins
add
leave
shr
xchg
(bad)
lock
cmp
rcl
nop
outs
ins
repnz
mov
xor
pop
ins
ret
icebp
xchg
loope
dec
jmp
pop
mul
icebp
mov
xor
push
in
out
mov
adc
add
mov
fsub
xchg
ins
imul
mov
jno
mov
fild
jle
mov
cli
mov
cmp
dec
scas
xor
jnp
cmc
inc
fidiv
mov
sub
mov
loope
sbb
sub
shl
mov
adc
sub
or
jmp
aas
dec
pop
cmps
mov
movs
ss
jne
dec
dec
mov
push
lods
daa
dec
clc
adc
imul
in
in
and
loopne
mov
sbb
fstp
add
movs
mov
loop
mov
test
cmps
ins
out
mov
popf
xchg
sub
(bad)
ins
push
mov
(bad)
out
cli
xor
stos
xor
shr
mov
mov
lahf
sar
imul
inc
fistp
pop
aam
adc
mov
pop
hlt
and
cmp
fucomi
ja
mov
xor
ins
retf
adc
sar
mov
out
add
jmp
mov
lea
mov
inc
popf
cli
push
sar
and
xchg
jmp
stc
or
int3
fidivr
add
aad
mov
movs
mov
jae
inc
inc
sti
into
fs
push
out
add
loopne
hlt
push
mov
jmp
pop
retf
or
retf
into
mov
xorps
dec
push
jl
outs
or
cmps
adc
add
mov
mov
(bad)
push
mov
pop
push
imul
pusha
scas
int3
mov
adc
and
repnz
scas
ret
(bad)
push
outs
stos
dec
stc
and
xor
imul
repz
call
in
imul
out
add
test
jbe
icebp
loopne
mov
xchg
mov
ins
dec
movs
out
arpl
pop
dec
sbb
sbb
push
and
xchg
inc
in
and
(bad)
jecxz
cmp
into
imul
loop
cmp
addr16
add
jmp
mov
adc
neg
and
pusha
leave
dec
cmp
std
dec
bound
test
jl
add
mov
gs
mov
daa
(bad)
in
and
mov
fcmovnbe
fwait
arpl
push
scas
dec
dec
imul
xor
mov
xchg
out
movs
imul
sub
in
xchg
pop
fst
(bad)
push
scas
or
call
mov
movs
(bad)
sahf
test
sub
stos
mov
fldcw
nop
dec
and
jmp
jg
stos
mov
dec
ficomp
push
retf
cld
pop
mov
add
dec
mov
jne
leave
in
out
xlat
jmp
cmp
inc
in
rcr
pushf
ror
or
push
iret
rcl
mov
or
iret
jl
mov
or
es
add
pusha
lods
add
mov
and
inc
fstp
pop
ss
cmps
mov
hlt
mov
cmp
loop
sub
out
lea
dec
seto
js
sbb
shr
cmp
cmp
(bad)
jp
jns
pop
out
scas
aam
hlt
mov
out
clc
fsub
sbb
out
in
sbb
sub
xchg
shr
fwait
icebp
adc
push
das
mov
scas
test
cmps
outs
ds
aas
fisttp
jecxz
fimul
mov
cwde
test
cmp
jle
sub
pop
dec
je
pop
mov
test
or
push
dec
and
scas
xor
xchg
stc
sub
fucomip
mov
imul
out
pop
icebp
mov
imul
jnp
ret
mov
pop
jp
sar
fst
xor
into
push
mov
lahf
mov
fs
movs
call
pop
mov
addr16
push
mov
cdq
inc
(bad)
out
or
add
jmp
enter
cmp
mov
cmps
sub
mov
scas
mov
push
cmc
stos
in
or
add
pop
push
push
pop
push
and
push
mov
aad
fidiv
je
into
mov
jae
in
jge
add
fmul
sub
sub
imul
xor
scas
dec
xchg
cmp
hlt
cmc
in
cmc
imul
stc
add
rol
sbb
ret
add
mov
scas
test
lods
mov
das
daa
jmp
(bad)
mov
cmps
push
mov
fucom
sbb
inc
out
repnz
pop
fdiv
xchg
inc
mov
fs
cmc
pop
inc
test
lods
(bad)
sar
push
fiadd
jbe
pop
shr
sahf
(bad)
div
shl
mov
mov
lods
loopne
icebp
jb
push
mov
mov
sbb
fisub
push
icebp
add
ds
push
ins
mov
or
push
ror
fisttp
scas
dec
mov
xchg
adc
cmp
jmp
sti
xchg
inc
adc
fld
sbb
movs
outs
mov
cmps
es
inc
rcr
repz
xchg
pusha
push
cmp
cdq
jne
xor
push
jmp
jmp
mov
xchg
(bad)
inc
and
(bad)
ins
fsubr
stc
inc
mov
mov
mov
xchg
mov
mov
daa
mov
pusha
cmp
jle
inc
mov
inc
div
cwde
cwde
cwde
add
movs
jmp
sub
dec
sbb
mov
pop
sar
cmps
sub
fwait
inc
loop
xor
add
mov
dec
stos
iret
jo
fistp
xchg
xchg
add
outs
daa
push
fld
push
cmp
(bad)
sar
retf
ins
idiv
xor
icebp
add
outs
js
xor
repz
mov
pop
sub
mov
pop
or
push
push
fs
cs
movs
rcr
pop
push
xchg
jnp
aas
adc
adc
sahf
sti
sub
adc
jp
sti
mov
loopne
push
scas
(bad)
xchg
push
jbe
add
sbb
cli
mov
aam
loope
mov
in
and
cld
adc
push
push
or
ins
or
in
add
cs
and
addr16
mov
dec
and
repz
cs
mov
pop
imul
fistp
in
mov
test
mov
and
push
je
push
push
ds
mov
xchg
push
mov
call
xchg
jno
mov
dec
lock
add
mov
push
jecxz
sahf
jmp
mul
cdq
mov
xchg
jb
retf
push
mov
jae
mov
dec
sbb
xchg
pop
push
nop
sbb
xchg
adc
adc
mov
test
mov
adc
jbe
aad
mov
sub
cmp
xchg
mov
xlat
add
mov
and
movs
ficom
dec
mov
pop
sub
pop
rcr
(bad)
fiadd
je
jg
pushf
push
mov
lock
addr16
test
fs
mov
mov
sub
cli
push
xor
(bad)
mov
(bad)
inc
iret
pop
mov
or
mov
push
pusha
pushf
js
scas
mov
icebp
scas
jg
lock
pop
nop
movs
mov
pop
dec
mov
repnz
mov
in
adc
ja
mov
xchg
mov
int
fdivr
out
ret
inc
and
(bad)
and
mov
aam
imul
dec
or
out
sbb
ror
lods
enter
sbb
mov
mov
xchg
or
or
mov
fsub
push
or
scas
imul
xchg
mov
in
fdiv
push
mov
in
cmp
jns
sbb
push
sbb
mov
shl
movs
retf
movs
inc
test
fwait
mov
(bad)
adc
sti
adc
xor
cs
fsub
imul
dec
in
das
jp
test
retf
pop
or
repnz
dec
(bad)
jg
cmp
repz
in
xchg
inc
out
loopne
mov
jmp
pop
scas
xchg
(bad)
icebp
cs
mov
mov
mov
call
imul
repnz
mov
icebp
push
adc
into
outs
push
enter
(bad)
shr
leave
int
jp
adc
lods
iret
xor
shl
and
shr
and
mov
fcom
mov
mov
jns
(bad)
mov
nop
add
out
pusha
sbb
inc
or
and
stos
lahf
into
mov
(bad)
or
and
out
adc
mov
jg
jmp
in
mov
sahf
push
xchg
lock
sub
sbb
ins
add
not
call
fcomp
lods
adc
(bad)
jbe
into
lods
cld
xor
push
and
adc
adc
xor
add
dec
push
(bad)
pop
not
xlat
cmc
jns
pop
mov
cmp
mov
shr
pop
(bad)
call
mov
jmp
mov
mov
out
jmp
adc
call
inc
mov
ss
mov
adc
jge
ds
scas
dec
mov
mov
jno
jns
(bad)
(bad)
mov
dec
lods
sbb
les
scas
aam
jbe
jns
sti
inc
push
cld
(bad)
dec
or
pop
adc
or
mov
cdq
popf
inc
jge
push
imul
xchg
hlt
mov
js
rcl
xor
out
dec
mov
mov
retf
xor
fnstcw
pop
retf
test
xchg
cmp
cmp
xor
(bad)
cmc
pop
sub
pop
inc
repz
enter
sub
popa
retf
pop
outs
mov
push
mov
out
pop
dec
push
add
scas
cmps
sub
cmp
std
pop
test
aas
push
shl
(bad)
jo
xchg
(bad)
cs
pop
scas
push
ss
mov
add
fnstenv
retf
add
jno
xchg
mov
pop
xor
cld
test
bound
mov
fstp
enter
inc
ja
std
push
clc
lods
lahf
mov
xchg
fs
sbb
push
dec
loopne
push
fnstsw
add
mov
fidivr
test
shl
inc
ins
push
in
arpl
or
test
mov
aaa
dec
lods
add
test
mov
and
pop
jmp
out
pushf
les
xor
xchg
mov
xlat
jo
xor
mov
mov
scas
cwde
dec
jnp
imul
pop
dec
pop
mov
fiadd
sbb
out
jl
lea
cli
(bad)
out
in
add
xchg
(bad)
sbb
push
pop
mov
sbb
cld
adc
mov
sbb
test
sbb
shl
cmp
xchg
xchg
mov
inc
cli
jns
icebp
xchg
add
push
div
pop
hlt
rol
fwait
(bad)
sti
add
mov
mov
cmp
cwde
aad
mov
sbb
xor
pop
das
push
mov
jge
xor
lahf
mov
adc
add
leave
shl
xlat
stc
call
jo
aaa
jmp
cs
arpl
cwde
gs
xor
or
and
ror
loopne
add
and
cmps
addr16
loopne
xchg
in
loope
cld
adc
and
mov
and
adc
idiv
shl
movs
(bad)
(bad)
push
fs
mov
les
jecxz
inc
je
xchg
loopne
ins
in
jecxz
leave
sub
mov
and
ret
ret
xor
dec
sbb
pop
ficom
lods
loop
sbb
(bad)
hlt
int3
loop
xchg
pop
mov
fidiv
mov
je
(bad)
leave
and
int
sbb
push
cld
sti
cmp
leave
jbe
jo
push
or
in
in
in
aam
mov
inc
icebp
les
adc
and
out
cmc
sbb
out
repnz
mov
xchg
add
mov
cdq
retf
sub
adc
jae
jl
and
in
test
mov
dec
sub
push
jmp
and
cld
push
mov
fdivr
daa
jns
fcomip
retf
aaa
mov
mov
loop
or
dec
xchg
ins
stos
mov
mov
mov
lock
sbb
xchg
push
pushf
or
cwde
mov
ins
(bad)
in
xor
mov
jle
sbb
jno
stos
sub
sbb
jle
lods
ins
aaa
test
pushf
mov
pop
mov
ror
xor
jne
shl
jp
shr
fcom
test
cmp
(bad)
cmp
enter
adc
mov
xchg
mov
jmp
mov
xchg
mov
cmc
sbb
ds
out
pop
jne
inc
cs
lods
call
out
fcomp
push
ret
fnstsw
add
test
aad
and
sti
ror
or
mov
sub
add
into
pop
sub
mov
pop
popf
mov
pop
mov
cmp
xchg
mov
jp
inc
jmp
pushf
mov
out
rcr
adc
xchg
push
test
pop
cmp
pop
iret
push
das
cmps
xchg
pop
movs
repz
arpl
js
pusha
cld
test
add
cmp
mov
ret
fild
not
(bad)
xor
push
js
jo
hlt
pop
clc
scas
fidivr
jle
jp
mov
inc
shl
mov
(bad)
loope
stc
mov
mov
mov
mov
sbb
div
push
push
rcr
mov
mov
aas
jge
mov
dec
jl
rcr
mov
leave
(bad)
int3
and
scas
add
xor
cmp
sti
push
sahf
lds
pop
loopne
call
cli
push
mov
dec
and
retf
(bad)
loope
mov
stos
scas
hlt
lea
sti
int3
hlt
sahf
arpl
cld
jo
ss
aad
inc
mov
in
push
pop
and
pop
jb
cmp
movs
scas
ss
aam
mov
es
lods
mov
sbb
xor
mov
std
push
(bad)
call
fwait
inc
jmp
int
mov
std
fwait
jecxz
movs
daa
(bad)
xor
lahf
hlt
xor
lea
mov
mov
jb
and
mov
cli
lds
shl
inc
int
xabort
mov
inc
nop
in
xor
retf
pop
loopne
hlt
movs
ss
push
sub
dec
mul
sub
push
dec
inc
into
mov
sti
pop
scas
xor
out
lahf
jmp
fwait
mov
sbb
cld
jge
mov
cmp
cmp
xor
mov
cmps
cmp
out
imul
shl
pushf
repz
jmp
xchg
or
sbb
shl
jmp
mov
jg
xor
hlt
sub
fninit
(bad)
jecxz
in
fist
push
inc
xlat
xchg
arpl
mov
push
icebp
ins
loope
popf
clc
push
das
stos
out
xchg
daa
imul
pop
xchg
mov
into
xor
cmp
imul
imul
lahf
xchg
mov
xchg
popf
xor
out
add
dec
(bad)
cmc
les
test
cli
icebp
movs
lock
bound
or
adc
cli
pop
xchg
sar
out
(bad)
and
enter
mov
mov
leave
div
outs
lods
pop
fsincos
repnz
dec
ds
xchg
add
imul
jmp
cld
fadd
mov
(bad)
adc
xchg
xchg
jo
ret
xchg
cmps
xor
stc
cmp
call
xchg
fwait
mov
mov
ss
cwde
and
mov
cdq
xchg
shl
xchg
xchg
mov
pushf
xchg
hlt
lahf
mov
or
mov
xor
test
inc
xchg
mov
xchg
fld
je
mov
outs
pop
das
cld
outs
lock
dec
push
pop
test
add
mov
add
mov
mov
ins
mov
popf
test
mov
xchg
test
dec
stos
mov
and
mov
repz
arpl
sbb
imul
mov
in
cwde
inc
fdivr
pushf
pop
xchg
movs
clc
lahf
addr16
(bad)
mov
adc
in
arpl
test
out
xchg
fwait
xchg
mov
sbb
mov
scas
js
jmp
sub
sub
stos
mov
push
pop
xchg
sahf
mov
pushf
xchg
cmp
(bad)
mov
and
mov
push
jecxz
or
adc
in
or
in
repnz
(bad)
mov
or
push
mov
jmp
inc
mov
(bad)
mov
pop
lds
mov
mov
mov
jae
(bad)
in
mov
cmps
mov
mov
mov
sahf
or
sahf
push
xchg
jg
test
pop
cli
loope
gs
out
(bad)
enter
ds
mov
scas
lods
iret
rcpps
pushf
stos
mov
mov
loope
aas
fcom
push
push
push
xchg
lahf
xchg
mov
in
repz
mov
sbb
and
imul
scas
mov
mov
xchg
stos
fisubr
mov
rol
mov
add
cdq
repnz
ret
push
xchg
cmp
out
xchg
in
lahf
mov
jo
add
lahf
dec
mov
ds
stos
xchg
(bad)
mov
ins
hlt
or
cwde
mov
pop
out
and
outs
jmp
ds
neg
mov
and
das
mov
jp
and
dec
xchg
xor
or
inc
imul
sub
stos
test
mov
clc
aad
shr
repnz
mov
fcom
mov
mov
(bad)
sbb
sub
jg
push
inc
rcl
outs
(bad)
sahf
out
or
test
xchg
xlat
mov
scas
bound
xchg
push
lea
out
mov
inc
outs
cld
push
xchg
ds
add
retf
push
mov
cmp
lds
xor
shl
push
icebp
js
xor
inc
pop
movs
imul
lahf
(bad)
popa
clc
call
stos
mov
in
inc
inc
test
aad
in
or
mov
movs
aad
rcr
popf
xchg
or
add
xchg
addr16
mov
not
lock
or
inc
jmp
adc
jle
test
mov
push
and
rcl
xor
lds
neg
cmc
aad
jmp
in
mov
pop
xchg
jge
out
inc
out
lock
inc
push
sti
loope
std
popf
dec
dec
mov
paddq
ja
adc
stc
outs
loope
mov
lods
or
(bad)
mov
push
cwde
jne
ret
bound
push
sbb
dec
fldl2e
imul
and
pop
jg
in
cs
fcomip
in
sbb
lods
mov
sti
jb
jge
mov
push
inc
aam
ins
test
loope
hlt
mov
outs
jnp
dec
nop
out
mov
or
xchg
nop
(bad)
or
mov
sub
mov
jbe
test
cld
mov
arpl
or
call
pop
nop
outs
xchg
clc
idiv
mov
rcl
sbb
into
fcom
mov
fucomi
pop
int3
fwait
mov
or
xor
cmp
cmp
ret
fldcw
pop
mov
pushf
mov
ja
data16
out
mov
call
fld
in
nop
hlt
sub
adc
xor
mov
jp
dec
je
addr16
or
inc
cdq
retf
enter
fcom
or
in
xor
fidiv
ss
out
mov
popf
mov
adc
daa
adc
xchg
repnz
data16
sub
ror
or
loop
clc
shl
mov
mov
mov
in
in
xor
jl
cdq
movaps
retf
mov
retf
ret
movs
xchg
cli
mov
xchg
or
pop
inc
into
gs
mov
fld1
xor
pop
cmps
cmps
fcomi
xchg
add
jb
ds
xchg
mov
cmp
pop
outs
dec
mov
rcl
adc
adc
adc
mov
stc
pop
cmp
mov
jb
add
outs
cmps
mov
push
std
xchg
xchg
std
test
call
out
adc
call
retf
out
ds
loopne
test
es
out
cmp
cmp
lock
in
push
repnz
mov
mov
pop
adc
(bad)
xchg
sub
xor
cmps
call
xchg
dec
or
pop
(bad)
fcmovu
pusha
test
inc
sbb
sub
popa
pop
fbstp
fs
loopne
jecxz
ss
loope
out
push
sti
or
dec
jne
pop
dec
psubq
ds
nop
repnz
nop
mov
rcr
inc
mov
sbb
fisub
push
and
xchg
pusha
cmp
mul
mov
nop
test
mov
cmp
fs
stc
in
jb
stc
sahf
les
pop
ins
adc
aam
cmp
outs
xlat
out
stc
repnz
call
jmp
xor
pop
mov
test
loope
sub
outs
and
jae
in
fld
not
sbb
cmps
out
sbb
dec
jmp
clc
sbb
jmp
mov
xchg
loopne
in
stc
mov
hlt
mov
mov
leave
fidivr
push
adc
sub
sbb
push
lahf
xor
je
imul
popa
mov
sub
(bad)
lea
stc
inc
mov
and
adc
jge
fldenv
ret
(bad)
pop
mov
push
xchg
icebp
inc
sub
add
out
mov
jmp
repz
pop
loop
sub
in
push
daa
sbb
scas
mov
jp
stos
retf
gs
xchg
daa
adc
mov
clc
ror
pop
movs
and
or
cmps
shr
add
push
imul
dec
sar
aas
neg
ss
xor
or
pop
adc
je
loop
mov
std
test
mov
movs
shl
sbb
cs
dec
xchg
push
cmp
mov
xchg
lods
stos
mov
xor
cmc
icebp
or
mov
inc
test
ror
xor
in
outs
and
cmp
inc
fcmove
mov
jne
add
fsub
js
and
idiv
sbb
addr16
sahf
jno
lods
rol
data16
push
add
push
out
out
adc
inc
cdq
stos
add
call
adc
imul
adc
pop
jecxz
sar
call
imul
pushf
sub
pop
cmps
pop
outs
lahf
out
pushf
mov
movs
mov
mov
out
ins
jne
adc
mov
imul
add
jbe
cmc
xlat
out
push
sti
pop
int
inc
mov
xlat
leave
fnstenv
fcmovu
sti
ret
fwait
(bad)
mov
ror
cmps
enter
test
int
int
cmp
sar
sar
mov
sti
pop
(bad)
lods
(bad)
icebp
rcl
int
in
call
push
push
xchg
cmps
pop
pop
cli
sub
in
cmp
sbb
das
add
dec
stos
jl
push
jmp
stc
gs
mov
(bad)
mov
jecxz
loop
sbb
jns
cli
push
mov
mul
mov
fst
or
sub
test
dec
and
xor
in
hlt
cs
lds
(bad)
mov
hlt
and
push
enter
mov
std
mul
in
inc
mov
mov
iret
cmp
sbb
stos
loop
add
aam
cmp
lock
or
vcvtps2udq
(bad)
pop
femms
jmp
rol
mov
or
mov
in
cmps
div
sub
cdq
sbb
or
jae
pop
cmp
int
add
adc
inc
add
or
adc
ins
aam
int3
ror
(bad)
(bad)
mov
adc
mov
bound
scas
mov
aas
ja
cmp
lods
call
dec
sbb
and
test
sbb
cmp
or
dec
xor
pop
out
dec
retf
rol
dec
leave
ds
xor
push
inc
adc
outs
mov
fsub
lock
loop
push
into
cmp
mov
out
fcmovnbe
in
popf
jo
add
clc
clc
mov
mov
xchg
inc
cmp
jo
movs
cmp
idiv
mov
mov
sub
out
outs
rep
adc
retf
mov
cmp
sbb
mov
int
scas
push
xor
int
adc
sahf
and
adc
cmps
mov
iret
jp
test
jno
nop
mov
add
xchg
mov
or
jmp
push
dec
lock
push
call
sbb
jo
pop
imul
cwde
loopne
lods
imul
pushf
stos
jmp
adc
imul
iret
inc
and
(bad)
(bad)
movs
outs
push
fwait
inc
or
mov
inc
inc
jl
mov
lahf
inc
hlt
adc
mov
js
cmp
push
jle
and
inc
cmp
shl
push
sti
push
xor
sub
arpl
inc
mov
les
lds
mov
and
dec
add
dec
sub
into
adc
jne
dec
pop
mov
mov
and
daa
mov
push
js
std
in
or
mov
daa
push
push
in
fwait
call
mov
aaa
sbb
and
movs
gs
not
(bad)
pop
push
push
pop
aad
mov
lock
xor
or
sti
xor
ins
je
fidiv
mov
js
jg
sbb
adc
mov
dec
adc
and
retf
out
mov
mov
enter
out
mov
mov
jnp
mov
xor
retf
fwait
sub
rol
shl
inc
push
jbe
push
pushf
jle
(bad)
xor
push
retf
cwde
js
dec
cdq
mov
push
in
sub
mov
jno
stos
inc
ins
sbb
xor
(bad)
pop
dec
jecxz
cmc
(bad)
xchg
shl
iret
push
fcomp
out
out
loopne
int
fldenv
mov
(bad)
cld
mov
push
lds
or
test
stc
push
mov
ror
xor
repz
repz
std
ret
xchg
ss
lods
dec
in
inc
leave
cmp
imul
sbb
lahf
xlat
xchg
xchg
ss
and
or
movs
dec
adc
sbb
inc
retf
xchg
or
(bad)
daa
cmp
mov
lahf
pop
inc
das
cmp
in
pop
mov
jle
xchg
xlat
mov
mov
cmp
int
into
sbb
sti
(bad)
jecxz
fst
mov
out
mov
xor
jg
out
std
rol
cdq
movs
mov
stc
and
xor
das
mov
inc
cmp
jne
and
xchg
pop
inc
lods
adc
loop
mov
sti
and
(bad)
pop
in
push
xor
inc
dec
cmc
jecxz
sbb
cmps
ins
sahf
push
mov
jecxz
inc
mov
mov
out
mov
or
mov
lock
push
jecxz
mov
fwait
sub
in
jne
jno
sub
jecxz
into
jno
adc
out
jl
jae
addr16
pop
xchg
inc
mov
scas
jge
test
mov
xchg
addr16
call
inc
es
jnp
addr16
xor
and
push
jecxz
scas
popa
sbb
mov
jmp
dec
xchg
out
cwde
cmp
lock
sub
std
test
je
aas
cmp
cwde
and
sub
hlt
fist
jbe
pop
cmp
ret
dec
hlt
adc
xchg
dec
fwait
clc
cwde
xor
cmc
mov
fs
imul
dec
push
loopne
adc
add
and
xor
(bad)
cs
leave
xchg
cli
movs
adc
lea
jmp
and
push
retf
jnp
dec
xor
mov
ja
ds
out
sub
ret
xchg
jp
sub
int3
les
imul
movs
loope
sub
loope
popa
fild
dec
(bad)
popf
and
xor
jbe
or
icebp
ror
jecxz
xchg
jp
(bad)
into
lds
lahf
iret
scas
adc
mov
jne
dec
push
fld
ds
mov
jns
push
add
xchg
ficomp
(bad)
(bad)
cmp
out
mov
(bad)
mov
dec
fisub
dec
call
cmp
push
sub
mov
jle
sbb
retf
rcl
neg
and
rol
repz
test
shr
xchg
xchg
scas
popf
xor
pushf
mov
push
test
pop
ss
add
arpl
and
stc
test
(bad)
lods
fwait
aaa
jp
scas
mov
loope
mov
jbe
lods
add
xor
lahf
sub
cmps
les
outs
not
and
movs
xchg
fs
xor
ret
cmp
fidiv
out
mov
mov
addr16
test
icebp
push
inc
test
popa
mov
and
mov
xor
mov
cmp
xor
mov
es
loop
fisubr
xlat
movs
mov
xor
test
mov
test
movs
adc
dec
test
cmp
sub
out
mov
and
dec
mov
scas
stos
mov
lahf
xchg
cwde
and
jbe
(bad)
xchg
cmp
jae
mov
jo
scas
stos
sub
loope
add
icebp
adc
jnp
xor
(bad)
pushf
xchg
cs
mov
xchg
cwde
aas
jp
mov
add
sahf
lahf
cs
je
xchg
scas
adc
imul
adc
cmp
jne
adc
nop
mov
leave
and
xor
popf
mov
ja
retf
lea
out
mov
out
fwait
test
pop
pushf
(bad)
adc
mov
sbb
(bad)
popf
daa
std
sub
lea
mov
xor
jmp
sti
lahf
popa
nop
lea
gs
pop
xchg
test
jmp
aam
xor
adc
loope
lahf
cmp
and
retf
daa
jns
sar
jmp
and
(bad)
cmps
mov
and
jg
inc
cmp
das
xlat
popa
outs
cmp
rcl
repz
pop
cmp
into
sahf
xchg
imul
cwde
xor
jnp
scas
scas
mov
aam
mov
les
push
cwde
ds
pop
lods
xchg
retf
xor
cmp
mov
das
sbb
je
popa
xor
and
imul
mov
xor
mov
call
outs
jnp
js
cdq
cmp
jp
jle
xchg
mov
or
in
inc
(bad)
stos
xor
fs
fisubr
fisubr
stos
jl
fsub
mov
repnz
jg
jle
cdq
push
jae
fdivr
xchg
jl
ret
(bad)
sub
(bad)
in
sbb
js
int
enter
ja
das
fstp
mov
call
outs
and
outs
jecxz
push
pop
and
push
push
ret
add
fisubr
rol
sub
mov
inc
stos
(bad)
das
fistp
fnstenv
sub
mov
push
pop
test
les
and
test
pop
sbb
jbe
cmp
jbe
ret
add
aam
lahf
sub
mov
outs
lahf
inc
cwde
cmps
cwde
cmp
mov
pop
push
mov
and
daa
test
and
inc
sbb
fist
jbe
jmp
or
inc
lds
jae
lahf
shl
ret
lahf
jg
cwde
shl
ins
cli
xchg
rcr
push
push
pop
js
cwde
iret
add
and
push
pusha
out
cmp
inc
clc
pop
retf
xchg
imul
jno
(bad)
jo
and
inc
fisubr
xor
inc
shl
das
cmp
cs
js
and
xor
ds
lods
cdq
aam
xor
int3
mov
xor
lahf
movs
mov
sahf
xchg
jge
and
mov
inc
inc
and
fisubr
xor
mov
push
sbb
xor
xor
and
les
mov
dec
test
pop
test
xchg
and
xor
and
and
aas
stc
ds
pushf
fstp
mov
arpl
sar
jbe
lock
(bad)
jb
ret
mov
sub
xchg
leave
sub
repz
ins
adc
fidivr
and
mov
fidivr
ss
test
jg
aas
shl
sub
fdiv
or
add
push
cmp
jle
sub
pop
or
retf
jp
fisub
out
loop
mov
cmp
(bad)
(bad)
mov
xchg
lods
xchg
and
xchg
jl
lods
mov
adc
dec
(bad)
mov
and
xchg
stos
push
sub
es
cmps
mov
adc
popa
add
daa
repz
jnp
mov
mov
cs
pushf
sbb
xchg
add
cmp
mov
add
scas
xchg
pop
cmp
(bad)
or
stc
xchg
fnstsw
add
mov
adc
jmp
xchg
das
les
cmps
pop
sbb
stc
fwait
int
dec
sbb
xor
rcl
into
ds
or
ins
shl
mov
out
fwait
or
cdq
jp
mov
xchg
xchg
xchg
xchg
mov
mov
mov
jge
test
retf
mov
sub
mov
push
mov
out
mov
scas
xchg
add
mov
and
cld
mov
mov
pop
mov
scas
int3
pushf
lea
aas
push
js
movs
dec
sbb
xor
mov
adc
mov
push
test
mov
call
lds
mov
ja
out
xchg
xor
mov
pop
pslld
mov
in
push
or
jge
ja
xchg
dec
sbb
xchg
cmps
mov
lds
mov
fild
push
test
mov
mov
mov
inc
xor
push
mov
mov
lahf
nop
ret
jle
adc
add
mov
gs
dec
push
mov
aaa
scas
pop
pushf
cmp
cs
pushf
mov
inc
xor
mov
stos
xchg
lea
fidivr
mov
int3
mov
xor
std
mov
sbb
scas
add
mul
call
(bad)
sbb
add
lea
pop
mov
adc
fsubr
sub
(bad)
jmp
xchg
mov
stc
xor
rcl
xchg
test
dec
dec
(bad)
mov
xchg
add
xchg
mov
mov
repnz
lods
out
test
aam
ja
gs
push
xchg
call
mov
cmps
mov
jnp
lahf
lods
movs
lds
cmp
out
not
sub
fisubr
xor
mov
out
(bad)
push
ss
mov
retf
std
sbb
jle
popf
fidivr
icebp
movs
jae
repnz
mov
lock
mov
out
sti
mul
test
icebp
adc
ds
mov
mov
cmp
scas
shl
mov
xchg
int3
pop
cmps
enter
movs
or
mov
jp
cmp
mov
loop
pop
push
mov
sahf
lock
cdq
mov
in
jmp
mov
mov
pop
mov
movs
sbb
jecxz
rdpmc
ficomp
(bad)
xchg
mov
hlt
xchg
dec
movs
mov
dec
aam
nop
mov
inc
iret
xor
xchg
mov
mov
cmps
sub
push
mov
inc
lods
int3
xor
mov
lahf
int
mov
ds
add
call
je
(bad)
mov
rol
(bad)
popf
lods
pushf
sahf
test
fcomp
sbb
xchg
mov
scas
mov
fucom
xchg
(bad)
xchg
mov
jge
in
xchg
sub
int
dec
jp
bound
cmp
mov
and
jbe
aam
inc
cdq
mov
mov
xchg
test
inc
inc
mov
ins
fistp
loopne
movs
mov
shl
jle
out
sub
call
scas
xchg
ret
sub
mov
fwait
ret
lds
sahf
movs
jmp
pop
xchg
mov
rcl
bound
xchg
lahf
mov
mov
mov
adc
jmp
in
daa
pop
jge
xchg
dec
xchg
fs
cmp
popf
test
mov
stos
mov
mov
cwde
int3
add
push
neg
fdiv
clc
mov
bound
lea
mov
xor
jmp
outs
leave
cs
sbb
popa
stos
popf
cwde
mov
cli
or
and
mov
aad
(bad)
mov
lock
mov
push
retf
sub
sti
add
sub
dec
test
mov
cmp
mov
outs
fwait
sti
out
out
out
xchg
mov
ds
std
popf
test
cmc
and
mov
sahf
mov
aad
das
cmc
(bad)
push
xchg
mov
inc
ja
ins
pop
mov
sub
mov
mov
cli
or
aas
pop
dec
mov
shl
test
out
(bad)
pop
imul
out
aam
out
int
(bad)
and
jmp
lods
sub
lods
mov
inc
xor
pop
sbb
push
imul
push
push
mov
sar
cdq
lods
in
into
addr16
loop
daa
out
mov
xchg
inc
hlt
fisub
into
adc
xor
test
ror
mov
xchg
inc
ins
pop
lods
push
jmp
movs
scas
mov
mov
fsub
imul
xchg
adc
mov
rol
sub
popf
popa
push
scas
sbb
mov
sub
ss
push
ja
mov
sub
sbb
mov
mov
adc
test
arpl
xchg
call
xchg
xchg
mov
fldenv
popf
out
mov
jns
sbb
xchg
fisub
test
mov
and
and
iret
cmps
adc
fs
lods
mov
mov
inc
xchg
test
rcl
into
dec
sub
scas
fwait
push
and
cwde
inc
push
push
test
inc
xchg
push
mov
mov
xor
jnp
mov
xchg
mov
iret
pop
enter
cmps
arpl
enter
cld
hlt
sbb
push
imul
mov
pushf
cmp
ins
mov
xor
add
shl
lahf
ret
mov
out
sbb
jecxz
mov
cmp
cdq
retf
fcmovnbe
mov
mov
mov
not
(bad)
div
scas
pop
sub
movs
cwde
cmp
int3
shl
sar
into
out
test
scas
rol
loope
stc
adc
cmps
lahf
cmp
sahf
or
mov
jmp
xchg
mov
pusha
loope
pusha
test
(bad)
loope
in
fstp
dec
mov
movs
adc
xchg
test
scas
pop
fsub
stos
fst
loopne
mov
stos
aam
cmp
fldcw
push
xor
ror
rcr
xchg
adc
inc
mov
std
(bad)
fstp
pusha
fwait
lods
lds
add
mov
bound
sbb
outs
fist
sahf
xchg
ficomp
pcmpgtb
mov
test
ins
icebp
cmp
dec
in
hlt
cs
mov
out
addr16
xor
in
mov
add
ror
popf
(bad)
loop
ror
xchg
lea
mov
scas
pop
in
rol
retf
mov
test
inc
sub
cmp
push
add
jae
mov
sbb
popf
mov
retf
fistp
retf
mov
(bad)
arpl
pop
ds
mov
leave
xor
nop
lds
sbb
mov
pop
xchg
ffreep
dec
sahf
call
aam
cmp
xchg
out
call
sub
mov
xchg
mov
cmc
cmps
jne
cdq
mov
adc
mov
(bad)
cwde
mov
fistp
mov
push
dec
call
fisubr
mov
imul
mov
das
add
mov
(bad)
sub
xchg
nop
add
pop
cwde
mov
iret
mov
mov
stos
sbb
ins
or
jmp
clc
dec
in
mov
into
add
out
jecxz
and
scas
mov
push
xchg
mov
stos
std
(bad)
(bad)
mov
jne
and
mov
mov
stos
movs
out
mov
xchg
and
movs
mov
shl
cmp
clc
mov
mov
inc
adc
cmps
mov
sub
(bad)
dec
lods
adc
lods
loop
inc
push
mov
fiadd
xchg
outs
test
(bad)
xchg
aad
movs
(bad)
sub
adc
lea
mov
not
icebp
cmp
lahf
sti
test
mov
lods
fnstenv
mov
cs
stc
lods
fld
dec
outs
mov
sub
mov
retf
lock
rol
lock
sub
mov
and
mov
sar
leave
test
movs
int
aam
mov
cmp
mov
(bad)
dec
(bad)
inc
std
int
xacquire
fld
hlt
shr
cmp
stos
push
scas
fst
jne
movs
mov
popf
test
lea
mov
aaa
daa
out
loope
sbb
jecxz
aaa
adc
pop
xchg
out
push
jge
sti
popf
test
mov
fst
mov
mov
fs
jmp
xlat
mov
sbb
ror
mov
pop
cmp
xchg
cdq
loop
(bad)
out
rcr
jo
test
test
mov
jmp
rcr
mov
into
bound
into
sti
xor
push
(bad)
aam
mov
fcom
or
mov
ins
sbb
mov
pop
mov
or
jne
adc
xor
push
rcr
mov
inc
daa
es
xor
std
mov
mov
inc
inc
dec
mov
sbb
test
stos
mov
outs
iret
je
test
stos
nop
daa
mov
add
gs
stos
xchg
xor
imul
and
and
cmps
dec
xchg
dec
cmp
rol
aad
xchg
or
movs
mov
pop
daa
dec
add
jno
sbb
fcmovu
mov
cmp
xor
fdivr
pop
arpl
ret
jbe
out
loope
dec
xchg
call
push
outs
mov
sub
mov
xor
icebp
iret
test
and
jae
cmc
call
jp
(bad)
mov
lahf
enter
jmp
xlat
test
mov
push
xchg
xchg
cmp
mov
dec
popf
into
add
mov
sub
ss
int
lods
fsubr
in
add
or
into
sbb
mov
iret
pop
in
push
push
mov
inc
cmps
call
xchg
jnp
vpsrlq
push
jnp
call
push
movs
mov
inc
test
mov
repnz
jmp
push
push
mov
cli
sbb
hlt
inc
inc
not
popa
in
sti
dec
stc
pop
jns
lds
aas
loope
mov
stc
push
out
mov
xor
cs
inc
pop
xchg
(bad)
loopne
push
std
retf
ss
rcr
test
cs
pushf
mov
mov
xlat
cld
xlat
mul
movs
mov
test
cs
int
fild
jmp
(bad)
stos
lds
inc
enter
outs
push
rol
and
int
shl
mov
ss
into
out
aaa
fld
les
and
push
(bad)
sbb
lock
out
jmp
mul
xchg
in
aam
hlt
add
rol
scas
in
dec
push
in
cld
or
(bad)
jne
enter
push
push
in
jmp
jo
push
dec
cdq
clc
mov
fwait
loop
sub
out
repz
rol
aam
mov
in
push
mov
out
aaa
jecxz
jecxz
std
jl
cmp
scas
fsubr
fisub
loopne
popf
dec
add
loope
stos
scas
xor
mov
aam
test
sub
movs
stos
and
(bad)
pop
mov
ins
cmps
dec
mov
daa
scas
or
adc
pushf
xor
int3
or
add
test
lods
push
mov
(bad)
shl
stos
movs
mov
lods
mov
shl
pop
cwde
test
mov
mov
pop
test
inc
gs
push
xor
adc
stos
retf
lea
(bad)
push
sub
cmc
test
mov
push
stc
clc
xor
cmps
aad
mov
sub
repz
imul
jle
xchg
les
aas
mov
test
sahf
xchg
cdq
ds
xchg
mov
jmp
cwde
retf
dec
hlt
pop
mov
xchg
dec
call
cmp
dec
bound
call
stos
retf
lea
jne
retf
data16
out
jno
imul
adc
(bad)
dec
cmc
bound
jo
fdiv
popa
cmps
and
out
test
les
call
jb
ja
and
popa
outs
jnp
jmp
jmp
test
and
xchg
imul
outs
push
arpl
aam
cmps
push
jno
jmp
jl
fwait
jnp
div
jmp
(bad)
jp
neg
lahf
cwde
dec
cwde
icebp
lods
inc
xchg
mov
xchg
inc
jp
call
mov
push
fistp
jecxz
gs
pop
mov
cld
dec
push
dec
dec
jp
(bad)
push
push
xor
add
repz
cmp
inc
adc
sti
xchg
test
out
(bad)
fidiv
out
loopne
jno
cs
rcr
repz
(bad)
pop
fldenv
(bad)
(bad)
pop
mov
mov
inc
xchg
daa
js
ins
mov
frstor
int3
jo
je
jmp
imul
shr
inc
retf
sub
imul
sbb
add
aaa
fisttp
pusha
je
ret
icebp
sub
out
add
ror
inc
jbe
sub
push
mov
das
test
(bad)
and
lods
lock
jge
jb
jl
in
push
sbb
mov
scas
push
inc
sub
cmps
jmp
inc
xor
loop
and
push
gs
inc
lods
idiv
adc
(bad)
jne
pop
cmp
jmp
div
rol
rol
sub
adc
je
ret
xor
sti
pop
mov
mov
push
in
daa
xchg
adc
cmps
retf
sahf
adc
pop
popa
sbb
nop
jp
ins
or
push
jbe
add
test
xchg
popa
cmp
adc
or
loop
add
push
cmp
rcl
push
sbb
ins
and
pop
xchg
ret
test
out
sbb
fisttp
sar
cld
push
dec
inc
jne
out
ret
mov
mov
leave
stos
ja
xchg
mov
sbb
sbb
and
test
and
mov
ror
outs
cli
push
scas
shl
push
scas
push
imul
mov
mov
out
shl
in
ret
scas
mov
fwait
push
(bad)
in
imul
repnz
inc
pop
clc
xchg
(bad)
lds
dec
(bad)
clc
hlt
or
cmc
sub
call
dec
and
sti
inc
data16
loope
cmps
adc
nop
aad
mov
cmp
shl
mov
leave
hlt
aaa
lock
sub
xchg
jns
sbb
sbb
inc
lahf
nop
fucom
scas
and
retf
lds
imul
mov
(bad)
das
ror
mov
ins
and
stos
in
mov
mov
sub
adc
mov
xor
shl
xor
icebp
jg
test
leave
jecxz
mov
push
out
add
pop
in
lods
mov
sub
inc
push
imul
sub
mov
arpl
sbb
clc
or
cmp
jp
xor
add
xor
jmp
mov
jecxz
jno
test
lahf
sahf
aad
dec
and
iret
sbb
cmp
(bad)
push
sbb
vmovsd
adc
push
fwait
scas
lods
jnp
les
nop
cdq
mov
popa
adc
cs
mov
addr16
cmps
sub
test
mov
fild
fadd
mov
xchg
leave
mov
mov
mov
loopne
rep
das
imul
mov
icebp
mov
jae
pop
mov
repz
fisubr
jge
jecxz
mov
mov
jnp
popa
sti
out
sbb
popf
idiv
push
rdmsr
pusha
test
repnz
mov
aaa
pop
sub
addr16
fdivr
dec
sbb
scas
stos
rcl
push
(bad)
test
cmps
inc
jmp
les
mov
mov
cmp
test
push
stos
enter
(bad)
out
repz
stos
es
lods
xchg
mov
dec
into
xchg
test
pop
adc
mov
gs
dec
imul
daa
(bad)
shr
or
mov
outs
mov
pushf
xchg
repz
push
xchg
cmp
jmp
into
xor
sti
std
jmp
popf
cmp
dec
out
lock
and
call
in
mov
mov
jns
cmps
xchg
mov
out
bound
loopne
in
leave
xchg
test
sub
jns
inc
fwait
lds
lock
pop
add
ins
es
xchg
jmp
clc
sbb
push
push
push
loop
xor
retf
sahf
pusha
je
xor
mov
cmp
in
dec
repz
mov
in
push
shl
fisub
div
pop
cmp
cli
jmp
iret
rol
scas
push
lea
xlat
push
pop
jo
(bad)
fsubr
inc
test
fs
jns
outs
jmp
lds
dec
daa
loope
pop
outs
inc
in
popf
popf
les
sbb
ss
(bad)
mov
adc
leave
outs
iret
fs
gs
std
pop
loop
sti
shl
shl
add
cwde
cwde
fistp
adc
push
xor
cmp
idiv
enter
sti
and
inc
mov
ss
push
adc
adc
stos
mov
(bad)
mov
cs
cli
aad
mov
xor
xchg
shl
in
in
cmp
dec
inc
mov
lahf
stc
lods
test
in
cmp
pop
les
stc
(bad)
cmc
lahf
dec
pop
icebp
sub
ss
inc
mov
xlat
sahf
sub
add
xchg
sbb
inc
daa
arpl
fs
cmps
outs
fprem
push
or
push
pop
out
mov
push
push
cli
jmp
out
mov
fld
pusha
std
inc
icebp
leave
cmps
out
loop
loopne
call
outs
and
fadd
rcr
icebp
fsubr
mov
adc
cld
movs
push
or
scas
push
js
jge
add
pop
mov
xor
sub
les
mov
mov
add
imul
pop
jge
push
inc
pop
cmc
xchg
repz
sub
jbe
xor
out
ins
jle
(bad)
scas
jo
jns
cmp
mov
fldl2e
push
xchg
push
pop
pop
sar
mov
in
imul
outs
std
fld
in
fisub
popa
mov
movs
fxam
fist
hlt
into
mov
jmp
jmp
lahf
outs
cwde
cmp
adc
jb
adc
scas
and
sub
rol
jge
aas
idiv
pop
imul
in
popa
fidiv
dec
(bad)
fcmove
mov
and
popf
adc
sti
div
gs
inc
loopne
cmp
adc
adc
out
das
ins
jecxz
lahf
pop
mov
add
in
fninit
xchg
push
cmp
mov
repz
xor
aas
out
dec
call
popa
js
cwde
test
mov
add
icebp
jmp
je
inc
xchg
adc
mul
aas
hlt
fcomp
mov
popf
cmc
and
mov
fidivr
sar
add
out
je
push
cmps
clc
dec
rcl
sbb
icebp
scas
or
retf
int3
add
mov
mov
outs
xchg
cmp
out
jg
aas
call
lahf
stos
leave
mov
inc
cmps
dec
retf
shr
xor
in
(bad)
xor
movs
inc
add
or
fistp
mov
dec
aad
xchg
mov
xor
ins
mov
jecxz
fimul
mov
jmp
mov
(bad)
and
cmps
test
bound
push
mov
jmp
jmp
sub
scas
pop
loop
in
lock
fstp
xchg
pop
cmp
stos
std
jl
mov
xchg
stc
enter
pushf
in
sub
or
iret
dec
loopne
fstp
xchg
inc
xchg
mov
pop
fidivr
leave
icebp
cmc
cmc
loop
cmps
mov
push
mov
popf
test
lods
fwait
dec
pop
hlt
mov
clc
push
xchg
into
mov
movs
mov
sbb
rol
retf
lock
pop
mov
dec
call
fs
xor
fcmove
repnz
iret
adc
xchg
mov
jg
xor
and
hlt
add
fprem
mov
mov
fistp
dec
scas
inc
rcr
test
test
add
(bad)
stos
pop
shl
mov
popf
pop
mov
pop
out
out
leave
mov
ja
sub
and
pop
cld
fwait
nop
cmp
sub
repz
imul
lahf
lock
dec
mov
(bad)
jbe
ret
sub
les
lea
call
mov
add
in
cld
shl
sti
stos
mov
mov
shl
xchg
loopne
mov
call
mov
fwait
jle
jmp
pop
and
test
rcr
call
xchg
mov
mov
xchg
jl
pushf
jmp
mov
mov
mov
cdq
adc
mov
(bad)
adc
in
in
retf
sar
push
ret
inc
jne
jne
retf
(bad)
out
mov
push
outs
sbb
xor
stc
sbb
mov
arpl
jecxz
int3
(bad)
mov
(bad)
lods
in
cmp
inc
sbb
dec
fsub
add
push
icebp
ret
xor
jecxz
loopne
out
dec
pushf
jne
rcr
cmp
mov
ds
sub
out
(bad)
fistp
ror
shr
or
sahf
out
cmp
in
adc
mov
pushf
pop
out
div
and
cmps
mov
jo
int
pop
leave
add
mov
push
xor
pop
test
mov
cmps
test
xchg
xor
jnp
leave
push
or
jo
jmp
les
xor
mov
mov
adc
out
adc
cli
mov
mov
jge
push
sbb
imul
icebp
jmp
test
fadd
or
sbb
mov
mov
icebp
fadd
cmc
add
cmps
(bad)
cs
push
or
cwde
aam
dec
sbb
or
inc
sbb
adc
pop
add
inc
ins
arpl
xchg
arpl
(bad)
jmp
addr16
stc
fdiv
stos
jmp
or
dec
shl
sbb
jmp
sub
idiv
test
shl
test
enter
enter
dec
cmp
push
mov
int
xchg
icebp
mov
pop
sub
pop
test
sti
call
fisub
jnp
cmp
int
or
push
cmp
cwde
cmp
cwde
pop
add
cmp
ins
les
lds
jg
cld
les
mov
outs
icebp
cmps
outs
loopne
push
and
pop
ss
stc
push
(bad)
push
arpl
js
idiv
mov
int
loopne
mov
je
xor
inc
dec
out
imul
cld
cwde
repnz
mov
mul
(bad)
pop
adc
jecxz
add
push
in
mov
mov
outs
shl
adc
in
neg
xor
xor
rcr
into
lock
shr
xor
sub
mov
add
xchg
xor
pop
mov
out
fist
adc
push
outs
leave
jmp
arpl
sbb
push
loope
int3
imul
imul
add
cmps
int
mov
repz
clc
sti
(bad)
out
sbb
inc
lds
cmc
leave
movs
ja
add
mov
sub
test
pop
jecxz
mov
cmp
fisttp
cld
inc
add
scas
idiv
add
xlat
retf
iret
call
cld
jne
cmps
jl
retf
fwait
xchg
test
sahf
test
or
dec
cli
and
imul
or
sti
add
call
scas
loop
test
loopne
cdq
mov
jb
(bad)
int3
fld
inc
lods
mov
not
fsub
out
scas
mov
xchg
adc
mov
(bad)
iret
mov
mov
mov
rol
mov
mov
mov
mov
jbe
push
push
mov
inc
push
cdq
out
sar
shl
and
fwait
push
cmps
jno
retf
pop
lahf
xor
ficomp
icebp
stc
cmp
dec
cdq
jl
cmc
mov
and
jmp
fadd
movs
ror
sub
pusha
lods
xchg
mov
xor
test
xchg
in
sub
mov
out
push
sti
in
sbb
or
push
fsub
leave
(bad)
(bad)
stos
les
out
xor
test
xchg
xlat
xchg
dec
loopne
xchg
iret
dec
out
mov
enter
frstor
or
out
adc
(bad)
pop
cmp
js
cmp
mov
sub
pusha
mov
mov
or
(bad)
je
xor
test
push
dec
movs
pop
fist
ret
loope
clc
clc
mov
addr16
in
xchg
pusha
jno
jg
loopne
stos
int
dec
fwait
or
sbb
out
xor
jecxz
xor
push
clc
xlat
out
(bad)
jmp
or
push
mov
jmp
push
mov
les
jmp
icebp
icebp
repnz
scas
adc
push
loopne
test
ret
int3
in
mov
out
or
popa
arpl
jo
lock
rcr
mov
scas
mov
aaa
repz
std
int3
cmp
sbb
call
in
dec
(bad)
in
xchg
loop
sub
pop
fld
ret
(bad)
rol
lahf
rcr
sar
mov
mov
jle
jmp
(bad)
in
pop
add
loopne
inc
test
fisttp
inc
jle
(bad)
hlt
xlat
jecxz
es
(bad)
mov
clc
inc
test
xchg
aam
test
lahf
enter
xchg
rcl
int
test
fst
hlt
pop
shr
ins
out
movs
(bad)
dec
push
test
cdq
jns
add
sti
fadd
ds
mov
or
lds
jae
and
pushf
int3
mov
aam
adc
sub
push
dec
in
call
inc
add
cld
ds
stc
mov
test
aam
mov
lea
out
or
jle
xor
and
out
mov
adc
aaa
adc
stos
stos
stos
mov
mov
mov
shl
arpl
dec
sub
stc
into
repz
pop
test
movs
mov
fidivr
imul
mov
aam
mov
inc
mov
cdq
and
mov
ins
push
xor
push
sub
push
add
mov
stc
rol
adc
div
mov
cmp
mov
push
scas
sub
aas
mov
retf
mov
ds
out
xchg
movs
adc
xchg
cmps
push
movs
jmp
jbe
out
jne
call
cmp
(bad)
pop
cld
inc
rcl
lock
in
and
leave
retf
jbe
mov
jne
cmp
pusha
fisub
(bad)
xor
inc
cmp
push
cmp
scas
repz
lods
das
pop
jb
sbb
loop
fcom
mov
push
retf
inc
fst
sbb
mov
out
shl
cmp
lds
cmp
adc
mov
sbb
shl
ja
push
xlat
rcl
aas
repz
ja
cmp
fmul
pusha
sub
sub
(bad)
neg
out
popa
les
repz
cmp
scas
aam
ss
pop
retf
repnz
xchg
aad
test
ror
pop
jnp
int3
scas
add
dec
hlt
mov
ss
icebp
in
xchg
lea
retf
(bad)
int
lods
ffree
sbb
jmp
jl
sbb
pushf
and
sbb
dec
aaa
sbb
(bad)
hlt
mov
push
inc
fdivr
jne
lods
fsub
sti
sti
jmp
mov
frstor
push
cmc
mov
inc
xor
add
pop
bound
mov
(bad)
loope
add
add
sbb
das
adc
and
mov
and
cdq
cmp
and
mov
jmp
pop
iret
push
mov
jmp
ja
add
fidivr
push
push
(bad)
movs
lock
rol
pop
mov
cmp
cld
aad
cli
jo
push
cld
or
sub
jmpw
(bad)
pop
les
repz
inc
push
in
inc
neg
retf
ficomp
call
outs
xor
gs
push
shl
iret
out
pop
out
ret
lea
hlt
out
sub
cmc
fist
mov
cmc
in
shr
jnp
mov
xor
(bad)
cli
rcl
loopne
addr16
jl
cmp
bound
scas
jns
aad
repz
dec
ins
mov
shr
(bad)
call
add
(bad)
iret
fdivr
stos
cmp
arpl
shl
push
(bad)
or
add
fwait
dec
stos
cmp
jbe
xor
lock
jmp
ins
(bad)
pusha
lds
out
aam
mov
out
jl
lods
imul
out
ss
repnz
mov
sar
jb
add
push
nop
es
cs
scas
jbe
jo
enter
or
sahf
and
xor
cmp
xor
mov
lea
in
push
xor
outs
lods
movs
push
lods
sbb
retf
and
mov
leave
into
cmp
out
sbb
loop
scas
and
int
stc
invd
dec
(bad)
fmul
out
lods
test
mov
fadd
jle
pop
ins
sub
clc
push
xchg
dec
cld
mov
push
in
js
mov
inc
inc
pop
pop
std
in
fdivr
loop
jo
push
sub
mov
push
jne
leave
add
inc
jns
repz
cmp
pop
or
lods
repz
and
mov
js
popa
repnz
clc
push
sub
jg
mov
not
adc
scas
inc
fcmovnbe
and
rol
mov
xlat
mov
sbb
js
daa
ret
(bad)
sub
xchg
lock
jp
push
and
(bad)
aad
in
rol
mov
mov
dec
mov
ss
test
inc
add
xor
add
mov
or
add
xor
neg
ret
sub
fs
enter
icebp
aad
(bad)
loopne
add
add
add
xlat
sar
rol
icebp
fwait
scas
mov
call
and
aad
in
shl
pushf
jl
mov
dec
mov
adc
mov
ret
repz
vcvtss2si
clc
push
cmp
es
xchg
jg
(bad)
scas
add
stos
xchg
retf
cmp
div
cmc
xchg
fist
xchg
shl
rcr
xchg
mov
ror
lds
xchg
gs
loop
or
mov
sti
xchg
addr16
nop
fcomi
lahf
jge
adc
outs
adc
jle
xchg
(bad)
sbb
mov
dec
repnz
push
shl
sbb
imul
test
pop
fisub
loope
test
outs
or
sbb
xlat
leave
popf
jbe
pop
lock
mov
gs
xchg
mov
test
lods
mov
enter
leave
cmovno
cmps
mov
sbb
nop
rol
xor
mov
adc
mov
shr
adc
pop
mov
jns
cwde
xchg
imul
cmps
fwait
neg
sub
jecxz
icebp
stos
out
arpl
mov
loope
popa
and
(bad)
sbb
popf
outs
cmp
mov
inc
mov
jne
scas
sar
call
fsub
cmp
cwde
hlt
push
repz
xchg
in
call
retf
dec
pop
dec
sbb
aas
jns
sub
fiadd
pushf
jmp
into
dec
fcmove
pushf
or
xchg
xor
adc
jmp
fwait
add
jmp
mov
xchg
jge
jo
sbb
pushf
retf
mov
outs
ficomp
push
xchg
push
scas
fsub
dec
push
dec
not
push
lds
pop
rol
test
xor
cs
jmp
xchg
pop
add
movs
aaa
mov
adc
dec
lahf
stc
(bad)
xchg
cli
fsubr
std
inc
sbb
jb
popf
test
sar
mov
icebp
lods
mov
repnz
mov
addr16
stc
fwait
imul
jp
or
repz
sbb
inc
out
fsub
sbb
xlat
in
jmp
or
sbb
inc
loop
mov
popa
stos
out
push
adc
xor
jmp
cwde
bound
rcl
aas
daa
js
into
push
cld
bound
mov
ins
or
sub
fwait
xchg
repz
mov
inc
dec
push
xor
add
(bad)
loopne
out
sbb
push
adc
sbb
cmp
in
outs
(bad)
mov
or
ret
ret
xor
mov
mov
addr16
sti
adc
xor
icebp
stc
mov
mov
inc
dec
dec
mov
repnz
ja
jle
fstp
ffreep
jns
jne
fcomi
lock
jns
imul
out
loop
jns
pusha
call
lahf
gs
cmp
jno
add
div
aam
pushf
mov
rcl
sar
dec
push
push
xchg
arpl
imul
scas
dec
push
xor
push
jbe
nop
int3
call
mov
inc
int
mov
cli
xchg
jae
aas
(bad)
cmp
mov
add
sbb
jb
or
and
bound
sub
in
loopne
stc
jae
jmp
adc
push
std
mov
mov
in
sbb
cld
push
mov
in
ret
pop
test
in
shl
xchg
rcr
mov
xor
nop
test
call
sub
fsubp
sub
loope
pop
xchg
nop
jmp
xlat
rcr
cld
and
shl
mov
mov
movs
mov
jb
pop
pop
int
retf
add
sti
repz
out
add
push
or
mov
mov
aaa
das
cmp
pop
icebp
add
adc
xchg
xchg
sahf
adc
lock
jbe
mov
mov
pushf
(bad)
cld
lahf
lahf
or
in
mov
cmc
in
sti
push
and
add
cmps
mov
mov
test
mov
out
mov
jo
(bad)
or
retf
and
nop
mov
movs
jmp
mov
xchg
push
lock
jmp
sti
pusha
repz
hlt
jp
mul
(bad)
shr
mov
xor
xchg
push
pop
repnz
stc
inc
adc
rcl
and
sbb
cmp
arpl
push
movs
mov
je
gs
jb
xor
jae
pushf
jg
mov
daa
mov
(bad)
ffreep
test
in
dec
jecxz
rol
mov
stos
sti
xor
mov
mov
sti
mov
dec
sub
and
movs
movs
(bad)
fdiv
xor
mov
inc
mov
call
retf
out
pushf
in
cdq
mov
lock
aaa
push
lds
jge
sub
and
xchg
push
ja
bsr
cmc
xchg
fld
or
test
cmps
out
sub
div
ret
mov
outs
(bad)
lahf
jno
fadd
or
fidiv
sbb
(bad)
fmul
pop
jp
cmps
adc
ret
stos
repnz
sub
add
(bad)
pop
mov
jle
imul
shr
mov
add
mov
mov
(bad)
mov
sti
cld
popf
out
mov
xor
test
pushf
and
or
jne
mov
add
dec
fld
jmp
int3
xchg
push
pop
jmp
repnz
(bad)
xchg
push
inc
test
mov
pop
sub
push
outs
sar
jg
das
mov
(bad)
out
repnz
test
rcl
hlt
in
movs
fs
call
popf
fcomp
shl
gs
pop
jmp
jl
xlat
sbb
pop
std
movs
lods
pop
test
dec
sbb
push
rcr
xor
fnstenv
xchg
mov
loop
jmp
mov
mov
test
push
(bad)
and
fistp
sbb
push
adc
cld
sbb
fcomp
xor
jns
mov
push
imul
mov
inc
sahf
in
shr
and
and
repz
mov
pop
jne
mov
adc
push
sbb
cmp
shr
mov
js
mov
adc
mov
(bad)
sbb
mov
mov
mov
scas
cmp
dec
push
sub
mov
or
dec
pop
mov
fld
cmc
mov
sbb
mov
es
hlt
in
int
mov
mov
imul
ss
or
sbb
fistp
test
xor
cmps
adc
ret
dec
pop
mov
iret
cmp
imul
nop
dec
out
std
jmp
fsub
xor
sar
adc
sub
push
mov
arpl
ins
adc
mov
popa
cmc
mov
xor
arpl
popf
inc
cmc
cmp
out
loop
or
outs
scas
mov
std
not
inc
push
xchg
int
adc
outs
jmp
fld
mov
jne
inc
cmp
std
sbb
hlt
scas
(bad)
jge
int
pusha
arpl
mov
daa
cmp
lock
stos
cmp
jmp
mov
outs
push
xchg
in
das
mov
sub
jmp
std
mov
iret
ins
bound
adc
stc
xor
adc
aam
mov
jecxz
mov
adc
jmp
fldenv
sbb
(bad)
retf
push
cmp
fst
out
sub
pop
mov
add
mov
mov
sub
sub
and
shl
jnp
enter
dec
mov
repnz
xchg
jmp
adc
icebp
dec
sahf
pop
(bad)
idiv
(bad)
xor
mov
lock
fdivr
xor
scas
hlt
loope
xchg
mov
inc
push
push
fistp
xchg
sbb
or
and
mov
test
clc
jg
push
cmp
add
push
and
cmp
jae
inc
sbb
stos
ja
mov
sti
xchg
lock
repz
xor
mov
fistp
pop
push
out
loopne
movs
sub
and
fstp
fdiv
cli
push
ins
mov
jno
mov
or
(bad)
movs
sbb
jp
pop
jmp
pop
and
cmp
pop
pop
xor
mov
add
cmc
pop
and
loope
xor
mov
in
into
jle
and
fucomi
or
mov
data16
lea
mov
and
pusha
repnz
mov
loopne
icebp
int
xchg
jmp
ret
cmp
sbb
popa
hlt
jmp
adc
pop
push
icebp
pop
loop
xchg
in
popa
and
fmulp
sub
and
js
out
in
hlt
mov
in
out
icebp
adc
sti
sub
jge
jns
loop
shr
inc
cld
inc
fist
jae
inc
mov
push
loope
jg
dec
cmps
push
push
mov
xchg
mov
pop
adc
imul
retf
ds
mov
cmc
dec
shl
(bad)
(bad)
popf
(bad)
sti
and
lock
aaa
jmp
fcmovu
cmps
cmps
in
not
inc
je
inc
pop
sub
fcmovb
mov
fwait
ror
or
daa
sahf
cmp
or
jmp
retf
mov
clc
addr16
jl
aas
fcomp
mov
cdq
mov
jecxz
adc
pop
adc
mov
int
stc
popa
fild
lods
xchg
sar
add
test
sbb
movs
mov
push
add
mov
inc
icebp
pop
mov
retf
push
mov
faddp
popf
jmp
and
shr
call
mov
daa
les
div
(bad)
mov
enter
xor
jne
lods
aas
lods
mov
mov
cld
xchg
(bad)
shl
in
sub
test
lods
xor
call
dec
mov
adc
(bad)
pop
lods
push
mov
mov
dec
sbb
movs
in
add
loope
add
or
adc
les
mov
mov
fsubr
cmps
aam
das
push
into
xlat
and
lods
adc
and
cs
stos
int3
dec
aad
cmp
int
fidivr
cmps
stc
inc
fsub
lods
xchg
cdq
ins
and
(bad)
mov
push
stos
mov
sahf
pop
mov
data16
inc
mov
mov
adc
ret
sbb
mov
in
xor
(bad)
push
(bad)
(bad)
js
push
or
mov
ds
or
imul
ret
mov
shr
pop
sub
adc
push
pop
cmc
(bad)
cmp
maxps
movs
fsubr
popa
mov
out
inc
imul
and
lock
xchg
adc
xor
mov
xor
repnz
lds
(bad)
adc
mov
add
lods
mov
add
mov
dec
(bad)
mov
xchg
test
lods
add
jl
xor
sbb
arpl
daa
cwde
leave
cmp
pushf
scas
push
(bad)
inc
or
mov
jo
into
test
fcomp
(bad)
add
mov
outs
cmp
dec
push
outs
xchg
retf
ds
enter
(bad)
sbb
out
xor
stc
test
in
push
enter
ja
into
jno
adc
rcl
dec
in
adc
or
stc
sbb
shl
rol
fnsave
add
mov
xor
mov
xor
(bad)
sbb
pushf
icebp
sub
ret
enter
xor
addr16
pop
aam
imul
hlt
hlt
cmp
cwde
clc
ins
xchg
cld
sub
push
mov
pushf
stc
inc
(bad)
(bad)
mov
fs
fstp
sub
int3
bound
mov
add
mov
loope
popf
loop
imul
js
inc
mov
shr
mov
and
mov
cdq
pop
xchg
std
fcmovnb
xchg
inc
xor
xor
adc
mov
clc
mov
sbb
ficomp
cmp
mov
xchg
cdq
add
fsubr
loopne
sub
push
inc
push
iret
stc
stos
in
mov
cmps
loop
cs
push
cmps
neg
add
fcomi
das
xchg
sub
leave
enter
push
adc
in
adc
test
(bad)
sbb
mov
lea
jp
mov
mov
outs
xchg
jne
std
mov
rcl
movs
lods
cmp
bound
icebp
rcr
rcr
and
ins
mov
cwde
sahf
sub
adc
out
ins
cmp
and
pushf
rcr
pop
pop
sahf
out
fwait
(bad)
fisub
loope
jle
mov
mov
out
push
mov
(bad)
jo
fimul
adc
inc
ds
jo
push
jo
sar
add
dec
into
gs
rcr
xchg
inc
inc
jnp
gs
mov
inc
es
xchg
out
push
mov
jns
sub
fwait
je
jnp
pop
mov
lock
js
pop
lds
xchg
stos
mov
fs
jmp
loopne
xchg
cmc
sbb
sbb
enter
cmp
mov
(bad)
hlt
jbe
in
stc
div
mov
xchg
lods
and
(bad)
and
mov
add
add
out
push
ins
xchg
xor
cmc
inc
leave
mov
les
push
push
adc
ficomp
es
out
pop
call
in
xchg
dec
jmp
in
mov
mov
pop
fidiv
jo
leave
mov
push
jecxz
in
pop
push
push
dec
sbb
push
call
sub
cmp
shl
inc
jbe
mov
adc
add
ins
dec
add
addr16
sti
loop
ins
pusha
push
xlat
xchg
xchg
and
mov
pop
sti
add
cwde
out
mov
push
mov
mov
scas
cmps
mov
mov
lods
mov
xchg
in
in
bound
mov
jae
pushf
cmp
xchg
mov
dec
mov
xor
mov
jns
arpl
je
(bad)
cmp
xchg
scas
std
mov
test
inc
fidivr
push
(bad)
shl
mov
loope
aad
shl
jmp
dec
cld
ds
outs
call
js
test
xchg
push
ja
sub
daa
(bad)
leave
out
(bad)
lea
inc
call
fwait
pop
jle
(bad)
fist
sub
in
sar
jb
mov
and
stos
retf
push
mov
inc
(bad)
pop
rol
scas
lahf
lods
(bad)
stos
test
xor
cmp
and
dec
sti
xchg
cld
add
inc
(bad)
mov
(bad)
xchg
sahf
(bad)
iret
mov
ds
jmp
jecxz
imul
xchg
push
les
mov
cli
outs
mov
mov
adc
ret
mov
inc
pop
cmps
or
rcl
jmp
retf
dec
mov
cdq
xchg
fsincos
imul
loope
popf
jg
pop
push
jmp
aad
loop
in
push
lea
dec
imul
shl
icebp
in
movs
sahf
jno
inc
in
outs
fwait
push
mov
xor
out
outs
loope
sub
js
js
sub
(bad)
push
cmps
add
loope
lods
pusha
aad
mov
adc
mov
xchg
jmp
idiv
jae
mov
lods
(bad)
lods
add
jmp
inc
test
sub
dec
outs
push
push
mov
imul
pop
or
fucom
add
xor
xor
leave
mov
pop
fwait
pop
push
shld
sbb
mov
cmp
jb
jecxz
imul
and
push
adc
imul
or
or
ret
cwde
(bad)
retf
hlt
cmc
aad
in
ins
lea
or
call
pop
jmp
mov
mov
mov
loopne
pop
pop
mov
out
mov
xor
clc
jl
into
call
jb
adc
jle
cdq
loopne
mov
xor
or
sbb
lock
loopne
test
xor
xor
mov
movs
xor
xor
pop
fdiv
sub
jp
mov
mov
pushf
movs
push
(bad)
popw
add
nop
jo
push
adc
sbb
pop
std
in
mov
nop
push
jp
sbb
pop
jmp
dec
and
cmp
ja
adc
lahf
push
inc
mov
mov
clc
mov
push
mov
ds
(bad)
arpl
adc
outs
cmp
pop
sbb
es
leave
push
(bad)
popa
(bad)
(bad)
out
mov
test
sar
in
jle
pop
mov
(bad)
aam
lea
mov
xlat
aas
push
pushf
xchg
(bad)
jae
pop
sbb
sbb
pop
add
popf
mov
std
xchg
iret
scas
fbstp
ins
sub
ja
jae
mul
popf
pop
in
jecxz
in
int
fdivr
imul
cmps
lea
cli
push
push
mov
in
je
dec
xchg
sbb
mov
movs
(bad)
and
jl
mov
sub
add
sbb
adc
mov
pop
ins
push
test
(bad)
hlt
cmc
pop
js
iret
call
inc
(bad)
in
sbb
push
in
(bad)
mov
stos
mov
fidivr
adc
sub
jle
test
jae
lahf
fidivr
mov
or
inc
call
xchg
and
out
sbb
ret
imul
loopne
sbb
mov
add
lock
fcmovb
retf
into
rcl
fst
mov
mov
mov
fsub
sbb
mov
mov
and
dec
sub
mov
xchg
adc
sbb
pushf
into
adc
daa
pop
in
loopne
sbb
add
out
push
lds
adc
xor
aam
cmp
sbb
sub
xor
xor
jo
adc
inc
into
fsub
xchg
push
push
sbb
aad
fistp
pusha
mov
mov
popa
repz
cmp
imul
ss
inc
daa
js
sar
mov
hlt
mov
clc
xlat
xor
sub
out
out
mov
sub
ret
sbb
aam
xchg
pop
dec
ja
stc
arpl
nop
(bad)
mov
mov
in
(bad)
jecxz
ss
(bad)
cmp
movs
jle
idiv
ins
aaa
pusha
cmp
shl
icebp
add
(bad)
in
out
outs
stc
jg
div
jae
test
in
fistp
call
xchg
jg
mov
test
imul
std
adc
sar
inc
sti
leave
cmp
cmp
in
stc
mov
loopne
out
gs
push
mov
test
pop
dec
push
test
dec
xchg
sbb
hlt
fs
sub
sti
xor
sahf
push
xchg
mov
icebp
pusha
out
in
mov
cmps
leave
neg
sbb
sbb
ja
push
in
out
sti
lea
cmp
dec
mov
mov
aam
std
xchg
(bad)
sub
lods
jo
xchg
sar
enter
jg
pop
add
add
add
mov
popf
xchg
loopne
push
sbb
ret
test
add
mov
int3
pusha
lods
dec
stos
(bad)
jmp
scas
xchg
adc
or
pop
or
mov
clc
in
push
cmps
shl
ins
fldcw
lods
xchg
hlt
mov
mov
cmps
adc
mov
(bad)
lahf
inc
and
push
adc
jo
stos
in
xor
int3
mov
xchg
pop
dec
cmp
or
scas
push
aaa
or
scas
jnp
outs
mov
loop
xor
js
and
mov
jmp
jae
addr16
xchg
sub
sbb
xor
int
mov
je
lds
fcomp
mov
call
rcr
mov
or
push
xor
jb
jnp
cmp
adc
cld
pusha
fistp
push
lds
mov
scas
pop
pop
pop
xlat
inc
daa
and
(bad)
fstp
ret
xchg
xor
push
inc
mov
repz
fild
add
jbe
clc
cmp
in
loope
gs
dec
xor
stos
jl
cs
ss
mov
imul
mov
mov
push
hlt
ror
pushf
jmp
mov
push
out
shl
adc
or
sar
lahf
inc
leave
imul
pop
push
mov
push
push
add
push
xor
mov
out
mov
fnsave
adc
inc
scas
std
jns
or
call
mov
iret
inc
movs
xor
loope
hlt
push
stos
inc
imul
mov
fld
mov
and
ret
int3
inc
mov
paddb
addr16
out
xchg
(bad)
repnz
cld
cld
mov
jmp
jne
(bad)
inc
mov
test
leave
cmp
mov
push
inc
xor
cmp
dec
nop
call
push
ret
int
cmp
dec
ins
and
mov
jmp
ins
xor
repnz
test
jmp
cmps
push
sub
aaa
mov
in
fwait
into
int
sbb
push
mov
mov
cmc
cmp
add
repnz
and
les
add
int3
cwde
cmp
test
mov
mov
mov
fiadd
xchg
scas
jl
icebp
jle
(bad)
mov
push
ret
mov
pop
xchg
in
inc
repz
jp
mov
sbb
lea
call
sti
js
int3
xor
inc
or
neg
mov
mov
inc
jb
imul
jmp
fcom
mov
cmp
sub
mov
sub
pop
inc
add
jno
sub
push
xor
scas
inc
fs
out
jecxz
mov
push
arpl
push
out
aam
adc
ins
je
lods
leave
sbb
adc
and
add
inc
mov
clc
lods
fucomip
aam
call
jae
cdq
fwait
ret
shr
pop
and
xchg
repz
xchg
addr16
cmp
hlt
push
mov
inc
std
sbb
mov
fidivr
or
ins
xchg
in
lods
jl
mov
daa
pop
sbb
ror
(bad)
pop
mov
iret
cli
sbb
xchg
in
or
fsubr
mov
mov
pop
push
lahf
js
nop
daa
mov
sti
add
(bad)
ficomp
sub
mov
adc
mul
push
loop
rcl
nop
mov
inc
ds
data16
sti
pop
sti
out
ja
or
adc
mov
das
movs
pop
sahf
push
cmp
pop
es
cs
and
jnp
jg
iret
outs
hlt
aas
aad
lahf
mov
lods
cmp
mov
adc
cld
add
stos
or
scas
lds
or
sbb
sbb
ja
arpl
ja
arpl
ror
(bad)
and
jnp
mov
enter
test
cli
push
in
ror
jnp
into
adc
pop
mov
rcl
jb
(bad)
xor
push
aad
stos
mov
mov
enter
jo
inc
mov
adc
lock
shl
rcl
lahf
mov
int
pushf
(bad)
sahf
pop
mov
and
imul
rcl
sbb
repnz
scas
scas
push
pop
in
cli
test
dec
je
cmps
jno
(bad)
aam
xchg
jp
ins
arpl
cmp
ret
lds
inc
sbb
pop
push
int3
jne
mov
(bad)
mov
jnp
test
xchg
add
and
into
inc
and
fidiv
das
xor
aam
mov
ins
jmp
mov
mov
(bad)
pop
mov
ret
push
ret
cwde
jb
mov
int3
sahf
ret
inc
mov
aas
out
mov
mov
out
fistp
xchg
sbb
(bad)
outs
ret
fld
dec
nop
ins
ror
pop
mov
outs
inc
in
cdq
pop
in
data16
shr
adc
jo
scas
lahf
movs
inc
ja
mov
pop
cmp
xchg
mov
mov
xchg
hlt
pop
xchg
sub
mov
(bad)
pop
jne
push
rol
mov
add
sub
imul
int3
push
xchg
inc
arpl
pop
jnp
dec
sbb
and
push
fistp
imul
pop
hlt
popf
ins
test
pop
dec
scas
inc
test
cs
mov
es
lods
xor
dec
sub
jne
pop
(bad)
in
jae
xchg
movs
adc
ja
mov
sahf
jo
dec
ins
and
or
or
mov
xor
fucomip
jns
loop
mov
jg
lods
jmp
jecxz
std
push
fwait
(bad)
mov
mov
into
leave
push
retf
scas
adc
clc
sahf
cli
cmp
(bad)
retf
data16
cdq
outs
ret
mov
js
mov
pop
int3
mov
mov
add
mov
sbb
addr16
jnp
pop
mov
mov
add
add
mov
jbe
mov
test
jno
dec
shl
arpl
outs
jb
mov
ins
inc
imul
xchg
jbe
mov
dec
popf
cmps
retf
hlt
dec
pop
push
les
not
xchg
xchg
mov
shr
leave
cmps
mov
(bad)
nop
mov
mov
xor
in
mov
cmps
add
add
push
adc
movs
sbb
xlat
mov
ret
mov
push
cmps
or
jmp
out
mov
popa
ss
push
mov
dec
stc
retf
shl
mov
mov
stc
cmp
movs
xor
(bad)
dec
fld
faddp
jno
lds
rcl
mov
jb
stos
jns
movs
mov
test
or
dec
pop
test
mov
aas
stos
test
mov
push
cmp
(bad)
xchg
inc
jl
xchg
sahf
xchg
nop
mov
jg
fld
arpl
sahf
jo
addr16
lahf
in
jge
or
or
(bad)
inc
mov
cdq
mov
mov
mov
mov
push
and
and
fstp
xchg
and
sbb
push
mov
mov
sub
mov
int
jbe
adc
shr
or
mov
jbe
sbb
enter
mov
or
jge
mov
ret
jmp
push
lock
sub
fidivr
rcl
retf
fdivr
lods
cdq
cmp
into
data16
xchg
ret
inc
shr
lahf
and
push
leave
(bad)
cs
retf
movs
ret
mov
fidivr
movs
(bad)
outs
mov
aam
pop
mov
jg
sbb
xchg
or
sbb
fdivr
mov
adc
cs
jns
fistp
movs
mov
push
jns
push
loop
mov
ja
imul
push
and
movs
fcomp
data16
fisttp
cmp
jb
xor
mov
dec
jmp
retf
sub
shr
xor
cmps
ds
cmp
lds
not
stos
dec
jg
add
fdiv
mov
jmp
pop
sahf
cmp
mov
push
sbb
aam
pop
out
int
out
mov
enter
push
repnz
push
rcr
push
jns
neg
iret
push
iret
fldenv
outs
mov
add
push
aad
push
sti
rol
mov
inc
lahf
or
mov
cdq
imul
ins
pop
mov
into
xlat
jge
add
dec
ret
push
ret
mov
cmp
dec
imul
inc
mov
dec
fwait
jg
mov
and
test
ret
push
xchg
mov
mov
addr16
test
jbe
jb
mov
mov
call
sbb
imul
push
adc
push
ins
jge
lods
sbb
cli
dec
sbb
ds
ret
dec
jecxz
inc
mov
and
mov
mov
mov
fidiv
ss
icebp
push
leave
aaa
dec
loope
into
mov
clc
xchg
ret
pop
ja
dec
les
int3
ret
mov
cli
mov
pop
call
fisubr
shl
movs
int3
dec
cdq
push
mov
in
in
sahf
dec
mov
sbb
jno
(bad)
enter
cmps
adc
sub
xchg
leave
mov
jne
repnz
xchg
xchg
es
clc
and
cli
push
rcr
push
(bad)
sahf
mov
or
inc
(bad)
mov
xchg
scas
mov
dec
mov
retf
sub
xchg
(bad)
loop
mov
out
scas
dec
test
frstor
and
out
out
pop
push
push
mov
inc
test
aad
daa
sub
jne
test
xor
cmp
fwait
lods
outs
fwait
scas
jae
ret
jmp
jmp
movs
or
ror
xchg
int
jmp
out
inc
pop
lea
ret
lock
popf
mov
sti
test
jo
rcl
ds
mov
adc
mov
mov
and
lods
std
cmps
cmp
fidivr
mov
xchg
mov
popf
inc
(bad)
nop
inc
fcomp
mov
push
retf
test
dec
(bad)
adc
sbb
xchg
mov
sbb
mov
jno
int
test
outs
xchg
pushf
pop
cdq
cmc
pusha
lahf
pop
pop
pop
lods
scas
and
scas
cld
ficom
mov
fwait
mul
mov
out
fist
xchg
inc
cmps
xchg
(bad)
ret
xchg
pop
mov
push
stos
lea
out
ds
pop
mov
jecxz
test
ror
push
int3
add
ret
(bad)
mov
(bad)
imul
in
pop
inc
jno
lods
cld
xor
mov
mov
pop
aas
mov
fdiv
sar
iret
mov
xchg
jbe
out
fst
test
call
mov
fdivr
imul
call
loop
ret
adc
in
test
cmp
mov
pop
loope
imul
(bad)
mov
xor
enter
lock
arpl
xchg
enter
outs
push
or
mov
cmp
cmc
mov
ja
test
cld
(bad)
scas
add
xor
push
add
mov
add
fsubr
mov
sbb
data16
jbe
mov
ror
(bad)
sbb
icebp
stos
fdiv
push
aad
xchg
pop
mov
call
out
out
aaa
lds
hlt
cwde
aam
mov
fidiv
sbb
(bad)
mov
call
push
pushf
xchg
pop
inc
(bad)
out
or
xchg
cdq
jg
xor
mov
iret
or
mov
jae
ja
addr16
out
jg
cmps
retf
dec
(bad)
cld
mov
sti
jne
push
mov
movs
fdiv
std
adc
retf
xchg
test
ror
sub
cmps
cmp
jge
jl
mov
mov
aad
call
adc
outs
lods
out
mov
sbb
add
(bad)
bound
mov
xchg
mov
mov
in
mov
icebp
icebp
loope
sub
inc
pop
sub
push
dec
mov
cmps
pushf
adc
cmp
xor
jb
hlt
(bad)
xor
jecxz
pop
dec
mov
aaa
std
jmp
iret
test
test
cwde
add
mov
out
mov
out
mov
test
mov
inc
shl
enter
adc
push
jl
jge
and
outs
fs
in
sar
sti
movs
push
js
rol
jne
push
jge
dec
jle
(bad)
mov
hlt
add
cbw
lods
jecxz
mov
es
mov
test
scas
sti
popf
nop
inc
jp
test
repz
pop
sub
scas
mov
iret
or
push
into
loopne
imul
xchg
test
pop
jg
ret
mov
mov
and
mov
mov
xor
adc
fs
test
cmp
mov
inc
mov
xchg
int3
scas
push
lahf
jmp
mov
sbb
mov
jge
pop
xor
arpl
out
jle
fsubrp
push
mov
adc
pop
and
rol
rcl
pop
inc
gs
loop
movs
in
push
dec
sub
cld
jo
jae
iret
mov
nop
push
or
adc
(bad)
or
test
fdiv
aaa
addr16
push
lods
stos
mov
mov
repnz
scas
ret
jns
xchg
mov
mov
dec
lods
imul
das
push
dec
mov
mov
ret
dec
loopne
add
scas
loopne
fsubr
into
sbb
movs
mov
out
pop
jge
dec
mov
mov
mov
and
mov
fisubr
lods
div
jge
mov
(bad)
sub
mov
stos
test
arpl
sub
fcomp
leave
loope
mov
mov
inc
nop
sbb
test
stos
movs
pop
enter
dec
mov
aad
shr
mov
lds
sbb
mov
lahf
ficom
rcl
cmps
ret
aad
mov
enter
rcl
mov
icebp
push
jmp
cld
adc
push
in
mov
xchg
mov
loopne
pop
adc
lds
mov
mov
test
add
xchg
mov
addr16
lods
in
repnz
mov
shl
ret
mov
pop
outs
retf
daa
enter
inc
dec
scas
fsubr
add
push
mov
mov
push
xchg
inc
mov
add
ret
cmps
inc
mov
xor
test
fldenv
stos
cdq
mov
retf
ss
call
mov
jge
jle
mov
stos
das
pop
fidiv
into
mov
mov
push
mov
loope
dec
push
xor
mov
push
cmp
mov
fisttp
ja
mov
cmp
dec
and
mov
push
mov
in
imul
retf
out
(bad)
dec
out
out
jae
std
push
mov
dec
mov
and
mov
popf
gs
mov
arpl
retf
add
jmp
leave
dec
jl
and
lahf
iret
std
mov
dec
(bad)
repz
lock
jge
(bad)
cli
push
sub
lds
mov
push
scas
mov
call
jnp
pop
test
push
icebp
rcr
inc
pushf
push
mov
mov
xchg
push
repz
scas
test
in
sub
repnz
shl
pop
lods
iret
cmc
iret
loope
xchg
mov
mov
push
inc
mov
cs
and
ds
cmp
add
xchg
mov
adc
fs
repnz
mov
jmp
mov
sbb
fmul
scas
lods
mov
xchg
pushf
xchg
mov
mov
add
lahf
or
bound
mov
push
mov
mov
inc
xchg
xchg
or
mov
cmp
and
daa
mov
nop
add
push
xchg
or
add
rcl
mov
hlt
in
cmc
or
mov
xchg
lahf
sbb
stos
mov
cmps
mov
cmps
(bad)
nop
mov
mov
mov
mov
dec
pop
ins
popf
mov
jb
sbb
xchg
pushf
xchg
xchg
push
push
push
pop
mov
das
sub
cmp
xchg
nop
mov
cdq
mov
cmp
scas
mov
in
idiv
or
lock
mov
into
add
iret
pop
scas
mov
mov
mov
mov
mov
mov
mov
bound
mov
xchg
lahf
add
mov
push
nop
mov
and
and
mov
or
mov
adc
ja
out
std
pushf
xchg
xchg
lahf
jmp
mov
retf
rol
(bad)
nop
mov
enter
mov
mov
mov
adc
or
nop
sahf
mov
outs
add
outs
pop
dec
inc
pushf
mov
pop
mov
sbb
mov
mov
add
lahf
mov
xchg
lahf
add
test
(bad)
pushf
mov
aam
into
xchg
or
mov
cdq
mov
xchg
mov
call
pushf
xchg
xchg
lahf
mov
fwait
mov
(bad)
nop
mov
jnp
nop
mov
push
mov
js
jb
sbb
or
xor
adc
push
add
jg
push
jmp
jmp
mov
mov
mov
aad
xchg
or
mov
stos
lahf
add
mov
lahf
mov
je
outs
xchg
or
mov
jns
push
mov
pop
inc
xchg
cs
leave
push
mov
sbb
push
movs
ret
jmp
test
jmp
ins
inc
and
pop
mov
pop
add
lods
mov
mov
mov
pop
xor
lods
mov
mov
mov
jp
mov
call
inc
push
mov
mov
cwde
popf
test
sbb
mov
adc
jg
scas
movs
mov
push
shl
dec
jae
mov
mov
mov
jecxz
jecxz
outs
cmps
mov
test
lahf
mov
mov
sub
scas
dec
mov
icebp
jns
popa
stos
mov
repz
es
mov
cmps
mov
scas
push
dec
and
test
dec
loopne
test
mov
std
dec
jmp
scas
not
jae
ja
xchg
mov
adc
rol
shl
pop
sar
(bad)
stos
scas
aaa
cdq
lahf
cmp
(bad)
fidiv
scas
mov
mov
ins
jmp
in
push
popa
ins
mov
mov
icebp
out
jecxz
in
mov
pop
rol
out
mov
cli
cmp
test
mov
stc
jg
xchg
pop
shl
(bad)
push
test
(bad)
xchg
cmp
mov
lea
adc
mov
adc
stos
mov
jb
mov
jl
mov
pop
std
pop
fmul
cli
fsubp
jmp
aaa
cmp
lods
outs
mov
xchg
ss
mov
movs
ins
lods
pop
out
xchg
(bad)
fnstcw
mov
lock
push
mov
add
inc
jmp
mov
mov
jne
xor
jp
push
or
ror
je
and
or
aad
addr16
cld
lods
push
adc
xor
cs
rol
in
outs
mov
ja
jmp
ja
cmp
mov
add
jb
mov
mov
push
xor
lods
cmp
add
(bad)
fnstsw
cmp
push
ret
adc
repz
jo
add
lods
mov
sbb
loopne
shl
imul
sub
xchg
(bad)
sbb
mov
add
repz
dec
fmul
push
adc
idiv
stc
inc
adc
(bad)
(bad)
mov
fucomip
out
sub
out
aas
xchg
stc
sbb
inc
inc
mov
push
add
pop
fstp
jl
mov
dec
das
lock
out
adc
cld
test
ror
aas
mov
repz
int3
cmp
adc
mov
adc
cdq
hlt
xchg
mov
retf
sbb
pop
test
mov
and
les
or
cmp
mov
inc
neg
fimul
or
test
pop
push
dec
mov
xchg
mov
shl
jnp
aad
(bad)
add
(bad)
sub
ret
ret
clc
jae
sbb
inc
mov
xor
or
mov
jbe
popf
out
jmp
add
or
mov
fwait
adc
cmp
mov
sbb
(bad)
push
jmp
xlat
ds
add
out
mov
ss
aaa
sub
es
sub
or
or
pop
push
retf
adc
ins
and
xchg
and
add
pop
and
jp
in
loopne
jmp
sbb
push
out
sub
leave
pop
pop
sub
mov
ds
(bad)
adc
(bad)
adc
bound
(bad)
in
ss
in
das
cmp
push
adc
(bad)
(bad)
cmp
xor
pop
sub
ss
movs
cmp
out
xor
cmc
dec
popf
test
sub
xchg
dec
les
cli
dec
mov
call
xchg
retf
jle
in
test
retf
mov
rcr
sbb
popa
push
adc
bound
push
cs
ja
call
mov
xor
cmc
es
js
push
nop
movs
mov
in
inc
add
cmps
sub
adc
mov
out
in
out
or
cmp
(bad)
adc
cmps
sub
inc
jg
test
mov
sub
jge
or
clc
call
sbb
xchg
hlt
fisub
pop
inc
cdq
cdq
mov
mov
xor
call
add
push
(bad)
push
std
jmp
cmp
les
test
aaa
xchg
and
test
inc
xchg
(bad)
rcr
pop
and
js
lock
cld
(bad)
cwde
xor
dec
pop
cmc
xor
out
ins
ficom
and
mov
arpl
cmp
outs
and
sahf
loope
shr
(bad)
in
outs
in
and
in
push
sub
add
enter
adc
mov
stos
sub
xor
sub
and
sub
daa
or
sub
retf
mov
adc
mov
popf
push
inc
pop
pop
rcr
and
ficom
mov
std
clc
mov
loope
cmp
pop
inc
sub
push
daa
cmc
jmp
jmp
call
enter
pop
jne
into
stos
(bad)
por
jno
test
sar
arpl
in
movs
mov
mov
mov
mov
xor
pop
into
jmp
pop
pop
jmp
test
add
loop
xchg
or
push
sti
mov
in
adc
mov
xor
clc
jmp
adc
push
pop
or
popa
std
adc
sahf
into
jp
retf
not
out
in
jmp
cwde
data16
jno
sbb
adc
cmps
mov
cmps
stos
stos
mov
cmp
loope
ret
mov
xchg
rol
mov
stc
ret
and
adc
cwde
int3
in
into
loopne
lea
ja
(bad)
sub
sub
dec
cwde
not
inc
mov
outs
fidivr
fisttp
and
or
ror
stos
or
push
cmp
outs
mov
neg
fs
mov
sub
out
jg
fwait
sub
sub
jg
pop
mov
call
pop
out
pop
pop
mov
mov
inc
cmp
xor
adc
push
pop
into
cmc
sub
mov
sub
movs
xor
xchg
lds
adc
outs
jbe
or
loope
scas
fwait
out
es
sbb
in
mov
and
cmp
je
jmp
or
pop
shl
push
push
sbb
(bad)
jns
xor
je
and
and
xlat
sbb
push
in
mov
adc
jns
or
sub
mov
xor
enter
loop
mov
cmps
cs
imul
aam
cmp
pusha
cmp
ds
js
out
scas
push
cmp
imul
int
mov
cld
cli
adc
sub
hlt
mov
cs
dec
pop
and
leave
sub
call
sbb
scas
loope
cs
test
scas
outs
out
xchg
sub
adc
stos
cdq
clc
std
(bad)
jmp
inc
fidivr
(bad)
mov
ss
loope
stc
gs
test
and
sbb
ja
nop
ror
dec
rcr
int3
adc
inc
inc
push
bound
bound
push
pop
adc
and
xchg
push
es
rcr
mov
inc
push
sub
jae
popa
cs
popf
sbb
and
ja
push
lea
mov
add
test
in
shl
aad
or
bnd
push
mov
add
das
push
rcr
mov
(bad)
loopne
inc
(bad)
sub
data16
xor
dec
adc
xchg
call
or
fdivr
inc
(bad)
sub
add
ds
dec
push
stos
fiadd
dec
popa
inc
bound
and
das
jg
loopne
cmps
adc
out
mov
pop
neg
(bad)
xor
iret
fsubr
int3
dec
lods
fcom
push
mov
xchg
cdq
fcomp
ja
add
mov
cwde
mov
pop
or
cmp
imul
and
js
and
xor
mov
cmp
push
push
jmp
std
adc
sub
jmp
shr
xchg
xchg
and
mov
fcmovnu
and
sub
gs
jl
dec
push
jge
sub
pop
fistp
sbb
ror
stc
xchg
push
inc
dec
imul
lahf
jge
jp
out
add
in
fwait
push
or
cli
gs
cmp
fidiv
popf
(bad)
or
mov
mov
in
adc
and
xlat
sub
sahf
and
xchg
fs
(bad)
mov
bound
retf
(bad)
mov
mov
popa
(bad)
pusha
(bad)
pop
idiv
outs
mov
push
push
sti
cld
sbb
movs
pop
(bad)
or
scas
std
add
pop
xchg
jo
hlt
lods
jo
push
and
sti
sbb
fild
ficom
fst
xor
out
jns
clc
or
sub
sbb
push
int
add
test
or
dec
fstp
and
ret
mov
test
or
xchg
adc
int
dec
xchg
add
or
xchg
out
push
sbb
test
pop
lock
addr16
(bad)
mov
pop
sti
shr
rcr
xchg
fwait
aam
scas
mov
das
xchg
xchg
push
xor
fisttp
je
ret
lds
and
sti
ficom
cmc
mov
mov
clc
dec
hlt
arpl
mov
inc
les
mov
mov
sbb
movs
cmps
aad
cli
and
push
jae
pop
ds
shl
js
dec
mov
or
xchg
cld
pop
jecxz
out
mov
fld
mov
inc
aad
aaa
xchg
adc
(bad)
sbb
inc
shl
pop
rol
xor
jb
sub
stos
shl
xchg
out
jmp
inc
mov
iret
push
not
std
loopne
out
and
pop
in
mov
xchg
mov
dec
ds
pop
push
xchg
or
inc
cmp
adc
xor
mov
mov
sub
retf
daa
pushf
xchg
jb
in
hlt
lahf
call
cmp
mov
mov
in
mov
sbb
or
or
(bad)
xchg
out
jae
(bad)
xchg
(bad)
push
dec
imul
cmp
repz
sub
mov
neg
adc
cmp
aad
pop
ret
imul
js
mov
and
movs
call
ss
bts
mov
sbb
push
pop
push
in
jns
cmp
test
(bad)
xchg
inc
es
pop
inc
fcomip
into
ret
push
inc
ins
and
jmp
out
mov
arpl
rol
xlat
xor
cmc
lea
cmp
jp
(bad)
(bad)
jns
lods
pop
lock
(bad)
inc
fimul
dec
dec
lock
adc
out
stos
dec
dec
and
mov
pop
xchg
push
jg
test
sbb
cmp
mov
out
stc
mov
xor
div
movs
jg
iret
fld
hlt
sar
ficomp
sti
jl
repz
mov
push
adc
mov
mov
fisubr
call
or
push
popa
push
cld
loop
out
sti
mov
call
hlt
bound
std
mov
mov
stc
fwait
adc
mov
xor
cmps
mov
int3
sub
cwde
jp
mov
fstp
(bad)
xchg
outs
fbld
into
jl
aaa
pusha
cld
cmp
daa
fstp
jns
cmps
add
stc
and
adc
stos
inc
add
int3
mov
mov
mov
shr
fiadd
xor
out
adc
cmps
test
outs
sub
iret
pop
lock
sub
pop
mov
lods
div
out
lahf
mov
and
sbb
sar
in
xchg
fiadd
aad
clc
fdiv
jnp
add
cmps
inc
dec
data16
jmp
mov
jmp
cwde
push
(bad)
jo
jbe
dec
enter
rol
test
movs
mov
cmp
into
into
jne
mov
test
pushf
hlt
cld
push
inc
psrlq
bound
mov
movs
ror
sub
loope
(bad)
cmc
test
pusha
pushf
xchg
(bad)
and
mov
mov
pushf
sub
nop
out
cmc
loopne
xchg
lock
push
retf
mov
jnp
movs
cmp
popa
jg
pop
inc
arpl
xor
sub
push
adc
jns
pop
xchg
(bad)
in
lock
add
jp
push
sbb
fisubr
mov
xor
into
movs
cmp
stos
das
lock
loope
(bad)
sti
retf
add
or
mov
cmp
out
ror
(bad)
test
lods
loop
movs
or
sbb
mov
cwde
arpl
ss
jno
inc
mov
mov
inc
popf
fsubr
inc
shl
mov
call
jp
mov
mov
mov
out
mov
mov
rcl
cs
jecxz
and
test
mov
xchg
mov
jle
xor
sbb
xor
call
iret
fnstsw
push
ret
retf
xchg
mov
add
jns
sti
fidivr
popf
out
mov
lea
and
bound
xor
ja
sti
imul
shl
data16
cwde
mov
mov
xchg
xchg
lods
out
inc
sti
pop
stc
inc
xchg
ret
test
cmp
lock
jecxz
mov
mov
outs
mov
and
cmp
fild
jmp
mov
retf
xchg
out
test
ret
gs
xor
inc
mov
call
inc
cmps
xchg
xchg
idiv
and
cmps
and
fmul
sti
cli
inc
sbb
pop
gs
aam
cdq
xor
cmp
mov
fadd
(bad)
pop
mov
fsub
push
jo
in
movs
aaa
stc
cmps
icebp
in
sub
add
mul
and
adc
mov
cs
dec
fucomip
push
mov
or
test
mov
sbb
sub
xchg
mov
(bad)
jg
sbb
lahf
add
aaa
in
add
clc
out
out
inc
shl
(bad)
sub
ss
lahf
addr16
adc
and
sti
xlat
out
pop
cli
sub
scas
and
scas
jmp
dec
mul
add
push
push
xor
in
call
icebp
mov
jmp
jns
or
loop
inc
mov
ret
repnz
cmps
jmp
dec
or
inc
inc
(bad)
push
bound
js
int3
dec
mov
(bad)
and
and
inc
push
loop
inc
inc
shl
xlat
popf
push
retf
jp
sbb
pop
cli
call
push
imul
jno
div
xor
outs
std
xchg
shr
outs
in
and
and
lock
push
jle
stc
xor
pop
out
inc
inc
stc
adc
jmp
pop
aaa
xor
cmps
out
add
cmps
sbb
lock
and
data16
jmp
out
pop
imul
rcl
push
pop
xchg
dec
les
jbe
mov
jno
pop
xor
(bad)
jbe
add
scas
scas
jne
call
scas
daa
iret
pop
cmp
enter
add
test
add
lods
inc
jnp
mov
add
lock
aam
or
adc
pop
and
lahf
sub
cmp
cmps
mov
fistp
jle
(bad)
repz
jmp
xchg
mov
or
mov
push
out
pop
(bad)
into
push
or
dec
dec
mov
out
into
or
add
mov
cs
mov
push
adc
cmp
aas
jmp
pusha
fmul
movs
add
iret
sbb
aam
push
and
add
ficom
push
ins
dec
shl
jecxz
call
push
jns
fldenv
dec
ret
push
out
dec
add
pop
inc
test
test
pop
scas
jg
jae
jne
push
push
std
pop
popf
mov
pop
int3
dec
cmps
(bad)
(bad)
jl
ins
jns
ins
fidivr
add
jno
hlt
push
cli
gs
cmc
arpl
ins
mov
outs
fild
repz
test
mov
addr16
addr16
jno
and
imul
push
jo
mov
leave
dec
imul
(bad)
xchg
fsub
push
jl
out
jne
xor
or
dec
jb
xchg
aas
mov
test
fadd
pop
jns
imul
xor
cmp
jecxz
lahf
stos
dec
sub
in
inc
mov
fdiv
xchg
stos
aas
xchg
mov
xchg
jecxz
xor
call
in
push
xor
cmps
mov
shl
jmp
fidiv
call
mov
pop
stos
cmc
aad
stos
test
into
stos
jns
pop
lock
loope
cli
cmc
pop
clc
hlt
rol
fiadd
std
leave
iret
jge
retf
mov
cdq
ror
inc
(bad)
cld
mov
stos
mov
and
jmp
lock
(bad)
call
mov
cmps
retf
add
fdivr
mov
jp
fstp
in
aas
test
sub
push
out
pop
movs
mov
out
xlat
mov
int3
inc
jae
pop
and
out
xchg
shl
pop
lds
jmp
jnp
call
repz
sti
not
and
mov
jecxz
cmp
in
cmovne
sub
jo
or
in
push
les
cmp
movs
(bad)
mov
sahf
xor
push
sub
add
aam
mov
addr16
jle
xor
mov
jne
mov
mov
in
mov
pop
in
in
les
jmp
outs
mov
test
mov
bound
mov
jg
ins
xor
mov
add
mov
mov
adc
stc
daa
sahf
cdq
lock
xchg
enter
inc
pop
(bad)
cli
div
mov
(bad)
pop
test
popf
xrelease
popf
out
cmp
mov
mov
jg
mov
sub
cs
ss
shl
es
cmp
sbb
cli
mov
ror
aad
pushf
xchg
or
test
std
jbe
pop
fnstenv
sbb
push
(bad)
ins
stc
cmps
(bad)
fistp
jmp
daa
add
adc
dec
push
call
imul
add
sub
sub
ffreep
xor
sbb
or
retf
ret
adc
push
xlat
(bad)
ror
adc
add
iret
call
idiv
jns
fwait
jl
mov
jl
xchg
xor
dec
iret
shl
xchg
mov
out
aas
adc
daa
daa
mov
sub
sar
mov
mov
jne
out
das
adc
add
add
cmps
test
push
pop
and
push
sbb
int3
aam
aad
jmp
shl
clc
fsub
dec
pop
repz
jg
xchg
jno
push
daa
xor
and
bound
(bad)
xchg
cmp
sub
push
sub
(bad)
adc
outs
repnz
push
icebp
lods
adc
popa
mov
int3
xor
xor
inc
in
sahf
shl
mov
aas
(bad)
inc
(bad)
imul
push
or
lea
loop
inc
lds
adc
arpl
push
(bad)
sub
mov
mov
xor
rol
pop
in
ins
adc
push
adc
mov
(bad)
adc
xor
xchg
inc
sbb
loope
mov
xor
test
in
xor
sbb
stos
movs
jmp
pop
scas
and
xor
daa
push
into
mov
imul
cmps
and
mov
loopne
jnp
mov
scas
and
cmp
or
pop
adc
cmp
iret
in
inc
inc
adc
frstpm(287
jmp
fsubr
xlat
pop
pop
add
fldcw
je
sbb
add
cmp
scas
push
mov
not
sub
jp
push
or
cli
and
sbb
rcl
and
into
shl
cmp
or
mov
aaa
sar
sbb
(bad)
pop
sar
retf
inc
lods
add
clc
adc
ss
dec
sbb
lds
ret
cmc
dec
push
(bad)
mov
pop
shl
adc
dec
inc
std
leave
cli
mov
test
ja
arpl
ins
call
xchg
out
(bad)
call
sti
lahf
ror
push
jnp
xor
xchg
push
das
sbb
adc
xchg
or
push
fisttp
out
jae
inc
cmp
outs
mov
cli
mov
sub
aas
push
in
sbb
addr16
fstp
xor
mov
mov
sub
(bad)
pop
iret
xchg
xchg
outs
icebp
ins
and
call
cmp
add
mov
dec
outs
stc
xchg
aas
mov
scas
lahf
sar
add
(bad)
jmp
ds
mov
mov
fldcw
push
push
test
out
cmc
xor
jmp
fmul
mov
outs
shl
iret
mov
int
sbb
les
rcl
sub
fucomip
jae
jno
jecxz
int3
cmp
pop
pop
dec
pushf
enter
rcr
mov
push
jge
jle
lock
dec
xor
dec
cmps
sbb
cmc
inc
(bad)
adc
pop
and
(bad)
jae
data16
nop
jnp
push
xchg
hlt
push
fsub
es
sbb
shr
jo
repnz
(bad)
out
jns
(bad)
push
pop
inc
test
pop
addr16
fsub
cmp
push
loop
ror
dec
inc
aaa
sbb
outs
sub
in
sub
repz
pop
adc
sar
sti
mov
mov
in
jmp
pusha
and
push
je
popa
push
jmp
test
jecxz
and
(bad)
cmps
dec
popf
je
(bad)
adc
add
es
jl
xor
jge
sub
imul
cmp
pop
aad
add
xor
(bad)
(bad)
stos
jo
mov
xlat
cmp
(bad)
popa
aad
imul
outs
fidivr
jmp
xchg
mov
out
les
xor
shl
or
icebp
pop
cmp
push
dec
xor
jg
jno
test
(bad)
xor
cmp
popf
lods
aaa
xchg
xor
xor
jno
jp
inc
adc
in
jmp
repnz
div
addr16
sbb
ins
jno
mov
and
hlt
jo
jne
mov
sbb
sbb
sbb
mov
shr
cmps
cmp
lea
mov
or
push
fdiv
loope
push
aam
test
fmul
pop
std
inc
inc
add
jae
push
js
and
cli
xchg
sbb
push
into
xor
xchg
adc
and
cmp
lahf
icebp
cld
cmc
or
push
repz
pop
mov
int3
xor
sbb
fist
(bad)
fs
cmp
sbb
pop
sbb
dec
or
adc
loop
push
sti
adc
jmp
in
cwde
mov
cmc
out
jge
mov
out
sbb
aad
in
cmp
cli
loope
jno
pop
or
fild
xor
popf
cli
imul
adc
call
in
mov
cs
stos
dec
les
sbb
mov
pop
push
xor
sar
sub
bts
outs
mov
cmp
adc
jecxz
hlt
inc
movs
imul
fwait
std
jmp
jmp
jns
jae
and
and
in
xchg
sbb
repnz
pop
iret
adc
cmp
sbb
in
sub
inc
mov
out
inc
in
mov
sub
pop
xor
mov
mov
cli
push
aad
ret
enter
push
ret
xchg
mov
ret
aam
mov
out
add
xor
jecxz
scas
mov
(bad)
sub
push
dec
repz
cmp
mov
icebp
mov
adc
cmp
xor
bnd
imul
sti
mov
test
cli
out
inc
xchg
xchg
loope
ret
scas
dec
xlat
sti
xchg
sub
(bad)
fwait
out
add
dec
sbb
idiv
adc
xsha1
cmps
into
fisubr
bound
adc
xchg
imul
aad
push
mov
inc
dec
outs
inc
out
das
pop
sbb
sbb
loop
xchg
sub
jo
mov
push
jno
adc
aad
fistp
cld
inc
clc
lahf
dec
fisub
and
lds
fdivr
jne
cs
sbb
mov
fs
jecxz
jmp
fs
cmp
icebp
int
inc
aaa
jmp
test
stc
sbb
sti
adc
retf
sbb
in
cld
xchg
fcmovbe
gs
cmp
fild
stos
jge
mov
or
scas
jae
ret
jnp
xchg
imul
in
jns
sti
xchg
jno
pop
sbb
out
mov
add
aad
out
test
(bad)
int3
mov
mov
int3
hlt
cmp
pop
mov
dec
ror
fucomp
aad
sbb
(bad)
mov
push
mov
in
or
aad
es
add
shl
inc
jae
lock
jno
mov
loop
pusha
test
lock
push
jg
and
adc
push
ror
push
jp
push
in
adc
mul
imul
mov
rcr
enter
js
ss
cli
les
jle
stos
sub
push
ins
xchg
mov
mov
push
pushf
cmp
mov
fsubr
fcmovnu
dec
adc
shr
mov
xor
into
pop
sar
loop
inc
gs
inc
or
mov
(bad)
fnstsw
sub
or
test
or
cmp
(bad)
ret
and
out
ror
mov
xchg
in
cmps
push
xchg
add
mov
dec
addr16
inc
mov
jb
popf
or
aam
cmp
fisttp
cwde
fcomp
push
lahf
push
(bad)
xchg
iret
mov
std
jae
lahf
dec
mov
rcl
mov
in
push
xor
mov
(bad)
fs
repz
outs
adc
and
and
and
cmps
xlat
ror
mov
or
das
ins
out
mov
popa
xor
cmp
cmps
lock
imul
add
shr
pushf
inc
ror
gs
sbb
mov
sub
(bad)
jbe
pop
ja
adc
repnz
pop
js
(bad)
(bad)
movs
bound
or
(bad)
jl
movs
mov
(bad)
jl
sahf
ret
in
mov
and
call
mov
mov
rol
sub
cld
and
mov
in
push
mov
out
retf
jecxz
ins
outs
lock
mov
cld
mov
jo
xchg
cs
dec
sbb
int
test
xchg
loop
fistp
int3
inc
out
lods
xor
ret
xchg
daa
test
cwde
sahf
(bad)
sar
and
pushf
sbb
(bad)
fimul
idiv
rcr
shl
fisttp
out
mov
sub
sbb
xchg
loop
(bad)
mov
push
push
(bad)
jae
outs
cmps
hlt
in
mov
push
test
cmp
lahf
jecxz
mov
adc
repnz
dec
bt
jmp
xlat
pop
test
mov
xchg
push
loop
sub
xchg
out
(bad)
cld
and
xchg
xchg
jp
outs
in
cmc
push
jle
pop
into
mov
aam
mov
pushf
inc
stos
pop
jne
mov
pop
sbb
syscall
push
adc
ffreep
pop
loope
ins
push
retf
adc
adc
in
adc
jmp
shl
sub
clc
inc
add
cdq
xchg
stc
int
icebp
arpl
pushf
int
in
inc
stc
test
mov
xor
cmp
cmps
or
ja
je
inc
icebp
cli
jns
inc
or
sbb
aas
pop
sub
pop
mov
je
add
sbb
(bad)
fcmovnbe
jmp
call
xor
data16
(bad)
out
retf
int3
lock
sti
push
pop
shl
outs
stos
lahf
js
cmp
pop
(bad)
gs
lods
ja
jecxz
mov
in
jl
xor
ss
in
iret
mov
pop
xor
(bad)
repnz
dec
sub
out
lods
fsubrp
in
repz
stos
pop
aaa
int3
jbe
and
mov
push
ret
lock
cmp
sub
inc
mov
mov
lds
adc
inc
add
int3
mov
mov
push
cli
cmc
cmp
jae
stos
outs
sbb
std
(bad)
xor
add
ins
and
mov
jae
inc
and
sbb
repz
neg
add
sub
push
leave
enter
jno
hlt
in
mov
fiadd
mov
(bad)
mov
adc
ins
mov
inc
lods
out
jmp
loope
dec
pop
in
ror
inc
mov
mov
or
fiadd
xchg
loopne
out
inc
gs
test
leave
out
jecxz
xor
loop
mov
sub
xchg
add
out
sbb
rcr
out
in
repnz
shr
or
mov
inc
xor
js
pushf
out
in
icebp
loop
(bad)
mov
lods
rcl
repz
push
aas
std
mov
fisubr
mov
mov
outs
in
and
inc
out
mov
clc
cmp
mov
push
mov
cmp
rcr
mov
cld
call
mov
mov
test
in
aas
mov
push
daa
mov
int
not
(bad)
push
mov
sub
jo
dec
xor
add
jns
retf
pop
cmps
or
scas
lods
lods
js
pop
sub
les
push
out
push
push
popf
aam
int
or
rcr
shr
aas
lock
xchg
es
jl
stos
push
sahf
(bad)
jmp
cmps
outs
and
mov
cmp
popa
cmps
pop
adc
in
out
push
inc
xchg
in
xchg
rcr
jp
rol
mov
int3
push
repnz
(bad)
sub
adc
lea
jg
sbb
fwait
aam
xchg
cli
idiv
lods
(bad)
mov
in
inc
lds
cmc
add
fnsave
in
out
jmp
in
rcr
scas
in
pop
outs
mov
pop
call
xor
stos
iret
pusha
jle
and
shl
mov
xchg
xchg
call
clc
int3
out
fisttp
fwait
in
cmps
jl
xor
adc
rol
cmp
ds
popf
jmp
jne
scas
add
pop
mov
ret
fs
sbb
call
mov
int
mov
push
inc
iret
mov
(bad)
sub
shl
or
mov
les
mov
sbb
xor
out
idiv
cmp
sub
fwait
repnz
or
sbb
cs
cmp
sub
lea
push
jle
cli
fisubr
mov
or
pusha
into
xor
out
or
clc
adc
(bad)
scas
adc
dec
fsub
pop
xchg
inc
mov
lahf
rep
repz
out
repnz
rcr
(bad)
xchg
and
fs
hlt
loop
repz
cli
mov
div
cmp
xlat
lahf
sti
cmp
mov
push
mov
cwde
jge
retf
hlt
popa
pop
rol
mov
or
dec
sbb
lahf
into
xor
xchg
enter
mov
ja
mov
data16
or
loopne
dec
loop
xchg
sti
div
pop
pop
mov
jle
scas
or
sbb
and
mov
iret
push
repnz
jae
aaa
pop
call
pop
shl
in
add
neg
fsubr
iret
arpl
test
stos
ret
out
jmp
push
stos
sbb
shr
(bad)
xor
in
mov
in
pop
gs
jne
mov
push
fistp
bound
cld
and
bound
lock
xchg
mov
or
jnp
push
xchg
iret
adc
fisubr
shl
xor
in
pop
in
push
in
add
cmp
ins
(bad)
aad
test
scas
in
sub
pusha
cmp
sahf
add
stc
mov
jecxz
sti
add
inc
sbb
xlat
xchg
pop
rcr
or
sti
ja
adc
adc
lahf
sub
adc
test
or
ret
test
dec
test
cli
jecxz
movs
cli
xchg
in
add
iret
leave
cmps
fdivp
xchg
movs
push
int3
pushf
out
mov
adc
out
push
je
pop
fs
xchg
jecxz
retf
out
mov
mov
push
mov
(bad)
push
lods
pusha
push
and
into
xlat
sbb
ja
sbb
jmp
xchg
mov
xchg
fist
int3
fwait
sub
xchg
ret
xchg
test
std
arpl
arpl
dec
je
lock
scas
add
xchg
or
sub
out
loope
mul
jecxz
ja
mov
out
xchg
je
div
jne
sahf
jmp
lock
test
inc
push
or
xor
(bad)
pop
enter
retf
cmp
out
int
jbe
inc
push
mov
and
sbb
sub
and
in
(bad)
cld
fldl2e
rol
lods
(bad)
mov
leave
jecxz
sub
ficom
xor
cmp
into
rol
sbb
jecxz
stc
cwde
repz
mov
sub
dec
retf
retf
shl
out
aam
dec
sbb
out
mov
repnz
aaa
jae
out
jb
and
int3
adc
in
retf
inc
stos
push
ins
add
cs
add
sar
sbb
dec
call
and
call
idiv
inc
in
xor
aas
xchg
mov
cld
push
pop
push
xor
push
(bad)
push
lods
or
sbb
xor
or
mov
retf
pop
sub
mov
in
dec
in
sub
mov
mov
sub
push
inc
inc
out
or
mov
leave
xchg
push
iret
icebp
repz
in
adc
and
xchg
dec
pop
jnp
sti
dec
loope
push
inc
xor
test
popf
xchg
retf
dec
into
jne
std
or
cli
retf
int
lods
inc
bound
fnstsw
imul
movs
retf
cmp
ja
sub
(bad)
jmp
dec
outs
fcomi
mov
(bad)
ss
push
rol
mov
cli
mov
push
imul
push
jb
int
ficom
es
cmps
jmp
shr
repnz
imul
jmp
sub
cli
arpl
adc
jbe
lds
and
mov
aam
test
shl
out
mov
(bad)
or
stos
push
mov
add
lods
dec
lods
xchg
push
aad
sbb
retf
jnp
pop
scas
mov
jmp
sub
mov
sbb
dec
test
xchg
call
ret
sub
and
xor
jmp
out
lea
cmps
out
data16
jnp
loop
lock
mov
out
cwde
(bad)
(bad)
out
shl
nop
mov
push
fdiv
jecxz
pusha
mov
jmp
mov
jb
test
hlt
xchg
mov
sub
inc
sbb
(bad)
jbe
push
aam
not
ds
and
xor
xor
pop
adc
loope
jb
ja
movs
or
xchg
int3
jae
das
cmc
outs
dec
iret
ror
xchg
fsubr
int3
sub
or
mov
pop
push
div
mov
mov
aas
movs
mov
test
xor
movs
cmps
mov
mov
dec
or
and
xor
mov
jbe
push
addr16
xchg
mov
jmp
movs
arpl
lods
mov
sar
cmp
xchg
sub
mov
outs
call
test
(bad)
fdiv
xor
xor
shl
arpl
pushf
cli
(bad)
(bad)
add
aaa
(bad)
out
pushf
scas
mov
aad
mov
xchg
aas
jp
lds
shl
add
mov
in
test
and
in
lods
cmc
fiadd
sub
ret
mov
aas
mov
xchg
shl
jl
stos
cli
shl
out
push
loopne
xchg
jbe
enter
rcl
push
ja
in
mov
cmp
jno
lods
jno
dec
and
enter
cld
xchg
jle
jge
jbe
in
or
int3
out
jns
out
jle
loop
in
retf
loopne
in
mov
or
sub
out
mov
rcr
out
rcl
and
pop
aam
adc
add
(bad)
lahf
mov
pop
loop
fwait
jbe
ja
xor
(bad)
arpl
icebp
das
repnz
repnz
shr
sbb
xlat
imul
jmp
xchg
ret
popa
popa
addr16
repnz
and
cmp
push
dec
dec
aad
pop
dec
jecxz
push
xor
xchg
outs
cmp
inc
repnz
repz
test
cdq
cmp
fadd
shrd
fist
retf
test
xchg
in
(bad)
out
mov
sbb
cmp
jae
repnz
rcr
cmp
sbb
repz
mov
shl
jmp
int3
pusha
mov
adc
sub
jl
outs
(bad)
ja
loope
sbb
stos
int
mov
inc
inc
pop
sub
outs
jno
clc
daa
xchg
and
cmp
loop
outs
sahf
leave
in
retf
into
test
fistp
or
cmc
push
push
sbb
add
pusha
cdq
and
std
shl
xchg
ret
rol
ror
aam
out
out
jmp
fcmovbe
std
jmp
aam
cmps
push
mov
xor
ins
adc
mov
mov
nop
ret
(bad)
call
fnstenv
out
outs
icebp
push
add
popf
out
push
fldenv
scas
pushf
movs
cdq
ins
cmp
pop
push
imul
sbb
mov
jns
pop
out
or
or
and
imul
xor
xor
pop
xlat
out
sbb
sub
in
cmp
and
jmp
pop
es
test
(bad)
ins
test
hlt
inc
test
repz
lock
scas
cmp
addr16
pop
sub
add
cdq
ss
mov
aad
xchg
ss
cdq
sub
pop
fistp
fnsave
ficom
mov
or
mov
mov
(bad)
call
xchg
aaa
add
xchg
in
iret
daa
xchg
sti
sbb
mov
mov
adc
inc
shr
cmp
mov
imul
daa
cmp
jnp
call
sahf
outs
repnz
ret
mov
and
and
loope
js
lods
out
ins
cmps
jl
(bad)
nop
fidivr
nop
std
sbb
lea
jmp
repz
ja
je
stc
cwde
aad
fbld
pop
sbb
or
movs
repnz
cmps
mov
popa
fdivr
jmp
or
mov
xor
mov
stos
lds
xchg
jae
stos
lds
out
cmp
fisttp
(bad)
addr16
cmps
lahf
popf
lahf
lock
xchg
push
jp
cmp
(bad)
cli
aad
loope
sub
mov
xor
fdivrp
or
jg
push
ror
pop
lods
sub
mov
push
movs
add
out
ins
jmp
adc
jnp
call
(bad)
repz
mov
cmps
loop
dec
ret
push
and
xlat
sub
ret
jmp
fldenv
call
loopne
jmp
jmp
loop
add
mov
cmp
dec
daa
in
lods
jl
push
jo
dec
mov
and
(bad)
mov
sbb
mov
mov
retf
push
sub
mov
xchg
cld
dec
shl
jno
out
xchg
xor
fild
adc
sub
ins
jns
inc
xchg
out
xor
scas
add
shl
loope
aam
loop
fsubr
hlt
mov
mov
loopne
out
jp
aad
jmp
sahf
inc
and
call
imul
and
jae
push
shr
shl
lock
dec
into
add
popa
adc
sar
pop
out
xor
mov
mov
fisttp
stos
ret
add
imul
dec
mov
and
xchg
mov
fldenv
fidivr
dec
inc
add
daa
mov
sti
cld
addr16
mov
pushf
mov
in
cmp
cwde
loop
xchg
es
(bad)
mov
push
xor
jle
(bad)
hlt
ins
out
xor
mov
cmp
sar
jns
vpmaxsw
pop
(bad)
call
xor
aam
fwait
add
(bad)
scas
imul
clc
(bad)
stc
retf
in
clc
jmp
jmp
mov
(bad)
and
call
cwde
mov
movs
jae
frstor
ss
(bad)
stc
stc
mov
add
dec
(bad)
jo
mov
loop
lea
cmp
(bad)
mov
loope
add
ds
aas
push
mov
cwde
or
mov
mov
inc
sbb
mov
fist
std
jo
push
push
cmp
lds
mov
jp
push
daa
xchg
lea
enter
add
xor
mov
pop
cmps
cmp
in
push
add
cs
cld
out
mov
push
outs
mov
sbb
sbb
and
mov
push
test
mov
in
stc
jne
pop
call
repnz
sar
jmp
out
out
mov
sbb
cmc
ins
push
out
hlt
repz
loopne
push
mov
mov
and
in
lock
ficomp
in
leave
bound
jmp
sbb
lock
int3
out
retf
xchg
sbb
fld
movs
fidiv
addr16
ret
(bad)
mov
(bad)
movs
fisubr
xchg
mov
out
mov
mov
enter
add
jl
daa
pop
int
fs
out
(bad)
jb
neg
fcmovnb
xlat
add
clc
je
ror
adc
sub
bound
int
pop
stc
lods
jno
cmps
mov
pop
cmps
mov
(bad)
add
arpl
dec
les
fmul
pop
hlt
push
ins
jle
add
icebp
leave
sbb
js
xchg
inc
xor
mov
leave
int3
jg
(bad)
mov
shl
push
retf
dec
pop
rcl
jecxz
ins
pop
les
ror
xor
pop
cld
mov
add
pushf
in
cmp
imul
cmp
sub
shl
or
or
(bad)
sub
aaa
xlat
sub
popf
inc
fild
stos
mov
aaa
push
sub
ret
xchg
cdq
xlat
mov
test
mov
movs
psubsb
pop
into
arpl
cmp
repz
rol
pop
add
ret
es
arpl
pop
or
jecxz
call
pop
mov
xlat
xchg
cli
je
cli
(bad)
out
mov
xchg
pop
push
push
mov
and
mov
cld
aam
neg
inc
ds
cs
sbb
pop
inc
jne
out
xchg
fs
add
test
mov
ret
(bad)
leave
mov
inc
jge
(bad)
or
call
mov
fist
mov
idiv
cld
jne
scas
push
(bad)
int
add
sub
push
jmp
mov
adc
data16
pop
fs
cmps
retf
sbb
fist
cmp
dec
fdiv
shl
sbb
mov
add
es
add
add
push
loope
lods
mov
sbb
cmp
xlat
outs
and
and
in
adc
cmps
test
sahf
(bad)
sti
cld
(bad)
ds
loopne
cld
dec
daa
jl
out
jp
arpl
fimul
shl
(bad)
jmp
retf
and
mov
cmps
(bad)
out
gs
(bad)
jno
leavew
mov
sti
lahf
repz
mov
and
adc
aam
add
cdq
xchg
je
aad
(bad)
hlt
and
mov
or
test
cmp
cmp
fadd
xor
fldpi
std
cmp
in
daa
jl
dec
out
mov
jmp
adc
rol
xchg
imul
std
loope
gs
test
mov
push
(bad)
xchg
or
idiv
push
xchg
and
(bad)
push
and
cmc
adc
add
cmps
dec
loope
in
xchg
out
cwde
(bad)
jecxz
xchg
mov
pop
sub
outs
push
push
dec
jp
push
sub
xor
cli
adc
add
mov
(bad)
addr16
sub
cmp
out
mov
test
scas
icebp
jb
adc
scas
mov
movs
cld
adc
data16
leave
xor
jbe
and
push
scas
xor
inc
jl
sbb
call
outs
dec
loopne
int
push
push
sub
mov
xchg
loop
add
sbb
stos
sti
cwde
enter
out
ret
nop
ins
(bad)
xor
repz
data16
(bad)
mov
into
push
sub
add
repz
(bad)
cwde
mov
imul
push
or
jle
dec
cdq
cmc
and
repnz
(bad)
pop
aas
popa
adc
pop
(bad)
fld
cmps
fimul
ins
fsubr
call
add
cmc
es
imul
ror
out
push
mov
loopne
scas
push
mov
nop
(bad)
das
stc
cmp
enter
in
xchg
adc
in
mov
sahf
lds
xchg
fs
pop
xchg
add
mov
mov
push
push
repz
pop
clc
(bad)
aad
out
sbb
leave
arpl
int3
or
xchg
sbb
lds
pop
sbb
xor
inc
adc
out
sbb
jo
int3
jae
inc
popf
cwde
ret
xchg
sbb
or
mov
(bad)
cld
or
jb
inc
and
sub
mov
hlt
lahf
std
repz
mov
call
mov
data16
pop
or
je
shr
jo
fsub
cmps
es
push
psubq
mov
into
jp
frstor
mov
test
cmp
push
(bad)
inc
sbb
mov
pop
popa
xchg
cmps
sub
and
loop
mov
pusha
enter
scas
call
data16
mov
repz
mov
inc
dec
xchg
mov
lods
icebp
sub
xchg
jmp
xor
adc
pop
cwde
mov
sbb
pop
retf
cmp
xchg
lods
inc
pop
in
cs
push
or
lock
sub
jne
(bad)
je
pop
ss
out
(bad)
or
mov
jbe
lods
or
out
or
in
ret
xor
mov
jle
cld
into
dec
loop
outs
lods
sub
fild
lds
cmc
dec
jnp
mov
stos
mov
retf
mov
rcl
in
xchg
(bad)
adc
cwde
dec
cmp
and
sbb
stc
imul
cdq
xor
pusha
fcmovnu
xchg
stos
pusha
(bad)
fdivp
xchg
pusha
(bad)
jnp
cmp
loopne
jg
cld
in
pop
js
hlt
sub
idiv
dec
jg
sbb
mov
jmp
loopne
ret
int3
push
jl
not
sub
jbe
shl
jg
dec
out
or
push
jmp
and
jnp
test
xchg
je
jmp
int
xchg
sbb
push
int
test
(bad)
ins
je
jns
inc
rcr
icebp
xor
inc
out
clc
scas
cmps
push
sahf
clc
je
dec
push
fbstp
in
into
mov
call
icebp
vpsrlw
mov
cmp
jmp
out
jbe
in
mov
(bad)
fdivrp
adc
dec
push
mov
lahf
mov
lahf
in
mov
and
lds
aaa
mov
cmp
inc
in
imul
mov
mov
jecxz
lock
xchg
push
mov
sahf
out
sar
shr
ret
scas
icebp
adc
cld
or
fnstsw
and
aas
cmps
adc
std
sbb
sar
in
inc
cmp
mov
es
pop
loop
clc
inc
stos
rcr
data16
test
push
ror
clc
push
jecxz
mov
mov
dec
lahf
ss
push
cmps
enter
xlat
cmc
fild
test
sub
sub
sub
repz
(bad)
cmp
les
xchg
xor
in
and
dec
cmp
inc
lods
jecxz
into
div
push
(bad)
dec
test
pop
xchg
in
in
mov
pop
std
cdq
pop
cli
arpl
mov
add
jle
outs
push
cli
(bad)
(bad)
push
jo
(bad)
adc
cmc
out
adc
mul
mov
std
call
icebp
and
stc
ss
sbb
div
retf
add
xor
jmp
inc
dec
retf
inc
rcr
jne
imul
xchg
adc
popw
stos
jmp
stc
sbb
imul
sar
out
pop
loopne
retf
or
push
sub
or
fs
das
mov
out
pusha
mov
sub
test
sub
test
(bad)
aad
js
inc
or
pop
and
out
mov
imul
cs
push
or
repz
xchg
out
xlat
push
or
add
shl
mov
cmps
ja
mov
les
(bad)
xor
sbb
imul
jno
pushf
icebp
and
pop
inc
push
iret
int
mov
xor
call
fwait
aam
add
dec
mov
scas
sub
add
inc
adc
out
xchg
sub
mov
stos
sub
int3
mov
inc
mov
scas
aas
test
cmps
leave
push
in
xchg
sbb
in
(bad)
and
inc
jmp
jae
push
lds
int3
(bad)
in
push
pop
cwde
ja
cmps
jle
(bad)
lods
mov
fimul
rol
mov
add
cmps
shl
mov
add
in
pop
loopne
mov
cld
mov
push
inc
xlat
(bad)
(bad)
sub
adc
cwde
pop
sbb
aas
cmp
mov
mov
cld
lock
add
adc
or
xchg
xor
in
shl
(bad)
fdivr
sar
pushf
dec
retf
ss
sbb
push
push
leave
std
fstp
jle
push
jmp
jmp
fisttp
inc
aam
(bad)
imul
out
cmps
add
(bad)
and
ror
dec
ja
into
push
shl
mov
sbb
(bad)
retf
adc
mov
aad
lods
add
adc
ret
loope
or
adc
jae
fst
into
mov
push
mov
pop
repz
add
jecxz
scas
addr16
lock
add
pop
xor
adc
jl
clc
mov
(bad)
stc
jle
mov
mov
xor
jbe
xchg
jecxz
(bad)
inc
mov
xor
repnz
jg
and
mov
(bad)
fcomp
mov
fcos
cmp
outs
loope
push
or
inc
mov
pop
sar
(bad)
fidivr
or
daa
aas
ror
sub
xchg
inc
int
fiadd
jge
loop
outs
mov
push
inc
or
cmc
sbb
div
imul
xchg
push
pop
sbb
pop
std
in
(bad)
add
inc
sub
idiv
out
cmp
leave
call
push
in
int3
loope
cmp
(bad)
push
dec
repz
pop
dec
mov
sahf
adc
clc
int
cmp
pop
inc
inc
or
rol
shl
(bad)
rep
fst
out
jmp
inc
out
ret
mov
leave
cli
and
cmp
in
pop
fstp
add
retf
int
mov
test
mov
stos
dec
not
addr16
loope
mov
in
hlt
lock
into
jo
add
cmp
leave
or
out
out
scas
fld
mov
fidivr
ret
ret
popf
std
push
int
and
jnp
test
stc
lods
not
pushf
or
jae
pop
cld
mov
sbb
clc
mov
mov
cld
(bad)
mov
hlt
movs
outs
(bad)
in
paddd
sub
jae
cmp
ret
es
jbe
dec
dec
stos
test
mov
push
(bad)
cmc
add
mov
sbb
xchg
add
jo
fldenv
cmp
mov
cmp
out
mul
jmp
stc
sbb
mov
ret
clc
cmp
mov
ds
jns
sbb
shr
into
push
mov
loopne
push
ss
loop
repz
mov
pop
bnd
sub
sub
fcmovne
or
adc
xlat
(bad)
movs
into
ficomp
in
jg
and
adc
out
in
stc
jge
mov
icebp
pop
scas
xor
mov
xchg
daa
xchg
cmp
scas
cli
popf
fisub
test
xor
out
mov
outs
and
dec
inc
mov
in
mov
jecxz
jle
out
dec
or
inc
fstp
and
fcmovnu
mov
mov
repz
jg
jle
dec
ret
ret
sub
outs
xchg
jmp
lock
pop
test
(bad)
mov
mov
mov
cmps
push
outs
inc
clc
outs
shl
pop
mov
fst
inc
push
aad
pop
mov
mov
xchg
adc
or
pop
imul
inc
imul
in
(bad)
in
(bad)
std
lea
xchg
aad
leave
mov
mul
push
clc
(bad)
xor
xlat
mov
or
loopne
or
hlt
inc
gs
stos
jns
pushf
mov
(bad)
push
or
loope
jmp
mov
dec
test
adc
cmps
xor
add
sub
push
movs
(bad)
test
mov
adc
mov
inc
rol
scas
sub
shl
mov
cmovae
push
lea
cmp
xor
jecxz
adc
addr16
add
popf
les
cdq
xlat
retf
popf
mov
push
gs
cmp
or
adc
jns
test
push
and
adc
je
inc
and
dec
add
les
push
pop
nop
fwait
in
mov
es
add
adc
(bad)
fnclex
out
push
mov
mov
cs
jb
icebp
sub
call
adc
xchg
xchg
inc
cs
inc
jmp
cmp
loop
loopne
jmp
xchg
sar
lea
jnp
in
sti
jns
cld
test
mov
cwde
not
rcr
mov
mov
data16
fisttp
jle
mov
mov
in
jnp
cmps
jmp
jl
cli
jecxz
repz
enter
inc
repz
xchg
fwait
xor
fcom
push
pop
in
call
inc
jmp
dec
mov
retf
sbb
push
test
jp
jmp
add
into
adc
dec
add
jno
jmp
or
push
daa
lods
jle
enter
aad
sbb
mov
add
sbb
xor
outs
xor
push
sub
paddw
fisubr
das
cmp
dec
adc
push
stos
cld
imul
lahf
cmc
nop
pop
cld
clc
scas
pop
pushf
mov
jb
ja
cli
xor
mov
sub
(bad)
sub
scas
movs
mov
xor
sub
cmc
int
xchg
popf
retf
dec
or
mov
fs
xchg
dec
imul
into
cmp
lds
push
xchg
or
or
xchg
add
fild
clc
in
stc
mov
rcr
sub
ss
scas
daa
fnstenv
mov
fwait
out
pushf
or
mov
adc
mov
lahf
mov
sub
lea
arpl
shr
imul
mov
pushf
sbb
loope
lods
pop
das
mov
fadd
xchg
int
or
jg
pop
cmp
mov
add
lods
cwde
test
es
cmp
outs
or
test
mov
sti
out
pop
in
pop
xchg
leave
push
popa
xrelease
jb
in
mov
in
shl
out
daa
lea
fimul
leave
es
sti
xchg
add
push
mov
xor
or
jecxz
and
aaa
jmp
(bad)
ds
scas
call
fimul
ret
sbb
pop
aas
cmp
push
xor
inc
lds
ret
pop
std
mov
fwait
mov
test
pop
mov
adc
in
xor
and
sbb
xchg
daa
hlt
mov
idiv
add
push
sub
in
xor
mov
aad
add
mov
std
mov
cmp
stos
xor
mov
les
jne
and
mov
mov
shr
mov
shl
cld
stc
mov
xor
mov
mov
mov
and
push
jmp
or
mov
add
jg
jbe
loope
lods
int
in
or
inc
fucomi
adc
pop
cmp
mov
imul
fcmovnbe
sbb
imul
pop
add
in
jmp
sub
lods
and
sub
pop
mov
jbe
and
sbb
sbb
cmp
loop
and
xchg
inc
jecxz
jp
movs
add
xor
and
arpl
mov
stos
jmp
aaa
xchg
pop
outs
mov
pop
shl
ins
in
jne
jle
add
jl
adc
pop
adc
mov
popf
xchg
inc
jle
mov
ins
and
std
leave
inc
shl
inc
pop
movs
imul
sbb
adc
in
sahf
mov
cdq
cmp
jns
jle
pop
mov
stos
push
ins
or
cdq
dec
jmp
stos
add
jns
sahf
ror
inc
cmps
out
xchg
jne
fwait
xchg
shl
arpl
jb
loope
mov
and
and
test
mov
call
(bad)
imul
popfw
sti
xlat
ficomp
jo
pop
jns
cwde
lock
add
rcl
cmp
mov
pop
rcr
pop
and
xor
pop
ret
ficom
mov
xchg
add
cwde
loopne
jmp
cmp
test
cmp
push
bound
cld
pusha
mov
push
arpl
retf
jle
push
stos
or
shr
in
sti
retf
and
in
mov
mov
lods
mov
ror
cmp
popa
dec
pop
xchg
shl
jno
shl
inc
popf
rcr
fcmovnbe
rcr
jecxz
lock
mov
cmp
call
mov
sub
and
movs
pop
mov
test
out
push
repnz
loopne
mov
pop
jmp
push
dec
jmp
jno
neg
mov
scas
int
ja
fadd
cmp
mov
pop
scas
out
movs
mov
pop
fld
xlat
jmp
jmp
mov
jno
sahf
jge
leave
jb
dec
push
add
shl
mov
mov
enter
in
pop
scas
jmp
ret
sub
mov
sub
mov
mov
fst
arpl
test
fnstcw
dec
clc
or
jp
cmp
cld
adc
xchg
jle
fimul
push
icebp
rcr
popa
lea
cs
pop
ror
out
inc
sub
test
pop
cmp
sahf
push
cmp
div
aam
xor
add
sbb
or
and
loope
mov
mov
push
dec
je
fcom
adc
ror
fwait
out
sbb
ja
and
xchg
leave
scas
xor
add
je
mov
lods
imul
stc
jae
pop
sub
mov
imul
int
dec
dec
leave
xor
sahf
or
jns
std
lock
mov
lods
mov
push
out
shl
inc
popa
fiadd
js
jae
fst
(bad)
retf
ss
sub
add
sub
(bad)
mov
call
lock
mov
dec
rcr
lods
out
add
fs
ror
pop
adc
scas
jl
pop
jmp
fstp
and
inc
mov
movs
lods
mov
sar
fwait
mov
(bad)
sbb
lea
mov
sub
cmp
push
pop
or
sbb
adc
dec
imul
fs
adc
out
jge
(bad)
fcom
int
add
add
inc
fsubr
xor
mov
mov
in
ins
pop
jp
cmp
paddd
stos
mov
sub
aas
push
mov
shl
sub
jmp
fwait
outs
outs
imul
test
jl
fsub
and
add
jp
sti
xor
lahf
in
xor
ret
dec
fwait
out
call
dec
gs
push
ss
fidivr
(bad)
out
shr
mov
retf
stc
jns
inc
femms
fild
jl
or
ret
imul
in
aam
lahf
retf
or
shl
mov
jb
in
mov
call
aas
adc
add
mul
cli
push
out
pop
pushf
inc
xchg
fidivr
pop
mov
pop
pop
loop
ins
fld
and
jmp
and
movs
sar
imul
jl
mov
mov
stc
fld
sbb
movs
mov
scas
pop
stos
jmp
fwait
cwde
(bad)
push
jecxz
add
mov
mov
pop
pushf
mov
std
add
popf
pop
xor
mov
push
fldenv
popa
(bad)
test
mov
rcl
xchg
repz
xchg
and
inc
je
fmul
add
sub
sbb
fsubr
(bad)
and
loope
jecxz
jne
xbegin
add
push
stos
out
ds
test
repz
std
imul
in
clc
(bad)
mov
iret
jmp
sar
ret
sub
cmps
into
sbb
mov
lock
xchg
add
bound
dec
in
adc
ffree
jecxz
sub
sar
inc
ret
(bad)
xor
iret
cmp
xchg
aaa
cmp
std
mov
dec
inc
ss
adc
shr
mov
call
pop
(bad)
sbb
and
and
sub
dec
pop
xchg
mov
jge
int3
(bad)
rcr
loopne
xor
xor
mov
jae
sub
or
sbb
out
shr
adc
add
add
out
inc
sahf
add
dec
ret
(bad)
inc
cli
mov
bound
clc
dec
mov
rol
outs
addr16
pop
pop
mov
shl
fsubr
jmp
pop
inc
test
mov
ins
pop
in
call
in
mov
xor
and
sbb
pop
cmp
xchg
xor
shl
stc
mov
in
xchg
scas
popf
sub
sub
mov
out
xchg
jne
in
cs
mov
out
cmp
iret
(bad)
cmp
aam
(bad)
sub
lods
sub
lods
mov
psrad
fbld
adc
mov
inc
rcr
jnp
ret
(bad)
dec
sub
retf
sbb
and
into
and
push
popa
int
and
push
arpl
daa
out
or
fmul
xchg
icebp
cmp
out
ins
retf
arpl
or
movs
or
xor
nop
jmp
ins
pop
je
pmullw
or
sbb
out
add
xchg
pop
out
mov
or
or
mov
outs
gs
into
fldcw
mov
(bad)
and
xlat
aas
xor
jle
pop
outs
test
xchg
push
and
push
(bad)
(bad)
in
(bad)
clc
push
sbb
adc
push
or
sbb
fsubrp
movs
lods
jecxz
adc
dec
xlat
dec
std
xchg
dec
sahf
frstor
pop
add
gs
jb
mov
in
push
mov
mov
aaa
push
mov
scas
mov
retf
stos
sub
neg
popa
jbe
inc
and
outs
push
adc
or
lds
and
pop
jmp
je
pop
adc
mov
stos
cwde
pop
mov
xchg
mov
mov
jge
cmc
sbb
jns
cwde
out
dec
adc
pop
dec
add
mov
bound
call
pop
inc
fndisi(8087
mov
repnz
and
and
jle
loop
arpl
inc
xor
in
cmp
jne
cmp
pusha
xchg
int
sahf
jp
mov
(bad)
mov
dec
or
sbb
fbld
test
sub
push
push
inc
lods
aas
push
repz
or
hlt
call
ins
(bad)
out
xchg
rol
dec
(bad)
(bad)
mov
push
xchg
gs
test
add
scas
scas
push
cdq
xor
je
fdiv
mov
les
add
fnstsw
in
push
pop
or
outs
cmps
mov
jns
mov
aad
ins
shl
jae
lods
sub
daa
pop
clc
ins
add
lea
mul
xchg
call
dec
mov
test
pop
aaa
mov
stos
mov
xor
or
jne
adc
dec
div
shl
lods
xchg
jns
in
jns
ins
push
add
sub
ss
cmp
test
shl
cmp
jmp
int3
out
or
std
mov
xor
pop
bound
cdq
mov
pusha
and
imul
xchg
xchg
mov
fcmove
inc
or
and
icebp
mov
aam
shl
in
xor
retf
dec
sbb
icebp
in
ja
int
out
ds
(bad)
cmc
(bad)
test
inc
out
loopne
mov
imul
fdivr
aam
mov
loop
pop
mov
xor
ins
ja
daa
inc
hlt
and
adc
dec
idiv
mov
pop
jmp
fnsave
and
pop
dec
and
mov
sbb
sub
sub
sub
adc
jne
std
dec
mov
pop
ins
add
ss
inc
out
jnp
mov
inc
gs
pusha
out
call
shl
sar
stos
je
jo
mov
push
push
mov
adc
ja
jmp
cmps
adc
test
add
adc
stos
int3
int
mov
push
cs
mov
test
or
movs
ins
loop
adc
fwait
lods
rcl
and
pushf
cmps
loop
ds
in
in
out
jl
xchg
and
pop
addr16
stos
into
in
test
push
sbb
push
inc
jp
mov
pop
jne
(bad)
lods
imul
(bad)
in
loope
mov
sbb
mov
loope
dec
mov
leave
mov
test
push
ins
or
int3
test
xlat
fstp
push
adc
icebp
jg
jecxz
dec
inc
arpl
fcom
out
pushf
sbb
loop
popf
mov
pop
push
push
cmp
(bad)
out
cmps
enter
std
fcom
test
add
push
inc
dec
sbb
hlt
inc
ja
pop
cwde
jl
sub
fwait
retf
pop
push
pop
sub
movs
jge
imul
push
lea
mov
sub
hlt
call
aas
jge
into
aaa
mov
jmp
dec
loop
dec
lock
test
retf
es
pop
in
leave
fistp
adc
adc
outs
cmp
bound
mov
lds
bound
xchg
push
pop
sbb
test
or
jno
enter
or
mov
pop
adc
adc
stc
cmp
mov
cmps
xor
icebp
sahf
clc
mov
fwait
(bad)
jbe
iret
inc
call
mov
(bad)
mov
idiv
or
jmp
ss
xor
outs
mov
cmp
movs
aaa
sub
sub
adc
jns
adc
(bad)
popa
jmp
mov
ret
mov
fsubr
add
xchg
and
xor
(bad)
loope
mov
jmp
and
cmps
call
in
push
add
jnp
lods
fadd
push
mov
fst
cmp
xchg
xchg
cmp
repz
mov
lods
pop
jmp
outs
lock
adc
enter
xor
adc
into
int3
sbb
xchg
lock
in
xchg
pop
psrlw
(bad)
mul
pop
addr16
pop
std
cmp
mov
pop
mov
cmp
push
out
sbb
mov
dec
or
test
sar
cdq
mov
adc
into
cmps
xchg
mov
jmp
fwait
mov
retf
cmp
div
aad
jmp
(bad)
jbe
dec
arpl
loopne
cmp
fadd
cmps
lods
mov
adc
jmp
push
and
daa
seto
out
or
xchg
mov
mov
mov
or
sbb
adc
pop
inc
jmp
pop
inc
jle
outs
or
test
in
jl
iret
cmp
or
pop
jge
jae
enter
lds
loop
sub
add
mov
dec
add
mov
cwde
mov
leave
imul
out
adc
add
int
cmps
push
aaa
popf
ret
popf
or
jbe
ss
lea
jmp
inc
int
mov
adc
fistp
ja
adc
data16
daa
ror
in
jne
jle
loopne
(bad)
mov
out
and
fld
ror
test
cmp
out
jmp
mov
repz
sub
dec
add
arpl
in
loop
loop
mov
fadd
imul
fsubr
div
xor
das
(bad)
jb
das
sbb
adc
or
stos
mov
jbe
out
sahf
ins
addr16
lods
(bad)
loop
aam
add
out
cmp
lods
loop
lods
enter
dec
sub
out
loope
push
mov
iret
les
add
adc
stos
mov
cmc
in
and
push
add
lock
js
xchg
loop
das
adc
test
jmp
add
sbb
push
das
rcr
repz
jmp
xor
cli
imul
scas
imul
mov
adc
shr
add
nop
mov
jmp
pop
mov
or
mov
xchg
and
stc
popf
stc
int
test
mov
sbb
gs
loop
cdq
iret
test
ds
out
arpl
daa
je
lea
test
in
xlat
test
fsubr
out
jmp
mov
add
xor
jl
sub
out
pushf
(bad)
jns
(bad)
in
and
dec
mov
icebp
jmp
repnz
mov
icebp
adc
dec
or
int3
jg
stos
ret
popf
dec
enter
mov
je
test
outs
fdivrp
push
jmp
leave
stc
or
(bad)
jne
fdiv
je
jmp
sub
test
enter
or
out
outs
push
adc
scas
xchg
jnp
sbb
jbe
xchg
lods
(bad)
repnz
fcom
aam
adc
nop
popf
add
stos
inc
ficomp
fcomip
sub
and
inc
push
xchg
ror
jne
pop
scas
cmps
sub
shr
xor
out
add
aad
lods
lods
dec
ja
out
iret
je
sti
add
xchg
iret
push
arpl
in
mov
fdiv
out
int
test
push
unpcklps
hlt
std
popf
inc
pushf
sub
sbb
je
(bad)
add
cwde
(bad)
pop
xor
inc
pop
dec
jbe
jp
pop
dec
je
jbe
imul
ins
jb
push
xchg
jb
arpl
call
xchg
es
rcr
mov
mov
pop
jmp
ds
nop
cmp
cwde
hlt
into
es
call
popf
sbb
mov
aaa
scas
push
in
push
fwait
sbb
out
rcl
cwde
mov
sbb
jmp
cwde
icebp
es
inc
or
xchg
pop
lds
jp
lods
rcl
jmp
jns
and
retf
das
shl
cmp
repz
in
je
dec
scas
mov
in
nop
xchg
in
imul
jle
sti
outs
js
sti
push
ret
or
pop
jo
add
push
mov
xchg
inc
ret
loope
arpl
pop
inc
cmp
add
sub
jl
repz
out
sbb
mov
push
dec
sbb
add
mov
fs
psadbw
mov
sub
shl
leave
jmp
mov
inc
pop
mov
loope
aad
inc
int
jno
jecxz
out
sbb
sar
adc
fs
cld
int3
jbe
add
movs
cwde
sub
ins
pop
ror
dec
test
cli
jp
scas
bound
inc
fisub
sbb
jno
pop
jmp
test
mov
inc
(bad)
fcmovbe
stos
mov
xchg
jo
test
outs
mov
xchg
iret
or
xchg
xor
dec
cli
(bad)
ins
call
sbb
and
prefetch
sub
pop
adc
pop
int3
out
stc
cmp
in
stos
push
dec
aad
(bad)
fldcw
xchg
mov
cli
add
stos
mov
in
cld
retf
add
mov
pushf
in
and
popf
sub
stos
lock
lock
mov
aas
sbb
mov
outs
ss
push
lds
inc
mov
mov
xchg
and
cmc
inc
mov
mov
out
test
pusha
addr16
test
ror
imul
retf
xchg
lock
movs
inc
shr
mov
jo
ret
lds
int
rcr
or
(bad)
in
aaa
popf
aad
fcmove
out
(bad)
repz
in
fdivr
xlat
shl
in
cld
repz
push
pop
sub
sub
aad
sbb
sar
sub
xchg
xchg
bound
pop
xor
cmp
mov
ds
cld
xchg
gs
fistp
retf
inc
test
xchg
jecxz
mov
and
sbb
jecxz
in
leave
(bad)
mov
gs
push
cwde
fsubr
pushf
lahf
cmp
stc
in
ja
(bad)
cmp
in
lds
(bad)
mov
lods
jmp
lock
jmp
and
cmps
jl
outs
ret
ret
stos
lock
ins
xchg
(bad)
ja
cmp
call
mov
ins
and
mov
pop
in
mul
adc
lock
jb
js
frstor
fcomp
dec
push
or
popa
push
mov
dec
inc
jbe
jae
data16
cmps
mov
sub
xor
shr
stos
jp
xor
inc
dec
nop
stc
pop
repz
out
cmp
imul
rcl
mov
lahf
fdiv
loope
add
mov
pop
in
loop
test
cli
mov
div
pop
mov
add
push
loope
sbb
xchg
and
test
ret
loopne
icebp
fidivr
mov
push
pop
push
jp
cmp
pop
gs
mov
out
(bad)
cli
add
addr16
and
cli
sti
inc
jmp
sub
push
pop
mov
pop
push
out
jmp
in
adc
jbe
push
or
into
xchg
cwde
jecxz
aam
push
sbb
movs
mov
in
jo
mov
mov
in
mov
dec
not
sbb
push
int
fisttp
push
fdivr
adc
cli
push
(bad)
cdq
aad
jp
call
cmp
push
inc
sahf
jmp
les
icebp
ins
enter
inc
int3
or
(bad)
cs
test
pop
mov
loope
push
xor
stc
out
jmp
mov
jmp
mov
aaa
pop
popa
cli
pusha
mov
int3
not
nop
enter
add
gs
sbb
in
jb
daa
jp
jmp
lock
ret
icebp
mov
cli
mov
jmp
lock
out
xchg
(bad)
out
into
repz
repnz
jbe
ja
xchg
enter
lods
aaa
arpl
mov
stos
sub
pop
sub
in
fidivr
xchg
or
pop
sub
cmc
sbb
iret
loopne
iret
cmp
sbb
sbb
mov
cmps
(bad)
cmc
mov
push
jne
hlt
call
rcr
(bad)
pop
retf
xor
jmp
outs
fwait
lods
jnp
mov
push
cmps
mov
jmp
jmp
sbb
ret
sbb
pop
jns
out
out
gs
(bad)
fs
test
ret
xchg
icebp
push
out
sti
in
mov
retf
adc
repz
xor
outs
push
mov
rcl
inc
ror
sahf
es
es
jg
shr
cmp
or
(bad)
fld
aam
jbe
adc
mov
call
or
inc
or
(bad)
or
fcomip
repnz
push
pop
sbb
(bad)
ds
popa
and
test
in
scas
aad
hlt
add
jae
xlat
or
stos
dec
push
dec
ror
inc
mov
jl
loope
js
dec
repnz
jmp
(bad)
outs
dec
adc
adc
add
pop
scas
push
mov
mov
retf
(bad)
out
out
xor
in
(bad)
fldenv
(bad)
iret
mov
mov
xchg
cld
stos
xchg
add
mov
jmp
int
push
push
pop
adc
iret
dec
ins
mov
(bad)
adc
ins
mov
cmps
mov
int
std
mov
clc
jl
addr16
(bad)
push
icebp
(bad)
mov
imul
(bad)
xchg
pop
push
neg
lock
sar
push
jnp
adc
hlt
push
into
iret
add
and
call
push
not
xlat
mov
sbb
int3
and
sub
add
adc
fcmovbe
pop
loop
aas
mov
and
scas
(bad)
in
mov
int
jb
xchg
cmp
mov
cmp
xor
mov
adc
ret
out
push
fist
mov
push
inc
xor
call
mov
jge
aas
push
loope
xor
popa
push
cmp
xlat
xor
ror
mov
icebp
sub
loop
neg
jmp
aaa
test
sbb
std
pop
enter
jbe
sub
push
popf
mov
(bad)
or
mov
mov
addr16
nop
(bad)
and
mov
xchg
jmp
js
int3
ror
shl
xor
popa
ret
cs
in
xchg
dec
or
cmps
loop
and
lock
iret
jmp
addr16
out
(bad)
out
aas
(bad)
popa
sub
and
aad
mov
mov
adc
xor
stos
fs
xchg
or
dec
jle
lods
pop
retf
mov
inc
aad
inc
jb
lds
stc
mov
cmp
jno
mov
imul
aam
ror
inc
ret
imul
xchg
das
fnsave
in
ja
jecxz
push
sbb
int3
jb
out
xchg
xor
xchg
cli
movs
sti
xchg
jnp
out
mov
out
ud0
xor
sbb
out
fdiv
add
out
lahf
jno
std
popa
(bad)
xor
pop
sbb
mov
jle
aaa
bnd
mov
cs
xchg
fisubr
jmp
jmp
mov
stos
clc
in
outs
mov
(bad)
sbb
std
jl
xadd
lods
adc
jmp
mov
mov
aam
pop
inc
mov
push
mov
inc
ins
pusha
ret
jmp
pop
ficomp
push
cmps
pusha
xor
xor
in
and
dec
aaa
mov
push
inc
dec
mov
daa
cmp
inc
adc
jp
xchg
lods
xor
jnp
fs
inc
jae
das
sbb
jmp
xchg
jbe
fwait
jne
ins
jmp
not
mov
jg
mov
mov
jl
outs
xchg
push
pusha
mov
outs
xor
lods
adc
mov
movs
iret
idiv
mov
jnp
mov
(bad)
xor
add
test
pop
mov
jo
js
test
dec
add
mov
mov
psllw
popa
clc
jno
cdq
sub
cmc
iret
and
ror
fild
dec
fwait
push
inc
dec
js
lods
enter
outs
mov
(bad)
in
lea
dec
xor
jmp
cli
adc
mov
ja
jnp
mov
add
push
dec
cli
dec
xor
jnp
das
xor
call
push
ret
retf
fsub
int
cmps
lds
daa
mov
scas
inc
out
mov
std
nop
shr
or
adc
push
or
pop
pop
ret
mov
pop
mov
lock
sti
mov
ret
cmp
dec
mov
(bad)
test
sbb
cs
ss
int
sti
into
dec
out
mov
rcl
stos
push
stos
popa
sbb
cmp
sub
ret
xor
push
sub
push
(bad)
cmp
fmulp
lods
adc
pushf
in
pop
in
lock
pop
xchg
cwde
test
jo
or
adc
cmc
test
loope
data16
fnsave
ret
nop
cwde
iret
out
in
clc
fiadd
repz
add
sub
push
imul
ror
xor
cmp
adc
imul
shl
jp
cmp
mov
cmc
data16
mov
addr16
dec
shl
ret
(bad)
fisttp
sub
or
mov
jne
mov
mov
fdiv
push
pop
pop
mov
cmp
jmp
sar
pop
sub
add
ret
dec
inc
mov
xlat
xchg
in
mov
adc
stc
sar
dec
pop
pusha
mov
jle
mov
xchg
jae
(bad)
mov
sar
sbb
(bad)
outs
cmp
jcxz
mov
daa
inc
mov
scas
xor
jle
int
jns
adc
cmp
in
loop
xchg
(bad)
mov
(bad)
pop
test
cmps
mov
fwait
shl
(bad)
retf
mov
inc
and
jle
movs
fs
fsub
pop
mov
jmp
mov
rol
movs
(bad)
sub
mov
clc
fucom
idiv
jmp
xchg
adc
push
mov
or
loop
fnsetpm(287
jle
push
jo
jbe
push
arpl
icebp
movs
outs
jno
cmp
int3
jo
mov
retf
into
stos
pop
outs
xchg
daa
jmp
aam
sub
popf
and
cmp
xlat
idiv
xor
xor
(bad)
cmp
adc
mov
sahf
pop
adc
retf
sbb
push
or
or
(bad)
mov
jp
xor
outs
sahf
fs
xlat
aas
(bad)
call
mov
push
or
jns
adc
xchg
in
cmp
xlat
push
fldl2t
ins
fisttp
dec
sbb
jecxz
or
outs
hlt
push
push
push
repz
fisubr
int
(bad)
(bad)
popa
push
loop
daa
push
fimul
mov
xor
inc
and
sub
in
pop
fldenv
sti
and
scas
sti
xchg
jecxz
in
adc
pop
add
pop
cmp
lds
fldenv
idiv
call
mov
push
mov
cwde
or
sub
mov
or
or
xor
dec
xor
cmp
movs
add
cmp
daa
xchg
cmp
and
out
mov
lods
lea
gs
ror
bnd
aas
pop
(bad)
cwde
jnp
(bad)
mov
leave
sub
mov
sahf
repz
cmp
add
xor
push
or
or
lods
cmp
sub
push
cmp
cld
retf
jmp
sti
(bad)
cs
lds
mov
dec
xchg
jns
data16
bound
aad
push
push
shr
fucomip
inc
jg
cmp
mov
mov
jl
cli
test
(bad)
push
(bad)
push
sbb
adc
jmp
xchg
pushf
lahf
cwde
data16
mov
pop
icebp
jg
mov
int3
xchg
dec
add
push
inc
in
(bad)
xchg
inc
xchg
push
je
addr16
mov
pushf
iret
cmp
int
aad
inc
dec
shl
mov
lock
push
mov
(bad)
pop
cmc
inc
or
push
pop
cmp
shl
enter
imul
push
stos
jg
pop
arpl
push
inc
push
sti
jns
cmp
push
jge
movs
and
fdivr
retf
popa
icebp
dec
ror
in
ret
aaa
push
push
mov
xchg
test
imul
push
jecxz
dec
sahf
mov
push
sbb
adc
repnz
pop
dec
scas
mov
clc
scas
xchg
fwait
sbb
xchg
mov
jns
jl
outs
repnz
pushf
dec
inc
pop
ret
adc
dec
movs
fcom
js
push
and
(bad)
das
sar
pop
jge
div
inc
std
cdq
xchg
test
(bad)
pop
ret
fcomp
push
hlt
rcl
dec
and
out
outs
mov
dec
inc
mov
out
aam
call
into
jae
mov
pop
nop
movs
mov
dec
dec
sbb
push
lods
xchg
xchg
mov
sub
push
mov
(bad)
mov
jle
add
mul
cmc
add
out
dec
adc
movs
inc
ror
mov
fwait
ja
lods
add
icebp
add
out
cmp
add
mov
ds
dec
test
outs
push
add
jle
xchg
repnz
std
xor
leave
adc
add
lods
and
imul
dec
faddp
inc
mov
inc
popa
scas
inc
dec
fwait
pop
in
mov
loopne
or
or
movs
inc
(bad)
jmp
dec
sub
loop
ins
adc
push
loope
xor
stc
fdiv
cmps
push
ret
jmp
xor
mov
cmp
sahf
ja
pop
sub
test
push
jne
aaa
push
mov
push
loop
mov
sbb
mov
test
jmp
mov
ficom
inc
lods
in
mov
push
xchg
cmp
sub
sub
call
mov
dec
adc
jmp
ins
pop
sti
shr
loop
jmp
rol
rol
jp
call
sub
aas
cmps
pop
std
fcmovu
scas
adc
mov
inc
in
out
je
ror
retf
mov
lea
(bad)
mov
fdiv
pop
repnz
adc
enter
stc
fwait
add
scas
in
inc
ror
xor
xor
enter
mov
sar
fiadd
add
arpl
mov
out
inc
mov
cmp
push
(bad)
in
cli
xchg
xor
ins
(bad)
adc
inc
pop
int
in
popf
jge
int
sti
dec
pop
mov
in
das
sar
xchg
cmp
popa
mov
cmp
fmul
sti
mov
mul
cli
(bad)
retf
pop
(bad)
cmc
push
mov
leave
cs
xchg
leave
aam
pop
nop
inc
lods
(bad)
test
out
jbe
xchg
mov
mov
nop
push
dec
int3
mov
lods
stos
jb
sub
mov
fstp
dec
fsub
movs
jl
push
sub
in
(bad)
jmp
mov
push
cwde
or
aad
mov
ins
pop
aaa
loope
adc
inc
shl
rcr
dec
push
add
(bad)
in
daa
(bad)
fdiv
mov
ins
pop
js
out
iret
mov
or
rcr
sub
jne
push
das
lods
and
cmp
sbb
jl
jne
jg
xchg
pushf
jns
mov
popa
or
test
sub
push
sub
je
or
pop
dec
push
cld
sar
aad
jl
mov
icebp
(bad)
div
mov
fsub
add
outs
pop
add
cdq
das
les
dec
jb
cmp
out
daa
jg
nop
ret
mov
(bad)
test
add
cmp
pop
clc
fcmovnbe
test
push
inc
stos
loop
inc
xlat
dec
xor
fist
stc
inc
idiv
shl
ret
mov
loope
(bad)
mov
mov
fs
retf
push
sbb
sar
repz
test
pop
pop
cmp
loop
adc
push
xchg
test
shl
rol
mul
rcr
dec
jb
mov
loopne
mov
cmp
shl
mov
lds
inc
sub
mov
xchg
out
nop
neg
inc
cmps
sub
xor
cmp
data16
pop
sbb
loope
jno
inc
push
sub
jae
jo
arpl
nop
jbe
sbb
not
xchg
outs
bound
(bad)
xor
dec
jb
in
and
inc
or
je
sbb
ins
push
mov
inc
push
mov
shr
repnz
push
dec
imul
ficomp
jbe
and
jns
push
test
cmps
jmp
mov
clc
mov
jmp
(bad)
sub
test
sar
cli
inc
sub
dec
out
adc
loop
push
add
cli
xchg
jmp
jmp
enter
jmp
pusha
loope
pop
and
or
bound
stos
and
jle
mov
dec
push
jae
dec
sub
mov
gs
out
adc
mov
call
(bad)
popa
cmp
sbb
mov
je
mov
fld
dec
cdq
push
aam
pop
fimul
pop
call
test
in
das
mov
fstp
(bad)
jmp
psrld
call
int
pmaxub
inc
dec
pop
mov
aam
clc
(bad)
cvttps2pi
imul
scas
shl
fwait
sbb
in
xor
push
loop
or
je
adc
stos
xor
popw
or
adc
inc
pop
fs
dec
js
sub
ins
mov
(bad)
jb
out
mov
in
xchg
pop
xor
mov
jl
rcr
cmps
jb
jns
outs
cli
push
sbb
jne
push
adc
mov
push
fdiv
xor
push
adc
retf
iret
cmc
push
std
jp
mov
fisubr
ja
(bad)
leave
cdq
(bad)
and
js
push
jle
ins
stos
inc
adc
sbb
and
loop
sub
push
cwde
iret
das
aaa
out
fdiv
fs
mov
retf
ja
jns
(bad)
aam
mov
rcl
hlt
pop
hlt
test
xchg
iret
or
shl
aas
clc
sbb
call
mov
pop
mov
int
shr
into
jp
je
cmps
mov
jb
lea
mov
rcr
out
adc
jge
or
xor
push
push
xor
cmp
je
xchg
clc
sub
push
ins
mov
into
stos
ja
popa
adc
jle
mov
mov
fwait
jns
sub
and
sar
aam
push
(bad)
push
jecxz
in
pop
std
sti
cmp
mov
mov
adc
jae
cmps
(bad)
ins
fs
jnp
je
cmps
cmp
add
and
retf
rol
leave
(bad)
ins
stos
sahf
ffree
sar
inc
mov
je
and
xor
mov
inc
adc
mov
add
out
std
cwde
cmp
fdivr
mov
mov
sar
fdiv
xchg
iret
adc
jp
sbb
(bad)
pop
nop
stos
div
cmp
mov
daa
repnz
iret
int3
fnstsw
pop
shl
das
sub
mov
test
fsub
xor
push
(bad)
push
jne
stos
sahf
iret
xor
cmp
cmp
and
fidivr
shl
out
ret
aaa
xor
rcl
fs
xchg
daa
cmp
fcomp
(bad)
fldcw
les
rcl
jle
fild
repnz
iret
adc
and
sbb
sbb
clc
stos
or
int
outs
mov
stos
dec
es
fnstsw
pop
mov
jp
inc
fcmovne
fs
sub
and
mov
std
les
fnstcw
xchg
cwde
iret
das
aaa
ja
dec
push
int
fs
add
(bad)
test
fwait
seto
xchg
xchg
shr
movs
jmp
test
mov
jmp
ins
call
clc
add
in
jmp
in
inc
pop
das
je
pop
mov
lahf
mov
cmc
mov
inc
int
dec
or
adc
xchg
aad
jle
es
mov
rcr
or
pop
clc
sub
sub
and
out
jg
aas
sub
dec
sti
push
loopne
jb
cs
aam
fild
test
popf
mov
xor
sbb
shl
dec
nop
add
jmp
data16
enter
loope
dec
add
mov
and
lock
push
lds
push
mov
enter
dec
or
push
imul
inc
jmp
adc
lahf
xor
jmp
fdiv
mov
(bad)
mov
sti
js
sar
mov
int
not
xchg
or
out
lock
xchg
mov
(bad)
mov
sar
loope
dec
jmp
xor
or
xor
leave
loopne
pop
mov
mov
je
je
jmp
les
sub
cmc
sub
dec
or
dec
mov
xor
repz
jmp
push
jne
xchg
cmp
cmps
ds
and
in
sub
neg
gs
test
jge
stc
stos
mov
frstor
push
bound
pop
xlat
test
outs
dec
lods
mov
xor
cmp
js
cdq
int3
(bad)
dec
mov
xchg
lahf
mov
sbb
xchg
ds
call
jmp
rol
pushf
ret
scas
addr16
jecxz
jmp
retf
xor
(bad)
imul
jno
and
out
imul
into
or
lds
lods
cmp
pop
pop
repz
mov
stc
jns
mov
mov
cmp
int
dec
mov
fldenv
stc
lea
mov
or
cmp
jecxz
xchg
addr16
mov
xchg
dec
xor
mov
mov
stos
enter
xchg
in
cli
cmc
bound
cmp
ror
mov
xchg
pop
fsubr
lock
xchg
dec
cmp
mov
and
inc
xchg
mov
push
mov
dec
inc
ins
not
xchg
mov
mov
imul
sbb
in
jmp
lods
sbb
cmc
in
xchg
xor
and
(bad)
mov
movs
sub
call
out
hlt
inc
(bad)
pop
je
mov
mov
fst
cmp
cli
sub
rol
aas
scas
jg
in
pop
push
ins
xchg
stc
lahf
jno
mov
and
idiv
adc
mov
and
jbe
cmp
dec
fiadd
fs
mov
mov
lea
repz
and
ret
(bad)
hlt
mov
mov
xchg
adc
inc
pop
pushf
cwde
sub
mov
retf
rcr
into
sub
or
fadd
xchg
gs
and
jo
jmp
adc
cs
xchg
xor
nop
fadd
jns
dec
sti
mov
pop
out
call
adc
sbb
cli
pushf
fwait
sub
cs
test
scas
dec
call
sbb
dec
adc
test
xchg
cmc
dec
mov
mov
inc
aam
out
mov
inc
mov
pop
fst
mov
cmp
leave
dec
in
sub
jo
mov
cwde
in
daa
pop
ret
nop
(bad)
pushf
cmps
call
div
fwait
jno
dec
popf
sar
add
sar
mov
xchg
mov
dec
inc
jge
loop
cdq
aam
xchg
mov
sub
mov
shl
arpl
push
push
pop
dec
xor
pop
dec
mov
push
adc
mov
mov
int
shl
aaa
inc
(bad)
or
ret
shl
cmp
jbe
cmp
shl
fwait
pop
ficomp
mov
or
mov
ins
dec
cmp
push
adc
fwait
sub
mov
dec
cmp
or
xor
sti
mov
stos
aad
shl
shl
call
ss
push
xchg
xchg
push
inc
mov
in
mov
(bad)
test
lods
mov
mov
ret
popf
(bad)
scas
iret
pop
inc
fistp
mov
(bad)
cld
dec
ret
ins
rcr
in
sti
lock
xchg
xchg
adc
jae
and
cli
shr
or
mov
retf
mov
cmp
loop
call
mov
xchg
jmp
cmp
call
inc
leave
xchg
push
test
movs
repz
fwait
call
call
cmps
out
stos
ins
mov
jne
lds
idiv
cld
aad
xor
jo
xchg
push
xor
jns
mov
jp
inc
repnz
fwait
xchg
iret
repz
inc
inc
pop
fdivp
jno
aaa
jno
and
dec
dec
bound
lods
mov
nop
cld
xchg
sub
out
out
in
inc
mov
and
outs
retf
jecxz
fcmovnu
jb
pushf
mov
pop
jp
jg
xor
sub
dec
inc
aaa
and
xchg
jmp
fist
jne
adc
mov
and
mov
div
sub
inc
jp
push
(bad)
jnp
jns
rcr
add
fcomi
adc
icebp
outs
add
mov
adc
out
mov
sub
inc
cmps
jecxz
outs
mov
pop
in
push
pop
pop
cmp
inc
mov
pop
mov
fst
xor
or
and
(bad)
mov
leave
stc
jge
mov
arpl
dec
je
jae
lds
xlat
jg
cmp
pop
cmp
add
lahf
fidivr
addr16
cs
imul
push
pop
aam
pop
loop
out
xchg
neg
in
xor
push
sahf
hlt
inc
in
mov
cli
in
sub
dec
sar
mov
ror
pusha
call
inc
enter
jns
(bad)
outs
pop
cli
int
stos
sbb
div
adc
push
sahf
hlt
imul
sti
(bad)
sbb
(bad)
adc
bound
movs
cmp
inc
mov
fidivr
jmp
push
out
pop
xor
cmp
mov
xchg
mov
mov
xchg
fsub
stos
sar
xor
lahf
call
adc
cmp
xchg
mov
pop
lahf
call
xchg
ins
lock
clc
or
mov
pop
bound
loopne
(bad)
inc
dec
mov
and
mov
nop
mov
outs
(bad)
retf
(bad)
and
in
push
xchg
loopne
mov
ss
das
xor
int
mov
fiadd
sahf
cmps
mov
cmp
add
adc
out
(bad)
pop
test
test
xor
dec
mov
in
test
out
jns
imul
mov
out
mov
cmpxchg
ret
adc
xchg
mov
jle
sbb
push
sub
sbb
es
cmp
pop
iret
in
repz
loop
mov
mul
or
inc
outs
leave
mov
int
gs
ins
dec
es
add
clc
cmp
std
mov
(bad)
in
stos
cwde
dec
popf
adc
in
jmp
std
enter
or
xchg
xor
xchg
jle
sahf
mov
dec
pusha
clc
test
outs
stc
pushf
cld
xor
sub
fidiv
stos
and
sub
mov
es
or
into
(bad)
pop
test
sbb
add
adc
mul
pop
jmp
hlt
scas
in
push
lods
je
mov
add
fldcw
int3
(bad)
aam
add
popf
or
mov
imul
mov
not
xor
ins
rcl
cmps
cmp
dec
retf
imul
cmp
stc
mov
dec
iret
jp
mov
sub
jno
repnz
push
mov
sti
js
jmp
cmps
xchg
cmp
(bad)
in
mov
outs
dec
gs
ins
xor
adc
int
out
jecxz
xchg
fmulp
test
and
jge
inc
arpl
mov
jnp
out
bound
fsubr
arpl
inc
inc
(bad)
jbe
call
dec
sub
pop
and
mov
out
mov
pop
adc
adc
or
scas
mov
xchg
jns
mov
iret
jge
add
pushf
sub
xlat
xor
dec
repnz
cmp
loope
movs
jb
adc
mov
mov
out
and
imul
aaa
jbe
lock
loope
loop
jmp
int
in
neg
mov
push
pushf
jg
pushf
mov
mov
and
mov
mov
repz
or
mov
mov
(bad)
push
lahf
cwde
lahf
mov
sbb
pop
and
jb
sbb
ins
mov
mov
dec
retf
xchg
mov
(bad)
call
inc
adc
ss
gs
icebp
and
pop
jnp
jno
pop
aas
cmp
sub
js
push
stos
dec
out
sub
iret
mov
jp
add
cmp
pop
cld
loop
gs
fsub
add
movs
lods
mov
ins
push
pusha
leave
mov
inc
and
pusha
mov
leave
xor
pop
out
js
mov
fimul
mov
popa
std
sbb
push
shr
imul
pop
mul
inc
push
popf
push
cmps
push
and
cmp
mov
or
rcr
repnz
fucomip
mov
sub
and
pop
add
aaa
cmp
mov
cmp
sbb
push
and
push
inc
stos
add
sub
sar
inc
mov
jl
jns
mov
jns
dec
(bad)
in
(bad)
jmp
push
mov
xchg
dec
call
(bad)
mov
fidiv
sub
aam
pop
push
ja
jge
std
shl
xlat
jmp
inc
cli
ins
pop
stos
mov
cmp
mov
cdq
jo
inc
inc
retf
jg
jg
cmc
ds
(bad)
cmp
mov
sub
imul
adc
aaa
mov
jns
dec
iret
fwait
jno
or
test
loopne
daa
mov
shr
or
sti
cmps
in
cmc
pop
int
gs
and
inc
call
repnz
jmp
aaa
xchg
xor
jmp
repz
mov
hlt
add
(bad)
stos
pop
mov
xchg
retf
cmp
mov
lods
lock
into
cmps
movs
xchg
adc
push
pop
loope
xor
push
int
enter
clc
std
cmp
xor
push
(bad)
pop
or
jbe
rcr
adc
jne
xchg
sti
sbb
jmp
jno
(bad)
aam
adc
test
push
sub
pop
in
clc
cvtdq2ps
pop
shl
pusha
fcom
outs
repz
ret
and
xor
mov
fimul
jle
mov
mov
ins
push
jmp
xor
push
adc
xchg
js
pop
pop
(bad)
sti
fistp
mov
rcl
fdivr
add
push
sahf
loope
enter
push
sbb
xchg
out
imul
bound
lds
add
dec
jne
lods
sub
sbb
push
shr
mov
mov
adc
cli
xchg
adc
in
pop
(bad)
and
mov
les
pop
int3
add
adc
and
mov
rol
retf
xchg
loopne
out
jbe
ins
sub
sub
pop
sub
arpl
jne
xchg
ds
loop
or
sahf
mov
inc
xchg
out
arpl
scas
int3
sahf
ret
out
fsub
mov
rcl
cld
gs
or
aaa
call
out
in
cmp
cmp
or
jecxz
unpcklps
les
sbb
adc
mul
in
retf
rcl
iret
mov
std
xor
adc
daa
or
clc
mov
mov
in
mov
pop
aam
in
adc
addr16
pop
xor
in
call
aaa
jecxz
retf
inc
xchg
out
out
clc
or
mov
repnz
(bad)
cdq
rcl
test
inc
dec
mov
fwait
sbb
pop
cld
clc
xor
(bad)
out
jmp
ins
push
add
cdq
je
mov
mov
xor
fwait
cmp
shr
hlt
push
xchg
mov
jmp
xchg
(bad)
and
adc
push
in
mov
pop
loop
stc
jp
fist
push
test
mov
cmp
mov
(bad)
pop
test
adc
pop
loop
dec
push
mov
xchg
repnz
xchg
cmp
aad
jmp
mov
mov
sub
xchg
loop
ss
xor
mov
popf
add
test
pop
jbe
retf
mov
gs
pop
(bad)
out
jne
mov
adc
push
icebp
inc
or
shr
jns
push
cs
loope
sub
push
push
(bad)
movups
push
or
add
xchg
cmp
adc
or
push
scas
inc
imul
pop
pusha
mov
stc
test
jle
and
out
push
pop
and
gs
sub
jmp
mov
retf
into
lock
mov
iret
mov
sub
loope
loope
out
bound
rcl
cwde
int3
push
call
push
mov
call
jmp
xchg
push
and
sbb
xchg
imul
push
sahf
sub
das
sub
xor
inc
nop
nop
shl
int3
rep
hlt
into
mov
adc
sti
in
test
xchg
mov
add
or
mov
out
jno
je
iret
cmp
mov
lods
sbb
cwde
push
push
(bad)
stc
sub
inc
ret
xchg
dec
lods
jbe
cmps
jnp
jb
push
cmp
inc
(bad)
movs
inc
ja
lods
or
retf
mov
add
mov
pop
jnp
xor
mov
sbb
and
mov
pushf
add
loop
js
hlt
hlt
addr16
aad
stc
movs
test
xchg
shl
or
js
jg
mov
and
rcr
push
fmul
fld
cmps
xchg
fisub
cli
scas
jp
(bad)
test
mov
xor
adc
inc
cmp
cmp
out
stos
std
push
call
pop
add
ds
cmc
xchg
inc
outs
mov
jmp
pusha
out
movs
cli
jmp
out
mov
fld
or
aad
add
les
jb
jl
pop
aad
push
in
add
dec
mul
jmp
mov
out
and
rcr
xlat
arpl
test
sbb
sub
movs
shl
cmp
cwde
shl
add
(bad)
cmps
mov
jmp
cwde
fiadd
sti
or
sahf
mov
pop
push
mov
es
and
push
stos
test
fnstenv
cmp
loopne
popa
fnstcw
dec
adc
mov
nop
inc
mov
stos
js
mov
call
lods
adc
adc
pop
not
stc
repz
pop
jle
fisttp
pop
cmc
push
test
pslld
in
jnp
fcmovb
xor
lds
jmp
aad
xor
in
jnp
xlat
clc
xchg
jle
cmp
ins
in
xchg
cmp
xchg
xor
(bad)
sahf
xchg
add
xlat
mov
ins
pop
xchg
stc
clc
and
jge
outs
mov
push
add
arpl
pop
retf
mov
sub
out
sahf
enter
dec
ins
leave
push
hlt
jl
cli
stc
xor
mov
jb
rcl
add
(bad)
lods
push
jno
mov
ins
lods
test
sbb
out
outs
int3
jge
cmp
cmp
ret
fstp
movs
ret
iret
xchg
leave
push
iret
cmp
and
into
scas
mov
outs
jge
cmp
xchg
aad
fisttp
add
(bad)
jmp
sbb
js
jne
and
sti
jle
test
fldenv
in
xchg
cmc
test
jp
cmp
in
sbb
jecxz
loop
movs
(bad)
das
movs
es
adc
inc
ins
lds
sahf
sti
mov
pop
fs
popa
loopne
jge
hlt
add
cmc
stc
xchg
cmps
out
int3
mov
icebp
popa
sub
test
mov
and
mov
push
shl
(bad)
out
enter
sub
repz
mov
stc
outs
loop
sbb
mov
pop
add
repz
loope
mov
cmp
mov
cdq
(bad)
push
dec
clc
mov
int3
(bad)
push
into
jp
or
(bad)
mov
std
cmps
test
dec
inc
cdq
jo
out
imul
add
fs
aam
adc
outs
xchg
lds
fcom
push
adc
data16
jmp
neg
cmps
jmp
loope
out
xlat
pop
in
cmp
dec
out
outs
enter
aam
in
sub
jg
aad
(bad)
mov
icebp
in
faddp
clc
dec
gs
fsubr
cmps
imul
(bad)
les
push
idiv
cmps
jmp
adc
leave
bound
cld
add
in
fisubr
jmp
pop
(bad)
adc
in
sub
(bad)
fst
mov
cmc
scas
movs
es
in
dec
or
or
pop
retf
scas
clc
shl
leave
xor
add
sub
cdq
nop
sub
jle
cld
repz
xchg
out
scas
call
jns
cmps
or
mov
ins
in
jmp
f2xm1
call
mov
out
or
sbb
cmp
(bad)
cmp
out
cmp
out
mov
lock
pop
pop
dec
add
daa
cld
jmp
aaa
dec
mov
inc
ins
sbb
and
movs
xchg
repnz
(bad)
cdq
mov
add
loop
fistp
cwde
mov
es
mov
stos
and
jmp
rcl
repz
test
pop
jno
(bad)
not
enter
int
test
xchg
inc
adc
(bad)
in
mov
sbb
mov
sbb
(bad)
out
and
pop
rcr
cmc
out
mov
out
push
lds
xchg
xchg
outs
shr
in
push
and
mov
faddp
cmps
sub
pop
xor
rcl
(bad)
rcr
fcmovnu
outs
xor
leave
cmp
sahf
out
xchg
xor
ror
lahf
push
dec
in
stos
adc
pop
push
call
sub
sub
pop
xchg
add
int3
or
adc
jae
or
or
scas
loope
or
sti
xchg
hlt
out
iret
shl
in
add
mov
(bad)
mov
pop
xor
sbb
adc
dec
cmps
cmp
icebp
cs
adc
or
cmp
cmp
and
cmps
in
pop
xchg
adc
aam
adc
mov
xchg
(bad)
jge
xchg
xor
push
(bad)
and
pop
xor
cmp
dec
jns
cmc
cmps
popa
ret
test
mov
lock
jno
jl
in
je
mov
outs
push
icebp
rcr
fldl2t
cmp
mov
jle
in
sub
cli
cmc
aad
dec
ret
out
dec
xor
xchg
repnz
std
dec
call
mov
icebp
je
xor
data16
sbb
shr
jnp
pop
mov
pop
mov
xchg
sub
idiv
jne
sbb
sar
pop
sbb
xor
loop
jmp
xor
ins
sub
fidiv
lods
jmp
sub
and
jge
popa
mov
int
popf
cmc
stc
imul
lods
cs
out
jle
fisttp
repz
mul
test
sbb
pop
inc
sti
jge
sti
(bad)
xchg
loop
cwde
out
stos
mov
jecxz
mov
loope
or
fndisi(8087
jle
leave
jb
jecxz
mov
and
pushf
lods
cmc
and
aas
dec
sti
push
lods
push
in
(bad)
stc
in
fnstsw
cmp
xchg
shl
push
jmp
mov
adc
retf
clc
jg
cmp
lock
add
pop
mov
cmc
dec
sar
imul
push
in
mov
xor
inc
adc
jg
into
mov
pushf
jno
push
mov
mov
add
fs
jbe
retf
fnstcw
jp
mov
cmp
mov
sub
fdivrp
call
shr
in
aaa
cmps
or
pop
cmp
dec
ret
sbb
retf
xchg
mov
in
retf
repz
rcr
add
mov
xchg
lds
out
push
inc
pushaw
jo
jl
nop
jmp
int3
outs
sbb
icebp
adc
dec
add
dec
scas
mov
test
idiv
out
mov
bound
loopne
or
sar
jne
cmc
lahf
and
in
ret
out
nop
loop
aam
in
jl
lock
sti
add
mov
repnz
ror
arpl
clc
std
push
mov
mov
mov
int
sub
pop
arpl
into
(bad)
dec
sbb
mov
sahf
iret
inc
push
outs
mov
mov
sar
mov
(bad)
enter
inc
(bad)
sub
mov
in
cmp
hlt
lahf
or
mov
pop
(bad)
pop
pop
ja
mov
jecxz
int
jae
push
fisub
scas
in
or
jo
xchg
scas
lock
fcomp
data16
test
mov
(bad)
adc
xor
lock
mov
sahf
sub
in
jp
pushf
inc
push
mov
ja
(bad)
push
popf
and
xlat
shr
je
cmp
add
stc
mov
jnp
mov
lahf
mov
test
push
imul
fcom
mov
ror
push
and
ins
out
dec
xchg
adc
std
sbb
aas
cmp
xor
jge
xchg
sub
jmp
xor
in
mov
inc
jmp
test
xchg
lds
fmul
cmp
xchg
adc
add
adc
ret
pushf
sub
loop
(bad)
jle
mov
or
cdq
mov
mov
js
shr
jae
test
dec
fwait
sub
rcr
pop
das
cmc
call
or
dec
(bad)
sbb
jecxz
dec
sbb
and
push
cmps
mov
pop
stc
inc
mov
jbe
int3
xchg
sahf
or
inc
mov
mov
xchg
push
mov
sbb
jmp
sbb
ret
sub
(bad)
mov
data16
mov
iret
sahf
pop
ror
xor
jmp
push
fs
xchg
or
mov
pop
jae
lods
xchg
fild
(bad)
in
mov
pop
xor
inc
cmps
rcr
cmp
jbe
repnz
push
out
inc
cli
jne
jno
jmp
addr16
in
mov
inc
stos
adc
or
test
push
ins
fs
popa
sahf
ins
cmps
(bad)
xor
mov
xlat
mov
mov
mov
pop
sbb
fldcw
or
xchg
(bad)
cmp
lahf
and
iret
sub
inc
inc
dec
inc
pushf
imul
(bad)
and
cmps
or
(bad)
retf
sahf
aaa
push
outs
sbb
iret
cmp
cmp
mov
sub
jle
fimul
push
dec
shr
dec
bound
jmp
xchg
push
js
not
pop
les
popf
ins
outs
mov
mov
sbb
ja
add
jl
retf
stc
mov
fwait
jmp
in
mov
jecxz
jnp
aad
cmp
xor
cmp
sbb
mov
test
dec
add
js
pop
fst
pop
or
les
icebp
add
enter
fisttp
lahf
leave
xor
jno
jne
repnz
or
outs
(bad)
mov
scas
mov
scas
cmp
shl
mov
mov
xchg
data16
cmps
fsub
clc
pop
cmp
sar
xor
leave
dec
add
popa
je
mov
icebp
and
lods
fisttp
mov
push
push
dec
sbb
movs
xchg
rol
out
fisub
adc
shl
or
shl
fs
ins
pop
bound
sub
pop
mov
fidiv
lahf
fdiv
pushf
pop
xchg
in
push
sbb
mov
sub
pop
mov
or
scas
lock
cwde
stos
lods
jns
leave
jecxz
or
stc
jmp
(bad)
das
xchg
rcl
in
dec
aam
iret
test
repnz
mov
in
lea
sbb
aam
aaa
rcl
push
aad
stc
loopne
and
cmp
(bad)
imul
xchg
jmp
pop
outs
cli
fwait
add
dec
mov
(bad)
bound
jmp
pusha
ror
push
dec
(bad)
jmp
jl
add
loope
mov
std
dec
push
div
xchg
jp
jae
pop
mov
mov
mov
(bad)
loop
std
sub
lahf
xor
aad
fdivr
sar
lods
shr
and
idiv
test
loopne
std
retf
movs
push
inc
in
xor
inc
mov
mov
aaa
mov
rcr
in
sti
push
pushf
ret
iret
mov
push
mov
fsub
pop
in
test
xchg
push
mov
add
or
arpl
loop
bnd
in
mov
mov
dec
mov
out
ret
add
out
aad
movs
in
mov
(bad)
movs
call
aad
cmp
xchg
adc
jne
in
cli
sahf
sti
fcom
adc
in
jmp
repnz
add
shl
push
push
jae
bound
jmp
sbb
retf
test
repz
fmul
stos
pushf
xadd
push
cmovge
out
out
test
rcl
popa
cmc
xor
ins
retf
je
xor
shr
adc
adc
or
inc
clc
add
ret
mul
inc
jg
lods
sbb
sbb
and
dec
popa
call
in
shl
mov
je
mov
aaa
movs
(bad)
xchg
xlat
sbb
shl
add
lods
iret
in
sbb
pop
ins
sub
aad
push
call
movs
add
pop
stc
xor
sbb
xchg
in
cmc
or
adc
out
push
sbb
call
call
fisttp
or
pop
or
outs
inc
test
and
sahf
jmp
les
ror
gs
lahf
jp
clc
push
mov
xchg
xchg
xchg
in
push
mov
mov
outs
adc
mov
pop
mov
sar
cmps
int
sbb
sub
mov
sbb
pop
sbb
dec
in
stos
movs
idiv
mov
mov
stc
std
jge
sub
ret
xor
shr
jecxz
iret
loopne
inc
retf
mov
ror
daa
test
inc
mov
cmps
pusha
test
call
movs
ja
retf
lds
fdivr
into
cld
repnz
ins
jmp
in
in
mov
mov
adc
and
xchg
loopne
psubb
sahf
jge
sahf
cmps
loope
(bad)
ds
sbb
sbb
iret
sti
sub
test
les
mov
pushf
xchg
mov
mov
ret
push
(bad)
aas
rcl
cmp
mov
mov
push
hlt
loope
push
aas
pusha
lods
jmp
inc
adc
lds
out
cmc
in
retf
xor
pop
inc
(bad)
stc
out
fadd
(bad)
ins
hlt
jecxz
inc
mov
xor
lahf
xchg
shl
popf
call
clc
shl
cmp
mov
mov
pop
sbb
loop
jmp
add
pop
jbe
cdq
std
fistp
test
sub
lahf
mov
push
add
fsubrp
imul
bound
jns
mov
xor
mov
(bad)
jne
xchg
cli
gs
cmp
sbb
dec
push
call
inc
mov
mov
hlt
jo
xor
mov
out
inc
cmp
jp
out
ins
in
loope
cmp
adc
mov
stos
and
jl
xchg
enter
lods
jge
push
(bad)
pop
mov
fisubr
inc
mov
pop
jecxz
mul
cmps
push
fsubr
clc
(bad)
rol
popa
in
aaa
(bad)
outs
lock
out
jp
inc
loop
jg
jmp
outs
pop
sbb
fild
test
dec
bound
mov
fidiv
jns
scas
and
fcomp
and
xchg
test
pop
loop
or
clc
push
(bad)
prefetch
or
pop
fs
in
xchg
xchg
pop
mov
sar
cli
fwait
and
or
idiv
jo
ss
out
sahf
xchg
int
shl
sbb
(bad)
jmp
push
fdivr
lds
ret
dec
xor
les
(bad)
loop
gs
mov
cs
and
sub
fwait
aam
retf
scas
aam
jle
adc
jp
xchg
aam
pop
mov
call
inc
mov
scas
add
jno
lea
sbb
and
add
pushf
add
lahf
and
jmp
dec
fmul
or
mov
(bad)
xchg
add
add
imul
shr
test
sbb
lock
inc
imul
xchg
inc
bound
in
repz
and
cwde
cmps
push
fdiv
hlt
imul
fmul
add
add
aaa
mov
mov
inc
xor
sub
arpl
cmp
imul
push
inc
stc
enter
or
jae
shr
aad
push
push
mov
mov
and
ja
imul
ret
int
add
repnz
xchg
jmp
ss
leave
mov
sbb
pop
mov
sbb
mov
fadd
xchg
sub
add
in
xchg
test
push
mov
sbb
mov
or
fbstp
stos
fcomp
in
mov
or
test
pop
retf
fbstp
in
or
add
push
xor
stos
fdecstp
cs
ss
in
inc
push
pop
idiv
test
inc
mov
add
sbb
cmps
ss
in
ret
outs
jg
aas
dec
add
repz
icebp
push
fisub
and
daa
(bad)
dec
inc
jmp
lds
movs
sbb
jno
push
std
lock
rcl
retf
sbb
aas
in
jmp
in
mov
test
test
and
mov
or
xor
rcl
push
fisttp
mov
sahf
repz
aad
mov
addr16
leave
jbe
(bad)
lea
(bad)
xchg
test
retf
(bad)
ja
mov
dec
not
call
fwait
out
shl
xchg
jmp
xchg
cmp
mov
bound
sbb
xor
mov
and
inc
push
imul
xchg
mov
xchg
(bad)
dec
ins
test
repz
xchg
(bad)
adc
mov
ins
nop
bound
sub
push
sti
cdq
adc
jecxz
(bad)
movs
hlt
jb
mov
mov
inc
std
mov
out
rcr
pop
adc
mov
ficom
lods
jl
pop
sub
and
popa
retf
pop
pop
lock
xor
dec
pop
push
rcr
leave
jg
dec
lds
in
mov
(bad)
mov
pop
dec
xchg
outs
jmp
cmp
enter
jecxz
mov
mov
pop
cli
mov
ret
movs
mov
rcl
mov
mov
mov
in
out
int
mov
push
jl
inc
mov
out
push
pop
push
out
test
xchg
push
mov
lea
cld
cmp
pop
or
ret
jo
pushf
push
gs
xchg
into
sahf
ret
pop
jne
shr
pushf
sahf
out
aaa
push
jg
loope
test
das
xchg
arpl
pusha
(bad)
jmp
adc
retf
mov
jl
jg
hlt
inc
mov
cs
fsin
xor
mov
xchg
lahf
adc
pop
pop
mov
std
ja
pop
cmp
in
fxtract
rcl
sbb
push
in
iret
fcmovb
mov
sub
lea
int3
lods
jge
pop
int
xchg
out
data16
out
cmp
jp
clc
and
mov
ins
push
adc
mov
sub
push
or
xor
outs
jge
inc
mov
mov
out
gs
pop
lods
ins
or
mov
in
jecxz
in
mov
push
xlat
mov
push
repz
cmc
add
dec
sbb
mov
xor
in
cs
push
mov
jmp
cld
mov
mov
loopne
jmp
mov
mov
into
mov
outs
stos
xchg
xchg
jmp
(bad)
int
repnz
lock
test
cmp
xchg
mov
call
outs
jmp
cli
int3
jae
jmp
mov
fld
sti
sbb
repnz
mov
adc
cdq
loopne
and
fistp
xor
mov
jno
gs
std
mov
sub
retf
cmps
xlat
sti
pop
aam
(bad)
dec
mov
ins
mov
ss
repnz
jno
leave
call
inc
xchg
cmp
mov
into
fdiv
sbb
sahf
sbb
lahf
lea
push
sub
jns
jmp
xchg
aaa
jle
mov
mov
push
add
addr16
push
or
jl
xchg
jecxz
xchg
cmp
test
fs
lds
sbb
rep
call
pop
std
sbb
adc
sbb
dec
push
xchg
(bad)
mov
pop
jno
mov
add
(bad)
jmp
mul
leave
int3
loopne
movs
jecxz
(bad)
in
movs
stos
cmps
mov
ror
imul
push
mov
or
loope
out
inc
(bad)
das
(bad)
std
int
(bad)
icebp
pop
adc
mov
shl
inc
add
ja
cmp
mov
(bad)
leave
mov
enter
(bad)
mov
push
fiadd
or
sti
sub
sti
cdq
sar
jecxz
repnz
nop
sub
mov
sbb
stos
pop
daa
sti
mov
or
jbe
xor
mov
fmul
jo
and
aad
xchg
(bad)
aam
addr16
cwde
cmp
push
int
(bad)
repnz
neg
mov
jmp
in
cs
loope
push
mov
jecxz
sub
pop
es
xor
movs
adc
sbb
pusha
sbb
fisubr
imul
shr
pop
pop
adc
(bad)
in
in
loop
push
cmp
sbb
sub
mov
add
lock
clc
test
mov
lock
ins
sub
cmp
ja
and
jne
adc
(bad)
cmps
int
daa
nop
mov
mov
outs
pop
stc
das
dec
or
mov
loope
jl
outs
fistp
and
icebp
fild
imul
and
dec
rol
mov
pop
add
(bad)
or
mov
(bad)
cmp
jmp
fs
sti
lock
sti
pop
sbb
loop
adc
lock
ins
jge
loop
jge
xchg
cmps
cli
imul
lds
mov
cmp
cmps
fstp
cs
jmp
repnz
mov
cmc
pop
jb
sbb
sahf
call
repz
loope
repnz
idiv
retf
std
sbb
jno
sub
inc
mov
fidivr
cdq
das
jg
mov
push
push
fisubr
outs
pop
rsm
sbb
xor
lods
mov
push
stos
clc
iret
test
sbb
push
push
fld
cli
(bad)
jmp
sub
leave
fnsave
rcr
std
cmps
fstp
in
jl
pop
cmps
stc
dec
loopne
(bad)
jge
cwde
mov
out
pop
xchg
pusha
fld
jmp
inc
xor
int3
cli
xlat
mov
jmp
mov
stos
imul
leave
repnz
and
mov
or
push
mov
(bad)
pushf
mov
sub
loop
fcomi
popf
jl
clc
mov
std
dec
push
jge
ds
pushf
retf
sahf
ret
rol
scas
or
mov
xchg
cmp
(bad)
outs
leave
hlt
in
int3
outs
push
aad
shl
clc
cli
pop
xchg
sub
out
sti
scas
repz
mov
sbb
push
jg
iret
lock
call
inc
icebp
shr
jge
push
sar
js
sahf
xlat
xchg
shl
fdivr
pushf
pop
and
je
dec
out
push
pop
dec
sub
je
dec
ficom
jp
and
aaa
lods
cmp
dec
pop
outs
sbb
mov
mov
pop
cmp
lock
lock
sub
(bad)
idiv
mov
add
imul
mov
lock
add
int3
ds
mov
cmp
add
cmp
in
or
xchg
not
int
retf
inc
dec
call
mov
call
sahf
inc
dec
sti
aaa
add
or
mov
in
sahf
(bad)
int3
test
push
dec
adc
test
dec
sub
dec
pop
jge
std
sbb
call
pop
or
sbb
sar
scas
rol
adc
in
in
mov
pop
push
jecxz
add
and
and
sub
jg
test
pop
sar
retf
xor
xlat
jae
ficomp
ja
jmp
mov
and
sub
cmp
aad
sbb
out
fmul
mov
aad
mov
dec
cmps
cmc
fdiv
adc
fdivp
mov
hlt
(bad)
inc
ficomp
ja
pop
sub
push
js
shl
shl
ffree
cmps
dec
out
fs
fdivp
jmp
lock
mov
mov
adc
pop
test
addr16
jl
(bad)
aam
les
inc
ins
dec
movs
daa
fstp
(bad)
not
gs
dec
cwde
shl
ins
lds
imul
cmp
fdivp
call
addr16
ror
ret
inc
dec
js
mov
scas
movs
pop
dec
jmp
or
hlt
enter
ret
sub
movs
cmp
(bad)
jmp
jns
sub
jg
fdivr
jp
cmps
mov
mov
ret
scas
inc
adc
retf
pop
mov
imul
mov
mov
xchg
fsub
adc
fbld
shl
ret
(bad)
mov
and
bound
div
mov
div
inc
cmovs
sub
push
mov
and
int
outs
imul
iret
jecxz
mov
and
sub
popa
cmp
inc
sti
inc
jns
push
sbb
jb
out
and
push
or
popa
clc
int
repnz
js
dec
fiadd
inc
inc
add
call
rcr
cdq
out
enter
jge
outs
xchg
mov
test
mov
mov
stc
mov
mov
cdq
(bad)
mov
imul
test
je
rol
jg
cli
imul
ret
jmp
test
push
mov
sbb
rcr
and
div
int
cwde
sbb
jbe
in
and
std
imul
mov
add
popa
mov
cmp
jmp
jle
outs
daa
push
lea
repz
loope
mov
sub
mov
into
inc
fwait
jl
xchg
fild
cmp
retf
dec
ret
jbe
les
mov
(bad)
out
out
rol
sub
jbe
retf
(bad)
fdivr
pop
and
and
(bad)
mov
call
pop
cmc
xlat
jmp
fcmovne
je
jg
inc
cmc
loope
(bad)
out
mov
in
jp
mov
mov
bound
test
cmp
movs
lock
adc
out
mov
cs
cmp
fstp
sbb
and
mov
pop
pusha
retf
fbld
(bad)
es
(bad)
(bad)
nop
enter
ja
fild
xchg
arpl
xor
jmp
sub
lds
sar
cmc
xchg
add
mov
mov
cs
xchg
mov
dec
ins
mov
addr16
add
setno
movs
xchg
retf
jge
and
jno
jmp
imul
call
(bad)
cli
repz
or
fstp
(bad)
ja
inc
mov
out
pop
or
ret
out
sub
lock
retf
cmp
ret
jae
popf
cs
mov
jbe
fisubr
xchg
cmc
cs
ss
out
mov
jg
sbb
fimul
mov
fcmovnbe
lods
mov
mov
mov
mov
scas
cmps
push
mul
repz
sub
(bad)
shr
sbb
add
call
pop
sar
xlat
cmps
int3
icebp
jo
aas
and
movs
dec
cmp
xchg
shr
popa
stos
out
jmp
or
jle
xor
(bad)
fild
icebp
mov
clc
inc
inc
push
int3
(bad)
ror
jmp
dec
iret
cmps
push
cli
imul
dec
shl
jp
pop
lods
mov
clc
cdq
out
js
xchg
ins
mov
mov
or
inc
iret
push
das
mov
push
jmp
sub
sahf
adc
cmp
out
stc
call
inc
ja
or
movs
add
leave
sar
jp
and
mov
mov
popf
into
xor
mov
ja
test
mov
lahf
(bad)
fnstsw
cmps
mov
hlt
cmps
outs
push
loope
pop
retf
mov
stos
popa
stc
cs
sbb
or
mov
push
int
jmp
push
movs
movs
mov
cmp
pop
ja
mov
and
lds
mov
stc
inc
loope
cdq
enter
pop
and
in
lods
pop
loopne
movs
mov
es
aam
jbe
dec
push
mov
cmps
push
xor
call
add
jecxz
xchg
mov
retf
ficom
mov
dec
inc
aaa
cli
push
sub
jb
and
shl
mov
ret
shl
call
imul
dec
lods
mov
into
and
fst
pushf
sbb
scas
sub
std
inc
setg
loope
fisubr
jbe
int3
or
loop
inc
xchg
shl
fsub
pusha
ja
mov
repnz
fnstsw
idiv
in
cmp
repnz
sub
stc
dec
mov
jg
call
(bad)
in
inc
in
dec
sti
ret
imul
movs
add
mov
gs
loope
adc
adc
mov
test
int
clc
in
daa
pop
mov
outs
xchg
repnz
iret
or
mov
mov
mov
mov
aaa
mov
iret
inc
aad
out
dec
inc
mov
jle
shl
(bad)
jae
mov
iret
mov
hlt
or
sub
fcomp
sbb
adc
addr16
test
test
xor
cdq
aaa
ins
int3
mov
popf
or
in
jmp
mov
dec
repz
lock
je
(bad)
adc
mov
push
jp
imul
call
inc
scas
mov
mov
fst
inc
xlat
push
in
ret
ja
cli
in
mov
pop
fnsave
adc
outs
add
ret
ret
mov
aad
popa
cmp
repz
or
call
ret
add
movs
(bad)
pop
retf
dec
push
mov
add
jmp
in
enter
adc
scas
adc
mov
(bad)
adc
ins
inc
add
and
rcr
(bad)
xchg
jl
clc
ficom
ins
outs
pop
xlat
mov
inc
loopne
adc
adc
dec
addr16
dec
test
mov
scas
sar
or
call
pop
xor
jae
xor
lock
fwait
dec
(bad)
xlat
jno
into
stos
add
mov
fs
fs
jnp
int3
iret
in
das
pop
push
and
or
(bad)
out
test
push
(bad)
shr
iret
mov
and
(bad)
sub
sub
lock
iret
int
ret
bound
mov
pcmpgtd
rcl
jecxz
xlat
pop
enter
push
push
pop
ror
fld
(bad)
nop
mov
js
mov
mov
(bad)
icebp
xor
imul
lods
push
div
hlt
(bad)
dec
mov
fidiv
inc
les
icebp
std
xor
xlat
cld
add
cmp
cmc
cmp
out
fild
pop
aad
sub
ss
fdiv
ja
sbb
pop
jnp
jle
sbb
rcl
mov
lahf
sbb
and
jl
out
fwait
mov
cmp
pop
cmp
pop
outs
pop
adc
out
loope
aad
jle
push
imul
addr16
mov
outs
cld
rcl
icebp
loop
rcl
mov
repnz
prefetch
or
sub
aad
hlt
stc
aad
ja
call
cdq
mov
mov
movs
xlat
push
(bad)
stos
and
pop
pop
outs
jge
shr
or
cmp
jo
mov
out
fst
jbe
sub
test
jne
xlat
mov
je
jmp
mov
push
xchg
cdq
aas
fbld
imul
mov
add
test
shr
fs
repz
iret
ret
cdq
mov
mov
lock
and
fmul
aad
scas
jecxz
iret
(bad)
iret
jge
cmp
cmc
not
sbb
ret
mov
jg
inc
adc
pop
mov
in
sbb
(bad)
jmp
rcl
in
cmp
jp
aam
xchg
xchg
or
call
inc
mov
sbb
(bad)
out
call
lods
in
mov
mov
adc
out
pop
cmp
stos
aas
jb
add
lods
clc
push
mov
mul
int3
data16
imul
adc
loop
jl
(bad)
neg
test
push
into
fsubr
outs
xchg
ja
imul
jecxz
fistp
(bad)
dec
inc
jne
inc
mov
popf
jg
imul
stos
int
fidiv
iret
lds
xchg
not
and
jmp
jle
sbb
xor
aad
rcr
outs
jnp
(bad)
jb
dec
fdiv
cmp
pusha
retf
cmp
push
in
(bad)
mov
repz
cli
xor
stos
add
mov
inc
stos
ins
mov
ins
ficomp
dec
sub
add
xor
addr16
call
movs
adc
or
mov
lods
outs
mov
sti
cmp
mov
adc
call
lea
adc
sbb
cwde
xchg
mov
retf
je
xor
lea
push
fidivr
ja
pop
out
jno
or
add
(bad)
ror
out
or
pop
popa
jmp
js
enter
out
sub
shl
xor
in
enter
aaa
jnp
xchg
int
jmp
jmp
pop
pop
(bad)
mov
jb
sub
das
cmc
aam
int3
mov
pop
cld
or
push
dec
fcom
mov
sbb
cld
(bad)
cdq
sub
fsub
mov
fnstsw
cld
xor
cli
out
out
jmp
scas
loopne
jno
loop
cs
aas
clc
inc
idiv
rcr
inc
sub
pop
std
xor
iret
mov
outs
adc
stos
push
mov
int3
mov
push
xchg
sub
aaa
addr16
jecxz
imul
inc
mov
xchg
cli
scas
xor
aad
movs
fucomi
add
sbb
test
loope
jmp
add
sub
je
dec
or
test
shr
inc
adc
sub
das
movs
mov
shl
icebp
adc
in
sbb
mov
sar
data16
ror
(bad)
(bad)
enter
mov
pushf
pop
push
mov
fadd
cli
pushf
cmc
loope
test
jge
mov
cmps
cmps
lahf
sub
cli
xlat
retf
sahf
push
cld
scas
fisubr
and
add
loop
out
in
out
push
adc
out
jg
nop
cld
adc
test
push
(bad)
add
fwait
sti
cmp
mov
out
pop
div
sbb
sub
shl
stos
movs
mov
cmp
mov
cmps
and
push
sbb
pop
leave
(bad)
cmp
mov
stos
aam
mov
cld
mov
test
in
jge
mov
jmp
movs
mov
sbb
cwde
imul
push
int
ds
sub
mov
push
ds
cmps
jbe
jmp
inc
mov
mov
push
and
inc
out
or
sub
cmp
sbb
mov
xor
ss
or
sub
repnz
push
mov
xchg
xor
loopne
cmp
cwde
test
aad
icebp
fistp
repz
xchg
mov
dec
pop
or
sbb
adc
mov
jnp
int
push
pop
sub
mov
dec
retf
ins
fwait
inc
fcom
inc
push
push
stos
mov
jmp
sub
add
xor
div
dec
test
rcl
cmc
scas
push
rcr
jae
mov
int
xchg
fadd
lds
or
cmp
fsub
mov
mov
push
mov
repnz
call
adc
sahf
cmps
in
sub
std
pop
push
sbb
or
sbb
jns
cli
sub
retf
jmp
and
push
lock
dec
inc
push
xor
dec
jmp
std
adc
and
hlt
mov
in
jb
dec
push
xchg
xor
fwait
enter
jmp
add
ja
pop
or
call
gs
pushf
clc
outs
aam
mov
repnz
adc
jmp
out
mov
xor
test
paddusw
cmp
dec
test
stos
shr
out
fadd
repz
aad
jmp
shr
lahf
addr16
aaa
xchg
xchg
mov
xchg
jb
sbb
enter
xchg
lock
ja
jmp
test
and
or
mov
lods
(bad)
xlat
repnz
inc
xor
lock
(bad)
mov
ss
mov
loop
jno
lock
sub
lea
pop
push
sahf
xchg
clc
cdq
into
and
rcl
mov
movs
push
fucomi
mov
push
xor
(bad)
shl
sbb
imul
pop
sbb
mov
pusha
ss
test
xchg
or
repnz
or
pop
xchg
(bad)
ror
push
outs
pop
lea
mov
dec
repz
daa
cmps
push
cmc
pop
pop
adc
cmp
mov
push
inc
repz
xor
xor
cdq
popa
dec
lds
sub
fdivr
les
frstor
es
jae
fimul
mov
(bad)
aad
sbb
icebp
add
ins
icebp
lahf
fnstcw
test
repnz
mov
mov
mov
div
fsub
(bad)
jne
call
dec
aam
ja
mov
scas
add
inc
fs
add
movs
out
mov
adc
popa
outs
das
xchg
in
lods
test
test
mov
loopne
iret
and
push
mov
pop
jmp
call
in
in
pop
loope
push
out
xchg
cdq
pop
cs
ror
mov
pop
push
leave
pop
pusha
mov
fsubp
sub
push
and
sbb
scas
cmp
xor
test
add
bextr
lock
and
arpl
cmp
in
nop
or
in
jno
(bad)
lods
add
hlt
cmps
mov
shl
jle
neg
mov
adc
xchg
pusha
bound
pop
add
test
xchg
shl
(bad)
mov
or
mov
xor
sbb
sar
jmp
push
pop
int3
in
popf
out
xchg
xchg
imul
mov
imul
cld
sub
pop
hlt
test
div
into
test
stc
mov
mov
cmp
xchg
jge
bound
cmp
push
mov
dec
test
mov
xchg
mov
pop
sub
inc
xlat
clc
stos
jnp
cmp
sahf
dec
mov
retf
add
jp
fdiv
in
in
adc
jmp
data16
leave
stos
loope
mov
mov
adc
inc
std
shl
mov
mov
aaa
(bad)
in
mov
pop
imul
pop
adc
nop
pop
push
push
adc
sbb
test
push
repz
adc
mov
call
adc
mov
mov
idiv
inc
pop
xor
mov
rcr
jo
dec
hlt
iret
arpl
test
out
push
adc
loop
xchg
xor
seta
mov
jae
mov
shr
mov
lahf
ins
call
jecxz
xchg
cld
neg
mov
fisttp
mov
push
mov
out
fdecstp
jne
stc
mov
inc
pop
popa
jmp
out
jp
scas
fwait
pushf
sub
lods
inc
pop
stos
mov
cmps
repz
mov
xchg
cmps
mov
and
scas
mov
test
cmp
adc
int3
or
jle
neg
(bad)
jno
pushf
aad
sub
or
dec
out
mov
mov
lods
fwait
cmp
mov
dec
fwait
in
xor
loopne
std
aad
sbb
frstor
ret
pop
nop
sub
and
lahf
jg
rol
into
fistp
mov
cs
addr16
pop
jge
cs
pop
inc
ins
and
in
(bad)
mov
mov
cdq
mov
and
sbb
inc
adc
add
inc
out
adc
test
jmp
mov
fisttp
cli
mov
mov
sub
mov
pop
out
add
xor
inc
and
sbb
mov
jmp
out
imul
cmc
sbb
in
pushf
jmp
push
pop
push
or
xlat
mov
addr16
gs
jb
jecxz
fmulp
pop
mov
xor
sti
(bad)
fwait
and
into
test
sub
addr16
cli
stos
nop
bound
jmp
mov
mov
popa
fs
in
lods
ret
cs
div
cmp
je
pop
jne
dec
cmp
lods
add
jae
scas
bound
addr16
out
test
mov
jmp
call
mov
(bad)
pop
scas
dec
stos
push
test
les
xchg
ret
sahf
push
aad
pop
inc
push
lock
inc
mov
push
lods
not
pusha
call
out
and
xor
mov
and
in
xlat
pop
adc
out
and
repz
scas
stc
out
and
out
dec
in
pusha
out
inc
pop
push
sub
test
retf
cmp
outs
cld
test
mov
mov
push
call
call
test
xor
xor
jo
and
xor
icebp
add
mov
in
popf
cmps
cmp
sub
ror
cli
dec
push
mov
inc
mov
repnz
push
cmp
add
jmp
outs
call
mov
push
mov
mov
cmps
imul
jbe
jae
scas
mov
xor
fnstsw
cwde
cmp
outs
mov
sbb
outs
(bad)
mov
fst
lock
xor
cmps
mov
mov
loopne
and
add
std
retf
adc
fcmovnb
ret
pop
pop
movs
xchg
js
mov
jecxz
add
mov
inc
mov
jmp
out
adc
inc
icebp
stc
and
and
hlt
in
sti
jg
adc
and
sub
mov
mov
xchg
(bad)
mov
cmp
enter
aam
fmulp
in
imul
loop
ss
push
(bad)
mov
inc
dec
sar
sar
leave
adc
stos
jne
xor
sar
and
cmp
sbb
or
into
ins
daa
int3
push
aam
stc
cmp
sbb
jle
mov
inc
add
lods
test
sti
cld
sub
out
pop
pop
sub
shl
leave
ins
mov
xchg
mov
push
inc
out
outs
dec
sti
popf
add
mov
ins
ret
add
mov
retf
repz
cld
repz
adc
cmp
mov
call
jecxz
add
clc
pop
fcmovnb
mov
xor
xor
mov
addr16
sbb
mov
pushf
hlt
sbb
scas
lock
int
mov
mov
inc
jmp
mov
dec
fcmove
cmc
in
loope
js
repz
les
push
cmps
lea
sub
xchg
xlat
out
push
add
mov
icebp
in
adc
xchg
xchg
cwde
lahf
leave
(bad)
mov
lds
ins
ins
mov
stos
jecxz
retf
shl
out
mov
xchg
and
repnz
fisubr
mov
inc
mov
sti
movs
loope
jns
out
and
push
fwait
shl
or
out
jle
aad
mov
enter
inc
lods
in
add
xchg
jecxz
outs
jbe
jbe
cmps
adc
scas
aad
hlt
das
repz
outs
mov
ins
mov
out
rcr
push
cwde
shl
sub
mov
sub
push
ds
jle
jg
fdivp
mov
rcr
jne
aam
mov
repz
shr
fsubrp
daa
iret
rol
leave
es
nop
inc
loope
movs
lods
sbb
mov
jmp
sub
loop
fisubr
jg
mov
inc
mov
sbb
mov
mov
add
lods
xchg
mov
sar
xchg
ja
ss
imul
mov
fsubr
data16
jmp
push
fwait
xchg
pop
out
pushf
loopne
pusha
popa
push
aam
push
ja
push
pop
fbld
xchg
mov
push
push
adc
dec
xchg
cmp
push
lahf
push
cmp
mov
jmp
(bad)
jne
pop
lahf
lods
cmps
shr
pop
fisub
ret
mov
scas
or
sub
push
mov
mov
repnz
pop
xchg
xchg
xchg
call
sub
cmp
mul
xchg
mov
mov
and
mov
push
jecxz
mov
mov
clc
out
cmp
jae
push
xor
call
sar
in
cmp
sub
or
mov
outs
je
sbb
xchg
retf
test
(bad)
rol
imul
mov
dec
arpl
outs
sahf
shr
sub
push
stos
icebp
iret
push
scas
test
aad
mov
xor
int3
enter
xchg
out
js
and
into
xor
in
jmp
mov
add
fld
cli
(bad)
js
jmp
xor
pop
inc
mov
mov
stos
inc
xchg
mov
sub
cmp
movs
mov
add
mov
push
mov
mov
adc
and
arpl
cmc
aaa
movs
test
icebp
jmp
sbb
xchg
retf
add
ret
sbb
stc
mov
inc
ins
sub
loop
scas
push
and
cmc
cwde
dec
in
stos
stos
lea
add
jmp
xor
out
pop
mov
inc
bnd
ret
mov
jb
out
aaa
mov
mov
repz
aad
xlat
retf
ret
sub
not
sub
push
jb
leave
ret
call
xor
mov
mov
fs
mov
fcmovnu
popa
fidivr
jl
mov
sub
add
xchg
cld
pop
sub
xchg
shl
sbb
loope
mov
xchg
icebp
stos
cmps
in
mov
nop
stc
jne
loope
xchg
xchg
rcr
enter
(bad)
mov
jb
mov
push
test
ins
leave
jecxz
mov
mov
sbb
mov
cmp
fwait
in
(bad)
push
fcompp
xchg
call
fwait
xchg
sar
fisttp
mov
in
xchg
aam
jecxz
stos
loope
cli
mov
stos
repnz
pop
shl
(bad)
ret
mov
mov
jecxz
loop
dec
push
fwait
mov
add
neg
jmp
aam
xor
(bad)
test
xor
lds
mov
jle
dec
cld
call
ror
fnstsw
call
frstor
xchg
adc
(bad)
pop
jmp
jmp
or
(bad)
pop
arpl
fld
call
out
retf
test
cmc
add
movs
pop
mov
data16
aam
pop
sub
jns
fisubr
mov
stos
inc
rol
xchg
cwde
ficom
xchg
lock
outs
stc
cmc
dec
repnz
dec
dec
cwde
fnstenv
jne
ret
(bad)
fs
int3
pusha
imul
cwde
dec
shl
cmc
dec
mov
mov
jle
mov
jle
pop
loopne
mov
or
sahf
lea
sbb
mov
mov
xchg
ret
cmps
arpl
test
loopne
xor
enter
adc
ins
xor
hlt
test
ficom
enter
and
loopne
fwait
outs
mov
lea
ret
xchg
adc
movs
shl
xchg
mov
pop
retf
jmp
cmp
bound
icebp
and
stc
xchg
stc
and
mov
xchg
xor
loope
dec
push
out
push
cmps
mov
lea
sub
cmp
jle
jp
push
std
jmp
sub
mov
jne
stc
gs
push
xchg
aad
inc
in
cmp
xor
sub
dec
xchg
div
out
jbe
mov
mov
xor
in
shr
in
pusha
js
add
in
xchg
div
push
hlt
push
inc
out
(bad)
adc
fild
mov
push
sbb
add
aad
rol
rcr
std
in
fcomp
cmc
stos
sbb
sar
and
sub
ds
mov
jnp
mov
xor
adc
rcl
das
stos
pop
nop
enter
(bad)
into
ja
test
stos
mov
sub
or
out
inc
inc
inc
jns
xor
push
fimul
push
mov
cli
dec
into
mov
push
sar
push
mov
adc
jmp
fdivr
test
movs
push
sahf
out
jl
jo
jo
ja
hlt
pop
(bad)
push
dec
iret
inc
test
mov
movs
test
ror
std
dec
dec
gs
or
cdq
xchg
xlat
aaa
adc
dec
ror
retf
xchg
popa
jae
inc
dec
and
int
fdiv
test
xor
mov
cmps
push
push
(bad)
mov
push
aaa
lahf
add
int3
sub
outs
and
cmp
or
mov
mov
inc
dec
and
dec
dec
add
fistp
cmp
dec
pop
mov
cld
inc
xchg
icebp
jno
mov
outs
sub
push
int
shr
cs
arpl
iret
(bad)
mov
inc
add
ss
das
sub
jmp
mov
jmp
ins
pop
jmp
cmp
xlat
pop
mov
lahf
stos
adc
fcomip
or
imul
push
jmp
neg
inc
and
test
std
jns
push
retf
(bad)
lahf
mov
rcr
mov
ins
ret
sahf
dec
inc
push
jmp
add
mov
inc
push
cdq
(bad)
fist
cdq
xlat
mov
jb
sti
push
jecxz
and
adc
pop
(bad)
test
cwde
out
push
mov
outs
clc
push
cwde
test
xchg
sub
in
mov
leave
or
mov
ds
xor
adc
test
ss
push
inc
int
ja
ror
jge
jmp
pop
out
imul
call
mov
cmp
jo
xchg
fwait
push
and
and
cmps
inc
(bad)
xchg
ja
aaa
ja
mov
ja
or
out
pop
inc
lods
add
sbb
mov
push
arpl
mov
cld
loop
mov
dec
fscale
or
dec
leave
addr16
add
outs
mov
dec
jbe
and
scas
lds
lock
mov
and
(bad)
mov
xor
popa
arpl
xlat
mov
daa
popf
xchg
loope
out
and
mov
dec
mov
push
push
or
mov
fwait
sub
int3
sar
or
mov
dec
jl
outs
jecxz
dec
loope
push
and
ja
ins
out
cmp
pushf
push
or
retf
add
stos
and
dec
mov
cmp
mov
imul
in
pop
jno
stos
xchg
jno
or
jge
sbb
mov
mov
xchg
or
pop
fcomp
mov
mov
(bad)
retf
lock
mov
daa
mov
adc
shl
push
loop
repz
cs
(bad)
mov
(bad)
cmp
fldenv
into
fwait
ret
jecxz
les
adc
ror
sub
jbe
xchg
xchg
gs
xchg
(bad)
call
push
retf
add
cwde
add
or
dec
retf
push
in
in
test
push
out
push
sub
mov
inc
mov
and
sbb
push
sbb
loop
pusha
jmp
pop
fsubr
add
cmps
iret
jmp
fimul
shl
push
lods
mov
dec
adc
jb
xchg
jb
ins
push
nop
mov
mov
into
and
fld
jge
popa
pop
or
addr16
imul
out
dec
stc
je
mov
adc
retf
adc
(bad)
imul
dec
mov
adc
push
adc
xchg
(bad)
jo
pop
push
add
xor
cmps
dec
cmc
into
mov
sub
mov
in
fwait
(bad)
mov
enter
xchg
inc
cwde
js
jo
sub
inc
xor
dec
clc
call
cwde
in
aam
sub
mov
neg
pop
jmp
jge
fistp
mov
xor
cs
sahf
(bad)
test
pop
(bad)
fwait
mov
inc
sub
dec
outs
sub
mov
ret
mov
xchg
mov
test
arpl
inc
inc
mov
adc
push
test
mov
test
cwde
out
fucomi
rcr
(bad)
fnstsw
mov
dec
xor
dec
imul
loopne
xlat
icebp
push
enter
retf
out
in
repnz
pop
cmc
inc
fild
mov
sar
mov
inc
jg
mov
xor
mov
and
scas
(bad)
xlat
xor
(bad)
sahf
push
mov
sub
repnz
rcl
outs
sbb
xor
je
outs
pushf
cmp
and
pop
shr
mov
icebp
cmp
mov
mov
mov
or
xor
int3
jp
ja
inc
out
dec
or
ins
fwait
mov
je
jecxz
and
inc
idiv
cmovg
pop
retf
or
test
lahf
sub
fs
jecxz
dec
pop
xor
aam
jbe
dec
jmp
jae
push
test
jno
inc
retf
jns
ret
xor
ss
test
nop
je
mov
mov
dec
hlt
rol
sbb
jl
jle
cmp
call
adc
mov
sub
(bad)
cmp
xor
fsubr
dec
retf
outs
std
in
(bad)
lods
sbb
mov
jl
mov
add
lock
push
daa
mov
jns
jl
or
punpckhdq
xchg
loop
loop
ja
int
lods
daa
out
ret
outs
jmp
fdiv
or
push
test
loopne
loope
movs
mov
jg
xchg
into
rcr
ja
pop
sub
gs
lds
cmc
int3
arpl
cmp
fs
in
jb
and
jmp
dec
cmps
mov
scas
inc
add
push
sbb
popf
jmp
cmp
or
call
sub
loopne
ins
fnstcw
xor
lahf
clc
inc
or
popf
stos
sub
cmp
popa
xchg
call
push
sub
jmp
stc
cmc
mov
fyl2xp1
fwait
rcr
jecxz
inc
aas
mov
mov
add
loope
jg
fsubp
in
xchg
sbb
mov
push
test
clc
adc
jb
jbe
fstp
push
test
and
sbb
sbb
mov
add
xchg
das
xlat
enter
in
scas
xchg
xchg
retf
js
pop
jb
inc
jge
fwait
dec
add
and
xchg
imul
call
jmp
mov
cmc
cld
gs
mov
cmp
fs
dec
inc
aad
repz
xchg
push
or
loopne
push
pop
xchg
in
in
push
jl
cs
push
imul
pop
popa
jns
lahf
shl
mov
mov
icebp
stos
in
retf
leave
xor
mov
push
retf
xor
adc
icebp
jae
stos
add
mov
call
stc
aam
jo
xchg
cmp
jge
arpl
bound
add
clc
sub
inc
aam
and
jnp
adc
fmul
jne
sti
jp
jcxz
and
stc
mov
or
in
jb
imul
stos
or
mov
addr16
in
fsub
mov
retf
and
shl
xchg
in
(bad)
cmp
push
cmps
fnsetpm(287
loop
and
mov
test
sub
ret
xchg
push
icebp
rcpps
xor
daa
lods
push
jg
daa
bound
fisub
mov
lods
pop
pop
or
cld
fild
xor
sub
bound
push
call
aaa
xor
pop
out
adc
aam
fcomp
sti
cmps
mov
mov
das
push
sub
fdiv
cwde
jmp
gs
pusha
(bad)
pop
jb
cld
repnz
push
xlat
ficom
jmp
xlat
shr
or
mov
inc
cmps
call
cdq
stos
les
in
or
aas
int
or
and
add
dec
sbb
cmps
imul
mov
mov
enter
imul
jmp
adc
addr16
adc
int
fsub
inc
enter
sti
sbb
(bad)
jns
xchg
sub
dec
(bad)
addr16
mov
mov
rcl
xchg
out
or
scas
jp
pusha
dec
in
leave
mov
(bad)
pop
cld
call
(bad)
loopne
push
adc
fstp
sbb
scas
push
xchg
sub
imul
(bad)
mov
mov
dec
jo
adc
sar
out
sahf
mov
jp
cld
mov
std
or
aaa
mov
pop
iret
inc
inc
sub
ss
jns
dec
cwde
fstp
jg
sbb
inc
add
leave
out
popa
leave
test
cmp
mov
sbb
iret
mov
mov
add
dec
mov
adc
pop
data16
xchg
out
mov
aaa
ins
xor
inc
repz
outs
in
xor
xchg
push
mov
cmps
cmp
mov
mov
in
xchg
fst
in
and
pop
jno
pop
retf
fld
cmp
or
mov
cmps
sub
and
outs
aad
out
stos
mov
test
mov
xchg
js
push
jl
sub
inc
add
aas
mov
icebp
mov
push
sbb
ja
sbb
adc
js
pop
in
cmp
mov
iret
out
adc
int3
es
js
and
leave
xchg
mov
cmp
or
das
dec
push
xchg
(bad)
sbb
ins
sub
lahf
cli
shl
retf
jnp
push
xchg
mov
stos
sub
cmp
mov
pop
dec
cmp
in
sti
adc
(bad)
pushf
dec
fxch
mov
push
adc
pushf
inc
rcr
push
aas
push
fstp
sub
and
dec
in
mov
push
sbb
ror
pop
mov
and
cli
jnp
scas
pushf
pop
das
fidivr
scas
cmp
out
je
cmp
mov
iret
inc
out
or
scas
clc
xchg
dec
mov
outs
and
jmp
call
loope
dec
xchg
inc
retf
shr
add
lods
mov
sub
inc
retf
push
add
pop
ins
jp
and
sub
or
mov
popa
mov
out
dec
inc
ficomp
scas
xchg
cmc
aaa
dec
ret
cmp
cwde
(bad)
sbb
dec
xchg
aam
mov
popf
test
inc
cmp
xchg
outs
retf
out
mov
xchg
jbe
imul
aad
imul
aas
mov
pop
and
xchg
sbb
sbb
sub
inc
repz
xor
jnp
jbe
out
push
inc
inc
mov
push
movs
je
mov
inc
inc
and
xchg
xor
xor
push
mov
and
popa
push
pusha
sub
les
test
not
popa
cmp
adc
mov
(bad)
mov
xchg
mov
mov
sbb
into
neg
(bad)
out
xchg
xlat
retf
push
mov
ja
lea
sti
sub
mov
aam
mov
stos
in
push
cmps
psubsb
repz
add
dec
jnp
add
pop
and
and
add
cmp
lods
aaa
fsubr
sub
in
repnz
rol
clc
jmp
dec
(bad)
test
push
adc
xor
sbb
outs
(bad)
in
xor
rcl
scas
add
inc
push
in
jb
push
push
in
mov
aad
add
push
jmp
ret
pushf
pushf
loopne
arpl
movs
outs
ret
dec
inc
pop
xchg
pop
lock
sahf
push
mov
cmp
push
sub
icebp
call
mov
lds
pop
fcomp
adc
mov
and
xor
jl
je
mov
es
rcl
mov
and
fsin
xchg
(bad)
lock
dec
fwait
rcr
stos
es
mov
mov
jecxz
sbb
sbb
call
stc
or
adc
mov
adc
fcmovu
ins
lahf
into
adc
call
mov
ins
mov
inc
and
add
repnz
fnsave
xchg
ss
lds
mov
aam
push
dec
rcr
and
ficomp
fistp
out
data16
call
hlt
inc
hlt
dec
daa
pop
or
clc
dec
iret
jp
cmp
test
sub
movs
retf
(bad)
gs
retf
fistp
jmp
iret
loop
aas
jmp
push
(bad)
popf
pop
rcl
rcr
iret
ret
mov
fild
mov
loope
mov
mov
xchg
rcr
and
frstor
dec
icebp
pop
inc
nop
repz
hlt
out
scas
repnz
mov
aam
fadd
lea
fisub
in
xor
adc
in
adc
mov
jle
out
pop
clc
std
dec
das
pusha
push
in
outs
in
jno
mov
call
ins
xchg
(bad)
int
(bad)
arpl
div
dec
js
in
mov
cli
ret
retf
dec
popf
(bad)
in
and
gs
push
mov
sbb
in
adc
stos
(bad)
sti
jmp
ins
xchg
mov
repnz
xchg
xchg
add
enter
xchg
stc
jp
aad
vpmulhw
adc
mov
in
mov
pop
outs
sbb
jno
repnz
xchg
dec
lods
ins
pop
mov
cmp
pop
sahf
push
fnstcw
outs
sar
daa
mov
scas
jno
cmp
inc
aad
mov
call
outs
and
or
out
mov
dec
daa
mov
xchg
mov
or
call
jno
xchg
mov
mov
fld
dec
aaa
leave
das
dec
cmp
ds
cmp
cli
clc
ds
ss
(bad)
cmps
test
push
into
inc
push
std
cmp
in
jmp
cli
call
dec
lods
add
mov
ins
jo
lahf
mov
inc
lahf
push
fidivr
loope
and
out
icebp
ror
mov
sub
jmp
pop
mov
loop
mov
or
lods
daa
imul
push
fwait
in
fimul
mov
push
rcl
rcl
mov
inc
mov
cld
pop
jle
data16
sar
mov
dec
mov
xchg
repz
mov
retf
popa
add
into
js
icebp
fnstenv
mov
lahf
adc
lods
sub
shr
cmp
mov
mov
loop
mov
mov
xlat
shl
retf
dec
mov
push
icebp
or
mov
loope
data16
push
jmp
add
fcmovnbe
in
jmp
add
lock
inc
adc
addr16
or
enter
das
test
xlat
push
(bad)
fucomip
push
loopne
outs
cmp
nop
into
bound
sbb
jmp
stos
fdiv
pusha
mov
into
xchg
add
scas
leave
mov
mov
out
cmc
jmp
pmulhuw
(bad)
outs
repz
push
lods
sti
inc
enter
sbb
movs
mov
pop
mov
in
inc
xor
jle
add
icebp
push
into
xchg
push
imul
jmp
out
pushw
cli
dec
jo
cld
out
mov
lods
mov
fadd
fild
add
jmp
pop
ins
dec
cli
fmul
pop
call
xlat
out
jns
dec
out
jo
sbb
hlt
xchg
lea
loop
bound
pop
mov
adc
in
pop
xchg
jmp
mov
sbb
jae
xchg
mov
mov
mov
pop
in
popf
rcl
cmp
adc
lock
jb
adc
mov
xchg
xchg
sub
pushf
dec
sub
pop
jecxz
jo
pop
sar
and
call
(bad)
(bad)
scas
jmp
push
inc
jb
mov
xlat
sub
cmp
xlat
test
int3
ret
popa
adc
push
push
test
jne
ficomp
mov
or
and
(bad)
lods
pop
ret
enter
pusha
fnsave
repnz
out
into
repnz
(bad)
std
(bad)
jbe
xchg
call
push
mov
scas
inc
cmp
mov
(bad)
jmpw
mov
xchg
call
cli
jge
jle
mov
out
iret
loop
test
mov
dec
enter
fmul
push
xor
xor
mov
or
into
sahf
mov
nop
xor
jmp
jg
jb
jbe
push
fild
sbb
cs
pop
push
out
ss
ret
(bad)
fisub
xchg
aad
js
ins
and
int3
or
outs
scas
shl
inc
and
or
pop
pop
sub
xchg
inc
stos
cli
adc
icebp
sbb
fsub
cmovg
dec
loopne
inc
sbb
lods
loopne
mov
cwde
mov
out
aaa
xor
jle
sti
pop
fs
mov
xchg
mov
test
bound
in
in
in
adc
repz
daa
sbb
out
fisub
cli
or
out
and
cmp
fs
sub
dec
out
ret
pop
xchg
aad
int
cmps
cld
scas
mov
mov
call
inc
stos
mov
adc
idiv
(bad)
shr
xor
add
jo
repnz
fwait
mov
inc
int3
bound
sub
call
cmp
cmp
dec
test
icebp
inc
in
sbb
icebp
pop
repz
(bad)
jg
pushf
push
(bad)
mov
dec
pop
clc
pop
inc
shl
in
mov
jo
and
dec
adc
std
adc
pop
movs
adc
(bad)
inc
cmp
mov
dec
mov
push
and
imul
sti
mov
dec
mov
loop
inc
je
out
lock
repz
loopne
pop
push
out
cmc
out
sbb
xor
ror
arpl
dec
es
jg
sub
shr
jno
sub
js
out
loop
mov
jmp
sub
mov
add
cmp
repz
mov
jecxz
inc
leave
xlat
or
pop
leave
xchg
xor
and
push
in
pop
repz
sub
lock
mov
out
loop
leave
out
jnp
(bad)
in
stc
jmp
jmp
mov
repz
cli
cmp
shl
jecxz
mov
arpl
in
std
in
dec
loopne
fld
inc
dec
nop
loop
je
or
pop
stc
add
jbe
sbb
cli
adc
out
stos
out
pop
das
rcr
inc
push
inc
fldenv
sti
xor
adc
sahf
cli
jbe
or
cli
mov
outs
out
push
mov
lock
add
out
lds
pop
add
or
test
xchg
ins
sub
jnp
in
(bad)
or
adc
leave
and
ds
sub
mov
int3
sbb
test
scas
xor
in
pop
inc
xlat
fild
nop
fsubp
xchg
int3
sbb
jns
push
cld
scas
fidiv
stc
cmp
jne
dec
out
xchg
cmc
ins
xor
popa
loop
jnp
mov
sar
inc
(bad)
mov
retf
ret
std
pop
pusha
xchg
fmulp
enter
stos
jns
dec
in
daa
int3
mov
and
js
mov
repnz
(bad)
cli
sub
dec
loop
in
cmp
je
sub
loope
mov
(bad)
fstp
nop
fdivr
loop
repnz
cli
jmp
sahf
mov
out
scas
imul
iret
scas
call
mov
mov
xor
xchg
mov
mov
and
jmp
mov
add
ja
adc
jns
shl
xchg
les
inc
jg
and
jb
rep
xor
mov
int
sbb
mov
push
out
into
cmps
sbb
fcomip
lds
int3
lods
mov
and
rcr
jmp
lods
in
lods
(bad)
cmp
fistp
movs
jl
jnp
test
data16
lods
jno
int
(bad)
jle
rcl
imul
pop
pop
stc
jmp
call
aas
xchg
ficom
and
jns
retf
mov
sahf
xlat
sbb
cmp
mov
add
fisub
cdq
das
retf
or
mov
loope
sbb
sbb
popf
inc
aas
add
xor
stos
lods
push
rcl
enter
cli
jge
call
xchg
aad
pop
cmova
pop
(bad)
out
cmp
bound
rol
shr
dec
mov
scas
dec
pop
jecxz
pop
mov
repnz
pop
pusha
xor
inc
or
call
jmp
xor
xor
jae
sub
cmp
daa
or
rcl
jle
scas
in
sbb
sbb
ret
rcr
adc
mov
sbb
mov
out
mov
mov
sub
xchg
std
es
mov
mov
fld
out
sbb
out
lds
aad
inc
shl
push
out
fisttp
mov
push
push
xchg
push
mov
lock
jmp
mov
lods
nop
test
int3
scas
pop
int3
add
mov
out
(bad)
call
ss
pop
pop
lock
mov
and
adc
ret
adc
xor
pop
and
fwait
cmps
xor
mov
xor
inc
fs
inc
stos
or
lods
(bad)
mov
icebp
jmp
inc
inc
or
div
sub
xchg
xchg
data16
xchg
movs
mov
dec
add
outs
aam
jno
pop
data16
ret
pop
shl
mov
push
mov
mov
lahf
mov
in
out
sub
into
mov
xchg
ss
jl
sbb
es
(bad)
mov
retf
add
pop
sub
rcl
dec
jmp
pop
movlps
xchg
das
xor
call
fdiv
add
pusha
push
retf
repz
movs
repz
jmp
in
sub
lods
and
loope
movs
fimul
xor
fcomp
daa
jmp
aad
xchg
mov
aas
cmps
pushf
mov
cmp
push
(bad)
imul
mov
movs
lods
out
stc
xor
jmp
lock
inc
add
ret
rcl
push
cmp
scas
cmp
mov
iret
mov
push
mov
cli
fcos
(bad)
bound
dec
addr16
inc
je
push
xchg
add
dec
loope
inc
cwde
movs
in
loope
sbb
mov
stc
bound
mov
idiv
xchg
mov
push
add
sub
jae
fst
adc
outs
scas
cmp
xor
sbb
jp
(bad)
leave
daa
xor
mov
cs
in
int3
add
data16
test
xchg
jbe
cmp
jmp
aas
hlt
ss
repz
popf
push
int
fadd
add
fidiv
test
test
jno
mov
aad
pop
(bad)
leave
cmp
repnz
jb
(bad)
aas
jnp
mov
lahf
outs
aaa
adc
sub
sar
fmulp
aam
mov
ins
cmc
retf
jae
ds
and
xlat
ss
cmps
dec
stc
iret
in
mov
push
in
sub
dec
fcmovne
retf
int
lods
cmp
scas
scas
idiv
repnz
popf
out
cmp
mov
and
loope
(bad)
out
jb
lea
fs
jb
mov
popf
sub
(bad)
cld
jg
cwde
cmp
pusha
jecxz
mov
loope
mov
std
ins
xchg
repz
push
push
cmp
ficomp
pop
loope
dec
imul
fwait
outs
or
clc
out
mov
pop
scas
mov
inc
(bad)
clc
pop
or
loope
test
jmp
out
mov
xlat
jb
pop
jle
xchg
adc
sbb
push
hlt
cli
sub
shl
cld
add
stos
ds
movs
test
mov
retf
(bad)
fiadd
and
dec
jne
cld
cli
sahf
push
jmp
test
jns
into
jmp
(bad)
mul
push
sbb
ret
xchg
sbb
pushw
iret
loopne
loope
test
mov
retf
repnz
cli
mov
mov
in
leave
mov
std
hlt
push
in
lahf
aaa
add
jmp
push
mov
dec
bound
fprem
out
in
xor
std
in
call
aam
sar
pop
mov
and
in
mov
jnp
pop
pusha
fidivr
call
test
int
ins
mov
mov
cmp
scas
push
mov
in
dec
shr
imul
and
(bad)
loope
dec
fadd
daa
cmp
and
mov
fcompp
jmp
in
(bad)
hlt
push
fidiv
out
mov
out
test
push
leave
lock
stc
icebp
mov
out
loopne
std
jo
test
aad
fcmovne
jl
or
je
inc
add
std
outs
fsubr
mov
stc
push
not
cmp
enter
fsubrp
pop
out
mov
dec
push
hlt
call
fsub
(bad)
and
jmp
sub
xchg
sbb
outs
mov
cmp
pop
(bad)
or
or
(bad)
jae
test
mov
and
adc
sar
stc
cld
fcomp
jp
jb
pop
dec
test
jge
dec
data16
std
div
loopne
jmp
(bad)
aam
xor
int
cmp
arpl
retf
jg
std
out
add
mul
int
cmp
shl
jno
push
cmps
mov
inc
xor
int
in
lock
adc
adc
dec
push
iret
int3
or
loope
sti
inc
mov
mov
ds
repz
aaa
iret
movs
out
sbb
out
sbb
popa
clc
in
push
push
in
popf
std
mov
fst
test
cmc
in
mov
xor
stc
jmp
or
daa
and
inc
add
cmp
sbb
std
sbb
jg
ret
and
cwde
pop
sub
adc
test
inc
iret
cmp
test
cmps
movs
jp
cmp
retf
ds
dec
pop
(bad)
shr
pop
jno
pop
int3
aas
add
out
lock
cld
mov
in
push
cmc
out
ret
ds
stos
xchg
stc
int
(bad)
jmp
adc
movs
push
fsub
out
mov
das
xor
adc
loope
ss
or
stc
sbb
mov
push
int3
xchg
lock
add
jp
xor
aas
mov
loop
test
dec
js
call
push
dec
lock
outs
sbb
daa
lea
sub
cs
jne
mov
mov
cli
shr
stc
hlt
imul
aad
aas
cmp
sbb
sar
jb
sbb
inc
loop
xor
and
test
aam
ret
das
mov
lock
mov
jle
out
and
(bad)
shl
(bad)
mov
fstp
sub
mov
in
mov
dec
fcmovnbe
dec
jecxz
pop
add
cmps
or
stos
jns
(bad)
call
mov
(bad)
shl
dec
data16
std
in
mov
mov
pop
jmp
addr16
xchg
and
cmp
jg
repz
test
cmp
shr
icebp
imul
xchg
pop
push
and
pushf
mov
mov
jb
inc
add
nop
loope
sbb
test
sbb
mov
mov
push
sbb
std
int
(bad)
loop
out
push
in
or
fcomp
movs
fisub
test
pop
xchg
mov
lock
clc
jmp
xchg
clc
and
inc
push
out
fnstsw
fdivr
div
dec
out
std
push
dec
xchg
(bad)
enter
retf
lahf
cmps
fsub
in
mov
ins
cmc
or
ss
jecxz
fild
cmp
push
xor
test
jnp
cmp
fwait
sub
hlt
mov
inc
jp
fdivr
stos
lods
enter
in
cmps
fistp
mov
jns
hlt
cmc
push
cmp
adc
push
icebp
mov
out
jnp
add
jae
aam
dec
shr
imul
and
test
push
fcomp
(bad)
mov
mov
ror
mov
push
ja
mov
mov
outs
and
xchg
aad
fwait
ror
pop
in
retf
mov
sub
or
movs
dec
fld
gs
ret
mov
xchg
mov
jnp
rcl
cmps
test
adc
cmp
in
loop
sbb
dec
push
cmps
xor
btr
inc
jl
cmp
rol
adc
popf
clc
xor
jne
leave
or
pop
cwde
xchg
mul
(bad)
in
lock
mov
rol
(bad)
icebp
add
jp
push
pop
neg
mov
leave
sbb
icebp
lock
fiadd
mov
mov
imul
xchg
retf
(bad)
add
and
jecxz
mul
jecxz
mov
icebp
pop
push
pop
inc
dec
pop
dec
ja
or
shl
dec
push
xor
cmc
(bad)
imul
push
sbb
pop
test
jbe
and
scas
or
std
xor
loope
jne
fs
inc
jecxz
leave
into
push
push
jmp
jae
into
dec
pextrw
xchg
xchg
jmp
cld
adc
(bad)
push
aam
xor
mov
cli
mov
jno
lods
xor
iret
push
xor
fsubrp
jns
add
pop
neg
int3
retf
and
data16
xor
bound
outs
xlat
(bad)
cmc
outs
mov
xor
ja
add
xor
inc
push
dec
add
mov
mov
ja
cmp
out
and
sub
loop
(bad)
outs
ss
mov
mov
push
in
loope
js
mov
std
sub
out
aaa
(bad)
fnsave
ins
cmp
nop
sar
addr16
jecxz
adc
mov
in
jg
into
stos
sub
sbb
addr16
and
inc
into
nop
mov
(bad)
rol
les
cmp
es
dec
out
add
adc
xor
fs
mov
arpl
adc
icebp
pop
iret
or
xor
loop
repz
pop
std
dec
shr
(bad)
xlat
and
inc
push
leave
ins
stc
fisub
adc
adc
inc
sbb
sbb
pop
pop
jmp
fmul
cmps
shl
les
(bad)
test
and
jge
add
adc
push
arpl
je
test
js
in
idiv
and
sar
cdq
es
movs
ficom
movs
movq
scas
inc
push
sub
std
inc
or
rcr
jecxz
hlt
mov
pop
inc
shr
cmc
int
jl
and
inc
xor
pop
jle
fidivr
push
(bad)
push
cmp
(bad)
enter
outs
scas
dec
test
mov
dec
lds
xchg
retf
push
adc
sub
push
sbb
dec
mov
inc
test
push
fmulp
loope
aam
lock
sub
ja
xchg
sub
and
jb
inc
push
mov
(bad)
jmp
xchg
sub
into
loopne
mov
retf
cmps
ret
xor
dec
or
xchg
and
fisttp
inc
aad
mov
add
sti
out
xlat
add
into
loopne
jno
nop
pushf
adc
push
imul
rol
mov
ss
cwde
rcr
out
fcmovnbe
imul
stc
jmp
add
xor
push
call
pop
sub
fwait
movs
cmp
mov
iret
jne
ror
ret
out
shr
push
call
xchg
call
xchg
dec
or
sub
sbb
arpl
rcl
sbb
stos
dec
mov
push
add
cvtpi2ps
inc
icebp
push
das
jnp
cmp
into
retf
nop
pop
ss
dec
test
jl
int3
push
mov
loope
jmp
outs
call
mov
out
add
ja
jo
stc
push
mov
fucomi
jb
xchg
mov
dec
lods
imul
mov
pop
movs
movs
ret
mov
gs
sbb
in
pop
adc
(bad)
ins
push
sbb
mov
test
or
inc
xlat
icebp
scas
mov
xchg
jns
push
add
lea
or
repnz
mov
out
xchg
push
mov
test
iret
xchg
inc
pop
jo
std
xor
arpl
push
scas
popf
(bad)
rcr
sbb
and
aas
xchg
mov
inc
mov
fdivrp
nop
jecxz
shl
mov
(bad)
loope
dec
ds
(bad)
push
push
lods
rcl
aam
adc
sbb
jmp
(bad)
daa
mov
lds
pop
fcom
cli
sub
loop
jg
cmp
dec
(bad)
adc
cmp
aaa
adc
pop
loope
pcmpeqd
and
dec
scas
rcr
std
les
push
pop
push
inc
jl
mov
(bad)
loope
lds
rol
dec
pop
xor
mov
outs
pop
call
ret
fs
test
mov
(bad)
jge
mov
mov
inc
xor
mov
ins
enter
std
mov
loopne
jge
ret
into
fst
aas
cmp
mov
add
retf
xor
nop
mov
(bad)
xchg
mov
jmp
mov
adc
push
mov
(bad)
cwde
adc
leave
pop
sbb
push
sbb
movs
or
aad
addr16
adc
xor
retf
sbb
xor
call
pop
pushf
imul
push
xor
out
enter
or
jmp
ret
out
sbb
add
in
xor
ins
pop
fwait
mov
push
pusha
or
jns
mov
inc
add
ror
cwde
ss
(bad)
mov
push
lods
mov
mov
pop
out
adc
cli
loopne
mov
mov
les
sub
(bad)
adc
cwde
pushf
(bad)
fadd
icebp
fldcw
in
push
pop
inc
jb
add
or
popa
mov
loop
adc
lds
ins
scas
jne
jmp
daa
push
add
inc
adc
into
dec
and
call
in
sbb
rcl
hlt
xlat
and
and
in
cmp
and
mov
ss
leave
or
out
shl
mov
sti
xchg
xchg
push
shr
movs
xchg
xchg
lods
add
mov
inc
cld
leave
and
xor
mov
outs
loope
lea
xchg
push
cwde
jge
or
mov
loop
or
gs
repz
bound
fild
daa
push
pop
mov
xor
sti
xchg
(bad)
mov
lea
clc
and
or
fsub
push
mov
pop
inc
sbb
adc
or
rol
and
jmp
cdq
inc
loope
aam
retf
retf
cmc
mov
fidiv
cmp
stc
lahf
dec
xchg
dec
pop
xor
jo
cmp
fucom
sbb
outs
stos
add
mov
mov
ret
icebp
data16
cdq
mov
je
add
clc
sub
jmp
fmul
gs
push
enter
ins
adc
mov
fdivr
loope
ffreep
jmp
imul
mov
jle
repz
(bad)
mov
je
sar
test
(bad)
cmp
je
add
or
mov
jo
sub
or
imul
sbb
or
inc
repnz
cvtpi2ps
cmp
add
push
sysret
cli
add
xor
add
push
in
and
cmp
add
sub
mov
outs
mov
sbb
mov
int3
out
(bad)
and
mov
xchg
push
(bad)
add
retf
(bad)
jne
movs
or
pop
and
jmp
mov
add
jmp
dec
arpl
test
cmp
inc
inc
mov
clc
das
dec
adc
cmp
push
stos
in
lods
jno
in
mov
aas
push
mov
xchg
fwait
sub
cmps
mov
xor
mov
test
pop
jl
je
jp
pop
add
ds
pop
pop
mov
mov
jg
fcomp
out
loop
leave
retf
int
fld
sbb
shl
jge
adc
test
les
adc
xchg
movs
or
daa
xor
sbb
jge
shl
or
js
cdq
sbb
jmp
mov
(bad)
jecxz
jmp
in
or
(bad)
mov
movs
test
jge
(bad)
sti
mov
cmc
add
rcl
pop
jae
fcomi
push
cld
mov
(bad)
jmp
cdq
cmps
shl
pop
ret
mov
jl
test
js
lea
inc
jp
(bad)
inc
test
das
ins
adc
add
std
jmp
out
cli
ret
push
mov
mul
xchg
and
add
cld
pop
mov
sub
idiv
ficom
ret
inc
sub
sahf
addr16
dec
add
test
iret
sbb
adc
imul
jnp
gs
das
fmul
sub
and
call
add
out
and
push
sbb
and
mov
sub
shl
mov
xor
adc
stos
push
test
stc
and
jb
dec
add
ins
mov
imul
sub
inc
cmp
les
(bad)
xchg
test
add
adc
jb
call
mov
mov
scas
das
idiv
in
stos
ret
xchg
ss
add
add
sti
or
push
mul
cli
jmp
or
out
gs
inc
loope
loopne
ds
out
aas
dec
xlat
in
and
fdivrp
shl
test
les
(bad)
adc
retf
(bad)
fcomp
mov
jmp
fs
aad
add
add
jge
aam
loop
shl
in
or
repnz
push
jmp
inc
or
in
push
push
fdivr
repnz
repz
sbb
dec
jmp
jmp
jp
fldl2e
rcr
or
fcom
sbb
push
mov
sub
shl
jno
cli
(bad)
jmp
mov
mov
inc
pop
test
push
call
mov
mov
mov
push
(bad)
iret
fld
rol
out
sbb
cdq
in
adc
jnp
push
or
les
scas
loopne
inc
jne
sar
push
clc
scas
loopne
mov
mov
sbb
mov
cmc
xchg
mov
cs
in
add
pop
jp
retf
pop
loope
add
icebp
loop
enterw
cwde
ins
mov
cmp
clc
mov
and
push
int
xor
ret
stc
adc
adc
mul
cmp
mov
jmp
or
out
in
mov
fsub
xor
mov
hlt
xor
nop
pop
and
retf
sahf
lods
scas
sar
loop
jge
loop
xor
gs
xchg
cwde
push
sub
jb
pop
pop
sbb
mov
in
in
pushf
test
mov
(bad)
adc
cmps
std
push
xchg
pop
push
fist
mov
loop
jmp
fstp
call
adc
cwde
inc
mov
adc
cmps
loopne
push
mov
jo
lods
lea
mov
inc
dec
jle
mov
inc
adc
icebp
repz
repnz
popa
push
hlt
jmp
in
push
ins
jle
push
jb
nop
and
and
pop
es
repz
loop
lods
(bad)
rol
and
or
cld
mov
adc
push
lods
mov
sar
push
shr
lods
push
add
mov
pop
stos
pop
sbb
xor
fnstcw
ret
xchg
fild
jg
mov
pop
(bad)
mov
sub
sbb
out
and
xchg
jle
dec
pop
gs
mov
pop
mov
mov
jecxz
pop
push
jo
fsub
xchg
jp
(bad)
loope
and
mov
cdq
pop
jg
pusha
pop
out
hlt
out
jne
dec
outs
xchg
out
ja
sub
inc
fs
xor
ins
movs
mov
pop
pop
arpl
das
mov
std
cld
mul
push
mov
cli
push
xor
mov
js
dec
test
jecxz
test
fldpi
adc
mov
mov
or
jmp
xchg
shr
retf
xchg
jg
int
sbb
sti
in
movs
out
rcr
int3
jg
scas
sub
retf
cs
xchg
retf
lock
pop
sub
out
popa
add
sub
cmp
fwait
dec
in
imul
sbb
cmps
loope
popf
shl
punpckhbw
icebp
mov
movs
push
dec
loopne
mov
inc
adc
xchg
movs
xor
xor
pop
fadd
xchg
and
in
imul
retf
xchg
fcomp
cmc
out
pop
pop
cmp
mov
sbb
xchg
test
dec
xchg
int
jb
cmps
sub
bound
jnp
mov
add
pop
out
cwde
jecxz
movs
mov
out
popf
sbb
xlat
xlat
hlt
dec
lods
repz
sbb
je
mov
lahf
stc
add
pop
imul
lods
adc
int3
sub
fisttp
xchg
jp
xchg
out
jne
in
test
not
xchg
movs
sub
loop
(bad)
cmp
and
(bad)
dec
sbb
add
sti
pop
pop
repnz
fmul
jne
inc
mov
lods
fisttp
addr16
(bad)
sti
ficomp
retf
dec
mov
push
push
or
repz
jnp
push
mov
cmps
stos
inc
mov
xchg
rcl
inc
loop
popa
xchg
jne
psubb
sub
xor
fiadd
mov
movs
add
in
xchg
nop
and
shl
xchg
pop
dec
hlt
xchg
mov
gs
jo
std
in
jmp
sbb
jb
aam
mov
fmul
pop
mov
lods
bound
lock
nop
fsubr
les
in
je
jp
jge
outs
jp
mov
lods
shr
sar
ret
cmp
icebp
adc
aas
fsub
loopne
loope
std
lahf
out
icebp
dec
mov
push
leave
and
imul
fcom
inc
retf
sar
ins
(bad)
aad
in
inc
mov
js
int3
outs
icebp
neg
leave
pusha
jmp
mov
or
xlat
loop
leave
xor
stc
pop
mov
imul
cmp
jb
jle
aad
cdq
inc
mov
(bad)
imul
or
jns
add
arpl
or
test
jmp
mov
dec
cdq
aad
test
adc
loop
cmp
cmp
pushf
xchg
mov
lock
out
iret
outs
inc
jl
call
cdq
leave
out
xor
leave
jg
ins
int
adc
lock
sbb
sar
repnz
arpl
push
adc
mov
test
in
inc
mov
lea
ficomp
add
ja
ss
inc
pop
leave
mov
pop
in
int
in
add
add
lods
push
jg
mov
ins
lods
je
es
sbb
mov
rcl
hlt
daa
fiadd
ror
jl
scas
scas
aaa
or
cmp
mov
mov
(bad)
test
mov
pop
jno
lods
cld
pusha
loop
retf
inc
jmp
dec
mov
mov
cmp
in
bnd
add
ss
mov
mov
stos
mov
ja
sbb
in
mov
fdiv
pusha
mov
push
(bad)
cmp
dec
dec
fwait
mov
in
inc
sbb
inc
cmp
test
loope
loope
mul
adc
out
dec
jp
test
stos
pushf
shr
inc
and
vmovaps
push
in
in
pop
fcomp
or
and
mov
popa
imul
mov
jmp
inc
jl
mov
ds
jp
rcl
in
fld
fcmovbe
jmp
div
xchg
int
cmp
std
xor
cdq
inc
ins
sub
fnstenv
add
popa
mov
adc
xchg
call
xor
jl
ds
xor
push
sbb
lsl
aam
push
outs
test
push
imul
jg
jmp
adc
mov
imul
pop
jno
dec
std
int
sub
out
sbb
arpl
ja
mov
pop
std
cdq
jmp
pop
sahf
add
dec
repnz
loop
add
jl
data16
(bad)
cmps
inc
shr
test
(bad)
jnp
dec
wbinvd
mov
jg
imul
xor
(bad)
hlt
in
or
jae
std
cld
ja
movs
sub
ror
fwait
cmps
pop
out
push
jge
sti
sti
outs
(bad)
lock
imul
repnz
hlt
mov
(bad)
mov
in
add
cmps
hlt
lods
inc
repz
repz
push
push
jno
enter
jmp
ror
jmp
cmps
xor
xchg
repz
fs
xchg
lods
fidivr
mov
ins
dec
xor
adc
nop
aam
retf
pop
add
sahf
fcomp
fmul
dec
call
mov
ins
cmp
enter
das
outs
shr
out
sahf
fisttp
pusha
push
sahf
mov
cmp
imul
sub
or
retf
push
(bad)
jp
rcr
pop
or
popa
je
xor
push
or
retf
nop
jnp
adc
push
jnp
int3
stos
stos
dec
ja
cmc
stos
stos
repnz
mov
pusha
test
aas
lods
daa
test
push
ror
dec
cwde
test
js
outs
outs
jmp
out
int3
pusha
imul
dec
pop
loopne
imul
paddb
push
es
or
adc
mov
cmp
cli
mov
inc
loop
aam
sbb
fdivrp
cmps
aaa
dec
jno
xor
repz
ret
jne
fdivr
add
or
xchg
cs
jmp
push
out
inc
in
jmp
mov
fucomip
add
push
in
mov
xchg
das
in
add
mov
adc
jle
and
xchg
xchg
jecxz
fdiv
(bad)
push
push
les
out
jne
jb
jg
in
cmp
sbb
sbb
das
cmps
bnd
mov
arpl
call
lahf
test
push
scas
(bad)
mov
cmps
cwde
mov
mov
int
xlat
mov
or
clc
push
add
fs
add
cmps
in
and
out
jae
sti
lock
mov
inc
int3
aas
sar
out
lds
psrld
inc
shl
loop
xchg
jecxz
cld
push
in
cmp
cmp
leave
jo
iret
shl
shl
test
jl
xor
mov
mov
cmps
lock
(bad)
sub
sub
add
or
bound
dec
dec
mov
les
scas
xlat
sahf
and
sbb
out
jp
pop
int3
daa
out
test
cwde
xchg
jns
bound
addr16
push
dec
pusha
ficomp
sbb
in
in
adc
xlat
sbb
adc
xchg
icebp
in
retf
xchg
xlat
mov
mov
push
clc
mov
cmp
out
movntq
out
cmp
not
stos
push
dec
enter
aas
xchg
xchg
stc
jmp
icebp
leave
(bad)
cmp
or
jp
xor
mov
jnp
mov
daa
cmc
dec
sub
test
lea
lods
shr
mov
add
add
dec
sbb
mov
fnstenv
pop
repnz
aad
sti
nop
outs
ss
daa
cmp
loop
cmp
cld
push
fwait
aam
xchg
add
scas
aam
cld
inc
cli
(bad)
jnp
add
shr
xor
pushf
retf
jp
jb
in
sub
xchg
mov
fs
movs
hlt
jl
push
daa
xchg
(bad)
push
arpl
std
call
movs
add
int3
ss
mov
fwait
std
sbb
xchg
mov
inc
retf
pop
push
ret
sub
and
ja
inc
fild
out
mov
jbe
stos
pop
int3
sub
stc
jbe
shr
in
rol
pop
in
and
sbb
mov
test
cld
in
inc
push
imul
adc
int
imul
jb
arpl
dec
sub
cld
mov
cmps
add
pop
pusha
pop
or
or
and
adc
push
jle
dec
int3
lahf
lea
shr
xchg
rcr
call
jl
jnp
pop
fucomi
mov
scas
(bad)
std
inc
sbb
cmps
pusha
dec
sbb
xor
imul
inc
lods
add
add
mov
add
out
fincstp
aaa
ficom
clc
stc
leave
pop
xchg
jne
(bad)
cdq
arpl
enter
cmp
pop
leave
cs
jno
mov
daa
mov
popa
shl
popa
fisttp
ret
push
aas
sbb
inc
xchg
cld
inc
jns
adc
clc
mov
dec
int
(bad)
mov
xchg
scas
movs
mov
add
aam
jg
iret
inc
mov
ins
fild
icebp
add
(bad)
add
pop
jecxz
bound
mov
clc
ss
(bad)
sub
loop
imul
mov
std
shl
jge
addr16
pop
movs
ret
rol
in
sub
mov
add
les
in
sahf
jo
in
mov
jg
mov
iret
or
or
(bad)
out
hlt
cli
mov
call
cli
push
fild
dec
xchg
mov
rol
sti
mov
or
outs
cmps
retf
ret
stos
inc
cmps
enter
add
jbe
push
out
jns
fninit
add
mov
mov
jo
call
enter
les
fnstenv
jne
ror
arpl
scas
out
fs
outs
dec
fld
push
adc
pop
xchg
in
repnz
jl
mov
mul
push
in
mov
push
icebp
aas
inc
outs
cmps
rcr
imul
in
into
mul
repnz
adc
pop
inc
imul
cmc
push
mov
xor
div
mov
adc
cmp
mov
adc
in
sbb
jno
(bad)
call
xchg
mul
arpl
mov
mov
add
into
push
movs
mov
ret
mov
sub
es
pop
mov
ins
jbe
adc
inc
popa
adc
xlat
or
sti
aad
or
imul
and
push
(bad)
cli
adc
mov
pop
lods
test
imul
out
and
inc
push
jno
ror
cs
(bad)
cmp
repnz
pop
xor
cs
retf
and
repnz
push
retf
inc
mov
rol
stc
daa
xlat
fstp
ins
add
jmp
inc
fucom
push
dec
push
jmp
pushf
(bad)
mov
out
mov
fs
aam
jmp
clc
mov
(bad)
shl
jne
push
pop
rol
rcr
sbb
scas
cmp
ret
adc
rol
or
cdq
in
fidivr
repnz
popf
(bad)
addr16
imul
xor
out
out
repz
dec
sbb
shr
ds
fmul
mov
popf
outs
add
inc
xchg
out
test
inc
test
sub
int3
jo
bnd
xchg
and
int3
xchg
sbb
fisttp
lods
lock
aaa
add
(bad)
jno
xchg
sbb
xchg
mov
scas
cmps
xor
jmp
aam
xchg
sbb
xchg
aam
in
imul
shl
fcmovne
and
xor
xchg
leave
cmc
push
add
mov
dec
dec
push
adc
call
dec
or
jne
ror
test
dec
add
rcl
pushf
cmp
push
cmp
out
mov
or
(bad)
mov
ss
push
and
imul
aaa
jnp
popf
ja
push
sar
cmc
and
mov
pop
xchg
lock
ja
icebp
les
mov
add
in
sub
dec
mov
xor
std
xchg
les
and
dec
cmp
cmp
mov
repz
inc
test
gs
sahf
dec
push
push
push
movntps
push
jnp
dec
fwait
or
sbb
jb
jne
or
outs
dec
loope
cmc
cmova
adc
jbe
inc
pop
adc
inc
jb
sub
int
iret
cmc
das
call
iret
xor
dec
mul
mov
inc
xchg
scas
(bad)
sub
mov
out
and
or
loope
dec
int
inc
push
inc
push
pop
push
mov
or
jb
test
jnp
(bad)
cwde
mov
fbld
add
push
sub
or
imul
hlt
test
mov
cmp
mov
imul
popa
jg
daa
in
jg
test
repz
ja
hlt
bound
imul
pop
out
dec
mov
fisub
sbb
lods
mov
jmp
xchg
fidivr
mov
mov
dec
fidivr
stos
mov
mov
sti
aas
and
mov
data16
loopne
bound
mov
xchg
test
adc
js
sub
scas
stc
fucom
shl
jnp
push
pop
retf
scas
xlat
enter
iret
xor
and
fucomi
loopne
xchg
cli
fistp
jmp
push
push
(bad)
ffreep
scas
push
mov
lods
mov
stc
mov
mov
pop
fs
mov
jecxz
mov
call
inc
cmc
rcl
icebp
add
stc
and
loopne
jmp
stos
and
outs
cli
in
sub
mov
hlt
retf
loope
out
addr16
cmc
dec
adc
stos
xlat
loopne
mov
jge
in
in
cmps
and
stc
sbb
wbinvd
add
xchg
aad
inc
cli
push
and
(bad)
sbb
es
adc
popa
mov
dec
leave
mov
pop
cmc
fsubr
adc
jo
mov
ror
enter
xor
jnp
add
out
jmp
repz
aam
pop
jl
dec
fdivr
aad
fbstp
sub
mov
push
inc
fsub
daa
fs
sub
pop
mov
into
call
movs
mov
xchg
xor
adc
pusha
hlt
mov
mov
mov
popf
push
pop
out
shl
inc
jo
and
scas
lods
je
add
fsubr
push
and
and
cmp
push
invd
mov
std
ja
sub
mov
jmp
mov
(bad)
js
je
imul
cmp
dec
ret
push
push
rcl
push
pop
dec
mov
enter
ins
int3
pusha
test
jle
mov
xchg
xor
xlat
dec
jno
push
inc
ret
and
out
retf
loop
bswap
jl
ret
inc
jb
test
dec
lahf
push
cli
test
xchg
or
pop
jb
dec
jbe
(bad)
jge
jns
mov
adc
mov
cld
sub
cmps
(bad)
cmps
ror
cmp
cmp
pop
ins
adc
ins
sbb
mov
(bad)
fcomip
xchg
stc
retfw
jne
mov
xchg
dec
mov
adc
jg
aam
neg
ins
sar
jmp
out
xchg
jnp
imul
jns
jmp
inc
js
xchg
xor
shl
out
aad
rcr
mov
call
mov
or
cmps
fsub
add
inc
xchg
aam
mov
ins
mov
mov
mov
imul
mov
(bad)
mov
inc
xchg
arpl
shl
jmp
inc
xor
jno
inc
mov
test
sub
pop
es
out
mov
gs
pop
push
mov
int
es
(bad)
lock
add
cli
mov
les
xchg
call
push
call
sub
inc
xchg
adc
push
xchg
jmp
fnstsw
xchg
cdq
fcom
les
ror
sahf
sub
add
fild
and
and
sar
hlt
repnz
inc
mov
hlt
sbb
mov
fadd
enter
(bad)
pushf
push
jo
dec
std
pop
sub
jle
pop
mov
mov
fsubr
add
enter
out
jne
aaa
clc
sar
jnp
push
mov
adc
scas
cli
enter
cmp
lods
das
and
mov
retf
in
enter
add
mov
scas
int
fdiv
addr16
fiadd
inc
inc
sahf
and
int
mov
bound
mov
pusha
mov
outs
std
fild
icebp
mov
popa
scas
into
jl
jo
xor
nop
nop
cmp
mov
sub
mov
dec
jne
ffreep
inc
movs
lods
dec
xor
inc
xor
loop
loopne
jmp
or
into
stc
and
and
jnp
ins
iret
dec
or
xor
call
add
jle
xchg
fs
mov
jnp
jge
lock
icebp
loopne
dec
add
fldcw
push
punpcklbw
jmp
add
in
cmps
enter
xlat
fdivp
mov
xor
inc
jge
lock
ins
adc
cwde
fstp
pop
sub
inc
scas
(bad)
xchg
adc
push
mov
lahf
pmullw
loop
jge
add
inc
jbe
mov
call
retf
out
jle
rcr
mov
lods
ss
xchg
and
outs
xor
adc
rol
jmp
retf
in
push
aam
and
rcl
mov
data16
pop
cmp
call
out
jmp
sbb
(bad)
gs
out
out
xlat
int3
fistp
add
cmp
loope
mov
ds
jg
in
clc
push
(bad)
mov
(bad)
cli
inc
mov
mov
or
test
mov
retf
jmp
rcr
pop
jo
jo
jge
fistp
and
ret
add
mov
dec
push
mov
pop
test
ins
fsin
mov
mov
cmc
mov
cmps
jmp
mov
aad
ja
dec
mov
repz
add
adc
repz
dec
or
cdq
sbb
sbb
mov
jns
(bad)
mov
jmp
out
mov
xor
(bad)
sbb
repnz
xchg
inc
push
(bad)
fsubp
test
xchg
pop
popf
jle
xchg
jnp
loop
mov
or
stos
movs
add
(bad)
jae
pushf
mov
bound
jns
mov
mov
out
xor
xlat
xchg
pop
loopne
icebp
cs
nop
push
or
(bad)
cdq
mov
pop
outs
mov
add
mov
adc
cmc
retf
push
inc
sti
shl
test
jbe
out
inc
sbb
test
mov
es
cmp
and
xchg
mov
dec
and
mov
in
add
icebp
pop
(bad)
push
adc
or
xor
fst
ret
add
sbb
(bad)
jecxz
add
ficomp
scas
pop
inc
adc
jle
inc
ror
fwait
out
xchg
push
add
repz
test
add
mov
and
pop
push
mov
aad
mov
push
xchg
adc
or
xchg
lock
dec
sbb
gs
dec
jns
pop
lds
ss
sbb
imul
call
pop
or
or
dec
loopne
and
inc
cmp
(bad)
rep
popf
fidiv
lahf
out
in
arpl
jmp
stos
fimul
mov
out
xchg
or
dec
cld
xor
data16
and
data16
sbb
loop
lahf
dec
inc
jns
ds
cmp
mov
lock
out
in
xchg
popa
sti
scas
pop
imul
jmp
icebp
push
das
std
out
mov
mov
fwait
jl
and
test
mov
(bad)
cmp
out
aas
jecxz
jo
xor
lods
and
inc
adc
hlt
into
mov
outs
jbe
(bad)
jo
dec
mov
call
or
jno
aam
mov
inc
dec
inc
lods
aad
cmps
mov
in
arpl
push
dec
push
mov
cdq
push
(bad)
push
ror
mov
mov
mov
add
and
repz
add
and
mov
or
mov
jge
xchg
pop
push
mov
sbb
je
lods
(bad)
lds
jbe
(bad)
jmp
inc
cmp
xor
inc
jo
inc
ja
outs
je
(bad)
stos
imul
push
jmp
(bad)
in
mov
ss
ret
dec
out
out
cmp
pusha
outs
fs
push
xchg
xor
dec
das
(bad)
pusha
aam
mov
adc
int
add
out
push
adc
retf
cmps
xchg
pop
imul
cmps
mov
into
test
pop
retf
pop
into
sub
fldlg2
mov
jecxz
jecxz
xchg
mov
retf
lahf
sub
mov
xchg
(bad)
jmp
jo
dec
ins
pop
sbb
cmp
rcr
cld
xchg
add
pop
jmp
loop
hlt
lds
sub
sbb
dec
ror
push
dec
(bad)
pushf
mov
sbb
in
or
xchg
xchg
and
mov
push
scas
pop
loopne
(bad)
cmp
data16
mov
mov
scas
mov
call
mov
add
outs
std
pop
mov
push
mov
es
movs
mov
rcr
cli
(bad)
aam
mov
xlat
into
out
retf
fmulp
push
jl
shr
leave
mov
and
ds
aad
stc
inc
push
pop
xchg
lock
ret
ins
scas
jno
cli
into
rcr
loop
xor
(bad)
stc
daa
aad
(bad)
not
retf
jno
cmp
mov
shr
cmp
outs
fild
ret
xchg
pusha
jmp
inc
jmp
jb
loope
xchg
repnz
mov
scas
out
mov
fst
imul
sbb
outs
loopne
jp
clc
out
dec
mov
push
loop
aad
(bad)
retf
movs
shl
in
bound
add
lods
in
rcr
or
push
out
jo
jo
(bad)
cld
sbb
rol
mov
mov
loope
jne
jmp
test
adc
inc
and
aam
int
test
mov
aam
arpl
dec
popf
mov
push
xor
cmc
nop
jae
push
add
and
xchg
mov
loop
mov
daa
sbb
sbb
mov
xor
inc
or
or
or
add
jne
sub
(bad)
mov
call
jnp
mov
movs
rol
xchg
fisttp
pxor
lock
mov
repnz
xor
jmp
int
scas
jge
fld
sahf
repnz
scas
clc
imul
popa
not
inc
xor
adc
adc
xchg
lock
div
ror
push
mov
mov
fucomi
mov
sti
outs
mov
pop
push
daa
enter
adc
fistp
(bad)
xor
test
and
int3
fs
push
out
sub
sti
xchg
movs
lea
or
cli
out
pop
or
scas
xor
mov
or
in
stos
ja
xchg
sti
xlat
in
je
movs
jmp
mov
outs
jp
das
mov
sub
ror
daa
int3
nop
clc
sti
(bad)
sub
adc
mov
push
loop
add
jnp
outs
inc
push
cld
or
sub
fmul
in
fidivr
pushf
enter
xchg
stos
fs
sbb
inc
jmp
adc
pop
hlt
xchg
jae
das
xor
jmp
push
ficomp
inc
push
sbb
push
mov
adc
xchg
outs
dec
push
hlt
inc
fistp
xchg
dec
dec
push
aas
das
pop
mov
arpl
pop
jno
test
fcomp
push
jmp
inc
lds
into
mov
test
mov
jb
mov
sbb
retf
add
sbb
cmp
imul
dec
sub
jno
pusha
retf
ret
dec
push
pop
mov
mov
push
jo
cmp
cwde
xor
cwde
xchg
mov
and
jmp
data16
and
out
mov
fcmove
jmp
mov
dec
sti
push
add
or
int3
fsub
shl
jge
into
add
jbe
push
outs
xchg
adc
jmp
outs
jle
jle
mov
outs
adc
addr16
retf
dec
lock
and
mov
fwait
pop
call
iret
jnp
jg
loope
in
(bad)
gs
sbb
mov
arpl
jle
iret
mov
hlt
push
add
push
sahf
mov
daa
adc
movs
sar
aam
mov
call
pop
pop
and
retf
pop
dec
lods
and
xor
ficom
clc
fiadd
sahf
mov
mov
rcr
add
mov
cs
sbb
mov
mov
xchg
in
mov
mov
data16
xlat
push
inc
sar
inc
not
xor
mov
mov
mov
cmp
xor
(bad)
stos
jecxz
sbb
pop
lods
in
clc
push
sti
xchg
mov
inc
jmp
stos
xor
mov
sub
push
dec
fcmovnu
push
(bad)
fist
push
loope
adc
or
es
xchg
sbb
xchg
cmp
mov
xchg
mov
out
sbb
jl
stos
cmp
test
mov
pop
int3
loope
aad
bound
aad
pop
retf
mov
hlt
lahf
cmp
push
push
xchg
mov
push
or
repnz
xchg
sub
dec
movs
idiv
(bad)
ja
mov
enter
add
ins
(bad)
xchg
pop
xor
repnz
adc
mov
jnp
in
mov
fdivr
inc
fnsave
add
gs
jmp
lock
shr
inc
mov
cli
cli
sub
test
jmp
or
rcr
in
lods
cmps
stc
setbe
jmp
imul
ret
xor
aaa
mov
(bad)
jb
xchg
sbb
cmp
jle
jmp
ficomp
cmp
jns
out
lock
mov
cdq
fisubr
leave
or
mov
and
sbb
inc
xor
(bad)
test
xchg
mov
pop
test
inc
movs
fisttp
icebp
xor
adc
call
repnz
fistp
add
ja
xor
inc
jnp
dec
or
sbb
mov
fstp
xor
fld
sbb
test
retf
ins
push
out
jg
mov
cwde
jmp
xchg
jecxz
arpl
daa
or
cmp
cmp
dec
popa
fmulp
cmp
or
xor
out
stc
icebp
pop
icebp
shl
add
mov
hlt
jecxz
lahf
out
cwde
fs
(bad)
xlat
lahf
outs
das
mov
icebp
(bad)
out
jae
jnp
add
inc
push
jne
loope
cmps
aam
outs
or
lock
push
push
shl
mov
data16
aad
sub
mov
mov
cli
dec
outs
movs
sub
sahf
repnz
sub
test
into
xlat
sti
adc
pop
out
daa
dec
xchg
fs
or
out
into
fcmovnu
cld
lahf
sbb
jp
xor
push
sub
lods
loope
loope
daa
jae
les
or
in
inc
add
jl
sbb
or
nop
lahf
repnz
xchg
hlt
ds
nop
and
or
hlt
fimul
fist
jno
adc
jmp
push
rcr
push
mov
repnz
outs
lods
repnz
outs
push
sbb
in
mov
or
sub
lods
leave
inc
aam
pop
in
ja
jno
adc
dec
leave
jp
add
or
addr16
mov
pop
adc
shl
mov
or
(bad)
fdivr
int
into
sub
lahf
xor
cmp
shl
outs
push
setns
fsub
push
call
fwait
jmp
push
sbb
push
cmp
repnz
adc
push
push
and
or
jno
sahf
loopne
dec
adc
cs
addr16
cmp
idiv
sub
dec
mov
cmps
push
addr16
adc
js
and
imul
icebp
aas
xchg
mov
inc
or
xlat
scas
icebp
pop
jmp
test
or
out
inc
mov
jnp
hlt
mov
or
dec
inc
cs
iret
outs
mov
test
xor
xchg
out
sub
call
es
imul
inc
jge
outs
fnsave
repz
les
mov
xchg
sbb
add
enter
dec
sbb
shl
clc
fs
(bad)
repz
(bad)
cmp
cmp
rol
add
mov
sti
cmc
imul
ret
cmp
in
add
mov
xchg
mov
icebp
pushf
dec
xchg
push
xchg
push
or
call
mov
loopne
imul
outs
inc
inc
dec
or
fsubp
call
je
adc
rol
push
movs
mov
popa
push
inc
movs
clc
pop
push
(bad)
mov
and
jne
icebp
js
fdiv
push
outs
jne
enter
or
out
imul
adc
push
mov
call
or
hlt
(bad)
gs
dec
xor
mov
jb
popa
ja
pop
ds
pop
cld
outs
jmp
and
adc
adc
push
sbb
out
ins
mov
mov
scas
shl
(bad)
xchg
push
mov
test
shl
nop
adc
loop
xchg
fmul
pop
lods
jge
lahf
push
popf
cmps
mov
lahf
xchg
mov
push
xchg
js
mov
push
test
jb
pusha
lahf
movs
cwde
mov
int
mov
mov
push
pop
xchg
mov
inc
repz
and
jp
das
repnz
retf
data16
lahf
pop
mov
into
movs
call
dec
rcr
pop
out
xchg
loop
mov
into
jne
mov
aas
or
cmp
arpl
and
jns
out
scas
stos
sub
inc
adc
and
dec
or
clc
(bad)
adc
pop
sti
push
mov
mov
xor
jge
add
jp
int3
mov
dec
mov
movs
cmps
sbb
mov
pop
dec
dec
mov
mov
stc
add
lock
xchg
push
outs
add
dec
dec
in
mov
push
fld
stos
shl
cmps
jp
leave
js
or
sub
fnstenv
loop
jl
dec
fwait
test
into
xchg
mov
mov
cmp
mov
xchg
push
fnsave
jbe
(bad)
jae
(bad)
fwait
(bad)
ins
movs
loopne
(bad)
pushf
ret
xlat
fstp
cmc
cmps
mov
mov
addr16
mov
or
add
jge
ins
sbb
ret
adc
stos
retf
out
dec
mov
int
icebp
addr16
cmp
xchg
cmc
stc
stc
inc
es
push
mov
or
add
cld
cmp
xchg
mov
movs
or
popf
sbb
push
add
aas
scas
lods
mov
xor
adc
xor
mov
lock
mov
out
cmp
pop
mov
adc
dec
fdivr
mov
gs
mov
pop
mov
(bad)
ret
in
dec
imul
stos
push
xchg
and
leave
pop
les
mov
mov
jg
mov
cli
idiv
adc
loope
in
pop
mov
es
ins
in
rcl
mov
rcl
mov
xlat
(bad)
in
scas
outs
mov
sub
stos
sbb
aam
imul
jmp
and
rcr
dec
xor
mov
push
cwde
sbb
cmc
cmps
retf
out
cli
pop
or
(bad)
(bad)
leave
cmps
into
aas
enter
inc
xlat
(bad)
xchg
or
movs
outs
repnz
xor
push
daa
and
(bad)
rcl
(bad)
into
loopne
dec
repnz
retf
and
daa
pop
sub
in
push
mov
out
jmp
mov
pmaddwd
ins
fnsave
mov
pop
scas
cmps
outs
pusha
je
popa
jl
dec
dec
in
mov
je
or
lods
mul
icebp
mov
sar
test
movs
test
and
cmps
in
ror
in
stos
fidiv
inc
call
push
in
adc
call
xchg
push
pop
cmp
xchg
out
jns
cmp
mov
push
imul
addr16
imul
push
pop
loop
adc
or
cmps
adc
xchg
xor
adc
cwde
out
push
mov
out
mov
jo
dec
jp
sbb
jg
gs
jmp
out
iret
xor
xchg
mov
aaa
mov
loop
loopne
out
sub
jp
mov
mov
sbb
jle
loope
loope
add
aas
jns
cwde
lock
out
xchg
not
xor
sub
inc
push
dec
jbe
cmp
retf
jmp
cmp
xor
into
xor
mov
jns
loope
jmp
in
mov
jmp
jmp
and
dec
dec
push
mov
push
cwde
jecxz
cmps
int
mov
into
sbb
push
dec
scas
pop
icebp
sti
in
cld
cld
sub
xor
mov
sub
or
and
lods
outs
push
ret
sub
repnz
movs
mov
out
mov
dec
sti
leave
push
cvtps2pi
loope
jbe
fnsave
xor
mov
jmp
xchg
push
sbb
mov
pop
push
or
add
sbb
scas
adc
or
push
add
mov
sbb
dec
in
add
inc
test
inc
imul
dec
into
jne
inc
xlat
inc
or
mov
std
jo
add
cmps
imul
cmc
fcomi
adc
add
pop
pushf
mov
bound
imul
sub
ss
sub
shl
pop
xor
inc
add
push
in
add
es
and
and
and
pop
mov
aam
mov
js
push
mov
and
aas
xor
jae
fidivr
dec
in
lds
mov
push
jb
mov
cmp
inc
mov
and
jne
push
sbb
jecxz
or
sub
pop
fisubr
hlt
inc
jbe
aam
jle
mov
jecxz
mov
push
pop
or
ficom
ja
adc
out
adc
cmp
lods
dec
jno
jecxz
(bad)
std
in
ds
dec
mov
dec
push
out
jns
or
das
cmp
shl
dec
and
bound
popa
mov
push
jp
into
inc
xor
jge
mov
push
and
ja
inc
push
inc
stos
mov
dec
jnp
data16
js
xchg
jbe
sar
sub
fistp
outs
gs
mov
retf
xor
in
and
test
movs
mov
shl
(bad)
jbe
arpl
dec
sbb
addr16
call
int3
dec
xor
cmp
imul
jge
push
dec
clc
push
(bad)
aas
mov
mov
movs
js
jbe
(bad)
scas
in
sub
and
fsub
mov
pop
popf
retf
je
test
push
and
adc
cmps
mov
mov
xchg
xchg
imul
shl
(bad)
js
sahf
mov
or
adc
add
mov
pushf
xchg
fcom
mov
ret
xchg
fisub
mov
lods
and
mov
retf
movs
aas
idiv
gs
call
and
popf
mov
sub
mov
mov
mul
(bad)
sub
stos
int
dec
lahf
mov
ds
mov
cmp
bnd
cli
movs
scas
mov
dec
pushf
daa
push
cmp
data16
pop
out
(bad)
xor
ins
(bad)
xor
scas
mov
stos
das
ror
(bad)
fidiv
sub
dec
jns
jns
cmp
rcr
pop
scas
push
int3
xor
push
jb
in
icebp
gs
sub
push
and
out
ja
(bad)
ins
jmp
(bad)
mov
out
fld
sub
in
ret
das
jge
or
gs
dec
jbe
aas
and
pop
fbld
mov
retf
loopne
mov
cli
lods
pop
mov
cmp
icebp
add
shl
movq
out
call
movs
(bad)
popa
fiadd
fsub
stc
stc
or
fwait
ja
out
and
stc
mov
loope
sbb
cs
jmp
icebp
mov
inc
enter
mov
(bad)
push
in
xor
retf
lea
aad
mov
jo
inc
cli
arpl
mov
mov
call
iret
fbld
stos
in
dec
hlt
mov
adc
mov
call
or
pop
call
mov
icebp
sub
xlat
inc
mov
mov
pusha
cmp
test
cwde
out
outs
dec
aam
fmul
retf
sub
jns
test
add
movs
(bad)
stos
inc
mov
mov
es
jge
cmp
daa
ret
loopne
test
xchg
and
mov
fisubr
not
scas
hlt
xchg
repz
shl
mov
cdq
lods
push
pop
popa
xor
sbb
jmp
pop
icebp
mov
stc
shl
mov
(bad)
pop
addr16
mov
test
test
std
movs
sar
push
inc
mov
inc
mov
cmps
sar
stc
pop
into
movs
hlt
dec
(bad)
addr16
dec
add
cli
(bad)
scas
shr
jo
mov
fmulp
jle
test
ficom
or
sub
xor
fcmovnb
xor
add
stos
pushf
(bad)
add
shl
icebp
push
sub
fld
out
dec
or
mov
test
icebp
and
lods
mov
mov
sti
xor
cmps
xchg
jmp
sahf
dec
push
dec
shl
xor
imul
jecxz
jmp
xor
icebp
mov
mov
push
stos
sub
fscale
xor
push
mov
cs
jg
xchg
jo
(bad)
fild
hlt
push
mov
push
cmps
xlat
ja
lock
ins
mov
fisubr
fwait
loope
jl
pop
movs
aad
dec
shl
dec
enter
addr16
pop
sbb
call
cmps
sub
ficom
jmp
fcmovne
repnz
into
fst
mov
gs
jecxz
mov
push
push
fistp
mov
xchg
add
es
test
mov
mov
in
icebp
sub
aam
arpl
and
mov
xchg
rol
jb
push
sbb
dec
enter
clc
(bad)
push
jge
repnz
je
jae
in
cmp
cmp
inc
bound
je
pop
or
stos
in
mov
shr
call
mov
test
mov
call
mov
mov
mov
push
or
dec
fst
mov
(bad)
lock
jecxz
mov
fsubr
sbb
test
mov
(bad)
push
push
pusha
mov
call
sub
bound
mov
(bad)
push
int3
inc
fstp
jp
mov
mov
leave
call
xchg
or
dec
mov
dec
into
out
adc
jmp
mov
ror
and
fdivr
mov
inc
mov
mov
stc
lock
in
mov
call
dec
call
jecxz
mov
jmp
mov
mov
lock
xchg
sub
out
outs
push
sbb
pop
mov
push
ret
cdq
pop
mov
call
bound
leave
and
rcr
(bad)
cdq
test
mov
xchg
mov
pop
push
mov
xchg
mov
int
cli
dec
pop
outs
call
pop
jl
iret
pop
xchg
xchg
cmp
pushf
sbb
shl
fs
lods
dec
aaa
out
xchg
lock
out
call
leave
pop
ins
(bad)
xlat
ret
cli
fadd
jne
pop
mov
adc
fist
jp
ds
dec
mov
mov
int
(bad)
fucomip
in
xor
pop
dec
inc
jmp
shr
stos
and
repnz
enter
mov
mov
in
inc
dec
into
cmp
pop
test
movs
cmps
js
into
stos
cmps
mov
loope
repz
mov
into
shl
inc
mov
mov
out
je
rcr
pop
sub
jp
mov
dec
fdiv
mov
mov
inc
mul
xchg
xor
jmp
cs
pusha
(bad)
stc
mov
mov
xchg
jge
ss
enter
adc
or
shl
push
loop
popf
idiv
dec
cmps
or
popf
not
mov
daa
leave
daa
fisttp
popf
imul
clc
retf
jmp
outs
in
dec
ror
repz
xchg
and
popa
dec
xchg
dec
lock
mov
fsubr
push
jb
inc
mov
xor
mov
fnstsw
rcl
adc
das
(bad)
adc
push
test
mov
mov
idiv
jge
pop
mov
out
stos
loope
push
dec
scas
ret
pusha
aad
ret
cmps
and
jmp
xor
cs
bound
xchg
mov
jno
scas
adc
xor
sti
les
cmp
ja
cmp
(bad)
out
xchg
iret
jno
loop
into
sar
movs
popf
ins
jl
mov
xchg
cmpxchg
lods
mov
fstp
test
cmp
loop
xchg
sub
cwde
into
pop
sar
aad
pop
in
adc
dec
xchg
fld
es
xor
mov
std
loop
add
ins
repz
jle
mov
push
xchg
repz
sub
mov
dec
cmp
repnz
xchg
test
mov
dec
outs
and
out
add
into
cmps
outs
add
fsubr
sub
cli
clc
fld
push
(bad)
push
or
mov
lds
(bad)
mov
xlat
sbb
fwait
mov
xchg
and
adc
or
pop
mov
fcomp
outs
inc
xchg
dec
xchg
inc
push
xlat
shl
into
js
leave
cmp
pop
push
inc
mov
xor
cld
sti
jmp
gs
loope
fild
jne
jge
lahf
rcl
jnp
mov
mov
mov
cld
ffreep
repz
pop
retf
(bad)
push
inc
call
cld
ret
fucomip
call
icebp
mov
pop
jb
jb
cdq
pop
pop
mov
cmc
pop
aam
aas
sbb
fwait
loopne
call
mov
sti
jmp
lea
mov
fs
mov
adc
mov
adc
test
pop
xor
add
pop
xor
jmp
fiadd
and
xor
jns
sti
stos
mov
ins
ds
push
cmp
jae
jns
mov
sub
xor
loope
jb
pop
jns
fcom
cmps
dec
in
cmp
or
cld
mov
arpl
test
retf
in
inc
pop
mov
pop
xor
mov
loopne
push
and
mov
mov
stos
mov
mov
(bad)
cld
imul
out
loop
test
pop
sub
cmc
xor
out
call
mov
pop
push
mov
pop
push
sub
loop
mov
pop
int3
cld
sub
(bad)
(bad)
bound
dec
pop
fldenv
(bad)
mov
inc
cli
xchg
lock
sub
push
loop
ja
loopne
repz
fiadd
adc
jle
test
mov
mov
repz
(bad)
sar
inc
jp
pusha
retw
mov
pop
loope
mov
ja
aad
push
lahf
popf
jns
pop
sub
pusha
(bad)
mov
mov
xchg
inc
sahf
mov
imul
or
pop
(bad)
jmp
repz
dec
in
sar
jno
adc
out
jmp
arpl
stc
scas
or
pop
cld
jge
mov
imul
icebp
ror
mov
aad
mov
fs
or
jge
lahf
jmp
int
mov
cmp
cdq
jnp
mov
std
(bad)
call
sbb
jnp
push
leave
jo
adc
mov
inc
outs
mov
ret
add
ret
pusha
mov
fdivr
loop
cmc
sti
std
jo
adc
cs
sbb
pusha
add
push
jecxz
jmp
loop
sbb
test
in
stc
jmp
adc
ret
or
jmp
dec
repz
retf
aaa
push
into
xor
xchg
pusha
js
push
leave
and
adc
std
out
data16
test
arpl
stos
push
dec
jns
mov
js
lahf
std
jg
fsubrp
stos
outs
in
jmp
mov
repnz
call
xchg
les
imul
into
out
xor
or
jl
add
rcr
dec
rol
leave
cli
cdq
call
xchg
xchg
jbe
imul
mul
push
inc
cmp
sar
mov
xchg
mov
jb
mov
fadd
ret
add
out
pop
mov
imul
(bad)
dec
xchg
mov
repz
outs
inc
cmps
pusha
xor
retf
dec
pop
hlt
(bad)
mov
fs
jg
xor
inc
push
std
adc
shl
pop
push
sbb
test
jge
ret
push
jge
sub
mov
and
pop
in
push
in
into
xor
inc
add
xchg
lahf
test
push
cmp
add
mov
(bad)
fmul
sub
(bad)
xor
sub
cmp
jns
and
dec
or
leave
sub
and
push
mov
in
jg
push
add
mov
(bad)
rcr
sbb
in
icebp
cmps
xchg
pop
into
cld
ret
xchg
xchg
hlt
mov
mov
inc
pop
xlat
ins
arpl
inc
pop
inc
jmp
and
inc
dec
pop
inc
int3
enter
jb
clc
add
gs
mov
(bad)
je
imul
cmp
gs
jo
retf
outs
jae
cmps
cmp
jg
rol
(bad)
xchg
mov
mov
mov
std
repz
mov
fsub
mov
retf
inc
popf
test
jmp
jo
(bad)
(bad)
repz
(bad)
ret
popf
xchg
loope
movs
pushf
test
lods
or
mov
lahf
push
push
mov
jo
mov
cmp
ins
out
mov
jnp
cmps
mov
nop
mov
mov
add
pop
std
outs
xchg
lahf
mov
xchg
push
jnp
shr
shl
and
mov
mov
jecxz
cmp
and
mov
stos
jge
repz
mov
dec
mov
push
dec
cs
fldenv
outs
xchg
pop
leave
in
repnz
sbb
xbegin
iret
(bad)
mov
jno
(bad)
xor
retf
repnz
icebp
es
js
loopne
jmp
sti
jmp
xlat
mov
(bad)
jmp
mov
in
sbb
vpmacsdd
das
out
sub
pop
jno
int3
adc
div
jns
femms
cwde
push
jmp
loope
mov
xor
mov
or
icebp
cmp
test
cdq
sbb
fdivr
nop/reserved
fstp
nop
or
(bad)
mov
or
pop
xchg
or
adc
push
nop
retf
xor
in
xor
xor
scas
enter
xor
and
int3
adc
call
cmove
pop
dec
imul
mov
inc
int3
push
xchg
gs
inc
rcl
pop
xor
jg
dec
push
pop
fstp
int3
clc
in
jp
pop
(bad)
xchg
adc
adc
cdq
cli
push
push
loope
fcomip
icebp
icebp
inc
(bad)
mov
sub
jne
imul
mov
jnp
push
(bad)
out
in
mov
repnz
jp
fwait
and
jae
jmp
iret
push
adc
les
cmc
and
pop
dec
cmp
out
sbb
(bad)
mov
jge
cwde
jns
retf
fsubr
out
mov
test
fwait
out
mov
shld
movs
fsubr
test
fidiv
fsubp
adc
daa
int
loopne
mov
pop
mov
or
mov
push
sahf
rcr
call
aad
mov
cmps
cli
inc
shl
mov
bound
jb
call
mov
inc
jbe
(bad)
cli
mov
adc
in
cmps
arpl
mov
stos
dec
inc
mov
xchg
aad
push
into
cmc
pop
out
jno
pop
out
cwde
pusha
fisubr
lods
outs
(bad)
out
fnstcw
in
not
xchg
mov
in
fdiv
push
mov
cmpxchg
ins
retf
push
test
inc
adc
(bad)
sub
inc
cmp
aad
dec
mov
fadd
in
add
xor
imul
adc
jno
pushf
cmp
aaa
add
push
cmp
cdq
xor
popa
cmp
sub
ret
jnp
push
push
sub
dec
cmp
lahf
sub
daa
or
fild
adc
and
out
(bad)
jb
cmc
lods
iret
xchg
(bad)
pop
call
gs
push
fist
adc
inc
mov
retf
fld
push
test
div
or
fistp
bnd
mov
dec
xchg
ins
imul
add
fwait
loope
xlat
push
rcr
mov
dec
ds
test
stc
nop
cmp
test
in
into
les
shl
or
nop
mov
mov
sub
ret
out
cmp
add
sbb
retf
cmp
sbb
xchg
or
or
xchg
lock
div
call
push
xchg
push
ss
adc
xor
(bad)
ja
jb
sbb
outs
fimul
push
xor
sub
lods
mov
mov
dec
movs
clc
repnz
test
mov
mov
cmp
and
cli
mov
mov
adc
jmp
aad
loope
bts
movs
mov
push
mov
(bad)
cdq
lods
dec
fdiv
push
jl
rcr
xor
fisub
and
sub
push
icebp
(bad)
clc
ret
push
(bad)
lahf
dec
push
shl
ins
fdiv
stc
and
out
xor
ror
mov
xchg
fbld
push
nop
sub
push
pusha
cmp
shr
pop
fs
or
xlat
jnp
retf
popa
(bad)
push
cli
cmp
mov
and
js
loope
pop
add
int
or
push
inc
sbb
mov
jae
push
cmp
xchg
retf
sbb
push
call
cld
in
or
add
retf
mov
out
fistp
xor
dec
pop
hlt
popf
pop
stos
inc
push
dec
sub
icebp
(bad)
cmp
jge
xchg
hlt
push
xchg
jmp
xor
popa
mov
or
mul
stos
imul
(bad)
adc
out
in
mov
nop
retf
push
popa
push
leave
cmc
clc
into
dec
mov
jp
sub
in
dec
mov
dec
ret
jns
ror
shr
out
mov
mov
jg
cmps
movs
fyl2xp1
add
call
imul
xchg
dec
xchg
(bad)
jge
xchg
call
mov
ret
(bad)
mov
jnp
leave
lods
add
(bad)
fucomip
nop
ffreep
cmp
div
std
jno
dec
jl
cld
test
sbb
jb
dec
test
sbb
lds
ret
test
int3
cld
fbld
pop
mov
mov
sbb
out
dec
int3
fbld
push
in
clc
shl
mov
out
cmp
fwait
cmp
rol
les
data16
das
outs
stos
test
add
cli
jnp
fucomi
stos
jl
inc
mov
sub
outs
fmul
xchg
push
add
push
in
fucomip
jnp
fs
adc
fsubp
jb
jmp
mov
push
imul
test
clc
rol
(bad)
xchg
dec
(bad)
sbb
(bad)
or
dec
mov
(bad)
mov
fld
mov
jns
loopne
gs
mov
scas
dec
dec
dec
cdq
mov
or
fild
mov
mov
cmp
mov
iret
jbe
sbb
ret
fimul
sub
lea
hlt
(bad)
and
sub
add
sahf
iret
lock
add
fsubr
jae
xor
and
repnz
sub
mov
cmp
fst
jle
and
jmp
ficomp
inc
mov
mov
ret
(bad)
pop
add
outs
js
leave
sub
inc
dec
inc
pop
mov
mov
popf
fistp
sbb
rcr
outs
inc
out
xlat
outs
lods
dec
addr16
jmp
movs
(bad)
enter
push
cmp
mov
mov
dec
xor
data16
(bad)
fs
in
sub
outs
xor
outs
je
jns
in
bound
shl
or
pop
mov
sbb
inc
repz
or
sub
sub
int3
je
cdq
out
int3
mov
mov
cmc
jmp
pop
xor
xor
pop
add
imul
fld
hlt
js
xlat
or
xchg
xchg
push
cld
cmp
pop
sbb
popf
adc
cmc
test
and
ret
inc
sti
adc
inc
sub
pop
je
mov
add
dec
pushf
jmp
xchg
cmps
mov
test
clc
cmp
clc
test
dec
sub
jmp
cmp
stc
mov
(bad)
cli
rcr
adc
scas
pusha
outs
xchg
cli
mov
out
ficom
mov
xchg
(bad)
xor
js
daa
(bad)
ins
(bad)
ror
inc
push
pop
sbb
adc
jp
ins
inc
sub
addr16
in
xchg
imul
mov
jle
jb
xor
(bad)
xor
xor
(bad)
ins
pop
push
nop
fimul
inc
pop
rol
xchg
stc
repz
in
xchg
call
push
dec
neg
mov
jmp
out
sti
dec
mov
mov
adc
push
add
sbb
jns
add
sbb
out
cmps
sub
scas
or
xor
aam
stc
stos
jecxz
jge
les
lods
fadd
and
out
(bad)
push
fimul
push
push
retf
pop
jle
add
arpl
popf
movs
leave
jmp
sbb
out
ds
or
sar
pop
add
jne
movs
sbb
test
lea
test
hlt
mov
scas
add
jl
mov
push
pop
nop
aas
jne
lea
adc
sbb
cdq
hlt
aad
aad
out
stc
xchg
adc
xchg
aaa
repnz
stc
out
xchg
mov
and
(bad)
jecxz
mov
lods
mov
fwait
jp
push
aaa
xchg
push
ins
sbb
leave
arpl
(bad)
mov
sub
xchg
pop
scas
or
setp
push
rcr
or
fcmovne
and
frstor
shr
and
jle
push
dec
scas
adc
or
ror
out
std
or
fs
bound
enter
cmp
sub
push
(bad)
mov
std
adc
mov
ret
add
mov
inc
fcmovb
inc
loope
xor
jecxz
xchg
and
pop
cmp
sub
and
cmp
cmp
cmp
and
inc
jo
mov
retf
icebp
in
cmp
cli
jo
arpl
cmp
pushf
xor
outs
add
imul
cmp
jge
into
xchg
sbb
push
add
sub
add
push
pop
mov
je
xchg
arpl
daa
mov
in
scas
icebp
les
dec
xchg
xor
scas
sahf
and
xor
lods
rol
pop
mov
loope
add
mov
fnstenv
fwait
push
mov
and
pop
sti
pushaw
ss
daa
fld
jmp
(bad)
in
xchg
sbb
stc
inc
loope
cmp
inc
pop
lock
loopne
hlt
jmp
sub
retf
stc
add
cmp
into
ins
add
es
xchg
or
cmp
sub
inc
and
shr
jmp
int3
pop
nop
(bad)
cmp
xchg
js
mov
fcomp
xor
lods
test
bound
pop
ins
in
fld
push
jb
or
xlat
enter
rcr
fwait
mov
dec
cli
mov
dec
stos
out
add
repnz
inc
in
adc
lods
or
xor
mov
mov
push
retf
mov
push
cmp
in
push
mov
scas
mov
(bad)
jg
sub
sub
lods
fcomp
xchg
mov
imul
test
xchg
mov
(bad)
jmp
daa
pop
jmp
lock
call
mov
aaa
jp
pop
dec
mov
lea
push
pop
mov
jnp
cdq
mov
sar
jbe
or
mov
fadd
push
cli
outs
or
push
aas
cwde
add
jns
clc
xor
cmp
cmp
jecxz
jb
mov
xlat
cmps
icebp
mov
jns
ss
and
jns
xor
call
xor
test
push
mov
sub
out
mov
(bad)
dec
pop
inc
adc
mov
or
enter
mov
cmc
pop
jp
push
test
arpl
jge
mov
mov
mov
jns
nop
popf
sbb
dec
inc
pop
repnz
xchg
into
(bad)
pop
push
fdiv
cmps
(bad)
ins
lods
retf
out
sbb
adc
fsub
test
mov
in
jno
pop
hlt
mov
lock
call
dec
es
jb
xor
mov
(bad)
(bad)
mul
(bad)
dec
push
nop
imul
test
xor
stos
aad
push
xchg
aam
adc
fldenv
ins
stos
xor
sbb
inc
mov
fimul
rol
popf
outs
ret
jo
call
rcl
or
jmp
pop
cmp
movs
push
fsubr
pop
int
ret
jle
or
mov
cmc
retf
into
inc
or
dec
sbb
mov
inc
cmp
dec
fdiv
push
push
out
clc
pusha
push
cmps
mov
cmp
popf
test
retf
fadd
int
mov
icebp
jge
jo
cld
arpl
call
mov
loope
out
int
pop
xlat
shl
jecxz
ja
pushf
fdivp
pop
adc
add
hlt
in
ret
std
push
adc
adc
pop
sbb
daa
cmp
das
lds
add
and
or
jmp
in
or
add
pop
xchg
xor
fdivp
aam
jmp
les
sbb
dec
stc
jmp
fldcw
and
jno
push
or
hlt
retf
les
mov
mov
inc
outs
and
xor
adc
test
mov
adc
sub
pop
cld
int
mov
and
and
fs
sti
(bad)
cmps
mov
push
inc
and
or
cmp
jl
loop
mov
cmp
push
or
idiv
ror
xchg
jnp
push
xor
adc
adc
repz
mov
or
cmp
or
add
mov
lods
sbb
mov
push
adc
fidiv
add
lock
mov
jbe
jp
shl
add
sub
cmp
push
sbb
pusha
bound
aad
fdivr
lock
mov
shr
das
movs
push
inc
sub
sub
cld
cmp
mov
retf
movs
imul
inc
jns
or
ins
(bad)
ins
xor
jle
inc
(bad)
pop
lods
pop
xchg
inc
pusha
pop
push
or
fsubr
jns
inc
neg
fdivrp
cli
scas
jmp
xchg
jmp
jae
je
sbb
push
jmp
dec
sti
xchg
popa
push
jb
clc
rcr
push
sub
out
iret
xor
pop
jno
outs
inc
sub
sub
fld
int
popa
lods
dec
idiv
sub
jmp
push
int
ret
and
sub
(bad)
in
(bad)
push
repz
in
push
js
cmp
rol
out
out
std
jmp
dec
call
jmp
dec
loop
enter
mov
movs
clc
mov
add
aam
lds
daa
retf
fidiv
mov
cdq
mov
(bad)
pop
sub
imul
xor
cs
adc
xchg
std
xor
add
add
mov
sbb
xchg
in
div
jmp
push
sbb
in
xchg
int
cld
mov
pop
call
xchg
sar
nop
stc
loopne
fist
xchg
fs
rcl
jp
mov
mov
dec
adc
js
xchg
arpl
mov
xor
jp
in
jmp
je
pop
data16
sti
out
test
in
fisubr
push
adc
and
aad
cmps
or
mov
push
fcmovbe
xchg
fisubr
imul
in
sub
sub
shr
scas
pop
lock
or
stos
adc
jmp
into
xor
mov
pop
sti
add
retf
and
sbb
stos
lock
add
nop
fisub
repnz
jmp
mov
pop
(bad)
mov
xor
mov
and
dec
loopne
hlt
jns
pop
rol
or
push
add
popf
fidivr
mov
mov
retf
pop
movs
sbb
or
scas
std
js
fbld
(bad)
xchg
sub
push
add
and
dec
jmp
addr16
adc
jmp
push
pushf
xor
jp
ja
shr
call
loop
mov
mov
or
outs
jge
fnstenv
mov
dec
(bad)
xchg
push
call
xchg
js
add
jns
out
scas
inc
cmp
mov
cmps
jnp
adc
adc
jno
int
xchg
fbld
cmp
imul
xchg
retf
lahf
sbb
jl
fwait
repz
dec
call
jb
(bad)
nop
sub
pusha
je
push
inc
or
cld
pop
jp
aaa
dec
pop
lods
(bad)
push
push
mov
mov
adc
push
xor
repz
data16
js
push
les
dec
sub
js
inc
cmps
xlat
or
popa
sbb
cmp
loope
imul
jbe
push
sbb
cmp
push
stos
ror
mov
xor
fcom
push
sbb
idiv
inc
shl
inc
sbb
pop
sbb
cmps
les
movs
adc
aam
sub
mov
mov
test
outs
stc
stc
add
movs
(bad)
out
jno
push
sti
jmp
loop
jecxz
out
loopne
out
es
xlat
out
call
imul
hlt
out
or
add
mov
(bad)
mov
test
addr16
mov
lock
test
jle
mov
sti
faddp
nop
into
stos
push
jmp
cs
xor
adc
imul
mov
ret
fbld
je
lock
xchg
xchg
pop
xchg
cmp
sbb
addr16
(bad)
ins
sub
mov
addr16
jecxz
xchg
mov
and
add
mov
iret
sti
or
bound
(bad)
xchg
push
jo
xchg
neg
lds
xlat
aam
in
mov
pop
icebp
cmp
cmc
mov
(bad)
imul
pop
loopne
add
gs
xchg
mov
imul
ins
in
pop
adc
leave
aaa
out
cs
push
mov
outs
cmc
push
in
jmp
sahf
mov
jmp
enter
aam
inc
sub
cdq
imul
adc
inc
dec
test
fcmovb
fiadd
jno
mov
mov
ja
test
mov
jg
xchg
inc
in
or
out
call
sub
arpl
test
jle
jmp
pop
sub
repz
cmp
fsub
hlt
hlt
imul
push
(bad)
call
es
mov
stos
add
call
in
stc
xchg
(bad)
popa
rcr
js
bound
arpl
jmp
hlt
in
cmc
idiv
xlat
int
stc
cmp
sub
call
push
aad
inc
cwde
push
test
mov
push
loope
stos
and
in
or
(bad)
dec
xchg
adc
or
pop
cmp
leave
cmp
movs
cmp
xor
retf
ror
icebp
pop
(bad)
and
jne
xlat
pop
cmp
daa
ficom
sbb
sbb
in
pop
mov
sti
add
sub
imul
(bad)
cmp
sub
and
rcl
inc
cdq
add
pop
je
ror
push
fidivr
pushf
sbb
push
sub
hlt
imul
add
cmp
push
xor
shl
mov
cld
jno
cmp
sub
push
repz
sub
data16
rcl
sbb
cmp
rcl
jmp
fdiv
push
jo
es
push
fidiv
mov
in
cmps
cmp
cmp
(bad)
retf
dec
mov
in
sbb
mov
(bad)
aaa
xchg
or
in
out
repz
jno
movs
inc
inc
mov
push
xchg
(bad)
pop
inc
test
or
icebp
popa
imul
ins
jo
lods
cs
mov
dec
inc
xchg
adc
jne
add
out
idiv
add
or
sub
sahf
xchg
adc
jp
push
sbb
sbb
mov
and
pushf
jo
xchg
fmul
mov
or
push
lahf
ins
jno
mov
inc
cmp
mov
pushf
jae
add
in
imul
mov
js
pushf
rcr
test
xchg
jnp
adc
cmc
je
or
cmp
rol
ja
mov
sahf
or
adc
mov
retf
ret
clc
stos
fiadd
fisubr
or
cmp
fst
sbb
and
in
shl
cmps
pop
push
fistp
shr
and
imul
out
out
les
add
in
out
hlt
neg
jmp
(bad)
cli
cmp
xlat
aaa
out
icebp
clc
jmp
fisub
sbb
fmulp
ffree
fdivr
dec
sub
into
in
mov
fmul
loop
not
mov
sti
into
mul
in
in
bnd
stos
xor
mov
mov
cdq
(bad)
(bad)
push
hlt
or
outs
sbb
pminub
(bad)
jg
mov
xchg
dec
test
mov
dec
(bad)
dec
jne
xor
jmp
mov
sti
and
jmp
mov
enter
mul
fs
sti
xlat
frstor
outs
jp
fmulp
aad
hlt
out
jmp
cld
push
loopne
clc
xchg
mov
push
out
cli
in
std
icebp
push
loop
retf
call
push
loopne
rol
stc
jmp
loop
clc
arpl
sar
jmp
iret
rcl
mov
adc
loope
rol
les
push
xchg
dec
int3
retf
inc
jmp
in
jecxz
inc
jp
shl
cld
jmp
out
div
sbb
jo
or
clc
sar
pop
mov
add
out
sub
push
lahf
mov
push
cwde
cmovne
outs
fdiv
stc
dec
pop
xor
or
and
adc
or
aam
stos
push
ds
push
jne
jecxz
stc
sbb
push
xchg
mov
push
or
inc
jno
xchg
or
cwde
cmp
hlt
adc
sub
daa
imul
mov
es
test
xor
mov
xchg
mov
cmc
xchg
xchg
repnz
mul
gs
rcl
mov
cdq
xchg
mov
adc
xlat
mov
arpl
xor
pop
idiv
sub
and
jge
in
mov
cmps
cmp
dec
aas
stos
add
push
sbb
daa
mov
div
cmp
or
fldenv
int
jmp
lock
ss
pop
or
cmc
sbb
arpl
test
or
sbb
out
push
fisttp
in
push
imul
mov
push
or
sbb
xor
call
dec
loopne
xor
fs
pop
sub
pop
sti
inc
sbb
lea
fcomi
sbb
loope
rcl
inc
pusha
push
jecxz
adc
push
imul
loop
mov
fistp
dec
(bad)
mov
gs
das
aam
js
(bad)
cdq
sbb
adc
daa
adc
adc
adc
push
cmp
inc
(bad)
mov
push
pop
jns
fs
add
lds
mov
sub
or
and
iret
mov
dec
pop
add
pop
cmp
jle
push
add
das
sub
add
xor
add
loop
push
scas
js
popa
test
sahf
enter
adc
fdiv
mov
ficom
std
int
loopne
outs
(bad)
or
inc
test
hlt
or
sbb
and
cmps
jne
xor
aad
cmp
push
sub
fs
inc
mov
retf
pop
pop
xchg
add
aad
dec
pop
dec
outs
loope
inc
in
cmp
or
addr16
icebp
fbstp
loope
in
xchg
adc
in
sbb
pushf
popa
int3
xchg
mov
dec
mov
xchg
hlt
and
idiv
inc
jmp
pop
push
sbb
stos
outs
shr
add
xlat
dec
mov
das
jecxz
scas
mov
fwait
jnp
ficom
pushf
add
sbb
cwde
jmp
mov
xor
mov
push
pop
or
push
popa
mov
push
js
xor
inc
cmp
and
xlat
mov
xchg
dec
sub
call
push
mov
xor
loop
mov
cmps
in
retf
mov
daa
mov
mov
sahf
inc
or
(bad)
popf
push
xchg
mov
jbe
xchg
xor
jno
pop
inc
aaa
adc
jle
in
call
stc
hlt
(bad)
ret
mov
adc
and
arpl
loopne
ja
jbe
pop
into
jmp
add
cmp
and
dec
popa
imul
out
push
cmp
dec
sub
pop
push
gs
out
dec
hlt
out
jo
retf
shl
push
mov
fabs
push
adc
adc
pop
jg
pushf
inc
sbb
dec
xchg
int
inc
(bad)
pusha
push
cmp
pop
sbb
cdq
enter
adc
es
mov
cmp
add
pop
adc
pop
iret
pop
js
ret
push
add
xchg
mov
xchg
xor
scas
or
retf
mov
jmp
inc
call
sbb
jne
into
scas
cmp
push
push
adc
call
lahf
fisttp
sub
xchg
or
xchg
cmp
mov
cmp
sahf
in
mov
(bad)
sar
dec
bound
mov
js
or
por
push
inc
ins
cmp
and
pop
push
inc
(bad)
shl
daa
ficom
push
add
aad
xchg
add
mov
ffreep
mov
loopne
pop
repnz
inc
arpl
xor
sub
dec
add
mov
add
retf
addr16
fdivr
fisubr
xor
or
mov
mov
mov
push
movups
or
adc
adc
repnz
inc
mov
pop
dec
jnp
js
sub
jbe
mov
(bad)
xor
adc
mov
sbb
repz
xor
pusha
push
lds
outs
loopne
imul
repnz
out
and
pop
inc
push
mov
or
xchg
aas
push
mov
dec
shl
add
mov
and
mov
or
add
and
mov
xor
xchg
sbb
int
push
adc
es
test
fcmovb
add
out
(bad)
and
int
and
mov
or
ret
aaa
pop
and
rol
imul
adc
call
xor
inc
ficom
xchg
push
scas
daa
sub
stc
sar
ror
xor
mov
xlat
movs
aaa
ds
mov
stos
dec
in
push
enter
rcl
dec
fidivr
jp
daa
and
add
imul
mov
pushf
add
movs
dec
dec
out
sbb
call
arpl
imul
pop
cmp
xor
pop
add
daa
sub
sbb
xchg
mov
inc
mov
cmps
mov
(bad)
in
cli
or
pop
sbb
sahf
leave
retf
aam
inc
add
mov
xchg
fucom
cmp
test
inc
and
ins
jne
push
pop
sar
sub
test
dec
fisttp
(bad)
sub
pop
es
mov
pop
retf
sbb
lods
mov
or
fst
retf
retf
test
rcr
xlat
in
into
jmp
pop
push
mov
mov
and
mov
pop
daa
adc
xchg
jb
or
cmp
(bad)
push
and
add
jl
push
loope
jl
mov
jle
or
retf
jmp
dec
jne
ds
pop
hlt
outs
xor
add
mov
push
shl
xchg
daa
popf
mov
fld
xor
cwde
and
fldcw
clc
inc
sbb
push
adc
pop
repz
pusha
outs
out
in
scas
cdq
mov
sbb
lock
loop
fcomip
ja
adc
shl
cli
repnz
out
gs
pop
jg
mov
push
xor
add
mov
pop
repz
push
cmp
daa
ins
aas
adc
test
jmp
movs
fsub
sbb
outs
adc
mov
dec
movs
lahf
cs
mov
icebp
loop
sub
shl
mov
mov
adc
sbb
and
cmc
xchg
jg
fcmovbe
dec
jp
inc
inc
xor
adc
or
and
or
cmps
and
jl
and
dec
je
in
inc
fwait
sar
dec
fcomip
les
push
int
mov
sbb
sbb
out
popf
mov
lock
add
mov
and
mov
call
shl
sub
and
xor
adc
cmp
mov
fnsave
and
dec
jg
sbb
adc
xchg
repz
loope
outs
mul
fidiv
inc
mov
mov
mov
sbb
adc
sub
jbe
push
fidivr
pop
loope
es
push
out
repnz
add
mov
xor
adc
mov
jns
sub
fistp
hlt
mov
jnp
jl
dec
sti
cmp
clc
jae
pop
add
pop
cmp
adc
movs
sahf
or
in
loop
test
jp
ret
sar
sbb
mov
dec
inc
push
ret
aam
outs
push
sbb
sub
xchg
sbb
rcl
aas
pop
cmovge
add
push
les
imul
pop
(bad)
ss
pop
call
cmp
xchg
adc
adc
cmp
cmps
cwde
cmp
out
adc
int
add
out
pop
adc
es
fstp
push
adc
adc
sahf
das
out
xor
movs
arpl
or
loop
clc
push
sbb
mov
js
mov
push
mov
and
add
cld
movups
ins
js
loop
aad
cld
leave
stos
inc
or
jle
retf
sub
aam
inc
out
clc
(bad)
in
pop
out
(bad)
lahf
push
cmc
sub
fwait
add
sbb
idiv
sbb
clc
or
cli
pop
int
sti
jp
pushf
out
mov
out
fcom
jmp
xchg
sub
jmp
mov
fbstp
rol
inc
leave
sbb
sbb
sbb
push
push
(bad)
cmps
fstp
and
sar
loope
data16
pop
xor
sbb
(bad)
jmp
jp
add
sub
ss
int
movs
popf
enter
fcmove
outs
adc
repz
int
dec
movs
repnz
and
sub
iret
mov
std
fcmovb
or
(bad)
(bad)
sub
dec
(bad)
outs
xor
fcom
ror
cs
(bad)
sbb
sbb
jbe
sub
les
enter
or
push
adc
adc
push
mov
stc
loopne
xchg
aam
cmp
jge
lods
xchg
push
out
lahf
adc
sub
adc
jne
xor
dec
stc
movs
push
jne
sbb
movsx
test
retf
ret
sbb
repnz
pop
call
(bad)
push
mov
mov
mov
ds
mov
push
(bad)
pushf
push
cmc
(bad)
mov
cmps
sbb
bound
add
int3
lods
mov
mov
lods
add
jmp
stos
inc
cmp
jbe
cs
adc
stos
scas
cmp
je
lods
sbb
pushf
stos
mov
lahf
loop
sbb
mov
cld
enter
lahf
mov
push
sbb
mov
sub
adc
cmp
mov
outs
dec
jno
sub
movs
out
push
les
sbb
xchg
mov
aad
stos
js
(bad)
sbb
adc
pop
and
cs
xchg
or
and
adc
mov
or
fcom
lods
cmp
(bad)
les
sbb
sbb
add
bound
adc
add
sbb
push
mov
cli
add
and
or
mov
retf
cmp
daa
int3
and
mov
xor
inc
scas
shrd
adc
mov
rol
jno
jmp
or
and
adc
add
adc
sbb
sbb
xlat
push
xor
repz
and
pushf
sub
xor
push
xor
stc
or
cmp
mov
inc
xor
cmp
out
pop
lea
(bad)
and
mov
or
sub
ret
xor
mov
mov
and
jnp
sti
aaa
inc
dec
fist
or
and
jns
and
add
out
pop
and
popf
adc
sub
sub
cmp
or
or
pop
bound
dec
popa
inc
mov
push
cmp
and
and
inc
dec
sub
and
(bad)
repnz
inc
adc
leave
pushf
inc
jl
clc
xchg
addr16
fldenv
and
outs
ret
imul
mov
into
push
or
add
outs
jl
sbb
and
adc
and
jecxz
jne
pop
jecxz
das
and
imul
sbb
push
adc
std
jo
xchg
cmp
dec
and
inc
outs
push
(bad)
pop
and
xchg
dec
adc
scas
xor
(bad)
jecxz
test
sbb
pop
cwde
dec
iret
cmp
jecxz
sbb
push
retf
push
test
inc
dec
cmp
cmovnp
stos
lds
adc
mov
gs
dec
aas
mov
ins
xor
fnstcw
cdq
push
jo
addr16
jmp
pop
(bad)
push
icebp
dec
lea
add
inc
scas
sub
sar
inc
mov
(bad)
pop
out
or
push
inc
jle
pop
jno
lock
daa
and
jnp
adc
dec
dec
outs
and
dec
adc
lods
jge
ja
lds
and
xchg
iret
dec
fnstcw
jg
jle
adc
adc
cld
nop
adc
sub
fmul
outs
or
retf
or
bound
add
sbb
jns
pop
lahf
or
and
nop
cmp
xchg
test
fwait
and
sbb
sub
and
clc
xor
(bad)
jae
cmc
je
or
out
jno
dec
inc
fisubr
fmul
dec
stos
add
dec
mov
loopne
clc
push
fucomp
mov
push
sub
test
or
(bad)
cmp
pop
jle
push
adc
adc
pop
adc
sbb
push
xor
xor
mov
mov
das
mov
stos
pop
rcl
ds
sti
cmp
or
adc
aas
ja
rol
aaa
jecxz
jns
xchg
fcmovne
out
or
leave
mov
pop
jge
add
adc
scas
inc
das
jmp
cld
jle
xlat
call
xchg
sbb
inc
and
xacquire
fwait
and
mov
std
jmp
mov
xor
adc
add
cmp
fdiv
adc
mov
loopne
sub
loop
mov
pop
add
pop
arpl
adc
fisub
test
icebp
pop
and
shl
es
iret
jp
xchg
adc
(bad)
ror
nop
push
xchg
push
sbb
rcr
jg
mov
ret
mov
hlt
xor
repz
cmp
dec
es
popa
icebp
mov
cli
jle
icebp
xchg
push
inc
scas
push
mov
jne
cmps
sbb
test
into
test
adc
jl
jecxz
fnstsw
popf
stc
jle
sub
lods
cmp
xchg
mov
mov
inc
or
xor
pop
test
out
push
xsavec
pop
pusha
das
pop
mov
retf
aam
lods
add
popf
call
icebp
mov
or
or
adc
popa
data16
imul
mov
fld
dec
adc
adc
pop
out
jb
lahf
jne
ss
shl
sbb
jbe
adc
inc
int
clc
aaa
data16
mov
add
xor
push
sub
mov
cli
lods
jo
xchg
(bad)
not
inc
(bad)
test
or
and
cwde
mov
jo
lea
adc
or
out
fst
pop
lea
mov
push
cmp
fisubr
jl
mov
(bad)
lea
sub
fmul
and
sub
loop
xor
pop
fcom
loopne
jo
mov
or
push
or
push
cmp
cmp
sti
push
dec
pop
(bad)
mov
mov
mov
retf
mov
lahf
push
sbb
mov
push
fisttp
and
cmps
xchg
mov
cmp
mov
icebp
nop
lods
movs
imul
in
rcr
push
push
sbb
sbb
lock
add
jmp
(bad)
mov
int3
popa
fsub
bound
dec
mov
jno
and
es
xchg
pop
mov
retf
fistp
lods
pusha
dec
add
clc
iret
imul
call
push
adc
sar
mov
shl
pop
sbb
adc
cmp
jg
mov
mov
jp
cwde
cmp
sub
xchg
cmp
mov
or
lock
jle
pop
mov
inc
in
push
mov
ss
fbstp
in
outs
add
inc
retf
adc
inc
jmp
jmp
js
sahf
xor
(bad)
sub
jb
outs
push
adc
adc
inc
pop
(bad)
mov
inc
imul
movs
mov
adc
pop
mov
mov
or
sub
(bad)
jnp
inc
mov
lock
xchg
loope
js
loopne
(bad)
outs
loop
push
add
out
test
dec
enter
jp
adc
mov
cmp
jmp
add
pusha
repz
mov
pop
add
idiv
mul
push
stc
fwait
add
imul
add
or
mov
adc
xor
xchg
call
pop
or
daa
sbb
mov
test
adc
xlat
mov
sti
add
mov
mov
sub
and
mov
cmp
shl
adc
sub
ins
pop
dec
dec
(bad)
dec
dec
sbb
pop
imul
pop
push
adc
mov
sub
pop
jge
loop
repz
dec
test
sbb
lods
jge
and
mov
inc
aas
mov
retf
inc
or
movs
dec
and
sub
inc
push
push
in
jmp
jne
adc
jl
and
aas
pop
pop
div
stc
mov
dec
lea
clc
inc
inc
xchg
leave
xlat
mov
mov
adc
arpl
pop
add
aad
inc
outs
ins
out
dec
pop
jmp
push
sbb
or
inc
cwde
dec
xor
xchg
cli
adc
(bad)
std
dec
sar
jmp
sbb
rol
imul
out
mov
xchg
outs
sbb
sbb
or
adc
addr16
out
pop
cmps
pop
fisubr
mov
inc
push
mov
inc
pop
adc
push
pusha
xchg
push
sti
ins
aas
ret
mov
adc
movs
call
repnz
mov
push
int
xchg
or
sub
xor
xor
mov
fwait
and
pop
pushf
outs
mov
mov
push
add
inc
cld
mov
and
icebp
fistp
hlt
xor
lds
lahf
push
adc
iret
xchg
dec
sub
cmp
add
xor
loopne
xor
jae
cmp
xor
pop
pop
mov
dec
rcr
fs
jo
dec
adc
data16
dec
push
pop
(bad)
push
sbb
adc
adc
sbb
mov
inc
sti
xor
(bad)
xchg
xor
loopne
jnp
iret
imul
xchg
jecxz
mov
add
js
repz
ret
xchg
cli
js
or
jnp
adc
repz
xor
out
add
adc
mov
neg
loopne
adc
(bad)
scas
sub
and
pop
sbb
add
aaa
lahf
mov
sub
xchg
popa
push
adc
mov
push
push
pop
loope
push
or
cs
xor
cmp
sub
mov
push
stos
jbe
sub
mov
lods
dec
fld
inc
idiv
mov
in
mov
sub
add
inc
cwde
xor
adc
ror
dec
rol
sub
mov
mov
sbb
clc
mov
enter
scas
jmp
inc
inc
in
into
into
pop
stos
jl
pop
popf
out
daa
add
adc
adc
cmp
retf
addr16
jae
dec
mov
sub
mov
ja
popa
out
clc
push
add
add
int
loope
pusha
jmp
mov
or
loopne
pop
rol
inc
neg
pusha
xor
je
and
test
push
ss
repnz
jne
ss
sbb
xchg
jbe
add
sbb
outs
dec
clc
xor
int
xchg
adc
add
or
std
mov
and
(bad)
retf
sar
or
add
stc
test
mov
xor
mov
or
sar
pop
ss
mov
mov
xchg
sti
adc
mov
or
adc
mov
or
sbb
pop
inc
inc
inc
cmps
es
ins
mov
pop
add
dec
push
pop
cmc
xor
dec
jl
add
pop
dec
pop
addr16
fcom
pop
rcr
cmp
inc
adc
pop
add
jmp
jp
in
fnsave
imul
sub
(bad)
cli
add
adc
mulps
hlt
int3
pushf
jmp
sbb
jmp
mov
pop
pusha
mov
adc
add
sub
aaa
daa
push
mov
or
xor
inc
movs
out
inc
mov
imul
and
dec
lds
adc
mov
pop
xchg
mov
cmps
ins
aad
aas
scas
fld
loope
arpl
loopne
push
adc
imul
outs
jmp
dec
les
test
mov
aam
mov
cmp
sbb
or
jmp
ja
or
mov
inc
dec
xchg
test
sbb
pop
add
add
and
xor
adc
xor
test
inc
stos
mov
adc
mov
fmul
add
add
in
lahf
and
rcl
sub
xchg
sbb
sbb
dec
(bad)
or
sbb
dec
lods
inc
fidivr
ret
pop
imul
push
(bad)
pop
cmp
pushf
sbb
or
sub
xchg
cmps
xor
xlat
adc
mov
push
cmps
sbb
adc
rcr
int3
push
leave
pop
les
pop
into
or
sub
inc
cmp
into
push
push
cmps
jmp
jge
imul
adc
js
mov
jmp
lods
sub
mov
xor
sbb
mov
adc
and
mov
inc
pop
cmc
pcmpeqw
jb
and
mov
xor
pop
push
adc
pop
rdpmc
data16
adc
dec
xor
stc
clc
out
jmp
lds
push
mov
mov
push
adc
dec
(bad)
div
sub
mov
jnp
pop
in
js
add
inc
and
les
test
adc
adc
inc
ror
inc
dec
shl
sbb
adc
pop
xchg
adc
bnd
fwait
shl
sbb
adc
xchg
mov
push
(bad)
les
dec
call
test
or
push
ja
jns
xchg
popf
xor
add
sbb
and
inc
mov
das
pop
shl
lds
sbb
call
sbb
(bad)
data16
int3
addr16
std
loop
adc
sti
pop
and
add
test
mov
out
mov
mov
aam
sub
test
or
ret
pop
call
pop
bnd
test
dec
mov
test
je
xchg
add
ret
hlt
nop
aaa
sub
fwait
mov
dec
js
std
cli
and
call
cmps
jns
test
pop
push
push
pop
adc
cmp
xor
pusha
sbb
xor
inc
xor
retf
push
sub
arpl
enter
repz
mov
pop
mov
test
int3
retf
mov
fcomp
xchg
xor
mov
pop
mov
jmp
pop
dec
mov
inc
push
inc
adc
jb
and
es
sbb
add
daa
adc
mov
cdq
inc
jg
mov
aam
outs
fst
fdivrp
cli
pop
jmp
add
jmp
xor
mov
jo
xchg
cmp
or
add
mov
push
jl
mov
imul
sbb
sbb
cmc
sbb
mov
std
scas
xchg
adc
cmps
xchg
pop
or
(bad)
xor
addr16
add
pop
(bad)
jge
or
xlat
mov
lahf
mov
lea
xor
stos
cli
mov
xor
outs
lea
(bad)
js
out
ins
pop
mov
adc
adc
push
pop
jp
dec
cmp
xchg
ss
mov
jge
in
retf
jmp
dec
icebp
adc
mov
cmc
aad
int
or
inc
mov
lock
dec
add
cmp
sub
lea
adc
vcvtss2sd
sub
js
sub
push
addr16
shl
xchg
inc
(bad)
xor
lods
into
mov
or
mov
ret
sbb
std
inc
push
push
hlt
jae
ja
adc
dec
sti
xor
cli
enter
hlt
pusha
ds
in
inc
mov
add
cs
sub
xchg
dec
out
mov
mov
pusha
sti
arpl
(bad)
mov
push
hlt
(bad)
daa
stc
sbb
xor
out
sar
mov
mov
or
lods
jmp
sti
lock
repz
icebp
fsub
dec
repz
sub
loopne
push
daa
out
and
mov
pop
fldenv
hlt
mov
lock
(bad)
fucomp
push
data16
pop
or
mov
fstp
and
into
loope
inc
shl
(bad)
out
cmp
and
sub
mov
les
test
cmp
int
lock
jmp
scas
dec
jbe
jae
push
fsub
test
pop
out
jmp
jnp
shl
retf
adc
mov
and
sub
sahf
int
outs
(bad)
retf
fst
rol
dec
es
sti
lahf
rcr
add
fcomp
cmp
add
leave
lds
addr16
sbb
aam
dec
mov
(bad)
je
rcl
mov
add
mov
jge
nop
js
xchg
repnz
xchg
and
into
(bad)
je
fwait
and
lahf
mov
push
add
pop
ret
inc
call
adc
loope
shr
sub
mov
mov
retf
xchg
jecxz
adc
xchg
inc
fwait
mov
outs
add
mov
iret
lock
or
neg
push
adc
cmp
pop
icebp
mov
mov
or
push
pushf
pop
mov
lods
inc
jg
push
dec
test
fild
addr16
mov
push
adc
sub
mov
or
(bad)
in
mov
(bad)
jmp
mov
pop
and
mov
aad
data16
fidivr
mov
xchg
xor
fnsave
jl
push
jg
scas
adc
mov
test
adc
push
mov
xchg
push
ret
out
ins
push
add
adc
xor
jns
add
adc
push
call
int3
mov
jmp
add
push
add
fisttp
movups
jle
push
dec
les
mov
das
xor
sbb
sbb
jnp
cmps
icebp
dec
adc
cmc
clc
(bad)
adc
and
jmp
add
(bad)
ficomp
mov
cld
sbb
pushf
dec
and
hlt
imul
dec
push
cpuid
sbb
sub
leave
lods
xor
(bad)
push
retf
add
sbb
xor
je
xor
retf
fdiv
ds
mov
sub
add
bnd
xor
xchg
es
and
xor
fdivp
test
stos
or
and
leave
aaa
xor
xchg
xor
movs
mov
sub
daa
and
in
xor
aaa
sub
daa
dec
xor
jb
ds
aaa
stos
out
mov
jae
mov
cmp
adc
dec
(bad)
je
mov
push
mov
jle
(bad)
jp
ret
inc
dec
mov
je
sub
pop
pop
jns
ja
push
cmp
pusha
test
data16
outs
push
push
adc
mov
dec
mov
jns
rol
push
mov
push
aad
xchg
pop
mov
jmp
xor
jns
fstp
bound
or
ins
test
pop
add
xor
jae
dec
test
hlt
aad
or
sub
lds
pop
sub
dec
pop
xchg
push
inc
adc
mov
mov
pop
inc
cmp
push
sbb
push
add
fst
mov
inc
pop
sar
repnz
cmp
add
inc
push
fs
add
add
cmp
in
pop
inc
mov
pop
push
and
xor
sti
pop
jmp
dec
fs
mov
adc
fbstp
jo
cmp
pop
push
jge
push
loope
jge
mov
and
sbb
push
dec
mov
sti
dec
inc
sbb
outs
mov
xlat
lea
and
lock
shld
test
stos
addr16
dec
add
sub
mov
adc
add
cwde
and
push
cmp
mov
add
adc
jmp
scas
dec
or
daa
sub
pop
scas
adc
xchg
mov
cmps
and
cdq
mov
(bad)
lock
dec
inc
add
add
sbb
outs
hlt
xor
ror
mov
retf
xchg
mov
dec
aam
fdiv
popa
xor
push
sub
xor
jge
mov
sbb
adc
xchg
jge
aaa
cmp
adc
gs
xor
ret
or
jb
mov
and
mov
(bad)
xor
outs
jb
mov
(bad)
mov
add
aam
jno
mov
mov
out
jne
lock
bnd
push
add
data16
imul
rol
pop
addr16
cmc
mov
adc
dec
movs
sbb
jg
add
add
mov
fld
mov
outs
inc
sbb
cli
mov
lock
mov
or
sub
jo
mov
sbb
dec
lea
ds
cmp
jb
test
xor
cmp
adc
add
adc
mov
sub
xchg
sub
es
push
pop
adc
jecxz
ins
sbb
and
jl
fwait
lea
(bad)
test
lahf
gs
pop
adc
loop
addr16
jnp
inc
loop
xchg
sub
or
xchg
data16
test
rcr
gs
iret
jg
adc
sub
and
mov
aad
(bad)
fdivr
mov
xor
xor
les
mov
ret
lahf
unpckhps
adc
mov
xor
mov
pop
inc
or
es
mov
xchg
or
shl
movs
mov
jle
dec
gs
jmp
imul
xchg
shr
paddsw
cmp
jbe
xchg
add
and
mov
repz
popa
mov
call
jbe
push
cmp
adc
jo
mov
jno
(bad)
dec
retf
add
in
fwait
push
or
and
xchg
push
test
dec
lock
in
iret
leave
dec
sbb
add
or
push
jge
les
int
sub
xchg
sbb
sbb
retf
sbb
or
imul
mov
outs
adc
or
mov
hlt
sbb
xchg
xchg
or
sahf
jl
or
cmps
xor
das
out
jl
xchg
pop
adc
sahf
wbinvd
cmp
push
fldcw
paddusw
pop
lahf
popa
test
in
xor
sub
push
add
not
loop
mov
or
pusha
jecxz
sub
mov
unpcklps
imul
call
or
lds
cmp
hlt
call
sub
daa
push
pop
sbb
add
jg
push
pop
rol
adc
or
mov
push
mov
add
or
stos
outs
clc
retf
pop
and
popa
ds
sbb
sbb
mov
out
dec
mov
cmps
dec
imul
add
dec
inc
inc
jmp
push
jl
sbb
sbb
xchg
in
iret
push
dec
jecxz
scas
sbb
adc
inc
cld
aad
scas
pop
push
retf
pop
or
mov
add
scas
sbb
inc
mov
hlt
mov
test
adc
xor
xchg
mov
scas
xchg
add
mov
cmp
or
loopne
add
push
mov
jb
(bad)
addr16
inc
movs
in
fwait
sub
imul
ret
adc
movs
dec
adc
jl
mov
arpl
xchg
leave
xchg
(bad)
pusha
cmp
adc
or
out
mul
pop
inc
cmp
aam
mov
jnp
cli
mov
cdq
mov
cmp
jno
or
call
jno
cli
in
add
lds
test
cwde
inc
or
hlt
jnp
jl
int3
fsub
push
nop
mov
dec
pop
inc
push
into
xor
xor
add
cmc
jmp
xchg
loope
scas
int3
popf
push
dec
outs
sar
(bad)
xlat
mov
test
shl
add
es
add
ffree
add
push
xchg
xchg
mov
call
pushf
ja
and
call
fidiv
sub
mov
mov
xchg
mov
jle
sub
xchg
repnz
daa
jb
cmp
add
dec
ds
sub
xchg
lahf
in
shl
aaa
adc
mov
(bad)
mov
ret
adc
(bad)
das
test
xchg
adc
xchg
add
(bad)
ins
push
mov
lods
test
stc
rcr
call
mov
aam
rcr
icebp
push
fldenv
add
in
loop
out
arpl
cld
(bad)
sti
fsubr
gs
in
lock
loop
jbe
nop
mul
cld
in
in
fstp
imul
inc
(bad)
(bad)
rcr
out
daa
jo
xchg
sti
(bad)
in
in
repz
and
jb
and
inc
mov
in
repnz
shl
jbe
nop
popa
jecxz
loop
lock
fsubr
sub
(bad)
cmc
int3
loope
aam
and
add
jmp
cmc
jmp
pusha
ins
xor
movs
adc
into
mov
or
ja
out
lock
out
stos
jae
ret
adc
pop
call
in
cmp
shr
shl
fucom
std
aaa
js
mov
loopne
sti
mov
mov
call
fisubr
push
add
mov
repz
loope
ret
and
out
out
cld
jmp
mov
mov
pop
mov
dec
mov
out
repnz
cli
into
rcr
lock
in
out
push
xchg
popa
call
std
cdq
out
or
pop
shr
cmp
mov
aam
xor
shr
icebp
in
sar
cli
jecxz
out
mul
push
in
jnp
mov
call
leave
jbe
xchg
jmp
push
mov
cmp
ss
aaa
icebp
fsubr
(bad)
enter
in
repz
fucomi
sbb
icebp
imul
js
xchg
outs
jmp
cmp
(bad)
out
mov
pop
repz
pop
std
push
fcomp
(bad)
cmc
xchg
sub
mov
in
loop
cwde
ret
test
cld
icebp
jmp
fisubr
pop
lock
xrelease
xor
lock
vpmaxub
jg
loop
adc
mov
jmp
iret
movs
xchg
aad
or
sub
idiv
jmp
inc
add
loop
cwde
in
rdpmc
bound
sti
in
out
pushf
es
mov
call
shr
ss
add
out
cli
test
cmp
jmp
mul
in
add
push
xchg
add
sti
out
sbb
push
adc
aas
retf
cld
out
in
xchg
mov
push
stos
mov
std
jecxz
rcl
mov
vpminsw
push
sub
imul
aaa
jecxz
push
xor
out
(bad)
retf
gs
push
call
xlat
mov
xlat
int3
(bad)
loopne
xchg
jnp
test
loop
jmp
cld
es
jbe
call
mov
pop
xchg
out
or
in
dec
jmp
aam
sbb
cmp
std
mul
test
icebp
(bad)
aam
cmp
in
in
rol
arpl
icebp
jmp
pop
push
mov
xor
jo
pop
retf
mov
in
xlat
out
sti
lea
jmp
in
neg
cmp
and
(bad)
aam
ss
in
jmp
int
hlt
sbb
sub
cli
scas
movs
pop
dec
or
pop
out
cmp
les
loope
icebp
or
add
(bad)
iret
and
out
in
xchg
out
shl
enter
push
cmp
(bad)
(bad)
xchg
ins
cmp
clc
(bad)
int
les
adc
fcmovnbe
cmp
rol
in
xor
xchg
retf
(bad)
loope
fdiv
mov
out
aad
fisub
ror
rol
add
into
(bad)
xor
dec
cmp
xor
out
std
(bad)
and
mov
out
add
fisubr
fidivr
clc
retf
mov
out
dec
cli
fldenv
adc
outs
cmp
mov
clc
add
je
bound
mov
es
xor
outs
loop
inc
leave
lock
(bad)
stos
or
out
mov
or
shl
int
add
leave
mov
sub
cmp
jle
mov
pop
pop
arpl
jo
mov
mov
jae
rcr
mov
jbe
mov
popa
add
in
(bad)
ffree
or
frstor
xchg
fadd
pop
mov
ins
mov
jecxz
xchg
cmp
dec
gs
mov
jmp
mov
or
(bad)
xor
xor
cli
jmp
aad
dec
leave
mov
or
not
je
loop
test
jns
int3
iret
scas
outs
xor
ja
jecxz
or
cmps
in
sbb
js
imul
retf
xor
push
sbb
and
in
gs
out
or
cli
xor
xor
cmps
enter
push
fcmove
mov
pop
add
cmp
adc
out
fisttp
and
jmp
and
fidivr
sub
xor
mov
xchg
jge
scas
call
dec
mov
loopne
cmp
xchg
mov
push
ds
shl
inc
push
out
pop
push
jmp
mov
add
fdiv
loop
or
pop
mov
scas
icebp
add
pop
or
fdivr
shr
xchg
or
call
or
sub
pop
push
stc
ins
or
sbb
std
in
icebp
shl
call
nop
outs
(bad)
pop
(bad)
ffreep
sahf
shl
std
scas
jmp
or
inc
mov
mov
sbb
rcl
ins
call
jge
(bad)
push
xchg
push
cmp
or
inc
push
jo
int
stos
addr16
fnstcw
cmp
cmp
cmp
loope
fstp
add
jmp
sub
dec
mov
jmp
cmc
leave
out
out
inc
push
jmp
ja
cld
sahf
fmul
pcmpeqd
xchg
push
retf
(bad)
data16
pause
jmp
mov
push
aaa
xchg
lds
loop
movs
mov
repnz
or
nop
xor
sbb
shl
xor
in
rcl
sub
(bad)
in
ret
or
(bad)
movs
shl
mov
es
cmp
lea
leave
imul
adc
sbb
or
lock
ins
out
rcl
icebp
icebp
jnp
cmp
adc
loope
ret
pusha
fld
pop
jmp
inc
cmp
jecxz
or
or
sar
loope
loop
sbb
mov
pop
mov
xor
stc
aam
mov
aad
jp
inc
(bad)
sub
jmp
ins
or
out
scas
in
dec
mov
hlt
fsub
stc
mov
shr
scas
dec
scas
repnz
daa
or
cmc
imul
mov
pusha
jo
in
dec
push
pop
xor
cdq
adc
and
test
push
xchg
js
jo
outs
fild
(bad)
in
jae
pusha
lods
call
lahf
imul
xor
or
dec
fnstcw
outs
add
fidiv
sti
ja
scas
push
inc
repnz
mov
test
rcr
cli
pop
dec
movs
jl
in
cmp
out
std
fimul
shl
popa
in
pop
xchg
mov
dec
shl
mov
repnz
lock
ret
icebp
ins
mov
stos
in
add
in
test
mov
cld
mov
mov
cmps
jmp
std
mov
jmp
std
fidivr
xor
stos
nop
pop
shr
mov
mov
mov
aam
test
mov
iret
out
or
out
daa
sub
popa
sub
jo
mov
xchg
loope
pop
push
test
mov
mov
pop
jnp
pop
dec
mov
fiadd
clc
into
iret
pushf
push
push
inc
clc
(bad)
jbe
repz
pop
xchg
push
(bad)
(bad)
ret
fdivr
add
sub
sub
cld
push
ja
es
popf
ins
jecxz
les
enter
(bad)
aam
mov
cwde
mov
and
repz
lods
(bad)
aam
mov
mov
stc
fiadd
or
mov
cmp
mov
mov
and
std
dec
mov
jl
fdiv
adc
add
ret
in
cmp
ret
push
out
shl
repz
sahf
daa
push
cmp
xchg
fstp
std
sbb
mov
neg
sub
loopne
inc
out
add
mov
add
mov
xlat
int
stos
nop
xchg
mov
scas
push
retf
in
push
(bad)
dec
mov
std
fisub
fimul
pop
hlt
(bad)
in
adc
fdiv
(bad)
psrlq
pop
mov
jmp
mov
imul
mov
inc
pop
pop
shr
jo
nop
ins
mov
mov
xor
lock
mov
lock
scas
jp
cld
adc
xor
dec
pop
mov
cmc
imul
in
es
dec
xor
(bad)
cli
icebp
inc
pop
add
cs
cmp
jns
mul
xor
lock
movs
xor
std
sub
jmp
xchg
test
inc
aam
cmp
sti
shr
test
ds
test
xchg
mov
fsub
xchg
in
mov
aad
jnp
fild
mov
inc
pop
popa
fdivr
pop
sub
cmp
shl
test
push
loope
aam
jmp
ret
cmp
jmp
mov
jae
jl
xchg
shr
pop
ret
popf
sub
mov
nop
ret
mov
xchg
adc
fwait
or
mov
cli
out
clc
bound
xor
data16
jmp
(bad)
fistp
mov
icebp
jg
xchg
mov
mov
les
pop
ins
test
mov
shl
fdiv
aam
test
stos
out
sub
jno
das
sbb
sub
mov
outs
nop
jp
mov
inc
(bad)
jo
mov
loopne
pop
xchg
cmp
in
mov
icebp
cwde
clc
push
movs
cwde
mov
popf
gs
arpl
mov
mov
daa
mov
xchg
jp
cld
sbb
popf
push
mul
pop
enter
pop
mov
add
daa
(bad)
(bad)
mov
sbb
dec
pushf
mov
cld
shl
pop
out
sbb
sahf
gs
cmp
dec
xor
scas
push
pop
jmp
xor
bound
mov
cmps
retf
scas
jp
push
mov
pop
aaa
mov
loop
int
mov
(bad)
jmp
mov
fucom
xor
(bad)
jge
(bad)
mov
arpl
inc
sub
int3
out
cmc
pusha
dec
sbb
inc
push
shr
(bad)
jmp
imul
fucomp
dec
xchg
sar
sub
(bad)
out
sahf
(bad)
cmp
mov
lods
xchg
fld
ins
jb
nop
sbb
dec
stc
inc
mov
xor
repnz
int3
ficom
fwait
cmp
call
fadd
xchg
(bad)
leave
xchg
xchg
clc
cmc
clc
sub
aaa
pop
dec
in
in
xlat
mov
mov
mov
dec
push
mov
aas
les
xchg
aam
push
sbb
push
sbb
cmps
(bad)
int3
rcr
scas
lods
sbb
mov
pop
fucomp
jne
daa
mov
xor
fldz
stos
lods
movs
xchg
test
xor
sahf
add
push
jle
jo
mov
adc
sti
adc
or
jmp
sbb
mov
cld
pusha
arpl
mov
add
mov
sar
ss
hlt
mov
popf
ret
jmp
add
jno
aas
and
push
cdq
push
jecxz
test
adc
in
cmps
bound
cmps
mov
js
inc
push
dec
pop
pusha
and
iret
repnz
jmp
jae
inc
pop
nop
mov
loopne
lea
(bad)
jecxz
adc
test
jnp
call
cmc
xchg
cli
aas
stc
xchg
pop
aam
ret
ins
and
fadd
sub
ins
ins
xor
xchg
pop
test
gs
imul
enter
in
ror
xchg
xchg
lea
pop
sar
mov
scas
fdivr
inc
je
mov
jmp
mov
sbb
xchg
pop
sbb
lods
sahf
mov
lea
pop
enter
cmp
jns
std
aam
icebp
dec
xchg
push
mov
(bad)
mov
int
and
and
pop
or
stc
mov
(bad)
call
out
data16
xchg
xor
pop
jmp
lods
lea
mov
repz
push
out
adc
loope
mov
(bad)
fidivr
aad
mov
xchg
push
dec
pop
mov
clc
test
dec
es
stos
(bad)
out
fimul
mov
xchg
jmp
iret
in
(bad)
or
jecxz
mov
or
jmp
hlt
dec
cmps
cmp
gs
stos
daa
js
stc
inc
shr
cmp
or
call
mov
dec
ret
inc
lds
push
pop
fcmovnb
retf
in
xor
in
iret
fwait
jns
sti
fs
mov
or
ror
leave
dec
in
pushf
sub
hlt
mov
es
sub
in
cmp
mov
imul
icebp
pop
in
test
cmp
sti
pop
rcr
into
cmps
cwde
cmp
pop
inc
imul
lock
mov
dec
xor
dec
hlt
push
test
std
jge
lock
add
cmps
and
cmps
xchg
jb
xchg
rcl
test
hlt
dec
jno
out
hlt
in
rcl
int3
fs
mov
sbb
jg
cmp
repnz
mov
mov
pop
dec
push
(bad)
cmc
daa
pop
jmp
fcmovnbe
shr
adc
xor
adc
ret
adc
pushf
dec
jmp
mov
bound
jmp
xchg
shl
aam
sti
mov
imul
mov
les
xchg
mov
ins
xchg
ja
pop
pop
inc
out
lahf
je
fnstcw
add
test
test
aas
js
mov
fs
sub
sbb
xchg
(bad)
xor
and
(bad)
cmc
(bad)
movs
adc
fstp
scas
mov
push
lods
call
mov
mov
retf
leave
ret
mov
stos
mov
shr
imul
xchg
inc
repz
les
lahf
sahf
stos
mov
in
adc
retf
rdtsc
stos
mov
add
or
sbb
sbb
fstp
mov
lods
into
adc
add
pushf
sar
push
xchg
and
loop
stc
retf
shl
in
dec
jne
call
or
pop
shr
shr
pop
repz
xchg
xchg
sub
daa
push
in
fstp
cmp
or
sub
cmp
add
in
fs
cdq
leave
sub
and
mov
xchg
sbb
xchg
repz
aam
cli
movs
jno
lahf
fsubr
inc
mov
and
xlat
fisub
sahf
repz
stc
xchg
push
lods
(bad)
xchg
mov
push
ins
pop
out
aad
mov
scas
shl
dec
jne
popa
jecxz
enter
push
mov
aas
mov
movs
and
add
gs
sub
sahf
loope
(bad)
test
(bad)
mov
jp
ret
jmp
test
xchg
stos
lods
mov
mov
mov
cmps
xchg
aam
and
and
add
mov
jno
sbb
loope
fbld
test
repz
inc
pop
shl
pop
lds
aad
jns
cmp
fisttp
mov
fistp
in
mov
mov
adc
push
out
out
cwde
fmul
xor
cdq
popf
stos
pop
mov
sub
mov
div
cdq
fwait
mov
sbb
xchg
icebp
jmp
lock
(bad)
in
(bad)
xchg
cmp
inc
(bad)
jmp
sbb
ds
mov
out
lock
jmp
movs
xchg
fsub
cmc
and
lods
inc
sti
xchg
jecxz
jp
mov
or
stc
mov
(bad)
cmp
cmc
outs
in
mov
leave
loopne
ja
cli
mov
jns
push
movs
retf
jb
jnp
aad
dec
jl
movs
jle
or
into
iret
push
lods
jg
aas
mov
mov
aas
sub
and
or
mov
fidivr
mov
(bad)
mov
and
jecxz
push
aaa
stos
int
cmp
cmp
mov
adc
mov
(bad)
mov
je
stc
push
imul
out
in
jecxz
dec
stos
mov
in
dec
push
jp
cmps
ja
push
pop
dec
jg
xchg
push
mov
pop
shl
cmps
outs
push
out
inc
les
int
retf
jp
scas
push
popf
mov
xor
pop
in
push
mov
and
dec
and
out
test
mov
mov
mov
add
sbb
fist
ja
mov
dec
(bad)
push
cwde
in
sub
xor
pop
cmp
in
mov
jo
(bad)
xlat
mov
(bad)
cli
pop
mov
pop
loopne
sbb
add
pop
int
mov
cmp
adc
mov
aam
xchg
xchg
mov
std
mov
out
sti
push
loop
in
lock
in
std
push
jne
mov
adc
and
stos
mov
mov
inc
inc
cmp
dec
popa
xchg
mov
add
loopne
std
push
shr
into
xor
loopne
call
mov
fisttp
in
cwde
icebp
stos
xchg
loopne
dec
sti
push
sar
in
call
xor
xchg
popf
fs
xchg
and
aam
sbb
inc
xchg
cli
jns
inc
rcl
pslld
das
inc
stos
cld
mov
sub
xchg
xlat
jbe
mov
(bad)
int
call
std
jmp
in
out
add
fdiv
loopne
sti
cld
loope
loopne
(bad)
sbb
adc
mul
sti
loop
lds
xchg
jmp
mov
cmc
loope
cli
into
(bad)
retf
lock
in
adc
sbb
or
in
fadd
arpl
stc
gs
cmp
stos
jmp
out
sbb
cmps
pop
fimul
adc
or
shr
retf
ret
hlt
in
retf
in
jmp
(bad)
cld
test
push
add
rep
fxch
or
in
stc
sti
mul
out
in
hlt
out
in
icebp
push
cli
out
or
(bad)
fdivr
int
fmul
sti
lock
call
and
push
sub
pop
adc
or
out
cmp
clc
in
mov
sbb
lods
jecxz
jmp
test
or
repz
mov
int3
cwde
ror
rol
int
adc
int
mov
in
loope
add
out
mov
repz
repnz
repnz
in
loop
jecxz
in
daa
test
bnd
adc
iret
rcl
mov
shr
inc
mov
clc
in
or
data16
mul
cwde
add
lmsw
into
mov
push
aad
push
cmps
repnz
jmp
pop
retf
retf
xchg
mov
(bad)
in
pop
into
adc
sbb
out
add
sbb
shr
fucompp
inc
xchg
fisttp
call
fcom
sbb
repnz
adc
out
or
push
mov
mov
test
ret
loope
fbld
mov
add
iret
nop
not
(bad)
(bad)
hlt
hlt
and
outs
jmp
stc
loopne
xlat
cmc
stc
ret
icebp
mov
in
retf
repz
mov
cld
fiadd
shl
lock
cli
lods
jno
stc
out
sti
out
(bad)
clc
loope
call
add
neg
fsubr
rol
ret
sbb
stos
mul
repnz
fabs
loope
xchg
aas
xchg
out
repnz
dec
or
mov
pushf
dec
add
aaa
xchg
imul
fld
push
stc
aam
out
rol
es
test
and
sbb
int3
icebp
cli
jmp
cld
cmc
fucomp
outs
es
and
stc
xchg
div
pop
add
stos
stc
out
mov
push
mov
iret
(bad)
cmp
xchg
sbb
(bad)
mov
xor
loope
in
add
jmp
out
fsub
cld
(bad)
jmp
cld
imul
(bad)
int3
add
inc
lock
lods
loop
(bad)
fdivr
lock
int
xor
fcom
aaa
jmp
leave
jmp
loopne
and
icebp
lods
out
in
jecxz
loope
out
test
mov
cld
movs
cld
(bad)
push
fsubr
(bad)
stos
pop
dec
and
call
clc
div
clc
jnp
adc
mov
stos
xlat
sbb
rdtsc
mov
ja
jmp
jmp
cld
mov
int
pusha
ss
cdq
sti
(bad)
loopne
neg
sbb
out
aad
fistp
(bad)
loopne
mov
js
mov
lock
loopne
call
sar
mov
retf
leave
sub
mov
in
cdq
xor
xchg
mov
add
scas
out
aad
push
mov
in
aam
retf
test
xchg
xlat
in
iret
repnz
test
fcom
push
pusha
ret
call
add
dec
or
pop
loopne
sub
hlt
test
out
iret
out
mov
and
or
sub
(bad)
repz
call
jmp
dec
push
xor
dec
stos
pop
xchg
movs
scas
mov
or
jmp
cmp
int3
int
jecxz
in
cli
std
mov
and
ret
and
cld
and
vpsrlw
cmp
push
adc
fcom
sar
retf
nop
call
mov
and
repz
in
repnz
enter
sbb
repnz
sub
(bad)
cld
aam
xchg
mov
jp
icebp
mov
rol
in
les
shl
sbb
sbb
es
sbb
jmp
out
cli
lods
shr
jmp
enter
test
mov
rol
push
pop
inc
sbb
mov
test
sub
mov
out
(bad)
sub
loope
call
in
dec
out
sbb
adc
cld
rcl
(bad)
ret
rcr
scas
std
mul
fucomp
icebp
clc
in
retf
stc
repz
pop
or
loope
jmp
sti
stc
(bad)
cld
in
repz
xor
lds
ret
sub
jmp
out
and
icebp
(bad)
iret
sti
(bad)
repz
adc
test
ret
out
in
enter
out
and
sbb
loopne
cmps
jecxz
push
xchg
enter
in
sbb
stc
hlt
(bad)
fcomi
dec
stos
outs
test
mov
out
cmc
out
xchg
sti
(bad)
jmp
lock
push
push
in
lock
leave
icebp
out
std
div
mov
loop
loop
jl
pop
mov
xor
(bad)
sub
ds
inc
inc
rol
call
int3
cmp
iret
aaa
in
jmp
mov
or
imul
cli
mul
in
aam
ja
jbe
mul
inc
lock
xchg
inc
test
inc
or
push
lods
test
sbb
in
(bad)
xchg
sbb
mov
std
add
std
loopne
sub
fldcw
scas
dec
inc
mov
out
mov
fcmovne
fidivr
shl
in
pop
cld
mov
retf
rol
repnz
call
inc
loopne
imul
pop
imul
sub
xchg
push
fld
xchg
xlat
shl
mov
div
loope
push
add
clc
aas
cli
add
outs
dec
test
mov
aad
sbb
push
(bad)
out
(bad)
(bad)
xchg
sti
(bad)
in
jmp
or
imul
es
xor
test
mov
test
lock
idiv
sti
xchg
ffreep
push
into
aaa
shl
ins
sub
inc
or
out
xchg
and
pop
jg
fwait
fs
clc
(bad)
adc
inc
fbld
push
jmp
mov
pop
jno
mov
in
std
jmp
stos
test
in
cld
cli
or
ins
sub
aam
repnz
push
xchg
add
shr
jo
xchg
adc
jbe
movs
clc
rcr
out
lahf
xor
imul
mov
fnstcw
ret
es
rcl
shl
out
jg
cli
loope
sti
cld
jecxz
dec
add
cld
jecxz
test
pop
adc
mov
cmc
loopne
mov
(bad)
jl
clc
jmp
loop
fisub
repz
(bad)
aad
leave
(bad)
ds
jb
loope
jmp
shl
std
cmps
push
scas
dec
nop
mov
scas
mov
adc
dec
cmp
outs
out
mov
call
imul
fcomp
add
xchg
lock
sbb
jg
xchg
enter
xor
jmp
shl
clc
scas
jbe
mov
jno
fisttp
out
retf
daa
stc
mov
lock
adc
xchg
sar
hlt
in
(bad)
shr
loop
inc
sti
(bad)
pop
aam
test
jmp
fild
cmps
mov
hlt
push
aas
lds
call
shl
mov
stc
sbb
mov
lds
scas
or
mov
call
add
movs
or
hlt
rol
fcmovnb
jae
vandnps
into
xchg
enter
mov
fstp
leave
into
jmp
hlt
pop
ins
inc
xor
rcl
rol
stc
pop
inc
fcomp
popa
(bad)
and
stos
cmc
cmps
popf
out
shr
sub
(bad)
clc
out
bound
and
xchg
cmp
sbb
rol
mov
call
in
or
call
mov
add
loopne
jmp
out
cli
push
lds
mov
nop
icebp
push
leave
jo
retf
(bad)
loop
call
call
add
(bad)
push
shl
ret
dec
or
dec
push
(bad)
push
and
(bad)
out
ror
fcom
cmp
sub
sbb
fdiv
xchg
mov
fldenv
(bad)
aad
vcvtsi2ss
in
jmp
sub
bound
(bad)
out
call
xlat
in
mov
shr
cwde
loope
jecxz
leave
clc
fist
pop
outs
test
loop
loopne
(bad)
inc
lock
pop
lock
and
mul
sbb
in
sbb
out
mov
ret
sbb
(bad)
jp
(bad)
fxch
xchg
cmp
icebp
(bad)
es
jmp
rol
mov
xor
in
push
and
add
sbb
cmp
fidivr
fistp
div
mov
std
inc
(bad)
cmps
shl
cli
repz
out
stc
clc
enter
leave
dec
xchg
inc
frstor
in
or
addr16
in
sbb
fimul
(bad)
rcr
push
sbb
mov
movs
not
cmps
loopne
dec
movs
call
add
test
jg
imul
clc
leave
(bad)
sar
scas
rcl
adc
(bad)
adc
mov
out
loop
clc
pop
aam
cmp
cs
out
repnz
fadd
pop
adc
pop
fdivrp
add
jmp
in
retf
js
inc
xlat
ror
or
adc
pop
cs
mov
imul
xchg
xchg
int3
fcom
jmp
lahf
jmp
gs
adc
div
push
sub
faddp
in
and
inc
push
fxam
outs
xchg
ret
int
sar
(bad)
retf
hlt
sti
sbb
lods
fdiv
mov
icebp
out
idiv
xchg
in
repz
test
enter
stos
jg
sbb
stc
lahf
aam
retf
(bad)
call
cmp
int
data16
inc
(bad)
sub
neg
rcr
retf
push
xchg
or
push
jnp
(bad)
repnz
rol
lock
mov
stc
or
std
xlat
xor
rcr
into
sub
pop
ins
add
in
cmp
into
aam
xor
movs
loope
loop
push
iret
mov
xor
call
mov
stc
mul
imul
enter
mov
ret
leave
in
xbegin
adc
mov
push
loopne
mov
test
add
pop
jmp
cs
mov
mov
jmp
hlt
cld
aad
out
(bad)
mov
add
(bad)
(bad)
fcmovbe
not
test
(bad)
xchg
xlat
loopne
mov
les
jmp
(bad)
out
cld
lds
fbld
cli
fbld
rcr
fwait
hlt
mov
stos
push
stc
dec
mov
jl
iret
xchg
lea
addr16
(bad)
icebp
aam
sbb
icebp
daa
jge
std
(bad)
cmp
mov
mov
xor
add
out
xchg
jns
dec
xchg
clc
mov
std
in
ficomp
push
jmp
neg
adc
and
vpaddw
sahf
aad
neg
or
retf
fmulp
cmps
fist
add
test
neg
sub
rcr
dec
cmps
add
xlat
(bad)
jmp
fucomi
out
sar
rol
(bad)
fsubrp
shl
fcmove
gs
sar
(bad)
mov
push
push
mov
push
aad
xchg
mov
bnd
stos
addr16
add
jmp
jmp
lods
out
retf
in
ror
xlat
xor
retf
jecxz
leave
call
sbb
div
clc
mov
loope
test
cmc
in
adc
stc
in
or
loopne
jecxz
hlt
rcl
fist
out
fdivrp
enter
sahf
stc
xchg
cmp
out
jbe
hlt
retf
xchg
in
jmp
inc
cld
lods
adc
push
retf
in
cmp
mul
xchg
movs
jecxz
mov
and
add
cmps
cmp
mov
(bad)
jecxz
cmps
stos
lock
fsubp
(bad)
std
mov
sbb
cmps
into
retf
adc
adc
retf
leave
sub
shl
fld
xlat
mov
cli
dec
jmp
loop
jnp
sub
fcmovnb
mov
icebp
jg
lods
jmp
int
loope
in
sbb
dec
push
out
out
jge
and
loopne
test
rcl
call
mov
idiv
mul
into
fcomip
enter
jns
and
loope
cld
(bad)
in
in
in
repz
inc
add
(bad)
stc
in
clc
pushf
fisub
add
mov
hlt
not
pop
nop
mov
cli
mov
scas
leave
out
retf
fbstp
fimul
cli
das
sbb
std
aaa
shr
jmp
icebp
in
std
jmp
jmp
cs
dec
(bad)
sbb
lods
out
in
aad
repnz
pop
(bad)
out
(bad)
fistp
(bad)
rcr
lock
push
xor
loope
cmovno
int3
addr16
jle
stc
push
std
out
call
neg
div
in
cld
fsin
shl
in
xor
sbb
(bad)
sahf
out
scas
out
pop
mov
into
xor
sbb
jmp
sti
mov
imul
icebp
xlat
mov
inc
adc
in
jae
shl
out
dec
inc
sub
xchg
retf
aam
es
fimul
(bad)
mov
movs
(bad)
lods
ins
and
out
shr
cdq
rol
std
retf
in
ret
call
loop
ins
fcom
retf
in
push
shl
lds
repz
cmp
out
adc
add
(bad)
dec
xchg
dec
call
jmp
jecxz
dec
pop
pop
out
enter
(bad)
sub
and
repz
pop
pop
loope
icebp
fcom
mov
leave
fcmovne
rcr
jmp
xchg
cmc
cmc
loopne
std
fcmovnu
jmp
clc
jmp
sbb
ins
in
arpl
int
ret
adc
in
mov
adc
retf
icebp
mov
shl
int
dec
xor
retf
mov
repnz
mov
loopne
cld
call
hlt
call
test
jecxz
jmp
jmp
aam
int
mov
(bad)
dec
jae
xor
frstpm(287
loopne
gs
mov
jo
jecxz
ins
les
in
in
stc
fimul
inc
inc
outs
mov
into
call
xor
call
dec
ret
(bad)
shl
add
int
stos
rcr
(bad)
out
push
pop
mov
gs
repnz
faddp
mov
dec
cmp
in
mov
fistp
cmps
jmp
repz
push
hlt
hlt
mov
aaa
(bad)
cli
pop
in
hlt
cld
xchg
movs
ins
cli
clc
in
scas
outs
shr
push
vsqrtss
mov
cli
nop
push
jnp
adc
test
sar
sub
cld
loopne
sti
(bad)
out
fimul
mov
rcr
loopne
jo
adc
sahf
pop
retf
mov
cmc
add
mov
(bad)
arpl
pop
cli
in
cli
test
cmp
shl
mov
div
shl
lds
fadd
loope
mov
(bad)
cdq
inc
loop
imul
retf
loope
adc
cli
into
(bad)
fsincos
mov
(bad)
adc
imul
ret
sti
stos
(bad)
clc
jmp
sti
sbb
cmps
leave
shl
cmc
cmps
pushf
int
mov
rcl
adc
call
int3
push
repnz
icebp
fisubr
loope
loop
cli
jecxz
pop
fcmovnu
outs
cs
cmp
out
mov
pop
xchg
xor
hlt
in
lock
dec
xor
loop
sti
icebp
(bad)
cli
lock
shl
cld
loop
jecxz
cmp
test
inc
sub
stos
lods
ror
xlat
fsubr
push
cli
push
in
add
add
repnz
cld
ficomp
js
sbb
out
rcr
shl
ret
xchg
xor
jmp
shl
lock
xlat
cmp
out
jmp
cld
cli
or
loopne
inc
enter
cld
div
jmp
add
out
(bad)
fdiv
retf
push
fbld
ds
hlt
loopne
rcr
in
mov
pop
mov
std
push
or
jl
cli
jecxz
int
fs
aam
retf
lahf
push
cmps
mov
inc
fsubr
jnp
mov
xchg
fcmovnbe
in
sbb
std
lock
std
xlat
cli
lock
or
ror
jmp
adc
in
enter
inc
pop
loope
cwde
(bad)
cmps
js
add
push
xchg
xor
xchg
jmp
loope
rol
dec
in
idiv
iret
out
or
(bad)
mov
mul
mov
add
out
cmp
call
lfs
mov
sbb
repnz
rcr
push
xlat
jno
rol
enter
jecxz
je
xchg
mov
sbb
call
mov
push
aad
xchg
pop
inc
imul
loopne
loopne
cmp
out
les
sub
out
fisubr
pop
and
ret
(bad)
cld
loop
mov
sti
std
out
or
addr16
mov
in
mov
call
mov
lock
xchg
clc
loope
mov
push
out
sub
xchg
sar
push
(bad)
cli
lock
call
leave
dec
stc
call
mov
jmp
shl
iret
(bad)
stos
jmp
std
xor
xchg
icebp
cli
jmp
jecxz
jmp
jmp
mov
mov
(bad)
std
hlt
adc
out
iret
jmp
add
aaa
jmp
lahf
int3
mov
cwde
jmp
aad
lods
push
push
lahf
int3
fcomip
idiv
push
mov
push
cmp
out
leave
mov
out
push
stos
test
pop
hlt
pop
ficom
repnz
rcr
mov
cmps
add
cld
mov
neg
outs
and
hlt
imul
xor
jno
fdivrp
push
out
out
(bad)
in
pushf
xor
les
out
push
in
das
mov
pop
push
into
jmp
shl
xor
fist
cmp
mov
mov
xchg
mov
daa
scas
repnz
movs
(bad)
aas
test
rcl
jb
out
shr
test
mov
sar
xor
ins
sbb
pop
stos
movs
cmps
dec
movs
add
call
cwde
js
icebp
movs
add
and
stos
fdivr
out
inc
xor
or
out
cmps
outs
stc
fcom
fstp
in
in
in
repz
out
push
push
sti
jmp
out
push
icebp
into
add
mov
out
jp
jb
mov
jmp
ret
pop
cmp
popa
in
in
in
sub
adc
(bad)
xor
sub
and
sti
ins
pop
adc
xor
sahf
repz
cmc
jnp
or
div
or
fistp
pop
es
add
xor
mov
cmp
(bad)
idiv
sbb
(bad)
cld
lods
jbe
or
sub
in
xor
add
and
ins
repnz
adc
leave
or
mov
or
loop
cmc
and
cmp
jno
jbe
or
and
outs
add
or
sbb
jmp
adc
and
lock
fs
xor
out
das
loope
hlt
je
out
jle
cli
mov
jmp
or
mov
out
jmp
lods
leave
add
jmp
push
data16
mov
rcl
sbb
dec
adc
and
in
jp
addr16
ss
jmp
es
sar
sti
addr16
sbb
sbb
jnp
lock
jp
ficomp
pop
xor
adc
out
std
out
ds
imul
xlat
es
loop
ins
cmp
jp
sbb
aas
popa
rep
loop
fwait
aam
add
(bad)
pop
sbb
sbb
dec
adc
sub
push
pop
leave
cld
ss
fwait
ins
stc
js
jmp
cld
out
pop
out
add
add
sti
in
scas
mov
adc
jns
stc
lock
outs
frstor
nop
test
xor
jge
inc
sub
sbb
mov
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
fsin
lahf
add
ftst
stc
in
in
icebp
mul
jmp
lock
out
out
icebp
iret
test
leave
jmp
jmp
jmp
push
hlt
aad
repnz
out
std
(bad)
or
in
repz
mov
pop
out
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
ss
outs
std
fstp
(bad)
dec
jge
fldenv
in
shl
(bad)
sti
out
call
cmc
repnz
out
push
inc
call
in
(bad)
jmp
jmp
out
mov
sar
fstp
(bad)
(bad)
leave
aad
ftst
stc
sub
push
in
std
jb
sti
out
call
cmc
repnz
loopne
mov
jmp
(bad)
jmp
lods
repnz
in
test
cwde
fcomp
retf
stc
in
in
repz
jmp
es
repnz
mov
in
icebp
out
(bad)
jmp
out
jmp
std
icebp
hlt
in
out
out
out
std
fstp
(bad)
(bad)
ds
int
mov
jmp
std
out
sti
out
call
cmc
xchg
loope
in
icebp
out
(bad)
jmp
clc
stc
in
clc
xchg
in
in
out
out
out
std
fstp
(bad)
(bad)
enter
in
jmp
in
repz
jmp
cli
jmp
loope
out
icebp
out
(bad)
jmp
hlt
sar
out
(bad)
out
out
out
out
std
fstp
(bad)
(bad)
enter
jecxz
jno
jmp
(bad)
sti
out
call
out
sti
inc
hlt
loop
icebp
out
(bad)
jmp
hlt
jmp
loope
out
out
std
fstp
(bad)
(bad)
enter
idiv
in
push
push
mul
jmp
cli
jmp
pop
imul
icebp
out
(bad)
jmp
hlt
jmp
hlt
cmc
out
out
std
fstp
(bad)
(bad)
enter
cdq
jmp
jmp
cli
jmp
out
cld
imul
(bad)
jmp
hlt
jmp
out
out
jge
fcmovu
jbe
fmul
gs
in
(bad)
loop
cmp
out
sti
xor
std
jmp
loope
out
icebp
out
call
in
in
(bad)
jmp
push
clc
(bad)
out
div
in
out
bnd
std
fstp
(bad)
(bad)
aad
ftst
stc
fcomi
jmp
jmp
scas
loope
sti
out
in
cdq
cli
clc
jmp
repz
loope
out
out
std
dec
int3
rcr
(bad)
aad
inc
lock
in
in
repz
out
call
mov
enter
mov
or
out
xchg
nop
test
ror
adc
movs
mov
and
mov
mov
xchg
xchg
mov
mov
xchg
xchg
(bad)
(bad)
mov
or
mov
mov
mov
add
test
sahf
xchg
out
xchg
mov
xchg
cdq
adc
repnz
test
idiv
lea
fwait
mov
mov
enter
cdq
repnz
stos
mov
xchg
cdq
pushf
test
jmp
(bad)
lahf
test
cdq
xchg
lods
adc
fadd
stos
mov
mov
in
stos
(bad)
mov
cdq
xchg
call
test
or
mov
xchg
lahf
lods
out
std
fstp
mov
test
jmp
mov
xchg
cmps
out
out
nop
lea
mov
clc
out
imul
movs
sbb
mov
xor
jmp
mov
cwde
mov
out
mov
xchg
mov
(bad)
jmp
out
movs
xchg
cdq
mov
xchg
pushf
mov
stos
lods
aad
fnstenv
mov
mov
scas
call
mov
sti
out
mov
cmp
mov
clc
test
xchg
mov
(bad)
fldcw
mov
not
sti
out
call
stc
repnz
out
shr
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
(bad)
(bad)
enter
in
in
in
repz
jmp
cli
jmp
out
out
icebp
out
(bad)
jmp
hlt
jmp
out
out
out
std
fstp
dec
inc
inc
push
sub
jnp
jno
jb
push
popa
pop
add
push
push
pop
or
sbb
push
or
sbb
push
pop
add
sbb
or
and
cmp
sub
add
sbb
sbb
adc
pop
adc
sbb
adc
or
adc
or
push
pop
adc
push
or
push
or
adc
sbb
push
sbb
and
cmp
cs
sbb
or
pop
add
or
push
or
or
sbb
or
or
adc
adc
sbb
adc
push
or
adc
add
add
and
and
sub
cli
gs
je
jbe
pop
inc
push
cmps
scas
dec
dec
loopne
inc
pop
inc
inc
push
push
push
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
aam
arpl
int3
imul
xchg
jo
dec
adc
pusha
push
sub
and
and
das
sub
cmp
cmp
jns
cmp
cmp
sbb
and
xor
dec
arpl
gs
mov
xor
int3
fisubr
iret
(bad)
das
fdivp
loop
(bad)
retf
fidiv
rol
and
sub
retf
rcl
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
adc
push
bound
sub
dec
dec
pop
push
inc
mov
inc
push
dec
inc
jns
inc
pop
dec
pop
push
dec
xor
fwait
rcr
inc
daa
dec
push
push
in
dec
dec
push
sbb
inc
push
inc
popa
pushw
addr16
jbe
pop
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
not
inc
inc
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
inc
dec
push
dec
push
inc
push
dec
inc
push
inc
inc
dec
dec
push
pop
dec
pop
inc
push
inc
popa
fs
arpl
movs
in
push
pop
test
pop
push
loope
inc
mov
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
add
or
pop
push
inc
pop
and
push
push
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
xlat
inc
push
stos
sbb
push
push
inc
popa
push
push
arpl
jbe
jp
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
or
mov
xor
dec
push
dec
push
inc
push
call
dec
dec
push
jl
pop
push
push
inc
popa
fs
arpl
sbb
cdq
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
jo
js
push
adc
adc
push
inc
push
rcl
push
call
call
pop
jo
pop
inc
pop
push
push
inc
cmp
add
lock
and
outs
cld
or
sub
test
mul
ins
scas
jb
sub
scas
sub
sbb
pop
dec
mov
out
fs
hlt
jle
(bad)
cmps
jmp
jae
or
ret
fs
aam
cwde
(bad)
mov
push
sar
sahf
addr16
pushf
fiadd
aam
test
dec
inc
mov
mov
mov
add
ret
xlat
or
pop
xchg
cs
mov
addr16
clc
enter
aam
div
and
dec
xchg
psubusw
mov
pop
inc
jmp
les
mov
inc
mov
jne
outs
(bad)
(bad)
clc
fwait
popa
es
push
jmp
sub
mov
clc
add
sbb
int
es
sub
stos
loopne
aad
mov
loope
into
mov
scas
(bad)
leave
cdq
sbb
or
fadd
es
sbb
push
loopne
sbb
mov
or
nop
test
scas
popa
(bad)
pop
inc
movs
mov
xlat
xor
int3
int
std
std
sbb
or
iret
idiv
xlat
pop
(bad)
xlat
sbb
cmp
in
pop
call
or
add
jl
out
mov
ds
clc
mov
rol
lock
mov
scas
add
bound
ffree
js
std
adc
push
push
sbb
jecxz
dec
mov
dec
sbb
fnstenv
inc
aas
mov
mov
pop
jge
sahf
jb
or
pop
mov
dec
loopne
loope
scas
movs
fisub
js
dec
and
repnz
(bad)
retf
jmp
ins
push
je
ret
test
push
xchg
not
out
fucom
ret
pop
inc
xor
or
xor
jge
mov
adc
mov
(bad)
jp
add
aad
adc
fs
add
jle
jo
test
ror
out
jecxz
into
add
addr16
cmp
sub
shl
cs
mov
pop
fisttp
shl
fmul
dec
pop
(bad)
xchg
mov
stos
dec
in
dec
retf
js
jnp
jae
xor
push
mov
sti
clc
dec
jae
ret
dec
and
or
out
call
push
rcl
out
addr16
mov
mov
(bad)
mov
hlt
addr16
leave
jns
jmp
lods
icebp
ins
xchg
push
mov
(bad)
shl
fwait
dec
and
test
pop
mov
mov
lea
fcomp
aaa
jmp
std
fwait
sti
and
rol
mov
cdq
pop
jmp
sub
add
jae
aad
or
in
imul
movs
fnstsw
adc
sub
sub
fcomp
stc
dec
xor
das
inc
popw
xlat
and
mov
push
scas
fld
inc
icebp
mov
push
stos
lea
or
ins
stc
retf
jl
add
scas
or
dec
cld
loopne
push
jmp
push
inc
vmwrite
mov
push
adc
cmps
js
aad
fdivr
mov
xchg
mov
dec
idiv
mov
lahf
mov
test
xor
xchg
jp
fst
imul
(bad)
jmp
stos
cdq
jge
js
sub
jne
shl
les
mov
pusha
jge
adc
inc
adc
xor
push
push
mov
cs
push
jp
jo
pop
jae
mov
outs
in
dec
sub
pusha
add
inc
or
test
adc
add
or
ins
mov
push
xchg
mov
mov
xor
fidiv
jnp
test
jl
push
jnp
and
cmps
fmul
les
fsub
ins
sbb
pop
adc
dec
push
sbb
jns
jb
adc
pop
push
int
sub
ins
pop
add
sbb
jns
cdq
cmp
bound
push
loope
mov
xor
test
inc
movs
sub
mov
movs
lock
sub
mov
cli
mov
mov
dec
imul
mov
rcr
xor
mov
cmp
lods
cmp
loopne
dec
repnz
aam
daa
and
xchg
inc
fwait
addr16
not
jbe
fstp
out
rol
std
mov
retf
lock
div
mov
int3
js
mov
cmps
pop
jb
sar
ins
(bad)
in
rcr
hlt
push
cmp
stc
and
mov
lahf
mov
xor
jecxz
retf
pushf
push
dec
push
ss
ret
cmps
cld
jbe
ja
cli
shl
mov
inc
mov
cmp
js
xlat
sbb
lods
ja
retf
mov
pop
cwde
lods
pop
loop
int3
xor
pop
mov
sar
jns
scas
call
lods
cmp
int3
jno
xchg
fwait
or
(bad)
out
imul
mov
jg
adc
clc
bound
and
outs
aaa
cdq
xchg
sbb
test
push
xchg
push
shl
call
jle
out
(bad)
inc
stos
jbe
push
in
(bad)
xor
pusha
push
pop
mov
sub
fisubr
mov
adc
pop
push
in
sbb
out
std
dec
sub
clc
icebp
int3
xchg
sar
xchg
retf
mov
dec
mov
dec
cmp
sbb
add
push
mov
and
std
aam
push
sub
pop
mov
movs
cmp
fiadd
inc
mov
inc
mov
aaa
mov
pop
(bad)
ja
xchg
pop
test
cmp
xchg
stc
neg
ret
icebp
(bad)
adc
cmp
int
scas
adc
and
sub
in
ins
inc
sub
stos
movs
popf
mov
iret
stc
pop
xchg
sahf
mov
jnp
push
cli
(bad)
mov
stos
adc
fcom
cmp
call
or
and
movs
mov
xor
int3
fwait
jmp
push
inc
cmps
test
pop
push
xor
and
out
cld
mov
imul
push
xor
xlat
add
inc
stos
pop
repz
pop
sbb
test
mov
mov
sub
inc
mov
(bad)
jnp
mov
pop
jne
mov
enter
inc
ret
adc
gs
inc
push
shl
ds
test
mov
sti
inc
hlt
enter
lock
das
je
fldenv
sub
es
rcr
ja
lock
xchg
jnp
inc
mov
or
or
push
mov
xor
xor
and
aas
fadd
lea
push
aam
adc
aad
lea
pushf
sbb
sub
xchg
bound
cwde
stos
call
or
add
jo
fisub
xchg
mov
sub
mov
mov
push
or
fmul
imul
loope
adc
push
push
in
xor
fstp
mov
and
mov
jle
xchg
int3
fwait
add
or
daa
cli
retf
(bad)
out
adc
push
call
dec
jle
mov
xor
xor
arpl
and
pmullw
popa
movs
aad
add
inc
or
das
xchg
shl
inc
scas
push
mov
xchg
sbb
retf
inc
xor
dec
loop
mov
cdq
push
rcl
and
sub
pop
pop
stos
fidiv
loope
ins
fucom
sub
nop
cmp
lock
mov
pop
les
pop
mov
xlat
xchg
clc
xor
pop
and
mov
jns
mov
jecxz
(bad)
and
test
xor
pop
pmaddwd
and
cld
push
mov
in
fmul
(bad)
mov
adc
mov
fcom
cs
cmp
(bad)
scas
(bad)
repnz
enter
add
or
fs
ret
neg
mov
addr16
push
pop
js
and
repz
aas
mov
add
leave
xlat
jb
int
int
push
sub
scas
lds
int3
push
mov
or
repnz
ret
lock
jno
ror
push
xchg
in
inc
jmp
in
(bad)
jb
adc
add
push
xor
in
fstp
(bad)
jg
push
test
leave
jne
cmp
mov
mov
sbb
call
sbb
xchg
rcr
scas
stos
call
cdq
ficomp
mul
js
or
and
jbe
fmul
mov
out
ds
xor
push
add
cmp
rcl
faddp
xor
cmp
jno
data16
inc
call
push
div
sahf
test
xchg
sbb
cmp
cmp
sub
dec
loope
in
repnz
cwde
push
arpl
push
fwait
xor
out
mov
(bad)
(bad)
test
push
or
pop
mov
pop
test
and
test
test
fadd
mov
into
ret
icebp
into
xchg
dec
pusha
inc
test
push
ret
enter
test
sar
jmp
mov
mov
les
sub
fsubr
cld
int3
mov
mov
rcr
sbb
out
push
cmp
sub
scas
call
inc
clc
(bad)
mov
mov
cs
xor
mov
ret
adc
cmps
xchg
jne
pusha
popf
mov
sub
data16
mov
mov
daa
fs
push
icebp
loope
and
sar
dec
xor
adc
ja
mov
dec
repnz
shl
(bad)
inc
xor
add
pop
jnp
xchg
repnz
sar
cdq
stc
mov
in
bound
jmp
jno
dec
scas
jne
adc
sub
xlat
push
int
int3
jae
add
xor
xor
dec
sar
adc
xchg
nop
adc
xchg
call
test
add
cmp
xor
iret
int3
sahf
inc
jb
cld
xchg
aad
ret
scas
in
sahf
inc
inc
mov
or
or
ins
push
pop
icebp
mov
in
and
(bad)
cmps
mov
ins
ins
dec
or
adc
sbb
cmp
sti
dec
or
je
popa
sbb
xor
outs
push
pop
in
movs
rcl
sar
rol
mov
aam
cli
test
test
and
test
or
adc
jp
scas
adc
pop
mov
popf
xlat
inc
mov
repnz
test
cmp
stos
or
pop
ds
fisubr
jb
mov
ins
xchg
loope
inc
pop
pop
inc
stc
test
adc
pop
cld
dec
mov
and
cld
test
sbb
bound
ja
or
sub
out
add
xchg
sar
dec
xchg
xchg
loope
inc
ret
pop
cmps
loop
aam
adc
pop
shl
or
outs
das
in
push
icebp
in
jge
ins
mov
stos
add
or
cdq
mov
sbb
repz
sub
inc
jb
xchg
cmps
sar
sub
sti
adc
adc
dec
mov
mov
sti
in
lods
push
push
jns
aaa
sub
fcomp
scas
or
inc
stc
or
mov
loope
mov
out
sahf
fdivp
jge
(bad)
stc
retf
dec
sub
ret
xchg
adc
loope
mov
repnz
out
cwde
jecxz
pop
int
add
sbb
mov
addr16
outs
xor
adc
sbb
adc
js
cmp
push
aad
les
(bad)
shl
cmp
xchg
test
mov
add
bound
jne
ins
push
je
repnz
mov
cli
call
(bad)
sbb
cmp
jg
je
mov
aam
mov
or
aas
outs
movs
dec
pop
call
popf
push
inc
nop
aas
lock
xchg
rol
pop
push
mov
or
mov
inc
mov
fmul
data16
push
les
sar
jecxz
cmp
loopne
dec
pop
adc
push
cwde
pop
mov
add
mov
cmp
jae
into
(bad)
mov
(bad)
test
cmp
lods
mov
mov
pushw
and
lahf
test
mov
inc
pop
movs
dec
xchg
lods
fwait
mov
push
ins
cmps
popa
mov
cmp
repz
and
cmps
dec
daa
lods
(bad)
loopne
pop
cli
add
xchg
arpl
push
cmps
pop
sbb
xor
(bad)
sbb
mov
add
cmp
sbb
gs
mov
(bad)
mov
sbb
out
inc
xchg
mov
pushf
push
mov
mov
sub
in
dec
or
pop
dec
je
sbb
sbb
add
pusha
cld
mov
enter
mov
pop
call
inc
mov
jns
dec
cli
sub
fmul
mov
(bad)
pop
jbe
les
xchg
xchg
imul
and
stos
push
sub
clc
or
fdivr
push
mov
sbb
sub
sahf
sbb
push
imul
sbb
(bad)
lea
cld
bound
inc
pop
clc
pop
int3
mov
fldlg2
cli
jmp
out
or
xchg
retf
and
adc
mov
jl
cmp
mov
out
and
xchg
mov
push
inc
test
in
push
and
movs
xor
fisttp
outs
cmp
lods
sub
xchg
sbb
pop
pop
mov
inc
adc
cmps
pop
call
hlt
push
jmp
jp
enter
fsubp
and
repnz
adc
adc
and
(bad)
mov
dec
mov
mov
mov
xor
and
ss
dec
(bad)
stos
add
in
pop
dec
dec
and
adc
pop
fnstsw
adc
loop
out
repz
or
lock
inc
mul
cmp
fcom
movs
mov
cdq
repnz
mov
retf
mov
push
sbb
mov
mov
and
dec
and
mov
pusha
imul
xor
push
jg
shl
popf
rcl
icebp
lods
jne
jbe
inc
push
sti
fcomip
addr16
mov
dec
lods
je
sub
and
pop
sub
sub
popa
push
dec
mov
jl
dec
fstp
sbb
div
out
clc
mov
push
fwait
mov
rol
mov
dec
imul
pop
outs
fstp
mov
push
retf
or
(bad)
(bad)
dec
movs
in
xor
sar
int
pop
add
leave
inc
cmp
cmp
das
or
leave
into
rcr
adc
rcr
fidiv
aas
ret
mov
int
movs
sbb
xchg
and
scas
cmp
pop
jo
mov
or
test
adc
nop
out
aas
idiv
pavgb
test
sub
mov
fidivr
dec
mov
jae
retf
aam
std
xchg
sub
adc
dec
xor
pop
jg
fidiv
pusha
scas
ficomp
inc
add
sub
pop
int3
jp
or
jb
dec
pop
cmps
xor
fsub
cmps
test
mov
jne
add
ja
mov
ins
jecxz
sahf
cli
add
fild
mov
repz
out
cmp
mov
jecxz
imul
lds
aas
ins
rol
cmp
shl
xor
iret
int3
cli
(bad)
std
mov
dec
and
inc
enter
sahf
push
sbb
out
dec
outs
jb
push
not
stos
call
jmp
jg
jo
xor
outs
mov
and
sar
pushf
(bad)
data16
int
es
mov
and
(bad)
repz
dec
xchg
or
adc
add
sar
add
jecxz
sub
inc
popw
jns
xchg
out
mov
test
jmp
push
mov
pushf
push
xchg
mov
jmp
push
in
dec
mov
pop
xchg
call
cwde
test
gs
xchg
arpl
retf
sbb
cmp
xchg
adc
push
call
mov
push
repnz
jle
ss
xchg
into
or
pop
pusha
movs
rol
xor
fwait
jle
cmp
leave
hlt
add
call
(bad)
out
loopne
test
pop
leave
inc
icebp
fcmovne
stc
ret
rol
cwde
(bad)
sar
stos
jl
(bad)
sub
xor
jbe
xchg
fimul
out
fisttp
mov
inc
push
jp
mov
cs
adc
cmp
sub
xor
in
mov
xchg
mov
cmp
jne
repnz
pop
(bad)
cmp
stos
outs
mov
jecxz
jb
sbb
push
xor
xchg
adc
retf
scas
inc
pop
cwde
push
fidiv
jl
movs
or
xchg
int
jns
cs
and
mov
call
scas
cmp
loope
(bad)
xor
out
imul
push
cmp
loope
cld
(bad)
std
sbb
adc
test
fmul
mov
and
push
adc
rcl
scas
ins
mov
jge
loop
xor
push
enter
ficom
(bad)
inc
mov
mov
xchg
fdivr
inc
test
jno
sub
aad
mov
push
je
sbb
mov
test
fimul
mov
iret
mov
je
cs
loopne
in
mov
cmp
int
or
xor
dec
cmp
(bad)
inc
mov
fsubr
pop
stos
out
add
fcomp
int
mov
lods
mov
sub
xchg
cmp
dec
mov
push
int
mov
sub
dec
pop
dec
pusha
(bad)
jns
jb
std
xchg
stos
into
sahf
std
cs
push
or
sub
add
jp
es
call
xchg
xor
mov
enter
das
push
loope
mov
sbb
fstp
push
mov
pushf
jl
outs
ins
pusha
popa
(bad)
fcomp
mov
push
cmp
push
sbb
xor
adc
je
mov
mov
or
cmc
shl
div
push
mov
and
and
data16
cmp
lahf
(bad)
movs
mov
adc
aam
pop
test
xchg
dec
test
out
iret
aaa
popf
int
int
adc
jnp
push
clc
bound
jnp
(bad)
ja
fmul
pop
jmp
cmp
mov
fild
repz
pop
sahf
les
xor
cwde
out
fs
and
cmps
mov
out
xchg
inc
pop
xor
retfw
fldcw
lds
popa
xor
retf
aas
in
push
pop
push
fyl2xp1
dec
xor
jnp
push
fld
xor
push
adc
in
inc
jmp
lods
cli
sbb
fs
out
ror
xor
or
int
mov
shr
fimul
cmova
aam
push
mov
adc
push
outs
inc
(bad)
out
sahf
clc
sub
dec
and
xchg
inc
aam
add
daa
ret
mov
lock
cs
inc
mov
jb
cdq
inc
inc
sbb
ins
push
lahf
test
inc
outs
stos
les
imul
lds
jno
fdivr
or
test
clc
adc
push
xchg
mov
mov
dec
and
pop
pop
jns
fcom
scas
jbe
push
jo
inc
mov
inc
jg
lsl
jb
push
pop
cwde
int
sub
mov
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
add
push
and
gs
mov
mov
rcr
outs
xchg
xor
adc
dec
push
adc
mov
cmp
add
nop
dec
sbb
popf
dec
pop
push
push
inc
icebp
hlt
cli
cmc
repz
and
fld
fistp
inc
popf
push
arpl
push
inc
push
dec
or
jbe
push
inc
push
(bad)
adc
xor
push
inc
push
dec
inc
out
dec
rcl
and
das
push
add
cmp
retf
out
push
push
inc
pop
push
or
pop
pop
push
mov
addr16
push
pop
push
test
push
push
inc
jmp
dec
push
pop
(bad)
cs
xchg
je
mov
jl
push
pop
push
dec
mov
adc
xchg
add
inc
dec
dec
inc
push
in
adc
mov
outs
push
inc
push
jno
jae
and
jle
cmp
push
inc
gs
add
pop
pusha
mov
sbb
or
pushf
push
frstor
dec
inc
pop
ror
ins
pop
jae
pop
(bad)
sub
push
dec
in
mov
xchg
ret
adc
call
pop
inc
push
(bad)
dec
pop
inc
int3
daa
jo
jne
pusha
and
rol
imul
sub
xlat
sub
mov
scas
pop
ret
jbe
and
pop
cmp
ins
lock
jg
pop
test
out
push
cmp
adc
das
lds
pop
fwait
mov
inc
in
pop
in
pusha
xchg
dec
aam
push
push
inc
fimul
ins
sbb
dec
push
push
push
push
pop
mov
jae
pop
inc
push
pop
fmul
push
loopne
jle
and
adc
or
jle
sar
imul
pop
push
inc
jl
jb
xchg
test
dec
pop
push
push
ret
or
lock
sbb
inc
fcomp
pushf
inc
pop
inc
int3
pop
jo
jge
pusha
adc
pop
push
dec
pop
cmc
push
dec
ficomp
jb
iret
pop
outs
or
dec
js
cmp
push
loopne
push
arpl
inc
adc
unpckhps
push
data16
js
and
adc
cmp
push
xor
pop
push
pop
cmc
push
mov
ret
adc
fiadd
fs
mov
rcl
push
cli
inc
pop
push
inc
jg
int
(bad)
mov
jno
into
push
dec
xor
rol
dec
push
and
fs
adc
fimul
mov
cdq
(bad)
sub
rcr
inc
pop
inc
inc
daa
pop
(bad)
test
inc
dec
dec
dec
aam
cmps
lods
mov
cmp
mov
pop
push
inc
sub
fild
fsub
ins
inc
pop
fld
or
ins
push
sub
dec
aad
push
dec
dec
cdq
xor
dec
dec
in
xchg
int3
push
jle
xor
pop
inc
xchg
mov
pop
out
outs
and
rcl
inc
popa
dec
call
pop
inc
aaa
rcl
mov
or
fisttp
(bad)
scas
pop
cmp
xchg
sub
push
push
mov
and
cmps
fmul
ja
dec
push
pop
(bad)
push
je
leave
outs
sub
pop
push
or
or
and
jl
inc
pop
inc
inc
mov
(bad)
xor
push
shl
jbe
push
mov
aam
jb
inc
mov
lds
je
push
add
push
aaa
mov
scas
mov
fst
push
ret
ss
pop
fstp
jbe
and
add
cmps
push
inc
push
inc
(bad)
push
fwait
test
and
out
(bad)
push
jmp
fcmovu
retf
pop
push
inc
push
cmc
lods
pop
sti
sub
sbb
and
jnp
frstor
jae
xchg
mov
adc
dec
dec
fimul
push
fstp
gs
es
sbb
loopne
in
inc
push
rcl
gs
retf
add
ja
retf
cs
push
lds
push
dec
ficomp
retf
ss
fcom
mov
stos
lea
and
xchg
fsubr
daa
rcl
(bad)
push
push
inc
and
adc
adc
dec
push
dec
loopne
xchg
mov
adc
ins
imul
daa
jmp
shl
enter
pop
inc
push
inc
fistp
jle
pop
pop
dec
push
retf
scas
pop
fadd
ret
sbb
xor
dec
pop
fist
gs
es
daa
mov
jae
sbb
sub
stos
mov
cmps
push
int3
jbe
xor
sbb
dec
int
inc
pop
pop
push
in
xchg
movs
pop
mov
cs
movs
push
dec
dec
fsubr
imul
mov
push
dec
adc
gs
sub
xor
jo
aad
pusha
cmp
aas
fcmovne
mov
push
dec
pop
ffree
inc
push
dec
addr16
(bad)
das
outs
sub
loop
lock
inc
popa
out
ds
pop
jnp
mov
sbb
pop
rcl
gs
dec
inc
ror
sub
pop
js
fist
jb
mov
popa
nop
jle
ficomp
cmp
xchg
daa
call
je
imul
sub
arpl
outs
xchg
pusha
xchg
enter
movs
pop
xor
(bad)
push
dec
push
cs
js
ins
sbb
inc
dec
dec
push
push
clc
pop
xchg
mov
mov
mov
cmp
int3
mov
rol
icebp
pop
inc
inc
pop
jecxz
pop
out
jo
xor
rcr
push
bound
mov
cs
(bad)
pop
push
push
retf
xor
test
(bad)
fwait
ds
test
fild
jb
lds
aas
fcmovnu
loop
push
dec
and
pop
jae
pop
shl
push
dec
dec
pop
in
dec
fwait
mov
add
sbb
nop
mov
sub
into
sahf
inc
pop
inc
dec
in
dec
stc
mov
cmp
push
inc
push
inc
jg
fdiv
push
fiadd
sub
aam
dec
pop
push
fadd
jmp
cmp
jg
rol
arpl
iret
mov
jle
(bad)
jbe
fistp
jae
fimul
jae
fistp
pusha
pop
shl
enter
push
mov
pop
into
sbb
cwde
xlat
xor
inc
push
fld
push
inc
int
push
(bad)
inc
jo
jge
dec
sar
cld
dec
nop
mov
add
or
jb
cdq
mov
push
dec
out
pop
loopne
popa
xchg
xor
add
(bad)
push
inc
inc
dec
scas
fwait
ds
dec
xchg
mov
jns
push
dec
push
fiadd
sub
push
ror
jle
fimul
inc
add
ins
xchg
rol
daa
jae
(bad)
lods
stos
mov
pop
xor
jbe
pop
(bad)
ror
pop
pop
cmc
push
mov
or
sub
add
xchg
movs
sub
cmp
jl
sub
(bad)
push
stc
pop
dec
inc
push
jge
xchg
sub
mov
jle
push
dec
push
aam
inc
fcomp
adc
fimul
dec
(bad)
pop
pop
push
push
inc
call
xor
pop
inc
push
mov
lea
enter
ja
and
arpl
pop
push
dec
xor
xchg
mov
jge
dec
push
dec
push
xor
add
nop
pop
dec
pop
push
fimul
inc
inc
shl
pop
inc
fcom
inc
retf
push
push
mov
mov
mov
adc
pop
iret
xchg
inc
xchg
sub
pop
dec
pop
cld
dec
nop
mov
retf
and
call
push
repnz
push
dec
rol
arpl
in
inc
pop
dec
inc
pusha
xchg
dec
fld
inc
push
ins
push
jle
ficomp
cmp
xchg
daa
call
call
and
rcr
gs
inc
push
push
inc
test
jle
fisubr
imul
push
pop
int3
mov
push
push
(bad)
pop
outs
sub
mov
fld
arpl
inc
and
jl
inc
pop
inc
retf
es
dec
inc
ror
push
loop
push
dec
push
into
jp
fsubr
xlat
sub
mov
scas
pop
cmp
pcmpgtw
je
mov
jl
pop
push
out
mov
int3
pop
jo
xor
push
mov
pop
loop
jp
cmp
adc
lock
pop
inc
push
arpl
push
push
daa
call
popa
inc
xor
ins
xchg
rol
daa
jae
retf
and
pop
iret
and
xor
fistp
xchg
fisubr
pop
retf
dec
push
rcr
loop
imul
mov
mov
rcr
retf
aas
xor
ret
add
pop
jo
dec
or
push
dec
ficomp
fild
mov
movs
mov
push
and
pop
cmp
ins
lock
ja
pop
test
out
push
cmp
cmp
dec
mov
and
aas
jb
aam
push
or
sbb
pusha
sub
jle
pop
inc
popa
lods
and
ins
jbe
pop
int3
adc
jl
inc
pop
inc
inc
jmp
inc
push
dec
iret
and
rcl
imul
sbb
and
ins
sbb
push
inc
mov
jnp
jne
mov
les
jl
daa
rcl
inc
xchg
mov
inc
loope
arpl
addr16
repz
push
push
inc
jle
xchg
scas
inc
fimul
aaa
ror
pop
fist
gs
jne
daa
push
and
rcl
sub
pop
xor
adc
pop
push
dec
jge
add
xchg
jae
sbb
sbb
shl
mov
sar
push
fidiv
call
xor
and
xor
sbb
jo
push
dec
inc
shl
jbe
push
dec
push
aam
imul
adc
add
rcl
push
je
or
shr
gs
sub
and
jle
inc
push
push
jg
ins
xor
cld
lods
movs
cmps
shl
jbe
test
push
ins
adc
sbb
push
dec
dec
push
cs
jmp
popa
fs
inc
aaa
inc
jmp
pop
int3
jb
pop
inc
inc
fcomp
bound
rcr
arpl
pop
pop
push
les
xchg
aaa
or
or
push
cmp
mov
(bad)
push
scas
lods
mov
scas
add
(bad)
cmps
test
inc
rol
jg
jp
ds
jno
das
test
push
(bad)
or
push
xchg
add
jle
shl
pop
rcl
out
retf
gs
into
push
push
xchg
cmp
ror
inc
xlat
(bad)
ja
int3
inc
push
dec
mov
int
push
movs
iret
push
push
inc
ret
rcl
and
fild
push
sbb
or
dec
lock
push
test
fwait
push
stos
cmp
ret
xlat
inc
pop
xlat
out
mov
inc
pop
push
adc
and
adc
pop
push
shl
in
dec
sbb
cmp
xor
or
(bad)
sbb
shl
jle
and
cmp
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
movs
pushf
imul
fs
arpl
gs
inc
push
pop
popa
dec
dec
fcomp
pop
inc
xchg
push
push
mov
dec
pop
inc
pop
fimul
dec
push
adc
xlat
pop
push
inc
push
mov
dec
dec
push
pop
dec
pop
push
bound
xor
hlt
pop
add
lds
sar
push
jmp
push
inc
push
mov
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
and
test
push
pop
(bad)
pop
push
push
inc
popa
fs
arpl
stos
out
or
push
dec
dec
pop
push
inc
pop
inc
inc
push
int3
inc
push
dec
xchg
jmp
inc
mov
pop
push
std
push
inc
push
dec
push
pop
push
inc
push
dec
push
mov
push
pop
dec
pop
push
push
inc
popa
fs
mov
std
inc
push
jno
dec
dec
call
inc
push
push
inc
push
dec
inc
mov
pop
push
dec
push
inc
push
dec
push
pop
push
inc
mov
push
dec
dec
movs
xchg
clc
adc
fs
arpl
gs
inc
push
pop
mov
inc
pop
inc
not
inc
push
dec
inc
dec
dec
inc
pop
pop
lods
popf
sti
sbb
pop
push
inc
push
dec
push
push
inc
jnp
dec
rcr
pop
push
cmps
mov
sub
arpl
fs
dec
push
pop
push
cmovp
pop
std
inc
inc
xchg
push
inc
push
stc
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
fimul
fisub
pop
push
rol
fs
arpl
gs
inc
push
pop
push
dec
inc
pop
push
inc
fiadd
push
mov
push
dec
pop
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
or
push
sbb
iret
and
pop
dec
jp
push
inc
and
bound
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
lods
mov
stos
mov
mov
movs
mov
scas
lods
mov
pushf
mov
lods
inc
test
mov
test
lods
mov
mov
mov
mov
mov
stos
mov
mov
mov
mov
pop
mov
ins
data16
mov
cmps
test
test
mov
mov
movs
movs
cmps
lods
mov
mov
stos
mov
mov
movs
mov
scas
lods
mov
pushf
mov
scas
cmps
nop
mov
movs
push
movs
add
inc
push
dec
mov
pop
pop
sub
mov
pop
stos
mov
inc
push
mov
push
pop
mov
push
push
mov
fwait
je
mov
push
dec
mov
push
inc
movs
mov
push
mov
mov
mov
mov
mov
stos
mov
mov
movs
mov
scas
lods
mov
arpl
gs
push
pop
adc
pop
push
inc
pop
inc
inc
push
push
inc
(bad)
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
enter
pop
push
push
shl
jmp
pop
vmulpd
retf
fcom
call
dec
mov
movs
pop
lods
dec
push
inc
test
mov
mov
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
int3
test
inc
push
dec
push
push
inc
push
dec
(bad)
scas
movs
mov
daa
and
fs
arpl
call
cmp
inc
pop
mov
test
aaa
pop
pop
pop
push
dec
lods
mov
stos
mov
inc
push
dec
dec
scas
movs
mov
scas
lods
mov
arpl
cmps
mov
mov
push
inc
pop
inc
inc
push
push
inc
test
mov
dec
push
inc
push
dec
push
cmps
stos
mov
mov
pop
dec
pop
push
lods
mov
pushf
mov
gs
inc
push
pop
push
mov
cmps
test
push
push
inc
push
dec
inc
dec
dec
mov
mov
mov
push
inc
push
dec
test
mov
ror
push
push
inc
popa
fs
pushf
mov
push
pop
push
dec
dec
pop
push
inc
movs
mov
mov
inc
pop
pop
pop
push
(bad)
push
movs
mov
dec
push
push
inc
push
dec
dec
push
mov
pop
push
push
inc
popa
fs
arpl
mov
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
movs
movs
cmps
lods
mov
mov
stos
mov
mov
fwait
mov
lods
push
ds
in
jp
je
jno
pop
inc
dec
mov
push
inc
movs
mov
push
dec
mov
mov
inc
push
mov
pop
push
mov
mov
pop
dec
movs
test
inc
sahf
pushf
push
pushf
mov
call
mov
test
lods
stos
mov
mov
movs
movs
cmps
lods
mov
mov
xor
pusha
push
push
inc
inc
dec
dec
push
jp
pop
push
push
inc
gs
arpl
gs
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
ficomp
int
inc
push
retf
xlat
pop
aad
push
dec
(bad)
push
les
enter
fcmovbe
push
and
pop
inc
push
cmps
scas
dec
mov
push
inc
movs
inc
mov
dec
mov
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
imul
and
mov
cmps
cmps
xor
dec
lods
stos
mov
inc
mov
dec
push
dec
test
inc
push
inc
(bad)
push
dec
mov
dec
push
pop
inc
mov
push
inc
popa
fs
imul
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
cmps
stos
inc
push
mov
push
inc
lods
lds
mov
inc
popa
fs
bound
test
pop
pop
push
pop
adc
push
mov
dec
dec
and
inc
test
mov
inc
push
dec
dec
push
pop
dec
pop
jo
inc
popa
gs
arpl
imul
dec
pop
push
inc
mov
inc
push
xor
push
dec
dec
inc
pop
pop
jno
dec
push
jo
inc
xor
adc
push
inc
add
dec
or
push
inc
xor
sub
sub
push
adc
dec
push
push
push
pop
inc
inc
push
push
sti
push
cmps
mov
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
gs
arpl
gs
inc
push
pop
push
dec
dec
pop
adc
inc
inc
push
add
dec
ss
or
pop
xor
push
and
push
dec
push
push
inc
ja
dec
push
pop
dec
push
push
and
fs
adc
add
xor
push
and
push
inc
pop
inc
inc
pop
push
not
inc
dec
dec
inc
pop
or
dec
and
dec
cmp
inc
adc
push
sub
dec
sbb
pop
ss
cs
fs
arpl
gs
dec
jb
inc
outs
inc
add
dec
je
inc
inc
pop
pop
or
push
sub
das
push
sub
and
push
sbb
and
push
push
inc
and
sub
sub
push
push
pop
push
dec
dec
je
dec
pop
inc
inc
adc
inc
sub
adc
pop
and
inc
aas
dec
cmp
inc
push
dec
push
push
jne
fs
popa
pop
jle
push
push
inc
popa
push
push
arpl
es
pop
xor
inc
cs
adc
inc
and
aaa
dec
daa
inc
xor
push
jb
gs
imul
inc
ja
dec
push
pop
dec
adc
inc
adc
je
jbe
pop
sub
push
cs
xor
inc
xor
jge
inc
dec
inc
pop
adc
inc
xor
pop
cmp
dec
cmp
push
and
pop
sub
push
and
push
arpl
gs
xor
sub
pop
push
inc
xchg
sub
pop
ins
arpl
push
or
es
and
jge
push
pop
add
js
cmp
pusha
dec
push
pop
dec
pop
push
push
inc
popa
fs
aas
(bad)
pop
icebp
inc
push
pop
push
dec
dec
pop
push
inc
pop
inc
inc
push
push
das
dec
sbb
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
daa
repz
pop
aam
inc
popa
lock
gs
shl
in
push
pop
xchg
out
pop
push
inc
pop
inc
sub
push
(bad)
push
dec
inc
dec
add
push
jle
ins
adc
sbb
adc
or
sbb
fs
push
dec
pop
push
pop
add
es
push
or
sbb
push
xor
sbb
cmp
sbb
and
xor
daa
xor
sbb
xor
push
inc
add
and
xor
or
push
pop
or
push
adc
sbb
add
cmp
aaa
and
xor
inc
push
dec
inc
dec
dec
inc
pop
pop
pop
push
dec
push
inc
push
dec
push
pop
push
inc
push
dec
push
push
inc
push
dec
dec
push
pop
dec
pop
push
push
inc
popa
fs
arpl
gs
inc
push
pop
push
dec
dec
pop
sub
sub
add
adc
or
adc
add
add
inc
add
add
add
add
pop
add
jb
jb
add
add
pop
stos
add
or
or
add
ins
outs
add
add
inc
sub
add
add
add
jo
imul
add
add
adc
or
gs
inc
sbb
add
add
add
imul
ins
xor
push
add
pop
out
sub
jp
inc
add
dec
add
inc
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
inc
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
add
xor
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
inc
add
add
add
add
inc
add
add
inc
add
add
add
add
add
add
inc
add
add
add
add
pusha
movs
inc
add
add
cvtps2pi
add
stc
push
(bad)
inc
add
add
add
add
pusha
nop
inc
add
add
add
add
add
add
add
add
add
inc
add
add
jg
add
inc
add
add
add
add
pusha
pushf
inc
add
add
push
xor
or
and
add
add
add
add
inc
add
add
adc
add
dec
add
inc
add
add
add
inc
add
add
adc
xor
inc
add
inc
add
add
add
add
inc
add
add
xor
or
add
(bad)
inc
add
add
add
add
pusha
nop
inc
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
adc
add
or
sbb
add
add
add
add
pusha
sar
add
data16
push
add
sbb
cmp
add
add
add
add
pusha
or
inc
add
adc
or
sub
add
add
(bad)
inc
add
add
add
add
pusha
cld
inc
add
add
xor
wrmsr
add
add
sub
add
add
add
add
pusha
int3
inc
add
add
add
add
add
add
add
inc
add
add
pusha
inc
add
push
adc
test
test
test
test
test
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
nop
add
adc
inc
add
inc
add
inc
add
add
fadd
inc
add
add
add
add
add
add
push
pop
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
inc
inc
add
add
add
add
cmp
add
js
inc
add
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
add
(bad)
inc
add
add
inc
add
add
(bad)
(bad)
inc
add
add
and
js
inc
add
and
jl
inc
add
and
xor
and
cmp
inc
add
bound
jae
jae
add
add
outs
je
gs
ins
jns
add
popa
je
jb
add
add
outs
bound
add
add
outs
imul
imul
add
add
jae
arpl
add
add
outs
arpl
popa
ins
add
add
inc
je
gs
popa
ins
ins
jns
add
jo
outs
js
add
addr16
gs
jae
add
pop
add
add
popa
arpl
add
outs
addr16
data16
inc
imul
addr16
jo
gs
add
add
popa
jo
jb
arpl
je
jbe
outs
gs
add
add
inc
outs
jo
popa
bound
imul
gs
bound
cmp
add
add
popa
fs
add
inc
data16
jb
data16
add
add
outs
jae
gs
jo
jne
ins
gs
inc
outs
gs
push
gs
add
popa
jne
outs
arpl
je
add
add
addr16
jae
imul
imul
add
add
arpl
jb
add
add
fs
jae
add
add
arpl
imul
imul
add
add
outs
jne
imul
jb
jae
gs
inc
jne
outs
imul
je
outs
outs
xor
jo
outs
arpl
imul
arpl
popa
jb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
movsx
push
push
push
push
push
push
push
call
add
mov
mov
mov
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
add
jo
mov
mov
cmp
je
push
mov
push
call
mov
add
jo
sub
jo
sub
jo
movsx
mov
mov
call
mov
push
mov
push
call
mov
mov
add
jo
mov
jmp
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
xor
lea
call
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
mov
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
mov
lea
call
push
jmp
lea
call
ret
ret
xor
mov
mov
pop
pop
pop
leave
ret
push
mov
push
pop
call
mov
push
call
fstp
mov
fld
fstp
xor
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
push
call
lea
lea
call
lea
lea
call
push
push
push
push
call
mov
call
mov
mov
push
push
lea
push
push
push
call
call
mov
add
jo
mov
push
push
lea
push
lea
push
push
call
call
push
push
push
lea
push
push
call
call
push
push
mov
add
jo
push
lea
push
push
call
call
mov
sub
jo
mov
push
lea
call
lea
call
ret
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
push
call
mov
lea
call
push
push
lea
push
call
push
call
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
push
mov
push
push
call
mov
lea
call
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
sub
jo
mov
lea
call
mov
mov
push
call
push
push
push
push
lea
push
push
push
call
add
push
lea
push
call
push
push
mov
push
push
push
call
push
push
call
call
lea
push
call
mov
mov
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
sub
jo
mov
fild
fstp
fld1
fstp
fldz
fstp
jmp
fld
fadd
fstp
fnstsw
test
jne
fld
fcomp
fnstsw
sahf
ja
lea
push
fld
call
push
push
call
movzx
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
fld
fadd
fnstsw
test
jne
call
push
push
call
movzx
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
fld
fadd
fnstsw
test
jne
call
push
push
call
movzx
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
neg
sbb
inc
neg
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
and
cmp
jae
and
jmp
call
mov
mov
mov
push
push
fldz
call
test
jne
and
cmp
jae
and
jmp
call
mov
fld
fadd
fnstsw
test
jne
call
mov
mov
mov
mov
jmp
mov
cmp
jae
and
jmp
call
mov
fld
fsub
fnstsw
test
jne
call
mov
mov
mov
mov
jmp
and
cmp
jae
and
jmp
call
mov
mov
cmp
jae
and
jmp
call
mov
push
mov
mov
push
push
mov
mov
push
push
call
push
push
call
push
push
push
push
call
add
and
cmp
jae
and
jmp
call
mov
mov
cmp
jae
and
jmp
call
mov
mov
mov
push
push
mov
mov
push
push
call
push
push
call
fstp
fld1
fstp
fldz
fstp
jmp
fld
fadd
fstp
fnstsw
test
jne
fld
fcomp
fnstsw
sahf
ja
lea
mov
mov
and
cmp
jae
and
jmp
call
mov
fld
call
push
push
mov
mov
push
push
call
push
push
call
push
push
call
mov
mov
mov
push
pop
call
lea
mov
movs
movs
movs
movs
push
pop
call
lea
mov
movs
movs
movs
movs
push
push
call
add
jmp
fwait
push
jmp
lea
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
lea
mov
lea
push
push
call
lea
push
push
call
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
jmp
call
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
push
call
mov
lea
call
lea
push
call
mov
mov
push
lea
push
call
push
push
push
push
call
push
call
mov
lea
push
call
and
lea
push
lea
push
push
push
push
mov
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
jmp
lea
push
call
ret
lea
call
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
push
call
mov
push
lea
push
call
push
push
push
push
call
push
call
mov
lea
push
call
mov
mov
mov
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
lea
push
call
push
push
push
push
call
push
call
mov
lea
push
call
mov
mov
mov
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
add
jo
mov
lea
push
lea
push
push
mov
add
jo
push
push
mov
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
jmp
lea
push
call
lea
push
call
ret
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
push
call
mov
and
movsx
push
call
mov
lea
call
push
jmp
lea
call
ret
ret
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
push
call
mov
lea
call
mov
lea
call
push
push
push
push
lea
push
push
push
call
add
push
push
call
mov
mov
mov
push
push
call
mov
mov
mov
push
push
call
mov
mov
mov
push
push
call
mov
mov
mov
push
push
call
mov
mov
mov
push
push
call
mov
mov
mov
push
push
call
mov
mov
mov
push
push
call
mov
mov
mov
push
push
call
mov
mov
mov
push
push
call
mov
mov
mov
lea
push
push
push
call
mov
lea
call
push
mov
mov
push
call
lea
call
lea
push
push
push
call
mov
lea
call
push
mov
mov
push
call
lea
call
push
lea
push
call
push
push
push
push
call
push
call
mov
lea
push
call
push
lea
push
call
push
push
push
push
call
push
call
mov
lea
push
call
push
lea
push
call
push
push
push
push
call
push
call
mov
lea
push
call
mov
mov
lea
push
lea
push
push
push
call
push
push
push
mov
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
push
jmp
lea
push
call
lea
push
call
lea
push
call
lea
call
ret
lea
call
lea
push
push
call
lea
push
push
call
lea
push
push
call
lea
call
ret
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
push
call
lea
lea
call
lea
push
lea
push
call
push
call
mov
mov
push
jmp
lea
call
ret
lea
call
ret
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
push
call
mov
lea
call
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
push
push
call
push
push
push
mov
add
push
push
push
call
add
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
call
push
push
push
push
call
push
push
call
mov
mov
and
jmp
mov
add
jo
mov
mov
cmp
jg
mov
mov
mov
add
jo
sub
jo
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
push
pop
call
lea
mov
movs
movs
movs
movs
lea
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
push
call
mov
mov
lea
push
lea
push
call
mov
cmp
jge
push
call
mov
jmp
and
lea
push
call
mov
movsx
mov
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fnstsw
test
jne
call
push
mov
push
call
mov
lea
call
lea
push
lea
push
push
call
add
jmp
mov
mov
mov
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
push
mov
add
jo
push
push
call
mov
mov
mov
mov
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
lea
push
call
push
mov
add
jo
push
push
push
call
push
push
push
call
call
lea
push
call
mov
push
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
push
mov
add
jo
push
push
call
fwait
push
jmp
lea
push
call
lea
call
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
jmp
call
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
push
call
lea
lea
call
lea
lea
call
mov
and
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
call
push
mov
push
call
mov
lea
call
lea
call
push
jmp
mov
and
test
je
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
lea
call
ret
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
push
call
push
push
lea
push
call
push
push
push
push
call
mov
call
mov
mov
push
push
mov
push
lea
push
call
push
push
push
call
call
push
push
call
lea
call
push
push
mov
push
lea
push
call
push
mov
add
jo
push
push
call
call
push
push
call
lea
call
and
cmp
jae
and
jmp
call
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
add
jo
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
add
jo
mov
mov
mov
push
push
push
call
push
push
call
mov
mov
and
cmp
jae
and
jmp
call
mov
push
push
mov
mov
lea
push
call
push
call
push
push
call
push
push
push
push
call
mov
mov
push
push
push
call
push
push
call
push
push
push
push
call
mov
mov
push
push
lea
push
push
push
call
call
push
jmp
lea
call
ret
lea
mov
lea
push
push
call
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
push
call
mov
lea
call
mov
and
push
push
lea
push
call
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
push
call
mov
mov
mov
jmp
mov
add
jo
mov
mov
cmp
jg
mov
mov
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
push
pop
call
lea
mov
movs
movs
movs
movs
lea
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
lea
call
push
push
call
mov
mov
lea
push
lea
push
call
mov
cmp
jge
push
call
mov
jmp
and
and
cmp
jae
and
jmp
call
mov
lea
push
call
mov
add
mov
lea
push
lea
push
push
call
add
and
cmp
jae
and
jmp
call
mov
and
cmp
jae
and
jmp
call
mov
mov
add
movzx
mov
fild
fstp
mov
fld
fsub
fnstsw
test
jne
call
mov
add
mov
lea
mov
mov
lea
push
call
mov
lea
call
push
push
call
mov
lea
call
jmp
fwait
push
jmp
mov
and
test
je
lea
call
lea
call
lea
push
lea
push
push
call
add
ret
lea
call
lea
mov
lea
push
push
call
lea
call
ret
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
jmp
call
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
lea
call
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
push
call
push
push
push
push
call
push
push
call
push
push
push
push
push
push
call
add
mov
push
lea
push
call
push
push
push
push
call
push
call
mov
lea
push
call
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
push
push
call
push
push
push
push
call
push
push
call
push
push
lea
push
call
push
push
push
call
call
push
lea
push
call
lea
call
push
jmp
lea
push
call
lea
call
ret
lea
call
lea
call
ret
xor
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
push
call
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
add
call
lea
call
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
add
call
lea
call
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
lea
call
lea
push
lea
push
mov
mov
push
call
fld
call
mov
mov
lea
call
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
lea
call
lea
push
lea
push
mov
mov
push
call
fld
call
mov
mov
lea
call
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
lea
call
lea
push
lea
push
mov
mov
push
call
fld
call
mov
mov
lea
call
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
lea
call
lea
push
lea
push
mov
mov
push
call
fld
call
mov
mov
lea
call
fld1
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
lea
call
lea
push
lea
push
mov
mov
push
call
fld
call
mov
mov
lea
call
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
add
call
lea
call
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
add
call
lea
call
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
add
call
lea
call
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
call
mov
lea
call
mov
mov
add
call
lea
push
lea
push
push
call
add
fwait
push
jmp
lea
push
lea
push
push
call
add
ret
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
pop
call
mov
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
lea
call
push
push
push
push
lea
push
push
push
call
add
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
push
call
mov
lea
push
call
mov
push
push
call
mov
mov
cmp
jne
push
lea
push
call
push
push
call
push
call
mov
lea
call
lea
push
call
push
push
call
mov
lea
call
lea
call
jmp
push
lea
push
call
push
push
call
push
call
mov
lea
call
lea
push
call
mov
mov
and
mov
lea
call
push
jmp
mov
and
test
je
lea
call
lea
push
call
lea
call
ret
lea
call
lea
push
push
call
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
push
push
push
push
lea
push
push
push
call
add
lea
mov
mov
lea
push
call
movsx
test
jne
push
lea
push
call
push
push
push
push
call
push
call
mov
lea
push
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
fild
fstp
push
fld
fadd
fsub
fnstsw
test
jne
call
push
push
push
lea
push
push
push
call
add
mov
mov
mov
lea
push
call
mov
mov
call
fwait
push
jmp
lea
push
call
ret
lea
push
push
call
ret
mov
mov
pop
pop
pop
leave
ret
jmp
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
push
jmp
lea
call
ret
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
pop
call
call
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
push
push
push
push
push
call
leave
ret
push
mov
push
push
push
mov
push
mov
mov
call
push
push
push
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
call
call
fwait
push
jmp
lea
call
ret
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
and
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
push
call
mov
lea
call
push
push
call
mov
mov
call
lea
push
lea
push
lea
push
push
call
add
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
fld
fstp
lea
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
lea
push
push
call
mov
mov
call
lea
call
fwait
push
jmp
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
push
pop
call
mov
leave
ret
push
mov
push
pop
call
mov
leave
ret
push
mov
push
pop
call
mov
leave
ret
push
mov
push
push
push
mov
push
mov
mov
call
push
push
push
mov
mov
push
push
lea
push
call
and
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
mov
cmp
jae
and
jmp
call
mov
mov
call
mov
add
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
mov
push
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
mov
push
push
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
lea
mov
lea
push
push
call
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
call
call
mov
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
call
neg
sbb
inc
neg
not
mov
lea
push
lea
push
push
call
add
movsx
test
je
jmp
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
jmp
lea
push
lea
push
push
call
add
ret
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
push
pop
call
mov
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
fld
fstp
mov
lea
lea
call
fld
fcomp
fnstsw
sahf
ja
fld
fstp
mov
lea
push
lea
push
lea
push
call
push
call
fstp
lea
call
jmp
fwait
push
jmp
lea
call
ret
lea
call
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
push
pop
call
push
push
push
call
mov
push
push
push
lea
push
push
call
call
mov
leave
ret
int3
int3
sahf
sahf
sahf
sahf
cld
pusha
add
(bad)
(bad)
(bad)
(bad)
call
add
adc
add
add
add
add
add
bound
add
bound
add
bound
add
adc
add
add
arpl
or
add
add
add
arpl
add
arpl
add
arpl
add
arpl
add
fs
add
add
add
add
add
cmp
add
add
add
fs
add
fs
add
gs
add
gs
add
add
add
add
add
add
sub
add
add
gs
add
gs
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
addr16
add
addr16
add
addr16
add
add
add
push
inc
push
dec
xor
inc
dec
dec
add
add
pop
pop
jbe
popa
push
popa
jb
jne
add
add
dec
arpl
add
add
pop
popa
fs
data16
popa
outs
add
add
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
inc
jns
jne
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
popa
fs
imul
xor
add
pop
pop
jbe
popa
push
popa
jb
outs
fs
je
jb
add
add
pop
popa
fs
data16
gs
xor
add
pop
pop
jbe
popa
push
je
inc
popa
je
add
pop
pop
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
add
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
outs
push
popa
jb
add
pop
popa
fs
imul
xor
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
inc
jns
fs
add
pop
popa
fs
imul
imul
popa
fs
imul
xor
imul
dec
jae
outs
add
add
pop
pop
jbe
popa
inc
push
add
add
jbe
popa
dec
xor
add
add
jbe
popa
inc
jns
popa
jb
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
add
jbe
popa
inc
outs
gs
je
inc
outs
jne
fs
jb
outs
jb
add
add
jbe
popa
push
je
inc
ins
jo
add
pop
pop
jbe
popa
inc
jns
xor
add
pop
pop
jbe
popa
inc
jb
inc
outs
outs
jae
jb
arpl
add
add
jbe
popa
push
xor
je
add
add
pop
pop
jbe
popa
inc
jns
xor
add
inc
ins
ins
inc
jne
arpl
outs
inc
popa
ins
ins
add
add
jbe
popa
inc
jo
dec
xor
add
add
jbe
popa
inc
jns
jne
add
add
pop
pop
jbe
popa
push
gs
jb
add
add
pop
popa
fs
data16
je
outs
add
add
jbe
popa
push
gs
pop
jbe
popa
push
cmp
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
add
pop
pop
jbe
popa
push
dec
xor
add
add
pop
inc
dec
jae
jb
add
add
jbe
popa
push
gs
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
add
pop
pop
jbe
popa
push
dec
xor
add
add
pop
pop
jbe
popa
push
popa
jb
jne
add
add
jbe
popa
inc
jo
ins
jo
jns
add
add
jbe
popa
inc
js
gs
dec
popa
outs
fs
gs
add
add
jbe
popa
push
je
push
outs
push
outs
imul
add
fs
data16
gs
add
add
pop
popa
fs
imul
ss
add
add
jbe
popa
inc
push
inc
js
gs
imul
pop
inc
dec
ins
outs
add
add
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
add
jbe
popa
dec
gs
add
add
fs
imul
xor
add
add
fs
imul
xor
imul
jbe
popa
push
je
inc
outs
jo
add
add
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
inc
gs
inc
jb
xor
add
add
fs
imul
xor
add
add
pop
pop
jbe
popa
push
cmp
jb
add
add
fs
imul
add
pop
pop
jbe
popa
dec
xor
popa
jb
add
add
jbe
popa
inc
jo
jns
add
pop
pop
jbe
popa
push
popa
jb
fs
add
jbe
popa
inc
jb
dec
outs
arpl
add
add
jbe
popa
push
popa
jb
jne
add
add
jbe
popa
push
je
push
outs
inc
outs
jae
add
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
inc
dec
popa
je
outs
add
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
push
je
push
popa
jb
outs
jo
add
add
jbe
popa
dec
xor
jns
add
pop
popa
ins
ins
ins
jne
add
add
dec
je
outs
add
add
pop
pop
jbe
popa
inc
jb
push
outs
ins
outs
arpl
add
add
jbe
popa
push
dec
xor
jb
add
pop
inc
dec
gs
add
add
pop
pop
jbe
popa
inc
jb
gs
je
