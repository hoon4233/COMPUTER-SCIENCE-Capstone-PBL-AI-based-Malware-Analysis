xor
mov
push
stc
dec
mov
test
push
mov
inc
add
push
cmp
int3
inc
dec
popf
pop
push
in
adc
inc
add
and
out
arpl
out
dec
mov
(bad)
(bad)
xchg
stc
cmp
test
jae
out
hlt
mov
test
les
inc
jne
jb
mov
xchg
fs
inc
add
les
sbb
fmul
in
fist
push
push
lea
inc
ins
jb
or
sbb
add
pop
scas
jno
mov
fist
push
out
dec
mov
test
mov
iret
inc
mov
test
lea
arpl
sti
add
inc
xchg
push
add
in
mov
add
enter
jno
jae
push
cmp
out
jae
psubsb
dec
jbe
icebp
enter
cmp
add
out
stos
mov
mov
out
stos
mov
jae
cs
int3
inc
push
lea
push
cmp
(bad)
retf
cmp
jae
lea
cs
into
cmp
xor
add
xor
sbb
mov
scas
sub
mov
imul
scas
jae
(bad)
out
dec
dec
lea
int3
add
push
add
xchg
fxch
or
test
sti
int3
xor
fs
rol
sub
(bad)
xchg
jb
les
inc
(bad)
imul
dec
call
out
dec
dec
or
inc
adc
iret
inc
or
push
gs
(bad)
(bad)
les
jne
xor
lods
daa
out
jne
je
fnstsw
add
or
mov
scas
and
lea
test
inc
ins
lea
xor
sbb
adc
adc
inc
ins
lea
pop
aam
inc
add
mov
push
xchg
add
xlat
or
add
mov
cmp
push
inc
ins
frstor
mov
inc
add
adc
fist
mov
gs
fst
and
mov
arpl
push
lea
sub
iret
inc
push
add
test
lea
add
lea
add
test
mov
lea
sub
mov
add
fs
lea
ins
dec
inc
push
in
call
and
add
fist
mov
in
mov
in
mov
xchg
jb
mov
mov
add
push
test
test
fwait
push
test
dec
(bad)
sti
xchg
clc
inc
xor
ret
jae
push
add
or
ins
add
clc
fbstp
push
aas
gs
ja
(bad)
(bad)
out
mov
inc
add
gs
ja
lea
push
mov
nop
into
iret
inc
(bad)
call
jb
call
out
dec
dec
cmp
sbb
pop
sub
inc
test
mov
hlt
fbstp
jb
mov
mov
cmp
push
cmp
adc
in
bound
data16
(bad)
retf
(bad)
inc
nop
(bad)
(bad)
out
push
out
call
cmp
(bad)
in
dec
(bad)
ins
lea
sbb
mov
adc
clc
pop
push
jb
adc
hlt
inc
add
dec
mov
jns
lea
sbb
les
mov
pop
aam
inc
add
sub
ror
add
lods
adc
jae
ins
lea
mov
in
add
sub
call
test
mov
mov
xor
xchg
clc
push
call
xchg
sub
call
jno
inc
adc
jb
cld
test
mov
push
mov
into
clc
fwait
push
inc
cwde
add
pop
xor
in
(bad)
in
jl
adc
clc
dec
(bad)
sub
pop
repnz
int3
inc
xchg
add
xor
mov
mov
(bad)
les
(bad)
les
lea
xchg
add
add
mov
mov
lea
xchg
int3
inc
nop
mov
mov
js
jle
sbb
jmp
mov
jmp
jns
inc
jl
add
sbb
js
push
rol
fwait
call
into
inc
xchg
retf
out
inc
mov
add
je
(bad)
push
and
or
dec
(bad)
enter
cmp
lea
stc
push
enter
idiv
jmp
pop
aaa
inc
test
push
inc
call
aas
fist
mov
or
cld
xchg
jae
xor
jmp
add
sub
jae
jmp
repz
ins
push
add
in
(bad)
enter
cmp
lea
stc
push
dec
xor
stos
or
xchg
jb
jmp
add
jmp
add
sub
jge
clc
mov
xchg
jb
cmp
jno
(bad)
xchg
add
clc
xchg
jae
mov
jns
(bad)
xchg
jp
clc
xchg
jae
mov
jge
(bad)
xchg
add
cld
xchg
jae
mov
inc
add
mov
xchg
rcr
pop
movs
dec
adc
aas
fist
mov
add
and
lea
clc
in
mov
call
out
dec
mov
cmp
dec
mov
sub
dec
vphsubw
sub
or
enter
jns
inc
pushf
jp
hlt
in
stos
mov
jno
pop
aaa
inc
test
push
adc
nop
mov
add
in
jbe
in
mov
call
out
dec
mov
cmp
dec
mov
sub
dec
vphsubw
sub
ss
lea
clc
in
mov
inc
ins
push
add
stos
mov
xor
sbb
scas
fmul
in
ficom
push
out
push
mov
cdq
add
js
das
push
add
in
jbe
in
mov
inc
ins
add
jmp
push
add
arpl
inc
cmp
ja
repnz
dec
psrld
inc
xor
cwde
jl
or
cld
mov
dec
sbb
inc
test
push
adc
pop
sbb
mov
inc
je
iret
inc
call
sub
push
test
mov
cld
out
dec
inc
aas
in
loope
lea
call
cmp
sbb
das
ficom
call
out
dec
arpl
gs
test
inc
test
push
adc
jb
pop
mov
fwait
push
inc
nop
add
call
test
mov
in
pop
ins
lea
xchg
clc
dec
push
out
call
aam
dec
add
mov
jne
(bad)
stos
mov
jge
pop
aaa
inc
test
push
int3
jne
xor
(bad)
aad
div
xlat
inc
add
mov
mov
addr16
mov
je
adc
out
inc
call
mov
sbb
jb
mov
or
jne
out
enter
gs
jo
lea
pop
aaa
inc
test
push
adc
clc
dec
mov
in
outs
clc
in
les
ins
push
and
out
call
loope
mov
add
cmps
inc
ins
gs
jo
(bad)
into
ret
in
inc
clc
in
jbe
gs
dec
pushf
lods
add
in
gs
xor
in
loope
lea
inc
pushf
(bad)
mov
sbb
in
scas
or
xchg
in
loope
(bad)
int3
push
xchg
mov
push
add
mov
lea
lods
test
mov
inc
xchg
into
(bad)
cmp
call
rcr
pop
movs
dec
adc
ins
lea
push
cmp
cld
lea
imul
fmul
inc
call
push
bound
iret
inc
add
cmc
repz
ins
mov
or
or
inc
pusha
cs
mov
(bad)
mov
xchg
inc
add
mov
mov
je
(bad)
pop
jb
or
data16
ins
(bad)
les
ins
in
jmp
test
jb
or
adc
push
loope
cmps
call
jbe
(bad)
out
dec
dec
cmp
sbb
add
add
repz
test
in
jle
push
ins
(bad)
retf
(bad)
inc
fs
pop
add
push
jg
cmp
cmp
ins
add
ins
lea
adc
psubsw
clc
ins
or
jl
iret
inc
call
add
test
jb
jl
iret
inc
mov
jns
add
sbb
add
mov
(bad)
into
inc
xchg
or
add
ins
gs
mov
add
inc
mov
jne
inc
test
cmp
(bad)
jne
push
stos
adc
push
add
lea
leave
push
cmp
out
inc
push
out
mov
cld
in
mov
in
lahf
call
lock
pushf
iret
iret
inc
push
out
mov
out
mov
add
cld
gs
xor
in
outs
fsub
dec
retf
jb
(bad)
cmp
(bad)
push
jb
xchg
ins
lea
sub
rcr
add
jb
add
enter
push
mov
sbb
iret
inc
add
xchg
pushf
iret
iret
inc
push
out
mov
clc
out
mov
sub
add
(bad)
out
test
mov
sub
inc
add
jb
jmp
dec
sbb
inc
test
push
adc
inc
push
or
test
adc
mov
fwait
scas
sbb
ins
push
and
ins
push
add
in
mov
add
or
add
fistp
cdq
add
inc
add
mov
into
mov
popf
xor
enter
mov
pop
stc
dec
cmp
stc
inc
or
inc
mov
test
inc
outs
mov
push
test
or
jne
out
enter
dec
inc
mov
test
mov
xchg
test
cld
ins
push
cmp
ins
stc
adc
iret
jmp
or
xchg
mov
cld
ins
mov
mov
mov
(bad)
lods
adc
enter
mov
jnp
adc
into
clc
pop
jne
(bad)
sub
add
in
mov
add
je
xchg
jb
gs
(bad)
les
lea
setae
dec
push
test
add
sub
out
push
out
push
add
fld
outs
ins
(bad)
into
inc
xchg
out
push
out
push
test
add
in
(bad)
enter
cmp
lea
stc
in
sub
push
ds
or
loop
add
(bad)
retf
(bad)
inc
ins
jb
clc
test
sub
ins
add
test
jb
clc
test
add
pop
movs
dec
adc
outs
lea
push
cmp
cld
addr16
sti
inc
add
jb
jmp
dec
mov
xchg
stos
or
push
test
sub
ins
add
hlt
xchg
jae
(bad)
jmp
(bad)
pop
gs
dec
test
push
jbe
in
sub
add
outs
ins
(bad)
into
test
push
inc
fsub
dec
mov
jmp
or
call
out
dec
dec
adc
inc
ins
lea
retf
inc
add
mov
cmp
test
xchg
fucom
pushf
iret
iret
inc
push
out
mov
cld
gs
xor
in
jmp
xchg
jb
ret
loope
fwait
call
ins
add
call
jb
cmp
in
mov
aaa
lea
scas
and
ret
jae
push
int
in
ins
(bad)
cmp
jno
shl
or
push
int3
int3
inc
(bad)
(bad)
(bad)
xchg
gs
les
inc
in
mov
test
(bad)
inc
ins
add
sub
mov
pushf
iret
iret
inc
push
out
mov
cld
gs
dec
test
mov
or
cli
mov
arpl
enter
(bad)
mov
ins
add
imul
loope
(bad)
retf
jb
(bad)
cmp
loop
xchg
jb
les
and
loope
xchg
jb
ret
jmp
cmp
cmps
xchg
jae
cmp
arpl
jle
ins
lea
jmp
int
(bad)
jmp
(bad)
push
int3
int3
inc
call
out
dec
dec
pand
loope
xchg
jb
add
fucom
inc
ins
(bad)
les
ins
push
jp
fmul
inc
add
test
ins
(bad)
mov
test
add
mov
aad
iret
inc
push
test
or
mov
push
in
loopne
(bad)
retf
jb
(bad)
cmp
not
mov
jmp
or
jb
add
add
cmps
inc
ins
in
mov
cdq
jb
sub
inc
je
out
push
loope
mov
call
out
dec
dec
cmp
sbb
mov
add
mov
lods
mov
inc
push
test
mov
xchg
push
or
mov
push
in
loopne
(bad)
retf
jb
(bad)
cmp
cmc
xchg
jb
les
mov
or
jb
add
add
cmps
inc
ins
in
mov
cdq
jb
sub
inc
je
out
push
loope
mov
call
out
dec
dec
cmp
sbb
mov
add
push
mov
in
out
xchg
jb
ret
push
mov
xchg
mov
inc
push
test
or
mov
(bad)
jmp
mov
ins
out
push
add
out
ins
gs
xchg
jb
les
mov
or
jb
add
add
pop
mov
cwde
jb
sub
inc
je
out
push
loope
mov
call
out
dec
dec
cmp
sbb
cmps
inc
ins
add
std
xchg
jae
push
test
mov
xchg
push
or
mov
(bad)
jmp
mov
ins
or
dec
lea
shl
xor
stos
mov
mov
lea
jmp
(bad)
pop
xchg
add
adc
fmul
inc
mov
ret
jae
add
or
inc
push
push
mov
test
push
jg
cmp
into
inc
nop
test
add
mov
out
lahf
call
jb
and
enter
mov
cld
ins
add
push
pop
mov
repz
add
sub
adc
mov
mov
lea
in
dec
ins
jle
lea
(bad)
jmp
call
xchg
mov
ins
add
mov
or
call
push
mov
xor
jp
mov
or
(bad)
jmp
(bad)
nop
(bad)
iret
inc
mov
sbb
int3
cmp
lea
sub
shl
add
(bad)
retf
jb
(bad)
cmp
ret
jae
push
out
mov
add
enter
mov
cld
ins
add
push
gs
test
jg
cmp
xchg
jmp
or
in
pop
lea
inc
add
call
out
fwait
call
jb
cmp
enter
out
inc
add
jb
jmp
dec
les
lea
lods
mov
loope
mov
mov
gs
cmp
jno
fcomp
into
ret
out
lock
add
jmp
jmp
mov
xchg
jb
(bad)
fnstenv
(bad)
xchg
in
mov
xchg
jb
(bad)
cmp
jbe
ins
(bad)
(bad)
les
loop
xchg
jae
add
out
call
in
jle
inc
ins
lea
jmp
or
push
loope
mov
call
out
dec
push
mov
add
(bad)
int3
test
or
call
jb
(bad)
cmp
repnz
popf
into
out
mov
ins
jle
(bad)
fld
stos
adc
push
add
lea
leave
push
cli
call
out
mov
cld
gs
dec
test
pop
out
sub
call
jae
add
movs
xchg
jae
push
add
cmps
inc
ins
push
ret
jae
push
out
mov
add
cld
gs
dec
test
inc
add
jle
pop
ins
(bad)
retf
jb
(bad)
cmp
ret
jae
push
out
mov
cld
gs
dec
test
sub
call
mov
push
lea
pop
in
jbe
in
and
jmp
pop
jmp
add
js
jae
(bad)
jmp
(bad)
mov
jb
(bad)
out
popa
push
mov
lea
xchg
jb
in
jl
mov
add
jb
(bad)
cmp
js
cmp
into
inc
nop
xor
mov
in
sbb
xchg
jb
ret
out
lock
add
movs
call
add
test
std
cmps
inc
ins
push
ret
jae
push
out
mov
add
cld
gs
dec
test
inc
add
xor
call
test
ins
add
pusha
xchg
jae
push
push
lea
jmp
or
call
jb
and
enter
movs
lahf
mov
add
ins
lea
out
xor
call
inc
inc
add
push
arpl
xchg
ins
(bad)
retf
jb
(bad)
cmp
repnz
adc
(bad)
out
dec
dec
mov
jb
(bad)
in
dec
loope
ins
(bad)
(bad)
mov
ins
add
ins
lea
jmp
mov
ins
out
(bad)
fldenv
ret
jae
push
add
cmps
inc
ins
add
std
xchg
jae
push
test
adc
mov
enter
cmp
lea
stc
in
mov
jmp
nop
inc
add
jb
test
jb
(bad)
cmp
ret
jae
(bad)
call
jb
call
out
dec
dec
push
add
std
xchg
jae
push
add
cmps
inc
ins
add
std
xchg
jae
push
test
add
adc
jle
inc
ins
(bad)
les
ins
stc
inc
mov
or
int3
xor
jp
mov
aad
(bad)
xchg
add
(bad)
jmp
push
ret
jae
cmp
and
lds
jmp
(bad)
xor
adc
xor
popa
mov
in
jae
cmp
popa
mov
out
nop
jb
adc
mov
pop
stos
or
mov
fwait
outs
into
test
jb
jmp
dec
int3
test
ja
cmp
mov
mov
pop
mov
xor
pop
mov
or
or
mov
or
or
mov
or
or
mov
or
push
jbe
in
int3
test
ja
cmp
mov
ret
cmp
push
in
mov
lea
call
inc
add
mov
inc
add
adc
fist
mov
add
jo
inc
or
in
rol
enter
lea
sub
and
outs
lea
addr16
add
dec
inc
call
out
mov
mov
lea
mov
jbe
sub
call
enter
lea
sub
mov
add
daa
clc
ins
push
cmp
in
jbe
in
fwait
jmp
dec
add
xchg
jb
push
rcr
out
mov
iret
lea
ins
sbb
ret
adc
cmp
gs
in
mov
in
mov
mov
lea
popa
dec
int
push
out
call
in
adc
mov
inc
add
inc
test
push
adc
push
xor
pushf
mov
je
iret
inc
mov
int
add
jge
lock
les
ins
push
bound
repz
inc
add
test
nop
sub
inc
(bad)
imul
add
inc
cmc
int3
inc
add
lea
movs
int3
int
into
int
inc
ins
xor
sub
push
add
dec
mov
pop
push
jb
add
jae
lea
dec
or
mov
(bad)
(bad)
or
sub
daa
add
add
pop
dec
(bad)
cmp
shl
add
add
clc
ins
mov
sub
lea
popa
xchg
fadd
int
add
das
outs
lea
imul
xor
ins
mov
repz
inc
jmp
jb
cmp
int3
inc
mov
into
mov
inc
cmp
int3
inc
jmp
xchg
mov
mov
lea
add
xor
(bad)
not
sbb
lea
sub
push
add
popf
xlat
inc
ins
fs
xchg
jb
add
push
fs
add
imul
popf
inc
add
sbb
lea
arpl
call
lea
imul
in
dec
arpl
or
fs
in
int3
int3
inc
jmp
call
je
mov
inc
add
jge
lock
(bad)
or
ins
dec
inc
in
icebp
int3
inc
add
jmp
call
je
mov
inc
add
arpl
ins
(bad)
(bad)
or
outs
dec
inc
inc
cmc
int3
inc
add
jmp
xchg
mov
mov
lea
add
jge
lock
(bad)
or
sub
inc
add
in
icebp
int3
inc
add
fadd
xor
mov
in
mov
stos
or
inc
inc
test
ins
sub
popf
sub
mov
repz
inc
jmp
int
fiadd
mov
cld
int
jmp
int
fiadd
mov
repz
inc
jmp
xchg
mov
mov
(bad)
les
outs
fild
ins
(bad)
into
lock
jge
(bad)
out
mov
sub
lea
pop
dec
scas
into
ins
lea
popa
xchg
fadd
lods
mov
add
inc
push
mov
mov
imul
xchg
mov
and
sbb
mov
push
inc
inc
add
dec
xchg
je
push
add
jo
imul
push
add
jg
sub
mov
sub
jge
(bad)
in
sbb
lea
jmp
mov
inc
add
jnp
dec
ins
lea
add
lea
psubsb
add
inc
out
in
int
inc
mov
icebp
add
dec
dec
inc
add
sti
arpl
inc
jo
iret
inc
or
inc
xchg
mov
add
test
lea
in
lock
add
in
arpl
ins
lea
sub
sub
addr16
cdq
sub
sbb
add
jns
cmp
ins
clc
adc
jne
push
inc
or
int
add
mov
and
sbb
(bad)
(bad)
mov
pop
(bad)
in
icebp
int3
inc
pminub
(bad)
loopne
add
mov
jge
lea
pop
out
mov
sub
inc
mov
bound
int
add
push
push
or
int
mov
adc
xchg
mov
sub
out
cld
int
cmp
xlat
inc
ins
call
ins
push
bound
int
add
push
push
or
int
mov
adc
xchg
mov
sub
out
repz
inc
cmp
xlat
inc
ins
call
ins
add
sub
jbe
sub
sbb
scas
fmul
in
fst
push
rol
xor
jge
mov
mov
in
mov
je
iret
inc
push
test
sbb
ins
add
push
cmp
pop
ins
(bad)
in
int3
iret
inc
push
cmp
pop
ins
(bad)
in
repz
inc
mov
fwait
imul
xchg
add
push
cmp
pop
ins
(bad)
in
icebp
int3
inc
push
cmp
pop
ins
(bad)
in
repz
inc
push
cmp
pop
ins
(bad)
in
int3
iret
inc
pop
xor
in
(bad)
in
sbb
adc
push
jno
adc
add
repz
ins
in
mov
(bad)
fnstsw
add
lea
mov
lahf
mov
add
test
enter
jns
add
jmp
mov
add
call
mov
mov
(bad)
les
(bad)
into
fcomp
into
ret
out
call
lahf
add
(bad)
sub
add
dec
lea
pop
cwde
in
retf
aaa
add
jmp
repz
ins
dec
add
aam
pop
add
mov
sbb
ret
stos
enter
lea
or
retf
xor
add
movs
loope
scas
push
add
inc
push
ins
add
in
jb
hlt
icebp
int3
inc
mov
add
sub
push
out
push
out
call
imul
call
sub
inc
(bad)
sub
add
je
iret
inc
push
jb
mov
push
mov
call
aam
pop
add
mov
sbb
mov
add
(bad)
retf
fnstsw
in
jb
hlt
icebp
int3
inc
mov
imul
aaa
inc
test
push
add
dec
mov
dec
out
mov
inc
mov
in
enter
jno
inc
pusha
add
lock
push
mov
jne
gs
lea
in
stos
mov
gs
add
enter
enter
clc
mov
hlt
cmp
mov
adc
out
mov
imul
jge
inc
add
fcom
mov
in
outs
clc
in
mov
add
jb
adc
int3
inc
mov
fwait
push
inc
nop
add
pop
movs
dec
adc
aas
fist
mov
test
pop
pusha
jb
je
iret
inc
xor
mov
add
xor
cmp
aaa
ins
mov
add
sub
add
outs
mov
add
sbb
cmp
aaa
outs
mov
add
adc
add
push
lea
pop
out
push
lea
mov
js
iret
adc
dec
add
ins
xor
xchg
xor
imul
icebp
adc
mov
psubsw
inc
add
dec
arpl
push
push
push
dec
dec
test
lea
in
(bad)
jmp
test
add
add
jle
sbb
into
clc
out
gs
pminub
inc
add
ror
sub
shl
add
cmp
push
pop
ins
lea
cmp
sar
push
adc
(bad)
mov
jne
enter
adc
fst
ja
jmp
(bad)
call
out
push
lea
mov
xchg
push
scas
add
fdiv
add
and
add
pop
dec
push
adc
mov
arpl
jo
xchg
jb
add
in
mov
add
fxch
clc
and
jnp
push
push
scas
add
mov
add
int
clc
out
gs
adc
jne
add
add
push
ins
lea
addr16
add
push
in
inc
inc
jl
adc
imul
inc
mov
inc
add
cmp
(bad)
xor
jne
adc
jne
add
add
push
in
(bad)
call
outs
clc
add
arpl
inc
push
push
gs
add
cmp
sbb
adc
loope
push
add
push
push
scas
add
enter
popf
retf
mov
out
gs
mov
jne
adc
mov
ins
or
adc
cmp
mov
dec
in
(bad)
call
ins
clc
jns
xchg
push
scas
add
mov
add
mov
inc
pminub
dec
cmp
sbb
inc
jne
gs
pop
ins
(bad)
int3
push
jl
adc
imul
add
jmp
add
lock
xchg
jb
pop
aaa
inc
test
push
adc
mov
mov
(bad)
int3
jne
pop
xor
mov
jne
retf
test
(bad)
inc
add
outs
lea
stos
sti
lahf
jmp
out
dec
dec
jmp
repz
ins
xor
jl
movs
add
mov
and
int
xor
(bad)
pop
xchg
mov
mov
lea
push
lea
dec
mov
add
and
call
into
fsubr
mov
adc
jb
cld
int
xlat
inc
ins
mov
cld
push
lods
daa
out
pop
mov
retf
mov
add
enter
mov
add
jns
inc
jb
int3
push
cwde
add
add
xlat
inc
ins
push
mov
enter
add
mov
add
enter
mov
inc
mov
jne
adc
(bad)
(bad)
enter
lea
xchg
inc
add
mov
add
mov
ins
ficom
pminub
push
ror
sti
inc
ins
gs
xchg
jb
les
sbb
dec
adc
ins
lea
push
cmp
scas
ficom
outs
cwde
call
lea
ins
lea
pop
mov
jmp
ret
jb
add
mov
mov
lea
shr
call
cmp
repz
push
mov
mov
jbe
cli
jecxz
jb
add
sahf
dec
mov
jle
call
xor
jmp
xor
lahf
bound
ficom
add
push
xor
pop
ins
(bad)
int3
xchg
les
jmp
mov
push
cmc
int3
inc
pminub
mov
xchg
jb
retf
dec
or
cmp
sbb
ficom
fstp
inc
ins
mov
xchg
enter
in
push
and
int
sub
test
xchg
mov
jmp
out
push
in
mov
(bad)
iret
inc
add
or
xchg
jb
test
xor
lahf
bound
adc
xchg
sub
inc
psubsb
inc
add
xchg
lahf
bound
mov
pop
cdq
sub
push
mov
mov
(bad)
(bad)
mov
ins
add
ins
lea
push
je
jmp
or
add
out
xchg
fist
push
ror
inc
inc
ins
add
hlt
xor
xchg
data16
inc
add
gs
jnp
ror
test
xchg
retf
ins
popf
inc
add
mov
xchg
jb
xlat
loope
ret
ficom
aad
add
(bad)
les
ins
fs
add
call
popa
test
xchg
jb
fdiv
ja
(bad)
out
dec
dec
mov
jno
rcr
les
ins
push
fiadd
cs
lods
add
jno
xor
push
mov
clc
xor
gs
ins
mov
push
push
(bad)
call
or
imul
mov
add
adc
jno
or
or
add
int3
test
push
mov
add
in
xor
jmp
je
iret
inc
(bad)
fst
call
lea
pminub
mov
xchg
jb
loop
push
push
adc
in
mov
xchg
jb
movs
cwde
bound
hlt
xor
mov
inc
ror
dec
adc
add
mov
mov
call
push
xchg
outs
dec
cmps
add
mov
add
jb
mov
ins
mov
push
cmp
add
xor
aaa
in
mov
cmp
cdq
call
mov
ins
(bad)
into
xchg
lock
mov
add
ret
jb
mov
sub
rcr
scas
xchg
inc
add
or
ficom
push
mov
ficom
or
ficom
push
mov
fist
push
mov
test
push
mov
fdiv
fiadd
out
xchg
fist
push
mov
test
or
fist
push
mov
fist
in
add
sub
fist
(bad)
xchg
aam
mov
push
add
inc
add
lods
mov
mov
je
iret
inc
pminub
mov
xchg
jb
loop
push
retf
jb
sub
pop
cwde
call
sbb
add
shl
xor
mov
(bad)
inc
ins
add
hlt
xor
ins
popf
inc
add
gs
ins
(bad)
into
test
push
mov
test
inc
add
lock
add
jge
ins
(bad)
int3
test
cmp
test
(bad)
jge
mov
push
mov
test
ret
jb
mov
inc
add
jmp
ret
jb
(bad)
jmp
(bad)
les
imul
mov
cmp
mov
inc
jne
add
add
mov
inc
jne
add
add
dec
xchg
add
arpl
shl
mov
popf
call
jb
add
inc
cmp
sbb
inc
add
jmp
leave
ja
in
mov
and
lods
movntq
mov
xchg
jb
clc
inc
jge
pop
in
add
shr
call
cs
call
cs
call
xor
mov
mov
cmp
mov
ins
lea
sub
mov
add
add
xchg
(bad)
cmp
mov
ins
lea
adc
mov
add
lea
sbb
inc
add
add
data16
pminub
in
xchg
jb
rcl
(bad)
jge
mov
sbb
cmp
repz
xchg
cmp
mov
push
mov
call
xor
cs
loop
xor
out
mov
xchg
jb
loop
add
rol
or
out
push
call
push
bound
out
xchg
jb
add
lea
mov
lea
sub
test
xchg
mov
jmp
out
push
in
mov
(bad)
iret
inc
add
push
pop
aaa
inc
test
push
adc
ror
sub
xor
lahf
and
ins
dec
add
ins
add
out
mov
(bad)
adc
repz
in
mov
mov
enter
push
retf
xor
add
lea
pop
retf
xor
add
add
(bad)
(bad)
cmp
clc
dec
inc
in
enter
enter
mov
inc
xchg
lea
cmp
inc
jns
xor
in
enter
xchg
inc
xchg
mov
jge
pushf
xor
add
pop
inc
pminub
mov
psubsw
inc
add
clc
jmp
add
add
push
dec
inc
add
pminub
inc
and
out
jne
jne
or
icebp
inc
ins
add
or
dec
adc
pop
jge
or
icebp
inc
ins
jnp
add
(bad)
clc
imul
inc
mov
jne
ret
into
push
xchg
xor
ins
test
add
sub
push
xor
push
jp
add
imul
mov
push
or
cmp
arpl
mov
jmp
pop
inc
pminub
mov
jne
or
dec
sub
inc
adc
inc
jb
or
clc
(bad)
enter
cmp
lea
sbb
dec
mov
jb
pop
aaa
inc
test
push
xor
xlat
cmp
lods
inc
jg
inc
push
cmp
inc
call
in
(bad)
enter
cmp
lea
stc
in
lods
push
in
mov
pop
sbb
inc
jmp
ret
ins
repnz
mov
sbb
dec
adc
ins
lea
push
cmp
jmp
movs
into
clc
fwait
push
test
dec
outs
clc
in
retf
fstp
add
adc
ins
add
add
inc
add
adc
jne
clc
in
jbe
xor
mov
cmp
push
rcr
pop
test
lea
ins
out
call
test
add
ret
cmp
add
out
pop
jae
(bad)
mul
mov
push
lea
sub
outs
out
push
in
add
jne
gs
push
ins
(bad)
into
(bad)
out
jae
jne
push
cmp
stc
inc
mov
add
test
fild
push
ins
(bad)
into
ret
out
dec
push
push
push
int
les
jno
out
leave
mov
push
(bad)
les
lea
or
enter
jns
push
loope
mov
jne
fidivr
enter
push
test
add
cld
xchg
into
(bad)
xor
sbb
scas
fmul
in
ficom
push
sar
mov
push
in
add
add
lea
add
push
add
sub
mov
xchg
sub
add
gs
push
ins
(bad)
int3
inc
pusha
add
and
jne
add
push
add
cld
fidivr
int3
cmp
add
cld
cmp
inc
push
cmp
push
ins
(bad)
(bad)
div
push
push
ins
(bad)
inc
ins
lea
xor
mov
cmp
add
dec
movs
js
fs
ins
lea
mov
lea
push
mov
add
call
test
mov
add
hlt
in
(bad)
(bad)
xchg
clc
inc
xor
inc
push
fld
push
add
cld
cmp
xor
xchg
clc
dec
push
test
mov
push
test
add
inc
xor
mov
cmp
push
aas
fist
mov
test
mov
stos
inc
add
into
fild
mov
ret
sub
adc
sbb
inc
call
in
clc
mov
push
test
adc
ins
push
adc
push
lods
adc
inc
push
cmp
jb
lea
sub
cmp
pop
jb
or
mov
add
mov
cmp
cmp
loopne
lea
sub
test
scas
add
cld
xor
sbb
scas
fmul
in
ficom
push
out
dec
mov
add
cld
test
inc
add
cmps
inc
ins
gs
ins
lea
xor
mov
mov
cmps
push
ins
(bad)
(bad)
les
neg
fs
es
inc
call
xor
dec
inc
ret
mov
ret
cmp
add
(bad)
dec
push
mov
into
ret
or
loop
(bad)
les
(bad)
les
(bad)
les
(bad)
retf
add
ror
inc
mov
lahf
sub
popf
or
inc
test
mov
push
or
loop
(bad)
int3
inc
fs
outs
add
(bad)
out
push
lea
pop
fsub
dec
dec
mov
jb
mov
mov
inc
or
add
inc
add
or
mov
sub
iret
inc
xchg
add
inc
xchg
xor
imul
in
lock
ins
test
(bad)
jge
lea
xlat
in
mov
in
lahf
mov
cmp
cmp
xchg
imul
call
mov
or
in
ins
inc
add
mov
pop
inc
inc
mov
add
cmp
push
out
dec
pand
inc
sub
call
mov
or
fs
movs
xchg
add
imul
mov
sbb
dec
daa
nop
cld
sbb
push
inc
ins
sbb
inc
nop
aad
pop
pop
xor
xlat
nop
sbb
jbe
cld
sbb
xlat
nop
cld
sbb
xlat
nop
sub
xlat
nop
cld
sbb
xlat
nop
push
push
xlat
nop
cld
sbb
xlat
nop
aam
test
iret
inc
nop
aad
dec
ret
cs
xlat
nop
sbb
jbe
cld
sbb
inc
nop
cld
sbb
xlat
nop
sbb
nop
cld
sbb
xlat
nop
or
xchg
jb
pusha
cld
sbb
scas
add
pop
cld
sbb
cmp
sub
cld
push
pop
nop
cld
sbb
xlat
nop
cld
push
pop
or
sbb
xlat
nop
cld
push
test
sbb
xlat
nop
cld
icebp
stos
nop
cld
sbb
xlat
nop
cld
push
jg
cld
sbb
xlat
nop
cld
in
xlat
nop
cld
sbb
push
std
xchg
lea
ins
or
inc
ins
cmc
pop
pop
xor
cmps
inc
ins
retf
cs
daa
nop
cld
sbb
push
inc
ins
sbb
xlat
nop
xor
(bad)
clc
ins
sbb
xlat
nop
cld
sbb
inc
nop
in
xlat
nop
cld
sbb
xlat
nop
pop
pop
xlat
nop
cld
sbb
xlat
nop
in
xlat
nop
cld
sbb
xlat
nop
std
sbb
pop
nop
cld
sbb
pop
pop
xor
xlat
nop
ins
jne
nop
cld
sbb
xlat
nop
aam
test
sbb
xlat
nop
cld
sbb
inc
nop
in
xlat
nop
cld
sbb
xlat
nop
pop
pop
xlat
nop
cld
sbb
xlat
nop
in
xlat
nop
cld
sbb
xlat
nop
std
sbb
pop
nop
cld
sbb
dec
ret
cs
xlat
nop
ins
jne
nop
cld
sbb
xlat
nop
or
sbb
mov
mov
fist
mov
test
inc
pusha
jmp
inc
pusha
dec
add
or
mov
mov
jno
test
add
ins
lea
mov
mov
xchg
aam
ret
mov
jne
dec
add
ins
ins
call
in
stos
mov
ror
icebp
push
xchg
add
sub
dec
int3
inc
adc
in
iret
push
xchg
xor
mov
nop
add
call
push
cdq
jnp
sbb
pop
pminub
outs
retf
dec
mov
xchg
jp
ins
lea
jl
lahf
add
icebp
dec
xchg
movs
lea
(bad)
inc
add
test
nop
ins
lea
sub
call
arpl
add
cmp
lahf
add
icebp
push
xchg
mov
add
lea
jg
mov
or
ins
push
and
inc
sbb
lea
jmp
jge
mov
or
sbb
(bad)
mov
cmp
add
xchg
mov
cmps
inc
add
dec
add
push
mov
dec
mov
sub
dec
iret
push
or
(bad)
ror
inc
add
mov
test
inc
add
loopne
jb
or
or
dec
dec
shl
add
mov
bound
cmp
inc
cdq
jp
ror
inc
mov
fimul
adc
out
jb
cmp
in
inc
cmp
cmp
dec
ins
lea
lock
mov
inc
test
scas
mov
test
out
ror
inc
mov
jno
pop
in
dec
das
jae
(bad)
into
lock
enter
pop
cli
inc
ins
mov
inc
mov
outs
mov
inc
nop
call
add
enter
xor
mov
in
fwait
mov
jne
adc
pop
popf
les
mov
aam
iret
inc
add
cli
inc
ins
mov
clc
push
pop
scas
ins
and
scas
and
dec
mov
add
pand
loop
test
inc
ins
or
push
pop
lea
das
rol
enter
rol
lock
pand
ret
xchg
ror
fwait
mov
add
cli
inc
ins
add
add
cli
inc
ins
(bad)
sub
inc
mov
jns
pop
in
mov
lock
enter
pop
cli
inc
ins
mov
inc
mov
outs
mov
inc
cwde
call
add
enter
add
add
jge
adc
pop
popf
les
mov
aam
iret
inc
add
cli
inc
ins
mov
lock
push
into
imul
cmp
bound
loopne
iret
inc
mov
cli
inc
ins
add
cmp
jp
cmp
arpl
adc
mov
imul
(bad)
iret
inc
mov
mov
add
lock
sbb
dec
mov
gs
mov
inc
push
test
mov
or
lea
add
lea
add
call
test
mov
imul
add
(bad)
retf
fnstsw
jne
cmp
lea
dec
ins
lea
call
pop
dec
pop
jmp
xor
mov
in
xchg
mov
dec
adc
outs
lea
cmp
stc
ficomp
xor
shl
inc
add
jo
jmp
dec
mov
lea
loope
mov
lock
jge
mov
dec
push
popf
push
mov
mov
mov
push
mov
jb
(bad)
sub
jmp
gs
dec
ins
lea
adc
shl
out
push
push
in
mov
lods
ja
rcl
push
mov
sbb
xchg
jb
sub
inc
mov
jb
or
inc
add
ins
(bad)
into
ret
inc
jne
dec
ret
jb
xor
jb
sbb
jb
push
add
out
ins
in
fild
(bad)
retf
jo
(bad)
cmp
jb
ins
lea
add
lea
add
ret
jb
push
test
add
hlt
xchg
jb
call
test
mov
mov
ins
out
(bad)
jmp
(bad)
add
push
xchg
cmp
xor
mov
stos
jb
hlt
xchg
jb
call
xchg
mov
mov
lea
mov
add
(bad)
xchg
jb
call
loope
mov
push
loope
mov
push
test
inc
add
dec
ins
lea
std
xchg
jb
(bad)
xchg
mov
mov
lea
ret
mov
inc
push
loope
mov
push
test
das
ins
mov
inc
push
add
inc
add
gs
add
les
or
pop
adc
mov
cmp
add
xor
mov
mov
jmp
repz
ins
add
test
(bad)
retf
(bad)
inc
nop
(bad)
(bad)
out
push
out
call
cmp
icebp
out
inc
mov
add
je
inc
xchg
jb
clc
cmp
inc
push
jb
adc
les
in
bound
ins
lea
dec
ins
lea
pop
aaa
inc
test
push
and
inc
ins
lea
inc
ins
lea
adc
clc
push
call
cmp
les
ret
cmp
push
cmp
mov
clc
fwait
push
inc
nop
add
push
out
lea
cdq
pop
call
popf
mov
or
sbb
inc
test
push
call
(bad)
into
clc
pop
jne
(bad)
loope
mov
push
push
lea
push
ins
pop
ins
out
push
jb
or
clc
dec
call
gs
xor
clc
pop
call
cdq
mov
call
popf
mov
dec
ins
lea
sbb
jp
ins
lea
xchg
(bad)
xchg
clc
mov
add
pop
pop
movs
dec
adc
cmp
int3
jne
push
add
or
sbb
ss
dec
or
pop
sub
into
clc
pop
jne
(bad)
loope
mov
add
call
cmp
rcr
jbe
xchg
adc
out
call
popf
mov
inc
ins
lea
sbb
xchg
lea
xchg
repnz
ins
lea
sub
push
add
mov
jge
(bad)
xor
mov
cmp
push
cmp
adc
in
dec
add
(bad)
les
ins
stc
fs
cmp
out
ins
(bad)
into
inc
xchg
add
xor
add
jne
mov
sub
add
push
out
push
test
add
ins
cs
idiv
inc
add
xor
mov
scas
dec
sub
lods
push
in
jp
sbb
pop
movs
dec
(bad)
push
sbb
mov
add
mov
inc
mov
push
push
cmp
int3
jne
push
sbb
enter
add
into
ret
into
push
nop
add
jmp
or
imul
cmp
xor
test
add
ins
push
or
push
(bad)
push
push
xchg
xchg
mov
push
add
cmp
lea
lds
xor
in
mov
add
xchg
into
clc
and
jnp
data16
push
mov
popf
add
jmp
push
pop
jmp
add
add
inc
mov
jmp
add
xor
cmp
xor
test
add
cld
in
outs
ret
mov
jmp
mov
mov
cmp
add
sbb
stos
enter
push
inc
sbb
lea
aas
leave
inc
add
enter
pop
mov
push
mov
into
inc
cwde
mov
icebp
add
push
mov
gs
xor
arpl
inc
xor
jge
mov
add
sbb
in
loopne
and
inc
stos
enter
(bad)
pand
mov
mov
fdivp
xchg
add
sub
pop
add
dec
or
mov
in
stos
mov
push
cmp
cmp
sbb
call
out
dec
push
xchg
enter
enter
jne
scas
out
mov
xor
mov
cmp
mov
test
push
add
push
rol
add
push
dec
mov
call
popa
mov
test
xor
push
mov
xchg
push
or
dec
into
lock
jge
(bad)
gs
xor
pop
dec
scas
sub
inc
adc
mov
or
ins
lea
test
xor
ret
add
ins
add
fcom
lea
fwait
sub
test
xor
mov
pop
push
rcl
xchg
jo
(bad)
shl
adc
adc
(bad)
into
test
dec
int3
jne
lea
add
mov
pushf
movs
mov
stos
push
add
in
xchg
call
inc
mov
add
je
mov
jb
jmp
adc
(bad)
out
dec
dec
push
xchg
clc
dec
call
out
dec
dec
push
xchg
cmp
pop
sub
scas
cmp
lea
lea
cmc
jp
adc
cmps
inc
ins
jb
cld
xchg
jae
call
out
dec
dec
mov
dec
inc
ins
(bad)
dec
ins
lea
fwait
je
cli
imul
inc
add
out
inc
add
stc
ds
cli
cld
xchg
jae
push
add
cwde
inc
ins
fisubr
sub
inc
mov
cmc
jp
adc
cmps
inc
ins
jb
cld
xchg
jae
call
out
dec
dec
push
xchg
cmp
in
lea
test
scas
mov
lea
cmc
jp
adc
cmps
inc
ins
jb
cld
xchg
jae
call
out
dec
dec
call
aad
inc
add
stc
out
ja
jge
gs
ins
(bad)
(bad)
arpl
cdq
fwait
je
mov
jno
(bad)
xchg
fisubr
ds
inc
push
test
add
ins
push
adc
clc
arpl
push
add
call
push
add
inc
ins
(bad)
(bad)
les
test
call
aad
inc
add
stc
out
ja
jge
in
loopne
lea
inc
or
xchg
cld
xchg
jae
call
out
dec
dec
call
aad
inc
add
stc
out
ja
jge
in
loopne
lea
inc
or
mov
cld
xchg
jae
call
out
dec
dec
call
aad
inc
add
stc
out
ja
jge
gs
ins
(bad)
(bad)
arpl
cdq
fwait
je
mov
jno
(bad)
xchg
fisubr
ds
inc
push
test
add
ins
push
adc
clc
sub
ins
jp
mov
inc
mov
call
aad
inc
add
stc
ds
fisubr
(bad)
retf
jb
(bad)
cmp
inc
ins
(bad)
retf
jb
(bad)
cmp
xor
out
mov
push
cmp
push
inc
ins
(bad)
(bad)
les
inc
ins
(bad)
dec
ins
lea
fwait
je
cli
imul
inc
add
out
inc
add
stc
ds
cli
cld
xchg
jae
push
add
cwde
inc
ins
fisubr
sub
into
test
scas
lock
lea
cmc
jp
adc
cmps
inc
ins
jb
cld
xchg
jae
call
out
dec
dec
call
aad
inc
add
stc
out
ja
jge
in
fisubr
lea
inc
or
sub
add
not
sahf
das
lock
inc
(bad)
fnstenv
(bad)
xchg
add
(bad)
les
xor
add
mov
jno
(bad)
xchg
(bad)
call
add
adc
rol
add
not
sahf
das
retf
mov
inc
(bad)
fnstenv
(bad)
xchg
cmp
(bad)
(bad)
les
inc
ins
(bad)
dec
ins
lea
fwait
je
cli
imul
add
call
lea
test
scas
adc
lea
lea
cmc
jp
adc
add
add
not
jb
(bad)
cmp
jns
lea
call
out
dec
push
adc
inc
psubsb
inc
add
les
ret
ins
dec
ret
jb
add
arpl
jae
(bad)
les
ins
data16
xchg
mov
rcl
mov
mov
dec
mov
rcl
jl
xchg
xor
add
not
add
mov
(bad)
ret
and
rol
mov
(bad)
or
lea
fild
(bad)
retf
lea
inc
ins
(bad)
(bad)
les
outs
push
ins
lea
call
or
mov
in
lea
arpl
call
jb
call
lea
xchg
(bad)
test
in
fisubr
lea
call
out
dec
pop
call
aad
inc
add
stc
out
ja
jge
in
fisubr
lea
inc
or
push
pop
add
add
not
sahf
das
retf
mov
inc
(bad)
fnstenv
(bad)
xchg
gs
les
xor
inc
add
xchg
ins
adc
stc
out
ja
jge
in
loopne
lea
inc
or
or
add
test
or
test
psubusb
xchg
jb
test
jge
out
or
mov
add
jb
dec
ins
lea
ror
dec
test
inc
add
jge
lock
int3
inc
jo
inc
enter
test
add
ins
(bad)
int3
test
stos
call
in
fisubr
(bad)
retf
jb
(bad)
cmp
pop
inc
ins
(bad)
(bad)
les
retf
jo
and
jne
add
in
cmp
pop
jge
(bad)
loope
inc
add
or
test
mov
and
lea
jmp
(bad)
sub
mov
call
jb
lock
jo
mov
jno
(bad)
xchg
(bad)
fs
inc
push
test
js
ins
push
sbb
or
ins
xor
add
not
sahf
das
pop
mov
inc
(bad)
fnstenv
(bad)
xchg
gs
ins
(bad)
(bad)
les
add
inc
add
xchg
ins
adc
stc
out
ja
jge
in
fisubr
lea
inc
or
mov
dec
add
not
sahf
das
lock
inc
(bad)
fnstenv
(bad)
xchg
adc
ins
(bad)
(bad)
les
lock
jo
call
in
dec
push
push
ins
lea
jmp
or
xchg
jb
(bad)
fnstenv
(bad)
xchg
fisubr
sub
mov
test
jae
inc
cdq
inc
ins
jb
cld
xchg
jae
call
out
dec
dec
call
aad
inc
add
stc
out
ja
jge
in
fisubr
lea
inc
or
adc
ins
xor
add
not
sahf
das
retf
mov
inc
(bad)
fnstenv
(bad)
xchg
gs
ds
(bad)
(bad)
les
test
sub
ins
(bad)
dec
ins
lea
fwait
je
cli
imul
add
call
lea
test
das
xor
jno
(bad)
xchg
gs
(bad)
(bad)
les
ds
(bad)
dec
ins
lea
fwait
je
cli
imul
inc
add
out
inc
add
stc
ds
cli
cld
xchg
jae
push
add
cwde
inc
ins
fisubr
sub
inc
mov
cmc
jp
adc
cdq
inc
ins
jb
cld
xchg
jae
call
out
dec
dec
sbb
(bad)
dec
ins
lea
fwait
je
cli
imul
add
call
lea
test
scas
mov
lea
lea
cmc
jp
adc
cmps
inc
ins
jb
cld
xchg
jae
call
out
dec
dec
call
aad
inc
add
stc
out
ja
jge
gs
ins
lea
fwait
je
mov
jno
(bad)
xchg
fisubr
ds
inc
push
test
jp
ins
push
adc
movs
cdq
inc
ins
jb
cld
xchg
jae
call
out
dec
dec
mov
jp
ins
(bad)
dec
ins
lea
fwait
je
cli
imul
add
call
lea
test
das
sbb
iret
inc
(bad)
fnstenv
(bad)
xchg
gs
cmp
fs
cmp
ins
lea
fwait
je
cli
imul
add
call
lea
test
das
sbb
jno
(bad)
xchg
gs
cmp
fs
push
jp
inc
call
aad
inc
add
stc
out
ja
jge
in
loopne
lea
inc
or
or
mov
jno
(bad)
xchg
(bad)
add
sub
ins
push
adc
or
ins
xor
add
not
sahf
das
lock
inc
(bad)
fnstenv
(bad)
xchg
gs
ins
(bad)
(bad)
les
fisubr
lea
inc
or
ret
jnp
ins
xor
add
not
sahf
das
lock
inc
(bad)
fnstenv
(bad)
xchg
sub
(bad)
(bad)
les
jnp
lea
call
xchg
jnp
ins
xor
add
not
popf
pusha
add
mov
cmp
scas
(bad)
lea
call
out
dec
push
call
aad
inc
add
stc
out
ja
jge
in
loopne
lea
inc
or
push
call
jae
call
out
dec
dec
call
aad
inc
add
stc
out
ja
jge
in
loopne
lea
inc
or
jnp
inc
ins
lea
mov
cmc
jp
adc
jl
ins
xor
add
not
jb
(bad)
cmp
jns
lea
call
out
dec
push
push
xchg
cmp
mov
inc
sub
sub
add
xor
test
ret
jo
sub
jae
call
push
(bad)
retf
jb
(bad)
cmp
mov
call
jb
pusha
push
lea
fldenv
std
xchg
gs
mov
jb
inc
mov
pushf
add
push
test
jo
ins
push
ret
jo
pop
xor
mov
cmp
add
or
mov
call
jb
jmp
xor
xchg
(bad)
mov
jb
call
lea
xchg
mov
inc
push
loope
mov
push
test
call
enter
enter
(bad)
stc
push
in
(bad)
lea
dec
mov
inc
push
test
call
lea
fidiv
push
add
add
gs
lock
jb
les
pop
and
inc
pop
movs
dec
adc
outs
lea
cmp
clc
stos
pusha
aaa
aaa
mov
loop
xchg
jb
add
enter
mov
lods
push
cmps
add
or
std
xchg
jb
inc
fs
inc
add
in
retf
std
xchg
jb
clc
inc
jne
(bad)
pop
push
int3
inc
fs
sub
inc
add
fmul
cmp
out
xchg
jb
call
in
cmp
xchg
jb
mov
jo
inc
adc
out
cmp
xchg
jb
push
data16
push
outs
mov
call
add
push
test
ret
jb
(bad)
fldcw
mov
ins
(bad)
into
test
jo
call
jb
loopne
lea
cmp
mov
add
xchg
jb
push
mov
push
outs
mov
call
lea
ins
pop
add
add
xchg
xchg
jb
sbb
add
movs
xchg
jb
push
test
adc
push
mov
add
inc
add
mov
jb
push
add
fwait
inc
ins
in
fsubr
lea
add
call
out
dec
arpl
lods
clc
dec
push
test
jb
ins
mov
inc
add
inc
add
test
add
mov
jb
push
test
jae
ins
jb
xchg
xchg
jb
(bad)
fstp
repnz
add
repnz
xchg
jb
(bad)
fldcw
retf
jo
(bad)
cmp
or
xchg
jb
les
pushf
xchg
jb
or
jb
ins
mov
inc
add
ret
jb
push
test
jg
ins
add
sub
mov
test
gs
cmp
icebp
xor
jmp
out
push
add
mov
test
sbb
add
lea
stos
or
add
(bad)
jmp
lea
ror
mov
sbb
dec
ret
jb
add
pop
sub
xor
scas
adc
jecxz
xchg
jb
(bad)
jmp
(bad)
and
lea
test
out
call
gs
dec
test
cmp
std
xchg
jb
mov
xchg
movs
mov
xchg
xchg
jb
push
add
fwait
inc
ins
add
cld
xchg
jb
push
test
jo
ins
push
adc
or
inc
or
or
lea
jmp
(bad)
jne
iret
inc
call
in
dec
rcr
das
call
pop
mov
xor
xchg
jb
mov
(bad)
mov
jb
test
ins
lea
adc
mov
or
jle
ins
lea
add
lea
jmp
fst
fstp
das
push
iret
inc
(bad)
jmp
(bad)
sub
inc
jne
push
loop
xchg
jb
add
jo
jmp
pop
or
loop
xchg
jb
add
dec
fbstp
ins
(bad)
retf
jo
(bad)
cmp
sbb
(bad)
call
mov
jo
jb
mov
lea
ins
jb
movs
xchg
jb
call
xchg
cmp
std
xchg
jb
movs
pop
lea
jmp
dec
mov
fwait
push
test
jo
jmp
dec
sbb
inc
test
fmul
in
popa
push
push
cmp
int3
pop
js
ror
retf
into
clc
pop
jne
(bad)
xchg
clc
dec
call
in
and
pop
jne
(bad)
xchg
clc
dec
call
in
and
jl
jmp
add
idiv
gs
ins
(bad)
into
ret
adc
arpl
add
arpl
adc
ins
pop
dec
mov
jnp
shl
adc
loope
push
sub
inc
call
in
(bad)
out
cmp
inc
add
les
mov
lods
add
lock
sub
push
in
pop
push
test
jb
ins
push
or
dec
mov
jle
ins
lea
inc
xchg
add
push
imul
inc
add
jne
clc
in
mov
inc
xchg
add
push
imul
scas
or
inc
push
arpl
add
loope
inc
add
ins
pop
dec
mov
jnp
inc
jl
pop
call
loope
mov
push
push
lea
add
add
das
jne
ins
add
clc
cmp
scas
xor
inc
push
test
jbe
ins
push
add
xor
sbb
scas
fmul
in
rcr
gs
xor
push
cmp
sbb
shr
sbb
add
sub
inc
add
ins
mov
test
ins
mov
add
or
loopne
jb
(bad)
jmp
(bad)
data16
inc
call
in
dec
shl
add
imul
fwait
inc
add
jb
les
inc
add
dec
dec
or
cmps
call
mov
mov
mov
jb
mov
aad
test
ins
mov
add
or
loopne
jb
(bad)
jmp
fst
call
gs
xor
dec
adc
(bad)
call
(bad)
(bad)
les
jne
jb
enter
call
sub
or
bound
ins
lea
aaa
inc
test
push
inc
call
aas
fist
mov
test
stos
xor
sub
add
push
add
inc
add
xor
(bad)
inc
mov
add
je
mov
ja
call
out
dec
dec
push
aas
add
(bad)
(bad)
les
xchg
pop
lea
pushf
movs
mov
stos
in
fild
(bad)
retf
ins
mov
xor
(bad)
(bad)
les
xor
or
cdq
fwait
je
cli
imul
add
loopne
jb
call
out
dec
dec
call
aad
inc
add
stc
out
ja
jge
gs
xor
arpl
cdq
fwait
je
(bad)
ror
das
pop
mov
inc
(bad)
ror
scas
mov
test
scas
sbb
mov
cmc
jp
adc
cmps
inc
ins
add
add
je
ins
push
or
jge
lock
das
aaa
mov
inc
(bad)
jmp
(bad)
sub
inc
mov
cmc
jp
adc
cmps
inc
ins
add
add
je
ins
push
or
xchg
je
ins
xor
add
not
movs
scas
or
inc
mov
cmc
jp
push
loope
inc
loopne
jb
push
loope
inc
loopne
jb
call
out
dec
push
call
popf
das
adc
lea
and
lea
fcomp
inc
sub
into
test
dec
scas
mov
lea
lea
cmc
jp
adc
cmps
inc
ins
add
add
jne
ins
push
or
xchg
add
jne
ins
push
or
sti
jne
ins
xor
add
not
cdq
das
lock
inc
(bad)
jmp
(bad)
sub
inc
(bad)
jmp
(bad)
sub
into
test
scas
xor
inc
mov
cmc
jp
adc
jne
ins
xor
add
not
ins
mov
fsubr
(bad)
retf
ins
mov
xor
les
fisubr
(bad)
retf
ins
mov
xor
les
xor
or
cdq
fwait
je
cli
imul
add
loopne
jb
call
out
dec
dec
push
loope
inc
loopne
jb
call
out
dec
dec
mov
out
ins
(bad)
dec
ins
lea
fwait
je
cli
imul
add
loopne
jb
call
out
dec
dec
push
loope
inc
loopne
jb
call
out
dec
dec
call
aad
inc
add
stc
out
ja
jge
in
loopne
(bad)
retf
ins
mov
xor
les
xchg
inc
lea
sbb
mov
fsubr
(bad)
retf
ins
mov
xor
les
xor
or
cdq
fwait
je
cli
imul
add
loopne
jb
call
out
dec
dec
push
loope
inc
loopne
jb
call
out
dec
dec
call
aad
inc
add
stc
out
ja
jge
in
loopne
(bad)
retf
ins
mov
xor
les
outs
ins
lea
fist
and
ins
xor
add
not
popf
pusha
add
mov
cmp
push
fsubr
(bad)
retf
ins
mov
xor
les
xor
or
cdq
fwait
je
cli
imul
add
loopne
jb
call
out
dec
dec
push
loope
inc
loopne
jb
call
out
dec
dec
add
(bad)
dec
ins
lea
fwait
je
cli
imul
add
loopne
jb
call
out
dec
dec
call
aad
inc
add
stc
out
ja
jge
gs
xor
arpl
cdq
fwait
je
(bad)
ror
das
pop
mov
inc
(bad)
ror
scas
cld
inc
lea
test
das
shl
lea
or
lea
test
sub
add
lea
add
scas
mov
inc
mov
jno
call
lea
jmp
(bad)
push
add
clc
mov
mov
add
mov
in
lea
fnstenv
call
lea
sub
inc
mov
sbb
dec
adc
push
(bad)
out
or
mov
mov
or
mov
imul
dec
xor
pop
fisubr
mov
test
push
outs
mov
xchg
clc
jo
jmp
jne
out
or
sti
xchg
jb
mov
inc
call
in
dec
xchg
xor
mov
cmps
inc
add
or
std
xchg
jb
adc
(bad)
retf
jo
(bad)
cmp
xchg
ins
lea
add
lea
jmp
(bad)
scas
mov
inc
push
add
inc
add
cmps
in
jb
les
xchg
call
in
add
test
add
mov
jb
push
test
mov
(bad)
fldcw
retf
jo
(bad)
cmp
outs
cli
xchg
jb
les
xchg
call
in
fsubr
(bad)
retf
jae
(bad)
cmp
out
cs
(bad)
retf
jo
(bad)
cmp
ret
jb
push
test
imul
xchg
jb
test
jo
jmp
jne
clc
in
sub
test
jae
(bad)
cmp
push
cs
(bad)
(bad)
les
adc
lea
jmp
leave
inc
add
in
jb
add
adc
mov
sbb
dec
ret
jb
add
jne
lea
jmp
(bad)
pop
loope
jecxz
xchg
jb
(bad)
jmp
(bad)
and
lea
test
out
call
gs
dec
test
mov
xchg
cmp
std
xchg
jb
rol
mov
repnz
jle
add
inc
ins
add
cld
xchg
jb
push
test
push
ins
push
adc
or
sti
xchg
jb
jmp
or
jo
lea
jmp
(bad)
jne
iret
inc
call
in
dec
rcr
das
call
pop
cmps
inc
add
or
sti
xchg
jb
mov
repnz
jb
test
add
lock
lea
mov
inc
add
test
jno
(bad)
cmp
scas
enter
push
in
fsubr
(bad)
retf
jno
(bad)
cmp
adc
pusha
mov
jmp
test
or
sti
xchg
jb
push
test
or
dec
dec
test
lea
push
lea
jmp
or
sti
xchg
jb
call
in
jp
imul
lock
(bad)
cmp
repnz
xchg
jb
call
in
mov
inc
dec
fsubr
lea
push
add
fwait
inc
ins
fld
sub
das
or
movs
inc
add
adc
std
xchg
jb
jmp
fmulp
ret
ins
jle
(bad)
fstp
mov
fcom
pop
mov
adc
xor
mov
inc
or
adc
imul
xchg
jb
add
test
jo
(bad)
cmp
mov
ins
(bad)
into
clc
ins
jne
mov
jo
inc
repnz
xchg
jb
call
out
(bad)
xchg
jb
push
in
jp
bound
pop
aaa
inc
test
fmul
in
popa
push
push
cmp
int3
pop
xor
(bad)
xchg
fild
aas
adc
ins
(bad)
into
inc
xchg
jb
or
(bad)
outs
add
clc
loope
inc
adc
out
call
in
adc
test
or
mov
in
mov
stos
fisubr
call
or
call
aas
gs
es
(bad)
retf
(bad)
pop
sub
sub
adc
inc
mov
xor
ins
add
test
fst
call
cmp
daa
ins
(bad)
int3
inc
nop
rcr
pop
movs
dec
adc
ins
lea
push
cmp
xor
mov
mov
mov
sub
(bad)
in
outs
clc
in
dec
neg
mov
xchg
das
jmp
inc
(bad)
jmp
fst
call
push
mov
add
idiv
xchg
push
or
mov
mov
and
ins
out
push
test
outs
add
jmp
rcr
leave
scas
fmul
in
popa
dec
push
ror
add
pop
lea
stos
enter
and
enter
mov
hlt
cmp
xchg
sub
test
mov
push
lea
inc
ins
lea
pop
or
outs
sub
mov
jae
shr
push
jns
call
out
dec
pop
lea
jns
push
in
add
xor
test
add
inc
xchg
xor
xchg
push
mov
leave
scas
fmul
in
popa
dec
push
cmp
xor
je
(bad)
jmp
mov
cld
in
sub
add
lea
add
lea
add
push
out
push
gs
ins
(bad)
into
(bad)
aam
dec
add
mov
jne
mov
adc
jb
test
iret
inc
call
push
mov
push
jb
call
adc
adc
jb
or
inc
call
push
mov
push
jb
sub
int3
inc
call
push
mov
push
jb
sbb
int
call
in
arpl
push
ins
lea
call
fadd
gs
ins
lea
call
fadd
outs
sub
add
out
call
in
ins
gs
sub
add
out
call
out
ins
gs
sub
lock
jge
mov
adc
jb
xor
int3
inc
call
push
mov
push
jb
lock
int3
inc
call
push
mov
push
jb
xchg
iret
iret
inc
call
push
mov
push
jb
cwde
iret
iret
inc
call
aam
outs
add
mov
jns
(bad)
xor
mov
cmp
test
icebp
repz
idiv
xchg
push
jno
xor
test
pusha
add
xchg
sub
das
adc
int
push
jb
call
push
stos
inc
add
jno
xor
test
jnp
sub
int
push
jb
or
inc
call
in
jp
or
cld
xchg
mov
scas
clc
dec
lea
dec
adc
add
mov
inc
ins
gs
es
lea
xchg
sub
scas
aam
lea
ins
sbb
rol
mov
inc
ins
mov
ins
lea
lahf
sub
lea
adc
add
inc
ins
out
call
fadd
gs
ins
lea
lahf
sub
lea
inc
adc
add
mov
inc
ins
gs
es
(bad)
into
clc
pop
jne
mov
sub
add
pop
lahf
sub
int
push
jb
test
iret
inc
call
xor
mov
(bad)
hlt
adc
push
add
fld
lea
cld
xchg
jb
mov
inc
ins
fld
sub
inc
push
(bad)
sbb
fld
push
jb
xor
int3
inc
push
fcmovne
inc
nop
cmps
add
cmp
add
inc
enter
lea
cmp
loope
iret
inc
push
test
add
xchg
mov
sub
mov
jne
inc
pushf
push
scas
fs
push
push
in
add
(bad)
les
push
add
or
inc
mov
in
outs
clc
in
sub
lahf
sub
mov
das
nop
ins
lea
sub
inc
pushf
push
scas
fs
push
push
in
add
(bad)
fdiv
push
add
les
inc
mov
push
lea
add
mov
add
lea
mov
ins
out
push
out
call
in
sub
call
fadd
and
xchg
mov
sub
mov
add
inc
add
push
in
add
ins
mov
inc
push
push
lea
mov
in
jp
jne
lea
lahf
sub
mov
sub
add
push
in
add
sbb
push
add
sbb
lea
int3
cs
xor
push
lea
add
popf
das
shr
inc
push
push
movs
das
add
push
add
pushf
inc
ins
out
call
iret
sbb
call
fadd
out
call
out
ins
out
push
add
inc
add
push
add
popf
inc
ins
in
fld
lea
add
lahf
sub
mov
sub
mov
push
jmp
inc
push
in
add
(bad)
fdiv
push
add
je
lea
test
push
add
dec
int
ins
lea
jp
iret
inc
push
in
add
call
add
popf
inc
ins
out
push
xchg
mov
scas
sbb
lea
ins
jb
xor
int3
inc
push
jb
pusha
int3
iret
inc
push
push
mov
inc
push
in
add
(bad)
fdiv
push
add
or
lea
in
sub
add
dec
sbb
lea
lahf
sub
mov
das
sub
lea
push
in
add
scas
ins
lea
outs
(bad)
(bad)
push
add
cwde
inc
ins
in
fisubr
lea
add
lahf
sub
jb
push
jb
xor
int3
inc
push
jb
inc
int3
int3
inc
push
out
push
add
inc
add
add
imul
add
mov
inc
mov
in
mov
in
stos
mov
mov
inc
call
out
ins
out
push
add
inc
add
add
add
push
add
pushf
inc
ins
out
call
iret
stc
out
ins
out
call
fadd
out
call
out
ins
out
push
in
add
ret
ins
lea
ins
lea
add
popf
inc
ins
in
fld
lea
add
cdq
sub
mov
sub
mov
add
inc
add
add
fs
inc
add
das
fidiv
gs
and
lock
int3
inc
push
jb
xor
int3
inc
push
jb
inc
int3
int3
inc
push
out
push
add
inc
add
add
push
mov
inc
push
push
lea
mov
push
lea
add
lea
add
xchg
das
sub
lea
std
lea
push
cdq
das
add
push
add
popf
inc
ins
in
add
pusha
dec
lea
call
lea
add
lea
add
xchg
das
sub
scas
lea
push
cdq
das
add
push
add
popf
inc
ins
in
add
and
lea
jo
pop
add
jne
clc
in
sub
lahf
sub
mov
sub
fsubr
push
in
add
(bad)
fdiv
push
add
add
and
sub
int3
inc
push
jb
xor
int3
inc
push
jb
pusha
int3
iret
inc
push
out
push
push
cdq
das
add
push
add
popf
inc
ins
in
add
lods
dec
lea
dec
adc
add
lea
add
lea
add
call
lds
add
push
add
sahf
inc
ins
out
call
iret
adc
sbb
xchg
jb
clc
inc
jne
mov
into
in
popa
pop
push
cmp
jo
mov
into
mov
xor
test
push
cmp
not
cs
lahf
sub
jne
mov
adc
add
add
cmp
scas
add
push
jb
xor
int3
inc
push
fcmovne
inc
nop
cmps
add
cmp
add
inc
enter
lea
cmp
loope
iret
inc
push
test
add
mov
xchg
mov
sub
mov
jne
inc
pushf
push
scas
fs
push
push
in
add
(bad)
leave
mov
inc
push
push
lea
mov
in
bound
inc
ins
lea
lahf
sub
mov
das
sub
lea
sub
inc
pushf
push
scas
fs
push
push
in
add
(bad)
fdiv
push
add
pop
dec
lea
or
add
add
lea
add
lea
mov
ins
out
push
out
call
in
sub
call
fadd
gs
add
lea
mov
push
jmp
das
add
push
add
popf
inc
ins
out
call
iret
fiadd
or
sbb
inc
push
push
lea
inc
ins
lea
test
pop
add
fisubr
lea
add
call
sti
xchg
inc
add
mov
mov
jp
inc
push
in
add
xor
test
pop
add
push
out
push
xchg
mov
scas
fs
inc
push
jb
xor
int3
inc
push
jb
pusha
int3
iret
inc
push
push
mov
das
add
push
add
popf
inc
ins
out
call
iret
or
mov
push
jb
xor
int3
inc
push
jb
pusha
int3
iret
inc
push
push
mov
adc
and
ins
in
add
(bad)
fdiv
push
add
sbb
inc
mov
test
mov
xchg
out
call
fadd
out
call
out
ins
out
push
push
jecxz
adc
lea
ins
lea
add
popf
inc
ins
in
fld
lea
add
mov
xchg
mov
sub
mov
push
jmp
scas
lea
add
inc
add
das
fidiv
gs
ins
(bad)
in
cmc
int3
inc
mov
fwait
push
inc
add
ins
jb
xor
int3
inc
push
jb
inc
int3
int3
inc
push
in
add
mov
or
inc
add
adc
push
add
pop
jb
inc
mov
push
lea
add
lea
add
popf
sub
add
add
add
push
add
pushf
inc
ins
out
call
iret
sbb
inc
ins
out
call
fadd
out
call
out
ins
out
push
add
inc
add
push
add
sahf
inc
ins
in
fld
lea
add
mov
xchg
mov
sub
mov
add
inc
add
add
push
add
inc
add
das
fidiv
neg
iret
iret
inc
push
jb
xor
int3
inc
push
jb
pusha
int3
iret
inc
push
in
add
sub
ins
or
add
inc
ins
in
add
js
lea
jo
pop
add
jp
jns
lea
lahf
sub
mov
sub
inc
push
cdq
das
add
push
add
popf
inc
ins
in
add
cmp
lea
inc
adc
add
lea
add
lea
add
xchg
sub
adc
lea
cmp
fild
lea
add
pop
test
addr16
sub
mov
sub
mov
add
inc
add
add
push
add
inc
cmp
cli
mov
inc
push
mov
(bad)
in
iret
iret
inc
call
aam
adc
mov
gs
mov
into
in
popa
pop
push
cmp
clc
and
dec
mov
into
mov
lea
outs
out
push
in
add
jne
ficomp
ins
(bad)
into
(bad)
out
jae
psubsb
add
push
test
pop
add
push
test
pop
add
cld
ins
dec
add
push
jne
out
enter
add
lock
add
cmp
add
cmp
xor
add
repz
ins
in
add
dec
iret
jb
sub
add
jb
cld
add
sahf
inc
ins
in
fldcw
lea
or
sbb
enter
stc
fs
out
lea
jne
call
popf
das
cmp
ins
lea
test
in
xchg
push
sbb
jne
clc
in
sbb
inc
test
push
inc
add
(bad)
mov
xchg
and
stos
or
mov
lea
into
cmp
inc
call
xchg
inc
add
dec
add
not
jb
jge
mov
adc
test
jb
push
test
mov
pushf
add
adc
inc
jne
in
mov
(bad)
retf
jb
(bad)
cmp
pop
sbb
jge
mov
adc
test
jb
push
test
cmp
push
cmp
add
or
xchg
jb
call
in
inc
lock
(bad)
jge
mov
adc
ret
jb
push
test
add
jmp
push
push
loope
inc
call
call
sbb
(bad)
jmp
(bad)
adc
dec
jne
in
mov
(bad)
retf
jb
(bad)
cmp
into
pop
ins
(bad)
into
lock
jge
(bad)
in
lock
mov
jmp
(bad)
adc
dec
jne
in
mov
(bad)
retf
jb
(bad)
cmp
adc
ins
(bad)
(bad)
jge
xchg
adc
cmc
inc
ins
add
add
mov
add
jmp
push
push
loope
inc
call
call
sbb
(bad)
jmp
(bad)
mov
mov
adc
dec
jne
in
mov
(bad)
retf
jb
(bad)
cmp
stos
push
ins
lea
inc
mov
inc
push
loope
inc
call
adc
add
jl
lea
mov
sub
push
add
xchg
lea
sub
into
test
scas
es
jb
pop
aaa
inc
test
fmul
in
fist
mov
test
out
pop
adc
mov
or
ins
add
push
ins
ficom
bound
or
scas
push
je
inc
pop
xor
sbb
push
or
cmp
push
cmp
stc
push
push
int3
jns
call
and
inc
push
loope
stos
not
fwait
inc
add
dec
add
not
jb
adc
mov
adc
cmc
inc
ins
add
in
fwait
jb
push
test
add
repz
jb
add
pushf
das
(bad)
fmulp
inc
(bad)
jmp
(bad)
adc
mov
adc
cmc
inc
ins
add
in
fwait
jb
push
test
add
adc
out
or
(bad)
in
xor
jge
inc
mov
(bad)
retf
jp
(bad)
cmp
out
ins
(bad)
(bad)
mov
imul
add
not
cwde
inc
add
xor
jge
jae
cs
retf
jp
(bad)
cmp
sub
lahf
jne
jmp
push
push
loope
stos
not
cwde
inc
add
jge
lock
(bad)
mov
fs
push
push
loope
stos
not
cwde
inc
add
xor
jge
int3
mov
(bad)
retf
jp
(bad)
cmp
pop
adc
lahf
jne
jmp
push
push
loope
stos
not
cdq
inc
add
xor
jge
mov
cmp
adc
(bad)
into
lock
imul
mov
jmp
dec
(bad)
mov
pusha
clc
push
push
loope
stos
not
cdq
inc
add
xor
jge
inc
mov
(bad)
retf
jp
(bad)
cmp
loop
ins
(bad)
(bad)
mov
(bad)
clc
push
push
loope
stos
not
cdq
inc
add
ret
jb
push
test
mov
mov
fcomp
in
mov
fmulp
inc
call
out
dec
push
mov
gs
xchg
or
mov
mov
ins
add
outs
lea
or
test
movs
mov
stos
mov
aaa
mov
scas
jb
sub
mov
test
mov
or
mov
add
mov
push
add
ins
lea
shl
call
mov
stos
or
mov
fwait
imul
mov
dec
retf
jne
(bad)
cmp
jb
cs
retf
jno
(bad)
cmp
(bad)
sbb
les
cli
clc
xchg
jb
add
movs
scas
inc
je
inc
mov
cmp
dec
mov
sub
dec
add
shl
call
lea
push
in
fiadd
(bad)
xor
add
out
ins
in
fldcw
(bad)
retf
jae
(bad)
cmp
push
sbb
lock
jge
mov
fldcw
(bad)
retf
jne
(bad)
cmp
mov
les
push
loope
mov
call
aam
sbb
ins
jp
mov
pop
mov
xchg
add
(bad)
jmp
(bad)
adc
jno
call
lea
outs
push
add
clc
xchg
jb
call
out
dec
push
(bad)
jmp
(bad)
(bad)
jmp
push
xchg
add
cld
xchg
jb
push
add
lahf
inc
ins
add
cld
xchg
jb
push
test
push
add
adc
(bad)
retf
jne
(bad)
cmp
loop
ins
lea
inc
ins
add
cld
nop
jb
push
test
(bad)
xchg
push
or
inc
add
or
shr
fdivr
inc
pop
in
mov
lock
imul
mov
dec
les
data16
ins
lea
fnstenv
call
lea
in
iret
inc
(bad)
jmp
(bad)
sub
inc
(bad)
jmp
(bad)
(bad)
jmp
(bad)
mov
pop
mov
xchg
popaw
mov
pop
mov
xchg
or
mov
mov
pop
mov
xchg
dec
ret
add
ins
dec
jmp
pop
mov
xchg
push
cli
aam
jb
add
pop
into
lock
imul
mov
dec
mov
jmp
or
push
loope
mov
call
out
dec
push
(bad)
jmp
(bad)
mov
inc
mov
xchg
add
cld
xchg
jb
push
test
push
add
enter
lea
mov
push
int
loopne
lea
jmp
or
stos
jge
inc
(bad)
jmp
fnstsw
inc
ret
jb
push
test
push
add
cld
xchg
jb
push
out
mov
xchg
jb
jl
mov
call
loope
mov
push
jb
hlt
xchg
jb
push
push
lea
add
aam
lea
jmp
fst
fldenv
call
jb
les
test
lods
add
xchg
jb
(bad)
fldenv
call
(bad)
(bad)
out
inc
ret
add
xor
ins
gs
ins
lea
jmp
xor
sbb
scas
mov
in
jmp
inc
call
aas
fist
mov
in
jbe
in
das
xchg
fmul
inc
push
in
add
scas
and
inc
mov
sub
je
(bad)
push
gs
adc
xchg
jg
ins
push
add
iret
mov
inc
push
icebp
int3
inc
xchg
ins
lea
mov
movs
mov
cmp
push
test
push
add
add
nop
int
inc
call
test
scas
and
inc
add
(bad)
retf
arpl
or
inc
push
loope
imul
xchg
jb
call
out
dec
push
cmp
arpl
pop
add
add
fs
bound
inc
jmp
repz
ins
or
fs
inc
call
(bad)
pop
or
fmul
rcr
mov
shl
int3
into
cli
in
in
xchg
jb
test
pusha
mov
call
arpl
cli
mov
jb
mov
cmp
dec
mov
sub
dec
(bad)
(bad)
or
mov
in
xchg
jb
test
pusha
mov
mov
jb
cmp
sti
xchg
ins
dec
ret
jb
add
test
scas
mov
push
stos
or
in
xchg
jb
(bad)
jmp
mov
mov
mov
mov
inc
(bad)
jmp
(bad)
sbb
adc
test
arpl
adc
test
popa
mov
lds
pusha
mov
(bad)
xchg
jb
les
(bad)
jmp
(bad)
push
gs
ins
(bad)
(bad)
repz
stos
inc
add
lahf
inc
ins
in
mov
mov
inc
push
test
push
add
bound
mov
add
leavew
in
fsubr
lea
nop
int
inc
push
add
out
ins
xor
ins
(bad)
into
fadd
into
ret
loope
outs
out
xchg
jb
xor
aad
inc
add
movs
add
lahf
inc
ins
in
mov
mov
inc
push
test
push
add
loop
jb
lea
xchg
inc
ins
xor
add
leavew
in
fsubr
lea
nop
int
inc
push
add
fld
gs
adc
les
cli
mov
pop
dec
xchg
inc
ins
xor
add
movs
in
outs
fsub
dec
sub
add
lea
add
scas
cwde
arpl
sub
add
add
dec
add
mov
xor
test
dec
add
mov
jb
and
jne
out
lea
xor
repnz
xchg
jb
call
cmp
push
add
mov
pushf
ins
add
call
in
pop
inc
ins
lea
add
mov
xor
test
push
add
mov
jb
and
jne
out
lea
xor
repnz
xchg
jb
call
cmp
push
add
mov
pushf
ins
add
call
xchg
clc
repz
aam
add
mov
cmp
ret
jb
mov
iret
inc
mov
ins
out
repz
inc
mov
inc
retf
lock
add
enter
repnz
add
lea
mov
pop
das
add
lea
ins
dec
ins
(bad)
into
inc
mov
lea
sub
add
add
add
stos
enter
lea
mov
lahf
mov
lea
stos
enter
lea
sub
pop
call
push
lea
add
lea
add
lea
retf
cmps
fld
lea
loope
iret
inc
push
gs
adc
add
int3
inc
push
push
lea
add
call
out
dec
inc
call
push
lea
in
jmp
stc
push
add
add
fsubr
lea
call
in
jmp
xchg
jb
jmp
call
ins
out
push
xchg
sbb
in
xchg
jb
test
arpl
add
push
outs
fsub
dec
retf
pusha
mov
lods
xor
add
repz
ins
in
fsubr
lea
push
fmul
inc
push
test
sar
xchg
push
sbb
dec
xor
out
test
mov
lea
imul
inc
add
test
jb
fadd
into
ret
loope
out
out
xchg
jb
push
out
push
push
lea
add
mov
inc
(bad)
jmp
(bad)
pop
pop
int
push
out
call
cmp
cs
lea
add
call
fadd
gs
push
ins
lea
test
dec
add
cmp
sub
call
push
lea
inc
mov
scas
push
bound
xchg
pop
xor
mov
jl
adc
outs
lea
cmp
clc
sbb
daa
sub
jne
psubsb
dec
adc
add
mov
add
test
pop
push
sahf
inc
add
cmp
arpl
jmp
lea
call
fimul
ins
(bad)
les
ins
add
ins
lea
cdq
push
add
mov
lea
mov
popa
mov
add
add
std
xchg
jb
and
popf
into
test
lahf
std
xchg
jb
(bad)
fldenv
call
lea
arpl
ret
(bad)
retf
jo
(bad)
cmp
jb
int3
int3
inc
call
gs
xor
or
test
inc
mov
pop
mov
enter
cmp
mov
fcom
mov
xchg
mov
sbb
rcr
mov
mov
test
push
ret
jb
sub
push
mov
add
lea
add
mov
arpl
repz
ins
lea
lods
mov
int
repz
ins
cs
mov
(bad)
(bad)
neg
inc
add
test
mov
lea
push
std
repz
ins
lea
pop
cmp
mov
adc
inc
ins
mov
loopne
inc
add
lea
pop
test
inc
add
add
push
add
dec
psubsw
inc
add
call
test
inc
add
lahf
sub
clc
dec
call
test
mov
fwait
push
test
dec
scas
xor
sub
mov
sub
add
sbb
jl
sbb
add
sbb
push
add
mov
add
add
sbb
add
add
sbb
push
add
popf
push
ins
lea
call
out
mov
add
sbb
add
add
sbb
inc
call
popf
scas
mov
xchg
jb
add
add
ins
jp
mov
push
mov
or
mov
movs
mov
jmp
fcom
add
ins
add
call
stos
or
ins
sbb
ins
(bad)
into
clc
inc
jne
mov
ret
jb
push
xchg
mov
scas
in
lea
ror
and
lea
inc
ins
out
call
xchg
mov
scas
add
lea
call
clc
in
int
ins
jb
jmp
or
test
or
inc
add
fld
ins
lea
jmp
(bad)
jmp
fnstsw
add
retf
jb
and
jne
push
mov
add
cmps
inc
ins
add
add
jae
call
jb
add
push
out
push
push
lea
call
out
ins
xor
ins
lea
mov
fwait
push
test
retf
jb
(bad)
cmp
ret
jb
push
add
lahf
inc
ins
add
cmc
xchg
jb
push
test
dec
add
adc
inc
add
add
mov
scas
in
lea
ror
and
lea
inc
ins
out
call
xchg
mov
scas
add
lea
call
call
int
cmp
lea
stc
out
jne
je
out
push
in
xlat
lea
add
sbb
int
call
test
ins
dec
ret
jb
add
lea
add
push
mov
cmp
push
lea
inc
ins
out
call
xchg
mov
scas
nop
lea
out
mov
in
or
xchg
jb
mov
lea
jb
add
sub
mov
test
in
fsubr
(bad)
retf
jo
(bad)
cmp
ror
ins
(bad)
(bad)
les
add
test
mov
or
inc
call
in
xor
xchg
jb
jne
out
push
in
xlat
lea
add
or
inc
call
test
or
mov
test
in
fsubr
(bad)
retf
jo
(bad)
cmp
push
ins
(bad)
(bad)
les
add
test
mov
sub
int3
inc
call
in
xor
xchg
jb
jne
out
push
in
xlat
lea
add
sub
int3
inc
call
test
add
xor
mov
test
in
xlat
cs
retf
jo
(bad)
cmp
or
(bad)
(bad)
les
add
test
mov
sub
int3
inc
call
in
xor
xchg
jb
jne
out
push
in
xlat
lea
add
sub
int3
inc
call
test
add
jb
adc
jne
push
mov
add
lea
sub
iret
inc
push
and
ins
lea
add
inc
add
test
data16
fimul
mov
test
mov
jl
mov
jle
out
push
in
xlat
lea
add
sub
int3
inc
call
test
add
call
or
add
xor
clc
inc
jne
(bad)
loope
inc
call
js
call
iret
inc
(bad)
jmp
(bad)
sub
inc
(bad)
jmp
fnstsw
add
cli
add
lods
sub
adc
gs
adc
add
or
ins
lea
jmp
pminub
mov
test
mov
jl
mov
jle
out
push
in
(bad)
lea
add
and
int3
inc
call
test
ret
jb
add
add
xchg
jb
enter
cmp
lea
stc
arpl
sar
xchg
jb
cmp
mov
ret
jb
push
loope
mov
xchg
jb
push
loope
mov
xchg
jb
call
out
dec
push
mov
fwait
push
test
scas
std
xchg
jb
mov
mov
add
push
test
inc
add
hlt
xchg
jb
push
out
push
jb
hlt
xchg
jb
call
in
mov
mov
lea
sub
dec
xor
int
and
jne
add
push
add
lock
jb
push
aas
in
cdq
sub
mov
inc
inc
(bad)
jmp
(bad)
inc
ins
jb
hlt
xchg
jb
call
loope
mov
xchg
jb
enter
cmp
lea
stc
push
(bad)
retf
jo
(bad)
ds
popf
cdq
jo
(bad)
aas
jb
hlt
xchg
jb
call
push
(bad)
retf
jo
(bad)
cmp
inc
push
xchg
cmp
js
lea
fnstcw
call
lea
add
inc
push
out
push
out
push
add
xlat
inc
ins
inc
(bad)
into
test
jne
out
or
test
dec
sub
add
jb
mov
lea
popa
sbb
(bad)
jmp
mov
(bad)
stc
jge
call
das
add
(bad)
xchg
jb
hlt
push
add
lock
jb
push
push
mov
in
mov
jns
call
lea
inc
inc
ins
fmul
inc
add
mov
inc
push
in
mov
lea
jns
iret
inc
push
add
inc
add
ror
inc
call
fadd
gs
add
je
inc
test
push
call
cdq
mov
or
clc
dec
call
xor
sbb
scas
popf
inc
push
in
(bad)
in
jl
adc
clc
dec
mov
in
inc
clc
in
int3
inc
pusha
mov
add
test
lock
or
add
lea
sub
add
xchg
add
mov
clc
in
jl
test
push
add
xchg
add
jb
int
inc
jne
jb
sub
int3
inc
call
push
mov
xor
xchg
mov
scas
pop
push
jp
mov
jns
(bad)
push
mov
xor
xchg
mov
scas
inc
push
movs
fadd
clc
dec
call
fadd
gs
ins
lea
adc
add
cdq
(bad)
cmp
ins
clc
dec
call
fiadd
gs
add
lea
adc
add
xchg
(bad)
cmp
ins
clc
push
call
out
ins
gs
ins
lea
in
mov
stos
mov
fiadd
clc
inc
mov
rol
mov
or
inc
jne
push
pop
cmp
int3
inc
cmp
fadd
clc
inc
mov
fadd
or
int
lea
pop
xchg
rol
clc
inc
mov
xlat
inc
ins
mov
sub
int3
inc
jne
push
pop
js
iret
inc
cmp
fadd
clc
inc
mov
fiadd
mov
test
iret
inc
jne
push
pop
sbb
int3
inc
or
cdq
mov
or
fisubr
jmp
or
push
jbe
inc
pop
xor
mov
jl
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
push
in
push
push
test
inc
add
adc
and
scas
into
clc
sub
scas
push
imul
xchg
add
add
xchg
dec
rcr
(bad)
clc
dec
clc
mov
ins
retf
imul
sbb
add
inc
push
push
lea
call
xor
in
popa
inc
adc
add
test
jp
jl
inc
jae
movs
add
lea
cmp
mov
cli
sahf
and
mov
test
arpl
sub
xchg
dec
dec
add
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
dec
mov
ins
sbb
inc
