mov
mov
xor
out
xor
out
ss
je
push
xchg
cld
sti
dec
shl
aad
stos
ja
sub
adc
ret
ja
push
ret
ja
jecxz
push
lahf
jecxz
jg
sbb
hlt
inc
xchg
mov
test
push
retf
jb
inc
leave
jecxz
les
out
xor
iret
hlt
ret
fcmovnb
ja
mov
sub
mov
fs
sub
stos
xchg
(bad)
pop
cmp
sbb
jmp
add
push
dec
fwait
loop
aas
and
lea
mov
xchg
and
jecxz
jnp
sub
xor
push
ret
ja
addr16
retf
mov
nop
dec
xor
clc
jae
mov
sub
cld
int3
fs
or
jmp
mov
push
mov
or
cmp
xchg
sbb
jae
mov
push
inc
cvtpi2ps
cld
std
ins
pusha
dec
cvtpi2ps
and
cmp
mov
push
jae
mov
sub
test
in
dec
cvtpi2ps
inc
xor
loop
dec
sub
adc
cld
les
lahf
xchg
xchg
cmp
cmp
(bad)
cli
aam
xchg
and
stos
cmp
jg
fs
mov
xchg
xchg
clc
mov
mov
cld
mov
sub
jg
mov
xor
rcr
inc
xchg
cmp
jnp
test
(bad)
std
push
test
ja
jmp
jg
test
push
aad
add
scas
fadd
ja
pusha
sub
ret
push
retf
outs
jnp
mov
jmp
mov
inc
xchg
mov
or
mov
mul
sub
lahf
fwait
adc
ja
lods
(bad)
iret
mov
aaa
popf
sub
test
(bad)
std
push
ret
push
jae
mov
xor
mov
or
ja
push
test
xor
jmp
adc
dec
ret
ja
push
xchg
and
or
out
ds
mov
lods
(bad)
sbb
xchg
fadd
xor
std
push
ret
mov
xchg
not
sub
mov
loope
arpl
sub
lahf
iret
push
ret
ja
lods
fild
loope
mov
or
fcmovne
ret
ja
push
es
cmps
and
ja
(bad)
mov
mov
shl
sbb
xchg
cmp
js
ret
sbb
mov
push
push
aaa
mov
push
loope
mov
test
inc
loope
hlt
inc
xchg
mov
mov
dec
repnz
fstp
cmp
fstp
sahf
enter
push
mov
ja
cmp
jb
push
ret
retf
xor
test
dec
ret
jmp
jnp
xchg
cmp
mov
sub
imul
iret
push
xor
ja
(bad)
fstp
ret
cmp
mov
ss
mov
out
cmp
jle
jmp
ret
cli
cli
nop
xchg
cli
cli
xchg
xchg
sbb
mov
test
ja
sbb
sub
(bad)
push
add
cdq
push
mov
jo
add
push
mov
push
scas
mov
mov
xchg
sub
(bad)
push
mov
nop
ret
rol
ja
push
mov
mov
aaa
popf
mov
cmp
iret
and
xlat
cmp
adc
fsubr
sbb
(bad)
ss
dec
xor
stos
outs
mov
xchg
mov
inc
sbb
ret
ja
scas
retf
ins
repnz
pop
cmp
cmps
xchg
mov
inc
sbb
mov
inc
sbb
ret
ja
scas
cmp
inc
sbb
mov
ins
repnz
data16
or
inc
lahf
and
cli
pushf
dec
mov
or
js
and
jecxz
jnp
sub
xlat
cld
cli
nop
dec
mov
stos
dec
and
mov
sub
hlt
ficomp
pushf
rcr
cld
cli
nop
dec
mov
stos
dec
and
mov
sub
inc
inc
add
xor
retf
js
ins
sar
std
dec
outs
sbb
inc
mov
mov
stos
mov
inc
sub
cli
xor
(bad)
cld
cli
xchg
sub
push
lahf
ja
lahf
cmps
(bad)
ss
test
dec
jmp
mov
call
cmp
sbb
cli
xchg
dec
xor
xchg
xor
imul
mov
xchg
jnp
inc
push
or
push
mov
mov
sbb
add
inc
xchg
cmp
or
dec
mov
stos
dec
loop
xchg
cmp
ret
std
push
add
ja
xor
imul
add
xchg
cmp
push
and
push
jp
(bad)
xchg
cwde
dec
and
cld
(bad)
jbe
xchg
cmp
xchg
aas
mov
dec
repnz
xchg
cmp
mov
xor
inc
xchg
cmp
mov
dec
repnz
xchg
cmp
xchg
(bad)
jbe
xchg
cmp
xor
ret
xchg
pushf
sub
mov
inc
fwait
stos
cmp
mov
xchg
dec
ret
addr16
fwait
push
dec
xor
xchg
push
pop
mov
jg
mov
dec
mov
add
mov
mov
add
jge
dec
arpl
mov
(bad)
outs
mov
sub
xor
dec
loope
fwait
ss
or
cmp
mov
xchg
icebp
pop
inc
daa
dec
xor
add
loope
mov
cmps
mov
mov
mov
dec
mov
add
mov
mov
add
jge
dec
arpl
mov
ret
sbb
dec
xor
xchg
std
push
(bad)
outs
mov
stos
xchg
(bad)
pop
cmp
addr16
xlat
mov
xchg
inc
dec
dec
sub
inc
loope
inc
jge
xchg
mov
mov
std
push
dec
xor
loope
pop
dec
jecxz
jnp
(bad)
xlat
data16
sbb
inc
sbb
test
pop
add
loope
or
cmp
enter
daa
ss
repnz
ss
cmp
retf
fadd
pop
loope
xor
xchg
dec
xor
sahf
jnp
cmp
and
mov
dec
sub
nop
and
mov
pop
push
push
popa
dec
(bad)
xor
add
loope
or
cmp
enter
aaa
pop
loop
ja
lahf
and
cli
xchg
dec
mov
sbb
ret
ja
scas
test
mov
xchg
mov
aad
test
ja
rol
nop
ss
mov
or
ds
cld
retf
add
ret
dec
icebp
cdq
ja
jmp
jmp
sub
ja
arpl
sbb
ret
daa
xor
cmp
mov
test
push
(bad)
cld
cmps
xchg
nop
jg
outs
cmp
xor
cmp
mov
cmp
ss
sub
loope
or
je
and
jecxz
jg
sub
cmp
loope
hlt
cdq
push
test
ja
in
xchg
add
xchg
std
push
ret
(bad)
jl
cmp
loope
inc
jg
sbb
test
xor
add
jmp
sub
sbb
cli
cwde
xchg
lahf
jmp
ret
ja
stos
repnz
mov
jmp
loope
lahf
mov
mov
ss
inc
mov
cmp
cld
mov
xchg
xlat
bound
stos
inc
cwde
mul
ret
ja
test
lods
mov
add
cli
mov
mov
ins
repnz
or
inc
imul
jb
xchg
cmp
mov
add
lea
mov
sbb
ja
ds
int3
xor
pusha
pop
ss
scas
ss
inc
dec
ret
fadd
ja
outs
inc
push
(bad)
fadd
ret
std
push
inc
mov
cli
fs
ud2
sub
idiv
ja
jmp
jmp
sub
ja
jo
jmp
sub
daa
xor
cmp
mov
sub
out
push
pusha
xor
inc
push
cmp
inc
cmp
mov
pop
add
xlat
fwait
and
inc
xchg
cmp
push
inc
cmp
adc
hlt
call
sub
popf
retf
ja
jmp
ret
cli
cli
pushf
xchg
cld
cli
pusha
dec
aaa
mov
aas
(bad)
cli
xchg
inc
or
int3
repz
ja
adc
jmp
push
xor
inc
dec
scas
dec
mov
addr16
cmp
jb
fadd
dec
mov
push
(bad)
hlt
call
or
sub
(bad)
cli
nop
inc
mov
push
ret
ja
push
ret
cs
scas
ss
movs
mov
mov
ja
sub
pusha
or
sub
cli
cli
cwde
xchg
cli
retf
fwait
scas
loope
into
mov
int
or
jecxz
mov
dec
dec
xor
sbb
inc
xchg
cmp
jl
mov
pop
and
xor
jecxz
xchg
jecxz
mov
push
add
mov
sbb
loope
cli
cmp
jmp
sub
daa
xor
cmp
sub
ja
sub
(bad)
mov
adc
xor
mov
in
pop
mov
mov
ds
inc
pop
mov
retf
xor
retf
xor
pusha
cmp
inc
jecxz
add
cmp
inc
jmp
jmp
sub
ja
sub
ja
lahf
and
cmp
sub
xor
mov
loope
hlt
push
js
and
xlat
push
ds
inc
cwde
dec
adc
ja
sahf
dec
test
lahf
loope
mov
push
inc
addr16
out
push
xlat
mov
xchg
ret
push
xor
ss
mov
aas
cmp
rol
loop
xchg
sub
jbe
pop
mov
sbb
cmp
aas
ja
sub
ret
clc
popa
xor
mov
loope
sbb
(bad)
ss
add
ja
sub
retf
ins
inc
adc
inc
or
mov
push
cmp
xor
std
push
ret
scas
inc
adc
repnz
ss
xor
ss
fistp
sbb
dec
dec
sbb
xchg
ins
repz
xchg
(bad)
dec
(bad)
adc
ret
inc
cmp
js
dec
xor
addr16
inc
inc
xchg
cmp
ficom
add
pop
pop
aaa
mov
push
push
popa
mov
push
test
ja
add
jmp
shr
(bad)
cli
nop
test
ja
xor
mov
loope
hlt
ja
xor
imul
sbb
out
cmp
mov
mov
push
pop
lods
ja
add
cli
cli
pushf
xchg
sbb
std
push
test
(bad)
xor
xchg
inc
cmp
mov
mov
jnp
mov
add
xchg
int3
fcom
(bad)
(bad)
(bad)
cmp
cmp
inc
loope
idiv
ja
scas
inc
mov
cmp
xlat
mov
xor
mov
xchg
cmp
mov
xchg
lahf
iret
xchg
cmp
out
add
mov
ja
loope
inc
addr16
sbb
mov
push
cmp
inc
loope
jbe
loope
mov
movs
cmp
inc
in
mov
xchg
cmp
push
cmp
inc
jmp
jnp
push
pop
aam
push
lahf
jae
push
jae
inc
xchg
dec
mov
in
and
and
xor
and
inc
popa
add
sbb
loope
fild
cmp
jl
inc
stos
inc
xchg
cmp
xlat
or
xor
inc
xchg
cmp
xor
cmp
sub
mov
test
repnz
ja
stos
imul
push
cmp
aam
push
xchg
(bad)
sub
inc
jne
push
xor
add
inc
xchg
cmp
jnp
dec
mov
loope
pop
cmp
cmp
xlat
std
push
dec
mov
in
jge
inc
xchg
xchg
(bad)
and
xor
adc
xor
add
rol
ja
push
inc
retf
cmp
clc
mov
xchg
cmp
inc
push
ret
ja
imul
mov
sub
dec
xchg
cmp
jnp
dec
mov
loope
rol
cmp
jl
stc
ja
addr16
sbb
cmp
mov
push
mov
and
in
mov
xchg
pop
out
enter
xchg
lods
ja
jmp
jnp
fild
inc
xchg
cmp
mov
push
cmp
inc
push
xor
push
out
mov
mov
ss
xchg
inc
mov
push
cmp
mov
imul
mov
sub
xchg
cmp
jnp
dec
mov
inc
fild
cmp
mov
add
xchg
std
push
ret
lahf
push
popf
cmp
cmp
iret
dec
inc
xchg
ret
ja
dec
test
xor
inc
xchg
cmp
push
mov
pop
jnp
xchg
cmp
mov
sar
imul
pop
adc
arpl
mov
xchg
inc
mov
push
cmp
mov
imul
mov
sub
dec
xchg
cmp
jnp
dec
mov
inc
fild
cmp
mov
add
std
push
ret
lahf
fistp
iret
dec
inc
xchg
ret
ja
dec
test
xor
inc
xchg
cmp
push
das
mov
pop
jnp
xchg
cmp
mov
sar
imul
sbb
inc
xchg
cmp
jl
ret
mov
ss
xchg
inc
mov
push
cmp
mov
in
imul
push
and
(bad)
push
cmp
jnp
dec
mov
inc
fild
cmp
mov
add
daa
pop
sub
lahf
jae
cmp
cmp
iret
dec
inc
xchg
ret
ja
sub
jbe
shl
xor
inc
xchg
cmp
push
(bad)
aaa
mov
pop
jnp
xchg
cmp
mov
add
retf
cmp
add
mov
push
cmp
mov
in
imul
push
ret
ja
aad
mov
ret
add
sub
ja
in
mov
xchg
lahf
pop
xchg
cmp
out
shl
mov
sub
aam
fadd
scas
ss
add
mov
push
ret
ja
in
sbb
cmp
dec
inc
aas
lahf
(bad)
cli
xchg
retf
in
xor
mov
xchg
cmp
scas
inc
xchg
cmp
xor
cmp
lahf
loope
mov
mov
scas
ss
inc
or
int3
bnd
ret
ja
int
mov
ret
test
mov
xchg
cmp
cmp
jnp
inc
xchg
ret
ffree
ja
jmp
ret
adc
pop
mov
aam
js
arpl
mov
xchg
cmp
out
inc
xchg
cmp
xor
sbb
(bad)
xchg
xchg
imul
xor
ss
inc
mov
dec
mov
in
pop
mov
xchg
pop
das
mov
mov
xchg
cld
xchg
ret
ja
sub
inc
dec
mov
mov
dec
repnz
mov
mov
xchg
ss
inc
or
int3
repnz
in
sub
cmp
dec
dec
inc
aas
sti
(bad)
cli
xchg
retf
in
push
je
push
ret
ja
inc
dec
repnz
xchg
cmp
stos
inc
xchg
cmp
xor
cmp
xchg
xchg
mov
sar
loope
hlt
ret
js
test
ja
in
xchg
inc
xchg
cmp
xor
sub
xchg
aas
(bad)
addr16
sbb
jl
mov
adc
cmps
ja
jmp
xchg
cmp
inc
fnstsw
mov
stos
daa
pop
sub
cli
cmp
sub
push
inc
rcl
cmp
je
push
test
mov
push
cmp
inc
in
mov
cmp
xlat
or
inc
mov
cmp
push
push
scas
ja
jmp
arpl
mov
scas
ss
movs
mov
loopne
mov
ret
cld
cmp
out
xchg
cmp
cmp
cmp
inc
cmp
aaa
xchg
cmp
(bad)
pop
rol
ja
push
dec
mov
inc
fwait
scas
loope
into
mov
int
retf
cmp
mov
inc
dec
xor
add
pop
shl
rol
cmp
ds
cmp
repnz
inc
xchg
std
push
cmp
mov
push
add
inc
shl
xor
out
ret
cli
cmp
cmp
inc
cmp
sbb
sti
mov
add
xor
add
xchg
ret
jmp
fild
cmp
push
mov
ja
add
lahf
inc
add
ja
loope
inc
addr16
adc
mov
inc
xchg
shl
imul
xchg
cmp
mov
xchg
cli
or
cmp
inc
jmp
addr16
jp
mov
in
pop
inc
xchg
cmp
push
js
nop
push
ins
ret
ja
fwait
data16
add
cmp
inc
aas
dec
dec
inc
aas
mov
cli
xchg
jnp
call
loope
sub
cmp
jl
mov
adc
in
cmp
inc
push
cmp
xchg
std
push
cmp
mov
push
add
jle
ja
jmp
repz
xchg
cmp
mov
retf
push
cmp
mov
pushf
cmp
inc
jecxz
repz
xchg
cmp
xor
cmp
lahf
loope
mov
mov
scas
ss
inc
or
int3
repnz
jle
inc
xchg
cmp
mov
push
ja
push
cmp
mov
push
cmp
inc
cmp
xlat
xchg
cmp
mov
pop
jg
scas
test
add
cmp
inc
jmp
ret
test
push
ret
ja
in
xor
mov
(bad)
inc
xchg
dec
repnz
xchg
cmp
xchg
std
push
cmp
sbb
stos
in
mov
cmp
ja
xor
imul
pop
cmp
push
je
ja
xchg
jbe
inc
xchg
cmp
cmp
dec
repnz
xchg
cmp
mov
cmp
push
imul
jnp
ins
dec
repnz
xchg
cmp
xchg
std
push
cmp
push
mov
jmp
ret
hlt
add
cmp
inc
push
inc
mov
xchg
cld
(bad)
xchg
xchg
jg
mov
xchg
ss
fwait
mov
dec
mov
in
imul
xchg
cmp
mov
int3
cmc
mov
cmp
xor
mov
xchg
cld
(bad)
xchg
xchg
jg
in
pop
mov
xchg
cld
(bad)
xchg
xchg
jg
in
das
mov
dec
repnz
xchg
cmp
mov
int3
cmc
push
xchg
cmp
cmp
xor
mov
xchg
cmp
pop
dec
ret
ja
lahf
and
cmp
cmp
inc
loope
cld
cmp
dec
inc
inc
ds
hlt
add
mov
xor
adc
(bad)
xchg
xchg
jg
aad
mov
ret
add
xchg
cmp
xor
cmp
mov
inc
scas
inc
xchg
cmp
xor
cmp
mov
inc
stos
inc
xchg
cmp
xor
cmp
mov
sbb
loope
cld
cmp
dec
inc
inc
ds
sahf
cwde
lahf
cmp
loopne
cwde
mov
aad
stos
repz
ret
pop
and
leave
ret
ja
push
ret
ja
push
xchg
and
or
clc
inc
and
(bad)
(bad)
ja
scas
xchg
ds
ret
pop
out
ret
ja
arpl
jae
sbb
test
mov
inc
js
aas
mov
cmp
xchg
scas
xchg
xor
and
mov
pop
inc
push
cmp
stos
push
fiadd
inc
xchg
cmp
inc
aaa
popf
sub
jecxz
xchg
retf
ret
ja
push
ret
and
lea
push
jmp
mov
scas
stos
test
add
pop
fimul
ja
push
cmps
ja
loope
and
mov
mov
loope
hlt
push
jl
and
jl
ss
ret
scas
cmp
retf
fadd
push
mov
loope
jbe
loope
hlt
call
push
xchg
xor
out
das
sub
ja
ins
das
jmp
add
sti
icebp
xor
ret
ja
mov
sub
push
pop
ss
push
shl
cmp
mov
push
ja
dec
inc
out
sub
div
sub
pop
mov
sbb
xor
xchg
loop
and
mov
imul
sahf
sub
aas
gs
(bad)
push
int3
repnz
push
ja
ins
sub
push
das
jmp
xor
cmp
xchg
xor
xor
ss
(bad)
jne
push
xor
ret
xchg
mov
sub
cmp
test
pop
mov
xchg
les
call
ret
addr16
sub
mov
push
cmp
mov
ins
mov
mov
ret
test
ja
call
ret
jae
addr16
inc
sahf
(bad)
outs
and
ret
jg
outs
repnz
mov
ja
jmp
ret
div
pusha
arpl
es
aad
enter
mov
outs
and
ret
jbe
outs
repnz
ffree
ja
loope
pop
dec
loope
div
imul
mov
fistp
outs
and
ret
jne
outs
repnz
loope
ja
jmp
ret
div
push
jb
icebp
xor
ret
ja
jecxz
mov
mov
sub
mov
loope
jbe
loope
div
sub
jae
push
xor
sti
call
aam
ret
sbb
xchg
scas
inc
jp
test
fwait
and
ret
hlt
jg
ret
test
out
(bad)
push
xor
ret
ja
leave
das
jmp
xor
ret
ja
xchg
mov
sub
hlt
mov
push
jmp
push
xor
jns
(bad)
dec
and
ret
je
loop
ja
pop
add
aas
gs
(bad)
push
int
mov
push
ret
js
ins
xchg
xlat
std
push
inc
(bad)
mov
les
std
push
ret
or
push
or
mov
dec
inc
mov
sub
div
sub
inc
inc
ins
mov
std
push
pop
ss
sub
pushf
popf
xchg
(bad)
dec
and
ret
dec
xor
jns
into
outs
and
ret
aaa
push
gs
cmp
ja
jmp
ret
mov
sahf
(bad)
outs
and
ret
aaa
mov
pop
ja
push
ret
aad
leave
xor
scas
int3
sar
add
push
jne
iret
leave
xor
xchg
int3
sar
(bad)
mov
push
ret
ja
call
lds
mov
push
cmp
push
bound
es
jbe
pusha
push
aaa
mov
sub
jne
jge
or
and
retf
jb
clc
xor
xor
xchg
mov
and
ret
div
cwde
ret
scas
dec
mov
pop
cmc
xor
(bad)
xchg
and
ret
hlt
pop
outs
dec
xor
mov
test
jmp
jg
sub
jae
cwde
jmp
clc
xor
(bad)
ja
dec
bound
push
pop
ss
sub
(bad)
mov
xor
iret
out
push
cwde
push
mov
clc
xor
(bad)
ja
dec
bound
push
pusha
xor
das
sub
(bad)
xchg
xor
iret
out
push
mov
std
push
pusha
jae
sub
inc
jg
popf
sub
stos
xchg
(bad)
pop
cmp
add
jnp
sti
push
xchg
retf
fadd
xor
mov
jnp
xor
loopne
ret
aam
enter
inc
jns
mov
push
xor
enter
and
mov
push
jns
mov
push
xor
jns
mov
push
xor
jns
mov
push
xor
loope
hlt
push
sbb
inc
mov
mov
mov
ins
mov
std
push
ret
cli
cli
rcl
mov
push
ret
stos
inc
adc
dec
xor
loope
xchg
aaa
aaa
mov
out
push
jmp
(bad)
mov
xchg
mov
sub
hlt
fidivr
sbb
jl
cmps
mov
mov
sub
ret
iret
(bad)
ja
mov
daa
loope
cli
mov
loope
xchg
inc
ins
mov
std
push
ret
ja
shr
xchg
ss
xchg
mov
or
jg
retf
jb
push
xchg
mov
cmp
dec
cmc
xor
repnz
ss
dec
xor
cmp
daa
aad
test
jno
sbb
ret
ja
sub
addr16
cli
fcom
push
mov
fadd
add
add
sbb
mov
adc
aaa
mov
sub
mov
push
xchg
add
sub
cli
cli
adc
pop
cmp
dec
cmc
xor
daa
pushf
mov
push
or
dec
add
inc
dec
les
lock
mov
sub
xor
pop
loope
stos
ss
dec
xor
mov
and
ret
inc
ins
loope
fwait
ss
ret
sbb
out
in
lahf
out
xchg
mov
aad
dec
xor
test
mov
jecxz
adc
inc
jns
ja
mov
xchg
and
outs
mov
pop
inc
loope
mov
xchg
mov
aad
cmp
scas
test
(bad)
cli
xchg
dec
mov
mov
inc
fwait
mov
xchg
and
cmp
retf
fadd
sar
ret
add
imul
add
push
mov
addr16
mov
mov
addr16
mov
mov
(bad)
xchg
sub
jb
jl
jmp
push
int3
sar
int3
shr
push
ja
push
jne
test
loopne
ja
loope
hlt
push
push
shr
dec
lea
sar
aad
jge
lods
inc
sub
faddp
jno
add
mov
sub
dec
jae
add
mov
push
cmp
ins
jl
arpl
cmp
ja
sub
dec
and
imul
cmps
mov
ins
dec
xor
xchg
sub
jb
nop
inc
lahf
mov
jl
jbe
push
jne
inc
add
arpl
push
(bad)
movs
add
ret
ja
addr16
xor
sub
xchg
cmp
mov
call
xchg
inc
inc
dec
mov
nop
inc
lahf
mov
sbb
sub
lds
pop
dec
(bad)
cmp
(bad)
js
ins
lds
sbb
dec
add
ja
arpl
cmp
(bad)
test
js
and
jmp
jo
ins
(bad)
jbe
push
rol
loope
aas
aas
push
lds
xor
(bad)
cmp
shl
outs
rol
loope
hlt
push
imul
push
xor
nop
inc
lahf
mov
push
sub
push
ret
ja
sbb
dec
and
imul
cmps
mov
loope
(bad)
xor
sar
sti
imul
inc
jmp
jae
cmp
ret
push
mov
ss
mov
sub
mul
cmp
push
push
dec
mov
nop
inc
lahf
mov
sbb
sub
faddp
jno
push
mov
adc
dec
inc
push
sub
in
ret
cld
jmp
lea
(bad)
(bad)
mov
push
(bad)
ja
addr16
rol
sub
xor
mov
loope
hlt
push
fs
and
xchg
mov
sub
cld
retf
imul
std
ja
popa
test
inc
add
mov
add
mov
sub
ret
ja
scas
mov
push
add
jge
ins
mov
std
push
add
lahf
stc
xor
dec
(bad)
mov
sahf
cmp
out
mov
sub
js
ins
fmul
push
(bad)
sahf
mov
jmp
mov
imul
stos
outs
cmp
inc
leave
(bad)
out
push
sub
ins
(bad)
sti
ja
cld
mov
call
mov
sub
ret
pushf
dec
addr16
push
dec
hlt
ja
dec
test
xchg
ret
mov
xchg
xor
(bad)
scas
xchg
mov
sub
hlt
ja
jmp
mov
xchg
mov
push
xchg
addr16
ror
push
cmp
jnp
pushf
sub
mov
jnp
call
ja
ds
lahf
popa
xchg
cmp
jns
and
pop
xor
ja
push
les
inc
imul
add
sub
jo
aad
test
xchg
ret
add
xchg
aas
push
(bad)
pop
add
ret
jbe
jb
retf
cmp
mov
in
xor
mov
push
jne
ss
shr
sub
inc
loope
fbld
cmp
jne
dec
jnp
push
jg
mov
push
sbb
loop
icebp
xor
push
test
cmp
jne
dec
jnp
mov
xor
mov
xchg
cmp
mov
out
(bad)
push
ret
cld
sub
sbb
bound
in
xor
or
xor
mov
rol
cmp
cmp
cmp
int3
shr
sub
inc
test
(bad)
push
cs
ja
in
pop
jae
push
sub
inc
test
(bad)
daa
es
(bad)
sub
add
sub
test
push
ret
ja
push
cmp
pusha
xchg
cmp
mov
jecxz
mov
ins
test
aad
ins
ret
ja
push
cmp
mov
shl
cmp
(bad)
push
xor
dec
aad
cwde
inc
xchg
test
jl
shl
push
pop
adc
add
inc
repz
xchg
cmp
push
aaa
fwait
ja
xchg
mov
sub
hlt
sbb
sti
mov
xchg
ret
ja
(bad)
cwde
inc
xchg
cmp
addr16
mov
cmp
ss
mov
mov
dec
jmp
repnz
mov
popf
mov
cmp
inc
xchg
mov
xchg
retf
test
ja
sbb
test
ja
sbb
(bad)
ins
ret
addr16
mov
mov
mov
js
ja
xchg
ret
xchg
sbb
cmp
out
inc
fwait
push
xchg
cmp
mov
in
mov
cmp
mov
xchg
mov
sahf
mov
cmp
retf
fadd
test
xchg
sub
push
ret
ja
ficom
push
xchg
cmp
pop
push
arpl
loope
adc
hlt
sbb
loop
xchg
jle
sar
test
shl
jnp
loope
bound
cmp
xor
aaa
cwde
inc
xchg
add
push
push
xchg
mov
mov
inc
adc
test
sub
inc
push
je
mov
call
cmp
retf
sub
sub
lahf
pop
ds
ja
in
arpl
mov
push
sbb
bsf
repnz
mov
mov
dec
loop
mov
mov
fbstp
inc
jecxz
xchg
cmp
cmp
sbb
jecxz
xchg
cmp
mov
xchg
cmp
cmp
sbb
inc
jecxz
mov
cmp
cli
cmp
sbb
inc
cmp
arpl
xchg
ja
jecxz
mov
cmp
sbb
inc
sbb
sbb
inc
loope
ret
pusha
xchg
cmp
cmp
xchg
pusha
xchg
cmp
retf
ja
outs
jecxz
mov
xchg
cmp
push
fs
cld
sub
sbb
inc
test
into
ja
push
cmp
push
repz
retf
fadd
test
cmp
pop
push
cli
arpl
pop
test
xchg
dec
jnp
pop
push
aaa
mov
xchg
jle
sar
jge
out
push
cmp
xlat
push
sub
push
sbb
inc
popa
add
or
ja
call
inc
dec
mov
pushf
sub
inc
addr16
add
test
push
ret
sbb
repnz
xchg
xor
(bad)
jbe
push
dec
xor
mov
mov
pusha
test
adc
ret
cmp
ss
mov
xchg
pop
ss
inc
lahf
mov
jbe
xchg
shl
push
inc
lahf
mov
bound
cmp
(bad)
test
sbb
xor
sbb
cmp
jle
sar
jge
lods
inc
xchg
inc
repnz
cmp
mov
add
cld
mov
push
xchg
loope
xchg
pusha
xchg
cmp
cmp
jecxz
adc
jbe
inc
xor
test
shl
test
daa
test
xchg
mov
aas
lds
inc
xchg
ret
std
pusha
test
mov
mov
mov
ret
test
call
ret
ja
sbb
shl
ret
add
push
leave
test
das
sub
popa
xchg
cmp
jg
test
add
xchg
out
xchg
jbe
pusha
xchg
cmp
or
mov
inc
mov
call
cmp
retf
sub
dec
xchg
mov
xchg
cmp
pop
push
scas
jle
shl
jecxz
bound
cmp
ss
ror
inc
jmp
cmp
mov
xchg
mov
sub
sahf
xchg
xchg
cmp
aas
in
xor
or
xor
mov
rol
pop
inc
xchg
cmp
loope
or
push
nop
and
jecxz
jg
sub
loop
rcl
add
or
test
sub
into
scas
push
dec
xor
xchg
fisub
(bad)
xor
jle
mov
push
adc
mov
jle
mov
push
cmp
push
mov
cld
call
xchg
ss
ret
pushf
test
cmp
and
mov
or
cli
xchg
ret
xchg
rol
mov
push
xchg
mov
in
dec
ja
push
xor
xchg
mov
push
xor
ret
ja
jmp
aaa
retf
xor
int3
sar
dec
mov
mov
hlt
inc
ins
mov
cmp
mov
jmp
aaa
ret
xor
int3
sar
xor
jnp
mov
hlt
inc
ins
mov
aas
sub
cmp
jge
add
jmp
mov
push
ret
ja
ins
inc
xor
int3
sar
jge
sub
dec
retf
xor
inc
xor
inc
or
int3
cmc
jmp
sub
dec
je
ficom
cmps
retf
xor
sub
sub
aas
jo
mov
inc
ret
mov
jmp
ja
sbb
ret
sub
or
aas
dec
add
es
pushf
sti
jnp
ja
xchg
ret
ja
ds
ja
loope
hlt
ja
xor
imul
pushf
mov
dec
sbb
ret
outs
mov
inc
imul
in
add
lea
lahf
push
ret
ja
aas
jl
shl
inc
and
cmp
pop
inc
loope
cli
retf
mov
pusha
dec
repnz
adc
mov
mov
out
or
mov
loope
inc
inc
loope
inc
dec
aaa
popf
mov
call
inc
inc
cwde
and
push
retf
sbb
mov
cmp
iret
and
aas
jl
loope
aam
dec
and
ja
add
pop
aas
push
test
ja
push
sub
push
cmp
or
sub
dec
(bad)
xor
add
jg
xchg
sbb
out
push
add
add
ja
sub
shl
ret
hlt
ret
add
sub
xchg
retf
mov
xchg
xchg
lahf
ja
ret
ja
sub
mov
add
inc
inc
cmp
js
popf
sub
stos
xchg
(bad)
pop
cmp
pop
xchg
inc
dec
(bad)
mov
push
ret
sbb
mov
test
add
push
mov
push
mov
add
sbb
out
push
dec
mov
mov
ret
xchg
dec
mov
push
nop
mov
fs
lahf
jae
ret
ja
push
test
xor
out
push
jmp
mov
push
ret
ja
ss
mov
cmp
iret
and
xlat
jo
sbb
clc
push
xchg
xlat
call
(bad)
sbb
mov
sbb
ret
ja
scas
dec
(bad)
xor
add
inc
xchg
mov
mov
test
lahf
pop
cmp
ja
push
cmp
scas
xchg
mov
jmp
push
dec
mov
adc
push
popf
mov
out
cmp
mov
xchg
sub
inc
out
ja
pop
sbb
pusha
add
or
jl
clc
or
sbb
xor
jmp
ret
ja
push
and
mov
pop
sbb
cmp
lahf
jmp
ret
ja
lods
retf
xor
xor
cmp
mov
dec
sbb
in
xor
stos
pop
pop
sub
lahf
xchg
cmp
ja
lods
retf
cld
cli
xchg
dec
mov
stos
dec
and
popf
sub
stos
xchg
(bad)
pop
cmp
jg
sbb
adc
pop
inc
xor
in
mov
push
ret
mov
(bad)
dec
out
add
xchg
std
push
ret
hlt
jnp
test
sbb
pop
cdq
mov
ja
xor
inc
loope
jbe
loope
mov
ss
mov
cmp
out
and
aas
js
lock
hlt
(bad)
imul
xor
ret
hlt
fiadd
hlt
fimul
inc
and
xor
fwait
iretw
and
ret
ja
mov
arpl
add
ret
add
jo
cld
cli
pusha
int3
sar
dec
xor
in
iret
push
or
ja
mov
addr16
js
sub
mov
test
inc
push
jae
add
bound
push
inc
or
mov
xor
iret
js
sub
(bad)
cli
xchg
sub
and
sar
int3
sar
xor
jg
ret
call
(bad)
hlt
rol
ret
xchg
ret
add
sbb
ss
dec
xor
cmp
jmp
push
int3
fdivr
xchg
ss
dec
cmp
or
int3
shl
xor
ss
dec
xor
jecxz
jg
fist
shr
int3
fdivr
xchg
or
retf
cld
jmp
cmps
mov
mov
jno
mov
scas
ss
pushf
sub
mov
push
out
rol
jmp
int3
cmp
xor
mov
bnd
push
out
sbb
out
clc
push
inc
mov
push
out
sub
das
clc
push
aaa
das
clc
push
out
sub
das
clc
push
aaa
das
clc
push
out
push
sbb
das
clc
push
add
push
out
rol
(bad)
std
push
xor
sub
jg
push
out
sbb
out
clc
push
inc
mov
push
out
jmp
jae
clc
push
dec
addr16
push
out
sbb
push
push
das
clc
push
out
cvtpi2ps
scas
xchg
cmp
(bad)
push
out
clc
movs
lahf
mov
clc
push
out
clc
(bad)
or
xchg
dec
(bad)
aaa
mov
clc
push
out
and
out
clc
dec
daa
mov
push
out
jnp
out
clc
inc
mov
clc
push
out
mov
mov
out
test
out
clc
inc
dec
mov
mov
mov
out
xor
jmp
stc
jmp
push
std
push
test
sub
pop
das
clc
push
out
rol
jmp
sbb
das
aaa
push
out
clc
push
hlt
inc
push
xchg
out
clc
push
int3
cmp
xor
sbb
das
clc
push
pop
jle
push
out
pop
adc
das
clc
push
daa
das
clc
push
out
loope
out
clc
push
or
out
stc
push
out
clc
push
das
das
clc
push
out
(bad)
mov
inc
(bad)
clc
push
out
imul
xchg
dec
clc
push
out
rol
(bad)
std
push
push
out
sbb
out
clc
push
int3
outs
mov
out
clc
push
pop
jle
push
out
pop
adc
das
clc
push
daa
das
clc
push
out
loope
out
clc
push
or
out
stc
push
out
clc
push
das
das
clc
push
out
(bad)
test
sub
(bad)
clc
push
out
imul
xchg
dec
clc
push
out
or
das
clc
push
adc
ror
lea
cmps
cmp
cld
cli
movs
(bad)
cli
fs
inc
test
mov
stos
ret
cmp
add
dec
push
ret
ja
mov
xchg
sbb
xchg
call
adc
add
pop
push
cmp
pop
xchg
mov
ja
push
dec
mov
loope
cld
cli
test
inc
loope
(bad)
jmp
sbb
dec
xor
xchg
iret
sbb
dec
rcr
(bad)
imul
js
and
sar
ins
fisttp
push
dec
scas
mov
js
shl
jmp
fnstcw
pop
das
push
xor
push
(bad)
lea
addr16
inc
cmp
mov
call
out
or
push
xor
ss
xchg
cmp
fwait
jmp
jno
sbb
ret
adc
xor
sub
int3
cmc
cmps
xchg
cmp
loopne
cwde
mov
cmp
out
and
aas
js
test
fucomip
ja
sub
mov
test
add
xchg
mov
add
jmp
ja
sbb
xchg
push
cmp
mov
js
inc
xchg
inc
mov
loope
jle
addr16
pop
mov
adc
dec
arpl
inc
xlat
dec
pop
aad
ja
mov
xchg
js
adc
cmp
add
xor
sub
repnz
ret
dec
(bad)
mov
sub
je
adc
cmp
fcmovnbe
ja
xor
jmp
ret
dec
xchg
std
push
aas
jae
mov
(bad)
mov
cli
xchg
mov
push
mov
xchg
in
push
xchg
mov
mov
xor
cli
nop
(bad)
(bad)
imul
ja
ins
sbb
std
push
adc
ss
ret
ja
adc
dec
mov
fist
mov
js
mov
std
push
ret
ja
sub
scas
push
push
mov
jecxz
scas
mov
cmp
jge
je
jle
sar
loope
stos
add
ret
sbb
std
push
add
std
push
ret
ja
lods
iret
(bad)
ja
xor
jmp
ret
dec
xchg
std
push
aaa
jae
mov
(bad)
mov
cli
pushf
mov
push
mov
xchg
mov
mov
xor
cli
cwde
(bad)
(bad)
imul
ja
ins
sbb
std
push
sbb
dec
imul
add
ret
js
cmp
xlat
loop
aad
ja
gs
std
push
xor
sub
push
mov
daa
retf
dec
jp
aad
ja
fs
idiv
ja
call
(bad)
hlt
rol
sub
ss
shl
xor
xchg
inc
mov
add
sbb
mov
push
retf
lahf
mov
ret
ja
sub
aam
mov
adc
retf
or
push
sub
push
mov
pop
add
push
fs
sub
pop
loope
mov
in
add
lea
cmps
push
ja
ds
leave
popa
pop
imul
lahf
and
mov
add
xor
mov
sub
dec
xor
jns
jge
mov
or
es
les
ss
add
ss
dec
loop
xchg
cmp
jns
cmp
push
inc
sub
hlt
push
cmp
ins
and
add
jle
fcomp
loope
cs
inc
mov
loopne
dec
inc
xchg
cmp
aas
sub
cmp
mov
or
inc
push
ret
(bad)
jge
add
add
xchg
cmp
mov
cmp
ds
(bad)
mov
xchg
cmp
out
add
std
push
ret
cli
cmp
sub
push
ret
sbb
mov
sub
inc
xchg
cmp
out
adc
mov
xchg
cmp
inc
sbb
xor
push
xor
mov
nop
jle
mov
xchg
cmp
(bad)
and
ja
cwde
ret
scas
cmp
dec
xchg
cmp
push
stos
test
xchg
mov
sub
and
mov
xor
inc
xchg
cmp
push
xlat
mov
in
mov
cmp
xlat
mov
xor
inc
xchg
cmp
xlat
push
nop
ja
push
ret
sbb
lahf
inc
xchg
cmp
jns
mov
sub
pop
jl
xor
in
mov
cmp
xlat
push
loopne
mov
mov
ja
adc
shl
sub
push
inc
and
ss
mov
cmp
iret
and
aas
dec
add
inc
dec
(bad)
xchg
nop
dec
mov
ins
mov
std
push
dec
xor
add
ficom
cli
cli
xchg
xchg
sbb
mov
test
ja
sbb
sub
push
or
mov
nop
cmp
inc
ds
add
inc
mov
jmp
ret
mov
xchg
sub
loope
or
imul
adc
(bad)
push
sub
push
cmp
stos
xchg
mov
inc
sbb
sub
push
pushf
sub
xchg
out
aas
jl
sbb
inc
lahf
and
cli
xchg
dec
mov
ins
test
daa
inc
sbb
cmp
mov
lds
push
or
aas
jl
call
pop
cmp
js
xchg
out
add
pop
mov
push
cmp
mov
mov
push
xor
add
xchg
mov
inc
sbb
test
mov
xchg
sub
imul
jle
sbb
mov
xchg
sub
push
sar
inc
inc
cmp
js
mov
push
inc
mov
pop
add
loopne
add
lea
scas
ds
cld
retf
xor
xlat
js
jbe
inc
and
ret
ja
outs
ret
inc
cmp
js
xchg
mov
sbb
sub
jg
mov
jo
and
push
ror
clc
push
iret
mov
xchg
sub
jg
(bad)
clc
push
fistp
push
xor
js
popf
mov
out
cmp
adc
push
push
xor
push
outs
xchg
cmp
(bad)
stc
push
dec
(bad)
mov
push
xor
retf
mov
add
mov
push
sbb
mov
push
ret
test
ja
popa
add
mov
xchg
test
cs
ja
sub
xor
movs
push
add
in
pop
pop
gs
dec
xor
mov
ja
cmp
mov
loope
es
ds
cld
retf
sub
sub
xor
aas
(bad)
jge
add
jmp
dec
and
scas
out
loope
jbe
cmp
scas
sbb
mov
cmp
jecxz
addr16
shl
inc
mov
sub
mov
push
ret
add
sbb
sahf
call
fdivr
inc
and
mov
sub
inc
xor
out
mov
pop
dec
xchg
sub
ja
scas
inc
xor
movs
ja
popa
cmp
mov
cmp
scas
cmp
inc
loope
pop
jge
xchg
mov
mov
(bad)
push
push
mov
ss
mov
cmp
xlat
and
aas
dec
sub
dec
dec
jno
sbb
ret
and
cmp
(bad)
ss
adc
aad
sub
cld
push
repnz
xchg
popa
add
mov
jne
mov
xor
aaa
ins
lock
scas
xchg
scas
xchg
mov
mov
dec
ss
jp
mov
xchg
dec
mov
ss
jp
mov
test
cmp
add
ss
dec
or
stos
sub
push
adc
arpl
xchg
xchg
test
xchg
jl
dec
xchg
pop
and
jne
cmp
call
push
add
inc
xchg
cmp
cmp
das
mov
ret
cli
cmp
cmp
mov
pop
xchg
inc
mov
loope
dec
xor
jns
sbb
mov
arpl
ja
aad
mov
ret
add
push
sar
cmp
stos
or
addr16
mov
jno
ja
lahf
pop
cmp
cmp
scas
inc
xchg
cmp
add
dec
loop
xchg
mov
aam
ja
push
sub
std
push
cmp
inc
jmp
ret
mov
pusha
stos
jae
push
ret
ja
cwde
jmp
loope
cmps
inc
xchg
cmp
jle
or
mov
add
cld
sub
cmp
inc
jmp
jg
cmp
mov
push
out
ja
jmp
jg
es
mov
xchg
cmp
out
ret
ja
lods
retf
lahf
xchg
ret
ja
icebp
xor
cmp
(bad)
or
cmp
inc
xchg
cmp
ja
jmp
jg
cwde
xacquire
scas
sub
push
ret
ja
lahf
cmp
inc
ins
mov
ja
shl
add
retf
cmp
test
push
ret
ja
lods
rcr
push
(bad)
xor
cmp
(bad)
or
cmp
inc
xchg
cmp
ja
jmp
jg
pop
sbb
mov
xchg
cmp
pop
sub
ja
lods
retf
lahf
pop
sub
ja
(bad)
xor
cmp
(bad)
or
cmp
inc
xchg
cmp
ja
jmp
jg
adc
ja
push
cmp
dec
sub
sti
push
ret
ja
lahf
cmp
inc
xchg
xchg
pop
xor
inc
mov
xchg
mov
xlat
jp
xor
inc
xchg
cmp
xlat
dec
sbb
mov
push
inc
cdq
jp
ret
ja
dec
xchg
ror
ja
push
cmp
jnp
xchg
ret
mov
xchg
cmp
inc
add
mov
leave
test
push
cmp
ja
jmp
jg
add
mov
jmp
jb
jnp
xchg
ret
mov
xchg
cmp
inc
or
mov
add
test
push
cmp
ja
jmp
jg
fild
ja
push
cmp
dec
sub
cld
push
ret
ja
lahf
cmp
inc
xchg
xchg
pop
xor
inc
mov
shl
xchg
ss
js
push
pop
xor
sub
pop
add
mov
ret
cli
add
sub
cld
push
cmp
inc
cmp
scas
jecxz
mov
cmp
xlat
mov
sub
cld
push
sub
push
ret
ja
lahf
cmp
inc
ins
mov
ja
shl
add
retf
cmp
test
push
ret
ja
lods
sar
dec
lahf
and
mov
add
ja
(bad)
xor
cmp
(bad)
or
cmp
inc
xchg
cmp
ja
jmp
jg
mov
leave
ja
push
cmp
jnp
mov
or
xor
mov
gs
mov
xchg
inc
lea
mov
mov
sub
jnp
dec
xchg
call
arpl
xchg
pop
and
cmp
stos
sbb
mov
xchg
inc
lea
mov
ja
fnstsw
mov
sub
std
push
sub
push
ret
ja
lahf
cmp
inc
ins
mov
xor
inc
xchg
cmp
out
ret
ja
lods
retf
lahf
stos
sub
ja
(bad)
xor
cmp
(bad)
or
jp
mov
xchg
xchg
cld
add
dec
pusha
sub
and
xor
pop
addr16
jecxz
mov
inc
jbe
push
mov
push
cmp
mov
push
cmp
inc
push
pop
mov
shl
xchg
mov
mov
xor
pop
mov
ror
xchg
mov
nop
jp
mov
xchg
inc
mov
cmp
push
jb
ja
ror
jle
sar
aam
mov
adc
js
xchg
cli
add
mov
stos
sub
add
mov
sub
(bad)
push
jnp
jmp
iret
inc
xchg
cmp
jns
inc
mov
xchg
cmp
add
ret
ja
addr16
push
inc
xchg
cmp
or
outs
xor
ret
ja
xchg
xchg
cld
cmp
adc
ret
daa
push
ja
ja
jmp
outs
push
xchg
xor
leave
ja
push
cmp
jnp
sub
ret
mov
xchg
cmp
inc
sbb
mov
sbb
mov
push
inc
lea
mov
ja
fnstsw
mov
sub
jnp
dec
xchg
mov
add
jb
jnp
xchg
ret
mov
xchg
cmp
inc
or
mov
inc
mov
xchg
cmp
mov
pushf
cmp
inc
jecxz
pop
cmp
cmp
call
cmp
sbb
mov
xchg
cmp
jns
mov
xor
xchg
cmp
imul
ja
aad
ja
xchg
ret
js
push
ret
loope
inc
dec
loope
cld
cli
je
ja
push
cmp
inc
addr16
xor
nop
cmp
inc
loope
fwait
inc
xchg
cmp
retf
cs
sub
cli
cmp
outs
jmp
hlt
jnp
dec
cli
dec
xchg
mov
cmp
aas
push
ret
xchg
dec
mov
loope
mov
xchg
cmp
dec
pop
xor
jns
inc
ja
xchg
cmp
mov
inc
mov
xchg
cmp
cmp
mov
xchg
lahf
fwait
push
ret
ja
in
aaa
mov
xchg
lahf
push
nop
cmp
cmp
(bad)
(bad)
cmp
jbe
inc
xchg
cmp
retf
ret
mov
xchg
pop
(bad)
gs
mov
add
push
ret
out
dec
xchg
inc
lea
mov
ja
fnstsw
mov
sub
sub
jnp
dec
xchg
xor
ja
ror
ja
push
cmp
jnp
mov
or
dec
mov
xor
mov
push
inc
lea
mov
mov
sub
sub
jnp
cmp
dec
xchg
mov
clc
ja
jmp
ret
mov
pushf
cmp
inc
in
ja
xchg
cmp
inc
fnstsw
mov
nop
lahf
xchg
lahf
cmp
cmp
iret
(bad)
cmp
add
sti
cmp
test
inc
xchg
cmp
ja
jmp
jg
stos
std
ja
ror
ja
push
cmp
jnp
sub
ret
mov
xchg
cmp
inc
and
mov
sbb
push
ret
out
dec
xchg
inc
lea
mov
ja
fnstsw
mov
sub
sub
xchg
dec
bnd
mov
scas
sub
sub
ja
lahf
cmp
inc
ins
mov
xor
inc
xchg
cmp
xor
ja
lods
retf
pop
lea
aas
mov
sub
sub
inc
sub
ja
lahf
cmp
inc
ins
mov
ja
shl
add
retf
cmp
test
push
ret
ja
lods
rcr
push
(bad)
xor
cmp
(bad)
or
cmp
inc
xchg
cmp
ja
jmp
jg
sahf
fcomp
push
ret
into
mov
ret
ja
lahf
cmp
inc
ins
mov
xor
inc
xchg
cmp
dec
push
ret
ja
lods
retf
lahf
andnps
ja
(bad)
xor
cmp
(bad)
or
cmp
inc
xchg
cmp
ja
jmp
jg
jecxz
ja
ror
ja
push
cmp
dec
sub
sub
fsubr
ja
lahf
cmp
inc
xchg
xchg
pop
xor
inc
mov
add
test
inc
xchg
cmp
ja
jmp
jg
cwde
jmp
push
ret
ja
lahf
cmp
inc
ins
mov
xor
inc
xchg
cmp
jecxz
ret
ja
lods
retf
pop
mov
fnstsw
mov
sub
sub
jnp
sub
push
ret
ja
lahf
cmp
inc
ins
mov
xor
inc
xchg
cmp
fwait
push
ret
ja
lods
retf
pop
movs
mov
ja
fnstsw
mov
sub
push
inc
cmp
ror
ja
push
cmp
jnp
xchg
ret
mov
xchg
cmp
inc
and
mov
inc
test
xor
aas
mov
xchg
pop
mov
and
push
inc
dec
mov
push
inc
lea
mov
mov
sub
sub
jnp
stos
ja
sub
mov
xchg
cmp
inc
adc
push
lea
push
ret
out
dec
xchg
inc
lea
mov
mov
sub
sub
jnp
jnp
les
sbb
mov
xchg
cmp
jns
(bad)
push
ret
out
dec
xchg
dec
mov
mov
xchg
cmp
inc
aas
stos
lahf
bound
ret
and
push
jmp
addr16
xchg
ja
ror
ja
push
cmp
jnp
xchg
ret
mov
xchg
cmp
inc
or
mov
add
ret
cmp
ja
jmp
jg
(bad)
ja
ror
ja
push
cmp
jnp
xchg
ret
mov
xchg
cmp
inc
adc
mov
xor
lahf
xor
ja
(bad)
xor
cmp
(bad)
or
jp
mov
xchg
xchg
cld
add
dec
pusha
sub
and
clc
ja
jmp
xlat
mov
jbe
inc
xchg
cmp
aaa
push
ret
ja
lods
retf
sbb
mov
add
ja
sub
mov
ror
dec
repnz
xchg
mov
scas
pop
or
xchg
cmp
ja
add
cli
add
mov
xchg
cmp
inc
xchg
jbe
inc
xchg
cmp
fist
ja
(bad)
mov
sub
or
inc
mov
cwde
dec
mov
adc
push
ds
ss
mov
ds
jbe
push
into
jl
nop
xor
ss
cmp
jns
cmp
push
push
int3
sar
xchg
pop
xor
xor
xchg
xchg
lahf
or
ja
nop
repnz
ss
test
xor
inc
xchg
cmp
xlat
imul
xchg
inc
mov
call
xchg
aad
stos
dec
bound
ret
pop
cmc
mov
ja
imul
xchg
stos
mov
gs
ja
sbb
mov
call
cmp
jnp
inc
cwde
jecxz
ret
ja
mov
inc
fwait
sub
ja
ds
enter
pop
ss
repnz
ss
inc
shl
xchg
cmp
mov
push
ret
test
xchg
mov
xchg
cmp
cli
pusha
dec
jae
imul
sti
inc
xchg
cmp
inc
inc
cmp
js
sbb
cli
pusha
dec
mov
scas
(bad)
and
hlt
ja
jecxz
jg
cmp
jb
loope
xlat
inc
xchg
cmp
push
pop
hlt
ja
loope
or
cmp
or
mov
in
mov
jecxz
or
cmp
jmp
(bad)
cli
jmp
ret
std
pop
mov
dec
(bad)
mov
add
mov
xchg
cmp
inc
frstor
inc
xchg
sub
cmp
mov
jbe
inc
xchg
cmp
pop
pop
ret
ja
cmp
mov
xchg
jge
jecxz
add
cmp
jmp
ret
push
xor
inc
xchg
inc
sbb
ret
ja
push
jge
mov
xchg
cmp
ds
das
jp
push
dec
repnz
ror
sub
mov
daa
push
push
cli
ja
add
jbe
push
cmp
out
add
push
ret
pop
mov
jle
mov
pop
push
mov
mov
jmp
push
shl
int3
mov
stos
jae
push
cmp
repnz
mov
ret
cmp
inc
fst
inc
xchg
cmp
xor
dec
mov
cmp
daa
xchg
cmp
inc
frstor
inc
xchg
xchg
cli
cmp
mov
sub
dec
xchg
cmp
jnp
dec
repnz
mov
jmp
push
ret
add
std
push
cmp
out
sub
push
dec
mov
in
ja
inc
xchg
xchg
cli
cmp
out
push
cmp
ss
inc
mov
test
repnz
xchg
cmp
out
adc
mov
loope
pop
inc
loope
mov
sar
ja
scas
inc
xchg
inc
xchg
cmp
mov
in
sub
cmp
inc
mov
ret
add
xchg
cmp
mov
sub
ja
in
jnp
inc
xchg
xchg
lahf
lods
cwde
cmp
out
inc
rol
cmp
xor
jnp
inc
xchg
xchg
sbb
lahf
add
sbb
cmp
ja
lahf
div
popa
add
mov
ja
xchg
jbe
inc
xchg
cmp
pop
pop
ret
ja
nop
jmp
xchg
cmp
xlat
jp
xor
std
push
cmp
out
sub
push
inc
add
xchg
cmp
push
inc
inc
xor
mov
xchg
pop
retf
ja
dec
div
loope
jle
sbb
ret
ja
add
ja
call
cmp
xor
xchg
push
mov
stos
ja
push
ret
ja
aad
mov
ret
add
push
ret
pop
mov
in
aas
mov
xchg
and
fcomip
ja
add
pop
aad
xor
xchg
xchg
lahf
sti
aad
mov
iret
dec
inc
xchg
ret
ja
dec
inc
shl
xchg
cmp
mov
hlt
mov
inc
mov
movnti
gs
shl
xchg
cmp
mov
push
mov
sub
mov
iret
sub
ja
(bad)
xchg
cmp
ss
xchg
lahf
iret
pop
ret
ja
push
cmp
push
stos
lock
xchg
jbe
inc
xchg
cmp
sbb
ja
in
pop
mov
sub
xor
ja
lahf
and
cmp
mov
add
loope
or
pop
jmp
addr16
ds
cld
loop
jl
mov
test
inc
pop
cmp
js
mov
push
cmps
lock
loope
adc
cmp
cmp
js
mov
push
shl
ja
loope
adc
cmp
sub
mov
(bad)
jge
dec
and
sub
mov
(bad)
jge
dec
and
je
inc
addr16
inc
imul
jbe
addr16
dec
in
addr16
cmp
ja
loope
not
lea
pop
add
ret
js
test
xor
lds
out
loope
aaa
out
cmp
push
mov
ss
inc
mov
cmp
dec
mov
mov
fs
sar
dec
xor
dec
bnd
loope
pop
inc
loope
mov
js
sar
dec
xor
xchg
dec
xor
pop
ret
ja
addr16
inc
in
jno
addr16
inc
imul
cli
sti
js
daa
push
xor
mov
add
and
mov
sbb
mov
xchg
mov
and
push
xchg
lahf
(bad)
pop
ret
ja
sbb
inc
aaa
popf
sub
stos
xchg
(bad)
pop
ror
test
dec
sub
cmovp
pop
loop
ja
lahf
and
cmp
and
cmp
and
mov
xchg
cmp
xor
add
fnstenv
ja
loope
jle
addr16
out
push
aad
mov
mov
push
out
ja
jmp
jg
test
push
inc
xchg
cmp
mov
in
inc
mov
(bad)
mov
ss
repnz
sbb
inc
sub
ja
in
retf
pop
xchg
cmp
xor
add
push
pop
in
ja
popa
add
mov
cmp
loope
and
fld
xchg
inc
xchg
sub
push
retf
jno
ret
cmp
inc
sbb
ret
ja
test
pushf
mov
sub
imul
pushf
adc
xor
mov
loope
iret
stos
dec
ret
ja
sti
in
ja
cmp
leave
adc
ss
jecxz
mov
cwde
dec
mov
add
jbe
push
ret
(bad)
data16
mov
call
cmp
js
retf
(bad)
imul
mov
pop
jg
cmp
sub
mov
hlt
jnp
inc
sub
cwde
jmp
sub
cli
cmp
mov
sub
push
sub
mov
ret
ja
lahf
cmp
inc
ins
mov
xor
pop
xchg
cmp
push
xchg
lock
jmp
jg
shl
ja
ror
ja
push
cmp
inc
sub
mov
into
fsubr
ja
lahf
cmp
inc
xchg
xchg
pop
out
xor
xchg
xchg
lahf
pop
pop
ret
ja
lods
rcr
push
(bad)
xor
cmp
(bad)
or
push
cmp
out
sbb
push
xor
loope
pop
mov
ret
xchg
inc
xchg
xchg
lahf
cmp
ja
lods
retf
lahf
call
ja
(bad)
xor
cmp
(bad)
or
push
cmp
out
sbb
mov
fld
jp
mov
xchg
inc
lea
pop
ret
ja
or
ja
icebp
xor
in
in
ja
xchg
cmp
xlat
xor
xor
pop
xchg
cmp
push
xchg
icebp
ja
jmp
addr16
sbb
xor
xchg
xchg
pop
sahf
mov
ja
in
ret
xchg
inc
xchg
xchg
lahf
arpl
ja
lods
xlat
dec
and
mov
add
ja
(bad)
xor
cmp
(bad)
or
push
cmp
out
or
mov
leave
test
push
cmp
out
cmp
push
mov
mov
push
inc
lea
mov
xchg
inc
xchg
xchg
lahf
sub
ja
lods
retf
pop
mov
in
ret
xchg
inc
xchg
xchg
lahf
aas
pop
ret
ja
lods
retf
dec
and
mov
add
ja
(bad)
xor
cmp
(bad)
or
push
ret
out
dec
xchg
xchg
cli
add
mov
stos
das
arpl
ret
cli
add
mov
sub
push
stos
pop
popa
sub
cli
cmp
mov
sub
push
sub
mov
ret
ja
lahf
cmp
inc
ins
mov
xor
pop
xchg
cmp
push
xchg
bnd
jmp
jg
and
xor
pop
xchg
cmp
push
xor
mov
cwde
xacquire
scas
sub
mov
into
mov
ret
ja
lahf
cmp
inc
ins
mov
xor
pop
xchg
cmp
push
xlat
bnd
jmp
jg
jb
xor
pop
xchg
cmp
push
ret
bnd
jmp
jg
pslld
ror
ja
push
cmp
jl
xchg
ret
cli
cmp
mov
sub
mov
hlt
jnp
inc
sub
iret
cli
cmp
mov
stos
pop
arpl
ret
cli
cmp
mov
sub
push
sub
push
ret
ja
lahf
cmp
inc
ins
mov
xor
pop
xchg
cmp
push
push
bnd
jmp
jg
push
inc
ja
xchg
cmp
push
dec
bnd
jmp
jg
mov
ja
ror
ja
push
cmp
jl
xchg
ret
cli
cmp
mov
sub
push
jnp
shr
sbb
fwait
pusha
xchg
cmp
jns
ins
inc
mov
push
dec
mov
mov
push
stos
popa
arpl
ret
cli
add
mov
sub
(bad)
jnp
sub
vpcomd
cmp
inc
ins
mov
xor
pop
xchg
cmp
push
repz
jmp
jg
mov
xor
pop
xchg
cmp
push
out
repz
jmp
jg
xchg
mov
push
ret
ja
lahf
cmp
inc
ins
mov
xor
pop
xchg
cmp
push
xor
ja
jmp
jg
jg
ja
ror
ja
push
cmp
inc
sub
push
ret
ja
lahf
cmp
inc
xchg
xchg
pop
out
xor
xchg
xchg
lahf
inc
inc
ret
ja
lods
rcr
outs
mov
ja
in
ret
xchg
inc
xchg
xchg
lahf
mov
ret
ja
lods
retf
sbb
mov
add
ja
sub
ja
in
aas
test
xchg
inc
mov
jg
ja
in
ret
xchg
inc
xchg
xchg
lahf
mov
ret
ja
push
cmp
call
mov
call
xchg
cmp
pop
inc
ret
ja
fnstsw
test
xchg
sub
xchg
push
sub
cwde
jmp
mov
inc
fwait
cmp
in
ds
enter
sbb
nop
xor
ss
inc
mov
dec
mov
int
mov
ret
inc
dec
jmp
ret
cld
loop
nop
lahf
pop
inc
ret
ja
cmp
ret
cld
mov
cmp
inc
xchg
cmp
js
mov
xchg
lahf
mov
ja
push
aaa
mov
add
mov
pop
mov
pop
call
xlat
inc
xchg
cmp
scas
add
cli
cmp
mov
sub
mov
in
ja
inc
xchg
xchg
pop
adc
xor
mov
xchg
cmp
jnp
retf
in
outs
jne
push
ret
cli
cmp
repnz
stc
pop
mov
nop
dec
mov
frstor
inc
xchg
nop
cli
cmp
mov
sub
xchg
cmp
jnp
retf
in
mov
mov
sub
cli
cmp
ficom
fdivr
mov
dec
repnz
xchg
cmp
out
adc
push
cmp
cmp
mov
cmp
loope
sbb
cmp
cmp
bound
je
mov
imul
mov
xchg
push
cmp
mov
aad
mov
ret
add
xchg
cmp
mov
add
ja
in
jnp
inc
xchg
xchg
lahf
movs
mov
out
inc
rol
cmp
xor
jnp
inc
xchg
xchg
sbb
lahf
add
sbb
cmp
ja
xchg
jmp
js
jmp
inc
xchg
cmp
jg
ret
ja
nop
ret
scas
cmp
pop
xchg
cmp
xlat
jp
xor
std
push
cmp
out
xor
push
inc
or
ja
inc
inc
mov
push
ret
ja
in
aas
mov
xchg
pop
retf
ja
inc
call
jle
sbb
ret
ja
sbb
ja
call
cmp
xor
xchg
push
mov
retf
push
ret
lahf
out
inc
ret
ja
nop
jmp
push
aas
mov
xchg
lahf
ja
ret
ja
imul
mov
sub
or
cmp
jnp
dec
cmp
inc
sti
inc
xchg
cmp
in
xor
xchg
inc
mov
popa
add
mov
mov
cld
mov
inc
sti
inc
xchg
cmp
push
daa
jmp
push
mov
cmp
sub
adc
inc
loope
mov
cld
mov
mov
push
ret
lahf
mov
add
stos
std
push
ret
ja
lods
xlat
jle
sbb
xor
jecxz
jmp
xchg
cmp
push
push
nop
(bad)
jl
xor
fst
inc
xchg
sub
xchg
cmp
jnp
sub
in
pop
mov
inc
lahf
mov
xchg
mov
cld
mov
fsubr
mov
sub
aam
ret
and
jmp
xchg
cmp
mov
fdivr
mov
sub
inc
imul
mov
int3
mov
std
pop
mov
xchg
cmp
push
ja
ja
jecxz
jmp
xchg
cmp
mov
push
or
pop
jmp
addr16
ds
cld
loop
jl
fimul
idiv
xchg
ja
cmp
and
nop
cmp
mov
mov
push
xchg
jne
cmp
ja
loope
and
and
mov
push
xchg
lahf
inc
ret
ja
sbb
ret
outs
in
mov
push
xchg
sbb
loope
ret
sbb
scas
inc
ret
ja
scas
test
pop
mov
(bad)
loope
cli
cli
xchg
xchg
and
in
mov
push
pushf
sub
mov
jnp
scas
push
ret
ja
aas
jl
sti
push
in
js
hlt
ja
add
mov
pusha
sub
jns
cmp
loope
jle
sbb
sbb
addr16
ja
in
ret
xchg
xchg
and
jmp
mov
fs
repnz
add
mov
cmp
mov
cwde
sub
lahf
fst
mov
sub
push
pushf
sub
xchg
(bad)
pop
jmp
jnp
xlat
xor
jbe
adc
ja
scas
xchg
mov
xchg
std
push
sub
dec
inc
call
add
pop
cld
imul
(bad)
std
push
ret
js
sub
xchg
pop
inc
mov
ja
sub
jmp
outs
xor
stos
xor
push
pop
ss
push
int3
sar
inc
(bad)
mov
push
sub
xchg
(bad)
pop
jmp
jnp
aas
jge
test
iret
push
pusha
ret
ja
mov
inc
loope
sbb
mov
add
sbb
mov
push
test
dec
xchg
push
scas
jge
push
cmp
jns
ret
pop
cmp
cmp
xor
add
and
pop
cmp
push
cmc
xor
jmp
mov
pop
cmp
aas
leave
xor
add
and
pop
cmp
xchg
test
and
pop
cmp
mov
daa
jmp
mov
push
test
call
xchg
push
test
call
xchg
push
test
aam
push
ret
sbb
inc
pop
mov
std
push
ret
dec
xor
jns
ret
pop
cmp
(bad)
icebp
xor
in
mov
pop
cmp
dec
cmc
xor
in
mov
pop
cmp
sub
xor
add
and
pop
cmp
daa
retf
xor
shl
mov
sub
popf
mov
mov
cmp
ja
add
mov
add
sub
ret
pop
scas
out
xor
cmp
push
cmc
xor
in
mov
call
loope
mov
sub
pop
scas
out
xor
cmp
aas
leave
xor
jmp
ret
sbb
and
ret
lahf
inc
dec
ret
ja
dec
pop
ss
push
out
call
cdq
push
imul
sub
lahf
imul
sbb
push
aaa
mov
push
(bad)
jmp
mov
inc
xchg
neg
sub
lahf
cmovle
ja
adc
mov
push
jmp
(bad)
push
ret
sbb
and
ret
lahf
xor
ja
inc
pop
aaa
mov
push
jecxz
(bad)
push
ret
inc
cmp
js
aas
mov
and
and
ret
pop
scas
out
xor
cmp
cmp
xor
aaa
add
lea
stos
ds
enter
push
xchg
push
mov
sub
mov
pusha
sub
inc
xchg
cmp
jns
das
lods
std
push
cmp
cmp
rcl
mov
xor
xchg
lahf
(bad)
dec
ret
ja
lahf
xchg
push
xchg
lahf
ror
ja
push
xor
xchg
cld
cli
xchg
call
xor
xchg
mov
cmp
pop
pop
mov
ja
push
std
push
mov
sub
sbb
and
ret
sbb
xor
cmp
inc
lahf
fstp
test
ja
call
xor
add
lahf
mov
ret
ja
ins
pop
ss
loope
sbb
and
ret
sbb
pop
sub
pop
das
imul
pop
cli
cwde
inc
lahf
fstp
test
jle
call
xor
add
lahf
jnp
ret
ja
or
mov
add
sbb
mov
add
pop
add
ja
push
test
ja
loope
sbb
inc
pop
(bad)
call
call
inc
and
ret
sbb
pop
sub
sbb
mov
inc
stos
ja
push
xor
add
lahf
out
ret
ja
adc
xor
retf
sbb
and
ret
sbb
pop
sub
sbb
mov
inc
stos
ja
push
xor
add
lahf
mov
enter
add
mov
add
mov
add
pop
outs
imul
ja
add
pop
mov
cmps
sbb
std
push
out
mov
push
imul
(bad)
push
xchg
(bad)
push
ret
add
mov
push
dec
lods
std
push
ret
sbb
mov
sub
sbb
and
ret
sbb
pop
sub
sbb
adc
jl
je
call
xor
add
lahf
retf
dec
ret
ja
sbb
jmp
ret
pop
lds
stos
xor
push
out
mov
push
ret
xchg
neg
mov
push
xor
cmp
(bad)
xor
add
pop
adc
adc
pop
arpl
sbb
mov
ret
ja
call
add
clc
push
test
ret
sbb
pop
sub
pop
xchg
imul
fnstsw
push
ret
imul
add
test
push
ret
sbb
mov
sub
lahf
xchg
xchg
cmp
aad
cmp
mov
xor
cmp
sti
enter
js
dec
xlat
mov
ja
add
ja
push
xor
add
lahf
xor
ja
clc
pusha
xor
pop
loope
fwait
ss
test
call
inc
pop
xchg
(bad)
push
ret
ja
add
mov
push
ret
daa
xlat
cmp
xor
std
push
loopne
mov
push
imul
(bad)
push
xchg
(bad)
push
stos
outs
mov
push
ret
ja
add
lods
fs
sbb
mov
sub
sbb
and
ret
sbb
pop
sub
sbb
mov
push
ret
ja
cmp
pop
gs
ja
push
ret
aam
cmc
xor
cmp
mov
xor
cmp
sti
enter
js
and
and
ja
add
mov
push
xor
add
lahf
and
ja
cld
pusha
xor
mov
mov
or
mov
imul
ja
add
pop
mov
mov
xor
std
push
ret
lahf
fisttp
ja
in
bound
mov
mov
or
mov
push
ret
ja
add
pop
mov
clc
popa
xor
std
push
ret
lahf
fwait
dec
ret
ja
je
aaa
mov
loope
sbb
and
ret
sbb
pop
sub
sbb
arpl
ja
jl
ja
call
xor
add
jne
push
ret
aam
test
ja
push
xor
popf
ret
ja
add
pop
mov
mov
xor
std
push
ret
lahf
adc
ja
dec
pop
ss
pop
pop
ss
sub
ss
push
ret
add
pop
mov
mov
xor
std
push
loop
mov
push
cmp
inc
inc
cmp
js
inc
mov
pushf
sub
xchg
(bad)
pop
jmp
outs
jmp
(bad)
(bad)
inc
pop
cmp
js
lods
std
push
jmp
test
xor
dec
xchg
cmp
jnp
pusha
jg
sub
inc
cmp
js
ret
mov
add
mov
cmp
ja
push
xor
xchg
cld
cli
xchg
call
xor
xchg
mov
cmp
pop
pop
mov
ja
push
adc
push
ret
sbb
and
ret
sbb
xor
cmp
inc
lahf
fstp
test
ja
call
xor
add
lahf
and
ja
ins
pop
ss
push
test
ret
sbb
pop
sub
pop
xchg
imul
pop
cli
cwde
inc
lahf
fstp
test
jle
call
xor
add
lahf
out
ret
ja
or
mov
add
sbb
mov
add
pop
add
ja
push
test
ja
loope
sbb
inc
pop
(bad)
call
mov
xchg
test
ret
sbb
pop
sub
sbb
stos
add
pop
mov
mov
xor
std
push
fdiv
retf
sub
(bad)
push
ret
ja
adc
xor
cld
imul
push
gs
sbb
mov
cmc
xor
fdiv
call
ret
inc
retf
ja
imul
ss
push
test
ja
xchg
neg
(bad)
ja
push
xor
cmp
(bad)
xor
add
sbb
mov
mov
xor
std
push
fdiv
retf
inc
(bad)
std
push
dec
mov
push
xor
cmp
(bad)
xor
add
sbb
mov
call
xor
add
lahf
cmps
ja
ja
inc
pop
ss
xchg
test
call
inc
pop
xchg
(bad)
push
ret
ja
add
ja
push
nop
lods
std
push
ret
sbb
mov
sub
sbb
and
ret
sbb
pop
sub
sbb
cmp
ja
stos
ret
ja
add
ja
cmp
pop
gs
ja
push
ret
aam
icebp
xor
icebp
ja
lahf
and
cli
test
aad
cmp
mov
xor
cmp
sti
enter
js
mov
push
stos
ja
push
xor
add
lahf
jecxz
ret
ja
cwde
pop
ss
pop
pop
ss
sub
ss
add
mov
push
ret
daa
xlat
outs
sbb
std
push
fnsave
retf
push
aam
push
imul
(bad)
push
xchg
(bad)
push
ret
add
imul
add
lods
fs
sbb
mov
sub
sbb
and
ret
sbb
pop
sub
sbb
mov
push
ret
ja
cmp
pop
gs
ja
push
ret
aam
retf
xor
test
ja
jo
cmc
mov
add
pop
mov
clc
popa
xor
std
push
ret
lahf
(bad)
jne
ja
je
aaa
mov
push
test
ret
sbb
pop
sub
sbb
stc
add
pop
mov
mov
xor
std
push
ret
lahf
xor
sbb
pop
ss
pop
pop
ss
or
mov
add
aas
cmp
pop
mov
push
lds
push
ret
sbb
and
ret
sbb
pop
sub
sbb
mov
push
ret
ja
cmp
pop
inc
mov
ja
push
ret
aam
retf
xor
rcr
and
ss
sbb
jbe
xchg
(bad)
pop
jmp
outs
in
ds
enter
jnp
nop
xor
ss
ret
pop
aas
push
test
ja
push
sub
movs
push
cmp
ja
push
pop
outs
mov
xor
push
add
dec
ins
ret
ja
loope
sbb
lahf
ss
dec
xor
dec
xor
dec
xor
cmp
scas
add
ret
std
push
inc
lahf
test
mov
fisttp
xchg
mov
aad
cmp
inc
add
and
ret
mov
fs
mov
pop
xchg
inc
xchg
inc
mov
loope
(bad)
mov
mov
aad
test
daa
inc
sbb
xor
cmp
loope
inc
inc
loope
sub
xor
mov
loope
not
ret
cmp
adc
cwde
ret
scas
inc
cdq
or
ret
ja
retf
mov
xchg
cmp
push
aaa
(bad)
cmp
mov
push
dec
movs
aaa
xor
ret
add
std
push
cmp
out
xor
mov
cwde
dec
mov
adc
stos
scas
cvtpi2ps
cli
cmp
mov
sub
push
rol
add
(bad)
std
push
cmp
out
add
mov
ins
mov
xlat
jl
xor
inc
xchg
cmp
push
adc
mov
loope
test
add
(bad)
std
push
cmp
out
or
inc
outs
mov
xlat
and
mov
xchg
cmp
push
(bad)
ja
call
rcr
fcmovnu
xor
xchg
xchg
lahf
pop
jg
ja
adc
stos
hlt
push
sub
cli
cmp
mov
sub
test
ret
dec
xor
jns
mov
pop
sbb
in
ret
mov
xchg
lahf
sar
ja
adc
stos
test
sub
cli
cmp
mov
sub
test
ret
test
add
vpunpckhbw
mov
cmp
mov
fs
xlat
dec
jno
mov
xchg
cmp
push
dec
aam
mov
sbb
xor
xchg
xchg
lahf
scas
jg
ja
cwde
xor
ss
aas
mov
dec
mov
adc
stos
and
push
sub
mov
mov
ja
and
xor
inc
xchg
cmp
xlat
push
das
xchg
inc
xchg
stos
dec
data16
pop
add
xor
sbb
cwde
popa
ret
lahf
dec
jb
ja
lods
jmp
dec
lahf
and
mov
add
mov
xor
mov
push
xchg
and
push
and
ss
dec
sub
inc
outs
mov
imul
mov
mov
aad
xchg
lahf
jmp
ret
ja
ss
sub
ret
and
lea
xchg
ja
ds
leave
mov
sahf
mov
mov
push
ret
ja
sbb
mov
xchg
cmp
push
inc
aad
mov
push
ret
out
dec
xchg
dec
loop
nop
cmp
aas
aad
pop
ret
add
std
push
cmp
out
cmp
dec
nop
cmp
mov
fiadd
add
lahf
pop
jge
ja
aad
pop
rol
add
push
lahf
cmp
out
or
mov
push
inc
xchg
dec
xchg
cmp
jns
jle
inc
xchg
cmp
retf
jbe
sub
cli
cmp
sub
stos
push
cmp
xlat
jno
xor
dec
xchg
cmp
push
out
(bad)
ja
call
cmp
retf
inc
or
ret
cli
cmp
sub
stos
push
cmp
xlat
daa
jo
mov
xchg
cmp
push
cmp
ja
loope
jbe
loope
test
pusha
mov
xlat
add
xor
dec
xchg
cmp
push
pop
(bad)
ja
call
cmp
retf
cld
or
ret
cli
cmp
sub
push
cmp
xlat
ret
mov
xchg
cmp
push
xchg
xlat
ja
call
cmp
retf
mov
cmp
sub
dec
lahf
and
mov
add
mov
mov
xlat
xor
in
call
xlat
ja
call
cmp
retf
je
sub
cli
cmp
sub
stos
push
cmp
xlat
dec
ja
mov
xchg
cmp
push
jecxz
ja
add
repnz
lahf
cmp
out
adc
inc
xchg
dec
xchg
dec
repnz
stos
pop
pop
sub
pop
xor
xor
jmp
addr16
sub
dec
nop
cmp
lea
hlt
add
int3
repz
ja
xchg
mov
mov
addr16
cmp
ss
jmp
push
ret
lahf
(bad)
stos
cmp
cmp
retf
(bad)
cmp
js
mov
ja
add
retf
cmp
mov
push
aas
mov
int3
repnz
ja
aad
mov
stc
js
inc
ret
scas
inc
mov
cmp
pop
and
ja
lahf
and
mov
add
mov
stos
inc
data16
cli
cmp
mul
fs
retf
cmp
mov
jo
ja
stos
push
ins
fnstsw
dec
mov
add
mov
mov
add
test
cmp
repz
ja
push
mov
add
push
ret
cli
cmp
bound
inc
xor
jns
push
(bad)
std
push
ret
cli
cmp
mov
jo
cmp
push
inc
mov
cmp
push
dec
xlat
ja
shl
mov
in
adc
xor
aas
pop
xchg
pop
scas
mov
ja
in
aas
mov
xchg
lahf
add
ja
imul
mov
xchg
cmp
push
cmps
aam
mov
in
aas
mov
xchg
lahf
stos
jge
ja
in
aas
mov
inc
mov
cmp
inc
nop
cmp
out
add
scas
std
push
cmp
out
cmp
scas
add
cli
cmp
shr
add
scas
std
push
cmp
out
cmp
mov
add
or
ja
in
mov
cmp
jg
xchg
lahf
arpl
ja
loope
pop
cmp
dec
lahf
and
mov
add
mov
int3
icebp
mov
ja
fnstsw
pop
stos
out
sub
pop
pop
mov
ja
in
aas
pop
xchg
lahf
mov
lods
rcr
xor
xor
xchg
xchg
lahf
mov
ja
in
aas
mov
xchg
lahf
mov
ss
pop
add
push
xor
pop
add
retf
mov
inc
mov
xor
pop
add
repz
push
pop
add
retf
cmp
mov
lahf
and
mov
add
mov
inc
mov
cmp
xlat
mov
inc
mov
cmp
push
pop
aad
mov
in
aas
pop
xchg
lahf
jnp
ret
ja
in
or
inc
xchg
cmp
call
push
cmp
xor
addr16
jp
ja
in
aaa
pop
inc
adc
aas
pop
xchg
mov
pushf
cmp
mov
nop
cmp
out
xor
inc
xchg
cmp
call
xchg
cmp
ret
outs
ret
cmp
ja
in
pop
cmp
aad
cmp
dec
nop
cmp
xlat
mov
sbb
mov
jns
ja
in
aas
mov
xchg
and
(bad)
pop
sub
jnp
dec
mov
test
repnz
cmp
inc
(bad)
pop
sub
lods
push
mov
add
inc
stos
push
cmp
jbe
(bad)
ja
loope
iret
fstp
ja
rcl
ja
cmp
mov
loope
pop
sub
xor
ja
lahf
lahf
jp
ja
in
addr16
inc
xchg
retf
jl
lahf
out
jns
ja
imul
cs
push
imul
(bad)
push
xor
ret
ja
mov
xchg
ss
ja
inc
xchg
dec
mov
cmp
mov
push
ret
pop
das
leave
xor
xor
mov
jge
ja
add
mov
push
sub
add
push
bound
push
xchg
cmp
push
arpl
inc
jmp
adc
addr16
imul
pusha
adc
fadd
ret
std
push
ret
ja
retf
xlat
ja
rcl
cmp
js
(bad)
jle
sub
mov
xor
cmp
cmp
loopne
aam
xchg
cmp
cmp
mov
sub
sbb
ja
addr16
or
cmp
add
cmp
dec
add
mov
mov
add
test
cld
(bad)
aam
xchg
cmp
cmp
mov
dec
repnz
cmp
and
ds
mov
repnz
cmp
mov
push
ret
scas
inc
ficom
cmp
jns
imul
inc
cmp
pop
jae
xor
xchg
xchg
lahf
mov
ret
ja
fwait
test
push
pop
fwait
inc
xchg
xchg
cli
cmp
sub
ds
push
das
mov
sub
jp
cmp
cmp
mov
sub
jnp
test
fwait
inc
xchg
xchg
lahf
mov
imul
test
mov
push
ret
pop
jns
xor
and
push
cmp
xor
mov
mov
int
ret
addr16
pop
das
leave
xor
add
add
sbb
jl
jle
push
xchg
cmp
mov
adc
ja
push
push
out
sub
pop
jns
xor
add
pop
test
xor
mov
mov
int
aad
sub
pop
das
leave
xor
add
jmp
lods
push
dec
retf
cmp
xor
mov
mov
loope
pop
addr16
sbb
mov
add
ja
sub
lahf
daa
addr16
ja
sub
ret
sbb
mov
ret
mov
sar
mov
cmp
or
xchg
jns
push
cmp
cmp
cmp
aas
push
ret
xchg
test
and
in
ret
cmp
inc
sbb
ret
ja
push
test
xor
push
scas
int3
ja
jmp
ret
mov
sar
mov
cmp
or
mov
mov
xchg
cmp
cmp
aas
push
ret
xchg
test
and
in
ret
cmp
inc
sbb
ret
ja
push
test
xor
push
pop
int3
ja
xchg
mov
push
arpl
ja
rcl
push
mov
in
jae
inc
xchg
dec
bnd
dec
jb
mov
ja
sub
xor
psubd
loope
mov
push
ret
lahf
add
ja
sub
ret
ja
push
ret
(bad)
cli
mov
ret
ja
sub
ret
sbb
mov
scas
xchg
mov
mov
scas
ss
add
jnp
ret
ja
scas
xchg
xor
int3
ja
add
mov
add
sbb
mov
add
ja
push
ret
pop
pop
mov
ja
push
ret
aam
test
sbb
mov
retf
inc
jmp
jae
sbb
ja
push
ret
ja
call
sbb
mov
sub
daa
push
dec
into
ja
loope
fist
cmp
push
iret
aam
mov
push
push
fist
cmp
cmp
sub
ja
loope
pop
addr16
cli
cmp
mov
dec
repnz
scas
ret
std
push
ret
pop
out
fadd
ja
or
inc
mov
popa
add
mov
sub
ja
ins
scas
ret
std
push
sub
pop
xchg
cmp
addr16
sbb
jl
inc
fist
cmp
aad
test
aaa
mov
or
mov
fs
ja
in
imul
add
pop
mov
push
into
ja
cmp
push
mov
ret
sbb
mov
pop
ret
call
mov
ret
pushf
cmps
in
xchg
out
cmp
push
ret
ja
sub
int
mov
add
cli
cli
mov
ja
test
mov
jge
ret
and
lea
xchg
ja
ds
enter
pop
ds
cmps
je
push
cmp
in
push
jbe
push
sar
ret
or
mov
js
sbb
ja
push
shl
push
ret
addr16
fidiv
imul
jbe
push
ret
hlt
add
xor
imul
xlat
popf
sbb
or
ret
lahf
or
inc
xchg
dec
(bad)
mov
test
xor
inc
xchg
cmp
pushf
mov
cmp
sar
cmp
inc
scas
inc
xchg
cmp
inc
(bad)
mov
sub
push
inc
repnz
mov
cmp
sti
enter
lahf
iret
ja
popa
add
shl
inc
xchg
inc
xchg
cmp
cmp
sub
std
adc
ja
cmp
xchg
daa
mov
call
mov
(bad)
cld
sub
mov
outs
sbb
sbb
inc
xchg
cmp
cmp
repnz
xchg
cmp
xchg
in
sbb
mov
sub
ss
push
ret
ja
push
cmps
ret
std
push
les
leave
cmps
ret
std
push
ret
test
ja
jmp
adc
sub
ja
push
mov
std
push
sub
aas
push
mov
std
push
les
xchg
neg
or
ret
lahf
ror
jo
push
dec
mov
push
xchg
in
movs
jo
push
into
ja
sbb
dec
cli
pusha
mov
inc
sbb
ret
ja
jb
ja
lahf
and
cmp
sahf
mov
ja
sub
cmp
pop
xchg
push
pusha
xor
mov
sbb
dec
mov
sbb
dec
mov
sbb
dec
mov
sbb
dec
mov
sbb
dec
mov
sbb
dec
mov
sbb
dec
mov
addr16
lods
mov
xchg
mov
push
mov
ja
jecxz
pop
cmp
mov
sbb
dec
mov
sbb
dec
mov
sbb
shl
sbb
ret
ja
xchg
cmp
mov
test
pop
mov
in
sbb
cmp
pop
mov
ret
hlt
sbb
dec
repnz
dec
jnp
push
cmp
ds
inc
ins
mov
push
cmp
js
cmp
mov
xchg
cmp
out
xchg
neg
push
(bad)
ret
xchg
ret
add
add
ja
aas
enter
neg
mov
sahf
(bad)
ja
loope
inc
inc
loope
std
cmp
mov
inc
add
mov
sahf
mov
inc
dec
iret
fadd
in
mov
push
ret
xchg
xchg
mov
add
push
cmp
cmp
cmp
aas
push
ret
xchg
inc
(bad)
mov
add
jmp
cmp
mov
push
cmp
mov
push
sbb
ja
ret
ja
pop
inc
(bad)
std
push
ret
sahf
fsubr
ja
out
(bad)
ja
lahf
and
cmp
add
cmp
mov
dec
repnz
xchg
cmp
out
add
scas
std
push
cmp
out
add
push
cmp
mov
xchg
cmp
out
xchg
imul
sub
lahf
push
popa
ret
ja
aad
mov
ret
add
add
scas
std
push
leave
ja
xchg
imul
sub
lahf
mov
sahf
(bad)
ja
in
jbe
xchg
cmp
ja
xor
imul
addr16
dec
test
nop
push
and
mov
std
xor
retf
add
repnz
cmp
or
ret
mov
dec
repz
push
repz
add
sbb
std
push
retf
xchg
imul
sub
lahf
das
popa
ret
ja
jmp
inc
xchg
cmp
xor
xchg
jmp
ror
xchg
nop
dec
mov
in
ret
xchg
xchg
cli
cmp
stos
pop
addr16
cli
cmp
sub
mov
ret
hlt
jnp
stos
mov
imul
aas
leave
xor
call
cmp
retf
ja
push
ret
sbb
mov
leave
xor
or
cwde
mov
ret
ja
in
ret
xchg
xchg
cli
cmp
stos
pop
addr16
cli
cmp
sub
push
stos
mov
imul
xchg
test
jbe
xchg
cmp
retf
ja
push
ret
sbb
mov
test
je
push
dec
mov
in
ret
xchg
xchg
cli
cmp
stos
aad
sub
cli
cmp
sub
jnp
stos
mov
imul
xchg
test
jbe
xchg
cmp
retf
ja
push
ret
sbb
mov
test
je
push
cmp
cmp
cmp
aas
push
ret
xchg
inc
(bad)
mov
add
pop
xchg
mov
sub
mov
ret
mov
adc
mov
push
cmp
dec
mov
inc
mov
cmp
cmp
mov
inc
ins
dec
dec
test
pop
push
and
mov
test
jne
push
cmp
mov
xchg
cmp
mov
inc
cmp
js
inc
jbe
xchg
cmp
xor
mov
xchg
pop
xchg
mov
ja
in
mov
xchg
lahf
addr16
ret
ja
lods
rcr
inc
push
ret
xchg
xchg
mov
add
mov
sbb
ret
pop
scas
mov
sub
mov
dec
pop
ss
push
ret
mov
xchg
cmp
dec
mov
inc
mov
cmp
cmp
mov
inc
ins
dec
dec
test
cdq
imul
lods
jo
push
xor
les
or
repnz
xchg
cmp
mov
xchg
cmp
ja
xor
imul
loop
xchg
cmp
xchg
repnz
ss
dec
repnz
in
add
daa
xlat
inc
sbb
inc
xchg
cmp
push
addr16
jmp
addr16
(bad)
lahf
ja
lahf
and
cmp
inc
lahf
inc
xchg
cmp
js
ret
sbb
mov
push
pop
ss
push
cmp
aad
test
ret
cmp
push
retf
(bad)
ja
call
ret
ja
das
dec
jp
icebp
xor
cmp
aas
push
ret
xchg
dec
mov
push
cmp
in
cmp
mov
pushf
cmp
jb
push
xor
mov
push
cmp
push
xlat
(bad)
ja
in
add
hlt
ja
xor
imul
cli
sub
xchg
cli
and
cmp
dec
xchg
cmp
push
sti
(bad)
ja
add
cli
cmp
test
xor
inc
xchg
cmp
(bad)
ins
ret
ja
fnsave
mov
sub
push
arpl
mov
push
test
ja
push
jecxz
jmp
into
mov
pushf
cmp
sbb
xchg
inc
xchg
cmp
cmp
sbb
mov
xchg
cmp
or
xor
aad
push
inc
dec
mov
stos
test
mov
xchg
and
clc
popa
xor
inc
xchg
cmp
dec
ins
ret
ja
push
cmp
out
add
pop
push
mov
aaa
mov
sub
or
je
push
xor
nop
jmp
ins
stos
sbb
sub
pop
(bad)
mov
ja
cmp
mov
call
cmp
jnp
test
call
mov
jo
ja
(bad)
xchg
cmp
ss
sub
sbb
cmp
mov
mov
push
mov
ja
aaa
popf
sub
stos
shl
loope
hlt
push
js
and
jecxz
jg
or
fcmovnu
loope
jbe
loope
cld
cli
fs
ja
push
ret
ja
jmp
addr16
inc
mov
push
bound
mov
pop
jae
push
dec
xor
add
mov
enter
bound
mov
leave
xor
test
pop
and
ret
add
ret
lahf
jecxz
ret
ja
nop
xor
ss
imul
sub
add
ret
lahf
jmp
test
call
inc
pop
jecxz
(bad)
push
ret
dec
mov
ss
sbb
mov
pop
sub
(bad)
push
ret
dec
mov
ss
sbb
mov
pop
inc
(bad)
std
push
ret
pushf
mov
cmp
ss
repnz
test
jmp
jecxz
jmp
inc
aas
leave
xor
test
jno
jne
call
jb
ret
ja
pop
(bad)
jmp
jno
jne
out
push
xor
dec
push
leave
xor
push
out
out
jmp
inc
cmp
xor
test
mov
js
add
ins
ret
ja
outs
inc
mov
jb
ja
ss
mov
inc
dec
retf
test
push
ret
ja
dec
iret
test
push
ret
ja
dec
rol
push
xlat
test
push
ret
ja
dec
jecxz
std
push
ret
ja
dec
out
test
push
ret
ja
dec
repz
push
ret
ja
dec
test
loope
es
push
loope
pushf
add
inc
xchg
lahf
out
ins
ret
ja
lods
retf
(bad)
cli
xchg
retf
inc
dec
mov
add
aas
push
jecxz
inc
sbb
mov
les
sbb
hlt
inc
dec
mov
push
imul
lahf
sbb
sbb
mov
add
daa
push
push
sub
inc
aaa
or
push
ret
ja
ins
out
mov
sub
cmp
pop
push
out
mov
cmp
inc
call
xor
out
sub
mov
loope
mov
add
push
add
ret
ja
dec
xchg
push
mov
push
pop
push
xchg
test
push
ret
ja
dec
xchg
test
push
ret
ja
dec
fwait
test
push
ret
ja
dec
lahf
test
push
ret
ja
dec
mov
out
push
cmps
test
push
ret
ja
dec
stos
test
push
ret
ja
dec
scas
test
push
ret
ja
dec
mov
std
push
ret
ja
dec
mov
std
push
ret
ja
dec
mov
out
push
mov
out
push
inc
test
push
ret
ja
dec
inc
test
push
ret
ja
dec
dec
test
push
ret
ja
dec
dec
test
push
ret
ja
dec
push
test
push
ret
ja
dec
push
test
push
ret
ja
dec
pop
test
push
ret
ja
dec
pop
test
push
ret
ja
dec
arpl
push
addr16
push
ret
ja
dec
imul
ret
ja
dec
outs
test
push
ret
ja
dec
jae
std
push
ret
ja
dec
ja
std
push
ret
ja
dec
jnp
std
push
ret
ja
dec
jg
std
push
ret
ja
dec
add
push
pop
test
push
ret
ja
dec
or
push
je
mov
dec
adc
push
pop
test
push
ret
ja
dec
sbb
push
pop
test
push
ret
ja
dec
and
push
daa
test
push
ret
ja
dec
sub
push
das
test
push
ret
ja
dec
cmp
push
aas
test
push
ret
ja
dec
ret
cmp
push
out
push
mov
inc
dec
retf
cmp
push
out
push
iret
cmp
push
out
push
rol
mov
dec
xlat
cmp
push
out
push
fild
mov
dec
fild
mov
dec
jecxz
std
push
ret
ja
dec
out
std
push
ret
ja
dec
jmp
std
push
ret
ja
dec
out
cmp
push
out
push
repz
push
out
push
test
inc
dec
sti
cmp
push
out
push
inc
mov
dec
add
push
xchg
mov
dec
mov
mov
dec
pop
mov
dec
xchg
cmp
push
out
push
xchg
cmp
push
out
push
fwait
cmp
push
out
push
lahf
cmp
push
out
push
mov
out
push
cmps
cmp
push
out
push
mov
std
push
ret
ja
dec
mov
std
push
ret
ja
dec
mov
out
push
mov
out
push
inc
cmp
push
out
push
dec
cmp
push
out
push
push
cmp
push
out
push
push
cmp
push
out
push
pop
cmp
push
out
push
pop
cmp
push
out
push
arpl
mov
dec
addr16
push
out
push
imul
push
outs
cmp
push
out
push
jnp
std
push
ret
ja
dec
jg
std
push
ret
ja
dec
add
mov
dec
pop
cmp
push
out
push
or
mov
dec
jae
mov
dec
adc
mov
dec
pop
cmp
push
out
push
sbb
mov
dec
pop
cmp
push
out
push
and
mov
dec
daa
cmp
push
out
push
sub
mov
dec
das
cmp
push
out
push
xor
mov
dec
aaa
cmp
push
out
push
cmp
mov
dec
aas
cmp
push
out
.byte
ret
.byte
