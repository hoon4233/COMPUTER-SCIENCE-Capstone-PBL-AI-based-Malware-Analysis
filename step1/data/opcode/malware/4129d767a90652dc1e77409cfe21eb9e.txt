push
mov
dec
fsub
jns
sub
cmp
cmp
jmp
jg
sub
dec
call
es
pop
jnp
and
jb
dec
dec
popf
dec
dec
sub
sub
(bad)
test
inc
not
and
or
cmp
pop
or
push
addr16
test
xor
jmp
into
dec
sub
stos
mov
shl
cli
push
repnz
sub
dec
test
jno
jne
mov
sbb
dec
inc
bound
mov
push
jno
bound
je
es
mov
int3
(bad)
push
sbb
adc
jmp
int
sub
pusha
fistp
data16
sub
retf
jge
mov
jb
or
shr
imul
mov
adc
push
push
mov
ins
stc
out
bound
daa
adc
xor
sub
inc
jb
or
jmp
dec
jmp
neg
(bad)
jmp
aas
dec
mov
sar
dec
jge
sub
aas
bound
cmps
pop
inc
jmp
idiv
sar
dec
fadd
lock
sar
dec
mov
bound
jne
sub
das
aas
and
jbe
je
pop
dec
add
sbb
dec
xor
or
js
mov
mov
out
jno
mov
outs
sbb
push
xor
out
jno
mov
popf
xor
out
push
pop
inc
popf
cmps
mov
cmps
jno
sub
jge
sub
and
sub
mov
imul
cs
or
sub
jne
adc
jge
test
jne
jmp
jp
sub
dec
rol
aam
push
pop
aam
ins
jmp
xchg
push
push
bound
out
push
jp
sar
dec
ret
xchg
push
dec
sub
mov
dec
sub
and
jo
xchg
adc
loope
arpl
lds
bound
ret
ret
push
jmp
pop
inc
aam
and
dec
shl
dec
jle
cwde
and
imul
pop
dec
jmp
dec
sub
int3
(bad)
jb
sbb
cmps
jnp
inc
imul
imul
movs
arpl
loope
dec
inc
bound
dec
inc
dec
int
sub
pop
jmp
adc
cmps
sbb
aam
push
jmp
cmp
aas
dec
aam
pop
jmp
hlt
push
sar
dec
ret
and
dec
sub
mov
add
xor
xchg
push
fimul
bound
sub
hlt
stos
xchg
jbe
dec
sub
sbb
inc
pop
ss
mov
call
inc
popa
pop
dec
inc
bound
daa
or
cmp
dec
sub
mov
dec
sbb
mov
aad
hlt
mov
lock
xor
(bad)
lock
xor
bound
ret
xchg
dec
sub
and
imul
mov
xor
int3
out
outs
inc
mov
bound
cs
mov
pusha
sbb
mov
cwde
pushf
add
loope
pop
adc
mov
aad
jl
jo
mov
mov
add
cmp
mov
xor
or
xor
dec
inc
pop
jge
sub
jge
sub
jge
pop
outs
cmp
mov
sub
mov
bound
dec
pop
and
pop
aam
popa
and
aam
and
xlat
mov
sub
mov
sar
shl
dec
xchg
pusha
jge
sub
call
mov
mov
sbb
cmp
dec
out
cmp
sub
dec
aam
jno
pop
push
jne
bound
in
imul
sbb
imul
pop
sahf
xchg
imul
or
sub
cmp
push
mov
xadd
sbb
mov
jle
cwde
int3
(bad)
jb
sbb
inc
nop
repz
and
mov
or
sub
sbb
dec
sahf
jge
repz
movs
(bad)
call
and
aam
aas
les
jl
mov
data16
xchg
jbe
jbe
pop
jle
outs
sahf
hlt
mov
stos
pop
jl
pop
fwait
inc
or
pop
ins
mov
xchg
test
pop
cmp
ror
sahf
(bad)
outs
xchg
hlt
mov
int3
jecxz
cmp
cmp
pop
mov
mov
daa
jne
jmp
dec
sub
test
call
sub
sub
into
fidivr
sub
jge
bound
jge
idiv
daa
jmp
xor
xlat
popf
xor
test
dec
mov
loope
mov
loop
dec
sub
test
adc
mov
bound
pop
mov
aaa
jne
aas
pop
cmc
fld
arpl
aam
inc
nop
push
mov
retf
xor
test
retf
arpl
aam
lock
xor
aaa
hlt
stos
jp
sub
mov
push
mov
in
push
mov
(bad)
div
and
scas
add
sub
jmp
mov
dec
mov
sti
cmp
lea
push
cmp
push
stos
les
mov
adc
mov
pop
js
sub
jbe
mov
xchg
sbb
jge
sub
sub
jmp
mov
daa
cmp
adc
jne
clc
das
pop
pop
jp
mov
dec
jmp
push
mov
jmp
std
popf
js
lahf
and
outs
push
dec
xor
or
jmp
jmpw
mov
cmp
xchg
aaa
hlt
stos
jp
sub
mov
jbe
or
push
sbb
mov
dec
jge
aam
or
imul
or
ins
ret
dec
adc
xchg
jmp
imul
mov
inc
nop
push
xor
xlat
jmp
jle
jmp
mov
mov
mov
sbb
inc
xchg
stos
jns
jge
test
jmp
mov
push
leave
or
inc
cmp
or
(bad)
popf
add
sahf
div
daa
and
aas
dec
jge
(bad)
aam
sub
sbb
imul
call
xor
les
ret
pop
es
ror
(bad)
in
popf
or
or
dec
sub
mov
daa
aam
jge
js
cmp
or
sub
hlt
mov
call
mov
aas
mov
pop
js
sub
pop
push
popf
outs
jp
test
jmp
int3
push
(bad)
fimul
mov
fimul
aam
jne
ins
data16
jmp
(bad)
bound
int3
jmp
mov
movs
test
not
xor
cmp
jge
je
es
aaa
hlt
stos
test
pop
sbb
xor
cmc
dec
shr
mov
test
jge
dec
data16
sub
lock
xor
cmps
jmp
pop
outs
bound
int3
jmp
mov
and
cmp
jge
int
imul
or
xor
(bad)
call
ins
loope
mov
pop
dec
(bad)
fndisi(8087
mov
scas
imul
pop
aam
push
(bad)
call
bound
jmp
cmps
inc
mov
hlt
or
imul
shr
rcr
xor
bound
jmp
and
mov
dec
dec
sub
test
jge
(bad)
cmp
jge
(bad)
repz
xor
bound
sub
pop
aaa
lahf
and
mov
leave
or
and
mov
or
rol
fadd
xor
sar
sub
gs
mov
aas
dec
jnp
dec
mov
push
xchg
add
loope
imul
dec
cmps
out
mov
popf
sub
test
jge
sub
mov
retf
mov
mov
mov
popf
dec
sub
inc
test
loope
imul
dec
mov
mov
jge
cmps
daa
mov
mov
sub
popf
sub
daa
or
scas
dec
jl
sub
add
sub
int3
dec
call
sub
push
into
call
popf
js
lahf
and
outs
xchg
inc
dec
push
(bad)
aas
dec
pop
gs
push
(bad)
aas
dec
sub
add
imul
data16
and
sub
(bad)
repz
movs
(bad)
call
pusha
jge
outs
call
imul
cmp
loope
pop
mov
bound
mov
add
sbb
sbb
jmp
mov
mov
pusha
sub
(bad)
pop
aaa
adc
daa
jmp
aas
dec
mov
pop
sbb
jge
sub
cmp
stos
mov
cmp
(bad)
lock
xor
bound
fld
bound
outs
sahf
je
pop
ja
dec
push
(bad)
aas
dec
aam
jge
mov
mov
cmp
adc
fadd
xor
sar
sub
jbe
mov
aas
dec
jnp
dec
mov
push
or
jmp
test
dec
xor
and
mov
out
mov
popf
hlt
mov
xchg
aaa
hlt
stos
test
jno
jge
ret
neg
shl
(bad)
in
push
mov
fsubr
test
jmp
int3
dec
sahf
jge
outs
push
jae
data16
mov
mov
or
jmp
shr
mov
data16
mov
pop
push
les
test
pop
push
jp
data16
sub
(bad)
test
out
cmp
adc
cmps
jp
jge
test
jne
fsubr
dec
sub
dec
ret
mov
mov
mov
jmp
shr
mov
cmp
sub
imul
movs
outs
jmp
mov
mov
bound
jle
xchg
pop
inc
mov
mov
push
inc
jbe
inc
jg
data16
sub
(bad)
hlt
mov
call
stos
pop
dec
dec
and
inc
mov
popf
(bad)
sub
(bad)
(bad)
xor
bound
inc
aam
jne
sbb
cmp
dec
sub
test
in
or
sub
jns
sub
jge
sub
cmovae
push
sub
hlt
or
or
sub
jge
ret
adc
dec
sub
cmp
mov
std
jae
bound
mov
mov
mov
jns
or
pop
test
inc
(bad)
lock
xor
dec
inc
xchg
popf
or
ret
(bad)
adc
jecxz
push
add
mov
call
jne
mov
jle
cwde
test
xor
sbb
jecxz
call
movs
(bad)
call
pushf
or
popf
or
sub
retf
xor
popf
sub
mov
imul
sub
movs
dec
repz
and
sub
stc
inc
bound
scas
scas
xor
jmp
mov
scas
xor
pushf
sbb
arpl
inc
test
loope
imul
xor
scas
add
mov
jge
mov
jmp
mov
mov
push
inc
sub
retf
xor
(bad)
test
popf
xor
pop
jge
sub
or
imul
sub
movs
dec
repz
ret
xor
and
mov
jmp
mov
mov
jge
inc
xor
push
sub
and
cmps
jne
in
and
xor
popf
ficomp
mov
jge
sar
dec
sub
clc
icebp
aam
sbb
(bad)
fimul
aam
add
outs
sahf
je
and
ror
sbb
xchg
fadd
retf
mov
fild
inc
scas
sar
or
cmp
cmps
out
mov
popf
sub
mov
cmps
jno
in
add
repnz
popf
xor
xchg
sahf
(bad)
scas
into
xor
out
mov
popf
inc
mov
bound
scas
push
jg
sub
retf
xor
popf
xor
bound
int3
out
outs
jb
scas
rol
dec
jnp
cmp
sub
fdivr
aam
or
adc
imul
dec
sub
movs
dec
repz
and
imul
cmps
mov
cmps
jno
aam
jge
pop
inc
pop
dec
inc
lods
popf
or
aam
sbb
adc
inc
push
popf
or
ja
scas
(bad)
xor
or
cmp
inc
xor
push
sub
dec
sub
push
retf
and
xchg
lahf
xor
popf
or
outs
inc
mov
bound
and
or
jge
sub
shr
mov
jge
daa
xchg
xor
popf
jge
pop
inc
pop
dec
inc
fistp
mov
pushf
sbb
lea
inc
push
popf
or
ja
scas
(bad)
xor
or
cmp
inc
xor
push
sub
dec
sub
push
retf
and
xchg
lahf
xor
popf
or
outs
inc
mov
bound
and
or
jge
sub
jmp
pop
mov
jge
mov
cmps
jno
aam
jge
pop
push
xor
neg
(bad)
scas
retf
aam
mov
scas
imul
cmps
jg
xor
popf
jge
pop
push
xor
arpl
daa
jnp
cmp
ret
dec
mov
push
popf
or
cmp
imul
mov
mov
aam
dec
sub
push
inc
arpl
ret
xor
popf
or
outs
inc
mov
bound
and
or
jge
xchg
(bad)
xor
addr16
ret
xor
popf
adc
jae
dec
pop
(bad)
aas
dec
sub
sub
imul
into
call
movs
clc
mov
pushf
or
js
sub
movs
mov
aam
add
out
clc
xchg
aam
sbb
out
mov
popf
sub
adc
ins
clc
mov
scas
fiadd
retf
xor
inc
hlt
or
jmp
dec
repz
int3
push
sahf
jge
scas
fdivr
sub
fcomp
mov
mov
xor
pushf
or
fisttp
(bad)
cld
movs
add
dec
dec
movs
clc
out
aam
sbb
clc
out
pushf
or
jge
scas
repnz
popf
xor
pushf
sbb
push
sbb
jecxz
fwait
ja
jge
scas
mov
mov
xor
les
xor
ja
jbe
dec
sub
(bad)
outs
sahf
je
and
inc
dec
sub
retf
xor
pushf
sbb
pop
sbb
bound
mov
pop
adc
sub
inc
scas
arpl
sub
clc
cmps
aam
sbb
out
mov
popf
sub
ja
daa
add
popa
jge
cmps
out
mov
popf
sub
mov
xor
ja
xor
hlt
xchg
sub
or
(bad)
cld
mov
cmps
out
mov
popf
sub
mov
xor
ja
xor
je
and
adc
movs
outs
outs
jge
test
lea
sahf
call
push
lock
xor
(bad)
dec
aam
or
jle
sub
jge
jp
jge
xchg
mov
dec
sub
xor
mov
mov
pushf
sbb
pop
popf
or
aam
sbb
(bad)
adc
loope
pop
dec
movs
clc
(bad)
pushf
or
clc
mov
scas
cli
xor
pushf
sbb
xlat
in
mov
popf
(bad)
mov
das
bound
fadd
lock
mov
mov
int3
fstp
sub
jmp
sub
adc
sub
daa
add
call
ins
clc
cmp
bound
mov
xor
popf
xor
(bad)
test
popf
xor
pop
jge
sub
or
jecxz
jne
bound
jmp
clc
jle
bound
scas
retf
aam
test
popf
xor
push
hlt
or
jmp
jle
jmp
int3
push
sahf
jge
scas
popf
jl
sub
fdivr
aam
or
jl
sub
jge
jle
jge
jb
xchg
or
in
out
mov
popf
jg
mov
popf
hlt
retf
xor
popf
sub
mov
loope
pop
mov
bound
mov
enter
or
jb
test
data16
sub
xor
xor
hlt
xchg
sbb
or
(bad)
(bad)
jmp
clc
(bad)
aam
sbb
adc
aam
sbb
pop
sbb
jge
sub
cmp
aaa
arpl
test
cmc
mov
popf
jge
scas
ins
jl
sub
clc
das
aam
sbb
bound
mov
out
mov
popf
sub
outs
mov
push
movs
(bad)
call
ins
clc
scas
sub
sub
popf
jne
scas
mov
dec
sub
shl
pushf
or
mov
retf
xor
pushf
and
cmps
jne
in
and
xor
out
mov
popf
hlt
mov
popf
jge
scas
in
jge
sub
or
jge
das
popf
enter
add
lahf
xor
and
scas
lahf
xor
bound
out
jbe
xchg
sub
xor
and
jae
bound
mov
out
mov
popf
cmp
popf
xor
popf
sub
mov
out
stc
dec
(bad)
popf
xor
(bad)
dec
scas
lahf
xor
and
scas
lahf
xor
bound
out
jb
xchg
sbb
cmc
mov
popf
jge
sub
ins
push
sub
lods
mov
popf
hlt
mov
popf
sub
inc
aam
int
aad
test
popf
xor
popf
jb
es
xor
popf
sub
inc
mov
popf
sub
inc
stos
xchg
stos
add
bound
mov
out
mov
popf
inc
retf
xor
popf
(bad)
repnz
jp
scas
lahf
xor
popf
xor
push
repnz
popf
xor
mov
mov
xor
jg
xor
mul
xor
mov
mov
xor
mov
mov
xor
jg
xor
les
xor
jg
xor
les
xor
jg
xor
into
call
jmp
sbb
push
sbb
mov
popf
and
jo
mov
mov
out
or
imul
sub
dec
jnp
hlt
push
bound
test
imul
imul
aad
add
xchg
dec
sub
and
sub
out
lds
push
bound
dec
xchg
or
jmp
cdq
cmps
push
xchg
xor
bound
dec
xor
daa
popf
dec
sub
les
mov
or
test
inc
jecxz
xchg
addr16
dec
ror
or
popf
xor
jmp
jge
sub
xchg
data16
xchg
mov
and
shr
mov
dec
inc
bound
dec
inc
mov
jge
sub
hlt
mov
sub
bound
mov
cwde
int3
(bad)
jp
sbb
and
dec
sub
hlt
mov
addr16
imul
fild
jge
jmp
push
mov
jge
test
inc
shr
jge
push
push
movntps
dec
(bad)
(bad)
cmp
das
bound
mov
mov
cmp
das
bound
mov
sar
cs
push
sub
inc
cmps
sbb
dec
sub
dec
sub
rcr
dec
aam
clc
fistp
jp
push
sub
xchg
das
sub
mov
push
leave
or
adc
sub
scas
das
and
or
arpl
mov
jge
adc
jge
stos
outs
shr
cmp
retf
jge
frstor
(bad)
push
jl
es
xchg
shr
jl
adc
cmp
shl
std
cmp
mov
mov
jge
cs
loop
sub
or
aas
dec
frstor
shr
ins
cmp
mov
dec
stos
mov
(bad)
std
inc
xor
cmp
cmp
cmp
pop
mov
popf
xor
bound
sub
mov
dec
xchg
fsub
sub
hlt
mov
bound
daa
popf
xor
bound
sub
mov
dec
stos
mov
std
inc
xor
cmp
and
cmp
jnp
pushf
xor
bound
push
mov
dec
mov
mov
cmp
sub
jge
sub
cmps
lahf
pushf
xor
bound
sub
mov
dec
stos
xchg
sub
(bad)
std
inc
xor
cmp
sub
jge
sub
cmps
mov
addr16
imul
dec
stos
mov
inc
xor
cmp
imul
mov
cs
loop
sub
mov
jecxz
mov
push
sub
xchg
stos
sub
out
(bad)
(bad)
cmp
test
jg
cs
loop
sub
fmul
mov
jge
cs
movntps
fsub
cs
loop
sub
or
aas
dec
test
inc
shr
jg
mov
jge
mov
mov
cmp
sub
dec
pop
mov
jo
mov
jge
stos
xchg
mov
(bad)
hlt
mov
jnp
aas
dec
and
js
mov
jge
jmp
sub
shr
dec
aam
clc
fist
bound
push
and
sub
xor
popf
pop
retf
aas
dec
stos
outs
shr
cmp
cmp
ret
xchg
shr
jl
adc
cmp
rol
adc
cmp
stos
mov
std
inc
xor
cmp
imul
dec
sub
xchg
xor
ret
jmp
mov
push
leave
or
mov
jge
and
mov
mov
pop
ret
aas
dec
mov
mov
fmul
sub
or
ins
retf
dec
pop
ret
aas
dec
test
jp
outs
xchg
jb
outs
xchg
inc
(bad)
sub
inc
scas
in
dec
sub
add
cs
(bad)
jmp
mov
mov
xchg
inc
iret
sub
cmp
ret
cmp
push
jl
and
cmp
(bad)
push
jg
ds
mov
push
xchg
jnp
ins
loope
inc
mov
pop
std
xor
data16
outs
shr
std
(bad)
jecxz
mov
jmp
stos
mov
jge
popf
addr16
shr
(bad)
scas
sub
cmp
pop
outs
std
xor
bound
dec
test
jne
imul
push
outs
in
movntps
push
mov
outs
in
(bad)
call
inc
(bad)
push
or
cmp
movntps
inc
mov
jecxz
lahf
aas
bound
push
outs
in
movntps
push
mov
outs
in
(bad)
call
aad
imul
dec
mov
push
sub
inc
mov
popf
js
lahf
and
fisttp
in
das
repnz
movs
daa
fcmovbe
or
bound
(bad)
jmp
stos
jp
sub
jbe
fild
xchg
push
bound
bound
dec
inc
imul
sub
hlt
mov
(bad)
or
je
jge
ja
aas
dec
mov
daa
add
imul
dec
mov
push
sub
inc
cmc
imul
dec
mov
ss
imul
dec
mov
push
sub
and
imul
dec
mov
fisttp
shr
mov
sbb
xor
sbb
jecxz
pop
jp
jge
cs
leave
or
imul
pop
ja
aas
dec
in
daa
xchg
push
sub
(bad)
repz
movs
(bad)
call
out
cmp
mov
xchg
cmp
sub
(bad)
cld
movs
pop
arpl
test
or
(bad)
(bad)
sub
(bad)
cld
movs
cmp
dec
test
test
dec
sub
mov
jl
sub
dec
pop
fdivr
dec
mov
push
leave
or
sub
dec
mov
mov
jge
sub
sbb
sub
add
cmps
pop
lods
imul
bound
fadd
lock
xor
ret
sub
push
sub
movs
jle
jmp
ret
sub
jmp
or
sub
jns
sub
mov
sub
cmp
jnp
or
cmps
daa
int
inc
arpl
mov
push
leave
or
pop
ret
inc
bound
dec
inc
cmp
mov
movs
add
jge
aam
cdq
cmps
outs
cmp
dec
aam
or
imul
cmp
popf
push
les
xchg
inc
xchg
retf
pop
dec
sub
hlt
mov
xchg
aaa
hlt
stos
test
mov
push
imul
or
jmp
jmpw
mov
daa
jno
outs
xchg
test
jmp
mov
pop
mov
mov
sbb
jmp
cmps
inc
popw
dec
inc
arpl
or
xor
or
xor
ret
sub
inc
aam
dec
shr
test
mov
outs
sahf
hlt
lea
mov
mov
lock
inc
inc
mov
movs
or
aas
dec
aam
jne
aam
push
adc
sub
into
loope
inc
js
sub
pop
push
adc
popf
js
lahf
and
aam
retf
dec
adc
bound
jnp
aam
js
pop
or
or
aam
js
pop
or
or
aam
js
pop
or
or
aam
js
pop
or
jb
and
dec
mov
popa
js
aas
pop
cmc
pop
adc
or
ins
retf
dec
cs
or
adc
cmc
jge
sub
xchg
adc
jge
mov
ins
retf
pop
cmp
jmp
int3
shl
aas
je
lea
hlt
mov
mov
popf
data16
ret
bound
pop
cmp
stc
outs
popf
push
(bad)
and
jns
inc
fidivr
dec
jnp
(bad)
adc
bound
jle
push
popf
aas
out
imul
xor
(bad)
outs
call
cmps
outs
dec
sub
lods
dec
outs
call
mov
popa
js
shl
xchg
dec
mov
addr16
sub
outs
and
cmp
pop
scas
repz
mov
mov
aam
or
aas
dec
stos
pop
inc
dec
pop
ss
mov
loop
dec
das
pop
ss
shl
xchg
dec
stos
pop
jnp
pop
and
mov
mov
pop
fs
push
jmp
int3
ret
data16
das
fs
daa
pop
jo
icebp
sub
cmp
jmp
int3
ret
addr16
jae
inc
or
mov
sub
loope
dec
test
jp
das
ja
dec
sub
jae
pusha
or
mov
fs
ja
test
ret
pusha
std
jae
pusha
or
mov
loop
dec
sub
cmp
shl
xchg
dec
and
jns
push
mov
sub
jp
ret
dec
pop
dec
inc
cmps
outs
dec
sub
lods
dec
repz
dec
mov
jb
or
addr16
test
jns
jle
hlt
pop
arpl
sub
inc
jno
pop
das
(bad)
shr
std
jae
arpl
push
mov
loop
dec
sub
inc
(bad)
shl
xchg
dec
stos
pop
jnp
pop
push
hlt
mov
mov
popf
data16
push
push
jae
aad
jge
pop
gs
mov
bound
xor
neg
cmp
sub
xchg
shl
arpl
sub
jge
and
retf
popf
and
jo
mov
mov
aam
or
imul
jle
mov
pop
pop
jge
and
jge
pop
xchg
cld
mov
popa
jge
pop
jo
les
push
cmps
sub
jbe
adc
cmps
ret
dec
test
ja
cs
leave
or
cmp
push
jle
jmp
dec
repz
push
aam
or
imul
cmps
sub
cmp
xchg
dec
sub
outs
test
or
daa
add
sub
in
movntps
mov
mov
(bad)
das
jl
or
test
test
fldenv
data16
jmp
dec
icebp
arpl
or
jmp
dec
ss
(bad)
loope
dec
pop
jmp
(bad)
dec
icebp
dec
lods
(bad)
shl
dec
sti
loope
dec
mov
push
xchg
ret
jl
jle
hlt
pop
aam
or
imul
ret
js
sti
loope
dec
mov
mov
dec
push
arpl
sub
sub
aaa
ins
mov
pusha
cmp
ror
popf
dec
loop
sub
into
fisub
push
bound
sbb
xor
or
bound
jb
bound
pop
gs
mov
movs
clc
mov
test
or
imul
mov
bound
pop
and
clc
mov
pop
addr16
cmp
loop
lods
hlt
popf
or
jb
scas
xchg
xchg
mov
loop
dec
dec
fidivr
dec
sub
jg
jne
retf
fcmovu
lea
xchg
aam
push
test
jno
adc
aas
dec
jp
jbe
sub
fiadd
callw
and
popf
test
inc
cmc
fnstcw
dec
jp
lahf
dec
mov
popf
cmp
in
sub
neg
(bad)
mov
push
iret
scas
xchg
xchg
mov
arpl
scas
xchg
xchg
mov
or
xchg
nop
and
and
xor
fmul
retf
fcmovu
lea
int3
pop
ja
fisubr
jge
scas
clc
jns
sub
fcmovu
lea
les
ja
(bad)
push
hlt
(bad)
mov
or
imul
mov
ins
stc
fsubr
bound
dec
fwait
xor
popf
or
aas
dec
mov
popf
hlt
pushf
jmp
xchg
bound
sub
clc
mov
aam
pop
daa
sub
dec
js
jb
sub
mov
pusha
hlt
sti
xchg
call
sub
dec
adc
mov
cmps
out
xchg
aam
sub
dec
aam
or
imul
mov
mov
dec
sub
mov
bound
sahf
mov
xchg
hlt
popf
and
cmps
jno
outs
sahf
je
pop
add
jmp
loopne
cmc
popf
and
xchg
dec
jmp
jnp
loope
dec
adc
shl
and
jge
pop
mov
jge
pop
ins
hlt
xchg
bound
sub
clc
iret
cmc
popf
and
jge
shl
dec
sub
mov
sahf
xchg
push
rcr
xchg
mov
sub
retf
xor
pop
clc
mov
lods
aas
xor
and
sahf
mov
out
sub
movaps
inc
popf
test
pop
or
cmp
mov
fisttp
call
mov
pusha
hlt
xchg
jmp
add
jmp
push
les
mov
mov
dec
sub
or
out
mov
fisttp
jge
pop
aad
dec
pop
(bad)
aas
dec
stos
fistp
cmp
and
imul
(bad)
scas
ret
aam
mov
dec
sub
fidiv
mov
clc
xlat
cmc
popf
add
ret
aam
call
int3
jmp
out
xchg
aam
test
mov
jmp
dec
mov
popf
hlt
retf
xor
popf
hlt
retf
xor
mov
enter
and
out
nop
aam
inc
retf
xor
mov
leave
nop
aam
jl
idiv
sahf
nop
aam
jge
call
inc
pop
dec
mov
popf
mov
ficom
mov
inc
outs
jge
sub
and
jge
popf
test
xchg
hlt
popf
and
mov
jmp
pop
sbb
cmp
mov
leave
pusha
neg
inc
in
(bad)
jmp
mov
sub
dec
jns
loop
sub
retf
xor
arpl
stos
pop
jne
and
inc
dec
sub
retf
xor
bound
pop
ins
std
xor
arpl
pop
arpl
ret
dec
sub
clc
mov
aas
addr16
sub
movs
aam
cmp
jmp
stos
hlt
popf
or
(bad)
(bad)
loop
mov
enter
add
sub
ja
pop
push
(bad)
fndisi(8087
xchg
dec
stos
pop
jge
xor
popa
std
ja
pop
imul
stos
pop
jge
and
(bad)
int3
ret
addr16
ja
push
je
shr
dec
and
call
mov
pusha
hlt
sti
ds
cmps
mov
loop
in
cmc
popf
or
jnp
ret
dec
pop
je
dec
push
arpl
sub
xchg
mov
es
dec
mov
popf
xchg
int
xchg
xchg
inc
mov
popf
jl
add
cmp
mov
iret
xchg
mov
stc
mov
mov
push
mov
std
jae
arpl
sub
stos
pop
inc
dec
sub
dec
pop
jl
jae
popa
jge
sub
pop
stos
pop
inc
dec
sub
dec
pop
push
jge
sub
dec
ins
mov
xchg
aam
je
push
(bad)
std
xor
arpl
push
and
clc
mov
aam
mov
cli
(bad)
mov
test
stos
fistp
cmp
fdivr
mov
popf
mov
mov
pusha
mov
mov
out
cmps
hlt
popf
add
jae
retf
xor
popf
jge
sub
lahf
aam
or
imul
iret
scas
xchg
xchg
mov
arpl
scas
xchg
xchg
mov
or
xchg
nop
and
and
push
mov
popf
and
jo
mov
mov
mov
call
shr
dec
sub
stos
cmps
push
or
imul
mov
xor
dec
cmps
pop
test
push
out
or
sub
jmp
pop
mov
push
test
sub
jp
sub
jmp
pop
sbb
daa
and
or
(bad)
pop
dec
sub
cmp
sub
retf
sbb
pop
cmp
pop
jnp
outs
popf
jns
and
cmp
cmp
cdq
test
pop
test
outs
stos
hlt
or
movs
cmp
sub
dec
and
sub
and
repnz
sub
or
arpl
push
bound
inc
jmp
jl
mov
and
bound
test
cmp
mov
ins
retf
or
jmp
int3
leave
gs
mov
push
ja
shl
inc
test
cmp
mov
ins
retf
or
xchg
ds
jmp
jno
retf
gs
mov
pop
jns
outs
popf
jle
popf
and
bound
push
loop
dec
sub
jns
outs
popf
jns
outs
call
shr
dec
push
xchg
jge
sub
ja
push
loop
mov
loop
mov
and
call
popf
or
call
mov
ja
cmp
mov
outs
xchg
jl
push
xchg
jp
iret
jmp
jl
mov
popa
inc
int3
sub
cmp
loop
mov
ins
retf
or
cmp
sub
into
xor
cmp
fldenv
pop
dec
bound
enter
mov
bound
inc
bound
(bad)
(bad)
mov
imul
dec
sub
test
in
mov
pop
pop
and
sub
cmp
bound
dec
push
(bad)
hlt
xchg
fadd
mov
mov
cwde
imul
inc
jge
ret
sbb
sub
lock
dec
rcl
sahf
dec
sub
data16
jge
int3
jmp
mov
popf
add
out
or
popf
or
out
scas
aam
sub
dec
cmps
out
scas
aam
sub
dec
test
ins
jle
jmp
shr
mov
sbb
adc
stos
xchg
retf
dec
sub
dec
inc
bound
cmps
fidiv
jge
je
mov
mov
xchg
(bad)
push
sub
jge
sub
std
dec
sub
dec
inc
bound
dec
inc
bound
stos
popf
or
adc
dec
sub
mov
push
test
jno
pop
test
loope
dec
sbb
mov
in
or
ret
cmp
sub
mov
and
sub
or
ficom
mov
or
push
outs
jge
and
cmp
daa
lea
daa
lea
pop
sahf
sub
jge
dec
push
sub
or
mov
les
and
mov
xchg
inc
js
sub
stos
or
or
movs
pop
dec
inc
loop
dec
sub
jns
sub
jge
sub
(bad)
aam
jne
out
xor
mov
pop
jns
jmp
push
not
jge
fadd
mov
and
jp
jge
outs
outs
hlt
mov
pop
jl
pop
fwait
hlt
mov
lock
xor
mov
outs
sub
inc
(bad)
lock
xor
dec
inc
xchg
popf
or
jp
jge
ret
(bad)
sub
mov
mov
fidivr
bound
adc
mov
pop
jge
ret
jbe
(bad)
rcl
(bad)
in
or
stos
bound
inc
popw
dec
inc
bound
mov
push
imul
xor
pop
hlt
mov
test
or
jmp
and
sub
and
jnp
or
pop
jno
ret
out
dec
sub
jle
and
mov
movs
and
loop
sub
into
xor
sbb
inc
in
daa
add
outs
sahf
ror
dec
xchg
mov
aam
jno
mov
add
jmp
sahf
cs
outs
adc
cmps
sahf
xor
inc
pop
popf
or
sub
mov
push
cmps
movs
cmp
dec
xor
and
mov
cmps
jne
adc
jno
ret
push
and
jns
das
pop
push
or
pop
jno
fucomi
cmp
mov
dec
popf
or
sub
mov
cmp
sub
into
xor
sbb
inc
mov
sahf
xchg
or
ret
sub
inc
scas
imul
push
sbb
jns
jnp
dec
scas
imul
int3
out
push
jbe
adc
ret
jb
dec
sub
test
jmp
jmpw
mov
cmp
xchg
aaa
hlt
stos
test
pop
sbb
xor
outs
(bad)
repz
movs
(bad)
call
arpl
dec
mov
dec
mov
dec
xchg
push
nop
lock
fistp
dec
xchg
popa
jge
sub
movs
(bad)
call
pop
jnp
in
daa
lahf
push
sub
cmp
aad
dec
mov
fcmove
and
bound
(bad)
call
ins
retf
or
xchg
dec
stos
pop
or
(bad)
and
pusha
cld
mov
stos
jb
dec
pop
test
retf
jmp
out
jge
and
cmp
(bad)
mov
iret
push
pushf
jg
das
loope
cmps
sub
adc
sub
stos
(bad)
repz
inc
and
jge
jle
jb
cmp
es
jl
sub
sbb
ins
ror
data16
xchg
daa
xchg
inc
pushf
das
lahf
mov
sub
cdq
les
jb
imul
ins
retf
dec
lods
inc
pushf
aaa
lahf
inc
test
mov
and
outs
jb
imul
and
sbb
outs
xchg
or
cmp
sbb
fist
repnz
sbb
push
mov
repnz
(bad)
mov
dec
in
fistp
repnz
fild
in
fistp
repnz
fild
in
fistp
repnz
fist
mov
or
xchg
(bad)
int
sub
(bad)
lahf
retf
fist
repnz
(bad)
mov
jle
fistp
repnz
fild
repnz
xchg
mov
mov
fistp
repnz
fisttp
pop
(bad)
popf
mov
fistp
bound
mov
test
(bad)
in
bound
jmp
in
les
in
fistp
repnz
jle
repnz
fistp
repnz
jbe
repnz
fistp
repnz
int3
jmp
in
fistp
repnz
cmp
repnz
fistp
repnz
sub
shr
bound
sub
movntss
mov
(bad)
int
sub
outs
cli
sbb
repnz
fist
repnz
dec
mov
repnz
fistp
repnz
fistp
in
fistp
and
mov
repnz
mov
mov
fistp
repnz
fbld
repnz
mov
repnz
fist
repnz
jg
repnz
fild
call
mov
(bad)
int
sub
(bad)
mov
repnz
fistp
in
fistp
and
mov
repnz
mov
mov
fistp
repnz
fbld
repnz
mov
repnz
fist
repnz
jg
repnz
fild
call
mov
repnz
fistp
jae
mov
mov
xchg
jnp
xor
les
test
add
or
movs
cmp
mov
mov
or
xchg
sbb
outs
sahf
dec
mov
outs
mov
cmp
in
daa
lea
mov
lock
jge
dec
sahf
hlt
or
jmp
mov
mov
adc
aam
and
jmp
pop
xchg
fs
gs
loop
dec
sub
cmp
sub
jp
sub
stc
jle
hlt
mov
mov
mov
outs
mov
mov
jle
test
pop
add
cmp
movs
dec
(bad)
jb
cmp
add
dec
mov
cmp
dec
xor
bound
pop
mov
ins
retf
pop
and
xor
mov
push
mov
inc
inc
bnd
sub
cmp
sub
stc
outs
cdq
sub
pop
cmps
daa
pop
aaa
xchg
xor
and
jnp
movs
dec
(bad)
xchg
std
bound
out
inc
lds
or
sahf
hlt
or
jmp
mov
movs
jnp
aam
lea
daa
jno
adc
mov
cmp
xchg
aaa
hlt
stos
test
dec
sbb
xor
or
fist
(bad)
in
mov
add
(bad)
mov
mov
mov
push
add
mov
jb
fistp
dec
sub
jp
jmp
dec
dec
sub
or
xor
mov
popf
dec
jmp
stc
push
sub
inc
popf
pop
xchg
mov
pusha
neg
into
ror
fistp
dec
mov
mov
inc
popf
pop
xchg
mov
pusha
cmp
ror
cmps
ror
bound
daa
or
repz
js
xchg
and
outs
mov
dec
test
gs
jecxz
aas
dec
mov
jecxz
jb
bound
repz
cmp
imul
dec
mov
js
xchg
and
outs
sahf
setbe
jmp
mov
jae
xchg
sub
test
ds
ins
int3
outs
call
sub
repnz
cmps
sub
dec
mov
das
jge
mov
popf
hlt
lea
je
mov
bound
(bad)
outs
mov
jge
push
mov
mov
lods
cmp
(bad)
push
mov
xchg
not
bound
imul
repnz
repnz
dec
test
jno
jecxz
aas
dec
mov
jecxz
fist
bound
repz
cmp
imul
dec
mov
js
xchg
and
outs
xchg
setbe
jmp
mov
sub
jle
fucomi
push
jle
loope
mov
imul
dec
adc
lea
push
cmps
ror
mov
les
neg
inc
sti
fistp
dec
mov
popa
inc
mov
aaa
xchg
sahf
leave
jmp
aas
dec
mov
(bad)
hlt
inc
adc
add
inc
mov
fist
hlt
mov
movs
dec
cmps
ror
popf
or
push
dec
inc
bound
dec
inc
bound
dec
inc
bound
imul
dec
sub
cmp
ret
xor
cmp
mov
push
sub
mov
sti
jmp
mov
xchg
sbb
call
je
es
aaa
hlt
stos
stos
mov
sub
sbb
das
mov
test
retf
xor
(bad)
aas
dec
and
nop
imul
mov
(bad)
popf
add
mov
pushf
data16
mov
cwde
jp
sar
test
loope
push
mov
pushf
xor
bound
popa
ret
cmps
ss
sub
xor
fsubr
(bad)
jmp
mov
dec
mov
sti
cmp
lea
pop
xor
arpl
or
pop
jne
loopne
clc
dec
aam
or
ss
sub
mov
inc
in
out
mov
popf
dec
mov
push
lock
xor
bound
ret
xor
bound
fisttp
(bad)
in
or
sub
jg
sub
jge
sub
(bad)
out
mov
popf
sub
dec
mov
popf
hlt
mov
aam
jne
mov
mov
sub
dec
cmps
out
mov
popf
sub
dec
inc
call
(bad)
popf
and
xlat
mov
ins
bound
cs
leave
or
hlt
and
scas
popf
xor
bound
in
mov
dec
sub
clc
mov
popf
sbb
mov
clc
mov
popf
sbb
bound
stos
mov
sub
dec
pop
(bad)
aas
dec
inc
mov
mov
imul
mov
or
sub
xchg
push
sub
sbb
push
mov
nop
imul
cmps
and
dec
test
sub
jne
mov
jle
cwde
push
jnp
sub
mov
sub
push
mov
movs
or
aas
dec
stos
movs
jno
sub
sub
(bad)
lock
xor
or
xor
dec
inc
pop
jge
sub
jge
sub
jge
pop
outs
cmp
mov
push
sub
mov
stos
pop
jl
pop
fwait
hlt
or
jmp
dec
shr
mov
and
pop
jb
cmp
mov
push
sub
cmp
mov
push
sub
adc
mov
lock
push
mov
movs
cmp
mov
or
bound
dec
jnp
or
pop
ins
mov
outs
cmp
mov
(bad)
dec
jle
cwde
sbb
test
jmp
and
outs
jbe
mov
jb
cmp
popf
or
fs
sub
mov
sbb
fstp
mov
ins
jge
cmps
daa
test
cmps
daa
sbb
sub
and
sub
jne
mov
jge
and
xchg
js
pop
gs
jbe
cmp
or
pop
jb
cmp
mov
pop
sub
(bad)
pop
outs
cmp
mov
pop
sub
pop
jae
mov
aam
and
loop
sub
into
loope
pop
jge
idiv
aas
jmp
cmp
xchg
cmp
push
bound
cs
dec
fadd
mov
or
xor
and
aam
jne
adc
jge
and
xchg
jae
daa
gs
jge
jge
sub
and
aam
and
xchg
dec
ds
sub
hlt
mov
pop
and
je
mov
jle
cwde
push
jnp
sub
mov
cpuid
call
xlat
mov
dec
sub
pop
cmps
data16
jnp
call
ret
sbb
shl
(bad)
in
push
mov
dec
inc
movs
jge
sub
jge
sub
jge
dec
mov
cmp
rol
pop
dec
pop
jbe
mov
call
imul
(bad)
outs
sahf
and
loop
les
push
push
mov
jmp
cs
and
jnp
mov
pop
js
sub
pop
push
adc
movs
cmp
mov
dec
mov
nop
rcl
adc
call
repz
or
(bad)
dec
repz
jg
stos
daa
xor
shl
mov
iret
pop
pop
jge
out
imul
sub
pop
(bad)
shr
std
jae
push
ins
mov
(bad)
lds
dec
sahf
hlt
or
jmp
mov
mov
lea
xor
(bad)
in
jecxz
mov
jne
dec
and
jl
jnp
or
cmps
aas
dec
sub
cmp
mov
arpl
movs
sub
cmp
je
es
aaa
hlt
stos
test
ins
sbb
xor
movs
and
push
hlt
mov
js
out
or
(bad)
hlt
or
jmp
sahf
int3
loope
inc
jl
cmp
dec
mov
adc
dec
sub
movs
cmp
loope
and
jns
test
or
das
push
cmp
rsm
dec
movs
cmp
and
add
mov
bound
fcomp
sbb
mov
bound
mov
movs
sub
sub
dec
xor
adc
sbb
fidivr
dec
sub
mov
mov
aad
mov
daa
test
je
es
aaa
hlt
stos
xchg
cs
sub
sbb
ss
inc
cld
mov
test
mov
mov
hlt
mov
cmps
out
mov
popf
sub
iret
fistp
hlt
mov
mov
xchg
jb
bound
xchg
call
js
call
inc
jbe
sub
ds
sub
clc
xchg
aam
xor
bound
fadd
test
call
movs
mov
popf
push
repnz
xor
lahf
add
pop
jge
sub
and
sub
retf
xor
xchg
fwait
(bad)
scas
mov
mov
jmp
mov
push
dec
sub
cmps
(bad)
and
mov
movs
test
jmp
adc
add
loope
mov
loop
dec
sub
test
in
or
mov
arpl
mov
loope
inc
inc
aaa
mov
inc
ret
cmps
cmp
loope
inc
inc
sub
or
aam
and
cmps
jne
inc
daa
jge
xchg
push
mov
cmp
lea
xlat
popf
xor
loope
inc
ret
sub
dec
sub
ja
sub
mov
push
inc
xchg
jns
bound
dec
bound
mov
test
aad
sub
adc
mov
sub
mov
fisub
sub
test
(bad)
popf
hlt
mov
data16
(bad)
sub
mov
push
jno
mov
sahf
sahf
xor
(bad)
dec
imul
mov
jb
dec
sub
mov
dec
sub
ja
sub
mov
push
jno
mov
sahf
sahf
xor
(bad)
dec
int
clc
mov
lahf
add
mov
or
(bad)
les
bound
fcomp
pop
cmps
mov
add
sub
mov
aam
sbb
pop
mov
leave
outs
bound
out
jb
cmp
or
imul
mov
or
bound
dec
test
imul
sub
mov
cmp
lea
xlat
popf
xor
loope
inc
inc
push
enter
and
cmps
jne
fisttp
(bad)
in
mov
sub
inc
sub
(bad)
fcomp
outs
daa
fild
xor
out
push
dec
hlt
and
sahf
sahf
xor
(bad)
dec
sub
inc
sub
(bad)
fcomp
pop
cmps
jmp
dec
sub
mov
aam
sbb
pop
mov
icebp
push
jb
mov
ret
cli
ds
sub
xchg
dec
sub
mov
cmc
and
xchg
mov
xchg
fldcw
jge
scas
mov
cmp
jmp
sbb
mov
or
push
inc
xchg
adc
and
dec
mov
test
shl
ins
ret
sub
dec
sub
push
dec
sub
mov
xlat
popf
xor
bound
cmps
outs
and
test
ins
cmps
push
and
xchg
push
mov
cmp
lea
xlat
popf
xor
loope
inc
stos
xchg
sub
sub
mov
bound
and
dec
mov
test
shl
pop
inc
test
enter
and
cmps
jne
(bad)
and
xchg
push
mov
cmp
lea
xlat
popf
xor
loope
inc
inc
cmc
mov
pop
mov
popf
sub
dec
jnp
into
or
aas
mov
or
sub
(bad)
fcomp
outs
daa
loopne
aas
dec
aam
xor
out
push
out
ja
jge
int
clc
(bad)
aam
add
mov
or
sub
(bad)
fcomp
outs
daa
fild
xor
out
push
jne
bound
and
dec
mov
test
shl
ins
ret
dec
aas
dec
sub
push
dec
sub
mov
xlat
popf
xor
bound
cmps
push
and
test
ins
int3
push
inc
jge
scas
pop
jl
sub
fdiv
aam
or
jl
sub
dec
stos
mov
add
(bad)
(bad)
jmp
or
scas
fiadd
not
lahf
xor
mov
adc
les
popa
shl
lahf
add
inc
(bad)
rcr
addr16
sub
mov
jns
test
xor
dec
xchg
sub
lahf
mov
popa
hlt
ficomp
mov
mov
lock
mov
or
nop
imul
mov
mov
push
sub
mov
jmp
data16
mov
mov
jecxz
not
lahf
or
bound
test
popf
enter
xor
bound
mov
pushf
sbb
push
mov
add
jge
out
jp
popa
push
jge
and
dec
mov
test
shl
pop
inc
aas
mov
mov
pushf
and
cmps
jne
fisttp
(bad)
in
mov
sub
inc
sub
(bad)
fcomp
outs
daa
loopne
aas
dec
aam
xor
out
push
xchg
imul
and
dec
mov
test
shl
pop
inc
xchg
popf
or
aam
and
cmps
jne
scas
fiadd
dec
sub
add
call
aam
add
xor
lahf
add
arpl
dec
sub
or
jmp
mov
pushf
and
fistp
aam
jge
scas
sub
jmp
data16
mov
dec
jecxz
jge
scas
call
sub
les
jmp
mov
pop
jbe
push
cmc
and
scas
xchg
xor
bound
out
outs
lock
xor
pop
jl
pop
fwait
hlt
mov
shl
lahf
or
ins
inc
dec
sub
clc
dec
sub
clc
icebp
aam
add
mov
sub
dec
cmps
out
mov
popf
sub
mov
cmps
jns
scas
xchg
xor
pushf
xor
popf
xor
popf
sub
dec
jnp
cmps
jo
(bad)
dec
sub
test
(bad)
popf
test
popf
xor
bound
and
dec
mov
test
shl
pop
inc
aas
mov
mov
pushf
and
cmps
jne
stos
pop
jge
xchg
push
mov
cmp
mov
imul
mov
ret
sub
mov
dec
sub
ja
sub
mov
push
jno
mov
sahf
sahf
xor
(bad)
dec
aam
and
xchg
inc
adc
bound
mov
out
dec
aam
sub
mov
xor
int3
out
outs
hlt
retf
xor
pushf
xor
popf
enter
and
cmps
jne
ret
dec
xchg
push
mov
cmp
and
xlat
popf
xor
loope
inc
ret
cmps
inc
dec
sub
ja
sub
mov
push
jno
test
and
sahf
sahf
xor
(bad)
dec
fucomi
mov
dec
xchg
push
mov
cmp
lea
xlat
popf
xor
loope
inc
inc
push
mov
mov
pushf
and
cmps
jne
dec
pop
jge
xchg
push
mov
or
les
bound
fcomp
xor
and
ret
cs
dec
sub
mov
dec
sub
ja
sub
mov
push
jno
adc
and
sahf
sahf
xor
(bad)
dec
dec
bound
sub
xchg
push
mov
cmp
mov
imul
mov
inc
inc
dec
sub
mov
dec
sub
ja
sub
mov
push
jno
mov
sahf
sahf
xor
(bad)
dec
sub
inc
sub
(bad)
fcomp
pop
cmps
mov
dec
xchg
add
sub
mov
aam
sbb
pop
mov
in
push
bound
out
jb
data16
and
sahf
sahf
xor
(bad)
dec
int
clc
repz
add
mov
jb
(bad)
les
bound
fcomp
outs
daa
fild
xor
out
push
push
cmc
and
sahf
sahf
xor
(bad)
dec
sub
inc
sub
(bad)
fcomp
outs
daa
fild
xor
out
push
push
cmc
and
sahf
sahf
xor
(bad)
dec
fucomi
mov
dec
xchg
push
mov
cmp
lea
xlat
popf
xor
loope
inc
cmps
out
mov
popf
sub
mov
xor
pop
ret
scas
inc
dec
sub
mov
dec
sub
ja
sub
mov
push
jno
mov
sahf
sahf
xor
(bad)
dec
fucomi
mov
dec
aam
xor
out
push
and
bound
and
dec
mov
test
shl
pop
inc
xchg
popf
or
aam
and
cmps
jne
bound
dec
xchg
mov
sub
mov
cmp
dec
jl
shl
mov
jno
bound
out
jb
push
pop
bound
and
dec
mov
test
shl
pop
inc
xchg
popf
or
aam
and
cmps
jne
cmc
mov
xor
out
push
mov
ret
add
(bad)
sub
mov
push
jno
mov
sahf
sahf
xor
(bad)
dec
sub
inc
sub
(bad)
fcomp
pop
cmps
sbb
xchg
add
sub
mov
aam
sbb
pop
mov
jmp
out
jb
lahf
mul
jge
sahf
sahf
xor
(bad)
dec
sub
jg
sub
jge
sub
paddq
jne
sbb
dec
mov
popf
cld
mov
jge
aam
xor
sub
sar
popf
enter
xor
mov
ja
bound
mov
dec
dec
dec
sub
and
xchg
mov
(bad)
popf
hlt
mov
ret
(bad)
test
popf
xor
aaa
hlt
stos
stos
mov
sub
lock
add
mov
movs
mov
je
movs
shl
bound
outs
popf
sub
dec
cmps
out
mov
popf
sub
dec
inc
bound
ret
xor
(bad)
std
cmps
retf
xchg
xor
popf
jl
outs
popf
inc
dec
pop
fcom
dec
inc
pop
mov
xchg
imul
cmps
xchg
xchg
xor
or
movs
mul
jge
sub
iret
ret
adc
outs
mov
movs
and
stos
mov
dec
sub
sbb
pop
add
inc
cmp
mov
(bad)
popf
add
loope
rcl
popf
or
jne
adc
fucomi
loope
dec
mov
popf
test
jmp
jge
mov
popf
hlt
mov
call
and
mov
cmps
pop
push
jge
mov
pusha
js
mov
popf
sub
mov
popf
cmp
lahf
xor
jmp
add
sbb
lock
arpl
(bad)
mov
jmp
shr
mov
dec
sub
clc
cmp
popf
xor
mov
sub
retf
xor
popf
xchg
dec
sbb
jge
jle
test
lahf
xor
out
or
sbb
arpl
sbb
arpl
(bad)
mov
or
imul
(bad)
scas
test
sub
clc
jmp
popf
sbb
push
inc
dec
sub
test
jmp
cmps
stos
push
jge
jnp
push
jbe
bound
ret
xor
and
lahf
mov
jge
stos
mov
mov
imul
push
bound
jmp
pop
dec
sub
pop
aad
and
arpl
cmps
out
mov
popf
sub
mov
xor
mov
test
(bad)
popf
xor
popf
enter
xor
popf
enter
sbb
out
mov
popf
sub
mov
cmps
pop
(bad)
scas
inc
cmp
xor
and
jmp
jg
sub
out
mul
jge
scas
sahf
xor
bound
rcl
(bad)
in
out
clc
sti
(bad)
popf
sbb
out
mov
popf
sub
dec
ret
mov
mov
jmp
retf
(bad)
popf
or
arpl
dec
sub
cmp
aad
sbb
pop
inc
dec
sub
mov
mov
popf
cmp
(bad)
lds
jle
jge
int3
jmp
and
popf
add
movs
clc
stos
aad
or
jge
in
out
mov
popf
jge
test
stc
mov
popf
jge
aaa
add
retf
xor
or
cmps
out
mov
popf
sub
mov
out
clc
jmp
popf
sbb
out
mov
popf
sub
and
sub
jge
scas
sahf
xor
jbe
dec
sub
inc
scas
mov
sub
and
(bad)
in
sub
cli
mov
jo
or
imul
mov
mov
mov
movs
clc
and
popf
or
hlt
mov
call
aam
sub
dec
ret
and
sub
mov
daa
ret
popa
jge
ret
jmp
(bad)
popf
or
push
mov
popf
inc
dec
pop
stos
je
pop
or
cmps
inc
push
jge
test
in
mov
popf
jge
and
jge
sub
sbb
bound
cmp
jge
fadd
xor
bound
scas
sahf
xor
push
jge
inc
arpl
ret
xor
popf
or
outs
inc
mov
bound
push
loope
rcl
popf
or
jl
mov
(bad)
loope
aam
jge
les
jp
mov
xor
lahf
xor
(bad)
cld
mov
jge
cli
jl
bound
dec
aam
fnstenv
sbb
mov
mov
sub
retf
xor
call
jmp
xchg
mov
mov
xchg
call
in
push
test
in
popf
or
mov
sub
mov
mov
outs
xchg
xchg
sbb
(bad)
jmp
popf
or
scas
dec
dec
sub
mov
sbb
mov
mov
into
(bad)
sti
dec
dec
sub
or
ins
retf
arpl
dec
sti
ins
retf
out
cmp
xor
dec
ret
mov
dec
sub
mov
push
sub
(bad)
mov
jmp
jle
jmp
and
jnp
lea
jnp
scas
jp
(bad)
dec
mov
xor
mov
outs
jb
outs
pushf
lock
and
popf
or
aad
mov
es
and
sub
jnp
pop
jle
(bad)
hlt
mov
call
aad
cmp
ins
retf
arpl
ret
jle
ret
dec
dec
sub
cmp
inc
out
movntps
jge
sub
hlt
mov
movs
pop
mov
mov
jge
(bad)
lock
xor
cmps
bound
dec
jge
push
jle
(bad)
test
cmp
sub
into
fidiv
aad
bound
jge
not
and
nop
inc
jae
hlt
mov
call
aam
cmp
mov
cmps
out
scas
aam
sub
mov
xor
cmps
into
dec
jge
mov
out
dec
sub
mov
call
retf
popf
and
cmps
jne
jmp
pop
mov
stos
popf
mov
popf
or
xor
sub
int3
adc
bound
scas
aam
hlt
mov
mov
clc
repz
popf
or
bound
scas
ficomp
retf
xor
bound
jmp
inc
into
fdivr
dec
sub
cmp
add
sub
mov
push
aam
mov
aam
cmp
mov
mov
test
retf
xor
mov
(bad)
push
mov
mov
cwde
div
inc
jge
ret
into
push
dec
sub
sub
mov
inc
imul
xchg
mov
data16
mov
dec
sub
hlt
xchg
test
or
pop
jl
pop
fwait
hlt
mov
hlt
xchg
sub
xor
mov
sub
(bad)
dec
sub
test
aam
test
mov
hlt
mov
inc
sub
or
retf
popf
sbb
dec
dec
sub
mov
dec
sub
ja
sub
mov
push
jbe
mov
scas
bound
dec
pop
bound
out
push
mov
sbb
dec
dec
sub
ja
sub
mov
push
dec
xchg
jmp
dec
bound
mov
test
aam
sub
jae
aas
dec
cmps
fistp
aam
sub
test
ins
cmps
push
push
jge
xchg
push
mov
aas
or
retf
xor
(bad)
dec
imul
mov
mov
jl
(bad)
dec
int
clc
mov
in
mov
sub
inc
sub
(bad)
fcomp
imul
cmps
out
scas
aam
sub
dec
test
jne
cmp
dec
xchg
push
mov
add
les
bound
fcomp
popf
mov
xor
jge
xchg
bound
mov
out
jb
cmp
or
imul
mov
or
(bad)
lock
xor
(bad)
dec
sub
inc
sub
(bad)
fcomp
imul
cmps
out
scas
aam
sub
dec
test
jne
and
jge
aam
sub
dec
test
jne
frstor
dec
sub
les
bound
fcomp
imul
cmps
out
scas
aam
sub
dec
test
jne
sub
jge
aam
sub
dec
test
jne
adc
dec
xchg
push
mov
add
les
bound
fcomp
popf
mov
xor
jge
xchg
bound
push
sbb
int3
out
jb
data16
and
scas
bound
popa
sbb
int3
out
push
movs
sbb
mul
bound
mov
test
shl
pop
inc
xchg
popf
or
retf
popf
sbb
push
dec
sub
mov
mov
mul
jge
scas
bound
mov
out
push
in
bound
and
dec
mov
test
shl
pop
inc
xchg
popf
or
retf
popf
sbb
stos
dec
dec
sub
mov
or
retf
popf
sbb
(bad)
dec
dec
sub
mov
dec
sub
ja
sub
mov
push
jbe
mov
scas
bound
rcr
jge
out
push
mov
aam
jno
scas
bound
popa
mul
jge
scas
bound
or
bound
out
jb
imul
bound
mov
test
shl
pop
inc
xchg
popf
or
retf
popf
sbb
es
dec
sub
mov
or
retf
popf
sbb
push
dec
dec
sub
mov
dec
sub
mov
cmps
not
dec
xchg
push
mov
aas
or
retf
xor
(bad)
dec
sub
cmps
sub
(bad)
fcomp
ins
push
xchg
bound
pop
mul
jge
xchg
bound
jmp
out
jb
leave
sbb
mul
bound
mov
test
shl
pop
inc
xchg
popf
or
retf
popf
sbb
(bad)
dec
dec
sub
mov
or
retf
popf
sbb
repnz
dec
sub
mov
jno
bound
mul
bound
mov
test
shl
pop
inc
xchg
popf
or
retf
popf
sbb
push
dec
dec
sub
mov
dec
sub
ja
sub
mov
push
dec
xchg
inc
sbb
test
dec
mov
test
aam
sub
jae
aas
dec
cmps
fistp
aam
sub
test
ins
daa
sti
mov
jge
aam
sub
dec
test
jne
sub
jge
sub
jge
sub
jge
sub
cmps
mov
out
nop
aam
cld
mov
dec
cmps
out
scas
aam
sub
dec
inc
(bad)
lock
lock
enter
and
xlat
adc
jmp
xchg
inc
mov
out
nop
aam
hlt
mov
xchg
aaa
hlt
stos
stos
mov
dec
sub
sbb
sbb
hlt
mov
popf
jge
fucom
mov
or
les
cmps
or
mov
pusha
jl
mov
fisub
dec
sub
test
out
mov
popf
hlt
mov
xor
sub
xchg
jne
bound
ds
xor
mov
sub
retf
xor
out
mov
popf
sub
dec
inc
data16
sub
clc
sti
(bad)
popf
sbb
int
or
imul
cmps
mov
pop
inc
jmp
stc
repnz
daa
das
arpl
cmps
out
mov
popf
sub
mov
xor
test
test
retf
xor
lahf
xor
popf
sbb
jno
mov
loope
inc
and
jge
inc
ret
sub
clc
mov
popf
sbb
into
push
dec
sub
clc
sti
(bad)
popf
sbb
out
mov
popf
sub
dec
ret
rcr
xlat
(bad)
popf
add
dec
test
in
or
and
aad
sbb
jp
dec
sub
mov
mov
movs
mov
mov
bound
in
out
mov
popf
jl
sub
repnz
xor
out
mov
popf
jl
mov
movs
lock
xor
popf
and
scas
mov
xchg
pushf
xor
or
sub
jge
sub
clc
mov
popf
sbb
bound
inc
jmp
stc
fisubr
bound
sahf
retf
aam
mov
and
bound
int3
jmp
aaa
rcr
enter
and
mov
mov
mov
popf
sbb
into
push
dec
sub
mov
mov
popf
jge
add
bound
scas
sahf
xor
and
push
dec
jge
mov
jns
cmps
sub
cmps
inc
dec
jge
stos
out
mov
popf
jl
scas
sbb
js
jecxz
mov
ins
jl
sub
jge
sub
add
das
arpl
cmps
out
mov
popf
sub
dec
sub
test
jmp
and
imul
mov
mov
cld
aam
dec
sub
retf
out
jge
cmps
out
mov
popf
sub
mov
loope
inc
and
jge
inc
bound
mov
out
mov
popf
sub
dec
cmps
out
mov
popf
sub
mov
mov
stos
xchg
les
bound
mov
es
dec
sub
jbe
imul
pop
inc
imul
int3
out
jbe
(bad)
pop
dec
adc
cmps
ror
dec
mov
popf
(bad)
movs
adc
hlt
mov
xchg
cs
test
aam
dec
scas
inc
jl
xor
cli
mov
mov
mov
loope
inc
mov
out
mov
popf
hlt
mov
xchg
bound
mov
bound
cmps
out
mov
popf
sub
dec
inc
bound
mov
pop
push
dec
sub
test
jmp
mov
mov
sub
retf
xor
data16
mov
xor
sbb
pop
movs
jne
call
in
xor
(bad)
outs
xchg
cmp
mov
sub
sbb
out
sub
xor
movnti
push
dec
sub
mov
push
je
jge
int3
jmp
mov
xor
dec
aam
jno
jg
jl
ret
bound
sub
xchg
sbb
outs
sahf
sub
xor
jge
sub
jge
and
dec
mov
call
call
pop
jge
inc
push
inc
inc
jge
mov
jmp
shr
mov
mov
cwde
imul
jb
dec
ret
jmp
frstor
sbb
sub
xchg
mov
jmp
and
ret
mov
sub
mov
(bad)
in
imul
push
(bad)
lock
xor
bound
sub
jl
aam
sub
mov
cmps
jno
aam
jge
pop
data16
mov
pop
cmp
dec
inc
pusha
sub
mov
cmp
mov
cwde
int3
(bad)
outs
sub
cs
or
xchg
xor
bound
mov
jl
ror
mov
call
jnp
jnp
imul
stc
add
ret
sub
dec
sub
jp
ret
aas
dec
ret
jbe
dec
sub
or
loope
dec
jnp
adc
xchg
lds
bound
out
jp
or
xor
dec
inc
and
popf
dec
arpl
jge
stos
movs
fs
sub
mov
pushf
jb
outs
pushf
(bad)
mov
push
repnz
mov
imul
sub
jg
sub
jge
or
or
sub
in
dec
sub
dec
inc
bound
dec
inc
jb
popa
add
(bad)
in
or
push
cmp
aas
dec
ret
out
push
dec
sub
mov
inc
bound
sub
jg
push
xchg
shr
xchg
cmp
bound
sub
jg
push
std
out
imul
and
aam
push
shr
xchg
sbb
bound
sub
jg
push
popa
fisubr
xchg
or
bound
rcl
(bad)
in
or
push
cmp
cmp
ret
push
push
dec
sub
jl
inc
push
cmp
cmp
ret
inc
push
dec
sub
jl
inc
push
cmp
aas
dec
ret
jb
dec
sub
jl
inc
push
cmp
aas
dec
ret
bound
sub
test
jmp
and
aam
dec
(bad)
push
xchg
movs
or
jge
sub
jg
push
(bad)
shr
xchg
xchg
or
jge
sub
jg
push
jmp
test
jge
sub
jg
push
in
imul
(bad)
shl
(bad)
in
cmp
cwde
push
jl
fwait
push
test
mov
test
or
jmp
and
mov
jge
push
inc
jge
mov
movntps
mov
mov
push
xchg
shr
xchg
jge
bound
xlat
popf
dec
iret
mov
jge
xor
dec
mov
push
sub
mov
mov
push
std
out
imul
(bad)
rcl
(bad)
in
or
push
sub
fisubr
and
cmc
in
dec
inc
sahf
cmp
cmp
ret
xchg
sub
xor
sub
dec
mov
in
dec
inc
sahf
cmp
cmp
dec
sub
xor
sub
aaa
mov
jge
cmc
in
dec
inc
sahf
cmp
cmp
ret
(bad)
pop
dec
sub
xor
sub
arpl
in
dec
inc
sahf
cmp
cmp
ret
sbb
sub
test
jmp
and
mov
jge
jb
jge
mov
push
sub
mov
mov
push
stc
out
imul
adc
mov
xchg
pop
jge
ret
jmp
sub
mov
mov
mov
popf
hlt
mov
cmps
or
xlat
popf
or
jb
inc
mov
jge
les
jnp
sub
jge
ret
or
sub
cmp
push
bound
ror
(bad)
in
or
push
push
loop
sub
jge
mov
xchg
sub
or
xor
dec
inc
bound
daa
idiv
cmps
or
sub
popa
or
ret
inc
bound
dec
inc
bound
mov
daa
(bad)
int3
ret
push
sub
daa
sub
pop
inc
cmps
cmps
or
imul
dec
sub
jns
push
pop
dec
aam
dec
shr
pop
dec
aam
cmp
push
adc
les
push
or
loope
sub
sub
aas
or
xor
daa
icebp
mov
xchg
cmc
push
bound
dec
ret
inc
bound
dec
inc
bound
dec
inc
addr16
dec
inc
bound
dec
inc
bound
and
and
imul
loope
jge
inc
arpl
and
mov
jge
jle
jge
inc
bound
dec
inc
bound
dec
inc
jb
jns
bound
dec
or
sub
pop
inc
push
cmps
or
imul
dec
sub
add
imul
shr
pop
dec
aam
cmp
push
pop
pop
inc
inc
jg
sub
add
dec
sub
adc
daa
icebp
mov
xchg
pop
push
bound
mov
aas
dec
inc
bound
dec
inc
bound
dec
inc
jb
sahf
sub
daa
mov
dec
inc
dec
adc
daa
in
aas
dec
inc
mov
jge
repnz
jge
mov
push
sub
xchg
jg
bound
sub
jge
sub
jge
cmp
add
icebp
sub
and
sub
adc
daa
icebp
mov
xchg
aad
bound
aas
std
cmp
inc
bound
dec
inc
bound
dec
inc
push
pop
sub
jge
sub
imul
inc
mov
clc
xchg
imul
dec
sub
xchg
shr
adc
and
sub
cmps
add
dec
inc
pop
cmps
or
push
push
xchg
shr
xchg
pop
punpckldq
sub
jge
sub
jge
pop
arpl
inc
push
adc
and
stos
xor
daa
scas
mov
xchg
dec
punpckldq
stos
ret
aas
dec
mov
movs
pop
dec
aam
dec
shr
pop
dec
aam
sbb
arpl
bound
pop
or
dec
sub
loope
bound
sub
pop
inc
mov
clc
xchg
imul
dec
sub
push
shr
xchg
jp
popf
and
and
sub
jge
cmp
inc
daa
int
jge
inc
or
or
sub
adc
daa
icebp
mov
xchg
int
bound
mov
xchg
lea
bound
dec
aam
dec
shr
pop
dec
aam
cmp
push
pop
pop
inc
jecxz
dec
sub
or
adc
daa
sub
pop
inc
xor
xchg
imul
dec
sub
or
imul
shr
pop
dec
aam
cmp
push
pop
pop
inc
add
jge
call
bound
jnp
aas
xchg
imul
and
sub
jg
and
sub
jge
sub
jge
cmp
or
adc
and
sub
adc
daa
icebp
mov
xchg
or
(bad)
cmp
mov
movs
pop
dec
aam
dec
shr
pop
dec
aam
cmp
push
pop
pop
inc
xor
add
mov
dec
inc
bound
jnp
jnp
imul
and
sub
fisttp
popf
dec
jnp
and
sub
jge
xor
push
dec
sub
fisubr
bound
aas
or
stos
xor
daa
sub
jg
sub
fmulp
mov
jge
sub
jge
sub
jge
xor
dec
bound
and
stos
xor
daa
sub
jg
sub
ficom
and
ror
(bad)
in
or
push
push
loop
sub
jge
push
add
or
add
mov
pop
inc
bound
jnp
mov
dec
icebp
and
sub
dec
ret
mov
push
shr
pop
dec
aam
dec
shr
pop
dec
aam
sbb
push
inc
push
adc
and
stos
xor
daa
sub
jg
sub
fisubr
and
sub
jge
sub
jge
cmp
out
sub
out
bound
xor
xor
daa
sar
xchg
sub
bound
mov
aas
dec
ret
or
imul
daa
xchg
(bad)
in
mov
mov
popf
and
loop
sub
into
loope
pop
jge
ret
cmps
adc
les
mov
mov
aam
hlt
mov
cmps
or
fcomp
fiadd
and
ror
(bad)
in
or
push
push
push
sub
lock
xor
cmps
(bad)
jge
dec
stos
lea
aam
dec
shr
pop
dec
jge
cmp
mov
xchg
sub
daa
sub
pop
inc
mov
pushf
xchg
imul
cmps
xchg
inc
jge
mov
fisttp
sub
jge
push
push
loop
sub
jge
inc
pop
test
dec
cmp
inc
jbe
pop
inc
bound
jnp
mov
imul
and
sub
dec
mov
jge
fsub
inc
dec
sub
jge
push
push
loop
sub
jge
push
fisttp
sub
push
dec
sub
or
dec
cmp
inc
xor
pop
inc
imul
or
xchg
lock
sub
fisubr
mov
jge
sub
jg
sub
jge
or
or
sub
ror
pop
dec
inc
bound
inc
inc
jbe
int
bound
in
or
push
cmp
cmp
ret
and
or
push
push
loop
sub
jge
push
add
or
dec
or
aas
or
stos
xor
daa
scas
mov
xchg
cdq
xor
jge
ret
(bad)
cmp
mov
movs
adc
and
sub
jp
(bad)
cmp
ret
repnz
or
xchg
imul
dec
sub
jge
push
jge
dec
stos
pop
in
in
imul
and
sub
jp
(bad)
cmp
ret
bound
mov
sub
jge
arpl
aam
xchg
shr
xchg
or
jge
sub
jge
sub
jge
pop
arpl
inc
push
pop
pop
inc
sbb
daa
idiv
cmps
or
adc
dec
mov
fmul
pop
bound
sub
jge
sub
jge
pop
arpl
inc
pop
pop
pop
inc
int3
jge
sub
jle
stos
xor
daa
scas
mov
xchg
mov
bound
pop
std
cmp
ret
or
jge
push
push
loop
sub
jge
push
fisttp
sub
ins
daa
stos
bound
inc
or
pop
sub
daa
sub
pop
inc
xor
xchg
imul
dec
sub
or
imul
mov
cmp
cmp
inc
bound
dec
inc
jb
sub
jge
sub
mov
dec
sub
daa
imul
jge
push
jl
dec
mov
push
sub
jge
push
push
loop
sub
jge
push
fisttp
sub
ins
daa
(bad)
bound
inc
ret
sub
sbb
sub
pop
inc
jno
or
imul
dec
sub
(bad)
shr
pop
dec
aam
dec
shr
pop
dec
aam
cmp
push
pop
pop
inc
xor
imul
bound
mov
dec
inc
bound
jnp
jnp
imul
and
sub
fisttp
popf
dec
jnp
and
sub
jge
cmp
cdq
dec
sub
test
xor
xor
daa
icebp
mov
xchg
popf
bound
push
ret
aas
dec
inc
bound
dec
inc
bound
dec
inc
jb
mov
bound
aam
jge
inc
jl
dec
sub
daa
jl
aas
dec
inc
mov
jge
mov
jge
mov
fimul
push
push
loop
sub
jge
push
add
or
test
dec
pop
pop
inc
bound
jnp
in
in
imul
daa
sub
dec
ret
add
sub
popa
fisubr
cld
mov
jbe
dec
inc
bound
dec
inc
bound
dec
inc
jp
addr16
and
pop
inc
bound
jnp
mov
dec
icebp
and
sub
dec
ret
inc
pusha
dec
sub
push
shr
pop
dec
aam
dec
shr
pop
dec
aam
sbb
push
inc
push
pop
adc
adc
daa
idiv
cmps
or
sub
mov
or
cmp
inc
bound
dec
inc
bound
dec
inc
jne
aam
bound
imul
inc
jl
dec
sub
sub
dec
inc
cwde
movs
or
sahf
jle
dec
mov
fimul
aam
hlt
mov
call
aam
and
test
imul
push
jbe
sub
jge
stos
bound
inc
popa
pop
dec
inc
popa
adc
mov
push
shl
jge
in
loope
mov
out
dec
sub
dec
jge
not
(bad)
hlt
mov
movs
sub
test
or
bound
outs
xchg
sub
ret
sub
jb
and
sub
iret
ret
add
mov
loope
push
adc
cmp
sahf
adc
daa
jg
aas
dec
aam
jno
pop
push
dec
popf
or
jp
or
imul
das
out
cmp
inc
pop
leave
or
sub
xchg
fisttp
jp
int3
dec
bound
int3
jmp
mov
jo
mov
mov
js
ret
inc
xor
arpl
in
retf
sub
(bad)
imul
mov
mov
push
sub
mov
ret
mov
sub
jb
sub
mov
jbe
std
xor
arpl
pop
inc
(bad)
or
aam
sbb
inc
gs
sub
add
repz
dec
cmps
out
mov
popf
sub
dec
stos
pop
or
mov
scas
bound
mov
lds
popa
dec
sub
add
aas
sar
dec
cmps
out
mov
popf
sub
dec
stos
pop
or
adc
ret
xor
bound
push
popf
jnp
cmp
ss
imul
mov
mov
pop
sub
xor
or
push
int3
or
aam
sbb
imul
sub
lea
aad
add
loop
mov
pop
ins
daa
test
aas
dec
cmps
out
mov
popf
sub
dec
stos
pop
add
adc
ret
xor
bound
push
popf
ja
cmp
mov
retf
xor
(bad)
std
xor
imul
or
aam
sbb
dec
push
sub
lea
jmp
iret
push
popf
jno
cmp
pop
std
imul
mov
mov
sub
xor
outs
or
pop
iret
or
aam
sbb
call
and
sar
dec
cmps
out
mov
popf
sub
dec
inc
bound
dec
inc
and
imul
mov
or
push
xchg
(bad)
iret
popf
and
mov
int3
or
push
xchg
sub
jmp
je
ret
xchg
sub
mov
test
aam
hlt
mov
dec
xor
data16
mov
jmp
sub
arpl
test
jmp
(bad)
fdiv
ret
jl
js
jl
aam
dec
and
jge
ret
sub
sub
jns
jle
cwde
into
(bad)
push
jne
sub
sub
xchg
jl
push
pop
jmp
jle
jmp
not
test
retf
xor
and
scas
(bad)
xor
cmps
call
dec
sub
mov
aam
std
repnz
ins
daa
xchg
aas
dec
cmps
out
mov
ret
dec
stos
fisttp
cmp
or
retf
xor
(bad)
hlt
mov
stos
fisttp
cmp
or
retf
xor
(bad)
std
repnz
ins
daa
sub
aas
dec
cmps
out
mov
mov
fisttp
cmp
or
(bad)
lock
xor
(bad)
cld
mov
stos
fisttp
cmp
or
imul
mov
mov
pop
sub
repnz
ins
daa
sar
dec
cmps
out
mov
push
jge
stos
fisttp
cmp
or
cld
imul
mov
mov
sub
mov
stos
fisttp
cmp
or
cld
imul
mov
mov
sub
repnz
ins
daa
adc
nop
mov
(bad)
jbe
dec
stos
fisttp
cmp
or
(bad)
xchg
xor
(bad)
hlt
mov
retf
xchg
xor
call
ret
sar
dec
cmps
out
mov
xchg
dec
stos
fisttp
cmp
or
imul
mov
mov
pop
sub
repnz
ins
daa
or
aas
dec
cmps
out
mov
push
jbe
dec
inc
adc
or
fcomp
nop
mov
jmp
mov
fcomp
or
rcr
xor
mov
mov
pop
outs
(bad)
bnd
xchg
xor
bound
fist
(bad)
in
jecxz
sub
jge
lock
pop
ret
ret
test
inc
mov
popf
je
and
mov
dec
sub
iret
xchg
sahf
xor
stos
fild
inc
scas
pop
jl
sub
shl
out
dec
sub
retf
xor
popf
sbb
push
movs
or
xlat
popf
sbb
jmp
xchg
ficomp
sub
mov
xchg
call
ret
pop
gs
sub
mov
(bad)
jmp
mov
dec
mov
sti
cmp
mov
mov
popf
add
jg
sub
inc
das
mov
jge
pop
push
adc
daa
add
xor
stos
mov
inc
sub
fisttp
mov
xor
test
movs
bound
jge
sub
retf
xor
(bad)
hlt
mov
call
lock
xor
(bad)
lock
xor
bound
ret
test
cmp
jge
out
jbe
retf
xor
(bad)
lock
xor
out
mov
popf
sub
dec
cmps
out
mov
popf
sub
dec
test
ins
and
rcr
imul
mov
xor
test
jno
jmp
clc
sub
ret
xor
sub
(bad)
scas
call
sub
test
aam
hlt
mov
popf
ja
lods
push
jl
sub
and
ret
aas
dec
inc
xchg
mov
popf
sbb
call
inc
in
iret
or
aad
sbb
dec
outs
dec
sub
clc
mov
popf
sbb
dec
imul
popf
and
or
xor
clc
xchg
fcomp
xor
fcomp
mov
stos
movs
enter
cmp
call
aam
sub
dec
cmps
out
mov
popf
sub
dec
test
ins
ret
test
cmp
(bad)
scas
mov
mov
out
shl
shr
sub
rcr
gs
sbb
xchg
xchg
cmp
(bad)
scas
xchg
test
sub
test
aam
hlt
mov
popf
sub
mov
mov
pop
sub
retf
xor
(bad)
lock
pushf
xor
popf
add
gs
ret
sub
out
clc
mov
popf
sbb
bound
mov
fmul
movntps
jge
sub
sub
dec
cmps
out
mov
popf
sub
mov
popf
xchg
out
out
or
outs
hlt
mov
mov
xor
popf
xchg
sbb
in
add
dec
sub
cmp
gs
ret
mov
cmp
jns
jle
cwde
test
ins
dec
sub
sub
nop
push
jns
push
jecxz
dec
ins
bound
mov
bound
cmps
ds
dec
mov
popf
je
pop
jbe
cmps
outs
jae
dec
inc
arpl
push
mov
mov
dec
shr
mov
dec
mov
xchg
xor
and
jbe
jge
inc
popf
jge
sub
in
out
imul
cmps
sbb
dec
jnp
pop
sub
xchg
sbb
jl
sub
clc
inc
popf
sbb
pop
jne
loop
jge
inc
arpl
ret
xchg
mov
xor
int3
out
jb
mov
bound
scas
jl
dec
sub
js
lahf
and
cli
inc
or
imul
dec
stos
mov
xchg
sar
bound
clc
das
pop
pop
jp
mov
dec
jmp
push
mov
jmp
(bad)
mov
movs
clc
clc
(bad)
popf
or
xchg
and
bound
popf
(bad)
mov
data16
mov
cwde
jp
sar
test
loope
mov
lds
clc
(bad)
popf
or
retf
popf
inc
inc
pop
mov
jge
in
out
mov
or
dec
mov
pop
jae
scas
iret
nop
mov
push
mov
mov
out
clc
call
inc
repnz
imul
mov
mov
sub
dec
cmps
out
mov
scas
rcl
add
scas
rcl
out
popf
or
sti
outs
dec
sub
clc
call
ret
out
mov
loope
push
inc
(bad)
lock
xor
(bad)
hlt
xchg
sub
xchg
gs
jge
xchg
mov
fmul
imul
cmps
mov
jge
mov
mov
xor
(bad)
les
bound
dec
(bad)
adc
daa
mov
movs
movs
or
imul
ret
xchg
mov
out
dec
or
and
bound
fadd
daa
cmp
or
imul
cmps
push
jno
dec
mov
mov
xor
(bad)
les
jge
dec
(bad)
adc
daa
mov
movs
movs
or
push
xchg
inc
cmp
int3
out
and
repnz
pop
cdq
imul
mov
repz
and
das
or
sub
jge
sub
adc
cmps
cmps
ins
jge
mov
or
sub
xchg
in
and
jge
outs
fiadd
or
lea
inc
sub
ret
xor
pop
jl
pop
fwait
pop
dec
cmps
pop
lds
jnp
sar
popf
sbb
pop
leave
cmps
cli
ins
jge
inc
(bad)
lock
xchg
popf
or
ret
fidiv
sub
jge
cmps
daa
lds
cmps
out
mov
inc
jae
dec
cmps
out
enter
inc
sub
mov
(bad)
lock
xlat
xchg
mov
xor
add
bound
dec
cmps
daa
lds
inc
pusha
adc
mov
(bad)
xchg
and
out
or
hlt
retf
xor
popf
hlt
mov
pop
leave
cmps
fisubr
dec
cmps
addr16
xchg
imul
dec
repz
out
pop
std
cmp
mov
xchg
add
sub
cmp
sub
jge
call
(bad)
repz
movs
(bad)
call
bound
dec
ret
retf
sub
cmp
sub
and
sub
or
(bad)
jnp
bound
mov
fwait
pop
or
movs
cmp
in
daa
mov
sub
(bad)
repz
repz
push
inc
sub
dec
aam
dec
shr
pop
dec
inc
bound
dec
inc
bound
dec
inc
bound
daa
retf
dec
inc
and
into
ins
jge
mov
push
sub
mov
daa
mov
bound
dec
ret
jle
dec
sub
jge
xor
xor
outs
jge
push
bound
stos
adc
mov
xchg
jno
sub
add
sub
dec
mov
popf
cld
mov
jge
ret
(bad)
jno
sub
jl
aam
shl
xchg
dec
mov
mov
xor
popf
sbb
push
leave
or
imul
daa
sub
iret
ret
in
jmp
aam
mov
dec
test
adc
imul
or
sub
cld
mov
cmps
out
mov
sub
jge
in
cmp
dec
ret
mov
sub
xchg
sub
scas
retf
aam
pop
dec
inc
bound
and
loop
jge
jnp
ds
sub
dec
inc
xchg
jl
sub
jl
push
(bad)
dec
inc
sub
push
cmps
daa
cdq
pop
ret
div
sub
movs
data16
ret
sub
dec
inc
bound
dec
inc
(bad)
lock
xor
inc
jmp
test
jne
mov
cmp
(bad)
into
jecxz
jae
bound
jge
ret
mov
div
jge
fadd
mov
mov
ins
stc
fisubr
bound
and
out
dec
sub
shl
bound
cmp
dec
and
sbb
bound
sub
cmp
pop
ins
dec
sub
ret
push
push
dec
push
pop
jl
sub
iret
sub
cmps
inc
push
dec
test
adc
inc
scas
mov
dec
sub
mov
(bad)
aas
dec
ret
jge
mov
jmp
cmps
(bad)
popf
add
arpl
xchg
imul
mov
popa
cdq
mov
loope
pop
mov
popf
lock
xor
popf
and
mov
jge
cmps
out
mov
popf
sub
push
sub
je
pop
or
xor
popf
(bad)
cmps
das
jmp
and
mov
pop
lods
cmp
clc
scas
(bad)
popf
and
mov
loope
dec
mov
popf
push
(bad)
lahf
xor
arpl
retf
xor
popf
sub
mov
dec
clc
fwait
(bad)
popf
sbb
bound
dec
aam
cmp
push
xchg
xor
bound
ror
(bad)
in
loope
sub
out
dec
sub
sub
(bad)
aas
dec
mov
movs
(bad)
push
(bad)
aas
dec
sub
inc
aas
lahf
and
pop
outs
cmp
aas
dec
ret
adc
pop
(bad)
aas
dec
sub
push
sub
jge
push
or
or
aam
and
arpl
dec
mov
movs
fmul
and
outs
push
retf
jge
inc
bound
cmps
add
dec
mov
push
sub
inc
pop
push
cmp
mov
mov
test
retf
xor
bound
outs
jbe
retf
xor
bound
mov
es
dec
pop
ret
aas
dec
pop
pop
inc
dec
sbb
cmp
pop
push
inc
dec
(bad)
cmp
pop
dec
inc
dec
mov
inc
inc
dec
push
ret
aas
dec
pop
jle
dec
mov
aas
dec
pop
jbe
dec
daa
std
cmp
pop
outs
inc
dec
aas
std
cmp
and
xlat
dec
sub
dec
aam
ins
cmps
sahf
outs
jge
mov
popf
inc
dec
push
ret
aas
dec
pop
jb
dec
mov
aas
dec
pop
push
dec
pop
sti
cmp
pop
outs
adc
mov
jb
lds
bound
aam
or
ins
cmps
pop
outs
jge
stos
movs
movs
aaa
sub
jmp
fcom
cmps
out
mov
popf
sub
dec
mov
popf
xchg
jb
bound
rcl
(bad)
in
or
retf
xor
and
out
jge
stos
fild
cmp
or
sub
cs
imul
dec
sub
jge
into
push
js
sub
clc
mov
popf
add
xchg
xor
popf
or
or
inc
scas
clc
jge
sub
or
lock
xor
and
inc
push
xor
and
jae
bound
mov
call
jne
aas
dec
cmps
inc
cmps
xlat
lock
popf
jge
pop
inc
pop
dec
inc
bound
and
sub
jp
ret
aas
dec
ret
ds
sub
lds
bound
int3
jmp
stos
(bad)
popf
add
out
clc
mov
popf
sbb
out
mov
popf
sub
dec
cmps
out
mov
popf
sub
dec
test
ins
daa
aam
jge
cmps
out
mov
popf
sub
movntps
std
repnz
pushf
xor
or
and
bound
mov
jle
movntps
xchg
stos
das
bound
cmps
lahf
xor
loop
dec
sub
test
shl
outs
inc
bound
dec
inc
test
cmps
and
dec
aam
popa
fisubr
xchg
stc
and
cmps
test
dec
in
out
mov
popf
jge
push
ins
retf
retf
xor
popf
xor
jns
adc
daa
int3
mov
dec
inc
bound
mov
jle
movntps
xchg
aas
das
bound
scas
sahf
xor
pushf
xor
xchg
xor
sub
retf
xor
popf
sbb
dec
movs
or
(bad)
popf
sbb
push
jbe
sub
mov
dec
sub
clc
mov
popf
sbb
push
std
out
imul
iret
xchg
lahf
xor
bound
dec
inc
movs
stos
or
jp
jge
aam
std
out
imul
cmps
fsub
dec
cmps
out
mov
popf
sub
mov
xor
ret
xor
bound
out
jb
mov
bound
scas
lahf
xor
std
cmp
ret
out
dec
sub
shl
inc
pop
dec
inc
bound
and
sub
jp
std
cmp
ret
(bad)
jne
sub
cld
mov
cmps
out
mov
popf
sub
mov
xor
ret
xor
bound
out
jb
mov
bound
scas
lahf
xor
std
cmp
ret
jle
dec
sub
shl
inc
pop
dec
inc
bound
and
sub
jp
std
cmp
ret
push
jne
sub
lock
xor
pop
jl
pop
fwait
(bad)
mov
push
pop
and
pop
mov
dec
inc
bound
mov
dec
loop
sub
xchg
mov
bound
scas
cdq
xor
aam
mov
popf
add
xor
jg
inc
jbe
inc
pop
dec
inc
bound
and
sub
jp
std
cmp
ret
mov
les
(bad)
std
retf
xor
popf
xor
(bad)
into
in
fwait
push
dec
sub
clc
mov
popf
sbb
out
mov
popf
sub
dec
cmps
out
mov
popf
sub
dec
test
ins
daa
aam
jge
cmps
out
mov
popf
sub
push
sub
std
repnz
pushf
xor
or
cmp
xchg
aad
bound
push
inc
loop
sub
xchg
movaps
mov
bound
mov
popf
add
xor
jg
inc
jbe
inc
pop
dec
inc
bound
and
sub
jp
std
cmp
ret
push
dec
sub
std
retf
xor
popf
or
popf
cmp
cmp
ins
retf
fcmovbe
pushf
xor
lea
retf
xor
popf
sbb
dec
movs
or
(bad)
popf
sbb
sahf
jne
sub
mov
dec
sub
xor
popf
add
or
sub
jns
sub
jge
sub
cmovae
loop
sub
hlt
retf
xor
bound
mov
bnd
sub
inc
aas
lahf
and
pop
and
cmp
bts
dec
pop
fwait
hlt
mov
lock
lahf
xor
and
sahf
xchg
xor
bound
dec
cmps
out
mov
popf
sub
scas
imul
mov
into
js
sub
lock
jecxz
cmp
cmp
or
mov
xor
mov
xor
mov
loop
dec
sub
jge
scas
mov
dec
inc
xchg
popf
or
aad
and
xlat
lea
sub
mov
fisttp
sub
pop
dec
inc
bound
dec
inc
bound
dec
inc
bound
imul
fild
xchg
jmp
scas
xchg
xor
jmp
and
sub
and
outs
in
in
imul
jae
bound
mov
mov
xchg
mov
popf
das
sbb
repnz
aad
and
(bad)
lock
xor
mov
dec
aam
lea
das
bound
rcl
(bad)
in
popf
enter
and
addr16
imul
dec
inc
adc
and
push
mov
leave
or
sub
xchg
out
cmps
popf
or
jp
dec
aam
jne
push
xchg
sub
push
test
in
mov
jbe
cmp
popf
or
pop
jne
into
addr16
je
es
jb
sbb
xor
sbb
lgs
mov
pop
jge
sub
retf
jge
test
ins
inc
and
mov
jp
ret
aas
dec
pop
imul
dec
sub
mov
je
mov
push
sub
jbe
push
loop
or
sub
jp
ret
aas
dec
pop
imul
dec
sub
arpl
dec
push
mov
data16
adc
fisubr
or
push
shr
xchg
add
bound
rcl
hlt
mov
push
push
shr
or
pop
shr
xchg
jge
bound
push
inc
loop
sub
imul
sub
inc
aam
xchg
shr
xchg
pop
das
bound
push
inc
loop
sub
pop
iret
push
adc
or
aam
stc
out
imul
movs
daa
fcmove
inc
sub
test
daa
mov
in
push
cmps
je
mov
push
sub
jnp
ss
call
iret
mov
jge
sub
and
ror
(bad)
in
pop
dec
arpl
pusha
imul
movntps
jnp
ss
in
movntps
addr16
jge
sub
and
push
inc
loop
sub
jnp
ss
in
sub
retf
mov
jge
sub
and
lock
outs
mov
jbe
cmp
popf
or
xor
movs
sub
jmp
adc
mov
cmp
dec
sub
jge
mov
popf
pop
inc
fsub
jge
mov
popf
pop
pop
fsub
jge
mov
popf
pop
pop
fsub
jge
mov
popf
pop
outs
fsub
jge
mov
popf
pop
arpl
and
mov
popf
pop
jg
and
mov
popf
pop
jnp
and
mov
aaa
hlt
stos
jp
xchg
icebp
sub
(bad)
in
loop
ins
pop
inc
pop
ins
mov
xor
sub
mov
inc
jmp
push
(bad)
in
and
inc
outs
pop
cwde
xchg
push
ins
ins
ret
dec
and
pop
cmp
mov
fdivr
jmp
js
rol
mov
sub
and
jnp
cmp
call
jb
dec
push
bound
sub
jns
push
bound
sub
xchg
out
out
imul
jge
sub
sub
push
mov
mov
cwde
(bad)
loope
mov
cmp
hlt
div
pcmpgtd
les
jns
and
dec
sub
jge
mov
popf
pop
or
and
mov
popf
pop
pop
fsub
jge
mov
popf
pop
add
and
mov
popf
pop
pop
fsub
jge
mov
popf
pop
sbb
and
mov
popf
pop
pop
fsub
jge
mov
popf
pop
adc
and
mov
popf
pop
das
fsub
jge
mov
popf
pop
sub
and
mov
popf
pop
daa
fsub
jge
mov
popf
pop
and
and
mov
popf
pop
aas
fsub
jge
mov
popf
pop
cmp
and
mov
popf
pop
aaa
fsub
jge
mov
popf
pop
xor
and
mov
popf
pop
iret
fsub
jge
mov
popf
pop
retf
fsub
jge
mov
popf
pop
(bad)
fsub
jge
mov
popf
pop
ret
fsub
jge
mov
popf
pop
(bad)
and
mov
popf
pop
fcmovnu
and
mov
popf
pop
xlat
fsub
jge
mov
popf
pop
rcr
and
mov
popf
pop
out
fsub
jge
mov
popf
pop
jmp
and
mov
popf
pop
out
and
mov
popf
pop
jecxz
and
mov
popf
pop
(bad)
fsub
jge
mov
popf
pop
sti
fsub
jge
mov
popf
pop
neg
and
mov
popf
pop
repz
jge
mov
popf
pop
(bad)
fsub
jge
mov
popf
pop
mov
and
mov
popf
pop
xchg
and
mov
popf
pop
sbb
jge
mov
popf
pop
lahf
fsub
jge
mov
popf
pop
fsub
jge
mov
popf
pop
xchg
fsub
jge
mov
popf
pop
xchg
fsub
jge
mov
popf
pop
scas
fsub
jge
mov
popf
pop
stos
fsub
jge
mov
popf
pop
cmps
fsub
jge
mov
popf
pop
mov
mov
popf
pop
mov
and
mov
popf
pop
mov
and
mov
popf
pop
dec
fbld
jge
mov
popf
pop
dec
fbld
jge
mov
popf
pop
inc
fbld
jge
mov
popf
pop
inc
fbld
jge
mov
popf
pop
pop
fbld
jge
mov
popf
pop
pop
fbld
jge
mov
popf
pop
push
fbld
jge
mov
popf
pop
push
fbld
jge
mov
popf
pop
outs
fbld
jge
mov
popf
pop
imul
jge
mov
popf
pop
fbld
jge
mov
popf
pop
arpl
and
mov
popf
pop
jg
and
mov
popf
pop
jnp
and
mov
popf
pop
ja
and
mov
popf
pop
jae
and
mov
popf
pop
pandn
jge
mov
popf
pop
or
and
mov
popf
pop
pop
fbld
jge
mov
popf
pop
add
and
mov
popf
pop
pop
fbld
jge
mov
popf
pop
sbb
and
mov
popf
pop
pop
fbld
jge
mov
popf
pop
adc
and
mov
popf
pop
das
fbld
jge
mov
popf
pop
sub
and
mov
popf
pop
aas
fbld
jge
mov
popf
pop
cmp
and
mov
popf
pop
aaa
fbld
jge
mov
popf
pop
xor
and
mov
popf
pop
iret
fbld
jge
mov
popf
pop
ret
fbld
jge
mov
popf
pop
(bad)
and
mov
popf
pop
fcmovnu
and
mov
popf
pop
xlat
fbld
jge
mov
popf
pop
rcr
and
mov
popf
pop
out
fbld
jge
mov
popf
pop
jmp
and
mov
popf
pop
out
and
mov
popf
pop
jecxz
and
mov
popf
pop
neg
and
mov
popf
pop
repz
jge
mov
popf
pop
(bad)
fbld
jge
mov
popf
pop
mov
and
mov
popf
pop
xchg
and
mov
popf
pop
sbb
jge
mov
popf
pop
lahf
fbld
jge
mov
popf
pop
fbld
jge
mov
popf
pop
xchg
fbld
jge
mov
popf
pop
xchg
fbld
jge
mov
popf
pop
scas
fbld
jge
mov
popf
pop
stos
fbld
jge
mov
popf
pop
cmps
fbld
jge
mov
popf
pop
mov
mov
popf
pop
mov
mov
popf
pop
mov
mov
popf
pop
mov
and
mov
popf
pop
mov
and
mov
