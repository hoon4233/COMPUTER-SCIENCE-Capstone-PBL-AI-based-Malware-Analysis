xchg
cmc
aaa
fsubr
adc
jecxz
jno
mov
jno
pop
sub
inc
sub
iret
push
mov
arpl
fsub
adc
enter
mov
ja
pop
add
mov
xor
xor
mov
jnp
pop
retf
cdq
inc
push
ja
das
cli
addr16
jnp
sub
pop
sub
rcr
xchg
xlat
loop
pop
adc
jb
mov
cmp
or
inc
and
pop
ja
mov
xor
sbb
mov
outs
(bad)
mov
sub
hlt
mov
idiv
jg
test
jecxz
xor
ja
mov
xor
cld
push
mov
xor
mov
jbe
fcom
cmp
sub
mov
push
mov
mov
fsub
pusha
cli
cmp
xor
(bad)
adc
aaa
aam
adc
fsub
xor
imul
ja
cmc
fs
inc
mov
or
adc
ja
mov
adc
ficomp
ins
sub
jmp
push
scas
cmp
daa
mov
fcomp
cmp
mov
and
mov
cmp
fsub
retf
stos
mov
add
xchg
mov
mov
fiadd
push
das
pop
cmp
lahf
(bad)
pop
retf
cmp
jecxz
xor
sbb
push
mov
cmc
add
xor
xor
push
enter
fidiv
jle
xlat
xor
push
mov
mov
lods
(bad)
pop
daa
lods
xchg
and
cmp
xchg
stos
retf
adc
mov
and
jae
mov
push
or
fldcw
nop
and
pop
jecxz
xor
jbe
mov
sbb
adc
ins
iret
push
mov
push
(bad)
push
mov
rcr
adc
xor
ja
mov
and
push
lahf
add
push
xor
mov
icebp
jae
mov
test
adc
xor
ja
xchg
sbb
inc
ja
ja
lods
xchg
adc
push
inc
adc
mov
and
outs
bound
cmp
mov
xchg
ja
mov
mov
jbe
dec
call
sbb
mov
repnz
gs
ja
mov
pop
ja
mov
adc
sub
or
mov
fld
lods
pop
mov
add
cmc
pushf
cmp
xor
mov
xor
mov
xor
dec
push
mov
xor
jbe
xor
inc
stos
adc
mov
dec
adc
mov
retf
mov
jne
dec
and
data16
ins
ja
push
sar
(bad)
dec
xchg
out
xchg
xchg
std
imul
pusha
(bad)
mov
and
mov
xor
xor
daa
fsubp
leave
daa
cmp
xor
sbb
lods
xlat
cmp
ja
fs
sbb
jae
(bad)
fimul
xlat
sub
add
xor
add
mov
leave
lahf
retf
ja
push
inc
jae
(bad)
fisub
(bad)
jbe
movs
lea
mov
repnz
mov
push
call
jnp
cmc
mov
shl
stos
sub
cli
push
pop
gs
dec
mov
retf
pop
inc
jg
test
repz
(bad)
xor
dec
add
inc
pop
inc
imul
retf
pop
inc
mov
sub
mov
pop
(bad)
mov
xor
dec
cmp
loop
jle
pop
ret
out
(bad)
xchg
std
imul
dec
and
add
jo
movs
mov
arpl
out
(bad)
xchg
xchg
idiv
push
pop
retf
push
ja
rol
shl
leave
ja
iret
add
fsub
int
xchg
mov
retf
push
ja
bound
xor
out
jbe
sub
pop
sbb
jne
sbb
dec
push
inc
jbe
sub
hlt
fwait
pop
jne
outs
mov
test
pop
jo
fsub
and
jb
out
pushf
ins
sbb
adc
out
xor
push
mov
lods
loop
dec
push
mov
inc
fld
mov
aaa
rcr
or
scas
lods
mov
lods
pop
retf
pop
xor
mov
jmp
xor
add
and
inc
jnp
jmp
mov
mov
lods
pop
retf
mov
inc
pop
retf
pop
xor
out
xor
mov
push
aaa
rcr
or
and
mov
jg
movs
dec
daa
(bad)
stos
mov
cld
push
stos
mov
jb
mov
jmp
pop
retf
pop
retf
sub
xor
retf
sub
(bad)
(bad)
pop
retf
sub
pop
mov
mov
mov
push
pop
retf
stc
cld
mov
sub
hlt
mov
sub
xchg
out
shr
cmp
add
(bad)
push
pop
mov
pushf
jne
add
push
mov
out
xor
fbstp
dec
mov
inc
pusha
push
inc
jae
(bad)
fsubp
cld
push
stos
repz
mov
jo
(bad)
lds
mov
cld
outs
mov
add
and
push
inc
js
jp
push
pop
mov
and
dec
cli
add
mov
cmp
mov
(bad)
xchg
push
fbstp
dec
mov
inc
pusha
push
inc
jae
(bad)
fsubp
iret
mov
(bad)
push
pop
mov
add
loopne
cld
push
stos
repz
mov
mul
fiadd
and
cmc
mov
arpl
jbe
push
pop
mov
and
loopne
(bad)
movs
dec
sub
push
stos
cmp
push
call
pop
lods
mov
fwait
in
push
xchg
cmc
aaa
mov
(bad)
idiv
pop
loopne
push
mov
outs
mov
add
and
inc
jg
jbe
out
sub
inc
stos
sub
mov
xor
push
hlt
fnsave
scas
pop
retf
pop
mov
pop
or
dec
push
mov
jbe
add
pop
mov
ja
cmp
stos
push
sar
push
pop
mov
mov
add
and
push
and
sbb
nop
(bad)
leave
(bad)
xchg
pop
inc
jg
mov
push
sub
sbb
lods
mov
retf
enter
dec
(bad)
add
mov
xor
(bad)
fisub
jae
mov
outs
mov
add
arpl
fcom
cmp
das
rcl
sub
iret
add
push
(bad)
ds
iret
add
add
sub
xor
inc
jae
mov
xor
add
mov
lahf
mov
xor
mov
ror
and
cmc
mov
dec
loopne
mov
mov
test
sbb
push
mov
pop
addr16
xor
ja
popa
mov
mov
bound
pop
ds
(bad)
push
dec
cmp
es
arpl
jecxz
ja
cmp
lds
mov
sub
inc
xchg
stos
out
js
bound
pusha
sub
hlt
xchg
cmps
gs
repz
ja
fsub
arpl
xor
idiv
cmc
jle
lods
test
jle
xlat
xor
loop
js
pop
xor
fisub
lahf
push
pop
retf
xchg
cmc
sub
sub
iret
jg
xor
mov
icebp
arpl
call
sub
pop
mov
div
outs
fiadd
ja
(bad)
xor
jbe
xor
push
scas
cmp
fwait
mov
cmp
sub
ja
shl
push
iret
add
push
(bad)
sub
ja
sub
pushf
fpatan
xor
aam
mov
xor
mov
scas
fucomp
and
(bad)
xchg
adc
retf
mov
dec
push
mov
retf
mov
test
sahf
bt
jg
mov
xor
daa
fsub
cmp
cld
imul
(bad)
leave
hlt
cs
xor
ja
and
push
lods
mov
push
mov
xor
xor
push
(bad)
sbb
mov
(bad)
(bad)
jp
mov
xor
adc
dec
ret
adc
ja
(bad)
int
nop
cmps
pop
ja
enter
shl
inc
mov
not
xchg
out
jne
sub
(bad)
fst
das
push
ja
fsubp
lds
(bad)
aad
mov
cmps
xor
cld
cs
mov
dec
lods
cmc
adc
scas
movs
inc
mov
mov
popa
mov
scas
mov
xchg
xor
adc
mov
ja
mov
cmp
es
mov
mov
daa
jmp
(bad)
iret
add
add
or
ja
sub
pop
bound
xchg
cmps
dec
ret
adc
mov
stos
lods
pop
retf
and
idiv
hlt
outs
ds
xor
repnz
xor
lods
hlt
cmp
xor
and
lods
pop
mov
iret
add
push
sbb
push
mov
loope
lods
pop
mov
mov
ror
and
cmc
mov
mov
xchg
ret
(bad)
mov
mov
xor
dec
arpl
xor
arpl
xor
xor
pminub
scas
sbb
int
es
mov
je
sahf
add
pop
sahf
add
push
and
push
sub
fsubp
ss
retf
adc
xor
(bad)
movs
inc
mov
mov
add
sbb
xor
ss
xor
add
popa
xlat
adc
xor
jbe
sub
hlt
ss
xor
xor
imul
jae
push
inc
jne
mov
xor
xor
fwait
dec
jae
xchg
dec
jae
(bad)
leave
ja
pop
add
fisub
cld
push
stos
mov
arpl
retf
(bad)
leave
ja
(bad)
ja
lods
retf
retf
adc
xor
in
mov
xor
sbb
push
loop
ja
jecxz
lahf
jb
xor
sbb
push
repnz
mov
mov
aaa
rcr
mov
cmp
stos
retf
dec
dec
sbb
pop
ja
out
daa
cmp
xor
sbb
stos
push
sar
push
push
mov
mov
pop
fisttp
or
sub
iret
sti
mov
pop
ja
icebp
arpl
call
sbb
xchg
fisub
or
push
mov
retf
mov
rcl
aas
mov
retf
das
mov
lods
pop
retf
ror
mov
jmp
jp
mov
mov
xor
ja
daa
stc
mov
jp
mov
pop
stc
mov
pop
retf
mov
dec
fisttp
and
jmp
loopne
ja
push
xor
(bad)
lods
pop
retf
das
mov
lods
pop
retf
ds
xor
lods
cmc
jge
push
pop
cmp
add
call
mov
popa
mov
mov
retf
adc
retf
mov
sub
ja
mov
cmc
js
xchg
cmp
fild
xor
mov
xor
and
sub
pop
bound
repnz
stos
xor
ss
pop
xor
pop
retf
cmp
in
retf
retf
mov
daa
stc
mov
loopne
dec
das
mov
lods
pop
retf
ds
xor
lods
cmc
dec
(bad)
push
pop
cmp
pop
daa
lea
mov
retf
mov
xor
mov
aas
xor
enter
inc
ja
fisub
enter
gs
not
shl
(bad)
xchg
les
shl
dec
push
mov
retf
lahf
retf
mov
xor
shr
mov
lods
pop
retf
repnz
ss
dec
into
sbb
mov
pop
lods
xor
pop
retf
mov
jecxz
ja
pop
popf
mov
into
xor
shl
push
push
mov
aad
push
retf
adc
retf
scas
or
je
xor
popf
inc
ja
ficomp
enter
bound
shl
dec
lods
pop
xor
repnz
pop
retf
mov
xor
mov
loopne
pop
add
je
mov
and
jnp
pop
retf
(bad)
adc
adc
retf
mov
inc
pop
lahf
retf
mov
popf
mov
mov
aad
push
retf
adc
retf
scas
or
je
xor
jmp
mov
push
retf
cmp
pop
xor
repnz
pop
retf
mov
xor
aam
loopne
pop
add
je
mov
and
jnp
pop
retf
(bad)
adc
adc
retf
mov
jb
lods
pop
mov
pop
lahf
retf
mov
popf
mov
mov
mov
mov
popa
pop
jbe
ss
push
retf
adc
retf
scas
or
pop
gs
lods
pop
retf
mov
mov
adc
xor
mov
cmp
pop
xor
repnz
pop
retf
mov
xor
btr
xor
ja
outs
ror
pop
retf
(bad)
jno
push
retf
adc
retf
mov
call
lahf
retf
mov
pop
pop
mov
xor
mov
retf
scas
or
pop
gs
lods
pop
retf
mov
ds
and
ja
mov
jb
push
ja
push
das
mov
lods
pop
retf
or
mov
inc
ret
adc
ja
lock
mov
div
lods
mov
xor
ja
das
mov
lods
pop
retf
daa
jmp
cld
imul
(bad)
leave
jle
lods
mov
push
mov
retf
repnz
mov
sub
xor
sub
hlt
cs
xor
ja
and
ja
push
lahf
aas
push
mov
retf
mov
mov
lods
pop
retf
sub
ja
mov
xor
out
lods
pop
retf
gs
lods
pop
retf
mov
retf
repnz
mov
sub
daa
fcom
in
xor
retf
das
mov
lods
pop
retf
xor
xor
lods
pop
retf
call
push
sub
pop
bound
repnz
cmps
xor
mov
jbe
mov
in
push
mov
in
jbe
sub
hlt
cs
xor
ja
das
mov
lods
pop
retf
daa
in
lods
pop
gs
imul
(bad)
leave
jle
lods
mov
push
mov
push
ja
dec
sbb
(bad)
dec
retf
repnz
mov
sub
xor
mov
popf
mov
(bad)
ja
daa
cmc
je
mov
retf
mov
sub
daa
fcomp
jo
fidivr
scas
fisub
or
mov
inc
adc
mov
mov
pop
or
add
daa
enter
gs
(bad)
into
xor
hlt
test
lods
mov
xor
sbb
mov
xor
mov
pop
retf
mov
retf
adc
retf
mov
dec
or
push
mov
in
pop
mov
not
xchg
daa
mov
ja
daa
(bad)
ret
pop
retf
mov
daa
test
cli
out
retf
and
fiadd
jae
mov
cmp
pop
retf
mov
nop
jmp
cld
out
dec
retf
cmc
mov
(bad)
push
pop
cmp
pop
daa
pop
jne
mov
retf
mov
test
push
retf
repnz
div
ds
repnz
ja
mov
cmp
pop
daa
sbb
mov
xor
mov
push
retf
repnz
(bad)
push
pop
cmp
pop
daa
retf
mov
retf
mov
aam
push
mov
pop
ja
sti
mov
mov
gs
lods
pop
retf
sub
(bad)
(bad)
fcmove
mov
retf
pop
inc
mov
sub
into
push
mov
mov
mov
dec
and
ja
mov
xchg
mov
pop
bound
(bad)
leave
iret
and
xor
minsd
mov
popa
mov
scas
mov
xor
mov
es
repnz
pop
mov
xor
mov
or
mov
cmp
pop
daa
and
mov
retf
mov
mov
push
mov
retf
repnz
ja
pop
ror
pop
retf
mov
sub
xor
sub
hlt
cs
xor
ja
les
mov
mov
push
mov
retf
mov
xor
mov
retf
lods
dec
dec
test
repnz
pop
ins
mov
test
ja
pop
push
js
sub
mov
lods
pop
retf
mov
sbb
pop
retf
pop
retf
repnz
sub
pop
retf
repnz
mov
mov
mov
push
aaa
rcr
mov
mov
dec
sub
mov
enter
push
cld
(bad)
pop
retf
das
mov
scas
pop
retf
mov
dec
stos
push
push
mov
xor
(bad)
pop
retf
repnz
das
mov
xor
mov
xor
test
out
ja
pop
mov
lods
pop
xor
imul
retf
sub
xor
retf
pop
mov
lods
pop
retf
add
mov
retf
scas
retf
mov
retf
xchg
retf
sub
daa
fcom
mov
lods
pop
retf
inc
retf
fwait
mov
lods
pop
retf
dec
leave
mov
retf
movs
repz
pop
retf
mov
adc
mov
popf
mov
daa
fisttp
arpl
jg
pop
in
lods
pop
xor
cmps
lods
pop
retf
xchg
retf
and
ja
scas
mov
mov
sub
repnz
mov
sub
repnz
pop
retf
mov
sub
scas
bound
mov
daa
aad
lods
pop
gs
arpl
jg
test
mov
pusha
(bad)
mov
retf
push
ja
cmp
and
ja
mov
adc
mov
and
push
lahf
xchg
out
dec
cmp
idiv
inc
call
mov
jo
fwait
xchg
ja
dec
ds
push
mov
inc
sub
jmp
bound
mov
repnz
sub
nop
sub
xchg
out
ins
xor
cld
cs
mov
mov
mov
pop
retf
pop
push
or
mov
ja
mov
xor
sub
es
bound
jno
mov
xor
push
ja
cmp
adc
push
enter
dec
pop
adc
mov
adc
mov
mov
and
sub
in
fimul
enter
jbe
sub
mov
xor
push
mov
mov
call
jbe
stos
ss
mov
jne
push
xor
push
mov
lods
ss
cmps
xor
fldenv
xor
out
adc
dec
jne
mov
xor
ja
pop
adc
ret
push
ja
shr
jne
xor
inc
ret
adc
adc
hlt
mov
jne
push
pop
xor
imul
ja
and
outs
int3
jecxz
aaa
movs
mov
aaa
ja
push
xor
retf
jbe
scas
xchg
fwait
into
jecxz
jbe
call
push
call
mov
jo
fisub
push
mov
stos
ss
dec
iret
jbe
mov
ja
movs
cmps
sub
add
sahf
jl
xor
jo
mov
je
inc
add
adc
xor
mov
mov
cmc
sahf
push
mov
jae
push
mov
je
push
dec
cmp
dec
cmp
xor
dec
aam
push
mov
xor
call
adc
je
icebp
loop
ss
dec
(bad)
mov
je
push
(bad)
xor
dec
xor
mov
mov
scas
sub
mov
dec
test
push
mov
or
cmp
xor
dec
mov
cdq
pop
lods
xor
call
push
out
ss
mov
mov
jb
push
ja
lods
cmps
or
xchg
mov
call
push
mov
test
push
mov
xor
ja
inc
mov
neg
stos
ss
loop
xchg
push
mov
je
shl
jbe
call
push
mov
xor
aaa
push
dec
mov
mov
xor
ss
dec
fwait
ja
mov
ja
shl
aaa
sahf
iret
mov
sbb
fisub
imul
ja
mov
xor
push
and
outs
int3
jecxz
push
shl
push
mov
xor
ja
adc
daa
repz
jle
fisub
stos
test
mov
jmp
xor
ja
jecxz
mov
imul
ja
scas
sub
pushf
fs
xor
out
xor
jmp
je
mov
cmp
add
fisub
dec
cmp
cmp
dec
fs
mov
xor
ret
adc
je
adc
xor
ja
rcl
mov
cmps
inc
(bad)
adc
xor
rcl
xor
(bad)
iret
js
out
dec
xchg
mov
mov
or
cmps
cmp
cdq
dec
loopne
ja
adc
mov
xor
(bad)
pop
cmp
cmps
cmp
dec
pop
cmp
xlat
and
cs
xor
lea
jns
push
stos
movs
aaa
push
mov
iret
jae
xchg
ja
sub
jbe
sub
(bad)
fwait
jecxz
ja
inc
test
push
lods
xor
je
rol
call
pop
mov
test
(bad)
ja
movs
mov
pop
xor
push
sub
pop
mov
scas
movs
aaa
push
mov
je
inc
scas
movs
aaa
push
sub
out
adc
jne
repnz
movs
aaa
push
fwait
xor
loop
add
jne
xor
aaa
push
mov
je
inc
scas
movs
aaa
push
sub
aam
mov
jne
repnz
ret
loop
add
out
xor
aam
xor
bound
sub
imul
fiadd
daa
add
pop
and
lahf
out
ja
inc
mov
mov
xor
or
xor
int
mov
xor
xor
adc
xor
ss
sbb
push
mov
int
xchg
retf
adc
xor
ss
retf
adc
xor
ss
retf
adc
xor
xor
nop
idiv
add
movs
dec
dec
pop
xor
out
xor
ja
out
daa
lods
mov
xlat
adc
xor
jbe
sub
hlt
ss
xor
xor
mov
mov
push
mov
mov
scas
mov
ja
rol
in
fidivr
scas
fisub
adc
mov
jo
push
mov
adc
push
(bad)
(bad)
push
cmp
adc
xor
out
xor
ja
mov
xor
jecxz
popa
repnz
mov
push
iret
push
das
dec
retf
(bad)
in
push
mov
mov
ja
movs
xor
mov
test
push
sub
inc
mov
idiv
push
ds
add
xor
sbb
mov
das
jo
add
rcr
out
daa
cmp
xor
xor
add
cmp
retf
dec
dec
push
push
mov
xor
out
popa
retf
dec
fisubr
push
mov
ja
fsubp
frstor
lods
xlat
test
push
inc
mov
test
push
sub
mov
xchg
mov
ror
mov
pop
adc
in
mov
xchg
(bad)
aad
ss
mov
mov
out
(bad)
push
push
mov
(bad)
rol
shl
mov
lahf
cmp
mov
xor
enter
push
gs
lods
mov
call
cmps
dec
xor
ds
and
push
mov
shl
add
xor
dec
mov
mov
ret
adc
retf
mov
ss
sbb
or
(bad)
leave
(bad)
xchg
std
cld
mov
sub
hlt
mov
sub
fdivr
cmp
push
xchg
retf
cmps
or
mov
cmp
pop
xchg
xor
lods
mov
cmp
pop
xchg
aaa
dec
lods
mov
cmp
pop
xchg
ss
lods
mov
cmp
pop
xchg
xor
mov
aas
jne
mov
jno
push
sub
dec
(bad)
xor
js
cmps
xor
in
or
lods
mov
push
mov
cmp
inc
mov
mov
daa
mov
(bad)
ror
js
mov
dec
xchg
xlat
dec
(bad)
test
adc
popa
push
inc
sbb
pop
mov
push
lods
xor
fnsave
mov
jo
cmp
cli
push
cmps
pop
retf
adc
xor
mov
jo
cli
inc
mov
retf
adc
imul
push
cld
push
mov
and
xor
ror
pop
and
(bad)
push
push
mov
je
mov
mov
jb
mov
cmp
push
pop
pop
mov
and
jb
push
ja
push
(bad)
cmp
push
pop
xor
fs
retf
cmps
inc
ret
adc
inc
and
pop
jge
outs
movs
xor
sbb
int
mov
cmps
inc
aaa
ficomp
lahf
push
and
jno
xlat
add
stos
and
jae
adc
jno
retf
outs
sbb
ja
(bad)
ds
stos
and
jb
sahf
xor
mov
scas
push
out
cli
pop
call
push
sub
bound
xor
jne
(bad)
mov
jno
xlat
imul
rcr
mov
imul
aaa
add
cmps
cmp
push
movs
or
push
lahf
fdiv
mov
retf
mov
and
xor
ror
pop
and
xor
out
jb
pop
mov
push
sub
fidiv
xor
add
sub
aas
rcr
mov
imul
xor
ins
sub
hlt
mov
mov
mov
push
lods
xor
or
pop
lahf
retf
ja
mov
xor
lahf
cli
clc
xor
cli
pop
mov
jbe
and
jae
cmps
and
mov
xor
cmc
in
retf
cld
outs
mov
ror
and
cmc
retf
push
ja
fcom
cmp
pushf
push
and
dec
push
xlat
cmp
rcr
je
mov
fnsave
inc
gs
dec
ss
fwait
repz
mov
xor
out
xor
mov
mov
movs
aaa
push
xchg
out
(bad)
stos
mov
ret
mov
ja
pop
adc
push
push
(bad)
adc
mov
mov
scas
mov
xor
mov
mov
pop
xchg
jae
loop
dec
push
pop
inc
lahf
mov
sub
imul
mov
(bad)
jbe
mov
(bad)
test
sub
fsubp
sub
test
jae
loop
hlt
test
inc
cld
shr
(bad)
mov
sub
jbe
mov
mov
inc
mov
sub
fidiv
ja
shr
pop
stos
das
popa
imul
mov
sahf
fisub
xor
and
xlat
jne
xchg
and
out
loopne
lahf
daa
pop
retf
cmp
or
sub
iret
ja
ins
ja
icebp
arpl
mov
fs
mov
ja
sbb
lahf
xor
jo
daa
(bad)
test
pop
xor
(bad)
push
fimul
daa
push
ja
push
and
ja
mov
rcl
fimul
xor
ja
push
(bad)
das
imul
inc
jmp
adc
test
push
retf
adc
imul
(bad)
cwde
lods
pop
mov
mov
push
or
lahf
cli
sti
xor
test
(bad)
repnz
ss
lods
and
dec
retf
push
jmp
adc
mov
mov
xor
ja
aaa
xchg
test
inc
and
pop
retf
adc
test
mov
push
jl
xor
push
pop
retf
daa
(bad)
cwde
lods
pop
xor
cwde
lods
pop
hlt
xchg
push
and
bound
jne
push
lods
mov
push
mov
(bad)
cwde
lods
pop
hlt
xchg
push
sub
bound
cmp
aaa
loope
lods
pop
retf
push
ja
rcr
(bad)
test
pop
xor
ja
dec
or
mov
mov
mov
mov
jno
pushf
inc
arpl
popa
fidivr
ja
loop
(bad)
(bad)
push
fimul
jb
xor
lahf
(bad)
cli
xor
adc
mov
shl
addr16
mov
retf
jne
repnz
jl
mov
dec
push
push
mov
ja
rol
fstp
fbld
retf
pop
sbb
jp
mov
mov
pop
sub
pop
bound
rol
mov
lods
pop
xor
mov
out
mov
mov
pusha
mov
xchg
(bad)
hlt
mov
push
ret
out
pop
fimul
rcr
jae
mov
retf
mov
xor
mov
jmp
lods
dec
jnp
nop
mov
into
ja
mov
inc
mov
sti
mov
mov
mov
mov
mov
fimul
lods
pop
retf
(bad)
xor
push
xor
ja
lods
and
dec
retf
inc
aaa
cld
inc
mov
out
mov
retf
pop
rcr
push
fimul
fidivr
sahf
push
arpl
jne
out
leave
cld
pop
mov
sti
inc
dec
jmp
pop
retf
mov
aaa
mov
mov
push
pop
mov
retf
pop
rcr
mov
inc
ret
adc
retf
xlat
outs
pop
or
or
push
sub
(bad)
xchg
mov
xor
test
sub
jmp
lods
sub
cld
(bad)
cmp
mov
mov
mov
daa
xchg
test
(bad)
jl
mov
mov
mov
daa
cdq
test
pop
mov
mov
daa
jmp
imul
lea
out
jmp
mov
retf
daa
mov
fsub
icebp
test
pop
mov
mov
jmp
retf
retf
xlat
neg
push
mov
mov
mov
aaa
lea
pop
lock
jp
mov
jmp
(bad)
xor
xchg
inc
aaa
cld
fidivr
mov
retf
mov
loop
mov
fimul
fdiv
xor
mov
addr16
outs
hlt
xor
test
pop
cmp
pop
daa
push
jbe
mov
cmp
imul
cmp
push
lahf
fdiv
mov
cmp
jbe
mov
xor
mov
xor
cli
pop
mov
jmp
pop
retf
psrlw
out
jmp
call
mov
xlat
sub
mov
call
mov
xlat
aas
(bad)
mov
call
lods
cmps
inc
ret
adc
jmp
lods
arpl
jne
push
and
mov
not
add
mov
fdiv
mov
add
mov
mov
repnz
retf
and
cmps
dec
retf
pop
sbb
fnstenv
mov
mov
pop
retf
adc
aam
pop
retf
mov
out
mov
or
mov
mov
outs
mov
inc
imul
mov
mov
outs
cmps
xor
jge
sahf
or
mov
jb
fwait
lods
xor
jl
mov
dec
rcl
fistp
rcl
fimul
(bad)
jge
mov
fld
stos
pop
retf
scas
mov
mov
retf
(bad)
ja
not
mov
retf
inc
aaa
dec
inc
aaa
je
pop
mov
mov
rcr
dec
retf
cmps
xor
jb
push
ja
mov
and
jbe
adc
test
mov
push
jl
xor
jl
retf
cld
outs
mov
ror
and
cmc
mov
(bad)
lods
nop
aam
ror
int
aaa
mov
xor
cs
mov
ja
mov
ja
push
xchg
cld
push
pop
mov
mov
push
mov
das
dec
scas
ficom
mov
mov
dec
cmps
ficom
mov
mov
pop
(bad)
dec
cwde
xor
add
xor
div
sub
xchg
out
ja
mov
je
adc
mov
and
lods
cmps
fidivr
out
jbe
(bad)
and
xor
mov
and
cwde
jno
mov
xor
aaa
push
mov
cmp
adc
xor
xor
xchg
ja
mov
xor
push
pop
xor
in
xor
xchg
and
jo
pop
xor
pop
and
jb
stos
mov
adc
xor
push
pop
xor
in
xor
adc
aad
rcr
add
jo
push
sub
fisub
mov
test
push
xchg
mov
xor
not
pop
xor
mov
xor
jbe
xlat
xor
push
pop
xor
push
pop
xor
cs
cmp
hlt
retf
fs
push
dec
and
push
lods
and
cwde
jno
adc
not
pop
xor
pop
and
push
and
push
rcl
idiv
pop
lahf
xor
cmp
push
lahf
mov
push
mov
retf
adc
mov
outs
mov
add
(bad)
cld
es
mov
inc
jle
idiv
retf
push
mov
xor
shr
aaa
rcr
mov
dec
ins
inc
xchg
out
jbe
dec
xor
rcr
or
sub
sub
sub
iret
push
xor
push
hlt
(bad)
enter
pop
ficomp
nop
fisub
leave
test
pop
mov
mov
xlat
cmp
lods
xlat
cmp
mov
xor
mov
xor
(bad)
bound
mov
push
push
call
loope
or
idiv
xor
jg
mov
xor
(bad)
mov
fnstcw
hlt
(bad)
enter
pusha
rcl
jbe
mov
xor
sbb
push
mov
cmp
ja
fs
lods
xlat
sub
cs
xor
jnp
xor
push
push
mov
and
push
repz
mov
repnz
aaa
mov
sub
ror
je
mov
cmp
stos
mov
cmp
jo
lods
xlat
shl
leave
and
hlt
fstp
push
pop
fidiv
pop
sbb
fisub
sub
imul
fiadd
and
cmc
mov
mov
(bad)
stos
mov
xor
ja
cmps
pop
ja
mov
cmc
mov
stos
fisttp
xchg
and
ds
mov
inc
jae
(bad)
fisub
cmp
arpl
fsub
cmp
xchg
and
mov
and
jbe
xlat
int3
(bad)
nop
enter
pop
addr16
xlat
cmp
mov
enter
pop
gs
adc
xor
pop
push
mov
xor
ja
std
imul
pusha
(bad)
mov
fnstcw
cmc
mov
pop
push
and
jo
xor
xor
retf
push
mov
pop
ja
mov
inc
jg
inc
gs
sub
(bad)
stos
push
sar
push
push
mov
add
cmc
pushf
jle
aaa
sbb
mov
enter
pop
mov
mov
add
fisttp
mov
int
xchg
hlt
frstor
xchg
loop
sub
repz
inc
jg
out
sahf
xor
je
ds
mov
lods
fidivr
jo
adc
dec
push
popa
jb
cs
dec
add
inc
jnp
jecxz
xor
push
mov
jbe
push
retf
adc
xor
lods
mov
mov
ja
mov
and
jg
cdq
push
mov
mov
or
cdq
dec
jnp
push
arpl
jnp
ja
mov
and
jg
out
(bad)
xchg
mov
push
or
and
inc
fs
cmc
mov
jnp
out
movs
inc
arpl
push
pop
icebp
push
push
mov
xor
ja
xchg
retf
lods
xor
pop
inc
mov
xor
ja
cmp
push
inc
sahf
cmp
and
push
pop
mov
and
popa
pusha
(bad)
mov
fstp
hlt
(bad)
int3
shr
push
inc
fidivr
scas
fisub
mov
inc
xor
rol
fnstenv
(bad)
fnsave
(bad)
shl
ffreep
cli
cmp
ja
mov
push
ja
push
(bad)
(bad)
push
jle
mov
fbld
mov
inc
sub
js
loop
call
pop
ficomp
dec
push
ja
push
(bad)
(bad)
push
jp
mov
adc
mov
jb
and
imul
aaa
add
pop
fwait
push
and
(bad)
addr16
ds
xor
cs
xor
jnp
adc
retf
pushf
jo
ficom
in
retf
js
out
xchg
bound
jbe
dec
mov
lods
mov
fnsave
iret
retf
jbe
(bad)
ja
jne
scas
movs
inc
mov
cld
push
scas
cmp
push
sub
pop
adc
cmc
sbb
xor
js
pusha
xor
mov
in
jbe
sub
cld
push
dec
mov
js
out
xlat
xor
sar
push
scas
cmp
adc
and
in
xlat
js
pusha
xor
mov
jo
pop
adc
cmp
pop
and
pushf
push
sub
jbe
sub
sub
xor
ja
loop
out
es
cmovl
movs
out
xor
ret
xor
out
xor
ret
xor
out
xor
ret
xor
out
xor
ret
xor
out
xor
out
jb
xor
pop
popa
ja
(bad)
bound
imul
movs
out
stos
movs
out
xor
out
jp
out
xor
ret
xor
out
xor
fidiv
movs
out
xor
ja
cli
movs
out
xor
ja
(bad)
adc
cld
dec
xor
jae
xor
out
xchg
es
xor
out
fwait
(bad)
out
xor
out
and
jnp
xor
out
xlat
std
out
xor
out
(bad)
inc
pop
retf
loop
repz
xor
ja
loopne
cmps
mov
xor
mov
xor
ja
loop
out
cmps
movs
out
xor
ret
xor
out
xor
ret
xor
aaa
push
xor
jp
movs
out
xor
add
movs
out
xor
movs
push
movs
out
xor
or
movs
out
xor
out
xchg
movs
out
xor
ret
xor
out
xor
out
pop
xor
and
call
xor
jp
movs
out
xor
add
movs
out
xor
movs
push
movs
out
xor
or
movs
out
xor
out
xchg
movs
out
xor
ret
xor
out
xor
xor
data16
pop
div
mov
push
adc
out
mov
pop
fdiv
ins
ret
mov
jbe
sub
bound
push
push
xor
ja
sub
jbe
repnz
movs
pop
retf
pusha
mov
mov
xor
jns
data16
mov
or
mov
mov
into
(bad)
stos
mov
out
movs
pop
mov
out
movs
pop
mov
iret
mov
xor
(bad)
push
dec
mov
imul
inc
fidivr
xchg
lods
and
js
jp
mov
imul
and
aaa
pop
adc
js
out
iret
pop
cdq
sub
or
cmp
xor
test
dec
call
pop
dec
out
js
test
std
sbb
das
jo
add
in
jbe
repnz
xchg
xchg
mov
xor
xchg
jnp
fwait
repz
mov
imul
pusha
(bad)
mov
fstp
hlt
(bad)
int3
xchg
mov
ins
shl
pop
push
mov
xor
mov
sub
cmp
hlt
mov
inc
neg
hlt
outs
data16
bound
xor
xor
mov
stos
(bad)
stos
pop
retf
stos
mov
repz
xor
cwde
xchg
inc
aaa
cld
inc
lahf
cdq
retf
push
arpl
mov
fcmovu
frstor
pop
adc
cwde
xchg
inc
aaa
mov
popf
retf
mov
retf
bound
cmp
ss
pop
ja
push
out
daa
mov
and
outs
repnz
xor
mov
shl
xor
loopne
inc
inc
and
push
add
retf
ss
pop
ja
push
leave
add
adc
sub
lods
icebp
xor
xor
mov
jmp
addr16
int
bnd
xor
out
loopne
dec
push
pop
inc
movs
mov
sub
mov
sub
pop
adc
and
sub
cmps
out
loopne
idiv
dec
jbe
push
mov
push
cmp
mov
mov
pusha
cmp
and
dec
(bad)
pop
ja
cmp
pop
iret
out
loopne
(bad)
mov
loopne
daa
mov
and
jnp
push
xor
mov
nop
xor
xor
loopne
inc
inc
and
push
add
retf
ss
pop
ja
push
rol
mov
and
mov
mov
retf
add
shl
lds
jbe
xor
out
loopne
dec
push
push
inc
test
push
ss
xchg
pop
ja
pop
adc
cwde
add
mov
push
sub
cmps
out
loopne
(bad)
pop
cwde
mov
retf
cmp
push
dec
in
fdiv
xor
xor
shl
js
mov
inc
jae
iret
(bad)
adc
lds
mov
scas
pop
retf
stos
pop
ja
mov
pop
ja
mov
inc
jg
stos
jl
push
sub
rcl
pusha
push
mov
frstor
lods
xlat
aad
lods
xlat
rcr
lods
xlat
rcr
add
mov
cmp
push
popf
xor
xor
stc
cld
mov
sub
idiv
icebp
arpl
in
jl
frstor
sbb
xchg
fisub
(bad)
shl
lahf
ja
mov
ja
ficom
xchg
fs
sbb
push
add
hlt
cmp
sub
sub
fisub
mov
sub
inc
pop
retf
mov
sbb
pop
adc
mov
jno
adc
movs
dec
hlt
lea
push
or
div
xchg
ret
mov
mov
jo
outs
stos
inc
mov
lods
pop
xor
ja
pusha
ret
mov
xlat
cmp
lods
xchg
repz
pop
retf
and
imul
pop
retf
mov
xor
ja
daa
into
mov
xor
ja
mov
pop
ja
mov
enter
frstor
(bad)
push
enter
inc
jg
sub
xor
sbb
mov
scas
pop
retf
mov
int
adc
retf
xchg
jge
push
sub
jbe
sub
mov
push
enter
div
push
mov
ja
add
call
repnz
pop
retf
dec
mov
test
retf
retf
adc
retf
retf
push
and
and
mov
xor
repnz
fs
push
ja
cmp
xor
adc
retf
retf
push
and
push
push
mov
jmp
mov
mov
pop
mov
popa
mul
std
imul
pusha
(bad)
mov
fnstcw
hlt
(bad)
cld
es
inc
sub
sbb
stos
mov
(bad)
xchg
pop
xor
out
xor
(bad)
push
push
mov
ja
out
daa
fsubp
leave
daa
cmp
xor
sbb
lods
xlat
cmp
ja
push
mov
lods
loop
dec
push
mov
int
es
arpl
es
add
mov
xor
lahf
scas
jmp
nop
idiv
xor
mov
inc
jecxz
ja
xlat
and
cmp
retf
pop
inc
jnp
xlat
cmp
ja
sub
popa
pusha
(bad)
mov
(bad)
enter
pop
ficomp
nop
(bad)
leave
(bad)
xchg
enter
das
jo
add
lods
xlat
cmp
push
mov
push
nop
idiv
jmp
fstp
fisub
xor
repnz
ja
movs
xor
sbb
es
retf
dec
outs
aas
push
mov
add
mov
pop
inc
arpl
inc
lods
xlat
leave
lahf
ds
lods
xlat
leave
lahf
outs
jmp
ficomp
(bad)
fisub
add
mov
cld
mov
sub
hlt
mov
xlat
and
push
mov
mov
sbb
mul
xor
pop
add
fisub
xor
mov
inc
jnp
xlat
cmp
ja
bound
bound
dec
fsubp
sub
sbb
lods
xlat
leave
lahf
mov
xor
jnp
xlat
leave
lahf
xchg
in
ja
(bad)
fisubr
xlat
leave
lahf
out
xor
outs
mov
mov
jo
fisub
sub
repz
mov
adc
lahf
leave
mov
jo
xor
push
mov
xor
(bad)
stos
xchg
int
xchg
add
mov
stos
xlat
sbb
loop
aaa
cmp
xor
sbb
adc
xor
ja
push
and
push
mov
add
mov
ja
ja
jmp
mov
mov
cld
mov
icebp
inc
out
inc
sub
pop
fwait
sub
cld
pop
xchg
cli
inc
ret
jmp
idiv
fcom
cmp
xor
sub
fisub
mov
test
imul
cmp
jge
int
mov
mov
mov
mov
sub
xchg
scas
mov
and
xor
sub
hlt
xchg
mov
leave
mov
rcr
cmp
daa
xor
ficomp
imul
aas
add
jo
xchg
mov
mov
push
mov
add
mov
push
jno
push
sub
not
pop
mov
push
mov
mov
mov
mov
or
mov
mov
and
dec
aaa
inc
xchg
std
imul
pusha
(bad)
mov
fldenv
hlt
(bad)
cld
push
stos
repnz
and
ja
xor
xor
mov
cmps
mov
bnd
enter
loope
ja
out
inc
movs
dec
and
cmps
push
hlt
mov
test
rcl
xchg
sub
inc
adc
inc
mov
mov
(bad)
repnz
lods
or
lods
or
int
dec
mov
int3
inc
sub
into
dec
mov
fnstenv
mov
sub
hlt
xchg
ret
(bad)
cld
cs
bound
or
ja
dec
dec
xor
mov
inc
(bad)
retf
lods
xor
cdq
jo
and
imul
pusha
(bad)
mov
jge
push
mov
xor
cmp
pop
movzx
pop
retf
mov
nop
fwait
lods
pop
retf
daa
int
lods
pop
mov
scas
fucomp
mov
stos
mov
xchg
fs
movs
add
mov
and
ja
scas
data16
cli
loopne
ja
(bad)
fsub
mov
fnstsw
adc
retf
sbb
push
mov
retf
mov
daa
loope
scas
pop
mov
mov
pop
in
mov
jbe
mov
xor
lahf
push
loopne
ja
daa
leave
mov
xlat
xor
pop
push
mov
je
push
sub
pop
mov
stos
mov
mov
arpl
dec
push
mov
pop
jg
aaa
in
scas
pop
xor
add
mov
pop
retf
adc
mov
mov
retf
adc
retf
mov
and
jg
call
push
mov
iret
jb
mov
xchg
pop
retf
dec
bound
push
mov
lds
sub
lahf
pop
out
ja
test
ja
cmp
mov
pop
xor
jo
into
xor
mov
mov
addr16
out
pop
retf
cmc
pop
dec
mov
xor
ja
and
addr16
sbb
ja
mov
iret
jb
mov
xchg
pop
retf
dec
ret
mov
add
scas
pop
retf
mov
and
jg
add
push
sbb
ja
mov
iret
jb
mov
xchg
pop
retf
dec
mov
push
mov
dec
xor
mov
mov
mov
push
fist
lahf
cmp
xor
ja
cmp
mov
sub
and
pushf
jmp
mov
retf
retf
adc
retf
mov
retf
adc
xor
idiv
dec
push
xor
mov
mov
mov
push
fbld
pop
mov
pop
leave
mov
mov
pop
jge
loopne
mov
pop
retf
dec
sbb
push
mov
fidiv
mov
xor
lea
es
mov
pop
leave
mov
mov
pop
je
loopne
mov
pop
retf
dec
ret
mov
xchg
mov
xor
lea
push
lahf
repnz
ja
shl
add
mov
cmp
jmp
xchg
mov
add
mov
mov
lods
pop
retf
dec
pop
xor
mov
xor
pop
scas
jl
ja
pop
jmp
scas
pop
bound
fisub
jmp
scas
pop
mov
mov
repnz
pop
retf
mov
retf
adc
xor
lahf
(bad)
test
ja
cmp
mov
pop
xor
jo
sub
mov
xor
cld
out
pop
retf
cmc
pop
dec
mov
xor
ja
and
ficom
xchg
fisub
std
mov
push
ja
push
sbb
ja
mov
iret
jb
mov
xchg
pop
retf
dec
cmp
mov
(bad)
xor
push
mov
mov
push
fbld
pop
cwde
jl
ja
pop
leave
mov
mov
fst
adc
xor
hlt
test
push
aad
push
pop
or
loopne
ja
cmp
xchg
(bad)
retf
adc
mov
lods
pop
retf
cmp
xor
adc
(bad)
adc
xor
hlt
test
imul
mov
xor
lahf
push
xor
ja
cmp
mov
pop
xor
inc
retf
adc
retf
mov
and
jg
mov
ja
sbb
ja
mov
iret
jb
sbb
into
xor
int3
and
lods
pop
bound
ins
jge
ja
dec
retf
mov
dec
push
push
lods
mov
push
mov
retf
mov
xor
mov
xor
mov
sub
je
(bad)
retf
cdq
mov
lods
pop
retf
sub
je
(bad)
retf
lods
or
int
dec
mov
int3
hlt
xchg
ret
addr16
stos
sbb
ja
mov
jnp
mov
fbstp
mov
shl
and
pop
xor
pop
or
ja
pop
xor
lahf
cmp
xor
iret
jnp
xor
bnd
enter
retf
pop
enter
cmc
mov
mov
retf
pop
ror
das
mov
push
pop
retf
daa
leave
mov
jl
ja
dec
sub
push
mov
retf
mov
xor
lea
es
push
jl
ja
pop
leave
mov
mov
(bad)
pop
mov
int3
hlt
test
imul
mov
xor
(bad)
mov
dec
call
mov
mov
push
fbld
pop
mov
pop
leave
mov
mov
mov
xchg
pop
enter
xor
mov
pop
retf
mov
icebp
mov
pop
retf
daa
(bad)
movs
inc
mov
mov
fmul
mov
mov
mov
and
ja
or
mov
mov
jb
push
ja
daa
int
lods
pop
cmp
adc
daa
int
lods
pop
mov
mov
ja
fisub
ror
loop
ja
cmp
ficom
mov
or
xlat
int3
(bad)
xchg
les
ficom
xchg
fs
mov
lods
xor
pop
enter
xor
mov
das
mov
lods
pop
retf
adc
mov
lds
cmps
pop
retf
mov
retf
sub
daa
cmp
jmp
push
repnz
ins
mov
(bad)
ins
mov
xor
hlt
test
(bad)
jmp
push
pop
or
popf
xor
(bad)
mov
dec
outs
dec
push
mov
xor
lea
es
cwde
jl
ja
pop
leave
mov
mov
fld
mov
xor
hlt
test
push
aad
push
pop
or
popf
xor
mov
push
retf
dec
test
mov
mov
ja
daa
ror
mov
or
mov
mov
int
lods
pop
cmp
pop
daa
cmps
mov
xor
mov
mov
pop
dec
test
mov
mov
mov
push
fbld
pop
push
jl
ja
pop
leave
mov
mov
fucomp
ins
mov
xor
hlt
test
imul
mov
xor
(bad)
mov
retfw
sub
lahf
ds
xor
ja
cmp
mov
pop
xor
inc
retf
adc
retf
mov
and
jg
nop
jmp
push
pop
or
pushf
xor
lahf
pushfw
xor
ja
cmp
mov
pop
xor
jo
push
dec
push
mov
xor
cld
out
pop
retf
cmc
pop
dec
mov
xor
ja
and
addr16
sbb
ja
mov
iret
jb
mov
sub
pop
retf
dec
sub
mov
ret
ins
jns
xor
ja
test
ja
cmp
mov
pop
xor
inc
retf
adc
retf
mov
and
jg
adc
ja
sbb
ja
mov
iret
jb
mov
xchg
pop
retf
dec
cli
dec
push
mov
mov
jge
mov
mov
push
fist
lahf
sub
xor
mov
sub
and
pushf
jmp
mov
pop
pop
(bad)
loopne
mov
pop
retf
dec
mov
push
mov
lds
sub
lahf
outs
lahf
xor
ja
cmp
mov
pop
xor
inc
retf
adc
retf
mov
and
jg
mov
or
lahf
xor
lahf
push
lahf
xor
ja
cmp
mov
pop
xor
inc
retf
adc
retf
mov
and
jg
mov
or
lahf
xor
mul
dec
repnz
push
mov
xor
lea
es
mov
pop
leave
mov
mov
mov
mov
sub
daa
cmp
fst
outs
mov
(bad)
outs
mov
xor
hlt
test
push
aad
push
pop
or
sahf
xor
pop
push
jl
ja
pop
leave
mov
mov
fnstsw
outs
mov
xor
hlt
test
push
aad
push
pop
or
sahf
xor
iret
and
xor
repnz
pop
enter
(bad)
mov
xor
inc
xor
mov
jg
ja
dec
cmp
mov
fimul
mov
mov
mov
push
fbld
pop
mov
pop
leave
mov
mov
pop
test
out
retf
dec
into
dec
push
mov
or
jge
mov
mov
push
fbld
pop
mov
pop
leave
mov
mov
mov
and
xor
ja
sbb
ja
mov
iret
jb
sbb
into
xor
int3
and
lods
pop
bound
ins
jge
ja
dec
inc
dec
push
mov
in
adc
retf
mov
and
jg
mov
pop
ja
mov
jne
es
fnsave
mov
retf
and
out
mov
retf
dec
mov
push
mov
ror
pop
leave
mov
pop
enter
or
lahf
lods
pop
retf
xchg
xor
mov
mov
(bad)
icebp
fucom
mov
retf
std
imul
pusha
(bad)
mov
fnstcw
mov
ss
sub
xor
(bad)
xchg
fs
push
dec
push
js
out
daa
cmp
call
mov
push
emms
push
sub
inc
stos
sub
sbb
adc
retf
retf
push
and
and
mov
lods
mov
xor
imul
cmp
call
ja
and
movs
mov
jle
ja
js
xor
adc
mov
ficom
mov
adc
(bad)
jge
push
std
cld
mov
sub
idiv
icebp
arpl
in
or
int
sub
inc
stos
sub
hlt
idiv
enter
mov
jbe
ss
hlt
mov
mov
mov
out
cld
push
cmps
xor
push
mov
retf
pop
sbb
fisub
lods
fsub
cmp
jb
dec
jle
push
mov
popa
jne
loopne
loop
pop
retf
dec
add
mov
retf
pop
xchg
mov
xor
cli
das
pop
retf
idiv
jb
div
jbe
sub
(bad)
stos
mov
fnsave
mov
enter
adc
pop
retf
xchg
xor
mov
retf
inc
add
sub
fsubr
dec
mov
mov
mov
idiv
jbe
div
jbe
sub
mul
xor
leave
data16
enter
ret
mov
xor
mov
xor
ja
dec
or
mov
xor
mov
xor
ja
mov
and
ja
cmc
add
fst
data16
imul
fnstsw
pop
retf
mov
leave
mov
enter
fst
out
enter
and
pop
retf
cs
cmp
pop
retf
cmp
mov
retf
daa
or
shl
(bad)
(bad)
ds
cmc
add
fisttp
mov
ret
jbe
mov
xor
mov
xor
(bad)
xchg
das
mov
scas
pop
retf
daa
leave
mov
xor
mov
retf
enter
sbb
mov
xor
(bad)
jp
mov
mov
repnz
retf
mov
mov
lods
pop
retf
and
ja
mov
retf
mov
je
push
das
mov
lods
pop
retf
mov
mov
retf
das
mov
lods
pop
retf
mov
pop
ja
mov
leave
mov
ret
mov
in
ja
mov
retf
sbb
ja
sub
pop
stos
sub
mov
ss
daa
test
mov
xor
mov
xor
repnz
mov
sbb
movs
test
mov
lods
pop
retf
xlat
jmp
inc
push
mov
inc
ins
cmp
ja
dec
pop
inc
push
mov
retf
sub
dec
push
sar
jle
(bad)
pusha
pop
push
fidiv
ja
and
ja
test
ja
mov
xor
ja
das
mov
lods
pop
retf
dec
add
pop
jbe
enter
das
mov
lods
pop
retf
out
mov
retf
xlat
adc
idiv
enter
fisubr
pop
test
not
cmp
idiv
enter
mov
retf
xchg
xor
mov
xor
ja
push
sar
(bad)
ror
mov
push
ja
enter
push
enter
test
ret
retf
push
pop
ja
sub
pushf
pop
sbb
push
mov
pop
mov
outs
mov
fiadd
fwait
inc
icebp
arpl
fdivr
and
aad
xor
(bad)
fisub
add
cli
inc
push
mov
pusha
mov
pop
add
fisub
add
mov
mov
mov
xor
inc
push
data16
repnz
xor
inc
push
cmp
push
pop
cmp
push
pop
xor
pop
adc
cmp
push
push
mov
sbb
push
mov
arpl
push
mov
sub
ss
(bad)
push
push
mov
xor
mov
int
mov
retf
sub
hlt
xchg
cmps
gs
push
xor
js
out
cli
pop
movs
xor
add
inc
push
mov
mov
js
out
cli
pop
movs
xor
test
daa
mov
icebp
cmp
push
pop
mov
rol
xor
pop
adc
and
inc
push
mov
pop
ja
retf
adc
fisttp
xchg
and
mov
xor
aad
mov
and
hlt
(bad)
push
pop
push
or
and
inc
lea
dec
mov
xor
cld
push
stos
mov
stos
mov
(bad)
xchg
sbb
nop
fisub
lea
xchg
daa
mov
push
mov
retf
das
mov
mov
retf
(bad)
jmp
pop
push
mov
cmp
ret
mov
jo
push
mov
aad
lods
dec
mov
mov
stos
cmc
add
mov
es
fstp
mov
sar
(bad)
push
aad
lods
sub
inc
xchg
loop
das
xchg
daa
mov
push
mov
retf
das
mov
mov
retf
dec
pop
pop
push
mov
mov
mov
pop
xor
xchg
xor
jle
xlat
sub
out
aad
lods
pop
inc
jnp
jbe
ja
xchg
cmc
aaa
mov
jmp
ja
or
or
outs
mov
jmp
adc
pop
push
mov
push
or
repz
mov
(bad)
icebp
pop
jae
mov
xor
mov
push
mov
pop
jg
js
lea
dec
push
retf
lods
pop
mov
pop
retf
adc
xor
mul
sub
pop
mov
jge
ja
daa
xor
lahf
push
xchg
xor
lahf
mov
xor
ja
cmp
mov
pop
xor
inc
retf
adc
retf
dec
retf
mov
mov
mov
mov
mov
push
fistp
cli
xchg
xor
ja
cmp
mov
das
mov
pop
retf
cli
jmp
ja
pop
retf
add
ja
and
addr16
sbb
ja
mov
iret
jb
mov
xchg
mov
fucomp
pusha
mov
mov
mov
xchg
jmp
pop
retf
es
ja
and
jg
loop
ja
sbb
ja
mov
iret
jb
mov
xchg
mov
(bad)
pusha
mov
(bad)
mov
xor
hlt
test
stos
push
ja
sbb
push
mov
mov
mov
ins
stos
adc
retf
dec
retf
mov
inc
cmp
push
das
mov
mov
retf
sub
push
das
mov
mov
retf
jle
ja
and
arpl
push
ret
daa
shr
adc
ja
sbb
ja
mov
iret
jb
mov
xchg
mov
fnstsw
xchg
stos
pop
jge
loopne
cli
(bad)
mov
(bad)
popa
mov
fld
popa
mov
xor
hlt
test
push
aad
push
das
mov
mov
retf
ss
ja
and
jg
mov
mov
mov
retf
and
ja
and
jg
push
ret
daa
lds
mov
sbb
ja
mov
iret
jb
mov
imul
xor
and
lods
pop
bound
or
ja
pop
xor
lahf
inc
nop
xor
pop
jp
ja
fisub
xor
lahf
jbe
xor
lahf
mov
xor
ja
cmp
mov
pop
xor
inc
retf
adc
retf
dec
retf
mov
jle
adc
retf
dec
fiadd
mov
lds
sub
lahf
repnz
xor
ja
cmp
mov
pop
xor
inc
retf
adc
retf
dec
mov
mov
das
test
push
inc
retf
dec
sahf
inc
push
mov
push
inc
push
mov
xor
lea
and
mov
daa
xor
lahf
(bad)
xchg
xor
mul
pop
inc
jnp
daa
xor
pop
jge
ja
fisub
xor
lahf
outs
xchg
xor
lahf
dec
xchg
xor
ja
cmp
mov
pop
xor
inc
retf
adc
retf
dec
push
inc
push
mov
xor
repnz
inc
retf
dec
adc
mov
(bad)
inc
push
mov
xor
lea
and
mov
daa
xor
lahf
push
xchg
xor
iret
ins
int
ja
inc
mov
mov
fs
arpl
xor
inc
xor
xchg
lods
pop
bound
inc
jle
ja
pop
xor
lahf
into
xchg
xor
lahf
cs
xor
ja
cmp
mov
pop
xor
inc
retf
adc
retf
dec
scas
inc
push
mov
jmp
adc
retf
dec
mov
push
mov
fcmovnb
adc
xor
ja
cmp
mov
pop
xor
inc
retf
adc
retf
dec
outs
inc
push
mov
and
mov
xor
lea
sbb
push
xchg
xor
ja
cmp
mov
das
mov
pop
retf
cli
jmp
ja
pop
retf
pop
sbb
and
cmp
xor
mov
retf
scas
add
jg
mov
pop
ja
mov
jne
mov
sub
not
das
mov
mov
retf
scas
sbb
enter
pop
jmp
mov
retf
jge
mov
pop
or
mov
pushf
push
sub
pop
mov
stc
cld
mov
sub
idiv
icebp
arpl
in
dec
push
mov
sub
xor
(bad)
xchg
and
ja
push
mov
and
xor
and
add
ja
sub
fdivp
aaa
jbe
aaa
mov
(bad)
movs
inc
mov
mov
fnstsw
mov
dec
or
mov
xchg
xor
xor
push
mov
retf
mov
ja
daa
xchg
mov
xor
ja
das
mov
scas
pop
retf
or
sub
mov
retf
adc
lods
mov
push
mov
xor
mov
enter
fisttp
mov
int
xchg
pop
adc
pop
retf
daa
or
shl
jle
lods
mov
push
mov
ja
fisub
leave
mov
xor
mov
retf
mov
xor
mov
daa
lods
mov
mov
ja
daa
lea
inc
mov
not
mov
lods
pop
retf
mov
retf
mov
mov
scas
pop
retf
mov
retf
mov
pop
ja
das
mov
lods
pop
retf
mov
mov
mov
das
mov
lods
pop
retf
mov
pop
ja
mov
leave
mov
retf
mov
mov
push
mov
retf
bound
push
sub
jbe
sub
mov
add
mov
pop
or
pop
retf
mov
xor
repnz
retf
dec
sbb
xchg
ror
mov
xlat
jmp
pop
push
mov
inc
ins
cmp
ja
dec
inc
pop
push
mov
retf
sub
dec
push
sar
jle
lods
mov
push
mov
xor
ja
sub
pop
stos
sub
pop
push
mov
movs
mov
pop
ja
enter
jle
ja
daa
movs
mov
retf
cmp
pop
xor
ja
mov
retf
icebp
ffree
movs
pop
retf
stos
cmp
pop
es
ja
mov
mov
repnz
mov
dec
jp
push
mov
xor
mov
enter
jns
lods
pop
mov
mov
xor
ja
mov
pop
jl
loopne
and
and
arpl
inc
pop
cmp
retf
mov
retf
dec
mov
popa
xor
add
jecxz
pop
retf
jp
mov
cmp
pop
retf
xchg
and
(bad)
retf
scas
mov
mov
xor
pop
push
mov
retf
mov
or
ficomp
(bad)
fisub
ja
pop
xchg
mov
xor
mov
mov
mov
shl
xchg
cmps
xor
fwait
inc
icebp
arpl
fdivr
cmp
push
shl
and
data16
push
mov
mov
scas
fnstsw
push
pop
mov
sbb
push
mov
fst
mov
xor
xor
sbb
pop
inc
jnp
div
jbe
dec
xor
mov
xor
daa
cmp
jne
cmp
sbb
push
sub
sbb
jnp
xor
(bad)
push
push
mov
daa
add
mov
xor
sub
sub
iret
push
mov
ja
adc
hlt
(bad)
enter
push
shl
inc
push
mov
cmp
ja
fs
mov
push
inc
jae
(bad)
fidiv
pop
cmp
das
mov
mov
dec
rcr
mov
cmp
(bad)
mov
fnsave
loop
retf
scas
or
push
sub
pushf
inc
and
imul
mov
call
inc
mov
pop
cmc
mov
xor
dec
ja
(bad)
repnz
lods
xor
repnz
jno
loopne
cli
push
push
gs
or
cs
mov
pop
ja
loope
ja
pop
add
repnz
lahf
jp
xor
mov
bound
daa
cmp
xor
add
pop
push
mov
jo
add
xor
ja
xchg
sbb
adc
xor
js
out
hlt
stos
scas
dec
loop
imul
fiadd
fwait
pop
hlt
(bad)
leave
daa
cdq
sub
ja
push
sar
push
pop
mov
jne
mov
pop
jbe
mov
pop
out
mov
xor
lahf
outs
mov
sbb
xor
(bad)
fisub
add
add
xor
push
mov
add
ss
dec
dec
pop
push
mov
add
xor
push
mov
add
ss
dec
push
push
mov
add
aaa
push
dec
jp
push
mov
xor
sbb
int3
jecxz
lahf
push
xor
sbb
int3
jecxz
lahf
jp
xor
sbb
lock
lahf
dec
mov
sbb
repnz
lahf
pop
mov
xchg
fs
jbe
enter
xchg
lods
ss
dec
(bad)
push
push
mov
add
ss
dec
(bad)
push
push
mov
add
xor
push
mov
add
xor
push
mov
xor
sbb
push
call
or
push
addr16
mov
fucomp
adc
xor
ja
mov
aaa
push
enter
dec
test
push
dec
push
push
push
mov
mov
adc
xor
ja
mov
aaa
push
enter
and
push
mov
xor
inc
jg
je
mov
add
call
aam
xor
pop
int3
jecxz
lahf
mov
pop
retf
aaa
jne
mov
add
addr16
xor
imul
xor
ja
pop
retf
cmp
adc
add
adc
xor
pop
int3
jecxz
lahf
test
jae
je
mov
add
out
adc
xor
push
int3
jecxz
lahf
rol
(bad)
fisub
mov
fst
dec
cmp
mov
push
enter
es
xor
push
mov
shl
mov
push
dec
loopne
and
stos
jo
xor
ja
xlat
cmp
mov
fs
fwait
mov
xor
mov
stos
ss
enter
ficom
ja
and
xor
xor
and
enter
xchg
stos
ss
enter
out
pop
push
push
gs
push
pop
push
xor
mov
gs
(bad)
jge
ja
inc
out
xor
push
mov
xor
ja
mov
je
cmp
jo
js
(bad)
(bad)
gs
push
mov
out
xor
adc
adc
add
call
jp
mov
inc
addr16
retf
add
xor
push
sub
js
(bad)
(bad)
gs
pop
mov
jmp
mov
adc
add
adc
pop
ja
mov
pop
ja
mov
aaa
ja
enter
enter
dec
xor
mov
arpl
int3
jecxz
lahf
xchg
inc
addr16
retf
add
mov
inc
push
mov
sbb
daa
cmp
out
xor
adc
adc
add
adc
xor
inc
addr16
retf
add
mov
push
push
mov
sbb
daa
cmp
out
lods
adc
adc
add
ja
xchg
add
adc
jno
adc
xor
push
retf
push
mov
xor
lods
adc
xor
push
push
mov
xor
inc
int3
jecxz
sbb
repz
sbb
push
mov
xor
ja
repnz
stc
mov
xor
ja
mov
xor
ja
mov
je
cmp
ja
cmp
pop
adc
or
pop
push
mov
jmp
mov
adc
add
jmp
xor
xor
adc
push
push
push
mov
xor
jbe
mov
je
mov
enter
xchg
stos
ss
enter
ret
push
retf
push
mov
xor
pop
push
mov
jmp
mov
adc
add
mov
in
ja
mov
je
cmp
ja
cmp
or
stc
mov
xor
ja
repnz
stos
mov
xor
ja
mov
xor
ja
mov
mov
stos
ss
enter
out
ss
enter
retf
push
mov
xor
daa
cmp
out
xor
adc
push
ja
add
(bad)
movs
inc
mov
sbb
int3
jecxz
sbb
repz
sbb
push
mov
xor
ja
mov
lods
adc
xor
push
push
mov
xor
inc
int3
jecxz
sbb
repz
sbb
dec
mov
xor
ja
repnz
xor
mov
ja
mov
xor
ja
mov
je
cmp
je
cmp
xor
ja
(bad)
pop
ja
mov
ja
cmp
xor
xchg
test
push
enter
xchg
stos
ss
enter
out
ss
enter
retf
push
mov
xor
daa
cmp
lods
adc
pop
ja
add
ja
xchg
add
adc
push
xlat
adc
xor
push
retf
push
mov
xor
test
mov
xor
ja
ret
push
add
ja
xchg
add
adc
push
xlat
adc
xor
ja
mov
xor
aad
mov
xor
ja
xchg
ja
add
loop
mov
mov
inc
addr16
retf
add
cmp
xor
pop
push
mov
jmp
mov
xor
ja
mov
mov
stos
ss
enter
ret
push
enter
retf
push
mov
xor
test
mov
xor
ja
push
adc
push
add
ja
xchg
add
adc
jno
adc
xor
jbe
mov
xor
scas
adc
xor
push
push
mov
xor
mov
pop
sbb
fisub
lock
pop
retf
imul
fiadd
fwait
dec
hlt
(bad)
enter
imul
add
fisub
or
fstp
pop
retf
retf
adc
retf
and
cmp
sbb
fisub
ja
xchg
cmp
jno
mov
and
enter
xchg
stos
ss
enter
out
pop
push
push
gs
push
pop
push
xor
mov
gs
(bad)
jge
ja
inc
out
xor
push
mov
xor
ja
mov
je
cmp
jo
js
(bad)
(bad)
gs
push
mov
in
xor
adc
adc
call
ds
ja
mov
je
cmp
je
cmp
jo
js
(bad)
(bad)
gs
pop
mov
jmp
mov
adc
xlat
adc
pop
ja
mov
pop
ja
mov
aaa
ja
enter
enter
dec
scas
push
push
mov
arpl
int3
jecxz
lahf
stos
mov
retf
cmp
retf
add
cmp
pop
adc
mov
arpl
mov
jmp
repnz
xor
push
into
jecxz
idiv
dec
lods
adc
xor
push
repnz
dec
mov
ja
cmp
xor
ss
dec
mov
dec
ret
add
xlat
and
sbb
xchg
fucomp
adc
xor
sbb
push
mov
je
mov
enter
xchg
stos
ss
enter
ret
push
retf
push
mov
pop
or
add
jmp
repnz
xor
push
repnz
(bad)
stos
mov
xor
ss
enter
ret
push
retf
push
mov
pop
fst
xor
daa
cmp
xor
adc
sub
add
call
cmps
pop
retf
pop
add
jecxz
sbb
repz
sbb
push
mov
xor
push
retf
push
repnz
and
loopne
pop
mov
ja
mov
xor
ja
mov
je
cmp
je
cmp
xor
ja
mov
gs
adc
ja
js
xor
repnz
lods
ss
sbb
inc
push
mov
fsin
xchg
enter
xchg
stos
ss
enter
out
ss
enter
mov
xor
pop
push
mov
out
xor
adc
sub
add
jmp
add
adc
jno
adc
pop
into
push
mov
xor
ja
retf
adc
xor
imul
xor
inc
int3
jecxz
sbb
repz
sbb
push
mov
xor
ja
repnz
or
jns
ja
mov
xor
ja
mov
je
cmp
je
cmp
xor
ja
mov
gs
add
ja
cmp
xor
loop
xor
xor
xchg
stos
ss
enter
ret
push
enter
mov
pop
arpl
mov
movs
aad
mov
xor
ja
fisubr
ja
add
loop
mov
xor
inc
addr16
retf
add
cmp
pop
arpl
mov
jmp
jbe
loopne
pop
push
mov
sub
add
ja
xchg
add
adc
push
xlat
adc
pop
sub
mov
ja
and
(bad)
jge
ja
mov
xor
jno
mov
je
cmp
je
cmp
je
cmp
xor
ja
mov
gs
mov
ja
cmp
xor
sahf
mov
xchg
xor
lods
pop
lea
mov
jo
fisub
lods
cmps
pop
retf
imul
fiadd
fwait
dec
icebp
arpl
in
add
pop
sub
xor
ja
and
sbb
push
mov
cmp
ja
fs
lods
lods
mov
push
mov
fucomp
dec
mov
ffree
dec
mov
xor
ja
mov
mov
cli
push
push
gs
push
push
gs
push
pop
mov
mov
dec
out
xor
idiv
and
outs
push
leave
add
enter
pop
pop
and
pop
jnp
ja
xlat
cmp
mov
retf
mov
cmc
add
xor
add
cmp
push
retf
push
and
or
pop
retf
mov
mov
mov
ror
jbe
mov
sbb
sub
jbe
sub
idiv
retf
adc
retf
dec
push
push
mov
xor
ja
push
int3
inc
(bad)
jbe
mov
retf
xor
mov
xor
(bad)
xchg
and
push
xlat
and
mov
ja
fisub
xor
lahf
dec
mov
retf
mov
and
xor
mov
xor
add
and
adc
retf
dec
fisub
mov
mov
jb
mov
inc
loop
xor
mov
xor
add
jle
adc
retf
dec
and
mov
lods
movs
inc
cmp
test
lods
pop
retf
add
ja
and
pop
xlat
and
rcl
ja
fisub
xor
lahf
fidiv
sbb
fisub
lods
stos
inc
cmp
test
lods
pop
retf
into
and
and
pop
xlat
and
mov
ja
fisub
xor
lahf
push
mov
ja
(bad)
jl
mov
jbe
loopne
cli
(bad)
mov
fisttp
mov
cmp
inc
retf
adc
retf
dec
adc
mov
inc
cmp
mov
lods
pop
retf
mov
ja
sub
xor
retf
and
pop
xlat
and
push
adc
fisub
xor
lahf
mov
mov
in
xor
adc
retf
retf
adc
retf
jnp
ja
sbb
xor
adc
retf
test
mov
and
pop
ficom
xchg
fisub
int
lods
pop
mov
mov
xor
and
inc
jg
inc
xor
add
int
stos
sub
(bad)
movs
hlt
(bad)
dec
mov
xor
add
cwde
lods
pop
mov
pop
stos
cmc
add
xor
ja
std
imul
xor
sub
idiv
icebp
arpl
in
movs
or
ins
and
add
mov
or
push
retf
adc
retf
dec
push
popa
push
mov
xor
ja
push
int3
inc
push
int
lods
and
jbe
mov
fndisi(8087
loopne
cli
(bad)
dec
ret
repnz
out
push
int
lods
mov
xchg
movs
pop
retf
inc
and
and
je
mov
nop
loope
xor
mov
xor
ja
inc
mov
mov
fs
mov
xlat
and
push
adc
fisub
fadd
repnz
ja
pop
(bad)
(bad)
lods
pop
xor
inc
retf
adc
retf
dec
mov
push
mov
retf
xlat
and
adc
fisub
fadd
ds
ja
pop
(bad)
(bad)
lods
pop
xor
inc
retf
adc
retf
dec
bound
mov
mov
pop
(bad)
(bad)
lods
pop
cmp
les
mov
retf
dec
push
bound
mov
mov
xlat
and
fcom
ja
fisub
fadd
dec
mov
ja
pop
(bad)
(bad)
lods
pop
aas
add
lahf
les
mov
retf
dec
retf
mov
retf
xlat
and
call
sub
ja
push
ret
daa
aad
lods
pop
mov
(bad)
lods
pop
cmp
inc
retf
adc
retf
dec
mov
mov
retf
xlat
and
push
push
ja
fisub
fadd
div
(bad)
(bad)
lods
pop
cmp
inc
retf
adc
retf
dec
mov
pop
repz
cli
(bad)
dec
ret
repnz
pop
retf
push
sar
(bad)
jle
mov
ja
cmp
int3
fwait
lods
pop
mov
inc
sub
imul
push
int
lods
nop
inc
jp
pop
fld
xlat
cdq
ss
and
neg
xor
(bad)
(bad)
jp
mov
repz
mov
xor
ja
jecxz
mov
(bad)
pop
daa
out
jne
mov
xor
mov
xor
mov
xor
push
and
dec
pop
daa
sbb
mov
retf
sbb
push
mov
loope
lods
pop
mov
(bad)
lods
pop
gs
data16
ja
daa
leave
mov
xor
hlt
out
pop
int
lods
mov
sub
loopne
shl
fbstp
dec
mov
inc
cdq
mov
aam
aaa
ja
and
pop
into
jecxz
jne
xchg
pop
out
loopne
pop
jns
ja
fisub
leave
mov
xor
xchg
fs
out
loopne
pop
dec
jnp
ja
daa
leave
(bad)
lods
pop
gs
stos
mov
ja
sub
retf
push
mov
retf
dec
push
arpl
(bad)
les
mov
mov
movs
pop
retf
das
mov
stos
pop
retf
mov
xor
lods
pop
retf
push
and
retf
adc
retf
dec
cli
pusha
push
mov
mov
lods
pop
retf
mov
ja
das
mov
scas
pop
retf
cmps
gs
(bad)
pop
int
lods
repnz
lea
pop
int
lods
repnz
xchg
mov
ja
daa
leave
(bad)
lods
pop
gs
div
pop
or
leave
mov
retf
scas
cmp
pop
daa
push
jbe
mov
retf
bound
daa
mov
sti
mov
mov
push
ret
daa
in
lods
pop
mov
(bad)
lods
pop
aas
js
xchg
xor
push
pop
or
add
cmp
xor
stos
pop
retf
mov
icebp
cmp
xchg
lods
pop
retf
xchg
daa
ja
das
mov
lods
pop
retf
xchg
and
sub
pushf
jne
mov
movs
pop
retf
cmps
leave
mov
mov
movs
pop
retf
cmps
leave
mov
mov
hlt
out
jbe
mov
ret
daa
stc
sub
(bad)
lods
pop
mov
mov
retf
adc
retf
dec
dec
popa
push
mov
mov
stos
pop
retf
data16
sub
cli
out
pop
retf
mov
xor
mov
pop
aaa
mov
sub
mul
das
mov
stos
pop
retf
pop
ror
mov
int
lods
repnz
inc
mov
retf
mov
retf
fidiv
jbe
dec
data16
mov
retf
enter
push
int
lods
retf
adc
(bad)
mov
das
mov
scas
pop
retf
pop
sbb
outs
retf
cmp
nop
stos
cmc
js
test
mov
retf
mov
ja
dec
sbb
push
mov
xor
ja
dec
cwde
lea
div
idiv
push
dec
mov
mov
xchg
inc
scas
test
cmp
test
push
mov
daa
ja
sub
jle
(bad)
and
mov
enter
mov
ja
and
jmp
push
stos
xchg
inc
int3
jecxz
mov
repnz
push
ss
xor
retf
retf
adc
xor
ja
xor
push
mov
xor
ja
and
mov
mov
xor
cdq
lods
pop
mov
stos
fnstsw
push
retf
adc
retf
dec
ds
lods
pop
mov
inc
lahf
retf
mov
xor
ret
adc
xor
nop
(bad)
das
ja
dec
xchg
arpl
(bad)
movs
push
shl
xchg
pop
xor
fidiv
(bad)
xchg
and
ficomp
loop
dec
retf
daa
xchg
gs
inc
arpl
cmp
out
adc
mov
fs
xchg
push
fbstp
dec
mov
inc
fs
(bad)
mov
dec
retf
daa
xchg
(bad)
adc
mov
test
mov
fmul
inc
mov
div
lods
repz
dec
retf
fs
mov
daa
xchg
call
ja
cmp
xor
mov
scas
and
and
xor
xor
call
fisub
test
sbb
stos
fwait
lods
pop
gs
adc
daa
xchg
call
retf
sub
das
mov
mov
cmps
and
push
enter
lods
xor
push
push
mov
xor
ja
fs
xor
adc
xor
mov
xor
ja
les
ja
xor
adc
xor
ja
jp
scas
fisub
retf
retf
xchg
jae
adc
xor
fmul
add
cmp
push
retf
adc
xor
mov
xor
ja
les
ja
xor
adc
xor
ja
data16
out
sbb
mov
xor
ja
pop
mov
mov
mov
pop
ja
mov
jne
push
cmp
ja
cmp
ja
sub
cmp
gs
(bad)
lods
xor
mov
cli
push
sbb
(bad)
pop
fimul
pop
mov
fimul
adc
or
xlat
int3
sbb
add
dec
retf
pop
inc
ret
mov
enter
sbb
push
retf
adc
bnd
mov
xor
mov
cli
push
sbb
(bad)
pop
fimul
inc
mov
fimul
adc
or
xlat
int3
sbb
add
dec
retf
pop
inc
ret
mov
enter
sbb
push
retf
adc
pop
js
mov
ds
mov
xor
(bad)
mov
adc
mov
out
xor
repnz
stos
ss
sub
fisub
mov
or
pop
ja
push
cmp
sub
cmp
xor
ja
out
idiv
gs
push
mov
fucom
inc
mov
repnz
mov
in
pop
mov
div
push
mov
xor
retf
add
js
mov
add
adc
pop
ja
mov
pop
ja
push
ja
cmp
xor
push
mov
ja
mov
mov
ja
mov
xor
les
inc
jp
mov
mov
jl
mov
ins
pop
mov
ja
add
jp
mov
retf
dec
xchg
pusha
push
mov
xor
loop
dec
retf
daa
cdq
cdq
lods
pop
xor
mov
mov
call
fisttp
out
xor
ja
repnz
lds
hlt
xchg
mov
mov
aas
push
ja
push
xor
out
xor
lahf
(bad)
or
mov
jp
scas
fisub
repnz
dec
retf
enter
retf
adc
fnstsw
mov
cmp
das
mov
mov
mov
inc
aaa
push
enter
dec
fidivr
mov
xor
adc
sbb
int3
jecxz
lahf
or
xor
mov
or
das
jo
add
jns
mov
pop
ja
out
daa
mov
stos
cmc
add
pusha
and
idiv
icebp
arpl
in
mov
repnz
xor
pop
mov
push
mov
int
pop
es
jbe
mov
xor
ja
es
jne
mov
xor
jbe
mov
xor
ja
lods
mov
push
mov
xor
ret
adc
xor
lods
adc
ja
mov
sub
(bad)
stos
mov
fldcw
pop
retf
adc
fisub
fisttp
mov
mov
pop
sbb
scas
xor
repz
mov
std
mov
xchg
ss
dec
ret
mov
mov
mov
in
mov
mov
pop
(bad)
push
mov
mov
scas
pop
retf
jle
mov
loope
lods
pop
push
loop
pop
retf
jb
inc
cmp
retf
daa
jmp
cld
(bad)
inc
enter
mov
scas
pop
retf
mov
jno
adc
xor
ja
and
adc
loopne
ja
es
jo
mov
xor
ja
push
pop
dec
push
mov
ja
push
and
pop
out
xor
lahf
lods
dec
retf
and
pop
out
xor
jo
mov
ja
mov
sti
fmul
mov
int
xchg
add
xor
mov
push
mov
xor
mov
xor
ja
out
add
inc
jg
mov
ja
sbb
pop
push
mov
(bad)
mov
sub
fisub
int
lods
pop
mov
cmp
movs
aam
mov
inc
(bad)
adc
add
inc
push
mov
mov
push
push
mov
xchg
aam
mov
cmp
adc
and
adc
xor
add
(bad)
jnp
mov
retf
cmps
dec
(bad)
adc
xchg
aam
mov
add
adc
and
addr16
retf
lods
mov
stos
jnp
mov
xor
scas
scas
pop
retf
and
ja
pop
aad
lods
pop
xor
mov
xor
mov
xor
ja
pop
sbb
fisub
mov
xor
mov
je
mov
and
ja
sbb
mov
xor
jl
mov
je
mov
dec
ret
jb
mov
mov
mov
retf
daa
ret
mov
xor
cmp
ja
das
mov
lods
pop
retf
xchg
mov
adc
xor
mov
or
xlat
int3
hlt
stos
cmps
inc
push
mov
xor
mov
retf
scas
or
jae
xor
scas
adc
aas
ja
pop
add
repnz
lahf
es
ja
lds
ja
sbb
nop
fisub
fisttp
fisub
xor
lods
pop
gs
(bad)
push
enter
pop
pop
mov
xor
mov
xor
mov
xor
mov
jne
mov
and
ja
sbb
mov
xor
jge
mov
jne
mov
dec
ret
jae
mov
retf
push
aaa
rcr
mov
inc
(bad)
adc
pop
mov
ja
cmp
xor
aaa
push
dec
cli
jle
mov
xor
mov
mov
lods
pop
retf
cmps
xor
lods
pop
or
cmps
or
sbb
mov
xor
jle
mov
jne
mov
dec
mov
push
mov
retf
sub
dec
inc
ror
xchg
das
mov
lods
pop
retf
daa
ror
jp
ja
daa
ror
test
and
ja
daa
xor
lods
pop
mov
xchg
xor
push
mov
retf
xlat
adc
pop
xchg
jne
ja
mov
xor
xor
push
mov
xor
ja
das
mov
lods
pop
retf
daa
ror
jp
ja
daa
ror
test
and
ja
daa
xor
lods
pop
mov
stos
ss
dec
mov
retf
retf
xlat
adc
pop
sti
jne
ja
mov
xor
ss
dec
call
mov
int
xchg
das
mov
lods
pop
retf
daa
ror
jne
ja
daa
ror
test
ja
and
mov
xor
lods
pop
mov
stos
ss
dec
sbb
mov
retf
xlat
adc
pop
cmp
ja
mov
xor
ss
dec
jb
push
mov
xor
mov
or
xlat
int3
hlt
stos
mov
pop
ja
mov
xor
ss
xor
call
pop
mov
xor
mov
xor
pop
retf
xor
pop
retf
fidiv
dec
push
adc
pop
jg
ja
cmp
xor
ss
dec
out
push
mov
xor
mov
retf
mov
sbb
fisub
repnz
pop
retf
das
mov
scas
pop
retf
(bad)
in
xor
scas
pop
retf
jp
ja
and
cmp
ja
das
mov
lods
pop
retf
xchg
adc
xor
out
mov
inc
push
cmp
loop
push
enter
movs
xor
call
push
mov
xor
mov
xor
pop
retf
xor
pop
retf
fidiv
dec
push
adc
pop
mov
mov
xor
ss
dec
cs
mov
xor
mov
retf
push
aaa
rcr
cmp
(bad)
pop
retf
mov
int
stos
sub
cli
(bad)
mov
mov
mov
retf
adc
retf
dec
cmp
mov
mov
push
mov
fisttp
mov
gs
ja
mov
pop
ja
mov
jne
adc
xor
mov
xor
mov
mov
and
ja
push
xlat
jb
pop
xchg
lods
aaa
push
and
mov
and
jbe
xlat
int3
(bad)
nop
enter
push
enter
popw
arpl
jne
lods
pop
ror
mov
mov
scas
pop
retf
mov
xor
mov
mov
mov
push
aaa
rcr
pop
ja
aaa
lds
fidivr
ror
push
retf
mov
pop
ja
daa
lds
push
retf
adc
retf
fidiv
ja
pop
add
cmps
xor
xlat
adc
xor
sbb
push
retf
push
loop
push
ret
loop
lahf
jmp
mov
mov
mov
daa
ror
cmp
retf
pop
retf
push
xor
das
cmp
icebp
loopne
hlt
fwait
pop
jne
outs
mov
neg
scas
pop
retf
retf
adc
retf
push
xor
enter
push
enter
pop
jbe
dec
jecxz
push
pop
add
cmps
xor
mov
xor
xor
push
sub
pop
stos
sub
sbb
aas
push
ja
cmp
in
xor
adc
mov
aad
retf
sub
pop
add
jecxz
lahf
xchg
sub
(bad)
(bad)
inc
enter
repnz
inc
pop
inc
arpl
retf
dec
(bad)
jb
mov
mul
idiv
add
sbb
mov
mov
out
dec
push
mov
in
push
mov
cmp
xchg
mov
mov
adc
fucomp
adc
xor
(bad)
push
pop
mov
jmp
mov
adc
xor
xor
data16
jae
mov
je
es
jne
mov
sub
xor
inc
dec
aaa
jne
es
je
mov
cdq
add
jecxz
add
add
jecxz
lahf
jle
xor
call
rcr
xor
lahf
into
jecxz
lahf
inc
cmps
xor
call
rcr
xor
inc
pop
add
repnz
lahf
cmps
mov
mov
xor
cdq
add
push
sub
push
(bad)
loop
dec
data16
dec
sahf
stos
ss
cdq
add
jecxz
add
sub
jecxz
idiv
add
loop
add
sub
loop
dec
data16
cld
dec
ficom
int3
jecxz
add
sub
loop
dec
es
xor
dec
mov
out
add
inc
arpl
arpl
(bad)
xor
dec
xor
xchg
movs
das
ja
std
imul
and
jg
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
mov
leave
push
mov
or
sbb
mov
and
jg
out
jle
(bad)
sbb
xchg
in
jbe
and
push
daa
pop
fisubr
lods
mov
bound
rcr
add
sbb
jle
(bad)
xor
stos
add
mov
xor
ja
dec
push
cwde
lods
pop
push
nop
sti
mov
push
mov
ja
mov
xor
mov
ficomp
daa
xor
inc
xor
push
pop
xchg
cmc
into
lods
pop
retf
pop
(bad)
fldenv
jno
pop
xor
or
(bad)
rol
and
xor
push
pop
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
cmps
loopne
out
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
mov
adc
ret
.byte
.byte
ja
